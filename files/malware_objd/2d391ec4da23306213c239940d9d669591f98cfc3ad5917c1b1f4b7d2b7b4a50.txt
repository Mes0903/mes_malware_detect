
2d391ec4da23306213c239940d9d669591f98cfc3ad5917c1b1f4b7d2b7b4a50.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,ds:0x42920b
  40100e:	mov    eax,DWORD PTR [eax]
  401010:	and    DWORD PTR ds:0x429157,eax
  401016:	mov    eax,DWORD PTR [ebp+0x8]
  401019:	and    DWORD PTR ds:0x4291e7,0x0
  401023:	mov    ecx,DWORD PTR ds:0x4291e7
  401029:	inc    ecx
  40102a:	mov    DWORD PTR ds:0x4291e7,ecx
  401030:	cmp    DWORD PTR ds:0x4291e7,0xe
  401037:	jle    0x401072
  40103d:	jmp    0x40104b
  401042:	push   DWORD PTR [ebp-0x20]
  401045:	call   DWORD PTR ds:0x42a863
  40104b:	cmp    DWORD PTR ds:0x4291e7,0xd
  401052:	jne    0x401065
  401058:	mov    ecx,DWORD PTR ds:0x4291e7
  40105e:	inc    ecx
  40105f:	mov    DWORD PTR ds:0x4291e7,ecx
  401065:	cmp    DWORD PTR ds:0x4291e7,0x1c
  40106c:	jb     0x401023
  401072:	push   ebx
  401073:	sub    DWORD PTR ds:0x429157,0x3bd6
  40107d:	push   esi
  40107e:	mov    esi,DWORD PTR ds:0x429917
  401084:	mov    ecx,DWORD PTR ds:0x42a0c3
  40108a:	sub    ecx,esi
  40108c:	add    esi,DWORD PTR [esi+ecx*1]
  40108f:	push   edi
  401090:	mov    esi,0x75108ac
  401095:	xor    DWORD PTR ds:0x4291af,ebx
  40109b:	xor    eax,esi
  40109d:	mov    edi,0x3272f3
  4010a2:	sbb    DWORD PTR ds:0x4291f3,0x4c4b
  4010ac:	add    eax,edi
  4010ae:	and    DWORD PTR ds:0x429163,0x59cd
  4010b8:	mov    DWORD PTR [ebp-0x40],eax
  4010bb:	mov    eax,ds:0x42915f
  4010c0:	sbb    eax,DWORD PTR ds:0x42919f
  4010c6:	mov    ds:0x42915f,eax
  4010cb:	mov    eax,ds:0x42818b
  4010d0:	and    DWORD PTR ds:0x42918b,0x0
  4010da:	jmp    0x4010ee
  4010df:	xor    ecx,ecx
  4010e1:	xor    ecx,DWORD PTR ds:0x42918b
  4010e7:	inc    ecx
  4010e8:	mov    DWORD PTR ds:0x42918b,ecx
  4010ee:	cmp    DWORD PTR ds:0x42918b,0x1e
  4010f5:	jae    0x401144
  4010fb:	cmp    DWORD PTR ds:0x42918b,0xe
  401102:	ja     0x401144
  401108:	jmp    0x401123
  40110d:	push   DWORD PTR [ebp-0x24]
  401110:	push   0x428152
  401115:	push   0x4280c4
  40111a:	push   DWORD PTR [ebp-0x20]
  40111d:	call   DWORD PTR ds:0x42a86b
  401123:	cmp    DWORD PTR ds:0x42918b,0xd
  40112a:	jne    0x40113f
  401130:	xor    ecx,ecx
  401132:	or     ecx,DWORD PTR ds:0x42918b
  401138:	inc    ecx
  401139:	mov    DWORD PTR ds:0x42918b,ecx
  40113f:	jmp    0x4010df
  401144:	mov    eax,DWORD PTR [eax]
  401146:	mov    ecx,DWORD PTR ds:0x4291bf
  40114c:	sbb    DWORD PTR ds:0x42914f,ecx
  401152:	mov    DWORD PTR [ebp-0x3c],eax
  401155:	mov    eax,ds:0x429223
  40115a:	mov    ecx,DWORD PTR ds:0x42a0d3
  401160:	sub    eax,ecx
  401162:	add    eax,DWORD PTR [eax+ecx*1]
  401165:	mov    eax,ds:0x42839b
  40116a:	mov    DWORD PTR ds:0x429167,0x18
  401174:	cmp    DWORD PTR ds:0x429167,0x0
  40117b:	je     0x4011cb
  401181:	cmp    DWORD PTR ds:0x429167,0x3
  401188:	jle    0x4011cb
  40118e:	jmp    0x40119f
  401193:	push   DWORD PTR [ebp-0x24]
  401196:	push   DWORD PTR [ebp-0x14]
  401199:	call   DWORD PTR ds:0x42a86f
  40119f:	cmp    DWORD PTR ds:0x429167,0x4
  4011a6:	jne    0x4011b9
  4011ac:	mov    ecx,DWORD PTR ds:0x429167
  4011b2:	dec    ecx
  4011b3:	mov    DWORD PTR ds:0x429167,ecx
  4011b9:	mov    ecx,DWORD PTR ds:0x429167
  4011bf:	dec    ecx
  4011c0:	mov    DWORD PTR ds:0x429167,ecx
  4011c6:	jmp    0x401174
  4011cb:	mov    eax,DWORD PTR [eax]
  4011cd:	or     DWORD PTR ds:0x4291b7,0x5973
  4011d7:	mov    DWORD PTR [ebp-0x1c],eax
  4011da:	mov    DWORD PTR [ebp-0x34],0xf89c87a1
  4011e1:	sbb    ecx,ecx
  4011e3:	mov    eax,DWORD PTR [ebp-0x34]
  4011e6:	and    DWORD PTR ds:0x4291bf,ecx
  4011ec:	xor    eax,esi
  4011ee:	add    eax,edi
  4011f0:	adc    DWORD PTR ds:0x42919f,0x1e2a
  4011fa:	mov    DWORD PTR [ebp-0x40],eax
  4011fd:	mov    eax,ds:0x42830b
  401202:	mov    DWORD PTR [ebp-0x40],eax
  401205:	mov    eax,ds:0x42a0cf
  40120a:	mov    eax,DWORD PTR [eax]
  40120c:	and    DWORD PTR ds:0x4291f7,eax
  401212:	mov    eax,DWORD PTR [ebp-0x3c]
  401215:	adc    DWORD PTR ds:0x42914b,0x2509
  40121f:	mov    DWORD PTR [ebp-0x14],eax
  401222:	and    ecx,ecx
  401224:	mov    eax,DWORD PTR [ebp-0x14]
  401227:	xor    DWORD PTR ds:0x42918f,ecx
  40122d:	push   0x4
  40122f:	neg    ecx
  401231:	pop    ecx
  401232:	sub    ecx,eax
  401234:	and    DWORD PTR ds:0x42916b,0x0
  40123e:	jmp    0x40124e
  401243:	mov    eax,ds:0x42916b
  401248:	inc    eax
  401249:	mov    ds:0x42916b,eax
  40124e:	cmp    DWORD PTR ds:0x42916b,0x1e
  401255:	jae    0x40127d
  40125b:	cmp    DWORD PTR ds:0x42916b,0x27
  401262:	ja     0x40127d
  401268:	jmp    0x401278
  40126d:	push   0x4291bb
  401272:	call   DWORD PTR ds:0x42a873
  401278:	jmp    0x401243
  40127d:	add    ecx,DWORD PTR [ebp-0x1c]
  401280:	and    DWORD PTR ds:0x42915b,0x0
  40128a:	jmp    0x40129d
  40128f:	xor    eax,eax
  401291:	xor    eax,DWORD PTR ds:0x42915b
  401297:	inc    eax
  401298:	mov    ds:0x42915b,eax
  40129d:	cmp    DWORD PTR ds:0x42915b,0x1a
  4012a4:	jae    0x4012ec
  4012aa:	cmp    DWORD PTR ds:0x42915b,0xe
  4012b1:	jle    0x4012ec
  4012b7:	jmp    0x4012cc
  4012bc:	push   0x1df3
  4012c1:	push   0x428062
  4012c6:	call   DWORD PTR ds:0x42a877
  4012cc:	cmp    DWORD PTR ds:0x42915b,0xd
  4012d3:	jne    0x4012e7
  4012d9:	xor    eax,eax
  4012db:	xor    eax,DWORD PTR ds:0x42915b
  4012e1:	inc    eax
  4012e2:	mov    ds:0x42915b,eax
  4012e7:	jmp    0x40128f
  4012ec:	mov    DWORD PTR [ebp-0x2c],0xf89c85e1
  4012f3:	mov    DWORD PTR ds:0x4291d7,0x3a8d
  4012fd:	mov    DWORD PTR [ebp-0x18],ecx
  401300:	and    DWORD PTR ds:0x42916f,ecx
  401306:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  401310:	mov    eax,DWORD PTR [ebp-0x14]
  401313:	xor    DWORD PTR ds:0x4291e7,0x69e7
  40131d:	mov    DWORD PTR [ebp-0x9c],eax
  401323:	mov    eax,DWORD PTR [ebp-0x18]
  401326:	or     DWORD PTR ds:0x42916f,0x429173
  401330:	mov    DWORD PTR [ebp-0x98],eax
  401336:	and    DWORD PTR ds:0x429187,ecx
  40133c:	mov    eax,DWORD PTR [ebp-0x2c]
  40133f:	xor    eax,esi
  401341:	mov    DWORD PTR ds:0x4291ab,0x4dc6
  40134b:	add    eax,edi
  40134d:	mov    DWORD PTR [ebp-0x94],eax
  401353:	adc    DWORD PTR ds:0x429193,0x429197
  40135d:	lea    eax,[ebp-0x48]
  401360:	sbb    DWORD PTR ds:0x42914f,0x4291c3
  40136a:	mov    DWORD PTR [ebp-0x90],eax
  401370:	mov    eax,ds:0x42917f
  401375:	or     DWORD PTR ds:0x4291bf,eax
  40137b:	mov    eax,DWORD PTR [ebp-0xa0]
  401381:	adc    DWORD PTR ds:0x429187,0x4291df
  40138b:	xor    eax,esi
  40138d:	add    eax,edi
  40138f:	mov    DWORD PTR [ebp-0xa0],eax
  401395:	lea    eax,[ebp-0xa0]
  40139b:	and    DWORD PTR ds:0x42919f,0x4291a7
  4013a5:	push   eax
  4013a6:	mov    eax,DWORD PTR [ebp+0xc]
  4013a9:	mov    DWORD PTR ds:0x42917b,0x524d
  4013b3:	xor    eax,esi
  4013b5:	add    eax,edi
  4013b7:	and    DWORD PTR ds:0x429183,0x429193
  4013c1:	push   eax
  4013c2:	sub    DWORD PTR ds:0x429173,0x45d8
  4013cc:	mov    eax,ds:0x42832b
  4013d1:	xor    DWORD PTR ds:0x42917b,0x37ec
  4013db:	push   0x428281
  4013e0:	sub    DWORD PTR ds:0x4291e3,0x5ee0
  4013ea:	push   DWORD PTR [eax]
  4013ec:	xor    DWORD PTR ds:0x42916b,0x429197
  4013f6:	call   0x4085e5
  4013fb:	and    DWORD PTR ds:0x429153,0x0
  401405:	mov    edx,DWORD PTR ds:0x429153
  40140b:	inc    edx
  40140c:	mov    DWORD PTR ds:0x429153,edx
  401412:	cmp    DWORD PTR ds:0x429153,0x24
  401419:	jb     0x401442
  40141f:	jmp    0x401435
  401424:	push   0x4280d6
  401429:	push   DWORD PTR [ebp-0x18]
  40142c:	push   DWORD PTR [ebp-0x14]
  40142f:	call   DWORD PTR ds:0x42a87f
  401435:	cmp    DWORD PTR ds:0x429153,0x15
  40143c:	jb     0x401405
  401442:	mov    ebx,DWORD PTR [ebp-0x14]
  401445:	add    DWORD PTR ds:0x42914f,edx
  40144b:	mov    eax,DWORD PTR [ebp-0x18]
  40144e:	and    DWORD PTR ds:0x42916b,0x0
  401458:	jmp    0x40146a
  40145d:	mov    edx,DWORD PTR ds:0x42916b
  401463:	inc    edx
  401464:	mov    DWORD PTR ds:0x42916b,edx
  40146a:	cmp    DWORD PTR ds:0x42916b,0x17
  401471:	jae    0x4014b1
  401477:	cmp    DWORD PTR ds:0x42916b,0xc
  40147e:	ja     0x4014b1
  401484:	jmp    0x401492
  401489:	push   DWORD PTR [ebp-0x24]
  40148c:	call   DWORD PTR ds:0x42a883
  401492:	cmp    DWORD PTR ds:0x42916b,0xb
  401499:	jne    0x4014ac
  40149f:	mov    edx,DWORD PTR ds:0x42916b
  4014a5:	inc    edx
  4014a6:	mov    DWORD PTR ds:0x42916b,edx
  4014ac:	jmp    0x40145d
  4014b1:	mov    DWORD PTR [ebp-0x58],eax
  4014b4:	add    DWORD PTR ds:0x4291c7,edi
  4014ba:	mov    DWORD PTR [ebp-0x34],0xf89c8538
  4014c1:	mov    eax,0xf89c85a3
  4014c6:	inc    DWORD PTR ds:0x42916f
  4014cc:	mov    DWORD PTR [ebp-0x1c],eax
  4014cf:	lea    ecx,[eax-0x2]
  4014d2:	inc    DWORD PTR ds:0x42919b
  4014d8:	mov    DWORD PTR [ebp-0x28],ecx
  4014db:	movzx  edx,BYTE PTR ds:0x429163
  4014e2:	or     DWORD PTR ds:0x4291e7,edx
  4014e8:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  4014ef:	mov    DWORD PTR [ebp-0x8],eax
  4014f2:	and    DWORD PTR ds:0x4291e7,0x0
  4014fc:	jmp    0x40150c
  401501:	mov    eax,ds:0x4291e7
  401506:	inc    eax
  401507:	mov    ds:0x4291e7,eax
  40150c:	cmp    DWORD PTR ds:0x4291e7,0x11
  401513:	jae    0x401543
  401519:	cmp    DWORD PTR ds:0x4291e7,0x13
  401520:	jge    0x401543
  401526:	jmp    0x40153e
  40152b:	push   0x4280b5
  401530:	push   DWORD PTR [ebp-0x28]
  401533:	push   0x738c
  401538:	call   DWORD PTR ds:0x42a887
  40153e:	jmp    0x401501
  401543:	mov    eax,DWORD PTR [ebp-0x10]
  401546:	sbb    DWORD PTR ds:0x429193,edi
  40154c:	xor    eax,esi
  40154e:	sub    edx,DWORD PTR ds:0x429193
  401554:	mov    edx,0xffcd8d8d
  401559:	sub    edx,eax
  40155b:	mov    DWORD PTR ds:0x42915b,edx
  401561:	mov    DWORD PTR [ebp-0xc],edx
  401564:	movzx  eax,WORD PTR ds:0x4291f7
  40156b:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  401572:	mov    eax,DWORD PTR [ebp-0x8]
  401575:	mov    DWORD PTR [ebp-0x3c],ebx
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x4291d3,0x104a
  401584:	je     0x403bad
  40158a:	add    ecx,0x327f
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	mov    ecx,DWORD PTR [ebp-0x10]
  401596:	sbb    DWORD PTR ds:0x4291b3,0x52cd
  4015a0:	xor    eax,esi
  4015a2:	xor    ecx,esi
  4015a4:	lea    ecx,[eax+ecx*1+0x64e5e6]
  4015ab:	mov    eax,DWORD PTR [ebp-0xc]
  4015ae:	or     DWORD PTR ds:0x429153,0x67db
  4015b8:	xor    edx,edx
  4015ba:	div    ecx
  4015bc:	mov    eax,DWORD PTR [ebp-0x8]
  4015bf:	xor    ecx,0x4574
  4015c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4015c8:	xor    eax,esi
  4015ca:	or     DWORD PTR ds:0x4291df,0xa4f
  4015d4:	xor    ecx,esi
  4015d6:	or     DWORD PTR ds:0x42915f,0x4291eb
  4015e0:	sub    eax,ecx
  4015e2:	cmp    edx,eax
  4015e4:	jne    0x401764
  4015ea:	mov    eax,DWORD PTR [ebp-0xc]
  4015ed:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4015f4:	add    ecx,DWORD PTR ds:0x4291d7
  4015fa:	mov    eax,DWORD PTR [ebp-0x28]
  4015fd:	mov    ecx,DWORD PTR [ebp-0x18]
  401600:	sub    DWORD PTR ds:0x42916f,0x2374
  40160a:	xor    eax,esi
  40160c:	add    DWORD PTR ds:0x429197,0x6412
  401616:	xor    ecx,esi
  401618:	add    eax,edi
  40161a:	add    ecx,edi
  40161c:	mov    DWORD PTR ds:0x42914f,0x798e
  401626:	mov    BYTE PTR [ebp-0x21],dl
  401629:	mov    DWORD PTR ds:0x42916f,0x52dc
  401633:	cmp    eax,ecx
  401635:	mov    DWORD PTR ds:0x42918f,0x1786
  40163f:	jae    0x401707
  401645:	and    DWORD PTR ds:0x42915b,ecx
  40164b:	lea    ecx,[eax-0x3272f3]
  401651:	not    edx
  401653:	mov    DWORD PTR [ebp-0x14],ecx
  401656:	mov    edx,DWORD PTR [ebp-0x14]
  401659:	xor    edx,esi
  40165b:	xor    DWORD PTR ds:0x4291a7,0x52cf
  401665:	add    edx,0x7f55d8e3
  40166b:	lea    ecx,[ebp+eax*4-0xb4]
  401672:	mov    DWORD PTR [ecx],edx
  401674:	mov    edx,DWORD PTR ds:0x429193
  40167a:	mov    edx,DWORD PTR [ecx]
  40167c:	cmp    edx,0x244ecb9c
  401682:	jbe    0x4016a7
  401688:	add    DWORD PTR ds:0x42916b,0x3ac8
  401692:	add    DWORD PTR [ecx],0x405fcdd
  401698:	mov    DWORD PTR ds:0x42919f,0x6763
  4016a2:	jmp    0x4016b7
  4016a7:	add    DWORD PTR ds:0x42914f,0x4291af
  4016b1:	add    DWORD PTR [ecx],0xfdaf4323
  4016b7:	sub    ecx,0x38f7
  4016bd:	mov    ecx,DWORD PTR [ebp-0x18]
  4016c0:	xor    DWORD PTR ds:0x4291c7,0x8c7
  4016ca:	xor    ecx,esi
  4016cc:	dec    DWORD PTR ds:0x42915b
  4016d2:	inc    eax
  4016d3:	sbb    DWORD PTR ds:0x4291cf,0x4291df
  4016dd:	inc    DWORD PTR [ebp-0x14]
  4016e0:	add    DWORD PTR ds:0x4291f3,0x429193
  4016ea:	add    ecx,edi
  4016ec:	cmp    eax,ecx
  4016ee:	mov    DWORD PTR ds:0x4291d3,0x74e1
  4016f8:	jb     0x401656
  4016fe:	not    DWORD PTR ds:0x4291af
  401704:	mov    dl,BYTE PTR [ebp-0x21]
  401707:	xor    DWORD PTR ds:0x429153,edi
  40170d:	mov    eax,DWORD PTR [ebp-0x34]
  401710:	mov    DWORD PTR ds:0x429173,0x31f7
  40171a:	xor    al,0xac
  40171c:	xor    DWORD PTR ds:0x429157,0x429193
  401726:	mov    cl,0xd
  401728:	sub    cl,al
  40172a:	add    dl,cl
  40172c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40172f:	adc    DWORD PTR ds:0x4291c3,0x11c9
  401739:	xor    cl,0xac
  40173c:	sub    cl,0xd
  40173f:	and    DWORD PTR ds:0x4291ef,0x4291b7
  401749:	ror    dl,cl
  40174b:	movzx  ecx,WORD PTR ds:0x4291e3
  401752:	sbb    DWORD PTR ds:0x4291ef,ecx
  401758:	xor    eax,eax
  40175a:	mov    eax,DWORD PTR [ebp-0xc]
  40175d:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  401764:	mov    eax,DWORD PTR [ebp-0xc]
  401767:	adc    ecx,0x7a4f
  40176d:	mov    ecx,DWORD PTR [ebp-0x28]
  401770:	or     DWORD PTR ds:0x42918f,0x42919b
  40177a:	jmp    0x403b2b
  40177f:	pop    ss
  401780:	mov    eax,0x80c4d8c4
  401785:	pop    es
  401786:	mov    al,0x4
  401788:	add    eax,0x993192fe
  40178d:	mov    eax,0x838383e7
  401792:	sub    edi,0x5c
  401795:	add    DWORD PTR [ebx+0x3e242d2a],0x26
  40179c:	cmp    ah,BYTE PTR [eax]
  40179e:	sub    al,0x7a
  4017a0:	cmp    eax,0x767c7776
  4017a5:	jae    0x40181a
  4017a7:	jb     0x4017f4
  4017a9:	fcmovu st,st(5)
  4017ab:	(bad)  
  4017ac:	imul   edx,DWORD PTR [ecx+0x70],0x79a9607e
  4017b3:	jb     0x40181b
  4017b5:	int3   
  4017b6:	bound  edx,QWORD PTR [ebx+0x39]
  4017b9:	lea    eax,[ebx]
  4017bb:	xchg   esp,eax
  4017bc:	xchg   DWORD PTR [edx+edx*2+0x7c],esp
  4017c0:	inc    esp
  4017c1:	mov    DWORD PTR [edi+0x40bbb97c],esi
  4017c7:	sub    eax,0x3dd77fc
  4017cc:	push   0x46f21f7c
  4017d1:	rol    bl,cl
  4017d3:	repnz xchg esp,eax
  4017d5:	sub    bh,bl
  4017d7:	nop
  4017d8:	ss or  al,0x66
  4017db:	mov    al,0x93
  4017dd:	aad    0x4
  4017df:	jb     0x4017c3
  4017e1:	adc    eax,0x37030fe5
  4017e6:	and    DWORD PTR [ecx+0xd],edx
  4017e9:	aaa    
  4017ea:	jo     0x40185d
  4017ec:	(bad)  
  4017ed:	lods   al,BYTE PTR ds:[esi]
  4017ee:	sub    BYTE PTR [esi+0x1a],bl
  4017f1:	mov    bh,0xfc
  4017f3:	not    BYTE PTR [esi+0x30]
  4017f6:	test   DWORD PTR [ebx-0x2f],ecx
  4017f9:	pusha  
  4017fa:	push   es
  4017fb:	and    eax,DWORD PTR [ebx]
  4017fd:	cmp    DWORD PTR [esi+0x5ca1e278],0x2514be90
  401807:	fwait
  401808:	dec    esi
  401809:	or     BYTE PTR [edi+0x10888b3d],bl
  40180f:	jecxz  0x401843
  401811:	imul   edx,DWORD PTR [edx-0x79ab7bb],0xffffffcc
  401818:	xchg   ebx,eax
  401819:	ss xchg esi,eax
  40181b:	leave  
  40181c:	(bad)  
  40181d:	int    0x91
  40181f:	outs   dx,BYTE PTR ds:[esi]
  401820:	cmc    
  401821:	pop    edx
  401822:	imul   ecx,DWORD PTR [ebp+0xd],0x3f
  401826:	or     BYTE PTR [edi+0x18],al
  401829:	mov    dl,0x50
  40182b:	shl    DWORD PTR [ecx+ecx*2+0x26715d9],cl
  401832:	imul   esp,DWORD PTR [edi-0x46],0x6
  401836:	jno    0x4017f4
  401838:	add    DWORD PTR [ebx+0x1d],ebx
  40183b:	retf   0x2ccc
  40183e:	dec    ecx
  40183f:	jle    0x401825
  401841:	fld    QWORD PTR [esi+0x62]
  401844:	pusha  
  401845:	mov    BYTE PTR [esi+0xe08786],cl
  40184b:	push   edi
  40184c:	popf   
  40184d:	das    
  40184e:	and    al,0x61
  401850:	jl     0x40188e
  401852:	push   0x69
  401854:	xchg   edi,eax
  401855:	dec    edx
  401856:	jae    0x40180e
  401858:	mov    bh,0x5b
  40185a:	push   esp
  40185b:	stc    
  40185c:	and    ah,cl
  40185e:	jb     0x4018d3
  401860:	mov    cl,0xfc
  401862:	test   eax,0xd24db9f5
  401867:	pop    ss
  401868:	aas    
  401869:	xor    dh,BYTE PTR [esi-0x7e]
  40186c:	xor    DWORD PTR [esi],esi
  40186e:	jo     0x4018ef
  401870:	(bad)  
  401871:	int3   
  401872:	fld    TBYTE PTR [edi]
  401874:	lds    esp,FWORD PTR ds:[esi+0x4d]
  401878:	iret   
  401879:	stc    
  40187a:	aad    0x18
  40187c:	adc    DWORD PTR [eax],esp
  40187e:	(bad)  
  40187f:	(bad)  
  401880:	jmp    0x851ed788
  401885:	push   esi
  401886:	call   0x6d9e2cd8
  40188b:	cwde   
  40188c:	dec    esi
  40188d:	test   DWORD PTR cs:[eax+0x7d6c32c6],esi
  401894:	imul   esp,DWORD PTR ds:0xacb90b48,0xac54ae5e
  40189e:	outs   dx,BYTE PTR ds:[esi]
  40189f:	push   ss
  4018a0:	inc    esp
  4018a1:	pop    esi
  4018a2:	push   cs
  4018a3:	out    0xd2,al
  4018a5:	ret    0x44fa
  4018a8:	loope  0x4018b7
  4018aa:	xchg   BYTE PTR [edx+esi*1+0x5f],al
  4018ae:	out    dx,eax
  4018af:	loop   0x4018b5
  4018b1:	jo     0x401929
  4018b3:	out    0xc6,eax
  4018b5:	in     al,dx
  4018b6:	fnstsw WORD PTR [ebp-0x7b03483]
  4018bc:	mov    fs,WORD PTR [ebx-0x498d715f]
  4018c2:	pop    eax
  4018c3:	push   edx
  4018c4:	aaa    
  4018c5:	aam    0x6d
  4018c7:	sbb    eax,0x2b529ef
  4018cc:	adc    esi,ebp
  4018ce:	fcomp  DWORD PTR [ebp-0x17]
  4018d1:	addr16 nop
  4018d3:	es add al,0x37
  4018d6:	outs   dx,BYTE PTR ds:[esi]
  4018d7:	and    al,BYTE PTR [esi+0x1b043b48]
  4018dd:	stos   DWORD PTR es:[edi],eax
  4018de:	lea    ebp,[esi-0x20]
  4018e1:	mov    dl,0x3e
  4018e3:	adc    al,0x5f
  4018e5:	sub    eax,ecx
  4018e7:	pop    ebx
  4018e8:	push   esp
  4018e9:	cld    
  4018ea:	push   ecx
  4018eb:	test   al,0xaa
  4018ed:	dec    ecx
  4018ee:	ret    
  4018ef:	dec    esi
  4018f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018f1:	das    
  4018f2:	inc    edi
  4018f3:	jle    0x4018c5
  4018f5:	nop
  4018f6:	inc    edx
  4018f7:	std    
  4018f8:	loop   0x4018b8
  4018fa:	retw   
  4018fc:	loopne 0x401928
  4018fe:	xchg   ebp,eax
  4018ff:	and    al,0x6d
  401901:	scas   eax,DWORD PTR es:[edi]
  401902:	pop    esi
  401903:	sbb    DWORD PTR [ecx+esi*1+0x7b],esp
  401907:	call   0xe955:0xd08c2de0
  40190e:	mov    ecx,0x8e1b8b2b
  401913:	lea    ebp,[edi-0x1d]
  401916:	xchg   edi,eax
  401917:	fistp  DWORD PTR [edx+0x67]
  40191a:	lods   al,BYTE PTR ds:[esi]
  40191b:	fwait
  40191c:	call   0xfcad:0x8733ab79
  401923:	dec    eax
  401924:	sub    eax,0x6559e40f
  401929:	call   0xdeecb74d
  40192e:	scas   al,BYTE PTR es:[edi]
  40192f:	dec    ebx
  401930:	das    
  401931:	scas   eax,DWORD PTR es:[edi]
  401932:	xchg   esp,eax
  401933:	xchg   ebx,eax
  401934:	push   ebx
  401935:	pushf  
  401936:	mov    cs,WORD PTR [ebx-0x2a]
  401939:	push   edx
  40193a:	ret    
  40193b:	pop    ebx
  40193c:	iret   
  40193d:	xchg   edi,eax
  40193e:	jge    0x401903
  401940:	lahf   
  401941:	dec    ebp
  401942:	jle    0x401940
  401944:	js     0x401974
  401946:	xchg   edx,ebp
  401948:	loope  0x4019c1
  40194a:	psrld  mm0,QWORD PTR [edx+0x27]
  40194e:	dec    esi
  40194f:	cmc    
  401950:	stos   BYTE PTR es:[edi],al
  401951:	sbb    ch,BYTE PTR [ecx+0xf]
  401954:	adc    bl,al
  401956:	inc    ebx
  401957:	loop   0x401953
  401959:	call   0xce26:0x50e9ea3f
  401960:	lods   al,BYTE PTR ds:[esi]
  401961:	mov    ebx,0x4ffb88ee
  401966:	jns    0x4019d8
  401968:	dec    ebx
  401969:	mov    eax,DWORD PTR [edi-0x6b9a2486]
  40196f:	jg     0x401901
  401971:	jl     0x4019e2
  401973:	mov    ah,0xc4
  401975:	fist   DWORD PTR [esi+0x13]
  401978:	rol    BYTE PTR [ebx-0x17efc74b],1
  40197e:	jl     0x4019e7
  401980:	popf   
  401981:	test   DWORD PTR [eax],ecx
  401983:	out    dx,eax
  401984:	push   eax
  401985:	adc    DWORD PTR [edx+eiz*4+0x66],edi
  401989:	fbld   TBYTE PTR ds:0xe6903c29
  40198f:	add    eax,0x254424ab
  401994:	out    dx,al
  401995:	sub    edx,DWORD PTR [eax-0x341fe2f3]
  40199b:	cmp    bh,BYTE PTR [edx]
  40199d:	into   
  40199e:	imul   ebp,ebp,0x16
  4019a1:	test   al,0x30
  4019a3:	ins    DWORD PTR es:[edi],dx
  4019a4:	xor    al,0x5a
  4019a6:	jg     0x4019fc
  4019a8:	icebp  
  4019a9:	ss xor al,0xbe
  4019ac:	cs pop edx
  4019ae:	mov    ch,0x44
  4019b0:	inc    esp
  4019b1:	aam    0xdf
  4019b3:	add    eax,0x76be5ba0
  4019b8:	pop    ebx
  4019b9:	pop    ss
  4019ba:	je     0x4019cb
  4019bc:	inc    eax
  4019bd:	jp     0x4019cb
  4019bf:	add    dh,BYTE PTR [esp+esi*8]
  4019c2:	shr    DWORD PTR [edi],1
  4019c4:	push   es
  4019c5:	inc    esp
  4019c6:	jl     0x40198d
  4019c8:	sar    BYTE PTR ds:0x5a55c5d9,cl
  4019ce:	scas   al,BYTE PTR es:[edi]
  4019cf:	inc    edi
  4019d0:	cmp    al,0x85
  4019d2:	push   ss
  4019d3:	push   ebp
  4019d4:	mov    eax,ds:0xaa2b1c5c
  4019d9:	cmp    al,0x43
  4019db:	push   ss
  4019dc:	mov    edi,eax
  4019de:	in     al,0xe9
  4019e0:	ins    DWORD PTR es:[edi],dx
  4019e1:	fwait
  4019e2:	mov    DWORD PTR [edi],edi
  4019e4:	add    BYTE PTR [ecx+0x261c9b93],0xc5
  4019eb:	daa    
  4019ec:	or     eax,0xea6657dd
  4019f1:	(bad)  [ebx+0x2718f65c]
  4019f7:	cmp    DWORD PTR [ebx+ebx*8],esp
  4019fa:	jb     0x40198a
  4019fc:	xor    BYTE PTR [edx+0x24],dh
  4019ff:	pop    esi
  401a00:	push   edx
  401a01:	shr    dl,cl
  401a03:	sbb    ah,BYTE PTR [ecx+0x74e06e8]
  401a09:	mov    edx,0x79455a68
  401a0e:	xor    bl,BYTE PTR [edi]
  401a10:	fmul   st,st(6)
  401a12:	pushf  
  401a13:	push   ecx
  401a14:	rcr    BYTE PTR [edi],0xd8
  401a17:	jl     0x401a0c
  401a19:	xchg   esi,eax
  401a1a:	xor    al,0x44
  401a1c:	mov    ah,0xe
  401a1e:	loopne 0x4019ae
  401a20:	sub    eax,0x25c7ce9f
  401a25:	in     eax,0xa5
  401a27:	fs int3 
  401a29:	fsin   
  401a2b:	pushf  
  401a2c:	jmp    0x4019fc
  401a2e:	jp     0x401a20
  401a30:	cmp    DWORD PTR [ebp+0x3f],edx
  401a33:	lock aaa 
  401a35:	xchg   BYTE PTR [esi+0x43],ah
  401a38:	outs   dx,BYTE PTR ds:[esi]
  401a39:	pop    edx
  401a3a:	mov    al,ds:0x5d54a878
  401a3f:	fcmovne st,st(3)
  401a41:	jne    0x401a1d
  401a43:	fisub  WORD PTR [edx-0x2c770bc2]
  401a49:	ret    0x5fe7
  401a4c:	fld    st(6)
  401a4e:	rcl    BYTE PTR [ebp-0x46],0xf2
  401a52:	xchg   DWORD PTR [edi-0x4d],edx
  401a55:	jo     0x401ad5
  401a57:	sbb    eax,0x8a756ec3
  401a5c:	and    eax,0x7377b9ca
  401a61:	loopne 0x401ada
  401a63:	jle    0x401a8a
  401a65:	int3   
  401a66:	xor    al,0x27
  401a68:	mov    esi,0xa320ac0a
  401a6d:	imul   eax,DWORD PTR [esi-0x2d7f20b],0xffffffb9
  401a74:	inc    edi
  401a75:	cdq    
  401a76:	mov    ebx,0xf7f1aa8e
  401a7b:	dec    ebx
  401a7c:	xchg   ebp,eax
  401a7d:	repnz sub ch,BYTE PTR [edx]
  401a80:	sbb    eax,0xcecd12ba
  401a85:	mov    ds:0xa59d92a5,al
  401a8a:	add    ch,BYTE PTR [eax]
  401a8c:	mov    dl,0x82
  401a8e:	mov    edx,0x38a3afff
  401a93:	push   ds
  401a94:	popa   
  401a95:	clc    
  401a96:	cmp    BYTE PTR [ecx+0xd],0xb9
  401a9a:	pop    esp
  401a9b:	stc    
  401a9c:	addr16 jns 0x401a6a
  401a9f:	fistp  QWORD PTR [edx+0xf1ba8af]
  401aa5:	mov    ebx,DWORD PTR [ebp-0x12]
  401aa8:	scas   al,BYTE PTR es:[edi]
  401aa9:	jle    0x401a37
  401aab:	push   0xe
  401aad:	dec    eax
  401aae:	in     eax,dx
  401aaf:	pop    es
  401ab0:	adc    DWORD PTR [esi-0x19],esi
  401ab3:	in     eax,dx
  401ab4:	out    0x24,al
  401ab6:	sbb    dh,BYTE PTR [edi-0x2d11cd12]
  401abc:	fiadd  WORD PTR [ebx-0x67]
  401abf:	inc    al
  401ac1:	mov    al,ds:0x5463521
  401ac6:	mov    ch,0x3b
  401ac8:	aaa    
  401ac9:	shl    BYTE PTR [eax-0x2b],1
  401acc:	pop    edi
  401acd:	jbe    0x401b17
  401acf:	xchg   edx,eax
  401ad0:	frstor [ecx-0x9]
  401ad3:	aad    0xdb
  401ad5:	xor    DWORD PTR [edi],esp
  401ad7:	add    DWORD PTR [ebx],eax
  401ad9:	jo     0x401b3b
  401adb:	lods   al,BYTE PTR ds:[esi]
  401adc:	das    
  401add:	test   DWORD PTR [esi-0x49],eax
  401ae0:	push   0xffffffa3
  401ae2:	mov    ebx,0x67b3935c
  401ae7:	xchg   ebx,eax
  401ae8:	sub    cl,BYTE PTR [edx-0x75]
  401aeb:	(bad)  
  401aec:	imul   eax,DWORD PTR [ecx+0x6f514391],0x8015c72f
  401af6:	js     0x401ad8
  401af8:	dec    esp
  401af9:	push   ebx
  401afa:	es ins DWORD PTR es:[edi],dx
  401afc:	loop   0x401aaa
  401afe:	adc    bl,dh
  401b00:	inc    edi
  401b01:	and    eax,0xfad74598
  401b06:	dec    eax
  401b07:	xor    eax,0xc26c588c
  401b0c:	xchg   ecx,eax
  401b0d:	dec    ebx
  401b0e:	add    al,0x61
  401b10:	scas   al,BYTE PTR es:[edi]
  401b11:	inc    eax
  401b12:	inc    eax
  401b13:	in     al,dx
  401b14:	inc    edi
  401b15:	in     eax,0xf5
  401b17:	mov    DWORD PTR [ebp-0x6dead227],esi
  401b1d:	push   esp
  401b1e:	dec    edi
  401b1f:	or     BYTE PTR [esp+ecx*4+0x4ccab2dd],al
  401b26:	into   
  401b27:	jge    0x401b76
  401b29:	mov    DWORD PTR [ecx],ecx
  401b2b:	daa    
  401b2c:	push   eax
  401b2d:	push   ebx
  401b2e:	sub    BYTE PTR [edi+esi*4+0x4bdf8155],0xce
  401b36:	int    0xdd
  401b38:	dec    eax
  401b39:	dec    esp
  401b3a:	xor    ah,BYTE PTR [edi+0x52]
  401b3d:	les    ebp,FWORD PTR [eax]
  401b3f:	jb     0x401aed
  401b41:	jp     0x401bb9
  401b43:	pushf  
  401b44:	adc    al,0x3b
  401b46:	je     0x401b30
  401b48:	push   ss
  401b49:	pop    ebx
  401b4a:	inc    ebx
  401b4b:	jns    0x401b81
  401b4d:	inc    esp
  401b4e:	data16 addr16 mov ds:0x3a3e,al
  401b53:	sbb    eax,0x241fefa0
  401b58:	leave  
  401b59:	dec    esi
  401b5a:	mov    edx,0x6e960ac5
  401b5f:	adc    cl,BYTE PTR [esi+ebp*4]
  401b62:	dec    edx
  401b63:	mov    DWORD PTR [ecx+0x1477024a],ebp
  401b69:	rol    BYTE PTR [ebp-0x30],1
  401b6c:	and    eax,0xc7d03f5a
  401b71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b72:	pop    eax
  401b73:	mov    dl,0x49
  401b75:	ficomp DWORD PTR [ebx+0x458a97e7]
  401b7b:	fild   WORD PTR [eax]
  401b7d:	add    ch,ah
  401b7f:	loope  0x401b63
  401b81:	lods   al,BYTE PTR ds:[esi]
  401b82:	bound  esi,QWORD PTR [edi+esi*2]
  401b85:	nop
  401b86:	jecxz  0x401ba7
  401b88:	fild   QWORD PTR [edx-0x4f699853]
  401b8e:	fs jae 0x401b86
  401b91:	test   al,0xfc
  401b93:	sub    ecx,DWORD PTR [edx+eax*4]
  401b96:	test   edx,edx
  401b98:	sub    DWORD PTR [ebx-0x77],edi
  401b9b:	sub    DWORD PTR [ebx-0x2bb22abf],eax
  401ba1:	loop   0x401bfd
  401ba3:	xchg   ebp,eax
  401ba4:	adc    cl,cl
  401ba6:	ret    0x6efb
  401ba9:	jge    0x401b49
  401bab:	rcl    DWORD PTR [esi-0xb5202b9],0xf0
  401bb2:	mov    dh,0x91
  401bb4:	push   ss
  401bb5:	inc    eax
  401bb6:	mov    dh,BYTE PTR [eax]
  401bb8:	xlat   BYTE PTR ds:[ebx]
  401bb9:	jmp    0x4453b5c3
  401bbe:	xchg   DWORD PTR ds:0x42366245,esp
  401bc4:	and    al,0xd0
  401bc6:	adc    ecx,DWORD PTR [ebx]
  401bc8:	pop    ss
  401bc9:	test   BYTE PTR [ecx],dl
  401bcb:	leave  
  401bcc:	div    al
  401bce:	push   ds
  401bcf:	stc    
  401bd0:	iret   
  401bd1:	jb     0x401c2f
  401bd3:	repz sbb dh,0x1e
  401bd7:	push   0x54
  401bd9:	push   cs
  401bda:	retf   
  401bdb:	jl     0x401c49
  401bdd:	push   ebp
  401bde:	test   BYTE PTR [eax+0x49e09cf0],dh
  401be4:	rol    BYTE PTR [edi+0x6b68b745],0x5a
  401beb:	xchg   ebp,eax
  401bec:	enter  0x4c7a,0xed
  401bf0:	aam    0x33
  401bf2:	or     ah,bl
  401bf4:	adc    eax,eax
  401bf6:	pop    edx
  401bf7:	test   BYTE PTR ds:0x9c826d4c,al
  401bfd:	mov    ebp,0xc97c2170
  401c02:	dec    DWORD PTR [ebp+eax*1-0x80]
  401c06:	xchg   ebp,eax
  401c07:	xchg   edi,eax
  401c08:	jmp    0x401c4f
  401c0a:	jne    0x401c0e
  401c0c:	jg     0x401c07
  401c0e:	jne    0x401c17
  401c10:	test   ecx,edx
  401c12:	pop    esp
  401c13:	xchg   edx,eax
  401c14:	and    al,bh
  401c16:	xchg   ebx,eax
  401c17:	or     esi,DWORD PTR [ebx+0x306c5a61]
  401c1d:	stos   BYTE PTR es:[edi],al
  401c1e:	xchg   ebx,eax
  401c1f:	cmp    al,0xcc
  401c21:	cld    
  401c22:	test   dl,0xea
  401c25:	hlt    
  401c26:	leave  
  401c27:	inc    esi
  401c28:	fs jmp 0x5362eefe
  401c2e:	sbb    ch,BYTE PTR fs:[edx-0x2a]
  401c32:	addr16 push eax
  401c34:	jecxz  0x401bca
  401c36:	js     0x401c8b
  401c38:	xchg   BYTE PTR [ecx],al
  401c3a:	cmp    al,0xaf
  401c3c:	stos   DWORD PTR es:[edi],eax
  401c3d:	cli    
  401c3e:	fiadd  DWORD PTR [edi+0x5ae679de]
  401c44:	jno    0x401c89
  401c46:	jle    0x401bd3
  401c48:	stc    
  401c49:	cmp    BYTE PTR [edx+0x1e97d689],cl
  401c4f:	or     DWORD PTR [ebp+0x25],ebp
  401c52:	and    ebp,edi
  401c54:	inc    eax
  401c55:	sahf   
  401c56:	imul   esi,DWORD PTR [esi+0x71],0x25b28a50
  401c5d:	lahf   
  401c5e:	scas   eax,DWORD PTR es:[edi]
  401c5f:	or     BYTE PTR [ebp*1+0x7e30684a],0x46
  401c67:	loop   0x401c9c
  401c69:	sbb    bh,BYTE PTR [ecx+0x553374bb]
  401c6f:	es mov edi,0x6d6cf5d4
  401c75:	sub    edi,DWORD PTR [edi+0xdec0a57]
  401c7b:	jg     0x401c72
  401c7d:	push   edx
  401c7e:	xor    BYTE PTR [edx+0x205290af],bl
  401c84:	mov    gs,WORD PTR [edi+ebp*8]
  401c87:	and    eax,DWORD PTR [ebp+0x1a]
  401c8a:	ds mov cl,0xe7
  401c8d:	push   0x99cd3afc
  401c92:	in     eax,dx
  401c93:	lea    ebp,[eax-0x4501df00]
  401c99:	pop    ss
  401c9a:	aaa    
  401c9b:	mov    edi,0x236157a0
  401ca0:	jo     0x401c91
  401ca2:	lahf   
  401ca3:	inc    eax
  401ca4:	dec    esi
  401ca5:	add    al,0x41
  401ca7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ca8:	retf   
  401ca9:	add    bl,0x71
  401cac:	aaa    
  401cad:	jg     0x401cd4
  401caf:	inc    ebp
  401cb0:	xor    al,0x4d
  401cb2:	stos   DWORD PTR es:[edi],eax
  401cb3:	push   ss
  401cb4:	add    DWORD PTR [ecx],ebx
  401cb6:	call   0x5088:0x2de7ce5a
  401cbd:	dec    ebp
  401cbe:	sub    al,0xb
  401cc0:	popf   
  401cc1:	ss and al,0x8a
  401cc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cc5:	push   es
  401cc6:	add    BYTE PTR [edi-0x28],bl
  401cc9:	cli    
  401cca:	cmp    bl,BYTE PTR [ecx+0x18]
  401ccd:	rcr    BYTE PTR [edx],1
  401ccf:	inc    edi
  401cd0:	dec    ax
  401cd2:	xchg   ebp,eax
  401cd3:	bound  ebx,QWORD PTR [esi+0x3e]
  401cd6:	out    dx,al
  401cd7:	and    eax,0x5b36bea9
  401cdc:	sbb    eax,0x162b4d53
  401ce1:	rol    DWORD PTR ds:[edi-0x6f],cl
  401ce5:	inc    esp
  401ce6:	pop    ecx
  401ce7:	int3   
  401ce8:	jl     0x401d42
  401cea:	pushf  
  401ceb:	pop    eax
  401cec:	pop    ebp
  401ced:	cmp    esi,edx
  401cef:	dec    esp
  401cf0:	nop
  401cf1:	hlt    
  401cf2:	lahf   
  401cf3:	xor    ebx,ecx
  401cf5:	leave  
  401cf6:	add    DWORD PTR [ecx+0x633124f0],0xea6a4a6b
  401d00:	(bad)  [eax-0x247b4884]
  401d06:	add    dl,BYTE PTR [eax]
  401d08:	in     al,0x85
  401d0a:	outs   dx,BYTE PTR ds:[esi]
  401d0b:	add    ch,BYTE PTR [ecx]
  401d0d:	ins    DWORD PTR es:[edi],dx
  401d0e:	adc    eax,0x35dc11a7
  401d13:	icebp  
  401d14:	cmp    edi,esp
  401d16:	retf   0xb3ce
  401d19:	loopne 0x401d83
  401d1b:	xor    esp,DWORD PTR [eax]
  401d1d:	or     edi,edx
  401d1f:	idiv   esi
  401d21:	pop    esp
  401d22:	push   0xad17a476
  401d27:	repz test DWORD PTR es:[esi-0x58],eax
  401d2c:	inc    ecx
  401d2d:	je     0x401d8a
  401d2f:	xchg   BYTE PTR [edi+0x47],bl
  401d32:	hlt    
  401d33:	mov    bh,0x8b
  401d35:	dec    esi
  401d36:	pop    esp
  401d37:	cli    
  401d38:	(bad)  
  401d39:	mov    ebp,es
  401d3b:	push   ebp
  401d3c:	lds    edx,FWORD PTR [edi+0x66]
  401d3f:	push   es
  401d40:	fwait
  401d41:	(bad)  
  401d42:	icebp  
  401d43:	fdiv   st(3),st
  401d45:	and    dh,al
  401d47:	push   edx
  401d48:	and    BYTE PTR [ecx-0x44],al
  401d4b:	iret   
  401d4c:	jmp    0xd9a9:0x8782863
  401d53:	dec    ecx
  401d54:	mov    BYTE PTR [esi+ecx*8],dh
  401d57:	xor    al,BYTE PTR [edx+0x49]
  401d5a:	inc    edx
  401d5b:	outs   dx,BYTE PTR ds:[esi]
  401d5c:	cs mov bh,0xf1
  401d5f:	js     0x401dc7
  401d61:	mov    al,0x1
  401d63:	add    BYTE PTR [esi+0x10a40fae],0xd6
  401d6a:	inc    ecx
  401d6b:	dec    eax
  401d6c:	mov    BYTE PTR [edx],ch
  401d6e:	sub    al,0x80
  401d70:	push   DWORD PTR [edx+0x67fddba5]
  401d76:	mov    ss,WORD PTR ds:[ecx+edx*8+0x68]
  401d7b:	in     eax,0x3d
  401d7d:	neg    BYTE PTR [eax+0x28]
  401d80:	ret    0xa7ee
  401d83:	mov    ebp,0x73768e99
  401d88:	out    0x4c,al
  401d8a:	sti    
  401d8b:	xor    al,0x6
  401d8d:	push   ss
  401d8e:	and    DWORD PTR [ecx],esp
  401d90:	scas   eax,DWORD PTR es:[edi]
  401d91:	add    BYTE PTR [eax+0x7b1baa9a],bh
  401d97:	sbb    BYTE PTR [ebx-0x3246a24],al
  401d9d:	outs   dx,BYTE PTR ds:[esi]
  401d9e:	pop    ss
  401d9f:	in     al,dx
  401da0:	xor    eax,0x7f871a3b
  401da5:	lds    esp,FWORD PTR [edx]
  401da7:	push   ds
  401da8:	stos   BYTE PTR es:[edi],al
  401da9:	in     eax,0x1e
  401dab:	cmp    eax,0xb2bed1b5
  401db0:	int3   
  401db1:	aas    
  401db2:	cmp    esi,DWORD PTR ds:0x96426280
  401db8:	sahf   
  401db9:	call   0xf87d6f5b
  401dbe:	xor    al,0xec
  401dc0:	call   0x56b6:0x36c7a723
  401dc7:	(bad)  
  401dc8:	push   ds
  401dc9:	loop   0x401daf
  401dcb:	or     eax,0xa1daf2d0
  401dd0:	jle    0x401e16
  401dd2:	(bad)  
  401dd4:	aam    0xd1
  401dd6:	push   ecx
  401dd7:	push   eax
  401dd8:	call   0x17b8:0x517b67d2
  401ddf:	fdiv   DWORD PTR ds:[ebx+ebx*2]
  401de3:	adc    ebp,DWORD PTR [ebx+0x28]
  401de6:	data16 sbb al,0xba
  401de9:	loop   0x401e21
  401deb:	mov    ch,0x1d
  401ded:	or     BYTE PTR [edi],0x4f
  401df0:	(bad)  
  401df1:	cld    
  401df2:	and    al,BYTE PTR [bx+si]
  401df5:	ins    DWORD PTR es:[edi],dx
  401df6:	ror    DWORD PTR [ebx],1
  401df8:	cmp    dl,bh
  401dfa:	mov    ah,0x6a
  401dfc:	pop    esi
  401dfd:	gs call 0x18b2:0xef6be8a1
  401e05:	scas   al,BYTE PTR es:[edi]
  401e06:	sub    eax,0x9e85eb19
  401e0b:	xor    DWORD PTR [edx-0x7e2f69eb],eax
  401e11:	mov    ebp,DWORD PTR [edx]
  401e13:	push   ecx
  401e14:	fcomp  DWORD PTR [esi+ebp*4-0x42]
  401e18:	push   ds
  401e19:	jne    0x401e28
  401e1b:	test   BYTE PTR [edx+0x51178726],ah
  401e21:	jmp    0x99ab34d7
  401e26:	imul   ebx,DWORD PTR [edx-0x7c],0xffffffe6
  401e2a:	mov    esi,0xc7ab1e
  401e2f:	and    al,0x91
  401e31:	in     eax,dx
  401e32:	clc    
  401e33:	je     0x401e93
  401e35:	lods   al,BYTE PTR ds:[esi]
  401e36:	imul   ebx,ebp,0x6a3029bc
  401e3c:	mov    ah,0xbf
  401e3e:	mov    ds:0xc9153c06,eax
  401e43:	fsubr  QWORD PTR [edx-0x32]
  401e46:	std    
  401e47:	fdiv   st(3),st
  401e49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e4a:	cs stc 
  401e4c:	loope  0x401e02
  401e4e:	(bad)  
  401e4f:	int    0xfe
  401e51:	(bad)  
  401e52:	(bad)  
  401e53:	in     al,0x7d
  401e55:	jbe    0x401e03
  401e57:	cmp    ebx,DWORD PTR ds:0xde0f178d
  401e5d:	jge    0x401ebf
  401e5f:	dec    eax
  401e60:	mov    ebx,0x513255d4
  401e65:	xor    dh,ah
  401e67:	sahf   
  401e68:	push   edx
  401e69:	dec    edi
  401e6a:	jbe    0x401ee0
  401e6c:	ret    0xf3ed
  401e6f:	(bad)  
  401e70:	adc    eax,0x2bd0f6b0
  401e75:	lea    esp,[eax+0x37]
  401e78:	in     eax,0xb0
  401e7a:	repz sbb BYTE PTR [ebp-0x49620dee],0x1a
  401e82:	fbstp  TBYTE PTR [ebp+0x572782f9]
  401e88:	jne    0x401eae
  401e8a:	cmc    
  401e8b:	xchg   ecx,eax
  401e8c:	fcmovnbe st,st(2)
  401e8e:	sub    ebp,DWORD PTR [eax+0x5e]
  401e91:	inc    eax
  401e92:	and    BYTE PTR [ecx+0x3f19e4f9],0x85
  401e99:	pop    es
  401e9a:	dec    ebx
  401e9b:	ja     0x401e9c
  401e9d:	inc    esi
  401e9e:	sub    dh,BYTE PTR [eax+0x4c]
  401ea1:	dec    edx
  401ea2:	je     0x401eee
  401ea4:	imul   esp,DWORD PTR [esp+edx*2-0x4f],0x2eb1bf28
  401eac:	test   eax,0xc8dcdfd5
  401eb1:	(bad)  
  401eb2:	test   bh,0xc2
  401eb5:	lods   al,BYTE PTR ds:[esi]
  401eb6:	je     0x401e60
  401eb8:	(bad)  
  401eba:	in     al,dx
  401ebb:	pop    ss
  401ebc:	pop    es
  401ebd:	retf   0xd1bf
  401ec0:	and    edx,DWORD PTR [ecx+esi*8+0x19]
  401ec4:	adc    ebp,DWORD PTR [ecx+0x46]
  401ec7:	and    esp,DWORD PTR [ecx]
  401ec9:	fxch   st(1)
  401ecb:	loop   0x401f04
  401ecd:	push   esp
  401ece:	push   ebx
  401ecf:	cmp    ch,BYTE PTR [ebp-0x4fc0df4]
  401ed5:	call   0x9cfd5f1f
  401eda:	sbb    dh,ah
  401edc:	jno    0x401f05
  401ede:	sti    
  401edf:	xlat   BYTE PTR ds:[ebx]
  401ee0:	push   eax
  401ee1:	sahf   
  401ee2:	mov    ch,0x4c
  401ee4:	push   0x4c
  401ee6:	mov    ecx,0xd2aa069f
  401eeb:	sti    
  401eec:	pop    esp
  401eed:	jnp    0x401f66
  401eef:	mov    esi,0x218bb20c
  401ef4:	stos   DWORD PTR es:[edi],eax
  401ef5:	and    edx,DWORD PTR [esi]
  401ef7:	(bad)  
  401ef8:	mul    BYTE PTR [edi-0x16a6669]
  401efe:	dec    ecx
  401eff:	or     edx,eax
  401f01:	clc    
  401f02:	xchg   ebx,eax
  401f03:	ficom  WORD PTR [esp+eax*4]
  401f06:	shl    BYTE PTR [edx],cl
  401f08:	daa    
  401f09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f0a:	mov    eax,0xcf9f8e5e
  401f0f:	ja     0x401f06
  401f11:	xor    BYTE PTR [edi],bh
  401f13:	out    dx,eax
  401f14:	dec    esi
  401f15:	jge    0x401eca
  401f17:	push   0xf40b25cd
  401f1c:	xor    ebx,DWORD PTR [edx]
  401f1e:	cs push esi
  401f20:	icebp  
  401f21:	and    ah,ah
  401f23:	jl     0x401f68
  401f25:	add    ecx,ebx
  401f27:	imul   edi,ebx,0xffffff81
  401f2a:	std    
  401f2b:	lea    ebp,[eax+0x3559ae9f]
  401f31:	rcr    DWORD PTR [edx+0x63],0x61
  401f35:	pop    ecx
  401f36:	out    0x48,al
  401f38:	std    
  401f39:	xchg   ecx,eax
  401f3a:	sti    
  401f3b:	ret    
  401f3c:	inc    esp
  401f3d:	push   ebx
  401f3e:	cmp    eax,esi
  401f40:	lahf   
  401f41:	add    edi,0x1b91013e
  401f47:	nop
  401f48:	mov    ebp,0x66eb3990
  401f4d:	mov    eax,ds:0x10ceee1b
  401f52:	inc    ecx
  401f53:	pop    eax
  401f54:	mov    esp,DWORD PTR [edi+eiz*2+0x69]
  401f58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f59:	shr    DWORD PTR [eax+0x7],1
  401f5c:	lods   al,BYTE PTR ds:[esi]
  401f5d:	cld    
  401f5e:	mov    bh,0xb6
  401f60:	rol    DWORD PTR [ebp+edi*1+0x1ead5ecd],1
  401f67:	push   ds
  401f68:	or     al,0x58
  401f6a:	int3   
  401f6b:	sti    
  401f6c:	dec    eax
  401f6d:	dec    esp
  401f6e:	arpl   WORD PTR [eax+0x50],di
  401f71:	fbld   TBYTE PTR [ebp+eax*4+0x5d114204]
  401f78:	cwde   
  401f79:	stos   BYTE PTR es:[edi],al
  401f7a:	fcom   st(5)
  401f7c:	adc    esp,edi
  401f7e:	cs stos DWORD PTR es:[edi],eax
  401f80:	icebp  
  401f81:	and    edi,ebx
  401f83:	ret    0x8948
  401f86:	les    ebx,FWORD PTR [esi-0x3e]
  401f89:	xlat   BYTE PTR ds:[ebx]
  401f8a:	(bad)  
  401f8d:	arpl   WORD PTR [esi+ebp*1+0x6fc678fa],dx
  401f94:	jmp    0xce4081d9
  401f99:	push   edx
  401f9a:	dec    edi
  401f9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f9c:	mov    ds:0xbb6e0609,al
  401fa1:	push   eax
  401fa2:	or     eax,0x49c41fbc
  401fa7:	cmp    dh,al
  401fa9:	inc    esp
  401faa:	shr    BYTE PTR [ecx+edi*8-0x42],1
  401fae:	mov    esi,0xce622403
  401fb3:	in     eax,0xbb
  401fb5:	adc    cl,bh
  401fb7:	xor    edx,eax
  401fb9:	rcl    DWORD PTR [eax],0xef
  401fbc:	test   eax,0x4e7d3ceb
  401fc1:	jmp    0x488e:0xc5efb02b
  401fc8:	xchg   edx,eax
  401fc9:	neg    DWORD PTR [eax]
  401fcb:	mov    edi,DWORD PTR [eax+0x5a77acdf]
  401fd1:	(bad)  
  401fd2:	imul   BYTE PTR [esi+0x2e]
  401fd5:	jge    0x40204e
  401fd7:	daa    
  401fd8:	xlat   BYTE PTR ds:[ebx]
  401fd9:	rcr    DWORD PTR [esi+0x6],0xc4
  401fdd:	ins    BYTE PTR es:[edi],dx
  401fde:	(bad)  
  401fdf:	sti    
  401fe0:	jg     0x401f7a
  401fe2:	je     0x401fe7
  401fe4:	fnsave [eax+edi*4]
  401fe7:	sbb    dl,BYTE PTR [ecx]
  401fe9:	in     eax,0x81
  401feb:	pop    es
  401fec:	xchg   edi,eax
  401fed:	rol    BYTE PTR [edi+0x79],1
  401ff0:	cs cmp ah,dl
  401ff3:	mov    eax,0x55616d76
  401ff8:	out    0xc3,eax
  401ffa:	daa    
  401ffb:	inc    esi
  401ffc:	dec    esi
  401ffd:	adc    DWORD PTR [edx],ebp
  401fff:	rcr    edx,0x60
  402002:	pop    ss
  402003:	push   ebp
  402004:	add    al,0x52
  402006:	arpl   sp,ax
  402008:	cmp    eax,0x92cb5a9d
  40200d:	mov    cl,0x46
  40200f:	jle    0x401fe3
  402011:	cmp    BYTE PTR [eax+0x1c74c5fc],0x97
  402018:	mov    ebp,eax
  40201a:	shl    BYTE PTR [edx+0x71],cl
  40201d:	mov    al,ds:0x3249f7fb
  402022:	pop    eax
  402023:	cmc    
  402024:	pop    ebx
  402025:	sar    BYTE PTR [ebx+ebp*2],1
  402028:	mov    ds:0xbd6be51a,eax
  40202d:	ins    BYTE PTR es:[edi],dx
  40202e:	lods   eax,DWORD PTR ds:[esi]
  40202f:	sbb    eax,0x508a4c97
  402034:	push   ebx
  402035:	out    dx,al
  402036:	in     al,0x17
  402038:	sbb    ebx,DWORD PTR [edx+edx*4+0x4fbcce95]
  40203f:	daa    
  402040:	xor    BYTE PTR [ebp-0x47457d97],ch
  402046:	jecxz  0x40209e
  402048:	lds    eax,FWORD PTR [edx+0x63]
  40204b:	inc    ecx
  40204c:	gs inc eax
  40204e:	mov    ?,WORD PTR [edx]
  402050:	mov    eax,0x23e7d6b9
  402055:	(bad)  [eax-0x12dfd70a]
  40205c:	xchg   bh,ah
  40205e:	aad    0x47
  402060:	fist   DWORD PTR ds:0xd9b47dc
  402066:	xor    ebp,DWORD PTR [edi-0x24069b1e]
  40206c:	scas   al,BYTE PTR es:[edi]
  40206d:	fistp  WORD PTR [ecx+0x6]
  402070:	je     0x402040
  402072:	call   0xcd7c:0x7f303107
  402079:	or     al,0x76
  40207b:	mov    bh,0xac
  40207d:	inc    esp
  40207e:	cmp    al,0xff
  402080:	cli    
  402081:	fidivr WORD PTR [ebx]
  402083:	in     al,0xe
  402085:	sar    dl,0xf5
  402088:	nop
  402089:	(bad)  
  40208a:	ja     0x40203f
  40208c:	push   0x8e0cf371
  402091:	leave  
  402092:	mov    esp,0xad17cad3
  402097:	call   0x41c87399
  40209c:	pushf  
  40209d:	push   esi
  40209e:	mov    eax,ds:0x78c42cee
  4020a3:	sub    BYTE PTR [ebp-0x35],ah
  4020a6:	or     BYTE PTR [ecx],ch
  4020a8:	(bad)  [eax-0x11]
  4020ab:	jae    0x40209f
  4020ad:	add    eax,0xe7936f77
  4020b2:	sahf   
  4020b3:	out    dx,al
  4020b4:	inc    ecx
  4020b5:	loope  0x4020b4
  4020b7:	sbb    ebp,DWORD PTR [eax+0x11624fdc]
  4020bd:	jecxz  0x40208e
  4020bf:	cdq    
  4020c0:	ret    
  4020c1:	mov    edi,0xfe48ea2f
  4020c6:	loopne 0x402138
  4020c8:	adc    DWORD PTR [edx],edi
  4020ca:	out    dx,eax
  4020cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020cc:	lods   al,BYTE PTR ds:[esi]
  4020cd:	shl    DWORD PTR [ebx+0x758c1154],1
  4020d3:	aad    0x4f
  4020d5:	cmp    al,0x76
  4020d7:	std    
  4020d8:	mov    ebp,0xc25adfd1
  4020dd:	jns    0x402134
  4020df:	enter  0x3c76,0x10
  4020e3:	xchg   BYTE PTR [ecx-0x1354a016],dl
  4020e9:	mov    gs,WORD PTR [esi]
  4020eb:	cs jo  0x402097
  4020ee:	mov    WORD PTR [edi-0x5d],cs
  4020f1:	push   edi
  4020f2:	mov    al,ds:0x6b317fe9
  4020f7:	jle    0x4020ea
  4020f9:	xchg   esp,eax
  4020fa:	fs ins BYTE PTR es:[edi],dx
  4020fc:	and    dh,BYTE PTR [ecx]
  4020fe:	nop
  4020ff:	push   DWORD PTR [ebp+0x39409659]
  402105:	std    
  402106:	inc    edi
  402107:	add    eax,0xc5dbda5f
  40210c:	sbb    al,0xbf
  40210e:	(bad)  
  40210f:	dec    eax
  402110:	out    dx,al
  402111:	mov    esp,0x296d2553
  402116:	fcom   DWORD PTR [ecx+0x75]
  402119:	xor    ch,bh
  40211b:	mov    edx,0x609ee0e7
  402120:	out    0x23,al
  402122:	mov    esp,0x42055997
  402127:	mov    ebp,0x81df1e14
  40212c:	mov    BYTE PTR [edi-0x35],cl
  40212f:	(bad)  
  402130:	in     al,dx
  402131:	mov    ebp,0x35ae8e5f
  402136:	stc    
  402137:	loopne 0x4020cb
  402139:	or     esp,edx
  40213b:	sti    
  40213c:	call   FWORD PTR [esp+eax*1-0x6]
  402140:	pop    eax
  402141:	icebp  
  402142:	dec    DWORD PTR [eax+0x68]
  402145:	mov    ebx,0xd5524f6c
  40214a:	adc    al,BYTE PTR [ebp+eax*4+0x2241b348]
  402151:	dec    ebp
  402152:	mov    dh,0xba
  402154:	aas    
  402155:	inc    edi
  402156:	pop    ebx
  402157:	mov    db2,ecx
  40215a:	mov    ebp,0xb37bb0e6
  40215f:	lds    ecx,FWORD PTR [ecx]
  402161:	(bad)  
  402162:	xor    esi,esp
  402164:	or     BYTE PTR [ecx-0x6184e25f],dh
  40216a:	jp     0x4020ec
  40216c:	lea    edx,[edi+0xc]
  40216f:	shl    ecx,0xb5
  402172:	mov    esp,0x18403434
  402177:	push   0xffffffd6
  402179:	aam    0x73
  40217b:	loop   0x4021f3
  40217d:	mov    cl,0x2c
  40217f:	stos   DWORD PTR es:[edi],eax
  402180:	mov    eax,0x56274d8
  402185:	in     al,dx
  402186:	arpl   WORD PTR [esi+edx*8-0x763ee254],sp
  40218d:	inc    eax
  40218e:	mov    ecx,0x2e2258de
  402193:	inc    esp
  402194:	sbb    bh,BYTE PTR [edx+0x485eff36]
  40219a:	pusha  
  40219b:	add    BYTE PTR [ebx+ecx*2+0x4d],bl
  40219f:	mov    cl,0x4a
  4021a1:	cmp    ch,BYTE PTR [edi+0x37]
  4021a4:	push   esi
  4021a5:	mov    esi,0xdb6e3642
  4021aa:	jno    0x4021c5
  4021ac:	ror    dl,cl
  4021ae:	dec    esi
  4021af:	dec    esi
  4021b0:	dec    esp
  4021b1:	fsubr  QWORD PTR [eax-0x40]
  4021b4:	xor    bl,dh
  4021b6:	pop    edx
  4021b7:	out    dx,al
  4021b8:	cmp    al,0x20
  4021ba:	lods   eax,DWORD PTR ds:[esi]
  4021bb:	xor    eax,0x916defdc
  4021c0:	mov    dl,0x74
  4021c2:	add    eax,0x98cad4dc
  4021c7:	jo     0x40218e
  4021c9:	aaa    
  4021ca:	mov    esi,0xfaa340c9
  4021cf:	jbe    0x402183
  4021d1:	popf   
  4021d2:	mov    eax,0x87281882
  4021d7:	fcmovnb st,st(6)
  4021d9:	aad    0x13
  4021db:	xchg   edx,eax
  4021dc:	sbb    al,0xa4
  4021de:	push   edx
  4021df:	xchg   esp,eax
  4021e0:	lahf   
  4021e1:	(bad)  [ebx+0x68]
  4021e4:	jl     0x402248
  4021e6:	and    eax,0x453f9836
  4021eb:	fild   DWORD PTR [edx-0x65]
  4021ee:	aam    0xf4
  4021f0:	call   0xa925:0xcc6cb596
  4021f7:	fs pop ss
  4021f9:	mov    WORD PTR [eax-0x5851e7ee],?
  4021ff:	and    dh,BYTE PTR [ecx-0x23]
  402202:	popf   
  402203:	shl    BYTE PTR [ebx+0x42],1
  402206:	and    al,0x37
  402208:	jge    0x402287
  40220a:	sub    DWORD PTR [esi+0x2d],ebp
  40220d:	jp     0x4021c3
  40220f:	enter  0x839c,0x1d
  402213:	add    al,0xf5
  402215:	cli    
  402216:	jge    0x40220c
  402218:	popf   
  402219:	mov    bl,0x22
  40221b:	xchg   ebp,eax
  40221c:	push   0x61
  40221e:	push   ebx
  40221f:	bswap  ebx
  402221:	dec    edx
  402222:	jae    0x40222d
  402224:	cdq    
  402225:	or     DWORD PTR [ecx],0x900c614e
  40222b:	mov    esi,0xf8a3e460
  402230:	add    eax,0xde1907a5
  402235:	xchg   esi,eax
  402236:	push   ebp
  402237:	jnp    0x40222a
  402239:	push   ecx
  40223a:	add    DWORD PTR [edi],eax
  40223c:	int    0xf8
  40223e:	out    0xbe,al
  402240:	or     cl,al
  402242:	push   ecx
  402243:	xchg   esp,eax
  402244:	add    al,0x8b
  402246:	inc    edi
  402247:	sbb    al,0x63
  402249:	push   esi
  40224a:	xlat   BYTE PTR ds:[ebx]
  40224b:	cmp    eax,0x26a2e4f1
  402250:	bound  edi,QWORD PTR [esi-0x4e]
  402253:	rol    esi,cl
  402255:	scas   eax,DWORD PTR es:[edi]
  402256:	mov    cl,0xa
  402258:	(bad)  
  402259:	inc    edx
  40225a:	lahf   
  40225b:	cmp    DWORD PTR [ecx-0x37],edi
  40225e:	leave  
  40225f:	lea    edx,[esp+edi*2-0x53]
  402263:	int3   
  402264:	call   0xd934e23a
  402269:	jecxz  0x4022a5
  40226b:	scas   eax,DWORD PTR es:[edi]
  40226c:	out    dx,al
  40226d:	push   ss
  40226e:	rcl    BYTE PTR [esi],0xeb
  402271:	xor    BYTE PTR [ebp+0x32cbdb46],ch
  402277:	and    DWORD PTR [ebx+0x71a09e65],esi
  40227d:	push   cs
  40227e:	loopne 0x4022a1
  402280:	gs xor esp,esi
  402283:	jl     0x40224f
  402285:	or     ch,ah
  402287:	inc    esp
  402288:	ins    DWORD PTR es:[edi],dx
  402289:	fdivr  QWORD PTR [ebx]
  40228b:	add    DWORD PTR [esi],ebx
  40228d:	cmp    ebx,DWORD PTR [esi-0x7af2f8ca]
  402293:	push   esp
  402294:	mov    ah,0x79
  402296:	lods   al,BYTE PTR ds:[esi]
  402297:	adc    bh,0xab
  40229a:	bound  esi,QWORD PTR [ebx+0xa0c20ec]
  4022a0:	fstp   DWORD PTR [ebp-0x48530690]
  4022a6:	lods   eax,DWORD PTR ds:[esi]
  4022a7:	sub    BYTE PTR [ebx],cl
  4022a9:	clc    
  4022aa:	rcr    dh,cl
  4022ac:	sbb    DWORD PTR [esi],0xe5ac30e1
  4022b2:	xlat   BYTE PTR ds:[ebx]
  4022b3:	into   
  4022b4:	lods   al,BYTE PTR ds:[esi]
  4022b5:	mov    al,ds:0xb78cf52e
  4022ba:	ret    0x446d
  4022bd:	add    eax,0xb85915e0
  4022c2:	je     0x4022da
  4022c4:	xor    eax,0xdf8ad64c
  4022c9:	loope  0x4022cd
  4022cb:	aam    0x34
  4022cd:	xor    bh,BYTE PTR [esi+0x63f093e]
  4022d3:	sub    BYTE PTR ds:0xfbd585bd,ch
  4022d9:	out    dx,eax
  4022da:	push   esp
  4022db:	pop    ds
  4022dc:	push   0x7ac5d1c4
  4022e1:	xor    BYTE PTR ss:[edx+0x7c5dd42e],bh
  4022e8:	js     0x402337
  4022ea:	mov    bh,0xe2
  4022ec:	(bad)  
  4022ee:	daa    
  4022ef:	jb     0x4022fe
  4022f1:	inc    edx
  4022f2:	adc    al,0xcb
  4022f4:	aaa    
  4022f5:	and    BYTE PTR [ebx-0x6d],0x93
  4022f9:	pop    esp
  4022fa:	ret    
  4022fb:	inc    edi
  4022fc:	inc    ebp
  4022fd:	or     BYTE PTR [eax+0x75],ch
  402300:	mov    esp,DWORD PTR [ecx-0x4028a70a]
  402306:	(bad)  
  402307:	icebp  
  402308:	add    ecx,ebp
  40230a:	fs mov ebx,0x7f54a4d3
  402310:	inc    esp
  402311:	imul   esi,DWORD PTR [esi+0x3d],0xd8b5b39e
  402318:	pop    edi
  402319:	jge    0x40236e
  40231b:	xor    DWORD PTR [ebp+0x7d359220],eax
  402321:	pushf  
  402322:	push   esp
  402323:	cdq    
  402324:	cmc    
  402325:	cmp    dh,BYTE PTR [esi+0x7d]
  402328:	bound  ebp,QWORD PTR [edi]
  40232a:	xchg   DWORD PTR [esi+0x10f75e9d],ecx
  402330:	jle    0x402366
  402332:	outs   dx,BYTE PTR ds:[esi]
  402333:	test   eax,0x80bc27f7
  402338:	sub    ah,BYTE PTR [edx-0x4af5eb82]
  40233e:	and    BYTE PTR [esi-0x25],al
  402341:	lods   al,BYTE PTR ds:[esi]
  402342:	jo     0x4022ce
  402344:	retf   
  402345:	shr    DWORD PTR [edx],0x85
  402348:	pop    esi
  402349:	sbb    ah,ah
  40234b:	jno    0x4023c2
  40234d:	cmp    edi,DWORD PTR [ecx]
  40234f:	xor    al,0xec
  402351:	cmp    al,0xcc
  402353:	bound  ebp,QWORD PTR [edi]
  402355:	add    eax,DWORD PTR [edi-0x5d779cc3]
  40235b:	cmp    edx,DWORD PTR [esi]
  40235d:	stc    
  40235e:	xor    DWORD PTR [edi-0x1fc02c1e],esi
  402364:	push   edi
  402365:	es mov edi,0x779c3155
  40236b:	pop    ds
  40236c:	je     0x402315
  40236e:	fdivr  st(7),st
  402370:	inc    edi
  402371:	jae    0x40234f
  402373:	jnp    0x402365
  402375:	repz sti 
  402377:	aas    
  402378:	push   ecx
  402379:	and    DWORD PTR [edx],esi
  40237b:	mov    ebx,0x2d772c9f
  402380:	imul   BYTE PTR [ebp-0x50b78aa3]
  402386:	dec    ebp
  402387:	ins    DWORD PTR es:[edi],dx
  402388:	into   
  402389:	mov    ch,0xcd
  40238b:	mov    ds:0xcfe94e35,al
  402390:	or     eax,DWORD PTR [ebx]
  402392:	mov    esp,0xa3a576e1
  402397:	daa    
  402398:	jle    0x402396
  40239a:	data16 (bad) 
  40239c:	mov    BYTE PTR [eax-0x30c968dd],al
  4023a2:	ror    esp,cl
  4023a4:	test   al,0x9b
  4023a6:	mov    esp,0x2fb8b4fc
  4023ab:	xchg   esi,eax
  4023ac:	rcl    al,cl
  4023ae:	ds adc al,0x87
  4023b1:	dec    ebp
  4023b2:	lock push es
  4023b4:	jae    0x40234a
  4023b6:	stc    
  4023b7:	call   0xe3c:0x7269c5e6
  4023be:	jmp    0xaf8cec16
  4023c3:	std    
  4023c4:	jmp    0xc22e:0xe648b212
  4023cb:	sbb    eax,0xecc71cde
  4023d0:	dec    edi
  4023d1:	pop    ss
  4023d2:	loope  0x402385
  4023d4:	push   eax
  4023d5:	sar    ecx,0xfa
  4023d8:	imul   ebx,DWORD PTR [eax],0x2488d434
  4023de:	std    
  4023df:	jp     0x402422
  4023e1:	lods   eax,DWORD PTR ds:[esi]
  4023e2:	push   ecx
  4023e3:	lods   al,BYTE PTR ds:[esi]
  4023e4:	push   es
  4023e5:	xor    BYTE PTR [ebx],dl
  4023e7:	pop    eax
  4023e8:	push   ebp
  4023e9:	sbb    ebp,DWORD PTR [eax+0x7710d990]
  4023ef:	dec    ebp
  4023f0:	or     al,bh
  4023f2:	xchg   ebx,eax
  4023f3:	add    DWORD PTR [esi+0x3a],esi
  4023f6:	enter  0x2249,0x92
  4023fa:	dec    ebp
  4023fb:	add    eax,0x3122e250
  402400:	mov    DWORD PTR [eax+0x50],eax
  402403:	jns    0x4023c6
  402405:	dec    edi
  402406:	fisub  DWORD PTR [edi+eax*4-0x18b3372a]
  40240d:	ret    
  40240e:	iret   
  40240f:	jo     0x402433
  402411:	jno    0x402492
  402413:	sbb    eax,DWORD PTR [edx-0x41]
  402416:	jle    0x40243f
  402418:	dec    ebx
  402419:	ds daa 
  40241b:	jne    0x402487
  40241d:	sub    ebx,DWORD PTR [ebp-0x41]
  402420:	jp     0x4023cd
  402422:	dec    edi
  402423:	and    edx,DWORD PTR [esi+0x3e]
  402426:	xchg   DWORD PTR [edi+0x7e],edx
  402429:	push   ecx
  40242a:	sti    
  40242b:	stos   DWORD PTR es:[edi],eax
  40242c:	dec    ebp
  40242d:	lea    ecx,[ecx]
  40242f:	je     0x40244e
  402431:	xchg   ecx,eax
  402432:	push   ds
  402433:	fsub   DWORD PTR [edx-0x2c]
  402436:	nop
  402437:	add    ebp,eax
  402439:	jb     0x402464
  40243b:	scas   al,BYTE PTR es:[edi]
  40243c:	mov    dl,0x8
  40243e:	dec    ebp
  40243f:	cmp    eax,0x89f7e232
  402444:	nop
  402445:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402446:	cmc    
  402447:	jo     0x402492
  402449:	jle    0x4023f9
  40244b:	xchg   DWORD PTR [ecx],edi
  40244d:	mov    edx,0x51836a0c
  402452:	mov    ds:0x1de5a538,al
  402457:	sbb    eax,DWORD PTR [ebx+esi*1+0x3f]
  40245b:	in     al,0x9b
  40245d:	retf   
  40245e:	sub    BYTE PTR [edi],dh
  402460:	call   0x5bf1e86c
  402465:	add    eax,0x3632ed1
  40246a:	gs scas eax,DWORD PTR es:[edi]
  40246c:	add    BYTE PTR [eax-0x562fcc25],ah
  402472:	adc    eax,0x4474d265
  402477:	sbb    edx,DWORD PTR [esp+ebp*8+0x12]
  40247b:	cmp    bl,cl
  40247d:	sub    eax,0xdfbea2c9
  402482:	mov    eax,0xf6ddfa4f
  402487:	out    0xed,al
  402489:	jmp    0x4024cb
  40248b:	inc    eax
  40248c:	ins    DWORD PTR es:[edi],dx
  40248d:	pop    esp
  40248e:	lods   al,BYTE PTR ds:[esi]
  40248f:	sbb    al,0xdc
  402491:	rcr    DWORD PTR [edi-0x77],0x99
  402495:	jecxz  0x4024a2
  402497:	jo     0x40242c
  402499:	cmp    BYTE PTR [edx+0xb3c04fd],bl
  40249f:	cdq    
  4024a0:	cmp    DWORD PTR [ebx-0x1f265e01],esp
  4024a6:	imul   esp,DWORD PTR [edx+0x3a],0x37
  4024aa:	shl    DWORD PTR [edi+0xba59f3],0xef
  4024b1:	mov    ah,0x21
  4024b3:	sar    ebx,1
  4024b5:	sbb    eax,0x6c0b94ac
  4024ba:	popa   
  4024bb:	push   ecx
  4024bc:	ds test al,0xa3
  4024bf:	add    bl,BYTE PTR [esi-0x3e5d6dd1]
  4024c5:	call   FWORD PTR [ecx-0x31942c37]
  4024cb:	sbb    al,0x3a
  4024cd:	mov    ds:0xc2686188,eax
  4024d2:	std    
  4024d3:	pop    ebp
  4024d4:	adc    al,0x27
  4024d6:	push   ecx
  4024d7:	mov    bl,0x96
  4024d9:	cmp    eax,0xf9bad189
  4024de:	adc    BYTE PTR ds:0x6293fcdd,bh
  4024e4:	das    
  4024e5:	jne    0x4024c0
  4024e7:	packssdw mm4,QWORD PTR [ebp+0x62]
  4024eb:	cmc    
  4024ec:	out    dx,al
  4024ed:	aad    0x90
  4024ef:	stos   BYTE PTR es:[edi],al
  4024f0:	jg     0x402476
  4024f2:	and    al,bh
  4024f4:	lock pusha 
  4024f6:	and    al,0xb4
  4024f8:	fs pusha 
  4024fa:	inc    ebx
  4024fb:	xor    eax,0xc9c1ede0
  402500:	cli    
  402501:	call   0xb93425d1
  402506:	ret    
  402507:	mov    ah,0x99
  402509:	or     DWORD PTR [ecx-0x3a],esp
  40250c:	pop    es
  40250d:	and    al,0x81
  40250f:	sar    BYTE PTR [edi+0x12637626],cl
  402515:	sub    esp,0x1b6fee6b
  40251b:	jb     0x402577
  40251d:	mov    cl,0x7f
  40251f:	leave  
  402520:	sub    ah,ch
  402522:	sar    DWORD PTR [ecx-0xb],1
  402525:	jne    0x402563
  402527:	dec    edi
  402528:	inc    ebp
  402529:	(bad)  
  40252b:	rcl    BYTE PTR [edi],1
  40252d:	lods   al,BYTE PTR ds:[esi]
  40252e:	(bad)  
  40252f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402530:	add    cl,dh
  402532:	xchg   BYTE PTR [ecx+esi*1],cl
  402535:	inc    esi
  402536:	pop    ss
  402537:	pusha  
  402538:	ins    DWORD PTR es:[edi],dx
  402539:	inc    edi
  40253a:	adc    ecx,DWORD PTR [edi+0x21]
  40253d:	das    
  40253e:	fcmovnu st,st(6)
  402540:	or     al,0x54
  402542:	xchg   esi,eax
  402543:	push   edi
  402544:	jmp    DWORD PTR [eax-0x5003275]
  40254a:	pop    ds
  40254b:	ss dec eax
  40254d:	push   ebx
  40254e:	adc    al,0x7b
  402550:	push   eax
  402551:	add    BYTE PTR [ebx-0x7856faaf],bh
  402557:	loopne 0x402563
  402559:	push   edx
  40255a:	xchg   esp,eax
  40255b:	(bad)  
  40255d:	jmp    0xec95aa91
  402562:	mov    esi,0x67abd9bd
  402567:	fiadd  DWORD PTR [edi+edi*4+0x229e1af0]
  40256e:	lahf   
  40256f:	dec    ecx
  402570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402571:	je     0x40256b
  402573:	mov    ebp,0x44be3661
  402578:	or     ebx,DWORD PTR [edx+0x381cb693]
  40257e:	(bad)  
  40257f:	sub    DWORD PTR [esi+esi*8-0x301ae87e],0x942df069
  40258a:	imul   eax,DWORD PTR [ecx+0x6a],0x7f9583b2
  402591:	test   DWORD PTR ds:0xa0f1f798,edi
  402597:	dec    esi
  402598:	mov    eax,edi
  40259a:	into   
  40259b:	fadd   QWORD PTR [ebx+0x1361fe7a]
  4025a1:	aas    
  4025a2:	xor    ah,BYTE PTR [ebp-0x33351f0e]
  4025a8:	cmc    
  4025a9:	pushf  
  4025aa:	inc    ecx
  4025ab:	int    0x71
  4025ad:	dec    edx
  4025ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025af:	mov    ecx,0x85273751
  4025b4:	jnp    0x402566
  4025b6:	stos   BYTE PTR es:[di],al
  4025b8:	mov    DWORD PTR [esp+ecx*4+0x7a],esi
  4025bc:	outs   dx,DWORD PTR ds:[esi]
  4025bd:	mov    ebp,0x6e1e79f6
  4025c2:	or     eax,0x31255a69
  4025c7:	sbb    eax,0x9d936ee0
  4025cc:	clc    
  4025cd:	sub    ebp,DWORD PTR [edi+0x4]
  4025d0:	test   cl,ah
  4025d2:	sub    eax,0x2749a73
  4025d7:	xor    DWORD PTR [edx-0x2d],ecx
  4025da:	fcom   DWORD PTR [ebx]
  4025dc:	outs   dx,BYTE PTR ds:[esi]
  4025dd:	add    DWORD PTR [edi-0x150b8d44],ecx
  4025e3:	xor    eax,0xbfa5ef73
  4025e8:	lods   al,BYTE PTR ds:[esi]
  4025e9:	adc    ebp,DWORD PTR [ecx]
  4025eb:	or     al,0x15
  4025ed:	mov    al,0xe4
  4025ef:	jp     0x4025a1
  4025f1:	mov    edx,0x2d79217e
  4025f6:	pop    ecx
  4025f7:	pop    DWORD PTR [eax+ebp*4]
  4025fa:	cmp    BYTE PTR [edx-0x6],ah
  4025fd:	test   DWORD PTR [edi+ecx*4-0x65],eax
  402601:	cmp    al,0x53
  402603:	shl    BYTE PTR [ebx-0x7f],cl
  402606:	xor    DWORD PTR [ebx-0x755e750d],ecx
  40260c:	jle    0x402592
  40260e:	in     eax,0x59
  402610:	cwde   
  402611:	push   ss
  402612:	test   eax,0x2b63136a
  402617:	adc    eax,0x4579e0cd
  40261c:	mov    esp,0x5018b8c1
  402621:	mov    esp,0x328ca3db
  402626:	cs mov ebp,0x2d5b8fe0
  40262c:	push   ss
  40262d:	out    dx,eax
  40262e:	das    
  40262f:	stc    
  402630:	mov    edx,0x277ecd5
  402635:	jp     0x402638
  402637:	imul   edi,DWORD PTR [ebx],0x37ba669f
  40263d:	sbb    ecx,DWORD PTR [ecx]
  40263f:	stos   DWORD PTR es:[edi],eax
  402640:	repz lock xchg esp,eax
  402643:	sahf   
  402644:	pop    esi
  402645:	mov    bh,0xd9
  402647:	adc    al,0xf7
  402649:	pop    ds
  40264a:	icebp  
  40264b:	out    dx,al
  40264c:	stos   BYTE PTR es:[edi],al
  40264d:	sub    bl,ch
  40264f:	loop   0x402647
  402651:	(bad)  
  402652:	push   esp
  402653:	mov    esi,0x278f4438
  402658:	inc    esp
  402659:	popa   
  40265a:	sub    BYTE PTR [edi-0x2bfde5e2],cl
  402660:	inc    ebp
  402661:	loope  0x402631
  402663:	retf   
  402664:	mov    ebx,0x971b8a12
  402669:	(bad)  
  40266a:	inc    esp
  40266b:	push   es
  40266c:	lods   eax,DWORD PTR ds:[esi]
  40266d:	xor    ah,BYTE PTR [ebp+0x7b96e6db]
  402673:	mov    eax,ds:0x7da24969
  402678:	jmp    0xd543:0xf6441d62
  40267f:	mov    DWORD PTR [edx],esi
  402681:	cmp    al,0x3a
  402683:	adc    al,0x25
  402685:	test   al,0xa5
  402687:	xor    al,0x60
  402689:	ss dec ecx
  40268b:	inc    ecx
  40268c:	hlt    
  40268d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40268e:	loopne 0x402619
  402690:	jmp    0x4026b1
  402692:	push   0xe3aa20c3
  402697:	mov    cl,BYTE PTR [ebx-0x12]
  40269a:	sbb    eax,0x51ca9f9d
  40269f:	(bad)  
  4026a0:	imul   ecx,DWORD PTR [ebx+0x2e3c5b49],0xb434ecf4
  4026aa:	add    ch,BYTE PTR [edx+0x66]
  4026ad:	nop
  4026ae:	mov    esp,0xa20ef183
  4026b3:	stos   DWORD PTR es:[edi],eax
  4026b4:	sbb    eax,0x12832186
  4026b9:	or     ah,dl
  4026bb:	jae    0x4026ba
  4026bd:	push   edx
  4026be:	lods   al,BYTE PTR ds:[esi]
  4026bf:	add    edi,ecx
  4026c1:	bound  esi,QWORD PTR [ebp+0x70]
  4026c4:	dec    ebx
  4026c5:	ret    0x1b9b
  4026c8:	sar    DWORD PTR [esi],1
  4026ca:	shr    BYTE PTR [esi],0x87
  4026cd:	sbb    eax,0x659febc0
  4026d2:	jl     0x402690
  4026d4:	dec    ebp
  4026d5:	inc    eax
  4026d6:	adc    BYTE PTR [ecx],0xa9
  4026d9:	or     eax,0x65435355
  4026de:	jnp    0x4026cf
  4026e0:	mov    dh,0x2e
  4026e2:	jne    0x40272c
  4026e4:	mov    ebx,0xc1b48c
  4026e9:	pop    edi
  4026ea:	jecxz  0x402703
  4026ec:	mov    bh,0xc4
  4026ee:	cmp    eax,0x8b6eb054
  4026f3:	jb     0x4026bb
  4026f5:	push   esi
  4026f6:	push   ebp
  4026f7:	push   ss
  4026f8:	cmp    ah,al
  4026fa:	inc    ebp
  4026fb:	inc    esi
  4026fc:	pop    es
  4026fd:	sbb    eax,0xe225b10
  402702:	xchg   edx,eax
  402703:	cwde   
  402704:	mov    ch,0x87
  402706:	stos   DWORD PTR es:[edi],eax
  402707:	aam    0x3c
  402709:	fild   DWORD PTR [ebx]
  40270b:	mov    eax,0x5a726271
  402710:	push   esi
  402711:	out    dx,al
  402712:	(bad)  
  402713:	gs cmp esi,edx
  402716:	loope  0x40270d
  402718:	sub    al,0xca
  40271a:	arpl   si,di
  40271c:	jg     0x402754
  40271e:	enter  0x1e5,0x40
  402722:	repz or eax,0xe473c6da
  402728:	add    DWORD PTR [edx+0x197d6201],0xffffffb8
  40272f:	div    BYTE PTR [edx-0x71]
  402732:	out    0xed,al
  402734:	mov    dh,0x2f
  402736:	sbb    dl,bl
  402738:	das    
  402739:	mov    eax,0x3f529b16
  40273e:	xor    DWORD PTR [edx],ebp
  402740:	fld    TBYTE PTR [edi]
  402742:	pusha  
  402743:	outs   dx,BYTE PTR ds:[esi]
  402744:	gs and al,0x1c
  402747:	add    al,bh
  402749:	cmp    bl,bh
  40274b:	pop    edi
  40274c:	cld    
  40274d:	jmp    0x298ce7be
  402752:	xor    BYTE PTR [esi+ecx*4+0x77],ch
  402756:	adc    ebp,DWORD PTR [edx+eax*2]
  402759:	pop    eax
  40275a:	lock lock in al,dx
  40275d:	dec    ebp
  40275e:	in     al,dx
  40275f:	cmp    al,0xe5
  402761:	ins    BYTE PTR es:[edi],dx
  402762:	pop    ebx
  402763:	xor    BYTE PTR [edx+ecx*8-0x4522df0],cl
  40276a:	sbb    BYTE PTR [edi-0x49],cl
  40276d:	inc    edi
  40276e:	das    
  40276f:	nop
  402770:	gs popa 
  402772:	xchg   DWORD PTR [ebp-0x16],edx
  402775:	int    0xfc
  402777:	cdq    
  402778:	jmp    0xd3411356
  40277d:	dec    esp
  40277e:	inc    ebp
  40277f:	adc    eax,0xedd62d8e
  402784:	call   0x45ae:0x6f3d3539
  40278b:	repnz or BYTE PTR [edx+0x23a401ce],dh
  402792:	mov    cl,BYTE PTR [eax-0x71]
  402795:	rol    ebp,cl
  402797:	das    
  402798:	cmovo  eax,DWORD PTR [esi-0x7c]
  40279c:	inc    edi
  40279d:	outs   dx,BYTE PTR ds:[esi]
  40279e:	push   ecx
  40279f:	push   eax
  4027a0:	mov    al,ds:0xcd33b414
  4027a5:	mov    eax,0x9bee93ec
  4027aa:	sbb    DWORD PTR [esi+edx*2],esp
  4027ad:	xchg   ebp,eax
  4027ae:	rcl    DWORD PTR [edx],1
  4027b0:	mov    ebx,0xeaa6f8f0
  4027b5:	or     al,0x45
  4027b7:	dec    ebp
  4027b8:	jno    0x40280a
  4027ba:	vpshldq xmm0{k7}{z},xmm7,XMMWORD PTR [ebp+0x3c23edda],0x6c
  4027c5:	mov    esi,0xb58fddfb
  4027ca:	test   eax,0xd6b638c3
  4027cf:	ror    BYTE PTR [ebx],0x77
  4027d2:	popf   
  4027d3:	addr16 push edi
  4027d5:	push   ecx
  4027d6:	mov    al,0xb9
  4027d8:	into   
  4027d9:	lock ins BYTE PTR es:[edi],dx
  4027db:	jno    0x402828
  4027dd:	je     0x402827
  4027df:	out    dx,eax
  4027e0:	mov    al,ds:0x8651f921
  4027e5:	add    DWORD PTR [edx+0x2c],eax
  4027e8:	rcr    BYTE PTR [ebx-0x1f584bda],0x55
  4027ef:	cmp    BYTE PTR [eax],dl
  4027f1:	inc    edi
  4027f3:	outs   dx,BYTE PTR ds:[esi]
  4027f4:	(bad)  
  4027f5:	lahf   
  4027f6:	mov    cl,0x2f
  4027f8:	ret    
  4027f9:	sbb    esp,ecx
  4027fb:	push   ebx
  4027fc:	dec    edx
  4027fd:	xchg   esi,eax
  4027fe:	push   0xffffffcb
  402800:	fs fs fsubrp st(6),st
  402804:	or     BYTE PTR [edi],0xed
  402807:	xor    BYTE PTR [ecx],dl
  402809:	jmp    0xef35:0xd96a3b95
  402810:	xchg   edx,eax
  402811:	jo     0x4027a4
  402813:	mov    ds:0x534d102b,eax
  402818:	ds push ss
  40281a:	mov    ebx,0x9336e21a
  40281f:	inc    ecx
  402820:	mov    ds:0x468bf0ef,eax
  402825:	sbb    DWORD PTR [esi-0x20],eax
  402828:	inc    edx
  402829:	mov    ch,dh
  40282b:	inc    ebp
  40282c:	pop    eax
  40282d:	adc    al,BYTE PTR [ebx+0x4e]
  402830:	and    BYTE PTR [ebp-0x3a],dh
  402833:	adc    ebx,0x66a440fb
  402839:	or     bh,bh
  40283b:	add    edx,DWORD PTR [ebx-0x1e]
  40283e:	inc    ebp
  40283f:	sahf   
  402840:	test   al,0xdd
  402842:	in     eax,0x1d
  402844:	xchg   ebx,edx
  402846:	mov    ebx,0x865b9677
  40284b:	push   edx
  40284c:	adc    DWORD PTR [ecx-0x4e7ec9f],esi
  402852:	fwait
  402853:	push   0xf8709b5a
  402858:	jg     0x4028d5
  40285a:	xor    ebx,DWORD PTR [edx+edi*8+0x8]
  40285e:	pushf  
  40285f:	imul   edi,DWORD PTR [esi+eax*8-0xb65925],0x5ee23706
  40286a:	fs ins BYTE PTR es:[edi],dx
  40286c:	inc    ecx
  40286d:	aad    0x78
  40286f:	mov    bl,0x24
  402871:	or     ah,ah
  402873:	push   0x9921682a
  402878:	es into 
  40287a:	retf   
  40287b:	jns    0x4028bb
  40287d:	rcr    bl,cl
  40287f:	add    dl,cl
  402881:	sub    esi,ecx
  402883:	bound  ebp,QWORD PTR [edx+0x4ad6e11e]
  402889:	sub    eax,0x49665c0d
  40288e:	add    BYTE PTR [ebx+0x57],dl
  402891:	jmp    0xdc1441ea
  402896:	jp     0x40286d
  402898:	adc    dl,bl
  40289a:	or     eax,0x1f23c14
  40289f:	dec    edi
  4028a0:	imul   ebx,DWORD PTR [edi],0x1c2b280a
  4028a6:	jno    0x402836
  4028a8:	ss inc eax
  4028aa:	inc    esp
  4028ab:	retf   0x5e6e
  4028ae:	call   0xd6b5:0x73a4a757
  4028b5:	shr    edx,1
  4028b7:	adc    BYTE PTR [ebx+0x6bca505b],ch
  4028bd:	iret   
  4028be:	popa   
  4028bf:	mov    ch,0xd5
  4028c1:	aam    0x1a
  4028c3:	(bad)
  4028c7:	lahf   
  4028c8:	ret    0x5af4
  4028cb:	popa   
  4028cc:	dec    esp
  4028cd:	mov    edx,DWORD PTR [eax+0x34]
  4028d0:	and    ebx,DWORD PTR [edi-0xf284445]
  4028d6:	jno    0x402873
  4028d8:	mov    al,ds:0x5be9502b
  4028dd:	mov    esi,DWORD PTR [edx+0x28]
  4028e0:	pop    ebp
  4028e1:	sub    edx,DWORD PTR [ecx+edi*2+0x1c]
  4028e5:	repnz and edx,DWORD PTR ds:0x7d39a47e
  4028ec:	sub    BYTE PTR [eax+0x3da2e045],bl
  4028f2:	fisttp DWORD PTR [ecx]
  4028f4:	sbb    eax,0x539d46f1
  4028f9:	xchg   esp,eax
  4028fa:	inc    edi
  4028fb:	sbb    DWORD PTR [esi-0x2b3e2c1d],esp
  402901:	stos   BYTE PTR es:[edi],al
  402902:	imul   esi,DWORD PTR [eax+0xb],0xffffffb2
  402906:	enter  0x69e6,0x7
  40290a:	popa   
  40290b:	mov    ds:0xd5bca9bf,eax
  402910:	loopne 0x402986
  402912:	jno    0x4028eb
  402914:	xor    eax,0x64544d57
  402919:	mov    edi,0x5bece762
  40291e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40291f:	gs cmc 
  402921:	xchg   edi,eax
  402922:	loop   0x4028ca
  402924:	test   al,0x86
  402926:	inc    ebp
  402927:	jns    0x4028f2
  402929:	dec    ecx
  40292a:	jne    0x4028fe
  40292c:	mov    DWORD PTR [edi-0x526992aa],edx
  402932:	add    DWORD PTR [edi-0x1b],ecx
  402935:	or     al,0xb3
  402937:	mov    edx,0x223912a9
  40293c:	out    dx,eax
  40293d:	pop    eax
  40293e:	out    dx,al
  40293f:	sub    eax,0x65d40342
  402944:	data16 fadd QWORD PTR [ecx]
  402947:	adc    eax,0xfd5c043e
  40294c:	loopne 0x4029bc
  40294e:	or     DWORD PTR [edx],esi
  402950:	leave  
  402951:	inc    ebx
  402952:	xchg   BYTE PTR [edx-0x5e],dh
  402955:	sbb    DWORD PTR [ecx-0xa43e0fd],0xab5ab4ff
  40295f:	sub    eax,0x31cf0f13
  402964:	dec    edi
  402965:	inc    ecx
  402966:	push   es
  402967:	pushf  
  402968:	test   eax,0xc00105f4
  40296d:	addr16 cmp eax,0x6af4ddcc
  402973:	mov    ch,0x11
  402975:	mov    cl,0x72
  402977:	test   DWORD PTR [ebx+0x430999f7],eax
  40297d:	cmp    BYTE PTR [ebx+0x7dc47064],0x4d
  402984:	cs and ecx,ecx
  402987:	pusha  
  402988:	(bad)  
  402989:	jg     0x40291e
  40298b:	cli    
  40298c:	neg    BYTE PTR [esi]
  40298e:	adc    eax,0x37991c20
  402993:	(bad)  
  402994:	repz mov al,0x8a
  402997:	popa   
  402998:	fwait
  402999:	in     eax,0xfc
  40299b:	call   0x538c:0xdc10f23f
  4029a2:	out    dx,al
  4029a3:	xor    BYTE PTR [esp+edx*4-0x6647b1ff],dh
  4029aa:	pop    esi
  4029ab:	arpl   WORD PTR [ecx],cx
  4029ad:	fwait
  4029ae:	sub    edx,DWORD PTR [edx]
  4029b0:	fs xchg esp,eax
  4029b2:	mov    eax,ds:0x5efd8068
  4029b7:	mov    eax,0x17a0f450
  4029bc:	cmp    al,0x6
  4029be:	out    dx,al
  4029bf:	int    0xbd
  4029c1:	push   ecx
  4029c2:	jbe    0x402a33
  4029c4:	ins    DWORD PTR es:[edi],dx
  4029c5:	xchg   edx,eax
  4029c6:	push   esi
  4029c7:	hlt    
  4029c8:	cmp    eax,0xb3e087cb
  4029cd:	xchg   ebx,eax
  4029ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029cf:	dec    edx
  4029d0:	scas   eax,DWORD PTR es:[edi]
  4029d1:	push   edx
  4029d2:	or     ch,BYTE PTR [ecx+0x5f]
  4029d5:	xlat   BYTE PTR ds:[ebx]
  4029d6:	add    eax,0x5823169e
  4029db:	imul   ebx,DWORD PTR [edi+ebp*4],0xbfb657a6
  4029e2:	cdq    
  4029e3:	bound  esp,QWORD PTR [ecx+0x45]
  4029e6:	adc    DWORD PTR [ebx+0x50ba2e70],0xffffff80
  4029ed:	scas   al,BYTE PTR es:[edi]
  4029ee:	mov    bh,0x3f
  4029f0:	fistp  QWORD PTR [edi]
  4029f2:	jbe    0x402a64
  4029f4:	es sub edx,0xffffff88
  4029f8:	cmp    ecx,DWORD PTR [ebp+0x1]
  4029fb:	mov    esi,0x17d53b70
  402a00:	pusha  
  402a01:	or     dl,dl
  402a03:	push   esi
  402a04:	or     dh,BYTE PTR [esi]
  402a06:	sub    BYTE PTR [ebp-0x551643fc],bh
  402a0c:	mov    ebx,0x5fab1520
  402a11:	in     al,0xee
  402a13:	cs dec esi
  402a15:	mov    BYTE PTR [eax],dh
  402a17:	into   
  402a18:	cmp    eax,0x8132a00f
  402a1d:	ja     0x402a4a
  402a1f:	and    edi,DWORD PTR [ebx-0x257faaa7]
  402a25:	push   ebp
  402a26:	aam    0x1
  402a28:	xchg   esp,eax
  402a29:	jae    0x402a64
  402a2b:	push   cs
  402a2c:	push   cs
  402a2d:	stc    
  402a2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a30:	sub    al,0x58
  402a32:	fldl2t 
  402a34:	and    esp,DWORD PTR [edi-0x2c2f1dc6]
  402a3a:	mov    eax,ds:0xf71d97a2
  402a3f:	pop    eax
  402a40:	sahf   
  402a41:	fild   WORD PTR [edx-0x52]
  402a44:	cmc    
  402a45:	ds jo  0x402a7d
  402a48:	rcl    DWORD PTR es:[esi],cl
  402a4b:	add    al,0xbb
  402a4d:	sub    al,0xc6
  402a4f:	les    eax,FWORD PTR [ebp+0x75]
  402a52:	xor    ch,BYTE PTR [ecx-0x80]
  402a55:	xor    eax,0x593735fd
  402a5a:	out    dx,eax
  402a5b:	mov    ah,0x93
  402a5d:	out    0x3d,al
  402a5f:	jne    0x402a0d
  402a61:	push   ss
  402a62:	test   eax,0xce7d221b
  402a67:	lahf   
  402a68:	ror    BYTE PTR [edi+0x515bc8ed],0x3c
  402a6f:	push   esi
  402a70:	repz call 0xc4ca:0xde6056e9
  402a78:	mov    bh,0xcf
  402a7a:	jns    0x402a3e
  402a7c:	mov    al,0x9e
  402a7e:	imul   ecx,DWORD PTR [eax+0x2db0701],0xeb21acba
  402a88:	inc    eax
  402a89:	mov    ds:0xb1a6953d,eax
  402a8e:	inc    ebp
  402a8f:	inc    edx
  402a90:	leave  
  402a91:	pop    edi
  402a92:	fcmovnu st,st(4)
  402a94:	add    ah,BYTE PTR [ebx-0x72]
  402a97:	js     0x402a3f
  402a99:	push   eax
  402a9a:	cmp    eax,0x9523f428
  402a9f:	ror    BYTE PTR [ebx+0x28d7bbd3],0x7f
  402aa6:	sti    
  402aa7:	repnz fistp DWORD PTR [edi+0x69]
  402aab:	push   ebp
  402aac:	test   al,0x3a
  402aae:	dec    ebp
  402aaf:	xchg   ecx,eax
  402ab0:	sub    eax,0xf525d9af
  402ab5:	mov    al,0xb3
  402ab7:	dec    ebp
  402ab8:	and    al,0xdc
  402aba:	cld    
  402abb:	ds push esi
  402abd:	adc    al,0x98
  402abf:	mov    dl,0x65
  402ac1:	mov    DWORD PTR [eiz*2-0x3e8c736f],ebp
  402ac8:	int    0xff
  402aca:	lahf   
  402acb:	lock daa 
  402acd:	scas   al,BYTE PTR es:[edi]
  402ace:	leave  
  402acf:	jmp    0x70f344f4
  402ad4:	fdiv   QWORD PTR [ecx+0x2d]
  402ad7:	xor    DWORD PTR [eax],edi
  402ad9:	ja     0x402ac2
  402adb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402adc:	pop    esi
  402add:	iret   
  402ade:	int    0x72
  402ae0:	jp     0x402b61
  402ae2:	sub    BYTE PTR [edi],dl
  402ae4:	xchg   BYTE PTR [ecx+0x3e],ch
  402ae7:	xchg   BYTE PTR [ebp-0x4634a47],bh
  402aed:	adc    eax,0x82abba8c
  402af2:	pop    ds
  402af3:	xchg   DWORD PTR [ecx+0x4ecace5],edx
  402af9:	sbb    dh,bh
  402afb:	aad    0xc
  402afd:	shl    DWORD PTR [ecx],0x7f
  402b00:	call   0x5ad7:0x24dfb6bf
  402b07:	cld    
  402b08:	mov    al,0xd4
  402b0a:	hlt    
  402b0b:	jg     0x402b69
  402b0d:	jno    0x402b09
  402b0f:	pop    ss
  402b10:	push   ss
  402b11:	jp     0x402afc
  402b13:	adc    esi,DWORD PTR [esi-0x4a]
  402b16:	mov    dh,0x86
  402b18:	pop    ds
  402b19:	cwde   
  402b1a:	cmp    bh,BYTE PTR [esi-0x5cce9279]
  402b20:	xor    DWORD PTR [edi+0x2b],ebx
  402b23:	mov    ds:0xf738f26e,eax
  402b28:	mov    ch,0x8d
  402b2a:	or     dh,al
  402b2c:	lock xor al,0xc2
  402b2f:	add    al,0x7f
  402b31:	xchg   ebx,eax
  402b32:	cmp    eax,DWORD PTR [ecx+0x26]
  402b35:	inc    ecx
  402b36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b37:	xchg   BYTE PTR [edx],dl
  402b39:	test   DWORD PTR [ecx+ecx*8+0x2e],edx
  402b3d:	dec    edi
  402b3e:	retf   0x2c83
  402b41:	out    0xce,al
  402b43:	dec    ebp
  402b44:	add    eax,0x885fa998
  402b49:	mov    dh,0x42
  402b4b:	push   0x5f43c2f9
  402b50:	adc    bh,BYTE PTR [edi-0xbdefd62]
  402b56:	xchg   edi,eax
  402b57:	xchg   edx,eax
  402b58:	push   ds
  402b59:	in     eax,0x4f
  402b5b:	and    eax,0xcc030559
  402b61:	xor    eax,0x27d26028
  402b66:	sub    al,BYTE PTR ds:[ecx]
  402b69:	xlat   BYTE PTR ds:[ebx]
  402b6a:	dec    BYTE PTR [esi]
  402b6c:	cmp    al,0xab
  402b6e:	mov    ds:0xc559c579,eax
  402b73:	ret    
  402b74:	mov    dl,0x8f
  402b76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b77:	enter  0x5fb2,0xdb
  402b7b:	xor    eax,0x1642d760
  402b80:	loop   0x402be6
  402b82:	and    ecx,DWORD PTR [eax]
  402b84:	push   cs
  402b85:	cmp    al,0x33
  402b87:	dec    eax
  402b88:	and    eax,0x49a29fe5
  402b8d:	pop    esi
  402b8e:	clc    
  402b8f:	xchg   ebp,eax
  402b90:	jge    0x402b28
  402b92:	add    esi,DWORD PTR [ebp*2-0x5bbb639]
  402b99:	xchg   ebp,eax
  402b9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b9b:	inc    edx
  402b9c:	jp     0x402b78
  402b9e:	addr16 jmp 0x3583:0x1d5db211
  402ba6:	jbe    0x402b3c
  402ba8:	rcr    DWORD PTR [edi-0x5],1
  402bab:	dec    ebx
  402bac:	jmp    0x51823eda
  402bb1:	pushf  
  402bb2:	cmc    
  402bb3:	push   cs
  402bb4:	ds hlt 
  402bb6:	jmp    0xbde1:0x6c118f4b
  402bbd:	cmp    DWORD PTR [edi-0x563a214b],ebp
  402bc3:	lock das 
  402bc5:	xchg   esi,eax
  402bc6:	mov    al,0xed
  402bc8:	jbe    0x402b74
  402bca:	mov    ecx,0xef7f4b05
  402bcf:	ret    0xfcbf
  402bd2:	cmp    ah,BYTE PTR [ecx+0x4d]
  402bd5:	inc    ebx
  402bd7:	sub    cl,BYTE PTR [esi+0x20]
  402bda:	add    DWORD PTR [ebx],esp
  402bdc:	outs   dx,DWORD PTR ds:[esi]
  402bdd:	in     al,0x4e
  402bdf:	lock push edi
  402be1:	mov    ecx,0x4718aaa6
  402be6:	push   DWORD PTR [ebp-0x54afed36]
  402bec:	sub    al,0x57
  402bee:	sub    cl,cl
  402bf0:	test   BYTE PTR [edx-0x7a],al
  402bf3:	or     eax,0x99b2b302
  402bf8:	out    dx,al
  402bf9:	sar    BYTE PTR ds:0x298be1fe,cl
  402bff:	pop    edi
  402c00:	in     al,dx
  402c01:	(bad)  
  402c02:	(bad)  
  402c04:	cmp    dl,BYTE PTR [eax-0xe]
  402c07:	mov    fs,WORD PTR [edi]
  402c09:	retf   0x2164
  402c0c:	and    eax,0xffffffe0
  402c0f:	(bad)  
  402c10:	mov    ?,eax
  402c12:	mov    WORD PTR [ebx],es
  402c14:	adc    eax,0x460a0243
  402c19:	dec    ebx
  402c1a:	mov    cl,0x43
  402c1c:	fnstenv [eax-0x1df9b358]
  402c22:	iret   
  402c23:	test   DWORD PTR [esi-0x17],ebp
  402c26:	inc    eax
  402c27:	jb     0x402c75
  402c29:	mov    ah,0x27
  402c2b:	ficomp WORD PTR [ebx]
  402c2d:	jp     0x402bf7
  402c2f:	test   DWORD PTR [ecx+0x719a46a9],edi
  402c35:	es mov ah,0x45
  402c38:	adc    eax,0x9a5b3060
  402c3d:	test   BYTE PTR [edi+0x55],ah
  402c40:	popa   
  402c41:	retf   0x7c23
  402c44:	jne    0x402c7a
  402c46:	sahf   
  402c47:	ret    0xc428
  402c4a:	jo     0x402be4
  402c4c:	jle    0x402bfb
  402c4e:	fsubp  st(1),st
  402c50:	std    
  402c51:	lock add edi,esi
  402c54:	xlat   BYTE PTR ds:[ebx]
  402c55:	aaa    
  402c56:	mov    cl,0x55
  402c58:	push   esi
  402c59:	mov    ds:0x1e03f447,al
  402c5e:	jp     0x402c89
  402c60:	test   eax,0xa9a09a1f
  402c65:	jp     0x402c64
  402c67:	cmp    DWORD PTR [ebx-0x365abcc2],esp
  402c6d:	iret   
  402c6e:	repz fadd st,st(5)
  402c71:	push   0x6b35aeb1
  402c76:	in     al,dx
  402c77:	cmp    dh,BYTE PTR [ebp+0x13]
  402c7a:	xchg   ecx,eax
  402c7b:	push   edi
  402c7c:	js     0x402c10
  402c7e:	and    dh,BYTE PTR [eax+0x6]
  402c81:	push   eax
  402c82:	add    eax,0xc844f06b
  402c87:	test   BYTE PTR [eax+ebx*8],dh
  402c8a:	fwait
  402c8b:	xor    DWORD PTR [eax+0x4da34f95],esi
  402c91:	adc    esp,DWORD PTR ds:0x44a70074
  402c97:	or     al,0xda
  402c99:	jmp    0xf97f5fca
  402c9e:	push   ecx
  402c9f:	mov    ebp,0x92b0d399
  402ca4:	jne    0x402c51
  402ca6:	dec    eax
  402ca7:	fmul   st,st(1)
  402ca9:	push   0x3c4b4ade
  402cae:	jo     0x402cbd
  402cb0:	scas   eax,DWORD PTR es:[edi]
  402cb1:	das    
  402cb2:	(bad)  
  402cb4:	lahf   
  402cb5:	inc    ecx
  402cb6:	out    0x19,eax
  402cb8:	push   ebp
  402cb9:	sbb    BYTE PTR [edx],0x22
  402cbc:	int3   
  402cbd:	mov    bh,BYTE PTR [ebx-0x25]
  402cc0:	mov    bl,0x7c
  402cc2:	(bad)  
  402cc3:	rol    BYTE PTR [edx-0x49],cl
  402cc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cc7:	outs   dx,BYTE PTR ds:[esi]
  402cc8:	mov    ecx,0xe0e106ce
  402ccd:	inc    edi
  402cce:	out    dx,al
  402ccf:	push   cs
  402cd0:	add    dl,BYTE PTR [eax-0xa]
  402cd3:	xor    ah,ah
  402cd5:	lahf   
  402cd6:	das    
  402cd7:	out    0xf,eax
  402cd9:	cwde   
  402cda:	sbb    BYTE PTR ds:[eax+0x76f953c7],cl
  402ce1:	addr16 xchg ecx,eax
  402ce3:	das    
  402ce4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ce5:	mov    ebp,0xbfef91d0
  402cea:	pop    edi
  402ceb:	jmp    0x402ccc
  402ced:	int3   
  402cee:	ins    DWORD PTR es:[edi],dx
  402cef:	or     al,0xba
  402cf1:	xchg   ebp,eax
  402cf2:	pop    ecx
  402cf3:	xrelease mov DWORD PTR [eax+0x731d7347],ecx
  402cfa:	xchg   edx,eax
  402cfb:	xor    al,0x14
  402cfd:	or     eax,0x7fc14dcf
  402d02:	fistp  WORD PTR [ecx+0x61]
  402d05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d06:	je     0x402cbc
  402d08:	out    0x8b,al
  402d0a:	sub    DWORD PTR [eax+0x13],eax
  402d0d:	fsubr  DWORD PTR [ecx-0x415c8cc2]
  402d13:	mov    ch,0xd3
  402d15:	les    edi,FWORD PTR [edi+0x6f72fe6]
  402d1b:	xchg   ecx,eax
  402d1c:	cmp    DWORD PTR [ebx+edi*1],ebx
  402d1f:	(bad)  
  402d20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d21:	lahf   
  402d22:	nop
  402d23:	cmc    
  402d24:	pcmpgtb mm6,QWORD PTR [esi+0x62]
  402d28:	jno    0x402d55
  402d2a:	jne    0x402d5a
  402d2c:	jmp    DWORD PTR [ecx-0x6127e71]
  402d32:	das    
  402d33:	iret   
  402d34:	nop
  402d35:	jl     0x402d62
  402d37:	packssdw mm4,QWORD PTR [esi]
  402d3a:	mov    ebp,0x5d11fb65
  402d3f:	ss ret 0x8cc
  402d43:	mov    bl,0xb
  402d45:	xor    BYTE PTR ds:0x57f6f97a,cl
  402d4b:	sub    dh,dh
  402d4d:	fadd   QWORD PTR [edi-0x1490f180]
  402d53:	push   cs
  402d54:	pop    eax
  402d55:	int    0xe7
  402d57:	dec    esp
  402d58:	cdq    
  402d59:	sbb    BYTE PTR [ebx],bl
  402d5b:	out    0x69,eax
  402d5d:	cwde   
  402d5e:	push   cs
  402d5f:	daa    
  402d60:	and    DWORD PTR [esi-0x7f83326],ecx
  402d66:	xchg   DWORD PTR [edi],edx
  402d68:	adc    bl,cl
  402d6a:	sub    bl,BYTE PTR [ecx-0x24b2e81d]
  402d70:	jp     0x402da1
  402d72:	xchg   esi,eax
  402d73:	sub    DWORD PTR [eax+0x101b4715],0x7e
  402d7a:	xchg   edx,eax
  402d7b:	dec    ebp
  402d7c:	push   ds
  402d7d:	fwait
  402d7e:	add    al,0x76
  402d80:	in     al,0x6c
  402d82:	and    BYTE PTR [edi],ch
  402d84:	pop    edx
  402d85:	cmp    dl,BYTE PTR [edx]
  402d87:	into   
  402d88:	push   edx
  402d89:	cmp    DWORD PTR [ecx+0x70],ebp
  402d8c:	push   esi
  402d8d:	xchg   esp,eax
  402d8e:	(bad)  
  402d8f:	sub    BYTE PTR [edx],bl
  402d91:	mov    edi,0x9828446c
  402d96:	inc    ecx
  402d97:	ins    DWORD PTR es:[edi],dx
  402d98:	and    eax,0xb4533d09
  402d9d:	push   0xffffffd9
  402d9f:	dec    edi
  402da0:	adc    cl,BYTE PTR [bp-0x53]
  402da4:	or     bl,al
  402da6:	es enter 0xfe89,0x97
  402dab:	test   DWORD PTR [edx-0x38476eaf],ecx
  402db1:	mov    esp,0xd1db4ed3
  402db6:	in     eax,dx
  402db7:	loop   0x402d74
  402db9:	pushf  
  402dba:	retf   0x7670
  402dbd:	stos   DWORD PTR es:[edi],eax
  402dbe:	push   0x534cb288
  402dc3:	sub    BYTE PTR [edi-0x71e6f1f7],0xf1
  402dca:	(bad)  
  402dcb:	int3   
  402dcc:	mov    edi,0xdcd14510
  402dd1:	xchg   edx,eax
  402dd2:	ds rcl al,0xc3
  402dd6:	mov    ch,0x96
  402dd8:	adc    al,0x12
  402dda:	hlt    
  402ddb:	ds ss (bad) 
  402dde:	xchg   edx,eax
  402ddf:	jae    0x402d7e
  402de1:	int    0xbb
  402de3:	mov    dh,BYTE PTR [edi+0x56]
  402de6:	pop    ds
  402de7:	pop    edx
  402de8:	(bad)  
  402de9:	xor    esi,DWORD PTR [ecx]
  402deb:	xchg   ebp,eax
  402dec:	popf   
  402ded:	xchg   ebx,eax
  402dee:	jge    0x402de1
  402df0:	mov    edx,gs
  402df2:	inc    ebx
  402df3:	xchg   ebp,eax
  402df4:	dec    eax
  402df5:	inc    eax
  402df6:	xor    BYTE PTR [ebx+0xe64a7e0],ch
  402dfc:	mov    ds:0x90aabdfb,al
  402e01:	jmp    0x402e00
  402e03:	cdq    
  402e04:	adc    BYTE PTR [ebp+0xb],0xac
  402e08:	sub    DWORD PTR [edi],0x4351b35a
  402e0e:	sar    DWORD PTR [ecx+0x4f],0xd0
  402e12:	cli    
  402e13:	cs retf 0x7694
  402e17:	in     eax,dx
  402e18:	pop    esp
  402e19:	add    eax,0x2552590f
  402e1e:	mov    al,ds:0xc4cd9d71
  402e23:	aam    0xf
  402e25:	cmc    
  402e26:	xchg   edx,edx
  402e28:	jmp    0xe3beb7f9
  402e2d:	mov    al,0x13
  402e2f:	mov    edx,0xc7c9215c
  402e34:	jg     0x402dda
  402e36:	enter  0x69c7,0x99
  402e3a:	outs   dx,BYTE PTR ds:[esi]
  402e3b:	dec    esp
  402e3c:	les    esp,FWORD PTR [ecx]
  402e3e:	lods   al,BYTE PTR ds:[esi]
  402e3f:	push   ebx
  402e40:	cwde   
  402e41:	daa    
  402e42:	sub    DWORD PTR [ecx+0x22f10f6c],esp
  402e48:	rcl    DWORD PTR [edx+ebp*8+0x5186d3],0x13
  402e50:	or     DWORD PTR [ecx],edi
  402e52:	inc    esp
  402e53:	into   
  402e54:	inc    ebp
  402e55:	adc    cl,BYTE PTR gs:[ecx]
  402e58:	les    esp,FWORD PTR [ebx+0x78]
  402e5b:	hlt    
  402e5c:	sub    ah,0x1d
  402e5f:	in     al,0x66
  402e61:	mov    dl,0x98
  402e63:	add    al,0xa8
  402e65:	mov    eax,0xb6551a92
  402e6a:	lahf   
  402e6b:	add    BYTE PTR [eax-0xe1d616e],0xd1
  402e72:	sub    DWORD PTR [edi+edx*1+0x6f],eax
  402e76:	jb     0x402eaa
  402e78:	or     eax,0xb3dcde51
  402e7d:	(bad)  
  402e7e:	std    
  402e7f:	mov    ebp,0x84cd69d2
  402e84:	dec    edi
  402e85:	adc    eax,0x462ce638
  402e8a:	(bad)  
  402e8b:	sub    esi,DWORD PTR [esi-0xbf24e26]
  402e91:	int3   
  402e92:	sbb    ebx,edi
  402e94:	sbb    BYTE PTR [ebp-0x6d140b7c],0xd3
  402e9b:	enter  0xccb6,0xe4
  402e9f:	cs inc esp
  402ea1:	out    0x80,al
  402ea3:	mov    ah,0x95
  402ea5:	jl     0x402e2f
  402ea7:	daa    
  402ea8:	(bad)  
  402ea9:	repnz fmul DWORD PTR [edi-0x1e]
  402ead:	test   BYTE PTR [esp+ecx*8],bl
  402eb0:	inc    edx
  402eb1:	les    ecx,FWORD PTR [edx-0x5f]
  402eb4:	and    dh,BYTE PTR [edi]
  402eb6:	mov    esi,0xe4d6641d
  402ebb:	aas    
  402ebc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ebd:	xor    eax,0xb5c56dea
  402ec2:	xor    eax,DWORD PTR [eax]
  402ec4:	fild   QWORD PTR [esi]
  402ec6:	xor    eax,0x45f49696
  402ecb:	pusha  
  402ecc:	out    dx,eax
  402ecd:	mov    bl,BYTE PTR [ebx]
  402ecf:	sbb    edi,DWORD PTR [ebx+0x51b88c9f]
  402ed5:	retf   
  402ed6:	call   0xba2fadab
  402edb:	repnz test al,0xd5
  402ede:	mov    ebp,0xa0658b26
  402ee3:	push   es
  402ee4:	add    al,0x96
  402ee6:	fsubr  QWORD PTR [esp+edi*1]
  402ee9:	cs addr16 xor eax,0x540cbf5e
  402ef0:	and    BYTE PTR [ebx+0x1c8d6fae],0x2b
  402ef7:	push   eax
  402ef8:	int    0x8e
  402efa:	(bad)
  402efd:	jb     0x402e95
  402eff:	mov    ebp,DWORD PTR [edx-0x7b]
  402f02:	gs mov cl,0x8a
  402f05:	sub    al,0x9f
  402f07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f08:	cld    
  402f09:	test   al,0x25
  402f0b:	pop    ebx
  402f0c:	mov    ebp,0xd3143908
  402f11:	leave  
  402f12:	sub    edi,DWORD PTR [ebx-0x6c839eba]
  402f18:	cmc    
  402f19:	bound  edx,QWORD PTR [edx+0xa]
  402f1c:	(bad)
  402f20:	sub    al,0x97
  402f22:	jb     0x402ebb
  402f24:	push   ecx
  402f25:	or     eax,ebp
  402f27:	daa    
  402f28:	push   esi
  402f29:	lods   eax,DWORD PTR ds:[esi]
  402f2a:	add    BYTE PTR [edx-0x5d],ch
  402f2d:	adc    DWORD PTR [eax+0x67],esp
  402f30:	ja     0x402f79
  402f32:	and    dl,BYTE PTR [ebp+0x7ea6fbcd]
  402f38:	(bad)  
  402f39:	cmp    esp,DWORD PTR [eax]
  402f3b:	xlat   BYTE PTR ds:[ebx]
  402f3c:	pop    ebx
  402f3d:	lods   al,BYTE PTR ds:[esi]
  402f3e:	fild   QWORD PTR [edx+0x18]
  402f41:	mov    ebp,0xf5068b25
  402f46:	xchg   esp,eax
  402f47:	adc    cl,BYTE PTR [esi]
  402f49:	(bad)  
  402f4b:	aam    0xf4
  402f4d:	inc    ebp
  402f4e:	dec    BYTE PTR [ecx]
  402f50:	or     DWORD PTR [eax-0x1af962d6],0xcf3fd4a8
  402f5a:	sub    ebp,esp
  402f5c:	mov    eax,0xf3c05480
  402f61:	js     0x402ee6
  402f63:	nop
  402f64:	es push ss
  402f66:	or     eax,0xa67e3d50
  402f6b:	xor    DWORD PTR [esi-0x3a44d4ce],0x4be2536d
  402f75:	fidivr DWORD PTR [ebp-0x6ae5988c]
  402f7b:	stos   BYTE PTR es:[edi],al
  402f7c:	addr16 jbe 0x402fbc
  402f7f:	nop
  402f80:	add    eax,0x865653df
  402f85:	dec    esi
  402f86:	fdiv   QWORD PTR [esi+0x4e]
  402f89:	inc    DWORD PTR [edi]
  402f8b:	rol    DWORD PTR [ebp+0x275fffa2],cl
  402f91:	mov    BYTE PTR [ebx-0x9],ah
  402f94:	ja     0x402ff9
  402f96:	or     dh,BYTE PTR [ebp+edx*1-0x14]
  402f9a:	inc    esp
  402f9b:	xor    esp,ebp
  402f9d:	cmp    edx,DWORD PTR [edx-0x6b1770df]
  402fa3:	or     eax,0xa2bc830e
  402fa8:	push   ss
  402fa9:	pop    ds
  402faa:	add    ebp,DWORD PTR [ebp+ebp*2-0x2a]
  402fae:	(bad)  
  402faf:	loope  0x402f61
  402fb1:	pop    esi
  402fb2:	ds in  eax,0xde
  402fb5:	xor    DWORD PTR [edx-0x31],ecx
  402fb8:	jp     0x402fcf
  402fba:	cs push ds
  402fbc:	nop
  402fbd:	or     al,0x2d
  402fbf:	daa    
  402fc0:	xor    DWORD PTR [eax+0x2c],ebx
  402fc3:	dec    ebp
  402fc4:	out    dx,eax
  402fc5:	sbb    eax,0x39095791
  402fca:	ja     0x402f66
  402fcc:	scas   al,BYTE PTR es:[edi]
  402fcd:	test   DWORD PTR [edx+0x6f],ecx
  402fd0:	add    ebp,DWORD PTR [edx+0xf]
  402fd3:	arpl   WORD PTR [ecx+eax*1+0x1035df5d],dx
  402fda:	cwde   
  402fdb:	inc    ecx
  402fdc:	rol    DWORD PTR [ebp-0x65],0xf2
  402fe0:	adc    dl,ch
  402fe2:	inc    eax
  402fe3:	sbb    al,0x17
  402fe5:	push   edi
  402fe6:	and    al,0x43
  402fe8:	jo     0x402fac
  402fea:	arpl   WORD PTR [ebx],bx
  402fec:	rcr    cl,1
  402fee:	jbe    0x40302a
  402ff0:	pop    esp
  402ff1:	std    
  402ff2:	jno    0x402f8e
  402ff4:	jo     0x402fa6
  402ff6:	sub    esi,ebx
  402ff8:	sub    eax,0x549bad66
  402ffd:	inc    ebp
  402ffe:	loopne 0x402ff5
  403000:	js     0x402fce
  403002:	pop    ebx
  403003:	cli    
  403004:	push   esp
  403005:	leave  
  403006:	or     DWORD PTR [ebx],ebp
  403008:	pushf  
  403009:	xor    dh,ah
  40300b:	xchg   ebx,eax
  40300c:	ret    
  40300d:	daa    
  40300e:	loopne 0x402fea
  403010:	and    DWORD PTR [ebx*8+0x7f08d21f],0xffffffcf
  403018:	pushf  
  403019:	jmp    0x2727:0x199561f4
  403020:	mov    ebx,0xa2885abe
  403025:	ss push 0xd8af7cf7
  40302b:	push   ss
  40302c:	xchg   esp,eax
  40302d:	add    BYTE PTR [ecx+0x890cd66],0xf3
  403034:	push   ebx
  403035:	jno    0x40302a
  403037:	shr    eax,1
  403039:	stos   DWORD PTR es:[edi],eax
  40303a:	loopne 0x40301b
  40303c:	add    ch,BYTE PTR [ebx+esi*8]
  40303f:	inc    ecx
  403040:	push   0xe3ea2df0
  403045:	sub    BYTE PTR [edx],bh
  403047:	loop   0x4030ac
  403049:	mov    ebx,?
  40304b:	test   esi,edi
  40304d:	imul   edi,eax,0x2f
  403050:	(bad)  
  403051:	pop    ss
  403052:	jnp    0x402feb
  403054:	les    esi,FWORD PTR [ebp-0x59]
  403057:	xchg   ecx,eax
  403058:	push   esi
  403059:	loopne 0x40309c
  40305b:	call   0x3c395834
  403060:	enter  0x93b7,0x55
  403064:	fldenv [ecx]
  403066:	daa    
  403067:	adc    al,0x41
  403069:	or     eax,edi
  40306b:	inc    edx
  40306c:	xchg   esp,eax
  40306d:	push   ebp
  40306e:	jo     0x4030a9
  403070:	or     eax,0x2f87feb5
  403075:	pop    eax
  403076:	(bad)  
  403077:	in     al,0xbe
  403079:	scas   al,BYTE PTR es:[edi]
  40307a:	pop    esi
  40307b:	(bad)  
  40307c:	clc    
  40307d:	mov    ecx,0xb962e405
  403082:	mov    WORD PTR [ebx-0x40cfccbe],cs
  403088:	jl     0x403069
  40308a:	jo     0x403069
  40308c:	push   ebx
  40308d:	in     al,dx
  40308e:	or     al,0xbb
  403090:	loope  0x4030ec
  403092:	fdiv   QWORD PTR [eax-0x7bedfc0d]
  403098:	mov    ecx,0xa22c38bd
  40309d:	cmp    DWORD PTR [ebx+0x39],edi
  4030a0:	gs push ecx
  4030a2:	mov    dh,0xd8
  4030a4:	push   ebx
  4030a5:	mov    bh,0x96
  4030a7:	bound  ebp,QWORD PTR [eax-0x653a1bd]
  4030ad:	jns    0x40309f
  4030af:	mov    cl,al
  4030b1:	mov    al,0x9e
  4030b3:	xor    eax,DWORD PTR [edx+esi*1]
  4030b6:	mov    BYTE PTR [ebp-0x8],0xbd
  4030ba:	cmp    dl,BYTE PTR [ebx+0x59d2ff2e]
  4030c0:	shl    DWORD PTR [edx],cl
  4030c2:	xor    ch,ch
  4030c4:	pushf  
  4030c5:	xchg   edx,eax
  4030c6:	push   ebp
  4030c7:	aas    
  4030c8:	xor    eax,0xe95a46ca
  4030cd:	stos   BYTE PTR es:[edi],al
  4030ce:	sahf   
  4030cf:	xchg   edx,eax
  4030d0:	push   ecx
  4030d1:	jmp    0xa3b8bf77
  4030d6:	ror    BYTE PTR [edx-0x50e1d2b3],1
  4030dc:	cmp    edi,DWORD PTR [esi-0x42]
  4030df:	cdq    
  4030e0:	fmul   QWORD PTR [ebx+0x34]
  4030e3:	lahf   
  4030e4:	iret   
  4030e5:	adc    DWORD PTR [edi+ebp*8+0x23d31453],edx
  4030ec:	push   edi
  4030ed:	jbe    0x403123
  4030ef:	pop    eax
  4030f0:	popa   
  4030f1:	cli    
  4030f2:	dec    ebx
  4030f3:	pop    ebp
  4030f4:	and    bh,ch
  4030f6:	test   al,0x79
  4030f8:	out    dx,al
  4030f9:	fnstenv [edx-0x71]
  4030fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030fd:	mov    bh,0x4f
  4030ff:	adc    edx,esi
  403101:	xor    al,0x52
  403103:	sub    esi,DWORD PTR [edi+0x21]
  403106:	fs fs retf 0xc720
  40310b:	cmp    eax,0xa7ea5a88
  403110:	ret    0xb4fc
  403113:	ret    
  403114:	adc    cl,BYTE PTR [edi-0x621fe637]
  40311a:	sbb    BYTE PTR [ecx-0x16],al
  40311d:	mov    gs,WORD PTR [esi+0x55]
  403120:	mov    ecx,0x20b009c8
  403125:	scas   eax,DWORD PTR es:[edi]
  403126:	jmp    0x6ad3:0x4e234637
  40312d:	mov    esp,0x7bc0efe1
  403132:	mov    edi,0xb659a4a
  403137:	adc    eax,0x36dd1b10
  40313c:	in     al,dx
  40313d:	sbb    al,0xf2
  40313f:	dec    ecx
  403140:	ja     0x403172
  403142:	mov    al,ds:0x1ca917f4
  403147:	pop    ecx
  403148:	adc    esi,DWORD PTR [ebp+0x3cbd36a4]
  40314e:	xor    ebp,esi
  403150:	push   ebp
  403151:	adc    ebx,esp
  403153:	xor    eax,0x64df1bec
  403158:	bound  esp,QWORD PTR [eax+ebp*4+0x1b]
  40315c:	and    dl,al
  40315e:	sbb    bl,al
  403160:	fsub   st,st(0)
  403162:	shl    ecx,cl
  403164:	adc    esi,DWORD PTR [ecx]
  403166:	inc    edx
  403167:	es push 0x910af61e
  40316d:	mov    esi,0xc7438446
  403172:	jbe    0x40313e
  403174:	cmc    
  403175:	xor    DWORD PTR [ecx-0xfd7ed93],ebp
  40317b:	adc    eax,DWORD PTR [edx+ebp*2]
  40317e:	aaa    
  40317f:	out    0x68,eax
  403181:	(bad)  
  403182:	pop    ss
  403183:	pop    esp
  403184:	xchg   edi,ebx
  403186:	mov    ds:0x492226c3,eax
  40318b:	pushf  
  40318c:	cmp    ah,BYTE PTR [esi]
  40318e:	mov    ch,0x40
  403190:	sub    BYTE PTR [esi-0x3bf008c7],al
  403196:	or     BYTE PTR [ecx],dh
  403198:	sahf   
  403199:	lods   eax,DWORD PTR ds:[esi]
  40319a:	(bad)  
  40319b:	lahf   
  40319c:	les    esp,FWORD PTR [esi+0x371ae887]
  4031a2:	arpl   sp,di
  4031a4:	add    ebx,ebx
  4031a6:	pop    ebp
  4031a7:	cs add al,0x5
  4031aa:	loopne 0x40318e
  4031ac:	jae    0x40313d
  4031ae:	cli    
  4031af:	hlt    
  4031b0:	sahf   
  4031b1:	enter  0xe876,0x47
  4031b5:	lods   al,BYTE PTR ds:[esi]
  4031b6:	inc    edi
  4031b7:	inc    edi
  4031b8:	retf   0xf2b2
  4031bb:	dec    ebp
  4031bc:	xchg   ebp,eax
  4031bd:	mov    ds:0x921f684f,eax
  4031c2:	(bad)  
  4031c3:	sub    al,0xd4
  4031c5:	ds jge 0x403167
  4031c8:	mov    edi,0xb26c8b12
  4031cd:	xchg   BYTE PTR [esi],dl
  4031cf:	iret   
  4031d0:	ficom  DWORD PTR [eax+0x15e059ab]
  4031d6:	dec    edx
  4031d7:	outs   dx,DWORD PTR ds:[esi]
  4031d8:	nop
  4031d9:	mov    eax,0x8eae1294
  4031de:	ja     0x403215
  4031e0:	inc    edi
  4031e1:	xlat   BYTE PTR ds:[ebx]
  4031e2:	jg     0x403207
  4031e4:	cld    
  4031e5:	addr16 pop ebp
  4031e7:	stc    
  4031e8:	lds    ecx,FWORD PTR [esi+0x653ebf28]
  4031ee:	fld    QWORD PTR [ecx-0x57]
  4031f1:	adc    eax,0x8c2ece7c
  4031f6:	pop    esi
  4031f7:	test   al,0x21
  4031f9:	leave  
  4031fa:	jge    0x403277
  4031fc:	pop    eax
  4031fd:	push   edi
  4031fe:	stos   DWORD PTR es:[edi],eax
  4031ff:	test   eax,0x5f45eedb
  403204:	push   esp
  403206:	add    ebx,ebp
  403208:	dec    esi
  403209:	test   al,0x88
  40320b:	bound  edi,QWORD PTR [ebx-0x7]
  40320e:	jmp    0x757cbbb8
  403213:	fiadd  WORD PTR [ecx]
  403215:	lea    ecx,[ecx]
  403217:	or     ecx,ebp
  403219:	stos   BYTE PTR es:[edi],al
  40321a:	loopne 0x40327e
  40321c:	xchg   dl,dh
  40321e:	inc    ecx
  40321f:	icebp  
  403220:	arpl   WORD PTR ds:0xf17135a6,bx
  403226:	pop    ds
  403227:	jmp    0x1eaccb7c
  40322c:	push   esp
  40322d:	or     al,BYTE PTR [ebx+0x18]
  403230:	mov    bh,0xdf
  403232:	rcl    BYTE PTR [ecx-0x68],0xca
  403236:	jg     0x4031fc
  403238:	adc    eax,0x3c86ca35
  40323d:	dec    edi
  40323e:	pop    eax
  40323f:	mov    dl,BYTE PTR [eax-0x5d7d9c08]
  403245:	je     0x40326b
  403247:	or     al,BYTE PTR [esi+0x65]
  40324a:	arpl   WORD PTR [ecx-0x358dc864],di
  403250:	jae    0x4032cf
  403252:	mov    ebp,ds
  403254:	ss retf 0x2c3e
  403258:	std    
  403259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40325a:	(bad)  
  40325b:	aas    
  40325c:	cmp    BYTE PTR [ebp+0x78],0x26
  403260:	dec    bl
  403262:	out    0x64,al
  403264:	pushf  
  403265:	and    esi,DWORD PTR fs:[eax-0x9]
  403269:	shl    BYTE PTR [eax],cl
  40326b:	sbb    eax,DWORD PTR [ebx+eiz*4]
  40326e:	cmp    DWORD PTR [ebx],eax
  403270:	loopne 0x4032d6
  403272:	pop    ebp
  403273:	xor    ebp,ebx
  403275:	cmp    eax,edx
  403277:	jne    0x4032b9
  403279:	mov    al,ds:0x7a8a12fd
  40327e:	add    dl,BYTE PTR [eax-0x72]
  403281:	enter  0xe5ef,0x8a
  403285:	into   
  403286:	pop    esp
  403287:	ins    DWORD PTR es:[edi],dx
  403288:	(bad)  
  403289:	cmp    DWORD PTR [eax-0xa],ecx
  40328c:	repnz daa 
  40328e:	cmp    DWORD PTR [edi],0xffffffa7
  403291:	add    ebp,DWORD PTR ds:0x6a5931de
  403297:	cld    
  403298:	adc    esp,DWORD PTR [ebx]
  40329a:	xor    bh,0xde
  40329d:	aad    0xa6
  40329f:	or     BYTE PTR [eax+ecx*2-0x20],al
  4032a3:	mov    ebx,0xf0efd639
  4032a8:	cmp    ebp,DWORD PTR [eax+eax*2-0x619a5413]
  4032af:	neg    eax
  4032b1:	push   0x46
  4032b3:	and    ecx,eax
  4032b5:	data16 loopne 0x40329b
  4032b8:	pop    ds
  4032b9:	mov    edx,0x7411e2ae
  4032be:	dec    esp
  4032bf:	xchg   edx,eax
  4032c0:	mov    al,0xc8
  4032c2:	or     BYTE PTR [esi+0x4e32118],dh
  4032c8:	popf   
  4032c9:	push   ecx
  4032ca:	nop
  4032cb:	jne    0x403334
  4032cd:	repnz adc BYTE PTR [edi-0x3f],dl
  4032d1:	mov    esp,0xc79a768f
  4032d6:	add    esp,DWORD PTR [eax+ecx*4]
  4032d9:	adc    al,0xf4
  4032dc:	inc    BYTE PTR [esi+esi*1+0x3c]
  4032e0:	mov    ecx,0xe7788252
  4032e5:	and    DWORD PTR [esi],esp
  4032e7:	imul   bl
  4032e9:	sbb    BYTE PTR [ebp+edx*1+0x13],ch
  4032ed:	neg    esp
  4032ef:	or     al,BYTE PTR [ebx-0x5d]
  4032f2:	push   esp
  4032f3:	pop    ds
  4032f4:	das    
  4032f5:	mov    ebx,0xfb154c8a
  4032fa:	hlt    
  4032fb:	dec    ebp
  4032fc:	push   ecx
  4032fd:	sahf   
  4032fe:	ins    DWORD PTR es:[edi],dx
  4032ff:	enter  0x1522,0x82
  403303:	push   ds
  403304:	xchg   bl,cl
  403306:	cmp    edi,DWORD PTR [esi]
  403308:	rcl    BYTE PTR [ebp-0x6c],1
  40330b:	std    
  40330c:	aas    
  40330d:	test   BYTE PTR [ebx+0x18d2b8a5],bh
  403313:	ss push ebx
  403315:	sub    BYTE PTR [edi-0x250e261],cl
  40331b:	in     al,0xfd
  40331d:	stc    
  40331e:	bound  ebx,QWORD PTR [edx+eiz*4]
  403321:	aas    
  403322:	cmp    DWORD PTR [ecx+esi*8],ecx
  403325:	xchg   bh,ah
  403327:	and    ebx,DWORD PTR [ebx+eiz*8-0x73]
  40332b:	or     al,0xae
  40332d:	mov    dh,0x9d
  40332f:	mov    al,0x53
  403331:	push   ecx
  403332:	inc    eax
  403333:	sbb    ebx,esp
  403335:	push   ebp
  403336:	int3   
  403337:	or     ebx,DWORD PTR [edx-0x1636d9df]
  40333d:	sbb    bh,BYTE PTR [ebx]
  40333f:	mov    al,ds:0xda772a8f
  403344:	push   0x586b064b
  403349:	pop    eax
  40334a:	(bad)  
  40334b:	cmp    DWORD PTR [eax],esi
  40334d:	xchg   BYTE PTR [edx+eiz*4-0x2],bl
  403351:	mov    dl,0x99
  403353:	pop    esi
  403354:	xchg   ebx,eax
  403355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403356:	lea    ebp,[ebp+0x625de355]
  40335c:	push   ebx
  40335d:	xor    ch,BYTE PTR [ebp-0x714a54a1]
  403363:	call   DWORD PTR [ecx]
  403365:	fcomi  st,st(7)
  403367:	pop    ecx
  403368:	imul   edx,edi,0x79
  40336b:	inc    ebp
  40336c:	mov    al,0xd1
  40336e:	add    DWORD PTR [eax],esi
  403370:	inc    esi
  403371:	lds    edx,FWORD PTR [esi-0x75a6268c]
  403377:	add    al,0xbf
  403379:	data16 shr cl,1
  40337c:	rcl    DWORD PTR [ebp+0x45],1
  40337f:	test   al,0xe
  403381:	popf   
  403382:	or     eax,0xd3559fc
  403387:	add    eax,0x6afc5d01
  40338c:	add    BYTE PTR [eax-0x68],ch
  40338f:	and    eax,esi
  403391:	xchg   esp,eax
  403392:	test   eax,0xfb7e2899
  403397:	and    cl,BYTE PTR [ecx+eiz*2-0x1e]
  40339b:	mov    ebx,0x14535132
  4033a0:	jp     0x40334f
  4033a2:	sbb    al,0xd9
  4033a4:	sahf   
  4033a5:	out    dx,eax
  4033a6:	push   ecx
  4033a7:	sub    dh,bl
  4033a9:	pop    ecx
  4033aa:	(bad)  
  4033ab:	jmp    0x403412
  4033ad:	leave  
  4033ae:	mov    esi,0x80692ff8
  4033b3:	cwde   
  4033b4:	dec    ebp
  4033b5:	xlat   BYTE PTR ds:[ebx]
  4033b6:	mov    ds:0x85812c85,al
  4033bb:	outs   dx,BYTE PTR ds:[esi]
  4033bc:	js     0x403415
  4033be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033bf:	fdivp  st(1),st
  4033c1:	xor    dh,BYTE PTR [esi+0x52]
  4033c4:	dec    edx
  4033c5:	xchg   BYTE PTR [edx-0xbaf4a6f],dl
  4033cb:	xor    dh,BYTE PTR [ebx+0x2e]
  4033ce:	ja     0x40336e
  4033d0:	pop    ebp
  4033d1:	dec    edx
  4033d2:	push   eax
  4033d3:	pop    ss
  4033d4:	dec    ebp
  4033d5:	push   0xa5d7d613
  4033da:	mov    edi,0xd3fa8f9b
  4033df:	popf   
  4033e0:	stos   BYTE PTR es:[edi],al
  4033e1:	fistp  QWORD PTR [esi-0xfb8521c]
  4033e7:	dec    edx
  4033e8:	mov    ds:0xc88075dc,eax
  4033ed:	call   0x5851067e
  4033f2:	sbb    dh,BYTE PTR [ecx-0x512a63ac]
  4033f8:	mov    al,ds:0xd5af6243
  4033fd:	mov    cl,0x38
  4033ff:	dec    ebx
  403400:	inc    sp
  403402:	addr16 into 
  403404:	push   0xffffffba
  403406:	fistp  DWORD PTR [eax-0x2]
  403409:	rcr    ecx,1
  40340b:	xchg   edi,eax
  40340c:	jecxz  0x40344e
  40340e:	inc    edx
  40340f:	inc    ecx
  403410:	gs dec eax
  403412:	cmc    
  403413:	stos   DWORD PTR es:[edi],eax
  403414:	ds mov gs,ecx
  403417:	jge    0x4033ec
  403419:	jp     0x4033df
  40341b:	loopne 0x4033d7
  40341d:	cmp    ebp,esp
  40341f:	aad    0x9c
  403421:	cli    
  403422:	(bad)  
  403423:	ss xchg edi,eax
  403425:	in     eax,dx
  403426:	dec    ebx
  403427:	dec    eax
  403428:	xchg   cl,al
  40342a:	imul   edi,DWORD PTR [edi+0x2e],0x5d3ee72a
  403431:	push   ebp
  403432:	jno    0x40340b
  403434:	popf   
  403435:	hlt    
  403436:	xor    DWORD PTR [edi+0x34],eax
  403439:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40343b:	mov    bh,0xa3
  40343d:	mov    ds:0x7b62d16f,eax
  403442:	adc    cl,BYTE PTR [edi+0x66fa8427]
  403448:	pop    esp
  403449:	mov    ecx,0x53be0f29
  40344e:	pop    esp
  40344f:	stos   BYTE PTR es:[edi],al
  403450:	fld    DWORD PTR [ecx]
  403452:	dec    esi
  403453:	or     DWORD PTR [eax],0x6ff53d46
  403459:	inc    ebx
  40345a:	fwait
  40345b:	icebp  
  40345c:	xor    ebp,DWORD PTR [ecx+ebp*4-0x7a]
  403460:	icebp  
  403461:	clc    
  403462:	or     BYTE PTR [edx+ecx*8],ah
  403465:	and    al,0xa0
  403467:	dec    esi
  403468:	push   esi
  403469:	(bad)  
  40346a:	mov    eax,ds:0x371729b9
  40346f:	inc    ebx
  403470:	imul   edi,edi,0x5f090b14
  403476:	mov    gs,WORD PTR [edi-0x7d]
  403479:	mov    ds:0x2ed8c624,al
  40347e:	repnz xchg ecx,eax
  403480:	inc    eax
  403481:	jg     0x403420
  403483:	sub    edi,DWORD PTR [ebp+0x46]
  403486:	pusha  
  403487:	jae    0x403508
  403489:	adc    DWORD PTR [ebx-0x63],esi
  40348c:	and    bl,cl
  40348e:	add    dl,BYTE PTR [edx]
  403490:	inc    edi
  403491:	dec    eax
  403492:	popa   
  403493:	lods   eax,DWORD PTR ds:[esi]
  403494:	test   DWORD PTR [ebx-0xfe2f096],0xe527a8ae
  40349e:	outs   dx,DWORD PTR ds:[esi]
  40349f:	adc    DWORD PTR [ecx],eax
  4034a1:	push   esp
  4034a2:	jmp    0x3dfd:0x34cf1925
  4034a9:	inc    ebx
  4034aa:	(bad)  
  4034ab:	xchg   ecx,eax
  4034ac:	out    0x8,al
  4034ae:	inc    edx
  4034af:	clc    
  4034b0:	arpl   WORD PTR [esi+0x65d483d0],ax
  4034b6:	(bad)  
  4034b7:	mov    al,0x8f
  4034b9:	sbb    eax,0x2317ea65
  4034be:	dec    ecx
  4034bf:	mov    dh,0x28
  4034c1:	je     0x4034f5
  4034c3:	mov    bh,0x73
  4034c5:	push   edi
  4034c6:	sub    al,0x74
  4034c8:	jb     0x4034e3
  4034ca:	or     al,0x53
  4034cc:	mov    esi,0x2cd42fc7
  4034d1:	bound  esp,QWORD PTR [edi+ecx*8]
  4034d4:	push   ds
  4034d5:	mov    edi,0x39807e7d
  4034da:	call   DWORD PTR [esi+0x7788e760]
  4034e0:	push   ds
  4034e1:	mov    eax,0xf8652a63
  4034e6:	sti    
  4034e7:	dec    esi
  4034e8:	cmp    al,0x0
  4034ea:	dec    edx
  4034eb:	or     edi,edi
  4034ed:	mov    ecx,0x6b7c7dd5
  4034f2:	inc    ebx
  4034f3:	enter  0x91e1,0xef
  4034f7:	std    
  4034f8:	xchg   ebp,eax
  4034f9:	mov    ds:0x1f0c1a13,al
  4034fe:	jbe    0x40355b
  403500:	mov    esi,0xaaf0e928
  403505:	or     eax,esp
  403507:	in     al,0xb9
  403509:	mov    ebp,0x99c4208c
  40350e:	or     al,bh
  403510:	aas    
  403511:	call   0xb6e6:0xf94d54be
  403518:	push   cs
  403519:	mov    eax,ds:0x98acb4c6
  40351e:	leave  
  40351f:	sti    
  403520:	mov    eax,ds:0x66ab6db
  403525:	or     DWORD PTR [esi-0x8ac6256],ebx
  40352b:	jo     0x40356e
  40352d:	mov    ah,0xed
  40352f:	jne    0x403544
  403531:	inc    eax
  403532:	stc    
  403533:	lea    ebx,[eax+0x47b51625]
  403539:	test   eax,0x87a91a1b
  40353e:	push   es
  40353f:	push   0x57840377
  403544:	dec    edx
  403545:	inc    eax
  403546:	test   al,0xa8
  403548:	jo     0x40350d
  40354a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40354b:	(bad)  
  40354d:	xor    ah,BYTE PTR [ebx+esi*2]
  403550:	jno    0x403510
  403552:	cmp    eax,0xc8e99478
  403557:	cdq    
  403558:	adc    esp,DWORD PTR [esi-0x40]
  40355b:	or     DWORD PTR ds:0x73f2d0dc,ebp
  403561:	xor    eax,0xe7441687
  403566:	mov    ds:0x6e1fbe2d,eax
  40356b:	mov    ah,0xf1
  40356d:	repnz cwde 
  40356f:	fistp  QWORD PTR [ebx+0x5eed6fe]
  403575:	add    al,0x68
  403577:	data16 test al,0xb3
  40357a:	fs push 0x129ccafb
  403580:	and    al,0xdc
  403582:	lea    edx,[eax+edx*4+0x65]
  403586:	inc    eax
  403587:	cmp    ch,BYTE PTR [eax-0x69]
  40358a:	jnp    0x4035f2
  40358c:	pop    esp
  40358d:	call   0xd723:0xa2d10ae7
  403594:	inc    ecx
  403595:	loopne 0x403552
  403597:	iret   
  403598:	repnz outs dx,DWORD PTR ds:[esi]
  40359a:	jbe    0x40353f
  40359c:	sub    DWORD PTR [esi+0xa],ebx
  40359f:	pusha  
  4035a0:	cld    
  4035a1:	in     eax,dx
  4035a2:	pop    edx
  4035a3:	push   0xd7ee4608
  4035a8:	retf   
  4035a9:	sub    edx,eax
  4035ab:	dec    esi
  4035ac:	and    edx,0xffffffaa
  4035af:	push   0x64021196
  4035b4:	cdq    
  4035b5:	pop    edi
  4035b6:	pop    edx
  4035b7:	call   0xc03cf0e0
  4035bc:	iret   
  4035bd:	mov    bl,0xa1
  4035bf:	gs shl ebx,0x61
  4035c3:	scas   eax,DWORD PTR es:[edi]
  4035c4:	mov    ecx,ebx
  4035c6:	sbb    al,0x9a
  4035c8:	ds je  0x403637
  4035cb:	cmp    BYTE PTR [ecx-0x5117b37a],0x72
  4035d2:	shr    dl,1
  4035d4:	adc    eax,0xd5f8c39
  4035d9:	pop    edi
  4035da:	mov    bl,0xfe
  4035dc:	hlt    
  4035dd:	jg     0x403571
  4035df:	es mov ebp,0xf8fbd4e1
  4035e5:	sub    al,ch
  4035e7:	shr    DWORD PTR [eax-0x64],cl
  4035ea:	call   0xfbb:0x624a0ebc
  4035f1:	(bad)  
  4035f2:	pop    edi
  4035f3:	add    eax,0xed66294b
  4035f8:	xchg   ebp,eax
  4035f9:	clc    
  4035fa:	sbb    dl,BYTE PTR gs:[ebx+0x3a]
  4035fe:	repz sub bh,BYTE PTR [esi+edx*4]
  403602:	push   ebp
  403603:	fs cs inc esp
  403606:	pop    esi
  403607:	pusha  
  403608:	mov    bl,ch
  40360a:	dec    BYTE PTR ds:0x44cc3384
  403610:	sbb    eax,0x111ad15b
  403615:	mov    cl,0x83
  403617:	je     0x403659
  403619:	out    0xc5,al
  40361b:	cld    
  40361c:	push   eax
  40361d:	ret    
  40361e:	sub    dl,BYTE PTR [esi]
  403620:	mov    ecx,0x6f69ced
  403625:	mov    ecx,0x368ce16b
  40362a:	sub    ah,BYTE PTR ds:0xd4aeadbf
  403630:	inc    ecx
  403631:	xor    al,0xcc
  403633:	out    dx,al
  403634:	sbb    BYTE PTR [edi+0xde165e3],dl
  40363a:	push   ebp
  40363b:	neg    esi
  40363d:	inc    ecx
  40363e:	add    al,BYTE PTR [eax]
  403640:	test   dh,dl
  403642:	cli    
  403643:	iret   
  403644:	adc    esi,edi
  403646:	pop    es
  403647:	xchg   DWORD PTR [edi+0x5606f538],esi
  40364d:	fdiv   st,st(6)
  40364f:	imul   edi,DWORD PTR [ebp-0x76],0x5d94fe46
  403656:	dec    edi
  403657:	(bad)  
  403658:	mov    al,0x5f
  40365a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40365b:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40365d:	(bad)  
  40365f:	or     al,BYTE PTR [edx-0x22838a6d]
  403665:	xchg   ebx,eax
  403666:	shl    cl,0x1f
  403669:	jae    0x4035f7
  40366b:	pop    ecx
  40366c:	dec    ecx
  40366d:	fcomi  st,st(2)
  40366f:	dec    edi
  403670:	js     0x4036ab
  403672:	xchg   BYTE PTR ds:[edx],bh
  403675:	daa    
  403676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403677:	imul   edx,ecx,0x5
  40367a:	cmp    ah,BYTE PTR [eax-0x454cbadf]
  403680:	(bad)  
  403682:	sbb    bh,ah
  403684:	or     al,0x10
  403686:	push   ebp
  403687:	out    dx,eax
  403688:	ficomp WORD PTR [ebx-0x4610720e]
  40368e:	mov    ecx,0xd1f20dfa
  403693:	ja     0x4036b1
  403695:	push   edx
  403696:	aaa    
  403697:	pop    ecx
  403698:	out    dx,eax
  403699:	loop   0x4036c1
  40369b:	jae    0x40361e
  40369d:	xchg   esi,eax
  40369e:	jmp    0x818c:0xaf229d05
  4036a5:	mov    WORD PTR [ebx-0x597ab80d],?
  4036ab:	(bad)
  4036ae:	in     al,0x6
  4036b0:	jg     0x40367d
  4036b2:	mov    esi,0xcae5b122
  4036b7:	xchg   BYTE PTR [ebp-0x803be2c],ah
  4036bd:	enter  0xa6aa,0x13
  4036c1:	mov    ds:0x685ff415,al
  4036c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036c7:	sbb    ch,0x5b
  4036ca:	cs jp  0x403690
  4036cd:	ins    DWORD PTR es:[edi],dx
  4036ce:	out    0xca,eax
  4036d0:	push   esi
  4036d1:	lea    ebx,[ecx+0x339339d9]
  4036d7:	inc    ebp
  4036d8:	or     DWORD PTR [ebp+0x5e9dcbca],edi
  4036de:	adc    dl,BYTE PTR [ecx]
  4036e0:	dec    ebp
  4036e1:	cmc    
  4036e2:	adc    DWORD PTR [ebx],0x6f
  4036e5:	push   esi
  4036e6:	out    0xc7,al
  4036e8:	imul   esi,esp,0x2f2dbadb
  4036ee:	ret    0xde69
  4036f1:	scas   al,BYTE PTR es:[edi]
  4036f2:	aas    
  4036f3:	or     ch,BYTE PTR [esi+0x53]
  4036f6:	dec    cx
  4036f8:	dec    esi
  4036f9:	jg     0x403685
  4036fb:	xor    eax,0x755bfa7e
  403700:	shr    DWORD PTR ss:[eax+0x7db81b6a],1
  403707:	(bad)  
  403709:	jo     0x40371c
  40370b:	fist   DWORD PTR [ecx+0x3d]
  40370e:	xor    eax,0xb36eae6
  403714:	mov    al,ds:0xae8ae00d
  403719:	and    al,0x90
  40371b:	pop    ebp
  40371c:	int3   
  40371d:	mov    ds:0x976d30bb,al
  403722:	mov    BYTE PTR [eax],bh
  403724:	cmp    bh,dl
  403726:	inc    ebx
  403727:	add    ebp,DWORD PTR ds:0x6bd3efc4
  40372d:	call   0x5a3a:0x600dcede
  403734:	jbe    0x40374b
  403736:	mov    eax,ds:0x83a844a2
  40373b:	cli    
  40373c:	inc    ecx
  40373d:	lds    edi,FWORD PTR [ecx]
  40373f:	jp     0x40376a
  403741:	dec    esp
  403742:	pop    es
  403743:	jbe    0x403733
  403745:	push   edx
  403746:	pusha  
  403747:	push   0xffffff84
  403749:	jno    0x40376b
  40374b:	push   edi
  40374c:	mov    edi,0x4f1f127
  403751:	adc    cl,bl
  403753:	retf   
  403754:	cmc    
  403755:	fmul   DWORD PTR [ecx+0x71]
  403758:	fistp  DWORD PTR [ebx]
  40375a:	sub    al,0xdc
  40375c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40375d:	cmp    esp,esp
  40375f:	pop    ebp
  403760:	push   ebx
  403761:	pusha  
  403762:	jb     0x40379b
  403764:	jno    0x403719
  403766:	or     al,0x5e
  403769:	shr    ebx,1
  40376b:	mov    al,0xac
  40376d:	arpl   WORD PTR [eax-0x22e47779],di
  403773:	call   0xd45a7aad
  403778:	sub    DWORD PTR [ebx-0x51],esi
  40377b:	(bad)  
  40377c:	jmp    0xfe10baf8
  403781:	shl    BYTE PTR [edx+0x4dae0b48],1
  403787:	xchg   esi,eax
  403788:	std    
  403789:	jo     0x4037be
  40378b:	mov    edx,0x13d07d6c
  403790:	adc    eax,0x7f1e8747
  403795:	cmc    
  403796:	jno    0x403763
  403798:	shl    BYTE PTR [esi+0x24],0xb0
  40379c:	retf   
  40379d:	(bad)  
  40379e:	mov    al,ds:0x70522e1b
  4037a3:	or     DWORD PTR [eax-0x3a757550],ebp
  4037a9:	mov    ecx,edx
  4037ab:	dec    edi
  4037ac:	mov    eax,ds:0xe442ecff
  4037b1:	idiv   BYTE PTR ds:0x7a4f3df6
  4037b7:	inc    eax
  4037b8:	into   
  4037b9:	xchg   ecx,eax
  4037ba:	ss push ecx
  4037bc:	int3   
  4037bd:	add    al,0xa5
  4037bf:	or     al,BYTE PTR [edx-0x2040cf10]
  4037c5:	fstp   TBYTE PTR [ebx+edx*2-0x61]
  4037c9:	dec    ebp
  4037ca:	aad    0x33
  4037cc:	pop    es
  4037cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037ce:	idiv   edx
  4037d0:	dec    ecx
  4037d1:	out    0x3a,al
  4037d3:	(bad)  
  4037d4:	sub    eax,0xfbc9ac33
  4037d9:	sbb    ebp,DWORD PTR [eax]
  4037db:	mov    edx,0x65a7219d
  4037e0:	and    dh,bh
  4037e2:	repz push edx
  4037e4:	mov    esi,0xd0ce206f
  4037e9:	inc    eax
  4037ea:	xor    al,0x9d
  4037ec:	data16 ror BYTE PTR [eax+edi*2+0xff4ae23],1
  4037f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037f5:	sub    DWORD PTR [ecx-0x57a0bf89],0xfb00524
  4037ff:	out    dx,al
  403800:	aam    0x2
  403802:	nop
  403803:	mov    ecx,0x5ee8ef99
  403808:	push   ecx
  403809:	pop    ecx
  40380a:	or     DWORD PTR [edi+0x3c],ebp
  40380d:	(bad)  
  40380e:	xchg   edx,eax
  40380f:	mov    DWORD PTR [ebp-0x33],ebp
  403812:	out    0xfb,al
  403814:	nop
  403815:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403816:	gs aaa 
  403818:	adc    DWORD PTR ds:0x4f2e7813,edx
  40381e:	add    ebx,esi
  403820:	push   eax
  403821:	adc    eax,0xc66a9b4e
  403826:	jnp    0x40385d
  403828:	lahf   
  403829:	lahf   
  40382a:	inc    esp
  40382b:	add    eax,0xc58fb4b0
  403830:	ror    DWORD PTR [ecx],1
  403832:	(bad)  
  403833:	xchg   edi,eax
  403834:	shl    BYTE PTR [edi+0x7d],cl
  403837:	aaa    
  403838:	xchg   edx,eax
  403839:	rcl    BYTE PTR [esi-0x18ffbab9],cl
  40383f:	mov    edx,0xfead9d90
  403844:	fld    TBYTE PTR [edi*4+0x23e47bef]
  40384b:	push   cs
  40384c:	ds adc ah,al
  40384f:	jle    0x4038d0
  403851:	dec    ebp
  403852:	pop    ecx
  403853:	jmp    0x5851:0x4420e6df
  40385a:	sub    ebx,DWORD PTR [eax+0x79cc1351]
  403860:	cmp    esi,edi
  403862:	or     al,0xeb
  403864:	mov    al,0xda
  403866:	test   BYTE PTR ds:0xacba66e4,al
  40386c:	out    0x2d,eax
  40386e:	xor    al,0xe4
  403870:	fcom   QWORD PTR [ebx+eiz*2]
  403873:	shl    BYTE PTR [eax+0x27],cl
  403876:	int    0xc9
  403878:	mov    ch,0xd9
  40387a:	lods   al,BYTE PTR ds:[esi]
  40387b:	test   BYTE PTR [edx],al
  40387d:	mov    bh,0xa
  40387f:	les    edx,FWORD PTR [ecx]
  403881:	jg     0x4038cd
  403883:	sahf   
  403884:	(bad)  
  403885:	jl     0x4038bf
  403887:	fidiv  DWORD PTR [ecx-0x79]
  40388a:	inc    ebx
  40388b:	xchg   DWORD PTR [edx+ecx*8+0x5f224035],eax
  403892:	pop    ecx
  403893:	repz mov eax,ds:0x1bc2dc87
  403899:	jns    0x403877
  40389b:	out    0xe9,al
  40389d:	fcom   DWORD PTR [esi+0x16]
  4038a0:	lea    ebp,[eax-0x25]
  4038a3:	loopne 0x403867
  4038a5:	es (bad) 
  4038a7:	pop    esi
  4038a8:	out    0x91,al
  4038aa:	push   ecx
  4038ab:	into   
  4038ac:	jl     0x4038ec
  4038ae:	push   ss
  4038af:	cmp    ch,BYTE PTR [ecx+ebx*1-0x3e]
  4038b3:	sub    al,0x8c
  4038b5:	in     al,dx
  4038b6:	(bad)  
  4038b7:	cmp    al,ah
  4038b9:	pop    ebx
  4038ba:	adc    BYTE PTR [edx+0x5c4a314b],bh
  4038c0:	fnstsw WORD PTR [edx+0x75]
  4038c3:	scas   al,BYTE PTR es:[edi]
  4038c4:	sti    
  4038c5:	in     eax,dx
  4038c6:	dec    eax
  4038c7:	pop    ss
  4038c8:	ret    
  4038c9:	in     al,dx
  4038ca:	(bad)  
  4038cc:	(bad)  
  4038cd:	cs inc edx
  4038cf:	push   eax
  4038d0:	lds    eax,FWORD PTR [edx+0x4b]
  4038d3:	push   ds
  4038d4:	int    0x40
  4038d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038d7:	mov    ebx,0xc9c7b4c2
  4038dc:	sub    eax,0x802bf3b3
  4038e1:	lock mov cl,ah
  4038e4:	sub    bh,0x49
  4038e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038e8:	add    esp,0x45e45193
  4038ee:	xlat   BYTE PTR ds:[ebx]
  4038ef:	(bad)  
  4038f0:	(bad)  
  4038f1:	cmp    al,0x4c
  4038f3:	out    0xc0,eax
  4038f5:	and    ebp,esp
  4038f7:	pushf  
  4038f8:	(bad)  
  4038fa:	jmp    0x72c51e9b
  4038ff:	outs   dx,DWORD PTR ds:[esi]
  403900:	or     eax,0x18c7c3ab
  403905:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403906:	mov    ah,0xc3
  403908:	fs into 
  40390a:	imul   edi,DWORD PTR [esp+eiz*8-0x5f],0xffffffdf
  40390f:	out    0x8d,eax
  403911:	retf   0xf0e6
  403914:	push   edx
  403915:	ret    
  403916:	retf   
  403917:	cdq    
  403918:	cmp    DWORD PTR [eax],ebp
  40391a:	jmp    0xb0858288
  40391f:	cs test dh,0x65
  403923:	test   ebp,esp
  403925:	dec    ebx
  403926:	stos   DWORD PTR es:[edi],eax
  403927:	test   dh,0x67
  40392a:	outs   dx,BYTE PTR ds:[esi]
  40392b:	mov    al,ds:0x657668b4
  403930:	adc    cl,ah
  403932:	adc    ah,BYTE PTR [eax+0x150c39a6]
  403938:	jno    0x4038e0
  40393a:	shr    BYTE PTR [ecx+0x55],1
  40393d:	scas   eax,DWORD PTR es:[edi]
  40393e:	pop    es
  40393f:	dec    edx
  403940:	int    0x8b
  403942:	hlt    
  403943:	push   ebp
  403944:	cmc    
  403945:	std    
  403946:	loopne 0x4039b6
  403948:	dec    edx
  403949:	adc    eax,DWORD PTR [ebp+0xe37f81c]
  40394f:	fs dec edx
  403951:	int    0x3b
  403953:	aam    0x6b
  403955:	cmp    bh,BYTE PTR [ebx]
  403957:	dec    esp
  403958:	sub    esp,DWORD PTR [ecx]
  40395a:	retf   0xfca4
  40395d:	std    
  40395e:	imul   esp,ebx,0x3c
  403961:	retf   
  403962:	ret    0x1b2a
  403965:	(bad)  
  403966:	jmp    0xd38e:0x2f009309
  40396d:	or     al,0x7e
  40396f:	jo     0x403969
  403971:	push   eax
  403972:	sub    ebx,DWORD PTR [ebp-0x7874ed8]
  403978:	inc    esp
  403979:	and    BYTE PTR [edx+0x10],al
  40397c:	and    eax,0xd298f01b
  403981:	popf   
  403982:	mov    cl,bh
  403984:	xchg   ebx,eax
  403985:	jmp    0x4039ee
  403987:	sbb    BYTE PTR [ecx+0x45c0dcce],bh
  40398d:	pop    edx
  40398e:	jo     0x40396e
  403990:	pop    edi
  403991:	jmp    0xc018:0x2a1f067
  403998:	test   cl,dh
  40399a:	(bad)  
  40399b:	(bad)  
  40399c:	iret   
  40399d:	push   0x2707aa40
  4039a2:	adc    dh,BYTE PTR [esi+eiz*1-0x55]
  4039a6:	cmc    
  4039a7:	ins    DWORD PTR es:[edi],dx
  4039a8:	out    dx,al
  4039a9:	(bad)  
  4039aa:	jmp    0x4039da
  4039ac:	mov    DWORD PTR [esi+0x43c6efe7],ebp
  4039b2:	std    
  4039b3:	or     ebx,DWORD PTR [ecx]
  4039b5:	(bad)  
  4039b7:	ss cdq 
  4039b9:	jo     0x403a04
  4039bb:	mov    dh,0x3a
  4039bd:	xchg   esi,eax
  4039be:	sub    cl,BYTE PTR [ecx]
  4039c0:	push   eax
  4039c1:	cmc    
  4039c2:	sti    
  4039c3:	stc    
  4039c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039c5:	jns    0x4039f8
  4039c7:	test   al,0xdb
  4039c9:	jbe    0x4039fc
  4039cb:	pop    esp
  4039cc:	or     esi,DWORD PTR [esi-0x4795ca4e]
  4039d2:	or     al,0x2d
  4039d4:	xor    ah,BYTE PTR [edx+0xe]
  4039d7:	sub    edi,esp
  4039d9:	cmp    eax,0x2952e5c3
  4039de:	cmp    BYTE PTR [esi],0x89
  4039e1:	enter  0x1ff6,0x24
  4039e5:	jnp    0x40396c
  4039e7:	imul   edx,DWORD PTR [esp+edx*8],0xfffffffa
  4039eb:	mov    ds:0x9c493ea5,al
  4039f0:	add    BYTE PTR [ecx-0x4],cl
  4039f3:	mov    al,ds:0x1b1c808b
  4039f8:	sti    
  4039f9:	sbb    bh,ah
  4039fb:	push   cs
  4039fc:	inc    edi
  4039fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039fe:	sub    al,ch
  403a00:	xchg   BYTE PTR [ebx+esi*2-0x620157bf],cl
  403a07:	repz sti 
  403a09:	neg    bl
  403a0b:	cmp    DWORD PTR [ecx+esi*2-0x6e83980b],esi
  403a12:	push   esi
  403a13:	and    al,0x60
  403a15:	pushf  
  403a16:	add    BYTE PTR [edi],ah
  403a18:	jmp    0x2e475d79
  403a1d:	loop   0x403a11
  403a1f:	mov    gs:0x1ec0448,al
  403a25:	jmp    0x6f3f:0x297c7a39
  403a2c:	inc    edi
  403a2d:	pop    ebx
  403a2e:	dec    esi
  403a2f:	xor    BYTE PTR [edi],cl
  403a31:	pop    ds
  403a32:	ret    
  403a33:	sahf   
  403a34:	data16 xlat BYTE PTR ds:[ebx]
  403a36:	dec    eax
  403a37:	mov    eax,0xe7439e98
  403a3c:	mov    al,0x7f
  403a3e:	sbb    bh,BYTE PTR [ecx-0x2a6bd31a]
  403a44:	xor    DWORD PTR [edi+0x305dc814],ebx
  403a4a:	xor    al,0xa2
  403a4c:	and    eax,0xed40eefc
  403a51:	sub    eax,0xb92087a
  403a56:	mov    dh,BYTE PTR ds:0x5f848ad3
  403a5c:	cld    
  403a5d:	xchg   edx,eax
  403a5e:	ss mov edi,0xdd8b5805
  403a64:	jmp    0xeda5:0x1d3c5489
  403a6b:	mov    DWORD PTR [esp+ebx*1+0x580bba64],edi
  403a72:	add    DWORD PTR [ecx-0x492d74b5],esi
  403a78:	jmp    0x2be9:0xd024f5d3
  403a7f:	repz sub al,0x9e
  403a82:	mov    ecx,0x5c7e8019
  403a87:	repz adc esi,DWORD PTR [edx]
  403a8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a8b:	xor    al,0x23
  403a8d:	jecxz  0x403a65
  403a8f:	sub    edi,DWORD PTR [ebx-0x51]
  403a92:	sar    ebx,0x7e
  403a95:	out    dx,al
  403a96:	sub    BYTE PTR [ecx-0x1b],bl
  403a99:	mov    ah,0x69
  403a9b:	outs   dx,DWORD PTR ds:[esi]
  403a9c:	sti    
  403a9d:	xchg   esp,eax
  403a9e:	jb     0x403a40
  403aa0:	aad    0xdd
  403aa2:	pop    ecx
  403aa3:	xchg   DWORD PTR ds:0x33efd457,esi
  403aa9:	jno    0x403a61
  403aab:	sbb    BYTE PTR [ebx],0xf4
  403aae:	pop    ecx
  403aaf:	rcr    DWORD PTR [esp+ebp*8+0x1c],0xe8
  403ab4:	xchg   esp,eax
  403ab5:	inc    esp
  403ab6:	xor    eax,esi
  403ab8:	sub    al,0x89
  403aba:	mov    cl,0x39
  403abc:	fld    DWORD PTR [esi+0x52]
  403abf:	xchg   ebp,eax
  403ac0:	xor    DWORD PTR [ecx],0x26dce98c
  403ac6:	mov    ds:0x97f72a56,al
  403acb:	dec    edx
  403acc:	mov    eax,ds:0x949cfa60
  403ad1:	xor    DWORD PTR [ebx-0x27cca494],esp
  403ad7:	cwde   
  403ad8:	dec    edi
  403ad9:	cmp    eax,0x60c7eb4c
  403ade:	push   cs
  403adf:	inc    ebp
  403ae0:	pushf  
  403ae1:	mov    bh,0xaa
  403ae3:	and    esi,eax
  403ae5:	mov    cs,WORD PTR [ebp-0x5d]
  403ae8:	clc    
  403ae9:	sbb    ebp,edi
  403aeb:	cmp    eax,0xe5adc212
  403af0:	mov    ecx,0x9f63c378
  403af5:	gs clc 
  403af7:	stc    
  403af8:	pop    edx
  403af9:	mov    ds:0x624f4e57,eax
  403afe:	retf   0xceb6
  403b01:	mov    dh,0xf2
  403b03:	cmp    BYTE PTR [edx-0x9],al
  403b06:	or     DWORD PTR [eax+0x3a],esp
  403b09:	je     0x403a90
  403b0b:	mov    ch,0xaa
  403b0d:	cmp    al,0x3
  403b0f:	sbb    ebp,DWORD PTR [edx]
  403b11:	inc    esi
  403b12:	or     eax,0x69426557
  403b17:	into   
  403b18:	test   BYTE PTR [ebp-0x74],cl
  403b1b:	push   eax
  403b1c:	xchg   esi,eax
  403b1d:	mov    bh,0xa9
  403b1f:	jno    0x403b53
  403b21:	xor    BYTE PTR cs:[edi+0x39],ah
  403b25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b26:	push   edi
  403b27:	jbe    0x403b18
  403b29:	shl    BYTE PTR [ebx-0x39cc38d5],0x3b
  403b30:	ror    DWORD PTR [edi],0x85
  403b33:	push   esi
  403b34:	add    BYTE PTR [eax],al
  403b36:	add    BYTE PTR [ecx+0x18fdc9],al
  403b3c:	add    BYTE PTR [ebx+0x2581f845],cl
  403b42:	imul   edx,DWORD PTR [ecx+0x3a4c0042],0x0
  403b49:	add    BYTE PTR [ebx+0x1581f04d],cl
  403b4f:	imul   edx,DWORD PTR [ecx-0x6e0cffbe],0x42
  403b56:	add    BYTE PTR [ebx],dh
  403b58:	mov    BYTE PTR [ecx+0x4291d335],0x0
  403b5f:	not    DWORD PTR [ecx-0x31ccffbe]
  403b65:	sub    eax,ecx
  403b67:	sub    eax,edi
  403b69:	mov    ecx,DWORD PTR ds:0x429cdf
  403b6f:	mov    ecx,DWORD PTR [ecx]
  403b71:	xor    DWORD PTR ds:0x429163,ecx
  403b77:	xor    eax,esi
  403b79:	mov    DWORD PTR [ebp-0x8],eax
  403b7c:	mov    eax,DWORD PTR [ebp-0x10]
  403b7f:	xor    eax,esi
  403b81:	mov    ecx,0xffcd8d8d
  403b86:	sub    ecx,eax
  403b88:	jmp    0x403b9c
  403b8d:	mov    eax,DWORD PTR [ebp-0x10]
  403b90:	xor    eax,esi
  403b92:	mov    ecx,0xffcd8d0d
  403b97:	sub    ecx,eax
  403b99:	add    ecx,DWORD PTR [ebp-0xc]
  403b9c:	mov    DWORD PTR [ebp-0xc],ecx
  403b9f:	mov    eax,DWORD PTR [ebp-0x8]
  403ba2:	cmp    eax,0xf89c85a1
  403ba7:	jne    0x40158a
  403bad:	mov    DWORD PTR [ebp-0x34],0x9
  403bb4:	mov    ecx,DWORD PTR [ebp+0x8]
  403bb7:	xor    ecx,esi
  403bb9:	add    ecx,edi
  403bbb:	jmp    0x40857d
  403bc0:	lea    eax,[ecx+ebx*1]
  403bc3:	mov    DWORD PTR [ebp-0x2c],eax
  403bc6:	mov    eax,DWORD PTR [ebp-0x58]
  403bc9:	sub    eax,ecx
  403bcb:	mov    DWORD PTR [ebp-0x1c],eax
  403bce:	mov    eax,DWORD PTR [ebp-0x1c]
  403bd1:	mov    DWORD PTR [ebp-0x14],eax
  403bd4:	mov    eax,DWORD PTR [ebp-0x2c]
  403bd7:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  403bde:	mov    DWORD PTR [ebp-0x54],eax
  403be1:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  403be8:	mov    eax,DWORD PTR [ebp-0x38]
  403beb:	xor    eax,esi
  403bed:	add    eax,edi
  403bef:	mov    DWORD PTR [ebp-0x10],eax
  403bf2:	mov    eax,DWORD PTR [ebp-0x38]
  403bf5:	xor    eax,esi
  403bf7:	add    eax,edi
  403bf9:	mov    DWORD PTR [ebp-0x8],eax
  403bfc:	mov    DWORD PTR [ebp-0x2c],0xf89c8581
  403c03:	mov    DWORD PTR [ebp-0x44],0xf89c85b8
  403c0a:	mov    eax,DWORD PTR [ebp-0x38]
  403c0d:	mov    edx,DWORD PTR [ebp-0x14]
  403c10:	xor    eax,esi
  403c12:	add    eax,edi
  403c14:	cmp    edx,eax
  403c16:	je     0x408571
  403c1c:	mov    eax,DWORD PTR [ebp-0x20]
  403c1f:	xor    eax,esi
  403c21:	mov    edx,0xffcd8d0d
  403c26:	sub    edx,eax
  403c28:	add    edx,DWORD PTR [ebp-0x14]
  403c2b:	mov    eax,DWORD PTR [ebp-0x20]
  403c2e:	mov    ebx,DWORD PTR [ebp-0x10]
  403c31:	xor    eax,esi
  403c33:	add    eax,edi
  403c35:	imul   eax,ebx
  403c38:	cmp    eax,edx
  403c3a:	ja     0x40856e
  403c40:	mov    edx,DWORD PTR [ebp-0x10]
  403c43:	mov    eax,DWORD PTR [ebp-0x14]
  403c46:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c49:	sub    eax,edx
  403c4b:	xor    ebx,esi
  403c4d:	xor    edx,edx
  403c4f:	add    ebx,edi
  403c51:	div    ebx
  403c53:	mov    DWORD PTR [ebp-0x8],eax
  403c56:	mov    eax,DWORD PTR [ebp-0x44]
  403c59:	mov    edx,DWORD PTR [ebp-0x8]
  403c5c:	xor    eax,esi
  403c5e:	add    eax,edi
  403c60:	cmp    edx,eax
  403c62:	jbe    0x403c72
  403c68:	mov    eax,DWORD PTR [ebp-0x44]
  403c6b:	xor    eax,esi
  403c6d:	add    eax,edi
  403c6f:	mov    DWORD PTR [ebp-0x8],eax
  403c72:	mov    eax,DWORD PTR [ebp-0x2c]
  403c75:	mov    edx,DWORD PTR [ebp-0x8]
  403c78:	xor    eax,esi
  403c7a:	add    eax,edi
  403c7c:	imul   eax,edx
  403c7f:	mov    DWORD PTR [ebp-0x8],eax
  403c82:	mov    eax,DWORD PTR [ebp-0x38]
  403c85:	mov    edx,DWORD PTR [ebp-0x8]
  403c88:	jmp    0x406039
  403c8d:	mov    eax,0xa02c6f67
  403c92:	and    al,0xb8
  403c94:	out    0x12,eax
  403c96:	mov    bh,0x24
  403c98:	fnsave [ebx-0x10106a77]
  403c9e:	pop    esp
  403c9f:	add    DWORD PTR [ebx-0x7c7ca311],0x34
  403ca6:	stc    
  403ca7:	addr16 out 0x98,eax
  403caa:	cmp    BYTE PTR fs:[edx-0x7d],dh
  403cae:	and    edx,ebx
  403cb0:	imul   eax,DWORD PTR [ebx+0x1f],0x3f2639e2
  403cb7:	rcl    BYTE PTR ss:[bx+di],1
  403cbb:	cs sbb al,0xe3
  403cbe:	push   edx
  403cbf:	sti    
  403cc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cc1:	sub    al,0xcc
  403cc3:	sub    edi,ecx
  403cc5:	rcr    BYTE PTR [edx],1
  403cc7:	js     0x403d33
  403cc9:	mov    ss,WORD PTR [ebp-0x29001069]
  403ccf:	ins    DWORD PTR es:[edi],dx
  403cd0:	pop    esi
  403cd1:	adc    DWORD PTR [ebp+0x47],ebp
  403cd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cd5:	jne    0x403c87
  403cd7:	test   ch,ah
  403cd9:	pop    ebx
  403cda:	sub    DWORD PTR [eax+ebp*4],ebx
  403cdd:	push   eax
  403cde:	int3   
  403cdf:	xchg   edi,eax
  403ce0:	pop    es
  403ce1:	cmp    BYTE PTR [edx+0x5d],ch
  403ce4:	loop   0x403d61
  403ce6:	ja     0x403cc8
  403ce8:	stos   BYTE PTR es:[edi],al
  403ce9:	fdivr  DWORD PTR [ecx+0x6a]
  403cec:	xchg   edi,eax
  403ced:	outs   dx,BYTE PTR ds:[esi]
  403cee:	out    dx,al
  403cef:	std    
  403cf0:	pop    ebx
  403cf1:	sub    edi,DWORD PTR [ecx+0x61d76241]
  403cf7:	(bad)  
  403cf8:	jb     0x403c8a
  403cfa:	mov    dh,0xaa
  403cfc:	sbb    eax,0x6261ab8c
  403d01:	mov    ah,0x19
  403d03:	daa    
  403d04:	leave  
  403d05:	jge    0x403d2a
  403d07:	xlat   BYTE PTR ds:[ebx]
  403d08:	lea    ebp,[edx+0x78]
  403d0b:	cmp    al,bl
  403d0d:	pop    edi
  403d0e:	ret    
  403d0f:	outs   dx,DWORD PTR ds:[esi]
  403d10:	xchg   ebx,eax
  403d11:	aaa    
  403d12:	sbb    dh,BYTE PTR [edi]
  403d14:	test   al,0xf8
  403d16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d17:	(bad)  
  403d18:	mov    ds:0x9979a260,eax
  403d1d:	aaa    
  403d1e:	shr    BYTE PTR [eax-0x298ca814],1
  403d24:	inc    eax
  403d25:	fwait
  403d26:	dec    edx
  403d27:	into   
  403d28:	mov    ah,0x37
  403d2a:	dec    ebp
  403d2b:	mov    ecx,0x9d75531d
  403d30:	pusha  
  403d31:	fs out 0x55,eax
  403d34:	jp     0x403cc5
  403d36:	ins    BYTE PTR es:[edi],dx
  403d37:	or     BYTE PTR ds:0x7a43c640,al
  403d3d:	mov    ebp,0xca80050a
  403d42:	cmp    ah,BYTE PTR gs:0x89bd5bbe
  403d49:	jmp    DWORD PTR [edx+0x6c72a083]
  403d4f:	xchg   ebp,eax
  403d50:	les    ebp,FWORD PTR [esi+ebx*2-0x747a112c]
  403d57:	scas   eax,DWORD PTR es:[edi]
  403d58:	cmp    edi,edx
  403d5a:	pop    ss
  403d5b:	aaa    
  403d5c:	jbe    0x403ddd
  403d5e:	pop    edx
  403d5f:	mov    dh,0xaa
  403d61:	arpl   WORD PTR [ecx],sp
  403d63:	(bad)  
  403d64:	std    
  403d65:	in     al,dx
  403d66:	stos   DWORD PTR es:[edi],eax
  403d67:	jmp    0xd0ca:0x8eb09f6
  403d6e:	popa   
  403d6f:	xchg   ebp,eax
  403d70:	test   al,0x81
  403d72:	fs jae 0x403d33
  403d75:	pushf  
  403d76:	or     edx,esi
  403d78:	scas   al,BYTE PTR es:[edi]
  403d79:	push   edx
  403d7a:	aas    
  403d7b:	push   0x32eabaa0
  403d80:	push   edi
  403d81:	ret    
  403d82:	mov    WORD PTR ds:[esi+ebx*1-0x4e],ds
  403d87:	sub    DWORD PTR [esp+edi*4+0x743c3e19],0x3a
  403d8f:	call   DWORD PTR [ecx+edi*2+0x62b63d3a]
  403d96:	idiv   BYTE PTR [ecx]
  403d98:	js     0x403dda
  403d9a:	in     al,0xfc
  403d9c:	xchg   edx,eax
  403d9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d9e:	jnp    0x403d46
  403da0:	fild   DWORD PTR [edx-0x22]
  403da3:	shl    DWORD PTR [ecx+0x6885c7bf],0xd6
  403daa:	and    eax,0x7ba47345
  403daf:	xor    BYTE PTR [edi-0x4c],dl
  403db2:	fmul   st,st(5)
  403db4:	cs sbb al,0xf4
  403db7:	mov    edi,0xa98ab537
  403dbc:	int3   
  403dbd:	fldcw  WORD PTR [ebx+0x6dc1cd6d]
  403dc3:	dec    esi
  403dc4:	push   0x73b47a58
  403dc9:	lahf   
  403dca:	push   ebx
  403dcb:	push   0xffffffd0
  403dcd:	mov    WORD PTR [ecx+0x15],?
  403dd0:	shl    BYTE PTR [edx-0x24],1
  403dd3:	jmp    0x403da1
  403dd5:	dec    esi
  403dd6:	or     al,0x84
  403dd8:	push   es
  403dd9:	sbb    bh,BYTE PTR [edi-0x101e2bae]
  403ddf:	mov    al,ds:0x9b574085
  403de4:	sar    DWORD PTR [edx-0x73],0xb1
  403de8:	dec    esi
  403de9:	pop    eax
  403dea:	mov    BYTE PTR [ebx],ah
  403dec:	repz icebp 
  403dee:	int    0xf0
  403df0:	jmp    0xd12f3155
  403df5:	dec    edi
  403df6:	aas    
  403df7:	(bad)  
  403df8:	xor    eax,0x68567d42
  403dfd:	retf   0x86f5
  403e00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e01:	sub    al,0xe2
  403e03:	push   0xffffffb2
  403e05:	push   0x65
  403e07:	xlat   BYTE PTR ds:[ebx]
  403e08:	into   
  403e09:	mov    ah,0x29
  403e0b:	mov    dh,0x1f
  403e0d:	jno    0x403e6a
  403e0f:	jg     0x403dd6
  403e11:	arpl   WORD PTR ds:0x362b8530,ax
  403e17:	ins    BYTE PTR es:[edi],dx
  403e18:	inc    edx
  403e19:	mov    eax,ds:0xc6f1dee7
  403e1e:	mov    gs:0x9872a227,eax
  403e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e25:	jnp    0x403dcf
  403e27:	inc    esp
  403e28:	or     dh,BYTE PTR [edx+edi*8+0x37]
  403e2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e2d:	xchg   esp,eax
  403e2e:	cli    
  403e2f:	mov    ebp,0x58e7130a
  403e34:	jne    0x403e27
  403e36:	add    al,BYTE PTR [edi-0x7d]
  403e39:	(bad)  
  403e3b:	sbb    DWORD PTR [ecx-0x5e],0x25
  403e3f:	ins    BYTE PTR es:[edi],dx
  403e40:	mov    eax,0x526ee949
  403e45:	jecxz  0x403e49
  403e47:	cmp    dh,BYTE PTR [esi-0x2c]
  403e4a:	sbb    al,0x76
  403e4c:	xchg   BYTE PTR [eax+0x60],dl
  403e4f:	inc    esi
  403e50:	test   eax,0xb2ff9868
  403e55:	lea    edx,[edx+0x5fe575e8]
  403e5b:	mov    eax,ds:0x55c6d021
  403e60:	dec    edx
  403e61:	push   edi
  403e62:	adc    DWORD PTR [ebx+esi*2+0x431b781],ebx
  403e69:	fisub  WORD PTR [ebx+0x7b]
  403e6c:	adc    ebp,ecx
  403e6e:	inc    eax
  403e6f:	into   
  403e70:	dec    edx
  403e71:	ror    BYTE PTR [esi-0x7b],1
  403e74:	jmp    0x6bf1c256
  403e79:	enter  0x47a4,0x56
  403e7d:	pop    ds
  403e7e:	in     al,dx
  403e7f:	scas   eax,DWORD PTR es:[edi]
  403e80:	int3   
  403e81:	or     eax,0x1f9f29ad
  403e86:	lods   eax,DWORD PTR ds:[esi]
  403e87:	mov    ch,0x9d
  403e89:	push   cs
  403e8a:	pusha  
  403e8b:	sbb    eax,0x5cfdf6c3
  403e90:	out    0xd5,al
  403e92:	sbb    dl,BYTE PTR [ebx+0x66097db6]
  403e98:	loope  0x403e65
  403e9a:	and    DWORD PTR [ecx+0x5d6890e1],ebp
  403ea0:	or     esi,DWORD PTR [edi+0x7ec178f6]
  403ea6:	mov    ebp,0x10352f5f
  403eab:	ins    DWORD PTR es:[edi],dx
  403eac:	lods   al,BYTE PTR ds:[esi]
  403ead:	mov    cl,0x54
  403eaf:	push   ebp
  403eb0:	and    bl,0xf5
  403eb3:	sub    dl,bl
  403eb5:	mov    esi,0x3402021e
  403eba:	cmp    al,0xee
  403ebc:	mov    ebp,0x86123e97
  403ec1:	or     BYTE PTR [ecx+ebx*8],al
  403ec4:	ins    DWORD PTR es:[edi],dx
  403ec5:	out    dx,al
  403ec6:	mov    ecx,0xb5bacc8f
  403ecb:	xor    dl,BYTE PTR ds:0xda10b6d8
  403ed1:	jp     0x403e59
  403ed3:	sub    ch,BYTE PTR [esi+0x2de71048]
  403ed9:	pop    eax
  403eda:	mov    bh,0xa1
  403edc:	leave  
  403edd:	clc    
  403ede:	(bad)  [edi-0x38bb5994]
  403ee4:	fcom   DWORD PTR [edi]
  403ee6:	iret   
  403ee7:	cmp    al,0x68
  403ee9:	mov    bh,0xdf
  403eeb:	push   edi
  403eec:	out    0x1f,al
  403eee:	cmp    BYTE PTR [ebp-0x79705f2c],0x84
  403ef5:	jo     0x403f54
  403ef7:	jg     0x403e98
  403ef9:	push   0x64
  403efb:	mov    edi,DWORD PTR [ecx]
  403efd:	sbb    DWORD PTR [ecx+0x6a],edi
  403f00:	mov    dh,0xf1
  403f02:	push   0x4cbe82bc
  403f07:	inc    DWORD PTR [eax+esi*2]
  403f0a:	jmp    0x403f52
  403f0c:	arpl   WORD PTR [edi+0xf5cc9b0],cx
  403f12:	pop    ebp
  403f13:	jmp    0x403f7b
  403f15:	xchg   ebp,eax
  403f16:	add    al,BYTE PTR [edi]
  403f18:	inc    edx
  403f19:	int    0xff
  403f1b:	mov    ds:0xbd4d95c8,al
  403f20:	inc    DWORD PTR [eax]
  403f22:	icebp  
  403f23:	cdq    
  403f24:	enter  0xf439,0x52
  403f28:	mul    DWORD PTR [eax-0x59a786e5]
  403f2e:	lds    ecx,FWORD PTR [ecx]
  403f30:	push   edx
  403f31:	fst    st(3)
  403f33:	stos   BYTE PTR es:[edi],al
  403f34:	fnstsw WORD PTR [edx+ebx*1+0x14]
  403f38:	push   0x7d
  403f3a:	cwde   
  403f3b:	fwait
  403f3c:	int    0xe9
  403f3e:	push   DWORD PTR [eax-0x2dca459b]
  403f44:	jmp    0xc25f:0x11c61dfc
  403f4b:	and    al,0x65
  403f4d:	stc    
  403f4e:	and    dh,BYTE PTR [edi*1-0x6ff3a629]
  403f55:	(bad)  
  403f56:	jmp    0x19f:0x95e2cf6f
  403f5d:	mov    bh,0x54
  403f5f:	mov    bh,dh
  403f61:	mov    dh,0xed
  403f63:	mov    ss,WORD PTR [edi]
  403f65:	inc    edi
  403f66:	in     eax,dx
  403f67:	push   0x1484e555
  403f6c:	mov    ds:0x98f1373d,eax
  403f71:	sbb    cl,BYTE PTR [esi-0x1c]
  403f74:	mov    ah,0xa8
  403f76:	push   ebx
  403f77:	mov    dh,0x37
  403f79:	call   0xf489:0x1b9f516a
  403f80:	mov    DWORD PTR [edx-0x2b],ebx
  403f83:	cmp    al,0xe9
  403f85:	in     eax,0x6b
  403f87:	pop    esp
  403f88:	jnp    0x403f1e
  403f8a:	(bad)  
  403f8b:	or     BYTE PTR [edx-0x3d],cl
  403f8e:	leave  
  403f8f:	repnz mov al,ds:0xb6b78e2
  403f95:	rcl    BYTE PTR [ecx-0x1b],0x45
  403f99:	inc    esi
  403f9a:	clc    
  403f9b:	pop    ss
  403f9c:	pop    ebp
  403f9d:	sar    BYTE PTR [ebx-0x7faddd0f],1
  403fa3:	xchg   esi,eax
  403fa4:	push   eax
  403fa5:	mov    ?,ecx
  403fa7:	push   ebp
  403fa8:	daa    
  403fa9:	in     eax,dx
  403faa:	adc    dl,dl
  403fac:	in     al,0x3
  403fae:	xchg   ebx,eax
  403faf:	add    esp,DWORD PTR [ebx+0x2eb402cd]
  403fb5:	pop    esi
  403fb6:	fbstp  TBYTE PTR [eax+0x77]
  403fb9:	retf   
  403fba:	lea    esi,[esi+esi*2+0x4e]
  403fbe:	inc    ecx
  403fbf:	pop    ecx
  403fc0:	cmp    eax,0x2214e908
  403fc5:	loope  0x403fde
  403fc7:	leave  
  403fc8:	push   esp
  403fc9:	push   ds
  403fca:	jmp    0x60710214
  403fcf:	in     al,0xc
  403fd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fd2:	pop    esi
  403fd3:	mov    edx,0x126e891e
  403fd8:	cmp    eax,0xb81a304f
  403fdd:	xor    DWORD PTR [ecx-0x48],ebx
  403fe0:	adc    al,0x27
  403fe2:	push   edx
  403fe3:	mov    bh,0xc4
  403fe5:	scas   al,BYTE PTR es:[edi]
  403fe6:	adc    DWORD PTR [esi-0x1e],esi
  403fe9:	lahf   
  403fea:	les    eax,FWORD PTR ds:0xd85f46b2
  403ff0:	imul   DWORD PTR [esi+0x4dc6ba20]
  403ff6:	cmp    esp,esp
  403ff8:	outs   dx,DWORD PTR ds:[esi]
  403ff9:	mov    ?,WORD PTR [esi+0x79517176]
  403fff:	es sub al,0x19
  404002:	je     0x40406b
  404004:	ret    
  404005:	adc    al,0xe4
  404007:	adc    eax,DWORD PTR [edx-0x7771c41]
  40400d:	fiadd  DWORD PTR [ecx+ebx*1-0x2abe4ed5]
  404014:	daa    
  404015:	lea    ebp,[ebx]
  404017:	je     0x403f9e
  404019:	pop    ss
  40401a:	push   ebp
  40401b:	sub    BYTE PTR [ecx-0x25],dh
  40401e:	sbb    esi,DWORD PTR [edi+edi*2-0x4be8f6b2]
  404025:	xor    DWORD PTR [eax+0x73],ebx
  404028:	xor    BYTE PTR [edi+0x46],dl
  40402b:	sub    al,0x31
  40402d:	mov    ds:0x720c8c2c,eax
  404032:	in     al,dx
  404033:	mov    bl,0x5c
  404035:	cdq    
  404036:	bound  eax,QWORD PTR [edi+esi*2-0xa203fb8]
  40403d:	loope  0x403fee
  40403f:	(bad)  
  404040:	xchg   ebp,eax
  404041:	ret    
  404042:	aaa    
  404043:	scas   al,BYTE PTR es:[edi]
  404044:	xchg   edi,eax
  404045:	mov    cl,0x3e
  404047:	(bad)  
  404048:	nop
  404049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40404a:	jno    0x404010
  40404c:	mov    eax,0x78fee0e2
  404051:	ficom  WORD PTR [edx]
  404053:	adc    ebp,esp
  404055:	sbb    DWORD PTR [eax+0x916181b],edx
  40405b:	mov    ebx,0xf00bf043
  404060:	jae    0x404000
  404062:	cmp    DWORD PTR [edi-0x13df146d],ebx
  404068:	dec    edi
  404069:	nop
  40406a:	mov    ah,0xdf
  40406c:	xchg   ebx,eax
  40406d:	mov    ds:0xadc03c9f,eax
  404072:	loope  0x403ff5
  404074:	scas   eax,DWORD PTR es:[edi]
  404075:	mov    al,0x72
  404077:	adc    BYTE PTR [esi],al
  404079:	or     al,0xa5
  40407b:	clc    
  40407c:	dec    edx
  40407d:	test   DWORD PTR [edx+0x268c674],eax
  404083:	aad    0x1e
  404085:	push   ebp
  404086:	call   0xcd80:0xf278d696
  40408d:	fisttp WORD PTR [edx-0x17]
  404090:	(bad)  
  404091:	int    0x26
  404093:	xchg   DWORD PTR [esi-0x45],esi
  404096:	dec    ebx
  404097:	sbb    eax,0xc4e232e9
  40409c:	popa   
  40409d:	adc    DWORD PTR [ecx-0x1b7fac9a],eax
  4040a3:	sahf   
  4040a4:	dec    ebp
  4040a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040a6:	clc    
  4040a7:	les    eax,FWORD PTR [ebx]
  4040a9:	lock shl BYTE PTR [ebp-0xc],0x9c
  4040ae:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4040b0:	fs push ss
  4040b2:	inc    eax
  4040b3:	mov    ds:0xa3fb830c,al
  4040b8:	mov    edi,0xc4dad692
  4040bd:	mov    edx,DWORD PTR [edi+eax*2+0x61]
  4040c1:	gs pop es
  4040c3:	sub    dl,BYTE PTR [esi]
  4040c5:	mov    bh,0x6c
  4040c7:	or     DWORD PTR [ecx+0x35],esi
  4040ca:	xor    BYTE PTR [ebx-0x9c27ac3],dl
  4040d0:	fst    DWORD PTR [ebx]
  4040d2:	sbb    ebp,DWORD PTR [ebx]
  4040d4:	popa   
  4040d5:	pop    ecx
  4040d6:	cmp    BYTE PTR [ecx-0x3a926094],dl
  4040dc:	mov    ch,0xe8
  4040de:	iret   
  4040df:	dec    ebx
  4040e0:	jecxz  0x40406a
  4040e2:	xlat   BYTE PTR ds:[ebx]
  4040e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040e4:	sub    esi,DWORD PTR [esi]
  4040e6:	les    edx,FWORD PTR [esi+esi*1]
  4040e9:	jg     0x404158
  4040eb:	daa    
  4040ec:	mov    al,ds:0xa74dfa1e
  4040f1:	xchg   esi,ebp
  4040f3:	ss mov cl,BYTE PTR cs:[ecx]
  4040f7:	jae    0x4040ce
  4040f9:	mov    bh,0x1
  4040fb:	pusha  
  4040fc:	fwait
  4040fd:	ins    DWORD PTR es:[edi],dx
  4040fe:	in     al,dx
  4040ff:	fs daa 
  404101:	jle    0x404106
  404103:	loope  0x40411b
  404105:	ret    
  404106:	dec    ebp
  404107:	xor    ebp,0xfffffff5
  40410a:	push   ecx
  40410b:	retf   
  40410c:	in     eax,0xd4
  40410e:	ss xchg esp,eax
  404110:	and    BYTE PTR [edi+0x48],ah
  404113:	inc    ecx
  404114:	adc    DWORD PTR [esi+0x2d],esp
  404117:	xor    al,0x4c
  40411a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40411b:	xor    BYTE PTR [esi-0x784f9e6f],ch
  404121:	loopne 0x404182
  404123:	xor    bl,BYTE PTR [edx]
  404125:	adc    edi,esp
  404127:	aad    0xf7
  404129:	xchg   edi,eax
  40412a:	sub    BYTE PTR [eax-0x75],ch
  40412d:	pop    edx
  40412e:	pop    ds
  40412f:	mov    ch,0x71
  404131:	xchg   BYTE PTR [esi+0x4d],ch
  404134:	mov    al,0x13
  404136:	scas   al,BYTE PTR es:[edi]
  404137:	dec    ebx
  404138:	(bad)  
  404139:	mov    ecx,0x388700a7
  40413e:	and    BYTE PTR [edx+0x11],bl
  404141:	in     eax,dx
  404142:	es enter 0x5222,0x74
  404147:	enter  0x7559,0xd9
  40414b:	inc    edx
  40414c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40414d:	int3   
  40414e:	mov    al,ds:0xf9d336d
  404153:	jl     0x404139
  404155:	hlt    
  404156:	or     eax,0xd63fb9ef
  40415b:	xlat   BYTE PTR ds:[ebx]
  40415c:	adc    esp,DWORD PTR [ebx-0x1c86998e]
  404162:	fstp   DWORD PTR [ebx-0x79]
  404165:	fwait
  404166:	pop    ss
  404167:	mov    al,0xfd
  404169:	xor    DWORD PTR [edx+0x54],esi
  40416c:	retf   0xa055
  40416f:	cmp    bh,ch
  404171:	fmul   DWORD PTR [ecx-0x20]
  404174:	mov    DWORD PTR [esi+0x60],eax
  404177:	add    DWORD PTR [ebp-0x65c70e0a],esp
  40417d:	aaa    
  40417e:	or     bh,BYTE PTR [edx-0x704d3339]
  404184:	retf   0xea1b
  404187:	das    
  404188:	loop   0x40413d
  40418a:	fild   QWORD PTR [esp+ecx*2]
  40418d:	jae    0x4041fb
  40418f:	adc    BYTE PTR [edi+ebp*1+0x64],bh
  404193:	ror    DWORD PTR [eax-0x1a40cc87],0x97
  40419a:	rcr    esp,0x8a
  40419d:	xor    al,0xcf
  40419f:	loope  0x404174
  4041a1:	sub    al,0x66
  4041a3:	jnp    0x404213
  4041a5:	dec    eax
  4041a6:	imul   esi,DWORD PTR [eax-0x1cb8eec4],0x3a5bca7f
  4041b0:	ret    
  4041b1:	enter  0x323c,0x19
  4041b5:	jmp    0x3608acfb
  4041ba:	(bad)  
  4041bb:	hlt    
  4041bc:	ins    BYTE PTR es:[edi],dx
  4041bd:	sbb    BYTE PTR [ecx-0x5f0910ba],dl
  4041c3:	jmp    0x404190
  4041c5:	nop
  4041c6:	sbb    eax,0xd57713aa
  4041cb:	push   cs
  4041cc:	mov    WORD PTR [eax+0x173c4252],?
  4041d2:	sbb    dh,BYTE PTR [esi]
  4041d4:	pop    esi
  4041d5:	sbb    DWORD PTR [ecx-0x7016c549],ebp
  4041db:	push   es
  4041dc:	das    
  4041dd:	cdq    
  4041de:	icebp  
  4041df:	xchg   ecx,eax
  4041e0:	jg     0x40419d
  4041e2:	pop    ebp
  4041e3:	push   esp
  4041e4:	das    
  4041e5:	daa    
  4041e6:	loop   0x4041fe
  4041e8:	pop    edi
  4041e9:	fistp  DWORD PTR [edx-0x47960132]
  4041ef:	ja     0x404191
  4041f1:	arpl   WORD PTR [eax+0x60],dx
  4041f4:	mov    ecx,DWORD PTR [eax]
  4041f6:	lods   al,BYTE PTR ds:[esi]
  4041f7:	inc    esp
  4041f8:	mov    esp,0xf71eb178
  4041fd:	dec    esp
  4041fe:	lahf   
  4041ff:	in     eax,0x5c
  404201:	adc    DWORD PTR [ebx],0x76
  404204:	mov    al,0xf8
  404206:	out    0x11,eax
  404208:	fcomp  DWORD PTR ds:0x89a28df4
  40420e:	sbb    eax,0x21d8295e
  404213:	aad    0xd5
  404215:	in     al,dx
  404216:	mov    ecx,0x74f60c6f
  40421b:	mov    DWORD PTR [eax-0x220b4b0],esp
  404221:	jae    0x4041f8
  404223:	test   ah,ah
  404225:	jge    0x404238
  404227:	mov    ecx,0x15210147
  40422c:	mov    ecx,0x6e8a4aec
  404231:	sub    al,0x40
  404233:	aaa    
  404234:	(bad)  
  404235:	out    dx,al
  404236:	js     0x404295
  404238:	sub    BYTE PTR [ecx+0x19],0x9f
  40423c:	cmp    ecx,ebp
  40423e:	xor    al,0x84
  404240:	ins    DWORD PTR es:[edi],dx
  404241:	in     eax,0xcf
  404243:	mov    ebp,0x46974c9c
  404248:	pop    esp
  404249:	and    cl,BYTE PTR [eax]
  40424b:	sbb    eax,0xabcdb1c1
  404250:	mov    WORD PTR [esi-0x45],ss
  404253:	mov    dh,BYTE PTR cs:[edi+0x8ef392e]
  40425a:	and    eax,0xe102f466
  40425f:	daa    
  404260:	cmp    BYTE PTR [ecx-0x2e],ch
  404263:	push   cs
  404264:	test   BYTE PTR [esi],ah
  404266:	std    
  404267:	cdq    
  404268:	jne    0x404239
  40426a:	mov    dl,0xf3
  40426c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40426d:	xor    DWORD PTR [edx],esi
  40426f:	std    
  404270:	inc    bh
  404272:	sub    dl,dl
  404274:	out    dx,al
  404275:	imul   ch
  404277:	inc    ebx
  404278:	push   ss
  404279:	adc    ecx,esp
  40427b:	aas    
  40427c:	or     dl,dh
  40427e:	rcr    DWORD PTR [ebp+0x7fcfdc01],cl
  404284:	adc    al,0x10
  404286:	or     BYTE PTR [edx+0x22],ah
  404289:	cs loopne 0x4042d6
  40428c:	test   BYTE PTR [esi-0x9efc461],dh
  404292:	xor    eax,0x7a7dfdeb
  404297:	jmp    0x3212:0x1c9af3d3
  40429e:	aam    0x74
  4042a0:	push   esp
  4042a1:	adc    bl,BYTE PTR [edx]
  4042a3:	push   edx
  4042a4:	or     eax,0xf5de962b
  4042a9:	in     eax,dx
  4042aa:	xor    BYTE PTR [edi],bh
  4042ac:	inc    eax
  4042ad:	xchg   ebx,eax
  4042ae:	cmp    DWORD PTR [edx+0x7a],eax
  4042b1:	pushf  
  4042b2:	sub    BYTE PTR [ecx+0x2f],ch
  4042b5:	inc    edi
  4042b6:	xchg   BYTE PTR [edx-0x33f902e4],ah
  4042bc:	cwde   
  4042bd:	add    ebx,DWORD PTR [esi]
  4042bf:	xor    esi,DWORD PTR [ecx+0x29]
  4042c2:	pop    ebx
  4042c3:	mov    dl,0xae
  4042c5:	mov    bl,0x9f
  4042c7:	xchg   ah,al
  4042c9:	lea    eax,[eax]
  4042cb:	fistp  DWORD PTR [edi-0x4ca7b2d0]
  4042d1:	push   eax
  4042d2:	shl    DWORD PTR [esi],cl
  4042d4:	rcr    DWORD PTR [edi+0x7a],0xbc
  4042d8:	jb     0x404274
  4042da:	inc    eax
  4042db:	jns    0x404283
  4042dd:	pushf  
  4042de:	aaa    
  4042df:	sbb    al,0x9a
  4042e1:	in     eax,dx
  4042e2:	xchg   esi,eax
  4042e3:	or     dh,BYTE PTR [esi]
  4042e5:	ds int 0x9e
  4042e8:	pop    ds
  4042e9:	cmp    BYTE PTR [ebx-0x279e019a],cl
  4042ef:	adc    eax,0x3a279710
  4042f4:	xor    eax,eax
  4042f6:	pushf  
  4042f7:	fistp  DWORD PTR [edi+esi*1]
  4042fa:	xor    BYTE PTR [edi+0x2b41ff74],dh
  404300:	mov    ah,0x14
  404302:	mov    ds:0x51fc6297,al
  404307:	push   ss
  404308:	push   esi
  404309:	xor    eax,0x9e2e1b23
  40430e:	pop    edi
  40430f:	or     DWORD PTR [edx+0x15ff4373],edi
  404315:	lods   al,BYTE PTR ds:[esi]
  404316:	jno    0x404363
  404318:	retf   
  404319:	adc    eax,0xdee8fb21
  40431e:	jge    0x404302
  404320:	push   edi
  404321:	nop
  404322:	dec    ebp
  404323:	or     DWORD PTR [ebx+edx*1-0xe58c686],edx
  40432a:	int    0xba
  40432c:	mov    esp,0x446d8a3d
  404331:	fist   WORD PTR [esi]
  404333:	dec    esp
  404334:	or     cl,BYTE PTR [edi+ebx*4]
  404337:	cmp    ecx,0xa79f5d85
  40433d:	data16 or dl,al
  404340:	and    ah,BYTE PTR [esi-0x5b18f8aa]
  404346:	dec    eax
  404347:	leave  
  404348:	xchg   edi,eax
  404349:	out    dx,eax
  40434a:	inc    ebp
  40434b:	jo     0x4042de
  40434d:	dec    esp
  40434e:	dec    ebx
  40434f:	xchg   ebx,eax
  404350:	mov    ecx,0xce1cc575
  404355:	jle    0x404361
  404357:	cmp    edi,DWORD PTR [eax-0xa]
  40435a:	shr    DWORD PTR [eax+0x21],1
  40435d:	inc    ecx
  40435e:	rcr    DWORD PTR [eax-0x27],1
  404361:	mov    ah,0x2
  404363:	dec    ebp
  404364:	adc    edi,DWORD PTR [edx-0x63dda039]
  40436a:	ret    
  40436b:	cmp    al,0x34
  40436d:	dec    eax
  40436e:	mov    eax,0x86dbfe5
  404373:	pop    edi
  404374:	mov    ds:0x15e21c29,eax
  404379:	nop
  40437a:	xor    ecx,DWORD PTR [esi+edx*1+0x604cebd4]
  404381:	cmp    BYTE PTR [eax],0xa7
  404384:	and    eax,0x414c50c2
  404389:	mov    ebp,0xe2f0091e
  40438e:	dec    ecx
  40438f:	xchg   ebx,eax
  404390:	fdiv   st(6),st
  404392:	jmp    0x8067716
  404397:	das    
  404398:	repnz add DWORD PTR ds:[ebx+0x18fda1b0],ebx
  4043a0:	pop    ebp
  4043a1:	xchg   edi,eax
  4043a2:	daa    
  4043a3:	fnstsw WORD PTR [ecx]
  4043a5:	(bad)  
  4043a6:	jmp    0x8422:0x6ee732ed
  4043ad:	pop    ss
  4043ae:	mov    dh,0x71
  4043b0:	rol    BYTE PTR [eax-0x6c],cl
  4043b3:	fistp  QWORD PTR [ecx+0xe]
  4043b6:	pop    ds
  4043b7:	imul   eax,DWORD PTR [ecx-0x5],0x4436f487
  4043be:	inc    esp
  4043bf:	adc    BYTE PTR [ebx-0x1f57529c],0x18
  4043c6:	inc    BYTE PTR [eax]
  4043c8:	xchg   esp,eax
  4043c9:	ret    
  4043ca:	jmp    0xfa2f803d
  4043cf:	test   ecx,esi
  4043d1:	div    DWORD PTR [eax+0x29]
  4043d4:	mov    WORD PTR [ecx-0xfc9ecd7],gs
  4043da:	adc    al,0xf3
  4043dc:	mov    ebx,DWORD PTR [ecx-0x72]
  4043df:	lock lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043e2:	sahf   
  4043e3:	xchg   ebp,eax
  4043e4:	mov    eax,ds:0xcd715456
  4043e9:	and    al,0x44
  4043eb:	xchg   BYTE PTR [eax-0x1a3da3],ah
  4043f1:	pop    ecx
  4043f2:	mov    dh,0x9d
  4043f4:	mov    eax,0x41acf89
  4043f9:	pop    esp
  4043fa:	retf   
  4043fb:	(bad)  
  4043fc:	add    ecx,eax
  4043fe:	dec    ebx
  4043ff:	xchg   BYTE PTR [ebp+0x2],al
  404402:	addr16 sahf 
  404404:	push   ss
  404405:	inc    ecx
  404406:	adc    BYTE PTR [esi+edx*2],dh
  404409:	sub    edx,DWORD PTR [esi+0x30]
  40440c:	push   cs
  40440d:	mov    ebp,0xc3b91eb5
  404412:	mov    ebx,0x2b6c0cdc
  404417:	mov    esi,0x87c447d9
  40441c:	pop    edi
  40441d:	loope  0x4043b6
  40441f:	(bad)  
  404420:	jne    0x4043db
  404422:	lods   al,BYTE PTR ds:[esi]
  404423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404424:	sub    ebp,ebx
  404426:	mov    si,WORD PTR [eax+ebp*2+0x4174c2b9]
  40442e:	aad    0xf8
  404430:	push   eax
  404431:	mov    eax,ds:0x80949ca
  404436:	mov    BYTE PTR [ebx],dh
  404438:	sub    eax,0xd9132948
  40443d:	adc    DWORD PTR [ebx+0x73e0e00],0x83c695eb
  404447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404448:	cld    
  404449:	and    DWORD PTR [eax+0x21defd86],esi
  40444f:	adc    BYTE PTR [esi],bh
  404451:	icebp  
  404452:	hlt    
  404453:	call   0x8e002e86
  404458:	jnp    0x4043fb
  40445a:	std    
  40445b:	into   
  40445c:	je     0x404499
  40445e:	push   0xe447cb92
  404463:	fmul   DWORD PTR [esi+eax*1-0x51]
  404467:	xor    ch,al
  404469:	sub    ebp,ebx
  40446b:	pushf  
  40446c:	mov    ds:0xb1b83440,al
  404471:	sbb    DWORD PTR [edx+0x87e182f],0xffffffdf
  404478:	sbb    BYTE PTR [esi-0x3],dl
  40447b:	sub    BYTE PTR [edx-0x1802143b],dh
  404481:	jl     0x4044c0
  404483:	mov    dl,bl
  404485:	jno    0x404447
  404487:	push   esp
  404488:	lock xchg ecx,eax
  40448a:	das    
  40448b:	outs   dx,BYTE PTR ds:[esi]
  40448c:	sti    
  40448d:	(bad)  
  40448e:	cmc    
  40448f:	int3   
  404490:	ins    DWORD PTR es:[edi],dx
  404491:	jno    0x404471
  404493:	(bad)  
  404494:	xchg   esp,eax
  404495:	adc    eax,0x3d9e201d
  40449a:	fdiv   QWORD PTR [edi]
  40449c:	stc    
  40449d:	test   eax,0x747852f9
  4044a2:	xor    DWORD PTR [edx-0x5e2abfbf],edi
  4044a8:	clc    
  4044a9:	call   0xe077:0xac96bcaa
  4044b0:	out    0xf2,eax
  4044b2:	push   ebp
  4044b3:	jg     0x40450d
  4044b5:	inc    edx
  4044b6:	mov    dh,bh
  4044b8:	ds call 0xcae66d58
  4044be:	std    
  4044bf:	adc    edx,DWORD PTR ds:0xe70f4836
  4044c5:	cld    
  4044c6:	mov    BYTE PTR [ecx],0x14
  4044c9:	lea    esp,[esi+0x47aa5584]
  4044cf:	cli    
  4044d0:	and    esp,ecx
  4044d2:	cmc    
  4044d3:	mov    edx,edx
  4044d5:	hlt    
  4044d6:	mov    ebp,0x7630bb77
  4044db:	jmp    0x313a:0x2b02b52c
  4044e2:	(bad)  
  4044e3:	enter  0xe24f,0x5
  4044e7:	test   al,0x17
  4044e9:	in     eax,dx
  4044ea:	sub    al,0x75
  4044ec:	inc    eax
  4044ed:	inc    ecx
  4044ee:	aam    0x27
  4044f0:	jle    0x4044af
  4044f2:	jb     0x40449b
  4044f4:	dec    eax
  4044f5:	out    dx,eax
  4044f6:	mov    ebx,ss
  4044f8:	cmp    bh,ah
  4044fa:	adc    dl,cl
  4044fc:	pop    ss
  4044fd:	mov    eax,DWORD PTR [edi+0x72]
  404500:	nop
  404501:	arpl   WORD PTR [ebx],si
  404503:	jbe    0x4044ae
  404505:	mov    bh,0xc7
  404507:	xchg   edx,eax
  404508:	mov    ebx,ebp
  40450a:	push   esi
  40450b:	and    dh,0xec
  40450e:	lock hlt 
  404510:	in     eax,dx
  404511:	mov    ebp,0x6a936cf1
  404516:	ret    0xdd52
  404519:	jns    0x40453f
  40451b:	fisttp WORD PTR [ecx-0x7f73bf58]
  404521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404522:	sbb    al,0x9c
  404524:	add    esi,edx
  404526:	jl     0x4044b5
  404528:	mov    cl,0x5c
  40452a:	jo     0x40456d
  40452c:	mov    ds:0x23efce32,eax
  404531:	js     0x4044e4
  404533:	scas   eax,DWORD PTR es:[edi]
  404534:	shl    DWORD PTR [esi+0x161b5425],1
  40453a:	movsx  edi,BYTE PTR [edi-0x7c]
  40453e:	fistp  DWORD PTR [edi]
  404540:	retf   
  404541:	mov    esi,0x7b43c4f8
  404546:	in     eax,dx
  404547:	push   esi
  404548:	xor    ebp,DWORD PTR [ecx+0x7fbdb3e8]
  40454e:	test   BYTE PTR [edi-0x71ea9b78],al
  404554:	dec    esi
  404555:	aas    
  404556:	stc    
  404557:	sti    
  404558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404559:	add    al,0x73
  40455b:	sahf   
  40455c:	popf   
  40455d:	inc    ecx
  40455e:	sub    BYTE PTR [ecx-0xb],bl
  404561:	lahf   
  404562:	cwde   
  404563:	mov    BYTE PTR [ebp-0x52139abb],ch
  404569:	mov    ch,0x65
  40456b:	loop   0x404551
  40456d:	inc    BYTE PTR [ebx+0x5a2e26df]
  404573:	push   eax
  404574:	dec    eax
  404575:	outs   dx,BYTE PTR ds:[esi]
  404576:	cmp    DWORD PTR [edx-0x7f766139],0x25aa2b73
  404580:	push   esi
  404581:	call   FWORD PTR [ecx+esi*8+0x78]
  404585:	push   eax
  404586:	push   cs
  404587:	push   ss
  404588:	shl    BYTE PTR [edx],0xa
  40458b:	and    BYTE PTR [edx],bl
  40458d:	xor    BYTE PTR [edx+0x7],bl
  404590:	dec    esi
  404591:	jmp    0x9014:0x84310554
  404598:	fadd   st(0),st
  40459a:	adc    dl,0x62
  40459d:	cdq    
  40459e:	mov    ecx,0xd9689d2
  4045a3:	dec    edi
  4045a4:	in     al,0xc0
  4045a6:	jecxz  0x404593
  4045a8:	jecxz  0x404587
  4045aa:	addr16 hlt 
  4045ac:	and    edi,DWORD PTR [ecx-0x70570434]
  4045b2:	ds jg  0x4045b9
  4045b5:	adc    al,0xb9
  4045b7:	mov    ebx,0x668fab60
  4045bc:	xchg   DWORD PTR [esp+eiz*8],edx
  4045bf:	and    esp,DWORD PTR [edx-0xb]
  4045c2:	outs   dx,BYTE PTR ds:[esi]
  4045c3:	imul   eax,DWORD PTR [esi+eiz*8+0x63],0xf38769cb
  4045cb:	push   cs
  4045cc:	add    esi,DWORD PTR [ecx]
  4045ce:	push   es
  4045cf:	mov    esi,0xe8d61809
  4045d4:	lock ins DWORD PTR es:[edi],dx
  4045d6:	in     al,0xc
  4045d8:	loop   0x4045ca
  4045da:	stos   DWORD PTR es:[edi],eax
  4045db:	sub    al,0x2
  4045dd:	push   0x21c74290
  4045e2:	arpl   WORD PTR [esi-0x5e],si
  4045e5:	test   eax,0x3b3a89b8
  4045ea:	push   0xffffffcc
  4045ec:	push   0x4760e9ee
  4045f1:	mov    edx,0x71869b08
  4045f6:	sub    DWORD PTR ds:0xa01766,ebx
  4045fc:	pusha  
  4045fd:	hlt    
  4045fe:	sbb    BYTE PTR [esi],0x73
  404601:	imul   esp,DWORD PTR [eax+ebp*8],0x6a
  404605:	jnp    0x4045ec
  404607:	xor    al,0x8c
  404609:	imul   esp,DWORD PTR [edx+0x498ca8e5],0xa6dc0772
  404613:	fstp   QWORD PTR [ecx-0x7e]
  404616:	fnstenv [ecx+0x5c6e5ce8]
  40461c:	add    eax,0x2324cafd
  404621:	mov    edx,0xd9ff5b1d
  404626:	fmulp  st(1),st
  404628:	xor    ecx,DWORD PTR [edi+0x7e19d4d9]
  40462e:	mov    ch,0xda
  404630:	outs   dx,BYTE PTR ds:[esi]
  404631:	scas   al,BYTE PTR es:[edi]
  404632:	inc    edi
  404633:	xchg   ebp,eax
  404634:	jb     0x4045c0
  404636:	sub    DWORD PTR [ebp+0x2b],edi
  404639:	in     al,dx
  40463a:	or     dh,BYTE PTR [ecx+edi*1]
  40463d:	test   al,0xc3
  40463f:	pop    es
  404640:	mov    bh,0xa8
  404642:	dec    eax
  404643:	call   0x94c7:0x586a9dff
  40464a:	mov    ds:0xd935ed13,eax
  40464f:	jmp    0x1b26:0xc05c6f1d
  404656:	cli    
  404657:	js     0x40462b
  404659:	cmp    al,0x42
  40465b:	cmp    DWORD PTR [edi-0x7b],edx
  40465e:	retf   
  40465f:	in     eax,0x8f
  404661:	mov    eax,0x61ecd446
  404666:	or     eax,0x9058498a
  40466b:	pop    ebp
  40466c:	xchg   DWORD PTR [esi],edi
  40466e:	pop    esi
  40466f:	ins    BYTE PTR es:[edi],dx
  404670:	dec    ecx
  404671:	addr16 inc esp
  404673:	mov    ah,0x42
  404675:	jbe    0x4046ae
  404677:	sub    al,0x96
  404679:	xor    eax,0xd5d8bd81
  40467e:	jns    0x40462e
  404680:	pop    ss
  404681:	sbb    DWORD PTR [edx],ebx
  404683:	loop   0x4046b4
  404685:	push   ecx
  404686:	cld    
  404687:	test   BYTE PTR [ecx],cl
  404689:	in     al,0x9d
  40468b:	sti    
  40468c:	fisttp WORD PTR [esi]
  40468e:	scas   eax,DWORD PTR es:[edi]
  40468f:	hlt    
  404690:	sub    eax,0xe6148983
  404695:	out    dx,al
  404696:	and    dh,dl
  404698:	mul    edx
  40469a:	sbb    BYTE PTR [edi],0xc9
  40469d:	(bad)  
  40469e:	push   esi
  40469f:	retf   0x1464
  4046a2:	inc    esi
  4046a3:	je     0x404672
  4046a5:	mov    ebx,0xc6a7130c
  4046aa:	inc    edi
  4046ab:	fs pop esi
  4046ad:	mov    ch,0x7e
  4046af:	or     ebx,ecx
  4046b1:	jne    0x40465d
  4046b3:	(bad)  
  4046b5:	inc    ecx
  4046b6:	xchg   ecx,eax
  4046b7:	dec    ebp
  4046b8:	stc    
  4046b9:	or     eax,0xac3883a4
  4046be:	outs   dx,BYTE PTR ds:[esi]
  4046bf:	jae    0x404657
  4046c1:	pop    esi
  4046c2:	enter  0xa947,0xd9
  4046c6:	arpl   WORD PTR [ebp+ebp*2-0x27bfdedc],dx
  4046cd:	jns    0x40467a
  4046cf:	pop    es
  4046d0:	ret    0xc49b
  4046d3:	lods   eax,DWORD PTR ds:[esi]
  4046d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046d5:	cmp    cl,BYTE PTR [ecx+0x136b607e]
  4046db:	fdivr  QWORD PTR [edx]
  4046dd:	fnstsw WORD PTR [ebp+esi*1+0x205bbb8e]
  4046e4:	pop    es
  4046e5:	sbb    eax,0xe012f54a
  4046ea:	sub    al,0xd6
  4046ec:	sub    BYTE PTR ds:0xa2822d6f,bl
  4046f2:	fcomp  st(7)
  4046f4:	dec    ecx
  4046f5:	jb     0x4046ed
  4046f7:	mov    eax,0x6df3a0c9
  4046fc:	nop
  4046fd:	cdq    
  4046fe:	xchg   DWORD PTR [esi-0x550065fd],esi
  404704:	(bad)  
  404705:	and    DWORD PTR [edx+edi*8],ebp
  404708:	loopne 0x4046ff
  40470a:	test   DWORD PTR [ebx],0x913651fb
  404710:	pusha  
  404711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404712:	rol    DWORD PTR [esi],cl
  404714:	mov    bl,0xf5
  404716:	sub    al,0x67
  404718:	adc    BYTE PTR [eax-0x5387442c],bl
  40471e:	outs   dx,DWORD PTR ds:[esi]
  40471f:	test   BYTE PTR [esi-0x56bc4ed2],bl
  404725:	push   ebp
  404726:	addr16 mov esp,0x3ff4256a
  40472c:	and    DWORD PTR [esi+edi*1],edi
  40472f:	push   esi
  404730:	and    BYTE PTR [edx+ecx*1],dh
  404733:	add    eax,0x6743e5ba
  404738:	sub    DWORD PTR [edx+0x5f],0x8a015489
  40473f:	push   ebp
  404740:	int    0x50
  404742:	adc    al,0xf6
  404744:	xchg   edx,eax
  404745:	or     al,BYTE PTR [edx+0x6b637065]
  40474b:	(bad)  
  40474c:	shl    BYTE PTR [eax-0x6c8525f4],0xc4
  404753:	cmp    DWORD PTR [ecx+ebp*2-0x1b],0x7b9f124e
  40475b:	int    0xf
  40475d:	cmp    al,0x61
  40475f:	loope  0x404754
  404761:	dec    esi
  404762:	loope  0x404702
  404764:	push   0x79
  404766:	mov    al,0x3f
  404768:	xchg   BYTE PTR [ebx+0x4da237b1],al
  40476e:	jge    0x404748
  404770:	out    0x87,eax
  404772:	sbb    bl,BYTE PTR [esi+0x84cee86]
  404778:	add    bl,BYTE PTR [eax+edi*2+0x2b]
  40477c:	push   ecx
  40477d:	jno    0x40476c
  40477f:	test   DWORD PTR [edx],0xb3a10201
  404785:	jmp    0xac3724a6
  40478a:	cmp    ecx,ebp
  40478c:	xor    eax,0xa1679aed
  404791:	jb     0x404777
  404793:	loopne 0x4047b5
  404795:	loope  0x4047cb
  404797:	sub    al,0xb0
  404799:	push   0x78ccffa4
  40479e:	pushf  
  40479f:	jne    0x404804
  4047a1:	stc    
  4047a2:	dec    esp
  4047a3:	call   0x1a94a44
  4047a8:	inc    ebp
  4047a9:	mov    ebp,0xa576890
  4047ae:	retf   
  4047af:	call   0x43a8:0x6c64687
  4047b6:	cmp    dl,bh
  4047b8:	test   cl,dl
  4047ba:	hlt    
  4047bb:	mov    al,0x82
  4047bd:	jmp    0x404757
  4047bf:	pop    esp
  4047c0:	xor    DWORD PTR [ebx-0x385063a9],ebx
  4047c6:	rol    BYTE PTR [eax+0xfd6307c],1
  4047cc:	inc    ebx
  4047cd:	mov    bl,0x6e
  4047cf:	mov    esi,0x791f0ec9
  4047d4:	pop    edx
  4047d5:	out    dx,al
  4047d6:	aad    0x37
  4047d8:	cld    
  4047d9:	mov    ah,0x9e
  4047db:	sbb    edx,esi
  4047dd:	dec    ebp
  4047de:	fbstp  TBYTE PTR [ecx+0x52c020f0]
  4047e4:	xor    BYTE PTR [ebx+0x75c1ba4],cl
  4047ea:	push   ds
  4047eb:	test   DWORD PTR [eax-0x48344493],ecx
  4047f1:	add    esp,esi
  4047f3:	cmp    al,0x19
  4047f5:	lds    ebx,FWORD PTR [ecx-0x36]
  4047f8:	push   esi
  4047f9:	ss mov ecx,0x7e552a60
  4047ff:	sbb    eax,0xd6a336dd
  404804:	(bad)  
  404805:	int3   
  404806:	dec    edi
  404807:	(bad)  
  404808:	dec    edi
  404809:	inc    ebx
  40480a:	mov    ah,0x5a
  40480c:	mov    edi,0x391a3a9
  404811:	mov    al,ds:0x63c834fd
  404816:	pop    edi
  404817:	cmp    DWORD PTR [ecx+0x2c],ebp
  40481a:	push   eax
  40481b:	adc    eax,DWORD PTR [edi-0x71]
  40481e:	clc    
  40481f:	xchg   edi,eax
  404820:	hlt    
  404821:	jp     0x4047b5
  404823:	pop    ss
  404824:	push   es
  404825:	and    BYTE PTR ds:0x5ef3d39d,dh
  40482b:	stc    
  40482c:	mov    bl,0x6d
  40482e:	mov    ebx,0x5e93fb4d
  404833:	cli    
  404834:	(bad)  
  404835:	adc    BYTE PTR [esi+0x50],ah
  404838:	or     DWORD PTR [eax+0x71853e5b],ebx
  40483e:	out    dx,eax
  40483f:	jne    0x404865
  404841:	jle    0x4047d3
  404843:	idiv   cl
  404845:	int3   
  404846:	jle    0x404873
  404848:	fidivr DWORD PTR [eax+0x34]
  40484b:	loope  0x404806
  40484d:	dec    eax
  40484e:	lahf   
  40484f:	mul    DWORD PTR [edi+edx*2+0x50d53760]
  404856:	dec    eax
  404857:	cmp    BYTE PTR [ebx-0x5505d133],al
  40485d:	and    eax,0xc8833f23
  404862:	shl    BYTE PTR [ebx-0x47],0xae
  404866:	and    DWORD PTR [esi],ebx
  404868:	xchg   ebx,eax
  404869:	sub    eax,0x8c032f77
  40486e:	dec    esp
  40486f:	pop    es
  404870:	enter  0x8a63,0x55
  404874:	aad    0x2c
  404876:	dec    esp
  404877:	cmp    DWORD PTR [ebx-0x26],edi
  40487a:	xor    BYTE PTR [esi-0x28],ch
  40487d:	pushf  
  40487e:	fnstcw WORD PTR [ebp+0x7faa1a48]
  404884:	sbb    bh,BYTE PTR [edx]
  404886:	xchg   ebp,eax
  404887:	adc    DWORD PTR [edx+0x13],edx
  40488a:	mov    ch,0xd7
  40488c:	outs   dx,BYTE PTR ds:[esi]
  40488d:	sbb    bl,BYTE PTR [eax+0x35]
  404890:	repz fs jecxz 0x404881
  404894:	push   es
  404895:	hlt    
  404896:	xchg   ebx,eax
  404897:	sahf   
  404898:	in     al,dx
  404899:	cmp    al,0xa0
  40489b:	push   ebx
  40489c:	mov    BYTE PTR [ebx+0x10],dl
  40489f:	pop    esp
  4048a0:	std    
  4048a1:	out    dx,eax
  4048a2:	out    dx,eax
  4048a3:	into   
  4048a4:	push   esp
  4048a5:	xor    dh,BYTE PTR [edi+edx*8+0x7f]
  4048a9:	dec    eax
  4048aa:	je     0x404830
  4048ac:	add    DWORD PTR [esi+0x491e787a],0xc664b038
  4048b6:	sahf   
  4048b7:	xchg   esp,eax
  4048b8:	out    dx,al
  4048b9:	mov    ds,WORD PTR [eax-0x52]
  4048bc:	xor    esp,DWORD PTR [ebp-0x24]
  4048bf:	inc    ebx
  4048c0:	lock out dx,eax
  4048c2:	pop    esp
  4048c3:	pop    esi
  4048c4:	sahf   
  4048c5:	pushf  
  4048c6:	jo     0x4048c9
  4048c8:	or     al,0x7b
  4048ca:	out    dx,eax
  4048cb:	in     eax,dx
  4048cc:	push   cs
  4048cd:	cwde   
  4048ce:	mov    esi,0x558d72f5
  4048d3:	fimul  DWORD PTR [eax-0x49]
  4048d6:	xchg   esi,eax
  4048d7:	or     eax,0xce7a6b5c
  4048dc:	jl     0x404891
  4048de:	add    bh,dl
  4048e0:	mov    ch,0x36
  4048e2:	shr    esi,0xb1
  4048e5:	mov    ah,0x94
  4048e7:	shr    DWORD PTR [ecx+0x6f],1
  4048ea:	icebp  
  4048eb:	push   es
  4048ec:	fdivr  DWORD PTR [ebx+esi*1]
  4048ef:	nop
  4048f0:	xchg   esi,eax
  4048f1:	cmp    eax,0x4db5e377
  4048f6:	mov    bh,0xac
  4048f8:	push   ebp
  4048f9:	ds sahf 
  4048fb:	cs push ebx
  4048fd:	and    eax,0xd162510a
  404902:	cmp    DWORD PTR [edx-0x44],edx
  404905:	mov    ds:0xdec59360,eax
  40490a:	ret    0xf90d
  40490d:	and    al,dh
  40490f:	test   eax,0x5f3447f9
  404914:	popf   
  404915:	shr    edi,1
  404917:	inc    ebx
  404918:	cmp    al,0x54
  40491a:	jae    0x4048b6
  40491c:	rcr    DWORD PTR [ebp-0x53],cl
  40491f:	jbe    0x4048d7
  404921:	pop    ecx
  404922:	jo     0x40492c
  404924:	shr    esp,0xee
  404927:	pop    edi
  404928:	mov    ds:0x488608df,eax
  40492d:	mov    edi,0x68757b0e
  404932:	(bad)  
  404934:	push   ebx
  404935:	cmc    
  404936:	cdq    
  404937:	jo     0x404947
  404939:	add    ebp,DWORD PTR [edx]
  40493b:	dec    esp
  40493c:	ss stos DWORD PTR es:[edi],eax
  40493e:	das    
  40493f:	inc    edi
  404940:	inc    ebx
  404941:	push   esp
  404942:	cs (bad) 
  404944:	shl    ecx,cl
  404946:	(bad)  
  404947:	mov    eax,0x167b1191
  40494c:	push   es
  40494d:	xchg   esp,eax
  40494e:	fsubrp st(7),st
  404950:	push   0xd5e2cee7
  404955:	jge    0x404910
  404957:	adc    eax,0xcc4cf06b
  40495c:	push   edx
  40495d:	icebp  
  40495e:	xchg   edi,eax
  40495f:	adc    cl,0xa0
  404962:	repnz push ds
  404964:	cld    
  404965:	push   cs
  404966:	ret    0x853
  404969:	mov    bl,0xf7
  40496b:	retf   0xecd
  40496e:	sub    cl,BYTE PTR [edi-0xb7cd31c]
  404974:	sub    DWORD PTR [ebx+0x7f],ebp
  404977:	inc    ebx
  404978:	shl    DWORD PTR [eax+0x10],0x9d
  40497c:	jno    0x404973
  40497e:	shl    eax,cl
  404980:	mov    DWORD PTR [ebx],eax
  404982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404983:	xchg   esp,eax
  404984:	add    eax,0x2bccdaf4
  404989:	fstp   DWORD PTR [edi-0x3]
  40498c:	cmp    bl,BYTE PTR [edi]
  40498e:	mov    ds:0x8a720ae8,al
  404993:	mov    edi,0xc596330
  404998:	(bad)  
  404999:	push   edi
  40499a:	data16 jo 0x404977
  40499d:	push   ebx
  40499e:	fnstenv [esp+eiz*2]
  4049a1:	cli    
  4049a2:	sbb    ebp,DWORD PTR [edx+edx*4+0x5bd29cf5]
  4049a9:	jns    0x40495b
  4049ab:	jg     0x4049ea
  4049ad:	push   cs
  4049ae:	sti    
  4049af:	jecxz  0x4049f4
  4049b1:	sbb    DWORD PTR [ebp-0x574fb3e9],ebx
  4049b7:	xchg   edi,eax
  4049b8:	push   ds
  4049b9:	jae    0x404a09
  4049bb:	test   edx,eax
  4049bd:	dec    ebx
  4049be:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049c0:	jb     0x404a17
  4049c2:	aaa    
  4049c3:	jns    0x404a11
  4049c5:	pop    es
  4049c6:	jl     0x40495b
  4049c8:	lods   al,BYTE PTR ds:[esi]
  4049c9:	nop    esi
  4049cc:	pop    edx
  4049cd:	mov    al,ds:0xf44c5502
  4049d2:	xor    al,0x31
  4049d4:	xor    eax,0x16c5cf40
  4049d9:	rcr    DWORD PTR [edx+edx*4],cl
  4049dc:	(bad)  
  4049dd:	call   0x19cadb4c
  4049e2:	or     DWORD PTR [ecx],0x252f2e3e
  4049e8:	ins    BYTE PTR es:[edi],dx
  4049e9:	mov    DWORD PTR [edx],edx
  4049eb:	and    eax,0x9a963fba
  4049f0:	pop    ecx
  4049f1:	imul   bl
  4049f3:	test   eax,0x36ed59b
  4049f8:	out    0x43,eax
  4049fa:	mov    eax,0xe51943b5
  4049ff:	hlt    
  404a00:	fadd   DWORD PTR [ecx+0x3ec0d5d6]
  404a06:	mov    DWORD PTR [edx-0x5d2cf769],ebp
  404a0c:	adc    al,0x30
  404a0e:	mov    cl,0x9
  404a10:	jmp    0xc8a54250
  404a15:	cmp    ax,0x4f85
  404a19:	pop    es
  404a1a:	sub    esi,DWORD PTR [ebx+0x5c599183]
  404a20:	push   0xcf389118
  404a25:	or     eax,0x95418e37
  404a2a:	popf   
  404a2b:	lods   al,BYTE PTR ds:[esi]
  404a2c:	retf   
  404a2d:	inc    esp
  404a2e:	(bad)  
  404a2f:	hlt    
  404a30:	dec    esp
  404a31:	test   ebx,ecx
  404a33:	mov    esi,edi
  404a35:	fistp  WORD PTR [edx-0x32d34078]
  404a3b:	cmp    BYTE PTR [edi+0x62],ah
  404a3e:	dec    ecx
  404a3f:	xor    bl,al
  404a41:	mov    bl,0x6c
  404a43:	xchg   edx,eax
  404a44:	in     al,0x27
  404a46:	ror    al,0x11
  404a49:	cmc    
  404a4a:	cmp    cl,BYTE PTR [ebx-0x7ba3e035]
  404a50:	sub    ecx,0xffffffc0
  404a53:	jp     0x404a96
  404a55:	fsubp  st(6),st
  404a57:	iret   
  404a58:	mov    eax,0xc356d1a8
  404a5d:	aam    0x54
  404a5f:	mov    esp,0x34b7a83
  404a64:	ds inc eax
  404a66:	push   0x7a905c91
  404a6b:	pop    ss
  404a6c:	popa   
  404a6d:	xchg   edx,eax
  404a6e:	scas   al,BYTE PTR es:[edi]
  404a6f:	loope  0x404a97
  404a71:	mov    bl,0x77
  404a73:	out    0xc,al
  404a75:	or     DWORD PTR [edi-0x780b0744],ecx
  404a7b:	(bad)  
  404a7c:	mov    ds:0xfb59d7c,eax
  404a81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a82:	std    
  404a83:	adc    al,dh
  404a85:	inc    esi
  404a86:	push   cs
  404a87:	mov    ecx,0x4b77fd0b
  404a8c:	sahf   
  404a8d:	sahf   
  404a8e:	pop    eax
  404a8f:	das    
  404a90:	jmp    0x404a2f
  404a92:	or     eax,0x122947ee
  404a97:	mov    eax,ds:0xa2244d39
  404a9c:	or     al,BYTE PTR [edi]
  404a9e:	std    
  404a9f:	pop    eax
  404aa0:	arpl   WORD PTR [edx],bx
  404aa2:	mov    ebp,0x228ac271
  404aa7:	add    BYTE PTR [edi-0x5d],0x93
  404aab:	out    0xad,eax
  404aad:	test   BYTE PTR [edi-0x4f],al
  404ab0:	cwde   
  404ab1:	inc    edx
  404ab2:	mov    ebx,0x92c8f335
  404ab7:	mov    ah,0x7f
  404ab9:	push   edi
  404aba:	mov    ebx,0xe4efa7d8
  404abf:	retf   
  404ac0:	cs imul edx,ecx,0xffffffa2
  404ac4:	cmp    ch,al
  404ac6:	inc    edi
  404ac7:	sub    al,0x2
  404ac9:	(bad)  
  404aca:	int3   
  404acb:	ja     0x404a8a
  404acd:	sbb    DWORD PTR [ecx-0x46c5006a],ebp
  404ad3:	repz sub BYTE PTR [ebx+0x4a],ah
  404ad7:	push   edx
  404ad8:	xchg   edi,eax
  404ad9:	push   edx
  404ada:	inc    ebx
  404adb:	outs   dx,DWORD PTR ds:[esi]
  404adc:	mov    ds:0x8ba636ad,al
  404ae1:	mov    ah,0x3e
  404ae3:	jnp    0x404a7b
  404ae5:	cmp    DWORD PTR [edi],ebp
  404ae7:	mov    bh,0xa7
  404ae9:	in     al,dx
  404aea:	lds    ebx,FWORD PTR [edi+0x60]
  404aed:	mov    WORD PTR fs:[esp+eiz*2],?
  404af1:	pop    esp
  404af2:	mov    ch,0x87
  404af4:	fiadd  DWORD PTR [eax+0x25cb90ad]
  404afa:	icebp  
  404afb:	in     al,dx
  404afc:	xor    al,0x29
  404afe:	leave  
  404aff:	stc    
  404b00:	sbb    BYTE PTR [edi],al
  404b02:	xor    DWORD PTR [edx],edx
  404b04:	sbb    ebx,DWORD PTR [eax-0x20d8860a]
  404b0a:	or     DWORD PTR [edi+edx*8],edi
  404b0d:	mov    esi,0x4036e413
  404b12:	mov    ebx,0x9a35e699
  404b17:	ins    BYTE PTR es:[edi],dx
  404b18:	js     0x404b86
  404b1a:	mov    edi,0xa1ca4906
  404b1f:	pusha  
  404b20:	sti    
  404b21:	or     DWORD PTR [esi],ebp
  404b23:	inc    esi
  404b24:	mov    ds:0xe11eb2a3,eax
  404b29:	add    edi,DWORD PTR [ebx+0x272f0441]
  404b2f:	call   0xfa7e2db6
  404b34:	jne    0x404acc
  404b36:	dec    edi
  404b37:	rcr    DWORD PTR [ebx],cl
  404b39:	lods   eax,DWORD PTR ds:[esi]
  404b3a:	mov    al,ds:0x5066c1f8
  404b3f:	ds mov edi,0x97de0fae
  404b45:	xor    ah,bh
  404b47:	adc    al,0xf2
  404b49:	xor    ebx,esp
  404b4b:	push   edi
  404b4c:	xor    edi,edx
  404b4e:	jns    0x404b69
  404b50:	jne    0x404ba7
  404b52:	mov    DWORD PTR [edx+0x7c],ecx
  404b55:	rcl    ch,cl
  404b57:	and    BYTE PTR [edi],ah
  404b59:	in     eax,0xa
  404b5b:	add    DWORD PTR [edx-0xf],esi
  404b5e:	jo     0x404b37
  404b60:	mov    al,BYTE PTR [ebx+0x32]
  404b63:	jnp    0x404af8
  404b65:	lods   eax,DWORD PTR ds:[esi]
  404b66:	aam    0xa0
  404b68:	or     DWORD PTR [eax],esi
  404b6a:	mov    dl,0x5c
  404b6c:	jbe    0x404b86
  404b6e:	add    ch,BYTE PTR fs:[edx]
  404b71:	push   ss
  404b72:	and    eax,DWORD PTR [ebp+0x7f13dd2d]
  404b78:	mov    es,WORD PTR [eax]
  404b7a:	iret   
  404b7b:	adc    al,0xa3
  404b7d:	inc    edx
  404b7f:	rol    DWORD PTR [eax],1
  404b81:	into   
  404b82:	rol    DWORD PTR [edi-0x5b8accf2],cl
  404b88:	sbb    BYTE PTR [edx],al
  404b8a:	les    ecx,FWORD PTR [ecx+ecx*4]
  404b8d:	leave  
  404b8e:	retf   
  404b8f:	or     DWORD PTR [eax-0x607d22ae],esp
  404b95:	sahf   
  404b96:	mov    ds:0x56b80601,eax
  404b9b:	loop   0x404b46
  404b9d:	(bad)  
  404b9e:	pushf  
  404b9f:	inc    edx
  404ba0:	inc    BYTE PTR [ecx-0x1b4539b6]
  404ba6:	call   0x8f47:0x52d108ad
  404bad:	ds icebp 
  404baf:	sub    al,0x60
  404bb1:	clc    
  404bb2:	(bad)  
  404bb3:	in     eax,0x2
  404bb5:	stc    
  404bb6:	aas    
  404bb7:	push   ebp
  404bb8:	mov    edi,0xc5e25e7e
  404bbd:	fimul  DWORD PTR [esi]
  404bbf:	xchg   ecx,eax
  404bc0:	cmp    DWORD PTR [ebx-0x40b49af],0xb49aa642
  404bca:	lahf   
  404bcb:	into   
  404bcc:	outs   dx,BYTE PTR ds:[esi]
  404bcd:	aas    
  404bce:	mov    dh,0xfa
  404bd0:	pop    eax
  404bd1:	lods   al,BYTE PTR ds:[esi]
  404bd2:	mov    es,WORD PTR [esi-0x1fbdca0b]
  404bd8:	jge    0x404b8f
  404bda:	ja     0x404ba8
  404bdc:	dec    eax
  404bdd:	xchg   ecx,eax
  404bde:	imul   esp,DWORD PTR [edx+0x739befcb],0x62
  404be5:	dec    ebx
  404be6:	ds xchg esp,eax
  404be8:	push   es
  404be9:	in     eax,0xa
  404beb:	rcr    DWORD PTR [esi+0x10],1
  404bee:	dec    esi
  404bef:	dec    eax
  404bf0:	das    
  404bf1:	jmp    0x153e2824
  404bf6:	adc    eax,0x463b60eb
  404bfb:	cmp    BYTE PTR [edi+0x51],bl
  404bfe:	sub    al,0x9
  404c00:	popf   
  404c01:	sub    ch,BYTE PTR [edi]
  404c03:	call   0x13d8e97f
  404c08:	scas   eax,DWORD PTR es:[edi]
  404c09:	sub    edx,DWORD PTR [edx-0x167a8fa4]
  404c0f:	xor    ch,BYTE PTR [ebp+0x22]
  404c12:	std    
  404c13:	pop    edx
  404c14:	mov    al,0x60
  404c16:	fs addr16 inc ebx
  404c19:	clc    
  404c1a:	and    ch,0xa9
  404c1d:	push   ss
  404c1e:	adc    eax,edi
  404c20:	bound  ebx,QWORD PTR [esi+0x14]
  404c23:	es lahf 
  404c25:	or     ebp,DWORD PTR [ecx+0x18f53408]
  404c2b:	pushf  
  404c2c:	cld    
  404c2d:	(bad)  
  404c2e:	out    0xe2,al
  404c30:	push   esp
  404c31:	push   ebp
  404c32:	inc    ebp
  404c33:	mov    dh,0x77
  404c35:	mov    ecx,0xb76a0be3
  404c3a:	jns    0x404c67
  404c3c:	ret    
  404c3d:	je     0x404c51
  404c3f:	div    BYTE PTR [edi]
  404c41:	inc    esi
  404c42:	push   edx
  404c43:	and    cl,bl
  404c45:	data16 add al,BYTE PTR [edi]
  404c48:	push   ebx
  404c49:	inc    esi
  404c4a:	cs push 0x85b6b989
  404c50:	fistp  WORD PTR [edx-0x65]
  404c53:	xchg   ebp,eax
  404c54:	mov    dl,0xfd
  404c56:	repz sbb al,0x32
  404c59:	sub    DWORD PTR [edx-0x5495c2a1],ebp
  404c5f:	jp     0x404c02
  404c61:	hlt    
  404c62:	inc    edx
  404c63:	enter  0x4168,0xf8
  404c67:	cs repnz add al,0xe2
  404c6b:	sbb    dh,BYTE PTR [ebp+0x4c]
  404c6e:	cs aaa 
  404c70:	call   0xd9fd:0xaa589925
  404c77:	push   edi
  404c78:	xchg   DWORD PTR [eax],eax
  404c7a:	cli    
  404c7b:	es lahf 
  404c7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c7e:	add    eax,0x9cbfba6d
  404c83:	imul   esi,DWORD PTR ds:0xf71d62e6,0x3f
  404c8a:	ja     0x404c24
  404c8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c8e:	mov    ch,0x2b
  404c90:	and    eax,0x3fe37e1c
  404c95:	inc    edi
  404c96:	jo     0x404cd8
  404c98:	rcl    BYTE PTR [edi+0x785316c1],1
  404c9e:	cmc    
  404c9f:	xchg   ebp,eax
  404ca0:	add    DWORD PTR [esi],esi
  404ca2:	in     al,0x47
  404ca4:	jp     0x404cc1
  404ca6:	pop    esp
  404ca7:	sub    bh,cl
  404ca9:	ds pop edi
  404cab:	outs   dx,DWORD PTR ds:[esi]
  404cac:	mov    ah,0xd1
  404cae:	icebp  
  404caf:	into   
  404cb0:	sbb    esp,esi
  404cb2:	pop    esi
  404cb3:	imul   esi,DWORD PTR [ecx+0x38],0xd8a49a85
  404cba:	jne    0x404c63
  404cbc:	xlat   BYTE PTR ds:[ebx]
  404cbd:	daa    
  404cbe:	iret   
  404cbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cc0:	cld    
  404cc1:	push   esi
  404cc2:	outs   dx,BYTE PTR ds:[esi]
  404cc3:	cdq    
  404cc4:	xchg   esp,eax
  404cc5:	jns    0x404d40
  404cc7:	mov    DWORD PTR [eax],esp
  404cc9:	mov    edi,0x2d907ccd
  404cce:	js     0x404c76
  404cd0:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  404cd2:	test   esp,edx
  404cd4:	adc    BYTE PTR cs:[edi-0x4f7231f7],0x40
  404cdc:	(bad)  
  404cdd:	aad    0x44
  404cdf:	cs in  al,dx
  404ce1:	stos   BYTE PTR es:[edi],al
  404ce2:	jns    0x404c9c
  404ce4:	mov    ah,0x12
  404ce6:	stos   DWORD PTR es:[edi],eax
  404ce7:	xor    BYTE PTR [eax-0x57bfa6ed],ch
  404ced:	jl     0x404d40
  404cef:	add    cl,BYTE PTR [esp+ebp*2]
  404cf2:	jns    0x404cfd
  404cf4:	xor    eax,0x7f76c25a
  404cf9:	(bad)  
  404cfa:	sti    
  404cfb:	int3   
  404cfc:	jge    0x404cbf
  404cfe:	cld    
  404cff:	vmptrst QWORD PTR [edi]
  404d02:	cli    
  404d03:	xor    BYTE PTR [ecx-0x32],cl
  404d06:	int3   
  404d07:	mov    bh,0xbd
  404d09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d0a:	(bad)  
  404d0b:	jg     0x404ce9
  404d0d:	fwait
  404d0e:	aam    0xd2
  404d10:	fstp   QWORD PTR [ebx-0xd]
  404d13:	icebp  
  404d14:	mov    edi,0x8a01897e
  404d19:	lea    edx,[ebx+0x67]
  404d1c:	enter  0xba50,0x42
  404d20:	cmp    esi,DWORD PTR [eax]
  404d22:	bnd cs jo 0x404d6a
  404d26:	aas    
  404d27:	and    BYTE PTR cs:[edi-0x5a7c64ba],cl
  404d2e:	adc    DWORD PTR [esi],ebx
  404d30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d31:	xchg   edx,eax
  404d32:	or     ebp,DWORD PTR [edi]
  404d34:	js     0x404d06
  404d36:	jno    0x404cee
  404d38:	sub    edx,eax
  404d3a:	add    esi,DWORD PTR [edx+0x65]
  404d3d:	mov    gs,WORD PTR ds:0x359847d1
  404d43:	lea    ebp,[ebx]
  404d45:	jmp    0x404cfc
  404d47:	or     eax,0xfd4deb7c
  404d4c:	push   ebx
  404d4d:	xchg   ebx,eax
  404d4e:	ins    BYTE PTR es:[edi],dx
  404d4f:	jmp    0x404dae
  404d51:	mov    fs,eax
  404d53:	ror    BYTE PTR [edi],1
  404d55:	inc    ebp
  404d56:	or     ch,BYTE PTR [ecx+0x2101363a]
  404d5c:	mov    dh,0x1a
  404d5e:	ss push cs
  404d60:	jb     0x404d70
  404d62:	dec    edx
  404d63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d64:	popf   
  404d65:	in     al,0xb8
  404d67:	mov    ebx,0x79c31cce
  404d6c:	sahf   
  404d6d:	xchg   edi,eax
  404d6e:	mov    ch,0x2f
  404d70:	inc    eax
  404d71:	mov    edx,0xee9b296a
  404d76:	scas   al,BYTE PTR es:[edi]
  404d77:	and    DWORD PTR [eax+0x8],esp
  404d7a:	push   0x9
  404d7c:	push   ss
  404d7d:	adc    dh,BYTE PTR [ebp+0x6a0d468d]
  404d83:	or     BYTE PTR es:[edx],ch
  404d86:	dec    esp
  404d87:	inc    ecx
  404d88:	jecxz  0x404daf
  404d8a:	scas   al,BYTE PTR es:[edi]
  404d8b:	(bad)  
  404d8c:	mov    ds:0x3e23fb9b,eax
  404d91:	aam    0x33
  404d93:	mov    bl,0x15
  404d95:	mov    dh,0x5c
  404d97:	fld    QWORD PTR [edx+0x30ae51c8]
  404d9d:	gs dec esp
  404d9f:	dec    ecx
  404da0:	mov    ch,0x50
  404da2:	xchg   ecx,eax
  404da3:	jp     0x404dff
  404da5:	xlat   BYTE PTR ds:[ebx]
  404da6:	push   edi
  404da7:	fwait
  404da8:	add    ah,BYTE PTR [edi-0x28]
  404dab:	mov    edx,DWORD PTR [esi-0x5880a80d]
  404db1:	je     0x404de8
  404db3:	cmp    ah,BYTE PTR [ebp+0x4c4c7034]
  404db9:	jmp    0x5a7a:0x79a51b5b
  404dc0:	cmp    edi,DWORD PTR [eax+0x21]
  404dc3:	and    BYTE PTR [ebx+esi*8+0x45],bh
  404dc7:	(bad)  
  404dc8:	pop    edi
  404dc9:	aad    0x77
  404dcb:	imul   ebp,DWORD PTR [esi+0x5c],0x0
  404dcf:	nop
  404dd0:	cmp    edx,ebp
  404dd2:	(bad)  
  404dd3:	(bad)  
  404dd4:	cmp    dl,BYTE PTR ds:0xa9144838
  404dda:	cli    
  404ddb:	xchg   ebx,eax
  404ddc:	lahf   
  404ddd:	ror    BYTE PTR [esi+ecx*1+0x6f],cl
  404de1:	jle    0x404d76
  404de3:	jg     0x404e64
  404de5:	mov    di,0xc208
  404de9:	mov    eax,0x397b2fec
  404dee:	and    al,0x1c
  404df0:	call   0x1cca:0xdc1e4247
  404df7:	pop    edi
  404df8:	push   esi
  404df9:	fwait
  404dfa:	rol    BYTE PTR [esi-0x70],1
  404dfd:	pop    ds
  404dfe:	push   esi
  404dff:	xlat   BYTE PTR ds:[ebx]
  404e00:	add    al,0xb0
  404e02:	wbinvd 
  404e04:	(bad)  
  404e05:	fsub   DWORD PTR [edi+0x3a76374]
  404e0b:	mov    ebp,0xd248af0c
  404e10:	scas   eax,DWORD PTR es:[edi]
  404e11:	xchg   edi,eax
  404e12:	xlat   BYTE PTR ds:[ebx]
  404e13:	or     DWORD PTR gs:[ebx+eax*2+0x70],ebx
  404e18:	repnz pop ecx
  404e1a:	push   edx
  404e1b:	mov    ecx,0x42a06c39
  404e20:	scas   al,BYTE PTR es:[edi]
  404e21:	fcomi  st,st(6)
  404e23:	inc    edx
  404e24:	inc    eax
  404e25:	jecxz  0x404e93
  404e27:	mov    BYTE PTR es:[esi+ebx*1],al
  404e2b:	and    bh,BYTE PTR [ecx]
  404e2d:	test   BYTE PTR [edx],dh
  404e2f:	gs dec esp
  404e31:	push   edx
  404e32:	into   
  404e33:	clc    
  404e34:	out    dx,eax
  404e35:	adc    ch,BYTE PTR fs:0x87b3c9ac
  404e3c:	ins    BYTE PTR es:[edi],dx
  404e3d:	adc    BYTE PTR ds:[edi+0x238405c8],bl
  404e44:	add    eax,0x3187a52e
  404e49:	into   
  404e4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e4b:	aaa    
  404e4c:	test   al,0x36
  404e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e4f:	out    0x34,al
  404e51:	(bad)  
  404e52:	dec    ebx
  404e53:	cdq    
  404e54:	bound  ebp,QWORD PTR [ecx+eiz*2]
  404e57:	xchg   esi,eax
  404e58:	mov    al,ds:0x656426fe
  404e5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e5e:	ds dec esi
  404e60:	iret   
  404e61:	sbb    DWORD PTR [esi+0xe113356],ebp
  404e67:	out    0x63,eax
  404e69:	pusha  
  404e6a:	fwait
  404e6b:	call   0x4a3e:0x16a81829
  404e72:	aas    
  404e73:	mov    al,0x9f
  404e75:	xor    ecx,DWORD PTR [eax+0x1a41cffa]
  404e7b:	xchg   edi,eax
  404e7c:	cwde   
  404e7d:	in     eax,0x35
  404e7f:	dec    esp
  404e80:	fnstenv ds:0x448e44a7
  404e86:	jmp    0x404e37
  404e88:	shr    BYTE PTR [edx-0x6272c7cd],cl
  404e8e:	sahf   
  404e8f:	or     esp,DWORD PTR [edx+0x31248182]
  404e95:	lds    edx,FWORD PTR [edx-0x164165e4]
  404e9b:	xor    al,0x7b
  404e9d:	ss and edx,eax
  404ea0:	nop
  404ea1:	cld    
  404ea2:	mul    DWORD PTR [ebp+0x5717976a]
  404ea8:	inc    esp
  404ea9:	mov    esp,0x2b7851b1
  404eae:	popa   
  404eaf:	xor    ecx,DWORD PTR ds:0xbcea111c
  404eb5:	fiadd  DWORD PTR [eax]
  404eb7:	fstp   TBYTE PTR ds:0x6ba79df6
  404ebd:	stc    
  404ebe:	and    BYTE PTR [ebx+0x9a8881d],dl
  404ec4:	test   eax,0xd0917032
  404ec9:	pop    ss
  404eca:	sub    al,0xdd
  404ecc:	mov    ebx,0x4891995e
  404ed1:	movlps QWORD PTR [edx+esi*2+0x6f],xmm4
  404ed6:	jp     0x404eb9
  404ed8:	push   ds
  404ed9:	fs pusha 
  404edb:	or     BYTE PTR [esi],0xc
  404ede:	call   0xee6e65d4
  404ee3:	inc    esi
  404ee4:	push   0xf6a49db6
  404ee9:	mov    ch,0x80
  404eeb:	lahf   
  404eec:	sbb    al,0xf5
  404eee:	out    dx,al
  404eef:	mov    edi,DWORD PTR [eax-0x54adce1c]
  404ef5:	pop    edi
  404ef6:	mov    ebx,0x926837fc
  404efb:	ins    DWORD PTR es:[edi],dx
  404efc:	or     eax,0x965c3a99
  404f01:	mov    DWORD PTR [edx],ecx
  404f03:	and    BYTE PTR [ebx+0x4414f679],cl
  404f09:	or     al,0xd0
  404f0b:	test   BYTE PTR [edx+edx*8],cl
  404f0e:	sbb    BYTE PTR [edi-0x17],dh
  404f11:	push   esi
  404f12:	dec    ebp
  404f13:	push   ecx
  404f14:	jecxz  0x404eb2
  404f16:	xor    BYTE PTR [ebx],al
  404f18:	scas   al,BYTE PTR es:[edi]
  404f19:	call   0xc7e7bbfa
  404f1e:	sar    BYTE PTR [esi],1
  404f20:	call   DWORD PTR [eax-0x6a]
  404f23:	mov    ds:0x58485eaa,al
  404f28:	sbb    al,0x2b
  404f2a:	out    dx,al
  404f2b:	loopne 0x404f32
  404f2d:	mov    esp,0xe6241b98
  404f32:	mov    esp,0x3ddd4cbd
  404f37:	aaa    
  404f38:	xchg   edi,eax
  404f39:	jo     0x404fa2
  404f3b:	mov    eax,0xa9d31d91
  404f40:	ja     0x404efd
  404f42:	(bad)  
  404f43:	pop    ebx
  404f44:	jl     0x404f20
  404f46:	rcl    BYTE PTR [ebx-0x52f710ab],0xf
  404f4d:	enter  0x5bf5,0x1a
  404f51:	fwait
  404f52:	xchg   DWORD PTR [ecx+0x429ba3a8],esi
  404f58:	call   0x38ca:0x8a68aa25
  404f5f:	mov    BYTE PTR [eax-0x55],ch
  404f62:	jns    0x404f8e
  404f64:	lock push 0x94753123
  404f6a:	sub    BYTE PTR [edx-0x17],0x1b
  404f6e:	out    0x1d,al
  404f70:	jge    0x404fd7
  404f72:	mov    ebp,0xfeba010a
  404f77:	xor    BYTE PTR [ecx-0x3a],0xac
  404f7b:	xor    al,0x43
  404f7d:	adc    BYTE PTR [esi-0x42],bh
  404f80:	sub    esp,DWORD PTR [esi+0x672f65fc]
  404f86:	jmp    0x404fa6
  404f88:	fmul   DWORD PTR [ecx+0x21]
  404f8b:	lods   al,BYTE PTR ds:[esi]
  404f8c:	xor    ebp,DWORD PTR [eax-0x19]
  404f8f:	add    al,BYTE PTR [edx]
  404f91:	mov    edi,DWORD PTR [edi]
  404f93:	outs   dx,BYTE PTR ds:[esi]
  404f94:	pop    es
  404f95:	jbe    0x404f7d
  404f97:	into   
  404f98:	(bad)  ds:0x6c667277
  404f9e:	xor    cl,BYTE PTR [esi+0x52]
  404fa1:	sar    BYTE PTR [ebp+0x6f72202c],0x39
  404fa8:	call   0x88ce927d
  404fad:	rol    esi,1
  404faf:	lock test DWORD PTR [ecx-0x5a],esi
  404fb3:	dec    ebp
  404fb4:	(bad)  
  404fb5:	out    dx,eax
  404fb6:	and    eax,0x98ec118f
  404fbb:	fdiv   st(0),st
  404fbd:	dec    esp
  404fbe:	sbb    esi,esi
  404fc0:	xchg   BYTE PTR [edx-0x57],bl
  404fc3:	out    0xde,eax
  404fc5:	dec    esi
  404fc6:	mov    dl,0xf9
  404fc8:	xchg   esp,eax
  404fc9:	pop    esp
  404fca:	adc    BYTE PTR [edi+edi*8-0x6e],bh
  404fce:	mov    bl,0x62
  404fd0:	adc    edx,DWORD PTR [ebp-0x68e12e33]
  404fd6:	imul   ebp,DWORD PTR [ecx+0x70809472],0xffffffd3
  404fdd:	cmovb  ebx,ecx
  404fe0:	inc    esp
  404fe1:	cld    
  404fe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fe3:	sahf   
  404fe4:	js     0x405003
  404fe6:	inc    edi
  404fe7:	les    edx,FWORD PTR [edx+eiz*1]
  404fea:	rol    BYTE PTR [edx-0x12],cl
  404fed:	(bad)  
  404fef:	aam    0x67
  404ff1:	jge    0x404fd4
  404ff3:	mov    esp,0xa1b27a74
  404ff8:	dec    ebx
  404ff9:	shr    ah,1
  404ffb:	mov    ah,0x86
  404ffd:	sbb    DWORD PTR [eax],eax
  404fff:	jl     0x404fea
  405001:	jp     0x404f86
  405003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405004:	xor    al,ch
  405006:	xchg   ecx,eax
  405007:	lea    edi,[ebx]
  405009:	mov    eax,0x538f5c77
  40500e:	fsubr  st(1),st
  405010:	xor    edx,DWORD PTR [ecx-0x66bc214a]
  405016:	xchg   edi,eax
  405017:	pop    eax
  405018:	leave  
  405019:	jns    0x40506e
  40501b:	test   BYTE PTR [edx+0x5f],0xd6
  40501f:	daa    
  405020:	add    BYTE PTR [ecx-0x284830a3],dl
  405026:	rcl    BYTE PTR [edi-0x43],cl
  405029:	inc    eax
  40502a:	and    al,0x75
  40502c:	je     0x405092
  40502e:	jmp    0x76ac:0xa3d1d997
  405035:	mov    cl,0x82
  405037:	aam    0xf0
  405039:	sbb    al,0xb9
  40503b:	cmc    
  40503c:	cwde   
  40503d:	inc    esi
  40503e:	xchg   ecx,eax
  40503f:	enter  0x7955,0x96
  405043:	inc    esp
  405044:	fs cmp al,0x17
  405047:	loope  0x405020
  405049:	arpl   bp,si
  40504b:	adc    edx,ebx
  40504d:	add    cl,BYTE PTR [ecx+0x55]
  405050:	mov    ecx,DWORD PTR [ebx+0x4d]
  405053:	clc    
  405054:	inc    edx
  405055:	sbb    edx,DWORD PTR [ebx]
  405057:	xchg   esi,eax
  405058:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405059:	sub    dl,BYTE PTR [ecx]
  40505b:	and    dl,bl
  40505d:	dec    edx
  40505e:	cwde   
  40505f:	enter  0xced2,0xd2
  405063:	xchg   edi,eax
  405064:	stos   DWORD PTR es:[edi],eax
  405065:	and    al,BYTE PTR [esi-0x47]
  405068:	mov    dh,0x76
  40506a:	jno    0x40503d
  40506c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40506d:	pop    esp
  40506e:	jnp    0x405023
  405070:	push   eax
  405071:	xor    DWORD PTR ds:0xa68c6946,ebp
  405077:	aaa    
  405078:	mul    BYTE PTR [edi]
  40507a:	pop    edi
  40507b:	out    0x57,al
  40507d:	pop    es
  40507e:	aad    0x5
  405080:	push   ds
  405081:	xor    al,0x59
  405083:	das    
  405084:	fnsave [eax+edi*8-0x13966dcc]
  40508b:	enter  0x85d9,0x22
  40508f:	jo     0x4050dd
  405091:	je     0x40506c
  405093:	(bad)  
  405094:	jnp    0x4050c0
  405096:	add    dl,BYTE PTR [edx+esi*8-0x5f]
  40509a:	cmp    BYTE PTR [edx+0x5a],cl
  40509d:	ret    0x37f5
  4050a0:	lock aas 
  4050a2:	stos   DWORD PTR es:[edi],eax
  4050a3:	outs   dx,DWORD PTR ds:[esi]
  4050a4:	dec    esi
  4050a5:	into   
  4050a6:	out    0x2d,al
  4050a8:	push   eax
  4050a9:	mov    edx,0xec8e7ed7
  4050ae:	pop    eax
  4050af:	jmp    0x17d6:0x8730b597
  4050b6:	push   es
  4050b7:	cdq    
  4050b8:	clc    
  4050b9:	add    eax,0xb26eeaa2
  4050be:	clc    
  4050bf:	mov    WORD PTR [eax],gs
  4050c1:	push   0x0
  4050c3:	push   cs
  4050c4:	fbld   TBYTE PTR [ecx+0x68935583]
  4050ca:	fcomip st,st(0)
  4050cc:	or     dl,BYTE PTR [edi]
  4050ce:	ja     0x405082
  4050d0:	ret    0xaa3f
  4050d3:	cmp    DWORD PTR [eax+ebx*4+0x67],esp
  4050d7:	(bad)  
  4050d8:	clc    
  4050d9:	dec    edx
  4050da:	mov    edi,DWORD PTR [edi+0xb415e8e]
  4050e0:	sub    DWORD PTR [edx+0x49],ecx
  4050e3:	shr    DWORD PTR ss:[ebp+0x33],1
  4050e7:	cmp    edi,0x51e4b3e
  4050ed:	jns    0x405090
  4050ef:	push   esp
  4050f0:	test   eax,0x924192c9
  4050f5:	cmp    esi,ecx
  4050f7:	sbb    esp,ebx
  4050f9:	test   DWORD PTR [eax],eax
  4050fb:	fimul  WORD PTR [ebx]
  4050fd:	aas    
  4050fe:	mov    DWORD PTR [ebx-0x1cae14b1],ecx
  405104:	push   edx
  405105:	sahf   
  405106:	cmp    eax,0xef7e2ffb
  40510b:	retf   0x657e
  40510e:	enter  0x9f1,0x7e
  405112:	cwde   
  405113:	bound  ebp,QWORD PTR [esi+0x6888caf5]
  405119:	loopne 0x40510c
  40511b:	ja     0x4050d4
  40511d:	and    dh,0xf4
  405120:	mov    eax,0x5379b1bd
  405125:	dec    esi
  405126:	mov    esi,db3
  405129:	jbe    0x4051a0
  40512b:	lods   al,BYTE PTR ds:[esi]
  40512c:	enter  0x9a27,0xa1
  405130:	aam    0xc7
  405132:	push   ss
  405133:	sub    BYTE PTR [edx],cl
  405135:	mov    bh,0xcf
  405137:	pusha  
  405138:	icebp  
  405139:	outs   dx,DWORD PTR ds:[esi]
  40513a:	vandnpd xmm2,xmm7,XMMWORD PTR [edi+0x8c84132]
  405143:	push   ebx
  405144:	inc    esi
  405145:	or     eax,0xafebc6ad
  40514a:	inc    ebp
  40514b:	cs test al,0xb3
  40514e:	or     eax,0x3395dc42
  405153:	jg     0x405167
  405155:	cmp    BYTE PTR [esi+eiz*4+0x3389b5cf],dh
  40515c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40515d:	dec    edx
  40515e:	push   ebp
  40515f:	fdiv   QWORD PTR [eax-0x1cdc1a72]
  405165:	nop
  405166:	in     al,dx
  405167:	sbb    dl,BYTE PTR [esi+0x68de3f8b]
  40516d:	jbe    0x4051d6
  40516f:	arpl   WORD PTR [ebx-0xbf9c090],si
  405175:	loop   0x40517c
  405177:	gs sbb al,0xbf
  40517a:	sub    BYTE PTR [eax-0x24],0xc5
  40517e:	dec    esi
  40517f:	test   al,0x36
  405181:	loopne 0x405111
  405183:	dec    ebx
  405184:	xchg   DWORD PTR [ebx],ebx
  405186:	jns    0x40513d
  405188:	jno    0x40515f
  40518a:	ffree  st(1)
  40518c:	sahf   
  40518d:	leave  
  40518e:	daa    
  40518f:	push   es
  405190:	dec    ecx
  405191:	jbe    0x405189
  405193:	or     al,0xbc
  405195:	adc    eax,0x41339957
  40519a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40519b:	push   es
  40519c:	pop    ecx
  40519d:	popa   
  40519e:	xor    ah,BYTE PTR [edx+esi*4+0x5]
  4051a2:	stos   BYTE PTR es:[edi],al
  4051a3:	mov    edi,DWORD PTR [esi+0x1d]
  4051a6:	pop    edi
  4051a7:	jb     0x405141
  4051a9:	sti    
  4051aa:	scas   al,BYTE PTR es:[edi]
  4051ab:	sub    eax,0xd6c230dc
  4051b0:	mov    BYTE PTR [ecx+0x3],bl
  4051b3:	inc    ebx
  4051b4:	and    DWORD PTR [edi-0x10a50c2b],edi
  4051ba:	repz sbb BYTE PTR [edi+0x46d8dec4],ah
  4051c1:	cld    
  4051c2:	inc    ebp
  4051c3:	push   es
  4051c4:	les    edx,FWORD PTR [edi]
  4051c6:	pop    esp
  4051c7:	pop    ecx
  4051c8:	mov    eax,ds:0x27ae6c38
  4051cd:	test   DWORD PTR [ebx],ebp
  4051cf:	ret    0x4457
  4051d2:	cmp    BYTE PTR [edx+0x45d2ecbc],al
  4051d8:	push   ds
  4051d9:	add    BYTE PTR [ecx-0x12],bl
  4051dc:	neg    DWORD PTR [ebp-0x4a]
  4051df:	and    eax,0x630911f
  4051e4:	out    0x5b,al
  4051e6:	adc    eax,0xd88d4ca9
  4051eb:	enter  0x5eae,0x8d
  4051ef:	jl     0x40518a
  4051f1:	dec    ebp
  4051f2:	das    
  4051f3:	out    dx,eax
  4051f4:	rol    BYTE PTR [ebx],1
  4051f6:	jne    0x405201
  4051f8:	sbb    al,0x3
  4051fa:	fld    QWORD PTR [edx+0x71d5c322]
  405200:	pop    ds
  405201:	aas    
  405202:	adc    BYTE PTR [esi+edx*8-0x6fbd36ff],bl
  405209:	pop    es
  40520a:	mov    eax,0x2c346194
  40520f:	pop    ss
  405210:	mov    ebp,0x92f9f71c
  405215:	imul   DWORD PTR [eax-0x3b]
  405218:	add    DWORD PTR [ebx+0x2a],edx
  40521b:	pop    eax
  40521c:	adc    eax,0xd27ab5bf
  405221:	paddsw mm6,mm7
  405224:	test   DWORD PTR [edx],esp
  405226:	loop   0x405223
  405228:	pop    ss
  405229:	cmp    dl,BYTE PTR [ecx*4+0x3320c42d]
  405230:	and    DWORD PTR [ecx-0x67],ebp
  405233:	jbe    0x405275
  405235:	inc    esi
  405236:	inc    esp
  405237:	sbb    bl,BYTE PTR [esp+ecx*2]
  40523a:	dec    ch
  40523c:	addr16 (bad) 
  40523e:	pop    ecx
  40523f:	fcom   DWORD PTR [ebx]
  405241:	jg     0x40529b
  405243:	jle    0x405244
  405245:	fcom   QWORD PTR [eax+0x74]
  405248:	cmp    esi,esi
  40524a:	add    WORD PTR [edi-0x2d0b9913],sp
  405251:	lods   al,BYTE PTR ds:[esi]
  405252:	mov    ds:0x15ba55fb,al
  405257:	fisttp DWORD PTR [edx-0x78]
  40525a:	jns    0x40522d
  40525c:	sub    bl,BYTE PTR [edx+0x4c]
  40525f:	arpl   WORD PTR [edx+0x79],cx
  405262:	sar    BYTE PTR [edi],0x9
  405265:	addr16 xchg edi,eax
  405267:	jno    0x4052b3
  405269:	daa    
  40526a:	jo     0x4052ba
  40526c:	fdiv   DWORD PTR [esi]
  40526e:	or     bl,BYTE PTR [eax-0x45bbd52f]
  405274:	cmp    DWORD PTR [edi-0x55a77016],ebx
  40527a:	neg    BYTE PTR ds:0xb53bc664
  405280:	test   al,0xce
  405282:	daa    
  405283:	bound  edi,QWORD PTR [eax+0x510cb9be]
  405289:	sbb    ecx,DWORD PTR [eax+edx*1+0x6b806a82]
  405290:	dec    eax
  405291:	mov    dl,0xc9
  405293:	mov    edi,edi
  405295:	jg     0x4052a8
  405297:	xchg   ebx,eax
  405298:	jge    0x4052f6
  40529a:	push   ebp
  40529b:	shr    BYTE PTR [eax+0xc],1
  40529e:	xchg   DWORD PTR [edi+ebx*2+0x79],edx
  4052a2:	fldenv [ebp+edi*2+0x517e257f]
  4052a9:	mov    esp,0x9f83d519
  4052ae:	xchg   edx,eax
  4052af:	ror    DWORD PTR ss:[eax+eax*1-0x7f],0xa0
  4052b5:	sub    al,0x1
  4052b7:	xor    eax,0xb9280623
  4052bc:	cmc    
  4052bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052be:	loope  0x4052d6
  4052c0:	loop   0x405304
  4052c2:	pushf  
  4052c3:	inc    edi
  4052c4:	dec    esi
  4052c5:	jo     0x405262
  4052c7:	add    BYTE PTR [eax+0x3c22b233],bl
  4052cd:	adc    esi,DWORD PTR [edx+0x2436ca90]
  4052d3:	jne    0x4052ee
  4052d5:	ins    DWORD PTR es:[edi],dx
  4052d6:	mov    eax,ds:0x2103d4ba
  4052db:	jno    0x4052c9
  4052dd:	push   edi
  4052de:	leave  
  4052df:	fdiv   QWORD PTR [edi-0x6279b95]
  4052e5:	mov    cl,0x61
  4052e7:	fwait
  4052e8:	or     bh,BYTE PTR [eax]
  4052ea:	mov    ecx,0x1eea1d58
  4052ef:	test   eax,0x62823d9c
  4052f4:	cdq    
  4052f5:	mov    al,ds:0xad7b6e04
  4052fa:	out    0xff,eax
  4052fc:	push   ebx
  4052fd:	cdq    
  4052fe:	sub    cl,BYTE PTR [edx-0x1]
  405301:	mov    esi,0x61ce8f6a
  405306:	nop
  405307:	jno    0x4052b6
  405309:	mov    bl,0x26
  40530c:	call   0x68c8:0xf54ca063
  405313:	pop    ebp
  405314:	call   0x8986:0x96af312f
  40531b:	or     edx,edx
  40531d:	cmp    eax,0x12c23804
  405322:	push   es
  405323:	daa    
  405324:	fucomi st,st(1)
  405326:	push   ebx
  405327:	mov    ch,0xb2
  405329:	adc    ebp,ebx
  40532b:	jecxz  0x4052c9
  40532d:	sahf   
  40532e:	sbb    BYTE PTR [ebp+eiz*2+0x4f],cl
  405332:	xlat   BYTE PTR ds:[ebx]
  405333:	sbb    DWORD PTR [edi],edi
  405335:	aaa    
  405336:	mov    ds:0xad2672f1,eax
  40533b:	add    al,0x39
  40533d:	sbb    esp,0x5b573232
  405343:	mov    ebx,0xa2a382d1
  405348:	inc    ecx
  405349:	mov    al,0xcb
  40534b:	hlt    
  40534c:	jae    0x40531f
  40534e:	ret    
  40534f:	jmp    DWORD PTR ds:0xac302eb1
  405355:	lock loope 0x4053d1
  405358:	add    al,0x7
  40535a:	sub    DWORD PTR [esi],edx
  40535c:	clc    
  40535d:	aaa    
  40535e:	adc    DWORD PTR [ecx+eiz*1-0x53c911d0],0x19f0e475
  405369:	adc    edi,ebx
  40536b:	jns    0x405336
  40536d:	fsub   QWORD PTR [ebx-0xa]
  405370:	fwait
  405371:	add    DWORD PTR [ebp-0x75c5197a],ecx
  405377:	jmp    0xf533:0x74a6ddb1
  40537e:	mov    bl,BYTE PTR [ecx-0x5e515e1a]
  405384:	dec    edi
  405385:	repz int 0xd1
  405388:	fwait
  405389:	mov    bl,BYTE PTR [edx-0x26802772]
  40538f:	mov    ebx,0xad27ab03
  405394:	adc    esp,esp
  405396:	pop    ebp
  405397:	or     ecx,DWORD PTR [edx+0x14dbb85e]
  40539d:	and    eax,ecx
  40539f:	cmp    ch,cl
  4053a1:	xor    ebp,DWORD PTR ds:0x10177721
  4053a7:	pop    ds
  4053a8:	adc    ecx,DWORD PTR [edi+0x1f]
  4053ab:	retf   
  4053ac:	call   DWORD PTR [esp+edi*2]
  4053af:	in     eax,dx
  4053b0:	adc    dh,BYTE PTR [ecx-0x52]
  4053b3:	or     eax,0x43c16ca9
  4053b8:	pop    edx
  4053b9:	inc    ecx
  4053ba:	aad    0x2c
  4053bc:	scas   al,BYTE PTR es:[edi]
  4053bd:	dec    edx
  4053be:	xchg   ebx,eax
  4053bf:	jno    0x405399
  4053c1:	mov    edi,0x95f3f2f
  4053c6:	pop    ebx
  4053c7:	mov    ds:0x1272a412,eax
  4053cc:	test   DWORD PTR [eax-0x418e9ee9],ebp
  4053d2:	repnz jmp 0xa015:0x93deef05
  4053da:	push   cs
  4053db:	adc    eax,0xddf5b96a
  4053e0:	test   BYTE PTR [ebx+0x1f],ch
  4053e3:	xchg   esi,eax
  4053e4:	push   ebp
  4053e5:	xchg   ebp,eax
  4053e6:	jge    0x40540f
  4053e8:	bound  ebx,QWORD PTR [ebx+0x46]
  4053eb:	or     DWORD PTR [ebx],0x78ed3fba
  4053f1:	cdq    
  4053f2:	push   edx
  4053f3:	repnz lods eax,DWORD PTR ds:[esi]
  4053f5:	cld    
  4053f6:	mov    edx,0x87d72562
  4053fb:	pop    eax
  4053fc:	mov    esi,esi
  4053fe:	repz add edx,edi
  405401:	xchg   ah,ch
  405403:	xor    eax,0xeb7f1bfd
  405408:	add    ch,ah
  40540a:	jns    0x405441
  40540c:	icebp  
  40540d:	dec    eax
  40540e:	pop    ebx
  40540f:	shr    ah,cl
  405411:	or     ecx,DWORD PTR [esi+esi*2]
  405414:	dec    edx
  405415:	pminub mm0,mm7
  405418:	and    eax,0x8f899e35
  40541d:	pop    esi
  40541e:	icebp  
  40541f:	daa    
  405420:	inc    ebp
  405421:	loop   0x405419
  405423:	shl    ch,1
  405425:	js     0x4053dd
  405427:	mov    dl,BYTE PTR [edi+0x7b858e8d]
  40542d:	xchg   edi,eax
  40542e:	mov    bh,0x55
  405430:	cmp    al,BYTE PTR [eax]
  405432:	add    dh,cl
  405434:	rcr    DWORD PTR [esi],1
  405436:	xor    ch,BYTE PTR [edi]
  405438:	popa   
  405439:	fs aad 0x44
  40543c:	adc    eax,0x134a46d
  405441:	data16 loop 0x405438
  405444:	mov    cl,0x7b
  405446:	push   edi
  405447:	outs   dx,DWORD PTR ds:[esi]
  405448:	aaa    
  405449:	imul   ebp,eax,0x35
  40544c:	or     DWORD PTR [edx-0x787843bb],0x19
  405453:	pop    esp
  405454:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405455:	aam    0xee
  405457:	or     DWORD PTR [ebp+0x653b77cb],esi
  40545d:	paddb  mm1,QWORD PTR [eax+0x43]
  405461:	repz push esi
  405463:	dec    ecx
  405464:	mov    edx,0xf122efba
  405469:	popa   
  40546a:	test   al,0x3c
  40546c:	mov    bh,0xf
  40546e:	push   edx
  40546f:	and    eax,DWORD PTR [edi+0x33]
  405472:	lods   eax,DWORD PTR ds:[esi]
  405473:	adc    al,0x5b
  405475:	mov    cl,0x91
  405477:	mov    ?,WORD PTR [ecx+ecx*2-0x30bc5f39]
  40547e:	out    dx,eax
  40547f:	pusha  
  405480:	pop    es
  405481:	adc    eax,0x1a26baa
  405486:	mov    BYTE PTR [esi-0x5a],dh
  405489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40548a:	sbb    edi,DWORD PTR [edi+edx*2+0x14]
  40548e:	hlt    
  40548f:	sbb    esi,DWORD PTR ds:0x6290429d
  405495:	(bad)  [edi]
  405497:	lea    ebx,[edx-0x313e51]
  40549d:	xlat   BYTE PTR ds:[ebx]
  40549e:	or     DWORD PTR [edi+ebx*8+0x368334bc],ecx
  4054a5:	pop    ebx
  4054a6:	push   es
  4054a7:	cmp    ah,al
  4054a9:	out    0x16,eax
  4054ab:	test   al,0x4f
  4054ad:	sbb    DWORD PTR [edx+0x448ac221],0xfb6295a5
  4054b7:	ds out 0x72,al
  4054ba:	ins    BYTE PTR es:[edi],dx
  4054bb:	mov    esp,0x627fe60d
  4054c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054c1:	into   
  4054c2:	je     0x4054e3
  4054c4:	add    DWORD PTR [edx],edx
  4054c6:	repz out 0xcd,al
  4054c9:	mov    esp,0x11a9b55d
  4054ce:	mov    ds:0x284a207c,al
  4054d3:	dec    esp
  4054d4:	ss mov ecx,0x9a02f03a
  4054da:	popf   
  4054db:	mov    edx,0x82ab108b
  4054e0:	ror    DWORD PTR [ebx+0x2],0x84
  4054e4:	loopne 0x4054cf
  4054e6:	cld    
  4054e7:	sub    edx,DWORD PTR [ecx-0x3275cde9]
  4054ed:	in     eax,0x73
  4054ef:	fwait
  4054f0:	sub    ebx,DWORD PTR [esi+0x5e7aa520]
  4054f6:	pop    edi
  4054f7:	outs   dx,DWORD PTR ds:[esi]
  4054f8:	lea    eax,gs:[eax+ebp*8-0x7]
  4054fd:	mov    al,0xde
  4054ff:	dec    esi
  405500:	data16 (bad) 
  405502:	or     DWORD PTR [ebx+0x61],edx
  405505:	test   al,0xda
  405507:	xchg   edi,ebx
  405509:	mov    bl,bl
  40550b:	pusha  
  40550c:	jno    0x405522
  40550e:	inc    esi
  40550f:	pushf  
  405510:	xchg   ebx,eax
  405511:	je     0x4054ae
  405513:	popa   
  405514:	icebp  
  405515:	test   eax,0x3392f882
  40551a:	pop    eax
  40551b:	and    DWORD PTR [eax],edi
  40551d:	inc    edx
  40551e:	inc    edx
  40551f:	cmp    dh,al
  405521:	(bad)  
  405522:	(bad)  
  405523:	sti    
  405524:	popf   
  405525:	cdq    
  405526:	mov    al,BYTE PTR gs:0x5aa66cc9
  40552d:	mov    dl,0x37
  40552f:	ds in  al,0xdd
  405532:	stc    
  405533:	es jb  0x2ced9389
  40553a:	dec    ecx
  40553b:	fld    DWORD PTR [esi]
  40553d:	adc    BYTE PTR [ebp+0x7037b2ce],ch
  405543:	mov    BYTE PTR [edx+0x7261bc1e],ch
  405549:	enter  0x1b89,0xa0
  40554d:	jmp    0x6dae:0x284ad12
  405554:	imul   edx,DWORD PTR [ecx-0x2ae6c52d],0x6e3ce5f6
  40555e:	mov    ds:0x4c9c899d,eax
  405563:	stos   DWORD PTR es:[edi],eax
  405564:	xchg   ebp,eax
  405565:	popf   
  405566:	jae    0x4054f6
  405568:	push   ds
  405569:	dec    ebp
  40556a:	xchg   edx,eax
  40556b:	mov    BYTE PTR [ecx+0x5e],cl
  40556e:	cwde   
  40556f:	cmp    DWORD PTR [ecx],edx
  405571:	and    DWORD PTR [eax-0x7a2b4a8b],esi
  405577:	jno    0x4055e3
  405579:	je     0x405571
  40557b:	xchg   esp,eax
  40557c:	jg     0x405519
  40557e:	push   ebp
  40557f:	in     eax,0xfc
  405581:	inc    esi
  405582:	loop   0x405531
  405584:	cmp    BYTE PTR [esp+ebx*4+0x3],0x4d
  405589:	mov    ebx,0x91f30055
  40558e:	outs   dx,BYTE PTR ds:[esi]
  40558f:	retf   0xcfbf
  405592:	mov    ds:0xb347bc0e,eax
  405597:	stos   DWORD PTR es:[edi],eax
  405598:	mov    edi,0xf9a52496
  40559d:	or     bh,0x6b
  4055a0:	retf   0x2574
  4055a3:	test   DWORD PTR [edi],edx
  4055a5:	out    0x7d,al
  4055a7:	retf   0xc37d
  4055aa:	inc    esi
  4055ab:	dec    edi
  4055ac:	and    bh,BYTE PTR ds:0xe9f1458
  4055b2:	pop    edi
  4055b3:	pop    esp
  4055b4:	clc    
  4055b5:	popf   
  4055b6:	mov    al,ds:0x27456211
  4055bb:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055bd:	push   eax
  4055be:	sub    DWORD PTR [edi-0xf7313e7],edi
  4055c4:	test   DWORD PTR [eax+0xd],esp
  4055c7:	mov    cl,0xa9
  4055c9:	push   0x3eda6e68
  4055ce:	out    0xfa,al
  4055d0:	push   0xffffffc3
  4055d2:	inc    eax
  4055d3:	jg     0x405612
  4055d5:	xchg   ecx,eax
  4055d6:	pop    esi
  4055d7:	dec    edi
  4055d8:	js     0x40562a
  4055da:	cld    
  4055db:	in     al,0xbe
  4055dd:	sub    ch,ch
  4055df:	test   eax,0x9f6903f7
  4055e4:	ret    0xbfd2
  4055e7:	les    ebx,FWORD PTR [edi+0x44]
  4055ea:	and    eax,0x61336762
  4055ef:	out    dx,eax
  4055f0:	leave  
  4055f1:	add    eax,0x8102e312
  4055f6:	ror    DWORD PTR [ebx+eax*8],0x16
  4055fa:	add    BYTE PTR [eax+0x7],0x10
  4055fe:	cmp    DWORD PTR [eax-0x29],edx
  405601:	xchg   ebp,eax
  405602:	jmp    0x40562d
  405604:	dec    eax
  405605:	mov    edi,0x2e4d309c
  40560a:	sub    ebx,ebx
  40560c:	xor    BYTE PTR ds:0x67434aef,0xe0
  405613:	jg     0x405653
  405615:	ins    BYTE PTR es:[edi],dx
  405616:	pop    ebx
  405617:	enter  0x99c,0xab
  40561b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40561c:	xlat   BYTE PTR ds:[ebx]
  40561d:	jmp    0x7e6b:0xec201100
  405624:	repz cmc 
  405626:	call   0x11e9:0x924bfacf
  40562d:	inc    ebx
  40562e:	cld    
  40562f:	in     al,dx
  405630:	fsubr  DWORD PTR [esi+0x3457fdea]
  405636:	and    eax,0xeb991fd9
  40563b:	popf   
  40563c:	sti    
  40563d:	aas    
  40563e:	xlat   BYTE PTR ds:[ebx]
  40563f:	jl     0x4055d6
  405641:	and    DWORD PTR [edx-0xb1b3f03],eax
  405647:	not    DWORD PTR [eax]
  405649:	mov    ebx,0xaeda1570
  40564e:	xchg   ebp,eax
  40564f:	add    BYTE PTR [ebx+0x1b],al
  405652:	jecxz  0x40568a
  405654:	outs   dx,DWORD PTR ds:[esi]
  405655:	jmp    0xfc20:0x3edff9b7
  40565c:	mov    ebp,0xcff048af
  405661:	add    eax,0xe0df1b56
  405666:	mov    WORD PTR [esi+0x633c3f70],gs
  40566c:	cmp    al,0x50
  40566e:	and    DWORD PTR [ecx+ecx*4-0x2b],ebx
  405672:	in     eax,0x47
  405674:	push   cs
  405675:	cmp    edx,0xe1d475f1
  40567b:	int    0xf3
  40567d:	dec    esp
  40567e:	push   0x5d44536f
  405683:	iret   
  405684:	cli    
  405685:	sbb    cl,BYTE PTR [ecx+0x8]
  405688:	test   BYTE PTR [ecx],ch
  40568a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40568b:	lahf   
  40568c:	retf   0x332
  40568f:	and    DWORD PTR [edx-0x213f3a24],esi
  405695:	jno    0x4056e2
  405697:	das    
  405698:	sahf   
  405699:	xchg   edi,eax
  40569a:	mov    BYTE PTR [edx-0x5a],dh
  40569d:	xchg   esi,eax
  40569e:	push   cs
  40569f:	imul   esi,DWORD PTR [eax-0x7d],0x2a10eb15
  4056a6:	mov    esp,0xa4f5e6d7
  4056ab:	mov    bh,BYTE PTR [ebp+0xd3e35ad]
  4056b1:	dec    esi
  4056b2:	sti    
  4056b3:	mov    ?,WORD PTR [ebx]
  4056b5:	loopne 0x4056db
  4056b7:	cmp    BYTE PTR [ecx-0x7eddb2df],al
  4056bd:	jnp    0x405719
  4056bf:	push   0xffffffd1
  4056c1:	sub    eax,0xeeb6e5ab
  4056c6:	icebp  
  4056c7:	and    esp,esi
  4056c9:	call   0x4a584e5
  4056ce:	stos   DWORD PTR es:[edi],eax
  4056cf:	push   esp
  4056d0:	out    dx,al
  4056d1:	std    
  4056d2:	sahf   
  4056d3:	(bad)  
  4056d4:	mov    DWORD PTR [eax],edx
  4056d6:	and    al,BYTE PTR [ecx-0x1e]
  4056d9:	sub    edi,DWORD PTR [edx+0x708bbf15]
  4056df:	imul   esp,esi,0x4e2938b0
  4056e5:	out    0x40,al
  4056e7:	jmp    0x86b2:0x3e4918bf
  4056ee:	sbb    BYTE PTR [eax-0x2b],cl
  4056f1:	xor    DWORD PTR [esi-0x8],ecx
  4056f4:	pop    edx
  4056f5:	sbb    DWORD PTR [eax],edx
  4056f7:	xchg   ebx,eax
  4056f8:	and    BYTE PTR [edi-0x6a075ec3],dl
  4056fe:	inc    ebp
  4056ff:	lods   eax,DWORD PTR ds:[esi]
  405700:	adc    ebp,edi
  405702:	adc    al,0xd2
  405704:	cmc    
  405705:	jecxz  0x40573f
  405707:	jne    0x4056f5
  405709:	push   edx
  40570a:	mov    ds:0x463ab65d,al
  40570f:	sahf   
  405710:	fistp  QWORD PTR [eax]
  405712:	or     al,0xfd
  405714:	lock pop ss
  405716:	ins    BYTE PTR es:[edi],dx
  405717:	arpl   WORD PTR [edi-0x7],dx
  40571a:	cmp    al,ch
  40571c:	inc    DWORD PTR [ebp+0x4fe4abeb]
  405722:	fcomip st,st(3)
  405724:	int    0x88
  405726:	jmp    0x3d2af6f7
  40572b:	xchg   DWORD PTR [esp+eiz*2+0x55],ebx
  40572f:	jp     0x40574e
  405731:	xor    DWORD PTR [ebp-0x4],edx
  405734:	or     esp,edx
  405736:	cs mov si,0xa257
  40573b:	ss jnp 0x4057b3
  40573e:	mov    WORD PTR [edi-0xd],?
  405741:	xor    DWORD PTR [esi-0x694de36d],ebx
  405747:	div    DWORD PTR [ecx]
  405749:	fs ja  0x40578e
  40574c:	int3   
  40574d:	jge    0x4056e5
  40574f:	or     al,0x39
  405751:	push   ebp
  405752:	dec    esi
  405753:	mov    al,ds:0x967e6d2f
  405758:	or     esi,DWORD PTR [edi]
  40575a:	sub    DWORD PTR [eax-0x73f38295],esp
  405760:	adc    eax,0x6d8f874a
  405765:	outs   dx,BYTE PTR ds:[esi]
  405766:	jg     0x4057c6
  405768:	div    DWORD PTR [ebp+edi*8+0x8772dc2]
  40576f:	movaps xmm0,XMMWORD PTR [edx]
  405772:	nop
  405773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405774:	out    0x80,al
  405776:	mov    dl,0x23
  405778:	xor    esp,DWORD PTR [eax-0x51]
  40577b:	mov    BYTE PTR [edi],dl
  40577d:	popf   
  40577e:	scas   al,BYTE PTR es:[edi]
  40577f:	xlat   BYTE PTR ds:[ebx]
  405780:	inc    esp
  405781:	sub    eax,0x10ecb4e0
  405786:	and    ebp,ebx
  405788:	dec    edi
  405789:	and    al,BYTE PTR [edx-0x719ab485]
  40578f:	enter  0x5ba8,0x78
  405793:	sub    al,0xf6
  405795:	cmp    DWORD PTR [edx-0x42432067],esp
  40579b:	mov    al,0x9f
  40579d:	sub    BYTE PTR [edx+0x36668179],0x2f
  4057a4:	fdecstp 
  4057a6:	jp     0x405777
  4057a8:	fld    QWORD PTR [eax-0x5a7f8048]
  4057ae:	retf   0x3adf
  4057b1:	enter  0x65de,0xed
  4057b5:	dec    edi
  4057b6:	xlat   BYTE PTR ds:[ebx]
  4057b7:	bound  ebp,QWORD PTR [edx+eiz*4-0x3c]
  4057bb:	dec    esp
  4057bc:	push   0xf22d50bd
  4057c1:	add    eax,DWORD PTR [ebp+0x40cdcfeb]
  4057c7:	les    ebx,FWORD PTR [ebx-0x199a3b9e]
  4057cd:	cmc    
  4057ce:	addr16 data16 mov ah,0xea
  4057d2:	mov    cl,BYTE PTR [ecx-0x1adaaa22]
  4057d8:	add    al,BYTE PTR [eax+0x16037399]
  4057de:	dec    eax
  4057df:	xor    ah,BYTE PTR [esp+ebx*8+0x26]
  4057e3:	inc    ecx
  4057e4:	test   BYTE PTR [edi-0x74],bl
  4057e7:	cdq    
  4057e8:	call   0x4111:0x43dcbcb
  4057ef:	pop    edx
  4057f0:	shr    DWORD PTR [edi+0x7a],1
  4057f3:	sbb    BYTE PTR [esi+0x191149d4],ah
  4057f9:	dec    eax
  4057fa:	and    ecx,edx
  4057fc:	and    cl,BYTE PTR [edx-0x69]
  4057ff:	mov    eax,ds:0xd083d1a1
  405804:	int    0x9c
  405806:	pop    ebx
  405807:	pusha  
  405808:	cmp    al,0x8b
  40580a:	fisttp WORD PTR [esi+ecx*4+0x46fab5c]
  405811:	jae    0x405862
  405813:	adc    eax,0x17a3454e
  405818:	fwait
  405819:	leave  
  40581a:	js     0x40582d
  40581c:	rcl    BYTE PTR [eax+ebx*2+0x74],cl
  405820:	retf   0x9cc7
  405823:	push   ecx
  405824:	and    al,0x98
  405826:	pop    edi
  405827:	push   ecx
  405828:	mov    BYTE PTR [ecx+0x1],dl
  40582b:	or     al,0xd5
  40582d:	add    edi,DWORD PTR [esi]
  40582f:	test   al,0x7a
  405831:	mov    cl,BYTE PTR [ebx-0x3a]
  405834:	fbstp  TBYTE PTR [ebx-0x57562512]
  40583a:	fcmovne st,st(5)
  40583c:	mov    WORD PTR [ebp+0xd],fs
  40583f:	ret    
  405840:	ja     0x405896
  405842:	xor    al,0x89
  405844:	leave  
  405845:	lock pop es
  405847:	imul   edi,ecx,0x14
  40584a:	sub    eax,0x1f005a36
  40584f:	and    dl,BYTE PTR [bp+si]
  405852:	gs fwait
  405854:	inc    edx
  405855:	adc    DWORD PTR [edi],eax
  405857:	test   BYTE PTR ds:0x36856b87,dl
  40585d:	sub    eax,0x954fdc40
  405862:	mov    eax,ss
  405864:	mov    ebx,DWORD PTR [ebp+0x28adf43c]
  40586a:	std    
  40586b:	fsubr  st(6),st
  40586d:	sub    DWORD PTR [ebx+0x43109214],ebx
  405873:	and    DWORD PTR [eax-0x52],0xd1dcbd93
  40587a:	mov    ebp,0xa38584f4
  40587f:	jnp    0x40580c
  405881:	sub    edi,edx
  405883:	out    dx,eax
  405884:	es adc edx,ebx
  405887:	std    
  405888:	call   FWORD PTR [esi]
  40588a:	iret   
  40588b:	in     eax,dx
  40588c:	sahf   
  40588d:	retf   
  40588e:	jmp    0x3bf5:0xe3d9497
  405895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405896:	inc    ebp
  405897:	and    DWORD PTR [esi+eiz*8-0x83807d4],edi
  40589e:	repz xchg esp,eax
  4058a0:	mov    dl,0x63
  4058a2:	or     dh,BYTE PTR [edx+0x46]
  4058a5:	lea    esp,[edi+0x69b731ca]
  4058ab:	(bad)  
  4058ac:	push   esp
  4058ad:	(bad)  
  4058ae:	fisub  WORD PTR [eax-0xb]
  4058b1:	loope  0x40591a
  4058b3:	lahf   
  4058b4:	jl     0x4058a6
  4058b6:	pop    ds
  4058b7:	loop   0x4058a2
  4058b9:	out    0x71,eax
  4058bb:	call   0xe374c626
  4058c0:	mov    ?,WORD PTR [ecx+0x2f]
  4058c3:	fwait
  4058c4:	add    eax,0xb495664c
  4058c9:	cmp    al,0x50
  4058cb:	into   
  4058cc:	inc    edi
  4058cd:	sar    BYTE PTR fs:[eax],1
  4058d0:	fwait
  4058d1:	outs   dx,DWORD PTR ds:[esi]
  4058d2:	mov    al,ds:0xeae14a1
  4058d7:	xchg   esi,eax
  4058d8:	mov    al,0xaa
  4058da:	ror    DWORD PTR [edi+eiz*4],cl
  4058dd:	rol    DWORD PTR [edx+0x4590068],1
  4058e3:	je     0x40593b
  4058e5:	dec    esi
  4058e6:	add    al,0xb5
  4058e8:	mov    eax,ds:0x40dea6dd
  4058ed:	jp     0x405904
  4058ef:	and    al,0xb7
  4058f1:	inc    esp
  4058f2:	bound  esi,QWORD PTR [ecx+0x60f42008]
  4058f8:	dec    ebp
  4058f9:	sbb    bl,BYTE PTR [esi-0x74]
  4058fc:	push   0x5bd60a88
  405901:	fist   WORD PTR [eax]
  405903:	sub    esi,DWORD PTR [ebx+0x62972d74]
  405909:	mov    DWORD PTR [ebx-0x6d304882],ebp
  40590f:	xchg   edi,eax
  405910:	add    al,0x1c
  405912:	out    dx,eax
  405913:	mov    ebp,0xf38f552
  405918:	cmp    esp,DWORD PTR [eax]
  40591a:	cmc    
  40591b:	cmp    BYTE PTR [ebp+eax*8-0x502bb641],ah
  405922:	cmp    ecx,DWORD PTR [esi+0x1060f63a]
  405928:	stos   DWORD PTR es:[edi],eax
  405929:	mov    cl,0x1
  40592b:	shl    dl,1
  40592d:	sbb    eax,0x9c7dd8cd
  405932:	in     eax,0x90
  405934:	sbb    DWORD PTR [ebx+0x5c],ebp
  405937:	mov    al,0xf3
  405939:	enter  0xe5df,0x42
  40593d:	mov    eax,ds:0xb9751de5
  405942:	pop    ecx
  405943:	fdivr  QWORD PTR [ebx+0xa7e825b]
  405949:	xchg   edi,eax
  40594a:	out    dx,al
  40594b:	pop    esp
  40594c:	push   0x7dce935d
  405951:	or     DWORD PTR [edx+0x3d],edx
  405954:	adc    DWORD PTR [ebx+0x1d],0x4fc7e4d4
  40595b:	sbb    BYTE PTR [eax+0x276fcdba],ch
  405961:	cs popa 
  405963:	xchg   esp,eax
  405964:	cmp    eax,0x5028be39
  405969:	mov    ch,0xac
  40596b:	lods   al,BYTE PTR ds:[esi]
  40596c:	aad    0xa8
  40596e:	cld    
  40596f:	sti    
  405970:	repnz aas 
  405972:	jecxz  0x4059bd
  405974:	xchg   ch,ch
  405976:	push   edi
  405977:	adc    eax,DWORD PTR [edx]
  405979:	retf   
  40597a:	sahf   
  40597b:	mov    esp,0x58acdd77
  405980:	xchg   ecx,eax
  405981:	pushf  
  405982:	cmp    eax,0xf2cf4eba
  405987:	fwait
  405988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405989:	call   0xf5c9a4cf
  40598e:	lock mov DWORD PTR [edx],eax
  405991:	pop    ss
  405992:	or     al,0xa4
  405994:	dec    esp
  405995:	mov    dh,0x9c
  405997:	jmp    0xe75bd5d0
  40599c:	dec    esi
  40599d:	mov    eax,ds:0x40f0604
  4059a2:	xchg   ebx,eax
  4059a3:	xor    BYTE PTR [edi+ecx*4-0x49],dh
  4059a7:	xor    al,0xb5
  4059a9:	rcl    DWORD PTR [ecx+0x22],cl
  4059ac:	mov    esp,0xd43d0b05
  4059b1:	dec    ebp
  4059b2:	jl     0x4059e1
  4059b4:	dec    eax
  4059b5:	sbb    ah,BYTE PTR [ebx+esi*1]
  4059b8:	in     eax,0xa
  4059ba:	and    esi,DWORD PTR [ebx-0x7e]
  4059bd:	mov    ah,0x50
  4059bf:	adc    BYTE PTR [ebp-0x2d],bh
  4059c2:	sahf   
  4059c3:	cmp    BYTE PTR [edi],cl
  4059c5:	push   esi
  4059c6:	dec    eax
  4059c7:	and    DWORD PTR [edx-0x54],esi
  4059ca:	sub    BYTE PTR [ebp+0x77],bl
  4059cd:	ficomp DWORD PTR [eax-0x5bac79ac]
  4059d3:	push   0xfa1303a9
  4059d8:	repz cmc 
  4059da:	das    
  4059db:	sahf   
  4059dc:	and    esp,DWORD PTR [edx+esi*1]
  4059df:	fiadd  DWORD PTR [edx+0xa5fd1a6]
  4059e5:	mov    bl,0xdc
  4059e7:	xchg   BYTE PTR [edi],cl
  4059e9:	jae    0x405a2f
  4059eb:	stos   BYTE PTR es:[edi],al
  4059ec:	or     edx,DWORD PTR [eax+0x5c]
  4059ef:	cli    
  4059f0:	(bad)  
  4059f1:	jmp    0x4c2:0xbc9abc57
  4059f8:	imul   DWORD PTR [edx]
  4059fa:	retf   
  4059fb:	add    edx,0xad5d5e8a
  405a01:	cmp    esp,DWORD PTR [esi-0x1]
  405a04:	mov    ?,WORD PTR [eax]
  405a06:	repz xor BYTE PTR [edi-0x2b],0x59
  405a0b:	and    BYTE PTR [edx-0x64ef0f2f],0x26
  405a12:	sub    dl,BYTE PTR [edi+0x3d]
  405a15:	push   ds
  405a16:	mov    BYTE PTR [ebx+0x54],cl
  405a19:	and    edi,DWORD PTR [eax]
  405a1b:	adc    esi,DWORD PTR [edx-0x5cd933c2]
  405a21:	add    BYTE PTR [edx+0x60],bl
  405a24:	mov    ecx,0x28e4b70
  405a29:	sub    ch,ah
  405a2b:	push   edi
  405a2c:	sub    al,0x94
  405a2e:	mov    WORD PTR [eax],gs
  405a30:	push   edi
  405a31:	xchg   esi,eax
  405a32:	ret    0xe86e
  405a35:	inc    ebx
  405a36:	xor    BYTE PTR [esi-0x9],bl
  405a39:	mov    eax,0x884ecedc
  405a3e:	int3   
  405a3f:	loop   0x405a22
  405a41:	in     eax,dx
  405a42:	inc    ecx
  405a43:	dec    ebx
  405a44:	jb     0x405ac4
  405a46:	xchg   esi,eax
  405a47:	mov    eax,0x961b7ab
  405a4c:	push   es
  405a4d:	xchg   esi,eax
  405a4e:	pandn  mm1,QWORD PTR [esp+esi*4-0x7ccbd35a]
  405a56:	loop   0x405a79
  405a58:	sbb    dl,BYTE PTR [edx-0x154892e4]
  405a5e:	pop    edx
  405a5f:	repz cmp eax,ebp
  405a62:	leave  
  405a63:	sahf   
  405a64:	out    0x99,al
  405a66:	clc    
  405a67:	or     eax,0xfe6e63c7
  405a6c:	dec    ebx
  405a6d:	push   ss
  405a6e:	(bad)  
  405a6f:	pusha  
  405a70:	ins    BYTE PTR es:[edi],dx
  405a71:	push   es
  405a72:	xchg   DWORD PTR [eax+0x20],ecx
  405a75:	add    al,0xb5
  405a77:	test   DWORD PTR [eax],esi
  405a79:	sub    BYTE PTR [ecx],dl
  405a7b:	das    
  405a7c:	fst    DWORD PTR [ebp+0x13]
  405a7f:	ds pushf 
  405a81:	lods   eax,DWORD PTR ds:[esi]
  405a82:	cmc    
  405a83:	cmp    al,0x70
  405a85:	inc    esi
  405a86:	dec    ecx
  405a87:	pop    edi
  405a88:	add    eax,0x7378a5f
  405a8d:	jnp    0x405a52
  405a8f:	scas   eax,DWORD PTR es:[edi]
  405a90:	ins    DWORD PTR es:[di],dx
  405a92:	push   ds
  405a93:	call   0x59cb:0x4f77167c
  405a9a:	repnz loopne 0x405acf
  405a9d:	loop   0x405aa2
  405a9f:	lahf   
  405aa0:	add    DWORD PTR [ebx-0x55],ecx
  405aa3:	mov    ds:0xdbcd6dc5,al
  405aa8:	ja     0x405b09
  405aaa:	imul   esp,DWORD PTR [ecx],0xffffffde
  405aad:	retf   
  405aae:	sub    al,0x3
  405ab0:	jmp    0x405acd
  405ab2:	mov    ds:0x6ead4835,eax
  405ab7:	int    0x19
  405ab9:	jae    0x405b33
  405abb:	ret    0x1487
  405abe:	pop    edi
  405abf:	test   DWORD PTR [esp+esi*8],0xf58e36b7
  405ac6:	neg    BYTE PTR [eax+0x74]
  405ac9:	in     eax,dx
  405aca:	mov    edi,0x2ee018a
  405acf:	retf   0xc9ff
  405ad2:	and    eax,0xed2d888b
  405ad7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ad8:	imul   esp,DWORD PTR [edi+0x789506f5],0x48
  405adf:	cmp    esp,DWORD PTR [eax-0x4d]
  405ae2:	pop    ebp
  405ae3:	aad    0x88
  405ae5:	dec    ebp
  405ae6:	mov    eax,ds:0xe15a3453
  405aeb:	sub    BYTE PTR [ecx+0x6b],0x93
  405aef:	call   0x395cbb0d
  405af4:	mov    ah,0x94
  405af6:	dec    esp
  405af7:	stos   DWORD PTR es:[edi],eax
  405af8:	shl    BYTE PTR ds:0x6a3741cb,0xb2
  405aff:	and    cl,dl
  405b01:	fdivrp st(2),st
  405b03:	mov    ebp,0xf1572548
  405b08:	enter  0x2636,0x57
  405b0c:	rcl    dl,0x5b
  405b0f:	pushf  
  405b10:	cmp    al,0xb9
  405b12:	sbb    esi,DWORD PTR cs:[eax+0x40a5b6da]
  405b19:	lock shr DWORD PTR [di+0x67],0x2a
  405b1f:	adc    dh,bh
  405b21:	(bad)  
  405b22:	(bad)  
  405b23:	in     al,0xe5
  405b25:	fdivr  QWORD PTR [esi+0xc6c154]
  405b2b:	nop
  405b2c:	mov    ah,0xd2
  405b2e:	iret   
  405b2f:	stos   DWORD PTR es:[edi],eax
  405b30:	out    0x4d,al
  405b32:	xchg   DWORD PTR [ecx-0x5],edi
  405b35:	les    ebx,FWORD PTR [edi]
  405b37:	pop    eax
  405b38:	sub    bl,BYTE PTR ds:0x51ccb897
  405b3e:	or     al,0x65
  405b40:	cwde   
  405b41:	inc    eax
  405b42:	mov    bh,0xb
  405b44:	sub    ch,BYTE PTR [esp+esi*2+0x3c]
  405b48:	mov    ebx,0xf33ebd52
  405b4d:	mov    ah,BYTE PTR [esi]
  405b4f:	gs out 0xd5,al
  405b52:	mov    bp,0x8c40
  405b56:	sub    DWORD PTR [ecx],ebp
  405b58:	jb     0x405bc2
  405b5a:	or     eax,0xe851a824
  405b5f:	mov    ch,0x6b
  405b61:	adc    BYTE PTR [eax-0x275a410d],ah
  405b67:	pop    esi
  405b68:	je     0x405b4a
  405b6a:	xor    ch,ah
  405b6c:	pop    edi
  405b6d:	mov    BYTE PTR [edi],cl
  405b6f:	fcomp  DWORD PTR [ebp-0x5dbb87a3]
  405b75:	aam    0x2f
  405b77:	dec    ecx
  405b78:	mov    dh,BYTE PTR [edx-0x406e7cc5]
  405b7e:	and    DWORD PTR [ebp-0x5fbe38dc],ecx
  405b84:	fcmovne st,st(5)
  405b86:	or     ah,ch
  405b88:	add    eax,0xd360f001
  405b8d:	fstp   TBYTE PTR [ebx-0xe5f98e0]
  405b93:	mov    ch,0x55
  405b95:	add    al,0x75
  405b97:	jge    0x405b81
  405b99:	push   edi
  405b9a:	gs int 0x39
  405b9d:	xor    ch,ah
  405b9f:	scas   eax,DWORD PTR es:[edi]
  405ba0:	not    BYTE PTR [eax]
  405ba2:	mov    eax,ds:0xf63e60be
  405ba7:	mov    ebp,0x91f20206
  405bac:	xchg   ebx,eax
  405bad:	fwait
  405bae:	pcmpgtd mm3,QWORD PTR [ebx+0x7e]
  405bb2:	test   dl,dl
  405bb4:	dec    ebx
  405bb5:	pop    es
  405bb6:	sbb    DWORD PTR [ecx],ecx
  405bb8:	retf   
  405bb9:	ret    
  405bba:	pop    es
  405bbb:	enter  0x8e52,0xc6
  405bbf:	cmp    eax,0x1a5aab2
  405bc4:	in     al,0x76
  405bc6:	mov    esi,0xf4b7547
  405bcb:	xor    bl,BYTE PTR [ecx-0x6d]
  405bce:	mov    DWORD PTR [edi],esp
  405bd0:	inc    edx
  405bd1:	xchg   edi,eax
  405bd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bd3:	fistp  QWORD PTR [esi-0x37]
  405bd6:	cmp    eax,0x9e7649ba
  405bdb:	out    dx,al
  405bdc:	int    0xd5
  405bde:	xor    al,0x59
  405be0:	xor    dh,BYTE PTR [ebx-0x531f4de5]
  405be6:	mov    dh,0xb
  405be8:	addr16 out dx,al
  405bea:	cs out dx,eax
  405bec:	dec    edx
  405bed:	or     DWORD PTR [ebx+edi*8+0x11],esp
  405bf1:	(bad)  [edi-0x20ca6cf8]
  405bf7:	inc    ecx
  405bf8:	in     eax,dx
  405bf9:	fld    DWORD PTR ds:0xd1cb85ed
  405bff:	add    ch,BYTE PTR [eax-0x40915385]
  405c05:	jne    0x405bd1
  405c07:	and    BYTE PTR [eax-0x3fafbdd8],ah
  405c0d:	(bad)
  405c11:	nop
  405c12:	test   eax,0x9329063a
  405c17:	inc    eax
  405c18:	mov    cl,0x1f
  405c1a:	cdq    
  405c1b:	jbe    0x405bf6
  405c1d:	lock out 0x5d,eax
  405c20:	fistp  DWORD PTR [edi]
  405c22:	enter  0x76c1,0x3e
  405c26:	sahf   
  405c27:	jmp    0x5dc4f335
  405c2c:	or     eax,0xe3baad6
  405c31:	jle    0x405c48
  405c33:	in     eax,dx
  405c34:	es iret 
  405c36:	loop   0x405c8c
  405c38:	xor    BYTE PTR [edx-0x60121288],0x75
  405c3f:	retf   
  405c40:	push   ss
  405c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c42:	sti    
  405c43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c44:	repz add ebp,DWORD PTR [eax]
  405c47:	jp     0x405beb
  405c49:	inc    edi
  405c4a:	imul   esi,DWORD PTR [edx-0x59],0x5d
  405c4e:	outs   dx,DWORD PTR ds:[esi]
  405c4f:	(bad)  
  405c50:	fisub  WORD PTR [edi]
  405c52:	pop    ss
  405c53:	jmp    0xafc4:0xa3920dcb
  405c5a:	inc    edi
  405c5b:	sub    al,0x74
  405c5d:	int    0xe4
  405c5f:	jp     0x405cd3
  405c61:	hlt    
  405c62:	dec    ebp
  405c63:	sbb    esi,DWORD PTR ds:0x5d0d619c
  405c69:	loop   0x405cb4
  405c6b:	aas    
  405c6c:	mov    ebx,0x6f5a6f07
  405c71:	pop    edi
  405c72:	push   esi
  405c73:	xor    ecx,DWORD PTR [edi]
  405c75:	xlat   BYTE PTR ds:[ebx]
  405c76:	mov    ebp,0x258cda4d
  405c7b:	fs cmp eax,0x9602dabf
  405c81:	cwde   
  405c82:	mov    al,fs:0xdad9bbf9
  405c88:	and    bl,al
  405c8a:	aam    0xd
  405c8c:	cwde   
  405c8d:	mov    al,0xf4
  405c8f:	xor    edx,edi
  405c91:	mov    al,ah
  405c93:	jp     0x405cde
  405c95:	cli    
  405c96:	(bad)  
  405c98:	outs   dx,DWORD PTR ds:[esi]
  405c99:	push   esp
  405c9a:	cld    
  405c9b:	nop
  405c9c:	pop    esi
  405c9d:	push   esp
  405c9e:	push   ss
  405c9f:	leave  
  405ca0:	and    al,0xb9
  405ca2:	inc    ebp
  405ca3:	mov    al,ds:0x3fc73696
  405ca8:	shl    DWORD PTR [ecx],1
  405caa:	pop    edx
  405cab:	je     0x405c97
  405cad:	pop    esp
  405cae:	mov    ah,0x6f
  405cb0:	and    BYTE PTR [ebx],al
  405cb2:	retf   
  405cb3:	adc    DWORD PTR [ebx+eax*4],0xfffffffe
  405cb7:	pop    ebp
  405cb8:	test   DWORD PTR [esi-0x49416904],eax
  405cbe:	xlat   BYTE PTR ds:[ebx]
  405cbf:	in     eax,0x6d
  405cc1:	sbb    ebp,DWORD PTR [ecx-0x2b863dda]
  405cc7:	sti    
  405cc8:	test   BYTE PTR [esi],dl
  405cca:	push   esp
  405ccb:	push   eax
  405ccc:	or     edx,DWORD PTR [ecx]
  405cce:	adc    eax,0x1c138236
  405cd3:	not    bh
  405cd5:	lock cmc 
  405cd7:	ret    
  405cd8:	cli    
  405cd9:	push   eax
  405cda:	rcr    BYTE PTR [esi+0x25746caa],1
  405ce0:	jle    0x405c72
  405ce2:	test   BYTE PTR [esp+edi*8-0x6],ah
  405ce6:	hlt    
  405ce7:	adc    eax,0x6274ffd
  405cec:	mov    edi,0x72fd76f9
  405cf1:	repnz pop ss
  405cf3:	stos   BYTE PTR es:[edi],al
  405cf4:	sbb    ebp,DWORD PTR [edi+0x71]
  405cf7:	push   ds
  405cf8:	xchg   DWORD PTR ds:0x5f9f9405,eax
  405cfe:	sbb    eax,0x3dc3095a
  405d03:	call   0x9797:0xfe071c53
  405d0a:	xlat   BYTE PTR ss:[ebx]
  405d0c:	repz xor DWORD PTR [edx],0x10947c84
  405d13:	gs mov dl,0x77
  405d16:	push   eax
  405d17:	mov    bl,0xc9
  405d19:	adc    eax,0xb85c6c78
  405d1e:	scas   al,BYTE PTR es:[edi]
  405d1f:	fiadd  WORD PTR ss:[eax]
  405d22:	mov    eax,0x36dac84c
  405d27:	(bad)  
  405d28:	push   ecx
  405d29:	ret    0x2056
  405d2c:	sbb    al,0xac
  405d2e:	push   0xbb56d36b
  405d33:	cwde   
  405d34:	jmp    0x405cdc
  405d36:	mov    al,ds:0xf573cb92
  405d3b:	fistp  QWORD PTR [esi]
  405d3d:	or     al,bh
  405d3f:	inc    ecx
  405d40:	out    dx,eax
  405d41:	scas   eax,DWORD PTR es:[edi]
  405d42:	fld    st(1)
  405d44:	aas    
  405d45:	test   BYTE PTR ds:0x6285ba8b,dh
  405d4b:	ss mov esp,0x4f4bf3cc
  405d51:	mov    dl,0xc0
  405d53:	xor    ecx,DWORD PTR [ebx-0x51]
  405d56:	xor    DWORD PTR [esi],edi
  405d58:	adc    BYTE PTR [edx+edi*2+0x7f],ch
  405d5c:	adc    eax,0x2c1ba67d
  405d61:	sbb    eax,0xa11732a1
  405d66:	or     ecx,esp
  405d68:	mul    BYTE PTR [esi-0x10f7af2d]
  405d6e:	and    BYTE PTR [ecx+0xe],dl
  405d71:	test   eax,0x2079464c
  405d76:	pop    ebx
  405d77:	fistp  DWORD PTR [edx+ecx*2-0xe1f9799]
  405d7e:	sar    DWORD PTR [ecx+0x62],0x2b
  405d82:	or     bh,dh
  405d84:	repnz outs dx,DWORD PTR ds:[esi]
  405d86:	add    esp,edx
  405d88:	push   ds
  405d89:	dec    eax
  405d8a:	mov    ds:0x1b63b517,eax
  405d8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d90:	or     esi,DWORD PTR ds:0xab8cfdb3
  405d96:	std    
  405d97:	test   eax,0x5e98fd92
  405d9c:	push   ss
  405d9d:	dec    esi
  405d9e:	cmp    al,0x3d
  405da0:	cmp    al,0xde
  405da2:	aaa    
  405da3:	cmp    al,0x65
  405da5:	push   ds
  405da6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405da7:	je     0x405de3
  405da9:	lds    ebx,FWORD PTR [esi]
  405dab:	fwait
  405dac:	aam    0x11
  405dae:	cwde   
  405daf:	jns    0x405d3e
  405db1:	stc    
  405db2:	sti    
  405db3:	mov    ah,0x83
  405db5:	sbb    al,0xf3
  405db7:	adc    DWORD PTR [ebx],ebp
  405db9:	int3   
  405dba:	scas   eax,DWORD PTR es:[edi]
  405dbb:	fldcw  WORD PTR [ecx+0x8]
  405dbe:	fdivr  DWORD PTR [esi+0x35ef5723]
  405dc4:	pusha  
  405dc5:	(bad)  
  405dc7:	pop    ecx
  405dc8:	ja     0x405d76
  405dca:	sbb    DWORD PTR [edi+ebx*4-0x2f],edx
  405dce:	in     al,0x70
  405dd0:	int    0x6d
  405dd2:	test   BYTE PTR [eax-0x47],bh
  405dd5:	shl    cl,cl
  405dd7:	and    DWORD PTR [esi+ebp*8],0xfffffff1
  405ddb:	xchg   ecx,eax
  405ddc:	inc    eax
  405ddd:	cld    
  405dde:	mov    ecx,0x9ba99785
  405de3:	pop    ss
  405de4:	or     eax,0xa0770266
  405de9:	mov    dh,0xd0
  405deb:	inc    edi
  405dec:	dec    esi
  405ded:	and    eax,0x14a45552
  405df2:	jbe    0x405e44
  405df4:	gs call 0x7a238bcc
  405dfa:	les    edi,FWORD PTR [eax+0x78]
  405dfd:	jmp    0x405dd2
  405dff:	sub    bl,BYTE PTR [eax-0x1317ad9d]
  405e05:	repz inc ebp
  405e07:	cld    
  405e08:	ret    0xace7
  405e0b:	jg     0x405e82
  405e0d:	inc    edx
  405e0e:	cmp    eax,0xd168c905
  405e13:	mov    al,ds:0x526b046a
  405e18:	jo     0x405e66
  405e1a:	rcr    ch,1
  405e1c:	cs scas eax,DWORD PTR es:[edi]
  405e1e:	inc    ebp
  405e1f:	cmc    
  405e20:	mov    ebx,0x3cc92317
  405e25:	scas   eax,DWORD PTR es:[edi]
  405e26:	jo     0x405e81
  405e28:	fild   DWORD PTR [edx+0x51]
  405e2b:	fs dec esp
  405e2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e2e:	push   ecx
  405e2f:	cmp    al,0x9a
  405e31:	and    ah,BYTE PTR [ebp-0x48]
  405e34:	sahf   
  405e35:	and    bh,bh
  405e37:	retf   0xe467
  405e3a:	sbb    al,0x48
  405e3c:	mov    ebx,0x7e2f7dd8
  405e41:	adc    ebx,DWORD PTR [edx-0x1]
  405e44:	(bad)
  405e47:	mov    al,0x33
  405e49:	(bad)  
  405e4a:	adc    eax,0x179fe415
  405e4f:	imul   ebp,eax,0x68
  405e52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e53:	xchg   ebp,eax
  405e54:	or     eax,0x18288ecd
  405e59:	sar    DWORD PTR [ecx],cl
  405e5b:	sti    
  405e5c:	mov    ebp,0x7234df
  405e61:	sbb    al,0x38
  405e63:	inc    eax
  405e64:	call   0xed68d3ed
  405e69:	or     ebx,ecx
  405e6b:	sbb    al,0x3c
  405e6d:	xchg   BYTE PTR [eax-0x21476bae],bl
  405e73:	sbb    BYTE PTR [ebx+ebx*8],cl
  405e76:	cmovno esi,DWORD PTR [ebp*2+0x225d76a4]
  405e7e:	mov    ds:0x73941fb8,eax
  405e83:	pop    ss
  405e84:	sti    
  405e85:	stc    
  405e86:	inc    ebx
  405e87:	enter  0x789,0x18
  405e8b:	lods   al,BYTE PTR ds:[esi]
  405e8c:	push   edi
  405e8d:	les    edi,FWORD PTR [ebp-0x49cf3ee0]
  405e93:	push   edx
  405e94:	sti    
  405e95:	sbb    eax,0xd64749a8
  405e9a:	sub    ecx,eax
  405e9c:	call   0x8e7f842c
  405ea1:	call   FWORD PTR [ebx+0x79770c3b]
  405ea7:	add    ebx,DWORD PTR [eax]
  405ea9:	loope  0x405ec7
  405eab:	vpunpcklqdq xmm2,xmm0,XMMWORD PTR [edx]
  405eaf:	ins    DWORD PTR es:[edi],dx
  405eb0:	jle    0x405f01
  405eb2:	mov    ds,WORD PTR [edx+0x46b5cfed]
  405eb8:	dec    esp
  405eb9:	pop    ebx
  405eba:	js     0x405e6b
  405ebc:	xchg   ecx,eax
  405ebd:	or     dh,BYTE PTR [eax-0x7fdce824]
  405ec3:	add    cl,dl
  405ec5:	xor    ebx,esp
  405ec7:	mov    dh,0x6f
  405ec9:	mov    esp,0x69206aba
  405ece:	(bad)  
  405ecf:	dec    BYTE PTR [esi+0x53755734]
  405ed5:	pop    esi
  405ed6:	push   0x4dc64ebb
  405edb:	ins    BYTE PTR es:[edi],dx
  405edc:	int    0x98
  405ede:	sbb    ecx,DWORD PTR [eax]
  405ee0:	fdivr  DWORD PTR [eax+0x8]
  405ee3:	adc    ecx,esp
  405ee5:	outs   dx,DWORD PTR ds:[esi]
  405ee6:	int3   
  405ee7:	addr16 push esp
  405ee9:	jle    0x405f1a
  405eeb:	stc    
  405eec:	push   esi
  405eed:	jg     0x405f10
  405eef:	hlt    
  405ef0:	mov    edx,0x91973325
  405ef5:	call   ecx
  405ef7:	sti    
  405ef8:	jb     0x405f3d
  405efa:	jmp    0x405f06
  405efc:	xchg   ebp,eax
  405efd:	bound  edx,QWORD PTR [esi+0x2f]
  405f00:	data16 jp 0x405e97
  405f03:	xchg   DWORD PTR [edi-0x14],edx
  405f06:	inc    ecx
  405f07:	stos   BYTE PTR es:[edi],al
  405f08:	outs   dx,BYTE PTR ds:[esi]
  405f09:	pusha  
  405f0a:	sub    ch,BYTE PTR [eax]
  405f0c:	jb     0x405efc
  405f0e:	pushf  
  405f0f:	mov    BYTE PTR [ecx-0x64],ah
  405f12:	ja     0x405f2e
  405f14:	pop    ds
  405f15:	(bad)
  405f1a:	daa    
  405f1b:	mov    ebp,0x88ee78b7
  405f20:	rol    DWORD PTR [ecx],1
  405f22:	rol    eax,0x31
  405f25:	jno    0x405f6c
  405f27:	mov    ebp,0xc17185f7
  405f2c:	ret    0x83c0
  405f2f:	ret    0xdbdf
  405f32:	adc    bh,dl
  405f34:	pop    ecx
  405f35:	mov    BYTE PTR [ecx-0x48bb17e3],bl
  405f3b:	inc    ebx
  405f3c:	popf   
  405f3d:	mov    dl,0xd4
  405f3f:	pushf  
  405f40:	jecxz  0x405ed5
  405f42:	icebp  
  405f43:	call   0x550e:0x14027617
  405f4a:	dec    esi
  405f4b:	ja     0x405fb6
  405f4d:	xchg   edi,eax
  405f4e:	in     eax,dx
  405f4f:	xchg   DWORD PTR [esp+eiz*4-0x4],esp
  405f53:	data16 int 0xfb
  405f56:	and    edx,edx
  405f58:	std    
  405f59:	outs   dx,BYTE PTR ds:[esi]
  405f5a:	push   edx
  405f5b:	push   ebp
  405f5c:	pop    edx
  405f5d:	xor    al,0x20
  405f5f:	cld    
  405f60:	popf   
  405f61:	je     0x405f6f
  405f63:	ja     0x405fbd
  405f65:	bound  esp,QWORD PTR [ebx+0x7c]
  405f68:	pop    eax
  405f69:	and    bh,dh
  405f6b:	add    BYTE PTR [ebx-0x1],dh
  405f6e:	call   0x32ac:0x3733deab
  405f75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f76:	cdq    
  405f77:	in     al,0xba
  405f79:	int3   
  405f7a:	addr16 mov esp,edx
  405f7d:	jae    0x405f43
  405f7f:	loope  0x405f50
  405f81:	mov    DWORD PTR [ecx+0x17558224],ebx
  405f87:	adc    eax,ebx
  405f89:	mov    eax,0x40d3d849
  405f8e:	rol    bl,1
  405f90:	lods   al,BYTE PTR ds:[esi]
  405f91:	or     eax,0x6ec9e0ba
  405f96:	xchg   ecx,eax
  405f97:	into   
  405f98:	mov    bh,0xe8
  405f9a:	push   eax
  405f9b:	es jne 0x405ffe
  405f9e:	sbb    eax,DWORD PTR [ecx+0x0]
  405fa1:	adc    DWORD PTR [esi],ebx
  405fa3:	pop    esi
  405fa4:	xor    dl,BYTE PTR [edi]
  405fa6:	(bad)  
  405fa7:	scas   al,BYTE PTR es:[edi]
  405fa8:	or     al,BYTE PTR [edi]
  405faa:	or     eax,0xb92706df
  405faf:	mov    esi,0x269fe3ee
  405fb4:	bound  edi,QWORD PTR [ebp+0x0]
  405fb7:	cld    
  405fb8:	call   0x3a1f:0xa955b7d5
  405fbf:	xor    al,0x31
  405fc1:	sbb    DWORD PTR [edi+ecx*4],0xffffff8b
  405fc5:	popa   
  405fc6:	loop   0x405fa3
  405fc8:	lds    edi,FWORD PTR [ebp-0x28]
  405fcb:	mov    ecx,0x434ced25
  405fd0:	call   0xac1a9219
  405fd5:	fstp   QWORD PTR ds:0xc4ed671c
  405fdb:	sub    ecx,DWORD PTR [ecx+ebx*2+0xa]
  405fdf:	sar    DWORD PTR [esi],0x91
  405fe2:	ret    
  405fe3:	pop    edi
  405fe4:	add    DWORD PTR [edi+0x1ebcf380],0x2e
  405feb:	stos   BYTE PTR es:[edi],al
  405fec:	mov    ebx,0x28be853b
  405ff1:	push   ebp
  405ff2:	push   ebp
  405ff3:	dec    ecx
  405ff4:	mov    bh,0x18
  405ff6:	pop    ebp
  405ff7:	(bad)  
  405ff9:	loope  0x406040
  405ffb:	dec    ebp
  405ffc:	add    cl,BYTE PTR [esi]
  405ffe:	js     0x40602d
  406000:	leave  
  406001:	loope  0x405fe9
  406003:	test   DWORD PTR [ebp+eax*4+0x49486eb],eax
  40600a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40600b:	data16 mov cl,0x5b
  40600e:	jae    0x406041
  406010:	sub    BYTE PTR [esi+0xf07fa82],bh
  406016:	add    al,0x28
  406018:	icebp  
  406019:	xor    al,0x0
  40601b:	pusha  
  40601c:	add    dh,BYTE PTR [ebx-0x3]
  40601f:	mov    fs,eax
  406021:	sbb    eax,DWORD PTR [ebx+ebx*8]
  406024:	es ins BYTE PTR es:[edi],dx
  406026:	push   0xffffffea
  406028:	dec    ecx
  406029:	hlt    
  40602a:	xchg   ebp,eax
  40602b:	int    0xff
  40602d:	shl    DWORD PTR [ebx-0x70],cl
  406030:	add    al,0x77
  406032:	cmp    al,0x18
  406034:	std    
  406035:	test   eax,0x33a5be9b
  40603a:	mov    BYTE PTR [ebx],0xc7
  40603d:	cmp    edx,eax
  40603f:	je     0x408557
  406045:	mov    eax,DWORD PTR [ebp-0x8]
  406048:	mov    DWORD PTR [ebp-0x18],eax
  40604b:	mov    eax,DWORD PTR [ebp-0x10]
  40604e:	add    eax,DWORD PTR [ebp-0x54]
  406051:	mov    DWORD PTR [ebp-0x1c],0xf89c85a1
  406058:	mov    DWORD PTR [ebp-0x8],eax
  40605b:	mov    eax,0xf89c85a2
  406060:	mov    DWORD PTR [ebp-0x28],eax
  406063:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  40606a:	mov    DWORD PTR [ebp-0x40],0xf89c85bc
  406071:	mov    DWORD PTR [ebp-0x30],eax
  406074:	mov    eax,DWORD PTR [ebp-0x1c]
  406077:	xor    eax,esi
  406079:	add    eax,edi
  40607b:	jmp    0x408513
  406080:	mov    DWORD PTR [ebp-0x4c],0xf89c85b4
  406087:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  40608e:	mov    eax,DWORD PTR [ebp-0x30]
  406091:	mov    edx,DWORD PTR [ebp-0xc]
  406094:	xor    eax,esi
  406096:	add    eax,edi
  406098:	imul   eax,edx
  40609b:	mov    edx,DWORD PTR [ebp-0x8]
  40609e:	mov    al,BYTE PTR [eax+edx*1]
  4060a1:	mov    BYTE PTR [ebp-0x1],al
  4060a4:	mov    eax,DWORD PTR [ebp-0x30]
  4060a7:	mov    edx,DWORD PTR [ebp-0xc]
  4060aa:	xor    eax,esi
  4060ac:	add    eax,edi
  4060ae:	imul   eax,edx
  4060b1:	mov    edx,DWORD PTR [ebp-0x5c]
  4060b4:	xor    edx,esi
  4060b6:	add    eax,edx
  4060b8:	mov    edx,DWORD PTR [ebp-0x8]
  4060bb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  4060c3:	mov    edx,DWORD PTR [ebp-0x4c]
  4060c6:	xor    edx,esi
  4060c8:	lea    eax,[edx+eax*1+0x3272f3]
  4060cf:	movzx  edx,BYTE PTR [ebp-0x1]
  4060d3:	xor    edx,eax
  4060d5:	mov    BYTE PTR [ebp-0x1],dl
  4060d8:	mov    al,BYTE PTR [ebp-0x1]
  4060db:	mov    edx,DWORD PTR [ebp-0x30]
  4060de:	mov    ebx,DWORD PTR [ebp-0xc]
  4060e1:	xor    edx,esi
  4060e3:	add    edx,edi
  4060e5:	imul   edx,ebx
  4060e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4060eb:	mov    BYTE PTR [edx+ebx*1],al
  4060ee:	mov    eax,DWORD PTR [ebp-0x30]
  4060f1:	mov    edx,DWORD PTR [ebp-0xc]
  4060f4:	xor    eax,esi
  4060f6:	add    eax,edi
  4060f8:	imul   eax,edx
  4060fb:	mov    edx,DWORD PTR [ebp-0x8]
  4060fe:	mov    al,BYTE PTR [eax+edx*1]
  406101:	mov    BYTE PTR [ebp-0x1],al
  406104:	mov    eax,DWORD PTR [ebp-0x30]
  406107:	mov    edx,DWORD PTR [ebp-0xc]
  40610a:	xor    eax,esi
  40610c:	add    eax,edi
  40610e:	imul   eax,edx
  406111:	mov    edx,DWORD PTR [ebp-0x28]
  406114:	xor    edx,esi
  406116:	add    eax,edx
  406118:	mov    edx,DWORD PTR [ebp-0x8]
  40611b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  406123:	mov    edx,DWORD PTR [ebp-0x50]
  406126:	xor    edx,esi
  406128:	lea    eax,[edx+eax*1+0x3272f3]
  40612f:	movzx  edx,BYTE PTR [ebp-0x1]
  406133:	xor    edx,eax
  406135:	mov    BYTE PTR [ebp-0x1],dl
  406138:	mov    al,BYTE PTR [ebp-0x1]
  40613b:	mov    edx,DWORD PTR [ebp-0x30]
  40613e:	mov    ebx,DWORD PTR [ebp-0xc]
  406141:	xor    edx,esi
  406143:	add    edx,edi
  406145:	imul   edx,ebx
  406148:	mov    ebx,DWORD PTR [ebp-0x8]
  40614b:	jmp    0x4084fc
  406150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406151:	mov    dh,0x7b
  406153:	sbb    eax,0x86859860
  406158:	scas   eax,DWORD PTR es:[edi]
  406159:	mov    cl,0xac
  40615b:	nop
  40615c:	lea    eax,[esi]
  40615e:	cmp    bh,BYTE PTR [ebx+ebx*2+0x38]
  406162:	add    DWORD PTR [ebx-0x7c7ca311],0x4b
  406169:	popf   
  40616a:	imul   ebp,DWORD PTR [edx],0x32
  40616d:	test   DWORD PTR [ecx+eiz*2+0x6],0xb1fb0a16
  406175:	inc    esi
  406176:	rcr    dl,cl
  406178:	adc    BYTE PTR [edx+eax*2+0x7df9645a],ch
  40617f:	cmp    DWORD PTR [edi+0x1f189661],edi
  406185:	rol    BYTE PTR [eax],cl
  406187:	in     eax,dx
  406188:	mov    esi,0x509459ee
  40618d:	adc    al,0xcf
  40618f:	ins    DWORD PTR es:[edi],dx
  406190:	aad    0xcc
  406192:	mov    eax,0x7ae40862
  406197:	mov    edi,0x582a37d0
  40619c:	sub    ebx,DWORD PTR [ebx-0x1c]
  40619f:	pusha  
  4061a0:	shr    DWORD PTR [ebp-0x27],cl
  4061a3:	mov    ebx,0x5047687f
  4061a8:	mov    ecx,0x7fb4f298
  4061ad:	mov    edi,DWORD PTR [esi-0x796c7471]
  4061b3:	dec    esi
  4061b4:	inc    ecx
  4061b5:	jae    0x4061d5
  4061b7:	sub    al,0x54
  4061b9:	jbe    0x406171
  4061bb:	xchg   ecx,eax
  4061bc:	jmp    0xc914:0xd5fa386f
  4061c3:	(bad)  
  4061c4:	(bad)  
  4061c5:	test   eax,0x1a868a59
  4061ca:	nop
  4061cb:	dec    edx
  4061cc:	je     0x406176
  4061ce:	xor    al,0xa0
  4061d0:	ins    BYTE PTR es:[edi],dx
  4061d1:	adc    ah,BYTE PTR [edx]
  4061d3:	loopne 0x40620d
  4061d5:	(bad)  
  4061d6:	data16 icebp 
  4061d8:	inc    edx
  4061d9:	retf   
  4061da:	mov    ds,WORD PTR gs:[ebp-0x7b]
  4061de:	test   DWORD PTR [eax],edx
  4061e0:	push   0x1e
  4061e2:	dec    ebx
  4061e3:	push   edi
  4061e4:	mov    ebx,DWORD PTR [ecx]
  4061e6:	adc    dh,al
  4061e8:	dec    ecx
  4061e9:	xor    bh,cl
  4061eb:	aad    0xe
  4061ed:	mov    ebx,0x7cb2470c
  4061f2:	mov    ecx,0x4ba21828
  4061f7:	into   
  4061f8:	fs je  0x406278
  4061fb:	out    0x81,eax
  4061fd:	(bad)  
  4061fe:	adc    BYTE PTR [ebx+0xaa89d2d],dl
  406204:	jge    0x406198
  406206:	sahf   
  406207:	jmp    0x4061b3
  406209:	clc    
  40620a:	mov    bl,0xc3
  40620c:	inc    esi
  40620d:	add    eax,0x7844011b
  406212:	push   esi
  406213:	xchg   edx,eax
  406214:	cmp    dh,al
  406216:	mov    ds:0xb47ce2e6,al
  40621b:	adc    BYTE PTR [eax+edx*4],bl
  40621e:	jge    0x4061cd
  406220:	cmp    BYTE PTR [edx+0x4c308492],al
  406226:	jns    0x406211
  406228:	add    ecx,DWORD PTR [ebx]
  40622a:	int3   
  40622b:	xchg   edi,eax
  40622c:	rcr    edi,1
  40622e:	xor    ah,BYTE PTR [ecx+0x1793bbd6]
  406234:	clc    
  406235:	or     ebp,ebp
  406237:	jno    0x406225
  406239:	push   ecx
  40623a:	inc    edi
  40623b:	inc    ebx
  40623c:	push   ss
  40623d:	push   edi
  40623e:	xchg   esp,eax
  40623f:	out    dx,al
  406240:	lock pop eax
  406242:	xor    dl,bl
  406244:	mov    ebp,ebx
  406246:	loope  0x40623a
  406248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406249:	mov    al,0xdd
  40624b:	mov    al,0xd4
  40624d:	xchg   ebx,eax
  40624e:	add    cl,0x0
  406251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406252:	arpl   WORD PTR [eax],bx
  406254:	inc    ebp
  406255:	jns    0x406264
  406257:	inc    edx
  406258:	ficomp WORD PTR [esi-0x3b7d4430]
  40625e:	dec    edi
  40625f:	jnp    0x406232
  406261:	je     0x40624f
  406263:	inc    ebx
  406264:	mov    esi,0x1b192ef9
  406269:	(bad)  
  40626b:	dec    ecx
  40626c:	and    al,0xb
  40626e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40626f:	mov    ch,0xdf
  406271:	or     dh,BYTE PTR [ebx]
  406273:	cmp    BYTE PTR [esi+0x6d],dl
  406276:	sbb    bh,ch
  406278:	xor    DWORD PTR [eax-0x9],ecx
  40627b:	cmp    DWORD PTR ds:0xf150b70b,edi
  406281:	sub    ah,ah
  406283:	mov    ch,0x70
  406285:	daa    
  406286:	add    BYTE PTR [ebx+0xa],cl
  406289:	adc    ch,cl
  40628b:	mov    dl,BYTE PTR [ecx-0x7cf1b101]
  406291:	mov    ecx,esi
  406293:	out    0x91,eax
  406295:	cdq    
  406296:	pop    ebp
  406297:	and    edx,DWORD PTR [ebp-0x6]
  40629a:	test   BYTE PTR [edi+0x32],cl
  40629d:	(bad)
  4062a1:	mov    al,0x90
  4062a3:	push   edx
  4062a4:	loop   0x4062d8
  4062a6:	mov    al,ds:0x3d0a9684
  4062ab:	test   DWORD PTR [edi+0x2],ecx
  4062ae:	or     bh,dl
  4062b0:	gs stos DWORD PTR es:[edi],eax
  4062b2:	dec    ecx
  4062b3:	add    dl,bh
  4062b5:	jmp    0x91bfd0ea
  4062ba:	and    BYTE PTR ds:[esi+0x2422fe95],0x55
  4062c2:	push   ds
  4062c3:	add    ebp,DWORD PTR [eax-0x3de159c]
  4062c9:	arpl   WORD PTR [ebp+0x57],di
  4062cc:	mov    ebx,0x79b485bd
  4062d1:	jb     0x406305
  4062d3:	jge    0x406310
  4062d5:	ds retf 
  4062d7:	inc    esp
  4062d8:	lock stos DWORD PTR es:[edi],eax
  4062da:	xor    al,0x6a
  4062dc:	mov    dh,0x71
  4062de:	and    DWORD PTR [edi+ebp*8-0x3bad90fc],0xf87fb3a0
  4062e9:	mov    BYTE PTR [eax],bh
  4062eb:	imul   ecx,DWORD PTR [esi+0xb8afcaa],0xffffffba
  4062f2:	add    edi,edi
  4062f4:	out    dx,eax
  4062f5:	inc    esp
  4062f6:	js     0x406326
  4062f8:	enter  0xea6,0x28
  4062fc:	stos   DWORD PTR es:[edi],eax
  4062fd:	gs sbb cl,al
  406300:	fdivr  DWORD PTR [esi+0x35286fcb]
  406306:	lea    edx,ds:0x6578090d
  40630c:	ds adc bl,ch
  40630f:	jbe    0x4062a8
  406311:	jg     0x4062e0
  406313:	aaa    
  406314:	mov    ah,ch
  406316:	inc    edx
  406317:	pop    bx
  406319:	jg     0x406391
  40631b:	ret    
  40631c:	fild   QWORD PTR [edi+0x403ad48]
  406322:	hlt    
  406323:	lds    edi,FWORD PTR [ebx]
  406325:	lds    ebp,FWORD PTR [eax]
  406327:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406328:	int    0x9e
  40632a:	pop    edi
  40632b:	jge    0x40636f
  40632d:	inc    ebp
  40632e:	ss sbb ch,ch
  406331:	inc    ecx
  406332:	aam    0x19
  406334:	push   0xac481c54
  406339:	dec    ebp
  40633a:	cli    
  40633b:	mov    eax,ds:0xcc1f6b41
  406340:	in     eax,dx
  406341:	ds push ds
  406343:	sbb    al,0x23
  406345:	mov    ebx,0xa037e52d
  40634a:	xor    eax,0x732fe03b
  40634f:	cs loopne 0x4062df
  406352:	mov    ch,0x3f
  406354:	iret   
  406355:	mov    esp,0x74ecd3dc
  40635a:	js     0x406347
  40635c:	out    dx,eax
  40635d:	ficomp WORD PTR [edx-0x40]
  406360:	push   ds
  406361:	and    dl,cl
  406363:	xor    cl,BYTE PTR [eax+0x5d]
  406366:	popa   
  406367:	ds daa 
  406369:	lock cmp al,0x4
  40636c:	inc    esp
  40636d:	mov    al,0xe4
  40636f:	jmp    0x8dd157ce
  406374:	mov    dl,0x31
  406376:	fadd   QWORD PTR [eax]
  406378:	call   0x49952b8a
  40637d:	sub    al,0xd5
  40637f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406380:	mov    ch,0x16
  406382:	jecxz  0x4063f4
  406384:	and    DWORD PTR [eax],esp
  406386:	sub    al,0x30
  406388:	les    dx,DWORD PTR [ebp+0x31]
  40638c:	mov    DWORD PTR [ecx-0x63],eax
  40638f:	or     al,0xd0
  406391:	mov    ecx,ss
  406393:	sbb    BYTE PTR [edi],cl
  406395:	adc    eax,0xdcb4f2a3
  40639a:	stc    
  40639b:	out    dx,al
  40639c:	repnz (bad) 
  40639f:	push   ecx
  4063a0:	push   0xdaeb737a
  4063a5:	fst    DWORD PTR [eax+0x4f2db18a]
  4063ab:	cmp    esp,ebx
  4063ad:	push   edi
  4063ae:	test   eax,0xf8acde1d
  4063b3:	and    dh,ch
  4063b5:	mov    bl,0x1e
  4063b7:	rcr    edi,0xab
  4063ba:	pop    ds
  4063bb:	bound  edi,QWORD PTR [edi+esi*1-0x3b]
  4063bf:	fisubr WORD PTR [edi+ecx*8+0x2b3f8689]
  4063c6:	clc    
  4063c7:	jl     0x406382
  4063c9:	dec    ebp
  4063ca:	add    al,0xb8
  4063cc:	ins    DWORD PTR es:[edi],dx
  4063cd:	sahf   
  4063ce:	lods   al,BYTE PTR ds:[esi]
  4063cf:	mov    gs,WORD PTR [eax+0x34]
  4063d2:	pop    ss
  4063d3:	rcl    BYTE PTR [ebx+ebp*4+0x7a],1
  4063d7:	pop    edx
  4063d8:	bound  ebp,QWORD PTR [eax-0x48]
  4063db:	aam    0x96
  4063dd:	mov    edi,edi
  4063df:	jae    0x406367
  4063e1:	sahf   
  4063e2:	mov    ecx,0x896113fd
  4063e7:	xchg   DWORD PTR [edi-0x6d42af6a],eax
  4063ed:	dec    ebx
  4063ee:	idiv   DWORD PTR [esi-0x29316a7]
  4063f4:	inc    esi
  4063f5:	test   al,0x55
  4063f7:	cmp    DWORD PTR [edx],eax
  4063f9:	(bad)  
  4063fa:	push   0xa7643dd
  4063ff:	push   es
  406400:	lods   eax,DWORD PTR ds:[esi]
  406401:	jae    0x4063a6
  406403:	dec    esi
  406404:	out    dx,eax
  406405:	aam    0x6e
  406407:	mov    al,ds:0x7aa410c7
  40640c:	aas    
  40640d:	add    esp,DWORD PTR [edx+ebx*1+0x22]
  406411:	mov    BYTE PTR [edx-0x9e3f36],al
  406417:	sbb    esi,ebx
  406419:	(bad)  
  40641a:	scas   eax,DWORD PTR es:[edi]
  40641b:	(bad)  
  40641c:	push   ss
  40641d:	neg    DWORD PTR [edx-0x68]
  406420:	popa   
  406421:	sar    ecx,cl
  406423:	adc    BYTE PTR [esi-0x544dfe07],bl
  406429:	aas    
  40642a:	mov    esi,0x7055593e
  40642f:	pop    ebx
  406430:	mov    bl,0xe0
  406432:	neg    DWORD PTR ds:0xb0e35e0
  406438:	stos   BYTE PTR es:[edi],al
  406439:	rcl    BYTE PTR [edi],cl
  40643b:	imul   ebx,DWORD PTR [eax*8-0x21810993],0xca9041f1
  406446:	mov    ecx,0x39f038c6
  40644b:	cdq    
  40644c:	sub    DWORD PTR [eax-0x28f97c2a],ecx
  406452:	test   al,0xe7
  406454:	dec    edx
  406455:	xchg   DWORD PTR [ebx+0x71467be4],ebx
  40645b:	pop    ebx
  40645c:	dec    BYTE PTR ds:0x403a2440
  406462:	lea    ebx,[edi]
  406464:	push   ebp
  406465:	not    BYTE PTR [ecx+0x3bb01418]
  40646b:	aaa    
  40646c:	or     DWORD PTR [edi+eiz*4+0x26],0x51f4d962
  406474:	inc    ecx
  406475:	out    0xff,eax
  406477:	pushf  
  406478:	sub    ch,bl
  40647a:	mov    ah,BYTE PTR [ebp-0x339d0df3]
  406480:	add    BYTE PTR [edi],cl
  406482:	shl    DWORD PTR [ebx+esi*8+0xea49a7],1
  406489:	lods   al,BYTE PTR ds:[esi]
  40648a:	mov    al,ds:0xb1c10ead
  40648f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406490:	imul   eax,edi,0x4dedb0d7
  406496:	stc    
  406497:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406498:	pop    ebx
  406499:	(bad)  
  40649a:	dec    edi
  40649b:	push   edx
  40649c:	cmp    dl,BYTE PTR [eax]
  40649e:	jae    0x40648a
  4064a0:	mov    bl,0xe6
  4064a2:	mov    ch,0x20
  4064a4:	mov    ecx,0xe0cc3f19
  4064a9:	inc    edi
  4064aa:	test   DWORD PTR [edx+0x48],ebx
  4064ad:	mov    ebp,0xd6cce5dc
  4064b2:	pusha  
  4064b3:	push   cs
  4064b4:	out    dx,eax
  4064b5:	xchg   esi,eax
  4064b6:	mov    eax,ds:0x21972139
  4064bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064bc:	cmp    ebp,DWORD PTR [edx-0x2d]
  4064bf:	pop    ds
  4064c0:	test   eax,0xf2bc0c31
  4064c5:	mov    esp,0xf2e70b4c
  4064ca:	enter  0x1a2,0x2e
  4064ce:	push   edx
  4064cf:	push   0xffffffae
  4064d1:	daa    
  4064d2:	xor    BYTE PTR [esi+0x5d],0xe7
  4064d6:	sbb    BYTE PTR [esi],dh
  4064d8:	addr16 sub al,0xf7
  4064db:	push   ebp
  4064dc:	out    0xf5,eax
  4064de:	sti    
  4064df:	cmp    ch,BYTE PTR [ebx+0x48]
  4064e2:	jecxz  0x4064e0
  4064e4:	pop    edx
  4064e5:	lds    ecx,FWORD PTR [edx-0x7ea169a6]
  4064eb:	sub    BYTE PTR [ebp+0x1f146230],bh
  4064f1:	mov    bh,BYTE PTR [eax-0x52]
  4064f4:	dec    ebx
  4064f5:	and    eax,0xab27d90f
  4064fa:	cmp    DWORD PTR [edx],ecx
  4064fc:	xor    eax,0x7c
  4064ff:	push   edi
  406500:	mov    bl,0x1a
  406502:	and    ebx,0x7cd976e7
  406508:	push   0xeec3945
  40650d:	lahf   
  40650e:	(bad)  
  40650f:	sbb    esp,ebp
  406511:	rep ins BYTE PTR es:[edi],dx
  406513:	mov    dl,0xda
  406515:	rcr    bl,1
  406517:	jmp    0x4064e2
  406519:	cmp    edx,DWORD PTR [ebp-0x18b5a52d]
  40651f:	lods   eax,DWORD PTR ds:[esi]
  406520:	js     0x4065a1
  406522:	stos   DWORD PTR es:[edi],eax
  406523:	outs   dx,BYTE PTR ds:[esi]
  406524:	popa   
  406525:	and    ch,dl
  406527:	inc    edi
  406528:	imul   BYTE PTR [bx+si+0x756a]
  40652d:	push   cs
  40652e:	fidiv  WORD PTR [edi-0x1e4560c2]
  406534:	fimul  DWORD PTR [ecx]
  406536:	xchg   ebx,eax
  406537:	aam    0x9c
  406539:	add    ebx,DWORD PTR ds:0x6209f1f2
  40653f:	pop    eax
  406540:	xchg   edi,eax
  406541:	aas    
  406542:	out    dx,al
  406543:	mov    ebp,0xf5af9e92
  406548:	cdq    
  406549:	rcl    DWORD PTR [ebp+0x28f32f17],1
  40654f:	xlat   BYTE PTR ds:[ebx]
  406550:	and    al,0xc5
  406552:	push   es
  406553:	mov    esp,0x7971c8d2
  406558:	xor    DWORD PTR [edi],edx
  40655a:	adc    dh,dl
  40655c:	mov    ebp,0x6bda9e53
  406561:	int3   
  406562:	adc    BYTE PTR [ebp+0x2b],ah
  406565:	mov    al,0x79
  406567:	add    bl,BYTE PTR [eax-0x536a518d]
  40656d:	in     al,0xcc
  40656f:	test   DWORD PTR [ebx],ebp
  406571:	cmp    esp,ebp
  406573:	test   ecx,ebx
  406575:	push   ds
  406576:	fwait
  406577:	test   BYTE PTR [edi+0x2180139f],ah
  40657d:	mov    edx,0xfcb770cd
  406582:	cld    
  406583:	pop    es
  406584:	popf   
  406585:	retf   0xab4f
  406588:	das    
  406589:	mov    bh,0x73
  40658b:	mov    edi,0x56e5e057
  406590:	pop    es
  406591:	xchg   DWORD PTR [edi],edx
  406593:	dec    ebp
  406594:	jle    0x4065a9
  406596:	adc    BYTE PTR [eax],0x36
  406599:	ja     0x406604
  40659b:	loop   0x4065eb
  40659d:	mov    ebp,0xad06614b
  4065a2:	mul    DWORD PTR [ecx-0x1c6a99c5]
  4065a8:	out    0x36,eax
  4065aa:	pop    esp
  4065ab:	pop    ecx
  4065ac:	pusha  
  4065ad:	dec    eax
  4065ae:	outs   dx,BYTE PTR ds:[esi]
  4065af:	mul    DWORD PTR [ebx+0xc]
  4065b2:	scas   eax,DWORD PTR es:[edi]
  4065b3:	mov    dh,0xa3
  4065b5:	mov    esi,0xc6fc315
  4065ba:	pop    ds
  4065bb:	xchg   esp,eax
  4065bc:	addr16 mov esp,0xef1242d6
  4065c2:	sub    ebp,DWORD PTR [esi+0x5ae56698]
  4065c8:	push   esp
  4065c9:	je     0x4065c3
  4065cb:	inc    edx
  4065cc:	pushf  
  4065cd:	out    0x30,eax
  4065cf:	ret    0x32ba
  4065d2:	shl    DWORD PTR [ecx-0x4b75c5a4],0xde
  4065d9:	pop    edi
  4065da:	sub    al,0x34
  4065dc:	std    
  4065dd:	arpl   cx,dx
  4065df:	jb     0x4065a6
  4065e1:	inc    edi
  4065e2:	je     0x406599
  4065e4:	sub    BYTE PTR [ecx+0x4c],al
  4065e7:	cmp    eax,0x429ae18b
  4065ec:	sbb    ch,BYTE PTR [ecx]
  4065ee:	mov    esi,esp
  4065f0:	inc    ecx
  4065f1:	jb     0x40663e
  4065f3:	xchg   edx,eax
  4065f4:	stc    
  4065f5:	xor    cl,ah
  4065f7:	inc    ebx
  4065f8:	data16 ja 0x40662d
  4065fb:	shr    DWORD PTR [edx+0x79],1
  4065fe:	test   eax,0x2f6088f9
  406603:	pop    edi
  406604:	lods   al,BYTE PTR ds:[esi]
  406605:	add    al,0xa2
  406607:	xchg   esi,eax
  406608:	cmc    
  406609:	fild   QWORD PTR [edx]
  40660b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40660c:	inc    edx
  40660d:	(bad)  
  40660e:	sub    al,0xe2
  406610:	cmc    
  406611:	push   ecx
  406612:	sbb    bl,BYTE PTR [eax+0x4dc9f2c1]
  406618:	add    edx,edi
  40661a:	rsqrtps xmm6,XMMWORD PTR [ebp+edx*2-0x36043c71]
  406622:	pop    eax
  406623:	(bad)  
  406624:	fisub  WORD PTR [edi-0x15]
  406627:	cmp    eax,0xbf8b3b4e
  40662c:	mov    eax,ds:0xd20dca95
  406631:	pop    eax
  406632:	and    dh,BYTE PTR [ebx+0x60]
  406635:	dec    edx
  406636:	adc    eax,0xe09021ec
  40663b:	aad    0x6d
  40663d:	xlat   BYTE PTR ds:[ebx]
  40663e:	in     al,0xb0
  406640:	arpl   WORD PTR [edx-0x454b150],bx
  406646:	inc    ecx
  406647:	mov    DWORD PTR [ecx],0x23607079
  40664d:	add    eax,0x647fae70
  406652:	jmp    0x9f958ac0
  406657:	cld    
  406658:	inc    ecx
  406659:	lds    esi,FWORD PTR [ebx+0x446d542e]
  40665f:	cmc    
  406660:	call   0x27f:0x91511b7c
  406667:	push   ebx
  406668:	sub    eax,0x5a698c0a
  40666d:	sub    ah,BYTE PTR [ecx+0x77]
  406670:	and    dh,ah
  406672:	sbb    DWORD PTR [eax+0x26],edi
  406675:	xchg   esi,eax
  406676:	add    cl,dh
  406678:	mov    esi,cs
  40667a:	push   0x83d28e01
  40667f:	call   0x4065:0xb412a5ee
  406686:	mov    cl,BYTE PTR [eax+0x34db19f2]
  40668c:	enter  0xe44d,0x7d
  406690:	mov    bh,0xcd
  406692:	mov    ch,0x2a
  406694:	dec    esi
  406695:	cmp    ebp,DWORD PTR [ebp+0x7b]
  406698:	fmul   DWORD PTR [ebp+0x6ce3e0f]
  40669e:	jecxz  0x4066d7
  4066a0:	into   
  4066a1:	push   es
  4066a2:	imul   eax,ebx,0xffffff81
  4066a5:	aaa    
  4066a6:	or     ebx,DWORD PTR [edx]
  4066a8:	mov    esi,0xc1a38134
  4066ad:	xor    al,0x2
  4066af:	retf   0xd7b9
  4066b2:	(bad)  
  4066b3:	xor    BYTE PTR [ecx+0x3937c29b],dl
  4066b9:	lods   al,BYTE PTR ds:[esi]
  4066ba:	fwait
  4066bb:	call   0x3dc347
  4066c0:	lock xchg dl,bh
  4066c3:	in     eax,0x4c
  4066c5:	fbld   TBYTE PTR [esi+0x64]
  4066c8:	aam    0x7c
  4066ca:	lea    esp,[edx]
  4066cc:	test   BYTE PTR [edi],0x67
  4066cf:	rcl    ebx,cl
  4066d1:	retf   0x5243
  4066d4:	inc    edi
  4066d5:	pop    ss
  4066d6:	lods   al,BYTE PTR ds:[esi]
  4066d7:	in     eax,0x6b
  4066d9:	gs push 0xd4dc651
  4066df:	test   DWORD PTR [ebx+0x4e],edx
  4066e2:	add    eax,0xdc23c5f0
  4066e7:	pop    ds
  4066e8:	sbb    ebp,DWORD PTR [edi-0x3b]
  4066eb:	fimul  WORD PTR [edx-0x1b51f957]
  4066f1:	ss inc ecx
  4066f3:	aas    
  4066f4:	pop    ds
  4066f5:	int3   
  4066f6:	cmc    
  4066f7:	lds    ecx,FWORD PTR ds:0xcdc93e76
  4066fd:	pop    esp
  4066fe:	xchg   esi,eax
  4066ff:	xchg   BYTE PTR [edi+0x30a0f019],bh
  406705:	cmp    al,0x9c
  406707:	mov    cs,WORD PTR [edx+0x2ff36a3c]
  40670d:	fistp  DWORD PTR [esi-0x5895cfb9]
  406713:	or     ebx,ebx
  406715:	sub    dh,BYTE PTR [esi+0x6a]
  406718:	lea    edi,[edx]
  40671a:	jmp    0xe88d:0xdd8fb256
  406721:	mov    bh,0x3c
  406723:	sub    ah,al
  406725:	push   0x3b
  406727:	and    BYTE PTR [ebp-0x1175ba35],ah
  40672d:	mov    DWORD PTR [eax],eax
  40672f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406730:	adc    eax,0x72522c51
  406735:	aas    
  406736:	jmp    0xe3fb:0x4b0ef178
  40673d:	pop    es
  40673e:	mov    edi,0xfadfe718
  406743:	adc    eax,0x56bfbb9e
  406748:	adc    BYTE PTR [ecx+0x7a8b3886],al
  40674e:	mov    dl,0xa8
  406750:	sbb    esi,DWORD PTR [eax-0x54]
  406753:	lock dec edi
  406755:	and    DWORD PTR [eax],ebp
  406757:	mov    dh,0xe9
  406759:	jnp    0x40679e
  40675b:	xchg   edx,eax
  40675c:	dec    ecx
  40675d:	pusha  
  40675e:	pextrw esi,(bad),0xc5
  406760:	mov    cl,0x61
  406762:	das    
  406763:	pop    esi
  406764:	mov    ebp,0xb5db17e
  406769:	ss daa 
  40676b:	ins    BYTE PTR es:[edi],dx
  40676c:	mov    edi,0x7acc6d74
  406771:	dec    esi
  406772:	pusha  
  406773:	(bad)  
  406774:	icebp  
  406775:	push   edx
  406776:	inc    ecx
  406777:	lods   al,BYTE PTR ds:[esi]
  406778:	mov    cl,BYTE PTR [esi+0x29c9342a]
  40677e:	fnstenv [ebx]
  406780:	xchg   edi,eax
  406781:	push   ss
  406782:	jbe    0x4067a5
  406784:	outs   dx,BYTE PTR ds:[esi]
  406785:	jp     0x40672c
  406787:	jb     0x4067f3
  406789:	xchg   al,bl
  40678b:	shl    DWORD PTR [ebx+0x18],cl
  40678e:	jns    0x406728
  406790:	sub    DWORD PTR [ecx-0xc],0xd014e3e9
  406797:	pop    ecx
  406798:	jge    0x4067e3
  40679a:	mov    edx,edi
  40679c:	or     esp,edi
  40679e:	sub    eax,DWORD PTR [esi+edx*8+0x5e]
  4067a2:	loop   0x40679f
  4067a4:	sbb    DWORD PTR [edi-0x62e4c8c0],0xffffff95
  4067ab:	dec    ecx
  4067ac:	xor    eax,0x344e28d8
  4067b1:	sbb    eax,0xe24c6505
  4067b6:	jg     0x4067d3
  4067b8:	sub    cl,BYTE PTR [esi+0x6d]
  4067bb:	mov    ecx,0xb64334a1
  4067c0:	in     eax,dx
  4067c1:	int    0xf9
  4067c3:	je     0x406815
  4067c5:	sbb    DWORD PTR [edi-0x65],0xffffffaa
  4067c9:	and    al,0x65
  4067cb:	add    cl,BYTE PTR [ebx+0x679f020a]
  4067d1:	shl    BYTE PTR [esi],0x21
  4067d4:	bound  edi,QWORD PTR [ebp-0x55]
  4067d7:	(bad)  [edx]
  4067d9:	push   eax
  4067da:	cmp    DWORD PTR [ebp+0x1fb7a49b],esi
  4067e0:	add    eax,0xd71e291a
  4067e5:	push   edi
  4067e6:	xchg   ecx,eax
  4067e7:	in     al,0xd0
  4067e9:	push   ebx
  4067ea:	jmp    0x3529:0xaa06af29
  4067f1:	add    al,0xd5
  4067f3:	mov    ecx,0x4f686ad5
  4067f8:	fistp  WORD PTR [edx]
  4067fa:	xchg   esp,eax
  4067fb:	sahf   
  4067fc:	fisttp DWORD PTR [ecx]
  4067fe:	pop    eax
  4067ff:	mov    ecx,edx
  406801:	mov    esp,0xcbca537b
  406806:	js     0x406850
  406808:	mov    BYTE PTR [edi+0x38],bl
  40680b:	fwait
  40680c:	test   DWORD PTR [edx+ebx*2-0x451d49b],esi
  406813:	and    dl,BYTE PTR ds:0x838542a2
  406819:	sub    al,BYTE PTR ds:0x4e55721b
  40681f:	rcr    DWORD PTR [ecx-0x27],0x49
  406823:	fnstcw WORD PTR [ecx-0x7a]
  406826:	and    al,0xc0
  406828:	mov    edi,0x61e11d31
  40682d:	xor    eax,0xc6de8b7e
  406832:	(bad)  
  406833:	fs jp  0x406885
  406836:	push   edx
  406837:	dec    ecx
  406838:	adc    eax,0x3be8f6c4
  40683d:	fadd   QWORD PTR [edx+0x166c45fe]
  406843:	in     al,0xa4
  406845:	pusha  
  406846:	push   edi
  406847:	pop    ss
  406848:	cmp    DWORD PTR [ecx+0x4de153ce],eax
  40684e:	jo     0x40681a
  406850:	jg     0x40682b
  406852:	jo     0x4068c1
  406854:	sti    
  406855:	hlt    
  406856:	sbb    BYTE PTR [ecx],0x5
  406859:	push   ebp
  40685a:	jp     0x406879
  40685c:	mov    esi,0x84b7b2a4
  406861:	int    0x6d
  406863:	sub    al,0xe4
  406865:	out    0x88,al
  406867:	arpl   ax,di
  406869:	xor    BYTE PTR [ebp-0xc355a5f],ah
  40686f:	adc    BYTE PTR ds:0x8e3e3801,ah
  406875:	sub    cl,dh
  406877:	(bad)  
  406878:	jl     0x4068ea
  40687a:	stos   BYTE PTR es:[edi],al
  40687b:	nop
  40687c:	in     al,dx
  40687d:	push   0x3c
  40687f:	pop    es
  406880:	bnd jmp 0xfabc6f04
  406886:	jbe    0x40688f
  406888:	pop    edi
  406889:	add    eax,0x911d6a3e
  40688e:	repnz mov esp,0x297294f8
  406894:	mov    edx,0x98310a67
  406899:	dec    ebp
  40689a:	jnp    0x4068f7
  40689c:	inc    esi
  40689d:	imul   ebx,DWORD PTR [edx-0x7030830e],0xa5042c32
  4068a7:	outs   dx,BYTE PTR gs:[esi]
  4068a9:	out    0xca,al
  4068ab:	sbb    BYTE PTR [ecx],dh
  4068ad:	out    dx,eax
  4068ae:	cli    
  4068af:	lds    eax,FWORD PTR [esi+0x53]
  4068b2:	inc    ecx
  4068b3:	adc    eax,0x37d60dad
  4068b8:	push   esi
  4068b9:	inc    edi
  4068ba:	inc    esi
  4068bb:	scas   al,BYTE PTR es:[edi]
  4068bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068bd:	adc    esi,DWORD PTR [ecx-0x229a0bad]
  4068c3:	dec    ebx
  4068c4:	enter  0xce0c,0x6a
  4068c8:	push   edi
  4068c9:	sbb    ah,BYTE PTR [ebp-0x1469b4a4]
  4068cf:	push   0x2191c7be
  4068d4:	ror    BYTE PTR [edi+0x287f7e3],cl
  4068da:	sbb    DWORD PTR ds:0xf4b9ec3b,esp
  4068e0:	pop    es
  4068e1:	in     al,0x89
  4068e3:	and    DWORD PTR [esi+0x38553c44],0x99271b11
  4068ed:	call   0x73c2495
  4068f2:	sub    eax,0x146a746f
  4068f7:	xor    esp,eax
  4068f9:	div    DWORD PTR [ebp-0x29923201]
  4068ff:	popf   
  406900:	ss pop ss
  406902:	es retf 0xd125
  406906:	out    0x20,al
  406908:	mov    al,ds:0xf4f5841c
  40690d:	in     al,dx
  40690e:	repnz fisubr DWORD PTR [esi]
  406911:	mov    ch,BYTE PTR es:[edx]
  406914:	mov    dh,0x52
  406916:	in     al,0xea
  406918:	dec    ebx
  406919:	(bad)  
  40691a:	stc    
  40691b:	push   es
  40691c:	and    bl,BYTE PTR [esp+eax*8-0x1593268e]
  406923:	push   ebp
  406924:	adc    DWORD PTR [esi-0x44ebc258],esi
  40692a:	adc    esp,edi
  40692c:	sub    ecx,0x15fae03c
  406932:	mov    ebp,DWORD PTR [edi+0x665c8a25]
  406938:	sbb    DWORD PTR [ebx+ebp*4-0x4c],esi
  40693c:	sub    eax,DWORD PTR cs:[edx]
  40693f:	std    
  406940:	sub    ecx,DWORD PTR [esi]
  406942:	dec    edi
  406943:	mov    ch,0x16
  406945:	add    al,0x60
  406947:	test   BYTE PTR [ebx+0x713edce8],0xdb
  40694e:	pop    ss
  40694f:	lock sbb al,0x4f
  406952:	pop    ecx
  406953:	clc    
  406954:	repnz ror BYTE PTR [esi],cl
  406957:	push   eax
  406958:	sbb    esi,DWORD PTR [edx]
  40695a:	lds    ebp,FWORD PTR [ecx+0x235e1977]
  406960:	cld    
  406961:	and    ecx,eax
  406963:	leave  
  406964:	aam    0x14
  406966:	out    0x7d,al
  406968:	aam    0xb1
  40696a:	mov    BYTE PTR [ecx-0x48],bl
  40696d:	add    al,0x23
  40696f:	cmp    eax,0x54c147c1
  406974:	mov    al,ds:0xd540041d
  406979:	ficomp DWORD PTR [ecx-0x7aa19129]
  40697f:	inc    edx
  406980:	shl    BYTE PTR [ebx+0x4c627338],1
  406986:	sbb    al,0xaa
  406988:	mov    al,0xe2
  40698a:	adc    BYTE PTR [ecx+0x4bb97f9f],bh
  406990:	(bad)  
  406991:	lds    ecx,FWORD PTR [ebp-0x5a0d562e]
  406997:	add    BYTE PTR [ecx+0x3691ec6e],ch
  40699d:	push   edx
  40699e:	dec    edi
  40699f:	sub    edi,DWORD PTR [edi]
  4069a1:	(bad)  
  4069a2:	in     eax,0xb6
  4069a4:	pop    esp
  4069a5:	pushf  
  4069a6:	jmp    0x6e24ece7
  4069ab:	stc    
  4069ac:	dec    ecx
  4069ad:	frstor [edx]
  4069af:	xchg   ebp,eax
  4069b0:	call   0xd59:0xe810132b
  4069b7:	enter  0x5557,0xc0
  4069bb:	idiv   BYTE PTR [ebx]
  4069bd:	add    al,BYTE PTR [esi-0x6a]
  4069c0:	std    
  4069c1:	sbb    DWORD PTR [ecx+0x76],edi
  4069c4:	mov    WORD PTR [eax+edi*2-0x143e7a40],?
  4069cb:	gs push esp
  4069cd:	jmp    0x98caa4b9
  4069d2:	push   ss
  4069d3:	cmp    eax,0xbd1069ff
  4069d8:	and    eax,0xe9b208b2
  4069dd:	outs   dx,DWORD PTR ds:[esi]
  4069de:	jmp    0xf941:0x42b85198
  4069e5:	fwait
  4069e6:	mov    dl,0x43
  4069e8:	adc    DWORD PTR [eax+0x13],0xffffffa8
  4069ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069ed:	jle    0x40698b
  4069ef:	ret    
  4069f0:	sub    al,0xaa
  4069f2:	jl     0x406a42
  4069f4:	in     al,0xdf
  4069f6:	test   ebp,ebx
  4069f8:	jle    0x4069bb
  4069fa:	jb     0x406a76
  4069fc:	cmp    BYTE PTR [edi+0x64],0x27
  406a00:	adc    DWORD PTR [ebx],0x28d344ba
  406a06:	call   0x9786:0xb9a76f8
  406a0d:	out    dx,al
  406a0e:	mov    DWORD PTR [ebx-0x3aced9e8],esi
  406a14:	outs   dx,BYTE PTR ds:[esi]
  406a15:	adc    DWORD PTR [edx-0x241c610a],edi
  406a1b:	fwait
  406a1c:	add    ch,BYTE PTR [eax*8+0x51532462]
  406a23:	dec    ebx
  406a24:	gs jb  0x406a47
  406a27:	out    dx,al
  406a28:	iret   
  406a29:	push   ds
  406a2a:	hlt    
  406a2b:	cmp    BYTE PTR [edx],0xc2
  406a2e:	std    
  406a2f:	or     al,0xb1
  406a31:	out    dx,eax
  406a32:	out    0xf1,al
  406a34:	mov    ebp,0x6c9e2256
  406a39:	fmul   QWORD PTR [esi+esi*4]
  406a3c:	xlat   BYTE PTR ds:[ebx]
  406a3d:	hlt    
  406a3e:	dec    edi
  406a3f:	in     al,0x40
  406a41:	scas   eax,DWORD PTR es:[edi]
  406a42:	push   ecx
  406a43:	test   eax,0x8c53d96d
  406a48:	call   0x5cde405f
  406a4d:	sbb    dh,BYTE PTR [edi+0x3c]
  406a50:	pop    ebp
  406a51:	push   eax
  406a52:	aam    0xf8
  406a54:	cmp    cl,ch
  406a56:	iret   
  406a57:	rol    dl,cl
  406a59:	xchg   edx,eax
  406a5a:	(bad)  
  406a5b:	test   eax,0x5fecb68e
  406a60:	add    BYTE PTR [edi],al
  406a62:	stc    
  406a63:	aam    0x18
  406a65:	dec    edi
  406a66:	and    ebx,DWORD PTR [edi-0x9ec2699]
  406a6c:	pop    ecx
  406a6d:	push   es
  406a6e:	frstor [ecx+0x62]
  406a71:	fiadd  WORD PTR [ebx+esi*2+0x33c80ae]
  406a78:	pop    esp
  406a79:	inc    ecx
  406a7a:	cdq    
  406a7b:	test   DWORD PTR [esi],0x6a61ff9a
  406a81:	xchg   BYTE PTR [ebx],ch
  406a83:	in     eax,0x84
  406a85:	cdq    
  406a86:	daa    
  406a87:	sub    al,BYTE PTR [esp+ebp*1]
  406a8a:	mov    BYTE PTR [eax],bl
  406a8c:	aas    
  406a8d:	xchg   edi,eax
  406a8e:	leave  
  406a8f:	test   eax,0x98e061a4
  406a94:	cmc    
  406a95:	sub    esi,DWORD PTR [edx+0x7e827696]
  406a9b:	test   DWORD PTR [esi+0x1d5b835c],0x32000a66
  406aa5:	js     0x406b18
  406aa7:	or     esp,DWORD PTR [eax+ecx*8+0x1b4b603f]
  406aae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406aaf:	mov    ecx,0x244ec454
  406ab4:	push   0x2f
  406ab6:	sar    BYTE PTR [ebp+0x699a0e6b],0xb5
  406abd:	sub    al,0xdd
  406abf:	loope  0x406ac3
  406ac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ac2:	sbb    eax,0x3b64d277
  406ac7:	jno    0x406ac6
  406ac9:	mov    ah,0x19
  406acb:	inc    ebx
  406acc:	out    dx,eax
  406acd:	pusha  
  406ace:	aam    0x25
  406ad0:	(bad)  
  406ad1:	jmp    0xf474:0x33b65843
  406ad8:	push   ebp
  406ad9:	and    ah,BYTE PTR [ecx+0x70fc2f05]
  406adf:	adc    bl,BYTE PTR [ecx-0x35c826c9]
  406ae5:	fwait
  406ae6:	std    
  406ae7:	or     edi,ebp
  406ae9:	push   ss
  406aea:	xor    al,0x11
  406aec:	mov    ebp,DWORD PTR [ebp-0x3a3aea56]
  406af2:	push   esi
  406af3:	call   0x3888:0xa2ceabf5
  406afa:	sub    eax,0x5f0c6099
  406aff:	mov    eax,0xca408f1c
  406b04:	dec    ecx
  406b05:	push   esi
  406b06:	stc    
  406b07:	or     al,0x12
  406b09:	jnp    0x406b3b
  406b0b:	pusha  
  406b0c:	inc    edi
  406b0d:	stc    
  406b0e:	cmp    ecx,DWORD PTR [ebp+0x5bba45b7]
  406b14:	retf   0x8a41
  406b17:	mov    BYTE PTR ss:[ebx-0x291f4cb],al
  406b1e:	outs   dx,BYTE PTR ds:[esi]
  406b1f:	bnd jmp 0x58fda736
  406b25:	jnp    0x406ba3
  406b27:	push   eax
  406b28:	and    ecx,ebp
  406b2a:	push   cs
  406b2b:	inc    edi
  406b2c:	xor    al,0x9a
  406b2e:	enter  0x7664,0xd5
  406b32:	jno    0x406b30
  406b34:	(bad)  
  406b35:	add    al,0x1d
  406b37:	sbb    edx,eax
  406b39:	and    eax,edi
  406b3b:	sbb    dh,dl
  406b3d:	pop    ebp
  406b3e:	pop    edi
  406b3f:	sub    eax,0xe0d910d7
  406b44:	or     BYTE PTR [ecx+eiz*4],cl
  406b47:	fisttp DWORD PTR [ecx-0x60315a1f]
  406b4d:	shl    DWORD PTR [ecx+edx*4],1
  406b50:	int    0xff
  406b52:	or     al,BYTE PTR cs:[edx+0x64]
  406b56:	clc    
  406b57:	lods   al,BYTE PTR ds:[esi]
  406b58:	gs xor al,0x7b
  406b5b:	lds    ebp,FWORD PTR [edi+0x7d03726e]
  406b61:	jns    0x406b27
  406b63:	rcr    BYTE PTR [edx-0x294cae0f],cl
  406b69:	js     0x406b69
  406b6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b6c:	jmp    0x9439a354
  406b71:	imul   edi,DWORD PTR [edx+0x49],0xffffff82
  406b75:	retf   
  406b76:	xor    al,0x57
  406b78:	xchg   BYTE PTR [esi-0x1a],bl
  406b7b:	sbb    eax,DWORD PTR [eax]
  406b7d:	aam    0xdf
  406b7f:	xlat   BYTE PTR ds:[ebx]
  406b80:	adc    cl,BYTE PTR [ecx+0x1f]
  406b83:	jmp    0x3204:0x1bd05153
  406b8a:	mov    ds:0x7d7676dc,eax
  406b8f:	or     al,0x1b
  406b91:	div    DWORD PTR [esi-0x79f2bd5]
  406b97:	call   0xf6a3:0xca7d0a92
  406b9e:	dec    edx
  406b9f:	mov    ds:0xede1a68f,al
  406ba4:	inc    ecx
  406ba5:	and    al,0x45
  406ba7:	sub    eax,0x4ce6edc7
  406bac:	xchg   edi,eax
  406bad:	mov    eax,0xa4b9d294
  406bb2:	inc    edi
  406bb3:	jmp    0x3d0d:0x682bc1f7
  406bba:	cmp    bh,BYTE PTR [edi+0x5b]
  406bbd:	cmp    eax,0xfc04e8b0
  406bc2:	sbb    BYTE PTR [edi+0x702d9278],dl
  406bc8:	jo     0x406bbf
  406bca:	leave  
  406bcb:	aas    
  406bcc:	call   0x153:0x9cc96a6e
  406bd3:	xchg   DWORD PTR cs:[esi-0x31938fba],edx
  406bda:	mov    esi,0xa51ba147
  406bdf:	adc    BYTE PTR [ebx+0xb9630e],0x9f
  406be6:	lods   al,BYTE PTR ds:[esi]
  406be7:	mov    ecx,0xf73c9d9c
  406bec:	dec    edx
  406bed:	mov    bl,0xf0
  406bef:	xor    bl,BYTE PTR [edi+0x1a]
  406bf2:	mov    ah,0x35
  406bf4:	lods   eax,DWORD PTR ds:[esi]
  406bf5:	mov    al,ds:0x442d6744
  406bfa:	sar    edi,1
  406bfc:	pop    esp
  406bfd:	int3   
  406bfe:	and    bl,BYTE PTR [eax+edi*4+0x5]
  406c02:	test   al,0x1c
  406c04:	mov    ah,0x48
  406c06:	add    bh,BYTE PTR [ecx-0x5f]
  406c09:	jecxz  0x406c44
  406c0b:	in     eax,dx
  406c0c:	fisubr DWORD PTR [eax-0x57ecc60d]
  406c12:	lock xchg esi,esp
  406c15:	(bad)  
  406c17:	cwde   
  406c18:	mov    dl,0x4a
  406c1a:	xor    BYTE PTR [edi+0x2a],ch
  406c1d:	leave  
  406c1e:	xlat   BYTE PTR ds:[ebx]
  406c1f:	sub    edx,edi
  406c21:	dec    edi
  406c22:	imul   edi,DWORD PTR [ecx+eax*8],0x7f5ae352
  406c29:	fdivr  DWORD PTR [ecx]
  406c2b:	mov    esi,0x17e761d8
  406c30:	cmp    al,0xad
  406c32:	sub    BYTE PTR [esp+eiz*4+0x9ea3956],dh
  406c39:	clc    
  406c3a:	lahf   
  406c3b:	push   ebx
  406c3c:	jmp    0x406c01
  406c3e:	gs dec esp
  406c40:	jge    0x406bc2
  406c42:	shl    esp,1
  406c44:	dec    ecx
  406c45:	retf   0xc7b4
  406c48:	xor    ch,BYTE PTR [ebp+0x2ba6718]
  406c4e:	pop    eax
  406c4f:	add    BYTE PTR [esi-0x36],al
  406c52:	jl     0x406be7
  406c54:	adc    BYTE PTR [ecx+ebp*8],ch
  406c57:	leave  
  406c58:	inc    eax
  406c59:	pop    edi
  406c5a:	addr16 loop 0x406c0f
  406c5d:	cmc    
  406c5e:	addr16 xchg ebx,eax
  406c60:	xchg   edx,eax
  406c61:	cwde   
  406c62:	inc    ebx
  406c63:	push   ss
  406c64:	push   ecx
  406c65:	xlat   BYTE PTR ds:[ebx]
  406c66:	push   edi
  406c67:	stos   BYTE PTR es:[edi],al
  406c68:	adc    DWORD PTR [eax+0x4b],esi
  406c6b:	push   ebp
  406c6c:	jle    0x406c9e
  406c6e:	in     eax,0xd
  406c70:	lahf   
  406c71:	pop    edi
  406c72:	out    dx,al
  406c73:	cli    
  406c74:	ret    
  406c75:	push   0xbf0a82f2
  406c7a:	push   0x1f
  406c7c:	push   edi
  406c7d:	jl     0x406cee
  406c7f:	xchg   edi,eax
  406c80:	push   ebp
  406c81:	bound  eax,QWORD PTR [ebp-0x14]
  406c84:	cli    
  406c85:	mov    ebp,0x6a060b40
  406c8a:	lods   eax,DWORD PTR ds:[esi]
  406c8b:	add    eax,eax
  406c8d:	arpl   si,di
  406c8f:	rcl    BYTE PTR [edi],1
  406c91:	jo     0x406c28
  406c93:	adc    bh,ah
  406c95:	and    edi,ebp
  406c97:	aas    
  406c98:	add    BYTE PTR [ecx+ebp*8+0x44e5fc17],0x9d
  406ca0:	arpl   ax,di
  406ca2:	(bad)  
  406ca4:	adc    esi,DWORD PTR [edi-0x3e]
  406ca7:	fiadd  WORD PTR [ecx]
  406ca9:	cs dec edx
  406cab:	inc    edi
  406cac:	inc    eax
  406cad:	les    esp,FWORD PTR [ecx]
  406caf:	mov    BYTE PTR [ebx+0x7b],cl
  406cb2:	dec    eax
  406cb3:	fimul  DWORD PTR [ecx+0x39]
  406cb6:	push   es
  406cb7:	and    al,0x9
  406cb9:	push   DWORD PTR [edx-0x26ed7ce2]
  406cbf:	xchg   ebp,eax
  406cc0:	ret    
  406cc1:	cmc    
  406cc2:	mov    ds:0x8d249c,al
  406cc7:	mov    ah,BYTE PTR [esi+0x7ba10046]
  406ccd:	call   0x36b7:0x50b29320
  406cd4:	or     edx,DWORD PTR [ecx-0x6b]
  406cd7:	cmp    esi,edi
  406cd9:	lods   eax,DWORD PTR ds:[esi]
  406cda:	call   0xb4e5bb48
  406cdf:	cdq    
  406ce0:	inc    esi
  406ce1:	sub    BYTE PTR [ecx],bh
  406ce3:	jge    0x406d63
  406ce5:	outs   dx,DWORD PTR ds:[esi]
  406ce6:	mov    esp,0x1d2005b9
  406ceb:	repz sbb WORD PTR [eax-0x3c3e5587],0x231
  406cf5:	inc    esp
  406cf6:	arpl   WORD PTR [edx-0x7f],di
  406cf9:	sub    dh,BYTE PTR [eax-0x10]
  406cfc:	add    eax,0x9575ae10
  406d01:	test   al,0x19
  406d03:	dec    edx
  406d04:	xchg   esp,eax
  406d05:	xchg   ecx,eax
  406d06:	push   eax
  406d07:	rcl    DWORD PTR [eax+0x59ae5ddc],1
  406d0d:	xor    DWORD PTR [eax-0x5952a5c],0xffffffbf
  406d14:	popf   
  406d15:	outs   dx,BYTE PTR ds:[esi]
  406d16:	xchg   BYTE PTR [ebx+0x6f21560a],bl
  406d1c:	(bad)  
  406d1d:	pop    ebx
  406d1e:	sbb    ebx,DWORD PTR [ebx]
  406d20:	int    0xa0
  406d22:	in     al,0xce
  406d24:	stc    
  406d25:	loope  0x406d8c
  406d27:	mov    ebp,0x3776e88e
  406d2c:	outs   dx,DWORD PTR ds:[esi]
  406d2d:	out    dx,al
  406d2e:	sbb    BYTE PTR [ebp+0x4092ea4],ch
  406d34:	lods   al,BYTE PTR ds:[esi]
  406d35:	sbb    BYTE PTR [edx+0xaa3bdc9],dh
  406d3b:	test   eax,0x78978ba0
  406d40:	fstp   DWORD PTR [eax+0x113f6733]
  406d46:	jp     0x406d99
  406d48:	test   eax,0x573612d2
  406d4d:	pop    esp
  406d4e:	mov    cl,0x17
  406d50:	lahf   
  406d51:	or     DWORD PTR [edx],eax
  406d53:	js     0x406cd9
  406d55:	stos   DWORD PTR es:[edi],eax
  406d56:	aaa    
  406d57:	repnz mov esi,0xf0fcd4b6
  406d5d:	add    al,0x20
  406d5f:	sti    
  406d60:	(bad)  
  406d61:	pop    eax
  406d62:	mov    esp,DWORD PTR [esp+ecx*1-0x4e0ca134]
  406d69:	jg     0x406d82
  406d6b:	adc    eax,0x128aacb4
  406d70:	adc    al,0x87
  406d72:	cvtps2pi mm2,xmm0
  406d75:	enter  0x380,0x4a
  406d79:	fadd   DWORD PTR [eax]
  406d7b:	ret    
  406d7c:	test   BYTE PTR [ecx+0x59f664b6],ch
  406d82:	and    ah,BYTE PTR [eax+0x6d]
  406d85:	xor    edi,DWORD PTR [ebp-0x1a]
  406d88:	cmp    eax,0x831db5f5
  406d8d:	and    edx,DWORD PTR [ecx+0x43b9e79b]
  406d93:	mov    bh,dl
  406d95:	dec    ebx
  406d96:	adc    edi,edi
  406d98:	js     0x406d3b
  406d9a:	mov    ah,al
  406d9c:	out    dx,al
  406d9d:	xchg   esi,eax
  406d9e:	and    DWORD PTR [ebx-0x3a],esi
  406da1:	push   cs
  406da2:	retf   
  406da3:	test   ebp,ebp
  406da5:	out    0x37,al
  406da7:	mov    dh,0xc
  406da9:	cmp    al,0x9c
  406dab:	xchg   ebx,eax
  406dac:	push   edx
  406dad:	test   DWORD PTR [edx+0x42],edi
  406db0:	xchg   edx,eax
  406db1:	repnz dec esi
  406db3:	or     eax,0x1c87f8de
  406db8:	cld    
  406db9:	mov    esi,ecx
  406dbb:	adc    bh,BYTE PTR ds:0x3cfbcc07
  406dc1:	ins    DWORD PTR es:[edi],dx
  406dc2:	or     BYTE PTR [eax],bl
  406dc4:	imul   eax,DWORD PTR [edx+0x310e1278],0x3c
  406dcb:	mov    al,0xef
  406dcd:	push   ds
  406dce:	(bad)  
  406dcf:	into   
  406dd0:	and    ebp,DWORD PTR [ebp+ebx*4+0x5c]
  406dd4:	sub    esi,edx
  406dd6:	adc    esp,DWORD PTR [eax-0x6879af7a]
  406ddc:	inc    eax
  406ddd:	sub    DWORD PTR [ebp+0x34],0x58f0fb9e
  406de4:	mov    DWORD PTR [ebp-0x1c],ebx
  406de7:	ins    BYTE PTR es:[edi],dx
  406de8:	aaa    
  406de9:	sahf   
  406dea:	(bad)  
  406deb:	mov    al,ds:0x23ca213b
  406df0:	sbb    cl,ch
  406df2:	xchg   ebp,eax
  406df3:	jno    0x406e18
  406df5:	jge    0x406db7
  406df7:	sti    
  406df8:	fisubr DWORD PTR [eax-0x3f]
  406dfb:	add    BYTE PTR [edx-0x274ae454],ah
  406e01:	xor    BYTE PTR [eax-0x12],bh
  406e04:	(bad)  
  406e05:	mov    al,0x38
  406e07:	add    al,0x17
  406e09:	fist   DWORD PTR [ebx+0xe2e64d]
  406e0f:	aam    0x53
  406e11:	scas   al,BYTE PTR es:[edi]
  406e12:	xor    DWORD PTR [ebx+0x2352f41],edx
  406e18:	cmp    dl,BYTE PTR [edi-0x70]
  406e1b:	pop    edi
  406e1c:	push   es
  406e1d:	fstp   QWORD PTR [edx+0x3d]
  406e20:	xchg   ecx,eax
  406e21:	dec    ebx
  406e22:	add    al,0x9
  406e24:	popa   
  406e25:	push   ds
  406e26:	pop    ebx
  406e27:	lea    eax,[esi+esi*8-0x3f]
  406e2b:	sbb    eax,ebp
  406e2d:	xchg   esp,eax
  406e2e:	popf   
  406e2f:	pop    esp
  406e30:	iret   
  406e31:	xor    DWORD PTR [edi+0xa99c03a],ebx
  406e37:	xor    eax,0x2454bc27
  406e3c:	jmp    0x406dc4
  406e3e:	sbb    eax,edx
  406e40:	dec    edi
  406e41:	jo     0x406ddc
  406e43:	and    bh,BYTE PTR [ebx+ebp*4-0x34d6356e]
  406e4a:	mov    edx,0xe8d30d3f
  406e4f:	loope  0x406e9b
  406e51:	push   ds
  406e52:	sub    eax,0xb53cbf0a
  406e57:	mov    cs,WORD PTR [ebx]
  406e59:	data16 or BYTE PTR [ebx],bl
  406e5c:	jmp    0xe8c35d09
  406e61:	add    edi,DWORD PTR [ebp+0x2e]
  406e64:	jmp    0x5808:0xb21eb2d
  406e6b:	xor    DWORD PTR [esp+edi*8-0x69],0x84ca674f
  406e73:	sbb    DWORD PTR [ebx+ebp*4],edx
  406e76:	ror    ecx,cl
  406e78:	pushf  
  406e79:	fs stc 
  406e7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e7c:	mov    bl,0x30
  406e7e:	punpckhbw mm0,QWORD PTR [ebx+0x421fb281]
  406e85:	sahf   
  406e86:	shr    DWORD PTR [ecx+eiz*4+0xedf9934],1
  406e8d:	(bad)  
  406e8e:	daa    
  406e8f:	jmp    0x14128932
  406e94:	mov    ch,0x70
  406e96:	and    eax,0xabcbae7b
  406e9b:	lds    edx,FWORD PTR [edi+ebp*4]
  406e9e:	xor    cl,BYTE PTR [ebx]
  406ea0:	pop    ebx
  406ea1:	sub    BYTE PTR [ebp-0x271d28ad],bh
  406ea7:	outs   dx,BYTE PTR ds:[esi]
  406ea8:	sub    DWORD PTR [edx],ebx
  406eaa:	loop   0x406e36
  406eac:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406eae:	ror    dh,0xf1
  406eb1:	push   0xcf38daf1
  406eb6:	xor    DWORD PTR [edx],ebx
  406eb8:	jo     0x406e83
  406eba:	in     eax,0xd4
  406ebc:	fsubr  DWORD PTR [esi-0x43aeb3ab]
  406ec2:	out    dx,eax
  406ec3:	mov    al,0xa5
  406ec5:	adc    al,0xf2
  406ec7:	push   ebx
  406ec8:	daa    
  406ec9:	retf   
  406eca:	add    edx,DWORD PTR ds:0xea451693
  406ed0:	add    BYTE PTR [edi+0x67],ch
  406ed3:	ret    0x49a
  406ed6:	adc    eax,0xd4a2cab5
  406edb:	cdq    
  406edc:	xchg   ebp,eax
  406edd:	mov    bl,0x11
  406edf:	enter  0xd375,0x4e
  406ee3:	test   BYTE PTR [ecx+0x29],dl
  406ee6:	push   edi
  406ee7:	or     al,0x8c
  406ee9:	jb     0x406ec9
  406eeb:	repnz push ss
  406eed:	sub    al,0xfe
  406eef:	(bad)  
  406ef0:	leave  
  406ef1:	ins    BYTE PTR es:[edi],dx
  406ef2:	les    edi,FWORD PTR [ebp+eax*2+0x16]
  406ef6:	add    al,0x66
  406ef8:	into   
  406ef9:	fucomp st(4)
  406efb:	aaa    
  406efc:	sub    bh,bh
  406efe:	mov    ds:0xd056a931,al
  406f03:	jl     0x406f7a
  406f05:	ficom  DWORD PTR [ebp+0x4b]
  406f08:	aad    0x7f
  406f0a:	mov    eax,0x44fc71e1
  406f0f:	mov    dh,0x24
  406f11:	jne    0x406f20
  406f13:	fadd   QWORD PTR [ecx]
  406f15:	pop    esi
  406f16:	mov    WORD PTR [ecx-0x53e6f477],?
  406f1c:	cmp    eax,0x78af4a
  406f21:	xor    eax,0x81086aff
  406f26:	out    dx,al
  406f27:	test   BYTE PTR [edx-0x18],cl
  406f2a:	loope  0x406eae
  406f2c:	inc    eax
  406f2d:	fbld   TBYTE PTR [edx]
  406f2f:	dec    ebp
  406f30:	add    ebp,DWORD PTR [ecx-0x77]
  406f33:	add    BYTE PTR [ecx+0x70],cl
  406f36:	push   0xee8f03ef
  406f3b:	and    al,BYTE PTR [edi+0x613dd5fb]
  406f41:	mov    edi,0x71eeb0a3
  406f46:	jmp    0xb5d5460c
  406f4b:	or     BYTE PTR [ebp+0x65258bf9],bh
  406f51:	or     eax,0x2e9a651b
  406f56:	xor    BYTE PTR [ebp+0x38],ah
  406f59:	popf   
  406f5a:	xor    dl,dl
  406f5c:	and    DWORD PTR [ebx+0x28],eax
  406f5f:	pusha  
  406f60:	mov    DWORD PTR [esi-0x56],ebx
  406f63:	pop    ds
  406f64:	aam    0x96
  406f66:	fs pop edi
  406f68:	inc    ebx
  406f69:	mov    dh,0xf3
  406f6b:	xchg   bh,bh
  406f6d:	push   cs
  406f6e:	std    
  406f6f:	push   ecx
  406f70:	shr    DWORD PTR [esp+ebx*1],1
  406f73:	lea    esp,[ecx-0x72]
  406f76:	sub    ch,BYTE PTR [ecx]
  406f78:	jmp    0x5739896b
  406f7d:	sub    al,0xea
  406f7f:	cs or  al,0x84
  406f82:	or     ebp,DWORD PTR [esi-0x68a14a6]
  406f88:	jle    0x406fb2
  406f8a:	test   DWORD PTR [si-0x6bbc],edx
  406f8f:	push   esp
  406f90:	ja     0x406f16
  406f92:	or     al,0xa7
  406f94:	es inc esi
  406f96:	out    0x6f,al
  406f98:	xchg   esi,eax
  406f99:	loopne 0x406f25
  406f9b:	inc    eax
  406f9c:	push   edx
  406f9d:	inc    edx
  406f9e:	sub    ah,BYTE PTR [edx-0x45a7def8]
  406fa4:	lahf   
  406fa5:	or     BYTE PTR [ecx+ebx*1-0x4b],dl
  406fa9:	pop    ebx
  406faa:	test   eax,0x321d17ca
  406faf:	cmp    BYTE PTR [ebp+0x1e],ah
  406fb2:	ins    DWORD PTR es:[edi],dx
  406fb3:	sub    cl,al
  406fb5:	leave  
  406fb6:	imul   edx,DWORD PTR ds:0x1eecf07f,0xd7e1ddf2
  406fc0:	fld    DWORD PTR [esi]
  406fc2:	sub    DWORD PTR [edx],ecx
  406fc4:	(bad)  
  406fc5:	addr16 inc esp
  406fc7:	jne    0x406f63
  406fc9:	repz push esi
  406fcb:	ss inc edi
  406fcd:	mov    esp,0xab4dff98
  406fd2:	call   0xcb4a:0x66734ba5
  406fd9:	xor    edx,eax
  406fdb:	repz and eax,0xd4571c9
  406fe1:	mov    esi,0x12b01aaa
  406fe6:	loop   0x406fe6
  406fe8:	in     al,0x1f
  406fea:	dec    esp
  406feb:	add    dl,bh
  406fed:	jl     0x407033
  406fef:	data16 jl 0x406fab
  406ff2:	inc    ecx
  406ff3:	scas   al,BYTE PTR es:[edi]
  406ff4:	fsub   DWORD PTR [edx+0x56cdf20b]
  406ffa:	aas    
  406ffb:	mov    eax,ds:0xb80594c8
  407000:	mov    ch,0xa9
  407002:	popf   
  407003:	mov    bh,0x55
  407005:	mov    al,ds:0xbbb5048a
  40700a:	and    DWORD PTR [edi+0x79],0x9da8c818
  407011:	push   esp
  407012:	js     0x406fdf
  407014:	pop    esi
  407015:	cdq    
  407016:	cmp    eax,DWORD PTR [edx-0x242a51b2]
  40701c:	loope  0x407009
  40701e:	xor    ch,BYTE PTR [ecx-0x62430391]
  407024:	mov    BYTE PTR [edx],dl
  407026:	cmp    sp,si
  407029:	jg     0x406fdd
  40702b:	cmp    BYTE PTR [eax+0x33],al
  40702e:	mov    esp,0x15efc3d5
  407033:	mov    al,ds:0xbd9eee8f
  407038:	pop    edi
  407039:	ja     0x406fd0
  40703b:	jne    0x40706b
  40703d:	sar    DWORD PTR ds:0x743def71,cl
  407043:	shr    ch,1
  407045:	pop    ebx
  407046:	pop    es
  407047:	mov    ds:0x5a60db7d,al
  40704c:	push   0xb1d5d0ba
  407051:	xchg   ebp,eax
  407052:	mov    al,0x8d
  407054:	cmp    eax,0x8a8b0028
  407059:	push   es
  40705a:	xchg   DWORD PTR [eax-0x5c],edi
  40705d:	sbb    esi,DWORD PTR [edx]
  40705f:	cmp    DWORD PTR [edi-0x27],0xee7b3af3
  407066:	inc    ecx
  407067:	clc    
  407068:	in     eax,0x4e
  40706a:	mov    dh,0x11
  40706c:	xchg   edi,eax
  40706d:	dec    edi
  40706e:	sar    dl,cl
  407070:	dec    esi
  407071:	push   esp
  407072:	stos   BYTE PTR es:[edi],al
  407073:	xchg   ebx,eax
  407074:	dec    esp
  407075:	jg     0x407072
  407077:	pop    eax
  407078:	fistp  QWORD PTR [ecx+eax*4]
  40707b:	pop    esp
  40707c:	xlat   BYTE PTR ds:[ebx]
  40707d:	shl    DWORD PTR [eiz*1+0x238c8dfc],1
  407084:	pop    ds
  407085:	or     eax,0x237fba11
  40708a:	add    DWORD PTR [ecx],0x6b
  40708d:	pop    esi
  40708e:	jge    0x407033
  407090:	outs   dx,WORD PTR ds:[esi]
  407092:	mov    eax,0xbe318a5d
  407097:	mov    ds:0xa2ff2376,al
  40709c:	outs   dx,BYTE PTR ds:[esi]
  40709d:	adc    DWORD PTR [edi-0x37],edx
  4070a0:	call   0xc5079d8d
  4070a5:	jge    0x407077
  4070a7:	ds push ebx
  4070a9:	shl    BYTE PTR [edi],cl
  4070ab:	pmulhw mm3,QWORD PTR [eax+0x711cd3a8]
  4070b2:	jae    0x4070e3
  4070b4:	fsubrp st(3),st
  4070b6:	mov    al,0xb9
  4070b8:	and    DWORD PTR [ebp+0x38],0xcad77795
  4070bf:	cmp    edi,DWORD PTR [edi-0x78]
  4070c2:	xor    eax,0x107e99a0
  4070c7:	call   0xc0bf:0x50387edd
  4070ce:	sub    BYTE PTR [ecx-0x76],0x1c
  4070d2:	mov    cl,0xb1
  4070d4:	arpl   WORD PTR [eax],sp
  4070d6:	mov    ah,BYTE PTR [ebx]
  4070d8:	int    0x5c
  4070da:	push   ebx
  4070db:	loope  0x4070e8
  4070dd:	cmp    edx,DWORD PTR [ebp+0x16]
  4070e0:	mov    ch,0xd3
  4070e2:	lock cmc 
  4070e4:	loopne 0x4070db
  4070e6:	fcmovne st,st(4)
  4070e8:	out    dx,al
  4070e9:	test   ah,dl
  4070eb:	add    al,0x1e
  4070ed:	xor    al,BYTE PTR [ecx]
  4070ef:	inc    eax
  4070f0:	sub    eax,0xfaf92a68
  4070f5:	and    dh,BYTE PTR [ecx+0x4e]
  4070f8:	mov    ebx,0xe273ba84
  4070fd:	les    ecx,FWORD PTR ds:0x30572888
  407103:	shr    BYTE PTR [esi],1
  407105:	mov    eax,0x7878f7ac
  40710a:	cmp    eax,0xc6bbbfbb
  40710f:	(bad)  
  407111:	aas    
  407112:	xor    eax,0x44bcabd8
  407117:	mov    ss,WORD PTR [ebp-0x35c0513c]
  40711d:	nop
  40711e:	test   eax,0x6f99c0f4
  407123:	out    dx,al
  407124:	inc    edi
  407125:	loope  0x407100
  407127:	and    dh,BYTE PTR [eax+0x1f3773c7]
  40712d:	(bad)  
  40712e:	xchg   BYTE PTR [edi+0x47],al
  407131:	ret    0xac04
  407134:	mov    WORD PTR [eax+0x2f4bc2e0],fs
  40713a:	cdq    
  40713b:	nop
  40713c:	(bad)  
  40713d:	fidivr WORD PTR [edx]
  40713f:	scas   eax,DWORD PTR es:[edi]
  407140:	int3   
  407141:	or     eax,0xe4df79c0
  407146:	in     al,0x74
  407148:	(bad)  
  407149:	sbb    al,0x56
  40714b:	dec    edx
  40714c:	lahf   
  40714d:	push   0xc79269a1
  407152:	imul   ebx,DWORD PTR [ecx],0xb8588178
  407158:	lods   al,BYTE PTR ds:[esi]
  407159:	ja     0x4071ac
  40715b:	jmp    0x562cec8c
  407160:	mov    cl,0xea
  407162:	ficomp WORD PTR [esi-0x39e67d65]
  407168:	push   ecx
  407169:	leave  
  40716a:	inc    esp
  40716b:	in     al,dx
  40716c:	rep lods eax,DWORD PTR ds:[esi]
  40716e:	addr16 pop edx
  407170:	lods   eax,DWORD PTR ds:[esi]
  407171:	mov    ch,0xfd
  407173:	adc    ch,BYTE PTR [esi+0x1b5f71c1]
  407179:	inc    esp
  40717a:	sbb    eax,0x89ba9bc8
  40717f:	push   ebp
  407180:	lahf   
  407181:	xchg   ebp,eax
  407182:	cmp    ah,BYTE PTR [ebx]
  407184:	pop    edi
  407185:	(bad)  
  407186:	mov    dh,0xa3
  407188:	or     ebx,esp
  40718a:	stc    
  40718b:	and    eax,ebp
  40718d:	jge    0x4071c6
  40718f:	push   ebx
  407190:	mov    dl,0x34
  407192:	das    
  407193:	(bad)  
  407195:	das    
  407196:	mov    ds:0x6db2af00,eax
  40719b:	jge    0x407157
  40719d:	jge    0x4071c0
  40719f:	jg     0x407134
  4071a1:	jg     0x4071cd
  4071a3:	push   ecx
  4071a4:	mov    edi,0xa885d8d6
  4071a9:	dec    edx
  4071aa:	daa    
  4071ab:	in     al,0x84
  4071ad:	sub    eax,0x293cf144
  4071b2:	cmp    DWORD PTR [ecx+0x7f],0xffffffbf
  4071b6:	push   edx
  4071b7:	cmp    al,cl
  4071b9:	adc    ch,al
  4071bb:	cmp    ch,BYTE PTR [edx-0x54]
  4071be:	mov    BYTE PTR [eax-0x27],0x49
  4071c2:	(bad)  
  4071c3:	leave  
  4071c4:	ss enter 0x119a,0xfb
  4071c9:	push   cs
  4071ca:	cli    
  4071cb:	retf   0xcce2
  4071ce:	clc    
  4071cf:	fsub   QWORD PTR [esi-0x27]
  4071d2:	inc    ebp
  4071d3:	sub    ah,BYTE PTR [eax+eiz*2-0x69]
  4071d7:	lock dec edx
  4071d9:	pop    es
  4071da:	or     BYTE PTR [edi],bl
  4071dc:	mov    ah,0x67
  4071de:	sbb    edi,DWORD PTR [edx+0x43]
  4071e1:	hlt    
  4071e2:	shl    BYTE PTR [edi-0x5e7a017b],0x36
  4071e9:	js     0x4071d8
  4071eb:	mov    ebx,0x99b58302
  4071f0:	cli    
  4071f1:	add    al,cl
  4071f3:	call   0xbd55276b
  4071f8:	xor    eax,0x24b95f47
  4071fd:	or     eax,0xbe5abe98
  407202:	mov    esp,0xcdab89a6
  407207:	in     eax,dx
  407208:	dec    esi
  407209:	adc    BYTE PTR [ecx],cl
  40720b:	add    eax,0xf88bea5f
  407210:	mov    edx,0x52e8c48b
  407215:	pop    ss
  407216:	inc    edi
  407217:	shl    BYTE PTR ds:[edi-0x1a],1
  40721b:	ins    DWORD PTR es:[edi],dx
  40721c:	xlat   BYTE PTR ds:[ebx]
  40721d:	iret   
  40721e:	retf   0x5cf9
  407221:	repz fmul QWORD PTR [ecx]
  407224:	mov    edi,0xc1e6daeb
  407229:	ss jo  0x407250
  40722c:	inc    edi
  40722d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40722e:	xor    DWORD PTR [eax-0x1b],0xf08b190f
  407235:	pop    edi
  407236:	aad    0x4c
  407238:	cld    
  407239:	ret    
  40723a:	cmp    ch,bh
  40723c:	imul   ebx,DWORD PTR [eax],0x9
  40723f:	jmp    DWORD PTR [edi-0xb]
  407242:	cmp    DWORD PTR [edx+0x4],edx
  407245:	or     ebp,DWORD PTR [bx+di-0x69]
  407249:	or     al,BYTE PTR [edx+esi*1-0x6bc34063]
  407250:	in     eax,0x8c
  407252:	jl     0x40721a
  407254:	aam    0x4f
  407256:	dec    edi
  407257:	fwait
  407258:	in     eax,dx
  407259:	xor    ch,bh
  40725b:	call   0xdc37:0x650bf877
  407262:	stos   BYTE PTR es:[edi],al
  407263:	leave  
  407264:	int    0x8d
  407266:	mov    al,ds:0xab0affc1
  40726b:	retf   0x37f
  40726e:	(bad)  
  40726f:	leave  
  407270:	clc    
  407271:	mov    al,ds:0x7e6e9d8f
  407276:	jg     0x4072ac
  407278:	and    BYTE PTR [edx+0x49],bh
  40727b:	sub    edx,DWORD PTR [edx+ebx*2]
  40727e:	popa   
  40727f:	inc    DWORD PTR [edi]
  407281:	(bad)  
  407282:	jno    0x407303
  407284:	dec    edx
  407285:	jmp    0x4072da
  407287:	enter  0x8472,0x5f
  40728b:	and    DWORD PTR [eax+edx*2-0x76],esp
  40728f:	loopne 0x40728f
  407291:	jl     0x40724d
  407293:	ins    BYTE PTR es:[edi],dx
  407294:	sub    al,0xa9
  407296:	loop   0x40721a
  407298:	jns    0x407263
  40729a:	push   ebp
  40729b:	rcr    DWORD PTR [edx+0x5d49b89a],cl
  4072a1:	or     eax,0xffa8f4fc
  4072a6:	ror    BYTE PTR [edx+0x151be6a3],0xa5
  4072ad:	(bad)  
  4072ae:	enter  0x2d22,0x7a
  4072b2:	jmp    0x4072ab
  4072b4:	sbb    eax,0x8a5b41d6
  4072b9:	dec    edi
  4072ba:	xchg   BYTE PTR [ebx+ebp*8],cl
  4072bd:	sbb    DWORD PTR [ebx-0x5bfe5fd2],edi
  4072c3:	ror    DWORD PTR [edx+0x57],1
  4072c6:	jl     0x4072b8
  4072c8:	inc    edx
  4072c9:	in     al,dx
  4072ca:	lahf   
  4072cb:	fisub  DWORD PTR [bp+di]
  4072ce:	cwde   
  4072cf:	(bad)  
  4072d0:	or     BYTE PTR [edi],dh
  4072d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072d3:	retf   0x68ba
  4072d6:	mov    bl,0x6
  4072d8:	imul   ebx,DWORD PTR [ecx+0x39],0x22
  4072dc:	popa   
  4072dd:	xchg   ecx,eax
  4072de:	mov    eax,ds:0x699cd599
  4072e3:	pushf  
  4072e4:	mov    edi,0xb4408c4a
  4072e9:	xchg   bh,ch
  4072eb:	pop    ebp
  4072ec:	imul   edx,ecx,0x252ac671
  4072f2:	xor    edx,DWORD PTR [edx+0x3]
  4072f5:	adc    dh,cl
  4072f7:	aas    
  4072f8:	xchg   DWORD PTR [ecx-0x2],esi
  4072fb:	push   ecx
  4072fc:	dec    esp
  4072fd:	adc    ebp,DWORD PTR [edi-0x793f7289]
  407303:	pop    edx
  407304:	test   al,0xc7
  407306:	mov    ds:0xe8438df,ax
  40730c:	test   al,0xba
  40730e:	or     dh,BYTE PTR [eax+edi*8+0x42]
  407312:	xlat   BYTE PTR ds:[ebx]
  407313:	push   0x56
  407315:	sub    eax,0xfec11cf4
  40731a:	mov    ah,0xd4
  40731c:	ret    0x3e38
  40731f:	(bad)  
  407320:	pop    ebx
  407321:	push   ds
  407322:	xor    DWORD PTR [ebp-0x4],ebx
  407325:	mov    BYTE PTR [di+0x28],ah
  407329:	lds    ecx,FWORD PTR [ebp-0x5053eaa5]
  40732f:	sbb    BYTE PTR [esi],dh
  407331:	fist   WORD PTR [ebp-0x66]
  407334:	aaa    
  407335:	enter  0x2110,0xb0
  407339:	and    eax,0xf792c9f3
  40733e:	cld    
  40733f:	sub    DWORD PTR [ebx+0x46e05a7d],eax
  407345:	mov    ebp,0xcfa8a36d
  40734a:	push   ebp
  40734b:	imul   edi,DWORD PTR [ebx],0x73681447
  407351:	dec    ecx
  407352:	vpcomb xmm4,xmm1,XMMWORD PTR [ebx],0xf1
  407358:	pop    ebx
  407359:	mov    ah,0x41
  40735b:	inc    eax
  40735c:	outs   dx,DWORD PTR ds:[esi]
  40735d:	repz popf 
  40735f:	inc    esp
  407360:	sub    BYTE PTR [ecx],0xda
  407363:	adc    eax,0xb2f333fb
  407368:	imul   ecx,DWORD PTR [esi],0x735842d1
  40736e:	mov    DWORD PTR [ebx+0x307a9c87],ecx
  407374:	icebp  
  407375:	cmp    al,0x52
  407377:	cmc    
  407378:	aaa    
  407379:	sbb    dl,al
  40737b:	pop    edi
  40737c:	test   al,dl
  40737e:	sar    DWORD PTR [edi-0x461c3071],1
  407384:	fdiv   st(5),st
  407386:	(bad)  
  407387:	out    dx,eax
  407388:	scas   eax,DWORD PTR es:[edi]
  407389:	imul   ebp,DWORD PTR [ebp+0x58],0x79e6b1a8
  407390:	sbb    al,0x80
  407392:	bound  ebp,QWORD PTR [eax]
  407394:	jg     0x407365
  407396:	jle    0x407381
  407398:	ret    
  407399:	jmp    0x4598ab34
  40739e:	aas    
  40739f:	idiv   BYTE PTR [ecx+0x73]
  4073a2:	or     esp,DWORD PTR [ecx]
  4073a4:	sbb    eax,0xe03fe07b
  4073a9:	sbb    eax,0xd6d09a06
  4073ae:	iret   
  4073af:	iret   
  4073b0:	mov    ch,0x3
  4073b2:	cs sub edi,esi
  4073b5:	dec    DWORD PTR [edi-0x6cfd9b23]
  4073bb:	clc    
  4073bc:	bound  esp,QWORD PTR [edx-0xe4d6d77]
  4073c2:	jmp    0x407419
  4073c4:	sbb    DWORD PTR [eax-0x18766057],esi
  4073ca:	push   cs
  4073cb:	cli    
  4073cc:	jae    0x40739f
  4073ce:	xchg   esi,eax
  4073cf:	pushf  
  4073d0:	add    eax,0x62969fb4
  4073d5:	xchg   ebx,eax
  4073d6:	outs   dx,DWORD PTR ds:[esi]
  4073d7:	out    dx,eax
  4073d8:	cdq    
  4073d9:	mov    ecx,ebx
  4073db:	rcl    BYTE PTR [eax-0x43c843fa],cl
  4073e1:	xchg   BYTE PTR [eax+eax*1],bh
  4073e4:	and    eax,edi
  4073e6:	xchg   esi,eax
  4073e7:	cdq    
  4073e8:	scas   al,BYTE PTR es:[edi]
  4073e9:	int3   
  4073ea:	mov    ch,0x60
  4073ec:	gs and eax,0x91429a0
  4073f2:	fdiv   QWORD PTR [ebp+0x46]
  4073f5:	sub    al,0x2
  4073f7:	mov    al,0x78
  4073f9:	mov    bl,0xb4
  4073fb:	imul   esp,DWORD PTR [edx+0x34698684],0xc9af3fa2
  407405:	and    ah,bh
  407407:	hlt    
  407408:	add    DWORD PTR [edx],0xffffffd7
  40740b:	pop    ebp
  40740c:	and    al,0x81
  40740e:	and    al,0xcf
  407410:	test   al,0x6d
  407412:	call   FWORD PTR [edi+ebx*2+0x7a3d5f13]
  407419:	mov    al,ds:0xda0f5e7f
  40741e:	jae    0x407491
  407420:	inc    edi
  407421:	jne    0x40740f
  407423:	iret   
  407424:	(bad)  
  407425:	dec    edi
  407426:	xchg   ecx,eax
  407427:	je     0x40741b
  407429:	retf   
  40742a:	into   
  40742b:	add    BYTE PTR [esi],dh
  40742d:	out    dx,al
  40742e:	or     al,BYTE PTR [eax]
  407430:	xor    eax,0x775c97e4
  407435:	inc    eax
  407436:	test   ch,dl
  407438:	clts   
  40743a:	sbb    ecx,DWORD PTR [edx]
  40743c:	jb     0x4074b3
  40743e:	inc    edi
  40743f:	dec    ebp
  407440:	mov    esi,0xeb426829
  407445:	mov    BYTE PTR fs:[ebp+0x29b51df1],al
  40744c:	add    al,0xf2
  40744e:	sub    esi,DWORD PTR [ecx+0x13]
  407451:	pop    eax
  407452:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407453:	jae    0x407423
  407455:	or     bl,ch
  407457:	ss pop edx
  407459:	xchg   esi,eax
  40745a:	mov    bh,0x88
  40745c:	jp     0x40744d
  40745e:	push   ebp
  40745f:	std    
  407460:	pop    ebp
  407461:	push   edx
  407462:	dec    ebx
  407463:	mov    edx,0x5fb42f9f
  407468:	mov    al,0x2
  40746a:	push   cs
  40746b:	in     eax,0x10
  40746d:	lods   eax,DWORD PTR ds:[esi]
  40746e:	push   ebx
  40746f:	outs   dx,DWORD PTR ds:[esi]
  407470:	cli    
  407471:	mov    esi,0x599b90fa
  407476:	cld    
  407477:	ror    DWORD PTR [esi+0x4888bc3b],1
  40747d:	dec    edi
  40747e:	sub    ebp,esp
  407480:	push   edi
  407481:	data16 arpl WORD PTR ds:0x709ff768,ax
  407488:	ins    DWORD PTR es:[edi],dx
  407489:	ror    esp,1
  40748b:	lahf   
  40748c:	or     DWORD PTR [edi],esi
  40748e:	push   edi
  40748f:	rcr    BYTE PTR [esi-0x37],cl
  407492:	std    
  407493:	stos   BYTE PTR es:[edi],al
  407494:	push   edx
  407495:	(bad)  
  407496:	push   ebx
  407497:	xchg   ebp,eax
  407498:	ja     0x407471
  40749a:	mov    ebx,0xbc06f7e1
  40749f:	xor    cl,ch
  4074a1:	sub    BYTE PTR [esi],ah
  4074a3:	mov    esi,0xb52a25ee
  4074a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074a9:	mov    esp,0x5df7ee37
  4074ae:	out    0xc5,al
  4074b0:	mov    al,0xb5
  4074b2:	push   0x8d18a4f3
  4074b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074b8:	daa    
  4074b9:	(bad)  
  4074ba:	mov    esp,0x3561933e
  4074bf:	mov    BYTE PTR [edx],ch
  4074c1:	sub    BYTE PTR [edx-0x5f],cl
  4074c4:	fisttp WORD PTR [edx]
  4074c6:	jg     0x4074dc
  4074c8:	pop    esp
  4074c9:	stos   DWORD PTR es:[edi],eax
  4074ca:	rol    ecx,0x7e
  4074cd:	jecxz  0x407525
  4074cf:	(bad)
  4074d2:	push   ebx
  4074d3:	ds leave 
  4074d5:	add    edi,ebp
  4074d7:	cs popf 
  4074d9:	jecxz  0x40755a
  4074db:	jecxz  0x4074e4
  4074dd:	xchg   ebp,eax
  4074de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074df:	pop    ebx
  4074e0:	mov    ds:0x1bd96203,eax
  4074e5:	pop    ecx
  4074e6:	pop    es
  4074e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074e8:	or     dh,BYTE PTR [ebx+0x488950]
  4074ee:	ins    DWORD PTR es:[edi],dx
  4074ef:	(bad)  
  4074f0:	mov    ecx,0x5bba9196
  4074f5:	test   DWORD PTR [ecx],esi
  4074f7:	xor    al,0x26
  4074f9:	adc    al,0x5a
  4074fb:	lea    esp,[esi+0x67]
  4074fe:	sub    DWORD PTR [edi],edx
  407500:	push   cs
  407501:	and    cl,BYTE PTR [ebx]
  407503:	pop    es
  407504:	xlat   BYTE PTR ds:[ebx]
  407505:	rcl    BYTE PTR [edx],cl
  407507:	cwde   
  407508:	adc    eax,0xffffffa1
  40750b:	and    BYTE PTR [esi],bl
  40750d:	jecxz  0x407586
  40750f:	push   edi
  407510:	cmp    ebx,eax
  407512:	les    ebx,FWORD PTR [esp+ecx*8+0x36cac96e]
  407519:	push   ss
  40751a:	jl     0x4074e1
  40751c:	add    ch,dh
  40751e:	hlt    
  40751f:	aas    
  407520:	call   0xd50c:0x15057e36
  407527:	xor    ebp,esp
  407529:	and    edi,DWORD PTR ds:[ebx]
  40752c:	inc    ebx
  40752d:	std    
  40752e:	push   cs
  40752f:	mov    dh,0xac
  407531:	mov    ah,0xe4
  407533:	xchg   ecx,eax
  407534:	das    
  407535:	lea    ebp,[eax+ebx*8+0x24399906]
  40753c:	iret   
  40753d:	mov    esp,0xd731fe21
  407542:	or     al,0x35
  407544:	sahf   
  407545:	lea    ebp,[esi-0x3f3d475f]
  40754b:	addr16 sbb eax,0xfb17bcb3
  407551:	neg    DWORD PTR [edx-0x28831fa2]
  407557:	mov    bl,0xc4
  407559:	lahf   
  40755a:	jae    0x407560
  40755c:	or     esi,ebx
  40755e:	or     dl,BYTE PTR [ebx-0x31c5296c]
  407564:	pop    esi
  407565:	sub    ebx,DWORD PTR [ecx-0x7e06f0b]
  40756b:	jns    0x407514
  40756d:	cmp    dl,BYTE PTR [ebp+0x63d61399]
  407573:	cld    
  407574:	mov    bl,BYTE PTR [eax]
  407576:	jbe    0x4075b9
  407578:	inc    edx
  407579:	xchg   esp,eax
  40757a:	jae    0x407529
  40757c:	push   esp
  40757d:	ror    ebx,cl
  40757f:	xchg   ebp,eax
  407580:	addr16 xchg ebp,eax
  407582:	push   ds
  407583:	mov    al,0xe8
  407585:	lahf   
  407586:	mov    ah,0xc3
  407588:	aaa    
  407589:	inc    esp
  40758a:	dec    eax
  40758b:	sbb    esp,DWORD PTR [esi-0x7c]
  40758e:	xchg   ebp,eax
  40758f:	bound  ebx,QWORD PTR [edi-0x2b]
  407592:	push   0xd
  407594:	push   ebx
  407595:	js     0x40757a
  407597:	xchg   ebp,eax
  407598:	jne    0x407535
  40759a:	push   esp
  40759b:	add    ah,cl
  40759d:	push   ecx
  40759e:	pop    edx
  40759f:	(bad)  
  4075a0:	outs   dx,BYTE PTR ds:[esi]
  4075a1:	push   edi
  4075a2:	(bad)  
  4075a3:	stc    
  4075a4:	cmp    eax,0xae841b00
  4075a9:	pusha  
  4075aa:	dec    edx
  4075ab:	lahf   
  4075ac:	adc    esi,edi
  4075ae:	jmp    0x22c0:0x45e884b7
  4075b5:	bound  esp,QWORD PTR [ecx+0x638a5839]
  4075bb:	popa   
  4075bc:	adc    esi,esp
  4075be:	fcmovnb st,st(4)
  4075c0:	sti    
  4075c1:	dec    edx
  4075c2:	mov    DWORD PTR [ebx-0x778e167a],0xd901d7a0
  4075cc:	jo     0x40760f
  4075ce:	jge    0x40757e
  4075d0:	paddsb mm4,mm0
  4075d3:	mov    eax,0x9a782d9f
  4075d8:	lahf   
  4075d9:	push   esp
  4075da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075db:	ss jp  0x40765a
  4075de:	imul   BYTE PTR ds:0xe1056e0c
  4075e4:	jnp    0x4075fc
  4075e6:	or     esp,esi
  4075e8:	ror    BYTE PTR [esi+0x3f],cl
  4075eb:	pop    si
  4075ed:	xor    ah,ah
  4075ef:	sub    BYTE PTR [ecx],0x2a
  4075f2:	xchg   edi,eax
  4075f3:	push   edx
  4075f4:	test   al,0xe
  4075f6:	int3   
  4075f7:	or     esi,DWORD PTR [ebp-0xc]
  4075fa:	test   BYTE PTR [ebx-0x5dc0af04],bh
  407600:	cmp    ebp,edi
  407602:	ror    DWORD PTR [edi],0x9a
  407605:	test   al,0x64
  407607:	pop    es
  407608:	dec    esp
  407609:	or     eax,0x2235977
  40760e:	mov    edx,0x3adbfff7
  407613:	ret    0x71ee
  407616:	dec    ecx
  407617:	xchg   ebx,eax
  407618:	fimul  WORD PTR [eax-0x61]
  40761b:	inc    ebp
  40761c:	pop    ebx
  40761d:	adc    DWORD PTR [eax],ebp
  40761f:	cwde   
  407620:	add    eax,0x4c80160
  407625:	lock out dx,al
  407627:	push   ebp
  407628:	pop    ebp
  407629:	mov    ecx,0x80391751
  40762e:	in     eax,dx
  40762f:	cmp    al,0x51
  407631:	mov    dl,BYTE PTR [edi+0x681bd086]
  407637:	and    edx,DWORD PTR [eax+0x12]
  40763a:	push   ebx
  40763b:	adc    al,0x60
  40763d:	mov    edi,0x1a906720
  407642:	xchg   ecx,eax
  407643:	test   eax,0x68d1f197
  407648:	ja     0x4076c2
  40764a:	pop    es
  40764b:	pop    ds
  40764c:	stos   BYTE PTR es:[edi],al
  40764d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40764e:	push   ebp
  40764f:	fs pop edi
  407651:	test   dl,ch
  407653:	mov    dh,0xf
  407655:	push   es
  407656:	and    DWORD PTR [edx-0x8],ebx
  407659:	or     esp,DWORD PTR [esi+eax*4]
  40765c:	in     eax,0xe5
  40765e:	mov    ebp,0x83017fc3
  407663:	mov    ds:0x54117c19,eax
  407669:	cli    
  40766a:	out    dx,eax
  40766b:	(bad)  
  40766c:	adc    eax,0x23cca032
  407671:	jns    0x4075f3
  407673:	es inc edi
  407675:	les    esp,FWORD PTR [edi+0x7ef4137a]
  40767b:	cwde   
  40767c:	mov    dl,0xdb
  40767e:	dec    ebp
  40767f:	add    ebp,DWORD PTR [ebx-0x19]
  407682:	add    al,0x68
  407684:	add    cl,BYTE PTR [edx+ebp*8-0x25e26d39]
  40768b:	inc    edi
  40768c:	jmp    0x93bf:0x460ce223
  407693:	loope  0x4076d6
  407695:	dec    ecx
  407696:	xchg   DWORD PTR [esi+0x6b],esi
  407699:	mov    ah,0x1f
  40769b:	(bad)
  40769e:	cwde   
  40769f:	out    0xdb,al
  4076a1:	jns    0x40769f
  4076a3:	and    eax,DWORD PTR [ebx-0x20dca290]
  4076a9:	adc    BYTE PTR [ecx],ah
  4076ab:	shr    ah,cl
  4076ad:	es aam 0x97
  4076b0:	mov    al,ds:0x9a18f41f
  4076b5:	cli    
  4076b6:	les    edi,FWORD PTR [eax]
  4076b8:	mov    esi,0x3c9221ed
  4076bd:	clc    
  4076be:	jmp    0xf624:0x9f122039
  4076c5:	shr    al,1
  4076c7:	dec    edx
  4076c8:	(bad)  
  4076c9:	jnp    0x4076f4
  4076cb:	stos   DWORD PTR es:[edi],eax
  4076cc:	add    al,0x70
  4076ce:	bound  ebx,QWORD PTR [esi+ebp*4-0x7a]
  4076d2:	inc    esi
  4076d3:	and    BYTE PTR [esi+0xf16bc6f],0xf3
  4076da:	xchg   edx,eax
  4076db:	ins    BYTE PTR es:[edi],dx
  4076dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076de:	sbb    dh,ch
  4076e0:	outs   dx,DWORD PTR ds:[esi]
  4076e1:	jb     0x407677
  4076e3:	sti    
  4076e4:	dec    esi
  4076e5:	imul   edx,esi,0xffffffa9
  4076e8:	xchg   edi,eax
  4076e9:	sub    edi,DWORD PTR [esi]
  4076eb:	ror    DWORD PTR [edx],0x71
  4076ee:	xchg   ecx,eax
  4076ef:	or     ah,ch
  4076f1:	loope  0x4076e8
  4076f3:	push   ecx
  4076f4:	cmp    eax,0x2f45e178
  4076f9:	jne    0x4076c3
  4076fb:	pop    ds
  4076fc:	js     0x407715
  4076fe:	(bad)  
  4076ff:	fistp  QWORD PTR [ebx+0x8]
  407702:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407703:	test   eax,0xd638037
  407708:	imul   ebp,DWORD PTR [ebp-0x3e6bffc0],0xffffffa4
  40770f:	cmp    DWORD PTR [eax+0x44],esi
  407712:	aad    0x69
  407714:	ss dec ecx
  407716:	and    BYTE PTR [edi-0x76],bh
  407719:	pop    edx
  40771a:	xchg   esp,eax
  40771b:	add    eax,0xb3688e09
  407720:	mov    edx,0xce1397c6
  407725:	xchg   BYTE PTR [esi+0x367ca784],dh
  40772b:	in     al,dx
  40772c:	jl     0x407726
  40772e:	and    dh,BYTE PTR [eax]
  407730:	aas    
  407731:	inc    ebx
  407732:	mov    eax,0x76a588f
  407737:	mov    ebp,DWORD PTR [edi-0x41a3d655]
  40773d:	cmc    
  40773e:	sti    
  40773f:	xlat   BYTE PTR ds:[ebx]
  407740:	dec    ebx
  407741:	lahf   
  407742:	nop
  407743:	fdivp  st(1),st
  407745:	adc    al,bl
  407747:	inc    edx
  407748:	pushf  
  407749:	sub    eax,0xfac83bfc
  40774e:	mov    DWORD PTR [esi+0x187e98e5],edi
  407754:	mov    ebx,0x52e3ffc2
  407759:	sub    al,0x7f
  40775b:	dec    eax
  40775c:	and    ah,0xa9
  40775f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407760:	daa    
  407761:	ret    
  407762:	stos   BYTE PTR es:[edi],al
  407763:	mov    BYTE PTR [edi],ch
  407765:	mov    dl,0x3f
  407767:	pop    ds
  407768:	test   eax,0x56893dfe
  40776d:	ret    0xd362
  407770:	mov    eax,0x901f1c09
  407775:	mov    es,WORD PTR [esp+edi*1-0x5]
  407779:	xchg   ebp,eax
  40777a:	xchg   DWORD PTR ds:0x64bf3fe7,ebp
  407780:	loopne 0x407762
  407782:	push   edi
  407783:	mov    edi,0xf6f73aba
  407788:	adc    edi,esp
  40778a:	popa   
  40778b:	pop    ebp
  40778c:	pop    ds
  40778d:	(bad)  
  40778e:	gs popa 
  407790:	sub    esi,DWORD PTR [edx+edx*4-0x53]
  407794:	pop    ebp
  407795:	mov    eax,ds:0x24033157
  40779a:	pop    esp
  40779b:	xor    BYTE PTR [ecx-0x229affb6],0x84
  4077a2:	cli    
  4077a3:	inc    ebx
  4077a4:	call   0x84657bff
  4077a9:	cmc    
  4077aa:	xchg   dl,bh
  4077ac:	gs pop edx
  4077ae:	cwde   
  4077af:	lock sbb al,0x99
  4077b2:	aad    0xe3
  4077b4:	inc    esi
  4077b5:	sahf   
  4077b6:	xlat   BYTE PTR ds:[ebx]
  4077b7:	leavew 
  4077b9:	stc    
  4077ba:	push   0x75
  4077bc:	stos   WORD PTR es:[edi],ax
  4077be:	xchg   esp,eax
  4077bf:	rol    bl,0xcf
  4077c2:	scas   eax,DWORD PTR es:[edi]
  4077c3:	retf   
  4077c4:	(bad)  
  4077c6:	pop    esp
  4077c7:	push   0xf5b194b
  4077cc:	mov    edi,ecx
  4077ce:	loope  0x40784e
  4077d0:	add    DWORD PTR [ebx+0x2c],edx
  4077d3:	shl    BYTE PTR [ecx+0x3b],0xe9
  4077d7:	xor    esi,DWORD PTR [eax+edi*4+0x6f68a1b]
  4077de:	mov    DWORD PTR cs:[edi-0x37],ecx
  4077e2:	sbb    edi,ecx
  4077e4:	mov    ebp,0x5c8d287
  4077e9:	cmp    DWORD PTR [ebp+0x7b],edi
  4077ec:	in     al,dx
  4077ed:	ret    
  4077ee:	adc    bh,dh
  4077f0:	pop    es
  4077f1:	lahf   
  4077f2:	inc    edi
  4077f3:	pop    es
  4077f4:	imul   BYTE PTR [ecx-0x7c]
  4077f7:	sbb    ecx,DWORD PTR [esi+ebp*1+0x7fdcb0e5]
  4077fe:	jae    0x40782a
  407800:	lock test eax,0x43ffd7f1
  407806:	lock and al,BYTE PTR [ecx+esi*8+0x1675cbf5]
  40780e:	mov    WORD PTR [ebx-0x2e4910a6],fs
  407814:	hlt    
  407815:	test   esp,0x7defad81
  40781b:	loopne 0x4077e3
  40781d:	pop    DWORD PTR [esi-0x6c]
  407820:	inc    esi
  407821:	adc    BYTE PTR [esi+0x7ecd5ac3],bl
  407827:	sbb    BYTE PTR [edi],0xf6
  40782a:	leave  
  40782b:	dec    esp
  40782c:	dec    esp
  40782d:	or     BYTE PTR [ebp-0x7d091077],al
  407833:	je     0x407823
  407835:	jnp    0x407899
  407837:	adc    DWORD PTR [eax+eax*4],ebp
  40783a:	mov    esi,0xf38fe7fd
  40783f:	ret    0x5eef
  407842:	shl    DWORD PTR [esi-0x6d130b14],cl
  407848:	dec    ecx
  407849:	xchg   DWORD PTR [ebx],esp
  40784b:	mov    eax,ds:0xc0c5e134
  407850:	in     eax,0x1
  407852:	sbb    ah,BYTE PTR ds:0xee16b287
  407858:	mov    esp,esp
  40785a:	push   ds
  40785b:	mov    es,WORD PTR [esi-0xc]
  40785e:	sub    eax,0xa8508a1d
  407863:	loopne 0x40786d
  407865:	out    dx,eax
  407866:	jnp    0x40782c
  407868:	xchg   ecx,eax
  407869:	push   ss
  40786a:	scas   al,BYTE PTR es:[edi]
  40786b:	xor    esp,0x57
  40786e:	shl    esp,1
  407870:	scas   al,BYTE PTR es:[edi]
  407871:	dec    ebp
  407872:	fadd   DWORD PTR [edx+eiz*8]
  407875:	push   es
  407876:	(bad)  
  407877:	clc    
  407878:	(bad)  
  407879:	lods   al,BYTE PTR ds:[esi]
  40787a:	mov    ah,0xac
  40787c:	jecxz  0x407898
  40787e:	sbb    DWORD PTR [ebx-0x3beb1138],ecx
  407884:	sub    BYTE PTR ds:0xc3a8ba6b,0x80
  40788b:	xor    al,0x3d
  40788d:	ds dec esp
  40788f:	sbb    al,0x88
  407891:	loopne 0x4078f5
  407893:	jp     0x4078f2
  407895:	jg     0x4078b5
  407897:	xchg   ebp,eax
  407898:	pop    edx
  407899:	mov    bh,0x62
  40789b:	jp     0x407903
  40789d:	xlat   BYTE PTR ds:[ebx]
  40789e:	ins    DWORD PTR es:[edi],dx
  40789f:	loope  0x407842
  4078a1:	dec    edx
  4078a2:	pop    ds
  4078a3:	xchg   DWORD PTR [edx-0x465e50e5],edi
  4078a9:	jge    0x40782b
  4078ab:	mov    ds:0x27ffa654,al
  4078b0:	push   ss
  4078b1:	mov    ebx,0x22d0e373
  4078b6:	out    0x7,eax
  4078b8:	fs sahf 
  4078ba:	xor    bh,BYTE PTR [esi]
  4078bc:	inc    eax
  4078bd:	or     WORD PTR [edx+ebx*8-0x4a],di
  4078c2:	mov    cl,0x99
  4078c4:	inc    edi
  4078c5:	jns    0x40788c
  4078c7:	sbb    eax,eax
  4078c9:	loopne 0x407947
  4078cb:	sahf   
  4078cc:	xor    al,0x5b
  4078ce:	lods   eax,DWORD PTR ds:[esi]
  4078cf:	data16 sti 
  4078d1:	xor    ebp,DWORD PTR [ecx]
  4078d3:	xchg   edx,eax
  4078d4:	in     eax,dx
  4078d5:	int    0xf9
  4078d7:	and    al,0x10
  4078d9:	stos   DWORD PTR es:[edi],eax
  4078da:	mov    cl,0xc2
  4078dc:	addr16 enter 0xfde6,0x30
  4078e1:	cmp    eax,0xd947311b
  4078e6:	scas   eax,DWORD PTR es:[edi]
  4078e7:	in     eax,dx
  4078e8:	loope  0x4078f7
  4078ea:	xor    esi,DWORD PTR [edx-0x25]
  4078ed:	sub    al,0x18
  4078ef:	adc    cl,BYTE PTR [edi-0x1d5902b4]
  4078f5:	mov    ebp,0xe51105a7
  4078fa:	out    dx,eax
  4078fb:	add    al,0x18
  4078fd:	adc    DWORD PTR [esi+0x46],edi
  407900:	jge    0x407902
  407902:	outs   dx,BYTE PTR ds:[esi]
  407903:	inc    ebp
  407904:	or     DWORD PTR [edi-0x36],0x65986451
  40790b:	xor    eax,0x427bbbc4
  407910:	ja     0x4078db
  407912:	push   0x29
  407914:	sbb    DWORD PTR [ebx-0x7f],esi
  407917:	pop    es
  407918:	cmc    
  407919:	out    dx,al
  40791a:	adc    DWORD PTR [ebx],ecx
  40791c:	xchg   edi,eax
  40791d:	mov    al,0xc8
  40791f:	stos   WORD PTR es:[edi],ax
  407921:	pushf  
  407922:	(bad)  
  407923:	jecxz  0x4078d2
  407925:	add    al,0xc0
  407927:	nop
  407928:	xlat   BYTE PTR ds:[ebx]
  407929:	leave  
  40792a:	std    
  40792b:	sbb    BYTE PTR cs:[ecx-0x57238349],dh
  407932:	push   edi
  407933:	neg    BYTE PTR [edx-0x5c]
  407936:	and    edx,0x7ee22186
  40793c:	push   cs
  40793d:	adc    bh,BYTE PTR [edi+ebp*1-0x4b46b97e]
  407944:	cld    
  407945:	es mov ecx,0x44818604
  40794b:	dec    esi
  40794c:	pop    edx
  40794d:	dec    ecx
  40794e:	mul    DWORD PTR [ebp+0x11]
  407951:	jnp    0x407999
  407953:	je     0x407994
  407955:	in     eax,dx
  407956:	fwait
  407957:	jns    0x40797f
  407959:	jo     0x407931
  40795b:	shl    edx,0x30
  40795e:	out    dx,eax
  40795f:	sub    edi,DWORD PTR [edi-0x16]
  407962:	dec    esp
  407963:	xchg   ecx,eax
  407964:	addr16 (bad) 
  407966:	mov    ds:0xde141530,al
  40796b:	mov    ?,WORD PTR [eax]
  40796d:	stos   DWORD PTR es:[edi],eax
  40796e:	jg     0x4079bb
  407970:	xchg   DWORD PTR [edx],ecx
  407972:	mov    edi,0xde2c8fac
  407977:	ret    0xb531
  40797a:	ins    DWORD PTR es:[edi],dx
  40797b:	pop    ebp
  40797c:	mov    esi,0x6a315b47
  407981:	fstp   DWORD PTR [esi]
  407983:	pop    ebx
  407984:	or     DWORD PTR [ecx],ecx
  407986:	mov    edi,0x859cca7d
  40798b:	and    ch,bl
  40798d:	stos   DWORD PTR es:[edi],eax
  40798e:	inc    edi
  40798f:	mov    ebx,0x19743b73
  407994:	inc    ecx
  407995:	ja     0x40793c
  407997:	xchg   ebp,eax
  407998:	cmp    ah,BYTE PTR fs:[ebp-0x1b6ea1b6]
  40799f:	jae    0x407990
  4079a1:	mov    bh,0xcd
  4079a3:	ret    0xb911
  4079a6:	cmp    al,0x57
  4079a8:	popa   
  4079a9:	frstor [eax-0x4]
  4079ac:	xrelease mov BYTE PTR [esi],dl
  4079af:	adc    bh,BYTE PTR [ecx+ebx*2-0x18]
  4079b3:	add    dl,BYTE PTR [edi+0x47]
  4079b6:	mov    ds:0x40986c39,al
  4079bb:	test   al,0x6
  4079bd:	test   al,0xe7
  4079bf:	outs   dx,DWORD PTR ds:[esi]
  4079c0:	ins    BYTE PTR es:[edi],dx
  4079c1:	jnp    0x407963
  4079c3:	xchg   edi,eax
  4079c4:	xchg   ebx,eax
  4079c5:	lods   eax,DWORD PTR ds:[esi]
  4079c6:	rol    al,0x68
  4079c9:	xchg   esi,eax
  4079ca:	data16 or al,ah
  4079cd:	loop   0x407977
  4079cf:	sti    
  4079d0:	cwde   
  4079d1:	mov    eax,0x2cde931d
  4079d6:	dec    edx
  4079d7:	inc    DWORD PTR [esp+eax*4]
  4079da:	add    eax,0xc4eaaa5e
  4079df:	xchg   dl,dl
  4079e1:	and    eax,DWORD PTR [ebx+0x59]
  4079e4:	in     al,dx
  4079e5:	loopne 0x4079a4
  4079e7:	add    DWORD PTR [eax+0x44976b37],ebp
  4079ed:	hlt    
  4079ee:	and    DWORD PTR [ebp+ebx*4+0x56],esi
  4079f2:	into   
  4079f3:	leave  
  4079f4:	dec    edx
  4079f5:	dec    ecx
  4079f6:	aad    0xa0
  4079f8:	retf   0xc17f
  4079fb:	mov    BYTE PTR [edx+ebx*1-0x18aa0cdb],dl
  407a02:	lods   al,BYTE PTR ds:[esi]
  407a03:	aas    
  407a04:	and    al,0x96
  407a06:	hlt    
  407a07:	lods   eax,DWORD PTR ds:[esi]
  407a08:	add    BYTE PTR [esi+eax*2-0x65],0x26
  407a0d:	add    eax,0xdc203fa7
  407a12:	rcr    DWORD PTR [edi+edx*1],1
  407a15:	mov    cl,0xd1
  407a17:	mov    WORD PTR [esi-0x2c191006],?
  407a1d:	and    eax,DWORD PTR [esi+eiz*2]
  407a20:	or     ecx,DWORD PTR [esi+esi*8]
  407a23:	out    0xfa,al
  407a25:	das    
  407a26:	adc    al,0x37
  407a28:	sahf   
  407a29:	scas   eax,DWORD PTR es:[edi]
  407a2a:	mov    ds:0x7b2c60c7,eax
  407a2f:	mov    ch,0x2a
  407a31:	push   edi
  407a32:	imul   eax,esp,0xffffffbc
  407a35:	push   0xda5f3f05
  407a3a:	xor    al,ch
  407a3c:	cmc    
  407a3d:	mov    edx,0xc6d5fc0c
  407a42:	mov    eax,0x14656030
  407a47:	mov    eax,0x510cf53
  407a4c:	xor    DWORD PTR [edi],esi
  407a4e:	add    al,0xfe
  407a50:	int    0xe4
  407a52:	jmp    0x443d:0xf0c07975
  407a59:	dec    edi
  407a5a:	jmp    0x223f:0x12b969e3
  407a61:	pop    eax
  407a62:	dec    edx
  407a63:	inc    eax
  407a64:	sub    BYTE PTR [eax],bh
  407a66:	push   ds
  407a67:	ret    
  407a68:	out    0x92,al
  407a6a:	dec    esp
  407a6b:	ja     0x407a7d
  407a6d:	icebp  
  407a6e:	sbb    eax,0x34b5dc64
  407a73:	sahf   
  407a74:	xchg   edi,ecx
  407a76:	imul   edx,DWORD PTR [ebx],0xffffff9d
  407a79:	fdiv   QWORD PTR [edx+esi*2]
  407a7c:	sti    
  407a7d:	repnz push 0xef54cecf
  407a83:	cli    
  407a84:	sub    ebp,DWORD PTR [edx+esi*1+0x4a]
  407a88:	dec    esp
  407a89:	mov    eax,ds:0xee7f0f47
  407a8e:	sar    BYTE PTR [esp+eax*2],cl
  407a91:	cmp    dl,ch
  407a93:	popa   
  407a94:	ins    BYTE PTR es:[edi],dx
  407a95:	outs   dx,DWORD PTR ds:[esi]
  407a96:	adc    DWORD PTR [eax+0x4b],0x5bb044a5
  407a9d:	out    dx,eax
  407a9e:	ret    
  407a9f:	push   0x7a
  407aa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407aa2:	out    0xd1,eax
  407aa4:	mov    ds:0x76769c22,al
  407aa9:	stos   BYTE PTR es:[edi],al
  407aaa:	outs   dx,DWORD PTR ds:[esi]
  407aab:	mov    ?,esi
  407aad:	ins    BYTE PTR es:[edi],dx
  407aae:	push   esp
  407aaf:	aad    0x3e
  407ab1:	jp     0x407a6e
  407ab3:	and    eax,DWORD PTR [edi+ebx*1+0x283f26bf]
  407aba:	dec    edx
  407abb:	sbb    bl,BYTE PTR [ebp-0x70e9949a]
  407ac1:	push   ecx
  407ac2:	jae    0x407a46
  407ac4:	push   ebp
  407ac5:	xor    ecx,DWORD PTR [edx+eax*1]
  407ac8:	mov    ah,0x6f
  407aca:	aas    
  407acb:	das    
  407acc:	jnp    0x407b2c
  407ace:	jo     0x407ab6
  407ad0:	(bad)  
  407ad1:	pop    ss
  407ad2:	mov    al,ds:0xba1a2838
  407ad7:	adc    BYTE PTR [esi+0x28aa4fe7],0x33
  407ade:	dec    eax
  407adf:	popa   
  407ae0:	and    eax,0x8314979
  407ae5:	(bad)  
  407ae6:	pop    ebp
  407ae7:	out    0x6,eax
  407ae9:	pop    edx
  407aea:	push   ds
  407aeb:	mov    edi,0x81f012e3
  407af0:	popf   
  407af1:	cmp    edi,DWORD PTR [ebp+0x11]
  407af4:	and    dh,BYTE PTR ds:0xb8ce85b4
  407afa:	add    DWORD PTR [edx+0x302d1e7c],esp
  407b00:	xor    ch,BYTE PTR [edx+0x33]
  407b03:	test   DWORD PTR [ebp+0x6e3ef790],ecx
  407b09:	jmp    0x407b75
  407b0b:	stc    
  407b0c:	mov    eax,0xb06dbf98
  407b11:	jnp    0x407b36
  407b13:	pop    edi
  407b14:	mov    al,0x40
  407b16:	ja     0x407a98
  407b18:	inc    edx
  407b19:	dec    ecx
  407b1a:	mov    al,0x96
  407b1c:	ja     0x407acf
  407b1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b1f:	push   esp
  407b20:	out    0xd0,eax
  407b22:	adc    eax,0xd3895b12
  407b27:	sbb    al,0xb1
  407b29:	test   al,0x17
  407b2b:	fdivr  DWORD PTR [edi+0x6b6a24fa]
  407b31:	cmp    bl,ah
  407b33:	adc    DWORD PTR [edi-0x1cc173db],esp
  407b39:	jle    0x407ae2
  407b3b:	popf   
  407b3c:	cli    
  407b3d:	mov    esi,DWORD PTR [ecx+0x16]
  407b40:	inc    ecx
  407b41:	xor    DWORD PTR [esi],esi
  407b43:	bsf    esp,DWORD PTR [ecx]
  407b46:	int    0xf6
  407b48:	dec    ecx
  407b49:	fbld   TBYTE PTR [esp+ebp*2]
  407b4c:	bound  edx,QWORD PTR [edi+0x76371115]
  407b52:	pop    eax
  407b53:	dec    ebp
  407b54:	fucomip st,st(7)
  407b56:	sti    
  407b57:	mov    dh,0x5b
  407b59:	mov    ds:0xf635f9ac,al
  407b5e:	iret   
  407b5f:	fcomi  st,st(0)
  407b61:	xor    BYTE PTR [ebx-0x62],ch
  407b64:	and    eax,0xccb7fb70
  407b69:	pop    ds
  407b6a:	sub    BYTE PTR [edi-0x1c25e35e],bh
  407b70:	mov    al,ds:0x223f73d0
  407b75:	pop    ebp
  407b76:	push   edx
  407b77:	in     eax,0x4e
  407b79:	add    BYTE PTR [ebp-0x53],cl
  407b7c:	out    dx,al
  407b7d:	cdq    
  407b7e:	loope  0x407baa
  407b80:	call   0x555de988
  407b85:	sub    ecx,DWORD PTR [edi]
  407b87:	xchg   BYTE PTR [edi-0x2dee6ee0],bl
  407b8d:	retf   0xe9c4
  407b90:	mov    es,WORD PTR [edx+0x2e]
  407b93:	arpl   WORD PTR [ebp-0x2f],bp
  407b96:	jge    0x407bb8
  407b98:	sti    
  407b99:	and    al,0xdb
  407b9b:	and    al,0x63
  407b9d:	ret    
  407b9e:	cmp    dh,BYTE PTR [ecx]
  407ba0:	fucomi st,st(4)
  407ba2:	arpl   cx,dx
  407ba4:	push   0x48
  407ba6:	mov    edx,0x51e64277
  407bab:	or     edi,DWORD PTR [edi-0xc63a2a6]
  407bb1:	nop
  407bb2:	rcr    DWORD PTR [edx-0xb],1
  407bb5:	add    eax,0x5398b37c
  407bba:	and    BYTE PTR [esi-0x3537ba12],0x43
  407bc1:	sub    BYTE PTR [esi+0x3b],bh
  407bc4:	mov    ah,0xcb
  407bc6:	dec    ebx
  407bc7:	ret    
  407bc8:	xor    DWORD PTR [edx],esi
  407bca:	mov    dh,0x31
  407bcc:	sub    bh,0xc5
  407bcf:	test   BYTE PTR [edx-0x56],bh
  407bd2:	or     dh,al
  407bd4:	add    BYTE PTR [eax+0x6c],al
  407bd7:	daa    
  407bd8:	sti    
  407bd9:	in     eax,dx
  407bda:	pop    edx
  407bdb:	sub    BYTE PTR [esp+ebp*2],dl
  407bde:	imul   esi,DWORD PTR ds:0x265ee4c6,0xffffff87
  407be5:	mov    bl,0x90
  407be7:	mov    ch,0xd0
  407be9:	push   edi
  407bea:	mov    ah,0xd0
  407bec:	call   0x84d1:0x77b72a8b
  407bf3:	sub    cl,ah
  407bf5:	call   0x10f1bd0
  407bfa:	xchg   edx,eax
  407bfb:	push   edi
  407bfc:	fidiv  WORD PTR [ecx+ebp*4-0x6c76ae16]
  407c03:	sub    DWORD PTR [ebx],eax
  407c05:	stc    
  407c06:	in     al,0x4
  407c08:	xchg   BYTE PTR [esi+0x5c],ch
  407c0b:	jno    0x407bb1
  407c0d:	pop    ebp
  407c0e:	push   edx
  407c0f:	push   eax
  407c10:	mov    ebx,0xea690bce
  407c15:	bound  ebp,QWORD PTR [ebx+0x22]
  407c18:	fisttp QWORD PTR [edi+0x7372afd5]
  407c1e:	mov    ch,0xf8
  407c20:	cs xchg ebx,eax
  407c22:	sub    dl,0x63
  407c25:	mov    cl,0xef
  407c27:	aad    0x79
  407c29:	retf   0xe288
  407c2c:	fcmovbe st,st(5)
  407c2e:	loope  0x407c9a
  407c30:	xchg   DWORD PTR [edx-0x4e021682],ebp
  407c36:	push   0xffffffe8
  407c38:	sar    cl,cl
  407c3a:	mov    dl,0xbe
  407c3c:	mov    ah,0x8
  407c3e:	sbb    ecx,esp
  407c40:	jo     0x407c06
  407c42:	or     BYTE PTR [esi+0x26],dh
  407c45:	dec    eax
  407c46:	out    dx,eax
  407c47:	stos   DWORD PTR es:[edi],eax
  407c48:	inc    ebp
  407c49:	mov    ecx,0xcc223f85
  407c4e:	popf   
  407c4f:	xor    esi,DWORD PTR [edx]
  407c51:	xor    esi,DWORD PTR [ebx+0x4c]
  407c54:	in     eax,dx
  407c55:	cld    
  407c56:	or     eax,0x13a6bd00
  407c5b:	pop    ds
  407c5c:	fistp  WORD PTR [ecx+0xc0fcd23]
  407c62:	fst    DWORD PTR [edx]
  407c64:	sbb    BYTE PTR [edx-0x5],ah
  407c67:	arpl   WORD PTR cs:0x88c5cae9,si
  407c6e:	aam    0x19
  407c70:	mov    ch,0xe8
  407c72:	lock pusha 
  407c74:	sbb    al,0xba
  407c76:	mul    bl
  407c78:	cmp    DWORD PTR [esi+ecx*1+0x2fd7f87e],0xffffffee
  407c80:	outs   dx,BYTE PTR ds:[esi]
  407c81:	cld    
  407c82:	xchg   ebp,eax
  407c83:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c85:	add    BYTE PTR [esi+0x6d],ch
  407c88:	mov    ecx,0x8845248b
  407c8d:	into   
  407c8e:	xor    al,0x2c
  407c90:	add    ecx,DWORD PTR [eax+0x749ad58c]
  407c96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c97:	test   eax,0x8343b2b8
  407c9c:	es or  al,0x90
  407c9f:	cmp    DWORD PTR [esi+0x524c70bd],edi
  407ca5:	imul   ecx,DWORD PTR ds:0x6b25b561,0x9c54194
  407caf:	mov    ds:0x4bc2903b,eax
  407cb4:	(bad)  
  407cb5:	jg     0x407d0c
  407cb7:	mov    BYTE PTR [ebp+0x6afe1911],0x7c
  407cbe:	in     eax,0x65
  407cc0:	ror    ecx,0xfe
  407cc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cc4:	mov    eax,0x9223c01b
  407cc9:	push   ebx
  407cca:	outs   dx,BYTE PTR ds:[esi]
  407ccb:	(bad)  
  407ccc:	in     al,dx
  407ccd:	xchg   edi,eax
  407cce:	fwait
  407ccf:	push   ebx
  407cd0:	test   DWORD PTR [eax-0x180e56c3],ecx
  407cd6:	out    dx,al
  407cd7:	(bad)  
  407cd8:	(bad)  
  407cd9:	sub    ah,BYTE PTR [ecx-0x77]
  407cdc:	mov    BYTE PTR [ecx-0x49bcc9b4],dh
  407ce2:	pop    es
  407ce3:	or     eax,0xe5fb5985
  407ce8:	nop
  407ce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cea:	pushf  
  407ceb:	inc    ebx
  407cec:	xor    ch,BYTE PTR [edx]
  407cee:	jnp    0x407d6e
  407cf0:	dec    edx
  407cf1:	pop    esi
  407cf2:	mov    ch,0xac
  407cf4:	and    dl,dh
  407cf6:	inc    edi
  407cf7:	fistp  QWORD PTR [edi]
  407cf9:	xor    ah,BYTE PTR [eax]
  407cfb:	and    DWORD PTR [edi-0x2a0ee067],ebx
  407d01:	stos   BYTE PTR es:[edi],al
  407d02:	sbb    BYTE PTR [edi-0x64],cl
  407d05:	dec    esi
  407d06:	shl    DWORD PTR [eax],0xb2
  407d09:	inc    ebp
  407d0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d0b:	push   esp
  407d0c:	ds sbb eax,0x17e92bc5
  407d12:	xchg   esp,eax
  407d13:	sbb    edi,edi
  407d15:	sbb    BYTE PTR ds:0x8def30f0,ah
  407d1b:	mov    ecx,0x14a2f0eb
  407d20:	outs   dx,BYTE PTR ds:[esi]
  407d21:	jmp    0x369c:0x8d2a5d13
  407d28:	or     al,BYTE PTR cs:[eax-0x11c66c1d]
  407d2f:	(bad)  
  407d31:	ret    0x25f1
  407d34:	repnz loop 0x407d19
  407d37:	mov    eax,0x2daca29d
  407d3c:	xor    eax,0xc4dad4d1
  407d41:	retf   
  407d42:	cmp    ch,BYTE PTR [esi+ebp*8]
  407d45:	pop    edx
  407d46:	loope  0x407d88
  407d48:	je     0x407db7
  407d4a:	repz sub eax,0x5c01927a
  407d50:	cld    
  407d51:	inc    eax
  407d52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d53:	sub    edx,edx
  407d55:	call   0x3d84:0x904e2326
  407d5c:	dec    di
  407d5e:	mov    ah,0x9a
  407d60:	popa   
  407d61:	push   ebx
  407d62:	inc    edx
  407d63:	outs   dx,DWORD PTR ds:[esi]
  407d64:	push   ss
  407d65:	out    dx,eax
  407d66:	jmp    0x493e4a75
  407d6b:	hlt    
  407d6c:	fisttp QWORD PTR [ebx-0x45]
  407d6f:	int    0x8a
  407d71:	aaa    
  407d72:	pop    ecx
  407d73:	fmul   QWORD PTR [edi]
  407d75:	cmp    bh,BYTE PTR [esi-0x31]
  407d78:	pop    eax
  407d79:	pop    ebx
  407d7b:	jmp    0x6669b082
  407d80:	outs   dx,DWORD PTR ds:[esi]
  407d81:	pop    esp
  407d82:	lds    eax,FWORD PTR [esi+edx*4-0x15]
  407d86:	cmp    DWORD PTR [ebp+0x11da0293],edx
  407d8c:	push   es
  407d8d:	addr16 pushf 
  407d8f:	shl    BYTE PTR ds:0x1f8e56a9,cl
  407d95:	jl     0x407e07
  407d97:	push   0x5d
  407d99:	mov    esp,0xba5ef2d9
  407d9e:	dec    edi
  407d9f:	ror    cl,cl
  407da1:	nop
  407da2:	xlat   BYTE PTR ds:[ebx]
  407da3:	mov    ecx,0x43d6bb2b
  407da8:	pop    es
  407da9:	and    BYTE PTR ds:0xd1929c92,0x7e
  407db0:	test   WORD PTR [ecx+esi*2-0x6d5b25f],sp
  407db8:	cmp    dh,BYTE PTR [edx+0x74]
  407dbb:	pop    ss
  407dbc:	push   0xffffffe4
  407dbe:	inc    eax
  407dbf:	jmp    0x2f8a05aa
  407dc4:	js     0x407d59
  407dc6:	leave  
  407dc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dc8:	enter  0x8d9,0x84
  407dcc:	push   esi
  407dcd:	cs jns 0x407d79
  407dd0:	jmp    0x1383:0x22a978d9
  407dd7:	and    al,0x82
  407dd9:	adc    edi,DWORD PTR ds:0x1fbfd8d6
  407ddf:	lea    edx,[edi]
  407de1:	dec    esp
  407de2:	(bad)  
  407de3:	les    edi,FWORD PTR [ebp+0x7d6add]
  407de9:	sbb    BYTE PTR [esi],0x59
  407dec:	cmp    al,0x39
  407dee:	pop    edx
  407def:	je     0x407db5
  407df1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407df2:	fild   DWORD PTR [ebp-0x6b]
  407df5:	or     eax,0xd0526bb6
  407dfa:	ret    
  407dfb:	adc    eax,0x7854f989
  407e00:	xor    al,0xa3
  407e02:	sbb    edx,DWORD PTR [ebx]
  407e04:	mov    ds:0x36c8e3c3,al
  407e09:	xchg   edi,eax
  407e0a:	xor    BYTE PTR [eax],dh
  407e0c:	fldcw  WORD PTR [ebp+0x51e7f195]
  407e12:	ror    DWORD PTR [esi+0x51e37e69],cl
  407e18:	sub    eax,0x6cdf2d4f
  407e1d:	test   BYTE PTR ds:0x17d83186,ah
  407e23:	dec    ebx
  407e24:	mov    ?,esi
  407e26:	sub    BYTE PTR [esi],dl
  407e28:	and    cl,BYTE PTR [edi-0xfbca507]
  407e2e:	popf   
  407e2f:	cmp    BYTE PTR [ecx+0x1b],ah
  407e32:	add    ah,dl
  407e34:	in     al,dx
  407e35:	jg     0x407e1c
  407e37:	call   DWORD PTR [ebx-0x2c]
  407e3a:	arpl   ax,di
  407e3c:	and    cl,bl
  407e3e:	cdq    
  407e3f:	mov    eax,0x98cc1c55
  407e44:	fistp  WORD PTR [edx]
  407e46:	js     0x407eaf
  407e48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e49:	sub    BYTE PTR [edi+0x7c979815],dh
  407e4f:	lods   al,BYTE PTR ds:[esi]
  407e50:	retf   
  407e51:	ror    esi,cl
  407e53:	mov    WORD PTR [eax],?
  407e55:	push   esi
  407e56:	arpl   WORD PTR [edx+0x20],di
  407e59:	test   al,0xbe
  407e5b:	pop    ebx
  407e5c:	mov    al,ds:0x16af57c4
  407e61:	mov    esi,0x27367b2e
  407e66:	lods   al,BYTE PTR ds:[esi]
  407e67:	fst    DWORD PTR [ebx]
  407e69:	loope  0x407ed0
  407e6b:	sub    al,0x49
  407e6d:	cmp    DWORD PTR [edx+0x6d],ecx
  407e70:	repz out dx,eax
  407e72:	gs sub eax,0xe47a0b05
  407e78:	jns    0x407e8f
  407e7a:	pop    ecx
  407e7b:	jno    0x407e0a
  407e7d:	lods   eax,DWORD PTR ds:[esi]
  407e7e:	mov    edx,0x9a7bbfd2
  407e83:	mov    bh,BYTE PTR [ebx-0x64980ba0]
  407e89:	mov    ah,BYTE PTR [ecx-0x7c]
  407e8c:	outs   dx,BYTE PTR ds:[esi]
  407e8d:	sub    eax,0xbe35ac6c
  407e92:	dec    edx
  407e93:	nop
  407e94:	sub    bl,bl
  407e96:	mov    bh,0xfe
  407e98:	sbb    eax,0x40d7a7c0
  407e9d:	fs daa 
  407e9f:	ds enter 0xd02,0x40
  407ea4:	pop    ss
  407ea5:	jno    0x407f1a
  407ea7:	pop    DWORD PTR [ebx+ebx*2-0x1]
  407eab:	mov    dh,0x64
  407ead:	arpl   WORD PTR [esp+ebx*2-0x40d8683b],cx
  407eb4:	adc    ah,BYTE PTR [ebx+0x2e6f6149]
  407eba:	sar    esi,1
  407ebc:	pop    ebx
  407ebd:	mov    ebx,DWORD PTR [edx+0x419aa4d3]
  407ec3:	mov    dl,0x40
  407ec5:	ror    BYTE PTR [ebx],0x32
  407ec8:	push   cs
  407ec9:	bound  edi,QWORD PTR [esi-0x47913fee]
  407ecf:	cli    
  407ed0:	jmp    0x407e7e
  407ed2:	xchg   esp,eax
  407ed3:	mov    ds:0x31b66cf5,al
  407ed8:	enter  0x3874,0x1a
  407edc:	and    al,0x26
  407ede:	idiv   BYTE PTR [ebp+0x33ed90aa]
  407ee4:	sar    DWORD PTR [edi],0x6b
  407ee7:	jle    0x407e8c
  407ee9:	fidivr DWORD PTR [ebp+0x68]
  407eec:	jl     0x407f18
  407eee:	sub    DWORD PTR [eax+edx*2+0x7470844a],ebp
  407ef5:	imul   edi,DWORD PTR [eax+ecx*2+0x28],0xa35e1f1d
  407efd:	sar    DWORD PTR [ebp+0x13],cl
  407f00:	mov    ebp,eax
  407f02:	(bad)  
  407f03:	dec    ecx
  407f04:	gs xchg ebx,eax
  407f06:	rcl    BYTE PTR [esi-0x10a7be35],1
  407f0c:	test   al,0xb8
  407f0e:	dec    ecx
  407f0f:	mov    bh,0xa2
  407f11:	sub    eax,0xa948f71e
  407f16:	adc    al,0x3d
  407f18:	inc    eax
  407f19:	ret    0xa7b1
  407f1c:	mov    bh,0x63
  407f1e:	jbe    0x407eb4
  407f20:	mov    esp,DWORD PTR [edx+0x72c1377a]
  407f26:	adc    BYTE PTR [esp+ebx*8-0x66b6749],al
  407f2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f2e:	imul   edx,DWORD PTR [ebp-0x43e05294],0xffffff92
  407f35:	mov    dl,0x45
  407f37:	xchg   esp,eax
  407f38:	sbb    al,ah
  407f3a:	out    dx,eax
  407f3b:	push   ebx
  407f3c:	std    
  407f3d:	mov    ebp,0x7db5a4b7
  407f42:	and    cl,0x82
  407f45:	test   BYTE PTR [ebx-0x55],bl
  407f48:	(bad)  
  407f49:	jle    0x407f3c
  407f4b:	int    0x4f
  407f4d:	push   0xffffff8b
  407f4f:	retf   
  407f50:	xor    cl,bh
  407f52:	sub    edx,edx
  407f54:	dec    esi
  407f55:	mov    edx,edi
  407f57:	lds    ebx,FWORD PTR [ebx]
  407f59:	in     eax,dx
  407f5a:	les    edx,FWORD PTR [edx+0x44]
  407f5d:	iret   
  407f5e:	or     al,0xca
  407f60:	cdq    
  407f61:	sahf   
  407f62:	into   
  407f63:	pop    es
  407f64:	sahf   
  407f65:	sub    al,0xee
  407f67:	in     al,dx
  407f68:	jl     0x407f08
  407f6a:	fwait
  407f6b:	std    
  407f6c:	imul   edx,DWORD PTR [ebx+0x2e678041],0x12e35141
  407f76:	xor    ebp,ebx
  407f78:	and    BYTE PTR [eax+0x4a],al
  407f7b:	mov    dl,0xa
  407f7d:	(bad)  
  407f7e:	add    DWORD PTR [esi+0x61],esp
  407f81:	lock dec eax
  407f83:	fwait
  407f84:	clc    
  407f85:	scas   eax,DWORD PTR es:[edi]
  407f86:	jno    0x407fa2
  407f88:	fcomp  DWORD PTR [edi-0x31]
  407f8b:	sahf   
  407f8c:	rcr    WORD PTR [ecx+0x239ae7af],cl
  407f93:	sahf   
  407f94:	aad    0x1c
  407f96:	(bad)  
  407f97:	sar    DWORD PTR [eax-0x23],1
  407f9a:	or     ch,ch
  407f9c:	and    BYTE PTR [eax+0x575ff807],dl
  407fa2:	out    dx,eax
  407fa3:	push   ebx
  407fa4:	dec    ebp
  407fa5:	ins    DWORD PTR es:[edi],dx
  407fa6:	pop    esi
  407fa7:	jg     0x407f6f
  407fa9:	push   ebx
  407faa:	push   ss
  407fab:	shl    DWORD PTR [edx+0x6d2f0f2d],cl
  407fb1:	outs   dx,DWORD PTR ds:[esi]
  407fb2:	loop   0x407ff5
  407fb4:	sub    bh,dl
  407fb6:	and    al,0xfc
  407fb8:	adc    DWORD PTR [ecx],ebp
  407fba:	call   0xe466df3e
  407fbf:	mov    bl,0xe5
  407fc1:	xor    edx,DWORD PTR [eiz*2-0x75e84d24]
  407fc8:	or     eax,0xf8da6726
  407fcd:	call   0xb3ab:0x40217d7
  407fd4:	mov    edi,0xf1698f56
  407fd9:	or     dh,dl
  407fdb:	(bad)  
  407fdc:	leave  
  407fdd:	fmul   QWORD PTR [ebp+0xaf075e2]
  407fe3:	cmc    
  407fe4:	popa   
  407fe5:	adc    dh,BYTE PTR [edx+eiz*8+0x6b]
  407fe9:	mov    ah,0xe
  407feb:	dec    esp
  407fec:	rol    ebx,0xfc
  407fef:	adc    DWORD PTR [esi-0x6c7d34a2],esp
  407ff5:	or     eax,0xa32c897
  407ffa:	enter  0xde3e,0xa2
  407ffe:	sbb    ebp,esi
  408000:	ss cmp cl,cl
  408003:	dec    ebp
  408004:	mov    al,ds:0xedd0cdb7
  408009:	test   BYTE PTR [esi+0x76a71c73],al
  40800f:	xchg   edx,eax
  408010:	leave  
  408011:	fld    DWORD PTR [ebx]
  408013:	scas   al,BYTE PTR es:[edi]
  408014:	in     eax,dx
  408015:	pop    DWORD PTR cs:[edx+0x67]
  408019:	imul   esi,DWORD PTR [ebp-0x7d],0xffffff87
  40801d:	into   
  40801e:	or     dh,BYTE PTR [esi+eax*1+0x2b07305]
  408025:	cmp    eax,0x8201a4e7
  40802a:	cmp    ch,cl
  40802c:	inc    eax
  40802d:	int    0x45
  40802f:	loop   0x408091
  408031:	ja     0x40803b
  408033:	std    
  408034:	push   cs
  408035:	sbb    eax,0xaac59007
  40803a:	mov    eax,0x33255770
  40803f:	ins    DWORD PTR es:[edi],dx
  408040:	inc    eax
  408041:	xchg   esp,eax
  408042:	idiv   DWORD PTR [edx+0x2edd0c0c]
  408048:	pop    edx
  408049:	mov    edi,0x2f349bad
  40804e:	and    DWORD PTR [edx-0x17],ebp
  408051:	neg    BYTE PTR [esi+0x72]
  408054:	aam    0x64
  408056:	cs js  0x40808f
  408059:	mov    cl,BYTE PTR [eax-0x2]
  40805c:	loop   0x407ff2
  40805e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40805f:	adc    esi,DWORD PTR es:[ebp-0x63]
  408063:	jmp    0x815d:0x8926b29b
  40806a:	icebp  
  40806b:	call   0xe413:0xdcef1aa8
  408072:	lods   eax,DWORD PTR ds:[esi]
  408073:	dec    esi
  408074:	sub    al,0xee
  408076:	inc    ebp
  408077:	int3   
  408078:	push   ds
  408079:	mov    BYTE PTR [edx+ecx*4-0x1c],al
  40807d:	xor    DWORD PTR ds:0xd665dcc3,esi
  408083:	xchg   ecx,eax
  408084:	lahf   
  408085:	sbb    al,0xe2
  408087:	sbb    BYTE PTR [ebp+0x3d7094db],bh
  40808d:	ins    BYTE PTR es:[edi],dx
  40808e:	cmp    BYTE PTR [edi-0x206363d],cl
  408094:	nop
  408095:	not    DWORD PTR [ebp-0x25]
  408098:	push   ss
  408099:	pop    ss
  40809a:	lahf   
  40809b:	jbe    0x4080f1
  40809d:	sub    ebp,0x5a
  4080a0:	sbb    DWORD PTR [ecx-0x5b12fd2d],0x22
  4080a7:	mov    ebp,0xd03afe7c
  4080ac:	pusha  
  4080ad:	pop    edx
  4080ae:	sbb    BYTE PTR [edx+0x60bf9f88],al
  4080b4:	push   esp
  4080b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080b6:	xchg   esp,eax
  4080b7:	out    0x92,al
  4080b9:	add    eax,0x6fe6f292
  4080be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080bf:	jl     0x408055
  4080c1:	mov    dl,0x81
  4080c3:	les    esp,FWORD PTR [eax-0x51737de7]
  4080c9:	xchg   ecx,eax
  4080ca:	mul    esp
  4080cc:	jp     0x40813f
  4080ce:	push   ds
  4080cf:	mov    edi,cs
  4080d1:	gs cwde 
  4080d3:	add    al,0xff
  4080d5:	sub    al,ah
  4080d7:	cwde   
  4080d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080d9:	mov    esp,0x27f94361
  4080de:	push   esi
  4080df:	aas    
  4080e0:	mov    ebx,0x25fc69d3
  4080e5:	scas   eax,DWORD PTR es:[edi]
  4080e6:	bound  edx,QWORD PTR [ebp+0x1458e8fb]
  4080ec:	push   ebp
  4080ed:	push   esi
  4080ee:	push   esi
  4080ef:	imul   esi,ebp,0xffffffee
  4080f2:	fwait
  4080f3:	push   ebp
  4080f4:	outs   dx,BYTE PTR ds:[esi]
  4080f5:	push   es
  4080f6:	add    esp,ebp
  4080f8:	push   esp
  4080f9:	loopne 0x408140
  4080fb:	mov    bl,0xe1
  4080fd:	shl    DWORD PTR [edx-0x63bba509],1
  408103:	pusha  
  408104:	in     eax,0x7
  408106:	push   ecx
  408107:	or     ecx,DWORD PTR [eax+0x67ec396d]
  40810d:	loop   0x40810a
  40810f:	stc    
  408110:	mov    ss,WORD PTR [eax+0x71]
  408113:	mov    ds:0xbb8b0b5d,al
  408118:	nop
  408119:	cmp    bl,BYTE PTR [esi]
  40811b:	cld    
  40811c:	push   es
  40811d:	cdq    
  40811e:	test   eax,0xa5d3b83a
  408123:	test   eax,0xf1750929
  408128:	sbb    eax,0x631c963a
  40812d:	xchg   DWORD PTR [ecx],edx
  40812f:	scas   eax,DWORD PTR es:[edi]
  408130:	ret    
  408131:	hlt    
  408132:	shl    DWORD PTR [ecx+0x33],cl
  408135:	(bad)  
  408136:	jo     0x408141
  408138:	or     DWORD PTR [ecx-0x6d194bce],0x65
  40813f:	lock mov bl,ch
  408142:	adc    al,bl
  408144:	xor    dl,BYTE PTR [esi-0x48]
  408147:	mov    dh,0xd1
  408149:	mov    cl,bl
  40814b:	push   edx
  40814c:	push   esp
  40814d:	repz jae 0x4080d2
  408150:	adc    DWORD PTR ds:0xc73fde6f,esp
  408156:	cmp    dl,BYTE PTR [ecx+0x1]
  408159:	sbb    DWORD PTR [edx+0xc],0xffffff87
  40815d:	or     BYTE PTR [esi+0x49982060],bh
  408163:	sub    BYTE PTR [esi],0x64
  408166:	inc    edx
  408167:	mov    esi,0xef43e410
  40816c:	push   ecx
  40816d:	mov    al,0x36
  40816f:	sar    bl,0xbc
  408172:	imul   esi,DWORD PTR [eax-0x1384854d],0x99abed1
  40817c:	js     0x40811f
  40817e:	add    eax,DWORD PTR [ebx+esi*8+0x4]
  408182:	adc    DWORD PTR [edi-0x38b2c3a4],0xffffffc8
  408189:	gs sahf 
  40818b:	push   edx
  40818c:	jge    0x4081a6
  40818e:	fisub  DWORD PTR [ecx-0x36a285f0]
  408194:	and    esi,edi
  408196:	xchg   DWORD PTR es:[esi-0x18],edi
  40819a:	frstor [ecx]
  40819c:	or     DWORD PTR [edi+0x5d9041d4],0x19
  4081a3:	pop    eax
  4081a4:	adc    al,0x2d
  4081a7:	sub    esi,DWORD PTR [ebp+0x7]
  4081aa:	and    al,0x7b
  4081ac:	and    DWORD PTR [edx-0x6d],0x7e
  4081b0:	fidivr WORD PTR [ecx+ecx*8+0x6ab95fe9]
  4081b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081b8:	add    eax,0xf96b3017
  4081bd:	jbe    0x4081c7
  4081bf:	cmp    BYTE PTR [ecx+0x6f],ah
  4081c2:	dec    ecx
  4081c3:	push   eax
  4081c4:	mov    bl,0xbb
  4081c6:	cs stos DWORD PTR es:[edi],eax
  4081c8:	xchg   BYTE PTR [edi+0x72],ah
  4081cb:	scas   eax,DWORD PTR es:[edi]
  4081cc:	fldcw  WORD PTR [edx+0x4e]
  4081cf:	iret   
  4081d0:	(bad)  
  4081d1:	cld    
  4081d2:	ss aam 0x9c
  4081d5:	jg     0x4081ea
  4081d7:	sbb    esi,DWORD PTR [ebp-0x57c9af05]
  4081dd:	adc    ch,BYTE PTR [edi+0x7]
  4081e0:	xor    dl,BYTE PTR [eax-0x1ae16300]
  4081e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081e7:	clc    
  4081e8:	xchg   ebp,eax
  4081e9:	and    dl,BYTE PTR [esi-0x56691e43]
  4081ef:	(bad)  
  4081f1:	xchg   edx,eax
  4081f2:	or     DWORD PTR [eax-0x5],esp
  4081f5:	fs push esi
  4081f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081f8:	pop    es
  4081f9:	out    dx,al
  4081fa:	and    eax,0x34c0931b
  4081ff:	mov    BYTE PTR [eax+0x1e55a377],bh
  408205:	or     al,0xae
  408207:	push   ss
  408208:	mov    ebx,db1
  40820b:	ror    BYTE PTR [esi],cl
  40820d:	aad    0x90
  40820f:	popf   
  408210:	mov    ch,0x1f
  408212:	push   ss
  408213:	cmp    edx,ecx
  408215:	aam    0xcc
  408217:	jnp    0x408278
  408219:	mov    cl,0xfe
  40821b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40821c:	sbb    DWORD PTR [esi+0x19],esp
  40821f:	mov    esp,0x10c376e3
  408224:	(bad)
  408228:	loop   0x40824b
  40822a:	into   
  40822b:	jg     0x4081fa
  40822d:	push   ebp
  40822e:	dec    esi
  40822f:	adc    eax,DWORD PTR [esi-0x43914458]
  408235:	pop    ss
  408236:	push   eax
  408237:	sub    DWORD PTR [ecx],ebp
  408239:	jecxz  0x4082b9
  40823b:	push   edi
  40823c:	scas   al,BYTE PTR es:[edi]
  40823d:	pop    ss
  40823e:	adc    al,0x5c
  408240:	pop    ecx
  408241:	mov    eax,ds:0x18f698c1
  408246:	repz sbb edi,DWORD PTR [edi+eax*1-0x27eb6324]
  40824e:	push   0xffffff93
  408250:	xchg   ebx,eax
  408251:	mov    BYTE PTR [ecx*1+0x46e30d98],bl
  408258:	sbb    edi,DWORD PTR [esi-0x72b05616]
  40825e:	sbb    eax,0x64be4fe2
  408263:	fcmove st,st(4)
  408265:	fdivr  st,st(4)
  408267:	or     ah,al
  408269:	data16 out 0x80,al
  40826c:	jge    0x408260
  40826e:	xor    BYTE PTR [ebx],dl
  408270:	fild   DWORD PTR [edx-0x334abf3e]
  408276:	addr16 ret 0xf562
  40827a:	mov    ch,0xf8
  40827c:	lods   al,BYTE PTR ds:[esi]
  40827d:	cmp    DWORD PTR [edi+0x6b3b6fd9],0x6933911f
  408287:	push   edx
  408288:	xor    al,0xb5
  40828a:	loopne 0x408252
  40828c:	inc    ecx
  40828d:	mov    ebx,0xfc2248d5
  408292:	pushf  
  408293:	add    al,bh
  408295:	imul   esp,DWORD PTR [ecx],0xffffffe0
  408298:	enter  0xb5b6,0xc1
  40829c:	pop    eax
  40829d:	or     esi,DWORD PTR [ecx]
  40829f:	pop    ss
  4082a0:	enter  0x4014,0x82
  4082a4:	(bad)  ds:0x708c625d
  4082aa:	repz (bad) 
  4082ac:	mov    ds:0xe6e93fe2,al
  4082b1:	repz sar BYTE PTR [edi+0x59364130],1
  4082b8:	outs   dx,DWORD PTR ds:[esi]
  4082b9:	xor    edi,DWORD PTR [edi-0x228b7a8b]
  4082bf:	adc    BYTE PTR [esi-0x2c],al
  4082c2:	mov    bl,0x49
  4082c4:	clc    
  4082c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082c6:	sub    DWORD PTR [ebx],edi
  4082c8:	adc    esp,edx
  4082ca:	push   es
  4082cb:	add    al,0xf6
  4082cd:	imul   ebp,DWORD PTR [edi+0x6e],0xf97453e3
  4082d4:	retf   0x338b
  4082d7:	add    DWORD PTR [ebx+0x448dc5df],eax
  4082dd:	mov    ch,0x66
  4082df:	fild   QWORD PTR [ecx-0x4]
  4082e2:	lahf   
  4082e3:	pop    edi
  4082e4:	push   es
  4082e5:	enter  0xd92d,0xe4
  4082e9:	rcr    ebp,0x35
  4082ec:	or     esp,DWORD PTR [esi]
  4082ee:	dec    eax
  4082ef:	ret    
  4082f0:	cmp    eax,0xc02a613c
  4082f5:	popa   
  4082f6:	and    BYTE PTR [ecx],0xb8
  4082f9:	xchg   edi,eax
  4082fa:	mov    ah,0x6d
  4082fc:	stc    
  4082fd:	fbld   TBYTE PTR [ebp+0x4db17f30]
  408303:	xor    eax,0x2c041e4c
  408308:	mov    BYTE PTR [esi],bh
  40830a:	fisttp WORD PTR [ebp-0x615eaff1]
  408310:	in     al,0x49
  408312:	pop    ecx
  408313:	enter  0xd644,0xc3
  408317:	mov    al,0xc0
  408319:	popa   
  40831a:	push   0xffffffcf
  40831c:	xchg   esp,eax
  40831d:	push   ss
  40831e:	pop    esi
  40831f:	sbb    esp,ebp
  408321:	outs   dx,BYTE PTR ds:[esi]
  408322:	cmp    bh,cl
  408324:	pop    esi
  408325:	xchg   DWORD PTR [ebx+ebp*1],eax
  408328:	outs   dx,BYTE PTR ds:[esi]
  408329:	lock cmp bl,BYTE PTR [edx]
  40832c:	xor    eax,0x77fdd004
  408331:	or     BYTE PTR [ebx+eiz*1],0xd6
  408335:	mov    eax,ds:0x2c4669e4
  40833a:	repnz icebp 
  40833c:	dec    edi
  40833d:	test   DWORD PTR [ebp+0x551da169],edx
  408343:	outs   dx,DWORD PTR ds:[esi]
  408344:	or     dl,cl
  408346:	or     edi,ebx
  408348:	jns    0x408397
  40834a:	adc    BYTE PTR [ebp+0x64],dh
  40834d:	arpl   di,sp
  40834f:	into   
  408350:	ja     0x4082d5
  408352:	lods   eax,DWORD PTR ds:[esi]
  408353:	int3   
  408354:	xchg   ch,ah
  408356:	sbb    DWORD PTR [esi+ebx*1-0x2d],ecx
  40835a:	mov    bl,0x23
  40835c:	mov    eax,ds:0xe77b7bb6
  408361:	imul   edi,edi,0x9
  408364:	sub    ebx,DWORD PTR [ebp+0x2b]
  408367:	jae    0x408310
  408369:	and    al,0x3
  40836b:	icebp  
  40836c:	(bad)  
  40836d:	aam    0x4d
  40836f:	shl    DWORD PTR [esi+0x3c],cl
  408372:	popa   
  408373:	cdq    
  408374:	cmp    DWORD PTR gs:[edx],ebx
  408377:	out    dx,al
  408378:	lods   eax,DWORD PTR ds:[esi]
  408379:	jg     0x408397
  40837b:	inc    eax
  40837c:	add    dl,BYTE PTR [edi+0xa9c2cf0]
  408382:	stc    
  408383:	std    
  408384:	je     0x4083a0
  408386:	pop    esp
  408387:	or     edi,eax
  408389:	test   DWORD PTR [ecx],eax
  40838b:	lds    eax,FWORD PTR [esi-0x2]
  40838e:	mov    DWORD PTR [eax],edx
  408390:	aas    
  408391:	and    al,0xda
  408393:	sbb    eax,0x234d6c86
  408398:	sub    ah,BYTE PTR [edi+edi*1-0x21841dc0]
  40839f:	adc    BYTE PTR [ebp-0x1a186c52],0xcf
  4083a6:	imul   ebx,ecx,0xffffffc1
  4083a9:	adc    ebp,ebp
  4083ab:	xchg   edi,eax
  4083ac:	add    BYTE PTR [edx],bh
  4083ae:	mov    ebp,0x583d0f32
  4083b3:	int3   
  4083b4:	cs jno 0x4083e2
  4083b7:	adc    esi,DWORD PTR [edi+0x5118889f]
  4083bd:	jmp    0x1fa233ec
  4083c2:	mov    bl,0x88
  4083c4:	xor    BYTE PTR [esi],al
  4083c6:	in     al,0x5
  4083c8:	scas   eax,DWORD PTR es:[di]
  4083ca:	test   eax,0xcc956ede
  4083cf:	adc    DWORD PTR [ebx+0xe],ecx
  4083d2:	das    
  4083d3:	jae    0x408453
  4083d5:	repz inc ebp
  4083d7:	sbb    bh,BYTE PTR [ebx+edx*2+0x1b]
  4083db:	std    
  4083dc:	mov    ebp,0xba2c9018
  4083e1:	inc    edi
  4083e2:	jecxz  0x408373
  4083e4:	inc    esp
  4083e5:	jp     0x408433
  4083e7:	push   cs
  4083e8:	repnz add edx,ebp
  4083eb:	and    eax,0x46b172fe
  4083f0:	pop    edi
  4083f1:	cwde   
  4083f2:	sbb    al,0x2f
  4083f4:	pusha  
  4083f5:	sbb    BYTE PTR [ebx-0x17],bh
  4083f8:	pop    eax
  4083f9:	mov    BYTE PTR ds:0x3ebfa9a9,dh
  408400:	mov    dl,0xc7
  408402:	in     al,0x98
  408404:	sub    BYTE PTR [ecx-0x3093053b],al
  40840a:	stos   DWORD PTR es:[edi],eax
  40840b:	inc    edx
  40840c:	sbb    BYTE PTR [edi+0x22],ah
  40840f:	dec    ebx
  408410:	stos   DWORD PTR es:[edi],eax
  408411:	adc    eax,0x16eea1f
  408416:	sub    BYTE PTR [ebx+0x696bbf73],al
  40841c:	test   al,0xdc
  40841e:	bound  edx,QWORD PTR gs:[ecx+ebx*8+0x65]
  408423:	ss loope 0x408434
  408426:	scas   eax,DWORD PTR es:[edi]
  408427:	scas   eax,DWORD PTR es:[edi]
  408428:	mov    ebx,0xf87e5944
  40842d:	out    dx,al
  40842e:	adc    al,0x2b
  408430:	sub    dh,ch
  408432:	in     eax,dx
  408433:	or     DWORD PTR [esi],ebp
  408435:	dec    edx
  408436:	repnz xchg esp,eax
  408438:	jle    0x408403
  40843a:	dec    edi
  40843b:	add    ecx,DWORD PTR [esi-0x14]
  40843e:	add    DWORD PTR [eax+0x7],ebx
  408441:	aam    0xf5
  408443:	inc    ecx
  408444:	test   DWORD PTR [eax+ebp*2-0xd4ee6fc],ecx
  40844b:	sar    DWORD PTR ds:0xc28e8ec6,cl
  408451:	adc    eax,0x2845a3
  408456:	sbb    cl,dl
  408458:	in     al,dx
  408459:	add    al,0xb9
  40845b:	push   ds
  40845c:	mul    DWORD PTR ss:[edi+edi*1]
  408460:	ja     0x40840a
  408462:	pop    ebx
  408463:	sub    eax,0x9480a8fa
  408468:	mov    ecx,0x46787db4
  40846d:	mov    bl,0x36
  40846f:	leave  
  408470:	push   ebp
  408471:	sbb    DWORD PTR [ecx],0x2a167032
  408477:	mov    esp,DWORD PTR [ebx-0x6a]
  40847a:	add    BYTE PTR [ebp-0x7f],ah
  40847d:	adc    eax,0x271b5eba
  408482:	jg     0x408410
  408484:	(bad)  
  408486:	adc    BYTE PTR [eax+0x59],al
  408489:	push   0xb202c578
  40848e:	pop    ss
  40848f:	repz in eax,dx
  408491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408492:	test   cl,dl
  408494:	mov    edi,0x3a8485aa
  408499:	sub    edi,esp
  40849b:	and    eax,0x25764796
  4084a0:	loope  0x4084a8
  4084a2:	mov    ebx,0xf854e1c1
  4084a7:	sub    ch,cl
  4084a9:	aas    
  4084aa:	or     BYTE PTR [edi+0x2d],0xde
  4084ae:	mov    WORD PTR [edi-0x21],ds
  4084b1:	dec    eax
  4084b2:	fwait
  4084b3:	mov    fs,edi
  4084b5:	fs mov esi,0x691f7262
  4084bb:	xchg   edi,eax
  4084bc:	and    BYTE PTR [eax+0x31a5a128],dl
  4084c2:	mov    ebx,0x7c6648a2
  4084c7:	cmp    ah,BYTE PTR [esi]
  4084c9:	sti    
  4084ca:	xchg   ebx,eax
  4084cb:	adc    DWORD PTR [edx],ecx
  4084cd:	clc    
  4084ce:	dec    edi
  4084cf:	push   es
  4084d0:	jb     0x40851f
  4084d2:	and    BYTE PTR [edx-0x49],dl
  4084d5:	xchg   esi,eax
  4084d6:	or     BYTE PTR [edi],0x77
  4084d9:	out    dx,al
  4084da:	and    ch,BYTE PTR gs:0xfdd151a5
  4084e1:	dec    ebp
  4084e2:	mov    ds:0xc7d51da,eax
  4084e7:	pop    edi
  4084e8:	cdq    
  4084e9:	dec    edi
  4084ea:	pop    eax
  4084eb:	mov    WORD PTR [ebx+0x2a],cs
  4084ee:	clc    
  4084ef:	mov    esp,ebx
  4084f1:	test   BYTE PTR [ecx],cl
  4084f3:	push   edi
  4084f4:	stos   BYTE PTR es:[edi],al
  4084f5:	pushf  
  4084f6:	push   0x968ac19e
  4084fb:	outs   dx,DWORD PTR ds:[esi]
  4084fc:	mov    BYTE PTR [edx+ebx*1],al
  4084ff:	mov    eax,DWORD PTR [ebp-0x40]
  408502:	mov    edx,DWORD PTR [ebp-0x28]
  408505:	xor    eax,esi
  408507:	xor    edx,esi
  408509:	add    eax,edi
  40850b:	add    edx,edi
  40850d:	imul   eax,edx
  408510:	add    eax,DWORD PTR [ebp-0xc]
  408513:	mov    DWORD PTR [ebp-0xc],eax
  408516:	mov    eax,DWORD PTR [ebp-0xc]
  408519:	mov    edx,DWORD PTR [ebp-0x18]
  40851c:	cmp    edx,eax
  40851e:	jb     0x406080
  408524:	mov    eax,DWORD PTR [ebp-0x28]
  408527:	mov    edx,DWORD PTR [ebp-0x18]
  40852a:	xor    eax,esi
  40852c:	add    eax,edi
  40852e:	imul   eax,edx
  408531:	mov    edx,DWORD PTR [ebp-0x1c]
  408534:	xor    edx,esi
  408536:	add    edx,edi
  408538:	or     eax,edx
  40853a:	mov    edx,DWORD PTR [ebp-0x20]
  40853d:	xor    edx,esi
  40853f:	add    eax,edx
  408541:	mov    edx,DWORD PTR [ebp-0x20]
  408544:	xor    edx,esi
  408546:	add    eax,edx
  408548:	mov    edx,DWORD PTR [ebp-0x10]
  40854b:	lea    eax,[eax+edx*1+0x64e5e6]
  408552:	jmp    0x408566
  408557:	mov    eax,DWORD PTR [ebp-0x20]
  40855a:	mov    edx,DWORD PTR [ebp-0x10]
  40855d:	xor    eax,esi
  40855f:	lea    eax,[eax+edx*1+0x3272f3]
  408566:	mov    DWORD PTR [ebp-0x10],eax
  408569:	jmp    0x403c1c
  40856e:	mov    ebx,DWORD PTR [ebp-0x3c]
  408571:	mov    eax,DWORD PTR [ebp+0xc]
  408574:	xor    eax,esi
  408576:	lea    ecx,[ecx+eax*1+0x3272f3]
  40857d:	lea    eax,[ecx-0x3272f3]
  408583:	xor    eax,esi
  408585:	cmp    eax,0xf89c95a1
  40858a:	jne    0x403bc0
  408590:	dec    DWORD PTR [ebp-0x34]
  408593:	jne    0x403bb4
  408599:	mov    eax,DWORD PTR [ebp+0x8]
  40859c:	mov    ecx,DWORD PTR [ebp+0xc]
  40859f:	mov    edx,DWORD PTR [ebp+0x8]
  4085a2:	xor    ecx,esi
  4085a4:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f3]
  4085ab:	xor    eax,esi
  4085ad:	mov    al,BYTE PTR [eax+ebx*1+0x3272f3]
  4085b4:	xor    edx,esi
  4085b6:	mov    BYTE PTR [edx+ebx*1+0x3272f3],cl
  4085bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4085c0:	xor    ecx,esi
  4085c2:	mov    BYTE PTR [ecx+ebx*1+0x3272f3],al
  4085c9:	mov    eax,DWORD PTR [ebp+0xc]
  4085cc:	xor    eax,esi
  4085ce:	add    eax,edi
  4085d0:	pop    edi
  4085d1:	pop    esi
  4085d2:	pop    ebx
  4085d3:	leave  
  4085d4:	ret    0x8
  4085d7:	xor    eax,eax
  4085d9:	and    DWORD PTR ds:0x4291db,0x42914b
  4085e3:	inc    eax
  4085e4:	ret    
  4085e5:	push   ebp
  4085e6:	mov    ebp,esp
  4085e8:	sub    esp,0x38
  4085eb:	and    DWORD PTR ds:0x429167,0x0
  4085f5:	mov    eax,ds:0x429167
  4085fa:	inc    eax
  4085fb:	mov    ds:0x429167,eax
  408600:	cmp    DWORD PTR ds:0x429167,0x23
  408607:	jle    0x408625
  40860d:	jmp    0x408618
  408612:	call   DWORD PTR ds:0x42a88b
  408618:	cmp    DWORD PTR ds:0x429167,0x1d
  40861f:	jb     0x4085f5
  408625:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40862c:	push   ebx
  40862d:	adc    DWORD PTR ds:0x4291ef,ecx
  408633:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40863a:	sub    DWORD PTR ds:0x429167,0x723d
  408644:	mov    eax,DWORD PTR [ebp-0x4]
  408647:	push   esi
  408648:	mov    esi,0x75108ac
  40864d:	adc    DWORD PTR ds:0x429153,0x4291d3
  408657:	xor    eax,esi
  408659:	push   edi
  40865a:	and    DWORD PTR ds:0x42915f,0x0
  408664:	jmp    0x408676
  408669:	mov    edi,DWORD PTR ds:0x42915f
  40866f:	inc    edi
  408670:	mov    DWORD PTR ds:0x42915f,edi
  408676:	cmp    DWORD PTR ds:0x42915f,0x18
  40867d:	jae    0x4086c6
  408683:	cmp    DWORD PTR ds:0x42915f,0xb
  40868a:	jg     0x4086c6
  408690:	jmp    0x4086a5
  408695:	push   0x4291bf
  40869a:	push   0x428022
  40869f:	call   DWORD PTR ds:0x42a88f
  4086a5:	cmp    DWORD PTR ds:0x42915f,0xa
  4086ac:	jne    0x4086c1
  4086b2:	xor    edi,edi
  4086b4:	or     edi,DWORD PTR ds:0x42915f
  4086ba:	inc    edi
  4086bb:	mov    DWORD PTR ds:0x42915f,edi
  4086c1:	jmp    0x408669
  4086c6:	mov    edi,0x3272f3
  4086cb:	or     DWORD PTR ds:0x429173,0x4291df
  4086d5:	add    eax,edi
  4086d7:	and    DWORD PTR ds:0x4291cb,0x4291b7
  4086e1:	mov    DWORD PTR [ebp-0x1c],eax
  4086e4:	mov    eax,DWORD PTR [ebp+0x14]
  4086e7:	add    DWORD PTR ds:0x42919b,0xffd
  4086f1:	test   eax,eax
  4086f3:	mov    DWORD PTR ds:0x4291c7,0x550e
  4086fd:	je     0x408761
  408703:	mov    DWORD PTR ds:0x4291c3,0x10
  40870d:	cmp    DWORD PTR ds:0x4291c3,0x0
  408714:	je     0x408749
  40871a:	cmp    DWORD PTR ds:0x4291c3,0x1a
  408721:	jle    0x408749
  408727:	jmp    0x408737
  40872c:	push   0x8b39
  408731:	call   DWORD PTR ds:0x42a893
  408737:	mov    ebx,DWORD PTR ds:0x4291c3
  40873d:	dec    ebx
  40873e:	mov    DWORD PTR ds:0x4291c3,ebx
  408744:	jmp    0x40870d
  408749:	mov    eax,DWORD PTR [ebp+0x14]
  40874c:	sbb    DWORD PTR ds:0x4291db,ebx
  408752:	mov    eax,DWORD PTR [eax]
  408754:	add    DWORD PTR ds:0x4291b3,0x4291cf
  40875e:	mov    DWORD PTR [ebp-0x1c],eax
  408761:	mov    eax,DWORD PTR [ebp-0x4]
  408764:	xor    eax,esi
  408766:	xor    DWORD PTR ds:0x429193,edi
  40876c:	add    eax,edi
  40876e:	and    ebx,DWORD PTR ds:0x42918b
  408774:	mov    DWORD PTR [ebp-0x8],eax
  408777:	mov    eax,DWORD PTR [ebp-0xc]
  40877a:	and    ebx,DWORD PTR ds:0x4291f3
  408780:	xor    eax,esi
  408782:	mov    ebx,DWORD PTR ds:0x429167
  408788:	and    ebx,DWORD PTR ds:0x4291b7
  40878e:	mov    DWORD PTR ds:0x429167,ebx
  408794:	add    eax,edi
  408796:	sbb    ebx,0x2c4d
  40879c:	mov    DWORD PTR [ebp-0x24],eax
  40879f:	mov    eax,DWORD PTR [ebp-0x4]
  4087a2:	xor    eax,esi
  4087a4:	mov    ebx,DWORD PTR ds:0x42919b
  4087aa:	or     ebx,DWORD PTR ds:0x429183
  4087b0:	mov    DWORD PTR ds:0x42919b,ebx
  4087b6:	add    eax,edi
  4087b8:	or     DWORD PTR ds:0x4291df,edx
  4087be:	mov    DWORD PTR [ebp-0x30],eax
  4087c1:	or     DWORD PTR ds:0x42914b,0x176b
  4087cb:	mov    ebx,DWORD PTR [ebp-0x4]
  4087ce:	xor    ebx,esi
  4087d0:	mov    eax,ds:0x429173
  4087d5:	xor    eax,DWORD PTR ds:0x42916f
  4087db:	mov    ds:0x429173,eax
  4087e0:	add    ebx,edi
  4087e2:	mov    eax,DWORD PTR [ebp-0x24]
  4087e5:	sub    eax,edi
  4087e7:	sbb    DWORD PTR ds:0x429157,0x4291c7
  4087f1:	lea    ecx,[ebx-0x3272f3]
  4087f7:	xor    eax,esi
  4087f9:	xor    DWORD PTR ds:0x4291bb,0x42917b
  408803:	xor    ecx,esi
  408805:	mov    DWORD PTR ds:0x429153,0x47e0
  40880f:	cmp    ecx,eax
  408811:	mov    DWORD PTR ds:0x429187,0x3279
  40881b:	je     0x40d27b
  408821:	xor    DWORD PTR ds:0x42915b,0x508b
  40882b:	mov    eax,DWORD PTR [ebp-0x4]
  40882e:	sub    DWORD PTR ds:0x42919b,0x58b3
  408838:	xor    eax,esi
  40883a:	adc    DWORD PTR ds:0x429173,0x4291f7
  408844:	add    eax,edi
  408846:	cmp    ebx,eax
  408848:	mov    DWORD PTR ds:0x42915f,0x75e2
  408852:	jne    0x40adc2
  408858:	push   DWORD PTR [ebp+0x8]
  40885b:	call   0x424151
  408860:	mov    DWORD PTR [ebp-0x14],eax
  408863:	not    eax
  408865:	mov    eax,DWORD PTR [ebp-0x4]
  408868:	adc    DWORD PTR ds:0x429153,0x66a3
  408872:	mov    ecx,DWORD PTR [ebp-0x14]
  408875:	add    DWORD PTR ds:0x4291af,0x7712
  40887f:	xor    eax,esi
  408881:	add    eax,edi
  408883:	mov    DWORD PTR ds:0x4291cb,0x7d26
  40888d:	cmp    ecx,eax
  40888f:	mov    DWORD PTR ds:0x42916f,0x6080
  408899:	je     0x40d2e6
  40889f:	push   DWORD PTR [ebp-0x14]
  4088a2:	sbb    DWORD PTR ds:0x4291c3,0x2326
  4088ac:	push   DWORD PTR [ebp+0x8]
  4088af:	call   0x424291
  4088b4:	mov    DWORD PTR [ebp-0x14],eax
  4088b7:	xor    DWORD PTR ds:0x42919f,edx
  4088bd:	mov    eax,DWORD PTR [ebp-0x4]
  4088c0:	xor    DWORD PTR ds:0x42918f,ecx
  4088c6:	mov    ecx,DWORD PTR [ebp-0x14]
  4088c9:	xor    eax,esi
  4088cb:	add    eax,edi
  4088cd:	mov    DWORD PTR ds:0x42917b,0x355b
  4088d7:	cmp    ecx,eax
  4088d9:	mov    DWORD PTR ds:0x429157,0x7399
  4088e3:	je     0x40d2e6
  4088e9:	mov    eax,DWORD PTR [ebp-0x14]
  4088ec:	mov    eax,DWORD PTR [eax+0x18]
  4088ef:	and    DWORD PTR ds:0x4291f3,0x0
  4088f9:	jmp    0x40890b
  4088fe:	mov    ecx,DWORD PTR ds:0x4291f3
  408904:	inc    ecx
  408905:	mov    DWORD PTR ds:0x4291f3,ecx
  40890b:	cmp    DWORD PTR ds:0x4291f3,0x1b
  408912:	jae    0x40895e
  408918:	cmp    DWORD PTR ds:0x4291f3,0xc
  40891f:	ja     0x40895e
  408925:	jmp    0x40893f
  40892a:	push   0x429197
  40892f:	push   0x429187
  408934:	push   0x5f54
  408939:	call   DWORD PTR ds:0x42a89b
  40893f:	cmp    DWORD PTR ds:0x4291f3,0xb
  408946:	jne    0x408959
  40894c:	mov    ecx,DWORD PTR ds:0x4291f3
  408952:	inc    ecx
  408953:	mov    DWORD PTR ds:0x4291f3,ecx
  408959:	jmp    0x4088fe
  40895e:	mov    DWORD PTR [ebp-0x24],eax
  408961:	xor    DWORD PTR ds:0x42916f,ebx
  408967:	mov    eax,DWORD PTR [ebp-0x14]
  40896a:	and    DWORD PTR ds:0x42916b,0x0
  408974:	jmp    0x408986
  408979:	mov    ecx,DWORD PTR ds:0x42916b
  40897f:	inc    ecx
  408980:	mov    DWORD PTR ds:0x42916b,ecx
  408986:	cmp    DWORD PTR ds:0x42916b,0x1c
  40898d:	jae    0x4089b3
  408993:	cmp    DWORD PTR ds:0x42916b,0x2a
  40899a:	jge    0x4089b3
  4089a0:	jmp    0x4089ae
  4089a5:	push   DWORD PTR [ebp-0x14]
  4089a8:	call   DWORD PTR ds:0x42a863
  4089ae:	jmp    0x408979
  4089b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4089b6:	add    ecx,DWORD PTR [eax+0x20]
  4089b9:	sbb    DWORD PTR ds:0x429183,0x7fc6
  4089c3:	mov    DWORD PTR [ebp-0x2c],ecx
  4089c6:	mov    eax,DWORD PTR [ebp-0x14]
  4089c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4089cc:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  4089d6:	add    ecx,DWORD PTR [eax+0x24]
  4089d9:	or     DWORD PTR ds:0x4291ef,0x4291f3
  4089e3:	mov    DWORD PTR [ebp-0x34],ecx
  4089e6:	jmp    0x40ad9a
  4089eb:	push   ecx
  4089ec:	mov    dl,BYTE PTR [ecx+esi*1]
  4089ef:	and    BYTE PTR [ecx+0x58598a50],0x67
  4089f6:	test   BYTE PTR [ecx-0x4c],ah
  4089f9:	pop    ebx
  4089fa:	test   bh,0x15
  4089fd:	add    DWORD PTR [ebx-0x7c7ca318],0x3e
  408a04:	sub    DWORD PTR [edx+edx*1-0x1c],esi
  408a08:	push   ebp
  408a09:	rcr    dl,cl
  408a0b:	mov    edi,0x14e1a57
  408a10:	dec    esi
  408a11:	sub    DWORD PTR [eax],ebp
  408a13:	jmp    0x5897509
  408a18:	gs test al,0x34
  408a1b:	jnp    0x4089cd
  408a1d:	xlat   BYTE PTR ds:[ebx]
  408a1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a1f:	out    0x90,eax
  408a21:	xchg   BYTE PTR [edi+0x6004bc9f],dl
  408a27:	cmp    bl,BYTE PTR [esi-0x19edd744]
  408a2d:	icebp  
  408a2e:	push   0xffffffb2
  408a30:	cmp    eax,0xbac55b57
  408a35:	cs jl  0x408a60
  408a38:	call   FWORD PTR [esi-0x197f3d0b]
  408a3e:	scas   eax,DWORD PTR es:[edi]
  408a3f:	push   ebp
  408a40:	test   al,0x5e
  408a42:	dec    ebp
  408a43:	test   eax,0xcc2c205
  408a48:	cdq    
  408a49:	(bad)  
  408a4a:	stos   BYTE PTR es:[edi],al
  408a4b:	jo     0x408a21
  408a4d:	pop    ecx
  408a4e:	sbb    cl,BYTE PTR [eax+0x18e0faa2]
  408a54:	xor    eax,0x2d7d5a20
  408a59:	dec    edx
  408a5a:	es ds mov bl,0xdd
  408a5e:	xor    DWORD PTR [esi+0x4a9b3e21],0x15
  408a65:	jne    0x408a8f
  408a67:	jne    0x408ae8
  408a69:	mov    ds:0xbf3cc288,eax
  408a6e:	aas    
  408a6f:	jecxz  0x408aea
  408a71:	retf   
  408a72:	xchg   BYTE PTR [eax-0x6e],bh
  408a75:	(bad)  
  408a76:	jmp    0x408ac3
  408a78:	(bad)  
  408a79:	loopne 0x408a4b
  408a7b:	fstp   st(4)
  408a7d:	lds    ecx,FWORD PTR [edx-0x23bbb1e]
  408a83:	js     0x408a70
  408a85:	shl    dh,0xf1
  408a88:	loop   0x408ab6
  408a8a:	inc    edi
  408a8b:	ja     0x408afc
  408a8d:	fnstenv [ecx-0x49f6d642]
  408a93:	lea    esi,[ecx+0x6b827942]
  408a99:	stos   DWORD PTR es:[edi],eax
  408a9a:	sub    al,0xd6
  408a9c:	add    eax,0xe69d3bd0
  408aa1:	or     BYTE PTR [edi],ah
  408aa3:	pop    DWORD PTR [edi+esi*2+0x2ee1b13e]
  408aaa:	inc    edi
  408aab:	das    
  408aac:	xor    ah,BYTE PTR [esi+0x3f]
  408aaf:	and    esi,DWORD PTR [eax-0x7f]
  408ab2:	jle    0x408ac9
  408ab4:	aas    
  408ab5:	xlat   BYTE PTR ds:[ebx]
  408ab6:	xchg   DWORD PTR [ecx-0x5e],eax
  408ab9:	mov    dh,0x1e
  408abb:	outs   dx,DWORD PTR ds:[esi]
  408abc:	or     eax,esi
  408abe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408abf:	mov    bl,0x98
  408ac1:	es icebp 
  408ac3:	rcl    BYTE PTR [edx],cl
  408ac5:	lods   al,BYTE PTR ds:[esi]
  408ac6:	jl     0x408aab
  408ac8:	jns    0x408abb
  408aca:	stos   BYTE PTR es:[edi],al
  408acb:	jg     0x408b4b
  408acd:	and    ebx,ecx
  408acf:	mov    eax,ds:0xca4069c2
  408ad4:	sbb    DWORD PTR [esi-0x1f],edi
  408ad7:	cmc    
  408ad8:	jne    0x408a75
  408ada:	xor    al,0x8a
  408adc:	jmp    0x8431:0x4601a6a0
  408ae3:	call   0x1d26:0xe821a1f0
  408aea:	add    al,0xfb
  408aec:	jmp    0xff85c37e
  408af1:	das    
  408af2:	ins    DWORD PTR es:[edi],dx
  408af3:	in     al,dx
  408af4:	cmp    BYTE PTR [ecx-0x58aeeeef],ah
  408afa:	ins    DWORD PTR es:[edi],dx
  408afb:	mov    bl,0xe
  408afd:	stos   DWORD PTR es:[edi],eax
  408afe:	adc    cl,bl
  408b00:	mov    bl,0xd5
  408b02:	shl    DWORD PTR [ecx],0xc2
  408b05:	or     esi,DWORD PTR [edx-0x32]
  408b08:	push   esp
  408b09:	xchg   esp,eax
  408b0a:	test   ah,dh
  408b0c:	pop    DWORD PTR [ebp+0x5046a7c9]
  408b12:	das    
  408b13:	or     BYTE PTR [ebp-0x3c],ch
  408b16:	push   cs
  408b17:	in     eax,dx
  408b18:	push   ebp
  408b19:	cwde   
  408b1a:	aad    0xe6
  408b1c:	aam    0x7f
  408b1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b1f:	cmp    al,0xf2
  408b21:	lahf   
  408b22:	outs   dx,DWORD PTR ds:[esi]
  408b23:	sar    BYTE PTR [edx+0x250928e1],1
  408b29:	mov    ch,0xbc
  408b2b:	psadbw mm2,QWORD PTR [ecx]
  408b2e:	shl    DWORD PTR [ecx+0x2c],1
  408b31:	mov    esp,0x1d032f92
  408b36:	scas   eax,DWORD PTR es:[edi]
  408b37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b38:	mov    al,0xc0
  408b3a:	pop    edx
  408b3b:	lods   al,BYTE PTR ds:[esi]
  408b3c:	stc    
  408b3d:	add    eax,DWORD PTR [edi-0x17]
  408b40:	xchg   esi,eax
  408b41:	inc    eax
  408b42:	ret    0x21ae
  408b45:	dec    edi
  408b46:	out    dx,eax
  408b47:	xchg   esi,eax
  408b48:	(bad)  
  408b49:	jnp    0x408ba3
  408b4b:	jp     0x408b73
  408b4d:	push   ds
  408b4e:	and    ah,ah
  408b50:	icebp  
  408b51:	cmp    al,0x3c
  408b53:	lea    ebx,[edi+esi*2+0x51]
  408b57:	mov    esp,DWORD PTR [eax]
  408b59:	je     0x408bb5
  408b5b:	sbb    ax,0x1585
  408b5f:	cld    
  408b60:	mov    eax,0x3fb60f8
  408b65:	or     al,0xb9
  408b67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b68:	mov    eax,ds:0x42fc6258
  408b6d:	loopne 0x408aef
  408b6f:	xor    BYTE PTR [edi],0xbb
  408b72:	and    edi,DWORD PTR [edi]
  408b74:	cld    
  408b75:	cdq    
  408b76:	pop    edx
  408b77:	pop    eax
  408b78:	outs   dx,DWORD PTR ds:[esi]
  408b79:	adc    DWORD PTR [ecx],ebp
  408b7b:	xor    cl,ah
  408b7d:	out    0x45,al
  408b7f:	cdq    
  408b80:	stos   DWORD PTR es:[edi],eax
  408b81:	mov    edi,0x978278e5
  408b86:	pop    ss
  408b87:	fs es (bad) 
  408b8a:	and    esp,DWORD PTR [eax+0x28ba4c76]
  408b90:	cmp    eax,0xad8d7601
  408b95:	mov    dl,0xe
  408b97:	repz inc esi
  408b99:	add    bl,0x11
  408b9c:	and    al,0xfe
  408b9e:	mov    bh,0x15
  408ba0:	repnz popa 
  408ba2:	mov    ebp,0x8f97d07f
  408ba7:	outs   dx,BYTE PTR ds:[esi]
  408ba8:	pop    edx
  408ba9:	loopne 0x408b6f
  408bab:	xchg   edx,eax
  408bac:	fs mov al,0x51
  408baf:	(bad)  
  408bb0:	out    0xae,eax
  408bb2:	(bad)  
  408bb3:	clc    
  408bb4:	pop    edi
  408bb5:	jg     0x408c1f
  408bb7:	xchg   bx,ax
  408bb9:	fbstp  TBYTE PTR [ecx-0x23]
  408bbc:	(bad)  
  408bbd:	shl    BYTE PTR [ebx],1
  408bbf:	xor    DWORD PTR [ecx+0x48],0x45
  408bc3:	push   ebx
  408bc4:	jmp    0xfa9c4185
  408bc9:	xchg   ebx,eax
  408bca:	push   edi
  408bcb:	rol    esp,cl
  408bcd:	pop    edx
  408bce:	inc    ebx
  408bcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bd0:	ja     0x408c32
  408bd2:	mov    ds:0x55df421e,al
  408bd7:	(bad)  
  408bd8:	hlt    
  408bd9:	sub    edx,esp
  408bdb:	test   ch,ah
  408bdd:	lea    eax,[edi-0x7]
  408be0:	int3   
  408be1:	fwait
  408be2:	cmp    ecx,DWORD PTR [ecx]
  408be4:	in     al,dx
  408be5:	in     al,0x52
  408be7:	test   al,0x3a
  408be9:	push   es
  408bea:	(bad)  
  408beb:	(bad)  
  408bec:	scas   eax,DWORD PTR es:[edi]
  408bed:	mov    esi,0x829b5580
  408bf2:	scas   al,BYTE PTR es:[edi]
  408bf3:	stos   DWORD PTR es:[edi],eax
  408bf4:	pushf  
  408bf5:	ret    0x96bb
  408bf8:	jl     0x408c3b
  408bfa:	jnp    0x408bbc
  408bfc:	in     al,0x3
  408bfe:	outs   dx,BYTE PTR ds:[esi]
  408bff:	mov    dh,0x55
  408c01:	mov    esi,0xcacc5801
  408c06:	xor    al,BYTE PTR [ebx]
  408c08:	sub    BYTE PTR [ebp-0x4e],bh
  408c0b:	xchg   edx,eax
  408c0c:	xor    ecx,eax
  408c0e:	out    0xd2,eax
  408c10:	imul   edx,DWORD PTR [eax],0x69
  408c13:	popf   
  408c14:	rol    BYTE PTR [ecx-0x409ffc68],0x9e
  408c1b:	dec    ebp
  408c1c:	pop    ecx
  408c1d:	mov    ebx,0xacf8331a
  408c22:	inc    ebx
  408c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c24:	fmul   QWORD PTR [ebp+0x73]
  408c27:	data16 and BYTE PTR [ebp-0x4e],0xc7
  408c2c:	inc    ebx
  408c2d:	fdivr  st(2),st
  408c2f:	push   0xe5cf63f8
  408c34:	fld    TBYTE PTR [esp+eax*4-0x34]
  408c38:	jl     0x408bfa
  408c3a:	jmp    0x408c4f
  408c3c:	mov    eax,0x3a8f76da
  408c41:	pusha  
  408c42:	jns    0x408bf8
  408c44:	or     eax,0x96500c7a
  408c49:	push   ebx
  408c4a:	jne    0x408bda
  408c4c:	frstor [ecx]
  408c4e:	lahf   
  408c4f:	shl    BYTE PTR [ecx-0x7b],0x2f
  408c53:	push   ecx
  408c54:	push   0xe13df4be
  408c59:	inc    ebx
  408c5a:	mov    ah,0xe5
  408c5c:	xchg   ecx,eax
  408c5d:	pop    es
  408c5e:	sahf   
  408c5f:	mov    esp,0x649fb9fb
  408c64:	jae    0x408cad
  408c66:	pop    es
  408c67:	xlat   BYTE PTR ds:[ebx]
  408c68:	and    DWORD PTR [ebx],ecx
  408c6a:	jno    0x408c02
  408c6c:	sbb    al,bh
  408c6e:	push   ebx
  408c6f:	inc    ecx
  408c70:	pop    ecx
  408c71:	dec    ebp
  408c72:	and    dl,al
  408c74:	jp     0x408c25
  408c76:	inc    BYTE PTR [eax+0x34cd9d02]
  408c7c:	inc    ebp
  408c7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c7e:	loope  0x408cb5
  408c80:	fs fs jb 0x408c4b
  408c84:	inc    eax
  408c85:	xor    DWORD PTR [esi+0x74],edx
  408c88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c89:	jnp    0x408c36
  408c8b:	mov    es,WORD PTR [esp+edx*8]
  408c8e:	pop    ds
  408c8f:	cli    
  408c90:	xor    ebp,esi
  408c92:	fst    QWORD PTR [eax+0x29f68d47]
  408c98:	pop    ebx
  408c99:	add    eax,0x3a4b94cb
  408c9e:	xchg   ebp,eax
  408c9f:	adc    al,0xb0
  408ca1:	rcl    BYTE PTR [esi+edx*2+0x434612c8],cl
  408ca8:	aas    
  408ca9:	adc    edi,DWORD PTR [edx+0x5]
  408cac:	mov    ecx,0x7f0f4c5f
  408cb1:	push   ecx
  408cb2:	sbb    DWORD PTR [ecx-0x69],eax
  408cb5:	jl     0x408c43
  408cb7:	test   BYTE PTR [ebx-0x6b],ch
  408cba:	mov    dh,0x3f
  408cbc:	ret    
  408cbd:	dec    ebp
  408cbe:	xchg   edx,eax
  408cbf:	test   ebp,eax
  408cc1:	retf   
  408cc2:	sbb    edi,DWORD PTR [edi-0x4e]
  408cc5:	push   eax
  408cc6:	lea    ecx,[esi-0x7f55cfe1]
  408ccc:	ficomp WORD PTR [edi+0x75f31e9b]
  408cd2:	stc    
  408cd3:	or     al,0x7e
  408cd5:	call   0x94f6:0x964cf2ba
  408cdc:	pop    esp
  408cdd:	out    0xa3,al
  408cdf:	stc    
  408ce0:	loop   0x408cab
  408ce2:	das    
  408ce3:	push   esp
  408ce4:	jge    0x408cb4
  408ce6:	mov    cl,0x1b
  408ce8:	clc    
  408ce9:	aaa    
  408cea:	mov    esp,0x481a28ea
  408cef:	les    ebx,FWORD PTR [edx]
  408cf1:	jns    0x408d2a
  408cf3:	sub    eax,0xf7acbeab
  408cf8:	mov    ds:0x54f66e26,eax
  408cfd:	ss jb  0x408d18
  408d00:	push   ebp
  408d01:	pop    esp
  408d02:	sti    
  408d03:	dec    edi
  408d04:	or     edx,ebp
  408d06:	adc    bh,BYTE PTR [esi+0xa72ec8d]
  408d0c:	in     eax,0x7
  408d0e:	or     al,0x21
  408d10:	ret    0x384b
  408d13:	in     eax,dx
  408d14:	mov    ebx,0xcbc86ab9
  408d19:	sub    dl,bl
  408d1b:	xor    edi,0x2b
  408d1e:	je     0x408d27
  408d20:	fld    DWORD PTR [esi+0x7a56270]
  408d26:	mov    ch,cl
  408d28:	mov    al,0x41
  408d2a:	mov    ch,0xac
  408d2c:	adc    eax,edi
  408d2e:	arpl   WORD PTR [ebx-0x3d9c4e96],di
  408d34:	sqrtps xmm3,XMMWORD PTR [eax+ecx*2-0x68]
  408d39:	fldcw  WORD PTR [ebp-0x5f46c16f]
  408d3f:	sbb    eax,0x121fe362
  408d44:	mov    eax,0xe02e6ab0
  408d49:	mov    ebx,0x74a47897
  408d4e:	dec    ecx
  408d4f:	dec    ecx
  408d50:	push   0x55a072d8
  408d55:	and    esi,DWORD PTR [esi+ebx*2-0x291968dd]
  408d5c:	int    0x34
  408d5e:	retf   
  408d5f:	stos   BYTE PTR es:[edi],al
  408d60:	jno    0x408d3f
  408d62:	repz sub eax,esp
  408d65:	test   DWORD PTR [edi],ecx
  408d67:	(bad)  
  408d69:	mov    ah,0x95
  408d6b:	sub    eax,0x7e441e5c
  408d70:	adc    dh,BYTE PTR [ebp+0x47]
  408d73:	clc    
  408d74:	hlt    
  408d75:	push   ebp
  408d76:	fldcw  WORD PTR [ebx]
  408d78:	add    DWORD PTR [eax+0x45],0xffffff9d
  408d7c:	ret    0xb4b7
  408d7f:	loopne 0x408da0
  408d81:	and    ah,ah
  408d83:	lds    eax,FWORD PTR [esi-0x28]
  408d86:	popf   
  408d87:	mov    ah,BYTE PTR [esi*4-0x592aef5f]
  408d8e:	jmp    0x8c5a:0x499e25c0
  408d95:	xchg   ecx,eax
  408d96:	jmp    0x284e5abe
  408d9b:	div    DWORD PTR [esi+0x6df9da18]
  408da1:	or     BYTE PTR [edx],cl
  408da3:	outs   dx,BYTE PTR ds:[esi]
  408da4:	addr16 sub al,0x21
  408da7:	add    cl,BYTE PTR [ebx+0x4be20e06]
  408dad:	pop    es
  408dae:	xor    dl,BYTE PTR [eax+0x58b2f737]
  408db4:	or     al,BYTE PTR ds:0xa62a25eb
  408dba:	jae    0x408d71
  408dbc:	push   0x20
  408dbe:	xchg   ebx,eax
  408dbf:	sbb    DWORD PTR [edi-0x278aaa1b],ebx
  408dc5:	(bad)  
  408dc6:	and    ah,BYTE PTR [ecx+0x7c1a9163]
  408dcc:	(bad)  
  408dcd:	and    al,0xba
  408dcf:	call   0x4ee6:0x3fc3e80e
  408dd6:	xor    al,0xfc
  408dd8:	in     eax,dx
  408dd9:	ud1    ecx,eax
  408ddc:	std    
  408ddd:	shl    DWORD PTR [ebp+edi*1+0x1186e4ce],1
  408de4:	fwait
  408de5:	dec    edi
  408de6:	mov    ah,0xc8
  408de8:	mov    bh,0x35
  408dea:	sbb    BYTE PTR [ecx+ebx*8+0x6c],cl
  408dee:	lds    edx,FWORD PTR [ebx+ecx*8+0x49]
  408df2:	scas   al,BYTE PTR es:[edi]
  408df3:	or     eax,0x6a5b6c0d
  408df8:	scas   al,BYTE PTR es:[edi]
  408df9:	pushf  
  408dfa:	push   esi
  408dfb:	mov    WORD PTR [ecx+0x64],cs
  408dfe:	lea    edx,[ecx+0x9acd580]
  408e04:	add    DWORD PTR [ebx+ebx*8],0xffffffd4
  408e08:	adc    eax,0xb78b1530
  408e0d:	cmp    al,0x58
  408e0f:	mov    edi,0x77550507
  408e14:	mov    edx,0xb05e8518
  408e19:	push   cs
  408e1a:	(bad)  
  408e1b:	push   esi
  408e1c:	test   DWORD PTR [edx+edx*8-0x1bafd34b],ebx
  408e23:	xlat   BYTE PTR ds:[ebx]
  408e24:	mov    dh,0x46
  408e26:	push   ds
  408e27:	xchg   esi,esi
  408e29:	stos   BYTE PTR es:[edi],al
  408e2a:	sbb    dl,dh
  408e2c:	ror    cl,cl
  408e2e:	call   0x5a78:0x146e1349
  408e35:	ds inc ebx
  408e37:	dec    edx
  408e38:	push   eax
  408e39:	jmp    FWORD PTR [ecx+0x47]
  408e3c:	or     al,0x8a
  408e3e:	push   eax
  408e3f:	sub    ch,BYTE PTR [esi+0x471512a9]
  408e45:	sti    
  408e46:	push   ecx
  408e47:	icebp  
  408e48:	popf   
  408e49:	shr    BYTE PTR [eax+edx*1+0x7c],1
  408e4d:	xchg   esp,eax
  408e4e:	ja     0x408e0b
  408e50:	in     eax,0x39
  408e52:	push   esi
  408e53:	jge    0x408e3d
  408e55:	daa    
  408e56:	xchg   bh,dl
  408e58:	sub    eax,0xbdb92c70
  408e5d:	push   ebp
  408e5e:	mov    eax,0xa50021a3
  408e63:	and    al,0x96
  408e65:	mov    ebp,0xaaa24b48
  408e6a:	pop    esp
  408e6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e6c:	add    eax,0xe0b89a88
  408e71:	pop    esp
  408e72:	sar    edi,1
  408e74:	mov    al,ds:0x4ed63fab
  408e79:	and    al,0x2c
  408e7b:	mov    ?,WORD PTR [ebx+0x5122d901]
  408e81:	jecxz  0x408e07
  408e83:	and    DWORD PTR [eax+0x28ee0124],eax
  408e89:	mov    al,0x42
  408e8b:	sbb    bl,cl
  408e8d:	push   eax
  408e8e:	fcomp  QWORD PTR [esi-0x22db6ee5]
  408e94:	leave  
  408e95:	in     eax,dx
  408e96:	ret    
  408e97:	add    dl,dh
  408e99:	mov    al,ds:0xadaf3ef1
  408e9e:	pop    ecx
  408e9f:	(bad)  
  408ea0:	jmp    0x8edc:0xd1bad25a
  408ea7:	pop    ecx
  408ea8:	js     0x408e63
  408eaa:	and    ebx,edx
  408eac:	pop    ebp
  408ead:	repnz mov bh,0x80
  408eb0:	pop    esi
  408eb1:	sbb    edx,edi
  408eb3:	imul   esp,DWORD PTR [edi],0x6b30f2b8
  408eb9:	arpl   WORD PTR ds:0xeba8a936,bx
  408ebf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ec0:	jb     0x408eb3
  408ec2:	cwde   
  408ec3:	(bad)  
  408ec4:	scas   al,BYTE PTR es:[edi]
  408ec5:	fistp  DWORD PTR [edx-0x22]
  408ec8:	sahf   
  408ec9:	mov    ebx,0x3c98b5cf
  408ece:	pop    ebx
  408ecf:	sub    al,bl
  408ed1:	mov    eax,ds:0xb543ef1f
  408ed6:	push   edx
  408ed7:	sub    al,0x46
  408ed9:	push   esp
  408eda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408edb:	inc    esp
  408edc:	(bad)  [ebx+0xd364c6d]
  408ee2:	in     al,0x1f
  408ee4:	xor    DWORD PTR [edi+eax*8-0x30],edx
  408ee8:	push   edi
  408ee9:	rol    esi,cl
  408eeb:	jae    0x408ecc
  408eed:	jb     0x408e7b
  408eef:	fmul   QWORD PTR [edi+0x660fb7a8]
  408ef5:	not    BYTE PTR [eax]
  408ef7:	dec    edi
  408ef8:	adc    dl,dl
  408efa:	and    esi,0x76366735
  408f00:	imul   edi,DWORD PTR [esi-0x75],0xbe28f27e
  408f07:	inc    eax
  408f08:	add    edx,DWORD PTR [ebx]
  408f0a:	jecxz  0x408ec4
  408f0c:	(bad)  
  408f0d:	lock lock adc ebp,DWORD PTR [ebp+0x20db3dbc]
  408f15:	aas    
  408f16:	sbb    edi,DWORD PTR [ebx+0x9]
  408f19:	jmp    0x408f8f
  408f1b:	jmp    0x637:0x76505990
  408f22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f23:	and    eax,0xe292d83
  408f28:	mov    eax,ds:0x2fa0eb07
  408f2d:	push   ds
  408f2e:	mov    edx,0x91825972
  408f33:	out    0x25,eax
  408f35:	jnp    0x408f60
  408f37:	xor    eax,edi
  408f39:	jmp    0x436cfbf4
  408f3e:	or     BYTE PTR [ecx+0x51dc37f9],bl
  408f44:	dec    ecx
  408f45:	pop    es
  408f46:	adc    DWORD PTR [eax],ebx
  408f48:	cwde   
  408f49:	(bad)  
  408f4a:	std    
  408f4b:	jecxz  0x408f40
  408f4d:	inc    edi
  408f4e:	xchg   ebp,eax
  408f4f:	imul   eax,DWORD PTR [eax-0x3],0x7c617b07
  408f56:	cli    
  408f57:	pop    es
  408f58:	repz repnz push 0xbd9a888c
  408f5f:	pop    ecx
  408f60:	test   al,0x4a
  408f62:	lds    ebx,FWORD PTR [ebx-0x5a]
  408f65:	mov    esi,0x441594b5
  408f6a:	sbb    al,0x2a
  408f6c:	jg     0x408f42
  408f6e:	arpl   bx,di
  408f70:	mov    esp,0x8e7db72b
  408f75:	pop    ebx
  408f76:	ds ss pop eax
  408f79:	ror    eax,cl
  408f7b:	adc    ebp,ebp
  408f7d:	dec    esp
  408f7e:	inc    esi
  408f7f:	clc    
  408f80:	xor    edx,ebx
  408f82:	cmp    al,0xf0
  408f84:	fsubr  DWORD PTR [esi]
  408f86:	clc    
  408f87:	dec    ebp
  408f88:	int3   
  408f89:	push   esi
  408f8a:	test   al,0xde
  408f8c:	xor    BYTE PTR [edx+0x59],dh
  408f8f:	xor    BYTE PTR [ebp+0x69],dl
  408f92:	shl    DWORD PTR [esi-0x52],0x9a
  408f96:	cmp    bl,ch
  408f98:	rcr    BYTE PTR [eax-0x27138e4e],cl
  408f9e:	jo     0x408f3c
  408fa0:	push   ss
  408fa1:	dec    edx
  408fa2:	xchg   DWORD PTR [ebp*8+0x79dc8c25],eax
  408fa9:	outs   dx,BYTE PTR ds:[esi]
  408faa:	add    BYTE PTR [ebp+0x4264c0f],ch
  408fb0:	mov    ecx,0x88107e4e
  408fb5:	dec    ecx
  408fb6:	aas    
  408fb7:	mov    bl,0xc9
  408fb9:	out    0xc4,eax
  408fbb:	mov    edx,0xc99d275e
  408fc0:	out    0xbc,al
  408fc2:	add    BYTE PTR [edx-0x1eacc68e],dl
  408fc8:	or     dh,BYTE PTR [ebp+0x9d19f5d]
  408fce:	es out dx,al
  408fd0:	sbb    BYTE PTR [esi],0x3
  408fd3:	pop    es
  408fd4:	pop    eax
  408fd5:	mov    bh,0x29
  408fd7:	inc    edi
  408fd8:	call   0x9807:0x24b50590
  408fdf:	ss or  eax,0x60fe9bbd
  408fe5:	out    dx,al
  408fe6:	outs   dx,BYTE PTR ds:[esi]
  408fe7:	(bad)  
  408fe8:	ins    DWORD PTR es:[edi],dx
  408fe9:	cmp    edx,DWORD PTR [esi+0x177fe5db]
  408fef:	push   edi
  408ff0:	push   esp
  408ff1:	into   
  408ff2:	dec    ebp
  408ff3:	es cld 
  408ff5:	and    eax,0x83089a2f
  408ffa:	add    esp,ebx
  408ffc:	pop    ds
  408ffd:	mov    ebp,0xbb72776c
  409002:	xor    BYTE PTR [ebx+0x9],al
  409005:	les    edx,FWORD PTR [esp+ecx*8]
  409008:	iret   
  409009:	and    eax,0xc1c521e3
  40900e:	mov    eax,ds:0x11cff57b
  409013:	xchg   esi,eax
  409014:	jmp    0xd3071793
  409019:	sbb    al,0xb4
  40901b:	sub    BYTE PTR [eax],0xc0
  40901e:	repnz jecxz 0x409038
  409021:	fistp  WORD PTR [esi]
  409023:	jne    0x408fe0
  409025:	out    0x7f,eax
  409027:	adc    al,0x65
  409029:	test   DWORD PTR [edx+0x2410bdb0],esp
  40902f:	mov    WORD PTR [ebx],fs
  409031:	jp     0x409036
  409033:	dec    edi
  409034:	sbb    DWORD PTR [edi+0x37],edx
  409037:	jno    0x409027
  409039:	mov    edx,0x4d59e324
  40903e:	into   
  40903f:	jo     0x409069
  409041:	mov    al,ds:0xe42de04a
  409046:	stos   DWORD PTR es:[edi],eax
  409047:	outs   dx,BYTE PTR ds:[esi]
  409048:	int    0x80
  40904a:	gs jecxz 0x40908e
  40904d:	pop    ebx
  40904e:	lods   eax,DWORD PTR ds:[esi]
  40904f:	mov    ah,0x42
  409051:	cli    
  409052:	test   ebp,ebx
  409054:	xor    eax,0xfc854047
  409059:	call   0x4bfc5589
  40905e:	cmc    
  40905f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409060:	and    esp,esi
  409062:	inc    esp
  409063:	in     al,0x17
  409065:	cmp    ah,BYTE PTR [edi]
  409067:	mov    bl,0x3
  409069:	icebp  
  40906a:	mov    bl,0xff
  40906c:	pushf  
  40906d:	jmp    0x409018
  40906f:	inc    esp
  409070:	outs   dx,BYTE PTR ds:[esi]
  409071:	(bad)  
  409072:	cdq    
  409073:	inc    esp
  409074:	xchg   DWORD PTR [eax+0x623c62c4],ebx
  40907a:	sbb    ah,dh
  40907c:	add    DWORD PTR [edx],ecx
  40907e:	mov    al,ds:0xc5b0e99e
  409083:	out    0x6,al
  409085:	sbb    DWORD PTR [ebx+eax*1+0x51],0xffffffc4
  40908a:	loop   0x409052
  40908c:	jmp    0x40e1febd
  409091:	es daa 
  409093:	cs adc eax,ebx
  409096:	push   0x79
  409098:	cli    
  409099:	adc    al,0xe3
  40909b:	ss jne 0x4090bc
  40909e:	dec    edi
  40909f:	pop    eax
  4090a0:	imul   ecx,DWORD PTR [edi-0x6d],0x3a
  4090a4:	mov    bh,0x38
  4090a6:	es cmp al,0x38
  4090a9:	lock clc 
  4090ab:	mov    ecx,0xde052459
  4090b0:	xchg   esp,eax
  4090b1:	loope  0x409084
  4090b3:	inc    ecx
  4090b4:	stc    
  4090b5:	scas   al,BYTE PTR es:[edi]
  4090b6:	and    bh,BYTE PTR [edi]
  4090b8:	pop    ebp
  4090b9:	ret    
  4090ba:	dec    edi
  4090bb:	mov    edi,0x1f4a0bc1
  4090c0:	mov    ebp,0x506e936f
  4090c5:	jns    0x40910d
  4090c7:	js     0x40910c
  4090c9:	leave  
  4090ca:	stos   DWORD PTR es:[edi],eax
  4090cb:	xchg   BYTE PTR [eax+0x4443df5b],ah
  4090d1:	pop    ss
  4090d2:	push   0x2d
  4090d4:	mov    dl,0xd
  4090d6:	xchg   BYTE PTR [ebp+0x2c510d21],bh
  4090dc:	daa    
  4090dd:	mov    al,ds:0x21de2475
  4090e2:	test   eax,0x73ef86ed
  4090e7:	and    eax,0xc3e2a1ec
  4090ec:	gs je  0x409169
  4090ef:	and    BYTE PTR [ebp+ecx*1-0x16f26858],0xa6
  4090f7:	call   DWORD PTR [edi+0x25]
  4090fa:	aaa    
  4090fb:	stos   BYTE PTR es:[edi],al
  4090fc:	test   al,0x8d
  4090fe:	cwde   
  4090ff:	js     0x40913b
  409101:	xor    ebx,edi
  409103:	add    al,0x97
  409105:	aam    0x67
  409107:	and    ch,BYTE PTR [edx+0x7a]
  40910a:	test   edx,ebp
  40910c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40910d:	hlt    
  40910e:	and    al,0xe9
  409110:	clc    
  409111:	mov    bh,0xb3
  409113:	lea    edx,[ebx]
  409115:	xchg   edx,eax
  409116:	jg     0x4090cc
  409118:	dec    esi
  409119:	jbe    0x409133
  40911b:	mov    edx,0xd3e07dc9
  409120:	mov    dl,0x74
  409122:	or     ecx,ebp
  409124:	or     dh,BYTE PTR [edx+0x3bae7230]
  40912a:	xchg   ebp,eax
  40912b:	sub    DWORD PTR [edi-0x77],0x76b40849
  409132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409133:	and    eax,0x112383f4
  409138:	and    bh,dl
  40913a:	imul   esi,DWORD PTR [eax+eax*1+0x7a8f9bed],0x2f
  409142:	daa    
  409143:	push   0xffffffc7
  409145:	mov    dl,0xb3
  409147:	sub    al,0x91
  409149:	sbb    BYTE PTR ds:0x88b0a315,0xe5
  409150:	push   esi
  409151:	xchg   ecx,eax
  409152:	outs   dx,DWORD PTR ds:[esi]
  409153:	xchg   edi,eax
  409154:	dec    esi
  409155:	icebp  
  409156:	jo     0x4090ff
  409158:	ds sti 
  40915a:	cld    
  40915b:	xor    eax,0xa2a93bd4
  409160:	push   ebp
  409161:	js     0x4091b4
  409163:	xchg   edi,eax
  409164:	jmp    0x359bf8b1
  409169:	iret   
  40916a:	dec    eax
  40916b:	ss daa 
  40916d:	cmp    cl,BYTE PTR [eax-0x67]
  409170:	in     eax,dx
  409171:	cmp    edx,DWORD PTR [ecx-0x26]
  409174:	xchg   ebx,eax
  409175:	int    0xeb
  409177:	mulps  xmm6,XMMWORD PTR [esi+esi*4]
  40917b:	jl     0x4091fa
  40917d:	jmp    0x3ca6:0xc2479609
  409184:	sbb    ch,BYTE PTR [edx-0x4a]
  409187:	dec    ebx
  409188:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40918a:	bound  ecx,QWORD PTR [edx+0x8]
  40918d:	adc    DWORD PTR [edx+eax*2+0x34ca204a],eax
  409194:	sbb    al,0x49
  409196:	or     BYTE PTR [ecx],cl
  409198:	hlt    
  409199:	mov    al,ds:0x4185854e
  40919e:	sbb    al,0xb0
  4091a0:	sub    BYTE PTR ds:0x4e74f29a,al
  4091a6:	cmp    BYTE PTR [edi-0x187eec35],ch
  4091ac:	dec    esp
  4091ad:	mov    esp,edi
  4091af:	push   edi
  4091b0:	into   
  4091b1:	stos   DWORD PTR es:[edi],eax
  4091b2:	outs   dx,DWORD PTR ds:[esi]
  4091b3:	or     al,0xe
  4091b5:	pop    edx
  4091b6:	test   al,0xf
  4091b8:	out    0x28,eax
  4091ba:	sub    ah,cl
  4091bc:	xlat   BYTE PTR ds:[ebx]
  4091bd:	sub    edi,edi
  4091bf:	or     BYTE PTR [eax+edx*8],ch
  4091c2:	or     ah,BYTE PTR [ebx]
  4091c4:	pop    ecx
  4091c5:	sub    esp,DWORD PTR [ebp-0xeb9f13b]
  4091cb:	mov    esi,DWORD PTR [ebx]
  4091cd:	pop    edx
  4091ce:	adc    BYTE PTR [edx],ah
  4091d0:	mov    edx,ds
  4091d2:	mov    eax,ds:0x5c3ae347
  4091d7:	lds    esi,FWORD PTR [ebx+edi*2-0x46e453e6]
  4091de:	arpl   WORD PTR [edi-0x72],si
  4091e1:	stc    
  4091e2:	ficom  DWORD PTR [edx+0x65]
  4091e5:	mov    DWORD PTR [ebp+0x42a0541c],edi
  4091eb:	or     al,0xd1
  4091ed:	adc    BYTE PTR [ebp-0x43],al
  4091f0:	inc    ecx
  4091f1:	mov    ecx,0x505f8ed7
  4091f6:	sub    BYTE PTR ds:0x1a297dc,cl
  4091fc:	jo     0x4091e1
  4091fe:	jmp    0x4f45ea16
  409203:	add    bh,BYTE PTR [esp+ebp*8]
  409206:	cmp    ah,BYTE PTR [eax]
  409208:	jl     0x4091f1
  40920a:	iret   
  40920b:	mov    WORD PTR [edx+0x314a9c62],?
  409211:	mov    al,dl
  409213:	add    ah,BYTE PTR [eax+0x29]
  409216:	out    dx,eax
  409217:	dec    eax
  409218:	and    eax,0x64af2db
  40921d:	push   edi
  40921e:	sbb    ebp,edx
  409220:	imul   ecx,DWORD PTR [ebx+edx*2+0x55],0x8b54abc4
  409228:	cmp    ecx,ebx
  40922a:	cmp    al,0xcf
  40922c:	mov    cl,0xca
  40922e:	pop    ebx
  40922f:	push   edi
  409230:	pop    ss
  409231:	jbe    0x4091ff
  409233:	dec    esi
  409234:	mul    BYTE PTR ss:[edi+0x2]
  409238:	xor    al,BYTE PTR [edx-0x63]
  40923b:	shr    eax,1
  40923d:	imul   ecx,DWORD PTR ds:0x882f813d,0xffffffd1
  409244:	data16 and al,0x73
  409247:	sub    eax,0xf3491bf8
  40924c:	push   esi
  40924d:	mov    dh,0xe1
  40924f:	pusha  
  409250:	sub    bh,BYTE PTR [ecx+0x14]
  409253:	js     0x4092a4
  409255:	cli    
  409256:	ja     0x409272
  409258:	mov    WORD PTR [ebx],es
  40925a:	pop    ecx
  40925b:	(bad)
  40925e:	jecxz  0x409267
  409260:	push   ebp
  409261:	sub    bh,BYTE PTR [ebp+0x493ca495]
  409267:	mov    DWORD PTR ds:0x26f870dc,edi
  40926d:	fnstenv [ebp-0x647b1ea8]
  409273:	(bad)  
  409274:	mov    bl,0x12
  409276:	add    eax,0x1d41792d
  40927b:	test   DWORD PTR [ebx-0x74],ecx
  40927e:	fdivr  DWORD PTR [eax+eax*8]
  409281:	mov    edx,0xb37f4c87
  409286:	ins    DWORD PTR es:[edi],dx
  409287:	mov    eax,ds:0xc363c928
  40928c:	cmp    dh,dl
  40928e:	stos   DWORD PTR es:[edi],eax
  40928f:	inc    ebp
  409290:	inc    edi
  409291:	mov    ecx,0x7736607f
  409296:	outs   dx,DWORD PTR ds:[esi]
  409297:	test   DWORD PTR [ecx-0xb1b238d],esi
  40929d:	add    al,0xe5
  40929f:	scas   eax,DWORD PTR es:[edi]
  4092a0:	mov    dh,0xe1
  4092a2:	sar    BYTE PTR [esi-0x3],cl
  4092a5:	adc    al,0x5c
  4092a7:	jo     0x4092fb
  4092a9:	out    dx,al
  4092aa:	jmp    0x4092b0
  4092ac:	mov    cl,0x5d
  4092ae:	call   0xd384:0xe4a4b63a
  4092b5:	xchg   esi,eax
  4092b6:	jge    0x409240
  4092b8:	jecxz  0x4092ae
  4092ba:	ja     0x4092e9
  4092bc:	mov    eax,ds:0xa943ca0d
  4092c1:	xlat   BYTE PTR ds:[ebx]
  4092c2:	dec    ebp
  4092c3:	mov    edi,0xa1912b7a
  4092c8:	dec    edi
  4092c9:	sub    bh,dl
  4092cb:	sbb    BYTE PTR [edi+0x32],bl
  4092ce:	dec    esp
  4092cf:	clc    
  4092d0:	adc    al,0x8b
  4092d2:	loope  0x409291
  4092d4:	ret    
  4092d5:	ficomp WORD PTR [edx]
  4092d7:	xor    edi,DWORD PTR [ebx+eax*8-0x50]
  4092db:	inc    esi
  4092dc:	mov    BYTE PTR [edi-0x21],al
  4092df:	pop    esp
  4092e0:	push   0x67
  4092e2:	cmp    al,0x3a
  4092e4:	push   edi
  4092e5:	sbb    eax,0x8fe1b324
  4092ea:	stc    
  4092eb:	push   eax
  4092ec:	push   ebp
  4092ed:	cmp    BYTE PTR ds:0x5d1627eb,0xfc
  4092f4:	or     al,0x93
  4092f6:	mov    ebx,0x91b8ebec
  4092fb:	je     0x409351
  4092fd:	sub    eax,DWORD PTR ds:0x6dd1737f
  409303:	xor    bh,BYTE PTR [edx-0x4766e25c]
  409309:	sti    
  40930a:	adc    al,0xe0
  40930c:	and    DWORD PTR [ecx+0x4ee21ba9],0xe82c93a7
  409316:	pop    ds
  409317:	jmp    0x1a72:0x4a6c3ae3
  40931e:	push   edx
  40931f:	push   ds
  409320:	outs   dx,DWORD PTR ds:[esi]
  409321:	(bad)
  409324:	sub    al,0xc
  409326:	xchg   ebx,eax
  409327:	(bad)  
  409328:	rcr    BYTE PTR [esi+0x3df7d49],0x85
  40932f:	adc    DWORD PTR [esi+0x2d],0xb43eaa0d
  409336:	ins    BYTE PTR es:[edi],dx
  409337:	stos   DWORD PTR es:[edi],eax
  409338:	pop    eax
  409339:	inc    ebp
  40933a:	xor    eax,DWORD PTR [esi+0xca8aef3]
  409340:	in     eax,dx
  409341:	xor    BYTE PTR [ebp+eiz*1-0x6b],cl
  409345:	mov    al,ds:0x596ddf1f
  40934a:	popf   
  40934b:	clc    
  40934c:	outs   dx,BYTE PTR ds:[esi]
  40934d:	test   ah,al
  40934f:	push   edi
  409350:	(bad)  
  409351:	idiv   DWORD PTR [ecx+0x27a504e3]
  409357:	imul   esi,DWORD PTR [ecx],0x3731ffe
  40935d:	xor    BYTE PTR [edi],bh
  40935f:	cmc    
  409360:	enter  0x32d0,0x1
  409364:	jbe    0x40939d
  409366:	gs icebp 
  409368:	and    ch,ch
  40936a:	xor    al,0x19
  40936c:	out    dx,eax
  40936d:	test   DWORD PTR [edi-0x16fcda1c],0x98309106
  409377:	jl     0x40932b
  409379:	add    ah,BYTE PTR [esi+ebp*2-0x29]
  40937d:	add    al,0xe8
  40937f:	sahf   
  409380:	jl     0x409305
  409382:	call   0x4d6f9a25
  409387:	imul   ecx,DWORD PTR fs:[ebx+edx*1],0xffffffae
  40938c:	or     ch,BYTE PTR [esi]
  40938e:	and    bh,dh
  409390:	sti    
  409391:	pop    ds
  409392:	in     eax,0xc8
  409394:	cmp    eax,0x37ad817e
  409399:	das    
  40939a:	mov    ah,0x89
  40939c:	jmp    0xc0a3819
  4093a1:	shl    DWORD PTR [ecx-0x1e],0x54
  4093a5:	test   BYTE PTR [ebx],bl
  4093a7:	fwait
  4093a8:	dec    edx
  4093a9:	sub    dh,BYTE PTR [edx-0x7b]
  4093ac:	push   esi
  4093ad:	sub    dl,bh
  4093af:	lods   eax,DWORD PTR ss:[si]
  4093b2:	jb     0x409419
  4093b4:	mov    edi,0xfefcc222
  4093b9:	std    
  4093ba:	js     0x409394
  4093bc:	add    BYTE PTR [edi-0x6f92fef5],0x16
  4093c3:	cld    
  4093c4:	mov    ch,BYTE PTR [ebp-0x74]
  4093c7:	xor    al,0x3f
  4093ca:	jl     0x409411
  4093cc:	call   0xb6740eda
  4093d1:	sub    eax,0x257920f2
  4093d6:	addr16 ret 
  4093d8:	sbb    bh,ah
  4093da:	lods   eax,DWORD PTR cs:[esi]
  4093dc:	xor    esi,DWORD PTR [edi+0x2bf17b19]
  4093e2:	imul   ecx,edx,0x3c
  4093e5:	adc    DWORD PTR [si+0x146b],ebx
  4093ea:	push   edi
  4093eb:	push   edx
  4093ec:	(bad)  
  4093ed:	mov    eax,0xac84a9a9
  4093f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093f3:	js     0x40939b
  4093f5:	cmp    BYTE PTR [edx+0x689d2f8a],bl
  4093fb:	or     DWORD PTR [ebp+0x4534be82],esi
  409401:	(bad)  
  409402:	mov    WORD PTR [edi-0x6b],?
  409405:	jp     0x4093bf
  409407:	push   esi
  409408:	inc    ebx
  409409:	mov    esp,0x3b509bb6
  40940e:	mov    al,0xfe
  409410:	nop
  409411:	jmp    0x47a6d0c9
  409416:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409417:	fdiv   QWORD PTR [edi+0xd]
  40941a:	add    bl,bh
  40941c:	push   es
  40941d:	mov    cl,0x35
  40941f:	call   0x65b029ea
  409424:	xchg   edx,eax
  409425:	ret    
  409426:	std    
  409427:	pop    eax
  409428:	daa    
  409429:	xor    DWORD PTR [edx+ebp*8+0x2d445f76],esi
  409430:	test   DWORD PTR [ebx],esi
  409432:	pop    ebp
  409433:	xor    ebp,DWORD PTR [esi-0x37]
  409436:	mov    esp,0x81efdfce
  40943b:	jecxz  0x4094b6
  40943d:	(bad)  
  40943e:	pop    ss
  40943f:	(bad)  
  409440:	mov    esi,0xb98d2f3b
  409445:	ins    BYTE PTR es:[edi],dx
  409446:	xor    edx,DWORD PTR [esi+eiz*4-0x44f8400e]
  40944d:	push   0xffffffad
  40944f:	mov    esp,eax
  409451:	pop    eax
  409452:	das    
  409453:	aad    0x33
  409455:	call   0x22c2:0xcc12b748
  40945c:	stos   DWORD PTR es:[edi],eax
  40945d:	repz xchg al,ch
  409460:	inc    edi
  409461:	test   DWORD PTR [eax],0x7afe356b
  409467:	push   ss
  409468:	lods   al,BYTE PTR ds:[esi]
  409469:	sub    dh,BYTE PTR [eax-0x6fb78140]
  40946f:	popf   
  409470:	and    DWORD PTR [esi],0x96b83def
  409476:	jo     0x409426
  409478:	or     DWORD PTR [ebx+0x61ef78eb],eax
  40947e:	and    edx,DWORD PTR [edi+0x659993a5]
  409484:	sub    esi,ebx
  409486:	fld    TBYTE PTR [ebp+0x19]
  409489:	call   0x43ed:0x8147eecc
  409490:	jae    0x4094b0
  409492:	mov    dl,0x60
  409494:	jae    0x4094cb
  409496:	shl    BYTE PTR [eax-0x2217d1db],cl
  40949c:	test   al,0x2a
  40949e:	adc    ebp,DWORD PTR [eax+eax*8+0xf4ea6fa]
  4094a5:	or     eax,0x9172b2a4
  4094aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094ab:	aad    0xea
  4094ad:	pop    esi
  4094ae:	push   edi
  4094af:	dec    esp
  4094b0:	xor    edi,ecx
  4094b2:	xchg   edx,eax
  4094b3:	xlat   BYTE PTR ds:[ebx]
  4094b4:	add    cl,BYTE PTR [edi-0x2a6feb1b]
  4094ba:	dec    ecx
  4094bb:	push   edi
  4094bc:	mov    esi,0x4a0eb542
  4094c1:	shl    DWORD PTR [ecx+0x45d35457],0x1c
  4094c8:	test   DWORD PTR [esi],esi
  4094ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094cb:	or     esp,DWORD PTR ds:0x2b406a04
  4094d1:	sahf   
  4094d2:	jle    0x409518
  4094d4:	pushf  
  4094d5:	rol    BYTE PTR [ebx],0x44
  4094d8:	sbb    al,0xcb
  4094da:	mov    esp,0xbe64d315
  4094df:	adc    ah,BYTE PTR [eax]
  4094e1:	test   eax,0x2780880e
  4094e6:	cmp    BYTE PTR [esp+esi*4-0x34c31f60],bl
  4094ed:	pop    ecx
  4094ee:	xor    al,BYTE PTR [ebx-0x49]
  4094f1:	xchg   ecx,eax
  4094f2:	pop    ebx
  4094f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094f4:	push   eax
  4094f5:	ret    0xfa11
  4094f8:	mov    es,WORD PTR [esi]
  4094fa:	mov    eax,gs
  4094fc:	aaa    
  4094fd:	cmc    
  4094fe:	xchg   DWORD PTR [ebp+0x71],edi
  409501:	test   eax,0xd4abbaed
  409506:	leave  
  409507:	add    ebx,DWORD PTR [esi*2+0x3d9eb187]
  40950e:	push   edi
  40950f:	jb     0x4094f2
  409511:	inc    eax
  409512:	add    eax,0x2376ca0c
  409517:	and    al,0x28
  409519:	loop   0x4094fa
  40951b:	xor    al,0x77
  40951d:	stos   BYTE PTR es:[edi],al
  40951e:	add    cl,ah
  409520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409521:	leave  
  409522:	mov    ebx,0xa6e6dc17
  409527:	fmul   QWORD PTR [ecx-0x37]
  40952a:	test   eax,0x17923c20
  40952f:	dec    edx
  409530:	out    dx,eax
  409531:	dec    esi
  409532:	cmp    BYTE PTR ds:0x2eb52fdc,dl
  409538:	jmp    0x409551
  40953a:	push   edx
  40953b:	adc    DWORD PTR [eax],0x7bcbb5ea
  409541:	loop   0x40958f
  409543:	cmp    eax,0x6b87bffa
  409548:	in     eax,dx
  409549:	lods   eax,DWORD PTR ds:[esi]
  40954a:	xor    DWORD PTR [ecx+0x229bf99],ecx
  409550:	sbb    eax,0x9accb55b
  409555:	test   BYTE PTR [edi+0x77944aa3],dh
  40955b:	dec    ebx
  40955c:	mov    ah,0x32
  40955e:	lahf   
  40955f:	adc    DWORD PTR [ebx-0x37],0x42
  409563:	mov    ds,esi
  409565:	add    eax,0x38a0e1da
  40956a:	jp     0x40951c
  40956c:	mov    bl,0x5a
  40956e:	scas   al,BYTE PTR es:[edi]
  40956f:	cmp    BYTE PTR [eax],bh
  409571:	dec    edi
  409572:	in     al,0x7b
  409574:	push   0xdb0944e1
  409579:	cli    
  40957a:	sub    edx,DWORD PTR [edi-0x828c89f]
  409580:	mov    dh,0x44
  409582:	jge    0x409557
  409584:	mov    ebp,0xe09bf5be
  409589:	lock lea ebx,ds:0x136f56d4
  409590:	jmp    0x36a50484
  409595:	dec    ebp
  409596:	fs stos DWORD PTR es:[edi],eax
  409598:	(bad)  
  409599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40959a:	loopne 0x40952e
  40959c:	es pop edx
  40959e:	(bad)  
  40959f:	mov    eax,0xc4db70da
  4095a4:	xlat   BYTE PTR ds:[ebx]
  4095a5:	add    DWORD PTR [edx-0x10bc5ee2],esp
  4095ab:	mov    ah,0x2f
  4095ad:	daa    
  4095ae:	data16 xor al,0xe9
  4095b1:	aad    0x71
  4095b3:	adc    DWORD PTR [edx+0x2985923d],ebx
  4095b9:	adc    cl,BYTE PTR [edx-0x2006eb75]
  4095bf:	test   BYTE PTR [bp-0x25],cl
  4095c3:	mov    ecx,DWORD PTR [eax+ebx*4]
  4095c6:	push   0xffffff94
  4095c8:	cmp    eax,0xc2d2b8b5
  4095cd:	repnz mov bh,0xc2
  4095d0:	mov    ebx,0x110bf2c7
  4095d5:	call   0x2ab9:0x7d7ed32
  4095dc:	mov    cl,0x3b
  4095de:	pop    es
  4095df:	stos   DWORD PTR es:[edi],eax
  4095e0:	add    dl,BYTE PTR [eax]
  4095e2:	icebp  
  4095e3:	sub    eax,0x6ec288a6
  4095e8:	imul   eax,DWORD PTR [ebp-0x3a3eecbd],0xfd840b3d
  4095f2:	adc    cl,0x3d
  4095f5:	stos   DWORD PTR es:[edi],eax
  4095f6:	and    eax,0x62005766
  4095fb:	pop    esp
  4095fc:	cmp    dl,BYTE PTR [eax+0x4a66c448]
  409602:	push   edi
  409603:	mov    ds,esp
  409605:	mov    dl,0x36
  409607:	xchg   esi,eax
  409608:	pop    esp
  409609:	(bad)  
  40960b:	sar    BYTE PTR [edx-0x61173776],1
  409611:	mov    al,0x5d
  409613:	enter  0x795e,0x50
  409617:	jg     0x40963a
  409619:	les    esi,FWORD PTR [ebx]
  40961b:	sub    DWORD PTR [ebp+0x784d3f7c],0x27
  409622:	js     0x409626
  409624:	call   0x433d517
  409629:	xchg   ebx,eax
  40962a:	jo     0x4096a1
  40962c:	outs   dx,DWORD PTR ds:[esi]
  40962d:	mov    al,ds:0xcd9bb83a
  409632:	rol    esp,0xe1
  409635:	add    al,0xbe
  409637:	fcom   DWORD PTR [esi-0x6ba6685b]
  40963d:	popf   
  40963e:	test   DWORD PTR [eax+0x4d936169],eax
  409644:	mov    ebx,0xbbccbe4
  409649:	stos   BYTE PTR es:[edi],al
  40964a:	inc    edi
  40964b:	js     0x4096bb
  40964d:	push   esi
  40964e:	popa   
  40964f:	cmc    
  409650:	mov    ebp,0xd2cad67f
  409655:	adc    al,0x5f
  409657:	out    dx,al
  409658:	rcr    DWORD PTR [ebx-0xd419879],0xd4
  40965f:	push   edx
  409660:	retf   0xaf38
  409663:	mov    cl,BYTE PTR [edi-0x42bcec91]
  409669:	jb     0x4095ff
  40966b:	repnz mov ch,0xb7
  40966e:	xor    ah,cl
  409670:	fimul  WORD PTR [esi+0x45]
  409673:	jne    0x40965a
  409675:	cmp    bl,BYTE PTR [esi+0x19755d6]
  40967b:	sbb    eax,0xac3dbfe9
  409680:	fcomp  st(5)
  409682:	pop    ecx
  409683:	mov    cl,0x5d
  409685:	dec    edx
  409686:	mov    eax,0xb0ff5d03
  40968b:	enter  0x36ea,0xb9
  40968f:	cli    
  409690:	jo     0x40963b
  409692:	jnp    0x4096b8
  409694:	sub    al,0x4a
  409696:	push   edi
  409697:	dec    eax
  409698:	cwde   
  409699:	(bad)  
  40969a:	into   
  40969b:	fnstcw WORD PTR [edi]
  40969d:	mov    esp,0xdf14d560
  4096a2:	push   ecx
  4096a3:	pop    es
  4096a4:	xlat   BYTE PTR ds:[ebx]
  4096a5:	cmp    BYTE PTR [esi+0x186ffc7c],bh
  4096ab:	mov    ds:0xb05be464,al
  4096b0:	adc    edx,DWORD PTR [ebp+ecx*4-0x73]
  4096b4:	sub    eax,0xd35e49bb
  4096b9:	jecxz  0x409683
  4096bb:	mov    ch,0xa0
  4096bd:	push   0x56475066
  4096c2:	mov    esp,0xb6d431a9
  4096c7:	jl     0x4096bf
  4096c9:	les    ecx,FWORD PTR [esi+0x2bdac7f1]
  4096cf:	repz pop edi
  4096d1:	nop
  4096d2:	pop    ebx
  4096d3:	xchg   edx,eax
  4096d4:	xor    DWORD PTR [ebx],ebx
  4096d6:	sbb    DWORD PTR [ebp-0x4d],esi
  4096d9:	jg     0x4096c6
  4096db:	sbb    bh,BYTE PTR [ecx+edi*1+0x34]
  4096df:	adc    edi,DWORD PTR ds:0x4f7a4b49
  4096e5:	ja     0x409713
  4096e7:	adc    eax,0xb6911cb1
  4096ec:	test   al,0xd8
  4096ee:	sub    ah,bl
  4096f0:	scas   eax,DWORD PTR es:[edi]
  4096f1:	xchg   esi,eax
  4096f2:	pop    eax
  4096f3:	ss push ebp
  4096f5:	xchg   esi,eax
  4096f6:	xor    edi,DWORD PTR [ebp+0x646a1ffe]
  4096fc:	mov    ebp,0x56f1bfda
  409701:	fiadd  WORD PTR [eax-0x75]
  409704:	(bad)  
  409705:	sbb    ebx,DWORD PTR [edi]
  409707:	retf   
  409708:	aaa    
  409709:	sub    BYTE PTR [edi],ah
  40970b:	outs   dx,BYTE PTR ds:[esi]
  40970c:	mov    edx,DWORD PTR [ebp+0x5b]
  40970f:	push   esp
  409710:	dec    edx
  409711:	xor    ah,BYTE PTR [ecx+edi*2]
  409714:	daa    
  409715:	add    al,0xaf
  409717:	pop    esi
  409718:	cmp    al,0xda
  40971a:	into   
  40971b:	je     0x409711
  40971d:	hlt    
  40971e:	les    ecx,FWORD PTR [ebx+edi*2-0x78a256a1]
  409725:	push   ecx
  409726:	arpl   ax,bp
  409728:	lea    ecx,[ecx-0x43d426a8]
  40972e:	std    
  40972f:	loope  0x40977e
  409731:	mov    cl,0xda
  409733:	xor    bh,0xbd
  409736:	test   BYTE PTR [edi+0x5f],ch
  409739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40973a:	cs and eax,0x566ba5c0
  409740:	retf   0x5e0f
  409743:	push   eax
  409744:	jae    0x40979e
  409746:	mov    edi,0x99613768
  40974b:	nop
  40974c:	inc    edx
  40974d:	and    ecx,DWORD PTR ds:0x3a5092c1
  409753:	repnz mov eax,ds:0xc91a60aa
  409759:	call   0x164fb424
  40975e:	xchg   edx,eax
  40975f:	aam    0x5f
  409761:	mov    dl,0x56
  409763:	shl    DWORD PTR [esi],cl
  409765:	xchg   esi,eax
  409766:	repz ja 0x40970e
  409769:	test   BYTE PTR [esp+ebx*8+0x14086119],dl
  409770:	enter  0xf033,0x71
  409774:	sub    eax,0xc5d3a8b1
  409779:	sub    al,0xd7
  40977b:	sbb    ah,BYTE PTR ds:0xd8a023c6
  409781:	dec    ebx
  409782:	or     ecx,ebx
  409784:	and    DWORD PTR [ebx+0x43],ebp
  409787:	and    al,BYTE PTR [edx-0x2177ff7e]
  40978d:	js     0x40980a
  40978f:	aam    0xd1
  409791:	mov    ebp,0x239c30ff
  409796:	xchg   edx,eax
  409797:	and    BYTE PTR [esi+0x6ca48dd6],dh
  40979d:	sub    dh,ch
  40979f:	adc    BYTE PTR [edi],0x2
  4097a2:	jo     0x40980d
  4097a4:	rol    DWORD PTR ds:0x74bb478a,0xa6
  4097ab:	mov    bl,0xd3
  4097ad:	out    0x84,al
  4097af:	dec    ebp
  4097b0:	daa    
  4097b1:	rol    BYTE PTR [ebx],1
  4097b3:	ror    BYTE PTR [eax],cl
  4097b5:	jge    0x4097c3
  4097b7:	into   
  4097b8:	mov    esp,0xa2f4d8b0
  4097bd:	add    ah,BYTE PTR [ecx-0x62]
  4097c0:	out    0x34,eax
  4097c2:	cmp    DWORD PTR [esi],edi
  4097c4:	xor    BYTE PTR [ecx-0x7c],bl
  4097c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097c8:	add    al,0x88
  4097ca:	test   al,0x77
  4097cc:	pop    esi
  4097cd:	ins    DWORD PTR es:[edi],dx
  4097ce:	out    0xaf,al
  4097d0:	push   cs
  4097d1:	aad    0x77
  4097d3:	and    bl,BYTE PTR [ecx-0x2a3c82f5]
  4097d9:	lods   eax,DWORD PTR ds:[esi]
  4097da:	ficom  DWORD PTR [eax]
  4097dc:	xchg   esp,ebx
  4097de:	fs pop ebx
  4097e0:	xchg   dl,bh
  4097e2:	or     ebp,eax
  4097e4:	adc    al,0xa7
  4097e6:	sub    bl,BYTE PTR [ebx]
  4097e8:	mov    WORD PTR [edi],?
  4097ea:	test   bl,0x9f
  4097ed:	mov    ebp,0xb02263e5
  4097f2:	cmp    edi,DWORD PTR [esi-0x3d41f7ae]
  4097f8:	fwait
  4097f9:	jo     0x4097b1
  4097fb:	add    dl,BYTE PTR [ebx-0x43]
  4097fe:	(bad)  
  4097ff:	and    ebx,0xfffffff9
  409802:	or     DWORD PTR [edx],esp
  409804:	test   al,0x58
  409806:	mov    WORD PTR [ecx],fs
  409808:	add    al,0x82
  40980a:	push   0xfc74ebd1
  40980f:	sub    dh,BYTE PTR [eax-0xb]
  409812:	xor    DWORD PTR [eax+0x6dc520e2],esi
  409818:	cmp    esp,DWORD PTR [eax+0x53]
  40981b:	push   esp
  40981c:	jmp    0x1dc7ea8a
  409821:	xchg   ecx,eax
  409822:	push   ss
  409823:	mov    ah,0xa5
  409825:	pop    edi
  409826:	test   eax,0xa2e328fc
  40982b:	and    ch,al
  40982d:	fsub   st,st(4)
  40982f:	rcr    edi,1
  409831:	or     edx,DWORD PTR [ebp+0x3f]
  409834:	ins    BYTE PTR es:[edi],dx
  409835:	jo     0x409896
  409837:	out    dx,al
  409838:	scas   al,BYTE PTR es:[edi]
  409839:	dec    esp
  40983a:	sbb    BYTE PTR [edi],cl
  40983c:	cdq    
  40983d:	mov    al,ds:0xc896d8e8
  409842:	pop    eax
  409843:	mov    al,dl
  409845:	inc    edx
  409846:	(bad)
  40984a:	fsub   QWORD PTR ds:0xbb46c51b
  409850:	dec    esp
  409851:	pop    ebx
  409852:	mov    esi,0x1eefc0cb
  409857:	stc    
  409858:	neg    DWORD PTR [edi+esi*2+0x6]
  40985c:	enter  0x9d87,0x99
  409860:	in     al,dx
  409861:	mov    dh,0x5a
  409863:	pop    esp
  409864:	imul   BYTE PTR [ebp+0x34]
  409867:	std    
  409868:	(bad)  
  409869:	ds cmp al,0xed
  40986c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40986d:	push   esp
  40986e:	jnp    0x4098cb
  409870:	sbb    esp,DWORD PTR [edx]
  409872:	mov    ebp,0xb7efa5dc
  409877:	inc    ebx
  409878:	mov    ds,WORD PTR [edi+0x2f6ea0b7]
  40987e:	fimul  DWORD PTR [ebx+0x42]
  409881:	jge    0x4098cb
  409883:	fdivr  DWORD PTR [ebx+ebx*4-0x33f7858c]
  40988a:	scas   al,BYTE PTR es:[edi]
  40988b:	jecxz  0x40983b
  40988d:	xchg   edi,eax
  40988e:	lock sub al,0x85
  409891:	or     DWORD PTR ds:0xecd98910,0xffffffff
  409898:	and    eax,0x94bb326e
  40989d:	xor    eax,0x8efaeca4
  4098a2:	cmc    
  4098a3:	fwait
  4098a4:	addr16 inc ecx
  4098a6:	mov    ah,al
  4098a8:	xlat   BYTE PTR ds:[ebx]
  4098a9:	cmp    BYTE PTR [esi+0x33f8fce],0xb1
  4098b0:	fdiv   DWORD PTR [esi]
  4098b2:	repnz and ecx,DWORD PTR [edx+ebx*1+0x2da8c875]
  4098ba:	mov    ch,BYTE PTR [ecx+0x2d]
  4098bd:	sbb    bp,WORD PTR [ecx+0x60f8f590]
  4098c4:	inc    ebp
  4098c5:	dec    eax
  4098c6:	fist   WORD PTR [esp+esi*4]
  4098c9:	shl    DWORD PTR [edx+0x3eea2e77],cl
  4098cf:	sbb    al,0x94
  4098d1:	sub    eax,0x229373e6
  4098d6:	fst    QWORD PTR [ecx]
  4098d8:	push   edi
  4098d9:	aam    0x74
  4098db:	sbb    al,0xad
  4098dd:	icebp  
  4098de:	outs   dx,BYTE PTR ds:[esi]
  4098df:	in     al,dx
  4098e0:	in     eax,dx
  4098e1:	aam    0x22
  4098e3:	mov    esi,0x3cc46a6e
  4098e8:	jbe    0x409956
  4098ea:	imul   edi,ebp,0x215ce0b0
  4098f0:	mov    al,ds:0x9e2c14cc
  4098f5:	sahf   
  4098f6:	xchg   ebp,eax
  4098f7:	jb     0x4098b3
  4098f9:	stc    
  4098fa:	sbb    esp,0x13e63e47
  409900:	push   ebp
  409901:	jnp    0x4098b1
  409903:	out    0x92,al
  409905:	sbb    BYTE PTR [edx],0x23
  409908:	retf   
  409909:	(bad)  
  40990b:	jge    0x409937
  40990d:	out    dx,eax
  40990e:	test   BYTE PTR [esi+0x27c2f8e7],ch
  409914:	mov    eax,0x8070db10
  409919:	sub    eax,0xb14364be
  40991e:	in     eax,dx
  40991f:	cmp    ecx,DWORD PTR [esi-0x6d]
  409922:	fdiv   DWORD PTR [ebx]
  409924:	cmp    BYTE PTR [ebx+0x34],cl
  409927:	lahf   
  409928:	mov    gs,WORD PTR [esi+0x6]
  40992b:	sbb    ebp,ebx
  40992d:	mov    ah,0x6c
  40992f:	sub    eax,0xd30ab8aa
  409934:	jp     0x4098c4
  409936:	scas   al,BYTE PTR es:[edi]
  409937:	mov    dl,0x57
  409939:	popa   
  40993a:	mov    ecx,0x37401a34
  40993f:	sub    ecx,ecx
  409941:	cli    
  409942:	mov    ah,0x7e
  409944:	test   eax,0xf9e802a0
  409949:	retf   
  40994a:	ror    DWORD PTR [edx+0x285bca33],1
  409950:	xchg   bh,al
  409952:	mov    ch,BYTE PTR [ebx-0xc]
  409955:	sbb    esi,DWORD PTR [ebx]
  409957:	cmc    
  409958:	in     eax,0x93
  40995a:	sub    DWORD PTR [esi],edi
  40995c:	(bad)  
  40995e:	jmp    0xcda2699b
  409963:	xchg   BYTE PTR [edx],dl
  409965:	aad    0xfe
  409967:	xor    DWORD PTR [ebp+0x539d1f32],0x5ddbaded
  409971:	cmp    al,0xdb
  409973:	or     al,0x3d
  409975:	inc    ebp
  409976:	inc    ebp
  409977:	mov    eax,0x1db6e533
  40997c:	mov    edi,DWORD PTR [esi+0x4f]
  40997f:	cmpxchg DWORD PTR ds:0xd6d525b1,edx
  409986:	loop   0x40993d
  409988:	inc    ebp
  409989:	dec    esi
  40998a:	ds pop edi
  40998c:	jo     0x40994c
  40998e:	sbb    DWORD PTR [esp+ebx*8+0x32c4c60f],edi
  409995:	sbb    ah,al
  409997:	mov    bl,0x91
  409999:	fs cld 
  40999b:	arpl   WORD PTR [ebp+0x52],si
  40999e:	jbe    0x409a1a
  4099a0:	jns    0x409a1f
  4099a2:	sub    DWORD PTR ds:0x3fadf407,0x725ddeaa
  4099ac:	cmp    eax,0xa816c698
  4099b1:	ins    DWORD PTR es:[edi],dx
  4099b2:	stos   BYTE PTR es:[edi],al
  4099b3:	pop    ss
  4099b4:	pop    eax
  4099b5:	loopne 0x40994e
  4099b7:	scas   al,BYTE PTR es:[edi]
  4099b8:	mov    WORD PTR [ebx-0x42c9b291],es
  4099be:	bound  ebx,QWORD PTR [ebx]
  4099c0:	push   0x3eb38b6c
  4099c5:	or     eax,0x6c32519f
  4099ca:	call   0x53f7:0xf958da35
  4099d1:	icebp  
  4099d2:	and    esi,esp
  4099d4:	mov    ecx,0xd0701aca
  4099d9:	sub    al,BYTE PTR [ebx-0x25]
  4099dc:	adc    al,0xb8
  4099de:	push   ds
  4099df:	jnp    0x4099a4
  4099e1:	jno    0x409a31
  4099e3:	add    DWORD PTR [ebp-0x47],edi
  4099e6:	mov    ebx,0xba3b8130
  4099eb:	mov    edx,0xca084aea
  4099f0:	inc    eax
  4099f1:	push   eax
  4099f2:	cmp    ch,BYTE PTR [ebp+0x77]
  4099f5:	gs shr dl,cl
  4099f8:	push   ecx
  4099f9:	je     0x4099f1
  4099fb:	push   cs
  4099fc:	mov    bh,0x2d
  4099fe:	aas    
  4099ff:	loopne 0x4099e7
  409a01:	jl     0x4099c4
  409a03:	mov    ?,WORD PTR [eax]
  409a05:	(bad)  
  409a06:	xor    eax,0x4a608dca
  409a0b:	in     eax,dx
  409a0c:	inc    ebx
  409a0d:	add    ebp,DWORD PTR [edx-0x746e349c]
  409a13:	dec    edi
  409a14:	cmp    DWORD PTR [ecx],ecx
  409a16:	nop
  409a17:	rcr    DWORD PTR [edi+0x5e1ae05a],0xba
  409a1e:	jo     0x4099d7
  409a20:	mov    bl,0xbc
  409a22:	scas   al,BYTE PTR es:[edi]
  409a23:	call   0x7fd913e
  409a28:	push   esi
  409a29:	mov    al,ds:0xa565510d
  409a2e:	mov    ds:0x544d71a0,eax
  409a33:	lea    edx,fs:[esi+esi*2-0x6]
  409a38:	sub    al,0xe8
  409a3a:	outs   dx,DWORD PTR ds:[esi]
  409a3b:	push   ebp
  409a3c:	imul   ebx,eax,0x81cff508
  409a42:	ror    DWORD PTR [edi-0xa42fb19],0xf1
  409a49:	dec    ebp
  409a4a:	fs pop ds
  409a4c:	mov    cl,BYTE PTR [edx+0xe]
  409a4f:	fucomi st,st(4)
  409a51:	mov    ch,0x4a
  409a53:	and    al,0xee
  409a55:	sub    al,0x7c
  409a57:	enter  0x2a43,0x58
  409a5b:	and    al,0x61
  409a5d:	pushf  
  409a5e:	(bad)  
  409a5f:	mov    edi,0x5bae7028
  409a64:	(bad)  
  409a65:	sub    esp,edi
  409a67:	int3   
  409a68:	in     eax,0xa0
  409a6a:	jno    0x4099fb
  409a6c:	test   BYTE PTR [edi],dh
  409a6e:	leave  
  409a6f:	sub    ebp,DWORD PTR [edi+0x38]
  409a72:	cmp    BYTE PTR [edx-0x10eab150],0xe0
  409a79:	dec    ebx
  409a7a:	popa   
  409a7b:	div    DWORD PTR [esi+ecx*4+0x5320da69]
  409a82:	iret   
  409a83:	adc    al,0x78
  409a85:	xchg   edx,eax
  409a86:	and    BYTE PTR [eax+esi*8],0xfe
  409a8a:	pop    edx
  409a8b:	jecxz  0x409a9a
  409a8d:	jnp    0x409a89
  409a8f:	inc    ecx
  409a90:	aas    
  409a91:	stos   BYTE PTR es:[edi],al
  409a92:	pop    esp
  409a93:	popf   
  409a94:	or     eax,0xdc6f8173
  409a99:	mov    esi,0x616a23fa
  409a9e:	hlt    
  409a9f:	rcr    DWORD PTR [eax+ebp*1],0x38
  409aa3:	sti    
  409aa4:	or     esp,edi
  409aa6:	retf   
  409aa7:	scas   eax,DWORD PTR es:[edi]
  409aa8:	sub    BYTE PTR [esp+ebp*8-0x6d],0xc5
  409aad:	and    eax,0xe4777ed0
  409ab2:	dec    ecx
  409ab3:	cld    
  409ab4:	jmp    0x409ad1
  409ab6:	mov    eax,ds:0x84d3a9f4
  409abb:	xor    edx,DWORD PTR [edx-0x260b6b7]
  409ac1:	push   eax
  409ac2:	pop    ds
  409ac3:	adc    esi,DWORD PTR [ebx-0x50494334]
  409ac9:	test   bl,0xdd
  409acc:	xchg   ebx,eax
  409acd:	mov    al,ds:0xfd13953c
  409ad2:	inc    esp
  409ad3:	mov    esp,0x689f4cf
  409ad8:	mov    ecx,0xc6c56ba5
  409add:	out    dx,eax
  409ade:	psubusb mm6,QWORD PTR [ebx+0x35]
  409ae2:	and    ecx,DWORD PTR [edx+0x52]
  409ae5:	clc    
  409ae6:	mov    al,ds:0x9f7b2627
  409aeb:	xor    al,0x3
  409aed:	xor    BYTE PTR [edi-0x42dcd24],bh
  409af3:	mov    cl,0xca
  409af5:	in     eax,dx
  409af6:	aaa    
  409af7:	pop    ss
  409af8:	imul   eax,ecx,0x59
  409afb:	in     al,0xf2
  409afd:	mov    al,ds:0xae69c689
  409b02:	mov    edx,0xb841b5eb
  409b07:	fnstsw WORD PTR [eax+0x2945b110]
  409b0d:	push   ds
  409b0e:	out    0xf1,eax
  409b10:	mov    ch,0x7
  409b12:	push   eax
  409b13:	jle    0x409b92
  409b15:	sbb    eax,0x58c1ff2a
  409b1a:	adc    DWORD PTR [eax],edx
  409b1c:	clc    
  409b1d:	stos   DWORD PTR es:[edi],eax
  409b1e:	mov    esi,0x93aaf81f
  409b23:	ds dec ebx
  409b25:	lods   eax,DWORD PTR ds:[esi]
  409b26:	mov    al,0x5
  409b28:	fstp   TBYTE PTR [ecx]
  409b2a:	pop    ds
  409b2b:	pusha  
  409b2c:	sub    BYTE PTR [edx],dl
  409b2e:	dec    esi
  409b2f:	inc    ebx
  409b30:	jmp    0x6f78e9c1
  409b35:	test   eax,0x529168ca
  409b3a:	(bad)  
  409b3b:	rol    BYTE PTR ds:0xbb9b4281,1
  409b41:	add    ebp,DWORD PTR [edx+eiz*8]
  409b44:	call   0x5bf7bcd1
  409b49:	mov    ebx,0xd80a4c40
  409b4e:	rol    DWORD PTR [eax+0x66],cl
  409b51:	mov    al,0xa
  409b53:	adc    al,0xc8
  409b55:	cld    
  409b56:	adc    ecx,esi
  409b58:	and    esp,DWORD PTR [edx-0x34]
  409b5b:	popf   
  409b5c:	sbb    ah,BYTE PTR [ebx+edx*2]
  409b5f:	pop    ds
  409b60:	sub    eax,edx
  409b62:	cmp    esp,edi
  409b64:	mov    dl,0x12
  409b66:	or     edi,esi
  409b68:	mov    al,BYTE PTR [esi]
  409b6a:	cmp    BYTE PTR [edi+edx*8],cl
  409b6d:	mov    esp,0xc9249e0d
  409b72:	xchg   esi,eax
  409b73:	out    0xa,al
  409b75:	pop    edi
  409b76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b77:	rcr    BYTE PTR [edi+0x4294c6d],cl
  409b7d:	jg     0x409bb1
  409b7f:	outs   dx,BYTE PTR ds:[esi]
  409b80:	repnz mov al,ds:0x1139679
  409b86:	sahf   
  409b87:	pop    ss
  409b88:	pop    ecx
  409b89:	xor    DWORD PTR [edx],esi
  409b8b:	test   eax,0x46da7aa2
  409b90:	mov    ebx,0x6bec6351
  409b95:	cmp    dh,BYTE PTR [ecx]
  409b97:	sub    dh,cl
  409b99:	arpl   WORD PTR es:[eax+0x335abb77],bp
  409ba0:	xchg   edx,eax
  409ba1:	dec    esp
  409ba2:	scas   eax,DWORD PTR es:[edi]
  409ba3:	ins    BYTE PTR es:[edi],dx
  409ba4:	mov    ah,0x85
  409ba6:	mov    WORD PTR [edx+0x5ba7be01],fs
  409bac:	cmp    eax,0xf569fc2f
  409bb1:	imul   DWORD PTR [edi-0x13]
  409bb4:	imul   ecx,DWORD PTR [eax],0x76
  409bb7:	sahf   
  409bb8:	fst    QWORD PTR [ebp+0x2c]
  409bbb:	add    DWORD PTR ds:[edi+0x6d3808c0],ecx
  409bc2:	jbe    0x409c25
  409bc4:	dec    ebx
  409bc5:	jno    0x409c03
  409bc7:	or     BYTE PTR [esi+ebx*8-0x55],ch
  409bcb:	repnz cli 
  409bcd:	add    al,0x4f
  409bcf:	imul   ebp,DWORD PTR [edi-0x73],0xffffffec
  409bd3:	xlat   BYTE PTR ds:[ebx]
  409bd4:	mov    cl,0x7
  409bd6:	loope  0x409c35
  409bd8:	adc    bh,bh
  409bda:	and    al,0x34
  409bdc:	pushf  
  409bdd:	scas   eax,DWORD PTR es:[edi]
  409bde:	je     0x409c4f
  409be0:	out    dx,al
  409be1:	fild   DWORD PTR [eax+0x65c1dc90]
  409be7:	(bad)  
  409be8:	icebp  
  409be9:	test   BYTE PTR [ecx+0x40],cl
  409bec:	sub    ah,dl
  409bee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bef:	ins    DWORD PTR es:[edi],dx
  409bf0:	inc    edx
  409bf1:	add    ebx,DWORD PTR [ecx-0x4e7c0147]
  409bf7:	call   0x579fac30
  409bfc:	mov    BYTE PTR [edi-0x32],dh
  409bff:	xchg   esp,eax
  409c00:	adc    bh,dl
  409c02:	xor    DWORD PTR [edi],ebp
  409c04:	add    DWORD PTR ds:0xabdb2f83,edx
  409c0a:	adc    al,BYTE PTR [ecx+0x53082c0e]
  409c10:	test   al,0xdd
  409c12:	dec    edi
  409c13:	adc    DWORD PTR [ebp-0x9970136],ebx
  409c19:	dec    esp
  409c1a:	clc    
  409c1b:	(bad)  
  409c1d:	stc    
  409c1e:	inc    edx
  409c1f:	fucomip st,st(3)
  409c21:	or     dl,cl
  409c23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c24:	xchg   edx,eax
  409c25:	rol    BYTE PTR [ecx+0x7ac588e2],cl
  409c2b:	cli    
  409c2c:	push   0xffffffc5
  409c2e:	lock mov al,0x5c
  409c31:	jno    0x409c91
  409c33:	adc    edi,esi
  409c35:	jns    0x409c63
  409c37:	cdq    
  409c38:	jmp    0x371e:0x2b56e80c
  409c3f:	pop    ebx
  409c40:	lds    edi,FWORD PTR [ecx]
  409c42:	sbb    ecx,DWORD PTR [edi-0x7cb9d73e]
  409c48:	ins    BYTE PTR es:[edi],dx
  409c49:	pop    esp
  409c4a:	fcom   QWORD PTR [ebp+0x1ac3c349]
  409c50:	cdq    
  409c51:	add    BYTE PTR [esi+eax*2],0xc1
  409c55:	pop    esp
  409c56:	loop   0x409c3a
  409c58:	sub    esp,ebp
  409c5a:	jmp    0x8db5:0xbcea67f
  409c61:	or     al,BYTE PTR [edx+0x63]
  409c64:	push   eax
  409c65:	scas   al,BYTE PTR es:[edi]
  409c66:	popf   
  409c67:	mov    al,ds:0x26237dd5
  409c6c:	stos   BYTE PTR es:[edi],al
  409c6d:	push   edx
  409c6e:	imul   ecx,DWORD PTR [esi],0x11d26aca
  409c74:	xor    eax,DWORD PTR [edx]
  409c76:	push   esi
  409c77:	cld    
  409c78:	stc    
  409c79:	rcr    esp,0x90
  409c7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c7d:	in     eax,0xec
  409c7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c80:	push   esp
  409c81:	popaw  
  409c83:	mov    ah,0xe2
  409c85:	or     DWORD PTR [eax-0x64],esi
  409c88:	and    dh,BYTE PTR [ebx]
  409c8a:	out    0xe7,al
  409c8c:	sub    dh,BYTE PTR [edx+edi*2-0x4c]
  409c90:	mov    ecx,0x3ae79de1
  409c95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c96:	add    dh,ah
  409c98:	push   cs
  409c99:	rcl    bl,0x9f
  409c9c:	int    0x4
  409c9e:	sbb    eax,0x666b75ce
  409ca3:	push   ebx
  409ca4:	jbe    0x409d0c
  409ca6:	push   edx
  409ca7:	hlt    
  409ca8:	in     eax,0x9b
  409caa:	ret    
  409cab:	retf   
  409cac:	gs adc eax,0x187874ab
  409cb2:	retf   0x943e
  409cb5:	mov    al,ds:0x41c32186
  409cba:	imul   ebx,esi,0x5c98ed73
  409cc0:	mov    ?,ecx
  409cc2:	pop    eax
  409cc3:	mov    eax,ds:0xedb09bea
  409cc8:	call   0xa593:0xac17a6ad
  409ccf:	inc    edi
  409cd0:	jl     0x409c7d
  409cd2:	pop    eax
  409cd3:	dec    edi
  409cd4:	stos   BYTE PTR es:[edi],al
  409cd5:	mov    dl,cl
  409cd7:	pushf  
  409cd8:	retf   
  409cd9:	xor    al,0x31
  409cdb:	nop
  409cdc:	fisttp QWORD PTR [eax+ebp*2]
  409cdf:	inc    ebp
  409ce0:	sahf   
  409ce1:	cmp    ah,dh
  409ce3:	sbb    BYTE PTR [eax+0x623f6378],bh
  409ce9:	sti    
  409cea:	mov    ecx,0xf5ce1c8a
  409cef:	lods   eax,DWORD PTR ds:[esi]
  409cf0:	and    DWORD PTR [ebx],0x1f
  409cf3:	clc    
  409cf4:	es jecxz 0x409d57
  409cf7:	mov    ebx,0xd778951b
  409cfc:	cmp    eax,0x9bd53701
  409d01:	sbb    dh,BYTE PTR [edi+0x77]
  409d04:	jmp    0x409d76
  409d06:	int    0xb3
  409d08:	arpl   ax,di
  409d0a:	mov    eax,0x34051200
  409d0f:	retf   0x4203
  409d12:	dec    esp
  409d13:	jbe    0x409d43
  409d15:	mov    ch,0x8e
  409d17:	xor    ebx,DWORD PTR ds:0xb7c511ca
  409d1d:	pop    esp
  409d1e:	jo     0x409d81
  409d20:	cld    
  409d21:	mov    esp,DWORD PTR [eax+0x31]
  409d24:	dec    ebx
  409d25:	jnp    0x409d4f
  409d27:	popf   
  409d28:	or     ah,BYTE PTR [edx+eax*8]
  409d2b:	xchg   edx,eax
  409d2c:	xchg   DWORD PTR [eax-0x3451f372],eax
  409d32:	and    edx,DWORD PTR [edi+0x52f087aa]
  409d38:	aam    0x8c
  409d3a:	dec    edi
  409d3b:	loope  0x409d2d
  409d3d:	add    DWORD PTR [esi+edx*8],ebx
  409d40:	jo     0x409d75
  409d42:	retf   0x3677
  409d45:	jl     0x409d2b
  409d47:	popf   
  409d48:	and    al,0xf3
  409d4a:	mov    al,0xee
  409d4c:	pop    eax
  409d4d:	xor    eax,0x662be085
  409d52:	imul   ebx,DWORD PTR [edx+0x1672015c],0x7ff7e1bb
  409d5c:	add    dh,ah
  409d5e:	cdq    
  409d5f:	xchg   ebp,eax
  409d60:	jmp    0x409d8c
  409d62:	push   ebp
  409d63:	mov    esp,0x54e8bfba
  409d68:	sbb    al,0x45
  409d6a:	sub    eax,0xb979b07a
  409d6f:	dec    eax
  409d70:	sub    eax,0x310d3b66
  409d75:	jmp    0x546329eb
  409d7a:	mov    ds:0xe785ed7f,al
  409d7f:	xchg   esp,eax
  409d80:	fcomp  DWORD PTR [esi]
  409d82:	retf   0x56b8
  409d85:	xor    eax,DWORD PTR [eax-0x5c]
  409d88:	sub    BYTE PTR ds:0xf652494e,dh
  409d8e:	(bad)  
  409d8f:	and    eax,0x6fd3cbbb
  409d94:	add    dl,BYTE PTR [ebp+0x7be4a0ac]
  409d9a:	jl     0x409e0c
  409d9c:	rol    BYTE PTR [ebp+0x1791e1e5],0xaf
  409da3:	mov    BYTE PTR [ebx+0x6],bh
  409da6:	sbb    ebx,DWORD PTR [esp+ecx*1]
  409da9:	lods   al,BYTE PTR ds:[esi]
  409daa:	xor    BYTE PTR [edx+0x7d7591f9],ch
  409db0:	adc    al,0xbb
  409db2:	sub    eax,0x19900765
  409db7:	shl    DWORD PTR [esi],1
  409db9:	pop    ds
  409dba:	cs or  al,0x0
  409dbd:	stos   DWORD PTR es:[edi],eax
  409dbe:	loope  0x409dd9
  409dc0:	ror    DWORD PTR [ecx-0x5c],cl
  409dc3:	pop    esi
  409dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dc5:	xor    eax,DWORD PTR [edx-0xf]
  409dc8:	push   edi
  409dc9:	sub    DWORD PTR [edi-0x5964922a],ebx
  409dcf:	cmp    DWORD PTR [eax+0x20],0x24790d6d
  409dd6:	mov    bl,0xd8
  409dd8:	std    
  409dd9:	sub    eax,0x4fec12e9
  409dde:	daa    
  409ddf:	popa   
  409de0:	sbb    bh,BYTE PTR es:[edx]
  409de3:	loope  0x409d81
  409de5:	xchg   BYTE PTR [ecx+ecx*8-0x7e14d560],bh
  409dec:	aam    0x4
  409dee:	scas   al,BYTE PTR es:[edi]
  409def:	(bad)  
  409df0:	fbstp  TBYTE PTR [ebp+0x9148f5c]
  409df6:	or     eax,0x499708a3
  409dfb:	mov    al,0xbb
  409dfd:	mov    al,0x55
  409dff:	or     ebx,ebx
  409e01:	aad    0x3c
  409e03:	push   0x47
  409e05:	mov    ch,0xd2
  409e07:	push   ecx
  409e08:	jb     0x409dae
  409e0a:	jle    0x409e86
  409e0c:	pusha  
  409e0d:	push   edi
  409e0e:	lds    esp,FWORD PTR [bx]
  409e11:	mov    edi,0xc73a89cf
  409e16:	push   ebp
  409e17:	jnp    0x409e31
  409e19:	cmp    ch,BYTE PTR [esp+eax*2+0x1a]
  409e1d:	mov    al,ds:0xdbbefd11
  409e22:	cdq    
  409e23:	fld    QWORD PTR [eax-0x7ac3d3e8]
  409e29:	xchg   edx,eax
  409e2a:	(bad)  [eax+0x522e5e11]
  409e30:	call   0xf500:0x8bd39d7f
  409e37:	add    al,0xe5
  409e39:	xor    al,0xeb
  409e3b:	jp     0x409e4c
  409e3d:	inc    ebx
  409e3e:	add    BYTE PTR [ecx],ch
  409e40:	pop    edi
  409e41:	(bad)  
  409e42:	mov    edx,0x9b8cd459
  409e47:	push   0xffffffa5
  409e49:	pop    ecx
  409e4a:	push   ebx
  409e4b:	bound  eax,QWORD PTR [eax*2+0x43eb4f7]
  409e52:	ins    BYTE PTR es:[edi],dx
  409e53:	adc    DWORD PTR [ebp+0x4cc48965],ecx
  409e59:	fs aad 0x3f
  409e5c:	jns    0x409e53
  409e5e:	fisttp DWORD PTR [edi+0xb8f1dea]
  409e64:	stos   BYTE PTR es:[edi],al
  409e65:	push   ss
  409e66:	xor    BYTE PTR [eax-0x7],bh
  409e69:	push   cs
  409e6a:	stos   DWORD PTR es:[edi],eax
  409e6b:	aad    0x21
  409e6d:	pusha  
  409e6e:	out    dx,eax
  409e6f:	mov    ecx,0x8687ba71
  409e74:	daa    
  409e75:	cli    
  409e76:	lahf   
  409e77:	stos   BYTE PTR es:[edi],al
  409e78:	jp     0x409e65
  409e7a:	imul   edi,DWORD PTR [eax+edi*4+0x67],0x2cf6de00
  409e82:	cmp    ch,BYTE PTR [ebx+0x4e6b747e]
  409e88:	add    ch,BYTE PTR [esi]
  409e8a:	popa   
  409e8b:	mov    edx,0xa69bb508
  409e90:	scas   eax,DWORD PTR es:[edi]
  409e91:	and    DWORD PTR [edx+0x39387d96],ecx
  409e97:	add    bl,BYTE PTR [eax-0x4f]
  409e9a:	mov    ch,0xda
  409e9c:	inc    edi
  409e9d:	lods   al,BYTE PTR ds:[esi]
  409e9e:	pop    esi
  409e9f:	inc    ebp
  409ea0:	lock retf 0xf9b6
  409ea4:	lods   al,BYTE PTR ds:[esi]
  409ea5:	mov    dh,0x72
  409ea7:	xchg   edx,eax
  409ea8:	xor    ah,ah
  409eaa:	ja     0x409ecc
  409eac:	cli    
  409ead:	jg     0x409e81
  409eaf:	mov    al,0x57
  409eb1:	or     esi,esp
  409eb3:	cmp    DWORD PTR [eax],esp
  409eb5:	fistp  DWORD PTR [ebx]
  409eb7:	jmp    DWORD PTR [edi]
  409eb9:	rol    BYTE PTR [ebx],cl
  409ebb:	(bad)  
  409ebc:	ficom  DWORD PTR [ebx+0x50]
  409ebf:	scas   eax,DWORD PTR es:[edi]
  409ec0:	or     DWORD PTR [ecx],ebp
  409ec2:	and    ecx,DWORD PTR [ebp-0x1719f4cb]
  409ec8:	jo     0x409e89
  409eca:	iret   
  409ecb:	in     eax,0xbb
  409ecd:	rol    esi,cl
  409ecf:	xor    BYTE PTR [esi],dh
  409ed1:	in     eax,0x68
  409ed3:	inc    edi
  409ed4:	sub    DWORD PTR [edx-0x5c],eax
  409ed7:	ret    
  409ed8:	std    
  409ed9:	inc    ebp
  409eda:	div    BYTE PTR [ebx]
  409edc:	adc    eax,0xc62e6ec5
  409ee1:	fcmovu st,st(6)
  409ee3:	sub    ah,0x6
  409ee6:	out    0xeb,al
  409ee8:	sub    ecx,DWORD PTR [ebx+0x150b17bb]
  409eee:	mov    al,0xba
  409ef0:	fistp  QWORD PTR [eax+edx*8-0x25]
  409ef4:	stos   BYTE PTR es:[edi],al
  409ef5:	sub    bh,BYTE PTR [edi]
  409ef7:	xchg   esi,esp
  409ef9:	sbb    DWORD PTR [esi-0x40],edi
  409efc:	jo     0x409f31
  409efe:	push   eax
  409eff:	jmp    0x4224:0x26cb0cc5
  409f06:	icebp  
  409f07:	ret    
  409f08:	outs   dx,BYTE PTR ds:[esi]
  409f09:	push   ebx
  409f0a:	in     al,dx
  409f0b:	xchg   DWORD PTR [eax],eax
  409f0d:	cmp    ah,BYTE PTR [eax-0x748181dd]
  409f13:	stc    
  409f14:	push   edi
  409f15:	jae    0x409f7d
  409f17:	in     al,dx
  409f18:	dec    ebx
  409f19:	mov    BYTE PTR ds:0xc50f663a,bh
  409f1f:	pop    edx
  409f20:	sahf   
  409f21:	mov    dl,0x4
  409f23:	lea    edi,[ebp+0x6f83f3ea]
  409f29:	sub    DWORD PTR [esi],eax
  409f2b:	mov    ebx,0x93212c7a
  409f30:	pushf  
  409f31:	mov    edi,0x5bb8aa54
  409f36:	(bad)  
  409f37:	adc    BYTE PTR [esi+0x55],bh
  409f3a:	or     al,0x1c
  409f3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f3d:	pop    ecx
  409f3e:	lea    ecx,[esi]
  409f40:	jno    0x409ece
  409f42:	popf   
  409f43:	fbstp  TBYTE PTR [esi-0x41]
  409f46:	pop    edi
  409f47:	pop    edi
  409f48:	pop    es
  409f49:	outs   dx,DWORD PTR ds:[esi]
  409f4a:	jo     0x409ede
  409f4c:	ins    DWORD PTR es:[edi],dx
  409f4d:	pop    edi
  409f4e:	mov    al,ds:0x5b8e107f
  409f53:	mov    ds:0xfdf38627,al
  409f58:	neg    DWORD PTR [ebx+edi*4-0x1c]
  409f5c:	sub    eax,0x2f484c7d
  409f61:	xlat   BYTE PTR ds:[ebx]
  409f62:	lahf   
  409f63:	ins    BYTE PTR es:[edi],dx
  409f64:	popf   
  409f65:	pop    edi
  409f66:	cmp    DWORD PTR [ebx],edi
  409f68:	dec    esp
  409f69:	test   eax,0xf2da76c4
  409f6e:	int    0xe0
  409f70:	add    al,0x4b
  409f72:	cs cdq 
  409f74:	iret   
  409f75:	add    eax,0x5f99d00e
  409f7a:	push   esi
  409f7b:	shl    ah,0xa4
  409f7e:	mov    ch,cl
  409f80:	cli    
  409f81:	mov    ds:0x44578fd1,eax
  409f86:	push   cs
  409f87:	mov    bh,0x54
  409f89:	inc    eax
  409f8a:	push   ds
  409f8b:	repnz hlt 
  409f8d:	cli    
  409f8e:	sub    esi,DWORD PTR [edi+0x12]
  409f91:	in     al,0xe0
  409f93:	pop    ecx
  409f94:	push   ss
  409f95:	cmp    BYTE PTR [eax+ebp*2-0x371007e3],0x21
  409f9d:	adc    DWORD PTR [eax],ebx
  409f9f:	pop    edi
  409fa1:	clc    
  409fa2:	cmc    
  409fa3:	hlt    
  409fa4:	adc    BYTE PTR [ebp+0x78],al
  409fa7:	ret    0x1c40
  409faa:	lea    ebx,ds:[ecx+edx*4]
  409fae:	dec    edi
  409faf:	or     BYTE PTR [eax+0x4],ch
  409fb2:	jp     0x409f3b
  409fb4:	stos   DWORD PTR es:[edi],eax
  409fb5:	inc    ebp
  409fb6:	leave  
  409fb7:	adc    al,BYTE PTR ds:0x2352d229
  409fbd:	das    
  409fbe:	mov    dl,0xf3
  409fc0:	pusha  
  409fc1:	call   0x2cf5:0x49304ad5
  409fc8:	(bad)  
  409fc9:	in     eax,0x26
  409fcb:	aad    0xad
  409fcd:	inc    BYTE PTR gs:[edi-0x4dc6e91e]
  409fd4:	and    ebx,DWORD PTR [edi-0x71f4237c]
  409fda:	or     ch,ah
  409fdc:	imul   ebx,DWORD PTR [ebx+0x48],0x5f5a2379
  409fe3:	jne    0x409fe3
  409fe5:	(bad)  
  409fe6:	pop    ebx
  409fe7:	pusha  
  409fe8:	outs   dx,BYTE PTR ds:[esi]
  409fe9:	add    DWORD PTR [edi],esi
  409feb:	aad    0x68
  409fed:	pop    ebp
  409fee:	mov    ds:0xe4319706,al
  409ff3:	int3   
  409ff4:	mov    eax,0x44686d2c
  409ff9:	and    ebx,eax
  409ffb:	xchg   ebx,eax
  409ffc:	lods   al,BYTE PTR ds:[esi]
  409ffd:	rol    ecx,0x71
  40a000:	xlat   BYTE PTR ds:[ebx]
  40a001:	sbb    DWORD PTR [ecx+0x5c],0xffffffec
  40a005:	mov    ?,edx
  40a007:	pop    ss
  40a008:	rcl    DWORD PTR [eax+0x218364ef],cl
  40a00e:	inc    esi
  40a00f:	jmp    0x1dc73546
  40a014:	leave  
  40a015:	sub    edx,DWORD PTR [eax]
  40a017:	(bad)  
  40a019:	sbb    eax,0x6bdeba75
  40a01e:	pop    ss
  40a01f:	mov    edx,0x471b5760
  40a024:	xchg   edx,eax
  40a025:	xchg   ebx,eax
  40a026:	pop    ds
  40a027:	sar    bl,1
  40a029:	and    al,0xa7
  40a02b:	inc    ebp
  40a02c:	sqrtps xmm3,XMMWORD PTR [esi]
  40a02f:	ds jno 0x40a0aa
  40a032:	mov    dl,dl
  40a034:	dec    edi
  40a035:	dec    esi
  40a036:	int    0xba
  40a038:	mov    ch,0x4d
  40a03a:	or     BYTE PTR [edx+ebp*2+0x5bf71d4],cl
  40a041:	(bad)  
  40a042:	in     al,dx
  40a043:	faddp  st(1),st
  40a045:	cmp    DWORD PTR [eax],edi
  40a047:	jbe    0x40a04a
  40a049:	test   BYTE PTR [ecx],dl
  40a04b:	test   DWORD PTR [ecx+0x1fef112f],ebp
  40a051:	jmp    0x40a0c0
  40a053:	dec    ecx
  40a054:	addr16 push 0x1469f6a3
  40a05a:	call   0xb3ef760d
  40a05f:	mov    edx,0xf5016db5
  40a064:	mov    edx,cr0
  40a067:	sub    eax,0xe5b87165
  40a06c:	jno    0x409ff9
  40a06e:	pop    ds
  40a06f:	ficom  WORD PTR [ebx]
  40a071:	mov    bl,0x1c
  40a073:	add    eax,DWORD PTR [edi]
  40a075:	mov    bh,0x6f
  40a077:	xchg   edx,eax
  40a078:	pop    esi
  40a079:	jle    0x40a045
  40a07b:	sub    al,BYTE PTR [edi-0x476aef8a]
  40a081:	mov    gs,WORD PTR [eax+0xc]
  40a084:	mov    edi,0xbf945332
  40a089:	lock leave 
  40a08b:	sbb    BYTE PTR [eax],al
  40a08d:	pop    ebp
  40a08e:	js     0x40a051
  40a090:	(bad)  
  40a092:	mov    ebx,cs
  40a094:	cld    
  40a095:	mov    edx,DWORD PTR [ecx+eiz*1]
  40a098:	cld    
  40a099:	xor    eax,0x49997e72
  40a09e:	call   0x8327:0xd8e1218e
  40a0a5:	mov    esp,0xb0ce2bb4
  40a0aa:	fwait
  40a0ab:	int3   
  40a0ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0ad:	test   DWORD PTR [esi-0x2f],0x1b4524a9
  40a0b4:	mov    edx,0x8034fbae
  40a0b9:	mov    ecx,0xa2fb44d0
  40a0be:	(bad)  
  40a0c0:	data16 fdivr QWORD PTR [edi]
  40a0c3:	push   ss
  40a0c4:	test   DWORD PTR [ecx-0x6b],esp
  40a0c7:	fs gs pop ebp
  40a0ca:	jg     0x40a0b4
  40a0cc:	cmc    
  40a0cd:	push   ss
  40a0ce:	cmp    DWORD PTR [eax+0x63],esi
  40a0d1:	ret    
  40a0d2:	out    dx,eax
  40a0d3:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0d5:	shr    BYTE PTR [eax],cl
  40a0d7:	add    bl,BYTE PTR [ecx+0x3d]
  40a0da:	stc    
  40a0db:	das    
  40a0dc:	add    eax,0x443abeae
  40a0e1:	in     al,0xb
  40a0e3:	mov    ecx,?
  40a0e5:	xor    ah,BYTE PTR [eax+0x9]
  40a0e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0ea:	push   ecx
  40a0eb:	add    BYTE PTR [ebp-0x62a1b89e],bl
  40a0f1:	jne    0x40a0a9
  40a0f3:	mov    ah,0xec
  40a0f5:	aam    0xc6
  40a0f7:	dec    ecx
  40a0f8:	or     DWORD PTR [edi+0x68509890],edi
  40a0fe:	data16 (bad) 
  40a100:	std    
  40a101:	inc    esp
  40a102:	retf   
  40a103:	and    eax,DWORD PTR [esi]
  40a105:	into   
  40a106:	push   ebp
  40a107:	or     eax,0x54b07581
  40a10c:	cmp    cl,BYTE PTR ds:0x3478b43c
  40a112:	pusha  
  40a113:	add    al,0xe5
  40a115:	xchg   esi,eax
  40a116:	sbb    edx,DWORD PTR [esi]
  40a118:	daa    
  40a119:	dec    esi
  40a11a:	int3   
  40a11b:	fs jne 0x40a0e0
  40a11e:	push   eax
  40a11f:	dec    ecx
  40a120:	push   eax
  40a121:	xchg   ebx,eax
  40a122:	push   edi
  40a123:	cmp    BYTE PTR [edx],bh
  40a125:	cdq    
  40a126:	mov    edx,ebx
  40a128:	pop    ss
  40a129:	mov    cl,0xda
  40a12b:	mov    dh,0x6f
  40a12d:	icebp  
  40a12e:	sbb    BYTE PTR [ebp+0x4b],al
  40a131:	pop    ss
  40a132:	or     eax,esp
  40a134:	jb     0x40a13a
  40a136:	and    BYTE PTR [ebx+eax*2],ah
  40a139:	and    DWORD PTR ds:0xe086dea7,0xe07cfbc2
  40a143:	mov    ch,0x8e
  40a145:	ret    0xdf3c
  40a148:	adc    al,0x6d
  40a14a:	pushf  
  40a14b:	xchg   edi,eax
  40a14c:	sbb    ch,BYTE PTR [esi]
  40a14e:	jge    0x40a134
  40a150:	test   DWORD PTR [ebx-0x33],esi
  40a153:	dec    edx
  40a154:	(bad)  
  40a155:	fdiv   st(6),st
  40a157:	(bad)  
  40a158:	ds ins DWORD PTR es:[edi],dx
  40a15a:	sbb    al,0xa
  40a15c:	sbb    eax,0x96e61391
  40a161:	cwde   
  40a162:	xchg   esp,eax
  40a163:	or     esi,edx
  40a165:	push   ss
  40a166:	fmul   DWORD PTR [esi-0x35]
  40a169:	mov    WORD PTR [ebx+0x30617a0e],es
  40a16f:	push   ecx
  40a170:	mov    edx,0xb768d05
  40a175:	sub    BYTE PTR [bp+di+0x46],ch
  40a179:	jo     0x40a13e
  40a17b:	xor    eax,0xe102677b
  40a180:	outs   dx,DWORD PTR ds:[esi]
  40a181:	and    DWORD PTR [edi+0x36],0xab1e891f
  40a188:	add    eax,0xa09d6056
  40a18d:	or     eax,0xa4417bff
  40a192:	ds sbb al,al
  40a195:	add    dh,ah
  40a197:	jl     0x40a13b
  40a199:	in     eax,0x50
  40a19b:	sub    BYTE PTR [edi+0x2d9a1626],cl
  40a1a1:	fsub   DWORD PTR [ecx+0x2c132546]
  40a1a7:	aaa    
  40a1a8:	ins    BYTE PTR es:[edi],dx
  40a1a9:	jle    0x40a1b1
  40a1ab:	xchg   edx,eax
  40a1ac:	arpl   WORD PTR [ebx-0xb],bp
  40a1af:	pusha  
  40a1b0:	in     eax,0x79
  40a1b2:	xchg   BYTE PTR [esi-0x728e0c09],dl
  40a1b8:	arpl   WORD PTR [esp+ebp*8+0x45],sp
  40a1bc:	mov    al,0x2f
  40a1be:	imul   edi,DWORD PTR cs:[ebx-0x4a53ad56],0x891b3579
  40a1c9:	jp     0x40a1eb
  40a1cb:	loop   0x40a195
  40a1cd:	pop    ebx
  40a1ce:	scas   eax,DWORD PTR es:[edi]
  40a1cf:	and    eax,0x1eb0ce94
  40a1d4:	mov    WORD PTR [eax-0x3e],gs
  40a1d7:	jnp    0x40a1e8
  40a1d9:	and    al,0xb6
  40a1db:	jle    0x40a228
  40a1dd:	test   al,0x81
  40a1df:	test   ah,bl
  40a1e1:	mov    esp,0x5afefcb9
  40a1e6:	xchg   BYTE PTR [ecx+0x4c],ah
  40a1e9:	es inc edi
  40a1eb:	push   ss
  40a1ec:	adc    cl,BYTE PTR [eax]
  40a1ee:	jo     0x40a231
  40a1f0:	or     dl,ah
  40a1f2:	dec    ecx
  40a1f3:	push   ebp
  40a1f4:	aam    0xf1
  40a1f6:	xchg   esi,eax
  40a1f7:	daa    
  40a1f8:	inc    eax
  40a1f9:	add    ecx,esi
  40a1fb:	cld    
  40a1fc:	aas    
  40a1fd:	sbb    ah,BYTE PTR ds:0x2bd13524
  40a203:	sbb    ch,BYTE PTR ds:0xe996805a
  40a209:	iret   
  40a20a:	das    
  40a20b:	es loop 0x40a22d
  40a20e:	rcl    ebx,0xc8
  40a211:	mov    cl,0x50
  40a213:	sub    dl,BYTE PTR [edi+edx*8]
  40a216:	mov    WORD PTR [edi+esi*1],?
  40a219:	jae    0x40a279
  40a21b:	call   0xd5edb2c0
  40a220:	arpl   bp,cx
  40a222:	sub    DWORD PTR [edx-0x76],ebx
  40a225:	push   esi
  40a226:	add    DWORD PTR es:[edx],0xa60ac30c
  40a22d:	loopne 0x40a1eb
  40a22f:	and    eax,DWORD PTR [ebp+0x43]
  40a232:	sbb    DWORD PTR [eax],ebp
  40a234:	mov    ?,WORD PTR [edx+ebp*1+0x12]
  40a238:	inc    edi
  40a239:	repz mov ch,dl
  40a23c:	lock jns 0x40a223
  40a23f:	arpl   WORD PTR [edi],bx
  40a241:	inc    ebx
  40a242:	add    BYTE PTR [eax+0x50],cl
  40a245:	lahf   
  40a246:	mov    dh,0x66
  40a248:	xor    DWORD PTR [esi],edi
  40a24a:	nop
  40a24b:	out    dx,eax
  40a24c:	xchg   edx,eax
  40a24d:	shl    DWORD PTR [ebx-0x3f],1
  40a250:	cwde   
  40a251:	push   ss
  40a252:	pushf  
  40a253:	push   edi
  40a254:	inc    esi
  40a255:	les    eax,FWORD PTR ds:[ecx-0x75]
  40a259:	jle    0x40a214
  40a25b:	mov    ds:0xd8444644,eax
  40a260:	iret   
  40a261:	pop    eax
  40a262:	xor    ecx,DWORD PTR [ecx]
  40a264:	data16 in al,0x9d
  40a267:	sti    
  40a268:	retf   0x84d6
  40a26b:	cmc    
  40a26c:	and    BYTE PTR [eax],al
  40a26e:	stos   DWORD PTR es:[edi],eax
  40a26f:	jbe    0x40a216
  40a271:	sti    
  40a272:	loop   0x40a2e3
  40a274:	adc    DWORD PTR [eax-0x798a6c6c],ebp
  40a27a:	jnp    0x40a284
  40a27c:	lods   eax,DWORD PTR ds:[esi]
  40a27d:	ret    0xb01c
  40a280:	mov    bh,0xaf
  40a282:	sahf   
  40a283:	push   0xffffffde
  40a285:	cmp    bl,BYTE PTR [edi-0xd3149e5]
  40a28b:	cmp    ebx,edx
  40a28d:	xor    bh,BYTE PTR [edx-0x78]
  40a290:	retf   0x82d3
  40a293:	mov    bh,0xfd
  40a295:	add    eax,0x5a775ba5
  40a29a:	cmp    al,0x5b
  40a29c:	inc    ebp
  40a29d:	sub    ebx,eax
  40a29f:	ins    DWORD PTR es:[edi],dx
  40a2a0:	into   
  40a2a1:	xchg   DWORD PTR [eax],edx
  40a2a3:	stos   BYTE PTR es:[edi],al
  40a2a4:	jmp    0x818ca9d
  40a2a9:	shl    cl,0xd2
  40a2ac:	cdq    
  40a2ad:	pop    esp
  40a2ae:	call   0x74118f02
  40a2b3:	(bad)  
  40a2b4:	aas    
  40a2b5:	pusha  
  40a2b6:	retf   0x9a6c
  40a2b9:	cli    
  40a2ba:	dec    esi
  40a2bb:	xchg   esi,eax
  40a2bc:	in     al,0x6
  40a2be:	mov    ecx,0xc11472ec
  40a2c3:	cmp    ch,cl
  40a2c5:	xor    al,bl
  40a2c7:	and    ch,BYTE PTR [eax]
  40a2c9:	mov    dl,0xfe
  40a2cb:	aas    
  40a2cc:	push   ss
  40a2cd:	push   esp
  40a2ce:	and    al,0x45
  40a2d0:	or     ch,BYTE PTR [edi]
  40a2d2:	cmp    dh,BYTE PTR [ecx-0x14ed9fcb]
  40a2d8:	jp     0x40a2ff
  40a2da:	jb     0x40a35b
  40a2dc:	push   eax
  40a2dd:	dec    ebx
  40a2de:	and    eax,0x8f0c2582
  40a2e3:	cmp    BYTE PTR [eax],dh
  40a2e5:	cmp    eax,0x1168f042
  40a2ea:	iret   
  40a2eb:	sti    
  40a2ec:	lahf   
  40a2ed:	lds    edi,FWORD PTR [eax+0x4d]
  40a2f0:	sbb    edi,eax
  40a2f2:	xor    BYTE PTR [edi+0x42],0xd0
  40a2f6:	xchg   ebp,eax
  40a2f7:	nop
  40a2f8:	or     bh,bl
  40a2fa:	arpl   WORD PTR [eax],dx
  40a2fc:	push   esi
  40a2fd:	push   0x17
  40a2ff:	jae    0x40a2b6
  40a301:	inc    ebx
  40a302:	repz adc bl,0xf1
  40a306:	cld    
  40a307:	sbb    edi,0xffffff89
  40a30a:	lods   eax,DWORD PTR ds:[esi]
  40a30b:	addr16 pusha 
  40a30d:	dec    ebp
  40a30e:	nop
  40a30f:	xor    esp,DWORD PTR [ecx-0x4f]
  40a312:	cld    
  40a313:	mov    dh,0x48
  40a315:	js     0x40a29f
  40a317:	push   eax
  40a318:	fild   DWORD PTR [ecx]
  40a31a:	adc    al,0xc5
  40a31c:	xchg   esi,eax
  40a31d:	iret   
  40a31e:	push   ecx
  40a31f:	push   eax
  40a320:	and    BYTE PTR [ecx-0x5f],0x89
  40a324:	cmp    al,0xbd
  40a326:	xchg   edx,eax
  40a327:	rcl    dh,0xd
  40a32a:	sbb    eax,DWORD PTR [ecx+0xa]
  40a32d:	iret   
  40a32e:	js     0x40a2dd
  40a330:	aad    0x4b
  40a332:	or     cl,bl
  40a334:	mov    al,0xde
  40a336:	push   es
  40a337:	ins    DWORD PTR es:[edi],dx
  40a338:	(bad)  
  40a339:	inc    edi
  40a33a:	rol    ch,cl
  40a33c:	push   ecx
  40a33d:	mov    DWORD PTR [ecx+0x6bd7be42],ebp
  40a343:	data16 mov ah,0xc7
  40a346:	adc    ebx,ebx
  40a348:	mov    edx,0x62f99b31
  40a34d:	push   edi
  40a34e:	stos   DWORD PTR es:[edi],eax
  40a34f:	jmp    0xc8a6:0x432f7a06
  40a356:	sub    BYTE PTR [esi],0x49
  40a359:	mov    al,ds:0xc64d0ff0
  40a35e:	mov    WORD PTR [esi-0x66],ds
  40a361:	retf   
  40a362:	cmp    bh,BYTE PTR [edx]
  40a364:	xchg   ebx,eax
  40a365:	dec    edi
  40a366:	repz aad 0x85
  40a369:	cli    
  40a36a:	lds    esi,FWORD PTR [esi-0x2b]
  40a36d:	loop   0x40a373
  40a36f:	bswap  ebx
  40a371:	adc    al,BYTE PTR [ebx+0x40]
  40a374:	mov    eax,0x6e2c58d1
  40a379:	xchg   esi,eax
  40a37a:	mov    eax,ds:0x4f692cec
  40a37f:	push   edx
  40a380:	push   es
  40a381:	or     DWORD PTR [ebx],eax
  40a383:	mov    esi,0xc900b256
  40a388:	sub    bl,ch
  40a38a:	cwde   
  40a38b:	das    
  40a38c:	dec    edx
  40a38d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a38e:	dec    ebp
  40a38f:	aad    0xf
  40a391:	retf   
  40a392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a393:	ins    DWORD PTR es:[edi],dx
  40a394:	js     0x40a36b
  40a396:	and    edx,DWORD PTR [edi+0x39]
  40a399:	pusha  
  40a39a:	pop    ebx
  40a39b:	lds    ebx,FWORD PTR [esi-0x3e]
  40a39e:	adc    eax,0x7770bd9a
  40a3a3:	aas    
  40a3a4:	lock hlt 
  40a3a6:	mov    ds:0xb80dd47f,al
  40a3ab:	inc    ecx
  40a3ac:	nop
  40a3ad:	retf   
  40a3ae:	push   ebp
  40a3af:	pop    esp
  40a3b0:	pop    edx
  40a3b1:	add    DWORD PTR [esi+esi*8+0x46],0x34
  40a3b6:	push   es
  40a3b7:	lahf   
  40a3b8:	lods   eax,DWORD PTR ds:[esi]
  40a3b9:	push   ds
  40a3ba:	or     eax,0x9e70e578
  40a3bf:	aad    0x15
  40a3c1:	cmp    edi,DWORD PTR ds:0x4f6e7ac3
  40a3c7:	jnp    0x40a428
  40a3c9:	xor    bh,BYTE PTR [edx-0x598c2294]
  40a3cf:	ins    BYTE PTR es:[edi],dx
  40a3d0:	and    cl,ah
  40a3d2:	(bad)  
  40a3d3:	repz and ebp,ebp
  40a3d6:	fimul  WORD PTR [edi+eax*2+0x1f]
  40a3da:	or     eax,esp
  40a3dc:	adc    bh,BYTE PTR [esp+esi*4+0x64de7dd6]
  40a3e3:	arpl   WORD PTR [ecx+ebx*8],ax
  40a3e6:	je     0x40a3d8
  40a3e8:	mov    eax,0x413410fa
  40a3ed:	ds pop ebp
  40a3ef:	repnz fmul st(5),st
  40a3f2:	loope  0x40a3d0
  40a3f4:	mov    ?,WORD PTR [esp+ecx*1]
  40a3f7:	inc    edx
  40a3f8:	aad    0x34
  40a3fa:	imul   DWORD PTR [edx]
  40a3fc:	cmp    esi,esi
  40a3fe:	rcl    DWORD PTR [ebx+ebp*8-0x12b115e4],1
  40a405:	out    dx,eax
  40a406:	retf   
  40a407:	xlat   BYTE PTR ds:[ebx]
  40a408:	pop    ebp
  40a409:	gs jl  0x40a434
  40a40c:	in     al,dx
  40a40d:	jne    0x40a3f2
  40a40f:	xchg   esi,eax
  40a410:	rcr    DWORD PTR [edi],1
  40a412:	jl     0x40a420
  40a414:	fwait
  40a415:	test   BYTE PTR [eax+0x5c],dh
  40a418:	aad    0xcd
  40a41a:	sbb    al,0xcd
  40a41c:	stos   DWORD PTR es:[edi],eax
  40a41d:	add    eax,0x99041275
  40a422:	arpl   WORD PTR [ebx],bp
  40a424:	push   0x23b97a2d
  40a429:	mov    WORD PTR [edx-0x340fa28f],fs
  40a42f:	xchg   esp,eax
  40a430:	mov    cl,0xe6
  40a432:	jmp    0x40a480
  40a434:	add    bh,BYTE PTR [ebx-0x34]
  40a437:	mov    ch,dl
  40a439:	repz xlat BYTE PTR ds:[ebx]
  40a43b:	shl    DWORD PTR [edi],cl
  40a43d:	add    al,al
  40a43f:	mov    bl,0xb1
  40a441:	mov    bl,0xf7
  40a443:	aad    0xef
  40a445:	scas   eax,DWORD PTR es:[edi]
  40a446:	test   BYTE PTR [edx+0x54],bl
  40a449:	pop    esp
  40a44a:	mov    bl,0xd5
  40a44c:	jp     0x40a4c7
  40a44e:	fcom   DWORD PTR [edx+eiz*4]
  40a451:	adc    eax,0xa56e8667
  40a456:	sub    eax,0xa12ce26b
  40a45b:	add    edx,esi
  40a45d:	and    BYTE PTR ds:0xf1ea1fec,dh
  40a463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a464:	fcmovnb st,st(2)
  40a466:	sbb    eax,0x747cb87b
  40a46b:	cs mov eax,0x887e4e1
  40a471:	pop    eax
  40a472:	add    ebp,esi
  40a474:	(bad)  
  40a475:	es int3 
  40a477:	imul   esi,DWORD PTR [edi+0x73],0x2e
  40a47b:	pop    eax
  40a47c:	call   0xb228dba6
  40a481:	cs je  0x40a44b
  40a484:	push   ebp
  40a485:	xchg   edx,eax
  40a486:	sub    al,0x90
  40a488:	cmp    DWORD PTR [edi+0x6cc24a5f],0xf975c34a
  40a492:	rcr    DWORD PTR [ebx],cl
  40a494:	stos   BYTE PTR es:[edi],al
  40a495:	inc    edi
  40a496:	ficomp WORD PTR [ebp-0xe]
  40a499:	jns    0x40a4e0
  40a49b:	cmp    bh,cl
  40a49d:	push   edx
  40a49e:	out    0x5d,al
  40a4a0:	enter  0x11b6,0x8e
  40a4a4:	rol    BYTE PTR [ebx+0x4e],cl
  40a4a7:	popa   
  40a4a8:	jbe    0xd014b7eb
  40a4ae:	xchg   DWORD PTR [edx+0x3d],eax
  40a4b1:	fidiv  DWORD PTR [eax-0x3f]
  40a4b4:	(bad)  
  40a4b5:	mov    al,ds:0xbfd8a7da
  40a4ba:	jmp    0xdace:0x37b0c9f9
  40a4c1:	push   ecx
  40a4c2:	ja     0x40a4a7
  40a4c4:	stos   DWORD PTR es:[edi],eax
  40a4c5:	push   ebp
  40a4c6:	xchg   ebx,eax
  40a4c7:	and    DWORD PTR [edi+0x6b28d260],ecx
  40a4cd:	fistp  QWORD PTR [edx+0x32828fe]
  40a4d3:	mov    cl,0x9a
  40a4d5:	jae    0x40a48d
  40a4d7:	cmp    DWORD PTR [esi+0x6dcd923d],0xffffffb0
  40a4de:	inc    ebx
  40a4df:	in     eax,dx
  40a4e0:	call   0x57d3e231
  40a4e5:	dec    esp
  40a4e6:	(bad)  
  40a4e7:	mov    esp,0xa64307e
  40a4ec:	sub    BYTE PTR [edi],0x88
  40a4ef:	fdiv   DWORD PTR [ebx+0x6c]
  40a4f2:	dec    edx
  40a4f3:	jmp    0xabdf:0x6ab9d40
  40a4fa:	xor    eax,0x7ce4de9c
  40a4ff:	push   esp
  40a500:	nop
  40a501:	clc    
  40a502:	es jo  0x40a548
  40a505:	popf   
  40a506:	iret   
  40a507:	cmp    ah,BYTE PTR [ebp-0x49a37348]
  40a50d:	or     al,BYTE PTR [eax]
  40a50f:	ins    BYTE PTR es:[edi],dx
  40a510:	popa   
  40a511:	inc    edx
  40a512:	hlt    
  40a513:	fcom   QWORD PTR [edi-0x2b382067]
  40a519:	fwait
  40a51a:	out    dx,eax
  40a51b:	retf   0xa068
  40a51e:	push   0x9665c092
  40a523:	push   esi
  40a524:	int    0xd7
  40a526:	cli    
  40a527:	add    ch,BYTE PTR [ecx-0x22]
  40a52a:	xlat   BYTE PTR ds:[ebx]
  40a52b:	pop    ds
  40a52c:	mov    WORD PTR [eax+0x20ba605a],cs
  40a532:	aaa    
  40a533:	adc    esp,DWORD PTR [eax+0x2f39ee91]
  40a539:	push   ds
  40a53a:	imul   ebp,DWORD PTR [ecx+0x68eaaef2],0xb6d6489a
  40a544:	pop    ebx
  40a545:	jmp    0x13da093d
  40a54a:	jmp    0x602e:0x37563ac8
  40a551:	sub    BYTE PTR [edi+0x38bb2af2],0x3
  40a558:	mov    cl,0xb5
  40a55a:	mov    esi,0xf9af3169
  40a55f:	pop    ss
  40a560:	mov    esi,?
  40a562:	mov    eax,ds:0x86660bd6
  40a567:	mov    ebp,0x7b7bd0b0
  40a56c:	push   ebx
  40a56d:	pusha  
  40a56e:	pop    ds
  40a56f:	test   al,0x90
  40a571:	(bad)  
  40a572:	clc    
  40a573:	add    al,0x7d
  40a575:	or     esp,DWORD PTR [ebx-0x1ef0f8d1]
  40a57b:	iret   
  40a57c:	stos   DWORD PTR es:[edi],eax
  40a57d:	pop    esp
  40a57e:	dec    BYTE PTR [esi-0x51]
  40a581:	xchg   ebp,eax
  40a582:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a583:	cmp    eax,DWORD PTR [eax]
  40a585:	fbstp  TBYTE PTR [edx-0x78]
  40a588:	nop
  40a589:	push   esp
  40a58a:	out    0x9f,eax
  40a58c:	stos   DWORD PTR es:[edi],eax
  40a58d:	adc    al,ah
  40a58f:	mov    ?,WORD PTR [ebp-0x7]
  40a592:	stos   DWORD PTR es:[edi],eax
  40a593:	mov    eax,0xfc054b0d
  40a598:	mov    ecx,0x333ea1ee
  40a59d:	je     0x40a60c
  40a59f:	sahf   
  40a5a0:	mul    ecx
  40a5a2:	leave  
  40a5a3:	sub    ebx,DWORD PTR [esi-0x55becb67]
  40a5a9:	or     ebp,ebx
  40a5ab:	jno    0x40a55d
  40a5ad:	das    
  40a5ae:	mov    cl,0x7b
  40a5b0:	maskmovq mm4,(bad)
  40a5b1:	mul    DWORD PTR [ecx+edx*8]
  40a5b4:	push   cs
  40a5b5:	mov    ?,WORD PTR [esi]
  40a5b7:	push   esi
  40a5b8:	mov    ds,WORD PTR [ecx+0x2d0c4c2]
  40a5be:	aas    
  40a5bf:	adc    cl,dl
  40a5c1:	xchg   ebp,eax
  40a5c2:	xlat   BYTE PTR ds:[ebx]
  40a5c3:	push   ebx
  40a5c4:	sar    DWORD PTR [edi-0x11],1
  40a5c7:	push   edi
  40a5c8:	test   eax,0x99e92010
  40a5cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5ce:	pop    ds
  40a5cf:	pushf  
  40a5d0:	mov    edi,0xe466d609
  40a5d5:	xchg   ecx,eax
  40a5d6:	int    0x4
  40a5d8:	sti    
  40a5d9:	loop   0x40a57d
  40a5db:	add    al,0x30
  40a5dd:	push   ds
  40a5de:	and    al,0x74
  40a5e0:	retf   0xec1f
  40a5e3:	xchg   BYTE PTR [esi+0x30],dl
  40a5e6:	mov    ebp,0x63e02d0
  40a5eb:	push   ebx
  40a5ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5ed:	stos   BYTE PTR es:[edi],al
  40a5ee:	leave  
  40a5ef:	neg    DWORD PTR [ecx+eax*8-0x5ca6dc45]
  40a5f6:	(bad)  
  40a5f7:	adc    dh,BYTE PTR [ebp-0x632568a3]
  40a5fd:	(bad)  
  40a5fe:	(bad)  
  40a5ff:	push   ecx
  40a600:	test   ebp,0x23c623e0
  40a606:	(bad)  
  40a607:	pop    esp
  40a608:	pushf  
  40a609:	mov    WORD PTR [ebp-0x34],fs
  40a60c:	jmp    0xa4048245
  40a611:	jne    0x40a67a
  40a613:	add    eax,0x6c58b979
  40a618:	aam    0x2c
  40a61a:	fiadd  WORD PTR [ebp-0x400090b1]
  40a620:	add    al,0xb1
  40a622:	loope  0x40a5fc
  40a624:	aad    0xf5
  40a626:	scas   al,BYTE PTR es:[edi]
  40a627:	jnp    0x40a5fa
  40a629:	inc    esp
  40a62a:	loope  0x40a64a
  40a62c:	or     eax,0x898d9ab0
  40a631:	shr    DWORD PTR [edi],0x37
  40a634:	and    ah,BYTE PTR [ecx-0x46e974c1]
  40a63a:	mov    ecx,0xec35e273
  40a63f:	test   eax,0xe7490bc1
  40a644:	dec    ebx
  40a645:	repnz les edx,FWORD PTR [eax]
  40a648:	out    0x48,al
  40a64a:	push   esp
  40a64b:	mov    ch,0x5f
  40a64d:	mov    ebx,0x31977822
  40a652:	inc    BYTE PTR [ebp+0x26ca61a1]
  40a658:	pop    ds
  40a659:	or     al,0xb7
  40a65b:	inc    eax
  40a65c:	clts   
  40a65e:	cwde   
  40a65f:	les    ecx,FWORD PTR [esi]
  40a661:	xor    esp,DWORD PTR [eax+edi*8]
  40a664:	xchg   edi,eax
  40a665:	mov    ebx,0x294c809
  40a66a:	out    0x2,al
  40a66c:	xchg   ebx,eax
  40a66d:	outs   dx,BYTE PTR ds:[esi]
  40a66e:	sbb    BYTE PTR [ebx-0x1ff86a10],dl
  40a674:	mov    BYTE PTR [edi-0x1f588b5e],bl
  40a67a:	dec    eax
  40a67b:	cmp    esi,ebp
  40a67d:	cdq    
  40a67e:	jmp    0x40a61e
  40a680:	pop    ebx
  40a681:	jo     0x40a6f0
  40a683:	mov    al,0xdb
  40a685:	xlat   BYTE PTR ds:[ebx]
  40a686:	xor    DWORD PTR [esi-0x26193dae],edx
  40a68c:	pop    ebp
  40a68d:	dec    eax
  40a68e:	rol    BYTE PTR [ebx],0x33
  40a691:	pushf  
  40a692:	popf   
  40a693:	mov    bl,0xbe
  40a695:	inc    ebp
  40a696:	js     0x40a652
  40a698:	fidivr DWORD PTR [ecx]
  40a69a:	jl     0x40a682
  40a69c:	mov    esi,0x58de6ede
  40a6a1:	std    
  40a6a2:	out    0xcd,eax
  40a6a4:	fidiv  DWORD PTR [ebp-0x2d6bd0d7]
  40a6aa:	(bad)  
  40a6ab:	pop    esi
  40a6ac:	pop    ecx
  40a6ad:	xor    ebx,DWORD PTR [edi-0x7]
  40a6b0:	cmp    al,0x56
  40a6b2:	adc    ebp,DWORD PTR [edi+0x39a4dffb]
  40a6b8:	push   ebp
  40a6b9:	ror    ecx,1
  40a6bb:	xor    cl,BYTE PTR [ecx]
  40a6bd:	add    DWORD PTR [ecx+0x42],0x47
  40a6c1:	adc    esp,DWORD PTR [ebx+ecx*8+0x6c8202a6]
  40a6c8:	dec    esp
  40a6c9:	sub    eax,0xe2349482
  40a6ce:	adc    cl,dh
  40a6d0:	adc    ebp,DWORD PTR [ecx]
  40a6d2:	cwde   
  40a6d3:	imul   DWORD PTR [edi-0x3c]
  40a6d6:	lds    edx,FWORD PTR [ebx+edx*4-0x25]
  40a6da:	adc    eax,0x541a6b68
  40a6df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6e0:	mov    bh,0x6e
  40a6e2:	adc    DWORD PTR [ecx-0x11b435be],0x3
  40a6e9:	sub    al,0x32
  40a6eb:	(bad)  
  40a6ec:	cmc    
  40a6ed:	rol    DWORD PTR ds:0x68a3acfc,0xe5
  40a6f4:	idiv   BYTE PTR [eax-0x52e67f3c]
  40a6fa:	xor    DWORD PTR [edi],edx
  40a6fc:	dec    edx
  40a6fd:	mov    esp,0x8ccf05f
  40a702:	jg     0x40a69a
  40a704:	test   eax,0x797f957a
  40a709:	aas    
  40a70a:	ss jns 0x40a722
  40a70d:	pop    ss
  40a70e:	in     eax,dx
  40a70f:	or     ebp,esp
  40a711:	adc    eax,0x917ae13
  40a716:	ret    0xc8dd
  40a719:	sbb    eax,0x829db2ea
  40a71e:	ret    
  40a71f:	xor    al,0x76
  40a721:	int    0x94
  40a723:	mov    eax,ds:0x9951c805
  40a728:	cmp    al,0xd5
  40a72a:	daa    
  40a72b:	mov    ebx,0x777519d7
  40a730:	jne    0x40a72b
  40a732:	push   0xf0d94636
  40a737:	add    al,0xa6
  40a739:	rcl    DWORD PTR [edi+0x7d8367f6],0x2
  40a740:	imul   eax,DWORD PTR [edi-0x15d514aa],0xffffffb9
  40a747:	mov    ebp,0xe6617b38
  40a74c:	out    dx,al
  40a74d:	(bad)  
  40a74e:	and    dl,BYTE PTR [ecx-0x14a688c5]
  40a754:	loopne 0x40a743
  40a756:	jge    0x40a70b
  40a758:	dec    edi
  40a759:	pop    ebp
  40a75a:	sahf   
  40a75b:	sub    ecx,DWORD PTR [ecx]
  40a75d:	xor    al,0x81
  40a75f:	jne    0x40a74b
  40a761:	inc    edx
  40a762:	xor    DWORD PTR [esi-0x4d8f9d7],eax
  40a768:	mov    ecx,0xeba9f92
  40a76d:	push   edi
  40a76e:	call   0x8f89b27e
  40a773:	imul   ah
  40a775:	xor    ebx,DWORD PTR [ecx+eax*1]
  40a778:	xchg   DWORD PTR ds:0x289e3bc9,esi
  40a77e:	inc    esp
  40a77f:	pop    esp
  40a780:	push   ds
  40a781:	mov    ebp,0xe50dcbf6
  40a786:	and    eax,0xf77db88a
  40a78b:	ins    DWORD PTR es:[edi],dx
  40a78c:	test   BYTE PTR [eax],0x6b
  40a78f:	sub    BYTE PTR [eax-0x177f1d67],ch
  40a795:	(bad)  
  40a796:	aaa    
  40a797:	stc    
  40a798:	loope  0x40a728
  40a79a:	and    BYTE PTR [esi+0x358c1557],bl
  40a7a0:	fstp   QWORD PTR [ebx]
  40a7a2:	xchg   esp,eax
  40a7a3:	call   0x688f:0xa333f429
  40a7aa:	add    bl,BYTE PTR [ebx-0x78]
  40a7ad:	int    0x5c
  40a7af:	in     eax,dx
  40a7b0:	and    DWORD PTR [ecx+0x7f6640fe],edi
  40a7b6:	push   eax
  40a7b7:	icebp  
  40a7b8:	sar    esi,1
  40a7ba:	mov    WORD PTR [edx+0x462e55d5],cs
  40a7c0:	add    DWORD PTR [ebx-0x6c215ef1],edi
  40a7c6:	mov    WORD PTR [eax],ss
  40a7c8:	xor    al,0xa7
  40a7ca:	les    eax,FWORD PTR [eax-0x43]
  40a7cd:	mov    esi,0xc26a8694
  40a7d2:	pop    edx
  40a7d3:	lds    ebx,FWORD PTR [esi+0x4b49a7f]
  40a7d9:	dec    edi
  40a7da:	push   es
  40a7db:	imul   ecx,DWORD PTR ds:0x372b7cdd,0xffffff97
  40a7e2:	mov    ebp,DWORD PTR [ebx]
  40a7e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7e5:	add    al,0x3d
  40a7e7:	push   ebx
  40a7e8:	repnz pop es
  40a7ea:	in     al,dx
  40a7eb:	out    0x90,al
  40a7ed:	adc    al,0x49
  40a7ef:	sub    bl,al
  40a7f1:	(bad)  
  40a7f2:	fimul  DWORD PTR [eax+0x3db80cd3]
  40a7f8:	arpl   WORD PTR [ebx-0x28],sp
  40a7fb:	sbb    BYTE PTR [ebp-0x5],0x29
  40a7ff:	in     eax,0x69
  40a801:	xor    al,0x99
  40a803:	dec    edi
  40a804:	(bad)  
  40a805:	pop    ds
  40a806:	sbb    BYTE PTR ds:[ecx-0x1a348fbe],al
  40a80d:	aas    
  40a80e:	je     0x40a851
  40a810:	pop    eax
  40a811:	call   0x60:0x304e4d43
  40a818:	inc    edi
  40a819:	xchg   ebp,eax
  40a81a:	cmp    DWORD PTR [ebx+0x668b252d],edx
  40a820:	es dec esi
  40a822:	push   edi
  40a823:	mov    WORD PTR [eax],gs
  40a825:	ins    DWORD PTR es:[edi],dx
  40a826:	push   esi
  40a827:	sahf   
  40a828:	call   0x3191:0x154f5290
  40a82f:	xchg   edx,eax
  40a830:	xor    esi,0xffffffb8
  40a833:	jle    0x40a83b
  40a835:	mov    ch,0x33
  40a837:	sbb    eax,0x196af766
  40a83c:	adc    al,0xb9
  40a83e:	fstp   st(4)
  40a840:	mov    ecx,0x5c62635b
  40a845:	sub    BYTE PTR [edi-0x5c],cl
  40a848:	jp     0x40a873
  40a84a:	jo     0x40a7d8
  40a84c:	ins    DWORD PTR es:[edi],dx
  40a84d:	paddsb mm2,QWORD PTR ds:0xd3e8e47d
  40a854:	repz mov ah,0x1c
  40a857:	dec    esp
  40a858:	out    dx,al
  40a859:	inc    ecx
  40a85a:	dec    edi
  40a85b:	push   0x3f
  40a85d:	mov    bl,0x0
  40a85f:	adc    DWORD PTR [ebp+0xc],0x61
  40a863:	cmp    eax,0x50c998e7
  40a868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a869:	pop    esi
  40a86a:	test   al,0x49
  40a86c:	adc    al,bl
  40a86e:	or     BYTE PTR [ecx+0x13a9f205],0xff
  40a875:	inc    edi
  40a876:	dec    ebx
  40a877:	popa   
  40a878:	dec    ebx
  40a879:	out    dx,eax
  40a87a:	push   cs
  40a87b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a87c:	mov    ah,BYTE PTR [edx-0x802f54b]
  40a882:	xchg   ecx,eax
  40a883:	mov    ecx,0x49c11174
  40a888:	iret   
  40a889:	inc    ebx
  40a88a:	into   
  40a88b:	fist   DWORD PTR [ebx+0x157ad439]
  40a891:	mov    es,esi
  40a893:	ins    BYTE PTR es:[edi],dx
  40a894:	pop    es
  40a895:	test   eax,0xdaaa5740
  40a89a:	aad    0x53
  40a89c:	pop    ss
  40a89d:	daa    
  40a89e:	mov    ds:0x1c255006,eax
  40a8a3:	pop    ds
  40a8a4:	ror    BYTE PTR [ebx-0x2af96cf6],0xf9
  40a8ab:	jl     0x40a830
  40a8ad:	push   esp
  40a8ae:	cdq    
  40a8af:	retf   0x6549
  40a8b2:	cli    
  40a8b3:	(bad)  
  40a8b4:	and    al,0x95
  40a8b6:	jmp    0xb6cf:0xf86d83d3
  40a8bd:	mov    eax,0x8b99fb69
  40a8c2:	xor    DWORD PTR [edi],0x180998b7
  40a8c8:	stos   DWORD PTR es:[edi],eax
  40a8c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8ca:	push   ebp
  40a8cb:	outs   dx,DWORD PTR ds:[esi]
  40a8cc:	out    dx,al
  40a8cd:	fiadd  DWORD PTR [esi-0x52]
  40a8d0:	and    DWORD PTR [ebp+0x4abb1d93],edx
  40a8d6:	mov    dl,0x18
  40a8d8:	nop
  40a8d9:	es hlt 
  40a8db:	dec    ebp
  40a8dc:	idiv   DWORD PTR [edi+0x58c2b8cd]
  40a8e2:	add    al,0x2d
  40a8e4:	sub    eax,DWORD PTR [esi]
  40a8e6:	xchg   DWORD PTR [esp+eiz*2-0x4c7d685f],eax
  40a8ed:	lock jbe 0x40a962
  40a8f0:	sbb    eax,0x42f8d11b
  40a8f5:	hlt    
  40a8f6:	dec    esp
  40a8f7:	add    eax,0x8afcfaf6
  40a8fc:	jmp    0xd142:0x85693cb7
  40a903:	xor    BYTE PTR [ebx-0x32dd70b6],bh
  40a909:	out    dx,al
  40a90a:	mov    BYTE PTR es:[edx+0x60c5735a],bl
  40a911:	pusha  
  40a912:	jnp    0x40a967
  40a914:	fist   DWORD PTR [ebx-0x37]
  40a917:	and    DWORD PTR [ebx-0x1e],edx
  40a91a:	mov    bl,BYTE PTR [ecx]
  40a91c:	adc    BYTE PTR [esi+0x7c],cl
  40a91f:	cwde   
  40a920:	pop    esp
  40a921:	popf   
  40a922:	in     eax,dx
  40a923:	idiv   esp
  40a925:	dec    ebp
  40a926:	pop    es
  40a927:	xor    edx,DWORD PTR [eax]
  40a929:	cmp    dh,BYTE PTR [eax-0x5cbe9b1]
  40a92f:	rol    ecx,1
  40a931:	push   ss
  40a932:	mov    ch,0x77
  40a934:	mov    ecx,DWORD PTR [esi+eiz*2+0x62f43b12]
  40a93b:	out    dx,eax
  40a93c:	mov    dl,0x7d
  40a93e:	ret    0x627b
  40a941:	push   edx
  40a942:	dec    edx
  40a943:	int3   
  40a944:	xchg   ecx,eax
  40a945:	(bad)  [eax+0x6e]
  40a948:	inc    ebx
  40a949:	sub    eax,0xb840c2df
  40a94e:	pop    edi
  40a94f:	jno    0x40a91c
  40a951:	sbb    al,0x66
  40a953:	jb     0x40a991
  40a955:	adc    al,0xbb
  40a957:	jbe    0x40a8eb
  40a959:	int    0xc1
  40a95b:	sub    eax,0xde31939f
  40a960:	loope  0x40a967
  40a962:	mov    DWORD PTR [edx+eiz*2],esp
  40a965:	sbb    bl,BYTE PTR [edi-0x5e864407]
  40a96b:	and    bl,0x90
  40a96e:	inc    edx
  40a96f:	push   cs
  40a970:	leave  
  40a971:	pop    ss
  40a972:	(bad)  
  40a973:	lods   eax,DWORD PTR ds:[esi]
  40a974:	shl    BYTE PTR [edx],cl
  40a976:	leave  
  40a977:	push   ss
  40a978:	(bad)  
  40a979:	sbb    ch,BYTE PTR [esi+0x252c3c86]
  40a97f:	xchg   edi,eax
  40a980:	icebp  
  40a981:	push   edx
  40a982:	mov    al,0xeb
  40a984:	adc    DWORD PTR [ebp+ebp*8-0x2417130a],0x86b5cc34
  40a98f:	or     dl,BYTE PTR [esi+0x57a658fd]
  40a995:	mov    bl,bh
  40a997:	mov    bl,0x6d
  40a999:	mov    al,0x1d
  40a99b:	test   al,0x67
  40a99d:	xchg   esp,eax
  40a99e:	lock idiv BYTE PTR ds:0x633c0d0a
  40a9a5:	xchg   ebx,eax
  40a9a6:	xchg   esi,eax
  40a9a7:	push   cs
  40a9a8:	into   
  40a9a9:	mov    eax,ds:0x7d694f85
  40a9ae:	sahf   
  40a9af:	push   es
  40a9b0:	in     eax,0x2f
  40a9b2:	in     al,0xb6
  40a9b4:	retf   
  40a9b5:	inc    edi
  40a9b6:	addr16 mov esi,0xc64d6482
  40a9bc:	jge    0x40a9d2
  40a9be:	call   0x7318:0x5bec539a
  40a9c5:	out    dx,eax
  40a9c6:	pop    ebx
  40a9c7:	jo     0x40a9db
  40a9c9:	pop    esi
  40a9ca:	scas   eax,DWORD PTR es:[edi]
  40a9cb:	aas    
  40a9cc:	pop    ebx
  40a9cd:	cdq    
  40a9ce:	loopne 0x40a9b0
  40a9d0:	push   edi
  40a9d1:	cld    
  40a9d2:	add    al,0x12
  40a9d4:	test   al,0xfe
  40a9d6:	cmp    ah,bl
  40a9d8:	or     ecx,DWORD PTR [esi-0x39]
  40a9db:	or     al,0xf5
  40a9dd:	leave  
  40a9de:	outs   dx,DWORD PTR es:[esi]
  40a9e0:	mov    DWORD PTR [ebp-0x3e],esp
  40a9e3:	push   ebp
  40a9e4:	sti    
  40a9e5:	lahf   
  40a9e6:	scas   eax,DWORD PTR es:[edi]
  40a9e7:	retf   
  40a9e8:	sahf   
  40a9e9:	pop    es
  40a9ea:	test   DWORD PTR [esi+0x24],ebx
  40a9ed:	mov    bh,0x5a
  40a9ef:	mov    BYTE PTR [esi],dh
  40a9f1:	adc    al,0x85
  40a9f3:	je     0x40a9d2
  40a9f5:	cmp    eax,0xefd3c87
  40a9fa:	les    edi,FWORD PTR [eax-0x35]
  40a9fd:	jns    0xc59c1e78
  40aa03:	in     eax,dx
  40aa04:	fs dec esp
  40aa06:	and    DWORD PTR [ebx-0x4c],edx
  40aa09:	sbb    eax,DWORD PTR [esi]
  40aa0b:	pop    ecx
  40aa0c:	xchg   ebp,eax
  40aa0d:	fdivr  DWORD PTR [eax+0x17aea1e2]
  40aa13:	sub    bl,BYTE PTR [ebx+eax*8]
  40aa16:	sbb    BYTE PTR [ebx+0x1c1e6a52],al
  40aa1c:	xchg   ecx,eax
  40aa1d:	mov    eax,ds:0xa23961ee
  40aa22:	dec    esp
  40aa23:	sbb    al,0x52
  40aa25:	and    al,0xe6
  40aa27:	icebp  
  40aa28:	push   0x16
  40aa2a:	push   0x3
  40aa2c:	cmp    ah,BYTE PTR [eax-0x390cfb64]
  40aa32:	stc    
  40aa33:	ss fdivrp st(6),st
  40aa36:	test   esi,edi
  40aa38:	xchg   edi,eax
  40aa39:	xchg   DWORD PTR [edx-0x62a936d6],ebp
  40aa3f:	push   edx
  40aa40:	cmp    ebp,DWORD PTR [edi]
  40aa42:	out    0xa2,al
  40aa44:	pop    edx
  40aa45:	add    eax,0x8d7f403
  40aa4a:	jg     0x40aa3d
  40aa4c:	ret    
  40aa4d:	xchg   esi,eax
  40aa4e:	call   0x46ec:0xcf81347b
  40aa55:	dec    edi
  40aa56:	push   ds
  40aa57:	pop    es
  40aa58:	test   BYTE PTR [ebx+ecx*8+0x452d60c0],dl
  40aa5f:	pop    ebp
  40aa60:	dec    edx
  40aa61:	shl    ebp,cl
  40aa63:	push   0xffffff8a
  40aa65:	and    BYTE PTR [edi-0x6fdc1ec1],dh
  40aa6b:	push   0xe723f2e5
  40aa70:	lods   eax,DWORD PTR ds:[esi]
  40aa71:	(bad)
  40aa74:	fdiv   st,st(0)
  40aa76:	inc    bh
  40aa78:	cmp    esi,DWORD PTR [ebp-0x6d]
  40aa7b:	out    dx,eax
  40aa7c:	leave  
  40aa7d:	shl    BYTE PTR [ebx-0x16135337],cl
  40aa83:	clc    
  40aa84:	xor    DWORD PTR [ebp-0x31],edx
  40aa87:	sti    
  40aa88:	fwait
  40aa89:	lock xchg BYTE PTR [ebp+0x5e],dh
  40aa8d:	or     BYTE PTR [edi-0x3b],al
  40aa90:	mov    al,0xf3
  40aa93:	icebp  
  40aa94:	and    al,0xef
  40aa96:	mov    ds:0xb9d97967,al
  40aa9b:	cs loope 0x40aa98
  40aa9e:	mov    edi,0xe8e528f6
  40aaa3:	loop   0x40aa8c
  40aaa5:	in     al,0x3a
  40aaa7:	xlat   BYTE PTR ds:[ebx]
  40aaa8:	sar    DWORD PTR [ecx-0x4c360d6a],0xeb
  40aaaf:	xchg   esp,eax
  40aab0:	lea    ebx,es:[eax-0x69]
  40aab4:	cdq    
  40aab5:	xchg   esp,eax
  40aab6:	dec    edi
  40aab7:	adc    esp,esi
  40aab9:	xor    eax,0xa3ffd1a7
  40aabe:	xor    DWORD PTR [ebp+0x7e1a9f22],0xffffff85
  40aac5:	dec    DWORD PTR [ebp+0x2b]
  40aac8:	mov    ebp,0x75e661a
  40aacd:	inc    ebp
  40aace:	or     edi,DWORD PTR [edi+0x6a]
  40aad1:	aas    
  40aad2:	xor    BYTE PTR [edi-0x15],dl
  40aad5:	or     eax,0x23a118a2
  40aada:	iret   
  40aadb:	ds ret 0xa84b
  40aadf:	push   cs
  40aae0:	mov    ch,0x28
  40aae2:	imul   eax,DWORD PTR [edx],0x46
  40aae5:	and    dl,bl
  40aae7:	xor    BYTE PTR [edx],ah
  40aae9:	outs   dx,DWORD PTR ds:[esi]
  40aaea:	cli    
  40aaeb:	dec    eax
  40aaec:	fist   WORD PTR [edx+0x239fe496]
  40aaf2:	xor    ecx,DWORD PTR [ebp+0x20]
  40aaf5:	icebp  
  40aaf6:	inc    eax
  40aaf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaf8:	mov    edx,0x3f26c6cc
  40aafd:	enter  0xefcd,0xb
  40ab01:	jg     0x40aab0
  40ab03:	gs sbb eax,0xaf0218b8
  40ab09:	mov    ebx,0x6b0fefec
  40ab0e:	xchg   ebx,eax
  40ab0f:	outs   dx,DWORD PTR ds:[esi]
  40ab10:	jl     0x40ab0f
  40ab12:	jb     0x40aad3
  40ab14:	pop    eax
  40ab15:	in     al,0x7a
  40ab17:	bound  sp,DWORD PTR [eax-0xc2b6fbb]
  40ab1e:	xchg   BYTE PTR [edx],bl
  40ab20:	imul   eax
  40ab22:	outs   dx,DWORD PTR ds:[esi]
  40ab23:	cs ds jae 0x40ab1f
  40ab27:	(bad)  
  40ab28:	mov    edx,DWORD PTR [esi+0x4ec4f1a9]
  40ab2e:	sub    DWORD PTR [edi+0x17],ebp
  40ab31:	fdiv   DWORD PTR [ebp-0xb3fb89a]
  40ab37:	hlt    
  40ab38:	jo     0x40ab32
  40ab3a:	mov    BYTE PTR [edx+0x22420ee2],ch
  40ab40:	push   ecx
  40ab41:	fidiv  DWORD PTR [edi]
  40ab43:	popa   
  40ab44:	sbb    dl,BYTE PTR [edx-0x292437be]
  40ab4a:	push   edx
  40ab4b:	add    eax,0x559eeca
  40ab50:	cmp    eax,0x546b35b0
  40ab55:	cmp    ebx,edi
  40ab57:	in     al,dx
  40ab58:	cmp    al,0xf3
  40ab5a:	test   edx,esp
  40ab5c:	int3   
  40ab5d:	loopne 0x40ab83
  40ab5f:	pop    eax
  40ab60:	hlt    
  40ab61:	sti    
  40ab62:	xor    al,0x9f
  40ab64:	xchg   esp,eax
  40ab65:	ss call 0xa451:0x7192de0a
  40ab6d:	imul   esp,DWORD PTR [ecx-0x5c94c0cd],0x6e
  40ab74:	leave  
  40ab75:	or     dl,cl
  40ab77:	pop    ds
  40ab78:	aam    0x31
  40ab7a:	loop   0x40ab97
  40ab7c:	push   eax
  40ab7d:	addr16 pop ds
  40ab7f:	scas   al,BYTE PTR es:[edi]
  40ab80:	add    ah,dh
  40ab82:	push   edx
  40ab83:	pop    ss
  40ab84:	jmp    0x40abcd
  40ab86:	mov    eax,ds:0xbeefadbe
  40ab8b:	jns    0x40ab52
  40ab8d:	pop    ecx
  40ab8e:	(bad)  
  40ab8f:	gs push ebp
  40ab91:	neg    DWORD PTR [ebx-0x40]
  40ab94:	dec    eax
  40ab95:	xchg   ebx,eax
  40ab96:	add    eax,0x66ee2d22
  40ab9b:	or     edx,ebx
  40ab9d:	or     bh,BYTE PTR [eax+0x27ddb00e]
  40aba3:	aas    
  40aba4:	jns    0x40ab28
  40aba6:	adc    al,0xe4
  40aba8:	shr    DWORD PTR [edx-0x30],0x82
  40abac:	push   ecx
  40abad:	test   BYTE PTR [ecx+edi*8+0x195e7fa0],0xe6
  40abb5:	ins    DWORD PTR es:[edi],dx
  40abb6:	or     al,0xe0
  40abb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abb9:	mov    ah,0x13
  40abbb:	pop    ebp
  40abbc:	adc    ch,ch
  40abbe:	in     al,dx
  40abbf:	push   edi
  40abc0:	mov    ds:0xcfbc42e8,eax
  40abc5:	xchg   bh,dh
  40abc7:	mov    ch,BYTE PTR [eax+eiz*2-0x2b]
  40abcb:	xor    eax,DWORD PTR [eax+0x4d3c8fcc]
  40abd1:	(bad)  
  40abd2:	push   ss
  40abd3:	mov    ebx,0xc5ee1ae4
  40abd8:	and    ebx,eax
  40abda:	imul   ebp,DWORD PTR [edx],0x2
  40abdd:	pop    ebx
  40abdf:	xor    BYTE PTR [edx+ebx*8+0xd],bl
  40abe3:	adc    al,0x37
  40abe5:	mov    ch,0xde
  40abe7:	xchg   esi,eax
  40abe8:	bound  ecx,QWORD PTR [ecx]
  40abea:	xor    DWORD PTR [edx+0x43cf8c89],edx
  40abf0:	test   ch,bl
  40abf2:	dec    esp
  40abf3:	sbb    eax,0x1c348d10
  40abf8:	cmc    
  40abf9:	sub    eax,0x7217484b
  40abfe:	push   0xffffffe4
  40ac00:	xor    eax,0x199a96c6
  40ac05:	fisub  WORD PTR [eax+0x4b]
  40ac08:	test   al,0xb6
  40ac0a:	icebp  
  40ac0b:	mov    ah,0xe6
  40ac0d:	les    ebx,FWORD PTR [edi+0x5a]
  40ac10:	out    dx,al
  40ac11:	mov    ah,0x38
  40ac13:	mov    edi,edx
  40ac15:	mov    esp,0xc87ab52f
  40ac1a:	fnstcw WORD PTR [edi]
  40ac1c:	retf   0x509f
  40ac1f:	je     0x40ac27
  40ac21:	cli    
  40ac22:	jns    0x40ac2a
  40ac24:	frstor [ebx]
  40ac26:	or     BYTE PTR [esi-0x23],dh
  40ac29:	pusha  
  40ac2a:	in     al,0x8f
  40ac2c:	arpl   WORD PTR [ecx+0x2],dx
  40ac2f:	mov    eax,0x6e15a927
  40ac34:	fstp   st(5)
  40ac36:	inc    esp
  40ac37:	xchg   BYTE PTR [edi],ah
  40ac39:	daa    
  40ac3a:	inc    edi
  40ac3b:	jmp    0xf8bcd433
  40ac40:	sbb    DWORD PTR [eax],ebp
  40ac42:	cwde   
  40ac43:	sbb    eax,0x19aa3470
  40ac48:	push   eax
  40ac49:	xor    eax,0xef17edb9
  40ac4e:	inc    ecx
  40ac4f:	sub    al,0xe6
  40ac51:	pop    edi
  40ac52:	push   edx
  40ac53:	outs   dx,DWORD PTR ds:[esi]
  40ac54:	dec    ebx
  40ac55:	pop    ebp
  40ac56:	int    0x4b
  40ac58:	cli    
  40ac59:	jae    0x40ac61
  40ac5b:	inc    ecx
  40ac5c:	jmp    0xefcc:0xf9a874
  40ac63:	push   ebp
  40ac64:	sahf   
  40ac65:	jnp    0x40ac5e
  40ac67:	push   0xb44aac26
  40ac6c:	xchg   ebx,eax
  40ac6d:	jp     0x40ac61
  40ac6f:	sub    al,0xf6
  40ac71:	out    dx,eax
  40ac72:	jnp    0x40acc9
  40ac74:	xchg   esi,eax
  40ac75:	repnz xchg edx,eax
  40ac77:	fwait
  40ac78:	fs cmp cl,bh
  40ac7b:	fwait
  40ac7c:	mov    bl,0xac
  40ac7e:	ins    DWORD PTR es:[edi],dx
  40ac7f:	(bad)  
  40ac80:	dec    ax
  40ac82:	mov    bh,0xca
  40ac84:	js     0x40ac6d
  40ac86:	rcl    BYTE PTR [edi],cl
  40ac88:	aaa    
  40ac89:	(bad)  
  40ac8a:	cs das 
  40ac8c:	mov    dh,0x2b
  40ac8e:	adc    esi,DWORD PTR [edx-0x45c9d52]
  40ac94:	test   eax,0xb01bc115
  40ac99:	mov    bh,0x97
  40ac9b:	test   DWORD PTR [edx-0x5527afea],edi
  40aca1:	xchg   ebx,eax
  40aca2:	in     al,dx
  40aca3:	mov    ds:0x9fe95438,al
  40aca8:	das    
  40aca9:	rcl    DWORD PTR [ecx-0x45911a11],cl
  40acaf:	sbb    eax,0x9001393a
  40acb4:	je     0x40acbb
  40acb6:	(bad)  
  40acb7:	rol    dl,1
  40acb9:	mov    al,BYTE PTR [ebp-0x72]
  40acbc:	sub    ecx,DWORD PTR [edi-0x55]
  40acbf:	push   ss
  40acc0:	ins    BYTE PTR es:[edi],dx
  40acc1:	jmp    0x9eb1:0x4691d479
  40acc8:	ret    0x834d
  40accb:	les    esi,FWORD PTR [ebp+0x3b]
  40acce:	das    
  40accf:	nop
  40acd0:	xchg   ebx,eax
  40acd1:	dec    ebx
  40acd2:	(bad)  
  40acd3:	call   0x1728:0xf0979ff1
  40acda:	inc    ebx
  40acdb:	adc    bh,0x33
  40acde:	jb     0x40acc5
  40ace0:	mov    DWORD PTR [ebp+ebx*8-0x14],ebx
  40ace4:	push   ecx
  40ace5:	aaa    
  40ace6:	pop    eax
  40ace7:	inc    ebp
  40ace8:	xchg   edx,eax
  40ace9:	mov    eax,0xa87a75b2
  40acee:	pop    edx
  40acef:	inc    edx
  40acf0:	push   ss
  40acf1:	test   al,0x27
  40acf3:	aam    0xcb
  40acf5:	mov    bh,0x56
  40acf7:	les    eax,FWORD PTR ds:0x1fb77886
  40acfd:	cmc    
  40acfe:	dec    esi
  40acff:	push   edi
  40ad00:	fstp   TBYTE PTR [ecx]
  40ad02:	jg     0x40ad61
  40ad04:	jg     0x40acb6
  40ad06:	adc    BYTE PTR [eax+0x3ad80a74],bl
  40ad0c:	xchg   ebp,eax
  40ad0d:	arpl   WORD PTR [edi+0x4282b336],cx
  40ad13:	mov    bl,0x3f
  40ad15:	sbb    BYTE PTR ds:0x17220f16,bh
  40ad1b:	shl    BYTE PTR [edx],cl
  40ad1d:	mov    ecx,0x92d0afb5
  40ad22:	jno    0x40ad3b
  40ad24:	xor    ah,BYTE PTR [ecx+0x40f24c97]
  40ad2a:	xor    bh,dl
  40ad2c:	(bad)  
  40ad2d:	outs   dx,BYTE PTR ds:[esi]
  40ad2e:	mov    esi,0x15388b25
  40ad33:	adc    dl,bh
  40ad35:	push   esp
  40ad36:	pop    esi
  40ad37:	inc    edi
  40ad38:	out    0x84,eax
  40ad3a:	mov    esi,0xa93490f3
  40ad3f:	imul   ebp,DWORD PTR [ecx+0x33],0xffffffc8
  40ad43:	add    ebp,ebp
  40ad45:	fucomi st,st(1)
  40ad47:	pop    ss
  40ad48:	cmp    DWORD PTR [edi],eax
  40ad4a:	push   ds
  40ad4b:	sub    DWORD PTR cs:[ebx+0x12ad5c96],0x6b
  40ad53:	dec    esi
  40ad54:	mov    ds:0x54cc8294,eax
  40ad59:	xor    BYTE PTR [edi],bl
  40ad5b:	xchg   edx,eax
  40ad5c:	mov    cl,0xe7
  40ad5e:	jg     0x40ad8c
  40ad60:	push   0x54
  40ad62:	push   eax
  40ad63:	mov    esp,0xa2e75fde
  40ad68:	jb     0x40ad99
  40ad6a:	mov    eax,0x524007a2
  40ad6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad70:	imul   edi,DWORD PTR [ebx+0x296d96f6],0x83872e0d
  40ad7a:	jl     0x40ad8d
  40ad7c:	push   es
  40ad7d:	sti    
  40ad7e:	sbb    al,BYTE PTR [ebx]
  40ad80:	xor    ch,bl
  40ad82:	aad    0x57
  40ad84:	push   es
  40ad85:	push   es
  40ad86:	adc    BYTE PTR [edi-0x129acc07],ah
  40ad8c:	jle    0x40ad15
  40ad8e:	stos   DWORD PTR es:[edi],eax
  40ad8f:	or     bl,BYTE PTR [ebx-0x1323f557]
  40ad95:	jae    0x40ae0a
  40ad97:	int3   
  40ad98:	outs   dx,BYTE PTR ds:[esi]
  40ad99:	jnp    0x40ad26
  40ad9b:	inc    ebp
  40ad9c:	in     al,dx
  40ad9d:	movzx  ecx,WORD PTR ds:0x42915f
  40ada4:	or     DWORD PTR ds:0x4291e7,ecx
  40adaa:	mov    ecx,DWORD PTR [ebp+0x8]
  40adad:	add    ecx,DWORD PTR [eax+0x1c]
  40adb0:	mov    DWORD PTR [ebp-0x14],ecx
  40adb3:	mov    DWORD PTR ds:0x4291d3,0x1651
  40adbd:	jmp    0x40d2ae
  40adc2:	mov    eax,DWORD PTR [ebp-0x2c]
  40adc5:	and    DWORD PTR ds:0x4291c3,0x0
  40adcf:	jmp    0x40ade1
  40add4:	mov    ecx,DWORD PTR ds:0x4291c3
  40adda:	inc    ecx
  40addb:	mov    DWORD PTR ds:0x4291c3,ecx
  40ade1:	cmp    DWORD PTR ds:0x4291c3,0x1e
  40ade8:	jae    0x40ae37
  40adee:	cmp    DWORD PTR ds:0x4291c3,0x10
  40adf5:	jbe    0x40ae37
  40adfb:	jmp    0x40ae18
  40ae00:	push   0x54af
  40ae05:	push   0x428000
  40ae0a:	push   0x42810e
  40ae0f:	push   DWORD PTR [ebp-0x10]
  40ae12:	call   DWORD PTR ds:0x42a86b
  40ae18:	cmp    DWORD PTR ds:0x4291c3,0xf
  40ae1f:	jne    0x40ae32
  40ae25:	mov    ecx,DWORD PTR ds:0x4291c3
  40ae2b:	inc    ecx
  40ae2c:	mov    DWORD PTR ds:0x4291c3,ecx
  40ae32:	jmp    0x40add4
  40ae37:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae3a:	add    ecx,DWORD PTR [eax+ebx*4]
  40ae3d:	and    DWORD PTR ds:0x4291df,0x0
  40ae47:	jmp    0x40ae57
  40ae4c:	mov    eax,ds:0x4291df
  40ae51:	inc    eax
  40ae52:	mov    ds:0x4291df,eax
  40ae57:	cmp    DWORD PTR ds:0x4291df,0x10
  40ae5e:	jae    0x40aea1
  40ae64:	cmp    DWORD PTR ds:0x4291df,0x5
  40ae6b:	jb     0x40aea1
  40ae71:	jmp    0x40ae84
  40ae76:	push   0x73ed
  40ae7b:	push   DWORD PTR [ebp-0xc]
  40ae7e:	call   DWORD PTR ds:0x42a86f
  40ae84:	cmp    DWORD PTR ds:0x4291df,0x4
  40ae8b:	jne    0x40ae9c
  40ae91:	mov    eax,ds:0x4291df
  40ae96:	inc    eax
  40ae97:	mov    ds:0x4291df,eax
  40ae9c:	jmp    0x40ae4c
  40aea1:	mov    DWORD PTR [ebp-0x28],ecx
  40aea4:	add    ecx,DWORD PTR ds:0x429183
  40aeaa:	mov    eax,DWORD PTR [ebp-0x4]
  40aead:	xor    DWORD PTR ds:0x42916b,ebx
  40aeb3:	mov    ecx,DWORD PTR [ebp-0x28]
  40aeb6:	xor    eax,esi
  40aeb8:	jmp    0x40d26c
  40aebd:	add    BYTE PTR [ecx],dh
  40aebf:	cld    
  40aec0:	sbb    esp,ecx
  40aec2:	nop
  40aec3:	and    BYTE PTR [eax],0xe5
  40aec6:	push   eax
  40aec7:	(bad)  [edi-0x76747b50]
  40aecd:	sub    al,0xf1
  40aecf:	add    DWORD PTR [ebx-0x7c7ca318],0xffffffb0
  40aed6:	data16 aaa 
  40aed8:	shl    DWORD PTR [esi-0x2aeacba7],0x1d
  40aedf:	jecxz  0x40aeaa
  40aee1:	test   BYTE PTR [eax+0x7d],0xde
  40aee5:	cwde   
  40aee6:	in     eax,dx
  40aee7:	outs   dx,BYTE PTR ds:[esi]
  40aee8:	sub    al,0x11
  40aeea:	sub    dl,al
  40aeec:	push   0x69
  40aeee:	cmp    BYTE PTR [esi],dl
  40aef0:	mov    al,ds:0xffdeb89b
  40aef5:	daa    
  40aef6:	pushf  
  40aef7:	lods   eax,DWORD PTR ds:[si]
  40aef9:	std    
  40aefa:	adc    bl,ch
  40aefc:	dec    edx
  40aefd:	sub    DWORD PTR [edi+0x6147744f],ebx
  40af03:	cmp    ch,ch
  40af05:	adc    ch,BYTE PTR [edx+edi*2]
  40af08:	jb     0x40af7c
  40af0a:	xor    eax,0xb7efd3ea
  40af0f:	adc    eax,0x60be4485
  40af14:	rol    BYTE PTR [ebp+0x57a143cb],0x54
  40af1b:	jns    0x40aef3
  40af1d:	outs   dx,BYTE PTR ds:[esi]
  40af1e:	sbb    DWORD PTR [edi+ebp*1],edi
  40af21:	into   
  40af22:	cdq    
  40af23:	mov    WORD PTR [edx],fs
  40af25:	mov    ebx,0xc2d8634a
  40af2a:	rol    BYTE PTR [eax-0x2b],1
  40af2d:	and    bh,BYTE PTR [edx+0x57]
  40af30:	cmc    
  40af31:	in     al,0xe8
  40af33:	rcl    ecx,cl
  40af35:	test   eax,0x946ce803
  40af3a:	cdq    
  40af3b:	sub    ebx,DWORD PTR [edx+0x25]
  40af3e:	or     al,0x85
  40af40:	imul   esi,DWORD PTR [esi],0x2a
  40af43:	xor    bh,BYTE PTR [esi]
  40af45:	jb     0x40af7e
  40af47:	es jge 0x40af3c
  40af4a:	in     al,0x85
  40af4c:	jne    0x40aee5
  40af4e:	ret    0x543d
  40af51:	inc    esi
  40af52:	mov    dl,0xdc
  40af54:	dec    eax
  40af55:	xor    eax,DWORD PTR [esi]
  40af57:	jp     0x40aee8
  40af59:	sub    dh,ch
  40af5b:	mov    ch,0xfb
  40af5d:	mov    bl,0x5
  40af5f:	push   cs
  40af60:	pusha  
  40af61:	add    al,0x99
  40af63:	push   ebx
  40af64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af65:	arpl   WORD PTR [edx-0xf],cx
  40af68:	in     al,dx
  40af69:	lods   eax,DWORD PTR ds:[esi]
  40af6a:	add    al,0x69
  40af6c:	fimul  WORD PTR [ecx]
  40af6e:	jnp    0x40af7e
  40af70:	sbb    dl,BYTE PTR ds:0xa2736366
  40af76:	pushf  
  40af77:	mov    ds:0xd5b0f4b0,eax
  40af7c:	pop    ebp
  40af7d:	add    dl,dl
  40af7f:	xor    DWORD PTR [ecx-0x15],ecx
  40af82:	adc    DWORD PTR [eax-0x4f569e4d],0xffffffc1
  40af89:	es xchg ebp,eax
  40af8b:	out    dx,al
  40af8c:	jle    0x40af16
  40af8e:	js     0x40b002
  40af90:	dec    eax
  40af91:	add    BYTE PTR [ebx+ebp*4-0x53820f01],ah
  40af98:	ds jmp 0x1314:0xcc90a046
  40afa0:	adc    al,BYTE PTR [ecx+ebp*1]
  40afa3:	lea    edx,[edi-0x152b3270]
  40afa9:	cs mov edx,0xfd0850b0
  40afaf:	or     bl,BYTE PTR [eax-0x7d]
  40afb2:	push   esi
  40afb3:	pushf  
  40afb4:	fisub  DWORD PTR [edi]
  40afb6:	push   DWORD PTR [ebx-0x70]
  40afb9:	add    DWORD PTR [eax+edx*8-0x63b01588],0xffffffcb
  40afc1:	xchg   BYTE PTR [edx+0x66c24b9b],dh
  40afc7:	retf   0xbe70
  40afca:	or     al,0x56
  40afcc:	ror    BYTE PTR [ebx+0x62],1
  40afcf:	gs jp  0x40b009
  40afd2:	ret    0xb085
  40afd5:	aas    
  40afd6:	mov    al,ds:0x30ec7bc5
  40afdb:	(bad)  
  40afdc:	cmp    edx,DWORD PTR [esi]
  40afde:	sbb    esi,0x320147a7
  40afe4:	cmp    ch,bh
  40afe6:	push   ds
  40afe7:	in     eax,0x8c
  40afe9:	mov    dh,0xce
  40afeb:	mov    eax,0xb7e9b84a
  40aff0:	loop   0x40afe3
  40aff2:	push   0x4a
  40aff4:	add    BYTE PTR [ecx+0xd],cl
  40aff7:	loop   0x40af7a
  40aff9:	jge    0x40afda
  40affb:	mov    eax,ds:0xbf8dc96a
  40b000:	mov    WORD PTR [esi-0x76c66989],es
  40b006:	bswap  esi
  40b008:	add    ebx,DWORD PTR [ebp+0x30]
  40b00b:	sub    eax,0x5ab6ffa4
  40b010:	outs   dx,DWORD PTR ds:[esi]
  40b011:	outs   dx,BYTE PTR ds:[esi]
  40b012:	jno    0x40b000
  40b014:	add    DWORD PTR [eax+ebx*8],0x66
  40b018:	fdivr  QWORD PTR [edx+0x63a7efd4]
  40b01e:	push   ebx
  40b01f:	and    al,0x5c
  40b021:	push   ebp
  40b022:	xchg   esp,eax
  40b023:	aaa    
  40b024:	call   0x211c:0x66b3c4dd
  40b02b:	aaa    
  40b02c:	imul   ecx,DWORD PTR [esi+0xcec9281],0x75
  40b033:	repnz inc edx
  40b035:	stc    
  40b036:	out    0x1c,eax
  40b038:	nop
  40b039:	jl     0x40b094
  40b03b:	sbb    BYTE PTR [esi],0x90
  40b03e:	(bad)  
  40b03f:	div    BYTE PTR [esi+eax*4]
  40b042:	stos   DWORD PTR es:[edi],eax
  40b043:	cmp    bl,BYTE PTR [ecx]
  40b045:	push   esp
  40b046:	mov    WORD PTR [edx],gs
  40b048:	or     bl,BYTE PTR [ebx+0x13]
  40b04b:	enter  0x8616,0xdd
  40b04f:	shl    esp,1
  40b051:	retf   
  40b052:	xchg   DWORD PTR [edx],ebx
  40b054:	xor    eax,0x682fa4e8
  40b059:	dec    ebx
  40b05a:	pushf  
  40b05b:	fisub  DWORD PTR [eax]
  40b05d:	mov    esp,ebx
  40b05f:	and    DWORD PTR [eax-0x77],esp
  40b062:	les    esp,FWORD PTR [esi]
  40b064:	test   BYTE PTR [edx-0x45],ch
  40b067:	mov    bl,BYTE PTR [ebx-0x54]
  40b06a:	call   0x2e55def2
  40b06f:	(bad)  
  40b070:	dec    esi
  40b071:	mov    bl,0x4c
  40b073:	xchg   ecx,eax
  40b074:	dec    esi
  40b075:	jge    0x40b0a2
  40b077:	xchg   ebx,eax
  40b078:	and    edx,eax
  40b07a:	(bad)  
  40b07c:	std    
  40b07d:	adc    esp,DWORD PTR [esi-0x70ca827e]
  40b083:	in     eax,dx
  40b084:	or     esp,0x68
  40b087:	xchg   esp,eax
  40b088:	addr16 or al,0xd9
  40b08b:	es test eax,0xb1a670f2
  40b091:	clc    
  40b092:	scas   al,BYTE PTR es:[edi]
  40b093:	add    BYTE PTR [edx],ah
  40b095:	mov    DWORD PTR [esi-0x46],ebp
  40b098:	shr    BYTE PTR [edi],1
  40b09a:	pop    ss
  40b09b:	popf   
  40b09c:	mov    cl,0xb5
  40b09e:	xchg   ebx,eax
  40b09f:	jl     0x40b076
  40b0a1:	mov    ds:0xa8ac6e7a,eax
  40b0a6:	bound  edx,QWORD PTR ds:0x349e2068
  40b0ac:	adc    BYTE PTR [edi+0x5751f2ff],0x2
  40b0b3:	mov    ah,cl
  40b0b5:	dec    ecx
  40b0b6:	in     al,dx
  40b0b7:	push   esi
  40b0b8:	fs in  al,0xf1
  40b0bb:	cmp    al,0xb
  40b0bd:	xchg   ecx,eax
  40b0be:	std    
  40b0bf:	sbb    eax,0xd1bc13e2
  40b0c4:	call   0xa545f493
  40b0c9:	push   edx
  40b0ca:	fsubr  QWORD PTR [edi-0x45]
  40b0cd:	daa    
  40b0ce:	popa   
  40b0cf:	add    DWORD PTR ds:0x79fc7af6,eax
  40b0d5:	out    0xb4,eax
  40b0d7:	lock sub al,0x7d
  40b0da:	fcomp  DWORD PTR fs:[ebx+0xa2e2b8c]
  40b0e1:	push   edx
  40b0e2:	and    DWORD PTR [edx+eax*4+0x47],edi
  40b0e6:	mov    dh,0x36
  40b0e8:	test   DWORD PTR [edi+edi*4-0x36bc7752],esi
  40b0ef:	addr16 out 0x4a,eax
  40b0f2:	ror    BYTE PTR [edx+0x3e4dc864],cl
  40b0f8:	je     0x40b0df
  40b0fa:	or     BYTE PTR [ebx],0xb5
  40b0fd:	jmp    0x40b09e
  40b0ff:	into   
  40b100:	pop    ebx
  40b101:	push   eax
  40b102:	sbb    eax,0x381af5cb
  40b107:	sub    eax,0x8568cc3c
  40b10c:	(bad)  
  40b10d:	fmul   QWORD PTR [ebx+0x5e]
  40b110:	xlat   BYTE PTR ds:[ebx]
  40b111:	xlat   BYTE PTR ds:[ebx]
  40b112:	xor    esi,DWORD PTR [edi-0x1f]
  40b115:	xchg   BYTE PTR [ecx+0x68],bl
  40b118:	aam    0xcc
  40b11a:	sbb    bh,dl
  40b11c:	es int 0x2e
  40b11f:	add    DWORD PTR [edi-0x2a],ebp
  40b122:	or     al,0x23
  40b124:	pop    esi
  40b125:	push   eax
  40b126:	loopne 0x40b0d5
  40b128:	ror    BYTE PTR [ecx+esi*4-0x5d],0x4d
  40b12d:	repnz pop ds
  40b12f:	xor    BYTE PTR [edx+ebx*4-0x78001a2d],dh
  40b136:	mov    ah,0x33
  40b138:	out    dx,eax
  40b139:	out    dx,al
  40b13a:	mov    ah,0xbb
  40b13c:	sbb    eax,0xdee7c429
  40b141:	sbb    BYTE PTR es:[ebx+0x48],al
  40b145:	add    eax,0x49b3efcb
  40b14a:	push   ds
  40b14b:	mov    al,0xfe
  40b14d:	sti    
  40b14e:	fadd   st,st(7)
  40b150:	add    edx,ebx
  40b152:	nop
  40b153:	neg    BYTE PTR [esi+0x59]
  40b156:	outs   dx,BYTE PTR ds:[esi]
  40b157:	repz cmp eax,0x5fe47656
  40b15d:	sub    al,0x94
  40b15f:	sub    eax,0xb130d9da
  40b164:	xor    al,0x8d
  40b166:	icebp  
  40b167:	inc    esp
  40b168:	jns    0x40b144
  40b16a:	jmp    0x7b6ce2ce
  40b16f:	repz jmp 0x665ff5cf
  40b175:	ja     0x40b193
  40b177:	xor    BYTE PTR [edi+0x1d],dl
  40b17a:	fs loope 0x40b16a
  40b17d:	pushf  
  40b17e:	pop    es
  40b17f:	mov    edi,0x5eec1b89
  40b184:	popf   
  40b185:	ret    
  40b186:	neg    DWORD PTR [edx-0x597adf81]
  40b18c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b18d:	push   es
  40b18e:	jecxz  0x40b140
  40b190:	xor    DWORD PTR [edx+0x16254878],0x1ba6d556
  40b19a:	sub    ch,BYTE PTR [edi-0x40]
  40b19d:	inc    edx
  40b19e:	imul   edx,ebp,0xdcb2cb4e
  40b1a4:	cs aas 
  40b1a6:	and    eax,0xf6c65df6
  40b1ab:	(bad)
  40b1ae:	shl    bh,1
  40b1b0:	cmp    edi,DWORD PTR [ecx-0x35]
  40b1b3:	push   es
  40b1b4:	pop    es
  40b1b5:	fisttp WORD PTR [eax+ebx*1]
  40b1b8:	inc    esi
  40b1b9:	mov    ecx,0xc88c89d2
  40b1be:	ss sub al,0x20
  40b1c1:	mov    edi,0x7690ec23
  40b1c6:	mov    ds:0x41b9f8d9,eax
  40b1cb:	test   BYTE PTR [eax],ch
  40b1cd:	imul   esp,DWORD PTR [ebx],0xeab277c4
  40b1d3:	and    dl,bh
  40b1d5:	icebp  
  40b1d6:	add    DWORD PTR [edi],0x2409f8cb
  40b1dc:	dec    edx
  40b1dd:	popf   
  40b1de:	mov    al,ds:0x587735df
  40b1e3:	test   BYTE PTR [ebx-0x23],ch
  40b1e6:	movlps xmm6,QWORD PTR [ecx+0x54]
  40b1ea:	jp     0x40b1ce
  40b1ec:	xchg   ebp,eax
  40b1ed:	cmp    al,BYTE PTR [ebp+0x578571c2]
  40b1f3:	xor    dh,0xa3
  40b1f6:	xchg   ebp,eax
  40b1f7:	jmp    0x40b273
  40b1f9:	mov    cl,0x3b
  40b1fb:	add    DWORD PTR [ecx+0x44],esp
  40b1fe:	xor    dh,BYTE PTR [ecx+0x8]
  40b201:	sbb    edx,edx
  40b203:	and    edx,DWORD PTR [edx-0x70]
  40b206:	push   es
  40b207:	inc    edi
  40b208:	sahf   
  40b209:	mov    esi,0xc818477b
  40b20e:	test   eax,0x5fbd5341
  40b213:	test   eax,0x13d68b7e
  40b218:	adc    al,0x8
  40b21a:	ret    0xfea5
  40b21d:	fisubr DWORD PTR [ebx-0x36]
  40b220:	add    cl,BYTE PTR [edx+0x5d]
  40b223:	fstp   st(4)
  40b225:	call   0xac5fe24f
  40b22a:	mov    esp,0x48a589e
  40b22f:	std    
  40b230:	in     eax,0x74
  40b232:	sbb    eax,0x5ef53f8a
  40b237:	aam    0xd2
  40b239:	cmp    bh,BYTE PTR [esi+0x5affe77f]
  40b23f:	mov    ds:0x84c797fe,al
  40b244:	icebp  
  40b245:	inc    edi
  40b246:	jl     0x40b1d3
  40b248:	push   0x2be9fea1
  40b24d:	fisttp WORD PTR [edx+0x134187b1]
  40b253:	mov    cl,0x13
  40b255:	sub    DWORD PTR [ebp+eax*4-0x66d61d9f],ebx
  40b25c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b25d:	jne    0x40b1f0
  40b25f:	and    BYTE PTR [ebp-0x473d078a],0x61
  40b266:	fld    QWORD PTR [ebx+0x72738b4a]
  40b26c:	dec    esi
  40b26d:	inc    ecx
  40b26e:	ror    DWORD PTR [edx-0x74a9f05],1
  40b274:	dec    ecx
  40b275:	scas   eax,DWORD PTR es:[edi]
  40b276:	jb     0x40b291
  40b278:	scas   al,BYTE PTR es:[edi]
  40b279:	dec    eax
  40b27a:	retf   0xf5af
  40b27d:	call   0xf2db:0x7c0d20c0
  40b284:	sub    esp,DWORD PTR [ebp+0x26]
  40b287:	mov    cl,0x7
  40b289:	pop    ss
  40b28a:	push   cs
  40b28b:	sub    al,BYTE PTR gs:[ebx-0x2d]
  40b28f:	jge    0x40b300
  40b291:	fst    DWORD PTR [edi]
  40b293:	pop    esi
  40b294:	mov    al,ds:0x509804da
  40b299:	inc    edi
  40b29a:	test   eax,0x5757978e
  40b29f:	sbb    BYTE PTR [edi+0x7928571f],cl
  40b2a5:	pop    esi
  40b2a6:	pusha  
  40b2a7:	addr16 push ds
  40b2a9:	(bad)  
  40b2aa:	fmul   st(0),st
  40b2ac:	cmp    ebx,esp
  40b2ae:	mov    ch,0xc7
  40b2b0:	scas   eax,DWORD PTR es:[edi]
  40b2b1:	(bad)  
  40b2b2:	loopne 0x40b264
  40b2b4:	pop    ecx
  40b2b5:	adc    bh,BYTE PTR [eax+0x5061e293]
  40b2bb:	xor    eax,0xf34c98d0
  40b2c0:	push   cs
  40b2c1:	clc    
  40b2c2:	rcl    DWORD PTR [edi+0x35],cl
  40b2c5:	loop   0x40b257
  40b2c7:	adc    eax,0x1f65d356
  40b2cc:	sub    BYTE PTR [eax+0x70412b1a],ah
  40b2d2:	data16 fisubr WORD PTR [ebp-0x7]
  40b2d6:	mov    ds:0x99bf6610,eax
  40b2db:	stos   BYTE PTR es:[edi],al
  40b2dc:	cmp    BYTE PTR [edi],0x4
  40b2df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2e0:	(bad)  
  40b2e1:	or     al,0x1b
  40b2e3:	xchg   edx,eax
  40b2e4:	icebp  
  40b2e5:	shl    BYTE PTR [ecx+0x75],0xa6
  40b2e9:	inc    esi
  40b2ea:	stc    
  40b2eb:	in     al,0xa2
  40b2ed:	or     eax,DWORD PTR [ebx-0x1ef9a467]
  40b2f3:	xor    eax,0x8d4a33d5
  40b2f8:	std    
  40b2f9:	in     al,dx
  40b2fa:	cmp    ecx,edi
  40b2fc:	add    BYTE PTR [ebx+0x15a673f1],dl
  40b302:	jb     0x40b2e6
  40b304:	in     eax,dx
  40b305:	and    BYTE PTR [edx+ecx*8-0x51],ah
  40b309:	loop   0x40b33d
  40b30b:	jmp    0x6719:0x5baeae88
  40b312:	and    ebx,ebx
  40b314:	jl     0x40b2bf
  40b316:	jae    0x40b308
  40b318:	outs   dx,BYTE PTR ds:[esi]
  40b319:	xor    al,0x40
  40b31b:	lods   eax,DWORD PTR ds:[esi]
  40b31c:	xchg   esi,eax
  40b31d:	out    0x4d,al
  40b31f:	shl    BYTE PTR [edx],1
  40b321:	dec    ecx
  40b322:	pop    edi
  40b323:	loope  0x40b390
  40b325:	mov    WORD PTR gs:[ecx-0x51],es
  40b329:	push   esp
  40b32a:	or     BYTE PTR [esi+0x70],bh
  40b32d:	fiadd  WORD PTR [edi+0x31f3eb4c]
  40b333:	aad    0x5b
  40b335:	jo     0x40b2f7
  40b337:	sahf   
  40b338:	aaa    
  40b339:	and    al,0xa3
  40b33b:	(bad)  
  40b33c:	outs   dx,DWORD PTR ds:[esi]
  40b33d:	jbe    0x40b2ff
  40b33f:	sub    al,BYTE PTR [edx+0x6ae1659b]
  40b345:	gs dec edx
  40b347:	mov    eax,0x20f38d58
  40b34c:	repnz das 
  40b34e:	xor    DWORD PTR [esi+0x40],edx
  40b351:	cmp    BYTE PTR [eax],dl
  40b353:	sbb    DWORD PTR [eax],esp
  40b355:	mov    edi,0xa7ca77b5
  40b35a:	scas   eax,DWORD PTR es:[edi]
  40b35b:	shl    BYTE PTR [ecx-0x4458fc89],cl
  40b361:	xor    ebx,DWORD PTR [esi-0x68962a5d]
  40b367:	mov    ebp,0x7acb2b1f
  40b36c:	adc    al,0x7a
  40b36e:	cmp    al,0xc0
  40b370:	add    edi,edx
  40b372:	dec    ebx
  40b373:	and    bh,BYTE PTR [esi-0x4b]
  40b376:	and    DWORD PTR [edi-0xd],ecx
  40b379:	inc    esi
  40b37a:	inc    ebx
  40b37b:	int    0xd1
  40b37d:	mov    edi,0xe7281d4d
  40b382:	sahf   
  40b383:	mov    edi,0xcbf4cd6d
  40b388:	and    al,dh
  40b38a:	div    DWORD PTR [edx-0x683a046f]
  40b390:	sub    DWORD PTR [edx+0x70],esi
  40b393:	mov    ah,BYTE PTR [eax+0xb]
  40b396:	dec    eax
  40b397:	push   edi
  40b398:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b399:	mov    ?,WORD PTR [esi-0x5fa0bc93]
  40b39f:	push   cs
  40b3a0:	bound  ebp,QWORD PTR [esi-0x37]
  40b3a3:	sbb    eax,0x174cef20
  40b3a8:	mov    DWORD PTR [edx+0x2628be61],ebx
  40b3ae:	stos   DWORD PTR es:[edi],eax
  40b3af:	inc    esi
  40b3b0:	rcr    BYTE PTR ds:0x4575965d,cl
  40b3b6:	stos   DWORD PTR es:[edi],eax
  40b3b7:	mov    edx,ecx
  40b3b9:	fcom   st(2)
  40b3bb:	(bad)  
  40b3bc:	jmp    0x40b39f
  40b3be:	xor    eax,DWORD PTR [ecx]
  40b3c0:	dec    eax
  40b3c1:	jle    0x40b384
  40b3c3:	loop   0x40b349
  40b3c5:	add    BYTE PTR [edx+0x4c],cl
  40b3c8:	inc    edx
  40b3c9:	jp     0x40b3e6
  40b3cb:	aaa    
  40b3cc:	test   al,0x1b
  40b3ce:	jle    0x40b3a1
  40b3d0:	fisttp WORD PTR [ecx-0x11]
  40b3d3:	push   ecx
  40b3d4:	xor    DWORD PTR [esi*1-0xebcdeaf],0x4d
  40b3dc:	sbb    eax,0x9aa97270
  40b3e1:	push   edx
  40b3e2:	mov    bl,0x12
  40b3e4:	jb     0x40b3a5
  40b3e6:	stos   DWORD PTR es:[edi],eax
  40b3e7:	xor    eax,0x12d1524a
  40b3ec:	and    bh,bl
  40b3ee:	jmp    0x40b43c
  40b3f0:	mov    cl,0xd0
  40b3f2:	push   edx
  40b3f3:	loopne 0x40b424
  40b3f5:	adc    ebx,DWORD PTR [edx+0xd568c5]
  40b3fb:	xchg   esi,eax
  40b3fc:	mov    edx,0x912e1b15
  40b401:	cs fcmove st,st(6)
  40b404:	sbb    edi,DWORD PTR ds:[edx-0x5d31b676]
  40b40b:	mov    bh,BYTE PTR [ecx-0xd]
  40b40e:	mov    cl,0x30
  40b410:	inc    edx
  40b411:	in     al,0x6d
  40b413:	jnp    0x40b3fd
  40b415:	sbb    al,0xc9
  40b417:	out    0x86,eax
  40b419:	retf   
  40b41a:	push   esi
  40b41b:	repz jecxz 0x40b443
  40b41e:	push   es
  40b41f:	cld    
  40b420:	dec    edx
  40b421:	jns    0x40b401
  40b423:	sub    dh,BYTE PTR [eax-0x73]
  40b426:	dec    edx
  40b427:	add    al,0x6
  40b429:	in     al,0x60
  40b42b:	aaa    
  40b42c:	enter  0xdf5f,0x41
  40b430:	mov    WORD PTR [ebx-0x28],cs
  40b433:	jne    0x40b3b7
  40b435:	pop    esi
  40b436:	mov    al,ds:0x6be8846c
  40b43b:	inc    esi
  40b43c:	push   eax
  40b43d:	cli    
  40b43e:	sahf   
  40b43f:	call   0x22a6d0c8
  40b444:	jbe    0x40b4b3
  40b446:	stos   DWORD PTR es:[edi],eax
  40b447:	fnstenv [eax-0x438c26da]
  40b44d:	cmp    al,0xc7
  40b44f:	sub    al,0x7e
  40b451:	cwde   
  40b452:	xor    esi,DWORD PTR [edi-0x32]
  40b455:	xlat   BYTE PTR ds:[ebx]
  40b456:	cmp    eax,0x95bd705a
  40b45b:	es call 0x4761:0x2d7e0b4a
  40b463:	push   es
  40b464:	mov    eax,ds:0xc7df1132
  40b469:	pop    edi
  40b46a:	int3   
  40b46b:	loope  0x40b4bd
  40b46d:	popa   
  40b46e:	aam    0x1
  40b470:	into   
  40b471:	and    al,0x11
  40b473:	cmp    DWORD PTR [eax-0x316525a],ecx
  40b479:	outs   dx,DWORD PTR ds:[esi]
  40b47a:	jl     0x40b47a
  40b47c:	in     al,0xc7
  40b47e:	(bad)  
  40b481:	sbb    ecx,DWORD PTR [eax+0x5e]
  40b484:	jmp    0xcd7a8341
  40b489:	inc    eax
  40b48a:	sub    al,0xa6
  40b48c:	lods   eax,DWORD PTR ds:[esi]
  40b48d:	push   0x3f
  40b48f:	inc    esi
  40b490:	xor    cl,bh
  40b492:	cmc    
  40b493:	mov    BYTE PTR [edx-0xd],ah
  40b496:	cmp    BYTE PTR [edx+0xf],bl
  40b499:	xchg   ebp,eax
  40b49a:	mov    ds:0xd8c6d080,al
  40b49f:	dec    edx
  40b4a0:	add    eax,0xdfaca4a4
  40b4a5:	in     al,0xb0
  40b4a7:	imul   ebx,DWORD PTR [eax+eax*1],0xb2da5328
  40b4ae:	lds    esp,FWORD PTR [edx]
  40b4b0:	stc    
  40b4b1:	add    DWORD PTR [ebp-0x73],esp
  40b4b4:	(bad)  
  40b4b5:	leave  
  40b4b6:	push   edx
  40b4b7:	adc    BYTE PTR [esi+0x38db1d35],bl
  40b4bd:	inc    eax
  40b4be:	xchg   edi,eax
  40b4bf:	inc    edi
  40b4c0:	scas   eax,DWORD PTR es:[edi]
  40b4c1:	add    DWORD PTR ds:0x6f9ee9ab,0x25
  40b4c8:	out    0xc,eax
  40b4ca:	enter  0xc21e,0x96
  40b4ce:	dec    ebp
  40b4cf:	dec    ecx
  40b4d0:	in     eax,dx
  40b4d1:	add    al,0x86
  40b4d3:	pop    ebp
  40b4d4:	retf   0xd175
  40b4d7:	sbb    al,0x6f
  40b4d9:	jp     0x40b535
  40b4db:	and    BYTE PTR [ecx+0x61],0xc4
  40b4df:	jne    0x40b4cc
  40b4e1:	cmp    BYTE PTR ds:0xb6bddfd2,dl
  40b4e7:	imul   eax,DWORD PTR ss:[ecx-0x33],0xffffff96
  40b4ec:	test   al,0x31
  40b4ee:	pop    ecx
  40b4ef:	adc    esp,DWORD PTR [esi+0x6f3f996a]
  40b4f5:	jbe    0x40b4fd
  40b4f7:	lods   al,BYTE PTR ds:[esi]
  40b4f8:	rol    BYTE PTR [edi],cl
  40b4fa:	mov    BYTE PTR [edi+0x48],0xb
  40b4fe:	push   0x69
  40b500:	xor    bl,0x10
  40b503:	or     al,0x3c
  40b505:	cmp    DWORD PTR [edx-0x3d],edx
  40b508:	push   eax
  40b509:	lods   al,BYTE PTR ds:[esi]
  40b50a:	imul   esp,edx,0xffffffea
  40b50d:	sub    DWORD PTR [edx-0x1a],edi
  40b510:	fiadd  DWORD PTR [edx]
  40b512:	xlat   BYTE PTR ds:[ebx]
  40b513:	pushf  
  40b514:	adc    cl,al
  40b516:	sbb    eax,0x694b9584
  40b51b:	imul   ecx,DWORD PTR [eax+0x1f057a30],0x671dc8f5
  40b525:	out    dx,eax
  40b526:	es inc ecx
  40b528:	shl    DWORD PTR [eax+0x5d2a3ae2],1
  40b52e:	xor    ch,BYTE PTR [edi-0x45]
  40b531:	mov    ds:0x31623b52,eax
  40b536:	mov    ds:0xf15a6e15,eax
  40b53b:	jb     0x40b505
  40b53d:	fsub   QWORD PTR [ebx+0x11]
  40b540:	inc    ebx
  40b541:	inc    ecx
  40b542:	dec    ebx
  40b543:	xor    BYTE PTR [edx+edi*8],bl
  40b546:	or     BYTE PTR [ecx+0x5],dh
  40b549:	adc    al,0xf1
  40b54b:	pop    eax
  40b54c:	pop    ss
  40b54d:	out    dx,al
  40b54e:	mov    DWORD PTR [edx-0x32],0xbe04e50c
  40b555:	sub    eax,0x392e2721
  40b55a:	sbb    ebp,edi
  40b55c:	or     ecx,DWORD PTR [ecx+0x321f5385]
  40b562:	jns    0x40b4f8
  40b564:	push   ebp
  40b565:	es ja  0x40b50c
  40b568:	fidivr DWORD PTR [ecx]
  40b56a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b56b:	dec    edi
  40b56c:	shl    cl,1
  40b56e:	sbb    al,0xb2
  40b570:	adc    bh,BYTE PTR [ecx+0x2e]
  40b573:	jbe    0x40b564
  40b575:	imul   dl
  40b577:	out    0xac,eax
  40b579:	push   ds
  40b57a:	mov    ebp,0x4eb61ed8
  40b57f:	push   ebx
  40b580:	sbb    ecx,edi
  40b582:	cmp    eax,0xd9cd8ffe
  40b587:	test   eax,0x6fff00f7
  40b58c:	xchg   edx,eax
  40b58d:	mov    al,cl
  40b58f:	pop    ss
  40b590:	xor    dl,dl
  40b592:	ins    BYTE PTR es:[edi],dx
  40b593:	jecxz  0x40b582
  40b595:	stos   BYTE PTR es:[edi],al
  40b596:	jmp    0x31ef:0x4142854b
  40b59d:	mov    al,0xee
  40b5a0:	pop    ebx
  40b5a1:	adc    ch,bh
  40b5a3:	call   0xd8830062
  40b5a8:	ds cmc 
  40b5aa:	mov    DWORD PTR [ecx],ebx
  40b5ac:	retf   
  40b5ad:	mov    es,eax
  40b5af:	mov    es,WORD PTR [edi-0x27]
  40b5b2:	lods   al,BYTE PTR ds:[esi]
  40b5b3:	xor    DWORD PTR [ebp+0x4a],edx
  40b5b6:	repnz cmp eax,esp
  40b5b9:	mov    cl,0x1e
  40b5bb:	push   es
  40b5bc:	into   
  40b5bd:	inc    edx
  40b5be:	mov    ch,0xbe
  40b5c0:	pop    ebx
  40b5c1:	adc    edx,edi
  40b5c3:	mov    al,0x55
  40b5c5:	fwait
  40b5c6:	(bad)  
  40b5c7:	fcmove st,st(5)
  40b5c9:	dec    ebp
  40b5ca:	jmp    0x841d:0xed4181b5
  40b5d1:	dec    edx
  40b5d2:	cwde   
  40b5d3:	jecxz  0x40b5c5
  40b5d5:	dec    esi
  40b5d6:	add    esp,DWORD PTR [ebp+0x26]
  40b5d9:	mov    esp,0x4bc488fd
  40b5de:	lea    ecx,[esi]
  40b5e0:	inc    edi
  40b5e1:	push   0xfffffff6
  40b5e3:	inc    edx
  40b5e4:	out    0x7c,al
  40b5e6:	dec    edx
  40b5e7:	mov    ds:0xe786e91b,al
  40b5ec:	mov    esp,0x1e4e2c65
  40b5f1:	icebp  
  40b5f2:	xchg   edx,eax
  40b5f3:	ss or  al,0x11
  40b5f6:	cmp    cl,dh
  40b5f8:	ins    BYTE PTR es:[edi],dx
  40b5f9:	cmp    cl,dh
  40b5fb:	dec    edx
  40b5fc:	cmp    ebx,ecx
  40b5fe:	jnp    0x40b5ee
  40b600:	pop    ebp
  40b601:	in     eax,dx
  40b602:	sbb    esi,DWORD PTR [edx-0x70]
  40b605:	repnz lods al,BYTE PTR ds:[esi]
  40b607:	cld    
  40b608:	sar    DWORD PTR [ecx-0x6c],1
  40b60b:	or     dh,bl
  40b60d:	xchg   ebp,eax
  40b60e:	in     al,0x4b
  40b610:	repz pop ebx
  40b612:	shl    BYTE PTR [ebx+edx*4+0x56a95aec],cl
  40b619:	jbe    0x40b5fa
  40b61b:	mov    ecx,0xe24e5f3f
  40b620:	add    eax,0xee8ac537
  40b625:	std    
  40b626:	in     eax,dx
  40b627:	or     BYTE PTR [eax-0x1d04f8d1],bl
  40b62d:	cld    
  40b62e:	out    dx,eax
  40b62f:	sub    BYTE PTR [ebx*4+0x76909a00],0x54
  40b637:	sub    BYTE PTR [ebx+0x53],bl
  40b63a:	fisubr DWORD PTR [ecx-0x1aa415fa]
  40b640:	aas    
  40b641:	jne    0x40b6a0
  40b643:	je     0x40b5ef
  40b645:	dec    esp
  40b646:	out    0x93,al
  40b648:	inc    esi
  40b649:	rcr    DWORD PTR [esi],1
  40b64b:	test   al,0xdb
  40b64d:	xor    BYTE PTR [eax],0x79
  40b650:	push   ds
  40b651:	call   0xef53:0x627779a9
  40b658:	(bad)  
  40b65a:	and    eax,DWORD PTR [eax]
  40b65c:	xchg   BYTE PTR [ebp+0x1],dh
  40b65f:	inc    ebp
  40b660:	mov    edx,eax
  40b662:	adc    DWORD PTR [ebx+0x6795e134],0x35de4327
  40b66c:	inc    edx
  40b66d:	xor    cl,BYTE PTR [eax+0x52]
  40b670:	push   es
  40b671:	shl    DWORD PTR [ebp-0x4a],0x22
  40b675:	dec    ebp
  40b676:	mov    ch,BYTE PTR [esi+0x2b]
  40b679:	jp     0x40b6af
  40b67b:	and    BYTE PTR [eax-0x79314299],bh
  40b681:	and    al,0xb3
  40b683:	sbb    eax,0xad64e874
  40b688:	pop    eax
  40b689:	ins    BYTE PTR es:[edi],dx
  40b68a:	ins    BYTE PTR es:[edi],dx
  40b68b:	(bad)  
  40b68c:	call   0x322b:0xb51a22f8
  40b693:	xchg   ecx,eax
  40b694:	sub    ecx,DWORD PTR [ecx+0x69]
  40b697:	mov    ecx,0x9b006fdd
  40b69c:	fadd   QWORD PTR [ebx+0x459258f2]
  40b6a2:	dec    BYTE PTR [edi+0xc]
  40b6a5:	and    ch,BYTE PTR [eax+0x3f6a14cb]
  40b6ab:	jne    0x40b6aa
  40b6ad:	(bad)  
  40b6ae:	nop
  40b6af:	int3   
  40b6b0:	pop    ecx
  40b6b1:	scas   eax,DWORD PTR es:[edi]
  40b6b2:	int3   
  40b6b3:	idiv   DWORD PTR [eax]
  40b6b5:	jae    0x40b6ef
  40b6b7:	push   esp
  40b6b8:	sbb    eax,0x393aa57e
  40b6bd:	sbb    DWORD PTR [ecx-0x243df575],0xd4af5286
  40b6c7:	stos   DWORD PTR es:[edi],eax
  40b6c8:	call   0x4c65:0xf0b4182e
  40b6cf:	and    al,0xc2
  40b6d1:	inc    ebp
  40b6d2:	imul   eax,DWORD PTR [ecx-0x1d],0x15
  40b6d6:	and    al,0x1b
  40b6d8:	pop    es
  40b6d9:	mov    cl,0xa5
  40b6db:	sbb    ch,BYTE PTR [edi+0x46]
  40b6de:	xor    ebp,DWORD PTR [edi-0x7f]
  40b6e1:	mov    cl,BYTE PTR [ecx]
  40b6e3:	jo     0x40b742
  40b6e5:	repnz dec ebp
  40b6e7:	sub    edi,DWORD PTR [ebx]
  40b6e9:	fst    DWORD PTR [ecx-0x16d23e87]
  40b6ef:	clc    
  40b6f0:	stos   DWORD PTR es:[edi],eax
  40b6f1:	fdiv   DWORD PTR [esi-0x1c182904]
  40b6f7:	or     dl,ch
  40b6f9:	mov    ch,0xd4
  40b6fb:	adc    BYTE PTR ds:0xb8453e1a,cl
  40b701:	out    dx,eax
  40b702:	int3   
  40b703:	lods   eax,DWORD PTR ds:[esi]
  40b704:	imul   ecx,DWORD PTR [edi-0x23],0x87fabb42
  40b70b:	or     al,0xdf
  40b70d:	test   edi,ebx
  40b70f:	jno    0x40b727
  40b711:	(bad)  
  40b712:	out    dx,al
  40b713:	jo     0x40b6ec
  40b715:	popf   
  40b716:	mov    ah,0xf9
  40b718:	cmp    eax,0x83868c2f
  40b71d:	mov    eax,ds:0xa438aae1
  40b722:	inc    ebx
  40b723:	dec    esi
  40b724:	int3   
  40b725:	xor    eax,0x22d0e45
  40b72a:	stc    
  40b72b:	stos   DWORD PTR es:[edi],eax
  40b72c:	and    DWORD PTR [esi],esi
  40b72e:	cli    
  40b72f:	add    edi,edi
  40b731:	cmc    
  40b732:	xor    eax,DWORD PTR [eax+0x71]
  40b735:	rcr    DWORD PTR [ebp-0x78],1
  40b738:	mov    ds:0xe4948818,eax
  40b73d:	into   
  40b73e:	jbe    0x40b710
  40b740:	fld    DWORD PTR [eax+0x4d]
  40b743:	bound  esi,QWORD PTR [edx-0x1a]
  40b746:	(bad)  
  40b747:	mul    dh
  40b749:	int    0xdd
  40b74b:	movntps XMMWORD PTR [edx-0x211fd5bf],xmm6
  40b752:	jg     0x40b72d
  40b754:	inc    ebp
  40b755:	test   ebp,edi
  40b757:	pop    ebp
  40b758:	cs inc esi
  40b75a:	int3   
  40b75b:	mov    al,ds:0x80f4bfa0
  40b760:	aas    
  40b761:	in     al,dx
  40b762:	add    DWORD PTR [edi],edi
  40b764:	xchg   ebp,eax
  40b765:	cld    
  40b766:	xchg   edi,eax
  40b767:	jecxz  0x40b796
  40b769:	imul   edx,DWORD PTR [edx-0x63],0x7aaebab1
  40b770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b771:	jne    0x40b70a
  40b773:	sbb    BYTE PTR [edx],ch
  40b775:	mov    al,0xab
  40b777:	mov    dl,0xa0
  40b779:	int3   
  40b77a:	sbb    BYTE PTR [edi-0x29],dl
  40b77d:	or     eax,0x5c463e5c
  40b782:	mov    edi,0x82b10fbc
  40b787:	pop    ebx
  40b788:	daa    
  40b789:	pop    esp
  40b78a:	fst    DWORD PTR [edx+0xa]
  40b78d:	jnp    0x40b780
  40b78f:	lea    ecx,[ecx+0x34]
  40b792:	into   
  40b793:	cmp    eax,0xf135c770
  40b798:	fmulp  st(1),st
  40b79a:	js     0x40b7b8
  40b79c:	mov    al,0xe1
  40b79e:	xchg   DWORD PTR [ebp+esi*1+0x10],ebx
  40b7a2:	inc    esp
  40b7a3:	xor    DWORD PTR [edi+0x14485a97],edi
  40b7a9:	sbb    eax,0x1da5d151
  40b7ae:	mov    ebx,0xb1c8f3b3
  40b7b3:	cmp    al,0x86
  40b7b5:	xchg   DWORD PTR [eax-0x236cf267],edi
  40b7bb:	enter  0xd6db,0x85
  40b7bf:	inc    ecx
  40b7c0:	gs in  al,0xf3
  40b7c3:	push   esi
  40b7c4:	push   ecx
  40b7c5:	imul   eax,DWORD PTR [edx-0x40d8c32b],0xfffffffe
  40b7cc:	out    dx,eax
  40b7cd:	mov    ebx,0xa12f0a09
  40b7d2:	cli    
  40b7d3:	mov    ds:0xb73a9612,al
  40b7d8:	rcl    DWORD PTR [ebx+0x61],0xa6
  40b7dc:	fadd   QWORD PTR [eax-0x2a]
  40b7df:	aas    
  40b7e0:	or     ebp,DWORD PTR [eax]
  40b7e2:	test   eax,0xdde13291
  40b7e7:	ins    DWORD PTR es:[edi],dx
  40b7e8:	std    
  40b7e9:	pop    edi
  40b7ea:	adc    BYTE PTR [ecx-0x72e3bf1e],cl
  40b7f0:	in     eax,0x76
  40b7f2:	cmp    DWORD PTR [ebx-0x75],ebx
  40b7f5:	lds    eax,FWORD PTR [ebx-0x66]
  40b7f8:	mov    esp,0x7601a94e
  40b7fd:	dec    ebx
  40b7fe:	dec    ebp
  40b7ff:	in     eax,dx
  40b800:	jb     0x40b7f9
  40b802:	pop    ebp
  40b803:	adc    ch,bh
  40b805:	test   eax,0xd4a0f94a
  40b80a:	mov    ah,0x18
  40b80c:	call   0x8c25d45b
  40b811:	push   ebx
  40b812:	clc    
  40b813:	jbe    0x40b83c
  40b815:	aas    
  40b816:	and    eax,0x1505a546
  40b81b:	aaa    
  40b81c:	inc    ebp
  40b81d:	or     al,0x74
  40b81f:	xchg   bh,dh
  40b821:	push   0x0
  40b823:	leave  
  40b824:	pop    ebp
  40b825:	xchg   BYTE PTR [edi],bl
  40b827:	(bad)  
  40b828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b829:	fadd   st,st(5)
  40b82b:	(bad)  
  40b82c:	xor    al,0x79
  40b82e:	pop    eax
  40b82f:	shl    DWORD PTR [edi-0x439505c3],cl
  40b835:	push   0x8686beea
  40b83a:	stc    
  40b83b:	dec    eax
  40b83c:	fisttp QWORD PTR [edx]
  40b83e:	fld    QWORD PTR [ebx-0x4f]
  40b841:	jecxz  0x40b7ea
  40b843:	jle    0x40b7f0
  40b845:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b846:	jl     0x40b7e4
  40b848:	mov    edx,0x84e74aef
  40b84d:	call   FWORD PTR [eax-0x17c5295b]
  40b853:	and    DWORD PTR [esi+0x4e],ebx
  40b856:	dec    eax
  40b857:	mov    ebp,0xe0e851f7
  40b85c:	aas    
  40b85d:	mov    DWORD PTR [ebx-0x230db2dc],edi
  40b863:	leave  
  40b864:	(bad)  
  40b865:	mov    ah,0x6d
  40b867:	fs pusha 
  40b869:	aam    0x97
  40b86b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b86c:	leave  
  40b86d:	xor    eax,DWORD PTR [ecx+0x72fb9b52]
  40b873:	call   0xfb6d8020
  40b878:	sub    dh,BYTE PTR [edi]
  40b87a:	out    0x67,eax
  40b87c:	ss das 
  40b87e:	retf   0xb05a
  40b881:	and    BYTE PTR [edi],al
  40b883:	and    ah,dl
  40b885:	xor    eax,0xdb1ad4ce
  40b88a:	das    
  40b88b:	gs sub eax,0x625e1e54
  40b891:	dec    esp
  40b892:	pop    eax
  40b893:	popf   
  40b894:	mov    ebx,DWORD PTR [ecx-0x25c93575]
  40b89a:	push   ebx
  40b89b:	ja     0x40b8f8
  40b89d:	call   0x5792:0x9e458168
  40b8a4:	mov    cl,0x54
  40b8a6:	mov    fs,ebp
  40b8a8:	and    DWORD PTR [edx-0x5b9d5ad0],esi
  40b8ae:	and    bl,BYTE PTR [ebp+0x587330a6]
  40b8b4:	popf   
  40b8b5:	stos   DWORD PTR es:[edi],eax
  40b8b6:	inc    ebp
  40b8b7:	(bad)  
  40b8b8:	(bad)  
  40b8b9:	xor    cl,bl
  40b8bb:	sbb    eax,DWORD PTR [esi]
  40b8bd:	and    dh,BYTE PTR [esi-0x70d46b3e]
  40b8c3:	retf   0x22f
  40b8c6:	mov    bh,0xc9
  40b8c8:	lods   al,BYTE PTR ds:[esi]
  40b8c9:	mov    bh,0xbb
  40b8cb:	dec    eax
  40b8cc:	ins    DWORD PTR es:[edi],dx
  40b8cd:	(bad)  
  40b8cf:	shl    BYTE PTR [eax+ebx*2+0x671dabf4],0x86
  40b8d7:	retf   
  40b8d8:	or     BYTE PTR [eax],al
  40b8da:	(bad)  
  40b8dc:	fstp   QWORD PTR [ebx+0x5]
  40b8df:	and    cl,ah
  40b8e1:	ins    DWORD PTR es:[edi],dx
  40b8e2:	sub    eax,0xb2502872
  40b8e7:	sar    DWORD PTR [eax+0x58dd93],cl
  40b8ed:	fsub   st(3),st
  40b8ef:	out    0x9d,eax
  40b8f1:	mov    ch,0x6f
  40b8f3:	nop
  40b8f4:	iret   
  40b8f5:	jae    0x40b8fa
  40b8f7:	or     DWORD PTR [edx],0x6b
  40b8fa:	es mov cs,ecx
  40b8fd:	int3   
  40b8fe:	jne    0x40b91f
  40b900:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b901:	sbb    dh,BYTE PTR [ebp+0x3c]
  40b904:	jl     0x40b8b9
  40b906:	test   al,bh
  40b908:	aaa    
  40b909:	neg    DWORD PTR [edi-0x31352742]
  40b90f:	neg    ebx
  40b911:	push   edx
  40b912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b913:	or     BYTE PTR [eax-0xe],bl
  40b916:	in     eax,dx
  40b917:	pop    ebp
  40b918:	xor    ebp,esp
  40b91a:	mov    dh,BYTE PTR [eax+edx*2+0x4d]
  40b91e:	nop
  40b91f:	aas    
  40b920:	dec    eax
  40b921:	je     0x40b95a
  40b923:	push   0x4ec0d712
  40b928:	das    
  40b929:	mov    ebp,cs
  40b92b:	fisubr DWORD PTR [esi]
  40b92d:	ins    BYTE PTR es:[edi],dx
  40b92e:	clc    
  40b92f:	(bad)  ds:0x6f73c89c
  40b935:	pop    ebx
  40b936:	ins    BYTE PTR es:[edi],dx
  40b937:	jbe    0x40b9a1
  40b939:	mov    ecx,eax
  40b93b:	and    dl,BYTE PTR ds:0x828bd032
  40b941:	test   al,0x7a
  40b943:	andps  xmm2,XMMWORD PTR ds:0xbfcdf33f
  40b94a:	imul   eax,eax,0xffffffa8
  40b94d:	mov    bl,0x97
  40b94f:	test   al,0x89
  40b951:	sub    esi,DWORD PTR [ebx]
  40b953:	xchg   ebx,eax
  40b954:	and    DWORD PTR [ebx+edx*4],0x58666fa1
  40b95b:	cmp    BYTE PTR [edi+0x9],bh
  40b95e:	lock add al,BYTE PTR [ebp-0x5ee11dbd]
  40b965:	or     BYTE PTR [esp+esi*1],dh
  40b968:	jp     0x40b986
  40b96a:	sub    DWORD PTR [ebx-0x31],ecx
  40b96d:	fsubrp st(2),st
  40b96f:	pop    esi
  40b970:	adc    eax,0x2f6b3478
  40b975:	sbb    eax,0xc3c67468
  40b97a:	aas    
  40b97b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b97c:	jl     0x40b9f6
  40b97e:	pop    es
  40b97f:	sub    dh,BYTE PTR [edx+0x56]
  40b982:	add    DWORD PTR [ebx-0x7d],0xffffffbc
  40b986:	pop    edx
  40b987:	mov    ch,0x3d
  40b989:	fst    QWORD PTR [edi-0x650cf201]
  40b98f:	add    eax,0x5b183671
  40b994:	dec    edx
  40b995:	or     ah,BYTE PTR [ebp+0x6e]
  40b998:	loop   0x40b92b
  40b99a:	pop    esp
  40b99b:	mov    cl,0x2b
  40b99d:	retf   0x7cbf
  40b9a0:	(bad)
  40b9a5:	inc    edi
  40b9a6:	add    al,BYTE PTR [ebp-0x1bc6cbcc]
  40b9ac:	and    esp,DWORD PTR [edi]
  40b9ae:	shl    DWORD PTR [ebx-0x5aa07af6],1
  40b9b4:	test   BYTE PTR [esi-0x2a],0x65
  40b9b8:	imul   edi,DWORD PTR [ecx+ebx*1],0x2f
  40b9bc:	shl    DWORD PTR [eax],0xa7
  40b9bf:	les    edx,FWORD PTR [ecx-0x2c]
  40b9c2:	addr16 aas 
  40b9c4:	xchg   ecx,eax
  40b9c5:	aad    0xb3
  40b9c7:	mov    dl,0xac
  40b9c9:	lahf   
  40b9ca:	and    bh,BYTE PTR [ebx]
  40b9cc:	cmp    eax,DWORD PTR ds:0xb65bb300
  40b9d2:	sub    esi,DWORD PTR [esi+0x64]
  40b9d5:	sahf   
  40b9d6:	xor    al,0x26
  40b9d8:	fwait
  40b9d9:	xchg   DWORD PTR [ebx-0x8],ecx
  40b9dc:	dec    edi
  40b9dd:	(bad)  
  40b9de:	fnstsw WORD PTR [edi-0x1ee4732a]
  40b9e4:	inc    ecx
  40b9e5:	pusha  
  40b9e6:	bound  esi,QWORD PTR [edx-0x6bb83a40]
  40b9ec:	(bad)  
  40b9ed:	retf   
  40b9ee:	out    dx,al
  40b9ef:	mov    dl,0x63
  40b9f1:	xchg   ebp,eax
  40b9f2:	inc    ecx
  40b9f3:	lds    esi,FWORD PTR [edx]
  40b9f5:	jge    0x40b9f5
  40b9f7:	jecxz  0x40b9df
  40b9f9:	add    edx,DWORD PTR [ebp+0x7d08fef3]
  40b9ff:	mov    ah,0xc4
  40ba01:	jno    0x40ba80
  40ba03:	hlt    
  40ba04:	ds (bad) 
  40ba06:	popf   
  40ba07:	pusha  
  40ba08:	pop    esp
  40ba09:	lods   eax,DWORD PTR ds:[esi]
  40ba0a:	inc    edi
  40ba0b:	cmp    DWORD PTR [esi+0x5f044ca4],eax
  40ba11:	pop    ebx
  40ba12:	adc    al,0x1
  40ba14:	push   ss
  40ba15:	xchg   DWORD PTR [ebx+0x4ba96417],ebx
  40ba1b:	xchg   esi,eax
  40ba1c:	add    DWORD PTR [ebp-0x7f00f01f],ecx
  40ba22:	xchg   DWORD PTR ds:0x6cfacb2d,esi
  40ba28:	dec    ecx
  40ba29:	shl    DWORD PTR [edx-0x7aa213ca],0xbb
  40ba30:	mov    eax,ds:0x1c2fe1e8
  40ba35:	push   cs
  40ba36:	cdq    
  40ba37:	fidiv  DWORD PTR [edi]
  40ba39:	cmp    al,0xf4
  40ba3b:	mov    edx,0x46b19674
  40ba40:	lods   eax,DWORD PTR ds:[esi]
  40ba41:	mov    eax,ds:0x5d5bd11a
  40ba46:	ret    0xe223
  40ba49:	les    ecx,FWORD PTR [edi-0x3ee4fc62]
  40ba4f:	ror    DWORD PTR [ecx+0x33],cl
  40ba52:	bound  eax,QWORD PTR [ebx]
  40ba54:	cli    
  40ba55:	xchg   edi,eax
  40ba56:	popf   
  40ba57:	dec    ebx
  40ba58:	push   eax
  40ba59:	dec    eax
  40ba5a:	rol    DWORD PTR [edi-0x5c],0x46
  40ba5e:	mov    eax,0xc31b2a39
  40ba63:	pop    ebp
  40ba64:	rol    DWORD PTR [ebp+ebp*1+0x12a493f9],cl
  40ba6b:	inc    eax
  40ba6c:	xchg   ebp,eax
  40ba6d:	repz aas 
  40ba6f:	xlat   BYTE PTR ds:[ebx]
  40ba70:	xor    esp,esi
  40ba72:	gs out 0x4b,eax
  40ba75:	inc    ecx
  40ba76:	and    BYTE PTR [ebp-0x5e],bh
  40ba79:	mov    al,0x10
  40ba7b:	and    ebp,DWORD PTR [ecx+0xd]
  40ba7e:	scas   al,BYTE PTR es:[edi]
  40ba7f:	or     eax,0x61f50d42
  40ba84:	push   ebx
  40ba85:	push   esp
  40ba86:	add    DWORD PTR [edx],esi
  40ba88:	test   al,0x2a
  40ba8a:	mov    DWORD PTR [edx-0x5c],esp
  40ba8d:	clc    
  40ba8e:	das    
  40ba8f:	into   
  40ba90:	cs test al,0xb5
  40ba93:	mov    bl,0xf1
  40ba95:	sbb    BYTE PTR [ecx],ch
  40ba97:	aas    
  40ba98:	mov    al,ds:0xd1ad6821
  40ba9d:	jg     0x40ba9e
  40ba9f:	mov    sp,WORD PTR [eax+0x2f]
  40baa3:	add    edx,DWORD PTR [ebx+0x255c7cc5]
  40baa9:	ret    
  40baaa:	jl     0x40bae7
  40baac:	fisubr WORD PTR [edx]
  40baae:	inc    edi
  40baaf:	dec    BYTE PTR [ebx-0x1e]
  40bab2:	mov    esi,0x64d84006
  40bab7:	imul   eax,DWORD PTR [edi-0x74e9281a],0x2f
  40babe:	adc    dh,BYTE PTR [edi+0x7b]
  40bac1:	enter  0x646,0x83
  40bac5:	push   edi
  40bac6:	cdq    
  40bac7:	jmp    0x7296da8d
  40bacc:	pop    ds
  40bacd:	int    0x8
  40bacf:	inc    edx
  40bad0:	out    dx,eax
  40bad1:	aas    
  40bad2:	cmp    eax,0x9e74c8f
  40bad7:	xor    edx,eax
  40bad9:	leave  
  40bada:	mov    esp,ecx
  40badc:	enter  0xb443,0x78
  40bae0:	aas    
  40bae1:	mov    cl,0x30
  40bae3:	add    BYTE PTR [ebp-0x32ef5971],0xf6
  40baea:	imul   eax,DWORD PTR [eax],0xaf33cf9f
  40baf0:	xor    al,0x4b
  40baf2:	jmp    0x40bab9
  40baf4:	shl    BYTE PTR [ecx],cl
  40baf6:	pop    ss
  40baf7:	ja     0x40bad5
  40baf9:	mov    edi,0x268e53d8
  40bafe:	cs sahf 
  40bb00:	push   ecx
  40bb01:	sbb    esi,0xdc53cbad
  40bb07:	xchg   DWORD PTR [ebp-0x368d330f],esi
  40bb0d:	cwde   
  40bb0e:	ficom  DWORD PTR [eax]
  40bb10:	into   
  40bb11:	sub    al,0xa3
  40bb13:	inc    ebp
  40bb14:	es fs push ss
  40bb17:	or     BYTE PTR [edi+0x57],bl
  40bb1a:	loop   0x40bb89
  40bb1c:	pop    eax
  40bb1d:	xor    ebx,DWORD PTR [edx-0xf]
  40bb20:	jb     0x40bb22
  40bb22:	cdq    
  40bb23:	jno    0x40bad4
  40bb25:	jmp    0x75ea4eeb
  40bb2a:	mov    BYTE PTR [eax-0x6f],al
  40bb2d:	in     al,0x7e
  40bb2f:	test   BYTE PTR [ebx],ch
  40bb31:	mov    al,0xbd
  40bb33:	loopne 0x40bb23
  40bb35:	push   esp
  40bb36:	mov    ebx,0x919ff1b9
  40bb3b:	loop   0x40bb99
  40bb3d:	mul    DWORD PTR [ebx]
  40bb3f:	push   esi
  40bb40:	arpl   WORD PTR [ebx],si
  40bb42:	pop    edx
  40bb43:	call   0x15fd:0xb91991d4
  40bb4a:	xor    al,0xe8
  40bb4c:	cmp    esi,eax
  40bb4e:	mov    BYTE PTR [ebp-0x5c105654],al
  40bb54:	cmp    DWORD PTR [ecx],esp
  40bb56:	mov    dh,0x44
  40bb58:	arpl   WORD PTR [edx-0x58],dx
  40bb5b:	(bad)  
  40bb5c:	out    0xec,al
  40bb5e:	stos   BYTE PTR es:[edi],al
  40bb5f:	lahf   
  40bb60:	jnp    0x40bbc0
  40bb62:	or     DWORD PTR [edx-0x1dd38806],0xebdf9f60
  40bb6c:	inc    ebx
  40bb6d:	lods   al,BYTE PTR ds:[esi]
  40bb6e:	sbb    DWORD PTR [ebp-0x4959cabd],esi
  40bb74:	mov    ch,BYTE PTR [edi-0x57]
  40bb77:	jg     0x40bb0c
  40bb79:	jp     0x40bb26
  40bb7b:	add    BYTE PTR [edi],bh
  40bb7d:	inc    esp
  40bb7e:	sub    edi,ebp
  40bb80:	in     eax,0xcd
  40bb82:	xchg   DWORD PTR [edi+0x2fd5c219],ebx
  40bb88:	shl    BYTE PTR [esi],cl
  40bb8a:	gs aad 0xe2
  40bb8d:	aam    0xce
  40bb8f:	pop    es
  40bb90:	xor    ah,BYTE PTR [edi+0x2c]
  40bb93:	lds    ecx,FWORD PTR [ecx-0x60]
  40bb96:	lods   eax,DWORD PTR ds:[esi]
  40bb97:	std    
  40bb98:	push   eax
  40bb99:	add    eax,0xd272be5d
  40bb9e:	sbb    eax,0x76967213
  40bba3:	(bad)  
  40bba4:	ds ret 
  40bba6:	sub    bx,WORD PTR [ecx-0x4e]
  40bbaa:	inc    ebp
  40bbab:	mov    ebp,0xa5c6688b
  40bbb0:	std    
  40bbb1:	sahf   
  40bbb2:	mov    edi,ebx
  40bbb4:	mov    ah,0x39
  40bbb6:	mov    eax,0x22fa5909
  40bbbb:	outs   dx,BYTE PTR ds:[esi]
  40bbbc:	or     BYTE PTR [eax+0x576894d6],0xe2
  40bbc3:	xlat   BYTE PTR ds:[ebx]
  40bbc4:	mov    BYTE PTR [edx+eax*4+0x471278cc],ch
  40bbcb:	jl     0x40bbd0
  40bbcd:	ss adc eax,0x4e6fecf7
  40bbd3:	cmp    DWORD PTR [edx],ebx
  40bbd5:	lock inc esi
  40bbd7:	jnp    0x40bbcc
  40bbd9:	enter  0x184e,0xcd
  40bbdd:	push   ds
  40bbde:	and    DWORD PTR [edx+0x6f11da1],0x706a4f23
  40bbe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbe9:	push   ebp
  40bbea:	jp     0x40bbb7
  40bbec:	adc    DWORD PTR [ecx+0x74],esp
  40bbef:	sar    DWORD PTR [edx+0x7ecbcddd],cl
  40bbf5:	aam    0x4f
  40bbf7:	test   bl,bh
  40bbf9:	xchg   esi,eax
  40bbfa:	test   BYTE PTR [edi+edi*2-0x1340c98b],dh
  40bc01:	jno    0x40bc40
  40bc03:	cli    
  40bc04:	aas    
  40bc05:	pop    edi
  40bc06:	int3   
  40bc07:	or     DWORD PTR [ecx-0x63fa5d4a],ecx
  40bc0d:	rcr    BYTE PTR [ebx+0x526f757b],cl
  40bc13:	cdq    
  40bc14:	sar    BYTE PTR [edx+0x359b008f],cl
  40bc1a:	adc    eax,0x3c485a06
  40bc1f:	fmul   QWORD PTR [ebx+0x11]
  40bc22:	pushf  
  40bc23:	and    BYTE PTR [edx-0xe],ch
  40bc26:	pop    esp
  40bc27:	push   esi
  40bc28:	cld    
  40bc29:	mov    fs,WORD PTR [edi-0x3c]
  40bc2c:	ins    DWORD PTR es:[edi],dx
  40bc2d:	sbb    edi,DWORD PTR [edx]
  40bc2f:	push   0xf4ee8655
  40bc34:	pop    es
  40bc35:	lods   eax,DWORD PTR ds:[esi]
  40bc36:	and    dl,dh
  40bc38:	dec    ebx
  40bc39:	xor    al,0x64
  40bc3b:	pop    esi
  40bc3c:	xchg   edi,eax
  40bc3d:	call   0xf93f:0x749cdf60
  40bc44:	mov    BYTE PTR [ebp+0x30],0x98
  40bc48:	adc    eax,0xab5bcc40
  40bc4d:	xor    BYTE PTR [edx+0x728c0fdb],ah
  40bc53:	invd   
  40bc55:	inc    edx
  40bc56:	(bad)  
  40bc57:	push   esp
  40bc58:	cli    
  40bc59:	sbb    dh,bl
  40bc5b:	fcmovu st,st(3)
  40bc5d:	jne    0x40bc88
  40bc5f:	mov    ebp,0xad4fae0
  40bc64:	aad    0x7f
  40bc66:	inc    edx
  40bc67:	add    al,0x5b
  40bc69:	hlt    
  40bc6a:	xchg   esp,eax
  40bc6b:	mov    esp,0x7e271f50
  40bc70:	cmp    DWORD PTR [ebx],ebp
  40bc72:	sahf   
  40bc73:	pop    esp
  40bc74:	inc    ebp
  40bc75:	(bad)  
  40bc76:	popf   
  40bc77:	jnp    0x40bc39
  40bc79:	push   esp
  40bc7a:	cmp    dh,BYTE PTR [eax+ebx*8+0x31759f56]
  40bc81:	lea    ebp,[edx+0x798a714a]
  40bc87:	add    esi,0x1
  40bc8a:	and    al,0x8d
  40bc8c:	pop    ecx
  40bc8d:	cmp    al,0x66
  40bc8f:	rcl    DWORD PTR [ebp+eiz*8-0x6710a3c2],0xd3
  40bc97:	dec    esi
  40bc98:	mov    ebp,0x79f80bbb
  40bc9d:	add    BYTE PTR [ecx],0xd
  40bca0:	ror    BYTE PTR [edx+0x50],cl
  40bca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bca4:	icebp  
  40bca5:	add    DWORD PTR [esi+0x2f957ae1],esp
  40bcab:	inc    ecx
  40bcac:	rol    BYTE PTR [ebx+0x43],0x17
  40bcb0:	push   es
  40bcb1:	fld1   
  40bcb3:	lahf   
  40bcb4:	cmp    eax,0xe2247447
  40bcb9:	ds jecxz 0x40bd0f
  40bcbc:	mov    ebp,0xcef749c0
  40bcc1:	pop    edi
  40bcc2:	mov    ds:0x3bb84469,al
  40bcc7:	adc    BYTE PTR [ecx-0x25],dh
  40bcca:	aaa    
  40bccb:	sbb    BYTE PTR [ecx+0x6edb725d],bh
  40bcd1:	test   eax,0x4b9f7d9c
  40bcd6:	bound  edx,QWORD PTR [eax+eiz*4]
  40bcd9:	sub    DWORD PTR [ecx+0x636f3d4e],ecx
  40bcdf:	or     al,0xdd
  40bce1:	add    eax,0x35d1b31c
  40bce6:	mov    ds:0xc55d54d1,al
  40bceb:	in     eax,dx
  40bcec:	out    0x54,eax
  40bcee:	loop   0x40bc97
  40bcf0:	(bad)  
  40bcf1:	sbb    eax,esi
  40bcf3:	sub    BYTE PTR [edi-0x23983df9],0xa8
  40bcfa:	retf   
  40bcfb:	push   edx
  40bcfc:	test   DWORD PTR [eax],edx
  40bcfe:	int3   
  40bcff:	jecxz  0x40bcba
  40bd01:	in     eax,dx
  40bd02:	jp     0x40bd03
  40bd04:	pop    edx
  40bd05:	lods   eax,DWORD PTR ds:[esi]
  40bd06:	sbb    bh,dh
  40bd08:	xchg   dl,dl
  40bd0a:	mov    esi,edx
  40bd0c:	dec    esi
  40bd0d:	and    ebp,eax
  40bd0f:	mov    ah,0x98
  40bd11:	div    DWORD PTR [eax+0xc45ab30]
  40bd17:	inc    esi
  40bd18:	jae    0x40bce3
  40bd1a:	rcr    DWORD PTR [eax+0x23],1
  40bd1d:	push   edi
  40bd1e:	js     0x40bd2b
  40bd20:	popf   
  40bd21:	ins    DWORD PTR es:[edi],dx
  40bd22:	(bad)  
  40bd23:	push   ss
  40bd24:	(bad)  
  40bd25:	dec    edi
  40bd26:	(bad)
  40bd2a:	mov    BYTE PTR [ecx+0x67],cl
  40bd2d:	jp     0x40bcbb
  40bd2f:	mov    bl,0x1e
  40bd31:	push   ss
  40bd32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd33:	mov    edi,DWORD PTR [eax+0x44a206b5]
  40bd39:	or     al,0xab
  40bd3b:	hlt    
  40bd3c:	jle    0x40bd8e
  40bd3e:	mov    dl,0xe4
  40bd40:	enter  0xd27e,0xbf
  40bd44:	repnz sub eax,0x39112475
  40bd4a:	sub    eax,0xf0823dc3
  40bd4f:	das    
  40bd50:	mov    ah,0x21
  40bd52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd53:	xchg   ecx,eax
  40bd54:	mov    eax,ds:0xb610e572
  40bd59:	sub    edi,DWORD PTR gs:[esi+0x62]
  40bd5d:	push   esi
  40bd5e:	mov    ecx,0xfd287368
  40bd63:	popa   
  40bd64:	aas    
  40bd65:	call   0xf05b:0x4b1e47fd
  40bd6c:	add    al,0x80
  40bd6e:	loope  0x40bde2
  40bd70:	and    ebx,DWORD PTR [esi-0x47569bdb]
  40bd76:	lea    ebx,[edx+0x7b]
  40bd79:	adc    dh,BYTE PTR ds:0x801f93b3
  40bd7f:	repnz mov bl,0x1f
  40bd82:	add    esp,esp
  40bd84:	hlt    
  40bd85:	sbb    DWORD PTR [ecx+0x54],eax
  40bd88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd89:	hlt    
  40bd8a:	arpl   WORD PTR [edi],di
  40bd8c:	pop    ebx
  40bd8d:	cmp    al,BYTE PTR [ebp+esi*1+0xd]
  40bd91:	mov    ebp,0xd15ac882
  40bd96:	pushf  
  40bd97:	cs aas 
  40bd99:	adc    ecx,DWORD PTR [esi-0x6fc130be]
  40bd9f:	jl     0x40bdb9
  40bda1:	fld    DWORD PTR [edx-0x53]
  40bda4:	aaa    
  40bda5:	add    dh,BYTE PTR [ecx+0x77]
  40bda8:	mov    eax,0x15bc563e
  40bdad:	jae    0x40bdb9
  40bdaf:	popa   
  40bdb0:	jl     0x40bde6
  40bdb2:	mov    cs,WORD PTR [ebp-0x6d4931d5]
  40bdb8:	pop    ebp
  40bdb9:	jl     0x40bd56
  40bdbb:	mov    edx,0x7cf9b38c
  40bdc0:	mov    ?,WORD PTR [eax+ebp*1-0x73c2d27a]
  40bdc7:	push   edi
  40bdc8:	les    eax,FWORD PTR [ecx]
  40bdca:	xchg   ebp,eax
  40bdcb:	int3   
  40bdcc:	sub    al,0x19
  40bdce:	and    ah,ah
  40bdd0:	jae    0x40bdbb
  40bdd2:	pusha  
  40bdd3:	xchg   ebp,eax
  40bdd4:	test   BYTE PTR [esi+0x7c],ch
  40bdd7:	clc    
  40bdd8:	loopne 0x40bd8b
  40bdda:	retf   0xa305
  40bddd:	inc    edi
  40bdde:	sbb    eax,0x630f967b
  40bde3:	adc    bh,BYTE PTR [esi+0x2c07756a]
  40bde9:	ret    0xb5f0
  40bdec:	cmp    BYTE PTR [esi],ch
  40bdee:	cmp    BYTE PTR [eax+0x54],ch
  40bdf1:	push   esi
  40bdf2:	jbe    0x40be08
  40bdf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdf5:	sub    bh,BYTE PTR [di-0x34]
  40bdf9:	mov    ah,0x1b
  40bdfb:	or     eax,0xa2afece0
  40be00:	lods   eax,DWORD PTR ds:[esi]
  40be01:	mov    BYTE PTR [si+0x5e],bl
  40be05:	mov    bh,0x5a
  40be07:	mov    ss,WORD PTR [ebx+0x4a5c8c47]
  40be0d:	pop    edi
  40be0e:	stos   DWORD PTR es:[edi],eax
  40be0f:	add    bh,BYTE PTR [esi]
  40be11:	addr16 test eax,0xf3f6ae86
  40be17:	gs cmp al,0xcb
  40be1a:	cmp    al,0xf6
  40be1c:	sub    ah,dh
  40be1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be1f:	sbb    al,0x70
  40be21:	dec    esi
  40be22:	add    bh,al
  40be24:	mov    ch,0x64
  40be26:	inc    edi
  40be27:	call   0xb093:0x84b7c491
  40be2e:	dec    ebp
  40be2f:	sub    ecx,DWORD PTR [edx]
  40be31:	inc    edi
  40be32:	dec    esi
  40be33:	mov    eax,0xfb84b2e1
  40be38:	imul   esi,eax,0x4a
  40be3b:	push   ecx
  40be3c:	and    DWORD PTR [esi-0x43],ebp
  40be3f:	inc    eax
  40be40:	inc    ebp
  40be41:	enter  0x4010,0x48
  40be45:	push   es
  40be46:	adc    ebp,edx
  40be48:	daa    
  40be49:	xchg   ah,ah
  40be4b:	dec    eax
  40be4c:	jnp    0x40beb8
  40be4e:	(bad)  
  40be4f:	addr16 push 0x2ea7d984
  40be55:	mov    al,BYTE PTR [esi-0x54]
  40be58:	push   esi
  40be59:	or     al,0xdb
  40be5b:	inc    edi
  40be5c:	sub    dh,bl
  40be5e:	popf   
  40be5f:	jge    0x40be0f
  40be61:	cmp    edx,DWORD PTR [eax+ebp*8-0x27]
  40be65:	pop    esi
  40be66:	enter  0x2a69,0xcf
  40be6a:	icebp  
  40be6b:	mov    esi,0x64b9390f
  40be70:	(bad)  
  40be71:	mov    al,0x25
  40be73:	into   
  40be74:	les    esi,FWORD PTR [edi+eax*8+0x1a]
  40be78:	jg     0x40bef8
  40be7a:	in     al,0x13
  40be7c:	pop    esp
  40be7d:	jmp    FWORD PTR [ecx]
  40be7f:	call   0xd288de4
  40be84:	retf   
  40be85:	nop
  40be86:	xor    dl,BYTE PTR [eax-0x20]
  40be89:	pop    esp
  40be8a:	push   es
  40be8b:	test   eax,0x11166f9d
  40be90:	shr    DWORD PTR [ecx+0x5de34f55],0x3c
  40be97:	stos   BYTE PTR es:[edi],al
  40be98:	jbe    0x40be35
  40be9a:	mov    eax,ds:0x65a3c79a
  40be9f:	dec    ebp
  40bea1:	adc    esi,ebx
  40bea3:	rol    bh,cl
  40bea5:	mov    ch,0x10
  40bea7:	jae    0x40beb0
  40bea9:	dec    ebx
  40beaa:	or     al,0x77
  40beac:	and    ecx,DWORD PTR [edi]
  40beae:	cmp    eax,0x860edcdf
  40beb3:	rol    DWORD PTR [ebp+eax*8+0x3d],0x6d
  40beb8:	sbb    DWORD PTR [edi-0x7440209e],0x8a3a6e29
  40bec2:	jmp    0xaa5a3636
  40bec7:	push   ebp
  40bec8:	fwait
  40bec9:	dec    esp
  40beca:	scas   eax,DWORD PTR es:[edi]
  40becb:	xor    BYTE PTR [esi+0x14],0x2
  40becf:	xchg   edx,eax
  40bed0:	(bad)  
  40bed1:	push   ebp
  40bed2:	adc    BYTE PTR [ecx],bh
  40bed4:	outs   dx,BYTE PTR ds:[esi]
  40bed5:	cwde   
  40bed6:	pusha  
  40bed7:	inc    ebx
  40bed8:	je     0x40bed5
  40beda:	jecxz  0x40bee1
  40bedc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bedd:	test   DWORD PTR [edi-0x2b],edi
  40bee0:	jno    0x40bf4a
  40bee2:	mov    fs,ebp
  40bee4:	loope  0x40bf1b
  40bee6:	aam    0x1d
  40bee8:	clc    
  40bee9:	cmp    ebp,esp
  40beeb:	xor    cl,BYTE PTR [eax+0x4d]
  40beee:	loope  0x40bebe
  40bef0:	sub    DWORD PTR ds:0x24d63e63,0x5b
  40bef7:	adc    eax,DWORD PTR [ebx-0x42]
  40befa:	enter  0x31f3,0xb2
  40befe:	ja     0x40becc
  40bf00:	imul   edi,DWORD PTR [ebx+edx*1+0x5566f9f9],0x62efc2d1
  40bf0b:	mov    ebp,0xe061588
  40bf10:	test   al,0x3b
  40bf12:	cmp    al,0x4c
  40bf14:	aas    
  40bf15:	ins    DWORD PTR es:[edi],dx
  40bf16:	in     al,dx
  40bf17:	fidiv  WORD PTR [ecx+edx*8]
  40bf1a:	or     al,0x9
  40bf1c:	shr    DWORD PTR ds:[ebx-0x6f5a3011],0xfa
  40bf24:	mov    al,0x72
  40bf26:	imul   edi,DWORD PTR [esi],0x339dc267
  40bf2c:	or     BYTE PTR [ecx],ch
  40bf2e:	adc    eax,0xb823ce86
  40bf33:	out    dx,eax
  40bf34:	sub    esi,DWORD PTR [ebx-0x939c538]
  40bf3a:	xlat   BYTE PTR ds:[ebx]
  40bf3b:	inc    eax
  40bf3c:	popf   
  40bf3d:	pop    ebp
  40bf3e:	stos   BYTE PTR es:[edi],al
  40bf3f:	mov    edi,0x5d612d5c
  40bf44:	mov    esi,0x3445e0a2
  40bf49:	retf   0x42b0
  40bf4c:	outs   dx,DWORD PTR ds:[esi]
  40bf4d:	loopne 0x40bede
  40bf4f:	rcr    BYTE PTR ds:0x6ff13f88,0x88
  40bf56:	mov    WORD PTR ds:0xed04414b,?
  40bf5c:	sub    eax,0xaa13397e
  40bf61:	push   ebx
  40bf62:	jl     0x40bf1d
  40bf64:	mov    al,ds:0x6c9c4386
  40bf69:	or     ch,dh
  40bf6b:	mov    cl,bl
  40bf6d:	inc    eax
  40bf6e:	cmp    al,0x4
  40bf70:	mov    ebx,0x330aafca
  40bf75:	les    edi,FWORD PTR [edx-0x51]
  40bf78:	mov    WORD PTR [edi+ebp*8-0x64],ds
  40bf7c:	or     eax,ecx
  40bf7e:	stos   BYTE PTR es:[edi],al
  40bf7f:	in     eax,dx
  40bf80:	push   ebp
  40bf81:	add    bl,ah
  40bf83:	pop    ds
  40bf84:	push   edx
  40bf85:	in     al,dx
  40bf86:	add    eax,0x21a660ff
  40bf8b:	test   eax,0x8c70f5e7
  40bf90:	scas   eax,DWORD PTR es:[edi]
  40bf91:	scas   eax,DWORD PTR es:[edi]
  40bf92:	xchg   esi,eax
  40bf93:	push   0x5575754
  40bf98:	mov    ebx,0x47fbc9eb
  40bf9d:	sbb    al,BYTE PTR [edx+edi*1+0x70cb470f]
  40bfa4:	in     eax,0x8e
  40bfa6:	add    al,BYTE PTR [ecx]
  40bfa8:	push   ecx
  40bfa9:	jbe    0x40bf69
  40bfab:	fisubr DWORD PTR [ecx-0x4f]
  40bfae:	mov    al,0xcc
  40bfb0:	mov    ?,WORD PTR fs:[edx+ebx*4]
  40bfb4:	(bad)  
  40bfb5:	fmul   DWORD PTR [esi-0xf]
  40bfb8:	or     eax,0x275c9fdc
  40bfbd:	fiadd  WORD PTR [ecx+edi*4+0x7ee18a23]
  40bfc4:	ret    
  40bfc5:	sar    BYTE PTR [ebp-0x3e06841a],0xdc
  40bfcc:	mov    edi,0x2026a92a
  40bfd1:	sub    eax,0xfaa03815
  40bfd6:	pop    ss
  40bfd7:	add    eax,0x42312e2f
  40bfdd:	stos   DWORD PTR es:[edi],eax
  40bfde:	fst    DWORD PTR [ebx+0x1a]
  40bfe1:	jb     0x40bf9c
  40bfe3:	jl     0x40bfab
  40bfe5:	sbb    al,0x6f
  40bfe7:	test   BYTE PTR [ecx-0x4b],dl
  40bfea:	out    dx,al
  40bfeb:	int3   
  40bfec:	or     BYTE PTR [esi],cl
  40bfee:	and    edi,0x14
  40bff1:	xor    ch,BYTE PTR [edx+0x79]
  40bff4:	sbb    ecx,ebp
  40bff6:	test   al,0x6e
  40bff8:	mov    bl,0x1f
  40bffa:	popf   
  40bffb:	push   ecx
  40bffc:	fistp  WORD PTR es:[edx-0x1b]
  40c000:	mov    dh,0x2b
  40c002:	push   esp
  40c003:	or     ch,BYTE PTR [eax-0x68b1af32]
  40c009:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c00a:	outs   dx,BYTE PTR ds:[esi]
  40c00b:	je     0x40c070
  40c00d:	sub    al,0x74
  40c00f:	loop   0x40bffb
  40c011:	(bad)  
  40c012:	mov    esi,0xdf279d1d
  40c017:	(bad)  
  40c018:	cs jnp 0x40c08b
  40c01b:	mov    dh,0xc5
  40c01d:	and    eax,0x8e88df98
  40c022:	mov    ecx,0x3e97b28c
  40c027:	mov    edx,0xb8aa2513
  40c02c:	xor    bl,BYTE PTR [esi+0x24]
  40c02f:	mov    esp,0x3c18ec50
  40c034:	scas   al,BYTE PTR es:[edi]
  40c035:	push   0x72
  40c037:	sbb    eax,0x2896917a
  40c03c:	in     al,0x83
  40c03e:	jl     0x40c0a2
  40c040:	push   0xffffffb3
  40c042:	and    edi,DWORD PTR [ebp+0x5d3fb316]
  40c048:	cwde   
  40c049:	popa   
  40c04a:	ret    0xf54f
  40c04d:	cs popa 
  40c04f:	push   ebx
  40c050:	dec    ebp
  40c051:	in     al,0xd0
  40c053:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c055:	imul   BYTE PTR [ecx+0x40576639]
  40c05b:	dec    eax
  40c05c:	in     al,dx
  40c05d:	repnz lock push ss
  40c060:	out    dx,eax
  40c061:	jg     0x40c00c
  40c063:	xchg   esp,eax
  40c064:	into   
  40c065:	jmp    0x3756:0xeee573c3
  40c06c:	jg     0x40bff1
  40c06e:	jl     0x40c08c
  40c070:	pop    ebx
  40c071:	fisttp DWORD PTR [esi+0x409caeec]
  40c077:	xlat   BYTE PTR ds:[ebx]
  40c078:	dec    ebp
  40c079:	lods   eax,DWORD PTR ds:[esi]
  40c07a:	arpl   bp,sp
  40c07c:	test   eax,0x68930109
  40c081:	mov    bl,0x60
  40c083:	add    ch,ch
  40c085:	mov    ebx,0x1d71b254
  40c08a:	pop    esp
  40c08b:	mov    ebx,0xdeef1004
  40c090:	dec    eax
  40c091:	push   es
  40c092:	clc    
  40c093:	std    
  40c094:	mov    al,ds:0xf684b518
  40c099:	push   0xffffff89
  40c09b:	stos   BYTE PTR es:[edi],al
  40c09c:	imul   edx,ebx,0x4b
  40c09f:	cmp    esp,DWORD PTR [edi+0x3f]
  40c0a2:	and    BYTE PTR [ebx+0x17],bl
  40c0a5:	and    eax,0xd8e0233
  40c0aa:	add    al,0x41
  40c0ac:	leave  
  40c0ad:	cmp    al,0x5
  40c0af:	test   al,0x91
  40c0b1:	nop
  40c0b2:	or     dl,bl
  40c0b4:	cmp    ecx,ecx
  40c0b6:	jecxz  0x40c0a7
  40c0b8:	mov    ebp,0xe65b47dd
  40c0bd:	mov    bh,0xf6
  40c0bf:	out    0x47,eax
  40c0c1:	or     al,0xff
  40c0c3:	mov    ss,edi
  40c0c5:	dec    esi
  40c0c6:	stos   BYTE PTR es:[edi],al
  40c0c7:	leave  
  40c0c8:	and    eax,0x32e4b593
  40c0cd:	fdivrp st(1),st
  40c0cf:	mov    edx,0xe5dd4191
  40c0d4:	dec    ebp
  40c0d5:	push   ebp
  40c0d6:	xchg   ebx,eax
  40c0d7:	add    eax,0x833d169d
  40c0dc:	adc    bh,BYTE PTR [eax-0x297b3ec1]
  40c0e2:	add    DWORD PTR [ebx-0x3d6bc8a5],ebp
  40c0e8:	jno    0x40c118
  40c0ea:	test   DWORD PTR [esi-0xd8c0e50],ebp
  40c0f0:	sar    al,cl
  40c0f2:	sbb    DWORD PTR ds:0xecde5088,ebp
  40c0f8:	sbb    ch,cl
  40c0fa:	fild   WORD PTR [ebx-0xee78a19]
  40c100:	retf   
  40c101:	jecxz  0x40c12c
  40c103:	mov    bl,0xd1
  40c105:	adc    bl,BYTE PTR [edi-0x1f]
  40c108:	cwde   
  40c109:	rcr    DWORD PTR [esi+esi*4-0x158be754],1
  40c110:	call   0x5841:0xb41db9b8
  40c117:	sbb    DWORD PTR [esi-0x50],ebp
  40c11a:	sbb    eax,0xa7de8c9d
  40c11f:	mov    eax,DWORD PTR [edx+ecx*2+0x27b68b5f]
  40c126:	mov    esi,0xd099e700
  40c12b:	scas   eax,DWORD PTR es:[edi]
  40c12c:	push   eax
  40c12d:	xor    al,0x43
  40c12f:	test   al,0xe8
  40c131:	rcl    BYTE PTR [edx+0x4b695f7f],1
  40c137:	or     al,al
  40c139:	ret    0x93a
  40c13c:	jmp    0x7dae4276
  40c141:	(bad)  
  40c142:	push   ebx
  40c143:	cwde   
  40c144:	popa   
  40c145:	sbb    al,0xf1
  40c147:	xchg   edx,eax
  40c148:	in     eax,0xbb
  40c14a:	fmul   st,st(6)
  40c14c:	shl    BYTE PTR [eax-0x45ce41e9],0xc1
  40c153:	or     BYTE PTR [ecx+0x119cf548],0x4
  40c15a:	aaa    
  40c15b:	shl    BYTE PTR [esp+0x1c3573c8],cl
  40c162:	adc    al,0xf9
  40c164:	adc    al,0xe2
  40c166:	repz pop edi
  40c168:	dec    ecx
  40c169:	mov    ebx,0xb5224a17
  40c16e:	haddps xmm6,XMMWORD PTR [esi]
  40c172:	mov    eax,0xce8e6ad0
  40c177:	sub    al,0x68
  40c179:	or     ebx,esp
  40c17b:	ret    0x144f
  40c17e:	ror    BYTE PTR [esi-0x703ab40],cl
  40c184:	icebp  
  40c185:	mov    bl,0xd8
  40c187:	mov    dl,0x13
  40c189:	lea    eax,[esi-0x4f]
  40c18c:	outs   dx,BYTE PTR ds:[esi]
  40c18d:	sti    
  40c18e:	hlt    
  40c18f:	dec    esp
  40c190:	test   BYTE PTR [edx-0x1b],0x13
  40c194:	inc    esi
  40c195:	(bad)  
  40c196:	in     al,0xb5
  40c198:	mov    edx,0xd5d901cb
  40c19d:	inc    ebp
  40c19e:	pop    edx
  40c19f:	cmp    BYTE PTR [ecx],bl
  40c1a1:	jecxz  0x40c19c
  40c1a3:	(bad)  [ecx]
  40c1a5:	fsub   DWORD PTR [ebx-0x4142edbd]
  40c1ab:	mov    ebp,0x74cb0756
  40c1b0:	stos   BYTE PTR es:[edi],al
  40c1b1:	cmp    al,0xc2
  40c1b3:	fucomp st(1)
  40c1b5:	mov    ds:0xb23f8805,eax
  40c1ba:	push   ds
  40c1bb:	(bad)  
  40c1bc:	iret   
  40c1bd:	inc    ecx
  40c1be:	mov    cs,esi
  40c1c0:	in     al,dx
  40c1c1:	push   0xad599557
  40c1c6:	cmp    al,0x8d
  40c1c8:	dec    esp
  40c1c9:	cmp    eax,0x1c234fcd
  40c1ce:	sti    
  40c1cf:	sahf   
  40c1d0:	lods   eax,DWORD PTR ds:[esi]
  40c1d1:	(bad)  
  40c1d2:	jno    0x40c183
  40c1d4:	mov    WORD PTR [ebp+0x248bff13],fs
  40c1da:	pop    edx
  40c1db:	cs in  al,0xc7
  40c1de:	xchg   DWORD PTR [eax+0x29],edx
  40c1e1:	int    0x72
  40c1e3:	test   eax,0x50ec7a3c
  40c1e8:	je     0x40c201
  40c1ea:	imul   edx,DWORD PTR [ecx+0x865e62a],0xb6e725ec
  40c1f4:	call   0x20d2:0x8642bdb1
  40c1fb:	outs   dx,BYTE PTR ds:[esi]
  40c1fc:	jecxz  0x40c192
  40c1fe:	imul   esi,DWORD PTR ds:0x53c2c098,0x2be360ff
  40c208:	xor    eax,0xd3c59e13
  40c20d:	mov    ds:0x125b0248,al
  40c212:	push   0xd90ea056
  40c217:	xor    ah,BYTE PTR [ebx-0x1f20e8a5]
  40c21d:	imul   ebp,DWORD PTR [esi-0x70],0x25
  40c221:	mov    al,ds:0x7a36edd5
  40c226:	xchg   ebp,eax
  40c227:	lock or DWORD PTR ds:0x81dec219,esp
  40c22e:	adc    eax,0xe7cd903a
  40c233:	push   ebp
  40c234:	dec    esi
  40c235:	inc    edi
  40c236:	xchg   esi,eax
  40c237:	pop    ecx
  40c238:	fmul   DWORD PTR [ebp+edi*2-0x46]
  40c23c:	adc    al,0xde
  40c23e:	or     ah,BYTE PTR [ebp+0x1]
  40c241:	(bad)  
  40c243:	ins    DWORD PTR es:[edi],dx
  40c244:	cli    
  40c245:	stos   DWORD PTR es:[edi],eax
  40c246:	mov    ss,WORD PTR [ebx+eiz*8]
  40c249:	cmp    ebp,DWORD PTR [edi]
  40c24b:	shl    BYTE PTR [edx-0x5226d337],0x7f
  40c252:	jnp    0x40c21b
  40c254:	and    DWORD PTR [edi+0x3],eax
  40c257:	dec    esp
  40c258:	sbb    al,BYTE PTR ds:0xde37b2f2
  40c25e:	fild   QWORD PTR ds:0xf954f031
  40c264:	enter  0x90a2,0x36
  40c268:	jbe    0x40c273
  40c26a:	lds    ecx,FWORD PTR [ecx-0x77e1b4ea]
  40c270:	enter  0xbf96,0xfc
  40c274:	pop    eax
  40c275:	retf   0x60e4
  40c278:	xor    BYTE PTR [ebx],bh
  40c27a:	sub    al,0xd2
  40c27c:	cwde   
  40c27d:	pop    edx
  40c27e:	lock mov ch,0xdd
  40c281:	jge    0x40c2e3
  40c283:	mov    ds:0x9d32a3d1,al
  40c288:	inc    ecx
  40c289:	in     al,0xe
  40c28b:	push   es
  40c28c:	fadd   QWORD PTR [esp+eiz*4]
  40c28f:	mov    esi,0x20e382bb
  40c294:	or     DWORD PTR [ebx],edi
  40c296:	sbb    eax,0xd2e5c5da
  40c29b:	and    al,0xce
  40c29d:	nop
  40c29e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c29f:	jbe    0x40c2ff
  40c2a1:	mov    cl,0x44
  40c2a3:	mov    bl,0x96
  40c2a5:	cmp    ah,BYTE PTR [eax-0x1ac2cf48]
  40c2ab:	mov    ds:0xf2629323,al
  40c2b0:	xchg   ebp,eax
  40c2b1:	mov    ebx,0x61df5470
  40c2b6:	sub    bl,BYTE PTR [ebx+edx*1+0x29dc3f2]
  40c2bd:	jnp    0x40c2e4
  40c2bf:	mov    edi,gs
  40c2c1:	(bad)  
  40c2c3:	add    eax,0x20e57f30
  40c2c8:	add    DWORD PTR [edx-0x1c82e0ed],eax
  40c2ce:	sahf   
  40c2cf:	sub    al,BYTE PTR [ebp+0x7385e307]
  40c2d5:	out    0x2b,eax
  40c2d7:	ror    DWORD PTR [ebp-0x42680745],1
  40c2dd:	mov    esp,0x80f7cf68
  40c2e2:	mov    WORD PTR [eax+0x6b86e402],ss
  40c2e8:	or     BYTE PTR [ecx+0x6a],ch
  40c2eb:	or     ch,BYTE PTR [edi+0x24]
  40c2ee:	aam    0x88
  40c2f0:	mov    bl,0x81
  40c2f2:	test   BYTE PTR [ebp-0x71],al
  40c2f5:	push   ecx
  40c2f6:	imul   edx,DWORD PTR [ecx+0x48ad8ea9],0x32
  40c2fd:	cwde   
  40c2fe:	iret   
  40c2ff:	inc    edi
  40c300:	adc    eax,0x9c5ba4d5
  40c305:	push   esi
  40c306:	mov    es,WORD PTR [ebx]
  40c308:	ret    
  40c309:	mov    ds:0x6efbccb,eax
  40c30e:	adc    al,0x89
  40c310:	out    0xfe,eax
  40c312:	ror    BYTE PTR ds:0x390bfd90,1
  40c318:	js     0x40c2b3
  40c31a:	scas   eax,DWORD PTR es:[edi]
  40c31b:	dec    esp
  40c31c:	out    dx,al
  40c31d:	pop    esi
  40c31e:	loope  0x40c368
  40c320:	ins    DWORD PTR es:[edi],dx
  40c321:	dec    esi
  40c322:	inc    edi
  40c323:	ja     0x40c378
  40c325:	std    
  40c326:	jmp    FWORD PTR [edi-0x3f]
  40c329:	std    
  40c32a:	mov    BYTE PTR [ebp-0x13],ah
  40c32d:	inc    edi
  40c32e:	mov    edi,0x3338fd73
  40c333:	pop    eax
  40c334:	sbb    eax,0xc93db06b
  40c339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c33a:	xchg   eax,esi
  40c33c:	mov    DWORD PTR [eax],edx
  40c33e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c33f:	retf   0xfaa5
  40c342:	mov    gs,WORD PTR [ecx+0x7ac4437e]
  40c348:	mov    ebx,0xb77fd8ef
  40c34d:	pop    eax
  40c34e:	popf   
  40c34f:	push   cs
  40c350:	dec    ebp
  40c351:	mov    cl,0x2b
  40c353:	xor    eax,0x50c64278
  40c358:	sbb    BYTE PTR [ebp-0x4c23a2c1],ah
  40c35e:	or     esp,DWORD PTR [ebx-0x4f48cb12]
  40c364:	mov    ebp,0x94d4af09
  40c369:	stos   BYTE PTR es:[edi],al
  40c36a:	inc    ebx
  40c36b:	dec    BYTE PTR [ecx-0x47a0c8ee]
  40c371:	mov    DWORD PTR [edi-0xe982e77],0x62671360
  40c37b:	xor    DWORD PTR [edi+0x58],eax
  40c37e:	xor    al,0xad
  40c380:	ret    0xf3d3
  40c383:	gs aad 0x9c
  40c386:	inc    esp
  40c387:	aad    0x1c
  40c389:	push   ds
  40c38a:	test   cl,ch
  40c38c:	fucom  st(5)
  40c38e:	inc    ebx
  40c38f:	(bad)  
  40c390:	jg     0x40c3d8
  40c392:	ds int3 
  40c394:	arpl   WORD PTR [ecx-0x1732a0a2],cx
  40c39a:	or     ch,bh
  40c39c:	loop   0x40c32f
  40c39e:	aad    0x4a
  40c3a0:	jb     0x40c37d
  40c3a2:	sbb    BYTE PTR ds:0x1e580a17,cl
  40c3a8:	pop    edi
  40c3a9:	mov    BYTE PTR [ebp-0x45d96387],dh
  40c3af:	sbb    BYTE PTR [eax+0x4a2adbe7],ah
  40c3b5:	mov    ch,0xd5
  40c3b7:	scas   al,BYTE PTR es:[edi]
  40c3b8:	mov    eax,ds:0x80424cc2
  40c3bd:	push   ebp
  40c3be:	ror    BYTE PTR [esp+esi*1],cl
  40c3c1:	lods   eax,DWORD PTR ds:[esi]
  40c3c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3c3:	dec    ebx
  40c3c4:	xchg   ecx,eax
  40c3c5:	mov    ebp,0xf2d4dbcb
  40c3ca:	cmc    
  40c3cb:	nop
  40c3cc:	cmp    al,0x98
  40c3ce:	clc    
  40c3cf:	ret    
  40c3d0:	xor    DWORD PTR [edi+0x3c],0xffffffe7
  40c3d4:	out    0xf8,eax
  40c3d6:	inc    ebp
  40c3d7:	sub    al,0x5a
  40c3d9:	mov    bh,0x5
  40c3db:	out    0x59,eax
  40c3dd:	pop    ds
  40c3de:	test   eax,0xf8f2d0e1
  40c3e3:	inc    DWORD PTR [edi+0x381281e5]
  40c3e9:	xchg   esp,eax
  40c3ea:	inc    edx
  40c3eb:	aas    
  40c3ec:	fwait
  40c3ed:	adc    DWORD PTR [ecx],0x5c2303f5
  40c3f3:	lods   al,BYTE PTR ds:[esi]
  40c3f4:	jmp    0xffa8:0x677f57f5
  40c3fb:	aas    
  40c3fc:	div    DWORD PTR [ecx-0x1]
  40c3ff:	int    0xea
  40c401:	xchg   edi,eax
  40c402:	pop    eax
  40c403:	fs ins BYTE PTR es:[edi],dx
  40c405:	mov    ch,0xd2
  40c407:	fwait
  40c408:	mov    ah,0xce
  40c40a:	(bad)  
  40c40b:	mov    ecx,0x546dc725
  40c410:	fwait
  40c411:	idiv   DWORD PTR [ebx-0x74]
  40c414:	add    bh,BYTE PTR [esi-0x3dd5b898]
  40c41a:	ss fldcw WORD PTR ss:[ecx]
  40c41e:	iret   
  40c41f:	and    DWORD PTR ds:0xd578afeb,esi
  40c425:	nop
  40c426:	mov    ecx,0xb81994ba
  40c42b:	ja     0x40c3b9
  40c42d:	sahf   
  40c42e:	call   0xfe0cc976
  40c433:	imul   ecx,eax,0x2c
  40c436:	xor    DWORD PTR [eax],ebp
  40c438:	cli    
  40c439:	mov    ch,0x22
  40c43b:	loop   0x40c40f
  40c43d:	or     DWORD PTR [eax],edx
  40c43f:	pop    edi
  40c440:	pop    ecx
  40c441:	mov    al,al
  40c443:	mov    dl,0x74
  40c445:	push   ss
  40c446:	imul   ebp,eax,0x8d43a471
  40c44c:	push   0x7c40400d
  40c451:	aad    0xc0
  40c453:	ds in  eax,dx
  40c455:	jbe    0x40c40a
  40c457:	dec    eax
  40c458:	xor    eax,0x7d5ad606
  40c45d:	push   eax
  40c45e:	fiadd  DWORD PTR [ecx-0x4fc808c6]
  40c464:	pushf  
  40c465:	add    eax,0x9c4cd401
  40c46a:	daa    
  40c46b:	xchg   ebp,eax
  40c46c:	xlat   BYTE PTR ds:[ebx]
  40c46d:	xor    al,0x9d
  40c46f:	pop    ebx
  40c470:	dec    edx
  40c471:	and    eax,0x583a46ae
  40c476:	out    0x1a,eax
  40c478:	in     al,dx
  40c479:	push   cs
  40c47a:	ret    0xe38f
  40c47d:	jmp    0x1f5df84f
  40c482:	dec    edx
  40c483:	xor    eax,0xdc84aa1a
  40c488:	and    edi,esi
  40c48a:	jl     0x40c467
  40c48c:	or     DWORD PTR [edx+0x7354314d],edx
  40c492:	test   al,0x4e
  40c494:	stos   BYTE PTR es:[edi],al
  40c495:	ret    0x95d7
  40c498:	lds    esi,FWORD PTR [ecx+0x20f91c36]
  40c49e:	dec    edi
  40c49f:	xor    al,BYTE PTR [esi]
  40c4a1:	sub    ebp,DWORD PTR [edi-0x6abbc585]
  40c4a7:	pop    ss
  40c4a8:	adc    BYTE PTR [ecx-0x33e0752],dl
  40c4ae:	rol    DWORD PTR [edx+0xe],0x30
  40c4b2:	cwde   
  40c4b3:	mov    al,ds:0xf11749a1
  40c4b8:	and    DWORD PTR [ecx-0x79],eax
  40c4bb:	fwait
  40c4bc:	aaa    
  40c4bd:	test   BYTE PTR [ebp-0x7babea82],0xd9
  40c4c4:	lds    esi,FWORD PTR [ecx]
  40c4c6:	ins    BYTE PTR es:[edi],dx
  40c4c7:	adc    cl,BYTE PTR [edx]
  40c4c9:	ja     0x40c4a9
  40c4cb:	loop   0x40c4d9
  40c4cd:	(bad)  
  40c4ce:	xlat   BYTE PTR ds:[ebx]
  40c4cf:	js     0x40c45b
  40c4d1:	cmp    dh,BYTE PTR [eax+0xaaf343f]
  40c4d7:	mov    cl,0x9b
  40c4d9:	xor    al,0xac
  40c4db:	outs   dx,BYTE PTR ds:[esi]
  40c4dc:	push   ds
  40c4dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4de:	jae    0x40c46e
  40c4e0:	xchg   esp,ebx
  40c4e2:	cmp    al,0x51
  40c4e4:	jb     0x40c4c3
  40c4e6:	inc    esi
  40c4e7:	xchg   ecx,eax
  40c4e8:	mov    ds,edi
  40c4ea:	ja     0x40c4fb
  40c4ec:	adc    ah,BYTE PTR [esi]
  40c4ee:	push   esi
  40c4ef:	mov    esp,?
  40c4f1:	adc    ecx,DWORD PTR [edx-0x75d2e24e]
  40c4f7:	adc    eax,0xec8f8ef1
  40c4fc:	jns    0x40c4f9
  40c4fe:	inc    esp
  40c4ff:	xchg   DWORD PTR [eax+0x42],ecx
  40c502:	adc    al,0xc4
  40c504:	test   BYTE PTR [edi+0x2a48926a],cl
  40c50a:	icebp  
  40c50b:	cmc    
  40c50c:	pop    edx
  40c50d:	sti    
  40c50e:	aam    0x64
  40c510:	push   ecx
  40c511:	push   ebp
  40c512:	sbb    DWORD PTR [edx-0x6d105a1f],0xd12113e6
  40c51c:	jp     0x40c568
  40c51e:	cwde   
  40c51f:	mov    dl,0x2e
  40c521:	jae    0x40c50b
  40c523:	dec    ebx
  40c524:	fs jmp 0xdbcd9481
  40c52a:	pop    ebp
  40c52b:	dec    edx
  40c52c:	cmc    
  40c52d:	shl    DWORD PTR [edi+0x2b],0x4e
  40c531:	stos   DWORD PTR es:[edi],eax
  40c532:	mov    ?,ebx
  40c534:	loopne 0x40c4db
  40c536:	adc    eax,0x95797b5e
  40c53b:	jmp    0x821eae63
  40c540:	loopne 0x40c52b
  40c542:	sbb    DWORD PTR [ebx],ebp
  40c544:	(bad)  
  40c545:	shr    ah,0x74
  40c548:	(bad)  
  40c549:	cmp    eax,0x712af72f
  40c54e:	mov    ah,BYTE PTR [edx+0x58d4cb52]
  40c554:	ds aas 
  40c556:	fwait
  40c557:	imul   DWORD PTR [edi]
  40c559:	test   DWORD PTR [ebp+eax*8-0x5a],ecx
  40c55d:	or     al,0x17
  40c55f:	push   ecx
  40c560:	xchg   esp,eax
  40c561:	push   ebp
  40c562:	addr16 test esp,esi
  40c565:	inc    esi
  40c566:	fs into 
  40c568:	mov    ebx,0xfc7159c
  40c56d:	sub    eax,0x1bd99464
  40c572:	out    0x2d,eax
  40c574:	retf   0xc78e
  40c577:	repz es je 0x40c5ef
  40c57b:	jle    0x40c51a
  40c57d:	push   eax
  40c57e:	jne    0x40c506
  40c580:	sub    esp,ebx
  40c582:	and    al,0x2c
  40c584:	and    eax,0xf6104606
  40c589:	dec    eax
  40c58a:	inc    ecx
  40c58b:	mov    edi,0x1f3bae7
  40c590:	fsub   QWORD PTR [eax+edx*2]
  40c593:	adc    ah,al
  40c595:	pop    edi
  40c596:	cmp    BYTE PTR [esi],al
  40c598:	mov    eax,0xed690e5a
  40c59d:	in     eax,0x5d
  40c59f:	and    cl,cl
  40c5a1:	call   0xcddf:0x88ef9222
  40c5a8:	js     0x40c59a
  40c5aa:	outs   dx,BYTE PTR ds:[esi]
  40c5ab:	add    DWORD PTR [esi],esi
  40c5ad:	ds rcr esi,1
  40c5b0:	and    eax,0x82acd804
  40c5b5:	rcr    DWORD PTR [ecx-0x5753ba31],0xcf
  40c5bc:	xchg   ebx,eax
  40c5bd:	test   eax,0x2e1a2c6e
  40c5c2:	push   cs
  40c5c3:	arpl   WORD PTR [esi+0x70cb3ddb],bx
  40c5c9:	sub    al,BYTE PTR [ebp+0xf811d25]
  40c5cf:	hlt    
  40c5d0:	lods   al,BYTE PTR ds:[esi]
  40c5d1:	hlt    
  40c5d2:	mov    BYTE PTR [edi-0x73],ah
  40c5d5:	shl    DWORD PTR [ebx-0x71],cl
  40c5d8:	mov    cl,0x3f
  40c5da:	popa   
  40c5db:	pop    eax
  40c5dc:	push   esi
  40c5dd:	outs   dx,DWORD PTR ds:[esi]
  40c5de:	fmul   QWORD PTR [esi+0xea88836]
  40c5e4:	sub    DWORD PTR ds:0x5c2a15c7,edx
  40c5ea:	and    ecx,DWORD PTR [ebp-0x69422ddb]
  40c5f0:	jle    0x40c650
  40c5f2:	xor    al,0x5
  40c5f4:	(bad)  
  40c5f5:	mov    ebx,0x3ead9554
  40c5fa:	test   eax,0xc0de135d
  40c5ff:	pop    ecx
  40c600:	test   eax,0x70083e54
  40c605:	and    dh,al
  40c607:	xchg   esp,eax
  40c608:	pushf  
  40c609:	inc    eax
  40c60a:	(bad)  
  40c60b:	adc    edx,eax
  40c60d:	push   ebx
  40c60e:	mov    DWORD PTR [edx+0x838121f],edx
  40c614:	out    dx,eax
  40c615:	pop    edx
  40c616:	mov    edx,0xbf44391a
  40c61b:	or     ecx,DWORD PTR [edi-0x5adba1ce]
  40c621:	in     al,0x36
  40c623:	inc    ebx
  40c624:	lock repz popf 
  40c627:	push   0xfffffff4
  40c629:	and    eax,0x5cb7fd30
  40c62e:	sahf   
  40c62f:	in     eax,0x6a
  40c631:	stc    
  40c632:	inc    edi
  40c633:	shl    BYTE PTR [ebx+ebx*2-0x44032fcd],cl
  40c63a:	out    dx,al
  40c63b:	mov    dl,0x5d
  40c63d:	stos   DWORD PTR es:[edi],eax
  40c63e:	(bad)  [ebx-0x44]
  40c641:	data16 mov dl,0x26
  40c644:	dec    eax
  40c645:	sub    dh,BYTE PTR [edi]
  40c647:	in     al,0xcf
  40c649:	ds addr16 icebp 
  40c64c:	jg     0x40c619
  40c64e:	test   BYTE PTR [ebp+0x19],bl
  40c651:	push   0x7818b3fe
  40c656:	jae    0x40c6bc
  40c658:	cld    
  40c659:	add    ebx,DWORD PTR [edi+0x7c]
  40c65c:	test   BYTE PTR [esi+0x5deebd61],dh
  40c662:	sub    eax,0x87a8aa7a
  40c667:	mov    eax,ds:0x88e801c2
  40c66c:	jle    0x40c6ad
  40c66e:	push   ss
  40c66f:	xor    edx,DWORD PTR [edi+0x7ab0b69a]
  40c675:	mov    edx,0xe271b5e0
  40c67a:	jmp    0x2ac5:0x106f9a77
  40c681:	loope  0x40c67f
  40c683:	push   eax
  40c684:	loop   0x40c6db
  40c686:	out    0xf3,eax
  40c688:	retf   
  40c689:	mov    eax,0x954b32f3
  40c68e:	into   
  40c68f:	lods   al,BYTE PTR ds:[esi]
  40c690:	out    0x25,al
  40c692:	jnp    0x40c644
  40c694:	scas   eax,DWORD PTR es:[edi]
  40c695:	push   ss
  40c696:	xor    eax,0x1884cb4c
  40c69b:	push   ds
  40c69c:	and    BYTE PTR [edx+0x6],bh
  40c69f:	mov    edx,?
  40c6a1:	lods   eax,DWORD PTR ds:[esi]
  40c6a2:	cwde   
  40c6a3:	dec    edx
  40c6a4:	push   edx
  40c6a5:	scas   eax,DWORD PTR es:[di]
  40c6a7:	push   es
  40c6a8:	enter  0x1bbe,0x9d
  40c6ac:	mov    ah,0x37
  40c6ae:	mov    ebx,0x376a7232
  40c6b3:	add    ecx,esp
  40c6b5:	ret    0xa6ac
  40c6b8:	mov    dh,0xbb
  40c6ba:	call   0xba09:0x864cf893
  40c6c1:	ins    BYTE PTR es:[edi],dx
  40c6c2:	or     BYTE PTR [edx-0x6b8001e0],cl
  40c6c8:	into   
  40c6c9:	and    dl,0x7e
  40c6cc:	cmp    edi,DWORD PTR [ecx+eax*2-0x35656f72]
  40c6d3:	add    ebp,DWORD PTR [edx]
  40c6d5:	inc    eax
  40c6d6:	fisubr WORD PTR [ebx+0x7a50d153]
  40c6dc:	mov    bh,BYTE PTR [edi+esi*8+0x27e95120]
  40c6e3:	arpl   WORD PTR [esi-0x6ce54f41],bx
  40c6e9:	mov    cl,BYTE PTR [ebx+0x6ba29d50]
  40c6ef:	icebp  
  40c6f0:	and    cl,BYTE PTR es:[ebx]
  40c6f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6f4:	ins    BYTE PTR es:[edi],dx
  40c6f5:	jnp    0x40c68b
  40c6f7:	push   esp
  40c6f8:	mov    ch,0x7
  40c6fa:	fcomp  DWORD PTR [edi]
  40c6fc:	stos   BYTE PTR es:[edi],al
  40c6fd:	jb     0x40c755
  40c6ff:	xchg   esi,eax
  40c700:	sub    BYTE PTR [esi+0x6e],0x3c
  40c704:	mov    al,0xb
  40c706:	pop    esi
  40c707:	xor    BYTE PTR [edx-0x41],dl
  40c70a:	or     ecx,DWORD PTR [esi+edi*2]
  40c70d:	add    eax,0xe7a2edb1
  40c712:	push   edx
  40c713:	dec    ebx
  40c714:	stos   BYTE PTR es:[edi],al
  40c715:	test   DWORD PTR [edi],edi
  40c717:	test   BYTE PTR [ecx+0x24],cl
  40c71a:	mov    ecx,0xdc9da0ee
  40c71f:	inc    ebp
  40c720:	pop    eax
  40c721:	ret    
  40c722:	stos   DWORD PTR es:[edi],eax
  40c723:	mov    ds:0x2bcf6409,eax
  40c728:	push   ss
  40c729:	mov    ebp,0x13a31186
  40c72e:	jle    0x40c7a5
  40c730:	dec    ecx
  40c731:	pusha  
  40c732:	sbb    eax,0x85d8f420
  40c737:	push   ebp
  40c738:	aad    0xe9
  40c73a:	ja     0x40c706
  40c73c:	mov    ebx,0x87b5e53a
  40c741:	pop    esp
  40c742:	and    eax,0x830a09b0
  40c747:	push   ss
  40c748:	retf   0xa0fb
  40c74b:	retf   0x604
  40c74e:	lock and al,0x4a
  40c751:	push   es
  40c752:	mov    dl,0x73
  40c754:	xchg   edi,eax
  40c755:	icebp  
  40c756:	cld    
  40c757:	xchg   BYTE PTR ds:0x41c2e1c6,bh
  40c75d:	inc    esp
  40c75e:	dec    eax
  40c75f:	dec    edx
  40c760:	iret   
  40c761:	cmc    
  40c762:	mov    bl,BYTE PTR [eax]
  40c764:	push   0x7e089aca
  40c769:	mov    edi,0x64b12ee6
  40c76e:	pop    esp
  40c76f:	sbb    esi,DWORD PTR [ebp+0x216ec99]
  40c775:	jmp    0xb71dfd69
  40c77a:	pushf  
  40c77b:	pop    ebx
  40c77c:	or     al,0x3c
  40c77e:	out    0x74,eax
  40c780:	or     DWORD PTR [ecx-0x3c],0xffffff82
  40c784:	lods   eax,DWORD PTR ds:[esi]
  40c785:	xor    al,0x17
  40c787:	or     eax,0x9457c62b
  40c78c:	pop    es
  40c78d:	adc    al,0x72
  40c78f:	cmp    DWORD PTR [ecx-0x724a2d1],esp
  40c795:	and    DWORD PTR [edi-0x607a6696],esp
  40c79b:	jl     0x40c729
  40c79d:	test   eax,0x9c1033af
  40c7a2:	mov    eax,ds:0xb1f44b28
  40c7a7:	jp     0x40c7f5
  40c7a9:	push   edi
  40c7aa:	or     eax,0xf7cb3ec3
  40c7af:	dec    esp
  40c7b0:	push   ebp
  40c7b1:	and    al,0xbe
  40c7b3:	add    BYTE PTR [esi+0xad73e87],dh
  40c7b9:	sbb    edi,ebp
  40c7bb:	push   0x79
  40c7bd:	xchg   ecx,eax
  40c7be:	nop
  40c7bf:	sbb    BYTE PTR [eax],bl
  40c7c1:	cmc    
  40c7c2:	lods   al,BYTE PTR ds:[esi]
  40c7c3:	test   DWORD PTR [ebx+0x1e],ebx
  40c7c6:	mov    ch,0xd6
  40c7c8:	out    0x6d,al
  40c7ca:	push   esp
  40c7cb:	sub    ch,BYTE PTR [ebp+0x7a2efd5]
  40c7d1:	push   ss
  40c7d2:	fcom   QWORD PTR [eax-0x672fcfd9]
  40c7d8:	ror    esp,1
  40c7da:	pop    ebp
  40c7db:	sbb    eax,esp
  40c7dd:	mov    edi,0xb308cd04
  40c7e2:	dec    edx
  40c7e3:	stos   DWORD PTR es:[edi],eax
  40c7e4:	aam    0x2b
  40c7e6:	(bad)  
  40c7e7:	aaa    
  40c7e8:	aad    0xb
  40c7ea:	dec    ecx
  40c7eb:	test   BYTE PTR [ebp-0x50],bh
  40c7ee:	cs ds push ebp
  40c7f1:	xlat   BYTE PTR ds:[ebx]
  40c7f2:	dec    esi
  40c7f3:	dec    edx
  40c7f4:	pop    ss
  40c7f5:	or     bh,dh
  40c7f7:	or     al,0xf7
  40c7f9:	jge    0x40c7b5
  40c7fb:	int    0xda
  40c7fd:	add    BYTE PTR [edi],bh
  40c7ff:	inc    edx
  40c800:	test   eax,0xb3f6983
  40c805:	je     0x40c83f
  40c807:	xor    cl,BYTE PTR [eax+0x4e]
  40c80a:	(bad)  
  40c80b:	pop    ebp
  40c80c:	or     bl,dl
  40c80e:	int3   
  40c80f:	mov    eax,0xcfac56d2
  40c814:	or     BYTE PTR [esp+0x6f],cl
  40c818:	(bad)  
  40c819:	cmp    al,0x7c
  40c81b:	mov    dh,BYTE PTR [ebx+0x6e796b5d]
  40c821:	aas    
  40c822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c823:	push   edx
  40c824:	fstp   TBYTE PTR [edx+0x78]
  40c827:	push   ss
  40c828:	addr16 into 
  40c82a:	jmp    0x40c7b1
  40c82c:	repnz ds mov edx,0xf86d16ca
  40c833:	iret   
  40c834:	inc    edi
  40c835:	push   esi
  40c836:	push   0x2270b3e4
  40c83b:	sub    DWORD PTR [edx],0xffffff91
  40c83e:	xor    ebp,edx
  40c840:	push   0xffffffa7
  40c842:	int    0x91
  40c844:	or     eax,0xed6b729e
  40c849:	mov    edi,0x43782cee
  40c84e:	pop    eax
  40c84f:	(bad)  
  40c850:	push   eax
  40c851:	pop    ebp
  40c852:	je     0x40c8c1
  40c854:	(bad)  
  40c855:	adc    eax,0x558c77b4
  40c85a:	ret    0x7cf
  40c85d:	add    esi,esp
  40c85f:	mov    ah,0x53
  40c861:	mov    dh,0x2e
  40c863:	call   0x2d3e4cc8
  40c868:	dec    ebp
  40c869:	mov    DWORD PTR [eax-0x3adfd503],eax
  40c86f:	aad    0x39
  40c871:	adc    BYTE PTR [eax-0x1cae6c65],bl
  40c877:	mov    al,ds:0x53bd836d
  40c87c:	aas    
  40c87d:	xchg   ecx,eax
  40c87e:	inc    eax
  40c87f:	mov    esp,eax
  40c881:	sub    ebp,0xee813a85
  40c887:	in     al,dx
  40c888:	es jle 0x40c844
  40c88b:	dec    eax
  40c88c:	retf   0x4cad
  40c88f:	mov    ecx,DWORD PTR [ebp+0x46]
  40c892:	aam    0x43
  40c894:	jno    0x40c8b0
  40c896:	mul    DWORD PTR [eax]
  40c898:	lock in al,dx
  40c89a:	enter  0x3cc9,0xe2
  40c89e:	aas    
  40c89f:	or     eax,DWORD PTR [ecx]
  40c8a1:	sti    
  40c8a2:	sahf   
  40c8a3:	sbb    eax,0x5cd6ba93
  40c8a8:	clc    
  40c8a9:	jle    0x40c866
  40c8ab:	or     al,0x65
  40c8ad:	cwde   
  40c8ae:	push   ebx
  40c8af:	sbb    bh,BYTE PTR [edx-0x44c36881]
  40c8b5:	jecxz  0x40c854
  40c8b7:	outs   dx,DWORD PTR ds:[esi]
  40c8b8:	cmp    DWORD PTR [eax-0x78],ecx
  40c8bb:	fwait
  40c8bc:	pop    es
  40c8bd:	adc    al,0xce
  40c8bf:	mov    edx,0x8095fe4c
  40c8c4:	ret    
  40c8c5:	(bad)  
  40c8c6:	or     BYTE PTR [eax+eiz*8-0x7a],bl
  40c8ca:	push   ax
  40c8cc:	bound  edx,QWORD PTR [edi+0x6109407f]
  40c8d2:	aad    0xa5
  40c8d4:	add    edi,DWORD PTR ds:0x1857ba57
  40c8da:	ins    BYTE PTR es:[edi],dx
  40c8db:	or     edx,DWORD PTR [eax+esi*2-0x71]
  40c8df:	mov    ch,0xca
  40c8e1:	xchg   ebp,eax
  40c8e2:	xor    BYTE PTR [esi],dh
  40c8e4:	mov    cl,0x26
  40c8e6:	mov    BYTE PTR [edx-0x24],cl
  40c8e9:	clc    
  40c8ea:	and    al,BYTE PTR [ebp+0x25]
  40c8ed:	ds cld 
  40c8ef:	shl    al,1
  40c8f1:	sahf   
  40c8f2:	out    dx,al
  40c8f3:	inc    edi
  40c8f4:	sahf   
  40c8f5:	mov    al,ds:0x24bd93a3
  40c8fa:	mov    esi,0x15d185b5
  40c8ff:	jl     0x40c88a
  40c901:	repz push esp
  40c903:	push   cs
  40c904:	outs   dx,DWORD PTR ds:[esi]
  40c905:	sbb    eax,0xeef59d60
  40c90a:	jns    0x40c933
  40c90c:	(bad)  
  40c90d:	xchg   esp,eax
  40c90e:	add    cl,BYTE PTR [edx]
  40c910:	pop    edi
  40c911:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c912:	mov    ebx,0x5eb3acdd
  40c917:	cmp    BYTE PTR [ebp+0x79da53ae],0x68
  40c91e:	aam    0xcf
  40c920:	loope  0x40c97f
  40c922:	lods   al,BYTE PTR ds:[esi]
  40c923:	les    ebp,FWORD PTR [ebx-0x41]
  40c926:	lahf   
  40c927:	rcr    BYTE PTR [ecx],cl
  40c929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c92a:	mov    esp,0x71eea93a
  40c92f:	icebp  
  40c930:	mov    ds:0xa9936bd4,al
  40c935:	cmp    BYTE PTR [esi-0x3f55e1c7],0xd3
  40c93c:	ret    
  40c93d:	cwde   
  40c93e:	mov    DWORD PTR [eax-0x1590e440],ecx
  40c944:	leave  
  40c945:	fild   WORD PTR [eax+eiz*8+0x33]
  40c949:	inc    eax
  40c94a:	in     al,dx
  40c94b:	stc    
  40c94c:	add    DWORD PTR [edi+eiz*8+0x7],ebx
  40c950:	int3   
  40c951:	mov    dl,0x99
  40c953:	cmp    al,0xec
  40c955:	and    ch,BYTE PTR [eax-0x3d]
  40c958:	mov    ebx,0x1b8bddf
  40c95d:	push   ss
  40c95e:	mov    edx,0x61ef847a
  40c963:	ret    0x1154
  40c966:	hlt    
  40c967:	adc    esp,ebp
  40c969:	mov    eax,0x11283531
  40c96e:	push   0xffffffc7
  40c970:	(bad)  
  40c971:	in     al,0x72
  40c973:	shr    bh,cl
  40c975:	leave  
  40c976:	sahf   
  40c977:	(bad)  
  40c978:	jno    0x40c8fb
  40c97a:	inc    edx
  40c97b:	mov    WORD PTR [ebx-0x619d8c35],?
  40c981:	cmp    eax,0x3314bf4a
  40c986:	loope  0x40c982
  40c988:	xchg   DWORD PTR ds:0x34008d66,ebx
  40c98e:	dec    edx
  40c98f:	sbb    eax,0xbb7527e1
  40c994:	enter  0xa8e5,0x8b
  40c998:	mov    al,ds:0x1484f430
  40c99d:	sub    eax,0xd146c0e0
  40c9a2:	imul   DWORD PTR [edx+0x69]
  40c9a5:	ss leave 
  40c9a7:	ins    BYTE PTR es:[edi],dx
  40c9a8:	cli    
  40c9a9:	test   eax,0x91a66d7a
  40c9ae:	(bad)  
  40c9af:	sbb    DWORD PTR [ecx-0x65],eax
  40c9b2:	repz xor BYTE PTR [edx+0x79],dl
  40c9b6:	xchg   esi,eax
  40c9b7:	std    
  40c9b8:	lea    edx,[edi-0x1c]
  40c9bb:	push   0x4e55b26f
  40c9c0:	xor    eax,0xa1ff5934
  40c9c5:	and    BYTE PTR [edi+0x1da83a89],dl
  40c9cb:	ror    ch,0xa0
  40c9ce:	dec    esi
  40c9cf:	rcl    BYTE PTR ds:0x77d3dc0f,cl
  40c9d5:	(bad)  
  40c9d6:	jmp    0xb2171238
  40c9db:	sub    ebp,DWORD PTR [si+0x28]
  40c9df:	cmp    esi,DWORD PTR [ebx-0x72ca060e]
  40c9e5:	outs   dx,DWORD PTR ds:[esi]
  40c9e6:	add    cl,ch
  40c9e8:	lock pop ebx
  40c9ea:	fwait
  40c9eb:	sbb    ecx,DWORD PTR [esi-0x11]
  40c9ee:	mov    WORD PTR [ebx+0x4e],fs
  40c9f1:	pop    ss
  40c9f2:	fwait
  40c9f3:	gs cmp al,0xd9
  40c9f6:	fidiv  WORD PTR [edx-0x762427b6]
  40c9fc:	adc    eax,0xa19768d4
  40ca01:	in     eax,dx
  40ca02:	loop   0x40ca00
  40ca04:	sbb    ebp,DWORD PTR [edi+0x52]
  40ca07:	jmp    0x2fd2d77
  40ca0c:	xor    DWORD PTR [ecx-0x5b],0xc26fa142
  40ca13:	dec    eax
  40ca14:	jl     0x40c99a
  40ca16:	in     eax,dx
  40ca17:	inc    ecx
  40ca18:	sbb    BYTE PTR [edi],bh
  40ca1a:	xor    DWORD PTR ds:0x7e51e0b7,0xffffffa6
  40ca21:	dec    esp
  40ca22:	push   ebp
  40ca23:	cmp    al,0xd9
  40ca25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca26:	and    al,0xea
  40ca28:	sbb    dl,BYTE PTR [edx+0x7b091a13]
  40ca2e:	(bad)  [ebx+0x62bc14e8]
  40ca34:	mov    cl,0xa7
  40ca36:	xor    ch,BYTE PTR [edi+0x1285f556]
  40ca3c:	inc    edi
  40ca3d:	xor    BYTE PTR [edi-0x491741c8],cl
  40ca43:	stos   DWORD PTR es:[edi],eax
  40ca44:	scas   eax,DWORD PTR es:[edi]
  40ca45:	xor    DWORD PTR [ebx+0x48219cf5],0x1cfe831e
  40ca4f:	push   0x7229514e
  40ca54:	pop    ds
  40ca55:	mov    dl,0xf9
  40ca57:	pushf  
  40ca58:	pop    esp
  40ca59:	xchg   edx,eax
  40ca5a:	call   0xdfd8df56
  40ca5f:	add    al,0x45
  40ca61:	or     dl,BYTE PTR [ebx]
  40ca63:	fsubr  DWORD PTR [ecx+0x310fa07]
  40ca69:	enter  0x99a5,0x18
  40ca6d:	pusha  
  40ca6e:	hlt    
  40ca6f:	dec    edi
  40ca70:	adc    dh,BYTE PTR [ebx-0x576d8271]
  40ca76:	scas   al,BYTE PTR es:[edi]
  40ca77:	cli    
  40ca78:	cmc    
  40ca79:	mov    esi,0xef594f48
  40ca7e:	add    edx,esi
  40ca80:	add    eax,0xcbf1f37
  40ca85:	push   esp
  40ca86:	jns    0x40cac4
  40ca88:	cwde   
  40ca89:	pop    ecx
  40ca8a:	test   al,0x9
  40ca8c:	mov    dh,0x2a
  40ca8f:	mov    ebx,0x8a41c98b
  40ca94:	cwde   
  40ca95:	out    0x27,al
  40ca97:	call   0x4f69:0x6fe6047d
  40ca9e:	cwde   
  40ca9f:	shr    DWORD PTR [ebp-0x265df2e4],cl
  40caa5:	push   cs
  40caa6:	(bad)  
  40caa7:	fidivr WORD PTR [edx+0xd]
  40caaa:	push   eax
  40caab:	mov    dl,0x3f
  40caad:	adc    al,0x92
  40caaf:	sub    esi,esp
  40cab1:	add    edx,DWORD PTR [ebp-0x4e]
  40cab4:	xor    ch,BYTE PTR [ecx+0x77]
  40cab7:	fs lahf 
  40cab9:	cld    
  40caba:	mov    ebx,0x6cfcd28f
  40cabf:	jbe    0x40cb3d
  40cac1:	xor    DWORD PTR [ebx+eiz*4],ecx
  40cac4:	lods   al,BYTE PTR ds:[esi]
  40cac5:	push   esp
  40cac6:	push   ss
  40cac7:	mov    dl,0xd1
  40cac9:	mov    ecx,DWORD PTR [eax-0x70]
  40cacc:	(bad)  
  40cacd:	test   DWORD PTR [eax+0xb],edi
  40cad0:	pusha  
  40cad1:	jp     0x40cb26
  40cad3:	or     bh,cl
  40cad5:	imul   ebp,DWORD PTR [ecx],0x1d741c6e
  40cadb:	dec    eax
  40cadc:	cwde   
  40cadd:	cmp    esp,DWORD PTR [esi-0x4c]
  40cae0:	xor    DWORD PTR [eax+ebx*1],ebx
  40cae3:	sub    cl,BYTE PTR [eax-0x32]
  40cae6:	xchg   edi,eax
  40cae7:	and    cl,BYTE PTR [esp+esi*4-0x5b9716c9]
  40caee:	mov    eax,ds:0xae6e331
  40caf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40caf4:	imul   ebp,DWORD PTR [edi],0xe249a00
  40cafa:	add    al,0xd1
  40cafc:	ins    BYTE PTR es:[edi],dx
  40cafd:	pop    ebx
  40cafe:	lods   eax,DWORD PTR ds:[esi]
  40caff:	inc    edi
  40cb00:	mov    al,BYTE PTR [ecx+ecx*4-0x4e]
  40cb04:	mov    BYTE PTR [ebx],bh
  40cb06:	dec    edi
  40cb07:	dec    DWORD PTR [bx+si+0x1c40]
  40cb0c:	and    eax,0x64c579e2
  40cb11:	inc    ecx
  40cb12:	shr    WORD PTR [edx],0xd6
  40cb16:	test   DWORD PTR [ebp+edi*8-0x682b5a97],ebp
  40cb1d:	add    ebx,0x6e
  40cb20:	push   esi
  40cb21:	repnz pop esp
  40cb23:	int3   
  40cb24:	loope  0x40cb18
  40cb26:	cmc    
  40cb27:	add    ecx,DWORD PTR [edi-0x773d5ec7]
  40cb2d:	pop    ecx
  40cb2e:	adc    DWORD PTR [edi],0x6621d24b
  40cb34:	lds    edx,FWORD PTR [esi-0x45]
  40cb37:	aam    0x42
  40cb39:	mov    dl,0x35
  40cb3b:	call   0x32ab:0x8baef0b7
  40cb42:	push   ss
  40cb43:	and    al,0xa6
  40cb45:	pop    eax
  40cb46:	enter  0x418b,0x97
  40cb4a:	jecxz  0x40cb4e
  40cb4c:	dec    ecx
  40cb4d:	or     cl,BYTE PTR [edx]
  40cb4f:	inc    ebp
  40cb50:	mov    bh,0xcd
  40cb52:	mov    edi,0x1a972ff1
  40cb57:	ja     0x40cb35
  40cb59:	lods   al,BYTE PTR ds:[esi]
  40cb5a:	je     0x40cbbc
  40cb5c:	xor    DWORD PTR [edi],eax
  40cb5e:	retf   0xd949
  40cb61:	push   DWORD PTR [ebx]
  40cb63:	test   al,0x86
  40cb65:	ins    DWORD PTR es:[edi],dx
  40cb66:	jae    0x40cb54
  40cb68:	sub    cl,ah
  40cb6a:	nop
  40cb6b:	push   0xffffffb3
  40cb6d:	cld    
  40cb6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb6f:	daa    
  40cb70:	ins    BYTE PTR es:[edi],dx
  40cb71:	retf   
  40cb72:	xor    esi,ebx
  40cb74:	xor    DWORD PTR [esi],esp
  40cb76:	jb     0x40cba0
  40cb78:	cmp    eax,0xe29a1d7b
  40cb7d:	sub    ah,BYTE PTR [ecx+0x70]
  40cb80:	(bad)  
  40cb82:	mov    ebx,0x35a84851
  40cb87:	adc    al,BYTE PTR [ebp+0x55357b52]
  40cb8d:	sub    edx,DWORD PTR [esi+ebx*1]
  40cb90:	bound  ecx,QWORD PTR [ebp-0x1e]
  40cb93:	add    ebx,DWORD PTR [ecx+0x672d31d2]
  40cb99:	xor    DWORD PTR [ebp+0x3a],edx
  40cb9c:	xor    DWORD PTR [ebx+0x1],eax
  40cb9f:	add    edx,DWORD PTR [ecx]
  40cba1:	jmp    FWORD PTR [ebx]
  40cba3:	inc    edi
  40cba4:	xor    al,0x7
  40cba6:	inc    esp
  40cba7:	mov    eax,0x3692927d
  40cbac:	jmp    0x40cba5
  40cbae:	add    al,0xbf
  40cbb0:	aam    0xa7
  40cbb2:	das    
  40cbb3:	add    DWORD PTR [esi],0xffffff99
  40cbb6:	push   ds
  40cbb7:	nop
  40cbb8:	jbe    0x40cba7
  40cbba:	inc    esp
  40cbbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbbc:	mov    esp,0xc093431a
  40cbc1:	push   0xffffffc1
  40cbc3:	mov    bh,0xbd
  40cbc5:	jp     0x40cbc5
  40cbc7:	es in  eax,dx
  40cbc9:	fdivr  st(4),st
  40cbcb:	or     BYTE PTR [ecx],cl
  40cbcd:	je     0x40cba7
  40cbcf:	mov    fs,WORD PTR [edi+ecx*2+0x7a]
  40cbd3:	icebp  
  40cbd4:	and    eax,0x6aed6cbe
  40cbd9:	outs   dx,DWORD PTR ds:[esi]
  40cbda:	popa   
  40cbdb:	rcl    BYTE PTR [edi-0x75e644d2],cl
  40cbe1:	jbe    0x40cb98
  40cbe3:	jecxz  0x40cbf5
  40cbe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbe6:	jmp    DWORD PTR [edx]
  40cbe8:	inc    esi
  40cbe9:	mov    ebp,0x19f4ee32
  40cbee:	mov    dh,0x1c
  40cbf0:	pop    es
  40cbf1:	call   0xc02f5ec5
  40cbf6:	mov    eax,ds:0xbbe209bf
  40cbfb:	jmp    0x85e8fd67
  40cc00:	cwde   
  40cc01:	adc    edx,edi
  40cc03:	adc    DWORD PTR [edi+esi*2],edi
  40cc06:	adc    dh,BYTE PTR gs:[edi-0x277586bf]
  40cc0d:	pusha  
  40cc0e:	push   ebp
  40cc0f:	xchg   edi,eax
  40cc10:	out    0x80,eax
  40cc12:	jns    0x40cc07
  40cc14:	int3   
  40cc15:	and    DWORD PTR ds:0x44787d41,esp
  40cc1b:	adc    edi,DWORD PTR ss:[ebx-0x6b]
  40cc1f:	popa   
  40cc20:	mov    bl,0x4d
  40cc22:	sbb    DWORD PTR [eax+edi*8+0x54],esp
  40cc26:	adc    esi,eax
  40cc28:	stc    
  40cc29:	jns    0x40cbf1
  40cc2b:	stos   BYTE PTR es:[edi],al
  40cc2c:	mov    ah,0x30
  40cc2e:	or     eax,0xb2666072
  40cc33:	popf   
  40cc34:	fdivr  st,st(2)
  40cc36:	pop    edx
  40cc37:	cmp    BYTE PTR [esi],cl
  40cc39:	jmp    0x5b26:0x2516b2ea
  40cc40:	sub    bh,BYTE PTR [eax]
  40cc42:	cmp    esp,eax
  40cc44:	cld    
  40cc45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc46:	xchg   esi,eax
  40cc47:	add    BYTE PTR [esi+ebx*4],cl
  40cc4a:	pushf  
  40cc4b:	mov    bl,0xcf
  40cc4d:	pusha  
  40cc4e:	cmp    edi,DWORD PTR [edx+0x7e]
  40cc51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc52:	dec    ebx
  40cc53:	(bad)  
  40cc54:	int    0xbe
  40cc56:	out    0x41,al
  40cc58:	out    0xad,al
  40cc5a:	aam    0xa8
  40cc5c:	ja     0x40ccd6
  40cc5e:	fiadd  DWORD PTR [edx-0x5144cda1]
  40cc64:	(bad)  
  40cc65:	fwait
  40cc66:	dec    ebx
  40cc67:	pop    ebp
  40cc68:	test   eax,0x9296c7db
  40cc6d:	fwait
  40cc6e:	jb     0x40cce5
  40cc70:	dec    edx
  40cc71:	adc    al,0x5
  40cc73:	xchg   edx,eax
  40cc74:	ja     0x40cc5a
  40cc76:	shr    DWORD PTR [edx],cl
  40cc78:	jg     0x40cc5f
  40cc7a:	int    0xe5
  40cc7c:	test   al,0xfd
  40cc7e:	sub    al,0x3e
  40cc80:	jmp    0x4018:0xfb84895b
  40cc87:	test   BYTE PTR ds:0xaf8fe10d,cl
  40cc8d:	inc    esp
  40cc8e:	xchg   edx,eax
  40cc8f:	jmp    0xe21a84dd
  40cc94:	in     eax,0xac
  40cc96:	add    DWORD PTR [edx+edi*2-0x2a],edi
  40cc9a:	cdq    
  40cc9b:	jg     0x40cc8e
  40cc9d:	dec    esi
  40cc9e:	std    
  40cc9f:	into   
  40cca0:	fcmovnbe st,st(7)
  40cca2:	adc    al,0x2f
  40cca4:	inc    ebx
  40cca5:	mov    al,ds:0x4ccf00d6
  40ccaa:	outs   dx,BYTE PTR ds:[esi]
  40ccab:	xor    BYTE PTR [eax+0x136c1ee4],cl
  40ccb1:	stos   BYTE PTR es:[edi],al
  40ccb2:	adc    eax,0x9892f31e
  40ccb7:	pop    ebp
  40ccb8:	rcr    edi,1
  40ccba:	leave  
  40ccbb:	cmp    dh,ah
  40ccbd:	and    al,0xc0
  40ccbf:	mov    ebx,cs
  40ccc1:	ret    0x97ee
  40ccc4:	shl    BYTE PTR [ecx+0x47],0x80
  40ccc8:	imul   edx,DWORD PTR [ebp-0x45]
  40cccc:	xlat   BYTE PTR ds:[ebx]
  40cccd:	int    0x69
  40cccf:	and    BYTE PTR [edx],0xe3
  40ccd2:	jl     0x40cd00
  40ccd4:	inc    ebx
  40ccd5:	push   ecx
  40ccd6:	inc    ecx
  40ccd7:	and    al,BYTE PTR [esp+ebp*2]
  40ccda:	into   
  40ccdb:	sub    eax,0xf708f8fb
  40cce0:	in     al,0xa8
  40cce2:	jae    0x40ccb7
  40cce4:	mov    ah,0x2a
  40cce6:	mov    eax,0xcf85fe3f
  40ccec:	in     al,0x34
  40ccee:	aas    
  40ccef:	call   0xa57209eb
  40ccf4:	loop   0x40cd6a
  40ccf6:	adc    esi,esp
  40ccf8:	add    al,BYTE PTR [edx]
  40ccfa:	cmc    
  40ccfb:	add    dh,ah
  40ccfd:	fisttp WORD PTR [ecx]
  40ccff:	jge    0x40cc82
  40cd01:	addr16 mov esi,0x83c58967
  40cd07:	daa    
  40cd08:	(bad)  
  40cd09:	xchg   ebp,ebx
  40cd0b:	mov    esi,0x8b241513
  40cd10:	ja     0x40cd27
  40cd12:	dec    ebp
  40cd13:	mov    ah,0x5b
  40cd15:	adc    al,0x96
  40cd17:	push   0x8cb24413
  40cd1c:	mov    edi,0x8a5f82fc
  40cd21:	es xor eax,0x5856a2b4
  40cd27:	sub    bl,BYTE PTR ds:0x902158ee
  40cd2d:	jo     0x40ccf7
  40cd2f:	mov    ecx,0x6538f469
  40cd34:	inc    eax
  40cd35:	pop    ds
  40cd36:	xor    eax,0x48c57c79
  40cd3b:	popa   
  40cd3c:	mov    edi,ebp
  40cd3e:	fbstp  TBYTE PTR [edx+edx*1+0x76]
  40cd42:	cwde   
  40cd43:	fisttp DWORD PTR [edx]
  40cd45:	mov    cl,0x30
  40cd47:	add    al,0x85
  40cd49:	test   al,0x9c
  40cd4b:	sub    DWORD PTR [ebp-0x70],esp
  40cd4e:	xchg   BYTE PTR [eax],ah
  40cd50:	out    0xb5,eax
  40cd52:	jg     0x40cdb4
  40cd54:	test   DWORD PTR [ebp+0x26],ecx
  40cd57:	cwde   
  40cd58:	push   esp
  40cd59:	adc    al,0x2b
  40cd5b:	lods   eax,DWORD PTR ds:[esi]
  40cd5c:	and    eax,0xc66326b8
  40cd61:	stos   DWORD PTR es:[edi],eax
  40cd62:	xchg   ecx,eax
  40cd63:	test   eax,0xf4458aa3
  40cd68:	in     eax,dx
  40cd69:	jge    0x40cd66
  40cd6b:	imul   esi,ebp,0x17
  40cd6e:	mov    bl,bl
  40cd70:	les    edi,FWORD PTR [ebx+0x55]
  40cd73:	lds    edx,FWORD PTR [esi+0x41]
  40cd76:	pusha  
  40cd77:	xchg   ebp,eax
  40cd78:	and    DWORD PTR [esi-0x6d],eax
  40cd7b:	(bad)  
  40cd7c:	or     eax,0x9d2bac2d
  40cd81:	shl    DWORD PTR [edi],0x2f
  40cd84:	cmc    
  40cd85:	scas   eax,DWORD PTR es:[edi]
  40cd86:	fnstsw WORD PTR [edx+ebp*8-0x4e]
  40cd8a:	sub    bh,BYTE PTR [esi-0x13]
  40cd8d:	adc    esi,ecx
  40cd8f:	push   0xa7b9d468
  40cd94:	scas   eax,DWORD PTR es:[edi]
  40cd95:	aas    
  40cd96:	in     eax,dx
  40cd97:	pop    esp
  40cd98:	xchg   ebx,eax
  40cd99:	or     al,0xa1
  40cd9b:	fwait
  40cd9c:	sub    edi,DWORD PTR [ebp-0x11164d7a]
  40cda2:	sbb    DWORD PTR [edi-0x3a34b183],0x42
  40cda9:	inc    eax
  40cdaa:	xchg   DWORD PTR [edi+eax*2+0x41],esp
  40cdae:	(bad)  
  40cdaf:	mov    ah,0x66
  40cdb1:	dec    ecx
  40cdb2:	jo     0x40cdc6
  40cdb4:	pop    ebx
  40cdb5:	lds    ebx,FWORD PTR [esi+0x51cadfa1]
  40cdbb:	call   0xa745826d
  40cdc0:	jbe    0x40cdcd
  40cdc2:	push   edx
  40cdc3:	or     BYTE PTR ds:0xc941f9ab,bh
  40cdc9:	mov    esi,0x4636eca
  40cdce:	sbb    esi,esi
  40cdd0:	mov    esi,0x781717d4
  40cdd5:	or     eax,0x19c279b9
  40cdda:	mov    ds:0x37477170,eax
  40cddf:	(bad)  ss:[edx+0x3fefa938]
  40cde6:	test   al,ch
  40cde8:	lds    edx,FWORD PTR [edx]
  40cdea:	cwde   
  40cdeb:	cmc    
  40cdec:	mov    dl,0x92
  40cdee:	cmp    eax,0x27389f7e
  40cdf3:	and    eax,0xcea3b9f3
  40cdf8:	push   es
  40cdf9:	dec    ebx
  40cdfa:	sbb    al,0xbc
  40cdfc:	out    dx,eax
  40cdfd:	aaa    
  40cdfe:	xchg   ebx,eax
  40cdff:	retf   0x2f81
  40ce02:	cmp    al,0x33
  40ce04:	pop    ds
  40ce05:	pop    es
  40ce06:	dec    ebp
  40ce07:	cmp    DWORD PTR [esi-0x28],esi
  40ce0a:	outs   dx,BYTE PTR ds:[esi]
  40ce0b:	adc    al,0xe9
  40ce0d:	pushf  
  40ce0e:	ds cld 
  40ce10:	repnz cs jmp 0xd04b:0xae39fec
  40ce19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce1a:	(bad)  
  40ce1b:	jb     0x40ce77
  40ce1d:	and    BYTE PTR [esi-0x884d51a],0x78
  40ce24:	pop    ebx
  40ce25:	adc    dh,BYTE PTR [eax+0x34ad824f]
  40ce2b:	xor    DWORD PTR [ecx-0x5c78a654],eax
  40ce31:	cmc    
  40ce32:	mov    bl,0xa9
  40ce34:	scas   eax,DWORD PTR es:[edi]
  40ce35:	xchg   esp,eax
  40ce36:	xor    ecx,esp
  40ce38:	inc    edx
  40ce39:	xor    edi,ebp
  40ce3b:	je     0x40cdcb
  40ce3d:	ins    BYTE PTR es:[edi],dx
  40ce3e:	ins    DWORD PTR es:[edi],dx
  40ce3f:	mov    al,0xce
  40ce41:	pop    ebp
  40ce42:	shr    DWORD PTR [edi+ecx*8],cl
  40ce45:	mov    esp,0x4d9ef5d2
  40ce4a:	xchg   esi,eax
  40ce4b:	fsubr  DWORD PTR [ebx+0x7b1d353c]
  40ce51:	and    DWORD PTR [esi+0x163ec7dd],0xffffffab
  40ce58:	mov    esp,0x8730f2f1
  40ce5d:	cmp    al,0x79
  40ce5f:	pop    ss
  40ce60:	sbb    ebx,edx
  40ce62:	xor    DWORD PTR [eax+0x74137cfa],esp
  40ce68:	fimul  DWORD PTR [esi-0x1b]
  40ce6b:	(bad)  [edx]
  40ce6d:	ds and al,0x41
  40ce70:	(bad)
  40ce74:	les    esi,FWORD PTR [ebp-0x40]
  40ce77:	mov    bl,0xef
  40ce79:	or     dl,BYTE PTR [ecx+0x6b]
  40ce7c:	lods   al,BYTE PTR ds:[esi]
  40ce7d:	sbb    al,BYTE PTR [edx]
  40ce7f:	das    
  40ce80:	inc    edi
  40ce81:	stos   DWORD PTR es:[edi],eax
  40ce82:	dec    esi
  40ce83:	cmp    ecx,DWORD PTR [esi+ebp*1+0x5f]
  40ce87:	pop    ds
  40ce88:	fnsave [edi-0x13]
  40ce8b:	(bad)  
  40ce8c:	retf   0x3fe9
  40ce8f:	xor    BYTE PTR [edi-0x17082155],bh
  40ce95:	add    BYTE PTR [ecx],cl
  40ce97:	cs (bad) 
  40ce99:	(bad)  
  40ce9a:	push   0xd5cb6e04
  40ce9f:	add    al,0x56
  40cea1:	dec    esp
  40cea2:	dec    ebp
  40cea3:	and    al,0xe3
  40cea5:	jns    0x40cefb
  40cea7:	mov    cl,0x5f
  40cea9:	popf   
  40ceaa:	push   ecx
  40ceab:	push   ss
  40ceac:	call   0xb379b3d7
  40ceb1:	in     al,0x86
  40ceb3:	xlat   BYTE PTR ds:[ebx]
  40ceb4:	sbb    al,0xf1
  40ceb6:	dec    eax
  40ceb7:	mov    eax,0xb3e480cf
  40cebc:	iret   
  40cebd:	aas    
  40cebe:	(bad)  
  40cec0:	push   edi
  40cec1:	mov    WORD PTR fs:[eax+0x3a],?
  40cec5:	push   0xf3272196
  40ceca:	push   esp
  40cecb:	cld    
  40cecc:	sbb    esi,edx
  40cece:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ced0:	push   ebp
  40ced1:	mov    dl,0xf7
  40ced3:	lea    esi,[eax-0x410ac9f2]
  40ced9:	sahf   
  40ceda:	mov    bl,0x6a
  40cedc:	push   ebx
  40cedd:	and    DWORD PTR [ecx-0x24],esp
  40cee0:	mov    edi,0xb08f6f56
  40cee5:	jno    0x40ce67
  40cee7:	sbb    al,0x71
  40cee9:	push   esi
  40ceea:	iret   
  40ceeb:	rcl    BYTE PTR [ecx+0x68109b6f],0x64
  40cef2:	cmc    
  40cef3:	lahf   
  40cef4:	inc    esp
  40cef5:	add    edi,DWORD PTR [ebp+0x13281267]
  40cefb:	xor    ch,BYTE PTR [esi+eax*4-0x24945094]
  40cf02:	and    DWORD PTR [esi-0x37defb96],edx
  40cf08:	xor    BYTE PTR [ebx-0x34],0xbf
  40cf0c:	in     al,0xc4
  40cf0e:	xor    al,0xdd
  40cf10:	dec    ecx
  40cf11:	xchg   ebx,eax
  40cf12:	arpl   WORD PTR [ecx-0x2f622d68],cx
  40cf18:	mov    DWORD PTR fs:[ecx],esp
  40cf1b:	mov    ?,WORD PTR [edx+0x44]
  40cf1e:	sub    dh,BYTE PTR [ecx]
  40cf20:	push   ebp
  40cf21:	int    0x82
  40cf23:	lds    edi,FWORD PTR [edx-0xf]
  40cf26:	mov    ch,0xe9
  40cf28:	gs (bad) 
  40cf2a:	bound  esp,QWORD PTR [esi+0x2dae1aef]
  40cf30:	stc    
  40cf31:	sti    
  40cf32:	jb     0x40cfb0
  40cf34:	fwait
  40cf35:	add    DWORD PTR [edx],edx
  40cf37:	or     cl,BYTE PTR [edx+0x4e760463]
  40cf3d:	xor    al,0x28
  40cf3f:	je     0x40cfab
  40cf41:	mov    eax,ds:0x8802c513
  40cf46:	mov    cl,0x94
  40cf48:	xor    esi,DWORD PTR [eax+0x488fa930]
  40cf4e:	and    dh,BYTE PTR [eax+0x6d488e32]
  40cf54:	dec    esp
  40cf55:	(bad)  
  40cf56:	pop    esp
  40cf57:	fwait
  40cf58:	jnp    0x40cf63
  40cf5a:	pcmpgtb mm1,QWORD PTR [ecx-0x78]
  40cf5e:	adc    ebp,DWORD PTR [edi]
  40cf60:	adc    ecx,esi
  40cf62:	loop   0x40cfd3
  40cf64:	cld    
  40cf65:	sub    al,0x61
  40cf67:	(bad)  
  40cf68:	adc    BYTE PTR [ebx-0x1a],bh
  40cf6b:	test   eax,0x7958c1c9
  40cf70:	and    BYTE PTR [edx],dh
  40cf72:	or     ecx,edx
  40cf74:	push   edi
  40cf75:	pop    ds
  40cf76:	cmp    al,0xa5
  40cf78:	shr    BYTE PTR [ebp+0x7a],0x4f
  40cf7c:	stos   DWORD PTR es:[edi],eax
  40cf7d:	inc    ebx
  40cf7e:	fld    st(1)
  40cf80:	mov    bl,0xd1
  40cf82:	dec    edx
  40cf83:	jo     0x40cfef
  40cf85:	jnp    0x40cf0e
  40cf87:	xchg   esi,eax
  40cf88:	push   edi
  40cf89:	test   eax,0x2b01cf88
  40cf8e:	in     al,dx
  40cf8f:	and    ebp,esp
  40cf91:	scas   al,BYTE PTR es:[edi]
  40cf92:	stos   BYTE PTR es:[edi],al
  40cf93:	(bad)  
  40cf94:	or     ecx,DWORD PTR [edx-0x48]
  40cf97:	add    BYTE PTR [ecx-0x23],al
  40cf9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf9b:	xchg   esp,eax
  40cf9c:	out    dx,al
  40cf9d:	lods   al,BYTE PTR ds:[esi]
  40cf9e:	mov    edi,0xf54e80c2
  40cfa3:	dec    ebp
  40cfa4:	jle    0x40cfb8
  40cfa6:	daa    
  40cfa7:	imul   BYTE PTR [ebx+0x112c298f]
  40cfad:	jg     0x40cf45
  40cfaf:	fmul   st,st(7)
  40cfb1:	xor    DWORD PTR ds:[edi-0x29ce5baf],0xffffffb5
  40cfb9:	sbb    esp,DWORD PTR [ebx-0x6e]
  40cfbc:	xor    BYTE PTR [ebp+0x48978eb],ch
  40cfc2:	sti    
  40cfc3:	sbb    al,0x9b
  40cfc5:	ret    
  40cfc6:	xor    dh,dl
  40cfc8:	push   cs
  40cfc9:	mov    dl,0x5d
  40cfcb:	or     al,0xfb
  40cfcd:	jl     0x40cf90
  40cfcf:	mov    edx,0xc672cc60
  40cfd4:	lods   al,BYTE PTR ds:[esi]
  40cfd5:	mov    fs,WORD PTR [ecx+0x56]
  40cfd8:	call   0x7328:0xd49c4a4a
  40cfdf:	(bad)  
  40cfe0:	loope  0x40d04f
  40cfe2:	pop    ax
  40cfe4:	lock scas eax,DWORD PTR es:[edi]
  40cfe6:	test   edi,esi
  40cfe8:	aad    0x5b
  40cfea:	or     eax,0x166227bb
  40cfef:	cli    
  40cff0:	call   0xb72b:0xfa09b08e
  40cff7:	out    dx,eax
  40cff8:	push   eax
  40cff9:	inc    esi
  40cffa:	sahf   
  40cffb:	ficom  DWORD PTR [edx]
  40cffd:	jmp    0x279a:0xa179f319
  40d004:	inc    ecx
  40d005:	gs xor eax,0x8ed71db2
  40d00b:	pusha  
  40d00c:	fistp  DWORD PTR [edi]
  40d00e:	push   ss
  40d00f:	and    bh,BYTE PTR [edi-0x49]
  40d012:	daa    
  40d013:	mov    ds:0xf7e3b2c5,eax
  40d018:	shl    DWORD PTR [eax+0x7bbf9f7],0x37
  40d01f:	xchg   DWORD PTR [esi-0x13],ecx
  40d022:	xor    DWORD PTR [edx-0x43],esp
  40d025:	ja     0x40d064
  40d027:	jne    0x40d05e
  40d029:	mov    ds:0xbf3e5cb4,eax
  40d02e:	cmp    BYTE PTR [eax+0x3a],cl
  40d031:	dec    edx
  40d032:	and    BYTE PTR [edx],bl
  40d034:	mov    eax,ds:0x7a5d14e9
  40d039:	jmp    0x40d03f
  40d03b:	push   edx
  40d03c:	neg    BYTE PTR [ebx]
  40d03e:	pushf  
  40d03f:	fist   DWORD PTR es:[ebp+0x63]
  40d043:	test   DWORD PTR [ebx+0x63],esi
  40d046:	push   eax
  40d047:	cmp    BYTE PTR [ecx],bh
  40d049:	pop    ecx
  40d04a:	mov    eax,ds:0x6693d1f5
  40d04f:	jg     0x40d07e
  40d051:	adc    cl,dl
  40d053:	les    ebp,FWORD PTR [ebx+0x1b9261f4]
  40d059:	stc    
  40d05a:	dec    eax
  40d05b:	jne    0x40d08c
  40d05d:	xchg   esi,eax
  40d05e:	sub    dl,0xfc
  40d061:	imul   BYTE PTR [ecx+0x28]
  40d064:	and    BYTE PTR [ebp-0x2e],al
  40d067:	int3   
  40d068:	add    dh,ah
  40d06a:	bound  edi,QWORD PTR [edx-0x43133b3c]
  40d070:	jae    0x40d023
  40d072:	jb     0x40d04d
  40d074:	gs mov ecx,eax
  40d077:	jno    0x40d065
  40d079:	cdq    
  40d07a:	jmp    0x40d03f
  40d07c:	cwde   
  40d07d:	adc    al,0xb9
  40d07f:	jo     0x40d0c9
  40d081:	call   0xc4207ae1
  40d086:	mov    ebp,0xfb2da017
  40d08b:	mov    DWORD PTR [edx+0x22],eax
  40d08e:	mov    cl,0x47
  40d090:	inc    edx
  40d091:	(bad)  
  40d092:	neg    BYTE PTR [edi+0xb75c99e]
  40d098:	mov    DWORD PTR [ebx-0x75],ebp
  40d09b:	push   ecx
  40d09c:	pop    edx
  40d09d:	cmp    edx,eax
  40d09f:	mov    ds:0x2d17dbf0,eax
  40d0a4:	mov    al,BYTE PTR [edi]
  40d0a6:	mov    dl,0x64
  40d0a8:	retf   
  40d0a9:	mov    ch,0xa3
  40d0ab:	mov    ecx,0xd718b7ab
  40d0b0:	and    eax,DWORD PTR [ecx+0x6d1de1c3]
  40d0b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0b7:	ret    
  40d0b8:	cmp    esi,DWORD PTR [esi+0x1d]
  40d0bb:	inc    ecx
  40d0bc:	push   ds
  40d0bd:	sub    ecx,DWORD PTR [esi-0x13063060]
  40d0c3:	cli    
  40d0c4:	adc    al,0xe4
  40d0c6:	mov    edi,DWORD PTR [esi+0x527729f9]
  40d0cc:	add    al,0x2c
  40d0ce:	popf   
  40d0cf:	scas   eax,DWORD PTR es:[edi]
  40d0d0:	push   ds
  40d0d1:	jl     0x40d0fe
  40d0d3:	jmp    0x1ec1:0xaf22cb45
  40d0da:	push   ecx
  40d0db:	in     al,dx
  40d0dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0dd:	mov    bl,0x10
  40d0df:	and    al,dl
  40d0e1:	sub    eax,0x34697d16
  40d0e6:	push   ss
  40d0e7:	mov    BYTE PTR [edi],0x83
  40d0ea:	into   
  40d0eb:	sbb    al,0xb3
  40d0ed:	inc    edx
  40d0ee:	mov    al,0x56
  40d0f0:	pop    esi
  40d0f1:	nop
  40d0f2:	and    al,dl
  40d0f4:	dec    edi
  40d0f5:	sti    
  40d0f6:	lock dec eax
  40d0f8:	sbb    eax,0xac001d4f
  40d0fd:	arpl   WORD PTR [esi-0x6f86e0ad],sp
  40d103:	stos   BYTE PTR es:[edi],al
  40d104:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40d106:	imul   ebx,DWORD PTR [esi],0x4aaacca1
  40d10c:	jmp    0xc585:0xc09aa2bb
  40d113:	mov    ds:0x697d1d07,al
  40d118:	fwait
  40d119:	jmp    0x4b9bc7e4
  40d11e:	jno    0x40d198
  40d120:	or     ah,BYTE PTR [edx+0x1a]
  40d123:	sar    cl,0xd1
  40d126:	pop    ss
  40d127:	xor    DWORD PTR [eax+0x431f467b],eax
  40d12d:	call   0x968f3399
  40d132:	mov    esp,0xe8e68a46
  40d137:	push   esp
  40d138:	in     eax,dx
  40d139:	fimul  DWORD PTR [ebp-0x21]
  40d13c:	(bad)  
  40d13d:	cdq    
  40d13e:	mov    bh,0xdf
  40d140:	lds    ebp,FWORD PTR [esi]
  40d142:	out    0xb0,al
  40d144:	adc    BYTE PTR [ecx-0x11f61517],bh
  40d14a:	test   al,0x94
  40d14c:	loope  0x40d1c7
  40d14e:	sub    BYTE PTR [edi+0x721a675],ah
  40d154:	das    
  40d155:	jb     0x40d153
  40d157:	jno    0x40d0f6
  40d159:	pop    ebx
  40d15a:	sbb    BYTE PTR [ecx],0xd9
  40d15d:	mov    esp,0x9623d76d
  40d162:	pop    eax
  40d163:	sub    ah,dh
  40d165:	add    al,0x6f
  40d167:	and    al,0x85
  40d169:	lods   eax,DWORD PTR ds:[esi]
  40d16a:	lahf   
  40d16b:	mov    ecx,ecx
  40d16d:	fmul   QWORD PTR [ebp+0x4d]
  40d170:	mov    eax,ds:0x93b55540
  40d175:	xor    bl,BYTE PTR [ecx-0x76]
  40d178:	mov    ebx,0x90d1ca21
  40d17d:	cdq    
  40d17e:	out    0x57,eax
  40d180:	xor    DWORD PTR [esi+0x7ca2db91],eax
  40d186:	sbb    al,0x69
  40d188:	sub    al,0xe9
  40d18a:	jmp    0x3938fe8c
  40d18f:	mov    bl,0xf9
  40d191:	sbb    DWORD PTR [ebp+0x36],0xf42232ad
  40d198:	(bad)  
  40d199:	ins    BYTE PTR es:[edi],dx
  40d19a:	dec    ebp
  40d19b:	jle    0x40d1a8
  40d19d:	push   es
  40d19e:	fstp   TBYTE PTR [edx-0x41]
  40d1a1:	xchg   ebx,eax
  40d1a2:	push   0x44
  40d1a4:	pushf  
  40d1a5:	xchg   esi,eax
  40d1a6:	lahf   
  40d1a7:	xchg   DWORD PTR [edx+0x3e6531ed],ecx
  40d1ad:	xchg   DWORD PTR [esi+0x3],ebp
  40d1b0:	mov    ah,bh
  40d1b2:	loopne 0x40d212
  40d1b4:	push   0x6b680175
  40d1b9:	xchg   ebp,eax
  40d1ba:	jo     0x40d1a5
  40d1bc:	fmul   st,st(2)
  40d1be:	add    BYTE PTR [ebp+0x0],bh
  40d1c1:	push   DWORD PTR [ebx+0x4b]
  40d1c4:	int3   
  40d1c5:	test   eax,0x17102d07
  40d1ca:	lds    ecx,FWORD PTR [esp+ecx*8+0x16]
  40d1ce:	fcmovnu st,st(7)
  40d1d0:	xchg   ebx,eax
  40d1d1:	adc    eax,0x302bc78a
  40d1d6:	adc    al,0xae
  40d1d8:	cmc    
  40d1d9:	push   cs
  40d1da:	arpl   WORD PTR [ebx-0x338ece01],si
  40d1e0:	mov    edx,0xd67df3a5
  40d1e5:	or     DWORD PTR ds:0x70417e8c,edi
  40d1eb:	dec    esi
  40d1ec:	push   ebp
  40d1ed:	hlt    
  40d1ee:	test   ah,ch
  40d1f0:	xor    al,0x43
  40d1f2:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40d1f4:	enter  0xa82e,0xba
  40d1f8:	pop    ds
  40d1f9:	xor    esp,edx
  40d1fb:	fs sahf 
  40d1fd:	and    dl,ah
  40d1ff:	xor    BYTE PTR [ecx+0x223a59bf],cl
  40d205:	inc    esi
  40d206:	xchg   DWORD PTR [ebx],esp
  40d208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d209:	jp     0x40d1ea
  40d20b:	sub    esp,DWORD PTR [ebx+0x737b87b1]
  40d211:	test   BYTE PTR [ebp-0x48],dl
  40d214:	pop    ebx
  40d215:	cmp    eax,0xcff43415
  40d21a:	ficom  DWORD PTR [ebx]
  40d21c:	addr16 add eax,0x95808f28
  40d222:	xor    dh,BYTE PTR [edx+0x3a]
  40d225:	retf   
  40d226:	xchg   esp,eax
  40d227:	lods   al,BYTE PTR ds:[esi]
  40d228:	pushf  
  40d229:	xor    esi,DWORD PTR [eax]
  40d22b:	nop
  40d22c:	sub    BYTE PTR [ebp+esi*4-0x7855e7b],dl
  40d233:	adc    eax,0xc688146e
  40d238:	call   0x70150ee7
  40d23d:	clc    
  40d23e:	mov    cl,0x75
  40d240:	lods   al,BYTE PTR ds:[esi]
  40d241:	sub    DWORD PTR [ecx-0x77],0x161a0b50
  40d248:	lods   eax,DWORD PTR ds:[esi]
  40d249:	test   eax,0x42fb339f
  40d24e:	arpl   WORD PTR [esi],bx
  40d250:	mov    ecx,0xf41fdd22
  40d255:	mov    esp,0x8d68b639
  40d25a:	pop    eax
  40d25b:	pushf  
  40d25c:	cwde   
  40d25d:	xchg   eax,eax
  40d25f:	test   al,0xfc
  40d261:	loop   0x40d2aa
  40d263:	das    
  40d264:	iret   
  40d265:	std    
  40d266:	retf   
  40d267:	sbb    ebx,DWORD PTR [edi+eiz*4]
  40d26a:	or     cl,al
  40d26c:	add    eax,edi
  40d26e:	cmp    ecx,eax
  40d270:	je     0x40d2ae
  40d276:	jmp    0x40d29f
  40d27b:	mov    eax,DWORD PTR [ebp-0x4]
  40d27e:	mov    ecx,DWORD PTR [ebp-0x8]
  40d281:	xor    eax,esi
  40d283:	add    eax,edi
  40d285:	cmp    ecx,eax
  40d287:	mov    eax,DWORD PTR [ebp-0x4]
  40d28a:	je     0x40d2e9
  40d290:	mov    ecx,DWORD PTR [ebp-0x30]
  40d293:	xor    eax,esi
  40d295:	add    eax,edi
  40d297:	cmp    ecx,eax
  40d299:	je     0x40f6a6
  40d29f:	lea    eax,[ebp-0x8]
  40d2a2:	push   eax
  40d2a3:	push   DWORD PTR [ebp-0x28]
  40d2a6:	push   DWORD PTR [ebp+0xc]
  40d2a9:	call   0x411c5a
  40d2ae:	mov    eax,DWORD PTR [ebp-0x4]
  40d2b1:	mov    ecx,DWORD PTR [ebp-0x8]
  40d2b4:	xor    eax,esi
  40d2b6:	add    eax,edi
  40d2b8:	cmp    ecx,eax
  40d2ba:	je     0x40d2d5
  40d2c0:	mov    eax,DWORD PTR [ebp-0x34]
  40d2c3:	movzx  eax,WORD PTR [eax+ebx*2]
  40d2c7:	mov    ecx,DWORD PTR [ebp-0x14]
  40d2ca:	mov    eax,DWORD PTR [ecx+eax*4]
  40d2cd:	mov    DWORD PTR [ebp-0x38],eax
  40d2d0:	jmp    0x40d27b
  40d2d5:	mov    eax,DWORD PTR [ebp-0xc]
  40d2d8:	xor    eax,esi
  40d2da:	lea    ebx,[ebx+eax*1+0x3272f3]
  40d2e1:	jmp    0x4087e2
  40d2e6:	mov    eax,DWORD PTR [ebp-0x4]
  40d2e9:	xor    eax,esi
  40d2eb:	jmp    0x40f69f
  40d2f0:	add    BYTE PTR [esi],cl
  40d2f2:	mov    ch,BYTE PTR [esp+eax*4+0x5e8600a0]
  40d2f9:	hlt    
  40d2fa:	aas    
  40d2fb:	push   eax
  40d2fc:	push   eax
  40d2fd:	jno    0x40d340
  40d2ff:	jle    0x40d296
  40d301:	rol    BYTE PTR [ebx-0x7ca3177d],cl
  40d307:	add    ebx,0x6b
  40d30a:	daa    
  40d30b:	pop    esp
  40d30c:	fs lahf 
  40d30e:	cmp    DWORD PTR [eax],esi
  40d310:	inc    ebx
  40d311:	dec    edi
  40d312:	es or  al,0xaf
  40d315:	jae    0x40d2d1
  40d317:	out    dx,al
  40d318:	shl    ch,1
  40d31a:	aaa    
  40d31b:	dec    esp
  40d31c:	pushf  
  40d31d:	xor    esp,esi
  40d31f:	enter  0xb0f6,0xed
  40d323:	daa    
  40d324:	mov    dl,0x6c
  40d326:	ins    DWORD PTR es:[edi],dx
  40d327:	outs   dx,DWORD PTR ds:[esi]
  40d328:	stos   BYTE PTR es:[edi],al
  40d329:	and    bl,BYTE PTR [esi-0x72]
  40d32c:	xchg   esi,eax
  40d32d:	mov    ebx,0x750f443c
  40d332:	ror    BYTE PTR [ecx+0x76],0x2f
  40d336:	cmp    DWORD PTR [ebx-0x3bdd4220],eax
  40d33c:	retf   0x137a
  40d33f:	sub    al,0x40
  40d341:	mov    cs:0x2d3224d6,eax
  40d347:	cmp    BYTE PTR [edi+0x3686ee05],dl
  40d34d:	ins    DWORD PTR es:[edi],dx
  40d34e:	xor    ah,BYTE PTR es:[ecx+0x33a508d5]
  40d355:	push   ds
  40d356:	js     0x40d3be
  40d358:	pop    ds
  40d359:	cld    
  40d35a:	test   esp,ebx
  40d35c:	or     bl,cl
  40d35e:	sti    
  40d35f:	jp     0x40d36f
  40d361:	into   
  40d362:	adc    eax,0x11e277ee
  40d367:	jecxz  0x40d33c
  40d369:	mov    edi,0x28c28394
  40d36e:	lahf   
  40d36f:	cli    
  40d370:	adc    BYTE PTR [eax+0x9b251fb],ch
  40d376:	les    edx,FWORD PTR [edx+0x3f]
  40d379:	cmp    eax,0xca6c6fb4
  40d37e:	inc    edi
  40d37f:	or     eax,0xee294b66
  40d384:	jo     0x40d397
  40d386:	mov    ebp,0x870c4cf4
  40d38b:	jge    0x40d32c
  40d38d:	add    BYTE PTR [ebx],bh
  40d38f:	loopne 0x40d3fd
  40d391:	fist   WORD PTR [esi+0x928f45c]
  40d397:	repnz and ecx,DWORD PTR [ebx]
  40d39a:	mov    cl,0x5a
  40d39c:	pop    ebx
  40d39d:	loop   0x40d323
  40d39f:	and    dh,BYTE PTR [edx+0x10f6dd60]
  40d3a5:	jmp    0x40d3ba
  40d3a7:	out    dx,eax
  40d3a8:	ret    
  40d3a9:	push   cs
  40d3aa:	cmp    BYTE PTR [eax+0x16],al
  40d3ad:	mov    bl,0x41
  40d3af:	sub    al,bh
  40d3b1:	fsubr  QWORD PTR [eax-0xe7c505c]
  40d3b7:	and    ch,BYTE PTR [edi+edx*8-0x6a8e9730]
  40d3be:	jno    0x40d35d
  40d3c0:	cwde   
  40d3c1:	mov    edx,0x2d189ae
  40d3c6:	adc    dh,BYTE PTR [ecx-0x2d]
  40d3c9:	cmp    dl,0xeb
  40d3cc:	ins    DWORD PTR es:[edi],dx
  40d3cd:	call   0x503f:0xec519b23
  40d3d4:	scas   eax,DWORD PTR es:[edi]
  40d3d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3d6:	fstp   st(5)
  40d3d8:	(bad)  
  40d3da:	xchg   ecx,eax
  40d3db:	sbb    esp,DWORD PTR [ecx]
  40d3dd:	add    edi,DWORD PTR [edi-0x57]
  40d3e0:	daa    
  40d3e1:	cmp    BYTE PTR [eax+0x6b1e92c1],bl
  40d3e7:	push   edx
  40d3e8:	sub    al,0x4d
  40d3ea:	mov    al,0x60
  40d3ec:	mov    cs,ebx
  40d3ee:	jo     0x40d44d
  40d3f0:	pop    ds
  40d3f1:	mov    ch,0x93
  40d3f3:	and    al,0xe1
  40d3f5:	popa   
  40d3f6:	retf   0xaeb2
  40d3f9:	fmul   QWORD PTR [edx-0x5dedef9]
  40d3ff:	xchg   edx,eax
  40d400:	mov    al,bh
  40d402:	imul   eax,DWORD PTR [edi+esi*8],0x58
  40d406:	sub    al,0x99
  40d408:	xchg   esi,eax
  40d409:	xlat   BYTE PTR ds:[ebx]
  40d40a:	add    DWORD PTR [ecx+edi*8],ebp
  40d40d:	mov    ds:0x9c0ba724,eax
  40d412:	call   0x67af:0x1ad2db46
  40d419:	int3   
  40d41a:	inc    esp
  40d41b:	sbb    BYTE PTR [edi-0x48],cl
  40d41e:	out    0x81,eax
  40d420:	mov    ebx,0x8bd0140
  40d425:	jo     0x40d45e
  40d427:	inc    edx
  40d428:	add    al,0xea
  40d42a:	arpl   WORD PTR [ecx],ax
  40d42c:	lods   al,BYTE PTR ds:[esi]
  40d42d:	pop    ebx
  40d42e:	ret    0xbcfb
  40d431:	xchg   ebx,eax
  40d432:	out    dx,al
  40d433:	pop    ecx
  40d434:	pop    edx
  40d435:	das    
  40d436:	add    DWORD PTR [ecx],eax
  40d438:	sub    al,BYTE PTR [eax]
  40d43a:	pop    eax
  40d43b:	sub    BYTE PTR [eax+0x7910a0e6],bh
  40d441:	cli    
  40d442:	sbb    BYTE PTR [esi-0x39e4806c],0x47
  40d449:	iret   
  40d44a:	xor    al,0x30
  40d44c:	mov    eax,0x1d09cd05
  40d451:	jp     0x40d4a7
  40d453:	lods   al,BYTE PTR ds:[esi]
  40d454:	cmp    al,0x4d
  40d456:	xchg   esi,esi
  40d458:	pop    edi
  40d459:	aas    
  40d45a:	sti    
  40d45b:	cmp    dh,BYTE PTR [esi]
  40d45d:	fidivr WORD PTR [eax]
  40d45f:	loopne 0x40d417
  40d461:	xor    DWORD PTR [ebx],edi
  40d463:	and    DWORD PTR [edx+eiz*1+0x3b86bbac],ecx
  40d46a:	mov    dl,0x70
  40d46c:	sub    edx,DWORD PTR [ebx-0x7]
  40d46f:	pushw  es
  40d471:	cli    
  40d472:	xor    al,0xe0
  40d474:	xchg   edx,eax
  40d475:	pop    ds
  40d476:	mov    ebp,0xf04fc1ed
  40d47b:	(bad)  
  40d47c:	inc    ebx
  40d47d:	inc    ebx
  40d47e:	aad    0x38
  40d480:	xor    edx,ebx
  40d482:	nop
  40d483:	mov    edx,0xebd8dccf
  40d488:	sub    ebx,edi
  40d48a:	add    BYTE PTR [edx],dh
  40d48c:	not    DWORD PTR [ebx]
  40d48e:	sbb    esi,0x51baf40b
  40d494:	(bad)  
  40d495:	mov    al,ah
  40d497:	hlt    
  40d498:	xchg   al,dl
  40d49a:	pop    eax
  40d49b:	lock popa 
  40d49d:	test   eax,0x187efcca
  40d4a2:	cmp    esp,esp
  40d4a4:	push   ebx
  40d4a5:	pop    esp
  40d4a6:	or     BYTE PTR [ebx+esi*8],bl
  40d4a9:	dec    esi
  40d4aa:	nop
  40d4ab:	aam    0xd4
  40d4ad:	call   0xdc85:0x55f58250
  40d4b4:	sbb    dh,BYTE PTR [ecx+edi*4]
  40d4b7:	push   0x397cd608
  40d4bc:	add    ebx,edx
  40d4be:	mov    DWORD PTR [ecx-0x53],eax
  40d4c1:	sbb    ch,BYTE PTR [edi+edx*4+0xcf1dfa9]
  40d4c8:	xor    ch,bh
  40d4ca:	test   eax,0x10da0b6b
  40d4cf:	push   edi
  40d4d0:	dec    ebp
  40d4d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4d2:	test   DWORD PTR [edx+0x69],esi
  40d4d5:	stos   DWORD PTR es:[edi],eax
  40d4d6:	std    
  40d4d7:	xchg   ebp,eax
  40d4d8:	ja     0x40d521
  40d4da:	mov    ah,0x45
  40d4dc:	in     eax,0x6a
  40d4de:	xchg   esp,eax
  40d4df:	loop   0x40d519
  40d4e1:	or     DWORD PTR [ebx+0x114f3b0c],esp
  40d4e7:	cmp    dl,BYTE PTR ss:[eax-0x6a59990d]
  40d4ee:	sbb    eax,0x2c9b4f8f
  40d4f3:	loopne 0x40d4ad
  40d4f5:	xor    BYTE PTR [ebx+0x60],al
  40d4f8:	das    
  40d4f9:	mov    esi,0xd90fa9dc
  40d4fe:	adc    ebp,DWORD PTR [esi]
  40d500:	and    eax,0xe8a6371d
  40d505:	mov    BYTE PTR [esi-0x62d15a4],dh
  40d50b:	xchg   ebx,eax
  40d50c:	adc    eax,0x3d887026
  40d511:	pop    edx
  40d512:	in     al,0xaf
  40d514:	fidivr WORD PTR [edx]
  40d516:	in     al,0x42
  40d518:	aad    0x2b
  40d51a:	add    esp,DWORD PTR ds:0x73b2a5cd
  40d520:	adc    al,BYTE PTR [edx+0x42]
  40d523:	fwait
  40d524:	inc    ebp
  40d525:	adc    bl,BYTE PTR [edi-0x5e]
  40d528:	adc    DWORD PTR ds:0x6a3003f4,esi
  40d52e:	and    al,0x21
  40d530:	mov    cl,0xeb
  40d532:	fisub  DWORD PTR [ebp+0x5c]
  40d535:	jns    0x40d517
  40d537:	arpl   bp,si
  40d539:	std    
  40d53a:	adc    al,0xf6
  40d53c:	mov    edi,DWORD PTR [ecx]
  40d53e:	iret   
  40d53f:	mov    al,BYTE PTR ds:0x7de47f2f
  40d545:	sbb    al,0xc4
  40d547:	jg     0x40d5ab
  40d549:	mov    edi,DWORD PTR [ebx-0x284bfb56]
  40d54f:	repnz sbb al,cl
  40d552:	jae    0x40d59e
  40d554:	cmp    BYTE PTR [edx-0x6c5696f7],dl
  40d55a:	ins    BYTE PTR es:[edi],dx
  40d55b:	cwde   
  40d55c:	or     DWORD PTR [edx],0x81270464
  40d562:	sbb    bh,BYTE PTR [ebp-0x72]
  40d565:	mov    WORD PTR [ecx],ds
  40d567:	stc    
  40d568:	mov    ds:0xc43d857d,al
  40d56d:	or     eax,0x597be33e
  40d572:	xor    eax,0x866dedfc
  40d577:	xchg   ebp,eax
  40d578:	(bad)  
  40d579:	(bad)  
  40d57a:	push   esp
  40d57b:	hlt    
  40d57c:	sbb    eax,DWORD PTR [eax-0x3a]
  40d57f:	and    DWORD PTR [ebx+0x7c],ebp
  40d582:	in     eax,dx
  40d583:	jg     0x40d577
  40d585:	out    dx,al
  40d586:	scas   al,BYTE PTR es:[edi]
  40d587:	push   es
  40d588:	(bad)  
  40d589:	pop    ebp
  40d58a:	mov    esi,0x74423916
  40d58f:	and    cl,BYTE PTR [ebx-0x64]
  40d592:	ficomp DWORD PTR [ecx+edx*4]
  40d595:	mov    BYTE PTR [edx-0x749c069d],ah
  40d59b:	dec    ecx
  40d59c:	push   cs
  40d59d:	test   WORD PTR [eax+0x3d],di
  40d5a1:	push   ebx
  40d5a2:	std    
  40d5a3:	fcmovne st,st(0)
  40d5a5:	scas   eax,DWORD PTR es:[edi]
  40d5a6:	shl    ebx,cl
  40d5a8:	rol    DWORD PTR [eax+0x1b06be72],cl
  40d5ae:	popf   
  40d5af:	sub    bl,al
  40d5b1:	adc    eax,0x12
  40d5b4:	lods   al,BYTE PTR ds:[esi]
  40d5b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5b6:	arpl   WORD PTR [ecx],sp
  40d5b8:	push   0x65
  40d5ba:	clc    
  40d5bb:	inc    edi
  40d5bc:	jns    0x40d54c
  40d5be:	mov    bh,0x3
  40d5c0:	fwait
  40d5c1:	addr16 jle 0x40d56f
  40d5c4:	dec    edi
  40d5c5:	in     eax,dx
  40d5c6:	cli    
  40d5c7:	sbb    al,0xd8
  40d5c9:	call   0xb555:0xb830864d
  40d5d0:	pop    edx
  40d5d1:	out    0x92,al
  40d5d3:	stos   BYTE PTR es:[edi],al
  40d5d4:	xchg   edx,eax
  40d5d5:	xchg   DWORD PTR [edx+0x66],edi
  40d5d8:	mov    esp,0x87352416
  40d5dd:	xchg   ebp,eax
  40d5de:	mov    al,0xac
  40d5e0:	push   eax
  40d5e1:	jns    0x40d57f
  40d5e3:	(bad)  [edx+0x7c7160e6]
  40d5e9:	mov    edi,?
  40d5eb:	jge    0x40d63f
  40d5ed:	push   ss
  40d5ee:	cmp    edx,0xffffffaf
  40d5f1:	jo     0x40d5f7
  40d5f3:	xlat   BYTE PTR ds:[ebx]
  40d5f4:	hlt    
  40d5f5:	sub    al,0x3d
  40d5f7:	in     eax,0xec
  40d5f9:	out    0x3d,eax
  40d5fb:	push   ebp
  40d5fc:	mov    al,ds:0xee4e3dea
  40d601:	(bad)  
  40d602:	mov    ebx,0x59392070
  40d607:	inc    ebp
  40d608:	ins    BYTE PTR es:[edi],dx
  40d609:	mov    al,ds:0xbe1c2e6
  40d60e:	jo     0x40d663
  40d610:	xchg   DWORD PTR [ebx],ebp
  40d612:	mov    eax,ds:0x51e9f31e
  40d617:	popa   
  40d618:	pop    esp
  40d619:	ins    BYTE PTR es:[edi],dx
  40d61a:	cwde   
  40d61b:	imul   esp,DWORD PTR [ecx-0x1c],0x70
  40d61f:	loop   0x40d602
  40d621:	mov    ebp,0x202ea6bb
  40d626:	add    bl,BYTE PTR [ebp-0x66]
  40d629:	addr16 leave 
  40d62b:	mov    dl,ah
  40d62d:	jge    0x40d5e9
  40d62f:	and    ebp,eax
  40d631:	xor    al,BYTE PTR [ebx]
  40d633:	cdq    
  40d634:	out    0x52,eax
  40d636:	jnp    0x40d697
  40d638:	out    dx,eax
  40d639:	mov    cs,edx
  40d63b:	jns    0x40d625
  40d63d:	ins    DWORD PTR es:[edi],dx
  40d63e:	adc    al,dl
  40d640:	fwait
  40d641:	add    al,0xaa
  40d643:	inc    esi
  40d644:	js     0x40d5e8
  40d646:	rol    BYTE PTR [esi+esi*4+0x16a9e508],0xed
  40d64e:	or     eax,0x30ee22b1
  40d653:	xor    eax,0xee83f274
  40d658:	retf   0xbdc3
  40d65b:	jmp    0x25e9:0xcf92f75b
  40d662:	sbb    edi,ebx
  40d664:	mov    al,0x3e
  40d666:	daa    
  40d667:	fdivr  QWORD PTR [esi+eax*2+0x9a33564]
  40d66e:	shl    BYTE PTR [ebx-0x1c1e80e],0x1f
  40d675:	sub    DWORD PTR [ebx+edi*1-0x68],ebp
  40d679:	cli    
  40d67a:	or     al,0xf1
  40d67c:	daa    
  40d67d:	push   eax
  40d67e:	and    DWORD PTR [edx+edi*4+0x3dea9f9e],0x734c5518
  40d689:	arpl   WORD PTR [eax+0x52c9ac24],si
  40d68f:	push   ebx
  40d690:	sub    al,BYTE PTR [ecx+0x77768022]
  40d696:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d697:	(bad)  
  40d698:	adc    BYTE PTR [eax],bl
  40d69a:	cmc    
  40d69b:	mov    edx,ds
  40d69d:	inc    ebx
  40d69e:	xchg   BYTE PTR [ebx+0x52],bh
  40d6a1:	and    al,0x7f
  40d6a3:	mov    ?,edi
  40d6a5:	out    0xd1,al
  40d6a7:	or     DWORD PTR [ecx],eax
  40d6a9:	xchg   esi,eax
  40d6aa:	xchg   edx,eax
  40d6ab:	or     DWORD PTR ds:0x182d8427,edx
  40d6b1:	daa    
  40d6b2:	push   eax
  40d6b3:	test   BYTE PTR [ecx-0x385c01a8],ch
  40d6b9:	mov    al,0x9e
  40d6bb:	pop    ebp
  40d6bc:	jg     0x40d724
  40d6be:	mov    eax,0xce61c300
  40d6c3:	cld    
  40d6c4:	sbb    BYTE PTR [esi],bh
  40d6c6:	es xchg esi,eax
  40d6c8:	or     DWORD PTR [esi+0x4db40aa9],edi
  40d6ce:	dec    eax
  40d6cf:	call   0x3f4b0fb
  40d6d4:	or     ch,BYTE PTR [ecx+edx*2-0x4e]
  40d6d8:	outs   dx,DWORD PTR gs:[esi]
  40d6da:	mov    edx,0xa2a0f03d
  40d6df:	pop    ecx
  40d6e0:	das    
  40d6e1:	cs stos BYTE PTR es:[edi],al
  40d6e3:	out    0x58,al
  40d6e5:	std    
  40d6e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6e7:	xchg   ebp,eax
  40d6e8:	lods   eax,DWORD PTR ds:[esi]
  40d6e9:	pop    ds
  40d6ea:	dec    esi
  40d6eb:	je     0x40d753
  40d6ed:	fcom   DWORD PTR ds:0x47e0b835
  40d6f3:	jl     0x40d71e
  40d6f5:	mov    ebp,0x11debbb7
  40d6fa:	lods   al,BYTE PTR ds:[esi]
  40d6fb:	and    esp,DWORD PTR [ecx-0x35]
  40d6fe:	adc    ch,BYTE PTR [ebp+0x1d13c690]
  40d704:	hlt    
  40d705:	bound  ebp,QWORD PTR [edi+0x1797f1da]
  40d70b:	cmp    ax,0x2634
  40d70f:	shr    DWORD PTR [esi-0x2558ec58],1
  40d715:	into   
  40d716:	pop    edi
  40d717:	rcr    bh,cl
  40d719:	(bad)  
  40d71a:	push   0x11
  40d71c:	adc    DWORD PTR [ebp+0x67],esi
  40d71f:	push   esi
  40d720:	mov    ebx,0x3d456675
  40d725:	xchg   esp,eax
  40d726:	jp     0x40d731
  40d728:	mov    DWORD PTR [esp+ecx*2-0x2ab93e27],0xb3f70e3e
  40d733:	sbb    BYTE PTR [esi],cl
  40d735:	scas   eax,DWORD PTR es:[edi]
  40d736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d737:	xor    al,BYTE PTR [edx]
  40d739:	push   es
  40d73a:	xchg   ebx,eax
  40d73b:	cmp    bh,dl
  40d73d:	fs adc al,0xb0
  40d740:	dec    ebp
  40d741:	cwde   
  40d742:	add    eax,0x2422493b
  40d747:	inc    esi
  40d748:	js     0x40d780
  40d74a:	xor    DWORD PTR [esi],esi
  40d74c:	xchg   esi,eax
  40d74d:	and    ch,BYTE PTR [ecx]
  40d74f:	fs inc eax
  40d751:	mov    bh,0x6e
  40d753:	enter  0xa8f2,0x42
  40d757:	test   al,0xf5
  40d759:	inc    eax
  40d75a:	cdq    
  40d75b:	push   ss
  40d75c:	mov    al,0x61
  40d75e:	cmp    eax,0xfe1830f2
  40d763:	push   esi
  40d764:	neg    ebp
  40d766:	aad    0x14
  40d768:	pop    ebx
  40d769:	push   ebx
  40d76a:	cmp    al,0xa0
  40d76c:	jmp    0x9594:0x805945cd
  40d773:	repz data16 cmp BYTE PTR [ebp-0x6831e796],0xb6
  40d77c:	retf   
  40d77d:	cdq    
  40d77e:	shl    DWORD PTR [ebx+0x2d],0xce
  40d782:	lea    ecx,[ecx+ebp*8-0x656c8bb1]
  40d789:	pop    edi
  40d78a:	dec    ebp
  40d78b:	xchg   BYTE PTR [esi-0x21],bl
  40d78e:	stc    
  40d78f:	inc    ebx
  40d790:	inc    esi
  40d791:	pop    esi
  40d792:	shl    ebp,1
  40d794:	mov    dl,0x2e
  40d796:	push   eax
  40d797:	data16 sub ah,dh
  40d79a:	sbb    bh,BYTE PTR [eax-0x56f122a8]
  40d7a0:	dec    ebx
  40d7a1:	out    0x92,al
  40d7a3:	imul   edi,esi,0x64f9db24
  40d7a9:	fsub   DWORD PTR [eax]
  40d7ab:	pop    es
  40d7ac:	xchg   edx,eax
  40d7ad:	and    ebx,edx
  40d7af:	xchg   edi,eax
  40d7b0:	xor    al,BYTE PTR ds:0x900a7ac0
  40d7b6:	inc    esp
  40d7b7:	and    DWORD PTR [eax],ecx
  40d7b9:	mov    edx,0x8d9a940d
  40d7be:	adc    ch,BYTE PTR [edx]
  40d7c0:	lds    ebp,FWORD PTR [ecx]
  40d7c2:	and    eax,0xcb9dc26b
  40d7c7:	push   ebp
  40d7c8:	jge    0x40d7a0
  40d7ca:	neg    DWORD PTR [ecx+esi*8]
  40d7cd:	push   esi
  40d7ce:	pop    edi
  40d7cf:	xchg   DWORD PTR [esp+eiz*8+0x554127f4],ebp
  40d7d6:	shr    DWORD PTR es:[edx],cl
  40d7d9:	mov    al,ds:0x91945700
  40d7de:	(bad)  
  40d7df:	popa   
  40d7e0:	mov    esi,0xdd80ea7c
  40d7e5:	xchg   DWORD PTR [ebx-0x4d],ebp
  40d7e8:	loop   0x40d82c
  40d7ea:	mov    ah,BYTE PTR [edx]
  40d7ec:	repz rcr BYTE PTR [edx+ebp*1],0xb5
  40d7f1:	mov    dh,0xef
  40d7f3:	adc    eax,0xc2cbc585
  40d7f8:	jl     0x40d80a
  40d7fa:	jmp    0xec89:0xd9b4c494
  40d801:	cmova  esi,DWORD PTR [esp+ecx*2+0x4f]
  40d806:	sbb    ch,bl
  40d808:	out    dx,eax
  40d809:	cmp    dh,bh
  40d80b:	sub    BYTE PTR [esi-0x18],al
  40d80e:	cld    
  40d80f:	std    
  40d810:	outs   dx,DWORD PTR ds:[si]
  40d812:	adc    dl,bl
  40d814:	push   esp
  40d815:	xor    edx,DWORD PTR [ebx]
  40d817:	and    DWORD PTR [esi+0x16],esp
  40d81a:	jnp    0x40d821
  40d81c:	push   ds
  40d81d:	test   DWORD PTR [edx],edx
  40d81f:	add    edx,DWORD PTR ds:0x56fd639c
  40d825:	cmp    al,0x55
  40d827:	(bad)  
  40d828:	cld    
  40d829:	mov    eax,ds:0xbdfe8db5
  40d82e:	dec    esp
  40d82f:	fs jge 0x40d7b5
  40d832:	mov    ecx,0x7bdf0125
  40d837:	sbb    DWORD PTR [ebx],ecx
  40d839:	outs   dx,DWORD PTR ds:[esi]
  40d83a:	mov    eax,0x36f38bf6
  40d83f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d840:	(bad)  
  40d842:	xchg   esp,eax
  40d843:	or     DWORD PTR [ebp-0x70],esi
  40d846:	dec    esp
  40d847:	or     edi,DWORD PTR [ebp+0x1cf7f80e]
  40d84d:	stos   DWORD PTR es:[edi],eax
  40d84e:	xchg   esi,eax
  40d84f:	adc    al,0xfa
  40d851:	(bad)  
  40d852:	in     al,0xa8
  40d854:	mov    ebp,0x9b9fb623
  40d859:	pop    edi
  40d85a:	inc    edx
  40d85b:	sbb    al,0x2b
  40d85d:	add    dh,BYTE PTR [ebx+eiz*4-0x6]
  40d861:	out    0x61,al
  40d863:	das    
  40d864:	push   ecx
  40d865:	dec    ebx
  40d866:	out    dx,al
  40d867:	cmp    dl,BYTE PTR [ebx]
  40d869:	mov    edx,0x851db663
  40d86e:	stos   DWORD PTR es:[edi],eax
  40d86f:	sbb    esi,DWORD PTR [ebp+0x4bb0fa94]
  40d875:	gs pop ds
  40d877:	out    0xf,eax
  40d879:	sar    dl,1
  40d87b:	ret    
  40d87c:	cmp    BYTE PTR [eax+0x46],bl
  40d87f:	lds    ecx,FWORD PTR [ebx-0x603dc9f9]
  40d885:	not    DWORD PTR [edx]
  40d887:	cmp    edi,DWORD PTR [esi]
  40d889:	ret    0xa09e
  40d88c:	push   es
  40d88d:	outs   dx,BYTE PTR ds:[esi]
  40d88e:	std    
  40d88f:	pop    eax
  40d890:	fwait
  40d891:	in     eax,0x52
  40d893:	lds    ebp,FWORD PTR [ebp-0x67]
  40d896:	pop    ebp
  40d897:	cmp    bh,BYTE PTR [eax+0xfc16920]
  40d89d:	ds test cl,0xce
  40d8a1:	scas   al,BYTE PTR es:[edi]
  40d8a2:	aaa    
  40d8a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8a4:	sub    BYTE PTR [esi+0x7a],ch
  40d8a7:	add    eax,0x91f0146
  40d8ac:	sbb    ebx,DWORD PTR [ebx+0x74]
  40d8af:	adc    dl,bh
  40d8b1:	call   0x8ea9:0x86efb620
  40d8b8:	mov    ebp,0xc13b4833
  40d8bd:	xor    DWORD PTR [eax-0x52],edx
  40d8c0:	in     eax,dx
  40d8c1:	imul   esp,DWORD PTR [eax],0x5b8a199
  40d8c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8c8:	inc    ebx
  40d8c9:	mov    ecx,0x25961b7c
  40d8ce:	add    DWORD PTR [eax-0x53e6c794],edx
  40d8d4:	pop    edi
  40d8d5:	pop    esp
  40d8d6:	adc    BYTE PTR [ebx-0x21bd1a0b],0xbd
  40d8dd:	jmp    0x57e5:0xed5772cb
  40d8e4:	arpl   WORD PTR [eax],sp
  40d8e6:	xchg   esi,eax
  40d8e7:	mov    BYTE PTR [eax-0x54],dh
  40d8ea:	cmp    eax,0x527d7a69
  40d8ef:	xor    DWORD PTR ss:[ebp-0xb],esp
  40d8f3:	mov    ebx,0xdc772609
  40d8f8:	inc    ebx
  40d8f9:	dec    ebx
  40d8fa:	cmp    esi,edi
  40d8fc:	mov    al,ds:0x3ad76eb9
  40d901:	add    ah,BYTE PTR [eax]
  40d903:	jb     0x40d915
  40d905:	dec    ecx
  40d906:	call   0x3c799e30
  40d90b:	ds stc 
  40d90d:	or     esi,DWORD PTR [edi]
  40d90f:	cmp    ecx,ebx
  40d911:	loopne 0x40d8f3
  40d913:	rcl    BYTE PTR [edx],cl
  40d915:	mov    ss,esp
  40d917:	jle    0x40d905
  40d919:	or     eax,0x9ffaad5c
  40d91e:	push   ss
  40d91f:	push   0x1d130be4
  40d924:	or     eax,0xd1bc7c57
  40d929:	sub    al,dh
  40d92b:	pop    es
  40d92c:	iret   
  40d92d:	and    al,0x4f
  40d92f:	fst    QWORD PTR ds:0xab69df38
  40d935:	pop    edi
  40d936:	je     0x40d9a2
  40d938:	icebp  
  40d939:	lods   eax,DWORD PTR ds:[esi]
  40d93a:	mov    ch,0x29
  40d93c:	fist   DWORD PTR [esi]
  40d93e:	jne    0x40d94a
  40d940:	mov    al,0x72
  40d942:	or     DWORD PTR [eax+0x2a],eax
  40d945:	xchg   DWORD PTR [ecx+ebp*1-0x1e2d69aa],eax
  40d94c:	es out 0xac,eax
  40d94f:	dec    edi
  40d950:	push   esp
  40d951:	dec    esi
  40d952:	sbb    DWORD PTR [ebx],edx
  40d954:	push   ebp
  40d955:	cmp    BYTE PTR [ebx-0x22],cl
  40d958:	inc    ecx
  40d959:	xchg   edx,eax
  40d95a:	in     al,0x14
  40d95c:	das    
  40d95d:	add    DWORD PTR [edx+ebx*4],edi
  40d960:	test   eax,0x86ab7af4
  40d965:	fbstp  TBYTE PTR [ecx-0x45fb0b8e]
  40d96b:	loop   0x40d91d
  40d96d:	outs   dx,DWORD PTR ds:[esi]
  40d96e:	cld    
  40d96f:	add    edx,DWORD PTR [ecx]
  40d971:	lea    ecx,ds:0xe0e899e0
  40d977:	aam    0xce
  40d979:	xchg   ebx,eax
  40d97a:	cdq    
  40d97b:	outs   dx,DWORD PTR ds:[esi]
  40d97c:	daa    
  40d97d:	mov    esp,0x6170884b
  40d982:	cmp    al,0xdc
  40d984:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d985:	or     BYTE PTR [eax-0x55e574b2],ah
  40d98b:	inc    esi
  40d98c:	or     eax,0x9b66b804
  40d991:	or     BYTE PTR [eax],ch
  40d993:	jmp    0xf4f3f42e
  40d998:	nop
  40d999:	jge    0x40d95d
  40d99b:	adc    eax,0x760cf367
  40d9a0:	stos   DWORD PTR es:[edi],eax
  40d9a1:	fsubr  QWORD PTR [edi]
  40d9a3:	push   ss
  40d9a4:	scas   eax,DWORD PTR es:[edi]
  40d9a5:	pop    esi
  40d9a6:	pop    es
  40d9a7:	mov    WORD PTR [esi-0x1d74b561],fs
  40d9ad:	pop    ebx
  40d9ae:	cs sub al,0x6e
  40d9b1:	push   ds
  40d9b2:	rol    ah,cl
  40d9b4:	xchg   esi,eax
  40d9b5:	nop
  40d9b6:	out    0xa8,al
  40d9b8:	scas   eax,DWORD PTR es:[edi]
  40d9b9:	das    
  40d9ba:	call   0x68ab:0x884a49c0
  40d9c1:	(bad)  
  40d9c2:	daa    
  40d9c3:	pushf  
  40d9c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9c5:	adc    DWORD PTR cs:[eax],0x66
  40d9c9:	dec    eax
  40d9ca:	sub    esi,DWORD PTR [ebx]
  40d9cc:	shl    DWORD PTR [ecx],0x98
  40d9cf:	pop    ebp
  40d9d0:	cld    
  40d9d1:	retf   
  40d9d2:	data16 test BYTE PTR ds:0xb9ede86f,bh
  40d9d9:	dec    esi
  40d9da:	aas    
  40d9db:	aad    0xf0
  40d9dd:	xor    ecx,edx
  40d9df:	stos   DWORD PTR es:[edi],eax
  40d9e0:	jno    0x40d99d
  40d9e2:	adc    eax,0xe312185
  40d9e7:	outs   dx,DWORD PTR ds:[esi]
  40d9e8:	mov    esi,ebx
  40d9ea:	mov    ebx,0x6724fa64
  40d9ef:	clc    
  40d9f0:	adc    eax,0xdbcada9d
  40d9f5:	cld    
  40d9f6:	push   edi
  40d9f7:	jp     0x40da14
  40d9f9:	out    dx,eax
  40d9fa:	out    0xcb,al
  40d9fc:	and    BYTE PTR [edi],bh
  40d9fe:	(bad)  
  40d9ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da00:	inc    eax
  40da01:	pop    ss
  40da02:	test   edi,edx
  40da04:	lock pop edx
  40da06:	cmp    esi,esp
  40da08:	adc    BYTE PTR [edx],cl
  40da0a:	jmp    0x40d9da
  40da0c:	cmp    eax,DWORD PTR [ebp+0x1c167097]
  40da12:	pop    ecx
  40da13:	inc    eax
  40da14:	int    0x4b
  40da16:	dec    esi
  40da17:	jmp    0x8a4b3f9c
  40da1c:	sub    al,0xc0
  40da1e:	add    BYTE PTR [ecx-0x68bef6f7],dh
  40da24:	rol    BYTE PTR [esp+eiz*4],1
  40da27:	inc    edx
  40da28:	icebp  
  40da29:	or     BYTE PTR [ecx-0x78],0x2f
  40da2d:	mov    ebp,0x9a47bb4a
  40da32:	xchg   DWORD PTR [edi+edx*1-0x72cf219],ecx
  40da39:	mov    ch,0x1e
  40da3b:	(bad)  
  40da3d:	push   ebx
  40da3e:	push   ss
  40da3f:	sub    ebx,ecx
  40da41:	test   eax,0x6ae40053
  40da46:	xchg   ebx,eax
  40da47:	mov    ebx,0x61cfb70
  40da4c:	mov    eax,ds:0x8a344e67
  40da51:	push   0x6c944239
  40da56:	lods   al,BYTE PTR ds:[esi]
  40da57:	nop    DWORD PTR ds:0x382ac50d
  40da5e:	push   ds
  40da5f:	in     eax,0xe5
  40da61:	jb     0x40da36
  40da63:	mov    eax,ds:0x22a2abfc
  40da68:	lods   eax,DWORD PTR ds:[esi]
  40da69:	pushf  
  40da6a:	sbb    DWORD PTR [edx+0x2a09e7e7],0x7064c4bf
  40da74:	mov    esi,0x67dd0865
  40da79:	inc    edx
  40da7a:	mov    ebp,0xad12d2f1
  40da7f:	mov    esi,0x51f8e990
  40da84:	or     al,0x6b
  40da86:	dec    esi
  40da87:	xchg   edi,eax
  40da88:	in     ax,0x2b
  40da8b:	or     DWORD PTR ds:0xef00077c,esp
  40da91:	xchg   DWORD PTR [edi],esp
  40da93:	and    edi,ebx
  40da95:	es popa 
  40da97:	and    BYTE PTR [edi+0x2338542f],dh
  40da9d:	mov    ds:0x278109e6,al
  40daa2:	mov    al,ds:0xae7ecf7
  40daa7:	into   
  40daa8:	rol    DWORD PTR [ecx+edi*4],1
  40daab:	pop    ebx
  40daac:	mov    dh,0xbd
  40daae:	push   es
  40daaf:	push   ss
  40dab0:	push   edx
  40dab1:	mov    ah,0x7e
  40dab3:	or     DWORD PTR [edx-0x3ad3becd],ebx
  40dab9:	daa    
  40daba:	fcmovu st,st(5)
  40dabc:	add    ebx,DWORD PTR [ebp-0x3da54ce8]
  40dac2:	xchg   esp,eax
  40dac3:	aaa    
  40dac4:	into   
  40dac5:	xchg   DWORD PTR [esi-0x6],ebx
  40dac8:	mov    edx,0x2aea45a2
  40dacd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dace:	cs test eax,0xf6b8d6c1
  40dad4:	loop   0x40dae3
  40dad6:	out    dx,al
  40dad7:	daa    
  40dad8:	and    eax,0x7e5df17a
  40dadd:	pop    eax
  40dade:	dec    ebx
  40dadf:	loopne 0x40dae6
  40dae1:	cmp    ebp,edx
  40dae3:	in     al,0x7e
  40dae5:	mov    ah,0xc0
  40dae7:	jecxz  0x40dad2
  40dae9:	xor    eax,DWORD PTR [ecx]
  40daeb:	scas   eax,DWORD PTR es:[edi]
  40daec:	cmp    DWORD PTR [edi-0x77],esi
  40daef:	jmpw   0x7c7b
  40daf3:	xchg   edi,eax
  40daf4:	sbb    DWORD PTR [edi],esp
  40daf6:	cdq    
  40daf7:	and    esp,DWORD PTR [ebx]
  40daf9:	ret    
  40dafa:	jp     0x40db5b
  40dafc:	nop
  40dafd:	jnp    0x40daec
  40daff:	pop    eax
  40db00:	adc    al,0x62
  40db02:	mov    eax,ds:0xd55fa76
  40db07:	data16 sub bh,BYTE PTR [esi+0x77]
  40db0b:	mov    ds:0xaf3033b6,al
  40db10:	add    bl,ah
  40db12:	das    
  40db13:	push   ebp
  40db14:	fistp  QWORD PTR [edi-0x4680ced0]
  40db1a:	jb     0x40db96
  40db1c:	fs xor eax,0xce2fa34f
  40db22:	dec    ebp
  40db23:	mov    ch,0x44
  40db25:	aaa    
  40db26:	sbb    edx,DWORD PTR [eax-0x22f618c0]
  40db2c:	sub    ch,dh
  40db2e:	repz shl DWORD PTR [edi-0x26],cl
  40db32:	retf   
  40db33:	sbb    al,0xba
  40db35:	je     0x40db1a
  40db37:	push   eax
  40db38:	mov    al,0xa1
  40db3a:	jl     0x40db7c
  40db3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db3d:	ret    0x3d18
  40db40:	sbb    al,0xd
  40db42:	mov    ecx,0x1ab039bf
  40db47:	fwait
  40db48:	test   al,0xc
  40db4a:	mov    dl,0x12
  40db4c:	add    eax,ecx
  40db4e:	push   ds
  40db4f:	shl    bh,cl
  40db51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db52:	sbb    bl,ch
  40db54:	cld    
  40db55:	daa    
  40db56:	adc    al,0xc4
  40db58:	popf   
  40db59:	call   0x4da3427c
  40db5e:	pop    eax
  40db5f:	adc    DWORD PTR [ecx+0x33],0xffffffae
  40db63:	retf   0xa42
  40db66:	jb     0x40db7e
  40db68:	lahf   
  40db69:	pop    es
  40db6a:	lods   eax,DWORD PTR ds:[esi]
  40db6b:	jb     0x40db49
  40db6d:	fcom   st(7)
  40db6f:	push   0xfffffff4
  40db71:	jmp    0x1d3a4379
  40db76:	ret    
  40db77:	cmc    
  40db78:	(bad)  
  40db79:	push   esp
  40db7a:	cmc    
  40db7b:	jge    0x40db32
  40db7d:	out    0xf2,eax
  40db7f:	stos   BYTE PTR es:[edi],al
  40db80:	add    BYTE PTR [eax-0x46cf4677],0xd3
  40db87:	xor    BYTE PTR [ebp-0x3d],dl
  40db8a:	xor    cl,BYTE PTR [ecx]
  40db8c:	inc    esp
  40db8d:	pop    esi
  40db8e:	push   0xe94b6027
  40db93:	(bad)  
  40db95:	fld    TBYTE PTR [ebp+0x4b]
  40db98:	or     al,0x79
  40db9a:	out    dx,eax
  40db9b:	retf   0xc557
  40db9e:	xchg   ecx,eax
  40db9f:	xchg   ebp,eax
  40dba0:	pop    ds
  40dba1:	and    eax,0xf144e57f
  40dba6:	es xchg ebx,eax
  40dba8:	lods   eax,DWORD PTR ds:[esi]
  40dba9:	mov    edx,DWORD PTR [eax+0x42]
  40dbac:	(bad)  
  40dbad:	in     al,0x95
  40dbaf:	push   eax
  40dbb0:	push   ebp
  40dbb1:	or     al,0x51
  40dbb3:	pop    eax
  40dbb4:	or     edx,esp
  40dbb6:	call   0x7e9592e6
  40dbbb:	leave  
  40dbbc:	ficom  DWORD PTR [edi]
  40dbbe:	mov    cl,0xb1
  40dbc0:	xor    bh,dl
  40dbc2:	mov    dh,0xeb
  40dbc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbc5:	call   0x741d:0x44864bd5
  40dbcc:	clc    
  40dbcd:	stos   BYTE PTR es:[edi],al
  40dbce:	lods   eax,DWORD PTR ds:[esi]
  40dbcf:	ficom  DWORD PTR [edi+0x1d]
  40dbd2:	or     BYTE PTR [ecx+ebx*4+0x3b4d906e],ah
  40dbd9:	gs ins BYTE PTR es:[edi],dx
  40dbdb:	mov    ecx,DWORD PTR [ebp+0x61]
  40dbde:	(bad)  
  40dbdf:	ss in  eax,dx
  40dbe1:	iret   
  40dbe2:	pop    ebp
  40dbe3:	xchg   DWORD PTR [eax-0x2ed7f3e2],ebx
  40dbe9:	repz xor bl,BYTE PTR [esp+edi*4+0x8]
  40dbee:	outs   dx,DWORD PTR ds:[esi]
  40dbef:	and    esp,ecx
  40dbf1:	jecxz  0x40dc2f
  40dbf3:	ins    DWORD PTR es:[edi],dx
  40dbf4:	cdq    
  40dbf5:	add    esp,DWORD PTR [edi]
  40dbf7:	and    DWORD PTR [ebp-0x14f8a29e],ebx
  40dbfd:	(bad)  
  40dbfe:	pop    ds
  40dbff:	cli    
  40dc00:	and    esi,eax
  40dc02:	mov    ecx,0x134cdc43
  40dc07:	push   cs
  40dc08:	xor    BYTE PTR [edx],0xee
  40dc0b:	adc    bl,BYTE PTR ds:0x1faa2d21
  40dc11:	imul   edx,DWORD PTR [ecx+0x7d],0xd37c7f87
  40dc18:	push   0x2f
  40dc1a:	ds mov ch,0x9
  40dc1d:	in     eax,0x99
  40dc1f:	jle    0x40dbaf
  40dc21:	jne    0x40dbe6
  40dc23:	addr16 call 0xef7d:0xabdb10d0
  40dc2b:	xor    BYTE PTR [eax+0x38],0xb6
  40dc2f:	mov    WORD PTR [edx+0x3],es
  40dc32:	and    cl,BYTE PTR [edi+ebp*8]
  40dc35:	inc    esp
  40dc36:	mov    eax,0x908b0194
  40dc3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc3c:	add    edx,DWORD PTR [ebx]
  40dc3e:	outs   dx,DWORD PTR ds:[esi]
  40dc3f:	mov    ecx,0x2d6ecace
  40dc44:	fdivr  DWORD PTR [edx]
  40dc46:	rcr    BYTE PTR [esi+0x49],1
  40dc49:	push   ds
  40dc4a:	sbb    dl,BYTE PTR [esi-0x4]
  40dc4d:	(bad)  
  40dc4e:	dec    eax
  40dc4f:	sbb    DWORD PTR [ebx-0x16852e1b],ebp
  40dc55:	je     0x40dc67
  40dc57:	push   ss
  40dc58:	mov    ebx,0x9548d6bd
  40dc5d:	mov    cl,0xd5
  40dc5f:	mov    ds:0xee5bf414,eax
  40dc64:	xchg   esp,eax
  40dc65:	xchg   BYTE PTR [ecx-0x6d],bh
  40dc68:	test   BYTE PTR [ebp+0x69ed95d5],bl
  40dc6e:	push   0x50a17942
  40dc73:	lds    esp,FWORD PTR [esi-0x21]
  40dc76:	jecxz  0x40dc2d
  40dc78:	shl    cx,0x3b
  40dc7c:	aam    0x36
  40dc7e:	es ss xchg edi,eax
  40dc81:	rcr    BYTE PTR [ebp+eiz*8+0x37],0xb0
  40dc86:	push   ds
  40dc87:	icebp  
  40dc88:	hlt    
  40dc89:	(bad)  
  40dc8a:	jnp    0x40dceb
  40dc8c:	lods   al,BYTE PTR ds:[esi]
  40dc8d:	(bad)  
  40dc8f:	push   es
  40dc90:	sub    ecx,DWORD PTR [eax-0x26]
  40dc93:	retf   0xea84
  40dc96:	mov    WORD PTR [esi+0x32190861],?
  40dc9c:	jb     0x40dc94
  40dc9e:	pop    edx
  40dc9f:	pop    ecx
  40dca0:	js     0x40dc68
  40dca2:	sub    ch,dl
  40dca4:	push   eax
  40dca5:	dec    edx
  40dca6:	scas   al,BYTE PTR es:[edi]
  40dca7:	enter  0x691e,0xfd
  40dcab:	(bad)  
  40dcac:	pop    ebp
  40dcad:	inc    ebp
  40dcae:	mov    dl,0x53
  40dcb0:	cmp    cl,bh
  40dcb2:	or     BYTE PTR [edi+0x54],dh
  40dcb5:	ins    DWORD PTR es:[edi],dx
  40dcb6:	call   0x21c47025
  40dcbb:	dec    ebp
  40dcbc:	push   ecx
  40dcbd:	xchg   ebp,eax
  40dcbe:	or     eax,0x4483a823
  40dcc3:	cmc    
  40dcc4:	leave  
  40dcc5:	aaa    
  40dcc6:	and    DWORD PTR [edi],0x6f
  40dcc9:	mov    ebp,DWORD PTR [ebp-0x684e29e3]
  40dccf:	iret   
  40dcd0:	pop    edx
  40dcd1:	rol    edi,0xa3
  40dcd4:	jecxz  0x40dd14
  40dcd6:	pop    ss
  40dcd7:	dec    edi
  40dcd8:	adc    dl,cl
  40dcda:	or     dl,bl
  40dcdc:	loop   0x40dd41
  40dcde:	push   es
  40dcdf:	jl     0x40dd3f
  40dce1:	push   0xffffffc5
  40dce3:	stos   BYTE PTR es:[edi],al
  40dce4:	or     dh,bl
  40dce6:	shr    ebp,0xe1
  40dce9:	push   esp
  40dcea:	dec    edx
  40dceb:	loop   0x40dd1b
  40dced:	int3   
  40dcee:	mov    WORD PTR ds:0xc1e046c6,ds
  40dcf4:	push   ebx
  40dcf5:	jmp    0xf8dc:0x2b186884
  40dcfc:	in     al,dx
  40dcfd:	pop    edx
  40dcfe:	mov    bh,0xba
  40dd00:	test   DWORD PTR [ebp+0x73b046d1],ecx
  40dd06:	test   al,0x99
  40dd08:	fs sti 
  40dd0a:	popa   
  40dd0b:	jg     0x40dcd2
  40dd0d:	xor    BYTE PTR [edx+0x2c],0x21
  40dd11:	outs   dx,DWORD PTR ds:[esi]
  40dd12:	mov    dh,0x43
  40dd14:	icebp  
  40dd15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd16:	xor    dl,BYTE PTR [esi+edx*1+0x51]
  40dd1a:	lds    eax,FWORD PTR [ebx+0x2241f53a]
  40dd20:	cmp    eax,0x11fa9b36
  40dd25:	rcl    esp,0x1c
  40dd28:	cmp    ecx,ecx
  40dd2a:	ja     0x40dd32
  40dd2c:	loopne 0x40dcb9
  40dd2e:	xchg   DWORD PTR [edx+0x6a5c80a4],eax
  40dd34:	dec    esp
  40dd35:	xor    BYTE PTR [esi+0x13757f75],bl
  40dd3b:	icebp  
  40dd3c:	push   esi
  40dd3d:	call   0x4e83:0xcc140bd0
  40dd44:	pop    edx
  40dd45:	(bad)  [eax+0x14]
  40dd48:	data16 fidiv WORD PTR [ebx-0x7c4c4e4c]
  40dd4f:	ss jo  0x40dd70
  40dd52:	fstp   TBYTE PTR [edi+eax*1+0x3f38030]
  40dd59:	and    eax,ecx
  40dd5b:	or     esp,DWORD PTR [ecx-0x5e0685d9]
  40dd61:	xchg   BYTE PTR [edi],dl
  40dd63:	call   0xe91d576
  40dd68:	jb     0x40dd83
  40dd6a:	std    
  40dd6b:	cmp    ebp,esp
  40dd6d:	cmp    DWORD PTR [ebx],edx
  40dd6f:	popa   
  40dd70:	adc    ch,dh
  40dd72:	mov    edi,0xf391e85b
  40dd77:	xor    BYTE PTR cs:[esi+0x72071c09],0xd8
  40dd7f:	clc    
  40dd80:	call   0xc90c65a6
  40dd85:	inc    esp
  40dd86:	lds    edi,FWORD PTR [ecx-0xb29a0c8]
  40dd8c:	mov    edi,0x23ae4c1e
  40dd91:	fidiv  DWORD PTR [edx+0x64]
  40dd94:	ins    DWORD PTR es:[edi],dx
  40dd95:	xchg   BYTE PTR [edi-0x4f],ah
  40dd98:	adc    al,bh
  40dd9a:	dec    esp
  40dd9b:	mov    ecx,0x17d1ad2d
  40dda0:	fs retf 
  40dda2:	popa   
  40dda3:	mov    cl,BYTE PTR [ebx]
  40dda5:	test   DWORD PTR [ecx+0xd9fa437],esi
  40ddab:	dec    esi
  40ddac:	push   edi
  40ddad:	adc    dl,cl
  40ddaf:	psubd  mm2,QWORD PTR [ebx-0xae4565a]
  40ddb6:	shl    DWORD PTR [ebx+0x7b],0x77
  40ddba:	adc    eax,0x97775c8a
  40ddbf:	popf   
  40ddc0:	xor    DWORD PTR [edx-0x30],eax
  40ddc3:	xchg   edi,eax
  40ddc4:	add    DWORD PTR [eax+0x79bc5663],0xffffffc1
  40ddcb:	dec    edx
  40ddcc:	and    eax,0xeccdf843
  40ddd1:	sub    DWORD PTR [eax],edx
  40ddd3:	jg     0x40dda6
  40ddd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddd6:	pop    ecx
  40ddd7:	push   eax
  40ddd8:	outs   dx,DWORD PTR ds:[esi]
  40ddd9:	shl    BYTE PTR [esi],0x1b
  40dddc:	jb     0x40de20
  40ddde:	imul   edi,DWORD PTR [ebx],0xfffffff0
  40dde1:	add    DWORD PTR [eax-0x2f],edi
  40dde4:	sub    BYTE PTR [ebx],dh
  40dde6:	leave  
  40dde7:	mov    dl,0x5b
  40dde9:	jmp    0x40de1c
  40ddeb:	and    bl,BYTE PTR [esi+0x64]
  40ddee:	xchg   DWORD PTR [edx],edx
  40ddf0:	jl     0x40de64
  40ddf2:	adc    DWORD PTR [esi-0x4e],ebp
  40ddf5:	push   0x810ae0e5
  40ddfa:	add    eax,0xbec7abea
  40ddff:	das    
  40de00:	mov    eax,0x8321d77f
  40de05:	iret   
  40de06:	bound  ecx,QWORD PTR [edi+edi*2]
  40de09:	(bad)  
  40de0b:	ss mov al,0x1c
  40de0e:	push   0xae200da
  40de13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de14:	cdq    
  40de15:	dec    eax
  40de16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de17:	xchg   esp,eax
  40de18:	imul   esi,DWORD PTR [esi+0x2f],0x36
  40de1c:	adc    ah,BYTE PTR [esi]
  40de1e:	pop    es
  40de1f:	in     eax,0x2c
  40de21:	mov    bh,0x7c
  40de23:	push   esi
  40de24:	and    cl,BYTE PTR [esi+0x5dfa35bf]
  40de2a:	mov    bl,0xef
  40de2c:	jmp    0x808272cb
  40de31:	sub    eax,0x7fd0e80c
  40de36:	ins    BYTE PTR es:[edi],dx
  40de37:	aam    0x69
  40de39:	mov    ds:0x5efb927,eax
  40de3e:	ins    DWORD PTR es:[edi],dx
  40de3f:	test   eax,0x3c311f87
  40de44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de45:	sar    DWORD PTR [ebx+0x42d07cda],1
  40de4b:	jbe    0x40ddd2
  40de4d:	out    dx,al
  40de4e:	xchg   edx,eax
  40de4f:	inc    esi
  40de50:	arpl   WORD PTR [eax-0x1d4c5a06],si
  40de56:	push   cs
  40de57:	out    dx,eax
  40de58:	xor    al,0xa4
  40de5a:	pusha  
  40de5b:	outs   dx,BYTE PTR ds:[esi]
  40de5c:	jns    0x40dea2
  40de5e:	fdiv   QWORD PTR [ecx+ebx*1+0x7c]
  40de62:	xor    ch,BYTE PTR [edx+0x51]
  40de65:	adc    al,0x2a
  40de67:	xchg   edx,eax
  40de68:	int    0x47
  40de6a:	push   edx
  40de6b:	lock xchg edi,eax
  40de6d:	xor    DWORD PTR [esi-0x1a26d632],esi
  40de73:	or     al,0xec
  40de75:	push   esi
  40de76:	adc    BYTE PTR [eax+0x2ada8136],0x9b
  40de7d:	push   ebx
  40de7e:	mov    esp,0x6fe722
  40de83:	aas    
  40de84:	cld    
  40de85:	imul   esp,DWORD PTR [eax+0x75dffe67],0xffffffc9
  40de8c:	pop    ds
  40de8d:	adc    eax,0xa910d950
  40de92:	sbb    DWORD PTR [ebx-0x54],esp
  40de95:	iret   
  40de96:	daa    
  40de97:	pushf  
  40de98:	ret    0x592f
  40de9b:	dec    edi
  40de9c:	xor    esi,0xffffffca
  40de9f:	scas   al,BYTE PTR es:[edi]
  40dea0:	xchg   edi,edi
  40dea2:	or     ebp,eax
  40dea4:	cmc    
  40dea5:	inc    edi
  40dea6:	inc    ecx
  40dea7:	pop    esi
  40dea8:	and    al,0xed
  40deaa:	xchg   esi,eax
  40deab:	mov    edi,DWORD PTR [esi+0x301f5bbe]
  40deb1:	adc    eax,edx
  40deb3:	pop    esi
  40deb4:	aam    0x93
  40deb6:	smsw   edi
  40deb9:	xor    eax,DWORD PTR [esi-0x50748ce3]
  40debf:	cdq    
  40dec0:	sbb    ah,BYTE PTR [edx]
  40dec2:	pop    DWORD PTR [ecx+0x205340a3]
  40dec8:	(bad)  
  40dec9:	pop    ss
  40deca:	mov    ebx,0x5c899775
  40decf:	mov    ebp,edx
  40ded1:	xchg   edx,eax
  40ded2:	rcl    DWORD PTR [edx],cl
  40ded4:	xchg   DWORD PTR [eax+edx*8+0x68],ebx
  40ded8:	adc    al,0x50
  40deda:	and    al,0x3d
  40dedc:	imul   ebp,DWORD PTR [ebx],0x78
  40dedf:	add    ah,BYTE PTR ds:0xa14b73b1
  40dee5:	sbb    DWORD PTR [eax+0x4364ad94],ebx
  40deeb:	adc    ebp,DWORD PTR [ecx-0x7e07a78c]
  40def1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40def2:	lods   eax,DWORD PTR ds:[esi]
  40def3:	(bad)  
  40def4:	push   ebp
  40def5:	ins    BYTE PTR es:[edi],dx
  40def6:	adc    ah,ch
  40def8:	xchg   ebp,eax
  40def9:	syscall 
  40defb:	mov    edx,0xb72b2a5e
  40df00:	mov    bh,0x5d
  40df02:	jno    0x40dea2
  40df04:	repz aas 
  40df06:	sbb    eax,0xf5733329
  40df0b:	ss aad 0x34
  40df0e:	sti    
  40df0f:	inc    ecx
  40df10:	retf   
  40df11:	mov    eax,ds:0x1e5344d6
  40df16:	ret    
  40df17:	icebp  
  40df18:	in     al,0xdc
  40df1a:	pop    esp
  40df1b:	jo     0x40df85
  40df1d:	outs   dx,DWORD PTR ds:[esi]
  40df1e:	int3   
  40df1f:	sar    BYTE PTR [eax+0x17610b69],cl
  40df25:	mov    eax,ds:0xf5a7cc9f
  40df2a:	jmp    0x39efac84
  40df2f:	push   ebx
  40df30:	fsub   QWORD PTR [esi]
  40df32:	fistp  DWORD PTR [eax-0x12]
  40df35:	mov    bh,0x75
  40df37:	mov    bh,0xce
  40df39:	mov    esp,eax
  40df3b:	push   esi
  40df3c:	icebp  
  40df3d:	adc    esi,DWORD PTR [ebp+0x10]
  40df40:	rol    BYTE PTR [ebp-0x7b],0x1a
  40df44:	sahf   
  40df45:	(bad)  
  40df46:	call   FWORD PTR [edi+eax*4]
  40df49:	adc    DWORD PTR [esi],edi
  40df4b:	mov    eax,DWORD PTR [edx+0x48281935]
  40df51:	jae    0x40df82
  40df53:	ja     0x40df35
  40df55:	mov    ?,WORD PTR [ecx+edx*4+0x6e87930e]
  40df5c:	add    BYTE PTR [ecx+0xaa9868a],dl
  40df62:	xor    al,0x5e
  40df64:	ret    
  40df65:	xor    edx,ebp
  40df67:	lock leavew 
  40df6a:	xchg   esp,eax
  40df6b:	cld    
  40df6c:	jg     0x40df8d
  40df6e:	das    
  40df6f:	stos   DWORD PTR es:[edi],eax
  40df70:	xchg   ebp,eax
  40df71:	cmp    al,0xd7
  40df73:	shl    edi,cl
  40df75:	(bad)  
  40df76:	pushf  
  40df77:	mov    BYTE PTR [edi],bh
  40df79:	lock in eax,0x7a
  40df7c:	mov    edi,0x482ae57e
  40df81:	mov    esi,0x724c887c
  40df86:	xchg   edi,eax
  40df87:	jl     0x40dfa8
  40df89:	mov    BYTE PTR [edi],0xde
  40df8c:	jnp    0x40df92
  40df8e:	(bad)  
  40df8f:	dec    edx
  40df90:	adc    dh,cl
  40df92:	xor    eax,0x5c1f1736
  40df97:	shl    BYTE PTR ds:0x1b0c7435,0x5a
  40df9e:	xchg   esp,eax
  40df9f:	ret    0xcd9a
  40dfa2:	adc    edi,DWORD PTR [edi-0x4b507f47]
  40dfa8:	dec    ebp
  40dfa9:	adc    BYTE PTR [bp+di],0xba
  40dfad:	test   ch,bl
  40dfaf:	add    ch,BYTE PTR [ecx-0x5c]
  40dfb2:	ret    
  40dfb3:	pushf  
  40dfb4:	test   ebp,ebx
  40dfb6:	lods   eax,DWORD PTR ds:[esi]
  40dfb7:	dec    esp
  40dfb8:	adc    DWORD PTR [edi],ebp
  40dfba:	adc    al,0xe6
  40dfbc:	mov    BYTE PTR [esp+ebx*8+0x30],bh
  40dfc0:	loopne 0x40df76
  40dfc2:	pushf  
  40dfc3:	mov    bl,0x21
  40dfc5:	adc    BYTE PTR [edi-0x24],al
  40dfc8:	mov    bh,0x24
  40dfca:	test   DWORD PTR [edx],esi
  40dfcc:	mov    eax,cs
  40dfce:	and    DWORD PTR [edx-0xe],ebx
  40dfd1:	fnsave [edx]
  40dfd3:	(bad)  
  40dfd4:	std    
  40dfd5:	sbb    BYTE PTR gs:[edi-0xe],ch
  40dfd9:	popa   
  40dfda:	test   DWORD PTR [ecx],ebp
  40dfdc:	ficom  DWORD PTR [ecx-0x17]
  40dfdf:	pushf  
  40dfe0:	dec    ebx
  40dfe1:	fist   WORD PTR [edi+0x6d]
  40dfe4:	out    dx,eax
  40dfe5:	mov    dl,0x95
  40dfe7:	add    al,BYTE PTR [esi+edx*4-0x23]
  40dfeb:	add    eax,0x733189ce
  40dff0:	mov    ebx,0x5ce2138a
  40dff5:	into   
  40dff6:	and    BYTE PTR [esi+eax*4+0x29],0xaf
  40dffb:	sbb    edi,DWORD PTR ds:0xa4eb63f0
  40e001:	fmul   DWORD PTR [edx-0x30]
  40e004:	push   ss
  40e005:	mov    al,0xde
  40e007:	shl    BYTE PTR [eax+0x1e],1
  40e00a:	ins    DWORD PTR es:[edi],dx
  40e00b:	mov    esp,0x496aab20
  40e010:	pop    ebx
  40e011:	lods   eax,DWORD PTR ds:[esi]
  40e012:	inc    ebx
  40e013:	fldcw  WORD PTR [ecx-0x69]
  40e016:	sub    ecx,edx
  40e018:	and    dl,BYTE PTR [ecx+edx*2-0x36]
  40e01c:	and    BYTE PTR [edx+ebx*8-0x4d],ch
  40e020:	std    
  40e021:	std    
  40e022:	jne    0x40e076
  40e024:	adc    DWORD PTR gs:[eax+0x719eabb2],ecx
  40e02b:	and    ch,bh
  40e02d:	push   0x2a
  40e02f:	(bad)
  40e034:	outs   dx,DWORD PTR ds:[esi]
  40e035:	jmp    0x1efb967a
  40e03a:	or     al,0x11
  40e03c:	iret   
  40e03d:	xchg   edx,eax
  40e03e:	fnsave [ebx+0x67]
  40e041:	xchg   BYTE PTR [ebx-0x200ce2f],cl
  40e047:	push   esp
  40e048:	or     al,0x72
  40e04a:	shr    DWORD PTR [edx+edx*8-0x9],1
  40e04e:	mov    edi,0xc3d2c303
  40e053:	dec    ebp
  40e054:	data16 (bad) 
  40e056:	jecxz  0x40e046
  40e058:	aaa    
  40e059:	repz inc ebp
  40e05b:	sti    
  40e05c:	or     cl,BYTE PTR [ebx-0x28]
  40e05f:	and    dh,BYTE PTR [esi*1-0x685cef28]
  40e066:	pop    ss
  40e067:	xchg   BYTE PTR [ecx-0x42c6af03],bl
  40e06d:	sti    
  40e06e:	sbb    BYTE PTR [ebx+0xeb8d931],ah
  40e074:	out    0x83,eax
  40e076:	and    DWORD PTR [ebx+0x18],0x76
  40e07a:	(bad)  
  40e07b:	aam    0x5c
  40e07d:	sub    bh,0xff
  40e080:	scas   eax,DWORD PTR es:[edi]
  40e081:	mov    BYTE PTR [ebp+ebx*1-0x76],bl
  40e085:	jae    0x40e0af
  40e087:	push   esp
  40e088:	lds    eax,FWORD PTR [ebp-0xe6e6904]
  40e08e:	pop    ss
  40e08f:	das    
  40e090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e091:	cdq    
  40e092:	(bad)  
  40e093:	push   eax
  40e094:	pop    edx
  40e095:	mov    gs,WORD PTR [eax]
  40e097:	cmp    BYTE PTR [eax],ch
  40e099:	pop    ecx
  40e09a:	cmp    esp,DWORD PTR [eax+eax*8-0x29]
  40e09e:	loope  0x40e0bc
  40e0a0:	push   ds
  40e0a1:	mov    ebx,0x8e0fc98
  40e0a6:	jo     0x40e0aa
  40e0a8:	pop    edi
  40e0a9:	mov    BYTE PTR [edi],0x37
  40e0ac:	cmc    
  40e0ad:	cmp    edx,edi
  40e0af:	inc    edx
  40e0b0:	push   0xdd2e9a35
  40e0b5:	out    0x94,al
  40e0b7:	xor    edi,DWORD PTR [ebx]
  40e0b9:	mov    fs,esp
  40e0bb:	jecxz  0x40e111
  40e0bd:	sbb    al,0x29
  40e0bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0c0:	mov    dl,BYTE PTR [esi+0x22f7f9d5]
  40e0c6:	or     DWORD PTR [ebx+0x61],edx
  40e0c9:	aam    0xf4
  40e0cb:	retf   
  40e0cc:	mov    eax,ds:0xc9be3ddd
  40e0d1:	sar    BYTE PTR [ebp-0x16fa14fa],0x6b
  40e0d8:	mov    ch,0xc3
  40e0da:	jnp    0x40e15b
  40e0dc:	leave  
  40e0dd:	inc    ebx
  40e0de:	sub    al,0x86
  40e0e0:	clc    
  40e0e1:	dec    esp
  40e0e2:	idiv   ecx
  40e0e4:	sti    
  40e0e5:	mov    edx,0xeca88784
  40e0ea:	adc    BYTE PTR [eax],al
  40e0ec:	dec    edi
  40e0ed:	jecxz  0x40e0bd
  40e0ef:	mov    eax,DWORD PTR fs:[ebx+0x69]
  40e0f3:	xchg   ebp,eax
  40e0f4:	pop    ebp
  40e0f5:	jmp    0x40e0af
  40e0f7:	js     0x40e0b2
  40e0f9:	sbb    al,0x7b
  40e0fb:	fs sub esi,edx
  40e0fe:	ret    0x20f9
  40e101:	xor    BYTE PTR [esp+ebp*2-0x28],al
  40e105:	mov    eax,DWORD PTR fs:[eax]
  40e108:	sub    al,0xb1
  40e10a:	mov    dl,0xcd
  40e10c:	fcom   st(4)
  40e10e:	cwde   
  40e10f:	push   ebp
  40e110:	push   ebx
  40e111:	inc    edi
  40e112:	pop    edi
  40e113:	lahf   
  40e114:	sbb    bh,BYTE PTR [ecx-0x6bc5d892]
  40e11a:	into   
  40e11b:	test   BYTE PTR [ecx-0x7295bbcf],ah
  40e121:	cwde   
  40e122:	pop    ebp
  40e123:	in     eax,dx
  40e124:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e125:	cmp    ch,BYTE PTR [ebx-0x5b]
  40e128:	rcl    BYTE PTR [ebp+0x66],0x99
  40e12c:	neg    BYTE PTR [eax]
  40e12e:	push   edx
  40e12f:	and    al,0x6d
  40e131:	jbe    0x40e101
  40e133:	ja     0x40e162
  40e135:	dec    eax
  40e136:	mov    bh,0x62
  40e138:	fcom   st(2)
  40e13a:	mov    edi,0xe150775b
  40e13f:	push   ebx
  40e140:	fsub   QWORD PTR cs:[edi]
  40e143:	test   DWORD PTR [edi-0x22],edx
  40e146:	mov    ch,0x7a
  40e148:	and    cl,bh
  40e14a:	pop    ss
  40e14b:	imul   ebp,esi,0xffffffe1
  40e14e:	push   0xf
  40e150:	outs   dx,DWORD PTR ds:[esi]
  40e151:	jecxz  0x40e0f5
  40e153:	push   es
  40e154:	xchg   ecx,eax
  40e155:	mov    ah,0xd
  40e157:	push   edi
  40e158:	jecxz  0x40e1a0
  40e15a:	and    DWORD PTR [esi],0x6366c1c0
  40e160:	push   edx
  40e161:	push   0xffffffc8
  40e163:	(bad)  
  40e164:	std    
  40e165:	retf   0x9a5b
  40e168:	lods   al,BYTE PTR ds:[esi]
  40e169:	xchg   ebx,eax
  40e16b:	outs   dx,BYTE PTR ds:[esi]
  40e16c:	or     BYTE PTR [ebp+0x2f0ea93d],dh
  40e172:	push   eax
  40e173:	or     cl,BYTE PTR [edi-0xa1ff74a]
  40e179:	lock repz lock rol BYTE PTR [eax+0xb],1
  40e17f:	sub    edx,esi
  40e181:	jle    0x40e1b9
  40e183:	lods   eax,DWORD PTR ds:[esi]
  40e184:	imul   DWORD PTR [eax+0x3f]
  40e187:	repnz mov ds:0x3c495c76,eax
  40e18d:	or     DWORD PTR [edx+0x25],esp
  40e190:	mov    ebx,0x41db3fb4
  40e195:	mov    dl,0xab
  40e197:	(bad)  
  40e198:	test   DWORD PTR [eax+0x66],0x89ccd12e
  40e19f:	shl    DWORD PTR ds:0x7c51f197,0xac
  40e1a6:	std    
  40e1a7:	fsubr  DWORD PTR [ecx+0x44f5fec2]
  40e1ad:	jg     0x40e1db
  40e1af:	lods   al,BYTE PTR ds:[esi]
  40e1b0:	sbb    edi,0xffffffbc
  40e1b3:	inc    edx
  40e1b4:	xchg   ecx,eax
  40e1b5:	jnp    0x40e178
  40e1b7:	push   edi
  40e1b8:	sahf   
  40e1b9:	lods   al,BYTE PTR ds:[esi]
  40e1ba:	sti    
  40e1bb:	or     DWORD PTR [ebp-0x2e],ebx
  40e1be:	es sahf 
  40e1c0:	fadd   DWORD PTR [eax+0x446d9bd3]
  40e1c6:	cli    
  40e1c7:	ror    dl,0xa2
  40e1ca:	lea    ebp,[ecx+edx*8-0x7f]
  40e1ce:	sbb    eax,0x4fb9f3c2
  40e1d3:	cmp    al,0x19
  40e1d5:	mov    WORD PTR [ebx],gs
  40e1d7:	ss dec edi
  40e1d9:	cli    
  40e1da:	stos   BYTE PTR es:[edi],al
  40e1db:	push   cs
  40e1dc:	xor    bl,ah
  40e1de:	mov    edi,0x2c6bb0ad
  40e1e3:	adc    al,0xbd
  40e1e5:	scas   al,BYTE PTR es:[edi]
  40e1e6:	sbb    BYTE PTR [ebx],al
  40e1e8:	shl    ecx,1
  40e1ea:	sub    eax,0xcb154fa4
  40e1ef:	xchg   ecx,eax
  40e1f0:	mov    ebp,0x57e24efb
  40e1f5:	das    
  40e1f6:	sbb    eax,0x74670589
  40e1fc:	mov    ah,0x7a
  40e1fe:	test   esp,ecx
  40e200:	push   ss
  40e201:	iret   
  40e202:	push   eax
  40e203:	test   BYTE PTR [edx+0x75],cl
  40e206:	stc    
  40e207:	(bad)  
  40e209:	cdq    
  40e20a:	pop    es
  40e20b:	js     0x40e1aa
  40e20d:	lahf   
  40e20e:	lds    edx,FWORD PTR [esp+ebp*2+0x71aac331]
  40e215:	ins    BYTE PTR es:[edi],dx
  40e216:	fsub   st,st(4)
  40e218:	or     al,0xfa
  40e21a:	adc    al,0xa6
  40e21c:	jecxz  0x40e286
  40e21e:	adc    al,0x10
  40e220:	push   edi
  40e221:	cmp    DWORD PTR [edi-0x6e],ecx
  40e224:	stos   BYTE PTR es:[edi],al
  40e225:	in     al,dx
  40e226:	mov    edi,0xbd3926c6
  40e22b:	pop    ecx
  40e22c:	xchg   edi,eax
  40e22d:	dec    ecx
  40e22e:	add    ecx,esi
  40e230:	or     bh,BYTE PTR ds:0xc80f5861
  40e236:	cld    
  40e237:	cwde   
  40e238:	push   ebx
  40e239:	stos   BYTE PTR es:[edi],al
  40e23a:	add    al,0x6
  40e23c:	sub    dl,BYTE PTR [ebx-0x2f59d850]
  40e242:	je     0x40e1ca
  40e244:	lock push es
  40e246:	int    0xc0
  40e248:	pop    DWORD PTR [ebx-0x449ef74d]
  40e24e:	jmp    0x73cf:0xb6c8d488
  40e255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e256:	in     al,dx
  40e257:	retf   0xb6b6
  40e25a:	and    BYTE PTR [ecx+ecx*4+0x3f432b4d],0xb2
  40e262:	pop    ss
  40e263:	or     dl,bh
  40e265:	fwait
  40e266:	mov    ebp,0x233c2e7e
  40e26b:	adc    BYTE PTR [esi-0x14],0x19
  40e26f:	sbb    eax,0x29058b5e
  40e274:	jmp    0x80c8:0x23595437
  40e27b:	dec    esi
  40e27c:	loopne 0x40e28c
  40e27e:	push   cs
  40e27f:	pop    ecx
  40e280:	sbb    eax,0x9887011c
  40e285:	and    eax,0xf52df4fb
  40e28a:	add    al,0x45
  40e28c:	sbb    al,0xbe
  40e28e:	fstp   DWORD PTR [ebp-0xd13a463]
  40e294:	pop    ebx
  40e295:	mov    ebx,0x82773622
  40e29a:	jge    0x40e2fb
  40e29c:	ja     0x40e280
  40e29e:	and    ebx,DWORD PTR [eax-0x409555d3]
  40e2a4:	adc    BYTE PTR [ebx+0x1016883f],0x61
  40e2ab:	call   0xceb1ba83
  40e2b0:	cmp    eax,0x715c01ef
  40e2b5:	shl    BYTE PTR [ecx+0x23650e0a],1
  40e2bb:	mov    cs:0x97a1f619,al
  40e2c1:	pop    ebx
  40e2c2:	daa    
  40e2c3:	mov    cl,0x23
  40e2c5:	popf   
  40e2c6:	mov    esp,0x7b486bd8
  40e2cb:	jl     0x40e329
  40e2cd:	outs   dx,BYTE PTR ds:[esi]
  40e2ce:	xor    ch,ah
  40e2d0:	repz cmp bl,BYTE PTR [ebp-0x14]
  40e2d4:	and    BYTE PTR [ebp-0x3fba93c6],0x27
  40e2db:	call   0x32ce:0xea87eeca
  40e2e2:	mov    edx,0x4c74b2d
  40e2e7:	pop    ecx
  40e2e8:	pop    esi
  40e2e9:	jb     0x40e311
  40e2eb:	adc    ebx,ecx
  40e2ed:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40e2ef:	mov    dl,0xef
  40e2f1:	inc    ebp
  40e2f2:	or     DWORD PTR ds:0xc0f1a1f,ecx
  40e2f8:	add    al,0x79
  40e2fa:	jge    0x40e31f
  40e2fc:	rol    BYTE PTR [esi+0x32],cl
  40e2ff:	dec    esp
  40e300:	shr    DWORD PTR ds:0x4077a21e,cl
  40e306:	ret    
  40e307:	je     0x40e37b
  40e309:	outs   dx,DWORD PTR ds:[esi]
  40e30a:	in     eax,0xcd
  40e30c:	retf   0x67cc
  40e30f:	adc    BYTE PTR ds:0xcaeb20c7,0xea
  40e316:	xor    ch,BYTE PTR [esi+0x54017102]
  40e31c:	sub    bl,0x2b
  40e31f:	sub    DWORD PTR [ecx],0x432ceb8b
  40e325:	out    0x99,al
  40e327:	in     al,0x64
  40e329:	imul   eax,DWORD PTR [edi-0x1d13e9c2],0x796a8836
  40e333:	xor    al,0x61
  40e335:	stos   BYTE PTR es:[edi],al
  40e336:	aas    
  40e337:	inc    eax
  40e338:	xor    esp,DWORD PTR [edx+0x60082c1f]
  40e33e:	dec    ebx
  40e33f:	sahf   
  40e340:	mov    bl,0xa5
  40e342:	mov    al,0xe4
  40e344:	mov    ch,0xb5
  40e346:	jg     0x40e303
  40e348:	(bad)  
  40e349:	sbb    bh,BYTE PTR [edi+0x3b6afc7d]
  40e34f:	das    
  40e350:	repnz (bad) 
  40e352:	ja     0x40e2ec
  40e354:	sbb    al,0xbf
  40e356:	push   ebx
  40e357:	scas   eax,DWORD PTR es:[edi]
  40e358:	or     DWORD PTR [eax-0x5c51228f],esi
  40e35e:	inc    ecx
  40e35f:	lahf   
  40e360:	adc    bl,0x2
  40e363:	sbb    al,0xbb
  40e365:	in     al,dx
  40e366:	inc    esi
  40e367:	mov    edx,0xedb1607c
  40e36c:	(bad)  
  40e36d:	sbb    al,0x9d
  40e36f:	or     DWORD PTR [ebx-0x4f5228d9],0xffffff89
  40e376:	adc    ch,BYTE PTR [ebp-0x4a]
  40e379:	cwde   
  40e37a:	in     al,dx
  40e37b:	inc    ebp
  40e37c:	sub    DWORD PTR [eax+0x29],edx
  40e37f:	cld    
  40e380:	test   al,0x55
  40e382:	sahf   
  40e383:	sub    dl,ch
  40e385:	mov    esi,0xb5bbaa50
  40e38a:	xor    al,0x52
  40e38c:	jbe    0x40e32c
  40e38e:	shr    DWORD PTR [ecx],0x48
  40e391:	call   0xebf5:0xe23fd346
  40e398:	sar    BYTE PTR ds:0x63e9750d,0x5a
  40e39f:	inc    esi
  40e3a0:	pushf  
  40e3a1:	out    0xa2,al
  40e3a3:	cdq    
  40e3a4:	(bad)  
  40e3a5:	mov    edi,0x6e515ecf
  40e3aa:	push   ecx
  40e3ab:	pop    esp
  40e3ac:	xor    eax,0x8cb9958d
  40e3b1:	shl    DWORD PTR [edi-0x78],0xb5
  40e3b5:	into   
  40e3b6:	sub    al,0x55
  40e3b8:	or     BYTE PTR [ebx+0x48f4bbfd],dl
  40e3be:	and    DWORD PTR [ebp+0x7c9cd717],0x209abe
  40e3c8:	(bad)  
  40e3c9:	xor    al,0x9
  40e3cb:	outs   dx,BYTE PTR ds:[esi]
  40e3cc:	xor    edi,DWORD PTR [edx+0x60]
  40e3cf:	jmp    0xe691:0x38e12edb
  40e3d6:	in     eax,dx
  40e3d7:	sbb    dh,BYTE PTR [ecx+eiz*8+0x78]
  40e3db:	cmp    al,ch
  40e3dd:	dec    edx
  40e3de:	(bad)  
  40e3df:	push   eax
  40e3e0:	popa   
  40e3e1:	mov    eax,0xe3f01819
  40e3e6:	xchg   BYTE PTR [ebp+0x1fd2d5dc],dl
  40e3ec:	pop    ecx
  40e3ed:	jo     0x40e45b
  40e3ef:	mov    DWORD PTR [eax],ecx
  40e3f1:	fs adc eax,0xfd9e65cc
  40e3f7:	inc    BYTE PTR [ebx+0x4b]
  40e3fa:	hlt    
  40e3fb:	fidiv  DWORD PTR [edi+0x28]
  40e3fe:	dec    ebp
  40e3ff:	test   bl,ah
  40e401:	or     al,0x43
  40e403:	imul   ebp,DWORD PTR [ebx+0x2c3685ae],0xcc4a24c
  40e40d:	push   ecx
  40e40e:	xor    DWORD PTR [esi],edx
  40e410:	loop   0x40e399
  40e412:	jnp    0x40e437
  40e414:	stc    
  40e415:	into   
  40e416:	xchg   ebx,eax
  40e417:	test   BYTE PTR [esi],ch
  40e419:	pop    ebx
  40e41a:	or     ah,BYTE PTR ds:0x834deff3
  40e420:	xchg   DWORD PTR [ebx+0x2bdda12d],ebx
  40e426:	sbb    ebp,DWORD PTR [edx-0x5e71ccca]
  40e42c:	sub    al,0x1b
  40e42e:	sub    BYTE PTR [esi+0x4ad97222],0xd3
  40e435:	stos   BYTE PTR es:[edi],al
  40e436:	mov    eax,ds:0x477585
  40e43b:	adc    DWORD PTR [ebx],0xfffffff9
  40e43e:	mov    esi,0x3440d87f
  40e443:	cld    
  40e444:	xchg   edi,eax
  40e445:	and    DWORD PTR [ecx],esp
  40e447:	and    eax,0xabf4ba96
  40e44c:	sub    al,0x1a
  40e44e:	dec    ebx
  40e44f:	pop    es
  40e450:	mov    esi,0x50ab14b0
  40e455:	ds mov ebp,0x1fef4802
  40e45b:	mov    DWORD PTR [edx],ecx
  40e45d:	push   ss
  40e45e:	fisttp QWORD PTR [eax+0x4d2be8dc]
  40e464:	lock push ss
  40e466:	stos   BYTE PTR es:[edi],al
  40e467:	cmp    ebp,DWORD PTR [ecx]
  40e469:	dec    esp
  40e46a:	jno    0x40e444
  40e46c:	into   
  40e46d:	ror    esi,1
  40e46f:	fldcw  WORD PTR [eax+0x61dc09a4]
  40e475:	pusha  
  40e476:	ror    BYTE PTR ds:0xd6304e45,1
  40e47c:	adc    BYTE PTR [ebx+edi*8+0x73d9f759],dl
  40e483:	cmp    esp,edx
  40e485:	pop    ecx
  40e486:	pop    ebx
  40e487:	adc    DWORD PTR [edx+ebx*2+0x7145e6c5],0xffffffb1
  40e48f:	dec    eax
  40e490:	mov    DWORD PTR [ecx-0x28],eax
  40e493:	dec    eax
  40e494:	lods   al,BYTE PTR ds:[esi]
  40e495:	popf   
  40e496:	(bad)  
  40e497:	sub    eax,0x1f33c632
  40e49c:	mov    ebx,0xbce996c7
  40e4a1:	jbe    0x40e48b
  40e4a3:	jns    0x40e4c6
  40e4a5:	and    ebp,DWORD PTR [edi+eax*1]
  40e4a8:	cs (bad) 
  40e4aa:	jg     0x40e466
  40e4ac:	or     al,0x5a
  40e4ae:	mov    ?,ecx
  40e4b0:	imul   BYTE PTR [edx-0x4fd9d4e1]
  40e4b6:	sar    DWORD PTR [eax+0x6e],cl
  40e4b9:	hlt    
  40e4ba:	adc    bh,BYTE PTR [ebp-0x7e]
  40e4bd:	push   edi
  40e4be:	mov    dh,0xf3
  40e4c0:	mov    ch,0x78
  40e4c2:	push   0x69
  40e4c4:	repnz sbb DWORD PTR [esi-0x8],edi
  40e4c8:	or     esi,DWORD PTR [ebx+0x7ee861e6]
  40e4ce:	loop   0x40e4db
  40e4d0:	cmp    BYTE PTR ds:[esi+eiz*1],0x7f
  40e4d5:	leave  
  40e4d6:	push   esi
  40e4d7:	push   0xffffffb4
  40e4d9:	ret    
  40e4da:	and    eax,0x55579e2c
  40e4df:	adc    BYTE PTR [esi+0x20],cl
  40e4e2:	cli    
  40e4e3:	test   eax,0x60961fb5
  40e4e8:	mov    edx,DWORD PTR ds:0x7c8dd1fd
  40e4ee:	sbb    al,0xa9
  40e4f0:	adc    eax,0xffffff83
  40e4f3:	add    al,0xea
  40e4f5:	popf   
  40e4f6:	sbb    DWORD PTR [edx+esi*8+0x3cb4c37e],esi
  40e4fd:	fdivr  QWORD PTR [ebp+0x239da4fe]
  40e503:	push   cs
  40e504:	int    0xa
  40e506:	shr    DWORD PTR [edx+0x4],0x3f
  40e50a:	aad    0x90
  40e50c:	sar    BYTE PTR [ebp-0x77],cl
  40e50f:	jecxz  0x40e57c
  40e511:	std    
  40e512:	clc    
  40e513:	ja     0x40e4b9
  40e515:	lds    ebx,FWORD PTR [eax+edx*1-0x64079bbb]
  40e51c:	call   0x5f19:0x2c95
  40e522:	in     al,0x2d
  40e524:	retf   
  40e525:	push   eax
  40e526:	stos   BYTE PTR es:[edi],al
  40e527:	mov    BYTE PTR [ebx+ecx*8-0x5f076c9b],ah
  40e52e:	jbe    0x40e4fc
  40e530:	into   
  40e531:	sub    dl,dh
  40e533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e534:	add    al,0xbe
  40e536:	fmul   QWORD PTR [edx+edx*4]
  40e539:	jmp    0x570dd48
  40e53e:	cli    
  40e53f:	aaa    
  40e540:	xchg   ecx,eax
  40e541:	xor    esp,DWORD PTR [eax-0x2b]
  40e544:	pop    ebx
  40e545:	jae    0x40e59b
  40e547:	lea    esi,[esi-0x13]
  40e54a:	icebp  
  40e54b:	mov    esi,0xaefc6b23
  40e550:	adc    bh,BYTE PTR [ebx-0xa7ddefd]
  40e556:	cmp    cl,dh
  40e558:	sbb    eax,0xfae768ab
  40e55d:	jo     0x40e52e
  40e55f:	outs   dx,BYTE PTR ds:[esi]
  40e560:	or     eax,0x76fb5303
  40e565:	(bad)  
  40e566:	into   
  40e567:	sub    BYTE PTR [ebp-0x3b],ah
  40e56a:	ja     0x40e5b4
  40e56c:	mov    BYTE PTR ds:0x9d7f833f,al
  40e572:	(bad)  
  40e573:	dec    ebp
  40e574:	jecxz  0x40e532
  40e576:	into   
  40e577:	imul   DWORD PTR [eax-0x34176416]
  40e57d:	hlt    
  40e57e:	and    edx,DWORD PTR [ecx+eax*2-0xe]
  40e582:	cmp    eax,ebp
  40e584:	or     eax,0x84848fb0
  40e589:	sub    bl,BYTE PTR [edi-0x5]
  40e58c:	rcr    eax,1
  40e58e:	outs   dx,DWORD PTR ds:[esi]
  40e58f:	or     BYTE PTR [esi-0x16],cl
  40e592:	aad    0x3f
  40e594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e595:	jne    0x40e5f7
  40e597:	pop    ds
  40e598:	daa    
  40e599:	xor    DWORD PTR [ecx-0x5e710fe8],0xd4f40c73
  40e5a3:	mov    ch,BYTE PTR [ecx]
  40e5a5:	outs   dx,DWORD PTR ds:[esi]
  40e5a6:	sbb    BYTE PTR [edx+0x5e],cl
  40e5a9:	or     DWORD PTR [edi+0x60143dba],esi
  40e5af:	es lahf 
  40e5b1:	es push 0x954f4aee
  40e5b7:	or     BYTE PTR [ebx-0x5da3fe0b],ah
  40e5bd:	stos   DWORD PTR es:[edi],eax
  40e5be:	add    bh,dh
  40e5c0:	push   ss
  40e5c1:	pushf  
  40e5c2:	das    
  40e5c3:	hlt    
  40e5c4:	dec    esp
  40e5c5:	cmc    
  40e5c6:	mov    eax,ds:0xbd81fe6e
  40e5cb:	mov    ecx,0x2239573a
  40e5d0:	xchg   edx,eax
  40e5d1:	mov    ?,WORD PTR [esi+esi*8]
  40e5d4:	ror    DWORD PTR [esi+0x4a340462],cl
  40e5da:	or     cl,BYTE PTR [edx]
  40e5dc:	dec    esi
  40e5dd:	ja     0x40e587
  40e5df:	xor    esi,esp
  40e5e1:	mov    al,ds:0x15118396
  40e5e6:	push   eax
  40e5e7:	ja     0x40e580
  40e5e9:	mov    edi,0x3166be5d
  40e5ee:	arpl   di,ax
  40e5f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5f1:	mul    DWORD PTR [eax]
  40e5f3:	push   edx
  40e5f4:	fst    DWORD PTR [esi-0x6a]
  40e5f7:	stos   BYTE PTR es:[edi],al
  40e5f8:	mov    ds:0xcd790a71,al
  40e5fd:	jnp    0x40e5c8
  40e5ff:	push   edi
  40e600:	shr    DWORD PTR [edi],1
  40e602:	xor    BYTE PTR [edi+0x66bd13b1],cl
  40e608:	sub    edx,DWORD PTR [edi]
  40e60a:	fucomp st(3)
  40e60c:	ja     0x40e63b
  40e60e:	ret    0xde69
  40e611:	je     0x40e5ae
  40e613:	data16 outs dx,BYTE PTR ds:[esi]
  40e615:	adc    al,0xc0
  40e617:	inc    esi
  40e618:	xchg   esi,eax
  40e619:	adc    BYTE PTR [ecx+0x11529e97],ah
  40e61f:	mov    ebp,0x5c029750
  40e624:	sub    DWORD PTR [eax],0xffffffdd
  40e627:	jne    0x40e658
  40e629:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e62a:	retf   0xfcde
  40e62d:	sub    eax,0x5577bf67
  40e632:	pop    esp
  40e633:	mov    ch,0xaa
  40e635:	(bad)  
  40e636:	cdq    
  40e637:	aad    0xc7
  40e639:	pop    DWORD PTR [ebp+0x766bf4b9]
  40e63f:	clc    
  40e640:	mov    bl,0x40
  40e642:	or     eax,0x70fcd24d
  40e647:	cld    
  40e648:	sti    
  40e649:	mov    DWORD PTR [ebp-0x2788c7b],esi
  40e64f:	pop    ebx
  40e650:	jl     0x40e638
  40e652:	pushf  
  40e653:	setge  cl
  40e656:	sub    edx,DWORD PTR [ecx-0x4d19af09]
  40e65c:	sar    BYTE PTR [edi],cl
  40e65e:	add    esi,ecx
  40e660:	in     eax,0xf7
  40e662:	les    esi,FWORD PTR [ecx]
  40e664:	ret    
  40e665:	push   esi
  40e666:	sbb    eax,0x2cd70b28
  40e66b:	and    eax,DWORD PTR [edx-0x50]
  40e66e:	sbb    BYTE PTR [ebx-0x4409b440],bh
  40e674:	dec    esp
  40e675:	lds    ecx,FWORD PTR [ecx]
  40e677:	stos   BYTE PTR es:[edi],al
  40e678:	es push ds
  40e67a:	outs   dx,DWORD PTR ds:[esi]
  40e67b:	add    ah,BYTE PTR [ebx-0x4f]
  40e67e:	sbb    al,0xc1
  40e680:	cli    
  40e681:	retf   
  40e682:	xor    bl,BYTE PTR [edx]
  40e684:	loopne 0x40e633
  40e686:	lods   al,BYTE PTR ds:[esi]
  40e687:	push   0xffffffda
  40e689:	call   0x758a68c3
  40e68e:	iret   
  40e68f:	out    0x1f,al
  40e691:	dec    esi
  40e692:	mov    ecx,0x47f0a79d
  40e697:	xchg   DWORD PTR [ecx-0x17],ebx
  40e69a:	repnz pop edi
  40e69c:	sub    al,0x35
  40e69e:	call   0x403e:0x8deee97e
  40e6a5:	fdivr  DWORD PTR [edi]
  40e6a7:	ror    BYTE PTR [edx+edi*1],cl
  40e6aa:	call   0xce2e:0xc10c7d4c
  40e6b1:	sbb    edi,0x798eb59b
  40e6b7:	(bad)  
  40e6b8:	jns    0x40e6cb
  40e6ba:	mov    ds:0xf2acfc88,eax
  40e6bf:	sub    al,0x97
  40e6c1:	jno    0x40e70d
  40e6c3:	jg     0x40e653
  40e6c5:	cli    
  40e6c6:	gs je  0x40e65d
  40e6c9:	dec    esi
  40e6ca:	stos   BYTE PTR es:[edi],al
  40e6cb:	pop    es
  40e6cc:	push   edx
  40e6cd:	sbb    al,0x8a
  40e6cf:	push   0x77
  40e6d1:	imul   edx,DWORD PTR [edi-0x6fcbce7c],0x8817dde6
  40e6db:	aam    0xc3
  40e6dd:	fiadd  WORD PTR [ecx-0x4302b6b]
  40e6e3:	dec    esi
  40e6e4:	sub    al,0x6b
  40e6e6:	sub    ecx,ecx
  40e6e8:	pop    ebx
  40e6e9:	cmp    ebx,DWORD PTR [eax-0x145f99df]
  40e6ef:	imul   eax,DWORD PTR [edi+0x490ac42f],0x4c
  40e6f6:	daa    
  40e6f7:	dec    ebp
  40e6f8:	sub    DWORD PTR [edi-0x6fdb3ef3],esp
  40e6fe:	cs jnp 0x40e71f
  40e701:	mov    BYTE PTR [ebx-0x55a60aa6],dh
  40e707:	nop
  40e708:	das    
  40e709:	push   esp
  40e70a:	push   ecx
  40e70b:	jne    0x40e6ee
  40e70d:	out    0x54,eax
  40e70f:	fdiv   st,st(4)
  40e711:	test   al,0x2f
  40e713:	mov    edx,0x863d7289
  40e718:	adc    al,0x44
  40e71a:	fcomp  DWORD PTR [esi]
  40e71c:	(bad)  
  40e71d:	fistp  DWORD PTR [eax-0x13827d82]
  40e723:	lds    ebx,FWORD PTR [ebx]
  40e725:	xor    esp,esp
  40e727:	imul   eax,DWORD PTR [ebx-0x6],0x86a2e7eb
  40e72e:	std    
  40e72f:	or     ebp,ebx
  40e731:	cmp    dl,bl
  40e733:	dec    ecx
  40e734:	cmp    dl,BYTE PTR [ecx+0x727a7b31]
  40e73a:	(bad)  
  40e73c:	imul   edi,ebp,0x49
  40e73f:	add    al,0x48
  40e741:	cmp    al,0xa8
  40e744:	(bad)  
  40e745:	jecxz  0x40e79f
  40e747:	loopne 0x40e796
  40e749:	jmp    0xd919:0x704b18c0
  40e750:	(bad)  
  40e751:	inc    ebx
  40e752:	xchg   esi,eax
  40e753:	or     ch,dh
  40e755:	ror    BYTE PTR [ecx-0x708980bb],cl
  40e75b:	mov    ?,WORD PTR [edi]
  40e75d:	cmp    ebx,DWORD PTR [ebx]
  40e75f:	(bad)  
  40e760:	loopne 0x40e767
  40e762:	push   ebx
  40e763:	dec    ebx
  40e764:	sbb    BYTE PTR cs:[edi-0x31],dh
  40e768:	mov    dx,ax
  40e76b:	jmp    0xfe7d:0x3c814385
  40e772:	hlt    
  40e773:	and    DWORD PTR [esi],ebp
  40e775:	out    dx,al
  40e776:	popf   
  40e777:	mov    bl,0xd4
  40e779:	iret   
  40e77a:	ds out dx,eax
  40e77c:	mov    dh,0xa8
  40e77e:	sbb    eax,0xc734d5ac
  40e783:	mov    dl,BYTE PTR [edi]
  40e785:	int3   
  40e786:	stos   DWORD PTR es:[edi],eax
  40e787:	rol    ebx,0x6e
  40e78a:	cld    
  40e78b:	lods   eax,DWORD PTR ds:[esi]
  40e78c:	cmp    al,0x16
  40e78e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e78f:	adc    DWORD PTR [eax+edx*8-0x5b],edx
  40e793:	dec    esi
  40e794:	ror    DWORD PTR [eax-0x26],0xdf
  40e798:	imul   ebx,edi,0xfad120db
  40e79e:	mov    ds:0x10ea2240,eax
  40e7a3:	dec    edi
  40e7a4:	xor    al,0xf3
  40e7a6:	xor    eax,0xd9313615
  40e7ab:	dec    ebp
  40e7ac:	mov    edi,0x9a57d5bf
  40e7b1:	sub    BYTE PTR [ecx],ch
  40e7b3:	lahf   
  40e7b4:	inc    edx
  40e7b5:	out    dx,al
  40e7b6:	bswap  edx
  40e7b8:	cwde   
  40e7b9:	inc    esp
  40e7ba:	hlt    
  40e7bb:	pop    es
  40e7bc:	jae    0x40e7f5
  40e7be:	or     ah,al
  40e7c0:	jo     0x40e7b8
  40e7c2:	jno    0x40e761
  40e7c4:	jl     0x40e840
  40e7c6:	push   edi
  40e7c7:	lahf   
  40e7c8:	repnz xor al,0x2
  40e7cb:	sub    ebx,DWORD PTR [ecx]
  40e7cd:	leave  
  40e7ce:	adc    BYTE PTR [edx+ebp*8],ch
  40e7d1:	jmp    0x40e794
  40e7d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7d4:	pop    ebp
  40e7d5:	(bad)  
  40e7d7:	sub    BYTE PTR es:[ebx-0x43372373],dh
  40e7de:	xor    BYTE PTR [eax],al
  40e7e0:	or     ebp,DWORD PTR [ebx-0x18732505]
  40e7e6:	sbb    ah,dl
  40e7e8:	push   es
  40e7e9:	sbb    cl,bh
  40e7eb:	mov    al,0x40
  40e7ed:	push   ebx
  40e7ee:	inc    ecx
  40e7ef:	dec    esi
  40e7f0:	icebp  
  40e7f1:	shl    DWORD PTR [ebp+0x68d51102],0xc2
  40e7f8:	and    DWORD PTR [edi],ecx
  40e7fa:	les    ebp,FWORD PTR [edi-0x6b]
  40e7fd:	leave  
  40e7fe:	cwde   
  40e7ff:	stc    
  40e800:	jne    0x40e784
  40e802:	stos   BYTE PTR es:[edi],al
  40e803:	sbb    eax,0x450a8e70
  40e808:	sbb    DWORD PTR [eax],ebx
  40e80a:	jne    0x40e880
  40e80c:	jmp    0x5b70:0xf0a0107b
  40e813:	test   DWORD PTR [ecx-0x67],ebp
  40e816:	scas   al,BYTE PTR es:[edi]
  40e817:	add    al,ah
  40e819:	rcr    BYTE PTR [esi-0x2c56d671],1
  40e81f:	pop    edi
  40e820:	push   cs
  40e821:	out    dx,al
  40e822:	pop    es
  40e823:	sub    edx,edx
  40e825:	pushf  
  40e826:	add    al,0xc0
  40e828:	adc    al,BYTE PTR [esi]
  40e82a:	test   eax,0xb6e7dd15
  40e82f:	inc    esi
  40e830:	sbb    ebp,DWORD PTR [ebx+0x51]
  40e833:	in     eax,dx
  40e834:	(bad)  
  40e835:	dec    ebp
  40e836:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e837:	inc    eax
  40e838:	into   
  40e839:	xlat   BYTE PTR cs:[ebx]
  40e83b:	mov    DWORD PTR [ecx-0x5989cf],edx
  40e841:	inc    ecx
  40e842:	loopne 0x40e896
  40e844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e845:	push   ds
  40e846:	and    dh,BYTE PTR [eax-0x10]
  40e849:	jnp    0x40e8a6
  40e84b:	data16 mov ds:0x7f404527,al
  40e851:	xor    al,0x55
  40e853:	aam    0x50
  40e855:	pop    edi
  40e856:	sbb    DWORD PTR [edi-0x1e],ebp
  40e859:	ins    BYTE PTR es:[edi],dx
  40e85a:	sar    esi,cl
  40e85c:	jmp    0x312e7a2f
  40e861:	push   ebp
  40e862:	fdiv   QWORD PTR [esp+edx*8-0x7d]
  40e866:	xchg   esp,eax
  40e867:	dec    edx
  40e868:	and    al,0x1d
  40e86a:	mov    al,bl
  40e86c:	jecxz  0x40e8cb
  40e86e:	sahf   
  40e86f:	push   esi
  40e870:	scas   al,BYTE PTR es:[edi]
  40e871:	test   DWORD PTR [eax-0x4531a954],ecx
  40e877:	xor    edx,DWORD PTR [edi+0x126c0c63]
  40e87d:	push   edi
  40e87e:	and    BYTE PTR [esi-0x775165b3],cl
  40e884:	jle    0x40e86f
  40e886:	add    al,0xa1
  40e888:	push   esp
  40e889:	and    al,0xc0
  40e88b:	add    al,0x66
  40e88d:	stos   BYTE PTR es:[edi],al
  40e88e:	jae    0x40e8b7
  40e890:	or     al,0xc
  40e892:	inc    BYTE PTR ds:[bp+di+0x7cc1]
  40e898:	std    
  40e899:	fs leave 
  40e89b:	lods   al,BYTE PTR ds:[esi]
  40e89c:	or     BYTE PTR [esi],0x5f
  40e89f:	jmp    0x27f:0x3ceea883
  40e8a6:	out    0xf0,ax
  40e8a9:	enter  0x3c28,0x66
  40e8ad:	rdmsr  
  40e8af:	fcomi  st,st(7)
  40e8b1:	je     0x40e896
  40e8b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8b4:	pop    ss
  40e8b5:	pushf  
  40e8b6:	sahf   
  40e8b7:	pop    es
  40e8b8:	outs   dx,DWORD PTR ds:[esi]
  40e8b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8ba:	jecxz  0x40e848
  40e8bc:	rcl    ah,0x52
  40e8bf:	xchg   ebp,eax
  40e8c0:	xchg   edx,eax
  40e8c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8c2:	or     BYTE PTR [esi-0x10],ah
  40e8c5:	les    esi,FWORD PTR fs:[eax]
  40e8c8:	pop    ebx
  40e8c9:	or     eax,0x8372369f
  40e8ce:	cmp    DWORD PTR [ecx],eax
  40e8d0:	and    BYTE PTR [ebp-0x11],dh
  40e8d3:	push   es
  40e8d4:	add    eax,0x98504627
  40e8d9:	cmp    al,0xbe
  40e8db:	shl    DWORD PTR [ecx+0x5b],cl
  40e8de:	inc    edi
  40e8df:	jg     0x40e8be
  40e8e1:	ins    BYTE PTR es:[edi],dx
  40e8e2:	js     0x40e958
  40e8e4:	shl    BYTE PTR [ebx+0x58f94d03],cl
  40e8ea:	xor    BYTE PTR [ebp+0x47],ch
  40e8ed:	ds into 
  40e8ef:	jae    0x40e91c
  40e8f1:	dec    eax
  40e8f2:	(bad)  
  40e8f3:	xor    edi,ebp
  40e8f5:	pop    es
  40e8f6:	fadd   st,st(7)
  40e8f8:	mov    bl,0x75
  40e8fa:	mov    ds:0xb2040137,al
  40e8ff:	jl     0x40e95c
  40e901:	sub    bl,BYTE PTR [ebx]
  40e903:	fisub  DWORD PTR [esi-0x6a198f16]
  40e909:	int3   
  40e90a:	loopne 0x40e982
  40e90c:	jne    0x40e95b
  40e90e:	into   
  40e90f:	ja     0x40e936
  40e911:	test   eax,0x8231693d
  40e916:	aas    
  40e917:	cmp    dl,ch
  40e919:	adc    eax,0x66889021
  40e91e:	js     0x40e98a
  40e920:	mov    al,ds:0xa6ebe2ac
  40e925:	push   esp
  40e926:	lods   eax,DWORD PTR ds:[esi]
  40e927:	jnp    0x40e8da
  40e929:	xchg   ebx,eax
  40e92a:	adc    al,0xe3
  40e92c:	xchg   BYTE PTR [edi+ebx*4+0x7a608cd5],dh
  40e933:	lahf   
  40e934:	daa    
  40e935:	cmp    ah,ch
  40e937:	in     al,dx
  40e938:	cmp    ebx,DWORD PTR [esi+eax*4+0xe]
  40e93c:	pop    ebx
  40e93d:	adc    eax,ebx
  40e93f:	or     al,0xa3
  40e941:	mov    esi,0x41de82c
  40e946:	repz mov esi,0x740c8382
  40e94c:	outs   dx,DWORD PTR ds:[esi]
  40e94d:	cli    
  40e94e:	in     al,0x1
  40e950:	mov    ch,0x62
  40e952:	scas   al,BYTE PTR es:[edi]
  40e953:	enter  0xac84,0x4e
  40e957:	sbb    DWORD PTR [edi+0x72],eax
  40e95a:	daa    
  40e95b:	xchg   esp,eax
  40e95c:	das    
  40e95d:	stos   DWORD PTR es:[edi],eax
  40e95e:	fwait
  40e95f:	jmp    0x6bf4:0x711841c2
  40e966:	mov    DWORD PTR [edx-0x6d],esi
  40e969:	(bad)  [esi]
  40e96b:	loope  0x40e939
  40e96d:	mov    eax,ds:0x3181a190
  40e972:	mov    ebp,0x5ea6af4d
  40e977:	iret   
  40e978:	push   edi
  40e979:	adc    cl,BYTE PTR [eax+0x47b84d78]
  40e97f:	jae    0x40e96d
  40e981:	shr    DWORD PTR ds:0x2c799449,0xd7
  40e988:	pusha  
  40e989:	gs js  0x40e9d0
  40e98c:	aad    0xed
  40e98e:	sahf   
  40e98f:	push   ebp
  40e990:	(bad)  [esi]
  40e992:	lea    ecx,[ebp+0x28]
  40e995:	sahf   
  40e996:	sub    ebp,DWORD PTR [esi-0x2c45a235]
  40e99c:	jg     0x40e956
  40e99e:	pop    esi
  40e99f:	scas   al,BYTE PTR es:[edi]
  40e9a0:	loop   0x40e9ad
  40e9a2:	mov    BYTE PTR [edi],bl
  40e9a4:	jae    0x40e96d
  40e9a6:	jb     0x40e9b1
  40e9a8:	mov    eax,0x78ce2e17
  40e9ad:	adc    DWORD PTR [edi],esi
  40e9af:	enter  0x160f,0xdf
  40e9b3:	outs   dx,BYTE PTR ds:[esi]
  40e9b4:	jne    0x40ea1a
  40e9b6:	cwde   
  40e9b7:	mov    ecx,0xd4d01d50
  40e9bc:	mov    cl,0x83
  40e9be:	adc    ebx,DWORD PTR [esi+eiz*1-0x3a]
  40e9c2:	out    0xf1,al
  40e9c4:	cmp    eax,0x4393a5fd
  40e9c9:	imul   ebp,DWORD PTR [esi-0x1d],0x656163a3
  40e9d0:	cmp    DWORD PTR [eax],esi
  40e9d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9d3:	xor    BYTE PTR [eax-0x67ae43ab],dh
  40e9d9:	mov    esp,esp
  40e9db:	and    al,0x9b
  40e9dd:	xor    eax,0x3ff4f081
  40e9e2:	xor    edx,DWORD PTR [esi]
  40e9e4:	mov    ah,BYTE PTR [ecx-0xe]
  40e9e7:	cmp    DWORD PTR [ebx-0x59],edi
  40e9ea:	mov    cl,0x9a
  40e9ec:	mov    DWORD PTR [ebx+ecx*8],ecx
  40e9ef:	outs   dx,BYTE PTR ds:[esi]
  40e9f0:	imul   esi,DWORD PTR [eax+0x44ac157],0xffffff98
  40e9f7:	jno    0x40e9ee
  40e9f9:	jb     0x40ea0a
  40e9fb:	pop    ebx
  40e9fc:	pop    edx
  40e9fd:	sar    DWORD PTR [esi+ecx*2-0x2e7e4e0b],1
  40ea04:	repnz popa 
  40ea06:	(bad)  
  40ea07:	(bad)  
  40ea08:	call   FWORD PTR ds:0x78da3cbf
  40ea0e:	push   eax
  40ea0f:	xchg   esp,eax
  40ea10:	out    dx,eax
  40ea11:	and    al,0xbc
  40ea13:	sub    cl,BYTE PTR [ebx+eax*4]
  40ea16:	out    dx,al
  40ea17:	inc    edi
  40ea18:	sar    DWORD PTR [ebx-0x14],0x80
  40ea1c:	(bad)  
  40ea1d:	lods   eax,DWORD PTR ds:[esi]
  40ea1e:	jae    0x40e9b8
  40ea20:	enter  0x2b8c,0x8d
  40ea24:	push   eax
  40ea25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea27:	cdq    
  40ea28:	mov    edi,0x7e05818
  40ea2d:	jmp    0x40ea28
  40ea2f:	sbb    al,0x67
  40ea31:	pop    ss
  40ea32:	pop    ds
  40ea33:	mov    dl,0x72
  40ea35:	clc    
  40ea36:	ror    al,0x49
  40ea39:	push   ecx
  40ea3a:	or     eax,edi
  40ea3c:	mov    DWORD PTR [edx+edx*4],0x48f1575
  40ea43:	sub    esp,DWORD PTR [ecx+0x2b]
  40ea46:	jb     0x40ea1b
  40ea48:	into   
  40ea49:	scas   al,BYTE PTR es:[edi]
  40ea4a:	gs mov ebx,0xd9c04786
  40ea50:	jmp    0xa786:0x5192ad65
  40ea57:	pusha  
  40ea58:	and    ebp,DWORD PTR [ebp+0x40]
  40ea5b:	mov    edx,0x44278e05
  40ea60:	enter  0x726b,0x28
  40ea64:	push   ss
  40ea65:	pcmpeqd mm5,QWORD PTR [esi+ecx*1]
  40ea69:	sbb    DWORD PTR ds:0x581639c9,ecx
  40ea6f:	loop   0x40e9f3
  40ea71:	call   0x1a463ac2
  40ea76:	dec    esp
  40ea77:	out    0xfc,eax
  40ea79:	mov    ecx,0xe070f0d5
  40ea7e:	fwait
  40ea7f:	inc    BYTE PTR [edx-0x67f17fc2]
  40ea85:	xchg   esi,esp
  40ea87:	outs   dx,BYTE PTR ds:[esi]
  40ea88:	mov    edi,0x7c4dd811
  40ea8d:	test   DWORD PTR [ebx+0x76ac5c11],ebx
  40ea93:	test   dh,ah
  40ea95:	xor    al,0x30
  40ea97:	lock stos DWORD PTR es:[edi],eax
  40ea99:	mov    dh,0xd2
  40ea9b:	pop    ds
  40ea9c:	into   
  40ea9d:	dec    ecx
  40ea9e:	push   esp
  40ea9f:	stos   DWORD PTR es:[edi],eax
  40eaa0:	sub    DWORD PTR [edi],esp
  40eaa2:	mov    bh,0xf5
  40eaa4:	mov    bh,0x5e
  40eaa6:	mov    dl,0xbc
  40eaa8:	jns    0x40ea44
  40eaaa:	imul   edx,DWORD PTR [ebp+0x6bb08f68],0xffffffa3
  40eab1:	cwde   
  40eab2:	inc    esp
  40eab3:	xchg   edx,eax
  40eab4:	arpl   WORD PTR [ecx+0x69237a77],bp
  40eaba:	mov    BYTE PTR [ebp+0x45],bh
  40eabd:	call   0xc75f:0x798bf489
  40eac4:	ror    dl,0x3d
  40eac7:	push   esp
  40eac8:	fdivrp st(6),st
  40eaca:	call   0x6aa7bae3
  40eacf:	(bad)  
  40ead1:	or     eax,0xa8452e79
  40ead6:	in     eax,0xa3
  40ead8:	cmc    
  40ead9:	stc    
  40eada:	cli    
  40eadb:	push   0x7c4397fd
  40eae0:	aas    
  40eae1:	xlat   BYTE PTR ds:[ebx]
  40eae2:	(bad)  
  40eae3:	sub    bl,BYTE PTR ds:0x78e8b033
  40eae9:	retf   
  40eaea:	inc    esp
  40eaeb:	out    0xed,al
  40eaed:	in     al,0x6c
  40eaef:	div    esi
  40eaf1:	loop   0x40eace
  40eaf3:	pop    ss
  40eaf4:	mov    ebp,0x656306f6
  40eaf9:	in     al,dx
  40eafa:	jle    0x40eb2d
  40eafc:	cmp    al,0x2a
  40eafe:	adc    BYTE PTR [edi-0x3b537a3e],bh
  40eb04:	jbe    0x40eb75
  40eb06:	push   esp
  40eb07:	ins    BYTE PTR es:[edi],dx
  40eb08:	(bad)  
  40eb09:	or     al,0x2f
  40eb0b:	pop    ebx
  40eb0c:	xchg   DWORD PTR [edi],eax
  40eb0e:	jle    0x40ea9d
  40eb10:	fld    QWORD PTR [eax]
  40eb12:	inc    eax
  40eb13:	push   edi
  40eb14:	and    BYTE PTR [edi],0xe4
  40eb17:	rcl    DWORD PTR [ebp-0x9af7932],1
  40eb1d:	and    bl,BYTE PTR [eax+0x5edff934]
  40eb23:	jne    0x40eb03
  40eb25:	daa    
  40eb26:	out    0xe3,eax
  40eb28:	pop    es
  40eb29:	ret    0x4977
  40eb2c:	out    0x8,eax
  40eb2e:	cli    
  40eb2f:	pop    esp
  40eb30:	push   ss
  40eb31:	sbb    esp,DWORD PTR [ebx-0x5de0897d]
  40eb37:	mov    ebx,edi
  40eb39:	test   al,0x40
  40eb3b:	jno    0x40eba9
  40eb3d:	adc    al,0x1d
  40eb3f:	add    BYTE PTR [ecx],dl
  40eb41:	pop    edi
  40eb42:	push   eax
  40eb43:	cmp    esi,DWORD PTR [edi+0x4f]
  40eb46:	xor    DWORD PTR [ebx],ebx
  40eb48:	dec    ebp
  40eb49:	mov    ebp,0xb80e4f3
  40eb4e:	loope  0x40ebb1
  40eb50:	add    al,0xea
  40eb52:	jle    0x40ebb6
  40eb54:	xlat   BYTE PTR ds:[ebx]
  40eb55:	in     eax,0x48
  40eb57:	mov    esi,0x3f024346
  40eb5c:	stos   BYTE PTR es:[edi],al
  40eb5d:	sbb    al,0x6b
  40eb5f:	mov    eax,0x1e6d9598
  40eb64:	adc    BYTE PTR [ebp+0x11],dh
  40eb67:	mov    cl,0xf1
  40eb69:	add    al,0x4f
  40eb6b:	push   cs
  40eb6c:	loopne 0x40ebb1
  40eb6e:	ss mov edi,0xd61dc1e
  40eb74:	fs cwde 
  40eb76:	loope  0x40ebf1
  40eb78:	ins    DWORD PTR es:[edi],dx
  40eb79:	data16 test dl,dh
  40eb7c:	nop
  40eb7d:	jo     0x40eb8d
  40eb7f:	mov    ds:0x9e5df3bd,al
  40eb84:	mov    ch,0x9b
  40eb86:	jle    0x40eb92
  40eb88:	mov    eax,ds:0x7c0058aa
  40eb8d:	ss push edx
  40eb8f:	and    bh,BYTE PTR [ebx+0x72]
  40eb92:	in     eax,0x60
  40eb94:	jbe    0x40eb85
  40eb96:	pop    esp
  40eb97:	cmp    edx,DWORD PTR [ebx+0x22d047e0]
  40eb9d:	xchg   ecx,eax
  40eb9e:	mov    ?,WORD PTR [edx]
  40eba0:	sar    DWORD PTR ds:0x64e7930f,cl
  40eba6:	addr16 js 0x40eb61
  40eba9:	not    BYTE PTR [eax]
  40ebab:	jl     0x40eb55
  40ebad:	loope  0x40ebbe
  40ebaf:	pop    esi
  40ebb0:	mov    bl,0x2e
  40ebb2:	xchg   BYTE PTR [edx+0x67],al
  40ebb5:	sbb    al,0x33
  40ebb7:	adc    al,0xe6
  40ebb9:	int3   
  40ebba:	xor    ebx,DWORD PTR [ecx]
  40ebbc:	pop    esi
  40ebbd:	(bad)  
  40ebbe:	and    al,0x72
  40ebc0:	mov    BYTE PTR [ecx+0x4792a2a4],dh
  40ebc6:	test   eax,0xc3750907
  40ebcb:	lea    eax,[ecx+0x63]
  40ebce:	cs pop eax
  40ebd0:	dec    ebx
  40ebd1:	push   ebx
  40ebd2:	dec    esp
  40ebd3:	dec    edi
  40ebd4:	and    al,al
  40ebd6:	cmc    
  40ebd7:	arpl   WORD PTR [ecx+eax*8+0x821846f],sp
  40ebde:	clc    
  40ebdf:	cmp    BYTE PTR [edi+0x412e4134],bh
  40ebe5:	xor    BYTE PTR [edi+0x426228c1],ah
  40ebeb:	cmp    al,BYTE PTR [edi-0x68068265]
  40ebf1:	and    eax,0x25969d5e
  40ebf6:	cdq    
  40ebf7:	mov    ds:0x4af078f0,al
  40ebfc:	inc    esi
  40ebfd:	les    edx,FWORD PTR [edi+0x7b6b93a6]
  40ec03:	or     eax,0x658362c8
  40ec08:	pop    ss
  40ec09:	shl    DWORD PTR [edx+edx*2+0x2deb181b],1
  40ec10:	sbb    esp,esi
  40ec12:	xchg   edx,eax
  40ec13:	jle    0x40ec35
  40ec15:	cwde   
  40ec16:	pop    eax
  40ec17:	push   cs
  40ec18:	leave  
  40ec19:	paddd  mm6,mm7
  40ec1c:	clc    
  40ec1d:	hlt    
  40ec1e:	shr    DWORD PTR [eax],1
  40ec20:	or     edx,DWORD PTR [eax-0x10]
  40ec23:	fwait
  40ec24:	(bad)  
  40ec25:	and    dh,BYTE PTR [edx+0x1dd0bd61]
  40ec2b:	daa    
  40ec2c:	loop   0x40ec57
  40ec2e:	shl    bl,0x3f
  40ec31:	or     DWORD PTR [ecx-0x22],ecx
  40ec34:	xchg   ebp,eax
  40ec35:	adc    DWORD PTR [edi+0x2a56db53],edx
  40ec3b:	mov    ecx,?
  40ec3d:	ja     0x40ec64
  40ec3f:	daa    
  40ec40:	(bad)  
  40ec42:	jg     0x40ebe0
  40ec44:	jmp    0x40ec87
  40ec46:	mov    ds:0xbae468e,eax
  40ec4b:	ins    DWORD PTR es:[edi],dx
  40ec4c:	sbb    edx,eax
  40ec4e:	inc    edx
  40ec4f:	jmp    0xf546:0x9121fcb1
  40ec56:	in     eax,0x95
  40ec58:	ja     0x40ecbf
  40ec5a:	inc    esp
  40ec5b:	lods   eax,DWORD PTR ds:[esi]
  40ec5c:	fstp   DWORD PTR [ebp+0x69792adf]
  40ec62:	and    ecx,DWORD PTR [ebx]
  40ec64:	jmp    DWORD PTR [ebx+0x415005cb]
  40ec6a:	outs   dx,DWORD PTR ds:[esi]
  40ec6b:	fild   DWORD PTR [ecx+0x22]
  40ec6e:	push   edi
  40ec6f:	add    eax,esi
  40ec71:	rcr    BYTE PTR [ebp-0x589b9cdc],0x4b
  40ec78:	imul   ecx,DWORD PTR [edi],0xb2bc756f
  40ec7e:	dec    esp
  40ec7f:	(bad)  
  40ec80:	jo     0x40ec72
  40ec82:	mov    WORD PTR [ebp+edx*4-0x32],fs
  40ec86:	add    eax,0x365405fe
  40ec8b:	scas   eax,DWORD PTR es:[edi]
  40ec8c:	lods   al,BYTE PTR ds:[esi]
  40ec8d:	dec    ebp
  40ec8e:	and    eax,DWORD PTR [eax-0xf]
  40ec91:	pop    esp
  40ec92:	loope  0x40ec1a
  40ec94:	cmp    ebp,0x4939d28f
  40ec9a:	mov    edi,esi
  40ec9c:	inc    ebp
  40ec9d:	cs daa 
  40ec9f:	inc    ebp
  40eca0:	pop    edx
  40eca1:	(bad)  
  40eca2:	bswap  edi
  40eca4:	mov    bl,0xbc
  40eca6:	mov    edi,0x51e2809d
  40ecab:	jnp    0x40ed29
  40ecad:	xor    esp,esi
  40ecaf:	lock mov dh,0x5
  40ecb2:	in     eax,0x67
  40ecb4:	(bad)  
  40ecb5:	fcomi  st,st(4)
  40ecb7:	pop    esi
  40ecb8:	in     al,0xfc
  40ecba:	cmp    al,BYTE PTR [edx]
  40ecbc:	pop    eax
  40ecbd:	cmp    al,0x2a
  40ecbf:	int    0x4e
  40ecc1:	pop    ebx
  40ecc2:	xlat   BYTE PTR ds:[ebx]
  40ecc3:	push   edx
  40ecc4:	(bad)  [esi]
  40ecc6:	fdivr  QWORD PTR [ecx+0x57]
  40ecc9:	pop    ebp
  40ecca:	sbb    dl,ah
  40eccc:	xchg   ebx,eax
  40eccd:	jno    0x40ed1f
  40eccf:	sub    DWORD PTR [edx+eax*4],ecx
  40ecd2:	xor    DWORD PTR [ebp+0x1f792e62],edi
  40ecd8:	shl    BYTE PTR ds:0xf3d42641,cl
  40ecde:	in     al,dx
  40ecdf:	xchg   ebx,eax
  40ece0:	(bad)  
  40ece1:	idiv   BYTE PTR [eax]
  40ece3:	out    0x46,al
  40ece5:	mov    edx,0x5dc6a451
  40ecea:	data16 cmp BYTE PTR [ecx+0x76],dl
  40ecee:	aam    0xc9
  40ecf0:	push   ecx
  40ecf1:	cmp    bl,BYTE PTR [esi+0x7e]
  40ecf4:	pushf  
  40ecf5:	test   al,0x82
  40ecf7:	push   ds
  40ecf8:	inc    esp
  40ecf9:	mov    ebx,0xd4413433
  40ecfe:	add    esp,DWORD PTR [edi]
  40ed00:	std    
  40ed01:	jmp    0x998:0x937e57c5
  40ed08:	mov    ebx,0xd0f6a5f4
  40ed0d:	stos   DWORD PTR es:[edi],eax
  40ed0e:	mov    ds:0x305ec91c,eax
  40ed13:	fs inc edi
  40ed15:	sub    eax,0xa851639f
  40ed1a:	jb     0x40ecfb
  40ed1c:	into   
  40ed1d:	pop    esi
  40ed1e:	mov    edx,0x7f30042b
  40ed23:	mov    bh,bl
  40ed25:	js     0x40eda1
  40ed27:	pop    ebp
  40ed28:	jno    0x40ecfb
  40ed2a:	and    DWORD PTR [edx-0x42],esi
  40ed2d:	test   DWORD PTR [edx-0xb864fd1],edx
  40ed33:	aaa    
  40ed34:	add    ah,BYTE PTR [edx+0x33]
  40ed37:	sbb    esi,DWORD PTR [edi+0x7141f815]
  40ed3d:	xor    eax,0x60f86667
  40ed42:	(bad)  
  40ed43:	out    dx,al
  40ed44:	popa   
  40ed45:	test   DWORD PTR [edi-0xe],esi
  40ed48:	inc    ebp
  40ed49:	jns    0x40edb4
  40ed4b:	mov    dl,0xfc
  40ed4d:	and    eax,0x130a4247
  40ed52:	adc    al,0x61
  40ed54:	pop    ebp
  40ed55:	pop    es
  40ed56:	getsec 
  40ed58:	pop    edx
  40ed59:	jnp    0x40edb8
  40ed5b:	xor    eax,0xd90a1747
  40ed60:	(bad)  
  40ed61:	push   ds
  40ed62:	lea    edi,[esi-0x54]
  40ed65:	repz mov bh,0xf4
  40ed68:	mov    DWORD PTR [edi-0x2f],eax
  40ed6b:	(bad)  
  40ed6c:	xchg   esi,eax
  40ed6d:	push   edx
  40ed6e:	ret    0x456b
  40ed71:	nop
  40ed72:	push   ebp
  40ed73:	sbb    ch,bl
  40ed75:	dec    eax
  40ed76:	cwde   
  40ed77:	mov    cl,cl
  40ed79:	fiadd  DWORD PTR [ebx-0x13]
  40ed7c:	lahf   
  40ed7d:	rcr    ebp,1
  40ed7f:	fadd   QWORD PTR [edx+0x5d]
  40ed82:	nop
  40ed83:	shl    BYTE PTR [eax+0xf2075ea],1
  40ed89:	shr    BYTE PTR [edi+0x468fcf3a],1
  40ed8f:	enter  0x829a,0x38
  40ed93:	sbb    esi,edi
  40ed95:	push   ss
  40ed96:	inc    esp
  40ed97:	dec    edx
  40ed98:	(bad)  
  40ed9a:	xchg   edx,eax
  40ed9b:	push   ebp
  40ed9c:	fidivr WORD PTR [edi]
  40ed9e:	test   DWORD PTR [ebx+0x7e],esi
  40eda1:	scas   eax,DWORD PTR es:[edi]
  40eda2:	push   esp
  40eda3:	sbb    eax,0xecabf868
  40eda8:	leave  
  40eda9:	nop
  40edaa:	mov    ebp,0x1d2866de
  40edaf:	adc    ch,ch
  40edb1:	jl     0x40ee2a
  40edb3:	fs mov ch,0x65
  40edb6:	jae    0x40ed89
  40edb8:	xor    edx,0xb915c410
  40edbe:	pop    ebx
  40edbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edc0:	scas   al,BYTE PTR es:[edi]
  40edc1:	add    eax,0xc1788a08
  40edc6:	pop    ecx
  40edc7:	pop    ds
  40edc8:	rcl    BYTE PTR cs:[esi],cl
  40edcb:	daa    
  40edcc:	daa    
  40edcd:	imul   edi,DWORD PTR [ecx+0x5b],0xffffffbc
  40edd1:	xor    eax,0x672f3c98
  40edd6:	stos   DWORD PTR es:[edi],eax
  40edd7:	adc    al,0x97
  40edd9:	pop    eax
  40edda:	retf   0x3e06
  40eddd:	arpl   si,bp
  40eddf:	inc    ecx
  40ede0:	jnp    0x40ee53
  40ede2:	mov    esi,0xdc6b3603
  40ede7:	outs   dx,BYTE PTR ds:[esi]
  40ede8:	not    BYTE PTR [edx-0x76]
  40edeb:	sub    ah,bl
  40eded:	add    cl,BYTE PTR [eax-0x32bb915b]
  40edf3:	scas   al,BYTE PTR es:[edi]
  40edf4:	pop    esp
  40edf5:	adc    eax,0xec7beb00
  40edfa:	jmp    0xb97e52c5
  40edff:	jo     0x40ee34
  40ee01:	xchg   esp,eax
  40ee02:	add    ebx,edi
  40ee04:	jne    0x40edac
  40ee06:	ins    BYTE PTR es:[edi],dx
  40ee07:	nop
  40ee08:	mov    eax,0xd9507c28
  40ee0d:	jecxz  0x40edfa
  40ee0f:	xor    eax,esi
  40ee11:	test   esp,esp
  40ee13:	icebp  
  40ee14:	mov    dl,0x40
  40ee16:	sbb    al,ah
  40ee18:	xor    DWORD PTR [eax+0x4a61e941],ebx
  40ee1e:	add    dh,BYTE PTR [eax+edx*8-0x18]
  40ee22:	rcr    cl,1
  40ee24:	into   
  40ee25:	add    eax,0x388629f2
  40ee2a:	mov    esp,0xee6bcef3
  40ee2f:	les    ebp,FWORD PTR [eax+edi*8-0x66]
  40ee33:	push   esi
  40ee34:	jne    0x40edeb
  40ee36:	and    BYTE PTR [edi+0x5b],al
  40ee39:	cmp    BYTE PTR cs:[esi-0x1d010b8b],ch
  40ee40:	inc    esi
  40ee41:	(bad)  
  40ee43:	nop
  40ee44:	ret    
  40ee45:	mov    al,BYTE PTR [eax+0x33]
  40ee48:	test   al,0xe3
  40ee4a:	in     al,0x57
  40ee4c:	push   ss
  40ee4d:	mov    esi,0xa89ba426
  40ee52:	outs   dx,BYTE PTR ds:[esi]
  40ee53:	mov    BYTE PTR [esi],bh
  40ee55:	push   edi
  40ee56:	push   cs
  40ee57:	xchg   DWORD PTR [ebp+0x2b198f25],ebx
  40ee5d:	fucomp st(2)
  40ee5f:	imul   eax,DWORD PTR [edi-0x4c],0x1aea49e2
  40ee66:	mov    WORD PTR [ebx],?
  40ee68:	pop    edi
  40ee69:	pop    esp
  40ee6a:	adc    DWORD PTR [ebx-0x21e59b5d],ebx
  40ee70:	and    edx,edx
  40ee72:	inc    edi
  40ee73:	sbb    eax,0x3fdb0c07
  40ee78:	pop    esi
  40ee79:	addr16 or eax,0x36f6a2cd
  40ee7f:	in     eax,dx
  40ee80:	stos   DWORD PTR es:[edi],eax
  40ee81:	jnp    0x40eeb6
  40ee83:	outs   dx,BYTE PTR ds:[esi]
  40ee84:	lods   al,BYTE PTR ds:[esi]
  40ee85:	ret    
  40ee86:	pop    edx
  40ee87:	in     eax,0x52
  40ee89:	mov    ah,0x8c
  40ee8b:	out    dx,al
  40ee8c:	jecxz  0x40eec7
  40ee8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee8f:	enter  0xd4e2,0x73
  40ee93:	and    BYTE PTR [edx],dh
  40ee95:	dec    eax
  40ee96:	xchg   esi,eax
  40ee97:	fistp  WORD PTR [edx]
  40ee99:	dec    ecx
  40ee9a:	mov    bh,BYTE PTR [edx+0x50]
  40ee9d:	cs cmp eax,0xf08accbb
  40eea3:	aaa    
  40eea4:	pop    eax
  40eea5:	sbb    ebp,DWORD PTR [esi-0x1a2ea868]
  40eeab:	cmp    DWORD PTR ds:0xf6108da8,edi
  40eeb1:	and    al,0x3a
  40eeb3:	pop    ecx
  40eeb4:	fidivr DWORD PTR [ebx+ecx*1-0x5b570b8f]
  40eebb:	scas   eax,DWORD PTR es:[edi]
  40eebc:	mov    eax,ds:0x98e793bd
  40eec1:	test   eax,0x37701f0f
  40eec6:	add    BYTE PTR ss:[ebx],al
  40eec9:	js     0x40ee78
  40eecb:	cmp    eax,0x47f59bf6
  40eed0:	cmp    BYTE PTR [ebx+0x23e17283],bh
  40eed6:	out    0xc5,eax
  40eed8:	or     bl,BYTE PTR [edi-0x37037ad0]
  40eede:	mov    ecx,0xb3028678
  40eee3:	add    ecx,ebp
  40eee5:	test   BYTE PTR [esi-0x71],0x69
  40eee9:	aas    
  40eeea:	scas   eax,DWORD PTR es:[edi]
  40eeeb:	mov    edi,0x15b2d540
  40eef0:	sub    bl,BYTE PTR [ecx]
  40eef2:	in     al,dx
  40eef3:	ret    0xfdab
  40eef6:	pop    esi
  40eef7:	push   es
  40eef8:	or     esp,DWORD PTR [eax-0x36]
  40eefb:	pop    eax
  40eefc:	iret   
  40eefd:	shl    BYTE PTR ds:0xb680d9d,0xd7
  40ef04:	(bad)
  40ef07:	xor    DWORD PTR [ebx-0x49],0xb1c21dbe
  40ef0e:	out    0xfa,al
  40ef10:	ins    DWORD PTR es:[edi],dx
  40ef11:	lods   al,BYTE PTR ds:[esi]
  40ef12:	sub    dl,BYTE PTR [ebp-0x7abfe6a5]
  40ef18:	mov    ah,0x92
  40ef1a:	cmp    DWORD PTR [ecx-0x27b10cca],ebp
  40ef20:	jo     0x40eee2
  40ef22:	shr    DWORD PTR [ecx+0x6a],1
  40ef25:	mov    bl,0xe1
  40ef27:	inc    ebp
  40ef28:	sbb    ecx,0x8
  40ef2b:	jne    0x40eecb
  40ef2d:	lods   eax,DWORD PTR ds:[esi]
  40ef2e:	add    cl,BYTE PTR [ecx]
  40ef30:	test   BYTE PTR [edi],bh
  40ef32:	add    eax,0xf5ff2009
  40ef37:	xchg   esp,eax
  40ef38:	ins    BYTE PTR es:[edi],dx
  40ef39:	les    esi,FWORD PTR [edx+0x239bfb6]
  40ef3f:	in     al,dx
  40ef40:	and    DWORD PTR [eax],edx
  40ef42:	pop    ebp
  40ef43:	mov    al,ds:0x143aa731
  40ef48:	inc    esi
  40ef49:	inc    ecx
  40ef4a:	bound  ecx,QWORD PTR [edx-0x40976c18]
  40ef50:	mov    eax,ds:0x21f40287
  40ef55:	mov    eax,0xe8ea903c
  40ef5a:	lock sar al,0xbe
  40ef5e:	into   
  40ef5f:	adc    DWORD PTR [eax+0x2e095ae5],edi
  40ef65:	daa    
  40ef66:	jp     0x40ef30
  40ef68:	jns    0x40efb4
  40ef6a:	sbb    eax,0x1e2fa8b1
  40ef6f:	lock enter 0x7fd0,0x4f
  40ef74:	and    BYTE PTR [ebx+ecx*4+0x67],cl
  40ef78:	stos   BYTE PTR es:[edi],al
  40ef79:	mov    edx,0x45d656f5
  40ef7e:	fcomp  QWORD PTR [edx-0x3f]
  40ef81:	hlt    
  40ef82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef83:	cli    
  40ef84:	nop
  40ef85:	inc    eax
  40ef86:	das    
  40ef87:	pop    ebp
  40ef88:	retf   
  40ef89:	and    BYTE PTR [esi+0x0],dl
  40ef8c:	retf   0x2756
  40ef8f:	push   eax
  40ef90:	inc    eax
  40ef91:	sbb    cl,dl
  40ef93:	loop   0x40efb0
  40ef95:	xor    eax,0x67877e8
  40ef9a:	push   ds
  40ef9b:	or     eax,0x6a4c841c
  40efa0:	adc    ah,BYTE PTR [ebp+0x195bb83a]
  40efa6:	in     al,0xa8
  40efa8:	shl    DWORD PTR [edx+0x44],cl
  40efab:	add    al,0xb3
  40efad:	scas   al,BYTE PTR es:[edi]
  40efae:	in     eax,dx
  40efaf:	scas   eax,DWORD PTR es:[edi]
  40efb0:	mov    ecx,0x665aeb9f
  40efb5:	adc    ch,dh
  40efb7:	sub    DWORD PTR [edi-0x37db32d2],eax
  40efbd:	lods   eax,DWORD PTR ds:[esi]
  40efbe:	and    BYTE PTR [ebx+0x2d41e66c],cl
  40efc4:	jnp    0x40f044
  40efc6:	cmp    eax,0x7a92e4d5
  40efcb:	ret    
  40efcc:	mov    esi,0x833632c2
  40efd1:	dec    esi
  40efd2:	test   DWORD PTR [edi+0x1bea00d],eax
  40efd8:	add    BYTE PTR [ecx-0x73011b6d],ch
  40efde:	retf   0xd7d6
  40efe1:	jb     0x40ef7e
  40efe3:	mov    bh,0xc6
  40efe5:	mov    ebp,0xd9407824
  40efea:	pop    ecx
  40efeb:	pusha  
  40efec:	daa    
  40efed:	inc    esi
  40efee:	xchg   DWORD PTR [edi+0x6d],edi
  40eff1:	jg     0x40efea
  40eff3:	mov    gs,WORD PTR [esi-0x7a]
  40eff6:	sar    DWORD PTR [ebx+0x68],1
  40eff9:	dec    ecx
  40effa:	enter  0xd268,0xaf
  40effe:	add    eax,0x6d43b4ca
  40f003:	lahf   
  40f004:	das    
  40f005:	repnz retf 0xb436
  40f009:	sti    
  40f00a:	xor    BYTE PTR gs:[ebx+0x7d],al
  40f00e:	push   ds
  40f00f:	cmp    eax,0x3282ed24
  40f014:	mov    esp,0x7f235cf4
  40f019:	lods   eax,DWORD PTR ds:[esi]
  40f01a:	mov    eax,0x9edabd10
  40f01f:	repnz adc bh,dh
  40f022:	push   ebp
  40f023:	(bad)  
  40f024:	dec    edi
  40f025:	jns    0x40f026
  40f027:	cmp    eax,0x75286e6a
  40f02c:	dec    edi
  40f02d:	or     BYTE PTR [eax],0x50
  40f030:	xchg   ebp,eax
  40f031:	cdq    
  40f032:	rcl    BYTE PTR [edx+ecx*4+0x58],1
  40f036:	sar    BYTE PTR [esi],1
  40f038:	je     0x40efbb
  40f03a:	mov    dh,0x55
  40f03c:	lock push cs
  40f03e:	test   al,0x5e
  40f040:	and    DWORD PTR [ecx],ebx
  40f042:	js     0x40f044
  40f044:	fcmove st,st(1)
  40f046:	ret    0xfb63
  40f049:	jg     0x40eff0
  40f04b:	dec    ebx
  40f04c:	jns    0x40effe
  40f04e:	pop    edx
  40f04f:	cs xchg ebx,eax
  40f051:	ret    0x33b7
  40f054:	xchg   ecx,eax
  40f055:	cmp    bl,BYTE PTR [eax+0x52]
  40f058:	es out 0x9,eax
  40f05b:	push   cs
  40f05c:	mov    edx,0x1d85dbb8
  40f061:	pushf  
  40f062:	prefetch BYTE PTR [edx+0x131a60d]
  40f069:	jecxz  0x40f065
  40f06b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f06c:	cmp    bh,BYTE PTR [edx+0x19]
  40f06f:	inc    esi
  40f070:	je     0x40f018
  40f072:	daa    
  40f073:	pop    ss
  40f074:	mov    esp,0x3c270ce2
  40f079:	fmul   QWORD PTR [esi+0x564c8e40]
  40f07f:	mov    ebx,0xef4e8129
  40f084:	jl     0x40f0ca
  40f086:	test   ax,0x6f97
  40f08a:	pop    eax
  40f08b:	icebp  
  40f08c:	in     eax,0xa8
  40f08e:	cmp    DWORD PTR [edx+0x2d],eax
  40f091:	xor    BYTE PTR [eax-0x47],dh
  40f094:	into   
  40f095:	pop    esi
  40f096:	mov    ah,0x49
  40f098:	push   0x4f
  40f09a:	dec    esp
  40f09b:	mov    ch,BYTE PTR [ebp-0x34]
  40f09e:	adc    BYTE PTR [ebx+0x57],ch
  40f0a1:	imul   BYTE PTR [ecx]
  40f0a3:	adc    dl,0xf7
  40f0a6:	jle    0x40f082
  40f0a8:	out    dx,eax
  40f0a9:	sbb    eax,0x9897d2b1
  40f0ae:	sub    dl,BYTE PTR ds:0xbe01658d
  40f0b4:	push   ds
  40f0b5:	mov    esp,0x28ebd19f
  40f0ba:	push   ss
  40f0bb:	cmc    
  40f0bc:	pop    eax
  40f0bd:	cmp    edi,DWORD PTR [eax]
  40f0bf:	js     0x40f041
  40f0c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0c2:	lods   eax,DWORD PTR ds:[esi]
  40f0c3:	push   edi
  40f0c4:	push   esp
  40f0c5:	adc    al,0xdb
  40f0c7:	xor    al,0xde
  40f0c9:	cli    
  40f0ca:	dec    esp
  40f0cb:	imul   esi,DWORD PTR [edi-0x271c09f2],0x3387c78d
  40f0d5:	mov    ebx,0x91d51223
  40f0da:	xor    esi,DWORD PTR [ecx+ebp*2-0x2bfe9e4d]
  40f0e1:	fcomp  QWORD PTR ds:0x6fe4d188
  40f0e7:	in     eax,dx
  40f0e8:	popf   
  40f0e9:	add    ebp,DWORD PTR [ebp+0xc97fe56]
  40f0ef:	ret    
  40f0f0:	or     eax,0xfb10b0cc
  40f0f5:	ja     0x40f0ad
  40f0f7:	std    
  40f0f8:	fidiv  DWORD PTR [eax+0x7e]
  40f0fb:	jns    0x40f120
  40f0fd:	jb     0x40f12e
  40f0ff:	mov    esi,0x63951c42
  40f104:	out    0x7d,al
  40f106:	xchg   ebp,eax
  40f107:	pop    ebx
  40f108:	sub    edx,DWORD PTR [ecx+0x3fdcb75b]
  40f10e:	xchg   esi,eax
  40f10f:	stos   BYTE PTR es:[edi],al
  40f110:	mov    eax,0x767e4028
  40f115:	(bad)  
  40f116:	mov    ebx,0x817e6aa5
  40f11b:	pushf  
  40f11c:	push   ss
  40f11d:	pop    ebx
  40f11e:	js     0x40f0e6
  40f120:	xchg   edi,eax
  40f121:	inc    ebp
  40f122:	sub    al,0x3b
  40f124:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f125:	cmp    eax,0xdb2f61c5
  40f12a:	hlt    
  40f12b:	mov    edi,0x9fb49100
  40f130:	icebp  
  40f131:	les    ebp,FWORD PTR [edx+0x2dece169]
  40f137:	push   0xf0a6fb3e
  40f13c:	inc    eax
  40f13d:	xchg   esi,eax
  40f13e:	mov    ah,0xc7
  40f140:	pop    esi
  40f141:	test   DWORD PTR [eax],edx
  40f143:	(bad)  
  40f144:	cdq    
  40f145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f146:	(bad)  
  40f148:	dec    eax
  40f149:	cmp    DWORD PTR [esi+0x36ccc3ad],ebp
  40f14f:	nop
  40f150:	out    0x61,al
  40f152:	pop    esi
  40f153:	das    
  40f154:	cs pop edx
  40f156:	mov    dh,0x2a
  40f158:	mov    ch,bh
  40f15a:	push   0xe2e52c32
  40f15f:	popa   
  40f160:	add    esi,esp
  40f162:	repz mov ah,0x98
  40f165:	add    BYTE PTR [esi+0x19],bl
  40f168:	dec    ecx
  40f169:	(bad)  
  40f16a:	xor    al,0x57
  40f16c:	pop    es
  40f16d:	sahf   
  40f16e:	dec    ecx
  40f16f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f170:	dec    ebp
  40f171:	cmp    eax,0x8d25a9eb
  40f176:	hlt    
  40f177:	sub    al,0x4f
  40f179:	dec    esi
  40f17a:	or     edi,DWORD PTR gs:[ecx-0x6f7ad83]
  40f181:	stos   DWORD PTR es:[edi],eax
  40f182:	add    al,0x58
  40f184:	ja     0x40f1f0
  40f186:	ins    DWORD PTR es:[edi],dx
  40f187:	repnz xchg esp,eax
  40f189:	xor    al,0x98
  40f18b:	retf   0xc102
  40f18e:	push   cs
  40f18f:	add    ah,BYTE PTR [edx]
  40f191:	pop    edi
  40f192:	add    eax,0xe0784f87
  40f197:	sub    BYTE PTR [ecx],ch
  40f199:	jl     0x40f1d2
  40f19b:	cwde   
  40f19c:	stos   BYTE PTR es:[edi],al
  40f19d:	pop    esi
  40f19e:	call   0x7d312e78
  40f1a3:	aad    0x74
  40f1a5:	shr    DWORD PTR [edi+0x74c8d09c],1
  40f1ab:	fwait
  40f1ac:	leave  
  40f1ad:	jl     0x40f148
  40f1af:	shr    DWORD PTR [ebp-0x29],0x76
  40f1b3:	(bad)  
  40f1b4:	xchg   ebp,eax
  40f1b5:	stc    
  40f1b6:	lods   al,BYTE PTR ds:[esi]
  40f1b7:	(bad)  
  40f1b8:	xchg   edi,eax
  40f1b9:	and    eax,0xf52c4768
  40f1be:	int    0x23
  40f1c0:	mov    esi,esp
  40f1c2:	sar    BYTE PTR ss:[esi+0x68a83395],1
  40f1c9:	fst    QWORD PTR [ebp-0x52]
  40f1cc:	jnp    0x40f1ed
  40f1ce:	shl    DWORD PTR [eax+0x77],cl
  40f1d1:	xchg   esp,eax
  40f1d2:	outs   dx,BYTE PTR ds:[esi]
  40f1d3:	push   esp
  40f1d4:	jne    0x40f1e5
  40f1d6:	jl     0x40f182
  40f1d8:	xor    al,0x34
  40f1da:	leave  
  40f1db:	test   DWORD PTR [ebp+0x9dc8474],0x97c041b1
  40f1e5:	push   ss
  40f1e6:	fwait
  40f1e7:	push   ecx
  40f1e8:	lahf   
  40f1e9:	aaa    
  40f1ea:	xchg   esi,eax
  40f1eb:	aas    
  40f1ec:	dec    ebx
  40f1ed:	mov    BYTE PTR [esi+esi*8],cl
  40f1f0:	je     0x40f187
  40f1f2:	in     al,0x45
  40f1f4:	aaa    
  40f1f5:	mov    dh,0xef
  40f1f7:	imul   ebx,DWORD PTR [edi+ecx*4],0x7b3036e1
  40f1fe:	(bad)  
  40f1ff:	cmp    BYTE PTR [ebp+0x15],dh
  40f202:	cwde   
  40f203:	sub    BYTE PTR [ecx+0x50152313],cl
  40f209:	sub    edi,DWORD PTR fs:[ebx-0x6]
  40f20d:	xor    al,0x68
  40f20f:	cmp    DWORD PTR [ebx-0x13a64eeb],eax
  40f215:	loop   0x40f1db
  40f217:	cmp    eax,0xdba7c263
  40f21c:	xor    eax,0x4d585c8e
  40f221:	cs in  al,dx
  40f223:	pop    eax
  40f224:	cmp    ah,BYTE PTR [ecx+0x30]
  40f227:	pop    esp
  40f228:	loopne 0x40f1ad
  40f22a:	pop    es
  40f22b:	aaa    
  40f22c:	test   DWORD PTR [eax+edx*4-0x68f08187],eax
  40f233:	test   BYTE PTR [esi],dh
  40f235:	je     0x40f251
  40f237:	iret   
  40f238:	add    edi,esi
  40f23a:	jno    0x40f1e4
  40f23c:	out    0xa5,al
  40f23e:	loopne 0x40f230
  40f240:	nop
  40f241:	cmp    BYTE PTR [ecx],0x1
  40f244:	or     bh,BYTE PTR [ebx-0x53]
  40f247:	xchg   edx,eax
  40f248:	iret   
  40f249:	jno    0x40f22f
  40f24b:	dec    ebx
  40f24c:	js     0x40f216
  40f24e:	push   edi
  40f24f:	out    0x20,al
  40f251:	mov    edx,0xec6ab2c4
  40f256:	outs   dx,DWORD PTR ds:[esi]
  40f257:	and    DWORD PTR [esi-0x4f91e760],edx
  40f25d:	aad    0xdf
  40f25f:	repnz pop es
  40f261:	mov    dh,0x36
  40f263:	and    DWORD PTR [ebp-0x49c11cdc],ebx
  40f269:	gs leave 
  40f26b:	mov    ds,esp
  40f26d:	shl    al,0xb8
  40f270:	inc    ecx
  40f271:	xchg   edx,eax
  40f272:	(bad)  
  40f274:	(bad)  
  40f275:	xor    bh,al
  40f277:	sub    bl,BYTE PTR [eax+0x6e]
  40f27a:	adc    ch,cl
  40f27c:	sub    BYTE PTR [ecx+0x4c],dl
  40f27f:	mov    al,ds:0xfd583cfe
  40f284:	add    eax,0x1b064615
  40f289:	xor    cl,BYTE PTR [esi+0xda01c1a]
  40f28f:	push   0x73
  40f291:	loop   0x40f2b1
  40f293:	aaa    
  40f294:	in     eax,0xf7
  40f296:	cli    
  40f297:	jno    0x40f2fb
  40f299:	mov    esi,DWORD PTR [ecx+0x473e8495]
  40f29f:	or     bh,BYTE PTR [ebp+0x3035c5bb]
  40f2a5:	pop    ds
  40f2a6:	cld    
  40f2a7:	pop    esi
  40f2a8:	xchg   BYTE PTR ds:0x671bed2f,al
  40f2ae:	das    
  40f2af:	inc    ecx
  40f2b0:	mov    ecx,0x3e7ebaae
  40f2b5:	std    
  40f2b6:	aaa    
  40f2b7:	jge    0x40f246
  40f2b9:	xchg   BYTE PTR [eax+0xe4bd0e2],cl
  40f2bf:	sub    bh,bl
  40f2c1:	jnp    0x40f2fa
  40f2c3:	adc    eax,0x7367c344
  40f2c8:	or     BYTE PTR [eax-0x6e44202b],0x9a
  40f2cf:	add    DWORD PTR [ebp-0x41],ebx
  40f2d2:	ficom  WORD PTR [edx]
  40f2d4:	cmp    bh,ch
  40f2d6:	sub    DWORD PTR [ebp-0x5f131a77],esp
  40f2dc:	mov    bl,0x77
  40f2de:	cdq    
  40f2df:	or     eax,0x65740101
  40f2e4:	hlt    
  40f2e5:	pop    ds
  40f2e6:	loopne 0x40f33c
  40f2e8:	jecxz  0x40f2c0
  40f2ea:	and    DWORD PTR [ebx],esp
  40f2ec:	dec    ebp
  40f2ed:	inc    esp
  40f2ee:	inc    ebx
  40f2ef:	pop    edx
  40f2f0:	sub    ebp,0x54
  40f2f3:	and    eax,0x910ebeed
  40f2f8:	pop    esi
  40f2f9:	push   ds
  40f2fa:	push   eax
  40f2fb:	jg     0x40f35f
  40f2fd:	cmp    al,0x13
  40f2ff:	xchg   ecx,eax
  40f300:	mov    ss,WORD PTR [edx+0x5f5c914e]
  40f306:	iret   
  40f307:	push   ds
  40f308:	adc    BYTE PTR [eax-0x2302e760],bh
  40f30e:	and    al,0x78
  40f310:	mov    ebx,0x8624cd8
  40f315:	pushf  
  40f316:	and    BYTE PTR [ecx+0x21bd9f55],cl
  40f31c:	ss mov ebx,0x59b26dcd
  40f322:	(bad)
  40f326:	pop    ecx
  40f327:	rcr    BYTE PTR [ebx-0x94d14dd],0x80
  40f32e:	in     al,0x63
  40f330:	inc    esi
  40f331:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f332:	call   0x98fbe217
  40f337:	jne    0x40f3b7
  40f339:	jecxz  0x40f3af
  40f33b:	or     al,0x75
  40f33d:	cli    
  40f33e:	push   cs
  40f33f:	xchg   BYTE PTR [esi+esi*2+0x1e],al
  40f343:	js     0x40f302
  40f345:	cmp    al,0x0
  40f347:	xchg   edx,eax
  40f348:	in     al,dx
  40f349:	test   BYTE PTR [ecx],bl
  40f34b:	iret   
  40f34c:	cmp    ecx,DWORD PTR [ebx]
  40f34e:	loope  0x40f3a8
  40f350:	fadd   DWORD PTR [edi]
  40f352:	and    BYTE PTR [ebx-0x7cfc0bf1],cl
  40f358:	pushf  
  40f359:	cld    
  40f35a:	repz dec esi
  40f35c:	xchg   bl,cl
  40f35e:	(bad)  
  40f35f:	shr    DWORD PTR [edx+0x7fd685ab],0x4
  40f366:	or     al,0xff
  40f368:	jb     0x40f3bd
  40f36a:	int    0xee
  40f36c:	cmp    bl,dl
  40f36e:	jo     0x40f317
  40f370:	cmp    ah,ch
  40f372:	push   ebp
  40f373:	pop    ss
  40f374:	sub    ebp,DWORD PTR [esi]
  40f376:	cmp    al,0xd4
  40f378:	es gs dec ecx
  40f37b:	clc    
  40f37c:	mov    ds:0x7bd28633,eax
  40f381:	fld    QWORD PTR ds:0xf55fe92e
  40f387:	pop    esi
  40f388:	xchg   esi,eax
  40f389:	stc    
  40f38a:	cwde   
  40f38b:	aas    
  40f38c:	clc    
  40f38d:	pop    ds
  40f38e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f38f:	and    DWORD PTR [edi-0x35],edx
  40f392:	lods   eax,DWORD PTR ds:[esi]
  40f393:	mov    eax,ds:0xc25a2843
  40f398:	jmp    0x40f3d0
  40f39a:	sbb    BYTE PTR [edx],0xb3
  40f39d:	cli    
  40f39e:	fnstenv ds:0x20c594ad
  40f3a4:	push   cs
  40f3a5:	std    
  40f3a6:	dec    edx
  40f3a7:	cmp    dl,cl
  40f3a9:	cmc    
  40f3aa:	xchg   edi,eax
  40f3ab:	shl    BYTE PTR [ecx-0x4bba1aff],1
  40f3b1:	add    al,0x71
  40f3b3:	cmp    ecx,DWORD PTR [eax+ecx*1-0x2dc10989]
  40f3ba:	pop    eax
  40f3bb:	and    BYTE PTR [ecx+0x58],ch
  40f3be:	ss repnz dec ebp
  40f3c1:	mov    al,0x5b
  40f3c3:	jbe    0x40f401
  40f3c5:	pop    ecx
  40f3c6:	inc    ecx
  40f3c7:	(bad)  
  40f3c8:	(bad)  
  40f3c9:	jb     0x40f3a2
  40f3cb:	mov    DWORD PTR [eax-0x5efbef9f],ebp
  40f3d1:	cs cmp al,bh
  40f3d4:	push   eax
  40f3d5:	dec    esp
  40f3d6:	sar    BYTE PTR [edx],1
  40f3d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3d9:	std    
  40f3da:	mov    dl,0x29
  40f3dc:	or     ebp,DWORD PTR [edx+0x6c]
  40f3df:	data16 sub al,0x82
  40f3e2:	(bad)  
  40f3e3:	cmp    bh,ch
  40f3e5:	jge    0x40f448
  40f3e7:	sbb    DWORD PTR [ecx],ecx
  40f3e9:	(bad)  [ecx-0x51]
  40f3ec:	or     DWORD PTR [ebx-0x1e],0xff8ce899
  40f3f3:	sbb    ch,BYTE PTR [ebx+0x5c]
  40f3f6:	aaa    
  40f3f7:	jmp    0x2537d0a2
  40f3fc:	ror    BYTE PTR [ecx+0xd],1
  40f3ff:	call   0x5e1c5f16
  40f404:	mov    al,0x60
  40f406:	not    BYTE PTR [ebx-0x4d]
  40f409:	daa    
  40f40a:	inc    edi
  40f40b:	xchg   edx,eax
  40f40c:	dec    eax
  40f40d:	les    ecx,FWORD PTR [edx-0x34]
  40f410:	(bad)  
  40f411:	aam    0xfd
  40f413:	dec    ecx
  40f414:	fs jnp 0x40f421
  40f417:	mov    bh,0xb5
  40f419:	retf   
  40f41a:	fcomp  DWORD PTR [edi+0x34]
  40f41d:	xchg   edx,eax
  40f41e:	xchg   edi,eax
  40f41f:	xor    eax,0xab9e8157
  40f424:	jmp    0x40f3c6
  40f426:	adc    BYTE PTR [edi-0x1afa0f9f],dl
  40f42c:	ret    
  40f42d:	ror    DWORD PTR [edi+ebx*2+0x1e],1
  40f431:	sub    BYTE PTR [ecx+0x5dcdafa6],ah
  40f437:	(bad)  
  40f438:	push   esi
  40f439:	pop    ebp
  40f43a:	add    DWORD PTR [esi+0x36193c6d],0xffffffe9
  40f441:	dec    ebp
  40f442:	adc    cl,BYTE PTR [ecx+0x71]
  40f445:	and    eax,0xd721e7f4
  40f44a:	sbb    DWORD PTR [ebx-0x5d],0x45
  40f44e:	adc    DWORD PTR [ebx],edx
  40f450:	jl     0x40f412
  40f452:	push   ebp
  40f453:	xchg   esi,eax
  40f454:	add    ebp,DWORD PTR [edx+edi*8]
  40f457:	stc    
  40f458:	repz sub DWORD PTR [edx-0x1ca4dd49],eax
  40f45f:	mov    ds:0x83b53752,al
  40f464:	cwde   
  40f465:	mov    bh,0x3e
  40f467:	adc    esp,ebx
  40f469:	(bad)  
  40f46a:	call   0x3306acc1
  40f46f:	xor    al,0x2
  40f471:	je     0x40f40b
  40f473:	ret    0x4cde
  40f476:	(bad)  
  40f477:	jne    0x40f44b
  40f479:	lods   eax,DWORD PTR ds:[esi]
  40f47a:	dec    esi
  40f47b:	fild   DWORD PTR [edi+0xd]
  40f47e:	add    al,0x6a
  40f480:	inc    DWORD PTR [ecx+eax*8]
  40f483:	mov    edi,0x26496fcf
  40f488:	jg     0x40f4e4
  40f48a:	inc    eax
  40f48b:	xchg   edx,eax
  40f48c:	test   DWORD PTR [ebx+edi*1],ebp
  40f48f:	add    DWORD PTR [edx-0x30110b66],0xfffffff4
  40f496:	sub    ch,ah
  40f498:	cld    
  40f499:	sbb    BYTE PTR ds:0x54d36316,ah
  40f49f:	(bad)  
  40f4a0:	pop    edx
  40f4a1:	mov    bl,0xb4
  40f4a3:	pop    ebx
  40f4a4:	and    DWORD PTR [esi-0x3fbdd955],ebp
  40f4aa:	cmp    esi,ebp
  40f4ac:	nop
  40f4ad:	enter  0xbaaf,0xbb
  40f4b1:	loopne 0x40f436
  40f4b3:	and    al,0x5
  40f4b5:	je     0x40f500
  40f4b7:	vprotb xmm7,[eax+0x521b1d22],0x44
  40f4c1:	add    ah,BYTE PTR [edi+0x39]
  40f4c4:	mov    esp,0x2f3bfcf8
  40f4c9:	push   eax
  40f4ca:	push   ebx
  40f4cb:	lods   al,BYTE PTR ds:[esi]
  40f4cc:	push   eax
  40f4cd:	sub    al,0x3f
  40f4cf:	rcl    DWORD PTR [eax+eiz*1-0x56],cl
  40f4d3:	retf   
  40f4d4:	push   edx
  40f4d5:	sbb    al,bl
  40f4d7:	dec    edi
  40f4d8:	mov    esi,ss
  40f4da:	mov    al,0xfc
  40f4dc:	adc    al,0x9f
  40f4de:	jbe    0x40f4c1
  40f4e0:	xchg   DWORD PTR [ebx+0x7f],edx
  40f4e3:	xchg   BYTE PTR [ecx-0x25],cl
  40f4e6:	xchg   edx,eax
  40f4e7:	fistp  QWORD PTR [ebp-0x40]
  40f4ea:	pop    ecx
  40f4eb:	xchg   DWORD PTR [eax+0x725984c4],esp
  40f4f1:	xchg   ebx,eax
  40f4f2:	int    0x31
  40f4f4:	push   es
  40f4f5:	xchg   ebx,eax
  40f4f6:	cs mov esp,0x3c8a2b0e
  40f4fc:	sub    esi,DWORD PTR [esi]
  40f4fe:	call   0x971cc77e
  40f503:	pop    ecx
  40f504:	cmp    ebp,DWORD PTR fs:[ecx-0x22db833a]
  40f50b:	push   ebx
  40f50c:	jg     0x40f58c
  40f50e:	xchg   esi,eax
  40f50f:	dec    ecx
  40f510:	out    0x9e,eax
  40f512:	lods   al,BYTE PTR ds:[esi]
  40f513:	adc    DWORD PTR [edi-0x16],0x34258ab1
  40f51a:	add    ch,al
  40f51c:	add    eax,0xd9c58363
  40f521:	loopne 0x40f4f7
  40f523:	je     0x40f517
  40f525:	int3   
  40f526:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f527:	dec    edx
  40f528:	inc    ebx
  40f529:	push   ebx
  40f52a:	add    edi,DWORD PTR ds:0x1731bd2b
  40f530:	and    ecx,DWORD PTR [ebp+esi*8-0x43]
  40f534:	hlt    
  40f535:	add    eax,esp
  40f537:	addr16 pop edi
  40f539:	xchg   ecx,eax
  40f53a:	mov    bl,0x95
  40f53c:	stos   DWORD PTR es:[edi],eax
  40f53d:	(bad)  
  40f53f:	ror    DWORD PTR [ebp-0x1d],0x3d
  40f543:	cmc    
  40f544:	mov    dl,0xb5
  40f546:	sbb    bl,al
  40f548:	mov    DWORD PTR [ebp-0x7dd87024],ebx
  40f54e:	add    ch,BYTE PTR [esi-0x39]
  40f551:	repz dec ebp
  40f553:	jmp    0x40f53e
  40f555:	ds cwde 
  40f557:	pop    esp
  40f558:	jl     0x40f5b3
  40f55a:	inc    ebp
  40f55b:	call   0x4f84:0xc0f0b31b
  40f562:	inc    ebp
  40f563:	inc    edi
  40f564:	pop    edi
  40f565:	push   ds
  40f566:	dec    esp
  40f567:	push   0x807025c3
  40f56c:	call   0x78b7:0x402734e3
  40f573:	ds xor eax,ecx
  40f576:	add    eax,0xeed6bb82
  40f57b:	push   edx
  40f57c:	cld    
  40f57d:	cmp    eax,0xb2fa8bec
  40f582:	push   0xffffffbc
  40f584:	aad    0x9e
  40f586:	xchg   ecx,eax
  40f587:	int3   
  40f588:	not    BYTE PTR [ebx+esi*1-0x1d]
  40f58c:	retf   
  40f58d:	xchg   esp,eax
  40f58e:	idiv   DWORD PTR [ebp+0x5f]
  40f591:	push   edx
  40f592:	in     al,dx
  40f593:	and    dh,bl
  40f595:	dec    ebx
  40f596:	retf   
  40f597:	mov    eax,DWORD PTR [eax-0x62222907]
  40f59d:	cld    
  40f59e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f59f:	std    
  40f5a0:	push   cs
  40f5a1:	sub    edx,edx
  40f5a3:	or     cl,BYTE PTR ss:[ebp-0x57]
  40f5a7:	iret   
  40f5a8:	pop    es
  40f5a9:	fwait
  40f5aa:	pop    esi
  40f5ab:	das    
  40f5ac:	scas   eax,DWORD PTR es:[edi]
  40f5ad:	loop   0x40f5f8
  40f5af:	in     eax,dx
  40f5b0:	outs   dx,BYTE PTR ds:[esi]
  40f5b1:	inc    eax
  40f5b2:	pop    di
  40f5b4:	pusha  
  40f5b5:	sub    DWORD PTR [edi-0xd],edx
  40f5b8:	jbe    0x40f545
  40f5ba:	mov    dh,0xcc
  40f5bc:	and    ecx,ebx
  40f5be:	mov    esp,0xea519f3
  40f5c3:	scas   eax,DWORD PTR es:[edi]
  40f5c4:	loopne 0x40f642
  40f5c6:	ins    DWORD PTR es:[edi],dx
  40f5c7:	aad    0x43
  40f5c9:	dec    esp
  40f5ca:	xor    dl,dl
  40f5cc:	out    dx,eax
  40f5cd:	cli    
  40f5ce:	dec    ebx
  40f5cf:	jmp    0x40f60f
  40f5d1:	adc    edi,ebp
  40f5d3:	jp     0x40f5fd
  40f5d5:	jnp    0x40f607
  40f5d7:	fcom   DWORD PTR [esi]
  40f5d9:	sub    al,BYTE PTR [ebp-0x19cb6d20]
  40f5df:	(bad)  
  40f5e0:	mov    ecx,0xf569260b
  40f5e5:	imul   BYTE PTR [edx-0x7c]
  40f5e8:	add    DWORD PTR [ecx],edi
  40f5ea:	hlt    
  40f5eb:	add    esi,DWORD PTR [ecx]
  40f5ed:	push   cs
  40f5ee:	pop    ecx
  40f5ef:	ss jne 0x40f5e8
  40f5f2:	add    DWORD PTR [edi+0x5be04edb],ecx
  40f5f8:	sbb    dl,BYTE PTR [edx+edx*1+0x70b7030]
  40f5ff:	pop    edi
  40f600:	lea    edx,[ecx+0x7373d7e9]
  40f606:	pushf  
  40f607:	xchg   BYTE PTR [ecx-0x12557188],dl
  40f60d:	fcmovnb st,st(1)
  40f60f:	push   0x5d
  40f611:	pop    eax
  40f612:	inc    edi
  40f613:	xchg   ebp,eax
  40f614:	daa    
  40f615:	jo     0x40f5aa
  40f617:	mov    eax,ds:0x3cd10580
  40f61c:	test   BYTE PTR [edx-0x73],0x72
  40f620:	(bad)  [ecx-0x5c]
  40f623:	jge    0x40f677
  40f625:	or     bh,BYTE PTR [eax]
  40f627:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f628:	jno    0x40f66f
  40f62a:	(bad)  
  40f62b:	fidivr DWORD PTR [ebx+0xe339243]
  40f631:	or     al,0xfd
  40f633:	push   eax
  40f634:	shr    DWORD PTR [ebp-0x8c18408],cl
  40f63a:	mul    BYTE PTR [esp+eax*4-0x2e]
  40f63e:	aaa    
  40f63f:	test   edx,0xe9a0f3a3
  40f645:	sub    edi,DWORD PTR [ebp+edx*8-0x227396e2]
  40f64c:	add    DWORD PTR [ebp-0x65d0b17f],ebp
  40f652:	fdiv   QWORD PTR [ebp-0x4b2642f]
  40f658:	lods   eax,DWORD PTR ds:[esi]
  40f659:	add    DWORD PTR [ecx-0x2db9bfd4],0xffffff9c
  40f660:	mov    dh,0xfc
  40f662:	std    
  40f663:	and    DWORD PTR [ecx+0x7f9679e0],edi
  40f669:	jb     0x40f678
  40f66b:	sti    
  40f66c:	and    DWORD PTR [ecx-0x2],edi
  40f66f:	fild   QWORD PTR [eax-0x41]
  40f672:	je     0x40f625
  40f674:	cs push ds
  40f676:	mov    bh,0x43
  40f678:	imul   ebx,DWORD PTR [ebx+0x5b66b370],0x15
  40f67f:	xchg   ecx,eax
  40f680:	in     eax,dx
  40f681:	test   esi,0xb3b0e8d5
  40f687:	sbb    eax,0x74840b2e
  40f68c:	in     eax,0x79
  40f68e:	mov    bh,bl
  40f690:	and    BYTE PTR [ebx],ah
  40f692:	test   BYTE PTR [esi-0x701fe084],0x9a
  40f699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f69a:	cs jmp 0x40f6b5
  40f69d:	in     eax,0x59
  40f69f:	add    eax,edi
  40f6a1:	jmp    0x411b79
  40f6a6:	mov    eax,DWORD PTR [ebp-0x38]
  40f6a9:	add    eax,DWORD PTR [ebp+0x8]
  40f6ac:	mov    DWORD PTR [ebp-0x18],eax
  40f6af:	mov    eax,DWORD PTR [ebp-0x1c]
  40f6b2:	test   eax,eax
  40f6b4:	je     0x411b02
  40f6ba:	mov    DWORD PTR [ebp-0x20],0x0
  40f6c1:	push   0x3
  40f6c3:	xor    edx,edx
  40f6c5:	pop    edx
  40f6c6:	add    edx,0x8
  40f6c9:	push   edx
  40f6ca:	pop    ecx
  40f6cb:	push   0x6
  40f6cd:	dec    ecx
  40f6ce:	pop    ebx
  40f6cf:	dec    ebx
  40f6d0:	xchg   ebx,ecx
  40f6d2:	sub    ebx,ecx
  40f6d4:	xchg   ebx,ecx
  40f6d6:	dec    ecx
  40f6d7:	mov    eax,DWORD PTR [ebp-0x1c]
  40f6da:	imul   eax,ecx
  40f6dd:	sub    esp,eax
  40f6df:	mov    DWORD PTR [ebp-0x20],esp
  40f6e2:	mov    eax,DWORD PTR [ebp-0x4]
  40f6e5:	xor    eax,esi
  40f6e7:	add    eax,edi
  40f6e9:	jmp    0x411adb
  40f6ee:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6f1:	mov    eax,DWORD PTR [ebp+0x8]
  40f6f4:	mov    edx,DWORD PTR [ebp+0x14]
  40f6f7:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40f6fb:	xor    ecx,esi
  40f6fd:	add    ecx,edi
  40f6ff:	xor    edx,edx
  40f701:	div    ecx
  40f703:	mov    ecx,DWORD PTR [ebp-0x4]
  40f706:	jmp    0x411aba
  40f70b:	outs   dx,BYTE PTR ds:[esi]
  40f70c:	lods   al,BYTE PTR ds:[esi]
  40f70d:	or     ch,al
  40f70f:	mov    cl,al
  40f711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f712:	or     ah,0x7d
  40f715:	push   0x559ac2f0
  40f71a:	call   0x5ce8:0x8383ae02
  40f721:	add    DWORD PTR [ebx-0x75fcc8ac],0xffffffa6
  40f728:	es ja  0x40f6d1
  40f72b:	jnp    0x40f6b1
  40f72d:	lea    ebp,[ebx+0x316faac1]
  40f733:	repnz add ch,ah
  40f736:	add    bh,BYTE PTR [ebx+0x75]
  40f739:	push   ss
  40f73a:	xor    eax,0x330641ee
  40f73f:	sbb    BYTE PTR [edi-0x2a],dh
  40f742:	or     eax,0x42945bf3
  40f747:	popa   
  40f748:	pop    eax
  40f749:	sbb    al,0xf3
  40f74b:	pop    ss
  40f74c:	xor    DWORD PTR [esi-0x3d81fae1],esp
  40f752:	add    esi,DWORD PTR [eax]
  40f754:	xlat   BYTE PTR ds:[ebx]
  40f755:	or     eax,0x5ce8c3b2
  40f75a:	sub    DWORD PTR [esi+0x19],0x14
  40f75e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f75f:	push   edi
  40f760:	and    eax,0xa9acd637
  40f765:	or     BYTE PTR [eax],al
  40f767:	je     0x40f784
  40f769:	in     al,0x7a
  40f76b:	sar    BYTE PTR [edi+0x5d92004c],0xe9
  40f772:	jns    0x40f7d3
  40f774:	and    BYTE PTR [eax],0xb5
  40f777:	out    0xb8,al
  40f779:	mov    esp,0xd66335f3
  40f77e:	xchg   edx,eax
  40f77f:	(bad)  [ebx]
  40f781:	sbb    al,0xf8
  40f783:	and    dl,BYTE PTR [esi-0x7]
  40f786:	pop    esp
  40f787:	jmp    0x3e489fb6
  40f78c:	int    0x5e
  40f78e:	cdq    
  40f78f:	das    
  40f790:	and    ah,BYTE PTR [esi]
  40f792:	pop    edi
  40f793:	out    dx,eax
  40f794:	call   0x112e06ce
  40f799:	int    0xc0
  40f79b:	nop
  40f79c:	gs pop ds
  40f79e:	dec    ebx
  40f79f:	(bad)  
  40f7a1:	rcr    BYTE PTR [edi+0x14b5d7df],1
  40f7a7:	inc    ebp
  40f7a8:	jmp    0x930e:0x73bfc6c8
  40f7af:	mov    esi,0x5817c2a6
  40f7b4:	cmc    
  40f7b5:	std    
  40f7b6:	dec    edi
  40f7b7:	jge    0x40f7c3
  40f7b9:	cmp    edi,DWORD PTR [ebp+ecx*4+0x1613194]
  40f7c0:	push   0x4158b93c
  40f7c5:	je     0x40f80d
  40f7c7:	dec    ebx
  40f7c8:	xchg   BYTE PTR [ebx],bh
  40f7ca:	cld    
  40f7cb:	test   al,0xc8
  40f7cd:	sub    edi,esp
  40f7cf:	and    eax,0xbe641960
  40f7d4:	adc    dl,BYTE PTR [ebp+eiz*4-0x2156e529]
  40f7db:	hlt    
  40f7dc:	fcomi  st,st(2)
  40f7de:	mov    dl,0xf0
  40f7e0:	push   ecx
  40f7e1:	mov    dl,0xeb
  40f7e3:	dec    esi
  40f7e4:	adc    al,0x4f
  40f7e6:	fcmovnb st,st(5)
  40f7e8:	inc    esi
  40f7e9:	add    ah,BYTE PTR [esp+edx*4]
  40f7ec:	gs lahf 
  40f7ee:	neg    DWORD PTR [eax+0x2c]
  40f7f1:	sub    ecx,DWORD PTR [ebx+0x169d6e41]
  40f7f7:	sbb    al,0xff
  40f7f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7fa:	push   ebp
  40f7fb:	mov    bl,BYTE PTR [ebp+eax*4+0x2c]
  40f7ff:	neg    DWORD PTR [ebx-0x11]
  40f802:	inc    edx
  40f803:	mov    ebx,0x19340d4a
  40f808:	retf   
  40f809:	sti    
  40f80a:	ret    0x26f9
  40f80d:	mov    ch,0xd4
  40f80f:	stos   DWORD PTR es:[edi],eax
  40f810:	push   edx
  40f811:	neg    DWORD PTR [ebp+0x3fe4c094]
  40f817:	out    dx,eax
  40f818:	ret    0x5bb1
  40f81b:	and    BYTE PTR [edx-0x67cde0e8],dh
  40f821:	cmp    al,cl
  40f823:	repz shl al,cl
  40f826:	ficomp DWORD PTR [ebx]
  40f828:	loopne 0x40f817
  40f82a:	push   ebp
  40f82b:	push   edx
  40f82c:	rol    al,0x29
  40f82f:	jle    0x40f80f
  40f831:	mov    ds:0x3ee694f1,al
  40f836:	stos   DWORD PTR es:[edi],eax
  40f837:	push   esp
  40f838:	mov    bh,0x74
  40f83a:	in     eax,dx
  40f83b:	push   ebp
  40f83c:	sbb    ebp,edi
  40f83e:	mov    ds:0xc6d6b20d,al
  40f843:	mov    bl,BYTE PTR [eax+0x1c]
  40f846:	cdq    
  40f847:	mov    ch,0x55
  40f849:	pop    esp
  40f84a:	das    
  40f84b:	inc    edi
  40f84c:	jp     0x40f8c6
  40f84e:	push   ds
  40f84f:	mov    edi,0x569c550e
  40f854:	xlat   BYTE PTR ds:[ebx]
  40f855:	add    ch,BYTE PTR [ebp-0x25415261]
  40f85b:	test   DWORD PTR [edi-0x71],esi
  40f85e:	stos   DWORD PTR es:[edi],eax
  40f85f:	ins    DWORD PTR es:[edi],dx
  40f860:	(bad)  [eax]
  40f862:	sbb    esi,esp
  40f864:	rcr    BYTE PTR ds:[eax],0x31
  40f868:	mov    DWORD PTR [esi+0x14],edx
  40f86b:	dec    ebx
  40f86c:	out    dx,al
  40f86d:	mov    al,0x56
  40f86f:	cdq    
  40f870:	stc    
  40f871:	cmp    esi,eax
  40f873:	push   eax
  40f874:	fsubr  st(0),st
  40f876:	mov    esi,0xcceaa5f4
  40f87b:	(bad)  
  40f87c:	in     al,0x62
  40f87e:	cs jge 0x40f8eb
  40f881:	sahf   
  40f882:	push   edi
  40f883:	dec    ebx
  40f884:	daa    
  40f885:	out    dx,eax
  40f886:	mov    eax,DWORD PTR [ebp-0x65]
  40f889:	lds    esp,FWORD PTR [ebp+0x101c7e25]
  40f88f:	icebp  
  40f890:	in     al,dx
  40f891:	add    esp,ecx
  40f893:	es out dx,eax
  40f895:	bound  eax,QWORD PTR [eax-0x2b]
  40f898:	into   
  40f899:	sub    cl,bl
  40f89b:	sbb    dh,al
  40f89d:	xor    BYTE PTR [eax],bh
  40f89f:	sbb    BYTE PTR [edi],bl
  40f8a1:	mov    ebp,0xf88c74e9
  40f8a6:	in     eax,0x95
  40f8a8:	xchg   esp,eax
  40f8a9:	jo     0x40f883
  40f8ab:	loopne 0x40f8fd
  40f8ad:	cmp    al,BYTE PTR [ebp+0x49]
  40f8b0:	cmp    al,0x82
  40f8b2:	enter  0xe63c,0xec
  40f8b6:	mov    ch,0x3f
  40f8b8:	adc    dh,BYTE PTR [ebx-0x3cac89fe]
  40f8be:	test   BYTE PTR [ebp+eiz*2-0x206b3d7e],ch
  40f8c5:	fadd   QWORD PTR [esi]
  40f8c7:	icebp  
  40f8c8:	scas   al,BYTE PTR es:[edi]
  40f8c9:	repz jnp 0x40f854
  40f8cc:	mov    cl,0x3
  40f8ce:	repnz add eax,DWORD PTR ds:0x60d609a
  40f8d5:	retf   
  40f8d6:	pop    ds
  40f8d7:	sub    al,0x3d
  40f8d9:	mov    WORD PTR [eax+eiz*4+0x52],ss
  40f8dd:	repz pop esi
  40f8df:	stc    
  40f8e0:	push   0x3778f673
  40f8e5:	or     al,0x9a
  40f8e7:	and    ah,BYTE PTR [ebx-0x6]
  40f8ea:	pusha  
  40f8eb:	std    
  40f8ec:	adc    BYTE PTR [edx+esi*4+0x6bc859d0],cl
  40f8f3:	retf   
  40f8f4:	and    eax,0x24aaad44
  40f8f9:	ins    DWORD PTR es:[edi],dx
  40f8fa:	stc    
  40f8fb:	test   DWORD PTR ds:0x6af8ef65,esp
  40f901:	nop
  40f902:	shl    DWORD PTR [esp+ebp*8+0x123249cb],cl
  40f909:	cmc    
  40f90a:	rcr    DWORD PTR [ebp+eax*2+0x7],0x5
  40f90f:	jno    0x40f919
  40f911:	inc    ecx
  40f912:	ins    BYTE PTR es:[edi],dx
  40f913:	xchg   ebx,eax
  40f914:	xchg   ebx,eax
  40f915:	sub    eax,0x46aa4a4a
  40f91a:	and    esp,DWORD PTR [eax]
  40f91c:	int3   
  40f91d:	xor    eax,0xffd6468e
  40f922:	push   es
  40f923:	cli    
  40f924:	std    
  40f925:	cli    
  40f926:	nop
  40f927:	xchg   edx,eax
  40f928:	jle    0x40f8c2
  40f92a:	pop    esp
  40f92b:	adc    edx,ecx
  40f92d:	sbb    edi,DWORD PTR [ebx+0x4588db8c]
  40f933:	pop    es
  40f934:	mov    ch,0xf6
  40f936:	xor    DWORD PTR [edx],esp
  40f938:	push   cs
  40f939:	daa    
  40f93a:	dec    edx
  40f93b:	mov    DWORD PTR [edi],ebp
  40f93d:	xlat   BYTE PTR ds:[ebx]
  40f93e:	std    
  40f93f:	mov    ds:0x6637f6e9,eax
  40f944:	jp     0x40f8e5
  40f946:	sbb    DWORD PTR [edi],ecx
  40f948:	sbb    DWORD PTR [ebx],ebx
  40f94a:	mov    ecx,0x786d13a1
  40f94f:	pop    eax
  40f950:	adc    al,0x13
  40f952:	jge    0x40f927
  40f954:	cmp    BYTE PTR [eax-0xc],bl
  40f957:	and    ebp,DWORD PTR [edx+0x3]
  40f95a:	adc    DWORD PTR [edx+ebp*1],ecx
  40f95d:	stos   DWORD PTR es:[edi],eax
  40f95e:	xchg   ebp,eax
  40f95f:	shl    DWORD PTR [esi+0x6b],0xc5
  40f963:	xor    BYTE PTR [edi-0x796d1b60],ch
  40f969:	dec    ecx
  40f96a:	ret    0xb035
  40f96d:	sub    edx,esp
  40f96f:	mov    es,WORD PTR [esi-0x5af37cee]
  40f975:	jg     0x40f9c2
  40f977:	loop   0x40f9a7
  40f979:	mov    ds:0x457fa7b7,eax
  40f97e:	nop
  40f97f:	mov    edi,0x3a03f858
  40f984:	cwde   
  40f985:	xchg   BYTE PTR [eax+0x38c18f8b],dh
  40f98b:	push   ss
  40f98c:	xor    eax,0xcd9f9a8
  40f991:	outs   dx,BYTE PTR ds:[esi]
  40f992:	nop
  40f993:	push   edx
  40f994:	fimul  WORD PTR [edi-0x3c310e1e]
  40f99a:	sbb    al,0xdf
  40f99c:	leave  
  40f99d:	(bad)  
  40f99e:	sahf   
  40f99f:	mov    cs,WORD PTR [ecx]
  40f9a1:	push   DWORD PTR [ebx+0x33]
  40f9a4:	(bad)  
  40f9a5:	repz test eax,0x7d1d30ab
  40f9ab:	adc    al,0xd0
  40f9ad:	iret   
  40f9ae:	mov    ds:0x6eae4847,eax
  40f9b3:	call   DWORD PTR [ebp+0x33f9c431]
  40f9b9:	repz mov bl,0xec
  40f9bc:	retf   0xad50
  40f9bf:	ret    0x7a9b
  40f9c2:	add    eax,0x3e04e6
  40f9c7:	xchg   ebx,eax
  40f9c8:	fwait
  40f9c9:	or     al,0xc0
  40f9cb:	and    dl,BYTE PTR [edx-0xba8535b]
  40f9d1:	addr16 add al,0xcd
  40f9d4:	pusha  
  40f9d5:	mov    ebx,0x4ac83a23
  40f9da:	xchg   ebx,eax
  40f9db:	xor    DWORD PTR [esi],esi
  40f9dd:	nop
  40f9de:	or     al,BYTE PTR [esi]
  40f9e0:	mov    bl,0x68
  40f9e2:	addr16 dec eax
  40f9e4:	pushf  
  40f9e5:	stos   BYTE PTR es:[edi],al
  40f9e6:	(bad)  
  40f9e7:	jmp    0x454b040
  40f9ec:	cmpps  xmm6,XMMWORD PTR [edi],0x27
  40f9f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9f1:	in     eax,dx
  40f9f2:	sbb    BYTE PTR [edx+0x32],dl
  40f9f5:	jne    0x40fa4d
  40f9f7:	cld    
  40f9f8:	mov    dh,0xfc
  40f9fa:	fisttp WORD PTR [edi]
  40f9fc:	ss popf 
  40f9fe:	shl    BYTE PTR ds:0x5ba712b8,cl
  40fa04:	xor    BYTE PTR [eax],ah
  40fa06:	mov    dh,0x96
  40fa08:	inc    esp
  40fa09:	sahf   
  40fa0a:	bnd jno 0x40f9ea
  40fa0d:	fnstsw WORD PTR ds:0x9ed8d5fb
  40fa13:	mov    ebx,0x2085ca5b
  40fa18:	jmp    0x40f9a5
  40fa1a:	loope  0x40fa7f
  40fa1c:	std    
  40fa1d:	iret   
  40fa1e:	adc    BYTE PTR [ebx+0x3e],0xe9
  40fa22:	or     dl,BYTE PTR [ebx+0x7a94648f]
  40fa28:	or     edx,DWORD PTR es:[edi+esi*1+0x1b]
  40fa2d:	(bad)  
  40fa2e:	test   BYTE PTR [ecx+edx*4-0x55],ah
  40fa32:	cdq    
  40fa33:	adc    cl,BYTE PTR [edi]
  40fa35:	std    
  40fa36:	aam    0xb8
  40fa38:	xor    al,0xae
  40fa3a:	imul   esp,eax,0xfffffff4
  40fa3d:	mov    cl,0xc3
  40fa3f:	sbb    dh,dl
  40fa41:	pop    ecx
  40fa42:	addr16 mov ebp,0x4eecd615
  40fa48:	add    dh,BYTE PTR [edx+0x79717053]
  40fa4e:	mov    ebx,0x86d22a3c
  40fa53:	js     0x40fa62
  40fa55:	sbb    dl,BYTE PTR [edx-0x6e79ba2a]
  40fa5b:	out    0x79,eax
  40fa5d:	ror    eax,0xfe
  40fa60:	enter  0x1901,0xc9
  40fa64:	js     0x40fa74
  40fa66:	(bad)  
  40fa67:	mov    ch,0x3f
  40fa69:	jecxz  0x40faaf
  40fa6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa6c:	mov    ch,0x1e
  40fa6e:	pop    edi
  40fa6f:	(bad)  
  40fa71:	mov    WORD PTR [edx+0x637d1293],?
  40fa77:	loopne 0x40fa5f
  40fa79:	popa   
  40fa7a:	adc    edx,ecx
  40fa7c:	and    ch,0x1
  40fa7f:	xor    DWORD PTR [edi-0x53],eax
  40fa82:	add    eax,0x15b9f817
  40fa87:	add    eax,0x614bc99
  40fa8c:	in     al,dx
  40fa8d:	iret   
  40fa8e:	sbb    al,0x6a
  40fa90:	push   es
  40fa91:	xchg   esp,eax
  40fa92:	iret   
  40fa93:	and    eax,0x702270ad
  40fa98:	std    
  40fa99:	enter  0xfe49,0xa3
  40fa9d:	cmp    esi,ebx
  40fa9f:	pusha  
  40faa0:	adc    eax,0xeda3e0d2
  40faa5:	sbb    DWORD PTR [ebp+ebx*8+0xd3988c3],esi
  40faac:	je     0x40fa76
  40faae:	jle    0x40fa9d
  40fab0:	lahf   
  40fab1:	adc    al,0x99
  40fab3:	inc    esp
  40fab4:	push   es
  40fab5:	lods   al,BYTE PTR ds:[esi]
  40fab6:	mov    al,bh
  40fab8:	mov    ebx,0x7751216f
  40fabd:	and    edi,edi
  40fabf:	jno    0x40faee
  40fac1:	pop    edx
  40fac2:	jns    0x40fa97
  40fac4:	push   esi
  40fac5:	xchg   esp,esp
  40fac7:	call   0x5966c081
  40facc:	mov    DWORD PTR [edi-0x60],esp
  40facf:	or     bh,BYTE PTR [ebp+0x20]
  40fad2:	jmp    0x5f8ca8c5
  40fad7:	sbb    ebx,DWORD PTR [edx-0x6615b05b]
  40fadd:	outs   dx,BYTE PTR ds:[esi]
  40fade:	loope  0x40fb29
  40fae0:	int    0xb2
  40fae2:	adc    BYTE PTR [ecx],al
  40fae4:	mov    ch,0xfa
  40fae6:	shl    DWORD PTR [esp+eax*1+0x388a45ec],cl
  40faed:	jno    0x40fab5
  40faef:	mov    edi,0x68c94099
  40faf4:	cdq    
  40faf5:	add    ebx,eax
  40faf7:	xchg   BYTE PTR [ebx-0x3629e891],dh
  40fafd:	in     al,dx
  40fafe:	shl    ebp,cl
  40fb00:	adc    ecx,esp
  40fb02:	mov    ah,0x5
  40fb04:	xlat   BYTE PTR ds:[ebx]
  40fb05:	hlt    
  40fb06:	pop    eax
  40fb07:	std    
  40fb08:	pop    ecx
  40fb09:	ss clc 
  40fb0b:	inc    ebx
  40fb0c:	cs daa 
  40fb0e:	(bad)  
  40fb0f:	popa   
  40fb10:	mov    edi,0x3463a10f
  40fb15:	adc    DWORD PTR [ebx+0x2],ebx
  40fb18:	test   DWORD PTR [eax+0x2],esp
  40fb1b:	(bad)  
  40fb1d:	ds inc ebx
  40fb1f:	cli    
  40fb20:	pop    edx
  40fb21:	dec    eax
  40fb22:	loopne 0x40fb62
  40fb24:	pop    es
  40fb25:	popf   
  40fb26:	addr16 inc ebx
  40fb28:	in     eax,dx
  40fb29:	add    al,0x2d
  40fb2c:	fisub  DWORD PTR [eax+eiz*2]
  40fb2f:	or     BYTE PTR [esi+0xd],cl
  40fb32:	test   DWORD PTR [edi+0x58],0x575326f
  40fb39:	lahf   
  40fb3a:	inc    edx
  40fb3b:	push   cs
  40fb3c:	fld    TBYTE PTR [ebx-0x51]
  40fb3f:	gs xchg esp,eax
  40fb41:	sbb    eax,0x1043fd13
  40fb46:	outs   dx,BYTE PTR ds:[esi]
  40fb47:	add    DWORD PTR [edx+edi*2-0x3795575],esi
  40fb4e:	fnstcw WORD PTR [eax-0x34ed606d]
  40fb54:	inc    edi
  40fb55:	arpl   WORD PTR [esp+edx*4+0x2b32c53],di
  40fb5c:	js     0x40fb05
  40fb5e:	mov    ebx,0xfac61c16
  40fb63:	popf   
  40fb64:	push   ecx
  40fb65:	fnstenv [eax+0x3d]
  40fb68:	jge    0x40fb4a
  40fb6a:	ins    DWORD PTR es:[edi],dx
  40fb6b:	pop    ebp
  40fb6c:	pusha  
  40fb6d:	jmp    0x40fb01
  40fb6f:	fstp   TBYTE PTR [edi-0x2a]
  40fb72:	mov    DWORD PTR [eax-0x60a428ce],ebp
  40fb78:	mov    bh,0x97
  40fb7a:	dec    edi
  40fb7b:	xchg   BYTE PTR [esi+esi*2+0x361222ee],ah
  40fb82:	loop   0x40fb0c
  40fb84:	leave  
  40fb85:	adc    al,BYTE PTR [ecx+0x7a]
  40fb88:	int    0x18
  40fb8a:	mov    al,ds:0xfd5178c0
  40fb8f:	inc    edi
  40fb90:	popa   
  40fb91:	fxch   st(2)
  40fb93:	cmc    
  40fb94:	sbb    eax,0xecc86483
  40fb99:	and    cl,ch
  40fb9b:	pop    ds
  40fb9c:	loope  0x40fb43
  40fb9e:	adc    BYTE PTR [esi+0x6a],al
  40fba1:	ins    BYTE PTR es:[edi],dx
  40fba2:	dec    esp
  40fba3:	pop    ss
  40fba4:	mov    dh,0xe0
  40fba6:	sar    DWORD PTR [ebp+0x30],cl
  40fba9:	pusha  
  40fbaa:	mov    al,0x36
  40fbac:	inc    edi
  40fbad:	sub    al,0x98
  40fbaf:	pop    esp
  40fbb0:	(bad)  
  40fbb1:	imul   esi,DWORD PTR [ebx+0x28def68c],0xffffffd2
  40fbb8:	mov    dl,0x8b
  40fbba:	mov    ecx,0x3623f44b
  40fbbf:	sub    eax,0xfa0571db
  40fbc4:	lock stos BYTE PTR es:[edi],al
  40fbc6:	mov    ebp,0x9380332c
  40fbcb:	lea    ecx,[esi+0x1dae0cef]
  40fbd1:	adc    ebp,DWORD PTR [eax]
  40fbd3:	add    bl,BYTE PTR [ebp+0x3622b5b3]
  40fbd9:	mov    bl,0xcf
  40fbdb:	jl     0x40fc53
  40fbdd:	imul   esi,DWORD PTR ds:0xa09f745c,0xffffffbc
  40fbe4:	xchg   BYTE PTR [ecx-0x41],bl
  40fbe7:	xor    ebp,DWORD PTR [esi+0xf41e33a]
  40fbed:	xor    dh,BYTE PTR [edi+0x637365f8]
  40fbf3:	imul   edi,DWORD PTR [ebx+0x3b7836a8],0xffffffa3
  40fbfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbfb:	mov    al,ds:0xd31d205f
  40fc00:	mov    eax,0xba77d23b
  40fc05:	cmp    eax,0xbe73735b
  40fc0a:	pop    ss
  40fc0b:	inc    edi
  40fc0c:	or     BYTE PTR [eax-0x2fa277b9],0x38
  40fc13:	push   ebp
  40fc14:	push   es
  40fc15:	neg    BYTE PTR [ecx+0x3e22808a]
  40fc1b:	pop    ebp
  40fc1c:	sub    bl,BYTE PTR [ebx]
  40fc1e:	ret    0xc5c2
  40fc21:	hlt    
  40fc22:	add    eax,0x3fdb3314
  40fc27:	imul   edi,ebp,0xffffff9b
  40fc2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc2b:	xor    ecx,DWORD PTR [eax-0x78]
  40fc2e:	fcmovu st,st(0)
  40fc30:	pop    eax
  40fc31:	std    
  40fc32:	push   esp
  40fc33:	pop    ds
  40fc34:	mov    ch,0x31
  40fc36:	jo     0x40fc79
  40fc38:	jb     0x40fc0b
  40fc3a:	or     bl,BYTE PTR [esi+0x518b4a66]
  40fc40:	sti    
  40fc41:	(bad)  
  40fc43:	int3   
  40fc44:	int3   
  40fc45:	jg     0x40fbe2
  40fc47:	cdq    
  40fc48:	mov    ebx,edx
  40fc4a:	or     al,0x9a
  40fc4c:	je     0x40fbff
  40fc4e:	retf   
  40fc4f:	pop    ecx
  40fc50:	adc    eax,0x5dd8655b
  40fc55:	aad    0xa9
  40fc57:	(bad)  
  40fc58:	mov    edi,0xe9d22fc9
  40fc5d:	jl     0x40fc03
  40fc5f:	adc    ebx,0x1d7ad0d7
  40fc65:	std    
  40fc66:	inc    esp
  40fc67:	stos   DWORD PTR es:[edi],eax
  40fc68:	gs dec esi
  40fc6a:	pop    esi
  40fc6b:	retf   0x239c
  40fc6e:	idiv   bl
  40fc70:	pop    es
  40fc71:	pushf  
  40fc72:	dec    ebx
  40fc73:	xchg   edi,eax
  40fc74:	(bad)  
  40fc76:	enter  0xcbf2,0xdd
  40fc7a:	add    cl,al
  40fc7c:	dec    eax
  40fc7d:	cmp    eax,ecx
  40fc7f:	mov    esp,0x67430cbe
  40fc84:	push   ds
  40fc85:	inc    edi
  40fc86:	out    dx,al
  40fc87:	dec    ebp
  40fc88:	sbb    DWORD PTR [ecx],esp
  40fc8a:	gs mov ebp,0xd07565e4
  40fc90:	add    eax,0x912bb2fc
  40fc95:	imul   ebx,DWORD PTR [edx-0x26839028],0xffffffa7
  40fc9c:	mov    eax,ds:0xf61cf299
  40fca1:	add    al,0x35
  40fca3:	out    dx,al
  40fca4:	xchg   esp,eax
  40fca5:	mul    BYTE PTR [esi-0x7a]
  40fca8:	cwde   
  40fca9:	pop    ss
  40fcaa:	add    eax,0x41818be2
  40fcaf:	sbb    cl,cl
  40fcb1:	js     0x40fce1
  40fcb3:	es push es
  40fcb5:	jmp    0x1a52:0x3ca9a5a9
  40fcbc:	cs pop eax
  40fcbe:	dec    edx
  40fcbf:	jle    0x40fd01
  40fcc1:	dec    edx
  40fcc2:	or     al,0xe8
  40fcc4:	add    esi,DWORD PTR [edx-0x1c6d026a]
  40fcca:	clc    
  40fccb:	mov    ah,0x19
  40fccd:	add    esp,DWORD PTR [edx]
  40fccf:	mov    edi,0x30698087
  40fcd4:	jl     0x40fd2a
  40fcd6:	cmc    
  40fcd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcd8:	xchg   edi,eax
  40fcd9:	(bad)  
  40fcdb:	cmp    ecx,edi
  40fcdd:	leave  
  40fcde:	xor    dh,BYTE PTR [esi-0xb02348d]
  40fce4:	dec    esp
  40fce5:	mov    esp,DWORD PTR [ebp+0x495198ca]
  40fceb:	lahf   
  40fcec:	cmp    ah,BYTE PTR [ecx]
  40fcee:	or     dl,BYTE PTR ds:0x204be2d2
  40fcf4:	pop    ss
  40fcf5:	rcr    DWORD PTR [ecx+0x7d485112],cl
  40fcfb:	mov    esi,0xe19647af
  40fd00:	sahf   
  40fd01:	daa    
  40fd02:	inc    ebp
  40fd03:	aaa    
  40fd04:	jb     0x40fd14
  40fd06:	cdq    
  40fd07:	and    al,0x2f
  40fd09:	push   0x47d9f772
  40fd0e:	xchg   ebx,eax
  40fd0f:	rol    BYTE PTR [ebp+0x7a],1
  40fd12:	scas   eax,DWORD PTR es:[edi]
  40fd13:	sbb    DWORD PTR [ebx+0x28],edi
  40fd16:	sti    
  40fd17:	ins    DWORD PTR es:[edi],dx
  40fd18:	dec    eax
  40fd19:	dec    esi
  40fd1a:	push   esi
  40fd1b:	jo     0x40fcda
  40fd1d:	mov    ecx,0x73306756
  40fd22:	mov    eax,0x848a5bf4
  40fd27:	std    
  40fd28:	stos   BYTE PTR es:[edi],al
  40fd29:	sub    al,0xa7
  40fd2b:	mov    ds:0x875751d5,eax
  40fd30:	aaa    
  40fd31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd32:	push   esi
  40fd33:	ins    BYTE PTR es:[edi],dx
  40fd34:	int3   
  40fd35:	or     edx,DWORD PTR [eax+0x77]
  40fd38:	and    eax,0xe227c2e7
  40fd3d:	dec    edi
  40fd3e:	xor    DWORD PTR gs:[ebp-0x37eaa282],edx
  40fd45:	sbb    DWORD PTR ds:0x1e62a041,eax
  40fd4b:	out    dx,al
  40fd4c:	or     al,0x61
  40fd4e:	lods   al,BYTE PTR ds:[esi]
  40fd4f:	test   ah,ah
  40fd51:	je     0x40fd6c
  40fd53:	loopne 0x40fda6
  40fd55:	mov    esi,DWORD PTR ds:0x2a1856d
  40fd5b:	adc    DWORD PTR [eax-0x20],0x3a
  40fd5f:	or     al,0x18
  40fd61:	xchg   edi,eax
  40fd62:	push   esi
  40fd63:	mov    gs,WORD PTR [ebp+ecx*4+0x63d0e301]
  40fd6a:	out    0xf5,eax
  40fd6c:	add    BYTE PTR [edx+eiz*2+0x46],bl
  40fd70:	inc    ebp
  40fd71:	sbb    dh,BYTE PTR [edx+0x25]
  40fd74:	pop    ds
  40fd75:	pop    es
  40fd76:	fsubr  DWORD PTR ds:0x5a8ea68f
  40fd7c:	adc    al,0xa1
  40fd7e:	test   al,ah
  40fd80:	gs call 0x54805f5e
  40fd86:	xchg   bl,ah
  40fd88:	out    0xdb,eax
  40fd8a:	sub    BYTE PTR [eax-0x27c761bc],ch
  40fd90:	dec    ecx
  40fd91:	outs   dx,DWORD PTR ds:[esi]
  40fd92:	jmp    0x40fda7
  40fd94:	out    0xcd,eax
  40fd96:	sub    al,0xb
  40fd98:	pop    esp
  40fd99:	sti    
  40fd9a:	dec    esp
  40fd9b:	pop    esp
  40fd9c:	cmp    eax,edi
  40fd9e:	mov    ah,0x8b
  40fda0:	jp     0x40fdd6
  40fda2:	test   eax,0xeb315bf
  40fda7:	je     0x40fd5b
  40fda9:	inc    eax
  40fdaa:	cmp    eax,0x5d0c4e22
  40fdaf:	loop   0x40fd96
  40fdb1:	pop    ebp
  40fdb2:	sbb    bl,BYTE PTR [ebp+0x79]
  40fdb5:	test   BYTE PTR [eax-0x39],al
  40fdb8:	dec    ebx
  40fdb9:	addr16 push es
  40fdbb:	sub    esi,edi
  40fdbd:	das    
  40fdbe:	sub    ebx,DWORD PTR [edx-0x660979f3]
  40fdc4:	xchg   DWORD PTR [edi],esi
  40fdc6:	and    eax,0xf45fc58d
  40fdcb:	fcom   QWORD PTR [ecx-0x2b]
  40fdce:	push   esp
  40fdcf:	stos   DWORD PTR es:[edi],eax
  40fdd0:	fbld   TBYTE PTR [ebx+esi*2-0x3088edf4]
  40fdd7:	popa   
  40fdd8:	(bad)  
  40fdda:	inc    ebp
  40fddb:	retf   0x29a0
  40fdde:	mov    ch,0xa5
  40fde0:	ja     0x40fe55
  40fde2:	mov    ch,0x42
  40fde4:	dec    ecx
  40fde5:	lahf   
  40fde6:	stc    
  40fde7:	push   edx
  40fde8:	mov    ds:0xc4781f96,al
  40fded:	clc    
  40fdee:	or     BYTE PTR [ecx+edx*8],dl
  40fdf1:	pop    es
  40fdf2:	inc    ebx
  40fdf3:	shl    cl,0x78
  40fdf6:	xchg   ebx,eax
  40fdf7:	push   edx
  40fdf8:	mov    cl,0xcd
  40fdfa:	je     0x40fe1a
  40fdfc:	adc    al,0x48
  40fdfe:	sar    bl,1
  40fe00:	cmc    
  40fe01:	sbb    ecx,DWORD PTR [ebp-0x73]
  40fe04:	popf   
  40fe05:	mov    eax,ds:0x5c4c3555
  40fe0a:	xchg   ebx,eax
  40fe0b:	sbb    edi,DWORD PTR [ecx+0x23f770d4]
  40fe11:	mov    es,WORD PTR [edi+0x25]
  40fe14:	add    esp,ebx
  40fe16:	shr    DWORD PTR [edi+0x25],cl
  40fe19:	push   DWORD PTR [eax-0x5d56961a]
  40fe1f:	mov    eax,0xc616d8a2
  40fe24:	retf   
  40fe25:	mov    ds:0x228754cf,eax
  40fe2a:	ins    BYTE PTR es:[edi],dx
  40fe2b:	pop    ecx
  40fe2c:	mov    ch,0x57
  40fe2e:	call   0x7ea4:0x2f6ba979
  40fe35:	add    BYTE PTR [ebp+0x7cfb97b9],dl
  40fe3b:	clc    
  40fe3c:	dec    edi
  40fe3d:	dec    esi
  40fe3e:	and    BYTE PTR [esi+0x2b],ah
  40fe41:	ja     0x40fe05
  40fe43:	sbb    eax,0x78baa18f
  40fe48:	xor    eax,0x4e67a201
  40fe4e:	or     BYTE PTR fs:[edx+0x57e60c43],ah
  40fe55:	cmp    cl,ah
  40fe57:	pop    edi
  40fe58:	retf   
  40fe59:	xchg   esi,eax
  40fe5a:	cli    
  40fe5b:	outs   dx,BYTE PTR ds:[esi]
  40fe5c:	sub    al,0xe2
  40fe5e:	in     al,0xb9
  40fe60:	data16 mov ch,0x9f
  40fe63:	jns    0x40fe7a
  40fe65:	sbb    DWORD PTR [esi],eax
  40fe67:	cmp    DWORD PTR [eax-0x37],ecx
  40fe6a:	mov    esp,0xbf34fe24
  40fe6f:	sbb    BYTE PTR [ecx+0x2d],dl
  40fe72:	stos   BYTE PTR es:[edi],al
  40fe73:	sub    al,0xe2
  40fe75:	ds loop 0x40fe57
  40fe78:	shl    DWORD PTR ds:0x1f5bbf65,cl
  40fe7e:	stos   DWORD PTR es:[edi],eax
  40fe7f:	pusha  
  40fe80:	aam    0xa5
  40fe82:	inc    eax
  40fe83:	lods   al,BYTE PTR ds:[esi]
  40fe84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe85:	popf   
  40fe86:	push   es
  40fe87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe88:	stc    
  40fe89:	or     edi,esp
  40fe8b:	popa   
  40fe8c:	pop    ebp
  40fe8d:	and    BYTE PTR [edx+0x64],0x70
  40fe91:	outs   dx,DWORD PTR ds:[esi]
  40fe92:	mov    ch,0x4f
  40fe94:	repnz adc al,0xff
  40fe97:	jmp    0x19a73119
  40fe9c:	scas   al,BYTE PTR es:[edi]
  40fe9d:	inc    ebp
  40fe9e:	test   BYTE PTR [edi],bl
  40fea0:	mov    ebp,0x76447afa
  40fea5:	call   0xe26c4290
  40feaa:	repz or dh,BYTE PTR [edx-0x31372b27]
  40feb1:	pop    edx
  40feb2:	mov    bh,0x18
  40feb4:	pusha  
  40feb5:	mov    DWORD PTR [edx],ebp
  40feb7:	adc    BYTE PTR [edx+0x40],al
  40feba:	and    dh,BYTE PTR [ebx-0x66]
  40febd:	loop   0x40fe9e
  40febf:	cli    
  40fec0:	in     eax,0xd5
  40fec2:	push   0xffffffe9
  40fec4:	in     eax,0x30
  40fec6:	jmp    ecx
  40fec8:	pop    edx
  40fec9:	popf   
  40feca:	jmp    0x5402:0x9a1a70d1
  40fed1:	mov    dl,0x7d
  40fed3:	loopne 0x40ff37
  40fed5:	inc    ebp
  40fed6:	stos   DWORD PTR es:[edi],eax
  40fed7:	and    DWORD PTR [ecx+0x3211247f],ebx
  40fedd:	or     DWORD PTR [eax-0x7e],edx
  40fee0:	inc    ecx
  40fee1:	xchg   esi,eax
  40fee2:	fwait
  40fee3:	cmp    ch,BYTE PTR [edi+0x2d1b543f]
  40fee9:	inc    edi
  40feea:	lods   al,BYTE PTR ds:[esi]
  40feeb:	sar    DWORD PTR [edx+0x69],cl
  40feee:	or     DWORD PTR [eax],eax
  40fef0:	push   eax
  40fef1:	aas    
  40fef2:	or     dh,dl
  40fef4:	scas   eax,DWORD PTR es:[edi]
  40fef5:	push   0x975339fe
  40fefa:	or     BYTE PTR [eax-0xbdb9e9b],cl
  40ff00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff01:	sub    eax,0x8b70af82
  40ff06:	sbb    DWORD PTR [ecx-0x646c9e7a],ebp
  40ff0c:	mov    cl,BYTE PTR [edx-0x58497892]
  40ff12:	fbld   TBYTE PTR [ecx+0x73]
  40ff15:	inc    esi
  40ff16:	dec    edi
  40ff17:	jp     0x40fedd
  40ff19:	retw   
  40ff1b:	push   eax
  40ff1c:	xor    ebp,esi
  40ff1e:	or     ah,bh
  40ff20:	push   ebp
  40ff21:	adc    al,0x52
  40ff23:	fisttp DWORD PTR [edi+0x1d]
  40ff26:	sbb    eax,0x10d58db4
  40ff2b:	dec    edx
  40ff2c:	test   BYTE PTR [ecx+0x53],dh
  40ff2f:	push   0x48a97684
  40ff34:	loopne 0x40fef6
  40ff36:	mov    al,ds:0xf33252ea
  40ff3b:	or     al,0xc2
  40ff3d:	jge    0x40ffb8
  40ff3f:	popf   
  40ff40:	push   ds
  40ff41:	push   0xffffffc2
  40ff43:	dec    eax
  40ff44:	(bad)  ds:0x7244eea
  40ff4a:	fwait
  40ff4b:	cmp    eax,0xcef3c87f
  40ff50:	pop    DWORD PTR [eax]
  40ff52:	aas    
  40ff53:	pop    eax
  40ff54:	call   0xb732:0x9ce84894
  40ff5b:	adc    ebx,DWORD PTR ds:0xd4def646
  40ff61:	out    0x95,eax
  40ff63:	mov    eax,0xad6b49af
  40ff68:	xlat   BYTE PTR ds:[ebx]
  40ff69:	call   0x122f6600
  40ff6e:	shl    BYTE PTR [edi+esi*4],0x95
  40ff72:	mov    ah,0xe4
  40ff74:	into   
  40ff75:	popa   
  40ff76:	jb     0x40ff96
  40ff78:	sub    BYTE PTR [ecx],dh
  40ff7a:	cld    
  40ff7b:	enter  0x32fb,0x38
  40ff7f:	add    al,0x4d
  40ff81:	dec    esi
  40ff82:	iret   
  40ff83:	and    BYTE PTR [esi],0xf
  40ff86:	pop    ss
  40ff87:	or     BYTE PTR [edi],bl
  40ff89:	jne    0x40ff47
  40ff8b:	int3   
  40ff8c:	jns    0x40fff1
  40ff8e:	xchg   ebx,eax
  40ff8f:	outs   dx,DWORD PTR ds:[esi]
  40ff90:	and    DWORD PTR [ebx],0xcded1fc2
  40ff96:	shr    DWORD PTR [edi+0x75],cl
  40ff99:	jl     0x40ff5c
  40ff9b:	jno    0x40ff89
  40ff9d:	mov    ebp,0x525ca99e
  40ffa2:	cld    
  40ffa3:	jmp    0xbcd54b89
  40ffa8:	mov    ah,0xb2
  40ffaa:	dec    edi
  40ffab:	jae    0x40ff3d
  40ffad:	bound  esp,QWORD PTR [ebx]
  40ffaf:	xor    eax,0xb387fe71
  40ffb4:	sbb    eax,0x8f6ad551
  40ffb9:	fld    QWORD PTR [edi+edi*8]
  40ffbc:	psubw  mm6,mm1
  40ffbf:	sbb    DWORD PTR ds:0x1d52a80a,0xca945fe4
  40ffc9:	push   ebp
  40ffca:	pop    esi
  40ffcb:	inc    ebx
  40ffcc:	sub    ecx,DWORD PTR [edi]
  40ffce:	push   esp
  40ffcf:	rcl    BYTE PTR [ebp+0x76],cl
  40ffd2:	fmul   DWORD PTR [ecx]
  40ffd4:	inc    ebx
  40ffd5:	lahf   
  40ffd6:	ret    
  40ffd7:	xor    ah,BYTE PTR [eax+0x28]
  40ffda:	mov    al,ds:0x70f357c5
  40ffdf:	mov    al,ds:0xaf4660b4
  40ffe4:	sub    BYTE PTR [ecx+0x4061ea6b],cl
  40ffea:	xor    eax,0x211f2971
  40ffef:	ss stc 
  40fff1:	bound  eax,QWORD PTR [esi]
  40fff3:	dec    ebp
  40fff4:	dec    DWORD PTR [edi+ebx*1-0x71]
  40fff8:	in     eax,0xa7
  40fffa:	xor    DWORD PTR [eax-0x52],edi
  40fffd:	es iret 
  40ffff:	bound  esi,QWORD PTR ds:0xeef0e8b
  410005:	and    DWORD PTR [eax-0x44c7d5cf],ebx
  41000b:	sub    ebp,DWORD PTR [eax]
  41000d:	and    BYTE PTR [edi+0x4f0cb468],cl
  410013:	(bad)  
  410014:	mov    ds:0x4d69bc74,al
  410019:	xor    DWORD PTR [edi+edx*1],esp
  41001c:	xchg   BYTE PTR [edi+0x9],dl
  41001f:	fdiv   st,st(4)
  410021:	push   ecx
  410022:	lahf   
  410023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410024:	cmp    DWORD PTR es:[edx-0x3d2bddd6],0x4ee34d27
  41002f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410030:	outs   dx,BYTE PTR ds:[esi]
  410031:	gs mov edx,0x22f8186
  410037:	sub    DWORD PTR [edx-0x27],ebx
  41003a:	mov    al,ds:0x91eb9e32
  41003f:	rcr    cl,1
  410041:	jp     0x410013
  410043:	push   esp
  410044:	xor    DWORD PTR [edx+0x2641d25f],0xffffff8b
  41004b:	jmp    0x410039
  41004d:	addr16 retf 0x3075
  410051:	or     DWORD PTR ds:[ebx],ebx
  410054:	cmp    ch,BYTE PTR [eax+esi*1+0x5eab93d2]
  41005b:	jp     0x410075
  41005d:	(bad)  [edi-0x39]
  410060:	dec    eax
  410061:	xor    DWORD PTR [edi-0x6d],esi
  410064:	cli    
  410065:	mov    DWORD PTR [ebx-0xd12633f],0xb6ee1bed
  41006f:	xchg   edx,eax
  410070:	scas   al,BYTE PTR es:[edi]
  410071:	mov    dh,0x5d
  410073:	popa   
  410074:	mov    al,0xa2
  410076:	push   edx
  410077:	outs   dx,DWORD PTR ds:[esi]
  410078:	cmp    al,0xbc
  41007a:	pop    es
  41007b:	cmp    eax,0x1a428df1
  410080:	mov    dh,0x6
  410082:	stos   BYTE PTR es:[edi],al
  410083:	or     BYTE PTR [ecx],dl
  410085:	jl     0x4100a4
  410087:	in     eax,dx
  410088:	mov    ds:0x23e531e3,eax
  41008d:	int    0x93
  41008f:	push   edx
  410090:	xor    bl,BYTE PTR ds:0x2901d821
  410096:	xchg   DWORD PTR [ebx+0x2d],ebp
  410099:	test   ch,ch
  41009b:	push   0xd
  41009d:	sbb    ah,BYTE PTR [edx+0x4f99b138]
  4100a3:	je     0x41011d
  4100a5:	outs   dx,BYTE PTR ds:[esi]
  4100a6:	push   0x4e
  4100a8:	outs   dx,DWORD PTR ds:[esi]
  4100a9:	cdq    
  4100aa:	xchg   esi,eax
  4100ab:	add    ebp,edi
  4100ad:	cld    
  4100ae:	(bad)  
  4100af:	xchg   edx,eax
  4100b0:	gs sub ebx,eax
  4100b3:	push   0x368a7cfb
  4100b8:	ins    DWORD PTR es:[edi],dx
  4100b9:	pop    ebp
  4100ba:	in     eax,dx
  4100bb:	or     al,0xa3
  4100bd:	sti    
  4100be:	pop    ss
  4100bf:	and    DWORD PTR [edx],0xffffffd9
  4100c2:	test   DWORD PTR [eax-0x2c],ebp
  4100c5:	bnd jne 0x4100eb
  4100c8:	cwde   
  4100c9:	(bad)  
  4100ca:	pop    ebp
  4100cb:	imul   ecx,DWORD PTR [eax+0x7e],0x1f44c207
  4100d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100d3:	lea    ecx,[eax+0x66b409d8]
  4100d9:	call   0x5a29ae2b
  4100de:	stos   BYTE PTR es:[edi],al
  4100df:	(bad)  
  4100e0:	jmp    0xf9cc:0x5f0ba0ee
  4100e7:	pop    esp
  4100e8:	xor    BYTE PTR [edx],dl
  4100ea:	(bad)  
  4100eb:	mov    ch,0x59
  4100ed:	adc    BYTE PTR [ecx+esi*2],al
  4100f0:	inc    esi
  4100f1:	xchg   ecx,eax
  4100f2:	xor    al,0x7e
  4100f4:	lods   al,BYTE PTR ds:[esi]
  4100f5:	adc    DWORD PTR [edx+ecx*1+0x7d9587d9],esi
  4100fc:	test   DWORD PTR [eax-0x67],esi
  4100ff:	enter  0x10dc,0x72
  410103:	inc    ebx
  410104:	loopne 0x41017a
  410106:	push   edx
  410107:	xor    eax,0x4285b271
  41010c:	mov    ebx,0xb597c990
  410111:	lahf   
  410112:	or     dh,BYTE PTR [ecx+0x73acb710]
  410118:	pushf  
  410119:	es into 
  41011b:	rol    DWORD PTR [edi+0x2d3ac8c0],1
  410121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410122:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410123:	mov    eax,ds:0x1d0e51f7
  410128:	xchg   ebp,eax
  410129:	push   eax
  41012a:	jbe    0x41018e
  41012c:	push   edi
  41012d:	call   0x89d59b2d
  410132:	inc    edi
  410133:	call   edx
  410135:	lea    esi,[ecx+ecx*8]
  410138:	push   0xffffffde
  41013a:	(bad)  
  41013b:	lea    ebp,[ebp+0x6f4bbad9]
  410141:	or     eax,0x4b26b444
  410146:	(bad)  
  410147:	fnsave ds:0x80500881
  41014d:	stos   BYTE PTR es:[edi],al
  41014e:	clc    
  41014f:	push   ebp
  410150:	test   eax,0xac1ce650
  410155:	not    BYTE PTR [ebp-0x51423410]
  41015b:	jmp    DWORD PTR ds:0x7a0b6692
  410161:	stos   BYTE PTR es:[edi],al
  410162:	add    al,0xa1
  410164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410165:	mov    dh,0xe3
  410167:	adc    eax,0x940c0f2d
  41016c:	xchg   edx,eax
  41016d:	inc    ebx
  41016e:	pop    esi
  41016f:	dec    edx
  410170:	xchg   esp,eax
  410171:	mov    ch,0xba
  410173:	xchg   bl,bl
  410175:	jmp    0x8a1b:0x8a2fefb3
  41017c:	mov    ds:0x29815071,al
  410181:	ja     0x41016c
  410183:	ret    0xdbae
  410186:	and    esi,DWORD PTR [ecx+0x3b]
  410189:	mov    eax,0xd516cf1d
  41018e:	or     DWORD PTR [eax+0x3a85eb83],edi
  410194:	inc    esi
  410195:	(bad)  
  410197:	mov    cl,0xc6
  410199:	xchg   esp,eax
  41019a:	lea    esp,[edi+0x392d220d]
  4101a0:	sub    BYTE PTR [eax-0x7b],ah
  4101a3:	sbb    dh,al
  4101a5:	xor    ebx,DWORD PTR [ecx+0x54]
  4101a8:	jg     0x4101ab
  4101aa:	fwait
  4101ab:	into   
  4101ac:	cmp    ah,0x8f
  4101af:	leave  
  4101b0:	mov    BYTE PTR [edx-0x6857f344],ch
  4101b6:	mov    ds:0x1b84351c,eax
  4101bb:	int3   
  4101bc:	retf   0xa9f4
  4101bf:	shl    BYTE PTR [ebx+ebx*2+0x12],1
  4101c3:	retf   
  4101c4:	dec    edi
  4101c5:	std    
  4101c6:	enter  0x9e44,0x7e
  4101ca:	rcl    dl,1
  4101cc:	xchg   DWORD PTR [eax],ecx
  4101ce:	inc    ecx
  4101cf:	add    cl,BYTE PTR [edi-0x2bfa9278]
  4101d5:	cmp    al,0xab
  4101d7:	mov    esp,0x957cce15
  4101dc:	jp     0x4101e3
  4101de:	ja     0x4101e8
  4101e0:	lods   eax,DWORD PTR ds:[esi]
  4101e1:	mov    bl,0x66
  4101e3:	pop    edx
  4101e4:	sbb    al,BYTE PTR [ebx]
  4101e6:	icebp  
  4101e7:	les    ecx,FWORD PTR [eax]
  4101e9:	mov    ds:0x9b3e2dd9,eax
  4101ee:	push   edx
  4101ef:	dec    edx
  4101f0:	jnp    0x4101c5
  4101f2:	mov    ah,0xa1
  4101f4:	test   eax,0x5df6b99d
  4101f9:	pop    ebx
  4101fa:	jg     0x410194
  4101fc:	out    dx,eax
  4101fd:	pop    edi
  4101fe:	mov    esi,0xd14b0f1c
  410203:	stc    
  410204:	sub    DWORD PTR [ebx+0xa],edi
  410207:	pop    ss
  410208:	das    
  410209:	sub    BYTE PTR [edx],ch
  41020b:	(bad)  
  41020c:	fistp  DWORD PTR ds:0x5b5078a
  410212:	mov    ebx,0xe8a00e71
  410217:	and    ebx,edx
  410219:	jle    0x41024f
  41021b:	sahf   
  41021c:	enter  0x13e,0xfa
  410220:	adc    DWORD PTR ds:0x4dd1885,edi
  410226:	leave  
  410227:	jmp    0x41024d
  410229:	xor    bh,BYTE PTR [edx]
  41022b:	mov    edi,0x28c0a9cf
  410230:	repz pushf 
  410232:	or     cl,al
  410234:	dec    ebp
  410235:	push   ebp
  410236:	lods   al,BYTE PTR ds:[esi]
  410237:	jno    0x4101bb
  410239:	adc    DWORD PTR [eax+0x14],edx
  41023c:	std    
  41023d:	adc    edi,DWORD PTR ds:0xcb9fc406
  410243:	dec    ebp
  410244:	adc    eax,DWORD PTR [edx+0xccc71e6]
  41024a:	icebp  
  41024b:	fild   WORD PTR [edx]
  41024d:	xor    eax,0x8cd2b67f
  410252:	test   bl,bh
  410254:	sbb    ch,al
  410256:	fstp   QWORD PTR [ecx+0x58]
  410259:	cmp    ecx,eax
  41025b:	inc    ebp
  41025c:	push   esi
  41025d:	sbb    dh,dh
  41025f:	push   cs
  410260:	mov    fs:0x56007520,al
  410266:	sub    dl,dl
  410268:	push   0x374955bb
  41026d:	sub    ecx,DWORD PTR [esi]
  41026f:	adc    esi,esi
  410271:	ss inc ebx
  410273:	scas   eax,DWORD PTR es:[edi]
  410274:	cmp    dl,BYTE PTR [edx+0x5d0b6622]
  41027a:	pusha  
  41027b:	inc    edx
  41027c:	sahf   
  41027d:	repnz or eax,0xd279181a
  410283:	mov    cl,0x6d
  410285:	xchg   ebx,eax
  410286:	cli    
  410287:	pop    ebp
  410288:	stc    
  410289:	lahf   
  41028a:	dec    edi
  41028b:	sti    
  41028c:	mov    al,ds:0x252cf4db
  410291:	ins    BYTE PTR es:[edi],dx
  410292:	push   0x14817937
  410297:	pop    ebx
  410298:	dec    eax
  410299:	sbb    eax,0xa0269bad
  41029e:	(bad)  
  41029f:	fucomp st(2)
  4102a1:	cmp    al,0x31
  4102a3:	jge    0x41028a
  4102a5:	test   DWORD PTR [edx+0x4e],0xac4fb363
  4102ac:	fs mov edx,0xb5820f2c
  4102b2:	arpl   WORD PTR [eax],si
  4102b4:	jb     0x410240
  4102b6:	retf   
  4102b7:	ins    BYTE PTR es:[edi],dx
  4102b8:	shr    DWORD PTR [ebx+ebp*1],1
  4102bb:	test   eax,0xb795828c
  4102c0:	(bad)  
  4102c2:	push   ss
  4102c3:	xchg   dh,al
  4102c5:	bound  edi,QWORD PTR [ebp+0x33]
  4102c8:	pop    esp
  4102c9:	cmp    BYTE PTR [esi],dl
  4102cb:	and    dl,dl
  4102cd:	test   ch,dl
  4102cf:	xchg   esp,eax
  4102d0:	and    ebp,esp
  4102d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102d3:	sub    DWORD PTR [ebx-0x20],eax
  4102d6:	mov    eax,ds:0xf3e6fd5a
  4102db:	or     al,BYTE PTR [eax-0x18a41a97]
  4102e1:	ja     0x4102a6
  4102e3:	add    dh,BYTE PTR [eax+0x4d]
  4102e6:	fdivr  DWORD PTR [edi+0x11caaf1e]
  4102ec:	sbb    al,0xee
  4102ee:	inc    ebp
  4102ef:	into   
  4102f0:	push   cs
  4102f1:	outs   dx,DWORD PTR ds:[esi]
  4102f2:	xchg   ebx,eax
  4102f3:	push   esp
  4102f4:	jbe    0x4102df
  4102f6:	sbb    DWORD PTR [esi],esp
  4102f8:	pusha  
  4102f9:	scas   al,BYTE PTR es:[edi]
  4102fa:	call   0x20ef:0xed40edf
  410301:	and    esp,DWORD PTR [eax]
  410303:	enter  0x13ee,0xfd
  410307:	in     eax,0x4
  410309:	mov    ecx,edi
  41030b:	jmp    0xb8d53edc
  410310:	scas   al,BYTE PTR es:[edi]
  410311:	(bad)  
  410313:	jl     0x4102bf
  410315:	retf   
  410316:	or     dh,BYTE PTR [edx+esi*1]
  410319:	repz or edi,DWORD PTR [edi+esi*8]
  41031d:	das    
  41031e:	aad    0x16
  410320:	inc    ebx
  410321:	or     eax,0x87e6fcd1
  410326:	pop    esp
  410327:	out    dx,eax
  410328:	xor    al,cl
  41032a:	xchg   esi,eax
  41032b:	sbb    DWORD PTR [ebx],esp
  41032d:	add    esi,DWORD PTR [edi]
  41032f:	mov    bl,0x9c
  410331:	jnp    0x4103a4
  410333:	out    0xa3,al
  410335:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410336:	mov    dh,0xbc
  410338:	cs arpl bp,dx
  41033b:	test   edx,edx
  41033d:	pop    eax
  41033e:	out    dx,al
  41033f:	add    BYTE PTR [ebp+eiz*8-0x7d],bl
  410343:	jle    0x4103a1
  410345:	dec    esp
  410346:	or     bl,al
  410348:	outs   dx,DWORD PTR ds:[esi]
  410349:	retf   0x2b11
  41034c:	fs or  eax,0x56ab7272
  410352:	xor    BYTE PTR [ecx-0x79537afb],0x53
  410359:	mov    ebp,0x450b810c
  41035e:	bound  eax,QWORD PTR [ebx-0x4e]
  410361:	add    edi,DWORD PTR [ebp+0x79ad2baa]
  410367:	jmp    0x8e610993
  41036c:	jp     0x41032f
  41036e:	hlt    
  41036f:	int    0x3e
  410371:	mov    edx,0x190c9312
  410376:	repz sbb al,0x73
  410379:	fdivr  DWORD PTR ds:0xcf0a07f6
  41037f:	daa    
  410380:	add    ecx,0x37c7b496
  410386:	stos   DWORD PTR es:[edi],eax
  410387:	mov    al,ds:0xfdc510fe
  41038c:	mov    bh,0x40
  41038e:	xchg   edx,eax
  41038f:	xor    eax,0x8cee8540
  410394:	and    BYTE PTR [ebx-0x7b],bh
  410397:	pop    ss
  410398:	sub    DWORD PTR [edi+0x65],ebp
  41039b:	and    al,0x74
  41039d:	pop    esi
  41039e:	retf   
  41039f:	push   es
  4103a0:	and    BYTE PTR [edi+0x582ea40c],ch
  4103a6:	leave  
  4103a7:	xor    eax,0xcf444cb2
  4103ac:	adc    bh,bh
  4103ae:	sbb    eax,0x7017830d
  4103b3:	stc    
  4103b4:	push   ebp
  4103b5:	jmp    0x410429
  4103b7:	adc    eax,0x4e9314cc
  4103bc:	cmp    ebx,ecx
  4103be:	in     al,dx
  4103bf:	push   0xf
  4103c1:	iret   
  4103c2:	add    al,BYTE PTR [edi+ebp*2-0x66]
  4103c6:	jo     0x4103d4
  4103c8:	je     0x410370
  4103ca:	pop    edi
  4103cb:	and    al,dh
  4103cd:	inc    ebx
  4103ce:	push   cs
  4103cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103d0:	je     0x4103ed
  4103d2:	ror    esp,1
  4103d4:	mov    bh,0x80
  4103d6:	cmp    al,0x36
  4103d8:	jl     0x4103cb
  4103da:	pop    ds
  4103db:	add    ebx,DWORD PTR [esi-0x562780c6]
  4103e1:	sahf   
  4103e2:	fldenv [esi]
  4103e4:	sub    ebp,DWORD PTR ds:0x41115351
  4103ea:	mov    bh,0x12
  4103ec:	jns    0x410386
  4103ee:	ret    0xcf77
  4103f1:	scas   al,BYTE PTR es:[edi]
  4103f2:	inc    ecx
  4103f3:	xchg   ebx,eax
  4103f4:	pop    ecx
  4103f5:	xor    BYTE PTR [edx-0x23f5c30e],bh
  4103fb:	mov    ecx,0x506a8d48
  410400:	sub    edx,DWORD PTR [esp+esi*8+0x17138170]
  410407:	inc    esi
  410408:	jae    0x4103de
  41040a:	and    ecx,esp
  41040c:	pop    esi
  41040d:	fs inc esi
  41040f:	cmp    BYTE PTR [ecx-0xe],ah
  410412:	stc    
  410413:	xor    BYTE PTR [edi-0x2efcd2c8],dl
  410419:	push   ebp
  41041a:	inc    edi
  41041b:	add    BYTE PTR [ebx],dh
  41041d:	add    eax,0x521ec553
  410422:	xchg   ecx,eax
  410423:	scas   al,BYTE PTR es:[di]
  410425:	int3   
  410426:	dec    ebp
  410427:	nop
  410428:	cmp    eax,0x39bd076d
  41042d:	dec    esi
  41042e:	fdivp  st(0),st
  410430:	loopne 0x4103bb
  410432:	push   ss
  410433:	(bad)  
  410434:	es mov bh,0x90
  410437:	cwde   
  410438:	or     eax,0x8d2ee0e1
  41043d:	(bad)  
  41043e:	inc    DWORD PTR [edi+0x13625a1f]
  410444:	ret    
  410445:	lock sbb BYTE PTR [edx-0x4af916b9],ch
  41044c:	jecxz  0x41040c
  41044e:	std    
  41044f:	data16 (bad) 
  410451:	jmp    0xcb5a:0xe9ea011f
  410458:	pushf  
  410459:	pop    edi
  41045a:	inc    eax
  41045b:	retf   
  41045c:	inc    edx
  41045d:	sbb    eax,0x9da9da38
  410462:	add    BYTE PTR [edi],dl
  410464:	jns    0x4104bc
  410466:	lea    ebp,[ebp+ebx*8+0x16]
  41046a:	jl     0x41045d
  41046c:	lods   al,BYTE PTR ds:[esi]
  41046d:	jns    0x410468
  41046f:	imul   eax,esp,0xffffffa1
  410472:	jne    0x410455
  410474:	and    BYTE PTR [ebp-0x4e],al
  410477:	mov    BYTE PTR [edi+0x101c2594],cl
  41047d:	mov    dl,0xcf
  41047f:	xchg   ecx,eax
  410480:	jmp    0x410403
  410482:	push   edi
  410483:	and    cl,BYTE PTR [ebx-0x5e744630]
  410489:	dec    esp
  41048a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41048b:	pop    ss
  41048c:	fistp  QWORD PTR [eax+0x12]
  41048f:	pop    ds
  410490:	cmp    BYTE PTR [edx*8-0x63c56c2f],bh
  410497:	retf   
  410498:	jge    0x410438
  41049a:	pop    edi
  41049b:	scas   al,BYTE PTR es:[edi]
  41049c:	pop    es
  41049d:	les    esp,FWORD PTR [eax+ebp*1+0x5e0945fa]
  4104a4:	retf   
  4104a5:	rol    DWORD PTR [edx-0x23fa6f4a],1
  4104ab:	es mov bl,0xeb
  4104ae:	fist   WORD PTR es:[edx]
  4104b1:	lea    esp,[esi-0x5e]
  4104b4:	pop    eax
  4104b5:	pushf  
  4104b6:	mov    bh,0xb5
  4104b8:	into   
  4104b9:	sbb    cl,BYTE PTR [ecx+0x6a]
  4104bc:	mov    esp,0xfa8b6d5
  4104c1:	sub    eax,0xa32e5e63
  4104c6:	stos   BYTE PTR es:[edi],al
  4104c7:	shr    BYTE PTR [edx],cl
  4104c9:	inc    edx
  4104ca:	(bad)  
  4104cb:	scas   eax,DWORD PTR es:[edi]
  4104cc:	bound  eax,QWORD PTR [edx+0x4f5eb420]
  4104d2:	jae    0x41051f
  4104d4:	sbb    eax,0x4a800170
  4104d9:	loopne 0x410509
  4104db:	jge    0x4104ab
  4104dd:	outs   dx,BYTE PTR ds:[esi]
  4104de:	xchg   BYTE PTR [ecx],dh
  4104e0:	and    al,dh
  4104e2:	cmp    BYTE PTR [ecx+0x7c],dh
  4104e5:	imul   esi,ecx,0x23
  4104e8:	and    eax,esp
  4104ea:	cmp    ah,ah
  4104ec:	loop   0x4104c7
  4104ee:	call   0x5ac8:0x4165ada5
  4104f5:	sbb    ebp,edi
  4104f7:	fsubr  st,st(7)
  4104f9:	std    
  4104fa:	sbb    eax,esp
  4104fc:	sub    al,0x45
  4104fe:	les    ecx,FWORD PTR [ecx]
  410500:	jo     0x41048d
  410502:	adc    BYTE PTR ds:0x7c69d264,dl
  410508:	push   eax
  410509:	ins    DWORD PTR es:[edi],dx
  41050a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41050b:	mov    al,ds:0x7c615251
  410510:	fcmovb st,st(1)
  410512:	enter  0xc2cf,0x86
  410516:	in     al,0xd2
  410518:	sub    BYTE PTR [ebp+ecx*8+0x5b],ch
  41051c:	add    dl,BYTE PTR [ebx+0x4b570a07]
  410522:	mov    dl,0x90
  410524:	sub    esp,DWORD PTR [eax+edx*8+0x35]
  410528:	test   al,0xea
  41052a:	sti    
  41052b:	js     0x410573
  41052d:	and    esp,DWORD PTR [esi-0x2d]
  410530:	or     eax,0xafb9eb34
  410535:	sbb    eax,0x44dd8639
  41053a:	mov    edi,0x35622a8
  41053f:	(bad)  
  410540:	int    0x41
  410542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410543:	inc    ebx
  410544:	div    esi
  410546:	push   ecx
  410547:	daa    
  410548:	sub    BYTE PTR [ecx],bl
  41054a:	mov    ecx,0xb7889f2f
  41054f:	push   esp
  410550:	mov    ch,al
  410552:	es call 0x3947:0xaa22c93
  41055a:	pop    ebp
  41055b:	mov    ch,0x8b
  41055d:	pop    ebp
  41055e:	out    0x5d,eax
  410560:	add    bh,BYTE PTR [esi+0x38]
  410563:	outs   dx,BYTE PTR ds:[esi]
  410564:	jno    0x410581
  410566:	inc    eax
  410567:	add    eax,0xb92c23b7
  41056c:	loope  0x4105a0
  41056e:	stos   DWORD PTR es:[edi],eax
  41056f:	mov    ds:0xa2deb65,eax
  410574:	cld    
  410575:	mov    DWORD PTR [edx],eax
  410577:	mov    ch,0xbe
  410579:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41057b:	sub    BYTE PTR [edi+edi*2+0x59],ah
  41057f:	xchg   ebx,eax
  410580:	and    ch,BYTE PTR [esi]
  410582:	pusha  
  410583:	jno    0x410587
  410585:	test   BYTE PTR [eax+0x73e572cc],ch
  41058b:	std    
  41058c:	in     eax,dx
  41058d:	test   BYTE PTR [edi+0x1382a479],dh
  410593:	imul   ecx,DWORD PTR [ebp+esi*4+0x7a697142],0x7314e43d
  41059e:	repnz add edi,DWORD PTR [edi+ebp*1-0x1490c320]
  4105a6:	xor    DWORD PTR [ebx],edi
  4105a8:	inc    eax
  4105a9:	add    dh,BYTE PTR [esi-0x7f5ca005]
  4105af:	add    eax,0x9f16288c
  4105b4:	(bad)  
  4105b6:	sub    ebp,DWORD PTR [esi-0x2f518122]
  4105bc:	add    eax,0x45507d82
  4105c1:	jge    0x4105d7
  4105c3:	sub    eax,DWORD PTR [eax]
  4105c5:	mov    ds:0x5ba73cc8,eax
  4105ca:	mov    esp,0xed61e175
  4105cf:	push   ds
  4105d0:	mov    ds:0xfe2a3694,al
  4105d5:	fnstenv [eax]
  4105d7:	in     eax,0x43
  4105d9:	jecxz  0x410635
  4105db:	stos   BYTE PTR es:[edi],al
  4105dc:	jp     0x410648
  4105de:	xor    esi,edx
  4105e0:	sahf   
  4105e1:	inc    esi
  4105e2:	aad    0x8a
  4105e4:	std    
  4105e5:	mov    dl,0xee
  4105e7:	adc    edx,DWORD PTR [esi-0x599d6ce1]
  4105ed:	jge    0x410637
  4105ef:	xor    DWORD PTR [ecx-0x4a],ebp
  4105f2:	mov    bl,0x4f
  4105f4:	pop    esi
  4105f5:	mov    cl,0x52
  4105f7:	xchg   ebp,eax
  4105f8:	int3   
  4105f9:	retf   
  4105fa:	xor    cl,dh
  4105fc:	or     ecx,DWORD PTR [edi+0x50e0f78]
  410602:	lods   eax,DWORD PTR ds:[esi]
  410603:	lock (bad) [ecx]
  410606:	outs   dx,BYTE PTR ds:[esi]
  410607:	and    BYTE PTR [ebx+0x9],0x2b
  41060b:	pop    edx
  41060c:	add    eax,0x5ac06407
  410611:	xchg   ebp,eax
  410612:	in     al,0xce
  410614:	das    
  410615:	popa   
  410616:	jmp    0xf37e:0x749a0b4b
  41061d:	in     al,dx
  41061e:	in     al,dx
  41061f:	out    0xbe,al
  410621:	mov    ecx,0xe1ff2d88
  410626:	mov    eax,0x2ec97275
  41062b:	xchg   DWORD PTR [ebp-0x70ddd056],esi
  410631:	out    0x1d,eax
  410633:	rcr    DWORD PTR [edi-0x1a],cl
  410636:	jmp    0xaff:0x1c7cd4f6
  41063d:	jmp    0xd8cf:0x1e13b5db
  410644:	out    dx,al
  410645:	and    ecx,esi
  410647:	and    al,0x2f
  410649:	in     al,0x19
  41064b:	imul   BYTE PTR [ecx]
  41064d:	jb     0x4105eb
  41064f:	push   0xffffffc4
  410651:	add    edi,ebx
  410653:	push   edi
  410654:	adc    eax,0xa050c509
  410659:	xor    DWORD PTR ds:[edi+0x5b],eax
  41065d:	adc    edi,DWORD PTR [edi-0x63c6531d]
  410663:	xlat   BYTE PTR ds:[ebx]
  410664:	or     DWORD PTR [ebx+0x7a],ebp
  410667:	mov    ebx,DWORD PTR [ebx]
  410669:	jo     0x4106dc
  41066b:	lods   eax,DWORD PTR ds:[esi]
  41066c:	pusha  
  41066d:	sub    ebx,DWORD PTR [esi-0x6b]
  410670:	pop    esi
  410671:	ds push edi
  410673:	inc    esp
  410674:	(bad)  
  410675:	and    ebp,ebp
  410677:	pushf  
  410678:	retf   
  410679:	jnp    0x410693
  41067b:	scas   al,BYTE PTR es:[edi]
  41067c:	mov    ch,BYTE PTR [ebp+0x1c]
  41067f:	int    0x1e
  410681:	fsubr  QWORD PTR [eax-0x52]
  410684:	pusha  
  410685:	stc    
  410686:	ret    0xe52a
  410689:	retf   
  41068a:	daa    
  41068b:	push   esi
  41068c:	jb     0x410628
  41068e:	ficomp DWORD PTR [esi-0x5]
  410691:	adc    eax,0x22d54cec
  410696:	xor    dh,dl
  410698:	sar    ebx,1
  41069a:	mov    ds:0x7b6653fa,al
  41069f:	fwait
  4106a0:	xchg   esi,eax
  4106a1:	sbb    eax,0x34c5bfe6
  4106a6:	inc    edi
  4106a7:	ds pop ss
  4106a9:	mov    ecx,0x4a76be72
  4106ae:	(bad)  
  4106af:	imul   BYTE PTR [ecx]
  4106b1:	sub    ebp,eax
  4106b3:	inc    edi
  4106b4:	pop    esp
  4106b5:	dec    edi
  4106b6:	int    0xe3
  4106b8:	mov    al,0xb6
  4106ba:	cld    
  4106bb:	fwait
  4106bc:	ret    0xe2c8
  4106bf:	cli    
  4106c0:	jge    0x410697
  4106c2:	out    0x86,al
  4106c4:	sub    BYTE PTR [edi+0x2a619c13],dh
  4106ca:	mov    ebp,0x73ce3dc7
  4106cf:	and    BYTE PTR [edx*4-0x7136b3fd],cl
  4106d6:	push   ebp
  4106d7:	in     eax,dx
  4106d8:	mov    edi,DWORD PTR [ebx+0x76]
  4106db:	nop
  4106dc:	call   0xeb88:0x2985672d
  4106e3:	mov    edi,0xd0c934e
  4106e8:	ja     0x41070d
  4106ea:	add    ecx,DWORD PTR [eax]
  4106ec:	test   DWORD PTR [ecx],edx
  4106ee:	mov    ch,0xc4
  4106f0:	ins    DWORD PTR es:[edi],dx
  4106f1:	sub    eax,0x373d331f
  4106f6:	popa   
  4106f7:	or     al,0x73
  4106f9:	xchg   esi,eax
  4106fa:	push   edi
  4106fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106fc:	dec    DWORD PTR [esi-0x49]
  4106ff:	outs   dx,BYTE PTR ds:[esi]
  410700:	sar    DWORD PTR cs:0x35688264,cl
  410707:	jnp    0x410748
  410709:	adc    al,0x70
  41070b:	jb     0x410711
  41070d:	mov    bl,0x9
  41070f:	(bad)  
  410710:	xor    eax,0x4424f85e
  410715:	lds    edx,FWORD PTR [edx+0x3a]
  410718:	pushf  
  410719:	pop    esi
  41071a:	mov    eax,ds:0xfaf76945
  41071f:	pop    eax
  410720:	dec    edx
  410721:	mov    ds:0x883ba1c,al
  410726:	int    0x17
  410728:	enter  0x1eda,0x41
  41072c:	js     0x410741
  41072e:	mov    ah,0x99
  410730:	adc    BYTE PTR [edi],bl
  410732:	mov    esi,0x661fca0d
  410737:	mov    eax,ds:0x59b4a0ab
  41073c:	pop    es
  41073d:	xor    dl,BYTE PTR [edi-0x622faca5]
  410743:	xor    eax,0xb1b71179
  410748:	or     ecx,esp
  41074a:	jp     0x410779
  41074c:	or     esp,DWORD PTR [ebx]
  41074e:	(bad)  
  41074f:	js     0x41077c
  410751:	(bad)  
  410752:	cmp    DWORD PTR [eax+ebx*1],edx
  410755:	mov    WORD PTR [eax+0x238aff5b],?
  41075b:	add    al,0x49
  41075d:	jns    0x4107b7
  41075f:	jne    0x4106e7
  410761:	inc    eax
  410762:	inc    ebp
  410763:	ds jmp 0xbf24:0x72411ca3
  41076b:	into   
  41076c:	loop   0x410767
  41076e:	cmp    BYTE PTR [ecx-0x60],dl
  410771:	mov    al,ds:0x35ee5de4
  410776:	inc    ebp
  410777:	or     al,0x18
  410779:	out    dx,al
  41077a:	sti    
  41077b:	and    edx,DWORD PTR [ecx+0x260b369b]
  410781:	aaa    
  410782:	adc    DWORD PTR [eax+0x14],ebp
  410785:	retf   0x74aa
  410788:	jp     0x4107cd
  41078a:	mov    DWORD PTR [eax],ebp
  41078c:	or     BYTE PTR [edx],cl
  41078e:	mov    dh,BYTE PTR [ecx+0x2c]
  410791:	add    eax,0x3ddb49d
  410796:	rol    ebx,0x3e
  410799:	push   esi
  41079a:	push   ds
  41079b:	sbb    bh,bh
  41079d:	inc    esi
  41079e:	hlt    
  41079f:	sbb    DWORD PTR [ebx+0xd],ebx
  4107a2:	mov    ds:0x95564464,eax
  4107a7:	jg     0x410742
  4107a9:	xchg   ebx,eax
  4107aa:	mov    al,0x7f
  4107ac:	mul    al
  4107ae:	xchg   ecx,eax
  4107af:	push   edi
  4107b0:	jmp    0x2613:0xb9b2291a
  4107b7:	mov    ah,BYTE PTR [eax]
  4107b9:	push   ebp
  4107ba:	aam    0xf3
  4107bc:	repz lahf 
  4107be:	jne    0x410819
  4107c0:	adc    DWORD PTR [esi-0x5a],esp
  4107c3:	test   eax,0xc8ba4d16
  4107c8:	lods   eax,DWORD PTR ds:[esi]
  4107c9:	aad    0x58
  4107cb:	pushf  
  4107cc:	les    esp,FWORD PTR [edi+0x31]
  4107cf:	push   eax
  4107d0:	mov    ebx,0x20c75d42
  4107d5:	les    ebp,FWORD PTR [edx]
  4107d7:	sahf   
  4107d8:	inc    ebp
  4107d9:	pop    edx
  4107da:	aaa    
  4107db:	cs mov bh,0x2
  4107de:	aam    0x93
  4107e0:	dec    ebx
  4107e1:	sbb    eax,DWORD PTR [eax]
  4107e3:	popa   
  4107e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107e5:	pop    ss
  4107e6:	(bad)  
  4107e8:	pop    ecx
  4107e9:	inc    edx
  4107ea:	sub    ah,BYTE PTR [esi]
  4107ec:	out    dx,eax
  4107ed:	(bad)  
  4107ee:	dec    esi
  4107ef:	mov    bh,0x92
  4107f1:	jg     0x410836
  4107f3:	ficom  DWORD PTR ds:0xc27a804c
  4107f9:	mov    bl,0x29
  4107fb:	inc    edi
  4107fc:	mul    dh
  4107fe:	rol    BYTE PTR [edi+0x6a],1
  410801:	mov    esi,0xbce297c1
  410807:	and    al,0xe1
  410809:	adc    al,0x6b
  41080b:	ins    DWORD PTR es:[edi],dx
  41080c:	pop    ss
  41080d:	out    0x5b,eax
  41080f:	out    0xaf,al
  410811:	mov    eax,ds:0x54914bdb
  410816:	xchg   ebx,eax
  410817:	aas    
  410818:	xor    BYTE PTR [ebx-0x7ad5f929],ch
  41081e:	sbb    dl,bl
  410820:	in     al,dx
  410821:	shl    DWORD PTR [edx-0x1d],cl
  410824:	mov    ds:0xb89b9fd,eax
  410829:	xchg   esi,eax
  41082a:	push   0x33
  41082c:	and    al,0xa2
  41082e:	test   BYTE PTR [esi],0xab
  410831:	add    DWORD PTR [eax-0x58],eax
  410834:	or     eax,0x3379451d
  410839:	(bad)  
  41083a:	dec    esi
  41083b:	call   0xc4c2:0xa0606552
  410842:	cwde   
  410843:	mov    BYTE PTR [edi],ch
  410845:	sbb    DWORD PTR [ebp+0x71],edx
  410848:	adc    eax,0x56f6adb6
  41084d:	dec    ecx
  41084e:	mov    esi,0x75f08a4c
  410853:	(bad)  
  410855:	lahf   
  410856:	sub    al,al
  410858:	repz sub edi,edx
  41085b:	aam    0x5a
  41085d:	ds xchg ecx,eax
  41085f:	imul   ecx,ebp,0xfa8ff17b
  410865:	mov    ebp,0x22b2459a
  41086a:	mov    ah,0xca
  41086c:	idiv   DWORD PTR [esi]
  41086e:	xchg   ebp,eax
  41086f:	dec    esp
  410870:	mov    dh,0x22
  410872:	xor    eax,0xfe83ff56
  410877:	jnp    0x41082d
  410879:	ret    0xf258
  41087c:	into   
  41087d:	inc    edx
  41087e:	add    BYTE PTR [esi-0x40d32842],dl
  410884:	or     DWORD PTR [esi-0x72],esi
  410887:	or     al,0xb3
  410889:	(bad)  
  41088a:	sti    
  41088b:	xchg   edi,eax
  41088c:	ror    edx,cl
  41088e:	adc    dl,BYTE PTR fs:[edi]
  410891:	popa   
  410892:	sbb    al,0x4e
  410894:	dec    ebx
  410895:	jg     0x4108f4
  410897:	ins    DWORD PTR es:[edi],dx
  410898:	ret    
  410899:	push   edi
  41089a:	dec    ebx
  41089b:	loope  0x410905
  41089d:	ss out 0xd7,al
  4108a0:	jmp    0x410860
  4108a2:	cmp    DWORD PTR [eax+0x48618720],edx
  4108a8:	int3   
  4108a9:	dec    ecx
  4108aa:	loop   0x4108ea
  4108ac:	lock add BYTE PTR [edx],ah
  4108af:	(bad)
  4108b2:	lock inc esi
  4108b4:	ret    
  4108b5:	rcl    DWORD PTR ds:0xd34199d7,1
  4108bb:	push   ebx
  4108bc:	ja     0x4108ee
  4108be:	in     al,0x3
  4108c0:	shl    DWORD PTR [eax],1
  4108c2:	xor    al,0xa6
  4108c4:	in     eax,dx
  4108c5:	mov    dh,0xc4
  4108c7:	aas    
  4108c8:	jmp    0x3730e293
  4108cd:	scas   al,BYTE PTR es:[edi]
  4108ce:	test   BYTE PTR [ebx+0x2ec0e3d2],bl
  4108d4:	inc    edx
  4108d5:	mov    bl,0xd7
  4108d7:	sub    ebp,DWORD PTR [edx-0x7]
  4108da:	or     eax,0xdb95deaf
  4108df:	js     0x41092e
  4108e1:	rcl    BYTE PTR [edi+0x22],cl
  4108e4:	adc    al,0x64
  4108e6:	mov    eax,ds:0xf6e4352d
  4108eb:	mov    ebp,0x47ed5cde
  4108f0:	cmp    esp,DWORD PTR [eax-0x58]
  4108f3:	test   DWORD PTR [eax-0x699ebb14],0x770b0014
  4108fd:	sti    
  4108fe:	xchg   ebx,eax
  4108ff:	cld    
  410900:	outs   dx,BYTE PTR ds:[esi]
  410901:	es sbb dl,ch
  410904:	int    0x46
  410906:	mov    ch,0x39
  410908:	jmp    0xb8ae166e
  41090d:	pusha  
  41090e:	rol    BYTE PTR [esi],0x78
  410911:	das    
  410912:	sub    ebx,DWORD PTR [ecx+0x43b0e414]
  410918:	jl     0x4108c4
  41091a:	sbb    al,0xfd
  41091c:	mov    edx,0x251966eb
  410921:	iret   
  410922:	lea    edi,[edx+eiz*4]
  410925:	enter  0xe394,0x7e
  410929:	imul   ebx,DWORD PTR ds:0x20408eb5,0xffffffbf
  410930:	cmp    DWORD PTR [esi+esi*4],ebx
  410933:	std    
  410934:	sbb    dl,BYTE PTR [ecx+0x6f]
  410937:	pop    ebp
  410938:	cmp    DWORD PTR [ebp+0x15],0x2d
  41093c:	int    0xd1
  41093e:	xor    al,BYTE PTR [ebp-0x8]
  410941:	mov    edi,0xfe4968e7
  410946:	add    cl,dh
  410948:	dec    esp
  410949:	dec    ebx
  41094a:	xor    al,0xa8
  41094c:	mov    al,0xee
  41094e:	sbb    eax,0x36d5eb58
  410953:	push   DWORD PTR [esi+eax*4-0x7b]
  410957:	mov    esi,DWORD PTR [eax+ecx*4-0x754a3d7d]
  41095e:	dec    ebx
  41095f:	sub    BYTE PTR [edi+0x50],bl
  410962:	and    eax,0xb2c2593a
  410967:	mov    DWORD PTR [esi-0x64c04b4c],ebx
  41096d:	test   DWORD PTR [edx+edi*1],esp
  410970:	ss push 0x4c
  410973:	outs   dx,BYTE PTR ds:[esi]
  410974:	push   es
  410975:	jl     0x4109ed
  410977:	ror    DWORD PTR ds:0xb8a1,cl
  41097c:	mov    edi,0x65b08188
  410981:	push   edi
  410982:	ins    DWORD PTR es:[edi],dx
  410983:	or     al,0xc6
  410985:	call   0xb9925e5c
  41098a:	inc    edi
  41098b:	imul   DWORD PTR [eax+0x7c]
  41098e:	pop    esi
  41098f:	pop    esp
  410990:	mov    edi,0xed86af
  410995:	adc    DWORD PTR [ebx-0x9],0x6a
  410999:	xor    BYTE PTR ds:0xa8d5b978,0x5a
  4109a0:	pop    ecx
  4109a1:	pop    ebp
  4109a2:	cmp    bl,cl
  4109a4:	jbe    0x41096a
  4109a6:	hlt    
  4109a7:	in     eax,dx
  4109a8:	std    
  4109a9:	stos   DWORD PTR es:[edi],eax
  4109aa:	xchg   BYTE PTR [edi],cl
  4109ac:	adc    DWORD PTR [edi],0x0
  4109af:	sub    eax,0xdfc277f4
  4109b4:	push   cs
  4109b5:	shl    DWORD PTR [ecx-0x6d],cl
  4109b8:	mov    dh,0xe4
  4109ba:	adc    al,0xf0
  4109bc:	cmp    al,0x82
  4109be:	aaa    
  4109bf:	sbb    eax,0x5d899fc5
  4109c4:	mov    dh,0x38
  4109c6:	sbb    al,ch
  4109c8:	ss push esp
  4109ca:	sbb    DWORD PTR [ecx-0x258ba2f7],esi
  4109d0:	xor    DWORD PTR [edx-0x75be6b8],esp
  4109d6:	fmul   st,st(4)
  4109d8:	xchg   esi,eax
  4109d9:	jmp    0xe578a792
  4109de:	cdq    
  4109df:	jecxz  0x4109fa
  4109e1:	xor    al,0xc6
  4109e3:	aam    0xab
  4109e5:	inc    eax
  4109e6:	add    ecx,DWORD PTR [ebp-0x55]
  4109e9:	mov    esp,0xcfeea200
  4109ee:	popa   
  4109ef:	xor    dl,BYTE PTR [edi+edi*1+0x7789da68]
  4109f6:	ins    DWORD PTR es:[edi],dx
  4109f7:	(bad)  
  4109f8:	pushf  
  4109f9:	pop    esp
  4109fa:	add    esp,DWORD PTR [ecx+0x22327564]
  410a00:	imul   esi,DWORD PTR [ebp-0x68],0x905db86
  410a07:	xchg   esi,eax
  410a08:	out    0x4e,al
  410a0a:	clc    
  410a0b:	pop    ecx
  410a0c:	lods   eax,DWORD PTR ds:[esi]
  410a0d:	or     eax,DWORD PTR [edi-0x77]
  410a10:	or     esp,esp
  410a12:	call   0xa0cf:0x18fd13ad
  410a19:	xor    esi,edi
  410a1b:	fistp  QWORD PTR [ebp+0x4]
  410a1e:	hlt    
  410a1f:	test   BYTE PTR [esi+ebp*2-0x7922b6ba],dl
  410a26:	xchg   edi,eax
  410a27:	push   ebp
  410a28:	xor    ebp,DWORD PTR [ebx-0x5c9b9006]
  410a2e:	inc    edx
  410a2f:	mov    ecx,0x80b27b0f
  410a34:	scas   al,BYTE PTR es:[edi]
  410a35:	repnz xchg ebx,eax
  410a37:	mov    WORD PTR [ebx-0x50],?
  410a3a:	out    dx,eax
  410a3b:	inc    eax
  410a3c:	xor    DWORD PTR [esi+eiz*4+0x38],0x2fab9651
  410a44:	xor    al,0xf
  410a46:	adc    DWORD PTR [ebp-0x4e97de53],edx
  410a4c:	pushf  
  410a4d:	push   ebp
  410a4e:	packsswb mm6,QWORD PTR [edx+0x388d754f]
  410a55:	xor    BYTE PTR [edx],ah
  410a57:	inc    ecx
  410a58:	test   BYTE PTR [eax-0x53],bh
  410a5b:	and    esp,DWORD PTR [ecx]
  410a5d:	adc    edi,edi
  410a5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a60:	or     esi,ebp
  410a62:	sbb    DWORD PTR [ecx+0x4b],esp
  410a65:	jmp    0x9f04c9b9
  410a6a:	push   ds
  410a6b:	fiadd  WORD PTR [ebx]
  410a6d:	cmp    bp,sp
  410a70:	jle    0x410aa3
  410a72:	pop    ecx
  410a73:	ret    0x5796
  410a76:	and    al,0x4b
  410a78:	add    eax,0x58c43a0
  410a7d:	enter  0x1be6,0xd3
  410a81:	(bad)  
  410a82:	mov    ebp,0x102e1456
  410a87:	cmp    DWORD PTR [ecx-0x1c],edi
  410a8a:	pusha  
  410a8b:	jae    0x410af2
  410a8d:	es test eax,0xd33a229e
  410a93:	aad    0x6e
  410a95:	scas   al,BYTE PTR es:[edi]
  410a96:	adc    edx,DWORD PTR [esi-0xc]
  410a99:	aad    0x89
  410a9b:	shr    DWORD PTR [ecx+0x75],0xec
  410a9f:	mov    ah,0xb8
  410aa1:	dec    ecx
  410aa2:	jmp    0x410ad0
  410aa4:	xor    edx,ebp
  410aa6:	or     BYTE PTR [esi+0x77125967],ch
  410aac:	xlat   BYTE PTR ds:[ebx]
  410aad:	mov    DWORD PTR [ecx-0x32911167],esi
  410ab3:	pop    ecx
  410ab4:	xchg   ecx,eax
  410ab5:	cmp    ah,BYTE PTR [ecx]
  410ab7:	xchg   edi,eax
  410ab8:	xor    edi,ebp
  410aba:	mov    BYTE PTR [edx],0xef
  410abd:	(bad)  
  410abe:	sub    edi,DWORD PTR [eax+0x79]
  410ac1:	sub    edx,DWORD PTR [eax+0x3fe2993d]
  410ac7:	popf   
  410ac8:	adc    eax,0x6b9ee5f0
  410acd:	imul   edi,DWORD PTR [edi],0x75
  410ad0:	xchg   BYTE PTR [esi],dl
  410ad2:	arpl   WORD PTR [edi+0x4],bp
  410ad5:	xchg   edi,eax
  410ad6:	inc    edx
  410ad7:	jmp    0x410a73
  410ad9:	ins    BYTE PTR es:[edi],dx
  410ada:	cmp    BYTE PTR [eax+0x7387dde],bh
  410ae0:	push   edi
  410ae1:	out    0xa4,al
  410ae3:	xor    ebx,ecx
  410ae5:	jo     0x410b23
  410ae7:	cli    
  410ae8:	or     eax,0xec75422c
  410aed:	jg     0x410b15
  410aef:	xchg   ebx,eax
  410af0:	cmp    eax,0x49a2d405
  410af5:	(bad)  
  410af6:	mov    cl,0x73
  410af8:	push   edi
  410af9:	inc    esp
  410afa:	cmp    al,0x36
  410afc:	scas   eax,DWORD PTR es:[edi]
  410afd:	pop    ss
  410afe:	jp     0x410b66
  410b00:	sbb    BYTE PTR [ecx],bh
  410b02:	ins    BYTE PTR es:[edi],dx
  410b03:	and    al,BYTE PTR [edi-0x2021dc48]
  410b09:	mov    ch,0xae
  410b0b:	sbb    al,0x6b
  410b0d:	mov    dl,0x59
  410b0f:	outs   dx,BYTE PTR ds:[esi]
  410b10:	push   esi
  410b11:	sahf   
  410b12:	mov    ebx,0xd7da6cdd
  410b17:	sti    
  410b18:	imul   ebp,DWORD PTR [eax-0x7eb3d31b],0x484b774d
  410b22:	stos   DWORD PTR es:[edi],eax
  410b23:	mov    ebp,0xcb62f02b
  410b28:	adc    DWORD PTR [edi],0xc5116d6b
  410b2e:	xor    DWORD PTR [ecx],0x4fde96a
  410b34:	inc    esi
  410b35:	call   0x2c32:0xf96a6779
  410b3c:	push   es
  410b3d:	stos   DWORD PTR es:[edi],eax
  410b3e:	dec    ebx
  410b3f:	dec    esi
  410b40:	and    esi,DWORD PTR [esi+0x6d18e385]
  410b46:	into   
  410b47:	jmp    0x410bb4
  410b49:	nop
  410b4a:	(bad)  
  410b4c:	sub    DWORD PTR [ecx+0x19],edi
  410b4f:	pop    esp
  410b50:	and    DWORD PTR [eax-0x9877dc9],eax
  410b56:	or     eax,0x57bcd4fc
  410b5b:	lods   al,BYTE PTR ds:[esi]
  410b5c:	lods   eax,DWORD PTR ds:[esi]
  410b5d:	mov    bh,0x78
  410b5f:	mov    ebx,0xf42d6260
  410b64:	adc    edx,DWORD PTR [ecx+0x1a]
  410b67:	xlat   BYTE PTR ds:[ebx]
  410b68:	push   ecx
  410b69:	loop   0x410bd7
  410b6b:	push   esp
  410b6c:	and    ebx,DWORD PTR [edi-0x26cd9eb3]
  410b72:	ds arpl cx,si
  410b75:	fwait
  410b76:	jmp    0xc7b0b327
  410b7b:	push   ebx
  410b7c:	das    
  410b7d:	mov    ebp,es
  410b7f:	hlt    
  410b80:	cmp    DWORD PTR [ebx+eax*8+0x36e3ec9f],ebp
  410b87:	sub    al,0x5d
  410b89:	or     al,0x84
  410b8b:	push   ebx
  410b8c:	push   edi
  410b8d:	sti    
  410b8e:	push   ds
  410b8f:	lock ficom WORD PTR [eax-0x12632197]
  410b96:	pop    ss
  410b97:	and    BYTE PTR [ebx-0x5b69d42],bl
  410b9d:	pop    edi
  410b9e:	mov    ecx,0x1a98d347
  410ba3:	adc    al,0x88
  410ba5:	fcmovnb st,st(6)
  410ba7:	mov    ds:0x2100a57,eax
  410bac:	jle    0x410c1e
  410bae:	xor    DWORD PTR [eax+0x5e],ebx
  410bb1:	dec    dh
  410bb3:	push   ecx
  410bb4:	dec    ebx
  410bb5:	adc    eax,0x36a54ca9
  410bba:	add    bh,BYTE PTR ds:0xeefc95e
  410bc0:	jg     0x410b58
  410bc2:	out    0xe1,eax
  410bc4:	adc    DWORD PTR [eax-0x7363c333],edx
  410bca:	out    0x4e,eax
  410bcc:	stos   BYTE PTR es:[edi],al
  410bcd:	cmp    al,0x5d
  410bcf:	xchg   edi,eax
  410bd0:	ins    DWORD PTR es:[edi],dx
  410bd1:	xchg   ebx,eax
  410bd2:	bound  edx,QWORD PTR [ebp+0x5d]
  410bd5:	into   
  410bd6:	push   edi
  410bd7:	addr16 sbb al,0x19
  410bda:	stos   DWORD PTR es:[edi],eax
  410bdb:	jle    0x410b5d
  410bdd:	lea    ecx,[ebp+eax*4-0x2d]
  410be1:	fdivr  QWORD PTR [esi+0x6f7e2760]
  410be7:	je     0x410c5f
  410be9:	fnstenv [esi+esi*4+0x54a460ad]
  410bf0:	inc    ecx
  410bf1:	fbstp  TBYTE PTR [esi+0x17]
  410bf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bf5:	push   ss
  410bf6:	inc    ebp
  410bf7:	jno    0x410ba5
  410bf9:	and    esi,ebp
  410bfb:	push   ecx
  410bfc:	xor    al,0x8e
  410bfe:	push   ecx
  410bff:	sbb    ch,ah
  410c01:	aas    
  410c02:	dec    esi
  410c03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c04:	pop    ebx
  410c05:	push   ss
  410c06:	retf   
  410c07:	(bad)
  410c0c:	push   cs
  410c0d:	ret    0xd311
  410c10:	dec    edi
  410c11:	mov    esi,0x50b58945
  410c16:	inc    edx
  410c17:	sbb    dh,0x20
  410c1a:	jmp    DWORD PTR [ebp+eiz*1+0x3d065349]
  410c21:	ret    
  410c22:	pop    esi
  410c23:	addr16 or eax,0xe82b16c2
  410c29:	jmp    edx
  410c2b:	xchg   esi,eax
  410c2c:	cmc    
  410c2d:	iret   
  410c2e:	inc    edx
  410c2f:	xor    eax,0x1f892cda
  410c34:	and    eax,0x1cedb785
  410c39:	xor    ebp,ebx
  410c3b:	mov    bh,0xf4
  410c3d:	xchg   ebp,eax
  410c3e:	and    al,0x8b
  410c40:	outs   dx,BYTE PTR ds:[esi]
  410c41:	aad    0x10
  410c43:	(bad)
  410c47:	(bad)
  410c4a:	xchg   edi,eax
  410c4b:	or     cl,BYTE PTR [edi-0x30]
  410c4e:	adc    BYTE PTR [edx+0x220f9bc8],bh
  410c54:	xchg   DWORD PTR [edi-0x4f3c5c56],ebp
  410c5a:	dec    eax
  410c5b:	imul   eax,esp,0xffffffe1
  410c5e:	dec    edx
  410c5f:	es out 0x6e,eax
  410c62:	dec    edi
  410c63:	ret    0xd27c
  410c66:	(bad)  
  410c67:	and    BYTE PTR [edx+0x51beda4],al
  410c6d:	cmp    DWORD PTR [ebx+0x798006e8],edi
  410c73:	inc    eax
  410c74:	mov    cl,0x58
  410c76:	aas    
  410c77:	push   ss
  410c78:	xchg   BYTE PTR [edi+0x2d],dh
  410c7b:	out    dx,eax
  410c7c:	out    dx,al
  410c7d:	(bad)  
  410c7e:	jns    0x410cd5
  410c80:	into   
  410c81:	adc    DWORD PTR [edi-0x6cf9d53e],ecx
  410c87:	call   0xe524e82b
  410c8c:	fldl2e 
  410c8e:	or     DWORD PTR [edi+0x3d6a482a],ecx
  410c94:	push   es
  410c95:	mov    ebp,0xb1510a09
  410c9a:	mov    esi,0xa71353dd
  410c9f:	lahf   
  410ca0:	and    edx,ecx
  410ca2:	ror    ah,1
  410ca4:	iret   
  410ca5:	cmp    eax,0xe9c96cc9
  410caa:	pop    ebp
  410cab:	les    eax,FWORD PTR [esi]
  410cad:	(bad)  
  410cae:	adc    DWORD PTR [eax+eiz*8],edx
  410cb1:	fbstp  TBYTE PTR [esi]
  410cb3:	pop    ebx
  410cb4:	gs or  eax,0xac19749d
  410cba:	ret    
  410cbb:	js     0x410d3b
  410cbd:	(bad)  
  410cbe:	mov    ebp,0x9f515ede
  410cc3:	and    ch,dl
  410cc5:	push   0xa63ebb05
  410cca:	adc    DWORD PTR [ebx],0x7e0b3321
  410cd0:	adc    al,0x11
  410cd2:	sub    al,0xcf
  410cd4:	pop    ebp
  410cd5:	dec    esi
  410cd6:	jp     0x410c6b
  410cd8:	loope  0x410ccc
  410cda:	dec    ecx
  410cdb:	mov    esp,gs
  410cdd:	ja     0x410cff
  410cdf:	adc    edi,edx
  410ce1:	bound  esi,QWORD PTR [ecx]
  410ce3:	ficom  WORD PTR [esi]
  410ce5:	out    dx,eax
  410ce6:	retf   
  410ce7:	loopne 0x410c84
  410ce9:	(bad)  
  410cea:	lahf   
  410ceb:	sub    ebp,DWORD PTR [ebx+eax*8-0x6]
  410cef:	cmp    eax,0x55f12381
  410cf4:	sub    bl,BYTE PTR [ebp-0x28dc54c0]
  410cfa:	dec    ebx
  410cfb:	sar    ebx,cl
  410cfd:	push   ebp
  410cfe:	jne    0x410cde
  410d00:	cld    
  410d01:	inc    esp
  410d02:	iret   
  410d03:	std    
  410d04:	pop    eax
  410d05:	jbe    0x410cbc
  410d07:	xchg   esi,eax
  410d08:	repz ror DWORD PTR [esi-0x28],0xb3
  410d0d:	inc    eax
  410d0e:	and    DWORD PTR [esi+0x54],0x38
  410d12:	jmp    DWORD PTR [ebx-0x3d]
  410d15:	fadd   QWORD PTR [ebx]
  410d17:	loopne 0x410d0e
  410d19:	pop    edi
  410d1a:	arpl   WORD PTR [ebp-0x5727903d],cx
  410d20:	dec    ecx
  410d21:	mov    ecx,0x9f1b9686
  410d26:	push   cs
  410d27:	shr    BYTE PTR [eax+ebp*8+0x63ab276c],0xd3
  410d2f:	lahf   
  410d30:	shl    ecx,cl
  410d32:	inc    eax
  410d33:	add    DWORD PTR [edx],ebx
  410d35:	data16 sbb BYTE PTR [eax-0x7a303fed],cl
  410d3c:	imul   ebp,esi,0xab46674
  410d42:	mov    al,ds:0xcda7d871
  410d47:	mov    eax,ds:0xd5b4260d
  410d4c:	div    DWORD PTR [edx]
  410d4e:	mov    ds:0x50bf02a4,eax
  410d53:	push   edi
  410d54:	in     al,0x46
  410d56:	jmp    0x89944128
  410d5b:	push   cs
  410d5c:	pop    eax
  410d5d:	and    DWORD PTR [eax+eiz*2+0x4],edx
  410d61:	dec    edi
  410d62:	pop    es
  410d63:	and    esp,DWORD PTR [ecx+eiz*2-0x48]
  410d67:	mov    esp,0x62e7876b
  410d6c:	cli    
  410d6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d6e:	fistp  DWORD PTR [edi+0x25]
  410d71:	xor    al,0x2d
  410d73:	pop    eax
  410d74:	(bad)  
  410d75:	test   al,0xec
  410d77:	sub    DWORD PTR [ebx+0x26],ebx
  410d7a:	adc    ebx,DWORD PTR [edi-0x108e9421]
  410d80:	gs in  al,dx
  410d82:	mov    ebp,DWORD PTR [ebx+0x5b]
  410d85:	shl    BYTE PTR ds:0x520824df,1
  410d8b:	inc    ebp
  410d8c:	lahf   
  410d8d:	xor    BYTE PTR [esi-0x51],dh
  410d90:	or     ebp,DWORD PTR [ebp-0x33]
  410d93:	adc    dh,cl
  410d95:	(bad)  
  410d96:	jmp    DWORD PTR [eax]
  410d98:	inc    esi
  410d99:	xchg   DWORD PTR [ebp+eiz*2+0x47],ebx
  410d9d:	mov    ebx,0xd27e4392
  410da2:	xlat   BYTE PTR ds:[ebx]
  410da3:	jmp    DWORD PTR [eax-0x8c0a866]
  410da9:	xor    cl,dl
  410dab:	sbb    DWORD PTR [esi],0x419f32ca
  410db1:	int3   
  410db2:	xchg   BYTE PTR [ecx-0x38ff8cfd],dl
  410db8:	or     DWORD PTR ds:0xc5c15896,esp
  410dbe:	push   ebp
  410dbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dc0:	out    dx,al
  410dc1:	std    
  410dc2:	test   BYTE PTR [eax+0x3b],0x9f
  410dc6:	xchg   BYTE PTR [edi],bh
  410dc8:	fmul   st(6),st
  410dca:	cmp    ebp,DWORD PTR [esi+ebx*4]
  410dcd:	jmp    0x410d80
  410dcf:	stos   DWORD PTR es:[edi],eax
  410dd0:	jmp    0x410d73
  410dd2:	aad    0xbe
  410dd4:	xor    ah,dl
  410dd6:	in     eax,dx
  410dd7:	rcr    DWORD PTR [eax],cl
  410dd9:	ficom  WORD PTR [eax]
  410ddb:	dec    edi
  410ddc:	imul   ebp,ecx,0xe699b3ca
  410de2:	xor    BYTE PTR [esi],dl
  410de4:	mul    DWORD PTR [ebx-0x563d6b4b]
  410dea:	test   BYTE PTR [ebx],0xea
  410ded:	push   eax
  410dee:	idiv   BYTE PTR [edi-0xc]
  410df1:	ror    DWORD PTR [ebx],1
  410df3:	dec    ebx
  410df4:	rcr    DWORD PTR [ebx-0xd487aac],cl
  410dfa:	pop    ds
  410dfb:	enter  0xba9d,0xf2
  410dff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e00:	mov    cs,WORD PTR [eax-0x3b]
  410e03:	xchg   ebx,eax
  410e04:	push   edi
  410e05:	out    dx,al
  410e06:	pusha  
  410e07:	jmp    0xf242344e
  410e0c:	lock adc eax,0x273303b
  410e12:	cmp    al,0x5a
  410e14:	jg     0x410e41
  410e16:	push   ecx
  410e17:	inc    ebp
  410e18:	xor    eax,DWORD PTR [ebp+0x29390cd3]
  410e1e:	es aam 0x31
  410e21:	lds    ebp,FWORD PTR ds:0x1322abcc
  410e27:	in     eax,0x7c
  410e29:	jb     0x410e8d
  410e2b:	gs jae 0x410e1a
  410e2e:	neg    ebx
  410e30:	and    ah,0xb8
  410e33:	loopne 0x410e27
  410e35:	mov    al,ds:0x8c17737b
  410e3a:	push   es
  410e3b:	into   
  410e3c:	jne    0x410dde
  410e3e:	mov    ds:0xb7b5e87a,al
  410e43:	imul   ecx,esp,0x2f99e9bd
  410e49:	retf   
  410e4a:	jbe    0x410e98
  410e4c:	and    esp,ebx
  410e4e:	mov    ch,0x58
  410e50:	and    bh,BYTE PTR [ebp-0x62]
  410e53:	xor    BYTE PTR [eax-0x5d],al
  410e56:	dec    edi
  410e57:	hlt    
  410e58:	push   eax
  410e59:	add    edx,edx
  410e5b:	enter  0x662a,0xf9
  410e5f:	lods   eax,DWORD PTR ds:[esi]
  410e60:	pop    ecx
  410e61:	test   eax,0xf33f1c7b
  410e66:	jmp    0x5491:0x3e900ed1
  410e6d:	pop    ecx
  410e6e:	inc    edi
  410e6f:	push   0xffffffc2
  410e71:	sub    eax,edi
  410e73:	push   0xffffffb3
  410e75:	sub    BYTE PTR [ecx-0x427e9d2],ch
  410e7b:	mov    edi,ss
  410e7d:	out    0x30,eax
  410e7f:	mov    bl,0x26
  410e81:	retf   
  410e82:	xor    eax,0x1458ca20
  410e87:	cmp    edi,eax
  410e89:	jecxz  0x410eaf
  410e8b:	retf   
  410e8c:	repz sub al,BYTE PTR [ebp+0x1d21e25a]
  410e93:	fsub   DWORD PTR [eax-0x637e7329]
  410e99:	and    DWORD PTR [edi+0x31],ebp
  410e9c:	sahf   
  410e9d:	imul   edi,DWORD PTR [ebx-0x58effd0b],0xffffffe1
  410ea4:	leave  
  410ea5:	mov    dl,0xf6
  410ea7:	jnp    0x410e45
  410ea9:	shl    DWORD PTR [ebx+edx*2],0x31
  410ead:	(bad)  
  410eae:	xchg   BYTE PTR [edx+0x22],ah
  410eb1:	sub    BYTE PTR ds:0xa3d55f1e,bl
  410eb7:	scas   al,BYTE PTR es:[edi]
  410eb8:	sbb    eax,0xa31284a1
  410ebd:	mov    ecx,0xf1f483b1
  410ec2:	mov    ah,0x43
  410ec4:	(bad)  
  410ec5:	test   al,0x59
  410ec7:	cli    
  410ec8:	call   0xfa7e7320
  410ecd:	jo     0x410e6d
  410ecf:	cmovno edx,DWORD PTR [ecx]
  410ed2:	cmc    
  410ed3:	sub    DWORD PTR [edi+0x7a1fa06a],0xffffff81
  410eda:	add    eax,0x23828ffb
  410edf:	out    dx,eax
  410ee0:	xlat   BYTE PTR es:[ebx]
  410ee2:	gs int3 
  410ee4:	hlt    
  410ee5:	pop    edx
  410ee6:	xchg   edx,eax
  410ee7:	test   al,0x85
  410ee9:	enter  0xc8cb,0x8f
  410eed:	out    0xe5,al
  410eef:	cdq    
  410ef0:	mov    edx,0x822e5f4d
  410ef5:	push   es
  410ef6:	xor    ah,BYTE PTR [edi-0x130439ee]
  410efc:	mov    al,ds:0x848ad1e4
  410f01:	ret    0x7f76
  410f04:	cmp    eax,0x8e4afc26
  410f09:	and    BYTE PTR [ebp+0x6d1048ad],dl
  410f0f:	cmp    eax,0xfe1b659d
  410f14:	call   0xd9f5:0x9115a43e
  410f1b:	fdivr  QWORD PTR fs:[eax+0x55a8710f]
  410f22:	(bad)  
  410f23:	in     al,0xf8
  410f25:	push   0xffffff87
  410f27:	xor    eax,0x4f519428
  410f2c:	push   es
  410f2d:	jge    0x410f41
  410f2f:	(bad)  
  410f30:	scas   al,BYTE PTR es:[edi]
  410f31:	pop    ss
  410f32:	jb     0x410f60
  410f34:	or     cl,BYTE PTR [ecx]
  410f36:	sub    DWORD PTR [ebp-0x58196821],esp
  410f3c:	ret    
  410f3d:	mov    dl,0x8e
  410f3f:	mov    ah,0x21
  410f41:	push   ss
  410f42:	mov    dl,0x3c
  410f44:	repz xchg esi,eax
  410f46:	std    
  410f47:	lahf   
  410f48:	nop
  410f49:	loopne 0x410f2c
  410f4b:	inc    edi
  410f4c:	js     0x410f44
  410f4e:	adc    ebx,ebp
  410f50:	jge    0x410f7e
  410f52:	pop    esi
  410f53:	shl    cl,cl
  410f55:	adc    BYTE PTR [ebx],0x56
  410f58:	xor    bl,dh
  410f5a:	inc    eax
  410f5b:	loopne 0x410ef8
  410f5d:	pop    eax
  410f5e:	mov    bl,0x77
  410f60:	aam    0x28
  410f62:	mov    ah,0x13
  410f64:	inc    ecx
  410f65:	jnp    0x410f38
  410f67:	adc    DWORD PTR ds:0xf017460a,0xe372b4e1
  410f71:	(bad)  
  410f72:	nop
  410f73:	push   edx
  410f74:	mov    ah,0xc3
  410f76:	in     al,0x7c
  410f78:	adc    eax,0x18772fdf
  410f7d:	stos   DWORD PTR es:[edi],eax
  410f7e:	sbb    DWORD PTR [ecx],ebp
  410f80:	add    DWORD PTR [ebx],esp
  410f82:	arpl   WORD PTR [esi-0x49d36a5a],di
  410f88:	hlt    
  410f89:	inc    ebx
  410f8a:	fwait
  410f8b:	ds push ds
  410f8d:	xchg   esp,eax
  410f8e:	iret   
  410f8f:	ror    DWORD PTR [ebx-0x7281cd21],cl
  410f95:	cwde   
  410f96:	mov    ds:0x4fdb0d2d,al
  410f9b:	clc    
  410f9c:	popa   
  410f9d:	mov    ds:0x4d23dbcb,al
  410fa2:	mov    esp,es
  410fa4:	mov    al,0xe7
  410fa6:	ins    BYTE PTR es:[edi],dx
  410fa7:	mov    eax,ds:0x72b74db9
  410fac:	jnp    0x41100d
  410fae:	ret    0x4c31
  410fb1:	inc    esi
  410fb2:	fiadd  DWORD PTR [eax]
  410fb4:	repnz test BYTE PTR [eax+0x3e106466],cl
  410fbb:	cdq    
  410fbc:	mov    eax,0x7ef18545
  410fc1:	gs jno 0x411032
  410fc4:	ret    0x742d
  410fc7:	cmp    edi,ebx
  410fc9:	pop    edi
  410fca:	out    dx,al
  410fcb:	loope  0x410f7c
  410fcd:	cmp    al,0xf1
  410fcf:	dec    ecx
  410fd0:	inc    esp
  410fd1:	ret    
  410fd2:	data16 and al,0x51
  410fd5:	mov    eax,ds:0xcfd0154f
  410fda:	jo     0x410fcb
  410fdc:	rol    eax,1
  410fde:	rcr    DWORD PTR [esi+edx*1],1
  410fe1:	xor    al,0x25
  410fe3:	add    eax,0x86dde3c6
  410fe8:	cmp    eax,0x4e93557b
  410fed:	mov    edx,0x3ba8129e
  410ff2:	stos   BYTE PTR es:[edi],al
  410ff3:	jge    0x411061
  410ff5:	xor    ebx,eax
  410ff7:	fldcw  WORD PTR [ecx+0x40]
  410ffa:	pop    ds
  410ffb:	mov    ecx,0x4e7bf71
  411000:	xchg   ecx,eax
  411001:	(bad)  
  411002:	call   0x82f3b0ce
  411007:	test   eax,0x5243c08d
  41100c:	es repz mov dh,0x32
  411010:	xchg   esi,eax
  411011:	stos   BYTE PTR es:[edi],al
  411012:	inc    ecx
  411013:	dec    eax
  411014:	jg     0x411057
  411016:	ins    DWORD PTR es:[edi],dx
  411017:	sbb    BYTE PTR [ebx],ch
  411019:	cmp    BYTE PTR [edi],bl
  41101b:	div    DWORD PTR [eax+ebp*4+0x50c7bb5d]
  411022:	jecxz  0x411089
  411024:	mov    ecx,0x8a7dcb21
  411029:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41102a:	sar    DWORD PTR [eax],cl
  41102c:	mov    dh,0xf4
  41102e:	aaa    
  41102f:	jg     0x411037
  411031:	es mov esp,0xbe833f8b
  411037:	xchg   esp,eax
  411038:	mov    cl,0xaa
  41103a:	jb     0x41108b
  41103c:	mov    ebx,0xe0124ba1
  411041:	outs   dx,DWORD PTR ds:[esi]
  411042:	xchg   ecx,eax
  411043:	pop    esi
  411044:	(bad)  [ecx+0x77d7fd36]
  41104a:	fist   DWORD PTR [ecx-0x38]
  41104d:	dec    edx
  41104e:	popf   
  41104f:	loope  0x41108a
  411051:	push   ebp
  411052:	loope  0x411075
  411054:	lea    eax,ds:0x51c218d9
  41105a:	mov    dh,0x4
  41105c:	inc    esi
  41105d:	push   0xffffffc7
  41105f:	imul   edi
  411061:	fdivr  QWORD PTR [edi+0x75]
  411064:	sbb    ecx,edx
  411066:	and    eax,0xced332cf
  41106b:	mov    ax,0x10e9
  41106f:	or     ebp,DWORD PTR [edi+0x78]
  411072:	fnstcw WORD PTR ds:0x4f85bb7c
  411078:	mov    ebx,0x7b48b121
  41107d:	or     eax,0xa6ca9c46
  411082:	dec    ecx
  411083:	ds push 0x9693d721
  411089:	mov    bl,0xd3
  41108b:	push   es
  41108c:	repnz data16 idiv BYTE PTR [ebx]
  411090:	add    eax,0xe972d695
  411095:	arpl   di,si
  411097:	pop    eax
  411098:	inc    edi
  411099:	popf   
  41109a:	jno    0x4110ad
  41109c:	hlt    
  41109d:	outs   dx,DWORD PTR ds:[esi]
  41109e:	mov    ecx,0xa51b0b1b
  4110a3:	in     al,0x22
  4110a5:	push   edi
  4110a6:	and    eax,0x726ade4c
  4110ab:	dec    ecx
  4110ac:	rol    ebx,0xe5
  4110af:	mov    ds:0x84a02dc4,al
  4110b4:	or     al,0x5d
  4110b6:	stos   DWORD PTR es:[edi],eax
  4110b7:	std    
  4110b8:	scas   al,BYTE PTR es:[edi]
  4110b9:	les    edx,FWORD PTR [edi+0x37]
  4110bc:	jbe    0x411075
  4110be:	inc    ebp
  4110bf:	push   eax
  4110c0:	sbb    eax,0xbf1a6b9b
  4110c5:	mov    esi,0x71e9c93e
  4110ca:	jmp    0xe8ae:0xab84d020
  4110d1:	(bad)  
  4110d2:	rcl    DWORD PTR [ebp+0x771b97f1],cl
  4110d8:	fwait
  4110d9:	cs push es
  4110db:	out    dx,eax
  4110dc:	sub    BYTE PTR [esi+0x34],0xb5
  4110e0:	lods   eax,DWORD PTR ds:[esi]
  4110e1:	out    dx,eax
  4110e2:	jne    0x4110bc
  4110e4:	push   ds
  4110e5:	sub    ch,BYTE PTR [ebp-0x28]
  4110e8:	icebp  
  4110e9:	push   eax
  4110ea:	ffreep st(3)
  4110ec:	mov    ah,dh
  4110ee:	pushf  
  4110ef:	fld    QWORD PTR [esi]
  4110f1:	xchg   ecx,eax
  4110f2:	cmp    BYTE PTR [ebx],al
  4110f4:	mov    WORD PTR [edi],fs
  4110f6:	xchg   edx,eax
  4110f7:	pop    ebp
  4110f8:	in     al,dx
  4110f9:	cmp    edi,eax
  4110fb:	sar    BYTE PTR [eax-0x10],1
  4110fe:	imul   ebp,DWORD PTR [edx+0x5c03974e],0xaeece3a6
  411108:	jno    0x411104
  41110a:	stc    
  41110b:	sbb    BYTE PTR [edi-0x7d],al
  41110e:	jbe    0x41115f
  411110:	cdq    
  411111:	sub    al,0x73
  411113:	dec    edx
  411114:	xchg   BYTE PTR [eax-0x6d],dh
  411117:	das    
  411118:	bound  edi,QWORD PTR [esi+0x76d1516c]
  41111e:	inc    ebx
  41111f:	fistp  DWORD PTR [edx+0x62]
  411122:	pop    edx
  411123:	jge    0x41117a
  411125:	sbb    al,0x78
  411127:	fld    TBYTE PTR [ebx+0x50]
  41112a:	mov    ds:0xab9bfd4b,al
  41112f:	jbe    0x411142
  411131:	xchg   esi,ecx
  411133:	rcl    bh,cl
  411135:	pop    ecx
  411136:	mov    gs,ebx
  411138:	dec    ebx
  411139:	mov    ch,0xef
  41113b:	inc    esp
  41113c:	sahf   
  41113d:	repz adc DWORD PTR [esi-0x4b],0x4cadf09
  411145:	inc    esi
  411146:	inc    ebx
  411147:	jp     0x4110cc
  411149:	inc    edi
  41114a:	sbb    dh,bl
  41114c:	xlat   BYTE PTR ds:[ebx]
  41114d:	lds    ecx,FWORD PTR [ecx]
  41114f:	das    
  411150:	(bad)  
  411151:	int3   
  411152:	mov    dl,0x65
  411154:	jbe    0x4111a6
  411156:	mov    ah,0xe
  411158:	mov    dl,0x11
  41115a:	js     0x411156
  41115c:	dec    eax
  41115d:	sbb    DWORD PTR [edi],esp
  41115f:	out    dx,al
  411160:	imul   bh
  411162:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411163:	push   eax
  411164:	stos   BYTE PTR es:[edi],al
  411165:	shl    BYTE PTR [eax+ecx*8+0x23],1
  411169:	push   eax
  41116a:	mov    ecx,0xdc7d85ec
  41116f:	jnp    0x4111bd
  411171:	inc    ebp
  411172:	outs   dx,BYTE PTR ds:[esi]
  411173:	cli    
  411174:	adc    esp,edi
  411176:	jl     0x411173
  411178:	out    dx,al
  411179:	and    BYTE PTR [esi-0x5f395a10],ah
  41117f:	xor    cl,dh
  411181:	and    esi,DWORD PTR [edi]
  411183:	xor    eax,0x9d1c8eed
  411188:	mov    ebx,0x38f1f90c
  41118d:	(bad)  
  41118f:	std    
  411190:	push   es
  411191:	mov    cl,0xf0
  411193:	pop    esp
  411194:	pop    ds
  411195:	ret    0xd006
  411198:	ins    BYTE PTR es:[edi],dx
  411199:	cdq    
  41119a:	jmp    0x920cdf21
  41119f:	sub    DWORD PTR [edx+0x79],eax
  4111a2:	sahf   
  4111a3:	mov    WORD PTR [esi-0x48],ss
  4111a6:	lea    edi,[ebp-0x1545c878]
  4111ac:	mov    eax,0xc22fa3d6
  4111b1:	fiadd  DWORD PTR [eax-0x6]
  4111b4:	or     al,0x9d
  4111b6:	sbb    dl,BYTE PTR [esi]
  4111b8:	jne    0x411188
  4111ba:	pop    edx
  4111bb:	adc    DWORD PTR [esi],eax
  4111bd:	repz pop esi
  4111bf:	std    
  4111c0:	dec    ebx
  4111c1:	fadd   QWORD PTR ss:[eax-0x68]
  4111c5:	imul   edx,DWORD PTR [edx-0x717f499d],0x1e2c4834
  4111cf:	mov    ebp,0x8fdaab34
  4111d4:	call   0xf2d5:0x8ea7d637
  4111db:	cld    
  4111dc:	mov    cl,0x2b
  4111de:	mov    ebp,gs
  4111e0:	repnz add BYTE PTR [eax+0xc],cl
  4111e4:	pop    ecx
  4111e5:	adc    ebx,DWORD PTR [eax-0x455e8f69]
  4111eb:	add    al,0x94
  4111ed:	xchg   esi,eax
  4111ee:	xchg   esp,eax
  4111ef:	iret   
  4111f0:	add    dl,BYTE PTR [edi]
  4111f2:	aam    0x59
  4111f4:	push   edi
  4111f5:	pop    ebx
  4111f6:	daa    
  4111f7:	test   BYTE PTR ss:[edx+0x572ff0d6],bh
  4111fe:	(bad)  
  4111ff:	out    0xdc,al
  411201:	mov    ch,0x8a
  411203:	cmp    al,0x24
  411205:	cmp    edi,DWORD PTR [ecx]
  411207:	outs   dx,BYTE PTR ds:[esi]
  411208:	enter  0x3b15,0xa4
  41120c:	dec    ecx
  41120d:	call   0xfb055fcd
  411212:	adc    cl,BYTE PTR [edi+edx*2]
  411215:	mov    ?,WORD PTR [ecx-0x33]
  411218:	lods   al,BYTE PTR ds:[esi]
  411219:	and    dl,dl
  41121b:	sub    DWORD PTR [eax-0xd4028a0],edi
  411221:	rol    ebp,cl
  411223:	popa   
  411224:	ror    DWORD PTR [esi-0x68],0x61
  411228:	iret   
  411229:	and    al,0xf
  41122b:	jno    0x411260
  41122d:	test   DWORD PTR [ecx],0x2534723c
  411233:	mov    cl,0xb8
  411235:	pop    es
  411236:	cmp    BYTE PTR [ebx-0x80],dl
  411239:	mov    dh,0x2c
  41123b:	jae    0x4111e2
  41123d:	mov    ah,0x76
  41123f:	repnz mov esi,0xefdf36a7
  411245:	xchg   DWORD PTR [ecx-0x50b6c58a],edx
  41124b:	test   DWORD PTR [eax-0x4f48bda],edx
  411251:	mov    al,0x59
  411253:	fnstsw WORD PTR [ecx-0x6d282305]
  411259:	(bad)  
  41125a:	lods   eax,DWORD PTR ds:[esi]
  41125b:	test   eax,0x6fc1e6cd
  411260:	aaa    
  411261:	mov    esi,DWORD PTR [ecx+edi*1]
  411264:	jnp    0x41128c
  411266:	lods   al,BYTE PTR ds:[esi]
  411267:	lods   eax,DWORD PTR ds:[esi]
  411268:	mov    ds:0xbb6319ae,eax
  41126d:	mov    dl,0x67
  41126f:	in     al,dx
  411270:	or     edi,edi
  411272:	push   ds
  411273:	and    bh,BYTE PTR [ebx-0x71]
  411276:	mov    al,ds:0x2b1d0f77
  41127b:	xlat   BYTE PTR ds:[ebx]
  41127c:	mov    ds:0x1a29db80,eax
  411281:	push   eax
  411282:	jge    0x4112d0
  411284:	mov    bh,0x14
  411286:	mov    ah,0x1b
  411289:	dec    ebx
  41128a:	lods   eax,DWORD PTR ds:[esi]
  41128b:	cmp    ebp,DWORD PTR [ebx-0x27ea8499]
  411291:	jns    0x411260
  411293:	xchg   ecx,eax
  411294:	add    al,BYTE PTR [ecx+0x4fac4741]
  41129a:	pop    esp
  41129b:	outs   dx,DWORD PTR ds:[esi]
  41129c:	add    DWORD PTR [edx+0x54],esi
  41129f:	clc    
  4112a0:	div    BYTE PTR [ebx]
  4112a2:	icebp  
  4112a3:	scas   al,BYTE PTR es:[edi]
  4112a4:	jno    0x4112b4
  4112a6:	add    DWORD PTR [esp+esi*4],0x453327f2
  4112ad:	lea    edx,[ebx-0x38a56839]
  4112b3:	push   ebp
  4112b4:	jb     0x41123e
  4112b6:	fs mov cl,0xe4
  4112b9:	push   0xffffffbb
  4112bb:	xor    DWORD PTR [eax-0x22c5a5dc],eax
  4112c1:	lock icebp 
  4112c3:	jg     0x4112e2
  4112c5:	and    ebp,ecx
  4112c7:	jmp    0x49b7:0x51eb5a12
  4112ce:	aam    0xd1
  4112d0:	je     0x411266
  4112d2:	lds    eax,FWORD PTR [edx-0x7556f1aa]
  4112d8:	enter  0x2459,0xd
  4112dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112dd:	adc    ah,dh
  4112df:	cwde   
  4112e0:	iret   
  4112e1:	pushf  
  4112e2:	mov    bh,0xa
  4112e4:	mov    edx,DWORD PTR [edi+0x775d9723]
  4112ea:	push   esp
  4112eb:	xor    BYTE PTR [eax],dh
  4112ed:	mov    edx,0x5750a136
  4112f2:	lds    ecx,FWORD PTR [edi+0x6]
  4112f5:	jecxz  0x41136d
  4112f7:	jo     0x4112aa
  4112f9:	jg     0x4112d4
  4112fb:	push   eax
  4112fc:	dec    ecx
  4112fd:	pop    esp
  4112fe:	add    BYTE PTR [ecx-0x384faff],dl
  411304:	adc    ch,BYTE PTR ds:0x9385cdc5
  41130a:	push   ss
  41130b:	cmp    ebp,eax
  41130d:	cmp    dh,BYTE PTR ds:0xb32d437f
  411313:	seta   dh
  411316:	dec    ecx
  411317:	mov    WORD PTR [eax+0xe],cs
  41131a:	sub    al,0xbe
  41131c:	mov    cl,0x26
  41131e:	inc    eax
  41131f:	jmp    0x411301
  411321:	cmp    dh,BYTE PTR [eax-0x3b]
  411324:	fst    DWORD PTR [ebx]
  411327:	in     al,0xdc
  411329:	retf   0x726f
  41132c:	(bad)  
  41132d:	cmp    ebx,esi
  41132f:	scas   al,BYTE PTR es:[edi]
  411330:	test   al,0xc
  411332:	mov    bl,0x42
  411334:	inc    ebp
  411335:	adc    ebx,DWORD PTR [eax]
  411337:	lds    edx,FWORD PTR [esi+0x16ec9962]
  41133d:	ss push ss
  41133f:	or     al,0x9c
  411341:	inc    ebp
  411342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411343:	inc    eax
  411344:	pop    esp
  411345:	pop    es
  411346:	jecxz  0x411356
  411348:	das    
  411349:	cmp    dh,BYTE PTR [ebx-0x2310aa51]
  41134f:	imul   eax,DWORD PTR [esi-0x64c79f48],0x7f018b38
  411359:	out    0x2e,al
  41135b:	mov    esi,0xcf68c5bf
  411360:	shl    cl,0x19
  411363:	cwde   
  411364:	xchg   ecx,eax
  411365:	shufps xmm3,xmm0,0x67
  411369:	shl    BYTE PTR [ecx+0x6c49c2a9],1
  41136f:	pop    edx
  411370:	(bad)  
  411371:	mov    WORD PTR [esi],es
  411373:	pop    ebp
  411374:	imul   esp,DWORD PTR [ebp+0x7378607d],0x9adfaea9
  41137e:	xchg   esi,eax
  41137f:	push   cs
  411380:	shl    BYTE PTR [ebx],0x85
  411383:	cmc    
  411384:	std    
  411385:	jp     0x41134d
  411387:	call   0xfa204043
  41138c:	and    eax,0xb87fc2bf
  411391:	sbb    edi,DWORD PTR [edi-0x748ce5fb]
  411397:	in     al,dx
  411398:	xor    BYTE PTR [esi-0x4fd3cef2],0xd6
  41139f:	xchg   edi,eax
  4113a0:	push   ebp
  4113a1:	repnz mov esi,0x71f7b68a
  4113a7:	and    ah,BYTE PTR [esi]
  4113a9:	pop    es
  4113aa:	call   0xf1b9:0xde787649
  4113b1:	xchg   esp,eax
  4113b2:	outs   dx,DWORD PTR ds:[esi]
  4113b3:	sub    eax,0xafb467d4
  4113b8:	repnz adc esp,esp
  4113bb:	or     BYTE PTR [esi],cl
  4113bd:	adc    DWORD PTR [edi+0x42cca5f1],ecx
  4113c3:	lahf   
  4113c4:	add    bl,BYTE PTR [ebx-0x1a2fb1c7]
  4113ca:	arpl   WORD PTR [ecx-0xc],bx
  4113cd:	push   ebx
  4113ce:	cmc    
  4113cf:	mov    edi,DWORD PTR [ecx+eiz*2+0x61]
  4113d3:	mov    eax,ds:0xdf86a73f
  4113d8:	js     0x411420
  4113da:	xchg   edx,eax
  4113db:	stos   DWORD PTR es:[edi],eax
  4113dc:	test   al,0x1
  4113de:	sbb    al,0x94
  4113e0:	cmp    DWORD PTR [ecx+edi*2-0x2dad2441],0xffffff80
  4113e8:	imul   edi,DWORD PTR [ebx],0x21
  4113eb:	jmp    0x67c9:0x680bef32
  4113f2:	das    
  4113f3:	xchg   esi,eax
  4113f4:	cld    
  4113f5:	sbb    eax,0x81e46def
  4113fa:	add    al,0x1c
  4113fc:	sti    
  4113fd:	xor    ebp,esi
  4113ff:	js     0x4113b8
  411401:	or     BYTE PTR [edi],0xf4
  411404:	popf   
  411405:	cdq    
  411406:	dec    ebp
  411407:	add    BYTE PTR [edx+0x127c9ad2],ah
  41140d:	jg     0x411449
  41140f:	pop    eax
  411410:	loop   0x4113a6
  411412:	aas    
  411413:	xchg   edi,eax
  411414:	ja     0x411481
  411416:	dec    ebp
  411417:	mov    bl,0xe9
  411419:	inc    BYTE PTR [eax]
  41141b:	fld    QWORD PTR [ecx+ebp*1+0x49]
  41141f:	hlt    
  411420:	je     0x4113fb
  411422:	mov    eax,0x630001b7
  411427:	and    DWORD PTR [ecx-0x43],esp
  41142a:	sub    eax,0x3f8e2963
  41142f:	stos   DWORD PTR es:[edi],eax
  411430:	inc    eax
  411431:	sti    
  411432:	inc    ebx
  411433:	retf   
  411434:	and    al,BYTE PTR [edx+0x43]
  411437:	ins    DWORD PTR es:[edi],dx
  411438:	mov    eax,0x7b74ffbe
  41143d:	or     BYTE PTR [esp+ecx*4],0x46
  411441:	icebp  
  411442:	mov    esp,0x8c72e3c9
  411447:	das    
  411448:	dec    eax
  411449:	(bad)  
  41144a:	sbb    ah,bh
  41144c:	jno    0x41149b
  41144e:	mov    ds:0x62bf3b0f,al
  411453:	dec    ecx
  411454:	push   esi
  411455:	and    bl,0xc8
  411458:	js     0x41147a
  41145a:	inc    edx
  41145b:	(bad)  
  41145c:	leave  
  41145d:	adc    bh,cl
  41145f:	fcomp  DWORD PTR [esi+0x27]
  411462:	pop    edi
  411463:	adc    BYTE PTR [eax+0x79406617],0x64
  41146a:	and    eax,0x8011d556
  41146f:	pop    ecx
  411470:	sub    ebx,DWORD PTR fs:[ecx]
  411473:	adc    al,0x2c
  411475:	inc    esp
  411476:	inc    edi
  411477:	pop    esp
  411478:	mov    BYTE PTR [ebx+0x2b823c75],dh
  41147e:	push   0xffffffb2
  411480:	adc    DWORD PTR [ebx+eax*8-0x41e1cd94],ebp
  411487:	xchg   ebx,eax
  411488:	cmp    al,BYTE PTR [esi+0x66]
  41148b:	push   0x1d
  41148d:	popf   
  41148e:	pop    edi
  41148f:	ret    
  411490:	je     0x41142d
  411492:	addr16 fmul st(4),st
  411495:	nop
  411496:	adc    ecx,DWORD PTR [edx+0x25]
  411499:	mov    esi,0x10c0ae99
  41149e:	cwde   
  41149f:	lods   al,BYTE PTR ds:[esi]
  4114a0:	or     DWORD PTR [edi-0x45a81aab],eax
  4114a6:	xor    eax,0x64713451
  4114ab:	aaa    
  4114ac:	and    DWORD PTR [ecx-0x6673ad95],ecx
  4114b2:	scas   al,BYTE PTR es:[edi]
  4114b3:	mov    cl,0x64
  4114b5:	sub    DWORD PTR [eax+edx*1-0x77dd993b],edx
  4114bc:	call   0xf508:0xa0155be1
  4114c3:	pop    esi
  4114c4:	push   0x12
  4114c6:	push   cs
  4114c7:	inc    ebx
  4114c8:	cli    
  4114c9:	in     eax,dx
  4114ca:	std    
  4114cb:	add    al,0x6b
  4114cd:	pop    ebx
  4114ce:	sbb    DWORD PTR [ecx+0x4ba7ef94],ebp
  4114d4:	cmp    dh,ch
  4114d6:	adc    bl,al
  4114d8:	jne    0x4114b3
  4114da:	dec    esi
  4114db:	sub    eax,0x39f09b19
  4114e0:	sahf   
  4114e1:	shl    DWORD PTR [edi-0x42b4667f],1
  4114e7:	xor    al,cl
  4114e9:	daa    
  4114ea:	mov    bh,0x8b
  4114ec:	push   ecx
  4114ed:	pop    es
  4114ee:	daa    
  4114ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114f0:	test   cl,dh
  4114f2:	push   0x93812c27
  4114f7:	dec    ebx
  4114f8:	sti    
  4114f9:	cmp    esp,0x4db5daac
  4114ff:	push   ss
  411500:	sub    ebx,DWORD PTR [eax]
  411502:	pop    edx
  411503:	or     ebp,esp
  411505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411506:	ss lahf 
  411508:	bound  esp,QWORD PTR [esi]
  41150a:	cli    
  41150b:	xchg   ebp,eax
  41150c:	out    dx,al
  41150d:	out    dx,al
  41150e:	cdq    
  41150f:	iret   
  411510:	cld    
  411511:	or     eax,ecx
  411513:	(bad)
  411516:	sbb    eax,0x4525aaf1
  41151b:	jno    0x411595
  41151d:	test   ecx,ebx
  41151f:	xchg   esi,eax
  411520:	push   ss
  411521:	neg    BYTE PTR [ebp-0x34]
  411524:	shl    DWORD PTR fs:[esi+0x15],0xcf
  411529:	outs   dx,BYTE PTR ds:[esi]
  41152a:	lea    eax,[ebp+0x320ada0c]
  411530:	or     edx,esi
  411532:	xchg   esp,eax
  411533:	sub    edx,DWORD PTR fs:[esi-0x4b]
  411537:	pop    esi
  411538:	dec    ebp
  411539:	mov    esi,0x5bd822d6
  41153e:	fwait
  41153f:	jno    0x4115ab
  411541:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411542:	push   0xffffffe3
  411544:	repz jbe 0x4114e9
  411547:	jo     0x4115b9
  411549:	mov    WORD PTR ds:0xb93221a6,?
  41154f:	in     eax,0x5a
  411551:	jmp    0x4115c6
  411553:	jb     0x4114f1
  411555:	mov    al,ds:0xd5a316f4
  41155a:	in     al,0x70
  41155c:	sbb    edi,ecx
  41155e:	aad    0xce
  411560:	push   eax
  411561:	imul   eax,DWORD PTR [ebx-0x52f595e4],0x66
  411568:	mov    al,ds:0x6a62307d
  41156d:	aam    0xa3
  41156f:	sbb    ch,ah
  411571:	sub    esp,DWORD PTR [esi+0x7c]
  411574:	xchg   esi,eax
  411575:	pop    es
  411576:	rcr    BYTE PTR [ecx-0x7d],1
  411579:	jbe    0x411554
  41157b:	push   eax
  41157c:	sub    al,BYTE PTR [ebp+0x645ae75]
  411582:	mov    dh,BYTE PTR [ecx+ebx*8+0x76]
  411586:	sbb    dh,BYTE PTR es:[eax]
  411589:	aam    0xd5
  41158b:	fadd   QWORD PTR [edx+0x3b84e309]
  411591:	loope  0x4115a4
  411593:	push   0x65
  411595:	dec    ebp
  411596:	adc    bl,bh
  411598:	ins    BYTE PTR es:[edi],dx
  411599:	retf   0xc7d5
  41159c:	dec    ebp
  41159d:	pop    esi
  41159e:	int    0xa3
  4115a0:	mov    cl,0xc3
  4115a2:	in     al,0xc5
  4115a4:	imul   eax,DWORD PTR [ecx+0x62],0x6c
  4115a8:	out    dx,al
  4115a9:	and    DWORD PTR [edi],edi
  4115ab:	aas    
  4115ac:	lea    esp,[esi+0x79]
  4115af:	(bad)  
  4115b0:	fwait
  4115b1:	add    BYTE PTR [edx+eax*2-0x585c1e6b],dh
  4115b8:	or     DWORD PTR [ecx-0x10],ebp
  4115bb:	mov    esi,0x39934ec7
  4115c0:	pushf  
  4115c1:	fisub  WORD PTR [edi-0x2ce73ebc]
  4115c7:	mov    al,0x81
  4115c9:	loopne 0x411607
  4115cb:	mov    ebp,0x203182ee
  4115d0:	sar    DWORD PTR [ebp-0x29],0x11
  4115d4:	enter  0xf801,0xad
  4115d8:	leave  
  4115d9:	mov    BYTE PTR [ebp+0x6010dba6],bh
  4115df:	mov    BYTE PTR [esi+0x6e103014],cl
  4115e5:	sbb    dl,BYTE PTR [esi]
  4115e7:	in     eax,0xac
  4115e9:	pop    eax
  4115ea:	icebp  
  4115eb:	xchg   BYTE PTR [ecx+0x23],bh
  4115ee:	inc    edi
  4115ef:	daa    
  4115f0:	sub    al,bl
  4115f2:	jnp    0x411651
  4115f4:	jle    0x411641
  4115f6:	or     esp,ebx
  4115f8:	pop    esp
  4115f9:	mov    ds:0x474e1e20,al
  4115fe:	jae    0x41167c
  411600:	stos   DWORD PTR es:[edi],eax
  411601:	pop    edi
  411602:	xchg   edi,eax
  411603:	mov    BYTE PTR [ebx],ah
  411605:	pop    esp
  411606:	inc    BYTE PTR [esi+0x5c]
  411609:	rol    bl,cl
  41160b:	in     al,0x47
  41160d:	push   edi
  41160e:	pop    eax
  41160f:	fisub  WORD PTR [edx-0x14]
  411612:	cmc    
  411613:	ds jmp 0xd3ce:0xab8af519
  41161b:	pop    ds
  41161c:	test   bl,bh
  41161e:	mul    BYTE PTR [esi+0x2a]
  411621:	outs   dx,BYTE PTR ds:[esi]
  411622:	sbb    eax,0x2e930cfa
  411627:	jmp    0x411617
  411629:	or     cl,BYTE PTR [ebx-0x6c]
  41162c:	js     0x41165e
  41162e:	out    dx,eax
  41162f:	cli    
  411630:	inc    esi
  411631:	xor    eax,0xdaceb4ac
  411636:	sbb    esp,DWORD PTR [eax+0x45d9fba0]
  41163c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41163d:	cli    
  41163e:	mov    ds:0x311f98d3,al
  411643:	dec    esp
  411644:	push   ss
  411645:	fucomp st(1)
  411647:	sbb    eax,0xac03b0b0
  41164c:	ins    BYTE PTR es:[edi],dx
  41164d:	inc    eax
  41164e:	jae    0x4116c4
  411650:	push   0x3d
  411652:	cmp    al,0x2d
  411654:	mov    eax,0x6324a1ad
  411659:	int    0x82
  41165b:	fcomp  DWORD PTR [ecx+0x18616a45]
  411661:	loopne 0x4115ff
  411663:	inc    edi
  411664:	ss push 0xffffffc5
  411667:	out    dx,al
  411668:	gs push 0xf
  41166b:	test   DWORD PTR [edi+0x4],eax
  41166e:	cwde   
  41166f:	and    eax,eax
  411671:	sbb    bl,BYTE PTR [edx-0x29]
  411674:	sbb    eax,0x7104251c
  411679:	or     BYTE PTR [esi-0x1d1e14f0],dh
  41167f:	repnz adc ecx,DWORD PTR [ecx-0x5b]
  411683:	push   ebx
  411684:	and    ch,BYTE PTR [eax]
  411686:	xor    al,0x2
  411688:	int3   
  411689:	or     BYTE PTR [ebx],bl
  41168b:	mov    edx,0xa2e4fe6a
  411690:	pop    ds
  411691:	mov    esi,0x4dd249f9
  411696:	fstp   QWORD PTR [edi]
  411698:	imul   ebx,edx,0x17889fe
  41169e:	enter  0xc7aa,0xf
  4116a2:	call   0x531a818d
  4116a7:	(bad)  
  4116a8:	add    BYTE PTR [edx-0x28],ch
  4116ab:	adc    ah,BYTE PTR [esi-0x59f259bb]
  4116b1:	mov    ebp,0x9ef2fdee
  4116b6:	pop    ebp
  4116b7:	pop    eax
  4116b8:	dec    eax
  4116b9:	or     BYTE PTR [esi+0x33041e92],al
  4116bf:	pushf  
  4116c0:	lods   eax,DWORD PTR ds:[esi]
  4116c1:	clc    
  4116c2:	shr    DWORD PTR [ebx+0x2d],1
  4116c5:	or     ah,al
  4116c7:	cmp    dl,bl
  4116c9:	mov    ch,0xab
  4116cb:	fdiv   DWORD PTR [edx-0x5b]
  4116ce:	inc    ebp
  4116cf:	cmp    ebx,ebx
  4116d1:	in     eax,0x42
  4116d3:	xchg   edi,eax
  4116d4:	cmp    DWORD PTR [edi-0x6b],ebx
  4116d7:	push   ebx
  4116d8:	retf   0x5547
  4116db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116dc:	add    BYTE PTR [edi],al
  4116de:	dec    edi
  4116df:	cld    
  4116e0:	xor    BYTE PTR [edx-0x1bc25401],bh
  4116e6:	push   edx
  4116e7:	fs in  eax,dx
  4116e9:	and    ecx,DWORD PTR [ecx+0x2c3004ee]
  4116ef:	lahf   
  4116f0:	(bad)  
  4116f1:	not    esi
  4116f3:	mov    edx,0xa71d0e59
  4116f8:	mov    bl,ah
  4116fa:	pushf  
  4116fb:	pop    ss
  4116fc:	mov    dl,BYTE PTR [esi]
  4116fe:	ret    
  4116ff:	push   0xffffff81
  411701:	xor    dh,BYTE PTR [esi+0x2d]
  411704:	retf   
  411705:	lock das 
  411707:	(bad)  
  411709:	ret    0xd519
  41170c:	rcl    BYTE PTR [ecx],cl
  41170e:	aad    0xc9
  411710:	cmc    
  411711:	push   esp
  411712:	cwde   
  411713:	push   es
  411714:	not    ebx
  411716:	idiv   BYTE PTR [edi+0x1e7dc796]
  41171c:	nop
  41171d:	loope  0x4116a2
  41171f:	(bad)  
  411720:	dec    ecx
  411721:	cdq    
  411722:	sbb    eax,0x70f59bce
  411727:	push   edi
  411728:	jle    0x411735
  41172a:	out    dx,eax
  41172b:	and    esi,0x2f9ea817
  411731:	mov    ds:0xd1cbbab1,eax
  411736:	ficomp DWORD PTR [ebx-0x9a43f9d]
  41173c:	and    esi,DWORD PTR [ecx]
  41173e:	mov    eax,ds:0xffa03b46
  411743:	pop    eax
  411744:	mov    ah,0xef
  411746:	stos   BYTE PTR es:[edi],al
  411747:	cwde   
  411748:	push   cs
  411749:	test   eax,0xd602edb8
  41174e:	int3   
  41174f:	sbb    bl,BYTE PTR [ebx+eax*2]
  411752:	mov    al,BYTE PTR ds:0x33be5696
  411758:	xchg   esi,eax
  411759:	fdiv   DWORD PTR [eax]
  41175b:	sub    al,BYTE PTR [ecx+eax*2+0x35c7f1bd]
  411762:	or     BYTE PTR [esi-0x14],0x89
  411766:	mov    esi,edi
  411768:	cmp    al,0x33
  41176a:	dec    edx
  41176b:	jmp    0x411755
  41176d:	in     eax,0x3f
  41176f:	jno    0x411717
  411771:	das    
  411772:	stos   DWORD PTR es:[edi],eax
  411773:	out    dx,al
  411774:	(bad)  
  411775:	inc    edx
  411776:	rcl    DWORD PTR [edx+0x58],1
  411779:	xchg   esi,eax
  41177a:	(bad)  
  41177b:	loopne 0x4117f1
  41177d:	bound  edx,QWORD PTR [ebp+0x2be9ac2e]
  411783:	ror    ebp,0xbf
  411786:	sahf   
  411787:	xor    ch,dl
  411789:	adc    cl,al
  41178b:	repnz push ebp
  41178d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41178e:	pop    ds
  41178f:	sub    dh,BYTE PTR [ebx-0x2d]
  411792:	mov    bl,0x7a
  411794:	jno    0x4117d1
  411796:	mov    edx,DWORD PTR [ebx+0x475cbdcd]
  41179c:	mov    ebx,0x434b1f0d
  4117a1:	arpl   WORD PTR [edx-0x7b87c434],di
  4117a7:	dec    esp
  4117a8:	enter  0x2453,0xa9
  4117ac:	cmp    cl,BYTE PTR [ebx]
  4117ae:	mov    ah,0xe1
  4117b0:	clc    
  4117b1:	jo     0x41178c
  4117b3:	es mov bh,0xd
  4117b6:	pop    edx
  4117b7:	xor    DWORD PTR [edx-0x1cba061d],esi
  4117bd:	es pop ebx
  4117bf:	dec    esi
  4117c0:	sub    edx,DWORD PTR ds:0x68355f70
  4117c6:	sub    al,0x15
  4117c8:	fadd   st(5),st
  4117ca:	aad    0x8b
  4117cc:	sub    edx,esp
  4117ce:	popf   
  4117cf:	sbb    esi,esp
  4117d1:	add    esp,DWORD PTR [edx+0x32cbbbe]
  4117d7:	ret    
  4117d8:	and    al,0x20
  4117da:	cld    
  4117db:	xchg   edi,eax
  4117dc:	mov    eax,0x82bc3493
  4117e1:	fldcw  WORD PTR [edi-0x54cdc6d2]
  4117e7:	jmp    0xda41:0x9a576837
  4117ee:	mov    bl,0xaa
  4117f0:	lods   al,BYTE PTR ds:[esi]
  4117f1:	adc    eax,0x2f19db1d
  4117f6:	push   ebp
  4117f7:	add    BYTE PTR [ecx-0x2ab0de93],bl
  4117fd:	adc    edx,DWORD PTR [eax]
  4117ff:	sbb    bh,BYTE PTR [esi+0x490fbb3d]
  411805:	ficomp DWORD PTR [esi+0x51e8e3a3]
  41180b:	add    ebx,DWORD PTR [edx-0x6fd4d553]
  411811:	pop    ebp
  411812:	sub    eax,0x73294093
  411817:	sbb    BYTE PTR [ebp+0x47506b17],dl
  41181d:	scas   al,BYTE PTR es:[edi]
  41181e:	push   eax
  41181f:	cwde   
  411820:	in     eax,dx
  411821:	fisub  DWORD PTR [edx+0x31]
  411824:	mov    al,ds:0x8503ed36
  411829:	ror    DWORD PTR [ebp+0x774dadc0],cl
  41182f:	es add edi,edx
  411832:	mov    esi,?
  411834:	jle    0x411885
  411836:	sub    eax,0xe7723c53
  41183b:	or     eax,0x84bb4c05
  411840:	fadd   QWORD PTR [ecx+0x320d64d5]
  411846:	or     al,0x10
  411848:	cmc    
  411849:	dec    ebx
  41184a:	sub    DWORD PTR [edi+0x44],ebx
  41184d:	mov    bl,BYTE PTR [edx+0x52]
  411850:	jae    0x4118cf
  411852:	add    ecx,esi
  411854:	lahf   
  411855:	fsub   QWORD PTR [esp+esi*4]
  411858:	popa   
  411859:	or     DWORD PTR [edx-0x2994f939],edi
  41185f:	ds mov esp,0x71624c9e
  411865:	or     DWORD PTR [esi+0x66],ecx
  411868:	retf   0xa242
  41186b:	lods   eax,DWORD PTR ds:[esi]
  41186c:	and    al,0x91
  41186e:	push   ds
  41186f:	(bad)  
  411870:	sub    bh,al
  411872:	mov    bh,0x20
  411874:	fisub  WORD PTR [ebp-0x2cdb5535]
  41187a:	cmp    al,0xd6
  41187c:	test   ecx,eax
  41187e:	sbb    dh,BYTE PTR [ecx+0xb441329]
  411884:	lea    esi,[edi+edi*8]
  411887:	mov    esp,0x8723fabf
  41188c:	mov    BYTE PTR ds:0x9d0fca3,0xb3
  411893:	loope  0x411887
  411895:	xor    eax,0xf0dade1d
  41189a:	aam    0xcb
  41189c:	mov    DWORD PTR [esi+0x2a],esp
  41189f:	dec    edi
  4118a0:	xchg   ebx,eax
  4118a1:	mov    gs,WORD PTR [eax+esi*1]
  4118a4:	rcl    dl,0x51
  4118a7:	fsub   QWORD PTR [edi+0x1e]
  4118aa:	mov    ebp,0x6e1774b9
  4118af:	add    BYTE PTR [edi],bl
  4118b1:	sub    bh,BYTE PTR [ecx]
  4118b3:	mov    al,ds:0x3f649782
  4118b8:	xchg   edx,eax
  4118b9:	inc    esp
  4118ba:	int    0x1a
  4118bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118bd:	xchg   edx,eax
  4118be:	jl     0x4118da
  4118c0:	xchg   edi,eax
  4118c1:	dec    edx
  4118c2:	push   esp
  4118c3:	iret   
  4118c4:	jg     0x4118bc
  4118c6:	cwde   
  4118c7:	mov    edi,0x304fc15f
  4118cc:	sub    BYTE PTR [edx+0x27],cl
  4118cf:	iret   
  4118d0:	out    dx,al
  4118d1:	lods   eax,DWORD PTR ds:[esi]
  4118d2:	push   edx
  4118d3:	mov    al,0x74
  4118d5:	jnp    0x411953
  4118d7:	test   dh,bh
  4118d9:	cdq    
  4118da:	cs icebp 
  4118dc:	jmp    0x7514:0x420914e0
  4118e3:	push   cs
  4118e4:	dec    ebp
  4118e5:	test   al,0x97
  4118e7:	mov    al,0xbd
  4118e9:	cwde   
  4118ea:	(bad)  
  4118eb:	ret    
  4118ec:	call   0xbfc9a179
  4118f1:	push   edi
  4118f2:	and    bl,BYTE PTR [esi-0x12]
  4118f5:	dec    ebp
  4118f6:	xor    DWORD PTR [esi+0x3088637],esi
  4118fc:	mov    al,0x57
  4118fe:	jge    0x411903
  411900:	pop    ds
  411901:	jmp    DWORD PTR [ebx-0x63ff7ec0]
  411907:	lods   al,BYTE PTR ds:[esi]
  411908:	sbb    al,0xfc
  41190a:	pop    ebp
  41190b:	cli    
  41190c:	leave  
  41190d:	out    0xb7,eax
  41190f:	or     ecx,DWORD PTR [ebp-0x7b401fce]
  411915:	cs sahf 
  411917:	mov    fs,WORD PTR [eax+0x56]
  41191a:	mov    eax,0x2d7f504
  41191f:	(bad)  
  411920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411921:	add    al,0xba
  411923:	mov    ah,0xc4
  411925:	cmp    al,0x5d
  411927:	pop    ecx
  411928:	mov    ebx,0x23bc2253
  41192d:	cs push cs
  41192f:	ins    DWORD PTR es:[edi],dx
  411930:	lds    ecx,FWORD PTR [esi-0x53c823c4]
  411936:	pop    edi
  411937:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411938:	sbb    ecx,ebp
  41193a:	outs   dx,BYTE PTR ds:[esi]
  41193b:	js     0x41192c
  41193d:	cmp    ebp,ebp
  41193f:	sub    eax,edi
  411941:	out    0xb8,al
  411943:	push   0x1a
  411945:	inc    dh
  411947:	mov    BYTE PTR [eax+edx*8+0xb],bl
  41194b:	adc    DWORD PTR [eax+0x13],esi
  41194e:	dec    edi
  41194f:	or     bh,BYTE PTR [ecx+edx*1+0x6a]
  411953:	lahf   
  411954:	sbb    ch,bh
  411956:	or     DWORD PTR [edi-0x21],esp
  411959:	pushf  
  41195a:	xchg   ebx,eax
  41195b:	inc    ebx
  41195c:	in     al,dx
  41195d:	push   cs
  41195e:	mov    bl,0xec
  411960:	xor    DWORD PTR ds:0xd517ec7a,esi
  411966:	pop    edx
  411967:	lahf   
  411968:	jle    0x4119a5
  41196a:	xlat   BYTE PTR ds:[ebx]
  41196b:	aas    
  41196c:	shl    DWORD PTR [eax+0x1b],cl
  41196f:	jecxz  0x41197e
  411971:	xor    al,0x98
  411973:	lock mov ds:0x98f655a3,al
  411979:	lds    ecx,FWORD PTR [esi-0x12495c5c]
  41197f:	fisub  DWORD PTR [esi+ebx*2+0x4829ab55]
  411986:	push   esi
  411987:	jmp    0x411945
  411989:	sub    eax,0xd246a71f
  41198e:	and    DWORD PTR [ebx],ebp
  411990:	and    DWORD PTR [ecx],edx
  411992:	xchg   esi,eax
  411993:	clc    
  411994:	out    dx,al
  411995:	lock bound ebp,QWORD PTR [eax+ebx*1-0xf]
  41199a:	fild   QWORD PTR [eax]
  41199c:	sahf   
  41199d:	nop
  41199e:	shr    DWORD PTR [edx-0x7d99bc0d],1
  4119a4:	jae    0x4119a3
  4119a6:	test   al,0xe9
  4119a8:	mov    edx,0x55eea83c
  4119ad:	lods   al,BYTE PTR ds:[esi]
  4119ae:	xor    ah,BYTE PTR [edi-0x71]
  4119b1:	iret   
  4119b2:	push   ebx
  4119b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119b4:	call   0x5902:0x9459d6ae
  4119bb:	mov    bh,0xc4
  4119bd:	pop    ebp
  4119be:	(bad)  
  4119bf:	sti    
  4119c0:	and    eax,edi
  4119c2:	xchg   ebx,eax
  4119c3:	(bad)  
  4119c5:	les    eax,FWORD PTR [edx+0x51]
  4119c8:	cmc    
  4119c9:	sub    ebx,DWORD PTR [eax]
  4119cb:	sub    ch,BYTE PTR [ecx+ebp*8-0x13]
  4119cf:	loop   0x411a00
  4119d1:	mov    edx,0x8c6468da
  4119d6:	test   eax,0x2b6e69ba
  4119db:	and    BYTE PTR [edx+ecx*1-0x13],ah
  4119df:	fisttp QWORD PTR [edi+0x3b007cd1]
  4119e5:	mov    ecx,fs
  4119e7:	fwait
  4119e8:	scas   eax,DWORD PTR es:[edi]
  4119e9:	mov    al,0xcf
  4119eb:	inc    ecx
  4119ec:	arpl   WORD PTR [eax],bp
  4119ee:	dec    ebx
  4119ef:	push   esp
  4119f0:	test   al,0x6f
  4119f2:	and    BYTE PTR [esi+0x1dcbe681],bl
  4119f8:	lahf   
  4119f9:	xchg   esi,eax
  4119fa:	imul   ebp,esi,0xffffffa2
  4119fd:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119ff:	mov    cl,0x85
  411a01:	jp     0x4119fa
  411a03:	or     dh,0xa3
  411a06:	adc    al,0x1a
  411a08:	mov    ch,0x1c
  411a0a:	inc    eax
  411a0b:	rcl    DWORD PTR [eax],1
  411a0d:	out    dx,eax
  411a0e:	mov    dl,0xa5
  411a10:	inc    ebx
  411a11:	push   ecx
  411a12:	stos   DWORD PTR es:[edi],eax
  411a13:	add    BYTE PTR [edx],al
  411a15:	out    0xd7,eax
  411a17:	call   0x2af7:0xc8fb611c
  411a1e:	ins    BYTE PTR es:[edi],dx
  411a1f:	xchg   ebp,eax
  411a20:	mov    al,0x77
  411a22:	icebp  
  411a23:	out    0x20,al
  411a25:	dec    esp
  411a26:	adc    BYTE PTR [ebx-0x80],ch
  411a29:	data16 fs fs jo 0x4119e4
  411a2e:	enter  0x2476,0x75
  411a32:	mov    ds:0xdc01bdbb,eax
  411a37:	and    al,0x88
  411a39:	mov    ds:0x415b4b56,eax
  411a3e:	scas   eax,DWORD PTR es:[edi]
  411a3f:	xor    DWORD PTR [ebx-0x4f86ad4b],ecx
  411a45:	and    BYTE PTR [ebx+0x19],ch
  411a48:	dec    esp
  411a49:	loopne 0x411a80
  411a4b:	mov    ds:0xffcec714,eax
  411a50:	add    al,0x7d
  411a52:	out    dx,al
  411a53:	das    
  411a54:	in     al,0xe3
  411a56:	test   bl,cl
  411a58:	imul   edi,DWORD PTR [ebx+0xb656c26],0xffffff92
  411a5f:	jnp    0x411a01
  411a61:	pop    edi
  411a62:	cdq    
  411a63:	(bad)  
  411a64:	lahf   
  411a65:	adc    edi,DWORD PTR [edi]
  411a67:	stos   DWORD PTR es:[edi],eax
  411a68:	retf   
  411a69:	dec    ebp
  411a6a:	jno    0x411a11
  411a6c:	loop   0x411a09
  411a6e:	iret   
  411a6f:	bound  ebx,QWORD PTR [edi+0x4d]
  411a72:	push   esp
  411a73:	push   0xfffffff5
  411a75:	add    DWORD PTR [edx+0x6c],edx
  411a78:	xchg   ecx,ebx
  411a7a:	inc    ecx
  411a7b:	sti    
  411a7c:	lds    ecx,FWORD PTR [edx-0x15]
  411a7f:	pushf  
  411a80:	adc    BYTE PTR [eax],bh
  411a82:	hlt    
  411a83:	and    cl,BYTE PTR [eax-0x5b]
  411a86:	icebp  
  411a87:	fbld   TBYTE PTR [edi+0x60]
  411a8a:	dec    esp
  411a8b:	jl     0x411a70
  411a8d:	jle    0x411af9
  411a8f:	js     0x411b02
  411a91:	jg     0x411a57
  411a93:	inc    esp
  411a94:	mov    ah,0xfd
  411a96:	jg     0x411acf
  411a98:	mov    ch,0xfe
  411a9a:	arpl   di,sp
  411a9c:	push   0xc7c98dde
  411aa1:	dec    edi
  411aa2:	dec    ebp
  411aa3:	aam    0x5e
  411aa5:	retf   0x3353
  411aa8:	xchg   DWORD PTR [ebp+0x1d],ecx
  411aab:	in     al,dx
  411aac:	sbb    bh,BYTE PTR [eax+0x511cec5d]
  411ab2:	and    BYTE PTR ss:[edi+ebx*4],ch
  411ab6:	xchg   DWORD PTR [edi],ebp
  411ab8:	dec    BYTE PTR [edi]
  411aba:	xor    ecx,esi
  411abc:	lea    eax,[ecx+eax*1+0x3272f3]
  411ac3:	mov    ecx,DWORD PTR [ebp+0x8]
  411ac6:	mov    edx,DWORD PTR [ebp-0x20]
  411ac9:	mov    DWORD PTR [edx+ecx*4],eax
  411acc:	mov    eax,DWORD PTR [ebp-0xc]
  411acf:	mov    ecx,DWORD PTR [ebp+0x8]
  411ad2:	xor    eax,esi
  411ad4:	lea    eax,[eax+ecx*1+0x3272f3]
  411adb:	mov    DWORD PTR [ebp+0x8],eax
  411ade:	mov    eax,DWORD PTR [ebp-0xc]
  411ae1:	mov    ecx,DWORD PTR [ebp+0x14]
  411ae4:	xor    eax,esi
  411ae6:	add    eax,edi
  411ae8:	imul   eax,DWORD PTR [ecx]
  411aeb:	mov    ecx,DWORD PTR [ebp-0x4]
  411aee:	mov    edx,DWORD PTR [ebp+0x8]
  411af1:	xor    ecx,esi
  411af3:	lea    ecx,[ecx+edx*1+0x3272f3]
  411afa:	cmp    ecx,eax
  411afc:	jne    0x40f6ee
  411b02:	mov    eax,DWORD PTR [ebp-0x4]
  411b05:	xor    eax,esi
  411b07:	add    eax,edi
  411b09:	mov    DWORD PTR [ebp-0x10],eax
  411b0c:	mov    ebx,0x65655
  411b11:	add    ebx,0x3234
  411b17:	xchg   ebx,esi
  411b19:	xor    ebx,ebx
  411b1b:	push   esi
  411b1c:	mov    esi,ebx
  411b1e:	pop    ebx
  411b1f:	mov    edx,esi
  411b21:	add    ebx,0x1002
  411b27:	lea    eax,[ebp-0x18]
  411b2a:	add    edx,eax
  411b2c:	add    edx,0x5
  411b2f:	push   edx
  411b30:	inc    esi
  411b31:	pop    ecx
  411b32:	dec    ecx
  411b33:	xchg   ecx,eax
  411b34:	dec    eax
  411b35:	xchg   ecx,eax
  411b36:	dec    ecx
  411b37:	xchg   ecx,edx
  411b39:	dec    edx
  411b3a:	push   edx
  411b3b:	mov    edx,ebx
  411b3d:	pop    ebx
  411b3e:	dec    ebx
  411b3f:	call   DWORD PTR [ebx]
  411b41:	cmp    DWORD PTR [ebp+0x10],esi
  411b44:	je     0x411b65
  411b4a:	xchg   edx,eax
  411b4b:	push   0xc
  411b4d:	pop    ecx
  411b4e:	dec    ecx
  411b4f:	push   0x3
  411b51:	pop    ebx
  411b52:	inc    ebx
  411b53:	xchg   ebx,ecx
  411b55:	inc    ecx
  411b56:	sub    ebx,ecx
  411b58:	xchg   ebx,ecx
  411b5a:	dec    ecx
  411b5b:	dec    ecx
  411b5c:	mov    eax,DWORD PTR [ebp-0x1c]
  411b5f:	imul   eax,ecx
  411b62:	add    esp,eax
  411b64:	xchg   edx,eax
  411b65:	push   eax
  411b66:	xor    ebx,ebx
  411b68:	mov    edx,esp
  411b6a:	dec    edx
  411b6b:	inc    ebx
  411b6c:	add    ebx,DWORD PTR [edx+ebx*1]
  411b6f:	dec    ebx
  411b70:	xor    edx,edx
  411b72:	add    DWORD PTR [ebp-0x10],ebx
  411b75:	pop    ebx
  411b76:	mov    eax,DWORD PTR [ebp-0x10]
  411b79:	pop    edi
  411b7a:	pop    esi
  411b7b:	pop    ebx
  411b7c:	leave  
  411b7d:	ret    0x10
  411b80:	push   ebp
  411b81:	mov    ebp,esp
  411b83:	push   ecx
  411b84:	and    DWORD PTR ds:0x4291db,ecx
  411b8a:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  411b91:	and    DWORD PTR ds:0x4291cb,0x0
  411b9b:	mov    ecx,DWORD PTR ds:0x4291cb
  411ba1:	inc    ecx
  411ba2:	mov    DWORD PTR ds:0x4291cb,ecx
  411ba8:	cmp    DWORD PTR ds:0x4291cb,0x20
  411baf:	jbe    0x411bd2
  411bb5:	jmp    0x411bc5
  411bba:	push   0x4291cf
  411bbf:	call   DWORD PTR ds:0x42a873
  411bc5:	cmp    DWORD PTR ds:0x4291cb,0x1c
  411bcc:	jb     0x411b9b
  411bd2:	mov    eax,DWORD PTR [ebp-0x4]
  411bd5:	xor    DWORD PTR ds:0x4291d7,0x42915f
  411bdf:	mov    edx,DWORD PTR [ebp+0x10]
  411be2:	mov    ecx,0x75108ac
  411be7:	sbb    DWORD PTR ds:0x42919f,0x2976
  411bf1:	xor    eax,ecx
  411bf3:	xor    DWORD PTR ds:0x429167,0x4291ab
  411bfd:	add    eax,0x3272f3
  411c02:	mov    DWORD PTR [edx],eax
  411c04:	and    eax,DWORD PTR ds:0x4291e7
  411c0a:	mov    eax,DWORD PTR [ebp+0xc]
  411c0d:	and    DWORD PTR ds:0x4291d3,edi
  411c13:	xor    eax,ecx
  411c15:	xor    DWORD PTR ds:0x429187,0x6377
  411c1f:	push   esi
  411c20:	xor    edx,DWORD PTR ds:0x42915b
  411c26:	mov    esi,DWORD PTR [ebp+0x10]
  411c29:	mov    edx,0x3272f3
  411c2e:	add    eax,edx
  411c30:	mov    DWORD PTR [esi+0x4],eax
  411c33:	mov    eax,DWORD PTR [ebp+0x14]
  411c36:	mov    esi,DWORD PTR [ebp+0x10]
  411c39:	mov    DWORD PTR [esi+0x8],eax
  411c3c:	mov    eax,DWORD PTR [ebp+0x18]
  411c3f:	mov    esi,DWORD PTR [ebp+0x10]
  411c42:	mov    DWORD PTR [esi+0xc],eax
  411c45:	mov    eax,DWORD PTR [ebp+0x1c]
  411c48:	mov    esi,DWORD PTR [ebp+0x10]
  411c4b:	mov    DWORD PTR [esi+0x10],eax
  411c4e:	mov    eax,DWORD PTR [ebp+0x8]
  411c51:	xor    eax,ecx
  411c53:	add    eax,edx
  411c55:	pop    esi
  411c56:	leave  
  411c57:	ret    0x18
  411c5a:	push   ebp
  411c5b:	mov    ebp,esp
  411c5d:	sub    esp,0x9c
  411c63:	movzx  ecx,BYTE PTR ds:0x429187
  411c6a:	or     DWORD PTR ds:0x4291f3,ecx
  411c70:	mov    ecx,DWORD PTR [ebp+0x8]
  411c73:	mov    eax,0x8a99
  411c78:	sub    DWORD PTR ds:0x4291a7,0x19e0
  411c82:	xor    ax,WORD PTR [ecx+0x20]
  411c86:	mov    ecx,0x3b5b
  411c8b:	add    ax,cx
  411c8e:	and    DWORD PTR ds:0x4291f7,0x0
  411c98:	mov    ecx,DWORD PTR ds:0x4291f7
  411c9e:	inc    ecx
  411c9f:	mov    DWORD PTR ds:0x4291f7,ecx
  411ca5:	cmp    DWORD PTR ds:0x4291f7,0x11
  411cac:	jl     0x411cec
  411cb2:	jmp    0x411cc5
  411cb7:	push   DWORD PTR [ebp-0x28]
  411cba:	push   0x42806d
  411cbf:	call   DWORD PTR ds:0x42a877
  411cc5:	cmp    DWORD PTR ds:0x4291f7,0x10
  411ccc:	jne    0x411cdf
  411cd2:	mov    ecx,DWORD PTR ds:0x4291f7
  411cd8:	inc    ecx
  411cd9:	mov    DWORD PTR ds:0x4291f7,ecx
  411cdf:	cmp    DWORD PTR ds:0x4291f7,0x1c
  411ce6:	jb     0x411c98
  411cec:	movzx  eax,ax
  411cef:	mov    DWORD PTR [ebp-0x10],eax
  411cf2:	mov    BYTE PTR [ebp-0x1],0x82
  411cf6:	and    DWORD PTR ds:0x4291df,0x0
  411d00:	jmp    0x411d14
  411d05:	xor    ecx,ecx
  411d07:	add    ecx,DWORD PTR ds:0x4291df
  411d0d:	inc    ecx
  411d0e:	mov    DWORD PTR ds:0x4291df,ecx
  411d14:	cmp    DWORD PTR ds:0x4291df,0x1b
  411d1b:	jae    0x411d48
  411d21:	cmp    DWORD PTR ds:0x4291df,0x22
  411d28:	jge    0x411d48
  411d2e:	jmp    0x411d43
  411d33:	push   0x4280f2
  411d38:	push   0x0
  411d3a:	push   DWORD PTR [ebp-0x1c]
  411d3d:	call   DWORD PTR ds:0x42a87f
  411d43:	jmp    0x411d05
  411d48:	lea    eax,[ebp-0x1]
  411d4b:	inc    DWORD PTR ds:0x42919b
  411d51:	mov    DWORD PTR [ebp-0xc],eax
  411d54:	mov    al,BYTE PTR [ebp-0x1]
  411d57:	and    DWORD PTR ds:0x4291af,0x0
  411d61:	mov    ecx,DWORD PTR ds:0x4291af
  411d67:	inc    ecx
  411d68:	mov    DWORD PTR ds:0x4291af,ecx
  411d6e:	cmp    DWORD PTR ds:0x4291af,0x19
  411d75:	jbe    0x411d96
  411d7b:	jmp    0x411d89
  411d80:	push   DWORD PTR [ebp-0x20]
  411d83:	call   DWORD PTR ds:0x42a883
  411d89:	cmp    DWORD PTR ds:0x4291af,0x10
  411d90:	jb     0x411d61
  411d96:	mov    ecx,DWORD PTR [ebp-0xc]
  411d99:	xor    al,0x7d
  411d9b:	mov    DWORD PTR ds:0x4291bb,0x2666
  411da5:	add    al,0x2
  411da7:	and    DWORD PTR ds:0x4291c3,0x42917f
  411db1:	mov    BYTE PTR [ecx],al
  411db3:	sbb    DWORD PTR ds:0x4291eb,0x5717
  411dbd:	mov    DWORD PTR [ebp-0x18],0xf89c85a1
  411dc4:	push   ebx
  411dc5:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  411dcc:	mov    DWORD PTR ds:0x4291eb,0x16
  411dd6:	cmp    DWORD PTR ds:0x4291eb,0x0
  411ddd:	je     0x411e17
  411de3:	cmp    DWORD PTR ds:0x4291eb,0x1e
  411dea:	jl     0x411e17
  411df0:	jmp    0x411e07
  411df5:	push   0x428010
  411dfa:	push   0x0
  411dfc:	push   0x6e74
  411e01:	call   DWORD PTR ds:0x42a887
  411e07:	mov    eax,ds:0x4291eb
  411e0c:	dec    eax
  411e0d:	mov    ds:0x4291eb,eax
  411e12:	jmp    0x411dd6
  411e17:	mov    ecx,DWORD PTR [ebp-0x18]
  411e1a:	or     DWORD PTR ds:0x429153,ebx
  411e20:	push   esi
  411e21:	mov    eax,0x75108ac
  411e26:	xor    esi,esi
  411e28:	xor    esi,DWORD PTR ds:0x4291b7
  411e2e:	or     DWORD PTR ds:0x42915b,esi
  411e34:	xor    ecx,eax
  411e36:	mov    esi,DWORD PTR ds:0x4291a3
  411e3c:	sbb    esi,DWORD PTR ds:0x42914f
  411e42:	mov    DWORD PTR ds:0x4291a3,esi
  411e48:	mov    esi,0x3272f3
  411e4d:	push   edi
  411e4e:	add    ecx,esi
  411e50:	jmp    0x411e66
  411e55:	inc    DWORD PTR ds:0x429163
  411e5b:	mov    dl,BYTE PTR [ebp-0x1]
  411e5e:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e65:	inc    ecx
  411e66:	mov    DWORD PTR ds:0x42917b,0x7bd4
  411e70:	cmp    ecx,0x40
  411e73:	jb     0x411e55
  411e79:	not    edx
  411e7b:	mov    edx,DWORD PTR [ebp-0x18]
  411e7e:	xor    edx,eax
  411e80:	mov    DWORD PTR ds:0x4291f7,0x3db0
  411e8a:	add    edx,esi
  411e8c:	jmp    0x411f80
  411e91:	movzx  edi,WORD PTR ds:0x42918b
  411e98:	or     DWORD PTR ds:0x429157,edi
  411e9e:	mov    edi,DWORD PTR [ebp+0x8]
  411ea1:	adc    DWORD PTR ds:0x42917b,edx
  411ea7:	mov    ecx,0x8a99
  411eac:	adc    DWORD PTR ds:0x4291f3,0x3816
  411eb6:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ebb:	and    DWORD PTR ds:0x4291a3,0x0
  411ec5:	jmp    0x411ed7
  411eca:	mov    edi,DWORD PTR ds:0x4291a3
  411ed0:	inc    edi
  411ed1:	mov    DWORD PTR ds:0x4291a3,edi
  411ed7:	cmp    DWORD PTR ds:0x4291a3,0x1f
  411ede:	jae    0x411f1d
  411ee4:	cmp    DWORD PTR ds:0x4291a3,0xa
  411eeb:	jl     0x411f1d
  411ef1:	jmp    0x411efc
  411ef6:	call   DWORD PTR ds:0x42a88b
  411efc:	cmp    DWORD PTR ds:0x4291a3,0x9
  411f03:	jne    0x411f18
  411f09:	xor    edi,edi
  411f0b:	xor    edi,DWORD PTR ds:0x4291a3
  411f11:	inc    edi
  411f12:	mov    DWORD PTR ds:0x4291a3,edi
  411f18:	jmp    0x411eca
  411f1d:	mov    edi,0x3b5b
  411f22:	add    cx,di
  411f25:	add    DWORD PTR ds:0x4291ef,0x4291b7
  411f2f:	movzx  ecx,cx
  411f32:	sbb    DWORD PTR ds:0x42914b,0x16d8
  411f3c:	mov    DWORD PTR [ebp-0xc],ecx
  411f3f:	movzx  ecx,WORD PTR ds:0x42918f
  411f46:	and    DWORD PTR ds:0x429197,ecx
  411f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  411f4f:	sbb    DWORD PTR ds:0x42915b,0x631a
  411f59:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f5d:	xor    ecx,0x8a99
  411f63:	add    ecx,edi
  411f65:	mov    edi,DWORD PTR [ebp-0xc]
  411f68:	mov    DWORD PTR ds:0x4291f7,0x4ad9
  411f72:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f79:	mov    DWORD PTR ds:0x4291e7,ecx
  411f7f:	inc    edx
  411f80:	not    ecx
  411f82:	mov    ecx,DWORD PTR [ebp-0x10]
  411f85:	mov    DWORD PTR ds:0x42914f,0x2d30
  411f8f:	cmp    edx,ecx
  411f91:	jne    0x411e91
  411f97:	and    edx,edx
  411f99:	mov    ecx,DWORD PTR [ebp-0x18]
  411f9c:	sub    edi,DWORD PTR ds:0x42914f
  411fa2:	mov    edx,DWORD PTR [ebp+0x10]
  411fa5:	xor    DWORD PTR ds:0x4291bf,0xf9d
  411faf:	xor    ecx,eax
  411fb1:	and    DWORD PTR ds:0x4291b7,ebx
  411fb7:	add    ecx,esi
  411fb9:	mov    DWORD PTR [edx],ecx
  411fbb:	mov    ecx,DWORD PTR [ebp-0x18]
  411fbe:	sbb    DWORD PTR ds:0x42919f,0x1e81
  411fc8:	xor    ecx,eax
  411fca:	add    ecx,esi
  411fcc:	adc    DWORD PTR ds:0x4291e3,edi
  411fd2:	mov    DWORD PTR [ebp-0xc],ecx
  411fd5:	add    DWORD PTR ds:0x42914f,0x6cdc
  411fdf:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  411fe6:	mov    DWORD PTR ds:0x4291bf,0x1d36
  411ff0:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  411ff7:	mov    DWORD PTR [ebp-0x10],0xf89c95a1
  411ffe:	mov    ecx,DWORD PTR [ebp-0x14]
  412001:	mov    DWORD PTR ds:0x4291e3,0x1b
  41200b:	cmp    DWORD PTR ds:0x4291e3,0x0
  412012:	je     0x41204c
  412018:	cmp    DWORD PTR ds:0x4291e3,0x1c
  41201f:	jb     0x41204c
  412025:	jmp    0x41203a
  41202a:	push   0x42915f
  41202f:	push   0x428022
  412034:	call   DWORD PTR ds:0x42a88f
  41203a:	mov    edi,DWORD PTR ds:0x4291e3
  412040:	dec    edi
  412041:	mov    DWORD PTR ds:0x4291e3,edi
  412047:	jmp    0x41200b
  41204c:	mov    DWORD PTR [ebp+0x8],ecx
  41204f:	mov    ecx,DWORD PTR [ebp+0x8]
  412052:	xor    ecx,eax
  412054:	add    ecx,esi
  412056:	movzx  ecx,WORD PTR ds:0x4291b3
  41205d:	mov    ecx,0x242ebcd
  412062:	mov    edi,0xf641bcc
  412067:	je     0x414acc
  41206d:	mov    edx,DWORD PTR [ebp+0x8]
  412070:	sub    DWORD PTR ds:0x42917b,0x1976
  41207a:	mov    ebx,DWORD PTR [ebp-0x8]
  41207d:	xor    edx,eax
  41207f:	xor    ebx,eax
  412081:	not    DWORD PTR ds:0x4291d3
  412087:	sub    edx,ebx
  412089:	not    DWORD PTR ds:0x42918f
  41208f:	sub    edx,esi
  412091:	xor    edx,eax
  412093:	and    DWORD PTR ds:0x4291cb,0x0
  41209d:	jmp    0x4120af
  4120a2:	mov    ebx,DWORD PTR ds:0x4291cb
  4120a8:	inc    ebx
  4120a9:	mov    DWORD PTR ds:0x4291cb,ebx
  4120af:	cmp    DWORD PTR ds:0x4291cb,0x18
  4120b6:	jae    0x4120f8
  4120bc:	cmp    DWORD PTR ds:0x4291cb,0xa
  4120c3:	ja     0x4120f8
  4120c9:	jmp    0x4120d9
  4120ce:	push   0x4a1a
  4120d3:	call   DWORD PTR ds:0x42a893
  4120d9:	cmp    DWORD PTR ds:0x4291cb,0x9
  4120e0:	jne    0x4120f3
  4120e6:	mov    ebx,DWORD PTR ds:0x4291cb
  4120ec:	inc    ebx
  4120ed:	mov    DWORD PTR ds:0x4291cb,ebx
  4120f3:	jmp    0x4120a2
  4120f8:	mov    DWORD PTR [ebp+0x8],edx
  4120fb:	sub    DWORD PTR ds:0x4291e3,0x2e82
  412105:	mov    edx,DWORD PTR [ebp+0x8]
  412108:	mov    ebx,DWORD PTR [ebp-0x58]
  41210b:	mov    DWORD PTR ds:0x42919b,0x1dc1
  412115:	add    edx,0x5708e2
  41211b:	and    DWORD PTR ds:0x4291e7,0x42919f
  412125:	imul   edx,ebx
  412128:	mov    DWORD PTR [ebp-0x58],edx
  41212b:	xor    edx,0x49c6
  412131:	mov    edx,DWORD PTR [ebp+0x8]
  412134:	mov    ebx,DWORD PTR ds:0x42914b
  41213a:	add    DWORD PTR ds:0x4291e3,ebx
  412140:	mov    ebx,DWORD PTR [ebp-0x54]
  412143:	add    edx,0x64f89c
  412149:	inc    DWORD PTR ds:0x42917f
  41214f:	or     edx,ebx
  412151:	mov    DWORD PTR [ebp-0x54],edx
  412154:	mov    edx,DWORD PTR [ebp+0x8]
  412157:	mov    ebx,DWORD PTR [ebp-0x50]
  41215a:	sbb    DWORD PTR ds:0x429183,0x4291b7
  412164:	add    edx,ecx
  412166:	xor    edx,ebx
  412168:	mov    DWORD PTR [ebp-0x50],edx
  41216b:	dec    ebx
  41216c:	mov    edx,DWORD PTR [ebp+0x8]
  41216f:	add    ebx,0x68ce
  412175:	mov    ebx,DWORD PTR [ebp-0x4c]
  412178:	add    edx,edi
  41217a:	and    edx,ebx
  41217c:	and    ebx,0x35bf
  412182:	mov    DWORD PTR [ebp-0x4c],edx
  412185:	xor    DWORD PTR ds:0x4291d3,ebx
  41218b:	mov    edx,DWORD PTR [ebp+0x8]
  41218e:	sub    DWORD PTR ds:0x4291cf,0x55b5
  412198:	mov    ebx,DWORD PTR [ebp-0x48]
  41219b:	lea    edx,[ebx+edx*1+0x241fcdf]
  4121a2:	mov    DWORD PTR [ebp-0x48],edx
  4121a5:	and    DWORD PTR ds:0x429173,0x0
  4121af:	mov    ebx,DWORD PTR ds:0x429173
  4121b5:	inc    ebx
  4121b6:	mov    DWORD PTR ds:0x429173,ebx
  4121bc:	cmp    DWORD PTR ds:0x429173,0x19
  4121c3:	jge    0x4121ee
  4121c9:	jmp    0x4121e1
  4121ce:	push   0x4291f7
  4121d3:	push   0x429187
  4121d8:	push   DWORD PTR [ebp-0x10]
  4121db:	call   DWORD PTR ds:0x42a89b
  4121e1:	cmp    DWORD PTR ds:0x429173,0x12
  4121e8:	jb     0x4121af
  4121ee:	mov    edx,DWORD PTR [ebp+0x8]
  4121f1:	or     DWORD PTR ds:0x4291df,ebx
  4121f7:	mov    ebx,0xfa5e1528
  4121fc:	sub    ebx,edx
  4121fe:	movzx  edx,WORD PTR ds:0x4291c7
  412205:	and    DWORD PTR ds:0x4291f7,edx
  41220b:	add    ebx,DWORD PTR [ebp-0x44]
  41220e:	mov    DWORD PTR [ebp-0x44],ebx
  412211:	and    DWORD PTR ds:0x4291db,0x4291bf
  41221b:	mov    edx,DWORD PTR [ebp+0x8]
  41221e:	xor    edx,eax
  412220:	adc    DWORD PTR ds:0x429153,0x429187
  41222a:	add    edx,esi
  41222c:	mov    DWORD PTR ds:0x42915b,0x2aa5
  412236:	jne    0x41206d
  41223c:	mov    DWORD PTR ds:0x4291af,0x939
  412246:	jmp    0x414acc
  41224b:	xor    DWORD PTR ds:0x4291cb,0x4110
  412255:	mov    edx,DWORD PTR [ebp-0xc]
  412258:	sub    DWORD PTR ds:0x42918b,0x429163
  412262:	sub    edx,esi
  412264:	xor    edx,eax
  412266:	mov    DWORD PTR ds:0x4291b7,0x1c
  412270:	cmp    DWORD PTR ds:0x4291b7,0x0
  412277:	je     0x4122ae
  41227d:	cmp    DWORD PTR ds:0x4291b7,0x21
  412284:	jbe    0x4122ae
  41228a:	jmp    0x41229a
  41228f:	push   0x337f
  412294:	call   DWORD PTR ds:0x42a863
  41229a:	xor    ebx,ebx
  41229c:	or     ebx,DWORD PTR ds:0x4291b7
  4122a2:	dec    ebx
  4122a3:	mov    DWORD PTR ds:0x4291b7,ebx
  4122a9:	jmp    0x412270
  4122ae:	mov    DWORD PTR [ebp-0x5c],edx
  4122b1:	sub    DWORD PTR ds:0x429173,0x5ea2
  4122bb:	mov    edx,DWORD PTR [ebp-0x10]
  4122be:	mov    ebx,DWORD PTR [ebp-0x8]
  4122c1:	xor    edx,eax
  4122c3:	dec    DWORD PTR ds:0x4291b7
  4122c9:	xor    ebx,eax
  4122cb:	adc    DWORD PTR ds:0x429197,0x42917b
  4122d5:	sub    edx,ebx
  4122d7:	sub    edx,esi
  4122d9:	xor    edx,eax
  4122db:	mov    DWORD PTR [ebp-0x10],edx
  4122de:	mov    edx,DWORD PTR [ebp-0x14]
  4122e1:	mov    DWORD PTR [ebp+0x8],edx
  4122e4:	jmp    0x412527
  4122e9:	mov    edx,DWORD PTR [ebp+0x8]
  4122ec:	mov    DWORD PTR ds:0x429157,0x1c
  4122f6:	cmp    DWORD PTR ds:0x429157,0x0
  4122fd:	je     0x412341
  412303:	cmp    DWORD PTR ds:0x429157,0x21
  41230a:	jl     0x412341
  412310:	jmp    0x41232f
  412315:	push   0x4cc6
  41231a:	push   0x428152
  41231f:	push   0x428140
  412324:	push   0x400000
  412329:	call   DWORD PTR ds:0x42a86b
  41232f:	mov    ebx,DWORD PTR ds:0x429157
  412335:	dec    ebx
  412336:	mov    DWORD PTR ds:0x429157,ebx
  41233c:	jmp    0x4122f6
  412341:	mov    ebx,DWORD PTR [ebp-0x8]
  412344:	xor    edx,eax
  412346:	xor    ebx,eax
  412348:	sub    edx,ebx
  41234a:	sub    edx,esi
  41234c:	xor    edx,eax
  41234e:	mov    DWORD PTR [ebp+0x8],edx
  412351:	mov    edx,DWORD PTR [ebp+0x8]
  412354:	mov    ebx,DWORD PTR [ebp-0x58]
  412357:	add    edx,0x5708e2
  41235d:	add    DWORD PTR ds:0x42918f,0x4291b7
  412367:	imul   edx,ebx
  41236a:	mov    DWORD PTR [ebp-0x58],edx
  41236d:	and    DWORD PTR ds:0x4291df,0x0
  412377:	mov    edx,DWORD PTR ds:0x4291df
  41237d:	inc    edx
  41237e:	mov    DWORD PTR ds:0x4291df,edx
  412384:	cmp    DWORD PTR ds:0x4291df,0x9
  41238b:	jb     0x4123cb
  412391:	jmp    0x4123a4
  412396:	push   DWORD PTR [ebp-0x24]
  412399:	push   0x400000
  41239e:	call   DWORD PTR ds:0x42a86f
  4123a4:	cmp    DWORD PTR ds:0x4291df,0x8
  4123ab:	jne    0x4123be
  4123b1:	mov    edx,DWORD PTR ds:0x4291df
  4123b7:	inc    edx
  4123b8:	mov    DWORD PTR ds:0x4291df,edx
  4123be:	cmp    DWORD PTR ds:0x4291df,0x10
  4123c5:	jb     0x412377
  4123cb:	mov    edx,DWORD PTR [ebp+0x8]
  4123ce:	adc    ebx,DWORD PTR ds:0x429183
  4123d4:	mov    ebx,DWORD PTR [ebp-0x54]
  4123d7:	add    DWORD PTR ds:0x4291ef,0x468d
  4123e1:	add    edx,0x64f89c
  4123e7:	or     edx,ebx
  4123e9:	mov    DWORD PTR [ebp-0x54],edx
  4123ec:	and    DWORD PTR ds:0x429187,0x0
  4123f6:	jmp    0x412408
  4123fb:	mov    ebx,DWORD PTR ds:0x429187
  412401:	inc    ebx
  412402:	mov    DWORD PTR ds:0x429187,ebx
  412408:	cmp    DWORD PTR ds:0x429187,0x1d
  41240f:	jae    0x412437
  412415:	cmp    DWORD PTR ds:0x429187,0x1e
  41241c:	jg     0x412437
  412422:	jmp    0x412432
  412427:	push   0x4291cf
  41242c:	call   DWORD PTR ds:0x42a873
  412432:	jmp    0x4123fb
  412437:	mov    edx,DWORD PTR [ebp+0x8]
  41243a:	mov    ebx,DWORD PTR [ebp-0x50]
  41243d:	and    DWORD PTR ds:0x4291db,0x4291cf
  412447:	add    edx,ecx
  412449:	mov    DWORD PTR ds:0x42919b,0x55c4
  412453:	xor    edx,ebx
  412455:	mov    DWORD PTR [ebp-0x50],edx
  412458:	sub    DWORD PTR ds:0x42915f,0x3296
  412462:	mov    edx,DWORD PTR [ebp+0x8]
  412465:	mov    ebx,DWORD PTR [ebp-0x4c]
  412468:	xor    DWORD PTR ds:0x4291a7,0x42916b
  412472:	add    edx,edi
  412474:	xor    DWORD PTR ds:0x4291e7,0x4291af
  41247e:	and    edx,ebx
  412480:	or     DWORD PTR ds:0x42915f,edx
  412486:	mov    DWORD PTR [ebp-0x4c],edx
  412489:	mov    ebx,DWORD PTR ds:0x42918b
  41248f:	sbb    DWORD PTR ds:0x429157,ebx
  412495:	mov    edx,DWORD PTR [ebp+0x8]
  412498:	xor    DWORD PTR ds:0x429157,0x429153
  4124a2:	mov    ebx,DWORD PTR [ebp-0x48]
  4124a5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4124ac:	mov    DWORD PTR [ebp-0x48],edx
  4124af:	and    DWORD PTR ds:0x429173,0x0
  4124b9:	jmp    0x4124cb
  4124be:	mov    edx,DWORD PTR ds:0x429173
  4124c4:	inc    edx
  4124c5:	mov    DWORD PTR ds:0x429173,edx
  4124cb:	cmp    DWORD PTR ds:0x429173,0x15
  4124d2:	jae    0x412517
  4124d8:	cmp    DWORD PTR ds:0x429173,0x5
  4124df:	jle    0x412517
  4124e5:	jmp    0x4124f8
  4124ea:	push   DWORD PTR [ebp-0x18]
  4124ed:	push   0x42808a
  4124f2:	call   DWORD PTR ds:0x42a877
  4124f8:	cmp    DWORD PTR ds:0x429173,0x4
  4124ff:	jne    0x412512
  412505:	mov    edx,DWORD PTR ds:0x429173
  41250b:	inc    edx
  41250c:	mov    DWORD PTR ds:0x429173,edx
  412512:	jmp    0x4124be
  412517:	mov    edx,DWORD PTR [ebp+0x8]
  41251a:	mov    ebx,0xfa5e1528
  41251f:	sub    ebx,edx
  412521:	add    ebx,DWORD PTR [ebp-0x44]
  412524:	mov    DWORD PTR [ebp-0x44],ebx
  412527:	mov    edx,DWORD PTR [ebp+0x8]
  41252a:	xor    edx,eax
  41252c:	add    edx,esi
  41252e:	jne    0x4122e9
  412534:	mov    edx,DWORD PTR [ebp-0xc]
  412537:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41253e:	mov    bl,BYTE PTR [ebp-0x1]
  412541:	cmp    dl,bl
  412543:	je     0x412621
  412549:	mov    ecx,DWORD PTR [ebp-0x5c]
  41254c:	mov    edx,DWORD PTR [ebp-0xc]
  41254f:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412556:	mov    ebx,DWORD PTR [ebp+0xc]
  412559:	xor    ecx,eax
  41255b:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f3]
  412562:	jne    0x414ade
  412568:	mov    ecx,DWORD PTR [ebp-0x5c]
  41256b:	mov    edx,DWORD PTR [ebp+0xc]
  41256e:	xor    ecx,eax
  412570:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f3]
  412578:	mov    edx,DWORD PTR [ebp-0x18]
  41257b:	xor    edx,eax
  41257d:	add    edx,esi
  41257f:	cmp    ecx,edx
  412581:	mov    ecx,DWORD PTR [ebp-0x14]
  412584:	mov    DWORD PTR [ebp+0x8],ecx
  412587:	mov    ecx,DWORD PTR [ebp+0x8]
  41258a:	je     0x41b681
  412590:	xor    ecx,eax
  412592:	add    ecx,esi
  412594:	mov    ecx,0x242ebcd
  412599:	je     0x414a32
  41259f:	mov    edx,DWORD PTR [ebp+0x8]
  4125a2:	mov    ebx,DWORD PTR [ebp-0x8]
  4125a5:	xor    edx,eax
  4125a7:	xor    ebx,eax
  4125a9:	sub    edx,ebx
  4125ab:	sub    edx,esi
  4125ad:	xor    edx,eax
  4125af:	mov    DWORD PTR [ebp+0x8],edx
  4125b2:	mov    edx,DWORD PTR [ebp+0x8]
  4125b5:	mov    ebx,DWORD PTR [ebp-0x58]
  4125b8:	add    edx,0x5708e2
  4125be:	imul   edx,ebx
  4125c1:	mov    DWORD PTR [ebp-0x58],edx
  4125c4:	mov    edx,DWORD PTR [ebp+0x8]
  4125c7:	mov    ebx,DWORD PTR [ebp-0x54]
  4125ca:	add    edx,0x64f89c
  4125d0:	or     edx,ebx
  4125d2:	mov    DWORD PTR [ebp-0x54],edx
  4125d5:	mov    edx,DWORD PTR [ebp+0x8]
  4125d8:	mov    ebx,DWORD PTR [ebp-0x50]
  4125db:	add    edx,ecx
  4125dd:	xor    edx,ebx
  4125df:	mov    DWORD PTR [ebp-0x50],edx
  4125e2:	mov    edx,DWORD PTR [ebp+0x8]
  4125e5:	mov    ebx,DWORD PTR [ebp-0x4c]
  4125e8:	add    edx,edi
  4125ea:	and    edx,ebx
  4125ec:	mov    DWORD PTR [ebp-0x4c],edx
  4125ef:	mov    edx,DWORD PTR [ebp+0x8]
  4125f2:	mov    ebx,DWORD PTR [ebp-0x48]
  4125f5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4125fc:	mov    DWORD PTR [ebp-0x48],edx
  4125ff:	mov    edx,DWORD PTR [ebp+0x8]
  412602:	mov    ebx,0xfa5e1528
  412607:	sub    ebx,edx
  412609:	add    ebx,DWORD PTR [ebp-0x44]
  41260c:	mov    DWORD PTR [ebp-0x44],ebx
  41260f:	mov    edx,DWORD PTR [ebp+0x8]
  412612:	xor    edx,eax
  412614:	add    edx,esi
  412616:	jne    0x41259f
  41261c:	jmp    0x414a32
  412621:	mov    edx,DWORD PTR [ebp-0x14]
  412624:	jmp    0x4149ad
  412629:	rcr    ah,1
  41262b:	sbb    eax,DWORD PTR [edx+0x17]
  41262e:	mov    ah,0xd0
  412630:	nop
  412631:	cs aam 0x99
  412634:	or     BYTE PTR [edx],ch
  412636:	cdq    
  412637:	outs   dx,BYTE PTR ds:[esi]
  412638:	fldcw  WORD PTR [ebx-0x76]
  41263b:	add    DWORD PTR [ebx-0x7c7ca3e9],0x4d
  412642:	mov    DWORD PTR [edi+0x6e],esp
  412645:	loope  0x41266e
  412647:	iret   
  412648:	cmp    eax,0xf3c5f9cb
  41264d:	fs pop ebx
  41264f:	enter  0x90bc,0xc8
  412653:	out    dx,eax
  412654:	je     0x41269e
  412656:	call   0x4960:0x1bb2ff54
  41265d:	les    edx,FWORD PTR [edx+edi*1]
  412660:	ins    BYTE PTR es:[edi],dx
  412661:	cmp    BYTE PTR [edi],ch
  412663:	sar    ebp,0xb5
  412666:	aad    0x17
  412668:	sub    al,0x65
  41266a:	cmp    edi,DWORD PTR [edx]
  41266c:	dec    edx
  41266d:	push   ds
  41266e:	sub    BYTE PTR [ebp-0x69],al
  412671:	xchg   BYTE PTR [ecx+0x8cc1ea1],ah
  412677:	push   eax
  412678:	push   edi
  412679:	and    al,0x32
  41267b:	iret   
  41267c:	sbb    dh,BYTE PTR [edx-0x60]
  41267f:	inc    edi
  412680:	sti    
  412681:	cmp    eax,0xfcbdd55a
  412686:	leave  
  412687:	cwde   
  412688:	(bad)  
  412689:	jae    0x41269b
  41268b:	pop    edi
  41268c:	pop    es
  41268d:	outs   dx,BYTE PTR ds:[esi]
  41268e:	mov    ecx,0x123449e0
  412693:	popa   
  412694:	imul   edx,DWORD PTR [esi+0x65],0xfffffff3
  412698:	lea    ebx,[edi+0x61]
  41269b:	out    0x48,al
  41269d:	xchg   edx,eax
  41269e:	imul   ebp,DWORD PTR [edx],0x35
  4126a1:	xor    ebp,esp
  4126a3:	or     BYTE PTR [edi],al
  4126a5:	push   ss
  4126a6:	in     eax,0xab
  4126a8:	ds add al,0x67
  4126ab:	das    
  4126ac:	jg     0x412636
  4126ae:	and    DWORD PTR ds:0x6d63ecb5,eax
  4126b4:	push   0x2
  4126b6:	sahf   
  4126b7:	int    0xaf
  4126b9:	popf   
  4126ba:	lods   al,BYTE PTR ds:[esi]
  4126bb:	lds    esp,FWORD PTR [eax]
  4126bd:	call   0x76238b8a
  4126c2:	adc    ecx,edi
  4126c4:	addr16 clc 
  4126c6:	xlat   BYTE PTR ds:[ebx]
  4126c7:	retf   0xd6c7
  4126ca:	mov    ebp,0xd9d36e28
  4126cf:	gs dec esp
  4126d1:	(bad)  
  4126d2:	outs   dx,BYTE PTR ds:[esi]
  4126d3:	push   0x55
  4126d5:	aas    
  4126d6:	add    DWORD PTR [edi-0x64],ebx
  4126d9:	fwait
  4126da:	cmp    dl,bh
  4126dc:	sbb    al,BYTE PTR [edi]
  4126de:	aaa    
  4126df:	sbb    BYTE PTR [ebp+0x21],cl
  4126e2:	inc    ebx
  4126e3:	mov    ch,0x83
  4126e5:	sub    DWORD PTR ds:0xb981d4c0,esi
  4126eb:	or     eax,DWORD PTR [ecx+ebp*2+0x440ed2ba]
  4126f2:	repz pop ds
  4126f4:	pop    edx
  4126f5:	(bad)  
  4126f6:	lahf   
  4126f7:	cmp    DWORD PTR [eax+edx*1-0x62b6f103],ebx
  4126fe:	add    DWORD PTR [ebp+0x6f0006ab],esi
  412704:	sub    DWORD PTR [eax],0x60d986b1
  41270a:	in     eax,dx
  41270b:	popa   
  41270c:	mov    ds:0xd46ddbb5,al
  412711:	stos   DWORD PTR es:[edi],eax
  412712:	rcr    ah,cl
  412714:	and    esi,esp
  412716:	xor    ch,BYTE PTR [edi-0x3d5308ad]
  41271c:	mov    ebx,DWORD PTR [eax+0x47857f01]
  412722:	fstp   QWORD PTR [edx+0x4dbbcb90]
  412728:	lods   eax,DWORD PTR ds:[esi]
  412729:	sbb    ebx,DWORD PTR [edi]
  41272b:	mov    edi,0x1ee15a7c
  412730:	fwait
  412731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412733:	and    DWORD PTR [ecx],eax
  412735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412736:	dec    esi
  412737:	push   esp
  412738:	stos   BYTE PTR es:[edi],al
  412739:	and    DWORD PTR ds:0xd2ddcfe8,esp
  41273f:	jo     0x4126c3
  412741:	or     esp,DWORD PTR [edi]
  412743:	jbe    0x412718
  412745:	ret    
  412746:	test   eax,0xc596d0fb
  41274b:	pop    gs
  41274d:	rol    BYTE PTR [ecx+0xf121143],cl
  412753:	mov    ebx,0x33ee6c3d
  412758:	cdq    
  412759:	cmp    al,0x6c
  41275b:	mov    BYTE PTR [esi-0xb66cc3b],0xed
  412762:	xchg   ecx,eax
  412763:	add    DWORD PTR [ebx-0x1],edi
  412766:	mov    esi,0xa409ed3d
  41276b:	je     0x4127df
  41276d:	cmp    ebx,edx
  41276f:	lods   eax,DWORD PTR ds:[esi]
  412770:	out    0x99,eax
  412772:	or     BYTE PTR ds:0xe7de495,al
  412778:	rol    DWORD PTR [edi+0x23247727],0x44
  41277f:	shr    ah,0x1e
  412782:	mov    esi,DWORD PTR [esi]
  412784:	mul    DWORD PTR [eax+0x10]
  412787:	xchg   ecx,eax
  412788:	jno    0x412792
  41278a:	dec    eax
  41278b:	shl    dl,0xe4
  41278e:	adc    esp,DWORD PTR [esi]
  412790:	mov    esp,0x7663f4f2
  412795:	add    cl,BYTE PTR [edx]
  412797:	cld    
  412798:	popf   
  412799:	adc    BYTE PTR [edx+0x57],dh
  41279c:	sub    BYTE PTR [edx+0x4d],0x17
  4127a0:	fisubr WORD PTR [ecx+0x66]
  4127a3:	cmp    ebx,DWORD PTR [ebx+0x6b528f5c]
  4127a9:	lods   eax,DWORD PTR ds:[esi]
  4127aa:	retf   
  4127ab:	mov    ebp,edi
  4127ad:	shr    BYTE PTR [esi],cl
  4127af:	fisubr DWORD PTR [esi]
  4127b1:	and    ebx,DWORD PTR [ebx+0xa153a03]
  4127b7:	fstp   DWORD PTR [ecx]
  4127b9:	sub    DWORD PTR [ecx+0x2c4226dc],esp
  4127bf:	sub    ah,cl
  4127c1:	mov    cl,0xe
  4127c3:	or     ebx,DWORD PTR [ebx+edi*8+0x69]
  4127c7:	test   DWORD PTR [esi],esi
  4127c9:	(bad)  
  4127ca:	jl     0x41282f
  4127cc:	cmp    ebp,DWORD PTR [eax-0x5a4fce1d]
  4127d2:	in     al,0x3d
  4127d4:	sbb    bh,BYTE PTR [ebp-0x12]
  4127d7:	mov    bl,0x9a
  4127d9:	nop
  4127da:	imul   sp,WORD PTR [edi],0xdd7
  4127df:	mov    al,dh
  4127e1:	or     eax,0xf135f5f6
  4127e6:	fld    st(1)
  4127e8:	mov    BYTE PTR [ebx+ecx*1-0x5f],ch
  4127ec:	pop    edi
  4127ed:	or     al,0xb6
  4127ef:	jle    0x41282b
  4127f1:	gs sbb al,0x1e
  4127f4:	inc    esp
  4127f5:	bound  ebp,QWORD PTR [edx-0x6f]
  4127f8:	out    0xc,al
  4127fa:	xlat   BYTE PTR ds:[ebx]
  4127fb:	push   es
  4127fc:	aad    0x4d
  4127fe:	jmp    0xeb22:0xd88db27e
  412805:	mov    ?,WORD PTR [ebx+ebp*8-0x11]
  412809:	jle    0x412802
  41280b:	mov    esp,0x45664208
  412810:	mul    BYTE PTR [edx-0x4f4f5058]
  412816:	sub    esp,DWORD PTR [esi+0x6e92c287]
  41281c:	ret    0x8446
  41281f:	hlt    
  412820:	push   edx
  412821:	xchg   esi,eax
  412822:	push   ss
  412823:	pop    edi
  412824:	ins    DWORD PTR es:[edi],dx
  412825:	rcl    BYTE PTR [esi+ebp*8-0x5115e31a],0x5b
  41282d:	push   esi
  41282e:	pop    ebp
  41282f:	or     ah,al
  412831:	xchg   ecx,eax
  412832:	adc    al,0x8f
  412834:	repnz (bad) 
  412836:	pop    ss
  412837:	or     DWORD PTR [eax],ebp
  412839:	sbb    esi,esi
  41283b:	mov    ds:0xc92b0dbe,eax
  412840:	xchg   edi,eax
  412841:	in     eax,dx
  412842:	push   eax
  412843:	and    eax,0x308c9be9
  412848:	scas   al,BYTE PTR es:[edi]
  412849:	call   0x75b1:0x154ad327
  412850:	mov    dh,0x1e
  412852:	in     eax,0x3e
  412854:	adc    eax,0xc5561827
  412859:	inc    esp
  41285a:	(bad)  
  41285b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41285c:	jb     0x4127f6
  41285e:	lods   al,BYTE PTR ds:[esi]
  41285f:	mov    ds,WORD PTR [edi]
  412861:	inc    esi
  412862:	enter  0x46b5,0x5f
  412866:	jmp    0xb432:0x6e767dad
  41286d:	mov    dh,0x67
  41286f:	cwde   
  412870:	pop    eax
  412871:	lahf   
  412872:	ins    BYTE PTR es:[edi],dx
  412873:	sub    ch,ah
  412875:	ret    0x829a
  412878:	cmp    al,0x8c
  41287a:	out    dx,al
  41287b:	popa   
  41287c:	outs   dx,DWORD PTR ds:[esi]
  41287d:	ss cmp dh,al
  412880:	mul    BYTE PTR [ebx-0x7a77c5d3]
  412886:	or     BYTE PTR [ebx+0x10ebeb02],bl
  41288c:	enter  0xa942,0x80
  412890:	loop   0x41284c
  412892:	pop    ss
  412893:	mov    WORD PTR ds:0x9fb5caea,fs
  412899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41289a:	push   ecx
  41289b:	mov    cl,0xe3
  41289d:	cmp    dl,BYTE PTR [edi]
  41289f:	(bad)  
  4128a0:	mov    esp,0xb10ab5c5
  4128a5:	add    eax,0xf0906b81
  4128aa:	aad    0xf8
  4128ac:	test   BYTE PTR [edi],0xc1
  4128af:	out    dx,al
  4128b0:	jne    0x412866
  4128b2:	jbe    0x412892
  4128b4:	clc    
  4128b5:	jecxz  0x41288d
  4128b7:	dec    esi
  4128b8:	loopne 0x412840
  4128ba:	sbb    al,0xfc
  4128bc:	jo     0x412926
  4128be:	add    eax,0x698c5300
  4128c3:	stc    
  4128c4:	scas   eax,DWORD PTR es:[edi]
  4128c5:	mov    ah,0xfc
  4128c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128c8:	cs push 0x7898d72f
  4128ce:	(bad)  
  4128cf:	push   edx
  4128d0:	adc    BYTE PTR [edi-0x4652b33c],dh
  4128d6:	pop    esp
  4128d7:	xchg   edi,eax
  4128d8:	in     eax,0x94
  4128da:	and    ebx,ebp
  4128dc:	cmp    al,0x94
  4128de:	ins    DWORD PTR es:[edi],dx
  4128df:	and    eax,0xc0611201
  4128e4:	pop    ecx
  4128e5:	or     ecx,0xffffff8d
  4128e8:	push   ecx
  4128e9:	jmp    esi
  4128eb:	xor    BYTE PTR [esi-0x26],bl
  4128ee:	mov    ecx,DWORD PTR [esi+0x71]
  4128f1:	pop    edi
  4128f2:	mov    ebp,0x4650dec4
  4128f7:	dec    edx
  4128f8:	dec    edx
  4128f9:	ins    DWORD PTR es:[edi],dx
  4128fa:	adc    esi,DWORD PTR cs:[ebx]
  4128fd:	dec    esp
  4128fe:	inc    edx
  4128ff:	mov    gs,WORD PTR [ebx]
  412901:	out    dx,eax
  412902:	inc    ecx
  412903:	div    BYTE PTR [ecx+esi*8+0x4c]
  412907:	sbb    DWORD PTR [ebx],edi
  412909:	mov    edi,0xfa43b011
  41290e:	jmp    0x62667341
  412913:	mov    ds:0xfea303cd,al
  412918:	cmp    cl,BYTE PTR [edx-0x3b]
  41291b:	aaa    
  41291c:	xor    ah,BYTE PTR [ecx-0x41]
  41291f:	dec    eax
  412920:	xchg   esi,eax
  412921:	aaa    
  412922:	(bad)  
  412923:	pop    esp
  412924:	je     0x41290a
  412926:	sub    ebx,DWORD PTR [eax+0x66703ed0]
  41292c:	and    DWORD PTR [edi+esi*1-0x4ec93b69],esi
  412933:	jnp    0x412949
  412935:	or     al,ch
  412937:	mov    ch,0x70
  412939:	mov    WORD PTR [eax],gs
  41293b:	cdq    
  41293c:	loope  0x41292a
  41293e:	sbb    BYTE PTR [esi],cl
  412940:	mov    al,ds:0x50c0437d
  412945:	cs aad 0x4c
  412948:	leave  
  412949:	xchg   ebp,eax
  41294a:	push   0xb3a9f82d
  41294f:	sub    al,0x61
  412951:	or     BYTE PTR [eax],cl
  412953:	pop    ebx
  412954:	pop    ebx
  412955:	xor    bh,dh
  412957:	loope  0x41290b
  412959:	inc    edx
  41295a:	cmp    BYTE PTR [eax-0x39],cl
  41295d:	stos   BYTE PTR es:[edi],al
  41295e:	ror    bh,0x1d
  412961:	mov    ecx,0xa670b93b
  412966:	dec    ecx
  412967:	sub    dh,BYTE PTR [ebx]
  412969:	retf   
  41296a:	jmp    0x4129b9
  41296c:	nop
  41296d:	sti    
  41296e:	jbe    0x4129bc
  412970:	jmp    0x412970
  412972:	outs   dx,BYTE PTR ds:[esi]
  412973:	popf   
  412974:	push   ds
  412975:	call   0x71e1:0x8cbce335
  41297c:	xchg   ecx,eax
  41297d:	push   ds
  41297e:	fcmovb st,st(1)
  412980:	das    
  412981:	mov    eax,ds
  412983:	cld    
  412984:	sbb    ebp,esi
  412986:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412988:	mov    ecx,0x67ec1796
  41298d:	nop
  41298e:	fwait
  41298f:	dec    ebx
  412990:	pop    esi
  412991:	jl     0x412985
  412993:	adc    bh,bh
  412995:	in     eax,dx
  412996:	vxorpd ymm6,ymm0,YMMWORD PTR [edi+0x24]
  41299b:	rol    BYTE PTR [edx-0x5f],0xd5
  41299f:	daa    
  4129a0:	mov    dl,cl
  4129a2:	sbb    BYTE PTR [eax],al
  4129a4:	mov    ebx,0x481beb42
  4129a9:	js     0x4129db
  4129ab:	sub    bh,BYTE PTR [eax-0x9]
  4129ae:	int    0xfb
  4129b0:	mov    bh,0xc2
  4129b2:	shl    BYTE PTR [esi-0x2ba44513],1
  4129b8:	push   edx
  4129b9:	cmp    BYTE PTR [esi-0x63],bl
  4129bc:	mov    ah,0xf
  4129be:	in     eax,0x51
  4129c0:	(bad)  
  4129c1:	fmul   st,st(4)
  4129c3:	mov    cl,0x8f
  4129c5:	int    0xd
  4129c7:	inc    edx
  4129c8:	ja     0x41294f
  4129ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129cb:	push   ebp
  4129cc:	popf   
  4129cd:	dec    edi
  4129ce:	push   cs
  4129cf:	jge    0x4129a9
  4129d1:	enter  0x39fb,0x5d
  4129d5:	hlt    
  4129d6:	mov    ebp,0xb236e486
  4129db:	xor    DWORD PTR [edi],edx
  4129dd:	xchg   cl,ah
  4129df:	pop    esi
  4129e0:	sbb    BYTE PTR [eax+edi*8-0x7e978b24],ch
  4129e7:	femms  
  4129e9:	cmp    ecx,DWORD PTR [edi-0x1f8b92c6]
  4129ef:	gs inc ebp
  4129f1:	and    bh,BYTE PTR [edi-0x4efa98cd]
  4129f7:	iret   
  4129f8:	sub    esp,esi
  4129fa:	dec    ebx
  4129fb:	sbb    cl,dh
  4129fd:	pop    esp
  4129fe:	(bad)  [ebx-0x19]
  412a01:	mov    DWORD PTR [edi],edx
  412a03:	cmp    al,0x66
  412a05:	push   edi
  412a06:	fsub   DWORD PTR [ebx-0x73]
  412a09:	test   BYTE PTR [esp+eax*4+0xa86307a],ch
  412a10:	dec    ecx
  412a11:	(bad)
  412a16:	std    
  412a17:	cmc    
  412a18:	enter  0x313,0x94
  412a1c:	test   BYTE PTR [edi+0x4d4c5fee],ch
  412a22:	fdiv   QWORD PTR [eax+esi*4]
  412a25:	xchg   edx,eax
  412a26:	cmp    DWORD PTR [esi-0x6d],ecx
  412a29:	cmc    
  412a2a:	xor    al,0x55
  412a2c:	fsubr  st(4),st
  412a2e:	sub    al,0x63
  412a30:	adc    al,0x4d
  412a32:	xchg   ecx,eax
  412a33:	loopne 0x4129ff
  412a35:	sub    eax,0x94ed9389
  412a3a:	js     0x4129ef
  412a3c:	cmp    eax,0xa2472934
  412a41:	or     al,0xa7
  412a43:	add    eax,0x81dbe0a0
  412a48:	xchg   DWORD PTR [edi],esp
  412a4a:	imul   esp,esi,0x32
  412a4d:	pop    ds
  412a4e:	adc    al,0x3d
  412a50:	dec    ebp
  412a51:	cld    
  412a52:	cwde   
  412a53:	in     al,0xc8
  412a55:	dec    edx
  412a56:	mov    al,ds:0x75ed52b2
  412a5b:	bound  edx,QWORD PTR [ecx+0x670a7ec3]
  412a61:	mov    ah,0xbb
  412a63:	lea    edi,[edi]
  412a65:	sub    al,0xcf
  412a67:	pop    edi
  412a68:	jbe    0x412a24
  412a6a:	add    ecx,DWORD PTR [ebx+0x4e2b9927]
  412a70:	jmp    0x413f22e0
  412a75:	sub    al,0x41
  412a77:	jno    0x412a58
  412a79:	mov    ds:0x72c896bb,al
  412a7e:	cmp    DWORD PTR [ecx-0x17182de2],esi
  412a84:	inc    eax
  412a85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a86:	aam    0xf
  412a88:	aad    0x55
  412a8a:	sbb    eax,0x7626cfb0
  412a8f:	sub    esp,DWORD PTR [edx]
  412a91:	jmp    0x130cafd0
  412a96:	inc    edi
  412a97:	pop    eax
  412a98:	retf   
  412a99:	inc    ebp
  412a9a:	mov    eax,DWORD PTR [ecx-0x33aff1f3]
  412aa0:	mov    edi,0xd51ffcb
  412aa5:	cmp    DWORD PTR [edx+0x3740a031],esi
  412aab:	pop    edx
  412aac:	stc    
  412aad:	mov    bl,0x46
  412aaf:	sbb    al,0x77
  412ab1:	jnp    0x412a41
  412ab3:	outs   dx,BYTE PTR ds:[esi]
  412ab4:	xchg   esi,eax
  412ab5:	xchg   esi,eax
  412ab6:	dec    ebp
  412ab7:	jne    0x412b07
  412ab9:	and    cl,BYTE PTR [ecx]
  412abb:	and    cl,BYTE PTR [edx+0x15]
  412abe:	add    edx,edx
  412ac0:	sbb    bl,cl
  412ac2:	or     dh,BYTE PTR [esi-0x753b589d]
  412ac8:	int3   
  412ac9:	sub    al,0x54
  412acb:	clc    
  412acc:	push   edi
  412acd:	push   esp
  412ace:	sub    DWORD PTR [ecx-0x3a871432],edi
  412ad4:	push   edi
  412ad5:	mov    esp,0xa05ca6f7
  412ada:	int    0x24
  412adc:	push   ss
  412add:	xchg   esi,eax
  412ade:	jbe    0x412b51
  412ae0:	mov    edi,0x132861f9
  412ae5:	das    
  412ae6:	sti    
  412ae7:	(bad)  
  412ae8:	sbb    edx,DWORD PTR [ecx-0x6]
  412aeb:	int    0x81
  412aed:	jnp    0x412ab2
  412aef:	cmp    eax,0x98fa8d11
  412af4:	out    0x74,eax
  412af6:	xchg   BYTE PTR [esi+0x2],ch
  412af9:	mov    al,ds:0x53eb0e4e
  412afe:	jo     0x412afb
  412b00:	pop    esp
  412b01:	cmp    dh,bl
  412b03:	mov    bl,0x5c
  412b05:	dec    ebp
  412b06:	mov    ebx,DWORD PTR [ebp+eiz*2+0x67]
  412b0a:	inc    eax
  412b0b:	rcr    ebp,0xf5
  412b0e:	test   DWORD PTR [edi-0x24],edi
  412b11:	test   eax,0xe6259f31
  412b16:	fisubr DWORD PTR [ebx-0x2e]
  412b19:	icebp  
  412b1a:	jb     0x412af4
  412b1c:	dec    esi
  412b1d:	fwait
  412b1e:	mov    esp,0x4f1debfd
  412b23:	in     al,0x28
  412b25:	test   BYTE PTR [ecx-0x3a],cl
  412b28:	pop    edi
  412b29:	dec    ebx
  412b2a:	jle    0x412ba3
  412b2c:	cdq    
  412b2d:	jne    0x412b83
  412b2f:	lea    esi,[ebx]
  412b31:	fidiv  DWORD PTR [edi+0x42]
  412b34:	and    al,0x11
  412b36:	pop    esi
  412b37:	aas    
  412b38:	and    dl,ah
  412b3a:	retf   
  412b3b:	shl    DWORD PTR ds:0x39e7dca1,1
  412b41:	xor    cl,bh
  412b43:	push   eax
  412b44:	jle    0x412b24
  412b46:	pop    ebp
  412b47:	sti    
  412b48:	dec    esp
  412b49:	and    esi,esp
  412b4b:	fild   DWORD PTR gs:[eax+0x1b]
  412b4f:	aas    
  412b50:	test   eax,0xfc879c49
  412b55:	push   0x324a0910
  412b5a:	lods   al,BYTE PTR ds:[esi]
  412b5b:	sub    esp,DWORD PTR [ebx-0x1f05e2db]
  412b61:	loopne 0x412b06
  412b63:	and    eax,0x430e3ac9
  412b68:	xchg   edi,eax
  412b69:	jae    0x412b2b
  412b6b:	mov    edi,0xdaf7869f
  412b70:	push   eax
  412b71:	fdiv   DWORD PTR ds:0x95974dda
  412b77:	fadd   QWORD PTR [edi-0x47]
  412b7a:	ret    0x9673
  412b7d:	ds pop eax
  412b7f:	sahf   
  412b80:	mov    al,0x77
  412b82:	test   eax,0x60c6864b
  412b87:	cmp    al,0xa2
  412b89:	inc    eax
  412b8a:	loopne 0x412b8b
  412b8c:	xchg   ecx,eax
  412b8d:	or     DWORD PTR [ecx+eiz*4+0x2e668c79],esi
  412b94:	push   ebp
  412b95:	retf   
  412b96:	cmp    ebp,DWORD PTR [edx-0x1906df7b]
  412b9c:	sub    BYTE PTR [eax+0x20e6e8e0],bl
  412ba2:	je     0x412bc6
  412ba4:	pop    es
  412ba5:	mov    ss,edx
  412ba7:	pop    eax
  412ba8:	aas    
  412ba9:	sbb    cl,0x58
  412bac:	xor    edx,edi
  412bae:	push   ecx
  412baf:	call   0x518601e3
  412bb4:	push   ecx
  412bb5:	jne    0x412b68
  412bb7:	data16 rcr cl,cl
  412bba:	mov    dl,0x5f
  412bbc:	inc    eax
  412bbd:	xchg   ecx,eax
  412bbe:	mov    esp,0x5b0134ef
  412bc3:	or     al,0x57
  412bc5:	pop    edx
  412bc6:	idiv   BYTE PTR [edx+eax*4-0x73]
  412bca:	push   ebx
  412bcb:	mov    cl,0x95
  412bcd:	mov    al,ds:0xca20e71e
  412bd2:	mul    dh
  412bd4:	jl     0x412bd6
  412bd6:	aas    
  412bd7:	test   eax,0x275f6079
  412bdc:	push   esp
  412bdd:	jo     0x412bbc
  412bdf:	or     al,0x50
  412be1:	cmc    
  412be2:	and    ah,cl
  412be4:	jnp    0x412c18
  412be6:	popa   
  412be7:	or     dh,cl
  412be9:	xchg   DWORD PTR [esi],ebp
  412beb:	cwde   
  412bec:	shl    bl,1
  412bee:	sahf   
  412bef:	ret    0x312a
  412bf2:	push   edx
  412bf3:	inc    eax
  412bf4:	sub    edi,DWORD PTR [ecx-0x5e]
  412bf7:	xchg   DWORD PTR [ebx-0x2ce29b1e],esp
  412bfd:	je     0x412bf5
  412bff:	jb     0x412c55
  412c01:	xor    bl,BYTE PTR [ebx+ebx*1-0xf]
  412c05:	repz dec esp
  412c07:	push   ds
  412c08:	adc    bh,BYTE PTR [edx+0x3f37fba0]
  412c0e:	(bad)  
  412c0f:	mov    ebx,DWORD PTR [eax+0x6f9851dc]
  412c15:	lea    ebx,ds:0xbfb9505f
  412c1b:	fiadd  DWORD PTR [edi-0xc]
  412c1e:	mov    DWORD PTR [edi-0x1e],ebp
  412c21:	call   FWORD PTR [edi]
  412c23:	addr16 inc ecx
  412c25:	xor    BYTE PTR [edx+0x4f],bh
  412c28:	test   BYTE PTR [ecx+0x21],bh
  412c2b:	jge    0x412ca8
  412c2d:	in     eax,0x9f
  412c2f:	mov    dl,0x63
  412c31:	mov    ds:0x8bf0e6b9,al
  412c36:	mov    WORD PTR [ebx-0x35],ss
  412c39:	and    ecx,esi
  412c3b:	retf   
  412c3c:	push   0xfffffffc
  412c3e:	push   cs
  412c3f:	adc    al,0x3
  412c41:	push   es
  412c42:	enter  0x3463,0xaa
  412c46:	jge    0x412cac
  412c48:	aaa    
  412c49:	pusha  
  412c4a:	mov    dl,0xac
  412c4c:	cmc    
  412c4d:	jnp    0x412cc7
  412c4f:	sbb    al,0x69
  412c51:	(bad)  
  412c52:	fisubr DWORD PTR [ecx-0x73]
  412c55:	lahf   
  412c56:	sbb    BYTE PTR [edx+0x69],0x94
  412c5a:	mov    ebx,0x39e97128
  412c5f:	add    eax,0x23e9f13f
  412c64:	sbb    al,BYTE PTR [esi-0x5398ec03]
  412c6a:	xor    al,0x2a
  412c6d:	and    al,0xb2
  412c6f:	adc    esp,DWORD PTR [ecx]
  412c71:	fistp  QWORD PTR [esi]
  412c73:	movntq QWORD PTR [edx-0x2adcb1de],mm0
  412c7a:	data16 and BYTE PTR [esi-0x72f033d7],ch
  412c81:	arpl   WORD PTR [esi],ax
  412c83:	inc    eax
  412c84:	xchg   DWORD PTR [eax+eax*2+0x68],esi
  412c88:	xchg   ebx,eax
  412c89:	sub    edx,0x893dbeaa
  412c8f:	push   ebx
  412c90:	mov    cl,BYTE PTR [ebx]
  412c92:	xor    al,0x49
  412c94:	mov    ch,BYTE PTR [esi]
  412c96:	cmp    al,0xdd
  412c98:	sub    bh,cl
  412c9a:	call   FWORD PTR [esi+edi*2-0x1c]
  412c9e:	aam    0xdd
  412ca0:	lods   al,BYTE PTR ds:[esi]
  412ca1:	stos   BYTE PTR es:[edi],al
  412ca2:	sub    ah,dh
  412ca4:	push   esi
  412ca5:	retf   0xf431
  412ca8:	pop    esp
  412ca9:	adc    cl,dh
  412cab:	jo     0x412cb7
  412cad:	call   0x5bf7134d
  412cb2:	jg     0x412d0c
  412cb4:	mov    ch,BYTE PTR [edi]
  412cb6:	mov    DWORD PTR ds:[ecx],ebp
  412cb9:	mov    esp,0x6d3a0526
  412cbe:	mov    ebp,0x8826035a
  412cc3:	call   0x2edc4453
  412cc8:	inc    esi
  412cc9:	cmp    ch,BYTE PTR [edi-0x56db076e]
  412ccf:	idiv   BYTE PTR [esi-0x6ba95e8f]
  412cd5:	jo     0x412c7c
  412cd7:	sub    BYTE PTR [edx],al
  412cd9:	sahf   
  412cda:	test   BYTE PTR ds:0xbf088335,bh
  412ce0:	cmp    BYTE PTR [eax-0x80],dl
  412ce3:	popf   
  412ce4:	sub    bl,dl
  412ce6:	ss jae 0x412cb7
  412ce9:	push   ds
  412cea:	test   DWORD PTR [eax+0xf],edi
  412ced:	cwde   
  412cee:	outs   dx,BYTE PTR ds:[esi]
  412cef:	(bad)  
  412cf0:	xlat   BYTE PTR ds:[ebx]
  412cf1:	mov    BYTE PTR [eax],al
  412cf3:	cdq    
  412cf4:	and    DWORD PTR [esi-0x5620ad2a],ebp
  412cfa:	ja     0x412cdf
  412cfc:	push   0x3e
  412cfe:	sub    bh,BYTE PTR ds:0x9348b53b
  412d04:	xor    ebx,DWORD PTR [ebp-0xe]
  412d07:	add    eax,0x2021adbd
  412d0c:	sar    ebx,cl
  412d0e:	adc    eax,0x6a17d55e
  412d13:	into   
  412d14:	jge    0x412d26
  412d16:	mov    dh,0x89
  412d18:	(bad)  
  412d19:	adc    eax,0x194d001
  412d1e:	arpl   WORD PTR [eax],ax
  412d20:	call   0x7be1:0x2023a2ce
  412d27:	jmp    0xecb10875
  412d2c:	add    eax,0xff0c5576
  412d31:	pop    ss
  412d32:	mov    ch,0x3c
  412d34:	mov    eax,0xfbbcf27
  412d39:	fnstenv [esi+edi*4+0x5be5f0bc]
  412d40:	lahf   
  412d41:	add    esp,ecx
  412d43:	jmp    0x3977d27e
  412d48:	mov    ah,0x33
  412d4a:	stc    
  412d4b:	jge    0x412ce1
  412d4d:	pop    ebp
  412d4e:	push   ebp
  412d4f:	test   eax,0x1efca100
  412d54:	fdiv   DWORD PTR [ebp+ebx*4+0x72cc767f]
  412d5b:	push   ds
  412d5c:	test   al,0x6b
  412d5e:	adc    al,0x75
  412d60:	ror    BYTE PTR [ebx-0x54],cl
  412d63:	xor    eax,0xf0fc94d5
  412d68:	in     al,0xcd
  412d6a:	push   ebp
  412d6b:	dec    esi
  412d6c:	xor    ebp,edi
  412d6e:	mov    edi,DWORD PTR [ebx+esi*1]
  412d71:	cmp    dl,BYTE PTR [eax]
  412d73:	adc    al,0x30
  412d75:	nop
  412d76:	jo     0x412def
  412d78:	or     DWORD PTR ds:0x1cb26edd,edi
  412d7e:	sub    ch,bl
  412d80:	inc    edi
  412d81:	mov    ds,WORD PTR [edi+0x55]
  412d84:	ds lahf 
  412d86:	adc    DWORD PTR [edx],edi
  412d88:	outs   dx,BYTE PTR ds:[esi]
  412d89:	iret   
  412d8a:	mov    DWORD PTR [edi-0x71e2b505],edx
  412d90:	sbb    bh,BYTE PTR [edx]
  412d92:	or     al,0x7d
  412d94:	inc    edi
  412d95:	jae    0x412d1f
  412d97:	stc    
  412d98:	and    esp,0x140ca008
  412d9e:	retf   0xfa74
  412da1:	jae    0x412d4d
  412da3:	shl    BYTE PTR [ebp+0x1a],1
  412da6:	hlt    
  412da7:	inc    edi
  412da8:	stos   DWORD PTR es:[edi],eax
  412da9:	stos   BYTE PTR es:[edi],al
  412daa:	and    al,0x11
  412dac:	dec    ebx
  412dad:	in     al,0x1e
  412daf:	je     0x412ddb
  412db1:	jnp    0x412d52
  412db3:	sbb    dl,BYTE PTR [esi]
  412db5:	test   eax,0x540e48a6
  412dba:	mov    edx,0x951af9e3
  412dbf:	jle    0x412db2
  412dc1:	jmp    0xa03e:0x241e6c9f
  412dc8:	data16 xor BYTE PTR [esi+edi*1],bh
  412dcc:	mov    ah,BYTE PTR [ebx+0x3c39ab05]
  412dd2:	mov    ecx,0xb2b01df2
  412dd7:	leave  
  412dd8:	or     DWORD PTR [edx-0x44],esi
  412ddb:	popf   
  412ddc:	adc    cl,ch
  412dde:	and    ch,dl
  412de0:	mov    ch,0xd8
  412de2:	call   0x62c:0xb7446be2
  412de9:	ds popa 
  412deb:	aaa    
  412dec:	scas   eax,DWORD PTR es:[edi]
  412ded:	or     DWORD PTR [ecx],esi
  412def:	jle    0x412d9f
  412df1:	test   dl,bh
  412df3:	popf   
  412df4:	cmp    DWORD PTR [ecx],ebp
  412df6:	mov    eax,DWORD PTR [ebx+0x34c5ce9b]
  412dfc:	inc    ebx
  412dfd:	repz dec eax
  412dff:	and    al,dl
  412e01:	imul   esp,DWORD PTR [edx-0x3fa51e72],0x76
  412e08:	sbb    BYTE PTR [edx+eiz*1],bl
  412e0b:	mov    fs,WORD PTR [esi+0x724e2442]
  412e11:	cmc    
  412e12:	(bad)  
  412e13:	lock mov eax,ds:0x2ac86dc2
  412e19:	adc    bh,BYTE PTR [edi-0x2d]
  412e1c:	int3   
  412e1d:	dec    ecx
  412e1e:	lock sbb dh,BYTE PTR [esi+0x30]
  412e22:	cmp    al,0x52
  412e24:	jns    0x412db8
  412e26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e27:	pop    ebp
  412e29:	or     BYTE PTR [edx-0x2977fdcb],al
  412e2f:	mov    ds:0xd8a1b95d,al
  412e34:	ret    
  412e35:	cwde   
  412e36:	mov    dh,0x1f
  412e38:	fninit 
  412e3a:	aas    
  412e3b:	jnp    0x412dfb
  412e3d:	retf   0xfe7a
  412e40:	pop    ecx
  412e41:	jmp    0x412e15
  412e43:	push   ds
  412e44:	sbb    DWORD PTR [edi+eax*8-0x3fb7e345],eax
  412e4b:	call   0xc65e:0xecdde13c
  412e52:	dec    eax
  412e53:	jae    0x412e5a
  412e55:	dec    ecx
  412e56:	neg    bl
  412e58:	mov    eax,ds:0x1c8d498
  412e5d:	arpl   sp,bx
  412e5f:	pop    ebp
  412e60:	ins    DWORD PTR es:[edi],dx
  412e61:	and    esi,0x35
  412e64:	jae    0x412e43
  412e66:	call   FWORD PTR [esi]
  412e68:	stos   DWORD PTR es:[edi],eax
  412e69:	retf   0x90ec
  412e6c:	add    eax,0x4736da5c
  412e71:	adc    DWORD PTR [ebx],0x71
  412e74:	push   es
  412e75:	mov    dh,0x49
  412e77:	cmp    eax,0x645cc6a4
  412e7c:	mov    esi,0xccfc3730
  412e81:	int3   
  412e82:	jmp    0xcf039626
  412e87:	arpl   WORD PTR [esi-0x2f],di
  412e8a:	(bad)  
  412e8b:	jnp    0x412e28
  412e8d:	push   cs
  412e8e:	ret    0xb6f0
  412e91:	lods   eax,DWORD PTR ds:[esi]
  412e92:	pop    esp
  412e93:	cmp    al,0x6b
  412e95:	retf   0xe0fc
  412e98:	mov    eax,ds:0x1f29f397
  412e9d:	scas   al,BYTE PTR es:[edi]
  412e9e:	jnp    0x412e62
  412ea0:	mov    ?,esi
  412ea2:	fst    DWORD PTR [edi-0x17]
  412ea5:	cmp    DWORD PTR [esi],esp
  412ea7:	outs   dx,DWORD PTR ds:[esi]
  412ea8:	(bad)  
  412eaa:	xchg   edi,eax
  412eab:	pop    eax
  412eac:	xlat   BYTE PTR ds:[ebx]
  412ead:	les    ebx,FWORD PTR [ecx-0x24d6cd3d]
  412eb3:	(bad)  
  412eb4:	ds daa 
  412eb6:	or     al,0x2b
  412eb8:	aam    0xd6
  412eba:	xchg   esp,eax
  412ebb:	ret    
  412ebc:	cmc    
  412ebd:	inc    ebp
  412ebe:	test   al,0xe2
  412ec0:	cmc    
  412ec1:	and    eax,0xd8d5071e
  412ec6:	sar    DWORD PTR [edi-0x6a],1
  412ec9:	outs   dx,BYTE PTR ds:[esi]
  412eca:	gs add eax,0xb109035f
  412ed0:	xlat   BYTE PTR ds:[ebx]
  412ed1:	push   ebp
  412ed2:	std    
  412ed3:	stos   BYTE PTR es:[edi],al
  412ed4:	cli    
  412ed5:	ins    DWORD PTR es:[edi],dx
  412ed6:	fidivr DWORD PTR [ecx+esi*2+0x65]
  412eda:	into   
  412edb:	cs addr16 jmp 0xcfe9:0x509f8c17
  412ee4:	xor    eax,0x6c1636b9
  412ee9:	jge    0x412eaf
  412eeb:	mov    DWORD PTR [edi-0x8562084],edx
  412ef1:	sbb    DWORD PTR [ecx+0x6f0fcb7b],eax
  412ef7:	ror    DWORD PTR [ecx+0x1d80ddc7],0x17
  412efe:	cmp    edi,DWORD PTR [ebx+0x66]
  412f01:	dec    edx
  412f02:	inc    ebp
  412f03:	cmp    ecx,DWORD PTR [edi-0x57]
  412f06:	sar    BYTE PTR [esi-0xe0759f5],cl
  412f0c:	push   ds
  412f0d:	jmp    0x4f91985
  412f12:	cmp    BYTE PTR cs:[ecx-0x6ff0ec4d],0xe7
  412f1a:	or     eax,0xc40e7c34
  412f1f:	xor    BYTE PTR [edx-0x2f0e35ef],dh
  412f25:	leave  
  412f26:	dec    ebx
  412f27:	imul   edx,eax,0x7ad821c5
  412f2d:	xchg   esp,eax
  412f2e:	jnp    0x412f4e
  412f30:	push   esi
  412f31:	loope  0x412f3b
  412f33:	xchg   eax,edx
  412f35:	cmp    BYTE PTR [edi-0x24b1de47],bl
  412f3b:	xchg   BYTE PTR [ebp+0x5cb3ca38],ch
  412f41:	imul   ebx,DWORD PTR [ecx-0x55c44547],0xffffffa0
  412f48:	push   ds
  412f49:	adc    ch,BYTE PTR [esi+ecx*1+0x1f286098]
  412f50:	and    al,0xd0
  412f52:	ds fsubr st,st(7)
  412f55:	pshufw mm6,QWORD PTR [esp+eax*1-0x53],0xc9
  412f5b:	(bad)  
  412f5d:	lds    edi,FWORD PTR cs:[edi-0x23]
  412f61:	jmp    0x412f30
  412f63:	mov    esi,0x2e2ef28d
  412f68:	jp     0x412f66
  412f6a:	xor    al,0x4
  412f6c:	mov    esi,fs
  412f6e:	inc    edi
  412f6f:	sub    ch,BYTE PTR [eax]
  412f71:	fistp  DWORD PTR [ebx+ebp*1-0x19]
  412f75:	shr    BYTE PTR [edi],1
  412f77:	sub    al,dh
  412f79:	dec    edx
  412f7a:	jl     0x412fbd
  412f7c:	dec    DWORD PTR [esi+0x61]
  412f7f:	daa    
  412f80:	fwait
  412f81:	in     eax,0x55
  412f83:	outs   dx,DWORD PTR ds:[esi]
  412f84:	jbe    0x412fdc
  412f86:	out    0xfe,eax
  412f88:	mov    edx,0x8ee87197
  412f8d:	pop    esi
  412f8e:	inc    ebp
  412f8f:	mov    DWORD PTR [esi+esi*4-0x7ad98e6c],edx
  412f96:	adc    DWORD PTR ds:0x39db6a07,edx
  412f9c:	adc    BYTE PTR [edx],dh
  412f9e:	push   0xffffffc7
  412fa0:	ss rcr bh,0xfe
  412fa4:	sbb    DWORD PTR [esi+0x28cb8180],edx
  412faa:	clc    
  412fab:	jbe    0x412ff5
  412fad:	push   ebx
  412fae:	dec    ecx
  412faf:	sbb    eax,0xd0cf5fd0
  412fb4:	cmp    BYTE PTR [esp+edi*1],0x5e
  412fb8:	pop    esi
  412fb9:	into   
  412fba:	clc    
  412fbb:	inc    ecx
  412fbc:	imul   ecx,ebp,0xffffff8e
  412fbf:	scas   eax,DWORD PTR es:[edi]
  412fc0:	dec    edx
  412fc1:	sub    bl,BYTE PTR [edi]
  412fc3:	fimul  WORD PTR [esi]
  412fc5:	mov    bh,0x4
  412fc7:	loop   0x412ff1
  412fc9:	sub    DWORD PTR ds:0x3549eb47,ebx
  412fcf:	fadd   st(4),st
  412fd1:	pushf  
  412fd2:	test   BYTE PTR [ebp-0x4],ah
  412fd5:	cmp    al,0xcd
  412fd7:	mov    ecx,0xa465929
  412fdc:	and    DWORD PTR [eax],0x14e4cce
  412fe2:	push   ebx
  412fe3:	xor    BYTE PTR ds:0xf703b9e1,0xeb
  412fea:	in     eax,dx
  412feb:	mov    dl,0x7a
  412fed:	xor    al,BYTE PTR [ebp-0x35fa5b76]
  412ff3:	imul   edi,DWORD PTR [ecx+0x49938f38],0x52ffd7a2
  412ffd:	out    0xde,al
  412fff:	pop    eax
  413000:	cli    
  413001:	les    esi,FWORD PTR [edx]
  413003:	dec    esi
  413004:	test   al,0xc0
  413006:	add    ebp,ebx
  413008:	fsub   st(4),st
  41300a:	mov    eax,ds:0x5b702b1d
  41300f:	cld    
  413010:	mov    al,0x8e
  413012:	adc    edx,DWORD PTR cs:[ecx]
  413015:	dec    esp
  413016:	imul   esi,DWORD PTR [ecx-0x57c4374f],0x2eead574
  413020:	rol    BYTE PTR [esi],1
  413022:	aaa    
  413023:	pusha  
  413024:	(bad)  
  413025:	push   ds
  413026:	sbb    al,BYTE PTR [eax-0x57]
  413029:	add    eax,0x5e18dcfe
  41302e:	mov    bl,0x8b
  413030:	push   cs
  413031:	xchg   ecx,eax
  413032:	sub    ah,BYTE PTR [edi-0x47441ddd]
  413038:	add    al,al
  41303a:	ficomp WORD PTR [edi]
  41303c:	add    BYTE PTR [edx],dl
  41303e:	inc    ebx
  41303f:	fwait
  413040:	or     dl,BYTE PTR [edi]
  413042:	in     al,dx
  413043:	into   
  413044:	mov    eax,ds:0xa65e5c84
  413049:	mov    ebx,0x1587a422
  41304e:	mov    edx,0x79cadc11
  413053:	adc    DWORD PTR [ebx-0x42edbb9b],esi
  413059:	adc    BYTE PTR [edi-0x49],0x3a
  41305d:	inc    ecx
  41305e:	mov    ch,0x15
  413060:	mov    ds:0x7d44d393,al
  413065:	adc    eax,0x1dc667b0
  41306a:	fdivr  DWORD PTR [ecx-0x5cdbb1c9]
  413070:	out    dx,al
  413071:	push   edi
  413072:	xor    ebx,DWORD PTR [edx+0x53]
  413075:	retf   0x3a58
  413078:	push   edi
  413079:	loopne 0x4130c3
  41307b:	int3   
  41307c:	jl     0x413090
  41307e:	and    dl,ch
  413080:	les    ebp,FWORD PTR [ebx+0x4a08614]
  413086:	cwde   
  413087:	stos   BYTE PTR es:[edi],al
  413088:	test   dl,al
  41308a:	push   ss
  41308b:	pop    esp
  41308c:	jl     0x4130ae
  41308e:	add    bl,al
  413090:	mov    edx,0xbb7aae7
  413095:	cwde   
  413096:	mov    WORD PTR [edi+0x63],es
  413099:	push   0xdf56fd52
  41309e:	stc    
  41309f:	hlt    
  4130a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130a1:	repz jmp 0xb70d:0x249e1de5
  4130a9:	and    BYTE PTR [esi],0x3
  4130ac:	cmp    al,0x40
  4130ae:	dec    edx
  4130af:	mov    bl,0x9
  4130b1:	push   ebp
  4130b2:	loopne 0x4130fb
  4130b4:	cmp    eax,0x63382ebc
  4130b9:	stc    
  4130ba:	jp     0x41307e
  4130bc:	cmp    BYTE PTR [esi+0x63f5cec3],bh
  4130c2:	test   BYTE PTR [edx],ah
  4130c4:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130c6:	enter  0x8a,0xef
  4130ca:	call   0xfe11:0xa26fc9fb
  4130d1:	add    edx,DWORD PTR [ecx-0xc]
  4130d4:	jo     0x413112
  4130d6:	loopne 0x413130
  4130d8:	sub    dl,BYTE PTR [eax-0x7a130c0e]
  4130de:	xchg   edx,eax
  4130df:	repz jmp 0x56857abb
  4130e5:	cmp    eax,0xf623c12f
  4130ea:	dec    esi
  4130eb:	pusha  
  4130ec:	nop
  4130ed:	xor    BYTE PTR [ecx-0x7d5f2418],dl
  4130f3:	jbe    0x413138
  4130f5:	(bad)  
  4130f6:	loop   0x4130d5
  4130f8:	mov    eax,ds:0x8d4f078c
  4130fd:	inc    esp
  4130fe:	mov    ch,0xb6
  413100:	jnp    0x4130e9
  413102:	jne    0x4130ed
  413104:	sti    
  413105:	test   ch,ah
  413107:	sbb    al,0x99
  413109:	loope  0x413178
  41310b:	xchg   ebx,eax
  41310c:	sub    al,0x21
  41310e:	xlat   BYTE PTR ds:[ebx]
  41310f:	cmpxchg DWORD PTR [ecx+0x777d674e],ecx
  413116:	(bad)  
  413117:	pop    eax
  413118:	push   ds
  413119:	retf   0xd0e
  41311c:	clc    
  41311d:	or     ch,BYTE PTR [esi-0x5a]
  413120:	mul    ebp
  413122:	mov    WORD PTR [edi],es
  413124:	pop    ebp
  413125:	mov    ecx,0xce09fa1c
  41312a:	addr16 pop edi
  41312c:	pop    esi
  41312d:	repz ja 0x4130e8
  413130:	jge    0x413196
  413132:	or     DWORD PTR [esi-0xe67b4e4],0xee5c9d2a
  41313c:	aaa    
  41313d:	mov    ebx,0xca639362
  413142:	or     BYTE PTR [ebp+0x44871f03],bh
  413148:	clc    
  413149:	push   cs
  41314a:	or     BYTE PTR [edi+eax*4+0x60e337b],ch
  413151:	xchg   esp,eax
  413152:	(bad)  
  413153:	dec    edx
  413154:	jge    0x413190
  413156:	shl    DWORD PTR [esi-0x47],1
  413159:	dec    esp
  41315a:	cdq    
  41315b:	pop    es
  41315c:	xchg   ebp,eax
  41315d:	aad    0x11
  41315f:	push   ebp
  413160:	and    DWORD PTR [ebx+0x2d501b17],0xfffffffc
  413167:	jmp    0xf1c869a0
  41316c:	sbb    dl,0x9f
  41316f:	shr    DWORD PTR [edi-0x71e55605],1
  413175:	cmp    ebx,DWORD PTR [esi-0x36d820a3]
  41317b:	imul   ebp,esi,0x88500c02
  413181:	aad    0x36
  413183:	ret    
  413184:	pop    edx
  413185:	sub    BYTE PTR cs:0x1daf09b2,cl
  41318c:	les    eax,FWORD PTR [ecx]
  41318e:	mov    DWORD PTR [eax+ebx*4-0x1fc27a2f],edi
  413195:	out    dx,eax
  413196:	pushf  
  413197:	mov    dh,0xdc
  413199:	lds    edx,FWORD PTR [eax+ebx*2]
  41319c:	mov    cl,BYTE PTR [esi+0x652519a4]
  4131a2:	jmp    0x413193
  4131a4:	popf   
  4131a5:	enter  0xd43b,0x1d
  4131a9:	or     DWORD PTR [eax-0x30],eax
  4131ac:	out    dx,eax
  4131ad:	adc    BYTE PTR [ebx],ah
  4131af:	shr    edi,1
  4131b1:	mov    eax,0x30e8b819
  4131b6:	in     eax,dx
  4131b7:	popf   
  4131b8:	mov    cl,0x18
  4131ba:	out    dx,eax
  4131bb:	jns    0x4131f3
  4131bd:	sbb    al,0x7c
  4131bf:	gs mov esp,0x5d6f6a18
  4131c5:	dec    eax
  4131c6:	jnp    0x413209
  4131c8:	cmp    edi,ebp
  4131ca:	mov    edi,0xf3443
  4131cf:	mov    al,ds:0x27a8a227
  4131d4:	mov    ebx,0xd9716007
  4131d9:	mov    al,ds:0x496fdb6e
  4131de:	adc    al,0x0
  4131e0:	and    eax,DWORD PTR [ebp-0x29daf06b]
  4131e6:	dec    esi
  4131e7:	sub    al,0xb5
  4131e9:	pop    ebp
  4131ea:	mov    gs,WORD PTR [edx]
  4131ec:	add    eax,0xa9f654b7
  4131f1:	ins    DWORD PTR es:[edi],dx
  4131f2:	or     edx,edi
  4131f4:	sub    al,0x4e
  4131f6:	test   al,0x50
  4131f8:	inc    ecx
  4131f9:	adc    BYTE PTR [ebp-0x4cbdc371],ah
  4131ff:	inc    eax
  413200:	cwde   
  413201:	icebp  
  413202:	pop    eax
  413203:	add    BYTE PTR [edi+0x15],cl
  413206:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413207:	sbb    cl,BYTE PTR [ebx-0x64]
  41320a:	ja     0x41321b
  41320c:	scas   al,BYTE PTR es:[edi]
  41320d:	xchg   DWORD PTR [ebx-0x6b],esp
  413210:	ins    BYTE PTR es:[edi],dx
  413211:	mov    esp,0xf1ce2146
  413216:	pop    ebp
  413217:	not    DWORD PTR [eax-0x53]
  41321a:	jmp    0x4131cf
  41321c:	popf   
  41321d:	jmp    0x413276
  41321f:	fmul   DWORD PTR cs:[ebx]
  413222:	jne    0x4131ae
  413224:	test   eax,ebx
  413226:	je     0x413245
  413228:	mov    ecx,0x6a0a6d79
  41322d:	popa   
  41322e:	mov    cs,WORD PTR [eax+0x283034f1]
  413234:	clc    
  413235:	inc    esp
  413236:	das    
  413237:	into   
  413238:	inc    ecx
  413239:	nop
  41323a:	stc    
  41323b:	adc    DWORD PTR [edi-0x4a354ecf],ebx
  413241:	test   eax,0xed13b069
  413246:	fsubp  st(7),st
  413248:	popa   
  413249:	xchg   ecx,eax
  41324a:	mov    dl,0xe8
  41324c:	lea    edi,[eax-0x60]
  41324f:	adc    al,0x61
  413251:	sub    DWORD PTR [ebx+ebp*8+0x5841bc9c],eax
  413258:	mov    edx,edi
  41325a:	dec    ebp
  41325b:	jecxz  0x4132c1
  41325d:	hlt    
  41325e:	fdivr  st(6),st
  413260:	add    DWORD PTR [eax],edi
  413262:	test   eax,0xa97b034
  413267:	push   0x12edb23
  41326c:	cmp    BYTE PTR [eax+0x34],dl
  41326f:	mov    ebp,0x3f6811c3
  413274:	daa    
  413275:	scas   al,BYTE PTR es:[edi]
  413276:	out    0x63,eax
  413278:	hlt    
  413279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41327a:	jge    0x4132f7
  41327c:	rcr    DWORD PTR [ebp-0x730baaff],1
  413282:	and    al,0x24
  413284:	xor    DWORD PTR [ebp+0x13],ecx
  413287:	mov    ebp,0xedbb7f53
  41328c:	test   ecx,ebp
  41328e:	inc    esi
  41328f:	(bad)  
  413290:	mov    esi,eax
  413292:	cmc    
  413293:	out    dx,al
  413294:	dec    ebp
  413295:	sbb    BYTE PTR [esi+0x4],0x97
  413299:	xchg   bl,ah
  41329b:	call   0x9c5e9676
  4132a0:	shl    DWORD PTR [ecx-0x7c6887d7],1
  4132a6:	pop    es
  4132a7:	ror    ebx,1
  4132a9:	lds    edx,FWORD PTR [esi+0x67beddb9]
  4132af:	rcpps  xmm1,XMMWORD PTR [ebx+0x72f918c9]
  4132b6:	mov    esi,0x13b8c445
  4132bb:	push   0xe81c2715
  4132c0:	cwde   
  4132c1:	sbb    bl,0xcd
  4132c4:	imul   ebx,esi,0x6e
  4132c7:	call   0x42fa:0xda9796fc
  4132ce:	jbe    0x4132cf
  4132d0:	fnstsw WORD PTR [ebx]
  4132d2:	mov    dh,0x86
  4132d4:	add    edi,DWORD PTR [esi]
  4132d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132d7:	add    ecx,ecx
  4132d9:	cmc    
  4132da:	xchg   ecx,eax
  4132db:	out    0xd7,al
  4132dd:	adc    al,0xfa
  4132df:	shl    BYTE PTR [esi],1
  4132e1:	mov    ds:0x54253bc9,eax
  4132e6:	jecxz  0x41329d
  4132e8:	cs gs das 
  4132eb:	out    dx,al
  4132ec:	inc    edi
  4132ed:	mov    DWORD PTR [ecx+0x3c],eax
  4132f0:	and    eax,0xf5c4c75d
  4132f5:	fsubrp st(0),st
  4132f7:	ds dec edx
  4132f9:	daa    
  4132fa:	mov    eax,0x762bd46c
  4132ff:	inc    edx
  413300:	ins    BYTE PTR es:[edi],dx
  413301:	test   eax,0x9d87dcc4
  413306:	pop    edx
  413307:	in     al,0x51
  413309:	fcomip st,st(2)
  41330b:	mov    ebp,esp
  41330d:	(bad)  
  41330e:	jbe    0x4132e2
  413310:	sbb    eax,0x23d7492c
  413315:	ins    BYTE PTR es:[edi],dx
  413316:	inc    eax
  413317:	inc    esp
  413318:	rcr    ebx,cl
  41331a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41331b:	popa   
  41331c:	adc    ah,BYTE PTR [esi-0x20]
  41331f:	jge    0x413369
  413321:	jmp    0x4132f1
  413323:	xchg   esi,eax
  413324:	push   ss
  413325:	jmp    0x413398
  413327:	scas   eax,DWORD PTR es:[edi]
  413328:	imul   ebx,edi,0x62
  41332b:	int    0x41
  41332d:	in     eax,dx
  41332e:	mov    DWORD PTR [edi-0x2],ecx
  413331:	mov    bh,0x9
  413333:	(bad)  
  413334:	mov    al,ds:0x12538c3e
  413339:	jecxz  0x41336d
  41333b:	lahf   
  41333c:	mov    al,0x82
  41333e:	and    al,0x76
  413340:	dec    edi
  413341:	push   ebx
  413342:	imul   edi,DWORD PTR [eax-0x5bcefaa0],0x7e5da429
  41334c:	loopne 0x4133a7
  41334e:	jae    0x413340
  413350:	mov    ds:0x2fb00937,eax
  413355:	cld    
  413356:	loop   0x4132f2
  413358:	pushf  
  413359:	inc    esp
  41335a:	pop    ebp
  41335b:	mov    bl,cl
  41335d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41335e:	mov    ah,0x52
  413360:	out    0x15,eax
  413362:	sbb    dl,BYTE PTR [edx]
  413364:	cmp    eax,DWORD PTR [eax]
  413366:	(bad)  
  413368:	xor    bh,cl
  41336a:	dec    esp
  41336b:	jg     0x4133b0
  41336d:	aas    
  41336e:	and    ch,BYTE PTR [edi+0x2b]
  413371:	aas    
  413372:	repz pop ss
  413374:	mov    edx,0xaf299b4
  413379:	mov    bl,0xf1
  41337b:	sbb    ch,BYTE PTR [edx+0xd]
  41337e:	mov    edx,0x7b37698e
  413383:	jb     0x41338f
  413385:	test   BYTE PTR [eax-0x59],bl
  413388:	push   ecx
  413389:	lds    eax,FWORD PTR [esi]
  41338b:	jl     0x4133da
  41338d:	adc    al,0x4a
  41338f:	adc    al,0xb4
  413391:	pop    edx
  413392:	push   0x3b
  413394:	adc    al,BYTE PTR [ecx]
  413396:	dec    ecx
  413397:	pop    edi
  413398:	retf   0x1af
  41339b:	je     0x4133d0
  41339d:	popf   
  41339e:	mov    ebp,es
  4133a0:	xchg   edi,eax
  4133a1:	mov    ebx,0xb6c8d5e0
  4133a6:	pop    edi
  4133a7:	ins    BYTE PTR es:[edi],dx
  4133a8:	jmp    DWORD PTR ss:[ecx-0x30]
  4133ac:	mov    ecx,0xec0771ac
  4133b1:	jnp    0x4133eb
  4133b3:	mov    edx,0xd7b88946
  4133b8:	jecxz  0x41338d
  4133ba:	dec    ebp
  4133bb:	daa    
  4133bc:	ret    
  4133bd:	and    al,0x6d
  4133bf:	lods   eax,DWORD PTR ds:[esi]
  4133c0:	jmp    0x413409
  4133c2:	mov    DWORD PTR [ebx-0x3e],esp
  4133c5:	fs add al,0x41
  4133c8:	push   0x1b
  4133ca:	repz mov bl,0xc
  4133cd:	push   0x8f1e2bd
  4133d2:	aad    0x3d
  4133d4:	xchg   edx,eax
  4133d5:	add    esp,ebx
  4133d7:	sbb    ecx,ecx
  4133d9:	mov    esp,DWORD PTR [ebp+0x25]
  4133dc:	mov    WORD PTR [ecx],ds
  4133de:	cli    
  4133df:	aad    0x24
  4133e1:	stos   DWORD PTR es:[edi],eax
  4133e2:	hlt    
  4133e3:	dec    esp
  4133e4:	xor    eax,0xf27b4c62
  4133e9:	mov    cl,0x7
  4133eb:	mov    esi,0xa7acad98
  4133f0:	aad    0x5c
  4133f2:	push   cs
  4133f3:	mov    esi,0x8e51fb3c
  4133f8:	dec    ecx
  4133f9:	out    dx,eax
  4133fa:	mov    eax,0x11c66204
  4133ff:	ins    DWORD PTR es:[edi],dx
  413400:	inc    esp
  413401:	les    esi,FWORD PTR [edx-0x5b49ebe8]
  413407:	rcr    DWORD PTR [edx-0x65e65d7f],cl
  41340d:	sbb    DWORD PTR [ebp-0xc],edi
  413410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413411:	mov    BYTE PTR [eax+0x26],0xd7
  413415:	je     0x41343e
  413417:	push   esi
  413418:	jl     0x413434
  41341a:	repnz fs dec esp
  41341d:	pusha  
  41341e:	dec    edx
  41341f:	dec    ebx
  413420:	ja     0x413425
  413422:	fsubr  QWORD PTR [ebp+0x12]
  413425:	outs   dx,DWORD PTR ds:[esi]
  413426:	add    al,0xe5
  413428:	gs dec ecx
  41342a:	xchg   edi,eax
  41342b:	inc    edx
  41342c:	rol    BYTE PTR [edi+0x17],0xdd
  413430:	lods   eax,DWORD PTR ds:[esi]
  413431:	popf   
  413432:	call   DWORD PTR [eax-0x17]
  413435:	ds int3 
  413437:	xchg   BYTE PTR [ebx+0x68],dl
  41343a:	xor    al,0xed
  41343c:	or     DWORD PTR [edx-0x39],eax
  41343f:	mov    esi,0x7fd6e709
  413444:	pop    ecx
  413445:	jns    0x413402
  413447:	fadd   DWORD PTR [esi]
  413449:	lahf   
  41344a:	loop   0x4134bb
  41344c:	scas   eax,DWORD PTR es:[edi]
  41344d:	mov    bl,0x4f
  41344f:	push   0xa84a6572
  413454:	sub    ebp,edx
  413456:	jmp    0xa06e6a2a
  41345b:	gs mov ebx,0xf6361a9b
  413461:	lahf   
  413462:	loope  0x4134ca
  413464:	sub    esp,esp
  413466:	adc    eax,0xf6ecaca0
  41346b:	add    al,0xbb
  41346d:	daa    
  41346e:	dec    esp
  41346f:	in     al,dx
  413470:	mov    DWORD PTR [edi],ecx
  413472:	test   al,0x4c
  413474:	jge    0x41345c
  413476:	loope  0x41344d
  413478:	jns    0x413435
  41347a:	mov    ds:0x7636b601,eax
  41347f:	int3   
  413480:	cmp    BYTE PTR [ecx],bl
  413482:	sbb    ebp,eax
  413484:	mov    esi,0xdf908cac
  413489:	mov    ebp,0x31e81cdc
  41348e:	imul   esi,DWORD PTR [eax],0x40b52ac9
  413494:	cdq    
  413495:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413496:	ins    DWORD PTR es:[edi],dx
  413497:	pop    ecx
  413498:	lock inc eax
  41349a:	loop   0x4134b2
  41349c:	(bad)  
  41349d:	cld    
  41349e:	ja     0xa282ce8d
  4134a4:	popa   
  4134a5:	sbb    ebx,edi
  4134a7:	jl     0x4134c6
  4134a9:	sub    esi,ebp
  4134ab:	(bad)  
  4134ac:	in     al,dx
  4134ad:	clc    
  4134ae:	sbb    ecx,eax
  4134b0:	and    ch,cl
  4134b2:	xchg   ebp,eax
  4134b3:	pop    es
  4134b4:	clc    
  4134b5:	test   eax,0xa2808ff0
  4134ba:	ja     0x4134c3
  4134bc:	outs   dx,DWORD PTR cs:[esi]
  4134be:	out    0xed,al
  4134c0:	mov    bh,0xc9
  4134c2:	jl     0x413525
  4134c4:	outs   dx,BYTE PTR ds:[esi]
  4134c5:	stos   BYTE PTR es:[edi],al
  4134c6:	jmp    0x6022:0xc4f5fa83
  4134cd:	inc    ecx
  4134ce:	mov    bl,0x16
  4134d0:	sbb    BYTE PTR [eax+0x2a15a2dc],bl
  4134d6:	xchg   edx,eax
  4134d7:	dec    ecx
  4134d8:	inc    eax
  4134d9:	xlat   BYTE PTR ds:[ebx]
  4134da:	repz fidivr WORD PTR [esi-0x12b1638]
  4134e1:	loope  0x4134f4
  4134e3:	dec    BYTE PTR [edi+eiz*8]
  4134e6:	push   eax
  4134e7:	jne    0x413493
  4134e9:	cmp    DWORD PTR ds:0xf804a73f,0xdc4ff293
  4134f3:	imul   ebx,DWORD PTR [ecx-0x2a],0x2725de9e
  4134fa:	pop    esp
  4134fb:	xchg   BYTE PTR [esi-0x10],al
  4134fe:	sbb    BYTE PTR [ecx+eiz*2-0x75],bl
  413502:	jge    0x413577
  413504:	add    DWORD PTR [eax+esi*8-0x6],ebx
  413508:	push   ebx
  413509:	(bad)  
  41350a:	out    0xfc,al
  41350c:	push   0x4a49c01c
  413511:	add    al,0x64
  413513:	pop    ebp
  413514:	ins    BYTE PTR es:[edi],dx
  413515:	(bad)  
  413516:	(bad)  
  413517:	scas   eax,DWORD PTR es:[edi]
  413518:	cmp    esi,edi
  41351a:	jmp    0xe8bc:0xda9c4126
  413521:	jae    0x4134e3
  413523:	inc    ebp
  413524:	fs inc ebx
  413526:	jmp    0x1420:0x38125766
  41352d:	rol    ebp,cl
  41352f:	rol    BYTE PTR [eax],cl
  413531:	mov    ecx,0x2d394d6c
  413536:	adc    ebx,DWORD PTR [ecx]
  413538:	and    DWORD PTR [ecx+0x2aa09b42],eax
  41353e:	fnstcw WORD PTR ds:0x1a1ee722
  413544:	aas    
  413545:	pop    ds
  413546:	inc    esi
  413547:	rcl    bh,0x30
  41354a:	mov    esp,gs
  41354c:	or     eax,0x53287c30
  413551:	mov    esi,edi
  413553:	hlt    
  413554:	out    0xf4,al
  413556:	pushf  
  413557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413558:	adc    BYTE PTR [ebx-0x3b],dl
  41355b:	test   BYTE PTR [esi],ch
  41355d:	or     dl,dl
  41355f:	lock push edx
  413561:	mov    dh,0xfe
  413563:	pop    es
  413564:	pop    ecx
  413565:	rol    esp,1
  413567:	ja     0x4135b2
  413569:	pop    edi
  41356a:	dec    ebp
  41356b:	fnsave es:[esi]
  41356e:	pop    eax
  41356f:	fld    DWORD PTR [ecx-0x44d5ef23]
  413575:	rcr    BYTE PTR [ecx-0x500aa972],1
  41357b:	mov    ds:0x4398ab3f,al
  413580:	outs   dx,BYTE PTR ds:[esi]
  413581:	xor    al,0xda
  413583:	jmp    0x617e:0x2fcabade
  41358a:	stc    
  41358b:	test   eax,0x191f8e71
  413590:	pop    ecx
  413591:	popa   
  413592:	enter  0xb664,0x4c
  413596:	daa    
  413597:	sti    
  413598:	out    dx,eax
  413599:	xchg   edi,eax
  41359a:	pop    esi
  41359b:	fwait
  41359c:	out    0x83,al
  41359e:	sbb    DWORD PTR [ecx+0x36],esi
  4135a1:	fidiv  DWORD PTR [ebx-0x3b6da537]
  4135a7:	scas   al,BYTE PTR es:[edi]
  4135a8:	xor    al,0x79
  4135aa:	cdq    
  4135ab:	sahf   
  4135ac:	lds    ebx,FWORD PTR [ecx-0x3f705399]
  4135b2:	pop    ds
  4135b3:	mov    WORD PTR [ecx-0x5622d77],es
  4135b9:	retf   0x3056
  4135bc:	adc    eax,esi
  4135be:	(bad)  
  4135bf:	les    esp,FWORD PTR [ebx]
  4135c1:	pop    ebp
  4135c2:	mov    ecx,0x11b9b6a4
  4135c7:	add    BYTE PTR [eax+esi*2+0x7d],bl
  4135cb:	lods   eax,DWORD PTR ss:[esi]
  4135cd:	jne    0x4135f7
  4135cf:	outs   dx,BYTE PTR ds:[esi]
  4135d0:	xchg   BYTE PTR [edi],bl
  4135d2:	pop    ebp
  4135d3:	scas   eax,DWORD PTR es:[edi]
  4135d4:	pop    edx
  4135d5:	jne    0x41364a
  4135d7:	jno    0x41363a
  4135d9:	fstp   st(3)
  4135db:	in     al,0x4
  4135dd:	cmp    eax,0xb5d1fffb
  4135e2:	mov    al,ds:0x15a314fb
  4135e7:	inc    edx
  4135e8:	fbld   TBYTE PTR [eax]
  4135ea:	das    
  4135eb:	pushf  
  4135ec:	push   esp
  4135ed:	lock popf 
  4135ef:	xchg   ebx,eax
  4135f0:	push   0x1c
  4135f2:	sub    ch,cl
  4135f4:	out    dx,eax
  4135f5:	push   esp
  4135f6:	(bad)  
  4135f8:	in     eax,0xd6
  4135fa:	mov    ebp,0x3a2272fa
  4135ff:	je     0x41361d
  413601:	rol    BYTE PTR [edx+0x7242bd6b],0x90
  413608:	dec    ecx
  413609:	xchg   ebx,eax
  41360a:	neg    DWORD PTR [edi+ecx*8-0x7e]
  41360e:	inc    edx
  41360f:	pop    edx
  413610:	and    al,0x16
  413612:	out    dx,eax
  413613:	loop   0x41368d
  413615:	pop    edi
  413616:	mov    ch,0xb4
  413618:	fdivr  QWORD PTR [ecx-0x21]
  41361b:	pop    ecx
  41361c:	adc    bl,BYTE PTR [esi-0x19]
  41361f:	not    BYTE PTR [edx+ebp*2]
  413622:	mov    dl,BYTE PTR [edi-0x58]
  413625:	mov    bl,0x31
  413627:	or     ch,al
  413629:	les    ebp,FWORD PTR [edi+0x1a]
  41362c:	and    dl,BYTE PTR [edx-0x1a8d7911]
  413632:	jne    0x41361e
  413634:	jge    0x4136a0
  413636:	jge    0x413647
  413638:	adc    esi,edi
  41363a:	call   0x957c:0x96d04f8
  413641:	out    0xe,eax
  413643:	jnp    0x413649
  413645:	test   DWORD PTR [esp+ebp*8],esi
  413648:	call   0xb189fe97
  41364d:	popf   
  41364e:	in     eax,0xab
  413650:	ins    DWORD PTR es:[di],dx
  413652:	push   edi
  413653:	hlt    
  413654:	push   ss
  413655:	jo     0x4135ea
  413657:	sbb    DWORD PTR [esi+ebx*1+0x11160e09],esi
  41365e:	add    al,BYTE PTR [ecx]
  413660:	lds    ebx,FWORD PTR ds:0x3a5afc5c
  413666:	or     eax,0x2dc5aa49
  41366b:	xchg   DWORD PTR [esi-0x1f],esi
  41366e:	cs cli 
  413670:	mov    esi,0x9674ac73
  413675:	xor    ch,ch
  413677:	leave  
  413678:	jo     0x413617
  41367a:	lds    edx,FWORD PTR [edi-0x3b]
  41367d:	push   0xf02773b6
  413682:	lea    edi,[ecx+0x77]
  413685:	int    0x9
  413687:	dec    ebx
  413688:	popa   
  413689:	add    BYTE PTR [ecx],cl
  41368b:	pop    ss
  41368c:	adc    eax,0x15ff335a
  413691:	fistp  QWORD PTR [ebp-0x2f]
  413694:	mov    esp,0x414f460e
  413699:	dec    ecx
  41369a:	cdq    
  41369b:	inc    ebx
  41369c:	xchg   ecx,eax
  41369d:	aas    
  41369e:	out    dx,al
  41369f:	adc    dl,dl
  4136a1:	sub    DWORD PTR [ecx+eiz*4-0x17],eax
  4136a5:	and    al,0xe3
  4136a7:	pop    ebx
  4136a8:	or     DWORD PTR [edi],eax
  4136aa:	jmp    0x113c:0xf74be050
  4136b1:	ret    0x784b
  4136b4:	sub    edi,0x31
  4136b7:	mov    DWORD PTR [edx+0x21],edi
  4136ba:	loope  0x413694
  4136bc:	call   0x9ad6:0xdcd70fdf
  4136c3:	jns    0x413663
  4136c5:	or     dh,al
  4136c7:	div    DWORD PTR es:[esp+eiz*2-0x2a]
  4136cc:	aam    0xad
  4136ce:	pop    ebp
  4136cf:	xchg   bl,al
  4136d1:	sar    DWORD PTR [ebp+ebp*2-0x3],0xea
  4136d6:	mov    bh,dl
  4136d8:	jge    0x413707
  4136da:	fmul   st(7),st
  4136dc:	fcmovbe st,st(3)
  4136de:	les    ebp,FWORD PTR [ebx+0x20a21787]
  4136e4:	mov    ds:0x8ebf9c3,eax
  4136e9:	stos   BYTE PTR es:[edi],al
  4136ea:	loope  0x41369f
  4136ec:	xchg   ebp,eax
  4136ed:	dec    edi
  4136ee:	xchg   edi,eax
  4136ef:	mov    bl,0x9
  4136f1:	and    al,0x1b
  4136f3:	add    esp,DWORD PTR [esp+ecx*1]
  4136f6:	fsubr  QWORD PTR [edi-0x6e68b81]
  4136fc:	mov    ecx,0x99d6b8bf
  413701:	loope  0x413740
  413703:	aas    
  413704:	cmp    eax,0xda572eed
  413709:	sub    al,0xb5
  41370b:	data16 shl BYTE PTR [edx-0x19],cl
  41370f:	sub    eax,DWORD PTR [esi+0x26603443]
  413715:	sti    
  413716:	test   DWORD PTR [bx-0x4d],esp
  41371a:	push   ds
  41371b:	sar    BYTE PTR [ebx+0x42f98fe7],1
  413721:	test   BYTE PTR [edx],0xdd
  413724:	push   eax
  413725:	and    esi,ebx
  413727:	repz idiv DWORD PTR [esi]
  41372a:	sbb    esi,DWORD PTR [eax-0xba99cd4]
  413730:	out    0xf3,eax
  413732:	cmp    bl,BYTE PTR ds:0xe1360f25
  413738:	retf   0x4337
  41373b:	mov    al,ds:0x7c094dc3
  413740:	push   eax
  413741:	test   edi,ecx
  413743:	es icebp 
  413745:	ins    BYTE PTR es:[edi],dx
  413746:	or     DWORD PTR [ebx+ebx*1-0x21],esi
  41374a:	add    bl,al
  41374c:	aam    0xcb
  41374e:	ret    0xd21e
  413751:	add    BYTE PTR [ebx],dl
  413753:	mov    eax,0x795300
  413758:	inc    edx
  413759:	push   0x274de53a
  41375e:	push   gs
  413760:	pop    ss
  413761:	xchg   bl,ah
  413763:	push   cs
  413764:	sub    eax,0x42d111b9
  413769:	iret   
  41376a:	mov    ah,0xaf
  41376c:	inc    esi
  41376d:	pop    edx
  41376e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41376f:	popf   
  413770:	jno    0x41377f
  413772:	das    
  413773:	pop    es
  413774:	adc    edi,DWORD PTR [ebp-0x1b]
  413777:	sbb    ch,0xc6
  41377a:	dec    esi
  41377b:	sti    
  41377c:	jns    0x4137a9
  41377e:	cdq    
  41377f:	dec    esp
  413780:	adc    BYTE PTR [ecx+0x16],0xf
  413784:	loope  0x413718
  413786:	sub    DWORD PTR [eax+0x12],0x41
  41378a:	adc    cl,BYTE PTR [ecx+0x59e6c128]
  413790:	or     DWORD PTR [ebx],esi
  413792:	add    edx,DWORD PTR [edi*8+0x4febf4ed]
  413799:	rcl    BYTE PTR [ebp-0x42bb640d],0x2f
  4137a0:	pop    edx
  4137a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137a2:	xor    dh,dh
  4137a4:	mov    edi,0xd24928cd
  4137a9:	push   esi
  4137aa:	mov    ah,bl
  4137ac:	and    ah,BYTE PTR [eax+ebp*8+0x423e5990]
  4137b3:	mov    bh,0x27
  4137b5:	cmc    
  4137b6:	sub    al,0x56
  4137b8:	scas   al,BYTE PTR es:[edi]
  4137b9:	call   0x935dda17
  4137be:	cs ins DWORD PTR es:[edi],dx
  4137c0:	and    ebp,DWORD PTR [eax+0x3c2ea09a]
  4137c6:	in     al,dx
  4137c7:	dec    esi
  4137c8:	sbb    ch,BYTE PTR [edx+0x44]
  4137cb:	mov    dl,0x70
  4137cd:	cmp    esp,edi
  4137cf:	or     eax,0xb3737d3
  4137d4:	cli    
  4137d5:	or     BYTE PTR [ebp+0x58],ch
  4137d8:	ja     0x41378d
  4137da:	cwde   
  4137db:	dec    esp
  4137dc:	adc    eax,0xdf272485
  4137e1:	add    cl,BYTE PTR ds:0x32c99a21
  4137e7:	lock or eax,0x37ddf4f7
  4137ed:	cmp    al,0x6e
  4137ef:	pop    ss
  4137f0:	and    DWORD PTR ds:0x135b364e,ebx
  4137f6:	xor    BYTE PTR [edi+0x307d2ff3],bl
  4137fc:	pop    ebp
  4137fd:	(bad)  
  4137fe:	es xchg ebp,eax
  413800:	les    ecx,FWORD PTR [edx+esi*4]
  413803:	dec    edi
  413804:	in     eax,0xc3
  413806:	mov    bx,0xfd49
  41380a:	mov    esi,0x713d9f6a
  41380f:	xor    ebp,edx
  413811:	mov    BYTE PTR [ecx],ch
  413813:	mov    esp,0x6e74083e
  413818:	xchg   edx,eax
  413819:	in     eax,dx
  41381a:	outs   dx,BYTE PTR ds:[esi]
  41381b:	imul   edi,DWORD PTR [ecx+0x7c],0x7819e1df
  413822:	xor    ecx,DWORD PTR [edi-0x3ab391bb]
  413828:	xor    edi,DWORD PTR [ebx+0x3d]
  41382b:	pop    ecx
  41382c:	popa   
  41382d:	sbb    al,0x91
  41382f:	jmp    0xbe37831b
  413834:	nop
  413835:	inc    ebp
  413836:	mov    dl,ch
  413838:	adc    cl,BYTE PTR [ebp+0x4be7be38]
  41383e:	es and eax,0x5d5b17e
  413844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413845:	stos   BYTE PTR es:[edi],al
  413846:	dec    esp
  413847:	mov    dl,0xf2
  413849:	leave  
  41384a:	aam    0x56
  41384c:	mov    edx,0x6d6d5fb6
  413851:	sar    DWORD PTR [ecx-0x74],1
  413854:	(bad)  [ebx+0x71]
  413857:	xchg   ebx,eax
  413858:	cld    
  413859:	pop    esp
  41385a:	and    ebx,DWORD PTR [ecx-0x1d]
  41385d:	push   eax
  41385e:	or     eax,0x978d5d9f
  413863:	enter  0x8797,0x37
  413867:	pop    edx
  413868:	outs   dx,DWORD PTR ds:[esi]
  413869:	dec    eax
  41386a:	fisttp DWORD PTR [edi+ecx*8+0x58]
  41386e:	das    
  41386f:	push   0x6995d369
  413874:	rcl    DWORD PTR ds:0x2db0b722,cl
  41387a:	pop    ecx
  41387b:	leave  
  41387c:	aaa    
  41387d:	push   esp
  41387e:	arpl   WORD PTR [edx+ecx*8+0x7965601d],bx
  413885:	lock jecxz 0x413862
  413888:	lods   eax,DWORD PTR ds:[esi]
  413889:	pop    esi
  41388a:	mov    ds:0xaa18b2cb,al
  41388f:	xchg   DWORD PTR [eax+0x76],eax
  413892:	lods   al,BYTE PTR ds:[esi]
  413893:	adc    eax,0xf3706f4a
  413898:	mov    bl,0xcb
  41389a:	fst    DWORD PTR [edi-0x46]
  41389d:	mov    eax,ds:0x71f8b949
  4138a2:	hlt    
  4138a3:	daa    
  4138a4:	jo     0x4138c8
  4138a6:	pop    esi
  4138a7:	sbb    ecx,DWORD PTR [ecx]
  4138a9:	mov    ebx,0x81b42686
  4138ae:	mov    cl,0x63
  4138b0:	imul   ebp,DWORD PTR [ebx+0x8],0xffffffee
  4138b4:	inc    ecx
  4138b5:	test   eax,0x44722293
  4138ba:	dec    esp
  4138bb:	mov    ecx,0x107ae907
  4138c0:	loope  0x4138d8
  4138c2:	retf   0xa65e
  4138c5:	pop    ebp
  4138c6:	jne    0x413858
  4138c8:	test   eax,0xf95639e1
  4138cd:	(bad)  
  4138ce:	(bad)
  4138d2:	js     0x4138ba
  4138d4:	xor    BYTE PTR [ebp+0x49],dl
  4138d7:	repz mov cl,0x81
  4138da:	cmp    edi,ecx
  4138dc:	dec    ebp
  4138dd:	and    eax,0xa549fc3e
  4138e2:	cmp    al,0xf2
  4138e4:	dec    edi
  4138e5:	js     0x41391a
  4138e7:	xchg   ax,ax
  4138e9:	fdiv   DWORD PTR [edi-0x3f]
  4138ec:	pushf  
  4138ed:	jmp    0x4fe8f8fc
  4138f2:	mov    ecx,0xb381bd12
  4138f7:	pop    ebx
  4138f8:	icebp  
  4138f9:	sbb    eax,esi
  4138fb:	fwait
  4138fc:	jne    0x41391c
  4138fe:	nop
  4138ff:	adc    BYTE PTR ds:0x75161e6c,bl
  413905:	in     eax,dx
  413906:	cld    
  413907:	loopne 0x41388e
  413909:	daa    
  41390a:	mov    eax,ds:0xa4b52348
  41390f:	call   FWORD PTR [esi+0x48]
  413912:	int3   
  413913:	icebp  
  413914:	add    DWORD PTR [edx],ebp
  413916:	mov    esp,0xb2e637
  41391b:	mov    ecx,0x1972816f
  413920:	jnp    0x413947
  413922:	and    al,BYTE PTR [eax]
  413924:	out    dx,al
  413925:	aad    0x9b
  413927:	xor    DWORD PTR [edi+0x31],eax
  41392a:	cs mov ecx,0x57d8a315
  413930:	inc    ecx
  413931:	gs loop 0x4138fe
  413934:	scas   eax,DWORD PTR es:[edi]
  413935:	inc    esp
  413936:	adc    edi,DWORD PTR [ebp-0x794d299a]
  41393c:	pop    ecx
  41393d:	bound  ecx,QWORD PTR [ebx+eiz*8+0x196bdd6d]
  413944:	out    dx,eax
  413945:	fdivr  st,st(4)
  413947:	inc    ebx
  413948:	ret    0x167b
  41394b:	add    BYTE PTR [ecx+0x8],al
  41394e:	sub    al,0x9f
  413950:	dec    edi
  413951:	mov    edi,0x7cba9ab1
  413956:	int3   
  413957:	mov    ebp,0x1621a15d
  41395c:	inc    edx
  41395d:	cwde   
  41395e:	call   0x21ab:0x1d39bbc1
  413965:	cdq    
  413966:	aaa    
  413967:	mov    al,0x57
  413969:	dec    ebp
  41396a:	iret   
  41396b:	call   0x787598bd
  413970:	mov    dh,BYTE PTR [ebx+0xa]
  413973:	jmp    0xccf4:0x1dedf8bb
  41397a:	xchg   edx,eax
  41397b:	mov    bl,0x65
  41397d:	mov    dh,0xa9
  41397f:	mov    esp,0x32677782
  413984:	push   0x9afe7514
  413989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41398a:	popf   
  41398b:	sbb    BYTE PTR [edi-0x2648ea45],ah
  413991:	jge    0x4139a2
  413993:	into   
  413994:	ficom  DWORD PTR [edi-0x4db475cc]
  41399a:	int3   
  41399b:	xchg   edi,eax
  41399c:	and    al,0x73
  41399e:	dec    ebp
  41399f:	out    dx,eax
  4139a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139a1:	adc    al,0xc7
  4139a3:	adc    al,0x16
  4139a5:	inc    ebx
  4139a6:	shl    ah,cl
  4139a8:	and    DWORD PTR ds:0xa26db58b,ebp
  4139ae:	adc    edx,edi
  4139b0:	dec    eax
  4139b1:	mov    edi,0x6ecbed7d
  4139b6:	daa    
  4139b7:	fs pop ebp
  4139b9:	xchg   esp,eax
  4139ba:	fucomip st,st(1)
  4139bd:	not    BYTE PTR [eax+0x5f5aaec7]
  4139c3:	adc    DWORD PTR [ebp+0xdb9f060],esi
  4139c9:	and    DWORD PTR [ecx],eax
  4139cb:	(bad)  
  4139cc:	cmp    ebp,edx
  4139ce:	jg     0x413952
  4139d0:	mov    es,WORD PTR [ecx+ecx*1]
  4139d3:	pop    ebp
  4139d4:	cmp    eax,0xd9948752
  4139d9:	loopne 0x413989
  4139db:	jnp    0x413a59
  4139dd:	jge    0x413a1a
  4139df:	fst    DWORD PTR [ebp+0x10]
  4139e2:	jne    0x4139e2
  4139e4:	arpl   bp,sp
  4139e6:	mov    edx,0xda29174b
  4139eb:	xor    bh,bl
  4139ed:	lock mov BYTE PTR [ebp+0x337b1819],bl
  4139f4:	(bad)  
  4139f5:	push   esi
  4139f6:	lods   al,BYTE PTR ds:[esi]
  4139f7:	das    
  4139f8:	push   esi
  4139f9:	cli    
  4139fa:	push   0x4b74547d
  4139ff:	mov    BYTE PTR [edi-0x5a538845],bl
  413a05:	in     eax,dx
  413a06:	or     al,0x36
  413a08:	and    al,0xb8
  413a0a:	test   al,0x9f
  413a0c:	and    BYTE PTR [esi-0x55],ch
  413a0f:	pop    ecx
  413a10:	mov    ds:0xfc26debf,al
  413a15:	outs   dx,DWORD PTR ds:[esi]
  413a16:	push   cs
  413a17:	dec    ebx
  413a18:	rcr    DWORD PTR [esi-0x49c64b40],cl
  413a1e:	arpl   WORD PTR [eax+eax*8-0x70d31021],bp
  413a25:	shl    DWORD PTR [edi],1
  413a27:	scas   al,BYTE PTR es:[edi]
  413a28:	cs jle 0x413a67
  413a2b:	xor    DWORD PTR [eax+0xa65a1b7],esp
  413a31:	push   es
  413a32:	sub    al,0x21
  413a34:	sub    al,0x3c
  413a36:	pop    ecx
  413a37:	stc    
  413a38:	sub    eax,0xf0d92edf
  413a3d:	outs   dx,DWORD PTR ds:[esi]
  413a3e:	fwait
  413a3f:	out    0x96,al
  413a41:	xor    ebp,edx
  413a43:	ins    DWORD PTR es:[edi],dx
  413a44:	imul   esi,DWORD PTR [ebx+0x5b],0x3944585e
  413a4b:	je     0x413ac4
  413a4d:	push   ebp
  413a4e:	push   ecx
  413a4f:	scas   al,BYTE PTR es:[edi]
  413a50:	test   eax,0xfefbe8ad
  413a55:	cld    
  413a56:	lahf   
  413a57:	and    dh,BYTE PTR [ecx]
  413a59:	mov    cl,0xe0
  413a5b:	shr    BYTE PTR [ebx+edx*4+0x6f],cl
  413a5f:	push   ebp
  413a60:	outs   dx,BYTE PTR ds:[esi]
  413a61:	out    0x46,eax
  413a63:	(bad)  
  413a64:	adc    DWORD PTR [ecx-0x12],eax
  413a67:	pop    ss
  413a68:	call   0x927855ab
  413a6d:	dec    esp
  413a6e:	xor    eax,0x6fcc08e1
  413a73:	in     al,0x23
  413a75:	call   0x3fddeb1d
  413a7a:	dec    esp
  413a7b:	test   eax,0x236f5bf3
  413a80:	dec    ebx
  413a81:	push   ss
  413a82:	fiadd  WORD PTR [eax-0x5e]
  413a85:	adc    BYTE PTR [ebp+0x5d0b4da2],0x72
  413a8c:	(bad)  
  413a8d:	sahf   
  413a8e:	(bad)  
  413a8f:	cmc    
  413a90:	mov    edx,0x2dda258b
  413a95:	add    edx,DWORD PTR gs:[ebx]
  413a98:	push   ebx
  413a99:	push   edi
  413a9a:	test   DWORD PTR [edx+0x34791c66],esp
  413aa0:	test   eax,0xc206268e
  413aa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413aa6:	fdiv   DWORD PTR [ebp-0x67ea1f50]
  413aac:	cli    
  413aad:	cli    
  413aae:	je     0x413abc
  413ab0:	xchg   ecx,eax
  413ab1:	or     esp,eax
  413ab3:	ss push esi
  413ab5:	popa   
  413ab6:	sbb    eax,DWORD PTR [ecx+ecx*1+0x3bd13f8c]
  413abd:	daa    
  413abe:	cdq    
  413abf:	repnz out 0x35,al
  413ac2:	push   eax
  413ac3:	daa    
  413ac4:	stos   DWORD PTR es:[edi],eax
  413ac5:	fs loopne 0x413ab5
  413ac8:	cli    
  413ac9:	les    ebp,FWORD PTR [ebx+ebp*4]
  413acc:	int    0x8f
  413ace:	mov    ds:0xad9629f9,al
  413ad3:	addr16 sbb al,0x5a
  413ad6:	sbb    DWORD PTR [eax-0x38c3ea28],esp
  413adc:	in     eax,0xd7
  413ade:	out    dx,eax
  413adf:	and    DWORD PTR [ebx+0x14da4fe6],esp
  413ae5:	inc    edx
  413ae6:	ret    
  413ae7:	jg     0x413ac0
  413ae9:	push   0xffffffb2
  413aeb:	test   DWORD PTR [ebx+0x16ce939],esi
  413af1:	inc    ebp
  413af2:	push   ebx
  413af3:	call   0x16cc1b97
  413af8:	mov    cl,0xeb
  413afa:	fldenv [edx]
  413afc:	fdivr  st(3),st
  413afe:	and    BYTE PTR [edi],dh
  413b00:	mov    dh,0x62
  413b02:	adc    DWORD PTR [ebx],edi
  413b04:	sbb    eax,0x3a064eb1
  413b09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b0a:	mov    ch,0x4
  413b0c:	mov    dh,0xf2
  413b0e:	dec    esi
  413b0f:	in     al,dx
  413b10:	in     ax,dx
  413b12:	ret    
  413b13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b14:	call   DWORD PTR [esi]
  413b16:	mov    WORD PTR [ecx+ebx*2-0x2],?
  413b1a:	daa    
  413b1b:	jb     0x413ae6
  413b1d:	mov    ds:0xe46bb9ed,al
  413b22:	mov    ch,0x53
  413b24:	(bad)  
  413b25:	test   DWORD PTR [esp+esi*2+0xd],0x995c9d6b
  413b2d:	jg     0x413ab2
  413b2f:	hlt    
  413b30:	cld    
  413b31:	push   esi
  413b32:	es adc edx,ebx
  413b35:	jns    0x413b72
  413b37:	lahf   
  413b38:	in     al,dx
  413b39:	loop   0x413b47
  413b3b:	aam    0x42
  413b3d:	retf   0x58d3
  413b40:	mov    al,ds:0xa35c9bca
  413b45:	jmp    0x413bb1
  413b47:	adc    ebx,DWORD PTR [edi]
  413b49:	push   esp
  413b4a:	(bad)  
  413b4b:	mov    WORD PTR [edi],ss
  413b4d:	ins    BYTE PTR es:[edi],dx
  413b4e:	pop    eax
  413b4f:	fld    DWORD PTR [ebp+0x27446c7d]
  413b55:	mov    WORD PTR [ebp+0x4b],ds
  413b58:	call   0x11823c07
  413b5d:	cmp    BYTE PTR [ebp+0x47fde409],bh
  413b63:	or     eax,0x299db1bb
  413b68:	add    al,0x63
  413b6a:	mov    BYTE PTR [eax+0x2],0x9d
  413b6e:	pop    ebx
  413b6f:	cmp    DWORD PTR [esi],edi
  413b71:	push   0xa3a043f5
  413b76:	pop    edx
  413b77:	cwde   
  413b78:	add    BYTE PTR ds:0xe269081,0xf7
  413b7f:	push   edi
  413b80:	cmp    ebp,DWORD PTR [esp+ebp*4]
  413b83:	sub    eax,0x719c1328
  413b88:	mov    eax,0x15a13c1f
  413b8d:	fisub  WORD PTR [ecx+0x891aae6]
  413b93:	xor    eax,0x48ae9761
  413b98:	push   ss
  413b99:	out    0x8e,eax
  413b9b:	pop    edx
  413b9c:	out    0x1a,al
  413b9e:	mov    ecx,0x6816d577
  413ba3:	jno    0x413bbf
  413ba5:	xor    esp,esp
  413ba7:	ins    DWORD PTR es:[edi],dx
  413ba8:	xor    esi,DWORD PTR ss:[ebx]
  413bab:	xchg   edx,eax
  413bac:	xchg   bh,ch
  413bae:	out    0xc3,al
  413bb0:	sub    al,0xa7
  413bb2:	xor    eax,0x42eb3651
  413bb7:	xchg   esi,eax
  413bb8:	aaa    
  413bb9:	xlat   BYTE PTR ds:[ebx]
  413bba:	sbb    ebp,DWORD PTR [edx]
  413bbc:	push   ss
  413bbd:	cli    
  413bbe:	sbb    DWORD PTR [edi-0x14],esi
  413bc1:	cmp    eax,0xf17ac6ea
  413bc6:	test   BYTE PTR [ecx+0x63],cl
  413bc9:	xor    ebx,0x62
  413bcc:	sub    bl,al
  413bce:	dec    esi
  413bcf:	loop   0x413bfa
  413bd1:	int    0x92
  413bd3:	jne    0x413b67
  413bd5:	inc    edx
  413bd6:	push   ds
  413bd7:	xor    edx,0x72
  413bda:	and    esi,DWORD PTR [ecx+0x35]
  413bdd:	(bad)  
  413bde:	mov    ds:0xbcaddf1b,eax
  413be3:	fcom   DWORD PTR [esi+0x31]
  413be6:	jl     0x413bf4
  413be8:	pop    ecx
  413be9:	push   0x9642e902
  413bee:	sahf   
  413bef:	xchg   dh,ch
  413bf1:	jmp    0xf911f15b
  413bf6:	bound  ebp,QWORD PTR [ebx+0x1708c6c9]
  413bfc:	daa    
  413bfd:	clc    
  413bfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bff:	pop    eax
  413c00:	xor    eax,0x9bca4d08
  413c05:	mov    ebp,0x8104b5f5
  413c0a:	push   edi
  413c0b:	hlt    
  413c0c:	arpl   dx,ax
  413c0e:	sti    
  413c0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c10:	jge    0x413c7c
  413c12:	imul   edx,edx,0x16
  413c15:	push   ss
  413c16:	icebp  
  413c17:	cmp    eax,0xfca53647
  413c1c:	mov    ds:0x5942484f,eax
  413c21:	and    ebp,DWORD PTR [esi-0x28]
  413c24:	sti    
  413c25:	xchg   DWORD PTR [edx+0x1e],ebp
  413c28:	jecxz  0x413c59
  413c2a:	inc    ebp
  413c2b:	ds retf 0x500b
  413c2f:	mov    edi,0xa31f7325
  413c34:	mov    DWORD PTR [ebx+ecx*1],ebx
  413c37:	inc    esi
  413c38:	push   es
  413c39:	push   ds
  413c3a:	jecxz  0x413c7b
  413c3c:	jp     0x413bea
  413c3e:	push   0x5e
  413c40:	add    eax,0x844c3651
  413c45:	push   ecx
  413c46:	in     al,0xb8
  413c48:	pop    ecx
  413c49:	mov    eax,ds:0x9d84ec2d
  413c4e:	inc    ebx
  413c4f:	mov    ds:0xe4fdf88a,eax
  413c54:	lods   al,BYTE PTR ds:[esi]
  413c55:	arpl   WORD PTR [eax+0x560c016b],bp
  413c5b:	repnz scas eax,DWORD PTR es:[edi]
  413c5d:	xor    eax,0x4182d3b1
  413c62:	or     DWORD PTR [eax],edx
  413c64:	sbb    DWORD PTR [ebx-0x1c9a1e60],edx
  413c6a:	jecxz  0x413c0c
  413c6c:	dec    edi
  413c6d:	push   eax
  413c6e:	or     dl,BYTE PTR [eax+0x4b1aef82]
  413c74:	rol    DWORD PTR [esi],0x6b
  413c77:	and    DWORD PTR [edx+ecx*2-0x21],ebx
  413c7b:	jecxz  0x413c36
  413c7d:	int    0x29
  413c7f:	jl     0x413c35
  413c81:	and    BYTE PTR [ebx-0x12837a48],0xf5
  413c88:	add    al,0x4c
  413c8a:	rcr    BYTE PTR [edi],cl
  413c8c:	and    DWORD PTR [ecx+0x13d9e45b],eax
  413c92:	ret    
  413c93:	mov    dl,0x2d
  413c95:	cmp    esp,ebx
  413c97:	call   0x3dd142b
  413c9c:	aam    0x92
  413c9e:	dec    edx
  413c9f:	jae    0x413ce6
  413ca1:	xchg   ecx,eax
  413ca2:	pop    ecx
  413ca3:	push   esi
  413ca4:	(bad)  
  413ca5:	in     eax,0xf4
  413ca7:	icebp  
  413ca8:	xchg   eax,edx
  413caa:	mov    ah,0x47
  413cac:	fild   WORD PTR [esp+eax*4-0x5e1ba8f8]
  413cb3:	push   ebx
  413cb4:	jns    0x413cbf
  413cb6:	pop    ss
  413cb7:	xchg   ecx,ebp
  413cb9:	push   eax
  413cba:	cdq    
  413cbb:	daa    
  413cbc:	lods   al,BYTE PTR ds:[esi]
  413cbd:	iret   
  413cbe:	inc    ebx
  413cbf:	mov    esp,0x2822ab8
  413cc4:	ins    DWORD PTR es:[edi],dx
  413cc5:	outs   dx,BYTE PTR ds:[esi]
  413cc6:	jmp    0x99d19ac3
  413ccb:	in     eax,0x9d
  413ccd:	adc    ebp,ebx
  413ccf:	jge    0x413d20
  413cd1:	inc    esi
  413cd2:	jno    0x413d40
  413cd4:	adc    ch,BYTE PTR [edx+ebx*2-0x110b2359]
  413cdb:	push   0xffffffc6
  413cdd:	out    dx,al
  413cde:	push   ds
  413cdf:	rol    al,cl
  413ce1:	(bad)  
  413ce2:	xlat   BYTE PTR ds:[ebx]
  413ce3:	jl     0x413d23
  413ce5:	neg    ecx
  413ce7:	(bad)  
  413ce8:	outs   dx,DWORD PTR ds:[esi]
  413ce9:	es pop ss
  413ceb:	push   edx
  413cec:	mov    ebx,0xffa689ee
  413cf1:	out    dx,eax
  413cf2:	or     DWORD PTR [edx],edi
  413cf4:	out    dx,al
  413cf5:	(bad)  
  413cf6:	mov    bh,0xae
  413cf8:	and    eax,0xa4d0fe07
  413cfd:	dec    esp
  413cfe:	or     eax,0x67f2bd71
  413d03:	sub    BYTE PTR [esi-0x32e07895],0xa2
  413d0a:	call   0xafae:0xfbac2dcc
  413d11:	outs   dx,DWORD PTR ds:[esi]
  413d12:	addr16 fs lahf 
  413d15:	(bad)  
  413d17:	and    eax,0xffa92eb3
  413d1c:	mov    eax,0xe4428706
  413d21:	push   es
  413d22:	adc    eax,0xeffcfaad
  413d27:	dec    edi
  413d28:	in     al,0x72
  413d2a:	out    dx,eax
  413d2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d2c:	gs (bad) 
  413d2f:	outs   dx,DWORD PTR ds:[esi]
  413d30:	repz sbb ch,BYTE PTR [esi-0x32f73de7]
  413d37:	lods   eax,DWORD PTR ds:[esi]
  413d38:	xor    DWORD PTR [edx-0x1e],0x4d
  413d3c:	fst    st(1)
  413d3e:	xchg   esp,eax
  413d3f:	cmp    ch,ch
  413d41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d42:	sub    eax,0xc40b8594
  413d47:	mov    eax,ds:0x695a9325
  413d4c:	sub    al,BYTE PTR cs:[ebx+0x8a89096]
  413d53:	sti    
  413d54:	shl    BYTE PTR [esp+esi*1+0x42],1
  413d58:	repnz pop eax
  413d5a:	inc    ebp
  413d5b:	aaa    
  413d5c:	push   ss
  413d5d:	push   0xfcf5456d
  413d62:	lock or al,0xeb
  413d65:	inc    eax
  413d66:	addr16 adc al,0x5e
  413d69:	sahf   
  413d6a:	jno    0x413d0a
  413d6c:	in     eax,0xf0
  413d6e:	fwait
  413d6f:	ds adc al,0x77
  413d72:	shl    BYTE PTR [esi-0xe],0x8a
  413d76:	ins    BYTE PTR es:[edi],dx
  413d77:	hlt    
  413d78:	mov    edx,0xbe42ad53
  413d7d:	or     ah,cl
  413d7f:	int3   
  413d80:	jb     0x413d66
  413d82:	stc    
  413d83:	inc    esi
  413d84:	push   cs
  413d85:	lods   eax,DWORD PTR ds:[esi]
  413d86:	les    ebp,FWORD PTR [ebx]
  413d88:	lahf   
  413d89:	or     eax,0xd759900b
  413d8e:	sahf   
  413d8f:	mov    ds:0xd1c8ab63,al
  413d94:	mov    dl,0x61
  413d96:	in     al,dx
  413d97:	in     al,dx
  413d98:	and    eax,0x7953bff5
  413d9d:	stc    
  413d9e:	pop    ss
  413d9f:	xchg   esp,eax
  413da0:	or     eax,0x85571b01
  413da5:	(bad)  
  413da6:	mov    dl,dl
  413da8:	(bad)  
  413da9:	mov    ah,0xf1
  413dab:	popf   
  413dac:	and    BYTE PTR [ebx-0x24],0x32
  413db0:	js     0x413d93
  413db2:	or     DWORD PTR [esi+0xb],edi
  413db5:	imul   esi,ebx,0xffffffb5
  413db8:	rol    eax,cl
  413dba:	jge    0x413dde
  413dbc:	dec    eax
  413dbd:	push   esp
  413dbe:	adc    DWORD PTR [ebp+0x693a704e],ecx
  413dc4:	jle    0x413d9b
  413dc6:	div    DWORD PTR [edi+0x5f]
  413dc9:	xchg   ah,ah
  413dcb:	jmp    0x413d6e
  413dcd:	mov    ch,0xe7
  413dcf:	das    
  413dd0:	outs   dx,BYTE PTR ds:[esi]
  413dd1:	dec    esp
  413dd2:	call   0x1613:0xcc33f5c
  413dd9:	imul   edx,esp,0xffffffbc
  413ddc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ddd:	pop    esp
  413dde:	xlat   BYTE PTR ds:[ebx]
  413ddf:	sbb    DWORD PTR [esi],eax
  413de1:	push   cs
  413de2:	push   cs
  413de3:	rol    ebp,cl
  413de5:	test   eax,0x26eb9a09
  413dea:	and    eax,0xcfe24f69
  413def:	ja     0x413e3c
  413df1:	popf   
  413df2:	pop    edi
  413df3:	aad    0x47
  413df5:	add    BYTE PTR [eax-0x22],0xc0
  413df9:	add    eax,0xd32e9aed
  413dfe:	jl     0x413d88
  413e00:	pop    ds
  413e01:	popa   
  413e02:	jl     0x413e23
  413e04:	setle  BYTE PTR [edx]
  413e07:	retf   0x33f1
  413e0a:	(bad)  
  413e0b:	mov    esp,0xef8458a6
  413e10:	sub    esi,DWORD PTR [esi]
  413e12:	push   ebp
  413e13:	mov    edi,0x437641d6
  413e18:	or     BYTE PTR ds:[eax-0x7ff3de50],al
  413e1f:	mov    ds:0x2b247ced,eax
  413e24:	adc    DWORD PTR [eax],esp
  413e26:	dec    eax
  413e27:	adc    eax,0x8b99274c
  413e2c:	mov    bl,0x4c
  413e2e:	inc    ecx
  413e2f:	push   esi
  413e30:	pop    ebp
  413e31:	xchg   ebx,eax
  413e32:	push   ds
  413e33:	mov    ds:0x34bd9901,al
  413e38:	imul   edi,esp,0x1d
  413e3b:	dec    edx
  413e3c:	push   ecx
  413e3d:	xchg   esp,eax
  413e3e:	or     BYTE PTR [edx],ch
  413e40:	into   
  413e41:	fwait
  413e42:	adc    DWORD PTR [ecx-0x259d25a],ecx
  413e48:	lods   al,BYTE PTR ds:[esi]
  413e49:	sbb    ebp,DWORD PTR [eax]
  413e4b:	push   esp
  413e4c:	fld    DWORD PTR [edx-0x5f]
  413e4f:	in     al,0xd8
  413e51:	inc    ebp
  413e52:	cmp    al,0xdc
  413e54:	daa    
  413e55:	inc    eax
  413e56:	xchg   ebp,eax
  413e57:	call   0x37f1:0x84cfbd72
  413e5e:	loopne 0x413eac
  413e60:	fwait
  413e61:	adc    edx,ebx
  413e63:	xor    ebx,0x6b
  413e66:	gs sahf 
  413e68:	and    DWORD PTR [ebx],ebx
  413e6a:	or     dl,BYTE PTR ds:0x21705487
  413e70:	push   edi
  413e71:	lods   al,BYTE PTR ds:[esi]
  413e72:	out    dx,al
  413e73:	adc    BYTE PTR [esp+ecx*2-0xa],cl
  413e77:	mov    dh,BYTE PTR [edx+0x1]
  413e7a:	test   eax,0xdd716766
  413e7f:	arpl   WORD PTR [eax-0x206750af],dx
  413e85:	pusha  
  413e86:	(bad)  
  413e87:	mov    bh,0x61
  413e89:	imul   esp,DWORD PTR [ecx],0xe047f760
  413e8f:	or     eax,0xffffff87
  413e92:	loopne 0x413e88
  413e94:	add    eax,0xe1ac0dd9
  413e99:	icebp  
  413e9a:	cmp    DWORD PTR [edx],edx
  413e9c:	out    dx,eax
  413e9d:	mov    ah,BYTE PTR [esi]
  413e9f:	xchg   esp,eax
  413ea0:	in     al,dx
  413ea1:	xor    ecx,DWORD PTR [ecx-0x4c]
  413ea4:	mov    bh,0xb1
  413ea6:	mov    edx,0x28c145f3
  413eab:	pop    DWORD PTR [ecx]
  413ead:	and    al,0x7d
  413eaf:	(bad)  
  413eb0:	icebp  
  413eb1:	sahf   
  413eb2:	push   ds
  413eb3:	dec    eax
  413eb4:	mov    ebx,0x5bbb7e47
  413eb9:	xor    eax,0x87177bae
  413ebe:	fyl2xp1 
  413ec0:	int    0x49
  413ec2:	test   eax,0x4dceb766
  413ec7:	pop    edx
  413ec8:	dec    ecx
  413ec9:	mov    ds:0x8d827a34,al
  413ece:	push   ecx
  413ecf:	jg     0x413eaf
  413ed1:	xor    al,0xa9
  413ed3:	sub    DWORD PTR [esi-0xc],0x14
  413ed7:	xchg   BYTE PTR [edi+0x46],dh
  413eda:	addr16 push cs
  413edc:	test   DWORD PTR [edx+0x73],ebx
  413edf:	ret    0x357a
  413ee2:	in     eax,dx
  413ee3:	pusha  
  413ee4:	js     0x413e9f
  413ee6:	addr16 adc eax,0xcd51375c
  413eec:	ins    DWORD PTR es:[edi],dx
  413eed:	sub    DWORD PTR [ebx+0x63fe1552],0x63afc513
  413ef7:	inc    ecx
  413ef8:	dec    eax
  413ef9:	dec    ebp
  413efa:	loopne 0x413f58
  413efc:	adc    DWORD PTR [ecx-0xe7671f3],0x6e93e4fd
  413f06:	aas    
  413f07:	sbb    al,0x95
  413f09:	clc    
  413f0a:	ins    BYTE PTR es:[edi],dx
  413f0b:	out    0x54,eax
  413f0d:	(bad)  
  413f0f:	fmulp  st(1),st
  413f11:	add    ah,BYTE PTR [ebp-0x20e379f]
  413f17:	push   0x8aa8a07d
  413f1c:	inc    cx
  413f1e:	leave  
  413f1f:	sbb    al,0xb
  413f21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f22:	ja     0x413f1d
  413f24:	sub    BYTE PTR [edx*1+0x6bd4520],ch
  413f2b:	add    al,0x4c
  413f2d:	and    eax,0x93abb47d
  413f32:	int    0xa3
  413f34:	rol    DWORD PTR [ebx+ecx*1],1
  413f37:	mov    edx,0x3fad14ac
  413f3c:	push   ss
  413f3d:	icebp  
  413f3e:	maxps  xmm0,xmm5
  413f41:	inc    ebx
  413f42:	push   ss
  413f43:	cmp    DWORD PTR [edx+ebp*2+0x14],esi
  413f47:	mov    dl,bl
  413f49:	push   esi
  413f4a:	and    esi,DWORD PTR ds:0xe85cd454
  413f50:	mov    ds:0x1ab73f86,al
  413f55:	or     DWORD PTR [ebp+0x631ef628],edi
  413f5b:	scas   al,BYTE PTR es:[edi]
  413f5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f5d:	jmp    0xdb28b6a
  413f62:	mul    DWORD PTR [edi+ecx*2+0x46ca0e45]
  413f69:	rol    BYTE PTR [edi-0x7df693fa],1
  413f6f:	mov    eax,ds:0xb7db0336
  413f74:	aad    0xeb
  413f76:	mov    cl,0xb9
  413f78:	(bad)  
  413f79:	and    BYTE PTR [edi+0x58],bh
  413f7c:	dec    edi
  413f7d:	mov    edx,0xd85bb8d1
  413f82:	scas   al,BYTE PTR es:[edi]
  413f83:	shl    BYTE PTR ds:0x17924b89,0xc1
  413f8a:	sub    al,0x7f
  413f8c:	std    
  413f8d:	pop    ecx
  413f8e:	and    eax,0xfd3588cc
  413f93:	pop    ecx
  413f94:	mov    ecx,0xa75656c4
  413f99:	gs out dx,al
  413f9b:	mov    gs,edi
  413f9d:	jo     0x413f64
  413f9f:	cmp    BYTE PTR [edx+0x36c29a4c],dl
  413fa5:	mov    edi,0x6d70f509
  413faa:	pop    esi
  413fab:	lods   eax,DWORD PTR ds:[esi]
  413fac:	(bad)  
  413fad:	sub    ecx,edx
  413faf:	cdq    
  413fb0:	pop    edi
  413fb1:	pushf  
  413fb2:	fistp  QWORD PTR [edi-0x7e]
  413fb5:	add    esp,DWORD PTR [esi-0x9d47e64]
  413fbb:	pop    esp
  413fbc:	mov    ebp,0xbb6532d2
  413fc1:	popf   
  413fc2:	add    al,0xd2
  413fc4:	xchg   esp,eax
  413fc5:	jmp    0xd86f1ead
  413fca:	jmp    0x413fd4
  413fcc:	xor    al,ch
  413fce:	out    0x3c,al
  413fd0:	arpl   dx,cx
  413fd2:	cmp    al,0xee
  413fd4:	aad    0xd
  413fd6:	mov    ds:0x57dd50db,eax
  413fdb:	fidivr WORD PTR ds:0x6b15a4c8
  413fe1:	clc    
  413fe2:	data16 jne 0x414017
  413fe5:	and    bl,ch
  413fe7:	fs xchg edx,eax
  413fe9:	test   al,0xc3
  413feb:	call   0x43f8:0x929cbae1
  413ff2:	pushf  
  413ff3:	stos   DWORD PTR es:[edi],eax
  413ff4:	adc    DWORD PTR [edi],esp
  413ff6:	and    eax,0x22a728dc
  413ffb:	retf   0xd41b
  413ffe:	icebp  
  413fff:	mov    edi,ecx
  414001:	mov    eax,0x23c98ce0
  414006:	sbb    eax,0x40b54a0d
  41400b:	or     DWORD PTR [ebx-0x5e],esp
  41400e:	cmp    al,0xf6
  414010:	retf   
  414011:	dec    esp
  414012:	mov    edx,0x4375b06a
  414017:	add    eax,0xea58e41d
  41401c:	ror    BYTE PTR ds:0x505cee,0xe6
  414023:	or     eax,0xa1653ae3
  414028:	push   ds
  414029:	out    dx,eax
  41402a:	cli    
  41402b:	push   0xbc57394
  414030:	pop    ebx
  414031:	adc    esi,DWORD PTR [edi]
  414033:	jge    0x413fc6
  414035:	sar    DWORD PTR [edi+0x35],cl
  414038:	mov    ds:0x9312069f,al
  41403d:	jno    0x414000
  41403f:	pop    edx
  414040:	xor    dh,0xe3
  414043:	lds    edx,FWORD PTR [esi]
  414045:	xor    al,0x25
  414047:	int3   
  414048:	push   ss
  414049:	mov    gs,esi
  41404b:	lods   eax,DWORD PTR ds:[esi]
  41404c:	push   edi
  41404d:	mov    ecx,0x4b71f858
  414052:	icebp  
  414053:	xchg   ecx,eax
  414054:	fdiv   DWORD PTR [edi+0x19d1baaa]
  41405a:	push   edx
  41405b:	enter  0xb93c,0x1a
  41405f:	sbb    DWORD PTR [edi-0x27],0x26
  414063:	mov    eax,0x2d86fad9
  414068:	pop    bp
  41406a:	clc    
  41406b:	in     eax,0xa5
  41406d:	xor    eax,0x9da3b713
  414072:	or     dl,cl
  414074:	jle    0x4140e1
  414076:	aaa    
  414077:	lods   eax,DWORD PTR ds:[esi]
  414078:	push   es
  414079:	stos   DWORD PTR es:[edi],eax
  41407a:	ds pusha 
  41407c:	xchg   ecx,eax
  41407d:	sub    al,0x5a
  41407f:	xchg   ecx,eax
  414080:	adc    ebp,DWORD PTR [edi-0x721d7b06]
  414086:	xchg   DWORD PTR [esi+eax*1+0x3a],ebx
  41408a:	mov    ah,BYTE PTR [eax]
  41408c:	adc    edx,DWORD PTR [edx]
  41408e:	inc    esp
  41408f:	inc    edx
  414090:	jmp    0x41403e
  414092:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414093:	xor    BYTE PTR [edi],bh
  414095:	hlt    
  414096:	jle    0x414049
  414098:	nop
  414099:	call   FWORD PTR [ecx+0x19a9fbc9]
  41409f:	dec    ebp
  4140a0:	mov    dl,0xcb
  4140a2:	(bad)  
  4140a3:	push   ds
  4140a4:	mov    ah,BYTE PTR [eax-0x22]
  4140a7:	pop    ebx
  4140a8:	push   ds
  4140a9:	fld    QWORD PTR [edx-0x4bc887c2]
  4140af:	js     0x41410f
  4140b1:	add    edi,ecx
  4140b3:	js     0x41404d
  4140b5:	fisubr DWORD PTR [ebx+0x29e17fc1]
  4140bb:	or     al,0xe7
  4140bd:	push   0xffffffd1
  4140bf:	jge    0x41411c
  4140c1:	fistp  QWORD PTR [eax+0x8]
  4140c4:	or     cl,BYTE PTR ss:[eax-0x6ccf34ec]
  4140cb:	leave  
  4140cc:	cli    
  4140cd:	addr16 jge 0x414099
  4140d0:	xor    esp,edi
  4140d2:	test   al,0x34
  4140d4:	ror    DWORD PTR [edx+0x341021ca],1
  4140da:	mov    bl,0xb
  4140dc:	leave  
  4140dd:	and    al,0x49
  4140df:	dec    esp
  4140e0:	dec    ecx
  4140e1:	mov    edx,0x9a98e8dd
  4140e6:	outs   dx,BYTE PTR ds:[esi]
  4140e7:	and    al,0x5c
  4140e9:	dec    esp
  4140ea:	test   al,0x9e
  4140ec:	test   DWORD PTR [ebx+0x34],ebx
  4140ef:	(bad)  
  4140f0:	cmp    eax,0x6e4c44e1
  4140f5:	stc    
  4140f6:	pop    ecx
  4140f7:	iret   
  4140f8:	enter  0x9713,0x63
  4140fc:	fimul  WORD PTR ds:0xa68b9567
  414102:	mov    gs,ebp
  414104:	xor    BYTE PTR [edx],bl
  414106:	call   0x3b477d9f
  41410b:	jmp    0x9d3294f3
  414110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414111:	xchg   esp,eax
  414112:	sti    
  414113:	xchg   edi,eax
  414114:	or     eax,0x4a55454d
  414119:	fild   QWORD PTR [edx+0x5e]
  41411c:	dec    ebx
  41411d:	ror    ch,cl
  41411f:	jno    0x414142
  414121:	in     al,0xad
  414123:	dec    edi
  414124:	push   0x78
  414126:	or     esp,0xffffffcb
  414129:	fmul   st(5),st
  41412b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41412c:	ins    DWORD PTR es:[edi],dx
  41412d:	test   al,0x47
  41412f:	daa    
  414130:	nop
  414131:	rol    bh,1
  414133:	enter  0x5c6,0xaa
  414137:	mov    BYTE PTR [eax+edi*8+0x64a4b1e8],bh
  41413e:	sbb    ecx,DWORD PTR [ebx]
  414140:	lea    esi,[edi]
  414142:	xor    bh,BYTE PTR [edx-0x67]
  414145:	ja     0x414188
  414147:	mov    bh,0x47
  414149:	sbb    cl,BYTE PTR [bp+si+0x34f1]
  41414e:	pop    ebx
  41414f:	pop    eax
  414150:	pop    edi
  414151:	(bad)  
  414152:	fisttp QWORD PTR [edx+0x1f]
  414155:	repz sub al,BYTE PTR [ebp+0x23]
  414159:	fwait
  41415a:	mov    DWORD PTR [ebx],esi
  41415c:	popa   
  41415d:	mov    ds:0x69dc5941,al
  414162:	pop    ebx
  414163:	cmp    BYTE PTR [eax],bh
  414165:	leave  
  414166:	jne    0x414166
  414168:	pop    ss
  414169:	mov    ch,0x19
  41416b:	mov    ah,0x23
  41416d:	xor    eax,0xe7074873
  414172:	(bad)  
  414173:	bound  ebx,QWORD PTR [eax]
  414175:	loopne 0x4141c9
  414177:	push   ecx
  414178:	clc    
  414179:	shl    DWORD PTR [esi],cl
  41417b:	push   ss
  41417c:	jle    0x4141b9
  41417e:	ins    DWORD PTR es:[edi],dx
  41417f:	retf   0xe8e7
  414182:	mov    ds,WORD PTR [ecx]
  414184:	retf   
  414185:	push   edx
  414186:	loope  0x4141cd
  414188:	sbb    dl,BYTE PTR [edi-0x16]
  41418b:	shr    DWORD PTR [edi-0x65b190d],0xf1
  414192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414193:	dec    esi
  414194:	call   DWORD PTR [edx+0x5b4443aa]
  41419a:	hlt    
  41419b:	std    
  41419c:	jb     0x4141f3
  41419e:	adc    eax,0x93954fd3
  4141a3:	cmp    BYTE PTR [ebx+0x4a],ah
  4141a6:	pop    ss
  4141a7:	scas   al,BYTE PTR es:[edi]
  4141a8:	sbb    BYTE PTR [ebx+0x11],bh
  4141ab:	stc    
  4141ac:	outs   dx,BYTE PTR ds:[esi]
  4141ad:	(bad)  ds:0x7998bb85
  4141b3:	lock call 0xb869:0xfde80a9c
  4141bb:	loopne 0x4141d8
  4141bd:	mov    ecx,0x61172438
  4141c2:	cli    
  4141c3:	(bad)  
  4141c4:	xchg   esi,eax
  4141c5:	sub    BYTE PTR [esi],ah
  4141c7:	mov    bl,0x1d
  4141c9:	out    0x64,eax
  4141cb:	add    BYTE PTR [eax+edx*8],cl
  4141ce:	out    dx,al
  4141cf:	dec    edx
  4141d0:	arpl   ax,ax
  4141d2:	iret   
  4141d3:	fsubr  st,st(6)
  4141d5:	and    dh,BYTE PTR ds:0x3df98c7e
  4141db:	mov    bl,0x9d
  4141dd:	jne    0x414189
  4141df:	cmc    
  4141e0:	mov    ch,0xd5
  4141e2:	xchg   edx,eax
  4141e3:	ss retf 
  4141e5:	inc    esp
  4141e6:	mov    ?,WORD PTR [ebx-0x52]
  4141e9:	dec    ecx
  4141ea:	ret    0xbd7e
  4141ed:	mov    cl,0x45
  4141ef:	inc    ebx
  4141f0:	loop   0x414238
  4141f2:	push   cs
  4141f3:	mov    ah,0x40
  4141f5:	adc    al,0xa
  4141f7:	fwait
  4141f8:	mov    edi,0x711eb776
  4141fd:	pop    esp
  4141fe:	sbb    ebx,DWORD PTR [edi]
  414200:	rol    BYTE PTR [edi+0x7f],0xc8
  414204:	xchg   esi,eax
  414205:	out    dx,al
  414206:	lods   eax,DWORD PTR ds:[esi]
  414207:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414208:	adc    ebx,DWORD PTR [edi]
  41420a:	fld    DWORD PTR [ebx-0x2acc91b3]
  414210:	dec    edi
  414211:	sbb    eax,0xbf70f025
  414216:	xchg   esp,eax
  414217:	dec    eax
  414218:	dec    esp
  414219:	in     al,0xc3
  41421b:	clc    
  41421c:	loopne 0x414267
  41421e:	mov    bh,0xa1
  414220:	clc    
  414221:	jle    0x41425f
  414223:	popa   
  414224:	icebp  
  414225:	sub    al,0x38
  414227:	ret    
  414228:	repnz sbb esp,DWORD PTR [edi+edi*8+0x685a494f]
  414230:	sub    eax,0xaa2b4e9a
  414235:	enter  0x65d3,0xcd
  414239:	adc    ebp,DWORD PTR [eax]
  41423b:	js     0x41427d
  41423d:	cmp    ch,al
  41423f:	add    al,0x9f
  414241:	bound  edx,QWORD PTR [esi+0x71]
  414244:	in     eax,dx
  414245:	jae    0x41425c
  414247:	call   0x195e:0x189fb43e
  41424e:	sbb    al,0x70
  414250:	jg     0x4142c2
  414252:	cdq    
  414253:	es pop eax
  414255:	sub    al,0xc2
  414257:	inc    esp
  414258:	cwde   
  414259:	and    al,0xde
  41425b:	adc    eax,0xf3bb214f
  414260:	pop    esp
  414261:	sbb    al,0xc9
  414263:	cs ss hlt 
  414266:	out    dx,al
  414267:	xchg   ecx,eax
  414268:	test   BYTE PTR [edx-0x55a2af47],ah
  41426e:	call   FWORD PTR [ecx]
  414270:	loope  0x414227
  414272:	repnz popf 
  414274:	fs in  al,0xf3
  414277:	fisubr DWORD PTR [ebp+0x3c]
  41427a:	sbb    BYTE PTR [ecx],dl
  41427c:	and    eax,0x19f2b510
  414281:	push   edi
  414282:	cmp    BYTE PTR [ecx-0xd],dl
  414285:	fisttp QWORD PTR [ecx+0x13]
  414288:	pusha  
  414289:	mov    edi,ebp
  41428b:	icebp  
  41428c:	add    al,0x0
  41428e:	pop    esp
  41428f:	test   DWORD PTR [ebp+0x6f],ebp
  414292:	push   edx
  414293:	push   ss
  414294:	imul   eax,eax,0x32fea56f
  41429a:	mov    DWORD PTR ds:0xb6805994,ebx
  4142a0:	jb     0x4142be
  4142a2:	sahf   
  4142a3:	loopne 0x4142c0
  4142a5:	leave  
  4142a6:	retf   0x210b
  4142a9:	xchg   esp,eax
  4142aa:	inc    esi
  4142ab:	mov    dl,0xe8
  4142ad:	push   esp
  4142ae:	mov    dl,0x71
  4142b0:	call   0x127ad0ee
  4142b5:	jne    0x414310
  4142b7:	lahf   
  4142b8:	ret    0xeb74
  4142bb:	and    BYTE PTR [edx+0x4ed35426],dl
  4142c1:	sub    edi,esi
  4142c3:	mov    cl,0x1b
  4142c5:	cmp    ch,bh
  4142c7:	popa   
  4142c8:	data16 loopne 0x4142c2
  4142cb:	dec    eax
  4142cc:	xor    ecx,DWORD PTR [esi+0x36]
  4142cf:	xchg   ebp,eax
  4142d0:	mov    eax,0xd068b78f
  4142d5:	ja     0x414303
  4142d7:	add    ecx,DWORD PTR [ebp+edi*4+0x4ba2a975]
  4142de:	shl    BYTE PTR [edx-0x69],0x74
  4142e2:	leave  
  4142e3:	pop    edi
  4142e4:	xchg   BYTE PTR [eax+0x5fd65447],bh
  4142ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142eb:	jge    0x414314
  4142ed:	mov    WORD PTR [edi],fs
  4142ef:	dec    edx
  4142f0:	int    0xa0
  4142f2:	pop    edx
  4142f3:	mov    bl,0x43
  4142f5:	xor    DWORD PTR [edi+0xa],ebx
  4142f8:	scas   eax,DWORD PTR es:[edi]
  4142f9:	aam    0xdc
  4142fb:	mov    ch,0xf6
  4142fd:	outs   dx,BYTE PTR ds:[esi]
  4142fe:	in     eax,0x3f
  414300:	xchg   esp,eax
  414301:	lods   al,BYTE PTR ds:[esi]
  414302:	cmp    BYTE PTR [edx+eiz*2-0x5b],dl
  414306:	retf   0x3d37
  414309:	sbb    eax,0xce6ffe3f
  41430e:	pop    edx
  41430f:	rcl    BYTE PTR [ecx-0x40934046],0x8f
  414316:	add    dh,BYTE PTR [edi]
  414318:	fdivr  QWORD PTR [ecx+0x321217a6]
  41431e:	and    eax,0x215d7340
  414323:	push   esp
  414324:	call   0xb9456bed
  414329:	mov    esp,0xddc858bc
  41432e:	or     esp,ebx
  414330:	dec    edi
  414331:	lahf   
  414332:	xor    edi,DWORD PTR [ebx]
  414334:	mov    BYTE PTR [edi-0x3999e38e],ch
  41433a:	xor    bh,BYTE PTR ds:0x99fb0ed7
  414340:	mov    ds:0xfe2be623,al
  414345:	sub    al,0xfe
  414347:	and    BYTE PTR [edi-0x28],0x9f
  41434b:	xor    DWORD PTR [ecx],edi
  41434d:	rcl    BYTE PTR es:[edi],1
  414350:	out    dx,al
  414351:	push   esp
  414352:	pop    eax
  414353:	arpl   bx,cx
  414355:	popa   
  414356:	lahf   
  414357:	jl     0x4142e9
  414359:	lods   eax,DWORD PTR ds:[esi]
  41435a:	and    ebp,esp
  41435c:	gs lahf 
  41435e:	inc    ebx
  41435f:	in     al,dx
  414360:	sbb    eax,0x5239298d
  414365:	gs pop es
  414367:	adc    BYTE PTR [esp+edx*4-0x52],dl
  41436b:	sub    DWORD PTR [ecx-0x27],edx
  41436e:	sbb    DWORD PTR [edi-0xb],0xb1856da
  414375:	xor    DWORD PTR [ebx+0x4b951be5],ecx
  41437b:	cmp    eax,eax
  41437d:	push   0x24
  41437f:	fcomp  QWORD PTR [edx]
  414381:	pop    ss
  414382:	sahf   
  414383:	pop    ebx
  414384:	xchg   esp,eax
  414385:	fidiv  WORD PTR [esi-0x31]
  414388:	or     al,0x12
  41438a:	cli    
  41438b:	mov    ah,0xea
  41438d:	push   0xffffffce
  41438f:	jmp    0x81529886
  414394:	jl     0x414404
  414396:	ins    BYTE PTR es:[edi],dx
  414397:	mov    dl,0xdd
  414399:	scas   al,BYTE PTR es:[edi]
  41439a:	mov    ss,WORD PTR [ecx+0x6b]
  41439d:	xchg   ebx,eax
  41439e:	dec    esi
  41439f:	mov    bh,0xe5
  4143a1:	sbb    al,0x44
  4143a3:	jne    0x4143b4
  4143a5:	imul   ebp,DWORD PTR [edx-0x5c338b22],0x5ed6c970
  4143af:	sar    DWORD PTR [ecx-0x40241aed],0xdf
  4143b6:	outs   dx,DWORD PTR ds:[esi]
  4143b7:	adc    BYTE PTR [ecx],dl
  4143b9:	pop    esp
  4143ba:	lods   eax,DWORD PTR ds:[esi]
  4143bb:	mov    ch,0xf9
  4143bd:	mov    ebx,0x74677145
  4143c2:	popf   
  4143c3:	aas    
  4143c4:	test   BYTE PTR [ebp-0x10],dh
  4143c7:	idiv   BYTE PTR [edx+0x3884d226]
  4143cd:	xor    esi,edi
  4143cf:	pop    edi
  4143d0:	lock jbe 0x414390
  4143d3:	dec    ebp
  4143d4:	xchg   esp,eax
  4143d5:	and    BYTE PTR [eax-0x5d],bh
  4143d8:	pushf  
  4143d9:	inc    ebp
  4143da:	out    dx,al
  4143db:	add    BYTE PTR [esi],cl
  4143dd:	sbb    eax,0x60c0c742
  4143e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143e3:	mov    ds:0x1dc51144,eax
  4143e8:	jmp    0x414441
  4143ea:	pop    edx
  4143eb:	out    dx,al
  4143ec:	out    dx,al
  4143ed:	xchg   esp,eax
  4143ee:	xor    ch,BYTE PTR [edi-0x24]
  4143f1:	mov    esi,0x46874a4
  4143f6:	dec    ebp
  4143f7:	in     eax,0x45
  4143f9:	retf   0x84b0
  4143fc:	sbb    BYTE PTR [esi-0x7f56ec04],bh
  414402:	(bad)  
  414403:	push   ecx
  414404:	popa   
  414405:	jge    0x4143dd
  414407:	jb     0x414483
  414409:	jb     0x4143ce
  41440b:	out    dx,eax
  41440c:	mov    bh,0x19
  41440e:	pop    ds
  41440f:	scas   eax,DWORD PTR es:[edi]
  414410:	fist   DWORD PTR [ebp+edx*4+0x2c]
  414414:	cmp    eax,0x72a0f2af
  414419:	stc    
  41441a:	ret    0x14a2
  41441d:	mov    esp,DWORD PTR [edx+0x4dbd98e8]
  414423:	add    al,0x5a
  414425:	ret    
  414426:	loopne 0x414499
  414428:	add    esi,eax
  41442a:	call   0x127:0x4a630f03
  414431:	cmp    al,0xc1
  414433:	jge    0x414415
  414435:	popf   
  414436:	dec    edx
  414437:	jmp    0xf9542206
  41443c:	test   al,0xcd
  41443e:	test   al,0xa
  414440:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414441:	ins    BYTE PTR es:[edi],dx
  414442:	rcr    DWORD PTR [edi],cl
  414444:	dec    esi
  414445:	fisttp WORD PTR [edi-0x70]
  414448:	sahf   
  414449:	xor    eax,0x30dc9b07
  41444e:	cmp    esp,edx
  414450:	inc    edi
  414451:	and    DWORD PTR [edx+0x77],ebp
  414454:	push   esp
  414455:	cmc    
  414456:	push   esp
  414457:	jno    0x4144b2
  414459:	sbb    eax,0xf9ae9afc
  41445e:	aaa    
  41445f:	push   0x524e9bb3
  414464:	xlat   BYTE PTR ds:[ebx]
  414465:	(bad)  
  414467:	mov    ds:0x2bf4d14d,al
  41446c:	addr16 adc al,0xb4
  41446f:	outs   dx,DWORD PTR ds:[esi]
  414470:	ret    0x91c8
  414473:	repz mov ah,0xe9
  414476:	cmp    cl,ch
  414478:	and    al,BYTE PTR [ebp+0x6a]
  41447b:	outs   dx,DWORD PTR ds:[esi]
  41447c:	shl    BYTE PTR ds:0x45a76e1e,1
  414482:	dec    edx
  414483:	lahf   
  414484:	shl    DWORD PTR [ebx],0xd8
  414487:	jnp    0x41446c
  414489:	or     eax,0x99ebf435
  41448e:	mov    gs,WORD PTR [edx]
  414490:	fcmovnbe st,st(7)
  414492:	sbb    al,0x58
  414494:	sbb    al,0x62
  414496:	mov    edx,DWORD PTR [ebx-0x262d2f75]
  41449c:	mov    bl,0x44
  41449e:	sub    al,0x81
  4144a0:	inc    edi
  4144a1:	and    BYTE PTR [ebp+0x76baf9ac],ch
  4144a7:	adc    ch,BYTE PTR [ecx+0x17]
  4144aa:	hlt    
  4144ab:	aad    0x9d
  4144ad:	fwait
  4144ae:	mov    ds:0x585dd0eb,eax
  4144b3:	pop    ebp
  4144b4:	adc    ebp,ebx
  4144b6:	ret    
  4144b7:	or     BYTE PTR [edx],ah
  4144b9:	push   edx
  4144ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144bb:	jecxz  0x414484
  4144bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144be:	add    BYTE PTR [ebx],dh
  4144c0:	in     al,0xa9
  4144c2:	adc    dh,BYTE PTR [esi-0x5]
  4144c5:	out    dx,al
  4144c6:	aam    0x5a
  4144c8:	fld    st(3)
  4144ca:	add    eax,0x911deda3
  4144cf:	fbld   TBYTE PTR [edi-0x42a316cd]
  4144d5:	add    eax,0xa17f2c86
  4144da:	adc    dh,ch
  4144dc:	js     0x4144eb
  4144de:	arpl   di,cx
  4144e0:	add    eax,0x26a702b9
  4144e5:	and    BYTE PTR [ecx],0x47
  4144e8:	sbb    ecx,DWORD PTR [ecx+0x9d5a93c]
  4144ee:	add    al,0xd8
  4144f0:	jne    0x41451a
  4144f2:	mov    DWORD PTR [edx+0xa],ebx
  4144f5:	jg     0x414536
  4144f7:	mov    WORD PTR [edx],?
  4144f9:	add    ebx,DWORD PTR [ebx+eiz*2+0xf4756bd]
  414500:	xchg   ebx,eax
  414501:	ret    
  414502:	pusha  
  414503:	ss lahf 
  414505:	(bad)  
  414506:	jecxz  0x4144d7
  414508:	push   cs
  414509:	fistp  WORD PTR [esi+0x52e577d4]
  41450f:	bound  ebx,QWORD PTR [ebx]
  414511:	mov    al,0x64
  414513:	sbb    al,0xd3
  414515:	and    BYTE PTR [ebx-0x43],dl
  414518:	xchg   esp,eax
  414519:	or     ebp,DWORD PTR [esi+0x32e889cb]
  41451f:	loope  0x414592
  414521:	and    DWORD PTR [esi+0x6d],0x4133a8f2
  414528:	pop    edi
  414529:	xchg   ah,ah
  41452b:	in     eax,dx
  41452c:	and    DWORD PTR [esi-0x3e],edx
  41452f:	dec    edx
  414530:	push   esp
  414531:	jns    0x4144f7
  414533:	ds mov ch,0x8d
  414536:	inc    ebp
  414537:	out    dx,eax
  414538:	out    dx,eax
  414539:	fs fcmove st,st(1)
  41453c:	leave  
  41453d:	jmp    eax
  41453f:	mov    dl,0x3f
  414541:	sahf   
  414542:	dec    ebx
  414543:	(bad)  
  414544:	not    DWORD PTR [ecx+0x7abc4450]
  41454a:	loop   0x41452e
  41454c:	mov    ecx,ebx
  41454e:	call   0xcf29:0x2a0d136e
  414555:	pop    edi
  414556:	and    ch,ch
  414558:	loopne 0x4145b7
  41455a:	lods   al,BYTE PTR ds:[esi]
  41455b:	jecxz  0x414570
  41455d:	mov    DWORD PTR [edi-0x2f],esi
  414560:	and    esi,DWORD PTR [ebx]
  414562:	cmp    esi,DWORD PTR [ebx-0x3e]
  414565:	int3   
  414566:	mov    BYTE PTR [ecx+edx*4-0x67b12d69],cl
  41456d:	and    cl,BYTE PTR [ebx]
  41456f:	xchg   esi,eax
  414570:	and    BYTE PTR [edi-0x60],ah
  414573:	jl     0x414506
  414575:	stos   BYTE PTR es:[edi],al
  414576:	push   ebx
  414577:	xor    eax,0xd0de1fde
  41457c:	push   ebx
  41457d:	cmp    DWORD PTR [eax],0xffffffcb
  414580:	test   edi,edi
  414582:	jb     0x41453c
  414584:	xor    ah,BYTE PTR [edx]
  414586:	in     al,dx
  414587:	jecxz  0x4145b1
  414589:	sar    DWORD PTR [ecx],1
  41458b:	xor    DWORD PTR [ecx-0x2d],eax
  41458e:	pop    ebp
  41458f:	dec    esi
  414590:	inc    ebp
  414591:	cs mov al,0x32
  414594:	push   esi
  414595:	bound  esp,QWORD PTR [ecx-0x33]
  414598:	stos   BYTE PTR es:[edi],al
  414599:	std    
  41459a:	pop    eax
  41459b:	loop   0x4145a1
  41459d:	add    BYTE PTR [edi+0x47b781bc],bl
  4145a3:	das    
  4145a4:	retf   
  4145a5:	lods   al,BYTE PTR ds:[esi]
  4145a6:	sbb    al,0x6b
  4145a8:	call   FWORD PTR [ecx]
  4145aa:	cmp    eax,0x30d8e7b
  4145af:	ins    DWORD PTR es:[edi],dx
  4145b0:	and    esi,edi
  4145b2:	nop
  4145b3:	popa   
  4145b4:	or     al,0xc6
  4145b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145b7:	ror    al,1
  4145b9:	mov    ebx,DWORD PTR [edi+0x70d5474b]
  4145bf:	or     ah,BYTE PTR [ecx+edi*1-0x7d2b56bb]
  4145c6:	inc    ebx
  4145c7:	retf   
  4145c8:	xor    al,dh
  4145ca:	sub    BYTE PTR [edx-0x2bec7079],al
  4145d0:	nop
  4145d1:	test   edx,0xfb0bb2b3
  4145d7:	xor    ecx,eax
  4145d9:	jno    0x414602
  4145db:	fwait
  4145dc:	and    al,0xa5
  4145de:	mov    bl,BYTE PTR [edi+0x3d]
  4145e1:	jmp    0xb897:0x75f4210e
  4145e8:	pop    ecx
  4145e9:	mov    WORD PTR [ebx-0x7fd0a05a],ss
  4145ef:	test   BYTE PTR [eax],bh
  4145f1:	jne    0x4145c2
  4145f3:	mov    ds:0x658cf2f0,eax
  4145f8:	call   0xf8c91f3
  4145fd:	mov    cl,0x49
  4145ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414600:	jl     0x4145c6
  414602:	js     0x414599
  414604:	adc    eax,0xb08c6b32
  414609:	arpl   WORD PTR ds:0x1a87ccfc,cx
  41460f:	(bad)  
  414610:	pop    ecx
  414611:	fwait
  414612:	ja     0x4145ca
  414614:	xchg   ebx,eax
  414615:	dec    edx
  414616:	dec    esi
  414617:	adc    eax,0x16bce071
  41461c:	popf   
  41461d:	int3   
  41461e:	ins    DWORD PTR es:[edi],dx
  41461f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414620:	xchg   BYTE PTR es:[ebx-0x1d],dl
  414624:	sbb    eax,eax
  414626:	pop    esp
  414627:	inc    ebp
  414628:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414629:	jns    0x252db3d1
  41462f:	in     eax,0xe8
  414631:	adc    al,0xaf
  414633:	cmp    al,BYTE PTR [edx]
  414635:	push   0x4f
  414637:	xchg   edi,eax
  414638:	vshufps ymm5,ymm6,ymm1,0xfb
  41463d:	mov    cl,BYTE PTR [esi+esi*1]
  414640:	jns    0x414602
  414642:	mov    BYTE PTR [edi-0x20],dl
  414645:	fcomip st,st(3)
  414647:	mov    edi,0x537fe1ac
  41464c:	aaa    
  41464d:	pushf  
  41464e:	loopne 0x414683
  414650:	pop    ebp
  414651:	call   0xbae38498
  414656:	sub    edi,ebp
  414658:	cdq    
  414659:	stos   DWORD PTR es:[edi],eax
  41465a:	cli    
  41465b:	das    
  41465c:	rcr    dl,0xdc
  41465f:	xchg   ecx,eax
  414660:	sti    
  414661:	faddp  st(6),st
  414663:	jne    0x4146e2
  414665:	adc    eax,0xab410fb3
  41466a:	jg     0x414668
  41466c:	stc    
  41466d:	mov    bh,0x96
  41466f:	dec    ebx
  414670:	mov    edx,0x4111462f
  414675:	xor    DWORD PTR [ebx+0x53d029e2],edx
  41467b:	sbb    eax,edx
  41467d:	jo     0x414614
  41467f:	repz lds esp,FWORD PTR [edx-0x7f]
  414683:	lods   al,BYTE PTR ds:[esi]
  414685:	mov    ah,0x23
  414687:	and    edi,DWORD PTR [edi-0x7]
  41468a:	add    DWORD PTR [edx-0x263ea8c4],edx
  414690:	aam    0xb7
  414692:	daa    
  414693:	dec    esp
  414694:	adc    bl,BYTE PTR ds:[edx]
  414697:	(bad)  
  414698:	pop    edi
  414699:	push   es
  41469a:	test   esp,0xd6d22710
  4146a0:	out    dx,ax
  4146a2:	in     al,0x6a
  4146a4:	daa    
  4146a5:	pop    ss
  4146a6:	fwait
  4146a7:	rcl    DWORD PTR [esi-0x26a14bb4],cl
  4146ad:	xor    esp,ecx
  4146af:	in     eax,dx
  4146b0:	shl    al,0x7d
  4146b3:	loope  0x41463b
  4146b5:	push   ecx
  4146b6:	lods   eax,DWORD PTR ds:[esi]
  4146b7:	test   al,0xf
  4146b9:	loopne 0x41463e
  4146bb:	ror    BYTE PTR [eax+0x6fd365a3],1
  4146c1:	mov    dl,0x77
  4146c3:	jne    0x41464b
  4146c5:	scas   eax,DWORD PTR es:[edi]
  4146c6:	shl    BYTE PTR [ebp-0x32],cl
  4146c9:	sbb    dl,BYTE PTR [edx-0xc]
  4146cc:	xor    al,0xdc
  4146ce:	data16 ror ah,1
  4146d1:	(bad)  
  4146d2:	push   edx
  4146d3:	dec    esp
  4146d4:	cmp    al,BYTE PTR [ecx]
  4146d6:	pusha  
  4146d7:	mov    ch,0xda
  4146d9:	jecxz  0x414679
  4146db:	and    edx,ebx
  4146dd:	gs push edi
  4146df:	outs   dx,BYTE PTR ds:[esi]
  4146e0:	retf   
  4146e1:	sahf   
  4146e2:	pop    ecx
  4146e3:	fld    QWORD PTR [ecx+ecx*1+0xc]
  4146e7:	sub    cl,al
  4146e9:	nop
  4146ea:	icebp  
  4146eb:	jge    0x4146fa
  4146ed:	ja     0x414727
  4146ef:	sahf   
  4146f0:	xor    DWORD PTR [edx+0x18],esi
  4146f3:	cdq    
  4146f4:	mov    edi,ecx
  4146f6:	pop    eax
  4146f7:	add    al,0x7f
  4146f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146fa:	mov    bl,dl
  4146fc:	stos   BYTE PTR es:[edi],al
  4146fd:	inc    edi
  4146fe:	add    al,BYTE PTR [esi]
  414700:	sub    al,0x52
  414702:	push   ss
  414703:	cdq    
  414704:	into   
  414705:	sbb    dl,BYTE PTR [edx-0x2afd8d04]
  41470b:	push   cs
  41470c:	dec    eax
  41470d:	iret   
  41470e:	inc    esi
  41470f:	imul   BYTE PTR [esp+eax*1]
  414712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414713:	scas   al,BYTE PTR es:[edi]
  414714:	push   ss
  414715:	add    eax,0x182161b1
  41471a:	mov    ecx,0x686fdee8
  41471f:	je     0x41478c
  414721:	push   ebp
  414722:	rcl    DWORD PTR [ecx-0x31],cl
  414725:	dec    ebp
  414726:	dec    BYTE PTR [ebp+0x23]
  414729:	push   edx
  41472a:	call   0x9314:0xdef39e1c
  414731:	int    0x2
  414733:	xchg   ecx,eax
  414734:	test   eax,0xdcd29157
  414739:	jne    0x4146e7
  41473b:	int    0x54
  41473d:	push   ds
  41473e:	jmp    0xa921:0xd4fcc56
  414745:	ins    BYTE PTR es:[edi],dx
  414746:	inc    ebp
  414747:	mov    ch,0xf4
  414749:	test   DWORD PTR [ebp-0x3d],eax
  41474c:	pop    esi
  41474d:	fild   DWORD PTR [esi+edx*8+0x3a331d4e]
  414754:	sub    al,al
  414756:	lods   eax,DWORD PTR ds:[esi]
  414757:	ret    0x8b58
  41475a:	mov    ch,0xda
  41475c:	int3   
  41475d:	mov    esp,0x648c3913
  414762:	add    BYTE PTR [eax+ebx*8-0x61],dl
  414766:	pop    esp
  414767:	ret    0x3530
  41476a:	cli    
  41476b:	(bad)  
  41476c:	repnz push esi
  41476e:	fsub   st,st(4)
  414770:	adc    BYTE PTR [ecx+0x2de9b317],0x49
  414777:	aaa    
  414778:	loop   0x414734
  41477a:	xor    al,0x2
  41477c:	loopne 0x414716
  41477e:	dec    edi
  41477f:	add    eax,0x9cd44209
  414784:	pushfw 
  414786:	mov    ch,0xbc
  414788:	sub    esp,edi
  41478a:	fwait
  41478b:	pop    eax
  41478c:	out    dx,al
  41478d:	xor    al,0x8b
  41478f:	add    ebx,edx
  414791:	mov    edi,0xa5a0bf99
  414796:	adc    BYTE PTR [eax+0x4f47cfb7],0x3e
  41479d:	mov    esp,0x5f48fc7c
  4147a2:	cmp    eax,0x72d5c986
  4147a7:	std    
  4147a8:	call   0x4e56:0x6dc47b4
  4147af:	push   ds
  4147b0:	ins    BYTE PTR es:[edi],dx
  4147b1:	sbb    eax,0xbdf204ae
  4147b6:	lods   eax,DWORD PTR ds:[esi]
  4147b7:	in     eax,dx
  4147b8:	ret    
  4147b9:	cdq    
  4147ba:	std    
  4147bb:	dec    edx
  4147bc:	pushf  
  4147bd:	ins    BYTE PTR es:[edi],dx
  4147be:	push   eax
  4147bf:	cmp    ebp,DWORD PTR [ebx]
  4147c1:	jno    0x41479d
  4147c3:	loopne 0x41481d
  4147c5:	cmp    ch,cl
  4147c7:	out    0x81,al
  4147c9:	retf   0x97be
  4147cc:	jae    0x41484d
  4147ce:	mov    dl,0xe6
  4147d0:	push   eax
  4147d1:	scas   al,BYTE PTR es:[edi]
  4147d2:	and    DWORD PTR [ecx],esi
  4147d4:	data16 ja 0x4147bc
  4147d7:	popa   
  4147d8:	jnp    0x414825
  4147da:	ins    BYTE PTR es:[edi],dx
  4147db:	fstp   DWORD PTR [esi-0x1f9c6c06]
  4147e1:	push   edx
  4147e2:	out    0x70,al
  4147e4:	jmp    0xe0356af2
  4147e9:	test   al,0x89
  4147eb:	jmp    0x4147d5
  4147ed:	adc    esp,0x1a7ea6c7
  4147f3:	jg     0x4147fc
  4147f5:	popf   
  4147f6:	sbb    ah,ch
  4147f8:	mov    bl,0x37
  4147fa:	cmc    
  4147fb:	hlt    
  4147fc:	stos   DWORD PTR es:[edi],eax
  4147fd:	stos   DWORD PTR es:[edi],eax
  4147fe:	cmp    esi,DWORD PTR [edx]
  414800:	stos   DWORD PTR es:[edi],eax
  414801:	and    bl,cl
  414803:	or     ecx,edi
  414805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414806:	cmp    ebx,esp
  414808:	ds adc eax,0x8ac68334
  41480e:	mov    ah,0x9d
  414810:	push   ebx
  414811:	gs and eax,0x5ea3c01b
  414817:	fs call 0x65a10a37
  41481d:	gs pop ebp
  41481f:	fdiv   st(6),st
  414821:	sbb    al,0x90
  414823:	push   0x54
  414825:	cmp    eax,0x4820457c
  41482a:	and    bl,0x37
  41482d:	sub    al,0x5c
  41482f:	cld    
  414830:	xchg   BYTE PTR [ecx+0x6aea6882],ch
  414836:	adc    al,0x85
  414838:	push   eax
  414839:	in     eax,dx
  41483a:	out    dx,eax
  41483b:	test   eax,0x8a3a5aca
  414840:	lods   al,BYTE PTR ds:[esi]
  414841:	rcr    DWORD PTR [esp+eax*2+0x36],0xc9
  414846:	inc    eax
  414847:	mov    WORD PTR [edi+0x44],gs
  41484a:	(bad)
  41484f:	xchg   ebp,eax
  414850:	inc    ebx
  414851:	sub    BYTE PTR [ecx],dh
  414853:	push   ecx
  414854:	mov    al,ds:0x4b197c20
  414859:	lahf   
  41485a:	cmp    cl,BYTE PTR [ebp+0x5a011b03]
  414860:	adc    eax,0x93295d32
  414865:	ret    
  414866:	adc    ebp,edi
  414868:	(bad)  
  414869:	push   0x12
  41486b:	stc    
  41486c:	push   0x194607eb
  414871:	daa    
  414872:	scas   eax,DWORD PTR es:[edi]
  414873:	fcomi  st,st(2)
  414875:	push   cs
  414876:	gs nop
  414878:	xchg   esi,eax
  414879:	mov    edi,DWORD PTR [ecx+0x59]
  41487c:	retf   0x2a35
  41487f:	xor    BYTE PTR [ebx+0x77],0x43
  414883:	dec    esp
  414884:	add    DWORD PTR [edi+0x1b],ecx
  414887:	mov    WORD PTR fs:0x12ae0f83,fs
  41488e:	xchg   ecx,eax
  41488f:	jge    0x414880
  414891:	ds mov al,0xd
  414894:	test   eax,0x9d2452f0
  414899:	and    esi,ebp
  41489b:	xchg   ecx,eax
  41489c:	data16 rol BYTE PTR [ebp-0x47],0x3a
  4148a1:	or     ah,BYTE PTR [ecx]
  4148a3:	popf   
  4148a4:	mov    eax,0x68224057
  4148a9:	out    0x33,eax
  4148ab:	mov    eax,ds:0x5e5d3fb7
  4148b0:	cdq    
  4148b1:	dec    ebp
  4148b2:	pop    esp
  4148b3:	inc    esp
  4148b4:	outs   dx,BYTE PTR ds:[esi]
  4148b5:	clc    
  4148b6:	dec    ebx
  4148b7:	lock stos BYTE PTR es:[edi],al
  4148b9:	pop    ebx
  4148ba:	pop    ds
  4148bb:	jno    0x41486e
  4148bd:	loope  0x4148b0
  4148bf:	mov    al,ds:0x67c4650b
  4148c4:	lds    edx,FWORD PTR es:[edi+0x23]
  4148c8:	sbb    eax,0xd9aad971
  4148cd:	jge    0x4148ec
  4148cf:	ficom  DWORD PTR [edx+0x5f]
  4148d2:	popa   
  4148d3:	fisubr WORD PTR [esp+ebp*8]
  4148d6:	dec    edx
  4148d7:	jmp    0x560d:0x25416fcb
  4148de:	ss das 
  4148e0:	sbb    al,0x0
  4148e2:	xchg   ebx,eax
  4148e3:	(bad)  
  4148e4:	in     eax,0xb9
  4148e6:	xor    eax,0x39e19fda
  4148eb:	loop   0x4148d9
  4148ed:	sub    eax,0xca134597
  4148f2:	inc    edi
  4148f3:	inc    ebx
  4148f4:	dec    esi
  4148f5:	rcl    DWORD PTR [ebp+eax*1+0x53],1
  4148f9:	xor    ah,BYTE PTR [eax-0x77]
  4148fc:	sub    ch,0xe1
  4148ff:	inc    esp
  414900:	dec    edx
  414901:	mov    dh,0x86
  414903:	sub    BYTE PTR ds:0x61274522,0x39
  41490a:	rcr    DWORD PTR [edi-0x3f],0xc7
  41490e:	push   ebx
  41490f:	dec    BYTE PTR [edx-0x1c069ac7]
  414915:	int    0x39
  414917:	mov    edi,0x21cf72a6
  41491c:	lahf   
  41491d:	mov    eax,ds:0x4e711c8a
  414922:	push   0xaf447912
  414927:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414928:	jle    0x4148e4
  41492a:	cwde   
  41492b:	sub    al,0xac
  41492d:	mov    eax,ds:0x1e2f084a
  414932:	into   
  414933:	lods   al,BYTE PTR ds:[esi]
  414934:	dec    edx
  414935:	int    0x98
  414937:	xchg   ebp,eax
  414938:	push   esi
  414939:	cli    
  41493a:	lahf   
  41493b:	imul   edi,DWORD PTR [ebx-0x4f3faaa4],0xdadcaa7
  414945:	jle    0x414995
  414947:	sbb    BYTE PTR [edx+0x7c60fade],ah
  41494d:	ja     0x4148dc
  41494f:	clc    
  414950:	cmp    BYTE PTR [eax-0x542b343a],cl
  414956:	popa   
  414957:	and    eax,0xe0d61dd2
  41495c:	mov    ah,0x8a
  41495e:	cdq    
  41495f:	xchg   esp,eax
  414960:	or     BYTE PTR [eax+0x74],al
  414963:	jecxz  0x4149bb
  414965:	das    
  414966:	fst    DWORD PTR [edx]
  414968:	dec    ebx
  414969:	pushf  
  41496a:	mov    BYTE PTR [edi+0xb],0x71
  41496e:	idiv   DWORD PTR [esi]
  414970:	jo     0x4149c9
  414972:	mov    al,0x3d
  414974:	inc    ecx
  414975:	push   0xffffffbc
  414977:	pop    edi
  414978:	loope  0x414995
  41497a:	cmp    DWORD PTR [ebx],esp
  41497c:	pop    edx
  41497d:	mov    al,ds:0xb2c5757a
  414982:	dec    esi
  414983:	lahf   
  414984:	xor    DWORD PTR [edx+0x135cc76b],ebp
  41498a:	jmp    0x2cd6:0xe3d16d2e
  414991:	gs int3 
  414993:	adc    ah,BYTE PTR [ebx+0x69]
  414996:	xor    DWORD PTR [ebx+0x79a60a02],esp
  41499c:	call   0x6865:0xc259eea5
  4149a3:	pop    edx
  4149a4:	push   ebx
  4149a5:	jmp    0x892cb23
  4149aa:	(bad)  
  4149ab:	retf   0x896d
  4149ae:	push   ebp
  4149af:	or     cl,ch
  4149b1:	jo     0x4149b3
  4149b3:	add    BYTE PTR [eax],al
  4149b5:	mov    edx,DWORD PTR [ebp+0x8]
  4149b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4149bb:	xor    edx,eax
  4149bd:	xor    ebx,eax
  4149bf:	sub    edx,ebx
  4149c1:	sub    edx,esi
  4149c3:	xor    edx,eax
  4149c5:	mov    DWORD PTR [ebp+0x8],edx
  4149c8:	mov    edx,DWORD PTR [ebp+0x8]
  4149cb:	mov    ebx,DWORD PTR [ebp-0x58]
  4149ce:	add    edx,0x5708e2
  4149d4:	imul   edx,ebx
  4149d7:	mov    DWORD PTR [ebp-0x58],edx
  4149da:	mov    edx,DWORD PTR [ebp+0x8]
  4149dd:	mov    ebx,DWORD PTR [ebp-0x54]
  4149e0:	add    edx,0x64f89c
  4149e6:	or     edx,ebx
  4149e8:	mov    DWORD PTR [ebp-0x54],edx
  4149eb:	mov    edx,DWORD PTR [ebp+0x8]
  4149ee:	mov    ebx,DWORD PTR [ebp-0x50]
  4149f1:	add    edx,ecx
  4149f3:	xor    edx,ebx
  4149f5:	mov    DWORD PTR [ebp-0x50],edx
  4149f8:	mov    edx,DWORD PTR [ebp+0x8]
  4149fb:	mov    ebx,DWORD PTR [ebp-0x4c]
  4149fe:	add    edx,edi
  414a00:	and    edx,ebx
  414a02:	mov    DWORD PTR [ebp-0x4c],edx
  414a05:	mov    edx,DWORD PTR [ebp+0x8]
  414a08:	mov    ebx,DWORD PTR [ebp-0x48]
  414a0b:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a12:	mov    DWORD PTR [ebp-0x48],edx
  414a15:	mov    edx,DWORD PTR [ebp+0x8]
  414a18:	mov    ebx,0xfa5e1528
  414a1d:	sub    ebx,edx
  414a1f:	add    ebx,DWORD PTR [ebp-0x44]
  414a22:	mov    DWORD PTR [ebp-0x44],ebx
  414a25:	mov    edx,DWORD PTR [ebp+0x8]
  414a28:	xor    edx,eax
  414a2a:	add    edx,esi
  414a2c:	jne    0x4149b5
  414a32:	mov    edx,DWORD PTR [ebp-0x14]
  414a35:	mov    DWORD PTR [ebp+0x8],edx
  414a38:	jmp    0x414aad
  414a3d:	mov    edx,DWORD PTR [ebp+0x8]
  414a40:	mov    ebx,DWORD PTR [ebp-0x8]
  414a43:	xor    edx,eax
  414a45:	xor    ebx,eax
  414a47:	sub    edx,ebx
  414a49:	sub    edx,esi
  414a4b:	xor    edx,eax
  414a4d:	mov    DWORD PTR [ebp+0x8],edx
  414a50:	mov    edx,DWORD PTR [ebp+0x8]
  414a53:	mov    ebx,DWORD PTR [ebp-0x58]
  414a56:	add    edx,0x5708e2
  414a5c:	imul   edx,ebx
  414a5f:	mov    DWORD PTR [ebp-0x58],edx
  414a62:	mov    edx,DWORD PTR [ebp+0x8]
  414a65:	mov    ebx,DWORD PTR [ebp-0x54]
  414a68:	add    edx,0x64f89c
  414a6e:	or     edx,ebx
  414a70:	mov    DWORD PTR [ebp-0x54],edx
  414a73:	mov    edx,DWORD PTR [ebp+0x8]
  414a76:	mov    ebx,DWORD PTR [ebp-0x50]
  414a79:	add    edx,ecx
  414a7b:	xor    edx,ebx
  414a7d:	mov    DWORD PTR [ebp-0x50],edx
  414a80:	mov    edx,DWORD PTR [ebp+0x8]
  414a83:	mov    ebx,DWORD PTR [ebp-0x4c]
  414a86:	add    edx,edi
  414a88:	and    edx,ebx
  414a8a:	mov    DWORD PTR [ebp-0x4c],edx
  414a8d:	mov    edx,DWORD PTR [ebp+0x8]
  414a90:	mov    ebx,DWORD PTR [ebp-0x48]
  414a93:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a9a:	mov    DWORD PTR [ebp-0x48],edx
  414a9d:	mov    edx,DWORD PTR [ebp+0x8]
  414aa0:	mov    ebx,0xfa5e1528
  414aa5:	sub    ebx,edx
  414aa7:	add    ebx,DWORD PTR [ebp-0x44]
  414aaa:	mov    DWORD PTR [ebp-0x44],ebx
  414aad:	mov    edx,DWORD PTR [ebp+0x8]
  414ab0:	xor    edx,eax
  414ab2:	add    edx,esi
  414ab4:	jne    0x414a3d
  414aba:	mov    edx,DWORD PTR [ebp-0x8]
  414abd:	mov    ebx,DWORD PTR [ebp-0xc]
  414ac0:	xor    edx,eax
  414ac2:	lea    edx,[edx+ebx*1+0x3272f3]
  414ac9:	mov    DWORD PTR [ebp-0xc],edx
  414acc:	mov    edx,DWORD PTR [ebp-0x10]
  414acf:	xor    edx,eax
  414ad1:	add    edx,esi
  414ad3:	jne    0x41224b
  414ad9:	jmp    0x41b68b
  414ade:	mov    ecx,DWORD PTR [ebp-0x14]
  414ae1:	mov    DWORD PTR [ebp+0x8],ecx
  414ae4:	jmp    0x414b5d
  414ae9:	mov    ecx,DWORD PTR [ebp+0x8]
  414aec:	mov    edx,DWORD PTR [ebp-0x8]
  414aef:	xor    ecx,eax
  414af1:	xor    edx,eax
  414af3:	sub    ecx,edx
  414af5:	sub    ecx,esi
  414af7:	xor    ecx,eax
  414af9:	mov    DWORD PTR [ebp+0x8],ecx
  414afc:	mov    ecx,DWORD PTR [ebp+0x8]
  414aff:	mov    edx,DWORD PTR [ebp-0x58]
  414b02:	add    ecx,0x5708e2
  414b08:	imul   ecx,edx
  414b0b:	mov    DWORD PTR [ebp-0x58],ecx
  414b0e:	mov    ecx,DWORD PTR [ebp+0x8]
  414b11:	mov    edx,DWORD PTR [ebp-0x54]
  414b14:	add    ecx,0x64f89c
  414b1a:	or     ecx,edx
  414b1c:	mov    DWORD PTR [ebp-0x54],ecx
  414b1f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b22:	mov    edx,DWORD PTR [ebp-0x50]
  414b25:	add    ecx,0x242ebcd
  414b2b:	xor    ecx,edx
  414b2d:	mov    DWORD PTR [ebp-0x50],ecx
  414b30:	mov    ecx,DWORD PTR [ebp+0x8]
  414b33:	mov    edx,DWORD PTR [ebp-0x4c]
  414b36:	add    ecx,edi
  414b38:	and    ecx,edx
  414b3a:	mov    DWORD PTR [ebp-0x4c],ecx
  414b3d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b40:	mov    edx,DWORD PTR [ebp-0x48]
  414b43:	lea    ecx,[edx+ecx*1+0x241fcdf]
  414b4a:	mov    DWORD PTR [ebp-0x48],ecx
  414b4d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b50:	mov    edx,0xfa5e1528
  414b55:	sub    edx,ecx
  414b57:	add    edx,DWORD PTR [ebp-0x44]
  414b5a:	mov    DWORD PTR [ebp-0x44],edx
  414b5d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b60:	xor    ecx,eax
  414b62:	add    ecx,esi
  414b64:	jne    0x414ae9
  414b6a:	jmp    0x41b697
  414b6f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b72:	mov    edx,DWORD PTR [ebp-0x8]
  414b75:	xor    ecx,eax
  414b77:	jmp    0x416f00
  414b7c:	repnz mov esi,esp
  414b7f:	repz add BYTE PTR [esi+eiz*8-0x19361778],0xd3
  414b88:	test   al,0x80
  414b8a:	mov    bh,0x32
  414b8c:	jmp    DWORD PTR [edi-0x7e]
  414b8f:	adc    DWORD PTR [edi],0x5c
  414b92:	add    DWORD PTR [ebx+0x46546d8],0xf
  414b99:	std    
  414b9a:	leave  
  414b9b:	repz cmp eax,0xeadc63e
  414ba1:	outs   dx,BYTE PTR ds:[esi]
  414ba2:	test   eax,0x4b0c78a9
  414ba7:	out    dx,eax
  414ba8:	jmp    0x414bcc
  414baa:	pop    edx
  414bab:	xchg   edx,eax
  414bac:	cdq    
  414bad:	sub    eax,0xe7974bd2
  414bb2:	or     ch,BYTE PTR [edi-0x41ebe4c7]
  414bb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bb9:	and    BYTE PTR [esi+0x5406ffd4],bl
  414bbf:	xchg   DWORD PTR [ecx],ebp
  414bc1:	push   cs
  414bc2:	add    al,0x48
  414bc4:	jl     0x414bc0
  414bc6:	xchg   esi,eax
  414bc7:	rol    DWORD PTR [ebp-0x41],1
  414bca:	or     eax,0x9cf4b336
  414bcf:	in     al,dx
  414bd0:	sbb    eax,0x249438e8
  414bd5:	outs   dx,BYTE PTR ds:[esi]
  414bd6:	fild   WORD PTR [ebx+0x40]
  414bda:	xor    BYTE PTR [eax+0x48a351a9],0xd9
  414be1:	(bad)  
  414be2:	stc    
  414be3:	pop    ss
  414be4:	push   eax
  414be5:	fneni(8087 only) 
  414be7:	mov    ebp,0xcc54f4f3
  414bec:	xchg   DWORD PTR [edi+0x5be6eb04],ebp
  414bf2:	xor    BYTE PTR [edi+ebx*4+0x42],ch
  414bf6:	ror    ebp,cl
  414bf8:	iret   
  414bf9:	xchg   esp,eax
  414bfa:	popf   
  414bfb:	idiv   DWORD PTR [edi-0x6c873310]
  414c01:	adc    ch,al
  414c03:	(bad)  
  414c05:	inc    eax
  414c06:	mov    cl,0xc3
  414c08:	xor    BYTE PTR [edi+0x28c53018],al
  414c0e:	in     al,dx
  414c0f:	xor    eax,0x59342f42
  414c14:	popa   
  414c15:	(bad)  [ebp+0x39]
  414c18:	in     al,dx
  414c19:	and    ebx,DWORD PTR [ebx-0xd]
  414c1c:	jp     0x414c2e
  414c1e:	test   eax,0x346c4339
  414c23:	cmp    BYTE PTR [edx],ch
  414c25:	mov    esi,0x402ee291
  414c2a:	(bad)  
  414c2b:	pop    eax
  414c2c:	jle    0x414c71
  414c2e:	call   0x5166ff80
  414c33:	(bad)  
  414c35:	inc    ebp
  414c36:	mov    gs,WORD PTR [ebp-0x22]
  414c39:	push   0x3eeb9bae
  414c3e:	add    ebx,DWORD PTR [ebx+ebx*4]
  414c41:	jbe    0x414c8d
  414c43:	ja     0x414c4f
  414c45:	push   es
  414c46:	pop    esi
  414c47:	ds dec edi
  414c49:	nop    DWORD PTR [eax]
  414c4c:	jo     0x414cc6
  414c4e:	lods   eax,DWORD PTR ds:[esi]
  414c4f:	ss jle 0x414bf8
  414c52:	int3   
  414c53:	cdq    
  414c54:	(bad)  
  414c55:	out    dx,eax
  414c56:	mov    edi,0x7b1e9a9a
  414c5b:	enter  0xdb7d,0x9b
  414c5f:	jnp    0x414c94
  414c61:	test   al,0x7b
  414c63:	stc    
  414c64:	lahf   
  414c65:	stos   BYTE PTR es:[edi],al
  414c66:	add    cl,BYTE PTR [esi+0xf]
  414c69:	test   al,0xc9
  414c6b:	push   0xc4b762e7
  414c70:	adc    ah,ah
  414c72:	xlat   BYTE PTR ds:[ebx]
  414c73:	sub    eax,0xe563423c
  414c78:	mov    dl,0xd0
  414c7a:	mov    esp,DWORD PTR cs:[esi]
  414c7d:	retf   
  414c7e:	pop    ebp
  414c7f:	(bad)  
  414c81:	mov    esi,0x21a0e301
  414c86:	scas   eax,DWORD PTR es:[edi]
  414c87:	cli    
  414c88:	jmp    0x3dd6b4f6
  414c8d:	loopne 0x414c65
  414c8f:	sti    
  414c90:	cmp    ecx,0xffffffb9
  414c93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c94:	jo     0x414c66
  414c96:	popa   
  414c97:	mov    dh,ch
  414c99:	add    esi,edi
  414c9b:	cwde   
  414c9c:	call   0x54213c5c
  414ca1:	popf   
  414ca2:	jl     0x414cd3
  414ca4:	(bad)  
  414ca5:	pop    ss
  414ca6:	xor    al,0x2d
  414ca8:	scas   eax,DWORD PTR es:[edi]
  414ca9:	(bad)  
  414caa:	arpl   WORD PTR [ebp+0x7e6011f6],bp
  414cb0:	jae    0x414c4f
  414cb2:	sbb    esi,ebx
  414cb4:	add    al,0x6
  414cb6:	dec    edx
  414cb7:	sub    DWORD PTR ds:[di+0x78],ecx
  414cbc:	hlt    
  414cbd:	push   0x9
  414cbf:	out    dx,al
  414cc0:	mov    ch,0xf2
  414cc2:	ds adc eax,0xdf2c4c39
  414cc8:	and    DWORD PTR [ebx+0x33],esp
  414ccb:	scas   eax,DWORD PTR es:[edi]
  414ccc:	les    ebx,FWORD PTR [ebp+0x7633ca33]
  414cd2:	cmp    eax,0xd9746728
  414cd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cd8:	fdiv   st,st(2)
  414cda:	cmc    
  414cdb:	pop    eax
  414cdc:	das    
  414cdd:	test   DWORD PTR [eax+0x5ab8f822],ecx
  414ce3:	xor    BYTE PTR [esi],0x45
  414ce6:	stos   DWORD PTR es:[edi],eax
  414ce7:	mov    ebx,0x9d4030d7
  414cec:	pop    es
  414ced:	or     ecx,DWORD PTR [ebx]
  414cef:	cmp    eax,0xf65a6cc2
  414cf4:	sti    
  414cf5:	dec    edi
  414cf6:	pop    esi
  414cf7:	cmp    ebx,ecx
  414cf9:	fiadd  DWORD PTR [esi+0x29]
  414cfc:	mov    esi,0xb2a8b05f
  414d01:	sahf   
  414d02:	(bad)  
  414d03:	fcom   DWORD PTR [esi-0x32bbb0b5]
  414d09:	jo     0x414cd0
  414d0b:	push   ebp
  414d0c:	mov    edx,0xb4599fec
  414d11:	xchg   esp,eax
  414d12:	mov    ch,0x4d
  414d14:	mov    bl,0x2f
  414d16:	jo     0x414d52
  414d18:	inc    esp
  414d19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d1a:	mov    esi,DWORD PTR [edx+ecx*2]
  414d1d:	call   0x980e:0xcafe3b3f
  414d24:	and    esi,DWORD PTR [ebp+eiz*2+0x4]
  414d28:	outs   dx,DWORD PTR ds:[esi]
  414d29:	popa   
  414d2a:	je     0x414cf0
  414d2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d2d:	inc    eax
  414d2e:	inc    edx
  414d2f:	imul   ecx,DWORD PTR [ecx+0x34],0x6336756c
  414d36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d37:	xor    ecx,DWORD PTR [edx-0x6c]
  414d3a:	mov    edi,0x442fbe22
  414d3f:	aad    0x7a
  414d41:	cmp    BYTE PTR [edx*1-0x65a13db9],bl
  414d48:	or     eax,0x6ed7900b
  414d4d:	sub    eax,DWORD PTR [edx+0x26]
  414d50:	or     ah,BYTE PTR [ebx]
  414d52:	lahf   
  414d53:	xchg   esi,eax
  414d54:	test   al,0xe7
  414d56:	jecxz  0x414ce1
  414d58:	ret    
  414d59:	fisub  DWORD PTR [ebx+edi*2+0x5]
  414d5d:	add    eax,0xbf1301c4
  414d62:	pop    ebx
  414d63:	out    0x44,al
  414d65:	pop    edx
  414d66:	add    esp,DWORD PTR [ebx+0x7e6a1db7]
  414d6c:	retf   0x1eee
  414d6f:	test   BYTE PTR [edx+0x24980db1],bl
  414d75:	sub    BYTE PTR [ecx+0x65bfb96d],0xba
  414d7c:	cli    
  414d7d:	call   0x65db9322
  414d82:	mov    WORD PTR [eax-0x71],ss
  414d85:	mov    cl,0xbe
  414d87:	imul   ebp,DWORD PTR [ebp-0x6862ec6f],0xffffffdd
  414d8e:	idiv   DWORD PTR [ebp+0x4f]
  414d91:	jno    0x414dd7
  414d93:	and    eax,0x40b04cbc
  414d98:	pusha  
  414d99:	adc    BYTE PTR [ecx+0x1d],ch
  414d9c:	xor    al,0x61
  414d9e:	pop    ebp
  414d9f:	add    al,0x85
  414da1:	fstp   QWORD PTR [ecx-0x4b]
  414da4:	mov    ah,0x7d
  414da6:	add    dh,BYTE PTR [ebx-0x4f]
  414da9:	mov    dl,0xd7
  414dab:	lahf   
  414dac:	mov    ecx,0x19d935aa
  414db1:	in     eax,dx
  414db2:	scas   eax,DWORD PTR es:[edi]
  414db3:	leave  
  414db4:	jmp    0xec87:0x6e34861d
  414dbb:	pushf  
  414dbc:	or     al,0xed
  414dbe:	hlt    
  414dbf:	(bad)  
  414dc0:	retf   
  414dc1:	mov    ecx,0x727e430d
  414dc6:	pusha  
  414dc7:	pop    ebx
  414dc8:	lock or al,0x13
  414dcb:	xor    DWORD PTR [ecx],ecx
  414dcd:	or     eax,ebx
  414dcf:	inc    edx
  414dd0:	imul   ebx,DWORD PTR [edi],0x1d123766
  414dd6:	jl     0x414de4
  414dd8:	pop    DWORD PTR [edx+eax*4]
  414ddb:	bound  eax,QWORD PTR [ebx]
  414ddd:	and    DWORD PTR [edi+0x2d],edi
  414de0:	or     eax,0x9f6a7e2a
  414de5:	xchg   esi,eax
  414de6:	adc    BYTE PTR [edx+0x3a349e7a],cl
  414dec:	(bad)  
  414ded:	test   BYTE PTR [edx],0x56
  414df0:	mov    esi,0x54859834
  414df5:	int    0xa
  414df7:	aad    0x58
  414df9:	dec    ecx
  414dfa:	push   eax
  414dfb:	jne    0x414e56
  414dfd:	outs   dx,DWORD PTR ds:[esi]
  414dfe:	mov    esp,0x33df5afd
  414e03:	test   ebx,ebp
  414e05:	lds    edx,FWORD PTR [ebp-0x47]
  414e08:	mov    ecx,0x87ca7e24
  414e0d:	or     ebx,DWORD PTR [eax+0x2054b53a]
  414e13:	mov    BYTE PTR [ebp+0x594e8f74],cl
  414e19:	loopne 0x414ddd
  414e1b:	repz imul ebx,ebx,0x1f41108d
  414e22:	sub    ecx,ebx
  414e24:	out    dx,eax
  414e25:	add    al,0x9c
  414e27:	mov    ds:0xd345daf0,al
  414e2c:	jnp    0x414e00
  414e2e:	ja     0x414e84
  414e30:	xor    eax,0x9352d451
  414e35:	adc    BYTE PTR [edi+0x6a77ed19],dl
  414e3b:	xor    eax,0x53de80cd
  414e40:	mov    esp,0x90156309
  414e45:	lds    ecx,FWORD PTR [edx]
  414e47:	sbb    ax,0x96cb
  414e4b:	dec    edx
  414e4c:	dec    ebx
  414e4d:	clc    
  414e4e:	test   BYTE PTR [eax+0x66d8f481],al
  414e54:	dec    ecx
  414e55:	cli    
  414e56:	call   FWORD PTR [ebx]
  414e58:	sbb    BYTE PTR ss:[ebp+0xa],dl
  414e5c:	dec    esp
  414e5d:	leave  
  414e5e:	xor    DWORD PTR [esi+0x74a6344c],edx
  414e64:	fbstp  TBYTE PTR [eax-0x6f65171]
  414e6a:	lods   eax,DWORD PTR ds:[esi]
  414e6b:	test   BYTE PTR [edx+0x28c69d15],al
  414e71:	cvttps2pi mm3,QWORD PTR [edx-0x5da56b18]
  414e78:	xor    al,bh
  414e7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e7b:	sbb    BYTE PTR [edi+0x6ac20b28],0xc5
  414e82:	popf   
  414e83:	sbb    cl,bl
  414e85:	out    0x41,eax
  414e87:	in     al,dx
  414e88:	push   esp
  414e89:	dec    edi
  414e8a:	das    
  414e8b:	jb     0x414e2d
  414e8d:	pop    edi
  414e8e:	test   al,0xb0
  414e90:	not    BYTE PTR [edi]
  414e92:	sbb    eax,0x322a1ecf
  414e97:	mov    ds:0xe94d2072,al
  414e9c:	test   al,0x17
  414e9e:	sub    BYTE PTR [esi+0x6b],0xa7
  414ea2:	fs jmp 0x414ee5
  414ea5:	call   0xb500:0x2706c6e6
  414eac:	and    eax,0xbba150ad
  414eb1:	adc    DWORD PTR [eax+0x1c457590],edi
  414eb7:	aam    0xe4
  414eb9:	int    0x1f
  414ebb:	out    0x25,eax
  414ebd:	sub    eax,0xac4933f3
  414ec2:	test   cl,ch
  414ec4:	push   0x83cd9967
  414ec9:	rol    BYTE PTR [ebp+0x6d],cl
  414ecc:	ror    cl,0xfb
  414ecf:	pop    eax
  414ed0:	or     esp,edx
  414ed2:	je     0x414e9f
  414ed4:	aas    
  414ed5:	in     eax,0xd7
  414ed7:	ss push cs
  414ed9:	mov    al,ds:0xe0589e5
  414ede:	push   ss
  414edf:	mov    fs,WORD PTR [ecx-0x9e5260c]
  414ee5:	and    al,0x20
  414ee7:	pop    esp
  414ee8:	dec    edx
  414ee9:	cli    
  414eea:	mov    esp,0x88cc4018
  414eef:	mov    dh,BYTE PTR [ecx-0x50091fc2]
  414ef5:	ins    DWORD PTR es:[edi],dx
  414ef6:	popf   
  414ef7:	push   cs
  414ef8:	sar    BYTE PTR [ebp-0x4],0x32
  414efc:	xchg   BYTE PTR [eax-0x10a3947e],cl
  414f02:	inc    eax
  414f03:	out    0xf8,al
  414f05:	iret   
  414f06:	jo     0x414eeb
  414f08:	mov    edi,0xa02f91ba
  414f0d:	cmp    BYTE PTR [edx-0x66bb6fd5],bl
  414f13:	call   0x43eb:0x714a17a9
  414f1a:	inc    DWORD PTR [edi-0x422df8df]
  414f20:	add    al,0x51
  414f22:	std    
  414f23:	leave  
  414f24:	rol    BYTE PTR [ecx],cl
  414f26:	fidivr DWORD PTR [eax+0x6ba91d9c]
  414f2c:	cmp    eax,0x725ba8ef
  414f31:	loopne 0x414f07
  414f33:	fnstenv [ecx+edi*2-0x6b]
  414f37:	into   
  414f38:	mov    al,0xbd
  414f3a:	mov    ch,0x99
  414f3c:	push   esp
  414f3d:	sub    bl,BYTE PTR [eax+0x2d]
  414f40:	mov    edi,0x2db656a5
  414f45:	out    dx,eax
  414f46:	mov    DWORD PTR [edi-0x753dae1a],ebx
  414f4c:	adc    BYTE PTR [ebp+0x29a615cd],0x98
  414f53:	add    eax,0x3f188ca
  414f58:	mov    ds:0x92f39be3,eax
  414f5d:	dec    eax
  414f5e:	pop    esi
  414f5f:	dec    DWORD PTR [edi]
  414f61:	iret   
  414f62:	out    dx,al
  414f63:	push   ebx
  414f64:	ins    DWORD PTR es:[edi],dx
  414f65:	jecxz  0x414f2f
  414f67:	shr    edx,cl
  414f69:	out    0x6b,eax
  414f6b:	pop    edx
  414f6c:	mov    ds:0x9fc4d02,al
  414f71:	leave  
  414f72:	xor    al,BYTE PTR [esi]
  414f74:	or     BYTE PTR [ebx+0x530e9b59],ah
  414f7a:	xchg   BYTE PTR [edx+0x6b58695d],al
  414f80:	mov    al,ds:0xfcef01b6
  414f85:	lea    ebp,[edx+0x1d]
  414f88:	jne    0x414f62
  414f8a:	mov    ebp,0xa6dcf24a
  414f8f:	loop   0x414f92
  414f91:	popf   
  414f92:	jecxz  0x414fe1
  414f94:	paddusw mm7,QWORD PTR [ecx+0x95d5f91]
  414f9b:	or     DWORD PTR [ebp-0x1e2b7bed],edi
  414fa1:	mov    eax,0xcf160c5f
  414fa6:	xor    BYTE PTR [ecx+0x72],bh
  414fa9:	nop
  414faa:	jge    0x414f37
  414fac:	lea    esp,[ecx*2+0x6f29375]
  414fb3:	sub    DWORD PTR [edi],ecx
  414fb5:	gs addr16 mov eax,0xede2c6df
  414fbc:	sub    esi,esp
  414fbe:	pop    ebp
  414fbf:	mov    al,0x1a
  414fc1:	cmc    
  414fc2:	xchg   ebx,eax
  414fc3:	in     al,dx
  414fc4:	inc    ecx
  414fc5:	pop    ebx
  414fc6:	adc    ebp,edx
  414fc8:	push   edi
  414fc9:	add    esp,DWORD PTR [edx+0x12e3c33e]
  414fcf:	jecxz  0x415032
  414fd1:	(bad)  
  414fd2:	sub    eax,0x3d415604
  414fd7:	test   DWORD PTR [esi],esp
  414fd9:	xchg   ebp,eax
  414fda:	ss mov edx,0x1cc2d9cb
  414fe0:	adc    ecx,DWORD PTR [ebx+0x67c6f8f4]
  414fe6:	nop
  414fe7:	xor    al,0x71
  414fe9:	arpl   WORD PTR [edx],ax
  414feb:	push   es
  414fec:	out    0x3c,al
  414fee:	or     DWORD PTR [ecx+0x27],esp
  414ff1:	mov    ebp,0xac2f0693
  414ff6:	in     eax,dx
  414ff7:	mov    BYTE PTR [bx+di-0x30],ch
  414ffb:	xchg   ebp,eax
  414ffc:	sbb    DWORD PTR [ecx-0x64295e06],0x7b25c19a
  415006:	arpl   WORD PTR [edi+0x7adb2615],ax
  41500c:	cmp    bl,BYTE PTR [esi+0x76]
  41500f:	mov    al,cs:0x2d31a471
  415015:	leave  
  415016:	sti    
  415017:	sbb    DWORD PTR [ecx+0x3e8da516],ebp
  41501d:	sbb    eax,0xf2c92b30
  415022:	ret    0x4d52
  415025:	inc    esp
  415026:	jns    0x415011
  415028:	test   BYTE PTR [edi],dl
  41502a:	xchg   ebp,eax
  41502b:	into   
  41502c:	sbb    BYTE PTR [edx-0x7ff5d287],cl
  415032:	adc    BYTE PTR [ecx+edi*8-0x5d44bdee],ch
  415039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41503a:	daa    
  41503b:	xchg   BYTE PTR [ebx+0x4],dh
  41503e:	lds    esi,FWORD PTR [ebx]
  415040:	xor    cl,BYTE PTR [ebp-0x52]
  415043:	clc    
  415044:	dec    ecx
  415045:	jno    0x415088
  415047:	shr    cl,0x20
  41504a:	repz inc edi
  41504c:	sub    al,0x37
  41504e:	mov    cl,0xec
  415050:	add    al,0x3c
  415052:	pop    ss
  415053:	int    0x95
  415055:	xchg   BYTE PTR [ebx+eiz*1-0x6e],bh
  415059:	sbb    dl,BYTE PTR [esi]
  41505b:	or     BYTE PTR [ebp-0x29],0x7c
  41505f:	inc    edx
  415060:	adc    BYTE PTR [eax+0x27575570],al
  415066:	(bad)  [esi+edx*2-0x65391b84]
  41506d:	scas   eax,DWORD PTR es:[edi]
  41506e:	add    BYTE PTR [edx-0x1c],dh
  415071:	fnstenv [esi+0xb38b6a4]
  415077:	xor    edi,DWORD PTR [ebx+edi*8+0x36]
  41507b:	aad    0x1
  41507d:	xchg   DWORD PTR [edi+ecx*4-0x375d0529],ebx
  415084:	xor    ecx,esp
  415086:	xchg   esi,eax
  415087:	mov    WORD PTR [edx-0x24],ds
  41508a:	or     eax,DWORD PTR ds:0xb79dac1c
  415090:	neg    BYTE PTR fs:[esi-0x2d20e4f0]
  415097:	pop    edi
  415098:	(bad)  
  415099:	sub    dh,al
  41509b:	sbb    ch,BYTE PTR [edi+esi*1+0xf729e93]
  4150a2:	(bad)  
  4150a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150a4:	pop    ds
  4150a5:	mov    al,ds:0xfc69f86b
  4150aa:	dec    ebx
  4150ab:	lods   al,BYTE PTR ds:[esi]
  4150ac:	neg    edi
  4150ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150af:	cmp    dl,BYTE PTR [edi-0x6c]
  4150b2:	sub    al,0x69
  4150b4:	lahf   
  4150b5:	enter  0xe96,0xb1
  4150b9:	(bad)  
  4150ba:	iret   
  4150bb:	jl     0x4150f2
  4150bd:	sar    BYTE PTR [edx-0x70],0xc
  4150c1:	jl     0x41512c
  4150c3:	push   ds
  4150c4:	add    al,0x8c
  4150c6:	shl    DWORD PTR [eax+0x54cbf505],cl
  4150cc:	loop   0x415130
  4150ce:	pop    ebx
  4150cf:	mov    sp,0x8843
  4150d3:	test   al,0x1b
  4150d5:	push   edi
  4150d6:	arpl   WORD PTR fs:[ebx+0x61],dx
  4150da:	das    
  4150db:	cmp    al,0xca
  4150dd:	lds    edi,FWORD PTR [eax+0x185b27a6]
  4150e3:	ds cmp al,0x58
  4150e6:	int    0x45
  4150e8:	jno    0x415109
  4150ea:	pop    ss
  4150eb:	pushf  
  4150ec:	mov    dl,0x3f
  4150ee:	fwait
  4150ef:	retf   
  4150f0:	(bad)  
  4150f2:	dec    edi
  4150f3:	shl    BYTE PTR [eax-0x18],0xde
  4150f7:	lahf   
  4150f8:	mov    ah,0x0
  4150fa:	inc    ecx
  4150fb:	gs dec ebp
  4150fd:	sbb    eax,0xd94ab105
  415102:	mov    al,0xcb
  415104:	cmc    
  415105:	jle    0x415117
  415107:	jne    0x4150f8
  415109:	fcomp  st(3)
  41510b:	out    dx,eax
  41510c:	rcl    DWORD PTR [edx+0x24b61c1b],1
  415112:	inc    ebp
  415113:	das    
  415114:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415115:	inc    ebp
  415116:	out    0xf4,eax
  415118:	mov    eax,0xaafb7044
  41511d:	or     edx,DWORD PTR [edx]
  41511f:	addr16 mov cl,0x68
  415122:	cld    
  415123:	fimul  DWORD PTR [eax-0x1d]
  415126:	repz xor cl,BYTE PTR [ebp-0x61]
  41512a:	out    0x84,al
  41512c:	je     0x415158
  41512e:	jbe    0x41518e
  415130:	fs clc 
  415132:	imul   edx,DWORD PTR [eax],0xfffffffc
  415135:	mov    ah,0x52
  415137:	jl     0x41519c
  415139:	fcmovne st,st(1)
  41513b:	arpl   WORD PTR [edx+0x73],cx
  41513e:	adc    bl,ah
  415140:	dec    esi
  415141:	jge    0x415155
  415143:	pop    ecx
  415144:	sub    esi,DWORD PTR [esp+eiz*4-0x760548e9]
  41514b:	mov    ebx,0x633fa82d
  415150:	mov    al,ds:0x119684bd
  415155:	mov    ecx,0x57339a1c
  41515a:	xchg   edx,eax
  41515b:	push   esp
  41515c:	cmc    
  41515d:	fwait
  41515e:	pop    esi
  41515f:	jae    0x41512e
  415161:	fwait
  415162:	nop
  415163:	sub    dh,BYTE PTR [ecx-0x6a36fa36]
  415169:	mov    cl,0x54
  41516b:	(bad)  
  41516c:	in     al,dx
  41516d:	aaa    
  41516e:	jno    0x415135
  415170:	dec    edx
  415171:	mov    esp,0x1f54ad16
  415176:	and    cl,BYTE PTR [eax+esi*2+0x7e]
  41517a:	inc    BYTE PTR [edx+eiz*2-0x45]
  41517e:	cmp    dl,bl
  415180:	xor    bh,BYTE PTR [ecx]
  415182:	mov    ebx,0x66fedaf7
  415187:	mov    dl,0xf7
  415189:	bound  ecx,QWORD PTR [ebp-0x7b]
  41518c:	xlat   BYTE PTR ds:[ebx]
  41518d:	addr16 jbe 0x415201
  415190:	cmp    DWORD PTR [eax],ebp
  415192:	fidiv  DWORD PTR [edi]
  415194:	cmp    bh,BYTE PTR [edi-0x4e]
  415197:	cmp    eax,0xcace1be3
  41519c:	pusha  
  41519d:	adc    BYTE PTR [edx],ch
  41519f:	fs mov esi,ss
  4151a2:	mov    dl,ah
  4151a4:	adc    al,0xbb
  4151a6:	and    BYTE PTR [edx+0x2b],bl
  4151a9:	xchg   esi,eax
  4151aa:	ret    
  4151ab:	addr16 mov dl,0xb1
  4151ae:	test   DWORD PTR [edi+0x367b4b2d],0xb69cd36d
  4151b8:	(bad)  
  4151b9:	mov    ebx,0x642088fe
  4151be:	test   BYTE PTR [eax-0x6b],al
  4151c1:	sub    esi,DWORD PTR [ecx-0x2be4600c]
  4151c7:	outs   dx,DWORD PTR ds:[esi]
  4151c8:	out    dx,al
  4151c9:	(bad)  
  4151ca:	mov    bh,0xc
  4151cc:	pop    ss
  4151cd:	jle    0x415164
  4151cf:	push   ebx
  4151d0:	ficom  DWORD PTR [ecx-0x560f6271]
  4151d6:	aad    0xda
  4151d8:	sar    BYTE PTR [edi+0x7421e7fb],0x21
  4151df:	loopne 0x415239
  4151e1:	inc    esi
  4151e2:	pop    ds
  4151e3:	cs rcr ch,cl
  4151e6:	sub    cl,BYTE PTR [edi+eax*1+0x57]
  4151ea:	repnz sub bl,BYTE PTR [ebx+eiz*1+0x67]
  4151ef:	inc    ecx
  4151f0:	sbb    esp,DWORD PTR [edx+edx*4]
  4151f3:	jo     0x415220
  4151f5:	or     DWORD PTR ds:0x94ebe011,ebx
  4151fb:	xchg   ebx,eax
  4151fc:	cdq    
  4151fd:	ins    WORD PTR es:[edi],dx
  4151ff:	jbe    0x415277
  415201:	imul   edi,DWORD PTR [ecx],0xfe4cb5c3
  415207:	pop    ebx
  415208:	rol    DWORD PTR [esi],cl
  41520a:	push   cs
  41520b:	aam    0xe3
  41520d:	or     al,0x52
  41520f:	gs jne 0x415272
  415212:	aas    
  415213:	pop    esp
  415214:	jae    0x4151e6
  415216:	fmul   DWORD PTR [edi+eax*1+0x4a9e5801]
  41521d:	mov    eax,0x5aee3500
  415222:	dec    eax
  415223:	and    ah,bh
  415225:	and    cl,BYTE PTR [esi]
  415227:	std    
  415228:	mov    ?,WORD PTR [ebp-0x12e42023]
  41522e:	push   ds
  41522f:	adc    al,0x1c
  415231:	in     al,0xeb
  415233:	jecxz  0x41528c
  415235:	inc    eax
  415236:	fwait
  415237:	xor    al,0x49
  415239:	retf   0x42c1
  41523c:	xchg   BYTE PTR [edi-0x1c1bd179],dl
  415242:	lea    esi,[ebx]
  415244:	cmp    DWORD PTR [ebp+esi*2+0x2ac3a6f7],eax
  41524b:	cmp    DWORD PTR [edx-0x44aa4f72],ebp
  415251:	(bad)  
  415253:	movq   QWORD PTR [ebx+0x4f],mm5
  415257:	push   ecx
  415258:	mov    dh,0x8
  41525a:	push   edx
  41525b:	mov    bh,0xc8
  41525d:	pop    ebp
  41525e:	jge    0x415217
  415260:	dec    eax
  415261:	ret    0xf482
  415264:	loope  0x41522a
  415266:	pop    ss
  415267:	or     al,0x5a
  415269:	jmp    0x4152b0
  41526b:	arpl   WORD PTR fs:[ecx],ax
  41526e:	push   es
  41526f:	scas   al,BYTE PTR es:[edi]
  415270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415271:	pop    ebx
  415272:	cmc    
  415273:	in     eax,0x73
  415275:	xor    BYTE PTR [ecx],0x7f
  415278:	mov    ?,ecx
  41527a:	dec    ebx
  41527b:	adc    BYTE PTR [esi],dl
  41527d:	and    eax,0xedbb9741
  415282:	pop    ebp
  415283:	dec    ebx
  415284:	add    bl,BYTE PTR [ecx]
  415286:	pop    ebx
  415287:	adc    bl,BYTE PTR [ebp+0x33]
  41528a:	or     BYTE PTR [edx-0x1a],0xf9
  41528e:	fwait
  41528f:	adc    dh,BYTE PTR [eax-0x1e]
  415292:	hlt    
  415293:	mov    ecx,0x84817c27
  415298:	(bad)  
  415299:	mov    edx,0x5bf5ee6b
  41529e:	mov    dl,0xe4
  4152a0:	jnp    0x4152ea
  4152a2:	add    dl,BYTE PTR [ecx]
  4152a4:	xor    ah,BYTE PTR [edi]
  4152a6:	rcr    BYTE PTR [eax+0x4429b814],0x88
  4152ad:	and    al,cl
  4152af:	ror    DWORD PTR [ecx],0x5f
  4152b2:	ror    DWORD PTR [ecx-0x19255822],0x68
  4152b9:	mov    edi,0xc2e641bf
  4152be:	push   es
  4152bf:	sub    ebx,0x3a12c12c
  4152c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152c6:	pop    esi
  4152c7:	and    eax,0xb0f9c3c1
  4152cc:	pop    es
  4152cd:	cmp    eax,0x114374e5
  4152d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152d3:	(bad)  [eax]
  4152d5:	cmp    ebp,DWORD PTR [ebp-0x50]
  4152d8:	sub    edx,eax
  4152da:	inc    ebp
  4152db:	retf   
  4152dc:	mov    gs,WORD PTR [edi+eiz*8-0x35]
  4152e0:	or     BYTE PTR [edi],dh
  4152e2:	clc    
  4152e3:	rcr    BYTE PTR [esi+0x61c918ae],cl
  4152e9:	mov    al,0xc4
  4152eb:	daa    
  4152ec:	jecxz  0x415310
  4152ee:	(bad)  
  4152ef:	sbb    eax,0xca96a69e
  4152f4:	xor    eax,0xaa6ac312
  4152f9:	imul   ebp,DWORD PTR [ecx+0x6b],0x60
  4152fd:	loopne 0x41536f
  4152ff:	stc    
  415300:	jae    0x41532c
  415302:	mov    bh,0x81
  415304:	sub    eax,0xfd6aeb6a
  415309:	push   0xffffff82
  41530b:	sub    bl,ah
  41530d:	jb     0x41533b
  41530f:	sbb    DWORD PTR [edi-0x4edeb9fc],ecx
  415315:	lea    ecx,[ecx+0x19475604]
  41531b:	dec    esi
  41531c:	mov    edi,ebx
  41531e:	mov    eax,0x79a395d0
  415323:	fadd   QWORD PTR [edi-0x7a]
  415326:	stc    
  415327:	arpl   WORD PTR [ecx-0x3fbe007],sp
  41532d:	es dec eax
  41532f:	push   eax
  415330:	int    0xd8
  415332:	int    0x7b
  415334:	push   ds
  415335:	jae    0x415360
  415337:	dec    ebp
  415338:	or     al,0x8e
  41533a:	fisttp DWORD PTR es:[ebx+0x56]
  41533e:	jo     0x415398
  415340:	lods   eax,DWORD PTR ds:[esi]
  415341:	bound  edx,QWORD PTR [edx]
  415343:	or     BYTE PTR [ecx-0x25],ah
  415346:	push   es
  415347:	sub    BYTE PTR [edx+0x24145465],bh
  41534d:	shr    BYTE PTR [edx],cl
  41534f:	(bad)  
  415351:	dec    eax
  415352:	dec    ebp
  415353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415354:	inc    esp
  415355:	(bad)  
  415356:	cmp    esi,edx
  415358:	popf   
  415359:	pop    edi
  41535a:	fnsave [edi+0x73]
  41535d:	xchg   esi,eax
  41535e:	je     0x41539b
  415360:	ins    BYTE PTR es:[edi],dx
  415361:	push   es
  415362:	cmc    
  415363:	addr16 mov esi,0xa6202eb2
  415369:	xchg   edx,eax
  41536a:	pushf  
  41536b:	sub    eax,0x582808aa
  415370:	xchg   edi,eax
  415371:	test   eax,0x1871c1cb
  415376:	int    0x5a
  415378:	pop    ss
  415379:	cmp    ebp,esp
  41537b:	xchg   ebp,eax
  41537c:	xor    BYTE PTR [eax+0x1d64b71f],cl
  415382:	imul   esi,DWORD PTR [edx+0x2],0x430041e1
  415389:	lahf   
  41538a:	push   ecx
  41538b:	pop    es
  41538c:	and    bl,BYTE PTR [edx+edx*8+0x1dbdf14e]
  415393:	stc    
  415394:	dec    ebp
  415395:	(bad)  
  415396:	cmp    DWORD PTR [ecx+0x47],ecx
  415399:	pop    edi
  41539a:	xor    ah,al
  41539c:	into   
  41539d:	mov    edi,0x18912dbb
  4153a2:	adc    eax,0x211c632
  4153a8:	and    esi,eax
  4153aa:	jl     0x415357
  4153ac:	mov    ecx,0x6c669c2f
  4153b1:	or     ch,cl
  4153b3:	mov    eax,0x46ad9840
  4153b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153b9:	cmp    BYTE PTR [eax],ah
  4153bb:	adc    ebx,DWORD PTR [edi-0x248695a6]
  4153c1:	or     bh,dl
  4153c3:	dec    ebx
  4153c4:	(bad)  
  4153c5:	sub    eax,0x3c9477cb
  4153ca:	mov    edx,0x228f668c
  4153cf:	xchg   edx,eax
  4153d0:	out    0x33,eax
  4153d2:	pop    edi
  4153d3:	loopne 0x4153b2
  4153d5:	ror    ecx,1
  4153d7:	mov    dl,BYTE PTR [ecx]
  4153d9:	rcr    ebx,0x85
  4153dc:	pop    ebp
  4153dd:	repz inc eax
  4153df:	pusha  
  4153e0:	sub    dh,dl
  4153e2:	and    al,0x8e
  4153e4:	adc    al,0x7b
  4153e6:	add    bl,BYTE PTR [edx]
  4153e8:	inc    esp
  4153e9:	xchg   ecx,eax
  4153ea:	(bad)  
  4153eb:	cmp    bh,BYTE PTR [ecx+0x1d]
  4153ee:	mov    eax,ds:0x391e4513
  4153f3:	jb     0x4153e0
  4153f5:	imul   edi,DWORD PTR [edi],0x7ead7ffc
  4153fb:	nop
  4153fc:	stc    
  4153fd:	js     0x4153da
  4153ff:	pop    eax
  415400:	xchg   esi,eax
  415402:	fucomip st,st(0)
  415404:	popf   
  415405:	mov    ebp,0x6cdf6fad
  41540a:	mov    ebx,0x68424ab9
  41540f:	pop    ebx
  415410:	and    DWORD PTR [edi],edi
  415412:	push   eax
  415413:	mov    ecx,edx
  415415:	mov    ds:0x1a1b0334,al
  41541a:	jbe    0x415431
  41541c:	xor    al,0x73
  41541e:	lea    edi,[eax]
  415420:	enter  0xe200,0x4a
  415424:	stos   BYTE PTR es:[edi],al
  415425:	push   eax
  415426:	es stc 
  415428:	sub    BYTE PTR [ebp-0x3c9e3037],0x7
  41542f:	pop    ebx
  415430:	or     al,0x32
  415432:	rcl    ecx,cl
  415434:	out    0xea,al
  415436:	jmp    0x8ac:0x55cc0e1b
  41543d:	mov    es,WORD PTR [ebx]
  41543f:	clc    
  415440:	jmp    0x42518482
  415445:	xchg   BYTE PTR [ebp-0xc],ch
  415448:	mov    eax,ds:0x9d19f5d3
  41544d:	ret    
  41544e:	inc    edi
  41544f:	fadd   st(1),st
  415451:	and    BYTE PTR [ecx-0x203fb75d],0x3a
  415458:	mov    ecx,0x28beb0c8
  41545d:	dec    ebp
  41545e:	push   edi
  41545f:	hlt    
  415460:	jmp    0x8ffa:0xefeb1e81
  415467:	pop    esi
  415468:	dec    esp
  415469:	mov    ebp,0x9c24c59
  41546e:	adc    cl,cl
  415470:	(bad)  
  415471:	rol    DWORD PTR [edi+0x6d],cl
  415474:	mov    edx,0x168919a6
  415479:	jbe    0x4154f7
  41547b:	es cli 
  41547d:	xor    eax,0x52a9a61d
  415482:	test   BYTE PTR [eax+0x30],0x53
  415486:	push   ds
  415487:	or     BYTE PTR [eax],dl
  415489:	or     eax,DWORD PTR [ebp-0x578a11a1]
  41548f:	clc    
  415490:	stos   WORD PTR es:[edi],ax
  415492:	xor    DWORD PTR [eax+0x3b],ebp
  415495:	jno    0x4154e7
  415497:	ror    DWORD PTR [ebx+0x221f60f4],1
  41549d:	lahf   
  41549e:	xlat   BYTE PTR ds:[ebx]
  41549f:	mov    cl,0x7
  4154a1:	dec    eax
  4154a2:	xchg   ebp,eax
  4154a3:	bound  esp,QWORD PTR [edi+esi*2-0x3a]
  4154a7:	in     eax,0x83
  4154a9:	or     DWORD PTR [ebx],esp
  4154ab:	sahf   
  4154ac:	out    dx,eax
  4154ad:	mov    dh,0xec
  4154af:	xchg   edx,eax
  4154b0:	or     edx,DWORD PTR [ecx+0x5a02b34a]
  4154b6:	push   ds
  4154b7:	shl    ebx,0x36
  4154ba:	out    dx,eax
  4154bb:	call   FWORD PTR [ebx+0x6dc622e3]
  4154c1:	lea    edx,[ebx-0x4f]
  4154c4:	fldcw  WORD PTR gs:[eax-0x216ff607]
  4154cb:	out    0x46,eax
  4154cd:	int    0x23
  4154cf:	sub    edi,DWORD PTR [ebp-0x6c1c2efa]
  4154d5:	mov    bl,0xc
  4154d7:	mov    bl,0x45
  4154d9:	sub    BYTE PTR [eax+0x6064e52f],0x6c
  4154e0:	adc    edx,0xd0b9b919
  4154e6:	push   es
  4154e7:	push   0x61
  4154e9:	and    DWORD PTR [edi+esi*1],ebp
  4154ec:	(bad)  
  4154ed:	lea    eax,[ebx*1-0x473ac039]
  4154f4:	call   0x562f2b99
  4154f9:	fs femms 
  4154fc:	addr16 call 0x12cf:0xb0cd8eb5
  415504:	mov    esp,0x1ef33969
  415509:	jbe    0x415544
  41550b:	mov    bl,0xe2
  41550d:	pop    ss
  41550e:	inc    ebx
  41550f:	imul   eax,DWORD PTR ds:0x78a727ac,0x34
  415516:	xor    DWORD PTR ds:0xda4cef4a,eax
  41551c:	xor    BYTE PTR [ebp+0x596adf60],bl
  415522:	loope  0x415583
  415524:	in     eax,dx
  415525:	push   ebp
  415526:	mov    eax,0x5015dac3
  41552b:	adc    al,0xd8
  41552d:	push   ecx
  41552e:	pusha  
  41552f:	xor    DWORD PTR [ebx],ebp
  415531:	call   0x1d96:0xe7b4fcb5
  415538:	pop    ebp
  415539:	out    dx,al
  41553a:	cmp    ah,al
  41553c:	out    dx,eax
  41553d:	js     0x415549
  41553f:	retf   0x29c2
  415542:	int    0x37
  415544:	fcom   st(1)
  415546:	push   edi
  415547:	mov    edi,0xa685b2f0
  41554c:	repnz dec ecx
  41554e:	mov    bl,0x69
  415550:	hlt    
  415551:	jge    0x4154da
  415553:	repnz (bad) 
  415556:	fdiv   QWORD PTR [edx+0x204136fc]
  41555c:	inc    ecx
  41555d:	sar    BYTE PTR [ebx+0x6],0x38
  415561:	popf   
  415562:	add    eax,0xd5cad752
  415567:	or     dh,ah
  415569:	mov    bh,0x69
  41556b:	lds    edx,FWORD PTR [ebx]
  41556d:	lock ror DWORD PTR [esp+edi*4+0x1802fbc2],cl
  415575:	fsub   DWORD PTR [ebx]
  415577:	fcom   QWORD PTR [edi-0x39]
  41557a:	adc    ah,dl
  41557c:	pop    edi
  41557d:	cmc    
  41557e:	xchg   esi,eax
  41557f:	loope  0x41555e
  415581:	dec    ecx
  415582:	jp     0x41555d
  415584:	or     esi,DWORD PTR [ebx-0x3f]
  415587:	ja     0x4155da
  415589:	cmp    bl,BYTE PTR ds:0x666a5d7e
  41558f:	pushf  
  415590:	in     al,0x48
  415592:	stos   BYTE PTR es:[edi],al
  415593:	sbb    ebx,ebp
  415595:	in     al,dx
  415596:	into   
  415597:	add    BYTE PTR [eax],0x14
  41559a:	fisttp QWORD PTR [ebp-0x60]
  41559d:	pop    es
  41559e:	call   0x1118:0xe50e7ab1
  4155a5:	std    
  4155a6:	sti    
  4155a7:	(bad)  
  4155a8:	mov    bl,0x62
  4155aa:	xor    bh,bh
  4155ac:	or     DWORD PTR [edi],esi
  4155ae:	dec    ecx
  4155af:	repz leave 
  4155b1:	mov    ebx,0xf662b1fb
  4155b6:	or     eax,DWORD PTR [ecx-0x4e]
  4155b9:	adc    dh,al
  4155bb:	(bad)  
  4155bc:	jecxz  0x4155de
  4155be:	pop    ds
  4155bf:	cmp    eax,0xd9fd89c7
  4155c4:	add    BYTE PTR [edx],0x3c
  4155c7:	adc    DWORD PTR [esi],eax
  4155c9:	les    esp,FWORD PTR [ebx]
  4155cb:	mov    ebp,DWORD PTR [edx-0x6]
  4155ce:	ret    0xc69d
  4155d1:	jl     0x41557b
  4155d3:	mov    edi,0x5851e875
  4155d8:	jno    0x4155d1
  4155da:	mov    DWORD PTR ds:0x2d7dd34d,esp
  4155e0:	jg     0x4155f3
  4155e2:	mov    dh,0xe8
  4155e4:	fnstsw WORD PTR [esp+edx*8+0xc]
  4155e8:	push   ebx
  4155e9:	jmp    0xcdd6:0x229a6056
  4155f0:	adc    esi,DWORD PTR [eax]
  4155f2:	sbb    al,0x4b
  4155f4:	pop    es
  4155f5:	cwde   
  4155f6:	xchg   ebp,eax
  4155f7:	repnz pop ss
  4155f9:	mov    ebp,0xb8ce647a
  4155fe:	repnz std 
  415600:	lods   al,BYTE PTR ds:[esi]
  415601:	rcl    al,cl
  415603:	push   ss
  415604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415605:	push   ds
  415606:	rcl    BYTE PTR [edx+eiz*2-0x41b964d6],cl
  41560d:	mov    bh,BYTE PTR [edi+ecx*8+0x46]
  415611:	xor    eax,0xb832484b
  415616:	(bad)  
  415617:	fcmovnu st,st(7)
  415619:	sbb    edi,ebp
  41561b:	cmp    al,0x49
  41561d:	mov    bh,0xa8
  41561f:	inc    ebp
  415620:	imul   edx,DWORD PTR [eax],0x2d
  415623:	pop    edx
  415624:	or     eax,0xd672c87c
  415629:	adc    eax,0x9354a694
  41562e:	dec    esp
  415630:	jbe    0x4155b9
  415632:	outs   dx,DWORD PTR ds:[esi]
  415633:	fwait
  415634:	sbb    al,0x29
  415636:	inc    esi
  415637:	mov    ds:0x4a859c89,al
  41563c:	loopne 0x41562a
  41563e:	pop    ss
  41563f:	retf   0xa2f2
  415642:	cmp    BYTE PTR [ebp-0x53],bl
  415645:	retf   0xe910
  415648:	shr    DWORD PTR [edi],cl
  41564a:	inc    esp
  41564b:	dec    esp
  41564c:	lods   eax,DWORD PTR ds:[esi]
  41564d:	cmp    eax,0x196b6c85
  415652:	add    eax,eax
  415654:	or     BYTE PTR [ebp+0x5b],0xe7
  415658:	jg     0x41569c
  41565a:	xchg   ebx,eax
  41565b:	das    
  41565c:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41565e:	jmp    0x2779:0xf8828488
  415665:	cld    
  415666:	mov    dh,BYTE PTR [ecx+0x4]
  415669:	or     BYTE PTR [eax+0x40],cl
  41566c:	pop    eax
  41566d:	stos   DWORD PTR es:[edi],eax
  41566e:	fdiv   QWORD PTR [ebx-0x417600e5]
  415674:	add    edi,ebp
  415676:	fdiv   st(1),st
  415678:	jp     0x4156d4
  41567a:	ret    
  41567b:	call   0x811fffad
  415680:	and    al,0x22
  415682:	mov    dh,BYTE PTR [esi+esi*2]
  415685:	stos   BYTE PTR es:[edi],al
  415686:	push   0xffffffe7
  415688:	mul    bh
  41568a:	pop    ecx
  41568b:	out    dx,eax
  41568c:	ss mov eax,0x71ca9e94
  415692:	sahf   
  415693:	out    0x54,al
  415695:	jae    0x4156a7
  415697:	inc    ebx
  415698:	mov    BYTE PTR [edi-0x36eea363],ch
  41569e:	or     bh,0x24
  4156a1:	xchg   edi,eax
  4156a2:	pop    esi
  4156a3:	fidiv  WORD PTR [esp+ecx*8]
  4156a6:	dec    esp
  4156a7:	sub    edi,DWORD PTR [ebp+0x73]
  4156aa:	ds pop es
  4156ac:	arpl   WORD PTR [eax-0x6e3a28],sp
  4156b2:	jmp    0xdc87:0xd9f95f91
  4156b9:	jne    0x41567a
  4156bb:	or     bh,BYTE PTR [eax]
  4156bd:	add    al,0x4a
  4156bf:	adc    cl,dh
  4156c1:	push   esp
  4156c2:	addr16 aam 0x45
  4156c5:	pushf  
  4156c6:	xchg   BYTE PTR [eax-0x67303351],bh
  4156cc:	sub    al,0xe4
  4156ce:	or     eax,edx
  4156d0:	add    dh,BYTE PTR fs:[eax-0x11]
  4156d4:	in     al,dx
  4156d5:	int    0x56
  4156d7:	mov    ebx,0x3aad5b74
  4156dc:	adc    ebp,DWORD PTR [ebx+0x5561c4fc]
  4156e2:	div    BYTE PTR [eax]
  4156e4:	cmp    ebp,DWORD PTR [ebx]
  4156e6:	jg     0x415693
  4156e8:	xor    al,0x77
  4156ea:	fwait
  4156eb:	imul   eax,DWORD PTR [eax],0xced17a6
  4156f1:	leave  
  4156f2:	(bad)  
  4156f4:	mov    ss,WORD PTR [edi-0x6]
  4156f7:	sub    al,0x77
  4156f9:	ins    BYTE PTR es:[edi],dx
  4156fa:	push   0x20
  4156fc:	call   FWORD PTR [ebx+eax*1+0x6f]
  415700:	mov    DWORD PTR [esi+ebp*8+0x1ff76d7a],ebp
  415707:	pop    eax
  415708:	pop    ebx
  415709:	xor    cl,BYTE PTR [ecx+0x54e1762a]
  41570f:	push   ecx
  415710:	push   ebp
  415711:	div    DWORD PTR [edx+0xafc9480]
  415717:	inc    esi
  415718:	add    ecx,DWORD PTR [ecx-0x42]
  41571b:	mov    bh,0x76
  41571d:	dec    edi
  41571e:	mov    eax,ds:0x6050ef21
  415723:	mov    bl,0xa2
  415725:	mov    eax,0x7ea7cfb5
  41572a:	jns    0x415715
  41572c:	mov    edx,0xd7502d94
  415731:	xchg   ebx,eax
  415732:	cdq    
  415733:	(bad)  
  415734:	ret    0xdff3
  415737:	xchg   edi,eax
  415738:	xchg   ch,bl
  41573a:	xchg   edi,eax
  41573b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41573c:	adc    BYTE PTR [ebx+0x3997bcc2],ch
  415742:	retf   
  415743:	mov    fs,WORD PTR [ebp-0xa]
  415746:	or     BYTE PTR [edx],bl
  415748:	sbb    eax,0x1d1e0002
  41574d:	xchg   ebp,eax
  41574e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41574f:	adc    ebx,DWORD PTR [ebx+ebp*4]
  415752:	jae    0x41575c
  415754:	cmp    eax,0xa2edd286
  415759:	fyl2xp1 
  41575b:	mov    al,0x66
  41575d:	mov    ds:0x3e9d3f58,eax
  415762:	push   cs
  415763:	inc    esp
  415764:	stos   DWORD PTR es:[edi],eax
  415765:	sbb    al,0x6a
  415767:	call   0x4c2ca0ca
  41576c:	pop    ecx
  41576d:	hlt    
  41576e:	scas   al,BYTE PTR es:[edi]
  41576f:	pop    ebx
  415770:	mov    eax,0x7d677bf9
  415775:	mov    al,ds:0x3bca4a1d
  41577a:	out    dx,al
  41577b:	add    DWORD PTR [ecx],0x76f8262
  415781:	fwait
  415782:	sbb    eax,DWORD PTR [eax+ebp*1]
  415785:	mov    al,0x50
  415787:	mov    ch,0x96
  415789:	and    DWORD PTR [esi+ebx*1],esp
  41578c:	jbe    0x4157dc
  41578e:	or     al,0x1f
  415790:	pop    ds
  415791:	stos   DWORD PTR es:[edi],eax
  415792:	jne    0x415758
  415794:	ret    
  415795:	(bad)  
  415796:	cmp    ecx,DWORD PTR [edi+0x396bc858]
  41579c:	ins    BYTE PTR es:[edi],dx
  41579d:	fwait
  41579e:	out    dx,eax
  41579f:	bound  ecx,QWORD PTR [esi]
  4157a1:	fsubr  st,st(7)
  4157a3:	nop
  4157a4:	inc    esp
  4157a5:	mov    ebx,0xc0b0d99e
  4157aa:	mov    eax,0x70f9be4a
  4157af:	enter  0x6093,0x26
  4157b3:	lock in eax,0x65
  4157b6:	xor    eax,0xc65a09b
  4157bb:	jno    0x415824
  4157bd:	push   0xffffffca
  4157bf:	jmp    ebp
  4157c1:	jmp    0xf3cf:0x15ac64fa
  4157c8:	fcmovnu st,st(5)
  4157ca:	and    DWORD PTR [ecx],ebx
  4157cc:	jno    0x41583f
  4157ce:	mov    ds:0xe57bb079,eax
  4157d3:	sub    BYTE PTR [ebp+0x7e076859],0xfb
  4157da:	pusha  
  4157db:	and    BYTE PTR [ebx+esi*8+0x76174914],bl
  4157e2:	push   edi
  4157e3:	lods   al,BYTE PTR ds:[esi]
  4157e4:	pop    edi
  4157e5:	fiadd  DWORD PTR [edi+0x38]
  4157e8:	jne    0x4157a9
  4157ea:	jmp    0x4157d6
  4157ec:	xchg   esp,eax
  4157ed:	clc    
  4157ee:	stc    
  4157ef:	shl    BYTE PTR [esp+edx*8],cl
  4157f2:	test   eax,0x39689749
  4157f7:	lea    esp,[ecx+0x53842065]
  4157fd:	xchg   esi,eax
  4157fe:	aaa    
  4157ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415800:	(bad)  
  415801:	fistp  DWORD PTR [eax+0x488f30cd]
  415807:	mov    dl,0xe4
  415809:	cmc    
  41580a:	xchg   esp,eax
  41580b:	jmp    0x41582e
  41580d:	push   ebx
  41580e:	cmp    eax,DWORD PTR [esi+eax*8-0x18]
  415812:	adc    eax,0xe34a8a63
  415818:	sub    DWORD PTR [eax+ebx*1-0x28],ebp
  41581c:	adc    cl,BYTE PTR [ecx+0x408175af]
  415822:	stos   DWORD PTR es:[edi],eax
  415823:	mov    edi,0x7a97f998
  415828:	fld    DWORD PTR [edi+0x6196a36]
  41582e:	or     al,0xea
  415830:	adc    ch,al
  415832:	ret    
  415833:	test   eax,0xf6f0993d
  415838:	aaa    
  415839:	cmp    BYTE PTR [esi+0x5dd09d1d],cl
  41583f:	sbb    dl,BYTE PTR [ebp-0x87cfd11]
  415845:	pop    ebp
  415846:	sub    cl,cl
  415848:	popf   
  415849:	mov    ebp,0xe1a3bda9
  41584e:	mov    ecx,DWORD PTR [edi+ebx*2+0x36bf3a94]
  415855:	nop
  415856:	jle    0x415893
  415858:	pop    edi
  415859:	xchg   edx,eax
  41585a:	or     DWORD PTR [esi-0x44],ebx
  41585d:	lea    edx,[edx-0x5c]
  415860:	jge    0x415834
  415862:	dec    eax
  415863:	popf   
  415864:	dec    ecx
  415865:	sub    DWORD PTR [ebx-0x84e1500],esi
  41586b:	xchg   BYTE PTR [edx+0x5ae6ad14],cl
  415871:	dec    eax
  415872:	inc    esp
  415873:	in     eax,0x4d
  415875:	in     al,dx
  415876:	ficomp WORD PTR [edx-0x77]
  415879:	in     al,dx
  41587a:	cdq    
  41587b:	sub    BYTE PTR [eax+0x5364f1d9],ch
  415881:	sbb    BYTE PTR [ebp+0x15],bl
  415884:	cmp    esi,DWORD PTR [esi+0x4cd6e5f8]
  41588a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41588b:	das    
  41588c:	cs mov ebp,0x11ad1c76
  415892:	xor    cl,dl
  415894:	into   
  415895:	clc    
  415896:	push   edx
  415897:	scas   eax,DWORD PTR es:[edi]
  415898:	xor    bl,BYTE PTR [edx]
  41589a:	stos   DWORD PTR es:[edi],eax
  41589b:	xor    eax,DWORD PTR [edx-0x6b]
  41589e:	push   0x62eaf5d8
  4158a3:	jno    0x415836
  4158a5:	mov    dh,BYTE PTR [ebx]
  4158a7:	adc    dh,BYTE PTR [eax]
  4158a9:	push   edx
  4158aa:	mov    edx,DWORD PTR [eax]
  4158ac:	and    bh,BYTE PTR [esi+0x59]
  4158af:	jns    0x4158f8
  4158b1:	push   ecx
  4158b2:	imul   edx,DWORD PTR [edx-0x5c],0x6e4d4f9e
  4158b9:	ret    0x5fac
  4158bc:	sbb    ecx,DWORD PTR [edx]
  4158be:	aaa    
  4158bf:	pop    eax
  4158c0:	popa   
  4158c1:	or     DWORD PTR ds:0x283d777a,edi
  4158c7:	or     al,bl
  4158c9:	in     al,dx
  4158ca:	adc    eax,ebx
  4158cc:	mov    ecx,0x464414f2
  4158d1:	pop    ecx
  4158d2:	jmp    0x66a7338e
  4158d7:	inc    ebx
  4158d8:	dec    ebp
  4158d9:	inc    eax
  4158da:	imul   edi,DWORD PTR [edi+0x2a6eea40],0x445992d1
  4158e4:	push   cs
  4158e5:	scas   eax,DWORD PTR es:[edi]
  4158e6:	mov    DWORD PTR [ebp-0x945f7b6],esi
  4158ec:	push   ss
  4158ed:	pop    edx
  4158ee:	cmp    BYTE PTR [edi+0x405d619d],0x3f
  4158f5:	sub    DWORD PTR [edx-0x5e5d0d56],esi
  4158fb:	xor    ebx,DWORD PTR [edx+0x77]
  4158fe:	cdq    
  4158ff:	clc    
  415900:	jns    0x415961
  415902:	in     eax,dx
  415903:	jno    0x415984
  415905:	in     eax,dx
  415906:	mov    BYTE PTR [ecx+0x4ccd703c],ch
  41590c:	cmp    DWORD PTR [ecx+0x4527432f],0x5c
  415913:	popf   
  415914:	mov    fs,esi
  415916:	xchg   edi,eax
  415917:	jne    0x4158f4
  415919:	sar    DWORD PTR [ebx],cl
  41591b:	sbb    ah,BYTE PTR [ebx]
  41591d:	pop    eax
  41591e:	add    BYTE PTR [edi+0x38],dl
  415921:	cmp    eax,0x176b72c8
  415926:	mov    al,0x75
  415928:	push   ss
  415929:	hlt    
  41592a:	outs   dx,BYTE PTR ds:[esi]
  41592b:	add    cl,BYTE PTR [edi]
  41592d:	in     eax,0xfe
  41592f:	pop    ebx
  415930:	xor    DWORD PTR ss:[esp+edx*1],edi
  415934:	repz push esp
  415936:	dec    ecx
  415937:	mov    edi,0xc6de72c2
  41593c:	ret    0x6da0
  41593f:	shl    DWORD PTR [eax],cl
  415941:	inc    eax
  415942:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415943:	mov    ch,0x88
  415945:	xor    BYTE PTR [ecx+0x2ade69ba],dl
  41594b:	shr    BYTE PTR [edi+0x7095926f],0x1
  415952:	sbb    al,0xa0
  415954:	shl    ecx,1
  415956:	ds pop ss
  415958:	jb     0x415994
  41595a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41595b:	mov    esi,0xbaf55fb0
  415960:	jg     0x415957
  415962:	arpl   sp,sp
  415964:	fwait
  415965:	and    eax,0x8e4b0090
  41596a:	out    0x61,eax
  41596c:	jmp    0x841d2e03
  415971:	add    bl,BYTE PTR [edx+0x7c]
  415974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415975:	fstp   QWORD PTR [esi-0x20]
  415979:	inc    edx
  41597a:	adc    ecx,DWORD PTR [ebx]
  41597c:	out    0xed,eax
  41597e:	jge    0x4159d5
  415980:	push   edi
  415981:	dec    eax
  415982:	out    0x8e,al
  415984:	jmp    0x415938
  415986:	in     al,dx
  415987:	pop    es
  415988:	cmp    ebp,DWORD PTR [edi-0x234ae095]
  41598e:	xor    dl,BYTE PTR [ecx-0x4d9af316]
  415994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415995:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415996:	mov    ds,eax
  415998:	aad    0x4d
  41599a:	cld    
  41599b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41599c:	test   BYTE PTR [ecx-0x3d],0xb4
  4159a0:	into   
  4159a1:	lods   eax,DWORD PTR ds:[esi]
  4159a2:	mov    esi,0xb2171fd8
  4159a7:	loopne 0x4159ca
  4159a9:	add    ebx,ebx
  4159ab:	inc    ecx
  4159ac:	mov    ecx,0xf9e45909
  4159b1:	xor    ebx,DWORD PTR [esi+0x39]
  4159b4:	push   ds
  4159b5:	shl    DWORD PTR [ebx],0x8e
  4159b8:	pop    ebx
  4159b9:	leave  
  4159ba:	mov    al,ds:0x5b9d382b
  4159bf:	inc    ecx
  4159c0:	adc    al,0xbc
  4159c2:	gs cld 
  4159c4:	inc    ebp
  4159c5:	test   DWORD PTR [ecx+eiz*4],edx
  4159c8:	fs sbb eax,0x99e227f9
  4159ce:	fild   QWORD PTR [edx]
  4159d0:	jo     0x4159d1
  4159d2:	cmp    BYTE PTR [edx-0x3c],0x12
  4159d6:	jl     0x415998
  4159d8:	imul   ecx,DWORD PTR [ebp-0x2392c19f],0x6e1145f0
  4159e2:	(bad)
  4159e5:	mov    cl,0xa6
  4159e7:	shr    BYTE PTR [edx],cl
  4159e9:	call   0x5503:0x78f26b3b
  4159f0:	sub    bh,BYTE PTR ds:0x536aa209
  4159f6:	call   0x35fe:0x3b2f2d71
  4159fd:	xchg   ebx,eax
  4159fe:	fsubr  DWORD PTR [edx+eax*2-0x7c]
  415a02:	cmp    bh,cl
  415a04:	ret    0x75ce
  415a07:	push   0xffffffb4
  415a09:	loop   0x4159f9
  415a0b:	das    
  415a0c:	push   ds
  415a0d:	sar    BYTE PTR [edx+0x1cd55338],0x2f
  415a14:	add    dl,BYTE PTR [ebp-0x22]
  415a17:	leave  
  415a18:	mov    dh,0xa7
  415a1a:	and    al,0xeb
  415a1c:	xchg   ebx,eax
  415a1d:	pop    edx
  415a1e:	sbb    BYTE PTR [ebx+eiz*8-0x1bf2a1dc],bl
  415a25:	shr    DWORD PTR gs:[eax+0x29],0x4d
  415a2a:	push   es
  415a2b:	sbb    al,0xe2
  415a2d:	or     al,0x3d
  415a2f:	scas   eax,DWORD PTR es:[edi]
  415a30:	jne    0x4159fa
  415a32:	mov    ebx,0x74a570e3
  415a37:	popf   
  415a38:	and    ebp,0xffffffa2
  415a3b:	leave  
  415a3c:	(bad)  
  415a3e:	or     ebp,DWORD PTR [eax]
  415a40:	lea    eax,gs:[ebp+0x5d]
  415a44:	mov    esi,0xdcfde6a
  415a49:	call   0x9737:0xdd0330de
  415a50:	in     eax,dx
  415a51:	sbb    BYTE PTR [esi],bl
  415a53:	daa    
  415a54:	push   esi
  415a55:	mov    WORD PTR [ebx+ebx*8],cs
  415a58:	retf   0xb88c
  415a5b:	test   BYTE PTR [edi-0x23de5b98],ah
  415a61:	aad    0xd1
  415a63:	sbb    ebx,0x9386d2da
  415a69:	xor    ebx,DWORD PTR [ebx]
  415a6b:	xor    eax,0x50b11d94
  415a70:	arpl   WORD PTR [ecx-0x1ad14b03],di
  415a76:	jl     0x415ae5
  415a78:	mov    fs,WORD PTR [ecx+0x669613ad]
  415a7e:	hlt    
  415a7f:	imul   esi,esi,0xebf8eaa6
  415a85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a86:	addr16 or al,0x42
  415a89:	ja     0x415ae8
  415a8b:	fs call 0x78d9:0x8ed5a5fc
  415a93:	add    eax,0x8d8fe5ca
  415a98:	add    WORD PTR [ebp+0x4a],bx
  415a9c:	inc    edx
  415a9d:	mov    es,WORD PTR [edi]
  415a9f:	(bad)  
  415aa0:	fldcw  WORD PTR ds:0x649fddd7
  415aa6:	or     edi,0x63b7c0f3
  415aac:	repnz xor eax,0xbe4c6114
  415ab2:	sti    
  415ab3:	ja     0x415a7d
  415ab5:	mov    esi,0xdcbb97fe
  415aba:	mov    ah,0xd0
  415abc:	retf   
  415abd:	inc    esp
  415abe:	mov    ah,0xca
  415ac0:	mov    BYTE PTR [ebp-0x291082b7],bh
  415ac6:	data16 jb 0x415b3a
  415ac9:	in     al,dx
  415aca:	and    dl,BYTE PTR [ebx]
  415acc:	xchg   ebx,eax
  415acd:	sbb    BYTE PTR [edx+esi*2+0x2cd1c1b2],0x2b
  415ad5:	shr    BYTE PTR [ecx],0x1e
  415ad8:	and    DWORD PTR [esi+0x1a68be58],esi
  415ade:	(bad)  
  415adf:	dec    edi
  415ae0:	push   esp
  415ae1:	sbb    eax,0x5c9addb6
  415ae6:	call   0xbc7a:0x83cfa6ff
  415aed:	jp     0x415a9e
  415aef:	cmp    eax,0x569a5a4d
  415af4:	int    0x78
  415af6:	xlat   BYTE PTR ds:[ebx]
  415af7:	push   es
  415af8:	pop    esp
  415af9:	aam    0xfa
  415afb:	test   eax,0x70607dfd
  415b00:	js     0x415b0b
  415b02:	xor    DWORD PTR [ebx-0x3e396ad2],edx
  415b08:	jecxz  0x415b73
  415b0a:	(bad)  
  415b0b:	repz fwait
  415b0d:	mov    dh,BYTE PTR [ecx+0x6340739e]
  415b13:	call   0xc1f4:0x7b071c85
  415b1a:	fistp  DWORD PTR [edi+edi*4]
  415b1d:	mov    al,ds:0x165df91e
  415b22:	in     eax,dx
  415b23:	add    BYTE PTR [edi+ebp*2+0x26],dh
  415b27:	jl     0x415b8f
  415b29:	pop    edx
  415b2a:	aad    0x42
  415b2c:	sbb    esp,0xfcbe28e
  415b32:	idiv   BYTE PTR [ebp+0x37]
  415b35:	sub    BYTE PTR [edx],dh
  415b37:	ins    DWORD PTR es:[edi],dx
  415b38:	(bad)  
  415b39:	pop    edx
  415b3a:	xchg   BYTE PTR [eax-0x68832496],al
  415b40:	add    eax,DWORD PTR [edx+0x73]
  415b43:	mov    ch,0x6b
  415b45:	push   0x20
  415b47:	stos   BYTE PTR es:[edi],al
  415b48:	jo     0x415af4
  415b4a:	push   ds
  415b4b:	movzx  ecx,WORD PTR [ecx+esi*8]
  415b4f:	(bad)
  415b52:	mov    bl,0x37
  415b54:	pop    ebx
  415b55:	xchg   esi,eax
  415b56:	xchg   esi,eax
  415b57:	push   eax
  415b58:	stos   BYTE PTR es:[edi],al
  415b59:	in     al,0x3f
  415b5b:	lock adc dh,bl
  415b5e:	and    BYTE PTR [ebx],bh
  415b60:	jbe    0x415ae2
  415b62:	into   
  415b63:	test   al,0xc2
  415b65:	loope  0x415b04
  415b67:	in     eax,0x9
  415b69:	mov    ebp,0x8dcda6b7
  415b6e:	push   edx
  415b6f:	retf   
  415b70:	nop
  415b71:	xchg   BYTE PTR [eax+eiz*8-0x6c],cl
  415b75:	out    0xa3,eax
  415b77:	or     al,0x97
  415b79:	rol    BYTE PTR [esi+eax*8+0x26],cl
  415b7d:	jmp    0xeaf7:0x2407a50a
  415b84:	rol    BYTE PTR [eax-0x33],cl
  415b87:	xor    eax,0x7f863944
  415b8d:	cli    
  415b8e:	fwait
  415b8f:	inc    cx
  415b91:	enter  0x1a51,0x7f
  415b95:	dec    esp
  415b96:	loopne 0x415ba7
  415b98:	sbb    ebp,0xffffff9c
  415b9b:	inc    esp
  415b9c:	sbb    cl,ch
  415b9e:	std    
  415b9f:	fdivr  QWORD PTR [esi+0xe]
  415ba2:	retf   0x8659
  415ba5:	inc    eax
  415ba6:	outs   dx,DWORD PTR ds:[esi]
  415ba7:	dec    edx
  415ba8:	fdiv   QWORD PTR [edi]
  415baa:	test   esi,esi
  415bac:	cmp    BYTE PTR [ebp+ecx*8+0x4edc9dca],al
  415bb3:	fadd   QWORD PTR cs:[ebx+0x54]
  415bb7:	test   eax,0x68b27a34
  415bbc:	adc    BYTE PTR [edi],cl
  415bbe:	fisubr WORD PTR ds:0x89a1d184
  415bc4:	aad    0x47
  415bc6:	add    BYTE PTR [ecx+ebp*2],bh
  415bc9:	call   0x8902:0x5f370f9f
  415bd0:	bound  ebx,QWORD PTR [edx+0x4e]
  415bd3:	cdq    
  415bd4:	mov    ch,bh
  415bd6:	mov    bh,0x1
  415bd8:	cmp    ch,dl
  415bda:	jmp    0x884a:0x24f94968
  415be1:	xchg   edi,eax
  415be2:	pop    ebp
  415be3:	scas   al,BYTE PTR es:[edi]
  415be4:	iret   
  415be5:	scas   al,BYTE PTR es:[edi]
  415be6:	push   0x91dd821a
  415beb:	inc    esp
  415bec:	sbb    BYTE PTR ds:0xd9194921,al
  415bf2:	pop    ebx
  415bf3:	adc    al,0x34
  415bf5:	fnstenv [eax-0x6f5eeda9]
  415bfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bfc:	repz sub al,0xf2
  415bff:	inc    esp
  415c00:	lods   al,BYTE PTR ds:[esi]
  415c01:	mov    ds:0x9b4cea49,eax
  415c07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c08:	shl    bl,1
  415c0a:	mov    dl,0x4
  415c0c:	shl    BYTE PTR [ebp-0x480f564d],cl
  415c12:	mov    ebx,0x49044d2f
  415c17:	fsubr  st(4),st
  415c19:	call   FWORD PTR [ecx+0x15ce4991]
  415c1f:	test   DWORD PTR ds:0xba46a0fa,esp
  415c25:	loopne 0x415c1e
  415c27:	or     al,0xcb
  415c29:	out    dx,al
  415c2a:	pop    ebx
  415c2b:	retf   
  415c2c:	xor    al,0x10
  415c2e:	out    dx,eax
  415c2f:	dec    BYTE PTR [ebx]
  415c31:	or     ebp,esi
  415c33:	stc    
  415c34:	inc    ebx
  415c35:	pop    edx
  415c36:	ficom  WORD PTR [edi+0x5bad8809]
  415c3c:	ret    
  415c3d:	pop    eax
  415c3e:	popa   
  415c3f:	adc    DWORD PTR [esi+0x2a],edx
  415c42:	int    0x5d
  415c44:	out    dx,al
  415c45:	mov    bh,0xfd
  415c47:	xchg   ecx,eax
  415c48:	hlt    
  415c49:	fidivr WORD PTR [eax-0x5744a735]
  415c4f:	mov    eax,ds:0xb655f754
  415c54:	mov    ebx,0x6ffd769f
  415c59:	pusha  
  415c5a:	cmp    DWORD PTR [esi-0xa],0xffffffbb
  415c5e:	sbb    DWORD PTR [edx-0x2dd48343],ebp
  415c64:	cmp    eax,0x7d405832
  415c69:	dec    ecx
  415c6a:	mul    BYTE PTR [edi]
  415c6c:	mov    ds:0x9abbb97e,eax
  415c71:	push   ebp
  415c72:	lods   al,BYTE PTR ds:[esi]
  415c73:	imul   edi,DWORD PTR [ecx+ebx*8+0x10],0xf
  415c78:	pop    edx
  415c79:	push   ecx
  415c7a:	test   eax,0xe1223f27
  415c7f:	push   ds
  415c80:	pop    edi
  415c81:	js     0x415c66
  415c83:	dec    ebx
  415c84:	jnp    0x415c56
  415c86:	xor    BYTE PTR [ebx],bh
  415c88:	push   ds
  415c89:	and    bh,BYTE PTR [edi-0x4b]
  415c8c:	push   0x19
  415c8e:	stos   DWORD PTR es:[edi],eax
  415c8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c90:	cmp    al,0xa
  415c92:	pop    edi
  415c93:	in     eax,0x26
  415c95:	push   0x839dcb07
  415c9a:	sub    eax,0xd69981a
  415c9f:	sbb    ecx,DWORD PTR [ecx-0x776d017a]
  415ca5:	sub    DWORD PTR [esi],ebp
  415ca7:	add    al,0x6d
  415ca9:	push   ebx
  415caa:	push   esi
  415cab:	pushf  
  415cac:	add    eax,0xe5c85ac9
  415cb1:	(bad)  
  415cb2:	out    0xc4,al
  415cb4:	(bad)  
  415cb6:	out    0x41,al
  415cb8:	jge    0x415cb0
  415cba:	fild   WORD PTR [esi-0x45]
  415cbd:	mov    bh,0x88
  415cbf:	js     0x415ca6
  415cc1:	xor    DWORD PTR [ebx-0x6c],0xd6768bba
  415cc8:	sbb    bh,al
  415cca:	push   ebp
  415ccb:	lahf   
  415ccc:	ficom  WORD PTR [eax+0xce994f3]
  415cd2:	dec    edx
  415cd3:	hlt    
  415cd4:	loop   0x415d47
  415cd6:	mov    bh,0x8c
  415cd8:	and    ebx,DWORD PTR [eax-0x20]
  415cdb:	jns    0x415c83
  415cdd:	lock test BYTE PTR [edx+0x6e],dl
  415ce1:	repnz (bad) 
  415ce3:	cmp    eax,0xbb87ed08
  415ce8:	test   edi,ecx
  415cea:	mov    ah,0x69
  415cec:	ss pusha 
  415cee:	rol    DWORD PTR [edi-0x7d],0xb3
  415cf2:	mov    esi,0x872d4b73
  415cf7:	xchg   BYTE PTR [esi],ah
  415cf9:	sub    BYTE PTR [ecx+0x66],bh
  415cfc:	jnp    0x415d1c
  415cfe:	out    dx,eax
  415cff:	les    edi,FWORD PTR [bx+si]
  415d02:	ret    0x8af4
  415d05:	and    al,0xa0
  415d07:	hlt    
  415d08:	cmp    DWORD PTR [ebx+eiz*4-0x1302334b],edx
  415d0f:	mov    eax,0xd60fc71f
  415d14:	aad    0x91
  415d16:	retf   0xceb2
  415d19:	cmp    eax,0x2da6b5e8
  415d1e:	inc    esp
  415d1f:	test   eax,0xfbc9273e
  415d24:	rcr    DWORD PTR [ecx+ecx*4+0x3af8bf47],0xab
  415d2c:	pop    ds
  415d2d:	and    edi,DWORD PTR [esi-0x5d170e29]
  415d33:	xor    DWORD PTR [edx-0x5c],esp
  415d36:	jo     0x415d14
  415d38:	cmp    esp,DWORD PTR [edx]
  415d3a:	ffree  st(3)
  415d3c:	dec    edx
  415d3d:	cld    
  415d3e:	in     al,0xe1
  415d40:	retf   0x3131
  415d43:	fbld   TBYTE PTR [edi]
  415d45:	add    DWORD PTR [edi],ebx
  415d47:	(bad)  
  415d48:	jnp    0x415da8
  415d4a:	pop    eax
  415d4b:	and    DWORD PTR [ebp-0x24],ebp
  415d4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d4f:	and    al,cl
  415d51:	fst    st(3)
  415d53:	arpl   di,di
  415d55:	add    cl,BYTE PTR [eax]
  415d57:	loopne 0x415d19
  415d59:	pusha  
  415d5a:	cli    
  415d5b:	mov    dh,0xfc
  415d5d:	adc    al,0x2b
  415d5f:	mov    ah,BYTE PTR [ecx+0x47]
  415d62:	mov    bh,0x26
  415d64:	pop    ebp
  415d65:	les    edx,FWORD PTR [eax+0x23bf3394]
  415d6b:	mov    eax,0x95d83f4f
  415d70:	or     al,0xa8
  415d72:	or     ah,ch
  415d74:	scas   al,BYTE PTR es:[edi]
  415d75:	outs   dx,BYTE PTR ds:[esi]
  415d76:	add    BYTE PTR [edx+0x1038daf3],dh
  415d7c:	dec    ebp
  415d7d:	xor    BYTE PTR [ebx-0x3ab6efd8],bh
  415d83:	jl     0x415dce
  415d85:	out    0x2,eax
  415d87:	xor    edx,edi
  415d89:	and    ebp,esp
  415d8b:	cld    
  415d8c:	outs   dx,BYTE PTR cs:[esi]
  415d8e:	cmp    ebp,esp
  415d90:	jae    0x415d62
  415d92:	mov    eax,DWORD PTR [edi+0x75]
  415d95:	sub    esi,DWORD PTR ds:0x42539933
  415d9b:	mov    DWORD PTR [edx+0x1f50e016],eax
  415da1:	add    al,0x95
  415da3:	pop    ds
  415da4:	dec    ebp
  415da5:	jb     0x415d7d
  415da7:	sti    
  415da8:	out    0x16,eax
  415daa:	in     al,dx
  415dab:	nop
  415dac:	jp     0x415d44
  415dae:	push   esp
  415daf:	shr    BYTE PTR [ebx+0x69],1
  415db2:	add    BYTE PTR [esi],cl
  415db4:	jmp    0x415d39
  415db6:	in     eax,dx
  415db7:	cmp    ch,bh
  415db9:	push   esi
  415dba:	mov    ds:0x98dadc6d,al
  415dbf:	mov    ebx,0x8ed31273
  415dc4:	xchg   edx,eax
  415dc5:	gs jno 0x415e30
  415dc8:	or     DWORD PTR [edi-0x6],ebp
  415dcb:	sbb    al,0xf9
  415dcd:	cmp    eax,0x4f437b97
  415dd2:	mov    ch,0x2f
  415dd4:	loopne 0x415d7e
  415dd6:	pop    ecx
  415dd7:	outs   dx,BYTE PTR ds:[esi]
  415dd8:	lds    esp,FWORD PTR [esi]
  415dda:	neg    DWORD PTR [ecx+eiz*4+0x5a]
  415dde:	cmp    BYTE PTR [eax+esi*1],ch
  415de1:	and    cl,BYTE PTR [edi-0x628c898b]
  415de7:	adc    BYTE PTR [esi],0x1d
  415dea:	in     eax,dx
  415deb:	mov    ds:0x34c427ff,al
  415df0:	pop    esp
  415df1:	hlt    
  415df2:	sub    esp,ebx
  415df4:	imul   esp,DWORD PTR [eax+eax*1],0x66
  415df8:	ins    BYTE PTR es:[edi],dx
  415df9:	and    BYTE PTR [ebp+eiz*8+0x63],cl
  415dfd:	inc    ebx
  415dfe:	data16 sub dl,dl
  415e01:	and    BYTE PTR [ecx+0x79],bh
  415e04:	push   ecx
  415e05:	jns    0x415e3c
  415e07:	out    dx,al
  415e08:	pushf  
  415e09:	push   0xc
  415e0b:	(bad)  
  415e0d:	in     al,0x18
  415e0f:	cmc    
  415e10:	jnp    0x415e3e
  415e12:	bound  edi,QWORD PTR [eax+0x3fe913fb]
  415e18:	cmp    al,0x29
  415e1a:	adc    eax,0xa411dbc1
  415e1f:	retf   
  415e20:	div    BYTE PTR [edx]
  415e22:	fdivrp st(0),st
  415e24:	and    ecx,DWORD PTR [edx-0x61]
  415e27:	pop    esi
  415e28:	xor    eax,0x4a628a4e
  415e2d:	jge    0x415ea8
  415e2f:	jnp    0x415e99
  415e31:	push   ebx
  415e32:	aad    0xc1
  415e34:	mov    edx,0x16cfcb17
  415e39:	adc    eax,0x1f995835
  415e3e:	pop    ss
  415e3f:	or     edx,DWORD PTR ds:0x74e33757
  415e45:	or     DWORD PTR [ecx+0x367c4800],0x33996f15
  415e4f:	mov    bh,0xca
  415e51:	sub    bl,dh
  415e53:	sti    
  415e54:	cld    
  415e55:	fs mov ebx,0x2bacd3c
  415e5b:	(bad)  
  415e5c:	push   eax
  415e5d:	hlt    
  415e5e:	repz jmp 0x415e37
  415e61:	(bad)  
  415e62:	ds cmp esp,edi
  415e65:	jmp    0x415e7e
  415e67:	sub    DWORD PTR [eax+esi*4],edi
  415e6a:	add    esi,edi
  415e6c:	dec    ebx
  415e6d:	daa    
  415e6e:	nop
  415e6f:	arpl   si,ax
  415e71:	jns    0x415e82
  415e73:	loope  0x415ed1
  415e75:	je     0x415e17
  415e77:	ret    0xc960
  415e7a:	rcl    DWORD PTR [eax+0x2b57f306],0xd3
  415e81:	add    al,0xc9
  415e83:	xor    al,0x3a
  415e85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e86:	(bad)  
  415e88:	pop    esi
  415e89:	cmp    eax,0xec74be7c
  415e8e:	out    dx,eax
  415e8f:	mov    ch,0xb7
  415e91:	loope  0x415e20
  415e93:	inc    edx
  415e94:	adc    bh,dh
  415e96:	rcr    BYTE PTR [ecx+0x45fb919c],cl
  415e9c:	cdq    
  415e9d:	cmp    cl,cl
  415e9f:	jo     0x415f18
  415ea1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ea2:	xchg   BYTE PTR [ecx+0xf],ch
  415ea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ea6:	mov    ss,esp
  415ea8:	shl    DWORD PTR [eax],0x43
  415eab:	lea    esi,[ebp-0x47]
  415eae:	cmc    
  415eaf:	and    DWORD PTR [edx+0x56be92b1],eax
  415eb5:	and    al,0x9e
  415eb7:	add    DWORD PTR ds:0x53ff910b,ecx
  415ebd:	cmc    
  415ebe:	clc    
  415ebf:	pop    edx
  415ec0:	add    BYTE PTR [ebx],bl
  415ec2:	dec    esp
  415ec3:	or     al,0xd5
  415ec5:	push   0xe40af3d3
  415eca:	fbstp  TBYTE PTR [edx+0x1]
  415ecd:	and    BYTE PTR [edx+0x78],bl
  415ed0:	ret    0x12a5
  415ed3:	xchg   ebp,eax
  415ed4:	xor    DWORD PTR [ebx-0x1a],ebx
  415ed7:	mov    cl,BYTE PTR [edi]
  415ed9:	jmp    0x415f1b
  415edb:	sbb    DWORD PTR [edx],0xd1494a37
  415ee1:	mov    ds:0x775efaab,eax
  415ee6:	mov    bl,0xdc
  415ee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ee9:	imul   ebx,DWORD PTR [edx+0x3ab43434],0xffffffcf
  415ef0:	jne    0x415f00
  415ef2:	jns    0x415eb3
  415ef4:	ss mov ch,0xad
  415ef7:	inc    ebp
  415ef8:	enter  0xe9af,0xdb
  415efc:	cmp    bl,BYTE PTR [esi-0x4e]
  415eff:	mov    esi,0x63543199
  415f04:	stos   DWORD PTR es:[edi],eax
  415f05:	mov    ebx,0x719099b
  415f0a:	in     eax,0xdf
  415f0c:	rcl    DWORD PTR [edi+0x2306ae6],1
  415f12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f13:	fs inc ecx
  415f15:	outs   dx,BYTE PTR ds:[esi]
  415f16:	into   
  415f17:	or     eax,0x9db20471
  415f1c:	push   esp
  415f1d:	fist   WORD PTR [ebp+0x71]
  415f20:	xchg   DWORD PTR [edx+0x69],ecx
  415f23:	mov    ebx,0x91b28bc3
  415f28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f29:	shl    DWORD PTR [ebx-0x53],cl
  415f2c:	sbb    dl,cl
  415f2e:	push   edx
  415f2f:	in     al,0xb2
  415f31:	mov    ah,BYTE PTR [ebp+0x77]
  415f34:	and    eax,0x89d439a7
  415f39:	fnstenv [ecx-0x29]
  415f3c:	loopne 0x415f2c
  415f3e:	or     al,0xf2
  415f40:	ss enter 0xd0c4,0x8c
  415f45:	retf   0xc7ac
  415f48:	fist   DWORD PTR [ecx-0x64fd2f05]
  415f4e:	call   0x632f:0x59cad450
  415f55:	es int3 
  415f57:	pop    eax
  415f58:	(bad)  [ebx-0x48f466c]
  415f5e:	and    esi,eax
  415f60:	js     0x415f90
  415f62:	dec    ebx
  415f63:	mov    ds:0x6e45318a,al
  415f68:	add    DWORD PTR [ecx-0x1ec81304],ebx
  415f6e:	sub    al,0xec
  415f70:	and    al,0xe8
  415f72:	lock add eax,0xe80b781e
  415f78:	(bad)  
  415f79:	aad    0x4c
  415f7b:	nop
  415f7c:	stc    
  415f7d:	and    dh,0xe8
  415f80:	inc    ebp
  415f81:	repz mov WORD PTR [edx+ecx*8-0x35],fs
  415f86:	xlat   BYTE PTR ds:[ebx]
  415f87:	ror    BYTE PTR [esi],1
  415f89:	cmp    BYTE PTR [edi-0x12],al
  415f8c:	cmp    DWORD PTR [esi*1+0x54e4c1cb],edi
  415f93:	mov    eax,0xdb297e57
  415f98:	pop    edi
  415f99:	jge    0x415f5f
  415f9b:	sub    DWORD PTR [esi-0x2e],ecx
  415f9e:	loop   0x415fab
  415fa0:	lods   eax,DWORD PTR ds:[esi]
  415fa1:	mov    cl,0x49
  415fa3:	dec    ebp
  415fa4:	mov    ?,WORD PTR [ebp-0x91d5311]
  415faa:	xor    eax,0x7bf72a85
  415faf:	pop    ss
  415fb0:	pop    edx
  415fb1:	pop    esi
  415fb2:	or     DWORD PTR [esi+0x7ee04e1b],0xffffff81
  415fb9:	inc    esi
  415fba:	dec    DWORD PTR [esp+eax*2-0x38]
  415fbe:	gs add eax,0x641c0007
  415fc4:	push   esi
  415fc5:	fwait
  415fc6:	jb     0x415f8f
  415fc8:	push   esi
  415fc9:	repz inc BYTE PTR [esi+0xf]
  415fcd:	and    edx,DWORD PTR [eax]
  415fcf:	(bad)  
  415fd0:	aaa    
  415fd1:	loop   0x415fd7
  415fd3:	sub    DWORD PTR ds:0xde1d7567,esi
  415fd9:	mov    BYTE PTR [eax+ebp*4],dl
  415fdc:	mov    eax,0x682db907
  415fe1:	lods   eax,DWORD PTR ds:[esi]
  415fe2:	fwait
  415fe3:	lea    edi,[ebx-0x7]
  415fe6:	std    
  415fe7:	pop    ebp
  415fe8:	pop    ebx
  415fe9:	std    
  415fea:	sub    ch,BYTE PTR [edi]
  415fec:	push   esi
  415fed:	push   cs
  415fee:	xchg   edi,eax
  415fef:	enter  0x803e,0x16
  415ff3:	lahf   
  415ff4:	cs cs adc al,0x2c
  415ff8:	jns    0x415fa1
  415ffa:	int3   
  415ffb:	ins    DWORD PTR es:[edi],dx
  415ffc:	aaa    
  415ffd:	pop    edi
  415ffe:	push   cs
  415fff:	loope  0x415fdd
  416001:	cmc    
  416002:	pop    esi
  416003:	mov    al,ds:0xf7eb08
  416008:	push   0x4e
  41600a:	dec    esp
  41600b:	loopne 0x416001
  41600d:	add    ebp,DWORD PTR [ecx-0xb646a53]
  416013:	dec    esi
  416014:	inc    edi
  416015:	inc    ebx
  416016:	not    edx
  416018:	dec    eax
  416019:	add    al,0xe0
  41601b:	sbb    eax,0xb1f32d5b
  416020:	loop   0x415fd1
  416022:	sub    DWORD PTR [edi],edx
  416024:	sbb    bh,bh
  416026:	and    eax,0x434c4d3f
  41602b:	mov    DWORD PTR [ecx-0x446b3c0e],esi
  416031:	mov    esp,DWORD PTR fs:[ecx+0x4]
  416035:	adc    al,BYTE PTR ss:[bx+di-0x43]
  41603a:	xchg   ebx,eax
  41603b:	clc    
  41603c:	mov    ecx,0x462c1ddd
  416041:	repnz int3 
  416043:	dec    edi
  416044:	xchg   ecx,eax
  416045:	repz add eax,0x8ffd7f22
  41604b:	js     0x415fee
  41604d:	inc    edi
  41604e:	ja     0x4160c2
  416050:	and    BYTE PTR [ebx-0x6bb9fd07],bh
  416056:	cmp    al,0x76
  416058:	jns    0x416075
  41605a:	(bad)  
  41605b:	jno    0x41606c
  41605d:	ins    BYTE PTR es:[edi],dx
  41605e:	bnd ja 0x416028
  416061:	sbb    al,0x8e
  416063:	sbb    DWORD PTR [eax+0x2b],ebp
  416066:	inc    ebp
  416067:	and    ecx,DWORD PTR [ecx-0x6e73baac]
  41606d:	out    dx,al
  41606e:	das    
  41606f:	cld    
  416070:	inc    ebp
  416071:	call   0x15127b4d
  416076:	in     eax,0x17
  416078:	mul    cl
  41607a:	popa   
  41607b:	xlat   BYTE PTR ds:[ebx]
  41607c:	sub    DWORD PTR [edx+0x1b],0x53
  416080:	add    al,0x93
  416082:	lock (bad) 
  416084:	retf   
  416085:	imul   BYTE PTR [esi+0x2]
  416088:	ret    
  416089:	sbb    al,0x38
  41608b:	bound  ebx,QWORD PTR [eax+eax*4]
  41608e:	icebp  
  41608f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416090:	jno    0x416079
  416092:	inc    esi
  416093:	std    
  416094:	cdq    
  416095:	clc    
  416096:	shl    cl,0xdc
  416099:	pop    ss
  41609a:	dec    esi
  41609b:	push   edx
  41609c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41609d:	jmp    FWORD PTR [ebp+eax*2-0x449df940]
  4160a4:	aas    
  4160a5:	cmp    dh,ah
  4160a7:	mov    fs,WORD PTR [edi-0x73]
  4160aa:	pop    ebx
  4160ab:	adc    DWORD PTR [edi-0x33],eax
  4160ae:	sbb    DWORD PTR [esp+ebx*1],esi
  4160b1:	xchg   ecx,eax
  4160b2:	pop    eax
  4160b3:	jp     0x41605c
  4160b5:	repz or al,0x61
  4160b8:	mov    ch,ch
  4160ba:	pop    esi
  4160bb:	ret    0x18f1
  4160be:	pusha  
  4160bf:	dec    edx
  4160c0:	add    DWORD PTR [edx],edx
  4160c2:	fisubr WORD PTR [ecx]
  4160c4:	add    al,0xb8
  4160c6:	cli    
  4160c7:	shr    BYTE PTR [edi+0x69],0xe8
  4160cb:	mov    dl,0x31
  4160cd:	and    eax,DWORD PTR [eax-0x5c4618a2]
  4160d3:	(bad)
  4160d6:	scas   al,BYTE PTR es:[edi]
  4160d7:	dec    eax
  4160d8:	adc    eax,0xe952f4f3
  4160dd:	jp     0x4160bc
  4160df:	(bad)  
  4160e0:	xor    esp,ebp
  4160e2:	test   eax,0x44500461
  4160e7:	sub    bh,BYTE PTR [eax+0x556d5a1b]
  4160ed:	xchg   edx,eax
  4160ee:	mov    ss:0xef303d7a,al
  4160f4:	ret    
  4160f5:	pop    ss
  4160f6:	inc    esi
  4160f7:	mov    ebx,0x2ce1f6f1
  4160fc:	rcr    BYTE PTR [edx+0x442f2258],1
  416102:	arpl   WORD PTR [edi+0x2c],di
  416105:	rcr    BYTE PTR [ecx],1
  416107:	inc    ebp
  416108:	cli    
  416109:	dec    edi
  41610a:	dec    edx
  41610b:	sbb    eax,0x8ae65448
  416110:	out    dx,al
  416111:	mov    ch,BYTE PTR [ecx-0x2a]
  416114:	xchg   ecx,edx
  416116:	pminub mm1,QWORD PTR [edx-0x72]
  41611a:	loope  0x416196
  41611c:	mov    DWORD PTR [ecx+ebx*8-0x3cdb4357],esp
  416123:	lods   al,BYTE PTR ds:[esi]
  416124:	dec    ecx
  416125:	les    edx,FWORD PTR [edx+ebp*4+0x3e2d8f49]
  41612c:	arpl   ax,cx
  41612e:	lock dec esi
  416130:	std    
  416131:	popf   
  416132:	sub    ecx,DWORD PTR [esi]
  416134:	fnstenv ds:0xe327b611
  41613a:	shl    DWORD PTR [ecx+0x30ff1147],cl
  416140:	inc    esi
  416141:	jne    0x41616a
  416143:	inc    ebp
  416144:	lods   eax,DWORD PTR ds:[esi]
  416146:	sar    DWORD PTR [ebx+0x52f7c744],0x95
  41614d:	dec    eax
  41614e:	pop    eax
  41614f:	lahf   
  416150:	mov    esi,0x6d390295
  416155:	ror    BYTE PTR [ecx],1
  416157:	xor    esp,ebx
  416159:	test   BYTE PTR [edx-0x4d78d3cb],cl
  41615f:	mov    dh,BYTE PTR [ebx+0x1e]
  416162:	mov    ?,WORD PTR [edx-0x1387cd5]
  416168:	sbb    DWORD PTR [ecx-0x74],ebp
  41616b:	xchg   ebx,eax
  41616c:	mov    cl,BYTE PTR es:[esi-0x608a36e7]
  416173:	stc    
  416174:	mov    dl,0xba
  416176:	lock (bad) 
  416178:	stc    
  416179:	in     eax,dx
  41617a:	sub    BYTE PTR [esi+0x5f20f4b1],bh
  416180:	cmp    bl,BYTE PTR [eax+0x6687ac8b]
  416186:	ins    DWORD PTR es:[edi],dx
  416187:	ins    DWORD PTR es:[edi],dx
  416188:	add    BYTE PTR [eax-0x6d],bh
  41618b:	xor    ebx,DWORD PTR [ebp-0x71]
  41618e:	sub    ecx,DWORD PTR [eax+0x5cc3da6]
  416194:	push   ebp
  416195:	push   edi
  416196:	or     BYTE PTR [esi-0x7ae83d12],dl
  41619c:	adc    eax,0xfbfd82c8
  4161a1:	pop    edx
  4161a2:	sbb    DWORD PTR [ebx-0x39fe6aad],eax
  4161a8:	sub    dl,BYTE PTR [edx]
  4161aa:	jle    0x4161dd
  4161ac:	cdq    
  4161ad:	(bad)  
  4161ae:	mov    esi,0x6c380721
  4161b3:	inc    ebx
  4161b4:	scas   eax,DWORD PTR es:[edi]
  4161b5:	or     eax,0x140e1b06
  4161ba:	test   BYTE PTR [eax-0x7615da1a],0xdf
  4161c1:	xor    BYTE PTR [ebx+0x456ff3d1],ah
  4161c7:	adc    BYTE PTR [ebx],0xb6
  4161ca:	push   esp
  4161cb:	jmp    0xb7c6:0x5407a3c2
  4161d2:	test   DWORD PTR [ebp+0x61],esp
  4161d5:	ficom  WORD PTR [eax+0x58]
  4161d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161d9:	out    0xb1,eax
  4161db:	xchg   esp,eax
  4161dc:	mov    ebp,0xc9965df
  4161e1:	xor    esp,DWORD PTR [ecx+0x375acef3]
  4161e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161e8:	add    eax,0x53f18e46
  4161ee:	popa   
  4161ef:	inc    esi
  4161f0:	nop
  4161f1:	popf   
  4161f2:	sub    ch,ah
  4161f4:	or     ecx,ecx
  4161f6:	pop    edx
  4161f7:	and    BYTE PTR [edx-0x7c],cl
  4161fa:	push   es
  4161fb:	cmp    al,BYTE PTR [ebp-0x5bb435ad]
  416201:	aas    
  416202:	push   edx
  416203:	stos   BYTE PTR es:[edi],al
  416204:	fadd   DWORD PTR [esi+0x5779a7c1]
  41620a:	mov    ch,0xe8
  41620c:	dec    ebx
  41620d:	scas   al,BYTE PTR es:[edi]
  41620e:	xor    al,0x39
  416210:	jl     0x4161d3
  416212:	xchg   ebx,eax
  416213:	imul   edi,DWORD PTR [edi+ecx*8-0x196b90c1],0x6d
  41621b:	pop    ebp
  41621c:	mov    ah,0x4e
  41621e:	jmp    0x41624b
  416220:	test   BYTE PTR [edi+0x7d],cl
  416223:	dec    eax
  416224:	jle    0x416243
  416226:	sbb    DWORD PTR [ebx+0x53],edi
  416229:	xchg   ecx,eax
  41622a:	cwde   
  41622b:	xor    ebp,DWORD PTR [ebx+esi*4]
  41622e:	xor    al,0x28
  416230:	sub    al,0x42
  416232:	cmp    al,0xd5
  416234:	shl    al,0x87
  416237:	mov    edi,0x5115764e
  41623c:	jg     0x416266
  41623e:	adc    DWORD PTR [edx+0x53472c01],0x11
  416245:	shl    BYTE PTR [ecx],0x37
  416248:	xchg   edi,eax
  416249:	or     edi,eax
  41624b:	dec    edx
  41624c:	sbb    eax,0x355e05de
  416251:	call   0xe45d:0x7fa0204a
  416258:	sub    ebp,ecx
  41625a:	mov    ds:0xfedfa80b,eax
  41625f:	and    DWORD PTR [ebp+eax*8+0x2e],esp
  416263:	adc    BYTE PTR [esi],0x50
  416266:	rcr    BYTE PTR [edi+0x6],0x47
  41626a:	jo     0x416256
  41626c:	add    eax,0xae8ee8a
  416271:	lods   eax,DWORD PTR ds:[esi]
  416272:	lds    esp,FWORD PTR [edi-0x29bf5b27]
  416278:	jp     0x4162e3
  41627a:	xchg   esp,eax
  41627b:	sub    DWORD PTR [eax],esp
  41627d:	push   ds
  41627e:	sbb    DWORD PTR [edx-0x7d8d8802],ecx
  416284:	and    BYTE PTR [esi+0xd3998d2],bl
  41628a:	rcr    edx,1
  41628c:	pusha  
  41628d:	retf   0x6380
  416290:	test   al,0xd7
  416292:	cwde   
  416293:	fimul  WORD PTR [ecx]
  416295:	ss call 0x7dfd:0x9cb26c12
  41629d:	repnz pop esi
  41629f:	sub    eax,0xe8d47174
  4162a4:	push   ecx
  4162a5:	and    ebx,eax
  4162a7:	mov    esi,0xc4d315b8
  4162ac:	int    0x55
  4162ae:	jbe    0x416260
  4162b0:	mov    edi,0xfb225075
  4162b5:	aas    
  4162b6:	loop   0x416259
  4162b8:	fnsave [edi-0x1b]
  4162bb:	je     0x416334
  4162bd:	lods   eax,DWORD PTR ds:[esi]
  4162be:	cmp    al,ah
  4162c0:	inc    edi
  4162c1:	cmp    ch,BYTE PTR [edi-0x3e0788b1]
  4162c7:	xor    ebx,DWORD PTR [edx+0x57e122cd]
  4162cd:	dec    esi
  4162ce:	pop    eax
  4162cf:	(bad)  
  4162d0:	es dec ecx
  4162d2:	rcl    BYTE PTR [esi+0x25154e04],cl
  4162d8:	lea    ecx,[ecx+eiz*1-0x628ab18a]
  4162df:	fidivr WORD PTR [esi]
  4162e1:	mov    esi,0x5a0d566a
  4162e6:	stos   DWORD PTR es:[edi],eax
  4162e7:	sbb    al,0xec
  4162e9:	push   edx
  4162ea:	int3   
  4162eb:	sbb    ebx,DWORD PTR [eax+0xd5ee8e6]
  4162f1:	dec    DWORD PTR [esp+eax*2-0x5b34b456]
  4162f8:	push   cs
  4162f9:	ret    
  4162fa:	aaa    
  4162fb:	out    0x70,al
  4162fd:	rol    DWORD PTR [ecx],0xd2
  416300:	test   al,0x3d
  416302:	into   
  416303:	and    al,BYTE PTR [edi]
  416305:	xor    eax,0xd793825e
  41630a:	pusha  
  41630b:	mov    ch,0x50
  41630d:	dec    edi
  41630e:	push   edx
  41630f:	int    0x6d
  416311:	std    
  416312:	dec    ebx
  416313:	mov    eax,0x46e7e390
  416318:	push   ecx
  416319:	stos   DWORD PTR es:[edi],eax
  41631a:	push   esi
  41631b:	ins    BYTE PTR es:[edi],dx
  41631c:	pop    ebx
  41631d:	enter  0x74eb,0x93
  416321:	xchg   ebx,eax
  416322:	scas   al,BYTE PTR es:[edi]
  416323:	out    0x1e,al
  416325:	mov    eax,DWORD PTR [edx+0x445d5ccf]
  41632b:	hlt    
  41632c:	int3   
  41632d:	pminub mm4,mm5
  416330:	out    0xc3,eax
  416332:	test   BYTE PTR [edi+0x1],0x2
  416336:	mov    bh,0xf1
  416338:	(bad)  
  416339:	adc    eax,0xf73b083f
  41633e:	pop    ss
  41633f:	je     0x4163b2
  416341:	xchg   DWORD PTR [eax],ecx
  416343:	into   
  416344:	stos   BYTE PTR es:[edi],al
  416345:	inc    ebx
  416346:	mov    eax,0xb32675a8
  41634b:	mov    esp,0xa032977c
  416350:	icebp  
  416351:	cmp    eax,0xb8423b22
  416356:	sti    
  416357:	mov    ds:0xee222496,eax
  41635c:	mov    al,BYTE PTR [eax+0x34]
  41635f:	dec    esp
  416360:	lods   al,BYTE PTR ds:[esi]
  416361:	retf   0xa9f7
  416364:	push   ebx
  416365:	ins    DWORD PTR es:[edi],dx
  416366:	dec    esi
  416367:	pop    ds
  416368:	adc    ebp,ebp
  41636a:	mov    cl,0xc2
  41636c:	pop    ss
  41636d:	adc    BYTE PTR [esi+0x6d4d65bd],cl
  416373:	enter  0x252a,0x48
  416377:	jge    0x416361
  416379:	jo     0x416360
  41637b:	call   0xf206c9e1
  416380:	sub    ebp,DWORD PTR [ebp-0x66]
  416383:	lds    ebp,FWORD PTR [ecx+0x667f5a7]
  416389:	out    0x43,eax
  41638b:	ret    
  41638c:	test   eax,0x27ca499c
  416391:	loope  0x416345
  416393:	test   BYTE PTR [esi+0x9766181],0xb3
  41639a:	dec    ecx
  41639b:	into   
  41639c:	fadd   QWORD PTR [ecx-0x27]
  41639f:	mov    ebx,0x1c97daac
  4163a4:	lea    edi,[ecx]
  4163a6:	fstp   DWORD PTR [edx+0x6b]
  4163a9:	hlt    
  4163aa:	pop    ebx
  4163ab:	jb     0x4163df
  4163ad:	mov    ecx,esi
  4163af:	iret   
  4163b0:	cmp    edx,DWORD PTR [esi+0x7dd9a953]
  4163b6:	cmp    dh,cl
  4163b8:	lods   eax,DWORD PTR ds:[esi]
  4163b9:	scas   eax,DWORD PTR es:[edi]
  4163ba:	push   eax
  4163bb:	and    DWORD PTR [edx-0x25],esp
  4163be:	into   
  4163bf:	addr16 xchg esi,eax
  4163c1:	pop    esi
  4163c2:	ror    DWORD PTR [ebp+0x62218c4],0xb5
  4163c9:	sbb    ecx,DWORD PTR [esp+esi*4-0x58]
  4163cd:	jecxz  0x41638e
  4163cf:	out    dx,eax
  4163d0:	mov    ebp,0x5e0acf03
  4163d5:	inc    ebp
  4163d6:	xchg   bh,bl
  4163d8:	mov    esi,0x69ef8676
  4163dd:	fdivr  DWORD PTR [ecx+0x1419bf04]
  4163e3:	scas   eax,DWORD PTR es:[edi]
  4163e4:	stos   BYTE PTR es:[edi],al
  4163e5:	xchg   ebx,eax
  4163e6:	and    al,0xac
  4163e8:	int3   
  4163e9:	and    al,0xc0
  4163eb:	xchg   ebp,eax
  4163ec:	inc    esp
  4163ed:	jl     0x41642c
  4163ef:	imul   ecx,DWORD PTR ds:0x4549114c,0x7f80ed7e
  4163f9:	xchg   edi,eax
  4163fa:	out    0xb5,eax
  4163fc:	loopne 0x4163a4
  4163fe:	jg     0x416478
  416400:	or     eax,0xa741ca10
  416405:	fild   WORD PTR [edx-0x6c643db6]
  41640b:	jns    0x41648a
  41640d:	ss jmp 0x416421
  416410:	repnz addr16 mov ds:0x5885,al
  416415:	adc    eax,0x4d9b6722
  41641a:	ds mov al,0x66
  41641d:	retf   0xcb9
  416420:	xchg   esp,eax
  416421:	add    ch,BYTE PTR [eax]
  416423:	lods   al,BYTE PTR ds:[esi]
  416424:	fiadd  DWORD PTR [ecx]
  416426:	dec    ebx
  416427:	or     ebx,DWORD PTR [edi+0x4bfa01a4]
  41642d:	jo     0x416428
  41642f:	xor    edx,DWORD PTR [esi-0x65]
  416432:	adc    al,0x68
  416434:	fwait
  416435:	mov    dh,0xce
  416437:	or     eax,0x62573fc7
  41643c:	fwait
  41643d:	sbb    eax,0x18daa54d
  416442:	xor    al,0xb7
  416444:	xchg   ebp,eax
  416445:	sbb    bl,BYTE PTR [ebp+0x7b]
  416448:	loop   0x416486
  41644a:	test   ebp,esp
  41644c:	fistp  QWORD PTR [edi]
  41644e:	push   dx
  416450:	lods   eax,DWORD PTR ds:[esi]
  416451:	and    BYTE PTR [edi-0x44408542],ch
  416457:	enter  0xc470,0x98
  41645b:	sub    esp,edx
  41645d:	adc    ch,BYTE PTR [ecx+0x5b]
  416460:	adc    eax,0xbf2afe79
  416465:	pop    esi
  416466:	push   ds
  416467:	dec    edx
  416468:	test   DWORD PTR [eax-0x4e],eax
  41646b:	and    ebp,DWORD PTR ds:[ecx+0x7b]
  41646f:	aam    0xfd
  416471:	(bad)  
  416472:	outs   dx,DWORD PTR ds:[esi]
  416473:	push   0xffffffa6
  416475:	xchg   ebp,eax
  416476:	mov    DWORD PTR [ebx+ebx*1],esp
  416479:	outs   dx,BYTE PTR ds:[esi]
  41647a:	push   edx
  41647b:	mov    dl,0x46
  41647d:	inc    esp
  41647e:	cmp    eax,0x3025272e
  416483:	push   eax
  416484:	sbb    dl,BYTE PTR [edx]
  416486:	loope  0x4164c9
  416488:	enter  0x8af6,0xd8
  41648c:	in     eax,0x72
  41648e:	ins    BYTE PTR es:[edi],dx
  41648f:	sub    al,0x9c
  416491:	ja     0x416441
  416493:	stc    
  416494:	fdivr  st,st(4)
  416496:	pop    edi
  416497:	cmp    eax,0x9c0d4d12
  41649c:	push   ebp
  41649d:	jmp    0x66c3f9f1
  4164a2:	imul   esp,DWORD PTR [esi],0xd5e344c2
  4164a8:	bts    DWORD PTR [edx+0x11],0xc2
  4164ad:	jle    0x416451
  4164af:	fistp  WORD PTR [esi-0x18]
  4164b2:	outs   dx,DWORD PTR ds:[esi]
  4164b3:	and    al,dl
  4164b5:	xlat   BYTE PTR ds:[ebx]
  4164b6:	pop    ss
  4164b7:	out    0xfa,al
  4164b9:	(bad)  
  4164ba:	jp     0x4164ef
  4164bc:	xchg   ebx,eax
  4164bd:	sahf   
  4164be:	jmp    0xf1bd944b
  4164c3:	xchg   edx,eax
  4164c4:	mov    dl,0xc7
  4164c6:	jle    0x4164bb
  4164c8:	sti    
  4164c9:	popa   
  4164ca:	add    ebp,eax
  4164cc:	or     ch,BYTE PTR [edi-0x28]
  4164cf:	push   0x21b87e3
  4164d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164d5:	out    dx,al
  4164d6:	and    ecx,DWORD PTR [ebx-0x23]
  4164d9:	das    
  4164da:	sbb    al,0x27
  4164dc:	lods   eax,DWORD PTR ds:[esi]
  4164dd:	cs adc al,0x1f
  4164e0:	loopne 0x416503
  4164e2:	(bad)  
  4164e3:	jns    0x4164c9
  4164e5:	pop    eax
  4164e6:	inc    eax
  4164e7:	sahf   
  4164e8:	mov    ds:0x4760eda3,eax
  4164ed:	mov    cs,WORD PTR [ebp+0x2bb3cdda]
  4164f3:	sahf   
  4164f4:	sbb    eax,0xa9ab9ada
  4164f9:	add    al,0xe5
  4164fb:	xor    DWORD PTR [ecx],edi
  4164fd:	inc    esp
  4164fe:	outs   dx,BYTE PTR ds:[esi]
  4164ff:	loop   0x4164c8
  416501:	fld    DWORD PTR [ebp-0x216e9b69]
  416507:	pushf  
  416508:	test   al,0xb5
  41650a:	call   0x16b4:0xfd25a43d
  416511:	sahf   
  416512:	int3   
  416513:	mov    esp,DWORD PTR [esi]
  416515:	sbb    al,0x93
  416517:	dec    esi
  416518:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416519:	les    eax,FWORD PTR [ecx]
  41651b:	call   DWORD PTR [esi+0x35]
  41651e:	inc    ebx
  41651f:	push   ecx
  416520:	in     al,0xbd
  416522:	shl    ah,cl
  416524:	sbb    ah,BYTE PTR [esi-0x80]
  416527:	dec    ecx
  416528:	adc    cl,BYTE PTR [ebp+0x635ab163]
  41652e:	ins    DWORD PTR es:[edi],dx
  41652f:	sub    eax,0x4cf2e630
  416534:	push   edx
  416535:	xchg   al,al
  416537:	mov    ecx,0x20a65161
  41653c:	das    
  41653d:	je     0x416599
  41653f:	fstp   QWORD PTR [ebp+0x15]
  416542:	jmp    0xe2f3:0xbb052333
  416549:	and    eax,0xf1cb5d8f
  41654e:	pop    esp
  41654f:	fmul   QWORD PTR [edx+ebx*2]
  416552:	fisubr DWORD PTR [ecx-0x402ba95]
  416558:	mov    cs,WORD PTR [eax]
  41655a:	jb     0x416577
  41655c:	into   
  41655d:	test   BYTE PTR [ebx-0x4a],0xdd
  416561:	sti    
  416562:	ss jns 0x4165af
  416565:	inc    esp
  416566:	or     ecx,DWORD PTR [si+0x45]
  41656a:	push   cs
  41656b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41656c:	mov    ecx,eax
  41656e:	push   esi
  41656f:	mov    edx,0x5dd51ca2
  416574:	sbb    BYTE PTR [esi],ah
  416576:	retf   0xac77
  416579:	icebp  
  41657a:	jl     0x416517
  41657c:	cli    
  41657d:	mov    bl,0xc5
  41657f:	aad    0x62
  416581:	or     al,0x1c
  416583:	mov    ?,WORD PTR [edi]
  416585:	push   esp
  416586:	jmp    0xc3e2cd50
  41658b:	mov    BYTE PTR [ebx],bh
  41658d:	add    edi,DWORD PTR [eax-0x7f]
  416590:	mov    dh,0x92
  416592:	jns    0x4165a8
  416594:	mov    dh,0xf3
  416596:	pushf  
  416597:	sti    
  416598:	jecxz  0x4165d5
  41659a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41659b:	ficom  WORD PTR [eax-0x39df036e]
  4165a1:	push   cs
  4165a2:	loop   0x416551
  4165a4:	mov    ch,0x78
  4165a6:	sbb    BYTE PTR [edx-0x6314645],bl
  4165ac:	mov    ebx,0xe305ba60
  4165b1:	and    BYTE PTR [ebx-0x21a42d65],bh
  4165b7:	add    ah,BYTE PTR [ebx]
  4165b9:	js     0x416592
  4165bb:	mov    al,ds:0x7c0b1394
  4165c0:	pop    ebx
  4165c1:	cs inc ebp
  4165c3:	push   esp
  4165c4:	dec    esi
  4165c5:	pop    ebp
  4165c6:	ins    DWORD PTR es:[edi],dx
  4165c7:	mov    al,0x89
  4165c9:	adc    esp,DWORD PTR [ebx+0x618138d4]
  4165cf:	fs pop esp
  4165d1:	sbb    eax,0x46905a67
  4165d6:	test   eax,0x19d31065
  4165db:	ss ins BYTE PTR es:[edi],dx
  4165dd:	mov    ah,0x17
  4165df:	daa    
  4165e0:	dec    ecx
  4165e1:	ins    DWORD PTR es:[edi],dx
  4165e2:	retf   
  4165e3:	xor    bl,bl
  4165e5:	mov    al,ds:0xebf2b71c
  4165ea:	out    0xf4,eax
  4165ec:	sub    ah,BYTE PTR [ecx-0x1d]
  4165ef:	cmp    DWORD PTR [edx-0x2],ecx
  4165f2:	fisubr DWORD PTR [esi]
  4165f4:	inc    ebx
  4165f5:	cmp    DWORD PTR [ebx+0x3fac66ac],ebx
  4165fb:	mov    ecx,0x4167845e
  416600:	mov    ah,0xce
  416602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416603:	ret    
  416604:	mov    al,0x9d
  416606:	mov    ch,0xab
  416608:	xor    al,0x5b
  41660a:	sbb    al,0x65
  41660c:	aad    0xe6
  41660e:	fidivr DWORD PTR [esi]
  416610:	lods   eax,DWORD PTR ds:[esi]
  416611:	and    edx,DWORD PTR [ebp+0x45feabbc]
  416617:	dec    edx
  416618:	(bad)  
  416619:	in     al,0xd2
  41661b:	test   DWORD PTR [edi],ebx
  41661d:	inc    ebx
  41661e:	or     BYTE PTR [eax-0xa5be3d8],0x4
  416625:	mov    ch,0x8d
  416627:	xor    al,BYTE PTR [ecx-0x46d2546f]
  41662d:	push   ebp
  41662e:	les    edi,FWORD PTR [edx+0x3c]
  416631:	enter  0xf1cf,0xc7
  416635:	mov    cl,0x7a
  416637:	sub    al,0x8b
  416639:	ret    
  41663a:	call   0x7f7e:0x41a93d81
  416641:	(bad)  
  416642:	in     al,dx
  416643:	and    al,0x8d
  416645:	mov    ah,0xd9
  416647:	inc    ebx
  416648:	xor    dh,BYTE PTR [ebx-0x10b386a9]
  41664e:	mov    edx,0x8b7cb639
  416653:	push   cs
  416654:	or     BYTE PTR es:[edx+0x6524089f],al
  41665b:	inc    edi
  41665c:	mov    al,ds:0xa635295c
  416661:	xor    BYTE PTR [ecx+0x5c2fbb5c],dl
  416667:	push   edi
  416668:	mov    bl,0x5e
  41666a:	xor    BYTE PTR [ebx+ebx*2+0x4d],0xda
  41666f:	enter  0x760a,0x47
  416673:	in     eax,dx
  416674:	ds gs and al,0x38
  416678:	push   esi
  416679:	inc    esi
  41667a:	inc    eax
  41667b:	or     eax,0x73a123a6
  416680:	shl    BYTE PTR [ebx-0x7d],0xd0
  416684:	popa   
  416685:	test   BYTE PTR [ebx-0x73],cl
  416688:	jo     0x416624
  41668a:	mov    eax,edx
  41668c:	pop    ss
  41668d:	mov    bh,0x87
  41668f:	test   BYTE PTR [ebx+0x2f],dl
  416692:	aaa    
  416693:	aad    0xc3
  416695:	in     eax,dx
  416696:	test   BYTE PTR [ebx+0x270bde7c],dh
  41669c:	adc    DWORD PTR [ebp+0x1d],0xc68b8399
  4166a3:	xchg   BYTE PTR [esi+0x59be3cf0],bh
  4166a9:	bound  ebp,QWORD PTR [esi]
  4166ab:	fsubr  st,st(7)
  4166ad:	mov    DWORD PTR [edi],ebp
  4166af:	call   0xe4f3:0xe7552d30
  4166b6:	stos   DWORD PTR es:[edi],eax
  4166b7:	and    bl,BYTE PTR [esi+0xf]
  4166ba:	enter  0x2a40,0x1e
  4166be:	mov    eax,ds:0x94ee509d
  4166c3:	add    al,0x1a
  4166c5:	add    al,0xa5
  4166c7:	ja     0x4166b0
  4166c9:	out    0x1f,eax
  4166cb:	retf   0x9da9
  4166ce:	test   al,0x51
  4166d0:	and    eax,0xe929ef4d
  4166d5:	ud1    esp,esi
  4166d8:	inc    esi
  4166d9:	popa   
  4166da:	cmp    BYTE PTR [edx-0x3b],dl
  4166dd:	push   ds
  4166de:	dec    ecx
  4166df:	out    dx,al
  4166e0:	(bad)  
  4166e1:	mov    ebx,0x3e45b3b5
  4166e6:	sbb    ah,BYTE PTR [ebx-0x3173bff4]
  4166ec:	repz mov ebp,0x9cb0eb96
  4166f2:	mov    dh,0xe1
  4166f4:	and    bh,dl
  4166f6:	jnp    0x416707
  4166f8:	xchg   dl,bh
  4166fa:	xor    DWORD PTR [edi],ecx
  4166fc:	call   0xb042:0x77364657
  416703:	je     0x416782
  416705:	ret    
  416706:	push   0xffffffd0
  416708:	inc    ebx
  416709:	sub    edx,DWORD PTR [esi+0x59]
  41670c:	aad    0x9f
  41670e:	mov    edx,ecx
  416710:	popa   
  416711:	out    dx,eax
  416712:	cdq    
  416713:	jmp    DWORD PTR [edx]
  416715:	jnp    0x416729
  416717:	jge    0x416793
  416719:	das    
  41671a:	cld    
  41671b:	repz jmp 0x4166e6
  41671e:	mov    dl,0xcb
  416720:	xor    eax,0x7a138098
  416725:	jg     0x41674f
  416727:	adc    DWORD PTR gs:[eax-0xc],edi
  41672b:	inc    esi
  41672c:	daa    
  41672d:	add    dl,BYTE PTR [edx]
  41672f:	es inc esp
  416731:	int3   
  416732:	inc    ebp
  416733:	push   ecx
  416734:	xchg   esp,eax
  416735:	inc    esi
  416736:	fdivrp st(3),st
  416738:	pusha  
  416739:	push   ds
  41673a:	js     0x416797
  41673c:	mov    esp,0x43c89939
  416741:	mov    esi,0x2377573f
  416746:	inc    ecx
  416747:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416748:	sub    cl,bl
  41674a:	jp     0x4166dc
  41674c:	push   edi
  41674d:	mov    bl,0xae
  41674f:	add    DWORD PTR [esi],esi
  416751:	mov    al,0xbc
  416753:	and    ah,dl
  416755:	xchg   edi,eax
  416756:	or     eax,0x12d92da1
  41675b:	add    ah,0x61
  41675e:	mov    dl,0x50
  416760:	fsub   DWORD PTR [edi-0x35]
  416763:	or     eax,0x900e8a21
  416768:	out    dx,eax
  416769:	mov    eax,ds:0x26673110
  41676e:	push   esp
  41676f:	sbb    edi,DWORD PTR [edi+0x14]
  416772:	fisttp WORD PTR [ebp+edi*2+0x25b22977]
  416779:	loop   0x4167c1
  41677b:	into   
  41677c:	push   esi
  41677d:	daa    
  41677e:	sbb    BYTE PTR [ebp+0x7547939],dh
  416784:	call   0x65d8:0x4d9e5fc3
  41678b:	iret   
  41678c:	into   
  41678d:	ja     0x41677f
  41678f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416790:	xor    bh,BYTE PTR [ebx+0x5640be63]
  416796:	(bad)  
  416797:	cdq    
  416798:	jns    0x41677b
  41679a:	outs   dx,BYTE PTR ds:[esi]
  41679b:	mov    DWORD PTR [edx+ecx*8-0x46],esi
  41679f:	ret    0x8079
  4167a2:	ror    BYTE PTR [edi+0x7b],0x12
  4167a6:	das    
  4167a7:	not    BYTE PTR [eax]
  4167a9:	mov    edx,0xb99b1e57
  4167ae:	jmp    0x416820
  4167b0:	cmp    BYTE PTR [ebx-0x5f9ebbf5],ah
  4167b6:	(bad)  
  4167b8:	inc    edx
  4167b9:	addr16 cdq 
  4167bb:	jle    0x416773
  4167bd:	xor    al,0x86
  4167c0:	div    DWORD PTR ds:0xfc11f151
  4167c6:	mov    ch,0xdf
  4167c8:	xchg   esp,eax
  4167c9:	adc    edx,DWORD PTR [ecx]
  4167cb:	jg     0x41675b
  4167cd:	popf   
  4167ce:	dec    ebx
  4167cf:	fistp  WORD PTR [edx]
  4167d1:	mov    ds:0x95cba8dd,al
  4167d6:	bound  ebx,QWORD PTR [esp+eiz*2+0x3f0b926c]
  4167dd:	xor    eax,0xeff6bb7d
  4167e2:	or     DWORD PTR [ecx+ebp*1],ebp
  4167e5:	mov    bl,0xf0
  4167e7:	je     0x4167b6
  4167e9:	(bad)  
  4167ea:	fcomp  QWORD PTR fs:[ecx-0x22]
  4167ee:	jp     0x416869
  4167f0:	mov    dh,0x86
  4167f2:	jne    0x4167a6
  4167f4:	sub    eax,0x280cd9de
  4167f9:	es adc dh,bh
  4167fc:	bound  ebp,QWORD PTR [ecx+ebp*8+0x405d5e43]
  416803:	jmp    0x2d826058
  416808:	jp     0x416840
  41680a:	jb     0x416813
  41680c:	cwde   
  41680d:	sbb    BYTE PTR [ebx],al
  41680f:	into   
  416810:	(bad)  
  416811:	retf   0xabc1
  416814:	add    bh,BYTE PTR [eax]
  416816:	fcmovu st,st(6)
  416818:	xor    BYTE PTR [edx-0x64],bh
  41681b:	fsubr  DWORD PTR [edx+edi*8]
  41681e:	in     eax,dx
  41681f:	aas    
  416820:	scas   al,BYTE PTR es:[edi]
  416821:	sbb    BYTE PTR [edx-0x74827021],bh
  416827:	sub    bh,BYTE PTR [edx]
  416829:	int3   
  41682a:	mov    ecx,0xea04496e
  41682f:	pop    ss
  416830:	inc    edx
  416831:	jp     0x4167bc
  416833:	nop
  416834:	sub    DWORD PTR [ebx],eax
  416836:	xchg   ebp,eax
  416837:	dec    ebp
  416838:	pop    ecx
  416839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41683a:	enter  0xeabc,0x25
  41683e:	dec    esi
  41683f:	add    al,0x42
  416841:	pop    esp
  416842:	jno    0x4168a3
  416844:	jp     0x416835
  416846:	and    dh,BYTE PTR [ecx+0x2e]
  416849:	mov    al,0x78
  41684b:	jno    0x4168c0
  41684d:	xchg   BYTE PTR [ecx],al
  41684f:	pop    DWORD PTR [ecx-0x1448a9e]
  416855:	cmp    eax,0x7f28ca7c
  41685a:	mov    al,ds:0xd50e912e
  41685f:	into   
  416860:	mov    dh,BYTE PTR [eax-0x3037f1a7]
  416866:	adc    BYTE PTR [eax+0x40],ah
  416869:	pop    ebp
  41686a:	(bad)  [ebx-0x29a2e181]
  416870:	arpl   WORD PTR [esi-0x56],sp
  416873:	pusha  
  416874:	enter  0x72da,0xab
  416878:	jbe    0x4168ba
  41687a:	mov    dh,0x2d
  41687c:	test   al,0xeb
  41687e:	sbb    DWORD PTR [esi-0x4607744d],edi
  416884:	imul   ebp,DWORD PTR [esi+ebp*2+0x77a6939e],0xffffff91
  41688c:	mov    dl,0xcd
  41688e:	mov    bl,0x86
  416890:	loope  0x41687d
  416892:	xchg   ebp,eax
  416893:	and    ebx,edi
  416895:	repnz xor al,0xa2
  416898:	dec    esp
  416899:	(bad)  
  41689a:	aam    0xbc
  41689c:	sahf   
  41689d:	inc    esp
  41689e:	getsec 
  4168a0:	cli    
  4168a1:	(bad)  
  4168a2:	bound  ecx,QWORD PTR [edi+0x4e]
  4168a5:	aaa    
  4168a6:	loope  0x4168ee
  4168a8:	xchg   edx,eax
  4168a9:	daa    
  4168aa:	lods   al,BYTE PTR ds:[esi]
  4168ab:	xor    eax,0x293b452c
  4168b0:	jmp    0x43ab:0xc424af82
  4168b7:	adc    ecx,DWORD PTR ds:0x9d0a384f
  4168bd:	out    dx,al
  4168be:	mov    bl,0x35
  4168c0:	fstp   QWORD PTR [edi-0x506856c7]
  4168c6:	pop    es
  4168c7:	sbb    ah,BYTE PTR [edi-0x34]
  4168ca:	mov    dh,0x87
  4168cc:	add    ch,BYTE PTR [esp+edx*8+0x13a201b]
  4168d3:	inc    ecx
  4168d4:	mov    BYTE PTR [ebx],bh
  4168d6:	inc    esi
  4168d7:	mov    al,ds:0x797da133
  4168dc:	repnz cmp al,dh
  4168df:	(bad)  
  4168e0:	fstp   QWORD PTR [ebx]
  4168e2:	mov    ebx,DWORD PTR [eax-0x7f]
  4168e5:	xchg   ebp,eax
  4168e6:	or     cl,dl
  4168e8:	es in  al,0x45
  4168eb:	xchg   bl,ah
  4168ed:	mov    dh,0xe4
  4168ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168f0:	or     BYTE PTR [eax+edi*4-0x191f70ce],cl
  4168f7:	sub    al,0x69
  4168f9:	test   DWORD PTR [edx],0x7c61ccf1
  4168ff:	or     eax,0x7d834190
  416904:	leave  
  416905:	and    al,0x60
  416907:	adc    edi,DWORD PTR [edx+0x23]
  41690a:	test   BYTE PTR [eax],dl
  41690c:	dec    edx
  41690d:	icebp  
  41690e:	cld    
  41690f:	int    0x86
  416911:	adc    ah,BYTE PTR ds:0x223ea7b2
  416917:	gs push eax
  416919:	call   0x6663:0x6af87d70
  416920:	shl    esp,0x44
  416923:	repnz popf 
  416925:	and    al,0x6f
  416927:	sub    BYTE PTR [eax],bh
  416929:	xchg   DWORD PTR [ebx-0x4e],edi
  41692c:	addr16 jl 0x416939
  41692f:	pop    es
  416930:	imul   edx,DWORD PTR [eax-0x7d9f260e],0x9
  416937:	lea    ebp,[edi]
  416939:	push   es
  41693a:	inc    ebx
  41693b:	cwde   
  41693c:	repz jmp 0x4168c9
  41693f:	sub    DWORD PTR [ebx-0x478d54ad],ebp
  416945:	cmp    eax,0xed655869
  41694a:	sub    DWORD PTR [edx+0x533b79bc],edi
  416950:	jo     0x41697a
  416952:	bound  eax,QWORD PTR [edx-0x51]
  416955:	jle    0x416990
  416957:	mov    eax,DWORD PTR [edi]
  416959:	pop    ecx
  41695a:	cwde   
  41695b:	xchg   DWORD PTR [ebx+0x64],ebx
  41695e:	xchg   edi,eax
  41695f:	je     0x4169e0
  416961:	jge    0x4169b1
  416963:	sub    al,0x9b
  416965:	inc    esi
  416966:	bswap  edi
  416968:	jo     0x41692b
  41696a:	jp     0x41693c
  41696c:	add    BYTE PTR [eax-0x1c7694f2],ah
  416972:	rol    DWORD PTR [eax+0x303cf7de],1
  416978:	push   cs
  416979:	jle    0x416937
  41697b:	ja     0x41696e
  41697d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41697e:	into   
  41697f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416980:	pop    ecx
  416981:	dec    esi
  416982:	in     al,0x83
  416984:	sbb    DWORD PTR ds:0x40c78ced,ecx
  41698a:	adc    BYTE PTR [edx+eiz*2-0x5bf7d94f],bh
  416991:	enter  0xeaa0,0x26
  416995:	aad    0xab
  416997:	data16 (bad) 
  416999:	xchg   esi,eax
  41699a:	scas   eax,DWORD PTR es:[edi]
  41699b:	pop    ebx
  41699c:	mov    ecx,0xae8624ae
  4169a1:	fbld   TBYTE PTR [ecx+0x74]
  4169a4:	and    al,BYTE PTR ds:0x13d4ce86
  4169aa:	mov    esi,0x7337c6e1
  4169af:	dec    eax
  4169b0:	mov    edx,DWORD PTR [eax+0x45]
  4169b3:	xchg   ecx,eax
  4169b4:	call   FWORD PTR [eax+0xcebd8ef]
  4169ba:	cmp    ah,BYTE PTR [edi]
  4169bc:	jo     0x4169fc
  4169be:	dec    eax
  4169bf:	inc    ebx
  4169c0:	mov    edx,0xd533ce73
  4169c5:	jnp    0x41698b
  4169c7:	inc    esp
  4169c8:	test   DWORD PTR [edx-0x13],edi
  4169cb:	jo     0x416a46
  4169cd:	test   DWORD PTR [eax+ecx*4+0x725ea435],0x9f065800
  4169d8:	ror    DWORD PTR [ebx],cl
  4169da:	mov    ah,cl
  4169dc:	mov    al,ds:0xcea4457c
  4169e1:	lds    esp,FWORD PTR [edx+0x4f437ea2]
  4169e7:	ret    
  4169e8:	adc    DWORD PTR [edx+0x131a93fb],edi
  4169ee:	mov    ebp,0x10f66edd
  4169f3:	rcl    ebx,1
  4169f5:	sbb    al,0x14
  4169f7:	xor    ecx,DWORD PTR [edx]
  4169f9:	cmp    eax,0x2de70837
  4169fe:	and    DWORD PTR [edx-0x32b0dff8],0xb41e3604
  416a08:	and    eax,0x383905b2
  416a0d:	ret    0x1c39
  416a10:	add    DWORD PTR [esi],0xfffffff8
  416a13:	out    dx,al
  416a14:	and    ah,0xde
  416a17:	icebp  
  416a18:	mov    ah,0x31
  416a1a:	pop    edi
  416a1b:	in     eax,0xd5
  416a1d:	in     al,0xf2
  416a1f:	xor    esp,DWORD PTR [eax+0x5cd4fd43]
  416a25:	out    0x58,eax
  416a27:	sbb    al,0x25
  416a29:	aad    0x81
  416a2b:	and    BYTE PTR ds:0x91d0049b,ch
  416a31:	sub    ah,dl
  416a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a34:	leave  
  416a35:	xchg   DWORD PTR [ebx-0x2932f2d4],esp
  416a3b:	in     eax,0x35
  416a3d:	scas   al,BYTE PTR es:[edi]
  416a3e:	fmul   DWORD PTR [eax]
  416a40:	xor    al,0x7e
  416a42:	dec    esi
  416a43:	cmp    BYTE PTR [esi-0x397b7f3c],ah
  416a49:	add    eax,0xa6684966
  416a4e:	inc    ecx
  416a4f:	(bad)  
  416a50:	pushf  
  416a51:	dec    ebp
  416a52:	rcl    ebx,cl
  416a54:	lfs    ecx,FWORD PTR [ebx-0xc6c3c18]
  416a5b:	gs adc dh,cl
  416a5e:	xchg   edx,eax
  416a5f:	jae    0x416a63
  416a61:	dec    esi
  416a62:	inc    DWORD PTR [edi]
  416a64:	fsubr  DWORD PTR [edi+0x22]
  416a67:	and    bl,BYTE PTR [ebx+0x43192d09]
  416a6d:	push   di
  416a6f:	loop   0x416adb
  416a71:	cmp    al,0xfd
  416a73:	push   0xffffffd8
  416a75:	mov    eax,ds:0x530c8bdc
  416a7a:	cmc    
  416a7b:	sbb    dl,BYTE PTR [ecx-0x62332341]
  416a81:	mov    bh,0x98
  416a83:	inc    eax
  416a84:	add    al,0xeb
  416a86:	mov    ds:0x9354146a,eax
  416a8b:	ins    BYTE PTR es:[edi],dx
  416a8c:	xchg   BYTE PTR [ebx+eiz*1+0x12],bl
  416a90:	inc    ebx
  416a91:	jb     0x416ae8
  416a93:	inc    esp
  416a94:	inc    edi
  416a95:	jo     0x416afd
  416a97:	stos   DWORD PTR es:[edi],eax
  416a98:	sub    ebp,DWORD PTR ds:0x7455c060
  416a9e:	std    
  416a9f:	add    al,0x6
  416aa1:	int    0x7b
  416aa3:	jg     0x416a31
  416aa5:	mov    ds:0x567ec23c,al
  416aaa:	out    dx,al
  416aab:	repz mov al,ds:0x24918b65
  416ab1:	hlt    
  416ab2:	les    ebp,FWORD PTR cs:[ecx+0x4b]
  416ab6:	pop    esi
  416ab7:	aad    0x48
  416ab9:	sbb    BYTE PTR [ebx+0x6450bbec],ch
  416abf:	sub    al,0x51
  416ac1:	dec    eax
  416ac2:	xor    dh,ch
  416ac4:	mov    eax,ds:0x2a4bad54
  416ac9:	adc    DWORD PTR [esi+0x2a],ebp
  416acc:	pop    ebp
  416acd:	cmp    DWORD PTR [esi-0x44],0xffffffe0
  416ad1:	cmp    eax,0x42a3bf3f
  416ad6:	lock sub al,0x97
  416ad9:	jmp    0xc9b2a1e4
  416ade:	ja     0x416a60
  416ae0:	lods   eax,DWORD PTR ds:[esi]
  416ae1:	push   ecx
  416ae2:	in     al,0x3b
  416ae4:	int    0x7b
  416ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ae7:	arpl   WORD PTR [edx+0x414fda9b],ax
  416aed:	popf   
  416aee:	push   ds
  416aef:	pop    ecx
  416af0:	pop    es
  416af1:	popf   
  416af2:	sub    cl,BYTE PTR [eax-0x42]
  416af5:	mov    eax,0xbe826ad9
  416afa:	or     al,0xa
  416afc:	push   ebx
  416afd:	xchg   ecx,eax
  416afe:	mov    eax,ds:0xcac72f9c
  416b03:	or     BYTE PTR [edx-0x410e4e86],ch
  416b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b0a:	mov    ds:0x4dfa38f,eax
  416b0f:	push   ds
  416b10:	jg     0x416a92
  416b12:	xchg   DWORD PTR [bx+si-0x2491],edx
  416b17:	imul   ecx,ebx,0x60
  416b1a:	jne    0x416b28
  416b1c:	stc    
  416b1d:	inc    edi
  416b1e:	dec    ch
  416b20:	out    dx,eax
  416b21:	nop
  416b22:	int3   
  416b23:	xchg   ecx,eax
  416b24:	mov    dl,0xd1
  416b26:	cmp    al,BYTE PTR [ecx+0x1d043ab9]
  416b2c:	push   ecx
  416b2d:	daa    
  416b2e:	pop    ds
  416b2f:	(bad)  
  416b30:	ds cmc 
  416b32:	sbb    esi,DWORD PTR [ebp+0x2b]
  416b35:	pop    eax
  416b36:	cli    
  416b37:	adc    al,0x6e
  416b39:	mov    bh,0xb
  416b3b:	push   edx
  416b3c:	jl     0x416b4a
  416b3e:	mov    esi,0xd78eaf33
  416b43:	inc    edx
  416b44:	jecxz  0x416b3a
  416b46:	(bad)  
  416b47:	(bad)  
  416b48:	adc    BYTE PTR [eax+0x7caef724],ch
  416b4e:	das    
  416b4f:	(bad)  
  416b50:	leave  
  416b51:	test   BYTE PTR [edi-0x74143590],0x27
  416b58:	mov    edx,0xd7a42416
  416b5d:	mov    cl,0x5e
  416b5f:	loopne 0x416b69
  416b61:	adc    al,0xaf
  416b63:	out    0xcf,eax
  416b65:	xchg   edi,eax
  416b66:	test   eax,0x19799a8b
  416b6b:	les    ecx,FWORD PTR [edx+eiz*8-0x2461e48f]
  416b72:	test   al,0x94
  416b74:	retf   0x7144
  416b77:	dec    ebx
  416b78:	loope  0x416b27
  416b7a:	push   ecx
  416b7b:	popa   
  416b7c:	pushf  
  416b7d:	inc    esp
  416b7e:	dec    ecx
  416b7f:	pop    ecx
  416b80:	call   0x1c04:0x435e8aaf
  416b87:	mov    eax,0x7ed6265c
  416b8c:	inc    edi
  416b8d:	jle    0x416bc7
  416b8f:	xlat   BYTE PTR ds:[ebx]
  416b90:	fldenv [esi+0x39]
  416b93:	sub    eax,0xcb9ad06
  416b98:	outs   dx,DWORD PTR ds:[esi]
  416b99:	cmp    esp,DWORD PTR [ebx]
  416b9b:	ins    DWORD PTR es:[edi],dx
  416b9c:	pusha  
  416b9d:	imul   esi,DWORD PTR [edx+eiz*2+0x27],0x9
  416ba2:	test   BYTE PTR gs:[ebx+eax*4-0x31],cl
  416ba7:	xor    eax,0x855d94e
  416bac:	push   0xbcaf0b4f
  416bb1:	mov    dh,0x7f
  416bb3:	mov    eax,0xdde38cd0
  416bb8:	loopne 0x416c1f
  416bba:	or     edx,DWORD PTR [esi]
  416bbc:	jno    0x416b78
  416bbe:	xchg   ecx,eax
  416bbf:	jno    0x416bab
  416bc1:	sbb    al,dl
  416bc3:	mov    ebx,0xa71c325d
  416bc8:	mov    esi,0x5f543192
  416bcd:	ss or  eax,0x6f0d8d74
  416bd3:	or     esp,DWORD PTR [ebx-0x36cf8c93]
  416bd9:	mov    esi,0x3b35558e
  416bde:	push   cs
  416bdf:	js     0x9a47e1b9
  416be5:	push   esi
  416be6:	xchg   edi,eax
  416be7:	or     al,0xba
  416be9:	lds    edi,FWORD PTR [esi+0x40]
  416bec:	jmp    0x4edfca83
  416bf1:	mov    edi,0x1db14e77
  416bf6:	inc    ebx
  416bf7:	dec    ebp
  416bf8:	push   ebp
  416bf9:	add    al,0x12
  416bfb:	mov    edx,DWORD PTR [edx+0x6f0ebfa5]
  416c01:	idiv   DWORD PTR [ebx+0x30]
  416c04:	test   BYTE PTR [edx+0x50],bl
  416c07:	je     0x416bf8
  416c09:	mov    ebp,0x349c2b14
  416c0e:	aaa    
  416c0f:	xchg   ebp,eax
  416c10:	jecxz  0x416baa
  416c12:	mov    ebp,0xc1996226
  416c17:	ret    
  416c18:	inc    ecx
  416c19:	add    DWORD PTR [edi-0x7a],eax
  416c1c:	adc    BYTE PTR [edi],bh
  416c1e:	jmp    0xd147:0xb8618a69
  416c25:	pop    ds
  416c26:	mov    cl,0xb7
  416c28:	call   FWORD PTR [ebp+0x6ce24710]
  416c2e:	xchg   ecx,eax
  416c2f:	int3   
  416c30:	dec    ebp
  416c31:	out    0x73,al
  416c33:	jb     0x416c16
  416c35:	ror    BYTE PTR [esi-0x2ae6ab8f],cl
  416c3b:	gs jmp 0xd71e20b8
  416c41:	push   edx
  416c42:	dec    esp
  416c43:	nop
  416c44:	add    al,BYTE PTR [eax]
  416c46:	das    
  416c47:	push   ds
  416c48:	jmp    0x416bfb
  416c4a:	mov    cs,esi
  416c4c:	std    
  416c4d:	cmp    DWORD PTR [ebx+eax*1+0x61dc31ae],edi
  416c54:	test   BYTE PTR [ebp-0x6d],al
  416c57:	mov    ecx,0xbec63535
  416c5c:	loope  0x416cb3
  416c5e:	jbe    0x416c46
  416c60:	fldcw  WORD PTR [edi-0x1c0bb926]
  416c66:	cmp    dh,dl
  416c68:	xchg   esi,eax
  416c69:	and    BYTE PTR [ebx],dl
  416c6b:	adc    DWORD PTR [eax+0x73],esi
  416c6e:	cs loope 0x416c2f
  416c71:	aaa    
  416c72:	arpl   WORD PTR [esi-0x1219955],sp
  416c78:	(bad)  
  416c79:	jnp    0x416cf6
  416c7b:	fnsave [ecx]
  416c7d:	and    BYTE PTR [ebp+ebp*1-0x6e],bl
  416c81:	adc    BYTE PTR [edi],dl
  416c83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c84:	dec    ecx
  416c85:	pop    eax
  416c86:	repnz add eax,0xa2733f29
  416c8c:	out    0xf6,al
  416c8e:	add    ah,BYTE PTR [eax+0x64]
  416c91:	mov    edi,0x1562a53
  416c96:	lods   al,BYTE PTR ds:[esi]
  416c97:	add    BYTE PTR [edi],cl
  416c99:	push   eax
  416c9a:	adc    eax,0x12f264cb
  416c9f:	inc    edi
  416ca0:	stos   BYTE PTR es:[edi],al
  416ca1:	jne    0x416cf7
  416ca3:	mov    esp,0x3c354e00
  416ca8:	mov    ebp,0x3543a263
  416cad:	dec    esp
  416cae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416caf:	jp     0x416cb6
  416cb1:	mov    ds:0x830d3e43,al
  416cb6:	in     eax,0xed
  416cb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cb9:	test   eax,0xd63e8436
  416cbe:	das    
  416cbf:	out    dx,al
  416cc0:	add    eax,0x1d24a45
  416cc5:	jmp    0x416ce0
  416cc7:	fild   WORD PTR [esi]
  416cc9:	loopne 0x416cb6
  416ccb:	imul   ebp,DWORD PTR [eax-0x3d1cbb03],0x3
  416cd2:	inc    DWORD PTR [edi+0xa759f56]
  416cd8:	mov    ss,WORD PTR [edx+0x63]
  416cdb:	aad    0x61
  416cdd:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cdf:	mov    esi,0xb01b008d
  416ce4:	fs mov bl,0xbd
  416ce7:	sahf   
  416ce8:	sar    BYTE PTR [ebx],0x6a
  416ceb:	stc    
  416cec:	jnp    0x416d5d
  416cee:	lock mov dl,BYTE PTR [edx-0x3533f7cd]
  416cf5:	add    edi,edi
  416cf7:	repz fild WORD PTR [edi+esi*4]
  416cfb:	ja     0x416ca9
  416cfd:	arpl   WORD PTR [ecx],dx
  416cff:	lds    esp,FWORD PTR [edx+0x7a74609a]
  416d05:	jl     0x416cdd
  416d07:	lds    esi,FWORD PTR [ebp+0x68cea630]
  416d0d:	push   cs
  416d0e:	sbb    esi,DWORD PTR [esi+0x2f2e4e75]
  416d14:	lods   al,BYTE PTR ds:[esi]
  416d15:	jns    0x416c9e
  416d17:	mov    ?,WORD PTR [ecx-0x71]
  416d1a:	jne    0x416d43
  416d1c:	sub    ebp,DWORD PTR [eax+0x61]
  416d1f:	xor    al,BYTE PTR [eax+0x2f]
  416d22:	cdq    
  416d23:	add    BYTE PTR [ecx-0x77656106],bl
  416d29:	out    0xdd,al
  416d2b:	cmp    BYTE PTR ds:0xe76ffe6f,ah
  416d31:	sahf   
  416d32:	adc    cl,BYTE PTR [esi+0x3b]
  416d35:	stos   BYTE PTR es:[edi],al
  416d36:	ins    BYTE PTR es:[edi],dx
  416d37:	adc    DWORD PTR ds:0x4bc3af5b,ebp
  416d3d:	fild   QWORD PTR [edx+0x3b]
  416d40:	jno    0x416d4e
  416d42:	cmp    eax,0xc17592df
  416d47:	dec    eax
  416d48:	cmp    bh,ah
  416d4a:	dec    esp
  416d4b:	add    DWORD PTR [ebx],0x5
  416d4e:	fisub  WORD PTR [esi]
  416d50:	or     al,0xa9
  416d52:	iret   
  416d53:	enter  0x3041,0xfd
  416d57:	mov    esp,0x46639d54
  416d5c:	push   eax
  416d5d:	call   0x837:0xdba774d0
  416d64:	dec    eax
  416d65:	fcomp  st(4)
  416d67:	sub    al,0x3a
  416d69:	addr16 or ah,bh
  416d6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d6d:	inc    esi
  416d6e:	and    DWORD PTR [ebx+0x0],edi
  416d71:	or     BYTE PTR [esp+esi*8-0x346989d6],bl
  416d78:	dec    DWORD PTR [ecx]
  416d7a:	not    DWORD PTR [ebx+0x6b8877de]
  416d80:	nop
  416d81:	jmp    esi
  416d83:	iret   
  416d84:	pop    ebp
  416d85:	jae    0x416da5
  416d87:	xchg   edx,eax
  416d88:	push   ss
  416d89:	jb     0x416dc1
  416d8b:	push   ebx
  416d8c:	push   ds
  416d8d:	mov    bh,0x7a
  416d8f:	push   ebx
  416d90:	sti    
  416d91:	mov    cl,0x7f
  416d93:	out    dx,al
  416d94:	fild   QWORD PTR [edx-0x34]
  416d97:	sbb    BYTE PTR [eax],cl
  416d99:	out    0x69,eax
  416d9b:	jp     0x416d28
  416d9d:	adc    edx,DWORD PTR [esi+0x62]
  416da0:	call   0xebc:0x835786cb
  416da7:	ret    
  416da8:	xor    DWORD PTR [ebp+0x1c],0xdbd9a382
  416daf:	mov    bh,0xb7
  416db1:	in     eax,0x5c
  416db3:	shr    DWORD PTR [esp+edi*4+0x32],cl
  416db7:	jo     0x416e21
  416db9:	mov    bh,BYTE PTR [eax+0x29]
  416dbc:	fld    DWORD PTR [eax-0x50]
  416dbf:	in     eax,0x11
  416dc1:	or     al,0x65
  416dc3:	or     dl,al
  416dc5:	adc    eax,0xc5b513ad
  416dca:	gs ja  0x416e3e
  416dcd:	shl    DWORD PTR [ebx],0x7a
  416dd0:	adc    DWORD PTR [ecx-0x2a],edx
  416dd3:	pop    ss
  416dd4:	(bad)  
  416dd5:	cmp    ecx,DWORD PTR [edx+0x76]
  416dd8:	adc    ebp,esi
  416dda:	leave  
  416ddb:	xchg   esp,eax
  416ddc:	lea    ebx,[eax+0xd]
  416ddf:	adc    bh,dl
  416de1:	loop   0x416e02
  416de3:	xor    al,0x74
  416de5:	shl    ch,cl
  416de7:	add    ecx,ebp
  416de9:	fwait
  416dea:	sub    ecx,DWORD PTR [edx+0x59]
  416ded:	push   eax
  416dee:	ins    DWORD PTR es:[edi],dx
  416def:	aaa    
  416df0:	or     ebx,0x4b
  416df3:	test   edx,ecx
  416df5:	adc    DWORD PTR [esi+0x2f9f689c],0x18
  416dfc:	popf   
  416dfd:	sbb    al,0x8b
  416dff:	or     bh,cl
  416e01:	jo     0x416dac
  416e03:	fnstcw WORD PTR [edi+0x11]
  416e06:	add    al,0x98
  416e08:	cmp    DWORD PTR [eax+0x25],edx
  416e0b:	inc    ebp
  416e0c:	int    0x92
  416e0e:	(bad)  
  416e10:	jbe    0x416db1
  416e12:	jge    0x416dd3
  416e14:	jno    0x416e75
  416e16:	mov    ch,0x12
  416e18:	mov    edx,0xd2faa90e
  416e1d:	and    DWORD PTR ds:0x66cd0cf8,esi
  416e23:	mov    DWORD PTR [ecx],ebx
  416e25:	jnp    0x416e8f
  416e27:	rcr    DWORD PTR [edi+0x613e3ef0],cl
  416e2d:	push   edx
  416e2e:	mov    ecx,eax
  416e30:	jle    0x2429f2a7
  416e36:	outs   dx,DWORD PTR ds:[esi]
  416e37:	pop    esp
  416e38:	xchg   ebp,eax
  416e39:	mov    ebp,0x72cdc2a8
  416e3e:	mov    BYTE PTR [ebx+0x7d],dl
  416e41:	imul   ebx,esp,0xfffffff9
  416e44:	fs (bad) 
  416e47:	std    
  416e48:	push   eax
  416e49:	retf   0x6bab
  416e4c:	xchg   ebx,eax
  416e4d:	and    eax,0xbb61028e
  416e52:	(bad)
  416e57:	and    eax,0x3eed78f1
  416e5c:	xor    eax,0xfb0de40a
  416e61:	retf   0x47ad
  416e64:	fisub  DWORD PTR [edx-0x73]
  416e67:	in     al,dx
  416e68:	ficom  DWORD PTR [edx-0x4b]
  416e6b:	and    DWORD PTR [edi+ebp*8],ecx
  416e6e:	mov    esi,0x201d4762
  416e73:	nop
  416e74:	das    
  416e75:	sub    esp,DWORD PTR [ebx]
  416e77:	ja     0x416eea
  416e79:	adc    ah,bh
  416e7b:	(bad)  
  416e7c:	stc    
  416e7d:	add    DWORD PTR [eax-0x43730e6e],0x43
  416e84:	lds    ebx,FWORD PTR [edx-0x238b3fce]
  416e8a:	or     ah,bh
  416e8c:	or     ebp,DWORD PTR [edi+0x1d]
  416e8f:	and    BYTE PTR [ebp+0x53],al
  416e92:	mov    edi,0xf22dd13f
  416e97:	clc    
  416e98:	leave  
  416e99:	ret    
  416e9a:	test   al,0x32
  416e9c:	and    bl,al
  416e9e:	ficom  DWORD PTR [ecx+0x72c4cb11]
  416ea4:	push   ecx
  416ea5:	adc    BYTE PTR [edi],al
  416ea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ea9:	xchg   ebx,eax
  416eaa:	sub    BYTE PTR [edx-0x33864fb4],bh
  416eb0:	jo     0x416e8a
  416eb2:	xchg   BYTE PTR [esi],bh
  416eb4:	loop   0x416ea5
  416eb6:	or     BYTE PTR [ebp+0x74],bl
  416eb9:	cdq    
  416eba:	mov    al,ds:0x8289fd70
  416ebf:	(bad)  
  416ec0:	das    
  416ec1:	adc    BYTE PTR [esp+edx*8+0x6b576164],0xc
  416ec9:	stc    
  416eca:	or     al,0x3e
  416ecc:	clc    
  416ecd:	cmp    BYTE PTR [ecx-0x44],al
  416ed0:	adc    DWORD PTR [esi+edi*8+0x40],esi
  416ed4:	das    
  416ed5:	dec    edi
  416ed6:	out    0x1d,al
  416ed8:	mov    ecx,0x5c47c81a
  416edd:	xchg   esp,eax
  416ede:	div    BYTE PTR [eax]
  416ee0:	int3   
  416ee1:	hlt    
  416ee2:	sub    BYTE PTR [ecx-0xd],ah
  416ee5:	out    0xd,al
  416ee7:	jne    0x416e7e
  416ee9:	or     DWORD PTR [eax-0x44358f67],0x5d
  416ef0:	jns    0x416f55
  416ef2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ef3:	aas    
  416ef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ef5:	shl    ebx,1
  416ef7:	and    eax,0xa86da823
  416efc:	into   
  416efd:	(bad)  
  416efe:	shl    BYTE PTR fs:[ebx],1
  416f01:	shr    BYTE PTR [ebx],1
  416f03:	retf   0xce2b
  416f06:	jmp    0x41928f
  416f0b:	adc    ah,BYTE PTR [edx+0xe708f7]
  416f11:	test   BYTE PTR [eax+0x9a72d6],bl
  416f17:	lahf   
  416f18:	xchg   esp,eax
  416f19:	adc    al,BYTE PTR [edx-0x7c7dbf6d]
  416f1f:	pop    ss
  416f20:	pop    esp
  416f21:	add    DWORD PTR [ebx+0x764aa49f],0x27
  416f28:	mov    ecx,0x8a111294
  416f2d:	dec    esp
  416f2e:	jge    0x416eee
  416f30:	es jp  0x416f27
  416f33:	daa    
  416f34:	pop    esp
  416f35:	adc    BYTE PTR [esp+eiz*4],dl
  416f38:	out    0x94,eax
  416f3a:	xor    eax,0xa97b14a1
  416f3f:	sti    
  416f40:	add    al,0xb5
  416f42:	test   al,0x70
  416f44:	pop    ds
  416f45:	bnd jle 0x416fa4
  416f48:	xchg   esi,eax
  416f49:	push   ebp
  416f4a:	push   esp
  416f4b:	jle    0x416f56
  416f4d:	out    0xca,al
  416f4f:	jp     0x416f9b
  416f51:	data16 clc 
  416f53:	cld    
  416f54:	pop    esp
  416f55:	add    ah,dh
  416f57:	mov    ?,ebp
  416f59:	outs   dx,DWORD PTR ds:[esi]
  416f5a:	sub    bl,BYTE PTR [edx]
  416f5c:	test   BYTE PTR [ecx+esi*4],al
  416f5f:	mov    bh,0xf1
  416f61:	retf   0x2a69
  416f64:	out    dx,eax
  416f65:	adc    ah,BYTE PTR [ecx]
  416f67:	inc    ebp
  416f68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f69:	mov    bl,0xe3
  416f6b:	shr    BYTE PTR [edi+0x74b1fd75],0x6e
  416f72:	mov    ecx,0x1dda39e9
  416f77:	adc    DWORD PTR [eax+ebp*4-0x267ee2f7],eax
  416f7e:	pop    edi
  416f7f:	jae    0x416fab
  416f81:	setge  BYTE PTR [ebx+ebx*2-0x1bee4c2]
  416f89:	sbb    al,0xbf
  416f8b:	ds push ss
  416f8d:	in     al,0x17
  416f8f:	add    BYTE PTR [ebp-0x7949e25],bh
  416f95:	cmp    ch,BYTE PTR [ecx+esi*2]
  416f98:	add    BYTE PTR [esi+edi*2],dl
  416f9b:	sub    ch,BYTE PTR ds:0x6d1a4d9d
  416fa1:	fisub  WORD PTR [edx-0x7]
  416fa4:	jle    0x41700a
  416fa6:	arpl   WORD PTR [ecx+0x19],sp
  416fa9:	sub    esp,edx
  416fab:	mov    edi,0x4b74ffa8
  416fb0:	xchg   esp,eax
  416fb1:	mov    ss,WORD PTR [edi+0x3a]
  416fb4:	fs repnz (bad) 
  416fb7:	mov    ch,0x35
  416fb9:	(bad)  
  416fba:	je     0x416fae
  416fbc:	je     0x417026
  416fbe:	cmc    
  416fbf:	add    BYTE PTR [ebx-0x53],dl
  416fc2:	ffree  st(2)
  416fc4:	push   ecx
  416fc5:	jmp    0x416ff5
  416fc7:	mov    bl,0x9f
  416fc9:	mov    esp,0x255de0b9
  416fce:	mov    al,0xb2
  416fd0:	xor    eax,0xa736e271
  416fd5:	sub    ecx,edi
  416fd7:	mov    WORD PTR [ebx-0x77],es
  416fda:	add    bh,BYTE PTR [edx]
  416fdc:	test   edx,edi
  416fde:	imul   edx,DWORD PTR [edi-0x72],0xa79eb21b
  416fe5:	push   esi
  416fe6:	jae    0x416fd3
  416fe8:	mov    ch,0x1
  416fea:	jbe    0x417068
  416fec:	popf   
  416fed:	sub    DWORD PTR [ecx],esp
  416fef:	test   BYTE PTR [eax+eiz*4-0x1e],al
  416ff3:	int    0x7f
  416ff5:	xchg   esp,eax
  416ff6:	in     eax,0xe9
  416ff8:	(bad)  ds:0x3364d01a
  416ffe:	retf   0x3c81
  417001:	push   ecx
  417002:	icebp  
  417003:	imul   edi,DWORD PTR [ebx-0x664cd17d],0x3f
  41700a:	jne    0x417054
  41700c:	mov    al,ds:0x79f5a126
  417011:	fisubr WORD PTR [ecx-0x62]
  417014:	pop    DWORD PTR [ebp-0x5a675435]
  41701a:	bound  esi,QWORD PTR [edx+ecx*4+0x1e]
  41701e:	(bad)  
  41701f:	lock mov ecx,0x96e8b335
  417025:	popf   
  417026:	mov    al,ds:0xa1de3042
  41702b:	sbb    eax,0x1a3f2104
  417030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417031:	sub    DWORD PTR [ecx],eax
  417033:	clc    
  417034:	(bad)  
  417035:	and    edi,ebx
  417037:	mov    DWORD PTR [ecx],0x24f7dcbb
  41703d:	dec    edi
  41703e:	fwait
  41703f:	xor    cl,BYTE PTR [ebx]
  417041:	dec    eax
  417042:	test   eax,0x2fc37677
  417047:	pop    ecx
  417048:	mov    ds:0x3afce1d7,eax
  41704d:	jns    0x41708a
  41704f:	sub    al,0x26
  417051:	mov    ebx,0xbc3f50be
  417056:	dec    ebp
  417057:	fwait
  417058:	and    al,0x1f
  41705a:	inc    dl
  41705c:	xchg   edi,eax
  41705d:	mov    ds:0x28bf7786,al
  417062:	repz jl 0x416fea
  417065:	jge    0x4170e3
  417067:	cdq    
  417068:	and    DWORD PTR [ebx+eax*2-0x53],0x3c
  41706d:	xor    eax,DWORD PTR [edx]
  41706f:	nop
  417070:	cld    
  417071:	and    al,0x4c
  417073:	hlt    
  417074:	xlat   BYTE PTR ds:[ebx]
  417075:	mov    ?,WORD PTR [ecx]
  417077:	call   0x69734695
  41707c:	add    ebp,DWORD PTR [edi-0x44fe25f7]
  417082:	add    BYTE PTR [edx-0x640d2ee5],0x62
  417089:	jbe    0x41703d
  41708b:	shl    BYTE PTR [edi],cl
  41708d:	(bad)  
  41708e:	sahf   
  41708f:	repnz mov al,0x1d
  417092:	and    eax,0x72cef312
  417097:	cmc    
  417098:	dec    ebx
  417099:	jg     0x417112
  41709b:	xor    BYTE PTR [ecx+0x70],bl
  41709e:	popf   
  41709f:	aad    0x69
  4170a1:	pushf  
  4170a2:	enter  0x2d33,0x4d
  4170a6:	mov    eax,ds:0xd99c653d
  4170ab:	mov    ebp,0x187f35fb
  4170b0:	sub    eax,0x827d88bc
  4170b5:	out    dx,eax
  4170b6:	out    0xe0,al
  4170b8:	ins    BYTE PTR es:[edi],dx
  4170b9:	add    BYTE PTR [eax+0xf],ch
  4170bc:	push   es
  4170bd:	ja     0x41709e
  4170bf:	loop   0x4170c5
  4170c1:	mov    ds:0xfb2f600b,al
  4170c6:	sbb    al,BYTE PTR [edx]
  4170c8:	adc    cl,ah
  4170ca:	cld    
  4170cb:	jae    0x41708d
  4170cd:	sub    al,0xbb
  4170cf:	test   eax,0x836b30d1
  4170d4:	leave  
  4170d5:	(bad)  
  4170d6:	cmp    ecx,DWORD PTR [ecx]
  4170d8:	loop   0x41708c
  4170da:	dec    esp
  4170db:	ret    
  4170dc:	xchg   BYTE PTR [edi-0x50],ah
  4170df:	jmp    0x417080
  4170e1:	add    BYTE PTR [ebx+esi*1-0x48],bh
  4170e5:	mov    eax,0x5952e337
  4170ea:	out    dx,al
  4170eb:	retf   
  4170ec:	inc    eax
  4170ed:	(bad)  
  4170ee:	(bad)  
  4170ef:	out    dx,eax
  4170f0:	pop    eax
  4170f1:	adc    eax,0x9249d742
  4170f6:	pop    ds
  4170f7:	shl    BYTE PTR [ecx+ebp*8],1
  4170fa:	loope  0x4170fe
  4170fc:	push   ebx
  4170fd:	bound  edx,QWORD PTR [edi-0x37205b6b]
  417103:	ins    BYTE PTR es:[edi],dx
  417104:	leave  
  417105:	cmp    DWORD PTR [edx-0xe157c76],esi
  41710b:	adc    al,0xd
  41710d:	sar    DWORD PTR fs:[edx+0x14f68ed4],1
  417114:	jge    0x4170dd
  417116:	jl     0x41718b
  417118:	mov    edx,0x2040c54d
  41711d:	dec    esp
  41711e:	sub    bl,ah
  417120:	push   edx
  417121:	pop    eax
  417122:	xor    ecx,esp
  417124:	xchg   ax,ax
  417126:	lods   al,BYTE PTR ds:[esi]
  417127:	jae    0x417146
  417129:	outs   dx,DWORD PTR ds:[esi]
  41712a:	(bad)  
  41712b:	aas    
  41712c:	mov    dh,0x1c
  41712e:	mov    bh,0x86
  417130:	nop
  417131:	ret    0xb931
  417134:	push   es
  417135:	xor    DWORD PTR [ebx],ecx
  417137:	add    al,0x7d
  417139:	sub    DWORD PTR [ebx+eax*2],0x1
  41713d:	lds    esp,FWORD PTR cs:[ebp-0x364a569b]
  417144:	sbb    eax,eax
  417146:	js     0x4171b4
  417148:	inc    ebx
  417149:	add    ah,BYTE PTR ds:0xceeeb9c5
  41714f:	add    edx,DWORD PTR [ebx]
  417151:	data16 fist DWORD PTR [ecx+0x50]
  417155:	lods   eax,DWORD PTR ds:[esi]
  417156:	sbb    ebp,ebp
  417158:	lods   al,BYTE PTR ds:[esi]
  417159:	push   ss
  41715a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41715b:	adc    DWORD PTR [ebx+0x56382305],ebp
  417161:	je     0x417124
  417163:	ret    
  417164:	or     al,0xe5
  417166:	adc    DWORD PTR [ebx+0x5c],ebx
  417169:	inc    esi
  41716a:	stos   BYTE PTR es:[edi],al
  41716b:	ficomp WORD PTR [esi]
  41716d:	aas    
  41716e:	xchg   esp,eax
  41716f:	adc    BYTE PTR ds:0xabf27e30,dl
  417175:	mov    ebx,0xe85a3195
  41717a:	jo     0x4171ef
  41717c:	inc    ebx
  41717d:	jge    0x417162
  41717f:	retf   0x4d3f
  417182:	cdq    
  417183:	push   ds
  417184:	xchg   DWORD PTR ds:[eax],ecx
  417187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417188:	push   0xffffffee
  41718a:	out    0x65,al
  41718c:	push   edi
  41718e:	mov    ecx,0x20ed074e
  417193:	jnp    0x41719b
  417195:	jecxz  0x41713f
  417197:	dec    ebx
  417198:	(bad)  
  417199:	cdq    
  41719a:	mov    al,ss:0x68601c98
  4171a0:	(bad)
  4171a4:	clc    
  4171a5:	fist   DWORD PTR [edi]
  4171a7:	sub    al,0x4d
  4171a9:	lahf   
  4171aa:	mov    al,BYTE PTR [ecx+edi*2]
  4171ad:	xchg   esi,eax
  4171ae:	(bad)  
  4171af:	sbb    DWORD PTR [esi+esi*1-0x15],edi
  4171b3:	mov    WORD PTR [ecx-0x3a],ds
  4171b6:	ins    DWORD PTR es:[edi],dx
  4171b7:	test   dl,cl
  4171b9:	mov    al,0x3b
  4171bb:	cmp    ebp,ecx
  4171bd:	and    ax,0x637c
  4171c1:	pusha  
  4171c2:	es inc ebx
  4171c4:	jle    0x417184
  4171c6:	ret    0x407e
  4171c9:	mov    eax,ds:0xa5bf4495
  4171ce:	and    esp,DWORD PTR [edi-0x6]
  4171d1:	sbb    eax,0x92e5bd80
  4171d6:	aad    0x3d
  4171d8:	mov    cl,0xdd
  4171da:	fstp   st(1)
  4171dc:	sbb    ah,BYTE PTR [eax+0x757bcce6]
  4171e2:	icebp  
  4171e3:	fild   QWORD PTR [ebp-0x69bfc7c7]
  4171e9:	je     0x41723e
  4171eb:	mov    eax,ds:0x68df284a
  4171f0:	aaa    
  4171f1:	xchg   ebx,eax
  4171f2:	loop   0x41717d
  4171f4:	lock add eax,esi
  4171f7:	or     DWORD PTR [edi-0x6ad21624],edx
  4171fd:	jo     0x41720f
  4171ff:	mov    edx,0xbe3dd55a
  417204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417205:	or     ebp,esi
  417207:	test   DWORD PTR [ebp+0x60],esp
  41720a:	shr    esp,cl
  41720c:	add    BYTE PTR [ebx+0xd8ea705],dl
  417212:	push   0xb70f83ea
  417217:	rcr    DWORD PTR [edi-0x54],1
  41721a:	loop   0x41728f
  41721c:	jg     0x417278
  41721e:	mov    esi,eax
  417220:	je     0x417270
  417222:	jns    0x417297
  417224:	ins    BYTE PTR es:[edi],dx
  417225:	xchg   ecx,eax
  417226:	fsub   DWORD PTR [ecx+0x67]
  417229:	mul    DWORD PTR [ebx+edx*8+0x6d]
  41722d:	sub    al,0xcd
  41722f:	xchg   esp,eax
  417230:	out    dx,al
  417231:	push   esi
  417232:	lods   al,BYTE PTR ds:[esi]
  417233:	push   0x606bca1c
  417238:	dec    eax
  417239:	fldcw  WORD PTR [esi-0x4d482095]
  41723f:	iret   
  417240:	out    dx,al
  417241:	sbb    eax,0x57f8823f
  417246:	lock inc edx
  417248:	inc    ebp
  417249:	repz jo 0x417286
  41724c:	sub    BYTE PTR [eax-0x229b2fa0],0xa4
  417253:	fild   WORD PTR [esi*4+0x5f07d0be]
  41725a:	aas    
  41725b:	les    esi,FWORD PTR [edi]
  41725d:	cmp    ah,0xfd
  417260:	pop    ebx
  417261:	sub    BYTE PTR [edx+ebx*4-0xf],ch
  417265:	xchg   ebp,eax
  417266:	jae    0x4171e9
  417268:	mov    al,ds:0xba769ed3
  41726d:	mov    al,0xa4
  41726f:	out    0xa,al
  417271:	sbb    DWORD PTR [esi+0x10],esp
  417274:	mov    esp,0xcf7af83a
  417279:	or     esi,edi
  41727b:	inc    esi
  41727c:	cdq    
  41727d:	jae    0x4172ad
  41727f:	in     al,dx
  417280:	dec    ebx
  417281:	rol    eax,1
  417283:	repz push ss
  417285:	inc    esi
  417286:	cwde   
  417287:	fs enter 0xba07,0xff
  41728c:	adc    al,BYTE PTR [eax+0x28]
  41728f:	outs   dx,BYTE PTR ds:[esi]
  417290:	add    eax,0x58fab7de
  417295:	loope  0x41730a
  417297:	xlat   BYTE PTR ds:[ebx]
  417298:	inc    edi
  417299:	jns    0x41723d
  41729b:	clc    
  41729c:	jo     0x417316
  41729e:	in     al,dx
  41729f:	test   ecx,0x2593c565
  4172a5:	imul   ebx,DWORD PTR [ebx-0x23],0xd
  4172a9:	inc    esi
  4172aa:	mov    ds:0x26d32ccf,eax
  4172af:	adc    al,0x52
  4172b1:	aaa    
  4172b2:	out    0x71,eax
  4172b4:	cmp    al,0x1e
  4172b6:	sub    al,0x96
  4172b8:	pop    edi
  4172b9:	mov    dl,0x8a
  4172bb:	mov    cl,0xab
  4172bd:	or     eax,0x75c1e4f
  4172c2:	add    BYTE PTR [ebp+0x726214c2],0x21
  4172c9:	cmp    al,0x6e
  4172cb:	mov    dh,0xeb
  4172cd:	jmp    0x4172a8
  4172cf:	jl     0x41729e
  4172d1:	and    eax,0xb816e3dc
  4172d6:	aas    
  4172d7:	ret    0x1758
  4172da:	jmp    0x41730c
  4172dc:	add    ebp,edx
  4172de:	sbb    al,0x1
  4172e0:	pop    edi
  4172e1:	(bad)  
  4172e2:	ficomp DWORD PTR [ebx+ebx*2]
  4172e5:	jo     0x4172fe
  4172e7:	push   ecx
  4172e8:	data16 and BYTE PTR ss:[ecx],ah
  4172ec:	or     ebx,eax
  4172ee:	das    
  4172ef:	and    al,0x11
  4172f1:	jecxz  0x41731c
  4172f3:	div    BYTE PTR [ebp-0x16]
  4172f6:	dec    edx
  4172f7:	mov    BYTE PTR [ecx+0x1efac940],ah
  4172fd:	dec    ebx
  4172fe:	or     eax,DWORD PTR [ebx-0x53]
  417301:	retf   0xff4b
  417304:	aam    0x65
  417306:	pop    ecx
  417307:	iret   
  417308:	push   ebx
  417309:	jns    0x41729d
  41730b:	xor    esp,DWORD PTR [ebx-0x9]
  41730e:	mov    dh,0x88
  417310:	jl     0x4172cd
  417312:	cmc    
  417313:	add    al,0x94
  417315:	mov    eax,0x92f7b0ee
  41731a:	out    dx,eax
  41731b:	arpl   WORD PTR [edx+0x5b],bx
  41731e:	pusha  
  41731f:	inc    esi
  417320:	xchg   esp,eax
  417321:	js     0x4172f9
  417323:	sti    
  417324:	out    dx,eax
  417325:	call   0xb0c0:0x5cb2e9e6
  41732c:	jno    0x41734f
  41732e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41732f:	fs gs or esi,0x6f6a722d
  417337:	fnsave [ecx+edx*8-0x2b490da6]
  41733e:	dec    edx
  41733f:	sub    ebp,DWORD PTR ds:0x8ec22c4d
  417345:	inc    ecx
  417346:	jns    0x41730c
  417348:	mov    ds:0x6688c8f0,eax
  41734d:	(bad)  
  41734e:	addr16 gs xchg ecx,eax
  417351:	cld    
  417352:	or     edx,edi
  417354:	test   DWORD PTR [edx],ecx
  417356:	xchg   ebx,eax
  417357:	jecxz  0x417300
  417359:	cwde   
  41735a:	adc    dh,BYTE PTR es:[ebp+0x38094e55]
  417361:	mov    eax,0x95833275
  417366:	jmp    0x1485b664
  41736b:	ficom  WORD PTR [esi-0x5f98f54e]
  417371:	sub    DWORD PTR [ebx-0x228b6a14],edi
  417377:	dec    edi
  417378:	cli    
  417379:	sahf   
  41737a:	push   0xcb86ea5b
  41737f:	adc    al,0x81
  417381:	xchg   ebp,eax
  417382:	mov    DWORD PTR [ebp-0x3e97cf82],0x678cffe7
  41738c:	jmp    0x6d24:0xf4f988ae
  417393:	inc    ebx
  417394:	mov    cl,0xb8
  417396:	inc    eax
  417397:	lock xor BYTE PTR cs:[edx+edi*2-0xf],bl
  41739d:	jno    0x417388
  41739f:	and    DWORD PTR es:[ebp-0x7e],esi
  4173a3:	inc    ebx
  4173a4:	out    dx,al
  4173a5:	in     eax,dx
  4173a6:	arpl   WORD PTR [edx],cx
  4173a8:	inc    eax
  4173a9:	jnp    0x417366
  4173ab:	pop    esi
  4173ac:	mov    ebp,edi
  4173ae:	and    eax,0xc64c8c98
  4173b3:	das    
  4173b4:	pop    ebx
  4173b5:	and    DWORD PTR [esi-0x76a3a2a7],edx
  4173bb:	xor    bl,BYTE PTR [eax+0x3f]
  4173be:	or     al,0x99
  4173c0:	les    esi,FWORD PTR [eax]
  4173c2:	data16 shl cl,1
  4173c5:	mov    al,0x5f
  4173c7:	mov    esp,0xf4f681c
  4173cc:	and    al,0xd5
  4173ce:	sub    BYTE PTR [ebp+0x51a1dd0f],al
  4173d4:	fidivr WORD PTR [ebx+0x75]
  4173d7:	lods   eax,DWORD PTR ds:[esi]
  4173d8:	fcom   DWORD PTR [eax+0x5da517a5]
  4173de:	mov    es,WORD PTR [ecx-0x46e1b7c4]
  4173e4:	xor    dh,BYTE PTR [esi-0x2fbcf19b]
  4173ea:	out    0xb0,al
  4173ec:	adc    BYTE PTR [ebp+edx*2-0x5fd41e42],ch
  4173f3:	mov    edx,es
  4173f5:	jbe    0x417422
  4173f7:	iret   
  4173f8:	fild   DWORD PTR ss:[ebx]
  4173fb:	cs enter 0x99ac,0x13
  417400:	xor    al,ch
  417402:	sahf   
  417403:	dec    edi
  417404:	(bad)  
  417405:	sbb    cl,BYTE PTR [eax-0x1d31c468]
  41740b:	lahf   
  41740c:	ins    DWORD PTR es:[edi],dx
  41740d:	fmul   QWORD PTR [ebx-0x27]
  417410:	ja     0x4173d5
  417412:	aaa    
  417413:	mov    dl,0xb
  417415:	cwde   
  417416:	in     al,dx
  417417:	loopne 0x4173c1
  417419:	fstp   TBYTE PTR [ebp+0x62]
  41741c:	ja     0x41742e
  41741e:	loopne 0x4173e4
  417420:	sbb    edx,DWORD PTR [edx+0x40]
  417423:	sahf   
  417424:	imul   ch
  417426:	scas   eax,DWORD PTR es:[edi]
  417427:	mov    esi,0x9525b012
  41742c:	jmp    0x6271e476
  417431:	add    BYTE PTR [ebx+0x32676b8f],ch
  417437:	push   0xffffffa4
  417439:	repz in eax,0xc7
  41743c:	sub    edx,DWORD PTR [edi+0x5b]
  41743f:	popf   
  417440:	aaa    
  417441:	cmp    ebp,DWORD PTR ds:0xc45eda70
  417447:	test   BYTE PTR [esi+0x325ed705],dh
  41744d:	jecxz  0x41740b
  41744f:	repnz or eax,0x9c059212
  417455:	sub    bh,ah
  417457:	xchg   ebx,eax
  417458:	mov    ?,WORD PTR [ecx]
  41745a:	cwde   
  41745b:	sti    
  41745c:	push   ss
  41745d:	mov    WORD PTR [eax],?
  41745f:	stos   DWORD PTR es:[edi],eax
  417460:	sbb    edx,DWORD PTR [ecx]
  417462:	scas   al,BYTE PTR es:[edi]
  417463:	mov    ch,0xc2
  417465:	mov    DWORD PTR [eax+ecx*4-0x28],ecx
  417469:	fwait
  41746a:	and    eax,0xddcaf257
  41746f:	neg    DWORD PTR [edx+eiz*8+0x47f39cb]
  417476:	sbb    eax,0xf54b8365
  41747b:	mov    eax,0xa8b4a727
  417480:	pop    eax
  417481:	mov    ch,0x6c
  417483:	mov    cs,WORD PTR [edi+0x12cc15fc]
  417489:	sbb    DWORD PTR [esi+0x17a99e81],0xffffffba
  417490:	inc    esi
  417491:	gs and eax,0x95dbda5d
  417497:	sbb    DWORD PTR [eax],eax
  417499:	ds inc ebp
  41749b:	into   
  41749c:	jg     0x417451
  41749e:	adc    al,0xc3
  4174a0:	push   eax
  4174a1:	lds    eax,FWORD PTR [edx-0xbcb06da]
  4174a7:	mov    edx,DWORD PTR [eax+ecx*8-0x2]
  4174ab:	pop    ebp
  4174ac:	mov    eax,ds:0xce3e6f20
  4174b1:	push   ecx
  4174b2:	ins    BYTE PTR es:[edi],dx
  4174b3:	ffreep st(6)
  4174b5:	cdq    
  4174b6:	add    esi,ebx
  4174b8:	fisttp QWORD PTR [esi-0x4a834c2a]
  4174be:	stc    
  4174bf:	ret    
  4174c0:	sar    BYTE PTR ds:0x8e0be80c,cl
  4174c6:	cld    
  4174c7:	pop    ss
  4174c8:	leave  
  4174c9:	fist   DWORD PTR [esi+eax*2]
  4174cc:	test   BYTE PTR [eax+0x6f],ch
  4174cf:	stos   DWORD PTR es:[edi],eax
  4174d0:	leave  
  4174d1:	loope  0x41751d
  4174d3:	out    dx,al
  4174d4:	(bad)  
  4174d5:	fisttp WORD PTR [edx+ebp*4]
  4174d8:	jge    0x417479
  4174da:	and    al,0xda
  4174dc:	push   cs
  4174dd:	and    al,0x6f
  4174df:	or     eax,0x9af437f2
  4174e4:	cs daa 
  4174e6:	jecxz  0x417546
  4174e8:	(bad)  
  4174e9:	jl     0x4174d9
  4174eb:	xchg   DWORD PTR [esi],ebx
  4174ed:	and    dh,ah
  4174ef:	xor    ebp,DWORD PTR [edi-0x4519fa62]
  4174f5:	cli    
  4174f6:	push   0xc8496bdd
  4174fb:	fdivrp st(5),st
  4174fd:	add    al,0xce
  4174ff:	pushf  
  417500:	(bad)  
  417501:	or     ecx,ebx
  417503:	cwde   
  417504:	clc    
  417505:	mov    ch,0x75
  417507:	pusha  
  417508:	gs icebp 
  41750a:	cdq    
  41750b:	jb     0x41755d
  41750d:	js     0x4174ec
  41750f:	or     BYTE PTR ds:0x1f5529ce,ch
  417515:	mov    dl,0xb
  417517:	mov    ebx,0x88faaa77
  41751c:	push   edx
  41751d:	mov    al,dh
  41751f:	shl    BYTE PTR [edi],0xca
  417522:	js     0x41756d
  417524:	sar    DWORD PTR [edx],cl
  417526:	inc    edx
  417527:	jb     0x417565
  417529:	and    ebp,edi
  41752b:	stos   DWORD PTR es:[edi],eax
  41752c:	sbb    dl,BYTE PTR [eax+0x56995705]
  417532:	xor    bh,BYTE PTR [edx+0x3014d025]
  417538:	inc    eax
  417539:	into   
  41753a:	daa    
  41753b:	cli    
  41753c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41753d:	loope  0x417521
  41753f:	popf   
  417540:	ror    ebp,1
  417542:	push   ds
  417543:	bts    ebx,esi
  417546:	fstp   TBYTE PTR [ebx]
  417548:	es jno 0x41755a
  41754b:	xchg   ebp,eax
  41754c:	add    al,0xd7
  41754e:	push   ds
  41754f:	push   0x16
  417551:	cld    
  417552:	ins    DWORD PTR es:[edi],dx
  417553:	and    al,0xb2
  417555:	mov    edx,0xbac96246
  41755a:	xchg   ebx,eax
  41755b:	daa    
  41755c:	ins    BYTE PTR es:[edi],dx
  41755d:	sbb    al,bl
  41755f:	sbb    esp,DWORD PTR [eax-0x9]
  417562:	aaa    
  417563:	sbb    al,0x47
  417565:	clc    
  417566:	js     0x4175a4
  417568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417569:	push   0xffffff89
  41756b:	xchg   BYTE PTR [edi+0x36f93fb5],bl
  417571:	jmp    0x59e8:0x58b4b31d
  417578:	popa   
  417579:	push   esi
  41757a:	loop   0x417506
  41757c:	mov    ch,0x26
  41757e:	xor    al,bh
  417580:	ret    0x7675
  417583:	loop   0x417563
  417585:	aaa    
  417586:	xor    al,0xff
  417588:	dec    esp
  417589:	pop    es
  41758a:	jle    0x4175b5
  41758c:	sbb    dl,BYTE PTR [ebx+0x606ec925]
  417592:	sbb    dx,WORD PTR [edi-0x53e8cd95]
  417599:	sbb    al,0x1
  41759b:	sub    eax,0xb7b2da6
  4175a0:	mov    dh,0x50
  4175a2:	imul   edi,DWORD PTR [edi+0x7],0x6b9dfa7b
  4175a9:	pop    edx
  4175aa:	adc    DWORD PTR [edx+edi*1],esp
  4175ad:	add    al,0xa
  4175af:	sbb    DWORD PTR [esp+edi*4],esp
  4175b2:	sbb    ch,al
  4175b4:	cmp    eax,0xa5755729
  4175b9:	(bad)  
  4175ba:	out    0xeb,eax
  4175bc:	mov    ebp,ebp
  4175be:	cld    
  4175bf:	mov    ch,0x8d
  4175c1:	jno    0x4175de
  4175c3:	in     eax,0x9f
  4175c5:	fs jg  0x417634
  4175c8:	imul   ebx,DWORD PTR [esi-0x10dc895f],0xffffffb6
  4175cf:	dec    eax
  4175d0:	xor    ah,ch
  4175d2:	jbe    0x41757b
  4175d4:	jb     0x417596
  4175d6:	pop    ecx
  4175d7:	mov    ebx,0xffff7b53
  4175dc:	test   bh,bh
  4175de:	dec    ebx
  4175df:	inc    esp
  4175e0:	jno    0x41763e
  4175e2:	and    al,0xb0
  4175e4:	stos   BYTE PTR es:[edi],al
  4175e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175e6:	sub    eax,0x58168b54
  4175eb:	popf   
  4175ec:	xor    dl,BYTE PTR [edi+0x1b]
  4175ef:	arpl   WORD PTR [esi-0x29b59db9],cx
  4175f5:	pop    es
  4175f6:	jns    0x4175f0
  4175f8:	(bad)  
  4175f9:	loop   0x4175eb
  4175fb:	outs   dx,BYTE PTR ds:[esi]
  4175fc:	fstp   DWORD PTR [ebp+edx*8-0x8]
  417600:	mov    dl,0x3
  417602:	ins    BYTE PTR es:[edi],dx
  417603:	push   es
  417604:	shr    DWORD PTR [edi+ebp*1],cl
  417607:	mov    al,ds:0xce963b59
  41760c:	pop    ss
  41760d:	xor    eax,0x786c2849
  417612:	lods   eax,DWORD PTR ds:[esi]
  417613:	gs fucomi st,st(0)
  417616:	pop    ecx
  417617:	cmp    BYTE PTR [edi+eiz*1-0x41b0d136],al
  41761e:	inc    BYTE PTR [ebp+0x50f9144]
  417624:	mov    eax,0xaf7a48
  417629:	push   eax
  41762a:	fldcw  WORD PTR [eax]
  41762c:	add    DWORD PTR [edx],esi
  41762e:	add    DWORD PTR [ebx+0xf],ecx
  417631:	int    0xed
  417633:	push   ebx
  417634:	mov    ds,WORD PTR [ebx]
  417636:	mov    ebp,ds
  417638:	int    0x24
  41763a:	or     al,BYTE PTR [edx+0x55890e93]
  417640:	mov    ebx,0x195d730c
  417645:	mov    al,0xad
  417647:	or     eax,DWORD PTR [ecx-0x3f]
  41764a:	dec    esi
  41764b:	mov    cs,ecx
  41764d:	cdq    
  41764e:	pop    esp
  41764f:	sti    
  417650:	cdq    
  417651:	pushf  
  417652:	add    eax,0x2904e325
  417657:	test   al,0xc6
  417659:	adc    edx,DWORD PTR [edi+ecx*4+0x6c]
  41765d:	scas   al,BYTE PTR es:[edi]
  41765e:	mov    dh,0x8c
  417660:	adc    bl,0x69
  417663:	xchg   DWORD PTR [edx+0x447e6454],ecx
  417669:	je     0x41768c
  41766b:	or     edx,DWORD PTR [eax+edx*2+0x6858ea3f]
  417672:	push   ds
  417673:	ins    DWORD PTR es:[edi],dx
  417674:	jo     0x41760f
  417676:	out    dx,eax
  417677:	ins    BYTE PTR es:[edi],dx
  417678:	(bad)  
  417679:	out    dx,al
  41767a:	ins    BYTE PTR es:[edi],dx
  41767b:	shl    BYTE PTR [ebp+0x5e],cl
  41767e:	dec    edx
  41767f:	push   ebx
  417680:	mov    esi,DWORD PTR [eax+ecx*8-0x8ad6db]
  417687:	icebp  
  417688:	les    esp,FWORD PTR [ebx+0x9bf97e]
  41768e:	sbb    dh,bl
  417690:	dec    esi
  417691:	ret    
  417692:	add    eax,0xa6f7dbff
  417697:	in     al,0xa8
  417699:	arpl   WORD PTR [ebp+0x70],bp
  41769c:	cmp    al,bl
  41769e:	mov    bl,0x84
  4176a0:	adc    al,0x34
  4176a2:	adc    eax,0x8a7f523b
  4176a7:	sahf   
  4176a8:	imul   ecx,DWORD PTR [esi-0x34],0xffffffcd
  4176ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176ad:	int    0xf9
  4176af:	shr    DWORD PTR [esi+0x522180e8],0xd0
  4176b6:	(bad)  
  4176b7:	push   edi
  4176b8:	popa   
  4176b9:	fwait
  4176ba:	or     DWORD PTR [edi],0xffffffda
  4176bd:	or     al,0xaa
  4176bf:	inc    eax
  4176c0:	ins    DWORD PTR es:[edi],dx
  4176c1:	repz push eax
  4176c3:	inc    ecx
  4176c4:	xchg   edi,eax
  4176c5:	mov    esp,DWORD PTR [esp+eiz*2+0x3d4351dd]
  4176cc:	in     al,0x6
  4176ce:	and    ecx,ecx
  4176d0:	dec    edx
  4176d1:	xchg   ebp,eax
  4176d2:	or     eax,0x9d51403b
  4176d8:	cmp    al,0x1e
  4176da:	ret    
  4176db:	mov    edi,0xd2fd82bf
  4176e0:	or     ecx,DWORD PTR [ebx+esi*1-0x33]
  4176e4:	push   eax
  4176e5:	sahf   
  4176e6:	out    0xdd,eax
  4176e8:	push   esp
  4176e9:	lea    esi,[ebx]
  4176eb:	xchg   ebp,eax
  4176ec:	ins    BYTE PTR es:[edi],dx
  4176ed:	cs stos BYTE PTR es:[edi],al
  4176ef:	arpl   di,dx
  4176f1:	sar    DWORD PTR [eax],0xc9
  4176f4:	mov    al,0xf9
  4176f6:	adc    al,0xae
  4176f8:	push   ds
  4176f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176fb:	adc    edi,DWORD PTR [ecx+eiz*8]
  4176fe:	imul   eax,DWORD PTR [esi-0x46],0xad7e034
  417705:	cld    
  417706:	add    ecx,ecx
  417708:	push   eax
  417709:	fst    DWORD PTR [ebp-0xa]
  41770c:	mov    ah,0x32
  41770e:	cmp    al,0x14
  417710:	xor    BYTE PTR [edi],bl
  417712:	dec    eax
  417713:	fwait
  417714:	in     eax,0x79
  417716:	sti    
  417717:	pop    ebp
  417718:	aas    
  417719:	sbb    eax,0x555c2306
  41771e:	mov    cl,0x23
  417720:	out    dx,eax
  417721:	ds push esi
  417723:	xchg   esp,eax
  417724:	(bad)  [edi+0x14a67da]
  41772a:	stos   DWORD PTR es:[edi],eax
  41772b:	fdiv   QWORD PTR [ecx-0x27]
  41772e:	neg    BYTE PTR [ecx+0x52]
  417731:	arpl   WORD PTR [ebp-0x5e],di
  417734:	stos   BYTE PTR es:[edi],al
  417735:	mov    edi,0x14f79e08
  41773a:	cmp    DWORD PTR [ebx-0x2823cdbb],ebx
  417740:	mov    ecx,0xfa07c616
  417745:	adc    BYTE PTR [esi],cl
  417747:	call   0xd98ed325
  41774c:	pop    ecx
  41774d:	test   eax,0xd629e4df
  417752:	sbb    ch,bh
  417754:	push   ebp
  417755:	sub    dh,cl
  417757:	mov    eax,0x51a767cd
  41775c:	ja     0x4177c9
  41775e:	ret    
  41775f:	clc    
  417760:	cmp    BYTE PTR [ecx+0x7654c87b],ah
  417766:	imul   edi,DWORD PTR [ecx+eiz*4],0x7d
  41776a:	pop    ecx
  41776b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41776c:	test   eax,0x695927f1
  417771:	cmp    al,0xcc
  417773:	xor    ch,dh
  417775:	jecxz  0x417710
  417777:	pop    edx
  417778:	fimul  WORD PTR [eax+edi*8]
  41777b:	scas   al,BYTE PTR es:[edi]
  41777c:	ss mov eax,fs
  41777f:	scas   al,BYTE PTR es:[edi]
  417780:	and    al,0xa2
  417782:	push   esp
  417783:	cmp    eax,0xb74cb377
  417788:	imul   eax,DWORD PTR [edi-0x8a34547],0x2a2d030a
  417792:	div    ebp
  417794:	icebp  
  417795:	sahf   
  417796:	inc    edx
  417797:	ins    BYTE PTR es:[edi],dx
  417798:	mov    ecx,esp
  41779a:	test   DWORD PTR [esi+0x6],edx
  41779d:	fwait
  41779e:	push   ebx
  41779f:	push   esp
  4177a0:	jnp    0x41777f
  4177a2:	ins    DWORD PTR es:[edi],dx
  4177a3:	push   es
  4177a4:	cmp    edi,ebx
  4177a6:	ret    0x9813
  4177a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177aa:	test   eax,0xf3a86762
  4177af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177b0:	push   cs
  4177b1:	test   BYTE PTR [eax],bl
  4177b3:	cdq    
  4177b4:	push   DWORD PTR [edx-0x27]
  4177b7:	mov    al,ds:0x65930ae3
  4177bc:	mov    ebp,0x85478757
  4177c1:	add    al,ch
  4177c3:	jo     0x4177fd
  4177c5:	stos   DWORD PTR es:[edi],eax
  4177c6:	sbb    eax,0xcaad0bdf
  4177cb:	mov    ds:0xe5e23d1b,al
  4177d0:	iret   
  4177d1:	ds inc esi
  4177d3:	sub    cl,BYTE PTR [edx]
  4177d5:	cmp    eax,0x4d37bb8
  4177da:	pop    ecx
  4177db:	out    0x99,eax
  4177dd:	mov    cs,esi
  4177df:	(bad)  [ebx+ecx*4+0x3]
  4177e3:	out    0x91,eax
  4177e5:	pusha  
  4177e6:	add    eax,0x8fb339a4
  4177eb:	push   cs
  4177ec:	jle    0x417815
  4177ee:	test   eax,0x8ee96554
  4177f3:	and    DWORD PTR [esi-0x42],esp
  4177f6:	lds    ecx,FWORD PTR [edx]
  4177f8:	aad    0xda
  4177fa:	push   edi
  4177fb:	aad    0x83
  4177fd:	xchg   esi,eax
  4177fe:	enter  0xd069,0x5c
  417802:	retf   0x7108
  417805:	sbb    BYTE PTR [esi-0xe],bh
  417808:	(bad)  
  417809:	xchg   esp,eax
  41780a:	call   0x44a01481
  41780f:	stos   DWORD PTR es:[edi],eax
  417810:	shl    BYTE PTR [edi-0x24303ba9],cl
  417816:	push   esi
  417817:	repz push edi
  417819:	xor    DWORD PTR [edx],edi
  41781b:	sub    WORD PTR [eax],0xf
  41781f:	das    
  417820:	outs   dx,BYTE PTR ds:[esi]
  417821:	fwait
  417822:	and    eax,0x40afe3c9
  417827:	ficomp WORD PTR [ebx+0x66da2ef0]
  41782d:	jo     0x417864
  41782f:	leave  
  417830:	dec    ecx
  417831:	jno    0x417896
  417833:	aas    
  417834:	sbb    dh,BYTE PTR [ebp-0x24198ff8]
  41783a:	sti    
  41783b:	addr16 test eax,0x81045b60
  417841:	ret    0xf1e8
  417844:	xchg   ebx,eax
  417845:	aad    0x8
  417847:	in     al,0xb1
  417849:	sub    ecx,DWORD PTR [ebx]
  41784b:	mov    cl,0x5b
  41784d:	fstp   TBYTE PTR [esi+edi*2-0x35]
  417851:	mov    bl,0xa2
  417853:	mov    dh,0xb7
  417855:	mov    al,0xc1
  417857:	jle    0x417817
  417859:	jl     0x417813
  41785b:	pop    eax
  41785c:	mov    DWORD PTR [esi+0x7d],edx
  41785f:	sahf   
  417860:	sbb    dh,ch
  417862:	inc    eax
  417863:	jbe    0x417819
  417865:	leavew 
  417867:	scas   eax,DWORD PTR es:[edi]
  417868:	jmp    0xf430b221
  41786d:	scas   al,BYTE PTR es:[edi]
  41786e:	push   edx
  41786f:	mov    esp,0x970d4f83
  417874:	jge    0x4178db
  417876:	out    dx,al
  417877:	int3   
  417878:	fldcw  WORD PTR [eax-0x13]
  41787b:	rcr    DWORD PTR [esi],0x48
  41787e:	add    cl,BYTE PTR [esi-0x39]
  417881:	inc    esi
  417882:	mov    dl,0x37
  417884:	mov    eax,ds:0x74e98cb1
  417889:	je     0x41788a
  41788b:	or     BYTE PTR [edi-0x6529bfc3],bh
  417891:	sbb    al,BYTE PTR [ebx-0x327c3a43]
  417897:	adc    eax,0xd1690a0a
  41789c:	lea    ebx,[edx]
  41789e:	fcomp  DWORD PTR [edx+0x1b]
  4178a1:	cmp    eax,0x888bbbde
  4178a6:	sahf   
  4178a7:	bound  ebp,QWORD PTR ds:0x163a16
  4178ad:	das    
  4178ae:	cdq    
  4178af:	cdq    
  4178b0:	push   eax
  4178b1:	(bad)  [edx]
  4178b3:	test   eax,0xe3f8470f
  4178b8:	stos   BYTE PTR es:[edi],al
  4178b9:	add    edx,edx
  4178bb:	or     al,0x83
  4178bd:	adc    bl,ah
  4178bf:	nop
  4178c0:	mov    al,ds:0x29316072
  4178c5:	lods   eax,DWORD PTR ds:[esi]
  4178c7:	mov    eax,ds:0xb935a0fa
  4178cc:	test   eax,0xafd38b2b
  4178d1:	mov    bh,0xa3
  4178d3:	jne    0x41787a
  4178d5:	and    ebx,DWORD PTR [ecx]
  4178d7:	cdq    
  4178d8:	mov    cl,0x78
  4178da:	adc    al,0x87
  4178dc:	jl     0x5e743b82
  4178e2:	(bad)  
  4178e4:	popf   
  4178e5:	mov    esp,0x61eb3f06
  4178ea:	leave  
  4178eb:	and    DWORD PTR [edx-0x7bafacb7],ebp
  4178f1:	paddd  mm4,QWORD PTR [ecx+0x4d6fd3df]
  4178f8:	dec    esi
  4178f9:	pusha  
  4178fa:	pop    es
  4178fb:	adc    bh,cl
  4178fd:	add    al,0xb8
  4178ff:	repz repnz push ds
  417902:	inc    ebx
  417903:	xor    DWORD PTR [ecx-0x35],edx
  417906:	mov    cl,0x91
  417908:	jb     0x417922
  41790a:	pop    edx
  41790b:	or     DWORD PTR [ecx+0x7ff52a30],ebp
  417911:	ins    DWORD PTR es:[edi],dx
  417912:	ins    BYTE PTR es:[edi],dx
  417913:	into   
  417914:	(bad)  
  417915:	jnp    0x4178d1
  417917:	push   edx
  417918:	xchg   DWORD PTR [eax-0x6],ebx
  41791b:	outs   dx,DWORD PTR ds:[esi]
  41791c:	fmul   DWORD PTR [eax-0x4ad07de2]
  417922:	xchg   esi,eax
  417923:	lahf   
  417924:	cwde   
  417925:	in     al,dx
  417926:	call   0xe95d1c1c
  41792b:	xchg   edi,eax
  41792c:	adc    ebp,esi
  41792e:	mov    esi,esi
  417930:	lods   eax,DWORD PTR ds:[esi]
  417931:	daa    
  417932:	loope  0x41792b
  417934:	and    eax,0x3b71207c
  417939:	aad    0x2
  41793b:	inc    ebp
  41793c:	mov    edi,0xefc5f6d5
  417941:	out    0xa4,eax
  417943:	mov    ebp,DWORD PTR [ebx]
  417945:	std    
  417946:	dec    eax
  417947:	sub    DWORD PTR [edi-0x6b],0x9c7c7126
  41794e:	dec    ebx
  41794f:	adc    DWORD PTR [edx+ebp*4],edi
  417952:	dec    edi
  417953:	(bad)  
  417955:	adc    ecx,edx
  417957:	inc    eax
  417958:	cs xchg ch,bl
  41795b:	mov    bh,BYTE PTR [ebx+0x716bc112]
  417961:	imul   eax,DWORD PTR [esi+edx*4+0x5524ce13],0x7982c8b8
  41796c:	out    dx,eax
  41796d:	lods   eax,DWORD PTR ds:[esi]
  41796e:	jo     0x417944
  417970:	or     eax,0x2f1a808c
  417975:	xchg   ch,cl
  417977:	dec    esi
  417978:	adc    al,0x9c
  41797a:	add    al,0x2e
  41797c:	xor    al,BYTE PTR [esi+0x3ff7779c]
  417982:	pop    edi
  417983:	mov    bl,0x78
  417985:	aad    0x72
  417987:	jg     0x4179f6
  417989:	aad    0x38
  41798b:	test   eax,0xd10dc598
  417990:	push   eax
  417991:	(bad)  
  417992:	mov    al,ds:0x4aac0d8c
  417997:	mov    esi,ecx
  417999:	es pop esi
  41799b:	cs mov esp,0xedee5c43
  4179a1:	iret   
  4179a2:	cwde   
  4179a3:	cmp    al,BYTE PTR [edx-0x54]
  4179a6:	ror    BYTE PTR [ebx+0x1bf4be14],cl
  4179ac:	and    DWORD PTR [eax],esi
  4179ae:	idiv   dh
  4179b0:	mov    bh,0xa6
  4179b2:	in     eax,dx
  4179b3:	push   edi
  4179b4:	sbb    ch,cl
  4179b6:	xlat   BYTE PTR ds:[ebx]
  4179b7:	sub    ebx,DWORD PTR [ebp+0x3c2626db]
  4179bd:	ret    0x7dcd
  4179c0:	aaa    
  4179c1:	out    0x61,al
  4179c3:	jge    0x417949
  4179c5:	daa    
  4179c6:	pushf  
  4179c7:	test   al,0x13
  4179c9:	push   esp
  4179ca:	xchg   ecx,eax
  4179cb:	retf   0xb3da
  4179ce:	loope  0x4179a8
  4179d0:	pop    esp
  4179d1:	or     ch,bh
  4179d3:	add    BYTE PTR [ebx+edi*1+0x50],bl
  4179d7:	xor    ebp,DWORD PTR [eax-0x75]
  4179da:	xchg   DWORD PTR [ecx],eax
  4179dc:	seto   BYTE PTR [ebp+0x6c]
  4179e0:	test   al,0x60
  4179e2:	xchg   esp,eax
  4179e3:	aam    0xeb
  4179e5:	mov    edx,0x788fc775
  4179ea:	js     0x417a34
  4179ec:	stos   DWORD PTR es:[edi],eax
  4179ed:	dec    esi
  4179ee:	inc    edi
  4179ef:	out    dx,eax
  4179f0:	out    0xfe,al
  4179f2:	pushf  
  4179f3:	lahf   
  4179f4:	pushf  
  4179f5:	js     0x4179cd
  4179f7:	int    0xd1
  4179f9:	in     eax,0xe6
  4179fb:	mov    ch,0xda
  4179fd:	(bad)  
  4179fe:	bound  edi,QWORD PTR [edi]
  417a00:	pop    esi
  417a01:	stos   DWORD PTR es:[edi],eax
  417a02:	ds es cmc 
  417a05:	aam    0x52
  417a07:	fstp   st(5)
  417a09:	and    bl,BYTE PTR [eax+0x66cbb419]
  417a0f:	std    
  417a10:	ds mov eax,0xf9bb55d1
  417a16:	mov    eax,ds:0xa9a0a0a3
  417a1b:	rcr    dh,cl
  417a1d:	sysenter 
  417a1f:	jl     0x417a77
  417a21:	jnp    0x417a1e
  417a23:	xchg   esi,eax
  417a24:	jo     0x417a6b
  417a26:	push   DWORD PTR [ecx-0x25797814]
  417a2c:	mov    bl,0x5
  417a2e:	push   edx
  417a2f:	dec    edx
  417a30:	shl    BYTE PTR [ebx],0x8f
  417a33:	mov    eax,ds:0x6ad91be0
  417a38:	in     eax,0xb7
  417a3a:	add    DWORD PTR [edx],ecx
  417a3c:	dec    edx
  417a3d:	push   es
  417a3e:	sub    bh,BYTE PTR [esi-0x4da9d30e]
  417a44:	imul   ebp,DWORD PTR [ecx+eax*1],0x7c
  417a48:	out    0x4b,eax
  417a4a:	jmp    0x9047:0x47691a04
  417a51:	jmp    0x417a84
  417a53:	out    dx,al
  417a54:	xchg   edi,eax
  417a55:	and    cx,bx
  417a58:	fdivr  DWORD PTR [eax+eax*8-0x3cf29494]
  417a5f:	sti    
  417a60:	mov    ecx,0xa42c9b7c
  417a65:	out    0xe2,al
  417a67:	rcr    ebx,1
  417a69:	and    DWORD PTR [edx+ecx*2+0x2b],0x21230d62
  417a71:	dec    ecx
  417a72:	cmp    eax,DWORD PTR [esi]
  417a74:	out    0xb8,eax
  417a76:	dec    eax
  417a77:	lea    esp,[ecx+ebp*1-0x6f4476fe]
  417a7e:	or     dh,BYTE PTR [ebp+0x79fe9dd]
  417a84:	mov    ds:0xff32ecca,al
  417a89:	mov    edi,0x91545425
  417a8e:	mov    ebp,0xb22b91df
  417a93:	fld    QWORD PTR [eax+0x17]
  417a96:	lds    edi,FWORD PTR [edi+0x4ea5c6da]
  417a9c:	xchg   edi,eax
  417a9d:	int3   
  417a9e:	pcmpgtw mm5,QWORD PTR [eax+0x65]
  417aa2:	cmp    BYTE PTR [ecx-0x7f],al
  417aa5:	inc    ecx
  417aa6:	sub    BYTE PTR [edx+edi*1],al
  417aa9:	and    eax,0x3983a622
  417aae:	jp     0x417a95
  417ab0:	mov    gs:0x6484364c,ax
  417ab7:	push   0x7b
  417ab9:	cld    
  417aba:	jg     0x417aeb
  417abc:	jae    0x417a5c
  417abe:	cmp    al,0x11
  417ac0:	and    DWORD PTR [ecx+esi*8],0x3
  417ac4:	add    DWORD PTR [esi],eax
  417ac6:	add    DWORD PTR [ebx+edx*2],ebp
  417ac9:	dec    ebp
  417aca:	add    BYTE PTR [edi+eiz*8-0x47],ah
  417ace:	(bad)  [ebp+0x1a5f69e4]
  417ad4:	(bad)  
  417ad5:	mov    ecx,0x835fea99
  417ada:	pop    esi
  417adb:	popa   
  417adc:	(bad)  
  417add:	js     0x417ac9
  417adf:	aas    
  417ae0:	stc    
  417ae1:	clc    
  417ae2:	out    dx,eax
  417ae3:	test   eax,0xd8a7e797
  417ae8:	out    dx,al
  417ae9:	xor    ecx,ecx
  417aeb:	mov    ebp,0xb1f42b42
  417af0:	or     bl,0xe6
  417af3:	pop    esp
  417af4:	mov    edi,0xcd74a8b1
  417af9:	push   eax
  417afa:	(bad)  ds:0x286b2dd8
  417b00:	dec    edi
  417b01:	pop    edx
  417b02:	inc    esi
  417b03:	mov    edx,DWORD PTR [edx]
  417b05:	push   cs
  417b06:	stos   BYTE PTR es:[edi],al
  417b07:	das    
  417b08:	mov    WORD PTR [esi],ss
  417b0a:	lock sahf 
  417b0c:	fst    QWORD PTR [edi-0x3b991803]
  417b12:	xor    ch,BYTE PTR [edi+ebx*1+0x46]
  417b16:	push   0xffffff8a
  417b18:	mov    dh,0xc9
  417b1a:	rcl    DWORD PTR [ebx+0x2c],0x32
  417b1e:	ja     0x417b61
  417b20:	loope  0x417b15
  417b22:	mov    edx,0x3c7cbfe8
  417b27:	fld    QWORD PTR [esi-0x40]
  417b2a:	fs sti 
  417b2c:	out    0x91,al
  417b2e:	push   cs
  417b2f:	mov    ds:0xd4a52d8b,al
  417b34:	repz les edi,FWORD PTR [edx-0x52695c48]
  417b3b:	sub    al,0xf5
  417b3d:	push   edx
  417b3e:	scas   eax,DWORD PTR es:[edi]
  417b3f:	loopne 0x417b16
  417b41:	mov    dl,BYTE PTR [edi]
  417b43:	pushf  
  417b44:	push   ecx
  417b45:	bound  ecx,QWORD PTR [esi+0x1d609c2]
  417b4b:	inc    ecx
  417b4c:	cmp    al,0x97
  417b4e:	stos   BYTE PTR es:[edi],al
  417b4f:	adc    eax,0xebeb5b9
  417b54:	cmp    esi,edi
  417b56:	jb     0x417b99
  417b58:	push   ebx
  417b59:	mov    edx,0x411d562
  417b5e:	inc    esi
  417b5f:	adc    DWORD PTR [eax-0x66],ecx
  417b62:	leave  
  417b63:	ror    BYTE PTR [esi],1
  417b65:	aad    0x2e
  417b67:	addr16 sbb cl,cl
  417b6a:	outs   dx,DWORD PTR ds:[esi]
  417b6b:	(bad)  
  417b6c:	imul   eax,DWORD PTR [ecx-0x2286d17d],0x20
  417b73:	nop
  417b74:	adc    BYTE PTR [ebp-0x9],0xf5
  417b78:	(bad)  
  417b79:	pop    eax
  417b7a:	loope  0x417b57
  417b7c:	cmc    
  417b7d:	adc    bh,BYTE PTR [edi+0x53]
  417b80:	cwde   
  417b81:	mov    edi,0x52dd916f
  417b86:	cs mov eax,0x33e19220
  417b8c:	adc    DWORD PTR [edx-0x53c570cb],0x63
  417b93:	(bad)  
  417b94:	mov    al,0xa6
  417b96:	xchg   ebp,eax
  417b97:	outs   dx,BYTE PTR ds:[esi]
  417b98:	mov    ecx,0xa5fbd6f2
  417b9d:	add    al,0xc0
  417b9f:	sbb    bl,BYTE PTR [eax-0x7f]
  417ba2:	jle    0x417ba9
  417ba4:	jns    0x417b8e
  417ba6:	pop    edx
  417ba7:	sahf   
  417ba8:	push   esi
  417ba9:	push   edi
  417baa:	pop    ds
  417bab:	inc    ecx
  417bac:	xchg   edx,eax
  417bad:	sti    
  417bae:	rol    DWORD PTR [edi+0x7b631890],cl
  417bb4:	jae    0x417bf5
  417bb6:	es add eax,0x64bf591b
  417bbc:	inc    eax
  417bbd:	(bad)  
  417bbe:	arpl   WORD PTR [ecx],bx
  417bc0:	aaa    
  417bc1:	loop   0x417c2c
  417bc3:	push   0xffffff84
  417bc5:	imul   BYTE PTR [edi+0xa90f357]
  417bcb:	push   ecx
  417bcc:	daa    
  417bcd:	add    edi,DWORD PTR [edx+0x5da2c44f]
  417bd3:	xchg   ebx,eax
  417bd4:	or     ecx,esi
  417bd6:	data16 jnp 0x417b63
  417bd9:	add    eax,0xa28cba55
  417bde:	out    0xcc,al
  417be0:	add    eax,0x9e31c83d
  417be5:	mov    ebx,0xed361e60
  417bea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417beb:	cmp    eax,0x9142086a
  417bf0:	sbb    al,0x96
  417bf2:	sbb    esi,DWORD PTR [esi+0x1a]
  417bf5:	cmp    al,0x9d
  417bf7:	inc    edx
  417bf8:	xor    edx,DWORD PTR [ecx+0x75]
  417bfb:	adc    ebp,DWORD PTR [ebx+0x45115911]
  417c01:	mov    ecx,0x5f5c9fe9
  417c06:	pop    eax
  417c07:	inc    edi
  417c08:	std    
  417c09:	and    BYTE PTR [edx-0x38bd4753],0x7c
  417c10:	inc    DWORD PTR [eax-0x2c4366d2]
  417c16:	inc    edx
  417c17:	stos   DWORD PTR es:[edi],eax
  417c18:	inc    esi
  417c19:	test   al,0x30
  417c1b:	xlat   BYTE PTR ds:[ebx]
  417c1c:	push   esp
  417c1d:	rol    BYTE PTR [esi*1+0x1fc0bfe4],1
  417c24:	xchg   edx,eax
  417c25:	out    dx,eax
  417c26:	jae    0x417bdc
  417c28:	cmp    edi,DWORD PTR [ecx-0x29]
  417c2b:	pop    ebp
  417c2c:	pop    ds
  417c2d:	mov    edx,0xbc45dab2
  417c32:	cmp    eax,ecx
  417c34:	pop    eax
  417c35:	lds    esi,FWORD PTR [edi+0x13]
  417c38:	pop    edi
  417c39:	fstp   DWORD PTR [ecx-0x36]
  417c3c:	mov    ah,0x58
  417c3e:	inc    eax
  417c3f:	loopne 0x417be2
  417c41:	(bad)  
  417c42:	fmul   QWORD PTR [ecx+0x7ff571df]
  417c48:	xchg   ecx,eax
  417c49:	pop    eax
  417c4a:	and    edx,DWORD PTR [ecx+0xfad85c]
  417c50:	call   0x492ab2b4
  417c55:	jle    0x417ca6
  417c57:	cmc    
  417c58:	call   0xfd60557
  417c5d:	cmp    al,0xd1
  417c5f:	jns    0x417c17
  417c61:	test   eax,0xb07810a1
  417c66:	pop    es
  417c67:	pusha  
  417c68:	(bad)  
  417c69:	mov    ds:0xba4a2682,al
  417c6e:	and    al,0xb8
  417c70:	mov    ds:0x43a60a1,eax
  417c75:	and    BYTE PTR ds:0x32ac2a78,0x13
  417c7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c7e:	int3   
  417c7f:	push   eax
  417c80:	pop    esp
  417c81:	fs aas 
  417c83:	adc    BYTE PTR [eax-0x6a7501a],dl
  417c89:	xchg   ebx,eax
  417c8a:	pop    ss
  417c8b:	div    BYTE PTR ss:[edx-0x366af0e6]
  417c92:	jne    0x417c90
  417c94:	(bad)  
  417c95:	cmp    eax,DWORD PTR [edx]
  417c97:	mov    ebx,0x408220d5
  417c9c:	or     dl,ah
  417c9e:	mov    ds:0x47b5048,eax
  417ca3:	jle    0x417cf6
  417ca5:	or     bl,ah
  417ca7:	jmp    0x3da605db
  417cac:	push   ds
  417cad:	(bad)  
  417caf:	scas   al,BYTE PTR es:[edi]
  417cb0:	stos   BYTE PTR es:[edi],al
  417cb1:	enter  0xa62c,0xd2
  417cb5:	cld    
  417cb6:	in     al,0x28
  417cb8:	daa    
  417cb9:	pop    eax
  417cba:	mov    dl,0xc3
  417cbc:	popf   
  417cbd:	test   eax,0xd4140816
  417cc2:	inc    eax
  417cc3:	xor    ecx,esp
  417cc5:	repnz xchg esp,eax
  417cc7:	out    dx,al
  417cc8:	jb     0x417c51
  417cca:	add    eax,0x7796c32
  417ccf:	pop    ss
  417cd0:	inc    esi
  417cd1:	fsubp  st(7),st
  417cd3:	add    BYTE PTR [eax],dh
  417cd5:	shr    DWORD PTR [ecx-0x57],0xa8
  417cd9:	sbb    ch,BYTE PTR [eax-0x4d6b6a47]
  417cdf:	ins    BYTE PTR es:[edi],dx
  417ce0:	lods   al,BYTE PTR ds:[esi]
  417ce1:	test   eax,0x7330281a
  417ce6:	xchg   ebp,eax
  417ce7:	test   al,0x93
  417ce9:	xchg   edi,eax
  417cea:	cli    
  417ceb:	push   ds
  417cec:	sahf   
  417ced:	cmp    ch,cl
  417cef:	xchg   DWORD PTR [ecx+edx*2],edx
  417cf2:	data16 aam 0x24
  417cf5:	(bad)
  417cf8:	push   ecx
  417cf9:	dec    ecx
  417cfa:	cdq    
  417cfb:	in     eax,0x73
  417cfd:	shr    DWORD PTR [ebp+0x50],0x6f
  417d01:	test   DWORD PTR [edi],edx
  417d03:	test   al,0xc0
  417d05:	sbb    esi,DWORD PTR [ecx+0x66067c5d]
  417d0b:	nop
  417d0c:	cmp    edx,DWORD PTR [edx-0x1e68d641]
  417d12:	push   ebp
  417d13:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d15:	sub    eax,0xd8f3ba95
  417d1a:	add    ebx,esp
  417d1c:	paddsb mm4,QWORD PTR [ebx+eax*8]
  417d20:	xor    ch,BYTE PTR [ecx]
  417d22:	sbb    al,0xcb
  417d24:	or     BYTE PTR [ebp+0x6c4a4c3d],bh
  417d2a:	push   eax
  417d2b:	je     0x417d36
  417d2d:	pop    esi
  417d2e:	test   BYTE PTR [eax-0xd],bh
  417d31:	cdq    
  417d32:	mov    edi,ebx
  417d34:	pushf  
  417d35:	scas   al,BYTE PTR es:[edi]
  417d36:	dec    ebx
  417d37:	xchg   ecx,eax
  417d38:	push   0x234aa21d
  417d3d:	mov    dl,BYTE PTR [ebp+0x3be04940]
  417d43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d44:	mov    esi,0x3e3dbf20
  417d49:	js     0x417d49
  417d4b:	pusha  
  417d4c:	in     al,0xd3
  417d4e:	and    eax,0x47202aec
  417d53:	icebp  
  417d54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d55:	and    eax,DWORD PTR [ebx-0x2d6563a1]
  417d5b:	cs cmps BYTE PTR fs:[esi],BYTE PTR es:[edi]
  417d5e:	stc    
  417d5f:	repnz sahf 
  417d61:	mov    bh,0x2b
  417d63:	mov    DWORD PTR [ecx+0x5],edx
  417d66:	mov    ebx,0x1774711a
  417d6b:	xor    eax,edi
  417d6d:	aad    0x64
  417d6f:	gs aas 
  417d71:	into   
  417d72:	xor    BYTE PTR [ebp-0x4e070c0d],ch
  417d78:	ret    0x9454
  417d7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d7c:	scas   al,BYTE PTR es:[edi]
  417d7d:	fisub  WORD PTR gs:[eax-0x5ac80320]
  417d84:	ins    BYTE PTR es:[edi],dx
  417d85:	rcl    BYTE PTR [esi+0x70fbc90d],cl
  417d8b:	dec    ebp
  417d8c:	js     0x417d89
  417d8e:	scas   al,BYTE PTR es:[edi]
  417d8f:	rcl    BYTE PTR [ebx-0x71],cl
  417d92:	cdq    
  417d93:	mov    BYTE PTR [edx+edx*1-0x25],cl
  417d97:	sbb    bh,dl
  417d99:	adc    al,0x31
  417d9b:	lock (bad) 
  417d9d:	mov    edx,DWORD PTR [esi-0x55]
  417da0:	or     al,0x1
  417da2:	retf   
  417da3:	aas    
  417da4:	push   ecx
  417da5:	and    al,0xf4
  417da7:	shr    DWORD PTR [eax+0x2edbe58e],cl
  417dad:	pushf  
  417dae:	popf   
  417daf:	loop   0x417d8b
  417db1:	and    DWORD PTR [ecx-0x77],0xf152e956
  417db8:	fcomip st,st(5)
  417dba:	pop    esi
  417dbb:	outs   dx,BYTE PTR ds:[esi]
  417dbc:	add    eax,DWORD PTR cs:[edx-0x15]
  417dc0:	push   esp
  417dc1:	repz out dx,eax
  417dc3:	pop    esi
  417dc4:	sub    DWORD PTR [esi],ebx
  417dc6:	adc    DWORD PTR [eax+0x46],eax
  417dc9:	je     0x417e13
  417dcb:	add    DWORD PTR [esi-0x76415c8e],edi
  417dd1:	pushf  
  417dd2:	fwait
  417dd3:	mov    eax,ds:0x2878db93
  417dd8:	sti    
  417dd9:	dec    esi
  417dda:	enter  0x9198,0x85
  417dde:	xchg   ebp,eax
  417ddf:	mov    ecx,DWORD PTR [eax-0x53da9aa5]
  417de5:	enter  0x1378,0x48
  417de9:	test   DWORD PTR [eax-0x7d9fe24a],0x107ee7b8
  417df3:	arpl   si,dx
  417df5:	inc    ecx
  417df6:	inc    ebx
  417df7:	mov    bl,0xe4
  417df9:	jg     0x417daf
  417dfb:	jnp    0x417e30
  417dfd:	cmp    bl,BYTE PTR [edx+0x47385255]
  417e03:	arpl   WORD PTR [ecx],cx
  417e05:	push   edi
  417e06:	mov    bh,dl
  417e08:	fstp   st(1)
  417e0a:	adc    DWORD PTR [edx+0x60],ebp
  417e0d:	std    
  417e0e:	inc    ebx
  417e0f:	sbb    esp,DWORD PTR [edi+0x28]
  417e12:	retf   
  417e13:	mov    ch,0x10
  417e15:	(bad)  
  417e17:	pop    es
  417e18:	fwait
  417e19:	loope  0x417da2
  417e1b:	es clc 
  417e1d:	xor    ebp,edx
  417e1f:	jmp    DWORD PTR [esp+edi*4+0xb]
  417e23:	test   BYTE PTR [ecx],bh
  417e25:	dec    eax
  417e26:	push   esp
  417e27:	test   BYTE PTR [ebx-0x32],ah
  417e2a:	fist   DWORD PTR [esi-0x60cf11ea]
  417e30:	push   ebx
  417e31:	cs jle 0x417e27
  417e34:	pusha  
  417e35:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e37:	fld    TBYTE PTR [ecx+0x4d2001f8]
  417e3d:	xchg   edx,eax
  417e3e:	aad    0xca
  417e40:	(bad)  
  417e41:	jg     0x417eac
  417e43:	imul   ecx,ebx,0xffffffdf
  417e46:	sti    
  417e47:	sbb    al,BYTE PTR [esi+0x4193417]
  417e4d:	pop    ebx
  417e4e:	jge    0x417e99
  417e50:	cdq    
  417e51:	call   0xe607:0xd990127c
  417e58:	xchg   esp,eax
  417e59:	call   0xdcf:0x4c03c4ea
  417e60:	fisttp DWORD PTR [esi+ecx*2-0x63030780]
  417e68:	xor    eax,0xffffffd3
  417e6b:	and    bh,bh
  417e6d:	or     DWORD PTR [ebx],edi
  417e6f:	dec    ebx
  417e70:	push   ecx
  417e71:	push   0x1b62fed2
  417e76:	call   0x16b37460
  417e7b:	inc    ecx
  417e7c:	(bad)  
  417e7d:	mov    dh,0xba
  417e7f:	sub    DWORD PTR [eax-0x4c],ebp
  417e82:	cmp    cl,bl
  417e84:	stos   DWORD PTR es:[edi],eax
  417e85:	or     bh,BYTE PTR [ebx+0x5c2aad61]
  417e8b:	push   ecx
  417e8c:	push   eax
  417e8d:	push   cs
  417e8e:	pop    ecx
  417e8f:	aas    
  417e90:	sub    eax,0x66b95477
  417e95:	xchg   edx,eax
  417e96:	lods   eax,DWORD PTR ds:[esi]
  417e97:	out    0x48,eax
  417e99:	test   al,0x97
  417e9b:	repz or BYTE PTR [esi],cl
  417e9e:	xchg   edx,eax
  417e9f:	or     al,0x13
  417ea1:	test   DWORD PTR [ecx-0x19],ecx
  417ea4:	push   0xd869132a
  417ea9:	lods   al,BYTE PTR ds:[esi]
  417eaa:	inc    edi
  417eab:	push   ebp
  417eac:	xor    dh,cl
  417eae:	xchg   ebx,eax
  417eaf:	and    ah,BYTE PTR [edx+0x65]
  417eb2:	imul   esp,DWORD PTR [ebx-0x6e],0xffffff84
  417eb6:	aaa    
  417eb7:	aad    0x93
  417eb9:	adc    bl,bh
  417ebb:	je     0x417e90
  417ebd:	mov    esi,0x153ac2f8
  417ec2:	xchg   edx,eax
  417ec3:	fild   WORD PTR [esi]
  417ec5:	sbb    DWORD PTR [eax],ecx
  417ec7:	int    0x94
  417ec9:	sbb    eax,0xcd1988b2
  417ece:	sahf   
  417ecf:	jo     0x417ed8
  417ed1:	dec    esi
  417ed2:	dec    ebp
  417ed3:	push   cs
  417ed4:	mov    WORD PTR [eax+edx*4+0x5f],ss
  417ed8:	cmp    DWORD PTR [edi],esi
  417eda:	sub    al,BYTE PTR [edi+0x4d]
  417edd:	repz push ebp
  417edf:	pop    ebx
  417ee0:	iret   
  417ee1:	and    eax,0x7c869931
  417ee6:	xchg   ebp,eax
  417ee7:	iret   
  417ee8:	add    cl,dh
  417eea:	jmp    0x417e9b
  417eec:	into   
  417eed:	jl     0x417f57
  417eef:	mov    ch,0x43
  417ef1:	in     eax,dx
  417ef2:	xchg   DWORD PTR [eax],ecx
  417ef4:	xlat   BYTE PTR ds:[ebx]
  417ef5:	xchg   ecx,eax
  417ef6:	jbe    0x417ef0
  417ef8:	xlat   BYTE PTR ds:[ebx]
  417ef9:	inc    edi
  417efa:	add    eax,0x6381d531
  417eff:	dec    edi
  417f00:	call   0xed77:0xad846537
  417f07:	jge    0x417ed7
  417f09:	pushf  
  417f0a:	xor    eax,0x7b2cdbe6
  417f0f:	stos   BYTE PTR es:[edi],al
  417f10:	push   ebp
  417f11:	into   
  417f12:	scas   eax,DWORD PTR es:[edi]
  417f13:	les    ecx,FWORD PTR [edi+0x77]
  417f16:	sbb    DWORD PTR [ebx+0x71],eax
  417f19:	lock xrelease sbb BYTE PTR [ebx*4+0x4554fcaa],al
  417f22:	mov    dh,0x75
  417f24:	rcr    cl,1
  417f26:	xchg   dh,al
  417f28:	jne    0x417ee5
  417f2a:	push   cs
  417f2b:	ffree  st(3)
  417f2d:	retf   
  417f2e:	mov    edx,0xefd79108
  417f33:	mov    ah,0x27
  417f35:	jne    0x417f5d
  417f37:	xor    al,0x2c
  417f39:	arpl   WORD PTR [ebp+0x1f],si
  417f3c:	xchg   ebp,eax
  417f3d:	jl     0x417f49
  417f3f:	mov    bh,0xe
  417f41:	cmp    cl,BYTE PTR [edx-0x6d]
  417f44:	leave  
  417f45:	inc    edx
  417f46:	sbb    al,0x10
  417f48:	out    dx,al
  417f49:	pop    eax
  417f4a:	mov    ch,0x35
  417f4c:	sbb    dl,dh
  417f4e:	and    eax,0x451a30af
  417f53:	sub    al,0xac
  417f55:	aam    0xd8
  417f57:	popa   
  417f58:	pop    edi
  417f59:	pop    ebp
  417f5a:	out    0xe,eax
  417f5c:	inc    ebp
  417f5d:	les    eax,FWORD PTR ds:0x31179e7f
  417f63:	mov    ebp,0xd412992e
  417f68:	das    
  417f69:	(bad)  
  417f6a:	xchg   edi,eax
  417f6b:	sbb    cl,BYTE PTR [edx-0xdf81d26]
  417f71:	loopne 0x417f51
  417f73:	adc    al,0xbc
  417f75:	out    0x4a,eax
  417f77:	mov    gs,WORD PTR ds:0x44d0dc14
  417f7d:	inc    ebx
  417f7e:	jae    0x417f30
  417f80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f81:	mov    bh,0xf
  417f83:	jbe    0x417fd1
  417f85:	push   0xffffffe6
  417f87:	jp     0x417f26
  417f89:	cmp    ch,BYTE PTR [edx-0x73]
  417f8c:	adc    eax,0xc5fa09a1
  417f91:	int3   
  417f92:	cwde   
  417f93:	pop    esp
  417f94:	mov    dh,0x4f
  417f96:	pop    es
  417f97:	das    
  417f98:	xchg   edi,eax
  417f99:	dec    edi
  417f9a:	dec    edi
  417f9b:	scas   eax,DWORD PTR es:[edi]
  417f9c:	mov    ds:0x9f65e417,eax
  417fa1:	ror    DWORD PTR [ebx],0x97
  417fa4:	dec    esi
  417fa5:	shl    BYTE PTR [edx+edx*4],0xba
  417fa9:	pushf  
  417faa:	es mov ebp,0x7c518224
  417fb0:	jbe    0x418015
  417fb2:	mov    esp,0xf3dc0192
  417fb7:	loopne 0x417f61
  417fb9:	sbb    eax,0x424ecaa6
  417fbe:	cmp    ah,ah
  417fc0:	sub    eax,0x6288b266
  417fc5:	daa    
  417fc6:	test   BYTE PTR [ecx],al
  417fc8:	lods   al,BYTE PTR ds:[esi]
  417fc9:	pushf  
  417fca:	mov    ch,0x6f
  417fcc:	add    DWORD PTR [ecx-0x26bcc058],0xffffffcb
  417fd3:	retf   
  417fd4:	jge    0x417f6e
  417fd6:	ss inc ebp
  417fd8:	mov    edx,ebp
  417fda:	ret    
  417fdb:	data16 int 0xdb
  417fde:	jle    0x417fc5
  417fe0:	std    
  417fe1:	push   ss
  417fe2:	sub    eax,0x9f4c8f3a
  417fe7:	inc    ebx
  417fe8:	mov    bl,0xc4
  417fea:	pop    eax
  417feb:	xchg   BYTE PTR [edi],ch
  417fed:	div    BYTE PTR [ebx]
  417fef:	ror    DWORD PTR ss:[edx+0x5c],1
  417ff3:	add    al,0x35
  417ff5:	sub    bl,al
  417ff7:	aas    
  417ff8:	sbb    al,0xde
  417ffa:	dec    ebx
  417ffb:	push   cs
  417ffc:	(bad)  
  417fff:	in     al,dx
  418000:	loop   0x418066
  418002:	push   0x2413f7fe
  418007:	dec    ebp
  418008:	jbe    0x417fc3
  41800a:	bnd jns 0x417f97
  41800d:	jns    0x41808b
  41800f:	jmp    0x417fa3
  418011:	aaa    
  418012:	or     dl,dl
  418014:	jg     0x417f9a
  418016:	dec    ebp
  418017:	push   ebp
  418018:	fstp   QWORD PTR [edx-0x793d6f66]
  41801e:	or     BYTE PTR [edx-0x24cefafe],cl
  418024:	jne    0x418014
  418026:	gs mov eax,esp
  418029:	lods   al,BYTE PTR ds:[esi]
  41802a:	xlat   BYTE PTR ds:[ebx]
  41802b:	lea    eax,[ebx-0x1c631ac9]
  418031:	mov    eax,ds:0x80b314b
  418036:	xchg   esi,eax
  418037:	push   es
  418038:	ror    DWORD PTR [ebx+ebx*2-0x4d],cl
  41803c:	xchg   ebx,eax
  41803d:	retf   0x863c
  418040:	lds    esp,FWORD PTR [esp+edx*2-0xa68de9a]
  418047:	jp     0x41804e
  418049:	popf   
  41804a:	cmp    al,0xeb
  41804c:	dec    edi
  41804d:	outs   dx,BYTE PTR ds:[esi]
  41804e:	(bad)  
  41804f:	jnp    0x417fd7
  418051:	or     eax,0xc5457023
  418056:	jp     0x41806a
  418058:	pop    edi
  418059:	aas    
  41805a:	mov    BYTE PTR [edi-0x15],cl
  41805d:	sbb    BYTE PTR [ebx+edx*8-0x4],ah
  418061:	mov    ebx,0xfabf4b4
  418066:	ret    
  418067:	mov    DWORD PTR [ebp+0x51],edi
  41806a:	jecxz  0x418044
  41806c:	arpl   WORD PTR [edi],bp
  41806e:	push   ecx
  41806f:	xchg   edx,eax
  418070:	ret    0xc2c4
  418073:	lock or bl,BYTE PTR [esi+0x7b]
  418077:	jno    0x418077
  418079:	shr    DWORD PTR [esi],cl
  41807b:	fdivr  st(7),st
  41807d:	mov    BYTE PTR [ecx+0x3b],dl
  418080:	fstp   TBYTE PTR [ebx]
  418082:	jne    0x4180ee
  418084:	push   ds
  418085:	out    0x83,eax
  418087:	loop   0x418106
  418089:	pushf  
  41808a:	dec    esi
  41808b:	add    bh,cl
  41808d:	mov    dh,0x80
  41808f:	icebp  
  418090:	stos   DWORD PTR es:[edi],eax
  418091:	jmp    0x35479dad
  418096:	and    esi,ebx
  418098:	cmp    DWORD PTR [ebx-0x3d],esi
  41809b:	pop    edx
  41809c:	addr16 pop ds
  41809e:	imul   bl
  4180a0:	add    BYTE PTR [edi-0x4a6ef9de],bh
  4180a6:	xor    al,bh
  4180a8:	mov    esp,DWORD PTR [edx+0x5bab4a92]
  4180ae:	push   ebp
  4180af:	cmp    ah,BYTE PTR [edi+ecx*2]
  4180b2:	add    BYTE PTR [edx-0x2b81bee8],cl
  4180b8:	jge    0x4180e5
  4180ba:	loop   0x4180ec
  4180bc:	jne    0x418126
  4180be:	xchg   ebx,eax
  4180bf:	add    edx,ebp
  4180c1:	outs   dx,BYTE PTR ds:[esi]
  4180c2:	mov    ebp,0x73f393b5
  4180c7:	or     al,0x59
  4180c9:	xlat   BYTE PTR ds:[ebx]
  4180ca:	fimul  DWORD PTR [ebp+ecx*2-0x73]
  4180ce:	into   
  4180cf:	push   ds
  4180d0:	es cmc 
  4180d2:	jg     0x4180cb
  4180d4:	lahf   
  4180d5:	test   al,0x34
  4180d7:	adc    bl,BYTE PTR [edx+0x46b7a408]
  4180dd:	adc    DWORD PTR [edi+0x33d20c41],esp
  4180e3:	mov    DWORD PTR [ebp+0x60b00a96],esi
  4180e9:	test   al,0x57
  4180eb:	sbb    edx,ecx
  4180ed:	inc    esp
  4180ee:	aad    0x4a
  4180f0:	xor    eax,0x3b0853b2
  4180f5:	mov    cs,WORD PTR [edi]
  4180f7:	mov    ebp,0xab6c8e6e
  4180fc:	push   esi
  4180fd:	pmulhuw mm2,mm2
  418100:	cmp    BYTE PTR [eax],al
  418102:	push   ss
  418103:	cmc    
  418104:	mov    ds:0xea7e1b8f,al
  418109:	jge    0x41816a
  41810b:	or     eax,0xa6c37858
  418110:	je     0x418093
  418112:	(bad)  
  418113:	mov    ?,WORD PTR [edx+0x79]
  418116:	pop    ebp
  418117:	mov    edx,0xb21e9674
  41811d:	test   eax,0x791c6854
  418122:	lea    edx,[ebx+0x46]
  418125:	sub    al,0x96
  418127:	add    ebp,DWORD PTR [edx-0x5a31e7f]
  41812d:	push   ecx
  41812e:	ja     0x418150
  418130:	pop    esp
  418131:	cwde   
  418132:	xchg   edi,eax
  418133:	fs sub eax,0x3512cc66
  418139:	test   al,0x70
  41813b:	pop    esp
  41813c:	fs popf 
  41813e:	dec    ecx
  41813f:	jmp    0x6200becf
  418144:	jle    0x418106
  418146:	mov    al,ds:0xeb76eb8c
  41814b:	pop    ebp
  41814c:	add    ecx,DWORD PTR [eax-0x2ecaf0f1]
  418152:	mov    ch,0xea
  418154:	inc    edi
  418155:	rol    DWORD PTR ds:0x10e961b7,cl
  41815b:	mov    edx,DWORD PTR [ebx]
  41815d:	pop    ebx
  41815e:	cs cmp eax,0x61083c5
  418164:	mov    ds:0xd0ccb016,al
  418169:	out    dx,al
  41816a:	push   ebx
  41816b:	inc    esi
  41816c:	lds    ecx,FWORD PTR [ecx-0x6b]
  41816f:	cmp    cl,BYTE PTR [ebp+edx*4-0x2797775d]
  418176:	imul   esi,esp,0xffffffec
  418179:	pusha  
  41817a:	push   ds
  41817b:	outs   dx,DWORD PTR ds:[esi]
  41817c:	(bad)  
  41817e:	aaa    
  41817f:	stc    
  418180:	mov    eax,ds:0x2e9ff624
  418185:	xchg   ebx,eax
  418186:	aas    
  418187:	in     eax,dx
  418188:	rcl    BYTE PTR [esi-0x5b4c35ef],0x18
  41818f:	mov    edx,0x737a82c3
  418194:	add    DWORD PTR [ebx-0x7b],ebp
  418197:	push   ebx
  418198:	jle    0x418191
  41819a:	lahf   
  41819b:	mov    esp,0xcca4aa42
  4181a0:	mov    dl,bh
  4181a2:	bound  edi,QWORD PTR [edi+0x2d50d972]
  4181a8:	test   al,0x67
  4181aa:	add    dl,BYTE PTR [edx]
  4181ac:	xchg   ebp,eax
  4181ad:	push   ecx
  4181ae:	outs   dx,DWORD PTR ds:[esi]
  4181af:	popa   
  4181b0:	shr    BYTE PTR ds:0xec2fac8d,0x49
  4181b7:	xor    BYTE PTR [esp+edi*1-0x47e74072],dl
  4181be:	in     eax,0x94
  4181c0:	fisub  WORD PTR [eax-0x3a7c2d1b]
  4181c6:	push   ds
  4181c7:	xchg   edi,edx
  4181c9:	mov    cl,0x1c
  4181cb:	shl    BYTE PTR ds:0xd341d30e,1
  4181d1:	mov    ebx,0xc90a492f
  4181d6:	arpl   WORD PTR [edi-0xf1eedc4],cx
  4181dc:	jae    0x418169
  4181de:	rcl    DWORD PTR [esi+0x52e3c0a8],1
  4181e4:	rcl    DWORD PTR [eax+0x3adc0636],1
  4181ea:	fsub   QWORD PTR [edi]
  4181ec:	dec    ebp
  4181ed:	std    
  4181ee:	adc    al,0x1d
  4181f0:	push   edi
  4181f1:	popa   
  4181f2:	mov    dl,0xe0
  4181f4:	sahf   
  4181f5:	jnp    0x41823b
  4181f7:	and    DWORD PTR [edi],ecx
  4181f9:	data16 mov bh,0x60
  4181fc:	sbb    al,0x13
  4181fe:	test   eax,0x604a7de9
  418203:	fcom   DWORD PTR [eax]
  418205:	shl    esp,0x9b
  418208:	sbb    esi,DWORD PTR [ecx]
  41820a:	sub    ebp,DWORD PTR [edx+0x6363ebd7]
  418210:	add    BYTE PTR [eax+0x27df7cf8],0xc3
  418217:	shl    DWORD PTR [ecx],1
  418219:	repz mov ebx,0x3813623c
  41821f:	xchg   edi,eax
  418220:	in     eax,dx
  418221:	stos   BYTE PTR es:[edi],al
  418222:	shr    DWORD PTR [edi+0x6a],0x5c
  418226:	fwait
  418227:	(bad)  
  418228:	fld    DWORD PTR ds:0x8447fbc2
  41822e:	hlt    
  41822f:	jmp    0x2023:0xd7737cc3
  418236:	outs   dx,DWORD PTR ds:[esi]
  418237:	mov    BYTE PTR [ebx],ah
  418239:	add    al,BYTE PTR [esp+edi*4+0x47]
  41823d:	inc    eax
  41823e:	adc    bh,bl
  418240:	gs das 
  418242:	pop    es
  418243:	scas   eax,DWORD PTR es:[edi]
  418244:	sbb    dh,dh
  418246:	popa   
  418247:	lds    ebp,FWORD PTR [edi]
  418249:	rcl    DWORD PTR [eax-0x21d64dd4],1
  41824f:	cmp    esp,ebp
  418251:	sub    al,0xb4
  418253:	mov    ebx,0xc456735d
  418258:	mov    al,0x8f
  41825a:	outs   dx,DWORD PTR ds:[esi]
  41825b:	pop    esp
  41825c:	pop    eax
  41825d:	sbb    al,0x6d
  41825f:	dec    eax
  418260:	adc    DWORD PTR [ebx+ebp*4],ebp
  418263:	jecxz  0x418220
  418265:	push   ss
  418266:	mov    al,ds:0x66bc21af
  41826b:	sub    al,0xd9
  41826d:	arpl   WORD PTR [edi+0x3138ad3b],bp
  418273:	std    
  418274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418275:	jmp    0xeed3:0xcf23019
  41827c:	xchg   edi,eax
  41827d:	sbb    edi,esp
  41827f:	xchg   esi,eax
  418280:	mov    eax,0x42aebc1
  418285:	imul   esi,DWORD PTR [ecx+0x6ee11194],0x1716b5de
  41828f:	xchg   esi,eax
  418290:	xor    DWORD PTR [bp+di-0x27],0x4d
  418295:	adc    bh,BYTE PTR [edx-0x757332ff]
  41829b:	inc    edi
  41829c:	push   cs
  41829d:	mov    edx,0x3236914c
  4182a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182a3:	adc    bl,BYTE PTR ds:[edi+0x669d94c9]
  4182aa:	nop
  4182ab:	into   
  4182ac:	out    dx,al
  4182ad:	call   0x375f:0xe5db65ea
  4182b4:	push   ebp
  4182b5:	bnd jae 0x418275
  4182b8:	xchg   DWORD PTR [esi+0x38802724],esi
  4182be:	mov    BYTE PTR [ebp+0x2e99dee9],ch
  4182c4:	mov    edx,0x5f22e140
  4182c9:	add    bh,BYTE PTR [eax+0x19]
  4182cc:	nop
  4182cd:	sub    al,ch
  4182cf:	lock les eax,FWORD PTR [esi+edx*1+0x621ee709]
  4182d7:	sub    eax,0x117a31a5
  4182dc:	rdpmc  
  4182de:	repz pop eax
  4182e0:	fsubr  DWORD PTR [ebp+0x36aa178a]
  4182e6:	mov    edi,0x1ca0f7e6
  4182eb:	(bad)  
  4182ec:	out    0xd3,al
  4182ee:	jbe    0x418331
  4182f0:	sbb    al,BYTE PTR [ecx+edx*2-0xb]
  4182f4:	fwait
  4182f5:	bound  ecx,QWORD PTR [ebp-0x44]
  4182f8:	loopne 0x4182e8
  4182fa:	lahf   
  4182fb:	mov    ch,0x9b
  4182fd:	cwde   
  4182fe:	push   ds
  4182ff:	fnstcw WORD PTR [edx+0x40]
  418302:	xchg   ebx,eax
  418303:	xchg   esp,eax
  418304:	shl    ch,1
  418306:	pusha  
  418307:	pushf  
  418308:	jbe    0x418315
  41830a:	mov    ch,0xa2
  41830c:	cld    
  41830d:	das    
  41830e:	jg     0x418346
  418310:	lock mov edx,0x6d665f90
  418316:	lods   al,BYTE PTR fs:[esi]
  418318:	in     eax,0x12
  41831a:	mov    ds:0x224ce269,al
  41831f:	mov    bh,0xdb
  418321:	sbb    ecx,edi
  418323:	call   0xfae6:0x61244947
  41832a:	add    eax,0xbaac301
  41832f:	or     al,0x4e
  418331:	adc    DWORD PTR [ecx+eax*4-0x5b397c5b],eax
  418338:	or     DWORD PTR [edx],0xe3dca0fa
  41833e:	xchg   ecx,eax
  41833f:	push   ds
  418340:	xchg   ebx,eax
  418341:	inc    edx
  418342:	lahf   
  418343:	pop    esi
  418344:	sbb    esi,DWORD PTR [edi-0x30]
  418347:	in     al,0x8f
  418349:	mov    al,ds:0xa5de1379
  41834e:	cmp    al,0x24
  418350:	jmp    0xb7d8:0xc6a625b1
  418357:	push   ebp
  418358:	cmp    eax,esp
  41835a:	sahf   
  41835b:	and    ecx,ebx
  41835d:	ss cdq 
  41835f:	add    DWORD PTR [esi+eiz*4-0x43],ecx
  418363:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418364:	out    0x38,eax
  418366:	add    DWORD PTR [eax-0x60a9cd8f],esp
  41836c:	shr    al,cl
  41836e:	push   ebx
  41836f:	dec    esi
  418370:	sbb    DWORD PTR [esp+ebx*1-0x60fd79ad],0xffffffb7
  418378:	inc    ebp
  418379:	jl     0x4183da
  41837b:	not    dh
  41837d:	adc    eax,0x9c720493
  418382:	xchg   ebp,eax
  418383:	sub    dl,BYTE PTR [edx]
  418385:	xor    DWORD PTR [edx+0x26],edx
  418388:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418389:	nop
  41838a:	test   al,0x44
  41838c:	sub    BYTE PTR [edi+edx*4-0x52],bh
  418390:	add    ecx,ebp
  418392:	and    esp,ebp
  418394:	mov    ds:0x63ec67ac,eax
  418399:	(bad)  [esi]
  41839b:	or     dh,BYTE PTR [eax+ebx*4+0x672d4093]
  4183a2:	inc    edi
  4183a3:	push   edi
  4183a4:	jmp    0x7df27501
  4183a9:	adc    esp,ebp
  4183ab:	pop    ebp
  4183ac:	push   edx
  4183ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183ae:	rcl    DWORD PTR [edi+0x20],0x75
  4183b2:	sub    edi,DWORD PTR [edi+0x40]
  4183b5:	push   ecx
  4183b6:	add    DWORD PTR [eax-0x6f02547e],edx
  4183bc:	xchg   ebp,eax
  4183bd:	call   0x7d3a:0x396e057d
  4183c4:	sbb    esp,edi
  4183c6:	dec    eax
  4183c7:	fs aad 0x98
  4183ca:	aam    0x88
  4183cc:	aaa    
  4183cd:	add    eax,DWORD PTR ds:0x8cc04dd7
  4183d3:	sbb    edi,ebp
  4183d5:	popa   
  4183d6:	outs   dx,DWORD PTR ds:[esi]
  4183d7:	dec    ecx
  4183d8:	jle    0x418403
  4183da:	xor    al,BYTE PTR [ebx+eax*4+0x7e]
  4183de:	in     al,dx
  4183df:	xlat   BYTE PTR ds:[ebx]
  4183e0:	(bad)  
  4183e1:	xor    al,0x3d
  4183e3:	jbe    0x4183f4
  4183e5:	or     eax,DWORD PTR ds:0x6c37fe20
  4183eb:	jno    0x4183d9
  4183ed:	inc    edi
  4183ee:	cmp    eax,DWORD PTR ds:[edx]
  4183f1:	jae    0x41841f
  4183f3:	and    BYTE PTR [ebx],ah
  4183f5:	push   ds
  4183f6:	jp     0x4183b8
  4183f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183f9:	mov    ebp,DWORD PTR [ecx+0x2d]
  4183fc:	and    ch,BYTE PTR [ecx+esi*1-0x38]
  418400:	shl    BYTE PTR [eax-0x62106c26],cl
  418406:	cdq    
  418407:	jecxz  0x4183b6
  418409:	ins    DWORD PTR es:[edi],dx
  41840a:	dec    ebx
  41840b:	call   0x1198:0x7cfd215f
  418412:	fadd   DWORD PTR [ebp+edi*8+0x7dc9e59a]
  418419:	mov    cl,0xe6
  41841b:	mov    ebp,0x982b0de9
  418420:	xchg   edi,eax
  418421:	jge    0x4183ab
  418423:	dec    edx
  418424:	jnp    0x4183f8
  418426:	xor    bl,ch
  418428:	dec    ecx
  418429:	xor    dh,BYTE PTR [edi-0x4029aab3]
  41842f:	mov    ebp,0x2724f818
  418434:	in     eax,dx
  418435:	xchg   ecx,eax
  418436:	push   es
  418437:	retf   
  418438:	scas   eax,DWORD PTR es:[edi]
  418439:	push   es
  41843a:	in     al,0x56
  41843c:	hlt    
  41843d:	mov    ah,0x1e
  41843f:	ja     0x4183eb
  418441:	and    ecx,ecx
  418443:	add    dh,BYTE PTR [ecx]
  418445:	push   0xa2af413f
  41844a:	test   DWORD PTR [ebp-0x3b4df142],edi
  418450:	sub    eax,DWORD PTR [edx+0x7]
  418453:	(bad)  
  418454:	push   0x94ac6b58
  418459:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41845a:	xchg   edi,eax
  41845b:	xor    al,0xd
  41845d:	pop    ds
  41845e:	data16 jbe 0x41849d
  418461:	pop    edi
  418462:	mov    ebx,0x980ed87c
  418467:	add    edx,edx
  418469:	mov    ch,0x4
  41846b:	mov    dl,0x7b
  41846d:	mov    esi,0x8ad2c1f1
  418472:	dec    ebx
  418473:	outs   dx,BYTE PTR ds:[esi]
  418474:	mov    cl,0x88
  418476:	pop    esp
  418477:	das    
  418478:	int    0x24
  41847a:	dec    eax
  41847b:	sub    cl,BYTE PTR [edi-0x31]
  41847e:	jecxz  0x4184ac
  418480:	and    al,0x79
  418482:	pop    edx
  418483:	stos   BYTE PTR es:[edi],al
  418484:	sti    
  418485:	mov    ecx,0x78704803
  41848a:	ret    0x6bcd
  41848d:	int3   
  41848e:	adc    al,0x76
  418490:	sbb    bl,BYTE PTR [edi]
  418492:	out    0xa6,eax
  418494:	hlt    
  418495:	adc    cl,0xf5
  418498:	push   ecx
  418499:	xchg   ebx,eax
  41849a:	mov    dl,0xad
  41849c:	aam    0x7e
  41849e:	fucomp st(2)
  4184a0:	inc    ebp
  4184a1:	enter  0x91df,0x51
  4184a5:	jmp    0x41847c
  4184a7:	dec    ebx
  4184a8:	mov    dh,0xe2
  4184aa:	dec    esp
  4184ab:	cmp    eax,0xe9a18c73
  4184b0:	dec    ebp
  4184b1:	jp     0x418454
  4184b3:	add    BYTE PTR [ebx],0xad
  4184b6:	mov    ebp,0xe871b488
  4184bb:	or     cl,dl
  4184bd:	sub    eax,0x36249f49
  4184c2:	hlt    
  4184c3:	push   esp
  4184c4:	ret    0x212
  4184c7:	repz mov ch,0xb4
  4184ca:	jge    0x41846d
  4184cc:	jmp    0x465d:0xdc19c814
  4184d3:	adc    eax,0xa6efbcb1
  4184d8:	retf   
  4184d9:	test   ebp,eax
  4184db:	jo     0x418498
  4184dd:	jg     0x418503
  4184df:	xlat   BYTE PTR ds:[ebx]
  4184e0:	cli    
  4184e1:	or     edx,DWORD PTR [esi]
  4184e3:	jnp    0x41855c
  4184e5:	jno    0x4184e2
  4184e7:	mov    ebp,ebp
  4184e9:	adc    eax,0x43f80417
  4184ee:	inc    edi
  4184ef:	or     BYTE PTR [edx+0x17f22c2f],ah
  4184f5:	loopne 0x418500
  4184f7:	ficomp WORD PTR [esi-0x1d]
  4184fa:	ss mov dh,0x2a
  4184fd:	xchg   ah,ah
  4184ff:	scas   eax,DWORD PTR es:[edi]
  418500:	out    0xc7,eax
  418502:	add    eax,DWORD PTR [edi]
  418504:	and    al,0x8e
  418506:	xchg   ebx,eax
  418507:	pop    ebp
  418508:	imul   ebp,DWORD PTR [edx+0xb8094ac],0x34
  41850f:	je     0x418529
  418511:	xor    DWORD PTR [esi-0x74891053],eax
  418517:	xor    eax,0x73d46b5f
  41851c:	iret   
  41851d:	jg     0x4184be
  41851f:	mov    ds:0x81362d5e,al
  418524:	(bad)  
  418525:	xchg   edx,eax
  418526:	imul   edi,DWORD PTR [edi+0x1d],0xb6628b82
  41852d:	les    esi,FWORD PTR [esi+0x47c6239]
  418533:	sub    DWORD PTR [edi-0x2a37e009],esp
  418539:	stos   DWORD PTR es:[edi],eax
  41853a:	cli    
  41853b:	push   ebp
  41853c:	pop    es
  41853d:	jae    0x4184f6
  41853f:	(bad)  
  418540:	cmp    esp,edx
  418542:	aas    
  418543:	xchg   edi,eax
  418544:	or     dh,BYTE PTR [ecx]
  418546:	idiv   DWORD PTR [ecx-0x43]
  418549:	mov    BYTE PTR [ebx],dl
  41854b:	mov    al,0x98
  41854d:	push   esi
  41854e:	scas   al,BYTE PTR es:[edi]
  41854f:	dec    ecx
  418550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418551:	ret    
  418552:	xchg   ebx,eax
  418553:	dec    esp
  418554:	mov    eax,ds:0x90efc3a7
  418559:	sti    
  41855a:	xchg   edi,eax
  41855b:	xor    al,0xd2
  41855d:	xor    bh,BYTE PTR [ecx]
  41855f:	xchg   edx,eax
  418560:	mov    bh,BYTE PTR [edi+0x1e]
  418563:	call   0x38af7ee1
  418568:	xor    edi,edx
  41856a:	jne    0x418528
  41856c:	pop    eax
  41856d:	or     ecx,edx
  41856f:	or     ebp,DWORD PTR ds:0xf7ded392
  418575:	(bad)  
  418576:	mov    ch,0x4b
  418578:	popf   
  418579:	aaa    
  41857a:	add    BYTE PTR [ebp+0x44],ch
  41857d:	in     al,0xda
  41857f:	pop    ecx
  418580:	push   edx
  418581:	ret    0x8da9
  418584:	xor    DWORD PTR [esi-0x357d1dd7],eax
  41858a:	xchg   edx,eax
  41858b:	push   es
  41858c:	call   FWORD PTR [eax]
  41858e:	(bad)  
  41858f:	xchg   esp,eax
  418590:	mov    ds:0x9719a355,eax
  418595:	xor    DWORD PTR [ecx],0x957161cd
  41859b:	or     eax,0x1aabbff0
  4185a0:	enter  0x81b6,0x74
  4185a4:	inc    eax
  4185a5:	cmp    eax,DWORD PTR [edi]
  4185a7:	xchg   ebx,eax
  4185a8:	repnz in al,dx
  4185aa:	mul    BYTE PTR [ebx+0x14c79758]
  4185b0:	or     al,cl
  4185b2:	cmp    dh,BYTE PTR [ebx]
  4185b4:	frstor [edx]
  4185b6:	lock push esp
  4185b8:	and    ebx,DWORD PTR ds:0x1925ba8d
  4185be:	and    al,0xc5
  4185c0:	cmp    BYTE PTR [ecx-0x60],dl
  4185c3:	inc    ecx
  4185c4:	jae    0x4185bf
  4185c6:	jg     0x41856b
  4185c8:	stos   BYTE PTR es:[edi],al
  4185c9:	jge    0x4185e8
  4185cb:	dec    ebp
  4185cc:	xchg   edx,eax
  4185cd:	cmp    BYTE PTR [esi-0x1588e7ba],dh
  4185d3:	mov    edi,0xebdc7a74
  4185d8:	inc    esi
  4185d9:	mov    WORD PTR [ecx+eax*2],?
  4185dc:	dec    ebx
  4185dd:	in     al,dx
  4185de:	add    esi,DWORD PTR [edi]
  4185e0:	cmp    ebx,DWORD PTR [ecx-0x7f821a6d]
  4185e6:	dec    esp
  4185e7:	adc    esi,DWORD PTR [edi]
  4185e9:	inc    eax
  4185ea:	jo     0x418582
  4185ec:	sub    BYTE PTR [ebx+eiz*2-0x6d],ah
  4185f0:	pop    ss
  4185f1:	adc    bl,BYTE PTR [edx]
  4185f3:	adc    BYTE PTR [ecx],ch
  4185f5:	xchg   ecx,eax
  4185f6:	lods   eax,DWORD PTR ds:[esi]
  4185f7:	fnstcw WORD PTR [esi]
  4185f9:	(bad)  
  4185fa:	sub    ecx,DWORD PTR [ecx+0x68]
  4185fd:	arpl   WORD PTR [edx],dx
  4185ff:	adc    edx,DWORD PTR [ebp-0x57]
  418602:	fisttp DWORD PTR [esi+0x6aa54fb5]
  418608:	push   ss
  418609:	clc    
  41860a:	mov    ah,BYTE PTR [edi]
  41860c:	fsubr  QWORD PTR [ebx]
  41860e:	(bad)  
  41860f:	scas   al,BYTE PTR es:[edi]
  418610:	pop    esi
  418611:	out    dx,eax
  418612:	(bad)  [ebx+0x51]
  418615:	sbb    eax,0xcc6a8721
  41861a:	ins    BYTE PTR es:[edi],dx
  41861b:	mov    dl,0x72
  41861d:	test   cl,ah
  41861f:	or     eax,0x9474fd4e
  418624:	and    eax,0x493811b3
  418629:	scas   eax,DWORD PTR es:[edi]
  41862a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41862b:	shl    BYTE PTR [esi],1
  41862d:	mov    al,ds:0x5930220e
  418632:	das    
  418633:	add    cl,BYTE PTR [esi+0x6d]
  418636:	pop    ebp
  418637:	sbb    edx,DWORD PTR [edx-0x58e54e1e]
  41863d:	or     eax,0x3f43bc89
  418642:	popa   
  418643:	xlat   BYTE PTR ds:[ebx]
  418644:	sbb    ebp,ecx
  418646:	push   ecx
  418647:	cmp    eax,0x79b55257
  41864c:	adc    BYTE PTR [edx+esi*8-0x3934def3],ch
  418653:	repnz dec ecx
  418655:	iret   
  418656:	arpl   WORD PTR [edi],dx
  418658:	mov    ebx,0xd258ed04
  41865d:	ret    
  41865e:	inc    edi
  41865f:	jmp    0x68153f86
  418664:	ins    BYTE PTR es:[edi],dx
  418665:	mov    ebx,0xb8679a2e
  41866a:	aas    
  41866b:	jecxz  0x418640
  41866d:	mov    bh,0xb1
  41866f:	jno    0x418699
  418671:	retf   
  418672:	fnsave ss:[ecx+0xa]
  418676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418677:	pop    esp
  418678:	(bad)  
  418679:	pop    edi
  41867a:	(bad)  
  41867d:	inc    edx
  41867e:	cmp    dh,BYTE PTR [ecx+0x5f]
  418681:	mov    al,ds:0xa3af2826
  418686:	mov    ch,0x12
  418688:	fdiv   DWORD PTR [esi+esi*4+0x55]
  41868c:	dec    ebp
  41868d:	ja     0x4186a0
  41868f:	les    esi,FWORD PTR [edi+ebp*1+0x6a]
  418693:	mov    ebp,DWORD PTR [esi]
  418695:	loopne 0x418685
  418697:	neg    BYTE PTR [ebx-0xe]
  41869a:	out    dx,al
  41869b:	mov    edi,ecx
  41869d:	in     al,0xe6
  41869f:	mov    ds:0x8b8d9761,eax
  4186a4:	xor    bl,al
  4186a6:	fadd   QWORD PTR [eax-0x178e51af]
  4186ac:	xchg   esi,eax
  4186ad:	loope  0x4186c6
  4186af:	xor    edx,esi
  4186b1:	or     eax,0xb7dc4380
  4186b6:	scas   eax,DWORD PTR es:[edi]
  4186b7:	cwde   
  4186b8:	outs   dx,DWORD PTR fs:[esi]
  4186ba:	pusha  
  4186bb:	fmul   QWORD PTR [ebx+0x75e81781]
  4186c1:	ret    
  4186c2:	aad    0xaa
  4186c4:	(bad)  
  4186c5:	push   eax
  4186c6:	jmp    0x41869e
  4186c8:	mov    eax,ds:0x4cf5dc
  4186cd:	ss mov edi,0x14bc6a34
  4186d3:	jnp    0x41869d
  4186d5:	je     0x418722
  4186d7:	pop    es
  4186d8:	mov    dl,0x5d
  4186da:	loopne 0x4186bd
  4186dc:	loop   0x418670
  4186de:	ins    BYTE PTR es:[edi],dx
  4186df:	repz sub ch,BYTE PTR [esi-0x398c16aa]
  4186e6:	test   BYTE PTR [ebx+0x37],ah
  4186e9:	mov    dh,0x77
  4186eb:	dec    edx
  4186ec:	out    0xc,eax
  4186ee:	das    
  4186ef:	pop    ecx
  4186f0:	or     dl,al
  4186f2:	xchg   edi,eax
  4186f3:	fucomi st,st(2)
  4186f5:	jo     0x418717
  4186f7:	(bad)  
  4186f8:	sbb    BYTE PTR [edi-0x453e8788],bh
  4186fe:	mov    dl,BYTE PTR [edi-0x20]
  418701:	jmp    0xd169:0x654f8971
  418708:	ds dec ebx
  41870a:	fld    TBYTE PTR [eax+0x54d3d30b]
  418710:	inc    ebp
  418711:	jo     0x4186a4
  418713:	mov    ebp,0x45b0855b
  418718:	xchg   ebx,eax
  418719:	aad    0xc1
  41871b:	aad    0x7f
  41871d:	scas   eax,DWORD PTR es:[edi]
  41871e:	cmp    al,BYTE PTR [ebx+edx*8+0x12]
  418722:	stc    
  418723:	pop    ebx
  418724:	push   0x367d0b60
  418729:	ror    BYTE PTR [ecx-0x5a],0x51
  41872d:	fcomp  QWORD PTR [ecx-0x22]
  418730:	ret    
  418731:	popf   
  418732:	cmp    eax,0x25791ae8
  418737:	enter  0xe2a2,0x7
  41873b:	stos   DWORD PTR es:[edi],eax
  41873c:	pop    edx
  41873d:	clc    
  41873e:	sbb    al,0x87
  418740:	mov    ebx,0xe2c15575
  418745:	jp     0x418775
  418747:	fadd   DWORD PTR [esi]
  418749:	pop    ebp
  41874a:	clc    
  41874b:	icebp  
  41874c:	lahf   
  41874d:	xchg   ebx,eax
  41874e:	cwde   
  41874f:	jmp    0x4186df
  418751:	mov    esp,DWORD PTR [eax+0x6512b0d2]
  418757:	(bad)  
  418758:	fwait
  418759:	pop    ecx
  41875a:	pop    esi
  41875b:	ret    
  41875c:	mov    eax,ds:0x8ea7fabc
  418761:	rol    ch,1
  418763:	ds and al,0xde
  418766:	or     eax,0x4ec3a0a3
  41876b:	push   ebx
  41876c:	jae    0x418761
  41876e:	cs pop ss
  418770:	int    0xa4
  418772:	js     0x418771
  418774:	lods   eax,DWORD PTR ds:[esi]
  418775:	arpl   WORD PTR [eax-0x312ed565],ax
  41877b:	xchg   esi,eax
  41877c:	push   esi
  41877d:	scas   al,BYTE PTR es:[edi]
  41877e:	mov    al,0xe3
  418780:	repnz stos DWORD PTR es:[edi],eax
  418782:	mov    ds:0xe6d539a1,eax
  418787:	mov    dl,0x24
  418789:	push   esp
  41878a:	sub    eax,0x9069c0f1
  41878f:	sub    DWORD PTR [edx],esi
  418791:	popa   
  418792:	lods   al,BYTE PTR ds:[esi]
  418793:	aaa    
  418794:	jbe    0x418815
  418796:	or     al,0xf3
  418798:	ja     0x418780
  41879a:	jns    0x41876e
  41879c:	dec    ebp
  41879d:	inc    edx
  41879e:	repz mov ds:0x86cf04ff,al
  4187a4:	push   0xffffffde
  4187a6:	mov    ch,0x9e
  4187a8:	addr16 cld 
  4187aa:	cs xchg edi,eax
  4187ac:	pop    ebx
  4187ad:	add    al,0xe9
  4187af:	mov    bh,0x26
  4187b1:	hlt    
  4187b2:	mov    edi,0xe2b76aa9
  4187b7:	(bad)  
  4187b8:	repz add dl,BYTE PTR [edx]
  4187bb:	mov    DWORD PTR [esi+0x357040fc],0xcff34f98
  4187c5:	arpl   WORD PTR [esi],dx
  4187c7:	adc    dl,BYTE PTR [eax-0x1]
  4187ca:	add    DWORD PTR [esi],ebp
  4187cc:	lds    edx,FWORD PTR [edi-0x4720e325]
  4187d2:	xor    BYTE PTR [esp+ecx*1-0x3],al
  4187d6:	pop    es
  4187d7:	int    0x1e
  4187d9:	sti    
  4187da:	push   esp
  4187db:	xchg   esi,eax
  4187dc:	out    0x60,al
  4187de:	out    dx,al
  4187df:	sub    edi,DWORD PTR [eax]
  4187e1:	das    
  4187e2:	mov    bl,0x67
  4187e4:	out    dx,eax
  4187e5:	clc    
  4187e6:	retf   0xc1ea
  4187e9:	mov    ah,0x9b
  4187eb:	in     eax,0x62
  4187ed:	mov    esi,0x75499de9
  4187f2:	push   cs
  4187f3:	pop    edx
  4187f4:	cmp    BYTE PTR [edx],bl
  4187f6:	mov    eax,ds:0x7da6568
  4187fb:	xor    ebp,DWORD PTR [eax+esi*2+0x70]
  4187ff:	data16 and al,0x23
  418802:	mov    eax,ds:0x2728407
  418807:	mov    ecx,0xeb3a882d
  41880c:	mov    edi,0x25351d78
  418811:	ja     0x41881d
  418813:	data16 xor BYTE PTR [esi+0x56729f4b],0xd
  41881b:	cmp    BYTE PTR [esp+esi*1-0x6d],al
  41881f:	adc    ebx,ebp
  418821:	adc    bl,BYTE PTR [ebx+0x32]
  418824:	call   0x9145625b
  418829:	sbb    al,0x11
  41882b:	dec    ebp
  41882c:	xor    al,0xc6
  41882e:	sub    eax,DWORD PTR [esp+eiz*8]
  418831:	add    al,0x26
  418833:	push   esi
  418834:	lock sub DWORD PTR [eax+0x72],esi
  418838:	jb     0x41885b
  41883a:	mov    ebx,0x95fb4ac8
  41883f:	jns    0x4187d7
  418841:	inc    edi
  418842:	aad    0xa
  418844:	rcl    edi,0xca
  418847:	mov    edi,0xcc352fff
  41884c:	dec    edi
  41884d:	ffreep st(3)
  41884f:	(bad)  
  418850:	cmc    
  418851:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418852:	and    ah,BYTE PTR [ebp-0x1d]
  418855:	mov    es,WORD PTR [ecx-0xa108636]
  41885b:	fisub  DWORD PTR [esi-0x60]
  41885e:	mov    DWORD PTR [edx+0xc],eax
  418861:	inc    esp
  418862:	lods   al,BYTE PTR ds:[esi]
  418863:	inc    esi
  418864:	jno    0x418817
  418866:	inc    ecx
  418867:	lods   al,BYTE PTR ds:[esi]
  418868:	stos   DWORD PTR es:[edi],eax
  418869:	lahf   
  41886a:	mov    eax,0xe0045b41
  41886f:	xchg   esi,eax
  418870:	jmp    FWORD PTR [esi+edi*8-0x57caf85c]
  418877:	imul   esi,DWORD PTR [edi],0x41
  41887a:	dec    esi
  41887b:	(bad)  
  41887c:	mov    esp,DWORD PTR [ecx+0xd]
  41887f:	xor    DWORD PTR [esp+edi*8-0xf8c1bad],esi
  418886:	or     ebx,DWORD PTR [ecx+0x72]
  418889:	ins    DWORD PTR es:[edi],dx
  41888a:	test   BYTE PTR [ecx],0xd3
  41888d:	cdq    
  41888e:	fdiv   QWORD PTR [ebx]
  418890:	fidiv  WORD PTR [edi-0x6bb1b407]
  418896:	(bad)  
  418897:	jmp    0x41885c
  418899:	inc    esi
  41889a:	push   0xffffffe3
  41889c:	sbb    eax,0x8c5416fe
  4188a1:	adc    edx,ebp
  4188a3:	mov    al,0x67
  4188a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188a6:	shl    esi,1
  4188a8:	fmul   QWORD PTR [edi+0x19]
  4188ab:	das    
  4188ac:	lock sbb al,BYTE PTR [ebp+0x21ea8b7c]
  4188b3:	(bad)  
  4188b4:	aam    0x7e
  4188b6:	mov    edx,eax
  4188b8:	loope  0x4188d1
  4188ba:	inc    eax
  4188bb:	push   edx
  4188bc:	(bad)  
  4188bd:	sub    eax,0x8000435a
  4188c2:	xchg   esp,eax
  4188c3:	inc    edi
  4188c4:	sub    dh,BYTE PTR [edx]
  4188c6:	push   ebx
  4188c7:	adc    DWORD PTR [edi],0x41
  4188ca:	xor    al,0x7a
  4188cc:	call   0xd7fb:0x436cd148
  4188d3:	fsubr  st,st(2)
  4188d5:	sub    BYTE PTR [esi-0x79bb752a],0xca
  4188dc:	sbb    al,0x57
  4188de:	div    ecx
  4188e0:	fs pop ss
  4188e2:	arpl   WORD PTR [ebx+0x28fbd15c],bx
  4188e8:	ja     0x41887d
  4188ea:	enter  0x5e4b,0x81
  4188ee:	lods   al,BYTE PTR ds:[esi]
  4188ef:	mov    ch,0xb9
  4188f1:	cmp    eax,0x45e32924
  4188f6:	das    
  4188f7:	popa   
  4188f8:	test   DWORD PTR [edx+0x2a],ebp
  4188fb:	(bad)  
  4188fc:	popa   
  4188fd:	push   esi
  4188fe:	dec    esi
  4188ff:	mov    bh,0x5c
  418901:	ins    DWORD PTR es:[edi],dx
  418902:	lods   eax,DWORD PTR ds:[esi]
  418903:	fs sub eax,0x14b7fb66
  418909:	jl     0x41888b
  41890b:	fld    QWORD PTR [eax]
  41890d:	out    0x6,al
  41890f:	mov    eax,0xba42997
  418914:	add    edi,esi
  418916:	out    dx,eax
  418917:	xchg   esi,eax
  418918:	mov    ch,BYTE PTR [esi-0x5d2a27e3]
  41891e:	addr16 cmp eax,0x5cfc59f3
  418924:	nop
  418925:	ror    BYTE PTR [ecx-0x2d],cl
  418928:	aas    
  418929:	inc    edx
  41892a:	fsubr  st(7),st
  41892c:	in     al,0x5c
  41892e:	fcomp  QWORD PTR [ecx]
  418930:	xor    al,0x44
  418932:	dec    ecx
  418933:	ins    DWORD PTR es:[edi],dx
  418934:	mov    dh,0x4e
  418936:	mov    dl,0x4b
  418938:	fiadd  DWORD PTR [ecx]
  41893a:	aad    0xf1
  41893c:	fs pop ss
  41893e:	and    al,0xac
  418940:	mov    esp,0x9d6a6ca1
  418945:	stc    
  418946:	stos   BYTE PTR es:[edi],al
  418947:	xchg   ecx,eax
  418948:	jecxz  0x4188e5
  41894a:	xor    DWORD PTR [esi],0x4
  41894d:	fsubr  QWORD PTR [ebx-0x67]
  418950:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  418952:	iret   
  418953:	jmp    0xb64434c8
  418958:	lea    ebp,[eax+0x570e927f]
  41895e:	call   DWORD PTR [esp+ecx*1-0x25a1bb71]
  418965:	adc    al,0x15
  418967:	add    ah,cl
  418969:	fwait
  41896a:	xchg   dx,ax
  41896c:	fldcw  WORD PTR [esi+0x4d]
  41896f:	add    al,BYTE PTR [edx]
  418971:	int3   
  418972:	xlat   BYTE PTR ds:[ebx]
  418973:	pusha  
  418974:	push   es
  418975:	cdq    
  418976:	rcr    BYTE PTR [esi+0x751ec917],0xbb
  41897d:	inc    ecx
  41897e:	inc    BYTE PTR [ebp+0x43]
  418981:	pop    edi
  418982:	mov    ecx,DWORD PTR [edi-0x13671d79]
  418988:	add    edi,DWORD PTR [esi+0x1fc4f997]
  41898e:	out    dx,al
  41898f:	adc    edx,DWORD PTR [ecx+0x316aec85]
  418995:	sub    bl,cl
  418997:	fwait
  418998:	jle    0x4189c9
  41899a:	sti    
  41899b:	bound  ecx,QWORD PTR [eax-0x2ce04d5b]
  4189a1:	fwait
  4189a2:	or     al,0x2b
  4189a4:	mov    DWORD PTR [edx+eax*4-0x3c],ebx
  4189a8:	inc    ecx
  4189a9:	stos   BYTE PTR es:[edi],al
  4189aa:	mov    ebx,0xdbc69a46
  4189af:	pop    ebx
  4189b0:	enter  0x24ad,0xbf
  4189b4:	aas    
  4189b5:	cdq    
  4189b6:	inc    eax
  4189b7:	aas    
  4189b8:	or     ch,BYTE PTR [ebp+edx*1+0x673d6be8]
  4189bf:	sub    edi,edx
  4189c1:	jecxz  0x41896b
  4189c3:	inc    ebx
  4189c4:	loopne 0x418a26
  4189c6:	ins    BYTE PTR es:[edi],dx
  4189c7:	call   0xe3e0e38f
  4189cc:	jno    0x418969
  4189ce:	mov    cl,0x9b
  4189d0:	div    DWORD PTR [edi-0x78]
  4189d3:	inc    ecx
  4189d4:	(bad)  
  4189d5:	xchg   ebp,eax
  4189d6:	(bad)  
  4189d8:	loop   0x4189ca
  4189da:	imul   esp,DWORD PTR [eax+eiz*1+0x367bb74c],0x11d15c1f
  4189e5:	ins    DWORD PTR es:[edi],dx
  4189e6:	mov    ebx,0x12d77442
  4189eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189ec:	(bad)  
  4189ed:	cmc    
  4189ee:	cdq    
  4189ef:	ficomp DWORD PTR [edi-0x25]
  4189f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189f3:	sbb    eax,0x312b1299
  4189f8:	xor    dl,BYTE PTR ds:0xc008f39c
  4189fe:	or     al,0xca
  418a00:	not    BYTE PTR [edx+ebx*4]
  418a03:	ds (bad) 
  418a05:	fcom   QWORD PTR [edx]
  418a07:	sub    esp,esi
  418a09:	ds lahf 
  418a0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a0c:	xor    DWORD PTR [esi*1+0x202ea06e],edx
  418a13:	ja     0x4189ee
  418a15:	mov    esp,0x44103b5
  418a1a:	push   eax
  418a1b:	mov    ch,0xb6
  418a1d:	push   edi
  418a1e:	std    
  418a1f:	data16 aas 
  418a21:	fstp   TBYTE PTR [edx]
  418a23:	ss jecxz 0x4189f0
  418a26:	cwde   
  418a27:	dec    ecx
  418a28:	mov    WORD PTR [esi+edi*4-0x2d7d5846],cs
  418a2f:	clc    
  418a30:	and    BYTE PTR fs:[eax],bh
  418a33:	inc    ecx
  418a34:	sub    bl,BYTE PTR [edx+esi*1]
  418a37:	loope  0x418a79
  418a39:	fimul  DWORD PTR [edi+eax*4+0x41]
  418a3d:	out    dx,eax
  418a3e:	sub    dl,dl
  418a40:	mov    bl,0xf0
  418a42:	in     al,0xf3
  418a44:	or     DWORD PTR [ebp+0x5c],ebx
  418a47:	stos   DWORD PTR es:[edi],eax
  418a48:	js     0x4189f0
  418a4a:	push   0xffffff93
  418a4c:	jo     0x418a85
  418a4e:	cmc    
  418a4f:	sub    eax,0xcaf5e832
  418a54:	test   al,0xe1
  418a56:	push   0x55c43808
  418a5b:	pushf  
  418a5c:	test   eax,0x184f51c8
  418a61:	sbb    ch,dl
  418a63:	sub    dl,al
  418a65:	mov    al,ds:0xf186438b
  418a6a:	inc    esp
  418a6b:	push   ebp
  418a6c:	and    DWORD PTR [ebp+0x1e],ecx
  418a6f:	mov    ch,0x76
  418a71:	cmp    ecx,DWORD PTR [edi+0x73436798]
  418a77:	xchg   ebp,eax
  418a78:	inc    esi
  418a79:	pushf  
  418a7a:	retf   
  418a7b:	mov    dh,0x1
  418a7d:	jle    0x418a2d
  418a7f:	ins    BYTE PTR es:[edi],dx
  418a80:	adc    BYTE PTR [eax+eax*2+0x34e60fd6],0x29
  418a88:	(bad)  
  418a8a:	stos   DWORD PTR es:[edi],eax
  418a8b:	push   ss
  418a8c:	popf   
  418a8d:	cmp    cl,al
  418a8f:	jne    0x418aeb
  418a91:	jae    0x418a22
  418a93:	push   esi
  418a94:	inc    esi
  418a95:	sub    ch,BYTE PTR [edx+eax*4+0x6887aba2]
  418a9c:	fadd   st(4),st
  418a9e:	mov    ds:0x368a5862,eax
  418aa3:	mov    bh,0x3e
  418aa5:	sbb    eax,DWORD PTR [ebp-0x2f045c26]
  418aab:	not    BYTE PTR [edi-0x66d2545a]
  418ab1:	push   ecx
  418ab2:	(bad)  
  418ab3:	popa   
  418ab4:	cmp    bl,0x6c
  418ab7:	and    BYTE PTR [edx-0x41],al
  418aba:	ret    0xf17
  418abd:	push   ecx
  418abe:	ja     0x418b0b
  418ac0:	jecxz  0x418b1d
  418ac2:	ins    BYTE PTR es:[edi],dx
  418ac3:	jl     0x418a7f
  418ac5:	push   ebx
  418ac6:	xchg   esp,eax
  418ac7:	stos   DWORD PTR es:[edi],eax
  418ac8:	dec    edx
  418ac9:	adc    edi,eax
  418acb:	test   DWORD PTR [ecx],ebx
  418acd:	repz pop gs
  418ad0:	mov    DWORD PTR [ecx+0x2e4cdaed],eax
  418ad6:	pop    ds
  418ad7:	sbb    DWORD PTR [ecx+0x62],esi
  418ada:	cli    
  418adb:	mov    BYTE PTR [esi],bh
  418add:	sahf   
  418ade:	jle    0x418b5b
  418ae0:	jae    0x418aa5
  418ae2:	mov    dl,0x94
  418ae4:	push   ss
  418ae5:	push   cs
  418ae6:	(bad)  
  418ae8:	stos   DWORD PTR es:[edi],eax
  418ae9:	pop    eax
  418aea:	push   es
  418aeb:	mov    dl,0xff
  418aed:	test   al,0x63
  418aef:	(bad)  
  418af0:	pop    esp
  418af1:	cdq    
  418af2:	mov    DWORD PTR [edi-0x42],esi
  418af5:	cmp    DWORD PTR [ecx+0x4a711111],esi
  418afb:	fiadd  WORD PTR [edi+0x6171d349]
  418b01:	push   ecx
  418b02:	adc    DWORD PTR [ebx-0x6f],ebx
  418b05:	out    dx,eax
  418b06:	jne    0x418b5c
  418b08:	out    dx,eax
  418b09:	in     al,dx
  418b0a:	push   ss
  418b0b:	push   edx
  418b0c:	sub    BYTE PTR [esi+0x63],dh
  418b0f:	fadd   DWORD PTR [edx]
  418b11:	pusha  
  418b12:	fistp  WORD PTR [ebx]
  418b14:	sub    eax,0x56f49994
  418b19:	cmp    eax,0xed461870
  418b1e:	mov    eax,ds:0xac16c249
  418b23:	jnp    0x418aee
  418b25:	jmp    DWORD PTR [eax+0x40]
  418b28:	test   DWORD PTR [edi-0x29ca70d7],esp
  418b2e:	shl    BYTE PTR [edx-0x2a],0xff
  418b32:	pop    edx
  418b33:	mov    ds:0x91b5a649,eax
  418b38:	mov    dl,0xa9
  418b3a:	mov    esi,0x62e8550d
  418b3f:	mov    eax,0xe3d07009
  418b44:	test   DWORD PTR [ecx+0x696ddbd7],edx
  418b4a:	xlat   BYTE PTR ds:[ebx]
  418b4b:	popf   
  418b4c:	dec    esp
  418b4d:	fidiv  DWORD PTR [eax]
  418b4f:	iret   
  418b50:	or     ebp,eax
  418b52:	sub    eax,0x9c28c8fc
  418b57:	sbb    DWORD PTR [esi-0x15],ecx
  418b5a:	outs   dx,DWORD PTR ds:[esi]
  418b5b:	sbb    al,0x8c
  418b5d:	mul    DWORD PTR [eax+0x78ec84b5]
  418b63:	(bad)  
  418b64:	(bad)  
  418b65:	rcr    DWORD PTR [edx+0x3bf260e6],1
  418b6b:	sbb    esp,DWORD PTR [ecx]
  418b6d:	fidivr WORD PTR [ebx+ecx*8+0x7f]
  418b71:	(bad)  [edx-0x629afbbe]
  418b77:	or     eax,0x61352d0d
  418b7c:	adc    DWORD PTR [ecx+esi*2+0x27],eax
  418b80:	jg     0x418b82
  418b82:	xchg   DWORD PTR [edx+0x5bf29a9d],eax
  418b88:	dec    edi
  418b89:	push   0xcc441419
  418b8e:	cmp    DWORD PTR [esi+0x22c8bc69],ebx
  418b94:	mov    eax,ds:0x71800491
  418b99:	jmp    0x418b24
  418b9b:	arpl   cx,sp
  418b9d:	pushf  
  418b9e:	pushf  
  418b9f:	pop    ecx
  418ba0:	sbb    esi,ecx
  418ba2:	push   es
  418ba3:	xchg   esp,eax
  418ba4:	xchg   edx,eax
  418ba5:	push   edx
  418ba6:	dec    esp
  418ba7:	sbb    esi,eax
  418ba9:	inc    ecx
  418baa:	and    al,0x7e
  418bac:	fidiv  WORD PTR gs:[edi-0xdce5297]
  418bb3:	inc    ecx
  418bb4:	sub    BYTE PTR [esi+eiz*1],bh
  418bb7:	test   BYTE PTR [ecx],dh
  418bb9:	out    dx,eax
  418bba:	aaa    
  418bbb:	jno    0x418b70
  418bbd:	loop   0x418c30
  418bbf:	scas   al,BYTE PTR es:[edi]
  418bc0:	jle    0x418c1a
  418bc2:	(bad)  
  418bc3:	jmp    0xc1716a1b
  418bc8:	sar    DWORD PTR [ebx-0x66],cl
  418bcb:	adc    eax,0x89437a07
  418bd0:	cmp    eax,0x3abdd129
  418bd5:	jo     0x418bd2
  418bd7:	sub    ebx,DWORD PTR [eiz*1+0x207c1a1]
  418bde:	add    BYTE PTR [ebp-0xf],cl
  418be1:	sub    BYTE PTR [ecx-0x3f],dh
  418be4:	nop
  418be5:	mov    eax,0x383dbabd
  418bea:	call   0x1766:0x97d70795
  418bf1:	loop   0x418bad
  418bf3:	jge    0x418b8e
  418bf5:	pusha  
  418bf6:	stc    
  418bf7:	mov    esi,0x8c53e476
  418bfc:	fldcw  WORD PTR [edi-0x23]
  418bff:	jne    0x418c5a
  418c01:	cdq    
  418c02:	push   ds
  418c03:	sub    eax,0x31a4af04
  418c08:	icebp  
  418c09:	cli    
  418c0a:	outs   dx,BYTE PTR ds:[esi]
  418c0b:	ins    DWORD PTR es:[edi],dx
  418c0c:	inc    ecx
  418c0d:	jg     0x418bcf
  418c0f:	fisttp WORD PTR [ecx]
  418c11:	add    BYTE PTR [ecx],dl
  418c13:	cld    
  418c14:	loopne 0x418bbc
  418c16:	adc    DWORD PTR [edi+0x282b2882],edi
  418c1c:	arpl   WORD PTR [eax],sp
  418c1e:	fbld   TBYTE PTR [ecx+0x42]
  418c21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c22:	in     al,dx
  418c23:	leave  
  418c24:	jbe    0x418c6e
  418c26:	xor    BYTE PTR [edx+0x26],ah
  418c29:	in     al,dx
  418c2a:	ffree  st(3)
  418c2c:	fcom   DWORD PTR [ecx-0x392d3f4e]
  418c32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c33:	(bad)  
  418c34:	(bad)  
  418c35:	js     0x418bd3
  418c37:	fwait
  418c38:	gs add al,0x12
  418c3b:	and    DWORD PTR [eax+0x2e1c90e5],esi
  418c41:	jl     0x418cab
  418c43:	inc    esp
  418c44:	test   BYTE PTR [ecx+0x2bf2ad1d],0xba
  418c4b:	jg     0x418cba
  418c4d:	sub    BYTE PTR [ebx+0x56],dh
  418c50:	sub    ah,dl
  418c52:	pushf  
  418c53:	loope  0x418c52
  418c55:	popf   
  418c56:	jo     0x418c6b
  418c58:	les    ebx,FWORD PTR [edi-0x3c]
  418c5b:	out    0x87,al
  418c5d:	add    eax,esi
  418c5f:	arpl   si,sp
  418c61:	mov    eax,0x2a134a4
  418c66:	mov    esi,0x8b9e24f2
  418c6b:	pop    esp
  418c6c:	xor    ecx,ecx
  418c6e:	out    0x17,al
  418c70:	lods   al,BYTE PTR ds:[esi]
  418c71:	add    BYTE PTR [esi],ch
  418c73:	pop    eax
  418c74:	adc    DWORD PTR [ecx-0x229144fb],esi
  418c7a:	xchg   esp,eax
  418c7b:	loopne 0x418cc8
  418c7d:	test   al,0x15
  418c7f:	push   esi
  418c80:	inc    eax
  418c81:	mov    dl,0x7f
  418c83:	push   esp
  418c84:	push   esi
  418c85:	je     0x418c1b
  418c87:	sbb    eax,DWORD PTR [edx+0x2]
  418c8a:	push   ecx
  418c8b:	es mov cl,0x23
  418c8e:	imul   ecx,DWORD PTR [ecx-0x24],0xffffffe1
  418c92:	not    BYTE PTR [ebx]
  418c94:	(bad)  
  418c95:	out    0xa0,al
  418c97:	mov    bh,0x9
  418c99:	jle    0x418c72
  418c9b:	xchg   ebp,eax
  418c9c:	shr    DWORD PTR [edi-0x7e893180],0x6f
  418ca3:	pop    ds
  418ca4:	jno    0x418cfa
  418ca6:	pop    ebp
  418ca7:	add    al,bh
  418ca9:	jae    0x418c43
  418cab:	dec    ebp
  418cac:	leave  
  418cad:	mov    eax,ds:0x5a3ce3a1
  418cb2:	imul   eax,DWORD PTR [ebp-0x8],0x1b75d324
  418cb9:	sub    BYTE PTR [eax-0x3cec88e7],cl
  418cbf:	sub    edx,DWORD PTR [ecx-0xa]
  418cc2:	mov    BYTE PTR [esi-0x2a6d62b6],cl
  418cc8:	scas   eax,DWORD PTR es:[edi]
  418cc9:	mov    ch,0xa3
  418ccb:	into   
  418ccc:	add    ah,BYTE PTR [edx+0x117ab59f]
  418cd2:	clc    
  418cd3:	sub    al,bl
  418cd5:	adc    al,0xb1
  418cd7:	js     0x418c9d
  418cd9:	dec    ecx
  418cda:	bound  esp,QWORD PTR [ecx]
  418cdc:	out    0xb1,eax
  418cde:	(bad)  
  418cdf:	mov    al,bh
  418ce1:	mov    ds:0xcfac6f77,al
  418ce6:	xchg   esp,eax
  418ce7:	adc    esp,DWORD PTR [eax+0x106fcff6]
  418ced:	xor    eax,0x8ba5feca
  418cf2:	cli    
  418cf3:	arpl   WORD PTR [esp+ebp*1-0x2a721ead],cx
  418cfa:	scas   eax,DWORD PTR es:[edi]
  418cfb:	mov    ebp,0xe7ed1677
  418d00:	mov    ah,BYTE PTR [edi-0x46]
  418d03:	or     bl,dl
  418d05:	shl    DWORD PTR [ebx],cl
  418d07:	mov    ?,WORD PTR ds:0x9223c735
  418d0d:	mov    edi,0x4da535
  418d12:	ins    BYTE PTR es:[edi],dx
  418d13:	mov    edi,DWORD PTR [eax-0x2f]
  418d16:	int3   
  418d17:	mov    BYTE PTR [eax+0x68],ch
  418d1a:	fidiv  WORD PTR [esp+edi*4+0x23469644]
  418d21:	jle    0x418d26
  418d23:	mov    edx,0x7b29fc05
  418d28:	pop    esp
  418d29:	dec    ebx
  418d2a:	es sbb eax,0x370fa7db
  418d30:	cs push 0x17
  418d33:	test   DWORD PTR [esi],ebx
  418d35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d36:	mov    bh,0xb5
  418d38:	jle    0x418cc4
  418d3a:	jae    0x418d60
  418d3c:	cli    
  418d3d:	xchg   edi,eax
  418d3e:	stc    
  418d3f:	jmp    0xbedf:0x3e61e09a
  418d46:	pop    ds
  418d47:	das    
  418d48:	add    al,0xc2
  418d4a:	cmp    ebp,DWORD PTR [ebx+eax*2-0x6]
  418d4e:	push   eax
  418d4f:	jl     0x418d9d
  418d51:	xor    BYTE PTR [ebx-0x30],ah
  418d54:	sbb    dh,dh
  418d56:	jmp    DWORD PTR [ebx]
  418d58:	sbb    al,0x25
  418d5a:	fmul   QWORD PTR [ebp+0x3b71037b]
  418d60:	xchg   ebx,eax
  418d61:	mov    eax,0x7e908fe2
  418d66:	(bad)  
  418d67:	mov    ds:0x28d2a2bd,eax
  418d6c:	sbb    BYTE PTR [edi-0x3b],al
  418d6f:	mov    ah,0xbe
  418d71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d72:	int3   
  418d73:	push   esi
  418d74:	(bad)  
  418d75:	inc    edi
  418d76:	push   edi
  418d77:	dec    edx
  418d78:	push   eax
  418d79:	ins    DWORD PTR es:[edi],dx
  418d7a:	lock mov eax,ds:0x25187549
  418d80:	stos   DWORD PTR es:[edi],eax
  418d81:	jo     0x418d33
  418d83:	jp     0x418dec
  418d85:	or     eax,0x4cc80f
  418d8a:	adc    dh,BYTE PTR [ebp-0x6944268f]
  418d90:	and    al,0xf3
  418d92:	inc    edx
  418d93:	bound  eax,QWORD PTR [edi+edi*2]
  418d96:	dec    ebp
  418d97:	xor    DWORD PTR [ebp+0x4d4d9756],edi
  418d9d:	cmp    DWORD PTR [esi+0x1c],ebx
  418da0:	push   es
  418da1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418da2:	aas    
  418da3:	xchg   ecx,eax
  418da4:	xor    bl,BYTE PTR [esi]
  418da6:	ficomp WORD PTR es:[edi+0x1b]
  418daa:	dec    eax
  418dab:	mov    ah,0x71
  418dad:	pop    eax
  418dae:	dec    edx
  418daf:	push   ss
  418db0:	jns    0x418de0
  418db2:	inc    edx
  418db3:	fisttp QWORD PTR [edx-0x60c0131]
  418db9:	mov    ecx,0x62fcb2b1
  418dbe:	jbe    0x418e2c
  418dc0:	jbe    0x418db5
  418dc2:	out    0x4b,al
  418dc4:	add    eax,0x937e6f99
  418dc9:	mov    esp,0xd5ee14c8
  418dce:	mov    ?,WORD PTR [ebx]
  418dd0:	icebp  
  418dd1:	sbb    DWORD PTR [ebx+0x6597a9b6],esi
  418dd7:	or     al,0x60
  418dd9:	aas    
  418dda:	add    eax,0xb8c92f0f
  418ddf:	in     al,dx
  418de0:	pop    ecx
  418de1:	xchg   BYTE PTR [ecx+0x3dc512e8],ch
  418de7:	(bad)  
  418de8:	xchg   ecx,eax
  418de9:	mov    edx,0x79fa239c
  418dee:	pusha  
  418def:	cmp    bl,dh
  418df1:	sbb    al,0x24
  418df3:	mov    dl,0x33
  418df5:	mov    cl,0xe5
  418df7:	outs   dx,DWORD PTR ds:[esi]
  418df8:	popa   
  418df9:	leave  
  418dfa:	hlt    
  418dfb:	dec    edx
  418dfc:	fisttp QWORD PTR [eax+0x25]
  418dff:	nop
  418e00:	test   eax,0x5d226620
  418e05:	loop   0x418e2e
  418e07:	adc    al,0x24
  418e09:	ja     0x418d9e
  418e0b:	scas   al,BYTE PTR es:[edi]
  418e0c:	xor    edi,0xf771ebf
  418e12:	push   ebx
  418e13:	push   edx
  418e14:	test   al,0x3e
  418e16:	mov    eax,ds:0x31110ed6
  418e1c:	bound  ecx,QWORD PTR [esi-0x6ff57c5c]
  418e22:	jbe    0x418e0e
  418e24:	sbb    BYTE PTR [ebx],cl
  418e26:	sub    al,0xdd
  418e28:	aam    0xf4
  418e2a:	push   ss
  418e2b:	inc    ecx
  418e2c:	rol    BYTE PTR [ebx],cl
  418e2e:	or     DWORD PTR [edi+0x6e5c7781],ebx
  418e34:	add    BYTE PTR [eax+0x357b5ea],dh
  418e3a:	add    DWORD PTR [ebx],0x3ac32623
  418e40:	sti    
  418e41:	scas   al,BYTE PTR es:[edi]
  418e42:	nop
  418e43:	sti    
  418e44:	ins    DWORD PTR es:[edi],dx
  418e45:	mov    esi,0x12fe0100
  418e4a:	sub    ebp,DWORD PTR [edx+0x57]
  418e4d:	inc    eax
  418e4e:	pop    ss
  418e4f:	(bad)  
  418e51:	cmp    BYTE PTR [esi-0x109bb5bb],dh
  418e57:	and    ah,BYTE PTR ds:0x86fc08a6
  418e5d:	cmp    dh,BYTE PTR [ebp+eiz*8+0xe]
  418e61:	mov    ah,0x64
  418e63:	je     0x418e7a
  418e65:	jae    0x418e42
  418e67:	into   
  418e68:	sbb    eax,0xebb0b2b9
  418e6d:	xor    bl,BYTE PTR [eax-0x60]
  418e70:	cmc    
  418e71:	pop    eax
  418e72:	lods   eax,DWORD PTR ds:[esi]
  418e73:	test   eax,0x21cb8b61
  418e78:	out    0x4c,al
  418e7a:	pop    ds
  418e7b:	and    DWORD PTR [edi+0x26],edx
  418e7e:	mov    esi,0x751b0a0b
  418e83:	xchg   edx,eax
  418e84:	sbb    BYTE PTR [eax-0x1d],al
  418e87:	mov    esp,0xc5346e70
  418e8c:	add    al,0xf9
  418e8e:	xor    al,0x2b
  418e90:	jmp    0x72b973ed
  418e95:	inc    eax
  418e96:	or     DWORD PTR [ebp-0x6c],ebx
  418e99:	add    BYTE PTR [ebx+0x6c],bh
  418e9c:	xchg   esi,eax
  418e9d:	push   edi
  418e9e:	icebp  
  418e9f:	mov    ds:0xac4bcd7e,eax
  418ea4:	iret   
  418ea5:	daa    
  418ea6:	mov    al,0x7
  418ea8:	dec    ebx
  418ea9:	mov    ebp,0xba8631ad
  418eae:	pop    ds
  418eaf:	push   edx
  418eb0:	stc    
  418eb1:	enter  0x8c9e,0xf8
  418eb5:	ret    0xa5f3
  418eb8:	lock dec edx
  418eba:	jmp    0x418ec9
  418ebc:	and    BYTE PTR [edx+edi*2+0x7c199a6a],bl
  418ec3:	in     eax,0x5d
  418ec5:	ja     0x418f3d
  418ec7:	push   esi
  418ec8:	dec    eax
  418ec9:	stos   DWORD PTR es:[edi],eax
  418eca:	sti    
  418ecb:	call   0xec029604
  418ed0:	jns    0x418f1c
  418ed2:	int    0x99
  418ed4:	xchg   esi,eax
  418ed5:	fld    DWORD PTR [edi-0x32d1fc1e]
  418edb:	test   DWORD PTR [edi],ebp
  418edd:	xor    ecx,DWORD PTR [edi+0x7c]
  418ee0:	(bad)  
  418ee4:	mov    al,bl
  418ee6:	push   0xffffffcd
  418ee8:	dec    edi
  418ee9:	push   edx
  418eea:	mov    dl,0xb
  418eec:	fnstenv ds:0x1f49fad0
  418ef2:	mov    al,0x1
  418ef4:	push   0xffffff84
  418ef6:	stos   BYTE PTR es:[edi],al
  418ef7:	xchg   esp,eax
  418ef8:	(bad)
  418efb:	mov    dh,0x4e
  418efd:	test   bl,ch
  418eff:	(bad)  
  418f00:	xchg   ebx,eax
  418f01:	jne    0x418e9f
  418f03:	pop    edx
  418f04:	js     0x418ea9
  418f06:	out    0xb5,eax
  418f08:	das    
  418f09:	push   ebp
  418f0a:	loop   0x418f39
  418f0c:	fcomp  QWORD PTR [eax]
  418f0e:	and    DWORD PTR [ebp+0x435e5e89],0xffffffc0
  418f15:	xor    DWORD PTR [esi],ebp
  418f17:	inc    ebp
  418f18:	xchg   DWORD PTR [ebx+0x6c],ebx
  418f1b:	inc    DWORD PTR [edx-0xc3b4475]
  418f21:	mov    dl,0x3
  418f23:	pop    ds
  418f24:	xchg   esi,eax
  418f25:	jns    0x418f40
  418f27:	popa   
  418f28:	test   eax,0xebb43b93
  418f2d:	add    al,0x9e
  418f2f:	adc    al,BYTE PTR [eax]
  418f31:	ror    BYTE PTR [esi-0x10],cl
  418f34:	inc    edx
  418f35:	(bad)  
  418f36:	mov    al,0xc7
  418f38:	cmc    
  418f39:	addr16 mov ch,0x61
  418f3c:	aaa    
  418f3d:	inc    eax
  418f3e:	imul   ecx,DWORD PTR [ecx-0x7df84655],0xffffffca
  418f45:	(bad)  [ebp+0x1747adc]
  418f4b:	nop
  418f4c:	ins    BYTE PTR es:[edi],dx
  418f4d:	adc    dh,ch
  418f4f:	mov    esi,0x9bcc239a
  418f54:	into   
  418f55:	sbb    eax,0xc8763b72
  418f5a:	pop    ecx
  418f5b:	addr16 aaa 
  418f5d:	jmp    0x5c77:0xc4c19397
  418f64:	test   al,0x27
  418f66:	jae    0x418f53
  418f68:	rcr    BYTE PTR [eax],0xa9
  418f6b:	or     edi,DWORD PTR [edx+esi*2+0x5b034972]
  418f72:	aas    
  418f73:	pop    ss
  418f74:	std    
  418f75:	aam    0x49
  418f77:	stos   DWORD PTR es:[edi],eax
  418f78:	jae    0x418fa9
  418f7a:	dec    edx
  418f7b:	xor    dh,BYTE PTR [edx-0x27]
  418f7e:	or     cl,ch
  418f80:	pusha  
  418f81:	lock js 0x418f04
  418f84:	inc    ebx
  418f85:	pop    ss
  418f86:	ret    
  418f87:	dec    esi
  418f88:	rol    DWORD PTR [edi-0x49ca47b1],1
  418f8e:	add    dh,BYTE PTR [edi-0x38]
  418f91:	xchg   BYTE PTR [esi],bh
  418f93:	jnp    0x418f90
  418f95:	loopne 0x418fe9
  418f97:	add    BYTE PTR [ebx],ch
  418f99:	push   ss
  418f9a:	xchg   edi,eax
  418f9b:	push   es
  418f9c:	cli    
  418f9d:	loope  0x418ffa
  418f9f:	pop    ebx
  418fa0:	or     BYTE PTR [edi+0x1e],bh
  418fa3:	xchg   esi,eax
  418fa4:	jbe    0x418fff
  418fa6:	faddp  st(1),st
  418fa8:	imul   esp,esp,0xfffffff5
  418fab:	cmp    ch,0x5b
  418fae:	leave  
  418faf:	rcl    DWORD PTR [edi+0x6d415e56],cl
  418fb5:	imul   ebx,DWORD PTR [eax-0x184562cc],0xd9d614bd
  418fbf:	xlat   BYTE PTR ds:[ebx]
  418fc0:	add    BYTE PTR [edi+ebx*4-0x50b7a7c6],ah
  418fc7:	jp     0x419009
  418fc9:	ja     0x418f70
  418fcb:	adc    eax,esp
  418fcd:	or     BYTE PTR [bp+si-0x7483],al
  418fd2:	push   esp
  418fd3:	jmp    0xf613:0x5541d4d9
  418fda:	lods   eax,DWORD PTR ds:[esi]
  418fdb:	and    al,0x85
  418fdd:	dec    edi
  418fde:	inc    eax
  418fdf:	in     al,0xc9
  418fe1:	dec    ebx
  418fe2:	enter  0xdc90,0x65
  418fe6:	in     eax,0xf2
  418fe8:	addr16 xchg esp,eax
  418fea:	(bad)  
  418feb:	ds mov bl,0xfb
  418fee:	add    cl,BYTE PTR [eax-0x1d2bfb34]
  418ff4:	mov    edx,0x88670a1c
  418ff9:	retf   0x96da
  418ffc:	aas    
  418ffd:	pusha  
  418ffe:	mov    al,0x9
  419000:	push   es
  419001:	xchg   esi,eax
  419002:	std    
  419003:	or     DWORD PTR [ecx+ebp*1+0x1a7144d0],esp
  41900a:	dec    esp
  41900b:	jnp    0x418fb2
  41900d:	sub    eax,0x98224854
  419012:	cmpxchg BYTE PTR ds:0x33ca0a93,ch
  419019:	mov    ecx,0x59dcf69
  41901e:	mov    ah,BYTE PTR [eax-0x67]
  419021:	or     al,0x15
  419023:	nop
  419024:	fisubr WORD PTR [edi+0x23]
  419027:	cmp    ebx,0xe7696df1
  41902d:	shl    BYTE PTR [esi-0x6e],0xd8
  419031:	lds    esi,FWORD PTR [ebp-0x4b]
  419034:	inc    esi
  419035:	cs dec ebx
  419037:	sbb    dh,BYTE PTR ss:[ecx-0x541f72b9]
  41903e:	jb     0x419005
  419040:	pop    ss
  419041:	add    al,0xb4
  419043:	sub    ah,al
  419045:	mov    eax,0xe79723a2
  41904a:	mov    dh,0xda
  41904c:	das    
  41904d:	cmp    BYTE PTR [esi],ch
  41904f:	mov    ah,0xf1
  419051:	adc    BYTE PTR [edx+0x1e41e743],al
  419057:	dec    edi
  419058:	gs in  eax,dx
  41905a:	pop    esi
  41905b:	mov    esp,0x89fb3260
  419060:	sub    DWORD PTR [esi+0x45],eax
  419063:	dec    edi
  419064:	pop    edi
  419065:	out    0xc9,al
  419067:	jbe    0x4190e3
  419069:	or     DWORD PTR [ecx+0xeb71d2f],ebx
  41906f:	addr16 (bad) 
  419071:	push   esi
  419072:	xor    al,0x9d
  419074:	iret   
  419075:	mov    esp,0x8fd811de
  41907a:	push   ebx
  41907b:	outs   dx,BYTE PTR ds:[esi]
  41907c:	and    al,ah
  41907e:	jno    0x419030
  419080:	pop    esi
  419081:	add    DWORD PTR [eax+0x4d],esi
  419084:	call   0x2e72:0x2b4c292c
  41908b:	stos   DWORD PTR es:[edi],eax
  41908c:	imul   ebx,DWORD PTR [edx+0x57f94299],0xffffffa9
  419093:	int    0x4
  419095:	shr    BYTE PTR [ecx],1
  419097:	icebp  
  419098:	outs   dx,DWORD PTR ds:[esi]
  419099:	ja     0x419065
  41909b:	ret    0x14bb
  41909e:	out    0xa7,eax
  4190a0:	adc    eax,0x75ed3acd
  4190a5:	xor    eax,0x32b62b8d
  4190aa:	inc    esp
  4190ab:	clc    
  4190ac:	mov    cl,0x23
  4190ae:	cmp    DWORD PTR ds:0x39869943,ebx
  4190b4:	inc    esi
  4190b5:	inc    esi
  4190b6:	adc    BYTE PTR ds:0x4b52c1b2,bl
  4190bc:	xlat   BYTE PTR ds:[ebx]
  4190bd:	pop    ebx
  4190be:	cmp    DWORD PTR [ebp+edi*8+0x17],ecx
  4190c2:	fsub   DWORD PTR [esi+0x6a9711f1]
  4190c8:	and    esi,DWORD PTR [edi-0x76a7f01f]
  4190ce:	jae    0x41905c
  4190d0:	or     bl,BYTE PTR [edx+0x6b5568c8]
  4190d6:	sub    DWORD PTR [ecx-0x71],0x10a623e
  4190dd:	and    dh,BYTE PTR [esi-0x44]
  4190e0:	push   ecx
  4190e1:	bound  eax,QWORD PTR [eax-0x48]
  4190e4:	sub    ah,BYTE PTR [eax]
  4190e6:	lds    eax,FWORD PTR [esi+0x77cfb729]
  4190ec:	outs   dx,BYTE PTR ds:[esi]
  4190ed:	sub    al,0x90
  4190ef:	(bad)  
  4190f0:	fld    TBYTE PTR [esi]
  4190f2:	arpl   WORD PTR [eax+0x14c96591],sp
  4190f8:	push   ebx
  4190f9:	iret   
  4190fa:	int    0xe1
  4190fc:	repz sahf 
  4190fe:	cmp    BYTE PTR [ebp-0xc13136],dh
  419104:	(bad)  
  419105:	stos   BYTE PTR es:[edi],al
  419106:	das    
  419107:	xor    ebp,esp
  419109:	cmp    al,BYTE PTR [ebx+eiz*4-0xa9efa92]
  419110:	sbb    al,0xdc
  419112:	xchg   ecx,eax
  419113:	(bad)  
  419114:	fst    DWORD PTR [ebp+0x16]
  419117:	aam    0xe1
  419119:	xor    DWORD PTR [edx+edi*8+0x75afffee],ecx
  419120:	pop    edx
  419121:	jno    0x4190f9
  419123:	dec    eax
  419124:	mov    ecx,0x97bccf78
  419129:	(bad)  
  41912a:	mov    dh,0x84
  41912c:	clc    
  41912d:	fld    DWORD PTR [eax+0x48cc1ce2]
  419133:	loop   0x41916c
  419135:	push   cs
  419136:	jl     0x419167
  419138:	imul   BYTE PTR [esi-0x5b1338fa]
  41913e:	daa    
  41913f:	addr16 (bad) 
  419141:	jne    0x419178
  419143:	sbb    eax,0xcf53b6df
  419148:	inc    esi
  419149:	inc    ebp
  41914a:	repz aas 
  41914c:	out    dx,eax
  41914d:	push   cs
  41914e:	dec    esp
  41914f:	pop    ebx
  419150:	push   ecx
  419151:	mov    cl,0xd3
  419153:	dec    ecx
  419154:	push   esi
  419155:	test   BYTE PTR [ebx+0x1a],dh
  419158:	shl    DWORD PTR [ecx],cl
  41915a:	inc    ecx
  41915b:	in     al,0x63
  41915d:	mov    esi,DWORD PTR [edx+edx*1]
  419160:	xchg   ecx,eax
  419161:	mov    eax,ds:0xe026fa77
  419166:	and    al,0xe7
  419168:	mov    ah,0xa2
  41916a:	and    al,0x67
  41916c:	fwait
  41916d:	mov    al,ds:0xb4d6d605
  419172:	popf   
  419173:	adc    ah,BYTE PTR [ecx-0x2e]
  419176:	push   ebp
  419177:	imul   ecx,DWORD PTR gs:[eax-0x49b64aab],0xe7e10df1
  419182:	and    eax,0xa6f0a1e0
  419187:	xchg   ebp,eax
  419188:	inc    esi
  419189:	cmp    ch,BYTE PTR [eax]
  41918b:	(bad)  
  41918c:	int    0xef
  41918e:	jne    0x419160
  419190:	ror    DWORD PTR [ecx+0x588194bd],cl
  419196:	call   0xf236d2ff
  41919b:	pop    edx
  41919c:	or     DWORD PTR [edi+esi*1-0x66733ff9],ebx
  4191a3:	xor    eax,0xe60a1121
  4191a8:	jnp    0x4191ff
  4191aa:	popa   
  4191ab:	push   esp
  4191ac:	enter  0xa082,0x3c
  4191b0:	inc    esp
  4191b1:	and    BYTE PTR [edi+edx*1-0x600654b5],bh
  4191b8:	and    DWORD PTR ds:0xb7014193,edi
  4191be:	in     al,dx
  4191bf:	cmp    eax,0x1196e78d
  4191c4:	out    0xc4,al
  4191c6:	push   esi
  4191c7:	je     0x4191b5
  4191c9:	fild   DWORD PTR [edx]
  4191cb:	(bad)  
  4191cd:	push   0x92e46181
  4191d2:	adc    BYTE PTR [eax],0x31
  4191d5:	outs   dx,DWORD PTR ds:[esi]
  4191d6:	push   ecx
  4191d7:	inc    esp
  4191d8:	outs   dx,DWORD PTR ds:[esi]
  4191d9:	xor    cl,BYTE PTR [eax]
  4191db:	fcomp  st(0)
  4191dd:	daa    
  4191de:	push   0x849ee28e
  4191e3:	pop    ebx
  4191e4:	hlt    
  4191e5:	pop    ecx
  4191e6:	pop    edi
  4191e7:	jg     0x419215
  4191e9:	mov    dl,0x10
  4191eb:	adc    esp,0xad189955
  4191f1:	outs   dx,DWORD PTR ds:[esi]
  4191f2:	iret   
  4191f3:	adc    al,BYTE PTR ds:0xb8d834bd
  4191f9:	jbe    0x4191c2
  4191fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191fc:	jne    0x41920a
  4191fe:	mov    dh,0xbf
  419200:	pop    ebx
  419201:	dec    esp
  419202:	pop    es
  419203:	cmp    al,0x42
  419205:	test   eax,0x363b55cf
  41920a:	into   
  41920b:	jl     0x4191dc
  41920d:	int    0x91
  41920f:	dec    esp
  419210:	popf   
  419211:	xchg   edx,eax
  419212:	and    bl,BYTE PTR [ecx+ecx*1-0x3b580ca2]
  419219:	dec    edx
  41921a:	mov    ds:0x345c2901,eax
  41921f:	or     DWORD PTR [ecx],ebp
  419221:	adc    al,0xc5
  419223:	sbb    DWORD PTR [eax],eax
  419225:	shl    BYTE PTR [edi-0x6c],0xd0
  419229:	mov    dh,0x1b
  41922b:	xchg   edi,eax
  41922c:	stos   BYTE PTR es:[edi],al
  41922d:	icebp  
  41922e:	jo     0x41928a
  419230:	add    ebx,DWORD PTR [esi]
  419232:	jg     0x419251
  419234:	imul   DWORD PTR [edx-0x5d]
  419237:	je     0x4191bc
  419239:	lods   al,BYTE PTR ds:[esi]
  41923a:	inc    eax
  41923b:	cwde   
  41923c:	jne    0x4191da
  41923e:	adc    al,0x7a
  419240:	loope  0x4191e2
  419242:	mov    ecx,0x882fc65
  419247:	cmp    BYTE PTR [esp+edi*1+0x28ea38f6],bl
  41924e:	inc    esp
  41924f:	sahf   
  419250:	test   DWORD PTR ds:0x2f0eae61,0xc5b3e78a
  41925a:	mov    ah,0x26
  41925c:	ror    BYTE PTR [edi],cl
  41925e:	mov    ds:0xf97f329d,al
  419263:	(bad)  
  419265:	retf   0x549d
  419268:	mov    bl,0x82
  41926a:	test   al,0x37
  41926c:	xchg   DWORD PTR [esp+esi*8],edi
  41926f:	loopne 0x41920a
  419271:	mov    bl,0x95
  419273:	push   ss
  419274:	inc    esi
  419275:	nop
  419276:	sub    ch,al
  419278:	cmp    BYTE PTR [edi-0x49a74555],al
  41927e:	adc    eax,0x85b8942e
  419283:	retf   
  419284:	push   edx
  419285:	dec    esi
  419286:	(bad)  [ebp+0x10b0454b]
  41928d:	pop    ebp
  41928e:	lods   al,BYTE PTR ds:[esi]
  41928f:	xor    ecx,eax
  419291:	mov    DWORD PTR [ebp+0x8],ecx
  419294:	mov    ecx,DWORD PTR [ebp+0x8]
  419297:	mov    edx,DWORD PTR [ebp-0x58]
  41929a:	add    ecx,0x5708e2
  4192a0:	imul   ecx,edx
  4192a3:	mov    DWORD PTR [ebp-0x58],ecx
  4192a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4192a9:	mov    edx,DWORD PTR [ebp-0x54]
  4192ac:	add    ecx,0x64f89c
  4192b2:	or     ecx,edx
  4192b4:	mov    DWORD PTR [ebp-0x54],ecx
  4192b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4192ba:	jmp    0x41b643
  4192bf:	aad    0xa2
  4192c1:	mov    dh,0x8d
  4192c3:	mov    al,0x81
  4192c5:	ror    BYTE PTR [edx+0x26797ce2],0xc5
  4192cc:	push   esp
  4192cd:	jb     0x4192dc
  4192cf:	daa    
  4192d0:	sbb    al,0x82
  4192d2:	adc    DWORD PTR [edi],0x5c
  4192d5:	add    DWORD PTR [ebx+0x1b8f500b],0xffffff9b
  4192dc:	adc    eax,0x342be40f
  4192e1:	dec    ebp
  4192e2:	xor    BYTE PTR [edx-0x51d43039],bh
  4192e8:	jne    0x419361
  4192ea:	mov    WORD PTR [edx+edx*4+0x4f8aa212],?
  4192f1:	adc    DWORD PTR ds:0x2b44f2e4,ebp
  4192f7:	jmp    0x423e:0x2aa263f3
  4192fe:	mov    cl,0xb1
  419300:	(bad)  
  419301:	(bad)  
  419302:	mov    ds:0x6730aa4d,eax
  419307:	daa    
  419308:	stc    
  419309:	(bad)  
  41930a:	into   
  41930b:	xor    eax,0xa037a3a9
  419310:	add    al,0x86
  419312:	mov    esp,0xd410f3a0
  419317:	push   esi
  419318:	pop    ebp
  419319:	div    BYTE PTR ds:0x31615a10
  41931f:	outs   dx,BYTE PTR ds:[esi]
  419320:	test   DWORD PTR [esi],esi
  419322:	xor    dh,BYTE PTR [ebp+0x2302664e]
  419328:	sub    DWORD PTR [edx+0x4ecdef19],edx
  41932e:	jnp    0x419381
  419330:	fdivr  st,st(7)
  419332:	in     al,dx
  419333:	(bad)  
  419334:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  419336:	idiv   BYTE PTR ds:0x52ca87df
  41933c:	getsec 
  41933e:	jecxz  0x419333
  419340:	imul   edx,DWORD PTR [ebp-0x78eedb81],0x5a
  419347:	aaa    
  419348:	sbb    ebx,ecx
  41934a:	fwait
  41934b:	popa   
  41934c:	adc    al,0x32
  41934e:	(bad)  
  41934f:	(bad)  
  419350:	xchg   ecx,eax
  419351:	inc    ebx
  419352:	lock iret 
  419354:	fwait
  419355:	pop    esi
  419356:	scas   al,BYTE PTR es:[edi]
  419357:	add    DWORD PTR [esi],edx
  419359:	xchg   esi,eax
  41935a:	jmp    0x8673:0x90f8fbd5
  419361:	gs jnp 0x419376
  419364:	jge    0x419312
  419366:	outs   dx,BYTE PTR ds:[esi]
  419367:	xor    al,0x3
  419369:	pop    ecx
  41936a:	jne    0x419361
  41936c:	and    DWORD PTR [edi*4-0x56f4dcfd],0xbeb17ce2
  419377:	shr    esp,cl
  419379:	std    
  41937a:	pop    esi
  41937b:	cmp    ebx,DWORD PTR [ebp-0x6c1b5912]
  419381:	pop    ebp
  419382:	pop    edi
  419383:	xor    eax,0x76c66a27
  419388:	jmp    0x4193ab
  41938a:	je     0x41930c
  41938c:	push   eax
  41938d:	dec    ebx
  41938e:	push   0x9c523c66
  419393:	test   eax,0xf7309646
  419398:	popa   
  419399:	stos   BYTE PTR es:[edi],al
  41939a:	mov    esi,0x8640f353
  41939f:	jno    0x4193db
  4193a1:	out    0xb9,eax
  4193a3:	out    0x6e,eax
  4193a5:	pusha  
  4193a6:	push   edi
  4193a7:	and    DWORD PTR [ecx+0x1d],0xeebb9075
  4193ae:	pop    ebp
  4193af:	(bad)  
  4193b0:	lods   al,BYTE PTR ds:[esi]
  4193b1:	push   ss
  4193b2:	enter  0x9eb5,0xb8
  4193b6:	adc    edi,DWORD PTR [esp+ecx*4-0x203f615a]
  4193bd:	clc    
  4193be:	push   0x2aba56b3
  4193c3:	or     DWORD PTR [edi-0x47],ebp
  4193c6:	xor    eax,0x39de5870
  4193cb:	pop    DWORD PTR [ebx]
  4193cd:	mov    ds:0x51598264,al
  4193d2:	pop    esp
  4193d3:	inc    eax
  4193d4:	retf   0xd3d6
  4193d7:	and    BYTE PTR [ecx-0x2c],0x6f
  4193db:	dec    ecx
  4193dc:	jae    0x419438
  4193de:	or     BYTE PTR [eax+0x669509f0],0x65
  4193e5:	mov    eax,ds:0x8b4d1595
  4193ea:	jae    0x419393
  4193ec:	push   eax
  4193ed:	imul   esi,DWORD PTR [eax+ecx*1],0x16
  4193f1:	and    al,0x93
  4193f3:	out    dx,al
  4193f4:	fs icebp 
  4193f6:	pusha  
  4193f7:	dec    ebp
  4193f8:	mov    ecx,ebx
  4193fa:	xchg   ecx,eax
  4193fb:	jns    0x4193ca
  4193fd:	xor    ah,BYTE PTR [ebp+0x4a]
  419400:	hlt    
  419401:	(bad)  
  419402:	and    eax,0xc34cb402
  419407:	lods   al,BYTE PTR ds:[esi]
  419408:	lea    edx,[esi+0x55c6d87a]
  41940e:	mov    ebx,0xa6b02df3
  419413:	inc    ecx
  419414:	shl    BYTE PTR [edi+ecx*4-0x8],0x5a
  419419:	pop    eax
  41941a:	xchg   ebp,eax
  41941b:	popa   
  41941c:	add    DWORD PTR [edx+0x5d76253f],ebp
  419422:	div    BYTE PTR [ebx]
  419424:	std    
  419425:	dec    edi
  419426:	jo     0x419405
  419428:	jmp    0xe2ba:0xf889588f
  41942f:	stos   BYTE PTR es:[edi],al
  419430:	jae    0x4193db
  419432:	mov    bh,0x56
  419434:	iret   
  419435:	pop    esp
  419436:	cmp    al,cl
  419438:	js     0x419460
  41943a:	(bad)  
  41943b:	and    bh,cl
  41943d:	dec    ebx
  41943e:	xchg   DWORD PTR [ecx+eax*2-0x519a1ea0],edi
  419445:	lods   al,BYTE PTR ds:[esi]
  419446:	adc    cl,BYTE PTR [eax+0x30b90021]
  41944c:	data16 adc BYTE PTR [eax-0x5d],cl
  419450:	jge    0x419486
  419452:	mov    dl,0x70
  419454:	mov    esi,0x546c223
  419459:	in     al,0x41
  41945b:	out    0xba,eax
  41945d:	loope  0x419485
  41945f:	inc    ecx
  419460:	mov    al,0x23
  419462:	mov    edx,0xdbfe6e7
  419467:	ret    
  419468:	imul   eax,ebp,0x46
  41946b:	cmc    
  41946c:	js     0x41949e
  41946e:	clc    
  41946f:	scas   eax,DWORD PTR es:[edi]
  419470:	inc    edx
  419471:	lds    edx,FWORD PTR [edx+0x1d]
  419474:	and    BYTE PTR [ebx],dh
  419476:	je     0x41941d
  419478:	ror    edi,1
  41947a:	inc    edi
  41947b:	xchg   esp,eax
  41947c:	ret    
  41947d:	push   edx
  41947e:	push   es
  41947f:	dec    ecx
  419480:	xlat   BYTE PTR ds:[ebx]
  419481:	arpl   WORD PTR gs:[esp-0x50],si
  419486:	(bad)  [esi-0x6e]
  419489:	(bad)  [eax+ebx*8-0x527474d9]
  419490:	into   
  419491:	add    esp,DWORD PTR [ecx]
  419493:	jl     0x4194d6
  419495:	in     eax,0x4a
  419497:	retf   0xe86b
  41949a:	dec    edx
  41949b:	or     eax,0x87104c0b
  4194a0:	pop    ebx
  4194a1:	inc    ebp
  4194a2:	push   esi
  4194a3:	out    dx,eax
  4194a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194a5:	dec    esp
  4194a6:	call   0x5b1def4e
  4194ab:	je     0x419514
  4194ad:	push   DWORD PTR [bx+di+0x5d]
  4194b1:	mov    ebp,DWORD PTR [ebx-0x36dfe11f]
  4194b7:	push   ds
  4194b8:	rcr    BYTE PTR [eax-0x13],cl
  4194bb:	jmp    0x744a:0x9aa66d7f
  4194c2:	daa    
  4194c3:	or     DWORD PTR [esi-0x67],edi
  4194c6:	mov    WORD PTR [esi+0x3db24088],gs
  4194cc:	fnstenv ds:0x4376f0b9
  4194d2:	les    ecx,FWORD PTR [edi+eax*1]
  4194d5:	enter  0xa0e7,0x57
  4194d9:	mov    al,0xce
  4194db:	cmp    DWORD PTR [eax+0x3a09d0b5],ebp
  4194e1:	dec    esp
  4194e2:	pop    edx
  4194e3:	rol    BYTE PTR [edx-0x69],0x2e
  4194e7:	(bad)  
  4194e8:	fldenv ds:0x81e7a488
  4194ee:	out    0x2d,eax
  4194f0:	cmp    eax,0xf15175a0
  4194f5:	mov    esp,edi
  4194f7:	imul   ebx,DWORD PTR [eax],0x33
  4194fa:	pop    ecx
  4194fb:	mov    ecx,0x3e87d554
  419500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419501:	mov    dl,0xe5
  419503:	fwait
  419504:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419505:	push   eax
  419506:	lods   al,BYTE PTR ds:[esi]
  419507:	xchg   ecx,eax
  419508:	(bad)  
  419509:	iret   
  41950a:	jge    0x4194fd
  41950c:	sbb    dl,0xe0
  41950f:	mov    ecx,DWORD PTR gs:0xbb2131a
  419516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419517:	add    al,0xda
  419519:	js     0x419529
  41951b:	jns    0x419580
  41951d:	scas   eax,DWORD PTR es:[edi]
  41951e:	push   0x8665ad2e
  419523:	mov    DWORD PTR [eax-0x12a04860],edi
  419529:	jno    0x4194fe
  41952b:	pop    ecx
  41952c:	mov    eax,0xe19b3baf
  419531:	hlt    
  419532:	mov    ch,0x45
  419534:	jbe    0x41951e
  419536:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419537:	fimul  DWORD PTR [ecx*8-0x5b83085b]
  41953e:	inc    edx
  41953f:	pop    eax
  419540:	jb     0x419544
  419542:	icebp  
  419543:	pop    es
  419544:	mov    esp,0xdd5af275
  419549:	jecxz  0x41951d
  41954b:	call   0x8c92:0x215506fc
  419552:	xchg   ebp,eax
  419553:	pop    ss
  419554:	push   edx
  419555:	stc    
  419556:	stc    
  419557:	xlat   BYTE PTR ds:[ebx]
  419558:	xchg   esi,eax
  419559:	adc    esp,ebx
  41955b:	pop    ds
  41955c:	nop
  41955d:	daa    
  41955e:	lds    ebp,FWORD PTR [ebx+eax*2]
  419561:	pop    esi
  419562:	jno    0x419596
  419564:	or     DWORD PTR ds:0xaad2da3e,esi
  41956a:	ja     0x419516
  41956c:	and    al,0x92
  41956e:	cmp    ecx,ebp
  419570:	jle    0x419549
  419572:	cmp    al,0xc0
  419574:	and    eax,0x864ee0d8
  419579:	(bad)  
  41957a:	fld    DWORD PTR [eax]
  41957c:	lods   eax,DWORD PTR ds:[esi]
  41957d:	adc    ah,bl
  41957f:	(bad)  
  419581:	sbb    al,0xe3
  419583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419584:	iret   
  419585:	cmp    eax,0xde80972b
  41958a:	inc    ecx
  41958b:	inc    ecx
  41958c:	(bad)  
  41958d:	mov    ebp,0xf451154b
  419592:	adc    ecx,edx
  419594:	cmp    al,0x74
  419596:	xchg   ebp,eax
  419597:	and    ah,BYTE PTR [ebp+ebp*2-0x3e]
  41959b:	and    eax,0xbeec5044
  4195a0:	int    0x6c
  4195a2:	aas    
  4195a3:	push   ebx
  4195a4:	mov    cl,0xdd
  4195a6:	stos   DWORD PTR es:[edi],eax
  4195a7:	aas    
  4195a8:	loop   0x41952b
  4195aa:	push   ebp
  4195ab:	addr16 gs into 
  4195ae:	adc    DWORD PTR [ecx],esi
  4195b0:	scas   eax,DWORD PTR es:[edi]
  4195b1:	fnstsw WORD PTR ds:0xf84cb4e6
  4195b7:	or     ch,BYTE PTR [esi-0x5aa119a]
  4195bd:	pop    ss
  4195be:	not    ebp
  4195c0:	cwde   
  4195c1:	retf   
  4195c2:	lds    ebp,FWORD PTR [ebp+0x51e9d784]
  4195c8:	sub    eax,0xdfdb6713
  4195cd:	das    
  4195ce:	adc    esp,ecx
  4195d0:	outs   dx,BYTE PTR ds:[esi]
  4195d1:	or     bh,0xd4
  4195d4:	jno    0x419649
  4195d6:	ds jmp 0xf5164c13
  4195dc:	cmp    al,BYTE PTR [esi]
  4195de:	sar    DWORD PTR [ebp-0x6e],cl
  4195e1:	clc    
  4195e2:	ja     0x41959a
  4195e4:	xor    BYTE PTR [edi],bh
  4195e6:	push   ecx
  4195e7:	pop    es
  4195e8:	in     al,dx
  4195e9:	pop    es
  4195ea:	mov    edi,0x397c8944
  4195ef:	imul   ebp,DWORD PTR [esi],0xa15e71ee
  4195f5:	lahf   
  4195f6:	ins    DWORD PTR es:[edi],dx
  4195f7:	cld    
  4195f8:	iret   
  4195f9:	inc    eax
  4195fa:	adc    DWORD PTR [ebx-0x5a],ebp
  4195fd:	stc    
  4195fe:	test   eax,0x8ce638a8
  419603:	push   edx
  419604:	fisub  WORD PTR [ebx+0x42cd5072]
  41960a:	jecxz  0x4195eb
  41960c:	int    0x93
  41960e:	cmp    BYTE PTR [esp+ecx*2-0x30136fe2],bl
  419615:	or     BYTE PTR [esp+ebp*1+0x43],dl
  419619:	das    
  41961a:	fisttp QWORD PTR gs:[esi-0x21]
  41961e:	aas    
  41961f:	leave  
  419620:	cmova  edx,DWORD PTR [ebp-0x4a8bfc32]
  419627:	jl     0x419611
  419629:	push   ecx
  41962a:	adc    esp,ebx
  41962c:	ins    DWORD PTR es:[edi],dx
  41962d:	cwde   
  41962e:	shr    DWORD PTR [ecx+ecx*2],cl
  419631:	sub    dl,cl
  419633:	sbb    DWORD PTR [ebx],ebx
  419635:	std    
  419636:	mov    ch,BYTE PTR [eax+0xcb448ff]
  41963c:	dec    eax
  41963d:	arpl   ax,bx
  41963f:	push   eax
  419640:	dec    edx
  419641:	mov    esi,0x35066fef
  419646:	cwde   
  419647:	sbb    eax,0x3db84206
  41964c:	out    0x80,al
  41964e:	dec    ebx
  41964f:	call   0x86041bb3
  419654:	scas   eax,DWORD PTR es:[edi]
  419655:	mov    DWORD PTR [esi+0x4a],ebx
  419658:	shl    DWORD PTR [esi],0xbd
  41965b:	nop
  41965c:	pop    ecx
  41965d:	test   bl,al
  41965f:	and    edx,eax
  419661:	test   cl,dh
  419663:	push   esi
  419664:	enter  0xe497,0xe0
  419668:	les    esi,FWORD PTR [edi+0x19]
  41966b:	out    dx,al
  41966c:	cmp    ebp,edi
  41966e:	call   DWORD PTR fs:[ebp-0x3f4dff45]
  419675:	mov    ecx,0x694d11c7
  41967a:	call   0xc4e0:0xd0f64cef
  419681:	push   esi
  419682:	xchg   ebp,eax
  419683:	pop    ss
  419684:	rcr    BYTE PTR [edx],0xb7
  419687:	cdq    
  419688:	jl     0x419650
  41968a:	stos   BYTE PTR es:[edi],al
  41968b:	cs cs rcl ebp,1
  41968f:	dec    edx
  419690:	cmp    eax,DWORD PTR [eax]
  419692:	shr    BYTE PTR [ebx+0x73818e0f],1
  419698:	inc    eax
  419699:	sar    DWORD PTR [ebx-0x5d1f1e18],0x31
  4196a0:	or     eax,0x1804e9ba
  4196a5:	xlat   BYTE PTR ds:[ebx]
  4196a6:	jns    0x419652
  4196a8:	outs   dx,DWORD PTR ds:[esi]
  4196a9:	sub    al,0x5
  4196ab:	ins    DWORD PTR es:[edi],dx
  4196ac:	inc    ebx
  4196ad:	or     dl,BYTE PTR [eax]
  4196af:	inc    edi
  4196b0:	loop   0x419689
  4196b2:	imul   ebx,ecx,0xffffffda
  4196b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196b6:	xor    ch,BYTE PTR [eax-0x2b]
  4196b9:	and    DWORD PTR ds:0xb57bbb05,ecx
  4196bf:	mov    edi,0x8cab5e4c
  4196c4:	adc    dh,BYTE PTR [edi+0x4c72ed58]
  4196ca:	retf   0xce77
  4196cd:	iret   
  4196ce:	xor    dl,al
  4196d0:	lock ss loope 0x4196cf
  4196d4:	xor    esp,DWORD PTR [ebx+edx*1-0x663599c1]
  4196db:	cli    
  4196dc:	fistp  QWORD PTR [ecx+0x578c8fd2]
  4196e2:	jge    0x419751
  4196e4:	aam    0x69
  4196e6:	jne    0x419761
  4196e8:	in     al,0x49
  4196ea:	es jno 0x419686
  4196ed:	fnstcw WORD PTR [ebx+0x7bb5e03b]
  4196f3:	adc    ebx,DWORD PTR [eax+0x1b74279]
  4196f9:	mov    ds:0xd42ea7dc,eax
  4196fe:	xchg   esp,eax
  4196ff:	jb     0x419737
  419701:	mov    ebp,0x8b860830
  419706:	mov    esi,0xadd503ce
  41970b:	add    ecx,DWORD PTR [ecx+0x4d]
  41970e:	ret    
  41970f:	enter  0xe086,0x83
  419713:	push   0xffffff83
  419715:	scas   eax,DWORD PTR es:[edi]
  419716:	inc    ebx
  419717:	dec    ebp
  419718:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419719:	test   BYTE PTR [ebx],bh
  41971b:	xchg   ebp,eax
  41971c:	dec    ecx
  41971d:	cld    
  41971e:	scas   ax,WORD PTR es:[edi]
  419720:	in     al,0xba
  419722:	dec    ebp
  419723:	aas    
  419724:	cmp    BYTE PTR cs:[eax+0x55],ch
  419728:	mov    al,0x90
  41972a:	add    cl,ch
  41972c:	pop    edi
  41972d:	and    al,0xbc
  41972f:	rcl    BYTE PTR [ecx+eax*8],0x22
  419733:	dec    eax
  419734:	jns    0x419766
  419736:	push   ss
  419737:	mov    ch,0x5d
  419739:	jmp    0x4f70:0xb2451e44
  419740:	int    0x30
  419742:	push   eax
  419743:	add    bl,dl
  419745:	jg     0x4196f7
  419747:	out    0x9d,eax
  419749:	xchg   edx,eax
  41974a:	sub    BYTE PTR ds:0xd8012e9a,ah
  419750:	and    ch,BYTE PTR [ecx+ecx*8]
  419753:	adc    DWORD PTR [edx+0x38],ebp
  419756:	retf   
  419757:	ja     0x41979f
  419759:	lods   eax,DWORD PTR ds:[esi]
  41975a:	shl    DWORD PTR [esi],0xa6
  41975d:	call   0xb39c:0x41cf0699
  419764:	push   ebx
  419765:	sub    eax,0xedbe9154
  41976a:	arpl   WORD PTR [edx+0x471d3113],dx
  419770:	xor    bl,0x24
  419773:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419774:	or     eax,DWORD PTR [edx-0x7f]
  419777:	dec    esp
  419778:	mov    cl,0x64
  41977a:	je     0x419710
  41977c:	out    dx,al
  41977d:	stos   BYTE PTR es:[edi],al
  41977e:	adc    BYTE PTR [edi-0x511e4ecb],0x27
  419785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419786:	jns    0x419770
  419788:	sub    DWORD PTR [eax-0x6618ca49],esp
  41978e:	cld    
  41978f:	xchg   ecx,eax
  419790:	jbe    0x419734
  419792:	test   al,0x15
  419794:	xchg   ecx,eax
  419795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419796:	jo     0x4197c6
  419798:	dec    ebx
  419799:	push   0x9bf42545
  41979e:	ins    BYTE PTR es:[edi],dx
  41979f:	sub    al,0xe5
  4197a1:	(bad)  
  4197a2:	sbb    ecx,DWORD PTR ds:0x36efed60
  4197a8:	scas   eax,DWORD PTR es:[edi]
  4197a9:	cdq    
  4197aa:	sub    esi,ebx
  4197ac:	dec    esp
  4197ad:	into   
  4197ae:	je     0x419776
  4197b0:	mov    esi,0x16e8bc8c
  4197b5:	sub    DWORD PTR [ecx-0x22],ebx
  4197b8:	xchg   edi,eax
  4197b9:	xor    bh,ah
  4197bb:	inc    esi
  4197bc:	push   0x2d7a8ec9
  4197c1:	(bad)  [ebp+0x6f1bf82b]
  4197c7:	cmp    esi,DWORD PTR [edi-0xc0786d8]
  4197cd:	and    edx,DWORD PTR [esi+0x4d]
  4197d0:	jmp    0x82b7:0xcaef2887
  4197d7:	in     eax,0x7c
  4197d9:	xchg   BYTE PTR [ebx-0x29ee8398],bl
  4197df:	xlat   BYTE PTR ds:[ebx]
  4197e0:	mov    ebp,0x2be2714f
  4197e5:	xor    DWORD PTR [esi],ebp
  4197e7:	mov    ebx,0x55699c90
  4197ec:	ret    0x6ed8
  4197ef:	add    DWORD PTR [esi+0x5a],0x6945575
  4197f6:	mov    esi,0x626cfd22
  4197fb:	push   esi
  4197fc:	(bad)  
  4197fd:	ror    BYTE PTR [ebp+0x6ff3c504],0xcd
  419804:	je     0x4197f2
  419806:	(bad)  
  419807:	dec    esp
  419808:	nop
  419809:	loop   0x41983e
  41980b:	inc    edi
  41980c:	pusha  
  41980d:	jp     0x419831
  41980f:	pop    ss
  419810:	sub    eax,0xd6ace124
  419815:	xchg   ecx,eax
  419816:	cs pushf 
  419818:	inc    edx
  419819:	sahf   
  41981a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41981b:	cmp    BYTE PTR [eax-0x6fc263dd],0xc6
  419822:	jo     0x4197eb
  419824:	or     eax,0xab92b9b4
  419829:	mov    WORD PTR [edx+0x469047e9],?
  41982f:	and    al,0x26
  419831:	dec    eax
  419832:	cmp    cl,al
  419834:	push   eax
  419835:	jp     0x419829
  419837:	mov    ah,0x2d
  419839:	mov    ebp,0x210d7705
  41983e:	scas   eax,DWORD PTR es:[edi]
  41983f:	xchg   edx,eax
  419840:	jmp    0x41981a
  419842:	fs in  al,0x2a
  419845:	mov    ah,0x55
  419847:	push   esi
  419848:	push   es
  419849:	xchg   ebp,ebp
  41984b:	pop    ecx
  41984c:	push   ecx
  41984d:	mov    fs,WORD PTR [edx+0x43]
  419850:	daa    
  419851:	mov    al,ds:0x49f6e520
  419856:	retf   
  419857:	xor    al,0xc2
  419859:	push   ebx
  41985a:	mov    esi,0x723cb50f
  41985f:	into   
  419860:	retf   
  419861:	hlt    
  419862:	inc    ebx
  419863:	sub    BYTE PTR [esi+ebp*1],cl
  419866:	lea    edi,[eax+ecx*2]
  419869:	inc    eax
  41986a:	xor    edx,ebx
  41986c:	dec    edi
  41986d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41986e:	xlat   BYTE PTR ds:[ebx]
  41986f:	cmc    
  419870:	mov    edi,0xb911702a
  419875:	stos   BYTE PTR es:[edi],al
  419876:	in     eax,dx
  419877:	fcom   QWORD PTR [edi+0x77]
  41987a:	sub    BYTE PTR [esi-0x6b],bh
  41987d:	arpl   WORD PTR cs:[edx],bx
  419880:	pop    ss
  419881:	push   ebp
  419882:	xchg   edi,eax
  419883:	call   0x7d9f:0x92a3267d
  41988a:	mov    eax,0x737eec6d
  41988f:	cli    
  419890:	dec    ecx
  419891:	cwde   
  419892:	stos   BYTE PTR es:[edi],al
  419893:	cdq    
  419894:	inc    esi
  419895:	cmp    cl,BYTE PTR [ebp+0x77]
  419898:	pop    edi
  419899:	cmp    DWORD PTR [eax],eax
  41989b:	xchg   DWORD PTR [esi-0x541c8b8a],edx
  4198a1:	lods   al,BYTE PTR ds:[esi]
  4198a2:	xor    DWORD PTR [edi],ebp
  4198a4:	je     0x4198a0
  4198a6:	jle    0x41991a
  4198a8:	aas    
  4198a9:	mov    ecx,0xf6d35583
  4198ae:	or     al,0x59
  4198b0:	ss mov bh,0xfa
  4198b3:	ja     0x4198c9
  4198b5:	adc    esp,DWORD PTR [eax+ebp*2]
  4198b8:	bound  ebx,QWORD PTR [ecx-0x6ea0b47c]
  4198be:	xchg   bh,ch
  4198c0:	nop
  4198c1:	inc    esi
  4198c2:	xchg   edx,eax
  4198c3:	daa    
  4198c4:	jbe    0x4198a9
  4198c6:	mov    fs,esi
  4198c8:	test   eax,0x72d16b0e
  4198cd:	sub    esi,DWORD PTR [esp+ebp*8-0x27]
  4198d1:	xor    eax,0xebb6caa5
  4198d6:	out    0x2e,al
  4198d8:	adc    BYTE PTR [esi],cl
  4198da:	das    
  4198db:	dec    edi
  4198dc:	jg     0x419873
  4198de:	xor    BYTE PTR [edi+0x6f578fc6],ch
  4198e4:	in     eax,dx
  4198e5:	push   eax
  4198e6:	push   eax
  4198e7:	lds    eax,FWORD PTR [ebx]
  4198e9:	pop    esi
  4198ea:	iret   
  4198eb:	lahf   
  4198ec:	push   edi
  4198ed:	xor    esi,0xcfa6061c
  4198f3:	inc    ecx
  4198f4:	add    eax,0x6020ddac
  4198f9:	iret   
  4198fa:	adc    cl,dh
  4198fc:	jo     0x41996d
  4198fe:	loop   0x4198c6
  419900:	sbb    al,0x79
  419902:	dec    ecx
  419903:	cmp    DWORD PTR ds:0x78dad170,eax
  419909:	pop    edx
  41990a:	and    al,0x99
  41990c:	test   al,0xd8
  41990e:	rcr    BYTE PTR [eax],0xd6
  419911:	push   es
  419912:	sub    bh,BYTE PTR [ecx-0x24c60f7e]
  419918:	(bad)  
  419919:	and    ebx,DWORD PTR [edi-0x549fd1f5]
  41991f:	loope  0x419924
  419921:	inc    eax
  419922:	test   eax,0x35c18115
  419927:	sbb    eax,0xbdf05133
  41992c:	fistp  QWORD PTR ds:0x6e41f94c
  419932:	xor    al,0x23
  419934:	mov    ebx,0x18ac4e4d
  419939:	pop    ds
  41993a:	or     BYTE PTR [edx-0x6368b2e7],ch
  419940:	in     eax,0xe6
  419942:	les    esi,FWORD PTR [ecx-0x21]
  419945:	scas   al,BYTE PTR es:[edi]
  419946:	into   
  419947:	dec    edx
  419948:	mov    bl,0xe7
  41994a:	sbb    eax,0xfaf57bb9
  41994f:	adc    dh,BYTE PTR ds:0x69a0f8d
  419955:	mov    ss,WORD PTR [ecx]
  419957:	cmp    eax,0x42e2b1a4
  41995c:	popa   
  41995d:	sbb    eax,DWORD PTR [esi+0x6f599c56]
  419963:	retf   0x6f3a
  419966:	fsubr  st,st(3)
  419968:	cmp    DWORD PTR [ecx+0x75ac4994],ecx
  41996e:	dec    ebx
  41996f:	push   eax
  419970:	aaa    
  419971:	imul   esi,DWORD PTR [esi-0x8],0x68
  419975:	and    dh,BYTE PTR [ebx+0x3f5fff8d]
  41997b:	xor    edx,DWORD PTR [edi+esi*8+0x76]
  41997f:	xlat   BYTE PTR ds:[ebx]
  419980:	jbe    0x419970
  419982:	adc    BYTE PTR [ebp-0x769dae58],dh
  419988:	pop    ss
  419989:	jno    0x4199a2
  41998b:	scas   eax,DWORD PTR es:[edi]
  41998c:	cmp    DWORD PTR [edx+edx*1+0x55],esp
  419990:	inc    edi
  419991:	bound  esi,QWORD PTR [ebx+0x34]
  419994:	fdiv   QWORD PTR es:[ecx-0x37]
  419998:	mov    dl,0x54
  41999a:	or     esi,esp
  41999c:	jno    0x419a18
  41999e:	std    
  41999f:	sub    bh,0x0
  4199a2:	fbld   TBYTE PTR [eax+0x54]
  4199a5:	dec    eax
  4199a6:	push   ss
  4199a7:	out    dx,eax
  4199a8:	mov    WORD PTR [esi],?
  4199aa:	sub    eax,0x368e961f
  4199af:	sub    BYTE PTR [ebx],bh
  4199b1:	fsub   DWORD PTR [eax-0x5b]
  4199b4:	jge    0x4199da
  4199b6:	popf   
  4199b7:	sub    eax,0xcb0b489f
  4199bc:	dec    eax
  4199bd:	es xchg esi,eax
  4199bf:	fist   WORD PTR [ecx+0x37]
  4199c2:	push   ss
  4199c3:	xchg   ecx,eax
  4199c4:	lods   eax,DWORD PTR ds:[esi]
  4199c5:	sbb    eax,edx
  4199c7:	adc    DWORD PTR [edi-0x3a2b9c81],ebp
  4199cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199ce:	shl    BYTE PTR [eax],0xb
  4199d1:	or     BYTE PTR [ebp+0x6949ae7f],0xf6
  4199d8:	ret    
  4199d9:	aam    0x65
  4199db:	and    BYTE PTR [ebx],0xc9
  4199de:	loope  0x419a1d
  4199e0:	aad    0xcc
  4199e2:	retf   0xca0a
  4199e5:	outs   dx,BYTE PTR ds:[esi]
  4199e6:	add    eax,0x8862bdd5
  4199eb:	sub    cl,cl
  4199ed:	popa   
  4199ee:	sub    ebx,DWORD PTR [edx-0x53]
  4199f1:	out    0xd0,al
  4199f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199f4:	xchg   DWORD PTR [edx-0x62],eax
  4199f7:	out    dx,al
  4199f8:	cvtpi2ps xmm2,QWORD PTR [ebx+ebp*8-0x45b098ea]
  419a00:	mov    edx,0xf7e69877
  419a05:	inc    esi
  419a06:	inc    edi
  419a07:	inc    esi
  419a08:	stos   DWORD PTR es:[edi],eax
  419a09:	or     BYTE PTR [ebp+0x3b],bh
  419a0c:	push   edx
  419a0d:	arpl   WORD PTR [edx],bp
  419a0f:	shl    BYTE PTR [eax+0x3a],0x20
  419a13:	jge    0x41999f
  419a15:	outs   dx,DWORD PTR ds:[esi]
  419a16:	xchg   esp,eax
  419a17:	rol    BYTE PTR [edi+0x5d],cl
  419a1a:	imul   eax,DWORD PTR [eax],0x9c0abe03
  419a20:	or     BYTE PTR [ebx+0x5f],bh
  419a23:	add    BYTE PTR [ebx],dh
  419a25:	push   0x4a
  419a27:	arpl   di,bx
  419a29:	jns    0x419a62
  419a2b:	add    DWORD PTR cs:[esi],ebp
  419a2e:	adc    DWORD PTR [ecx],edi
  419a30:	or     eax,0x9aabc90d
  419a35:	sub    bl,dh
  419a37:	(bad)  
  419a38:	rol    BYTE PTR [esi+0x2295d6c6],cl
  419a3e:	rol    edi,0xd1
  419a41:	popf   
  419a42:	js     0x419a91
  419a44:	cli    
  419a45:	pushf  
  419a46:	and    eax,0xc420952d
  419a4b:	(bad)  
  419a4c:	sahf   
  419a4d:	in     eax,0x56
  419a4f:	pop    edi
  419a50:	sub    al,0x41
  419a52:	and    BYTE PTR [edx-0xfc6e16b],bl
  419a58:	fcmove st,st(7)
  419a5a:	fist   DWORD PTR [ecx+0x2e]
  419a5d:	aas    
  419a5e:	xchg   ebx,eax
  419a5f:	mov    esp,0xb9567c9
  419a64:	ret    0x5afb
  419a67:	or     BYTE PTR [esp+eiz*4],ch
  419a6a:	aam    0x8e
  419a6c:	into   
  419a6d:	sub    al,BYTE PTR [edi-0x4a9e511d]
  419a73:	inc    ecx
  419a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a75:	sbb    ebp,eax
  419a77:	mov    esp,DWORD PTR [edx-0x1fb4776e]
  419a7d:	out    0xd9,al
  419a7f:	add    DWORD PTR [esi+0x5eb9710b],ebp
  419a85:	dec    edx
  419a86:	push   ecx
  419a87:	leave  
  419a88:	xor    BYTE PTR [ecx],ch
  419a8a:	mov    edi,DWORD PTR [esi+0x5b82149a]
  419a90:	ds cs iret 
  419a93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a94:	pop    edi
  419a95:	cmp    ch,al
  419a97:	sub    eax,0x3aff8c00
  419a9c:	in     eax,dx
  419a9d:	mov    al,ds:0x155d6cb4
  419aa2:	shl    BYTE PTR [ecx-0x45],cl
  419aa5:	addr16 sbb eax,0xd0a1a2f2
  419aab:	sbb    BYTE PTR [eax],dl
  419aad:	das    
  419aae:	xchg   BYTE PTR [edx-0x58daa3aa],dh
  419ab4:	pusha  
  419ab5:	faddp  st(4),st
  419ab7:	aas    
  419ab8:	test   al,0xd3
  419aba:	pushf  
  419abb:	aam    0xea
  419abd:	fwait
  419abe:	xchg   DWORD PTR [ebp-0x4b],esi
  419ac1:	call   0xb5f0:0xf455d19b
  419ac8:	imul   edx,ebp,0x1e77fd98
  419ace:	push   ebp
  419acf:	loopne 0x419b1f
  419ad1:	sbb    ebx,DWORD PTR [esp+eax*4+0x9]
  419ad5:	fsubr  st,st(1)
  419ad7:	(bad)  
  419ad8:	mov    al,ds:0x974ad002
  419add:	mov    ebp,0xf0565a9e
  419ae2:	stos   BYTE PTR es:[edi],al
  419ae3:	pop    edx
  419ae4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ae5:	xchg   ebp,eax
  419ae6:	cmp    edx,DWORD PTR [eax+0x26baee4f]
  419aec:	mov    edx,0xfdfe9397
  419af1:	outs   dx,DWORD PTR ds:[esi]
  419af2:	and    esp,ebx
  419af4:	xor    DWORD PTR [ebx-0x1a9f7e32],edi
  419afa:	clc    
  419afb:	rol    DWORD PTR [ebx-0x12],cl
  419afe:	(bad)  
  419aff:	pop    ebx
  419b00:	jmp    0x419b10
  419b02:	sub    DWORD PTR [edx+0x34],ebx
  419b05:	nop
  419b06:	fs inc edi
  419b08:	and    DWORD PTR [edx-0x11],0xffffffd6
  419b0c:	sar    BYTE PTR [esi+ebp*1-0x471f7cae],cl
  419b13:	bt     DWORD PTR [edi+eiz*4],edx
  419b17:	push   ebp
  419b18:	arpl   WORD PTR [ebx],di
  419b1a:	xlat   BYTE PTR ds:[ebx]
  419b1b:	jno    0x419b6e
  419b1d:	push   es
  419b1e:	jecxz  0x419ac6
  419b20:	or     DWORD PTR [edi+0x6e399398],esi
  419b26:	fmul   DWORD PTR [edi]
  419b28:	push   cs
  419b29:	mov    dl,0x6f
  419b2b:	xchg   ch,ah
  419b2d:	xchg   edx,eax
  419b2e:	dec    ebx
  419b2f:	push   es
  419b30:	mov    eax,0x3fcf4218
  419b35:	dec    edi
  419b36:	aad    0x6d
  419b38:	mov    ds:0x5bcdeea,eax
  419b3d:	cmp    eax,0xfcc43e10
  419b42:	jae    0x419af7
  419b44:	pop    ds
  419b45:	push   ss
  419b46:	and    DWORD PTR [ebx+esi*4],eax
  419b49:	aam    0x7b
  419b4b:	jmp    0xc786:0x1a644a9f
  419b52:	(bad)  
  419b53:	not    esp
  419b55:	add    DWORD PTR [ebx+0x24],0x64b09e49
  419b5c:	pop    ss
  419b5d:	push   cs
  419b5e:	xor    dh,BYTE PTR gs:[edx]
  419b61:	add    al,0xea
  419b63:	pop    esp
  419b64:	sub    ebp,DWORD PTR [ecx+0x5f3bc1b3]
  419b6a:	dec    ebp
  419b6b:	dec    edi
  419b6c:	pop    eax
  419b6d:	std    
  419b6e:	push   ecx
  419b6f:	sar    DWORD PTR [ebx+0x4b2ee577],1
  419b75:	mov    eax,ds:0xe0358e63
  419b7a:	jae    0x419b36
  419b7c:	jb     0x419b07
  419b7e:	mov    ebp,0x6f8a299e
  419b83:	pop    esp
  419b84:	sbb    DWORD PTR [esi-0x2c17960e],0xffffffc7
  419b8b:	push   ss
  419b8c:	xor    DWORD PTR [eax-0x28],edi
  419b8f:	push   ebp
  419b90:	dec    esi
  419b91:	mov    DWORD PTR [esi-0x2e],esp
  419b94:	or     al,0x6e
  419b96:	jmp    0x419c16
  419b98:	std    
  419b99:	gs fwait
  419b9b:	(bad)  
  419b9c:	jle    0x419b88
  419b9e:	dec    ebx
  419b9f:	loope  0x419b27
  419ba1:	ins    BYTE PTR es:[edi],dx
  419ba2:	fld    QWORD PTR [esi-0x71]
  419ba5:	lock sbb BYTE PTR [ebx-0x7c],dh
  419ba9:	or     dh,BYTE PTR [ecx+0x50aa0ab4]
  419baf:	jmp    0x26aea1f2
  419bb4:	repnz push edi
  419bb6:	inc    edi
  419bb7:	mov    BYTE PTR [ebp+edi*2-0x1fbe4f84],ah
  419bbe:	ins    DWORD PTR es:[edi],dx
  419bbf:	mov    edx,0xdabe1068
  419bc4:	cwde   
  419bc5:	mov    ebx,DWORD PTR [edx]
  419bc7:	adc    al,0x38
  419bc9:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bcb:	aad    0xf6
  419bcd:	and    al,0x9b
  419bcf:	inc    edi
  419bd0:	sub    ecx,DWORD PTR [ebx-0x2332cc83]
  419bd6:	retf   
  419bd7:	lods   eax,DWORD PTR ds:[esi]
  419bd8:	loope  0x419be5
  419bda:	test   edx,esi
  419bdc:	test   DWORD PTR [edx-0x764e06c8],eax
  419be2:	(bad)  
  419be3:	mov    ecx,0xe16edaae
  419be8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419be9:	mov    eax,DWORD PTR [ebx+0x5ed74875]
  419bef:	jnp    0x419c68
  419bf1:	pop    eax
  419bf2:	xor    edi,DWORD PTR [ebp+0x78d90532]
  419bf8:	inc    ebp
  419bf9:	xchg   ebx,eax
  419bfa:	lea    esp,[edi+esi*8]
  419bfd:	and    DWORD PTR [ebp-0x240d0d49],ecx
  419c03:	loope  0x419c6d
  419c05:	xchg   cl,bl
  419c07:	test   cl,bh
  419c09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c0a:	nop
  419c0b:	xchg   esi,eax
  419c0c:	mov    eax,ds:0x8e3c861a
  419c11:	leave  
  419c12:	outs   dx,BYTE PTR ds:[esi]
  419c13:	test   BYTE PTR [edi-0x5e],0xb3
  419c17:	xchg   ebx,eax
  419c18:	cs mov dl,0x8f
  419c1b:	xchg   ebp,eax
  419c1c:	ja     0x419c7f
  419c1e:	popa   
  419c1f:	xchg   DWORD PTR [ebx-0xea9d81e],ecx
  419c25:	cmc    
  419c26:	mov    cl,0xbc
  419c28:	adc    DWORD PTR [edi+0x4bd33cff],esi
  419c2e:	push   es
  419c2f:	push   cs
  419c30:	add    cl,dl
  419c32:	cmp    BYTE PTR [ebp+0x54],ch
  419c35:	push   ecx
  419c36:	add    DWORD PTR [edi],0x4831c11f
  419c3c:	jb     0x419ca8
  419c3e:	and    BYTE PTR [eax+0x1931497d],cl
  419c44:	int3   
  419c45:	test   DWORD PTR [esi-0x3],eax
  419c48:	pop    esi
  419c49:	xor    eax,esp
  419c4b:	add    bl,bh
  419c4d:	aam    0xc4
  419c4f:	in     eax,dx
  419c50:	rcl    DWORD PTR ds:0x49a720ca,1
  419c56:	ret    
  419c57:	imul   esi,DWORD PTR gs:[eax],0xa961c385
  419c5e:	pop    edi
  419c5f:	jne    0x419ca6
  419c61:	jmp    0x419c1a
  419c63:	mov    esp,DWORD PTR ds:0x99d8bd24
  419c69:	call   0x2cdb:0x58b48e3a
  419c70:	aas    
  419c71:	lea    esp,[esi]
  419c73:	test   BYTE PTR [edx-0x7f],bh
  419c76:	sub    al,0xa3
  419c78:	call   0x84c40b4d
  419c7d:	mov    dl,0x6
  419c7f:	mov    DWORD PTR [ebx+0x5b700c79],0x4a1d3eb7
  419c89:	jmp    0x163c78d1
  419c8e:	and    esi,DWORD PTR [esi-0x52]
  419c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c92:	inc    eax
  419c93:	ret    0x3087
  419c96:	jp     0x419d03
  419c98:	push   esi
  419c99:	loop   0x419c2e
  419c9b:	xor    esp,DWORD PTR [esp+ebx*2-0x38]
  419c9f:	imul   edi,DWORD PTR [edx+0x5d771c63],0x60
  419ca6:	mov    ebx,0xa10b9ac
  419cab:	inc    edx
  419cac:	test   al,0x5f
  419cae:	pcmpeqb mm0,QWORD PTR [edi-0x27]
  419cb2:	adc    DWORD PTR [esi-0x7645e0b2],ebx
  419cb8:	xor    al,0xb5
  419cba:	cld    
  419cbb:	xchg   edx,eax
  419cbc:	mov    cl,0xa3
  419cbe:	xor    dl,BYTE PTR [ecx+0x8c779b5]
  419cc4:	pushf  
  419cc5:	inc    esp
  419cc6:	jno    0x419d13
  419cc8:	jbe    0x419d09
  419cca:	addr16 int 0xe2
  419ccd:	mov    DWORD PTR [ebx+0x3f],ebx
  419cd0:	(bad)  
  419cd1:	mov    dl,BYTE PTR [edi-0x359b7485]
  419cd7:	jp     0x419ca8
  419cd9:	sub    BYTE PTR [esi+0x400fbaa7],cl
  419cdf:	add    BYTE PTR [esi+0x78],cl
  419ce2:	loope  0x419d3c
  419ce4:	fisubr WORD PTR ds:0xd1ff75f
  419cea:	loopne 0x419c70
  419cec:	adc    cl,BYTE PTR [edi]
  419cee:	jo     0x419d22
  419cf0:	aad    0x9
  419cf2:	mov    ah,0xe0
  419cf4:	mov    edx,0xeda8be01
  419cf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cfa:	inc    edx
  419cfb:	xchg   ecx,eax
  419cfc:	out    0x67,al
  419cfe:	jp     0x419cc0
  419d00:	dec    esi
  419d01:	pop    ebx
  419d02:	adc    ebx,DWORD PTR [ecx+0x74120a51]
  419d08:	add    BYTE PTR [ebx],al
  419d0a:	sub    cl,BYTE PTR [edx-0x61]
  419d0d:	and    eax,0xe27a757f
  419d12:	imul   esi,DWORD PTR [ecx],0xcdd92f6e
  419d18:	xchg   DWORD PTR [ebx],ebp
  419d1a:	inc    ebp
  419d1b:	test   BYTE PTR [esi],dl
  419d1d:	inc    edi
  419d1e:	pop    ecx
  419d1f:	dec    esp
  419d20:	xchg   ecx,eax
  419d21:	inc    ebx
  419d22:	fs inc esi
  419d24:	aad    0xb6
  419d26:	pop    ecx
  419d27:	mov    esi,DWORD PTR [edi+0x74]
  419d2a:	dec    esp
  419d2b:	out    0x35,al
  419d2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d2e:	enter  0xbae0,0x82
  419d32:	push   esp
  419d33:	or     ah,BYTE PTR [esp+ebx*4]
  419d36:	jbe    0x419d7d
  419d38:	xchg   ebp,eax
  419d39:	shl    bl,cl
  419d3b:	pop    ecx
  419d3c:	and    al,0xb5
  419d3e:	stos   DWORD PTR es:[edi],eax
  419d3f:	call   0x73e7:0x102f80e9
  419d46:	mov    bl,0x92
  419d48:	inc    ebx
  419d49:	sbb    edi,DWORD PTR [ebx-0x5806e0de]
  419d4f:	and    al,0x49
  419d51:	clc    
  419d52:	jno    0x419ce4
  419d54:	iret   
  419d55:	xor    al,0x57
  419d57:	cmp    edi,DWORD PTR [edx-0x3c]
  419d5a:	xor    edi,DWORD PTR [ecx-0xc]
  419d5d:	pop    ebp
  419d5e:	ficom  DWORD PTR [ebx+ebx*8]
  419d61:	sub    BYTE PTR [edi],al
  419d63:	popa   
  419d64:	cs out 0x8d,al
  419d67:	push   0x7d
  419d69:	push   0x3db9342d
  419d6e:	loopne 0x419cf9
  419d70:	sub    bh,BYTE PTR [edi+0x77]
  419d73:	inc    ebx
  419d74:	lea    edi,[edi+0x5f]
  419d77:	jmp    0xd93d:0x784671f0
  419d7e:	adc    BYTE PTR [esi],bh
  419d80:	sub    al,0xd7
  419d82:	arpl   dx,di
  419d84:	or     BYTE PTR [ebx+0x15fa61f0],ch
  419d8a:	sahf   
  419d8b:	lock lods eax,DWORD PTR ds:[esi]
  419d8d:	shl    DWORD PTR [esi-0x43],0xb3
  419d91:	je     0x419d40
  419d93:	mov    esi,0x8dbfdd04
  419d98:	pop    ebp
  419d99:	aaa    
  419d9a:	gs iret 
  419d9c:	jbe    0x419dee
  419d9e:	xlat   BYTE PTR ds:[ebx]
  419d9f:	imul   esp,esi,0xfffffff5
  419da2:	push   ebx
  419da3:	or     BYTE PTR [edi+0x5f],ch
  419da6:	mov    dh,0xb7
  419da8:	pop    ebp
  419da9:	mov    dh,0x45
  419dab:	sub    DWORD PTR [ebx+edi*1],esp
  419dae:	cmp    BYTE PTR [ecx],bl
  419db0:	mov    DWORD PTR [eax-0x49832214],edx
  419db6:	dec    esp
  419db7:	in     eax,0x8f
  419db9:	mov    cl,0x59
  419dbb:	xor    dh,BYTE PTR [esp+esi*2]
  419dbe:	daa    
  419dbf:	dec    ebp
  419dc0:	xlat   BYTE PTR ds:[ebx]
  419dc1:	(bad)  
  419dc2:	pop    ss
  419dc3:	mov    bh,0x3
  419dc5:	push   esp
  419dc6:	or     al,0x8d
  419dc8:	pop    eax
  419dc9:	ror    DWORD PTR [esi-0x6],cl
  419dcc:	xor    dh,BYTE PTR [edi-0xaf500ad]
  419dd2:	stos   BYTE PTR es:[edi],al
  419dd3:	jo     0x419e25
  419dd5:	fsub   DWORD PTR cs:[ecx]
  419dd8:	mov    al,ds:0x3e58d1db
  419ddd:	loop   0x419e1b
  419ddf:	stos   DWORD PTR es:[edi],eax
  419de0:	retf   
  419de1:	lods   al,BYTE PTR ds:[esi]
  419de2:	and    eax,eax
  419de4:	pop    edi
  419de5:	retf   
  419de6:	add    edi,edx
  419de8:	and    eax,0x4f6b37a9
  419ded:	sbb    BYTE PTR [ecx+0x115846be],0xc6
  419df4:	arpl   WORD PTR [edi],ax
  419df6:	and    BYTE PTR [esi+0x7b09d647],dl
  419dfc:	sub    ch,BYTE PTR [edi-0x6d3d9bad]
  419e02:	push   0x5054c2a4
  419e07:	push   ss
  419e08:	sub    eax,DWORD PTR [ebp-0x2d353642]
  419e0e:	sbb    ebx,esp
  419e10:	shl    BYTE PTR [edx+0x2ad70757],1
  419e16:	mov    ch,0xb6
  419e18:	hlt    
  419e19:	in     eax,0x48
  419e1b:	loopne 0x419dc8
  419e1d:	mov    bh,BYTE PTR [edx]
  419e1f:	xor    eax,0xc60503b3
  419e24:	inc    esi
  419e25:	out    0x94,eax
  419e27:	shl    DWORD PTR [ebx],cl
  419e29:	fs jb  0x419db1
  419e2c:	test   eax,0x371414fb
  419e31:	pop    ebx
  419e32:	inc    DWORD PTR [edx-0x339be5c5]
  419e38:	mov    bh,0x3f
  419e3a:	inc    ecx
  419e3b:	xchg   edi,eax
  419e3c:	inc    edi
  419e3d:	pop    bx
  419e3f:	inc    edx
  419e40:	mov    esi,0xcab7ae2d
  419e45:	test   al,0x84
  419e47:	test   BYTE PTR [esi-0x4f74ba1f],ch
  419e4d:	popf   
  419e4e:	in     al,dx
  419e4f:	xchg   ebp,eax
  419e50:	cld    
  419e51:	out    dx,al
  419e52:	pop    eax
  419e53:	push   es
  419e54:	jo     0x419e26
  419e56:	int    0x9a
  419e58:	push   ds
  419e59:	ret    
  419e5a:	icebp  
  419e5b:	das    
  419e5c:	add    al,0x65
  419e5e:	retf   0x8023
  419e61:	sub    BYTE PTR [esi],dh
  419e63:	sub    eax,0x6e7e34f7
  419e68:	fldlg2 
  419e6a:	mov    ch,0xc0
  419e6c:	push   ds
  419e6d:	mov    dl,0x73
  419e6f:	mov    esp,0xeb3974b
  419e74:	push   edi
  419e75:	pop    eax
  419e76:	repz mov ds:0x97137b2,eax
  419e7c:	rcr    BYTE PTR [edx-0x6954421a],0x3d
  419e83:	loop   0x419e15
  419e85:	cwde   
  419e86:	fcmove st,st(3)
  419e88:	add    eax,0x29458196
  419e8d:	nop
  419e8e:	push   cs
  419e8f:	adc    BYTE PTR [eax+0x63],dl
  419e92:	pop    esi
  419e93:	in     al,0xfb
  419e95:	adc    DWORD PTR [ecx],esi
  419e97:	stos   DWORD PTR es:[edi],eax
  419e98:	or     ch,al
  419e9a:	pusha  
  419e9b:	jo     0x419ee0
  419e9d:	dec    edx
  419e9e:	test   al,0xfa
  419ea0:	adc    BYTE PTR [eax],dh
  419ea2:	div    DWORD PTR [ebp+0x58279a89]
  419ea8:	es inc ebp
  419eaa:	call   0xf9bf:0xe165b53
  419eb1:	sbb    bh,cl
  419eb3:	(bad)  
  419eb4:	aam    0x69
  419eb6:	jmp    0xa9e80159
  419ebb:	(bad)  
  419ebd:	call   FWORD PTR [eax+0x7a]
  419ec0:	pop    edx
  419ec1:	sahf   
  419ec2:	stos   DWORD PTR es:[edi],eax
  419ec3:	inc    ecx
  419ec4:	or     al,BYTE PTR [ebx+0x367d7ba5]
  419eca:	xchg   edx,eax
  419ecb:	lock mov bl,0xcc
  419ece:	add    BYTE PTR [edx-0x22],cl
  419ed1:	div    dl
  419ed3:	outs   dx,DWORD PTR ds:[esi]
  419ed4:	xchg   ecx,eax
  419ed5:	add    eax,eax
  419ed7:	push   eax
  419ed8:	and    al,0x79
  419eda:	aas    
  419edb:	xchg   ebx,eax
  419edc:	inc    ebx
  419edd:	dec    eax
  419ede:	outs   dx,BYTE PTR ds:[esi]
  419edf:	sub    al,BYTE PTR ds:0x6fb576d3
  419ee5:	in     eax,0x54
  419ee7:	pop    esi
  419ee8:	push   edi
  419ee9:	mov    al,ds:0xc6fa098b
  419eee:	retf   0xb2e7
  419ef1:	lds    esi,FWORD PTR [edx]
  419ef3:	inc    edx
  419ef4:	fdiv   QWORD PTR [eax]
  419ef6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ef7:	add    esi,DWORD PTR [edx+0x2d]
  419efa:	mov    edi,0x70e853b
  419eff:	jae    0x419eb2
  419f01:	ja     0x419ecf
  419f03:	xchg   edi,eax
  419f04:	es xchg esp,eax
  419f06:	bound  eax,QWORD PTR [edi+0x34c56256]
  419f0c:	push   ds
  419f0d:	xchg   esi,eax
  419f0e:	ret    0x7bf3
  419f11:	sbb    ecx,edx
  419f13:	call   FWORD PTR [eax-0x6873aeda]
  419f19:	or     bh,BYTE PTR [edx+eax*2]
  419f1c:	shl    DWORD PTR [edi-0x3c3d24e1],1
  419f22:	sub    DWORD PTR [esp-0x646e542b],ecx
  419f29:	sbb    dl,BYTE PTR [edx]
  419f2b:	into   
  419f2c:	test   eax,0xde649032
  419f31:	aam    0x63
  419f33:	inc    ebp
  419f34:	call   0xfee4:0xd9408eb4
  419f3b:	xchg   BYTE PTR [ecx+0x1c],dh
  419f3e:	sahf   
  419f3f:	sti    
  419f40:	outs   dx,DWORD PTR ds:[esi]
  419f41:	dec    ebx
  419f42:	lods   al,BYTE PTR ds:[esi]
  419f43:	(bad)  
  419f44:	scas   eax,DWORD PTR es:[edi]
  419f45:	jl     0x419f4a
  419f47:	push   edi
  419f48:	xchg   edi,eax
  419f49:	je     0x419fb6
  419f4b:	inc    edx
  419f4c:	loope  0x419f47
  419f4e:	add    eax,0x63568b30
  419f53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f54:	sub    ch,BYTE PTR [eax]
  419f56:	call   0x93492d40
  419f5b:	adc    BYTE PTR [edi],dl
  419f5d:	jno    0x419f5d
  419f5f:	adc    BYTE PTR [ecx],bh
  419f61:	les    ebp,FWORD PTR [esi+0x1]
  419f64:	mov    edi,0xa32e5299
  419f69:	xlat   BYTE PTR ds:[ebx]
  419f6a:	dec    esp
  419f6b:	mov    es,esp
  419f6d:	pop    esi
  419f6e:	ret    
  419f6f:	pusha  
  419f70:	imul   ebp,DWORD PTR [edx+0x67],0xffffffe3
  419f74:	lock add eax,0x6cf1d1b4
  419f7a:	mov    eax,ds:0xb4bda11a
  419f7f:	jmp    0x419f88
  419f81:	cwde   
  419f82:	sbb    al,0xbe
  419f84:	rcl    DWORD PTR [ebp-0xcb53d2b],cl
  419f8a:	mov    dh,0x95
  419f8c:	adc    ch,BYTE PTR [bp-0x590]
  419f91:	cld    
  419f92:	outs   dx,BYTE PTR ds:[esi]
  419f93:	dec    ebp
  419f94:	mov    ebp,ebx
  419f96:	ja     0x419f6c
  419f98:	push   esp
  419f99:	xchg   edx,eax
  419f9a:	push   0x9a806907
  419f9f:	test   BYTE PTR [ebx-0x18],bh
  419fa2:	xchg   ecx,eax
  419fa3:	retf   0x30fc
  419fa6:	shl    DWORD PTR [esi-0x5f],cl
  419fa9:	xor    eax,0xc191086
  419fae:	jno    0x419f63
  419fb0:	fiadd  DWORD PTR [esi-0x4df8fb6]
  419fb6:	or     al,BYTE PTR [eax]
  419fb8:	inc    eax
  419fb9:	dec    esp
  419fba:	fst    QWORD PTR [eax]
  419fbc:	push   ebp
  419fbe:	mov    edx,0x9fe17bc3
  419fc3:	jo     0x419f8c
  419fc5:	sub    eax,0x4603ade0
  419fca:	cwde   
  419fcb:	in     al,dx
  419fcc:	shl    BYTE PTR [edi+0x39],0x2
  419fd0:	(bad)  
  419fd1:	adc    eax,0x70efeabe
  419fd6:	enter  0x87e3,0x8a
  419fda:	inc    eax
  419fdb:	sbb    BYTE PTR [edi],bh
  419fdd:	mov    ch,0xc6
  419fdf:	(bad)  
  419fe0:	sbb    ah,dl
  419fe2:	and    ecx,ebp
  419fe4:	icebp  
  419fe5:	std    
  419fe6:	scas   eax,DWORD PTR es:[edi]
  419fe7:	jge    0x419ff3
  419fe9:	fsub   DWORD PTR [esi+eax*2]
  419fec:	jne    0x41a05e
  419fee:	jge    0x41a062
  419ff0:	add    ecx,DWORD PTR [ecx]
  419ff2:	or     eax,DWORD PTR [edx+ecx*1-0x67b42e2b]
  419ff9:	sbb    ebp,esi
  419ffb:	call   0xb581:0xdf4d1d8e
  41a002:	mov    ebp,DWORD PTR [ebx]
  41a004:	fwait
  41a005:	or     al,0xf5
  41a007:	stc    
  41a008:	push   0xffffff8d
  41a00a:	inc    edi
  41a00b:	mov    esp,0x8cec264f
  41a010:	sbb    al,0xfe
  41a012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a013:	ds shl ebx,0xba
  41a017:	stc    
  41a018:	mov    bh,0x21
  41a01a:	xor    dh,BYTE PTR [edx+0x31]
  41a01d:	fstp   TBYTE PTR [edx-0x41]
  41a020:	call   0xd58c6fc7
  41a025:	dec    edi
  41a026:	jbe    0x41a081
  41a028:	lock (bad) 
  41a02a:	push   ecx
  41a02b:	lods   al,BYTE PTR ds:[esi]
  41a02c:	push   ecx
  41a02d:	mov    esi,0xd13661a6
  41a032:	div    DWORD PTR [ebx+0x2a0beb90]
  41a038:	jl     0x41a0b4
  41a03a:	mov    eax,0xf6ac5d38
  41a03f:	sbb    esi,edi
  41a041:	cmc    
  41a042:	(bad)  
  41a043:	mov    bh,0x54
  41a045:	cmp    ebx,DWORD PTR [edi+0x5f]
  41a048:	(bad)  
  41a049:	and    DWORD PTR [ebp+0x6eaedddb],esp
  41a04f:	fcomp  DWORD PTR [edi-0x465fbc52]
  41a055:	retf   0xfe51
  41a058:	test   BYTE PTR cs:[edx],dl
  41a05b:	xchg   edx,eax
  41a05c:	ret    0x63b0
  41a05f:	int    0xe
  41a061:	or     ebp,DWORD PTR [esp+eiz*8-0x6924a81e]
  41a068:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a069:	push   edx
  41a06a:	ins    BYTE PTR es:[edi],dx
  41a06b:	mov    ch,BYTE PTR [edx+0x7e66ff3d]
  41a071:	sbb    DWORD PTR [ebx],ebp
  41a073:	or     eax,0x7b65de2f
  41a078:	sub    eax,0xd2136e00
  41a07d:	xchg   edi,eax
  41a07e:	xchg   edx,eax
  41a07f:	add    BYTE PTR [edx],ah
  41a081:	test   DWORD PTR [eax],esi
  41a083:	sub    ax,0x5f9e
  41a087:	mov    DWORD PTR [esi+0x8bae08b],ebx
  41a08d:	pop    esp
  41a08e:	loop   0x41a0c5
  41a090:	cmp    BYTE PTR [esi+0x3ffda9a7],bl
  41a096:	je     0x41a111
  41a098:	bound  ecx,QWORD PTR [ebx]
  41a09a:	clc    
  41a09b:	push   eax
  41a09c:	loopne 0x41a064
  41a09e:	xlat   BYTE PTR ds:[ebx]
  41a09f:	mov    al,ds:0x3ee51406
  41a0a4:	inc    esp
  41a0a5:	punpckhbw mm5,QWORD PTR [esi+edi*4+0x30319f1e]
  41a0ad:	mov    ecx,0xb9214822
  41a0b2:	sbb    eax,0x66c69376
  41a0b7:	jbe    0x41a129
  41a0b9:	aas    
  41a0ba:	inc    ebp
  41a0bb:	jb     0x41a0a8
  41a0bd:	add    edx,DWORD PTR [edi+0x2f]
  41a0c0:	mov    bl,0xf8
  41a0c2:	cmp    BYTE PTR ds:0x6f00ff35,0x36
  41a0c9:	ins    BYTE PTR es:[edi],dx
  41a0ca:	pusha  
  41a0cb:	and    ch,bh
  41a0cd:	test   al,0xac
  41a0cf:	(bad)  
  41a0d0:	jg     0x41a06d
  41a0d2:	std    
  41a0d3:	mov    ecx,0x3975607e
  41a0d8:	jo     0x285104
  41a0de:	sbb    DWORD PTR [eax],edi
  41a0e0:	cwde   
  41a0e1:	ror    DWORD PTR [ecx-0x40],1
  41a0e4:	aas    
  41a0e5:	pop    ss
  41a0e6:	inc    ebp
  41a0e7:	and    eax,0x1f8112f
  41a0ec:	je     0x41a0f5
  41a0ee:	and    BYTE PTR [eax+0x754aa256],cl
  41a0f4:	adc    ch,BYTE PTR [ecx-0x4b217041]
  41a0fa:	pop    ds
  41a0fb:	mov    dl,0xce
  41a0fd:	popa   
  41a0fe:	and    DWORD PTR [edi+ebp*4],esi
  41a101:	add    DWORD PTR [esi+0x7586c683],esp
  41a107:	mov    BYTE PTR [ebp+0x37],cl
  41a10a:	sbb    ebp,DWORD PTR [ecx+esi*8]
  41a10d:	out    dx,al
  41a10e:	jle    0x41a172
  41a110:	inc    ecx
  41a111:	cmp    al,0xd0
  41a113:	test   dl,bh
  41a115:	adc    BYTE PTR [ebx-0x35],ch
  41a118:	loopne 0x41a136
  41a11a:	sbb    cl,BYTE PTR [ebx]
  41a11c:	dec    ebp
  41a11d:	cli    
  41a11e:	add    al,0x95
  41a120:	xor    BYTE PTR [ebp+0x1c],dl
  41a123:	mov    ch,0x44
  41a125:	jo     0x41a18e
  41a127:	and    DWORD PTR [ecx+eax*4],eax
  41a12a:	xchg   edx,eax
  41a12b:	(bad)  
  41a12c:	fs scas eax,DWORD PTR es:[edi]
  41a12e:	inc    eax
  41a12f:	jle    0x41a158
  41a131:	xchg   ecx,eax
  41a132:	xchg   esi,eax
  41a133:	pusha  
  41a134:	or     al,0xc
  41a136:	pop    ebp
  41a137:	jne    0x41a17e
  41a139:	or     esp,ecx
  41a13b:	imul   esi,DWORD PTR [edi-0x1d],0x6e
  41a13f:	pop    ss
  41a140:	pop    esp
  41a141:	and    al,bl
  41a143:	dec    ebx
  41a144:	repz jns 0x41a1b0
  41a147:	nop
  41a148:	xor    BYTE PTR [eax],dh
  41a14a:	push   edx
  41a14b:	mov    edi,0x6374cf5c
  41a150:	mov    BYTE PTR [ebx+0x1ff1cab],cl
  41a156:	clc    
  41a157:	call   0x2693:0x3ab66f2f
  41a15e:	jmp    0xfd6360a1
  41a163:	cwde   
  41a164:	jle    0x41a13f
  41a166:	dec    ebp
  41a167:	pop    ds
  41a168:	js     0x41a0f2
  41a16a:	das    
  41a16b:	cs (bad) 
  41a16d:	fdiv   DWORD PTR [ebp+0x4c958c5b]
  41a173:	mov    ch,0x2
  41a175:	scas   eax,DWORD PTR es:[edi]
  41a176:	push   cs
  41a177:	xchg   DWORD PTR [ebp-0x4a],esi
  41a17a:	imul   ebx,DWORD PTR [ecx],0xffffffc3
  41a17d:	cmc    
  41a17e:	ret    
  41a17f:	xor    DWORD PTR [esi-0x2],0xffffff97
  41a183:	jmp    DWORD PTR [ecx-0x4f]
  41a186:	and    ebp,ecx
  41a188:	dec    esp
  41a189:	ret    0x1dc5
  41a18c:	cmc    
  41a18d:	arpl   sp,ax
  41a18f:	imul   edx,DWORD PTR es:[ecx],0xe4e7977f
  41a196:	sbb    BYTE PTR [eax+0x3a9d0007],0x1a
  41a19d:	push   edi
  41a19e:	nop
  41a19f:	add    esi,edi
  41a1a1:	ror    DWORD PTR [ecx+edi*1-0x56],1
  41a1a5:	jns    0x41a1b4
  41a1a7:	lahf   
  41a1a8:	add    ebx,DWORD PTR [eax-0x4479a1f1]
  41a1ae:	shl    BYTE PTR [ecx-0x3cfafb6b],0x71
  41a1b5:	mov    ebx,DWORD PTR [ebx]
  41a1b7:	sub    eax,DWORD PTR [ecx]
  41a1b9:	and    ebp,edi
  41a1bb:	shr    DWORD PTR ds:0x37cf90cc,1
  41a1c1:	(bad)  
  41a1c2:	idiv   BYTE PTR [edi+0x2f6a3dcf]
  41a1c8:	dec    ecx
  41a1c9:	ins    BYTE PTR es:[edi],dx
  41a1ca:	add    dl,dl
  41a1cc:	mov    ecx,0xb7c84f34
  41a1d1:	adc    esi,ebp
  41a1d3:	(bad)  
  41a1d4:	aad    0xf
  41a1d6:	add    eax,0x812d1a4e
  41a1db:	mov    ch,0xef
  41a1dd:	mov    ecx,0xc04e1593
  41a1e2:	out    dx,eax
  41a1e3:	mov    ah,0x5a
  41a1e5:	pop    eax
  41a1e6:	test   al,0x64
  41a1e8:	ja     0x41a18c
  41a1ea:	in     eax,0x5f
  41a1ec:	add    al,0xdf
  41a1ee:	mov    edi,0xae0fe5d4
  41a1f3:	push   ecx
  41a1f4:	aas    
  41a1f5:	cdq    
  41a1f6:	xchg   ebx,eax
  41a1f7:	cdq    
  41a1f8:	sbb    DWORD PTR [edi],0x44c2e0a7
  41a1fe:	lods   eax,DWORD PTR ds:[esi]
  41a1ff:	sbb    ebx,DWORD PTR ds:0xfae4061c
  41a205:	pop    esp
  41a206:	push   cs
  41a207:	push   ecx
  41a208:	xchg   BYTE PTR [ecx],dh
  41a20a:	xchg   ebp,eax
  41a20b:	adc    al,0x5a
  41a20d:	sub    eax,0xc84875e5
  41a212:	mov    esp,0x60c41e7d
  41a217:	out    0xeb,al
  41a219:	xor    esi,ebx
  41a21b:	cmc    
  41a21c:	adc    DWORD PTR [esi],0x19
  41a21f:	test   edi,edi
  41a221:	sar    BYTE PTR [ebp-0x58],cl
  41a224:	add    esp,eax
  41a226:	fiadd  DWORD PTR [ebx-0x67]
  41a229:	pop    eax
  41a22a:	jo     0x41a231
  41a22c:	lods   al,BYTE PTR ds:[esi]
  41a22d:	xchg   ebx,eax
  41a22e:	out    0x9f,al
  41a230:	stos   BYTE PTR es:[edi],al
  41a231:	jb     0x41a277
  41a233:	lds    edi,FWORD PTR [ebx+0x1e996b6]
  41a239:	dec    edi
  41a23a:	adc    ebp,DWORD PTR [eax]
  41a23c:	cmp    ebp,DWORD PTR ds:0x30459270
  41a242:	aad    0xe8
  41a244:	jge    0x41a28e
  41a246:	adc    edi,DWORD PTR [edi+0x50]
  41a249:	aad    0x8c
  41a24b:	xor    cl,al
  41a24d:	jbe    0x41a216
  41a24f:	(bad)  
  41a251:	stos   BYTE PTR es:[edi],al
  41a252:	pop    eax
  41a253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a254:	inc    ebp
  41a255:	(bad)  
  41a256:	and    DWORD PTR [edi-0x5d],edi
  41a259:	mov    al,0x21
  41a25b:	xchg   ebp,eax
  41a25c:	iret   
  41a25d:	ret    
  41a25e:	mov    ecx,ds
  41a260:	in     al,dx
  41a261:	sbb    BYTE PTR [edi+0x23],ah
  41a264:	xor    ah,BYTE PTR [esp+ebx*8-0x58]
  41a268:	lock scas al,BYTE PTR es:[edi]
  41a26a:	out    dx,al
  41a26b:	loop   0x41a2b7
  41a26d:	or     BYTE PTR [ecx+0x1b],dl
  41a270:	cmc    
  41a271:	hlt    
  41a272:	jge    0x41a239
  41a274:	stos   DWORD PTR es:[edi],eax
  41a275:	fld    TBYTE PTR [edx-0x10]
  41a278:	sub    DWORD PTR [ebp+0x4b],ecx
  41a27b:	stos   BYTE PTR es:[edi],al
  41a27c:	mov    ch,0x61
  41a27e:	sub    esp,ebx
  41a280:	ret    
  41a281:	jae    0x41a226
  41a283:	stc    
  41a284:	(bad)  
  41a285:	mov    edx,0xf6abc1c9
  41a28a:	rcr    BYTE PTR [ebx+0x50],1
  41a28d:	adc    al,dh
  41a28f:	mov    eax,0x53b941f
  41a294:	cmp    dl,BYTE PTR [ebx+ebx*4]
  41a297:	push   ecx
  41a298:	mov    ch,0x1f
  41a29a:	cmp    DWORD PTR [edi+0x375072fc],edx
  41a2a0:	cmc    
  41a2a1:	jne    0x41a23b
  41a2a3:	add    ebp,edx
  41a2a5:	sub    bl,BYTE PTR [edi+0x762abbef]
  41a2ab:	and    DWORD PTR [eax],esp
  41a2ad:	inc    edi
  41a2ae:	push   eax
  41a2af:	sub    dh,BYTE PTR [edx]
  41a2b1:	mov    ch,0x6a
  41a2b3:	das    
  41a2b4:	je     0x41a2b1
  41a2b6:	cs xchg ebp,eax
  41a2b8:	inc    edi
  41a2b9:	push   esp
  41a2ba:	ror    ah,0x74
  41a2bd:	push   esp
  41a2be:	into   
  41a2bf:	sub    eax,0x919e69d5
  41a2c4:	push   ss
  41a2c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2c6:	adc    eax,0x2358f508
  41a2cb:	rol    DWORD PTR [esi+eiz*1-0x37],0xa
  41a2d0:	stos   BYTE PTR es:[edi],al
  41a2d1:	les    ebp,FWORD PTR [ebp+0x21]
  41a2d4:	adc    DWORD PTR [ecx+0x6],esp
  41a2d7:	adc    esi,ecx
  41a2d9:	xchg   edi,eax
  41a2da:	mov    DWORD PTR [esi],edx
  41a2dc:	es inc ecx
  41a2de:	add    eax,0xba0022cf
  41a2e3:	and    DWORD PTR [ecx],ecx
  41a2e5:	(bad)  
  41a2e6:	in     eax,0xbd
  41a2e8:	mov    eax,ds:0xbaaa3a25
  41a2ed:	cmp    cl,cl
  41a2ef:	jl     0x41a303
  41a2f1:	pop    edx
  41a2f2:	xor    ecx,DWORD PTR [ecx+0x18acc948]
  41a2f8:	neg    DWORD PTR [ebx+0x70a1a9b1]
  41a2fe:	jno    0x41a325
  41a300:	iretw  
  41a302:	inc    esi
  41a303:	push   ds
  41a304:	(bad)  
  41a305:	out    dx,eax
  41a306:	inc    ecx
  41a307:	push   ecx
  41a308:	pop    eax
  41a309:	jno    0x41a2f7
  41a30b:	loope  0x41a2e6
  41a30d:	and    al,BYTE PTR [esi]
  41a30f:	xor    eax,0x5378fc0
  41a314:	sub    ecx,ecx
  41a316:	(bad)  [ebp-0x24ef078b]
  41a31c:	(bad)  
  41a31f:	mov    eax,esp
  41a321:	cwde   
  41a322:	iret   
  41a323:	add    BYTE PTR ds:0x47e70157,ah
  41a329:	cmp    eax,0xedff363d
  41a32e:	jmp    0x17c0:0x2b66abce
  41a335:	rcl    ah,cl
  41a337:	mov    dh,0x3c
  41a339:	stos   DWORD PTR es:[edi],eax
  41a33a:	call   0x53ef:0x46b7d745
  41a341:	aad    0x4f
  41a343:	and    DWORD PTR [ebp+0x27664b56],0x46
  41a34a:	inc    edx
  41a34b:	je     0x41a325
  41a34d:	and    eax,ebp
  41a34f:	ds pop ds
  41a351:	add    DWORD PTR [ecx-0x8bf5873],0xffffffec
  41a358:	dec    edx
  41a359:	xchg   edi,eax
  41a35a:	outs   dx,BYTE PTR ds:[esi]
  41a35b:	add    BYTE PTR [edi+0x2],0x4c
  41a35f:	mov    ah,0x9f
  41a361:	jbe    0x41a334
  41a363:	dec    ebp
  41a364:	dec    eax
  41a365:	fld    DWORD PTR ss:[ecx-0x25]
  41a369:	xchg   DWORD PTR [edi-0x7a506377],esi
  41a36f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a370:	xlat   BYTE PTR ds:[ebx]
  41a371:	aaa    
  41a372:	pop    es
  41a373:	cmp    dl,bl
  41a375:	xor    bl,0x6c
  41a378:	dec    ebp
  41a379:	lods   eax,DWORD PTR ds:[esi]
  41a37a:	xchg   esp,eax
  41a37b:	fadd   QWORD PTR [esp+eax*1-0x30]
  41a37f:	mov    edx,esp
  41a381:	enter  0x6c1c,0x91
  41a385:	loopne 0x41a3c2
  41a387:	or     al,0x2e
  41a389:	fidivr WORD PTR [edi+ebx*4]
  41a38c:	pushf  
  41a38d:	call   0xe1a5:0x2b887927
  41a394:	push   edx
  41a395:	or     BYTE PTR [edx+0x33060812],al
  41a39b:	inc    ebx
  41a39c:	inc    ecx
  41a39d:	aam    0xbc
  41a39f:	loope  0x41a420
  41a3a1:	inc    ebx
  41a3a2:	push   cs
  41a3a3:	adc    al,0xbf
  41a3a5:	pop    es
  41a3a6:	inc    ebx
  41a3a7:	into   
  41a3a8:	lea    eax,[ebp-0x1b]
  41a3ab:	int3   
  41a3ac:	ss xor ebx,ebp
  41a3af:	pop    es
  41a3b0:	mov    DWORD PTR [ebp-0x4c],0x81832598
  41a3b7:	mov    esi,0xabd91baa
  41a3bc:	fmulp  st(1),st
  41a3be:	fbld   TBYTE PTR [edx-0x13b46ee2]
  41a3c4:	jmp    0x6777e54e
  41a3c9:	dec    ebx
  41a3ca:	xchg   ecx,eax
  41a3cb:	push   ecx
  41a3cc:	nop
  41a3cd:	clc    
  41a3ce:	test   cl,ch
  41a3d0:	mov    al,0x90
  41a3d2:	stos   BYTE PTR es:[edi],al
  41a3d3:	push   es
  41a3d4:	test   BYTE PTR [edx],cl
  41a3d6:	rol    BYTE PTR [edx+ebp*2-0x5d1e633e],cl
  41a3dd:	dec    ebp
  41a3de:	add    BYTE PTR [edx-0x750ba491],cl
  41a3e4:	mov    ebp,0xd32d67d0
  41a3e9:	popa   
  41a3ea:	add    ecx,DWORD PTR [ebp-0x1f]
  41a3ed:	retf   
  41a3ee:	pop    edi
  41a3ef:	push   0x23
  41a3f1:	loop   0x41a404
  41a3f3:	jle    0x41a3fa
  41a3f5:	cmp    ecx,DWORD PTR [edx-0x57]
  41a3f8:	and    bl,BYTE PTR [ecx+0x5d]
  41a3fb:	fwait
  41a3fc:	lahf   
  41a3fd:	inc    edi
  41a3fe:	call   0x7139:0xe73f999a
  41a405:	fsub   st(2),st
  41a407:	pop    es
  41a408:	je     0x41a390
  41a40a:	xchg   ecx,eax
  41a40b:	mov    bh,0x59
  41a40d:	sub    ch,BYTE PTR [esp+edi*1]
  41a410:	jne    0x41a40c
  41a412:	cdq    
  41a413:	sub    edx,DWORD PTR [eax+0x3cb864f0]
  41a419:	and    esi,esi
  41a41b:	ins    DWORD PTR es:[edi],dx
  41a41c:	dec    edx
  41a41d:	or     al,0x99
  41a41f:	xlat   BYTE PTR ds:[ebx]
  41a420:	xor    BYTE PTR [edx+ebx*1-0x55],al
  41a424:	jl     0x41a3ad
  41a426:	xor    BYTE PTR [ebp-0x483dae9a],bh
  41a42c:	das    
  41a42d:	mov    bh,ch
  41a42f:	ss pusha 
  41a431:	push   ecx
  41a432:	adc    al,0x72
  41a434:	dec    edi
  41a435:	add    DWORD PTR [eax-0x23c30ffc],edi
  41a43b:	fstp   TBYTE PTR [ecx]
  41a43d:	pop    eax
  41a43e:	test   eax,0x1f769916
  41a443:	xchg   edi,eax
  41a444:	leave  
  41a445:	and    DWORD PTR [esi],edx
  41a447:	es adc eax,0x7fe50e4f
  41a44d:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a44f:	and    al,0x5e
  41a451:	dec    edi
  41a452:	sbb    eax,0xe5e0536c
  41a457:	ss ss add eax,0xd9df04b1
  41a45e:	cmp    al,0xd
  41a460:	aaa    
  41a461:	fmul   QWORD PTR [esi+0x72]
  41a464:	out    0xbf,eax
  41a466:	add    esp,0xf647bf2
  41a46c:	adc    ebp,DWORD PTR [ecx-0x5a]
  41a46f:	gs pop edx
  41a471:	or     BYTE PTR [esi],0x18
  41a474:	inc    edi
  41a475:	mov    ah,0xd2
  41a477:	cdq    
  41a478:	call   0xdd79:0xc2933f6a
  41a47f:	sbb    DWORD PTR [ebx],0x848fe179
  41a485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a486:	std    
  41a487:	adc    eax,0x251ebd65
  41a48c:	not    DWORD PTR [esi-0x7b]
  41a48f:	sub    esi,DWORD PTR [edx+0x7b]
  41a492:	jmp    0x7c3c:0xf2590cbe
  41a499:	ret    
  41a49a:	mov    ebx,0x7a593c6f
  41a49f:	icebp  
  41a4a0:	pop    es
  41a4a1:	sub    al,al
  41a4a3:	or     ebp,esi
  41a4a5:	jb     0x41a525
  41a4a7:	dec    ecx
  41a4a8:	mov    eax,0xa92763c8
  41a4ad:	or     eax,0x74585e0f
  41a4b2:	and    al,BYTE PTR [ebp-0x463aa3a3]
  41a4b8:	sbb    al,0x35
  41a4ba:	test   eax,0xfb1a277
  41a4bf:	inc    edx
  41a4c0:	aad    0x89
  41a4c2:	pop    es
  41a4c3:	xchg   edi,eax
  41a4c4:	nop
  41a4c5:	iret   
  41a4c6:	xor    eax,0xa3ad8982
  41a4cb:	xchg   ebx,eax
  41a4cc:	aaa    
  41a4cd:	(bad)  
  41a4ce:	retf   
  41a4cf:	xchg   ebp,eax
  41a4d0:	xor    edi,eax
  41a4d2:	jne    0x41a512
  41a4d4:	cmp    eax,0x60e4d793
  41a4d9:	and    BYTE PTR [edi+0x2f],cl
  41a4dc:	inc    edx
  41a4dd:	jns    0x41a4dd
  41a4df:	ds jnp 0x41a4df
  41a4e2:	popa   
  41a4e3:	test   DWORD PTR [esi],0x77b9bc38
  41a4e9:	adc    ebp,ecx
  41a4eb:	jns    0x41a51f
  41a4ed:	dec    edx
  41a4ee:	add    BYTE PTR [ebx+eax*4-0x6],ah
  41a4f2:	(bad)
  41a4f5:	mov    eax,0xbded8028
  41a4fa:	daa    
  41a4fb:	xor    cl,BYTE PTR [eax-0x7076f335]
  41a501:	fisttp DWORD PTR [ebx+0x48bc42c4]
  41a507:	out    dx,eax
  41a508:	pusha  
  41a509:	xor    al,0xba
  41a50b:	mov    cl,BYTE PTR [ecx-0x17]
  41a50e:	sbb    cl,BYTE PTR [ebx]
  41a510:	adc    eax,0x12cce77
  41a515:	sub    eax,esp
  41a517:	pop    edx
  41a518:	and    DWORD PTR [esi+0x1f3a3ab8],edi
  41a51e:	jecxz  0x41a534
  41a520:	inc    eax
  41a521:	mov    eax,DWORD PTR [ecx+0x746e9053]
  41a527:	inc    eax
  41a528:	out    dx,eax
  41a529:	adc    DWORD PTR [ecx-0x64],0x43fb65d9
  41a530:	push   eax
  41a531:	sahf   
  41a532:	cmp    eax,0xb479834c
  41a537:	pop    esp
  41a538:	test   eax,0x17bfb75b
  41a53d:	add    ecx,ebp
  41a53f:	sub    al,0x80
  41a541:	cmp    edx,DWORD PTR [edx+0x5627fee4]
  41a547:	add    ebp,DWORD PTR [edx+0x27c65dc8]
  41a54d:	into   
  41a54e:	lahf   
  41a54f:	cmp    DWORD PTR [eax+ebx*8-0x36],ebx
  41a553:	cmp    ch,ch
  41a555:	adc    DWORD PTR [ebx+0x34f7f828],esp
  41a55b:	dec    esp
  41a55c:	clc    
  41a55d:	and    DWORD PTR [esp+eiz*4],ebp
  41a560:	outs   dx,DWORD PTR es:[esi]
  41a562:	(bad)  
  41a563:	cmp    DWORD PTR [ebp+0x234a3cef],esi
  41a569:	or     al,0x80
  41a56b:	popa   
  41a56c:	sbb    eax,0xda5c1088
  41a571:	dec    edx
  41a572:	int    0xf1
  41a574:	mov    bh,BYTE PTR [edi+0x17802e98]
  41a57a:	scas   eax,DWORD PTR es:[edi]
  41a57b:	mov    ebp,0x5a0dde1e
  41a580:	xchg   DWORD PTR [ebx],esp
  41a582:	sbb    eax,0x4b5e6d78
  41a587:	loopne 0x41a53b
  41a589:	xchg   DWORD PTR [eax-0x704eddc4],ebx
  41a58f:	out    0x93,eax
  41a591:	jp     0x41a588
  41a593:	fadd   QWORD PTR [ecx+0x64]
  41a596:	adc    ah,BYTE PTR [eax-0x149b5fc0]
  41a59c:	mov    WORD PTR ds:0x24888c19,?
  41a5a2:	or     eax,0x9be7d5ea
  41a5a7:	pop    ss
  41a5a8:	pop    edx
  41a5a9:	les    ebx,FWORD PTR ds:0xe2f07408
  41a5af:	jle    0x41a5c1
  41a5b1:	in     eax,0x7d
  41a5b3:	adc    dl,BYTE PTR [ecx]
  41a5b5:	cmp    bh,BYTE PTR [ebx+0x26]
  41a5b8:	adc    eax,esp
  41a5ba:	mov    al,ds:0x54fc8149
  41a5bf:	mov    esi,0xe1f6dcb6
  41a5c4:	sbb    eax,0x49
  41a5c7:	mov    esi,0x1a83a174
  41a5cc:	mov    ebp,0xa5152b3e
  41a5d1:	pop    ds
  41a5d2:	lahf   
  41a5d3:	xchg   ecx,eax
  41a5d4:	adc    edx,DWORD PTR [esi-0x7f879b69]
  41a5da:	ss in  eax,0x15
  41a5dd:	dec    edx
  41a5de:	mov    esp,0x4fcf6d3e
  41a5e3:	out    0x50,al
  41a5e5:	sbb    edi,DWORD PTR [edi-0x2a]
  41a5e8:	mov    ecx,0xed23d205
  41a5ed:	test   BYTE PTR [edi],bl
  41a5ef:	sbb    eax,0xd76d963b
  41a5f4:	adc    BYTE PTR [ebp-0x4d097f2b],bh
  41a5fa:	mov    esp,0x28780454
  41a5ff:	ja     0x41a60b
  41a601:	mov    esi,0x69fc4345
  41a606:	mov    dl,0x44
  41a608:	lds    edx,FWORD PTR [esi]
  41a60a:	jl     0x41a66d
  41a60c:	mov    esi,0x850d3043
  41a611:	jmp    0x41a59e
  41a613:	pop    ecx
  41a614:	cld    
  41a615:	ret    0xbbab
  41a618:	dec    edx
  41a619:	or     al,0xac
  41a61b:	popa   
  41a61c:	cmp    ebp,ebp
  41a61e:	xor    eax,0xd26ef6e7
  41a623:	sbb    DWORD PTR [ebx],ebp
  41a625:	leave  
  41a626:	mov    ds:0x69810aa8,eax
  41a62b:	stos   DWORD PTR es:[edi],eax
  41a62c:	in     eax,dx
  41a62d:	fcom   QWORD PTR [edi]
  41a62f:	xor    bh,cl
  41a631:	inc    esi
  41a632:	xchg   ecx,eax
  41a633:	pop    ebp
  41a634:	nop
  41a635:	scas   eax,DWORD PTR es:[edi]
  41a636:	mov    WORD PTR [eax+0x4505e346],es
  41a63c:	fsubr  DWORD PTR [edi+0x7db8ff9f]
  41a642:	js     0x41a6a3
  41a644:	jecxz  0x41a676
  41a646:	sbb    dl,ch
  41a648:	cld    
  41a649:	pop    ds
  41a64a:	imul   ebx,ebp,0xffffffc6
  41a64d:	mov    bh,cl
  41a64f:	test   al,0x5e
  41a651:	loope  0x41a656
  41a653:	in     al,dx
  41a654:	push   esp
  41a655:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41a657:	add    bl,BYTE PTR [edi+0x9]
  41a65a:	scas   al,BYTE PTR es:[edi]
  41a65b:	test   DWORD PTR [ebp+0x1b],ecx
  41a65e:	out    dx,al
  41a65f:	mov    ?,WORD PTR [edx]
  41a661:	xchg   ecx,eax
  41a662:	dec    edi
  41a663:	retf   
  41a664:	test   al,0xeb
  41a666:	pop    es
  41a667:	rcr    esp,cl
  41a669:	int3   
  41a66a:	inc    eax
  41a66b:	mov    dl,0x21
  41a66d:	cmp    ch,BYTE PTR [esp+eiz*4+0x363bf32a]
  41a674:	sub    al,0xed
  41a676:	xor    eax,0x29320b24
  41a67b:	or     al,0x9d
  41a67d:	leave  
  41a67e:	imul   ecx,DWORD PTR [ebp-0x4def6662],0x3a0fb548
  41a688:	retf   
  41a689:	jb     0x41a6a7
  41a68b:	imul   ecx,DWORD PTR [edi],0xa8bf9ee3
  41a691:	bound  ebx,QWORD PTR [ecx]
  41a693:	xchg   esi,edi
  41a695:	fucomi st,st(3)
  41a697:	call   0x181fa86b
  41a69c:	adc    DWORD PTR [eax+edx*8],esi
  41a69f:	dec    ebx
  41a6a0:	ret    
  41a6a1:	call   0x8d76:0x49a16ca7
  41a6a8:	push   ebx
  41a6a9:	inc    esp
  41a6aa:	mov    ah,0x2e
  41a6ac:	cmp    bh,BYTE PTR [edi-0x70d861]
  41a6b2:	cmp    BYTE PTR [ebp+0x56],al
  41a6b5:	push   esp
  41a6b6:	into   
  41a6b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6b8:	fimul  DWORD PTR [esi]
  41a6ba:	sub    ebp,ecx
  41a6bc:	test   DWORD PTR [ebp+ebx*8-0x15],eax
  41a6c0:	cld    
  41a6c1:	cdq    
  41a6c2:	jmp    0x7aa0eeb4
  41a6c7:	xor    eax,0x9d35eb97
  41a6cc:	or     dh,bl
  41a6ce:	mov    ah,0x1c
  41a6d0:	inc    eax
  41a6d1:	mov    WORD PTR [ecx+edi*1-0x6af53015],ss
  41a6d8:	push   ecx
  41a6d9:	std    
  41a6da:	lea    ebp,[ebx+0x3c28d3e2]
  41a6e0:	hlt    
  41a6e1:	gs inc esi
  41a6e3:	jmp    0x41a682
  41a6e5:	loopne 0x41a6f3
  41a6e7:	or     eax,0x9d51589b
  41a6ec:	mov    cl,dh
  41a6ee:	push   0x4f
  41a6f0:	adc    cl,BYTE PTR [eax]
  41a6f2:	rcr    DWORD PTR [eax],1
  41a6f4:	inc    eax
  41a6f5:	(bad)  
  41a6f6:	pop    edi
  41a6f7:	shr    BYTE PTR [esp+ecx*8-0x48],1
  41a6fb:	sbb    ebx,DWORD PTR [eax-0x2cf06b68]
  41a701:	and    eax,0x48ac8aff
  41a706:	adc    al,0x39
  41a708:	mov    ebx,0x2ee9adfb
  41a70d:	in     al,dx
  41a70e:	lods   eax,DWORD PTR ds:[esi]
  41a70f:	push   esp
  41a710:	mov    ds:0xb2fb90ec,al
  41a715:	jns    0x41a6b4
  41a717:	lahf   
  41a718:	xchg   ecx,eax
  41a719:	test   DWORD PTR [esi-0x49],edx
  41a71c:	(bad)  
  41a71d:	sbb    DWORD PTR [esi+0x23],edi
  41a720:	xrelease mov DWORD PTR [ecx],eax
  41a723:	hlt    
  41a724:	push   ebx
  41a725:	sbb    eax,0xda5f756c
  41a72a:	arpl   WORD PTR [esi+0x7b25adf2],bp
  41a730:	nop
  41a731:	and    dl,BYTE PTR [esi]
  41a733:	and    BYTE PTR [edi],dh
  41a735:	pop    ebp
  41a736:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a737:	mov    edx,0xb7f0c793
  41a73c:	les    ebx,FWORD PTR [esi]
  41a73e:	les    ebx,FWORD PTR [ecx+0x1ce7c62e]
  41a744:	sub    DWORD PTR [ebp+0x491fdd1e],edx
  41a74a:	in     eax,0xc3
  41a74c:	cmp    eax,0x8e81d1fd
  41a751:	icebp  
  41a752:	pop    ds
  41a753:	xchg   DWORD PTR [edx-0x39a75542],ebp
  41a759:	outs   dx,DWORD PTR ds:[esi]
  41a75a:	das    
  41a75b:	stos   BYTE PTR es:[edi],al
  41a75c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a75d:	dec    ebx
  41a75e:	jnp    0x41a7dd
  41a760:	jb     0x41a6fe
  41a762:	mov    ebx,0xe1912017
  41a767:	ins    DWORD PTR es:[edi],dx
  41a768:	ds cmp ebx,eax
  41a76b:	add    ch,ah
  41a76d:	mov    ds:0xd87acd4f,al
  41a772:	inc    esp
  41a773:	outs   dx,BYTE PTR ds:[esi]
  41a774:	pop    edi
  41a775:	and    ah,ah
  41a777:	outs   dx,BYTE PTR ds:[esi]
  41a778:	mov    cl,0x4c
  41a77a:	push   cs
  41a77b:	adc    DWORD PTR [ebx-0x7454dbc8],edi
  41a781:	fcomp  st(4)
  41a783:	adc    eax,0xf6ee968
  41a788:	nop
  41a789:	xor    eax,0x5e0b3e93
  41a78e:	cmp    cl,BYTE PTR [ebx-0x27a8d75]
  41a794:	fild   DWORD PTR [edx-0x2e0bb8bf]
  41a79a:	out    dx,eax
  41a79b:	test   al,0xe4
  41a79d:	mov    ds:0x82b408,eax
  41a7a2:	les    edi,FWORD PTR [ecx+0x6]
  41a7a5:	mov    al,0x90
  41a7a7:	aas    
  41a7a8:	jle    0x41a7f9
  41a7aa:	lock pop ss
  41a7ac:	lods   al,BYTE PTR ds:[esi]
  41a7ad:	or     edi,DWORD PTR [eax+0x75871e2d]
  41a7b3:	jl     0x41a7a7
  41a7b5:	call   0x980e:0x85c52fab
  41a7bc:	fisttp WORD PTR [eax-0x74]
  41a7bf:	push   ebp
  41a7c0:	cmp    dh,bl
  41a7c2:	mov    edx,0x9088dc8c
  41a7c7:	cld    
  41a7c8:	dec    ebx
  41a7c9:	pop    ecx
  41a7ca:	cli    
  41a7cb:	adc    al,0x18
  41a7cd:	inc    esp
  41a7ce:	dec    esp
  41a7cf:	xor    BYTE PTR [ebx+0x1b],bh
  41a7d2:	xor    al,BYTE PTR [eax+0x65]
  41a7d5:	jmp    0x2b34f1ab
  41a7da:	imul   edx,DWORD PTR [ecx],0x75cead12
  41a7e0:	dec    edx
  41a7e1:	imul   eax,DWORD PTR [edi+edx*1+0x43],0xffffff99
  41a7e6:	dec    ebp
  41a7e7:	jecxz  0x41a83d
  41a7e9:	sub    al,BYTE PTR [eax+0x2ba2e724]
  41a7ef:	adc    edi,0xffffffef
  41a7f2:	xor    al,0x1c
  41a7f4:	mov    DWORD PTR [ebx-0x2536ae97],esp
  41a7fa:	xor    ebx,0xbd6ebe0d
  41a800:	lea    ebx,[ebp+eax*4-0x15]
  41a804:	sbb    DWORD PTR [edi+0x71],edi
  41a807:	mov    dl,BYTE PTR [edi-0x6235e7c3]
  41a80d:	cmp    al,0x46
  41a80f:	dec    ebx
  41a810:	jnp    0x41a842
  41a812:	les    ecx,FWORD PTR [ebx+0x21]
  41a815:	or     al,BYTE PTR [ecx]
  41a817:	sub    DWORD PTR [edi-0x3c],eax
  41a81a:	add    edx,ecx
  41a81c:	div    bh
  41a81e:	push   ss
  41a81f:	cwde   
  41a820:	fs stos BYTE PTR es:[edi],al
  41a822:	add    dl,dl
  41a824:	or     eax,0x608e6ff1
  41a829:	sbb    ch,BYTE PTR [edx]
  41a82b:	jnp    0x41a7fe
  41a82d:	inc    edi
  41a82e:	sub    dh,dh
  41a830:	push   0x39
  41a832:	mov    cl,0x7f
  41a834:	sahf   
  41a835:	and    al,0xd9
  41a837:	inc    esp
  41a838:	add    eax,0xe8160365
  41a83d:	ss jae 0x41a860
  41a840:	hlt    
  41a841:	loope  0x41a8b5
  41a843:	retf   0x1489
  41a846:	push   eax
  41a847:	test   al,0xcc
  41a849:	in     eax,0xf2
  41a84b:	inc    esp
  41a84c:	cmc    
  41a84d:	jge    0x41a82f
  41a84f:	sar    cl,cl
  41a851:	mov    ch,0x7b
  41a853:	jne    0x41a874
  41a855:	daa    
  41a856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a859:	inc    edi
  41a85a:	pop    ebx
  41a85b:	push   ecx
  41a85d:	sub    eax,0x1b2d83a8
  41a862:	xlat   BYTE PTR ds:[ebx]
  41a863:	test   BYTE PTR ds:[ecx+0x1f],ch
  41a867:	shr    al,cl
  41a869:	sbb    al,0x30
  41a86b:	aam    0xc5
  41a86d:	frstor [ebx-0x46]
  41a870:	std    
  41a871:	adc    eax,0xa04dfd60
  41a876:	std    
  41a877:	adc    eax,DWORD PTR [eax+ebp*1+0x18024f1a]
  41a87e:	jo     0x41a8d6
  41a880:	xor    bl,BYTE PTR [ecx-0x54161a2e]
  41a886:	into   
  41a887:	xor    al,0x8d
  41a889:	jae    0x41a815
  41a88b:	mov    ecx,0x34515118
  41a890:	push   0x75
  41a892:	cmovne ecx,DWORD PTR [eax+0x76]
  41a896:	pop    edi
  41a897:	fstp   QWORD PTR [eax]
  41a899:	repz xor bp,WORD PTR [eax+0xafbd13f]
  41a8a1:	imul   esi,esp,0x3a4315ba
  41a8a7:	mov    ah,0x33
  41a8a9:	dec    esp
  41a8aa:	rcl    esp,1
  41a8ac:	sbb    eax,0xe5333065
  41a8b1:	xchg   ebp,eax
  41a8b2:	test   DWORD PTR [ebx],0xb4d65120
  41a8b8:	add    ebx,DWORD PTR [esi]
  41a8ba:	mov    dh,0xff
  41a8bc:	mov    bl,0xf3
  41a8be:	adc    ebp,DWORD PTR [ebx+0x13]
  41a8c1:	pop    es
  41a8c2:	jb     0x41a8f7
  41a8c4:	pop    ebp
  41a8c5:	pop    ecx
  41a8c6:	fbld   TBYTE PTR [ecx-0x7e]
  41a8c9:	(bad)  
  41a8ca:	sar    DWORD PTR [edi+0x19],0x1b
  41a8ce:	add    al,0x94
  41a8d0:	jbe    0x41a918
  41a8d2:	int3   
  41a8d3:	and    BYTE PTR [ebx-0x1db028ab],dh
  41a8d9:	(bad)  
  41a8da:	and    bl,BYTE PTR [edi+0x297a191e]
  41a8e0:	es mov ecx,0x4354a80c
  41a8e6:	daa    
  41a8e7:	or     bh,BYTE PTR [eax+0x72]
  41a8ea:	dec    ecx
  41a8eb:	sbb    DWORD PTR [ecx],ebp
  41a8ed:	dec    edi
  41a8ee:	js     0x41a933
  41a8f0:	cld    
  41a8f1:	pop    edx
  41a8f2:	xor    eax,0xa88d38be
  41a8f7:	test   BYTE PTR [ebx],ah
  41a8f9:	sub    BYTE PTR [edi+0x51],cl
  41a8fc:	cdq    
  41a8fd:	in     al,dx
  41a8fe:	repnz adc bh,BYTE PTR ds:0xfb3fe67
  41a905:	push   ebp
  41a906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a907:	sub    ch,BYTE PTR [esi]
  41a909:	dec    edx
  41a90a:	jmp    0x83d9:0x601c0637
  41a911:	dec    edi
  41a912:	fwait
  41a913:	sbb    dl,BYTE PTR [eax-0x56]
  41a916:	cmc    
  41a917:	sbb    al,BYTE PTR [ecx+0x4e01243f]
  41a91d:	cld    
  41a91e:	dec    DWORD PTR [eax]
  41a920:	adc    al,0x1e
  41a922:	mov    dh,0xa5
  41a924:	add    bh,BYTE PTR [esi-0x1b]
  41a927:	push   es
  41a928:	sub    eax,0x1e6edea7
  41a92d:	(bad)  
  41a92e:	scas   ax,WORD PTR es:[edi]
  41a930:	pop    edx
  41a931:	rcr    BYTE PTR [ebx-0x5f],1
  41a934:	cmp    eax,0xb4dfa446
  41a939:	jge    0x41a9b3
  41a93b:	dec    edx
  41a93c:	push   edi
  41a93d:	add    BYTE PTR [ecx+0x68d4e784],bl
  41a943:	(bad)  
  41a945:	call   DWORD PTR [esi+0xfc9772]
  41a94b:	mov    ds:0x308b91e4,al
  41a950:	pop    edi
  41a951:	retf   
  41a952:	dec    edi
  41a953:	mov    edx,0xfa8c8d12
  41a958:	ror    al,0xa7
  41a95b:	mov    eax,fs:0x8ed83b74
  41a961:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41a963:	stos   DWORD PTR es:[edi],eax
  41a964:	xchg   edi,eax
  41a965:	jge    0x41a985
  41a967:	cmp    DWORD PTR [esi+0x2c],ebx
  41a96a:	mov    BYTE PTR [ebx+ecx*2-0x44],cl
  41a96e:	mov    dl,0xf4
  41a970:	lods   al,BYTE PTR ds:[esi]
  41a971:	ret    
  41a972:	mov    ebx,0x4ceca73d
  41a977:	fimul  WORD PTR [ecx+0x2d]
  41a97a:	xchg   ebp,eax
  41a97b:	adc    eax,0x2ff7f6ec
  41a980:	inc    ebp
  41a981:	jo     0x41a92c
  41a983:	ins    BYTE PTR es:[edi],dx
  41a984:	xchg   edx,eax
  41a985:	add    DWORD PTR ds:0xcc85ad38,eax
  41a98b:	push   eax
  41a98c:	clc    
  41a98d:	mov    bh,0xab
  41a98f:	int    0xe6
  41a991:	jecxz  0x41a93d
  41a993:	cwde   
  41a994:	xchg   edi,eax
  41a995:	xchg   edx,eax
  41a996:	adc    bh,BYTE PTR [eax]
  41a998:	int3   
  41a999:	dec    ecx
  41a99a:	and    dl,BYTE PTR [esi+0x6314be1b]
  41a9a0:	repnz and eax,0xed24de26
  41a9a6:	(bad)  
  41a9a7:	out    0x73,eax
  41a9a9:	popa   
  41a9aa:	inc    esi
  41a9ab:	out    0x60,al
  41a9ad:	push   0xffffffb9
  41a9af:	xor    bh,BYTE PTR [ecx-0x12]
  41a9b2:	fsubr  QWORD PTR [esi-0x5da4c89a]
  41a9b8:	std    
  41a9b9:	in     al,dx
  41a9ba:	das    
  41a9bb:	call   0xf6ab:0x5ea611ad
  41a9c2:	rcl    ecx,1
  41a9c4:	jg     0x41a952
  41a9c6:	test   edx,ebp
  41a9c8:	ror    al,0x64
  41a9cb:	mov    ebp,0x9e916289
  41a9d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9d1:	inc    ebx
  41a9d2:	pusha  
  41a9d3:	mov    ebp,0xfe8f19fb
  41a9d8:	fcom   QWORD PTR [ebx-0x3e]
  41a9db:	and    al,0xb
  41a9dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9de:	repz pop esi
  41a9e0:	or     bl,BYTE PTR [eax+0x19]
  41a9e3:	ja     0x41a9fd
  41a9e5:	mov    eax,0x6df22c47
  41a9ea:	aad    0x9b
  41a9ec:	cmp    ebx,DWORD PTR [ebx+esi*4-0x1c]
  41a9f0:	pop    edx
  41a9f1:	and    esp,edx
  41a9f3:	add    ecx,DWORD PTR [eax+0x537eedf]
  41a9f9:	ins    DWORD PTR es:[edi],dx
  41a9fa:	push   edi
  41a9fb:	lods   al,BYTE PTR ds:[esi]
  41a9fc:	inc    esp
  41a9fd:	in     al,0xd2
  41a9ff:	gs ds aas 
  41aa02:	jb     0x41aa5b
  41aa04:	push   es
  41aa05:	or     al,0xc9
  41aa07:	rcl    DWORD PTR [ebp-0x34],1
  41aa0a:	push   0x67
  41aa0c:	add    eax,0xc655955e
  41aa11:	(bad)  
  41aa12:	mov    dl,0x67
  41aa14:	add    bh,ah
  41aa16:	adc    eax,0xa4ddffda
  41aa1b:	adc    esp,DWORD PTR [ebp-0x77ac69b7]
  41aa21:	lods   al,BYTE PTR ds:[esi]
  41aa22:	hlt    
  41aa23:	retf   0x79dc
  41aa26:	pop    es
  41aa27:	add    DWORD PTR [ebx+0x44e56867],edi
  41aa2d:	sbb    al,0x25
  41aa2f:	ret    
  41aa30:	jl     0x41a9c2
  41aa32:	or     al,0x91
  41aa34:	fist   WORD PTR [ecx]
  41aa36:	push   ebx
  41aa37:	xor    bh,BYTE PTR [ebp+0x26801058]
  41aa3d:	inc    ebx
  41aa3e:	cmp    DWORD PTR [esi-0x4d],esp
  41aa41:	fdiv   st,st(3)
  41aa43:	inc    eax
  41aa44:	xor    dh,BYTE PTR [ebx-0x2d]
  41aa47:	push   ebx
  41aa48:	out    0x3,al
  41aa4a:	xor    edi,DWORD PTR [ecx+0x5b]
  41aa4d:	and    BYTE PTR [eax+0x47],0x7
  41aa51:	mov    al,ds:0x8a115dab
  41aa56:	(bad)  
  41aa57:	push   0x3e
  41aa59:	shr    DWORD PTR ds:0x6735549d,cl
  41aa5f:	adc    BYTE PTR [edx],ah
  41aa61:	and    al,bh
  41aa63:	xor    al,0xeb
  41aa65:	mov    edx,0xf401e6e
  41aa6a:	enter  0xbe9e,0x16
  41aa6e:	loope  0x41aa45
  41aa70:	jae    0x41aadc
  41aa72:	ins    DWORD PTR es:[edi],dx
  41aa73:	cwde   
  41aa74:	cmp    al,0x3b
  41aa76:	dec    ecx
  41aa77:	adc    eax,0xe150fa26
  41aa7c:	lods   al,BYTE PTR ds:[esi]
  41aa7d:	cmp    bh,dh
  41aa7f:	pop    edi
  41aa80:	pusha  
  41aa81:	jo     0x41aa08
  41aa83:	hlt    
  41aa84:	cmp    BYTE PTR [eax+0x1e],ah
  41aa87:	inc    esp
  41aa88:	and    DWORD PTR [ecx+0x26],edx
  41aa8b:	inc    ebx
  41aa8c:	cmp    BYTE PTR [eiz*1+0x273f376b],ah
  41aa93:	enter  0xabc4,0x2e
  41aa97:	in     al,0x37
  41aa99:	ss (bad) 
  41aa9b:	cmp    BYTE PTR es:[ebx+0x482ae550],al
  41aaa2:	ret    
  41aaa3:	dec    edx
  41aaa4:	push   0xf10f8bcf
  41aaa9:	bound  ebx,QWORD PTR [ecx]
  41aaab:	fld    QWORD PTR [eax]
  41aaad:	icebp  
  41aaae:	sub    al,0xe8
  41aab0:	inc    ecx
  41aab1:	out    0x98,al
  41aab3:	sbb    esp,edi
  41aab5:	sahf   
  41aab6:	cmp    ebx,DWORD PTR [esi]
  41aab8:	gs mov al,0x1a
  41aabb:	add    esi,DWORD PTR [esi+0x7836227a]
  41aac1:	ins    DWORD PTR es:[edi],dx
  41aac2:	mov    dh,0x93
  41aac4:	cld    
  41aac5:	pop    ds
  41aac6:	pop    ebx
  41aac7:	pop    edx
  41aac8:	and    al,0x16
  41aaca:	mov    al,ds:0x9704001e
  41aacf:	std    
  41aad0:	test   BYTE PTR [ebp-0x69],ah
  41aad3:	mov    fs,WORD PTR [eax]
  41aad5:	loop   0x41ab12
  41aad7:	out    dx,al
  41aad8:	stc    
  41aad9:	push   0xffffffcc
  41aadb:	push   ebx
  41aadc:	in     al,0x82
  41aade:	outs   dx,DWORD PTR ds:[esi]
  41aadf:	jl     0x41aa62
  41aae1:	sbb    esi,ebp
  41aae3:	push   edx
  41aae4:	mov    edi,0xe4baed3a
  41aae9:	cs push ebp
  41aaeb:	push   edx
  41aaec:	mov    edx,0x48f2cf28
  41aaf1:	add    BYTE PTR [eax-0x11],0xf3
  41aaf5:	(bad)  
  41aaf7:	rol    DWORD PTR [ecx],cl
  41aaf9:	lods   al,BYTE PTR ds:[esi]
  41aafa:	add    eax,0x3db3ff7c
  41aaff:	push   es
  41ab00:	push   ds
  41ab01:	push   ebx
  41ab02:	jnp    0x41ab02
  41ab04:	mov    ebp,0x5eea722a
  41ab09:	pop    ebx
  41ab0a:	pop    ebp
  41ab0b:	push   0xa76caac4
  41ab10:	leave  
  41ab11:	or     ebp,DWORD PTR [eax-0xb]
  41ab14:	ds or  al,0x45
  41ab17:	sbb    bl,BYTE PTR [esi-0x2f]
  41ab1a:	das    
  41ab1b:	sub    al,0xf1
  41ab1d:	or     DWORD PTR [ecx],esp
  41ab1f:	sbb    bl,dl
  41ab21:	add    al,0x1a
  41ab23:	sbb    al,0xdd
  41ab25:	cmp    edx,esp
  41ab27:	and    ebp,DWORD PTR [esi+0x3f347560]
  41ab2d:	pop    ecx
  41ab2e:	mov    WORD PTR [ebx-0x524b18c2],ss
  41ab34:	adc    ah,BYTE PTR [ecx+0x72]
  41ab37:	jmp    0x41aba3
  41ab39:	std    
  41ab3a:	mov    dh,0x41
  41ab3c:	dec    esi
  41ab3d:	lods   eax,DWORD PTR ds:[esi]
  41ab3e:	adc    DWORD PTR [ebp-0x3d503b36],ebx
  41ab44:	mov    al,ds:0x19aac4d1
  41ab49:	adc    edi,esp
  41ab4b:	adc    eax,0x8ba2caab
  41ab50:	test   BYTE PTR [eax+0x7b8af3ee],dh
  41ab56:	leave  
  41ab57:	mov    edx,0x3f364706
  41ab5c:	mov    ecx,0xfeaa33fb
  41ab61:	or     dl,bl
  41ab63:	sub    DWORD PTR [esi+0x357e039a],esi
  41ab69:	rcl    DWORD PTR [esi+0x5119f563],cl
  41ab6f:	data16 jo 0x41ab0d
  41ab72:	cli    
  41ab73:	dec    ebp
  41ab74:	adc    BYTE PTR [edx+0x27],bl
  41ab77:	add    al,0xd7
  41ab79:	sbb    BYTE PTR [edi+0x4307529a],dl
  41ab7f:	(bad)  
  41ab80:	test   DWORD PTR [ebx+0x2c],0x988f0129
  41ab87:	fdiv   QWORD PTR [esi]
  41ab89:	xor    BYTE PTR [ebp+0x1],bl
  41ab8c:	pop    edx
  41ab8d:	sbb    BYTE PTR [ecx-0x4],bh
  41ab90:	fcom   QWORD PTR [ebx+eax*2-0x6744d4c9]
  41ab97:	out    0x4d,eax
  41ab99:	xchg   esi,eax
  41ab9a:	hlt    
  41ab9b:	ret    
  41ab9c:	loope  0x41ab6d
  41ab9e:	mov    edx,0x364ebe6c
  41aba3:	test   al,0xd8
  41aba5:	jnp    0x41ab5b
  41aba7:	mov    edx,0xfda8438e
  41abac:	int3   
  41abad:	or     eax,0xc306a15f
  41abb2:	push   ecx
  41abb3:	pop    es
  41abb4:	sbb    eax,0x94e07e3d
  41abb9:	(bad)  
  41abba:	aaa    
  41abbb:	cmp    ah,BYTE PTR [edi-0x6c]
  41abbe:	cmc    
  41abbf:	xchg   esi,eax
  41abc0:	cmp    cl,BYTE PTR [edi-0x46]
  41abc3:	pop    ecx
  41abc4:	push   eax
  41abc5:	scas   eax,DWORD PTR es:[edi]
  41abc6:	in     eax,0x73
  41abc8:	lock sub al,0x8f
  41abcb:	jo     0x41ac19
  41abcd:	mov    esp,DWORD PTR cs:[ebx+0x56]
  41abd1:	push   0x4d9a4b2b
  41abd6:	lahf   
  41abd7:	xlat   BYTE PTR ds:[ebx]
  41abd8:	gs adc al,0x9
  41abdb:	push   ebp
  41abdc:	aaa    
  41abdd:	outs   dx,DWORD PTR ds:[esi]
  41abde:	mov    ebp,0x1dc421d8
  41abe3:	mov    ecx,edi
  41abe5:	cdq    
  41abe6:	and    eax,0x5ac494bb
  41abeb:	pop    ss
  41abec:	outs   dx,BYTE PTR ds:[esi]
  41abed:	fild   DWORD PTR [ecx+0x64]
  41abf0:	out    dx,al
  41abf1:	mov    ebx,0x968737d7
  41abf6:	jg     0x41abc5
  41abf8:	ret    0xa144
  41abfb:	bound  esp,QWORD PTR [eax+0x5f2dfbd7]
  41ac01:	inc    esp
  41ac02:	or     eax,0x42dd448
  41ac07:	lahf   
  41ac08:	(bad)  [ebp-0x3e]
  41ac0b:	loop   0x41abe5
  41ac0d:	leave  
  41ac0e:	mov    ds:0xdcbe9e1e,al
  41ac13:	jge    0x41aba5
  41ac15:	hlt    
  41ac16:	xchg   edx,eax
  41ac17:	je     0x41abc6
  41ac19:	xchg   edi,eax
  41ac1a:	ins    DWORD PTR es:[edi],dx
  41ac1b:	dec    esp
  41ac1c:	dec    esp
  41ac1d:	fld    QWORD PTR [ebx]
  41ac1f:	fcmovnu st,st(7)
  41ac21:	mov    dh,BYTE PTR [eax]
  41ac23:	push   esp
  41ac24:	lds    eax,FWORD PTR [ebp-0x2c588237]
  41ac2a:	xor    BYTE PTR [edx-0x2c],cl
  41ac2d:	jno    0x41ac79
  41ac2f:	mov    esi,0xcdc29eb6
  41ac34:	push   ss
  41ac35:	outs   dx,BYTE PTR ds:[esi]
  41ac36:	push   edx
  41ac37:	jg     0x41abe2
  41ac39:	mov    eax,ds:0xb49c9c95
  41ac3e:	sbb    DWORD PTR [eax-0x19db34b],edx
  41ac44:	cmp    DWORD PTR [edx-0x4f29d7db],edi
  41ac4a:	mov    edi,0xe154b0cc
  41ac4f:	xchg   esp,eax
  41ac50:	and    al,0xff
  41ac52:	push   esi
  41ac53:	rcr    BYTE PTR [ebx-0x5084cbee],0xfc
  41ac5a:	jae    0x41aca2
  41ac5c:	pop    ecx
  41ac5d:	mov    cl,0x55
  41ac5f:	enter  0x939e,0x1f
  41ac63:	jmp    0x9c7bbc8c
  41ac68:	xchg   esp,eax
  41ac69:	xchg   BYTE PTR [edi+0x245df7ce],dh
  41ac6f:	xor    eax,DWORD PTR [esi+0x5860d4b1]
  41ac75:	dec    ebx
  41ac76:	mov    bl,0x79
  41ac78:	mov    BYTE PTR [esi],bl
  41ac7a:	sub    al,0x89
  41ac7c:	push   eax
  41ac7d:	sbb    DWORD PTR [ecx+0x27ace12f],eax
  41ac83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac84:	or     esi,eax
  41ac86:	cmp    di,dx
  41ac89:	ret    
  41ac8a:	lods   eax,DWORD PTR ds:[esi]
  41ac8b:	fimul  DWORD PTR [edi-0x97e4725]
  41ac91:	adc    ebx,DWORD PTR [ecx]
  41ac93:	das    
  41ac94:	pop    es
  41ac95:	js     0x41ac86
  41ac97:	jp     0x41ac6e
  41ac99:	cmp    DWORD PTR [eax],ebp
  41ac9b:	aam    0x0
  41ac9d:	(bad)  
  41ac9e:	adc    bh,BYTE PTR [ebx+0x41]
  41aca1:	in     al,dx
  41aca2:	push   ecx
  41aca3:	lock adc eax,0x9f08a43e
  41aca9:	or     DWORD PTR [eax],ebx
  41acab:	fisubr DWORD PTR [ecx]
  41acad:	xor    ecx,edx
  41acaf:	and    al,0xe
  41acb1:	mov    edi,0x5f89aec
  41acb6:	dec    edi
  41acb7:	jmp    0xc30938bf
  41acbc:	inc    eax
  41acbd:	add    eax,0x406f2828
  41acc2:	aas    
  41acc3:	les    ebx,FWORD PTR [ecx]
  41acc5:	jmp    0x42051cf7
  41acca:	and    eax,0x4dfd1364
  41accf:	xor    DWORD PTR [esi+0x24],0xfffffff4
  41acd3:	xchg   DWORD PTR [esi],ebp
  41acd5:	jecxz  0x41acaa
  41acd7:	mov    eax,ds:0xa985c097
  41acdc:	js     0x41aceb
  41acde:	inc    esi
  41acdf:	cld    
  41ace0:	mov    esi,0x3a77e1da
  41ace5:	jns    0x41acab
  41ace7:	and    BYTE PTR [ebp+0x57],ch
  41acea:	neg    DWORD PTR [ebx]
  41acec:	xlat   BYTE PTR ds:[ebx]
  41aced:	(bad)  
  41acee:	push   esi
  41acef:	cmc    
  41acf0:	fild   QWORD PTR [ecx+0x74]
  41acf3:	cmp    BYTE PTR [ebp+0x44],dl
  41acf6:	mov    ecx,0x81f80a27
  41acfb:	jb     0x41ad67
  41acfd:	leave  
  41acfe:	adc    DWORD PTR [edi-0x72],ecx
  41ad01:	std    
  41ad02:	aaa    
  41ad03:	addr16 xor eax,0x54275f4c
  41ad09:	xor    esp,edi
  41ad0b:	pushf  
  41ad0c:	sub    ebx,DWORD PTR [esi+0x5e7b6011]
  41ad12:	jbe    0x41ad7c
  41ad14:	fild   WORD PTR [ebp+0x26]
  41ad17:	xor    al,BYTE PTR [ebx+0x734683b8]
  41ad1d:	push   0x60
  41ad1f:	into   
  41ad20:	data16 add cl,BYTE PTR [eax]
  41ad23:	xchg   edi,eax
  41ad24:	cmp    dl,BYTE PTR [esi]
  41ad26:	cli    
  41ad27:	call   0x28a9:0x7ea815a7
  41ad2e:	mov    ah,0x25
  41ad30:	sub    al,0x82
  41ad32:	scas   al,BYTE PTR es:[edi]
  41ad33:	push   es
  41ad34:	lahf   
  41ad35:	ins    BYTE PTR es:[edi],dx
  41ad36:	sbb    eax,DWORD PTR [edx-0x6e]
  41ad39:	xchg   esp,eax
  41ad3a:	aaa    
  41ad3b:	lds    esi,FWORD PTR [ebx-0x71816481]
  41ad41:	xor    BYTE PTR [ecx-0x245d3a56],bl
  41ad47:	sti    
  41ad48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad49:	add    al,0xc6
  41ad4b:	pop    ecx
  41ad4c:	dec    esi
  41ad4d:	cmp    bl,al
  41ad4f:	in     al,0x55
  41ad51:	add    BYTE PTR [ebp-0x2d],ah
  41ad54:	and    BYTE PTR [edx-0x58],dl
  41ad57:	pop    esi
  41ad58:	dec    edx
  41ad59:	pop    ds
  41ad5a:	sub    al,dl
  41ad5c:	pushf  
  41ad5d:	ret    0x2aeb
  41ad60:	add    dl,dh
  41ad62:	cld    
  41ad63:	mov    ebx,0x32c0d243
  41ad68:	stos   BYTE PTR es:[di],al
  41ad6a:	mov    bh,0x7a
  41ad6c:	inc    eax
  41ad6d:	sub    al,0x13
  41ad6f:	mov    eax,ds:0xac6ed389
  41ad74:	cli    
  41ad75:	add    ebx,DWORD PTR [edx-0x6a]
  41ad78:	sbb    BYTE PTR [eax-0x4a213392],dh
  41ad7e:	(bad)  
  41ad7f:	in     eax,dx
  41ad80:	cmp    DWORD PTR [edi+0x23b97fa1],ecx
  41ad86:	mov    ds:0xb26969ae,al
  41ad8b:	sbb    DWORD PTR [ebx],esi
  41ad8d:	(bad)  
  41ad8e:	adc    edi,DWORD PTR [eax]
  41ad90:	add    edx,DWORD PTR [esi+0x5f]
  41ad93:	add    DWORD PTR [esi],0x48cfc97f
  41ad99:	jae    0x41ae1a
  41ad9b:	fsub   QWORD PTR [edi+0x215718d7]
  41ada1:	ja     0x41adea
  41ada3:	add    al,0x7a
  41ada5:	retf   0xd6ad
  41ada8:	cld    
  41ada9:	xor    bh,BYTE PTR [ebp+0x5dcb0c96]
  41adaf:	in     al,0xa7
  41adb1:	mov    ecx,0x4a913c35
  41adb6:	fidivr WORD PTR fs:[esi+0x60e80048]
  41adbd:	neg    cl
  41adbf:	fcmovu st,st(7)
  41adc1:	mov    esp,0x2a95cdf9
  41adc6:	lods   al,BYTE PTR ds:[esi]
  41adc7:	push   ss
  41adc8:	lds    ecx,FWORD PTR [ebp+0x26]
  41adcb:	and    bl,BYTE PTR cs:[ebx]
  41adce:	push   0xfde3f344
  41add3:	and    DWORD PTR [esp+eax*4],edi
  41add6:	(bad)  
  41add7:	out    0x69,eax
  41add9:	mov    esp,0x2b2e4fa6
  41adde:	push   esp
  41addf:	js     0x41ade9
  41ade1:	aam    0xb6
  41ade3:	mov    eax,0xb2988b1e
  41ade8:	outs   dx,DWORD PTR ds:[esi]
  41ade9:	inc    ebp
  41adea:	mov    bl,bh
  41adec:	sbb    BYTE PTR [edi+0x4a],0x5
  41adf0:	push   ss
  41adf1:	ja     0x41ad86
  41adf3:	inc    eax
  41adf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adf5:	mov    ds:0x5f8e148,al
  41adfa:	fucom  st(1)
  41adfc:	push   edi
  41adfd:	jle    0x41ad9f
  41adff:	xor    eax,0x78da1571
  41ae04:	(bad)
  41ae07:	mov    ds:0xf4b4fd47,eax
  41ae0c:	jl     0x41adda
  41ae0e:	mov    BYTE PTR [ebx+0x3c6594e],bl
  41ae14:	(bad)  
  41ae15:	cmp    ah,BYTE PTR [edi+0x4f]
  41ae18:	sub    al,0xe6
  41ae1a:	or     ebp,DWORD PTR [eax+0x772f9a22]
  41ae20:	jae    0x41ae8b
  41ae22:	push   esp
  41ae23:	pop    es
  41ae24:	ror    DWORD PTR [eax+0xe],cl
  41ae27:	retf   0x6bc8
  41ae2a:	xor    al,0xf3
  41ae2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae2d:	hlt    
  41ae2e:	int3   
  41ae2f:	adc    DWORD PTR [esi],edx
  41ae31:	cmp    eax,0x96726b7c
  41ae36:	jne    0x41adfd
  41ae38:	jae    0x41ae6d
  41ae3a:	jns    0x41aead
  41ae3c:	mov    ds:0x36db014a,al
  41ae41:	pushf  
  41ae42:	cmp    al,0x48
  41ae44:	push   0x78
  41ae46:	ins    DWORD PTR es:[edi],dx
  41ae47:	push   0x8faf4383
  41ae4c:	sahf   
  41ae4d:	cld    
  41ae4e:	out    0x6,al
  41ae50:	or     DWORD PTR [eax+edx*1+0x68],ebp
  41ae54:	jge    0x41aec0
  41ae56:	jns    0x41ae1e
  41ae58:	je     0x41ae9f
  41ae5a:	jle    0x41ae8e
  41ae5c:	adc    esi,DWORD PTR [ecx-0x79]
  41ae5f:	mov    bh,0x7d
  41ae61:	aam    0x4a
  41ae63:	cmc    
  41ae64:	arpl   WORD PTR [ebp+ebx*2+0x44],sp
  41ae68:	push   0xffffffc1
  41ae6a:	(bad)  
  41ae6b:	cmp    BYTE PTR [ecx+0x7d],bh
  41ae6e:	fmul   DWORD PTR ds:0x958b945f
  41ae74:	in     eax,dx
  41ae75:	imul   ecx,DWORD PTR [eax],0xbdfbeebe
  41ae7b:	cmp    DWORD PTR [eax-0x56],ebp
  41ae7e:	jmp    0x161:0x7baf2e2e
  41ae85:	pop    esp
  41ae86:	cwde   
  41ae87:	rcl    BYTE PTR [ebx+ebx*4],0x4a
  41ae8b:	jnp    0x41ae5f
  41ae8d:	sub    edi,esi
  41ae8f:	push   esp
  41ae90:	push   ds
  41ae91:	shl    DWORD PTR [ecx-0xe],cl
  41ae94:	sub    BYTE PTR [ebx],al
  41ae96:	mov    eax,ds:0xf8110dc8
  41ae9b:	(bad)  
  41ae9c:	ror    BYTE PTR [esi+eax*4-0x75],0x2
  41aea1:	adc    BYTE PTR [esi],dl
  41aea3:	jg     0x41aecd
  41aea5:	bnd jmp 0x41ae29
  41aea8:	add    al,dl
  41aeaa:	rcl    DWORD PTR [ebx-0x75],cl
  41aead:	std    
  41aeae:	cmp    eax,0x3cc669f3
  41aeb3:	cmp    eax,0xc3d98619
  41aeb8:	mov    eax,ds:0x7d9cc66e
  41aebd:	and    BYTE PTR [edx-0x46],ch
  41aec0:	add    ebx,DWORD PTR [esi+edi*8]
  41aec3:	inc    ebx
  41aec4:	sbb    DWORD PTR [eax],ecx
  41aec6:	bound  ebx,QWORD PTR [ebx]
  41aec8:	xchg   ebx,eax
  41aec9:	aad    0x22
  41aecb:	repnz xor eax,0x12f49875
  41aed1:	stos   DWORD PTR es:[edi],eax
  41aed2:	jo     0x41af0d
  41aed4:	xor    edx,DWORD PTR [edx]
  41aed6:	(bad)  
  41aed7:	imul   ah
  41aed9:	inc    esi
  41aeda:	test   eax,0x40896af9
  41aedf:	sub    al,0x24
  41aee1:	inc    ebp
  41aee2:	dec    ebx
  41aee3:	cmp    DWORD PTR [ecx+0x64],edx
  41aee6:	jmp    0x3944:0x5ad97e25
  41aeed:	xor    eax,0xaefea012
  41aef2:	jbe    0x41aeb8
  41aef4:	push   ebp
  41aef5:	out    0xb6,al
  41aef7:	rcl    esi,0xda
  41aefa:	aam    0x4
  41aefc:	jle    0x41af26
  41aefe:	or     BYTE PTR [edi],bl
  41af00:	pop    edx
  41af01:	push   ss
  41af02:	repnz cmps BYTE PTR es:[esi],BYTE PTR es:[edi]
  41af05:	data16 aas 
  41af07:	jl     0x41af69
  41af09:	cld    
  41af0a:	pushf  
  41af0b:	mov    ecx,0x4287f25f
  41af10:	test   cl,cl
  41af12:	sbb    eax,0x7907c8cf
  41af17:	pop    ebp
  41af18:	into   
  41af19:	imul   ecx,DWORD PTR [edi],0x72392ca0
  41af1f:	mov    WORD PTR [ecx+ecx*2],es
  41af22:	jbe    0x41af40
  41af24:	jne    0x41af6d
  41af26:	lods   eax,DWORD PTR ds:[esi]
  41af27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af28:	jg     0x41aebe
  41af2a:	out    dx,al
  41af2b:	aam    0xe0
  41af2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af2f:	and    ch,cl
  41af31:	fwait
  41af32:	nop
  41af33:	dec    esp
  41af34:	mov    eax,ds:0xdb84928b
  41af39:	cmp    al,BYTE PTR [edx-0x1a363a4]
  41af3f:	jo     0x41af37
  41af41:	mov    cl,0x1b
  41af43:	stc    
  41af44:	test   eax,0x71e48b42
  41af49:	iret   
  41af4a:	and    BYTE PTR [ebx+0x72],bl
  41af4d:	xchg   edx,eax
  41af4e:	adc    dh,BYTE PTR [ebx+esi*2]
  41af51:	push   ebp
  41af52:	or     esi,edx
  41af54:	imul   edi
  41af56:	pop    ss
  41af57:	adc    al,0xa2
  41af59:	sub    al,0x40
  41af5b:	push   ds
  41af5c:	dec    edi
  41af5d:	mov    dh,0x4e
  41af5f:	jno    0x41afc5
  41af61:	popa   
  41af62:	mov    al,0xe6
  41af64:	add    ecx,DWORD PTR [ecx+ebx*2]
  41af67:	clc    
  41af68:	push   edi
  41af6a:	mov    eax,0xe85618b7
  41af70:	dec    edx
  41af71:	lea    edi,[edx]
  41af73:	loopne 0x41afd2
  41af75:	rcl    DWORD PTR [ecx],1
  41af77:	sbb    eax,0x443ba2b7
  41af7c:	xchg   BYTE PTR [ebp-0x42],dl
  41af7f:	in     al,dx
  41af80:	pushf  
  41af81:	mov    eax,0xa743fbaa
  41af86:	jle    0x41aff5
  41af88:	jp     0x41af0a
  41af8a:	jns    0x41afe7
  41af8c:	(bad)
  41af8f:	clc    
  41af90:	pop    ds
  41af91:	mov    ecx,0xfc8e7a
  41af96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af97:	push   esi
  41af98:	in     eax,dx
  41af99:	push   0x5fea1e29
  41af9e:	pop    ds
  41af9f:	in     eax,dx
  41afa0:	stc    
  41afa1:	dec    ecx
  41afa2:	test   eax,0xf38b1d37
  41afa7:	nop
  41afa8:	outs   dx,BYTE PTR ds:[esi]
  41afa9:	ffreep st(2)
  41afab:	dec    ecx
  41afac:	mov    ebp,0x1cc224c7
  41afb1:	pop    ebx
  41afb2:	push   edx
  41afb3:	cmp    eax,0x5884a6db
  41afb8:	lahf   
  41afb9:	inc    edi
  41afba:	sti    
  41afbb:	std    
  41afbc:	xchg   ebp,eax
  41afbd:	xchg   ebp,eax
  41afbe:	jle    0x41af41
  41afc0:	mov    esi,DWORD PTR [ecx+0xee9203d]
  41afc6:	and    BYTE PTR [edi+0x30],bh
  41afc9:	push   ss
  41afca:	and    ebx,DWORD PTR [ecx+0x623dab74]
  41afd0:	inc    edi
  41afd1:	scas   eax,DWORD PTR es:[edi]
  41afd2:	add    eax,0xc55dff2d
  41afd7:	lods   eax,DWORD PTR ds:[esi]
  41afd8:	cld    
  41afd9:	or     BYTE PTR [esi-0x1013efcb],ch
  41afdf:	dec    ebp
  41afe0:	xchg   ecx,eax
  41afe1:	push   eax
  41afe2:	fstp   QWORD PTR [eax]
  41afe4:	ds push edi
  41afe6:	cli    
  41afe7:	fild   WORD PTR gs:[esi-0x49]
  41afeb:	fdivr  st,st(6)
  41afed:	mov    ebp,0xc09a3467
  41aff2:	sahf   
  41aff3:	xchg   BYTE PTR [esi-0x5a],dh
  41aff6:	lods   eax,DWORD PTR ds:[esi]
  41aff7:	adc    BYTE PTR [ebx+eax*8],al
  41affa:	outs   dx,DWORD PTR ds:[esi]
  41affb:	mov    bh,ch
  41affd:	dec    ecx
  41affe:	push   0x87d93db8
  41b003:	jmp    0x619b:0xcc68e7c5
  41b00a:	aam    0x6f
  41b00c:	xlat   BYTE PTR ds:[ebx]
  41b00d:	and    eax,0x6e1a68b0
  41b012:	(bad)  
  41b013:	sti    
  41b014:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b015:	sub    DWORD PTR [ebx+0x4f],0x4f89506f
  41b01c:	add    dl,BYTE PTR [ecx+0x295d8308]
  41b022:	sub    esi,eax
  41b024:	into   
  41b025:	into   
  41b026:	sub    DWORD PTR [ecx],esp
  41b028:	push   0xafaaa498
  41b02d:	jmp    0x97f0a106
  41b032:	mov    edx,0x868ad222
  41b037:	sbb    BYTE PTR [edi+0x1b48efa4],dh
  41b03d:	xchg   ebx,eax
  41b03e:	les    edi,FWORD PTR [esi]
  41b040:	dec    esi
  41b041:	cmp    DWORD PTR [esp+edx*1+0x1a],eax
  41b045:	inc    eax
  41b046:	inc    ebx
  41b047:	dec    esp
  41b048:	add    BYTE PTR [edx+0x72],bh
  41b04b:	test   ch,bh
  41b04d:	pop    ebx
  41b04e:	sub    DWORD PTR [esi+edi*8+0x41],esi
  41b052:	loop   0x41b06b
  41b054:	xchg   edi,eax
  41b055:	push   ebp
  41b056:	loop   0x41b097
  41b058:	daa    
  41b059:	push   es
  41b05a:	cmp    BYTE PTR [edi-0x4a3bf392],bl
  41b060:	mov    cl,0x5
  41b062:	ds out dx,eax
  41b064:	mov    cl,0x86
  41b066:	adc    ebp,DWORD PTR [ebp-0x431103a4]
  41b06c:	cwde   
  41b06d:	xlat   BYTE PTR ds:[ebx]
  41b06e:	jl     0x41b012
  41b070:	stos   BYTE PTR es:[edi],al
  41b071:	ret    0xc11b
  41b074:	jl     0x41b0b7
  41b076:	int3   
  41b077:	in     eax,dx
  41b078:	adc    DWORD PTR [esi-0x50ba08c6],esi
  41b07e:	sub    eax,0x619f8335
  41b083:	outs   dx,DWORD PTR ds:[esi]
  41b084:	fwait
  41b085:	int    0x17
  41b087:	cdq    
  41b088:	das    
  41b089:	test   BYTE PTR [ebx+edx*1+0x74],ch
  41b08d:	icebp  
  41b08e:	xchg   esi,eax
  41b08f:	cmp    cl,BYTE PTR [ebx+0x7a0eeffc]
  41b095:	dec    ebp
  41b096:	push   es
  41b097:	call   0xcb91676
  41b09c:	push   ecx
  41b09d:	or     BYTE PTR ds:0xb2ae7d2f,0xde
  41b0a4:	ret    
  41b0a5:	inc    esp
  41b0a6:	inc    eax
  41b0a7:	int3   
  41b0a8:	dec    eax
  41b0a9:	push   ds
  41b0aa:	cmp    BYTE PTR ss:[ebx-0x2b5cd345],ah
  41b0b1:	mov    esp,0x6e89b205
  41b0b6:	push   esp
  41b0b7:	je     0x41b0d0
  41b0b9:	cmp    BYTE PTR [ecx],bh
  41b0bb:	out    0xca,al
  41b0bd:	jp     0x41b0f2
  41b0bf:	arpl   WORD PTR [ecx],bp
  41b0c1:	(bad)  
  41b0c2:	sti    
  41b0c3:	inc    edx
  41b0c4:	shl    DWORD PTR [ebx+0x6e],cl
  41b0c7:	inc    ecx
  41b0c8:	imul   ecx,eax,0x9a8a07b1
  41b0ce:	mov    ebp,0x7b0c8145
  41b0d3:	cwde   
  41b0d4:	inc    ebx
  41b0d5:	xchg   DWORD PTR [edi+0x40],ebp
  41b0d8:	inc    dl
  41b0da:	or     BYTE PTR [ebx-0x38db76c7],bl
  41b0e0:	mov    ecx,0xf60fd2ab
  41b0e5:	(bad)  
  41b0e6:	and    eax,edx
  41b0e8:	sub    BYTE PTR [ebp+ebx*2+0x66],0xc2
  41b0ed:	(bad)  [ebx+0x3e5d6432]
  41b0f3:	xchg   esi,eax
  41b0f4:	out    0xd1,eax
  41b0f6:	pop    edx
  41b0f7:	mov    eax,0xb71ad1d2
  41b0fc:	fisub  DWORD PTR [ebx]
  41b0fe:	shl    BYTE PTR [eax],cl
  41b100:	dec    esi
  41b101:	pop    eax
  41b102:	outs   dx,BYTE PTR ds:[esi]
  41b103:	lods   al,BYTE PTR ds:[esi]
  41b104:	push   esi
  41b105:	xchg   ebx,eax
  41b106:	dec    ebx
  41b107:	cmp    eax,0x4828a14b
  41b10c:	stos   DWORD PTR es:[edi],eax
  41b10d:	mov    ch,0x9b
  41b10f:	(bad)
  41b112:	jmp    0x41b0d8
  41b114:	je     0x41b13d
  41b116:	sbb    DWORD PTR [esi],esi
  41b118:	cmp    eax,0x769bd84a
  41b11d:	(bad)  
  41b11f:	in     eax,0x77
  41b121:	cs pop edx
  41b123:	clc    
  41b124:	les    eax,FWORD PTR [edi+0x22b825d7]
  41b12a:	sub    ah,BYTE PTR [bx+0x7547]
  41b12f:	add    BYTE PTR [edi+eiz*2],ah
  41b132:	mov    edi,0xa09d0f7f
  41b137:	jo     0x41b142
  41b139:	sub    ah,BYTE PTR [ebx-0x34]
  41b13c:	es add al,0x2c
  41b13f:	jns    0x41b1b3
  41b141:	push   edi
  41b142:	addr16 sub cl,cl
  41b145:	std    
  41b146:	or     DWORD PTR [ecx+0x6e33a011],edi
  41b14c:	out    dx,eax
  41b14d:	pop    esi
  41b14e:	adc    eax,0x7bc5105c
  41b153:	add    cl,ah
  41b155:	loope  0x41b14b
  41b157:	mov    al,ds:0xf327d59e
  41b15c:	or     bh,BYTE PTR [edx-0x1bc72a4e]
  41b162:	dec    edx
  41b163:	or     eax,0x941a7511
  41b168:	cmp    al,0x77
  41b16a:	xchg   BYTE PTR [ecx+0x7a],ah
  41b16d:	mov    ah,0x80
  41b16f:	int    0x91
  41b171:	inc    esp
  41b172:	push   0x6ab6c34
  41b177:	out    dx,eax
  41b178:	mov    cl,0x33
  41b17a:	fiadd  DWORD PTR [esi-0x6b]
  41b17d:	add    BYTE PTR ds:0xb1e08ecc,ah
  41b183:	jecxz  0x41b167
  41b185:	and    DWORD PTR [ecx-0x27],eax
  41b188:	xor    DWORD PTR [ebx+ebx*2-0x2c],edi
  41b18c:	repz and eax,0xd97aadf4
  41b192:	es pop edx
  41b194:	dec    esi
  41b195:	and    al,0x20
  41b197:	cmc    
  41b198:	jg     0x41b16a
  41b19a:	daa    
  41b19b:	mov    al,ds:0x87f85b8c
  41b1a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1a1:	ror    DWORD PTR [ebx],cl
  41b1a3:	cdq    
  41b1a4:	adc    al,0x5d
  41b1a6:	popa   
  41b1a7:	js     0x41b15d
  41b1a9:	iret   
  41b1aa:	sbb    eax,0x2fbbf5db
  41b1af:	cmp    DWORD PTR [edx-0x58],eax
  41b1b2:	and    al,BYTE PTR [ecx]
  41b1b4:	scas   al,BYTE PTR es:[edi]
  41b1b5:	clc    
  41b1b6:	mov    dl,0x7
  41b1b8:	mov    edi,0x24943dbe
  41b1bd:	jle    0x41b1e5
  41b1bf:	or     al,0xfa
  41b1c1:	call   0xfc99:0x28e12501
  41b1c8:	aam    0x86
  41b1ca:	sti    
  41b1cb:	std    
  41b1cc:	mov    DWORD PTR [edx],edi
  41b1ce:	push   ebx
  41b1cf:	(bad)  
  41b1d0:	push   ebp
  41b1d1:	inc    esi
  41b1d2:	xchg   esi,eax
  41b1d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1d4:	sbb    BYTE PTR [edx-0x16],bl
  41b1d7:	mov    eax,0xdcaf8a58
  41b1dc:	pop    ss
  41b1dd:	sub    bh,BYTE PTR [edi-0x6e6ef439]
  41b1e3:	sbb    DWORD PTR [ebp+0x7b],esp
  41b1e6:	inc    ecx
  41b1e7:	sbb    edx,ebp
  41b1e9:	loop   0x41b228
  41b1eb:	xlat   BYTE PTR ds:[ebx]
  41b1ec:	mov    edx,0xa291b4d5
  41b1f1:	or     ah,BYTE PTR [ecx+0x71e9cfa4]
  41b1f7:	mov    cl,0xdb
  41b1f9:	imul   esp,DWORD PTR [ebx],0xffffffaa
  41b1fc:	push   edx
  41b1fd:	pusha  
  41b1fe:	ins    DWORD PTR es:[edi],dx
  41b1ff:	test   al,0x17
  41b201:	ja     0x41b224
  41b203:	cmp    BYTE PTR [edi-0x2d],ch
  41b206:	inc    ecx
  41b207:	xlat   BYTE PTR ds:[ebx]
  41b208:	sub    eax,0x20071c71
  41b20d:	jns    0x41b269
  41b20f:	test   eax,0x1b0c9e90
  41b214:	test   DWORD PTR [ebp+0x1f04847d],ecx
  41b21a:	add    DWORD PTR [edx-0x3e],ebx
  41b21d:	xor    ecx,esi
  41b21f:	inc    edx
  41b220:	seta   BYTE PTR [ecx+0x7f7072a]
  41b227:	in     eax,0xb9
  41b229:	aam    0xb5
  41b22b:	fisub  WORD PTR [ecx+0x56423667]
  41b231:	push   0xe159381
  41b236:	fadd   QWORD PTR [esi-0x75c41228]
  41b23c:	jbe    0x41b206
  41b23e:	sbb    esi,DWORD PTR [edi]
  41b240:	sbb    al,0xb2
  41b242:	call   0xfa02a581
  41b247:	mov    esp,0x66426edd
  41b24c:	sub    al,BYTE PTR [ecx]
  41b24e:	mov    ds:0x24a1edb3,al
  41b253:	scas   al,BYTE PTR es:[edi]
  41b254:	cdq    
  41b255:	rcl    BYTE PTR [edx],cl
  41b257:	cmp    BYTE PTR [eax-0x6f482bd0],bh
  41b25d:	or     DWORD PTR [edi+ebx*8+0x36],ecx
  41b261:	mov    dh,0x80
  41b263:	or     ebp,0xffffffc3
  41b266:	hlt    
  41b267:	fadd   st(5),st
  41b269:	or     BYTE PTR ds:0x7cfcb2bf,cl
  41b26f:	cli    
  41b270:	das    
  41b271:	xchg   ebp,eax
  41b272:	xchg   ebx,eax
  41b273:	mov    DWORD PTR [edi+0x6f],edx
  41b276:	dec    eax
  41b277:	push   0x260758b
  41b27c:	fcomi  st,st(7)
  41b27e:	ds cdq 
  41b280:	xchg   ebp,eax
  41b281:	sub    ah,BYTE PTR [eax+0x50]
  41b284:	retf   0x225b
  41b287:	mov    bh,bh
  41b289:	jne    0x41b248
  41b28b:	mov    ah,0xca
  41b28d:	adc    eax,0x226e6a49
  41b292:	stos   BYTE PTR es:[edi],al
  41b293:	push   0x7f932ccb
  41b298:	arpl   WORD PTR [eax+edi*4-0x71],si
  41b29c:	sahf   
  41b29d:	dec    esi
  41b29e:	mov    ch,0x7e
  41b2a0:	dec    eax
  41b2a1:	popa   
  41b2a2:	fstp   TBYTE PTR [edi+0x31]
  41b2a5:	pop    ss
  41b2a6:	and    esp,DWORD PTR [ecx+ecx*8-0x26caa72f]
  41b2ad:	mov    WORD PTR [esi-0x5d],gs
  41b2b0:	cmp    al,0x5b
  41b2b2:	jb     0x41b236
  41b2b4:	jge    0x41b2c7
  41b2b6:	xchg   BYTE PTR [esi+0x44456ec3],dl
  41b2bc:	mov    cl,BYTE PTR [ebx]
  41b2be:	inc    eax
  41b2bf:	call   edx
  41b2c1:	add    cl,BYTE PTR [edi-0x52]
  41b2c4:	aad    0xae
  41b2c6:	lea    ebp,[edx]
  41b2c8:	jno    0x41b2a5
  41b2ca:	bswap  ebx
  41b2cc:	pop    edx
  41b2cd:	dec    eax
  41b2ce:	xchg   ebx,eax
  41b2cf:	jge    0x41b29f
  41b2d1:	jmp    0x3861:0x38f77a52
  41b2d8:	je     0x41b33a
  41b2da:	push   edi
  41b2db:	pop    edi
  41b2dc:	xchg   DWORD PTR ds:0xf2232988,esp
  41b2e2:	inc    edi
  41b2e3:	sub    al,0xf8
  41b2e5:	adc    eax,0x95802bd5
  41b2ea:	pop    ss
  41b2eb:	mov    al,0xf3
  41b2ed:	ss jbe 0x41b2d0
  41b2f0:	pop    eax
  41b2f1:	fcomp  QWORD PTR [esi-0x73]
  41b2f4:	loop   0x41b2fa
  41b2f6:	xor    eax,0x6bfb97ef
  41b2fb:	in     al,dx
  41b2fc:	ins    DWORD PTR es:[edi],dx
  41b2fd:	js     0x41b2cd
  41b2ff:	xor    eax,0xaa89c260
  41b304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b305:	jg     0x41b314
  41b307:	xchg   esi,eax
  41b308:	xlat   BYTE PTR ds:[ebx]
  41b309:	test   al,0x91
  41b30b:	push   ebp
  41b30c:	xor    dl,bl
  41b30e:	data16 hlt 
  41b310:	out    dx,al
  41b311:	mov    cl,0x5b
  41b313:	aaa    
  41b314:	push   cs
  41b315:	xor    al,0x2d
  41b318:	xor    dh,dh
  41b31a:	jnp    0x41b366
  41b31c:	lds    ebp,FWORD PTR gs:[edx]
  41b31f:	test   al,0x36
  41b321:	or     BYTE PTR [ebx+0x71c0fbd],dh
  41b327:	lds    esi,FWORD PTR [ecx-0x3b57f3e9]
  41b32d:	xchg   ebx,eax
  41b32e:	nop
  41b32f:	mov    eax,0x5f627def
  41b334:	mov    bh,0x60
  41b336:	xchg   esp,eax
  41b337:	mov    BYTE PTR [edx+esi*4+0x3b],dh
  41b33b:	cdq    
  41b33c:	dec    esi
  41b33d:	fistp  QWORD PTR ds:0x8eec243a
  41b343:	shl    DWORD PTR [ecx],0xe4
  41b346:	xor    DWORD PTR [ebp+ebx*8+0x68],ecx
  41b34a:	sub    cl,BYTE PTR [ecx-0x7337d547]
  41b350:	xor    al,0x6f
  41b352:	stos   DWORD PTR es:[edi],eax
  41b353:	gs call 0x13ed23e3
  41b359:	jns    0x41b31c
  41b35b:	popa   
  41b35c:	mov    dl,0xe5
  41b35e:	push   0xfca13d99
  41b363:	add    edx,DWORD PTR [edx-0x43832f97]
  41b369:	pop    eax
  41b36a:	aam    0xca
  41b36c:	jne    0x41b307
  41b36e:	and    ebx,DWORD PTR es:[esi+0x33ceb04c]
  41b375:	out    0x2,eax
  41b377:	jbe    0x41b38d
  41b379:	repnz sbb edx,DWORD PTR [esi+0x728caa54]
  41b380:	xchg   DWORD PTR [esi],ecx
  41b382:	imul   eax,DWORD PTR [edx],0xffffff9c
  41b385:	hlt    
  41b386:	xchg   ebx,eax
  41b387:	call   0x6d55:0xc01c6dc8
  41b38e:	jbe    0x41b382
  41b390:	(bad)  
  41b391:	pop    ebx
  41b392:	pop    ebp
  41b393:	out    dx,eax
  41b394:	rcr    DWORD PTR [edx+0x69022081],cl
  41b39a:	add    eax,0x7fb3c6a0
  41b39f:	push   edx
  41b3a0:	sbb    al,0xf2
  41b3a2:	je     0x41b34d
  41b3a4:	enter  0x36a9,0xf7
  41b3a8:	loope  0x41b3a8
  41b3aa:	and    esi,DWORD PTR [edx]
  41b3ac:	pop    eax
  41b3ad:	les    eax,FWORD PTR [ebp-0x39762aec]
  41b3b3:	cmp    al,0x4
  41b3b5:	arpl   si,si
  41b3b7:	imul   ebx,ebp,0xffffffbf
  41b3ba:	ja     0x41b3eb
  41b3bc:	iret   
  41b3bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3be:	retf   
  41b3bf:	jmp    0x41b418
  41b3c1:	mov    edi,0x6b29af18
  41b3c6:	stos   BYTE PTR es:[edi],al
  41b3c7:	cmp    DWORD PTR [edi],edx
  41b3c9:	cmp    eax,0xf607b04
  41b3ce:	fld    QWORD PTR ds:0x92ed1782
  41b3d4:	(bad)  
  41b3d5:	adc    esp,DWORD PTR [ebp+0x356bfdc5]
  41b3db:	or     DWORD PTR [ebx],0xd7b24742
  41b3e1:	mov    eax,ds:0x27193587
  41b3e6:	mov    eax,ds:0x4003de7
  41b3eb:	xchg   ebx,eax
  41b3ec:	jl     0x41b453
  41b3ee:	mov    ebx,0xcaaa3467
  41b3f3:	dec    DWORD PTR [ebp+0x64]
  41b3f6:	push   0x35e95c16
  41b3fb:	out    0x58,al
  41b3fd:	dec    edx
  41b3fe:	scas   eax,DWORD PTR es:[edi]
  41b3ff:	aas    
  41b400:	and    cl,BYTE PTR [edx-0x2c7a79c8]
  41b406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b408:	cli    
  41b409:	push   eax
  41b40a:	fbld   TBYTE PTR [ebp+0x2bcd0beb]
  41b410:	lods   eax,DWORD PTR ds:[esi]
  41b411:	pop    ebx
  41b412:	(bad)  
  41b414:	ss pushf 
  41b416:	fild   WORD PTR [ebp-0x77]
  41b419:	ja     0x41b457
  41b41b:	dec    ebp
  41b41c:	dec    ebp
  41b41d:	mov    ah,0xd9
  41b41f:	mov    fs:0xaa6fa1eb,eax
  41b425:	dec    ebx
  41b426:	cmp    ah,bl
  41b428:	xchg   ebx,eax
  41b429:	inc    esp
  41b42a:	hlt    
  41b42b:	jmp    0x41b3c7
  41b42d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b42e:	ret    
  41b42f:	sbb    DWORD PTR [esi+0x12ac9f5b],ebx
  41b435:	mov    edx,0x40b76cb0
  41b43a:	jo     0x41b3c5
  41b43c:	push   ecx
  41b43d:	xchg   ebp,eax
  41b43e:	loope  0x41b40f
  41b440:	div    BYTE PTR [ebp+edi*4+0x64f8e08f]
  41b447:	jmp    0x41b441
  41b449:	popf   
  41b44a:	sahf   
  41b44b:	dec    eax
  41b44c:	xor    al,0xaf
  41b44e:	scas   al,BYTE PTR es:[edi]
  41b44f:	shr    BYTE PTR [ecx-0x6f983d46],0x87
  41b456:	test   al,0xc3
  41b458:	lods   al,BYTE PTR ds:[esi]
  41b459:	dec    ecx
  41b45a:	test   eax,0xb1abbf78
  41b45f:	push   ecx
  41b460:	add    eax,0x1babcbe3
  41b465:	daa    
  41b466:	and    edi,eax
  41b468:	fiadd  WORD PTR ds:0x190c5baf
  41b46e:	imul   BYTE PTR ds:0xf9b6
  41b473:	fisttp DWORD PTR [ebx+0x20]
  41b476:	mov    al,BYTE PTR [ebp+0x6d50fbe5]
  41b47c:	mov    dh,al
  41b47e:	mov    bl,0xa8
  41b480:	sbb    BYTE PTR [esi-0x392d3a5d],0xab
  41b487:	sub    BYTE PTR [esi-0x7195c644],ch
  41b48d:	bound  edx,QWORD PTR [edx+ebp*1+0x34]
  41b491:	pop    edi
  41b492:	xor    DWORD PTR [eax+eiz*1-0x6c],0x64e9e332
  41b49a:	push   ebp
  41b49b:	xor    al,0x58
  41b49d:	cmp    edx,DWORD PTR [ebx-0x4f]
  41b4a0:	sbb    eax,0x7e2e99e7
  41b4a5:	iret   
  41b4a6:	das    
  41b4a7:	cli    
  41b4a8:	jne    0x41b42a
  41b4aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4ab:	ficom  WORD PTR [edx+eax*4+0x5bf00fcd]
  41b4b2:	mov    bl,0x11
  41b4b4:	push   ebp
  41b4b5:	hlt    
  41b4b6:	ds aaa 
  41b4b8:	loop   0x41b450
  41b4ba:	mov    ecx,0xd9f6a2d7
  41b4bf:	rcl    DWORD PTR [eax+eiz*2+0x12],cl
  41b4c3:	addr16 sbb bl,bl
  41b4c6:	arpl   WORD PTR [ebx],ax
  41b4c8:	scas   al,BYTE PTR es:[edi]
  41b4c9:	(bad)  
  41b4ca:	rcr    DWORD PTR [esi+eiz*1],cl
  41b4cd:	out    0x3b,eax
  41b4cf:	mov    ecx,0x41454e6a
  41b4d4:	jge    0x41b54b
  41b4d6:	xor    esp,ebp
  41b4d8:	jnp    0x41b477
  41b4da:	push   esi
  41b4db:	addr16 in eax,dx
  41b4dd:	or     eax,0x1ea786d1
  41b4e2:	mov    ch,0x85
  41b4e4:	adc    eax,DWORD PTR [eax]
  41b4e6:	pop    eax
  41b4e7:	fistp  WORD PTR [esi]
  41b4e9:	sub    eax,0x3688649d
  41b4ee:	cmp    BYTE PTR [ebp+0x353e8ff8],cl
  41b4f4:	icebp  
  41b4f5:	ins    BYTE PTR es:[edi],dx
  41b4f6:	push   cs
  41b4f7:	add    edx,DWORD PTR [edi-0x72617cd3]
  41b4fd:	push   es
  41b4fe:	xlat   BYTE PTR ds:[ebx]
  41b4ff:	sub    al,0xdd
  41b501:	mov    WORD PTR [ebx],?
  41b503:	out    0xe2,al
  41b505:	bound  edx,QWORD PTR [edi]
  41b507:	rcr    DWORD PTR [ebx+0x51df194e],cl
  41b50d:	jb     0x41b4bc
  41b50f:	pop    esp
  41b510:	imul   esp,DWORD PTR [edx-0x3151d251],0x71be1e97
  41b51a:	lea    edx,[ebx+edx*2-0xb]
  41b51e:	push   edx
  41b51f:	cli    
  41b520:	not    DWORD PTR [esi+eiz*4+0x73d3aa5b]
  41b527:	js     0x41b59b
  41b529:	inc    edx
  41b52a:	das    
  41b52b:	xchg   ecx,eax
  41b52c:	retf   0xfd26
  41b52f:	inc    ebp
  41b530:	pop    edx
  41b531:	add    al,0x18
  41b533:	jns    0x41b58e
  41b535:	loopne 0x41b4fc
  41b537:	add    BYTE PTR [esi-0x40ab2b0a],dl
  41b53d:	inc    ecx
  41b53e:	jae    0x41b4c4
  41b540:	sbb    dl,al
  41b542:	cmp    BYTE PTR [ecx-0x5993416e],dh
  41b548:	ja     0x41b524
  41b54a:	pop    edi
  41b54b:	test   DWORD PTR [ebx],ebx
  41b54d:	jp     0x41b4d4
  41b54f:	into   
  41b550:	sub    ch,al
  41b552:	retf   0xd433
  41b555:	int    0xdd
  41b557:	xor    al,0x7c
  41b559:	mov    ds:0x63c384a9,al
  41b55e:	mov    bh,0xe9
  41b560:	and    ecx,esp
  41b562:	cs add al,0x92
  41b565:	lahf   
  41b566:	ror    BYTE PTR [eax],1
  41b568:	mov    ds:0x2211c25,al
  41b56d:	dec    ebp
  41b56e:	lahf   
  41b56f:	sbb    ch,BYTE PTR [ebx]
  41b571:	fild   QWORD PTR [eax+0x71]
  41b574:	pop    esi
  41b575:	das    
  41b576:	push   ecx
  41b577:	pusha  
  41b578:	push   cs
  41b579:	js     0x41b59d
  41b57b:	push   esi
  41b57c:	jmp    0x41b556
  41b57e:	fst    QWORD PTR [edi+ecx*8+0x3b]
  41b582:	or     DWORD PTR [edi],edi
  41b584:	inc    edx
  41b585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b586:	jbe    0x41b5bb
  41b588:	shr    DWORD PTR [ebp+edx*2-0x54c98e2c],0xa0
  41b590:	pop    esi
  41b591:	jmp    0xc8583f99
  41b596:	retf   0xb55a
  41b599:	retf   0x2335
  41b59c:	scas   eax,DWORD PTR es:[edi]
  41b59d:	sbb    edi,esi
  41b59f:	push   es
  41b5a0:	sub    ah,BYTE PTR [ebp+0x14eac767]
  41b5a6:	in     eax,dx
  41b5a7:	cli    
  41b5a8:	jge    0x41b623
  41b5aa:	stc    
  41b5ab:	rcl    DWORD PTR [esi-0x4f11506b],cl
  41b5b1:	push   ds
  41b5b2:	adc    ch,BYTE PTR [esi+0xb1d8cf9]
  41b5b8:	and    DWORD PTR [ebx],edx
  41b5ba:	aad    0xee
  41b5bc:	sbb    dl,cl
  41b5be:	mov    al,ds:0xc86e7640
  41b5c3:	div    esp
  41b5c5:	add    al,0x41
  41b5c7:	sahf   
  41b5c8:	sub    esp,DWORD PTR [ecx-0x56b05285]
  41b5ce:	jecxz  0x41b631
  41b5d0:	adc    bh,BYTE PTR [edx]
  41b5d2:	inc    eax
  41b5d3:	xchg   edi,eax
  41b5d4:	mov    ebx,0x7b9a750c
  41b5d9:	jmp    FWORD PTR [esi-0x69]
  41b5dc:	mov    al,ds:0xc3e7e73a
  41b5e1:	loopne 0x41b599
  41b5e3:	leave  
  41b5e4:	mov    ecx,0x58ce05d8
  41b5e9:	cmp    ebp,DWORD PTR [esi]
  41b5eb:	mov    cl,BYTE PTR [eax]
  41b5ed:	add    edi,ecx
  41b5ef:	mov    cl,0x7f
  41b5f1:	test   esp,ebx
  41b5f3:	jle    0x41b619
  41b5f5:	enter  0x2543,0x15
  41b5f9:	xchg   ecx,eax
  41b5fa:	ret    
  41b5fb:	nop    DWORD PTR [ebx]
  41b5fe:	jb     0x41b66d
  41b600:	in     eax,dx
  41b601:	retf   
  41b602:	add    esi,DWORD PTR [ebp*2+0x28e03464]
  41b609:	jo     0x41b64c
  41b60b:	mov    bh,BYTE PTR [ebx+0x7248baaf]
  41b611:	or     eax,0x95f3df78
  41b616:	fwait
  41b617:	pop    es
  41b618:	sbb    eax,0x11e07e4f
  41b61d:	xlat   BYTE PTR ds:[ebx]
  41b61e:	mov    cl,0xa
  41b620:	jo     0x41b649
  41b622:	fld    QWORD PTR [eax+eiz*2+0xad405a4]
  41b629:	leave  
  41b62a:	mov    esp,gs
  41b62c:	shl    BYTE PTR [esi],0xd9
  41b62f:	or     dl,BYTE PTR [edx+0x7885eeeb]
  41b635:	test   DWORD PTR [ebp+0x2d1243c2],esi
  41b63b:	dec    esp
  41b63c:	push   edi
  41b63d:	mov    esi,0xb31513cf
  41b642:	cld    
  41b643:	mov    edx,DWORD PTR [ebp-0x50]
  41b646:	add    ecx,0x242ebcd
  41b64c:	xor    ecx,edx
  41b64e:	mov    DWORD PTR [ebp-0x50],ecx
  41b651:	mov    ecx,DWORD PTR [ebp+0x8]
  41b654:	mov    edx,DWORD PTR [ebp-0x4c]
  41b657:	add    ecx,edi
  41b659:	and    ecx,edx
  41b65b:	mov    DWORD PTR [ebp-0x4c],ecx
  41b65e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b661:	mov    edx,DWORD PTR [ebp-0x48]
  41b664:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b66b:	mov    DWORD PTR [ebp-0x48],ecx
  41b66e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b671:	mov    edx,0xfa5e1528
  41b676:	sub    edx,ecx
  41b678:	add    edx,DWORD PTR [ebp-0x44]
  41b67b:	mov    DWORD PTR [ebp-0x44],edx
  41b67e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b681:	xor    ecx,eax
  41b683:	add    ecx,esi
  41b685:	jne    0x414b6f
  41b68b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b68e:	xor    ecx,eax
  41b690:	mov    eax,DWORD PTR [ebp+0x10]
  41b693:	add    ecx,esi
  41b695:	mov    DWORD PTR [eax],ecx
  41b697:	pop    edi
  41b698:	pop    esi
  41b699:	pop    ebx
  41b69a:	leave  
  41b69b:	ret    0xc
  41b69e:	push   ebp
  41b69f:	mov    ebp,esp
  41b6a1:	sub    esp,0x78
  41b6a4:	not    DWORD PTR ds:0x4291f7
  41b6aa:	push   esi
  41b6ab:	sub    eax,ecx
  41b6ad:	push   edi
  41b6ae:	sub    eax,esi
  41b6b0:	mov    eax,ds:0x42830b
  41b6b5:	mov    DWORD PTR [ebp-0x24],eax
  41b6b8:	mov    eax,ds:0x42842b
  41b6bd:	inc    ecx
  41b6be:	mov    DWORD PTR [ebp-0x30],eax
  41b6c1:	or     DWORD PTR ds:0x42919f,edi
  41b6c7:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  41b6ce:	movzx  edi,BYTE PTR ds:0x42918f
  41b6d5:	adc    DWORD PTR ds:0x42914b,edi
  41b6db:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b6e2:	adc    DWORD PTR ds:0x42918f,edx
  41b6e8:	mov    eax,DWORD PTR [ebp-0x10]
  41b6eb:	add    DWORD PTR ds:0x4291f3,ecx
  41b6f1:	mov    ecx,DWORD PTR [ebp-0x10]
  41b6f4:	adc    DWORD PTR ds:0x42915f,0x287e
  41b6fe:	sub    eax,ecx
  41b700:	adc    esi,esi
  41b702:	mov    DWORD PTR [ebp-0x10],eax
  41b705:	xor    DWORD PTR [ebp-0x10],0xf89cb5a1
  41b70c:	xor    DWORD PTR ds:0x4291ab,0x51ed
  41b716:	mov    eax,DWORD PTR [ebp-0x18]
  41b719:	and    DWORD PTR ds:0x4291a3,0x0
  41b723:	mov    edi,DWORD PTR ds:0x4291a3
  41b729:	inc    edi
  41b72a:	mov    DWORD PTR ds:0x4291a3,edi
  41b730:	cmp    DWORD PTR ds:0x4291a3,0x1b
  41b737:	jle    0x41b760
  41b73d:	jmp    0x41b753
  41b742:	push   0x4280d6
  41b747:	push   DWORD PTR [ebp-0x18]
  41b74a:	push   DWORD PTR [ebp-0x14]
  41b74d:	call   DWORD PTR ds:0x42a87f
  41b753:	cmp    DWORD PTR ds:0x4291a3,0x12
  41b75a:	jb     0x41b723
  41b760:	mov    ecx,DWORD PTR [ebp-0x18]
  41b763:	sub    eax,ecx
  41b765:	mov    DWORD PTR [ebp-0x18],eax
  41b768:	or     DWORD PTR [ebp-0x18],0xf89f05a1
  41b76f:	mov    eax,DWORD PTR [ebp-0xc]
  41b772:	and    DWORD PTR ds:0x42919f,0x1b88
  41b77c:	mov    ecx,DWORD PTR [ebp-0xc]
  41b77f:	sub    eax,ecx
  41b781:	and    DWORD PTR ds:0x429173,0x0
  41b78b:	mov    ecx,DWORD PTR ds:0x429173
  41b791:	inc    ecx
  41b792:	mov    DWORD PTR ds:0x429173,ecx
  41b798:	cmp    DWORD PTR ds:0x429173,0x1b
  41b79f:	jg     0x41b7c2
  41b7a5:	jmp    0x41b7b5
  41b7aa:	push   0x3a78
  41b7af:	call   DWORD PTR ds:0x42a883
  41b7b5:	cmp    DWORD PTR ds:0x429173,0x15
  41b7bc:	jb     0x41b78b
  41b7c2:	mov    DWORD PTR [ebp-0xc],eax
  41b7c5:	xor    DWORD PTR ds:0x4291a7,0x3902
  41b7cf:	or     DWORD PTR [ebp-0xc],0xf89c85e1
  41b7d6:	mov    eax,DWORD PTR [ebp-0x1c]
  41b7d9:	and    DWORD PTR ds:0x4291f7,0x5581
  41b7e3:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b7e6:	and    DWORD PTR ds:0x42914b,0x0
  41b7f0:	mov    esi,DWORD PTR ds:0x42914b
  41b7f6:	inc    esi
  41b7f7:	mov    DWORD PTR ds:0x42914b,esi
  41b7fd:	cmp    DWORD PTR ds:0x42914b,0xc
  41b804:	jg     0x41b848
  41b80a:	jmp    0x41b821
  41b80f:	push   0x428010
  41b814:	push   0x0
  41b816:	push   0x6059
  41b81b:	call   DWORD PTR ds:0x42a887
  41b821:	cmp    DWORD PTR ds:0x42914b,0xb
  41b828:	jne    0x41b83b
  41b82e:	mov    esi,DWORD PTR ds:0x42914b
  41b834:	inc    esi
  41b835:	mov    DWORD PTR ds:0x42914b,esi
  41b83b:	cmp    DWORD PTR ds:0x42914b,0x13
  41b842:	jb     0x41b7f0
  41b848:	sub    eax,ecx
  41b84a:	mov    DWORD PTR ds:0x4291e7,0x17
  41b854:	cmp    DWORD PTR ds:0x4291e7,0x0
  41b85b:	je     0x41b88b
  41b861:	cmp    DWORD PTR ds:0x4291e7,0x22
  41b868:	jbe    0x41b88b
  41b86e:	jmp    0x41b879
  41b873:	call   DWORD PTR ds:0x42a88b
  41b879:	mov    edi,DWORD PTR ds:0x4291e7
  41b87f:	dec    edi
  41b880:	mov    DWORD PTR ds:0x4291e7,edi
  41b886:	jmp    0x41b854
  41b88b:	mov    DWORD PTR [ebp-0x1c],eax
  41b88e:	or     DWORD PTR [ebp-0x1c],0xf89c8581
  41b895:	add    eax,eax
  41b897:	mov    eax,DWORD PTR [ebp-0x20]
  41b89a:	mov    ecx,DWORD PTR [ebp-0x20]
  41b89d:	sub    eax,ecx
  41b89f:	and    DWORD PTR ds:0x4291b3,0x0
  41b8a9:	jmp    0x41b8bb
  41b8ae:	mov    esi,DWORD PTR ds:0x4291b3
  41b8b4:	inc    esi
  41b8b5:	mov    DWORD PTR ds:0x4291b3,esi
  41b8bb:	cmp    DWORD PTR ds:0x4291b3,0x1e
  41b8c2:	jae    0x41b8ef
  41b8c8:	cmp    DWORD PTR ds:0x4291b3,0x28
  41b8cf:	jle    0x41b8ef
  41b8d5:	jmp    0x41b8ea
  41b8da:	push   0x4291c7
  41b8df:	push   0x428047
  41b8e4:	call   DWORD PTR ds:0x42a88f
  41b8ea:	jmp    0x41b8ae
  41b8ef:	mov    DWORD PTR [ebp-0x20],eax
  41b8f2:	mov    eax,DWORD PTR [ebp-0x2c]
  41b8f5:	mov    ecx,DWORD PTR [ebp-0x20]
  41b8f8:	neg    edi
  41b8fa:	mov    esi,0x75108ac
  41b8ff:	xor    eax,esi
  41b901:	mov    edi,0x3272f3
  41b906:	add    eax,edi
  41b908:	or     eax,ecx
  41b90a:	mov    DWORD PTR [ebp-0x20],eax
  41b90d:	mov    eax,DWORD PTR [ebp-0x4]
  41b910:	mov    ecx,DWORD PTR [ebp-0x4]
  41b913:	sub    eax,ecx
  41b915:	mov    DWORD PTR [ebp-0x4],eax
  41b918:	or     DWORD PTR [ebp-0x4],0xf89c85be
  41b91f:	mov    eax,DWORD PTR [ebp-0xc]
  41b922:	xor    eax,esi
  41b924:	add    eax,edi
  41b926:	push   eax
  41b927:	mov    eax,DWORD PTR [ebp-0x10]
  41b92a:	xor    eax,esi
  41b92c:	add    eax,edi
  41b92e:	push   eax
  41b92f:	mov    eax,DWORD PTR [ebp-0x4]
  41b932:	xor    eax,esi
  41b934:	add    eax,edi
  41b936:	push   eax
  41b937:	lea    eax,[ebp-0x78]
  41b93a:	push   eax
  41b93b:	push   DWORD PTR [ebp-0x2c]
  41b93e:	push   DWORD PTR [ebp-0x28]
  41b941:	call   0x411b80
  41b946:	test   eax,eax
  41b948:	je     0x41b976
  41b94e:	lea    eax,[ebp-0x78]
  41b951:	push   eax
  41b952:	mov    eax,DWORD PTR [ebp-0x28]
  41b955:	xor    eax,esi
  41b957:	add    eax,edi
  41b959:	push   eax
  41b95a:	mov    eax,DWORD PTR [ebp-0x24]
  41b95d:	add    eax,0xaa
  41b962:	push   eax
  41b963:	mov    eax,DWORD PTR [ebp-0x24]
  41b966:	mov    eax,DWORD PTR [eax+0x198]
  41b96c:	push   DWORD PTR [eax]
  41b96e:	call   0x4085e5
  41b973:	mov    DWORD PTR [ebp-0x14],eax
  41b976:	mov    ecx,DWORD PTR ds:0x428403
  41b97c:	lea    eax,[ebp+0x4]
  41b97f:	mov    DWORD PTR [ecx*4+0x4283fb],eax
  41b986:	inc    DWORD PTR ds:0x428403
  41b98c:	mov    eax,DWORD PTR [ebp-0x14]
  41b98f:	test   eax,eax
  41b991:	je     0x41b9f9
  41b997:	lea    eax,[ebp-0x8]
  41b99a:	mov    DWORD PTR [ebp-0x34],eax
  41b99d:	mov    eax,DWORD PTR [ebp-0x30]
  41b9a0:	mov    DWORD PTR [ebp-0x8],eax
  41b9a3:	mov    eax,DWORD PTR [ebp-0x8]
  41b9a6:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9a9:	sub    eax,ecx
  41b9ab:	mov    DWORD PTR [ebp-0x8],eax
  41b9ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41b9b1:	xor    ecx,esi
  41b9b3:	mov    eax,0xffcd8d0d
  41b9b8:	sub    eax,ecx
  41b9ba:	add    DWORD PTR [ebp-0x8],eax
  41b9bd:	mov    eax,DWORD PTR [ebp-0x8]
  41b9c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9c3:	mov    DWORD PTR [ecx+0x1],eax
  41b9c6:	mov    eax,DWORD PTR [ebp-0x14]
  41b9c9:	push   DWORD PTR [ebp-0x24]
  41b9cc:	mov    BYTE PTR [eax],0xe9
  41b9cf:	mov    eax,ds:0x428187
  41b9d4:	push   DWORD PTR [eax]
  41b9d6:	push   DWORD PTR ds:0x4283eb
  41b9dc:	push   DWORD PTR ds:0x42818f
  41b9e2:	push   DWORD PTR ds:0x4283cb
  41b9e8:	push   DWORD PTR ds:0x428f4f
  41b9ee:	push   DWORD PTR [ebp-0x28]
  41b9f1:	push   DWORD PTR [ebp-0x2c]
  41b9f4:	mov    eax,DWORD PTR [ebp-0x14]
  41b9f7:	call   eax
  41b9f9:	pop    edi
  41b9fa:	pop    esi
  41b9fb:	leave  
  41b9fc:	ret    
  41b9fd:	push   ebp
  41b9fe:	mov    ebp,esp
  41ba00:	sub    esp,0x1c
  41ba03:	adc    DWORD PTR ds:0x4291bf,0x12a2
  41ba0d:	mov    DWORD PTR [ebp-0x10],0xf89f85a1
  41ba14:	sub    DWORD PTR ds:0x4291b3,0x1e28
  41ba1e:	lea    eax,[ebp+0x14]
  41ba21:	movzx  edx,BYTE PTR ds:0x4291c7
  41ba28:	sbb    edx,DWORD PTR ds:0x4291ef
  41ba2e:	mov    DWORD PTR ds:0x4291c7,edx
  41ba34:	mov    DWORD PTR [ebp-0x4],eax
  41ba37:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  41ba3e:	and    DWORD PTR ds:0x4291a3,0x0
  41ba48:	jmp    0x41ba5a
  41ba4d:	mov    edx,DWORD PTR ds:0x4291a3
  41ba53:	inc    edx
  41ba54:	mov    DWORD PTR ds:0x4291a3,edx
  41ba5a:	cmp    DWORD PTR ds:0x4291a3,0x1c
  41ba61:	jae    0x41ba87
  41ba67:	cmp    DWORD PTR ds:0x4291a3,0x2a
  41ba6e:	jb     0x41ba87
  41ba74:	jmp    0x41ba82
  41ba79:	push   DWORD PTR [ebp-0x10]
  41ba7c:	call   DWORD PTR ds:0x42a893
  41ba82:	jmp    0x41ba4d
  41ba87:	lea    eax,[ebp-0xc]
  41ba8a:	add    DWORD PTR ds:0x4291d7,ecx
  41ba90:	mov    DWORD PTR [ebp-0x14],eax
  41ba93:	xor    ecx,eax
  41ba95:	mov    eax,DWORD PTR [ebp-0xc]
  41ba98:	mov    ecx,DWORD PTR ds:0x42921f
  41ba9e:	mov    edx,DWORD PTR ds:0x4298fb
  41baa4:	sub    edx,ecx
  41baa6:	xor    ecx,DWORD PTR [ecx+edx*1]
  41baa9:	mov    edx,DWORD PTR [ebp-0x14]
  41baac:	adc    ecx,0x3c0d
  41bab2:	mov    ecx,0x75108ac
  41bab7:	adc    DWORD PTR ds:0x4291eb,0xbc
  41bac1:	xor    eax,ecx
  41bac3:	or     DWORD PTR ds:0x4291eb,0x4291d3
  41bacd:	add    eax,0x3272f3
  41bad2:	xor    DWORD PTR ds:0x4291db,0x429193
  41badc:	mov    DWORD PTR [edx],eax
  41bade:	and    DWORD PTR ds:0x429157,0x0
  41bae8:	xor    edx,edx
  41baea:	add    edx,DWORD PTR ds:0x429157
  41baf0:	inc    edx
  41baf1:	mov    DWORD PTR ds:0x429157,edx
  41baf7:	cmp    DWORD PTR ds:0x429157,0x2c
  41bafe:	jge    0x41bb29
  41bb04:	jmp    0x41bb1c
  41bb09:	push   0x4291c7
  41bb0e:	push   0x4291db
  41bb13:	push   DWORD PTR [ebp-0x20]
  41bb16:	call   DWORD PTR ds:0x42a89b
  41bb1c:	cmp    DWORD PTR ds:0x429157,0x1d
  41bb23:	jb     0x41bae8
  41bb29:	mov    eax,ds:0x428183
  41bb2e:	mov    edx,DWORD PTR [ebp-0x4]
  41bb31:	mov    eax,DWORD PTR [eax]
  41bb33:	add    eax,DWORD PTR [edx]
  41bb35:	mov    DWORD PTR ds:0x4291e7,0x17
  41bb3f:	cmp    DWORD PTR ds:0x4291e7,0x0
  41bb46:	je     0x41bb7d
  41bb4c:	cmp    DWORD PTR ds:0x4291e7,0x22
  41bb53:	ja     0x41bb7d
  41bb59:	jmp    0x41bb69
  41bb5e:	push   0x40e7
  41bb63:	call   DWORD PTR ds:0x42a863
  41bb69:	xor    edx,edx
  41bb6b:	or     edx,DWORD PTR ds:0x4291e7
  41bb71:	dec    edx
  41bb72:	mov    DWORD PTR ds:0x4291e7,edx
  41bb78:	jmp    0x41bb3f
  41bb7d:	push   esi
  41bb7e:	sub    edx,0x5425
  41bb84:	mov    DWORD PTR [ebp-0x8],eax
  41bb87:	mov    edx,DWORD PTR [ebp+0x8]
  41bb8a:	mov    eax,ds:0x42830b
  41bb8f:	mov    esi,DWORD PTR ds:0x429cdf
  41bb95:	mov    esi,DWORD PTR [esi]
  41bb97:	adc    DWORD PTR ds:0x42919f,esi
  41bb9d:	mov    eax,DWORD PTR [eax+0x198]
  41bba3:	xor    edx,ecx
  41bba5:	and    DWORD PTR ds:0x4291cf,ecx
  41bbab:	mov    esi,0x3272f3
  41bbb0:	add    edx,esi
  41bbb2:	mov    DWORD PTR ds:0x4291c7,0x7ba3
  41bbbc:	cmp    DWORD PTR [eax],edx
  41bbbe:	mov    DWORD PTR ds:0x4291df,0x7d4d
  41bbc8:	je     0x41bbdb
  41bbce:	not    DWORD PTR ds:0x42917b
  41bbd4:	mov    eax,DWORD PTR [eax]
  41bbd6:	jmp    0x4207f9
  41bbdb:	mov    eax,DWORD PTR [ebp+0x18]
  41bbde:	xor    DWORD PTR ds:0x429183,0x42919f
  41bbe8:	xor    eax,ecx
  41bbea:	push   ebx
  41bbeb:	add    eax,esi
  41bbed:	xor    DWORD PTR ds:0x429197,edi
  41bbf3:	xor    edx,edx
  41bbf5:	sub    DWORD PTR ds:0x4291e3,edi
  41bbfb:	mov    ebx,0xfabdbed6
  41bc00:	add    eax,ebx
  41bc02:	mov    DWORD PTR ds:0x4291cb,0x2663
  41bc0c:	push   edi
  41bc0d:	adc    edx,0xffffffff
  41bc10:	and    DWORD PTR ds:0x4291a3,0x0
  41bc1a:	jmp    0x41bc2e
  41bc1f:	xor    edi,edi
  41bc21:	xor    edi,DWORD PTR ds:0x4291a3
  41bc27:	inc    edi
  41bc28:	mov    DWORD PTR ds:0x4291a3,edi
  41bc2e:	cmp    DWORD PTR ds:0x4291a3,0x1f
  41bc35:	jae    0x41bc68
  41bc3b:	cmp    DWORD PTR ds:0x4291a3,0x22
  41bc42:	jl     0x41bc68
  41bc48:	jmp    0x41bc63
  41bc4d:	push   DWORD PTR [ebp-0x24]
  41bc50:	push   0x42810e
  41bc55:	push   0x42812a
  41bc5a:	push   DWORD PTR [ebp-0x1c]
  41bc5d:	call   DWORD PTR ds:0x42a86b
  41bc63:	jmp    0x41bc1f
  41bc68:	mov    edi,0x8a29a13f
  41bc6d:	xor    eax,edi
  41bc6f:	sub    DWORD PTR ds:0x429197,0x48a0
  41bc79:	xor    edx,0x0
  41bc7c:	mov    DWORD PTR ds:0x42919f,0x3301
  41bc86:	cmp    eax,0x70941fe9
  41bc8b:	mov    DWORD PTR ds:0x429167,0x2e01
  41bc95:	jne    0x41bcc2
  41bc9b:	mov    DWORD PTR ds:0x4291a3,0x73ae
  41bca5:	cmp    edx,0xffffffff
  41bca8:	jne    0x41bcc2
  41bcae:	push   0xf89c85a2
  41bcb3:	mov    DWORD PTR ds:0x4291af,0x3feb
  41bcbd:	jmp    0x4207e6
  41bcc2:	mov    eax,DWORD PTR [ebp+0x18]
  41bcc5:	xor    eax,ecx
  41bcc7:	adc    DWORD PTR ds:0x42916b,0x4291af
  41bcd1:	add    eax,esi
  41bcd3:	sub    DWORD PTR ds:0x429163,0x429173
  41bcdd:	xor    edx,edx
  41bcdf:	add    eax,ebx
  41bce1:	mov    DWORD PTR ds:0x429163,0x4b51
  41bceb:	adc    edx,0xffffffff
  41bcee:	sub    DWORD PTR ds:0x4291af,0x6866
  41bcf8:	xor    eax,edi
  41bcfa:	or     DWORD PTR ds:0x42914f,0x4291db
  41bd04:	xor    edx,0x0
  41bd07:	mov    DWORD PTR ds:0x4291eb,0x1dc4
  41bd11:	cmp    eax,0x70941fe7
  41bd16:	mov    DWORD PTR ds:0x429153,0x3724
  41bd20:	jne    0x4207d3
  41bd26:	cmp    edx,0xffffffff
  41bd29:	mov    DWORD PTR ds:0x4291ef,0x5140
  41bd33:	jne    0x4207d3
  41bd39:	add    DWORD PTR ds:0x429193,0x7d28
  41bd43:	mov    eax,DWORD PTR [ebp+0x10]
  41bd46:	mov    DWORD PTR ds:0x42916b,0x1b
  41bd50:	cmp    DWORD PTR ds:0x42916b,0x0
  41bd57:	je     0x41bd93
  41bd5d:	cmp    DWORD PTR ds:0x42916b,0x1d
  41bd64:	jl     0x41bd93
  41bd6a:	jmp    0x41bd7f
  41bd6f:	push   0x2cfc
  41bd74:	push   0x400000
  41bd79:	call   DWORD PTR ds:0x42a86f
  41bd7f:	xor    edx,edx
  41bd81:	xor    edx,DWORD PTR ds:0x42916b
  41bd87:	dec    edx
  41bd88:	mov    DWORD PTR ds:0x42916b,edx
  41bd8e:	jmp    0x41bd50
  41bd93:	xor    eax,ecx
  41bd95:	add    eax,esi
  41bd97:	mov    DWORD PTR [ebp-0x18],eax
  41bd9a:	sub    DWORD PTR ds:0x42918f,0x3e4b
  41bda4:	mov    eax,DWORD PTR [ebp+0xc]
  41bda7:	and    DWORD PTR ds:0x429183,0x0
  41bdb1:	jmp    0x41bdc5
  41bdb6:	xor    edx,edx
  41bdb8:	add    edx,DWORD PTR ds:0x429183
  41bdbe:	inc    edx
  41bdbf:	mov    DWORD PTR ds:0x429183,edx
  41bdc5:	cmp    DWORD PTR ds:0x429183,0x19
  41bdcc:	jae    0x41bdf4
  41bdd2:	cmp    DWORD PTR ds:0x429183,0x28
  41bdd9:	jbe    0x41bdf4
  41bddf:	jmp    0x41bdef
  41bde4:	push   0x429193
  41bde9:	call   DWORD PTR ds:0x42a873
  41bdef:	jmp    0x41bdb6
  41bdf4:	mov    edx,DWORD PTR [ebp-0x8]
  41bdf7:	mov    DWORD PTR ds:0x4291ab,0x2654
  41be01:	xor    eax,ecx
  41be03:	add    eax,esi
  41be05:	adc    DWORD PTR ds:0x4291e7,0x4291db
  41be0f:	imul   eax,DWORD PTR [edx]
  41be12:	mov    edx,DWORD PTR [ebp+0x8]
  41be15:	or     DWORD PTR ds:0x42914b,0x4291d3
  41be1f:	xor    edx,ecx
  41be21:	add    edx,esi
  41be23:	mov    DWORD PTR ds:0x4291e7,0x151c
  41be2d:	cmp    edx,eax
  41be2f:	mov    eax,DWORD PTR [ebp-0x4]
  41be32:	je     0x41beca
  41be38:	mov    DWORD PTR ds:0x429163,0x16
  41be42:	cmp    DWORD PTR ds:0x429163,0x0
  41be49:	je     0x41be83
  41be4f:	cmp    DWORD PTR ds:0x429163,0x1a
  41be56:	ja     0x41be83
  41be5c:	jmp    0x41be71
  41be61:	push   0x4e27
  41be66:	push   0x4280a5
  41be6b:	call   DWORD PTR ds:0x42a877
  41be71:	mov    edx,DWORD PTR ds:0x429163
  41be77:	dec    edx
  41be78:	mov    DWORD PTR ds:0x429163,edx
  41be7e:	jmp    0x41be42
  41be83:	mov    edx,DWORD PTR [ebp-0x18]
  41be86:	or     DWORD PTR ds:0x42917f,0x4f4
  41be90:	add    DWORD PTR [eax],edx
  41be92:	and    eax,0x7343
  41be97:	mov    eax,DWORD PTR [ebp-0x4]
  41be9a:	mov    edx,DWORD PTR [ebp+0xc]
  41be9d:	xor    edx,ecx
  41be9f:	add    edx,esi
  41bea1:	imul   edx,DWORD PTR [eax]
  41bea4:	sbb    DWORD PTR ds:0x429183,0x4291b3
  41beae:	mov    DWORD PTR [eax],edx
  41beb0:	mov    eax,DWORD PTR [ebp-0x4]
  41beb3:	mov    DWORD PTR [ebp-0x1c],eax
  41beb6:	mov    eax,DWORD PTR [ebp+0x10]
  41beb9:	xor    eax,ecx
  41bebb:	mov    edx,0xffcd8d0d
  41bec0:	sub    edx,eax
  41bec2:	mov    eax,DWORD PTR [ebp-0x1c]
  41bec5:	jmp    0x41bee4
  41beca:	mov    edx,DWORD PTR [ebp+0x14]
  41becd:	xor    DWORD PTR [eax],edx
  41becf:	mov    eax,DWORD PTR [ebp-0x4]
  41bed2:	mov    DWORD PTR [ebp-0x1c],eax
  41bed5:	mov    eax,DWORD PTR [ebp+0x10]
  41bed8:	xor    eax,ecx
  41beda:	mov    edx,0xffcd8d0d
  41bedf:	sub    edx,eax
  41bee1:	mov    eax,DWORD PTR [ebp-0x1c]
  41bee4:	add    DWORD PTR [eax],edx
  41bee6:	mov    eax,DWORD PTR [ebp-0x4]
  41bee9:	mov    edx,DWORD PTR [ebp-0x8]
  41beec:	add    edx,DWORD PTR [eax]
  41beee:	mov    DWORD PTR [ebp-0x8],edx
  41bef1:	mov    eax,DWORD PTR [ebp+0xc]
  41bef4:	mov    edx,DWORD PTR [ebp+0xc]
  41bef7:	xor    edx,ecx
  41bef9:	xor    eax,ecx
  41befb:	lea    eax,[eax+edx*1+0x64e5e6]
  41bf02:	mov    edx,DWORD PTR [ebp+0xc]
  41bf05:	xor    edx,ecx
  41bf07:	add    edx,esi
  41bf09:	imul   eax,edx
  41bf0c:	mov    edx,DWORD PTR [ebp+0xc]
  41bf0f:	xor    edx,ecx
  41bf11:	sub    edx,eax
  41bf13:	mov    eax,DWORD PTR [ebp-0x4]
  41bf16:	add    edx,esi
  41bf18:	cmp    DWORD PTR [eax],edx
  41bf1a:	mov    eax,DWORD PTR [ebp-0x4]
  41bf1d:	jg     0x41bf3a
  41bf23:	mov    DWORD PTR [ebp-0x1c],eax
  41bf26:	mov    eax,DWORD PTR [ebp+0x10]
  41bf29:	xor    eax,ecx
  41bf2b:	mov    edx,0xffcd8d0d
  41bf30:	sub    edx,eax
  41bf32:	mov    eax,DWORD PTR [ebp-0x1c]
  41bf35:	jmp    0x41bf41
  41bf3a:	mov    edx,DWORD PTR [ebp+0x10]
  41bf3d:	xor    edx,ecx
  41bf3f:	add    edx,esi
  41bf41:	add    DWORD PTR [eax],edx
  41bf43:	mov    eax,DWORD PTR [ebp-0x8]
  41bf46:	mov    edx,DWORD PTR [ebp-0x10]
  41bf49:	mov    eax,DWORD PTR [eax]
  41bf4b:	xor    edx,ecx
  41bf4d:	add    edx,0x3272f2
  41bf53:	not    edx
  41bf55:	and    eax,edx
  41bf57:	mov    DWORD PTR [ebp-0x4],eax
  41bf5a:	movsx  eax,BYTE PTR [eax+0x1]
  41bf5e:	cdq    
  41bf5f:	add    eax,ebx
  41bf61:	adc    edx,0xffffffff
  41bf64:	jmp    0x41e327
  41bf69:	pop    esi
  41bf6a:	push   0x85807d90
  41bf6f:	xchg   esi,eax
  41bf70:	dec    eax
  41bf71:	add    cl,BYTE PTR [ebx+0x3]
  41bf74:	rcl    DWORD PTR [edx],cl
  41bf76:	inc    eax
  41bf77:	stos   BYTE PTR es:[edi],al
  41bf78:	aas    
  41bf79:	mov    ebx,0xd98382f9
  41bf7e:	pop    esp
  41bf7f:	add    DWORD PTR [ebx-0x16f208f3],0xffffffc6
  41bf86:	stc    
  41bf87:	push   ebx
  41bf88:	int    0xf1
  41bf8a:	(bad)  
  41bf8b:	jmp    0xe81b:0x536d9478
  41bf92:	add    al,0x66
  41bf94:	es sbb ch,ch
  41bf97:	test   al,bh
  41bf99:	adc    ebp,eax
  41bf9b:	jae    0x41bf8f
  41bf9d:	test   eax,0x2ac3651f
  41bfa2:	xchg   esp,eax
  41bfa3:	cli    
  41bfa4:	call   DWORD PTR [edx+0x642bcd00]
  41bfaa:	(bad)  
  41bfab:	enter  0x5be3,0xec
  41bfaf:	aas    
  41bfb0:	xchg   ebx,eax
  41bfb1:	in     al,0xb5
  41bfb3:	imul   esp,esp,0xddb132e3
  41bfb9:	cmp    ah,BYTE PTR [ebx]
  41bfbb:	or     eax,0xb770e164
  41bfc0:	popa   
  41bfc1:	jp     0x41c020
  41bfc3:	dec    ebx
  41bfc4:	call   DWORD PTR [edi+0x146936d0]
  41bfca:	repz pop ecx
  41bfcc:	or     BYTE PTR ds:0x74ca5e84,0x62
  41bfd3:	nop
  41bfd4:	ret    
  41bfd5:	mov    dl,0xcc
  41bfd7:	jl     0x41bf8e
  41bfd9:	pop    eax
  41bfda:	xchg   esi,eax
  41bfdb:	data16 sub cl,BYTE PTR [si]
  41bfdf:	xchg   edi,eax
  41bfe0:	or     eax,0x8659e403
  41bfe5:	cdq    
  41bfe6:	rol    BYTE PTR [ebp-0x11dc9fe1],1
  41bfec:	jecxz  0x41c011
  41bfee:	inc    esi
  41bfef:	ds mov ?,edx
  41bff2:	aas    
  41bff3:	sub    esp,DWORD PTR [edx-0x62f73d92]
  41bff9:	inc    BYTE PTR [esi+0x1e]
  41bffc:	cmp    al,0xac
  41bffe:	ret    0xd581
  41c001:	scas   eax,DWORD PTR es:[edi]
  41c002:	std    
  41c003:	arpl   bx,si
  41c005:	dec    esi
  41c006:	icebp  
  41c007:	retf   0x2754
  41c00a:	add    bh,BYTE PTR [ebx]
  41c00c:	sbb    al,0x82
  41c00e:	iret   
  41c00f:	arpl   cx,ax
  41c011:	adc    al,0xc7
  41c013:	push   ebp
  41c014:	arpl   WORD PTR [ebp+ebp*8+0x3],si
  41c018:	mov    dh,BYTE PTR [ebx+edi*2]
  41c01b:	ret    0xc21f
  41c01e:	mov    esi,DWORD PTR [eax]
  41c020:	in     eax,dx
  41c021:	or     DWORD PTR [ecx-0x5b6ac42f],edx
  41c027:	pop    ds
  41c028:	dec    esi
  41c029:	not    DWORD PTR [ebx]
  41c02b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c02c:	pop    ds
  41c02d:	scas   eax,DWORD PTR es:[edi]
  41c02e:	or     dl,bh
  41c030:	stos   DWORD PTR es:[edi],eax
  41c031:	sbb    DWORD PTR [edi],ebp
  41c033:	mov    esp,0x6b9d8920
  41c038:	addr16 jo 0x41c07f
  41c03b:	jecxz  0x41bfc5
  41c03d:	mov    cl,0xd2
  41c03f:	mov    edi,0x6f164d2d
  41c044:	fsubr  QWORD PTR [ebx+0x34]
  41c047:	dec    ecx
  41c048:	stos   DWORD PTR es:[edi],eax
  41c049:	call   0x2436:0x7cbda057
  41c050:	ret    
  41c051:	lds    ebx,FWORD PTR ds:0xdb2b3da
  41c057:	in     al,dx
  41c058:	jmp    0x41bffc
  41c05a:	retf   0x832
  41c05d:	pop    esp
  41c05e:	aad    0x0
  41c060:	mov    eax,ds:0xcc74176f
  41c065:	inc    ebp
  41c066:	dec    edi
  41c067:	pop    eax
  41c068:	out    0x5b,al
  41c06a:	mov    ebx,0x8c8b9dee
  41c06f:	xchg   ebx,eax
  41c070:	sub    ch,BYTE PTR [eax+0x71d6e2b4]
  41c076:	mov    BYTE PTR [ebp-0x3b],bl
  41c079:	iret   
  41c07a:	dec    ebp
  41c07b:	ss dec ebx
  41c07d:	cs add al,0xd7
  41c080:	jne    0x41c0f9
  41c082:	(bad)  
  41c083:	fwait
  41c084:	pop    eax
  41c085:	cmp    al,dh
  41c087:	iret   
  41c088:	stos   DWORD PTR es:[edi],eax
  41c089:	mov    edx,0xda0e5853
  41c08e:	push   ebp
  41c08f:	pop    edi
  41c090:	xchg   ebp,eax
  41c091:	call   0xc500:0xc0584fe0
  41c098:	cmp    DWORD PTR [eax-0x71a6e6d4],0xa5aa9647
  41c0a2:	hlt    
  41c0a3:	jl     0x41c0ff
  41c0a5:	add    cl,BYTE PTR [esi-0xf]
  41c0a8:	or     DWORD PTR [ecx+ecx*8-0x3dc60994],ecx
  41c0af:	add    BYTE PTR [eax],al
  41c0b1:	inc    esp
  41c0b2:	fstp   DWORD PTR [ecx+0x3a]
  41c0b5:	out    0x5b,eax
  41c0b7:	jnp    0x41c0ec
  41c0b9:	outs   dx,DWORD PTR ds:[esi]
  41c0ba:	dec    ebx
  41c0bb:	push   0xffffffdf
  41c0bd:	call   0x482f:0xec0666ee
  41c0c4:	xlat   BYTE PTR ds:[ebx]
  41c0c5:	imul   esp,DWORD PTR [esi+0x1ce41b6],0xfb7456de
  41c0cf:	xlat   BYTE PTR ds:[ebx]
  41c0d0:	pop    edi
  41c0d1:	mov    dl,0xd8
  41c0d3:	lods   eax,DWORD PTR ds:[esi]
  41c0d4:	cwde   
  41c0d5:	ins    DWORD PTR es:[edi],dx
  41c0d6:	inc    edx
  41c0d7:	loop   0x41c14e
  41c0d9:	outs   dx,BYTE PTR ds:[esi]
  41c0da:	adc    esi,edx
  41c0dc:	pop    esp
  41c0dd:	push   edi
  41c0de:	or     DWORD PTR ds:0x7956508,ebx
  41c0e4:	push   0xffffff9f
  41c0e6:	(bad)  
  41c0e7:	outs   dx,DWORD PTR ds:[esi]
  41c0e8:	icebp  
  41c0e9:	(bad)  
  41c0ea:	pop    esp
  41c0eb:	dec    edx
  41c0ec:	add    eax,DWORD PTR [ecx]
  41c0ee:	cld    
  41c0ef:	retf   
  41c0f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0f1:	(bad)  
  41c0f2:	or     edi,esi
  41c0f4:	inc    esp
  41c0f5:	sub    BYTE PTR [ebx+0x66],ch
  41c0f8:	inc    ebx
  41c0f9:	xchg   ebp,eax
  41c0fa:	mov    cs,WORD PTR [edx]
  41c0fc:	and    DWORD PTR [ebp+0x5a126829],ebp
  41c102:	mov    cl,0x47
  41c104:	lock xchg edi,eax
  41c106:	(bad)  
  41c107:	into   
  41c108:	sbb    eax,esi
  41c10a:	outs   dx,BYTE PTR ds:[esi]
  41c10b:	push   cs
  41c10c:	pop    edx
  41c10d:	(bad)  
  41c10e:	jmp    0x41c167
  41c110:	aas    
  41c111:	mov    ds:0x79075039,al
  41c116:	jp     0x41c149
  41c118:	sbb    BYTE PTR [esi+0x1cc0b4b1],bl
  41c11e:	loope  0x41c0ae
  41c120:	push   es
  41c121:	pop    esi
  41c122:	fs or  eax,0xccc6ae65
  41c128:	out    dx,eax
  41c129:	jle    0x41c101
  41c12b:	les    esp,FWORD PTR [eax]
  41c12d:	mov    cl,0xe6
  41c12f:	cmp    eax,0xe960b6a3
  41c134:	popa   
  41c135:	push   edi
  41c136:	pop    edx
  41c137:	fcomp  DWORD PTR [edx*1+0x182be66c]
  41c13e:	stc    
  41c13f:	jecxz  0x41c0ef
  41c141:	fisub  WORD PTR ds:0x33d19e39
  41c147:	adc    al,0x54
  41c149:	cmp    ebx,DWORD PTR [ebp+ebp*2+0x22]
  41c14d:	cmc    
  41c14e:	out    0x49,al
  41c150:	rol    BYTE PTR [ebx],0x85
  41c153:	mov    ch,0x59
  41c155:	xchg   DWORD PTR [edi+ebp*2-0x459dcc2c],esp
  41c15c:	and    BYTE PTR [ebx-0x94aee49],al
  41c162:	cwde   
  41c163:	xor    dl,BYTE PTR [eax-0x2b52f53]
  41c169:	test   eax,0x3cba6277
  41c16e:	fbstp  TBYTE PTR [ebx-0x47]
  41c171:	mov    BYTE PTR [esi],cl
  41c173:	jns    0x41c1c4
  41c175:	mov    edi,0x6cb99b7b
  41c17a:	retf   0x1198
  41c17d:	iret   
  41c17e:	imul   esp,DWORD PTR [ebx-0x231cf9bf],0x27
  41c185:	mov    ds:0x18aaa748,al
  41c18a:	ins    DWORD PTR es:[edi],dx
  41c18b:	addr16 mov esp,0x5b8962ac
  41c191:	test   esi,0xc74af468
  41c197:	aas    
  41c198:	jecxz  0x41c142
  41c19a:	out    0xef,al
  41c19c:	or     DWORD PTR [esi-0x723ca1a5],eax
  41c1a2:	or     dl,BYTE PTR [esi+0x2aa5390a]
  41c1a8:	push   es
  41c1a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1aa:	mov    al,ds:0x79cfe1a6
  41c1af:	jmp    0x41c1a7
  41c1b1:	pop    ebx
  41c1b2:	push   ebx
  41c1b3:	inc    edi
  41c1b4:	lods   al,BYTE PTR ds:[esi]
  41c1b5:	mov    ebp,0xdebd01c
  41c1ba:	jno    0x41c15d
  41c1bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1bd:	mov    ebx,0xd623500f
  41c1c2:	inc    eax
  41c1c3:	ficom  WORD PTR [eax-0x530fd68d]
  41c1c9:	add    eax,0x50bbf86c
  41c1ce:	fwait
  41c1cf:	cld    
  41c1d0:	xchg   ebx,eax
  41c1d1:	pusha  
  41c1d2:	popf   
  41c1d3:	pushf  
  41c1d4:	pop    es
  41c1d5:	pop    edx
  41c1d6:	xor    al,BYTE PTR [ecx]
  41c1d8:	push   eax
  41c1d9:	or     al,0x87
  41c1db:	mov    cl,0x1c
  41c1dd:	aaa    
  41c1de:	rol    DWORD PTR [ecx+ecx*2+0x13],0xd7
  41c1e3:	add    ebp,DWORD PTR [eax+0x6ce6fec7]
  41c1e9:	push   0xffffff87
  41c1eb:	jae    0x41c1b1
  41c1ed:	push   0xf6ade344
  41c1f2:	pop    ds
  41c1f3:	test   BYTE PTR [eax+0x591613d],dl
  41c1f9:	push   0x4b9cfda6
  41c1fe:	sub    esi,DWORD PTR [ecx-0x3416ba37]
  41c204:	outs   dx,BYTE PTR ds:[esi]
  41c205:	jge    0x41c246
  41c207:	arpl   si,bp
  41c209:	inc    ecx
  41c20a:	fld    st(7)
  41c20c:	stos   DWORD PTR es:[edi],eax
  41c20d:	mov    esi,0x475349b6
  41c212:	add    eax,0x55f50eba
  41c217:	mov    eax,0x1d20372
  41c21c:	mov    BYTE PTR [esi],cl
  41c21e:	cmp    eax,0xfea35971
  41c223:	mov    edi,0xba4f18de
  41c228:	test   DWORD PTR [edi-0x3609630f],0xc77429e3
  41c232:	test   DWORD PTR [eax-0x6f21da74],esp
  41c238:	gs jno 0x41c267
  41c23b:	int3   
  41c23c:	ret    0x3e72
  41c23f:	xchg   ecx,eax
  41c240:	or     esp,DWORD PTR [ecx+ecx*1+0xdc66c98]
  41c247:	retf   0xdbdd
  41c24a:	std    
  41c24b:	pop    edx
  41c24c:	xchg   ecx,eax
  41c24d:	adc    eax,0x21a3d206
  41c252:	mov    ah,0x27
  41c254:	dec    edi
  41c255:	call   0x8f816a0b
  41c25a:	mov    dh,dl
  41c25c:	lea    ecx,[ebx]
  41c25e:	inc    esi
  41c25f:	pop    DWORD PTR [esi+0x528936bb]
  41c265:	in     eax,0x86
  41c267:	popa   
  41c268:	popf   
  41c269:	in     al,dx
  41c26a:	sub    BYTE PTR [ebx-0x77],cl
  41c26d:	ret    
  41c26e:	mov    ebx,0x90965f5d
  41c273:	in     eax,0x42
  41c275:	jl     0x41c204
  41c277:	addr16 push ss
  41c279:	jmp    0x41c2c0
  41c27b:	lock stos DWORD PTR es:[edi],eax
  41c27d:	xchg   BYTE PTR [ebx],dh
  41c27f:	loope  0x41c286
  41c281:	push   cs
  41c282:	push   es
  41c283:	xor    BYTE PTR [ecx+0x3016fa58],ch
  41c289:	popf   
  41c28a:	scas   al,BYTE PTR es:[edi]
  41c28b:	jle    0x41c305
  41c28d:	or     ebx,ebx
  41c28f:	test   al,0x82
  41c291:	or     ebp,DWORD PTR [ebx-0x2f]
  41c294:	jo     0x41c27d
  41c296:	mov    bl,0x27
  41c298:	mov    cl,0x96
  41c29a:	and    BYTE PTR [edx],bh
  41c29c:	arpl   WORD PTR [esi],bp
  41c29e:	sbb    ebx,DWORD PTR [ebx+0x72]
  41c2a1:	sahf   
  41c2a2:	adc    ecx,DWORD PTR [ebp-0x59d2298f]
  41c2a8:	sbb    dh,BYTE PTR [eax]
  41c2aa:	and    eax,0xcfc13c36
  41c2af:	jno    0x41c2e0
  41c2b1:	into   
  41c2b2:	sub    esp,eax
  41c2b4:	iret   
  41c2b5:	jns    0x41c244
  41c2b7:	mov    cl,BYTE PTR [edi-0x6b67cb91]
  41c2bd:	cmp    esi,DWORD PTR [ecx+0x7]
  41c2c0:	cmp    BYTE PTR [esi+0x73],0xbc
  41c2c4:	(bad)  
  41c2c5:	fcmovnbe st,st(4)
  41c2c7:	je     0x41c301
  41c2c9:	cpuid  
  41c2cb:	sbb    eax,0x1e38d3fd
  41c2d0:	dec    ebx
  41c2d1:	loopne 0x41c29d
  41c2d3:	or     DWORD PTR [ebx],esp
  41c2d5:	imul   ebx,DWORD PTR [esi-0x7a],0x41
  41c2d9:	fistp  QWORD PTR [edi-0x8]
  41c2dc:	mov    eax,0x96758ed0
  41c2e1:	fdiv   DWORD PTR cs:[edx+0x45]
  41c2e5:	mov    ecx,0x5bd97e3a
  41c2ea:	add    dl,dh
  41c2ec:	cmc    
  41c2ed:	sbb    al,BYTE PTR [edx+esi*1-0x44]
  41c2f1:	adc    DWORD PTR [ecx-0x249e9613],ebp
  41c2f7:	pop    ebp
  41c2f8:	(bad)  
  41c2f9:	scas   al,BYTE PTR es:[edi]
  41c2fa:	inc    ebx
  41c2fb:	mov    ah,0x32
  41c2fd:	pop    edx
  41c2fe:	shl    BYTE PTR [edi+0x744b8cb3],cl
  41c304:	icebp  
  41c305:	shr    DWORD PTR [eax+0x2ec59e36],0xea
  41c30c:	xor    BYTE PTR [edx-0x4004f5fe],dh
  41c312:	add    DWORD PTR [edi],ebx
  41c314:	cdq    
  41c315:	data16 cmp bh,BYTE PTR [esi+esi*4+0x41166895]
  41c31d:	mov    ah,0xad
  41c31f:	xchg   ebx,eax
  41c320:	lea    edi,[ebx+edi*1+0x40]
  41c324:	outs   dx,DWORD PTR ds:[esi]
  41c325:	in     eax,0xf6
  41c327:	mov    ch,0x8d
  41c329:	inc    ebp
  41c32a:	je     0x41c3a8
  41c32c:	iret   
  41c32d:	sar    DWORD PTR [esi+0xbde19de],1
  41c333:	add    eax,esi
  41c335:	lea    edx,[esi]
  41c337:	sub    DWORD PTR [edi],0xffffffd2
  41c33a:	mov    ebp,0xe467945e
  41c33f:	fneni(8087 only) 
  41c341:	xor    DWORD PTR ds:0xb49be32b,esp
  41c347:	call   0xece3:0xe62e1ccd
  41c34e:	jb     0x41c384
  41c350:	sub    al,0x58
  41c352:	dec    edi
  41c353:	dec    ebx
  41c354:	mov    ebp,0x92387884
  41c359:	mov    ebp,0x83ade071
  41c35e:	sub    DWORD PTR [edi],0xffffff88
  41c361:	adc    al,0xd0
  41c363:	add    BYTE PTR [ebx+0x2d38b4b2],ch
  41c369:	test   eax,0xc59b396a
  41c36e:	mov    cl,0x1a
  41c370:	fbld   TBYTE PTR [edx-0x6a]
  41c373:	loopne 0x41c34e
  41c375:	ror    BYTE PTR [edx],cl
  41c377:	dec    ecx
  41c378:	xor    ah,BYTE PTR [edx+edi*1+0x630f1a6f]
  41c37f:	mov    ebx,0x32e84794
  41c384:	cwde   
  41c385:	daa    
  41c386:	pop    ebp
  41c387:	enter  0x5a5b,0x2f
  41c38b:	mov    ds,WORD PTR [ebx+0x409bae49]
  41c391:	cdq    
  41c392:	jbe    0x41c3f4
  41c394:	adc    DWORD PTR ds:0x94d21180,ebx
  41c39a:	and    dh,ch
  41c39c:	iret   
  41c39d:	frstor [ecx-0x47]
  41c3a0:	call   0x8c53:0x9d636c1a
  41c3a7:	scas   al,BYTE PTR es:[edi]
  41c3a8:	ins    DWORD PTR es:[edi],dx
  41c3a9:	push   ecx
  41c3aa:	cwde   
  41c3ab:	mov    edi,0x2e8ad09a
  41c3b0:	outs   dx,BYTE PTR ds:[esi]
  41c3b1:	loope  0x41c369
  41c3b3:	jg     0x41c401
  41c3b5:	add    edi,DWORD PTR ds:0xdbe9a7f2
  41c3bb:	(bad)  
  41c3bc:	addr16 jp 0x41c3d1
  41c3bf:	pop    eax
  41c3c0:	mov    BYTE PTR [ebx-0x6b],dl
  41c3c3:	adc    cl,ch
  41c3c5:	push   ebp
  41c3c6:	ror    BYTE PTR [edi+0x5b],1
  41c3c9:	inc    BYTE PTR [esi]
  41c3cb:	in     al,0xa6
  41c3cd:	adc    DWORD PTR [edx-0x77152215],ecx
  41c3d3:	dec    esi
  41c3d4:	scas   al,BYTE PTR es:[edi]
  41c3d5:	fistp  WORD PTR [eax]
  41c3d7:	stos   DWORD PTR es:[edi],eax
  41c3d8:	pusha  
  41c3d9:	lea    edi,[edi-0x7f173986]
  41c3df:	dec    esi
  41c3e0:	std    
  41c3e1:	das    
  41c3e2:	sbb    BYTE PTR [eax+0x500a2832],dh
  41c3e8:	(bad)  
  41c3e9:	repnz aaa 
  41c3eb:	xor    cl,BYTE PTR [esi]
  41c3ed:	ins    DWORD PTR es:[edi],dx
  41c3ee:	mov    ?,WORD PTR [edi]
  41c3f0:	dec    edi
  41c3f1:	xor    eax,0x4c8902eb
  41c3f6:	jo     0x41c3c5
  41c3f8:	jmp    0x1b778806
  41c3fd:	rcr    DWORD PTR [edi-0x530f3fd6],cl
  41c403:	push   esi
  41c404:	pop    esp
  41c405:	mov    edx,gs
  41c407:	jge    0x41c418
  41c409:	sbb    eax,0xd977191c
  41c40e:	dec    edi
  41c40f:	les    esp,FWORD PTR [ebx]
  41c411:	mov    dl,0x63
  41c413:	cmp    eax,esi
  41c415:	fs add eax,0x1ee420d8
  41c41b:	dec    esp
  41c41c:	mov    al,ds:0x12f8a45e
  41c421:	in     al,0x9
  41c423:	mov    edi,DWORD PTR [esi+ecx*8+0x72]
  41c427:	fcom   QWORD PTR [ebp+ebx*8+0x4e]
  41c42b:	int    0xd5
  41c42d:	cwde   
  41c42e:	mov    edx,0x69bbc759
  41c433:	cmp    BYTE PTR [edx+0x778e61fb],bh
  41c439:	aad    0x21
  41c43b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c43c:	lea    eax,[esi]
  41c43e:	jae    0x41c46f
  41c440:	adc    al,0x31
  41c442:	push   0xb
  41c444:	(bad)  
  41c445:	aad    0x57
  41c447:	cmp    ah,0xb1
  41c44a:	pop    esp
  41c44b:	and    DWORD PTR [eax+0x9b49ef7],eax
  41c451:	push   edx
  41c452:	outs   dx,DWORD PTR ds:[esi]
  41c453:	loopne 0x41c490
  41c455:	fadd   DWORD PTR [edx]
  41c457:	add    esi,DWORD PTR [esp+eax*8+0x7733af79]
  41c45e:	dec    edi
  41c45f:	ret    0xf9e
  41c462:	cdq    
  41c463:	dec    edi
  41c464:	jl     0x41c442
  41c466:	dec    esp
  41c467:	push   es
  41c468:	sub    ebp,DWORD PTR ds:0xe63663ce
  41c46e:	call   0x7f0f:0x4d95cc90
  41c475:	pop    ebp
  41c476:	jl     0x41c486
  41c478:	mov    ds:0x8ce452ba,al
  41c47d:	test   DWORD PTR [edx],esi
  41c47f:	sbb    ebx,DWORD PTR [edi-0x1a5588ee]
  41c485:	stos   DWORD PTR es:[edi],eax
  41c486:	mov    ds:0xacece741,eax
  41c48b:	(bad)  
  41c48c:	jae    0x41c47a
  41c48e:	int    0xb2
  41c490:	mov    ebx,0xe8252611
  41c495:	push   eax
  41c496:	pusha  
  41c497:	mov    ch,0x9c
  41c499:	out    0x2a,eax
  41c49b:	push   ebx
  41c49c:	fs out 0x41,eax
  41c49f:	fstp   TBYTE PTR [eiz*1-0x111c0b6c]
  41c4a6:	inc    ebp
  41c4a7:	adc    al,BYTE PTR [edi+edi*8]
  41c4aa:	(bad)  
  41c4ac:	fimul  WORD PTR [ebp-0x6443da41]
  41c4b2:	test   al,0x4c
  41c4b4:	add    eax,DWORD PTR [eax]
  41c4b6:	mov    cl,0x2e
  41c4b8:	mov    bh,0x98
  41c4ba:	dec    esp
  41c4bb:	scas   eax,DWORD PTR es:[edi]
  41c4bc:	(bad)  
  41c4bd:	fist   WORD PTR [ebx]
  41c4bf:	call   0x20b:0x72662784
  41c4c6:	mov    BYTE PTR ss:[ebp+0x4d],ah
  41c4ca:	push   ds
  41c4cb:	lea    eax,[ecx-0x1e5b292b]
  41c4d1:	stos   DWORD PTR es:[edi],eax
  41c4d2:	adc    ah,al
  41c4d4:	add    BYTE PTR [edi],bl
  41c4d6:	jmp    0xb019:0xd6190b7c
  41c4dd:	sar    BYTE PTR [eax+eax*2+0x54001fed],0xe9
  41c4e5:	ja     0x41c49d
  41c4e7:	sub    edx,DWORD PTR [eax+eiz*2-0x94e2f66]
  41c4ee:	xchg   ecx,eax
  41c4ef:	jnp    0x41c4b0
  41c4f1:	add    eax,ecx
  41c4f3:	jmp    0x826a6d24
  41c4f8:	(bad)  
  41c4f9:	fld    TBYTE PTR ds:0x2661202e
  41c4ff:	fadd   DWORD PTR [ecx-0x3f]
  41c502:	xor    ebx,DWORD PTR [edx-0x43]
  41c505:	ficom  WORD PTR [ebx-0x5]
  41c508:	pop    ebx
  41c509:	inc    eax
  41c50a:	inc    edi
  41c50b:	fdiv   st(7),st
  41c50d:	clc    
  41c50e:	pop    ds
  41c50f:	push   cs
  41c510:	ret    0xcfec
  41c513:	cmp    eax,0xdb940684
  41c518:	shl    DWORD PTR [ecx],cl
  41c51a:	aaa    
  41c51b:	popa   
  41c51c:	push   es
  41c51d:	mov    al,0x5
  41c51f:	mov    al,ds:0xc05ef063
  41c524:	out    dx,eax
  41c525:	in     al,0x6f
  41c527:	dec    ebp
  41c528:	sub    DWORD PTR ds:0xd70bdfa0,esp
  41c52e:	or     bh,BYTE PTR ds:0x4260f38e
  41c534:	mov    bh,0x27
  41c536:	mov    esp,esp
  41c538:	test   al,0x47
  41c53a:	jmp    0xa249:0x24222a0d
  41c541:	retf   0x5fda
  41c544:	ret    0x253a
  41c547:	clc    
  41c548:	jne    0x41c55b
  41c54a:	adc    al,ah
  41c54c:	xchg   BYTE PTR [edx-0x4067e2a1],ch
  41c552:	jns    0x41c57b
  41c554:	ror    BYTE PTR [ebx],1
  41c556:	cmp    BYTE PTR [edx+0x18],ch
  41c559:	sub    BYTE PTR ds:0xb09bebbe,bl
  41c55f:	das    
  41c560:	std    
  41c561:	fwait
  41c562:	js     0x41c5c0
  41c564:	mov    bh,0x6
  41c566:	pusha  
  41c567:	inc    esp
  41c568:	cli    
  41c569:	out    0x2b,eax
  41c56b:	jg     0x41c52d
  41c56d:	sahf   
  41c56e:	add    eax,0x92aa77cc
  41c573:	sbb    al,0xe0
  41c575:	add    eax,0x36fd8d53
  41c57a:	imul   ebx,edx,0xb7fb8d9d
  41c580:	fsub   st(0),st
  41c582:	sub    cl,BYTE PTR fs:0xfa572dc8
  41c589:	push   es
  41c58a:	test   al,0xe0
  41c58c:	in     al,0xd3
  41c58e:	jmp    0xbdb9:0x96dfcee5
  41c595:	push   0x48e6968c
  41c59a:	aam    0x7d
  41c59c:	sahf   
  41c59d:	jns    0x41c531
  41c59f:	repnz pop eax
  41c5a1:	inc    edi
  41c5a2:	cmp    ebp,DWORD PTR [ebx+0x6c]
  41c5a5:	rol    cl,1
  41c5a7:	lods   eax,DWORD PTR ds:[esi]
  41c5a8:	jp     0x41c5e7
  41c5aa:	in     eax,0x73
  41c5ac:	push   edi
  41c5ad:	xor    al,0x15
  41c5af:	push   esp
  41c5b0:	in     eax,0xc6
  41c5b2:	(bad)  
  41c5b3:	fld    QWORD PTR [esp+ecx*8]
  41c5b6:	js     0x41c60e
  41c5b8:	mov    eax,ds:0x179ff77c
  41c5bd:	test   eax,0x95b324bd
  41c5c2:	jge    0x41c5de
  41c5c4:	scas   eax,DWORD PTR es:[edi]
  41c5c5:	or     al,0x7a
  41c5c7:	icebp  
  41c5c8:	test   al,0x7c
  41c5ca:	add    BYTE PTR [ebx-0x200437aa],0x61
  41c5d1:	popa   
  41c5d2:	jl     0x41c557
  41c5d4:	xor    BYTE PTR [ebp+0x3],0x9b
  41c5d8:	jg     0x41c64e
  41c5da:	xchg   esp,eax
  41c5db:	push   ecx
  41c5dd:	add    ebx,edi
  41c5df:	mov    al,0xa2
  41c5e1:	cwde   
  41c5e2:	push   esp
  41c5e3:	dec    eax
  41c5e4:	add    DWORD PTR [ebx],ebp
  41c5e6:	cmp    BYTE PTR [edi+0x48589742],ah
  41c5ec:	cmp    ah,dh
  41c5ee:	mov    ah,0xb0
  41c5f0:	adc    eax,0xc116baf6
  41c5f5:	push   edx
  41c5f6:	test   BYTE PTR [edx-0x3],ch
  41c5f9:	push   ds
  41c5fa:	shl    BYTE PTR [ecx-0x494a57de],cl
  41c600:	pop    edi
  41c601:	(bad)  
  41c602:	js     0x41c5dd
  41c604:	rcl    BYTE PTR [eax+0x49],1
  41c607:	mov    ds:0x248a117d,al
  41c60c:	(bad)  
  41c60d:	sbb    BYTE PTR [edi+0x3b],ah
  41c610:	inc    ebx
  41c611:	adc    edx,esi
  41c613:	push   0x313d0872
  41c618:	out    0xc,eax
  41c61a:	popa   
  41c61b:	scas   al,BYTE PTR es:[di]
  41c61d:	pushf  
  41c61e:	xchg   ebx,eax
  41c61f:	aaa    
  41c620:	pop    esp
  41c621:	fist   WORD PTR [ebp-0x5]
  41c624:	xchg   esp,eax
  41c625:	pop    es
  41c626:	fist   WORD PTR [ebx]
  41c628:	mov    ebx,ecx
  41c62a:	inc    eax
  41c62b:	popa   
  41c62c:	fwait
  41c62d:	es icebp 
  41c62f:	mul    DWORD PTR [ebp+0x2c]
  41c632:	or     ah,ch
  41c634:	cmp    al,0x2
  41c636:	lds    eax,FWORD PTR [ebx-0x31]
  41c639:	ficom  DWORD PTR ds:0xce994009
  41c63f:	rcl    BYTE PTR ds:0x2ebe7a19,1
  41c645:	dec    ebx
  41c646:	in     al,dx
  41c647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c648:	push   ecx
  41c649:	xchg   ebp,eax
  41c64a:	jne    0x41c5fc
  41c64c:	pop    ds
  41c64d:	pop    ebp
  41c64e:	aas    
  41c64f:	fnsave [ebp+0x43]
  41c652:	dec    ebp
  41c653:	cli    
  41c654:	cmc    
  41c655:	jno    0x41c6b9
  41c657:	jle    0x41c62d
  41c659:	jbe    0x41c647
  41c65b:	push   cs
  41c65c:	in     al,dx
  41c65d:	jmp    0xd78c:0x114dcf33
  41c664:	(bad)  
  41c665:	push   ss
  41c666:	leave  
  41c667:	or     DWORD PTR [eax+0x66e3a846],edi
  41c66d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c66e:	adc    ecx,ebp
  41c670:	pusha  
  41c671:	test   al,0x40
  41c673:	imul   BYTE PTR [ebx]
  41c675:	lods   al,BYTE PTR ds:[esi]
  41c676:	nop
  41c677:	in     eax,dx
  41c678:	inc    ebx
  41c679:	inc    edi
  41c67a:	and    DWORD PTR [edx+0x6f585baf],ebx
  41c680:	outs   dx,DWORD PTR ds:[esi]
  41c681:	mov    gs,WORD PTR [edi-0x3a50987c]
  41c687:	mov    DWORD PTR [ecx-0x7c],edi
  41c68a:	or     BYTE PTR [ecx+eiz*2],cl
  41c68d:	int3   
  41c68e:	xlat   BYTE PTR ds:[ebx]
  41c68f:	leave  
  41c690:	pop    eax
  41c691:	mov    ch,0xef
  41c693:	pop    ebp
  41c694:	adc    eax,0x9c4a659c
  41c699:	fwait
  41c69a:	and    esi,DWORD PTR [ebp-0x330630b0]
  41c6a0:	pop    edx
  41c6a1:	jo     0x41c722
  41c6a3:	push   esp
  41c6a4:	mov    ecx,0x2026b6fc
  41c6a9:	test   DWORD PTR [ebx+esi*8],0x5792e683
  41c6b0:	sub    eax,DWORD PTR [edx]
  41c6b2:	push   esp
  41c6b3:	dec    ebx
  41c6b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6b5:	mov    dl,BYTE PTR [eax+0x1b8d2b60]
  41c6bb:	lods   al,BYTE PTR ds:[esi]
  41c6bc:	aam    0x8c
  41c6be:	test   al,0x2
  41c6c0:	neg    DWORD PTR [edi+0x1a]
  41c6c3:	add    eax,0x72561385
  41c6c8:	push   0xffffffab
  41c6ca:	arpl   WORD PTR [esi-0x3c],bp
  41c6cd:	aad    0x96
  41c6cf:	or     DWORD PTR [eax+0x3814e2dd],ebp
  41c6d5:	adc    BYTE PTR [edx],bl
  41c6d7:	mov    DWORD PTR [edi-0x3],edx
  41c6da:	sub    al,0xcb
  41c6dc:	pusha  
  41c6dd:	in     eax,dx
  41c6de:	inc    esp
  41c6df:	cmp    eax,ecx
  41c6e1:	cmp    BYTE PTR [ebx],dh
  41c6e3:	fdiv   DWORD PTR [edi-0x25ede96f]
  41c6e9:	xchg   esp,eax
  41c6ea:	xor    DWORD PTR [ecx],0x26
  41c6ed:	rcl    BYTE PTR ds:0x20b6e54d,1
  41c6f3:	enter  0x8ee0,0x7c
  41c6f7:	or     BYTE PTR [esi],ah
  41c6f9:	(bad)  
  41c6fb:	repz and al,0x35
  41c6fe:	ins    DWORD PTR es:[edi],dx
  41c6ff:	dec    ebp
  41c700:	mov    edi,0xfce5ab69
  41c705:	pop    esp
  41c706:	jg     0x41c69f
  41c708:	mov    ebp,DWORD PTR [ebp-0x365368dc]
  41c70e:	ficom  DWORD PTR [ebx]
  41c710:	inc    eax
  41c711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c712:	scas   eax,DWORD PTR es:[edi]
  41c713:	push   0x4f
  41c715:	retf   0x6d7d
  41c718:	jle    0x41c6f2
  41c71a:	mov    edx,0x91292a13
  41c71f:	cli    
  41c720:	int3   
  41c721:	enter  0xf235,0x96
  41c725:	adc    BYTE PTR [edx-0x2c8f1783],dl
  41c72b:	mov    ch,0xd1
  41c72d:	add    al,0x55
  41c72f:	out    dx,eax
  41c730:	dec    eax
  41c731:	mov    edi,0xe43e7c0c
  41c736:	xchg   ebp,eax
  41c737:	ins    DWORD PTR es:[edi],dx
  41c738:	aam    0xdc
  41c73a:	enter  0x7be8,0xa2
  41c73e:	cmp    eax,0x5615b848
  41c743:	in     eax,dx
  41c744:	mov    esi,0x7491b765
  41c749:	xchg   DWORD PTR [esi+0x14],eax
  41c74c:	xlat   BYTE PTR ds:[ebx]
  41c74d:	cmp    al,0xb3
  41c74f:	push   esi
  41c750:	jne    0x41c78a
  41c752:	inc    edi
  41c753:	push   ss
  41c754:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c755:	adc    DWORD PTR [ebx],eax
  41c757:	add    DWORD PTR [edi-0x12],ebx
  41c75a:	popf   
  41c75b:	adc    al,BYTE PTR [edx+0x48]
  41c75e:	lock add eax,0x4e2c3733
  41c764:	cli    
  41c765:	lahf   
  41c766:	scas   al,BYTE PTR es:[edi]
  41c767:	pop    ecx
  41c768:	in     eax,dx
  41c769:	push   es
  41c76a:	lahf   
  41c76b:	in     eax,dx
  41c76c:	dec    ebp
  41c76d:	push   es
  41c76e:	push   ds
  41c76f:	push   ebx
  41c770:	ins    BYTE PTR es:[edi],dx
  41c771:	xchg   BYTE PTR [ebx],al
  41c773:	sub    edi,DWORD PTR [edi]
  41c775:	ja     0x41c786
  41c777:	add    BYTE PTR [ebx],ah
  41c779:	xor    bl,BYTE PTR [edi+0x64f31c1b]
  41c77f:	dec    ebp
  41c780:	xchg   ecx,eax
  41c781:	sbb    BYTE PTR [ebx],dh
  41c783:	mov    ?,WORD PTR [edi]
  41c785:	aad    0x4a
  41c787:	pop    eax
  41c788:	int    0xed
  41c78a:	push   edx
  41c78b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c78c:	add    al,0x72
  41c78e:	test   al,0xa6
  41c790:	cmp    edx,DWORD PTR [esi-0x1a]
  41c793:	popa   
  41c794:	in     al,dx
  41c795:	mov    edi,0x38277c51
  41c79a:	xchg   BYTE PTR [esi],al
  41c79c:	dec    edi
  41c79d:	push   eax
  41c79e:	push   edx
  41c79f:	addr16 int3 
  41c7a1:	pusha  
  41c7a2:	mov    bl,0xd6
  41c7a4:	test   eax,0x7410ed14
  41c7a9:	imul   DWORD PTR [edi+0x78]
  41c7ac:	cmc    
  41c7ad:	outs   dx,DWORD PTR ds:[esi]
  41c7ae:	ficomp DWORD PTR [edi+ebx*2]
  41c7b1:	hlt    
  41c7b2:	mov    ebp,esp
  41c7b4:	push   ds
  41c7b5:	cmp    al,0xd0
  41c7b7:	or     dh,BYTE PTR [eax-0xea8b6c7]
  41c7bd:	pop    edi
  41c7be:	xor    al,ah
  41c7c0:	mov    bl,0xcf
  41c7c2:	sbb    ah,BYTE PTR [edx+0x5d]
  41c7c5:	adc    eax,0x395a2b4b
  41c7ca:	test   eax,0x45127dc9
  41c7cf:	mov    eax,ds:0x740e6ffc
  41c7d5:	ss retf 
  41c7d7:	scas   al,BYTE PTR es:[edi]
  41c7d8:	scas   eax,DWORD PTR es:[edi]
  41c7d9:	jmp    0x41c782
  41c7db:	cmp    edi,DWORD PTR [ecx-0x4909818f]
  41c7e1:	inc    edi
  41c7e2:	cld    
  41c7e3:	retf   0x2735
  41c7e6:	push   0xffffffe6
  41c7e8:	rcl    BYTE PTR [ebp-0x58],1
  41c7eb:	sbb    dl,BYTE PTR [edi+edi*2-0x2105b163]
  41c7f2:	mov    edi,0xd5f87cc3
  41c7f7:	mov    eax,cs
  41c7f9:	xchg   DWORD PTR [bp+si+0x7a91],ecx
  41c7fe:	loope  0x41c838
  41c800:	(bad)  
  41c801:	mov    esp,0xfb626a5e
  41c806:	inc    ebp
  41c807:	mov    ebx,DWORD PTR [ebx+0x4d5ab9b3]
  41c80d:	ret    0x2094
  41c810:	and    DWORD PTR [ecx-0x27568cb6],eax
  41c816:	or     cl,al
  41c818:	jecxz  0x41c812
  41c81a:	xor    al,BYTE PTR [ecx]
  41c81c:	xchg   esp,eax
  41c81d:	cdq    
  41c81e:	pop    ebx
  41c81f:	mov    al,ds:0x69bd1478
  41c824:	push   ecx
  41c825:	dec    edi
  41c826:	outs   dx,BYTE PTR ds:[esi]
  41c827:	scas   eax,DWORD PTR es:[edi]
  41c828:	mov    ebp,DWORD PTR [eax]
  41c82a:	xchg   BYTE PTR [esi-0xb146fc2],dh
  41c830:	ror    BYTE PTR [ecx+0x7a],1
  41c833:	ja     0x41c883
  41c835:	dec    ebp
  41c836:	test   BYTE PTR [eax-0x4b],0xca
  41c83a:	dec    esi
  41c83b:	leave  
  41c83c:	(bad)  
  41c83d:	mov    ds:0xb3be5e07,eax
  41c842:	std    
  41c843:	sti    
  41c844:	mov    eax,eax
  41c846:	stos   BYTE PTR es:[edi],al
  41c847:	hlt    
  41c848:	imul   eax,DWORD PTR [eax],0xffffff8a
  41c84b:	in     eax,dx
  41c84c:	enter  0x77d6,0xf0
  41c850:	mov    ?,WORD PTR [edi-0x258f3398]
  41c856:	jp     0x41c7fc
  41c858:	mov    eax,ds:0x5cd598e6
  41c85d:	shr    DWORD PTR [esp+eiz*2-0x49],cl
  41c861:	cwde   
  41c862:	sub    eax,0x355c02ed
  41c867:	jne    0x41c8c6
  41c869:	hlt    
  41c86a:	push   esi
  41c86b:	in     eax,dx
  41c86c:	sbb    BYTE PTR [ebx],dl
  41c86e:	cmc    
  41c86f:	loope  0x41c82b
  41c871:	cmp    al,0xa5
  41c873:	ss loope 0x41c869
  41c876:	mov    eax,ds:0xfa9f2d65
  41c87b:	dec    eax
  41c87c:	mov    ebp,0x132b42de
  41c881:	pop    ss
  41c882:	add    al,0x92
  41c884:	in     al,dx
  41c885:	xor    dh,BYTE PTR [eax-0x4d40a83d]
  41c88b:	mov    ebp,0x84247e80
  41c890:	mov    edi,0x2d70d5e2
  41c895:	stos   DWORD PTR es:[edi],eax
  41c896:	retf   
  41c897:	pusha  
  41c898:	bound  ebx,QWORD PTR [edx-0x3d]
  41c89b:	pop    ebx
  41c89c:	xchg   ah,ah
  41c89e:	cld    
  41c89f:	ja     0x41c82a
  41c8a1:	mov    al,0xfa
  41c8a3:	or     eax,0xf0439ce
  41c8a8:	sbb    ebx,ebp
  41c8aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8ab:	mov    edi,0x5e680905
  41c8b0:	or     ebp,DWORD PTR [edi]
  41c8b2:	mov    ebp,0xfe5f5c49
  41c8b7:	add    BYTE PTR [edx],bh
  41c8b9:	ret    0xfab
  41c8bc:	push   eax
  41c8bd:	ret    
  41c8be:	(bad)  
  41c8bf:	push   ebp
  41c8c0:	push   ecx
  41c8c1:	dec    ebx
  41c8c2:	add    BYTE PTR [ecx+0x15],bh
  41c8c5:	pop    es
  41c8c6:	scas   al,BYTE PTR es:[edi]
  41c8c7:	xchg   esp,eax
  41c8c8:	dec    esp
  41c8c9:	dec    eax
  41c8ca:	mov    eax,ds:0x4ffeec5a
  41c8cf:	mov    ebx,0x428c0e29
  41c8d4:	pop    es
  41c8d5:	jo     0x41c873
  41c8d7:	xchg   edx,eax
  41c8d8:	mov    edx,0x3019af1f
  41c8dd:	pop    ecx
  41c8de:	sar    DWORD PTR [ebx-0x2a],cl
  41c8e1:	jmp    0x23f5d6cf
  41c8e6:	dec    BYTE PTR [ebx]
  41c8e8:	clc    
  41c8e9:	cmp    al,0xa7
  41c8eb:	adc    dl,BYTE PTR [eax-0x9]
  41c8ee:	out    0xfb,eax
  41c8f0:	add    DWORD PTR [ebx+0x870a702],ebp
  41c8f6:	and    DWORD PTR [edi],0xffffffc9
  41c8f9:	dec    ecx
  41c8fa:	data16 sahf 
  41c8fc:	adc    ch,cl
  41c8fe:	sub    al,0xe
  41c900:	sbb    cl,al
  41c902:	dec    edx
  41c903:	mov    bh,0x1
  41c905:	inc    edi
  41c906:	ins    BYTE PTR es:[edi],dx
  41c907:	bound  edx,QWORD PTR [ecx]
  41c909:	out    dx,eax
  41c90a:	or     BYTE PTR [ebx],cl
  41c90c:	gs adc al,0xb3
  41c90f:	pop    esp
  41c910:	mov    al,0xf0
  41c912:	loopne 0x41c985
  41c914:	jbe    0x41c967
  41c916:	call   0x23232faa
  41c91b:	adc    BYTE PTR ds:0x2088f585,al
  41c921:	cmp    al,BYTE PTR [ebx]
  41c923:	cli    
  41c924:	inc    esp
  41c925:	xor    bl,BYTE PTR [ecx]
  41c927:	idiv   al
  41c929:	outs   dx,DWORD PTR ds:[esi]
  41c92a:	rcr    DWORD PTR [ebp+0x60],0x1c
  41c92e:	enter  0x33d6,0x46
  41c932:	call   0xf801bcc3
  41c937:	inc    BYTE PTR [edi+0x4b]
  41c93a:	adc    BYTE PTR [ebx-0x709db231],cl
  41c940:	xchg   ecx,eax
  41c941:	fstp   TBYTE PTR [esi-0x624ae926]
  41c947:	xchg   ebp,eax
  41c948:	out    dx,eax
  41c949:	in     al,dx
  41c94a:	les    eax,FWORD PTR [esi]
  41c94c:	fmul   DWORD PTR ds:0x1107b0e8
  41c952:	cld    
  41c953:	cmp    ch,ah
  41c955:	mov    esi,0x105d67f9
  41c95a:	or     BYTE PTR [ebx-0x5],bh
  41c95d:	push   cs
  41c95e:	js     0x41c987
  41c960:	or     BYTE PTR [edx-0x5d],bl
  41c963:	xchg   DWORD PTR [edi-0x32e0f60c],ebx
  41c969:	adc    DWORD PTR [edi-0x3],esi
  41c96c:	and    ebx,DWORD PTR [ebx+0x28]
  41c96f:	and    ch,cl
  41c971:	fldcw  WORD PTR [ebp+0x2de30c46]
  41c977:	cmp    al,0xe7
  41c979:	pop    esp
  41c97a:	dec    esi
  41c97b:	pop    ebp
  41c97c:	cld    
  41c97d:	das    
  41c97e:	xchg   esi,eax
  41c97f:	call   FWORD PTR [edi+0x64]
  41c982:	pusha  
  41c983:	test   BYTE PTR [edx-0x24],ch
  41c986:	in     al,0x68
  41c988:	sbb    eax,0x104d4192
  41c98d:	sub    DWORD PTR ds:0xa791a1d7,esi
  41c993:	xor    al,0xd0
  41c995:	out    0x36,al
  41c997:	mov    dl,BYTE PTR [ecx+0x5da0f8f3]
  41c99d:	add    al,0x0
  41c99f:	sbb    ah,BYTE PTR [ebx]
  41c9a1:	test   DWORD PTR [edx],esp
  41c9a3:	dec    ecx
  41c9a4:	int3   
  41c9a5:	test   BYTE PTR [eax],bh
  41c9a7:	xchg   edx,eax
  41c9a8:	fs out 0x13,eax
  41c9ab:	jp     0x41c961
  41c9ad:	adc    al,0x90
  41c9af:	nop
  41c9b0:	sar    dh,0x7b
  41c9b3:	mov    ds:0x8a8f6a4c,al
  41c9b8:	(bad)  
  41c9b9:	test   eax,0xc559a65c
  41c9be:	dec    ecx
  41c9bf:	mov    edx,es
  41c9c1:	pop    edi
  41c9c2:	ficom  DWORD PTR [edi-0xb6b6675]
  41c9c8:	fstp   TBYTE PTR [eax+0x1a]
  41c9cb:	jle    0x41ca3c
  41c9cd:	mov    dl,0x48
  41c9cf:	cmp    eax,0x70ae8b40
  41c9d4:	xchg   edi,eax
  41c9d5:	lock dec edi
  41c9d7:	bound  edx,QWORD PTR [ecx+0x36]
  41c9da:	dec    ebx
  41c9db:	jne    0x41ca29
  41c9dd:	pop    esp
  41c9de:	in     eax,0x15
  41c9e0:	scas   al,BYTE PTR es:[edi]
  41c9e1:	xor    BYTE PTR [eax],ch
  41c9e3:	pop    eax
  41c9e4:	push   0x898904fd
  41c9e9:	add    bh,bh
  41c9eb:	cs push ebx
  41c9ed:	or     DWORD PTR [eax-0x6d],esp
  41c9f0:	mov    esp,0x43c4230
  41c9f5:	fs push eax
  41c9f7:	leave  
  41c9f8:	mov    ebp,0x5b90918f
  41c9fd:	daa    
  41c9fe:	jbe    0x41ca0b
  41ca00:	mov    al,ds:0x36c4965d
  41ca05:	fistp  WORD PTR [ebx+ebp*4]
  41ca08:	ret    0x71c4
  41ca0b:	dec    ebp
  41ca0c:	retf   0x869b
  41ca0f:	loop   0x41c99d
  41ca11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca12:	mov    al,ds:0xb0501928
  41ca17:	cmc    
  41ca18:	and    al,0x96
  41ca1a:	push   ebp
  41ca1b:	rcl    DWORD PTR [edi-0x57],1
  41ca1e:	xchg   esp,eax
  41ca1f:	repz mov al,ds:0x49dc06cc
  41ca25:	fldenv [ebx+0x7c]
  41ca28:	ret    
  41ca29:	pushf  
  41ca2a:	leave  
  41ca2b:	pop    edx
  41ca2c:	or     al,0x1d
  41ca2e:	cmp    BYTE PTR [edi+0x8b403cb],bh
  41ca34:	xor    BYTE PTR ds:0x93ab97bc,cl
  41ca3a:	adc    ebp,DWORD PTR [edx+0x60808f9f]
  41ca40:	rcr    BYTE PTR [edi],0xd1
  41ca43:	ss push ebp
  41ca45:	push   ds
  41ca46:	push   ecx
  41ca47:	nop
  41ca48:	xchg   ecx,eax
  41ca49:	jp     0x41c9d5
  41ca4b:	add    edi,DWORD PTR [esi]
  41ca4d:	das    
  41ca4e:	xor    BYTE PTR [eax-0x30133dc9],0x6c
  41ca55:	add    dh,BYTE PTR [edi-0xcb802b7]
  41ca5b:	and    eax,0xb68a2e54
  41ca60:	push   esi
  41ca61:	sbb    bh,BYTE PTR [edi]
  41ca63:	dec    ebp
  41ca64:	dec    edi
  41ca65:	or     BYTE PTR [eiz*2-0x4ab5c073],dh
  41ca6c:	ret    0x881b
  41ca6f:	mov    esi,0x9503ab9e
  41ca74:	jle    0x41ca82
  41ca76:	aam    0x63
  41ca78:	or     al,0xa8
  41ca7a:	mov    esp,ecx
  41ca7c:	xchg   edi,eax
  41ca7d:	jne    0x41cae0
  41ca7f:	pop    ebx
  41ca80:	pop    ebp
  41ca81:	or     eax,0x14695803
  41ca86:	xchg   ecx,eax
  41ca87:	cdq    
  41ca88:	sub    DWORD PTR [ebx+ecx*1-0x6a],eax
  41ca8c:	popf   
  41ca8d:	stos   DWORD PTR es:[edi],eax
  41ca8e:	jnp    0x41ca22
  41ca90:	jbe    0x41ca9a
  41ca92:	sub    DWORD PTR [esi-0x73],ebx
  41ca95:	js     0x41cab7
  41ca97:	pop    edi
  41ca98:	xor    BYTE PTR [ebx],al
  41ca9a:	shr    BYTE PTR [ebp+0x44f5b272],cl
  41caa0:	inc    ecx
  41caa1:	sbb    DWORD PTR [ebp+0x0],esi
  41caa4:	not    DWORD PTR [esi]
  41caa6:	or     BYTE PTR [edx+ebx*4+0x7fcf28a9],dl
  41caad:	or     eax,0xe2a09974
  41cab2:	aas    
  41cab3:	fdivr  QWORD PTR [ecx]
  41cab5:	cli    
  41cab6:	jge    0x41ca3e
  41cab8:	aaa    
  41cab9:	outs   dx,BYTE PTR ds:[esi]
  41caba:	mov    esi,0x9d6f8fb3
  41cabf:	je     0x41cab1
  41cac1:	hlt    
  41cac2:	sub    DWORD PTR [eax],esi
  41cac4:	add    dh,BYTE PTR [ebx]
  41cac6:	jg     0x41cb01
  41cac8:	push   edi
  41cac9:	and    eax,0x609c6dea
  41cace:	retf   0x5b71
  41cad1:	repnz dec ecx
  41cad3:	fsubr  QWORD PTR [ebp-0x5b]
  41cad6:	or     ch,BYTE PTR [ebp+0x12]
  41cad9:	arpl   cx,bx
  41cadb:	push   ebx
  41cadc:	add    BYTE PTR [edi-0x344eb5eb],0x53
  41cae3:	out    0x8e,al
  41cae5:	sbb    esp,DWORD PTR [di]
  41cae8:	aad    0x53
  41caea:	mov    esi,0x55dcf30d
  41caef:	shl    BYTE PTR [ebx],cl
  41caf1:	fld    QWORD PTR [ebp+ebx*8+0x610f6e3f]
  41caf8:	fdiv   QWORD PTR [edx+0x72]
  41cafb:	popa   
  41cafc:	daa    
  41cafd:	push   edi
  41cafe:	test   cl,dh
  41cb00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb01:	je     0x41cb25
  41cb03:	mov    ebp,0x1d73e015
  41cb08:	xchg   DWORD PTR [ebp+0x4],ebx
  41cb0b:	add    DWORD PTR [ebx+0x56b5f9dd],edx
  41cb11:	cmp    BYTE PTR ds:0x41c01a03,dl
  41cb17:	or     ecx,DWORD PTR [ebx+esi*1+0x48]
  41cb1b:	xchg   ebx,eax
  41cb1c:	(bad)  
  41cb1d:	xor    edx,DWORD PTR [edi+0x676ce7d0]
  41cb23:	lock int3 
  41cb25:	stos   BYTE PTR es:[edi],al
  41cb26:	shl    BYTE PTR [eax+0x27],0x5
  41cb2a:	call   0x6b8df69a
  41cb2f:	pop    eax
  41cb30:	in     al,dx
  41cb31:	cs js  0x41cb61
  41cb34:	and    dh,0xbe
  41cb37:	inc    eax
  41cb39:	mov    al,ds:0xeed7edc3
  41cb3e:	sbb    BYTE PTR [ebp-0x6157f5ee],dl
  41cb44:	int3   
  41cb45:	shl    BYTE PTR [ebx-0x77bd21ba],0xa9
  41cb4c:	mov    ebp,ecx
  41cb4e:	push   0xffffffce
  41cb50:	mov    ebx,0xcf943345
  41cb55:	lods   al,BYTE PTR ds:[esi]
  41cb56:	test   al,0x69
  41cb58:	jle    0x41cadd
  41cb5a:	enter  0xd00c,0xb5
  41cb5e:	or     esp,ecx
  41cb60:	stos   BYTE PTR es:[edi],al
  41cb61:	and    eax,0x8553fda5
  41cb66:	fldcw  WORD PTR [edi]
  41cb68:	in     eax,dx
  41cb69:	jnp    0x41cb13
  41cb6b:	(bad)  
  41cb6c:	and    esi,DWORD PTR [eax]
  41cb6e:	les    edx,FWORD PTR [ebx+ebp*2]
  41cb71:	sub    BYTE PTR [ecx-0x694ee948],cl
  41cb77:	jmp    0xcdcc:0x6bca969f
  41cb7e:	cwde   
  41cb7f:	retw   0x8b58
  41cb83:	mov    cs,ecx
  41cb85:	ss loop 0x41cbf2
  41cb88:	leave  
  41cb89:	jmp    0x41cb89
  41cb8b:	out    0x5c,eax
  41cb8d:	daa    
  41cb8e:	pop    ebp
  41cb8f:	std    
  41cb90:	int    0xcb
  41cb92:	bound  esp,QWORD PTR [esi+0x3e]
  41cb95:	mov    ah,0xca
  41cb97:	mov    ch,0x2
  41cb99:	jl     0x41cb6f
  41cb9b:	push   esi
  41cb9c:	cld    
  41cb9d:	inc    esi
  41cb9e:	sbb    cl,BYTE PTR [eax+0x40afc819]
  41cba4:	mov    ebx,0x5c3f66d6
  41cba9:	pop    ebx
  41cbaa:	mov    ah,BYTE PTR [ecx]
  41cbac:	fldcw  WORD PTR [esi+edx*8]
  41cbb0:	cmp    ecx,edx
  41cbb2:	(bad)  
  41cbb3:	adc    eax,0x513b5744
  41cbb8:	mov    dh,0xd5
  41cbba:	mov    WORD PTR [ecx-0x5a840601],cs
  41cbc0:	and    eax,0xa184ba62
  41cbc5:	dec    esi
  41cbc6:	jns    0x41cb5c
  41cbc8:	hlt    
  41cbc9:	retf   0x8471
  41cbcc:	(bad)  
  41cbcd:	push   eax
  41cbce:	ds (bad) 
  41cbd1:	or     ch,ch
  41cbd3:	ror    DWORD PTR [eax-0x79],1
  41cbd6:	inc    esp
  41cbd7:	push   eax
  41cbd8:	push   es
  41cbd9:	stc    
  41cbda:	jecxz  0x41cbf7
  41cbdc:	aam    0x1c
  41cbde:	fcmove st,st(0)
  41cbe0:	inc    ecx
  41cbe1:	loopne 0x41cc03
  41cbe3:	hlt    
  41cbe4:	or     BYTE PTR [esi+0x32],bh
  41cbe7:	xor    BYTE PTR [ebp-0x11],dh
  41cbea:	ja     0x41cc38
  41cbec:	mov    al,0xe8
  41cbee:	jmp    DWORD PTR [esi-0x1e00aad1]
  41cbf4:	inc    edx
  41cbf5:	test   eax,0xca5060ff
  41cbfa:	mov    cl,0x87
  41cbfc:	mov    dh,BYTE PTR [ebx]
  41cbfe:	sti    
  41cbff:	xchg   edx,eax
  41cc00:	mov    esi,0x22159a4c
  41cc05:	mov    edx,0x4cb9268c
  41cc0a:	mov    esp,eax
  41cc0c:	sbb    DWORD PTR [ebp+0x46],ebp
  41cc0f:	lock cmp eax,0x4ebc26f0
  41cc15:	sbb    al,0x54
  41cc17:	std    
  41cc18:	and    DWORD PTR [eax+0x492bae9c],ebp
  41cc1e:	add    eax,0x7fe2a10c
  41cc23:	add    ebx,DWORD PTR [ebx-0x3d]
  41cc26:	sbb    ecx,DWORD PTR [ebp-0x77]
  41cc29:	frstor [eax+eax*1-0x6b]
  41cc2d:	xchg   DWORD PTR [edx+0x62],ebp
  41cc30:	sbb    ecx,DWORD PTR [edx]
  41cc32:	cmp    eax,0x5903720d
  41cc37:	std    
  41cc38:	inc    ebx
  41cc39:	xor    DWORD PTR [esi-0x795bad04],edi
  41cc3f:	pop    esp
  41cc40:	sub    dh,BYTE PTR [eax-0x2f58f39d]
  41cc46:	mov    ds:0x36acc3c3,al
  41cc4b:	add    ebx,DWORD PTR [eax+0xf]
  41cc4e:	out    dx,eax
  41cc4f:	adc    eax,0xf93d5161
  41cc54:	mov    bl,0x63
  41cc56:	jmp    0xb0964bf4
  41cc5b:	inc    edx
  41cc5c:	sbb    bl,BYTE PTR [edi]
  41cc5e:	hlt    
  41cc5f:	jnp    0x41cc2d
  41cc61:	bound  edx,QWORD PTR [edx]
  41cc63:	repz jecxz 0x41cc37
  41cc66:	fsub   DWORD PTR [esi-0x63]
  41cc69:	icebp  
  41cc6a:	add    eax,0xd1da56a9
  41cc6f:	hlt    
  41cc70:	adc    al,0xd
  41cc72:	in     eax,dx
  41cc73:	cld    
  41cc74:	xchg   ecx,eax
  41cc75:	xchg   DWORD PTR [edx-0x492614b9],ebx
  41cc7b:	and    BYTE PTR [eax+ecx*8+0x633ed420],cl
  41cc82:	jbe    0x41cc46
  41cc84:	mov    ds,WORD PTR [esi+0x31dc003a]
  41cc8a:	jae    0x41cc3a
  41cc8c:	jecxz  0x41cd02
  41cc8e:	xchg   DWORD PTR [eax-0x56],ebp
  41cc91:	outs   dx,BYTE PTR ds:[esi]
  41cc92:	outs   dx,DWORD PTR ds:[esi]
  41cc93:	in     al,dx
  41cc94:	inc    ebx
  41cc95:	sub    bl,bl
  41cc97:	ins    DWORD PTR es:[edi],dx
  41cc98:	jg     0x41cd0d
  41cc9a:	dec    esi
  41cc9b:	int    0xf7
  41cc9d:	pop    ds
  41cc9e:	or     eax,0xa3ee0ecd
  41cca3:	data16 cld 
  41cca5:	add    dh,ch
  41cca7:	push   ecx
  41cca8:	add    eax,0xaafda1ab
  41ccad:	retf   
  41ccae:	mov    bl,bh
  41ccb0:	xlat   BYTE PTR ds:[ebx]
  41ccb1:	xor    edi,DWORD PTR [ebp+edx*4-0x58]
  41ccb5:	sub    eax,0xd21a44b4
  41ccba:	pop    es
  41ccbb:	popf   
  41ccbc:	test   edi,ebp
  41ccbe:	xor    DWORD PTR [eax],edx
  41ccc0:	inc    ebp
  41ccc1:	je     0x41cd23
  41ccc3:	(bad)  
  41ccc4:	jg     0x6624ec92
  41ccca:	mov    ah,0x9b
  41cccc:	inc    edi
  41cccd:	repz int 0x1f
  41ccd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccd1:	or     bh,al
  41ccd3:	stos   BYTE PTR es:[edi],al
  41ccd4:	cmp    bl,BYTE PTR [edi-0x533a54a6]
  41ccda:	add    eax,DWORD PTR [edx+0x51]
  41ccdd:	scas   al,BYTE PTR es:[edi]
  41ccde:	add    BYTE PTR [edi+0x3cdc1bdc],al
  41cce4:	mov    ecx,DWORD PTR [edi]
  41cce6:	push   edi
  41cce7:	or     al,0xe0
  41cce9:	add    ah,ch
  41cceb:	fisubr DWORD PTR [ebp+edx*4-0x23bcae6a]
  41ccf2:	repnz leave 
  41ccf4:	scas   al,BYTE PTR es:[edi]
  41ccf5:	jne    0x41cd3b
  41ccf7:	mov    ch,0x1e
  41ccf9:	adc    ecx,DWORD PTR [esi]
  41ccfb:	lahf   
  41ccfc:	arpl   WORD PTR [esi+0x56],bx
  41ccff:	push   ss
  41cd00:	or     BYTE PTR [esi-0x5c],cl
  41cd03:	mov    eax,ds:0x46a7774a
  41cd08:	pop    esp
  41cd09:	cmp    al,0x23
  41cd0b:	idiv   esp
  41cd0d:	push   0x28
  41cd0f:	mov    BYTE PTR [eax+eax*8+0x969e5b],dh
  41cd16:	bound  ebp,QWORD PTR [esi-0x28]
  41cd19:	pop    edi
  41cd1a:	pusha  
  41cd1b:	jp     0x41cd69
  41cd1d:	data16 mov bh,0xee
  41cd20:	nop
  41cd21:	sbb    DWORD PTR [edi+0x6bba76a3],0x4beff718
  41cd2b:	adc    BYTE PTR [ebx-0x2d95284c],dh
  41cd31:	mov    ecx,0xc4c76def
  41cd36:	xor    DWORD PTR [esi+0x585200d3],ebp
  41cd3c:	xor    ecx,DWORD PTR [ecx]
  41cd3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd3f:	and    bh,BYTE PTR [edx-0x3e]
  41cd42:	xor    edi,DWORD PTR [edi-0x19bbd280]
  41cd48:	inc    esi
  41cd49:	or     edi,esi
  41cd4b:	rol    DWORD PTR [ecx+0xc5e34b5],cl
  41cd51:	xor    ah,BYTE PTR [ebx]
  41cd53:	(bad)  
  41cd54:	into   
  41cd55:	test   esi,ebp
  41cd57:	jl     0x41cdcd
  41cd59:	cmc    
  41cd5a:	add    cl,bh
  41cd5c:	adc    BYTE PTR [edi-0x463014b4],dh
  41cd62:	jg     0x41cda6
  41cd64:	outs   dx,DWORD PTR ds:[esi]
  41cd65:	popf   
  41cd66:	push   es
  41cd67:	outs   dx,DWORD PTR ds:[esi]
  41cd68:	fsubr  DWORD PTR [eax+ecx*2]
  41cd6b:	sub    edx,DWORD PTR [esi]
  41cd6d:	mov    eax,0x723e040d
  41cd72:	push   es
  41cd73:	add    al,0x5d
  41cd75:	ffree  st(1)
  41cd77:	out    0x3,al
  41cd79:	sahf   
  41cd7a:	xchg   ecx,eax
  41cd7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd7c:	call   0xbdee:0xeb0d2328
  41cd83:	push   edi
  41cd84:	popa   
  41cd85:	jg     0x41cd6a
  41cd87:	jno    0x41cd37
  41cd89:	out    0xf9,al
  41cd8b:	xlat   BYTE PTR ds:[ebx]
  41cd8c:	fistp  DWORD PTR [esi+eax*1]
  41cd8f:	sbb    al,0x40
  41cd91:	aam    0x9
  41cd93:	leave  
  41cd94:	sub    DWORD PTR [ecx-0x6],ecx
  41cd97:	or     bl,BYTE PTR [ecx-0x4203b0d7]
  41cd9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd9e:	mov    ds:0x8571a560,al
  41cda3:	sti    
  41cda4:	scas   eax,DWORD PTR es:[edi]
  41cda5:	mov    bl,0x77
  41cda7:	(bad)  
  41cda8:	fild   WORD PTR [esi]
  41cdaa:	xchg   ebx,eax
  41cdab:	xchg   edi,eax
  41cdac:	data16 daa 
  41cdae:	fs or  eax,0x2ad6fdab
  41cdb4:	mov    edi,0x24c3b099
  41cdb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdba:	cld    
  41cdbb:	push   esi
  41cdbc:	out    dx,al
  41cdbd:	test   al,0x92
  41cdbf:	jmp    0x7cd0:0x37b58c00
  41cdc6:	lods   eax,DWORD PTR ds:[esi]
  41cdc7:	nop
  41cdc8:	retf   
  41cdc9:	or     cl,BYTE PTR [ecx+edi*8]
  41cdcc:	out    dx,eax
  41cdcd:	arpl   bp,si
  41cdcf:	sbb    dl,BYTE PTR ds:0xec3012e8
  41cdd5:	ss div ah
  41cdd8:	jl     0x41cdc8
  41cdda:	fnsave [edi-0x2218792b]
  41cde0:	add    esi,DWORD PTR [edi-0x373b1d5c]
  41cde6:	pop    eax
  41cde7:	push   0xa79b767c
  41cdec:	mov    dh,0x60
  41cdee:	xor    DWORD PTR [ecx+0x2d839c63],eax
  41cdf4:	cmp    DWORD PTR [ecx-0x1aa536ce],ebp
  41cdfa:	sbb    ebp,DWORD PTR [eax+0x71]
  41cdfd:	retf   
  41cdfe:	push   ds
  41cdff:	push   ecx
  41ce00:	cmp    edx,edi
  41ce02:	in     eax,0xa9
  41ce04:	jmp    0x41ce0d
  41ce06:	push   0x75
  41ce08:	or     ebx,DWORD PTR [esi-0x5a]
  41ce0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce0c:	cld    
  41ce0d:	push   eax
  41ce0e:	mov    bl,0xbe
  41ce10:	adc    al,0x75
  41ce12:	xchg   esp,eax
  41ce13:	or     DWORD PTR [ebx],ebx
  41ce15:	mov    cl,0xf4
  41ce17:	cmc    
  41ce18:	xor    dh,cl
  41ce1a:	sbb    ecx,DWORD PTR [ebx+0x7e]
  41ce1d:	mov    bh,0xe2
  41ce1f:	add    ebp,DWORD PTR [ebp+eax*4+0x5e]
  41ce23:	aam    0xe8
  41ce25:	and    bh,0x9b
  41ce28:	ret    0x7860
  41ce2b:	cli    
  41ce2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce2d:	aam    0xfb
  41ce2f:	add    BYTE PTR [esi-0x57da6187],dl
  41ce35:	loop   0x41cea6
  41ce37:	jmp    0x6de1:0xd06c5c15
  41ce3e:	dec    eax
  41ce3f:	xchg   edx,eax
  41ce40:	xor    al,0x5a
  41ce42:	pop    esp
  41ce43:	add    al,0x96
  41ce45:	mov    ah,BYTE PTR [eax]
  41ce47:	(bad)  
  41ce48:	push   cs
  41ce49:	inc    esp
  41ce4a:	daa    
  41ce4b:	xor    BYTE PTR cs:[ebp+0x7fec4beb],dl
  41ce52:	(bad)  
  41ce53:	adc    DWORD PTR [edx-0x26],ecx
  41ce56:	adc    eax,0x759926a8
  41ce5b:	xor    ebp,DWORD PTR [eax+0x13]
  41ce5e:	cwde   
  41ce5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce60:	xchg   edx,eax
  41ce61:	lahf   
  41ce62:	push   edx
  41ce63:	ret    
  41ce64:	sub    ebp,ebx
  41ce66:	cmp    eax,0x56dbe665
  41ce6b:	adc    dh,dl
  41ce6d:	inc    ebp
  41ce6e:	push   cs
  41ce6f:	aas    
  41ce70:	lods   eax,DWORD PTR ds:[esi]
  41ce71:	loop   0x41ce57
  41ce73:	push   ds
  41ce74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce75:	jg     0x41ce61
  41ce77:	or     al,0x9f
  41ce79:	mov    bh,0x76
  41ce7b:	hlt    
  41ce7c:	push   eax
  41ce7d:	push   cs
  41ce7e:	xchg   ebx,eax
  41ce7f:	je     0x41ce7a
  41ce81:	mov    dh,0x9a
  41ce83:	pop    edx
  41ce84:	sub    al,0x8d
  41ce86:	push   ebp
  41ce87:	ins    BYTE PTR es:[edi],dx
  41ce88:	mov    edi,0xc99348a
  41ce8d:	jae    0x41ce44
  41ce8f:	pop    ebp
  41ce90:	add    dl,al
  41ce92:	pop    ds
  41ce93:	mov    esp,0x3a88d033
  41ce98:	jbe    0x41ceac
  41ce9a:	fcmovu st,st(2)
  41ce9c:	xchg   esp,eax
  41ce9d:	mov    bl,0x83
  41ce9f:	lea    edi,[ebp+0x1a]
  41cea2:	inc    edx
  41cea3:	sahf   
  41cea4:	jl     0x41ce4e
  41cea6:	and    esp,DWORD PTR [ebx]
  41cea8:	and    esp,DWORD PTR [edi-0x7a5a29d2]
  41ceae:	mov    WORD PTR [edi+0x2e],?
  41ceb1:	pop    esi
  41ceb2:	aad    0xfe
  41ceb4:	popa   
  41ceb5:	je     0x41cece
  41ceb7:	xchg   ebp,eax
  41ceb8:	mov    ah,BYTE PTR [ebx-0x17d9a8f]
  41cebe:	mov    edx,0xfd630862
  41cec3:	repz adc dl,BYTE PTR [edx-0x5a72e39e]
  41ceca:	sbb    edi,DWORD PTR [ecx]
  41cecc:	lahf   
  41cecd:	mov    edi,0x1646db61
  41ced2:	add    DWORD PTR [ebp+0x3e],eax
  41ced5:	int    0x89
  41ced7:	add    al,0x52
  41ced9:	xchg   esi,eax
  41ceda:	mov    al,ds:0x1a772711
  41cedf:	or     DWORD PTR [ebx+eax*4+0x6633ece6],ebx
  41cee6:	pop    edx
  41cee7:	sub    bh,BYTE PTR [ecx+0x69]
  41ceea:	jnp    0x41cf6a
  41ceec:	cmp    al,0xf8
  41ceee:	js     0x41ce8d
  41cef0:	sbb    al,0x37
  41cef2:	iret   
  41cef3:	aas    
  41cef4:	inc    esi
  41cef5:	shr    esp,0xae
  41cef8:	add    eax,0x59d02d47
  41cefd:	jle    0x41cf15
  41ceff:	mov    ch,0xd1
  41cf01:	int3   
  41cf02:	out    0x4e,eax
  41cf04:	sub    ecx,DWORD PTR [ebx+0x7]
  41cf07:	jmp    0x8829f661
  41cf0c:	test   al,0x7a
  41cf0e:	jo     0x41cf4e
  41cf10:	pop    edi
  41cf11:	icebp  
  41cf12:	pop    edx
  41cf13:	mov    ?,WORD PTR [edi+0x4e]
  41cf16:	and    edi,DWORD PTR [ebx-0x69]
  41cf19:	jl     0x41cf22
  41cf1b:	fdivr  DWORD PTR [edi]
  41cf1d:	and    dl,BYTE PTR [ebx-0x56]
  41cf20:	jmp    0x920d4f22
  41cf25:	push   ebp
  41cf26:	mov    ds:0x468ef495,al
  41cf2b:	bound  ebx,QWORD PTR [edi+0x4705f691]
  41cf31:	imul   ecx,esi,0xffffffe4
  41cf34:	mov    ah,al
  41cf36:	in     eax,dx
  41cf37:	push   ebp
  41cf38:	mov    WORD PTR ds:0xa6f811dc,gs
  41cf3e:	repz pop es
  41cf40:	adc    al,0x90
  41cf42:	fstp   st(4)
  41cf44:	aaa    
  41cf45:	pop    esp
  41cf46:	sahf   
  41cf47:	and    al,0xb4
  41cf49:	jbe    0x41cfa5
  41cf4b:	js     0x41cf0a
  41cf4d:	test   al,0x90
  41cf4f:	cmp    al,0x10
  41cf51:	pushf  
  41cf52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf53:	xchg   ebp,eax
  41cf54:	jmp    0xacc39348
  41cf59:	xchg   DWORD PTR [ebp-0x11],esp
  41cf5c:	(bad)  
  41cf5d:	hlt    
  41cf5e:	repnz lahf 
  41cf60:	bndstx [ecx-0xb7facb],(bad)
  41cf67:	int    0x97
  41cf69:	inc    esi
  41cf6a:	push   0x57d0c03b
  41cf6f:	lods   al,BYTE PTR ds:[esi]
  41cf70:	clc    
  41cf71:	mov    esi,0x6a17a991
  41cf76:	mov    esp,0x599f2313
  41cf7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf7c:	inc    eax
  41cf7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf7e:	lock mov ch,0xfa
  41cf81:	pop    esp
  41cf82:	jne    0x41cfa9
  41cf84:	aam    0x51
  41cf86:	and    BYTE PTR [ebx-0x58],al
  41cf89:	mov    BYTE PTR [edi],bl
  41cf8b:	sti    
  41cf8c:	leave  
  41cf8d:	and    bh,BYTE PTR [edx]
  41cf8f:	pop    ds
  41cf90:	loopne 0x41cf87
  41cf92:	iret   
  41cf93:	int    0x51
  41cf95:	fist   WORD PTR [eax]
  41cf97:	pop    ecx
  41cf98:	sbb    eax,0x97a07b60
  41cf9d:	mov    cl,0xe1
  41cf9f:	retf   
  41cfa0:	jmp    0x41cff2
  41cfa2:	inc    ebx
  41cfa3:	mov    ds:0x3fe70e8e,eax
  41cfa8:	imul   eax,DWORD PTR [edi+0x6],0x3531b2bb
  41cfaf:	pop    ebp
  41cfb0:	dec    edx
  41cfb1:	mov    BYTE PTR [ecx+0x7cc76ae1],ah
  41cfb7:	add    BYTE PTR [edi+0x5d],ah
  41cfba:	xchg   ecx,eax
  41cfbb:	call   0x9f765139
  41cfc0:	jp     0x41cf64
  41cfc2:	fwait
  41cfc3:	jle    0x41cf75
  41cfc5:	push   edi
  41cfc6:	lods   al,BYTE PTR ds:[esi]
  41cfc7:	dec    esp
  41cfc8:	dec    ebx
  41cfc9:	cmp    DWORD PTR [ebx-0x6623d81d],edi
  41cfcf:	hlt    
  41cfd0:	hlt    
  41cfd1:	mov    bl,0x8c
  41cfd3:	nop
  41cfd4:	out    0xf8,eax
  41cfd6:	jp     0x41cf6e
  41cfd8:	sub    al,0xae
  41cfda:	and    BYTE PTR [ecx],0x3b
  41cfdd:	xor    dh,dl
  41cfdf:	push   0xffffffb2
  41cfe1:	es js  0x41cfff
  41cfe4:	or     al,BYTE PTR [esi-0x12]
  41cfe7:	lods   eax,DWORD PTR ds:[esi]
  41cfe8:	repnz mov ds,WORD PTR [ebx+0x4788723c]
  41cfef:	or     eax,0xaff3d6b8
  41cff4:	sahf   
  41cff5:	xor    eax,0x8324f805
  41cffa:	mov    bh,0x47
  41cffc:	sbb    BYTE PTR [eax],0xb4
  41cfff:	(bad)  
  41d000:	push   esi
  41d001:	mov    bl,0xd8
  41d003:	mov    bh,0xce
  41d005:	int3   
  41d006:	sub    al,0x67
  41d008:	xchg   edx,eax
  41d009:	mov    dh,0xc5
  41d00b:	out    0xfd,al
  41d00d:	jbe    0x41d070
  41d00f:	push   edx
  41d010:	inc    ebx
  41d011:	mov    ecx,0x9a8ab65a
  41d016:	sub    al,0xd8
  41d018:	adc    eax,0x2fa224c3
  41d01d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d01e:	mov    esp,0x3140850b
  41d023:	mov    ebx,0x9bfa9c3f
  41d028:	loope  0x41cfb9
  41d02a:	inc    esp
  41d02b:	cmp    dh,BYTE PTR [eax-0x39090888]
  41d031:	call   0x3339c165
  41d036:	(bad)  
  41d037:	out    dx,al
  41d038:	adc    eax,0x1e961ec7
  41d03d:	add    DWORD PTR [ecx-0x18145a29],ecx
  41d043:	mov    al,ds:0xec493b06
  41d048:	jecxz  0x41d011
  41d04a:	xchg   esi,eax
  41d04b:	rcl    DWORD PTR [ecx+0x5628518d],0x9
  41d052:	sbb    BYTE PTR [ebp-0x3be6f2b7],ch
  41d058:	sub    edx,ecx
  41d05a:	nop
  41d05b:	mov    esp,0xa59fa2f1
  41d060:	scas   eax,DWORD PTR es:[edi]
  41d061:	sbb    BYTE PTR [ecx-0x9],cl
  41d064:	jge    0x41cfe8
  41d066:	pop    ecx
  41d067:	(bad)  
  41d068:	mov    edx,0x452a1518
  41d06d:	lods   eax,DWORD PTR ds:[esi]
  41d06e:	adc    edx,esp
  41d070:	ret    0x176a
  41d073:	push   esp
  41d074:	jne    0x41d09c
  41d076:	cmp    eax,0xa8b99797
  41d07b:	adc    DWORD PTR [ebp+0x3e],0xffffffc5
  41d07f:	xchg   edi,eax
  41d080:	out    dx,al
  41d081:	out    dx,eax
  41d082:	pushf  
  41d083:	test   eax,0x20a1f243
  41d088:	add    BYTE PTR [ecx-0x44],dh
  41d08b:	cmp    al,0x2d
  41d08d:	(bad)  
  41d08e:	fwait
  41d08f:	scas   eax,DWORD PTR es:[edi]
  41d090:	push   ebp
  41d091:	and    DWORD PTR [ecx+0x5b058df1],esi
  41d097:	and    BYTE PTR [edx],ch
  41d099:	add    BYTE PTR [edx+0x6c],bl
  41d09c:	test   eax,0xe9b63de2
  41d0a1:	cmp    eax,DWORD PTR [eax-0x559d7f7]
  41d0a7:	aad    0xf7
  41d0a9:	imul   esp,DWORD PTR [ecx+edx*2+0x18],0xffffffdc
  41d0ae:	cmp    BYTE PTR [edi-0x448ccc7f],bl
  41d0b4:	mov    dh,0x1d
  41d0b6:	xlat   BYTE PTR ds:[ebx]
  41d0b7:	inc    edx
  41d0b8:	pop    eax
  41d0b9:	push   0x8030fdae
  41d0be:	js     0x41d057
  41d0c0:	cmp    al,0x38
  41d0c2:	inc    ebx
  41d0c3:	(bad)  
  41d0c4:	or     DWORD PTR ds:0x3d2f749f,edx
  41d0ca:	xlat   BYTE PTR ds:[ebx]
  41d0cb:	inc    esp
  41d0cc:	inc    ebp
  41d0cd:	popf   
  41d0ce:	push   0x59bb32d1
  41d0d3:	adc    eax,ecx
  41d0d5:	mov    ds:0x13bdc57d,al
  41d0da:	pusha  
  41d0db:	mov    edx,0xb8d88039
  41d0e0:	or     bh,dl
  41d0e2:	mov    al,ds:0xd39c498
  41d0e7:	stos   DWORD PTR es:[edi],eax
  41d0e8:	push   ds
  41d0e9:	add    dl,BYTE PTR [edx+0x5342c38]
  41d0ef:	daa    
  41d0f0:	xchg   DWORD PTR [ebx],ebp
  41d0f2:	popa   
  41d0f3:	mov    dh,0x41
  41d0f5:	or     bh,BYTE PTR [esi+0xa4fa752]
  41d0fb:	enter  0x9171,0xb8
  41d0ff:	icebp  
  41d100:	ret    0xb38b
  41d103:	push   ecx
  41d104:	outs   dx,BYTE PTR ds:[esi]
  41d105:	arpl   WORD PTR ds:0xd27c34f,bp
  41d10b:	ins    DWORD PTR es:[edi],dx
  41d10c:	and    DWORD PTR [ecx-0x36],edx
  41d10f:	jmp    0x41d13e
  41d111:	outs   dx,DWORD PTR ds:[esi]
  41d112:	aam    0xdf
  41d114:	mov    esi,0x2f2429d5
  41d119:	retf   0xab9d
  41d11c:	inc    edx
  41d11d:	test   eax,0x7c25cbb
  41d122:	ss in  al,dx
  41d124:	in     al,0x4e
  41d126:	mov    DWORD PTR ds:0x26a417d,esp
  41d12c:	bound  ebp,QWORD PTR [eax]
  41d12e:	add    ecx,eax
  41d130:	mov    eax,0xfd52c4d1
  41d135:	mov    edx,0x35fc33a4
  41d13a:	call   0x109c439f
  41d13f:	aam    0xf
  41d141:	pop    edx
  41d142:	dec    eax
  41d143:	cmp    al,0x27
  41d145:	fcomip st,st(3)
  41d147:	push   cs
  41d148:	adc    edx,esp
  41d14a:	ja     0x41d14d
  41d14c:	jl     0x41d1b1
  41d14e:	inc    ecx
  41d14f:	sbb    BYTE PTR [eax-0x593f4a01],al
  41d155:	and    ch,BYTE PTR [edi]
  41d157:	adc    eax,0x9f5cdb27
  41d15c:	sub    al,BYTE PTR [eax+0x4]
  41d15f:	rcr    DWORD PTR ds:0xd389653e,cl
  41d165:	mov    cl,0xb9
  41d167:	std    
  41d168:	js     0x41d14f
  41d16a:	cdq    
  41d16b:	les    eax,FWORD PTR [eax+0x4ab3804c]
  41d171:	sub    eax,0x9a70b034
  41d176:	into   
  41d177:	sub    BYTE PTR [edx-0x7fcc8311],0xd4
  41d17e:	adc    DWORD PTR [eax],eax
  41d180:	push   0xa3860d1f
  41d185:	(bad)  
  41d186:	fcomi  st,st(7)
  41d188:	jno    0x41d1d4
  41d18a:	mov    ebp,0x8ae8685a
  41d18f:	jmp    0xec782371
  41d194:	ja     0x41d134
  41d196:	add    al,0x15
  41d198:	or     eax,0x36aac944
  41d19d:	gs ds xchg esi,eax
  41d1a0:	mov    esp,0xf3c70357
  41d1a5:	mov    ds:0xb0272ec9,al
  41d1aa:	adc    ebp,DWORD PTR [edx-0x396916db]
  41d1b0:	in     al,dx
  41d1b1:	sbb    BYTE PTR [ebx+0x2f],cl
  41d1b4:	pop    esp
  41d1b5:	sub    BYTE PTR [edi-0x76],ch
  41d1b8:	icebp  
  41d1b9:	dec    ebx
  41d1ba:	add    ecx,esp
  41d1bc:	and    cl,BYTE PTR [edx]
  41d1be:	adc    eax,0x27
  41d1c1:	or     bl,BYTE PTR [ebx-0x39cb2056]
  41d1c7:	xor    edi,DWORD PTR [ecx+0x39]
  41d1ca:	xchg   ecx,eax
  41d1cb:	fild   DWORD PTR [ebp-0x7b6785ae]
  41d1d1:	pop    ebp
  41d1d2:	dec    eax
  41d1d3:	mov    ds:0x1a669bc0,al
  41d1d8:	dec    ecx
  41d1d9:	adc    eax,0xf4c333ff
  41d1de:	lods   al,BYTE PTR ds:[esi]
  41d1df:	mov    edi,0x65fea8f1
  41d1e4:	sbb    edx,DWORD PTR [edi]
  41d1e6:	xor    ah,0x64
  41d1e9:	sbb    eax,ecx
  41d1eb:	ds pusha 
  41d1ed:	mov    al,es:0x180c0ccf
  41d1f3:	push   0xd3045aa8
  41d1f8:	out    dx,eax
  41d1f9:	cli    
  41d1fa:	mov    WORD PTR [ebp+edx*8+0x5e],cs
  41d1fe:	fwait
  41d1ff:	dec    edi
  41d200:	cmp    al,0xa6
  41d202:	dec    ebp
  41d203:	add    BYTE PTR [edx],cl
  41d205:	and    eax,0x694643aa
  41d20a:	xor    BYTE PTR [ecx*4+0x277b545b],0xa5
  41d212:	arpl   WORD PTR [esi+0xf230068],sp
  41d218:	pop    eax
  41d219:	push   ebx
  41d21a:	fs pop ds
  41d21c:	mov    edi,0xed0c3c66
  41d221:	jl     0x41d254
  41d223:	or     eax,0xde68a976
  41d228:	mov    bh,0xd0
  41d22a:	outs   dx,BYTE PTR ds:[esi]
  41d22b:	popa   
  41d22c:	mov    al,0xba
  41d22e:	add    BYTE PTR [edx-0x5a],al
  41d231:	add    BYTE PTR [esi],dh
  41d233:	mov    ecx,0x8d6b7f29
  41d238:	mov    edi,0xcb93a0c6
  41d23d:	push   0x6037a8e
  41d242:	std    
  41d243:	test   al,0x4f
  41d245:	call   0xbbaba9
  41d24a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d24b:	dec    esp
  41d24c:	xchg   esp,eax
  41d24d:	test   DWORD PTR [esi-0x4d],0x745143c
  41d254:	inc    esp
  41d255:	(bad)  
  41d256:	(bad)  
  41d257:	sbb    al,ah
  41d259:	xor    bl,0x27
  41d25c:	mov    al,ds:0x27aaaefd
  41d261:	sub    eax,0x571c0b95
  41d266:	add    DWORD PTR [edi+0x1be5e48a],0xffffffc8
  41d26d:	lods   al,BYTE PTR ds:[esi]
  41d26e:	ror    BYTE PTR [eax+0x13b33540],cl
  41d274:	aad    0x68
  41d276:	jae    0x41d2e1
  41d278:	aad    0x83
  41d27a:	daa    
  41d27b:	jmp    0x41d272
  41d27d:	xchg   ecx,eax
  41d27e:	ins    DWORD PTR es:[edi],dx
  41d27f:	mov    fs,WORD PTR [edi-0xdbd1d82]
  41d285:	dec    esp
  41d286:	pop    esi
  41d287:	sbb    BYTE PTR [ecx-0x2ed2b4a3],0x7e
  41d28e:	cld    
  41d28f:	jmp    DWORD PTR [esi]
  41d291:	mov    ch,0x46
  41d293:	loope  0x41d27a
  41d295:	push   ecx
  41d296:	lahf   
  41d297:	xchg   ecx,eax
  41d298:	loopne 0x41d2db
  41d29a:	data16 mov bh,0xcc
  41d29d:	ds xchg ebx,eax
  41d29f:	jne    0x41d2dd
  41d2a1:	imul   DWORD PTR es:[ebx]
  41d2a4:	stc    
  41d2a5:	xchg   esp,eax
  41d2a6:	add    ecx,DWORD PTR [ebx+0x16]
  41d2a9:	sar    BYTE PTR [esi+0x4a],1
  41d2ac:	fiadd  WORD PTR [eax-0x72aa2471]
  41d2b2:	imul   esi,DWORD PTR [eax+ebx*1-0x2],0x22
  41d2b7:	mov    ds:0xe75675d9,al
  41d2bc:	dec    ecx
  41d2bd:	sbb    DWORD PTR [ebp-0x3f],esi
  41d2c0:	fcomp  DWORD PTR [edi+0x6d]
  41d2c3:	pop    ebx
  41d2c4:	cs sub eax,0x1fc6e233
  41d2ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2cb:	push   ebp
  41d2cc:	popa   
  41d2cd:	shr    DWORD PTR [edx],0x1f
  41d2d0:	(bad)  [ebp-0x7c]
  41d2d3:	imul   edx,DWORD PTR [eax+0x3a76696a],0x9eedd04
  41d2dd:	push   ebp
  41d2de:	push   edx
  41d2df:	adc    eax,0x6b56843f
  41d2e4:	bound  ecx,QWORD PTR [ecx+0x2c0905f]
  41d2ea:	push   esi
  41d2eb:	mov    DWORD PTR [esi+edi*2],0x5a479b01
  41d2f2:	fldz   
  41d2f4:	inc    eax
  41d2f5:	mov    esp,esp
  41d2f7:	or     al,0xf3
  41d2f9:	test   eax,0x4882a98b
  41d2fe:	arpl   ax,sp
  41d300:	and    al,0xdd
  41d302:	xor    BYTE PTR [edx+0x6],0xb1
  41d306:	or     al,0x57
  41d308:	lods   al,BYTE PTR ds:[esi]
  41d309:	and    ch,BYTE PTR [esi]
  41d30b:	add    al,ah
  41d30d:	cdq    
  41d30e:	mov    edx,fs
  41d310:	stc    
  41d311:	(bad)  
  41d312:	loop   0x41d335
  41d314:	sbb    ebx,ecx
  41d316:	xor    esp,DWORD PTR [ecx-0x3cd60c6a]
  41d31c:	das    
  41d31d:	add    ecx,edx
  41d31f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d320:	retf   
  41d321:	jecxz  0x41d322
  41d323:	scas   al,BYTE PTR es:[edi]
  41d324:	push   cs
  41d325:	push   edx
  41d326:	xchg   edi,eax
  41d327:	addr16 push eax
  41d329:	loope  0x41d2ad
  41d32b:	push   esp
  41d32c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d32d:	retf   0x194c
  41d330:	daa    
  41d331:	int    0xeb
  41d333:	cmp    DWORD PTR [ecx-0x1d443adf],esi
  41d339:	mov    ecx,0x911037e6
  41d33e:	mov    edx,0xa9fba169
  41d343:	rol    DWORD PTR [esi+0x64],0x99
  41d347:	pusha  
  41d348:	stc    
  41d349:	iret   
  41d34a:	aas    
  41d34b:	in     al,dx
  41d34c:	sti    
  41d34d:	push   ebp
  41d34e:	push   edi
  41d34f:	dec    edi
  41d350:	cmp    eax,DWORD PTR [ecx-0x15]
  41d353:	and    BYTE PTR [esi],bl
  41d355:	xchg   ebx,eax
  41d356:	sbb    bl,dl
  41d358:	clc    
  41d359:	jb     0x41d3c1
  41d35b:	rcr    BYTE PTR [edi-0x24a39124],cl
  41d361:	add    dl,0xd4
  41d364:	mov    eax,ds:0x230c5f5d
  41d369:	pop    ebp
  41d36a:	ins    BYTE PTR es:[edi],dx
  41d36b:	test   eax,0x15ffcaf6
  41d370:	jb     0x41d3c6
  41d372:	loop   0x41d3b7
  41d374:	push   edx
  41d375:	(bad)  
  41d376:	jo     0x41d3bb
  41d378:	shr    BYTE PTR [esi+0x17],0x2c
  41d37c:	jl     0xbcbe1556
  41d382:	add    eax,0x151074ab
  41d387:	adc    BYTE PTR [ebx],bl
  41d389:	test   BYTE PTR [eax+0x39fd6882],ch
  41d38f:	jne    0x41d319
  41d391:	pop    edx
  41d392:	add    esp,0x6e
  41d395:	out    dx,al
  41d396:	stos   BYTE PTR es:[edi],al
  41d397:	ss jno 0x41d3bc
  41d39a:	fs pop esi
  41d39c:	push   edi
  41d39d:	addr16 adc eax,0xaefa6479
  41d3a3:	jmp    0xc3b2:0x3dd7beb8
  41d3aa:	jmp    0x4ce0edcf
  41d3af:	jecxz  0x41d3da
  41d3b1:	sbb    al,0x59
  41d3b3:	daa    
  41d3b4:	fist   DWORD PTR [eax+0x3fba8f72]
  41d3ba:	cmp    ebx,ecx
  41d3bc:	dec    ebx
  41d3bd:	lds    ecx,FWORD PTR [ecx+0x3b]
  41d3c0:	cmp    al,0x11
  41d3c2:	cdq    
  41d3c3:	pusha  
  41d3c4:	xor    al,0x24
  41d3c6:	repnz stos BYTE PTR es:[edi],al
  41d3c8:	mov    WORD PTR [ebx+0x30],fs
  41d3cb:	sub    al,0x46
  41d3cd:	dec    edi
  41d3ce:	push   ebx
  41d3cf:	pop    ss
  41d3d0:	pusha  
  41d3d1:	and    BYTE PTR [edx+ebp*1],dh
  41d3d4:	pop    edi
  41d3d5:	cwde   
  41d3d6:	cs jmp 0x654c:0xc434e3f6
  41d3de:	ficomp DWORD PTR [esp+edx*4-0x46]
  41d3e2:	inc    ebx
  41d3e3:	fdiv   DWORD PTR [ebp-0x13967fc9]
  41d3e9:	xchg   edi,eax
  41d3ea:	ds mov dh,0xe
  41d3ed:	test   eax,0x48747f35
  41d3f2:	pop    edx
  41d3f3:	mov    cl,0xa2
  41d3f5:	ins    BYTE PTR es:[edi],dx
  41d3f6:	sub    edx,esi
  41d3f8:	daa    
  41d3f9:	sub    BYTE PTR [ebx+0x5320a066],bl
  41d3ff:	retf   0x3f8a
  41d402:	call   0x7915:0x95c29344
  41d409:	pusha  
  41d40a:	mov    ds:0xa298f987,al
  41d40f:	sbb    eax,0x94ccfc57
  41d414:	inc    eax
  41d415:	fs lock (bad) 
  41d418:	pop    eax
  41d419:	jg     0x41d40a
  41d41b:	clc    
  41d41c:	mov    eax,DWORD PTR [esi]
  41d41e:	popf   
  41d41f:	repz and eax,0xdc022e
  41d425:	xor    ah,BYTE PTR [edx+0x46eb5c3]
  41d42b:	pop    esi
  41d42c:	outs   dx,DWORD PTR ds:[esi]
  41d42d:	sbb    dl,0x9f
  41d430:	addr16 mov ds:0x49f6,al
  41d434:	mov    bh,0x43
  41d436:	cli    
  41d437:	bound  ecx,QWORD PTR [ecx-0x19]
  41d43a:	push   0xd67d85b4
  41d43f:	xchg   ecx,eax
  41d440:	pop    DWORD PTR [ecx+0x5e]
  41d443:	adc    ebp,esp
  41d445:	mov    WORD PTR [esi+eiz*8-0x56],es
  41d449:	xchg   ecx,eax
  41d44a:	mov    ds:0x806337c8,al
  41d44f:	xor    DWORD PTR [eax+0x17],0x1d
  41d453:	(bad)
  41d456:	(bad)  
  41d457:	iret   
  41d458:	pushf  
  41d459:	adc    al,0xa7
  41d45b:	enter  0xa3a,0x6f
  41d45f:	ret    0xdd59
  41d462:	push   0xffffffc3
  41d464:	xchg   ecx,eax
  41d465:	fcom   DWORD PTR [esi+0x7d2e1076]
  41d46b:	jp     0x41d4bf
  41d46d:	xchg   DWORD PTR [edi+0x45f1804b],edi
  41d473:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d474:	test   DWORD PTR [ecx-0x42cb9b80],esp
  41d47a:	xchg   ebx,eax
  41d47b:	mov    bl,0x79
  41d47d:	jg     0x41d4b7
  41d47f:	ss aam 0x5
  41d482:	ins    DWORD PTR es:[edi],dx
  41d483:	xchg   edx,eax
  41d484:	mov    dl,0x28
  41d486:	call   0xd9bb2bdd
  41d48b:	mov    esi,DWORD PTR [eax+0x3634968]
  41d491:	cs inc eax
  41d493:	cmp    esi,esp
  41d495:	mov    al,ds:0x3fec5060
  41d49a:	bound  edi,QWORD PTR [eax]
  41d49c:	push   ebx
  41d49d:	popf   
  41d49e:	ins    DWORD PTR es:[edi],dx
  41d49f:	cmp    eax,0xaf59273e
  41d4a4:	fdivr  st,st(4)
  41d4a6:	pop    esp
  41d4a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4a8:	mov    WORD PTR [ebx+edi*2-0x66],?
  41d4ac:	push   0xf661761e
  41d4b1:	sbb    al,0xc2
  41d4b3:	and    ch,BYTE PTR [ebp-0x77]
  41d4b6:	lock test ebx,edi
  41d4b9:	dec    esi
  41d4ba:	mov    eax,ds:0xedb52024
  41d4bf:	jp     0x41d4dc
  41d4c1:	clc    
  41d4c2:	in     al,dx
  41d4c3:	pop    ss
  41d4c4:	loope  0x41d489
  41d4c6:	or     ebx,DWORD PTR [edi-0xe02543b]
  41d4cc:	mov    ch,0x5e
  41d4ce:	(bad)
  41d4d2:	pop    edi
  41d4d3:	xchg   esp,eax
  41d4d4:	inc    edx
  41d4d5:	xchg   ecx,eax
  41d4d6:	inc    edi
  41d4d7:	fdivr  DWORD PTR [esi+0x7e5338be]
  41d4dd:	lahf   
  41d4de:	sbb    eax,0x3c316190
  41d4e3:	rcr    BYTE PTR [ecx-0x4b],0xaa
  41d4e7:	arpl   WORD PTR gs:[eax+0xc74306],bx
  41d4ee:	jecxz  0x41d4c6
  41d4f0:	jl     0x41d495
  41d4f2:	jmp    0x41d542
  41d4f4:	push   ebp
  41d4f5:	and    eax,0xca63d494
  41d4fa:	iret   
  41d4fb:	icebp  
  41d4fc:	jbe    0x41d480
  41d4fe:	pop    ebp
  41d4ff:	mov    eax,ds:0xbd12869a
  41d505:	jo     0x41d4ce
  41d507:	mov    ?,WORD PTR [eax-0x4d2c56e1]
  41d50d:	sub    bl,BYTE PTR [esp+eax*8-0x6792bf16]
  41d514:	mov    esi,0x334ef667
  41d519:	fld    QWORD PTR [eax]
  41d51b:	adc    edi,DWORD PTR [esp+edx*2+0x65]
  41d51f:	pop    ebx
  41d520:	retf   0x16a6
  41d523:	out    dx,eax
  41d524:	es sbb al,0x8d
  41d527:	sub    BYTE PTR [edx+0x25],bh
  41d52a:	jp     0x41d522
  41d52c:	clc    
  41d52d:	sub    eax,0xda78d09b
  41d532:	call   0xe765:0x806ab0c3
  41d539:	jecxz  0x41d56d
  41d53b:	mov    cl,0x6a
  41d53d:	sti    
  41d53e:	sub    bl,BYTE PTR [esi-0x8e76fb3]
  41d544:	lods   eax,DWORD PTR ds:[esi]
  41d545:	shr    ebx,cl
  41d547:	mov    WORD PTR [esi],?
  41d549:	pop    edi
  41d54a:	loop   0x41d557
  41d54c:	mov    al,ds:0x883d7680
  41d551:	imul   edi,DWORD PTR [ebx+0x28],0x17
  41d555:	test   dh,bl
  41d557:	retf   
  41d558:	mov    dl,0x63
  41d55a:	xchg   ebx,eax
  41d55b:	out    0xea,eax
  41d55d:	and    edx,0xb5738d95
  41d563:	push   0x24674908
  41d568:	sub    BYTE PTR [eax-0x3b273161],cl
  41d56e:	clc    
  41d56f:	addr16 jge 0x41d52a
  41d572:	push   ebp
  41d573:	xchg   esp,eax
  41d574:	dec    ebx
  41d575:	adc    eax,0xac9c7725
  41d57a:	jge    0x41d4ff
  41d57c:	dec    esi
  41d57d:	pop    ebp
  41d57e:	lds    esi,FWORD PTR [esp+esi*1+0x1f]
  41d582:	int3   
  41d583:	mov    ah,BYTE PTR [esi+eiz*1+0x4a8430ea]
  41d58a:	and    eax,0xe557b7c0
  41d58f:	cmp    dl,BYTE PTR [edx+0xd7356ec]
  41d595:	mov    esi,0xa7becb33
  41d59a:	loopne 0x41d582
  41d59c:	fcomp  QWORD PTR [ebp+0x2a7f600e]
  41d5a2:	cmp    esp,DWORD PTR [ecx-0x13]
  41d5a5:	push   ebx
  41d5a6:	arpl   cx,sp
  41d5a8:	and    eax,0xc0127f81
  41d5ad:	jmp    0xfe183f5c
  41d5b2:	dec    ebp
  41d5b3:	and    al,0xa9
  41d5b5:	shr    ecx,0x72
  41d5b8:	std    
  41d5b9:	and    ebp,DWORD PTR [ecx-0x20dddf0]
  41d5bf:	outs   dx,BYTE PTR ds:[esi]
  41d5c0:	mov    WORD PTR [edi],ss
  41d5c2:	rcl    DWORD PTR [ebx-0x19c7e41f],0x61
  41d5c9:	dec    ecx
  41d5ca:	repnz inc DWORD PTR [esi+ebp*4+0x7f]
  41d5cf:	jge    0x41d648
  41d5d1:	adc    bh,BYTE PTR [eax+ebp*4-0x7630c696]
  41d5d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5d9:	dec    edi
  41d5da:	in     al,0x91
  41d5dc:	add    dh,BYTE PTR [ebx-0x58d6ce00]
  41d5e2:	or     BYTE PTR [eax+eiz*2],al
  41d5e5:	mov    esi,0xa107fd19
  41d5ea:	mov    bl,0x33
  41d5ec:	xor    DWORD PTR [esi+0x682dda65],ebp
  41d5f2:	jns    0x41d58e
  41d5f4:	shr    BYTE PTR [edi],1
  41d5f6:	push   es
  41d5f7:	repz sub ebp,edx
  41d5fa:	mov    edx,0xe818eddf
  41d5ff:	cs popf 
  41d601:	cmp    edx,DWORD PTR [esi]
  41d603:	test   eax,0xef578385
  41d608:	movhps QWORD PTR [ebx+edi*1],xmm4
  41d60c:	push   ebp
  41d60d:	(bad)  
  41d60f:	sbb    al,0x59
  41d611:	push   eax
  41d612:	push   ebp
  41d613:	vmwrite ecx,DWORD PTR [eax-0x16]
  41d617:	aam    0x25
  41d619:	mov    dh,ah
  41d61b:	cwde   
  41d61c:	inc    ebp
  41d61d:	hlt    
  41d61e:	(bad)  
  41d620:	in     eax,0x33
  41d622:	adc    al,0x1
  41d624:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d625:	(bad)  
  41d626:	and    al,0xe7
  41d628:	push   esp
  41d629:	lds    edi,FWORD PTR [ebp+eax*8+0x12]
  41d62d:	(bad)  
  41d62e:	mov    ecx,0x9ec3f978
  41d633:	mov    edi,0x9865eed2
  41d638:	mov    bl,0xfb
  41d63a:	mov    ah,0x64
  41d63c:	test   DWORD PTR [ebp+0x20],edi
  41d63f:	or     edi,DWORD PTR [ebx]
  41d641:	scas   eax,DWORD PTR es:[edi]
  41d642:	std    
  41d643:	sti    
  41d644:	push   es
  41d645:	adc    BYTE PTR [ebp-0x7c],bh
  41d648:	mov    al,BYTE PTR [ebx]
  41d64a:	out    0xd2,eax
  41d64c:	repnz sub eax,0x66adf15a
  41d652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d653:	push   esi
  41d654:	ds imul ebp,ebx,0x16
  41d658:	mov    al,ds:0x9e2ed615
  41d65d:	dec    esp
  41d65e:	popa   
  41d65f:	les    ebp,FWORD PTR [ecx-0x1038dcc6]
  41d665:	retf   0x53bb
  41d668:	cmc    
  41d669:	lods   eax,DWORD PTR ds:[esi]
  41d66a:	adc    ch,BYTE PTR [eax+0x4b]
  41d66d:	addr16 jmp 0x30a5a7bf
  41d673:	cmp    edx,ecx
  41d675:	hlt    
  41d676:	hlt    
  41d677:	push   DWORD PTR [edi+edi*4+0xb]
  41d67b:	or     BYTE PTR [esi+0x36e49abc],dl
  41d681:	mov    esp,0xf5d66167
  41d686:	fxch   st(2)
  41d688:	xor    DWORD PTR [edx+0x5f],ebp
  41d68b:	mov    edx,0x97fc3431
  41d690:	test   eax,0x9d980e87
  41d695:	ins    BYTE PTR es:[edi],dx
  41d696:	sbb    eax,0xec95cf0d
  41d69b:	xor    bl,BYTE PTR [edx]
  41d69d:	xchg   ebx,eax
  41d69e:	sub    eax,0x6966ec4e
  41d6a3:	push   esi
  41d6a4:	inc    esp
  41d6a5:	or     ebx,ebx
  41d6a7:	mov    ds:0x90bfe3eb,eax
  41d6ac:	mov    bh,0x54
  41d6ae:	mov    WORD PTR [eax+eiz*2-0x61],ds
  41d6b2:	sub    DWORD PTR [eax],0x678ae9d1
  41d6b8:	call   0x22bf:0x357094ee
  41d6bf:	loope  0x41d6ca
  41d6c1:	and    al,0x21
  41d6c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6c4:	data16 xlat BYTE PTR ds:[ebx]
  41d6c6:	sub    edx,eax
  41d6c8:	or     al,0x55
  41d6ca:	int    0xf7
  41d6cc:	sbb    BYTE PTR [edi+0x500fc9ac],0x98
  41d6d3:	jge    0x41d728
  41d6d5:	pop    eax
  41d6d6:	mov    ch,dl
  41d6d8:	inc    edi
  41d6d9:	push   0x32
  41d6db:	mov    al,0xcb
  41d6dd:	inc    edx
  41d6de:	adc    dl,BYTE PTR [ebx]
  41d6e0:	arpl   WORD PTR [ebp-0x5b1efb87],di
  41d6e6:	xchg   ecx,eax
  41d6e7:	sub    eax,0xee3367dd
  41d6ec:	daa    
  41d6ed:	dec    esp
  41d6ee:	jnp    0x41d6e0
  41d6f0:	mov    bl,0xf1
  41d6f2:	shl    BYTE PTR [ecx],cl
  41d6f4:	and    al,0x9c
  41d6f6:	jl     0x41d71d
  41d6f8:	and    edi,DWORD PTR [eax-0x233af224]
  41d6fe:	in     eax,dx
  41d6ff:	cmp    bh,BYTE PTR [ecx]
  41d701:	addr16 pop es
  41d703:	add    ah,ch
  41d705:	aam    0x29
  41d707:	pop    ebx
  41d708:	mov    es,WORD PTR [ebp+0x40]
  41d70b:	(bad)  
  41d70c:	stc    
  41d70d:	popa   
  41d70e:	lods   eax,DWORD PTR ds:[esi]
  41d70f:	ret    0x6bc2
  41d712:	sub    eax,0x5137fb6f
  41d717:	jle    0x41d76f
  41d719:	xor    ch,BYTE PTR [ecx]
  41d71b:	xor    ch,BYTE PTR [ebp+0x49c7ec32]
  41d721:	test   al,0x72
  41d723:	or     BYTE PTR [eax],bh
  41d725:	add    ah,BYTE PTR ds:0xca036a9a
  41d72b:	push   ds
  41d72c:	cmc    
  41d72d:	inc    ecx
  41d72e:	iret   
  41d72f:	fstp   DWORD PTR ds:0x8d5dc5a2
  41d735:	mov    eax,ds:0xecfbce5a
  41d73a:	cmp    ebx,DWORD PTR [edi+0x1]
  41d73d:	loope  0x41d76d
  41d73f:	addr16 push 0xffffff8e
  41d742:	jnp    0x41d71a
  41d744:	and    ebp,DWORD PTR [eax+0x6a2b6eaa]
  41d74a:	out    dx,eax
  41d74b:	dec    esi
  41d74c:	dec    eax
  41d74d:	leave  
  41d74e:	add    ch,BYTE PTR [edx-0x61ce1043]
  41d754:	sbb    DWORD PTR [esi],edi
  41d756:	xchg   esp,eax
  41d757:	mov    eax,0xa04fecdd
  41d75c:	jnp    0x41d733
  41d75e:	xchg   edx,eax
  41d75f:	daa    
  41d760:	push   es
  41d761:	sub    al,0xc7
  41d763:	mov    ch,0xa9
  41d765:	scas   al,BYTE PTR es:[edi]
  41d766:	xchg   edi,eax
  41d767:	nop
  41d768:	call   0xde3b:0xd5324e0d
  41d76f:	xor    DWORD PTR [ebx+0x67],ebx
  41d772:	mov    ah,BYTE PTR [ecx]
  41d774:	mov    bl,dh
  41d776:	dec    edi
  41d777:	rcl    DWORD PTR [edi+0x68],0x33
  41d77b:	pop    ss
  41d77c:	popf   
  41d77d:	mov    esp,0x14e82d8f
  41d782:	mov    eax,ecx
  41d784:	cmp    al,BYTE PTR [ebx-0x42ddbf3b]
  41d78a:	mov    esp,esp
  41d78c:	outs   dx,DWORD PTR ds:[esi]
  41d78d:	push   DWORD PTR [ebx-0xa5b3da6]
  41d793:	sub    eax,0xaf4928d
  41d798:	(bad)
  41d79b:	data16 ror BYTE PTR [eax],1
  41d79e:	or     ch,bl
  41d7a0:	push   0xffffffd8
  41d7a2:	into   
  41d7a3:	cmp    bl,BYTE PTR [eax]
  41d7a5:	aas    
  41d7a6:	in     al,dx
  41d7a7:	xchg   esp,eax
  41d7a8:	cs inc eax
  41d7aa:	pop    es
  41d7ab:	stos   DWORD PTR es:[edi],eax
  41d7ac:	inc    edx
  41d7ad:	inc    esp
  41d7ae:	fwait
  41d7af:	or     eax,0xdff692d5
  41d7b4:	pop    ebp
  41d7b5:	or     DWORD PTR [edi],edx
  41d7b7:	iret   
  41d7b8:	or     BYTE PTR [edx],cl
  41d7ba:	rcr    BYTE PTR [edi],cl
  41d7bc:	adc    BYTE PTR [eax-0x18a92d23],dh
  41d7c2:	mov    dh,0xcc
  41d7c4:	push   esp
  41d7c5:	sahf   
  41d7c6:	dec    ebp
  41d7c7:	neg    DWORD PTR [ebp-0x76]
  41d7ca:	popf   
  41d7cb:	push   edx
  41d7cc:	mov    WORD PTR [edi+0x55],gs
  41d7cf:	aaa    
  41d7d0:	aaa    
  41d7d1:	inc    edx
  41d7d2:	jp     0x41d7dd
  41d7d4:	jns    0x41d7ff
  41d7d6:	cs (bad) 
  41d7d9:	or     eax,DWORD PTR [edx-0x6f]
  41d7dc:	lahf   
  41d7dd:	out    dx,eax
  41d7de:	and    al,0x6
  41d7e0:	push   edi
  41d7e1:	adc    eax,0x8a3167f6
  41d7e6:	cmp    eax,0x97e92c83
  41d7eb:	pop    ds
  41d7ec:	or     BYTE PTR [esi],0x95
  41d7ef:	scas   al,BYTE PTR es:[edi]
  41d7f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7f1:	dec    edx
  41d7f2:	jae    0x41d828
  41d7f4:	je     0x41d7ab
  41d7f6:	sar    al,0x17
  41d7f9:	pop    esi
  41d7fa:	das    
  41d7fb:	mov    ds:0xbcff5d58,eax
  41d800:	lods   eax,DWORD PTR ds:[esi]
  41d801:	xchg   ebx,eax
  41d802:	aad    0xee
  41d804:	xor    dl,BYTE PTR [ebx]
  41d806:	dec    edx
  41d807:	test   edi,esi
  41d809:	std    
  41d80a:	sub    al,0x6
  41d80c:	inc    eax
  41d80d:	cli    
  41d80e:	add    BYTE PTR [ebp-0x3d],al
  41d811:	mov    BYTE PTR [edi-0x55],bh
  41d814:	adc    DWORD PTR [ebx+0x5e],ecx
  41d817:	in     eax,0x2a
  41d819:	stos   DWORD PTR es:[edi],eax
  41d81a:	imul   esi,DWORD PTR [ebx-0x5f],0xffffff81
  41d81e:	add    dh,BYTE PTR [edi+0x861fcc5]
  41d824:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41d826:	(bad)  
  41d827:	xchg   ecx,eax
  41d828:	mov    esp,0x41ed1594
  41d82d:	cli    
  41d82e:	into   
  41d82f:	xchg   edi,eax
  41d830:	(bad)  
  41d831:	fsub   DWORD PTR [ebp+0x2dc37353]
  41d837:	mov    edi,0xaf2356d
  41d83c:	xchg   edx,eax
  41d83d:	retf   
  41d83e:	sub    BYTE PTR [edx-0x3b84215b],dl
  41d844:	leave  
  41d845:	push   edx
  41d846:	lea    ecx,[eax-0x7c]
  41d849:	lods   al,BYTE PTR ds:[esi]
  41d84a:	ins    DWORD PTR es:[edi],dx
  41d84b:	stos   BYTE PTR es:[edi],al
  41d84c:	xor    edi,0x62
  41d84f:	aas    
  41d850:	xor    bl,dl
  41d852:	adc    ebp,DWORD PTR [ebp-0x66f13cb1]
  41d858:	jns    0x41d7f6
  41d85a:	outs   dx,DWORD PTR ds:[esi]
  41d85b:	aas    
  41d85c:	sbb    al,bh
  41d85e:	cmp    ah,BYTE PTR [edi+0x3ec1a9db]
  41d864:	out    dx,eax
  41d865:	and    eax,DWORD PTR [esi-0x27]
  41d868:	pop    ecx
  41d869:	dec    eax
  41d86a:	cmp    BYTE PTR [ecx],dh
  41d86c:	ret    0xe726
  41d86f:	les    ecx,FWORD PTR [edi-0xcb5a608]
  41d875:	fwait
  41d876:	(bad)  
  41d877:	cmc    
  41d878:	ficomp DWORD PTR [edx-0x3a]
  41d87b:	pop    ebp
  41d87c:	data16 in al,0xfd
  41d87f:	mov    ch,0x57
  41d881:	adc    al,0xd7
  41d883:	test   ah,ah
  41d885:	sti    
  41d886:	cmp    dl,bh
  41d888:	inc    ebx
  41d889:	mov    cl,0x14
  41d88b:	jmp    0xc17a3687
  41d890:	mov    ds:0x2e36cba5,al
  41d895:	push   ds
  41d896:	push   ds
  41d897:	repz push eax
  41d899:	push   cs
  41d89a:	mov    ds:0x5a02817f,al
  41d89f:	mov    ecx,0x6b6486e5
  41d8a4:	out    dx,al
  41d8a5:	lea    ecx,[edx]
  41d8a7:	add    DWORD PTR [esi],eax
  41d8a9:	adc    BYTE PTR [eax-0x18ed6969],0xa0
  41d8b0:	call   0x4566:0x6fa79b59
  41d8b7:	xchg   esi,eax
  41d8b8:	addr16 aad 0x97
  41d8bb:	and    bl,BYTE PTR [ebp+0x15]
  41d8be:	call   0xa4c2:0xf1cce570
  41d8c5:	jne    0x41d92e
  41d8c7:	xchg   edx,eax
  41d8c8:	sub    ecx,DWORD PTR es:[eax-0xb573a40]
  41d8cf:	mov    esi,0xc8dea04e
  41d8d4:	ja     0x41d90e
  41d8d6:	adc    BYTE PTR [eax+0x35],dh
  41d8d9:	jbe    0x41d910
  41d8db:	js     0x41d907
  41d8dd:	push   es
  41d8de:	ins    BYTE PTR es:[edi],dx
  41d8df:	fs xchg edx,edi
  41d8e2:	lahf   
  41d8e3:	ss mov bl,0x17
  41d8e6:	dec    eax
  41d8e7:	out    dx,al
  41d8e8:	ds push esp
  41d8ea:	pop    edx
  41d8eb:	xchg   BYTE PTR [esi-0x11d76ef7],bh
  41d8f1:	js     0x41d87c
  41d8f3:	mov    ebp,0xef936f97
  41d8f8:	daa    
  41d8f9:	sub    bh,BYTE PTR [ebx-0x53]
  41d8fc:	sub    edi,DWORD PTR [eax+ebx*1]
  41d8ff:	lahf   
  41d900:	shl    BYTE PTR [ecx-0x49fb201e],1
  41d906:	inc    esp
  41d907:	add    dl,BYTE PTR [edx]
  41d909:	aas    
  41d90a:	sar    BYTE PTR [esi+esi*2-0x80eb1ec],cl
  41d911:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d912:	ret    
  41d913:	cld    
  41d914:	jl     0x41d93c
  41d916:	stos   BYTE PTR es:[edi],al
  41d917:	js     0x41d944
  41d919:	xor    al,0x63
  41d91b:	push   ebp
  41d91c:	call   0xf69415c6
  41d921:	and    ch,BYTE PTR [ebx+0x524cdab3]
  41d927:	cmp    dl,al
  41d929:	xchg   ecx,eax
  41d92a:	int    0x86
  41d92c:	cmp    BYTE PTR [ebp-0x51],al
  41d92f:	sub    DWORD PTR [esi-0x7916096b],ebx
  41d935:	jb     0x41d8d0
  41d937:	lea    esi,[eax-0x20]
  41d93a:	sub    bh,BYTE PTR [esi]
  41d93c:	pop    ds
  41d93d:	pop    es
  41d93e:	int3   
  41d93f:	je     0x41d956
  41d941:	or     eax,0xb37c058b
  41d946:	dec    ebp
  41d947:	adc    esp,DWORD PTR [edi-0x3]
  41d94a:	enter  0x8c33,0x8e
  41d94e:	icebp  
  41d94f:	pop    edi
  41d950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d951:	cld    
  41d952:	call   0x7c05b139
  41d957:	add    BYTE PTR [edi],0xa1
  41d95a:	nop
  41d95b:	jo     0x41d9b9
  41d95d:	add    eax,0x3d717d46
  41d962:	add    al,0x54
  41d964:	inc    ecx
  41d965:	mov    edi,0x2207da01
  41d96a:	push   ebx
  41d96b:	lods   eax,DWORD PTR ds:[esi]
  41d96c:	inc    edi
  41d96d:	xor    eax,0xc3873795
  41d972:	sbb    al,0x36
  41d974:	out    0x71,al
  41d976:	fistp  QWORD PTR [esi+0x3fbcb178]
  41d97c:	into   
  41d97d:	nop
  41d97e:	sbb    ebp,eax
  41d980:	cmp    eax,0x44dd2a78
  41d985:	(bad)  
  41d986:	ja     0x41d9ca
  41d988:	dec    ecx
  41d989:	retf   0xd02
  41d98c:	mov    edx,0x8563f5fe
  41d991:	std    
  41d992:	aad    0x3d
  41d994:	xlat   BYTE PTR ds:[ebx]
  41d995:	sahf   
  41d996:	in     eax,dx
  41d997:	pop    esp
  41d998:	retf   0x963e
  41d99b:	xor    DWORD PTR [ebp-0x4d],esi
  41d99e:	lea    esp,[eax+ecx*1-0x28]
  41d9a2:	xchg   ch,ch
  41d9a4:	scas   al,BYTE PTR es:[edi]
  41d9a5:	outs   dx,DWORD PTR ds:[esi]
  41d9a6:	xchg   ebx,eax
  41d9a7:	hlt    
  41d9a8:	cmp    ebp,DWORD PTR [esi+eiz*1]
  41d9ab:	mov    cl,0x5a
  41d9ad:	mov    DWORD PTR [ebx+0x77df18cf],edx
  41d9b3:	jno    0x41d948
  41d9b5:	mov    dh,0x9c
  41d9b7:	lods   eax,DWORD PTR ds:[esi]
  41d9b8:	adc    al,0x1a
  41d9ba:	cmp    BYTE PTR [ebp+0x75],ch
  41d9bd:	cmp    eax,0xa7e0461f
  41d9c2:	ret    
  41d9c3:	push   ecx
  41d9c4:	shufps xmm1,XMMWORD PTR [edi-0x37],0xac
  41d9c9:	fdiv   DWORD PTR [esi+ebp*2]
  41d9cc:	xlat   BYTE PTR ds:[ebx]
  41d9cd:	cmp    DWORD PTR ds:0x979458de,0xfe5d14b0
  41d9d7:	rol    BYTE PTR [ebx+0x17a48552],0x42
  41d9de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9e0:	aad    0xad
  41d9e2:	repnz xor al,0x63
  41d9e5:	call   FWORD PTR [esi]
  41d9e7:	mov    ebx,eax
  41d9e9:	pop    esi
  41d9ea:	lock push edx
  41d9ec:	mov    ecx,0xd12d2235
  41d9f1:	and    al,0xe6
  41d9f3:	adc    BYTE PTR [ebx+0x66],bl
  41d9f6:	repz mov eax,ds:0xe368f09f
  41d9fc:	les    ecx,FWORD PTR [eax]
  41d9fe:	call   0xdbad4ceb
  41da03:	(bad)  
  41da04:	out    dx,al
  41da05:	add    DWORD PTR [edi],eax
  41da07:	sub    DWORD PTR [ebx+0x46],edi
  41da0a:	ja     0x41d9d1
  41da0c:	xchg   ebx,eax
  41da0d:	fdiv   DWORD PTR [esi+ebp*2-0x8]
  41da11:	and    edi,DWORD PTR [edx+0x3d6f483c]
  41da17:	dec    esi
  41da18:	pusha  
  41da19:	imul   esp,DWORD PTR [esp+eiz*4+0x31d30d43],0x27352be
  41da24:	push   ebx
  41da25:	xor    DWORD PTR [edx-0x24],esp
  41da28:	div    ecx
  41da2a:	aas    
  41da2b:	bound  eax,QWORD PTR [ebx+0x57e42460]
  41da31:	add    al,0x67
  41da33:	pop    eax
  41da34:	dec    edx
  41da35:	xchg   BYTE PTR [ecx],cl
  41da37:	pop    esp
  41da38:	je     0x41da6c
  41da3a:	stc    
  41da3b:	inc    edx
  41da3c:	daa    
  41da3d:	inc    ebp
  41da3e:	and    esi,DWORD PTR [edi-0x48]
  41da41:	rcr    BYTE PTR [ecx+0x50],cl
  41da44:	pop    ds
  41da45:	mov    dl,0xc2
  41da47:	inc    ecx
  41da48:	adc    DWORD PTR [esi-0x6659eedd],esi
  41da4e:	and    DWORD PTR [edi],0x9a8c2cd4
  41da54:	cmp    DWORD PTR [edx-0x37],ebx
  41da57:	faddp  st(5),st
  41da59:	sti    
  41da5a:	ror    dl,1
  41da5c:	adc    esp,DWORD PTR [eax]
  41da5e:	cmp    BYTE PTR [eax+0x2],0xf5
  41da62:	cwde   
  41da63:	ficomp WORD PTR [esi+0x54]
  41da66:	fldcw  WORD PTR ds:0xb9627f04
  41da6c:	retf   
  41da6d:	xchg   ebp,eax
  41da6e:	mov    DWORD PTR fs:[ebx-0x28387a93],ecx
  41da75:	rol    DWORD PTR [eax],1
  41da77:	adc    bl,BYTE PTR ds:0xcaa26020
  41da7d:	call   0x5171:0x77a657b4
  41da84:	inc    esp
  41da85:	stc    
  41da86:	fidiv  DWORD PTR [ecx+0x3f]
  41da89:	sbb    al,0x8b
  41da8b:	test   BYTE PTR [eax+ecx*8],bl
  41da8e:	push   esp
  41da8f:	js     0x41daf6
  41da91:	mov    bl,0x60
  41da93:	les    esi,FWORD PTR [ecx-0x62]
  41da96:	pop    ecx
  41da97:	jae    0x41daa8
  41da99:	mov    esp,0xc14c8fe8
  41da9e:	rol    eax,cl
  41daa0:	xchg   ebx,eax
  41daa1:	mov    ebp,0x7a1b5c47
  41daa6:	ret    
  41daa7:	pop    eax
  41daa8:	or     al,0x65
  41daaa:	jl     0x41db27
  41daac:	pusha  
  41daad:	dec    edx
  41daae:	out    0xa0,al
  41dab0:	mov    ebx,0x7084595f
  41dab5:	mov    bl,0xd3
  41dab7:	jge    0x41da5e
  41dab9:	dec    ecx
  41daba:	cmp    eax,0xc2b8c04a
  41dabf:	hlt    
  41dac0:	sbb    edi,DWORD PTR [ecx]
  41dac2:	add    ebp,DWORD PTR [edi+0x6338cee5]
  41dac8:	sbb    eax,0xddeac311
  41dacd:	cmp    DWORD PTR [eax+0x1e],0x77
  41dad1:	sub    eax,0x8e1beacb
  41dad6:	lods   eax,DWORD PTR ds:[esi]
  41dad7:	not    BYTE PTR [ebp+ebp*2+0x152d2d55]
  41dade:	dec    esp
  41dadf:	cs add ch,cl
  41dae2:	cli    
  41dae3:	sub    ch,dl
  41dae5:	in     al,dx
  41dae6:	adc    eax,0xc318e201
  41daeb:	retf   0x6a2b
  41daee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41daef:	mov    ch,0x10
  41daf1:	in     eax,dx
  41daf2:	scas   al,BYTE PTR es:[edi]
  41daf3:	iret   
  41daf4:	pop    esp
  41daf5:	pop    esp
  41daf6:	adc    BYTE PTR [ecx-0x786113fe],ah
  41dafc:	pop    esp
  41dafd:	ss push ds
  41daff:	inc    edi
  41db00:	retf   0x1ef
  41db03:	jmp    0xd1420e07
  41db08:	cmp    ah,BYTE PTR ds:0xea1bdf9
  41db0e:	xor    ch,cl
  41db10:	retf   0x5ffc
  41db13:	jmp    0x21306114
  41db18:	xchg   BYTE PTR [esi+0x3d],al
  41db1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db1c:	cld    
  41db1d:	jp     0x41db4d
  41db1f:	repnz (bad) 
  41db21:	mov    ebx,0x7da16dcb
  41db26:	inc    eax
  41db27:	cld    
  41db28:	add    al,0x94
  41db2a:	jge    0x41db1d
  41db2c:	idiv   DWORD PTR [ecx+0x48]
  41db2f:	test   BYTE PTR ds:0x75c852af,bh
  41db35:	pop    ds
  41db36:	xchg   DWORD PTR [edx],edx
  41db38:	mov    ebx,esp
  41db3a:	imul   edx,DWORD PTR [esi],0x2a
  41db3d:	lahf   
  41db3e:	xor    ebx,DWORD PTR [ebx+0x69dc7a7f]
  41db44:	dec    eax
  41db45:	shl    DWORD PTR ds:[esi-0x2d],0x9b
  41db4a:	retf   
  41db4b:	or     bh,BYTE PTR [esi-0x91b7feb]
  41db51:	ins    BYTE PTR es:[edi],dx
  41db52:	movaps xmm2,XMMWORD PTR [ebx]
  41db55:	push   0x6b
  41db57:	test   BYTE PTR [esp+eax*2+0x62],bl
  41db5b:	add    ebx,DWORD PTR [edi-0x24]
  41db5e:	fwait
  41db5f:	mov    ecx,0xbe0a4ca5
  41db64:	outs   dx,DWORD PTR ds:[esi]
  41db65:	ficom  DWORD PTR [edx+0x5ed89093]
  41db6b:	test   eax,0x9eb7771f
  41db70:	xchg   ebx,eax
  41db71:	or     DWORD PTR [ecx+0x5b7390ca],eax
  41db77:	test   al,0xbd
  41db79:	jns    0x41dbaf
  41db7b:	pop    ss
  41db7c:	out    0x83,eax
  41db7e:	xchg   BYTE PTR [eax-0x30],ch
  41db81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db82:	pop    esp
  41db83:	sub    cl,BYTE PTR [edi+ecx*8+0x4c]
  41db87:	dec    esi
  41db88:	retf   
  41db89:	push   0xffffffe0
  41db8b:	mov    edx,0xa9d62744
  41db90:	pop    ebx
  41db91:	pushf  
  41db92:	mov    ah,0xb8
  41db94:	push   esp
  41db95:	pop    esp
  41db96:	inc    edi
  41db97:	das    
  41db98:	inc    ebp
  41db99:	dec    ecx
  41db9a:	pop    edi
  41db9b:	sbb    eax,0x8d0813cf
  41dba0:	sbb    eax,0xee011626
  41dba5:	retf   0x95b
  41dba8:	(bad)  
  41dba9:	(bad)  
  41dbaa:	push   ds
  41dbab:	in     eax,dx
  41dbac:	gs mov esi,0xaf63e771
  41dbb2:	test   al,0xcc
  41dbb4:	jmp    0xa7260362
  41dbb9:	jb     0x41db5c
  41dbbb:	cwde   
  41dbbc:	dec    esp
  41dbbd:	add    dh,BYTE PTR [edx-0x3c9443e6]
  41dbc3:	xchg   esi,eax
  41dbc4:	test   al,0xb6
  41dbc6:	mov    ds:0x6e597e6c,eax
  41dbcb:	fdivrp st(4),st
  41dbcd:	xor    eax,0x6fbe39e4
  41dbd2:	mov    dl,0xa2
  41dbd4:	fmul   QWORD PTR [ebp+eax*2-0xf]
  41dbd8:	mov    bl,0xd9
  41dbda:	pop    ds
  41dbdb:	stos   DWORD PTR es:[edi],eax
  41dbdc:	jl     0x41dc30
  41dbde:	cmp    eax,0xdaf3db12
  41dbe3:	adc    dh,0xc
  41dbe6:	cmc    
  41dbe7:	inc    ebx
  41dbe8:	sbb    edi,edi
  41dbea:	jl     0x41dbb9
  41dbec:	sub    al,0x9f
  41dbee:	imul   esi,DWORD PTR [ecx],0xffffff8f
  41dbf1:	daa    
  41dbf2:	jo     0x41db84
  41dbf4:	jb     0x41db99
  41dbf6:	xchg   BYTE PTR ds:0xbd8a2fc3,dl
  41dbfc:	dec    esp
  41dbfd:	xor    ecx,DWORD PTR [ebx]
  41dbff:	jmp    DWORD PTR [ecx]
  41dc01:	xchg   DWORD PTR [edx+ecx*8-0x1f67972e],edx
  41dc08:	sub    BYTE PTR [eax+0x1bd0e379],al
  41dc0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc0f:	push   0xf6134bec
  41dc14:	xchg   DWORD PTR [edx],esp
  41dc16:	sub    ch,BYTE PTR [edx]
  41dc18:	pusha  
  41dc19:	sub    BYTE PTR [eax],dl
  41dc1b:	arpl   WORD PTR [ecx-0x3a4cceef],ax
  41dc21:	ja     0x41dc13
  41dc23:	jle    0x41dbd3
  41dc25:	push   cs
  41dc26:	pop    ss
  41dc27:	push   ds
  41dc28:	sahf   
  41dc29:	xor    eax,0x9e75886
  41dc2e:	jns    0x41dbbc
  41dc30:	cmp    eax,esi
  41dc32:	xor    DWORD PTR [ecx-0x20f177a7],0xffffff90
  41dc39:	dec    BYTE PTR [edx-0x14]
  41dc3c:	push   ss
  41dc3d:	push   ss
  41dc3e:	aaa    
  41dc3f:	jne    0x41dbeb
  41dc41:	fisubr WORD PTR gs:0xa67121d0
  41dc48:	in     al,dx
  41dc49:	rcr    DWORD PTR ds:0xda0a34b5,1
  41dc4f:	pop    ebx
  41dc50:	push   esp
  41dc51:	mov    edx,0xc54973c
  41dc56:	mov    cl,0x7c
  41dc58:	and    DWORD PTR [edi-0x2b],edi
  41dc5b:	add    DWORD PTR [edx+0x22],esi
  41dc5e:	mov    ch,0x61
  41dc60:	add    ecx,DWORD PTR [ecx+edi*4]
  41dc63:	imul   eax,DWORD PTR [edi+0x7bd28dc7],0xfffffffd
  41dc6a:	adc    esp,DWORD PTR ds:0xf0eb9813
  41dc70:	and    eax,0x4eaec6d3
  41dc75:	hlt    
  41dc76:	dec    esp
  41dc77:	inc    esi
  41dc78:	mov    ah,0x1d
  41dc7a:	sbb    BYTE PTR [edi-0x3a],bh
  41dc7d:	and    al,0x2e
  41dc7f:	jo     0x41dc60
  41dc81:	repnz pop esi
  41dc83:	or     al,0xfb
  41dc85:	mov    al,0x44
  41dc87:	ins    BYTE PTR es:[edi],dx
  41dc88:	dec    esp
  41dc89:	xor    DWORD PTR [esi-0x957121e],esi
  41dc8f:	sub    dl,BYTE PTR [eax-0xdf58f8b]
  41dc95:	or     DWORD PTR [esi*4-0x189f36a4],esi
  41dc9c:	push   esi
  41dc9d:	mov    ds:0xc0ebf5c9,al
  41dca2:	repnz cmp dh,ch
  41dca5:	jnp    0x41dcad
  41dca7:	pop    DWORD PTR ds:0x3c231516
  41dcad:	push   esp
  41dcae:	pop    edx
  41dcaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcb0:	xor    esp,DWORD PTR [ebx-0x9]
  41dcb3:	iret   
  41dcb4:	(bad)  
  41dcb5:	fwait
  41dcb6:	aaa    
  41dcb7:	mov    al,ds:0xad268161
  41dcbc:	or     esp,DWORD PTR [esi]
  41dcbe:	mov    eax,0x3a6e2377
  41dcc3:	in     eax,0x24
  41dcc5:	mov    bl,0xa2
  41dcc7:	or     edi,DWORD PTR [eax+0x5bbbadc4]
  41dccd:	dec    ebx
  41dcce:	xchg   DWORD PTR [ecx+0x564d8660],ecx
  41dcd4:	test   BYTE PTR [edx+0xf],0xf1
  41dcd8:	jl     0x41dce8
  41dcda:	cmp    eax,DWORD PTR ds:0x3af4bf03
  41dce0:	ins    BYTE PTR es:[edi],dx
  41dce1:	cwde   
  41dce2:	pop    esi
  41dce3:	cmc    
  41dce4:	and    DWORD PTR [eax],esp
  41dce6:	retf   0x5cf
  41dce9:	lods   al,BYTE PTR ds:[esi]
  41dcea:	fist   DWORD PTR [ebx+0x41]
  41dced:	jo     0x41dca3
  41dcef:	adc    BYTE PTR [ebx-0x5becadf6],0x44
  41dcf6:	ss mov bl,0xec
  41dcf9:	inc    ebp
  41dcfa:	js     0x41dd49
  41dcfc:	sub    cl,dl
  41dcfe:	push   edi
  41dcff:	inc    edx
  41dd00:	fist   DWORD PTR [esp+ecx*1+0x4a6f5099]
  41dd07:	mov    bl,BYTE PTR [edx]
  41dd09:	data16 fst QWORD PTR [ebp-0x36]
  41dd0d:	sbb    esp,DWORD PTR [esi+0x76bbb05c]
  41dd13:	(bad)  [eax+0x19]
  41dd16:	mov    ecx,0xe769db65
  41dd1b:	add    ebp,esi
  41dd1d:	aam    0x65
  41dd1f:	dec    BYTE PTR [ebx-0x6f]
  41dd22:	loope  0x41dca8
  41dd24:	icebp  
  41dd25:	js     0x41dcc8
  41dd27:	xor    ch,dl
  41dd29:	(bad)  
  41dd2a:	mov    ds:0x13862cd5,eax
  41dd2f:	jl     0x41dd80
  41dd31:	repz mov bh,0x62
  41dd34:	pushf  
  41dd35:	mov    ds:0x1a823126,eax
  41dd3a:	jge    0x41dd9e
  41dd3c:	or     BYTE PTR [ecx+0x44b82e67],0x58
  41dd43:	out    dx,al
  41dd44:	pop    eax
  41dd45:	js     0x41dda8
  41dd47:	ror    BYTE PTR [ebx-0x7cc8dbd1],cl
  41dd4d:	(bad)  
  41dd4e:	jae    0x41ddb8
  41dd50:	bswap  esp
  41dd52:	imul   esp,ebx,0x1f
  41dd55:	xchg   ebx,eax
  41dd56:	pop    eax
  41dd57:	lock ins DWORD PTR es:[edi],dx
  41dd59:	sub    edi,DWORD PTR [ebx+0x591052ae]
  41dd5f:	mov    esp,0x1e185ec7
  41dd64:	repz cmp cl,ah
  41dd67:	out    dx,eax
  41dd68:	and    al,0x22
  41dd6a:	mov    esp,0xa56c0e40
  41dd6f:	sbb    edx,ecx
  41dd71:	sbb    BYTE PTR [esi-0x5f],bh
  41dd74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd75:	idiv   DWORD PTR [eax]
  41dd77:	xchg   edx,eax
  41dd78:	mov    bl,0x16
  41dd7a:	and    BYTE PTR [edx],dh
  41dd7c:	jmp    0x41dd90
  41dd7e:	jecxz  0x41dd76
  41dd80:	not    BYTE PTR [ebx+0x1b]
  41dd83:	es sahf 
  41dd85:	fistp  WORD PTR [esi-0x27d5fee4]
  41dd8b:	xor    edi,edx
  41dd8d:	inc    edx
  41dd8e:	(bad)  
  41dd8f:	push   ss
  41dd90:	cmp    BYTE PTR [esi],ah
  41dd92:	inc    edi
  41dd93:	fbld   TBYTE PTR [edx]
  41dd95:	cdq    
  41dd96:	sbb    al,0x7c
  41dd98:	js     0x41ddcb
  41dd9a:	pop    ds
  41dd9b:	sar    BYTE PTR [esi],cl
  41dd9d:	sub    BYTE PTR [edx],ch
  41dd9f:	(bad)  
  41dda0:	or     eax,0x55e54507
  41dda5:	push   esp
  41dda6:	popf   
  41dda7:	ins    BYTE PTR es:[edi],dx
  41dda8:	cwde   
  41dda9:	repnz pop edx
  41ddab:	rcl    bl,cl
  41ddad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddae:	int3   
  41ddaf:	and    BYTE PTR [ebx],al
  41ddb1:	mov    edx,ecx
  41ddb3:	mov    BYTE PTR [ecx-0x13],bl
  41ddb6:	inc    ebx
  41ddb7:	lahf   
  41ddb8:	aam    0x36
  41ddba:	repz sti 
  41ddbc:	pop    eax
  41ddbd:	mov    bl,0x8a
  41ddbf:	psubusb mm7,QWORD PTR [ecx-0x40]
  41ddc3:	shl    BYTE PTR ds:0xd493538a,0x6c
  41ddca:	cmp    ebp,ebx
  41ddcc:	fiadd  DWORD PTR [esi+0x718be148]
  41ddd2:	inc    ecx
  41ddd3:	jno    0x41de44
  41ddd5:	sti    
  41ddd6:	xlat   BYTE PTR ds:[ebx]
  41ddd7:	push   ss
  41ddd8:	stc    
  41ddd9:	mov    WORD PTR [edx-0x6e28388c],ds
  41dddf:	lods   al,BYTE PTR ds:[esi]
  41dde0:	lahf   
  41dde1:	or     ebp,DWORD PTR [edi+ebp*4+0x30]
  41dde5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dde6:	or     DWORD PTR [edx-0x5467ee36],0xffffffac
  41dded:	mov    al,ds:0xd390e6fb
  41ddf2:	sbb    al,0xa5
  41ddf4:	mov    eax,edi
  41ddf6:	adc    eax,ecx
  41ddf8:	pop    ebx
  41ddf9:	dec    esi
  41ddfa:	test   BYTE PTR [esi],dh
  41ddfc:	ss inc esp
  41ddfe:	pop    es
  41ddff:	pop    ss
  41de00:	xchg   ch,dh
  41de02:	sub    BYTE PTR [eax-0x39],ah
  41de05:	ficomp WORD PTR [edi+0x284be8f1]
  41de0b:	or     BYTE PTR [ebx],0x7f
  41de0e:	jo     0x41de1f
  41de10:	push   ebp
  41de11:	adc    ah,cl
  41de13:	stos   BYTE PTR es:[edi],al
  41de14:	hlt    
  41de15:	add    BYTE PTR [edi+0x4078c466],bl
  41de1b:	xor    ebp,eax
  41de1d:	ret    
  41de1e:	cmp    BYTE PTR [esi],bh
  41de20:	cmp    DWORD PTR [eax-0x6ef99d2e],edi
  41de26:	lods   eax,DWORD PTR ds:[esi]
  41de27:	mov    al,ds:0xebe9bf01
  41de2c:	mov    ds:0x4e3793ff,al
  41de31:	push   ecx
  41de32:	imul   ebp,DWORD PTR [ebp-0x6d088c8c],0x4707fdaf
  41de3c:	mov    ecx,0x2f0d87b0
  41de41:	outs   dx,DWORD PTR ds:[esi]
  41de42:	(bad)  
  41de43:	fild   DWORD PTR [esi+0x22639541]
  41de49:	mov    cl,0x2
  41de4b:	and    DWORD PTR [ebx-0x22],eax
  41de4e:	sub    eax,0x2047a96
  41de53:	mov    edi,0x9b21b45c
  41de58:	adc    eax,0x8c14aa45
  41de5d:	aas    
  41de5e:	cmp    DWORD PTR [eax+0x51],0x15
  41de62:	ins    DWORD PTR es:[edi],dx
  41de63:	xbegin 0x3c60fd9e
  41de69:	mov    esi,0x9a13b8de
  41de6e:	fcmovnb st,st(5)
  41de70:	ins    DWORD PTR es:[edi],dx
  41de71:	mov    DWORD PTR [edi-0x16b7ca3d],0x5b9cbc51
  41de7b:	pop    edx
  41de7c:	lock fisttp QWORD PTR [edi+0x36]
  41de80:	ds dec esi
  41de82:	std    
  41de83:	add    eax,0x3775ae92
  41de88:	ins    BYTE PTR es:[edi],dx
  41de89:	inc    ecx
  41de8a:	inc    ebp
  41de8b:	sbb    esi,DWORD PTR [ecx]
  41de8d:	or     BYTE PTR [ecx+0x3dcac33d],0xca
  41de94:	ja     0x41de23
  41de96:	fwait
  41de97:	xchg   edx,eax
  41de98:	mov    cl,0xae
  41de9a:	enter  0x57c5,0xc8
  41de9e:	cmp    DWORD PTR [ecx],esi
  41dea0:	hlt    
  41dea1:	jbe    0x41de96
  41dea3:	sub    DWORD PTR [edi],esp
  41dea5:	les    ebx,FWORD PTR [esi+0x2b]
  41dea8:	outs   dx,DWORD PTR ds:[esi]
  41dea9:	xchg   ecx,eax
  41deaa:	mov    eax,DWORD PTR [esi+0x6614f67e]
  41deb0:	int3   
  41deb1:	mov    edi,DWORD PTR [ecx-0xeb1ed5]
  41deb7:	fidivr DWORD PTR fs:[eax-0x2c]
  41debb:	js     0x41dede
  41debd:	imul   DWORD PTR [ebx-0x3d046e28]
  41dec3:	push   esi
  41dec4:	fnsave [edx+0x436ea9d2]
  41deca:	push   edi
  41decb:	xor    cl,ch
  41decd:	cmp    esp,DWORD PTR [ebx+0x396b9c49]
  41ded3:	int    0x9d
  41ded5:	outs   dx,BYTE PTR ds:[esi]
  41ded6:	pop    esp
  41ded7:	pop    edx
  41ded8:	popa   
  41ded9:	scas   al,BYTE PTR es:[edi]
  41deda:	xchg   edi,eax
  41dedb:	pop    ebp
  41dedc:	scas   al,BYTE PTR es:[edi]
  41dedd:	push   ebp
  41dede:	pop    es
  41dedf:	dec    edx
  41dee0:	stos   DWORD PTR es:[edi],eax
  41dee1:	push   edx
  41dee2:	cmp    eax,0x7c7c0a61
  41dee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dee8:	inc    ebp
  41dee9:	push   cs
  41deea:	dec    edx
  41deeb:	xchg   edi,eax
  41deec:	inc    esp
  41deed:	mov    ecx,0x53c7e4fd
  41def2:	pop    eax
  41def3:	in     eax,0xbd
  41def5:	inc    esp
  41def6:	int3   
  41def7:	shl    DWORD PTR [esi+esi*2],0xc
  41defb:	jns    0x41df3f
  41defd:	add    al,0x70
  41deff:	nop
  41df00:	repnz scas al,BYTE PTR es:[edi]
  41df02:	jp     0x41deb0
  41df04:	xor    edi,eax
  41df06:	xchg   ecx,eax
  41df07:	jmp    0x41df75
  41df09:	sbb    eax,DWORD PTR [eax+edx*8+0x70]
  41df0d:	cmp    DWORD PTR [ebx-0x384b304d],0xffffffea
  41df14:	(bad)
  41df17:	ret    0x596f
  41df1a:	ror    BYTE PTR [edi+0x1880555b],cl
  41df20:	sub    DWORD PTR [eax+esi*4-0x30],ecx
  41df24:	lds    eax,FWORD PTR [ebx+0x1526a504]
  41df2a:	stos   DWORD PTR es:[edi],eax
  41df2b:	sub    eax,0x519418f3
  41df30:	ror    BYTE PTR [ebp-0x51],cl
  41df33:	cld    
  41df34:	cwde   
  41df35:	mov    ebp,0x136a6132
  41df3a:	cmp    esp,DWORD PTR [edx+0xf]
  41df3d:	stos   BYTE PTR es:[edi],al
  41df3e:	xor    eax,0x73400d7f
  41df43:	inc    edx
  41df44:	jmp    0x3b58:0xaf18be2c
  41df4b:	call   0xeb03:0x78242e6e
  41df52:	add    bl,BYTE PTR [ebp-0x7ae8477c]
  41df58:	call   0xfe935320
  41df5d:	bound  esi,QWORD PTR [esi+0x7010c2bd]
  41df63:	out    0x6f,eax
  41df65:	rcl    DWORD PTR ds:0x53d1675c,0xa5
  41df6c:	shl    BYTE PTR [edi-0x4e],1
  41df6f:	sbb    dh,BYTE PTR [ebp+0x79]
  41df72:	daa    
  41df73:	lods   al,BYTE PTR ds:[esi]
  41df74:	push   ds
  41df75:	and    al,0x11
  41df77:	addr16 xchg ebp,eax
  41df79:	sbb    eax,0x38e68d89
  41df7e:	jl     0x41df9f
  41df80:	loop   0x41df32
  41df82:	aam    0x5c
  41df84:	ret    
  41df85:	or     ebp,DWORD PTR [ecx-0x49]
  41df88:	or     al,0x8e
  41df8a:	jp     0x41df4f
  41df8c:	fwait
  41df8d:	xor    DWORD PTR [ebx],ebp
  41df8f:	into   
  41df90:	stc    
  41df91:	mov    eax,0x31ecc87
  41df96:	mov    bh,0xec
  41df98:	sbb    BYTE PTR [edi-0x7eab0a8a],cl
  41df9e:	sub    al,0x37
  41dfa0:	inc    DWORD PTR [edi+0x73ab12e8]
  41dfa6:	cmp    BYTE PTR [ebp-0x423cc642],bh
  41dfac:	jmp    0x41df4f
  41dfae:	mov    ecx,0x41de7b9d
  41dfb3:	mov    edx,0x31237f0c
  41dfb8:	(bad)  
  41dfb9:	js     0x41df4b
  41dfbb:	lock mov ds:0x3f0effcc,eax
  41dfc1:	in     eax,dx
  41dfc2:	sbb    edi,DWORD PTR [ebp-0x5c]
  41dfc5:	pop    ds
  41dfc6:	inc    edi
  41dfc7:	sbb    BYTE PTR [esi-0x2deea709],bh
  41dfcd:	inc    ecx
  41dfce:	shl    BYTE PTR [esi-0x55],0xa8
  41dfd2:	icebp  
  41dfd3:	xchg   esi,eax
  41dfd4:	enter  0xae3f,0x60
  41dfd8:	xchg   ebx,eax
  41dfd9:	scas   al,BYTE PTR es:[edi]
  41dfda:	cwde   
  41dfdb:	data16 jbe 0x41dfee
  41dfde:	out    dx,al
  41dfdf:	imul   eax,DWORD PTR [ecx],0xff5d25a6
  41dfe5:	jge    0x41dff9
  41dfe7:	xor    bl,dh
  41dfe9:	xchg   esp,eax
  41dfea:	bound  edi,QWORD PTR [eax-0x1f]
  41dfed:	mov    DWORD PTR [edi],edi
  41dfef:	mul    cl
  41dff1:	mov    esp,0x70855616
  41dff6:	outs   dx,DWORD PTR ds:[esi]
  41dff7:	mov    bl,BYTE PTR [edx+0xb]
  41dffa:	(bad)  
  41dffb:	cmp    eax,0xe2af81c3
  41e000:	xchg   ebp,eax
  41e001:	aas    
  41e002:	pop    ss
  41e003:	mov    ds:0x2b6a88ef,eax
  41e008:	call   0x973f865f
  41e00d:	mov    esi,0xb7be876d
  41e012:	lds    ebx,FWORD PTR [edx]
  41e014:	add    eax,0x1873abf7
  41e019:	push   ebp
  41e01a:	in     al,0xfa
  41e01c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e01d:	in     al,0x66
  41e01f:	je     0x41dfdb
  41e021:	mov    DWORD PTR [edx-0x54],ecx
  41e024:	jl     0x41e035
  41e026:	aaa    
  41e027:	sub    al,0x3a
  41e029:	cli    
  41e02a:	add    BYTE PTR [ebp+0x6cb59265],dh
  41e030:	loope  0x41e072
  41e032:	push   edx
  41e033:	popa   
  41e034:	(bad)  
  41e035:	adc    ecx,DWORD PTR [edx-0x218533b9]
  41e03b:	dec    edx
  41e03c:	dec    edx
  41e03d:	pop    ss
  41e03e:	mov    ebx,DWORD PTR [edx-0x6b]
  41e041:	lods   eax,DWORD PTR ds:[esi]
  41e042:	dec    ecx
  41e043:	mov    cl,0x4e
  41e045:	push   ss
  41e046:	mov    dh,BYTE PTR [ebp+ecx*4-0x2a422d5a]
  41e04d:	out    0x75,al
  41e04f:	ss jp  0x41e098
  41e052:	test   eax,0x12edc907
  41e057:	mov    dl,0xf
  41e059:	retf   
  41e05a:	xor    DWORD PTR [eax+esi*4-0x3d2cdcbf],edx
  41e061:	push   ebx
  41e062:	(bad)  
  41e063:	rcr    ecx,1
  41e065:	mov    ?,WORD PTR [eax-0x66]
  41e068:	clc    
  41e069:	test   BYTE PTR [eax],cl
  41e06b:	or     al,0x46
  41e06d:	xchg   esp,eax
  41e06e:	cli    
  41e06f:	xchg   BYTE PTR [ebx+0x1a],al
  41e072:	in     eax,0xa7
  41e074:	pushf  
  41e075:	psrad  mm6,mm3
  41e078:	stos   DWORD PTR es:[edi],eax
  41e079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e07a:	adc    BYTE PTR [edi+0x28d6a1db],bl
  41e080:	out    dx,eax
  41e081:	scas   al,BYTE PTR es:[edi]
  41e082:	jmp    0xaa63:0xee86f64a
  41e089:	xor    ecx,DWORD PTR [eax-0x7c8ece48]
  41e08f:	sub    al,0x79
  41e091:	idiv   DWORD PTR [edi-0x7fb8e526]
  41e097:	mov    esi,0xf13a9152
  41e09c:	mov    ebx,0x14634f6a
  41e0a1:	mov    bl,0xca
  41e0a3:	into   
  41e0a4:	(bad)  
  41e0a5:	and    al,0xc4
  41e0a7:	push   ss
  41e0a8:	jb     0x41e0bb
  41e0aa:	add    eax,0xea1b36d6
  41e0af:	scas   eax,DWORD PTR es:[edi]
  41e0b0:	inc    ebx
  41e0b1:	(bad)  
  41e0b2:	mov    edx,0xedb1e170
  41e0b7:	inc    edx
  41e0b8:	mov    gs,ebx
  41e0ba:	aas    
  41e0bb:	jbe    0x41e097
  41e0bd:	sub    esi,DWORD PTR [eax+0x4ac3808a]
  41e0c3:	outs   dx,DWORD PTR ds:[esi]
  41e0c4:	jp     0x41e06c
  41e0c6:	jle    0x41e120
  41e0c8:	pop    ebx
  41e0c9:	sbb    bl,BYTE PTR [edx+0x569c6157]
  41e0cf:	mov    esi,gs
  41e0d1:	mov    eax,ds:0x7cf70fb6
  41e0d6:	adc    al,0x7d
  41e0d8:	xchg   DWORD PTR ds:0x4454d039,esi
  41e0de:	mov    ds:0xd5e263dd,eax
  41e0e3:	xchg   edx,eax
  41e0e4:	or     esi,0x47
  41e0e7:	popa   
  41e0e8:	adc    eax,0xb0b5d3a2
  41e0ed:	int    0x61
  41e0ef:	dec    ebx
  41e0f0:	(bad)  
  41e0f1:	fnsave [ebx]
  41e0f3:	mov    esi,0xdfb7c5dd
  41e0f8:	rcl    BYTE PTR [ecx-0x48],1
  41e0fb:	adc    edi,DWORD PTR [edi]
  41e0fd:	jmp    0xc2d0bcfd
  41e102:	fld    TBYTE PTR [edi+ecx*8]
  41e105:	fdivrp st(6),st
  41e107:	cmp    al,0x5f
  41e109:	pop    ebp
  41e10a:	pop    esi
  41e10b:	mov    dl,0xd
  41e10d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e10e:	mov    BYTE PTR ds:0xad0b6b7f,al
  41e114:	add    dl,al
  41e116:	mov    ebp,0xf5f07abd
  41e11b:	push   ecx
  41e11c:	sbb    eax,0xb1b7d086
  41e121:	xchg   ebp,eax
  41e122:	mov    esp,DWORD PTR [ebx-0x7c]
  41e125:	cmp    edx,DWORD PTR [esi+0x51252be2]
  41e12b:	push   ebp
  41e12c:	jmp    0xf1dbcded
  41e131:	and    eax,0xacca53c3
  41e136:	pop    es
  41e137:	sbb    BYTE PTR [edi],dl
  41e139:	dec    ebx
  41e13a:	jmp    0x2ce7:0x2bea3640
  41e141:	pop    ebx
  41e142:	pushf  
  41e143:	mov    ax,WORD PTR [edi]
  41e146:	pop    esi
  41e147:	cwde   
  41e148:	pop    ebp
  41e149:	loop   0x41e14b
  41e14b:	mov    ?,WORD PTR [edx-0x73871aeb]
  41e151:	jl     0x41e11f
  41e153:	lea    eax,[ecx]
  41e155:	outs   dx,BYTE PTR ds:[esi]
  41e156:	inc    BYTE PTR [ebp-0x7a]
  41e159:	add    eax,0xfd3510cc
  41e15e:	push   ds
  41e15f:	fsub   DWORD PTR [ebx+0x3e]
  41e162:	jmp    0x7490:0xe14a890a
  41e169:	mov    ecx,0xbd21853
  41e16e:	push   0xfc507abf
  41e173:	call   DWORD PTR [eax-0x26]
  41e176:	push   esi
  41e177:	jmp    0x69d2:0x76191431
  41e17e:	(bad)  
  41e180:	and    BYTE PTR [ebx],0x11
  41e183:	loop   0x41e1f7
  41e185:	inc    esp
  41e186:	adc    cl,BYTE PTR [ecx]
  41e188:	mov    bh,0x30
  41e18a:	(bad)  
  41e18c:	xor    edi,DWORD PTR [edi]
  41e18e:	adc    cl,BYTE PTR [esi+0x37ca4d97]
  41e194:	jge    0x41e17f
  41e196:	jnp    0x41e19c
  41e198:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e199:	call   0x63c39dc6
  41e19e:	sub    ah,0xe
  41e1a1:	jl     0x41e21d
  41e1a3:	sub    esp,DWORD PTR [ebx+ecx*2]
  41e1a6:	sti    
  41e1a7:	outs   dx,BYTE PTR ds:[esi]
  41e1a8:	enter  0xb9f9,0xe2
  41e1ac:	std    
  41e1ad:	pop    ebp
  41e1ae:	lahf   
  41e1af:	sub    al,0x5e
  41e1b1:	popf   
  41e1b2:	mov    BYTE PTR [ecx-0x6d],al
  41e1b5:	cwde   
  41e1b6:	mov    ds:0x7d2b6212,eax
  41e1bb:	mov    cl,0xc7
  41e1bd:	jecxz  0x41e210
  41e1bf:	xchg   ebp,eax
  41e1c0:	push   ebp
  41e1c1:	push   ds
  41e1c2:	bound  edi,QWORD PTR [esi]
  41e1c4:	mov    esp,0x460cf946
  41e1c9:	call   0x129ea3cf
  41e1ce:	cmc    
  41e1cf:	push   eax
  41e1d0:	mov    ds:0x2016753e,al
  41e1d5:	aam    0xb3
  41e1d7:	test   eax,0xb2d68786
  41e1dc:	pop    DWORD PTR [eax+ebp*1-0x2c6cb821]
  41e1e3:	scas   al,BYTE PTR es:[edi]
  41e1e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1e5:	cmc    
  41e1e6:	push   ss
  41e1e7:	mov    eax,0x1297cc7
  41e1ec:	cmp    DWORD PTR [ebx],edx
  41e1ee:	fadd   DWORD PTR ds:0xdb88a92
  41e1f4:	xchg   ecx,eax
  41e1f5:	mov    cs,WORD PTR [ebp-0x74]
  41e1f8:	test   al,0x7e
  41e1fa:	inc    esi
  41e1fb:	mov    esp,0x18e4ccd0
  41e200:	cs pop esp
  41e202:	sub    BYTE PTR ss:[edi-0xa],dl
  41e206:	mov    ds:0xb7c454b4,eax
  41e20b:	xor    eax,0x6ec1826b
  41e210:	icebp  
  41e211:	xor    eax,0x677be828
  41e216:	shl    esp,0x1b
  41e219:	in     al,0x7b
  41e21b:	xor    al,dh
  41e21d:	ret    0x9293
  41e220:	xor    eax,0x55ec932
  41e225:	hlt    
  41e226:	add    edi,0xda5d5d12
  41e22c:	test   DWORD PTR [edi],edi
  41e22e:	adc    DWORD PTR [ecx-0x78cd978],esi
  41e234:	xchg   esp,eax
  41e235:	jno    0x41e233
  41e237:	out    dx,al
  41e238:	push   eax
  41e239:	loop   0x41e1e4
  41e23b:	into   
  41e23c:	xchg   ecx,eax
  41e23d:	xchg   edx,eax
  41e23e:	ja     0x41e28c
  41e240:	mov    al,ds:0x5f7ea2a4
  41e245:	es dec ecx
  41e247:	out    dx,eax
  41e248:	popf   
  41e249:	out    0x0,al
  41e24b:	sub    bh,dh
  41e24d:	jmp    0xeea2:0xe1d25756
  41e254:	cmp    BYTE PTR [eax+ecx*1],0xf1
  41e258:	and    esi,ebp
  41e25a:	jecxz  0x41e2b7
  41e25c:	ds in  eax,0x9a
  41e25f:	aaa    
  41e260:	scas   eax,DWORD PTR es:[edi]
  41e261:	(bad)  
  41e262:	out    dx,al
  41e263:	mov    WORD PTR [eax+eax*4+0x5a],ss
  41e267:	imul   eax,ebp,0x50ba3358
  41e26d:	hlt    
  41e26e:	xchg   edx,eax
  41e26f:	inc    eax
  41e270:	lods   al,BYTE PTR ds:[esi]
  41e271:	dec    eax
  41e272:	xor    bh,cl
  41e274:	daa    
  41e275:	mov    al,ds:0x88bdf184
  41e27a:	ds scas eax,DWORD PTR es:[edi]
  41e27c:	stc    
  41e27d:	es pushf 
  41e27f:	fwait
  41e280:	jo     0x41e29c
  41e282:	xchg   esp,eax
  41e283:	inc    eax
  41e284:	jo     0x41e2af
  41e286:	and    DWORD PTR [ebx+0x72],0xfffffffc
  41e28a:	pop    edi
  41e28b:	sbb    DWORD PTR [eax],esp
  41e28d:	push   0xffffffe8
  41e28f:	push   esp
  41e290:	jae    0x41e27d
  41e292:	xchg   ecx,eax
  41e293:	mov    DWORD PTR [edx-0x73],ebp
  41e296:	xchg   edi,eax
  41e297:	outs   dx,DWORD PTR ds:[esi]
  41e298:	jno    0x41e2c6
  41e29a:	inc    eax
  41e29b:	jmp    0xc71f:0xf2ac8a61
  41e2a2:	sbb    eax,0x9749fbdc
  41e2a7:	outs   dx,BYTE PTR ds:[esi]
  41e2a8:	mov    ch,0x8b
  41e2aa:	push   esp
  41e2ab:	xchg   edx,eax
  41e2ac:	test   DWORD PTR [ebx+0x1685a8e8],0x5fd5ee0e
  41e2b6:	aad    0x77
  41e2b8:	add    BYTE PTR [ecx-0x68],bh
  41e2bb:	add    eax,0xa5a099e7
  41e2c0:	rcr    DWORD PTR [ebp*1+0x2a07ca64],cl
  41e2c7:	test   al,0xd6
  41e2c9:	inc    esp
  41e2ca:	in     eax,0x63
  41e2cc:	es jecxz 0x41e31e
  41e2cf:	inc    esi
  41e2d0:	imul   esp,eax,0xab7a3ba
  41e2d6:	adc    eax,0x1178fa13
  41e2db:	add    DWORD PTR [esi+eax*8-0x3f],edi
  41e2df:	loopne 0x41e2cc
  41e2e1:	repnz fwait
  41e2e3:	jns    0x41e2c8
  41e2e5:	xor    eax,0xacc9e61d
  41e2ea:	iret   
  41e2eb:	mov    bl,0x8b
  41e2ed:	jb     0x77b86020
  41e2f3:	push   ss
  41e2f4:	in     al,dx
  41e2f5:	jnp    0x41e316
  41e2f7:	dec    ebx
  41e2f8:	push   es
  41e2f9:	jp     0x41e33b
  41e2fb:	out    dx,al
  41e2fc:	jb     0x41e282
  41e2fe:	push   esp
  41e2ff:	pop    ds
  41e300:	js     0x41e2e6
  41e302:	inc    esi
  41e303:	xlat   BYTE PTR ds:[ebx]
  41e304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e305:	xor    DWORD PTR [edi+esi*2-0x6dfb850],edi
  41e30c:	test   eax,0x408c8d39
  41e311:	jne    0x41e2a4
  41e313:	mov    ds:0x76cc304d,al
  41e318:	cwde   
  41e319:	das    
  41e31a:	mov    fs,ecx
  41e31c:	nop
  41e31d:	hlt    
  41e31e:	mov    ah,0x12
  41e320:	ret    0xef25
  41e323:	jl     0x41e334
  41e325:	add    cl,BYTE PTR [ebx+esi*1+0xf283c7]
  41e32c:	cmp    eax,0x70941e0f
  41e331:	jne    0x41e365
  41e337:	cmp    edx,0xffffffff
  41e33a:	jne    0x41e365
  41e340:	mov    eax,DWORD PTR [ebp-0x4]
  41e343:	movsx  eax,BYTE PTR [eax]
  41e346:	cdq    
  41e347:	add    eax,ebx
  41e349:	adc    edx,0xffffffff
  41e34c:	xor    eax,edi
  41e34e:	xor    edx,0x0
  41e351:	cmp    eax,0x70941e1c
  41e356:	jne    0x41e365
  41e35c:	cmp    edx,0xffffffff
  41e35f:	je     0x41e37c
  41e365:	mov    eax,DWORD PTR [ebp-0x10]
  41e368:	xor    eax,ecx
  41e36a:	mov    edx,0xffcd8d0d
  41e36f:	sub    edx,eax
  41e371:	add    DWORD PTR [ebp-0x4],edx
  41e374:	mov    eax,DWORD PTR [ebp-0x4]
  41e377:	jmp    0x41bf5a
  41e37c:	mov    eax,DWORD PTR [ebp-0x14]
  41e37f:	mov    eax,DWORD PTR [eax]
  41e381:	mov    edx,DWORD PTR [ebp-0x4]
  41e384:	mov    edx,DWORD PTR [edx+0x3c]
  41e387:	lea    eax,[edx+eax*8+0x78]
  41e38b:	mov    edx,DWORD PTR [ebp-0x4]
  41e38e:	mov    eax,DWORD PTR [eax+edx*1]
  41e391:	mov    DWORD PTR [ebp-0x8],eax
  41e394:	mov    eax,DWORD PTR [ebp+0x8]
  41e397:	xor    eax,ecx
  41e399:	add    eax,esi
  41e39b:	mov    DWORD PTR [ebp-0x14],eax
  41e39e:	mov    eax,DWORD PTR [ebp+0x8]
  41e3a1:	mov    edx,DWORD PTR [ebp-0x8]
  41e3a4:	xor    eax,ecx
  41e3a6:	add    eax,esi
  41e3a8:	cmp    edx,eax
  41e3aa:	jne    0x41e3c8
  41e3b0:	mov    eax,DWORD PTR [ebp+0xc]
  41e3b3:	xor    eax,ecx
  41e3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3b8:	add    eax,esi
  41e3ba:	imul   eax,ecx
  41e3bd:	mov    DWORD PTR [ebp-0x8],eax
  41e3c0:	push   DWORD PTR [ebp+0x18]
  41e3c3:	jmp    0x4207e6
  41e3c8:	mov    eax,DWORD PTR [ebp-0x8]
  41e3cb:	mov    ecx,DWORD PTR [ebp-0x4]
  41e3ce:	jmp    0x420791
  41e3d3:	test   BYTE PTR [eax+0x3d],cl
  41e3d6:	lock mov cl,0x80
  41e3d9:	or     BYTE PTR [eax],0x6f
  41e3dc:	enter  0xd93f,0xb
  41e3e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3e1:	lods   eax,DWORD PTR ds:[esi]
  41e3e2:	outs   dx,BYTE PTR ds:[esi]
  41e3e3:	adc    ebp,edx
  41e3e5:	add    BYTE PTR [ebx-0x7c7ca327],0xae
  41e3ec:	mov    cl,0x2b
  41e3ee:	sub    ebp,DWORD PTR [esi-0x43]
  41e3f1:	sbb    ebx,esp
  41e3f3:	addr16 in eax,dx
  41e3f5:	shl    ch,cl
  41e3f7:	inc    ebp
  41e3f8:	push   ds
  41e3f9:	loopne 0x41e44b
  41e3fb:	jbe    0x41e3a3
  41e3fd:	out    dx,al
  41e3fe:	ret    0x6caa
  41e401:	sub    bh,BYTE PTR [edi-0x3c]
  41e404:	in     eax,dx
  41e405:	test   esp,ebp
  41e407:	imul   eax,DWORD PTR [ecx+0x409e222f],0xe4e2f918
  41e411:	jmp    0x41e478
  41e413:	jmp    0xdf7dce79
  41e418:	je     0x41e428
  41e41a:	out    0xec,al
  41e41c:	pusha  
  41e41d:	push   ebp
  41e41e:	sahf   
  41e41f:	stc    
  41e420:	nop
  41e421:	cmp    BYTE PTR [eax+0x4202b785],cl
  41e427:	xchg   BYTE PTR [edi+ebx*2-0x5],cl
  41e42b:	jno    0x41e49f
  41e42d:	fcom   DWORD PTR fs:[edx*2+0x717c967a]
  41e435:	cdq    
  41e436:	(bad)  
  41e437:	jmp    0x2bfc4a3e
  41e43c:	sbb    esp,eax
  41e43e:	pushf  
  41e43f:	inc    ecx
  41e440:	(bad)  
  41e441:	(bad)  
  41e442:	sub    bl,bl
  41e444:	(bad)  
  41e445:	mov    esi,0x84488ad3
  41e44a:	int3   
  41e44b:	inc    edx
  41e44c:	jb     0x41e453
  41e44e:	call   0x279f:0x8af247c1
  41e455:	call   0x9abe:0x2c7137c2
  41e45c:	add    edi,esp
  41e45e:	div    BYTE PTR [eax-0x7d01b6a2]
  41e464:	jo     0x41e402
  41e466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e467:	mov    ds:0xfbd2289c,al
  41e46c:	lea    esi,[eax]
  41e46e:	arpl   WORD PTR [edi+0xd533dd5],si
  41e474:	test   BYTE PTR [eax+0x66e4e58c],0xb3
  41e47b:	add    dl,bl
  41e47d:	arpl   WORD PTR [esi+edi*4-0x46],bp
  41e481:	adc    eax,0xec4eaf64
  41e486:	sbb    eax,0xcfb6646
  41e48b:	hlt    
  41e48c:	jle    0x41e4bb
  41e48e:	or     ebx,ebp
  41e490:	mov    cl,0x54
  41e492:	sbb    eax,0xec72fa22
  41e497:	jle    0x41e420
  41e499:	int    0x8f
  41e49b:	mov    ds:0x875c64fe,al
  41e4a0:	imul   eax,DWORD PTR [eax-0x1dbe31d8],0xffffffcc
  41e4a7:	pop    eax
  41e4a8:	xor    ebx,DWORD PTR ds:0x431d584e
  41e4ae:	add    eax,0xacf80763
  41e4b3:	in     eax,0x19
  41e4b5:	cmp    BYTE PTR [edx+ebp*4],ah
  41e4b8:	push   eax
  41e4b9:	int    0xa1
  41e4bb:	int    0x3
  41e4bd:	fcmovnbe st,st(5)
  41e4bf:	repnz adc eax,0x9c31462e
  41e4c5:	fnstcw WORD PTR [ebx]
  41e4c7:	jmp    0x41e4cf
  41e4c9:	rol    BYTE PTR [ecx+eiz*4],0x68
  41e4cd:	rcr    BYTE PTR [ecx-0x35286eac],cl
  41e4d3:	adc    cl,BYTE PTR [edx-0x5ee1ec03]
  41e4d9:	aas    
  41e4da:	or     al,dh
  41e4dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4dd:	mov    edi,0x3ea99c06
  41e4e2:	hlt    
  41e4e3:	jg     0x41e4a0
  41e4e5:	jmp    0xafbc48cd
  41e4ea:	dec    esi
  41e4eb:	js     0x41e496
  41e4ed:	mov    ch,0xe
  41e4ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4f0:	pushf  
  41e4f1:	popa   
  41e4f2:	jl     0x41e4c8
  41e4f4:	jl     0x41e574
  41e4f6:	mov    edx,0x8022a1f1
  41e4fb:	rol    DWORD PTR ds:0x6a115498,cl
  41e501:	mov    ecx,0x5deeff55
  41e506:	es popf 
  41e508:	bnd jbe 0x41e4cb
  41e50b:	ret    
  41e50c:	fisttp WORD PTR [ebx-0x3c3591f3]
  41e512:	sub    DWORD PTR [eax+0x3bed6207],edi
  41e518:	and    BYTE PTR [ecx],bh
  41e51a:	cmp    al,0xcd
  41e51c:	mov    bl,0xd5
  41e51e:	pop    ss
  41e51f:	and    DWORD PTR [ecx-0x52f76a3c],edi
  41e525:	jle    0x41e4e4
  41e527:	pop    ss
  41e528:	push   cs
  41e529:	adc    eax,0x4e47841c
  41e52e:	test   DWORD PTR [eax-0x6f],esp
  41e531:	test   DWORD PTR [edx-0x46],edi
  41e534:	mov    eax,0x8ba4613
  41e539:	in     eax,0x5c
  41e53b:	jno    0x41e4da
  41e53d:	scas   al,BYTE PTR es:[edi]
  41e53e:	inc    eax
  41e53f:	jmp    0xc229856d
  41e544:	std    
  41e545:	outs   dx,BYTE PTR ds:[esi]
  41e546:	cmp    eax,0x2ca13fb3
  41e54b:	cmp    eax,ebp
  41e54d:	and    eax,edx
  41e54f:	cmp    al,0x22
  41e551:	mul    BYTE PTR [ebx]
  41e553:	jmp    0xe6e1a4f1
  41e558:	dec    ebx
  41e559:	cmp    ah,bl
  41e55b:	cmp    BYTE PTR [ecx],dl
  41e55d:	es in  eax,0x81
  41e560:	or     al,0xd1
  41e562:	cmp    DWORD PTR [ecx],edi
  41e564:	xor    dl,cl
  41e566:	aaa    
  41e567:	mov    cl,0x91
  41e569:	iret   
  41e56a:	daa    
  41e56b:	leave  
  41e56c:	lea    eax,[edx+0x73]
  41e56f:	or     DWORD PTR [esp+edx*4+0x65dac1d0],0x8
  41e577:	or     cl,bl
  41e579:	push   eax
  41e57a:	pop    ecx
  41e57b:	adc    dh,BYTE PTR ds:0x4284087e
  41e581:	or     BYTE PTR gs:0x1a921a7b,dh
  41e588:	inc    ebp
  41e589:	in     al,dx
  41e58a:	sbb    eax,DWORD PTR [edx]
  41e58c:	mov    dh,0x2
  41e58e:	sub    DWORD PTR [ebp+ebp*2-0x6ef4d507],ecx
  41e595:	xchg   ebp,eax
  41e596:	fbstp  TBYTE PTR [edi-0x58ba1c26]
  41e59c:	iret   
  41e59d:	int3   
  41e59e:	popa   
  41e59f:	sahf   
  41e5a0:	dec    eax
  41e5a1:	test   BYTE PTR [edi],bl
  41e5a3:	pop    ss
  41e5a4:	out    0x9c,eax
  41e5a6:	scas   al,BYTE PTR es:[edi]
  41e5a7:	test   BYTE PTR [edx+0x58],al
  41e5aa:	pop    edx
  41e5ab:	cdq    
  41e5ac:	pop    ss
  41e5ad:	sub    DWORD PTR [ebx-0x4d],ecx
  41e5b0:	outs   dx,BYTE PTR ds:[esi]
  41e5b1:	jge    0x41e5f3
  41e5b3:	xchg   ecx,eax
  41e5b4:	aaa    
  41e5b5:	jns    0x41e598
  41e5b7:	iret   
  41e5b8:	aad    0x48
  41e5ba:	and    DWORD PTR [esi],ecx
  41e5bc:	or     DWORD PTR [esi+0x65a4d74a],ebx
  41e5c2:	imul   ebx,ecx,0xfe502641
  41e5c8:	dec    ecx
  41e5c9:	das    
  41e5ca:	xchg   esp,eax
  41e5cb:	pop    ss
  41e5cc:	leave  
  41e5cd:	jo     0x41e5b7
  41e5cf:	int    0x69
  41e5d1:	sbb    al,0x17
  41e5d3:	ror    BYTE PTR [ecx+0x62],0x1b
  41e5d7:	pushf  
  41e5d8:	and    DWORD PTR [ebx],edi
  41e5da:	sbb    dh,BYTE PTR [eax+ebx*1+0x10]
  41e5de:	push   esp
  41e5df:	dec    ecx
  41e5e0:	mov    esp,0x25b18457
  41e5e5:	stos   BYTE PTR es:[edi],al
  41e5e6:	sub    BYTE PTR [edi+0x46],ch
  41e5e9:	cmp    DWORD PTR [eax-0xc],edx
  41e5ec:	in     al,dx
  41e5ed:	sbb    eax,0xe99f1147
  41e5f2:	les    ebp,FWORD PTR [edi-0x3439c730]
  41e5f8:	mov    bh,0x1b
  41e5fa:	loopne 0x41e5a6
  41e5fc:	add    ch,BYTE PTR [ecx-0x73]
  41e5ff:	sar    DWORD PTR [esi],cl
  41e601:	in     al,0x97
  41e603:	inc    BYTE PTR [esi+0x2f]
  41e606:	mov    ebp,0xd00582e3
  41e60b:	mov    dh,0x7c
  41e60d:	pop    edx
  41e60e:	xchg   esp,eax
  41e60f:	add    DWORD PTR [esp+edx*2-0x55972a7d],esi
  41e616:	ds pop esi
  41e618:	nop
  41e619:	dec    ebx
  41e61a:	jmp    0x41e5de
  41e61c:	sbb    ch,BYTE PTR [eax]
  41e61e:	scas   eax,DWORD PTR es:[edi]
  41e61f:	hlt    
  41e620:	jmp    0x41e66f
  41e622:	mov    ds:0xfead1647,al
  41e627:	lea    ecx,[ecx]
  41e629:	add    ecx,DWORD PTR [edi+edi*8-0x5c]
  41e62d:	adc    al,0xa3
  41e62f:	or     edi,0xffffff87
  41e632:	and    BYTE PTR [ebp+0x273548da],ch
  41e638:	dec    ecx
  41e639:	jecxz  0x41e6b5
  41e63b:	int    0xe8
  41e63d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e63e:	mov    ebp,0xde3abf74
  41e643:	sbb    dh,bh
  41e645:	inc    esi
  41e646:	xor    BYTE PTR [ecx-0xf5287ce],bl
  41e64c:	mov    ds:0xa65149be,al
  41e651:	ror    BYTE PTR [edi],1
  41e653:	in     al,0x88
  41e655:	jecxz  0x41e5ff
  41e657:	nop
  41e658:	or     ch,0x36
  41e65b:	dec    edi
  41e65c:	jecxz  0x41e65e
  41e65e:	sub    bh,BYTE PTR [ecx+0x7654ed4a]
  41e664:	mov    DWORD PTR [esp+edx*1],ebp
  41e667:	cmp    al,0x90
  41e669:	jl     0x41e69f
  41e66b:	retfw  0xeed2
  41e66f:	sbb    eax,0x8f78b697
  41e674:	out    0x66,al
  41e676:	pop    edi
  41e677:	in     eax,dx
  41e678:	jl     0x41e618
  41e67a:	stos   DWORD PTR es:[edi],eax
  41e67b:	outs   dx,DWORD PTR ds:[esi]
  41e67c:	mov    ebx,0xa6eb47c7
  41e681:	out    dx,al
  41e682:	cmp    DWORD PTR [edi-0x7d],0xf056c251
  41e689:	cmp    ch,BYTE PTR [edi-0x17]
  41e68c:	cmp    ebx,DWORD PTR [edi]
  41e68e:	sar    DWORD PTR ds:0xb29ec6cd,1
  41e694:	shr    BYTE PTR [esi+0x40d1a089],cl
  41e69a:	push   es
  41e69b:	mov    ch,BYTE PTR [ebx-0x2f25cdef]
  41e6a1:	popa   
  41e6a2:	xor    BYTE PTR [edi-0x3eaf6ab2],0x39
  41e6a9:	sbb    edx,esi
  41e6ab:	arpl   WORD PTR [ebp+edi*2+0x2c],cx
  41e6af:	stos   DWORD PTR es:[edi],eax
  41e6b0:	out    dx,eax
  41e6b1:	jge    0x41e6b0
  41e6b3:	jbe    0x41e63d
  41e6b5:	or     DWORD PTR [ebx+0x6afec400],esp
  41e6bb:	enter  0xdd3d,0x9f
  41e6bf:	inc    esp
  41e6c0:	and    cl,BYTE PTR [eax+0x2859c035]
  41e6c6:	cmp    esi,ebp
  41e6c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6c9:	stc    
  41e6ca:	gs push edx
  41e6cc:	sub    eax,0x6653be10
  41e6d1:	in     al,0x7a
  41e6d3:	call   0xbe47:0x97a63e3f
  41e6da:	adc    DWORD PTR [ebp+0x6796c3f9],0x9d67bd17
  41e6e4:	shr    BYTE PTR ds:0x2082c56f,cl
  41e6ea:	test   al,0x7a
  41e6ec:	or     DWORD PTR [ebx+0x3ab606f0],0x30043b32
  41e6f6:	jmp    0xf284:0xbaceadde
  41e6fd:	mov    cl,0x68
  41e6ff:	in     eax,dx
  41e700:	pop    eax
  41e701:	mov    es,WORD PTR [esi-0x3d]
  41e704:	push   esp
  41e705:	out    0x2,eax
  41e707:	rol    BYTE PTR [esi+0xb832b12],0xb3
  41e70e:	mov    bl,0xda
  41e710:	mov    esp,0xff2d57dd
  41e715:	pusha  
  41e716:	sub    edx,DWORD PTR [esi-0x628db3ab]
  41e71c:	add    esp,DWORD PTR ss:[ebp-0x6de56f15]
  41e723:	dec    edi
  41e724:	sbb    dl,dh
  41e726:	inc    ebx
  41e727:	stc    
  41e728:	or     al,0x40
  41e72a:	aas    
  41e72b:	lahf   
  41e72c:	retf   
  41e72d:	mov    ecx,0x28feab62
  41e732:	jae    0x41e701
  41e734:	fwait
  41e735:	sub    ebp,DWORD PTR [edi]
  41e737:	dec    ebx
  41e738:	mov    WORD PTR [ecx+0x5f],gs
  41e73b:	jbe    0x41e749
  41e73d:	test   esp,esp
  41e73f:	out    0xbc,al
  41e741:	mov    ebx,0x21416f7b
  41e746:	mov    dl,al
  41e748:	lds    edi,FWORD PTR [eax]
  41e74a:	mov    al,0x54
  41e74c:	ds popa 
  41e74e:	or     DWORD PTR [edx+eax*2+0x24],0xecdd628c
  41e756:	fcomp  QWORD PTR [edi]
  41e758:	mov    ch,0x89
  41e75a:	bound  esp,QWORD PTR [edx+0x55]
  41e75d:	push   0xd
  41e75f:	jecxz  0x41e7d6
  41e761:	push   ecx
  41e762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e763:	imul   ecx,ebx,0xc944cc2a
  41e769:	fdiv   QWORD PTR [eax-0x35]
  41e76c:	cmp    al,0xa4
  41e76e:	mov    esp,0xffcfd4a1
  41e773:	inc    esi
  41e774:	jbe    0x41e7c6
  41e776:	cmp    BYTE PTR [ebp-0x71be892f],dl
  41e77c:	dec    edi
  41e77d:	lods   al,BYTE PTR ds:[esi]
  41e77e:	push   0xffffffd3
  41e780:	test   DWORD PTR [edx],ecx
  41e782:	stc    
  41e783:	fsub   st,st(7)
  41e785:	(bad)  
  41e786:	sti    
  41e787:	int3   
  41e788:	in     al,dx
  41e789:	and    BYTE PTR [ecx-0x5f],dl
  41e78c:	sti    
  41e78d:	(bad)  
  41e78e:	pop    ebp
  41e78f:	rol    DWORD PTR [edi],0x45
  41e792:	sbb    ebx,DWORD PTR [eax+0x23]
  41e795:	mov    edi,0x8d8a015d
  41e79a:	iret   
  41e79b:	inc    eax
  41e79c:	fistp  WORD PTR [edx+0x59fc0539]
  41e7a2:	push   0xffffff9d
  41e7a4:	jecxz  0x41e81b
  41e7a6:	sti    
  41e7a7:	sahf   
  41e7a8:	and    eax,0x50af6fe9
  41e7ad:	not    dh
  41e7af:	(bad)  
  41e7b0:	adc    BYTE PTR [edx],cl
  41e7b2:	sbb    DWORD PTR [ebp-0x2aeb54e],0xb
  41e7b9:	cmp    edx,DWORD PTR [ebx-0x62]
  41e7bc:	je     0x41e7f8
  41e7be:	xchg   ebp,eax
  41e7bf:	jno    0x41e7d4
  41e7c1:	or     eax,0x8ea7258b
  41e7c6:	gs out dx,al
  41e7c8:	aaa    
  41e7c9:	jle    0x41e790
  41e7cb:	dec    eax
  41e7cc:	sub    ch,BYTE PTR [esi]
  41e7ce:	push   es
  41e7cf:	cld    
  41e7d0:	into   
  41e7d1:	in     eax,dx
  41e7d2:	push   cs
  41e7d3:	aaa    
  41e7d4:	or     al,0x4e
  41e7d6:	sub    al,0xeb
  41e7d8:	fidiv  DWORD PTR ds:0x904f124a
  41e7de:	ins    BYTE PTR es:[edi],dx
  41e7df:	push   es
  41e7e0:	bound  eax,QWORD PTR [eax+edi*8-0x4d]
  41e7e4:	fst    QWORD PTR [ecx]
  41e7e6:	sbb    BYTE PTR [esi+0x22ca5cab],bl
  41e7ec:	xchg   edi,eax
  41e7ed:	cli    
  41e7ee:	inc    esp
  41e7ef:	adc    al,0xe
  41e7f1:	aas    
  41e7f2:	fs (bad) 
  41e7f4:	aad    0xe2
  41e7f6:	push   edi
  41e7f7:	ss in  al,dx
  41e7f9:	in     eax,0x3c
  41e7fb:	mov    dh,0x3b
  41e7fd:	mov    al,0xb
  41e7ff:	push   edi
  41e800:	inc    ecx
  41e801:	mov    ch,0x2c
  41e803:	jp     0x41e842
  41e805:	addr16 out 0x52,eax
  41e808:	pop    ecx
  41e809:	fiadd  WORD PTR [ebx-0x3e]
  41e80c:	cmp    esp,DWORD PTR [ecx]
  41e80e:	ret    
  41e80f:	fiadd  DWORD PTR [ecx]
  41e811:	dec    edi
  41e812:	inc    ebp
  41e813:	xor    BYTE PTR [edx],bl
  41e815:	sub    al,BYTE PTR [esi-0x2c]
  41e818:	iret   
  41e819:	xchg   BYTE PTR [esi*8-0x79b91049],bh
  41e820:	loop   0x41e7dd
  41e822:	dec    ebp
  41e823:	jae    0x41e83c
  41e825:	loop   0x41e816
  41e827:	and    eax,edx
  41e829:	xchg   esi,eax
  41e82a:	mov    eax,ds:0x851bc7a1
  41e82f:	call   0x51f3150d
  41e834:	shl    BYTE PTR [esi+edx*8-0x4f572a20],cl
  41e83b:	jg     0x41e80e
  41e83d:	ds test ch,ch
  41e840:	call   FWORD PTR [edi]
  41e842:	inc    ebp
  41e843:	into   
  41e844:	dec    BYTE PTR ds:0xc9e66fd3
  41e84a:	mov    ds:0x323fef8,eax
  41e84f:	xchg   esi,eax
  41e850:	inc    edx
  41e851:	scas   eax,DWORD PTR es:[edi]
  41e852:	push   es
  41e853:	adc    dl,BYTE PTR [edi-0x4c]
  41e856:	sub    dh,BYTE PTR [ebp+0x7d3ff17a]
  41e85c:	sub    ecx,edx
  41e85e:	(bad)  
  41e85f:	pop    ebx
  41e860:	clc    
  41e861:	xchg   edx,eax
  41e862:	inc    edx
  41e863:	imul   DWORD PTR [esi+0x79]
  41e866:	push   ecx
  41e867:	test   DWORD PTR [eax],0xf4b12723
  41e86d:	inc    esi
  41e86e:	sub    eax,0x4670c55f
  41e873:	cli    
  41e874:	shr    edx,cl
  41e876:	mov    ch,al
  41e878:	jno    0x41e806
  41e87a:	cmp    ebp,DWORD PTR [ebx-0x5a]
  41e87d:	mov    ds:0x5f4bdfa2,eax
  41e882:	jb     0x41e840
  41e884:	scas   al,BYTE PTR es:[edi]
  41e885:	push   es
  41e886:	inc    eax
  41e887:	adc    al,0x75
  41e889:	jecxz  0x41e8cb
  41e88b:	cwde   
  41e88c:	mov    DWORD PTR [esp+ebp*4],eax
  41e88f:	(bad)  
  41e890:	das    
  41e891:	mov    edx,0x61654904
  41e896:	retf   0xe2d9
  41e899:	mov    esi,0x140dd76f
  41e89e:	std    
  41e89f:	sbb    ebp,DWORD PTR [edi+0x7a]
  41e8a2:	add    dl,bl
  41e8a4:	sar    DWORD PTR [esi+0x26],1
  41e8a7:	mov    BYTE PTR [eax],bh
  41e8a9:	enter  0x1387,0xcc
  41e8ad:	jb     0x41e919
  41e8af:	cmp    eax,0x9acf1dc8
  41e8b4:	mov    bh,0x31
  41e8b6:	and    esi,ebx
  41e8b8:	sti    
  41e8b9:	jp     0x41e8b9
  41e8bb:	jmp    0x369:0xd35a6016
  41e8c2:	cs fcomip st,st(0)
  41e8c5:	(bad)  
  41e8c6:	lea    eax,[ebp+0x12f9c32a]
  41e8cc:	cmp    al,0xd0
  41e8ce:	sub    DWORD PTR [edx+0x21],0xe66463e8
  41e8d5:	into   
  41e8d6:	add    ch,BYTE PTR [eax+edi*8]
  41e8d9:	and    eax,0xed2ad142
  41e8de:	pushf  
  41e8df:	sbb    al,dl
  41e8e1:	jle    0x41e8be
  41e8e3:	pop    es
  41e8e4:	sbb    ebx,ebx
  41e8e6:	xor    al,0x51
  41e8e8:	xchg   edx,eax
  41e8e9:	xor    bh,BYTE PTR [ecx+0x2]
  41e8ec:	div    BYTE PTR [edx]
  41e8ee:	outs   dx,BYTE PTR ds:[esi]
  41e8ef:	xchg   esi,eax
  41e8f0:	add    eax,0x3dfb7134
  41e8f5:	bts    eax,edi
  41e8f8:	lods   al,BYTE PTR ds:[esi]
  41e8f9:	in     al,0xb9
  41e8fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8fc:	(bad)  
  41e8fe:	push   ds
  41e8ff:	out    dx,al
  41e900:	inc    ebx
  41e901:	inc    ebx
  41e902:	push   ss
  41e903:	jl     0x41e8e3
  41e905:	rcr    bl,cl
  41e907:	mov    bh,0x12
  41e909:	jecxz  0x41e97a
  41e90b:	mov    ebx,0x44d5f50b
  41e910:	lock sbb eax,0x9671bf6a
  41e916:	sbb    eax,0xf6258ad6
  41e91b:	bound  edx,QWORD PTR [ebx+0x67e1a270]
  41e921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e922:	sbb    esp,eax
  41e924:	adc    al,ah
  41e926:	push   ss
  41e927:	push   ss
  41e928:	cmp    al,0xaf
  41e92a:	mov    ecx,0xd4c256ff
  41e92f:	inc    esi
  41e930:	sub    al,0x31
  41e932:	in     eax,dx
  41e933:	test   al,0xf9
  41e935:	mov    ecx,0xa7f41ef7
  41e93a:	sub    eax,0xa4c283bf
  41e93f:	sub    DWORD PTR es:[ecx*2+0x572e2e65],eax
  41e947:	imul   edx,edx,0x11
  41e94a:	sbb    eax,0xb8cc70ca
  41e94f:	pop    esi
  41e950:	mov    ebx,eax
  41e952:	lahf   
  41e953:	pop    ecx
  41e954:	jno    0x41e8e5
  41e956:	es push eax
  41e958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e959:	outs   dx,BYTE PTR ds:[esi]
  41e95a:	pop    ss
  41e95b:	or     eax,0xf6825dde
  41e960:	out    0xef,eax
  41e962:	loopne 0x41e900
  41e964:	mov    eax,0x68e401d6
  41e969:	retf   
  41e96a:	lods   eax,DWORD PTR ds:[esi]
  41e96b:	(bad)  
  41e96c:	retf   0x15dd
  41e96f:	push   esi
  41e970:	jo     0x41e8f9
  41e972:	loop   0x41e8f8
  41e974:	(bad)  [ebx+0x588e1747]
  41e97a:	cmc    
  41e97b:	jo     0x41e922
  41e97d:	adc    eax,0xd4a6f5e6
  41e982:	cmp    BYTE PTR [ecx-0x32],cl
  41e985:	xchg   esi,eax
  41e986:	sub    eax,0xb76d9975
  41e98b:	push   ds
  41e98c:	xchg   esp,eax
  41e98d:	mov    bl,0x28
  41e98f:	sar    DWORD PTR [eax+0x7],1
  41e992:	mov    al,0x33
  41e994:	out    dx,eax
  41e995:	out    0x59,al
  41e997:	sub    bl,cl
  41e999:	aaa    
  41e99a:	lods   eax,DWORD PTR ds:[esi]
  41e99b:	mov    edi,0x58035103
  41e9a0:	xor    DWORD PTR [ebp+0x65ce89ce],ecx
  41e9a6:	sbb    BYTE PTR [ecx],cl
  41e9a8:	mov    esp,eax
  41e9aa:	jns    0x41e974
  41e9ac:	jmp    0x95fd:0x71060da5
  41e9b3:	and    al,0xb0
  41e9b5:	imul   ecx,ecx,0x3
  41e9b8:	fstp   DWORD PTR [eax+0x2b]
  41e9bb:	fstp   QWORD PTR [esi+0xa6e6210]
  41e9c1:	fwait
  41e9c2:	mov    al,ds:0x9a9cfb41
  41e9c7:	xor    ch,BYTE PTR [edi-0x38]
  41e9ca:	mov    ah,0xdb
  41e9cc:	jle    0x41e987
  41e9ce:	je     0x41e994
  41e9d0:	add    eax,0x75e8525b
  41e9d5:	xor    ah,BYTE PTR [ecx-0x2f]
  41e9d8:	jbe    0x41e9dd
  41e9da:	mov    ah,0xa1
  41e9dc:	icebp  
  41e9dd:	xchg   BYTE PTR [edx],dl
  41e9df:	jmp    0xce4cdd1a
  41e9e4:	lea    edi,[edx]
  41e9e6:	mov    cl,0xdd
  41e9e8:	xor    BYTE PTR [eax-0x18233190],0x12
  41e9ef:	stc    
  41e9f0:	and    si,WORD PTR [ebx+ebx*4-0x7e]
  41e9f5:	jle    0x41e9e9
  41e9f7:	adc    dl,BYTE PTR [eax+0x33]
  41e9fa:	or     DWORD PTR [eax-0x2e],ecx
  41e9fd:	and    DWORD PTR ds:0x30b25fcb,ecx
  41ea03:	sub    cl,BYTE PTR fs:[ebx]
  41ea06:	rcr    BYTE PTR [edi-0x3c],cl
  41ea09:	xor    BYTE PTR [eax+0x59],ch
  41ea0c:	(bad)  
  41ea0d:	mov    esp,0xafb96c8f
  41ea12:	inc    edi
  41ea13:	icebp  
  41ea14:	jbe    0x41e9ea
  41ea16:	lahf   
  41ea17:	and    eax,0xde40575a
  41ea1c:	add    DWORD PTR [edi+0x3e],ecx
  41ea1f:	mov    dl,0x43
  41ea21:	call   0x22a8:0x46dd04f3
  41ea28:	sub    BYTE PTR [eax-0x5c],0x3c
  41ea2c:	xor    edi,DWORD PTR [edi-0x12]
  41ea2f:	jg     0x41ea31
  41ea31:	cmp    eax,0x462eaa61
  41ea36:	dec    ecx
  41ea37:	jo     0x41ea07
  41ea39:	fs xchg ebp,eax
  41ea3b:	retf   0x7b9c
  41ea3e:	cmp    ebp,0xe789c43c
  41ea44:	je     0x41e9ea
  41ea46:	add    bh,BYTE PTR [edx]
  41ea48:	nop
  41ea49:	pushf  
  41ea4a:	sub    ah,BYTE PTR [ebx]
  41ea4c:	xor    DWORD PTR [edi-0x61],ecx
  41ea4f:	cmc    
  41ea50:	test   BYTE PTR [ebp+0x3a],bh
  41ea53:	popf   
  41ea54:	fwait
  41ea55:	sbb    eax,0x12109c26
  41ea5a:	scas   eax,DWORD PTR es:[edi]
  41ea5b:	add    DWORD PTR ds:[ebp+ebx*8+0x5eae1891],edi
  41ea63:	jle    0x41ea8d
  41ea65:	jle    0x41ea79
  41ea67:	xchg   BYTE PTR [ebx-0x5a],dh
  41ea6a:	mov    ch,BYTE PTR [ebx+eiz*2]
  41ea6d:	pop    DWORD PTR gs:[ebp+0xc2093ec]
  41ea74:	xor    esp,0xffffff83
  41ea77:	shl    BYTE PTR [edi],1
  41ea79:	pop    ebx
  41ea7a:	dec    eax
  41ea7b:	div    BYTE PTR [esp+ebp*2-0x5c]
  41ea7f:	dec    esi
  41ea80:	fcomi  st,st(6)
  41ea82:	inc    esi
  41ea83:	push   ecx
  41ea84:	sbb    al,0xb
  41ea86:	add    al,0xb0
  41ea88:	add    DWORD PTR [eax-0x6e],edx
  41ea8b:	ret    0x8e38
  41ea8e:	add    BYTE PTR [eax],0x9f
  41ea91:	jmp    0x41ea22
  41ea93:	fdivr  QWORD PTR [edx+0x46d7d089]
  41ea99:	inc    ebx
  41ea9a:	test   eax,0xcf224dc5
  41ea9f:	clc    
  41eaa0:	test   DWORD PTR [edi-0x7c],edx
  41eaa3:	cmc    
  41eaa4:	sbb    DWORD PTR [esi],eax
  41eaa6:	scas   eax,DWORD PTR es:[edi]
  41eaa7:	push   esi
  41eaa8:	pop    eax
  41eaa9:	std    
  41eaaa:	dec    esi
  41eaab:	or     ch,BYTE PTR [ebp-0x5a]
  41eaae:	(bad)  
  41eaaf:	outs   dx,DWORD PTR ds:[esi]
  41eab0:	(bad)  
  41eab1:	sub    BYTE PTR [edx-0x76],ch
  41eab4:	xchg   BYTE PTR [esi-0x260b0cef],ch
  41eaba:	cmp    al,ah
  41eabc:	push   esp
  41eabd:	push   eax
  41eabe:	leave  
  41eabf:	stc    
  41eac0:	(bad)  
  41eac2:	jl     0x41eb1f
  41eac4:	aad    0x76
  41eac6:	push   0x48
  41eac8:	hlt    
  41eac9:	cmp    eax,0x48526584
  41eace:	mov    edi,0xd5d5cb04
  41ead3:	ja     0x41ea57
  41ead5:	mov    edx,DWORD PTR [edi+0x49892793]
  41eadb:	mov    eax,0xfe8250f7
  41eae0:	jecxz  0x41eb27
  41eae2:	jno    0x41eb0e
  41eae4:	sbb    al,0xee
  41eae6:	jo     0x41eb2d
  41eae8:	je     0x41eab2
  41eaea:	or     bh,BYTE PTR [edx-0x1863af34]
  41eaf0:	arpl   WORD PTR [edx+0x36721437],si
  41eaf6:	sub    al,0x65
  41eaf8:	sub    dh,al
  41eafa:	and    esp,DWORD PTR [edi]
  41eafc:	mov    ebp,0xb204b145
  41eb01:	shl    BYTE PTR [edx+0x49],0x2b
  41eb05:	imul   edi,DWORD PTR ds:0x6cbb2d0c,0xffffffc8
  41eb0c:	fdiv   st,st(6)
  41eb0e:	je     0x41eb14
  41eb10:	out    0x87,al
  41eb12:	sub    BYTE PTR [ebp+0x3405f59f],bl
  41eb18:	sbb    edx,ebx
  41eb1a:	fadd   QWORD PTR [ecx-0x72]
  41eb1d:	(bad)  
  41eb1e:	jae    0x41eb8b
  41eb20:	mov    ebp,DWORD PTR [esi+0x32]
  41eb23:	pop    ecx
  41eb24:	stos   BYTE PTR es:[edi],al
  41eb25:	push   eax
  41eb26:	pushf  
  41eb27:	pop    ds
  41eb28:	daa    
  41eb29:	repz jb 0x41eb38
  41eb2c:	stos   BYTE PTR es:[edi],al
  41eb2d:	addr16 mov eax,0xf881e2f2
  41eb33:	push   ebx
  41eb34:	and    DWORD PTR [eax-0x385d92b0],0x8fa28dc1
  41eb3e:	and    DWORD PTR [esi],0x2ce9b5ee
  41eb44:	mov    al,0xf5
  41eb46:	arpl   WORD PTR [ebx+0x61b72f47],bx
  41eb4c:	xchg   esp,eax
  41eb4d:	xchg   esi,eax
  41eb4e:	scas   ax,WORD PTR es:[edi]
  41eb50:	add    BYTE PTR [edx+eiz*2],dl
  41eb53:	xlat   BYTE PTR ds:[ebx]
  41eb54:	lods   al,BYTE PTR ds:[esi]
  41eb55:	ins    BYTE PTR es:[edi],dx
  41eb56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb57:	sub    al,0xcd
  41eb59:	dec    ebx
  41eb5a:	sbb    al,0x18
  41eb5c:	mov    eax,0xaee67073
  41eb61:	out    0x14,al
  41eb63:	mov    al,ds:0xa1ae5f5c
  41eb68:	sti    
  41eb69:	add    eax,0x43c1be4
  41eb6e:	jb     0x41eb25
  41eb70:	cmp    BYTE PTR [esi],al
  41eb72:	imul   edi,DWORD PTR [ebx],0x4ca48c5b
  41eb78:	(bad)  
  41eb79:	jmp    0x41ebd4
  41eb7b:	mov    edx,0xdd5e4454
  41eb80:	das    
  41eb81:	pop    ebx
  41eb82:	mov    ah,0xcc
  41eb84:	push   ebx
  41eb85:	cld    
  41eb86:	mov    edx,esp
  41eb88:	inc    edx
  41eb89:	sub    DWORD PTR [eax+0x4000ec3a],0x65
  41eb90:	mov    edi,0x38a33637
  41eb95:	push   ebx
  41eb96:	loope  0x41ebb3
  41eb98:	mov    eax,ds:0x329c9ff9
  41eb9d:	jb     0x41eb31
  41eb9f:	mov    ch,0x71
  41eba1:	inc    ebp
  41eba2:	push   es
  41eba3:	pop    ds
  41eba4:	add    BYTE PTR [esi+0x21],cl
  41eba7:	inc    edx
  41eba8:	fcomp  DWORD PTR [ebx]
  41ebaa:	test   BYTE PTR ds:0x3b580df,0x91
  41ebb1:	xchg   ebp,eax
  41ebb2:	mov    edx,0x3ff1e79a
  41ebb7:	mov    cl,0x1f
  41ebb9:	add    edi,DWORD PTR [esi+0x76]
  41ebbc:	not    BYTE PTR ds:0xa294c3ea
  41ebc2:	arpl   WORD PTR [esp+eax*1],bx
  41ebc5:	out    dx,eax
  41ebc6:	mov    esi,0x33e7fdf2
  41ebcb:	and    BYTE PTR [edx+edi*4],0x10
  41ebcf:	retf   
  41ebd0:	in     eax,0xd7
  41ebd2:	adc    al,0x84
  41ebd4:	pop    ecx
  41ebd5:	ins    DWORD PTR es:[edi],dx
  41ebd6:	outs   dx,DWORD PTR ds:[esi]
  41ebd7:	out    dx,al
  41ebd8:	mov    ebp,0xd82056c7
  41ebdd:	into   
  41ebde:	fxch   st(7)
  41ebe0:	out    dx,al
  41ebe1:	popa   
  41ebe2:	jge    0x41ebae
  41ebe4:	xchg   ecx,eax
  41ebe5:	popf   
  41ebe6:	jle    0x41ec20
  41ebe8:	mov    al,0x38
  41ebea:	dec    esi
  41ebeb:	lds    edi,FWORD PTR [edx-0x3bc2a637]
  41ebf1:	push   esp
  41ebf2:	xchg   cl,dl
  41ebf4:	inc    ecx
  41ebf5:	xchg   BYTE PTR [ebp-0x23a82272],dl
  41ebfb:	add    eax,edx
  41ebfd:	mov    ch,0xc2
  41ebff:	mov    edi,0x2473a221
  41ec04:	ss cld 
  41ec06:	xchg   ecx,eax
  41ec07:	cli    
  41ec08:	inc    ebx
  41ec09:	adc    esp,DWORD PTR [edx]
  41ec0b:	repz int3 
  41ec0d:	jecxz  0x41eba3
  41ec0f:	popf   
  41ec10:	push   0x94a549e3
  41ec15:	hlt    
  41ec16:	jo     0x41ec79
  41ec18:	sbb    esp,DWORD PTR [ebx-0x62]
  41ec1b:	fbld   TBYTE PTR [ecx]
  41ec1d:	imul   ecx,DWORD PTR [ebx-0x2b8dd8b6],0xffffff92
  41ec24:	and    esi,eax
  41ec26:	mov    ?,ax
  41ec29:	ss ja  0x41ec30
  41ec2c:	xchg   edi,eax
  41ec2d:	in     eax,dx
  41ec2e:	add    BYTE PTR [esi],ch
  41ec30:	push   0x20c37ed1
  41ec35:	jp     0x41ec19
  41ec37:	and    eax,edx
  41ec39:	dec    eax
  41ec3a:	arpl   WORD PTR [ebp+0x19],di
  41ec3d:	and    DWORD PTR [ecx-0x4f31fea2],ebp
  41ec43:	out    0x5b,eax
  41ec45:	jp     0x41ec3a
  41ec47:	jo     0x41ecb9
  41ec49:	sbb    cl,BYTE PTR [ebx+0x79]
  41ec4c:	xchg   edx,eax
  41ec4d:	ins    BYTE PTR es:[edi],dx
  41ec4e:	add    al,0x1c
  41ec50:	sti    
  41ec51:	sub    al,0x87
  41ec53:	adc    esp,eax
  41ec55:	daa    
  41ec56:	ficomp WORD PTR [ecx]
  41ec58:	inc    ecx
  41ec59:	shr    DWORD PTR [ecx+0x5f93b72b],1
  41ec5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec60:	and    al,0x6b
  41ec62:	or     al,0xce
  41ec64:	test   DWORD PTR [ebp+0x61],ebx
  41ec67:	add    al,0xb5
  41ec69:	int3   
  41ec6a:	mov    dh,0x98
  41ec6c:	adc    esi,DWORD PTR [eax]
  41ec6e:	std    
  41ec6f:	pop    ebx
  41ec70:	inc    ebx
  41ec71:	mov    ecx,0x48ffad21
  41ec76:	nop
  41ec77:	mov    dh,0xbb
  41ec79:	adc    dh,BYTE PTR ds:0xe50b56ca
  41ec7f:	xlat   BYTE PTR ds:[ebx]
  41ec80:	stos   BYTE PTR es:[edi],al
  41ec81:	fsub   DWORD PTR [edx]
  41ec83:	dec    esi
  41ec84:	mov    eax,0x973e2c26
  41ec89:	jne    0x41ec1f
  41ec8b:	out    0x3c,eax
  41ec8d:	imul   eax,DWORD PTR [ecx-0x6b],0xfb408cff
  41ec94:	in     al,dx
  41ec95:	cmc    
  41ec96:	and    al,0x79
  41ec98:	or     eax,ebp
  41ec9a:	pop    ds
  41ec9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec9c:	push   cs
  41ec9d:	stos   DWORD PTR es:[edi],eax
  41ec9e:	dec    eax
  41ec9f:	xor    bl,bl
  41eca1:	sbb    eax,0xa5888bab
  41eca6:	and    al,0xa3
  41eca8:	arpl   WORD PTR [esi],dx
  41ecaa:	jg     0x41ed21
  41ecac:	mov    al,ds:0x5fa202b4
  41ecb1:	in     al,0x7a
  41ecb3:	fwait
  41ecb4:	ret    0x91fd
  41ecb7:	loop   0x41ed0b
  41ecb9:	inc    ebx
  41ecba:	push   DWORD PTR [edi]
  41ecbc:	inc    esi
  41ecbd:	fistp  WORD PTR [edi]
  41ecbf:	inc    edx
  41ecc0:	bnd jne 0x41ec6b
  41ecc3:	mov    ch,0xf7
  41ecc5:	mov    DWORD PTR [ebp+0x67],ebx
  41ecc8:	pop    edx
  41ecc9:	test   eax,0x381f59fb
  41ecce:	sub    ebp,DWORD PTR ds:0x2c15b634
  41ecd4:	rcl    dh,1
  41ecd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecd7:	nop
  41ecd8:	enter  0xe324,0x80
  41ecdc:	ins    BYTE PTR es:[edi],dx
  41ecdd:	das    
  41ecde:	cmp    esp,0xffffffaa
  41ece1:	pusha  
  41ece2:	call   0x34e586d2
  41ece7:	jle    0x41ecc3
  41ece9:	aad    0xd8
  41eceb:	sub    esi,0x9aa45fc9
  41ecf1:	imul   edi,DWORD PTR fs:[eax-0x14c7cc5a],0x3d
  41ecf9:	jl     0x41ecdb
  41ecfb:	mov    edi,DWORD PTR [ebx]
  41ecfd:	lds    ebp,FWORD PTR [edx]
  41ecff:	or     BYTE PTR [esi-0x472d636c],bl
  41ed05:	int    0x75
  41ed07:	or     DWORD PTR [ebx-0x7b],ebp
  41ed0a:	shl    BYTE PTR [edx+0x6915bb7f],0x98
  41ed11:	mov    bh,0xe9
  41ed13:	stos   BYTE PTR es:[edi],al
  41ed14:	bound  esp,QWORD PTR [edx-0x66]
  41ed17:	aaa    
  41ed18:	pop    esi
  41ed19:	fmul   st(4),st
  41ed1b:	push   ecx
  41ed1c:	sti    
  41ed1d:	xor    eax,0xf760f22b
  41ed22:	shl    DWORD PTR [edi+0x24],1
  41ed25:	mov    esi,0x3b5f4d36
  41ed2a:	sbb    cl,dh
  41ed2c:	adc    eax,0xc72e0f51
  41ed31:	repnz loop 0x41ed6a
  41ed34:	pop    edi
  41ed35:	repz rcr bh,cl
  41ed38:	imul   ah
  41ed3a:	cld    
  41ed3b:	dec    edx
  41ed3c:	jge    0x41ed91
  41ed3e:	bound  esp,QWORD PTR ds:0xb04e66ad
  41ed44:	pop    eax
  41ed45:	mov    ebp,0xbd89d2a8
  41ed4a:	mov    ebp,0x21a36b5d
  41ed4f:	and    edi,DWORD PTR [edi]
  41ed51:	xchg   edx,eax
  41ed52:	(bad)  
  41ed53:	xchg   edx,eax
  41ed54:	imul   ecx,DWORD PTR [esi+0x52771a1e],0x1b
  41ed5b:	mov    edx,0x9200f536
  41ed60:	addr16 push ds
  41ed62:	dec    eax
  41ed63:	cdq    
  41ed64:	cwde   
  41ed65:	mov    esi,0xc95e356c
  41ed6a:	rcr    DWORD PTR [eax],0x1f
  41ed6d:	mov    ebp,0x12389b3f
  41ed72:	daa    
  41ed73:	jge    0x41ed07
  41ed75:	add    eax,DWORD PTR [esi-0x45]
  41ed78:	jle    0x41ed84
  41ed7a:	cmp    eax,ecx
  41ed7c:	mov    edi,0x21f827ee
  41ed81:	inc    esi
  41ed82:	sbb    DWORD PTR [edi+edi*4+0x5e],0xd732b885
  41ed8a:	in     eax,0x41
  41ed8c:	mov    al,ds:0x9c9e9d27
  41ed91:	jge    0x41edae
  41ed93:	xor    al,0x82
  41ed95:	xchg   ebp,eax
  41ed96:	cmp    DWORD PTR [edi],edi
  41ed98:	ret    
  41ed99:	dec    esi
  41ed9a:	sbb    dl,BYTE PTR gs:[edi]
  41ed9d:	adc    ebx,DWORD PTR [eax+0x7d29435c]
  41eda3:	call   0x2591:0xf90ed9ad
  41edaa:	retf   
  41edab:	retf   
  41edac:	xchg   edi,eax
  41edad:	aam    0x49
  41edaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edb0:	mov    eax,0x8d0d3a67
  41edb5:	push   ds
  41edb6:	iret   
  41edb7:	sti    
  41edb8:	in     eax,dx
  41edb9:	add    eax,0x6b687a72
  41edbe:	in     eax,0x2f
  41edc0:	sbb    BYTE PTR [edi+0x39513a9e],0xc9
  41edc7:	sbb    edi,ebp
  41edc9:	aad    0x8b
  41edcb:	cs stos BYTE PTR es:[edi],al
  41edcd:	in     eax,0xad
  41edcf:	fsubr  st(3),st
  41edd1:	lods   eax,DWORD PTR ds:[esi]
  41edd2:	retf   
  41edd3:	jmp    0x61478fed
  41edd8:	mov    bh,0x54
  41edda:	imul   ecx,edx,0x9f1f8b81
  41ede0:	xor    eax,DWORD PTR [ebp+0x260db6df]
  41ede6:	cdq    
  41ede7:	sub    al,0xb2
  41ede9:	add    DWORD PTR [ecx+0x3b947a2f],0x60dbe461
  41edf3:	add    BYTE PTR [ebp+0x75],ch
  41edf6:	clc    
  41edf7:	stc    
  41edf8:	or     DWORD PTR ds:0x66231597,edx
  41edfe:	inc    ebx
  41edff:	bound  eax,QWORD PTR [edi]
  41ee01:	daa    
  41ee02:	mov    esi,DWORD PTR [ebx-0xb5c22cb]
  41ee08:	mov    es,WORD PTR [ebx+0x59d5d6a5]
  41ee0e:	in     al,dx
  41ee0f:	mov    es:0x79b35381,eax
  41ee15:	dec    ebx
  41ee16:	idiv   BYTE PTR ds:0x2808f4d3
  41ee1c:	not    BYTE PTR [edi]
  41ee1e:	nop
  41ee1f:	call   0x32734c1a
  41ee24:	jp     0x41ee78
  41ee26:	fild   DWORD PTR [eax]
  41ee28:	clc    
  41ee29:	popf   
  41ee2a:	mov    bh,0xbc
  41ee2c:	mov    bh,0xc4
  41ee2e:	mov    ah,0x6b
  41ee30:	pushf  
  41ee31:	and    DWORD PTR [edx+0x2b],esi
  41ee34:	mov    cl,0x82
  41ee36:	and    eax,0xb4f3e783
  41ee3b:	jmp    FWORD PTR [edi-0x6272520f]
  41ee41:	pusha  
  41ee42:	scas   eax,DWORD PTR es:[edi]
  41ee43:	dec    ebx
  41ee44:	or     DWORD PTR [ebp+0x61556e64],eax
  41ee4a:	push   0x71
  41ee4c:	inc    ebp
  41ee4d:	shl    BYTE PTR [esi],cl
  41ee4f:	pop    es
  41ee50:	xchg   DWORD PTR [ebx-0x622fe4cc],eax
  41ee56:	imul   ebx,DWORD PTR [edx+0x2],0xffffff8b
  41ee5a:	mov    ds:0x450ad85d,al
  41ee5f:	(bad)  
  41ee60:	jb     0x41ee4b
  41ee62:	sub    al,0x53
  41ee64:	mov    bl,0xaf
  41ee66:	pop    edi
  41ee67:	pop    edi
  41ee68:	vsubsd xmm7,xmm4,xmm4
  41ee6c:	and    bl,BYTE PTR [ecx+0x447d0c5f]
  41ee72:	xor    eax,0xb6b7b67b
  41ee77:	loop   0x41ee37
  41ee79:	(bad)  
  41ee7a:	int3   
  41ee7b:	into   
  41ee7c:	popa   
  41ee7d:	inc    esi
  41ee7e:	push   0x3a854666
  41ee83:	retf   0x24a7
  41ee86:	adc    DWORD PTR [ebx+edi*8],ecx
  41ee89:	push   ds
  41ee8a:	stos   BYTE PTR es:[edi],al
  41ee8b:	push   es
  41ee8c:	jno    0x41eeee
  41ee8e:	out    0x38,eax
  41ee90:	xchg   esp,eax
  41ee91:	push   0xf51dd336
  41ee96:	jbe    0x41ef10
  41ee98:	shl    esp,cl
  41ee9a:	ret    0x9e26
  41ee9d:	inc    edx
  41ee9e:	mov    bh,0xdf
  41eea0:	pop    ds
  41eea1:	sbb    DWORD PTR [ecx-0xd5dbc7b],esi
  41eea7:	fisttp QWORD PTR [ebx-0x7c63cbf5]
  41eead:	mov    edx,eax
  41eeaf:	xchg   ebp,eax
  41eeb0:	sar    DWORD PTR [ecx-0x19],1
  41eeb3:	or     cl,ah
  41eeb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eeb6:	sti    
  41eeb7:	lods   eax,DWORD PTR ds:[esi]
  41eeb8:	rcr    DWORD PTR [ecx-0x70eec64b],0xc
  41eebf:	dec    ecx
  41eec0:	pusha  
  41eec1:	sbb    BYTE PTR [ebp-0x69],ch
  41eec4:	or     al,0xb9
  41eec6:	lea    edx,[ebx+0x6]
  41eec9:	and    bl,bl
  41eecb:	xor    esi,DWORD PTR [eax]
  41eecd:	sar    BYTE PTR [ebx+0x43],1
  41eed0:	icebp  
  41eed1:	sbb    cl,BYTE PTR [edi-0x2f6a4aab]
  41eed7:	sti    
  41eed8:	stos   DWORD PTR es:[edi],eax
  41eed9:	ins    DWORD PTR es:[edi],dx
  41eeda:	jns    0x41ef3f
  41eedc:	jecxz  0x41ef06
  41eede:	ins    DWORD PTR es:[edi],dx
  41eedf:	in     eax,0xa2
  41eee1:	jne    0x41ef5b
  41eee3:	out    0x54,eax
  41eee5:	pop    ebp
  41eee6:	mov    edx,0x34ec01e9
  41eeeb:	xor    al,0x34
  41eeed:	sub    al,BYTE PTR [ebx-0x7a13348b]
  41eef3:	aam    0x94
  41eef5:	inc    esp
  41eef6:	cmp    bl,cl
  41eef8:	(bad)  
  41eef9:	jp     0x41ef18
  41eefb:	pop    ebp
  41eefc:	loop   0x41ef2c
  41eefe:	push   eax
  41eeff:	test   DWORD PTR [ebx],eax
  41ef01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef02:	popf   
  41ef03:	repnz adc ch,BYTE PTR [ebx-0x11]
  41ef07:	ja     0x41ef34
  41ef09:	aaa    
  41ef0a:	sub    eax,0x27d504fe
  41ef0f:	push   0xd7826632
  41ef14:	call   0x93caea5
  41ef19:	pop    es
  41ef1a:	mov    cl,0x6b
  41ef1c:	xor    edx,DWORD PTR [esi+0x58]
  41ef1f:	cdq    
  41ef20:	clc    
  41ef21:	sar    BYTE PTR [eax],1
  41ef23:	add    esp,ebp
  41ef25:	sub    al,BYTE PTR [edi]
  41ef27:	cli    
  41ef28:	test   BYTE PTR ds:0x48274fc0,bl
  41ef2e:	aad    0x84
  41ef30:	or     bl,BYTE PTR [esi]
  41ef32:	neg    BYTE PTR [eax+0x536dcb72]
  41ef38:	dec    eax
  41ef39:	retf   
  41ef3a:	(bad)  
  41ef3b:	mov    ds,ebp
  41ef3d:	(bad)  
  41ef3e:	push   esi
  41ef3f:	and    edx,DWORD PTR [esp+eiz*8+0x22]
  41ef43:	jle    0x41ef64
  41ef45:	dec    esp
  41ef46:	shl    BYTE PTR [ecx+0x2e914214],0x8
  41ef4d:	bound  esi,QWORD PTR [ecx]
  41ef4f:	and    eax,0x29a51332
  41ef54:	push   ecx
  41ef55:	or     eax,0xf2c59404
  41ef5a:	stos   DWORD PTR es:[edi],eax
  41ef5b:	retf   
  41ef5c:	and    ebp,DWORD PTR [ebx]
  41ef5e:	outs   dx,DWORD PTR ss:[esi]
  41ef60:	mov    al,ds:0x33334b3c
  41ef65:	sub    DWORD PTR [edx+0x1acdbfcf],ebp
  41ef6b:	icebp  
  41ef6c:	into   
  41ef6d:	into   
  41ef6e:	and    al,0x9e
  41ef70:	push   es
  41ef71:	(bad)  
  41ef72:	cmc    
  41ef73:	sbb    eax,0x13b1766c
  41ef78:	scas   eax,DWORD PTR es:[edi]
  41ef79:	dec    edi
  41ef7a:	mov    DWORD PTR [edx],0x7ac7e015
  41ef80:	test   eax,0xa39915b4
  41ef85:	je     0x41ef32
  41ef87:	dec    edi
  41ef88:	mov    ch,cl
  41ef8a:	mov    eax,0xfb13765d
  41ef8f:	arpl   bx,si
  41ef91:	jb     0x41ef87
  41ef93:	add    eax,0xd052ca58
  41ef98:	sahf   
  41ef99:	int    0xfa
  41ef9b:	sbb    BYTE PTR [edx+0x45],dl
  41ef9e:	sar    BYTE PTR [ebx-0x508546f0],cl
  41efa4:	gs ja  0x41ef5f
  41efa7:	es je  0x41ef3e
  41efaa:	daa    
  41efab:	push   cs
  41efac:	fs mov ch,0xc9
  41efaf:	sub    DWORD PTR ds:0x3bad5210,edx
  41efb5:	inc    eax
  41efb6:	(bad)  
  41efb7:	pop    eax
  41efb8:	out    dx,eax
  41efb9:	jo     0x41efbd
  41efbb:	push   0xf548008e
  41efc0:	push   edx
  41efc1:	lods   eax,DWORD PTR ds:[esi]
  41efc2:	sbb    BYTE PTR [esi+0x64],dl
  41efc5:	in     eax,0xc1
  41efc7:	cmp    al,0xb3
  41efc9:	out    0xbf,al
  41efcb:	pusha  
  41efcc:	cmp    ecx,ebp
  41efce:	push   eax
  41efcf:	imul   DWORD PTR [ecx+0x38b38724]
  41efd5:	cld    
  41efd6:	sbb    BYTE PTR [edi-0x1f],bl
  41efd9:	retf   0xa1f4
  41efdc:	and    ebp,DWORD PTR [ecx]
  41efde:	daa    
  41efdf:	fst    DWORD PTR [edx+eiz*2-0x76]
  41efe4:	lea    eax,[esi-0x58]
  41efe7:	test   BYTE PTR [edi+ecx*8-0x73a5d2dc],bl
  41efee:	mov    cl,0xeb
  41eff0:	mov    bh,cl
  41eff2:	js     0x41f061
  41eff4:	push   esi
  41eff5:	pop    ss
  41eff6:	ins    BYTE PTR es:[edi],dx
  41eff7:	inc    ebx
  41eff8:	xor    eax,0x21bc4e64
  41effd:	or     bl,BYTE PTR [ebx]
  41efff:	cmp    al,0x6
  41f001:	icebp  
  41f002:	push   ds
  41f003:	test   edi,eax
  41f005:	lea    ebx,[esi+0x58c152e0]
  41f00b:	jb     0x41ef92
  41f00d:	mov    DWORD PTR [eax+edx*1],0xf636dd93
  41f014:	ret    0x5553
  41f017:	sub    eax,edi
  41f019:	push   ss
  41f01a:	inc    edi
  41f01b:	shr    BYTE PTR [ebx-0x65f6ed97],cl
  41f021:	pop    ebx
  41f022:	jl     0x41f036
  41f024:	pop    ebx
  41f025:	pusha  
  41f026:	dec    ecx
  41f027:	sbb    dh,BYTE PTR [ecx+0x75]
  41f02a:	mov    bh,0xb8
  41f02c:	arpl   WORD PTR [edx],sp
  41f02e:	xchg   ebx,eax
  41f02f:	cli    
  41f030:	lods   al,BYTE PTR ds:[esi]
  41f031:	call   0xbb1f:0xea2cecba
  41f038:	jbe    0x41f089
  41f03a:	jle    0x41efe8
  41f03c:	repz fnsave [edx]
  41f03f:	stos   DWORD PTR es:[edi],eax
  41f040:	sbb    BYTE PTR [ecx+0x15],cl
  41f043:	(bad)  
  41f044:	mov    ah,0x34
  41f046:	dec    esp
  41f047:	xchg   ecx,eax
  41f048:	les    eax,FWORD PTR [ebx-0x37]
  41f04b:	pop    esi
  41f04c:	jae    0x41efd3
  41f04e:	mov    eax,0xd6c90390
  41f053:	mov    cl,0x52
  41f055:	daa    
  41f056:	es fs jp 0x41f06a
  41f05a:	xchg   edx,eax
  41f05b:	push   cs
  41f05c:	adc    bh,bh
  41f05e:	jae    0x41f014
  41f060:	addr16 mov bl,0xca
  41f063:	xchg   DWORD PTR [eax],edx
  41f065:	and    esi,DWORD PTR [edx]
  41f067:	jns    0x41f081
  41f069:	inc    edi
  41f06a:	retf   
  41f06b:	mov    ecx,0x442a594d
  41f070:	mov    esp,0x71c0a7b
  41f075:	xor    cl,BYTE PTR [ebx+0x1a]
  41f078:	cld    
  41f079:	sar    BYTE PTR [ecx+ecx*1-0xc],0x9a
  41f07e:	xchg   edi,eax
  41f07f:	cdq    
  41f080:	ins    BYTE PTR es:[edi],dx
  41f081:	jle    0x41f0a9
  41f083:	cmp    dh,BYTE PTR [ebx+0x1d]
  41f086:	xor    eax,0xd2b85a3f
  41f08b:	out    0x5,al
  41f08d:	leave  
  41f08e:	push   edi
  41f08f:	jge    0x41f070
  41f091:	push   esi
  41f092:	std    
  41f093:	pop    edi
  41f094:	test   eax,0x42f7df03
  41f099:	and    BYTE PTR [ebx],dl
  41f09b:	cld    
  41f09c:	icebp  
  41f09d:	dec    edx
  41f09e:	mov    dh,0x2b
  41f0a0:	mov    bh,0xcb
  41f0a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0a3:	and    eax,0x2be63c97
  41f0a8:	pop    eax
  41f0a9:	popa   
  41f0aa:	mov    ds:0x49f55bb5,eax
  41f0af:	aam    0x54
  41f0b1:	dec    esi
  41f0b2:	(bad)  
  41f0b3:	shl    BYTE PTR [edx],cl
  41f0b5:	xor    al,0x6d
  41f0b7:	pop    eax
  41f0b8:	xor    DWORD PTR [ebx-0xccaf4ac],0x1e1c7c1
  41f0c2:	jmp    0x41f0cf
  41f0c4:	xchg   esp,eax
  41f0c5:	in     eax,0xb0
  41f0c7:	mov    esp,0x31dab3e7
  41f0cc:	jmp    0x65056c9
  41f0d1:	sbb    BYTE PTR [esi],0x3f
  41f0d4:	js     0x41f0d4
  41f0d6:	inc    esi
  41f0d7:	in     al,dx
  41f0d8:	mov    bl,0x5
  41f0da:	ret    0x48ea
  41f0dd:	xor    al,0x23
  41f0df:	data16 loop 0x41f122
  41f0e2:	sar    DWORD PTR [edx],cl
  41f0e4:	int3   
  41f0e5:	jmp    0x41f0ea
  41f0e7:	call   FWORD PTR [eax]
  41f0e9:	inc    esi
  41f0ea:	dec    esp
  41f0eb:	cmp    DWORD PTR [esi+0x72],ebx
  41f0ee:	xchg   dl,ah
  41f0f0:	add    BYTE PTR [esi+0x3f],dh
  41f0f3:	stc    
  41f0f4:	dec    ecx
  41f0f5:	pop    edi
  41f0f6:	xchg   esi,eax
  41f0f7:	jbe    0x41f106
  41f0f9:	xchg   edx,esi
  41f0fb:	adc    eax,0xb88be9b8
  41f100:	xlat   BYTE PTR ds:[ebx]
  41f101:	fsubr  st(6),st
  41f103:	jnp    0x41f0d4
  41f105:	(bad)  
  41f106:	xlat   BYTE PTR ds:[ebx]
  41f107:	mov    ebp,0xdbd0c7f1
  41f10c:	mov    esi,0x41489b16
  41f111:	das    
  41f112:	or     dl,BYTE PTR cs:[edx-0x55d2330]
  41f119:	das    
  41f11a:	mov    ecx,0x92b8f9f0
  41f11f:	fbstp  TBYTE PTR [ecx+0x59]
  41f122:	xor    DWORD PTR [edi],ebp
  41f124:	or     al,0x8e
  41f126:	popf   
  41f127:	xchg   edx,eax
  41f128:	cmp    dh,BYTE PTR [ecx-0x9cb034d]
  41f12e:	stos   DWORD PTR es:[edi],eax
  41f12f:	push   cs
  41f130:	loope  0x41f16c
  41f132:	mov    ds:0x4344eaff,al
  41f137:	nop
  41f138:	add    DWORD PTR [ecx+0x457ed02b],edx
  41f13e:	push   ebp
  41f13f:	mov    eax,ds:0x131c3265
  41f144:	pusha  
  41f145:	pandn  mm3,QWORD PTR [edi-0x172463a1]
  41f14c:	mov    bh,0xe2
  41f14e:	retf   0x1f38
  41f151:	(bad)  
  41f153:	xchg   edi,eax
  41f154:	sar    DWORD PTR [ebx+0x613a5c4b],1
  41f15a:	lds    ebp,FWORD PTR [edi+0x50eefc89]
  41f160:	add    al,0x96
  41f162:	jnp    0x41f1e0
  41f164:	imul   ebx,edi,0x1
  41f167:	(bad)  
  41f168:	mov    edi,0x7e5f6cd0
  41f16d:	lods   al,BYTE PTR ds:[esi]
  41f16e:	cmp    al,0x9
  41f170:	repz push esp
  41f172:	imul   esi,esp,0xffffffa0
  41f175:	into   
  41f176:	mov    ecx,0x9f533956
  41f17b:	add    esi,DWORD PTR [ecx-0x9b2edb6]
  41f181:	cli    
  41f182:	lods   al,BYTE PTR ds:[esi]
  41f183:	and    eax,ebx
  41f185:	jns    0x41f19c
  41f187:	xor    DWORD PTR [edi+0x58ce62a5],esi
  41f18d:	mov    dl,0x4
  41f18f:	add    eax,0x130045df
  41f194:	push   0xffffff86
  41f196:	cmc    
  41f197:	loop   0x41f152
  41f199:	cmp    BYTE PTR [ebx+0x43],bl
  41f19c:	xchg   ebp,eax
  41f19d:	xor    bh,BYTE PTR [ebx+edx*1+0x5a]
  41f1a1:	inc    ebx
  41f1a2:	cmp    BYTE PTR [ebp-0x1f9a8cdd],bh
  41f1a8:	and    cl,BYTE PTR [edi]
  41f1aa:	popa   
  41f1ab:	pop    ecx
  41f1ac:	out    dx,eax
  41f1ad:	jne    0x41f19a
  41f1af:	jl     0x41f1c4
  41f1b1:	dec    ecx
  41f1b2:	xor    al,BYTE PTR [ebx-0x516026ce]
  41f1b8:	mov    esi,0x10604948
  41f1bd:	es push ds
  41f1bf:	pusha  
  41f1c0:	mov    ebx,DWORD PTR [ecx]
  41f1c2:	loope  0x41f1ef
  41f1c4:	cmp    al,0x6d
  41f1c6:	mov    esi,0x7793cfe7
  41f1cb:	imul   ecx,DWORD PTR [edi-0x35],0xb6e619f4
  41f1d2:	fwait
  41f1d3:	fs inc edi
  41f1d5:	jge    0x41f1fc
  41f1d7:	mov    al,ds:0x4492f4d
  41f1dc:	repnz adc eax,0xc3cad10d
  41f1e2:	daa    
  41f1e3:	sbb    esi,ebx
  41f1e5:	xchg   BYTE PTR [edi],al
  41f1e7:	jns    0x41f19a
  41f1e9:	jmp    0x9ea3:0x4c9d3f9a
  41f1f0:	pop    es
  41f1f1:	call   0x7722:0x4271ce28
  41f1f8:	inc    edi
  41f1f9:	shl    DWORD PTR [eax+0xc],1
  41f1fc:	stc    
  41f1fd:	int3   
  41f1fe:	in     eax,0x6b
  41f200:	xchg   DWORD PTR [ebx],esi
  41f202:	push   cs
  41f203:	sub    DWORD PTR [esi+eax*1+0x8],esi
  41f207:	call   FWORD PTR gs:[eax+0x53]
  41f20b:	mov    ss:0x59264304,al
  41f211:	pop    edx
  41f212:	not    BYTE PTR [edi+0x7a]
  41f215:	jge    0x41f22d
  41f217:	jmp    0xf6c3dcaa
  41f21c:	push   esp
  41f21d:	lock xchg ebx,eax
  41f21f:	jg     0x41f29c
  41f221:	xor    BYTE PTR [ebx+eax*8+0x49],0x21
  41f226:	jae    0x41f1df
  41f228:	imul   edi,ebp,0xd27f1014
  41f22e:	push   edx
  41f22f:	sbb    dh,BYTE PTR [ebx+0x3e739ed3]
  41f235:	cmp    al,cl
  41f237:	mov    al,0x2a
  41f239:	mov    ds:0x992a17ac,eax
  41f23e:	sbb    DWORD PTR [ecx-0x3f122edd],edx
  41f244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f245:	pop    ebx
  41f246:	push   edi
  41f247:	mov    ds:0xedb18e46,al
  41f24c:	je     0x41f1fe
  41f24e:	dec    ebp
  41f24f:	xlat   BYTE PTR ds:[ebx]
  41f250:	pop    esi
  41f251:	xor    dh,BYTE PTR [ecx+0x33]
  41f254:	or     dl,0x62
  41f257:	adc    ah,cl
  41f259:	mov    bl,0x5b
  41f25b:	jbe    0x41f25c
  41f25d:	jg     0x41f1f6
  41f25f:	(bad)  
  41f260:	xor    al,0x7d
  41f262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f263:	push   edi
  41f264:	sbb    ah,bl
  41f266:	ror    BYTE PTR [ecx+0x7b],0xd
  41f26a:	fnstsw WORD PTR [eax+0x5820869d]
  41f270:	mov    esp,cs
  41f272:	fwait
  41f273:	dec    ecx
  41f274:	dec    esp
  41f275:	sar    DWORD PTR [edi+ebx*8],cl
  41f278:	scas   eax,DWORD PTR es:[edi]
  41f279:	arpl   WORD PTR [ebx],dx
  41f27b:	out    dx,eax
  41f27c:	jmp    0x41f2a9
  41f27e:	sbb    ebp,ecx
  41f280:	or     esp,DWORD PTR gs:[edx]
  41f283:	lods   al,BYTE PTR ds:[esi]
  41f284:	mov    edx,0x2b041ee0
  41f289:	out    0x94,al
  41f28b:	retf   
  41f28c:	mov    cl,BYTE PTR [ecx-0x10ce7476]
  41f292:	bound  esp,QWORD PTR [edx+0x6c301552]
  41f298:	outs   dx,BYTE PTR ds:[esi]
  41f299:	jmp    0xf609be5
  41f29e:	nop
  41f29f:	mov    ecx,0x774dfe4b
  41f2a4:	mov    ch,0x49
  41f2a6:	div    ah
  41f2a8:	cdq    
  41f2a9:	push   ebx
  41f2aa:	add    eax,0x7b8ada95
  41f2af:	sub    DWORD PTR [ebp+0x1e],ecx
  41f2b2:	pop    ebx
  41f2b3:	add    al,BYTE PTR [ecx+0x68]
  41f2b6:	adc    eax,0xbad5e0b3
  41f2bb:	int    0x50
  41f2bd:	mov    bl,0x99
  41f2bf:	retf   0x3304
  41f2c2:	jl     0x41f2b5
  41f2c4:	(bad)  
  41f2c5:	scas   al,BYTE PTR es:[edi]
  41f2c6:	mov    WORD PTR [ebx+ebp*4-0x29],ss
  41f2ca:	add    eax,0xcdb8bc13
  41f2cf:	pop    esp
  41f2d0:	sub    ebp,ebx
  41f2d2:	popf   
  41f2d3:	aas    
  41f2d4:	mov    esp,0x9cc54087
  41f2d9:	mov    eax,0xfe450f66
  41f2de:	test   eax,0x7665103b
  41f2e3:	lods   eax,DWORD PTR ds:[esi]
  41f2e4:	mov    ah,dh
  41f2e6:	and    esp,DWORD PTR [ecx-0x71]
  41f2e9:	inc    edx
  41f2ea:	jnp    0x41f309
  41f2ec:	pop    edi
  41f2ed:	or     DWORD PTR [ecx+0x3e],0xffffffa6
  41f2f1:	dec    edx
  41f2f2:	mov    edx,0x8f38a3fe
  41f2f7:	adc    DWORD PTR [edx],0xffffffe3
  41f2fa:	sub    al,0x46
  41f2fc:	(bad)  
  41f2ff:	inc    ebx
  41f300:	dec    ecx
  41f301:	pusha  
  41f302:	pop    ecx
  41f303:	(bad)  
  41f305:	(bad)  
  41f306:	sub    esi,DWORD PTR [edx-0x22164a41]
  41f30c:	mov    esi,0x47d5513a
  41f311:	push   esi
  41f312:	cld    
  41f313:	sub    al,0xaa
  41f315:	les    edi,FWORD PTR [ebx]
  41f317:	dec    esi
  41f318:	push   cs
  41f319:	sti    
  41f31a:	sub    eax,0x5e39fd5a
  41f31f:	xchg   ch,bh
  41f321:	inc    edi
  41f322:	sbb    al,0x18
  41f324:	nop
  41f325:	out    0xd7,eax
  41f327:	lods   ax,WORD PTR ds:[esi]
  41f329:	test   BYTE PTR [edx],bh
  41f32b:	jl     0x41f393
  41f32d:	ins    BYTE PTR es:[edi],dx
  41f32e:	ins    BYTE PTR es:[edi],dx
  41f32f:	aam    0x55
  41f331:	and    BYTE PTR [edi-0x6c],bh
  41f334:	out    0x9e,al
  41f336:	pop    esi
  41f337:	fbstp  TBYTE PTR [ebx]
  41f339:	lea    eax,[ebx]
  41f33b:	enter  0x2266,0xf0
  41f33f:	retf   0xef39
  41f342:	mov    dl,BYTE PTR [esi]
  41f344:	pop    edx
  41f345:	and    BYTE PTR [edx-0x4b],cl
  41f348:	jecxz  0x41f33e
  41f34a:	mov    ecx,0x402aa1a
  41f34f:	ret    
  41f350:	adc    ebp,DWORD PTR [eax+esi*8+0xcc5aaec]
  41f357:	ror    DWORD PTR [ebx+esi*4-0x6b21fc2f],0x40
  41f35f:	loop   0x41f3ae
  41f361:	inc    eax
  41f362:	leave  
  41f363:	or     DWORD PTR [edi-0x40],ebp
  41f366:	rol    BYTE PTR ds:0xff74849d,cl
  41f36c:	jecxz  0x41f396
  41f36e:	or     al,0xc4
  41f370:	sar    BYTE PTR ds:0x5b171d20,0x27
  41f377:	test   DWORD PTR ds:[ebx+0x7e],esi
  41f37b:	inc    eax
  41f37c:	add    DWORD PTR [edi-0x6b],ecx
  41f37f:	pop    es
  41f380:	out    0xef,al
  41f382:	adc    DWORD PTR [ebx+0x1e3670eb],esi
  41f388:	adc    al,0x6d
  41f38a:	mov    eax,DWORD PTR [esi]
  41f38c:	lods   eax,DWORD PTR ds:[esi]
  41f38d:	pop    ebp
  41f38e:	sar    dh,cl
  41f390:	pop    edi
  41f391:	inc    edx
  41f392:	jae    0x41f3bd
  41f394:	mov    ds:0xab8245e2,eax
  41f399:	add    eax,0x240aa78
  41f39e:	sub    al,0x63
  41f3a0:	test   al,ch
  41f3a2:	and    al,0x4f
  41f3a4:	cmp    ah,ch
  41f3a6:	and    al,0x4c
  41f3a8:	shr    DWORD PTR [eax+0x3],cl
  41f3ab:	jns    0x41f3ca
  41f3ad:	mov    edx,0xb0d05174
  41f3b2:	sbb    BYTE PTR [esi-0x1b],bh
  41f3b5:	lods   al,BYTE PTR ds:[esi]
  41f3b6:	ins    BYTE PTR es:[edi],dx
  41f3b7:	mov    esp,0xf6e0d645
  41f3bc:	fcom   DWORD PTR [edx]
  41f3be:	add    dl,0xa2
  41f3c1:	in     al,0x37
  41f3c3:	mov    dl,0xae
  41f3c5:	mov    ds:0x816dba1d,eax
  41f3ca:	xchg   ebx,eax
  41f3cb:	xor    BYTE PTR [esi+0x5a],ch
  41f3ce:	and    esi,DWORD PTR [edi-0x634c1011]
  41f3d4:	imul   esp,DWORD PTR [ebp+0x5592437b],0x35b6636e
  41f3de:	jb     0x41f44f
  41f3e0:	sub    DWORD PTR [ebx-0x7fae5782],0x9089055e
  41f3ea:	sub    eax,DWORD PTR [edi+eax*4+0x2382d95a]
  41f3f1:	lods   al,BYTE PTR ds:[esi]
  41f3f2:	or     eax,0x392f84e2
  41f3f7:	loopne 0x41f413
  41f3f9:	push   gs
  41f3fb:	std    
  41f3fc:	inc    edx
  41f3fd:	and    ebp,DWORD PTR [ebp-0x3d]
  41f400:	and    al,0x25
  41f402:	gs stos DWORD PTR es:[edi],eax
  41f404:	xor    ebx,esp
  41f406:	stos   BYTE PTR es:[edi],al
  41f407:	ror    BYTE PTR [esp+esi*8+0x7f],cl
  41f40b:	ins    DWORD PTR es:[edi],dx
  41f40c:	or     ch,BYTE PTR [eax]
  41f40e:	pop    esi
  41f40f:	jle    0x41f40c
  41f411:	jo     0x41f416
  41f413:	pop    ebx
  41f414:	ins    DWORD PTR es:[edi],dx
  41f415:	les    edi,FWORD PTR [ebp-0x1162f9af]
  41f41b:	gs mov WORD PTR fs:[ecx],cs
  41f41f:	adc    eax,0xb756a2a
  41f424:	pmaxsw mm4,QWORD PTR [eax+0x545b1b33]
  41f42b:	sbb    BYTE PTR [edx],ch
  41f42d:	jb     0x41f45c
  41f42f:	push   edx
  41f430:	mul    DWORD PTR [edx]
  41f432:	mov    edx,0xff8c99f9
  41f437:	arpl   WORD PTR [eax+0x654daf37],cx
  41f43d:	add    al,0xf0
  41f43f:	out    dx,al
  41f440:	lahf   
  41f441:	cwde   
  41f442:	mov    ebx,0x64c1b6e0
  41f447:	jne    0x41f439
  41f449:	sti    
  41f44a:	mov    edx,0x13a0636d
  41f44f:	pop    ebx
  41f450:	mov    al,ds:0x25267ea
  41f455:	sti    
  41f456:	out    dx,eax
  41f457:	test   al,0x4f
  41f459:	mov    DWORD PTR [esi+0x60],esp
  41f45c:	jmp    0x41f418
  41f45e:	xchg   BYTE PTR [ebx+0xccd55d9],dh
  41f464:	sar    esp,0xaa
  41f467:	lock push ecx
  41f469:	iret   
  41f46a:	(bad)
  41f46d:	push   ebp
  41f46e:	(bad)  
  41f46f:	popa   
  41f470:	loope  0x41f429
  41f472:	iret   
  41f473:	cdq    
  41f474:	bswap  ecx
  41f476:	adc    esp,DWORD PTR [ecx+0x548d9476]
  41f47c:	xor    DWORD PTR [ebx-0x7a],eax
  41f47f:	fcomip st,st(7)
  41f481:	cmp    dl,ah
  41f483:	retf   0x2040
  41f486:	lock inc ebp
  41f488:	sub    ch,ch
  41f48a:	jno    0x41f4b8
  41f48c:	mov    BYTE PTR [edi],bl
  41f48e:	rcr    BYTE PTR [edi+0x23bece77],0xdf
  41f495:	ss ffree st(1)
  41f498:	in     al,0x59
  41f49a:	in     al,dx
  41f49b:	push   esi
  41f49c:	push   cs
  41f49d:	sbb    BYTE PTR [ebp+esi*1-0x7e],0x2d
  41f4a2:	fsub   st,st(1)
  41f4a4:	out    0xbe,eax
  41f4a6:	adc    BYTE PTR [ebp-0x1350a742],dl
  41f4ac:	dec    ebx
  41f4ad:	push   ebp
  41f4ae:	xchg   DWORD PTR [edx+0x7bb2d1aa],edi
  41f4b4:	lods   eax,DWORD PTR ds:[esi]
  41f4b5:	add    eax,0xcbf5e5cd
  41f4ba:	adc    DWORD PTR [edi+0x790df301],ebx
  41f4c0:	retf   0x5d2f
  41f4c3:	lds    esp,FWORD PTR [edi+0x3b]
  41f4c6:	retf   
  41f4c7:	pop    ebx
  41f4c8:	adc    eax,0x358374cc
  41f4cd:	xchg   ebp,eax
  41f4ce:	push   edx
  41f4cf:	loope  0x41f527
  41f4d1:	push   edx
  41f4d2:	stc    
  41f4d3:	fs jecxz 0x41f523
  41f4d6:	aas    
  41f4d7:	push   ebp
  41f4d8:	or     DWORD PTR [ebx+0x1],0xdb0d7164
  41f4df:	call   0xf9e2:0xef278d5e
  41f4e6:	scas   al,BYTE PTR es:[edi]
  41f4e7:	cmp    dh,BYTE PTR [edi+0x39]
  41f4ea:	call   0x5a115d58
  41f4ef:	xor    al,0x5d
  41f4f1:	repz mov ecx,0x44ba06e2
  41f4f7:	fimul  DWORD PTR [edi+ebx*8]
  41f4fa:	iret   
  41f4fb:	xor    BYTE PTR [esi+ebx*8+0x4],bh
  41f4ff:	cwde   
  41f500:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f501:	nop
  41f502:	inc    ebx
  41f503:	xor    al,0xcc
  41f505:	mov    edx,0xc813bef1
  41f50a:	fs mov cl,0xc2
  41f50d:	xor    eax,0x8a22f3dd
  41f512:	push   esi
  41f513:	or     al,0xdf
  41f515:	in     al,dx
  41f516:	mov    bl,0x9c
  41f518:	cmp    al,0xdd
  41f51a:	shl    DWORD PTR [ebp+0x5fd70d66],cl
  41f520:	pop    DWORD PTR cs:[eax+ebx*2+0x1e]
  41f525:	mov    dh,BYTE PTR [eax+eiz*8]
  41f528:	cli    
  41f529:	cmp    BYTE PTR [esi+ebx*1],bl
  41f52c:	mov    eax,DWORD PTR [edi+0x1c82d0a9]
  41f532:	xlat   BYTE PTR ds:[ebx]
  41f533:	(bad)  
  41f534:	mov    ds:0x738a7f8d,eax
  41f539:	push   ebp
  41f53a:	lds    esi,FWORD PTR [ebx+0x1e]
  41f53d:	ret    
  41f53e:	jmp    0x41f565
  41f540:	outs   dx,BYTE PTR ds:[esi]
  41f541:	push   esp
  41f542:	jo     0x41f4d3
  41f544:	sbb    DWORD PTR [ebp+edi*1-0x72],edi
  41f548:	addr16 icebp 
  41f54a:	cld    
  41f54b:	lods   eax,DWORD PTR ds:[esi]
  41f54c:	push   ecx
  41f54d:	sbb    dh,bh
  41f54f:	fcom   DWORD PTR [eax-0x6dff7aa7]
  41f555:	xchg   ebp,eax
  41f556:	pushf  
  41f557:	and    ebp,DWORD PTR fs:[esi]
  41f55a:	(bad)  
  41f55b:	cli    
  41f55c:	aam    0xcc
  41f55e:	arpl   sp,cx
  41f560:	ret    0x6546
  41f563:	push   ds
  41f564:	add    dl,BYTE PTR [edx]
  41f566:	or     BYTE PTR [esi-0x1d],dl
  41f569:	icebp  
  41f56a:	push   eax
  41f56b:	into   
  41f56c:	mov    DWORD PTR [edx+0xd9b348b],edx
  41f572:	add    al,0x7b
  41f574:	ja     0x41f519
  41f576:	pushf  
  41f577:	jp     0x41f5bf
  41f579:	out    0xc7,al
  41f57b:	dec    di
  41f57d:	add    ebx,DWORD PTR [eax-0x71]
  41f580:	sub    eax,0x82af8f10
  41f585:	and    BYTE PTR [edx+0x297a99c4],0xc5
  41f58c:	rol    BYTE PTR [ebp+esi*1-0x23],cl
  41f590:	jecxz  0x41f593
  41f592:	adc    BYTE PTR [esi+0x27],0xc5
  41f596:	or     al,0xba
  41f598:	scas   eax,DWORD PTR es:[edi]
  41f599:	jl     0x41f553
  41f59b:	clc    
  41f59c:	jmp    0xaf54dba5
  41f5a1:	jb     0x41f5b1
  41f5a3:	add    dl,BYTE PTR [ecx+0x292d2d13]
  41f5a9:	pop    ds
  41f5aa:	jnp    0x41f5d5
  41f5ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5ad:	mov    al,0x2c
  41f5af:	mov    eax,ds:0x7ec04a2e
  41f5b4:	or     BYTE PTR [eax-0x10],0xef
  41f5b8:	mov    ah,0x8c
  41f5ba:	cli    
  41f5bb:	sar    BYTE PTR [eax+ebp*8+0x1d],1
  41f5bf:	popa   
  41f5c0:	pop    ebx
  41f5c1:	dec    ebx
  41f5c2:	add    bh,cl
  41f5c4:	cmp    BYTE PTR [edx+0x57],0x96
  41f5c8:	ja     0x41f5f4
  41f5ca:	fnstcw WORD PTR [ebx]
  41f5cc:	xchg   esi,eax
  41f5cd:	std    
  41f5ce:	dec    ebp
  41f5cf:	mov    BYTE PTR [edi-0x15],dl
  41f5d2:	call   0x277e:0x31ec80f1
  41f5d9:	mov    esp,0x223dfdea
  41f5de:	mov    ds:0xe40cf64f,al
  41f5e3:	das    
  41f5e4:	xor    DWORD PTR [eax+ebp*1+0x77],eax
  41f5e8:	aam    0xea
  41f5ea:	call   0xbf57:0x60a218c2
  41f5f1:	nop
  41f5f2:	jecxz  0x41f630
  41f5f4:	clc    
  41f5f5:	loop   0x41f61c
  41f5f7:	in     eax,0xcf
  41f5f9:	ficomp DWORD PTR [ebx+ecx*1]
  41f5fc:	imul   ebp,DWORD PTR [esi],0x41018ba1
  41f602:	aaa    
  41f603:	(bad)  
  41f604:	jmp    0x41f66b
  41f606:	pop    esi
  41f607:	shr    BYTE PTR es:[esi+0x23],cl
  41f60b:	call   0x50b1:0xbac5bdea
  41f612:	call   0xb0e8ab8c
  41f617:	or     esi,DWORD PTR [ebx]
  41f619:	(bad)  
  41f61a:	and    DWORD PTR [ecx],edx
  41f61c:	imul   edx,DWORD PTR ds:[esi],0xffffffba
  41f620:	fisttp WORD PTR [ebx]
  41f622:	pop    eax
  41f623:	mov    esp,0xd2d0fd71
  41f628:	scas   eax,DWORD PTR es:[edi]
  41f629:	dec    ebx
  41f62a:	add    BYTE PTR [ebx],ch
  41f62c:	push   0x2a
  41f62e:	in     al,dx
  41f62f:	cli    
  41f630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f631:	std    
  41f632:	sub    DWORD PTR [ebp+0x3a62afd1],0x89fd3972
  41f63c:	dec    esp
  41f63d:	(bad)  [edx+0x2a]
  41f640:	data16 fwait
  41f642:	and    ah,BYTE PTR [esi+esi*2-0x58]
  41f646:	jle    0x41f661
  41f648:	or     dh,cl
  41f64a:	stos   DWORD PTR es:[edi],eax
  41f64b:	sub    dh,BYTE PTR [esi+0x7f05a1e3]
  41f651:	cmp    eax,0x7631159d
  41f656:	jmp    0x79e1acbc
  41f65b:	mov    bl,0x2c
  41f65d:	push   cs
  41f65e:	inc    edx
  41f65f:	scas   eax,DWORD PTR es:[edi]
  41f660:	jnp    0x41f625
  41f662:	inc    edi
  41f663:	push   esi
  41f664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f665:	xchg   ecx,eax
  41f666:	push   0x3d5a692d
  41f66b:	lahf   
  41f66c:	mov    ch,0xd8
  41f66e:	imul   ebp,eax,0x75f01485
  41f674:	jo     0x41f60a
  41f676:	fwait
  41f677:	iret   
  41f678:	mov    eax,0x49d609a4
  41f67d:	dec    ebx
  41f67e:	push   esp
  41f67f:	loopne 0x41f63e
  41f681:	icebp  
  41f682:	jbe    0x41f674
  41f684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f685:	repz scas al,BYTE PTR es:[edi]
  41f687:	pop    es
  41f688:	or     esp,ebp
  41f68a:	mov    eax,ds:0x9bba14f8
  41f68f:	push   esp
  41f690:	sub    DWORD PTR [edi-0x49],0x90b89e82
  41f697:	mov    bl,0xf9
  41f699:	call   0x189eab3a
  41f69e:	pop    ebx
  41f69f:	cmc    
  41f6a0:	cdq    
  41f6a1:	enter  0x1fad,0x5e
  41f6a5:	in     eax,0x3
  41f6a7:	scas   eax,DWORD PTR es:[edi]
  41f6a8:	out    dx,eax
  41f6a9:	adc    cl,BYTE PTR ds:0xfda38fae
  41f6af:	shl    BYTE PTR [esi+0xa],0x3e
  41f6b3:	imul   esi,DWORD PTR ss:[eax-0x77e8bf79],0xa152159e
  41f6be:	retf   
  41f6bf:	popf   
  41f6c0:	cmp    al,BYTE PTR [ecx-0x58]
  41f6c3:	jmp    0xc383ce1e
  41f6c8:	xchg   ebx,eax
  41f6c9:	adc    dl,dh
  41f6cb:	popf   
  41f6cc:	xor    eax,0x8d68fed5
  41f6d1:	and    bh,BYTE PTR [edx+0x2d3c6dac]
  41f6d7:	adc    bl,BYTE PTR [edi-0x73]
  41f6da:	mov    bh,0x81
  41f6dc:	loope  0x41f695
  41f6de:	and    ecx,DWORD PTR [eax+0x59]
  41f6e1:	sub    al,0xc7
  41f6e3:	pusha  
  41f6e4:	int3   
  41f6e5:	fiadd  DWORD PTR [esi]
  41f6e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6e8:	(bad)  
  41f6e9:	xchg   edx,eax
  41f6ea:	and    eax,0x350e684e
  41f6ef:	stos   BYTE PTR es:[edi],al
  41f6f0:	xchg   al,cl
  41f6f2:	repnz ins DWORD PTR es:[edi],dx
  41f6f4:	loope  0x41f765
  41f6f6:	jno    0x41f6be
  41f6f8:	sahf   
  41f6f9:	add    dh,0x62
  41f6fc:	int3   
  41f6fd:	inc    eax
  41f6fe:	mov    bl,BYTE PTR [edx]
  41f700:	adc    eax,0x9e20b876
  41f705:	jmp    0x2bff38d4
  41f70a:	pop    es
  41f70b:	sahf   
  41f70c:	sahf   
  41f70d:	jno    0x41f696
  41f70f:	dec    edx
  41f710:	mov    ecx,0x5abc9156
  41f715:	dec    eax
  41f716:	mov    ecx,0x81b73f06
  41f71b:	xchg   edi,eax
  41f71c:	mov    cl,0xf
  41f71e:	jle    0x41f6ee
  41f720:	mov    eax,ds:0xb18982e7
  41f725:	fisttp QWORD PTR [eax-0x370f4285]
  41f72b:	cmp    ecx,DWORD PTR [edx]
  41f72d:	ret    0xbdad
  41f730:	jg     0x41f6ce
  41f732:	mov    bh,0x15
  41f734:	dec    eax
  41f735:	xor    eax,0xf041e4dd
  41f73a:	push   ebp
  41f73b:	fcmovnbe st,st(2)
  41f73d:	cmp    edx,DWORD PTR [edi]
  41f73f:	and    esp,DWORD PTR [eax]
  41f741:	fcomp  DWORD PTR [ebx]
  41f743:	mov    ch,0xe9
  41f745:	fwait
  41f746:	pop    edx
  41f747:	or     ebp,DWORD PTR [edx+0x2e5653d9]
  41f74d:	(bad)  
  41f74e:	fsub   QWORD PTR [esi+0x6a7a4509]
  41f754:	stc    
  41f755:	lods   al,BYTE PTR ds:[esi]
  41f756:	je     0x41f731
  41f758:	cld    
  41f759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f75a:	push   ecx
  41f75b:	test   DWORD PTR [esi-0x5d],edi
  41f75e:	dec    esi
  41f75f:	das    
  41f760:	inc    esp
  41f761:	pushf  
  41f762:	pop    edx
  41f763:	fwait
  41f764:	jmp    0x41f780
  41f766:	arpl   si,bp
  41f768:	pop    eax
  41f769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f76a:	ja     0x41f70c
  41f76c:	into   
  41f76d:	or     cl,BYTE PTR [eax-0x716d4f0a]
  41f773:	jp     0x41f700
  41f775:	retf   
  41f776:	jp     0x41f7a6
  41f778:	jmp    0x87bd:0x12c2627
  41f77f:	jge    0x41f7cc
  41f781:	fisttp WORD PTR cs:[ebx-0x4b]
  41f785:	sub    BYTE PTR [esi],0xbe
  41f788:	(bad)  
  41f789:	xchg   ecx,eax
  41f78a:	push   ecx
  41f78b:	aad    0xf2
  41f78d:	cmc    
  41f78e:	ja     0x41f7e2
  41f790:	lods   eax,DWORD PTR ds:[esi]
  41f791:	idiv   dh
  41f793:	fwait
  41f794:	(bad)  
  41f796:	sub    cl,BYTE PTR [eax-0x53]
  41f799:	pusha  
  41f79a:	out    dx,al
  41f79b:	jmp    0x71a1be2c
  41f7a0:	push   ecx
  41f7a1:	xor    edi,DWORD PTR [edx]
  41f7a3:	mov    edi,0xdc7308f9
  41f7a8:	pushf  
  41f7a9:	xor    BYTE PTR [ebx],ch
  41f7ab:	leave  
  41f7ac:	mov    al,0xb2
  41f7ae:	sub    cl,cl
  41f7b0:	call   0x2c52:0x97d06821
  41f7b7:	pop    es
  41f7b8:	test   DWORD PTR [ebx],ecx
  41f7ba:	ret    
  41f7bb:	push   cs
  41f7bc:	push   ss
  41f7bd:	cmp    ah,0x48
  41f7c0:	and    eax,0x9de8edbb
  41f7c5:	cmp    dl,BYTE PTR [esi+eiz*1+0x50]
  41f7c9:	jp     0x41f7d5
  41f7cb:	in     eax,0x3a
  41f7cd:	push   ds
  41f7ce:	adc    eax,0x2aa8f331
  41f7d3:	adc    al,0x40
  41f7d5:	repnz icebp 
  41f7d7:	popa   
  41f7d8:	adc    bl,BYTE PTR [esi+0x2f]
  41f7db:	fst    QWORD PTR [ebx]
  41f7dd:	adc    DWORD PTR [ecx],0xe20bb27b
  41f7e3:	imul   esi,DWORD PTR [ebp+0x68],0xf28e0bff
  41f7ea:	popf   
  41f7eb:	loopne 0x41f7d2
  41f7ed:	sbb    eax,0x710d7db7
  41f7f2:	cmp    eax,0x63e6c0e2
  41f7f7:	popf   
  41f7f8:	nop
  41f7f9:	mov    ebp,0xb851789d
  41f7fe:	dec    ebp
  41f7ff:	jo     0x41f800
  41f801:	rol    DWORD PTR [eax],0xf0
  41f804:	xchg   ebp,eax
  41f805:	je     0x41f87b
  41f807:	ret    0xf3cb
  41f80a:	(bad)  
  41f80b:	pop    ds
  41f80c:	mov    bh,0xde
  41f80e:	fwait
  41f80f:	inc    ecx
  41f810:	das    
  41f811:	out    dx,eax
  41f812:	sub    eax,DWORD PTR [edx-0x5]
  41f815:	adc    ah,bh
  41f817:	call   0x27e6c1f0
  41f81c:	lods   al,BYTE PTR ds:[esi]
  41f81d:	and    eax,0xbeb6e9d9
  41f822:	mov    eax,0xee17a6d
  41f827:	push   ss
  41f828:	dec    edi
  41f829:	pop    es
  41f82a:	pop    ebx
  41f82b:	xchg   edx,eax
  41f82c:	(bad)  
  41f82d:	mov    eax,0x9a878d76
  41f832:	out    0xda,al
  41f834:	sbb    BYTE PTR [esi],dh
  41f836:	hlt    
  41f837:	jp     0x41f832
  41f839:	rcl    DWORD PTR [eax+esi*1],0xfb
  41f83d:	rcl    BYTE PTR [ecx-0x381e74b7],cl
  41f843:	pop    ds
  41f844:	pop    ebp
  41f845:	pop    edi
  41f846:	(bad)  
  41f847:	loopne 0x41f87b
  41f849:	(bad)  
  41f84a:	scas   al,BYTE PTR es:[edi]
  41f84b:	shl    DWORD PTR [ecx+0x72],cl
  41f84e:	and    eax,0x93d4d83c
  41f853:	push   ecx
  41f854:	push   ebx
  41f855:	sbb    eax,0x4acf836
  41f85a:	sar    DWORD PTR [edi+0x34d7dc53],0x7
  41f861:	and    ebx,DWORD PTR [eax+0x79]
  41f864:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41f866:	ja     0x41f8ad
  41f868:	pop    ecx
  41f869:	sub    al,0xef
  41f86b:	dec    ebp
  41f86c:	mov    ch,BYTE PTR [ebp-0x199930c0]
  41f872:	or     eax,0xaae4dc0d
  41f877:	and    ecx,ebx
  41f879:	cmp    al,0xb1
  41f87b:	sbb    cl,dl
  41f87d:	pop    ss
  41f87e:	mov    ecx,eax
  41f880:	inc    ebx
  41f881:	lds    esp,FWORD PTR [ecx+0x13]
  41f884:	xchg   esp,eax
  41f885:	jae    0x41f8b8
  41f887:	jae    0x41f894
  41f889:	xchg   edx,eax
  41f88a:	(bad)  
  41f88c:	jno    0x41f8e4
  41f88e:	xor    ecx,DWORD PTR [ebx]
  41f890:	ins    BYTE PTR es:[edi],dx
  41f891:	mov    bh,0xea
  41f893:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f894:	int3   
  41f895:	xchg   ebp,eax
  41f896:	push   es
  41f897:	inc    eax
  41f898:	ins    BYTE PTR es:[edi],dx
  41f899:	add    eax,0x3209d5d8
  41f89e:	push   0xbcf1ccae
  41f8a3:	or     dx,WORD PTR [ecx+0x2e1ca7cc]
  41f8aa:	lods   eax,DWORD PTR ds:[esi]
  41f8ab:	and    al,0x9e
  41f8ad:	adc    al,0xb
  41f8af:	nop
  41f8b0:	mov    dl,0xf6
  41f8b2:	test   DWORD PTR [ebx+ebx*1+0x2d1bf942],eax
  41f8b9:	not    DWORD PTR [ebx-0x58b32647]
  41f8bf:	repnz xor BYTE PTR [ebx+0x3c],0xa5
  41f8c4:	push   ss
  41f8c5:	stc    
  41f8c6:	jno    0x41f868
  41f8c8:	sbb    dl,BYTE PTR ds:0x1e9093d3
  41f8ce:	add    BYTE PTR [edi],bl
  41f8d0:	or     eax,DWORD PTR [ebx-0x22157366]
  41f8d6:	xchg   DWORD PTR [ebx-0x35],ebx
  41f8d9:	mov    ?,WORD PTR [ebx-0x26b3c99c]
  41f8df:	adc    al,0xf2
  41f8e1:	or     DWORD PTR [ecx],ecx
  41f8e3:	gs out dx,al
  41f8e5:	loop   0x41f896
  41f8e7:	mov    ebx,0x4d262926
  41f8ec:	mov    edi,0xc47757d
  41f8f1:	in     eax,0x37
  41f8f3:	jg     0x41f946
  41f8f5:	mov    al,BYTE PTR [eax+edi*2]
  41f8f8:	in     al,0xba
  41f8fa:	cdq    
  41f8fb:	xchg   ebp,eax
  41f8fc:	add    eax,0x10737439
  41f901:	leave  
  41f902:	mov    gs,WORD PTR [ecx+ecx*2+0x786f043b]
  41f909:	mov    eax,0xc48584fe
  41f90e:	jle    0x41f89f
  41f910:	retf   0xa4f8
  41f913:	mov    ds:0xa996ee4d,al
  41f918:	out    0x61,al
  41f91a:	rol    BYTE PTR [edi+0x56df3d60],cl
  41f920:	mov    al,ds:0x58cccd7c
  41f925:	fimul  WORD PTR [ecx+0x17f451e1]
  41f92b:	popa   
  41f92c:	sbb    ebx,ebp
  41f92e:	mov    edx,0xf813a9ba
  41f933:	ror    BYTE PTR [edx-0x67],1
  41f936:	cmp    ch,bh
  41f938:	jecxz  0x41f99a
  41f93a:	push   0x20
  41f93c:	mov    bh,0xcf
  41f93e:	push   esp
  41f93f:	mov    ebp,0x7c913640
  41f944:	cwde   
  41f945:	test   eax,0x2ce596b1
  41f94a:	dec    esp
  41f94b:	mov    al,ds:0x64d1871
  41f950:	cld    
  41f951:	xor    eax,0x44689bc6
  41f956:	sbb    DWORD PTR [esi],ebx
  41f958:	popa   
  41f959:	sub    bl,ah
  41f95b:	nop
  41f95c:	mov    ebp,0x6f64a08
  41f961:	mov    edx,0xd5164590
  41f966:	arpl   WORD PTR [esi+0x5b],si
  41f969:	addr16 icebp 
  41f96b:	ja     0x41f96f
  41f96d:	mov    dh,0x48
  41f96f:	int    0x3c
  41f971:	out    0x9,eax
  41f973:	dec    edi
  41f974:	sub    eax,0xf7968931
  41f979:	out    dx,eax
  41f97a:	loop   0x41f9ba
  41f97c:	mov    ebp,0x93a005ec
  41f981:	sub    bh,0x8e
  41f984:	mov    esp,0x46916409
  41f989:	jbe    0x41f97d
  41f98b:	lods   eax,DWORD PTR ds:[esi]
  41f98c:	dec    esi
  41f98d:	loopne 0x41f94f
  41f98f:	mov    ebp,0xd9280740
  41f994:	mov    esp,0x403ced55
  41f999:	jl     0x41f959
  41f99b:	std    
  41f99c:	(bad)  
  41f99d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f99e:	inc    ebx
  41f99f:	mov    esi,0xc84345b1
  41f9a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9a5:	jg     0x41f9d3
  41f9a7:	pop    ebp
  41f9a8:	push   esp
  41f9a9:	mov    bl,0xf9
  41f9ab:	daa    
  41f9ac:	in     al,dx
  41f9ad:	in     eax,0x4e
  41f9af:	lds    ebx,FWORD PTR [esi-0x49c0b89e]
  41f9b5:	mov    al,ds:0x82026e6d
  41f9ba:	int    0xdd
  41f9bc:	add    al,0xc6
  41f9be:	in     eax,dx
  41f9bf:	jecxz  0x41fa03
  41f9c1:	pusha  
  41f9c2:	and    BYTE PTR [eax-0x9dff8b0],bh
  41f9c8:	xor    edi,ebp
  41f9ca:	cmp    al,0x2c
  41f9cc:	jnp    0x41f9a9
  41f9ce:	icebp  
  41f9cf:	mov    bl,dh
  41f9d1:	outs   dx,BYTE PTR ds:[esi]
  41f9d2:	add    edi,DWORD PTR [edi-0x61eef822]
  41f9d8:	cli    
  41f9d9:	mov    eax,esp
  41f9db:	dec    ecx
  41f9dc:	inc    esi
  41f9dd:	inc    eax
  41f9de:	jno    0x41fa29
  41f9e0:	xor    eax,0x57916486
  41f9e5:	mov    ebx,0x537f795d
  41f9ea:	pop    ds
  41f9eb:	mov    eax,ds:0x82f3106f
  41f9f0:	movzx  esi,al
  41f9f3:	lock (bad) 
  41f9f5:	push   ecx
  41f9f6:	xchg   ebx,eax
  41f9f7:	xor    ecx,eax
  41f9f9:	in     eax,0x2
  41f9fb:	push   0x80bf44df
  41fa00:	or     DWORD PTR [ebp+0x16],edi
  41fa03:	adc    al,0x4d
  41fa05:	mov    BYTE PTR [ecx-0x5261eafc],al
  41fa0b:	or     ecx,DWORD PTR [edi-0x37fa63eb]
  41fa11:	or     DWORD PTR [edx-0x3582a0e2],edx
  41fa17:	inc    ebp
  41fa18:	pop    edx
  41fa19:	aad    0x79
  41fa1b:	shl    DWORD PTR [edx+0x1215f969],cl
  41fa21:	lods   eax,DWORD PTR ds:[esi]
  41fa22:	cmp    dl,al
  41fa24:	dec    ecx
  41fa25:	or     DWORD PTR [edx+0x2],esi
  41fa28:	cld    
  41fa29:	in     eax,0xc
  41fa2b:	mov    ds:0xc8ca50b2,al
  41fa30:	xchg   ecx,eax
  41fa31:	test   DWORD PTR [ecx],ebp
  41fa33:	jno    0x41f9be
  41fa35:	mov    dl,0x66
  41fa37:	cdq    
  41fa38:	retf   
  41fa39:	iret   
  41fa3a:	dec    BYTE PTR [edi]
  41fa3c:	repz sbb BYTE PTR [esi-0x45],al
  41fa40:	repz mov ecx,0xe2cdd35d
  41fa46:	pop    edx
  41fa47:	xor    DWORD PTR [edi+0x13],esi
  41fa4a:	pop    esi
  41fa4b:	mov    BYTE PTR [edx+eiz*8+0x43],dh
  41fa4f:	aas    
  41fa50:	scas   eax,DWORD PTR es:[edi]
  41fa51:	sbb    DWORD PTR [edi+0x7],edx
  41fa54:	xor    eax,0x154b0829
  41fa59:	mov    bl,0x79
  41fa5b:	pop    ebx
  41fa5c:	out    dx,al
  41fa5d:	jmp    0x41fa6d
  41fa5f:	and    eax,0x39b35718
  41fa64:	bound  edx,QWORD PTR [ebx+eax*2+0x5e3676cc]
  41fa6b:	js     0x41fa24
  41fa6d:	add    cl,ch
  41fa6f:	inc    esi
  41fa70:	call   FWORD PTR [edx-0x58]
  41fa73:	sub    al,0xa5
  41fa75:	adc    al,0x1b
  41fa77:	pop    ds
  41fa78:	cld    
  41fa79:	mov    ds:0xb5feceb4,eax
  41fa7e:	scas   eax,DWORD PTR es:[edi]
  41fa7f:	sbb    DWORD PTR [eax+ebp*1-0x44],esi
  41fa83:	cmp    eax,0xc5ec2f91
  41fa88:	or     eax,0x374bf8d6
  41fa8d:	adc    DWORD PTR [ecx],edx
  41fa8f:	in     eax,0x96
  41fa91:	lods   eax,DWORD PTR ds:[esi]
  41fa92:	jnp    0x41faec
  41fa94:	punpckhdq mm6,mm0
  41fa97:	test   al,0x8
  41fa99:	adc    ecx,DWORD PTR [edx+ebp*4-0x49]
  41fa9d:	jmp    0x41fb1d
  41fa9f:	dec    ebx
  41faa0:	or     al,0x15
  41faa2:	sbb    al,0x5
  41faa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41faa5:	out    0xb3,eax
  41faa7:	jo     0x41fa96
  41faa9:	leave  
  41faaa:	pop    ebx
  41faab:	xor    dh,BYTE PTR [ecx-0x25]
  41faae:	xchg   esp,eax
  41faaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fab0:	pop    es
  41fab1:	aaa    
  41fab2:	leave  
  41fab3:	push   0xce717693
  41fab8:	inc    ecx
  41fab9:	pop    ecx
  41faba:	sub    ah,BYTE PTR [ebp+0x746ed7de]
  41fac0:	jge    0x41faf0
  41fac2:	test   al,0x72
  41fac4:	jl     0x41fb39
  41fac6:	enter  0xffb4,0x88
  41faca:	out    0xed,al
  41facc:	mov    eax,ds:0xdc6c410d
  41fad1:	loopne 0x41fade
  41fad3:	xchg   edi,eax
  41fad4:	dec    ebp
  41fad5:	popf   
  41fad6:	inc    ebp
  41fad7:	and    dh,BYTE PTR [esi+0x376cbba0]
  41fadd:	dec    ecx
  41fade:	push   ecx
  41fadf:	jmp    0x778cb536
  41fae4:	icebp  
  41fae5:	sub    bl,BYTE PTR [edi]
  41fae7:	mov    bh,0x4
  41fae9:	dec    ebx
  41faea:	add    DWORD PTR [edi-0x9],esi
  41faed:	mov    ah,0xe6
  41faef:	xrelease xchg BYTE PTR [eax-0x16],al
  41faf3:	jecxz  0x41fb1d
  41faf5:	mov    ecx,0xd71c137
  41fafa:	sbb    al,0xd6
  41fafc:	call   0x9de40100
  41fb01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb02:	fxam   
  41fb04:	pusha  
  41fb05:	dec    ebx
  41fb06:	push   ebx
  41fb07:	cmp    BYTE PTR [esi+0x7a],cl
  41fb0a:	enter  0x19cb,0xa6
  41fb0e:	out    0xf0,eax
  41fb10:	cwde   
  41fb11:	push   0xffffffcd
  41fb13:	jno    0x41fb7a
  41fb15:	mov    al,ds:0xda9b616f
  41fb1a:	call   0xed56df84
  41fb1f:	xor    DWORD PTR [ebp-0x7d],esi
  41fb22:	out    dx,al
  41fb23:	pop    ebp
  41fb24:	retf   
  41fb25:	push   ss
  41fb26:	retf   
  41fb27:	mov    dh,0x82
  41fb29:	repnz adc edi,ebp
  41fb2c:	aas    
  41fb2d:	inc    edx
  41fb2e:	idiv   BYTE PTR [esi]
  41fb30:	in     eax,dx
  41fb31:	and    bh,bl
  41fb33:	cmp    eax,0xcf244282
  41fb38:	and    al,BYTE PTR [esi+ebp*8-0x24388893]
  41fb3f:	fwait
  41fb40:	ds jmp 0x9ba1:0x70985edd
  41fb48:	push   eax
  41fb49:	popa   
  41fb4a:	in     eax,dx
  41fb4b:	jb     0x41fb4a
  41fb4d:	inc    DWORD PTR [eax]
  41fb4f:	jg     0x41fb3f
  41fb51:	sub    eax,0x35df8d83
  41fb56:	ret    
  41fb57:	cs xchg ebx,eax
  41fb59:	nop    DWORD PTR [edx-0x34a64557]
  41fb60:	in     al,dx
  41fb61:	or     edi,ebp
  41fb63:	cmp    BYTE PTR [ebx],al
  41fb65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb66:	pop    es
  41fb67:	ret    
  41fb68:	(bad)  
  41fb69:	fwait
  41fb6a:	mov    BYTE PTR [eax],0x66
  41fb6d:	and    ah,BYTE PTR [esi-0x7e]
  41fb70:	das    
  41fb71:	fild   QWORD PTR [ebp-0xb]
  41fb74:	inc    esi
  41fb75:	push   ecx
  41fb76:	push   ebx
  41fb77:	add    eax,0x83dd0085
  41fb7c:	mov    eax,ds:0x2954000
  41fb81:	int3   
  41fb82:	inc    edx
  41fb83:	ret    0xa89c
  41fb86:	sub    al,BYTE PTR [esi]
  41fb88:	mov    bl,0xea
  41fb8a:	mov    eax,ds:0xc2494a49
  41fb8f:	test   eax,0x82c15ae4
  41fb94:	add    eax,0x2d200ed9
  41fb99:	dec    ebp
  41fb9a:	in     al,0xfc
  41fb9c:	xchg   ebx,eax
  41fb9d:	outs   dx,BYTE PTR ds:[esi]
  41fb9e:	shl    BYTE PTR [ecx-0x1b],cl
  41fba1:	lock cmp al,0x8a
  41fba4:	outs   dx,DWORD PTR ds:[esi]
  41fba5:	mov    ds:0x9a8a19b5,al
  41fbaa:	xor    al,0x74
  41fbac:	xor    al,0xfe
  41fbae:	gs pop es
  41fbb0:	ds adc ah,ch
  41fbb3:	dec    edi
  41fbb4:	jge    0x41fc35
  41fbb6:	push   ebp
  41fbb7:	mov    ch,0x53
  41fbb9:	add    DWORD PTR [edi+0x1f6e17f],edx
  41fbbf:	xchg   edi,eax
  41fbc0:	loop   0x41fba1
  41fbc2:	cs (bad) 
  41fbc4:	pop    esi
  41fbc5:	mov    edx,0xe1dd9367
  41fbca:	jge    0x41fbeb
  41fbcc:	pusha  
  41fbcd:	inc    edx
  41fbce:	or     dh,dh
  41fbd0:	les    esi,FWORD PTR [edi+0x4c4ab4e6]
  41fbd6:	rcl    BYTE PTR [ecx],0xef
  41fbd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbdb:	loope  0x41fb88
  41fbdd:	(bad)  
  41fbde:	push   esi
  41fbdf:	repnz adc esi,DWORD PTR [edx+0x5fc04c6e]
  41fbe6:	enter  0x244a,0x9b
  41fbea:	fidivr WORD PTR [ebp+0x626e7f04]
  41fbf0:	imul   eax,DWORD PTR [eax],0xffffff97
  41fbf3:	mov    cl,0xed
  41fbf5:	mov    esi,0xcf189fba
  41fbfa:	shr    DWORD PTR [eax],0x12
  41fbfd:	xchg   esp,eax
  41fbfe:	dec    edi
  41fbff:	aaa    
  41fc00:	or     eax,0x23b77638
  41fc05:	adc    BYTE PTR [ecx],0xa9
  41fc08:	mov    cl,0x75
  41fc0a:	pop    ecx
  41fc0b:	lock (bad) 
  41fc0d:	out    dx,al
  41fc0e:	and    esp,DWORD PTR ds:0x91d03274
  41fc14:	addr16 dec esi
  41fc16:	repnz hlt 
  41fc18:	test   BYTE PTR ds:0xb4ef939d,al
  41fc1e:	aam    0x34
  41fc20:	xchg   ebx,eax
  41fc21:	ss (bad) 
  41fc23:	mov    al,ds:0x65f340b
  41fc28:	jo     0x41fc64
  41fc2a:	push   es
  41fc2b:	push   esp
  41fc2c:	lds    edx,FWORD PTR [esi-0x40]
  41fc2f:	ficom  WORD PTR [eax-0x5076dd3]
  41fc35:	popa   
  41fc36:	or     ah,BYTE PTR [bp+di-0x4fd]
  41fc3b:	inc    ebx
  41fc3c:	or     ebp,esp
  41fc3e:	fnstenv [ebx]
  41fc40:	adc    al,0x18
  41fc42:	ins    BYTE PTR es:[edi],dx
  41fc43:	mov    ch,0x36
  41fc45:	outs   dx,DWORD PTR ds:[esi]
  41fc46:	rcl    BYTE PTR [edx-0x5be75274],0x76
  41fc4d:	cld    
  41fc4e:	dec    esp
  41fc4f:	sub    eax,0xa9c95078
  41fc54:	inc    eax
  41fc55:	jg     0x41fcd0
  41fc57:	adc    ch,BYTE PTR [edx-0x50]
  41fc5a:	loop   0x41fc65
  41fc5c:	ret    
  41fc5d:	dec    esp
  41fc5e:	push   ss
  41fc5f:	sub    esi,DWORD PTR es:[eax*8+0x547c51be]
  41fc67:	jno    0x41fc02
  41fc69:	outs   dx,DWORD PTR ds:[esi]
  41fc6a:	daa    
  41fc6b:	bound  esi,QWORD PTR [edi-0x32]
  41fc6e:	jmp    0x2b953202
  41fc73:	sahf   
  41fc74:	aam    0xca
  41fc76:	push   edx
  41fc77:	pop    eax
  41fc78:	(bad)  
  41fc79:	std    
  41fc7a:	cmc    
  41fc7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc7c:	into   
  41fc7d:	aad    0x47
  41fc7f:	jnp    0x41fcae
  41fc81:	addr16 dec ebx
  41fc83:	mov    esi,0xa7a315fb
  41fc88:	and    DWORD PTR [ecx],ecx
  41fc8a:	(bad)  
  41fc8b:	jecxz  0x41fc44
  41fc8d:	mov    dl,0xd
  41fc8f:	xchg   esp,eax
  41fc90:	push   ss
  41fc91:	xor    BYTE PTR [edi-0x25a55ff7],bl
  41fc97:	pop    es
  41fc98:	or     dl,BYTE PTR [edx+0x56]
  41fc9b:	mov    ds:0xfaa29d6d,al
  41fca0:	xchg   esi,eax
  41fca1:	fdivr  DWORD PTR [eax]
  41fca3:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41fca5:	cmp    eax,0xe488ef82
  41fcaa:	fstp   TBYTE PTR [esi]
  41fcac:	ss std 
  41fcae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcaf:	jge    0x41fc54
  41fcb1:	cld    
  41fcb2:	rcr    al,0x87
  41fcb5:	and    ah,0x83
  41fcb8:	ret    0x18fc
  41fcbb:	fistp  WORD PTR [esi+0x2b]
  41fcbe:	lods   al,BYTE PTR ds:[esi]
  41fcbf:	into   
  41fcc0:	leave  
  41fcc1:	xor    BYTE PTR [ecx+0x2a],bh
  41fcc4:	dec    eax
  41fcc5:	inc    edi
  41fcc6:	gs pop eax
  41fcc8:	cmp    ebx,esi
  41fcca:	mov    ebp,0xc6b10509
  41fccf:	dec    ebx
  41fcd0:	dec    ebp
  41fcd1:	mov    al,BYTE PTR ds:0x8535b049
  41fcd7:	push   esp
  41fcd8:	das    
  41fcd9:	int3   
  41fcda:	sub    esp,DWORD PTR [edi-0x3b]
  41fcdd:	inc    ecx
  41fcde:	or     dl,BYTE PTR [edx]
  41fce0:	imul   edi,DWORD PTR ds:0x3454feb2,0x5c
  41fce7:	cmp    eax,0xcafe55ce
  41fcec:	dec    ebp
  41fced:	out    0x34,eax
  41fcef:	adc    edx,ebp
  41fcf1:	test   eax,0x38ef2b22
  41fcf6:	in     al,0x51
  41fcf8:	fmul   DWORD PTR [ebp+0x6af2d654]
  41fcfe:	fstp   DWORD PTR [edx]
  41fd00:	sti    
  41fd01:	mov    ebx,0xbc54d936
  41fd06:	enter  0xc9df,0xbb
  41fd0a:	jne    0x41fcfe
  41fd0c:	icebp  
  41fd0d:	cwde   
  41fd0e:	xor    cl,BYTE PTR [edx]
  41fd10:	xchg   edx,eax
  41fd11:	mov    ebx,0x151d1371
  41fd16:	or     al,0x81
  41fd18:	(bad)  
  41fd19:	loopne 0x41fd6f
  41fd1b:	in     eax,0x4a
  41fd1d:	ja     0x41fcff
  41fd1f:	mov    ch,0xa5
  41fd21:	or     BYTE PTR [edi+0x28a78b8c],dh
  41fd27:	(bad)  
  41fd29:	push   edi
  41fd2a:	or     al,0x3b
  41fd2c:	lock lods al,BYTE PTR ds:[esi]
  41fd2e:	rcl    edx,0xbb
  41fd31:	fsub   DWORD PTR [edi+0x14]
  41fd34:	xchg   ecx,eax
  41fd35:	lods   eax,DWORD PTR ds:[esi]
  41fd36:	sahf   
  41fd37:	mov    dh,0x17
  41fd39:	das    
  41fd3a:	imul   ebx,ebp,0x78
  41fd3d:	out    0x4d,al
  41fd3f:	sub    BYTE PTR [esi+0x2b7bc6c2],bh
  41fd45:	(bad)  
  41fd46:	cli    
  41fd47:	xchg   edi,eax
  41fd48:	inc    esi
  41fd49:	jno    0x41fd74
  41fd4b:	adc    eax,0x739e2b1e
  41fd50:	sbb    bh,bh
  41fd52:	in     al,dx
  41fd53:	jge    0x41fd25
  41fd55:	retfw  0xb258
  41fd59:	out    dx,al
  41fd5a:	pop    edi
  41fd5b:	stc    
  41fd5c:	xor    al,0xd9
  41fd5e:	adc    ch,ah
  41fd60:	xchg   ebx,eax
  41fd61:	je     0x41fced
  41fd63:	lock dec eax
  41fd65:	test   ebp,ebp
  41fd67:	dec    ebx
  41fd68:	cwde   
  41fd69:	pop    edi
  41fd6a:	mul    DWORD PTR [eax-0x63b92b3b]
  41fd70:	mov    DWORD PTR [eax+0x7cd87b2f],esi
  41fd76:	test   DWORD PTR [ebx+0x3d1596a7],ebx
  41fd7c:	push   esp
  41fd7d:	pop    ecx
  41fd7e:	lods   al,BYTE PTR ds:[esi]
  41fd7f:	imul   esi,DWORD PTR [ebp+0xb01d263],0x6a
  41fd86:	into   
  41fd87:	fs cmp edi,ecx
  41fd8a:	(bad)  
  41fd8b:	js     0x41fd39
  41fd8d:	cmp    ch,BYTE PTR [esi-0x31]
  41fd90:	mov    ds:0x309b961d,eax
  41fd95:	pop    ebx
  41fd96:	outs   dx,BYTE PTR ds:[esi]
  41fd97:	test   BYTE PTR [ebx+0x106ac375],bh
  41fd9d:	pop    es
  41fd9e:	ds push ds
  41fda0:	xchg   bh,ah
  41fda2:	test   al,0x2c
  41fda4:	xchg   BYTE PTR ss:[edx+0x2b],cl
  41fda8:	mov    ds:0x82790fbf,al
  41fdad:	ret    0x871d
  41fdb0:	mov    ch,0x38
  41fdb2:	sub    DWORD PTR [edi],ebx
  41fdb4:	push   eax
  41fdb5:	xchg   BYTE PTR ds:0x67242950,cl
  41fdbb:	jge    0x41fdb1
  41fdbd:	pop    edx
  41fdbe:	fcmovu st,st(2)
  41fdc0:	outs   dx,DWORD PTR ds:[esi]
  41fdc1:	sbb    DWORD PTR [edx],ebp
  41fdc3:	inc    ecx
  41fdc4:	neg    bl
  41fdc6:	pusha  
  41fdc7:	dec    ecx
  41fdc8:	sti    
  41fdc9:	jge    0x41fdd4
  41fdcb:	xchg   esp,eax
  41fdcc:	lahf   
  41fdcd:	fstp   TBYTE PTR [edx+ebx*8+0x60]
  41fdd1:	mov    cl,0x53
  41fdd3:	(bad)  
  41fdd4:	outs   dx,BYTE PTR ds:[esi]
  41fdd5:	aam    0xfa
  41fdd7:	dec    ecx
  41fdd8:	and    BYTE PTR [edi+0x44],dl
  41fddb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fddc:	fcom   DWORD PTR [edi+eiz*4-0x52]
  41fde0:	mov    dh,BYTE PTR [esi+edx*2]
  41fde3:	loope  0x41fe2e
  41fde5:	push   ss
  41fde6:	pop    ebp
  41fde7:	push   ax
  41fde9:	adc    eax,edx
  41fdeb:	test   DWORD PTR [edi+0x1c279fb0],0x97954812
  41fdf5:	aad    0x36
  41fdf7:	dec    ecx
  41fdf8:	dec    edi
  41fdf9:	or     DWORD PTR [eax+0xb],ecx
  41fdfc:	jno    0x41fe31
  41fdfe:	lahf   
  41fdff:	pop    edx
  41fe00:	xor    edi,0x14
  41fe03:	cmp    eax,esi
  41fe05:	push   cs
  41fe06:	sbb    ecx,DWORD PTR [ebp+0x43]
  41fe09:	outs   dx,DWORD PTR ds:[esi]
  41fe0a:	xchg   ebp,eax
  41fe0b:	push   esp
  41fe0c:	mov    DWORD PTR [ebx+edi*4+0x41],ebx
  41fe10:	aam    0x45
  41fe12:	ds sub al,0x9f
  41fe15:	ja     0x41fdd3
  41fe17:	inc    edx
  41fe18:	xchg   edi,eax
  41fe19:	xor    eax,eax
  41fe1b:	fwait
  41fe1c:	test   DWORD PTR [ebp+0x11c08978],ecx
  41fe22:	push   ebx
  41fe23:	adc    DWORD PTR [edx],eax
  41fe25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe26:	and    al,al
  41fe28:	pop    esp
  41fe29:	add    bh,BYTE PTR [edx-0x3a]
  41fe2c:	pop    ds
  41fe2d:	frstor [esi+0x5e8cb78a]
  41fe33:	loope  0x41fe3a
  41fe35:	xchg   ecx,eax
  41fe36:	push   es
  41fe37:	adc    eax,0x18c49ec7
  41fe3c:	add    al,0x9f
  41fe3e:	aam    0x4b
  41fe40:	cs int3 
  41fe42:	stos   BYTE PTR es:[edi],al
  41fe43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe44:	cmp    dh,dl
  41fe46:	scas   eax,DWORD PTR es:[edi]
  41fe47:	adc    BYTE PTR [edi-0xc9544ca],cl
  41fe4d:	stc    
  41fe4e:	jg     0x41fe5a
  41fe50:	mov    esi,DWORD PTR [ebp-0x64da6102]
  41fe56:	push   0x13900066
  41fe5b:	mov    edi,0x77774f4a
  41fe60:	jnp    0x41feca
  41fe62:	xchg   ebp,eax
  41fe63:	mov    DWORD PTR [edi+0x617861c4],ebx
  41fe69:	sub    edx,ebp
  41fe6b:	push   ss
  41fe6c:	in     eax,0x28
  41fe6e:	xchg   BYTE PTR [esi],bl
  41fe70:	push   ds
  41fe71:	cmp    DWORD PTR [eax+0x383281e8],ecx
  41fe77:	or     al,0x22
  41fe79:	mov    ch,0x41
  41fe7b:	xchg   edx,eax
  41fe7c:	jge    0x41fe18
  41fe7e:	das    
  41fe7f:	imul   edi,DWORD PTR [ebp-0x13],0xffffff96
  41fe83:	add    ah,cl
  41fe85:	ins    BYTE PTR es:[edi],dx
  41fe86:	ins    DWORD PTR es:[edi],dx
  41fe87:	mov    al,ds:0x67de9021
  41fe8c:	js     0x41fe2d
  41fe8e:	sub    eax,0xb98d0ec5
  41fe93:	cwde   
  41fe94:	out    dx,eax
  41fe95:	repz neg ebp
  41fe98:	or     edx,esp
  41fe9a:	retf   
  41fe9b:	jns    0x41fe99
  41fe9d:	sahf   
  41fe9e:	mov    DWORD PTR [edi],0xcb7aec51
  41fea4:	test   ebp,eax
  41fea6:	loope  0x41ff0e
  41fea8:	ror    DWORD PTR [ecx],cl
  41feaa:	mov    ah,0x7f
  41feac:	mov    ds:0x55711961,al
  41feb1:	loop   0x41fe41
  41feb3:	cmp    ecx,edx
  41feb5:	or     ebp,DWORD PTR [ebx+0x6da8d7e9]
  41febb:	mov    ds:0xbe66a041,eax
  41fec0:	out    0x99,eax
  41fec2:	hlt    
  41fec3:	mov    al,ds:0x21306e9a
  41fec8:	mov    ds:0x939dc9fa,eax
  41fecd:	inc    ecx
  41fece:	push   edx
  41fecf:	cmp    al,0x10
  41fed1:	sti    
  41fed2:	mov    ah,0x6a
  41fed4:	adc    esp,DWORD PTR [ebx]
  41fed6:	xchg   edi,eax
  41fed7:	ins    DWORD PTR es:[edi],dx
  41fed8:	pushf  
  41fed9:	jecxz  0x41ff2e
  41fedb:	imul   ebp,eax,0xf6436b79
  41fee1:	nop    esp
  41fee4:	jmp    0x5a7c:0x74f9d749
  41feeb:	fwait
  41feec:	jp     0x41ff4b
  41feee:	mov    cl,0x23
  41fef0:	daa    
  41fef1:	test   DWORD PTR [ebp-0x50456699],ebp
  41fef7:	xchg   edi,eax
  41fef8:	or     eax,0x7ba77418
  41fefd:	cli    
  41fefe:	adc    BYTE PTR [edi+0x7d],bh
  41ff01:	jne    0x41feb3
  41ff03:	bound  edi,QWORD PTR [esi]
  41ff05:	mov    WORD PTR [eax],fs
  41ff07:	pop    esp
  41ff08:	dec    edi
  41ff09:	pop    ds
  41ff0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff0b:	dec    esi
  41ff0c:	ficom  WORD PTR [ecx+0x6a]
  41ff0f:	jl     0x41fee7
  41ff11:	popf   
  41ff12:	test   BYTE PTR [edx-0x53],bl
  41ff15:	push   edx
  41ff16:	popa   
  41ff17:	dec    edx
  41ff18:	stos   BYTE PTR es:[edi],al
  41ff19:	fmul   st(4),st
  41ff1b:	pop    edx
  41ff1c:	sub    ebx,0xfffffff0
  41ff1f:	data16 sub al,0x9a
  41ff22:	les    edi,FWORD PTR [edx+0x75]
  41ff25:	dec    ebx
  41ff26:	gs pop ebp
  41ff28:	mov    WORD PTR [ebx],fs
  41ff2a:	test   DWORD PTR [edx+edi*1-0x3ef1ac4e],ecx
  41ff31:	jge    0x41ff23
  41ff33:	sbb    BYTE PTR [edx-0x42],cl
  41ff36:	pmaddwd mm3,QWORD PTR [ebx+0x57]
  41ff3a:	dec    ebx
  41ff3b:	ret    
  41ff3c:	test   BYTE PTR [ebx-0x3c],ch
  41ff3f:	cmp    DWORD PTR [ecx],ecx
  41ff41:	mov    edx,0xcfed9fb0
  41ff46:	cli    
  41ff47:	pop    edi
  41ff48:	and    bl,ah
  41ff4a:	adc    al,0x71
  41ff4c:	fst    QWORD PTR [edi]
  41ff4e:	pop    ds
  41ff4f:	xor    BYTE PTR [eax],0xf9
  41ff52:	test   bl,ch
  41ff54:	fisttp DWORD PTR [edx]
  41ff56:	retf   
  41ff57:	arpl   WORD PTR [ebx+0x5405662a],bp
  41ff5d:	sub    BYTE PTR [ecx+0x26],0x4f
  41ff61:	inc    edi
  41ff62:	mov    esi,0xea685e93
  41ff67:	imul   edx,DWORD PTR [edi],0x14d34c64
  41ff6d:	inc    edi
  41ff6e:	or     BYTE PTR [eax-0x662f7ea1],dh
  41ff74:	or     cl,cl
  41ff76:	pop    ecx
  41ff77:	int3   
  41ff78:	in     al,dx
  41ff79:	int    0xb5
  41ff7b:	fisubr WORD PTR [edi+edi*8+0x79ca25c8]
  41ff82:	aam    0xb0
  41ff84:	mov    edx,0xc59321dd
  41ff89:	push   edx
  41ff8a:	retf   0x81df
  41ff8d:	cmp    cl,BYTE PTR [eax+0x29c60a65]
  41ff93:	fdiv   DWORD PTR [esi+0x481a28cf]
  41ff99:	jmp    FWORD PTR [edi]
  41ff9b:	mov    cl,0xeb
  41ff9d:	pop    ecx
  41ff9e:	push   esp
  41ff9f:	cmp    DWORD PTR [eax+eax*1],ecx
  41ffa2:	pop    es
  41ffa3:	stos   BYTE PTR es:[edi],al
  41ffa4:	pop    esp
  41ffa5:	bound  ecx,QWORD PTR [esi+0x5c]
  41ffa8:	mov    ebx,0xec40768e
  41ffad:	mov    edx,0x2d327b66
  41ffb2:	push   ecx
  41ffb3:	dec    esi
  41ffb4:	shl    BYTE PTR [edx-0x11],cl
  41ffb7:	mov    ds:0x403fb57f,al
  41ffbc:	call   0xaf4fa4a9
  41ffc1:	neg    BYTE PTR [esi+0x7743c639]
  41ffc7:	fcmovnbe st,st(6)
  41ffc9:	adc    ebx,DWORD PTR [ebx]
  41ffcb:	outs   dx,BYTE PTR ds:[esi]
  41ffcc:	in     al,dx
  41ffcd:	mov    ecx,0x6bc01429
  41ffd2:	pop    eax
  41ffd3:	and    ebx,eax
  41ffd5:	mov    ecx,es
  41ffd7:	fwait
  41ffd8:	mov    bh,0x8c
  41ffda:	adc    bh,BYTE PTR [edx+0x2c]
  41ffdd:	adc    DWORD PTR [esi-0x644c2541],ebp
  41ffe3:	push   esi
  41ffe4:	and    eax,0x7d2e5520
  41ffe9:	push   esp
  41ffea:	push   0x51
  41ffec:	jne    0x41ffb9
  41ffee:	mov    BYTE PTR [edi],cl
  41fff0:	dec    edx
  41fff1:	sub    dh,bl
  41fff3:	mov    ch,0x4d
  41fff5:	and    ecx,esi
  41fff7:	shl    DWORD PTR [ecx],cl
  41fff9:	and    dl,BYTE PTR [ebp-0x37c14e85]
  41ffff:	fmul   DWORD PTR [edi-0x34]
  420002:	mov    dh,al
  420004:	inc    esp
  420005:	xchg   esi,eax
  420006:	pop    esp
  420007:	pop    edi
  420008:	repnz repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42000b:	xlat   BYTE PTR ds:[ebx]
  42000c:	jle    0x42004d
  42000e:	imul   edx,eax,0xfffffff6
  420011:	sbb    eax,0x1c30142f
  420016:	(bad)  
  420017:	fist   WORD PTR [edi+0xc]
  42001a:	mov    ds:0x3e6b3a40,al
  42001f:	fnstcw WORD PTR [ebp+0x4edb85ef]
  420025:	mov    edx,0xf6a81c30
  42002a:	clc    
  42002b:	mov    esp,0xe0d5f536
  420030:	pushf  
  420031:	push   eax
  420032:	enter  0x6239,0xee
  420036:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  420038:	imul   ebx,DWORD PTR [ebp+0x2fab0e6d],0xffffff94
  42003f:	test   al,0xa2
  420041:	addr16 push edx
  420043:	pmaxub mm3,QWORD PTR [ebx]
  420046:	fstp   QWORD PTR [ebx-0x2f]
  420049:	cmp    eax,0x4aaf6779
  42004e:	sub    ch,BYTE PTR [edi]
  420050:	clc    
  420051:	push   esi
  420052:	cdq    
  420053:	scas   al,BYTE PTR es:[edi]
  420054:	arpl   WORD PTR [edx+edx*8+0x3a0478a],sp
  42005b:	xchg   ebx,eax
  42005c:	ret    0x8ead
  42005f:	xchg   ecx,eax
  420060:	cld    
  420061:	retf   
  420062:	mov    esp,0xe5bcdce5
  420067:	push   ecx
  420068:	in     eax,0x7
  42006a:	push   ebp
  42006b:	and    DWORD PTR [edi+0x42],ebp
  42006e:	add    eax,edx
  420070:	push   edi
  420071:	int3   
  420072:	adc    ecx,esi
  420074:	gs sub ah,al
  420077:	push   ss
  420078:	rcl    BYTE PTR [edi+0x25edd1b6],0x1c
  42007f:	vunpckhpd ymm7,ymm1,YMMWORD PTR [esi+0x56b9edcd]
  420087:	std    
  420088:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420089:	imul   eax,DWORD PTR [edx+ebx*4],0xffffff8e
  42008d:	(bad)  [ebx]
  42008f:	fld    QWORD PTR [ecx+ebx*4-0x75]
  420093:	pusha  
  420094:	jbe    0x4200e0
  420096:	loope  0x4200a9
  420098:	cs push ecx
  42009b:	pop    ecx
  42009c:	sahf   
  42009d:	jnp    0x420083
  42009f:	mov    gs,WORD PTR [ebx+ebp*8]
  4200a2:	mov    BYTE PTR ds:0x5558cce2,0xae
  4200a9:	dec    esp
  4200aa:	adc    BYTE PTR [ebp*2+0x77e886e8],cl
  4200b1:	mov    edi,0x9db8b41a
  4200b6:	imul   edi,DWORD PTR [esi-0x1546713a],0x4c
  4200bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200be:	adc    bl,BYTE PTR [eax-0x7d]
  4200c1:	adc    DWORD PTR [ecx],edx
  4200c3:	mov    ds:0x429f2c80,eax
  4200c8:	pop    es
  4200c9:	pop    ds
  4200ca:	repnz dec edx
  4200cc:	mov    ch,0x3c
  4200ce:	xchg   edx,eax
  4200cf:	sub    eax,0x1c0ce753
  4200d4:	(bad)  
  4200d5:	mov    ds:0xfb1f3698,al
  4200da:	sbb    BYTE PTR [edi+0x340b224],0xe9
  4200e1:	push   ebp
  4200e2:	xchg   ebp,eax
  4200e3:	data16 jle 0x420124
  4200e6:	dec    edi
  4200e7:	mov    BYTE PTR [ecx-0xa],dl
  4200ea:	pop    eax
  4200eb:	test   eax,0x4bdee77a
  4200f0:	xchg   ebp,eax
  4200f1:	pop    ds
  4200f2:	mov    al,0x25
  4200f4:	pusha  
  4200f5:	loopne 0x420094
  4200f7:	cmp    al,0x8f
  4200f9:	outs   dx,BYTE PTR ds:[esi]
  4200fa:	add    DWORD PTR [ebp-0x3a],ebp
  4200fd:	jb     0x420094
  4200ff:	dec    edi
  420100:	out    dx,al
  420101:	push   cs
  420102:	cli    
  420103:	es out 0x0,ax
  420107:	test   al,0xd0
  420109:	loope  0x4200be
  42010b:	or     BYTE PTR [ecx-0x5310f727],ah
  420111:	in     eax,0x60
  420113:	push   ebp
  420114:	mov    ecx,0xa5d51550
  420119:	scas   eax,DWORD PTR es:[edi]
  42011a:	sbb    edi,DWORD PTR [edi-0x6]
  42011d:	shr    BYTE PTR [ebp-0x2b],cl
  420120:	pop    esi
  420121:	fwait
  420122:	add    BYTE PTR [ecx+0x1545678b],dh
  420128:	pusha  
  420129:	addr16 int 0x86
  42012c:	arpl   bp,bp
  42012e:	fwait
  42012f:	inc    eax
  420130:	push   cs
  420131:	jecxz  0x42018d
  420133:	out    dx,al
  420134:	addr16 mov bh,dl
  420137:	addps  xmm2,XMMWORD PTR [ebx]
  42013a:	ins    DWORD PTR es:[edi],dx
  42013b:	xchg   BYTE PTR ds:0xcb7291a5,ch
  420141:	(bad)  
  420142:	popa   
  420143:	mov    ecx,0x2728abc3
  420148:	les    ebp,FWORD PTR [esi-0x2d]
  42014b:	mov    ?,edi
  42014d:	js     0x4200ef
  42014f:	cmp    dl,BYTE PTR [ebp-0x27]
  420152:	pop    esi
  420153:	push   eax
  420154:	sbb    BYTE PTR [ebp-0x46],0x9d
  420158:	cwde   
  420159:	bound  edi,QWORD PTR ds:0x47d79023
  42015f:	and    ch,dh
  420161:	mov    al,0xd8
  420163:	pop    ebx
  420164:	rcl    DWORD PTR ds:0x7d4335c6,0xee
  42016b:	iret   
  42016c:	sub    DWORD PTR [eax+ebx*1],esi
  42016f:	or     eax,0xca49e658
  420174:	add    eax,0xc2ffffad
  420179:	sti    
  42017a:	mov    ds:0xbbf8acb4,eax
  42017f:	mov    bh,0xb0
  420181:	add    BYTE PTR [ebp+0x3c],ah
  420184:	xor    eax,0xc4af2994
  420189:	mov    ah,0xdf
  42018b:	add    cl,BYTE PTR [ecx]
  42018d:	in     eax,0x23
  42018f:	(bad)  
  420190:	imul   edi,DWORD PTR [edi],0x65a57935
  420196:	retf   
  420197:	loopne 0x42013c
  420199:	mov    ecx,0xd1dca94
  42019e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42019f:	cld    
  4201a0:	xchg   ebp,eax
  4201a1:	pushf  
  4201a2:	pusha  
  4201a3:	fs test BYTE PTR cs:[edx],bl
  4201a7:	add    BYTE PTR [ebx],0x90
  4201aa:	and    al,0xe4
  4201ac:	(bad)  
  4201ad:	mov    dh,BYTE PTR [edx-0x252991c4]
  4201b3:	mov    ebp,0x426e26fb
  4201b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201b9:	mov    al,ds:0x67698f08
  4201be:	jecxz  0x420166
  4201c0:	xchg   edx,eax
  4201c1:	rol    DWORD PTR [eax-0x51b8b1ab],0xa7
  4201c8:	mov    edx,0x5c45ab69
  4201cd:	mov    esp,0x5d90f88e
  4201d2:	push   es
  4201d3:	or     al,0x8d
  4201d5:	xchg   ecx,eax
  4201d6:	cmp    ebx,ebp
  4201d8:	mov    edx,0x2c9410ac
  4201dd:	mov    esi,edx
  4201df:	lds    eax,FWORD PTR [ebx]
  4201e1:	jb     0x42025a
  4201e3:	sti    
  4201e4:	out    dx,eax
  4201e5:	rcl    ebx,1
  4201e7:	mov    edi,edx
  4201e9:	cs fs in eax,dx
  4201ec:	repnz pop DWORD PTR [esi-0x1e3878ca]
  4201f3:	xchg   bl,ch
  4201f5:	stos   DWORD PTR es:[edi],eax
  4201f6:	pop    eax
  4201f7:	call   0x8192:0x87e8c3b
  4201fe:	mov    DWORD PTR [ebp-0x1b],edi
  420201:	jno    0x42020a
  420203:	xchg   esi,eax
  420204:	sbb    eax,DWORD PTR [edi+eax*4-0x7317767d]
  42020b:	scas   eax,DWORD PTR es:[edi]
  42020c:	loopne 0x4201dd
  42020e:	pop    esp
  42020f:	mov    dl,0xeb
  420211:	pop    ds
  420212:	inc    edx
  420213:	les    esp,FWORD PTR [ebx+0x5913c6fa]
  420219:	sbb    DWORD PTR [eax],ebp
  42021b:	xchg   ebx,eax
  42021c:	mov    al,ds:0x4bc045de
  420221:	or     al,0x14
  420223:	mov    edx,0x7a041c37
  420228:	pop    ebx
  420229:	sub    BYTE PTR [ebp+0x2e],bl
  42022c:	mov    bl,BYTE PTR [eax+0x53adf513]
  420232:	inc    ecx
  420233:	mov    edi,0xa4c9421b
  420238:	pop    esp
  420239:	rol    DWORD PTR [edx],1
  42023b:	jnp    0x42022b
  42023d:	xchg   esp,eax
  42023e:	nop
  42023f:	cli    
  420240:	jmp    0xab57:0xe98328dd
  420247:	mov    ch,0x3
  420249:	ins    DWORD PTR es:[edi],dx
  42024a:	enter  0xa815,0x4c
  42024e:	jbe    0x420258
  420250:	fldcw  WORD PTR [edx+0x65]
  420253:	outs   dx,DWORD PTR ss:[esi]
  420255:	jnp    0x4201e2
  420257:	xchg   cl,bl
  420259:	and    BYTE PTR [edx],bl
  42025b:	xchg   esi,eax
  42025c:	and    eax,0x2697b105
  420261:	fs cdq 
  420263:	add    BYTE PTR [eax+0x67],al
  420266:	icebp  
  420267:	fldcw  WORD PTR [esi+0x6f]
  42026a:	mov    dl,0x31
  42026c:	push   cs
  42026d:	les    edi,FWORD PTR [eax+0x371aa21d]
  420273:	jb     0x4202dd
  420275:	mov    eax,0x64ceb52d
  42027a:	jle    0x4202aa
  42027c:	jo     0x4202f5
  42027e:	daa    
  42027f:	fcom   DWORD PTR [edx-0x19]
  420282:	push   0x6b81e7fd
  420287:	jae    0x4202e6
  420289:	or     eax,DWORD PTR [ebp-0x2e]
  42028c:	jnp    0x42028c
  42028e:	mov    eax,0x27ad83cc
  420293:	jo     0x420281
  420295:	inc    ebx
  420296:	jge    0x4202ce
  420298:	test   al,0xdd
  42029a:	mov    ebp,0xa8a0ea88
  42029f:	push   es
  4202a0:	and    BYTE PTR [ecx-0x2a],bl
  4202a3:	add    al,0x99
  4202a5:	fcomp  QWORD PTR [ecx]
  4202a7:	fcmovnbe st,st(4)
  4202a9:	ficomp WORD PTR ds:0xb489b5f0
  4202af:	icebp  
  4202b0:	pop    esi
  4202b1:	scas   eax,DWORD PTR es:[edi]
  4202b2:	mov    eax,ds:0x2c4c1879
  4202b7:	not    cl
  4202b9:	pop    esp
  4202ba:	int3   
  4202bb:	stos   DWORD PTR es:[edi],eax
  4202bc:	jno    0x420333
  4202be:	rol    DWORD PTR [ebp+0x68],1
  4202c1:	add    cl,BYTE PTR [edx+0x1af9d324]
  4202c7:	out    dx,al
  4202c8:	loop   0x420304
  4202ca:	lds    esp,FWORD PTR [eax]
  4202cc:	pop    esp
  4202cd:	xchg   BYTE PTR [ebx-0x3f4fafce],bl
  4202d3:	mov    bh,BYTE PTR [edx]
  4202d5:	scas   eax,DWORD PTR es:[edi]
  4202d6:	and    ch,BYTE PTR [ebx+edi*4]
  4202d9:	xor    eax,0x38c8051c
  4202de:	dec    ecx
  4202df:	hlt    
  4202e0:	jmp    0x434b:0x5491d43a
  4202e7:	mov    cl,0x0
  4202e9:	jbe    0x4202d7
  4202eb:	mov    ebp,0xf1e23d13
  4202f0:	fisttp QWORD PTR [ebx-0x64]
  4202f3:	sub    al,0xc
  4202f5:	popa   
  4202f6:	shl    DWORD PTR fs:[ebx-0x17],cl
  4202fa:	mov    ebp,0xeb1e2d69
  4202ff:	gs mov dl,0xb2
  420302:	sub    BYTE PTR [ecx+0x1f],cl
  420305:	or     eax,0x751f5397
  42030a:	add    edx,ebx
  42030c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42030d:	mov    ebp,0x5df558c4
  420312:	mov    bl,0xd7
  420314:	jle    0x4202ee
  420316:	push   eax
  420317:	repz enter 0xd72f,0xbf
  42031c:	adc    ch,BYTE PTR [ebp*2+0x5eebbcd6]
  420323:	add    BYTE PTR [edx],cl
  420325:	rcl    DWORD PTR [esi-0x7a],1
  420328:	shr    DWORD PTR [eax+0x32cadefe],cl
  42032e:	push   ecx
  42032f:	adc    eax,0xeef50480
  420334:	hlt    
  420335:	aam    0x77
  420337:	jmp    0xebba:0xa617ba8c
  42033e:	mov    DWORD PTR [ecx+edx*4],ecx
  420341:	mov    dh,0xea
  420343:	mov    ebx,0x63ee1af6
  420348:	in     eax,dx
  420349:	popa   
  42034a:	mov    cl,0x6a
  42034c:	fmul   QWORD PTR [ebx-0x62]
  42034f:	pop    ss
  420350:	pop    ds
  420351:	jp     0x420342
  420353:	scas   al,BYTE PTR es:[edi]
  420354:	and    ah,al
  420356:	jmp    0x8f14:0x7ffafaef
  42035d:	stos   DWORD PTR es:[edi],eax
  42035e:	add    edx,eax
  420360:	xor    al,0xad
  420362:	pop    ds
  420363:	push   esp
  420364:	stos   DWORD PTR es:[edi],eax
  420365:	arpl   WORD PTR [ebx+0x60],dx
  420368:	lds    edi,FWORD PTR [esi]
  42036a:	pop    edx
  42036b:	and    BYTE PTR [edx],al
  42036d:	test   BYTE PTR [ebp+ecx*8+0x48e81dea],dl
  420374:	add    ecx,edi
  420376:	pop    ss
  420377:	pop    DWORD PTR [ecx-0x79]
  42037a:	test   al,0x43
  42037c:	popf   
  42037d:	mov    bl,0x41
  42037f:	jne    0x42037a
  420381:	sbb    al,0xc8
  420383:	push   edi
  420384:	in     eax,dx
  420385:	pop    edi
  420386:	mov    esp,0x70ee32cf
  42038b:	shl    DWORD PTR [ebp*1-0x61f3bd63],1
  420392:	lds    eax,FWORD PTR [edi]
  420394:	or     al,0x1
  420396:	mov    ecx,0xdf856d66
  42039b:	push   ebx
  42039c:	add    DWORD PTR [ebp-0x6f],ecx
  42039f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203a0:	jg     0x4203fa
  4203a2:	mov    ecx,0xa380f038
  4203a7:	int    0x94
  4203a9:	scas   eax,DWORD PTR es:[edi]
  4203aa:	mov    esp,0xa0b27941
  4203af:	push   edx
  4203b0:	push   cs
  4203b1:	pop    ebx
  4203b2:	je     0x420417
  4203b4:	pop    esp
  4203b5:	pop    es
  4203b6:	mov    bh,0x7d
  4203b8:	shl    bh,cl
  4203ba:	mov    WORD PTR [ebx],?
  4203bc:	std    
  4203bd:	xor    eax,0x8d7f80c9
  4203c2:	stos   BYTE PTR es:[edi],al
  4203c3:	pop    edi
  4203c4:	sub    BYTE PTR [edi+0x55],0xe2
  4203c8:	and    edx,DWORD PTR [ebp+ebx*4+0x18]
  4203cc:	pop    ds
  4203cd:	pop    edi
  4203ce:	bound  edx,QWORD PTR [edx]
  4203d0:	mov    ebx,0xc1f55f3
  4203d5:	stos   DWORD PTR es:[edi],eax
  4203d6:	sbb    bh,BYTE PTR [eax+eiz*4]
  4203d9:	jnp    0x420376
  4203db:	out    dx,al
  4203dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203dd:	cmp    DWORD PTR [ebp-0x62],esi
  4203e0:	es cmp edx,eax
  4203e3:	xor    bh,BYTE PTR [eax+0x6419bc8f]
  4203e9:	mov    DWORD PTR [esi+0x2578743],ecx
  4203ef:	int    0x25
  4203f1:	fucomip st,st(5)
  4203f3:	push   es
  4203f4:	(bad)  
  4203f5:	das    
  4203f6:	inc    esp
  4203f7:	xlat   BYTE PTR ds:[ebx]
  4203f8:	pop    ebp
  4203f9:	cmovae eax,ecx
  4203fc:	mov    edi,esp
  4203fe:	lock xchg esp,eax
  420400:	pop    ds
  420401:	xchg   esp,eax
  420402:	cmc    
  420403:	xor    al,0x24
  420405:	outs   dx,BYTE PTR ds:[esi]
  420406:	int3   
  420407:	repz scas eax,DWORD PTR es:[edi]
  420409:	inc    edx
  42040a:	jae    0x42047f
  42040c:	stos   BYTE PTR es:[edi],al
  42040d:	mov    ah,0x70
  42040f:	mov    edi,0xb6b7aee9
  420414:	loop   0x42040a
  420416:	test   DWORD PTR [edi],0x6e30b283
  42041c:	out    0xbb,eax
  42041e:	push   0x9fee922c
  420423:	std    
  420424:	mov    ds:0xb251c7e6,eax
  420429:	mov    edi,0x4741be98
  42042e:	or     bh,BYTE PTR [eax-0x36d27359]
  420434:	popa   
  420435:	icebp  
  420436:	pushf  
  420437:	mov    ah,BYTE PTR [ebx]
  420439:	push   ecx
  42043a:	(bad)  
  42043b:	out    0x39,al
  42043d:	xchg   esi,eax
  42043e:	or     edi,DWORD PTR [ecx]
  420440:	dec    DWORD PTR [eax+0x6c]
  420443:	dec    esp
  420444:	or     BYTE PTR [eax],0xe1
  420447:	out    0x32,al
  420449:	das    
  42044a:	and    dh,cl
  42044c:	and    ch,BYTE PTR [edx-0x10]
  42044f:	xrelease xchg BYTE PTR [ecx],cl
  420452:	fwait
  420453:	shr    DWORD PTR [eax],1
  420455:	lds    esi,FWORD PTR [esi]
  420457:	jge    0x4204c0
  420459:	jns    0x4203dd
  42045b:	jmp    0xaa60:0x8a56eb43
  420462:	or     DWORD PTR [eax],0x62
  420465:	fwait
  420466:	dec    esp
  420467:	iret   
  420468:	pop    edi
  420469:	les    ebx,FWORD PTR [esi+eax*8-0x5f43e6a2]
  420470:	adc    al,0x33
  420472:	push   esi
  420473:	mov    ebp,0x3d0b7c3e
  420478:	ds adc al,0x90
  42047b:	cld    
  42047c:	add    ebp,eax
  42047e:	fld    st(2)
  420480:	or     ch,dh
  420482:	sub    eax,0xc4385750
  420487:	mov    ds:0x7c3b9adb,eax
  42048c:	pop    es
  42048d:	pusha  
  42048e:	push   ecx
  42048f:	lods   al,BYTE PTR ds:[esi]
  420490:	mov    esp,0xc3b2ec58
  420495:	lods   eax,DWORD PTR ds:[esi]
  420496:	jne    0x420503
  420498:	sub    dl,cl
  42049a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42049b:	inc    ecx
  42049c:	out    dx,eax
  42049d:	adc    DWORD PTR [esi-0x2df5c621],edx
  4204a3:	bound  ebp,QWORD PTR [eax+0x47]
  4204a6:	lods   al,BYTE PTR ds:[esi]
  4204a7:	dec    ecx
  4204a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204a9:	dec    ecx
  4204aa:	cmp    esp,DWORD PTR [edi-0x65]
  4204ad:	sbb    eax,0x42328906
  4204b2:	(bad)  
  4204b3:	rol    BYTE PTR [ecx],0x46
  4204b6:	xchg   esp,eax
  4204b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204b8:	test   cl,al
  4204ba:	xor    ch,BYTE PTR ds:0xa25ff432
  4204c0:	or     eax,0x5c6f6a72
  4204c5:	inc    edi
  4204c6:	jae    0x42048f
  4204c8:	add    DWORD PTR [edi+ebp*4+0x7d],0xffffffe2
  4204cd:	in     eax,0x22
  4204cf:	retf   0xc1e0
  4204d2:	movq   QWORD PTR [ecx],mm0
  4204d5:	mov    BYTE PTR [edx+0x210a6584],bl
  4204db:	fnclex 
  4204dd:	gs fcomp st(6)
  4204e0:	cmp    BYTE PTR [ebx],ah
  4204e2:	cmp    BYTE PTR [ebp+ecx*8+0x1e],ah
  4204e6:	fcomp  DWORD PTR [edi+0x34d40af9]
  4204ec:	xchg   DWORD PTR [eax],ebx
  4204ee:	fst    QWORD PTR [ecx+0x276b10d6]
  4204f4:	aam    0x1f
  4204f6:	mov    al,0x47
  4204f8:	cwde   
  4204f9:	sbb    al,BYTE PTR [edi]
  4204fb:	std    
  4204fc:	and    ch,dh
  4204fe:	and    eax,0xead96e84
  420503:	cli    
  420504:	dec    esi
  420505:	cmp    DWORD PTR [ecx+edi*8+0x52],eax
  420509:	mov    bh,0xd2
  42050b:	and    BYTE PTR ds:0x4ac1b91a,ch
  420511:	pusha  
  420512:	shr    BYTE PTR [eax+0x3d4204f6],1
  420518:	(bad)  
  420519:	and    bh,bh
  42051b:	dec    esi
  42051c:	pop    ds
  42051d:	out    dx,al
  42051e:	add    dl,BYTE PTR fs:[edx+0x59]
  420522:	fcomp  DWORD PTR [esi+0x60]
  420525:	or     ecx,ecx
  420527:	popf   
  420528:	jbe    0x420506
  42052a:	mov    bl,0x4c
  42052c:	mov    ds:0x906fb672,al
  420531:	push   es
  420532:	call   0xe698:0x7aa7b5d4
  420539:	fnstcw WORD PTR [edi+eiz*1]
  42053c:	and    eax,0xaacbb627
  420541:	(bad)  
  420542:	push   eax
  420543:	test   eax,0x4ca8e13a
  420548:	mov    eax,0x1e02f2cf
  42054d:	mov    gs,WORD PTR [eax]
  42054f:	xor    al,BYTE PTR [eax]
  420551:	pop    ebp
  420552:	pop    ebp
  420553:	jns    0x42058e
  420555:	leave  
  420556:	xchg   ecx,eax
  420557:	gs xchg ebp,eax
  420559:	add    eax,0x2e54dcc0
  42055e:	or     bh,dh
  420560:	cmc    
  420561:	jmp    0x85a5:0x10630fc
  420568:	sub    al,0x3b
  42056a:	xor    DWORD PTR [edi],0xffffffae
  42056d:	jp     0x420527
  42056f:	call   0x7f278387
  420574:	(bad)  
  420575:	icebp  
  420576:	jmp    0x4204fa
  420578:	aam    0x80
  42057a:	(bad)  
  42057b:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42057d:	hlt    
  42057e:	and    eax,eax
  420580:	cdq    
  420581:	dec    edx
  420582:	and    BYTE PTR [ebp+0x2c],0xc0
  420586:	gs clc 
  420588:	dec    esi
  420589:	call   0xc1da:0x74053344
  420590:	xchg   DWORD PTR [ecx-0x55],esp
  420593:	jle    0x420555
  420595:	mov    bh,0xaa
  420597:	rcr    DWORD PTR [esi-0x49],cl
  42059a:	sar    BYTE PTR [ecx],cl
  42059c:	stos   BYTE PTR es:[edi],al
  42059d:	cmp    ah,BYTE PTR [edi-0x5c9dd34f]
  4205a3:	sbb    ch,BYTE PTR [ecx]
  4205a5:	jge    0x420605
  4205a7:	int    0xed
  4205a9:	jge    0x420568
  4205ab:	mov    ds:0x47d4f19c,al
  4205b0:	jbe    0x420591
  4205b2:	fcom   DWORD PTR [eax+0x742c88ce]
  4205b8:	mov    esi,DWORD PTR [ebx-0x48]
  4205bb:	inc    ecx
  4205bc:	fidivr DWORD PTR [edi+0x53]
  4205bf:	ja     0x420559
  4205c1:	imul   ecx,esp,0x333ee06e
  4205c7:	sbb    ecx,DWORD PTR [edx+0x74]
  4205ca:	adc    dl,0xf0
  4205cd:	xchg   BYTE PTR [edi-0x4f2cba70],bl
  4205d3:	or     eax,0x5586cf01
  4205d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205d9:	sbb    BYTE PTR [edi],0x91
  4205dc:	shl    ebp,0xc8
  4205df:	sub    al,0xb2
  4205e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205e3:	scas   al,BYTE PTR es:[edi]
  4205e4:	add    BYTE PTR [eax+esi*4],cl
  4205e7:	pop    eax
  4205e8:	fadd   DWORD PTR [edi]
  4205ea:	sub    BYTE PTR [ebp+0x16],0xc2
  4205ee:	cmp    al,0xc8
  4205f0:	fwait
  4205f1:	xor    edi,ebp
  4205f3:	dec    ah
  4205f5:	ficom  WORD PTR [edx]
  4205f7:	and    DWORD PTR [bx+si-0x78],0x22
  4205fc:	sub    ebp,esi
  4205fe:	out    dx,eax
  4205ff:	sbb    ah,ah
  420601:	sbb    esp,ebx
  420603:	mov    bh,0x9d
  420605:	inc    edi
  420606:	add    al,0x57
  420608:	mov    WORD PTR [ebx],ss
  42060a:	xchg   edi,eax
  42060b:	pop    esi
  42060c:	popf   
  42060d:	imul   edx,DWORD PTR [ecx],0xfffffffc
  420610:	xchg   BYTE PTR [edx-0x46bf8f2e],dl
  420616:	dec    ecx
  420617:	dec    edi
  420618:	xchg   edx,eax
  420619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42061a:	int3   
  42061b:	or     DWORD PTR [ebx+0x52],edi
  42061e:	mov    ebx,0x7382e30b
  420623:	mov    DWORD PTR [edx-0x51],eax
  420626:	sub    al,0x4c
  420628:	loope  0x42069a
  42062a:	jle    0x4205df
  42062c:	(bad)  
  42062d:	in     al,dx
  42062e:	adc    bh,dl
  420630:	xchg   edx,eax
  420631:	imul   eax,DWORD PTR [ebp+0x7866d989],0xffffffe2
  420638:	pop    ss
  420639:	out    0xc7,al
  42063b:	mov    eax,ds:0xdaee07cf
  420640:	sahf   
  420641:	stos   DWORD PTR es:[edi],eax
  420642:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420643:	mov    edi,0xd24b0b5b
  420648:	inc    esi
  420649:	loop   0x420692
  42064b:	lds    edx,FWORD PTR [ebx+0x2b63909f]
  420651:	mov    al,ds:0x870df405
  420656:	jle    0x4205e7
  420658:	repnz ficom DWORD PTR gs:[ecx+eiz*2+0x485ad435]
  420661:	dec    esp
  420662:	jb     0x42063a
  420664:	jmp    0x539e:0xa3940681
  42066b:	sbb    eax,0x8158f6c1
  420670:	mov    BYTE PTR [ebx],al
  420672:	test   bl,bh
  420674:	into   
  420675:	shl    BYTE PTR [ebp-0x6670cd2f],0x2c
  42067c:	pop    ds
  42067d:	mov    es,WORD PTR [ebp-0x38]
  420680:	pop    es
  420681:	or     edx,DWORD PTR ds:0xf69c5f47
  420687:	push   ds
  420688:	add    BYTE PTR fs:[esi-0x5b8b8937],cl
  42068f:	push   esi
  420690:	aaa    
  420691:	lds    eax,FWORD PTR [esi-0x13]
  420694:	dec    eax
  420695:	mov    al,0x72
  420697:	pop    eax
  420698:	cmp    al,0x2f
  42069a:	pop    esp
  42069b:	adc    DWORD PTR ds:0x2f7c2306,ecx
  4206a1:	fldcw  WORD PTR [eax]
  4206a3:	xor    cl,cl
  4206a5:	fcomp  QWORD PTR [ecx-0x15f5e948]
  4206ab:	(bad)  
  4206ac:	or     al,0x7
  4206ae:	mov    bh,0x99
  4206b0:	nop
  4206b1:	mov    ah,0x15
  4206b3:	daa    
  4206b4:	mov    edx,ecx
  4206b6:	pop    ecx
  4206b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206b8:	les    ebp,FWORD PTR [edi]
  4206ba:	push   0x96ed42c5
  4206bf:	mov    ecx,0x4bf61439
  4206c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206c5:	fwait
  4206c6:	mov    edx,0xe0e7e0d2
  4206cb:	dec    edx
  4206cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206cd:	jno    0x4206db
  4206cf:	jns    0x420651
  4206d1:	xor    ecx,DWORD PTR [esi-0x15e22f6e]
  4206d7:	xchg   esp,eax
  4206d8:	icebp  
  4206d9:	xchg   edx,eax
  4206da:	dec    ecx
  4206db:	push   ecx
  4206dc:	lahf   
  4206dd:	stos   DWORD PTR es:[edi],eax
  4206de:	jg     0x4206ff
  4206e0:	xchg   edx,eax
  4206e1:	mov    edi,DWORD PTR [edx]
  4206e3:	fs xor al,0x89
  4206e6:	dec    edi
  4206e7:	retf   
  4206e8:	fdivr  DWORD PTR ss:[ebx-0x644357e9]
  4206ef:	xor    eax,0xfa6486bd
  4206f4:	adc    eax,0x9f902234
  4206f9:	in     al,dx
  4206fa:	mov    ah,ch
  4206fc:	popf   
  4206fd:	stos   DWORD PTR es:[edi],eax
  4206fe:	test   edx,0xdaee055c
  420704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420705:	jge    0x42072e
  420707:	fdiv   QWORD PTR [esi]
  420709:	loop   0x4206ef
  42070b:	ret    
  42070c:	fstp   DWORD PTR [ebx-0x4f]
  42070f:	pop    ss
  420710:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420711:	aam    0x14
  420713:	or     DWORD PTR [edx],edi
  420715:	or     al,0xaa
  420717:	imul   ecx,DWORD PTR cs:[edx+0x65],0x66
  42071c:	retf   0xc460
  42071f:	cmp    eax,0x7f76917
  420724:	mov    dh,0xdf
  420726:	out    dx,al
  420727:	aad    0x9
  420729:	nop
  42072a:	sub    eax,0x292470a8
  42072f:	add    edx,0xffffffe6
  420732:	icebp  
  420733:	or     al,BYTE PTR gs:[esi+0x1b]
  420737:	mov    dh,0xb6
  420739:	add    ah,BYTE PTR [ebp-0x696a1af0]
  42073f:	sub    DWORD PTR [edi],0xc1292ae6
  420745:	xchg   ecx,eax
  420746:	sub    al,0x19
  420748:	lock stc 
  42074a:	dec    ebx
  42074b:	adc    bh,BYTE PTR [edx-0x13e44d3]
  420751:	sub    ecx,ebp
  420753:	sbb    al,0x7d
  420755:	cmp    DWORD PTR [edi+eiz*2-0x2d],edx
  420759:	fsub   QWORD PTR [eax+edi*1]
  42075c:	mov    al,ds:0x928e8846
  420761:	jmp    0x73238e4b
  420766:	jno    0x420708
  420768:	pop    ds
  420769:	push   0xb0e9ee1c
  42076e:	call   DWORD PTR [esp+ebx*2]
  420771:	fsub   st,st(2)
  420773:	pop    esp
  420774:	sub    edx,ebx
  420776:	or     esp,0x28de2d61
  42077c:	add    cl,BYTE PTR [ebx+0x1a]
  42077f:	pop    ebp
  420780:	push   cs
  420781:	mov    bh,0xbf
  420783:	out    dx,eax
  420784:	sahf   
  420785:	in     eax,dx
  420786:	fidivr DWORD PTR [eax-0x3b91b338]
  42078c:	push   ecx
  42078d:	xchg   DWORD PTR [esi-0x7e],edx
  420790:	dec    esi
  420791:	add    eax,ecx
  420793:	mov    DWORD PTR [ebp-0x14],eax
  420796:	mov    eax,DWORD PTR [ebp-0x14]
  420799:	mov    eax,DWORD PTR [eax+0xc]
  42079c:	movsx  eax,BYTE PTR [eax+ecx*1]
  4207a0:	cdq    
  4207a1:	add    eax,ebx
  4207a3:	adc    edx,0xffffffff
  4207a6:	xor    eax,edi
  4207a8:	xor    edx,0x0
  4207ab:	cmp    eax,0x70941e1e
  4207b0:	jne    0x41e3c0
  4207b6:	cmp    edx,0xffffffff
  4207b9:	jne    0x41e3c0
  4207bf:	mov    eax,ds:0x42830b
  4207c4:	mov    eax,DWORD PTR [eax+0x198]
  4207ca:	mov    DWORD PTR [eax],ecx
  4207cc:	mov    eax,ecx
  4207ce:	jmp    0x4207f7
  4207d3:	mov    eax,DWORD PTR [ebp+0x18]
  4207d6:	cmp    eax,0xf89c85a2
  4207db:	jne    0x4207f7
  4207e1:	push   0xf89c85a3
  4207e6:	push   DWORD PTR [ebp+0x14]
  4207e9:	push   DWORD PTR [ebp+0x10]
  4207ec:	push   DWORD PTR [ebp+0xc]
  4207ef:	push   DWORD PTR [ebp+0x8]
  4207f2:	call   0x41b9fd
  4207f7:	pop    edi
  4207f8:	pop    ebx
  4207f9:	pop    esi
  4207fa:	leave  
  4207fb:	ret    0x14
  4207fe:	push   ebp
  4207ff:	mov    ebp,esp
  420801:	and    esp,0xfffffff8
  420804:	or     DWORD PTR ds:0x42918f,0x225c
  42080e:	sub    esp,0x3fc
  420814:	sbb    DWORD PTR ds:0x4291a7,0x4291f3
  42081e:	push   ebx
  42081f:	push   esi
  420820:	push   edi
  420821:	and    DWORD PTR ds:0x42915f,0x397e
  42082b:	push   0x42842f
  420830:	or     DWORD PTR ds:0x4291af,0x2ff8
  42083a:	push   0x7876867
  42083f:	or     DWORD PTR ds:0x4291b7,0x20a1
  420849:	call   DWORD PTR ds:0x42a85b
  42084f:	sub    DWORD PTR ds:0x42915f,0x5681
  420859:	mov    DWORD PTR [esp+0x30],eax
  42085d:	lea    eax,[esp+0x78]
  420861:	push   eax
  420862:	sub    DWORD PTR ds:0x42919b,0x4291d3
  42086c:	push   0x428447
  420871:	mov    DWORD PTR ds:0x4291e3,0x3a46
  42087b:	call   DWORD PTR ds:0x42a87b
  420881:	cmp    eax,0xffffffff
  420884:	je     0x42089b
  42088a:	xor    DWORD PTR ds:0x42915f,0x150a
  420894:	xor    eax,eax
  420896:	jmp    0x421b36
  42089b:	mov    esi,DWORD PTR ds:0x42a897
  4208a1:	xor    DWORD PTR ds:0x4291d3,0x3930
  4208ab:	push   0xf
  4208ad:	lea    eax,[esp+0x44]
  4208b1:	push   eax
  4208b2:	push   0x42845b
  4208b7:	push   0x42846f
  4208bc:	sub    DWORD PTR ds:0x42915f,0x4291d7
  4208c6:	push   0x42848f
  4208cb:	adc    DWORD PTR ds:0x429183,0x3c8a
  4208d5:	call   esi
  4208d7:	imul   eax,eax,0x300000
  4208dd:	cmp    eax,0x1b00000
  4208e2:	mov    DWORD PTR ds:0x4291bf,0x78b4
  4208ec:	jne    0x42088a
  4208f2:	or     DWORD PTR ds:0x4291b3,0x42915b
  4208fc:	lea    eax,[esp+0x1b8]
  420903:	and    DWORD PTR ds:0x42919f,0x5d3c
  42090d:	push   eax
  42090e:	add    DWORD PTR ds:0x4291e3,0x4291af
  420918:	push   0x4284cb
  42091d:	and    DWORD PTR ds:0x429153,0x42915b
  420927:	call   DWORD PTR ds:0x42a867
  42092d:	cmp    eax,0xffffffff
  420930:	jne    0x42088a
  420936:	add    DWORD PTR ds:0x42914b,0x6e9d
  420940:	mov    DWORD PTR [esp+0x30],0x0
  420948:	or     ecx,ecx
  42094a:	mov    ecx,0xf89c85a1
  42094f:	mov    DWORD PTR ds:0x4291af,0x17
  420959:	cmp    DWORD PTR ds:0x4291af,0x0
  420960:	je     0x4209b6
  420966:	cmp    DWORD PTR ds:0x4291af,0x4
  42096d:	jge    0x4209b6
  420973:	jmp    0x420988
  420978:	push   0x4280d6
  42097d:	push   0x1
  42097f:	push   DWORD PTR [ebp-0x24]
  420982:	call   DWORD PTR ds:0x42a87f
  420988:	cmp    DWORD PTR ds:0x4291af,0x5
  42098f:	jne    0x4209a2
  420995:	mov    ebx,DWORD PTR ds:0x4291af
  42099b:	dec    ebx
  42099c:	mov    DWORD PTR ds:0x4291af,ebx
  4209a2:	xor    ebx,ebx
  4209a4:	xor    ebx,DWORD PTR ds:0x4291af
  4209aa:	dec    ebx
  4209ab:	mov    DWORD PTR ds:0x4291af,ebx
  4209b1:	jmp    0x420959
  4209b6:	mov    DWORD PTR [esp+0x18],ecx
  4209ba:	add    DWORD PTR ds:0x429167,0x3918
  4209c4:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  4209cc:	mov    edx,DWORD PTR ds:0x4291af
  4209d2:	or     DWORD PTR ds:0x429163,edx
  4209d8:	lea    eax,[esp+0x3c]
  4209dc:	mov    DWORD PTR [esp+0x30],eax
  4209e0:	xor    edi,edx
  4209e2:	lea    eax,[esp+0x38]
  4209e6:	sbb    edx,DWORD PTR ds:0x4291c3
  4209ec:	mov    DWORD PTR [esp+0x20],eax
  4209f0:	or     edi,0x5972
  4209f6:	mov    eax,ds:0x42830b
  4209fb:	mov    DWORD PTR ds:0x42917f,0x17
  420a05:	cmp    DWORD PTR ds:0x42917f,0x0
  420a0c:	je     0x420a43
  420a12:	cmp    DWORD PTR ds:0x42917f,0x21
  420a19:	jl     0x420a43
  420a1f:	jmp    0x420a2f
  420a24:	push   0x3972
  420a29:	call   DWORD PTR ds:0x42a883
  420a2f:	xor    edi,edi
  420a31:	add    edi,DWORD PTR ds:0x42917f
  420a37:	dec    edi
  420a38:	mov    DWORD PTR ds:0x42917f,edi
  420a3e:	jmp    0x420a05
  420a43:	mov    eax,DWORD PTR [eax+0x1c8]
  420a49:	mov    eax,DWORD PTR [eax]
  420a4b:	mov    edx,DWORD PTR [esp+0x20]
  420a4f:	mov    edi,0x75108ac
  420a54:	mov    ebx,DWORD PTR ds:0x4291db
  420a5a:	sbb    DWORD PTR ds:0x429153,ebx
  420a60:	xor    eax,edi
  420a62:	adc    DWORD PTR ds:0x4291f3,0x37f0
  420a6c:	mov    ebx,0x3272f3
  420a71:	add    DWORD PTR ds:0x4291a3,0x4291a7
  420a7b:	add    eax,ebx
  420a7d:	not    DWORD PTR ds:0x4291a3
  420a83:	mov    DWORD PTR [edx],eax
  420a85:	mov    DWORD PTR ds:0x4291cb,0x5252
  420a8f:	mov    eax,ds:0x42901f
  420a94:	cmp    eax,0x445cecf9
  420a99:	mov    DWORD PTR ds:0x4291bb,0x4b3f
  420aa3:	jne    0x420b94
  420aa9:	mov    eax,DWORD PTR [esp+0x18]
  420aad:	and    DWORD PTR ds:0x4291ab,0x0
  420ab7:	jmp    0x420acb
  420abc:	xor    edx,edx
  420abe:	add    edx,DWORD PTR ds:0x4291ab
  420ac4:	inc    edx
  420ac5:	mov    DWORD PTR ds:0x4291ab,edx
  420acb:	cmp    DWORD PTR ds:0x4291ab,0x1e
  420ad2:	jae    0x420b1c
  420ad8:	cmp    DWORD PTR ds:0x4291ab,0xe
  420adf:	jl     0x420b1c
  420ae5:	jmp    0x420afd
  420aea:	push   0x4280a5
  420aef:	push   DWORD PTR [ebp-0x1c]
  420af2:	push   0x3b7d
  420af7:	call   DWORD PTR ds:0x42a887
  420afd:	cmp    DWORD PTR ds:0x4291ab,0xd
  420b04:	jne    0x420b17
  420b0a:	mov    edx,DWORD PTR ds:0x4291ab
  420b10:	inc    edx
  420b11:	mov    DWORD PTR ds:0x4291ab,edx
  420b17:	jmp    0x420abc
  420b1c:	mov    edx,DWORD PTR ds:0x42830b
  420b22:	adc    DWORD PTR ds:0x4291b3,0x4291a7
  420b2c:	mov    edx,DWORD PTR [edx+0x198]
  420b32:	adc    DWORD PTR ds:0x4291a3,0x42918f
  420b3c:	xor    eax,edi
  420b3e:	sub    DWORD PTR ds:0x42916f,0x429197
  420b48:	add    eax,ebx
  420b4a:	add    DWORD PTR ds:0x42915f,0x42915b
  420b54:	mov    DWORD PTR [edx],eax
  420b56:	mov    eax,DWORD PTR [esp+0x18]
  420b5a:	xor    eax,edi
  420b5c:	not    DWORD PTR ds:0x4291b3
  420b62:	add    eax,ebx
  420b64:	sbb    DWORD PTR ds:0x4291eb,0x4291d3
  420b6e:	mov    ds:0x42901f,eax
  420b73:	mov    eax,DWORD PTR [esp+0x18]
  420b77:	sbb    DWORD PTR ds:0x42917b,0x42915f
  420b81:	xor    eax,edi
  420b83:	sub    DWORD PTR ds:0x429167,0x5dcc
  420b8d:	add    eax,ebx
  420b8f:	mov    ds:0x428403,eax
  420b94:	and    DWORD PTR ds:0x4291c3,0x0
  420b9e:	xor    eax,eax
  420ba0:	xor    eax,DWORD PTR ds:0x4291c3
  420ba6:	inc    eax
  420ba7:	mov    ds:0x4291c3,eax
  420bac:	cmp    DWORD PTR ds:0x4291c3,0x10
  420bb3:	jb     0x420be9
  420bb9:	jmp    0x420bc4
  420bbe:	call   DWORD PTR ds:0x42a88b
  420bc4:	cmp    DWORD PTR ds:0x4291c3,0xf
  420bcb:	jne    0x420bdc
  420bd1:	mov    eax,ds:0x4291c3
  420bd6:	inc    eax
  420bd7:	mov    ds:0x4291c3,eax
  420bdc:	cmp    DWORD PTR ds:0x4291c3,0x1a
  420be3:	jb     0x420b9e
  420be9:	mov    eax,ds:0x42830b
  420bee:	xor    DWORD PTR ds:0x4291bb,0x4291bf
  420bf8:	mov    eax,DWORD PTR [eax+0x18c]
  420bfe:	add    DWORD PTR ds:0x4291e7,0x4bf9
  420c08:	mov    eax,DWORD PTR [eax]
  420c0a:	mov    DWORD PTR [esp+0x60],eax
  420c0e:	mov    eax,0xf89c85bd
  420c13:	mov    DWORD PTR [esp+0x10],eax
  420c17:	add    DWORD PTR ds:0x429193,0x4291c7
  420c21:	mov    DWORD PTR [esp+0x10],eax
  420c25:	or     DWORD PTR ds:0x42917f,0x429187
  420c2f:	mov    DWORD PTR [esp+0x10],eax
  420c33:	mov    DWORD PTR [esp+0x10],ecx
  420c37:	dec    DWORD PTR ds:0x429167
  420c3d:	mov    DWORD PTR [esp+0x20],eax
  420c41:	and    DWORD PTR ds:0x4291d7,0x0
  420c4b:	xor    eax,eax
  420c4d:	add    eax,DWORD PTR ds:0x4291d7
  420c53:	inc    eax
  420c54:	mov    ds:0x4291d7,eax
  420c59:	cmp    DWORD PTR ds:0x4291d7,0xc
  420c60:	jge    0x420ca3
  420c66:	jmp    0x420c7b
  420c6b:	push   0x4291a7
  420c70:	push   0x4280a5
  420c75:	call   DWORD PTR ds:0x42a88f
  420c7b:	cmp    DWORD PTR ds:0x4291d7,0xb
  420c82:	jne    0x420c96
  420c88:	xor    eax,eax
  420c8a:	xor    eax,DWORD PTR ds:0x4291d7
  420c90:	inc    eax
  420c91:	mov    ds:0x4291d7,eax
  420c96:	cmp    DWORD PTR ds:0x4291d7,0x18
  420c9d:	jb     0x420c4b
  420ca3:	mov    DWORD PTR [esp+0x20],0xf89c85b9
  420cab:	sbb    eax,0x733e
  420cb0:	mov    eax,DWORD PTR [esp+0x18]
  420cb4:	xor    eax,edi
  420cb6:	xor    DWORD PTR ds:0x429167,0x2364
  420cc0:	add    eax,ebx
  420cc2:	jmp    0x420ea1
  420cc7:	lea    eax,[esp+0x78]
  420ccb:	sub    DWORD PTR ds:0x42918f,0x2bd1
  420cd5:	push   eax
  420cd6:	add    DWORD PTR ds:0x4291af,0x4291bb
  420ce0:	push   0x4284b7
  420ce5:	add    DWORD PTR ds:0x42916f,0x62a2
  420cef:	call   DWORD PTR ds:0x42a87b
  420cf5:	mov    DWORD PTR ds:0x4291ef,0x479f
  420cff:	cmp    eax,0xffffffff
  420d02:	jne    0x42088a
  420d08:	push   0xf
  420d0a:	lea    eax,[esp+0x44]
  420d0e:	add    DWORD PTR ds:0x42918f,0x71aa
  420d18:	push   eax
  420d19:	adc    DWORD PTR ds:0x4291bb,0x429187
  420d23:	push   0x42850b
  420d28:	push   0x42851f
  420d2d:	or     DWORD PTR ds:0x4291ef,0x259a
  420d37:	push   0x42853f
  420d3c:	call   esi
  420d3e:	imul   eax,eax,0x300000
  420d44:	mov    DWORD PTR ds:0x42914f,0x7610
  420d4e:	cmp    eax,0x1b00000
  420d53:	mov    DWORD PTR ds:0x429157,0x1024
  420d5d:	jne    0x42088a
  420d63:	sbb    DWORD PTR ds:0x4291c3,0x4291d7
  420d6d:	lea    eax,[esp+0x1b8]
  420d74:	push   eax
  420d75:	push   0x42857b
  420d7a:	sbb    DWORD PTR ds:0x42918f,0x1a84
  420d84:	call   DWORD PTR ds:0x42a867
  420d8a:	mov    DWORD PTR ds:0x4291b3,0x1d41
  420d94:	cmp    eax,0xffffffff
  420d97:	jne    0x42088a
  420d9d:	mov    eax,DWORD PTR [esp+0xc]
  420da1:	xor    ecx,DWORD PTR ds:0x42914f
  420da7:	mov    ecx,DWORD PTR [esp+0x20]
  420dab:	sbb    DWORD PTR ds:0x429197,0x5641
  420db5:	xor    eax,edi
  420db7:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  420dc1:	lea    eax,[eax+ecx*1+0x3272f3]
  420dc8:	inc    DWORD PTR ds:0x4291e7
  420dce:	push   eax
  420dcf:	add    DWORD PTR ds:0x4291b3,ebx
  420dd5:	mov    eax,DWORD PTR [esp+0x14]
  420dd9:	xor    eax,edi
  420ddb:	lea    eax,[ebp+eax*1+0x3272fb]
  420de2:	xor    DWORD PTR ds:0x429197,0x3901
  420dec:	push   eax
  420ded:	mov    DWORD PTR ds:0x429153,0x5a0a
  420df7:	mov    eax,ds:0x42830b
  420dfc:	xor    DWORD PTR ds:0x4291c3,0x2a62
  420e06:	push   DWORD PTR [eax+0x1bc]
  420e0c:	adc    DWORD PTR ds:0x429153,0x42915f
  420e16:	call   0x421b3f
  420e1b:	and    DWORD PTR ds:0x4291af,0x0
  420e25:	jmp    0x420e37
  420e2a:	mov    edx,DWORD PTR ds:0x4291af
  420e30:	inc    edx
  420e31:	mov    DWORD PTR ds:0x4291af,edx
  420e37:	cmp    DWORD PTR ds:0x4291af,0x15
  420e3e:	jae    0x420e7e
  420e44:	cmp    DWORD PTR ds:0x4291af,0xd
  420e4b:	jl     0x420e7e
  420e51:	jmp    0x420e5f
  420e56:	push   DWORD PTR [ebp-0x1c]
  420e59:	call   DWORD PTR ds:0x42a893
  420e5f:	cmp    DWORD PTR ds:0x4291af,0xc
  420e66:	jne    0x420e79
  420e6c:	mov    edx,DWORD PTR ds:0x4291af
  420e72:	inc    edx
  420e73:	mov    DWORD PTR ds:0x4291af,edx
  420e79:	jmp    0x420e2a
  420e7e:	mov    eax,DWORD PTR [esp+0xc]
  420e82:	mov    ecx,DWORD PTR [esp+0x20]
  420e86:	mov    edx,DWORD PTR ds:0x429167
  420e8c:	adc    DWORD PTR ds:0x4291b3,edx
  420e92:	xor    eax,edi
  420e94:	and    edx,DWORD PTR ds:0x4291b3
  420e9a:	lea    eax,[ecx+eax*1+0x3272f3]
  420ea1:	mov    ecx,DWORD PTR [esp+0xc]
  420ea5:	neg    edx
  420ea7:	mov    edx,DWORD PTR [esp+0xc]
  420eab:	or     DWORD PTR ds:0x42917b,0x429157
  420eb5:	xor    edx,edi
  420eb7:	or     DWORD PTR ds:0x4291c7,0x1707
  420ec1:	xor    ecx,edi
  420ec3:	xor    DWORD PTR ds:0x42916f,0x6f67
  420ecd:	add    ecx,edx
  420ecf:	mov    edx,DWORD PTR [esp+0xc]
  420ed3:	add    DWORD PTR ds:0x429193,0xde7
  420edd:	xor    edx,edi
  420edf:	mov    DWORD PTR ds:0x429197,0x79ec
  420ee9:	lea    ecx,[ecx+edx*1+0x9758d9]
  420ef0:	mov    DWORD PTR ds:0x42917b,0x463d
  420efa:	mov    DWORD PTR [esp+0x20],eax
  420efe:	cmp    eax,ecx
  420f00:	jbe    0x420cc7
  420f06:	xor    ecx,ecx
  420f08:	or     ecx,DWORD PTR ds:0x4291a3
  420f0e:	or     DWORD PTR ds:0x4291b3,ecx
  420f14:	mov    eax,DWORD PTR [ebp+0xc]
  420f17:	and    DWORD PTR ds:0x4291e3,0x0
  420f21:	mov    ecx,DWORD PTR ds:0x4291e3
  420f27:	inc    ecx
  420f28:	mov    DWORD PTR ds:0x4291e3,ecx
  420f2e:	cmp    DWORD PTR ds:0x4291e3,0x18
  420f35:	jge    0x420f62
  420f3b:	jmp    0x420f55
  420f40:	push   0x4291ab
  420f45:	push   0x4291db
  420f4a:	push   0x4566
  420f4f:	call   DWORD PTR ds:0x42a89b
  420f55:	cmp    DWORD PTR ds:0x4291e3,0x17
  420f5c:	jb     0x420f21
  420f62:	mov    ds:0x42818f,eax
  420f67:	mov    eax,DWORD PTR [ebp+0x10]
  420f6a:	mov    ds:0x4283eb,eax
  420f6f:	mov    DWORD PTR ds:0x4291af,0x18
  420f79:	cmp    DWORD PTR ds:0x4291af,0x0
  420f80:	je     0x420fd1
  420f86:	cmp    DWORD PTR ds:0x4291af,0x4
  420f8d:	ja     0x420fd1
  420f93:	jmp    0x420fa3
  420f98:	push   0x82c1
  420f9d:	call   DWORD PTR ds:0x42a863
  420fa3:	cmp    DWORD PTR ds:0x4291af,0x5
  420faa:	jne    0x420fbf
  420fb0:	xor    ecx,ecx
  420fb2:	or     ecx,DWORD PTR ds:0x4291af
  420fb8:	dec    ecx
  420fb9:	mov    DWORD PTR ds:0x4291af,ecx
  420fbf:	mov    ecx,DWORD PTR ds:0x4291af
  420fc5:	dec    ecx
  420fc6:	mov    DWORD PTR ds:0x4291af,ecx
  420fcc:	jmp    0x420f79
  420fd1:	mov    eax,ds:0x42818f
  420fd6:	movzx  ecx,BYTE PTR ds:0x429183
  420fdd:	adc    DWORD PTR ds:0x4291d7,ecx
  420fe3:	mov    ecx,DWORD PTR [esp+0x30]
  420fe7:	sub    DWORD PTR ds:0x4291ab,0x2768
  420ff1:	sub    eax,ebx
  420ff3:	and    DWORD PTR ds:0x42919f,0x51d9
  420ffd:	xor    eax,edi
  420fff:	mov    DWORD PTR [ecx],eax
  421001:	lea    eax,[esp+0x2c]
  421005:	mov    DWORD PTR [esp+0x6c],eax
  421009:	xor    DWORD PTR ds:0x4291cf,0x6aa
  421013:	lea    eax,[ebp+0x4]
  421016:	sub    DWORD PTR ds:0x42915b,0x4291af
  421020:	mov    DWORD PTR [esp+0x2c],eax
  421024:	lea    eax,[esp+0x78]
  421028:	sub    DWORD PTR ds:0x429153,0x6538
  421032:	push   eax
  421033:	add    DWORD PTR ds:0x4291a3,0x4291f3
  42103d:	push   0x428567
  421042:	call   DWORD PTR ds:0x42a87b
  421048:	mov    DWORD PTR ds:0x4291e3,0x1cd6
  421052:	cmp    eax,0xffffffff
  421055:	mov    DWORD PTR ds:0x4291b7,0x32c8
  42105f:	jne    0x42088a
  421065:	push   0xf
  421067:	lea    eax,[esp+0x44]
  42106b:	xor    DWORD PTR ds:0x429193,0x42919b
  421075:	push   eax
  421076:	push   0x4285bb
  42107b:	adc    DWORD PTR ds:0x429193,0x7895
  421085:	push   0x4285cf
  42108a:	push   0x4285ef
  42108f:	call   esi
  421091:	imul   eax,eax,0x300000
  421097:	cmp    eax,0x1b00000
  42109c:	jne    0x42088a
  4210a2:	lea    eax,[esp+0x1b8]
  4210a9:	push   eax
  4210aa:	push   0x42862b
  4210af:	sub    DWORD PTR ds:0x4291bf,0x42918b
  4210b9:	call   DWORD PTR ds:0x42a867
  4210bf:	mov    DWORD PTR ds:0x429187,0x3d95
  4210c9:	cmp    eax,0xffffffff
  4210cc:	mov    DWORD PTR ds:0x42917f,0x79ad
  4210d6:	jne    0x42088a
  4210dc:	lea    eax,[esp+0x78]
  4210e0:	add    DWORD PTR ds:0x42914f,0x6022
  4210ea:	push   eax
  4210eb:	neg    DWORD PTR ds:0x42917f
  4210f1:	push   0x428617
  4210f6:	add    DWORD PTR ds:0x42917b,0x4291e7
  421100:	call   DWORD PTR ds:0x42a87b
  421106:	mov    DWORD PTR ds:0x42916f,0x4f36
  421110:	cmp    eax,0xffffffff
  421113:	mov    DWORD PTR ds:0x429197,0x71f8
  42111d:	jne    0x42088a
  421123:	xor    DWORD PTR ds:0x4291b7,0x540c
  42112d:	push   0xf
  42112f:	or     DWORD PTR ds:0x42914b,0x42916b
  421139:	lea    eax,[esp+0x44]
  42113d:	and    DWORD PTR ds:0x4291ab,0x3361
  421147:	push   eax
  421148:	sub    DWORD PTR ds:0x4291bb,0x5c7b
  421152:	push   0x42866b
  421157:	adc    DWORD PTR ds:0x4291ab,0x4291cf
  421161:	push   0x42867f
  421166:	xor    DWORD PTR ds:0x429183,0x4291b7
  421170:	push   0x42869f
  421175:	or     DWORD PTR ds:0x4291af,0x4291cf
  42117f:	call   esi
  421181:	imul   eax,eax,0x300000
  421187:	mov    DWORD PTR ds:0x429157,0x112c
  421191:	cmp    eax,0x1b00000
  421196:	jne    0x42088a
  42119c:	or     DWORD PTR ds:0x42914f,0x1a1c
  4211a6:	lea    eax,[esp+0x1b8]
  4211ad:	push   eax
  4211ae:	sub    DWORD PTR ds:0x4291eb,0xb4e
  4211b8:	push   0x4286db
  4211bd:	not    DWORD PTR ds:0x429153
  4211c3:	call   DWORD PTR ds:0x42a867
  4211c9:	mov    DWORD PTR ds:0x4291d7,0x34b9
  4211d3:	cmp    eax,0xffffffff
  4211d6:	mov    DWORD PTR ds:0x4291bb,0x68d6
  4211e0:	jne    0x42088a
  4211e6:	lea    eax,[esp+0x78]
  4211ea:	push   eax
  4211eb:	sub    DWORD PTR ds:0x4291a7,0x429183
  4211f5:	push   0x4286c7
  4211fa:	sub    DWORD PTR ds:0x42919f,0xfe
  421204:	call   DWORD PTR ds:0x42a87b
  42120a:	mov    DWORD PTR ds:0x4291a3,0x162e
  421214:	cmp    eax,0xffffffff
  421217:	jne    0x42088a
  42121d:	add    DWORD PTR ds:0x42918f,0x39d
  421227:	push   0xf
  421229:	lea    eax,[esp+0x44]
  42122d:	push   eax
  42122e:	sbb    DWORD PTR ds:0x4291df,0x4c8c
  421238:	push   0x42871b
  42123d:	push   0x42872f
  421242:	push   0x42874f
  421247:	call   esi
  421249:	sub    DWORD PTR ds:0x42914f,0x429163
  421253:	imul   eax,eax,0x300000
  421259:	mov    DWORD PTR ds:0x42918b,0x5962
  421263:	cmp    eax,0x1b00000
  421268:	jne    0x42088a
  42126e:	add    DWORD PTR ds:0x4291a3,0x4291cb
  421278:	lea    eax,[esp+0x1b8]
  42127f:	or     DWORD PTR ds:0x4291ab,0x4619
  421289:	push   eax
  42128a:	push   0x42878b
  42128f:	and    DWORD PTR ds:0x42916f,0x4291ef
  421299:	call   DWORD PTR ds:0x42a867
  42129f:	mov    DWORD PTR ds:0x4291ef,0x2004
  4212a9:	cmp    eax,0xffffffff
  4212ac:	mov    DWORD PTR ds:0x42918b,0x62c6
  4212b6:	jne    0x42088a
  4212bc:	and    DWORD PTR ds:0x4291d3,0x5eb4
  4212c6:	lea    eax,[esp+0x78]
  4212ca:	adc    DWORD PTR ds:0x42917f,0x4918
  4212d4:	push   eax
  4212d5:	or     DWORD PTR ds:0x42919b,0x429153
  4212df:	push   0x428777
  4212e4:	sbb    DWORD PTR ds:0x429197,0x429157
  4212ee:	call   DWORD PTR ds:0x42a87b
  4212f4:	mov    DWORD PTR ds:0x42914f,0x13e7
  4212fe:	cmp    eax,0xffffffff
  421301:	mov    DWORD PTR ds:0x4291cf,0xa62
  42130b:	jne    0x42088a
  421311:	xor    DWORD PTR ds:0x42915b,0x4291bb
  42131b:	push   0xf
  42131d:	lea    eax,[esp+0x44]
  421321:	or     DWORD PTR ds:0x4291b3,0x2cef
  42132b:	push   eax
  42132c:	push   0x4287cb
  421331:	push   0x4287df
  421336:	sub    DWORD PTR ds:0x4291a3,0x42918f
  421340:	push   0x4287ff
  421345:	call   esi
  421347:	imul   eax,eax,0x300000
  42134d:	mov    DWORD PTR ds:0x429193,0x43ec
  421357:	cmp    eax,0x1b00000
  42135c:	mov    DWORD PTR ds:0x4291c7,0x18cb
  421366:	jne    0x42088a
  42136c:	add    DWORD PTR ds:0x4291af,0x5057
  421376:	lea    eax,[esp+0x1b8]
  42137d:	or     DWORD PTR ds:0x4291c3,0x48df
  421387:	push   eax
  421388:	and    DWORD PTR ds:0x4291e3,0x7c0c
  421392:	push   0x42883b
  421397:	and    DWORD PTR ds:0x4291f7,0x4291d7
  4213a1:	call   DWORD PTR ds:0x42a867
  4213a7:	cmp    eax,0xffffffff
  4213aa:	jne    0x42088a
  4213b0:	or     DWORD PTR ds:0x4291cb,0x5541
  4213ba:	lea    eax,[esp+0x78]
  4213be:	sub    DWORD PTR ds:0x4291f7,0x686a
  4213c8:	push   eax
  4213c9:	xor    DWORD PTR ds:0x4291ef,0x4291eb
  4213d3:	push   0x428827
  4213d8:	add    DWORD PTR ds:0x4291bb,0x4894
  4213e2:	call   DWORD PTR ds:0x42a87b
  4213e8:	mov    DWORD PTR ds:0x42914b,0x5d36
  4213f2:	cmp    eax,0xffffffff
  4213f5:	mov    DWORD PTR ds:0x42918b,0x63d2
  4213ff:	jne    0x42088a
  421405:	adc    DWORD PTR ds:0x4291d3,0x6d
  42140f:	push   0xf
  421411:	xor    DWORD PTR ds:0x4291df,0x4291b3
  42141b:	lea    eax,[esp+0x44]
  42141f:	xor    DWORD PTR ds:0x42914f,0x245a
  421429:	push   eax
  42142a:	adc    DWORD PTR ds:0x42915f,0x29d1
  421434:	push   0x42887b
  421439:	push   0x42888f
  42143e:	sbb    DWORD PTR ds:0x42914f,0x429163
  421448:	push   0x4288af
  42144d:	adc    DWORD PTR ds:0x42917f,0x4291a3
  421457:	call   esi
  421459:	imul   eax,eax,0x300000
  42145f:	cmp    eax,0x1b00000
  421464:	jne    0x42088a
  42146a:	mov    DWORD PTR ds:0x4291cf,0x5dc8
  421474:	lea    eax,[esp+0x1b8]
  42147b:	add    DWORD PTR ds:0x42919b,0x4291ab
  421485:	push   eax
  421486:	not    DWORD PTR ds:0x429153
  42148c:	push   0x4288eb
  421491:	call   DWORD PTR ds:0x42a867
  421497:	mov    DWORD PTR ds:0x4291e7,0x183e
  4214a1:	cmp    eax,0xffffffff
  4214a4:	jne    0x42088a
  4214aa:	lea    eax,[esp+0x78]
  4214ae:	xor    DWORD PTR ds:0x4291d7,0x57b8
  4214b8:	push   eax
  4214b9:	push   0x4288d7
  4214be:	add    DWORD PTR ds:0x4291af,0x1e81
  4214c8:	call   DWORD PTR ds:0x42a87b
  4214ce:	mov    DWORD PTR ds:0x4291c3,0x328a
  4214d8:	cmp    eax,0xffffffff
  4214db:	mov    DWORD PTR ds:0x4291f7,0x13f0
  4214e5:	jne    0x42088a
  4214eb:	push   0xf
  4214ed:	lea    eax,[esp+0x44]
  4214f1:	adc    DWORD PTR ds:0x4291c3,0x429173
  4214fb:	push   eax
  4214fc:	xor    DWORD PTR ds:0x4291cf,0x725b
  421506:	push   0x42892b
  42150b:	adc    DWORD PTR ds:0x4291bb,0x39d7
  421515:	push   0x42893f
  42151a:	xor    DWORD PTR ds:0x42918b,0x4291a7
  421524:	push   0x42895f
  421529:	call   esi
  42152b:	adc    DWORD PTR ds:0x4291ab,0x4291f7
  421535:	imul   eax,eax,0x300000
  42153b:	mov    DWORD PTR ds:0x4291cf,0x3d0e
  421545:	cmp    eax,0x1b00000
  42154a:	jne    0x42088a
  421550:	lea    eax,[esp+0x1b8]
  421557:	xor    DWORD PTR ds:0x429197,0x42919f
  421561:	push   eax
  421562:	push   0x42899b
  421567:	or     DWORD PTR ds:0x42915b,0x3d87
  421571:	call   DWORD PTR ds:0x42a867
  421577:	mov    DWORD PTR ds:0x4291bf,0x3132
  421581:	cmp    eax,0xffffffff
  421584:	jne    0x42088a
  42158a:	add    DWORD PTR ds:0x4291df,0x6129
  421594:	lea    eax,[esp+0x78]
  421598:	mov    DWORD PTR ds:0x42915b,0x7683
  4215a2:	push   eax
  4215a3:	push   0x428987
  4215a8:	adc    DWORD PTR ds:0x4291d3,0x4f30
  4215b2:	call   DWORD PTR ds:0x42a87b
  4215b8:	mov    DWORD PTR ds:0x42918f,0x2474
  4215c2:	cmp    eax,0xffffffff
  4215c5:	jne    0x42088a
  4215cb:	and    DWORD PTR ds:0x4291c3,0x7c44
  4215d5:	push   0xf
  4215d7:	lea    eax,[esp+0x44]
  4215db:	push   eax
  4215dc:	push   0x4289db
  4215e1:	sub    DWORD PTR ds:0x42914f,0x6ca1
  4215eb:	push   0x4289ef
  4215f0:	sbb    DWORD PTR ds:0x42916f,0x4291cf
  4215fa:	push   0x428a0f
  4215ff:	call   esi
  421601:	xor    DWORD PTR ds:0x4291eb,0x4291a3
  42160b:	imul   eax,eax,0x300000
  421611:	mov    DWORD PTR ds:0x4291a7,0x6fd3
  42161b:	cmp    eax,0x1b00000
  421620:	mov    DWORD PTR ds:0x4291f7,0x26fc
  42162a:	jne    0x42088a
  421630:	lea    eax,[esp+0x1b8]
  421637:	push   eax
  421638:	push   0x428a4b
  42163d:	call   DWORD PTR ds:0x42a867
  421643:	cmp    eax,0xffffffff
  421646:	jne    0x42088a
  42164c:	lea    eax,[esp+0x78]
  421650:	push   eax
  421651:	push   0x428a37
  421656:	call   DWORD PTR ds:0x42a87b
  42165c:	cmp    eax,0xffffffff
  42165f:	jne    0x42088a
  421665:	push   0xf
  421667:	lea    eax,[esp+0x44]
  42166b:	push   eax
  42166c:	push   0x428a8b
  421671:	push   0x428a9f
  421676:	push   0x428abf
  42167b:	call   esi
  42167d:	imul   eax,eax,0x300000
  421683:	cmp    eax,0x1b00000
  421688:	jne    0x42088a
  42168e:	lea    eax,[esp+0x1b8]
  421695:	push   eax
  421696:	push   0x428afb
  42169b:	call   DWORD PTR ds:0x42a867
  4216a1:	cmp    eax,0xffffffff
  4216a4:	jne    0x42088a
  4216aa:	lea    eax,[esp+0x78]
  4216ae:	push   eax
  4216af:	push   0x428ae7
  4216b4:	call   DWORD PTR ds:0x42a87b
  4216ba:	cmp    eax,0xffffffff
  4216bd:	jne    0x42088a
  4216c3:	push   0xf
  4216c5:	lea    eax,[esp+0x44]
  4216c9:	push   eax
  4216ca:	push   0x428b3b
  4216cf:	push   0x428b4f
  4216d4:	push   0x428b6f
  4216d9:	call   esi
  4216db:	imul   eax,eax,0x300000
  4216e1:	cmp    eax,0x1b00000
  4216e6:	jne    0x42088a
  4216ec:	lea    eax,[esp+0x1b8]
  4216f3:	push   eax
  4216f4:	push   0x428bab
  4216f9:	call   DWORD PTR ds:0x42a867
  4216ff:	cmp    eax,0xffffffff
  421702:	jne    0x42088a
  421708:	lea    eax,[esp+0x78]
  42170c:	push   eax
  42170d:	push   0x428b97
  421712:	call   DWORD PTR ds:0x42a87b
  421718:	cmp    eax,0xffffffff
  42171b:	jne    0x42088a
  421721:	push   0xf
  421723:	lea    eax,[esp+0x44]
  421727:	push   eax
  421728:	push   0x428beb
  42172d:	push   0x428bff
  421732:	push   0x428c1f
  421737:	call   esi
  421739:	imul   eax,eax,0x300000
  42173f:	cmp    eax,0x1b00000
  421744:	jne    0x42088a
  42174a:	lea    eax,[esp+0x1b8]
  421751:	push   eax
  421752:	push   0x428c5b
  421757:	call   DWORD PTR ds:0x42a867
  42175d:	cmp    eax,0xffffffff
  421760:	jne    0x42088a
  421766:	lea    eax,[esp+0x78]
  42176a:	push   eax
  42176b:	push   0x428c47
  421770:	call   DWORD PTR ds:0x42a87b
  421776:	cmp    eax,0xffffffff
  421779:	jne    0x42088a
  42177f:	push   0xf
  421781:	lea    eax,[esp+0x44]
  421785:	push   eax
  421786:	push   0x428c9b
  42178b:	push   0x428caf
  421790:	push   0x428ccf
  421795:	call   esi
  421797:	imul   eax,eax,0x300000
  42179d:	cmp    eax,0x1b00000
  4217a2:	jne    0x42088a
  4217a8:	lea    eax,[esp+0x1b8]
  4217af:	push   eax
  4217b0:	push   0x428d0b
  4217b5:	call   DWORD PTR ds:0x42a867
  4217bb:	cmp    eax,0xffffffff
  4217be:	jne    0x42088a
  4217c4:	lea    eax,[esp+0x78]
  4217c8:	push   eax
  4217c9:	push   0x428cf7
  4217ce:	call   DWORD PTR ds:0x42a87b
  4217d4:	cmp    eax,0xffffffff
  4217d7:	jne    0x42088a
  4217dd:	push   0xf
  4217df:	lea    eax,[esp+0x44]
  4217e3:	push   eax
  4217e4:	push   0x428d4b
  4217e9:	push   0x428d5f
  4217ee:	push   0x428d7f
  4217f3:	call   esi
  4217f5:	imul   eax,eax,0x300000
  4217fb:	cmp    eax,0x1b00000
  421800:	jne    0x42088a
  421806:	lea    eax,[esp+0x1b8]
  42180d:	push   eax
  42180e:	push   0x428dbb
  421813:	call   DWORD PTR ds:0x42a867
  421819:	cmp    eax,0xffffffff
  42181c:	jne    0x42088a
  421822:	mov    eax,DWORD PTR [esp+0x3c]
  421826:	cmp    eax,0xf89c85a2
  42182b:	je     0x42188a
  421831:	mov    eax,DWORD PTR [esp+0x18]
  421835:	mov    ecx,DWORD PTR [esp+0x38]
  421839:	xor    eax,edi
  42183b:	add    eax,ebx
  42183d:	cmp    eax,ecx
  42183f:	je     0x42188a
  421845:	mov    eax,ds:0x42830b
  42184a:	mov    eax,DWORD PTR [eax+0x194]
  421850:	mov    ecx,DWORD PTR [eax]
  421852:	mov    eax,DWORD PTR [ecx+0x3c]
  421855:	push   DWORD PTR ds:0x4283eb
  42185b:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  42185f:	push   DWORD PTR ds:0x42818f
  421865:	add    eax,ecx
  421867:	mov    ecx,DWORD PTR ds:0x42830b
  42186d:	mov    ecx,DWORD PTR [ecx+0x194]
  421873:	push   DWORD PTR [ecx]
  421875:	call   eax
  421877:	mov    ecx,DWORD PTR ds:0x42830b
  42187d:	mov    ecx,DWORD PTR [ecx+0x1cc]
  421883:	mov    DWORD PTR [ecx],eax
  421885:	jmp    0x421ab7
  42188a:	mov    eax,DWORD PTR [esp+0x18]
  42188e:	mov    ecx,DWORD PTR [esp+0x60]
  421892:	xor    eax,edi
  421894:	add    eax,ebx
  421896:	cmp    eax,ecx
  421898:	jne    0x421901
  42189e:	mov    eax,DWORD PTR [esp+0x18]
  4218a2:	mov    ecx,DWORD PTR ds:0x42830b
  4218a8:	mov    ecx,DWORD PTR [ecx+0x198]
  4218ae:	xor    eax,edi
  4218b0:	add    eax,ebx
  4218b2:	cmp    eax,DWORD PTR [ecx]
  4218b4:	jne    0x4218da
  4218ba:	mov    eax,DWORD PTR [esp+0x18]
  4218be:	push   0xf89c85a1
  4218c3:	xor    eax,edi
  4218c5:	add    eax,ebx
  4218c7:	push   eax
  4218c8:	push   0xf89c85bd
  4218cd:	push   DWORD PTR [esp+0x18]
  4218d1:	push   DWORD PTR [esp+0x28]
  4218d5:	call   0x41b9fd
  4218da:	push   DWORD PTR [esp+0xc]
  4218de:	push   DWORD PTR [esp+0x1c]
  4218e2:	call   0x401000
  4218e7:	mov    eax,DWORD PTR [esp+0x18]
  4218eb:	xor    eax,edi
  4218ed:	add    eax,ebx
  4218ef:	mov    ds:0x428397,eax
  4218f4:	mov    eax,DWORD PTR [esp+0x18]
  4218f8:	xor    eax,edi
  4218fa:	add    eax,ebx
  4218fc:	mov    ds:0x42838f,eax
  421901:	mov    eax,DWORD PTR [esp+0x2c]
  421905:	test   eax,eax
  421907:	je     0x421ab7
  42190d:	lea    eax,[esp+0x78]
  421911:	mov    DWORD PTR [esp+0x64],0xf152c3a
  421919:	push   eax
  42191a:	mov    DWORD PTR [esp+0x78],0x712ed2f
  421922:	mov    DWORD PTR [esp+0x74],0x373fc09
  42192a:	push   0x428da7
  42192f:	mov    DWORD PTR [esp+0x70],0x72670ad9
  421937:	call   DWORD PTR ds:0x42a87b
  42193d:	cmp    eax,0xffffffff
  421940:	jne    0x42088a
  421946:	push   0xf
  421948:	lea    eax,[esp+0x44]
  42194c:	push   eax
  42194d:	push   0x428dfb
  421952:	push   0x428e0f
  421957:	push   0x428e2f
  42195c:	call   esi
  42195e:	imul   eax,eax,0x300000
  421964:	cmp    eax,0x1b00000
  421969:	jne    0x42088a
  42196f:	lea    eax,[esp+0x1b8]
  421976:	push   eax
  421977:	push   0x428e6b
  42197c:	call   DWORD PTR ds:0x42a867
  421982:	cmp    eax,0xffffffff
  421985:	jne    0x42088a
  42198b:	call   0x41b69e
  421990:	mov    eax,DWORD PTR [esp+0x34]
  421994:	mov    eax,DWORD PTR [esp+0xc]
  421998:	mov    DWORD PTR [esp+0x30],eax
  42199c:	mov    eax,DWORD PTR [esp+0x18]
  4219a0:	mov    DWORD PTR [esp+0xc],eax
  4219a4:	mov    eax,eax
  4219a6:	mov    eax,ds:0x42830b
  4219ab:	mov    ecx,DWORD PTR [eax+0x1c0]
  4219b1:	mov    edx,DWORD PTR [ecx]
  4219b3:	and    DWORD PTR [esp+0x14],0x0
  4219b8:	mov    esi,0xfabdbed6
  4219bd:	add    edx,esi
  4219bf:	adc    DWORD PTR [esp+0x14],0xffffffff
  4219c4:	mov    ecx,0x8a29a13f
  4219c9:	xor    edx,ecx
  4219cb:	mov    DWORD PTR [esp+0x20],edx
  4219cf:	mov    edx,DWORD PTR [esp+0x14]
  4219d3:	xor    edx,0x0
  4219d6:	cmp    DWORD PTR [esp+0x20],0x70941fe8
  4219de:	mov    DWORD PTR [esp+0x24],edx
  4219e2:	jne    0x4219f1
  4219e8:	cmp    edx,0xffffffff
  4219eb:	je     0x421a5a
  4219f1:	mov    eax,DWORD PTR [eax+0x1c8]
  4219f7:	mov    eax,DWORD PTR [eax]
  4219f9:	cdq    
  4219fa:	add    eax,esi
  4219fc:	adc    edx,0xffffffff
  4219ff:	and    DWORD PTR [esp+0x14],0x0
  421a04:	xor    edx,0x0
  421a07:	mov    DWORD PTR [esp+0x1c],edx
  421a0b:	mov    edx,DWORD PTR [esp+0xc]
  421a0f:	mov    DWORD PTR [esp+0x10],edx
  421a13:	xor    eax,ecx
  421a15:	add    DWORD PTR [esp+0x10],esi
  421a19:	mov    edx,DWORD PTR [esp+0x10]
  421a1d:	adc    DWORD PTR [esp+0x14],0xffffffff
  421a22:	xor    edx,ecx
  421a24:	mov    DWORD PTR [esp+0x20],edx
  421a28:	mov    edx,DWORD PTR [esp+0x14]
  421a2c:	xor    edx,0x0
  421a2f:	mov    DWORD PTR [esp+0x24],edx
  421a33:	cmp    DWORD PTR [esp+0x20],eax
  421a37:	jne    0x421a49
  421a3d:	mov    eax,DWORD PTR [esp+0x1c]
  421a41:	cmp    edx,eax
  421a43:	je     0x421a5a
  421a49:	mov    eax,DWORD PTR [esp+0xc]
  421a4d:	add    eax,DWORD PTR [esp+0x30]
  421a51:	mov    DWORD PTR [esp+0xc],eax
  421a55:	jmp    0x421ab7
  421a5a:	mov    eax,ds:0x42838f
  421a5f:	mov    edx,DWORD PTR ds:0x428397
  421a65:	xor    eax,edx
  421a67:	mov    ds:0x42838f,eax
  421a6c:	mov    edx,DWORD PTR ds:0x42838f
  421a72:	mov    eax,DWORD PTR [esp+0x2c]
  421a76:	add    DWORD PTR [eax],edx
  421a78:	mov    edx,DWORD PTR [esp+0xc]
  421a7c:	mov    eax,ds:0x42838f
  421a81:	xor    edx,edi
  421a83:	add    edx,ebx
  421a85:	xor    ebx,ebx
  421a87:	add    edx,esi
  421a89:	adc    ebx,0xffffffff
  421a8c:	xor    edi,edi
  421a8e:	xor    edx,ecx
  421a90:	xor    ebx,0x0
  421a93:	add    eax,esi
  421a95:	adc    edi,0xffffffff
  421a98:	xor    eax,ecx
  421a9a:	xor    edi,0x0
  421a9d:	cmp    eax,edx
  421a9f:	jne    0x421ab7
  421aa5:	cmp    edi,ebx
  421aa7:	jne    0x421ab7
  421aad:	mov    eax,ds:0x42838f
  421ab2:	mov    ds:0x428397,eax
  421ab7:	lea    eax,[esp+0x78]
  421abb:	push   eax
  421abc:	push   0x428e57
  421ac1:	call   DWORD PTR ds:0x42a87b
  421ac7:	cmp    eax,0xffffffff
  421aca:	jne    0x42088a
  421ad0:	push   0xf
  421ad2:	lea    eax,[esp+0x44]
  421ad6:	push   eax
  421ad7:	push   0x428eab
  421adc:	push   0x428ebf
  421ae1:	push   0x428edf
  421ae6:	call   DWORD PTR ds:0x42a897
  421aec:	imul   eax,eax,0x300000
  421af2:	cmp    eax,0x1b00000
  421af7:	jne    0x42088a
  421afd:	lea    eax,[esp+0x1b8]
  421b04:	push   eax
  421b05:	push   0x428f0b
  421b0a:	call   DWORD PTR ds:0x42a867
  421b10:	cmp    eax,0xffffffff
  421b13:	jne    0x42088a
  421b19:	mov    eax,ds:0x42830b
  421b1e:	push   0x4
  421b20:	add    eax,0x1cc
  421b25:	push   eax
  421b26:	lea    eax,[esp+0x3c]
  421b2a:	push   eax
  421b2b:	call   0x421b3f
  421b30:	mov    eax,DWORD PTR [esp+0x34]
  421b34:	mov    eax,DWORD PTR [eax]
  421b36:	pop    edi
  421b37:	pop    esi
  421b38:	pop    ebx
  421b39:	mov    esp,ebp
  421b3b:	pop    ebp
  421b3c:	ret    0xc
  421b3f:	push   ebp
  421b40:	mov    ebp,esp
  421b42:	sub    esp,0x10
  421b45:	sub    DWORD PTR ds:0x429153,ebx
  421b4b:	mov    eax,0xf89c85a1
  421b50:	and    ecx,DWORD PTR ds:0x42914b
  421b56:	mov    DWORD PTR [ebp-0x4],eax
  421b59:	and    DWORD PTR ds:0x429167,0x0
  421b63:	jmp    0x421b75
  421b68:	mov    edx,DWORD PTR ds:0x429167
  421b6e:	inc    edx
  421b6f:	mov    DWORD PTR ds:0x429167,edx
  421b75:	cmp    DWORD PTR ds:0x429167,0x1c
  421b7c:	jae    0x421bcb
  421b82:	cmp    DWORD PTR ds:0x429167,0xc
  421b89:	jge    0x421bcb
  421b8f:	jmp    0x421bac
  421b94:	push   DWORD PTR [ebp-0x28]
  421b97:	push   0x428152
  421b9c:	push   0x42810e
  421ba1:	push   0x400000
  421ba6:	call   DWORD PTR ds:0x42a86b
  421bac:	cmp    DWORD PTR ds:0x429167,0xb
  421bb3:	jne    0x421bc6
  421bb9:	mov    edx,DWORD PTR ds:0x429167
  421bbf:	inc    edx
  421bc0:	mov    DWORD PTR ds:0x429167,edx
  421bc6:	jmp    0x421b68
  421bcb:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  421bd2:	or     edx,0x5b7d
  421bd8:	mov    ecx,DWORD PTR [ebp-0x4]
  421bdb:	push   esi
  421bdc:	mov    DWORD PTR ds:0x42918b,0x1a
  421be6:	cmp    DWORD PTR ds:0x42918b,0x0
  421bed:	je     0x421c25
  421bf3:	cmp    DWORD PTR ds:0x42918b,0x26
  421bfa:	ja     0x421c25
  421c00:	jmp    0x421c13
  421c05:	push   0x4386
  421c0a:	push   DWORD PTR [ebp-0x14]
  421c0d:	call   DWORD PTR ds:0x42a86f
  421c13:	mov    edx,DWORD PTR ds:0x42918b
  421c19:	dec    edx
  421c1a:	mov    DWORD PTR ds:0x42918b,edx
  421c20:	jmp    0x421be6
  421c25:	mov    edx,0x75108ac
  421c2a:	xor    ecx,edx
  421c2c:	mov    esi,0x3272f3
  421c31:	push   edi
  421c32:	mov    edi,DWORD PTR [ebp+0x10]
  421c35:	add    ecx,esi
  421c37:	cmp    ecx,edi
  421c39:	mov    DWORD PTR ds:0x42916f,0x60ec
  421c43:	je     0x42414b
  421c49:	movzx  ecx,WORD PTR ds:0x4291f7
  421c50:	adc    DWORD PTR ds:0x4291cf,ecx
  421c56:	mov    ecx,DWORD PTR [ebp-0x4]
  421c59:	mov    edi,DWORD PTR [ebp+0x10]
  421c5c:	inc    DWORD PTR ds:0x4291d3
  421c62:	xor    eax,eax
  421c64:	and    DWORD PTR ds:0x4291b7,0x2b27
  421c6e:	xor    ecx,edx
  421c70:	add    ecx,esi
  421c72:	add    DWORD PTR ds:0x42914b,0x714
  421c7c:	add    edi,0xfabdbed6
  421c82:	mov    DWORD PTR ds:0x429173,0x79de
  421c8c:	adc    eax,0xffffffff
  421c8f:	or     DWORD PTR ds:0x4291b3,0x42917f
  421c99:	xor    eax,0x0
  421c9c:	adc    DWORD PTR ds:0x4291e7,0x4ab7
  421ca6:	mov    DWORD PTR [ebp-0xc],eax
  421ca9:	mov    DWORD PTR ds:0x42914b,0x1e
  421cb3:	cmp    DWORD PTR ds:0x42914b,0x0
  421cba:	je     0x421d0b
  421cc0:	cmp    DWORD PTR ds:0x42914b,0x8
  421cc7:	jge    0x421d0b
  421ccd:	jmp    0x421cdd
  421cd2:	push   0x4291eb
  421cd7:	call   DWORD PTR ds:0x42a873
  421cdd:	cmp    DWORD PTR ds:0x42914b,0x9
  421ce4:	jne    0x421cf8
  421cea:	xor    eax,eax
  421cec:	add    eax,DWORD PTR ds:0x42914b
  421cf2:	dec    eax
  421cf3:	mov    ds:0x42914b,eax
  421cf8:	xor    eax,eax
  421cfa:	xor    eax,DWORD PTR ds:0x42914b
  421d00:	dec    eax
  421d01:	mov    ds:0x42914b,eax
  421d06:	jmp    0x421cb3
  421d0b:	push   ebx
  421d0c:	xor    ebx,ebx
  421d0e:	xor    edi,0x8a29a13f
  421d14:	mov    eax,ecx
  421d16:	add    eax,0xfabdbed6
  421d1b:	adc    ebx,0xffffffff
  421d1e:	xor    eax,0x8a29a13f
  421d23:	xor    ebx,0x0
  421d26:	cmp    eax,edi
  421d28:	jne    0x421d41
  421d2e:	cmp    ebx,DWORD PTR [ebp-0xc]
  421d31:	je     0x424145
  421d37:	jmp    0x421d41
  421d3c:	mov    esi,0x3272f3
  421d41:	mov    eax,DWORD PTR [ebp-0x4]
  421d44:	mov    edi,DWORD PTR [ebp-0x8]
  421d47:	xor    edi,edx
  421d49:	add    edi,esi
  421d4b:	mov    esi,DWORD PTR [ebp+0x8]
  421d4e:	imul   edi,ecx
  421d51:	mov    ebx,DWORD PTR [ebp+0xc]
  421d54:	xor    eax,edx
  421d56:	add    eax,ecx
  421d58:	mov    al,BYTE PTR [ebx+eax*1+0x3272f3]
  421d5f:	mov    BYTE PTR [edi+esi*1],al
  421d62:	mov    eax,DWORD PTR [ebp-0x8]
  421d65:	mov    esi,DWORD PTR [ebp+0x10]
  421d68:	xor    eax,edx
  421d6a:	xor    ebx,ebx
  421d6c:	add    esi,0xfabdbed6
  421d72:	adc    ebx,0xffffffff
  421d75:	lea    ecx,[ecx+eax*1+0x3272f3]
  421d7c:	xor    edi,edi
  421d7e:	xor    esi,0x8a29a13f
  421d84:	xor    ebx,0x0
  421d87:	mov    eax,ecx
  421d89:	add    eax,0xfabdbed6
  421d8e:	adc    edi,0xffffffff
  421d91:	xor    eax,0x8a29a13f
  421d96:	xor    edi,0x0
  421d99:	cmp    eax,esi
  421d9b:	jne    0x421d3c
  421da1:	cmp    edi,ebx
  421da3:	jne    0x421d3c
  421da9:	jmp    0x424145
  421dae:	sbb    ah,bl
  421db0:	cmp    ch,BYTE PTR [edi-0x46]
  421db3:	xchg   BYTE PTR [esi],al
  421db5:	xchg   BYTE PTR [edx-0x68],bl
  421db8:	dec    esi
  421db9:	push   esp
  421dba:	(bad)  
  421dbb:	loope  0x421d7a
  421dbd:	dec    ebx
  421dbe:	outs   dx,DWORD PTR ds:[esi]
  421dbf:	mov    cl,0x82
  421dc1:	add    DWORD PTR [eax],0x5c
  421dc4:	add    DWORD PTR [ebx-0x3bf5ae0f],0xffffff94
  421dcb:	dec    esi
  421dcc:	jecxz  0x421d98
  421dce:	sbb    DWORD PTR [eax],esp
  421dd0:	add    BYTE PTR [ebp-0x7e],al
  421dd3:	and    BYTE PTR [esi+0x18169c35],bh
  421dd9:	ins    DWORD PTR es:[edi],dx
  421dda:	and    al,0xc
  421ddc:	push   edi
  421ddd:	ret    
  421dde:	out    dx,al
  421ddf:	pop    edi
  421de0:	arpl   WORD PTR [edi],si
  421de2:	mov    DWORD PTR [esi+0x65],ecx
  421de5:	aas    
  421de6:	ret    
  421de7:	push   ss
  421de8:	scas   al,BYTE PTR es:[edi]
  421de9:	push   ecx
  421dea:	je     0x421de9
  421dec:	cli    
  421ded:	pushf  
  421dee:	sbb    esp,DWORD PTR [ebp+0x2d36f1cb]
  421df4:	daa    
  421df5:	xchg   ebx,eax
  421df6:	es pop ecx
  421df8:	aad    0x33
  421dfa:	mov    BYTE PTR [edx+0x76],ah
  421dfd:	data16 not dl
  421e00:	inc    edx
  421e01:	fidivr WORD PTR [eax-0x4265166a]
  421e07:	sub    BYTE PTR [edx+0x76],dl
  421e0a:	jnp    0x421de1
  421e0c:	inc    edx
  421e0d:	adc    al,al
  421e0f:	cmp    edx,DWORD PTR [esp+edx*1]
  421e12:	sbb    BYTE PTR [edi+0x552dc3ca],ah
  421e18:	push   ebp
  421e19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e1a:	pop    ebx
  421e1b:	and    BYTE PTR [edi],cl
  421e1d:	mov    edx,0xf888566a
  421e22:	sub    DWORD PTR [ebp+0x51dcdd7],eax
  421e28:	pop    ebp
  421e29:	sub    eax,DWORD PTR [edi-0x74c2fa33]
  421e2f:	out    dx,eax
  421e30:	xor    DWORD PTR [edi+esi*4+0x53],ebp
  421e34:	ficom  DWORD PTR [esi+0x29ebf590]
  421e3a:	loop   0x421e8f
  421e3c:	and    esp,DWORD PTR [ebx+0x72]
  421e3f:	xor    BYTE PTR [esi+0x59],al
  421e42:	(bad)  
  421e43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e44:	and    ebp,DWORD PTR [edx-0x24]
  421e47:	fidivr WORD PTR [esi]
  421e49:	push   ebp
  421e4a:	add    dh,dh
  421e4c:	xchg   edi,eax
  421e4d:	jns    0x421e0e
  421e4f:	daa    
  421e50:	pop    esi
  421e51:	cmp    edx,DWORD PTR [esi]
  421e53:	out    0x11,al
  421e55:	popa   
  421e56:	mov    dl,0x3
  421e58:	push   esp
  421e59:	mov    eax,esi
  421e5b:	push   esi
  421e5c:	push   cs
  421e5d:	mov    eax,ds:0x8c678cc
  421e62:	data16 xor al,dh
  421e65:	mov    dl,0x27
  421e67:	stos   DWORD PTR es:[edi],eax
  421e68:	mov    dl,0xf5
  421e6a:	add    BYTE PTR [ecx-0x32],0x79
  421e6e:	mov    dh,bl
  421e70:	adc    DWORD PTR [edx+0x457ad42c],ecx
  421e76:	rol    DWORD PTR [eax],1
  421e78:	mov    bl,0x32
  421e7a:	add    eax,0x91b7a55a
  421e7f:	inc    edx
  421e80:	mov    dh,0x71
  421e82:	jl     0x421ef5
  421e84:	retf   0xa0af
  421e87:	push   ebp
  421e88:	mov    BYTE PTR [edx+edi*1+0x2d],cl
  421e8c:	inc    ebx
  421e8d:	mov    dl,0xce
  421e8f:	jne    0x421f06
  421e91:	inc    ebx
  421e92:	cdq    
  421e93:	jecxz  0x421e44
  421e95:	xchg   esi,eax
  421e96:	cs cld 
  421e98:	and    esi,DWORD PTR [edi]
  421e9a:	les    eax,FWORD PTR [ebx-0xda076d2]
  421ea0:	xor    ah,dh
  421ea2:	xchg   ebx,eax
  421ea3:	push   0xed99b94e
  421ea8:	inc    ecx
  421ea9:	pop    ebx
  421eaa:	ja     0x421f1f
  421eac:	dec    edi
  421ead:	mov    BYTE PTR [eax-0x7a],dl
  421eb0:	pop    eax
  421eb1:	mov    bh,0xe1
  421eb3:	inc    ebx
  421eb4:	dec    ecx
  421eb5:	dec    esi
  421eb6:	jb     0x421e85
  421eb8:	jle    0x421ec6
  421eba:	repz jns 0x421e45
  421ebd:	cmp    DWORD PTR [ebx],edi
  421ebf:	or     BYTE PTR [ebx],dh
  421ec1:	mov    ebx,0xb17f3cf7
  421ec6:	(bad)  
  421ec8:	leave  
  421ec9:	xchg   edi,eax
  421eca:	icebp  
  421ecb:	imul   esp,DWORD PTR [ecx+ebp*2],0x1f
  421ecf:	dec    ebx
  421ed0:	jb     0x421f51
  421ed2:	add    eax,DWORD PTR [eax-0xf]
  421ed5:	fdiv   DWORD PTR [ecx]
  421ed7:	neg    esp
  421ed9:	mov    ds:0x594f0ef4,al
  421ede:	mov    BYTE PTR [eax+0x11],dl
  421ee1:	pop    esp
  421ee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ee3:	pop    esi
  421ee4:	cmp    ebx,DWORD PTR [edx+0x2631b6c7]
  421eea:	xor    eax,0xbf790499
  421eef:	inc    esp
  421ef0:	clc    
  421ef1:	test   eax,0xe082b721
  421ef6:	fwait
  421ef7:	mov    ch,0xd0
  421ef9:	dec    edx
  421efa:	and    al,0x29
  421efc:	xchg   edi,eax
  421efd:	lods   al,BYTE PTR ds:[esi]
  421efe:	ror    BYTE PTR [edx+0x51],0xd2
  421f02:	mov    WORD PTR [ebx+0x400081c8],ss
  421f08:	outs   dx,BYTE PTR ds:[esi]
  421f09:	loopne 0x421efa
  421f0b:	or     al,0xc7
  421f0d:	xchg   ecx,eax
  421f0e:	fdivr  QWORD PTR [eax-0x2d]
  421f11:	adc    al,0xdf
  421f13:	dec    edx
  421f14:	inc    ebx
  421f15:	jmp    0xe8c3:0x931e1f23
  421f1c:	sbb    edx,esp
  421f1e:	jmp    0x30b2bb9e
  421f23:	shl    DWORD PTR [ebx-0x5cd5d384],0xc2
  421f2a:	sub    DWORD PTR [edi],ebx
  421f2c:	ret    0x14c6
  421f2f:	jle    0x421faf
  421f31:	jnp    0x421ee8
  421f33:	xchg   ebp,eax
  421f34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f35:	nop
  421f36:	rcr    cl,1
  421f38:	in     al,dx
  421f39:	cs dec ebp
  421f3b:	and    eax,0xc4b0cb2d
  421f40:	stos   BYTE PTR es:[edi],al
  421f41:	adc    bh,bl
  421f43:	mov    edx,0xaef6a09c
  421f48:	jmp    0x1fa2:0xba32daf7
  421f4f:	add    esp,esp
  421f51:	in     eax,0x3f
  421f53:	xor    dl,BYTE PTR [edi]
  421f55:	inc    edi
  421f56:	ins    BYTE PTR es:[edi],dx
  421f57:	outs   dx,DWORD PTR ds:[esi]
  421f58:	pusha  
  421f59:	sub    dh,BYTE PTR [ebx]
  421f5b:	(bad)  
  421f5d:	pop    ebx
  421f5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f5f:	idiv   DWORD PTR [esi]
  421f61:	jb     0x421efe
  421f63:	jmp    0xdee5d7e1
  421f68:	dec    ebp
  421f69:	test   BYTE PTR [eax+0x3a17f241],cl
  421f6f:	xor    al,0x51
  421f71:	shl    BYTE PTR ds:0x7412b89e,cl
  421f77:	dec    eax
  421f78:	enter  0x61f9,0xf3
  421f7c:	loopne 0x421fb3
  421f7e:	pop    ecx
  421f7f:	xor    ah,cl
  421f81:	add    DWORD PTR [edi-0x3872a9a7],ecx
  421f87:	mov    bl,0xee
  421f89:	setle  al
  421f8c:	cmp    BYTE PTR [edx-0x6a],bh
  421f8f:	enter  0x6921,0x58
  421f93:	fld    QWORD PTR [esi+esi*2]
  421f96:	(bad)  
  421f97:	int3   
  421f98:	add    BYTE PTR [ecx+0x22b45247],bl
  421f9e:	or     BYTE PTR [edx],al
  421fa0:	add    ah,ah
  421fa2:	stos   BYTE PTR es:[edi],al
  421fa3:	dec    ebp
  421fa4:	mov    ebx,0xcad0452e
  421fa9:	xchg   esp,eax
  421faa:	neg    DWORD PTR [esi+0x27]
  421fad:	push   ds
  421fae:	out    dx,eax
  421faf:	add    ch,cl
  421fb1:	test   ebp,ebx
  421fb3:	sbb    edx,esi
  421fb5:	neg    BYTE PTR [eax+0x25]
  421fb8:	retf   
  421fb9:	sbb    ch,dl
  421fbb:	std    
  421fbc:	xchg   edi,eax
  421fbd:	inc    eax
  421fbe:	fadd   DWORD PTR [edi-0x13022ac8]
  421fc4:	mov    ah,0xb8
  421fc6:	jecxz  0x422019
  421fc8:	data16 out dx,al
  421fca:	xor    bh,BYTE PTR [edx-0x12b3a335]
  421fd0:	pop    edi
  421fd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fd2:	lods   al,BYTE PTR ds:[esi]
  421fd3:	jg     0x42204a
  421fd5:	sti    
  421fd6:	or     eax,0x9c57bf72
  421fdb:	out    dx,eax
  421fdc:	xor    eax,0xa5dfd14
  421fe1:	test   eax,0xfd122c89
  421fe6:	mov    ecx,0x8d23ed0e
  421feb:	adc    esp,0x4d8c5d49
  421ff1:	das    
  421ff2:	sar    BYTE PTR [eax+0x5d],0x70
  421ff6:	inc    edi
  421ff7:	sub    ah,dl
  421ff9:	sbb    dl,BYTE PTR [eax+0x7605575b]
  421fff:	push   edi
  422000:	adc    al,0x94
  422002:	xchg   BYTE PTR [ecx-0x769849aa],ch
  422008:	ins    DWORD PTR es:[edi],dx
  422009:	ficom  DWORD PTR [ecx+0x29ef32d7]
  42200f:	and    al,BYTE PTR [ebp-0x27]
  422012:	xchg   ebp,eax
  422013:	pop    esp
  422014:	pop    ebx
  422015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422016:	jg     0x42202d
  422018:	inc    ebx
  422019:	std    
  42201a:	pop    esp
  42201b:	daa    
  42201c:	jnp    0x421ff5
  42201e:	xchg   edx,eax
  42201f:	dec    esi
  422020:	fsubr  st,st(0)
  422022:	out    0xad,eax
  422024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422025:	icebp  
  422026:	add    BYTE PTR [esp+ecx*8],bl
  422029:	or     bh,cl
  42202b:	mov    eax,0x65f7e65d
  422030:	dec    esi
  422031:	mov    ebp,0x8018d683
  422036:	es pop ebp
  422038:	cmovno ecx,DWORD PTR [edx+ebp*1+0x34acc506]
  422040:	or     cl,BYTE PTR [eax]
  422042:	(bad)  
  422043:	push   cs
  422044:	or     ah,BYTE PTR ds:0xa2e04aca
  42204a:	mov    WORD PTR [edx],gs
  42204c:	mov    esp,0xa2ac5a96
  422051:	repz retf 0x4ecb
  422055:	int    0x37
  422057:	in     eax,dx
  422058:	popf   
  422059:	mov    ebp,DWORD PTR [edi]
  42205b:	mov    ds:0x308d61b6,al
  422060:	out    0x6c,al
  422062:	or     bh,BYTE PTR [edi-0x4c]
  422065:	ja     0x42206b
  422067:	mov    al,cs:0xe44726f2
  42206d:	ja     0x4220d9
  42206f:	(bad)  
  422070:	dec    ecx
  422071:	mov    al,ds:0x24e2e43e
  422076:	arpl   WORD PTR [ebx-0xe48035c],dx
  42207c:	fwait
  42207d:	mov    bh,0xd
  42207f:	std    
  422080:	repnz mov ?,WORD PTR [eax+0x48517d95]
  422087:	retf   
  422088:	retf   0xb54e
  42208b:	and    al,0xc9
  42208d:	popa   
  42208e:	stc    
  42208f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422090:	addr16 mov ch,0x99
  422093:	stos   BYTE PTR es:[edi],al
  422094:	cmp    cl,ch
  422096:	jp     0x4220e2
  422098:	push   eax
  422099:	pop    ebp
  42209a:	push   0x6b0da38a
  42209f:	push   0xa659c424
  4220a4:	inc    edx
  4220a5:	push   cs
  4220a6:	inc    ebx
  4220a7:	jge    0x422050
  4220a9:	pop    esi
  4220aa:	push   ecx
  4220ab:	cmp    al,0x39
  4220ad:	(bad)  
  4220ae:	pop    ecx
  4220af:	or     DWORD PTR [ecx-0x68c63c90],0x661c93dc
  4220b9:	adc    DWORD PTR [ecx-0x3b6473e5],ebx
  4220bf:	jb     0x4220ef
  4220c1:	mov    dl,dl
  4220c3:	mov    esi,0x928fe14
  4220c8:	sbb    DWORD PTR [edi-0xe],0xef9d30d7
  4220cf:	add    esp,DWORD PTR [edx]
  4220d1:	or     eax,eax
  4220d3:	sti    
  4220d4:	sbb    BYTE PTR [edx+edi*8+0x7428bb5e],dh
  4220db:	pop    ebx
  4220dc:	mov    dh,0x2
  4220de:	rcr    BYTE PTR [eax+0x4],0xc
  4220e2:	and    eax,0xe8f35ba4
  4220e7:	xor    al,al
  4220e9:	or     edi,edi
  4220eb:	inc    ebx
  4220ec:	test   ch,al
  4220ee:	aas    
  4220ef:	fucomi st,st(0)
  4220f1:	jge    0x42212a
  4220f3:	sub    ebp,edi
  4220f5:	xor    eax,DWORD PTR [eax-0x59d533d4]
  4220fb:	push   esi
  4220fc:	call   0x58564b28
  422101:	mov    dh,0xfc
  422103:	push   0x32344dee
  422108:	inc    esi
  422109:	sub    bl,BYTE PTR [ebp+0x17968256]
  42210f:	int    0x56
  422111:	dec    ecx
  422112:	xor    ch,BYTE PTR [esi]
  422114:	cli    
  422115:	lods   al,BYTE PTR ds:[esi]
  422116:	stos   DWORD PTR es:[edi],eax
  422117:	and    edi,DWORD PTR [edi-0x1821fccf]
  42211d:	cld    
  42211e:	(bad)  
  42211f:	test   al,0xb6
  422121:	cld    
  422122:	mov    ch,0xa6
  422124:	sbb    ah,cl
  422126:	xchg   esi,eax
  422127:	add    eax,0xa0a46cd9
  42212c:	out    dx,al
  42212d:	sub    BYTE PTR [ebx],bl
  42212f:	add    ch,ch
  422131:	enter  0x4666,0xd5
  422135:	cmp    ebp,DWORD PTR [eax]
  422137:	jae    0x422168
  422139:	and    BYTE PTR [bp+si],dl
  42213c:	mov    edi,0xc9452c27
  422141:	adc    BYTE PTR [esi-0x44],bl
  422144:	lea    esi,[edx+0x61a73f98]
  42214a:	(bad)  [edi+0x78d7ce76]
  422150:	dec    edi
  422151:	sbb    al,0xf5
  422153:	sti    
  422154:	sub    DWORD PTR [eax-0x37549515],edi
  42215a:	cdq    
  42215b:	sub    ah,cl
  42215d:	mov    ch,0x22
  42215f:	ins    DWORD PTR es:[edi],dx
  422160:	out    dx,al
  422161:	aaa    
  422162:	inc    esp
  422163:	sub    BYTE PTR [ebx],ch
  422165:	lock inc ecx
  422167:	xchg   esp,eax
  422168:	lods   eax,DWORD PTR ds:[esi]
  422169:	repnz aas 
  42216b:	mov    ds:0xa5645499,al
  422170:	and    esi,esi
  422172:	xor    DWORD PTR [ebp+0x62],ebx
  422175:	inc    ecx
  422176:	push   cs
  422177:	jg     0x422166
  422179:	jle    0x422197
  42217b:	sti    
  42217c:	imul   DWORD PTR [edi+0x99e8b1e]
  422182:	cmp    DWORD PTR [eax-0x1e],ebx
  422185:	xor    ebx,DWORD PTR [ebx+0x6c]
  422188:	xchg   ebp,eax
  422189:	rcl    eax,1
  42218b:	pusha  
  42218c:	(bad)  
  42218d:	int    0x67
  42218f:	pop    esi
  422190:	mov    al,0x6c
  422192:	inc    ecx
  422193:	mov    edx,0x3fb28666
  422198:	sbb    BYTE PTR [ebp+0x6c7d618d],0x21
  42219f:	inc    ecx
  4221a0:	dec    ebx
  4221a1:	sub    BYTE PTR [esi],cl
  4221a3:	lods   eax,DWORD PTR ds:[esi]
  4221a4:	or     BYTE PTR [ebx],bl
  4221a6:	lods   eax,DWORD PTR ds:[esi]
  4221a7:	or     eax,0xc054f9b8
  4221ac:	cmp    edx,DWORD PTR [edx-0x4cc286e0]
  4221b2:	xor    eax,0x42b7b303
  4221b8:	pushf  
  4221b9:	add    ecx,DWORD PTR [ebx-0x7af61dc2]
  4221bf:	adc    DWORD PTR [ecx-0x246e5eaa],esp
  4221c5:	sbb    BYTE PTR [ecx],dl
  4221c7:	and    DWORD PTR [eax-0x6d],edi
  4221ca:	and    ch,cl
  4221cc:	xchg   esi,eax
  4221cd:	dec    ebp
  4221ce:	das    
  4221cf:	rol    bh,cl
  4221d1:	mov    ch,0x57
  4221d3:	xor    eax,0xbcebd246
  4221d8:	inc    ebp
  4221d9:	inc    esi
  4221da:	mov    al,ds:0x5b9f868d
  4221df:	pusha  
  4221e0:	loopne 0x4221f9
  4221e2:	push   es
  4221e3:	nop
  4221e4:	retf   0x8130
  4221e7:	data16 icebp 
  4221e9:	mov    bl,0x9
  4221eb:	sbb    al,0x87
  4221ed:	(bad)  
  4221ee:	lods   al,BYTE PTR ds:[esi]
  4221ef:	jle    0x42226a
  4221f1:	cld    
  4221f2:	mov    esp,0x5f74bca9
  4221f7:	jns    0x422252
  4221f9:	cdq    
  4221fa:	ins    BYTE PTR es:[edi],dx
  4221fb:	outs   dx,BYTE PTR ds:[esi]
  4221fc:	jl     0x422276
  4221fe:	dec    esi
  4221ff:	push   0x45
  422201:	or     eax,0xa4ee6749
  422206:	mov    al,ds:0x3e3753fc
  42220b:	fs lock cmp ebp,ecx
  42220f:	loope  0x422202
  422211:	loopne 0x42226c
  422213:	repnz cmp DWORD PTR [ebx+0x3f57e479],0x7
  42221b:	cli    
  42221c:	sub    BYTE PTR [ebp-0x4f24aa59],bh
  422222:	imul   edx,eax,0xffffff95
  422225:	mov    edi,0x387ad4d0
  42222a:	cli    
  42222b:	out    0xa8,al
  42222d:	ja     0x4221fd
  42222f:	mov    gs,WORD PTR [ebx+0x2b11eb81]
  422235:	ins    DWORD PTR es:[edi],dx
  422236:	std    
  422237:	adc    eax,0x2b4d8d5a
  42223c:	push   cs
  42223d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42223e:	mov    edx,0xf3e22811
  422243:	cmp    edx,DWORD PTR [edx+0x5b]
  422246:	icebp  
  422247:	jecxz  0x4222c1
  422249:	mov    cl,0x97
  42224b:	mov    esi,0x20856ab9
  422250:	adc    al,0x25
  422252:	pop    edi
  422253:	arpl   cx,sp
  422255:	out    0xab,eax
  422257:	push   sp
  422259:	jnp    0x422252
  42225b:	adc    al,0x56
  42225d:	repz push edi
  42225f:	inc    eax
  422260:	hlt    
  422261:	sbb    DWORD PTR ds:0xcb057f20,0xffffffdb
  422268:	sub    al,0x4b
  42226a:	mov    edi,0xe394961d
  42226f:	mov    esi,DWORD PTR [eax+0x7a]
  422272:	xchg   esp,eax
  422273:	sub    DWORD PTR [ebx+0x30],esi
  422276:	xchg   ebp,eax
  422277:	lods   eax,DWORD PTR ds:[esi]
  422278:	(bad)  
  42227a:	imul   edi,eax,0x7fe3bdc2
  422280:	add    BYTE PTR [ebp+eax*8-0x27],dh
  422284:	retf   0xbeff
  422287:	and    dh,BYTE PTR [edi+0xd]
  42228a:	cmp    ebp,edx
  42228c:	jbe    0x422240
  42228e:	ss cli 
  422290:	adc    edx,DWORD PTR [ebx+0x413bbeb2]
  422296:	sub    BYTE PTR [eax],bh
  422298:	sar    DWORD PTR [esi+0x3fb8509f],cl
  42229e:	mov    edx,0x773983bc
  4222a3:	sbb    ch,dh
  4222a5:	(bad)  
  4222a6:	sub    al,0x7e
  4222a8:	iret   
  4222a9:	and    DWORD PTR [eax+ebp*2-0x72],edi
  4222ad:	sub    BYTE PTR [ebx+0xd3b162c],0xc5
  4222b4:	retf   
  4222b5:	call   0x8b1a0643
  4222ba:	ror    BYTE PTR [esi],cl
  4222bc:	lods   al,BYTE PTR ds:[esi]
  4222bd:	mov    ds:0x30ec4faf,al
  4222c2:	test   DWORD PTR [edi+0x66],ebx
  4222c5:	or     BYTE PTR [edi+ebp*1+0x5a2f4c78],bl
  4222cc:	fadd   DWORD PTR [edx+esi*2]
  4222cf:	add    BYTE PTR [edx-0x7cef05b],cl
  4222d5:	lods   al,BYTE PTR ds:[esi]
  4222d6:	stos   DWORD PTR es:[edi],eax
  4222d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222d8:	fisubr WORD PTR [edx+0x3777beed]
  4222de:	mov    BYTE PTR [edx],bh
  4222e0:	ja     0x42234b
  4222e2:	adc    bh,dl
  4222e4:	call   0x69bd:0x7507fb06
  4222eb:	jae    0x42236c
  4222ed:	mov    al,0xd7
  4222ef:	cs jbe 0x4222fc
  4222f2:	test   eax,0x806e8b1
  4222f7:	scas   al,BYTE PTR es:[edi]
  4222f8:	loope  0x4222cc
  4222fa:	push   eax
  4222fb:	dec    ecx
  4222fc:	nop
  4222fd:	call   DWORD PTR [ecx+eiz*8+0x61]
  422301:	ror    al,1
  422303:	push   0xd26eef17
  422308:	mov    ecx,0x99ae1b36
  42230d:	jp     0x422374
  42230f:	(bad)  
  422310:	loope  0x4222f2
  422312:	fist   WORD PTR [esi-0x35]
  422315:	mov    ds:0x9a98006b,al
  42231a:	lea    ebx,[ebx]
  42231c:	out    0xb7,al
  42231e:	lods   eax,DWORD PTR ds:[esi]
  42231f:	cmp    eax,0x53493d6b
  422324:	and    dl,ah
  422326:	call   FWORD PTR [esi+0x462210eb]
  42232c:	pop    esp
  42232d:	into   
  42232e:	mov    ch,0x2e
  422330:	jecxz  0x42233c
  422332:	imul   esp,DWORD PTR [esi+ecx*2-0x30],0x97e0844b
  42233a:	mov    DWORD PTR [edi-0x3716a1fd],0xa956f17e
  422344:	push   0x68291865
  422349:	loope  0x422398
  42234b:	xchg   esp,eax
  42234c:	mov    cl,0x9d
  42234e:	fsubr  st,st(6)
  422350:	aad    0x14
  422352:	sbb    cl,bl
  422354:	mov    edx,0xee4f74ee
  422359:	jb     0x42237a
  42235b:	(bad)  
  42235c:	popf   
  42235d:	pop    ds
  42235e:	add    BYTE PTR [eax+0x15],bl
  422361:	test   eax,0x178b42f4
  422366:	push   eax
  422367:	sbb    al,0x99
  422369:	addr16 clc 
  42236b:	shr    ebp,1
  42236d:	mov    ch,BYTE PTR [ecx+esi*8]
  422370:	lods   al,BYTE PTR ds:[esi]
  422371:	mov    dh,BYTE PTR [ebp+0x52]
  422374:	cld    
  422375:	in     eax,dx
  422376:	or     al,0xca
  422378:	ret    0xc01e
  42237b:	fs mov dh,ah
  42237e:	and    BYTE PTR [ebp+0x32],0xb2
  422382:	adc    bl,BYTE PTR [edx]
  422384:	inc    edi
  422385:	dec    ebx
  422386:	cld    
  422387:	pop    ebx
  422388:	js     0x4223af
  42238a:	mov    WORD PTR [edx+0x415cd4ac],cs
  422390:	push   ecx
  422391:	xor    esp,ebx
  422393:	data16 cmp BYTE PTR [esi],cl
  422396:	sahf   
  422397:	mov    dl,0x49
  422399:	pop    ebx
  42239a:	mov    esi,0xf5ae74d8
  42239f:	inc    ebx
  4223a0:	sbb    BYTE PTR fs:[ecx],cl
  4223a3:	(bad)  
  4223a4:	mov    ch,0x66
  4223a6:	ins    DWORD PTR es:[edi],dx
  4223a7:	not    DWORD PTR [ebx-0x7c802c96]
  4223ad:	lods   al,BYTE PTR ds:[esi]
  4223ae:	push   es
  4223af:	xchg   ecx,eax
  4223b0:	cwde   
  4223b1:	out    dx,al
  4223b2:	sahf   
  4223b3:	scas   eax,DWORD PTR es:[edi]
  4223b4:	cmp    DWORD PTR [ecx-0x5422310],esi
  4223ba:	dec    edx
  4223bb:	adc    al,0x49
  4223bd:	dec    ebp
  4223be:	imul   ebp,DWORD PTR [edi-0x29],0x8e649abd
  4223c5:	adc    DWORD PTR [ecx-0x55d1b39],0xfffffffc
  4223cc:	xchg   ecx,eax
  4223cd:	mov    ecx,DWORD PTR [ebx]
  4223cf:	out    dx,eax
  4223d0:	out    dx,al
  4223d1:	jmp    0x7e0:0x85212068
  4223d8:	dec    ebx
  4223d9:	adc    dh,BYTE PTR [ebx+0x49]
  4223dc:	lea    esp,[edx+eax*8-0x7809c149]
  4223e3:	inc    edi
  4223e4:	push   0xffffffaa
  4223e6:	stos   BYTE PTR es:[edi],al
  4223e7:	test   eax,0xdf34828a
  4223ec:	inc    edi
  4223ed:	(bad)  
  4223ee:	xchg   ebp,eax
  4223ef:	(bad)  
  4223f0:	mov    cl,0x3f
  4223f2:	pop    ds
  4223f3:	cli    
  4223f4:	fstp   TBYTE PTR [ecx+0x72239170]
  4223fa:	mov    ebp,0x26d7fe83
  4223ff:	jmp    0xdb34:0xb2e118ff
  422406:	or     ebp,DWORD PTR [edi]
  422408:	call   0x9bf34ee9
  42240d:	iret   
  42240e:	fnstcw WORD PTR [ebx+0x54]
  422411:	ja     0x422398
  422413:	push   ebx
  422414:	xor    ecx,ebp
  422416:	mov    ebp,0x96d06879
  42241b:	push   ebp
  42241c:	mov    esp,ebp
  42241e:	ret    0x9ffc
  422421:	std    
  422422:	outs   dx,BYTE PTR ds:[esi]
  422423:	fst    DWORD PTR [ebx-0x47c920d7]
  422429:	push   edx
  42242a:	mov    dl,0xe4
  42242c:	aam    0x75
  42242e:	xor    al,0x3a
  422430:	sub    DWORD PTR [edx-0x28],ebp
  422433:	sar    BYTE PTR [edx+edx*1-0x14616bee],cl
  42243a:	jecxz  0x4223c7
  42243c:	lea    edi,[edi+0x31]
  42243f:	push   es
  422440:	jnp    0x4224b4
  422442:	xchg   ebp,eax
  422443:	inc    ebx
  422444:	push   ds
  422445:	cmp    ch,BYTE PTR [esi-0x2d9ecf92]
  42244b:	or     al,0x8
  42244d:	(bad)  
  42244f:	ds pop edx
  422451:	and    BYTE PTR [esi],dh
  422453:	xchg   ebx,eax
  422454:	inc    edi
  422455:	int    0xe7
  422457:	jnp    0x4224d6
  422459:	push   eax
  42245a:	data16 out 0xef,al
  42245d:	cmp    ch,BYTE PTR [ecx+0x2e6315]
  422463:	daa    
  422464:	fistp  WORD PTR [ecx+0x3f]
  422467:	mov    bl,0x7a
  422469:	outs   dx,BYTE PTR ds:[esi]
  42246a:	(bad)  
  42246c:	arpl   WORD PTR [edx-0x7],ax
  42246f:	cli    
  422470:	test   BYTE PTR [edi-0x31],cl
  422473:	xchg   edi,eax
  422474:	jo     0x4224cd
  422476:	mov    dh,0xac
  422478:	sub    eax,0xe1d37499
  42247d:	adc    al,0xae
  42247f:	loopne 0x4224bc
  422481:	icebp  
  422482:	sbb    DWORD PTR [ecx-0x48d2ed],edi
  422488:	repnz cli 
  42248a:	mov    ds,WORD PTR [esi+0x5c5f71d9]
  422490:	mov    cl,0xe4
  422492:	and    DWORD PTR [edx+ebp*1+0x44069540],ecx
  422499:	leave  
  42249a:	test   BYTE PTR [ecx],cl
  42249c:	push   0xb01d5a5
  4224a1:	push   edx
  4224a2:	cmp    esi,ecx
  4224a4:	(bad)  
  4224a5:	xor    esi,DWORD PTR gs:[esi]
  4224a8:	int3   
  4224a9:	inc    eax
  4224aa:	in     al,0xaa
  4224ac:	icebp  
  4224ad:	mov    ebx,DWORD PTR [ecx]
  4224af:	adc    al,0x11
  4224b1:	pop    ss
  4224b2:	daa    
  4224b3:	lahf   
  4224b4:	pop    ss
  4224b5:	and    DWORD PTR [esi-0x26],esp
  4224b8:	pushw  ss
  4224ba:	mov    edx,0xdd8bb76b
  4224bf:	jmp    0xf71222cc
  4224c4:	mov    ch,0x45
  4224c6:	xor    BYTE PTR [ebp+0x22c8e12e],cl
  4224cc:	ror    BYTE PTR [edx+0x118e7dbb],0x9a
  4224d3:	ins    DWORD PTR es:[edi],dx
  4224d4:	arpl   WORD PTR [ebp+0x320162d],bx
  4224da:	enter  0x650f,0x1b
  4224de:	xor    ebx,DWORD PTR [ecx+eiz*4]
  4224e1:	dec    ebx
  4224e2:	(bad)  
  4224e3:	lock cmp bh,bh
  4224e6:	xor    BYTE PTR [edi-0x5f],bh
  4224e9:	sbb    ebp,DWORD PTR [esi+0x38]
  4224ec:	outs   dx,DWORD PTR ds:[esi]
  4224ed:	sub    al,0x45
  4224ef:	scas   al,BYTE PTR es:[edi]
  4224f0:	addr16 sbb eax,0x59bc43fa
  4224f6:	jg     0x422506
  4224f8:	and    eax,edi
  4224fa:	mov    al,0xaf
  4224fc:	sbb    BYTE PTR [ecx+ebx*8-0x740ac9ac],al
  422503:	(bad)  
  422504:	jb     0x42253d
  422506:	leave  
  422507:	add    ch,0x3c
  42250a:	or     ah,BYTE PTR [ecx]
  42250c:	push   cs
  42250d:	fisttp QWORD PTR [edx+0x7e]
  422510:	ins    BYTE PTR es:[edi],dx
  422511:	lods   al,BYTE PTR ds:[esi]
  422512:	daa    
  422513:	pop    esp
  422514:	xor    al,0x26
  422516:	mov    ss,WORD PTR [ebx]
  422518:	mov    ds:0x88bea5d5,al
  42251d:	popa   
  42251e:	repnz (bad) 
  422520:	adc    eax,0x554f291
  422525:	xchg   DWORD PTR [edi+eiz*8],esp
  422528:	dec    esp
  422529:	dec    ecx
  42252a:	icebp  
  42252b:	add    cl,BYTE PTR [ecx-0x5a69d4a7]
  422531:	loope  0x4224f5
  422533:	pop    ss
  422534:	leave  
  422535:	mov    ds:0x85ae439d,al
  42253a:	sbb    ch,BYTE PTR [eax-0x79cb8089]
  422540:	cdq    
  422541:	mov    esp,0x11279010
  422546:	das    
  422547:	cmp    DWORD PTR [edi-0x72],0xf
  42254b:	mov    ds:0xc6648ec8,eax
  422550:	push   0x636ff1c7
  422555:	dec    eax
  422556:	imul   ecx,DWORD PTR [edx-0x55],0x15
  42255a:	xor    al,0x85
  42255c:	dec    esi
  42255d:	(bad)  
  42255e:	lock xchg edi,eax
  422560:	repz popa 
  422562:	mov    esi,0x2df6eff4
  422567:	fsubr  QWORD PTR [ebp+0x2e2b0ee5]
  42256d:	mov    DWORD PTR [ebx],edi
  42256f:	mov    ebx,0x5ad1a0e4
  422574:	or     eax,0x3e9d6604
  422579:	fucomi st,st(1)
  42257b:	sub    eax,0x907101df
  422580:	out    0xa5,eax
  422582:	adc    edx,DWORD PTR [esi]
  422584:	ss ja  0x4225b6
  422587:	ffreep st(2)
  422589:	xor    esi,DWORD PTR [edi]
  42258b:	mov    esp,ebp
  42258d:	dec    esi
  42258e:	pop    edx
  42258f:	mov    esi,0xfb2b5a68
  422594:	iret   
  422595:	es ja  0x4225dc
  422598:	les    edx,FWORD PTR [ecx+0x1f]
  42259b:	mov    esp,0xce3a643d
  4225a0:	clc    
  4225a1:	sbb    al,0xc5
  4225a3:	ja     0x4225ea
  4225a5:	fild   DWORD PTR [eax+0x33a821f2]
  4225ab:	adc    DWORD PTR [ecx-0x64],ebx
  4225ae:	sahf   
  4225af:	sar    DWORD PTR [edi],1
  4225b1:	mov    ebx,0x30c0782
  4225b6:	test   al,0xcf
  4225b8:	test   DWORD PTR [edi-0xd36910e],esi
  4225be:	mov    ecx,0xe8329fa3
  4225c3:	mov    WORD PTR [eax-0x74],gs
  4225c6:	out    0x87,eax
  4225c8:	(bad)  [ebp+0x519e470d]
  4225ce:	xor    ch,BYTE PTR [edx]
  4225d0:	jno    0x4225c6
  4225d2:	adc    BYTE PTR [esi+0x54],al
  4225d5:	fs sub eax,0x504689d5
  4225db:	cld    
  4225dc:	sub    edi,esp
  4225de:	sbb    DWORD PTR [edi+0x36],esi
  4225e1:	inc    edi
  4225e2:	sbb    eax,0x8f73da56
  4225e7:	dec    ecx
  4225e8:	aas    
  4225e9:	rol    ebp,0xc1
  4225ec:	call   0xd1e6:0x6d0082f5
  4225f3:	sbb    al,0xba
  4225f5:	lahf   
  4225f6:	loop   0x42260d
  4225f8:	add    cl,BYTE PTR [edi]
  4225fa:	pop    eax
  4225fb:	lods   al,BYTE PTR ds:[esi]
  4225fc:	dec    edi
  4225fd:	jg     0x422624
  4225ff:	cmp    ah,BYTE PTR [ebx-0x2f]
  422602:	and    ebx,DWORD PTR [eax]
  422604:	jle    0x4225c7
  422606:	gs iret 
  422608:	pop    ebp
  422609:	lods   al,BYTE PTR ds:[esi]
  42260a:	mov    eax,ds:0x8b22763
  42260f:	out    dx,al
  422610:	aad    0x31
  422612:	jae    0x42259e
  422614:	lods   al,BYTE PTR ds:[esi]
  422615:	sti    
  422616:	jmp    DWORD PTR ss:[ecx-0x3e583dfc]
  42261d:	mov    esp,0x6ff494e8
  422622:	adc    al,0xf3
  422624:	fnstcw WORD PTR [esi+eiz*8+0x33]
  422628:	pop    esi
  422629:	sahf   
  42262a:	iret   
  42262b:	loope  0x422603
  42262d:	lods   al,BYTE PTR ds:[esi]
  42262e:	mov    ebp,0xebec749b
  422633:	dec    esi
  422634:	cmovb  esp,DWORD PTR [esi]
  422637:	nop
  422638:	and    BYTE PTR [eax],dh
  42263a:	pop    ecx
  42263b:	mov    esi,0x9a0df609
  422641:	xor    bl,BYTE PTR [ebx+0x7409960c]
  422647:	(bad)  
  422648:	cwde   
  422649:	cli    
  42264a:	sub    BYTE PTR [edi+0x3a76a2c7],bh
  422650:	jg     0x42265c
  422652:	inc    esp
  422653:	popf   
  422654:	jge    0x422615
  422656:	psubusw mm0,QWORD PTR [ebx+0x77]
  42265a:	add    eax,0xc618c201
  42265f:	into   
  422660:	adc    al,0xc5
  422662:	fwait
  422663:	dec    eax
  422664:	sbb    eax,0x347aebc9
  422669:	xchg   DWORD PTR [edx+0x64559903],esi
  42266f:	into   
  422670:	clc    
  422671:	stos   BYTE PTR es:[edi],al
  422672:	push   ecx
  422673:	cmp    dl,bl
  422675:	or     DWORD PTR [edx],ebp
  422677:	add    eax,0x5e6e85e6
  42267c:	sti    
  42267d:	daa    
  42267e:	add    DWORD PTR cs:[edx-0x2010cea4],0x691bab16
  422689:	or     DWORD PTR [edi-0x6597428b],edx
  42268f:	ret    
  422690:	mov    ss,WORD PTR [ebp+0xe]
  422693:	jmp    0x4226b6
  422695:	pop    esi
  422696:	add    bh,al
  422698:	xlat   BYTE PTR ds:[ebx]
  422699:	gs fwait
  42269b:	sbb    al,0x23
  42269d:	scas   eax,DWORD PTR es:[edi]
  42269e:	arpl   WORD PTR [edi+0x17cf232c],bx
  4226a4:	xor    al,0xe
  4226a6:	scas   eax,DWORD PTR es:[edi]
  4226a7:	or     DWORD PTR [ecx],edi
  4226a9:	jns    0x4226fa
  4226ab:	add    edi,DWORD PTR [eax+0x34]
  4226ae:	mov    dh,0x96
  4226b0:	push   ds
  4226b1:	push   ebx
  4226b2:	lahf   
  4226b3:	int    0x7a
  4226b5:	xlat   BYTE PTR ds:[ebx]
  4226b6:	jae    0x422671
  4226b8:	retf   0x11aa
  4226bb:	pop    es
  4226bc:	cmp    esp,DWORD PTR [eax-0x12]
  4226bf:	nop
  4226c0:	nop
  4226c1:	sbb    bh,bh
  4226c3:	iret   
  4226c4:	neg    DWORD PTR [ecx+0x31559471]
  4226ca:	xor    esp,DWORD PTR [ebp-0x74]
  4226cd:	or     eax,esi
  4226cf:	mov    al,0x1c
  4226d1:	popf   
  4226d2:	jb     0x42266d
  4226d4:	fsubr  QWORD PTR [ebx]
  4226d6:	xchg   esi,eax
  4226d7:	pop    edi
  4226d8:	pop    edx
  4226d9:	pusha  
  4226da:	jo     0x4226a2
  4226dc:	test   eax,0x9c916356
  4226e1:	adc    eax,ecx
  4226e3:	repz cmp DWORD PTR [ebx-0x7bf8105d],0xa3c4533
  4226ee:	outs   dx,BYTE PTR ds:[esi]
  4226ef:	jl     0x42271f
  4226f1:	or     BYTE PTR cs:[eax+0x59],bh
  4226f5:	(bad)  
  4226f6:	fcmovnbe st,st(0)
  4226f8:	pop    esp
  4226f9:	je     0x422773
  4226fb:	xor    eax,0x4793c466
  422700:	stos   BYTE PTR es:[edi],al
  422701:	aaa    
  422702:	and    DWORD PTR ds:0x417582c1,eax
  422708:	xor    al,0x1a
  42270a:	retf   0xb204
  42270d:	leave  
  42270e:	sub    al,0x0
  422710:	fadd   QWORD PTR [esp+ecx*1+0x18]
  422714:	mov    WORD PTR [ecx],fs
  422716:	addr16 fdivp st(3),st
  422719:	pop    eax
  42271a:	clc    
  42271b:	inc    ebp
  42271c:	stos   BYTE PTR es:[edi],al
  42271d:	(bad)  
  42271e:	aad    0xc9
  422720:	xchg   ecx,eax
  422721:	inc    edi
  422722:	jae    0x422709
  422724:	ret    
  422725:	inc    ebx
  422726:	pop    ebx
  422727:	mov    dh,0x26
  422729:	mov    DWORD PTR [ebx+edi*2-0x53],edi
  42272d:	out    0xa7,eax
  42272f:	mov    bh,0x13
  422731:	dec    edx
  422732:	cmc    
  422733:	cwde   
  422734:	mov    DWORD PTR [eax+0x3b],edi
  422737:	push   eax
  422738:	pop    ecx
  422739:	pop    esi
  42273a:	mov    edi,0xa5f04868
  42273f:	jnp    0x422729
  422741:	pop    ecx
  422742:	push   esi
  422743:	jae    0x42275d
  422745:	jmp    0x2a6b44d9
  42274a:	pop    ebp
  42274b:	fnstenv [eax+edx*8]
  42274e:	dec    eax
  42274f:	lds    eax,FWORD PTR [edi]
  422751:	adc    DWORD PTR [ebp-0x71],eax
  422754:	add    al,0xec
  422756:	pop    ss
  422757:	mov    ds:0xef3a00a5,eax
  42275c:	sub    al,0xae
  42275e:	mov    dh,0xa3
  422760:	dec    ebx
  422761:	test   al,0x50
  422763:	fmul   QWORD PTR gs:[esi+esi*8-0x53]
  422768:	cmp    dl,ah
  42276a:	and    BYTE PTR [eax+0x1c],0x5e
  42276e:	dec    esi
  42276f:	jg     0x422735
  422771:	out    dx,al
  422772:	out    dx,eax
  422773:	outs   dx,BYTE PTR ds:[esi]
  422774:	mov    edx,DWORD PTR [eax+0x12]
  422777:	call   FWORD PTR [ebx-0x26]
  42277a:	jmp    0x42273b
  42277c:	test   al,0xc0
  42277e:	inc    ebp
  42277f:	(bad)  
  422780:	std    
  422781:	daa    
  422782:	adc    ebx,DWORD PTR [ecx+esi*8-0x14]
  422786:	sub    dh,BYTE PTR [esi-0x217b99e6]
  42278c:	fwait
  42278d:	pop    esp
  42278e:	repz jno 0x42272e
  422791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422792:	popa   
  422793:	sar    DWORD PTR [eax],0x14
  422796:	cld    
  422797:	cwde   
  422798:	cmp    BYTE PTR [esi+0x40050a47],al
  42279e:	and    BYTE PTR [ecx],bh
  4227a0:	ret    
  4227a1:	call   0xbe8d:0x914a504c
  4227a8:	push   es
  4227a9:	outs   dx,DWORD PTR ds:[esi]
  4227aa:	cmc    
  4227ab:	gs mov esp,0xde462200
  4227b1:	mov    edx,0x983b448
  4227b6:	inc    eax
  4227b7:	out    dx,eax
  4227b8:	arpl   WORD PTR [esi],si
  4227ba:	rcl    DWORD PTR [esi+ebx*1-0x752d8bd9],0x9f
  4227c2:	out    0xe,eax
  4227c4:	xor    al,0x2f
  4227c6:	sbb    eax,DWORD PTR [eax+0x100c3453]
  4227cc:	outs   dx,DWORD PTR ds:[esi]
  4227cd:	push   ebx
  4227ce:	bnd ret 
  4227d0:	dec    edx
  4227d1:	sub    dh,bh
  4227d3:	mov    bl,BYTE PTR [ebx-0x62180c70]
  4227d9:	ds iret 
  4227db:	jle    0x4227ee
  4227dd:	sub    bl,ah
  4227df:	or     al,0x3c
  4227e1:	mov    ds:0x6f9be679,al
  4227e6:	mov    gs,WORD PTR [ecx+edi*8+0x9]
  4227ea:	xchg   ch,bl
  4227ec:	outs   dx,DWORD PTR ds:[esi]
  4227ed:	xlat   BYTE PTR ds:[ebx]
  4227ef:	data16 mov bh,0x99
  4227f2:	cmp    al,0xd9
  4227f4:	mov    esi,0x3a9c6690
  4227f9:	test   DWORD PTR [edi-0x6e],ebp
  4227fc:	mov    BYTE PTR [esi],ah
  4227fe:	test   BYTE PTR ds:0x5502514d,ah
  422804:	fidivr DWORD PTR [esi-0x71]
  422807:	xor    DWORD PTR [esi+0x23d33f4b],0xcdef9f33
  422811:	js     0x42282a
  422813:	idiv   bl
  422815:	add    DWORD PTR [esi],ebp
  422817:	aaa    
  422818:	fistp  DWORD PTR [eax]
  42281a:	or     eax,0x61c7f635
  422820:	aam    0x69
  422822:	xor    ch,BYTE PTR [ebx-0x4408206a]
  422828:	mov    WORD PTR fs:[ecx-0x38ba877c],ds
  42282f:	pop    ebp
  422830:	mov    esp,0x49680f9d
  422835:	sub    ah,BYTE PTR [edi-0x12b91cc4]
  42283b:	mov    ds:0x76a426b1,al
  422840:	mov    dh,0x64
  422842:	mov    eax,0x87040b0f
  422847:	inc    esp
  422848:	gs push cs
  42284a:	xor    BYTE PTR [edi],bh
  42284c:	call   0x77ab7827
  422851:	sub    esp,DWORD PTR [edi-0x462e79d0]
  422857:	outs   dx,DWORD PTR ds:[esi]
  422858:	addr16 or al,0x6a
  42285b:	xchg   DWORD PTR [esi+0x70],esi
  42285e:	div    BYTE PTR ds:0x2960d960
  422864:	mov    ch,0xe0
  422866:	or     cl,BYTE PTR [esi-0x67bc9365]
  42286c:	pop    edx
  42286d:	inc    eax
  42286e:	push   ds
  42286f:	sub    BYTE PTR [ebp+0x3a],dh
  422872:	outs   dx,BYTE PTR ds:[esi]
  422873:	adc    BYTE PTR [edx+esi*8+0x2a],0xce
  422878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422879:	mov    dh,0xee
  42287b:	jmp    0xd0e2:0x30c1b5e8
  422882:	pop    edx
  422883:	push   es
  422884:	adc    dh,al
  422886:	shl    ecx,0xd0
  422889:	loop   0x4228ad
  42288b:	out    0xfa,al
  42288d:	test   al,0xf1
  42288f:	add    al,0xd4
  422891:	adc    al,0x52
  422893:	sub    BYTE PTR [edx-0x2b],dl
  422896:	xchg   BYTE PTR [edi],al
  422898:	cmp    al,0x80
  42289a:	or     al,0x4c
  42289c:	push   0xdca99115
  4228a1:	sub    eax,0x671fd1e2
  4228a6:	loopne 0x42284a
  4228a8:	cmp    edi,esp
  4228aa:	mov    eax,ds:0xf4c55356
  4228af:	cmc    
  4228b0:	mov    ebx,0x38fb6704
  4228b5:	dec    ebx
  4228b6:	call   0x7ab5a8e2
  4228bb:	mov    esi,0x2ccb5bf6
  4228c0:	lahf   
  4228c1:	cmp    BYTE PTR [esi],ah
  4228c3:	mov    ds:0xdce830c2,al
  4228c8:	outs   dx,DWORD PTR ds:[esi]
  4228c9:	dec    ebx
  4228ca:	mov    ds:0xec5d96cb,al
  4228cf:	adc    DWORD PTR [ecx],0xffffffa9
  4228d2:	loope  0x4228f6
  4228d4:	push   0xc337d758
  4228d9:	hlt    
  4228da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228db:	outs   dx,DWORD PTR ds:[esi]
  4228dc:	je     0x4228f7
  4228de:	mov    gs,WORD PTR [edx]
  4228e0:	sub    eax,DWORD PTR [edx+0x1406e0b5]
  4228e6:	repz or al,0xe1
  4228e9:	mov    esp,esi
  4228eb:	mov    ch,0x3e
  4228ed:	mov    eax,ds:0x5fab2f52
  4228f2:	rol    BYTE PTR [ebx+0x65],cl
  4228f5:	inc    edx
  4228f6:	push   0xffffffd1
  4228f8:	jne    0x422956
  4228fa:	sbb    BYTE PTR [edx],al
  4228fc:	mov    dh,0x2d
  4228fe:	pop    edx
  4228ff:	xchg   esp,eax
  422900:	jp     0x4228d4
  422902:	das    
  422903:	or     DWORD PTR [ecx-0x2c05fb27],edi
  422909:	jle    0x422947
  42290b:	xchg   BYTE PTR [ecx],dl
  42290d:	adc    dl,0x6c
  422910:	mov    eax,0x9c6a5246
  422915:	fwait
  422916:	lods   eax,DWORD PTR ds:[esi]
  422917:	ja     0x42292c
  422919:	ja     0x4228f3
  42291b:	mov    eax,0xd489b834
  422920:	jo     0x42290e
  422922:	inc    DWORD PTR [ebp+0x323e73ea]
  422928:	mov    eax,0xd2d0d8c8
  42292d:	adc    al,0x28
  42292f:	daa    
  422930:	in     al,dx
  422931:	ret    0x12a
  422934:	fwait
  422935:	rcr    BYTE PTR [ebx],0x3e
  422938:	(bad)  
  422939:	inc    esi
  42293a:	pop    es
  42293b:	jl     0x42291d
  42293d:	jne    0x4228c2
  42293f:	fsub   QWORD PTR [edx+0x6f]
  422942:	cld    
  422943:	jmp    0x9c21ba12
  422948:	js     0x422903
  42294a:	push   edx
  42294b:	(bad)  
  42294c:	ss out dx,eax
  42294e:	loope  0x4228df
  422950:	add    edi,DWORD PTR [ecx+0x593f5a3c]
  422956:	jp     0x422945
  422958:	xchg   edi,eax
  422959:	push   0xffffffbb
  42295b:	jb     0x422903
  42295d:	retf   
  42295e:	sub    al,0x23
  422960:	and    eax,0x82d8e0d3
  422965:	or     dl,BYTE PTR [edx+0x29]
  422968:	hlt    
  422969:	jle    0x4229e9
  42296b:	das    
  42296c:	xchg   BYTE PTR [ecx],dh
  42296e:	int3   
  42296f:	ss jge 0x42290f
  422972:	fdivr  st(2),st
  422974:	aam    0x6e
  422976:	arpl   si,bp
  422978:	lods   al,BYTE PTR ds:[esi]
  422979:	dec    edi
  42297a:	push   ecx
  42297b:	in     al,0xd3
  42297d:	cmp    DWORD PTR [eax+0x10],0xffffffd9
  422981:	pop    ss
  422982:	in     eax,0xa0
  422984:	dec    ebx
  422985:	mov    bh,0xc
  422987:	fucomp st(4)
  422989:	jo     0x42295e
  42298b:	icebp  
  42298c:	sti    
  42298d:	iret   
  42298e:	inc    eax
  42298f:	or     cl,ah
  422991:	add    DWORD PTR [eax],0x17
  422994:	loop   0x42297a
  422996:	lahf   
  422997:	xor    bh,bh
  422999:	xor    al,0xac
  42299b:	idiv   DWORD PTR [edi+0x1f]
  42299e:	(bad)  
  42299f:	nop
  4229a0:	sbb    al,0xf8
  4229a2:	mov    al,ds:0x8cb980a6
  4229a7:	lahf   
  4229a8:	and    ecx,ebp
  4229aa:	cmp    BYTE PTR [edx+0x32b44e64],dh
  4229b0:	cli    
  4229b1:	ins    DWORD PTR es:[edi],dx
  4229b2:	out    0x4d,eax
  4229b4:	jge    0x422a13
  4229b6:	inc    edi
  4229b7:	mov    ecx,0xaade9bb1
  4229bc:	mov    eax,ds:0x21de7dea
  4229c1:	mov    WORD PTR [ecx+ebp*2+0x4c7256bf],?
  4229c8:	xlat   BYTE PTR ds:[ebx]
  4229c9:	add    DWORD PTR es:[ebp-0x53],0x1f8b40d0
  4229d1:	aaa    
  4229d2:	inc    edi
  4229d3:	(bad)  
  4229d4:	shl    BYTE PTR [edx+ebx*4],cl
  4229d7:	dec    ebp
  4229d8:	(bad)  
  4229da:	stc    
  4229db:	push   0x7ea8dbac
  4229e0:	in     eax,0xdc
  4229e2:	jo     0x422a4f
  4229e4:	(bad)  
  4229e6:	jbe    0x4229da
  4229e8:	out    0x84,al
  4229ea:	push   ds
  4229eb:	jne    0x4229c1
  4229ed:	outs   dx,DWORD PTR ds:[esi]
  4229ee:	rol    DWORD PTR [ecx],cl
  4229f0:	ret    0xeadd
  4229f3:	and    eax,0xf96e5d14
  4229f8:	out    dx,eax
  4229f9:	add    al,0x22
  4229fb:	lea    ebp,[eax-0x3b5c1ead]
  422a01:	das    
  422a02:	retf   0x9f70
  422a05:	inc    eax
  422a06:	arpl   WORD PTR [ebx-0x29],cx
  422a09:	ins    DWORD PTR es:[edi],dx
  422a0a:	jo     0x422993
  422a0c:	jns    0x422a42
  422a0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a0f:	pop    ds
  422a10:	sbb    al,0x27
  422a13:	arpl   WORD PTR [edx],bx
  422a15:	push   esp
  422a16:	in     al,0xfd
  422a18:	(bad)  
  422a19:	sub    al,0xa7
  422a1b:	imul   edi,DWORD PTR [ebx+0x2b],0x94ddc501
  422a22:	dec    esi
  422a23:	cmp    BYTE PTR [edx+0x5c595e8],al
  422a29:	xor    BYTE PTR [edx-0x3b469fab],ch
  422a2f:	sbb    al,0x55
  422a31:	mov    WORD PTR [ebx+0x62551a32],fs
  422a37:	sar    DWORD PTR [eax],0x48
  422a3a:	jne    0x422a31
  422a3c:	test   al,0xd5
  422a3e:	psubusw mm2,QWORD PTR ds:[ebp+0x12]
  422a43:	retf   
  422a44:	retf   
  422a45:	call   0x4d88:0x353a0aaf
  422a4c:	sahf   
  422a4d:	cdq    
  422a4e:	jno    0x422a47
  422a50:	mov    eax,ds:0xacb73302
  422a55:	cmp    bl,cl
  422a57:	stc    
  422a58:	adc    BYTE PTR [esi+edx*2-0x83b6cb2],bh
  422a5f:	xchg   ebx,eax
  422a60:	test   DWORD PTR [edi],ecx
  422a62:	arpl   WORD PTR [ecx+0x4de43b22],sp
  422a68:	adc    eax,0x9735f273
  422a6d:	mov    BYTE PTR [edx],0x4a
  422a70:	sbb    ebx,DWORD PTR ds:0x5eaf3304
  422a76:	call   0xbb5d100e
  422a7b:	or     esp,DWORD PTR [edx+edx*4+0x37]
  422a7f:	mov    edi,0x32f1bceb
  422a84:	lods   eax,DWORD PTR ds:[esi]
  422a85:	xor    BYTE PTR [edi],0xd1
  422a88:	mov    ch,0xfd
  422a8a:	adc    bl,dh
  422a8c:	xchg   ebx,eax
  422a8d:	mov    ebp,DWORD PTR [edx]
  422a8f:	inc    esi
  422a90:	pop    edi
  422a91:	int3   
  422a92:	arpl   WORD PTR [ecx-0x6d],sp
  422a95:	sub    eax,0xb59404fe
  422a9a:	leave  
  422a9b:	lea    ebp,[edx+edi*1+0x78e7913a]
  422aa2:	sub    cl,BYTE PTR [esi+0x3ecfea78]
  422aa8:	push   es
  422aa9:	loope  0x422a60
  422aab:	lock test ah,cl
  422aae:	sub    eax,0x7fcfa568
  422ab3:	dec    ecx
  422ab4:	fmulp  st(1),st
  422ab6:	cwde   
  422ab7:	dec    eax
  422ab8:	test   DWORD PTR [edi+ebx*8-0x334395a2],ecx
  422abf:	xchg   ebp,eax
  422ac0:	lea    esi,[ebp-0x2b]
  422ac3:	lods   eax,DWORD PTR ds:[esi]
  422ac4:	(bad)  
  422ac5:	neg    DWORD PTR [edx+0x69]
  422ac8:	repz test al,0x98
  422acb:	sbb    DWORD PTR [eax],esi
  422acd:	(bad)  
  422acf:	xchg   edi,eax
  422ad0:	pop    edi
  422ad1:	fmul   DWORD PTR [edi-0x48]
  422ad4:	ja     0x422afb
  422ad6:	push   cs
  422ad7:	sar    BYTE PTR [esi+ebp*4],1
  422ada:	add    al,BYTE PTR [eax]
  422adc:	mov    edi,0xbb44abd1
  422ae1:	xor    esi,DWORD PTR [edi]
  422ae3:	sub    BYTE PTR gs:[edx-0x10],bl
  422ae7:	int3   
  422ae8:	or     BYTE PTR [ebx],ch
  422aea:	getsec 
  422aec:	out    dx,al
  422aed:	pusha  
  422aee:	ret    0xc9d9
  422af1:	clc    
  422af2:	into   
  422af3:	(bad)  [edi]
  422af5:	and    al,0x21
  422af7:	popf   
  422af8:	imul   esi,DWORD PTR [esi-0xf3c2da2],0xffffffaf
  422aff:	das    
  422b00:	cwde   
  422b01:	test   bl,dl
  422b03:	imul   ebp,DWORD PTR [edx-0x5f],0xffffffde
  422b07:	pop    ecx
  422b08:	fisub  DWORD PTR ds:0x19785f8b
  422b0e:	scas   eax,DWORD PTR es:[edi]
  422b0f:	call   0x18a9:0x4263ddfa
  422b16:	xor    al,0x88
  422b18:	cmp    al,0x27
  422b1a:	sti    
  422b1b:	jae    0x422ad7
  422b1d:	cdq    
  422b1e:	leave  
  422b1f:	sub    ebx,DWORD PTR [edi+0x5f]
  422b22:	inc    edx
  422b23:	pop    ss
  422b24:	mov    dl,BYTE PTR [eax-0x6e]
  422b27:	cmp    edi,ecx
  422b29:	jno    0x422acc
  422b2b:	enter  0x890d,0xb3
  422b2f:	push   edi
  422b30:	call   0x2e1b55dc
  422b35:	cmp    ebx,0xb519dd46
  422b3b:	leave  
  422b3c:	test   BYTE PTR [esi],dh
  422b3e:	inc    edx
  422b3f:	daa    
  422b40:	mov    ebp,0xd743c626
  422b45:	jno    0x422b59
  422b47:	std    
  422b48:	pop    ebp
  422b49:	fcmovnb st,st(0)
  422b4b:	sub    BYTE PTR [ebp+0xf],al
  422b4e:	shr    BYTE PTR [ecx-0x28],1
  422b51:	push   edx
  422b52:	mov    al,0x9b
  422b54:	rcl    BYTE PTR [ebx+0x22],cl
  422b57:	ins    DWORD PTR es:[edi],dx
  422b58:	mov    ecx,0xf2dda3c6
  422b5d:	adc    DWORD PTR ss:[edi-0x67],ebp
  422b61:	add    esp,DWORD PTR [edi]
  422b63:	inc    eax
  422b64:	fistp  QWORD PTR [esi]
  422b66:	ficom  WORD PTR [edi-0xcfb7f1d]
  422b6c:	mov    edx,0x8421a6e0
  422b71:	adc    DWORD PTR [edx],ebx
  422b73:	loope  0x422be2
  422b75:	ret    
  422b76:	jl     0x422bbb
  422b78:	hlt    
  422b79:	mov    ebx,0xc1b67c72
  422b7e:	fisttp DWORD PTR [ecx]
  422b80:	dec    ebx
  422b81:	xchg   DWORD PTR [esi],ecx
  422b83:	push   es
  422b84:	jmp    0x422b49
  422b86:	(bad)  
  422b88:	scas   al,BYTE PTR es:[edi]
  422b89:	xchg   edx,eax
  422b8a:	test   DWORD PTR [esi+ebx*1-0x25],edx
  422b8e:	push   cs
  422b8f:	mov    esi,0x4f97734b
  422b94:	mov    DWORD PTR [ecx],edx
  422b96:	or     al,BYTE PTR [ecx-0x79]
  422b99:	mov    dl,0xc1
  422b9b:	or     al,0x86
  422b9d:	dec    edi
  422b9e:	int3   
  422b9f:	adc    DWORD PTR [edx],edi
  422ba1:	and    al,0x17
  422ba3:	jle    0x422b2e
  422ba5:	hlt    
  422ba6:	in     eax,0xdd
  422ba8:	xchg   esp,eax
  422ba9:	je     0x422bd9
  422bab:	lods   eax,DWORD PTR ds:[esi]
  422bac:	push   ds
  422bad:	xor    ecx,ebx
  422baf:	and    edi,DWORD PTR [ebx-0x3f]
  422bb2:	mov    ebx,DWORD PTR [eax-0xe]
  422bb5:	call   0x57b4b977
  422bba:	mov    ds:0xcefb65b3,eax
  422bbf:	xchg   BYTE PTR [esi-0x1d],dh
  422bc2:	adc    cl,BYTE PTR [edx]
  422bc4:	aam    0xe3
  422bc6:	cli    
  422bc7:	retf   0x45de
  422bca:	adc    esi,DWORD PTR [ecx+ebp*2+0xd]
  422bce:	mov    ch,0xa2
  422bd0:	in     al,dx
  422bd1:	cmp    al,0x5a
  422bd3:	xlat   BYTE PTR ds:[ebx]
  422bd4:	mov    dh,0x1d
  422bd6:	sahf   
  422bd7:	sti    
  422bd8:	loopne 0x422be0
  422bda:	mov    ecx,0xfbbcca44
  422bdf:	ss aad 0xee
  422be2:	adc    eax,edx
  422be4:	pop    ebx
  422be5:	push   ecx
  422be6:	jge    0x422c28
  422be8:	(bad)  
  422be9:	pop    ecx
  422bea:	cmp    cl,al
  422bec:	pop    ds
  422bed:	stc    
  422bee:	xlat   BYTE PTR ds:[ebx]
  422bef:	shl    ch,cl
  422bf1:	adc    DWORD PTR [eax],ecx
  422bf3:	inc    esp
  422bf4:	ja     0x422bac
  422bf6:	mov    dh,dl
  422bf8:	mov    edi,0xf278c59
  422bfd:	push   ebp
  422bfe:	repnz mov ebx,0xfa5c9c35
  422c04:	push   ecx
  422c05:	es das 
  422c07:	dec    ebx
  422c08:	fs mov bh,0xda
  422c0b:	sti    
  422c0c:	pop    edx
  422c0d:	ss mov ch,0x47
  422c10:	or     edi,DWORD PTR [ecx-0x168fcfb]
  422c16:	mov    ds:0x6578b8e2,al
  422c1b:	add    al,0x7e
  422c1d:	pop    edx
  422c1e:	mov    ah,0xa5
  422c20:	(bad)  
  422c21:	gs pop edx
  422c23:	out    dx,eax
  422c24:	out    0x58,al
  422c26:	repnz mov edi,DWORD PTR [ebp+0x26]
  422c2a:	sbb    edi,DWORD PTR [eax+0x3682c226]
  422c30:	cdq    
  422c31:	loop   0x422c0e
  422c33:	adc    esi,0xffffffeb
  422c36:	daa    
  422c37:	add    ah,dl
  422c39:	dec    esp
  422c3a:	cmp    ecx,esp
  422c3c:	pop    edi
  422c3d:	xchg   esi,eax
  422c3e:	jno    0x422c26
  422c40:	cmp    DWORD PTR [edi+0x4392dfac],edx
  422c46:	mov    ebx,0xc75bdd04
  422c4b:	xchg   edx,eax
  422c4c:	add    al,0xc
  422c4e:	mov    ds:0x9a372021,eax
  422c53:	push   ds
  422c54:	shl    BYTE PTR ds:0xed5d205b,1
  422c5a:	mov    ds:0xdb7800d1,eax
  422c5f:	mov    ah,0x6a
  422c62:	test   esi,edx
  422c64:	bound  eax,QWORD PTR [ecx+0x5c]
  422c67:	retf   0xc5cb
  422c6a:	sub    DWORD PTR [esi-0x13],0xffffffd0
  422c6e:	and    eax,DWORD PTR [ecx+0x15d945fa]
  422c74:	dec    ebp
  422c75:	or     dh,bh
  422c77:	push   esp
  422c78:	leave  
  422c79:	dec    ecx
  422c7a:	mov    bl,0x54
  422c7c:	neg    edx
  422c7e:	pop    esp
  422c7f:	hlt    
  422c80:	xchg   edx,eax
  422c81:	mov    ds:0xadb46b22,al
  422c86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c87:	iret   
  422c88:	sbb    eax,0x4599715d
  422c8d:	dec    esp
  422c8e:	test   DWORD PTR [esi+0x5ea7dc76],edx
  422c94:	in     eax,dx
  422c95:	lods   al,BYTE PTR ds:[esi]
  422c97:	int    0x72
  422c99:	fiadd  DWORD PTR [eax-0x56]
  422c9c:	pop    ebx
  422c9d:	stos   DWORD PTR es:[edi],eax
  422c9e:	enter  0xee41,0x37
  422ca2:	test   al,0xbf
  422ca4:	sub    DWORD PTR [edx-0x5240f0dc],edx
  422caa:	out    dx,eax
  422cab:	jp     0x422c9c
  422cad:	push   ebx
  422cae:	gs iret 
  422cb0:	rol    DWORD PTR [ebx+eiz*8-0x4099efce],0xf9
  422cb8:	mov    ecx,0xccd5ce2d
  422cbd:	sub    al,0x17
  422cbf:	push   0x11
  422cc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cc2:	stos   BYTE PTR es:[edi],al
  422cc3:	jle    0x422cbf
  422cc5:	or     eax,0xaa1036b2
  422cca:	dec    esp
  422ccb:	push   ds
  422ccc:	mov    eax,0xd3728985
  422cd1:	mov    edi,0xb201ae68
  422cd6:	aam    0x2f
  422cd8:	dec    eax
  422cd9:	push   eax
  422cda:	sar    DWORD PTR [esi+0x26ba4f7c],cl
  422ce0:	ss jbe 0x422c87
  422ce3:	jb     0x422c93
  422ce5:	mov    bl,bh
  422ce7:	xchg   ebp,eax
  422ce8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ce9:	dec    eax
  422cea:	pop    ebp
  422ceb:	push   esp
  422cec:	pop    esi
  422ced:	ret    0x6f83
  422cf0:	mov    ebx,0x6da94707
  422cf5:	sar    DWORD PTR [edx],1
  422cf7:	es in  al,dx
  422cf9:	mov    ebp,edx
  422cfb:	sbb    al,0x28
  422cfd:	mov    DWORD PTR [eax+0x73],esi
  422d00:	add    BYTE PTR [edx],cl
  422d02:	rcr    BYTE PTR [ebp+0x72],cl
  422d05:	mov    cl,0x8a
  422d07:	cld    
  422d08:	shl    BYTE PTR [ebx-0x46],0x2b
  422d0c:	pop    esp
  422d0d:	fiadd  DWORD PTR [edi+ecx*2+0x78]
  422d11:	cmc    
  422d12:	mov    eax,ds:0x37b5d863
  422d17:	and    eax,DWORD PTR [ebx]
  422d19:	dec    bh
  422d1b:	and    DWORD PTR ds:0xfb0c7177,edx
  422d21:	pusha  
  422d22:	cli    
  422d23:	out    0x72,eax
  422d25:	hlt    
  422d26:	pop    esi
  422d27:	aaa    
  422d28:	adc    esi,edx
  422d2a:	pop    esi
  422d2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d2c:	retf   0xd083
  422d2f:	call   DWORD PTR [esi-0x3b6e1cea]
  422d35:	jne    0x422d9f
  422d37:	dec    edi
  422d38:	mov    ah,BYTE PTR [esi+0x64]
  422d3b:	sar    DWORD PTR [ecx],0x68
  422d3e:	(bad)  
  422d40:	mov    edx,0xcf565ef2
  422d45:	mov    cl,0xd3
  422d47:	icebp  
  422d48:	cmp    eax,0x2fb39189
  422d4d:	adc    eax,0x9ea77ab6
  422d52:	out    dx,eax
  422d53:	rol    DWORD PTR [ecx-0x125814bd],cl
  422d59:	mov    edx,0x41c19f82
  422d5e:	jno    0x422d92
  422d60:	gs jne 0x422da4
  422d63:	or     ebx,DWORD PTR [eax+0x73]
  422d66:	mov    ah,0xc5
  422d68:	mov    gs,ebx
  422d6a:	jb     0x422ddc
  422d6c:	in     eax,dx
  422d6d:	stos   BYTE PTR es:[edi],al
  422d6e:	xor    ebp,DWORD PTR [ecx+0x1f]
  422d71:	push   edx
  422d72:	jne    0x422de5
  422d74:	mov    ebp,0xc578e29d
  422d79:	jg     0x422daf
  422d7b:	aaa    
  422d7c:	imul   ecx,DWORD PTR [esp+ebp*8+0x15],0x1f
  422d81:	push   ds
  422d82:	cmp    al,0x18
  422d84:	mov    BYTE PTR [edx-0x7d22dc02],al
  422d8a:	push   di
  422d8c:	rcr    BYTE PTR [ecx+0x43454246],0x4c
  422d93:	or     ebp,esi
  422d95:	dec    ebx
  422d96:	mov    eax,ss
  422d98:	push   es
  422d99:	push   ecx
  422d9a:	and    BYTE PTR [ebx+0x50],cl
  422d9d:	lock gs jne 0x422d2f
  422da1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422da2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422da3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422da4:	mov    ebx,DWORD PTR [ecx]
  422da6:	imul   ebx,DWORD PTR [esi+0x33],0xf79a0398
  422dad:	push   ebx
  422dae:	mov    ebx,0x271fb72c
  422db3:	push   cs
  422db4:	inc    ebp
  422db5:	pop    esp
  422db6:	push   ecx
  422db7:	push   0x33
  422db9:	push   edx
  422dba:	int3   
  422dbb:	(bad)  
  422dbc:	jge    0x422dd8
  422dbe:	sub    DWORD PTR [esi],0xffffff97
  422dc1:	sub    bl,BYTE PTR [ebp-0x1ec00340]
  422dc7:	xor    al,0x8a
  422dc9:	push   edx
  422dca:	cli    
  422dcb:	fsub   QWORD PTR [ebx-0x80]
  422dce:	jb     0x422dac
  422dd0:	pop    es
  422dd1:	pop    DWORD PTR [ebp+eiz*1+0x21]
  422dd5:	jg     0x422d73
  422dd7:	jmp    0x422dd0
  422dd9:	push   ebx
  422dda:	mov    bh,0x3d
  422ddc:	or     BYTE PTR [edi-0x1d8471f],0xc0
  422de3:	mov    ebp,0x10b9895d
  422de8:	adc    ch,bh
  422dea:	pop    edx
  422deb:	sbb    BYTE PTR [esi],al
  422ded:	in     al,0xf4
  422def:	sti    
  422df0:	loop   0x422de3
  422df2:	test   BYTE PTR [ebp-0x3e3b7cf6],bh
  422df8:	mov    cs,ebp
  422dfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422dfb:	and    ch,al
  422dfd:	mov    gs,ecx
  422dff:	addr16 xor al,0x1b
  422e02:	std    
  422e03:	inc    edx
  422e04:	lahf   
  422e05:	out    0x3d,al
  422e07:	popf   
  422e08:	aaa    
  422e09:	adc    DWORD PTR [edi-0x1c],edx
  422e0c:	bound  ebp,QWORD PTR [edx]
  422e0e:	daa    
  422e0f:	cmp    BYTE PTR [esi],bh
  422e11:	scas   eax,DWORD PTR es:[edi]
  422e12:	cmp    ah,BYTE PTR [ebp+eiz*4+0x34]
  422e16:	(bad)  [esi]
  422e18:	or     eax,0x1c4f69c5
  422e1d:	fmul   st(7),st
  422e1f:	xor    bh,BYTE PTR [eax]
  422e21:	cmp    al,0x2f
  422e23:	scas   al,BYTE PTR es:[edi]
  422e24:	push   cs
  422e25:	test   BYTE PTR ds:0xca2373c4,dh
  422e2b:	xlat   BYTE PTR ds:[ebx]
  422e2c:	les    ecx,FWORD PTR [esi]
  422e2e:	or     BYTE PTR [ebx+0x2bffd843],ah
  422e34:	add    al,0x93
  422e36:	int3   
  422e37:	or     al,0xe3
  422e39:	sbb    ecx,DWORD PTR [ebx-0x9ae40c5]
  422e3f:	ds ret 
  422e41:	jmp    0x422e52
  422e43:	adc    edx,DWORD PTR [ecx+edi*8-0x1e]
  422e47:	out    dx,eax
  422e48:	rcl    DWORD PTR [edx-0xd],1
  422e4b:	inc    ebx
  422e4c:	cmp    BYTE PTR [ebx-0x42b05368],al
  422e52:	or     al,0xd4
  422e54:	xchg   edi,eax
  422e55:	pop    ecx
  422e56:	pop    ss
  422e57:	and    BYTE PTR [ebp-0x391adfaf],dh
  422e5d:	mov    bh,BYTE PTR [edi+esi*1-0x3f643efd]
  422e64:	push   es
  422e65:	stos   DWORD PTR es:[edi],eax
  422e66:	ja     0x422e7b
  422e68:	(bad)  
  422e69:	mov    esp,0x3e6e05bc
  422e6e:	mov    dh,0x7e
  422e70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e71:	and    cl,BYTE PTR [ecx]
  422e73:	nop
  422e74:	jo     0x422ec7
  422e76:	(bad)  
  422e77:	cmp    cl,BYTE PTR [edx]
  422e79:	sahf   
  422e7a:	and    DWORD PTR [ecx],edi
  422e7c:	or     DWORD PTR [eax+edx*4+0x7b],0xe7067286
  422e84:	scas   eax,DWORD PTR es:[edi]
  422e85:	ret    0x7fe1
  422e88:	mov    ecx,0x3f696a55
  422e8d:	push   ss
  422e8e:	pop    ss
  422e8f:	push   ds
  422e90:	scas   eax,DWORD PTR es:[edi]
  422e91:	dec    ebp
  422e92:	sti    
  422e93:	mov    DWORD PTR [ecx+ebx*4+0x79b9c29b],0x4713575e
  422e9e:	retf   0x2434
  422ea1:	addr16 int 0x4a
  422ea4:	push   0xcc1f365b
  422ea9:	loope  0x422ebc
  422eab:	and    esi,eax
  422ead:	xchg   DWORD PTR [edx],edi
  422eaf:	pop    ds
  422eb0:	dec    eax
  422eb1:	push   ss
  422eb2:	lds    edx,FWORD PTR [edx-0x2622ca1]
  422eb8:	daa    
  422eb9:	sar    DWORD PTR [edx-0x31],cl
  422ebc:	dec    ecx
  422ebd:	ja     0x422e52
  422ebf:	outs   dx,BYTE PTR ds:[esi]
  422ec0:	pop    ebx
  422ec1:	dec    eax
  422ec2:	call   0x18095728
  422ec7:	and    al,0x78
  422ec9:	in     eax,0x5b
  422ecb:	lods   eax,DWORD PTR ds:[esi]
  422ecc:	xchg   ebp,eax
  422ecd:	aas    
  422ece:	add    cl,bl
  422ed0:	mov    bh,0xea
  422ed2:	jge    0x422e94
  422ed4:	xchg   edi,eax
  422ed5:	ins    BYTE PTR es:[edi],dx
  422ed6:	nop
  422ed7:	sub    DWORD PTR [ebx+0x49],esp
  422eda:	jnp    0x422f3f
  422edc:	mov    ebp,0xce5c5e6a
  422ee1:	pushf  
  422ee2:	jno    0x422e73
  422ee4:	aaa    
  422ee5:	jns    0x422e98
  422ee7:	in     eax,0x5e
  422ee9:	in     al,0x12
  422eeb:	loop   0x422e75
  422eed:	hlt    
  422eee:	mov    ch,0xb6
  422ef0:	dec    edx
  422ef1:	and    ebp,ebx
  422ef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ef4:	imul   ebx,eax,0x17
  422ef7:	jb     0x422edb
  422ef9:	mov    ds:0x2e7e3c40,al
  422efe:	outs   dx,DWORD PTR ds:[esi]
  422eff:	mov    esp,0xc9ffe908
  422f04:	xlat   BYTE PTR ds:[ebx]
  422f05:	dec    eax
  422f06:	outs   dx,BYTE PTR ds:[esi]
  422f07:	hlt    
  422f08:	daa    
  422f09:	push   esp
  422f0a:	cmp    dl,0x64
  422f0d:	pop    ebx
  422f0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f0f:	sbb    DWORD PTR [esi+0x43],esp
  422f12:	cmp    bl,BYTE PTR [eax-0x13f79f0b]
  422f18:	pop    ss
  422f19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f1a:	shr    esi,cl
  422f1c:	(bad)
  422f1f:	mov    esi,0x7cbbf60f
  422f24:	or     eax,0x518bd5db
  422f29:	or     BYTE PTR [ebx+0x37591646],dl
  422f2f:	repz inc edi
  422f31:	outs   dx,BYTE PTR ds:[esi]
  422f32:	ss push esi
  422f34:	cmp    cl,dl
  422f36:	shl    bh,1
  422f38:	rcr    DWORD PTR [ebx+0x311ac281],1
  422f3e:	(bad)  
  422f3f:	loopne 0x422f94
  422f41:	les    edi,FWORD PTR [ecx-0x43c6242b]
  422f47:	xlat   BYTE PTR ds:[ebx]
  422f48:	inc    edi
  422f49:	retf   
  422f4a:	std    
  422f4b:	mov    ebx,0x7db55c11
  422f50:	dec    DWORD PTR [edi+ebp*4]
  422f53:	pop    ds
  422f54:	jle    0x422f3a
  422f56:	pop    esi
  422f57:	loopne 0x422f05
  422f59:	sbb    DWORD PTR [edx],0xa7efe5ae
  422f5f:	jbe    0x422f05
  422f61:	adc    ah,BYTE PTR [edi+0x40361468]
  422f67:	mov    esi,DWORD PTR [ebx]
  422f69:	mov    ch,0x10
  422f6b:	pop    ebx
  422f6c:	sub    al,0x3
  422f6e:	repnz dec ecx
  422f70:	pop    edx
  422f71:	retf   0x2fc3
  422f74:	maskmovq mm1,(bad)
  422f75:	test   DWORD PTR [ecx],0x9fed8867
  422f7b:	cmp    DWORD PTR ds:0x7b0358e7,ebp
  422f81:	inc    esp
  422f82:	xchg   edx,eax
  422f83:	aaa    
  422f84:	retf   0x67da
  422f87:	mov    eax,0xa43ca5d0
  422f8c:	in     al,dx
  422f8d:	mov    bh,0x6e
  422f8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f90:	hlt    
  422f91:	and    esi,DWORD PTR [ebx+eax*8]
  422f94:	fwait
  422f95:	in     eax,dx
  422f96:	pop    esi
  422f97:	pop    ecx
  422f98:	outs   dx,DWORD PTR ds:[esi]
  422f99:	jns    0x42300e
  422f9b:	loopne 0x422ffb
  422f9d:	out    dx,al
  422f9e:	and    esp,ebp
  422fa0:	or     DWORD PTR ds:0x7a3c83f6,esi
  422fa7:	add    BYTE PTR [esp+ebp*8],dl
  422faa:	pusha  
  422fab:	bound  eax,QWORD PTR [edx-0x76c5cf97]
  422fb1:	pusha  
  422fb2:	add    DWORD PTR [ecx],ecx
  422fb4:	ss enter 0xf161,0x39
  422fb9:	js     0x422f3f
  422fbb:	addr16 jae 0x422f78
  422fbe:	test   al,0x3e
  422fc0:	int    0xe6
  422fc2:	std    
  422fc3:	sbb    ah,al
  422fc5:	mov    edx,cs
  422fc7:	scas   eax,DWORD PTR es:[edi]
  422fc8:	int    0xe1
  422fca:	retf   0xfe3d
  422fcd:	pop    esi
  422fce:	in     al,dx
  422fcf:	cld    
  422fd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fd1:	fdiv   QWORD PTR [eax-0x4324eec4]
  422fd7:	dec    ecx
  422fd8:	sbb    eax,0xa8e97224
  422fdd:	xor    BYTE PTR [ebp+eiz*8-0xa377321],bh
  422fe4:	imul   ebp,DWORD PTR ds:0x9ca01a18,0x7ead198f
  422fee:	cmp    eax,0xb40e589
  422ff3:	add    eax,0x467d5705
  422ff8:	jg     0x423014
  422ffa:	or     bh,BYTE PTR [ebx+0x68bb1494]
  423000:	daa    
  423001:	cs cmc 
  423003:	popf   
  423004:	mov    DWORD PTR [eax-0x71050fc0],ebx
  42300a:	push   ebx
  42300b:	jmp    0x8359:0x23ff1a04
  423012:	inc    edx
  423013:	rol    BYTE PTR [eax+0x4cdce31a],cl
  423019:	mov    bl,0x44
  42301b:	lock in al,0xee
  42301e:	das    
  42301f:	adc    eax,0xe9ecd172
  423024:	mov    ebx,0x89dd56a1
  423029:	leave  
  42302a:	jnp    0x4230a6
  42302c:	fcom   DWORD PTR [esi-0x69]
  42302f:	call   0xf39f:0xfd39413a
  423036:	(bad)  [edi]
  423038:	mov    dh,ah
  42303a:	dec    ecx
  42303b:	aad    0xcb
  42303d:	fdivr  QWORD PTR [ebp-0x8454458]
  423043:	mov    edi,ebx
  423045:	aas    
  423046:	mov    WORD PTR [edx+0xb0fafcc],ss
  42304c:	iret   
  42304d:	cmp    esp,ecx
  42304f:	je     0x42304b
  423051:	adc    bl,BYTE PTR [eax-0x5db3b082]
  423057:	push   ss
  423058:	add    bl,BYTE PTR [ebx+0x2e]
  42305b:	xor    esi,DWORD PTR ds:[ecx+edi*2-0x68]
  423060:	add    ch,al
  423062:	push   esp
  423063:	(bad)  
  423065:	pop    es
  423066:	sar    edi,0x32
  423069:	mov    al,ds:0x354f95ab
  42306e:	sbb    eax,0xebc64de3
  423073:	daa    
  423074:	xchg   ebp,eax
  423075:	inc    DWORD PTR [esi+0x2fe4aa3b]
  42307b:	outs   dx,BYTE PTR ds:[esi]
  42307c:	repz cmp al,0xf1
  42307f:	and    cl,bl
  423081:	fwait
  423082:	jg     0x42308f
  423084:	ins    DWORD PTR es:[edi],dx
  423085:	out    dx,eax
  423086:	pop    esi
  423087:	fcomp  st(4)
  423089:	xchg   DWORD PTR [edi+edi*1-0x497340d0],edx
  423090:	das    
  423091:	mov    edx,fs
  423093:	call   0xca78:0x2bd00fa0
  42309a:	loope  0x42306f
  42309c:	leave  
  42309d:	mov    ch,0x1d
  42309f:	sbb    eax,esi
  4230a1:	ins    BYTE PTR es:[edi],dx
  4230a2:	lods   eax,DWORD PTR ds:[esi]
  4230a3:	mov    eax,0x16660307
  4230a8:	cwde   
  4230a9:	cdq    
  4230aa:	pusha  
  4230ab:	inc    ecx
  4230ac:	aam    0x92
  4230ae:	dec    ecx
  4230af:	ret    
  4230b0:	mov    ebp,0x2dfaeced
  4230b5:	or     DWORD PTR [ebx],esi
  4230b7:	push   ecx
  4230b8:	xchg   DWORD PTR ds:0xbe387838,ebp
  4230be:	into   
  4230bf:	cmp    eax,0xd7de615d
  4230c4:	mov    al,ds:0xa7bf913f
  4230c9:	nop
  4230ca:	xchg   BYTE PTR [edx-0x33bcfe00],al
  4230d0:	cli    
  4230d1:	xor    DWORD PTR [esi+eax*8+0xe8a58f2],ecx
  4230d8:	or     dl,bl
  4230da:	je     0x42306b
  4230dc:	xor    eax,0xffffffdf
  4230df:	inc    esi
  4230e0:	jl     0x4230e7
  4230e2:	mov    al,ds:0xd686df74
  4230e7:	sub    DWORD PTR [ecx],ecx
  4230e9:	out    0xea,eax
  4230eb:	pop    esp
  4230ec:	pop    ebx
  4230ed:	test   edi,eax
  4230ef:	repz mov esi,0xa9e51461
  4230f5:	dec    edx
  4230f6:	pop    ebx
  4230f7:	pop    ds
  4230f8:	mov    ebp,0xee502c15
  4230fd:	mov    BYTE PTR [edi+0x5f4b19b2],cl
  423103:	mov    dl,0x1d
  423105:	popa   
  423106:	mov    edx,0x2401e7dc
  42310b:	sub    ebx,DWORD PTR [ebx]
  42310d:	mov    dl,0x8d
  42310f:	pop    edx
  423110:	pop    es
  423111:	jo     0x42317b
  423113:	test   DWORD PTR [ebp-0x220c0b90],0x1d347fa1
  42311d:	aad    0x74
  42311f:	std    
  423120:	repz cmp al,0x74
  423123:	push   es
  423124:	out    dx,eax
  423125:	dec    edx
  423126:	dec    esp
  423127:	gs add eax,0x5679cfae
  42312d:	dec    esi
  42312e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42312f:	xchg   ecx,eax
  423130:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423131:	adc    al,0x10
  423133:	aad    0x74
  423135:	out    dx,al
  423136:	jge    0x4230e5
  423138:	cmp    BYTE PTR [edx-0x250b63f7],bh
  42313e:	das    
  42313f:	hlt    
  423140:	push   cs
  423141:	jo     0x423130
  423143:	std    
  423144:	in     al,0x67
  423146:	xor    bh,BYTE PTR [ebp+0x27c06896]
  42314c:	sub    ebp,0x65
  42314f:	bound  eax,QWORD PTR [eax+0x5c]
  423152:	or     DWORD PTR [ebp-0x610133c8],eax
  423158:	cmp    eax,0xad9aca7
  42315d:	xchg   ebp,eax
  42315e:	push   eax
  42315f:	add    cl,BYTE PTR [ebx+edi*4+0x3892b5a1]
  423166:	int    0xfb
  423168:	arpl   WORD PTR [ebx+edx*4+0x7b48f95b],cx
  42316f:	outs   dx,BYTE PTR ds:[esi]
  423170:	out    dx,eax
  423171:	fcmovnbe st,st(2)
  423173:	pop    esi
  423174:	js     0x423156
  423176:	daa    
  423177:	(bad)  
  423178:	rcl    ch,cl
  42317a:	or     al,0x87
  42317c:	sub    al,BYTE PTR [edi-0x3aa2e01c]
  423182:	xchg   edi,eax
  423183:	push   eax
  423184:	or     ebx,edi
  423186:	mov    esi,0x4ff2c98a
  42318b:	xchg   BYTE PTR [eax-0x65de1307],cl
  423191:	sub    DWORD PTR [edx+edx*1],ebp
  423194:	pop    es
  423195:	imul   BYTE PTR [esi+0x70202499]
  42319b:	inc    esi
  42319c:	add    al,0x36
  42319e:	or     cl,ch
  4231a0:	mov    eax,ds:0xd7e71d94
  4231a5:	ror    BYTE PTR [eax],0xe6
  4231a8:	inc    ecx
  4231a9:	lea    ecx,[esi+0x14]
  4231ac:	jns    0x423135
  4231ae:	rol    DWORD PTR [ecx-0x4bc34e5],cl
  4231b4:	mov    edx,0x7d8c8f3b
  4231b9:	out    dx,eax
  4231ba:	inc    esp
  4231bb:	test   BYTE PTR [edx+0x63dc43cd],0x2
  4231c2:	retf   
  4231c3:	cmp    al,0xbd
  4231c5:	rcr    BYTE PTR [edi-0x37],cl
  4231c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231c9:	out    dx,al
  4231ca:	dec    esi
  4231cb:	inc    ebx
  4231cc:	call   0xf396:0xc6765fe
  4231d3:	or     eax,0x4fec11eb
  4231d8:	enter  0x7a38,0xd9
  4231dc:	pop    ss
  4231dd:	test   eax,0x4273c193
  4231e2:	jmp    0x423185
  4231e4:	jecxz  0x42318b
  4231e6:	jle    0x423196
  4231e8:	retf   0xbfa9
  4231eb:	jmp    0x423244
  4231ed:	imul   ebx,esp,0xdc9241cf
  4231f3:	mov    edi,0xd305ae9d
  4231f8:	sar    DWORD PTR [ecx-0x31],1
  4231fb:	fnsave [ebx+0x2789b043]
  423201:	sbb    al,0x30
  423203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423204:	jecxz  0x423241
  423206:	fdiv   QWORD PTR [esi+0x3d]
  423209:	test   cl,cl
  42320b:	fcmovnb st,st(3)
  42320d:	rol    DWORD PTR [esi-0x41],1
  423210:	cmp    eax,0x538560f4
  423215:	stos   DWORD PTR es:[edi],eax
  423216:	mov    edx,0x577e218d
  42321b:	retf   0xad23
  42321e:	push   ds
  42321f:	test   al,0xf1
  423222:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423223:	cld    
  423224:	pop    cx
  423226:	inc    eax
  423227:	aaa    
  423228:	xor    esi,DWORD PTR [ecx]
  42322a:	imul   esp,DWORD PTR [ecx],0xffffffa4
  42322d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42322e:	(bad)
  423232:	loopne 0x423216
  423234:	fdivr  DWORD PTR [ebx+0x6ec4046b]
  42323a:	add    DWORD PTR [esi+0x73687a25],edx
  423240:	addr16 lahf 
  423242:	cli    
  423243:	inc    eax
  423244:	and    edi,edx
  423246:	loop   0x42329f
  423248:	mov    ds:0x7f270077,al
  42324d:	(bad)  
  42324e:	icebp  
  42324f:	dec    ebx
  423250:	mov    dl,0xfe
  423252:	sar    ebp,cl
  423254:	or     al,0xd3
  423256:	mov    dl,0xf9
  423258:	mov    ecx,eax
  42325a:	ret    
  42325b:	int    0xe1
  42325d:	dec    ebp
  42325e:	inc    ebx
  42325f:	and    esi,DWORD PTR [ebp+ecx*1+0x852295c]
  423266:	xor    al,0x29
  423268:	jns    0x423276
  42326a:	mov    cl,0x83
  42326c:	mov    dl,0x3c
  42326e:	sub    BYTE PTR [edx+0x57d6290e],bh
  423274:	shl    DWORD PTR [edi],1
  423276:	(bad)  
  423278:	inc    esi
  423279:	pop    esp
  42327a:	jg     0x423274
  42327c:	mov    WORD PTR [ebx+ecx*1-0x1189b9d6],gs
  423283:	test   bl,cl
  423285:	test   al,0x8a
  423287:	and    eax,0x42ec4038
  42328c:	mov    esp,0x34bb3edf
  423291:	jl     0x42330d
  423293:	pop    edx
  423294:	scas   eax,DWORD PTR es:[edi]
  423295:	jmp    0xc76b:0x4fa552f5
  42329c:	dec    edi
  42329d:	fs aam 0xcf
  4232a0:	sbb    al,0x5a
  4232a2:	and    ebx,DWORD PTR [edi+0x127461ff]
  4232a8:	loop   0x423275
  4232aa:	xchg   edx,eax
  4232ab:	adc    edi,edi
  4232ad:	aas    
  4232ae:	jge    0x4232fe
  4232b0:	sub    al,0x99
  4232b2:	push   edx
  4232b3:	pop    ebx
  4232b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232b5:	in     al,dx
  4232b6:	adc    esp,DWORD PTR [edx-0x2da4f6ae]
  4232bc:	inc    ecx
  4232bd:	and    dh,BYTE PTR [ecx-0x4619c214]
  4232c3:	mov    BYTE PTR [ecx+0x7f2369ec],dh
  4232c9:	jmp    0x9797:0xbbfa2abe
  4232d0:	hlt    
  4232d1:	cdq    
  4232d2:	jbe    0x4232cb
  4232d4:	inc    esp
  4232d5:	jg     0x42326f
  4232d7:	xor    BYTE PTR [edi],dl
  4232d9:	fidiv  WORD PTR [esi-0x77d1a2e8]
  4232df:	cld    
  4232e0:	outs   dx,DWORD PTR ds:[esi]
  4232e1:	mov    al,ds:0x7339a438
  4232e7:	push   es
  4232e8:	mov    eax,0x941ec2d3
  4232ed:	cmp    bh,BYTE PTR [esi]
  4232ef:	cmc    
  4232f0:	dec    ebp
  4232f1:	test   al,0xb3
  4232f3:	mov    eax,ds:0xdc2e2070
  4232f8:	jge    0x423357
  4232fa:	clc    
  4232fb:	cmp    DWORD PTR [ecx-0x55],ecx
  4232fe:	push   ss
  4232ff:	cmp    esi,edi
  423301:	aaa    
  423302:	dec    edx
  423303:	dec    ebx
  423304:	jecxz  0x423317
  423306:	pop    esp
  423307:	jg     0x42331e
  423309:	mov    eax,ds:0x6fea644e
  42330e:	xchg   esp,eax
  42330f:	test   eax,0x73eada04
  423314:	jge    0x4232a5
  423316:	add    DWORD PTR [edi],0x7d
  423319:	out    dx,al
  42331a:	sub    al,0xad
  42331c:	pop    edi
  42331d:	ss retf 
  42331f:	xchg   ebp,eax
  423320:	pop    ds
  423321:	pop    ss
  423322:	add    DWORD PTR [ecx-0x26c2bf7e],esi
  423328:	cmp    DWORD PTR [bx+di-0x2f],ebx
  42332c:	mov    edi,0xfc417a2b
  423331:	cvtps2pd xmm3,xmm5
  423334:	push   ebp
  423335:	stos   BYTE PTR es:[edi],al
  423336:	add    DWORD PTR [ebx],edi
  423338:	xor    BYTE PTR [esi-0x380d3010],al
  42333e:	pop    ecx
  42333f:	cwde   
  423340:	mov    WORD PTR [ecx-0x94787be],es
  423346:	xlat   BYTE PTR ds:[ebx]
  423347:	ret    
  423348:	sub    al,0x56
  42334a:	adc    edi,eax
  42334c:	aam    0xc8
  42334e:	mov    edx,0x9f1b4d01
  423353:	cmc    
  423354:	test   DWORD PTR [edi],eax
  423356:	shr    BYTE PTR [eax],cl
  423358:	rol    DWORD PTR [esi],1
  42335a:	jo     0x423394
  42335c:	(bad)  
  42335d:	jbe    0x423325
  42335f:	outs   dx,DWORD PTR ds:[esi]
  423360:	imul   ecx,ebx,0xae31c8e5
  423366:	rcl    DWORD PTR [edx],cl
  423368:	and    ah,dl
  42336a:	sub    esp,DWORD PTR [ecx]
  42336c:	cmp    dh,dl
  42336e:	mov    ebx,es
  423370:	xchg   edi,esp
  423372:	retf   
  423373:	push   ebx
  423374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423375:	(bad)  
  423376:	int    0x8f
  423378:	lock mov esi,0xbe04d6b4
  42337e:	rcr    DWORD PTR [ebx+esi*1-0x702e9907],1
  423385:	gs dec esp
  423387:	sbb    BYTE PTR [edi+ecx*2+0x74],dl
  42338b:	arpl   WORD PTR [ebp-0x41],di
  42338e:	push   0x41
  423390:	lds    eax,FWORD PTR ds:0x537a4d02
  423396:	xchg   esi,eax
  423397:	aad    0x24
  423399:	or     DWORD PTR [eax+0x41],esp
  42339c:	cli    
  42339d:	pop    ecx
  42339e:	fs (bad) 
  4233a0:	mov    esp,DWORD PTR [edx-0x4a4f1cb]
  4233a6:	popa   
  4233a7:	int3   
  4233a8:	fild   QWORD PTR [eax]
  4233aa:	test   BYTE PTR [ebp+0x74],0x83
  4233ae:	popa   
  4233af:	sub    eax,0x7441095b
  4233b4:	test   BYTE PTR ds:0xc2bb16e2,dl
  4233ba:	icebp  
  4233bb:	sbb    al,0x41
  4233bd:	cmp    eax,0xe99cf868
  4233c2:	jmp    0x585e:0x413dcd3b
  4233c9:	stos   DWORD PTR es:[edi],eax
  4233ca:	cmp    al,0x56
  4233cc:	fdivrp st(3),st
  4233ce:	mov    ds:0x759be81,eax
  4233d3:	fsub   DWORD PTR [ebx-0x425518af]
  4233d9:	adc    bh,bh
  4233db:	mov    dl,ch
  4233dd:	push   ebx
  4233de:	add    eax,0x5db2605
  4233e3:	(bad)  
  4233e4:	in     eax,0xb8
  4233e6:	into   
  4233e7:	repz dec eax
  4233e9:	xchg   ecx,eax
  4233ea:	jmp    0x80de412
  4233ef:	jg     0x4233de
  4233f1:	mov    ds:0x75913322,eax
  4233f6:	sub    ah,bl
  4233f8:	lds    ebx,FWORD PTR [eax-0x38]
  4233fb:	mov    dl,BYTE PTR [ebp+0x29c10fbf]
  423401:	shl    dl,0x47
  423404:	aas    
  423405:	(bad)  
  423406:	push   edx
  423407:	inc    eax
  423408:	mov    cx,0xc0d1
  42340c:	or     cl,cl
  42340e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42340f:	sbb    ch,BYTE PTR [edi+0x49736dc0]
  423415:	cmp    dl,al
  423417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423418:	push   ebx
  423419:	xchg   esi,eax
  42341a:	retf   0xc43b
  42341d:	cmp    ebx,ecx
  42341f:	push   eax
  423420:	das    
  423421:	iret   
  423422:	fsub   QWORD PTR [edx+0x30]
  423425:	int    0xcd
  423427:	xlat   BYTE PTR ds:[ebx]
  423428:	test   eax,0x1332a6fb
  42342d:	dec    ecx
  42342e:	mov    ebp,0x8b665426
  423433:	push   0x35bf2080
  423438:	sbb    eax,0x4a082d5a
  42343d:	outs   dx,DWORD PTR es:[esi]
  42343f:	inc    ecx
  423440:	idiv   edi
  423442:	xchg   edi,eax
  423443:	aad    0xb4
  423445:	aad    0x48
  423447:	mov    al,BYTE PTR [ecx+0x7c2e3375]
  42344d:	xlat   BYTE PTR ds:[ebx]
  42344e:	xchg   edi,eax
  42344f:	ins    DWORD PTR es:[edi],dx
  423450:	inc    edx
  423451:	xor    ebp,edx
  423453:	inc    eax
  423454:	das    
  423455:	aad    0xfe
  423457:	mov    ch,0x5b
  423459:	stos   DWORD PTR es:[edi],eax
  42345a:	mov    BYTE PTR ds:0xd799699c,bh
  423460:	add    esp,DWORD PTR [edx+ebx*4-0x19]
  423464:	inc    eax
  423465:	jae    0x42345a
  423467:	ds iret 
  423469:	xchg   BYTE PTR ds:0xc0ef8132,cl
  42346f:	sbb    eax,DWORD PTR [ebx]
  423471:	ins    DWORD PTR es:[edi],dx
  423472:	aaa    
  423473:	mov    esi,0x4f62f51f
  423478:	jae    0x4234b7
  42347a:	push   0xffffffb5
  42347c:	mov    edi,0x733c83d
  423481:	or     edx,esi
  423483:	inc    ebp
  423484:	push   eax
  423485:	rcl    BYTE PTR [edx+0x40],0x66
  423489:	dec    ebp
  42348a:	sub    bl,BYTE PTR [ebp+0x6e]
  42348d:	xor    eax,0xd3865960
  423492:	jbe    0x4234e1
  423494:	sub    BYTE PTR [edi],ah
  423496:	inc    ecx
  423497:	bound  ecx,QWORD PTR [eax+0x69]
  42349a:	pop    ecx
  42349b:	iret   
  42349c:	mov    bh,0x43
  42349e:	(bad)
  4234a2:	(bad)  
  4234a3:	std    
  4234a4:	push   es
  4234a5:	mov    DWORD PTR [ebx+0x5d],esp
  4234a8:	mov    BYTE PTR [edx+0x5396d6b],cl
  4234ae:	cmp    eax,eax
  4234b0:	xchg   ebx,eax
  4234b1:	gs add ax,0xeb49
  4234b6:	jmp    0x4234f5
  4234b8:	mov    ds:0xdcbd18c2,eax
  4234bd:	sub    DWORD PTR [eax+0x2f97f779],edx
  4234c3:	mov    dl,0x8a
  4234c5:	jo     0x4234ca
  4234c7:	dec    esi
  4234c8:	shl    ah,1
  4234ca:	push   ds
  4234cb:	and    ch,bh
  4234cd:	sbb    bh,dl
  4234cf:	push   edi
  4234d0:	sub    al,0x36
  4234d2:	and    ch,dl
  4234d4:	icebp  
  4234d5:	push   es
  4234d6:	dec    ebx
  4234d7:	push   0x3d20fb37
  4234dc:	mov    ds:0x2fdf0909,eax
  4234e1:	fwait
  4234e2:	jmp    DWORD PTR [esi+0x3b]
  4234e5:	(bad)  
  4234e6:	sbb    DWORD PTR [eax-0x25],ebp
  4234e9:	mov    ds:0x454b0d2,eax
  4234ee:	jno    0x4234a9
  4234f0:	mov    dh,0x2d
  4234f2:	adc    eax,0xafb841c
  4234f7:	pop    eax
  4234f8:	ins    DWORD PTR es:[edi],dx
  4234f9:	xchg   esp,eax
  4234fa:	pop    esi
  4234fb:	pop    esi
  4234fc:	into   
  4234fd:	mov    WORD PTR [eax-0x396d9db5],gs
  423503:	pop    ebx
  423504:	inc    eax
  423505:	pop    ecx
  423506:	push   edi
  423507:	and    BYTE PTR [esi-0x13],bh
  42350a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42350b:	mov    bh,0x6c
  42350d:	mov    ebx,0xfe3779c0
  423512:	into   
  423513:	cmp    ah,BYTE PTR [edx+0x1d]
  423516:	retf   0x4f2a
  423519:	sbb    DWORD PTR [ebp-0x72436ac3],eax
  42351f:	sbb    eax,0xd1edc603
  423524:	gs dec esi
  423526:	mov    cl,0x4b
  423528:	sbb    DWORD PTR [edi-0x3c],eax
  42352b:	jmp    0x4234c9
  42352d:	fisttp DWORD PTR [ecx-0x29195329]
  423533:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423534:	mov    DWORD PTR es:[ebx-0x21],ebp
  423538:	js     0x4234bf
  42353a:	sar    BYTE PTR [esi+edi*8+0x6146c167],0x44
  423542:	mov    esp,0xeb037e3a
  423547:	into   
  423548:	mov    al,ds:0xb9f1a8d2
  42354d:	in     eax,0x79
  42354f:	outs   dx,BYTE PTR ds:[esi]
  423550:	pop    ebx
  423551:	mov    esp,ebx
  423553:	inc    esi
  423554:	jmp    0x42354e
  423556:	lock fldenv [ecx+0x3bb9fcdd]
  42355d:	rcl    al,1
  42355f:	(bad)  [ebx-0x7b22abd7]
  423565:	call   0x19083911
  42356a:	icebp  
  42356b:	fdiv   QWORD PTR [edi+0x3]
  42356e:	push   edx
  42356f:	adc    edi,DWORD PTR [ebp+0x40]
  423572:	enter  0xa08e,0xbd
  423576:	aas    
  423577:	loop   0x4235df
  423579:	repnz mov al,0x1a
  42357c:	jmp    0x450:0x5a063db8
  423583:	pusha  
  423584:	imul   ebx,DWORD PTR [eax-0x1008c09],0x77b25fa2
  42358e:	and    eax,0xa235876
  423593:	cmp    dl,BYTE PTR [eax+ecx*1+0x418ac8c5]
  42359a:	push   cs
  42359b:	mov    ebp,0xa7817ff8
  4235a0:	lods   eax,DWORD PTR cs:[esi]
  4235a2:	retf   
  4235a3:	push   0x7eead728
  4235a8:	sub    eax,0xa4840196
  4235ad:	div    dh
  4235af:	xchg   ebp,eax
  4235b0:	pop    esp
  4235b1:	and    BYTE PTR [edx],0xf7
  4235b4:	dec    eax
  4235b5:	rcr    DWORD PTR [eax],1
  4235b7:	mov    edx,0xcc000cf
  4235bc:	push   edi
  4235bd:	inc    esp
  4235be:	repz mov bp,bp
  4235c2:	xchg   edx,eax
  4235c3:	sbb    eax,0x9d1d37d4
  4235c8:	mov    ecx,0x1a6a6913
  4235cd:	push   ss
  4235ce:	in     eax,0x18
  4235d0:	lahf   
  4235d1:	nop
  4235d2:	fcom   DWORD PTR [ebx+0x5f]
  4235d5:	fwait
  4235d6:	mov    WORD PTR [esi+ecx*1],gs
  4235d9:	cwde   
  4235da:	(bad)  
  4235dd:	fcom   DWORD PTR [edx]
  4235df:	cli    
  4235e0:	dec    ebp
  4235e1:	iret   
  4235e2:	lds    esi,FWORD PTR [esi-0x266312d7]
  4235e8:	sbb    edx,edx
  4235ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235eb:	mov    al,ch
  4235ed:	or     edi,edi
  4235ef:	pop    es
  4235f0:	add    BYTE PTR [eax],ch
  4235f2:	hlt    
  4235f3:	add    DWORD PTR [esi-0x5415f05],esi
  4235f9:	mov    bh,0xee
  4235fb:	cli    
  4235fc:	shr    bl,cl
  4235fe:	xor    al,0x7
  423600:	ret    0xf567
  423603:	data16 mov al,ds:0xe2e8d4f6
  423609:	das    
  42360a:	ret    0xf6f7
  42360d:	push   ss
  42360e:	mov    DWORD PTR [ecx-0x5fdeb891],edx
  423614:	outs   dx,BYTE PTR ds:[esi]
  423615:	adc    al,0x11
  423617:	xchg   esp,eax
  423618:	data16 jbe 0x42359b
  42361b:	test   al,0xe6
  42361d:	or     BYTE PTR ss:[eax-0x59],dh
  423621:	sahf   
  423622:	xchg   ecx,eax
  423623:	push   0x69944e59
  423628:	out    0x8e,eax
  42362a:	popa   
  42362b:	sbb    DWORD PTR [edx],0x9
  42362e:	mov    ds:0x8e99d839,eax
  423633:	mov    edi,0x84344968
  423638:	in     al,dx
  423639:	imul   esp,ebx,0xffffff8a
  42363c:	or     al,0x2d
  42363e:	jecxz  0x423654
  423640:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423641:	mov    bl,0x63
  423643:	xchg   esp,eax
  423644:	jae    0x423692
  423646:	xor    esp,DWORD PTR [edi-0x634a7150]
  42364c:	add    bl,BYTE PTR [edi+0x11539436]
  423652:	lods   al,BYTE PTR ds:[esi]
  423653:	outs   dx,DWORD PTR ds:[esi]
  423654:	fidiv  WORD PTR [eax+0x6d]
  423657:	lds    esp,FWORD PTR ds:0x90792f4b
  42365d:	mov    ebp,0x6a60f0e1
  423662:	jae    0x4235f4
  423664:	test   al,0xf6
  423666:	stos   BYTE PTR es:[edi],al
  423667:	mov    ch,0x28
  423669:	inc    edx
  42366a:	xchg   edx,eax
  42366b:	rcr    bl,cl
  42366d:	sbb    eax,0x19eb9361
  423672:	test   BYTE PTR [ebx+0x1feebda1],al
  423678:	mov    ch,0xb5
  42367a:	jnp    0x423675
  42367c:	popf   
  42367d:	xor    eax,0xfe914d91
  423682:	imul   ecx,esi,0x5
  423685:	sbb    al,0x7b
  423687:	sbb    eax,0xb5a949e9
  42368c:	out    0xf3,eax
  42368e:	out    0x89,eax
  423690:	pop    esp
  423691:	call   DWORD PTR [edi-0x71b90386]
  423697:	jae    0x42364e
  423699:	daa    
  42369a:	push   ds
  42369b:	jnp    0x4236ec
  42369d:	inc    ebp
  42369e:	and    BYTE PTR [edx-0x4b],dl
  4236a1:	aad    0x9e
  4236a3:	das    
  4236a4:	aam    0x3a
  4236a6:	icebp  
  4236a7:	scas   eax,DWORD PTR es:[edi]
  4236a8:	add    eax,0x2d6f20e4
  4236ad:	imul   edi,DWORD PTR [ecx+0x2],0x1b4702ec
  4236b4:	add    dh,dh
  4236b6:	fcmovnb st,st(2)
  4236b8:	sub    edx,DWORD PTR [esi-0x7e]
  4236bb:	je     0x42366c
  4236bd:	adc    al,0x95
  4236bf:	psllq  mm0,mm1
  4236c2:	mov    cl,0xd7
  4236c4:	xor    BYTE PTR [esi-0x39802fc7],bl
  4236ca:	dec    ebx
  4236cb:	cmp    DWORD PTR [ebx],0x141f4a01
  4236d1:	jo     0x42372f
  4236d3:	ss (bad) 
  4236d5:	adc    BYTE PTR [eax],dh
  4236d7:	leave  
  4236d8:	cmp    esi,DWORD PTR [eax-0x67]
  4236db:	add    cl,BYTE PTR [edx]
  4236dd:	jecxz  0x4236b0
  4236df:	cmp    DWORD PTR [edi+0x7e],0xd24648ed
  4236e6:	inc    ebp
  4236e7:	xchg   ebx,eax
  4236e8:	or     edx,eax
  4236ea:	and    ch,BYTE PTR [ecx]
  4236ec:	dec    edi
  4236ed:	xor    DWORD PTR [ebx],eax
  4236ef:	mov    BYTE PTR [ebp+0x7e],al
  4236f2:	in     eax,dx
  4236f3:	jecxz  0x4236b6
  4236f5:	lods   eax,DWORD PTR ds:[esi]
  4236f6:	and    ebx,ebx
  4236f8:	xchg   esp,eax
  4236f9:	jno    0x4236fa
  4236fb:	in     al,0x59
  4236fd:	mov    dl,0xcc
  4236ff:	(bad)  
  423700:	imul   esi,DWORD PTR [ebx+0x49],0xa8b5e5dd
  423707:	mov    bh,0x1b
  423709:	push   edi
  42370a:	fsub   st(3),st
  42370c:	addr16 pop es
  42370e:	mov    ds:0x27bd204d,al
  423713:	loopne 0x4236fd
  423715:	popa   
  423716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423717:	inc    esi
  423718:	into   
  423719:	(bad)  
  42371a:	ins    DWORD PTR es:[edi],dx
  42371b:	mov    al,ds:0x77de46b
  423720:	mov    ecx,0xc3ee33f6
  423725:	mov    cl,0xaf
  423727:	bound  esp,QWORD PTR [edi+0x3d0c54b7]
  42372d:	shl    BYTE PTR [edi+0x61e6c5e8],1
  423733:	pop    edx
  423734:	mov    ds:0xaa3ab3e0,al
  423739:	inc    ebp
  42373a:	jl     0x423727
  42373c:	jle    0x4237ba
  42373e:	std    
  42373f:	outs   dx,DWORD PTR ds:[esi]
  423740:	cmp    eax,0x521e3db7
  423745:	pop    edi
  423746:	jge    0x4236e2
  423748:	idiv   BYTE PTR [eax+0x2318c748]
  42374e:	jle    0x4236de
  423750:	or     eax,ebp
  423752:	dec    esi
  423753:	stos   BYTE PTR es:[edi],al
  423754:	pushf  
  423755:	push   ss
  423756:	pusha  
  423757:	call   0x837e:0xcc2c11c6
  42375e:	sub    ch,BYTE PTR es:[esi-0x9]
  423762:	push   ebp
  423763:	loopne 0x423766
  423765:	jmp    0x79adcb86
  42376a:	mov    edi,0xd4ae15bd
  42376f:	push   0x63acc73b
  423774:	shl    eax,0x9a
  423777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423778:	cmp    cl,0x81
  42377b:	xor    ebx,DWORD PTR [edx-0x59]
  42377e:	in     al,dx
  42377f:	cld    
  423780:	jo     0x423744
  423782:	ja     0x423758
  423784:	scas   eax,DWORD PTR es:[edi]
  423785:	and    dh,BYTE PTR [edi+0xfa03a13]
  42378b:	adc    edi,DWORD PTR [esi+0x499a1880]
  423791:	push   es
  423792:	test   DWORD PTR [esi+0x67],ecx
  423795:	or     eax,0x79ec0d2c
  42379a:	push   edx
  42379b:	dec    ebp
  42379c:	ficomp WORD PTR [edx+0x7d]
  42379f:	int3   
  4237a0:	clc    
  4237a1:	in     al,dx
  4237a2:	inc    DWORD PTR [ebx+0x9]
  4237a5:	add    eax,0x6250bf95
  4237aa:	arpl   WORD PTR [ecx+0x6df57660],sp
  4237b0:	aas    
  4237b1:	test   BYTE PTR [esi-0x6],bl
  4237b4:	adc    al,0xc8
  4237b6:	mov    eax,ds:0x5c4809d
  4237bb:	jbe    0x4237cd
  4237bd:	(bad)
  4237c0:	lahf   
  4237c1:	sbb    ch,BYTE PTR [ebx+0x2f]
  4237c4:	cmp    DWORD PTR [edx+0x2a],ebx
  4237c7:	mov    dl,0x72
  4237c9:	and    al,0xf2
  4237cb:	mov    ds:0x42504fee,al
  4237d0:	sub    edx,eax
  4237d2:	cmp    esi,esi
  4237d4:	sub    DWORD PTR [esi-0x1cd6a35f],esi
  4237da:	popa   
  4237db:	mov    ds:0xaf9cadc4,al
  4237e0:	outs   dx,DWORD PTR ds:[esi]
  4237e1:	fsubr  QWORD PTR [edi-0x58]
  4237e4:	mov    dh,0x50
  4237e6:	call   0x3ff3:0x64b7f219
  4237ed:	loope  0x42381c
  4237ef:	jmp    0x5890:0x2a689baa
  4237f6:	pushf  
  4237f7:	xchg   BYTE PTR [ecx-0x19806398],ah
  4237fd:	sar    BYTE PTR [edx+0x1b],1
  423800:	xchg   edi,eax
  423801:	jbe    0x42381c
  423803:	je     0x423852
  423805:	and    BYTE PTR [eax],bh
  423807:	cmp    ecx,DWORD PTR [edx]
  423809:	mov    dl,0x28
  42380b:	sub    al,0xa8
  42380d:	clc    
  42380e:	mov    ch,BYTE PTR [esp+edx*1+0x7cc3316a]
  423815:	out    0x93,eax
  423817:	mov    esp,0x10668def
  42381c:	sbb    dl,BYTE PTR [edi+0x30]
  42381f:	das    
  423820:	mov    ebx,0xae9fdfb4
  423825:	push   es
  423826:	cmp    al,0xae
  423828:	xor    dl,dh
  42382a:	adc    al,0x3b
  42382c:	dec    eax
  42382d:	or     ch,BYTE PTR [edx]
  42382f:	popf   
  423830:	dec    BYTE PTR [edx+0x6960a422]
  423836:	xchg   edi,eax
  423837:	nop
  423838:	nop
  423839:	int    0x50
  42383b:	into   
  42383c:	dec    edi
  42383d:	ficom  WORD PTR [edx-0x534fa50f]
  423843:	xlat   BYTE PTR ds:[ebx]
  423844:	jae    0x4238b7
  423846:	sbb    al,0xb0
  423848:	ret    
  423849:	cld    
  42384a:	div    BYTE PTR ds:0xc296f1d6
  423850:	xchg   ebp,eax
  423851:	inc    esi
  423852:	xor    esp,0xffffff99
  423855:	xor    edx,ebx
  423857:	push   es
  423858:	xor    cl,bh
  42385a:	pop    esi
  42385b:	enter  0xd05a,0x2f
  42385f:	and    edx,DWORD PTR [ecx]
  423861:	inc    esp
  423863:	inc    esi
  423864:	nop
  423865:	test   esp,eax
  423867:	repnz or DWORD PTR [ecx-0x2125f6bc],0xd1ccedc6
  423872:	test   bl,dl
  423874:	xor    cl,0x67
  423877:	aaa    
  423878:	ror    ecx,0x27
  42387b:	mul    DWORD PTR [ebx]
  42387d:	lods   al,BYTE PTR ds:[esi]
  42387e:	stc    
  42387f:	mov    esi,0xb239cb33
  423884:	cwde   
  423885:	test   eax,0x99675dd0
  42388a:	fist   WORD PTR [edi+0x346f6e21]
  423890:	scas   eax,DWORD PTR es:[edi]
  423891:	cmp    DWORD PTR [esi],edi
  423893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423894:	add    BYTE PTR [eax-0x31],al
  423897:	xor    cl,BYTE PTR [ebx]
  423899:	cs sub edi,edi
  42389c:	adc    al,0xe5
  42389e:	repz cmp cl,ch
  4238a1:	fisub  WORD PTR [edx]
  4238a3:	or     BYTE PTR [esi+0x635808d8],bl
  4238a9:	xor    DWORD PTR [ebp+eiz*8+0x429f9109],esi
  4238b0:	ffree  st(6)
  4238b2:	and    dl,ah
  4238b4:	mov    WORD PTR [edi],es
  4238b6:	fisttp WORD PTR [eax-0x5d6dd994]
  4238bc:	scas   eax,DWORD PTR es:[edi]
  4238bd:	retf   0x5b8a
  4238c0:	dec    ecx
  4238c1:	inc    ebp
  4238c2:	and    ecx,ecx
  4238c4:	cmp    ah,dh
  4238c6:	or     ebx,DWORD PTR [ebx-0x6]
  4238c9:	inc    ecx
  4238ca:	cs aas 
  4238cc:	add    BYTE PTR [edi+0x6],bh
  4238cf:	pushf  
  4238d0:	cmp    ebp,DWORD PTR [ecx]
  4238d2:	adc    BYTE PTR [ebx],0x83
  4238d5:	mov    DWORD PTR ds:0xa4817a48,0xd844709f
  4238df:	or     al,bl
  4238e1:	cmc    
  4238e2:	and    ebx,DWORD PTR [esi]
  4238e4:	mov    dh,0xb0
  4238e6:	push   edi
  4238e7:	arpl   di,di
  4238e9:	sub    bl,BYTE PTR [bx+si+0x69]
  4238ed:	call   0xe5e874a4
  4238f2:	mov    ebx,edi
  4238f4:	lods   al,BYTE PTR ds:[esi]
  4238f5:	pop    edi
  4238f6:	aam    0x11
  4238f8:	out    dx,al
  4238f9:	jb     0x4238a4
  4238fb:	or     DWORD PTR [esi-0x69],eax
  4238fe:	aad    0xba
  423900:	push   ss
  423901:	and    edx,DWORD PTR [edi+ebp*1]
  423904:	icebp  
  423905:	pushf  
  423906:	fisubr DWORD PTR [esi+0x33]
  423909:	xchg   cl,al
  42390b:	or     eax,0x7a967501
  423910:	adc    esp,ebp
  423912:	pushf  
  423913:	in     eax,dx
  423914:	mov    al,0xcf
  423916:	cmp    cl,ch
  423918:	push   es
  423919:	js     0x42395f
  42391b:	out    0xc7,eax
  42391d:	ret    0xe3a
  423920:	fxam   
  423922:	daa    
  423923:	loop   0x423930
  423925:	mov    eax,0x1e6405b0
  42392a:	cmp    DWORD PTR [ecx-0x47638b67],0xffffff9e
  423931:	sbb    ch,ch
  423933:	out    dx,al
  423934:	out    dx,al
  423935:	mov    cl,0xe1
  423937:	add    ecx,eax
  423939:	mov    al,ds:0x836bf068
  42393e:	das    
  42393f:	cwde   
  423940:	jmp    0x4239be
  423942:	pop    esp
  423943:	test   BYTE PTR [edi-0x70],bh
  423946:	mov    ch,0xc2
  423948:	popa   
  423949:	cs ins BYTE PTR es:[edi],dx
  42394b:	in     al,0xf
  42394d:	inc    ebp
  42394e:	inc    ebp
  42394f:	and    DWORD PTR [ebx-0x13d7db9b],0x68
  423956:	jbe    0x423991
  423958:	repnz fcomp QWORD PTR [ecx+edx*1+0x77ff3f5a]
  423960:	sbb    eax,eax
  423962:	sub    eax,0xa06545dc
  423967:	imul   esi,DWORD PTR [ebx-0x69],0xffffff93
  42396b:	and    ebx,DWORD PTR [edi]
  42396d:	int3   
  42396e:	inc    esi
  42396f:	jns    0x42397d
  423971:	dec    eax
  423972:	lods   eax,DWORD PTR es:[esi]
  423974:	cs std 
  423976:	jb     0x423944
  423978:	ins    DWORD PTR es:[edi],dx
  423979:	out    dx,eax
  42397a:	push   esi
  42397b:	mov    ebp,0xaa012e52
  423980:	fisubr WORD PTR [ebp-0x21]
  423983:	cli    
  423984:	inc    esi
  423985:	out    0x4b,al
  423987:	pop    ss
  423988:	lock (bad) 
  42398a:	sar    ch,cl
  42398c:	xchg   esi,eax
  42398d:	mov    si,0x62a2
  423991:	or     al,0xec
  423993:	xor    dh,BYTE PTR [eax+0xccb7ad6]
  423999:	or     al,0x89
  42399b:	bound  eax,QWORD PTR [ebx-0x5a6a239b]
  4239a1:	mov    DWORD PTR [edi-0x50795046],esi
  4239a7:	pop    edx
  4239a8:	xlat   BYTE PTR ds:[ebx]
  4239a9:	jecxz  0x4239cb
  4239ab:	pop    esp
  4239ac:	push   ecx
  4239ad:	int3   
  4239ae:	loope  0x4239b1
  4239b0:	arpl   WORD PTR [eax],bp
  4239b2:	push   edi
  4239b3:	addr16 fcmovnu st,st(5)
  4239b6:	lahf   
  4239b7:	xchg   ebp,eax
  4239b8:	add    BYTE PTR [edx+0x2b],ch
  4239bb:	std    
  4239bc:	pusha  
  4239bd:	clc    
  4239be:	in     al,0xa6
  4239c0:	lahf   
  4239c1:	fcomip st,st(4)
  4239c3:	mov    ah,0x5b
  4239c5:	mov    al,0xd6
  4239c7:	add    al,cl
  4239c9:	dec    ebx
  4239ca:	pop    ds
  4239cb:	jle    0x423a37
  4239cd:	shl    BYTE PTR [ebx],0xa8
  4239d0:	out    0xab,eax
  4239d2:	push   ds
  4239d3:	xor    DWORD PTR [edi],edx
  4239d5:	sbb    cl,BYTE PTR [ecx-0x5f]
  4239d8:	outs   dx,BYTE PTR ds:[esi]
  4239d9:	retf   0x293b
  4239dc:	out    dx,al
  4239dd:	call   0xbeb9a320
  4239e2:	(bad)  
  4239e3:	jbe    0x423a53
  4239e5:	adc    eax,0xc0367808
  4239ea:	cmp    BYTE PTR [edx+ecx*1+0xed5fffa],dh
  4239f1:	ffreep st(1)
  4239f3:	cmp    eax,0x71f11184
  4239f8:	cmp    BYTE PTR [eax+0x7b6b8b55],ah
  4239fe:	loop   0x4239b7
  423a00:	std    
  423a01:	mov    ecx,0xc8e6dd24
  423a06:	cdq    
  423a07:	fnsave [ebp-0x4]
  423a0a:	ficom  WORD PTR [edi-0x2838a6f8]
  423a10:	shr    ebp,1
  423a12:	aas    
  423a13:	mov    bl,0xef
  423a15:	dec    ecx
  423a16:	xchg   ebx,eax
  423a17:	lds    ebp,FWORD PTR [esi+eax*4+0x5cf09a12]
  423a1e:	ret    
  423a1f:	xchg   ebp,eax
  423a20:	stos   DWORD PTR es:[edi],eax
  423a21:	daa    
  423a22:	mov    BYTE PTR [edi-0x35a49c7e],bl
  423a28:	pop    ebp
  423a29:	and    DWORD PTR [ebx+0xcbe5318],edx
  423a2f:	sar    DWORD PTR [esi],1
  423a31:	scas   eax,DWORD PTR es:[edi]
  423a32:	cwde   
  423a33:	test   al,0x68
  423a35:	or     dl,dh
  423a37:	out    dx,eax
  423a38:	jg     0x423a14
  423a3a:	lds    edi,FWORD PTR [eax+0x71]
  423a3d:	dec    ebp
  423a3e:	cli    
  423a3f:	xchg   ebx,eax
  423a40:	adc    eax,0x8e114a9
  423a45:	(bad)  
  423a46:	clc    
  423a47:	inc    esp
  423a48:	or     esi,DWORD PTR [esi]
  423a4a:	js     0x423a19
  423a4c:	jmp    0x423a15
  423a4e:	mov    dh,0xc4
  423a50:	data16 jne 0x423ace
  423a53:	retf   
  423a54:	add    BYTE PTR [edx+0x2],dh
  423a57:	jecxz  0x423ac8
  423a59:	pop    esi
  423a5a:	dec    esi
  423a5b:	and    DWORD PTR [ebx+0x5f626fa4],esp
  423a61:	or     esi,esi
  423a63:	popf   
  423a64:	das    
  423a65:	inc    esi
  423a66:	rcl    BYTE PTR [ecx+0x3e],1
  423a69:	xchg   ebp,eax
  423a6a:	in     eax,dx
  423a6b:	loop   0x423a73
  423a6d:	sbb    dh,BYTE PTR [ebx+0x63]
  423a70:	aaa    
  423a71:	daa    
  423a72:	repz fdivr QWORD PTR [ecx+0x60]
  423a76:	(bad)  
  423a78:	adc    eax,0x284da557
  423a7d:	enter  0xdfea,0x88
  423a81:	cli    
  423a82:	cmp    eax,0xcabc93e2
  423a87:	pop    ds
  423a88:	push   esp
  423a89:	push   0x5b182654
  423a8e:	or     ch,0x7f
  423a91:	fcom   DWORD PTR [ecx-0x6e0702c1]
  423a97:	std    
  423a98:	pusha  
  423a99:	mov    ah,0x4b
  423a9b:	(bad)  
  423a9c:	adc    eax,0x7b596f62
  423aa1:	call   0xbaf1875f
  423aa6:	xchg   ebp,eax
  423aa7:	pop    eax
  423aa8:	in     al,0x3a
  423aaa:	enterw 0x4485,0xf
  423aaf:	pop    es
  423ab0:	xor    edi,DWORD PTR [eax+0x43d96f39]
  423ab6:	ss in  eax,dx
  423ab8:	cwde   
  423ab9:	in     al,0x22
  423abb:	neg    BYTE PTR [esi]
  423abd:	mov    ch,0x7c
  423abf:	stos   BYTE PTR es:[edi],al
  423ac0:	mov    esi,0x7cb7ad59
  423ac5:	stc    
  423ac6:	sbb    eax,0x133138c6
  423acb:	sbb    eax,0x5010a153
  423ad0:	clc    
  423ad1:	shl    DWORD PTR [edx],1
  423ad3:	jbe    0x423ab2
  423ad5:	xor    edx,DWORD PTR [edi-0x1d]
  423ad8:	dec    ebp
  423ad9:	jae    0x423a73
  423adb:	push   cs
  423adc:	pop    es
  423add:	inc    esp
  423ade:	jo     0x423aa6
  423ae0:	and    al,0xf3
  423ae2:	shl    BYTE PTR [eax+0x7d4ae6a4],0x43
  423ae9:	lea    eax,[ecx]
  423aeb:	scas   al,BYTE PTR es:[edi]
  423aec:	pop    es
  423aed:	loopne 0x423b2a
  423aef:	sub    DWORD PTR [edi-0x5b33339c],edx
  423af5:	scas   eax,DWORD PTR es:[edi]
  423af6:	aaa    
  423af7:	mov    ebx,0xa33cb3ff
  423afc:	pop    ss
  423afd:	sbb    cl,BYTE PTR [esp+edx*4+0x5c4e7b17]
  423b04:	cld    
  423b05:	inc    ebx
  423b06:	xchg   DWORD PTR [eax+0x77a2cb2e],edx
  423b0c:	mov    dl,0x22
  423b0e:	pop    es
  423b0f:	pop    ecx
  423b10:	ins    DWORD PTR es:[edi],dx
  423b11:	dec    BYTE PTR [ebx-0x4]
  423b14:	sysexit 
  423b16:	in     al,dx
  423b17:	jle    0x423acf
  423b19:	addr16 xchg ecx,eax
  423b1b:	pop    edx
  423b1c:	repz mov ah,0xc3
  423b1f:	xlat   BYTE PTR ds:[ebx]
  423b20:	loope  0x423af2
  423b22:	sub    DWORD PTR [ecx],ecx
  423b24:	bound  esp,QWORD PTR [edx-0x4aa2646b]
  423b2a:	hlt    
  423b2b:	arpl   WORD PTR [ecx+ebx*4],cx
  423b2e:	scas   eax,DWORD PTR es:[edi]
  423b2f:	ins    BYTE PTR es:[edi],dx
  423b30:	or     al,0x1d
  423b32:	sub    ch,al
  423b34:	outs   dx,BYTE PTR ds:[esi]
  423b35:	test   DWORD PTR [ebx-0xbe918dc],esp
  423b3b:	mov    ds:0x17f31831,al
  423b40:	fbstp  TBYTE PTR [ebx]
  423b42:	in     al,dx
  423b43:	(bad)  [ebp+0x684e499d]
  423b49:	stc    
  423b4a:	retf   0x3db4
  423b4d:	(bad)  
  423b4f:	mov    ecx,0xacf31478
  423b54:	mov    es,WORD PTR [ebp+0x5e]
  423b57:	pop    ebx
  423b58:	inc    ebx
  423b59:	fadd   QWORD PTR [edi+0x182eed6f]
  423b5f:	dec    edx
  423b60:	in     al,0x7f
  423b62:	sbb    eax,0xdbf0e1c1
  423b67:	push   edx
  423b68:	mov    ah,0x3a
  423b6a:	or     dl,ch
  423b6c:	mov    ch,0x5
  423b6e:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  423b70:	addr16 (bad) 
  423b72:	push   ss
  423b73:	outs   dx,BYTE PTR ds:[esi]
  423b74:	repnz (bad) 
  423b77:	aas    
  423b78:	aam    0xd4
  423b7a:	dec    esi
  423b7b:	xchg   edi,eax
  423b7c:	inc    eax
  423b7d:	pop    ebp
  423b7e:	sub    esi,DWORD PTR [edx-0x36]
  423b81:	out    dx,eax
  423b82:	daa    
  423b83:	inc    ecx
  423b84:	xchg   esi,eax
  423b85:	ret    
  423b86:	out    0xfa,al
  423b88:	cdq    
  423b89:	pusha  
  423b8a:	xor    DWORD PTR [ebx-0x2b],ebx
  423b8d:	xchg   edx,eax
  423b8e:	(bad)  
  423b8f:	int    0x6d
  423b91:	sbb    BYTE PTR ds:0xbe77955c,ch
  423b97:	daa    
  423b98:	ss dec esi
  423b9a:	sub    DWORD PTR [esi-0x51],esp
  423b9d:	out    dx,al
  423b9e:	push   0x38
  423ba0:	xchg   edi,eax
  423ba1:	fcom   DWORD PTR [eax+edx*1]
  423ba4:	ds mov bl,0x66
  423ba7:	in     eax,0x90
  423ba9:	retf   
  423baa:	fiadd  DWORD PTR [esi+0x79265e4b]
  423bb0:	daa    
  423bb1:	mov    eax,0xc578c4a5
  423bb6:	das    
  423bb7:	daa    
  423bb8:	adc    al,BYTE PTR [ecx-0x2f7f5667]
  423bbe:	idiv   DWORD PTR [esi+0x4f]
  423bc1:	ins    DWORD PTR es:[edi],dx
  423bc2:	inc    ebx
  423bc3:	jmp    0x423bc7
  423bc5:	jl     0x423bbd
  423bc7:	or     al,0x6d
  423bc9:	pop    ss
  423bca:	fistp  QWORD PTR [ecx-0x2a7bf516]
  423bd0:	pop    edi
  423bd1:	jmp    0xae7a:0x9fbf7a4c
  423bd8:	sbb    al,bl
  423bda:	cmp    edi,esp
  423bdc:	push   esp
  423bdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bde:	and    edi,edx
  423be0:	or     esp,DWORD PTR [ebx+0x3f0a0c49]
  423be6:	mov    bh,0x53
  423be8:	ret    
  423be9:	test   DWORD PTR [ecx*2-0x79a25013],eax
  423bf0:	add    BYTE PTR [esi+0x30],cl
  423bf3:	dec    edx
  423bf4:	pop    esp
  423bf5:	sbb    eax,0xf3740a6d
  423bfa:	stos   DWORD PTR es:[edi],eax
  423bfb:	add    ebp,DWORD PTR [edi]
  423bfd:	dec    ebx
  423bfe:	js     0x423bcf
  423c00:	dec    ebp
  423c01:	or     al,0x6b
  423c03:	(bad)  
  423c04:	fcomip st,st(3)
  423c06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c07:	aaa    
  423c08:	jns    0x423c69
  423c0a:	mov    bl,0x18
  423c0c:	pop    esp
  423c0d:	pop    edx
  423c0e:	mov    dl,0xd1
  423c10:	call   0x10a6:0x288fbd01
  423c17:	aam    0xc4
  423c19:	xchg   ebx,eax
  423c1a:	in     al,dx
  423c1b:	xchg   ebx,esp
  423c1d:	das    
  423c1e:	dec    edi
  423c1f:	aam    0x23
  423c21:	cli    
  423c22:	mov    ah,0xc7
  423c24:	or     al,0x9d
  423c26:	popf   
  423c27:	add    al,0x47
  423c29:	iret   
  423c2a:	cmc    
  423c2b:	lock push edi
  423c2d:	fbld   TBYTE PTR [ebp+ebp*1-0x7a]
  423c31:	add    ch,al
  423c33:	pop    ss
  423c34:	sbb    edx,DWORD PTR es:0x2040255d
  423c3b:	mov    DWORD PTR [eax+0x41],eax
  423c3e:	dec    edi
  423c3f:	gs push cs
  423c41:	inc    edx
  423c42:	ins    DWORD PTR es:[edi],dx
  423c43:	xor    BYTE PTR [esi],0x17
  423c46:	dec    edi
  423c47:	int    0x9a
  423c49:	(bad)  
  423c4a:	cmp    DWORD PTR [ebx],edx
  423c4c:	and    DWORD PTR [ebp-0x4b9b5f35],ebx
  423c52:	adc    al,0xb3
  423c54:	(bad)  
  423c55:	imul   DWORD PTR [ebp+0x56f334b5]
  423c5b:	cmp    esi,ebp
  423c5d:	out    dx,eax
  423c5e:	and    DWORD PTR [esi-0x44],0x9fc3133d
  423c65:	nop
  423c66:	sub    dh,bh
  423c68:	or     DWORD PTR [esi],0xffffffb8
  423c6b:	sub    BYTE PTR [ecx-0x3134c514],dl
  423c71:	(bad)  
  423c72:	shl    DWORD PTR [esi+0x6cdd6563],cl
  423c78:	lods   al,BYTE PTR ds:[esi]
  423c79:	push   ds
  423c7a:	cmove  edi,DWORD PTR [ebx-0x7c29ec5b]
  423c81:	and    dl,BYTE PTR [edx-0x7c]
  423c84:	inc    esi
  423c85:	sub    edi,eax
  423c87:	(bad)  
  423c88:	imul   BYTE PTR [esi-0x65b37b36]
  423c8e:	test   DWORD PTR [ebx+0x61],edx
  423c91:	jno    0x423c79
  423c93:	(bad)  [edx+0x6b]
  423c96:	mov    ecx,0x169b8421
  423c9b:	push   ecx
  423c9c:	inc    edi
  423c9d:	int3   
  423c9e:	stos   DWORD PTR es:[edi],eax
  423c9f:	sbb    eax,0xa2405a40
  423ca4:	dec    edx
  423ca5:	and    al,0xba
  423ca7:	in     eax,dx
  423ca8:	xor    DWORD PTR [esi+0x5a4476dd],edi
  423cae:	(bad)  
  423caf:	in     eax,dx
  423cb0:	lods   al,BYTE PTR ds:[esi]
  423cb1:	outs   dx,BYTE PTR ds:[esi]
  423cb2:	repnz mov al,0xcf
  423cb5:	sbb    BYTE PTR [ecx-0x48],ah
  423cb8:	scas   eax,DWORD PTR es:[edi]
  423cb9:	jae    0x423cf6
  423cbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cbc:	mov    ds:0x16a40f43,eax
  423cc1:	(bad)  
  423cc2:	jmp    0x423d2a
  423cc4:	add    DWORD PTR [ebp+0x41add252],ebp
  423cca:	mov    edx,0x1276f328
  423ccf:	int3   
  423cd0:	imul   ecx,DWORD PTR [esi+0xa841d1c],0xf653786d
  423cda:	lahf   
  423cdb:	popf   
  423cdc:	(bad)  
  423cdd:	aam    0x34
  423cdf:	jmp    0xb2b4:0x15cdad58
  423ce6:	xor    al,0xf1
  423ce8:	add    esp,eax
  423cea:	pusha  
  423ceb:	int3   
  423cec:	xchg   ecx,eax
  423ced:	pop    ds
  423cee:	fstp   TBYTE PTR [edi]
  423cf0:	cmc    
  423cf1:	jecxz  0x423c8f
  423cf3:	sub    ebx,ebp
  423cf5:	jp     0x423d37
  423cf7:	scas   eax,DWORD PTR es:[edi]
  423cf8:	mov    dl,0xa8
  423cfa:	or     ah,bh
  423cfc:	jbe    0x423ca6
  423cfe:	bound  esp,QWORD PTR [ebp+0x4a]
  423d01:	sub    eax,DWORD PTR [ebx-0x7b2f837d]
  423d07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d08:	sub    eax,0x3dbf83a8
  423d0d:	mov    ebp,0xf072c37c
  423d12:	push   ebp
  423d13:	xor    al,0x3c
  423d15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d16:	jl     0x423cdb
  423d18:	call   0x7e04:0x1d4df899
  423d1f:	add    dh,cl
  423d21:	(bad)  
  423d22:	or     DWORD PTR [eax+0x17],ecx
  423d25:	mov    eax,0x9fff0cea
  423d2a:	adc    eax,0x9e0e78d5
  423d2f:	pop    ds
  423d30:	lock mov bh,0x9c
  423d33:	cmp    esi,eax
  423d35:	mov    ds:0xb0c7f3cd,al
  423d3a:	(bad)  
  423d3b:	cli    
  423d3c:	inc    esp
  423d3d:	push   cs
  423d3e:	test   ecx,edx
  423d40:	out    dx,eax
  423d41:	test   eax,0x4db0035b
  423d46:	addr16 pop ds
  423d48:	mov    cs,WORD PTR [edi+0x25dadbcc]
  423d4e:	std    
  423d4f:	mov    BYTE PTR [ebp+0x17],cl
  423d52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d53:	rcr    DWORD PTR [edi-0x2bda16f7],0x3b
  423d5a:	and    ah,BYTE PTR [edi+0x67da17e8]
  423d60:	(bad)  
  423d61:	cmc    
  423d62:	aam    0xa8
  423d64:	(bad)  
  423d65:	sub    eax,0x36877eba
  423d6a:	(bad)  
  423d6b:	cwde   
  423d6c:	retf   0x5cd4
  423d6f:	jbe    0x423d85
  423d71:	jns    0x423d2c
  423d73:	mov    ebp,0x19af700c
  423d78:	scas   eax,DWORD PTR es:[edi]
  423d79:	sti    
  423d7a:	je     0x423d04
  423d7c:	and    ebp,DWORD PTR [ebx]
  423d7e:	inc    eax
  423d7f:	shr    ebp,cl
  423d81:	in     eax,dx
  423d82:	dec    ebp
  423d83:	shl    BYTE PTR [ebp+0x65],cl
  423d86:	data16 sub al,0x2b
  423d89:	stos   BYTE PTR es:[edi],al
  423d8a:	mov    ebp,0x631b25ac
  423d8f:	test   al,0x99
  423d91:	or     ebp,DWORD PTR [edi-0x32520c2f]
  423d97:	ret    
  423d98:	and    edx,0xd5b3afc9
  423d9e:	stos   BYTE PTR es:[edi],al
  423d9f:	sub    eax,0x74783ec8
  423da4:	clc    
  423da5:	push   0x7c8026e7
  423daa:	and    DWORD PTR [ecx],ebp
  423dac:	retf   
  423dad:	jmp    0x5390:0x1e8c8f57
  423db4:	cld    
  423db5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423db6:	adc    DWORD PTR [edi],ebx
  423db8:	stos   DWORD PTR es:[edi],eax
  423db9:	(bad)  
  423dba:	adc    eax,0x4ec7bd7
  423dbf:	fcmovnu st,st(1)
  423dc1:	popa   
  423dc2:	dec    esi
  423dc3:	push   cs
  423dc4:	mov    edx,0xe6c15a02
  423dc9:	lods   eax,DWORD PTR ds:[esi]
  423dca:	cmp    BYTE PTR [eax-0x27c11c33],0x71
  423dd1:	inc    edx
  423dd2:	dec    esp
  423dd3:	and    bl,BYTE PTR [eax+0x2]
  423dd6:	pop    ds
  423dd7:	pop    ds
  423dd8:	sar    BYTE PTR [esi-0x74],0x52
  423ddc:	int    0x51
  423dde:	cmp    eax,0xd57ae29d
  423de3:	out    dx,al
  423de4:	int3   
  423de5:	fldenv [edi]
  423de7:	inc    ecx
  423de8:	cmp    esp,DWORD PTR [ebp+0x73696c66]
  423dee:	inc    ecx
  423def:	pop    eax
  423df0:	fcomi  st,st(2)
  423df2:	mov    ebp,0xbb7b64d8
  423df7:	cld    
  423df8:	xchg   esi,eax
  423df9:	xchg   edx,eax
  423dfa:	rcr    DWORD PTR [ecx],0x18
  423dfd:	cdq    
  423dfe:	sti    
  423dff:	dec    esi
  423e00:	xchg   esp,esi
  423e02:	gs push edi
  423e04:	push   ecx
  423e05:	daa    
  423e06:	(bad)  
  423e07:	jp     0x423e0e
  423e09:	ficomp DWORD PTR [ecx-0x196367df]
  423e0f:	cmp    eax,0xb7db6337
  423e14:	loop   0x423dd6
  423e16:	mov    edx,0x2c454467
  423e1b:	sahf   
  423e1c:	jne    0x423e79
  423e1e:	cmp    ecx,DWORD PTR [ebx-0x9]
  423e21:	xor    ch,0xa9
  423e24:	(bad)  
  423e26:	and    eax,0x29c5f408
  423e2b:	in     al,0x5b
  423e2d:	mov    ebp,ecx
  423e2f:	int3   
  423e30:	push   0x51
  423e32:	popf   
  423e33:	inc    ebx
  423e34:	xor    DWORD PTR [eax-0x1c],0xed61e246
  423e3b:	mov    ds:0xb91902d9,al
  423e40:	sbb    al,0x8a
  423e42:	push   esi
  423e43:	mov    bh,ch
  423e45:	jl     0x423e00
  423e47:	mov    ds:0xb0022218,al
  423e4c:	dec    edi
  423e4d:	outs   dx,BYTE PTR ds:[esi]
  423e4e:	repnz xrelease mov BYTE PTR [edi],al
  423e52:	push   ebx
  423e53:	ds out 0x34,al
  423e56:	(bad)  
  423e57:	leave  
  423e58:	stos   DWORD PTR es:[edi],eax
  423e59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e5a:	push   eax
  423e5b:	popa   
  423e5c:	jo     0x423ead
  423e5e:	or     edx,eax
  423e60:	and    esi,DWORD PTR [ebx]
  423e62:	test   eax,0xaca46471
  423e67:	xchg   DWORD PTR [esi+0x48580b49],ebx
  423e6d:	into   
  423e6e:	dec    ebx
  423e6f:	fstp   DWORD PTR [edx-0x686213bf]
  423e75:	call   0x10ea:0xbaaef047
  423e7c:	jo     0x423e33
  423e7e:	pop    ebp
  423e7f:	aas    
  423e80:	xchg   ebp,eax
  423e81:	imul   ebp,DWORD PTR [edx+0x3b],0x447ec551
  423e88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e89:	jns    0x423e26
  423e8b:	push   ss
  423e8c:	cmc    
  423e8d:	mov    ds:0x28a53c35,al
  423e92:	sar    DWORD PTR [edi+eiz*1+0x4c49dcde],0x79
  423e9a:	jbe    0x423e43
  423e9c:	push   edi
  423e9d:	xchg   BYTE PTR [edi-0x6b],ch
  423ea0:	cmc    
  423ea1:	ja     0x423e9d
  423ea3:	or     al,0x45
  423ea5:	jb     0x423e9b
  423ea7:	adc    dl,BYTE PTR [ebx+ebp*8-0x2603821b]
  423eae:	dec    esi
  423eaf:	jo     0x423ea9
  423eb1:	fimul  DWORD PTR [esi-0x345f2ac3]
  423eb7:	inc    ecx
  423eb8:	add    dh,ch
  423eba:	ss jmp 0x423ec1
  423ebd:	lods   al,BYTE PTR ds:[esi]
  423ebe:	sub    DWORD PTR ds:0x44c3cdeb,edi
  423ec4:	test   BYTE PTR [edi],ah
  423ec6:	cmp    BYTE PTR [edx+0x3d],ah
  423ec9:	pop    esi
  423eca:	js     0x423e9f
  423ecc:	(bad)  
  423ecd:	pop    ebp
  423ece:	xlat   BYTE PTR ds:[ebx]
  423ecf:	call   0x9d33ae8b
  423ed4:	ret    0x83fb
  423ed7:	das    
  423ed8:	ja     0xdab043a9
  423ede:	and    eax,0xf8dcd82b
  423ee3:	fmul   st(3),st
  423ee5:	dec    esp
  423ee6:	sbb    eax,0x4e674799
  423eeb:	sar    BYTE PTR [ebx+0x77],0xd0
  423eef:	retf   0x1c2f
  423ef2:	inc    eax
  423ef3:	inc    edx
  423ef4:	cmp    DWORD PTR fs:[eax+edi*4],0xffffff92
  423ef9:	xor    DWORD PTR [eax-0x183a914],0x63
  423f00:	in     eax,dx
  423f01:	or     DWORD PTR ds:0xd3768be2,esi
  423f07:	or     al,dh
  423f09:	dec    esp
  423f0a:	inc    ebx
  423f0b:	mov    edi,0xd5222414
  423f10:	push   eax
  423f11:	out    dx,al
  423f12:	adc    al,BYTE PTR [ecx+edx*4]
  423f15:	or     cl,dh
  423f17:	xor    BYTE PTR [edi-0x49],0x3a
  423f1b:	loope  0x423f1e
  423f1d:	mov    esi,gs
  423f1f:	call   0xd991:0x2e53576f
  423f26:	out    0xa0,al
  423f28:	lahf   
  423f29:	and    eax,0x2526157d
  423f2e:	ins    DWORD PTR es:[edi],dx
  423f2f:	lods   eax,DWORD PTR ds:[esi]
  423f30:	jle    0x423f61
  423f32:	dec    esp
  423f33:	push   esp
  423f34:	adc    cl,cl
  423f36:	inc    ebp
  423f37:	xchg   ecx,eax
  423f38:	xchg   cl,ch
  423f3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f3b:	mov    ebx,0x7862d77f
  423f40:	push   esi
  423f41:	(bad)  [eax+0x664ec77d]
  423f47:	pop    ebp
  423f48:	xchg   esi,eax
  423f49:	sub    ebp,DWORD PTR fs:[esi+0x4867f74e]
  423f50:	fisub  DWORD PTR [eax-0x2c]
  423f53:	xor    al,0x45
  423f55:	push   esp
  423f56:	stc    
  423f57:	retf   
  423f58:	gs mov bl,0x23
  423f5b:	sbb    eax,0x55b1e55
  423f60:	pusha  
  423f61:	mov    esp,0x2f7db0cf
  423f66:	icebp  
  423f67:	push   ebx
  423f68:	clc    
  423f69:	push   0x3c
  423f6b:	in     eax,dx
  423f6c:	jns    0x423f91
  423f6e:	xchg   DWORD PTR [eax+esi*1-0x2],edi
  423f72:	sbb    al,ah
  423f74:	pop    ecx
  423f75:	imul   ebp,DWORD PTR [edx-0x60108289],0x7f
  423f7c:	cmp    al,0x49
  423f7e:	ret    0x1318
  423f81:	push   edx
  423f82:	fld    QWORD PTR [edx+0x1]
  423f85:	jb     0x423f16
  423f87:	ds sbb eax,0x1e3810b3
  423f8d:	push   es
  423f8e:	mov    esp,DWORD PTR [edi-0x635916ad]
  423f94:	jae    0x423f32
  423f96:	ds add ebp,edx
  423f99:	rcl    DWORD PTR [edi-0x57],cl
  423f9c:	push   0x39eb4d88
  423fa1:	scas   eax,DWORD PTR es:[edi]
  423fa2:	mov    edx,0x802bc426
  423fa7:	mov    ah,bl
  423fa9:	or     al,0xfe
  423fab:	fld    TBYTE PTR [eax+0x37]
  423fae:	popf   
  423faf:	sti    
  423fb0:	sbb    BYTE PTR [edi],al
  423fb2:	scas   eax,DWORD PTR es:[edi]
  423fb3:	jg     0x423ff1
  423fb5:	stc    
  423fb6:	sub    eax,0xf057eff
  423fbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423fbc:	push   es
  423fbd:	sbb    ebp,DWORD PTR [ebx-0x3bc1a82]
  423fc3:	push   ebp
  423fc4:	stos   BYTE PTR es:[edi],al
  423fc5:	or     BYTE PTR [eax+esi*1],al
  423fc8:	icebp  
  423fc9:	jo     0x423f4b
  423fcb:	cmp    edx,eax
  423fcd:	arpl   WORD PTR gs:[ecx],dx
  423fd0:	push   ecx
  423fd1:	push   ecx
  423fd2:	sbb    edi,DWORD PTR [edx-0x78]
  423fd5:	push   ecx
  423fd6:	cli    
  423fd7:	(bad)  
  423fd8:	mov    ebx,0x92461b18
  423fdd:	outs   dx,DWORD PTR ds:[esi]
  423fde:	mov    esp,0xa7f8baef
  423fe3:	outs   dx,DWORD PTR ds:[esi]
  423fe4:	inc    esi
  423fe5:	pop    es
  423fe6:	push   edx
  423fe7:	outs   dx,DWORD PTR ds:[esi]
  423fe8:	nop
  423fe9:	int    0x1b
  423feb:	dec    eax
  423fec:	leave  
  423fed:	in     eax,0xc8
  423fef:	in     eax,dx
  423ff0:	jmp    0x423f8b
  423ff2:	xor    esi,esi
  423ff4:	xchg   esp,eax
  423ff5:	rcl    DWORD PTR [esi+0x67],1
  423ff8:	jne    0x424018
  423ffa:	mov    esp,0x6b4fbae
  423fff:	retf   
  424000:	and    BYTE PTR [ebp-0x1b],cl
  424003:	ret    
  424004:	xchg   edx,eax
  424005:	scas   eax,DWORD PTR es:[edi]
  424006:	lahf   
  424007:	rcl    BYTE PTR [ebp+0x6c],0xa2
  42400b:	je     0x424024
  42400d:	dec    edx
  42400e:	jbe    0x424022
  424010:	jno    0x42403f
  424012:	dec    edi
  424013:	std    
  424014:	rcl    BYTE PTR [ebx],0xb3
  424017:	loop   0x424018
  424019:	pop    eax
  42401a:	popa   
  42401b:	inc    esp
  42401c:	mov    ah,0x3a
  42401e:	or     DWORD PTR [edx+eiz*8-0x1ed55fe4],ecx
  424025:	push   ebp
  424026:	sub    eax,0xddd34fa1
  42402b:	fsubr  DWORD PTR [esi+ecx*1]
  42402e:	repz sub edx,DWORD PTR [ebx+0x6c]
  424032:	mov    edx,0xaafdc034
  424037:	mov    eax,ds:0x523137fd
  42403c:	xor    al,ch
  42403e:	push   cs
  42403f:	into   
  424040:	jae    0x423ff9
  424042:	dec    eax
  424043:	pop    ebx
  424044:	xchg   ebp,eax
  424045:	pop    esi
  424046:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424047:	jle    0x4240b4
  424049:	and    eax,0xfd312b56
  42404e:	pushf  
  42404f:	lods   eax,DWORD PTR ds:[esi]
  424050:	mov    ah,0xb3
  424052:	ss fucomp st(7)
  424055:	mov    esp,0xdf68bb49
  42405a:	mov    edi,0x5b36cfbb
  42405f:	add    esp,ebp
  424061:	stos   BYTE PTR es:[edi],al
  424062:	cld    
  424063:	imul   BYTE PTR [esi]
  424065:	bound  edx,QWORD PTR [eax+0xb]
  424068:	fwait
  424069:	jbe    0x42408f
  42406b:	jno    0x42405b
  42406d:	std    
  42406e:	jnp    0x42408a
  424070:	mov    DWORD PTR [edi],ebx
  424072:	test   al,0x65
  424074:	pusha  
  424075:	adc    edi,ecx
  424077:	test   eax,0x75b75349
  42407c:	sbb    BYTE PTR [edi+0x7d],ah
  42407f:	outs   dx,DWORD PTR ds:[esi]
  424080:	addr16 cmc 
  424082:	imul   esp,ebp,0xfffffffc
  424085:	dec    esi
  424086:	adc    eax,DWORD PTR [ebx-0x4ec6f204]
  42408c:	lahf   
  42408d:	stc    
  42408e:	imul   ecx,DWORD PTR [ebx-0x67dae1b0],0x5be59cff
  424098:	fisub  DWORD PTR [edx]
  42409a:	outs   dx,DWORD PTR ds:[esi]
  42409b:	sub    esp,DWORD PTR [ebp-0x6b]
  42409e:	test   BYTE PTR [edi-0x366fa161],dh
  4240a4:	mov    ah,0xe6
  4240a6:	in     al,dx
  4240a7:	mov    eax,ds:0x5709854e
  4240ac:	xor    BYTE PTR [ebp+0x61],ah
  4240af:	ja     0x4240c0
  4240b1:	repz sbb DWORD PTR gs:[eax+edi*1+0x17],eax
  4240b7:	pop    ds
  4240b8:	leave  
  4240b9:	lods   eax,DWORD PTR ds:[esi]
  4240ba:	outs   dx,BYTE PTR ds:[esi]
  4240bb:	aad    0x36
  4240bd:	sub    al,0xf4
  4240bf:	cmp    edi,DWORD PTR [ebx]
  4240c1:	cmp    ebp,DWORD PTR [esi+0x1]
  4240c4:	hlt    
  4240c5:	xchg   esi,eax
  4240c6:	jg     0x42409b
  4240c8:	fyl2x  
  4240ca:	gs pop eax
  4240cc:	loope  0x42407a
  4240ce:	jg     0x4240c0
  4240d0:	push   ss
  4240d1:	(bad)  
  4240d3:	add    al,0xb6
  4240d5:	push   edi
  4240d6:	push   ecx
  4240d7:	lahf   
  4240d8:	jmp    0x5005f2e1
  4240dd:	add    BYTE PTR [ebp-0x79],bl
  4240e0:	push   0xffffffd1
  4240e2:	and    al,0xa
  4240e4:	aad    0x5a
  4240e6:	mov    bl,0x65
  4240e8:	rol    BYTE PTR [ecx-0x34],0xef
  4240ec:	fst    DWORD PTR ds:0x7ebc217c
  4240f2:	cwde   
  4240f3:	push   ebx
  4240f4:	repz mov al,0x3e
  4240f7:	mov    al,ds:0x432800f0
  4240fc:	mov    ah,0xf1
  4240fe:	push   eax
  4240ff:	(bad)  
  424100:	(bad)  
  424101:	sti    
  424102:	and    al,BYTE PTR [ecx+0x2e14ecb3]
  424108:	imul   edx,DWORD PTR [edi-0xc38cee],0xffffff85
  42410f:	sub    BYTE PTR [ebx],bh
  424111:	cmp    al,0x4b
  424113:	outs   dx,DWORD PTR ds:[esi]
  424114:	test   BYTE PTR ds:0xa73d8e4e,dl
  42411a:	call   0xa2b93222
  42411f:	(bad)
  424123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424124:	and    cl,BYTE PTR [eax+0x3cafb66e]
  42412a:	bound  ecx,QWORD PTR [esi]
  42412c:	mov    dl,0xc9
  42412e:	cmp    ebp,DWORD PTR [esi]
  424130:	aad    0x8a
  424132:	pop    ds
  424133:	(bad)  
  424134:	shl    BYTE PTR [ecx-0x62],cl
  424137:	dec    edx
  424138:	imul   esp,DWORD PTR [ebx],0x44
  42413b:	fdivr  QWORD PTR [eax+esi*4]
  42413e:	jns    0x4240ef
  424140:	(bad)  
  424141:	mov    eax,ds:0xb882fd26
  424146:	mov    ds:0x5bf89c85,al
  42414b:	pop    edi
  42414c:	pop    esi
  42414d:	leave  
  42414e:	ret    0xc
  424151:	push   ebp
  424152:	mov    ebp,esp
  424154:	push   ecx
  424155:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42415c:	mov    DWORD PTR ds:0x4291bb,0x19
  424166:	cmp    DWORD PTR ds:0x4291bb,0x0
  42416d:	je     0x4241c3
  424173:	cmp    DWORD PTR ds:0x4291bb,0x5
  42417a:	jb     0x4241c3
  424180:	jmp    0x424195
  424185:	push   0x6cdd
  42418a:	push   0x428019
  42418f:	call   DWORD PTR ds:0x42a877
  424195:	cmp    DWORD PTR ds:0x4291bb,0x6
  42419c:	jne    0x4241b1
  4241a2:	xor    ecx,ecx
  4241a4:	xor    ecx,DWORD PTR ds:0x4291bb
  4241aa:	dec    ecx
  4241ab:	mov    DWORD PTR ds:0x4291bb,ecx
  4241b1:	mov    ecx,DWORD PTR ds:0x4291bb
  4241b7:	dec    ecx
  4241b8:	mov    DWORD PTR ds:0x4291bb,ecx
  4241be:	jmp    0x424166
  4241c3:	mov    eax,DWORD PTR [ebp+0x8]
  4241c6:	or     ecx,ecx
  4241c8:	movsx  eax,BYTE PTR [eax]
  4241cb:	or     ecx,0x305b
  4241d1:	mov    edx,0x3272f3
  4241d6:	add    DWORD PTR ds:0x4291c7,0x4291f7
  4241e0:	sub    eax,edx
  4241e2:	mov    DWORD PTR ds:0x4291a7,0x1e
  4241ec:	cmp    DWORD PTR ds:0x4291a7,0x0
  4241f3:	je     0x42424b
  4241f9:	cmp    DWORD PTR ds:0x4291a7,0x6
  424200:	jl     0x42424b
  424206:	jmp    0x42421d
  42420b:	push   0x4280f2
  424210:	push   0x1
  424212:	push   0x8730
  424217:	call   DWORD PTR ds:0x42a87f
  42421d:	cmp    DWORD PTR ds:0x4291a7,0x7
  424224:	jne    0x424237
  42422a:	mov    ecx,DWORD PTR ds:0x4291a7
  424230:	dec    ecx
  424231:	mov    DWORD PTR ds:0x4291a7,ecx
  424237:	xor    ecx,ecx
  424239:	add    ecx,DWORD PTR ds:0x4291a7
  42423f:	dec    ecx
  424240:	mov    DWORD PTR ds:0x4291a7,ecx
  424246:	jmp    0x4241ec
  42424b:	mov    ecx,0x75108ac
  424250:	xor    eax,ecx
  424252:	cmp    eax,0xf89c85f6
  424257:	jne    0x424286
  42425d:	mov    eax,DWORD PTR [ebp+0x8]
  424260:	push   esi
  424261:	mov    esi,DWORD PTR [ebp+0x8]
  424264:	add    esi,DWORD PTR [eax+0x3c]
  424267:	mov    DWORD PTR [ebp+0x8],esi
  42426a:	mov    eax,DWORD PTR [ebp-0x4]
  42426d:	mov    esi,DWORD PTR [ebp+0x8]
  424270:	xor    eax,ecx
  424272:	add    eax,edx
  424274:	cmp    DWORD PTR [esi+0x54],eax
  424277:	pop    esi
  424278:	je     0x424286
  42427e:	mov    eax,DWORD PTR [ebp+0x8]
  424281:	jmp    0x42428d
  424286:	mov    eax,DWORD PTR [ebp-0x4]
  424289:	xor    eax,ecx
  42428b:	add    eax,edx
  42428d:	leave  
  42428e:	ret    0x4
  424291:	push   ebp
  424292:	mov    ebp,esp
  424294:	sub    esp,0xc
  424297:	and    DWORD PTR ds:0x429157,0x0
  4242a1:	mov    edx,DWORD PTR ds:0x429157
  4242a7:	inc    edx
  4242a8:	mov    DWORD PTR ds:0x429157,edx
  4242ae:	cmp    DWORD PTR ds:0x429157,0x16
  4242b5:	jl     0x4242d6
  4242bb:	jmp    0x4242c9
  4242c0:	push   DWORD PTR [ebp-0x14]
  4242c3:	call   DWORD PTR ds:0x42a883
  4242c9:	cmp    DWORD PTR ds:0x429157,0x13
  4242d0:	jb     0x4242a1
  4242d6:	push   esi
  4242d7:	mov    esi,0xf89c85a1
  4242dc:	mov    edx,DWORD PTR ds:0x42a0cf
  4242e2:	mov    ecx,DWORD PTR ds:0x42a0d7
  4242e8:	sub    edx,ecx
  4242ea:	sub    edx,DWORD PTR [edx+ecx*1]
  4242ed:	mov    DWORD PTR [ebp-0x8],esi
  4242f0:	and    DWORD PTR ds:0x4291bf,0x59ca
  4242fa:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424301:	sub    edx,DWORD PTR ds:0x4291df
  424307:	push   edi
  424308:	and    DWORD PTR ds:0x4291c7,0x0
  424312:	jmp    0x424326
  424317:	xor    ecx,ecx
  424319:	or     ecx,DWORD PTR ds:0x4291c7
  42431f:	inc    ecx
  424320:	mov    DWORD PTR ds:0x4291c7,ecx
  424326:	cmp    DWORD PTR ds:0x4291c7,0x1f
  42432d:	jae    0x42435b
  424333:	cmp    DWORD PTR ds:0x4291c7,0x20
  42433a:	jbe    0x42435b
  424340:	jmp    0x424356
  424345:	push   0x42803d
  42434a:	push   DWORD PTR [ebp-0x20]
  42434d:	push   DWORD PTR [ebp-0x24]
  424350:	call   DWORD PTR ds:0x42a887
  424356:	jmp    0x424317
  42435b:	mov    eax,eax
  42435d:	and    DWORD PTR ds:0x42919b,0x3c1b
  424367:	mov    eax,DWORD PTR [ebp-0x4]
  42436a:	add    DWORD PTR ds:0x4291df,0x7092
  424374:	mov    edi,DWORD PTR [ebp-0x8]
  424377:	adc    DWORD PTR ds:0x429193,edx
  42437d:	mov    ecx,0x75108ac
  424382:	mov    edx,DWORD PTR ds:0x42917b
  424388:	and    DWORD PTR ds:0x4291e7,edx
  42438e:	xor    eax,ecx
  424390:	add    DWORD PTR ds:0x4291df,0x314e
  42439a:	xor    edi,ecx
  42439c:	mov    edx,DWORD PTR ds:0x42a0bb
  4243a2:	mov    edx,DWORD PTR [edx]
  4243a4:	adc    DWORD PTR ds:0x4291ab,edx
  4243aa:	mov    edx,0x3272f3
  4243af:	add    edi,edx
  4243b1:	add    eax,edx
  4243b3:	imul   eax,edi
  4243b6:	mov    edi,DWORD PTR [ebp+0xc]
  4243b9:	cmp    edi,eax
  4243bb:	je     0x424410
  4243c1:	mov    DWORD PTR [ebp-0xc],esi
  4243c4:	mov    eax,DWORD PTR [ebp-0xc]
  4243c7:	mov    esi,DWORD PTR [ebp+0xc]
  4243ca:	xor    eax,ecx
  4243cc:	lea    eax,[eax*8+0x1939810]
  4243d3:	mov    eax,DWORD PTR [esi+eax*1]
  4243d6:	mov    DWORD PTR [ebp+0xc],eax
  4243d9:	mov    eax,DWORD PTR [ebp-0x4]
  4243dc:	mov    esi,DWORD PTR [ebp-0x8]
  4243df:	xor    eax,ecx
  4243e1:	xor    esi,ecx
  4243e3:	add    esi,edx
  4243e5:	add    eax,edx
  4243e7:	imul   eax,esi
  4243ea:	mov    esi,DWORD PTR [ebp+0xc]
  4243ed:	cmp    esi,eax
  4243ef:	je     0x424410
  4243f5:	mov    eax,DWORD PTR [ebp-0x4]
  4243f8:	xor    eax,ecx
  4243fa:	mov    ecx,DWORD PTR [ebp+0xc]
  4243fd:	add    eax,edx
  4243ff:	imul   eax,ecx
  424402:	add    eax,DWORD PTR [ebp+0x8]
  424405:	mov    DWORD PTR [ebp+0xc],eax
  424408:	mov    eax,DWORD PTR [ebp+0xc]
  42440b:	jmp    0x424421
  424410:	mov    eax,DWORD PTR [ebp-0x4]
  424413:	mov    esi,DWORD PTR [ebp-0x8]
  424416:	xor    esi,ecx
  424418:	xor    eax,ecx
  42441a:	add    esi,edx
  42441c:	add    eax,edx
  42441e:	imul   eax,esi
  424421:	pop    edi
  424422:	pop    esi
  424423:	leave  
  424424:	ret    0x8
	...
  424433:	add    BYTE PTR [ebx],dl
  424435:	push   esp
  424436:	test   BYTE PTR [ebp+0x0],cl
  424439:	add    BYTE PTR [eax],al
  42443b:	add    BYTE PTR [edx],al
  42443d:	add    BYTE PTR [eax],al
  42443f:	add    BYTE PTR [eax],dh
  424441:	add    BYTE PTR [eax],al
  424443:	add    BYTE PTR [eax+0x44],dl
  424446:	add    al,BYTE PTR [eax]
  424448:	push   eax
  424449:	cmp    BYTE PTR [edx],al
  42444b:	add    BYTE PTR [eax],al
  42444d:	add    BYTE PTR [eax],al
  42444f:	add    BYTE PTR [edx+0x53],dl
  424452:	inc    esp
  424453:	push   ebx
  424454:	clc    
  424455:	rcl    DWORD PTR [edi+0x24],cl
  424458:	jb     0x424466
  42445a:	cmp    al,0x40
  42445c:	mov    ch,0x37
  42445e:	mov    edi,0xdc173e8f
  424463:	stos   DWORD PTR es:[edi],eax
  424464:	add    DWORD PTR [eax],eax
  424466:	add    BYTE PTR [eax],al
  424468:	inc    esi
  424469:	cmp    bl,BYTE PTR [edi+edx*2+0x69]
  42446d:	outs   dx,BYTE PTR ds:[esi]
  42446e:	outs   dx,DWORD PTR fs:[esi]
  424470:	ja     0x4244e5
  424472:	and    BYTE PTR [ecx+ebp*2+0x72],al
  424476:	pop    esp
  424477:	inc    esi
  424478:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x636578
  424480:	mov    edx,DWORD PTR [ebp-0x14]
  424483:	sub    esp,0x108
  424489:	push   ebx
  42448a:	mov    eax,ebx
  42448c:	xchg   ecx,eax
  42448d:	mov    eax,DWORD PTR [ebp+0x8]
  424490:	cmp    eax,0xf89c85a1
  424495:	jne    0x424952
  42449b:	mov    eax,DWORD PTR [ebp+0xc]
  42449e:	cmp    eax,0xf89c85a2
  4244a3:	jne    0x424952
  4244a9:	mov    eax,DWORD PTR [ebp+0x24]
  4244ac:	mov    DWORD PTR [ebp-0x4],eax
  4244af:	mov    eax,DWORD PTR [ebp-0x4]
  4244b2:	mov    eax,DWORD PTR [eax+0x1d8]
  4244b8:	mov    eax,DWORD PTR [eax]
  4244ba:	mov    eax,DWORD PTR [eax]
  4244bc:	mov    DWORD PTR [ebp-0x8],eax
  4244bf:	mov    BYTE PTR [ebp-0x18],0x18
  4244c3:	mov    BYTE PTR [ebp-0x17],0x1f
  4244c7:	mov    BYTE PTR [ebp-0x16],0x1a
  4244cb:	mov    BYTE PTR [ebp-0x15],0x4c
  4244cf:	mov    BYTE PTR [ebp-0x14],0x4d
  4244d3:	mov    BYTE PTR [ebp-0x13],0x83
  4244d7:	mov    BYTE PTR [ebp-0x20],0xe
  4244db:	mov    BYTE PTR [ebp-0x1f],0xc
  4244df:	mov    BYTE PTR [ebp-0x1e],0x1e
  4244e3:	mov    BYTE PTR [ebp-0x1d],0xd
  4244e7:	mov    BYTE PTR [ebp-0x1c],0x4c
  4244eb:	mov    BYTE PTR [ebp-0x1b],0x4d
  4244ef:	mov    BYTE PTR [ebp-0x1a],0x83
  4244f3:	mov    BYTE PTR [ebp-0x28],0xc
  4244f7:	mov    BYTE PTR [ebp-0x27],0x1b
  4244fb:	mov    BYTE PTR [ebp-0x26],0x17
  4244ff:	mov    BYTE PTR [ebp-0x25],0x8
  424503:	mov    BYTE PTR [ebp-0x24],0x22
  424507:	mov    BYTE PTR [ebp-0x23],0x13
  42450b:	mov    BYTE PTR [ebp-0x22],0x1a
  42450f:	mov    BYTE PTR [ebp-0x21],0x83
  424513:	xor    ecx,ecx
  424515:	lea    eax,[ebp+ecx*1-0x18]
  424519:	movzx  edx,BYTE PTR [eax]
  42451c:	xor    edx,0x7d
  42451f:	add    edx,0x2
  424522:	inc    ecx
  424523:	mov    BYTE PTR [eax],dl
  424525:	cmp    ecx,0x6
  424528:	jb     0x424515
  42452a:	xor    ecx,ecx
  42452c:	lea    eax,[ebp+ecx*1-0x20]
  424530:	movzx  edx,BYTE PTR [eax]
  424533:	xor    edx,0x7d
  424536:	add    edx,0x2
  424539:	inc    ecx
  42453a:	mov    BYTE PTR [eax],dl
  42453c:	cmp    ecx,0x7
  42453f:	jb     0x42452c
  424541:	xor    ecx,ecx
  424543:	lea    eax,[ebp+ecx*1-0x28]
  424547:	movzx  edx,BYTE PTR [eax]
  42454a:	xor    edx,0x7d
  42454d:	add    edx,0x2
  424550:	inc    ecx
  424551:	mov    BYTE PTR [eax],dl
  424553:	cmp    ecx,0x8
  424556:	jb     0x424543
  424558:	lea    eax,[ebp-0x2c]
  42455b:	mov    DWORD PTR [ebp-0x8],eax
  42455e:	mov    ecx,DWORD PTR [ebp-0x8]
  424561:	mov    eax,0x7113fccf
  424566:	mov    DWORD PTR [ecx],eax
  424568:	mov    ecx,DWORD PTR [ebp-0x2c]
  42456b:	push   esi
  42456c:	push   edi
  42456d:	mov    esi,0x4e3c
  424572:	mov    ebx,0x3272f3
  424577:	cmp    ecx,eax
  424579:	jne    0x424644
  42457f:	lea    eax,[esi+0x3b]
  424582:	mov    WORD PTR [ebp-0x78],ax
  424586:	mov    eax,esi
  424588:	mov    WORD PTR [ebp-0x76],ax
  42458c:	add    eax,0x35
  42458f:	mov    WORD PTR [ebp-0x74],ax
  424593:	lea    eax,[esi+0x2]
  424596:	mov    WORD PTR [ebp-0x72],ax
  42459a:	add    eax,0x41
  42459d:	mov    ecx,eax
  42459f:	lea    eax,[esi-0x13]
  4245a2:	mov    WORD PTR [ebp-0x66],ax
  4245a6:	mov    eax,esi
  4245a8:	mov    WORD PTR [ebp-0x64],ax
  4245ac:	add    eax,0xffffffec
  4245af:	mov    WORD PTR [ebp-0x62],ax
  4245b3:	mov    eax,0x443
  4245b8:	mov    WORD PTR [ebp-0x60],ax
  4245bc:	mov    eax,0x5672
  4245c1:	mov    WORD PTR [ebp-0x5e],ax
  4245c5:	mov    eax,0x6112
  4245ca:	mov    WORD PTR [ebp-0x5c],ax
  4245ce:	lea    eax,[ebp-0xe0]
  4245d4:	push   eax
  4245d5:	mov    eax,DWORD PTR [ebp+0xc]
  4245d8:	mov    edi,0x75108ac
  4245dd:	xor    eax,edi
  4245df:	add    eax,ebx
  4245e1:	push   eax
  4245e2:	mov    WORD PTR [ebp-0x70],cx
  4245e6:	lea    ecx,[esi-0xa]
  4245e9:	mov    edx,ecx
  4245eb:	lea    eax,[ebp-0x78]
  4245ee:	push   eax
  4245ef:	mov    eax,DWORD PTR [ebp-0x4]
  4245f2:	mov    eax,DWORD PTR [eax+0x198]
  4245f8:	mov    WORD PTR [ebp-0x6e],dx
  4245fc:	mov    edx,0x4f88
  424601:	mov    WORD PTR [ebp-0x6c],dx
  424605:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e35
  42460c:	mov    DWORD PTR [ebp-0x5a],0x4e32f1e4
  424613:	mov    DWORD PTR [ebp-0xe0],0x1
  42461d:	mov    DWORD PTR [ebp-0xdc],0x255
  424627:	push   DWORD PTR [eax]
  424629:	mov    eax,DWORD PTR [ebp+0x10]
  42462c:	call   eax
  42462e:	mov    DWORD PTR [ebp-0x8],eax
  424631:	mov    eax,DWORD PTR [ebp-0x8]
  424634:	test   eax,eax
  424636:	je     0x424649
  424638:	xor    DWORD PTR ds:0x76586876,0x87687666
  424642:	jmp    0x424649
  424644:	mov    edi,0x75108ac
  424649:	mov    eax,DWORD PTR [ebp-0x4]
  42464c:	mov    ecx,DWORD PTR [eax+0x18c]
  424652:	xor    eax,eax
  424654:	cmp    DWORD PTR [ecx],eax
  424656:	jne    0x4248c5
  42465c:	mov    ecx,DWORD PTR [ebp-0x4]
  42465f:	mov    ecx,DWORD PTR [ecx+0x17c]
  424665:	mov    DWORD PTR [ecx],eax
  424667:	mov    ecx,DWORD PTR [ebp-0x4]
  42466a:	mov    ecx,DWORD PTR [ecx+0x180]
  424670:	mov    DWORD PTR [ecx],eax
  424672:	mov    eax,0x4e61
  424677:	mov    WORD PTR [ebp-0x9c],ax
  42467e:	mov    eax,esi
  424680:	mov    WORD PTR [ebp-0x9a],ax
  424687:	mov    eax,0x4e71
  42468c:	mov    WORD PTR [ebp-0x98],ax
  424693:	add    eax,0xffffffc0
  424696:	mov    WORD PTR [ebp-0x96],ax
  42469d:	mov    eax,0x4f8c
  4246a2:	mov    WORD PTR [ebp-0x94],ax
  4246a9:	mov    eax,0x4e30
  4246ae:	mov    WORD PTR [ebp-0x92],ax
  4246b5:	add    eax,0x4f
  4246b8:	mov    WORD PTR [ebp-0x90],ax
  4246bf:	mov    eax,0x4e32
  4246c4:	mov    WORD PTR [ebp-0x8e],ax
  4246cb:	mov    eax,esi
  4246cd:	mov    WORD PTR [ebp-0x8c],ax
  4246d4:	mov    eax,0x4e35
  4246d9:	mov    WORD PTR [ebp-0x8a],ax
  4246e0:	mov    eax,0x99f1
  4246e5:	mov    WORD PTR [ebp-0x88],ax
  4246ec:	mov    eax,0x8d60
  4246f1:	mov    WORD PTR [ebp-0x86],ax
  4246f8:	mov    eax,0xd66f
  4246fd:	mov    WORD PTR [ebp-0x84],ax
  424704:	mov    eax,0xd783
  424709:	mov    WORD PTR [ebp-0x82],ax
  424710:	mov    eax,0x2782
  424715:	mov    WORD PTR [ebp-0x80],ax
  424719:	mov    eax,0x4782
  42471e:	mov    WORD PTR [ebp-0x7e],ax
  424722:	mov    eax,0x4e33
  424727:	push   0x8
  424729:	mov    WORD PTR [ebp-0x7c],ax
  42472d:	mov    DWORD PTR [ebp-0x10],0x8171b0c
  424734:	mov    DWORD PTR [ebp-0xc],0x831a1322
  42473b:	lea    eax,[ebp-0x10]
  42473e:	pop    ecx
  42473f:	mov    dl,BYTE PTR [eax]
  424741:	xor    dl,0x7d
  424744:	add    dl,0x2
  424747:	mov    BYTE PTR [eax],dl
  424749:	inc    eax
  42474a:	dec    ecx
  42474b:	jne    0x42473f
  42474d:	lea    eax,[ebp-0x10]
  424750:	mov    DWORD PTR [ebp-0xdc],eax
  424756:	lea    eax,[ebp-0xe0]
  42475c:	push   eax
  42475d:	mov    eax,DWORD PTR [ebp+0xc]
  424760:	xor    eax,edi
  424762:	add    eax,ebx
  424764:	push   eax
  424765:	mov    eax,DWORD PTR [ebp-0x4]
  424768:	add    eax,0x66
  42476b:	push   eax
  42476c:	mov    eax,DWORD PTR [ebp-0x4]
  42476f:	mov    eax,DWORD PTR [eax+0x198]
  424775:	mov    DWORD PTR [ebp-0xe0],0x1
  42477f:	push   DWORD PTR [eax]
  424781:	mov    eax,DWORD PTR [ebp+0x10]
  424784:	call   eax
  424786:	mov    ecx,DWORD PTR [ebp+0x8]
  424789:	xor    ecx,edi
  42478b:	add    ecx,ebx
  42478d:	mov    DWORD PTR [ebp-0x8],eax
  424790:	cmp    eax,ecx
  424792:	jne    0x4247ad
  424794:	mov    eax,ds:0x33730bc8
  424799:	or     eax,0x22150bcf
  42479e:	mov    ds:0x33730bc8,eax
  4247a3:	add    eax,0x3372e92f
  4247a8:	mov    ds:0x33730bc8,eax
  4247ad:	mov    ecx,0x4e64
  4247b2:	mov    eax,ecx
  4247b4:	mov    WORD PTR [ebp-0x40],ax
  4247b8:	add    eax,0x7
  4247bb:	mov    edx,eax
  4247bd:	mov    WORD PTR [ebp-0x3e],dx
  4247c1:	mov    edx,0x4f93
  4247c6:	mov    WORD PTR [ebp-0x3c],dx
  4247ca:	add    edx,0xfffffff8
  4247cd:	mov    WORD PTR [ebp-0x3a],dx
  4247d1:	mov    edx,0x4f8d
  4247d6:	mov    WORD PTR [ebp-0x38],dx
  4247da:	inc    edx
  4247db:	mov    WORD PTR [ebp-0x36],dx
  4247df:	mov    edx,0x4f87
  4247e4:	mov    WORD PTR [ebp-0x34],dx
  4247e8:	mov    WORD PTR [ebp-0x32],cx
  4247ec:	mov    ecx,esi
  4247ee:	mov    WORD PTR [ebp-0x30],cx
  4247f2:	lea    ecx,[edx-0x3]
  4247f5:	mov    edx,ecx
  4247f7:	mov    WORD PTR [ebp-0x54],dx
  4247fb:	mov    edx,eax
  4247fd:	mov    WORD PTR [ebp-0x52],dx
  424801:	mov    edx,0x4e73
  424806:	mov    WORD PTR [ebp-0x50],dx
  42480a:	mov    WORD PTR [ebp-0x4e],ax
  42480e:	lea    eax,[edx-0x6]
  424811:	mov    WORD PTR [ebp-0x4c],ax
  424815:	inc    eax
  424816:	mov    WORD PTR [ebp-0x4a],ax
  42481a:	lea    eax,[edx-0xc]
  42481d:	mov    WORD PTR [ebp-0x48],ax
  424821:	mov    WORD PTR [ebp-0x46],cx
  424825:	mov    WORD PTR [ebp-0x44],si
  424829:	mov    eax,DWORD PTR [ebp+0x8]
  42482c:	movzx  ecx,WORD PTR [ebp-0x54]
  424830:	xor    eax,edi
  424832:	add    eax,ebx
  424834:	xor    eax,ecx
  424836:	mov    WORD PTR [ebp-0x54],ax
  42483a:	mov    eax,DWORD PTR [ebp+0x8]
  42483d:	movzx  ecx,WORD PTR [ebp-0x40]
  424841:	xor    eax,edi
  424843:	add    eax,ebx
  424845:	xor    eax,ecx
  424847:	mov    WORD PTR [ebp-0x40],ax
  42484b:	xor    eax,eax
  42484d:	mov    WORD PTR [ebp-0xf4],ax
  424854:	mov    WORD PTR [ebp-0x108],ax
  42485b:	mov    edi,DWORD PTR [ebp+0x24]
  42485e:	lea    eax,[ebp-0xf4]
  424864:	lea    edx,[ebp-0x54]
  424867:	mov    DWORD PTR [ebp-0xe0],0x2
  424871:	mov    DWORD PTR [ebp-0xdc],eax
  424877:	call   0x4272b1
  42487c:	mov    DWORD PTR [ebp-0xd8],eax
  424882:	lea    eax,[ebp-0xe0]
  424888:	push   eax
  424889:	mov    eax,DWORD PTR [ebp+0xc]
  42488c:	xor    eax,0x75108ac
  424891:	add    eax,ebx
  424893:	push   eax
  424894:	lea    eax,[ebp-0x9c]
  42489a:	push   eax
  42489b:	push   DWORD PTR [ebp-0x8]
  42489e:	mov    eax,DWORD PTR [ebp+0x10]
  4248a1:	call   eax
  4248a3:	mov    edi,DWORD PTR [ebp+0x24]
  4248a6:	lea    eax,[ebp-0x108]
  4248ac:	lea    edx,[ebp-0x40]
  4248af:	mov    DWORD PTR [ebp-0xdc],eax
  4248b5:	call   0x4272b1
  4248ba:	mov    DWORD PTR [ebp-0xd8],eax
  4248c0:	mov    edi,0x75108ac
  4248c5:	mov    eax,DWORD PTR [ebp+0x14]
  4248c8:	push   DWORD PTR [ebp-0x4]
  4248cb:	push   DWORD PTR [ebp+0x20]
  4248ce:	push   DWORD PTR [ebp+0x1c]
  4248d1:	push   DWORD PTR [ebp+0x18]
  4248d4:	push   DWORD PTR [ebp+0x10]
  4248d7:	push   DWORD PTR [ebp+0x8]
  4248da:	push   DWORD PTR [ebp+0xc]
  4248dd:	call   0x425b50
  4248e2:	test   eax,eax
  4248e4:	je     0x424928
  4248e6:	add    DWORD PTR [ebp-0x4],eax
  4248e9:	push   DWORD PTR [ebp-0x4]
  4248ec:	lea    esi,[ebp+0x4]
  4248ef:	call   0x424d40
  4248f4:	mov    eax,DWORD PTR [ebp-0x4]
  4248f7:	mov    eax,DWORD PTR [eax+0x1c8]
  4248fd:	mov    eax,DWORD PTR [eax]
  4248ff:	xor    eax,edi
  424901:	add    eax,ebx
  424903:	mov    eax,DWORD PTR [ebp-0x4]
  424906:	jne    0x42491e
  424908:	mov    ecx,DWORD PTR [ebp-0x4]
  42490b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424911:	push   DWORD PTR [ecx]
  424913:	mov    eax,DWORD PTR [eax+0x1e0]
  424919:	call   DWORD PTR [eax+0x28]
  42491c:	jmp    0x424928
  42491e:	mov    eax,DWORD PTR [eax+0x17c]
  424924:	mov    eax,DWORD PTR [eax]
  424926:	add    DWORD PTR [esi],eax
  424928:	mov    eax,DWORD PTR [ebp-0x4]
  42492b:	mov    eax,DWORD PTR [eax+0x1dc]
  424931:	dec    DWORD PTR [eax]
  424933:	mov    ecx,DWORD PTR [ebp-0x4]
  424936:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42493c:	mov    eax,DWORD PTR [eax]
  42493e:	lea    eax,[ecx+eax*4]
  424941:	mov    ecx,DWORD PTR [ebp-0x4]
  424944:	mov    ecx,DWORD PTR [ecx+0x17c]
  42494a:	mov    eax,DWORD PTR [eax]
  42494c:	mov    ecx,DWORD PTR [ecx]
  42494e:	add    DWORD PTR [eax],ecx
  424950:	pop    edi
  424951:	pop    esi
  424952:	pop    ebx
  424953:	leave  
  424954:	ret    0x20
  424957:	push   edi
  424958:	push   esi
  424959:	push   ebx
  42495a:	push   ebp
  42495b:	mov    ebp,esp
  42495d:	mov    eax,DWORD PTR [ebp+0x24]
  424960:	add    DWORD PTR [ebp+0x28],eax
  424963:	push   eax
  424964:	cld    
  424965:	mov    esi,DWORD PTR [ebp+0x18]
  424968:	add    DWORD PTR [ebp+0x1c],esi
  42496b:	push   esi
  42496c:	mov    esi,DWORD PTR [ebp+0x14]
  42496f:	lods   eax,DWORD PTR ds:[esi]
  424970:	xchg   edx,eax
  424971:	push   edx
  424972:	mov    cl,BYTE PTR [esi-0x2]
  424975:	or     eax,0xffffffff
  424978:	shl    eax,cl
  42497a:	not    eax
  42497c:	push   eax
  42497d:	mov    cl,dh
  42497f:	or     eax,0xffffffff
  424982:	shl    eax,cl
  424984:	not    eax
  424986:	push   eax
  424987:	add    cl,dl
  424989:	mov    edi,esi
  42498b:	sub    esp,0xc
  42498e:	sub    eax,eax
  424990:	inc    eax
  424991:	push   eax
  424992:	push   eax
  424993:	push   eax
  424994:	push   eax
  424995:	push   eax
  424996:	push   edi
  424997:	sub    esi,esi
  424999:	push   esi
  42499a:	or     ebx,0xffffffff
  42499d:	mov    eax,0x300
  4249a2:	shl    eax,cl
  4249a4:	lea    ecx,[eax+0x736]
  4249aa:	mov    eax,0x4000400
  4249af:	shr    ecx,1
  4249b1:	rep stos DWORD PTR es:[edi],eax
  4249b3:	push   0x5
  4249b5:	pop    ecx
  4249b6:	call   0x424ca1
  4249bb:	loop   0x4249b6
  4249bd:	lea    esi,[esi]
  4249bf:	lea    edi,[edi]
  4249c1:	mov    edi,DWORD PTR [ebp-0x4]
  4249c4:	mov    eax,DWORD PTR [ebp-0x10]
  4249c7:	sub    edi,DWORD PTR [ebp+0x24]
  4249ca:	and    eax,edi
  4249cc:	mov    DWORD PTR [ebp-0x18],eax
  4249cf:	mov    al,0x0
  4249d1:	call   0x424cb9
  4249d6:	jne    0x424a71
  4249dc:	mov    cl,BYTE PTR [ebp-0xc]
  4249df:	and    edi,DWORD PTR [ebp-0x14]
  4249e2:	shl    edi,cl
  4249e4:	sub    cl,0x8
  4249e7:	neg    cl
  4249e9:	shr    esi,cl
  4249eb:	pop    eax
  4249ec:	add    edi,esi
  4249ee:	pop    esi
  4249ef:	lea    edi,[edi+edi*2]
  4249f2:	shl    edi,0x8
  4249f5:	cmp    al,0x7
  4249f7:	pop    edx
  4249f8:	lea    ecx,[esi+edi*2+0xe6c]
  4249ff:	push   ecx
  424a00:	push   esi
  424a01:	mov    esi,0x100
  424a06:	push   eax
  424a07:	mov    al,0x1
  424a09:	jb     0x424a3f
  424a0b:	mov    edi,DWORD PTR [ebp-0x4]
  424a0e:	sub    edi,DWORD PTR [ebp-0x24]
  424a11:	movzx  edi,BYTE PTR [edi]
  424a14:	mov    ebp,DWORD PTR [ebp-0x34]
  424a17:	shl    edi,1
  424a19:	mov    ecx,esi
  424a1b:	and    esi,edi
  424a1d:	add    ecx,esi
  424a1f:	lea    ebp,[ebp+ecx*2+0x0]
  424a23:	call   0x424cd8
  424a28:	mov    ecx,eax
  424a2a:	shr    esi,0x8
  424a2d:	and    ecx,0x1
  424a30:	cmp    esi,ecx
  424a32:	mov    esi,0x100
  424a37:	jne    0x424a47
  424a39:	cmp    eax,esi
  424a3b:	jb     0x424a14
  424a3d:	jmp    0x424a53
  424a3f:	mov    ebp,DWORD PTR [ebp-0x34]
  424a42:	call   0x424cd8
  424a47:	inc    eax
  424a48:	inc    esi
  424a49:	sub    eax,0x1
  424a4c:	sub    esi,0x1
  424a4f:	cmp    eax,esi
  424a51:	jb     0x424a3f
  424a53:	pop    edx
  424a54:	inc    edx
  424a55:	cmp    edx,0x5
  424a58:	dec    edx
  424a59:	mov    ecx,edx
  424a5b:	jb     0x424a6c
  424a5d:	inc    edx
  424a5e:	cmp    edx,0xb
  424a61:	dec    edx
  424a62:	mov    cl,0x4
  424a64:	dec    cl
  424a66:	jb     0x424a6c
  424a68:	mov    cl,0x7
  424a6a:	dec    cl
  424a6c:	sub    edx,ecx
  424a6e:	push   edx
  424a6f:	jmp    0x424ac0
  424a71:	mov    al,0xc1
  424a73:	dec    al
  424a75:	call   0x424cc9
  424a7a:	jne    0x424a90
  424a7c:	pop    eax
  424a7d:	pop    edi
  424a7e:	pop    edx
  424a7f:	pop    ecx
  424a80:	pop    edx
  424a81:	pop    ecx
  424a82:	push   DWORD PTR [esp]
  424a85:	push   ecx
  424a86:	push   edx
  424a87:	mov    edx,0x664
  424a8c:	mov    cl,0x0
  424a8e:	jmp    0x424b03
  424a90:	mov    al,0xcd
  424a92:	dec    al
  424a94:	call   0x424cc9
  424a99:	jne    0x424ac9
  424a9b:	mov    al,0xf1
  424a9d:	dec    al
  424a9f:	call   0x424cb9
  424aa4:	jne    0x424af9
  424aa6:	pop    eax
  424aa7:	cmp    al,0x7
  424aa9:	mov    al,0x9
  424aab:	jb     0x424aaf
  424aad:	mov    al,0xb
  424aaf:	push   eax
  424ab0:	mov    esi,DWORD PTR [ebp-0x4]
  424ab3:	sub    esi,DWORD PTR [ebp-0x24]
  424ab6:	cmp    esi,DWORD PTR [ebp+0x24]
  424ab9:	jb     0x424c90
  424abf:	lods   al,BYTE PTR ds:[esi]
  424ac0:	mov    edi,DWORD PTR [ebp-0x4]
  424ac3:	stos   BYTE PTR es:[edi],al
  424ac4:	jmp    0x424c57
  424ac9:	mov    al,0xd8
  424acb:	call   0x424cc9
  424ad0:	mov    esi,DWORD PTR [ebp-0x28]
  424ad3:	je     0x424af0
  424ad5:	mov    al,0xe4
  424ad7:	call   0x424cc9
  424adc:	mov    esi,DWORD PTR [ebp-0x2c]
  424adf:	je     0x424aea
  424ae1:	mov    esi,DWORD PTR [ebp-0x30]
  424ae4:	mov    ecx,DWORD PTR [ebp-0x2c]
  424ae7:	mov    DWORD PTR [ebp-0x30],ecx
  424aea:	mov    ecx,DWORD PTR [ebp-0x28]
  424aed:	mov    DWORD PTR [ebp-0x2c],ecx
  424af0:	mov    ecx,DWORD PTR [ebp-0x24]
  424af3:	mov    DWORD PTR [ebp-0x28],ecx
  424af6:	mov    DWORD PTR [ebp-0x24],esi
  424af9:	pop    eax
  424afa:	pop    edi
  424afb:	pop    ecx
  424afc:	mov    edx,0xa68
  424b01:	mov    cl,0x8
  424b03:	add    edx,edi
  424b05:	push   edx
  424b06:	push   edi
  424b07:	cmp    al,0x7
  424b09:	mov    al,cl
  424b0b:	jb     0x424b0f
  424b0d:	add    al,0x3
  424b0f:	push   eax
  424b10:	mov    ebp,DWORD PTR [ebp-0x34]
  424b13:	call   0x424cd6
  424b18:	jne    0x424b2e
  424b1a:	mov    eax,DWORD PTR [ebp-0x18]
  424b1d:	mov    edi,DWORD PTR [ebp-0x34]
  424b20:	shl    eax,0x3
  424b23:	sub    ecx,ecx
  424b25:	push   0x8
  424b27:	pop    esi
  424b28:	lea    edi,[edi+eax*2+0x4]
  424b2c:	jmp    0x424b63
  424b2e:	mov    ebp,DWORD PTR [ebp-0x34]
  424b31:	add    ebp,0x2
  424b34:	call   0x424cd6
  424b39:	jne    0x424b53
  424b3b:	mov    eax,DWORD PTR [ebp-0x18]
  424b3e:	mov    edi,DWORD PTR [ebp-0x34]
  424b41:	shl    eax,0x3
  424b44:	push   0x8
  424b46:	pop    ecx
  424b47:	push   0x8
  424b49:	pop    esi
  424b4a:	lea    edi,[edi+eax*2+0x104]
  424b51:	jmp    0x424b63
  424b53:	mov    edi,0x204
  424b58:	add    edi,DWORD PTR [ebp-0x34]
  424b5b:	push   0x10
  424b5d:	pop    ecx
  424b5e:	mov    esi,0x100
  424b63:	mov    DWORD PTR [ebp-0x1c],ecx
  424b66:	sub    eax,eax
  424b68:	inc    eax
  424b69:	mov    ebp,edi
  424b6b:	call   0x424cd8
  424b70:	mov    ecx,eax
  424b72:	sub    ecx,esi
  424b74:	jb     0x424b69
  424b76:	add    DWORD PTR [ebp-0x1c],ecx
  424b79:	cmp    DWORD PTR [ebp-0x3c],0x4
  424b7d:	jae    0x424c33
  424b83:	add    DWORD PTR [ebp-0x3c],0x7
  424b87:	mov    ecx,DWORD PTR [ebp-0x1c]
  424b8a:	cmp    ecx,0x4
  424b8d:	jb     0x424b92
  424b8f:	push   0x3
  424b91:	pop    ecx
  424b92:	mov    edi,DWORD PTR [ebp-0x38]
  424b95:	shl    ecx,0x6
  424b98:	sub    eax,eax
  424b9a:	inc    eax
  424b9b:	push   0x40
  424b9d:	pop    esi
  424b9e:	lea    edi,[edi+ecx*2+0x360]
  424ba5:	mov    ebp,edi
  424ba7:	call   0x424cd8
  424bac:	mov    ecx,eax
  424bae:	sub    ecx,esi
  424bb0:	jb     0x424ba5
  424bb2:	mov    DWORD PTR [ebp-0x18],ecx
  424bb5:	mov    DWORD PTR [ebp-0x24],ecx
  424bb8:	cmp    ecx,0x4
  424bbb:	jb     0x424c30
  424bbd:	mov    esi,ecx
  424bbf:	and    DWORD PTR [ebp-0x24],0x1
  424bc3:	shr    esi,1
  424bc5:	or     DWORD PTR [ebp-0x24],0x2
  424bc9:	dec    esi
  424bca:	cmp    ecx,0xe
  424bcd:	jae    0x424be8
  424bcf:	mov    eax,0x2af
  424bd4:	sub    eax,ecx
  424bd6:	mov    ecx,esi
  424bd8:	shl    BYTE PTR [ebp-0x24],cl
  424bdb:	add    eax,DWORD PTR [ebp-0x24]
  424bde:	shl    eax,1
  424be0:	add    eax,DWORD PTR [ebp-0x38]
  424be3:	mov    DWORD PTR [ebp-0x34],eax
  424be6:	jmp    0x424c15
  424be8:	sub    esi,0x4
  424beb:	call   0x424c95
  424bf0:	shr    ebx,1
  424bf2:	shl    DWORD PTR [ebp-0x24],1
  424bf5:	cmp    DWORD PTR [ebp-0x20],ebx
  424bf8:	jb     0x424c00
  424bfa:	inc    DWORD PTR [ebp-0x24]
  424bfd:	sub    DWORD PTR [ebp-0x20],ebx
  424c00:	dec    esi
  424c01:	jne    0x424beb
  424c03:	mov    eax,0x644
  424c08:	add    eax,DWORD PTR [ebp-0x38]
  424c0b:	mov    DWORD PTR [ebp-0x34],eax
  424c0e:	shl    DWORD PTR [ebp-0x24],0x4
  424c12:	push   0x4
  424c14:	pop    esi
  424c15:	sub    edi,edi
  424c17:	inc    edi
  424c18:	mov    eax,edi
  424c1a:	mov    ebp,DWORD PTR [ebp-0x34]
  424c1d:	call   0x424cd8
  424c22:	test   al,0x1
  424c24:	je     0x424c29
  424c26:	or     DWORD PTR [ebp-0x24],edi
  424c29:	shl    edi,1
  424c2b:	dec    esi
  424c2c:	jne    0x424c1a
  424c2e:	jmp    0x424c30
  424c30:	inc    DWORD PTR [ebp-0x24]
  424c33:	mov    ecx,DWORD PTR [ebp-0x1c]
  424c36:	add    ecx,0x2
  424c39:	mov    edi,DWORD PTR [ebp-0x4]
  424c3c:	mov    eax,edi
  424c3e:	sub    eax,DWORD PTR [ebp+0x24]
  424c41:	cmp    DWORD PTR [ebp-0x24],eax
  424c44:	ja     0x424c90
  424c46:	mov    esi,edi
  424c48:	sub    esi,DWORD PTR [ebp-0x24]
  424c4b:	mov    edx,DWORD PTR [ebp+0x28]
  424c4e:	lods   al,BYTE PTR ds:[esi]
  424c4f:	stos   BYTE PTR es:[edi],al
  424c50:	cmp    edi,edx
  424c52:	jae    0x424c57
  424c54:	dec    ecx
  424c55:	jne    0x424c4e
  424c57:	mov    DWORD PTR [ebp-0x4],edi
  424c5a:	movzx  esi,al
  424c5d:	cmp    edi,DWORD PTR [ebp+0x28]
  424c60:	jb     0x4249c1
  424c66:	call   0x424c95
  424c6b:	sub    eax,eax
  424c6d:	lea    ebp,[esp+0x3c]
  424c71:	mov    edx,DWORD PTR [ebp+0x20]
  424c74:	mov    esi,DWORD PTR [ebp-0x8]
  424c77:	sub    esi,DWORD PTR [ebp+0x18]
  424c7a:	mov    DWORD PTR [edx],esi
  424c7c:	mov    edx,DWORD PTR [ebp+0x2c]
  424c7f:	mov    edi,DWORD PTR [edx+edi*2+0x33]
  424c83:	jl     0x424c9c
  424c85:	lods   eax,DWORD PTR ds:[esi]
  424c86:	outs   dx,DWORD PTR ds:[esi]
  424c87:	scas   al,BYTE PTR es:[edi]
  424c88:	hlt    
  424c89:	add    BYTE PTR [edx+edx*4],al
  424c8c:	test   DWORD PTR [edi-0x75cc1800],0x8dea3688
  424c96:	jbe    0x424c1f
  424c98:	xchg   DWORD PTR [edi-0x6974af75],eax
  424c9e:	mov    ss,WORD PTR [esi]
  424ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ca1:	loopne 0x424c58
  424ca3:	pop    esp
  424ca4:	push   0x73
  424ca6:	pop    esp
  424ca7:	not    DWORD PTR [edx+ebx*1-0x4b]
  424cab:	pushf  
  424cac:	or     cl,BYTE PTR [esi-0x52c658f6]
  424cb2:	pushf  
  424cb3:	or     ch,BYTE PTR [ebp-0x69ff95a4]
  424cb9:	mov    ch,0xbc
  424cbb:	call   0x970e:0x8e8a61c3
  424cc2:	xchg   ebx,eax
  424cc3:	pushf  
  424cc4:	sub    dl,BYTE PTR [ebx-0x3c60c972]
  424cca:	popa   
  424ccb:	mov    dl,BYTE PTR [ebx+0x3cb59a9c]
  424cd1:	stos   BYTE PTR es:[edi],al
  424cd2:	mov    ebp,0x33879c38
  424cd7:	mov    bh,BYTE PTR [ebp-0x727863c8]
  424cdd:	jbe    0x424c66
  424cdf:	xchg   DWORD PTR [edi-0x4a08ab75],eax
  424ce5:	mov    eax,0x188e6717
  424cea:	pop    ss
  424ceb:	pop    es
  424cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ced:	jae    0x424ca7
  424cef:	pop    ss
  424cf0:	clc    
  424cf1:	push   esp
  424cf2:	stc    
  424cf3:	mov    cl,0xcb
  424cf5:	xchg   BYTE PTR [eax+0x168e6717],bl
  424cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424cfc:	test   eax,0x8b0717d8
  424d01:	retf   
  424d02:	movzx  edx,WORD PTR [ebp+0x0]
  424d06:	shr    ecx,0xb
  424d09:	imul   ecx,edx
  424d0c:	cmp    DWORD PTR [esp+0x20],ecx
  424d10:	jae    0x424d29
  424d12:	mov    ebx,ecx
  424d14:	mov    ecx,0x800
  424d19:	sub    ecx,edx
  424d1b:	shr    ecx,0x5
  424d1e:	add    WORD PTR [ebp+0x0],cx
  424d22:	add    eax,eax
  424d24:	lea    ebp,[esp+0x40]
  424d28:	ret    
  424d29:	shr    edx,0x5
  424d2c:	sub    DWORD PTR [esp+0x20],ecx
  424d30:	sub    ebx,ecx
  424d32:	sub    WORD PTR [ebp+0x0],dx
  424d36:	add    eax,eax
  424d38:	add    eax,0x1
  424d3b:	lea    ebp,[esp+0x40]
  424d3f:	ret    
  424d40:	push   ebp
  424d41:	mov    ebp,esp
  424d43:	sub    esp,0x12c
  424d49:	push   ebx
  424d4a:	push   esi
  424d4b:	push   edi
  424d4c:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  424d53:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  424d5a:	mov    eax,DWORD PTR [ebp+0x8]
  424d5d:	mov    DWORD PTR [ebp+0x8],eax
  424d60:	mov    ecx,DWORD PTR [ebp-0x10]
  424d63:	mov    ebx,0x75108ac
  424d68:	xor    ecx,ebx
  424d6a:	mov    eax,0x3272f3
  424d6f:	add    ecx,eax
  424d71:	mov    DWORD PTR [ebp-0x24],ecx
  424d74:	mov    ecx,DWORD PTR [ebp-0x10]
  424d77:	xor    ecx,ebx
  424d79:	add    ecx,eax
  424d7b:	mov    DWORD PTR [ebp-0x40],ecx
  424d7e:	mov    ecx,DWORD PTR [ebp-0x10]
  424d81:	xor    ecx,ebx
  424d83:	add    ecx,eax
  424d85:	mov    DWORD PTR [ebp-0x3c],ecx
  424d88:	mov    ecx,DWORD PTR [ebp-0x10]
  424d8b:	xor    ecx,ebx
  424d8d:	add    ecx,eax
  424d8f:	mov    DWORD PTR [ebp-0xd8],ecx
  424d95:	mov    DWORD PTR [ebp-0x50],0xf89f05a1
  424d9c:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a1
  424da3:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  424daa:	push   0x25
  424dac:	pop    ecx
  424dad:	mov    DWORD PTR [ebp-0x30],ecx
  424db0:	mov    DWORD PTR [ebp-0x30],ecx
  424db3:	push   0x65
  424db5:	pop    ecx
  424db6:	mov    DWORD PTR [ebp-0x30],ecx
  424db9:	mov    DWORD PTR [ebp-0x30],ecx
  424dbc:	mov    DWORD PTR [ebp-0x30],0x4d
  424dc3:	mov    DWORD PTR [ebp-0x30],0x43
  424dca:	mov    ecx,DWORD PTR [ebp-0x10]
  424dcd:	xor    ecx,ebx
  424dcf:	add    ecx,eax
  424dd1:	mov    DWORD PTR [ebp-0x30],ecx
  424dd4:	mov    ecx,DWORD PTR [ebp-0x10]
  424dd7:	xor    ecx,ebx
  424dd9:	add    ecx,eax
  424ddb:	mov    DWORD PTR [ebp-0x30],ecx
  424dde:	mov    DWORD PTR [ebp-0x28],0x258
  424de5:	mov    DWORD PTR [ebp-0x34],0x36
  424dec:	mov    DWORD PTR [ebp-0x14],0x7a
  424df3:	lea    edi,[ebp-0x10c]
  424df9:	lea    esi,[ebp-0x12c]
  424dff:	call   0x425abf
  424e04:	dec    DWORD PTR [ebp-0x14]
  424e07:	jne    0x424df3
  424e09:	dec    DWORD PTR [ebp-0x34]
  424e0c:	jne    0x424dec
  424e0e:	dec    DWORD PTR [ebp-0x28]
  424e11:	jne    0x424de5
  424e13:	mov    DWORD PTR [ebp-0x28],0x400e
  424e1a:	mov    eax,DWORD PTR [ebp-0x10]
  424e1d:	xor    eax,ebx
  424e1f:	mov    esi,0x3272f3
  424e24:	add    eax,esi
  424e26:	mov    DWORD PTR [ebp-0x1c],eax
  424e29:	mov    eax,DWORD PTR [ebp-0x10]
  424e2c:	and    DWORD PTR [ebp-0x94],0x0
  424e33:	xor    eax,ebx
  424e35:	add    eax,esi
  424e37:	mov    DWORD PTR [ebp-0x38],eax
  424e3a:	mov    eax,fs:0x18
  424e40:	mov    DWORD PTR [ebp-0x94],eax
  424e46:	mov    eax,DWORD PTR [eax+0x30]
  424e49:	mov    DWORD PTR [ebp-0xcc],eax
  424e4f:	mov    eax,DWORD PTR [eax+0xc]
  424e52:	mov    DWORD PTR [ebp-0xc0],eax
  424e58:	mov    eax,DWORD PTR [ebp+0x8]
  424e5b:	lea    ecx,[ebp-0x94]
  424e61:	mov    DWORD PTR [eax+0x1a0],ecx
  424e67:	mov    eax,DWORD PTR [ebp+0x8]
  424e6a:	lea    ecx,[ebp-0xcc]
  424e70:	mov    DWORD PTR [eax+0x1a4],ecx
  424e76:	mov    eax,DWORD PTR [ebp+0x8]
  424e79:	push   DWORD PTR [ebp+0x8]
  424e7c:	lea    ecx,[ebp-0xc0]
  424e82:	mov    DWORD PTR [eax+0x1a8],ecx
  424e88:	call   0x427282
  424e8d:	mov    ecx,DWORD PTR [ebp-0x10]
  424e90:	xor    ecx,ebx
  424e92:	add    ecx,esi
  424e94:	cmp    ecx,eax
  424e96:	je     0x425219
  424e9c:	mov    eax,DWORD PTR [ebp+0x8]
  424e9f:	mov    eax,DWORD PTR [eax+0x194]
  424ea5:	mov    ecx,DWORD PTR [eax]
  424ea7:	mov    eax,DWORD PTR [ebp+0x8]
  424eaa:	mov    eax,DWORD PTR [eax+0x194]
  424eb0:	mov    eax,DWORD PTR [eax]
  424eb2:	add    eax,DWORD PTR [ecx+0x3c]
  424eb5:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb8:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424ebe:	lea    edx,[ebp-0xec]
  424ec4:	push   edx
  424ec5:	mov    edx,DWORD PTR [ebp+0x8]
  424ec8:	mov    edx,DWORD PTR [edx+0x18c]
  424ece:	mov    edx,DWORD PTR [edx]
  424ed0:	add    edx,DWORD PTR [eax+0x88]
  424ed6:	push   0x4
  424ed8:	push   DWORD PTR [eax+0x8c]
  424ede:	push   edx
  424edf:	call   DWORD PTR [ecx+0x1c]
  424ee2:	push   DWORD PTR [ebp+0x8]
  424ee5:	xor    eax,eax
  424ee7:	mov    DWORD PTR [ebp-0xa8],0x1b3c0c3a
  424ef1:	mov    DWORD PTR [ebp-0xa4],0x10370d22
  424efb:	mov    DWORD PTR [ebp-0xa0],0x420d1e08
  424f05:	mov    BYTE PTR [ebp-0x9c],0x83
  424f0c:	lea    edi,[ebp-0x9b]
  424f12:	stos   DWORD PTR es:[edi],eax
  424f13:	stos   WORD PTR es:[edi],ax
  424f15:	stos   BYTE PTR es:[edi],al
  424f16:	xor    eax,eax
  424f18:	mov    DWORD PTR [ebp-0xbc],0x1b3c0c3a
  424f22:	mov    DWORD PTR [ebp-0xb8],0x10370d22
  424f2c:	mov    DWORD PTR [ebp-0xb4],0x280d1e08
  424f36:	mov    BYTE PTR [ebp-0xb0],0x83
  424f3d:	lea    edi,[ebp-0xaf]
  424f43:	stos   DWORD PTR es:[edi],eax
  424f44:	stos   WORD PTR es:[edi],ax
  424f46:	stos   BYTE PTR es:[edi],al
  424f47:	mov    edi,DWORD PTR [ebp+0x8]
  424f4a:	mov    eax,DWORD PTR [ebp+0x8]
  424f4d:	mov    edx,DWORD PTR [eax+0x1b8]
  424f53:	mov    DWORD PTR [ebp-0x68],0xd0f0c17
  424f5a:	mov    DWORD PTR [ebp-0x64],0x1a13161c
  424f61:	mov    WORD PTR [ebp-0x60],0x8342
  424f67:	mov    DWORD PTR [ebp-0x90],0x1b3c0c3a
  424f71:	mov    DWORD PTR [ebp-0x8c],0x17420d22
  424f7b:	mov    DWORD PTR [ebp-0x88],0x31221b13
  424f85:	mov    DWORD PTR [ebp-0x84],0xd1e160e
  424f8f:	mov    DWORD PTR [ebp-0x80],0x83421c1a
  424f96:	mov    DWORD PTR [ebp-0x7c],0x1b3c0c3a
  424f9d:	mov    DWORD PTR [ebp-0x78],0x17420d22
  424fa4:	mov    DWORD PTR [ebp-0x74],0x31221b13
  424fab:	mov    DWORD PTR [ebp-0x70],0xd1e160e
  424fb2:	mov    DWORD PTR [ebp-0x6c],0x83281c1a
  424fb9:	call   0x4272b1
  424fbe:	push   eax
  424fbf:	mov    eax,DWORD PTR [ebp+0x8]
  424fc2:	mov    eax,DWORD PTR [eax+0x1a8]
  424fc8:	push   DWORD PTR [eax]
  424fca:	call   0x426f52
  424fcf:	test   eax,eax
  424fd1:	jne    0x425023
  424fd3:	mov    eax,DWORD PTR [ebp+0x8]
  424fd6:	mov    eax,DWORD PTR [eax+0x1e0]
  424fdc:	mov    edi,DWORD PTR [ebp+0x8]
  424fdf:	add    eax,0x4
  424fe2:	mov    DWORD PTR [ebp-0x20],eax
  424fe5:	mov    eax,DWORD PTR [ebp+0x8]
  424fe8:	mov    edx,DWORD PTR [eax+0x1b8]
  424fee:	call   0x4272b1
  424ff3:	push   eax
  424ff4:	mov    eax,DWORD PTR [ebp-0x20]
  424ff7:	call   DWORD PTR [eax]
  424ff9:	test   eax,eax
  424ffb:	jne    0x425023
  424ffd:	mov    eax,DWORD PTR [ebp+0x8]
  425000:	mov    eax,DWORD PTR [eax+0x1e0]
  425006:	mov    edi,DWORD PTR [ebp+0x8]
  425009:	add    eax,0x10
  42500c:	mov    DWORD PTR [ebp-0x20],eax
  42500f:	mov    eax,DWORD PTR [ebp+0x8]
  425012:	mov    edx,DWORD PTR [eax+0x1b8]
  425018:	call   0x4272b1
  42501d:	push   eax
  42501e:	mov    eax,DWORD PTR [ebp-0x20]
  425021:	call   DWORD PTR [eax]
  425023:	mov    eax,DWORD PTR [ebp-0x10]
  425026:	mov    ecx,DWORD PTR [ebp-0x28]
  425029:	xor    eax,ebx
  42502b:	add    eax,esi
  42502d:	cmp    eax,ecx
  42502f:	je     0x4251f2
  425035:	mov    eax,DWORD PTR [ebp-0x18]
  425038:	xor    eax,ebx
  42503a:	mov    ecx,0xffcd8d0d
  42503f:	sub    ecx,eax
  425041:	add    ecx,DWORD PTR [ebp-0x28]
  425044:	mov    eax,DWORD PTR [ebp-0x1c]
  425047:	cmp    eax,ecx
  425049:	ja     0x4251f2
  42504f:	mov    DWORD PTR [ebp-0x34],0x0
  425056:	push   DWORD PTR [ebp+0x8]
  425059:	mov    edi,DWORD PTR [ebp+0x8]
  42505c:	mov    eax,DWORD PTR [ebp+0x8]
  42505f:	mov    edx,DWORD PTR [eax+0x1b4]
  425065:	call   0x4272b1
  42506a:	push   eax
  42506b:	mov    eax,DWORD PTR [ebp+0x8]
  42506e:	mov    eax,DWORD PTR [eax+0x1a8]
  425074:	push   DWORD PTR [eax]
  425076:	call   0x426f52
  42507b:	mov    ecx,DWORD PTR [ebp+0x8]
  42507e:	mov    ecx,DWORD PTR [ecx+0x19c]
  425084:	mov    DWORD PTR [ecx],eax
  425086:	mov    eax,DWORD PTR [ebp+0x8]
  425089:	mov    edi,DWORD PTR [eax+0x1e0]
  42508f:	mov    esi,DWORD PTR [ebp+0x8]
  425092:	xor    eax,eax
  425094:	lea    edx,[ebp-0x7c]
  425097:	call   0x4272e7
  42509c:	push   eax
  42509d:	mov    eax,DWORD PTR [ebp+0x8]
  4250a0:	mov    eax,DWORD PTR [eax+0x19c]
  4250a6:	push   DWORD PTR [eax]
  4250a8:	call   DWORD PTR [edi+0x8]
  4250ab:	mov    DWORD PTR [ebp-0x20],eax
  4250ae:	mov    eax,DWORD PTR [ebp+0x8]
  4250b1:	mov    edi,DWORD PTR [eax+0x1e0]
  4250b7:	mov    esi,DWORD PTR [ebp+0x8]
  4250ba:	xor    eax,eax
  4250bc:	lea    edx,[ebp-0x90]
  4250c2:	call   0x4272e7
  4250c7:	push   eax
  4250c8:	mov    eax,DWORD PTR [ebp+0x8]
  4250cb:	mov    eax,DWORD PTR [eax+0x19c]
  4250d1:	push   DWORD PTR [eax]
  4250d3:	call   DWORD PTR [edi+0x8]
  4250d6:	mov    eax,DWORD PTR [ebp+0x8]
  4250d9:	mov    edi,DWORD PTR [eax+0x1e0]
  4250df:	mov    esi,DWORD PTR [ebp+0x8]
  4250e2:	xor    eax,eax
  4250e4:	lea    edx,[ebp-0xa8]
  4250ea:	call   0x4272e7
  4250ef:	push   eax
  4250f0:	mov    eax,DWORD PTR [ebp+0x8]
  4250f3:	mov    eax,DWORD PTR [eax+0x19c]
  4250f9:	push   DWORD PTR [eax]
  4250fb:	call   DWORD PTR [edi+0x8]
  4250fe:	and    DWORD PTR [ebp-0x8],0x0
  425102:	mov    DWORD PTR [ebp-0x48],eax
  425105:	mov    eax,DWORD PTR [ebp-0x8]
  425108:	and    eax,0x7
  42510b:	add    eax,0x31
  42510e:	push   eax
  42510f:	call   DWORD PTR [ebp-0x20]
  425112:	test   eax,eax
  425114:	je     0x425158
  425116:	mov    eax,DWORD PTR [ebp-0x8]
  425119:	push   0x19
  42511b:	xor    edx,edx
  42511d:	pop    ecx
  42511e:	div    ecx
  425120:	add    dl,0x41
  425123:	movzx  eax,dl
  425126:	push   eax
  425127:	call   DWORD PTR [ebp-0x48]
  42512a:	test   eax,eax
  42512c:	jne    0x425158
  42512e:	mov    eax,DWORD PTR [ebp+0x8]
  425131:	mov    edi,DWORD PTR [eax+0x1e0]
  425137:	mov    esi,DWORD PTR [ebp+0x8]
  42513a:	xor    eax,eax
  42513c:	lea    edx,[ebp-0x68]
  42513f:	call   0x4272e7
  425144:	push   eax
  425145:	mov    eax,DWORD PTR [ebp+0x8]
  425148:	mov    eax,DWORD PTR [eax+0x198]
  42514e:	push   DWORD PTR [eax]
  425150:	call   DWORD PTR [edi+0x8]
  425153:	mov    DWORD PTR [ebp-0x14],eax
  425156:	jmp    0x42515c
  425158:	and    DWORD PTR [ebp-0x14],0x0
  42515c:	inc    DWORD PTR [ebp-0x8]
  42515f:	cmp    DWORD PTR [ebp-0x8],0x10
  425163:	jb     0x425105
  425165:	mov    eax,DWORD PTR [ebp-0x18]
  425168:	mov    esi,DWORD PTR [ebp+0x8]
  42516b:	xor    eax,ebx
  42516d:	mov    edi,0x3272f3
  425172:	add    eax,edi
  425174:	lea    edx,[ebp-0x10c]
  42517a:	call   0x4272e7
  42517f:	push   eax
  425180:	mov    eax,DWORD PTR [ebp-0x10]
  425183:	mov    esi,DWORD PTR [ebp+0x8]
  425186:	xor    eax,ebx
  425188:	add    eax,edi
  42518a:	lea    edx,[ebp-0x12c]
  425190:	call   0x4272e7
  425195:	push   eax
  425196:	call   DWORD PTR [ebp-0x14]
  425199:	mov    ecx,DWORD PTR [ebp-0x10]
  42519c:	xor    ecx,ebx
  42519e:	add    ecx,edi
  4251a0:	cmp    ecx,eax
  4251a2:	jne    0x4251ab
  4251a4:	mov    DWORD PTR [ebp-0x34],0x1
  4251ab:	mov    eax,DWORD PTR [ebp-0x18]
  4251ae:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251b1:	xor    eax,ebx
  4251b3:	lea    eax,[eax+ecx*1+0x3272f3]
  4251ba:	mov    DWORD PTR [ebp-0x1c],eax
  4251bd:	mov    eax,DWORD PTR [ebp-0x34]
  4251c0:	test   eax,eax
  4251c2:	je     0x4251d6
  4251c4:	mov    eax,DWORD PTR [ebp-0x18]
  4251c7:	mov    ecx,DWORD PTR [ebp-0x38]
  4251ca:	xor    eax,ebx
  4251cc:	lea    eax,[eax+ecx*1+0x3272f3]
  4251d3:	mov    DWORD PTR [ebp-0x38],eax
  4251d6:	mov    eax,DWORD PTR [ebp-0x18]
  4251d9:	xor    eax,ebx
  4251db:	mov    ecx,0xffcd8d0d
  4251e0:	sub    ecx,eax
  4251e2:	add    ecx,DWORD PTR [ebp-0x28]
  4251e5:	mov    eax,DWORD PTR [ebp-0x1c]
  4251e8:	cmp    eax,ecx
  4251ea:	jbe    0x42504f
  4251f0:	mov    esi,edi
  4251f2:	mov    eax,DWORD PTR [ebp-0x38]
  4251f5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251f8:	cmp    ecx,eax
  4251fa:	jne    0x42520d
  4251fc:	push   DWORD PTR [ebp+0x8]
  4251ff:	lea    eax,[ebp-0x40]
  425202:	push   eax
  425203:	call   0x427d56
  425208:	mov    DWORD PTR [ebp-0x24],eax
  42520b:	jmp    0x425219
  42520d:	mov    eax,DWORD PTR [ebp-0x24]
  425210:	mov    ecx,DWORD PTR [ebp-0x18]
  425213:	xor    ecx,ebx
  425215:	add    ecx,esi
  425217:	xor    DWORD PTR [eax],ecx
  425219:	mov    eax,DWORD PTR [ebp-0x10]
  42521c:	mov    ecx,DWORD PTR [ebp-0x24]
  42521f:	xor    eax,ebx
  425221:	add    eax,esi
  425223:	cmp    eax,ecx
  425225:	je     0x42599d
  42522b:	mov    eax,DWORD PTR [ebp-0x10]
  42522e:	mov    ecx,DWORD PTR [ebp-0x40]
  425231:	xor    eax,ebx
  425233:	add    eax,esi
  425235:	cmp    eax,ecx
  425237:	je     0x42599d
  42523d:	mov    eax,DWORD PTR [ebp-0x10]
  425240:	xor    eax,ebx
  425242:	add    eax,esi
  425244:	jmp    0x425262
  425246:	mov    edi,DWORD PTR [ebp-0x24]
  425249:	mov    cl,al
  42524b:	and    cl,0x1f
  42524e:	or     dl,0xff
  425251:	sub    dl,cl
  425253:	add    BYTE PTR [edi+eax*1],dl
  425256:	mov    ecx,DWORD PTR [ebp-0x18]
  425259:	xor    ecx,ebx
  42525b:	lea    eax,[eax+ecx*1+0x3272f3]
  425262:	mov    ecx,DWORD PTR [ebp-0x40]
  425265:	cmp    eax,ecx
  425267:	jb     0x425246
  425269:	mov    eax,DWORD PTR [ebp-0x40]
  42526c:	mov    DWORD PTR [ebp-0x28],eax
  42526f:	mov    eax,DWORD PTR [ebp-0x24]
  425272:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  425279:	mov    DWORD PTR [ebp-0xd4],eax
  42527f:	mov    edi,0xf89c85a2
  425284:	mov    DWORD PTR [ebp-0x2c],edi
  425287:	mov    eax,DWORD PTR [ebp-0x38]
  42528a:	xor    eax,ebx
  42528c:	add    eax,esi
  42528e:	mov    DWORD PTR [ebp-0xc],eax
  425291:	mov    eax,DWORD PTR [ebp-0x38]
  425294:	xor    eax,ebx
  425296:	add    eax,esi
  425298:	mov    DWORD PTR [ebp-0x8],eax
  42529b:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  4252a2:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  4252a9:	mov    eax,DWORD PTR [ebp-0x38]
  4252ac:	mov    ecx,DWORD PTR [ebp-0x28]
  4252af:	xor    eax,ebx
  4252b1:	add    eax,esi
  4252b3:	cmp    ecx,eax
  4252b5:	je     0x4254b4
  4252bb:	jmp    0x425490
  4252c0:	mov    ecx,DWORD PTR [ebp-0xc]
  4252c3:	mov    eax,DWORD PTR [ebp-0x28]
  4252c6:	sub    eax,ecx
  4252c8:	mov    ecx,DWORD PTR [ebp-0x48]
  4252cb:	xor    ecx,ebx
  4252cd:	add    ecx,esi
  4252cf:	xor    edx,edx
  4252d1:	div    ecx
  4252d3:	mov    DWORD PTR [ebp-0x8],eax
  4252d6:	mov    eax,DWORD PTR [ebp-0x4c]
  4252d9:	mov    ecx,DWORD PTR [ebp-0x8]
  4252dc:	xor    eax,ebx
  4252de:	add    eax,esi
  4252e0:	cmp    ecx,eax
  4252e2:	jbe    0x4252ee
  4252e4:	mov    eax,DWORD PTR [ebp-0x4c]
  4252e7:	xor    eax,ebx
  4252e9:	add    eax,esi
  4252eb:	mov    DWORD PTR [ebp-0x8],eax
  4252ee:	mov    eax,DWORD PTR [ebp-0x48]
  4252f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4252f4:	xor    eax,ebx
  4252f6:	add    eax,esi
  4252f8:	imul   eax,ecx
  4252fb:	mov    DWORD PTR [ebp-0x8],eax
  4252fe:	mov    eax,DWORD PTR [ebp-0x38]
  425301:	mov    ecx,DWORD PTR [ebp-0x8]
  425304:	xor    eax,ebx
  425306:	add    eax,esi
  425308:	cmp    ecx,eax
  42530a:	je     0x42547e
  425310:	mov    eax,DWORD PTR [ebp-0x8]
  425313:	mov    DWORD PTR [ebp-0x14],eax
  425316:	mov    eax,DWORD PTR [ebp-0xc]
  425319:	add    eax,DWORD PTR [ebp-0xd4]
  42531f:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  425326:	mov    DWORD PTR [ebp-0x34],edi
  425329:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  425333:	mov    DWORD PTR [ebp-0x8],eax
  425336:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  42533d:	mov    DWORD PTR [ebp-0x1c],edi
  425340:	mov    eax,DWORD PTR [ebp-0x20]
  425343:	xor    eax,ebx
  425345:	add    eax,esi
  425347:	jmp    0x42543d
  42534c:	mov    DWORD PTR [ebp-0xe0],0xf89c85b4
  425356:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  425360:	mov    eax,DWORD PTR [ebp-0x1c]
  425363:	mov    ecx,DWORD PTR [ebp-0x44]
  425366:	xor    eax,ebx
  425368:	add    eax,esi
  42536a:	imul   eax,ecx
  42536d:	mov    ecx,DWORD PTR [ebp-0x8]
  425370:	mov    al,BYTE PTR [eax+ecx*1]
  425373:	mov    BYTE PTR [ebp-0x2],al
  425376:	mov    eax,DWORD PTR [ebp-0x1c]
  425379:	mov    ecx,DWORD PTR [ebp-0x44]
  42537c:	xor    eax,ebx
  42537e:	add    eax,esi
  425380:	imul   eax,ecx
  425383:	mov    ecx,DWORD PTR [ebp-0xe8]
  425389:	xor    ecx,ebx
  42538b:	add    eax,ecx
  42538d:	mov    ecx,DWORD PTR [ebp-0x8]
  425390:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  425398:	mov    ecx,DWORD PTR [ebp-0xe0]
  42539e:	xor    ecx,ebx
  4253a0:	lea    eax,[ecx+eax*1+0x3272f3]
  4253a7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4253ab:	xor    ecx,eax
  4253ad:	mov    BYTE PTR [ebp-0x2],cl
  4253b0:	mov    al,BYTE PTR [ebp-0x2]
  4253b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4253b6:	mov    edx,DWORD PTR [ebp-0x44]
  4253b9:	xor    ecx,ebx
  4253bb:	add    ecx,esi
  4253bd:	imul   ecx,edx
  4253c0:	mov    edx,DWORD PTR [ebp-0x8]
  4253c3:	mov    BYTE PTR [ecx+edx*1],al
  4253c6:	mov    eax,DWORD PTR [ebp-0x1c]
  4253c9:	mov    ecx,DWORD PTR [ebp-0x44]
  4253cc:	xor    eax,ebx
  4253ce:	add    eax,esi
  4253d0:	imul   eax,ecx
  4253d3:	mov    ecx,DWORD PTR [ebp-0x8]
  4253d6:	mov    al,BYTE PTR [eax+ecx*1]
  4253d9:	mov    BYTE PTR [ebp-0x2],al
  4253dc:	mov    eax,DWORD PTR [ebp-0x1c]
  4253df:	mov    ecx,DWORD PTR [ebp-0x44]
  4253e2:	xor    eax,ebx
  4253e4:	add    eax,esi
  4253e6:	imul   eax,ecx
  4253e9:	mov    ecx,DWORD PTR [ebp-0x34]
  4253ec:	xor    ecx,ebx
  4253ee:	add    eax,ecx
  4253f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4253f3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4253fb:	mov    ecx,DWORD PTR [ebp-0xc4]
  425401:	xor    ecx,ebx
  425403:	lea    eax,[ecx+eax*1+0x3272f3]
  42540a:	movzx  ecx,BYTE PTR [ebp-0x2]
  42540e:	xor    ecx,eax
  425410:	mov    BYTE PTR [ebp-0x2],cl
  425413:	mov    al,BYTE PTR [ebp-0x2]
  425416:	mov    ecx,DWORD PTR [ebp-0x1c]
  425419:	mov    edx,DWORD PTR [ebp-0x44]
  42541c:	xor    ecx,ebx
  42541e:	add    ecx,esi
  425420:	imul   ecx,edx
  425423:	mov    edx,DWORD PTR [ebp-0x8]
  425426:	mov    BYTE PTR [ecx+edx*1],al
  425429:	mov    eax,DWORD PTR [ebp-0x30]
  42542c:	mov    ecx,DWORD PTR [ebp-0x34]
  42542f:	xor    eax,ebx
  425431:	xor    ecx,ebx
  425433:	add    eax,esi
  425435:	add    ecx,esi
  425437:	imul   eax,ecx
  42543a:	add    eax,DWORD PTR [ebp-0x44]
  42543d:	mov    DWORD PTR [ebp-0x44],eax
  425440:	mov    eax,DWORD PTR [ebp-0x44]
  425443:	mov    ecx,DWORD PTR [ebp-0x14]
  425446:	cmp    ecx,eax
  425448:	jb     0x42534c
  42544e:	mov    eax,DWORD PTR [ebp-0x34]
  425451:	mov    ecx,DWORD PTR [ebp-0x14]
  425454:	xor    eax,ebx
  425456:	add    eax,esi
  425458:	imul   eax,ecx
  42545b:	mov    ecx,DWORD PTR [ebp-0x20]
  42545e:	xor    ecx,ebx
  425460:	add    ecx,esi
  425462:	or     eax,ecx
  425464:	mov    ecx,DWORD PTR [ebp-0x2c]
  425467:	xor    ecx,ebx
  425469:	add    eax,ecx
  42546b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42546e:	xor    ecx,ebx
  425470:	add    eax,ecx
  425472:	mov    ecx,DWORD PTR [ebp-0xc]
  425475:	lea    eax,[eax+ecx*1+0x64e5e6]
  42547c:	jmp    0x42548d
  42547e:	mov    eax,DWORD PTR [ebp-0x2c]
  425481:	mov    ecx,DWORD PTR [ebp-0xc]
  425484:	xor    eax,ebx
  425486:	lea    eax,[eax+ecx*1+0x3272f3]
  42548d:	mov    DWORD PTR [ebp-0xc],eax
  425490:	mov    eax,DWORD PTR [ebp-0x2c]
  425493:	xor    eax,ebx
  425495:	mov    ecx,0xffcd8d0d
  42549a:	sub    ecx,eax
  42549c:	add    ecx,DWORD PTR [ebp-0x28]
  42549f:	mov    eax,DWORD PTR [ebp-0x2c]
  4254a2:	mov    edx,DWORD PTR [ebp-0xc]
  4254a5:	xor    eax,ebx
  4254a7:	add    eax,esi
  4254a9:	imul   eax,edx
  4254ac:	cmp    eax,ecx
  4254ae:	jbe    0x4252c0
  4254b4:	mov    eax,DWORD PTR [ebp-0x10]
  4254b7:	mov    ecx,DWORD PTR [ebp-0x40]
  4254ba:	mov    eax,DWORD PTR [ebp+0x8]
  4254bd:	mov    edx,DWORD PTR [ebp-0x54]
  4254c0:	mov    eax,DWORD PTR [eax+0x1e0]
  4254c6:	xor    edx,ebx
  4254c8:	add    edx,esi
  4254ca:	push   edx
  4254cb:	mov    edx,DWORD PTR [ebp-0x3c]
  4254ce:	xor    edx,ebx
  4254d0:	add    edx,esi
  4254d2:	push   edx
  4254d3:	push   ecx
  4254d4:	mov    DWORD PTR [ebp-0x30],ecx
  4254d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4254da:	xor    ecx,ebx
  4254dc:	add    ecx,esi
  4254de:	push   ecx
  4254df:	call   DWORD PTR [eax+0x14]
  4254e2:	mov    edi,eax
  4254e4:	mov    eax,DWORD PTR [ebp-0x10]
  4254e7:	xor    eax,ebx
  4254e9:	add    eax,esi
  4254eb:	cmp    eax,edi
  4254ed:	je     0x425548
  4254ef:	mov    eax,DWORD PTR [ebp-0x10]
  4254f2:	jmp    0x425515
  4254f4:	mov    ecx,DWORD PTR [ebp-0x24]
  4254f7:	xor    eax,ebx
  4254f9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f3]
  425500:	mov    BYTE PTR [eax+edi*1+0x3272f3],cl
  425507:	mov    ecx,DWORD PTR [ebp-0x18]
  42550a:	xor    ecx,ebx
  42550c:	lea    eax,[ecx+eax*1+0x3272f3]
  425513:	xor    eax,ebx
  425515:	mov    ecx,DWORD PTR [ebp-0x40]
  425518:	sub    ecx,esi
  42551a:	xor    ecx,ebx
  42551c:	cmp    eax,ecx
  42551e:	jne    0x4254f4
  425520:	mov    eax,DWORD PTR [ebp+0x8]
  425523:	mov    ecx,DWORD PTR [ebp-0x50]
  425526:	mov    eax,DWORD PTR [eax+0x1e0]
  42552c:	xor    ecx,ebx
  42552e:	add    ecx,esi
  425530:	push   ecx
  425531:	mov    ecx,DWORD PTR [ebp-0x10]
  425534:	xor    ecx,ebx
  425536:	add    ecx,esi
  425538:	push   ecx
  425539:	push   DWORD PTR [ebp-0x24]
  42553c:	call   DWORD PTR [eax+0x18]
  42553f:	mov    eax,DWORD PTR [ebp-0x30]
  425542:	mov    DWORD PTR [ebp-0x24],edi
  425545:	mov    DWORD PTR [ebp-0x40],eax
  425548:	mov    edi,DWORD PTR [ebp-0x24]
  42554b:	mov    eax,DWORD PTR [ebp-0x18]
  42554e:	mov    ecx,DWORD PTR [ebp-0x10]
  425551:	xor    eax,ebx
  425553:	mov    DWORD PTR [ebp-0x30],edi
  425556:	add    eax,esi
  425558:	mov    DWORD PTR [ebp-0x5c],0x422b332b
  42555f:	mov    DWORD PTR [ebp-0x58],0x342b3c2b
  425566:	jmp    0x42559a
  425568:	xor    ecx,ebx
  42556a:	mov    dl,BYTE PTR [ebp+ecx*1+0x327297]
  425571:	xor    dl,0x7d
  425574:	add    dl,0x2
  425577:	mov    DWORD PTR [ebp-0x3c],ecx
  42557a:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f3]
  425582:	movzx  edx,dl
  425585:	cmp    ecx,edx
  425587:	jne    0x4255a4
  425589:	mov    ecx,DWORD PTR [ebp-0x18]
  42558c:	mov    edx,DWORD PTR [ebp-0x3c]
  42558f:	xor    ecx,ebx
  425591:	lea    ecx,[ecx+edx*1+0x3272f3]
  425598:	xor    ecx,ebx
  42559a:	cmp    ecx,0xf89c85b9
  4255a0:	jne    0x425568
  4255a2:	jmp    0x4255ab
  4255a4:	mov    eax,DWORD PTR [ebp-0x10]
  4255a7:	xor    eax,ebx
  4255a9:	add    eax,esi
  4255ab:	mov    ecx,DWORD PTR [ebp-0x10]
  4255ae:	xor    ecx,ebx
  4255b0:	add    ecx,esi
  4255b2:	cmp    ecx,eax
  4255b4:	je     0x425727
  4255ba:	mov    eax,DWORD PTR [edi+0x8]
  4255bd:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  4255c4:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d0
  4255cb:	mov    DWORD PTR [ebp-0x48],0xf89cb5a1
  4255d2:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4255d9:	mov    DWORD PTR [ebp-0x14],eax
  4255dc:	mov    eax,DWORD PTR [ebp+0x8]
  4255df:	mov    ecx,DWORD PTR [ebp-0x20]
  4255e2:	xor    ecx,ebx
  4255e4:	add    ecx,esi
  4255e6:	push   ecx
  4255e7:	mov    ecx,DWORD PTR [ebp-0x48]
  4255ea:	mov    eax,DWORD PTR [eax+0x1e0]
  4255f0:	xor    ecx,ebx
  4255f2:	add    ecx,esi
  4255f4:	push   ecx
  4255f5:	mov    ecx,DWORD PTR [ebp-0x3c]
  4255f8:	xor    ecx,ebx
  4255fa:	add    ecx,esi
  4255fc:	push   ecx
  4255fd:	mov    ecx,DWORD PTR [ebp-0xc]
  425600:	xor    ecx,ebx
  425602:	add    ecx,esi
  425604:	push   ecx
  425605:	call   DWORD PTR [eax+0x14]
  425608:	mov    edi,eax
  42560a:	mov    eax,DWORD PTR [ebp+0x8]
  42560d:	mov    ecx,DWORD PTR [ebp-0x20]
  425610:	mov    eax,DWORD PTR [eax+0x1e0]
  425616:	xor    ecx,ebx
  425618:	add    ecx,esi
  42561a:	push   ecx
  42561b:	mov    ecx,DWORD PTR [ebp-0x48]
  42561e:	xor    ecx,ebx
  425620:	add    ecx,esi
  425622:	push   ecx
  425623:	mov    ecx,DWORD PTR [ebp-0xc]
  425626:	push   DWORD PTR [ebp-0x14]
  425629:	xor    ecx,ebx
  42562b:	add    ecx,esi
  42562d:	push   ecx
  42562e:	call   DWORD PTR [eax+0x14]
  425631:	mov    ecx,DWORD PTR [ebp-0xc]
  425634:	xor    ecx,ebx
  425636:	add    ecx,esi
  425638:	mov    DWORD PTR [ebp-0x20],eax
  42563b:	cmp    ecx,edi
  42563d:	je     0x4259ca
  425643:	mov    ecx,DWORD PTR [ebp-0xc]
  425646:	xor    ecx,ebx
  425648:	add    ecx,esi
  42564a:	cmp    ecx,eax
  42564c:	je     0x4259ca
  425652:	mov    DWORD PTR [ebp-0x3c],0xf89c85bc
  425659:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  425660:	mov    ecx,DWORD PTR [ebp-0x3c]
  425663:	xor    cl,0xac
  425666:	sub    cl,0xd
  425669:	mov    BYTE PTR [edi],cl
  42566b:	mov    ecx,DWORD PTR [ebp-0xc]
  42566e:	xor    cl,0xac
  425671:	sub    cl,0xd
  425674:	mov    BYTE PTR [edi+0x1],cl
  425677:	mov    ecx,DWORD PTR [ebp-0x54]
  42567a:	xor    cl,0xac
  42567d:	sub    cl,0xd
  425680:	mov    BYTE PTR [edi+0x2],cl
  425683:	and    DWORD PTR [ebp-0xc8],0x0
  42568a:	and    DWORD PTR [ebp-0xdc],0x0
  425691:	lea    ecx,[ebp-0xdc]
  425697:	push   ecx
  425698:	push   DWORD PTR [ebp-0x14]
  42569b:	push   eax
  42569c:	lea    eax,[ebp-0xc8]
  4256a2:	push   eax
  4256a3:	mov    eax,DWORD PTR [ebp-0x30]
  4256a6:	push   DWORD PTR [eax+0xc]
  4256a9:	mov    eax,DWORD PTR [ebp-0x24]
  4256ac:	add    eax,0x10
  4256af:	push   eax
  4256b0:	push   edi
  4256b1:	call   0x424957
  4256b6:	mov    DWORD PTR [ebp-0x3c],eax
  4256b9:	mov    eax,DWORD PTR [ebp+0x8]
  4256bc:	mov    ecx,DWORD PTR [ebp-0x50]
  4256bf:	mov    eax,DWORD PTR [eax+0x1e0]
  4256c5:	xor    ecx,ebx
  4256c7:	add    ecx,esi
  4256c9:	push   ecx
  4256ca:	mov    ecx,DWORD PTR [ebp-0xc]
  4256cd:	xor    ecx,ebx
  4256cf:	add    ecx,esi
  4256d1:	push   ecx
  4256d2:	push   edi
  4256d3:	call   DWORD PTR [eax+0x18]
  4256d6:	mov    eax,DWORD PTR [ebp-0x3c]
  4256d9:	add    eax,0xffcd8d0d
  4256de:	xor    eax,ebx
  4256e0:	cmp    eax,0xf89c85a1
  4256e5:	mov    eax,DWORD PTR [ebp+0x8]
  4256e8:	mov    eax,DWORD PTR [eax+0x1e0]
  4256ee:	mov    ecx,DWORD PTR [ebp-0x50]
  4256f1:	jne    0x425714
  4256f3:	xor    ecx,ebx
  4256f5:	add    ecx,esi
  4256f7:	push   ecx
  4256f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4256fb:	xor    ecx,ebx
  4256fd:	add    ecx,esi
  4256ff:	push   ecx
  425700:	push   DWORD PTR [ebp-0x24]
  425703:	call   DWORD PTR [eax+0x18]
  425706:	mov    eax,DWORD PTR [ebp-0x20]
  425709:	mov    DWORD PTR [ebp-0x24],eax
  42570c:	mov    eax,DWORD PTR [ebp-0x14]
  42570f:	mov    DWORD PTR [ebp-0x40],eax
  425712:	jmp    0x425727
  425714:	xor    ecx,ebx
  425716:	add    ecx,esi
  425718:	push   ecx
  425719:	mov    ecx,DWORD PTR [ebp-0xc]
  42571c:	xor    ecx,ebx
  42571e:	add    ecx,esi
  425720:	push   ecx
  425721:	push   DWORD PTR [ebp-0x20]
  425724:	call   DWORD PTR [eax+0x18]
  425727:	mov    eax,DWORD PTR [ebp-0x40]
  42572a:	mov    DWORD PTR [ebp-0x38],eax
  42572d:	mov    eax,DWORD PTR [ebp-0x24]
  425730:	mov    DWORD PTR [ebp-0x28],0xf89c85a1
  425737:	mov    DWORD PTR [ebp-0x3c],eax
  42573a:	mov    edi,0xf89c85a2
  42573f:	mov    DWORD PTR [ebp-0x2c],edi
  425742:	mov    eax,DWORD PTR [ebp-0x28]
  425745:	xor    eax,ebx
  425747:	add    eax,esi
  425749:	mov    DWORD PTR [ebp-0xc],eax
  42574c:	mov    eax,DWORD PTR [ebp-0x28]
  42574f:	xor    eax,ebx
  425751:	add    eax,esi
  425753:	mov    DWORD PTR [ebp-0x14],eax
  425756:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  42575d:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  425764:	mov    eax,DWORD PTR [ebp-0x28]
  425767:	mov    ecx,DWORD PTR [ebp-0x38]
  42576a:	xor    eax,ebx
  42576c:	add    eax,esi
  42576e:	cmp    ecx,eax
  425770:	je     0x425966
  425776:	jmp    0x425942
  42577b:	mov    ecx,DWORD PTR [ebp-0xc]
  42577e:	mov    eax,DWORD PTR [ebp-0x38]
  425781:	sub    eax,ecx
  425783:	mov    ecx,DWORD PTR [ebp-0x48]
  425786:	xor    ecx,ebx
  425788:	add    ecx,esi
  42578a:	xor    edx,edx
  42578c:	div    ecx
  42578e:	mov    DWORD PTR [ebp-0x14],eax
  425791:	mov    eax,DWORD PTR [ebp-0x20]
  425794:	mov    ecx,DWORD PTR [ebp-0x14]
  425797:	xor    eax,ebx
  425799:	add    eax,esi
  42579b:	cmp    ecx,eax
  42579d:	jbe    0x4257a9
  42579f:	mov    eax,DWORD PTR [ebp-0x20]
  4257a2:	xor    eax,ebx
  4257a4:	add    eax,esi
  4257a6:	mov    DWORD PTR [ebp-0x14],eax
  4257a9:	mov    eax,DWORD PTR [ebp-0x48]
  4257ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4257af:	xor    eax,ebx
  4257b1:	add    eax,esi
  4257b3:	imul   eax,ecx
  4257b6:	mov    DWORD PTR [ebp-0x14],eax
  4257b9:	mov    eax,DWORD PTR [ebp-0x28]
  4257bc:	mov    ecx,DWORD PTR [ebp-0x14]
  4257bf:	xor    eax,ebx
  4257c1:	add    eax,esi
  4257c3:	cmp    ecx,eax
  4257c5:	je     0x425930
  4257cb:	mov    eax,DWORD PTR [ebp-0x14]
  4257ce:	mov    DWORD PTR [ebp-0x34],eax
  4257d1:	mov    eax,DWORD PTR [ebp-0xc]
  4257d4:	add    eax,DWORD PTR [ebp-0x3c]
  4257d7:	mov    DWORD PTR [ebp-0x4c],0xf89c85a1
  4257de:	mov    DWORD PTR [ebp-0x14],edi
  4257e1:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  4257e8:	mov    DWORD PTR [ebp-0x1c],eax
  4257eb:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  4257f2:	mov    DWORD PTR [ebp-0x8],edi
  4257f5:	mov    eax,DWORD PTR [ebp-0x4c]
  4257f8:	xor    eax,ebx
  4257fa:	add    eax,esi
  4257fc:	jmp    0x4258ef
  425801:	mov    DWORD PTR [ebp-0xe4],0xf89c85b4
  42580b:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  425815:	mov    eax,DWORD PTR [ebp-0x8]
  425818:	mov    ecx,DWORD PTR [ebp-0x18]
  42581b:	xor    eax,ebx
  42581d:	add    eax,esi
  42581f:	imul   eax,ecx
  425822:	mov    ecx,DWORD PTR [ebp-0x1c]
  425825:	mov    al,BYTE PTR [eax+ecx*1]
  425828:	mov    BYTE PTR [ebp-0x1],al
  42582b:	mov    eax,DWORD PTR [ebp-0x8]
  42582e:	mov    ecx,DWORD PTR [ebp-0x18]
  425831:	xor    eax,ebx
  425833:	add    eax,esi
  425835:	imul   eax,ecx
  425838:	mov    ecx,DWORD PTR [ebp-0x54]
  42583b:	xor    ecx,ebx
  42583d:	add    eax,ecx
  42583f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425842:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  42584a:	mov    ecx,DWORD PTR [ebp-0xe4]
  425850:	xor    ecx,ebx
  425852:	lea    eax,[ecx+eax*1+0x3272f3]
  425859:	movzx  ecx,BYTE PTR [ebp-0x1]
  42585d:	xor    ecx,eax
  42585f:	mov    BYTE PTR [ebp-0x1],cl
  425862:	mov    al,BYTE PTR [ebp-0x1]
  425865:	mov    ecx,DWORD PTR [ebp-0x8]
  425868:	mov    edx,DWORD PTR [ebp-0x18]
  42586b:	xor    ecx,ebx
  42586d:	add    ecx,esi
  42586f:	imul   ecx,edx
  425872:	mov    edx,DWORD PTR [ebp-0x1c]
  425875:	mov    BYTE PTR [ecx+edx*1],al
  425878:	mov    eax,DWORD PTR [ebp-0x8]
  42587b:	mov    ecx,DWORD PTR [ebp-0x18]
  42587e:	xor    eax,ebx
  425880:	add    eax,esi
  425882:	imul   eax,ecx
  425885:	mov    ecx,DWORD PTR [ebp-0x1c]
  425888:	mov    al,BYTE PTR [eax+ecx*1]
  42588b:	mov    BYTE PTR [ebp-0x1],al
  42588e:	mov    eax,DWORD PTR [ebp-0x8]
  425891:	mov    ecx,DWORD PTR [ebp-0x18]
  425894:	xor    eax,ebx
  425896:	add    eax,esi
  425898:	imul   eax,ecx
  42589b:	mov    ecx,DWORD PTR [ebp-0x14]
  42589e:	xor    ecx,ebx
  4258a0:	add    eax,ecx
  4258a2:	mov    ecx,DWORD PTR [ebp-0x1c]
  4258a5:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4258ad:	mov    ecx,DWORD PTR [ebp-0xd0]
  4258b3:	xor    ecx,ebx
  4258b5:	lea    eax,[ecx+eax*1+0x3272f3]
  4258bc:	movzx  ecx,BYTE PTR [ebp-0x1]
  4258c0:	xor    ecx,eax
  4258c2:	mov    BYTE PTR [ebp-0x1],cl
  4258c5:	mov    al,BYTE PTR [ebp-0x1]
  4258c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4258cb:	mov    edx,DWORD PTR [ebp-0x18]
  4258ce:	xor    ecx,ebx
  4258d0:	add    ecx,esi
  4258d2:	imul   ecx,edx
  4258d5:	mov    edx,DWORD PTR [ebp-0x1c]
  4258d8:	mov    BYTE PTR [ecx+edx*1],al
  4258db:	mov    eax,DWORD PTR [ebp-0x30]
  4258de:	mov    ecx,DWORD PTR [ebp-0x14]
  4258e1:	xor    eax,ebx
  4258e3:	xor    ecx,ebx
  4258e5:	add    eax,esi
  4258e7:	add    ecx,esi
  4258e9:	imul   eax,ecx
  4258ec:	add    eax,DWORD PTR [ebp-0x18]
  4258ef:	mov    DWORD PTR [ebp-0x18],eax
  4258f2:	mov    eax,DWORD PTR [ebp-0x18]
  4258f5:	mov    ecx,DWORD PTR [ebp-0x34]
  4258f8:	cmp    ecx,eax
  4258fa:	jb     0x425801
  425900:	mov    eax,DWORD PTR [ebp-0x14]
  425903:	mov    ecx,DWORD PTR [ebp-0x34]
  425906:	xor    eax,ebx
  425908:	add    eax,esi
  42590a:	imul   eax,ecx
  42590d:	mov    ecx,DWORD PTR [ebp-0x4c]
  425910:	xor    ecx,ebx
  425912:	add    ecx,esi
  425914:	or     eax,ecx
  425916:	mov    ecx,DWORD PTR [ebp-0x2c]
  425919:	xor    ecx,ebx
  42591b:	add    eax,ecx
  42591d:	mov    ecx,DWORD PTR [ebp-0x2c]
  425920:	xor    ecx,ebx
  425922:	add    eax,ecx
  425924:	mov    ecx,DWORD PTR [ebp-0xc]
  425927:	lea    eax,[eax+ecx*1+0x64e5e6]
  42592e:	jmp    0x42593f
  425930:	mov    eax,DWORD PTR [ebp-0x2c]
  425933:	mov    ecx,DWORD PTR [ebp-0xc]
  425936:	xor    eax,ebx
  425938:	lea    eax,[eax+ecx*1+0x3272f3]
  42593f:	mov    DWORD PTR [ebp-0xc],eax
  425942:	mov    eax,DWORD PTR [ebp-0x2c]
  425945:	xor    eax,ebx
  425947:	mov    ecx,0xffcd8d0d
  42594c:	sub    ecx,eax
  42594e:	add    ecx,DWORD PTR [ebp-0x38]
  425951:	mov    eax,DWORD PTR [ebp-0x2c]
  425954:	mov    edx,DWORD PTR [ebp-0xc]
  425957:	xor    eax,ebx
  425959:	add    eax,esi
  42595b:	imul   eax,edx
  42595e:	cmp    eax,ecx
  425960:	jbe    0x42577b
  425966:	push   DWORD PTR [ebp+0x8]
  425969:	mov    eax,DWORD PTR [ebp+0x8]
  42596c:	push   DWORD PTR [eax+0x1cc]
  425972:	lea    eax,[ebp-0xd8]
  425978:	push   eax
  425979:	mov    eax,DWORD PTR [ebp+0x8]
  42597c:	mov    eax,DWORD PTR [eax+0x1c4]
  425982:	push   DWORD PTR [eax]
  425984:	mov    eax,DWORD PTR [ebp+0x8]
  425987:	mov    eax,DWORD PTR [eax+0x1c0]
  42598d:	push   DWORD PTR [eax]
  42598f:	push   DWORD PTR [ebp-0x40]
  425992:	push   DWORD PTR [ebp-0x24]
  425995:	call   0x42642c
  42599a:	mov    DWORD PTR [ebp-0x3c],eax
  42599d:	mov    eax,DWORD PTR [ebp-0x10]
  4259a0:	mov    ecx,DWORD PTR [ebp-0x24]
  4259a3:	xor    eax,ebx
  4259a5:	add    eax,esi
  4259a7:	cmp    eax,ecx
  4259a9:	je     0x4259ca
  4259ab:	mov    eax,DWORD PTR [ebp+0x8]
  4259ae:	mov    ecx,DWORD PTR [ebp-0x50]
  4259b1:	mov    eax,DWORD PTR [eax+0x1e0]
  4259b7:	xor    ecx,ebx
  4259b9:	add    ecx,esi
  4259bb:	push   ecx
  4259bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4259bf:	xor    ecx,ebx
  4259c1:	add    ecx,esi
  4259c3:	push   ecx
  4259c4:	push   DWORD PTR [ebp-0x24]
  4259c7:	call   DWORD PTR [eax+0x18]
  4259ca:	pop    edi
  4259cb:	pop    esi
  4259cc:	pop    ebx
  4259cd:	leave  
  4259ce:	ret    0x4
  4259d1:	push   ebp
  4259d2:	mov    ebp,esp
  4259d4:	push   ecx
  4259d5:	push   ecx
  4259d6:	lea    eax,[ebp-0x8]
  4259d9:	mov    DWORD PTR [ebp-0x4],eax
  4259dc:	push   esi
  4259dd:	mov    esi,DWORD PTR [ebp-0x4]
  4259e0:	mov    eax,0xf881ba2f
  4259e5:	mov    DWORD PTR [esi],eax
  4259e7:	mov    esi,DWORD PTR [ebp-0x8]
  4259ea:	cmp    esi,eax
  4259ec:	pop    esi
  4259ed:	jne    0x4259f7
  4259ef:	mov    BYTE PTR [ecx+0xa],0x83
  4259f3:	mov    BYTE PTR [edx+0x8],0x2c
  4259f7:	mov    BYTE PTR [edx+0xa],0x83
  4259fb:	mov    BYTE PTR [ecx+0x2],0x11
  4259ff:	leave  
  425a00:	ret    
  425a01:	push   ebp
  425a02:	mov    ebp,esp
  425a04:	push   ecx
  425a05:	push   ecx
  425a06:	lea    eax,[ebp-0x8]
  425a09:	mov    DWORD PTR [ebp-0x4],eax
  425a0c:	mov    edx,DWORD PTR [ebp-0x4]
  425a0f:	mov    eax,0xf88b0bcb
  425a14:	mov    DWORD PTR [edx],eax
  425a16:	mov    edx,DWORD PTR [ebp-0x8]
  425a19:	cmp    edx,eax
  425a1b:	jne    0x425a2c
  425a1d:	mov    eax,DWORD PTR [ebp+0x8]
  425a20:	mov    BYTE PTR [ecx+0x9],0xf
  425a24:	mov    BYTE PTR [eax+0x7],0x54
  425a28:	mov    BYTE PTR [ecx+0x6],0xc
  425a2c:	mov    BYTE PTR [ecx+0x3],0x1f
  425a30:	leave  
  425a31:	ret    0x4
  425a34:	push   ebp
  425a35:	mov    ebp,esp
  425a37:	push   ecx
  425a38:	push   ecx
  425a39:	lea    eax,[ebp-0x8]
  425a3c:	mov    DWORD PTR [ebp-0x4],eax
  425a3f:	mov    edx,DWORD PTR [ebp-0x4]
  425a42:	mov    eax,0x7e0da2f
  425a47:	mov    DWORD PTR [edx],eax
  425a49:	mov    edx,DWORD PTR [ebp-0x8]
  425a4c:	cmp    edx,eax
  425a4e:	jne    0x425a54
  425a50:	mov    BYTE PTR [ecx+0x7],0x54
  425a54:	mov    eax,DWORD PTR [ebp+0x8]
  425a57:	mov    BYTE PTR [ecx+0x1],0x1a
  425a5b:	mov    BYTE PTR [eax+0x9],0x2f
  425a5f:	leave  
  425a60:	ret    0x4
  425a63:	push   ebp
  425a64:	mov    ebp,esp
  425a66:	push   ecx
  425a67:	push   ecx
  425a68:	lea    eax,[ebp-0x8]
  425a6b:	mov    DWORD PTR [ebp-0x4],eax
  425a6e:	push   esi
  425a6f:	mov    esi,DWORD PTR [ebp-0x4]
  425a72:	mov    eax,0x7060e38
  425a77:	mov    DWORD PTR [esi],eax
  425a79:	mov    esi,DWORD PTR [ebp-0x8]
  425a7c:	cmp    esi,eax
  425a7e:	pop    esi
  425a7f:	jne    0x425a8b
  425a81:	mov    BYTE PTR [edx+0x4],0x10
  425a85:	mov    WORD PTR [ecx+0x3],0x101f
  425a8b:	mov    BYTE PTR [edx],0x3c
  425a8e:	leave  
  425a8f:	ret    
  425a90:	push   ebp
  425a91:	mov    ebp,esp
  425a93:	push   ecx
  425a94:	push   ecx
  425a95:	lea    eax,[ebp-0x8]
  425a98:	mov    DWORD PTR [ebp-0x4],eax
  425a9b:	mov    edx,DWORD PTR [ebp-0x4]
  425a9e:	mov    eax,0xf8870b3f
  425aa3:	mov    DWORD PTR [edx],eax
  425aa5:	mov    edx,DWORD PTR [ebp-0x8]
  425aa8:	cmp    edx,eax
  425aaa:	jne    0x425ab7
  425aac:	mov    eax,DWORD PTR [ebp+0x8]
  425aaf:	mov    BYTE PTR [ecx+0x8],0xc
  425ab3:	mov    BYTE PTR [eax+0x1],0x1a
  425ab7:	mov    BYTE PTR [ecx+0x5],0x8
  425abb:	leave  
  425abc:	ret    0x4
  425abf:	push   esi
  425ac0:	mov    ecx,edi
  425ac2:	call   0x425a90
  425ac7:	mov    edx,edi
  425ac9:	mov    ecx,esi
  425acb:	mov    BYTE PTR [esi],0x1c
  425ace:	call   0x425a63
  425ad3:	push   esi
  425ad4:	mov    ecx,edi
  425ad6:	mov    BYTE PTR [esi+0x5],0x8
  425ada:	call   0x425a34
  425adf:	push   esi
  425ae0:	mov    BYTE PTR [esi+0x6],0xc
  425ae4:	call   0x425a01
  425ae9:	mov    BYTE PTR [esi+0x2],0x11
  425aed:	mov    edx,esi
  425aef:	jmp    0x4259d1
  425af4:	push   ebp
  425af5:	mov    ebp,esp
  425af7:	push   ecx
  425af8:	mov    ecx,DWORD PTR [edx+0x194]
  425afe:	push   esi
  425aff:	mov    esi,DWORD PTR [ebp+0x8]
  425b02:	mov    esi,DWORD PTR [esi]
  425b04:	mov    DWORD PTR [ecx],esi
  425b06:	mov    ecx,DWORD PTR [edx+0x194]
  425b0c:	mov    ecx,DWORD PTR [ecx]
  425b0e:	mov    esi,DWORD PTR [edx+0x190]
  425b14:	mov    DWORD PTR [esi],ecx
  425b16:	mov    eax,DWORD PTR [edx+0x194]
  425b1c:	mov    ecx,DWORD PTR [eax]
  425b1e:	mov    ecx,DWORD PTR [ecx+0x3c]
  425b21:	add    ecx,DWORD PTR [eax]
  425b23:	mov    DWORD PTR [ebp-0x4],0xf89ca5a1
  425b2a:	mov    eax,DWORD PTR [ebp-0x4]
  425b2d:	movzx  ecx,WORD PTR [ecx+0x16]
  425b31:	xor    eax,0x75108ac
  425b36:	add    eax,0x3272f3
  425b3b:	pop    esi
  425b3c:	test   ecx,eax
  425b3e:	je     0x425b4c
  425b40:	mov    eax,DWORD PTR [edx+0x1c8]
  425b46:	mov    DWORD PTR [eax],0xf89c85a2
  425b4c:	leave  
  425b4d:	ret    0x4
  425b50:	push   ebp
  425b51:	mov    ebp,esp
  425b53:	sub    esp,0x70
  425b56:	and    DWORD PTR [ebp-0x20],0x0
  425b5a:	mov    DWORD PTR [ebp-0x18],0xf89cb5a1
  425b61:	mov    DWORD PTR [ebp-0x1c],0xf89c85e1
  425b68:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  425b6f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  425b76:	mov    DWORD PTR [ebp-0x2c],0xf89f05a1
  425b7d:	mov    eax,DWORD PTR [ebp+0x20]
  425b80:	mov    eax,DWORD PTR [eax+0x194]
  425b86:	mov    DWORD PTR [ebp-0xc],eax
  425b89:	mov    eax,DWORD PTR [ebp+0x20]
  425b8c:	push   ebx
  425b8d:	push   esi
  425b8e:	mov    esi,DWORD PTR [eax+0x190]
  425b94:	mov    eax,DWORD PTR [ebp+0x20]
  425b97:	mov    eax,DWORD PTR [eax+0x18c]
  425b9d:	mov    DWORD PTR [ebp-0x8],eax
  425ba0:	mov    eax,DWORD PTR [eax]
  425ba2:	push   edi
  425ba3:	mov    DWORD PTR [ebp-0x4],esi
  425ba6:	test   eax,eax
  425ba8:	jne    0x425bb5
  425baa:	push   DWORD PTR [ebp+0x1c]
  425bad:	mov    edx,DWORD PTR [ebp+0x20]
  425bb0:	call   0x425af4
  425bb5:	mov    eax,DWORD PTR [esi]
  425bb7:	mov    ebx,DWORD PTR [esi]
  425bb9:	add    ebx,DWORD PTR [eax+0x3c]
  425bbc:	mov    eax,DWORD PTR [ebp+0xc]
  425bbf:	mov    ecx,DWORD PTR [ebp-0x8]
  425bc2:	mov    ecx,DWORD PTR [ecx]
  425bc4:	mov    esi,0x75108ac
  425bc9:	xor    eax,esi
  425bcb:	mov    edi,0x3272f3
  425bd0:	add    eax,edi
  425bd2:	cmp    eax,ecx
  425bd4:	jne    0x425e0c
  425bda:	mov    eax,DWORD PTR [ebp-0xc]
  425bdd:	mov    eax,DWORD PTR [eax]
  425bdf:	mov    DWORD PTR [ebp-0x10],eax
  425be2:	mov    eax,DWORD PTR [ebx+0x50]
  425be5:	mov    DWORD PTR [ebp-0x68],eax
  425be8:	mov    eax,DWORD PTR [ebp-0x18]
  425beb:	xor    eax,esi
  425bed:	add    eax,edi
  425bef:	mov    DWORD PTR [ebp-0x64],eax
  425bf2:	mov    eax,DWORD PTR [ebp-0x14]
  425bf5:	and    DWORD PTR [ebp-0x6c],0x0
  425bf9:	xor    eax,esi
  425bfb:	add    eax,edi
  425bfd:	mov    DWORD PTR [ebp-0x60],eax
  425c00:	lea    eax,[ebp-0x70]
  425c03:	push   eax
  425c04:	mov    eax,DWORD PTR [ebp+0x8]
  425c07:	xor    eax,esi
  425c09:	add    eax,edi
  425c0b:	push   eax
  425c0c:	mov    eax,DWORD PTR [ebp+0x20]
  425c0f:	add    eax,0xaa
  425c14:	push   eax
  425c15:	mov    eax,DWORD PTR [ebp+0x20]
  425c18:	mov    eax,DWORD PTR [eax+0x198]
  425c1e:	mov    DWORD PTR [ebp-0x70],0x4
  425c25:	push   DWORD PTR [eax]
  425c27:	mov    eax,DWORD PTR [ebp+0x10]
  425c2a:	call   eax
  425c2c:	mov    ecx,DWORD PTR [ebp-0xc]
  425c2f:	mov    ecx,DWORD PTR [ecx]
  425c31:	mov    edx,DWORD PTR [ebp-0x8]
  425c34:	mov    DWORD PTR [ebp-0x6c],eax
  425c37:	mov    DWORD PTR [ebp+0x1c],eax
  425c3a:	mov    DWORD PTR [edx],ecx
  425c3c:	mov    ecx,DWORD PTR [ebp-0x4]
  425c3f:	mov    DWORD PTR [ecx],eax
  425c41:	mov    eax,DWORD PTR [ebx+0x50]
  425c44:	mov    DWORD PTR [ebp-0x68],eax
  425c47:	mov    eax,DWORD PTR [ebp-0x1c]
  425c4a:	xor    eax,esi
  425c4c:	add    eax,edi
  425c4e:	mov    DWORD PTR [ebp-0x64],eax
  425c51:	lea    eax,[ebp-0x20]
  425c54:	mov    DWORD PTR [ebp-0x60],eax
  425c57:	lea    eax,[ebp-0x70]
  425c5a:	push   eax
  425c5b:	mov    eax,DWORD PTR [ebp+0x8]
  425c5e:	xor    eax,esi
  425c60:	add    eax,edi
  425c62:	push   eax
  425c63:	mov    eax,DWORD PTR [ebp+0x20]
  425c66:	add    eax,0xee
  425c6b:	push   eax
  425c6c:	mov    eax,DWORD PTR [ebp+0x20]
  425c6f:	mov    eax,DWORD PTR [eax+0x198]
  425c75:	mov    DWORD PTR [ebp-0x70],0x4
  425c7c:	push   DWORD PTR [eax]
  425c7e:	mov    eax,DWORD PTR [ebp+0x10]
  425c81:	call   eax
  425c83:	test   eax,eax
  425c85:	je     0x425caa
  425c87:	and    DWORD PTR [ebp+0xc],0x0
  425c8b:	cmp    DWORD PTR [ebx+0x50],0x0
  425c8f:	jbe    0x425caa
  425c91:	mov    eax,DWORD PTR [ebp+0x1c]
  425c94:	mov    ecx,DWORD PTR [ebp-0x10]
  425c97:	sub    ecx,eax
  425c99:	mov    dl,BYTE PTR [ecx+eax*1]
  425c9c:	inc    DWORD PTR [ebp+0xc]
  425c9f:	mov    BYTE PTR [eax],dl
  425ca1:	mov    edx,DWORD PTR [ebp+0xc]
  425ca4:	inc    eax
  425ca5:	cmp    edx,DWORD PTR [ebx+0x50]
  425ca8:	jb     0x425c99
  425caa:	mov    edx,DWORD PTR [ebp+0x1c]
  425cad:	mov    ecx,DWORD PTR [edx+0x3c]
  425cb0:	add    ecx,edx
  425cb2:	mov    eax,DWORD PTR [ecx+0xa0]
  425cb8:	mov    ebx,DWORD PTR [ecx+0x28]
  425cbb:	add    eax,edx
  425cbd:	sub    edx,DWORD PTR [ebp-0x10]
  425cc0:	add    ebx,DWORD PTR [ebp+0x1c]
  425cc3:	mov    DWORD PTR [ebp+0xc],edx
  425cc6:	mov    DWORD PTR [ebp-0x2c],ecx
  425cc9:	mov    DWORD PTR [ebp-0x14],ebx
  425ccc:	mov    DWORD PTR [ebp-0x8],0x0
  425cd3:	jmp    0x425d4f
  425cd5:	add    edx,0xfffffff8
  425cd8:	shr    edx,1
  425cda:	mov    DWORD PTR [ebp-0x18],edx
  425cdd:	je     0x425d3b
  425cdf:	lea    edx,[eax+0x8]
  425ce2:	mov    DWORD PTR [ebp-0x4],edx
  425ce5:	mov    edx,DWORD PTR [ebp-0x18]
  425ce8:	mov    DWORD PTR [ebp-0x18],edx
  425ceb:	mov    edx,DWORD PTR [ebp-0x4]
  425cee:	movzx  edx,WORD PTR [edx]
  425cf1:	mov    DWORD PTR [ebp-0x24],edx
  425cf4:	and    edx,0xfff
  425cfa:	mov    DWORD PTR [ebp-0x28],edx
  425cfd:	mov    edx,DWORD PTR [ebp-0x24]
  425d00:	shr    edx,0xc
  425d03:	add    edx,0xffcd8d0d
  425d09:	xor    edx,esi
  425d0b:	cmp    edx,0xf89c85bc
  425d11:	jne    0x425d32
  425d13:	mov    edx,DWORD PTR [ebp-0x28]
  425d16:	add    edx,DWORD PTR [ebp+0x1c]
  425d19:	mov    ebx,DWORD PTR [eax]
  425d1b:	cmp    DWORD PTR [ebx+edx*1],0x0
  425d1f:	je     0x425d2f
  425d21:	mov    ecx,DWORD PTR [ebp+0xc]
  425d24:	add    ecx,DWORD PTR [ebx+edx*1]
  425d27:	mov    ebx,DWORD PTR [eax]
  425d29:	mov    DWORD PTR [edx+ebx*1],ecx
  425d2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  425d2f:	mov    ebx,DWORD PTR [ebp-0x14]
  425d32:	add    DWORD PTR [ebp-0x4],0x2
  425d36:	dec    DWORD PTR [ebp-0x18]
  425d39:	jne    0x425ceb
  425d3b:	mov    edx,DWORD PTR [ebp-0xc]
  425d3e:	add    DWORD PTR [ebp-0x8],edx
  425d41:	mov    edx,DWORD PTR [ebp-0x8]
  425d44:	cmp    edx,DWORD PTR [ecx+0xa4]
  425d4a:	jae    0x425d5d
  425d4c:	add    eax,DWORD PTR [ebp-0xc]
  425d4f:	mov    edx,DWORD PTR [eax+0x4]
  425d52:	mov    DWORD PTR [ebp-0xc],edx
  425d55:	test   edx,edx
  425d57:	jne    0x425cd5
  425d5d:	mov    eax,DWORD PTR [ebp-0x10]
  425d60:	mov    DWORD PTR [ebp-0x6c],eax
  425d63:	mov    DWORD PTR [ebp-0x70],0x4
  425d6a:	mov    eax,DWORD PTR [ecx+0x50]
  425d6d:	mov    DWORD PTR [ebp-0x68],eax
  425d70:	mov    eax,DWORD PTR [ebp-0x1c]
  425d73:	xor    eax,esi
  425d75:	add    eax,edi
  425d77:	mov    DWORD PTR [ebp-0x64],eax
  425d7a:	lea    eax,[ebp-0x20]
  425d7d:	mov    DWORD PTR [ebp-0x60],eax
  425d80:	lea    eax,[ebp-0x70]
  425d83:	push   eax
  425d84:	mov    eax,DWORD PTR [ebp+0x8]
  425d87:	xor    eax,esi
  425d89:	add    eax,edi
  425d8b:	push   eax
  425d8c:	mov    eax,DWORD PTR [ebp+0x20]
  425d8f:	add    eax,0xee
  425d94:	push   eax
  425d95:	mov    eax,DWORD PTR [ebp+0x20]
  425d98:	mov    eax,DWORD PTR [eax+0x198]
  425d9e:	push   DWORD PTR [eax]
  425da0:	mov    eax,DWORD PTR [ebp+0x10]
  425da3:	call   eax
  425da5:	mov    eax,DWORD PTR [ebp+0x20]
  425da8:	mov    eax,DWORD PTR [eax+0x180]
  425dae:	add    eax,DWORD PTR [ebp+0xc]
  425db1:	mov    ecx,DWORD PTR [ebp+0xc]
  425db4:	push   DWORD PTR [ebp+0x18]
  425db7:	mov    DWORD PTR [eax],ecx
  425db9:	push   DWORD PTR [ebp+0x14]
  425dbc:	push   DWORD PTR [ebp+0x1c]
  425dbf:	call   ebx
  425dc1:	mov    ecx,DWORD PTR [ebp+0xc]
  425dc4:	add    ecx,DWORD PTR [ebp+0x20]
  425dc7:	lea    eax,[ebp+0x4]
  425dca:	mov    DWORD PTR [ebp+0x20],ecx
  425dcd:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd0:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd3:	mov    edx,DWORD PTR [ecx+0x190]
  425dd9:	mov    ecx,DWORD PTR [ebp+0x20]
  425ddc:	mov    ecx,DWORD PTR [ecx+0x18c]
  425de2:	mov    esi,DWORD PTR [ecx]
  425de4:	cmp    DWORD PTR [eax],esi
  425de6:	jb     0x425e07
  425de8:	mov    esi,DWORD PTR [edx]
  425dea:	mov    edi,DWORD PTR [edx]
  425dec:	mov    esi,DWORD PTR [esi+0x3c]
  425def:	lea    esi,[edi+esi*1+0x50]
  425df3:	mov    edi,DWORD PTR [ecx]
  425df5:	add    edi,DWORD PTR [esi]
  425df7:	cmp    DWORD PTR [eax],edi
  425df9:	jae    0x425e07
  425dfb:	mov    esi,DWORD PTR [ecx]
  425dfd:	mov    ecx,DWORD PTR [eax]
  425dff:	mov    edx,DWORD PTR [edx]
  425e01:	sub    ecx,esi
  425e03:	add    edx,ecx
  425e05:	mov    DWORD PTR [eax],edx
  425e07:	mov    eax,DWORD PTR [ebp+0xc]
  425e0a:	jmp    0x425e0e
  425e0c:	xor    eax,eax
  425e0e:	pop    edi
  425e0f:	pop    esi
  425e10:	pop    ebx
  425e11:	leave  
  425e12:	ret    0x1c
  425e15:	push   ebp
  425e16:	mov    ebp,esp
  425e18:	sub    esp,0x1c
  425e1b:	push   esi
  425e1c:	mov    esi,eax
  425e1e:	mov    eax,DWORD PTR [ecx+0x190]
  425e24:	cmp    DWORD PTR [eax],0x0
  425e27:	je     0x425f37
  425e2d:	test   edx,edx
  425e2f:	je     0x425f37
  425e35:	test   esi,esi
  425e37:	je     0x425f37
  425e3d:	mov    eax,DWORD PTR [esi+0x88]
  425e43:	test   eax,eax
  425e45:	je     0x425f32
  425e4b:	cmp    DWORD PTR [esi+0x8c],0x10
  425e52:	je     0x425f32
  425e58:	cmp    DWORD PTR [esi+0x34],edx
  425e5b:	je     0x425f32
  425e61:	mov    esi,DWORD PTR [ecx+0x18c]
  425e67:	and    DWORD PTR [ebp-0x10],0x0
  425e6b:	mov    ecx,edx
  425e6d:	sub    ecx,DWORD PTR [esi]
  425e6f:	add    eax,edx
  425e71:	movzx  edx,WORD PTR [eax+0xc]
  425e75:	mov    DWORD PTR [ebp-0x1c],ecx
  425e78:	movzx  ecx,WORD PTR [eax+0xe]
  425e7c:	add    ecx,edx
  425e7e:	je     0x425f32
  425e84:	lea    ecx,[eax+0x14]
  425e87:	push   ebx
  425e88:	mov    DWORD PTR [ebp-0x18],ecx
  425e8b:	mov    esi,0x7fffffff
  425e90:	push   edi
  425e91:	test   DWORD PTR [ecx],esi
  425e93:	je     0x425f14
  425e95:	mov    edx,DWORD PTR [ecx]
  425e97:	and    DWORD PTR [ebp-0xc],0x0
  425e9b:	and    edx,esi
  425e9d:	add    edx,eax
  425e9f:	movzx  edi,WORD PTR [edx+0xe]
  425ea3:	movzx  ebx,WORD PTR [edx+0xc]
  425ea7:	add    edi,ebx
  425ea9:	je     0x425f14
  425eab:	lea    ecx,[edx+0x14]
  425eae:	mov    DWORD PTR [ebp-0x14],ecx
  425eb1:	test   DWORD PTR [ecx],esi
  425eb3:	je     0x425ef6
  425eb5:	mov    ecx,DWORD PTR [ecx]
  425eb7:	and    DWORD PTR [ebp-0x8],0x0
  425ebb:	and    ecx,esi
  425ebd:	add    ecx,eax
  425ebf:	movzx  edi,WORD PTR [ecx+0xe]
  425ec3:	movzx  ebx,WORD PTR [ecx+0xc]
  425ec7:	add    edi,ebx
  425ec9:	je     0x425ef6
  425ecb:	lea    edi,[ecx+0x14]
  425ece:	mov    DWORD PTR [ebp-0x4],edi
  425ed1:	mov    edi,DWORD PTR [ebp-0x4]
  425ed4:	mov    edi,DWORD PTR [edi]
  425ed6:	test   edi,edi
  425ed8:	je     0x425ee0
  425eda:	mov    ebx,DWORD PTR [ebp-0x1c]
  425edd:	add    DWORD PTR [edi+eax*1],ebx
  425ee0:	movzx  edi,WORD PTR [ecx+0xe]
  425ee4:	movzx  ebx,WORD PTR [ecx+0xc]
  425ee8:	inc    DWORD PTR [ebp-0x8]
  425eeb:	add    DWORD PTR [ebp-0x4],0x8
  425eef:	add    edi,ebx
  425ef1:	cmp    DWORD PTR [ebp-0x8],edi
  425ef4:	jb     0x425ed1
  425ef6:	movzx  edi,WORD PTR [edx+0xe]
  425efa:	movzx  ebx,WORD PTR [edx+0xc]
  425efe:	mov    ecx,DWORD PTR [ebp-0x14]
  425f01:	inc    DWORD PTR [ebp-0xc]
  425f04:	add    ecx,0x8
  425f07:	add    edi,ebx
  425f09:	mov    DWORD PTR [ebp-0x14],ecx
  425f0c:	cmp    DWORD PTR [ebp-0xc],edi
  425f0f:	jb     0x425eb1
  425f11:	mov    ecx,DWORD PTR [ebp-0x18]
  425f14:	movzx  edx,WORD PTR [eax+0xe]
  425f18:	movzx  edi,WORD PTR [eax+0xc]
  425f1c:	inc    DWORD PTR [ebp-0x10]
  425f1f:	add    ecx,0x8
  425f22:	add    edx,edi
  425f24:	mov    DWORD PTR [ebp-0x18],ecx
  425f27:	cmp    DWORD PTR [ebp-0x10],edx
  425f2a:	jb     0x425e91
  425f30:	pop    edi
  425f31:	pop    ebx
  425f32:	xor    eax,eax
  425f34:	inc    eax
  425f35:	jmp    0x425f39
  425f37:	xor    eax,eax
  425f39:	pop    esi
  425f3a:	leave  
  425f3b:	ret    
  425f3c:	push   ebp
  425f3d:	mov    ebp,esp
  425f3f:	mov    ecx,DWORD PTR [ecx+0x190]
  425f45:	mov    eax,DWORD PTR [ebp+0xc]
  425f48:	sub    esp,0x10
  425f4b:	push   ebx
  425f4c:	xor    ebx,ebx
  425f4e:	push   esi
  425f4f:	push   edi
  425f50:	cmp    DWORD PTR [ecx],ebx
  425f52:	je     0x425fda
  425f58:	cmp    eax,ebx
  425f5a:	je     0x425fda
  425f5c:	cmp    DWORD PTR [eax+0x78],ebx
  425f5f:	jne    0x425f66
  425f61:	xor    eax,eax
  425f63:	inc    eax
  425f64:	jmp    0x425fdc
  425f66:	mov    eax,DWORD PTR [eax+0x78]
  425f69:	add    eax,DWORD PTR [ebp+0x8]
  425f6c:	mov    ecx,DWORD PTR [eax+0x1c]
  425f6f:	mov    edx,DWORD PTR [eax+0x24]
  425f72:	mov    esi,DWORD PTR [eax+0x14]
  425f75:	mov    edi,DWORD PTR [eax+0x18]
  425f78:	add    ecx,DWORD PTR [ebp+0x8]
  425f7b:	add    edx,DWORD PTR [ebp+0x8]
  425f7e:	mov    DWORD PTR [ebp-0x4],esi
  425f81:	cmp    esi,edi
  425f83:	ja     0x425f88
  425f85:	mov    DWORD PTR [ebp-0x4],edi
  425f88:	mov    DWORD PTR [ebp-0x8],ebx
  425f8b:	cmp    DWORD PTR [ebp-0x4],ebx
  425f8e:	jbe    0x425f61
  425f90:	cmp    ebx,DWORD PTR [eax+0x14]
  425f93:	jae    0x425f9b
  425f95:	movzx  esi,WORD PTR [edx+ebx*2]
  425f99:	jmp    0x425f9d
  425f9b:	mov    esi,ebx
  425f9d:	lea    esi,[ecx+esi*4]
  425fa0:	mov    edi,DWORD PTR [esi]
  425fa2:	test   edi,edi
  425fa4:	je     0x425fcf
  425fa6:	add    edi,DWORD PTR [ebp+0x8]
  425fa9:	mov    DWORD PTR [ebp-0x10],edi
  425fac:	cmp    edi,eax
  425fae:	jbe    0x425fc0
  425fb0:	mov    ebx,DWORD PTR [ebp+0xc]
  425fb3:	mov    ebx,DWORD PTR [ebx+0x7c]
  425fb6:	add    ebx,eax
  425fb8:	cmp    edi,ebx
  425fba:	jae    0x425fc0
  425fbc:	mov    esi,DWORD PTR [esi]
  425fbe:	jmp    0x425fc8
  425fc0:	sub    edi,DWORD PTR [ebp+0x8]
  425fc3:	mov    DWORD PTR [esi],edi
  425fc5:	mov    esi,DWORD PTR [ebp-0x10]
  425fc8:	test   esi,esi
  425fca:	je     0x425fda
  425fcc:	mov    ebx,DWORD PTR [ebp-0x8]
  425fcf:	inc    ebx
  425fd0:	mov    DWORD PTR [ebp-0x8],ebx
  425fd3:	cmp    ebx,DWORD PTR [ebp-0x4]
  425fd6:	jb     0x425f90
  425fd8:	jmp    0x425f61
  425fda:	xor    eax,eax
  425fdc:	pop    edi
  425fdd:	pop    esi
  425fde:	pop    ebx
  425fdf:	leave  
  425fe0:	ret    0x8
  425fe3:	push   ebp
  425fe4:	mov    ebp,esp
  425fe6:	sub    esp,0x2c
  425fe9:	mov    edx,0xf89c85a1
  425fee:	mov    DWORD PTR [ebp-0x4],edx
  425ff1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  425ff8:	mov    eax,DWORD PTR [ebp-0x4]
  425ffb:	mov    ecx,DWORD PTR [ebp-0x4]
  425ffe:	mov    ecx,DWORD PTR [ebp-0x4]
  426001:	mov    ecx,DWORD PTR [ebp-0x4]
  426004:	mov    ecx,DWORD PTR [ebp-0x4]
  426007:	mov    ecx,DWORD PTR [ebp-0x4]
  42600a:	push   ebx
  42600b:	mov    ebx,DWORD PTR [ebp+0x10]
  42600e:	push   esi
  42600f:	mov    esi,0x75108ac
  426014:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  42601b:	mov    ecx,DWORD PTR [ebp-0x4]
  42601e:	mov    ebx,DWORD PTR [ebx+0x190]
  426024:	push   edi
  426025:	mov    edi,0x3272f3
  42602a:	xor    ecx,esi
  42602c:	xor    eax,esi
  42602e:	add    eax,edi
  426030:	add    ecx,edi
  426032:	mov    DWORD PTR [ebp-0x18],eax
  426035:	cmp    ecx,DWORD PTR [ebx]
  426037:	je     0x4262b8
  42603d:	mov    ebx,DWORD PTR [ebp-0x4]
  426040:	mov    ecx,DWORD PTR [ebp+0xc]
  426043:	xor    ebx,esi
  426045:	add    ebx,edi
  426047:	cmp    ebx,ecx
  426049:	je     0x4262b8
  42604f:	mov    ebx,DWORD PTR [ebp-0x4]
  426052:	mov    ecx,DWORD PTR [ecx+0x80]
  426058:	xor    ebx,esi
  42605a:	add    ebx,edi
  42605c:	cmp    ecx,ebx
  42605e:	je     0x4262b3
  426064:	add    ecx,DWORD PTR [ebp+0x8]
  426067:	mov    DWORD PTR [ebp-0x2c],ecx
  42606a:	mov    ebx,edx
  42606c:	xor    ebx,esi
  42606e:	add    ebx,edi
  426070:	mov    DWORD PTR [ebp-0x10],ebx
  426073:	mov    ebx,DWORD PTR [ebp-0x10]
  426076:	cmp    ebx,edx
  426078:	je     0x42608c
  42607a:	mov    edx,DWORD PTR [ebp-0x10]
  42607d:	mov    ebx,DWORD PTR [ebp-0x4]
  426080:	imul   edx,edx,0x14
  426083:	xor    ebx,esi
  426085:	add    ebx,edi
  426087:	cmp    DWORD PTR [edx+ecx*1],ebx
  42608a:	jne    0x4260a3
  42608c:	mov    edx,DWORD PTR [ebp-0x10]
  42608f:	mov    ebx,DWORD PTR [ebp-0x4]
  426092:	imul   edx,edx,0x14
  426095:	xor    ebx,esi
  426097:	add    ebx,edi
  426099:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  42609d:	je     0x4262a5
  4260a3:	mov    eax,DWORD PTR [ebp-0x4]
  4260a6:	mov    ebx,DWORD PTR [ebp-0x4]
  4260a9:	mov    eax,DWORD PTR [ebp-0x10]
  4260ac:	imul   eax,eax,0x14
  4260af:	add    eax,ecx
  4260b1:	mov    ecx,DWORD PTR [eax+0x10]
  4260b4:	add    ecx,DWORD PTR [ebp+0x8]
  4260b7:	xor    ebx,esi
  4260b9:	mov    DWORD PTR [ebp-0x1c],ecx
  4260bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4260bf:	mov    edx,DWORD PTR [ebp-0x4]
  4260c2:	xor    ecx,esi
  4260c4:	add    ecx,edi
  4260c6:	xor    edx,esi
  4260c8:	mov    DWORD PTR [ebp-0x24],ecx
  4260cb:	mov    ecx,DWORD PTR [eax]
  4260cd:	add    edx,edi
  4260cf:	add    ebx,edi
  4260d1:	cmp    ecx,edx
  4260d3:	je     0x4260db
  4260d5:	add    ecx,DWORD PTR [ebp+0x8]
  4260d8:	mov    DWORD PTR [ebp-0x24],ecx
  4260db:	mov    ecx,DWORD PTR [ebp-0x4]
  4260de:	xor    ecx,esi
  4260e0:	add    ecx,DWORD PTR [eax+0xc]
  4260e3:	mov    eax,DWORD PTR [ebp+0x8]
  4260e6:	lea    eax,[ecx+eax*1+0x3272f3]
  4260ed:	mov    DWORD PTR [ebp+0xc],eax
  4260f0:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4260f7:	mov    eax,DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	mov    eax,DWORD PTR [eax+0x1e0]
  426103:	call   DWORD PTR [eax]
  426105:	mov    ecx,DWORD PTR [ebp-0x4]
  426108:	xor    ecx,esi
  42610a:	add    ecx,edi
  42610c:	mov    DWORD PTR [ebp-0xc],eax
  42610f:	cmp    ecx,eax
  426111:	jne    0x426125
  426113:	mov    eax,DWORD PTR [ebp+0x10]
  426116:	push   DWORD PTR [ebp+0xc]
  426119:	mov    eax,DWORD PTR [eax+0x1e0]
  42611f:	call   DWORD PTR [eax+0xc]
  426122:	mov    DWORD PTR [ebp-0xc],eax
  426125:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  42612c:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  426133:	mov    eax,DWORD PTR [ebp-0x4]
  426136:	xor    eax,esi
  426138:	add    eax,edi
  42613a:	cmp    eax,DWORD PTR [ebp-0xc]
  42613d:	jne    0x426162
  42613f:	mov    eax,DWORD PTR [ebp-0x8]
  426142:	mov    ecx,DWORD PTR [ebp-0x20]
  426145:	xor    eax,esi
  426147:	xor    ecx,esi
  426149:	lea    ebx,[ebx+eax*1+0x3272f3]
  426150:	mov    eax,DWORD PTR [ebp+0x10]
  426153:	mov    eax,DWORD PTR [eax+0x1e0]
  426159:	add    ecx,edi
  42615b:	imul   ecx,ebx
  42615e:	push   ecx
  42615f:	call   DWORD PTR [eax+0x24]
  426162:	mov    eax,DWORD PTR [ebp-0x4]
  426165:	xor    eax,esi
  426167:	add    eax,edi
  426169:	cmp    eax,DWORD PTR [ebp-0xc]
  42616c:	jne    0x42617d
  42616e:	mov    eax,DWORD PTR [ebp-0x28]
  426171:	xor    eax,esi
  426173:	add    eax,edi
  426175:	cmp    ebx,eax
  426177:	jbe    0x4260f7
  42617d:	mov    eax,DWORD PTR [ebp-0x4]
  426180:	xor    eax,esi
  426182:	add    eax,edi
  426184:	cmp    eax,DWORD PTR [ebp-0xc]
  426187:	jne    0x4261a0
  426189:	mov    eax,DWORD PTR [ebp-0x8]
  42618c:	mov    ecx,DWORD PTR [ebp-0x18]
  42618f:	xor    eax,esi
  426191:	lea    eax,[ecx+eax*1+0x3272f3]
  426198:	mov    DWORD PTR [ebp-0x18],eax
  42619b:	jmp    0x42628f
  4261a0:	mov    DWORD PTR [ebp-0x14],0x1121b29
  4261a7:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  4261ae:	mov    ebx,DWORD PTR [ebp-0x4]
  4261b1:	xor    ebx,esi
  4261b3:	add    ebx,edi
  4261b5:	jmp    0x42627c
  4261ba:	mov    eax,DWORD PTR [ebp-0x4]
  4261bd:	xor    eax,esi
  4261bf:	add    eax,edi
  4261c1:	mov    DWORD PTR [ebp-0x14],eax
  4261c4:	mov    eax,DWORD PTR [ebp-0x4]
  4261c7:	xor    eax,esi
  4261c9:	add    eax,edi
  4261cb:	mov    DWORD PTR [ebp+0xc],eax
  4261ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4261d1:	mov    eax,DWORD PTR [ebp-0x24]
  4261d4:	xor    ecx,esi
  4261d6:	add    ecx,edi
  4261d8:	cmp    ecx,eax
  4261da:	je     0x4261e2
  4261dc:	mov    eax,DWORD PTR [eax+ebx*4]
  4261df:	mov    DWORD PTR [ebp-0x14],eax
  4261e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4261e5:	mov    eax,DWORD PTR [eax+ebx*4]
  4261e8:	mov    DWORD PTR [ebp+0xc],eax
  4261eb:	mov    eax,DWORD PTR [ebp-0x4]
  4261ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4261f1:	xor    eax,esi
  4261f3:	add    eax,edi
  4261f5:	cmp    eax,ecx
  4261f7:	je     0x426222
  4261f9:	mov    eax,DWORD PTR [ebp-0x4]
  4261fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4261ff:	xor    eax,esi
  426201:	add    eax,edi
  426203:	shr    ecx,0x1f
  426206:	cmp    eax,ecx
  426208:	je     0x426222
  42620a:	mov    ecx,DWORD PTR [ebp-0x14]
  42620d:	mov    eax,DWORD PTR [ebp+0x10]
  426210:	mov    eax,DWORD PTR [eax+0x1e0]
  426216:	movzx  ecx,cx
  426219:	push   ecx
  42621a:	push   DWORD PTR [ebp-0xc]
  42621d:	call   DWORD PTR [eax+0x8]
  426220:	jmp    0x42623b
  426222:	mov    eax,DWORD PTR [ebp+0xc]
  426225:	add    eax,DWORD PTR [ebp+0x8]
  426228:	mov    ecx,DWORD PTR [ebp+0x10]
  42622b:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426231:	add    eax,0x2
  426234:	push   eax
  426235:	push   DWORD PTR [ebp-0xc]
  426238:	call   DWORD PTR [ecx+0x8]
  42623b:	mov    DWORD PTR [ebp+0xc],eax
  42623e:	mov    eax,DWORD PTR [ebp-0x4]
  426241:	mov    ecx,DWORD PTR [ebp+0xc]
  426244:	xor    eax,esi
  426246:	add    eax,edi
  426248:	cmp    eax,ecx
  42624a:	mov    eax,DWORD PTR [ebp-0x8]
  42624d:	jne    0x426260
  42624f:	mov    ecx,DWORD PTR [ebp-0x18]
  426252:	xor    eax,esi
  426254:	lea    eax,[ecx+eax*1+0x3272f3]
  42625b:	mov    DWORD PTR [ebp-0x18],eax
  42625e:	jmp    0x426270
  426260:	mov    ecx,DWORD PTR [ebp+0xc]
  426263:	xor    eax,esi
  426265:	add    eax,edi
  426267:	imul   eax,ecx
  42626a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42626d:	mov    DWORD PTR [ecx+ebx*4],eax
  426270:	mov    eax,DWORD PTR [ebp-0x8]
  426273:	xor    eax,esi
  426275:	lea    ebx,[ebx+eax*1+0x3272f3]
  42627c:	mov    eax,DWORD PTR [ebp-0x4]
  42627f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426282:	xor    eax,esi
  426284:	add    eax,edi
  426286:	cmp    DWORD PTR [ecx+ebx*4],eax
  426289:	jne    0x4261ba
  42628f:	mov    edx,DWORD PTR [ebp-0x10]
  426292:	mov    eax,DWORD PTR [ebp-0x18]
  426295:	mov    ecx,DWORD PTR [ebp-0x2c]
  426298:	sub    edx,0x3272f2
  42629e:	xor    edx,esi
  4262a0:	jmp    0x42606a
  4262a5:	mov    ecx,DWORD PTR [ebp-0x4]
  4262a8:	xor    ecx,esi
  4262aa:	add    ecx,edi
  4262ac:	cmp    eax,ecx
  4262ae:	mov    eax,DWORD PTR [ebp-0x4]
  4262b1:	jne    0x4262bb
  4262b3:	mov    eax,DWORD PTR [ebp-0x8]
  4262b6:	jmp    0x4262bb
  4262b8:	mov    eax,DWORD PTR [ebp-0x4]
  4262bb:	xor    eax,esi
  4262bd:	add    eax,edi
  4262bf:	pop    edi
  4262c0:	pop    esi
  4262c1:	pop    ebx
  4262c2:	leave  
  4262c3:	ret    0xc
  4262c6:	push   ebp
  4262c7:	mov    ebp,esp
  4262c9:	sub    esp,0x28
  4262cc:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  4262d3:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  4262da:	mov    eax,DWORD PTR [ebp+0xc]
  4262dd:	mov    DWORD PTR [ebp+0xc],eax
  4262e0:	push   esi
  4262e1:	mov    eax,eax
  4262e3:	mov    eax,DWORD PTR [ebp-0x4]
  4262e6:	mov    esi,DWORD PTR [ebp+0x8]
  4262e9:	mov    ecx,0x75108ac
  4262ee:	xor    eax,ecx
  4262f0:	mov    edx,0x3272f3
  4262f5:	add    eax,edx
  4262f7:	cmp    esi,eax
  4262f9:	je     0x426420
  4262ff:	mov    eax,DWORD PTR [ebp+0x8]
  426302:	mov    esi,DWORD PTR [ebp+0x8]
  426305:	add    esi,DWORD PTR [eax+0x3c]
  426308:	push   edi
  426309:	mov    DWORD PTR [ebp+0xc],esi
  42630c:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  426313:	mov    eax,DWORD PTR [ebp-0x1c]
  426316:	mov    esi,DWORD PTR [ebp-0x4]
  426319:	mov    edi,DWORD PTR [ebp+0xc]
  42631c:	xor    esi,ecx
  42631e:	xor    eax,ecx
  426320:	add    esi,edx
  426322:	cmp    DWORD PTR [edi+eax*8+0x1939810],esi
  426329:	je     0x42641a
  42632f:	mov    esi,DWORD PTR [ebp+0xc]
  426332:	mov    eax,DWORD PTR [ebp+0x8]
  426335:	add    eax,DWORD PTR [esi+0xa0]
  42633b:	mov    esi,DWORD PTR [ebp+0x8]
  42633e:	mov    edi,DWORD PTR [ebp+0xc]
  426341:	sub    esi,DWORD PTR [edi+0x34]
  426344:	mov    edi,DWORD PTR [ebp-0x4]
  426347:	xor    edi,ecx
  426349:	add    edi,edx
  42634b:	mov    DWORD PTR [ebp-0x24],esi
  42634e:	cmp    esi,edi
  426350:	je     0x42641a
  426356:	mov    esi,DWORD PTR [ebp-0x4]
  426359:	xor    esi,ecx
  42635b:	add    esi,edx
  42635d:	mov    DWORD PTR [ebp-0x8],esi
  426360:	push   ebx
  426361:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  426368:	jmp    0x426404
  42636d:	mov    esi,DWORD PTR [ebp-0x4]
  426370:	xor    esi,ecx
  426372:	lea    edi,[ebx-0x8]
  426375:	add    esi,edx
  426377:	shr    edi,1
  426379:	cmp    esi,edi
  42637b:	jae    0x4263ea
  42637d:	sub    edi,esi
  42637f:	lea    ebx,[eax+esi*2+0x8]
  426383:	mov    DWORD PTR [ebp-0x18],edi
  426386:	movzx  esi,WORD PTR [ebx]
  426389:	and    esi,0xfff
  42638f:	mov    DWORD PTR [ebp-0x14],esi
  426392:	mov    edi,DWORD PTR [ebp-0x14]
  426395:	mov    esi,DWORD PTR [eax]
  426397:	sub    esi,edx
  426399:	add    edi,esi
  42639b:	movzx  esi,WORD PTR [ebx]
  42639e:	shr    esi,0xc
  4263a1:	xor    edi,ecx
  4263a3:	mov    DWORD PTR [ebp-0x20],edi
  4263a6:	mov    DWORD PTR [ebp-0x14],esi
  4263a9:	mov    esi,DWORD PTR [ebp-0x20]
  4263ac:	mov    edi,DWORD PTR [ebp+0x8]
  4263af:	xor    esi,ecx
  4263b1:	lea    esi,[esi+edi*1+0x3272f3]
  4263b8:	mov    DWORD PTR [ebp-0x20],esi
  4263bb:	mov    esi,DWORD PTR [ebp-0x10]
  4263be:	mov    edi,DWORD PTR [ebp-0x14]
  4263c1:	xor    esi,ecx
  4263c3:	add    esi,edx
  4263c5:	cmp    edi,esi
  4263c7:	jne    0x4263df
  4263c9:	mov    esi,DWORD PTR [ebp-0x10]
  4263cc:	mov    edi,DWORD PTR [ebp-0x14]
  4263cf:	xor    esi,ecx
  4263d1:	add    esi,edx
  4263d3:	cmp    edi,esi
  4263d5:	jne    0x4263df
  4263d7:	mov    esi,DWORD PTR [ebp-0x20]
  4263da:	mov    edi,DWORD PTR [ebp-0x24]
  4263dd:	add    DWORD PTR [esi],edi
  4263df:	add    ebx,0x2
  4263e2:	dec    DWORD PTR [ebp-0x18]
  4263e5:	jne    0x426386
  4263e7:	mov    ebx,DWORD PTR [ebp-0xc]
  4263ea:	add    DWORD PTR [ebp-0x8],ebx
  4263ed:	mov    esi,DWORD PTR [ebp-0x1c]
  4263f0:	mov    edi,DWORD PTR [ebp-0x8]
  4263f3:	mov    ebx,DWORD PTR [ebp+0xc]
  4263f6:	xor    esi,ecx
  4263f8:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939814]
  4263ff:	jae    0x426419
  426401:	add    eax,DWORD PTR [ebp-0xc]
  426404:	mov    esi,DWORD PTR [ebp-0x4]
  426407:	mov    ebx,DWORD PTR [eax+0x4]
  42640a:	xor    esi,ecx
  42640c:	add    esi,edx
  42640e:	mov    DWORD PTR [ebp-0xc],ebx
  426411:	cmp    ebx,esi
  426413:	jne    0x42636d
  426419:	pop    ebx
  42641a:	mov    eax,DWORD PTR [ebp-0x28]
  42641d:	pop    edi
  42641e:	jmp    0x426423
  426420:	mov    eax,DWORD PTR [ebp-0x4]
  426423:	xor    eax,ecx
  426425:	add    eax,edx
  426427:	pop    esi
  426428:	leave  
  426429:	ret    0x8
  42642c:	push   ebp
  42642d:	mov    ebp,esp
  42642f:	sub    esp,0xd8
  426435:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42643c:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  426443:	mov    eax,DWORD PTR [ebp-0x4]
  426446:	push   ebx
  426447:	push   esi
  426448:	mov    esi,0x75108ac
  42644d:	xor    eax,esi
  42644f:	push   edi
  426450:	mov    edi,0x3272f3
  426455:	add    eax,edi
  426457:	mov    DWORD PTR [ebp-0x18],eax
  42645a:	mov    eax,DWORD PTR [ebp-0x4]
  42645d:	xor    eax,esi
  42645f:	add    eax,edi
  426461:	mov    DWORD PTR [ebp-0x8],eax
  426464:	mov    ebx,DWORD PTR [ebp+0x20]
  426467:	mov    eax,DWORD PTR [ebp-0x1c]
  42646a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42646d:	xor    eax,ecx
  42646f:	mov    DWORD PTR [ebp-0x1c],eax
  426472:	add    DWORD PTR [ebp-0x1c],0xf89cb5a1
  426479:	mov    eax,DWORD PTR [ebp-0xc]
  42647c:	mov    ecx,DWORD PTR [ebp-0xc]
  42647f:	xor    eax,ecx
  426481:	mov    DWORD PTR [ebp-0xc],eax
  426484:	add    DWORD PTR [ebp-0xc],0xf89c85e1
  42648b:	mov    eax,DWORD PTR [ebp-0x10]
  42648e:	mov    ecx,DWORD PTR [ebp-0x10]
  426491:	xor    eax,ecx
  426493:	mov    DWORD PTR [ebp-0x10],eax
  426496:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  42649d:	mov    eax,DWORD PTR [ebp-0x28]
  4264a0:	mov    ecx,DWORD PTR [ebp-0x28]
  4264a3:	xor    eax,ecx
  4264a5:	mov    DWORD PTR [ebp-0x28],eax
  4264a8:	add    DWORD PTR [ebp-0x28],0xf89f05a1
  4264af:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  4264b6:	mov    eax,DWORD PTR [ebp+0x8]
  4264b9:	test   eax,eax
  4264bb:	je     0x426944
  4264c1:	mov    eax,DWORD PTR [ebp+0xc]
  4264c4:	test   eax,eax
  4264c6:	je     0x426944
  4264cc:	mov    eax,DWORD PTR [ebp+0x18]
  4264cf:	test   eax,eax
  4264d1:	je     0x426944
  4264d7:	mov    eax,DWORD PTR [ebp+0x20]
  4264da:	mov    ecx,DWORD PTR [ebp+0x8]
  4264dd:	xor    eax,0x8ac
  4264e2:	add    eax,0x72f3
  4264e7:	cmp    WORD PTR [ecx],ax
  4264ea:	jne    0x426944
  4264f0:	mov    eax,DWORD PTR [ebp-0x4]
  4264f3:	xor    eax,esi
  4264f5:	add    eax,edi
  4264f7:	mov    DWORD PTR [ebp-0x30],eax
  4264fa:	mov    eax,DWORD PTR [ebp-0x4]
  4264fd:	mov    ecx,DWORD PTR [ebp+0x8]
  426500:	mov    eax,DWORD PTR [ebp+0x8]
  426503:	add    eax,DWORD PTR [ecx+0x3c]
  426506:	mov    DWORD PTR [ebp+0xc],eax
  426509:	mov    eax,DWORD PTR [eax+0x50]
  42650c:	test   eax,eax
  42650e:	je     0x426944
  426514:	mov    DWORD PTR [ebp-0x2c],0xf88c85a1
  42651b:	mov    eax,DWORD PTR [ebp-0x2c]
  42651e:	xor    eax,esi
  426520:	add    eax,edi
  426522:	mov    DWORD PTR [ebp-0x2c],eax
  426525:	mov    eax,DWORD PTR [ebp-0x4]
  426528:	mov    eax,DWORD PTR [ebx+0x190]
  42652e:	mov    ecx,DWORD PTR [eax]
  426530:	mov    ecx,DWORD PTR [ecx+0x3c]
  426533:	add    ecx,DWORD PTR [eax]
  426535:	mov    eax,DWORD PTR [ebp-0x4]
  426538:	mov    eax,DWORD PTR [ebx+0x18c]
  42653e:	mov    edx,DWORD PTR [eax]
  426540:	mov    DWORD PTR [ebp-0x20],ecx
  426543:	mov    DWORD PTR [ebp+0x20],edx
  426546:	cmp    edx,edx
  426548:	jne    0x42657c
  42654a:	mov    eax,DWORD PTR [ebx+0x1e0]
  426550:	lea    edx,[ebp-0x18]
  426553:	push   edx
  426554:	mov    edx,DWORD PTR [ebp-0xc]
  426557:	xor    edx,esi
  426559:	add    edx,edi
  42655b:	push   edx
  42655c:	push   DWORD PTR [ecx+0x50]
  42655f:	push   DWORD PTR [ebp+0x20]
  426562:	call   DWORD PTR [eax+0x1c]
  426565:	mov    eax,DWORD PTR [ebp-0x20]
  426568:	mov    ecx,DWORD PTR [eax+0x54]
  42656b:	mov    eax,DWORD PTR [eax+0x50]
  42656e:	sub    eax,ecx
  426570:	add    ecx,DWORD PTR [ebp+0x20]
  426573:	push   ecx
  426574:	call   0x426ee1
  426579:	mov    edx,DWORD PTR [ebp+0x20]
  42657c:	mov    eax,DWORD PTR [ebx+0x194]
  426582:	mov    DWORD PTR [eax],edx
  426584:	mov    eax,DWORD PTR [ebp+0xc]
  426587:	push   DWORD PTR [eax+0x54]
  42658a:	push   DWORD PTR [ebp+0x8]
  42658d:	push   edx
  42658e:	call   0x426dd7
  426593:	mov    ecx,DWORD PTR [ebp+0x20]
  426596:	mov    eax,DWORD PTR [ecx+0x3c]
  426599:	add    eax,ecx
  42659b:	movzx  ecx,WORD PTR [eax+0x14]
  42659f:	lea    ecx,[ecx+eax*1+0x18]
  4265a3:	mov    DWORD PTR [ebp+0x18],ecx
  4265a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4265a9:	movzx  edx,WORD PTR [eax+0x6]
  4265ad:	xor    ecx,esi
  4265af:	add    ecx,edi
  4265b1:	mov    DWORD PTR [ebp+0xc],eax
  4265b4:	cmp    edx,ecx
  4265b6:	je     0x426663
  4265bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4265bf:	xor    ecx,esi
  4265c1:	add    ecx,edi
  4265c3:	mov    DWORD PTR [ebp-0x8],ecx
  4265c6:	mov    ecx,DWORD PTR [ebp-0x24]
  4265c9:	movzx  edx,WORD PTR [eax+0x6]
  4265cd:	xor    ecx,esi
  4265cf:	sub    edx,ecx
  4265d1:	sub    edx,edi
  4265d3:	cmp    DWORD PTR [ebp-0x8],edx
  4265d6:	ja     0x426663
  4265dc:	mov    edx,DWORD PTR [ebp+0x18]
  4265df:	add    edx,0x8
  4265e2:	mov    DWORD PTR [ebp+0x18],edx
  4265e5:	jmp    0x4265ea
  4265e7:	mov    edx,DWORD PTR [ebp+0x18]
  4265ea:	mov    eax,DWORD PTR [eax+0x38]
  4265ed:	lea    ecx,[eax-0x1]
  4265f0:	mov    DWORD PTR [ebp-0x38],eax
  4265f3:	mov    eax,DWORD PTR [edx]
  4265f5:	test   eax,ecx
  4265f7:	je     0x426600
  4265f9:	not    ecx
  4265fb:	and    eax,ecx
  4265fd:	add    eax,DWORD PTR [ebp-0x38]
  426600:	mov    ecx,DWORD PTR [edx+0x4]
  426603:	add    ecx,DWORD PTR [ebp+0x20]
  426606:	push   ecx
  426607:	call   0x426ee1
  42660c:	mov    edx,DWORD PTR [ebp-0x4]
  42660f:	mov    eax,DWORD PTR [ebp+0x18]
  426612:	mov    ecx,DWORD PTR [eax+0x8]
  426615:	xor    edx,esi
  426617:	add    edx,edi
  426619:	cmp    ecx,edx
  42661b:	je     0x426634
  42661d:	push   ecx
  42661e:	mov    ecx,DWORD PTR [ebp+0x8]
  426621:	add    ecx,DWORD PTR [eax+0xc]
  426624:	mov    eax,DWORD PTR [eax+0x4]
  426627:	add    eax,DWORD PTR [ebp+0x20]
  42662a:	push   ecx
  42662b:	push   eax
  42662c:	call   0x426dd7
  426631:	mov    eax,DWORD PTR [ebp+0x18]
  426634:	mov    ecx,DWORD PTR [ebp-0x24]
  426637:	mov    edx,DWORD PTR [ebp-0x8]
  42663a:	add    eax,0x28
  42663d:	xor    ecx,esi
  42663f:	lea    ecx,[edx+ecx*1+0x3272f3]
  426646:	mov    edx,DWORD PTR [ebp+0xc]
  426649:	mov    DWORD PTR [ebp+0x18],eax
  42664c:	mov    eax,DWORD PTR [ebp-0x24]
  42664f:	movzx  edx,WORD PTR [edx+0x6]
  426653:	xor    eax,esi
  426655:	sub    edx,eax
  426657:	mov    eax,DWORD PTR [ebp+0xc]
  42665a:	sub    edx,edi
  42665c:	mov    DWORD PTR [ebp-0x8],ecx
  42665f:	cmp    ecx,edx
  426661:	jbe    0x4265e7
  426663:	mov    edx,DWORD PTR [ebx+0x18c]
  426669:	mov    ecx,DWORD PTR [ebp+0x20]
  42666c:	cmp    ecx,DWORD PTR [edx]
  42666e:	jne    0x426697
  426670:	mov    eax,DWORD PTR [ebx+0x1e0]
  426676:	lea    edx,[ebp-0x18]
  426679:	push   edx
  42667a:	mov    edx,DWORD PTR [ebp-0x10]
  42667d:	xor    edx,esi
  42667f:	add    edx,edi
  426681:	push   edx
  426682:	mov    edx,DWORD PTR [ebp-0x20]
  426685:	push   DWORD PTR [edx+0x54]
  426688:	push   ecx
  426689:	call   DWORD PTR [eax+0x1c]
  42668c:	test   eax,eax
  42668e:	je     0x426935
  426694:	mov    eax,DWORD PTR [ebp+0xc]
  426697:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42669d:	mov    ecx,DWORD PTR [ecx]
  42669f:	xor    ecx,esi
  4266a1:	add    ecx,edi
  4266a3:	je     0x426860
  4266a9:	mov    eax,DWORD PTR [ebp-0x4]
  4266ac:	xor    eax,esi
  4266ae:	add    eax,edi
  4266b0:	and    DWORD PTR [ebp+0x8],0x0
  4266b4:	mov    DWORD PTR [ebp-0x14],eax
  4266b7:	mov    eax,0xf89c85dd
  4266bc:	lea    ecx,[eax-0x8]
  4266bf:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4266c6:	mov    DWORD PTR [ebp-0x54],0xf89c852d
  4266cd:	mov    DWORD PTR [ebp-0x50],eax
  4266d0:	mov    DWORD PTR [ebp-0x4c],ecx
  4266d3:	mov    DWORD PTR [ebp-0x48],ecx
  4266d6:	mov    DWORD PTR [ebp-0x44],0xf89c85a1
  4266dd:	mov    edx,DWORD PTR [ebp+0x8]
  4266e0:	mov    ecx,0x8ac
  4266e5:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4266ea:	mov    edx,0x72f3
  4266ef:	add    cx,dx
  4266f2:	mov    edx,DWORD PTR [ebp+0x8]
  4266f5:	inc    DWORD PTR [ebp+0x8]
  4266f8:	cmp    DWORD PTR [ebp+0x8],0x6
  4266fc:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426704:	jb     0x4266dd
  426706:	mov    ecx,0xf89c85d3
  42670b:	mov    DWORD PTR [ebp-0xb0],eax
  426711:	mov    DWORD PTR [ebp-0x9c],eax
  426717:	mov    DWORD PTR [ebp-0x74],eax
  42671a:	mov    DWORD PTR [ebp-0x70],eax
  42671d:	mov    eax,0xf89c852c
  426722:	lea    edx,[ecx+0x2c]
  426725:	mov    DWORD PTR [ebp-0x64],eax
  426728:	mov    DWORD PTR [ebp-0x60],eax
  42672b:	mov    DWORD PTR [ebp-0xb4],0xf89c85f5
  426735:	mov    DWORD PTR [ebp-0xac],ecx
  42673b:	mov    DWORD PTR [ebp-0xa8],edx
  426741:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  42674b:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  426755:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  42675f:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  426769:	mov    DWORD PTR [ebp-0x90],0xf89c852d
  426773:	mov    DWORD PTR [ebp-0x8c],ecx
  426779:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  426783:	mov    DWORD PTR [ebp-0x84],edx
  426789:	mov    DWORD PTR [ebp-0x80],0xf89c85d0
  426790:	mov    DWORD PTR [ebp-0x7c],ecx
  426793:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  42679a:	mov    DWORD PTR [ebp-0x6c],ecx
  42679d:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  4267a4:	mov    DWORD PTR [ebp-0x5c],0xf89c85a1
  4267ab:	xor    eax,eax
  4267ad:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4267b4:	xor    cl,0xac
  4267b7:	sub    cl,0xd
  4267ba:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4267c1:	inc    eax
  4267c2:	cmp    eax,0x17
  4267c5:	jb     0x4267ad
  4267c7:	mov    eax,DWORD PTR [ebx+0x1e0]
  4267cd:	lea    ecx,[ebp-0xc0]
  4267d3:	push   ecx
  4267d4:	call   DWORD PTR [eax+0x4]
  4267d7:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4267dd:	lea    edx,[ebp-0xd8]
  4267e3:	push   edx
  4267e4:	push   eax
  4267e5:	call   DWORD PTR [ecx+0x8]
  4267e8:	mov    DWORD PTR [ebp-0x40],eax
  4267eb:	lea    eax,[ebp-0x14]
  4267ee:	push   eax
  4267ef:	mov    eax,DWORD PTR [ebx+0x18c]
  4267f5:	push   DWORD PTR [eax]
  4267f7:	mov    eax,DWORD PTR [ebp-0x40]
  4267fa:	call   eax
  4267fc:	mov    eax,DWORD PTR [ebp-0x4]
  4267ff:	xor    eax,esi
  426801:	add    eax,edi
  426803:	mov    DWORD PTR [ebp-0x34],eax
  426806:	mov    ecx,DWORD PTR [ebp-0x4]
  426809:	mov    eax,DWORD PTR [ebp-0x14]
  42680c:	xor    ecx,esi
  42680e:	add    ecx,edi
  426810:	cmp    eax,ecx
  426812:	je     0x42685d
  426814:	mov    DWORD PTR [ebp-0x3c],eax
  426817:	jmp    0x426828
  426819:	mov    eax,DWORD PTR [eax]
  42681b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42681e:	mov    DWORD PTR [ebp-0x14],eax
  426821:	mov    eax,DWORD PTR [ebp-0x14]
  426824:	cmp    eax,ecx
  426826:	je     0x426835
  426828:	mov    edx,DWORD PTR [eax+0x18]
  42682b:	mov    ecx,DWORD PTR [ebx+0x18c]
  426831:	cmp    edx,DWORD PTR [ecx]
  426833:	jne    0x426819
  426835:	mov    ecx,DWORD PTR [ebx+0x18c]
  42683b:	mov    edx,DWORD PTR [eax+0x18]
  42683e:	cmp    edx,DWORD PTR [ecx]
  426840:	jne    0x42685d
  426842:	mov    ecx,DWORD PTR [ebx+0x190]
  426848:	mov    edx,DWORD PTR [ebp-0x20]
  42684b:	mov    edx,DWORD PTR [edx+0x28]
  42684e:	add    edx,DWORD PTR [ecx]
  426850:	mov    DWORD PTR [eax+0x1c],edx
  426853:	mov    eax,DWORD PTR [ebp-0x24]
  426856:	xor    eax,esi
  426858:	add    eax,edi
  42685a:	mov    DWORD PTR [ebp-0x34],eax
  42685d:	mov    eax,DWORD PTR [ebp+0xc]
  426860:	push   ebx
  426861:	push   eax
  426862:	push   DWORD PTR [ebp+0x20]
  426865:	call   0x425fe3
  42686a:	test   eax,eax
  42686c:	je     0x426935
  426872:	push   DWORD PTR [ebp+0xc]
  426875:	mov    ecx,ebx
  426877:	push   DWORD PTR [ebp+0x20]
  42687a:	call   0x425f3c
  42687f:	test   eax,eax
  426881:	je     0x426935
  426887:	mov    eax,DWORD PTR [ebp+0xc]
  42688a:	mov    edx,DWORD PTR [ebp+0x20]
  42688d:	mov    ecx,ebx
  42688f:	call   0x425e15
  426894:	test   eax,eax
  426896:	je     0x426935
  42689c:	push   ebx
  42689d:	push   DWORD PTR [ebp+0x20]
  4268a0:	call   0x4262c6
  4268a5:	test   eax,eax
  4268a7:	je     0x426935
  4268ad:	mov    eax,DWORD PTR [ebx+0x18c]
  4268b3:	mov    edx,DWORD PTR [ebp+0x20]
  4268b6:	cmp    edx,DWORD PTR [eax]
  4268b8:	jne    0x4268d4
  4268ba:	mov    eax,DWORD PTR [ebx+0x1e0]
  4268c0:	lea    ecx,[ebp-0x18]
  4268c3:	push   ecx
  4268c4:	push   DWORD PTR [ebp-0x18]
  4268c7:	mov    ecx,DWORD PTR [ebp-0x20]
  4268ca:	push   DWORD PTR [ecx+0x54]
  4268cd:	push   edx
  4268ce:	call   DWORD PTR [eax+0x1c]
  4268d1:	mov    edx,DWORD PTR [ebp+0x20]
  4268d4:	mov    eax,DWORD PTR [ebx+0x1c8]
  4268da:	mov    eax,DWORD PTR [eax]
  4268dc:	xor    eax,esi
  4268de:	add    eax,edi
  4268e0:	je     0x426919
  4268e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4268e5:	mov    eax,DWORD PTR [ecx+0x28]
  4268e8:	mov    DWORD PTR [ebp+0x8],0xf89ca5a1
  4268ef:	mov    esi,DWORD PTR [ebp+0x8]
  4268f2:	push   DWORD PTR [ebp+0x14]
  4268f5:	xor    esi,0x8ac
  4268fb:	push   DWORD PTR [ebp+0x10]
  4268fe:	add    esi,0x72f3
  426904:	or     WORD PTR [ecx+0x16],si
  426908:	add    eax,edx
  42690a:	push   edx
  42690b:	call   eax
  42690d:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  426917:	jmp    0x426923
  426919:	mov    eax,DWORD PTR [ebp+0xc]
  42691c:	mov    eax,DWORD PTR [eax+0x28]
  42691f:	add    eax,edx
  426921:	call   eax
  426923:	mov    DWORD PTR [ebp-0x8],eax
  426926:	mov    eax,DWORD PTR [ebp-0x8]
  426929:	mov    ecx,DWORD PTR [ebp+0x1c]
  42692c:	mov    DWORD PTR [ecx],eax
  42692e:	mov    DWORD PTR [ebp-0x30],0x1
  426935:	cmp    DWORD PTR [ebp-0x30],0x0
  426939:	jne    0x42693f
  42693b:	and    DWORD PTR [ebp+0x20],0x0
  42693f:	mov    eax,DWORD PTR [ebp+0x20]
  426942:	jmp    0x426946
  426944:	xor    eax,eax
  426946:	pop    edi
  426947:	pop    esi
  426948:	pop    ebx
  426949:	leave  
  42694a:	ret    0x1c
  42694d:	push   ebp
  42694e:	mov    ebp,esp
  426950:	movzx  edx,WORD PTR [ecx+0x6]
  426954:	movzx  eax,WORD PTR [ecx+0x14]
  426958:	push   ebx
  426959:	push   edi
  42695a:	xor    edi,edi
  42695c:	lea    eax,[eax+ecx*1+0x18]
  426960:	test   edx,edx
  426962:	je     0x426983
  426964:	mov    ecx,DWORD PTR [eax+0xc]
  426967:	lea    ebx,[ecx+esi*1]
  42696a:	cmp    DWORD PTR [ebp+0x8],ebx
  42696d:	jb     0x42697b
  42696f:	mov    ebx,DWORD PTR [eax+0x8]
  426972:	add    ebx,ecx
  426974:	add    ebx,esi
  426976:	cmp    DWORD PTR [ebp+0x8],ebx
  426979:	jb     0x426985
  42697b:	add    eax,0x28
  42697e:	inc    edi
  42697f:	cmp    edi,edx
  426981:	jb     0x426964
  426983:	xor    eax,eax
  426985:	pop    edi
  426986:	pop    ebx
  426987:	pop    ebp
  426988:	ret    0x4
  42698b:	push   ebp
  42698c:	mov    ebp,esp
  42698e:	sub    esp,0x34
  426991:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  426998:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  42699f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  4269a6:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  4269ad:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  4269b4:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  4269bb:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  4269c2:	mov    DWORD PTR [ebp-0x10],eax
  4269c5:	mov    eax,DWORD PTR [ebp+0x8]
  4269c8:	mov    DWORD PTR [ebp-0x14],eax
  4269cb:	mov    eax,DWORD PTR [ebp-0xc]
  4269ce:	push   ebx
  4269cf:	mov    ecx,0x75108ac
  4269d4:	xor    eax,ecx
  4269d6:	push   esi
  4269d7:	mov    esi,DWORD PTR [ebp-0x10]
  4269da:	mov    edx,0x3272f3
  4269df:	add    eax,edx
  4269e1:	push   edi
  4269e2:	cmp    esi,eax
  4269e4:	je     0x426bc3
  4269ea:	mov    eax,DWORD PTR [ebp-0xc]
  4269ed:	mov    esi,DWORD PTR [ebp-0x14]
  4269f0:	xor    eax,ecx
  4269f2:	add    eax,edx
  4269f4:	cmp    esi,eax
  4269f6:	je     0x426bc3
  4269fc:	mov    eax,DWORD PTR [ebp-0xc]
  4269ff:	xor    eax,ecx
  426a01:	add    eax,edx
  426a03:	mov    DWORD PTR [ebp-0x24],eax
  426a06:	mov    eax,DWORD PTR [ebp-0xc]
  426a09:	xor    eax,ecx
  426a0b:	add    eax,edx
  426a0d:	mov    DWORD PTR [ebp-0x28],eax
  426a10:	mov    edi,DWORD PTR [ebp-0x20]
  426a13:	mov    ebx,DWORD PTR [ebp-0x8]
  426a16:	mov    esi,0x8ac
  426a1b:	xor    edi,esi
  426a1d:	mov    eax,0x72f3
  426a22:	xor    ebx,esi
  426a24:	add    edi,eax
  426a26:	add    ebx,eax
  426a28:	sub    ebx,edi
  426a2a:	mov    WORD PTR [ebp-0x8],bx
  426a2e:	jmp    0x426af3
  426a33:	mov    edi,DWORD PTR [ebp-0xc]
  426a36:	mov    bx,WORD PTR [ebp-0x4]
  426a3a:	xor    edi,esi
  426a3c:	add    edi,eax
  426a3e:	cmp    bx,di
  426a41:	je     0x426b35
  426a47:	mov    edi,DWORD PTR [ebp-0xc]
  426a4a:	mov    ebx,DWORD PTR [ebp+0xc]
  426a4d:	xor    edi,ecx
  426a4f:	add    edi,edx
  426a51:	cmp    ebx,edi
  426a53:	mov    di,WORD PTR [ebp-0x4]
  426a57:	mov    bx,WORD PTR [ebp+0x8]
  426a5b:	je     0x426ac6
  426a5d:	cmp    bx,di
  426a60:	je     0x426acf
  426a62:	mov    edi,DWORD PTR [ebp-0x20]
  426a65:	mov    bx,WORD PTR [ebp+0x8]
  426a69:	xor    edi,esi
  426a6b:	add    edi,eax
  426a6d:	cmp    bx,di
  426a70:	jb     0x426a90
  426a72:	mov    edi,DWORD PTR [ebp-0x2c]
  426a75:	mov    bx,WORD PTR [ebp+0x8]
  426a79:	xor    edi,esi
  426a7b:	add    edi,eax
  426a7d:	cmp    bx,di
  426a80:	ja     0x426a90
  426a82:	movzx  edi,WORD PTR [ebp+0x8]
  426a86:	movzx  ebx,WORD PTR [ebp-0x8]
  426a8a:	add    edi,ebx
  426a8c:	mov    WORD PTR [ebp+0x8],di
  426a90:	mov    edi,DWORD PTR [ebp-0x20]
  426a93:	mov    bx,WORD PTR [ebp-0x4]
  426a97:	xor    edi,esi
  426a99:	add    edi,eax
  426a9b:	cmp    bx,di
  426a9e:	jb     0x426abe
  426aa0:	mov    edi,DWORD PTR [ebp-0x2c]
  426aa3:	mov    bx,WORD PTR [ebp-0x4]
  426aa7:	xor    edi,esi
  426aa9:	add    edi,eax
  426aab:	cmp    bx,di
  426aae:	ja     0x426abe
  426ab0:	movzx  edi,WORD PTR [ebp-0x4]
  426ab4:	movzx  ebx,WORD PTR [ebp-0x8]
  426ab8:	add    edi,ebx
  426aba:	mov    WORD PTR [ebp-0x4],di
  426abe:	mov    di,WORD PTR [ebp-0x4]
  426ac2:	mov    bx,WORD PTR [ebp+0x8]
  426ac6:	cmp    bx,di
  426ac9:	jne    0x426bc3
  426acf:	mov    edi,DWORD PTR [ebp-0x1c]
  426ad2:	mov    ebx,DWORD PTR [ebp-0x10]
  426ad5:	xor    edi,ecx
  426ad7:	lea    edi,[edi+ebx*1+0x3272f3]
  426ade:	mov    DWORD PTR [ebp-0x10],edi
  426ae1:	mov    edi,DWORD PTR [ebp-0x1c]
  426ae4:	mov    ebx,DWORD PTR [ebp-0x14]
  426ae7:	xor    edi,ecx
  426ae9:	lea    edi,[edi+ebx*1+0x3272f3]
  426af0:	mov    DWORD PTR [ebp-0x14],edi
  426af3:	mov    edi,DWORD PTR [ebp-0x24]
  426af6:	mov    ebx,DWORD PTR [ebp-0x10]
  426af9:	mov    di,WORD PTR [ebx+edi*2]
  426afd:	mov    WORD PTR [ebp+0x8],di
  426b01:	mov    edi,DWORD PTR [ebp-0x28]
  426b04:	mov    ebx,DWORD PTR [ebp-0x14]
  426b07:	mov    di,WORD PTR [ebx+edi*2]
  426b0b:	mov    WORD PTR [ebp-0x4],di
  426b0f:	mov    edi,DWORD PTR [ebp-0xc]
  426b12:	mov    bx,WORD PTR [ebp+0x8]
  426b16:	xor    edi,esi
  426b18:	add    edi,eax
  426b1a:	cmp    bx,di
  426b1d:	jne    0x426a33
  426b23:	mov    eax,DWORD PTR [ebp-0x18]
  426b26:	mov    esi,DWORD PTR [ebp-0xc]
  426b29:	xor    eax,ecx
  426b2b:	add    eax,edx
  426b2d:	imul   eax,esi
  426b30:	mov    DWORD PTR [ebp-0xc],eax
  426b33:	jmp    0x426b47
  426b35:	mov    eax,DWORD PTR [ebp-0xc]
  426b38:	mov    esi,DWORD PTR [ebp-0x18]
  426b3b:	xor    eax,ecx
  426b3d:	lea    eax,[eax+esi*1+0x3272f3]
  426b44:	mov    DWORD PTR [ebp-0x18],eax
  426b47:	mov    eax,DWORD PTR [ebp-0x24]
  426b4a:	sub    eax,edx
  426b4c:	xor    eax,ecx
  426b4e:	mov    DWORD PTR [ebp-0x30],eax
  426b51:	mov    eax,DWORD PTR [ebp-0x28]
  426b54:	sub    eax,edx
  426b56:	xor    eax,ecx
  426b58:	mov    DWORD PTR [ebp-0x34],eax
  426b5b:	mov    eax,DWORD PTR [ebp-0x34]
  426b5e:	mov    esi,DWORD PTR [ebp-0x1c]
  426b61:	xor    esi,ecx
  426b63:	add    esi,edx
  426b65:	xor    eax,ecx
  426b67:	add    eax,0x3272f3
  426b6c:	imul   esi,eax
  426b6f:	mov    eax,DWORD PTR [ebp-0x14]
  426b72:	movzx  eax,WORD PTR [esi+eax*1]
  426b76:	mov    esi,DWORD PTR [ebp-0x30]
  426b79:	mov    edi,DWORD PTR [ebp-0x1c]
  426b7c:	xor    esi,ecx
  426b7e:	add    esi,edx
  426b80:	xor    edi,ecx
  426b82:	add    edi,edx
  426b84:	imul   edi,esi
  426b87:	mov    esi,DWORD PTR [ebp-0x10]
  426b8a:	movzx  esi,WORD PTR [edi+esi*1]
  426b8e:	sub    eax,edx
  426b90:	sub    esi,edx
  426b92:	xor    eax,ecx
  426b94:	xor    esi,ecx
  426b96:	cmp    esi,eax
  426b98:	jne    0x426bc3
  426b9a:	mov    eax,DWORD PTR [ebp-0x30]
  426b9d:	mov    esi,DWORD PTR [ebp-0x1c]
  426ba0:	xor    eax,ecx
  426ba2:	add    eax,0x3272f3
  426ba7:	xor    esi,ecx
  426ba9:	add    esi,edx
  426bab:	imul   esi,eax
  426bae:	mov    eax,DWORD PTR [ebp-0x10]
  426bb1:	movzx  eax,WORD PTR [esi+eax*1]
  426bb5:	mov    esi,DWORD PTR [ebp-0xc]
  426bb8:	sub    eax,edx
  426bba:	xor    eax,ecx
  426bbc:	cmp    eax,esi
  426bbe:	mov    eax,DWORD PTR [ebp-0xc]
  426bc1:	je     0x426bc6
  426bc3:	mov    eax,DWORD PTR [ebp-0x18]
  426bc6:	pop    edi
  426bc7:	xor    eax,ecx
  426bc9:	pop    esi
  426bca:	add    eax,edx
  426bcc:	pop    ebx
  426bcd:	leave  
  426bce:	ret    0x8
  426bd1:	push   ebp
  426bd2:	mov    ebp,esp
  426bd4:	push   ecx
  426bd5:	mov    cx,WORD PTR [eax]
  426bd8:	push   esi
  426bd9:	mov    esi,0x3b5b
  426bde:	sub    cx,si
  426be1:	mov    esi,0x8a99
  426be6:	xor    cx,si
  426be9:	mov    esi,0x4e3c
  426bee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426bf5:	mov    edx,0xf89c85a1
  426bfa:	cmp    cx,si
  426bfd:	je     0x426c5c
  426bff:	push   ebx
  426c00:	push   edi
  426c01:	movzx  ecx,cx
  426c04:	mov    edi,0xffcd8d0d
  426c09:	mov    esi,0x75108ac
  426c0e:	mov    ebx,0x4f98
  426c13:	cmp    cx,bx
  426c16:	jne    0x426c1b
  426c18:	mov    DWORD PTR [ebp-0x4],edx
  426c1b:	lea    edx,[edi+0x1]
  426c1e:	xor    edx,esi
  426c20:	mov    edi,edx
  426c22:	xor    edi,esi
  426c24:	mov    cx,WORD PTR [eax+edi*2+0x64e5e6]
  426c2c:	mov    ebx,0x3b5b
  426c31:	sub    cx,bx
  426c34:	mov    ebx,0x8a99
  426c39:	xor    cx,bx
  426c3c:	mov    ebx,0x4e3c
  426c41:	cmp    cx,bx
  426c44:	jne    0x426c0e
  426c46:	mov    ecx,DWORD PTR [ebp-0x4]
  426c49:	pop    edi
  426c4a:	pop    ebx
  426c4b:	cmp    ecx,0xf89c85a0
  426c51:	je     0x426c5c
  426c53:	xor    ecx,esi
  426c55:	lea    eax,[eax+ecx*2+0x64e5e8]
  426c5c:	pop    esi
  426c5d:	leave  
  426c5e:	ret    
  426c5f:	push   ebp
  426c60:	mov    ebp,esp
  426c62:	push   ecx
  426c63:	push   esi
  426c64:	push   edi
  426c65:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426c6c:	mov    esi,0xf89c85a1
  426c71:	call   0x426bd1
  426c76:	mov    edi,eax
  426c78:	mov    al,BYTE PTR [edi]
  426c7a:	sub    al,0x2
  426c7c:	xor    al,0x7d
  426c7e:	cmp    al,0x83
  426c80:	je     0x426ce3
  426c82:	mov    eax,edi
  426c84:	mov    edx,0xffcd8d0d
  426c89:	mov    ecx,0x75108ac
  426c8e:	push   ebx
  426c8f:	mov    ax,WORD PTR [eax]
  426c92:	mov    ebx,0x3b5b
  426c97:	sub    ax,bx
  426c9a:	mov    ebx,0x8a99
  426c9f:	xor    ax,bx
  426ca2:	mov    ebx,0x4e4a
  426ca7:	cmp    ax,bx
  426caa:	jne    0x426caf
  426cac:	mov    DWORD PTR [ebp-0x4],esi
  426caf:	lea    esi,[edx+0x1]
  426cb2:	xor    esi,ecx
  426cb4:	mov    edx,esi
  426cb6:	xor    edx,ecx
  426cb8:	lea    eax,[edi+edx*2+0x64e5e6]
  426cbf:	mov    bl,BYTE PTR [eax]
  426cc1:	sub    bl,0x2
  426cc4:	xor    bl,0x7d
  426cc7:	cmp    bl,0x83
  426cca:	jne    0x426c8f
  426ccc:	mov    eax,DWORD PTR [ebp-0x4]
  426ccf:	pop    ebx
  426cd0:	cmp    eax,0xf89c85a0
  426cd5:	je     0x426ce3
  426cd7:	xor    eax,ecx
  426cd9:	xor    ecx,ecx
  426cdb:	mov    WORD PTR [edi+eax*2+0x64e5e6],cx
  426ce3:	mov    eax,edi
  426ce5:	pop    edi
  426ce6:	pop    esi
  426ce7:	leave  
  426ce8:	ret    
  426ce9:	push   ebp
  426cea:	mov    ebp,esp
  426cec:	push   ecx
  426ced:	push   esi
  426cee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426cf5:	mov    esi,0xf89c85a1
  426cfa:	call   0x426bd1
  426cff:	mov    cx,WORD PTR [eax]
  426d02:	mov    edx,0x3b5b
  426d07:	sub    cx,dx
  426d0a:	mov    edx,0x8a99
  426d0f:	xor    cx,dx
  426d12:	mov    edx,0x4e3c
  426d17:	cmp    cx,dx
  426d1a:	je     0x426d73
  426d1c:	push   ebx
  426d1d:	push   edi
  426d1e:	movzx  ecx,cx
  426d21:	mov    edx,0xffcd8d0d
  426d26:	mov    edi,0x75108ac
  426d2b:	mov    ebx,0x4e4a
  426d30:	cmp    cx,bx
  426d33:	jne    0x426d38
  426d35:	mov    DWORD PTR [ebp-0x4],esi
  426d38:	lea    esi,[edx+0x1]
  426d3b:	xor    esi,edi
  426d3d:	mov    edx,esi
  426d3f:	xor    edx,edi
  426d41:	mov    cx,WORD PTR [eax+edx*2+0x64e5e6]
  426d49:	mov    ebx,0x3b5b
  426d4e:	sub    cx,bx
  426d51:	mov    ebx,0x8a99
  426d56:	xor    cx,bx
  426d59:	mov    ebx,0x4e3c
  426d5e:	cmp    cx,bx
  426d61:	jne    0x426d2b
  426d63:	cmp    DWORD PTR [ebp-0x4],0xf89c85a0
  426d6a:	pop    edi
  426d6b:	pop    ebx
  426d6c:	je     0x426d73
  426d6e:	xor    eax,eax
  426d70:	inc    eax
  426d71:	jmp    0x426d75
  426d73:	xor    eax,eax
  426d75:	pop    esi
  426d76:	leave  
  426d77:	ret    
  426d78:	push   ebp
  426d79:	mov    ebp,esp
  426d7b:	push   ecx
  426d7c:	mov    eax,DWORD PTR [ebp+0x8]
  426d7f:	movzx  ecx,WORD PTR [eax]
  426d82:	push   esi
  426d83:	lea    eax,[ecx-0x3b5b]
  426d89:	mov    esi,0x8a99
  426d8e:	push   edi
  426d8f:	xor    eax,esi
  426d91:	mov    edi,0x4e3c
  426d96:	mov    DWORD PTR [ebp-0x4],edx
  426d99:	cmp    ax,di
  426d9c:	je     0x426dc9
  426d9e:	mov    eax,DWORD PTR [ebp+0x8]
  426da1:	sub    eax,edx
  426da3:	mov    DWORD PTR [ebp+0x8],eax
  426da6:	jmp    0x426dab
  426da8:	mov    eax,DWORD PTR [ebp+0x8]
  426dab:	mov    WORD PTR [edx],cx
  426dae:	add    edx,0x2
  426db1:	movzx  edi,WORD PTR [eax+edx*1]
  426db5:	mov    ecx,edi
  426db7:	add    edi,0xffffc4a5
  426dbd:	xor    edi,esi
  426dbf:	mov    eax,0x4e3c
  426dc4:	cmp    di,ax
  426dc7:	jne    0x426da8
  426dc9:	xor    eax,eax
  426dcb:	pop    edi
  426dcc:	mov    WORD PTR [edx],ax
  426dcf:	mov    eax,DWORD PTR [ebp-0x4]
  426dd2:	pop    esi
  426dd3:	leave  
  426dd4:	ret    0x4
  426dd7:	push   ebp
  426dd8:	mov    ebp,esp
  426dda:	sub    esp,0x18
  426ddd:	mov    DWORD PTR [ebp-0x8],0xf89c85a1
  426de4:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  426deb:	mov    ecx,DWORD PTR [ebp-0x8]
  426dee:	push   esi
  426def:	mov    eax,0x75108ac
  426df4:	xor    ecx,eax
  426df6:	mov    esi,0x3272f3
  426dfb:	add    ecx,esi
  426dfd:	mov    DWORD PTR [ebp-0x4],ecx
  426e00:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  426e07:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  426e0e:	push   edi
  426e0f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426e16:	jmp    0x426eb7
  426e1b:	mov    ecx,DWORD PTR [ebp-0x4]
  426e1e:	mov    edx,DWORD PTR [ebp+0x10]
  426e21:	sub    edx,ecx
  426e23:	mov    ecx,DWORD PTR [ebp-0xc]
  426e26:	xor    ecx,eax
  426e28:	add    ecx,esi
  426e2a:	cmp    edx,ecx
  426e2c:	jbe    0x426e49
  426e2e:	mov    edx,DWORD PTR [ebp-0x4]
  426e31:	add    edx,DWORD PTR [ebp+0x8]
  426e34:	mov    ecx,DWORD PTR [ebp-0x4]
  426e37:	add    ecx,DWORD PTR [ebp+0xc]
  426e3a:	mov    edi,DWORD PTR [ecx]
  426e3c:	mov    DWORD PTR [edx],edi
  426e3e:	mov    ecx,DWORD PTR [ecx+0x4]
  426e41:	mov    DWORD PTR [edx+0x4],ecx
  426e44:	mov    ecx,DWORD PTR [ebp-0xc]
  426e47:	jmp    0x426e96
  426e49:	mov    ecx,DWORD PTR [ebp-0x4]
  426e4c:	mov    edx,DWORD PTR [ebp+0x10]
  426e4f:	sub    edx,ecx
  426e51:	mov    ecx,DWORD PTR [ebp-0x10]
  426e54:	xor    ecx,eax
  426e56:	add    ecx,esi
  426e58:	cmp    edx,ecx
  426e5a:	mov    ecx,DWORD PTR [ebp-0x4]
  426e5d:	jbe    0x426e71
  426e5f:	add    ecx,DWORD PTR [ebp+0x8]
  426e62:	mov    edx,DWORD PTR [ebp-0x4]
  426e65:	add    edx,DWORD PTR [ebp+0xc]
  426e68:	mov    edx,DWORD PTR [edx]
  426e6a:	mov    DWORD PTR [ecx],edx
  426e6c:	mov    ecx,DWORD PTR [ebp-0x10]
  426e6f:	jmp    0x426e96
  426e71:	mov    edx,DWORD PTR [ebp+0x10]
  426e74:	sub    edx,ecx
  426e76:	mov    ecx,DWORD PTR [ebp-0x14]
  426e79:	xor    ecx,eax
  426e7b:	add    ecx,esi
  426e7d:	cmp    edx,ecx
  426e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  426e82:	jbe    0x426ea7
  426e84:	add    ecx,DWORD PTR [ebp+0x8]
  426e87:	mov    edx,DWORD PTR [ebp-0x4]
  426e8a:	add    edx,DWORD PTR [ebp+0xc]
  426e8d:	mov    dx,WORD PTR [edx]
  426e90:	mov    WORD PTR [ecx],dx
  426e93:	mov    ecx,DWORD PTR [ebp-0x14]
  426e96:	mov    edx,DWORD PTR [ebp-0x4]
  426e99:	xor    ecx,eax
  426e9b:	lea    ecx,[ecx+edx*1+0x3272f3]
  426ea2:	mov    DWORD PTR [ebp-0x4],ecx
  426ea5:	jmp    0x426eb7
  426ea7:	add    ecx,DWORD PTR [ebp+0x8]
  426eaa:	mov    edx,DWORD PTR [ebp-0x4]
  426ead:	add    edx,DWORD PTR [ebp+0xc]
  426eb0:	mov    dl,BYTE PTR [edx]
  426eb2:	mov    BYTE PTR [ecx],dl
  426eb4:	inc    DWORD PTR [ebp-0x4]
  426eb7:	mov    ecx,DWORD PTR [ebp-0x18]
  426eba:	mov    edx,DWORD PTR [ebp+0x10]
  426ebd:	xor    ecx,eax
  426ebf:	add    ecx,esi
  426ec1:	imul   ecx,edx
  426ec4:	mov    edx,DWORD PTR [ebp-0x8]
  426ec7:	mov    edi,DWORD PTR [ebp-0x4]
  426eca:	xor    edx,eax
  426ecc:	lea    edx,[edx+edi*1+0x3272f3]
  426ed3:	cmp    edx,ecx
  426ed5:	jb     0x426e1b
  426edb:	pop    edi
  426edc:	pop    esi
  426edd:	leave  
  426ede:	ret    0xc
  426ee1:	push   ebp
  426ee2:	mov    ebp,esp
  426ee4:	sub    esp,0xc
  426ee7:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426eee:	push   esi
  426eef:	mov    esi,eax
  426ef1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  426ef8:	mov    edx,DWORD PTR [ebp-0x4]
  426efb:	mov    eax,0x75108ac
  426f00:	xor    edx,eax
  426f02:	mov    ecx,0x3272f3
  426f07:	add    edx,ecx
  426f09:	cmp    esi,edx
  426f0b:	je     0x426f4d
  426f0d:	push   ebx
  426f0e:	push   edi
  426f0f:	mov    edx,DWORD PTR [ebp-0x8]
  426f12:	mov    ebx,DWORD PTR [ebp+0x8]
  426f15:	xor    edx,eax
  426f17:	mov    edi,0xffcd8d0d
  426f1c:	sub    edi,edx
  426f1e:	add    esi,edi
  426f20:	lea    edx,[esi-0x3272f3]
  426f26:	xor    edx,eax
  426f28:	mov    DWORD PTR [ebp-0xc],edx
  426f2b:	mov    edx,DWORD PTR [ebp-0x4]
  426f2e:	mov    edi,DWORD PTR [ebp-0xc]
  426f31:	xor    dl,0xac
  426f34:	sub    dl,0xd
  426f37:	xor    edi,eax
  426f39:	mov    BYTE PTR [edi+ebx*1+0x3272f3],dl
  426f40:	mov    edx,DWORD PTR [ebp-0x4]
  426f43:	xor    edx,eax
  426f45:	add    edx,ecx
  426f47:	cmp    esi,edx
  426f49:	jne    0x426f0f
  426f4b:	pop    edi
  426f4c:	pop    ebx
  426f4d:	pop    esi
  426f4e:	leave  
  426f4f:	ret    0x4
  426f52:	push   ebp
  426f53:	mov    ebp,esp
  426f55:	sub    esp,0x21c
  426f5b:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426f62:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  426f69:	mov    eax,DWORD PTR [ebp+0x10]
  426f6c:	mov    eax,DWORD PTR [ebp-0x4]
  426f6f:	mov    ecx,DWORD PTR [ebp+0x8]
  426f72:	push   esi
  426f73:	push   edi
  426f74:	mov    edi,0x75108ac
  426f79:	xor    eax,edi
  426f7b:	mov    esi,0x3272f3
  426f80:	add    eax,esi
  426f82:	cmp    eax,ecx
  426f84:	mov    eax,DWORD PTR [ebp-0x4]
  426f87:	jne    0x426f92
  426f89:	xor    eax,edi
  426f8b:	add    eax,esi
  426f8d:	jmp    0x42703e
  426f92:	mov    ecx,DWORD PTR [ebp+0xc]
  426f95:	xor    eax,edi
  426f97:	add    eax,esi
  426f99:	cmp    eax,ecx
  426f9b:	jne    0x426fa2
  426f9d:	mov    eax,DWORD PTR [ebp-0x4]
  426fa0:	jmp    0x426f89
  426fa2:	lea    eax,[ebp-0x21c]
  426fa8:	mov    DWORD PTR [ebp-0x8],eax
  426fab:	mov    eax,DWORD PTR [ebp+0xc]
  426fae:	mov    DWORD PTR [ebp-0x10],eax
  426fb1:	mov    eax,DWORD PTR [ebp-0x4]
  426fb4:	xor    eax,edi
  426fb6:	add    eax,esi
  426fb8:	mov    DWORD PTR [ebp+0x10],eax
  426fbb:	mov    eax,DWORD PTR [ebp+0xc]
  426fbe:	push   ebx
  426fbf:	call   0x426ce9
  426fc4:	mov    ebx,eax
  426fc6:	mov    eax,DWORD PTR [ebp+0x8]
  426fc9:	mov    eax,DWORD PTR [eax+0x14]
  426fcc:	jmp    0x427026
  426fce:	mov    eax,DWORD PTR [ebp+0xc]
  426fd1:	sub    eax,0x8
  426fd4:	mov    DWORD PTR [ebp-0xc],eax
  426fd7:	mov    eax,DWORD PTR [ebp-0xc]
  426fda:	mov    eax,DWORD PTR [eax+0x28]
  426fdd:	call   0x426bd1
  426fe2:	mov    DWORD PTR [ebp+0x10],eax
  426fe5:	push   DWORD PTR [ebp+0x10]
  426fe8:	mov    edx,DWORD PTR [ebp-0x8]
  426feb:	call   0x426d78
  426ff0:	mov    eax,DWORD PTR [ebp-0x4]
  426ff3:	xor    eax,edi
  426ff5:	add    eax,esi
  426ff7:	cmp    eax,ebx
  426ff9:	jne    0x427003
  426ffb:	mov    eax,DWORD PTR [ebp-0x8]
  426ffe:	call   0x426c5f
  427003:	mov    eax,DWORD PTR [ebp-0x14]
  427006:	xor    eax,edi
  427008:	add    eax,esi
  42700a:	push   eax
  42700b:	push   DWORD PTR [ebp-0x10]
  42700e:	mov    eax,DWORD PTR [ebp-0x8]
  427011:	call   0x42698b
  427016:	mov    ecx,DWORD PTR [ebp-0x4]
  427019:	xor    ecx,edi
  42701b:	add    ecx,esi
  42701d:	cmp    eax,ecx
  42701f:	je     0x427044
  427021:	mov    eax,DWORD PTR [ebp+0xc]
  427024:	mov    eax,DWORD PTR [eax]
  427026:	mov    DWORD PTR [ebp+0xc],eax
  427029:	mov    eax,DWORD PTR [ebp+0x8]
  42702c:	mov    ecx,DWORD PTR [ebp+0xc]
  42702f:	add    eax,0x14
  427032:	cmp    ecx,eax
  427034:	jne    0x426fce
  427036:	mov    eax,DWORD PTR [ebp-0x4]
  427039:	xor    eax,edi
  42703b:	add    eax,esi
  42703d:	pop    ebx
  42703e:	pop    edi
  42703f:	pop    esi
  427040:	leave  
  427041:	ret    0xc
  427044:	mov    eax,DWORD PTR [ebp-0xc]
  427047:	mov    eax,DWORD PTR [eax+0x18]
  42704a:	jmp    0x42703d
  42704c:	push   ebp
  42704d:	mov    ebp,esp
  42704f:	mov    eax,DWORD PTR [ebp+0xc]
  427052:	sub    esp,0x10
  427055:	cmp    DWORD PTR [ebp+0x8],0x0
  427059:	push   ebx
  42705a:	push   esi
  42705b:	push   edi
  42705c:	je     0x427111
  427062:	test   eax,eax
  427064:	je     0x427111
  42706a:	movzx  eax,WORD PTR [eax+0x20]
  42706e:	mov    ecx,eax
  427070:	mov    DWORD PTR [ebp-0x10],eax
  427073:	xor    edx,edx
  427075:	and    DWORD PTR [ebp-0x8],edx
  427078:	mov    eax,0x8a99
  42707d:	xor    ecx,eax
  42707f:	add    ecx,0x3b5b
  427085:	mov    DWORD PTR [ebp-0xc],ecx
  427088:	and    DWORD PTR [ebp-0x4],0x0
  42708c:	xor    ecx,ecx
  42708e:	push   0x7d
  427090:	pop    edi
  427091:	cmp    cx,WORD PTR [ebp-0xc]
  427095:	jae    0x4270fb
  427097:	lea    esi,[edx-0x3b5b]
  42709d:	xor    esi,eax
  42709f:	movzx  ecx,WORD PTR [ebp-0x4]
  4270a3:	mov    ebx,DWORD PTR [ebp+0xc]
  4270a6:	lea    ecx,[ebx+ecx*4]
  4270a9:	cmp    WORD PTR [ecx+0x2],si
  4270ad:	jne    0x4270e6
  4270af:	movzx  ecx,WORD PTR [ecx]
  4270b2:	mov    edi,0x4e3c
  4270b7:	cmp    cx,di
  4270ba:	jne    0x4270c8
  4270bc:	mov    ebx,DWORD PTR [ebp+0x8]
  4270bf:	movzx  edi,dx
  4270c2:	cmp    BYTE PTR [edi+ebx*1],0x0
  4270c6:	je     0x4270f5
  4270c8:	mov    ebx,DWORD PTR [ebp+0x8]
  4270cb:	movzx  edi,dx
  4270ce:	movsx  di,BYTE PTR [edi+ebx*1]
  4270d3:	mov    ebx,0x3b5b
  4270d8:	sub    di,bx
  4270db:	xor    di,ax
  4270de:	cmp    cx,di
  4270e1:	je     0x4270f5
  4270e3:	push   0xffffff83
  4270e5:	pop    edi
  4270e6:	inc    DWORD PTR [ebp-0x4]
  4270e9:	mov    cx,WORD PTR [ebp-0xc]
  4270ed:	cmp    WORD PTR [ebp-0x4],cx
  4270f1:	jb     0x42709f
  4270f3:	jmp    0x4270fb
  4270f5:	inc    DWORD PTR [ebp-0x8]
  4270f8:	push   0xffffff82
  4270fa:	pop    edi
  4270fb:	mov    esi,DWORD PTR [ebp+0x8]
  4270fe:	movzx  ecx,dx
  427101:	cmp    BYTE PTR [ecx+esi*1],0x0
  427105:	je     0x42711a
  427107:	inc    edx
  427108:	cmp    edi,0xffffff83
  42710b:	jne    0x427088
  427111:	xor    eax,eax
  427113:	pop    edi
  427114:	pop    esi
  427115:	pop    ebx
  427116:	leave  
  427117:	ret    0x8
  42711a:	mov    ecx,DWORD PTR [ebp-0x8]
  42711d:	add    ecx,0xffffc4a5
  427123:	xor    cx,ax
  427126:	xor    eax,eax
  427128:	cmp    cx,WORD PTR [ebp-0x10]
  42712c:	sete   al
  42712f:	jmp    0x427113
  427131:	push   ebp
  427132:	mov    ebp,esp
  427134:	sub    esp,0x50
  427137:	push   edi
  427138:	mov    edi,eax
  42713a:	mov    eax,DWORD PTR [edi+0x1a8]
  427140:	cmp    DWORD PTR [eax],0x0
  427143:	jne    0x42714c
  427145:	xor    eax,eax
  427147:	jmp    0x42727d
  42714c:	push   DWORD PTR [ebp+0x8]
  42714f:	push   0x2c
  427151:	pop    eax
  427152:	call   0x426ee1
  427157:	mov    edx,DWORD PTR [edi+0x1ac]
  42715d:	lea    eax,[edi+0x22]
  427160:	mov    DWORD PTR [ebp-0x4c],eax
  427163:	lea    eax,[edi+0x44]
  427166:	mov    DWORD PTR [ebp-0x48],eax
  427169:	lea    eax,[edi+0x66]
  42716c:	mov    DWORD PTR [ebp-0x44],eax
  42716f:	lea    eax,[edi+0x88]
  427175:	mov    DWORD PTR [ebp-0x40],eax
  427178:	lea    eax,[edi+0xaa]
  42717e:	mov    DWORD PTR [ebp-0x3c],eax
  427181:	lea    eax,[edi+0xcc]
  427187:	mov    DWORD PTR [ebp-0x38],eax
  42718a:	lea    eax,[edi+0xee]
  427190:	mov    DWORD PTR [ebp-0x34],eax
  427193:	lea    eax,[edi+0x110]
  427199:	mov    DWORD PTR [ebp-0x30],eax
  42719c:	lea    eax,[edi+0x132]
  4271a2:	mov    DWORD PTR [ebp-0x2c],eax
  4271a5:	lea    eax,[edi+0x154]
  4271ab:	push   edi
  4271ac:	mov    DWORD PTR [ebp-0x50],edi
  4271af:	mov    DWORD PTR [ebp-0x28],eax
  4271b2:	call   0x4272b1
  4271b7:	push   eax
  4271b8:	mov    eax,DWORD PTR [edi+0x1a8]
  4271be:	push   DWORD PTR [eax]
  4271c0:	call   0x426f52
  4271c5:	mov    DWORD PTR [ebp-0x10],eax
  4271c8:	test   eax,eax
  4271ca:	je     0x42727d
  4271d0:	mov    ecx,DWORD PTR [eax+0x3c]
  4271d3:	push   ebx
  4271d4:	push   esi
  4271d5:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4271d9:	add    esi,eax
  4271db:	mov    edi,DWORD PTR [esi+0x24]
  4271de:	mov    ecx,DWORD PTR [esi+0x1c]
  4271e1:	mov    edx,DWORD PTR [esi+0x20]
  4271e4:	mov    ebx,DWORD PTR [esi+0x18]
  4271e7:	add    edi,eax
  4271e9:	mov    DWORD PTR [ebp-0x20],edi
  4271ec:	mov    edi,DWORD PTR [esi+0x14]
  4271ef:	add    ecx,eax
  4271f1:	add    edx,eax
  4271f3:	mov    DWORD PTR [ebp-0xc],ecx
  4271f6:	mov    DWORD PTR [ebp-0x1c],edx
  4271f9:	mov    DWORD PTR [ebp-0x8],edi
  4271fc:	cmp    edi,ebx
  4271fe:	ja     0x427203
  427200:	mov    DWORD PTR [ebp-0x8],ebx
  427203:	xor    ebx,ebx
  427205:	mov    DWORD PTR [ebp-0x18],ebx
  427208:	cmp    DWORD PTR [ebp-0x8],ebx
  42720b:	jbe    0x42727b
  42720d:	jmp    0x427212
  42720f:	mov    edx,DWORD PTR [ebp-0x1c]
  427212:	mov    edi,DWORD PTR [ebp-0x20]
  427215:	movzx  edi,WORD PTR [edi+ebx*2]
  427219:	cmp    ebx,DWORD PTR [esi+0x18]
  42721c:	jae    0x42727b
  42721e:	cmp    edi,DWORD PTR [esi+0x14]
  427221:	jae    0x42727b
  427223:	mov    ebx,DWORD PTR [edx+ebx*4]
  427226:	mov    edx,DWORD PTR [ebp+0x8]
  427229:	mov    edi,DWORD PTR [ecx+edi*4]
  42722c:	mov    DWORD PTR [ebp-0x4],edx
  42722f:	lea    edx,[ebp-0x50]
  427232:	add    ebx,eax
  427234:	add    edi,eax
  427236:	sub    edx,DWORD PTR [ebp+0x8]
  427239:	mov    DWORD PTR [ebp-0x14],0xb
  427240:	mov    DWORD PTR [ebp-0x24],edx
  427243:	mov    edx,DWORD PTR [ebp-0x4]
  427246:	cmp    DWORD PTR [edx],0x0
  427249:	jne    0x427266
  42724b:	mov    eax,DWORD PTR [ebp-0x24]
  42724e:	push   DWORD PTR [eax+edx*1]
  427251:	push   ebx
  427252:	call   0x42704c
  427257:	mov    ecx,DWORD PTR [ebp-0xc]
  42725a:	test   eax,eax
  42725c:	je     0x427263
  42725e:	mov    eax,DWORD PTR [ebp-0x4]
  427261:	mov    DWORD PTR [eax],edi
  427263:	mov    eax,DWORD PTR [ebp-0x10]
  427266:	add    DWORD PTR [ebp-0x4],0x4
  42726a:	dec    DWORD PTR [ebp-0x14]
  42726d:	jne    0x427243
  42726f:	mov    ebx,DWORD PTR [ebp-0x18]
  427272:	inc    ebx
  427273:	mov    DWORD PTR [ebp-0x18],ebx
  427276:	cmp    ebx,DWORD PTR [ebp-0x8]
  427279:	jb     0x42720f
  42727b:	pop    esi
  42727c:	pop    ebx
  42727d:	pop    edi
  42727e:	leave  
  42727f:	ret    0x4
  427282:	push   ebp
  427283:	mov    ebp,esp
  427285:	mov    eax,DWORD PTR [ebp+0x8]
  427288:	push   esi
  427289:	push   DWORD PTR [eax+0x1e0]
  42728f:	lea    esi,[eax+0x198]
  427295:	mov    eax,DWORD PTR [ebp+0x8]
  427298:	call   0x427131
  42729d:	mov    ecx,DWORD PTR [esi]
  42729f:	mov    DWORD PTR [ecx],eax
  4272a1:	mov    eax,DWORD PTR [esi]
  4272a3:	xor    ecx,ecx
  4272a5:	cmp    DWORD PTR [eax],ecx
  4272a7:	pop    esi
  4272a8:	setne  cl
  4272ab:	mov    eax,ecx
  4272ad:	pop    ebp
  4272ae:	ret    0x4
  4272b1:	mov    ecx,DWORD PTR [edi+0x188]
  4272b7:	push   ebx
  4272b8:	jmp    0x4272cd
  4272ba:	xor    eax,0x8a99
  4272bf:	add    eax,0x3b5b
  4272c4:	mov    WORD PTR [ecx],ax
  4272c7:	add    ecx,0x2
  4272ca:	add    edx,0x2
  4272cd:	movzx  eax,WORD PTR [edx]
  4272d0:	mov    ebx,0x4e3c
  4272d5:	cmp    ax,bx
  4272d8:	jne    0x4272ba
  4272da:	xor    eax,eax
  4272dc:	mov    WORD PTR [ecx],ax
  4272df:	mov    eax,DWORD PTR [edi+0x188]
  4272e5:	pop    ebx
  4272e6:	ret    
  4272e7:	push   edi
  4272e8:	mov    edi,eax
  4272ea:	mov    eax,DWORD PTR [esi+0x188]
  4272f0:	shl    edi,0x6
  4272f3:	add    eax,edi
  4272f5:	jmp    0x427301
  4272f7:	xor    cl,0x7d
  4272fa:	add    cl,0x2
  4272fd:	mov    BYTE PTR [eax],cl
  4272ff:	inc    eax
  427300:	inc    edx
  427301:	mov    cl,BYTE PTR [edx]
  427303:	cmp    cl,0x83
  427306:	jne    0x4272f7
  427308:	mov    BYTE PTR [eax],0x0
  42730b:	mov    eax,DWORD PTR [esi+0x188]
  427311:	add    eax,edi
  427313:	pop    edi
  427314:	ret    
  427315:	push   ebp
  427316:	mov    ebp,esp
  427318:	sub    esp,0x14
  42731b:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  427322:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  427329:	mov    eax,DWORD PTR [ebx]
  42732b:	mov    DWORD PTR [ebp-0x8],eax
  42732e:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  427335:	push   esi
  427336:	push   edi
  427337:	mov    DWORD PTR [ebp-0x14],0xead71881
  42733e:	mov    edi,DWORD PTR [ebp-0x4]
  427341:	mov    ecx,DWORD PTR [ebp-0x10]
  427344:	mov    eax,0x75108ac
  427349:	xor    edi,eax
  42734b:	mov    edx,0x3272f3
  427350:	xor    ecx,eax
  427352:	add    edi,edx
  427354:	add    ecx,edx
  427356:	imul   edi,ecx
  427359:	jmp    0x4273a1
  42735b:	mov    ecx,DWORD PTR [ebp-0x8]
  42735e:	mov    esi,DWORD PTR [ebp-0x4]
  427361:	xor    ecx,eax
  427363:	xor    esi,eax
  427365:	add    ecx,edx
  427367:	add    esi,edx
  427369:	test   esi,ecx
  42736b:	mov    esi,DWORD PTR [ebp-0x8]
  42736e:	mov    ecx,DWORD PTR [ebp-0x4]
  427371:	je     0x427388
  427373:	xor    ecx,eax
  427375:	xor    esi,eax
  427377:	add    ecx,edx
  427379:	add    esi,edx
  42737b:	shr    esi,cl
  42737d:	mov    ecx,DWORD PTR [ebp-0x14]
  427380:	xor    ecx,eax
  427382:	add    ecx,edx
  427384:	xor    esi,ecx
  427386:	jmp    0x427392
  427388:	xor    esi,eax
  42738a:	xor    ecx,eax
  42738c:	add    esi,edx
  42738e:	add    ecx,edx
  427390:	shr    esi,cl
  427392:	mov    DWORD PTR [ebp-0x8],esi
  427395:	mov    ecx,DWORD PTR [ebp-0x4]
  427398:	xor    ecx,eax
  42739a:	lea    edi,[edi+ecx*1+0x3272f3]
  4273a1:	mov    ecx,DWORD PTR [ebp-0xc]
  4273a4:	mov    esi,DWORD PTR [ebp-0x4]
  4273a7:	xor    esi,eax
  4273a9:	xor    ecx,eax
  4273ab:	sub    ecx,esi
  4273ad:	cmp    edi,ecx
  4273af:	jbe    0x42735b
  4273b1:	mov    eax,DWORD PTR [ebp-0x8]
  4273b4:	pop    edi
  4273b5:	mov    DWORD PTR [ebx],eax
  4273b7:	mov    eax,DWORD PTR [ebp-0x8]
  4273ba:	pop    esi
  4273bb:	leave  
  4273bc:	ret    
  4273bd:	push   ebp
  4273be:	mov    ebp,esp
  4273c0:	sub    esp,0x38
  4273c3:	push   ebx
  4273c4:	mov    ebx,0xf89c85a1
  4273c9:	mov    DWORD PTR [ebp-0x4],ebx
  4273cc:	lea    ecx,[ebx+0x1]
  4273cf:	mov    DWORD PTR [ebp-0x24],ecx
  4273d2:	mov    eax,DWORD PTR [ebp-0x4]
  4273d5:	mov    edx,DWORD PTR [ebp+0x8]
  4273d8:	push   esi
  4273d9:	mov    esi,0x75108ac
  4273de:	xor    eax,esi
  4273e0:	push   edi
  4273e1:	mov    edi,0x3272f3
  4273e6:	add    eax,edi
  4273e8:	cmp    edx,eax
  4273ea:	mov    eax,DWORD PTR [ebp-0x4]
  4273ed:	je     0x427552
  4273f3:	mov    edx,DWORD PTR [ebp+0xc]
  4273f6:	xor    eax,esi
  4273f8:	add    eax,edi
  4273fa:	cmp    edx,eax
  4273fc:	je     0x42754f
  427402:	mov    eax,DWORD PTR [ebp+0x10]
  427405:	mov    edx,DWORD PTR [ebp+0xc]
  427408:	mov    DWORD PTR [ebp-0x14],eax
  42740b:	mov    eax,DWORD PTR [ebp+0x8]
  42740e:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  427415:	mov    DWORD PTR [ebp-0xc],eax
  427418:	lea    eax,[ebx+0x2]
  42741b:	mov    DWORD PTR [ebp-0x1c],eax
  42741e:	mov    DWORD PTR [ebp-0x10],ebx
  427421:	mov    DWORD PTR [ebp+0xc],ecx
  427424:	mov    DWORD PTR [ebp+0x10],eax
  427427:	mov    eax,DWORD PTR [ebp+0xc]
  42742a:	xor    eax,esi
  42742c:	mov    DWORD PTR [ebp-0x20],edx
  42742f:	sub    edx,eax
  427431:	sub    edx,edi
  427433:	mov    DWORD PTR [ebp+0x8],edx
  427436:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  42743d:	jmp    0x42753f
  427442:	mov    eax,DWORD PTR [ebp+0xc]
  427445:	mov    ecx,DWORD PTR [ebp+0xc]
  427448:	xor    eax,esi
  42744a:	xor    ecx,esi
  42744c:	lea    ecx,[eax+ecx*1+0x64e5e6]
  427453:	mov    eax,DWORD PTR [ebp+0x8]
  427456:	xor    edx,edx
  427458:	div    ecx
  42745a:	mov    eax,DWORD PTR [ebp+0x10]
  42745d:	mov    ecx,DWORD PTR [ebp+0xc]
  427460:	xor    eax,esi
  427462:	xor    ecx,esi
  427464:	sub    eax,ecx
  427466:	cmp    edx,eax
  427468:	jne    0x4274fe
  42746e:	mov    eax,DWORD PTR [ebp+0x8]
  427471:	mov    ecx,DWORD PTR [ebp-0xc]
  427474:	mov    dl,BYTE PTR [eax+ecx*1]
  427477:	mov    eax,DWORD PTR [ebp-0x10]
  42747a:	mov    ecx,DWORD PTR [ebp-0x8]
  42747d:	xor    eax,esi
  42747f:	xor    ecx,esi
  427481:	add    eax,edi
  427483:	add    ecx,edi
  427485:	cmp    eax,ecx
  427487:	jae    0x4274cf
  427489:	lea    ecx,[eax-0x3272f3]
  42748f:	mov    DWORD PTR [ebp-0x4],ecx
  427492:	mov    ebx,DWORD PTR [ebp-0x4]
  427495:	xor    ebx,esi
  427497:	add    ebx,0x7f55d8e3
  42749d:	lea    ecx,[ebp+eax*4-0x38]
  4274a1:	mov    DWORD PTR [ecx],ebx
  4274a3:	mov    ebx,DWORD PTR [ecx]
  4274a5:	cmp    ebx,0x244ecb9c
  4274ab:	jbe    0x4274b5
  4274ad:	add    DWORD PTR [ecx],0x405fcdd
  4274b3:	jmp    0x4274bb
  4274b5:	add    DWORD PTR [ecx],0xfdaf4323
  4274bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4274be:	xor    ecx,esi
  4274c0:	inc    eax
  4274c1:	inc    DWORD PTR [ebp-0x4]
  4274c4:	add    ecx,edi
  4274c6:	cmp    eax,ecx
  4274c8:	jb     0x427492
  4274ca:	mov    ebx,0xf89c85a1
  4274cf:	cmp    DWORD PTR [ebp-0x14],0x0
  4274d3:	jne    0x4274dd
  4274d5:	xor    dl,0x7d
  4274d8:	add    dl,0x2
  4274db:	jmp    0x4274f3
  4274dd:	mov    eax,DWORD PTR [ebp-0x18]
  4274e0:	xor    al,0xac
  4274e2:	mov    cl,0xd
  4274e4:	sub    cl,al
  4274e6:	add    dl,cl
  4274e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4274eb:	xor    cl,0xac
  4274ee:	sub    cl,0xd
  4274f1:	ror    dl,cl
  4274f3:	xor    eax,eax
  4274f5:	mov    eax,DWORD PTR [ebp+0x8]
  4274f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4274fb:	mov    BYTE PTR [eax+ecx*1],dl
  4274fe:	mov    eax,DWORD PTR [ebp+0x8]
  427501:	mov    ecx,DWORD PTR [ebp-0x10]
  427504:	sub    eax,edi
  427506:	xor    eax,esi
  427508:	cmp    eax,ecx
  42750a:	jne    0x42752d
  42750c:	mov    eax,DWORD PTR [ebp+0x10]
  42750f:	mov    ecx,DWORD PTR [ebp+0xc]
  427512:	xor    eax,esi
  427514:	xor    ecx,esi
  427516:	sub    eax,ecx
  427518:	mov    ecx,DWORD PTR [ebp-0x20]
  42751b:	sub    eax,edi
  42751d:	xor    eax,esi
  42751f:	mov    DWORD PTR [ebp+0x10],eax
  427522:	mov    eax,DWORD PTR [ebp+0xc]
  427525:	xor    eax,esi
  427527:	sub    ecx,eax
  427529:	sub    ecx,edi
  42752b:	jmp    0x42753c
  42752d:	mov    eax,DWORD PTR [ebp+0xc]
  427530:	xor    eax,esi
  427532:	mov    ecx,0xffcd8d0d
  427537:	sub    ecx,eax
  427539:	add    ecx,DWORD PTR [ebp+0x8]
  42753c:	mov    DWORD PTR [ebp+0x8],ecx
  42753f:	mov    eax,DWORD PTR [ebp+0x10]
  427542:	cmp    eax,ebx
  427544:	jne    0x427442
  42754a:	mov    eax,DWORD PTR [ebp-0x24]
  42754d:	jmp    0x427552
  42754f:	mov    eax,DWORD PTR [ebp-0x4]
  427552:	xor    eax,esi
  427554:	add    eax,edi
  427556:	pop    edi
  427557:	pop    esi
  427558:	pop    ebx
  427559:	leave  
  42755a:	ret    0xc
  42755d:	push   ebp
  42755e:	mov    ebp,esp
  427560:	sub    esp,0x420
  427566:	mov    DWORD PTR [ebp-0x14],0xf89c85a1
  42756d:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427574:	mov    DWORD PTR [ebp-0x18],0xf89c86a1
  42757b:	push   ebx
  42757c:	mov    DWORD PTR [ebp-0x1c],0xf89c85a0
  427583:	mov    eax,DWORD PTR [ebp-0x14]
  427586:	push   esi
  427587:	mov    esi,0x75108ac
  42758c:	push   edi
  42758d:	xor    eax,esi
  42758f:	mov    edi,0x3272f3
  427594:	add    eax,edi
  427596:	mov    DWORD PTR [ebp-0x8],eax
  427599:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  4275a0:	mov    DWORD PTR [ebp-0x4],0xead71881
  4275a7:	mov    DWORD PTR [ebp-0x10],0x8
  4275ae:	mov    ecx,ecx
  4275b0:	mov    eax,DWORD PTR [ebp-0xc]
  4275b3:	mov    ecx,DWORD PTR [ebp-0x14]
  4275b6:	xor    eax,esi
  4275b8:	xor    ecx,esi
  4275ba:	add    eax,edi
  4275bc:	add    ecx,edi
  4275be:	imul   eax,ecx
  4275c1:	jmp    0x4275f4
  4275c3:	mov    eax,DWORD PTR [ebp-0x4]
  4275c6:	sub    eax,edi
  4275c8:	xor    eax,esi
  4275ca:	mov    DWORD PTR [ebp-0x8],eax
  4275cd:	lea    ebx,[ebp-0x8]
  4275d0:	call   0x427315
  4275d5:	mov    DWORD PTR [ebp-0x8],eax
  4275d8:	mov    eax,DWORD PTR [ebp-0x8]
  4275db:	mov    ecx,DWORD PTR [ebp-0x4]
  4275de:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4275e5:	mov    eax,DWORD PTR [ebp-0xc]
  4275e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4275eb:	xor    eax,esi
  4275ed:	lea    eax,[eax+ecx*1+0x3272f3]
  4275f4:	mov    DWORD PTR [ebp-0x4],eax
  4275f7:	mov    eax,DWORD PTR [ebp-0x18]
  4275fa:	mov    ecx,DWORD PTR [ebp-0xc]
  4275fd:	xor    ecx,esi
  4275ff:	xor    eax,esi
  427601:	sub    eax,ecx
  427603:	mov    ecx,DWORD PTR [ebp-0x4]
  427606:	cmp    ecx,eax
  427608:	jbe    0x4275c3
  42760a:	mov    eax,DWORD PTR [ebp-0x1c]
  42760d:	xor    eax,esi
  42760f:	add    eax,edi
  427611:	mov    DWORD PTR [ebp-0x8],eax
  427614:	mov    DWORD PTR [ebp-0x18],0xf89c86a0
  42761b:	mov    ebx,ebx
  42761d:	jmp    0x427680
  42761f:	mov    ecx,DWORD PTR [ebp-0x20]
  427622:	mov    eax,DWORD PTR [ebp-0x8]
  427625:	xor    ecx,esi
  427627:	add    ecx,edi
  427629:	shr    eax,cl
  42762b:	mov    DWORD PTR [ebp-0x4],eax
  42762e:	mov    eax,DWORD PTR [ebp+0x8]
  427631:	mov    cl,BYTE PTR [eax]
  427633:	mov    BYTE PTR [ebp+0xb],cl
  427636:	mov    cl,BYTE PTR [ebp+0xb]
  427639:	mov    edx,DWORD PTR [ebp-0x8]
  42763c:	movzx  ecx,cl
  42763f:	xor    ecx,edx
  427641:	mov    DWORD PTR [ebp+0x8],ecx
  427644:	mov    ecx,DWORD PTR [ebp-0x18]
  427647:	mov    edx,DWORD PTR [ebp+0x8]
  42764a:	xor    ecx,esi
  42764c:	add    ecx,edi
  42764e:	and    ecx,edx
  427650:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427657:	mov    edx,DWORD PTR [ebp-0x4]
  42765a:	xor    ecx,edx
  42765c:	mov    DWORD PTR [ebp-0x8],ecx
  42765f:	mov    ecx,DWORD PTR [ebp-0xc]
  427662:	xor    ecx,esi
  427664:	lea    eax,[eax+ecx*1+0x3272f3]
  42766b:	mov    DWORD PTR [ebp+0x8],eax
  42766e:	mov    eax,DWORD PTR [ebp-0xc]
  427671:	xor    eax,esi
  427673:	mov    ecx,0xffcd8d0d
  427678:	sub    ecx,eax
  42767a:	add    ecx,DWORD PTR [ebp-0x10]
  42767d:	mov    DWORD PTR [ebp-0x10],ecx
  427680:	mov    eax,DWORD PTR [ebp-0x14]
  427683:	mov    ecx,DWORD PTR [ebp-0x10]
  427686:	xor    eax,esi
  427688:	add    eax,edi
  42768a:	cmp    ecx,eax
  42768c:	jne    0x42761f
  42768e:	mov    eax,DWORD PTR [ebp-0x1c]
  427691:	mov    ecx,DWORD PTR [ebp-0x8]
  427694:	xor    eax,esi
  427696:	add    eax,edi
  427698:	pop    edi
  427699:	pop    esi
  42769a:	xor    eax,ecx
  42769c:	pop    ebx
  42769d:	leave  
  42769e:	ret    0x4
  4276a1:	push   ebp
  4276a2:	mov    ebp,esp
  4276a4:	mov    eax,DWORD PTR [ebp+0x1c]
  4276a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4276aa:	mov    edx,DWORD PTR [ebp+0x10]
  4276ad:	mov    eax,DWORD PTR [eax+0x190]
  4276b3:	mov    eax,DWORD PTR [eax]
  4276b5:	sub    esp,0x64
  4276b8:	push   ebx
  4276b9:	push   esi
  4276ba:	push   edi
  4276bb:	mov    edi,0x75108ac
  4276c0:	xor    ecx,edi
  4276c2:	mov    ebx,0x3272f3
  4276c7:	add    ecx,ebx
  4276c9:	cmp    ecx,edx
  4276cb:	jne    0x4276dc
  4276cd:	or     DWORD PTR ds:0x3750c3f,0x4263eb28
  4276d7:	jmp    0x427bd8
  4276dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4276df:	mov    esi,DWORD PTR [ebp+0x14]
  4276e2:	mov    edx,DWORD PTR [esi]
  4276e4:	xor    ecx,edi
  4276e6:	add    ecx,ebx
  4276e8:	cmp    edx,ecx
  4276ea:	je     0x427b93
  4276f0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4276f3:	mov    DWORD PTR [ebp-0x1c],eax
  4276f6:	mov    DWORD PTR [ebp+0x1c],ecx
  4276f9:	mov    ecx,DWORD PTR [ebp+0x18]
  4276fc:	mov    eax,DWORD PTR [esi]
  4276fe:	mov    DWORD PTR [ebp-0x20],eax
  427701:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  427708:	mov    edx,0xf89c85a2
  42770d:	mov    DWORD PTR [ebp-0x8],edx
  427710:	mov    eax,DWORD PTR [ebp+0x1c]
  427713:	mov    DWORD PTR [ebp+0x1c],eax
  427716:	mov    eax,DWORD PTR [ebp+0x1c]
  427719:	mov    eax,DWORD PTR [eax+0x190]
  42771f:	mov    eax,DWORD PTR [eax]
  427721:	mov    DWORD PTR [ebp-0x24],ecx
  427724:	mov    ecx,DWORD PTR [ebp+0x1c]
  427727:	mov    ecx,DWORD PTR [ecx+0x190]
  42772d:	mov    ecx,DWORD PTR [ecx]
  42772f:	add    ecx,DWORD PTR [eax+0x3c]
  427732:	mov    DWORD PTR [ebp+0x10],ecx
  427735:	mov    eax,DWORD PTR [ebp+0x8]
  427738:	xor    eax,edi
  42773a:	add    eax,ebx
  42773c:	mov    DWORD PTR [ebp-0x4],eax
  42773f:	mov    eax,DWORD PTR [ebp+0x8]
  427742:	xor    eax,edi
  427744:	add    eax,ebx
  427746:	mov    DWORD PTR [ebp+0x18],eax
  427749:	mov    eax,DWORD PTR [ebp+0x10]
  42774c:	mov    eax,DWORD PTR [eax+0x50]
  42774f:	sub    eax,0xc
  427752:	mov    DWORD PTR [ebp-0x28],eax
  427755:	mov    eax,DWORD PTR [ebp+0x10]
  427758:	mov    eax,DWORD PTR [eax+0x38]
  42775b:	mov    ecx,DWORD PTR [ebp+0x10]
  42775e:	dec    eax
  42775f:	test   DWORD PTR [ecx+0x54],eax
  427762:	mov    eax,DWORD PTR [ebp+0x10]
  427765:	je     0x42777f
  427767:	mov    eax,DWORD PTR [eax+0x38]
  42776a:	mov    ecx,DWORD PTR [ebp+0x10]
  42776d:	mov    ecx,DWORD PTR [ecx+0x54]
  427770:	dec    eax
  427771:	not    eax
  427773:	and    ecx,eax
  427775:	mov    eax,DWORD PTR [ebp+0x10]
  427778:	mov    eax,DWORD PTR [eax+0x38]
  42777b:	add    eax,ecx
  42777d:	jmp    0x427782
  42777f:	mov    eax,DWORD PTR [eax+0x54]
  427782:	mov    DWORD PTR [ebp+0x1c],eax
  427785:	mov    eax,DWORD PTR [ebp+0x8]
  427788:	xor    eax,edi
  42778a:	add    eax,ebx
  42778c:	mov    DWORD PTR [ebp+0x18],eax
  42778f:	mov    eax,DWORD PTR [ebp+0x8]
  427792:	xor    eax,edi
  427794:	add    eax,ebx
  427796:	mov    DWORD PTR [ebp+0x18],eax
  427799:	mov    eax,DWORD PTR [ebp+0x8]
  42779c:	mov    ecx,DWORD PTR [ebp-0x24]
  42779f:	xor    eax,edi
  4277a1:	add    eax,ebx
  4277a3:	mov    DWORD PTR [ecx],eax
  4277a5:	mov    DWORD PTR [ebp+0x18],edx
  4277a8:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  4277af:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  4277b6:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  4277bd:	mov    eax,DWORD PTR [ebp-0x8]
  4277c0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4277c3:	xor    eax,edi
  4277c5:	add    eax,ebx
  4277c7:	imul   eax,ecx
  4277ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4277cd:	mov    edx,DWORD PTR [ebp-0x28]
  4277d0:	xor    ecx,edi
  4277d2:	lea    ecx,[ecx+edx*1+0x3272f3]
  4277d9:	cmp    eax,ecx
  4277db:	jae    0x427b8c
  4277e1:	mov    eax,DWORD PTR [ebp+0x8]
  4277e4:	xor    eax,edi
  4277e6:	add    eax,ebx
  4277e8:	mov    DWORD PTR [ebp+0x18],eax
  4277eb:	mov    eax,DWORD PTR [ebp+0x1c]
  4277ee:	add    eax,DWORD PTR [ebp-0x1c]
  4277f1:	mov    DWORD PTR [ebp-0x4],eax
  4277f4:	push   DWORD PTR [ebp-0x4]
  4277f7:	mov    esi,DWORD PTR [ebp-0x1c]
  4277fa:	mov    ecx,DWORD PTR [ebp+0x10]
  4277fd:	call   0x42694d
  427802:	mov    DWORD PTR [ebp+0xc],eax
  427805:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  42780c:	mov    eax,DWORD PTR [ebp-0x18]
  42780f:	xor    eax,edi
  427811:	lea    ecx,[ebp-0x40]
  427814:	add    eax,ebx
  427816:	push   ecx
  427817:	call   0x426ee1
  42781c:	mov    eax,DWORD PTR [ebp+0xc]
  42781f:	test   eax,eax
  427821:	je     0x427871
  427823:	mov    eax,DWORD PTR [ebp-0x18]
  427826:	xor    eax,edi
  427828:	add    eax,ebx
  42782a:	push   eax
  42782b:	push   DWORD PTR [ebp+0xc]
  42782e:	lea    eax,[ebp-0x40]
  427831:	push   eax
  427832:	call   0x426dd7
  427837:	mov    eax,DWORD PTR [ebp-0x4]
  42783a:	mov    DWORD PTR [ebp-0x18],eax
  42783d:	mov    eax,DWORD PTR [ebp-0x18]
  427840:	mov    ecx,DWORD PTR [ebp-0x1c]
  427843:	sub    eax,ecx
  427845:	mov    DWORD PTR [ebp-0x18],eax
  427848:	mov    eax,DWORD PTR [ebp+0xc]
  42784b:	mov    ecx,DWORD PTR [ebp+0xc]
  42784e:	mov    eax,DWORD PTR [eax+0x10]
  427851:	add    eax,DWORD PTR [ecx+0xc]
  427854:	mov    ecx,DWORD PTR [ebp-0x18]
  427857:	cmp    ecx,eax
  427859:	jb     0x427871
  42785b:	mov    eax,DWORD PTR [ebp+0xc]
  42785e:	mov    eax,DWORD PTR [eax+0xc]
  427861:	mov    ecx,DWORD PTR [ebp+0xc]
  427864:	add    eax,DWORD PTR [ecx+0x8]
  427867:	mov    ecx,DWORD PTR [ebp-0x18]
  42786a:	sub    eax,ecx
  42786c:	jmp    0x427b5f
  427871:	push   0xc
  427873:	push   DWORD PTR [ebp-0x4]
  427876:	lea    eax,[ebp-0x4c]
  427879:	push   eax
  42787a:	call   0x426dd7
  42787f:	mov    eax,0xf89c85a1
  427884:	mov    DWORD PTR [ebp-0x2c],eax
  427887:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  42788e:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  427895:	mov    DWORD PTR [ebp-0x38],0xf89c85bc
  42789c:	lea    ecx,[ebp-0x2c]
  42789f:	mov    DWORD PTR [ebp-0xc],ecx
  4278a2:	lea    ecx,[ebp-0x30]
  4278a5:	mov    DWORD PTR [ebp-0x10],ecx
  4278a8:	lea    ecx,[ebp-0x34]
  4278ab:	mov    DWORD PTR [ebp+0xc],ecx
  4278ae:	lea    ecx,[ebp-0x38]
  4278b1:	mov    DWORD PTR [ebp-0x14],ecx
  4278b4:	mov    ecx,DWORD PTR [ebp+0x8]
  4278b7:	xor    ecx,edi
  4278b9:	add    ecx,ebx
  4278bb:	mov    DWORD PTR [ebp-0x18],ecx
  4278be:	jmp    0x427aba
  4278c3:	cmp    eax,0xf89c85a3
  4278c8:	je     0x427acc
  4278ce:	mov    ecx,DWORD PTR [ebp-0x8]
  4278d1:	xor    ecx,edi
  4278d3:	mov    esi,eax
  4278d5:	add    ecx,ebx
  4278d7:	mov    DWORD PTR [ebp+0x18],ecx
  4278da:	mov    eax,DWORD PTR [ebp-0x18]
  4278dd:	xor    esi,edi
  4278df:	lea    eax,[eax+esi*1+0x3272f3]
  4278e6:	mov    DWORD PTR [ebp-0x18],eax
  4278e9:	mov    eax,DWORD PTR [ebp-0x8]
  4278ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4278ef:	xor    eax,edi
  4278f1:	add    eax,ebx
  4278f3:	cmp    ecx,eax
  4278f5:	jne    0x42790a
  4278f7:	mov    eax,DWORD PTR [ebp+0x8]
  4278fa:	xor    eax,edi
  4278fc:	add    eax,ebx
  4278fe:	push   eax
  4278ff:	push   0xc
  427901:	lea    eax,[ebp-0x4c]
  427904:	push   eax
  427905:	call   0x4273bd
  42790a:	mov    eax,DWORD PTR [ebp-0xc]
  42790d:	mov    eax,DWORD PTR [eax]
  42790f:	xor    eax,edi
  427911:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427918:	mov    ecx,DWORD PTR [ebp+0x8]
  42791b:	xor    ecx,edi
  42791d:	movzx  eax,al
  427920:	add    ecx,ebx
  427922:	cmp    eax,ecx
  427924:	je     0x427aa2
  42792a:	mov    eax,DWORD PTR [ebp-0x10]
  42792d:	mov    eax,DWORD PTR [eax]
  42792f:	xor    eax,edi
  427931:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427938:	mov    ecx,DWORD PTR [ebp+0x8]
  42793b:	xor    ecx,edi
  42793d:	movzx  eax,al
  427940:	add    ecx,ebx
  427942:	cmp    eax,ecx
  427944:	je     0x427aa2
  42794a:	mov    eax,DWORD PTR [ebp+0xc]
  42794d:	mov    eax,DWORD PTR [eax]
  42794f:	xor    eax,edi
  427951:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427958:	mov    ecx,DWORD PTR [ebp+0x8]
  42795b:	xor    ecx,edi
  42795d:	movzx  eax,al
  427960:	add    ecx,ebx
  427962:	cmp    eax,ecx
  427964:	je     0x427aa2
  42796a:	mov    eax,DWORD PTR [ebp-0x14]
  42796d:	mov    eax,DWORD PTR [eax]
  42796f:	xor    eax,edi
  427971:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427978:	mov    ecx,DWORD PTR [ebp+0x8]
  42797b:	xor    ecx,edi
  42797d:	movzx  eax,al
  427980:	add    ecx,ebx
  427982:	cmp    eax,ecx
  427984:	je     0x427aa2
  42798a:	mov    eax,DWORD PTR [ebp-0x10]
  42798d:	mov    eax,DWORD PTR [eax]
  42798f:	xor    eax,edi
  427991:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427998:	mov    ecx,DWORD PTR [ebp-0xc]
  42799b:	mov    ecx,DWORD PTR [ecx]
  42799d:	xor    ecx,edi
  42799f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279a6:	xor    al,cl
  4279a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4279ab:	mov    ecx,DWORD PTR [ecx]
  4279ad:	xor    ecx,edi
  4279af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279b6:	or     al,cl
  4279b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4279bb:	mov    ecx,DWORD PTR [ecx]
  4279bd:	xor    ecx,edi
  4279bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  4279c6:	cmp    cl,al
  4279c8:	jne    0x427aa2
  4279ce:	mov    eax,DWORD PTR [ebp+0xc]
  4279d1:	mov    eax,DWORD PTR [eax]
  4279d3:	xor    eax,edi
  4279d5:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  4279dc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279df:	mov    ecx,DWORD PTR [ecx]
  4279e1:	xor    ecx,edi
  4279e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279ea:	xor    al,cl
  4279ec:	mov    ecx,DWORD PTR [ebp-0x14]
  4279ef:	mov    ecx,DWORD PTR [ecx]
  4279f1:	xor    ecx,edi
  4279f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279fa:	or     al,cl
  4279fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279ff:	mov    ecx,DWORD PTR [ecx]
  427a01:	xor    ecx,edi
  427a03:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a0a:	cmp    cl,al
  427a0c:	jne    0x427aa2
  427a12:	mov    eax,DWORD PTR [ebp-0x14]
  427a15:	mov    eax,DWORD PTR [eax]
  427a17:	xor    eax,edi
  427a19:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a20:	mov    ecx,DWORD PTR [ebp+0xc]
  427a23:	mov    ecx,DWORD PTR [ecx]
  427a25:	xor    ecx,edi
  427a27:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a2e:	xor    al,cl
  427a30:	mov    ecx,DWORD PTR [ebp-0xc]
  427a33:	mov    ecx,DWORD PTR [ecx]
  427a35:	xor    ecx,edi
  427a37:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a3e:	or     al,cl
  427a40:	mov    ecx,DWORD PTR [ebp+0xc]
  427a43:	mov    ecx,DWORD PTR [ecx]
  427a45:	xor    ecx,edi
  427a47:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a4e:	cmp    cl,al
  427a50:	jne    0x427aa2
  427a52:	mov    eax,DWORD PTR [ebp-0x14]
  427a55:	mov    eax,DWORD PTR [eax]
  427a57:	xor    eax,edi
  427a59:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a60:	mov    ecx,DWORD PTR [ebp-0xc]
  427a63:	mov    ecx,DWORD PTR [ecx]
  427a65:	xor    ecx,edi
  427a67:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a6e:	xor    al,cl
  427a70:	mov    ecx,DWORD PTR [ebp-0x10]
  427a73:	mov    ecx,DWORD PTR [ecx]
  427a75:	xor    ecx,edi
  427a77:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a7e:	or     al,cl
  427a80:	mov    ecx,DWORD PTR [ebp-0x14]
  427a83:	mov    ecx,DWORD PTR [ecx]
  427a85:	xor    ecx,edi
  427a87:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a8e:	cmp    cl,al
  427a90:	jne    0x427aa2
  427a92:	lea    eax,[ebp-0x4c]
  427a95:	push   eax
  427a96:	call   0x42755d
  427a9b:	mov    ecx,DWORD PTR [ebp-0x44]
  427a9e:	cmp    eax,ecx
  427aa0:	je     0x427aac
  427aa2:	mov    eax,DWORD PTR [ebp+0x8]
  427aa5:	xor    eax,edi
  427aa7:	add    eax,ebx
  427aa9:	mov    DWORD PTR [ebp+0x18],eax
  427aac:	mov    eax,DWORD PTR [ebp-0x8]
  427aaf:	xor    eax,edi
  427ab1:	lea    eax,[eax+esi*1+0x3272f3]
  427ab8:	xor    eax,edi
  427aba:	mov    ecx,DWORD PTR [ebp+0x8]
  427abd:	mov    edx,DWORD PTR [ebp+0x18]
  427ac0:	xor    ecx,edi
  427ac2:	add    ecx,ebx
  427ac4:	cmp    edx,ecx
  427ac6:	je     0x4278c3
  427acc:	mov    eax,DWORD PTR [ebp+0x8]
  427acf:	mov    ecx,DWORD PTR [ebp+0x18]
  427ad2:	xor    eax,edi
  427ad4:	add    eax,ebx
  427ad6:	cmp    ecx,eax
  427ad8:	jne    0x427aeb
  427ada:	mov    eax,DWORD PTR [ebp-0x8]
  427add:	mov    ecx,DWORD PTR [ebp+0x1c]
  427ae0:	xor    eax,edi
  427ae2:	lea    eax,[eax+ecx*1+0x3272f3]
  427ae9:	jmp    0x427b62
  427aeb:	push   0x18
  427aed:	push   DWORD PTR [ebp-0x4]
  427af0:	lea    eax,[ebp-0x64]
  427af3:	push   eax
  427af4:	call   0x426dd7
  427af9:	mov    eax,DWORD PTR [ebp+0x8]
  427afc:	mov    ecx,DWORD PTR [ebp-0x18]
  427aff:	xor    eax,edi
  427b01:	add    eax,ebx
  427b03:	cmp    eax,ecx
  427b05:	je     0x427b1a
  427b07:	mov    eax,DWORD PTR [ebp+0x8]
  427b0a:	xor    eax,edi
  427b0c:	add    eax,ebx
  427b0e:	push   eax
  427b0f:	push   0x18
  427b11:	lea    eax,[ebp-0x64]
  427b14:	push   eax
  427b15:	call   0x4273bd
  427b1a:	mov    eax,DWORD PTR [ebp-0x4]
  427b1d:	add    eax,0x18
  427b20:	mov    DWORD PTR [ebp+0x18],eax
  427b23:	push   DWORD PTR [ebp-0x50]
  427b26:	push   DWORD PTR [ebp+0x18]
  427b29:	mov    eax,DWORD PTR [ebp-0x54]
  427b2c:	add    eax,DWORD PTR [ebp-0x20]
  427b2f:	push   eax
  427b30:	call   0x426dd7
  427b35:	mov    eax,DWORD PTR [ebp+0x8]
  427b38:	mov    ecx,DWORD PTR [ebp-0x18]
  427b3b:	xor    eax,edi
  427b3d:	add    eax,ebx
  427b3f:	cmp    eax,ecx
  427b41:	je     0x427b54
  427b43:	push   0x0
  427b45:	push   DWORD PTR [ebp-0x50]
  427b48:	mov    eax,DWORD PTR [ebp-0x54]
  427b4b:	add    eax,DWORD PTR [ebp-0x20]
  427b4e:	push   eax
  427b4f:	call   0x4273bd
  427b54:	mov    eax,DWORD PTR [ebp-0x24]
  427b57:	mov    ecx,DWORD PTR [ebp-0x50]
  427b5a:	add    DWORD PTR [eax],ecx
  427b5c:	mov    eax,DWORD PTR [ebp-0x50]
  427b5f:	add    eax,DWORD PTR [ebp+0x1c]
  427b62:	mov    DWORD PTR [ebp+0x1c],eax
  427b65:	mov    eax,DWORD PTR [ebp-0x8]
  427b68:	mov    ecx,DWORD PTR [ebp+0x1c]
  427b6b:	xor    eax,edi
  427b6d:	add    eax,ebx
  427b6f:	imul   eax,ecx
  427b72:	mov    ecx,DWORD PTR [ebp+0x8]
  427b75:	mov    edx,DWORD PTR [ebp-0x28]
  427b78:	xor    ecx,edi
  427b7a:	lea    ecx,[ecx+edx*1+0x3272f3]
  427b81:	cmp    eax,ecx
  427b83:	jb     0x4277e1
  427b89:	mov    esi,DWORD PTR [ebp+0x14]
  427b8c:	mov    eax,DWORD PTR [ebp-0x20]
  427b8f:	mov    DWORD PTR [esi],eax
  427b91:	jmp    0x427bd8
  427b93:	mov    ecx,DWORD PTR [ebp+0x8]
  427b96:	mov    edx,DWORD PTR [ebp+0xc]
  427b99:	xor    ecx,edi
  427b9b:	xor    edx,edi
  427b9d:	add    ecx,ebx
  427b9f:	add    edx,ebx
  427ba1:	cmp    ecx,edx
  427ba3:	jne    0x427bb7
  427ba5:	mov    eax,ds:0x7f642dd8
  427baa:	imul   eax,eax,0x9f15fccf
  427bb0:	mov    ds:0x7f642dd8,eax
  427bb5:	jmp    0x427bd8
  427bb7:	mov    ecx,DWORD PTR [ebp+0x8]
  427bba:	xor    ecx,edi
  427bbc:	add    ecx,ebx
  427bbe:	cmp    eax,ecx
  427bc0:	je     0x427bce
  427bc2:	sub    DWORD PTR ds:0xf861e38,0x709beac8
  427bcc:	jmp    0x427bd8
  427bce:	and    DWORD PTR ds:0x3343fad8,0x5265ec3f
  427bd8:	pop    edi
  427bd9:	pop    esi
  427bda:	pop    ebx
  427bdb:	leave  
  427bdc:	ret    0x18
  427bdf:	push   ebp
  427be0:	mov    ebp,esp
  427be2:	and    esp,0xfffffff8
  427be5:	mov    eax,DWORD PTR [ebp+0x20]
  427be8:	sub    esp,0x14
  427beb:	push   ebx
  427bec:	mov    ebx,DWORD PTR [ebp+0x14]
  427bef:	push   esi
  427bf0:	push   edi
  427bf1:	cmp    eax,0xf89c85a1
  427bf6:	jne    0x427c02
  427bf8:	push   0xf89c85a2
  427bfd:	jmp    0x427d34
  427c02:	mov    eax,DWORD PTR [ebp+0x20]
  427c05:	cmp    eax,0xf89c85a2
  427c0a:	jne    0x427c16
  427c0c:	push   0xf89c85a3
  427c11:	jmp    0x427d34
  427c16:	mov    eax,DWORD PTR [ebp+0x20]
  427c19:	cmp    eax,0xf89c85a3
  427c1e:	jne    0x427c2a
  427c20:	push   0xf89c85bc
  427c25:	jmp    0x427d34
  427c2a:	mov    eax,DWORD PTR [ebp+0x20]
  427c2d:	cmp    eax,0xf89c85bc
  427c32:	jne    0x427c3e
  427c34:	push   0xf89c85bd
  427c39:	jmp    0x427d34
  427c3e:	mov    ecx,DWORD PTR [ebp+0x20]
  427c41:	mov    eax,0xf89c85b8
  427c46:	cmp    ecx,eax
  427c48:	jne    0x427d04
  427c4e:	mov    eax,DWORD PTR [ebp+0x10]
  427c51:	mov    DWORD PTR [esp+0xc],eax
  427c55:	mov    eax,DWORD PTR [ebp+0x18]
  427c58:	mov    DWORD PTR [esp+0x14],eax
  427c5c:	mov    eax,DWORD PTR [ebp+0xc]
  427c5f:	mov    DWORD PTR [esp+0x18],eax
  427c63:	mov    eax,DWORD PTR [ebp+0x8]
  427c66:	mov    DWORD PTR [esp+0x10],eax
  427c6a:	mov    eax,DWORD PTR [esp+0x10]
  427c6e:	mov    ecx,DWORD PTR [esp+0x14]
  427c72:	mov    edi,0x75108ac
  427c77:	xor    eax,edi
  427c79:	mov    esi,0x3272f3
  427c7e:	add    eax,esi
  427c80:	mov    DWORD PTR [ecx],eax
  427c82:	mov    eax,DWORD PTR [esp+0xc]
  427c86:	mov    eax,DWORD PTR [eax+0x194]
  427c8c:	mov    ecx,DWORD PTR [eax]
  427c8e:	mov    eax,DWORD PTR [esp+0xc]
  427c92:	mov    eax,DWORD PTR [eax+0x194]
  427c98:	mov    eax,DWORD PTR [eax]
  427c9a:	add    eax,DWORD PTR [ecx+0x3c]
  427c9d:	mov    ecx,DWORD PTR [esp+0xc]
  427ca1:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427ca7:	mov    ecx,DWORD PTR [ecx+0x14]
  427caa:	push   0x4
  427cac:	push   0x3000
  427cb1:	push   DWORD PTR [eax+0x50]
  427cb4:	push   0x0
  427cb6:	call   ecx
  427cb8:	mov    DWORD PTR [ebx],eax
  427cba:	mov    eax,DWORD PTR [esp+0x10]
  427cbe:	push   DWORD PTR [esp+0xc]
  427cc2:	xor    eax,edi
  427cc4:	add    eax,esi
  427cc6:	mov    DWORD PTR [esp+0x20],eax
  427cca:	lea    eax,[esp+0x20]
  427cce:	push   eax
  427ccf:	push   ebx
  427cd0:	push   DWORD PTR [esp+0x20]
  427cd4:	push   DWORD PTR [esp+0x28]
  427cd8:	push   DWORD PTR [esp+0x24]
  427cdc:	call   0x4276a1
  427ce1:	mov    eax,DWORD PTR [esp+0x10]
  427ce5:	mov    ecx,DWORD PTR [ebx]
  427ce7:	xor    eax,edi
  427ce9:	add    eax,esi
  427ceb:	cmp    ecx,eax
  427ced:	je     0x427d4b
  427cef:	mov    eax,DWORD PTR [esp+0x18]
  427cf3:	mov    ecx,DWORD PTR [esp+0x14]
  427cf7:	xor    eax,edi
  427cf9:	add    eax,esi
  427cfb:	imul   eax,DWORD PTR [esp+0x1c]
  427d00:	mov    DWORD PTR [ecx],eax
  427d02:	jmp    0x427d4b
  427d04:	mov    ecx,DWORD PTR [ebp+0x20]
  427d07:	cmp    ecx,0xf89c85bd
  427d0d:	jne    0x427d16
  427d0f:	push   0xf89c85be
  427d14:	jmp    0x427d34
  427d16:	mov    ecx,DWORD PTR [ebp+0x20]
  427d19:	cmp    ecx,0xf89c85be
  427d1f:	jne    0x427d28
  427d21:	push   0xf89c85bf
  427d26:	jmp    0x427d34
  427d28:	mov    ecx,DWORD PTR [ebp+0x20]
  427d2b:	cmp    ecx,0xf89c85bf
  427d31:	jne    0x427d4b
  427d33:	push   eax
  427d34:	push   DWORD PTR [ebp+0x1c]
  427d37:	push   DWORD PTR [ebp+0x18]
  427d3a:	push   ebx
  427d3b:	push   DWORD PTR [ebp+0x10]
  427d3e:	push   DWORD PTR [ebp+0xc]
  427d41:	push   DWORD PTR [ebp+0x8]
  427d44:	call   0x427bdf
  427d49:	mov    DWORD PTR [ebx],eax
  427d4b:	mov    eax,DWORD PTR [ebx]
  427d4d:	pop    edi
  427d4e:	pop    esi
  427d4f:	pop    ebx
  427d50:	mov    esp,ebp
  427d52:	pop    ebp
  427d53:	ret    0x1c
  427d56:	push   ebp
  427d57:	mov    ebp,esp
  427d59:	sub    esp,0xc
  427d5c:	mov    eax,0xf89c85a1
  427d61:	mov    DWORD PTR [ebp-0x8],eax
  427d64:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427d6b:	mov    ecx,DWORD PTR [ebp-0x8]
  427d6e:	xor    ecx,0x75108ac
  427d74:	add    ecx,0x3272f3
  427d7a:	mov    DWORD PTR [ebp-0x4],ecx
  427d7d:	mov    ecx,DWORD PTR [ebp+0xc]
  427d80:	push   eax
  427d81:	mov    DWORD PTR [ebp+0xc],ecx
  427d84:	push   DWORD PTR [ebp+0xc]
  427d87:	lea    eax,[ebp-0x4]
  427d8a:	push   DWORD PTR [ebp+0x8]
  427d8d:	push   eax
  427d8e:	push   DWORD PTR [ebp+0xc]
  427d91:	push   DWORD PTR [ebp-0xc]
  427d94:	push   DWORD PTR [ebp-0x8]
  427d97:	call   0x427bdf
  427d9c:	mov    DWORD PTR [ebp-0x4],eax
  427d9f:	mov    eax,DWORD PTR [ebp-0x4]
  427da2:	leave  
  427da3:	ret    0x8
