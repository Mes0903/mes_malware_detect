
d1427d81c053ca5308cd09f5ad36ba2c2eb84d509418a22ed860b7ab58a5a161.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,ds:0x42920b
  40100e:	mov    eax,DWORD PTR [eax]
  401010:	and    DWORD PTR ds:0x429157,eax
  401016:	mov    eax,DWORD PTR [ebp+0x8]
  401019:	and    DWORD PTR ds:0x4291e7,0x0
  401023:	mov    ecx,DWORD PTR ds:0x4291e7
  401029:	inc    ecx
  40102a:	mov    DWORD PTR ds:0x4291e7,ecx
  401030:	cmp    DWORD PTR ds:0x4291e7,0xe
  401037:	jle    0x401072
  40103d:	jmp    0x40104b
  401042:	push   DWORD PTR [ebp-0x20]
  401045:	call   DWORD PTR ds:0x42a553
  40104b:	cmp    DWORD PTR ds:0x4291e7,0xd
  401052:	jne    0x401065
  401058:	mov    ecx,DWORD PTR ds:0x4291e7
  40105e:	inc    ecx
  40105f:	mov    DWORD PTR ds:0x4291e7,ecx
  401065:	cmp    DWORD PTR ds:0x4291e7,0x1c
  40106c:	jb     0x401023
  401072:	push   ebx
  401073:	sub    DWORD PTR ds:0x429157,0x3bd6
  40107d:	push   esi
  40107e:	mov    esi,DWORD PTR ds:0x429847
  401084:	mov    ecx,DWORD PTR ds:0x429e73
  40108a:	sub    ecx,esi
  40108c:	add    esi,DWORD PTR [esi+ecx*1]
  40108f:	push   edi
  401090:	mov    esi,0x75108ac
  401095:	xor    DWORD PTR ds:0x4291af,ebx
  40109b:	xor    eax,esi
  40109d:	mov    edi,0x3272f3
  4010a2:	sbb    DWORD PTR ds:0x4291f3,0x4c4b
  4010ac:	add    eax,edi
  4010ae:	and    DWORD PTR ds:0x429163,0x59cd
  4010b8:	mov    DWORD PTR [ebp-0x40],eax
  4010bb:	mov    eax,ds:0x42915f
  4010c0:	sbb    eax,DWORD PTR ds:0x42919f
  4010c6:	mov    ds:0x42915f,eax
  4010cb:	mov    eax,ds:0x42818b
  4010d0:	and    DWORD PTR ds:0x42918b,0x0
  4010da:	jmp    0x4010ee
  4010df:	xor    ecx,ecx
  4010e1:	xor    ecx,DWORD PTR ds:0x42918b
  4010e7:	inc    ecx
  4010e8:	mov    DWORD PTR ds:0x42918b,ecx
  4010ee:	cmp    DWORD PTR ds:0x42918b,0x1e
  4010f5:	jae    0x401144
  4010fb:	cmp    DWORD PTR ds:0x42918b,0xe
  401102:	ja     0x401144
  401108:	jmp    0x401123
  40110d:	push   DWORD PTR [ebp-0x24]
  401110:	push   0x428152
  401115:	push   0x4280c4
  40111a:	push   DWORD PTR [ebp-0x20]
  40111d:	call   DWORD PTR ds:0x42a55b
  401123:	cmp    DWORD PTR ds:0x42918b,0xd
  40112a:	jne    0x40113f
  401130:	xor    ecx,ecx
  401132:	or     ecx,DWORD PTR ds:0x42918b
  401138:	inc    ecx
  401139:	mov    DWORD PTR ds:0x42918b,ecx
  40113f:	jmp    0x4010df
  401144:	mov    eax,DWORD PTR [eax]
  401146:	mov    ecx,DWORD PTR ds:0x4291bf
  40114c:	sbb    DWORD PTR ds:0x42914f,ecx
  401152:	mov    DWORD PTR [ebp-0x3c],eax
  401155:	mov    eax,ds:0x429223
  40115a:	mov    ecx,DWORD PTR ds:0x429e83
  401160:	sub    eax,ecx
  401162:	add    eax,DWORD PTR [eax+ecx*1]
  401165:	mov    eax,ds:0x42839b
  40116a:	mov    DWORD PTR ds:0x429167,0x18
  401174:	cmp    DWORD PTR ds:0x429167,0x0
  40117b:	je     0x4011cb
  401181:	cmp    DWORD PTR ds:0x429167,0x3
  401188:	jle    0x4011cb
  40118e:	jmp    0x40119f
  401193:	push   DWORD PTR [ebp-0x24]
  401196:	push   DWORD PTR [ebp-0x14]
  401199:	call   DWORD PTR ds:0x42a55f
  40119f:	cmp    DWORD PTR ds:0x429167,0x4
  4011a6:	jne    0x4011b9
  4011ac:	mov    ecx,DWORD PTR ds:0x429167
  4011b2:	dec    ecx
  4011b3:	mov    DWORD PTR ds:0x429167,ecx
  4011b9:	mov    ecx,DWORD PTR ds:0x429167
  4011bf:	dec    ecx
  4011c0:	mov    DWORD PTR ds:0x429167,ecx
  4011c6:	jmp    0x401174
  4011cb:	mov    eax,DWORD PTR [eax]
  4011cd:	or     DWORD PTR ds:0x4291b7,0x5973
  4011d7:	mov    DWORD PTR [ebp-0x1c],eax
  4011da:	mov    DWORD PTR [ebp-0x34],0xf89c87a1
  4011e1:	sbb    ecx,ecx
  4011e3:	mov    eax,DWORD PTR [ebp-0x34]
  4011e6:	and    DWORD PTR ds:0x4291bf,ecx
  4011ec:	xor    eax,esi
  4011ee:	add    eax,edi
  4011f0:	adc    DWORD PTR ds:0x42919f,0x1e2a
  4011fa:	mov    DWORD PTR [ebp-0x40],eax
  4011fd:	mov    eax,ds:0x42830b
  401202:	mov    DWORD PTR [ebp-0x40],eax
  401205:	mov    eax,ds:0x429e7f
  40120a:	mov    eax,DWORD PTR [eax]
  40120c:	and    DWORD PTR ds:0x4291f7,eax
  401212:	mov    eax,DWORD PTR [ebp-0x3c]
  401215:	adc    DWORD PTR ds:0x42914b,0x2509
  40121f:	mov    DWORD PTR [ebp-0x14],eax
  401222:	and    ecx,ecx
  401224:	mov    eax,DWORD PTR [ebp-0x14]
  401227:	xor    DWORD PTR ds:0x42918f,ecx
  40122d:	push   0x4
  40122f:	neg    ecx
  401231:	pop    ecx
  401232:	sub    ecx,eax
  401234:	and    DWORD PTR ds:0x42916b,0x0
  40123e:	jmp    0x40124e
  401243:	mov    eax,ds:0x42916b
  401248:	inc    eax
  401249:	mov    ds:0x42916b,eax
  40124e:	cmp    DWORD PTR ds:0x42916b,0x1e
  401255:	jae    0x40127d
  40125b:	cmp    DWORD PTR ds:0x42916b,0x27
  401262:	ja     0x40127d
  401268:	jmp    0x401278
  40126d:	push   0x4291bb
  401272:	call   DWORD PTR ds:0x42a563
  401278:	jmp    0x401243
  40127d:	add    ecx,DWORD PTR [ebp-0x1c]
  401280:	and    DWORD PTR ds:0x42915b,0x0
  40128a:	jmp    0x40129d
  40128f:	xor    eax,eax
  401291:	xor    eax,DWORD PTR ds:0x42915b
  401297:	inc    eax
  401298:	mov    ds:0x42915b,eax
  40129d:	cmp    DWORD PTR ds:0x42915b,0x1a
  4012a4:	jae    0x4012ec
  4012aa:	cmp    DWORD PTR ds:0x42915b,0xe
  4012b1:	jle    0x4012ec
  4012b7:	jmp    0x4012cc
  4012bc:	push   0x1df3
  4012c1:	push   0x428062
  4012c6:	call   DWORD PTR ds:0x42a567
  4012cc:	cmp    DWORD PTR ds:0x42915b,0xd
  4012d3:	jne    0x4012e7
  4012d9:	xor    eax,eax
  4012db:	xor    eax,DWORD PTR ds:0x42915b
  4012e1:	inc    eax
  4012e2:	mov    ds:0x42915b,eax
  4012e7:	jmp    0x40128f
  4012ec:	mov    DWORD PTR [ebp-0x2c],0xf89c85e1
  4012f3:	mov    DWORD PTR ds:0x4291d7,0x3a8d
  4012fd:	mov    DWORD PTR [ebp-0x18],ecx
  401300:	and    DWORD PTR ds:0x42916f,ecx
  401306:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  401310:	mov    eax,DWORD PTR [ebp-0x14]
  401313:	xor    DWORD PTR ds:0x4291e7,0x69e7
  40131d:	mov    DWORD PTR [ebp-0x9c],eax
  401323:	mov    eax,DWORD PTR [ebp-0x18]
  401326:	or     DWORD PTR ds:0x42916f,0x429173
  401330:	mov    DWORD PTR [ebp-0x98],eax
  401336:	and    DWORD PTR ds:0x429187,ecx
  40133c:	mov    eax,DWORD PTR [ebp-0x2c]
  40133f:	xor    eax,esi
  401341:	mov    DWORD PTR ds:0x4291ab,0x4dc6
  40134b:	add    eax,edi
  40134d:	mov    DWORD PTR [ebp-0x94],eax
  401353:	adc    DWORD PTR ds:0x429193,0x429197
  40135d:	lea    eax,[ebp-0x48]
  401360:	sbb    DWORD PTR ds:0x42914f,0x4291c3
  40136a:	mov    DWORD PTR [ebp-0x90],eax
  401370:	mov    eax,ds:0x42917f
  401375:	or     DWORD PTR ds:0x4291bf,eax
  40137b:	mov    eax,DWORD PTR [ebp-0xa0]
  401381:	adc    DWORD PTR ds:0x429187,0x4291df
  40138b:	xor    eax,esi
  40138d:	add    eax,edi
  40138f:	mov    DWORD PTR [ebp-0xa0],eax
  401395:	lea    eax,[ebp-0xa0]
  40139b:	and    DWORD PTR ds:0x42919f,0x4291a7
  4013a5:	push   eax
  4013a6:	mov    eax,DWORD PTR [ebp+0xc]
  4013a9:	mov    DWORD PTR ds:0x42917b,0x524d
  4013b3:	xor    eax,esi
  4013b5:	add    eax,edi
  4013b7:	and    DWORD PTR ds:0x429183,0x429193
  4013c1:	push   eax
  4013c2:	sub    DWORD PTR ds:0x429173,0x45d8
  4013cc:	mov    eax,ds:0x42832b
  4013d1:	xor    DWORD PTR ds:0x42917b,0x37ec
  4013db:	push   0x428281
  4013e0:	sub    DWORD PTR ds:0x4291e3,0x5ee0
  4013ea:	push   DWORD PTR [eax]
  4013ec:	xor    DWORD PTR ds:0x42916b,0x429197
  4013f6:	call   0x4085e5
  4013fb:	and    DWORD PTR ds:0x429153,0x0
  401405:	mov    edx,DWORD PTR ds:0x429153
  40140b:	inc    edx
  40140c:	mov    DWORD PTR ds:0x429153,edx
  401412:	cmp    DWORD PTR ds:0x429153,0x24
  401419:	jb     0x401442
  40141f:	jmp    0x401435
  401424:	push   0x4280d6
  401429:	push   DWORD PTR [ebp-0x18]
  40142c:	push   DWORD PTR [ebp-0x14]
  40142f:	call   DWORD PTR ds:0x42a56f
  401435:	cmp    DWORD PTR ds:0x429153,0x15
  40143c:	jb     0x401405
  401442:	mov    ebx,DWORD PTR [ebp-0x14]
  401445:	add    DWORD PTR ds:0x42914f,edx
  40144b:	mov    eax,DWORD PTR [ebp-0x18]
  40144e:	and    DWORD PTR ds:0x42916b,0x0
  401458:	jmp    0x40146a
  40145d:	mov    edx,DWORD PTR ds:0x42916b
  401463:	inc    edx
  401464:	mov    DWORD PTR ds:0x42916b,edx
  40146a:	cmp    DWORD PTR ds:0x42916b,0x17
  401471:	jae    0x4014b1
  401477:	cmp    DWORD PTR ds:0x42916b,0xc
  40147e:	ja     0x4014b1
  401484:	jmp    0x401492
  401489:	push   DWORD PTR [ebp-0x24]
  40148c:	call   DWORD PTR ds:0x42a573
  401492:	cmp    DWORD PTR ds:0x42916b,0xb
  401499:	jne    0x4014ac
  40149f:	mov    edx,DWORD PTR ds:0x42916b
  4014a5:	inc    edx
  4014a6:	mov    DWORD PTR ds:0x42916b,edx
  4014ac:	jmp    0x40145d
  4014b1:	mov    DWORD PTR [ebp-0x58],eax
  4014b4:	add    DWORD PTR ds:0x4291c7,edi
  4014ba:	mov    DWORD PTR [ebp-0x34],0xf89c8538
  4014c1:	mov    eax,0xf89c85a3
  4014c6:	inc    DWORD PTR ds:0x42916f
  4014cc:	mov    DWORD PTR [ebp-0x1c],eax
  4014cf:	lea    ecx,[eax-0x2]
  4014d2:	inc    DWORD PTR ds:0x42919b
  4014d8:	mov    DWORD PTR [ebp-0x28],ecx
  4014db:	movzx  edx,BYTE PTR ds:0x429163
  4014e2:	or     DWORD PTR ds:0x4291e7,edx
  4014e8:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  4014ef:	mov    DWORD PTR [ebp-0x8],eax
  4014f2:	and    DWORD PTR ds:0x4291e7,0x0
  4014fc:	jmp    0x40150c
  401501:	mov    eax,ds:0x4291e7
  401506:	inc    eax
  401507:	mov    ds:0x4291e7,eax
  40150c:	cmp    DWORD PTR ds:0x4291e7,0x11
  401513:	jae    0x401543
  401519:	cmp    DWORD PTR ds:0x4291e7,0x13
  401520:	jge    0x401543
  401526:	jmp    0x40153e
  40152b:	push   0x4280b5
  401530:	push   DWORD PTR [ebp-0x28]
  401533:	push   0x738c
  401538:	call   DWORD PTR ds:0x42a577
  40153e:	jmp    0x401501
  401543:	mov    eax,DWORD PTR [ebp-0x10]
  401546:	sbb    DWORD PTR ds:0x429193,edi
  40154c:	xor    eax,esi
  40154e:	sub    edx,DWORD PTR ds:0x429193
  401554:	mov    edx,0xffcd8d8d
  401559:	sub    edx,eax
  40155b:	mov    DWORD PTR ds:0x42915b,edx
  401561:	mov    DWORD PTR [ebp-0xc],edx
  401564:	movzx  eax,WORD PTR ds:0x4291f7
  40156b:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  401572:	mov    eax,DWORD PTR [ebp-0x8]
  401575:	mov    DWORD PTR [ebp-0x3c],ebx
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x4291d3,0x104a
  401584:	je     0x403bad
  40158a:	add    ecx,0x327f
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	mov    ecx,DWORD PTR [ebp-0x10]
  401596:	sbb    DWORD PTR ds:0x4291b3,0x52cd
  4015a0:	xor    eax,esi
  4015a2:	xor    ecx,esi
  4015a4:	lea    ecx,[eax+ecx*1+0x64e5e6]
  4015ab:	mov    eax,DWORD PTR [ebp-0xc]
  4015ae:	or     DWORD PTR ds:0x429153,0x67db
  4015b8:	xor    edx,edx
  4015ba:	div    ecx
  4015bc:	mov    eax,DWORD PTR [ebp-0x8]
  4015bf:	xor    ecx,0x4574
  4015c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4015c8:	xor    eax,esi
  4015ca:	or     DWORD PTR ds:0x4291df,0xa4f
  4015d4:	xor    ecx,esi
  4015d6:	or     DWORD PTR ds:0x42915f,0x4291eb
  4015e0:	sub    eax,ecx
  4015e2:	cmp    edx,eax
  4015e4:	jne    0x401764
  4015ea:	mov    eax,DWORD PTR [ebp-0xc]
  4015ed:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4015f4:	add    ecx,DWORD PTR ds:0x4291d7
  4015fa:	mov    eax,DWORD PTR [ebp-0x28]
  4015fd:	mov    ecx,DWORD PTR [ebp-0x18]
  401600:	sub    DWORD PTR ds:0x42916f,0x2374
  40160a:	xor    eax,esi
  40160c:	add    DWORD PTR ds:0x429197,0x6412
  401616:	xor    ecx,esi
  401618:	add    eax,edi
  40161a:	add    ecx,edi
  40161c:	mov    DWORD PTR ds:0x42914f,0x798e
  401626:	mov    BYTE PTR [ebp-0x21],dl
  401629:	mov    DWORD PTR ds:0x42916f,0x52dc
  401633:	cmp    eax,ecx
  401635:	mov    DWORD PTR ds:0x42918f,0x1786
  40163f:	jae    0x401707
  401645:	and    DWORD PTR ds:0x42915b,ecx
  40164b:	lea    ecx,[eax-0x3272f3]
  401651:	not    edx
  401653:	mov    DWORD PTR [ebp-0x14],ecx
  401656:	mov    edx,DWORD PTR [ebp-0x14]
  401659:	xor    edx,esi
  40165b:	xor    DWORD PTR ds:0x4291a7,0x52cf
  401665:	add    edx,0x7f55d8e3
  40166b:	lea    ecx,[ebp+eax*4-0xb4]
  401672:	mov    DWORD PTR [ecx],edx
  401674:	mov    edx,DWORD PTR ds:0x429193
  40167a:	mov    edx,DWORD PTR [ecx]
  40167c:	cmp    edx,0x244ecb9c
  401682:	jbe    0x4016a7
  401688:	add    DWORD PTR ds:0x42916b,0x3ac8
  401692:	add    DWORD PTR [ecx],0x405fcdd
  401698:	mov    DWORD PTR ds:0x42919f,0x6763
  4016a2:	jmp    0x4016b7
  4016a7:	add    DWORD PTR ds:0x42914f,0x4291af
  4016b1:	add    DWORD PTR [ecx],0xfdaf4323
  4016b7:	sub    ecx,0x38f7
  4016bd:	mov    ecx,DWORD PTR [ebp-0x18]
  4016c0:	xor    DWORD PTR ds:0x4291c7,0x8c7
  4016ca:	xor    ecx,esi
  4016cc:	dec    DWORD PTR ds:0x42915b
  4016d2:	inc    eax
  4016d3:	sbb    DWORD PTR ds:0x4291cf,0x4291df
  4016dd:	inc    DWORD PTR [ebp-0x14]
  4016e0:	add    DWORD PTR ds:0x4291f3,0x429193
  4016ea:	add    ecx,edi
  4016ec:	cmp    eax,ecx
  4016ee:	mov    DWORD PTR ds:0x4291d3,0x74e1
  4016f8:	jb     0x401656
  4016fe:	not    DWORD PTR ds:0x4291af
  401704:	mov    dl,BYTE PTR [ebp-0x21]
  401707:	xor    DWORD PTR ds:0x429153,edi
  40170d:	mov    eax,DWORD PTR [ebp-0x34]
  401710:	mov    DWORD PTR ds:0x429173,0x31f7
  40171a:	xor    al,0xac
  40171c:	xor    DWORD PTR ds:0x429157,0x429193
  401726:	mov    cl,0xd
  401728:	sub    cl,al
  40172a:	add    dl,cl
  40172c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40172f:	adc    DWORD PTR ds:0x4291c3,0x11c9
  401739:	xor    cl,0xac
  40173c:	sub    cl,0xd
  40173f:	and    DWORD PTR ds:0x4291ef,0x4291b7
  401749:	ror    dl,cl
  40174b:	movzx  ecx,WORD PTR ds:0x4291e3
  401752:	sbb    DWORD PTR ds:0x4291ef,ecx
  401758:	xor    eax,eax
  40175a:	mov    eax,DWORD PTR [ebp-0xc]
  40175d:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  401764:	mov    eax,DWORD PTR [ebp-0xc]
  401767:	adc    ecx,0x7a4f
  40176d:	mov    ecx,DWORD PTR [ebp-0x28]
  401770:	or     DWORD PTR ds:0x42918f,0x42919b
  40177a:	jmp    0x403b2b
  40177f:	pop    ss
  401780:	mov    eax,0x80c4d8c4
  401785:	pop    es
  401786:	mov    al,0x4
  401788:	add    eax,0xef392fe
  40178d:	jp     0x401777
  40178f:	add    DWORD PTR [ebx+0x5cef8383],0xffffff83
  401796:	sub    DWORD PTR [edx],0x2d
  401799:	and    al,0x3e
  40179b:	cmp    ah,BYTE PTR es:[eax]
  40179e:	sub    al,0x7a
  4017a0:	cmp    eax,0x748d7776
  4017a5:	jae    0x40181a
  4017a7:	jb     0x4017f4
  4017a9:	fcmovu st,st(5)
  4017ab:	(bad)  
  4017ac:	imul   edx,DWORD PTR [ecx+0x70],0x79a9607e
  4017b3:	jb     0x40181b
  4017b5:	int3   
  4017b6:	bound  edx,QWORD PTR [ebx+0x39]
  4017b9:	lea    eax,[ebx]
  4017bb:	xchg   esp,eax
  4017bc:	xchg   DWORD PTR [edx+edx*2+0x7c],esp
  4017c0:	inc    esp
  4017c1:	mov    DWORD PTR [edi+0x40bbb97c],esi
  4017c7:	sub    eax,0x3dd77fc
  4017cc:	push   0x46f21f7c
  4017d1:	rol    bl,cl
  4017d3:	repnz xchg esp,eax
  4017d5:	sub    bh,bl
  4017d7:	nop
  4017d8:	ss or  al,0x66
  4017db:	mov    al,0x93
  4017dd:	aad    0x4
  4017df:	jb     0x4017c3
  4017e1:	adc    eax,0x37030fe5
  4017e6:	and    DWORD PTR [ecx+0xd],edx
  4017e9:	aaa    
  4017ea:	jo     0x40185d
  4017ec:	(bad)  
  4017ed:	lods   al,BYTE PTR ds:[esi]
  4017ee:	sub    BYTE PTR [esi+0x1a],bl
  4017f1:	mov    bh,0xfc
  4017f3:	not    BYTE PTR [esi+0x30]
  4017f6:	test   DWORD PTR [ebx-0x2f],ecx
  4017f9:	pusha  
  4017fa:	push   es
  4017fb:	and    eax,DWORD PTR [ebx]
  4017fd:	cmp    DWORD PTR [esi+0x5ca1e278],0x2514be90
  401807:	fwait
  401808:	dec    esi
  401809:	or     BYTE PTR [edi+0x10888b3d],bl
  40180f:	jecxz  0x401843
  401811:	imul   edx,DWORD PTR [edx-0x79ab7bb],0xffffffcc
  401818:	xchg   ebx,eax
  401819:	ss xchg esi,eax
  40181b:	leave  
  40181c:	(bad)  
  40181d:	int    0x91
  40181f:	outs   dx,BYTE PTR ds:[esi]
  401820:	cmc    
  401821:	pop    edx
  401822:	imul   ecx,DWORD PTR [ebp+0xd],0x3f
  401826:	or     BYTE PTR [edi+0x18],al
  401829:	mov    dl,0x50
  40182b:	shl    DWORD PTR [ecx+ecx*2+0x26715d9],cl
  401832:	imul   esp,DWORD PTR [edi-0x46],0x6
  401836:	jno    0x4017f4
  401838:	add    DWORD PTR [ebx+0x19],ebx
  40183b:	mov    al,ds:0x33050c9c
  401840:	pop    ss
  401841:	push   ebx
  401842:	inc    ebx
  401843:	jno    0x401890
  401845:	sub    edi,DWORD PTR [ebp+0x7d89e281]
  40184b:	pop    ebx
  40184c:	loop   0x40189e
  40184e:	jg     0x401840
  401850:	leave  
  401851:	stc    
  401852:	cmp    DWORD PTR [edx-0x45ac4731],esi
  401858:	xchg   BYTE PTR [ecx],cl
  40185a:	cmp    dh,bh
  40185c:	jecxz  0x4018bc
  40185e:	xlat   BYTE PTR ds:[ebx]
  40185f:	ds cmp al,0x27
  401862:	cdq    
  401863:	push   ecx
  401864:	adc    al,0x7d
  401866:	not    BYTE PTR [ebx+0x6e]
  401869:	and    BYTE PTR [eax+0x271a3b62],bl
  40186f:	je     0x4018c6
  401871:	pop    esp
  401872:	div    al
  401874:	mov    ah,0x8c
  401876:	out    0xb7,al
  401878:	mov    eax,0x114a2914
  40187d:	add    edi,eax
  40187f:	pop    esi
  401880:	into   
  401881:	cmp    edi,esp
  401883:	fsubr  st,st(4)
  401885:	in     al,dx
  401886:	push   esp
  401887:	(bad)  
  401888:	out    dx,eax
  401889:	ss aaa 
  40188b:	(bad)  
  40188c:	scas   eax,DWORD PTR es:[edi]
  40188d:	lock xchg DWORD PTR [ecx-0x5856ee68],ebp
  401894:	(bad)  
  401895:	xlat   BYTE PTR ds:[ebx]
  401896:	pop    esp
  401897:	(bad)  
  401899:	loope  0x40181b
  40189b:	fcom   st(7)
  40189d:	sbb    esp,DWORD PTR [ebp-0x2d02ba7e]
  4018a3:	push   esp
  4018a4:	add    dh,BYTE PTR [edi-0x7]
  4018a7:	loop   0x40191c
  4018a9:	lods   eax,DWORD PTR ds:[esi]
  4018aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018ab:	inc    ebx
  4018ac:	push   0x11
  4018ae:	mov    es,WORD PTR [ebp-0x2]
  4018b1:	and    dl,BYTE PTR [ebp-0x4b54c043]
  4018b7:	rcr    DWORD PTR [ebx],1
  4018b9:	js     0x401888
  4018bb:	dec    edx
  4018bc:	(bad)  
  4018bd:	mov    al,0xec
  4018bf:	inc    esp
  4018c0:	inc    eax
  4018c1:	mov    WORD PTR [ecx+0x7f],es
  4018c4:	loop   0x4018a3
  4018c6:	inc    edx
  4018c7:	scas   al,BYTE PTR es:[edi]
  4018c8:	mov    ch,0x40
  4018ca:	sbb    DWORD PTR [edx+0x64],ebx
  4018cd:	aad    0x64
  4018cf:	daa    
  4018d0:	dec    esp
  4018d1:	lahf   
  4018d2:	aad    0x6f
  4018d4:	xlat   BYTE PTR ds:[ebx]
  4018d5:	arpl   bp,sp
  4018d7:	fld    TBYTE PTR [edi-0x21fe64ff]
  4018dd:	lea    ebx,[edi+edi*4+0xb37aa9e]
  4018e4:	jl     0x4018b6
  4018e6:	mov    esi,0xb1db3aaa
  4018eb:	push   edx
  4018ec:	outs   dx,DWORD PTR ds:[esi]
  4018ed:	mov    ds:0x32480580,al
  4018f2:	jmp    0x574e:0x221193ba
  4018f9:	cmp    bl,BYTE PTR [ebp+edx*1+0x29]
  4018fd:	sub    eax,0x297312af
  401902:	out    dx,al
  401903:	lods   eax,DWORD PTR ds:[esi]
  401904:	or     ecx,edi
  401906:	shl    BYTE PTR [esi],1
  401908:	popa   
  401909:	mov    ebp,0x25fa0be
  40190e:	cld    
  40190f:	inc    ecx
  401910:	and    esi,0x9fdfb19c
  401916:	fs pop esi
  401918:	dec    edi
  401919:	lock call 0x213ffb9c
  40191f:	mov    ds:0x4962d0f,eax
  401924:	push   ds
  401925:	retf   0x2501
  401928:	sub    DWORD PTR [ebp+0x78],ebx
  40192b:	mov    BYTE PTR [ebx],0x79
  40192e:	div    DWORD PTR [ebx+0x62]
  401931:	stos   DWORD PTR es:[edi],eax
  401932:	les    eax,FWORD PTR [edx]
  401934:	data16 xlat BYTE PTR ds:[ebx]
  401936:	mov    dl,0xac
  401938:	stos   BYTE PTR es:[edi],al
  401939:	jae    0x40193b
  40193b:	fisubr WORD PTR [esi+0x43]
  40193e:	xor    dl,bh
  401940:	inc    eax
  401941:	sar    BYTE PTR [esi-0x5581c898],1
  401947:	das    
  401948:	dec    esi
  401949:	fisub  DWORD PTR [edi+0x52]
  40194c:	popf   
  40194d:	and    ebx,DWORD PTR [ebp-0x3c47e95e]
  401953:	add    al,0x74
  401955:	int3   
  401956:	(bad)  
  401957:	mul    DWORD PTR ds:0x91c672b3
  40195d:	icebp  
  40195e:	loopne 0x4019de
  401960:	bound  ebp,QWORD PTR [ebp-0x35]
  401963:	adc    cl,al
  401965:	pop    ecx
  401966:	ja     0x4019a1
  401968:	rcl    bl,cl
  40196a:	mov    al,0xd0
  40196c:	sub    BYTE PTR [esi+0x54f5e58d],ah
  401972:	inc    ecx
  401973:	mov    ch,ch
  401975:	aad    0x9f
  401977:	mov    al,0x80
  401979:	std    
  40197a:	out    dx,al
  40197b:	pop    esp
  40197c:	xor    ch,0xd1
  40197f:	jmp    0x401971
  401981:	les    ecx,FWORD PTR [edx-0x26]
  401984:	mov    bl,0xd3
  401987:	xor    eax,0x4cce0610
  40198c:	jge    0x401a06
  40198e:	loopne 0x401945
  401990:	call   0xfa67:0xf48def7e
  401997:	lahf   
  401998:	call   0x272449f6
  40199d:	bound  ecx,QWORD PTR [edi-0x35]
  4019a0:	jle    0x401976
  4019a2:	jo     0x4019df
  4019a4:	call   0x66b8c13a
  4019a9:	(bad)  
  4019aa:	scas   eax,DWORD PTR es:[edi]
  4019ab:	(bad)  
  4019ac:	in     al,dx
  4019ad:	and    al,0x81
  4019af:	mov    dl,0x51
  4019b1:	shl    ecx,0x2c
  4019b4:	mov    DWORD PTR [esi],edi
  4019b6:	(bad)  
  4019b7:	out    dx,eax
  4019b8:	mov    ah,0x28
  4019ba:	call   0xb5e4fb17
  4019bf:	mov    bh,0x60
  4019c1:	inc    esi
  4019c2:	pop    es
  4019c3:	cmp    BYTE PTR [edi],0xe0
  4019c6:	push   ss
  4019c7:	sti    
  4019c8:	rcl    BYTE PTR [ebx],1
  4019ca:	adc    DWORD PTR [edx+edx*2+0x47ac11ab],0xffffffba
  4019d2:	jge    0x40196e
  4019d4:	sar    DWORD PTR [ebp-0x5e36d4bf],cl
  4019da:	bound  ecx,QWORD PTR [ebx-0x408e7314]
  4019e0:	lods   al,BYTE PTR es:[esi]
  4019e2:	pop    edi
  4019e3:	call   0xa041:0x54f97ec3
  4019ea:	popf   
  4019eb:	popa   
  4019ec:	jle    0x401a3b
  4019ee:	adc    BYTE PTR [edx-0x45],ah
  4019f1:	fld    TBYTE PTR [ecx+0x72]
  4019f4:	inc    esp
  4019f5:	or     BYTE PTR [eax-0x5d],bh
  4019f8:	jmp    FWORD PTR [eax]
  4019fa:	ror    DWORD PTR [ebx+ecx*1],0x4f
  4019fe:	add    al,0xd7
  401a00:	sub    BYTE PTR [esp+esi*1-0x7c5c7439],ah
  401a07:	loope  0x4019a8
  401a09:	inc    edx
  401a0a:	inc    ecx
  401a0b:	sub    al,0x8c
  401a0d:	jne    0x401991
  401a0f:	mov    esi,0x3395cb0
  401a14:	jae    0x401a5f
  401a16:	xor    dl,BYTE PTR [edi]
  401a18:	enter  0xc078,0xb
  401a1c:	retf   0xfb26
  401a1f:	mov    ah,0x47
  401a21:	das    
  401a22:	inc    edx
  401a23:	call   0x14d1:0x56752f45
  401a2a:	fild   QWORD PTR [eax]
  401a2c:	aad    0xc0
  401a2e:	ins    BYTE PTR es:[edi],dx
  401a2f:	stc    
  401a30:	or     BYTE PTR [ecx-0x658672f9],bl
  401a36:	sub    cl,dl
  401a38:	arpl   WORD PTR [ebx+0xc9bac6f],cx
  401a3e:	mov    DWORD PTR [edx],0xe012dcfc
  401a44:	ins    BYTE PTR es:[edi],dx
  401a45:	repnz xchg esi,edi
  401a48:	neg    DWORD PTR [edx-0x1299af69]
  401a4e:	xchg   ebx,edi
  401a50:	(bad)  
  401a51:	adc    BYTE PTR ds:0x4ffca5f8,bh
  401a57:	inc    ebx
  401a58:	outs   dx,DWORD PTR ds:[esi]
  401a59:	les    esi,FWORD PTR [esi]
  401a5b:	lods   al,BYTE PTR ds:[esi]
  401a5c:	lea    esi,[ebx-0x5c88868e]
  401a62:	and    esi,ebp
  401a64:	pop    edx
  401a65:	sub    DWORD PTR [eax+edx*8+0x1b],ecx
  401a69:	pop    edi
  401a6a:	iret   
  401a6b:	xor    edx,edx
  401a6d:	popa   
  401a6e:	test   al,0x26
  401a70:	loope  0x401a02
  401a72:	xor    BYTE PTR [ebx+0xb],bh
  401a75:	add    ebx,eax
  401a77:	outs   dx,BYTE PTR ds:[esi]
  401a78:	sti    
  401a79:	xchg   ecx,eax
  401a7a:	(bad)  
  401a7b:	push   edi
  401a7c:	and    edx,DWORD PTR [esp+edi*2]
  401a7f:	add    DWORD PTR [edi],ecx
  401a81:	(bad)  
  401a82:	push   ss
  401a83:	mov    ch,0xbe
  401a85:	iret   
  401a86:	(bad)  
  401a87:	addr16 dec edx
  401a8a:	out    dx,eax
  401a8b:	mov    eax,0x278f9df4
  401a90:	mov    cl,0x3d
  401a92:	mov    al,ds:0x8f25b4f2
  401a97:	xor    BYTE PTR [eax+0x2b],ch
  401a9a:	xchg   ebp,eax
  401a9b:	cmc    
  401a9c:	inc    ebp
  401a9d:	sti    
  401a9e:	inc    ebx
  401a9f:	mov    dl,0xf6
  401aa1:	xchg   esp,eax
  401aa2:	pop    ds
  401aa3:	aam    0x7f
  401aa5:	sti    
  401aa6:	or     bl,BYTE PTR [ecx+0x7f]
  401aa9:	inc    esp
  401aaa:	lds    edi,FWORD PTR [esi-0x32]
  401aad:	retf   
  401aae:	mov    ah,0x61
  401ab0:	hlt    
  401ab1:	jl     0xe512f930
  401ab7:	cmp    al,BYTE PTR [ebx]
  401ab9:	add    al,0xad
  401abb:	dec    edi
  401abc:	repnz dec eax
  401abe:	dec    ecx
  401abf:	mov    BYTE PTR [edx+0x7],ch
  401ac2:	jecxz  0x401b25
  401ac4:	mov    al,ds:0xe7582994
  401ac9:	out    0x8a,al
  401acb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401acc:	inc    ebp
  401acd:	ins    DWORD PTR es:[edi],dx
  401ace:	loop   0x401ad1
  401ad0:	icebp  
  401ad1:	ss pushf 
  401ad3:	and    BYTE PTR [ebx+0x5d37e5a],bl
  401ad9:	aas    
  401ada:	inc    edx
  401adb:	jno    0x401a9a
  401add:	cmp    dh,BYTE PTR [esi]
  401adf:	push   edi
  401ae0:	dec    eax
  401ae1:	mov    ebx,0x91695846
  401ae6:	xlat   BYTE PTR ds:[ebx]
  401ae7:	test   al,0x4
  401ae9:	cmp    al,0xb
  401aeb:	std    
  401aec:	stos   DWORD PTR es:[edi],eax
  401aed:	ins    BYTE PTR es:[edi],dx
  401aee:	jbe    0x401a95
  401af0:	xor    bl,al
  401af2:	imul   ecx,edx,0x99b2577e
  401af8:	dec    edx
  401af9:	and    al,0x46
  401afb:	mov    cl,0x5d
  401afd:	fld    TBYTE PTR [ecx+0x10786238]
  401b03:	cmc    
  401b04:	xor    BYTE PTR [esi-0x62],0x38
  401b08:	addr16 mov ah,0xf0
  401b0b:	(bad)  
  401b0c:	stos   DWORD PTR es:[edi],eax
  401b0d:	fs push eax
  401b0f:	test   BYTE PTR [edi+0x5d],dl
  401b12:	adc    BYTE PTR [ecx-0x35aa4766],al
  401b18:	fwait
  401b19:	sub    DWORD PTR [esp+edx*1+0x6fc75513],ebp
  401b20:	fcmove st,st(4)
  401b22:	loop   0x401adb
  401b24:	push   0x3f
  401b26:	jnp    0x401ae7
  401b28:	lahf   
  401b29:	mov    cl,0xb6
  401b2b:	lahf   
  401b2c:	xor    DWORD PTR [eax+esi*8-0x538fb811],0xceb994b3
  401b37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b38:	or     BYTE PTR [edx-0x597f024c],ch
  401b3e:	fsub   st(3),st
  401b40:	jmp    0x5e65:0x4cb2447c
  401b47:	or     al,0xe2
  401b49:	cmp    eax,DWORD PTR [ebx]
  401b4b:	adc    cl,ch
  401b4d:	xor    DWORD PTR ds:0xd3d1f2c3,ebp
  401b53:	push   0xffffffba
  401b55:	cmp    esi,esi
  401b57:	inc    ebx
  401b58:	fbstp  TBYTE PTR ds:0x4df241c8
  401b5e:	mov    ds,WORD PTR [esi]
  401b60:	sti    
  401b61:	inc    edx
  401b62:	mov    ds,WORD PTR [edi+eax*8-0x1106971a]
  401b69:	enter  0x229f,0x1b
  401b6d:	mov    dh,0x7a
  401b6f:	shr    dh,cl
  401b71:	xor    eax,ecx
  401b73:	push   edx
  401b74:	cli    
  401b75:	and    al,0xbe
  401b77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b78:	es loop 0x401bee
  401b7b:	push   ecx
  401b7c:	fadd   QWORD PTR [edx]
  401b7e:	push   ebp
  401b7f:	loop   0x401b5f
  401b81:	imul   BYTE PTR [edi-0x6]
  401b84:	das    
  401b85:	sub    bl,ah
  401b87:	fadd   DWORD PTR [edi+0x4cb98546]
  401b8d:	and    BYTE PTR [eax],bh
  401b8f:	repz in al,0x30
  401b92:	sbb    BYTE PTR [ebx],bl
  401b94:	or     al,0x14
  401b96:	pavgb  mm0,mm4
  401b99:	xchg   ch,al
  401b9b:	or     DWORD PTR [ecx+0x1e],edi
  401b9e:	dec    esi
  401b9f:	inc    edx
  401ba0:	cmp    al,BYTE PTR [eax-0x6fd6c572]
  401ba6:	int3   
  401ba7:	dec    esi
  401ba8:	inc    ecx
  401ba9:	jb     0x401c1e
  401bab:	mov    esp,0x762b923c
  401bb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bb1:	add    eax,edi
  401bb3:	or     DWORD PTR [ebx-0x7c],edx
  401bb6:	xor    ebp,DWORD PTR [ebx+0x52]
  401bb9:	aas    
  401bba:	jge    0x401be9
  401bbc:	(bad)  [esi+esi*8]
  401bbf:	dec    ebp
  401bc0:	fdiv   QWORD PTR [edi+edi*4-0x2402cb44]
  401bc7:	test   DWORD PTR [ebx-0x7],ecx
  401bca:	mov    ebx,DWORD PTR [ebx]
  401bcc:	mov    bl,0xa
  401bce:	cld    
  401bcf:	(bad)  [ecx-0xb3da3f5]
  401bd5:	sbb    eax,0x24c004d2
  401bda:	jb     0x401c40
  401bdc:	es stos BYTE PTR es:[edi],al
  401bde:	bound  edi,QWORD PTR ds:0x3e019462
  401be4:	imul   edx,DWORD PTR [ebx-0x5add750d],0x8dabc680
  401bee:	ins    DWORD PTR es:[edi],dx
  401bef:	and    cl,BYTE PTR [edi+0x10]
  401bf2:	mov    ebp,0xf18ecd14
  401bf7:	xchg   esp,eax
  401bf8:	call   0x9db9:0x4080814f
  401bff:	das    
  401c00:	jne    0x401ba1
  401c02:	div    BYTE PTR [ebp+0x136e9d6c]
  401c08:	call   0x2de2:0xdeb83bfc
  401c0f:	fdivr  QWORD PTR [ecx+0x402abd29]
  401c15:	retf   0x92af
  401c18:	mov    al,0xe1
  401c1a:	pop    ecx
  401c1b:	jnp    0x401bd7
  401c1d:	push   ecx
  401c1e:	retf   0x65da
  401c21:	mov    cl,0xbe
  401c23:	data16 jo 0x401bfc
  401c26:	cmp    DWORD PTR [ebp-0x25af93b1],esp
  401c2c:	adc    al,0x4
  401c2e:	mov    eax,DWORD PTR [esi-0x43dea586]
  401c34:	rol    BYTE PTR [ebx+0x60],1
  401c37:	inc    edi
  401c38:	(bad)  
  401c39:	repz pushf 
  401c3b:	mov    eax,0xe165f887
  401c40:	bound  ebx,QWORD PTR ds:0x582f8c8e
  401c46:	add    ebx,DWORD PTR [esi+0x66bc791d]
  401c4c:	out    dx,al
  401c4d:	push   cs
  401c4e:	jne    0x401c5b
  401c50:	popf   
  401c51:	xor    BYTE PTR ds:0x87d57683,0x3d
  401c58:	rcr    DWORD PTR [edx+0x360fb999],cl
  401c5e:	and    DWORD PTR [edx+ebp*4+0x5c],eax
  401c62:	inc    edi
  401c63:	add    al,0x5c
  401c65:	mov    BYTE PTR [edi-0x2b],al
  401c68:	shl    BYTE PTR [ebx-0x1f00b916],1
  401c6e:	iret   
  401c6f:	repz addr16 sbb ch,0x13
  401c74:	and    BYTE PTR [ecx+ebx*2-0x40],ah
  401c78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c79:	mov    ds:0x157df934,eax
  401c7e:	lods   eax,DWORD PTR ds:[esi]
  401c7f:	adc    al,0xe2
  401c81:	mov    bl,0x8
  401c83:	mov    gs,WORD PTR ds:[edx+0x530c0c4a]
  401c8a:	retf   0xfabb
  401c8d:	lahf   
  401c8e:	adc    ecx,DWORD PTR [edi]
  401c90:	(bad)  
  401c91:	ja     0x401c24
  401c93:	repnz fisubr WORD PTR [ebp-0x66]
  401c97:	cmp    eax,0xbad1c07d
  401c9c:	(bad)  
  401c9d:	mov    edi,0xc983b74c
  401ca2:	mov    DWORD PTR [edx],ecx
  401ca4:	int    0x9c
  401ca6:	loop   0x401d01
  401ca8:	sbb    al,dl
  401caa:	scas   eax,DWORD PTR es:[edi]
  401cab:	les    edx,FWORD PTR [ebx-0x3]
  401cae:	xchg   edi,eax
  401caf:	jle    0x401ce5
  401cb1:	sti    
  401cb2:	and    al,0xef
  401cb4:	je     0x401d2e
  401cb6:	jmp    0x273d5ecb
  401cbb:	bound  esp,QWORD PTR [ecx+edi*1]
  401cbe:	mov    ch,0x97
  401cc0:	mov    eax,0x3155ffb
  401cc5:	mov    eax,ds:0x5cd3407d
  401cca:	jg     0x401c89
  401ccc:	xchg   ebx,eax
  401ccd:	inc    ebx
  401cce:	mov    bh,0x54
  401cd0:	mov    eax,ds:0xd74f192b
  401cd5:	cli    
  401cd6:	inc    esi
  401cd7:	pop    ebx
  401cd8:	or     edi,DWORD PTR es:[ebx-0x57]
  401cdc:	jae    0x401d17
  401cde:	sub    eax,0xdd444895
  401ce3:	xor    bh,BYTE PTR [edx-0x53]
  401ce6:	pushf  
  401ce7:	xchg   BYTE PTR [ebp+0x2f],dh
  401cea:	pop    ebp
  401ceb:	add    DWORD PTR [edi],esi
  401ced:	lds    ebx,FWORD PTR [ebx]
  401cef:	fist   DWORD PTR [esi+0x59b22b9f]
  401cf5:	ins    BYTE PTR es:[edi],dx
  401cf6:	sub    ch,BYTE PTR [edx+0x7606e769]
  401cfc:	jle    0x401c8c
  401cfe:	fs inc esp
  401d00:	mov    eax,ds:0x1533abd4
  401d05:	(bad)  
  401d06:	shr    BYTE PTR [ebp-0x51d837f],1
  401d0c:	mov    ch,al
  401d0e:	sar    DWORD PTR [esi-0x50050a8],0x84
  401d15:	dec    ecx
  401d16:	xor    BYTE PTR [ecx+0x3a],bl
  401d19:	cdq    
  401d1a:	lock add ecx,DWORD PTR [edx+ebp*8-0x6aa1a5b7]
  401d22:	gs ss jbe 0x401d10
  401d26:	daa    
  401d27:	sbb    edi,DWORD PTR [ecx+0x17]
  401d2a:	rcl    ebp,cl
  401d2c:	fcmovnbe st,st(6)
  401d2e:	xchg   DWORD PTR [eax],ebp
  401d30:	(bad)  
  401d31:	int3   
  401d32:	lea    ebp,[edi]
  401d34:	sub    BYTE PTR [edx],ah
  401d36:	test   eax,0x75cb079b
  401d3b:	ss scas eax,DWORD PTR es:[edi]
  401d3d:	retf   0x315
  401d40:	paddd  mm6,QWORD PTR [edi+ebx*1-0x776b5454]
  401d48:	adc    al,0xdd
  401d4a:	or     dl,BYTE PTR [ecx]
  401d4c:	lea    esp,[ecx+0x31058553]
  401d52:	inc    edi
  401d53:	sub    al,0x21
  401d55:	dec    ebx
  401d56:	sub    ch,ch
  401d58:	mov    ds:0x8e9ac045,al
  401d5d:	xor    eax,0x71871cd2
  401d62:	jno    0x401cfd
  401d64:	repnz sub DWORD PTR [ebx],esp
  401d67:	les    ebx,FWORD PTR [edx]
  401d69:	fist   WORD PTR [eax+0x4893f2af]
  401d6f:	mov    ds:0xb597fff7,eax
  401d74:	mov    eax,0x5a69592e
  401d79:	push   ss
  401d7a:	loope  0x401d17
  401d7c:	sbb    eax,0xcd579015
  401d81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d82:	loop   0x401d43
  401d84:	loope  0x401d85
  401d86:	sbb    eax,0x6102a54c
  401d8b:	call   DWORD PTR [edx]
  401d8d:	int    0xbd
  401d8f:	cwde   
  401d90:	add    DWORD PTR [edi+0x16],eax
  401d93:	add    eax,0x5154a24d
  401d98:	and    BYTE PTR [edx],al
  401d9a:	xchg   esp,eax
  401d9b:	div    DWORD PTR [eax+0x7]
  401d9e:	jg     0x401d55
  401da0:	fwait
  401da1:	mov    esi,0xc6669609
  401da6:	rcl    BYTE PTR [ecx+0x89177bc],1
  401dac:	ja     0x401dda
  401dae:	dec    ebp
  401daf:	and    esp,DWORD PTR [ecx+0x7d01bde9]
  401db5:	out    0xf,al
  401db7:	stos   BYTE PTR es:[edi],al
  401db8:	pop    ss
  401db9:	cld    
  401dba:	aad    0x13
  401dbc:	jmp    0xe8c59034
  401dc1:	push   ds
  401dc2:	push   0xffffff98
  401dc4:	mov    ch,0x20
  401dc6:	add    BYTE PTR [ebx-0x80],0xe5
  401dca:	xchg   edx,eax
  401dcb:	ins    BYTE PTR es:[edi],dx
  401dcc:	int3   
  401dcd:	lds    ecx,FWORD PTR [ebx]
  401dcf:	and    bl,BYTE PTR [ebx-0x72e88b8b]
  401dd5:	push   0x944f49c1
  401dda:	and    ch,BYTE PTR [esi-0x54]
  401ddd:	and    cl,0x67
  401de0:	pop    es
  401de1:	dec    esp
  401de2:	dec    esi
  401de3:	retf   
  401de4:	scas   al,BYTE PTR es:[edi]
  401de5:	mov    eax,ds:0x6c10c638
  401dea:	std    
  401deb:	mov    dh,0xfb
  401ded:	push   esi
  401dee:	add    eax,0x65b20b52
  401df3:	es ss (bad) 
  401df6:	mov    DWORD PTR [edi],esi
  401df8:	cmp    DWORD PTR [esi],ebp
  401dfa:	push   edx
  401dfb:	fstp   TBYTE PTR [ebx+0x5b]
  401dfe:	add    DWORD PTR [ecx],ebp
  401e00:	add    al,0x7b
  401e02:	mov    bh,0x67
  401e04:	jg     0x401dac
  401e06:	jne    0x401e14
  401e08:	cwde   
  401e09:	leave  
  401e0a:	dec    ebx
  401e0b:	mov    eax,ds:0x24303927
  401e10:	and    al,0x9e
  401e12:	(bad)  
  401e13:	fidivr WORD PTR [esi+0x4f884f76]
  401e19:	xor    eax,0xdc256e5e
  401e1e:	mov    dh,0x3
  401e20:	push   es
  401e21:	fwait
  401e22:	ret    0x44a1
  401e25:	jle    0x401df7
  401e27:	in     eax,dx
  401e28:	(bad)  
  401e29:	cdq    
  401e2a:	out    0x5c,eax
  401e2c:	mov    al,0xf1
  401e2e:	cmp    edx,DWORD PTR [edi+ecx*2]
  401e31:	mov    bl,BYTE PTR [edx]
  401e33:	sbb    al,0x4d
  401e35:	inc    edi
  401e36:	mov    DWORD PTR gs:[edi-0x21dbfa1b],0x7c298ded
  401e41:	adc    BYTE PTR [esi-0x1f7b9a83],ch
  401e47:	popf   
  401e48:	pop    ecx
  401e49:	loop   0x401e4e
  401e4b:	shr    edi,cl
  401e4d:	add    DWORD PTR [ebx+eax*8],ebx
  401e50:	fidiv  DWORD PTR ds:0xb0b074df
  401e56:	out    0x60,eax
  401e58:	jns    0x401ec2
  401e5a:	cld    
  401e5b:	pop    ebx
  401e5c:	cdq    
  401e5d:	xor    DWORD PTR [edi],esp
  401e5f:	lock popf 
  401e61:	je     0x401df3
  401e63:	ins    BYTE PTR es:[edi],dx
  401e64:	xor    DWORD PTR [ebp+0x2a178224],eax
  401e6a:	test   eax,0xb607aa9e
  401e6f:	icebp  
  401e70:	loope  0x401e43
  401e72:	jmp    0x12a91a6d
  401e77:	jg     0x401ecf
  401e79:	adc    BYTE PTR [eax],cl
  401e7b:	sbb    DWORD PTR ds:[eax-0x1f81a6da],ebp
  401e82:	cmc    
  401e83:	lods   al,BYTE PTR ds:[esi]
  401e84:	dec    edx
  401e85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e86:	mov    edx,0x38cfb48c
  401e8b:	dec    esp
  401e8c:	xchg   ebx,eax
  401e8d:	retf   
  401e8e:	fcomip st,st(4)
  401e90:	jne    0x401e34
  401e92:	adc    eax,0x8a509464
  401e97:	pop    edx
  401e98:	int3   
  401e99:	cmp    DWORD PTR [ebp+edx*8-0x1a81ea18],esi
  401ea0:	lds    ecx,FWORD PTR [edi-0x7f]
  401ea3:	mov    bh,0x21
  401ea5:	sub    al,0x6d
  401ea7:	pop    esp
  401ea8:	test   al,0x16
  401eaa:	xor    BYTE PTR [eax+0x3c789075],bh
  401eb0:	add    BYTE PTR [eax+edi*4-0x67253c92],bh
  401eb7:	push   0x2c
  401eb9:	xchg   ah,ch
  401ebb:	mov    al,ds:0x3c10c383
  401ec0:	lock sbb eax,0x140c1fff
  401ec6:	add    edx,DWORD PTR [esi-0x35b2e236]
  401ecc:	data16 adc al,BYTE PTR [esi+0x3b]
  401ed0:	popa   
  401ed1:	(bad)  
  401ed2:	push   0x67
  401ed4:	dec    ebx
  401ed5:	adc    dl,ch
  401ed7:	and    eax,0x7e2e4400
  401edc:	sti    
  401edd:	push   ss
  401ede:	retf   
  401edf:	das    
  401ee0:	mov    bl,0x93
  401ee2:	xchg   ebx,eax
  401ee3:	sub    eax,0x79f8f0c
  401ee8:	xor    eax,0x693c0db3
  401eed:	jle    0x401e7e
  401eef:	jns    0x401f38
  401ef1:	retf   
  401ef2:	ffreep st(2)
  401ef4:	icebp  
  401ef5:	ins    BYTE PTR es:[edi],dx
  401ef6:	cli    
  401ef7:	lds    ebx,FWORD PTR [esi]
  401ef9:	(bad)  
  401efa:	(bad)  
  401efc:	push   esp
  401efd:	cmp    eax,0xaf81093d
  401f02:	gs leave 
  401f04:	mul    BYTE PTR [edx+0x2c]
  401f07:	jmp    0x401f7b
  401f09:	mov    ds,esp
  401f0b:	inc    esp
  401f0c:	xor    eax,0x8c43ad84
  401f11:	push   eax
  401f12:	scas   al,BYTE PTR es:[edi]
  401f13:	dec    ebp
  401f14:	mov    DWORD PTR [eax-0x47],edx
  401f17:	ins    DWORD PTR es:[edi],dx
  401f18:	adc    dh,0xf2
  401f1b:	and    eax,0xa99829e9
  401f20:	mov    eax,0xeb89b45f
  401f25:	fnstcw WORD PTR [eax+0x57]
  401f28:	lds    ebp,FWORD PTR [ebx]
  401f2a:	lahf   
  401f2b:	pop    eax
  401f2c:	pop    edi
  401f2d:	pop    ebx
  401f2e:	mov    eax,0xef0f81de
  401f33:	mov    al,al
  401f35:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f37:	sub    al,0x7f
  401f39:	test   DWORD PTR [edi-0x65],edx
  401f3c:	inc    edi
  401f3d:	mov    ds:0xff4bfd09,al
  401f42:	ror    al,1
  401f44:	fstp   DWORD PTR [eax-0x3ace9d69]
  401f4a:	les    esp,FWORD PTR [edi+0xac74841]
  401f50:	add    eax,edi
  401f52:	dec    DWORD PTR [edx-0x3718e5d2]
  401f58:	and    DWORD PTR [eax+0x1f9a563f],0xffffffb5
  401f5f:	ds ret 0x5268
  401f63:	sbb    ebp,edx
  401f65:	imul   ecx,DWORD PTR [edx+ebp*4],0xdbed8af2
  401f6c:	or     DWORD PTR [ebx+0x2f],edi
  401f6f:	sbb    al,0xad
  401f71:	fsubp  st(4),st
  401f73:	push   ebx
  401f74:	pushf  
  401f75:	cdq    
  401f76:	popf   
  401f77:	ja     0x401eff
  401f79:	ja     0x401f3d
  401f7b:	xchg   esp,eax
  401f7c:	push   ds
  401f7d:	popf   
  401f7e:	mov    al,ds:0x2b01bcf
  401f83:	test   al,0x43
  401f85:	(bad)  
  401f86:	mov    bl,0x33
  401f88:	enter  0x14a5,0x1a
  401f8c:	mov    al,ds:0x9dc8414f
  401f91:	cld    
  401f92:	pop    edx
  401f93:	mov    bl,0x3e
  401f95:	adc    eax,eax
  401f97:	mov    ss,WORD PTR [ecx]
  401f99:	call   DWORD PTR [edi+0x39]
  401f9c:	mov    ds:0x7c41ce42,al
  401fa1:	adc    BYTE PTR [esi-0x17],0xe8
  401fa5:	call   0x565:0x95f15cd0
  401fac:	xchg   ebx,eax
  401fad:	out    0x62,eax
  401faf:	mov    dl,0x15
  401fb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fb2:	ror    ch,cl
  401fb4:	das    
  401fb5:	and    eax,0x43d1b414
  401fba:	retf   
  401fbb:	(bad)  
  401fbd:	ffreep st(3)
  401fbf:	cli    
  401fc0:	xchg   edi,eax
  401fc1:	jns    0x401feb
  401fc3:	clc    
  401fc4:	add    al,0x3d
  401fc6:	icebp  
  401fc7:	jmp    0x272f:0x80904bc1
  401fce:	test   BYTE PTR [eax+ebx*2],al
  401fd1:	stos   BYTE PTR es:[edi],al
  401fd2:	int3   
  401fd3:	add    ebx,DWORD PTR [esi]
  401fd5:	sbb    dl,BYTE PTR [ebx]
  401fd7:	imul   ebx,esp,0xffffffaa
  401fda:	in     eax,0x27
  401fdc:	stos   DWORD PTR es:[edi],eax
  401fdd:	xchg   BYTE PTR [ebx+0x18],dh
  401fe0:	fldcw  WORD PTR [eax]
  401fe2:	shr    BYTE PTR [ebx+0x52],1
  401fe5:	in     al,0x3e
  401fe7:	dec    ebx
  401fe8:	cdq    
  401fe9:	dec    esp
  401fea:	pop    ss
  401feb:	sub    DWORD PTR [edi],0xffffffd4
  401fee:	ror    BYTE PTR [esi],cl
  401ff0:	(bad)  
  401ff1:	or     cl,BYTE PTR ss:[esi+0x1c]
  401ff5:	stos   DWORD PTR es:[edi],eax
  401ff6:	mov    edx,0x99b62c61
  401ffb:	repnz imul esi,DWORD PTR cs:0xdf26cc74,0x2c077496
  402007:	mul    DWORD PTR [ebx]
  402009:	push   ebx
  40200a:	add    ch,BYTE PTR [ebx+0x5565e6e7]
  402010:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402011:	into   
  402012:	add    al,0xfe
  402014:	aas    
  402015:	in     eax,dx
  402016:	jb     0x40201c
  402018:	jle    0x40207d
  40201a:	imul   DWORD PTR [ecx]
  40201c:	arpl   WORD PTR [ebp+0x5c44d239],bx
  402022:	jge    0x401fd1
  402024:	loopne 0x401fea
  402026:	cwde   
  402027:	and    esp,DWORD PTR cs:[ecx]
  40202a:	fadd   QWORD PTR [esi+0x7f5b458b]
  402030:	cmp    eax,0x43bd8ef5
  402035:	inc    edi
  402036:	inc    esp
  402037:	retf   0x2272
  40203a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40203b:	sbb    bl,BYTE PTR ds:0xaffc6a10
  402041:	pop    ss
  402042:	icebp  
  402043:	adc    BYTE PTR [esi],0xf9
  402046:	icebp  
  402047:	out    dx,al
  402048:	mov    edi,0xae733e9f
  40204d:	mov    DWORD PTR [edi],ebx
  40204f:	(bad)  
  402050:	sub    BYTE PTR [edx],ch
  402052:	or     eax,0x7dc3e99d
  402057:	int    0xd8
  402059:	cmp    eax,0xcf73fa5
  40205e:	ins    DWORD PTR es:[edi],dx
  40205f:	shl    BYTE PTR [ebx+0x48da18b7],cl
  402065:	jnp    0x4020cd
  402067:	mov    esi,DWORD PTR [edx+ecx*1+0x1ebf9ef2]
  40206e:	add    eax,0x63872ff
  402073:	jae    0x40209b
  402075:	fldcw  WORD PTR [ecx-0x1a]
  402078:	push   eax
  402079:	iret   
  40207a:	fs std 
  40207c:	jo     0x4020b6
  40207e:	add    eax,0xb634f972
  402083:	pushf  
  402084:	sub    al,0x21
  402086:	aas    
  402087:	mov    ebp,cs
  402089:	xor    DWORD PTR [edi+0x3b1feaf5],esp
  40208f:	std    
  402090:	dec    eax
  402091:	das    
  402092:	jae    0x40208a
  402094:	sysexit 
  402096:	fisttp WORD PTR [edx]
  402098:	sahf   
  402099:	dec    ebp
  40209a:	mov    dh,0x94
  40209c:	cld    
  40209d:	cmc    
  40209e:	pop    ds
  40209f:	in     eax,0x57
  4020a1:	mov    bh,0x46
  4020a3:	arpl   di,bx
  4020a5:	loopne 0x402097
  4020a7:	outs   dx,BYTE PTR ds:[esi]
  4020a8:	adc    BYTE PTR [ebp-0x5e2abf84],al
  4020ae:	sbb    eax,0x8f6c6ecc
  4020b3:	stos   DWORD PTR es:[edi],eax
  4020b4:	lds    edx,FWORD PTR [esi-0x7a]
  4020b7:	fmul   st(4),st
  4020b9:	sbb    BYTE PTR [edi*1+0x112ad84f],dh
  4020c0:	jge    0x4020e0
  4020c2:	popf   
  4020c3:	push   0x656e5b75
  4020c8:	arpl   WORD PTR [edx],cx
  4020ca:	inc    eax
  4020cb:	mov    ah,0x82
  4020cd:	rcr    DWORD PTR [eax+0x42],0x9c
  4020d1:	add    ebp,DWORD PTR [edx+0x7501bdfb]
  4020d7:	sub    al,0x55
  4020d9:	(bad)  
  4020da:	mov    eax,0x28544bb4
  4020df:	loop   0x40214a
  4020e1:	dec    edi
  4020e2:	inc    esp
  4020e3:	fwait
  4020e4:	sub    edx,DWORD PTR [ebp-0x509e3283]
  4020ea:	test   al,0x66
  4020ec:	mov    ah,0xc6
  4020ee:	loop   0x4020c3
  4020f0:	jb     0x40211f
  4020f2:	ss inc esp
  4020f4:	adc    al,0xc0
  4020f6:	loopne 0x402144
  4020f8:	jns    0x402167
  4020fa:	das    
  4020fb:	pop    edx
  4020fc:	test   eax,0x3e7eec82
  402101:	fisttp QWORD PTR [edx+ebx*1-0x32]
  402105:	fcom   QWORD PTR [esi]
  402107:	mov    eax,ds:0x764a25cd
  40210c:	push   edx
  40210d:	mov    bh,0x3d
  40210f:	jo     0x4020cf
  402111:	cmp    edi,edi
  402113:	dec    edx
  402114:	nop
  402115:	(bad)  
  402116:	call   DWORD PTR [eax-0x72]
  402119:	xchg   BYTE PTR [ecx+0x65b3aba5],bl
  40211f:	cmp    eax,0xb0b33fc8
  402124:	mov    al,ds:0x49f72b91
  402129:	cmp    eax,0xa5c33279
  40212e:	adc    eax,0xab71227
  402133:	into   
  402134:	scas   al,BYTE PTR es:[edi]
  402135:	push   esp
  402136:	imul   ebp,DWORD PTR [edx],0xffffffb0
  402139:	add    BYTE PTR [edi+0x54001216],al
  40213f:	add    BYTE PTR [edi],bh
  402141:	repnz rol BYTE PTR [ebp+0x3e],0xf8
  402146:	sbb    BYTE PTR [eax+ebp*4+0x3b],bh
  40214a:	pop    ebx
  40214b:	dec    ebp
  40214c:	iret   
  40214d:	neg    BYTE PTR [ebx+eax*1]
  402150:	aaa    
  402151:	aas    
  402152:	icebp  
  402153:	cmp    al,0xaf
  402155:	pop    ebp
  402156:	cmp    al,0xbe
  402158:	sar    DWORD PTR [esi+0x41893da7],cl
  40215e:	aam    0x73
  402160:	push   esp
  402161:	ss xchg edx,eax
  402163:	pop    esp
  402164:	push   ds
  402165:	cdq    
  402166:	ins    DWORD PTR es:[edi],dx
  402167:	icebp  
  402168:	sbb    al,0xb5
  40216a:	ftst   
  40216c:	in     al,0xfd
  40216e:	int    0xfb
  402170:	popa   
  402171:	ins    BYTE PTR es:[edi],dx
  402172:	pop    esi
  402173:	adc    DWORD PTR [ebx],esp
  402175:	jns    0x40214a
  402177:	pop    edx
  402178:	push   0x5b5faead
  40217d:	lahf   
  40217e:	or     al,0x60
  402180:	pop    esp
  402181:	sbb    BYTE PTR [ebx-0x34286fc2],al
  402187:	add    eax,0x1b088d77
  40218c:	adc    bh,BYTE PTR [eax+0x58]
  40218f:	cmp    edi,DWORD PTR [ebx+0x4b]
  402192:	add    al,0xcf
  402194:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402195:	mov    al,ds:0xd9390a9f
  40219a:	jecxz  0x402198
  40219c:	repnz inc esi
  40219e:	std    
  40219f:	(bad)  
  4021a0:	or     eax,0x6b213de6
  4021a5:	push   eax
  4021a6:	imul   eax,DWORD PTR [edi+esi*8+0x717b46c8],0xffffffa8
  4021ae:	in     al,0x6
  4021b0:	jg     0x402140
  4021b2:	adc    DWORD PTR [esi+0x708d9c4e],edi
  4021b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021b9:	loope  0x4021bf
  4021bb:	ret    
  4021bc:	xor    al,0x5b
  4021be:	sbb    al,0x4b
  4021c0:	xlat   BYTE PTR ds:[ebx]
  4021c1:	push   ss
  4021c2:	les    ebp,FWORD PTR [ebx]
  4021c4:	inc    eax
  4021c5:	pusha  
  4021c6:	sahf   
  4021c7:	mov    ah,0xab
  4021c9:	scas   al,BYTE PTR es:[edi]
  4021ca:	mov    edi,0xa806c86a
  4021cf:	fisttp WORD PTR [ebx-0x56]
  4021d2:	sti    
  4021d3:	shl    ecx,cl
  4021d5:	push   edi
  4021d6:	jle    0x402225
  4021d8:	inc    esp
  4021d9:	xor    BYTE PTR [esp+edi*1],bl
  4021dc:	pop    ebp
  4021dd:	push   edi
  4021de:	mov    ds:0xd4c9104d,eax
  4021e3:	jmp    0x7da851d5
  4021e8:	fistp  DWORD PTR [esi+0x7a]
  4021eb:	mov    esp,eax
  4021ed:	fstp   TBYTE PTR [edi-0x62]
  4021f0:	adc    BYTE PTR ds:0xc2e46cf4,dh
  4021f6:	pusha  
  4021f7:	daa    
  4021f8:	jge    0x40217b
  4021fa:	(bad)  
  4021fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021fd:	ins    BYTE PTR es:[edi],dx
  4021fe:	mov    ah,0xd7
  402200:	mov    dl,0x4d
  402202:	sub    ebx,esi
  402204:	or     eax,0xfb6023f3
  402209:	arpl   WORD PTR es:[edx-0x507efc22],sp
  402210:	sub    eax,0x5a5c7e29
  402215:	mov    ebp,0xec9dd520
  40221a:	nop
  40221b:	dec    ebp
  40221c:	xor    DWORD PTR [ebx+0x713b83cb],edi
  402222:	(bad)  
  402223:	rol    BYTE PTR [ebp-0x55],1
  402226:	test   BYTE PTR [esi-0x54],dl
  402229:	retf   0xc873
  40222c:	outs   dx,DWORD PTR ds:[esi]
  40222d:	fs cwde 
  40222f:	xchg   esi,eax
  402230:	push   0xffffffab
  402232:	adc    eax,0x55cd1e78
  402237:	add    eax,0xdd68c917
  40223c:	and    eax,0x1e9b686d
  402241:	lock adc al,0x78
  402244:	sub    bh,bl
  402246:	xor    ebp,DWORD PTR [edx-0x7e]
  402249:	repz dec esp
  40224b:	les    edx,FWORD PTR [esp+ebx*4-0x52]
  40224f:	fisubr DWORD PTR [ebp+eiz*1+0x50]
  402253:	mov    eax,ds:0xf8fb2272
  402258:	fst    QWORD PTR [di+0x48]
  40225c:	sbb    al,0x32
  40225e:	mov    dl,0x92
  402260:	lods   al,BYTE PTR ds:[esi]
  402261:	repz and DWORD PTR [ebp-0x4af34a4c],edi
  402268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402269:	(bad)  
  40226a:	cmp    edi,ebx
  40226c:	ucomiss xmm4,DWORD PTR [esi+0xa]
  402270:	loop   0x402278
  402272:	or     dl,ch
  402274:	js     0x402224
  402276:	or     al,bl
  402278:	cmc    
  402279:	stc    
  40227a:	jb     0x4022e6
  40227c:	mov    bl,0xbb
  40227e:	adc    esp,DWORD PTR [eax-0x2d5e735c]
  402284:	ins    BYTE PTR es:[edi],dx
  402285:	inc    edi
  402286:	mov    eax,ds:0x5d70c613
  40228b:	scas   eax,DWORD PTR es:[edi]
  40228c:	aas    
  40228d:	jp     0x402223
  40228f:	mov    esp,0xc5b028be
  402294:	sbb    BYTE PTR [eax+edi*8+0x121b56ba],0x22
  40229c:	leave  
  40229d:	fs nop
  40229f:	retf   
  4022a0:	sti    
  4022a1:	push   esi
  4022a2:	dec    eax
  4022a3:	lods   eax,DWORD PTR ds:[esi]
  4022a4:	mov    edi,0xf4a49296
  4022a9:	or     ah,BYTE PTR [esi]
  4022ab:	dec    edx
  4022ac:	div    DWORD PTR [edx+0x7905e9d9]
  4022b2:	scas   al,BYTE PTR es:[edi]
  4022b3:	call   0xc73c:0x381ddd19
  4022ba:	aaa    
  4022bb:	call   0xd29c:0x747039e5
  4022c2:	sub    BYTE PTR [ecx+0x1975d783],ch
  4022c8:	das    
  4022c9:	call   0xbde9:0x85324a1e
  4022d0:	push   0x26
  4022d2:	je     0x4022b7
  4022d4:	cld    
  4022d5:	dec    ecx
  4022d6:	bound  edx,QWORD PTR [esp+ecx*4-0x48e9da63]
  4022dd:	jg     0x4022e5
  4022df:	mov    ch,0x54
  4022e1:	cwde   
  4022e2:	test   DWORD PTR [ecx],esp
  4022e4:	push   ecx
  4022e5:	call   0x456b:0x8bb40c07
  4022ec:	(bad)  
  4022ee:	jge    0x402349
  4022f0:	cmp    eax,0x206ba47d
  4022f5:	jmp    0x40236b
  4022f7:	in     eax,0x7b
  4022f9:	in     eax,dx
  4022fa:	sbb    bl,bh
  4022fc:	pop    ds
  4022fd:	bound  ebx,QWORD PTR [esi-0x4ff857d9]
  402303:	mov    bh,ch
  402305:	or     BYTE PTR [eax+0x5b],bh
  402308:	sub    BYTE PTR [ecx-0x32],ah
  40230b:	xchg   ebp,eax
  40230c:	(bad)  
  40230d:	pop    esi
  40230e:	or     ah,BYTE PTR [eax-0x3465168b]
  402314:	pop    ebx
  402315:	loopne 0x4022ff
  402317:	mov    dl,BYTE PTR [edx]
  402319:	arpl   WORD PTR [esi-0x7d],dx
  40231c:	xchg   esi,eax
  40231d:	or     al,0x79
  40231f:	xor    ebp,DWORD PTR [ecx+0x74ef2669]
  402325:	outs   dx,BYTE PTR ds:[esi]
  402326:	sub    esp,DWORD PTR [ecx+0x338d092c]
  40232c:	mov    al,ds:0x3d310bdb
  402331:	jp     0x4022d0
  402333:	(bad)  
  402334:	push   eax
  402335:	xchg   DWORD PTR [eax],ebp
  402337:	test   eax,0x13621181
  40233c:	push   ds
  40233d:	dec    esp
  40233e:	bound  esi,QWORD PTR [eax]
  402340:	sbb    al,bh
  402342:	pop    es
  402343:	inc    esp
  402344:	mov    al,0x7a
  402346:	mov    ebp,0xf4a2602
  40234b:	ss ret 
  40234d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40234e:	call   0xc460:0x6c990dc0
  402355:	jb     0x40235d
  402357:	lock add al,0x58
  40235a:	imul   edi,DWORD PTR [esi+0x1f],0xffffff8e
  40235e:	xor    esp,DWORD PTR [ecx+0x36]
  402361:	mov    ch,0x47
  402363:	pop    es
  402364:	jecxz  0x4023c5
  402366:	dec    ecx
  402367:	inc    esp
  402368:	shr    ecx,1
  40236a:	test   eax,0x704ceda9
  40236f:	mul    DWORD PTR [ebp+0x1dfa4059]
  402375:	aaa    
  402376:	and    al,0x3b
  402378:	sub    al,0xb0
  40237a:	ins    DWORD PTR es:[edi],dx
  40237b:	fidiv  DWORD PTR [ebx+ecx*1]
  40237e:	hlt    
  40237f:	cmp    eax,0xaddd5d44
  402384:	add    BYTE PTR [eax-0x3c],0xba
  402388:	mov    eax,0xd0564b16
  40238d:	aaa    
  40238e:	jbe    0x4023d2
  402390:	xor    al,BYTE PTR [eax-0x7e6327da]
  402396:	and    eax,0x5d4b893c
  40239b:	and    BYTE PTR [ecx],dh
  40239d:	pop    ss
  40239e:	rcl    DWORD PTR [ecx-0x53],0xf
  4023a2:	sub    eax,0xcac52d0
  4023a7:	mov    eax,ds:0xa3e38f4b
  4023ac:	pop    esi
  4023ad:	(bad)  
  4023ae:	outs   dx,BYTE PTR ds:[esi]
  4023af:	xchg   edx,eax
  4023b0:	imul   esi,DWORD PTR [ebx-0x6b],0x4f459b0e
  4023b7:	int3   
  4023b8:	xchg   edx,eax
  4023b9:	std    
  4023ba:	inc    edx
  4023bb:	into   
  4023bc:	sub    al,0xc2
  4023be:	test   al,0x7a
  4023c0:	repz xor al,0x1
  4023c3:	push   0xf64d3d79
  4023c8:	mov    WORD PTR [ebx+eax*4-0x25904337],cs
  4023cf:	jbe    0x4023a9
  4023d1:	lahf   
  4023d2:	pop    edi
  4023d3:	cmp    bh,BYTE PTR ds:0xd62c64c5
  4023d9:	inc    esi
  4023da:	jle    0x402391
  4023dc:	les    ebx,FWORD PTR [ecx-0xe4b5a2d]
  4023e2:	lea    ebx,[esi-0x6db3bc29]
  4023e8:	dec    edx
  4023e9:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023eb:	je     0x4023ab
  4023ed:	add    DWORD PTR [ebp-0x77ec76dd],0xffffffbb
  4023f4:	inc    eax
  4023f5:	popa   
  4023f6:	jmp    0x40246c
  4023f8:	jno    0x4023a0
  4023fa:	stos   DWORD PTR es:[edi],eax
  4023fb:	push   es
  4023fc:	push   ebx
  4023fd:	scas   eax,DWORD PTR es:[edi]
  4023fe:	push   edx
  4023ff:	ja     0x402385
  402401:	daa    
  402402:	xor    ecx,eax
  402404:	jecxz  0x402413
  402406:	inc    eax
  402407:	sbb    DWORD PTR [edi-0x376c374],ebx
  40240d:	mov    dh,0x43
  40240f:	je     0x4023a9
  402411:	and    ecx,DWORD PTR [ebx-0x6d]
  402414:	fwait
  402415:	(bad)  
  402416:	ror    ch,cl
  402418:	out    0x81,al
  40241a:	xchg   edi,eax
  40241b:	sbb    edx,DWORD PTR [eax]
  40241d:	jb     0x402480
  40241f:	test   al,0x41
  402421:	repnz jmp 0xc7c6:0xfcec2d73
  402429:	outs   dx,BYTE PTR ds:[esi]
  40242a:	pushf  
  40242b:	es or  eax,0x21e6e793
  402431:	repnz mov cl,0xd6
  402434:	mov    ds:0xfb7f5848,eax
  402439:	push   es
  40243a:	fs mov ebx,0xdc54f01c
  402440:	fisub  WORD PTR [eax+0x7d]
  402443:	jne    0x40240b
  402445:	pushf  
  402446:	jns    0x40244e
  402448:	dec    edx
  402449:	push   eax
  40244a:	sbb    eax,0xfeba84a6
  40244f:	pop    ebx
  402450:	sbb    bh,dl
  402452:	out    dx,al
  402453:	xchg   edx,eax
  402454:	pop    ecx
  402455:	push   esi
  402456:	loopne 0x4024be
  402458:	push   eax
  402459:	inc    ebx
  40245a:	aas    
  40245b:	les    eax,FWORD PTR [edi+0x3bc53dfc]
  402461:	retf   0xbf9
  402464:	push   ss
  402465:	fldcw  WORD PTR [edi-0x37]
  402468:	leave  
  402469:	or     BYTE PTR [ecx+edx*4],dh
  40246c:	mov    edi,0xdfe1d121
  402471:	mov    ds:0x1e2cb119,eax
  402476:	or     al,0x78
  402478:	aaa    
  402479:	in     eax,dx
  40247a:	xor    BYTE PTR [ebx-0x76],bl
  40247d:	ds sbb al,0xb
  402480:	and    BYTE PTR [esi-0x73],0x35
  402484:	test   DWORD PTR [edx+eiz*1-0x5e],0x8a73c214
  40248c:	aaa    
  40248d:	popf   
  40248e:	das    
  40248f:	sub    edx,ecx
  402491:	and    eax,0xffffffb1
  402494:	les    ecx,FWORD PTR [edx+0x3b182914]
  40249a:	xchg   BYTE PTR [esi],ch
  40249c:	sbb    DWORD PTR [edx+0x7d],ebp
  40249f:	imul   dh
  4024a1:	xchg   ebp,eax
  4024a2:	repnz or BYTE PTR [eax+0x24],0x89
  4024a7:	outs   dx,DWORD PTR ds:[esi]
  4024a8:	adc    DWORD PTR [edi+0x2b],eax
  4024ab:	retf   0xa5ab
  4024ae:	jge    0x4024aa
  4024b0:	jl     0x402477
  4024b2:	and    BYTE PTR [esi+0x60d31127],al
  4024b8:	dec    edi
  4024b9:	pop    ss
  4024ba:	push   ss
  4024bb:	mov    al,ds:0x49a56a09
  4024c0:	xchg   esi,eax
  4024c1:	repz out dx,al
  4024c3:	mov    ah,0xbe
  4024c5:	push   0xfffffff6
  4024c7:	jge    0x402524
  4024c9:	fisub  WORD PTR [ecx-0x27]
  4024cc:	outs   dx,BYTE PTR ds:[esi]
  4024cd:	loope  0x4024cf
  4024cf:	in     eax,dx
  4024d0:	xchg   edx,eax
  4024d1:	mov    ebp,0x3d3ddf7c
  4024d6:	enter  0x59de,0x40
  4024da:	sbb    bl,al
  4024dc:	mov    ah,0xa7
  4024de:	out    0x36,al
  4024e0:	loope  0x402526
  4024e2:	in     eax,0x8e
  4024e4:	test   al,0x19
  4024e6:	in     eax,dx
  4024e7:	sbb    DWORD PTR ds:0x5aa1ab78,esp
  4024ed:	cmc    
  4024ee:	leave  
  4024ef:	xchg   ecx,eax
  4024f0:	in     al,0x16
  4024f2:	mov    esp,0x59bdd6f9
  4024f7:	iret   
  4024f8:	pop    eax
  4024f9:	(bad)  
  4024fa:	mov    eax,0x7d4adf8
  4024ff:	aaa    
  402500:	(bad)  
  402501:	lea    ecx,[edx+0x4fc91c28]
  402507:	and    esi,edx
  402509:	mov    bl,0xf1
  40250b:	jmp    0x40248e
  40250d:	dec    ebx
  40250e:	xchg   dh,ah
  402510:	(bad)  
  402511:	cmp    DWORD PTR [ebp-0x6e],esp
  402514:	sar    DWORD PTR [eax*1-0x7fc2990b],cl
  40251b:	xor    ch,bh
  40251d:	es push 0xd3472358
  402523:	pop    ebp
  402524:	loope  0x402581
  402526:	xchg   esi,eax
  402527:	or     DWORD PTR [esi],ebp
  402529:	jp     0x402597
  40252b:	mov    bl,0x79
  40252d:	sahf   
  40252e:	add    al,0xff
  402530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402531:	jle    0x40251a
  402533:	int3   
  402534:	or     ebp,eax
  402536:	imul   ebp,ebp,0xffffffa4
  402539:	data16 add ch,BYTE PTR [esi-0x64]
  40253d:	sbb    DWORD PTR ds:0xf5fb372d,edi
  402543:	sub    eax,0x58923e5d
  402548:	mov    ebp,0xc018ff27
  40254d:	mov    edi,0xa84b607e
  402552:	and    eax,0x4bd5769c
  402557:	pop    ss
  402558:	test   ch,bh
  40255a:	and    cl,BYTE PTR [ebx-0xb]
  40255d:	lea    ebx,[edi-0x5d]
  402560:	(bad)  
  402561:	cdq    
  402562:	stc    
  402563:	and    al,0xaf
  402565:	xchg   BYTE PTR [esp+edi*4-0x29],cl
  402569:	les    edi,FWORD PTR [ecx-0x11]
  40256c:	mov    esp,gs
  40256e:	movq   mm3,QWORD PTR [ebp+0xe198897]
  402575:	(bad)  
  402576:	pop    eax
  402577:	xchg   edi,eax
  402578:	sbb    ebp,esi
  40257a:	sbb    BYTE PTR [ebx-0x3493e79f],al
  402580:	dec    ebx
  402581:	xchg   BYTE PTR [esi-0x3eb4a1c5],bl
  402587:	adc    DWORD PTR [ebp+0x65],edx
  40258a:	mov    BYTE PTR [edx-0x7f],ch
  40258d:	ja     0x40257c
  40258f:	sub    BYTE PTR [esi],bh
  402591:	pushf  
  402592:	retf   
  402593:	pop    ss
  402594:	push   es
  402595:	mov    dl,BYTE PTR [ebx-0x49]
  402598:	out    0x7d,eax
  40259a:	stos   BYTE PTR es:[edi],al
  40259b:	(bad)  
  40259c:	ficomp DWORD PTR [edi-0x450edb8e]
  4025a2:	out    dx,al
  4025a3:	rol    DWORD PTR [esi],1
  4025a5:	call   0x248adf4f
  4025aa:	cmp    eax,0xdb7760dc
  4025af:	push   eax
  4025b0:	xor    BYTE PTR [edx+0x7b],dh
  4025b3:	push   DWORD PTR ds:0xf97d6b58
  4025b9:	jbe    0x402599
  4025bb:	aaa    
  4025bc:	or     BYTE PTR [ebp+0x33],dh
  4025bf:	mov    ds:0x2d3e7f6f,eax
  4025c4:	sub    DWORD PTR [ecx-0x5f],0xffffffe1
  4025c8:	xor    eax,0x14a47b62
  4025cd:	mov    ds:0xb4a6a9e2,al
  4025d2:	or     ecx,DWORD PTR [ebx-0x15]
  4025d5:	imul   ebx,DWORD PTR [esi-0x4f],0x7fa52829
  4025dc:	dec    edi
  4025dd:	or     eax,0xeefd1bc7
  4025e2:	pop    edx
  4025e3:	lea    ecx,[esi+eax*4-0x76]
  4025e7:	in     al,dx
  4025e8:	enter  0xa5,0xa
  4025ec:	or     DWORD PTR [ebx+0x4cd1215d],0x48e0fdbb
  4025f6:	or     BYTE PTR [edx+0x1b],0x30
  4025fa:	out    dx,eax
  4025fb:	xchg   esi,eax
  4025fc:	pop    ds
  4025fd:	add    ebx,DWORD PTR [ebx+0x5a]
  402600:	xchg   esp,eax
  402601:	or     DWORD PTR [esi-0x64],ecx
  402604:	cmp    dh,BYTE PTR [ebx]
  402606:	sbb    BYTE PTR [ebp-0x8],0x85
  40260a:	pop    eax
  40260b:	pusha  
  40260c:	in     eax,dx
  40260d:	test   BYTE PTR [ecx+0x7a19991a],bl
  402613:	ror    al,1
  402615:	inc    esi
  402616:	fild   DWORD PTR [edi]
  402618:	or     al,BYTE PTR [eax-0x7c]
  40261b:	test   BYTE PTR [edx],dl
  40261d:	popa   
  40261e:	cmc    
  40261f:	mov    ds:0x42e27166,eax
  402624:	es retf 
  402626:	sbb    edi,DWORD PTR [eax-0x43]
  402629:	inc    ebx
  40262a:	add    DWORD PTR [edx+0x244aaa00],ebp
  402630:	dec    edx
  402631:	xor    DWORD PTR [ecx+0x134cf6f9],ebx
  402637:	mov    bl,0xc6
  402639:	retf   
  40263a:	sbb    ebx,ecx
  40263c:	jg     0x402654
  40263e:	data16 add ah,dh
  402641:	pop    edx
  402642:	or     ch,ah
  402644:	jmp    0x7c81:0x569c80c0
  40264b:	sbb    DWORD PTR [edx],0xb880c90b
  402651:	fld    DWORD PTR [esi]
  402653:	jg     0x402681
  402655:	inc    esi
  402656:	aaa    
  402657:	retf   0xedc1
  40265a:	div    DWORD PTR [eax]
  40265c:	adc    eax,0xd065b97b
  402661:	test   al,0xd8
  402663:	dec    edx
  402664:	jae    0x402695
  402666:	int    0xb8
  402668:	add    DWORD PTR [ebx],0xffffffe8
  40266b:	add    al,0x86
  40266d:	outs   dx,DWORD PTR ds:[esi]
  40266e:	cmp    ecx,DWORD PTR [ecx]
  402670:	jge    0x40264e
  402672:	sub    esp,ecx
  402674:	aaa    
  402675:	dec    ebp
  402676:	loopne 0x4026b5
  402678:	ins    BYTE PTR es:[edi],dx
  402679:	in     al,dx
  40267a:	sbb    BYTE PTR [esi+0x66b5ff51],0xec
  402681:	pmaddwd mm6,QWORD PTR [edi+0x7c]
  402685:	scas   eax,DWORD PTR es:[edi]
  402686:	mov    eax,0xd4b8e469
  40268b:	cmp    eax,0xe9b705da
  402690:	test   al,0x1d
  402692:	(bad)  
  402693:	daa    
  402694:	dec    esi
  402695:	jle    0x402688
  402697:	mov    ss,ebx
  402699:	jnp    0x402707
  40269b:	sbb    eax,0x4b103138
  4026a0:	cmp    eax,0x8213693
  4026a5:	or     cl,BYTE PTR [edi-0x415621f9]
  4026ab:	jmp    0x402675
  4026ad:	adc    al,0xab
  4026af:	sti    
  4026b0:	loopne 0x4026a3
  4026b2:	pop    edx
  4026b3:	sbb    DWORD PTR ds:0xe67e0379,edi
  4026b9:	inc    ebx
  4026ba:	push   esi
  4026bb:	pop    esp
  4026bc:	fld    TBYTE PTR [eax+0x15]
  4026bf:	push   es
  4026c0:	mov    BYTE PTR [eax-0x46],ah
  4026c3:	adc    DWORD PTR [ecx+0x41961848],ecx
  4026c9:	out    dx,al
  4026ca:	(bad)  
  4026cb:	scas   eax,DWORD PTR es:[edi]
  4026cc:	sub    BYTE PTR [ebp-0x2],dh
  4026cf:	jle    0x40273f
  4026d1:	int    0x25
  4026d3:	inc    edx
  4026d4:	sar    DWORD PTR [esi],1
  4026d6:	test   eax,0x966492bc
  4026db:	or     edi,DWORD PTR [ecx+0x1b]
  4026de:	inc    edx
  4026df:	jmp    0x2ce6:0xed64888
  4026e6:	aad    0x14
  4026e8:	pop    ebx
  4026e9:	inc    eax
  4026ea:	inc    ebp
  4026eb:	cmp    eax,0x678d7380
  4026f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026f1:	pop    ebp
  4026f2:	dec    eax
  4026f3:	xchg   DWORD PTR [edi],ebx
  4026f5:	push   0x3d
  4026f7:	inc    edx
  4026f8:	dec    edi
  4026f9:	mov    edx,edx
  4026fb:	rol    eax,cl
  4026fd:	out    dx,eax
  4026fe:	jno    0x402771
  402700:	jge    0x402693
  402702:	xchg   ebx,eax
  402703:	pop    ss
  402704:	push   ds
  402705:	int    0x8a
  402707:	sub    BYTE PTR [edi-0x57],0xad
  40270b:	aad    0xdb
  40270d:	jae    0x4026c4
  40270f:	inc    ebp
  402710:	dec    ebp
  402711:	cmp    eax,edi
  402713:	and    eax,0xbe28007a
  402718:	pop    ecx
  402719:	cld    
  40271a:	stos   DWORD PTR es:[edi],eax
  40271b:	or     DWORD PTR [esi+0x160a3fe7],ebp
  402721:	xlat   BYTE PTR ds:[ebx]
  402722:	test   DWORD PTR [esi],eax
  402724:	rol    DWORD PTR [ebx+0x72e9e689],0x45
  40272b:	dec    esi
  40272c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40272d:	sbb    eax,DWORD PTR [edi-0x50]
  402730:	jns    0x40273c
  402732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402733:	pop    ss
  402734:	xchg   esp,eax
  402735:	inc    eax
  402736:	shl    BYTE PTR [eax+0xea96553],cl
  40273c:	rol    BYTE PTR [ecx+0x7bf8dff5],cl
  402742:	jno    0x402754
  402744:	dec    esi
  402745:	jne    0x4027a9
  402747:	or     DWORD PTR [eax+0x23],eax
  40274a:	(bad)  
  40274b:	fs js  0x4026fa
  40274e:	add    esp,ebp
  402750:	mov    ah,0x44
  402752:	call   0x33267028
  402757:	int3   
  402758:	in     eax,dx
  402759:	xor    al,0x1b
  40275b:	je     0x402770
  40275d:	loop   0x402718
  40275f:	mov    ebx,0xba9567e1
  402764:	jb     0x4027a3
  402766:	add    DWORD PTR [eax+0x25],0xffffffe4
  40276a:	call   0x693ca9cf
  40276f:	push   cs
  402770:	cmc    
  402771:	inc    eax
  402772:	pusha  
  402773:	mov    al,0x4a
  402775:	call   0x47a2:0x6ba91799
  40277c:	pushf  
  40277d:	pop    ds
  40277e:	iret   
  40277f:	pop    edi
  402780:	in     eax,0x1
  402782:	pop    esi
  402783:	pop    esp
  402784:	lods   al,BYTE PTR ds:[esi]
  402785:	outs   dx,BYTE PTR ds:[esi]
  402786:	int    0xe2
  402788:	inc    edx
  402789:	xor    al,0x3d
  40278b:	pop    ebx
  40278c:	ror    edi,cl
  40278e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40278f:	push   ebx
  402790:	cmc    
  402791:	sbb    edi,edi
  402793:	dec    ecx
  402794:	sbb    eax,0xb45bc9de
  402799:	lock and al,al
  40279c:	mov    al,ds:0x18ad351a
  4027a1:	dec    eax
  4027a2:	xchg   edi,eax
  4027a3:	ja     0x402768
  4027a5:	fld    st(2)
  4027a7:	pop    esi
  4027a8:	add    BYTE PTR [esi],dh
  4027aa:	rdmsr  
  4027ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027ad:	imul   esp,DWORD PTR ds:0x2c11a7b,0x738a83fa
  4027b7:	ror    BYTE PTR [ebp-0x64],0x68
  4027bb:	(bad)  [esi+0x1b]
  4027be:	scas   al,BYTE PTR es:[edi]
  4027bf:	out    0x1d,eax
  4027c1:	out    dx,eax
  4027c2:	jge    0x402833
  4027c4:	mov    ecx,0x3c923b68
  4027c9:	jp     0x40279d
  4027cb:	aam    0xec
  4027cd:	mov    ds:0x341569f1,al
  4027d2:	cmp    ecx,DWORD PTR [esi-0x3f5e79c7]
  4027d8:	xchg   esp,eax
  4027d9:	stos   DWORD PTR es:[edi],eax
  4027da:	rol    BYTE PTR fs:[edx-0x57],cl
  4027de:	mov    bh,BYTE PTR [ebp-0x76b5a7e8]
  4027e4:	ror    cl,1
  4027e6:	outs   dx,BYTE PTR ds:[esi]
  4027e7:	out    dx,eax
  4027e8:	jp     0x402854
  4027ea:	mov    esp,0xa76e8a87
  4027ef:	cwde   
  4027f0:	imul   esp,DWORD PTR [edx+0x6b],0x936b0690
  4027f7:	aam    0x37
  4027f9:	push   ss
  4027fa:	out    dx,al
  4027fb:	test   al,0xdb
  4027fd:	adc    BYTE PTR [ecx+0x6a529655],cl
  402803:	repnz mov al,ds:0x6e8273ce
  402809:	jecxz  0x4027a4
  40280b:	sbb    DWORD PTR [edi-0x74ea16fb],esi
  402811:	mov    esp,DWORD PTR [edx]
  402813:	jle    0x4027d7
  402815:	popa   
  402816:	imul   ebp,DWORD PTR [ecx+0x4c7b9698],0x9801033b
  402820:	retf   
  402821:	jbe    0x40282e
  402823:	cmp    eax,0x9250ea27
  402828:	fdiv   DWORD PTR ds:[eax]
  40282b:	jle    0x402854
  40282d:	dec    ebp
  40282e:	xchg   BYTE PTR [edi],bl
  402830:	clc    
  402831:	inc    esp
  402832:	arpl   WORD PTR [ebp+0x69],sp
  402835:	mov    ?,WORD PTR [edx-0x395d77dd]
  40283b:	retf   
  40283c:	push   cs
  40283d:	push   0xffffffd6
  40283f:	dec    edx
  402840:	jmp    0x4027cf
  402842:	or     DWORD PTR [eax],edi
  402844:	and    eax,0x52586750
  402849:	mov    ecx,DWORD PTR [edi]
  40284b:	adc    DWORD PTR [edi],ebx
  40284d:	mov    al,0x1b
  40284f:	mov    ds:0xfa2f40f,eax
  402854:	aaa    
  402855:	int3   
  402856:	and    ebx,edi
  402858:	je     0x4027e5
  40285a:	leave  
  40285b:	aad    0x84
  40285d:	retf   0x6af2
  402860:	dec    esi
  402861:	in     eax,0xa2
  402863:	xor    dh,BYTE PTR [edi]
  402865:	xchg   edx,eax
  402866:	mov    edx,0xc2c910
  40286b:	add    cl,BYTE PTR [eax+0x62]
  40286e:	jg     0x4028b1
  402870:	mov    bl,0x0
  402872:	int    0x35
  402874:	dec    ecx
  402875:	adc    DWORD PTR [eax-0x3c],ecx
  402878:	cmp    bl,BYTE PTR [eax]
  40287a:	sbb    al,0x30
  40287c:	(bad)  
  40287e:	in     eax,0x7e
  402880:	imul   eax,DWORD PTR [ecx-0x3d],0xffffffc6
  402884:	pop    ds
  402885:	fcmovbe st,st(6)
  402887:	xchg   ecx,eax
  402888:	xchg   esp,eax
  402889:	mov    edi,0xee49d36e
  40288e:	iret   
  40288f:	adc    eax,edi
  402891:	out    0x77,al
  402893:	ficom  DWORD PTR [eax+0x2a04f481]
  402899:	rcr    BYTE PTR [edi-0x713e3f8b],cl
  40289f:	sbb    al,0xe7
  4028a1:	push   edi
  4028a2:	mov    ecx,0x9b81dc23
  4028a7:	imul   ecx,edx,0x83c95305
  4028ad:	mov    ?,edx
  4028af:	ss popf 
  4028b1:	mov    eax,ds:0xc0481d81
  4028b6:	sub    edx,DWORD PTR [edi-0x78]
  4028b9:	adc    eax,0x18a5c386
  4028be:	aas    
  4028bf:	lods   eax,DWORD PTR ds:[esi]
  4028c0:	mov    ch,BYTE PTR [esi]
  4028c2:	ins    DWORD PTR es:[edi],dx
  4028c3:	adc    bl,BYTE PTR [esi]
  4028c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028c6:	add    ah,BYTE PTR [ebp+0x6e]
  4028c9:	loope  0x402903
  4028cb:	xor    eax,0xeb7f73d4
  4028d0:	jno    0x402903
  4028d2:	out    dx,al
  4028d3:	(bad)  
  4028d4:	mov    eax,ds:0xa8bc10ec
  4028d9:	jae    0x402895
  4028db:	mov    ch,0xa3
  4028dd:	jmp    0x884e:0x5d040398
  4028e4:	push   ds
  4028e5:	enter  0x970,0xf7
  4028e9:	and    DWORD PTR [ebx],ebp
  4028eb:	daa    
  4028ec:	scas   al,BYTE PTR es:[edi]
  4028ed:	popf   
  4028ee:	pop    eax
  4028ef:	mov    esp,0xecfd7ad9
  4028f4:	aad    0x85
  4028f6:	cmp    esi,eax
  4028f8:	xor    dh,0x46
  4028fb:	retf   0xb76e
  4028fe:	sbb    esi,DWORD PTR [edi-0x33]
  402901:	in     eax,dx
  402902:	shl    BYTE PTR [esp+edi*1],1
  402905:	rcr    DWORD PTR [esi-0x4ce903f5],0xe4
  40290c:	xchg   DWORD PTR [esi],ebx
  40290e:	sub    bh,BYTE PTR [edi]
  402910:	mov    esi,0x18cca8d
  402915:	lds    edx,FWORD PTR [ebx-0x16]
  402918:	in     eax,0xe7
  40291a:	out    0x1f,eax
  40291c:	repnz or ebp,edi
  40291f:	dec    ebx
  402920:	cmp    al,BYTE PTR [edi+0x1cc837d1]
  402926:	xor    BYTE PTR [esi],dl
  402928:	fmul   DWORD PTR [ecx]
  40292a:	or     bh,BYTE PTR [eax+0x7a43480c]
  402930:	in     al,0x64
  402932:	and    ah,al
  402934:	pop    ecx
  402935:	xchg   BYTE PTR [edx-0x104535a1],bh
  40293b:	(bad)  
  40293c:	xor    ecx,DWORD PTR [ecx]
  40293e:	or     ebx,DWORD PTR [edi+0x4b]
  402941:	call   0xe35b:0xbce228b7
  402948:	sbb    BYTE PTR ds:0x11f9b71b,0xf7
  40294f:	out    0x3c,eax
  402951:	mov    dh,0x97
  402953:	pop    ds
  402954:	(bad)  
  402955:	xlat   BYTE PTR ds:[ebx]
  402956:	aam    0x9b
  402958:	lea    ebp,[esi]
  40295a:	sbb    eax,0x2eea4b67
  40295f:	sbb    BYTE PTR [edi],bh
  402961:	lahf   
  402962:	jo     0x4029cb
  402964:	stos   BYTE PTR es:[edi],al
  402965:	dec    esp
  402966:	and    ch,BYTE PTR [edi-0x6d43250b]
  40296c:	mul    ebx
  40296e:	sub    bl,ah
  402970:	fsubr  st(6),st
  402972:	inc    edi
  402973:	jg     0x40294c
  402975:	adc    DWORD PTR [edx+0x55e27876],eax
  40297b:	into   
  40297c:	stc    
  40297d:	mov    bl,0x17
  40297f:	push   ds
  402980:	(bad)  
  402981:	in     al,dx
  402982:	jb     0x402999
  402984:	mov    ds:0x1aa5d282,eax
  402989:	inc    esi
  40298a:	or     edx,DWORD PTR [ebx-0x5e08ae60]
  402990:	cld    
  402991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402992:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402993:	mov    ?,WORD PTR [edx+0x9cecd49]
  402999:	or     ebp,DWORD PTR [esi]
  40299b:	call   0x20faf4c8
  4029a0:	cmp    ah,cl
  4029a2:	mov    DWORD PTR [eax],eax
  4029a4:	add    al,0xfe
  4029a6:	in     eax,dx
  4029a7:	clc    
  4029a8:	and    al,BYTE PTR [esi-0x1ffdda7e]
  4029ae:	xor    ebx,esp
  4029b0:	cmp    ah,BYTE PTR fs:[ebx]
  4029b3:	dec    edx
  4029b4:	fld    DWORD PTR [ebp+0x5ad77658]
  4029ba:	xchg   edi,eax
  4029bb:	pop    ss
  4029bc:	cmp    eax,0xba1489ed
  4029c1:	mov    eax,ds:0x7c07011e
  4029c6:	mov    ebx,0x7555d10f
  4029cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029cc:	aad    0x79
  4029ce:	mov    ds:0x41391b0a,eax
  4029d3:	mov    al,0x7f
  4029d5:	xor    bh,BYTE PTR [ebx+0x29]
  4029d8:	pop    ebp
  4029d9:	mov    ecx,0xff725e4e
  4029de:	int    0x8e
  4029e0:	add    cl,BYTE PTR [ecx-0x6cb5e752]
  4029e6:	lds    edi,FWORD PTR [ebx+0x21]
  4029e9:	or     ah,BYTE PTR ds:0x6ec1eacf
  4029ef:	repz aas 
  4029f1:	aaa    
  4029f2:	loope  0x4029cf
  4029f4:	or     DWORD PTR [eax-0x30482e64],esi
  4029fa:	(bad)  
  4029fb:	xor    bl,BYTE PTR [ecx-0x58029a18]
  402a01:	rcr    edx,1
  402a03:	xchg   esi,eax
  402a04:	mov    ss,ebp
  402a06:	loopne 0x402a35
  402a08:	lods   eax,DWORD PTR ds:[esi]
  402a09:	pop    eax
  402a0a:	(bad)  
  402a0b:	sbb    cl,ah
  402a0d:	scas   eax,DWORD PTR es:[edi]
  402a0e:	inc    eax
  402a0f:	in     al,dx
  402a10:	or     DWORD PTR [edi],ecx
  402a12:	xchg   esp,eax
  402a13:	dec    edi
  402a14:	test   bh,bl
  402a16:	idiv   esp
  402a18:	xchg   ebp,eax
  402a19:	repz jle 0x4029b3
  402a1c:	scas   al,BYTE PTR es:[edi]
  402a1d:	(bad)  
  402a1e:	jmp    0x3369:0xcb199c5a
  402a25:	out    dx,eax
  402a26:	leave  
  402a27:	jns    0x402a3e
  402a29:	xchg   edx,eax
  402a2a:	jae    0x402aa8
  402a2c:	(bad)  
  402a2d:	test   al,0x22
  402a2f:	sub    al,0x34
  402a31:	and    DWORD PTR [ebx],0xc2ee8abf
  402a37:	ins    DWORD PTR es:[edi],dx
  402a38:	loope  0x4029de
  402a3a:	mov    WORD PTR [edi+0x205b4a1e],ss
  402a40:	push   eax
  402a41:	je     0x402a85
  402a43:	clc    
  402a44:	and    eax,0x2e58e3e6
  402a49:	(bad)  
  402a4a:	xchg   esi,eax
  402a4b:	cmp    al,0x5a
  402a4d:	pop    edx
  402a4e:	sub    al,cl
  402a50:	pusha  
  402a51:	adc    al,ch
  402a53:	pop    eax
  402a54:	jl     0x402a59
  402a56:	push   ss
  402a57:	add    bl,BYTE PTR [edi-0x57133b39]
  402a5d:	pop    ebp
  402a5e:	or     eax,0x14fc3043
  402a63:	mov    edi,0x21f56045
  402a68:	lods   al,BYTE PTR ds:[esi]
  402a69:	lods   eax,DWORD PTR ds:[esi]
  402a6a:	fisubr WORD PTR [eax+0x40d9d897]
  402a70:	push   cs
  402a71:	dec    ebp
  402a72:	mov    BYTE PTR [esi+0x36],ah
  402a75:	imul   edi,DWORD PTR [edi-0x68],0xaee7a6ef
  402a7c:	xchg   ecx,eax
  402a7d:	call   0xeb20:0xb33f5b43
  402a84:	mov    ebp,0xe0c86cb7
  402a89:	retf   0xd70e
  402a8c:	imul   esp,DWORD PTR [ebx+ebx*2+0x5abd0d8c],0xffffffee
  402a94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a95:	in     eax,0x81
  402a97:	dec    ebp
  402a98:	adc    eax,edx
  402a9a:	mov    eax,0x2218e758
  402a9f:	dec    edx
  402aa0:	in     al,0x8a
  402aa2:	std    
  402aa3:	inc    esi
  402aa4:	lods   eax,DWORD PTR ds:[esi]
  402aa5:	adc    BYTE PTR [edx+0x786d9529],bh
  402aab:	fnsetpm(287 only) 
  402aad:	mov    edi,eax
  402aaf:	add    edi,ebx
  402ab1:	mov    ebx,0x483a74d1
  402ab6:	dec    edx
  402ab7:	shl    BYTE PTR [ecx+0x5a],1
  402aba:	les    edi,FWORD PTR [esi-0x30]
  402abd:	aas    
  402abe:	xchg   ebp,eax
  402abf:	jo     0x402b22
  402ac1:	adc    dh,BYTE PTR [esi]
  402ac3:	sbb    al,0xf6
  402ac5:	fisttp WORD PTR [ecx-0x637d6157]
  402acb:	stos   DWORD PTR es:[edi],eax
  402acc:	fs cwde 
  402ace:	push   esp
  402acf:	or     BYTE PTR [edi+0x1f],ch
  402ad2:	add    DWORD PTR [eax+0x1b5c173e],esi
  402ad8:	jmp    0x402b30
  402ada:	jl     0x402b1c
  402adc:	pop    ebp
  402add:	aaa    
  402ade:	pushf  
  402adf:	sahf   
  402ae0:	mov    ch,0x2d
  402ae2:	fcmovnb st,st(5)
  402ae4:	hlt    
  402ae5:	rcr    DWORD PTR [ebp+0x53bdc8ad],0xe9
  402aec:	imul   esi,DWORD PTR [ecx+0x7c6a673b],0x7d
  402af3:	xor    ah,bh
  402af5:	push   esi
  402af6:	ins    DWORD PTR es:[edi],dx
  402af7:	leave  
  402af8:	cld    
  402af9:	add    BYTE PTR ds:0x61722dfa,ch
  402aff:	fwait
  402b00:	mov    ebx,0xabf0c9e3
  402b05:	jno    0x402a94
  402b07:	lods   al,BYTE PTR ds:[esi]
  402b08:	push   ebx
  402b09:	pop    ecx
  402b0a:	fsub   QWORD PTR [eax+0x3e]
  402b0d:	sub    eax,0xed979905
  402b12:	xchg   edx,eax
  402b13:	in     eax,dx
  402b14:	nop
  402b15:	xor    edx,DWORD PTR [eax-0x2a2c6778]
  402b1b:	push   0xb3114383
  402b20:	push   eax
  402b21:	cmp    al,0x62
  402b23:	mov    gs,WORD PTR [edi]
  402b25:	test   edx,ebx
  402b27:	call   0x547e:0xeea7a462
  402b2e:	xchg   ebp,eax
  402b2f:	inc    esi
  402b30:	sbb    dh,0x66
  402b33:	or     eax,0x6a17c99f
  402b38:	mov    cl,0xd4
  402b3a:	rcr    DWORD PTR [ebx+edi*4],1
  402b3d:	ins    DWORD PTR es:[edi],dx
  402b3e:	xor    BYTE PTR [edi],0xab
  402b41:	test   eax,0xa6ccd2d4
  402b46:	mov    DWORD PTR [edi],edi
  402b48:	ret    0xa96b
  402b4b:	mov    bh,0xc1
  402b4d:	mov    edi,0x763609ef
  402b52:	sti    
  402b53:	or     al,0x8a
  402b55:	and    edx,ebp
  402b57:	icebp  
  402b58:	out    dx,al
  402b59:	push   edi
  402b5a:	sub    esi,ebp
  402b5c:	mov    dl,0x8
  402b5e:	jl     0x402af0
  402b60:	(bad)  
  402b61:	cmp    DWORD PTR [esi+edx*4-0x4d69521e],ecx
  402b68:	mov    eax,ds:0xec3a3f10
  402b6d:	mov    cs,WORD PTR [ebp-0x12]
  402b70:	rol    DWORD PTR ds:[edi-0x2befddd],cl
  402b77:	into   
  402b78:	rcr    bh,1
  402b7a:	dec    edx
  402b7b:	sub    DWORD PTR ds:0x46be41bc,0x25e1d71e
  402b85:	adc    edx,DWORD PTR [esp+edi*4+0x21]
  402b89:	sub    al,0x44
  402b8b:	fbld   TBYTE PTR [ebp+0xc76a784]
  402b91:	jne    0x402b47
  402b93:	gs cmps BYTE PTR fs:[esi],BYTE PTR es:[edi]
  402b96:	fst    DWORD PTR [ecx-0x67]
  402b99:	inc    edx
  402b9a:	addr16 jmp 0x1b8b519a
  402ba0:	xor    BYTE PTR [edx+0x2d1d1421],dl
  402ba6:	mov    ah,0x62
  402ba8:	cmp    eax,0xf1d6ed04
  402bad:	jle    0x402b4b
  402baf:	mov    esi,0x43019b21
  402bb4:	dec    ecx
  402bb5:	idiv   DWORD PTR [ecx]
  402bb7:	pop    edi
  402bb8:	sub    ebp,DWORD PTR [eax+0x2d]
  402bbb:	dec    edx
  402bbc:	pop    esi
  402bbd:	add    DWORD PTR [edi+0x26f71b23],esi
  402bc3:	jnp    0x402c2b
  402bc5:	(bad)  
  402bc6:	out    dx,eax
  402bc7:	repz jbe 0x402b8c
  402bca:	sbb    DWORD PTR [bp+si],esp
  402bcd:	arpl   WORD PTR [eax+eax*1],si
  402bd0:	push   0x7f
  402bd2:	addr16 gs test al,0x1
  402bd6:	or     eax,0xf46cf096
  402bdb:	inc    edi
  402bdc:	pop    esi
  402bdd:	pop    esp
  402bde:	mov    ecx,0xca3d3698
  402be3:	jbe    0x402c54
  402be5:	mov    ch,0x22
  402be7:	mov    dl,0xe4
  402be9:	xor    edx,ebx
  402beb:	div    ecx
  402bed:	jmp    0x1585:0x708d9e1
  402bf4:	pop    ebx
  402bf5:	lahf   
  402bf6:	dec    esp
  402bf7:	ins    DWORD PTR es:[edi],dx
  402bf8:	enter  0x5ba0,0xc2
  402bfc:	fisttp WORD PTR [ebx]
  402bfe:	stos   DWORD PTR es:[edi],eax
  402bff:	add    esp,DWORD PTR [ebx-0x70b74cbb]
  402c05:	leave  
  402c06:	ins    DWORD PTR es:[edi],dx
  402c07:	(bad)
  402c0a:	xchg   edx,eax
  402c0b:	add    bl,dl
  402c0d:	push   ds
  402c0e:	mov    dl,0x29
  402c10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c11:	int    0xff
  402c13:	fnsetpm(287 only) 
  402c15:	test   eax,0x165b4599
  402c1a:	shl    BYTE PTR [edx-0x6d0767ba],cl
  402c20:	mov    bh,0x14
  402c22:	push   0x2db783bf
  402c27:	cmp    BYTE PTR [edi-0x2d620eca],dh
  402c2d:	or     DWORD PTR [eax],ebp
  402c2f:	out    dx,al
  402c30:	mov    ds:0xe83b7a15,al
  402c35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c36:	dec    ebx
  402c37:	fwait
  402c38:	inc    edi
  402c39:	inc    esp
  402c3a:	push   es
  402c3b:	int    0x9e
  402c3d:	gs cmp dl,0x38
  402c41:	ret    0x60c6
  402c44:	pop    ebp
  402c45:	mov    dh,BYTE PTR [esi+0x4a902d38]
  402c4b:	mov    edi,edi
  402c4d:	cld    
  402c4e:	adc    esi,DWORD PTR [edx]
  402c50:	pop    ebp
  402c51:	sahf   
  402c52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c53:	call   0x1ed8e61d
  402c58:	mov    al,ds:0x69e9da91
  402c5d:	popf   
  402c5e:	icebp  
  402c5f:	sbb    edx,ebx
  402c61:	dec    ecx
  402c62:	enter  0x5248,0xd8
  402c66:	ins    DWORD PTR es:[edi],dx
  402c67:	les    ecx,FWORD PTR [ecx]
  402c69:	sar    DWORD PTR [eax+0x503ad6a7],0x7e
  402c70:	stc    
  402c71:	popf   
  402c72:	pop    ecx
  402c73:	pop    esi
  402c74:	mov    al,ds:0x2dfa3ef8
  402c79:	jo     0x402c01
  402c7b:	mov    eax,0xcac7f0a2
  402c80:	add    eax,0x71dfc93b
  402c85:	or     DWORD PTR [eax+0x4a],ebp
  402c88:	fdivr  st,st(7)
  402c8a:	inc    eax
  402c8b:	xlat   BYTE PTR ds:[ebx]
  402c8c:	shr    DWORD PTR [edx+0x5e],0x5
  402c90:	xor    esp,DWORD PTR [esi-0x5f]
  402c93:	xchg   BYTE PTR [ebx+0xf0de79f],al
  402c99:	out    0xd1,eax
  402c9b:	ror    BYTE PTR [ecx+0xb],1
  402c9e:	mov    cl,BYTE PTR [eax-0x6d]
  402ca1:	pusha  
  402ca2:	cmp    BYTE PTR es:[edx-0x7c],0x77
  402ca7:	mov    ds:0x8c857a8a,al
  402cac:	mov    ecx,DWORD PTR [ebp-0x21]
  402caf:	jbe    0x402cca
  402cb1:	pusha  
  402cb2:	les    ebp,FWORD PTR [ebp+0x34]
  402cb5:	psllq  mm7,QWORD PTR [edx]
  402cb8:	imul   ebx,DWORD PTR [esp+ebp*4-0x4c],0xffffffb9
  402cbd:	lea    ebx,[ecx-0x3f]
  402cc0:	push   ds
  402cc1:	lock push ss
  402cc3:	(bad)  
  402cc4:	loope  0x402d42
  402cc6:	sahf   
  402cc7:	out    dx,al
  402cc8:	test   al,0x71
  402cca:	in     eax,0xf8
  402ccc:	ja     0x402d2f
  402cce:	mov    ebx,0xf4ffe90e
  402cd3:	xor    ecx,0x3c
  402cd6:	xchg   edx,eax
  402cd7:	pop    edx
  402cd8:	icebp  
  402cd9:	add    esp,DWORD PTR [ebp-0x7043dd1e]
  402cdf:	(bad)  
  402ce1:	sbb    eax,0x7fffb6fa
  402ce6:	cld    
  402ce7:	in     eax,dx
  402ce8:	jl     0x402d1e
  402cea:	cmp    esi,edi
  402cec:	(bad)  
  402ced:	test   al,0xf2
  402cef:	inc    esp
  402cf0:	cdq    
  402cf1:	push   esi
  402cf2:	in     eax,dx
  402cf3:	xchg   edx,eax
  402cf4:	jmp    0x3ea0:0xe12e083c
  402cfb:	jmp    0x402c96
  402cfd:	mov    ss,WORD PTR [ecx+eiz*1]
  402d00:	pushf  
  402d01:	(bad)  
  402d02:	and    BYTE PTR [ecx-0x4d],bh
  402d05:	inc    edi
  402d06:	js     0x402d64
  402d08:	xor    ebp,0xffffffd0
  402d0b:	lea    edx,[ebx-0x63e39e5e]
  402d11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d12:	mov    dh,0xb5
  402d14:	push   ss
  402d15:	xor    BYTE PTR cs:[eax+0x5f],bl
  402d19:	int3   
  402d1a:	mov    edi,0xe28411d5
  402d1f:	fst    QWORD PTR [edx+eiz*8-0x4d88e6de]
  402d26:	lods   al,BYTE PTR ds:[esi]
  402d27:	dec    edx
  402d28:	stc    
  402d29:	and    DWORD PTR [ebp-0x40],esp
  402d2c:	mov    bl,0xa4
  402d2e:	rol    BYTE PTR [eax-0x57297ae0],0x6a
  402d35:	repnz (bad) 
  402d37:	icebp  
  402d38:	jmp    0xeb44b048
  402d3d:	xlat   BYTE PTR ds:[ebx]
  402d3e:	sar    bh,cl
  402d40:	in     al,0x55
  402d42:	test   eax,0x55bec69b
  402d47:	es cwde 
  402d49:	adc    ecx,ebx
  402d4b:	test   eax,0xe83ca6b1
  402d50:	sbb    al,0xf8
  402d52:	fdivr  st,st(7)
  402d54:	mov    bh,0xa1
  402d56:	jno    0x402d2d
  402d58:	ficom  WORD PTR [ebp-0x1b6652b]
  402d5e:	push   ecx
  402d5f:	sahf   
  402d60:	push   ecx
  402d61:	fistp  DWORD PTR [ebx]
  402d63:	mov    esi,0x507447ae
  402d68:	retf   0x8a47
  402d6b:	mov    ah,0x33
  402d6d:	jb     0x402de3
  402d6f:	(bad)  
  402d70:	jnp    0x402d0e
  402d72:	mov    ds:0xa83d0ebe,al
  402d77:	call   0x8813:0x35fa2029
  402d7e:	int3   
  402d7f:	adc    DWORD PTR [ebx-0x35],esp
  402d82:	imul   edx,DWORD PTR [esi-0x11],0x5b
  402d86:	xor    dh,cl
  402d88:	(bad)  
  402d89:	jecxz  0x402dd5
  402d8b:	push   ebx
  402d8c:	push   ebx
  402d8d:	(bad)
  402d90:	mov    esp,0x6bc429ba
  402d95:	push   DWORD PTR [ebx]
  402d97:	repnz xchg edx,eax
  402d99:	jmp    0x82ef957
  402d9e:	sbb    bh,BYTE PTR [ebx-0x566bead4]
  402da4:	xor    eax,0x270217c2
  402da9:	enter  0xfb0d,0x55
  402dad:	test   DWORD PTR [esi+0x5d],0x4a926e46
  402db4:	add    eax,ebp
  402db6:	inc    edx
  402db7:	jns    0x402d51
  402db9:	inc    edi
  402dba:	cpuid  
  402dbc:	mov    ds:0x32b433e8,eax
  402dc2:	pop    ds
  402dc3:	(bad)  
  402dc4:	(bad)  
  402dc5:	push   ecx
  402dc6:	test   al,0x36
  402dc8:	mov    WORD PTR [eax-0x19],gs
  402dcb:	dec    edx
  402dcc:	jg     0x402da5
  402dce:	hlt    
  402dcf:	push   ds
  402dd0:	jne    0x402de1
  402dd2:	xor    al,0x8b
  402dd4:	into   
  402dd5:	scas   al,BYTE PTR es:[edi]
  402dd6:	cmp    esp,DWORD PTR ds:0x9147775d
  402ddc:	repz push es
  402dde:	rcr    ah,cl
  402de0:	mov    esp,0x263a48d0
  402de5:	dec    ebx
  402de6:	push   es
  402de7:	jp     0x402da9
  402de9:	xchg   DWORD PTR [ecx],esp
  402deb:	dec    esp
  402dec:	mov    ah,BYTE PTR [esp+edx*4]
  402def:	lock xchg edi,eax
  402df1:	or     bh,BYTE PTR [ebx+0x77]
  402df4:	retf   0x8167
  402df7:	jo     0x402dbd
  402df9:	push   esp
  402dfa:	mov    bl,0x1b
  402dfc:	iret   
  402dfd:	hlt    
  402dfe:	ficom  WORD PTR [esp+esi*1-0xc]
  402e02:	out    0x59,eax
  402e04:	push   edx
  402e05:	xor    cl,dh
  402e07:	in     eax,dx
  402e08:	shl    ebx,0x29
  402e0b:	enter  0xb19c,0x88
  402e0f:	push   edx
  402e10:	lea    eax,[ebp-0x6d284308]
  402e16:	cs retf 
  402e18:	gs aam 0x4f
  402e1b:	sti    
  402e1c:	dec    edi
  402e1d:	(bad)  
  402e1f:	mov    ds:0xa286545f,al
  402e24:	rol    DWORD PTR [eax-0x74],1
  402e27:	add    eax,0x28102ad7
  402e2c:	lods   al,BYTE PTR ds:[esi]
  402e2d:	scas   eax,DWORD PTR es:[edi]
  402e2e:	jge    0x402e2b
  402e30:	mov    eax,ecx
  402e32:	mov    ebp,0x3911e4ce
  402e37:	sahf   
  402e38:	fcomp  QWORD PTR [edi+0xb]
  402e3b:	sub    bh,dh
  402e3d:	sub    BYTE PTR [eax+0x2ed8b93c],dh
  402e43:	stos   DWORD PTR es:[edi],eax
  402e44:	retf   
  402e45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e46:	jo     0x402ea1
  402e48:	mov    ebp,DWORD PTR [ebx+0x42]
  402e4b:	lds    esp,FWORD PTR [edx-0x4e23067d]
  402e51:	xchg   ch,ah
  402e53:	mov    ecx,0x3d6f03e6
  402e58:	sub    eax,0xd66442cd
  402e5d:	mov    ss,WORD PTR [esi+0x65]
  402e60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e61:	xor    DWORD PTR cs:[ebx+0x5b806957],esp
  402e68:	pop    edx
  402e69:	adc    BYTE PTR [edi],ch
  402e6b:	lock mov edx,0x3a4f3f4
  402e71:	add    ecx,DWORD PTR [esi+0x50d6e57e]
  402e77:	xchg   ebp,eax
  402e78:	(bad)  
  402e79:	sbb    esi,ebp
  402e7b:	or     BYTE PTR [ecx-0x59],bl
  402e7e:	or     eax,0xd4c1cfe8
  402e83:	xor    ebp,DWORD PTR [ebp+ecx*8+0x15d43e49]
  402e8a:	in     al,0xca
  402e8c:	mov    esp,0x9f002c2c
  402e91:	cwde   
  402e92:	push   ecx
  402e93:	ret    
  402e94:	push   esi
  402e95:	mov    edx,0x8b79e2c9
  402e9a:	xor    al,0xe0
  402e9c:	sub    eax,0x1af869de
  402ea1:	mov    ebx,0xe63becdc
  402ea6:	pusha  
  402ea7:	inc    ebp
  402ea8:	imul   DWORD PTR [edx-0x284c5e17]
  402eae:	(bad)  
  402eaf:	mov    eax,DWORD PTR [esi]
  402eb1:	sbb    al,0xb5
  402eb3:	cdq    
  402eb4:	mov    ebx,0x5e6864fe
  402eb9:	push   cs
  402eba:	xchg   ebx,eax
  402ebb:	add    eax,0x8daf96fd
  402ec0:	push   ds
  402ec1:	push   ebp
  402ec2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ec3:	jle    0x402e9e
  402ec5:	jl     0x402e69
  402ec7:	pushf  
  402ec8:	imul   ecx,DWORD PTR [edx],0xb4c73182
  402ece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ecf:	jne    0x402ed4
  402ed1:	pop    ecx
  402ed2:	loope  0x402ed0
  402ed4:	cs cli 
  402ed6:	xor    al,0x5f
  402ed8:	daa    
  402ed9:	pop    ecx
  402eda:	xchg   ebp,eax
  402edb:	gs or  eax,0x428506de
  402ee1:	xchg   bh,dh
  402ee3:	and    DWORD PTR [ecx-0x5564adaa],ebp
  402ee9:	ja     0x402f57
  402eeb:	loopne 0x402efc
  402eed:	mov    dl,0xb2
  402eef:	mov    DWORD PTR [esi+0x5444c41c],ebp
  402ef5:	cs repnz inc edi
  402ef8:	aas    
  402ef9:	js     0x402e88
  402efb:	jns    0x402e8d
  402efd:	pop    esp
  402efe:	sbb    BYTE PTR cs:[ecx-0xf79677a],0xda
  402f06:	xchg   ecx,eax
  402f07:	adc    eax,0x592a999
  402f0c:	dec    esp
  402f0d:	ror    DWORD PTR [esp+esi*2],cl
  402f10:	outs   dx,BYTE PTR ds:[esi]
  402f11:	mov    ss,WORD PTR ds:0x83cd35d6
  402f17:	enter  0xdf66,0xbe
  402f1b:	enter  0xe148,0xb0
  402f1f:	outs   dx,DWORD PTR ds:[esi]
  402f20:	xchg   ecx,eax
  402f21:	pop    ebx
  402f22:	daa    
  402f23:	mov    ecx,0x18cd185e
  402f28:	mov    dl,0x13
  402f2a:	cmc    
  402f2b:	loopne 0x402f00
  402f2d:	pop    ebx
  402f2e:	jbe    0x402f4a
  402f30:	rol    BYTE PTR [esi+0x59],1
  402f33:	bswap  edi
  402f35:	test   BYTE PTR [ecx-0x56ccb316],ch
  402f3b:	and    edx,edi
  402f3d:	cli    
  402f3e:	or     al,dh
  402f40:	xchg   esi,eax
  402f41:	call   0x818f:0x429814f4
  402f48:	cs ret 
  402f4a:	push   esi
  402f4b:	das    
  402f4c:	sub    eax,0x21eb137b
  402f51:	(bad)  
  402f53:	fist   WORD PTR [edi-0x61d2600c]
  402f59:	call   0xfa00c131
  402f5e:	mov    dh,0xff
  402f60:	ja     0x402fd0
  402f62:	(bad)  
  402f63:	xchg   ecx,eax
  402f64:	out    0x25,al
  402f66:	adc    al,0x93
  402f68:	mov    esi,0xd69f7936
  402f6d:	jg     0x402f9d
  402f6f:	cwde   
  402f70:	ror    BYTE PTR [ebx-0x27fc39c8],cl
  402f76:	jge    0x402ef8
  402f78:	cmp    al,0xb1
  402f7a:	push   esp
  402f7b:	adc    BYTE PTR [edi+edi*4-0x7aa59013],cl
  402f82:	pop    ecx
  402f83:	add    cl,al
  402f85:	int    0x79
  402f87:	mov    ebx,0xc76daaf7
  402f8c:	push   ss
  402f8d:	cmp    sp,0x64
  402f91:	or     BYTE PTR [ebp-0x4e4dddf1],dh
  402f97:	inc    esp
  402f98:	xchg   ebp,eax
  402f99:	fld    DWORD PTR [esi+0x6cfa48f4]
  402f9f:	mov    eax,0xbe0db9fa
  402fa4:	sub    al,0x3b
  402fa6:	xchg   ecx,eax
  402fa7:	add    al,0xd6
  402fa9:	inc    esp
  402faa:	cli    
  402fab:	js     0x402f97
  402fad:	dec    eax
  402fae:	or     al,0xb3
  402fb0:	jne    0x402fd3
  402fb2:	jo     0x402f67
  402fb4:	mov    cl,0xf2
  402fb6:	ja     0x402f75
  402fb8:	out    0xcb,eax
  402fba:	pop    edi
  402fbb:	sub    eax,0x78a8b90e
  402fc0:	mov    edx,fs
  402fc2:	pop    ecx
  402fc3:	repz push esp
  402fc5:	xor    al,0x74
  402fc7:	push   esi
  402fc8:	repnz sahf 
  402fca:	inc    edi
  402fcb:	sub    al,0x82
  402fcd:	mov    eax,ds:0x6bdf09ef
  402fd2:	add    bh,bl
  402fd4:	mov    dl,0xb
  402fd6:	(bad)  
  402fd7:	test   al,0xbb
  402fd9:	lahf   
  402fda:	outs   dx,BYTE PTR ds:[esi]
  402fdb:	int3   
  402fdc:	adc    edi,DWORD PTR [eiz*8-0x623359cc]
  402fe3:	push   cs
  402fe4:	loop   0x402ffe
  402fe6:	mov    dl,0xc8
  402fe8:	int    0x80
  402fea:	in     al,dx
  402feb:	fwait
  402fec:	mov    edi,0xf52764ae
  402ff1:	dec    ebx
  402ff2:	ror    BYTE PTR [ebp+0x18a742af],cl
  402ff8:	xor    bh,bh
  402ffa:	mov    esp,0x72abcc88
  402fff:	push   esp
  403000:	sbb    eax,0xd2c768ee
  403005:	aas    
  403006:	xor    DWORD PTR [edx+ebp*1+0x23],ebx
  40300a:	mov    ds:0xdd5c8056,al
  40300f:	das    
  403010:	xchg   edi,eax
  403011:	cmp    al,0x5e
  403013:	sqrtps xmm5,XMMWORD PTR gs:[edx+0x7e9caed9]
  40301b:	inc    eax
  40301c:	jecxz  0x402ffe
  40301e:	dec    eax
  40301f:	xor    ebp,eax
  403021:	adc    ah,bl
  403023:	aad    0x24
  403025:	es fwait
  403027:	std    
  403028:	hlt    
  403029:	jmp    0x403005
  40302b:	les    edi,FWORD PTR [edi+0x76cac8de]
  403031:	mov    edi,0x7ded1840
  403036:	fcmovbe st,st(5)
  403038:	mov    ebx,DWORD PTR [ecx-0x2a]
  40303b:	mov    al,ds:0x2ba5cb9f
  403040:	dec    ecx
  403041:	sub    ah,BYTE PTR [esi]
  403043:	in     al,0x1
  403045:	mov    bh,ch
  403047:	jns    0x403090
  403049:	jns    0x4030a7
  40304b:	mov    ebx,0xd72eb0f5
  403050:	add    BYTE PTR [ecx-0x55],cl
  403053:	inc    eax
  403054:	inc    edx
  403055:	mov    dl,0xa6
  403057:	pop    edx
  403058:	(bad)  
  403059:	(bad)  
  40305a:	push   ecx
  40305b:	xchg   ebx,eax
  40305c:	cmp    BYTE PTR [ebp+0x2669a2ab],ch
  403062:	xchg   edx,eax
  403063:	in     al,0xfb
  403065:	pop    esp
  403066:	mov    ds:0xa5ff54e9,eax
  40306b:	dec    esp
  40306c:	scas   al,BYTE PTR es:[edi]
  40306d:	lock and eax,0x274e6a5c
  403074:	mov    ebp,0x88412726
  403079:	mov    WORD PTR [eax+0x4152a118],fs
  40307f:	mov    dh,0x4c
  403081:	fisubr DWORD PTR ds:0x7e0f2a22
  403087:	and    eax,0x61c3b6fe
  40308c:	ins    BYTE PTR es:[edi],dx
  40308d:	shl    eax,cl
  40308f:	pop    esp
  403090:	push   ebx
  403091:	mov    esi,DWORD PTR [edx-0x39]
  403094:	inc    edi
  403095:	inc    edx
  403096:	sahf   
  403097:	mov    esp,0xb8e145a2
  40309c:	inc    eax
  40309d:	xor    eax,DWORD PTR [edx+0x560a30f9]
  4030a3:	jmp    0x3e22:0x6e0e6067
  4030aa:	ficom  DWORD PTR [eax]
  4030ac:	adc    ah,dl
  4030ae:	jle    0x4030ae
  4030b0:	out    0xbf,al
  4030b2:	mov    ecx,0x6efd4631
  4030b7:	and    esp,DWORD PTR [edx]
  4030b9:	mov    ds:0x6488e6c6,al
  4030be:	es sub eax,0x1139dd99
  4030c4:	mov    esp,0x1e60be08
  4030c9:	enter  0x8b6e,0xa5
  4030cd:	mov    ds:0x413cdff8,al
  4030d2:	push   eax
  4030d4:	push   edi
  4030d5:	jl     0x403136
  4030d7:	aad    0xf9
  4030d9:	mov    ds:0x7fc90d3b,al
  4030de:	mov    edx,0x4edf2ae8
  4030e3:	mov    ebp,0x440c5059
  4030e8:	xor    DWORD PTR [esi],ecx
  4030ea:	sbb    al,0xac
  4030ec:	ret    
  4030ed:	lods   eax,DWORD PTR ds:[esi]
  4030ee:	call   0xb157:0xa583e0
  4030f5:	sbb    bl,BYTE PTR [ecx]
  4030f7:	loopne 0x403165
  4030f9:	sbb    al,0x80
  4030fb:	jle    0x403113
  4030fd:	sbb    BYTE PTR [ecx-0x65cf3a18],0xdd
  403104:	ins    DWORD PTR es:[edi],dx
  403105:	cmp    eax,0xb0563601
  40310a:	jl     0x403094
  40310c:	or     al,0x22
  40310e:	mov    bl,0x97
  403110:	inc    edi
  403111:	push   cs
  403112:	adc    al,0x7b
  403114:	push   edx
  403115:	adc    DWORD PTR [edx-0x74],0xb5706d03
  40311c:	mov    edx,0x2090cdf
  403121:	pop    edx
  403122:	je     0x403178
  403124:	jbe    0x4030a9
  403126:	inc    esp
  403127:	xor    eax,0xab44e62f
  40312c:	in     al,dx
  40312d:	mov    ebp,0x224133e8
  403132:	sbb    al,0xc4
  403134:	dec    eax
  403135:	call   0x132f:0xd16110e4
  40313c:	or     DWORD PTR [eax-0x2f],0x6a49538d
  403143:	mov    al,0xf2
  403145:	and    DWORD PTR [ecx+esi*4-0xa],edx
  403149:	inc    ecx
  40314a:	pop    ss
  40314b:	div    DWORD PTR [edi]
  40314d:	push   0x6b3572a2
  403152:	and    DWORD PTR [eax],ecx
  403154:	stos   DWORD PTR es:[edi],eax
  403155:	cmp    ch,BYTE PTR [ebx-0x4d93b500]
  40315b:	lahf   
  40315c:	push   esp
  40315d:	arpl   WORD PTR [ebx-0x23290307],bx
  403163:	daa    
  403164:	and    esi,ecx
  403166:	mov    bh,0x6f
  403168:	add    DWORD PTR [edi-0x9349582],ebp
  40316e:	jecxz  0x40312a
  403170:	inc    ebp
  403171:	(bad)  
  403172:	clc    
  403173:	rcr    eax,1
  403175:	loope  0x40314d
  403177:	lock fnstenv [ebp-0x12]
  40317b:	mov    eax,ds:0xae3ca7e5
  403180:	push   edx
  403181:	(bad)  
  403182:	cmp    DWORD PTR [edx],ebp
  403184:	push   0x14163773
  403189:	xor    ch,BYTE PTR [esi-0x3d85f0cf]
  40318f:	cmp    DWORD PTR [ebp-0x32153679],ebx
  403195:	sar    BYTE PTR [ebx],cl
  403197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403198:	cmp    BYTE PTR [ebx+0x260eb429],dl
  40319e:	adc    edx,DWORD PTR [ebx]
  4031a0:	add    DWORD PTR [edx-0x3380b215],ecx
  4031a6:	sbb    edi,DWORD PTR [ecx+0x36]
  4031a9:	in     al,0xf1
  4031ab:	sub    al,0xc3
  4031ad:	or     DWORD PTR ds:0x6991bef8,0x431b1574
  4031b7:	repnz sbb eax,0x11bb656a
  4031bd:	jle    0x403196
  4031bf:	push   esi
  4031c0:	push   cs
  4031c1:	leave  
  4031c2:	jl     0x4031db
  4031c4:	les    esi,FWORD PTR [esi-0x53]
  4031c7:	add    eax,0x9d18fab5
  4031cc:	fwait
  4031cd:	rol    edi,0xe
  4031d0:	cmp    eax,0x807093d3
  4031d5:	sub    eax,0xc3336391
  4031da:	cmp    eax,0x671bd66a
  4031df:	adc    al,BYTE PTR [edx]
  4031e1:	jp     0x40320b
  4031e3:	outs   dx,DWORD PTR ds:[esi]
  4031e4:	cmp    DWORD PTR [eax+0x7d],edi
  4031e7:	mul    BYTE PTR [ebp-0x46196af0]
  4031ed:	pop    ss
  4031ee:	xor    DWORD PTR [edi],esi
  4031f0:	cmp    esp,DWORD PTR [eax]
  4031f2:	lods   eax,DWORD PTR ds:[esi]
  4031f3:	les    edi,FWORD PTR [eax]
  4031f5:	cmp    ah,0xb9
  4031f8:	jge    0x403203
  4031fa:	jecxz  0x403247
  4031fc:	(bad)  
  4031fd:	aad    0xf0
  4031ff:	int3   
  403200:	dec    eax
  403201:	fdiv   DWORD PTR [edx]
  403203:	popf   
  403204:	nop
  403205:	inc    ecx
  403206:	repnz std 
  403208:	dec    edx
  403209:	push   ebx
  40320a:	imul   DWORD PTR [esi+ebp*2]
  40320d:	dec    ebp
  40320e:	pop    ebp
  40320f:	pop    eax
  403210:	or     BYTE PTR [ebp-0x1551c409],cl
  403216:	push   0xd36a0ec9
  40321b:	mov    ch,0xee
  40321d:	scas   eax,DWORD PTR es:[edi]
  40321e:	push   ds
  40321f:	test   al,0xb5
  403221:	jno    0x4031a6
  403223:	sbb    DWORD PTR [edi],edi
  403225:	adc    BYTE PTR [edi],bl
  403227:	xchg   esi,eax
  403228:	jnp    0x403293
  40322a:	pop    ebp
  40322b:	das    
  40322c:	(bad)  
  40322d:	adc    ebx,esp
  40322f:	adc    al,0x91
  403231:	mov    ch,0xf1
  403233:	sub    BYTE PTR [ebx+0x7fa6e733],dh
  403239:	mov    ch,0x97
  40323b:	jnp    0x4032a7
  40323d:	fist   DWORD PTR [edx+0x1a75153f]
  403243:	jmp    0xca18:0x3b1b8199
  40324a:	dec    ecx
  40324b:	and    al,0x1a
  40324d:	mov    bh,bl
  40324f:	push   ebx
  403250:	jge    0x4031e3
  403252:	jb     0x403200
  403254:	adc    BYTE PTR [eax+0x79918a0e],dl
  40325a:	sbb    al,dl
  40325c:	and    DWORD PTR [edi-0x15],ebp
  40325f:	(bad)  
  403260:	push   eax
  403262:	loopne 0x403263
  403264:	adc    eax,edi
  403266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403267:	popa   
  403268:	add    BYTE PTR [edi+ecx*2+0x21],al
  40326c:	and    DWORD PTR [ecx-0x6e0cbb92],edi
  403272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403273:	cli    
  403274:	push   esp
  403275:	pop    ebx
  403276:	cwde   
  403277:	or     eax,0xdfc02a43
  40327c:	jecxz  0x4032d1
  40327e:	dec    ecx
  40327f:	mov    DWORD PTR [edx+0x3a6884a4],edi
  403285:	lods   al,BYTE PTR ds:[esi]
  403286:	cmp    ch,cl
  403288:	dec    eax
  403289:	clc    
  40328a:	cmp    edi,DWORD PTR [ebp+0x10]
  40328d:	ja     0x40321a
  40328f:	jne    0x40327f
  403291:	jmp    0x41e4b5ba
  403296:	mov    ss,WORD PTR [ecx+0x645adae1]
  40329c:	xchg   ebx,eax
  40329d:	int    0x90
  40329f:	inc    esi
  4032a0:	mov    dh,0x2
  4032a2:	lods   eax,DWORD PTR ds:[esi]
  4032a3:	sbb    eax,0xecae676
  4032a8:	aam    0xc2
  4032aa:	fld    QWORD PTR ds:0x76011a8b
  4032b0:	mov    dl,0x3a
  4032b2:	mov    dl,0x5c
  4032b4:	dec    BYTE PTR cs:[esi+0x6e]
  4032b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032b9:	cmp    DWORD PTR [ebp-0x7efd9f4e],0x3f3663e4
  4032c3:	in     al,dx
  4032c4:	loop   0x4032f1
  4032c6:	push   eax
  4032c7:	js     0x403312
  4032c9:	jno    0x40325d
  4032cb:	sub    dh,BYTE PTR [esi+0x3e]
  4032ce:	jmp    0x403292
  4032d0:	test   al,0xd2
  4032d2:	call   0xe916:0xbde1fb62
  4032d9:	dec    esi
  4032da:	pushf  
  4032db:	mov    ebp,0xd149b7aa
  4032e0:	push   edx
  4032e1:	mov    ds:0xbcb35962,al
  4032e6:	push   ebp
  4032e7:	xor    DWORD PTR [ebx],ecx
  4032e9:	addr16 inc edx
  4032eb:	sub    edi,DWORD PTR [edi+0x14]
  4032ee:	shl    DWORD PTR [ebp*8-0x2fb49269],0x1a
  4032f6:	lods   al,BYTE PTR ds:[esi]
  4032f7:	loope  0x4032e4
  4032f9:	fisttp WORD PTR [ebx+eax*4-0x689700c1]
  403300:	out    dx,eax
  403301:	sbb    ch,BYTE PTR [eax+0x7c]
  403304:	mov    ecx,0x7ebdb8e2
  403309:	repz push DWORD PTR ds:0x9490aaeb
  403310:	cmp    eax,0x92cb5fb3
  403315:	sub    DWORD PTR [edi+edx*8+0x7ea9446],ecx
  40331c:	pop    ds
  40331d:	mov    esi,?
  40331f:	js     0x403344
  403321:	mov    eax,ds:0x4182e539
  403326:	mov    dh,0xc3
  403328:	mov    esp,0x5f3c5afe
  40332d:	mov    cl,BYTE PTR [edi+0x31]
  403330:	dec    edx
  403331:	pop    eax
  403332:	sar    dl,cl
  403334:	and    eax,0xb69f7617
  403339:	fild   WORD PTR [ecx]
  40333b:	pop    ecx
  40333c:	scas   eax,DWORD PTR es:[edi]
  40333d:	add    DWORD PTR [eax-0x554d7aae],ebx
  403343:	fidiv  WORD PTR [ebx]
  403345:	inc    esi
  403346:	dec    edi
  403347:	js     0x403387
  403349:	hlt    
  40334a:	test   al,0x9
  40334c:	or     al,0x35
  40334e:	out    0x6,al
  403350:	into   
  403351:	je     0x403319
  403353:	call   0xc1a15fc9
  403358:	loope  0x4033a6
  40335a:	ficomp DWORD PTR [eax+0x33f1549a]
  403360:	adc    DWORD PTR [esp+edi*2+0x600a65f8],ebp
  403367:	(bad)  
  403368:	in     al,0xa3
  40336a:	and    al,0xe7
  40336c:	mov    WORD PTR [esi-0x717df706],ds
  403372:	sub    ecx,DWORD PTR [esi+eax*8]
  403375:	or     al,0x68
  403377:	mov    dh,BYTE PTR ds:0xcf202532
  40337d:	pop    ebx
  40337e:	pop    esp
  40337f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403380:	mov    dh,0x3f
  403382:	loopne 0x4033f2
  403384:	stc    
  403385:	inc    edi
  403386:	push   0x6e
  403388:	outs   dx,BYTE PTR ds:[esi]
  403389:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40338b:	retf   
  40338c:	shl    esp,1
  40338e:	mov    al,0x14
  403390:	popf   
  403391:	jecxz  0x4033bf
  403393:	adc    bh,BYTE PTR [ebp+0x65144f08]
  403399:	add    eax,0xafa61357
  40339e:	xor    BYTE PTR ds:0xe96e5322,dh
  4033a4:	or     DWORD PTR [eax+0x50],edx
  4033a7:	inc    ebx
  4033a8:	adc    ebx,DWORD PTR [ecx-0x6265a031]
  4033ae:	test   eax,0x90404a52
  4033b3:	aas    
  4033b4:	pop    ss
  4033b5:	jmp    0xce15:0x240a4328
  4033bc:	(bad)  
  4033be:	cmp    ch,bl
  4033c0:	fld    QWORD PTR [edi+0x58a9df63]
  4033c6:	and    ebp,DWORD PTR [ebp+ecx*2-0x365218e4]
  4033cd:	adc    al,0x99
  4033cf:	push   ebp
  4033d0:	cmp    ebx,DWORD PTR [ebp-0x7e]
  4033d3:	mov    cl,0x5d
  4033d5:	leave  
  4033d6:	stos   BYTE PTR es:[edi],al
  4033d7:	jns    0x40336b
  4033d9:	mov    BYTE PTR [ebp+0x4150b8e4],ah
  4033df:	aad    0x24
  4033e1:	ins    BYTE PTR es:[edi],dx
  4033e2:	addr16 out dx,al
  4033e4:	jo     0x403439
  4033e6:	je     0x4033b5
  4033e8:	int3   
  4033e9:	jb     0x403395
  4033eb:	mov    al,ds:0xb77d16f7
  4033f0:	and    ecx,DWORD PTR [eax]
  4033f2:	mov    BYTE PTR [eax-0x29],dh
  4033f5:	aad    0xe9
  4033f7:	mov    ds:0x41f71974,al
  4033fc:	cmp    eax,0x10f5555b
  403401:	mov    dl,0x9e
  403403:	fimul  WORD PTR [edx-0x65b48fb8]
  403409:	sbb    ch,BYTE PTR [ebx-0x5fe4395]
  40340f:	fst    DWORD PTR [ebp-0x5627c5f3]
  403415:	leave  
  403416:	dec    eax
  403417:	pop    edx
  403418:	addr16 jae 0x4033d6
  40341b:	rcl    DWORD PTR [ebx-0x2068cbf3],cl
  403421:	and    DWORD PTR [esi],esp
  403423:	mov    eax,0xcf97ca4f
  403428:	mov    al,0x5f
  40342a:	div    ah
  40342c:	pop    ds
  40342d:	jmp    0x4033c6
  40342f:	jo     0x4034ad
  403431:	repnz fisub DWORD PTR [ecx+esi*8]
  403435:	and    al,0x8b
  403437:	cs push ss
  403439:	mov    esi,0xba56123d
  40343e:	mov    al,ds:0xf3432fd
  403443:	adc    esp,esp
  403445:	mov    dh,0x50
  403447:	fild   WORD PTR [ebx-0x4ff12c6a]
  40344d:	inc    eax
  40344e:	imul   esi,DWORD PTR [ecx+edx*1-0x72],0xffffff95
  403453:	ss sbb eax,ecx
  403456:	bound  esi,QWORD PTR [esi+0x1d1a5d1]
  40345c:	and    al,BYTE PTR [eax-0x2a]
  40345f:	scas   eax,DWORD PTR es:[edi]
  403460:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403461:	xor    BYTE PTR [ecx+0x49d8ef6],al
  403467:	xchg   esp,eax
  403468:	xchg   esp,eax
  403469:	xchg   esp,eax
  40346a:	add    ebx,edi
  40346c:	mov    ah,0x5c
  40346e:	adc    ecx,DWORD PTR ds:0xf9b3901a
  403474:	jmp    0xf328b4a4
  403479:	mov    al,BYTE PTR [edi-0x59]
  40347c:	adc    dl,BYTE PTR [edi]
  40347e:	push   cs
  40347f:	inc    esi
  403480:	repz cmc 
  403482:	add    ebx,DWORD PTR [edi+0x9]
  403485:	retf   0x5f0d
  403488:	shl    DWORD PTR [esi+0xa937b79],1
  40348e:	adc    BYTE PTR [ebx],bh
  403490:	mov    bh,0xd7
  403492:	xchg   ecx,eax
  403493:	jg     0x4034cb
  403495:	divps  xmm1,XMMWORD PTR [ebx-0x4eb2274b]
  40349c:	push   0xffffffe3
  40349e:	pop    edi
  40349f:	add    al,0x1d
  4034a1:	and    edx,DWORD PTR ds:0xbb393cb4
  4034a7:	jnp    0x40347f
  4034a9:	jb     0x4034ca
  4034ab:	mov    dl,0x3b
  4034ad:	mov    ebx,DWORD PTR [edi]
  4034af:	std    
  4034b0:	fcomp  DWORD PTR [ebp-0x240215f3]
  4034b6:	and    BYTE PTR [eax+0x19],cl
  4034b9:	pop    ss
  4034ba:	pop    edi
  4034bb:	xchg   edx,eax
  4034bc:	mov    edi,0x45e9e88c
  4034c1:	fsubr  QWORD PTR [edi-0x6f]
  4034c4:	aas    
  4034c5:	jecxz  0x40347f
  4034c7:	call   0x894e:0x404e4335
  4034ce:	xchg   ebp,eax
  4034cf:	jo     0x40353b
  4034d1:	idiv   esi
  4034d3:	cmc    
  4034d4:	sbb    bl,dh
  4034d6:	sub    DWORD PTR [edx-0x194d811d],ecx
  4034dc:	cwde   
  4034dd:	cmp    DWORD PTR [eax],ebx
  4034df:	test   eax,0xc4d6d035
  4034e4:	stos   BYTE PTR es:[edi],al
  4034e5:	mov    ah,0x8f
  4034e7:	cld    
  4034e8:	(bad)  [ebx-0x51]
  4034eb:	mov    dh,BYTE PTR [ebp-0x58]
  4034ee:	push   ebx
  4034ef:	and    al,0xdf
  4034f1:	int3   
  4034f2:	add    eax,0xbbf95c33
  4034f7:	push   esp
  4034f8:	and    BYTE PTR [ebp-0x148e15de],dl
  4034fe:	push   ecx
  4034ff:	iret   
  403500:	lods   eax,DWORD PTR ds:[esi]
  403501:	lods   eax,DWORD PTR ds:[esi]
  403502:	test   esp,0xef4410dd
  403508:	fwait
  403509:	rcl    DWORD PTR [ecx-0x7b],0xd
  40350d:	rol    bl,1
  40350f:	push   edi
  403510:	jns    0x4034f0
  403512:	fucomi st,st(5)
  403514:	push   ss
  403515:	mov    ah,0xb5
  403517:	into   
  403518:	mov    BYTE PTR [eax+0x72e00040],al
  40351e:	inc    edi
  40351f:	sbb    BYTE PTR [ebp-0x44],bh
  403522:	push   edx
  403523:	push   ebp
  403524:	js     0x403541
  403526:	cmp    eax,DWORD PTR [edx+ecx*1+0x64babe0c]
  40352d:	sti    
  40352e:	xchg   ebp,eax
  40352f:	mov    BYTE PTR [ebx],0x91
  403532:	or     esp,DWORD PTR [eax-0x244fa847]
  403538:	(bad)  
  403539:	push   eax
  40353a:	stc    
  40353b:	or     edi,DWORD PTR [eax+0x2674e2bc]
  403541:	push   0x59042384
  403546:	and    edx,DWORD PTR [ecx+0x10]
  403549:	inc    eax
  40354a:	fisubr WORD PTR [edi-0x78]
  40354d:	mov    ah,0x6
  40354f:	(bad)
  403552:	xor    BYTE PTR [ecx-0x2bfc76ea],bh
  403558:	push   0x7a
  40355a:	fwait
  40355b:	push   eax
  40355c:	add    ch,BYTE PTR [ecx+0x4e66bb2e]
  403562:	sub    BYTE PTR ds:0xc8eb04a6,cl
  403568:	int3   
  403569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40356a:	out    0x8d,eax
  40356c:	push   esi
  40356d:	sub    edx,eax
  40356f:	add    DWORD PTR [edi+0xa],edx
  403572:	daa    
  403573:	scas   al,BYTE PTR es:[edi]
  403574:	in     eax,dx
  403575:	mov    esi,0x81b3cfe2
  40357a:	or     BYTE PTR [edx],ah
  40357c:	xchg   esp,eax
  40357d:	jmp    0xfe37:0x7bf3f5c5
  403584:	in     eax,dx
  403585:	aam    0x43
  403587:	ss xor al,0x57
  40358a:	jmp    0x403548
  40358c:	cli    
  40358d:	fxch   st(6)
  40358f:	mov    ebp,0xa8773188
  403594:	pop    es
  403595:	sub    BYTE PTR [esi-0x38f11913],al
  40359b:	mov    ds:0xc16db33d,eax
  4035a0:	mov    edi,DWORD PTR [ecx+0x53867dc9]
  4035a6:	enter  0x3842,0xd1
  4035aa:	stos   DWORD PTR es:[edi],eax
  4035ab:	ins    DWORD PTR es:[edi],dx
  4035ac:	mov    ah,0x6e
  4035ae:	mov    ebp,0x6805e960
  4035b3:	mov    al,ds:0xcfad1ef8
  4035b8:	cmp    al,0x24
  4035ba:	mov    al,ds:0xfc083d30
  4035bf:	mov    ebx,0x66e18d07
  4035c4:	(bad)  
  4035c5:	sub    DWORD PTR [ecx+edi*1-0x6756ddf1],ecx
  4035cc:	sub    BYTE PTR [esp+eax*1-0xb],al
  4035d0:	out    dx,eax
  4035d1:	pushf  
  4035d2:	out    0x11,al
  4035d4:	in     eax,dx
  4035d5:	lods   eax,DWORD PTR ds:[esi]
  4035d6:	xor    edi,DWORD PTR [ebp+0x1e]
  4035d9:	jae    0x403613
  4035db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035dc:	ror    DWORD PTR [ebp+0x4052c12b],0xcc
  4035e3:	(bad)  
  4035e4:	and    eax,0x95242efb
  4035e9:	int    0x22
  4035eb:	test   BYTE PTR ds:0xafda1a9b,cl
  4035f1:	mov    ecx,0x63391539
  4035f6:	jl     0x4035aa
  4035f8:	popa   
  4035f9:	fidiv  WORD PTR [ecx+0x3772608d]
  4035ff:	mov    eax,ds:0xe68ec24a
  403604:	rol    BYTE PTR [ecx+0x5653dd4],0x2f
  40360b:	mov    ds:0xfce3bdd9,eax
  403610:	popf   
  403611:	xor    BYTE PTR [ebx],0x39
  403614:	pop    ebx
  403615:	fmul   QWORD PTR [edx+0x2ab24143]
  40361b:	sub    ebp,DWORD PTR [ebx-0x9]
  40361e:	and    al,0xfd
  403620:	data16 js 0x4035e4
  403623:	jns    0x4035e2
  403625:	add    BYTE PTR [eax],ah
  403627:	cmp    eax,0xbb056d8e
  40362c:	sub    eax,0x38634ace
  403631:	jmp    0x4036a8
  403633:	inc    edx
  403634:	and    edx,DWORD PTR [ebx+0x7a]
  403637:	jae    0x403646
  403639:	out    dx,al
  40363a:	jne    0x403603
  40363c:	bound  esp,QWORD PTR [edi+0x24f57edf]
  403642:	loopne 0x40363f
  403644:	and    dl,BYTE PTR [edx-0x35]
  403647:	or     BYTE PTR [edi],bh
  403649:	mov    eax,DWORD PTR ds:0x99d48362
  40364f:	in     eax,0x14
  403651:	fs jbe 0x4036c8
  403654:	ret    
  403655:	nop
  403656:	fsubr  QWORD PTR [ebx]
  403658:	sub    DWORD PTR [ebp+edi*4-0x6d776a95],esp
  40365f:	pop    ecx
  403660:	ror    DWORD PTR [ebx+0x155e360e],1
  403666:	gs scas eax,DWORD PTR es:[edi]
  403668:	lds    ecx,FWORD PTR [edi-0x5e]
  40366b:	mov    ecx,0xe5859397
  403670:	jg     0x40369c
  403672:	rol    BYTE PTR [esi],cl
  403674:	mov    ds:0xa99a922a,eax
  403679:	jmp    0x40362d
  40367b:	push   cs
  40367c:	cmp    DWORD PTR [ecx],esp
  40367e:	fst    DWORD PTR es:[ecx+0x7e]
  403682:	dec    edi
  403683:	rol    BYTE PTR [edx-0x68],1
  403686:	repz xchg ecx,eax
  403688:	ss jbe 0x4036fd
  40368b:	(bad)  
  40368c:	cmp    DWORD PTR [eax+0x46],edi
  40368f:	int    0xe7
  403691:	scas   al,BYTE PTR es:[edi]
  403692:	pop    esp
  403693:	gs ss push 0xe9b5f55f
  40369a:	xor    al,0xf4
  40369c:	fcom   QWORD PTR [eax-0x6085a55b]
  4036a2:	rol    BYTE PTR [edi-0x57f8dc87],1
  4036a8:	or     edi,DWORD PTR [ebp-0x6aa964b9]
  4036ae:	and    al,0x9c
  4036b0:	arpl   WORD PTR [ebp-0x77],si
  4036b3:	pop    ss
  4036b4:	jno    0x40364e
  4036b6:	test   eax,0x2f463736
  4036bb:	adc    dh,BYTE PTR [eax+0x27b68c5b]
  4036c1:	xchg   ecx,eax
  4036c2:	popa   
  4036c3:	and    DWORD PTR [edx-0x19],eax
  4036c6:	shr    ah,cl
  4036c8:	fdiv   st(1),st
  4036ca:	adc    eax,0xcd1ddb95
  4036cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036d0:	mov    al,0x4e
  4036d2:	stos   BYTE PTR es:[edi],al
  4036d3:	mov    ebp,0x98f95108
  4036d8:	cmp    ebp,edi
  4036da:	arpl   WORD PTR [ebx],si
  4036dc:	outs   dx,BYTE PTR ds:[esi]
  4036dd:	cmp    DWORD PTR [edi-0x6079dff4],esp
  4036e3:	pop    edx
  4036e4:	retf   0x2c98
  4036e7:	fsubr  DWORD PTR [ebx-0x2fbbf64]
  4036ed:	not    BYTE PTR [ebx-0x5a]
  4036f0:	cmp    eax,edx
  4036f2:	enter  0x762b,0x44
  4036f6:	sbb    BYTE PTR [ecx],0x9f
  4036f9:	aas    
  4036fa:	scas   al,BYTE PTR es:[edi]
  4036fb:	mov    dl,0x28
  4036fd:	(bad)
  403700:	jle    0x4036c4
  403702:	mov    ah,0x82
  403704:	jnp    0x4036dd
  403706:	fcomip st,st(3)
  403708:	add    esi,DWORD PTR [esp-0x4bc7d8dd]
  40370f:	repnz stc 
  403711:	cdq    
  403712:	and    al,0x66
  403714:	les    edx,FWORD PTR [eax-0x6a]
  403717:	jl     0x403743
  403719:	adc    eax,DWORD PTR [edi+0x11a25ac3]
  40371f:	in     eax,dx
  403720:	out    dx,eax
  403721:	fld    QWORD PTR [ebx]
  403723:	fwait
  403724:	(bad)  
  403725:	adc    cl,al
  403727:	xor    al,0xb7
  403729:	mov    dl,0x66
  40372b:	scas   al,BYTE PTR es:[edi]
  40372c:	gs loop 0x403706
  40372f:	push   0xffffffee
  403731:	lahf   
  403732:	cmp    bh,ch
  403734:	jae    0x403721
  403736:	in     al,dx
  403737:	add    ebx,DWORD PTR [ebx-0x24]
  40373a:	sbb    al,0x7a
  40373c:	inc    ecx
  40373d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40373e:	xor    ebx,DWORD PTR [ebx+edx*1-0x27eb715c]
  403745:	aaa    
  403746:	sub    esp,DWORD PTR [ebp-0x79]
  403749:	xor    ch,BYTE PTR [ecx]
  40374b:	mov    ds:0x21398783,eax
  403750:	dec    edi
  403751:	mov    esp,0x8d0105a4
  403756:	cs mov ebx,0x66a78653
  40375c:	xchg   edi,eax
  40375d:	mov    dl,0xa9
  40375f:	xor    ch,BYTE PTR [ecx+esi*8-0x7e]
  403763:	mov    cl,0x3c
  403765:	test   BYTE PTR [ebp-0x62d89e62],cl
  40376b:	not    BYTE PTR [esi+0xb945b88]
  403771:	sub    al,0xc3
  403773:	(bad)  
  403774:	in     al,dx
  403775:	and    eax,0xe68c5d02
  40377a:	and    eax,0x546d5e2f
  40377f:	retf   
  403780:	and    BYTE PTR [esi-0x43],0xaf
  403784:	cmp    al,BYTE PTR [edi+0x4fcfffbd]
  40378a:	fisub  WORD PTR [ecx]
  40378c:	jmp    0x4da4:0xda4806e
  403793:	sub    BYTE PTR fs:[ebx-0xb],dh
  403797:	mov    ds:0xf7fa348e,al
  40379c:	xchg   ecx,eax
  40379d:	in     al,0x4
  40379f:	fsub   QWORD PTR ds:0x28e3c75e
  4037a5:	sar    DWORD PTR [eax+0x7196faf3],0xe
  4037ac:	mov    WORD PTR [ebx],?
  4037ae:	nop
  4037af:	outs   dx,BYTE PTR ds:[esi]
  4037b0:	loopne 0x4037d4
  4037b2:	mov    ch,0xe2
  4037b4:	clc    
  4037b5:	imul   esi,ebx,0x6
  4037b8:	inc    edi
  4037b9:	out    0x46,al
  4037bb:	out    0x70,al
  4037bd:	icebp  
  4037be:	jae    0x4037fe
  4037c0:	add    al,0x91
  4037c2:	pushw  ss
  4037c4:	inc    eax
  4037c5:	les    esi,FWORD PTR [eax+eax*1]
  4037c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037c9:	sub    ah,BYTE PTR [esi+0x761efb9a]
  4037cf:	fcom   QWORD PTR [ecx-0x48]
  4037d2:	call   0x5d73:0xf121e327
  4037d9:	fucomp st(2)
  4037db:	add    al,0xeb
  4037dd:	jmp    0x5c9b66c9
  4037e2:	xchg   esi,eax
  4037e3:	push   es
  4037e4:	xchg   ebp,eax
  4037e5:	lods   eax,DWORD PTR ds:[esi]
  4037e6:	inc    ebp
  4037e7:	neg    BYTE PTR [esi]
  4037e9:	dec    edx
  4037ea:	push   edx
  4037eb:	stos   DWORD PTR es:[edi],eax
  4037ec:	jae    0x403800
  4037ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037ef:	mov    dh,0xe8
  4037f1:	inc    ebp
  4037f2:	xor    dl,bh
  4037f4:	and    DWORD PTR [edx],0x1bd14391
  4037fa:	push   0xffffffdf
  4037fc:	and    al,0x1e
  4037fe:	and    BYTE PTR [edx-0x45],al
  403801:	push   es
  403802:	(bad)  
  403803:	sbb    esp,DWORD PTR [esi]
  403805:	add    BYTE PTR [ebx+0x4a],ah
  403808:	(bad)  
  403809:	pop    esi
  40380a:	out    dx,al
  40380b:	or     bl,bh
  40380d:	retf   0xc9a4
  403810:	mov    ah,0x2b
  403812:	xchg   ebp,eax
  403813:	sti    
  403814:	int3   
  403815:	retf   
  403816:	jmp    0x403845
  403818:	sub    eax,0x517038bd
  40381d:	ror    BYTE PTR [edi-0x2d2d5631],0x23
  403824:	idiv   BYTE PTR [ecx-0x19000c08]
  40382a:	mov    ebp,0x66824fea
  40382f:	std    
  403830:	aas    
  403831:	vmovss xmm4,DWORD PTR [eax+eax*8+0xb]
  403837:	jg     0x403825
  403839:	push   edi
  40383a:	mov    fs,WORD PTR [edi-0x5c1bd2d6]
  403840:	pop    eax
  403841:	jns    0x40382f
  403843:	gs hlt 
  403845:	lods   al,BYTE PTR ds:[esi]
  403846:	mov    eax,0x5154fb7f
  40384b:	push   es
  40384c:	and    DWORD PTR [edx+0x5cc61d6a],ebp
  403852:	sbb    DWORD PTR [ebx+0x15],edx
  403855:	pop    ax
  403857:	imul   edi,DWORD PTR [eax-0xa],0x68
  40385b:	dec    edi
  40385c:	shl    dh,cl
  40385e:	jnp    0x403823
  403860:	sbb    bl,ch
  403862:	cmp    eax,0x543b592f
  403867:	dec    eax
  403868:	out    dx,eax
  403869:	inc    esi
  40386a:	xchg   ecx,eax
  40386b:	push   ebx
  40386c:	xchg   edx,eax
  40386d:	aaa    
  40386e:	xchg   DWORD PTR [esi+eiz*1-0x40],edi
  403872:	sub    al,cl
  403874:	sbb    esi,0x1c
  403877:	test   eax,0x4e0c030d
  40387c:	and    eax,0x214eba8f
  403881:	fsubr  st,st(3)
  403883:	das    
  403884:	(bad)  
  403885:	in     al,dx
  403886:	(bad)  
  403887:	push   ebp
  403888:	sub    eax,0x659d4290
  40388d:	mov    al,bl
  40388f:	(bad)  
  403890:	dec    edx
  403891:	xchg   ecx,eax
  403892:	popfw  
  403894:	pop    esp
  403895:	add    al,BYTE PTR [ebp+0x59]
  403898:	or     BYTE PTR [ebx-0x76],cl
  40389b:	lds    edx,FWORD PTR [ebp-0x14bd3c37]
  4038a1:	nop
  4038a2:	cmp    DWORD PTR [edx-0xa2911c5],ebx
  4038a8:	pop    ebx
  4038a9:	inc    ecx
  4038aa:	imul   esi,DWORD PTR [edx+eax*8+0x57],0xffffffa8
  4038af:	leave  
  4038b0:	xchg   edx,eax
  4038b1:	ret    
  4038b2:	sbb    eax,0xd4cca3e8
  4038b7:	pop    esp
  4038b8:	in     al,dx
  4038b9:	mov    edi,0x63e869b6
  4038be:	std    
  4038bf:	add    DWORD PTR [esi+0x15],0xc9d8eb56
  4038c6:	dec    esi
  4038c7:	push   eax
  4038c8:	fmul   st(6),st
  4038ca:	popf   
  4038cb:	daa    
  4038cc:	hlt    
  4038cd:	mov    al,ds:0xf4f38b3b
  4038d2:	sbb    esi,ebp
  4038d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038d5:	pop    DWORD PTR [edx+0x53]
  4038d8:	ins    DWORD PTR es:[edi],dx
  4038d9:	mov    dh,0x59
  4038db:	pop    esi
  4038dc:	and    eax,0xc028dbaf
  4038e1:	push   edi
  4038e2:	jmp    0xd705eda
  4038e7:	es inc esp
  4038e9:	jne    0x403874
  4038eb:	scas   eax,DWORD PTR es:[edi]
  4038ec:	pop    esp
  4038ed:	add    ebx,DWORD PTR [esp+edi*1+0x2bcc48d1]
  4038f4:	int3   
  4038f5:	mov    ebp,0xd772b56c
  4038fa:	sahf   
  4038fb:	in     eax,0x72
  4038fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038fe:	jge    0x4038ad
  403900:	cmc    
  403901:	inc    eax
  403902:	jb     0x403947
  403904:	leave  
  403905:	mov    edi,0x22285704
  40390a:	shl    bl,1
  40390c:	fwait
  40390d:	imul   ecx,edx,0x5a1143b1
  403913:	cmp    ch,BYTE PTR [edi]
  403915:	gs pop ecx
  403917:	push   es
  403918:	jnp    0x40391c
  40391a:	cmc    
  40391b:	mov    esi,0xb3bbe58c
  403920:	cdq    
  403921:	or     eax,0xd43aa709
  403926:	dec    ecx
  403927:	scas   eax,DWORD PTR es:[edi]
  403928:	scas   al,BYTE PTR es:[edi]
  403929:	js     0x4038fe
  40392b:	sbb    eax,0xb423ce8e
  403930:	and    esi,eax
  403932:	add    ebp,DWORD PTR [ecx]
  403934:	xchg   esp,eax
  403935:	cwde   
  403936:	pushf  
  403937:	or     esi,DWORD PTR [esi-0x37]
  40393a:	int3   
  40393b:	xor    BYTE PTR [esp+edi*8-0x538174df],bh
  403942:	xor    BYTE PTR [ebp-0x30],bl
  403945:	(bad)  [esi+0xda0f7d8]
  40394b:	mov    dl,0x97
  40394d:	ror    DWORD PTR [eax],1
  40394f:	mov    ah,bh
  403951:	push   es
  403952:	cmp    BYTE PTR [eax],ah
  403954:	(bad)  
  403955:	pop    esp
  403956:	scas   eax,DWORD PTR es:[edi]
  403957:	xchg   BYTE PTR [esi-0x1f],dl
  40395a:	sub    BYTE PTR fs:[esi],al
  40395d:	test   eax,0xdcc240cb
  403962:	lods   al,BYTE PTR ds:[esi]
  403963:	cs js  0x4039ac
  403966:	pop    edi
  403967:	sar    BYTE PTR [ebx+0x1f13bfa3],0x99
  40396e:	sub    bl,BYTE PTR [edi-0x12]
  403971:	mov    bh,0xef
  403973:	pop    ebx
  403974:	js     0x4039ef
  403976:	cdq    
  403977:	jns    0x4039c8
  403979:	sbb    BYTE PTR [ecx+eax*2+0x3b],al
  40397d:	inc    eax
  40397e:	or     eax,0x26ac069a
  403983:	adc    cl,bh
  403985:	stc    
  403986:	inc    ebx
  403987:	mov    ds:0xe76e876a,al
  40398c:	xor    ch,BYTE PTR [edi-0x5a]
  40398f:	pop    DWORD PTR [eax]
  403991:	repnz aas 
  403993:	pop    esi
  403994:	inc    ebp
  403995:	add    dh,dl
  403997:	mov    bh,0x0
  403999:	dec    ecx
  40399a:	or     esi,DWORD PTR [edi]
  40399c:	mov    ecx,0x9cdce544
  4039a1:	aad    0x30
  4039a3:	shr    BYTE PTR [eax+0x15bbe89f],cl
  4039a9:	sbb    esi,DWORD PTR fs:[ebx]
  4039ac:	or     esi,DWORD PTR [eax+0xfb3ad66]
  4039b2:	(bad)  
  4039b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039b5:	and    DWORD PTR [esi],eax
  4039b7:	pop    esp
  4039b8:	int3   
  4039b9:	xchg   edx,eax
  4039ba:	cli    
  4039bb:	lahf   
  4039bc:	xchg   BYTE PTR [ecx+esi*1-0x27],dh
  4039c0:	pand   mm2,QWORD PTR [ebp-0x37dfa153]
  4039c7:	jno    0x40399f
  4039c9:	hlt    
  4039ca:	sahf   
  4039cb:	xor    ebp,DWORD PTR [ebx]
  4039cd:	enter  0x2152,0x1f
  4039d1:	sar    ebp,1
  4039d3:	ud1    esp,DWORD PTR [ebx-0x68b8ad56]
  4039da:	adc    dl,BYTE PTR [ebx]
  4039dc:	fcomp  QWORD PTR [edx-0xc]
  4039df:	sub    BYTE PTR [esi-0x36d9e1b8],dl
  4039e5:	sbb    ch,BYTE PTR [eax]
  4039e7:	mov    eax,0xbd30b825
  4039ec:	and    BYTE PTR [ebx+0x5c87a153],ah
  4039f2:	fisubr WORD PTR [ecx-0x7e08cf8e]
  4039f8:	and    DWORD PTR [esi],edx
  4039fa:	jbe    0x4039ce
  4039fc:	jns    0x4039fd
  4039fe:	cmp    esp,DWORD PTR [ebp+0x779c0445]
  403a04:	xchg   BYTE PTR [ecx+0x4e],bh
  403a07:	mov    dh,0xc1
  403a09:	ins    DWORD PTR es:[edi],dx
  403a0a:	das    
  403a0b:	sti    
  403a0c:	add    al,0xfa
  403a0e:	leave  
  403a0f:	pop    ecx
  403a10:	fs xchg edi,eax
  403a12:	clc    
  403a13:	mov    eax,ds:0x48363587
  403a18:	push   ds
  403a19:	jo     0x403a57
  403a1b:	call   0x581:0xbdd17f9e
  403a22:	mov    cl,0x37
  403a24:	jnp    0x4039cc
  403a26:	mov    DWORD PTR [eax+ebx*8+0x41225873],0xfba4c69e
  403a31:	pop    es
  403a32:	inc    esi
  403a33:	cs xor dh,bl
  403a36:	pop    edx
  403a37:	aas    
  403a38:	and    edx,esp
  403a3a:	or     BYTE PTR [edi],ah
  403a3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a3d:	paddsw mm0,QWORD PTR [esi]
  403a40:	mov    esi,DWORD PTR [eax]
  403a42:	inc    ebp
  403a43:	scas   al,BYTE PTR es:[edi]
  403a44:	dec    edi
  403a45:	pop    ecx
  403a46:	cmp    BYTE PTR [edx+0x5536cb32],cl
  403a4c:	jb     0x4039e0
  403a4e:	pop    es
  403a4f:	icebp  
  403a50:	test   ch,dh
  403a52:	nop
  403a53:	cli    
  403a54:	dec    eax
  403a55:	ror    BYTE PTR [edx+0x74b98861],1
  403a5b:	clc    
  403a5c:	(bad)  
  403a5d:	sub    bl,BYTE PTR [eax]
  403a5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a60:	add    eax,0xc323ff96
  403a65:	xchg   BYTE PTR [ecx-0x6c943db7],bh
  403a6b:	push   ebp
  403a6c:	pop    ss
  403a6d:	and    al,0x3c
  403a6f:	fiadd  WORD PTR [eax+0x7cadb416]
  403a75:	jp     0x403ab0
  403a77:	jne    0x403aa9
  403a79:	data16 (bad) 
  403a7b:	aaa    
  403a7c:	aaa    
  403a7d:	test   DWORD PTR [ecx-0x37],0xfd2fb632
  403a84:	xor    DWORD PTR [ebx-0x33],edi
  403a87:	rol    ch,cl
  403a89:	pop    esi
  403a8a:	addr16 jp 0x403a68
  403a8d:	pop    ebp
  403a8e:	dec    ecx
  403a8f:	or     bl,BYTE PTR [esp+esi*2]
  403a92:	mov    ecx,0xd6bcd594
  403a97:	nop
  403a98:	pop    ebp
  403a99:	adc    al,dl
  403a9b:	ds pop eax
  403a9d:	xor    DWORD PTR [ebx+0x64f680ab],ebp
  403aa3:	mov    al,ds:0xf1f06fe3
  403aa8:	lods   al,BYTE PTR ds:[esi]
  403aa9:	bound  edi,QWORD PTR ds:0x55fa02f9
  403aaf:	and    dh,bl
  403ab1:	sar    BYTE PTR [eax-0x22a1944c],0x1d
  403ab8:	test   eax,0x1c97c8c9
  403abd:	in     al,0x7c
  403abf:	jno    0x403a5e
  403ac1:	adc    esi,edi
  403ac3:	pop    ss
  403ac4:	cmp    DWORD PTR [esi+0x6f],0xe8afa16d
  403acb:	mov    BYTE PTR [eax+eax*4+0x19af91d5],ah
  403ad2:	sbb    al,0xe6
  403ad4:	outs   dx,DWORD PTR ds:[esi]
  403ad5:	xchg   ebx,eax
  403ad6:	ds retf 0x83f6
  403ada:	cmp    BYTE PTR [ebx+0x2a],bl
  403add:	cdq    
  403ade:	je     0x403a94
  403ae0:	iret   
  403ae1:	sbb    ah,ah
  403ae3:	sub    al,0x67
  403ae5:	pop    eax
  403ae6:	cmp    edi,eax
  403ae8:	pop    es
  403ae9:	xor    DWORD PTR es:[ebp-0x53],0xc3babcad
  403af1:	(bad)  
  403af2:	jmp    0x403afb
  403af4:	test   BYTE PTR [esi-0x2b6abaae],dh
  403afa:	int3   
  403afb:	push   ebx
  403afc:	mov    esi,0xc8a31fe
  403b01:	lods   al,BYTE PTR ds:[esi]
  403b02:	or     eax,0x5fdcd97c
  403b07:	sbb    eax,0x46692180
  403b0c:	(bad)  
  403b0d:	iret   
  403b0e:	adc    BYTE PTR [edx+0x77],ch
  403b11:	and    eax,0x398f46a9
  403b16:	test   eax,0x38e2f7c2
  403b1b:	in     eax,0xaf
  403b1d:	aam    0x1c
  403b1f:	xor    ecx,DWORD PTR ds:0x6188a04e
  403b25:	ja     0x403ac1
  403b27:	xchg   esi,eax
  403b28:	sub    cl,BYTE PTR ss:[ebp+0x2b]
  403b2c:	(bad)  
  403b2d:	xor    eax,esi
  403b2f:	cmp    eax,ecx
  403b31:	jne    0x403b8d
  403b37:	or     ecx,0x18fd
  403b3d:	mov    eax,DWORD PTR [ebp-0x8]
  403b40:	and    DWORD PTR ds:0x42916b,0x3a4c
  403b4a:	mov    ecx,DWORD PTR [ebp-0x10]
  403b4d:	adc    DWORD PTR ds:0x42916b,0x4291f3
  403b57:	xor    eax,esi
  403b59:	xor    DWORD PTR ds:0x4291d3,0x4291f7
  403b63:	xor    ecx,esi
  403b65:	sub    eax,ecx
  403b67:	sub    eax,edi
  403b69:	mov    ecx,DWORD PTR ds:0x429b4f
  403b6f:	mov    ecx,DWORD PTR [ecx]
  403b71:	xor    DWORD PTR ds:0x429163,ecx
  403b77:	xor    eax,esi
  403b79:	mov    DWORD PTR [ebp-0x8],eax
  403b7c:	mov    eax,DWORD PTR [ebp-0x10]
  403b7f:	xor    eax,esi
  403b81:	mov    ecx,0xffcd8d8d
  403b86:	sub    ecx,eax
  403b88:	jmp    0x403b9c
  403b8d:	mov    eax,DWORD PTR [ebp-0x10]
  403b90:	xor    eax,esi
  403b92:	mov    ecx,0xffcd8d0d
  403b97:	sub    ecx,eax
  403b99:	add    ecx,DWORD PTR [ebp-0xc]
  403b9c:	mov    DWORD PTR [ebp-0xc],ecx
  403b9f:	mov    eax,DWORD PTR [ebp-0x8]
  403ba2:	cmp    eax,0xf89c85a1
  403ba7:	jne    0x40158a
  403bad:	mov    DWORD PTR [ebp-0x34],0x9
  403bb4:	mov    ecx,DWORD PTR [ebp+0x8]
  403bb7:	xor    ecx,esi
  403bb9:	add    ecx,edi
  403bbb:	jmp    0x40857d
  403bc0:	lea    eax,[ecx+ebx*1]
  403bc3:	mov    DWORD PTR [ebp-0x2c],eax
  403bc6:	mov    eax,DWORD PTR [ebp-0x58]
  403bc9:	sub    eax,ecx
  403bcb:	mov    DWORD PTR [ebp-0x1c],eax
  403bce:	mov    eax,DWORD PTR [ebp-0x1c]
  403bd1:	mov    DWORD PTR [ebp-0x14],eax
  403bd4:	mov    eax,DWORD PTR [ebp-0x2c]
  403bd7:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  403bde:	mov    DWORD PTR [ebp-0x54],eax
  403be1:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  403be8:	mov    eax,DWORD PTR [ebp-0x38]
  403beb:	xor    eax,esi
  403bed:	add    eax,edi
  403bef:	mov    DWORD PTR [ebp-0x10],eax
  403bf2:	mov    eax,DWORD PTR [ebp-0x38]
  403bf5:	xor    eax,esi
  403bf7:	add    eax,edi
  403bf9:	mov    DWORD PTR [ebp-0x8],eax
  403bfc:	mov    DWORD PTR [ebp-0x2c],0xf89c8581
  403c03:	mov    DWORD PTR [ebp-0x44],0xf89c85b8
  403c0a:	mov    eax,DWORD PTR [ebp-0x38]
  403c0d:	mov    edx,DWORD PTR [ebp-0x14]
  403c10:	xor    eax,esi
  403c12:	add    eax,edi
  403c14:	cmp    edx,eax
  403c16:	je     0x408571
  403c1c:	mov    eax,DWORD PTR [ebp-0x20]
  403c1f:	xor    eax,esi
  403c21:	mov    edx,0xffcd8d0d
  403c26:	sub    edx,eax
  403c28:	add    edx,DWORD PTR [ebp-0x14]
  403c2b:	mov    eax,DWORD PTR [ebp-0x20]
  403c2e:	mov    ebx,DWORD PTR [ebp-0x10]
  403c31:	xor    eax,esi
  403c33:	add    eax,edi
  403c35:	imul   eax,ebx
  403c38:	cmp    eax,edx
  403c3a:	ja     0x40856e
  403c40:	mov    edx,DWORD PTR [ebp-0x10]
  403c43:	mov    eax,DWORD PTR [ebp-0x14]
  403c46:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c49:	sub    eax,edx
  403c4b:	xor    ebx,esi
  403c4d:	xor    edx,edx
  403c4f:	add    ebx,edi
  403c51:	div    ebx
  403c53:	mov    DWORD PTR [ebp-0x8],eax
  403c56:	mov    eax,DWORD PTR [ebp-0x44]
  403c59:	mov    edx,DWORD PTR [ebp-0x8]
  403c5c:	xor    eax,esi
  403c5e:	add    eax,edi
  403c60:	cmp    edx,eax
  403c62:	jbe    0x403c72
  403c68:	mov    eax,DWORD PTR [ebp-0x44]
  403c6b:	xor    eax,esi
  403c6d:	add    eax,edi
  403c6f:	mov    DWORD PTR [ebp-0x8],eax
  403c72:	mov    eax,DWORD PTR [ebp-0x2c]
  403c75:	mov    edx,DWORD PTR [ebp-0x8]
  403c78:	xor    eax,esi
  403c7a:	add    eax,edi
  403c7c:	imul   eax,edx
  403c7f:	mov    DWORD PTR [ebp-0x8],eax
  403c82:	mov    eax,DWORD PTR [ebp-0x38]
  403c85:	mov    edx,DWORD PTR [ebp-0x8]
  403c88:	jmp    0x406039
  403c8d:	mov    eax,0xa02c6f67
  403c92:	and    al,0xb8
  403c94:	out    0x12,eax
  403c96:	mov    bh,0x24
  403c98:	(bad)  [ebp-0x4c]
  403c9b:	outs   dx,DWORD PTR ds:[esi]
  403c9c:	fs out dx,eax
  403c9e:	pop    esp
  403c9f:	add    DWORD PTR [ebx-0x7c7ca311],0xffffffcc
  403ca6:	push   bx
  403ca8:	inc    eax
  403ca9:	nop
  403caa:	add    eax,0x5d8b9805
  403caf:	mov    ch,0xb7
  403cb1:	adc    dl,BYTE PTR [ecx+eax*4]
  403cb4:	fdivr  QWORD PTR [ecx+ebp*1+0x67e59dd3]
  403cbb:	in     eax,0x7c
  403cbd:	call   0xcd5d:0x5c3b8e9
  403cc4:	lahf   
  403cc5:	jno    0x403d25
  403cc7:	lahf   
  403cc8:	(bad)  
  403cc9:	loope  0x403ce3
  403ccb:	pop    edx
  403ccc:	sub    DWORD PTR [ecx-0x6ab730d3],eax
  403cd2:	add    DWORD PTR [edi-0x12652ef3],ebx
  403cd8:	jp     0x403cf7
  403cda:	xlat   BYTE PTR ds:[ebx]
  403cdb:	add    BYTE PTR [edx-0x60],bl
  403cde:	or     bh,ah
  403ce0:	mov    esi,0x5ed4a30d
  403ce5:	sbb    DWORD PTR [ecx+0x37],ebp
  403ce8:	mov    ebx,0x7cc6103d
  403ced:	cmp    ebx,edi
  403cef:	aam    0x13
  403cf1:	sbb    al,BYTE PTR [ecx+0x1eed4102]
  403cf7:	arpl   WORD PTR [eax+0x71ac7282],cx
  403cfd:	add    eax,0xfe5045bc
  403d02:	dec    eax
  403d03:	sbb    eax,0x1eaad979
  403d08:	aas    
  403d09:	or     bl,BYTE PTR ds:0xba87222
  403d0f:	dec    edi
  403d10:	(bad)  
  403d11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d12:	ins    DWORD PTR es:[edi],dx
  403d13:	jecxz  0x403cab
  403d15:	scas   al,BYTE PTR es:[edi]
  403d16:	mov    eax,0xefdf1a16
  403d1b:	outs   dx,BYTE PTR ds:[esi]
  403d1c:	cmc    
  403d1d:	in     al,0x3
  403d1f:	ret    
  403d20:	push   edi
  403d21:	mov    dh,0x4
  403d23:	pushf  
  403d24:	aas    
  403d25:	je     0x403d84
  403d27:	pop    ss
  403d28:	mov    edx,0xf80853aa
  403d2d:	or     al,0xb4
  403d2f:	cld    
  403d30:	aas    
  403d31:	xor    al,0x8a
  403d33:	jmp    0xe022:0x3d5e437a
  403d3a:	lea    ebx,[edx+edx*1]
  403d3d:	je     0x403d87
  403d3f:	mov    ch,0x4f
  403d41:	sahf   
  403d42:	push   eax
  403d43:	xor    al,0x69
  403d45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d46:	sub    ebp,DWORD PTR [esi-0x2d995e2f]
  403d4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d4d:	dec    ebp
  403d4e:	inc    edx
  403d4f:	dec    edx
  403d50:	xchg   esi,eax
  403d51:	fild   QWORD PTR [ebx]
  403d53:	retf   0x1385
  403d56:	jecxz  0x403d9c
  403d58:	mov    DWORD PTR [edx-0x6f],edx
  403d5b:	mov    eax,ds:0xb87006e9
  403d60:	xor    ecx,DWORD PTR [ecx+0x60]
  403d63:	xor    ch,ch
  403d65:	shr    DWORD PTR [edx-0x76],0x51
  403d69:	push   ebp
  403d6a:	int3   
  403d6b:	int3   
  403d6c:	push   esi
  403d6d:	ret    0xc2da
  403d70:	fnstsw WORD PTR [ebx+0x3d1aaa0d]
  403d76:	movlps QWORD PTR [ebp+0x4f],xmm3
  403d7a:	stos   BYTE PTR es:[edi],al
  403d7b:	pop    es
  403d7c:	out    0x1a,al
  403d7e:	mov    esp,0xa7ca2b70
  403d83:	in     al,dx
  403d84:	push   esp
  403d85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d87:	mov    eax,0xa3635b58
  403d8c:	in     eax,dx
  403d8d:	or     DWORD PTR [eax+0x6294e8],ebx
  403d93:	mov    eax,0x2371965b
  403d98:	sub    eax,0x68655112
  403d9d:	jmp    0xc540:0x5a01c6ca
  403da4:	cmp    dl,BYTE PTR [edx+0x6e260720]
  403daa:	popa   
  403dab:	inc    esp
  403dac:	xchg   BYTE PTR [edi-0x46930c35],bh
  403db2:	push   es
  403db3:	add    esi,edx
  403db5:	mov    edi,0x5571c99c
  403dba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dbb:	stos   BYTE PTR es:[edi],al
  403dbc:	adc    BYTE PTR cs:[edx+0x27],bh
  403dc0:	push   0x34ad08cd
  403dc5:	rol    BYTE PTR [ecx-0x53],1
  403dc8:	or     eax,0x258b270e
  403dcd:	push   es
  403dce:	loope  0x403db3
  403dd0:	inc    esp
  403dd1:	cli    
  403dd2:	and    ch,ah
  403dd4:	lahf   
  403dd5:	inc    eax
  403dd6:	add    edx,ebp
  403dd8:	dec    eax
  403dd9:	fild   DWORD PTR [esi-0x60]
  403ddc:	call   0x4c16:0xa83e3205
  403de3:	and    bh,BYTE PTR [ebp-0x1544afd9]
  403de9:	ins    DWORD PTR es:[edi],dx
  403dea:	scas   eax,DWORD PTR es:[edi]
  403deb:	xor    al,0x55
  403ded:	mov    esi,0xdd81df35
  403df2:	aam    0x64
  403df4:	adc    al,0x96
  403df6:	pop    esp
  403df7:	loop   0x403d90
  403df9:	out    0x10,eax
  403dfb:	lea    bp,[ecx]
  403dfe:	in     eax,0xb1
  403e00:	inc    edi
  403e01:	push   edx
  403e02:	inc    edi
  403e03:	addr16 fwait
  403e05:	lods   al,BYTE PTR es:[esi]
  403e07:	pop    esp
  403e08:	pushf  
  403e09:	mov    bl,0xe5
  403e0b:	outs   dx,BYTE PTR ds:[esi]
  403e0c:	retf   0x49b0
  403e0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e10:	pop    esp
  403e11:	rcr    cl,0x28
  403e14:	ja     0x403e64
  403e16:	xchg   BYTE PTR [edi+0x6247f48a],bh
  403e1c:	mov    edx,0x211dd23f
  403e21:	retf   0x5246
  403e24:	push   esi
  403e25:	(bad)  [edi+0x78]
  403e28:	cs je  0x403df3
  403e2b:	add    BYTE PTR [edx+eiz*8-0x49b36aba],bl
  403e32:	cld    
  403e33:	popa   
  403e34:	pop    edx
  403e35:	popa   
  403e36:	mov    eax,0x21c197e2
  403e3b:	mov    ecx,0x6128342a
  403e40:	pop    esp
  403e41:	sub    BYTE PTR [edi+0x1c],ah
  403e44:	(bad)  
  403e45:	xor    dl,BYTE PTR [ecx]
  403e47:	cmp    edx,DWORD PTR [eax+ebx*8-0x14]
  403e4b:	jecxz  0x403dfe
  403e4d:	loope  0x403ec9
  403e4f:	daa    
  403e50:	cmp    esi,esi
  403e52:	(bad)  
  403e53:	loop   0x403e72
  403e55:	in     eax,0x54
  403e57:	je     0x403ecf
  403e59:	mov    WORD PTR [ecx-0x54],?
  403e5c:	rcr    BYTE PTR [edx-0x223d55ad],0x1c
  403e63:	and    eax,0x2533f46a
  403e68:	inc    edi
  403e69:	inc    edi
  403e6a:	jae    0x403e9d
  403e6c:	inc    esp
  403e6d:	pushf  
  403e6e:	xor    eax,0x6d329311
  403e73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e74:	stos   DWORD PTR es:[edi],eax
  403e75:	or     esp,ecx
  403e77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e78:	push   edx
  403e79:	(bad)  
  403e7a:	psubusb mm0,QWORD PTR [eax-0x1b]
  403e7e:	adc    eax,0x489945f3
  403e83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e85:	mov    ecx,DWORD PTR [edi+0x1]
  403e88:	pop    esp
  403e89:	out    dx,eax
  403e8a:	cld    
  403e8b:	test   al,0x15
  403e8d:	xchg   edi,eax
  403e8e:	push   edx
  403e8f:	mov    eax,ds:0x665bf57
  403e94:	out    dx,al
  403e95:	jo     0x403f03
  403e97:	sbb    eax,0x225f602e
  403e9c:	repz or ecx,eax
  403e9f:	fwait
  403ea0:	pop    ecx
  403ea1:	xchg   ebp,eax
  403ea2:	lods   al,BYTE PTR ds:[esi]
  403ea3:	pop    ss
  403ea4:	fcomp  DWORD PTR [edi+0x59]
  403ea7:	fidivr WORD PTR [esi-0x672add34]
  403ead:	mov    eax,0x9edef092
  403eb2:	(bad)  
  403eb3:	ins    BYTE PTR es:[edi],dx
  403eb4:	mov    edi,0x7dbe8ba2
  403eb9:	jmp    0x403ee6
  403ebb:	repnz mov edi,0x5ba333b2
  403ec1:	call   0xf827:0xfb22a025
  403ec8:	cmp    eax,0xd6b324c5
  403ecd:	addr16 inc esi
  403ecf:	cmp    edi,0x5935c294
  403ed5:	sti    
  403ed6:	in     al,0xb0
  403ed8:	inc    ebp
  403ed9:	xor    cl,bl
  403edb:	and    al,0x2d
  403edd:	ftst   
  403edf:	(bad)  [esp+ebp*1+0x5b]
  403ee3:	ror    ecx,0x6e
  403ee6:	push   0xa2576628
  403eeb:	call   0xc3fd14a2
  403ef0:	mov    ds:0x7b6ff892,al
  403ef5:	jecxz  0x403e7f
  403ef7:	mov    ebx,0xa849a094
  403efc:	cmp    al,0x9
  403efe:	das    
  403eff:	jmp    0x7d7c:0x1d8f9413
  403f06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f07:	cmp    DWORD PTR [edi-0xc],edi
  403f0a:	int3   
  403f0b:	xchg   ebx,edi
  403f0d:	xchg   ecx,eax
  403f0e:	mov    ds:0x4a748fc8,eax
  403f13:	stos   DWORD PTR es:[edi],eax
  403f14:	call   0x26d5822e
  403f19:	(bad)  
  403f1a:	fnstsw WORD PTR [ebx+0x7aa5ddb9]
  403f20:	test   al,0xe
  403f22:	mov    ebp,0x38e45778
  403f27:	ficom  DWORD PTR [eax-0x25]
  403f2a:	xchg   esi,eax
  403f2b:	pop    esp
  403f2c:	mov    bl,0xee
  403f2e:	retf   0xde89
  403f31:	neg    BYTE PTR [edx]
  403f33:	ficomp DWORD PTR [edi-0xd]
  403f36:	call   0x120e94a2
  403f3b:	lea    esp,[ecx+0x59]
  403f3e:	aaa    
  403f3f:	in     eax,dx
  403f40:	imul   esi,DWORD PTR [edi+0x54],0xd8c05c0c
  403f47:	in     eax,0x78
  403f49:	xchg   DWORD PTR ds:0x6204462e,edi
  403f4f:	test   BYTE PTR ds:0xfaf2fd9,bh
  403f55:	sub    bh,BYTE PTR [ebx]
  403f57:	dec    eax
  403f58:	push   ss
  403f59:	xor    eax,0xf098d74d
  403f5e:	sub    ecx,DWORD PTR [ecx-0x2341e93]
  403f64:	jecxz  0x403fa8
  403f66:	mov    ch,dh
  403f68:	cmp    al,bh
  403f6a:	mov    BYTE PTR ds:0x95ddc90c,0xbb
  403f71:	jle    0x403fab
  403f73:	inc    ebp
  403f74:	bnd jnp 0x89c4b1a6
  403f7b:	sub    dh,BYTE PTR [esi]
  403f7d:	mov    ?,WORD PTR [edx-0x70]
  403f80:	ins    DWORD PTR es:[edi],dx
  403f81:	add    BYTE PTR [esi-0x1e],dl
  403f84:	dec    ebp
  403f85:	xchg   esp,eax
  403f86:	push   ss
  403f87:	adc    ch,BYTE PTR [eax-0x21]
  403f8a:	repnz push esp
  403f8c:	jno    0x403ff6
  403f8e:	js     0x403fd7
  403f90:	lods   eax,DWORD PTR ds:[esi]
  403f91:	jae    0x403f2a
  403f93:	out    0xbc,eax
  403f95:	mov    bl,0x16
  403f97:	fdiv   st,st(2)
  403f99:	cdq    
  403f9a:	repnz push 0x279de050
  403fa0:	call   0x62af:0x26acada9
  403fa7:	sbb    al,0x47
  403fa9:	addr16 (bad) 
  403fad:	pop    es
  403fae:	outs   dx,DWORD PTR ds:[esi]
  403faf:	mul    ah
  403fb1:	ficomp DWORD PTR [esi+0x5856dabd]
  403fb7:	mov    DWORD PTR [ebp-0x5f],eax
  403fba:	and    eax,0x810d1c9d
  403fbf:	ficomp WORD PTR [ecx-0x160716e9]
  403fc5:	add    al,0xe4
  403fc7:	jne    0x40403c
  403fc9:	loopne 0x403f4f
  403fcb:	or     al,0x4e
  403fcd:	add    ecx,DWORD PTR [eax-0x8df2a28]
  403fd3:	and    al,0x58
  403fd5:	shl    DWORD PTR [eax-0x13ef24f8],1
  403fdb:	jle    0x403fbc
  403fdd:	jae    0x40404b
  403fdf:	lea    eax,[ebp+0x5a40de43]
  403fe5:	push   esi
  403fe6:	jnp    0x403fc9
  403fe8:	mov    esi,0xc6563860
  403fed:	cmc    
  403fee:	jg     0x403f81
  403ff0:	or     BYTE PTR [eax+0x4f],al
  403ff3:	inc    edx
  403ff4:	jb     0x403fd9
  403ff6:	xor    DWORD PTR [ebp+0x4e51ccc4],ebp
  403ffc:	jne    0x403f8a
  403ffe:	(bad)  
  403fff:	cmp    DWORD PTR [edx-0x16a8efb3],edi
  404005:	das    
  404006:	mov    ch,0xc7
  404008:	or     BYTE PTR ds:0x152c3d6a,dh
  40400e:	pop    edi
  40400f:	or     ch,BYTE PTR ss:[eax+0x9]
  404013:	inc    esi
  404014:	sbb    eax,0x6120ba70
  404019:	cmp    bl,al
  40401b:	into   
  40401c:	inc    eax
  40401d:	mov    BYTE PTR [edx],ah
  40401f:	lods   al,BYTE PTR ds:[esi]
  404020:	retf   
  404021:	mov    edx,0xf1952895
  404026:	inc    ebx
  404027:	pop    esp
  404028:	and    DWORD PTR ds:0x9565fc4b,ebx
  40402e:	jnp    0x40408b
  404030:	xchg   edi,eax
  404031:	imul   ebx,DWORD PTR [edi-0x4b24910e],0xede0f68d
  40403b:	daa    
  40403c:	mov    bl,0xb6
  40403e:	sub    al,BYTE PTR [edi]
  404040:	push   es
  404041:	cmp    ebx,ebx
  404043:	scas   al,BYTE PTR es:[edi]
  404044:	xchg   ecx,eax
  404045:	arpl   WORD PTR [eax+edi*8],dx
  404048:	les    edi,FWORD PTR [ebp+0x427f03]
  40404e:	rcr    cl,0xff
  404051:	idiv   BYTE PTR [esi]
  404053:	cmp    BYTE PTR [edx-0x2d],bh
  404056:	nop
  404057:	push   esi
  404058:	push   edx
  404059:	mov    ds,WORD PTR [ebp-0x5f204236]
  40405f:	sub    ebp,edx
  404061:	mov    ds:0x1172acc5,eax
  404066:	push   0xed81d7c9
  40406b:	js     0x4040d4
  40406d:	test   al,0xb3
  40406f:	mov    ds:0x1a716f93,eax
  404074:	fwait
  404075:	inc    esi
  404076:	inc    eax
  404077:	loopne 0x404029
  404079:	aad    0xf5
  40407b:	or     dh,BYTE PTR [ecx]
  40407d:	pop    ss
  40407e:	mov    eax,ds:0x1d902bbf
  404083:	xchg   esp,eax
  404084:	(bad)  
  404085:	push   ecx
  404086:	add    DWORD PTR ds:0xa4318cd9,edi
  40408c:	retf   
  40408d:	adc    BYTE PTR [eax],cl
  40408f:	mov    cl,0xe4
  404091:	dec    esp
  404092:	and    eax,DWORD PTR [esi]
  404094:	xchg   ecx,eax
  404095:	loope  0x4040a6
  404097:	mul    ecx
  404099:	push   edi
  40409a:	mov    cl,0x26
  40409c:	cvttps2pi mm3,QWORD PTR [ecx-0x47]
  4040a0:	or     al,0x63
  4040a2:	sbb    DWORD PTR [edi+0x1e0240ef],0xe79db2b9
  4040ac:	iret   
  4040ad:	imul   ecx,DWORD PTR [edi-0x76],0x45bae006
  4040b4:	adc    bl,BYTE PTR [ebp-0x38]
  4040b7:	iret   
  4040b8:	xchg   ebx,eax
  4040b9:	js     0x40412e
  4040bb:	js     0x4040af
  4040bd:	aas    
  4040be:	clc    
  4040bf:	mov    esi,0x4e4ef0c2
  4040c4:	stos   BYTE PTR es:[edi],al
  4040c5:	mov    gs,WORD PTR [edi]
  4040c7:	jne    0x4040d4
  4040c9:	push   esi
  4040ca:	lahf   
  4040cb:	dec    DWORD PTR [ebp-0x2f]
  4040ce:	sub    edi,DWORD PTR [edx+0x253fed96]
  4040d4:	retf   
  4040d5:	shl    edi,1
  4040d7:	mov    edi,0x31a4a11b
  4040dc:	jecxz  0x40409b
  4040de:	pop    ebp
  4040df:	out    dx,eax
  4040e0:	fstp   TBYTE PTR [ecx]
  4040e2:	jmp    0x6262d6b3
  4040e7:	add    BYTE PTR [eax-0x418bdd01],0x23
  4040ee:	hlt    
  4040ef:	xchg   DWORD PTR [ebx-0x3677c751],ebp
  4040f5:	inc    edx
  4040f6:	rcr    DWORD PTR [eax+eiz*4+0x2e07da8d],cl
  4040fd:	add    esp,edx
  4040ff:	push   esp
  404100:	pop    edi
  404101:	mov    DWORD PTR [edi-0x17],0x1433165
  404108:	xchg   esi,eax
  404109:	dec    ecx
  40410a:	lahf   
  40410b:	in     eax,0x4e
  40410d:	or     eax,0x62b173f3
  404112:	shl    DWORD PTR [ecx],cl
  404114:	push   esi
  404115:	mov    ebx,0x802bc5c0
  40411a:	mov    ch,0x37
  40411d:	dec    ecx
  40411e:	shr    DWORD PTR [esi+0x6b],0x50
  404122:	ficom  DWORD PTR cs:[edx]
  404125:	jae    0x404111
  404127:	inc    ebp
  404128:	dec    esi
  404129:	out    dx,al
  40412a:	mov    bl,dl
  40412c:	pop    es
  40412d:	mov    ds:0x27daaf1a,al
  404132:	scas   eax,DWORD PTR es:[edi]
  404133:	jbe    0x404169
  404135:	cdq    
  404136:	pushf  
  404137:	cmp    BYTE PTR [ebx+0x1d4d8401],al
  40413d:	js     0x404151
  40413f:	dec    eax
  404140:	push   edi
  404141:	mov    ch,0x25
  404143:	inc    edx
  404144:	imul   esi,ebx,0xffffffb2
  404147:	xchg   esi,eax
  404148:	or     eax,0xe3375125
  40414d:	adc    eax,0x2bbe4aa9
  404152:	add    al,0x55
  404154:	add    eax,0x6aceec92
  404159:	pop    esp
  40415a:	(bad)  
  40415c:	lods   eax,DWORD PTR ds:[esi]
  40415d:	pop    eax
  40415e:	mov    ebp,0x346989df
  404163:	lock retf 0x4c4c
  404167:	imul   edi,DWORD PTR [esi+0x20eb2ff3],0x32
  40416e:	(bad)  
  404170:	(bad)  
  404171:	adc    BYTE PTR [esi],ch
  404173:	jae    0x4041b5
  404175:	das    
  404176:	repz xor al,BYTE PTR [ecx-0x6e]
  40417a:	xchg   ecx,eax
  40417b:	push   0x408e34c1
  404180:	sub    BYTE PTR [ebp-0x35],bh
  404183:	push   esi
  404184:	bound  ebx,QWORD PTR [eax+0x39230c06]
  40418a:	push   ds
  40418b:	loope  0x404200
  40418d:	or     BYTE PTR [edi],bh
  40418f:	mov    WORD PTR [eax-0x54],gs
  404192:	dec    esi
  404193:	aaa    
  404194:	inc    esi
  404195:	add    DWORD PTR [si-0x28],0xffffffaa
  40419a:	ret    0xcb8f
  40419d:	push   eax
  40419e:	sbb    BYTE PTR [ecx-0x27],ch
  4041a1:	mul    BYTE PTR [edx+0x65]
  4041a4:	test   bh,ah
  4041a6:	retf   
  4041a7:	imul   ebx,DWORD PTR [ebx+0x56],0x58
  4041ab:	sbb    BYTE PTR ds:[ebp+0x9dc6cf2],cl
  4041b2:	push   ebp
  4041b3:	les    esp,FWORD PTR [ecx-0x34e9104]
  4041b9:	bound  edx,QWORD PTR [ecx+0x24]
  4041bc:	xchg   edi,eax
  4041bd:	sub    eax,0xb4752976
  4041c2:	mov    eax,0xc6aa9e61
  4041c7:	inc    edi
  4041c8:	jg     0x40416a
  4041ca:	out    0x2d,eax
  4041cc:	out    0x8,al
  4041ce:	pop    es
  4041cf:	pushf  
  4041d0:	nop
  4041d1:	jmp    0xa3eea6f3
  4041d6:	adc    DWORD PTR [esp+eax*4],0xb
  4041da:	mov    esp,0x6571e3da
  4041df:	dec    esp
  4041e0:	pop    esi
  4041e1:	mov    DWORD PTR [esi-0x7371844a],esp
  4041e7:	sub    ecx,DWORD PTR [edi]
  4041e9:	scas   eax,DWORD PTR es:[edi]
  4041ea:	sub    edi,ecx
  4041ec:	xchg   ecx,eax
  4041ed:	(bad)
  4041f1:	sar    DWORD PTR [edx+0x5767f354],0x94
  4041f8:	std    
  4041f9:	mov    ebp,0x65d5499b
  4041fe:	jg     0x40425c
  404200:	cmp    ebp,edx
  404202:	push   eax
  404203:	pop    esp
  404204:	dec    DWORD PTR [ecx]
  404206:	sub    bh,BYTE PTR [eax-0x13e6a600]
  40420c:	and    eax,0xf5abcb3d
  404211:	cmc    
  404212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404213:	push   edx
  404214:	adc    DWORD PTR [edi-0xed87ff],edi
  40421a:	ds jae 0x404250
  40421d:	push   0xa742a1f5
  404222:	mov    dh,0x85
  404224:	jne    0x40426f
  404226:	mov    edx,0xe881ae27
  40422b:	xor    DWORD PTR [edi-0x5b8d496f],ebp
  404231:	or     al,0x97
  404233:	mov    dh,0x44
  404235:	add    eax,0x4b40a919
  40423a:	loop   0x4041f7
  40423c:	out    dx,eax
  40423d:	and    DWORD PTR [ecx-0x67],ebx
  404240:	xor    eax,0x2655f064
  404245:	jo     0x404217
  404247:	(bad)  
  404248:	push   cs
  404249:	lods   eax,DWORD PTR ds:[esi]
  40424a:	add    ch,BYTE PTR [ebx+eiz*8+0x5d807db6]
  404251:	fcomp  DWORD PTR [edx-0x1eb91bfb]
  404257:	pop    esi
  404258:	lods   al,BYTE PTR ds:[esi]
  404259:	imul   eax
  40425b:	sub    BYTE PTR [edi-0x21fa21d6],cl
  404261:	dec    ebx
  404262:	cmp    al,0x19
  404264:	cmp    edi,eax
  404266:	dec    ebp
  404267:	sub    eax,0xd8cad33a
  40426c:	push   0xa
  40426e:	adc    cl,cl
  404270:	aaa    
  404271:	lock jb 0x40422c
  404274:	cwde   
  404275:	pusha  
  404276:	addr16 jle 0x404204
  404279:	test   eax,0x30c92358
  40427e:	call   0xaee5a3fe
  404283:	dec    ebp
  404284:	cmp    ebx,DWORD PTR [edi-0x4f]
  404287:	jmp    0x6c89cef
  40428c:	mov    ecx,0x124fc7a3
  404291:	add    dh,BYTE PTR [ecx+0x2ecffb5e]
  404297:	xchg   ecx,esi
  404299:	dec    ax
  40429b:	jge    0x4042fb
  40429d:	test   DWORD PTR [ecx+0x38dc0af3],ecx
  4042a3:	(bad)  
  4042a4:	cmp    edx,ecx
  4042a6:	inc    esi
  4042a7:	enter  0x9933,0x9
  4042ab:	enter  0x8106,0x0
  4042af:	or     al,0x90
  4042b1:	mov    ch,0x62
  4042b3:	in     eax,0x6d
  4042b5:	arpl   bx,sp
  4042b7:	out    dx,al
  4042b8:	bound  ebp,QWORD PTR [esi]
  4042ba:	sub    esp,edi
  4042bc:	je     0x4042ca
  4042be:	xor    eax,0x378331e3
  4042c3:	or     dl,ah
  4042c5:	out    dx,al
  4042c6:	jno    0x404289
  4042c8:	ret    
  4042c9:	sub    ah,bl
  4042cb:	and    ecx,eax
  4042cd:	setne  BYTE PTR [eax]
  4042d0:	out    dx,al
  4042d1:	cli    
  4042d2:	arpl   WORD PTR [edx],sp
  4042d4:	sub    al,0x44
  4042d6:	clc    
  4042d7:	retf   
  4042d8:	lds    eax,FWORD PTR [ecx]
  4042da:	loop   0x404357
  4042dc:	xor    eax,0xcc8df637
  4042e1:	sub    BYTE PTR [eax+0x6d57340d],dh
  4042e7:	ficom  WORD PTR [ecx-0x78]
  4042ea:	pop    ebx
  4042eb:	ret    
  4042ec:	and    al,0x22
  4042ee:	sbb    ebp,DWORD PTR [ebx-0xc3a33fa]
  4042f4:	je     0x404287
  4042f6:	es arpl di,dx
  4042f9:	dec    edi
  4042fa:	fdiv   DWORD PTR [ebp-0x1e54966c]
  404300:	inc    eax
  404301:	fwait
  404302:	gs jle 0x404347
  404305:	xchg   DWORD PTR [ebp+0xd],eax
  404308:	sbb    esi,DWORD PTR [esi+esi*1]
  40430b:	jl     0x404326
  40430d:	retf   
  40430e:	push   ebp
  40430f:	nop
  404310:	adc    BYTE PTR [eax],al
  404312:	inc    esi
  404313:	and    BYTE PTR [eax+0x6a],dl
  404316:	adc    edi,DWORD PTR [esi+ebx*2+0x6b]
  40431a:	dec    edi
  40431b:	daa    
  40431c:	push   0x62b2bb0c
  404321:	pop    edi
  404322:	shl    esp,cl
  404324:	xor    DWORD PTR [esi-0x33],ebx
  404327:	add    eax,0x302f1b26
  40432c:	jne    0x404339
  40432e:	int3   
  40432f:	pop    ecx
  404330:	(bad)  
  404331:	or     al,0x28
  404333:	xor    ch,dl
  404335:	daa    
  404336:	test   eax,edi
  404338:	mov    ah,0x73
  40433a:	xor    DWORD PTR [ecx+0x1a],edx
  40433d:	rcl    DWORD PTR [esi],0x7a
  404340:	jns    0x40430d
  404342:	and    dh,BYTE PTR [esp+ecx*1-0x44edf07e]
  404349:	pop    ecx
  40434a:	leave  
  40434b:	xor    al,0x30
  40434d:	jne    0x404301
  40434f:	cmp    DWORD PTR [ebx+0x19],esp
  404352:	jo     0x4043c2
  404354:	enter  0x5d4f,0x9a
  404358:	jle    0x404306
  40435a:	and    edx,DWORD PTR [esi+0x4f]
  40435d:	jecxz  0x404388
  40435f:	pop    edx
  404360:	loop   0x404328
  404362:	mov    al,0xfd
  404364:	pop    esp
  404365:	in     al,0x26
  404367:	fcmovnb st,st(6)
  404369:	mov    ds:0x6ddb3fbe,eax
  40436e:	out    0x4f,al
  404370:	mov    edx,0xe2155dad
  404375:	mov    ebp,0x6fa1961c
  40437a:	jnp    0x40432d
  40437c:	sub    DWORD PTR [eax],esi
  40437e:	mov    ecx,0xe44ad0a
  404383:	dec    esi
  404384:	mov    dh,0xf6
  404386:	addr16 mov al,0xfd
  404389:	mov    ecx,0xa73eda60
  40438e:	jle    0x40431a
  404390:	jns    0x404321
  404392:	xchg   ebx,edx
  404394:	push   ds
  404395:	pusha  
  404396:	mov    esp,0xb65a8ea4
  40439b:	push   0x443236a9
  4043a0:	ret    0xe0f6
  4043a3:	in     al,0x99
  4043a5:	mov    ecx,0xc6dd24a4
  4043aa:	mov    ds:0x9e6d260f,eax
  4043af:	jp     0x404341
  4043b1:	xchg   ebx,eax
  4043b2:	lods   al,BYTE PTR ds:[esi]
  4043b3:	push   ss
  4043b4:	fsubr  QWORD PTR [eax+0x74]
  4043b7:	and    al,0x94
  4043b9:	lods   eax,DWORD PTR ds:[esi]
  4043ba:	xor    BYTE PTR [eax+ebp*4],0xf6
  4043be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043bf:	pop    eax
  4043c0:	inc    edx
  4043c1:	dec    edi
  4043c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043c3:	mov    ebx,0xd28cd143
  4043c8:	dec    esi
  4043c9:	stc    
  4043ca:	xor    DWORD PTR [esi+0x261cb005],ebp
  4043d0:	mov    bh,0x8d
  4043d2:	cdq    
  4043d3:	fsub   QWORD PTR [eax+0x1c993b51]
  4043d9:	mov    ?,WORD PTR ds:0x80ef53db
  4043df:	inc    edx
  4043e0:	mov    ch,0xe5
  4043e2:	iret   
  4043e3:	ret    
  4043e4:	pushf  
  4043e5:	mov    esp,0xb570607d
  4043ea:	popf   
  4043eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043ec:	pop    ds
  4043ed:	js     0x4043e3
  4043ef:	xor    eax,0x4ee3c633
  4043f4:	in     al,dx
  4043f5:	sbb    al,0xf9
  4043f7:	iret   
  4043f8:	pop    ds
  4043f9:	xchg   DWORD PTR [eax+0x525640a9],ecx
  4043ff:	scas   eax,DWORD PTR es:[edi]
  404400:	test   DWORD PTR [ebx+0x5f],edx
  404403:	or     BYTE PTR [ecx],ah
  404405:	cmp    eax,0x51b02fb1
  40440a:	scas   eax,DWORD PTR es:[edi]
  40440b:	mov    bh,0x74
  40440d:	mov    eax,0xf643b46e
  404412:	mov    ds:0xe82d04d4,eax
  404417:	dec    eax
  404418:	sub    eax,0xf45e82ee
  40441d:	xchg   ebx,eax
  40441e:	test   DWORD PTR [ebp-0x3a],edi
  404421:	mov    ax,0xf2a4
  404425:	fnsave [eax-0x79]
  404428:	push   0xffffffc6
  40442a:	dec    edx
  40442b:	out    dx,eax
  40442c:	xchg   BYTE PTR [ebp+0x32],al
  40442f:	call   0xa9464bfd
  404434:	ss or  ecx,ecx
  404437:	stc    
  404438:	out    dx,al
  404439:	push   edi
  40443a:	fdivr  st,st(5)
  40443c:	dec    edx
  40443d:	dec    ebp
  40443e:	add    al,0xfa
  404440:	push   es
  404441:	js     0x404432
  404443:	mov    DWORD PTR [eax+ecx*1-0x6505d55f],edx
  40444a:	enter  0xda4b,0x93
  40444e:	loop   0x4044ad
  404450:	outs   dx,BYTE PTR ds:[esi]
  404451:	mov    eax,ds:0xbb446251
  404456:	xchg   DWORD PTR [edx-0x12],ebp
  404459:	pop    esi
  40445a:	hlt    
  40445b:	mov    ebx,ecx
  40445d:	push   ecx
  40445e:	call   0x24fc:0x8a1124e6
  404465:	shl    DWORD PTR [edx+edx*8+0x53a9af5f],1
  40446c:	push   cs
  40446d:	adc    BYTE PTR [esi-0x58],dh
  404470:	sahf   
  404471:	xchg   esi,eax
  404472:	mov    ah,BYTE PTR [edx+0x39081d5]
  404478:	arpl   WORD PTR [ebx-0x3],bx
  40447b:	mov    ds:0x2249b133,al
  404480:	xchg   esp,eax
  404481:	int3   
  404482:	mov    ecx,0x8778adad
  404487:	mov    ah,0xa9
  404489:	sub    WORD PTR [edx],cx
  40448c:	aaa    
  40448d:	dec    ebp
  40448e:	push   ebp
  40448f:	xor    ch,BYTE PTR [eax+0x1c]
  404492:	call   0xecf1fc0f
  404497:	or     ecx,ebp
  404499:	adc    BYTE PTR [esi],al
  40449b:	jmp    0x404421
  40449d:	cmp    bl,BYTE PTR [edi]
  40449f:	mov    eax,0x9da329d9
  4044a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044a5:	arpl   si,si
  4044a7:	cld    
  4044a8:	xchg   DWORD PTR [eax],esp
  4044aa:	adc    ebx,DWORD PTR [ebx+0xdd4b929]
  4044b0:	fisttp DWORD PTR [ecx-0x6b]
  4044b3:	and    eax,0xa1807278
  4044b8:	aam    0x0
  4044ba:	jmp    0x4044ae
  4044bc:	popa   
  4044bd:	mov    al,0x9
  4044bf:	mov    bl,0x9e
  4044c1:	xchg   ebx,eax
  4044c2:	sbb    al,0x7b
  4044c4:	xchg   ebp,eax
  4044c5:	xor    eax,0x70475bab
  4044ca:	inc    ebp
  4044cb:	mov    esi,0x6a604d36
  4044d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044d1:	inc    eax
  4044d2:	jp     0x40446b
  4044d4:	lahf   
  4044d5:	ss mov ah,0x31
  4044d8:	sub    al,0x1c
  4044da:	and    DWORD PTR [ecx+0x11],esp
  4044dd:	mov    cs,WORD PTR [esi-0x68]
  4044e0:	lods   al,BYTE PTR ds:[esi]
  4044e1:	icebp  
  4044e2:	in     eax,0x38
  4044e4:	ss sbb eax,eax
  4044e7:	lock sbb BYTE PTR [eax-0x26853a3c],bl
  4044ee:	daa    
  4044ef:	pop    edx
  4044f0:	mov    ebp,0xd5d058f9
  4044f5:	sub    eax,0xb14c0c36
  4044fa:	xor    al,0x3b
  4044fc:	sti    
  4044fd:	jbe    0x4044c6
  4044ff:	icebp  
  404500:	xchg   esi,eax
  404501:	gs mov ebx,esp
  404504:	pop    ds
  404505:	stc    
  404506:	pop    eax
  404507:	fwait
  404508:	into   
  404509:	popa   
  40450a:	rcr    cl,1
  40450c:	cmp    al,0xff
  40450e:	mov    al,ds:0xe8e1deb8
  404513:	ins    BYTE PTR es:[edi],dx
  404514:	scas   al,BYTE PTR es:[edi]
  404515:	jns    0x404524
  404517:	xchg   ecx,eax
  404518:	add    ch,BYTE PTR [esi]
  40451a:	sub    dl,BYTE PTR [edx+0x6e]
  40451d:	cmp    eax,0xc2e892cb
  404522:	sbb    al,0xc6
  404524:	mov    bh,0x28
  404526:	xchg   eax,esp
  404528:	and    esi,esi
  40452a:	push   cx
  40452c:	adc    BYTE PTR [eax],ch
  40452e:	inc    edx
  40452f:	add    eax,0x892c260
  404534:	fwait
  404535:	jbe    0x404515
  404537:	dec    esp
  404538:	(bad)  
  404539:	mov    ecx,0x221d8462
  40453e:	sbb    esi,ebp
  404540:	xlat   BYTE PTR ds:[ebx]
  404541:	in     al,dx
  404542:	inc    edx
  404543:	fild   WORD PTR [ecx-0x32b2663d]
  404549:	cld    
  40454a:	into   
  40454b:	ins    BYTE PTR es:[edi],dx
  40454c:	sub    BYTE PTR [esi+esi*1-0x119bff48],cl
  404553:	call   0x204ea636
  404558:	pop    edi
  404559:	jno    0x40453c
  40455b:	(bad)  
  40455c:	sub    bh,dl
  40455e:	stc    
  40455f:	dec    ecx
  404560:	jmp    0x6503833
  404565:	es jb  0x40459d
  404568:	pop    esi
  404569:	es and dl,dl
  40456c:	(bad)  
  40456d:	out    0x6b,al
  40456f:	pop    ebx
  404570:	pop    edi
  404571:	xchg   edi,eax
  404572:	int    0xc
  404574:	adc    ebx,ebp
  404576:	mov    ds:0x5d7b459a,al
  40457b:	push   ss
  40457c:	push   ecx
  40457d:	sub    bh,BYTE PTR [ecx-0xa]
  404580:	xor    DWORD PTR [edi+0x8],edi
  404583:	or     al,0x53
  404585:	jae    0x4045da
  404587:	call   0x332d442e
  40458c:	mov    ah,0x56
  40458e:	mov    edi,0xbae0ff68
  404593:	daa    
  404594:	(bad)  [edx-0x78]
  404597:	add    eax,ebx
  404599:	inc    esi
  40459a:	fdivr  QWORD PTR [eax]
  40459c:	ret    
  40459d:	clc    
  40459e:	dec    edx
  40459f:	cmp    ebp,esi
  4045a1:	mov    DWORD PTR [ebp-0xe],esi
  4045a4:	daa    
  4045a5:	sbb    BYTE PTR ds:0xed05287e,dh
  4045ab:	mov    esp,0xced447be
  4045b0:	and    eax,0x2c6e854a
  4045b5:	cwde   
  4045b6:	rcr    BYTE PTR [eax-0x586fe833],0xd2
  4045bd:	dec    ecx
  4045be:	or     DWORD PTR [eax],0x77af3bfb
  4045c4:	je     0x404581
  4045c6:	inc    edi
  4045c7:	jecxz  0x4045e9
  4045c9:	into   
  4045ca:	loope  0x4045ad
  4045cc:	mov    eax,ds:0x2e283ef7
  4045d1:	jmp    0x361c5830
  4045d6:	xchg   ebx,eax
  4045d7:	cmp    esp,DWORD PTR [ebp+0x511f2025]
  4045dd:	and    eax,0x362f2562
  4045e2:	mov    edx,0x74c2671a
  4045e7:	mov    BYTE PTR [esi-0x5b850b53],cl
  4045ed:	in     eax,0xc5
  4045ef:	retf   0xb3a6
  4045f2:	daa    
  4045f3:	or     DWORD PTR [edx-0x22],esi
  4045f6:	dec    esi
  4045f7:	hlt    
  4045f8:	push   edx
  4045f9:	outs   dx,DWORD PTR ds:[esi]
  4045fa:	repnz into 
  4045fc:	lds    edx,FWORD PTR [eax]
  4045fe:	sbb    dh,BYTE PTR [eax-0x4a]
  404601:	sbb    BYTE PTR [ecx-0x2c],al
  404604:	adc    bh,al
  404606:	jbe    0x4045c5
  404608:	rol    ecx,cl
  40460a:	aad    0xc
  40460c:	fmul   st(5),st
  40460e:	ss enter 0x9367,0xd7
  404613:	loope  0x404675
  404615:	jecxz  0x404659
  404617:	popa   
  404618:	cli    
  404619:	imul   ebx,esp,0x889e191f
  40461f:	clc    
  404620:	sub    eax,eax
  404622:	adc    eax,DWORD PTR [edi]
  404624:	outs   dx,DWORD PTR ds:[esi]
  404625:	cmp    al,dl
  404627:	je     0x40465e
  404629:	cmovl  ebp,DWORD PTR [eax-0x47]
  40462d:	mov    edi,0xea26488e
  404632:	adc    esp,DWORD PTR [eax-0x14]
  404635:	rol    DWORD PTR [eax],0x68
  404638:	int    0xb2
  40463a:	data16 lahf 
  40463c:	adc    BYTE PTR [esi-0x4de581ce],bl
  404642:	icebp  
  404643:	xor    eax,0x880b365a
  404648:	mov    ch,cl
  40464a:	mov    bl,0xcf
  40464c:	sbb    edi,DWORD PTR [esi]
  40464e:	je     0x4045f4
  404650:	(bad)  
  404651:	sbb    ebx,DWORD PTR [edi+0x37054804]
  404657:	or     eax,0x802d10e9
  40465c:	pop    ds
  40465d:	les    ebx,FWORD PTR [ecx+0x73]
  404660:	inc    ecx
  404661:	int3   
  404662:	and    al,0xd5
  404664:	std    
  404665:	jge    0x4046bb
  404667:	mov    cl,0x31
  404669:	inc    ebp
  40466a:	dec    BYTE PTR [edi+0x75fb6d59]
  404670:	sub    edi,DWORD PTR [edx+0x4de46a28]
  404676:	loopne 0x4046af
  404678:	push   0x22ce2555
  40467d:	pop    eax
  40467e:	shl    DWORD PTR [ecx+0x2],1
  404681:	lods   eax,DWORD PTR ds:[esi]
  404682:	lahf   
  404683:	and    DWORD PTR [ebx+0x223296b3],esi
  404689:	or     dh,BYTE PTR [ecx]
  40468b:	inc    edi
  40468c:	daa    
  40468d:	or     BYTE PTR [esi+ebx*2-0x6c],0xd5
  404692:	bound  ebx,QWORD PTR [edx+0x6d52c953]
  404698:	fldcw  WORD PTR [ebx]
  40469a:	mov    dl,ch
  40469c:	adc    DWORD PTR [esi],0x763e9df
  4046a2:	int3   
  4046a3:	jle    0x4046a7
  4046a5:	xchg   esp,eax
  4046a6:	stos   BYTE PTR es:[edi],al
  4046a7:	push   ecx
  4046a8:	aaa    
  4046a9:	xor    eax,0xb36b3edd
  4046ae:	fdivr  st,st(1)
  4046b0:	ret    0x63f3
  4046b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046b4:	scas   al,BYTE PTR es:[edi]
  4046b5:	(bad)
  4046b8:	xchg   ebp,eax
  4046b9:	mov    al,ds:0xc562060a
  4046be:	xchg   edx,eax
  4046bf:	aam    0x4a
  4046c1:	les    ebx,FWORD PTR [ebp+0x47]
  4046c4:	pop    ebp
  4046c5:	sub    eax,0x9d4be8f2
  4046ca:	jns    0x4046b4
  4046cc:	cwde   
  4046cd:	add    ecx,DWORD PTR [ecx+0x34]
  4046d0:	inc    ebp
  4046d1:	mov    esi,0xbb1bca9d
  4046d6:	mov    ch,0xf2
  4046d8:	jb     0x4046ed
  4046da:	rcr    ah,1
  4046dc:	es (bad) 
  4046de:	cmc    
  4046df:	retf   
  4046e0:	inc    ebp
  4046e1:	inc    ebx
  4046e2:	and    BYTE PTR [esi-0x59c2a915],bh
  4046e8:	stc    
  4046e9:	dec    ebp
  4046ea:	stc    
  4046eb:	jo     0x4046e6
  4046ed:	push   0x301b3d8e
  4046f2:	sub    al,0xad
  4046f4:	mov    al,0xef
  4046f6:	ss fwait
  4046f8:	push   ds
  4046f9:	outs   dx,BYTE PTR ds:[esi]
  4046fa:	or     DWORD PTR [edx],edi
  4046fc:	dec    ebx
  4046fd:	or     ah,dl
  4046ff:	(bad)  
  404700:	and    esi,edx
  404702:	sub    al,0x6
  404704:	pop    ds
  404705:	gs jmp 0x2c15:0xec5eeeb3
  40470d:	sub    ebx,ebx
  40470f:	imul   esp,DWORD PTR [esp+esi*8],0x31
  404713:	pop    eax
  404714:	sbb    DWORD PTR [eax],esp
  404716:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404717:	or     eax,0xaca40ffb
  40471c:	outs   dx,DWORD PTR ds:[esi]
  40471d:	popf   
  40471e:	sti    
  40471f:	pop    eax
  404720:	push   ds
  404721:	mul    BYTE PTR [edi+eiz*4+0x47]
  404725:	aaa    
  404726:	call   FWORD PTR [ecx]
  404728:	jmp    0x4fc9:0x94b61fae
  40472f:	cmp    eax,0x83540f4b
  404734:	add    eax,0x630e7398
  404739:	lds    eax,FWORD PTR [esi+ecx*1-0x22344a94]
  404740:	xor    BYTE PTR [ebp+0x5c67c77c],0x7c
  404747:	mov    ds:0xc5d88646,al
  40474c:	js     0x4046d5
  40474e:	data16 cli 
  404750:	in     al,0xa9
  404752:	(bad)
  404755:	out    0x1f,al
  404757:	lea    ebp,[eax-0x30]
  40475a:	rcl    DWORD PTR [edi-0x58],1
  40475d:	es je  0x40470b
  404760:	add    DWORD PTR ds:0x9b50180d,ebx
  404766:	or     al,0xf9
  404768:	fsub   QWORD PTR [eax+edi*4-0x55f659f1]
  40476f:	mov    bl,0x74
  404771:	in     al,0x6
  404773:	and    BYTE PTR [esi-0x644d8bea],ah
  404779:	mov    ch,0x3d
  40477b:	push   es
  40477c:	and    ebx,DWORD PTR [edx-0x31]
  40477f:	push   0xbaa5d633
  404784:	lods   eax,DWORD PTR ds:[esi]
  404785:	dec    ecx
  404786:	push   ebx
  404787:	into   
  404788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404789:	push   ebp
  40478a:	or     eax,DWORD PTR [eax+0x40]
  40478d:	mov    BYTE PTR [ebx-0x24],dh
  404790:	mov    edi,0x62f56543
  404795:	adc    eax,0xfc18c9c7
  40479a:	mov    dh,0x89
  40479c:	fmul   st,st(0)
  40479e:	jno    0x40476e
  4047a0:	adc    DWORD PTR [ebp+0x4462f818],ebx
  4047a6:	dec    esi
  4047a7:	ja     0x40475c
  4047a9:	jp     0x4047ae
  4047ab:	sub    edx,ebp
  4047ad:	push   es
  4047ae:	mov    ds:0x4deccd59,al
  4047b3:	cmp    bh,BYTE PTR [ecx-0x34]
  4047b6:	fst    QWORD PTR ss:[eax]
  4047b9:	call   0xb6fa:0xbdf54479
  4047c0:	call   0x4793:0x4abf1a4a
  4047c7:	lahf   
  4047c8:	outs   dx,BYTE PTR ds:[esi]
  4047c9:	mov    cl,0x95
  4047cb:	xor    al,0x81
  4047cd:	adc    dl,BYTE PTR [esp+eax*4+0x1e]
  4047d1:	jbe    0x404790
  4047d3:	push   cs
  4047d4:	outs   dx,DWORD PTR ds:[esi]
  4047d5:	mov    bl,0xfd
  4047d7:	push   ebp
  4047d8:	xchg   ebx,eax
  4047d9:	xor    edx,esp
  4047db:	outs   dx,BYTE PTR ds:[esi]
  4047dc:	pop    esp
  4047dd:	std    
  4047de:	pop    ecx
  4047df:	dec    esi
  4047e0:	pop    ebp
  4047e1:	and    al,0x9f
  4047e3:	daa    
  4047e4:	div    BYTE PTR [ecx+0x7676f201]
  4047ea:	sub    eax,DWORD PTR [ebx]
  4047ec:	arpl   sp,cx
  4047ee:	lods   al,BYTE PTR ds:[esi]
  4047ef:	in     eax,0x7e
  4047f1:	dec    edx
  4047f2:	call   0xceab:0x310fc660
  4047f9:	push   0xfffffff4
  4047fb:	xor    ah,0xf1
  4047fe:	inc    edi
  4047ff:	inc    esi
  404800:	fidivr DWORD PTR ds:0xee5a5bc6
  404806:	xlat   BYTE PTR ds:[ebx]
  404807:	ss ins DWORD PTR es:[edi],dx
  404809:	mov    WORD PTR [eax+0x8],gs
  40480c:	int3   
  40480d:	jmp    0x4047ea
  40480f:	call   0xb22e603b
  404814:	sbb    esi,esp
  404816:	mov    dh,0x1f
  404818:	sbb    bh,BYTE PTR [ecx-0x39]
  40481b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40481c:	sbb    eax,0x281c29f5
  404821:	(bad)  
  404822:	adc    eax,0xf071bb9a
  404827:	xchg   BYTE PTR [esi+0x7a4055ec],al
  40482d:	xchg   edx,eax
  40482e:	and    eax,edx
  404830:	pushf  
  404831:	add    BYTE PTR [ebp+ebp*4-0x34a9d09a],0x73
  404839:	cmp    bl,bl
  40483b:	(bad)
  40483e:	ins    BYTE PTR es:[edi],dx
  40483f:	loope  0x40485d
  404841:	stos   DWORD PTR es:[edi],eax
  404842:	daa    
  404843:	pop    edx
  404844:	inc    esi
  404845:	xchg   edi,eax
  404846:	jmp    0x4048ab
  404848:	mov    cl,0xf9
  40484a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40484b:	shl    DWORD PTR [edi-0x6fc7cdc4],1
  404851:	cld    
  404852:	arpl   WORD PTR [esp+ebp*4+0x2ea5e61b],sp
  404859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40485a:	dec    ebp
  40485b:	mov    ds:0x17d764fe,al
  404860:	aaa    
  404861:	add    al,0x34
  404863:	fistp  DWORD PTR [edi-0x4c]
  404866:	dec    edx
  404867:	dec    esp
  404868:	(bad)  
  404869:	sub    BYTE PTR [esi-0x61],ah
  40486c:	imul   ecx,DWORD PTR [eax+edx*2],0x67
  404870:	sub    edx,DWORD PTR [ebp+0x6278e06c]
  404876:	add    ah,ah
  404878:	dec    BYTE PTR [esi*8+0x1df8ce56]
  40487f:	dec    ecx
  404880:	call   0x4e5:0x105f6364
  404887:	loop   0x40485d
  404889:	add    BYTE PTR [ecx],dh
  40488b:	add    ch,cl
  40488d:	rcr    BYTE PTR [edx],0x5a
  404890:	fwait
  404891:	das    
  404892:	aad    0x31
  404894:	sub    ah,ah
  404896:	adc    al,0xd6
  404898:	outs   dx,DWORD PTR ds:[esi]
  404899:	adc    eax,0x4e577264
  40489e:	out    0x95,al
  4048a0:	outs   dx,DWORD PTR ds:[esi]
  4048a1:	and    BYTE PTR [ecx+0x785b3ae],bh
  4048a7:	ret    
  4048a8:	pop    ds
  4048a9:	(bad)  
  4048aa:	(bad)  
  4048ab:	stc    
  4048ac:	ror    DWORD PTR [edx-0x1209cc46],cl
  4048b2:	clc    
  4048b3:	imul   ecx,ebx,0xffffffa0
  4048b6:	adc    ebp,edx
  4048b8:	jg     0x404901
  4048ba:	pop    bp
  4048bc:	ss mov edi,0xc2ffc8d8
  4048c2:	fs push esi
  4048c4:	ror    ah,cl
  4048c6:	xor    dh,BYTE PTR [edx+0x7a]
  4048c9:	dec    dh
  4048cb:	inc    DWORD PTR [ebp+0x5a]
  4048ce:	fs add eax,0xc70144c7
  4048d4:	mov    esp,0x61d384f3
  4048d9:	dec    ecx
  4048da:	cmp    BYTE PTR [eax+eiz*4],ah
  4048dd:	out    0x76,eax
  4048df:	mov    ebp,0xbf470a04
  4048e4:	mov    DWORD PTR [ebx],0x7705bfe8
  4048ea:	mov    ds:0x1a5656f1,eax
  4048ef:	shr    esp,cl
  4048f1:	mov    esp,0x920ffb36
  4048f6:	test   al,0xdd
  4048f8:	popf   
  4048f9:	or     eax,0xf6b5a345
  4048fe:	imul   BYTE PTR [eax-0x47]
  404901:	mov    eax,0x97050945
  404906:	xchg   ebp,eax
  404907:	mov    ebp,0x47b45bdf
  40490c:	mov    WORD PTR [eax+0x1b641856],?
  404912:	dec    ebp
  404913:	push   ebx
  404914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404915:	test   al,ah
  404917:	inc    ebp
  404918:	mov    ah,0x48
  40491a:	jg     0x404900
  40491c:	and    eax,0xa4c318da
  404921:	cmp    DWORD PTR [edx+esi*4+0x76],esi
  404925:	stos   BYTE PTR es:[edi],al
  404926:	mov    esp,0xbe2d79a
  40492b:	dec    edi
  40492c:	adc    DWORD PTR [ecx],0x59
  40492f:	ja     0x40492d
  404931:	xchg   ebp,eax
  404932:	xchg   esi,eax
  404933:	cmp    al,0x3b
  404935:	outs   dx,DWORD PTR ds:[esi]
  404936:	or     DWORD PTR [eax],ebp
  404938:	outs   dx,DWORD PTR fs:[esi]
  40493a:	and    DWORD PTR [ebx+0x2c],ebp
  40493d:	inc    edi
  40493e:	imul   eax,DWORD PTR [edx],0x25f23282
  404944:	ret    
  404945:	cld    
  404946:	retf   
  404947:	nop
  404948:	mov    eax,ss:0x3486b312
  40494e:	xor    al,0xcf
  404950:	adc    eax,0x7362786d
  404955:	xor    edi,DWORD PTR [edi]
  404957:	out    dx,eax
  404958:	mov    cl,0xf5
  40495a:	hlt    
  40495b:	mov    BYTE PTR [esi],cl
  40495d:	jae    0x4048e8
  40495f:	xor    esi,ebp
  404961:	xor    BYTE PTR [esi+eax*2-0x2a],bl
  404965:	adc    DWORD PTR [ecx+0x2e23c3ab],edx
  40496b:	ficom  WORD PTR [esi+0x6b9c272f]
  404971:	and    al,0xd0
  404973:	xor    BYTE PTR [edx],bh
  404975:	adc    al,0xe
  404977:	stos   DWORD PTR es:[edi],eax
  404978:	pop    ss
  404979:	cdq    
  40497a:	xchg   edx,eax
  40497b:	lahf   
  40497c:	mov    edi,0x84a823a3
  404981:	dec    esp
  404982:	retf   0xf3c1
  404985:	je     0x404907
  404987:	cmp    eax,0xdb02ca2d
  40498c:	cs and al,0xf8
  40498f:	jo     0x4049c8
  404991:	mov    esi,0x1da85921
  404997:	pop    ebp
  404998:	pop    edi
  404999:	bound  edx,QWORD PTR [ecx+esi*2-0x371572fe]
  4049a0:	pop    edx
  4049a1:	jg     0x4049b3
  4049a3:	ds mov esi,0x8ab5a251
  4049a9:	jl     0x40495a
  4049ab:	push   0x9ba1c741
  4049b0:	mov    ebp,ebx
  4049b2:	pop    edi
  4049b3:	gs mov bh,0x1f
  4049b6:	push   edx
  4049b7:	push   esp
  4049b8:	adc    al,0xe7
  4049ba:	enter  0xba30,0x24
  4049be:	inc    ebx
  4049bf:	fdiv   DWORD PTR [edx-0x3a]
  4049c2:	fdiv   DWORD PTR [edx+eiz*8+0x69]
  4049c6:	mov    WORD PTR [ebp+0x74],?
  4049c9:	call   0x3ed38b01
  4049ce:	mov    ah,0xfb
  4049d0:	jg     0x404a30
  4049d2:	not    BYTE PTR [ebx]
  4049d4:	enter  0xc05c,0xc
  4049d8:	xor    al,0xa6
  4049da:	and    al,BYTE PTR [esi-0x523880c9]
  4049e0:	adc    ah,BYTE PTR [ebx+0x13]
  4049e3:	icebp  
  4049e4:	mov    BYTE PTR [esi],bh
  4049e6:	stos   DWORD PTR es:[edi],eax
  4049e7:	add    edi,ebp
  4049e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049ea:	and    dh,bh
  4049ec:	inc    ebx
  4049ed:	xor    eax,0x25af0458
  4049f2:	into   
  4049f3:	cld    
  4049f4:	das    
  4049f5:	mov    ds:0xd654efd,eax
  4049fa:	xor    DWORD PTR [ecx],esp
  4049fc:	fucomip st,st(3)
  4049fe:	cmc    
  4049ff:	xchg   ebx,eax
  404a00:	sbb    al,dl
  404a02:	cwde   
  404a03:	mov    BYTE PTR ds:0x7eb9d7b7,ah
  404a09:	out    dx,al
  404a0a:	fadd   QWORD PTR ds:0x8cfe1e65
  404a10:	je     0x404993
  404a12:	sti    
  404a13:	cmc    
  404a14:	sbb    cl,BYTE PTR [eax-0x1004db35]
  404a1a:	jb     0x4049ca
  404a1c:	mov    dl,0x4
  404a1e:	mov    fs,WORD PTR [eax+0x3061b9b7]
  404a24:	cmp    dh,BYTE PTR [eax+0x1b]
  404a27:	sbb    al,0xe4
  404a29:	(bad)
  404a2d:	je     0x404a44
  404a2f:	jne    0x4049d3
  404a31:	jo     0x404aa5
  404a33:	enter  0x1ad7,0x64
  404a37:	dec    esp
  404a38:	sbb    BYTE PTR [eax-0x5063dda4],cl
  404a3e:	lea    edx,[edi]
  404a40:	and    BYTE PTR [esi+0x403eed6e],bh
  404a46:	mov    ds:0x1ffcd733,eax
  404a4b:	(bad)  
  404a4c:	ds cdq 
  404a4e:	adc    BYTE PTR [edi-0x5a],bh
  404a51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a52:	nop
  404a53:	jbe    0x404a94
  404a55:	mov    bh,0x4e
  404a57:	xor    edi,ebp
  404a59:	mov    ch,0x63
  404a5b:	sub    esi,DWORD PTR [ecx+ebp*4+0x25]
  404a5f:	lods   eax,DWORD PTR ds:[esi]
  404a60:	dec    BYTE PTR [eax+0xd]
  404a63:	ins    DWORD PTR es:[edi],dx
  404a64:	sub    ebp,DWORD PTR [esi-0x6a9918c]
  404a6a:	loop   0x404a61
  404a6c:	inc    ecx
  404a6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a6e:	jns    0x404a86
  404a70:	xchg   esp,eax
  404a71:	je     0x404a5f
  404a73:	mov    ah,0x5
  404a75:	mov    ds:0x646ce6bf,eax
  404a7a:	mov    edi,0x8d5d4e45
  404a7f:	mov    ebp,DWORD PTR [esi+0x5e96b429]
  404a85:	inc    eax
  404a86:	fnsave [ebx]
  404a88:	data16 mov ?,WORD PTR [ecx+ecx*8+0x5c]
  404a8d:	push   esi
  404a8e:	jecxz  0x404adc
  404a90:	fisttp DWORD PTR [ebx+0x30]
  404a93:	sbb    ah,BYTE PTR [ebx+edi*2+0x50b7b2e1]
  404a9a:	or     bh,BYTE PTR [ecx+eiz*2-0x7ba4384a]
  404aa1:	adc    eax,0x366aab6f
  404aa6:	and    eax,DWORD PTR [ebx+edi*2+0x4cb2e3a4]
  404aad:	dec    eax
  404aae:	sbb    dl,BYTE PTR [edi-0x74]
  404ab1:	mov    ah,0xa8
  404ab3:	dec    al
  404ab5:	xor    al,BYTE PTR [eax]
  404ab7:	test   DWORD PTR [esi+ebx*2-0x68ec9c41],esp
  404abe:	bound  edi,QWORD PTR [ebp+0x183ea3e7]
  404ac4:	loope  0x404b30
  404ac6:	xor    eax,0x6edfc896
  404acb:	or     al,0xad
  404acd:	or     ch,ch
  404acf:	hlt    
  404ad0:	fcomp  st(6)
  404ad2:	pop    ebp
  404ad3:	push   esi
  404ad4:	mov    dh,0x56
  404ad6:	sbb    al,0x29
  404ad8:	add    BYTE PTR [eax+0x44d619ac],dh
  404ade:	sub    eax,0xb466d631
  404ae3:	jo     0x404b2f
  404ae5:	out    0xdc,al
  404ae7:	sbb    DWORD PTR [edx+0x350611f],ebp
  404aed:	and    bl,dh
  404aef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404af0:	cmp    cl,BYTE PTR [ebp+0x7f]
  404af3:	fidivr WORD PTR [esi+0x35a61905]
  404af9:	pop    esp
  404afa:	mov    ebx,0x596bd31
  404aff:	js     0x404acb
  404b01:	sbb    eax,0x74eee34a
  404b06:	pop    edx
  404b07:	(bad)  
  404b08:	neg    BYTE PTR [edx-0x3420e08b]
  404b0e:	adc    bl,al
  404b10:	rcr    DWORD PTR [ebx+0xaaa59d7],cl
  404b16:	mov    esi,0xe2c2140e
  404b1b:	pushf  
  404b1c:	add    al,0xb6
  404b1e:	add    BYTE PTR [ecx+edi*1+0x1b0f8667],ah
  404b25:	jb     0x404b9e
  404b27:	xchg   ebp,eax
  404b28:	icebp  
  404b29:	fnsave [eax-0x7e5482bd]
  404b2f:	in     al,0x19
  404b31:	inc    ecx
  404b32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b33:	jl     0x404b6d
  404b35:	hlt    
  404b36:	add    al,0x40
  404b38:	mov    al,ds:0xa6f6a8de
  404b3d:	call   0xd089794
  404b42:	pop    ecx
  404b43:	adc    dl,bh
  404b45:	enter  0xe2c8,0x14
  404b49:	mov    BYTE PTR [ecx],ch
  404b4b:	push   edx
  404b4c:	add    eax,0x16bca5c1
  404b51:	sbb    edx,DWORD PTR [ebp-0x4da108e9]
  404b57:	add    eax,0x763a92a7
  404b5c:	push   cs
  404b5d:	cmp    ah,BYTE PTR [ebx+0x73]
  404b60:	xchg   esi,eax
  404b61:	and    ch,BYTE PTR [ebx-0x20]
  404b64:	push   ebp
  404b66:	leave  
  404b67:	(bad)  
  404b68:	adc    eax,0x7f79909c
  404b6d:	retf   0x81d6
  404b70:	dec    ecx
  404b71:	and    al,0xde
  404b73:	xor    BYTE PTR [edx+0xb],ah
  404b76:	push   ebp
  404b77:	jg     0x404b85
  404b79:	gs test al,0x2f
  404b7c:	mov    edi,?
  404b7e:	and    eax,0xc90dad48
  404b83:	mov    edi,0xa2cf094a
  404b88:	dec    ecx
  404b89:	enter  0x4cba,0x89
  404b8d:	push   ss
  404b8e:	sbb    BYTE PTR [edx],dh
  404b90:	(bad)  
  404b91:	(bad)  
  404b93:	sub    edi,DWORD PTR [esi+0x7ee7005d]
  404b99:	cli    
  404b9a:	pushf  
  404b9b:	jo     0x404be8
  404b9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b9e:	cmc    
  404b9f:	mov    eax,ebx
  404ba1:	(bad)  
  404ba2:	pop    edx
  404ba3:	(bad)  
  404ba4:	out    0x74,al
  404ba6:	pop    esi
  404ba7:	xchg   esp,eax
  404ba8:	scas   al,BYTE PTR es:[edi]
  404ba9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404baa:	fisttp WORD PTR cs:0x39c7c70d
  404bb1:	in     al,0xb2
  404bb3:	shl    DWORD PTR [ebx+0x14fecf3c],0xc0
  404bba:	loop   0x404b67
  404bbc:	adc    si,WORD PTR [edx]
  404bbf:	cmp    esp,DWORD PTR [ecx-0x50]
  404bc2:	outs   dx,DWORD PTR ds:[esi]
  404bc3:	scas   al,BYTE PTR es:[edi]
  404bc4:	add    edx,DWORD PTR [edi+eiz*1]
  404bc7:	ja     0x404c07
  404bc9:	mov    WORD PTR [eax+0x4fe09622],es
  404bcf:	mov    ecx,0xa9859826
  404bd4:	jle    0x404bc8
  404bd6:	inc    ebx
  404bd7:	cmp    eax,0x1f1a2a76
  404bdc:	fidiv  WORD PTR [eax]
  404bde:	shl    dh,cl
  404be0:	jo     0x404bf2
  404be2:	loope  0x404c29
  404be4:	xchg   BYTE PTR [edx],cl
  404be6:	inc    edx
  404be7:	mov    BYTE PTR [edi],dh
  404be9:	pusha  
  404bea:	cmp    ecx,DWORD PTR [eax+0xd]
  404bed:	mov    edx,DWORD PTR [edx+0x2a521864]
  404bf3:	scas   eax,DWORD PTR es:[edi]
  404bf4:	frstor [ecx+0x57]
  404bf7:	mov    ah,0x1b
  404bf9:	mov    bl,0x57
  404bfb:	mov    ebx,0x67aa1687
  404c00:	xchg   ebx,eax
  404c01:	sbb    al,0x3c
  404c03:	rcr    cl,0x30
  404c06:	imul   ebx,ecx,0x1f2c7867
  404c0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c0d:	test   DWORD PTR [eax+edx*2],esp
  404c10:	mov    edi,0xfdb6a485
  404c15:	xlat   BYTE PTR ds:[ebx]
  404c16:	sub    BYTE PTR [ebp-0x2be16a51],cl
  404c1c:	hlt    
  404c1d:	dec    esi
  404c1e:	scas   al,BYTE PTR es:[edi]
  404c1f:	inc    esi
  404c20:	adc    DWORD PTR [edx-0x1aeea2fb],ebp
  404c26:	mov    ebp,0x1d1395df
  404c2b:	push   0x0
  404c2d:	pop    ecx
  404c2e:	mov    eax,ds:0xf5cb3439
  404c33:	mov    esp,0x306a4e64
  404c38:	mov    cl,0xed
  404c3a:	lds    esp,FWORD PTR [ecx+0x56]
  404c3d:	ins    BYTE PTR es:[edi],dx
  404c3e:	adc    bh,BYTE PTR [ecx]
  404c40:	nop    DWORD PTR [esi-0x3c]
  404c44:	hlt    
  404c45:	or     edi,ebp
  404c47:	mov    ah,0x99
  404c49:	test   al,0x9a
  404c4b:	retf   
  404c4c:	adc    BYTE PTR [esi+edx*8+0x62700743],dh
  404c53:	repz sub al,0x2d
  404c56:	push   esi
  404c57:	or     al,0x38
  404c59:	xchg   edx,eax
  404c5a:	jnp    0x404c89
  404c5c:	ss push ecx
  404c5e:	adc    eax,0x90588dec
  404c63:	scas   eax,DWORD PTR es:[edi]
  404c64:	clc    
  404c65:	fst    DWORD PTR [esi]
  404c67:	int    0x40
  404c69:	mov    esp,0xcc142e94
  404c6e:	sub    eax,0x74f767aa
  404c73:	sbb    al,dl
  404c75:	mov    dl,0xfe
  404c77:	shl    bh,cl
  404c79:	cmp    BYTE PTR [ebx+0x39dcccc3],0x39
  404c80:	mul    BYTE PTR [ebx-0x3a]
  404c83:	pop    ebp
  404c84:	add    edi,DWORD PTR [edi+0x231527b9]
  404c8a:	push   ebx
  404c8b:	mov    ds:0xce9467f6,al
  404c90:	mov    ah,0x5a
  404c92:	adc    ah,BYTE PTR [ebx]
  404c94:	adc    edi,edi
  404c96:	sbb    ecx,DWORD PTR [ecx-0x3a]
  404c99:	pop    ss
  404c9a:	fs push eax
  404c9c:	mov    al,0xeb
  404c9e:	jge    0x404c28
  404ca0:	mov    eax,0x47b53a13
  404ca5:	(bad)  
  404ca6:	out    dx,al
  404ca7:	sar    BYTE PTR [edi-0x3f],0xee
  404cab:	test   al,0x8a
  404cad:	adc    al,0x68
  404caf:	xchg   ecx,eax
  404cb0:	fwait
  404cb1:	xchg   esp,ebx
  404cb3:	adc    esi,DWORD PTR [edi]
  404cb5:	wrmsr  
  404cb7:	shr    DWORD PTR [ebx+0x31a836e6],1
  404cbd:	cmp    bh,BYTE PTR [ebp+0x1b]
  404cc0:	mov    edi,DWORD PTR ds:0x33dd2f2f
  404cc6:	(bad)  
  404cc7:	loop   0x404cb3
  404cc9:	or     al,0xab
  404ccb:	or     al,0x1b
  404ccd:	mov    al,ds:0x342eb053
  404cd2:	inc    ebx
  404cd3:	or     DWORD PTR [edi-0x45fbc01c],ebx
  404cd9:	mov    BYTE PTR [ecx-0x5feb6c8],dh
  404cdf:	out    dx,al
  404ce0:	sahf   
  404ce1:	jns    0x404c83
  404ce3:	dec    ebx
  404ce4:	push   ebp
  404ce5:	push   cs
  404ce6:	ror    DWORD PTR [esi],cl
  404ce8:	fild   WORD PTR [ebx+0x36]
  404ceb:	aas    
  404cec:	xchg   esp,eax
  404ced:	add    ch,dh
  404cef:	dec    edi
  404cf0:	shr    esp,cl
  404cf2:	inc    esp
  404cf3:	jno    0x404d03
  404cf5:	popf   
  404cf6:	ror    DWORD PTR [edx-0x346606f7],0xe2
  404cfd:	(bad)  
  404cff:	stc    
  404d00:	push   0xffffff8e
  404d02:	xor    esp,ebx
  404d04:	aaa    
  404d05:	or     al,0x5a
  404d07:	retf   0xfa2e
  404d0a:	inc    eax
  404d0b:	cmc    
  404d0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d0d:	imul   eax,eax,0xffffff91
  404d10:	xchg   BYTE PTR [esi+0x2543709d],ah
  404d16:	dec    esp
  404d17:	out    0x2f,al
  404d19:	sub    al,0x5e
  404d1b:	int3   
  404d1c:	enter  0x6783,0x8
  404d20:	les    esi,FWORD PTR [ecx+0x4528b8ee]
  404d26:	sti    
  404d27:	dec    esp
  404d28:	xchg   ebp,eax
  404d29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d2a:	push   ecx
  404d2b:	mov    al,ds:0x4b8aee31
  404d30:	imul   ebp,esp,0x89b944d1
  404d36:	clc    
  404d37:	(bad)  
  404d38:	shl    BYTE PTR [esi+ecx*4],1
  404d3b:	nop    DWORD PTR [ecx+ebp*4]
  404d3f:	xor    DWORD PTR [edx+0x52],eax
  404d42:	mov    eax,0x28e5ab75
  404d47:	push   ebx
  404d48:	and    BYTE PTR ss:[esi+edi*1-0x346083db],ch
  404d50:	pop    edx
  404d51:	jg     0x404ced
  404d53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d54:	test   dl,dh
  404d56:	mov    edi,DWORD PTR [esi-0x6f]
  404d59:	inc    esi
  404d5a:	(bad)  
  404d5b:	sub    BYTE PTR [esi+0x73],ah
  404d5e:	jmp    0xcc7b:0x1e4fb599
  404d65:	(bad)  
  404d66:	jecxz  0x404d08
  404d68:	cmp    esp,edx
  404d6a:	mov    ecx,0x751accaa
  404d6f:	and    esp,DWORD PTR [ecx+edx*2+0x300dd6a7]
  404d76:	lahf   
  404d77:	das    
  404d78:	xor    eax,edi
  404d7a:	stos   BYTE PTR es:[edi],al
  404d7b:	sub    dl,al
  404d7d:	bswap  ebp
  404d7f:	push   0x27
  404d81:	add    bl,BYTE PTR [edi-0x72]
  404d84:	inc    esi
  404d85:	out    dx,al
  404d86:	cdq    
  404d87:	loopne 0x404d32
  404d89:	loop   0x404d2a
  404d8b:	movups xmm1,XMMWORD PTR [eax+0x72]
  404d8f:	or     DWORD PTR [edx+ebp*4],ecx
  404d92:	xor    bl,BYTE PTR [ebp+0x5f]
  404d95:	xor    al,0x47
  404d97:	push   ecx
  404d98:	int    0x53
  404d9a:	or     ebx,DWORD PTR [edi-0x1d]
  404d9d:	sub    DWORD PTR [eax-0x5f],0x3
  404da1:	sbb    esp,DWORD PTR [esi+ebp*1+0x79]
  404da5:	pop    ecx
  404da6:	jnp    0x404d2d
  404da8:	mov    cl,0x72
  404daa:	jmp    0x5d74:0xee1ac11a
  404db1:	(bad)  
  404db2:	shr    BYTE PTR [edx],1
  404db4:	lds    edi,FWORD PTR [ecx+ebp*2]
  404db7:	mov    ebx,0xe1e1325d
  404dbc:	dec    edx
  404dbd:	cmp    edi,edi
  404dbf:	mov    DWORD PTR [esi],eax
  404dc1:	mov    cl,0xbd
  404dc3:	je     0x404e0f
  404dc5:	outs   dx,DWORD PTR ds:[esi]
  404dc6:	fcom   st(3)
  404dc8:	cmp    DWORD PTR [eax-0x73],ecx
  404dcb:	(bad)  
  404dcc:	sub    al,0x9f
  404dce:	mov    ds:0x2fbd5d88,eax
  404dd3:	dec    esi
  404dd4:	(bad)  
  404dd5:	push   edx
  404dd6:	fldenv [edx-0x79]
  404dd9:	js     0x404d73
  404ddb:	imul   ebx,DWORD PTR [ebx+edi*8],0x3e
  404ddf:	mov    ecx,DWORD PTR [eax]
  404de1:	xor    eax,0x15530938
  404de6:	lods   eax,DWORD PTR ds:[esi]
  404de7:	xor    ah,0x38
  404dea:	call   0x7afe:0xb2e0fbeb
  404df1:	in     eax,dx
  404df2:	or     eax,0xeffd40e8
  404df7:	icebp  
  404df8:	dec    ebx
  404df9:	daa    
  404dfa:	mov    ds:0x881b2ee2,al
  404dff:	scas   al,BYTE PTR es:[edi]
  404e00:	(bad)  
  404e01:	sahf   
  404e02:	jne    0x404df0
  404e04:	or     dh,BYTE PTR [ecx]
  404e06:	hlt    
  404e07:	jp     0x404de1
  404e09:	or     BYTE PTR [ebp-0x790df386],dl
  404e0f:	push   eax
  404e10:	inc    esi
  404e11:	aaa    
  404e12:	jmp    0x404df8
  404e14:	stc    
  404e15:	cmp    DWORD PTR [ecx],esp
  404e17:	int    0xf1
  404e19:	xor    DWORD PTR [ebx+0x822b234],eax
  404e1f:	retf   
  404e20:	test   BYTE PTR [eax+0x7f79fc22],bl
  404e26:	push   ebp
  404e27:	cwde   
  404e28:	imul   ebp,eax,0xfffffffe
  404e2b:	jo     0x404dfe
  404e2d:	jl     0x404e74
  404e2f:	jecxz  0x404e2e
  404e31:	aaa    
  404e32:	or     al,0x51
  404e34:	and    al,0xfd
  404e36:	cmc    
  404e37:	push   edi
  404e38:	xchg   ecx,eax
  404e39:	shl    BYTE PTR [edi+0x136d448b],1
  404e3f:	sbb    al,0x61
  404e41:	in     al,dx
  404e42:	dec    edi
  404e43:	adc    eax,0xf9b6ed8c
  404e48:	test   al,0x49
  404e4a:	cdq    
  404e4b:	inc    ecx
  404e4c:	mov    eax,ds:0xd1510513
  404e51:	stos   BYTE PTR es:[edi],al
  404e52:	adc    edi,DWORD PTR [edx+0x2]
  404e55:	hlt    
  404e56:	ss scas eax,DWORD PTR es:[edi]
  404e58:	xchg   edi,eax
  404e59:	push   ds
  404e5a:	ss leave 
  404e5c:	xchg   ebp,eax
  404e5d:	aaa    
  404e5e:	shl    ah,1
  404e60:	lahf   
  404e61:	ret    0x44d0
  404e64:	xchg   edi,eax
  404e65:	pushf  
  404e66:	mov    edi,0xa3d539e5
  404e6b:	call   0x1d41dc47
  404e70:	call   0xea5d:0x9e9c6650
  404e77:	inc    esi
  404e78:	sub    esi,esp
  404e7a:	adc    esp,ebx
  404e7c:	pop    eax
  404e7d:	outs   dx,BYTE PTR ds:[esi]
  404e7e:	mov    ebx,0x800706a1
  404e83:	ss dec esi
  404e85:	jge    0x404e25
  404e87:	or     esp,DWORD PTR fs:[edi]
  404e8a:	xor    ebp,DWORD PTR [edi+eax*4+0x78]
  404e8e:	mov    ds:0x23e3bea8,eax
  404e93:	push   es
  404e94:	inc    ebx
  404e95:	xlat   BYTE PTR ds:[ebx]
  404e96:	mov    eax,ds:0x599153ab
  404e9b:	maxps  xmm1,xmm1
  404e9e:	cs jg  0x404ecd
  404ea1:	jl     0x404e89
  404ea3:	nop
  404ea4:	cmp    al,0x92
  404ea6:	iret   
  404ea7:	adc    BYTE PTR [edi-0x29],bl
  404eaa:	cmp    ah,BYTE PTR [ebx-0x7b]
  404ead:	and    ah,ah
  404eaf:	repnz idiv dl
  404eb2:	ror    DWORD PTR [edx+eiz*8+0x2f],0xd6
  404eb7:	lahf   
  404eb8:	mov    WORD PTR [ecx-0x4a0331a3],?
  404ebe:	inc    ebx
  404ebf:	test   DWORD PTR ds:0x2d2e2f81,esp
  404ec5:	cli    
  404ec6:	test   edi,ecx
  404ec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ec9:	or     edx,DWORD PTR [ecx]
  404ecb:	jp     0x404e54
  404ecd:	jnp    0x404e96
  404ecf:	inc    ecx
  404ed0:	xor    edi,DWORD PTR [edx+0x37b788e7]
  404ed6:	adc    eax,0x8d2431d3
  404edb:	lods   al,BYTE PTR ds:[esi]
  404edc:	cmp    ah,cl
  404ede:	and    BYTE PTR [edx],cl
  404ee0:	aaa    
  404ee1:	xlat   BYTE PTR ds:[ebx]
  404ee2:	inc    esp
  404ee3:	inc    edi
  404ee4:	sub    al,BYTE PTR [ebx]
  404ee6:	jno    0x404f11
  404ee8:	pop    ebx
  404ee9:	bound  edx,QWORD PTR [esi+edx*2-0x26]
  404eed:	adc    al,BYTE PTR [ebp+0x2f]
  404ef0:	iret   
  404ef1:	jno    0x404f30
  404ef3:	dec    esi
  404ef4:	add    esp,DWORD PTR [edx-0x634247b4]
  404efa:	aad    0x4c
  404efc:	xchg   esp,eax
  404efd:	lods   al,BYTE PTR fs:[esi]
  404eff:	mov    ch,0xcb
  404f01:	lock (bad) 
  404f03:	cs cld 
  404f05:	xchg   esi,eax
  404f06:	pop    edx
  404f07:	inc    esi
  404f08:	dec    esp
  404f09:	push   esi
  404f0a:	test   DWORD PTR [esp+esi*4+0x40],ecx
  404f0e:	mov    eax,ds:0x4459ce7e
  404f13:	cmp    al,0xf8
  404f15:	outs   dx,DWORD PTR ds:[esi]
  404f16:	add    BYTE PTR [ebp+0x20989407],cl
  404f1c:	xor    eax,0x14411510
  404f21:	jmp    0xc6f4992c
  404f26:	pop    edi
  404f27:	xchg   edi,eax
  404f28:	and    DWORD PTR [eax+0x19],eax
  404f2b:	xor    al,0xf6
  404f2d:	retf   
  404f2e:	pop    esp
  404f2f:	retf   
  404f30:	push   ebx
  404f31:	adc    eax,0xabf640d4
  404f36:	xor    ch,BYTE PTR [edi+0x5e]
  404f39:	inc    eax
  404f3a:	push   ecx
  404f3b:	ins    DWORD PTR es:[edi],dx
  404f3c:	inc    ebp
  404f3d:	jge    0x404fa0
  404f3f:	rcl    DWORD PTR [esi],cl
  404f41:	adc    esp,0xffffff8e
  404f44:	imul   ebx,DWORD PTR [ebx],0xffffffae
  404f47:	aaa    
  404f48:	lock shr BYTE PTR [esi-0x10],0x6c
  404f4d:	ins    DWORD PTR es:[edi],dx
  404f4e:	int3   
  404f4f:	pop    esp
  404f50:	mov    DWORD PTR [ecx-0x6d672616],0x20c61b0b
  404f5a:	mov    bh,0x70
  404f5c:	jmp    0xbac963fe
  404f61:	es push cs
  404f63:	mov    ds:0x5250571e,al
  404f68:	xchg   esp,eax
  404f69:	retf   
  404f6a:	mov    al,0xef
  404f6c:	pop    esp
  404f6d:	pop    esp
  404f6e:	add    eax,0xc6a3135c
  404f73:	shr    dh,0xda
  404f76:	jmp    0x90f20e03
  404f7b:	mov    DWORD PTR [esi+0xd],ebp
  404f7e:	test   DWORD PTR [edx],esp
  404f80:	hlt    
  404f81:	push   0x475a8c8
  404f86:	mov    DWORD PTR [ebp-0x39e251d0],0xe1617f34
  404f90:	mov    ds:0xf998a27d,eax
  404f95:	or     dl,BYTE PTR [eax-0x5b6fe063]
  404f9b:	mov    bl,0x3c
  404f9d:	pop    ebp
  404f9e:	ja     0x404fbf
  404fa0:	int    0xca
  404fa2:	pop    esi
  404fa3:	mov    al,ds:0x61a4c7bd
  404fa8:	frstor fs:[bx+0x2ad8]
  404fae:	add    al,0x0
  404fb0:	mov    ah,0x91
  404fb2:	enter  0xcf8b,0x81
  404fb6:	loopne 0x404f9e
  404fb8:	popa   
  404fb9:	in     al,dx
  404fba:	or     BYTE PTR [ebx+0x7a],dl
  404fbd:	lahf   
  404fbe:	push   es
  404fbf:	mov    edx,0xda60dcdc
  404fc4:	mov    dl,0x9
  404fc6:	test   BYTE PTR [eax+edx*2],bh
  404fc9:	or     eax,0xc6e896cd
  404fce:	push   0xb777e452
  404fd3:	or     edi,0x9faf9f87
  404fd9:	fucomi st,st(4)
  404fdb:	push   eax
  404fdc:	xor    al,0x42
  404fde:	in     al,dx
  404fdf:	imul   ebx,DWORD PTR [edi],0x1f0d96a0
  404fe5:	mov    ds:0x2a05f4ec,al
  404fea:	test   dl,dl
  404fec:	xchg   esp,eax
  404fed:	fld    TBYTE PTR [ecx+0x383858a6]
  404ff3:	(bad)  
  404ff4:	in     eax,0x27
  404ff6:	mov    DWORD PTR [ecx-0x6],esp
  404ff9:	out    dx,eax
  404ffa:	mov    BYTE PTR [ebx+0x56],al
  404ffd:	imul   ecx,ebx,0x897e1dad
  405003:	lock and ch,BYTE PTR [ebp-0x54fda8f1]
  40500a:	fwait
  40500b:	dec    ebp
  40500c:	cmp    bh,BYTE PTR [esi-0x4cf29906]
  405012:	mov    bh,0xc8
  405014:	and    BYTE PTR [esi],bl
  405016:	mov    esp,0x761847d
  40501b:	xchg   esi,eax
  40501c:	jge    0x404fec
  40501e:	mov    WORD PTR ds:[eax],ss
  405021:	dec    ecx
  405022:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405023:	imul   ebp
  405025:	out    0x87,eax
  405027:	ret    
  405028:	pop    edx
  405029:	sbb    BYTE PTR [eax-0x42ec7f9c],ch
  40502f:	cs sbb bh,0x7
  405033:	inc    ebx
  405034:	repnz repnz push ss
  405037:	into   
  405038:	xor    al,0xdc
  40503a:	adc    al,0x56
  40503c:	aam    0x10
  40503e:	ds push 0xd0bba41c
  405044:	inc    ebx
  405045:	adc    DWORD PTR ds:0xe5f6d092,esp
  40504b:	adc    BYTE PTR [edi+0x37],ah
  40504e:	fdecstp 
  405050:	(bad)  [edx]
  405052:	or     al,0x98
  405054:	sahf   
  405055:	cli    
  405056:	cmp    eax,0xb06e74f9
  40505b:	adc    DWORD PTR [esi],edi
  40505d:	add    DWORD PTR [eax-0x4d],esi
  405060:	mov    eax,ds:0xbcd48d08
  405065:	imul   eax,DWORD PTR [ebp+0x43f75156],0xffffffe5
  40506c:	sbb    edx,DWORD PTR [edi]
  40506e:	das    
  40506f:	cmp    bl,0xca
  405072:	add    eax,0x10b96d17
  405077:	or     eax,0xab26168e
  40507c:	mov    ecx,0xfb720463
  405081:	pop    edx
  405082:	fisub  DWORD PTR [edx+edi*2+0x334a0308]
  405089:	push   ss
  40508a:	ss cmc 
  40508c:	out    dx,eax
  40508d:	sbb    eax,0x5f3fbe61
  405092:	in     al,0x64
  405094:	pusha  
  405095:	jne    0x40504a
  405097:	cwde   
  405098:	(bad)  
  405099:	call   0xf21578a1
  40509e:	das    
  40509f:	xlat   BYTE PTR ds:[ebx]
  4050a0:	and    eax,0x41548259
  4050a5:	xor    dl,BYTE PTR [edx-0x7671d65d]
  4050ab:	push   ss
  4050ac:	clc    
  4050ad:	call   0x3f75:0x8d9fda56
  4050b4:	leave  
  4050b5:	out    dx,eax
  4050b6:	outs   dx,DWORD PTR ds:[esi]
  4050b7:	mov    ebp,0xa4688719
  4050bc:	inc    edx
  4050bd:	push   cs
  4050be:	cmp    ebx,ebx
  4050c0:	imul   edi,DWORD PTR [eiz*8-0x1af24dbc],0x57
  4050c8:	pop    ecx
  4050c9:	mov    ch,0x7f
  4050cb:	sub    ecx,DWORD PTR [ebp+ebx*4+0xf88a556]
  4050d2:	mov    ecx,0x3251864b
  4050d7:	enter  0x626e,0xa3
  4050db:	xor    al,0xf
  4050dd:	dec    esi
  4050de:	lods   al,BYTE PTR ds:[esi]
  4050df:	fxtract 
  4050e1:	(bad)  
  4050e2:	pop    edx
  4050e3:	fdivr  QWORD PTR [esi-0x13]
  4050e6:	je     0x405152
  4050e8:	pop    edi
  4050e9:	sbb    DWORD PTR [edx-0x5a],ebp
  4050ec:	mov    ecx,0x3683e877
  4050f1:	out    0x5,eax
  4050f3:	imul   ecx,DWORD PTR [ecx+ecx*8+0x13edaabc],0x72
  4050fb:	je     0x405160
  4050fd:	outs   dx,BYTE PTR ds:[esi]
  4050fe:	jle    0x4050a1
  405100:	in     eax,0xad
  405102:	cli    
  405103:	test   al,0x2a
  405105:	dec    eax
  405106:	mov    dh,0xc5
  405108:	push   cs
  405109:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40510a:	fld    QWORD PTR gs:[ebx+0x68ca1e3d]
  405111:	shl    ebp,cl
  405113:	cmp    al,0xc6
  405115:	clc    
  405116:	jno    0x405196
  405118:	int    0xda
  40511a:	frstor [ebp+0xc]
  40511d:	jb     0x4050f3
  40511f:	push   ds
  405120:	or     eax,0x27f0663b
  405125:	cmp    BYTE PTR [esi],cl
  405127:	outs   dx,BYTE PTR ds:[esi]
  405128:	mov    al,ds:0x83d72498
  40512d:	lods   al,BYTE PTR ds:[esi]
  40512e:	push   esi
  40512f:	loope  0x40512e
  405131:	mov    ebp,0xefc1eabe
  405136:	mov    ss,WORD PTR [edi-0x304b3fb]
  40513c:	mov    bh,0x3a
  40513e:	sbb    ch,dl
  405140:	fistp  DWORD PTR [esi+0x4b]
  405143:	outs   dx,BYTE PTR ds:[esi]
  405144:	shr    DWORD PTR [eax+eax*2],cl
  405147:	out    dx,al
  405148:	inc    edx
  405149:	arpl   WORD PTR [ebx+0x21],bp
  40514c:	stos   DWORD PTR es:[edi],eax
  40514d:	mov    eax,ds:0x28930a4b
  405152:	ss std 
  405154:	outs   dx,BYTE PTR ds:[esi]
  405155:	jecxz  0x40516f
  405157:	aaa    
  405158:	bound  ebp,QWORD PTR [edx]
  40515a:	in     al,0x6b
  40515c:	lods   eax,DWORD PTR ds:[esi]
  40515d:	loopne 0x405111
  40515f:	xlat   BYTE PTR ds:[ebx]
  405160:	inc    eax
  405161:	(bad)  
  405163:	jmp    0x405130
  405165:	sub    BYTE PTR [ecx-0x3594e683],ch
  40516b:	arpl   WORD PTR [ecx-0x29],ax
  40516e:	adc    BYTE PTR [esi+0x3bd4bd],ah
  405174:	pusha  
  405175:	test   BYTE PTR [esi+eiz*8-0x50b62841],al
  40517c:	repz add ebx,DWORD PTR [ecx]
  40517f:	sbb    al,0x56
  405181:	test   eax,0xe25b8f85
  405186:	pop    ds
  405187:	lea    ebx,[ebp+0x16e23b53]
  40518d:	retf   0x3a57
  405190:	ret    0xc698
  405193:	push   ebx
  405194:	and    eax,0x9d42be53
  405199:	ror    DWORD PTR [ebp+eax*2-0xf],1
  40519d:	repnz sbb BYTE PTR [eax-0x45],dl
  4051a1:	add    al,0x3
  4051a3:	ror    DWORD PTR [ebx+0x43],0x97
  4051a7:	jae    0x405197
  4051a9:	fucomi st,st(3)
  4051ab:	xchg   ebp,eax
  4051ac:	icebp  
  4051ad:	mov    cl,0xd1
  4051af:	out    dx,al
  4051b0:	mov    ebx,edx
  4051b2:	arpl   di,ax
  4051b4:	jmp    0x4051a9
  4051b6:	dec    ebx
  4051b7:	and    edx,DWORD PTR [ecx-0x6d]
  4051ba:	jp     0x40522e
  4051bc:	je     0x405200
  4051be:	sub    BYTE PTR [eax*8-0x731c1d3],dh
  4051c5:	clc    
  4051c6:	mov    esp,0x1f75fc06
  4051cb:	call   0x91b4:0x1613379a
  4051d2:	popa   
  4051d3:	daa    
  4051d4:	inc    ebx
  4051d5:	mov    ds:0xe7cfc100,al
  4051da:	gs and esi,edi
  4051dd:	inc    DWORD PTR [esi+0x1e]
  4051e0:	inc    ebx
  4051e1:	inc    ecx
  4051e2:	in     al,0x43
  4051e4:	sbb    eax,0xa14eeb48
  4051e9:	add    BYTE PTR [edi-0x26],ah
  4051ec:	add    dh,0x79
  4051ef:	rcr    edx,0x29
  4051f2:	pop    ebp
  4051f3:	bound  edi,QWORD PTR [ecx+0x3e]
  4051f6:	fld    QWORD PTR [eax-0x18c54384]
  4051fc:	xor    eax,DWORD PTR [ebp-0x4744e97e]
  405202:	dec    ebp
  405203:	scas   al,BYTE PTR es:[edi]
  405204:	dec    ecx
  405205:	mov    eax,0x6f79c76d
  40520a:	out    0xf4,eax
  40520c:	adc    ebp,eax
  40520e:	adc    BYTE PTR ds:0xa8b2b18e,al
  405214:	push   edx
  405215:	xchg   ebx,eax
  405216:	push   eax
  405217:	or     dl,BYTE PTR [esi+0x18]
  40521a:	mov    esp,ecx
  40521c:	jno    0x405295
  40521e:	xchg   esp,eax
  40521f:	stos   BYTE PTR es:[edi],al
  405220:	daa    
  405221:	ins    DWORD PTR es:[edi],dx
  405222:	ins    BYTE PTR es:[edi],dx
  405223:	sub    DWORD PTR [esi],0x5b
  405226:	push   ds
  405227:	not    BYTE PTR [edx+0x39a9eee]
  40522d:	inc    edx
  40522e:	lods   eax,DWORD PTR ds:[esi]
  40522f:	push   ebx
  405230:	push   ss
  405231:	(bad)  
  405232:	(bad)  
  405233:	pop    edx
  405234:	xchg   ebx,eax
  405235:	sub    al,0x9
  405237:	xchg   eax,esp
  405239:	test   ah,ah
  40523b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40523c:	mov    es,eax
  40523e:	das    
  40523f:	fldcw  WORD PTR [edi]
  405241:	jge    0x4051ca
  405243:	cdq    
  405244:	imul   ebx,ebx,0xfffffff4
  405247:	xchg   ebx,eax
  405248:	adc    cl,bh
  40524a:	mov    dh,dl
  40524c:	pop    ss
  40524d:	pop    ds
  40524e:	loope  0x405297
  405250:	mov    al,ds:0x7017280
  405255:	stos   BYTE PTR es:[edi],al
  405256:	fdivr  DWORD PTR ds:0xadc3d79a
  40525c:	add    ch,BYTE PTR [ebx]
  40525e:	pop    esi
  40525f:	and    cl,BYTE PTR [eax+0x5bf40012]
  405265:	push   es
  405266:	cmp    BYTE PTR [eax-0x4ae26f1d],dl
  40526c:	pop    edx
  40526d:	leave  
  40526e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40526f:	add    al,0xe6
  405271:	mov    bl,0xf0
  405273:	xor    eax,0xa2762075
  405278:	ret    0x280f
  40527b:	call   0x820774c
  405280:	mov    cl,0x8
  405282:	addr16 test al,0xb8
  405285:	enter  0x731f,0x9c
  405289:	mov    al,0x2
  40528b:	sbb    BYTE PTR [ebp-0x43],ah
  40528e:	sbb    dl,BYTE PTR ds:0x14a1b1e6
  405294:	cmp    al,BYTE PTR [ebx+ecx*8]
  405297:	ja     0x40525f
  405299:	idiv   dl
  40529b:	jae    0x40526e
  40529d:	ja     0x4052e1
  40529f:	sub    ebp,DWORD PTR [eax]
  4052a1:	dec    edx
  4052a2:	imul   esi,DWORD PTR [ebp-0x2e21d84c],0x6
  4052a9:	pop    esi
  4052aa:	pop    es
  4052ab:	aaa    
  4052ac:	push   ecx
  4052ad:	xchg   ecx,eax
  4052ae:	stos   DWORD PTR es:[edi],eax
  4052af:	ss sti 
  4052b1:	push   cs
  4052b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052b3:	ror    DWORD PTR [ebx],0x8d
  4052b6:	ins    BYTE PTR es:[edi],dx
  4052b7:	daa    
  4052b8:	mov    bh,BYTE PTR [eax+0x66954bbb]
  4052be:	and    al,0xde
  4052c0:	mov    ecx,0x74577d71
  4052c5:	adc    eax,0x73ebaa96
  4052ca:	jmp    0x1f29:0xb8cec4d
  4052d1:	test   DWORD PTR [eax],edx
  4052d3:	dec    esi
  4052d4:	lock add dl,BYTE PTR [ecx+0x20]
  4052d8:	out    0x90,al
  4052da:	adc    DWORD PTR [ecx+0x69],esi
  4052dd:	dec    BYTE PTR [ecx]
  4052df:	ins    DWORD PTR es:[edi],dx
  4052e0:	inc    ecx
  4052e1:	and    DWORD PTR [eax+0xb],edi
  4052e4:	les    esp,FWORD PTR [eax-0x33]
  4052e7:	push   ds
  4052e8:	xor    BYTE PTR ds:0x265fd0c9,cl
  4052ee:	or     al,0xe0
  4052f0:	inc    edx
  4052f1:	adc    esp,ecx
  4052f3:	sbb    al,0x93
  4052f5:	(bad)
  4052f9:	jp     0x40532c
  4052fb:	xchg   esp,esp
  4052fd:	ds in  eax,0xb7
  405300:	push   esi
  405301:	call   0xe609:0xb45c4983
  405308:	dec    ebp
  405309:	mov    edx,0x6811dd56
  40530e:	cld    
  40530f:	push   es
  405310:	push   esp
  405311:	repnz jecxz 0x405356
  405314:	add    DWORD PTR [ebx],esi
  405316:	or     esi,DWORD PTR [edi-0x20]
  405319:	lods   al,BYTE PTR ds:[esi]
  40531a:	jnp    0x405310
  40531c:	push   ecx
  40531d:	and    eax,DWORD PTR [ebx-0x41]
  405320:	and    BYTE PTR [ecx+0x33f9bae3],ah
  405326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405327:	or     esi,0xffffff97
  40532a:	mov    esi,0x50f277dd
  40532f:	push   edx
  405330:	pop    ds
  405331:	pusha  
  405332:	mov    ch,0x9d
  405334:	mov    eax,0xc0736ec1
  405339:	sub    ecx,DWORD PTR [edi+ebx*8]
  40533c:	jle    0x4053b8
  40533e:	out    0xe9,eax
  405340:	and    al,0x88
  405342:	pusha  
  405343:	dec    eax
  405344:	ss mov ch,0xa5
  405347:	cs mov edx,esp
  40534a:	mov    DWORD PTR [edi-0x49],ecx
  40534d:	jno    0x405300
  40534f:	ret    0x6ba8
  405352:	cmp    bl,BYTE PTR [edx+esi*8-0x1d]
  405356:	pop    esi
  405357:	jmp    0x4052fc
  405359:	pop    DWORD PTR [edi-0x59227aea]
  40535f:	xchg   ch,ch
  405361:	dec    esp
  405362:	(bad)  
  405363:	mov    al,0xe9
  405365:	and    ecx,DWORD PTR [esi]
  405367:	out    dx,al
  405368:	xchg   edi,eax
  405369:	hlt    
  40536a:	cmp    al,0x2a
  40536c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40536d:	sub    ebx,DWORD PTR [edx+0x4934678f]
  405373:	mov    ecx,0x54c04b78
  405378:	mov    eax,ds:0xba685a77
  40537d:	cmp    BYTE PTR [eax-0x7],cl
  405380:	inc    ebx
  405381:	mov    dh,BYTE PTR [ebx+0x70786d98]
  405387:	mov    eax,ds:0xe5a209cf
  40538c:	inc    eax
  40538d:	or     al,0xc7
  40538f:	test   eax,0x2b37aeeb
  405394:	jne    0x405352
  405396:	adc    BYTE PTR [eax+0x71],0x12
  40539a:	fadd   QWORD PTR ds:0xc6037612
  4053a0:	jns    0x405370
  4053a2:	icebp  
  4053a3:	stos   DWORD PTR es:[edi],eax
  4053a4:	jg     0x40540e
  4053a6:	stc    
  4053a7:	test   eax,0xd3245e68
  4053ac:	rcl    BYTE PTR [ebx],0xf1
  4053af:	or     eax,0xf6612356
  4053b4:	push   ebx
  4053b5:	in     al,0x76
  4053b7:	jae    0x405398
  4053b9:	cmp    esp,0xffffffa1
  4053bc:	fwait
  4053bd:	xchg   edx,eax
  4053be:	mov    ds:0x788e8766,al
  4053c3:	dec    edi
  4053c4:	mov    dh,BYTE PTR [eax]
  4053c6:	(bad)  
  4053c8:	out    0x90,al
  4053ca:	ret    
  4053cb:	cli    
  4053cc:	enter  0xa1da,0x22
  4053d0:	fstp   QWORD PTR [edi+0x2b]
  4053d3:	inc    esp
  4053d4:	jo     0x405390
  4053d6:	mov    bl,0x37
  4053d8:	aaa    
  4053d9:	lahf   
  4053da:	sbb    al,BYTE PTR [ecx]
  4053dc:	fstp   DWORD PTR [ebx]
  4053de:	inc    ebp
  4053df:	xchg   esp,eax
  4053e0:	sub    al,0x26
  4053e2:	out    0x7d,al
  4053e4:	dec    edx
  4053e5:	jp     0x405374
  4053e7:	xchg   ecx,eax
  4053e8:	jg     0x40541e
  4053ea:	pop    esp
  4053eb:	or     ch,BYTE PTR [edx-0x4642fb60]
  4053f1:	pop    es
  4053f2:	sti    
  4053f3:	nop
  4053f4:	(bad)  
  4053f5:	je     0x4053fa
  4053f7:	sub    al,0xf5
  4053f9:	adc    ecx,eax
  4053fb:	stos   BYTE PTR es:[edi],al
  4053fc:	jns    0x405448
  4053fe:	scas   eax,DWORD PTR es:[edi]
  4053ff:	aaa    
  405400:	jbe    0x405468
  405402:	cwde   
  405403:	idiv   BYTE PTR [eax]
  405405:	sar    BYTE PTR [eax+0x7c],0x68
  405409:	in     eax,dx
  40540a:	push   0xffffffa4
  40540c:	aaa    
  40540d:	and    DWORD PTR [ecx],0x2b21f21e
  405413:	retf   0x5995
  405416:	hlt    
  405417:	repz push eax
  405419:	clc    
  40541a:	xchg   ebx,eax
  40541b:	jmp    0x94b2c34c
  405420:	adc    DWORD PTR [edi-0x4b],edi
  405423:	aaa    
  405424:	repz (bad) 
  405426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405427:	jo     0x405436
  405429:	aam    0xdc
  40542b:	ss xor eax,0xb567413c
  405431:	aaa    
  405432:	stc    
  405433:	popa   
  405434:	mov    ds:0xd631d9d4,al
  405439:	dec    ebx
  40543a:	and    eax,0xdbf918c7
  40543f:	in     eax,dx
  405440:	inc    eax
  405441:	sub    ebx,DWORD PTR [esp+eiz*4+0x4c]
  405445:	jmp    0x2ccd:0x548a3190
  40544c:	mov    esp,0xe38c0b81
  405451:	dec    ebp
  405452:	xor    edx,ebx
  405454:	pop    es
  405455:	jmp    0x40543f
  405457:	mov    ah,dl
  405459:	mov    DWORD PTR [edi+0x4f7bc0e8],0xb41e4781
  405463:	push   ebx
  405464:	(bad)  
  405466:	cmp    BYTE PTR [ebx-0x2938a64c],ch
  40546c:	aas    
  40546d:	push   ss
  40546e:	retf   
  40546f:	call   0xcdb0:0xe3f49bc9
  405476:	popa   
  405477:	pusha  
  405478:	std    
  405479:	jnp    0x4054e9
  40547b:	add    dl,BYTE PTR [ecx-0x24c9cc49]
  405481:	aam    0x2c
  405483:	jae    0x4054d8
  405485:	lea    eax,cs:[edi-0x7]
  405489:	pop    eax
  40548a:	pusha  
  40548b:	adc    ebx,eax
  40548d:	fs cwde 
  40548f:	enter  0x5d75,0x77
  405493:	mov    cl,0xd4
  405495:	sub    DWORD PTR [ebx+0x59],0xffffffe4
  405499:	lods   eax,DWORD PTR ds:[esi]
  40549a:	sbb    esp,DWORD PTR [eax*8-0x536a450d]
  4054a1:	add    DWORD PTR [eax],edx
  4054a3:	(bad)  
  4054a4:	dec    ebp
  4054a5:	cmp    ebp,DWORD PTR [esi+0x17256720]
  4054ab:	xchg   BYTE PTR [edi-0x3f],bl
  4054ae:	clc    
  4054af:	pop    ss
  4054b0:	or     eax,0xd56e7fec
  4054b5:	sahf   
  4054b6:	outs   dx,BYTE PTR ds:[esi]
  4054b7:	ret    
  4054b8:	adc    DWORD PTR [edx+eax*4],0xe351cfb1
  4054bf:	les    ecx,FWORD PTR [ecx-0x537c9b32]
  4054c5:	in     al,0xdb
  4054c7:	ins    BYTE PTR es:[edi],dx
  4054c8:	fistp  QWORD PTR [ebp-0x79e318fa]
  4054ce:	cmp    DWORD PTR [edx+0x21],0x75
  4054d2:	xor    dh,BYTE PTR [ebx+0x175258bf]
  4054d8:	icebp  
  4054d9:	push   eax
  4054da:	pop    ss
  4054db:	ins    BYTE PTR es:[edi],dx
  4054dc:	in     eax,dx
  4054dd:	rcr    DWORD PTR cs:[ebx+0x172cda9c],cl
  4054e4:	int3   
  4054e5:	lods   al,BYTE PTR ds:[esi]
  4054e6:	shl    DWORD PTR [ebx-0x31dd2ce5],cl
  4054ec:	mov    ebp,0xced3a198
  4054f1:	push   ebx
  4054f2:	ds loopne 0x405501
  4054f5:	lods   al,BYTE PTR ds:[esi]
  4054f6:	(bad)  
  4054f7:	pop    ecx
  4054f8:	fs and eax,0xd96c1d93
  4054fe:	aad    0x15
  405500:	mov    WORD PTR [edx+ebp*4-0xc],es
  405504:	pop    esi
  405505:	in     al,dx
  405506:	test   edi,ebp
  405508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405509:	or     ebp,DWORD PTR [eax-0x31]
  40550c:	cmp    ch,BYTE PTR [edi+0x4895a925]
  405512:	data16 mov cl,0x81
  405515:	add    DWORD PTR [ecx-0x40],esi
  405518:	fld    QWORD PTR [esi-0x2d]
  40551b:	pushf  
  40551c:	sbb    al,dl
  40551e:	pop    edi
  40551f:	int    0x5f
  405521:	mov    cl,0x9
  405523:	retf   
  405524:	test   DWORD PTR [esi+0x7ef93947],0x11c5c5a6
  40552e:	call   0x3c53:0x73c08981
  405535:	xchg   edx,eax
  405536:	add    eax,ecx
  405538:	sbb    al,0x17
  40553a:	dec    eax
  40553b:	or     al,0x67
  40553d:	sub    esp,DWORD PTR [edi-0x5dee0c38]
  405543:	dec    esi
  405544:	data16 jle 0x40551a
  405547:	and    cl,BYTE PTR [edx+edi*8]
  40554a:	mov    cl,0x71
  40554c:	sub    al,BYTE PTR [ebx+0x4b1a3a15]
  405552:	sar    BYTE PTR [eax],cl
  405554:	int3   
  405555:	das    
  405556:	cmp    BYTE PTR [ebp-0x9],ah
  405559:	rcl    eax,cl
  40555b:	sbb    ch,BYTE PTR [edx-0x21a3db16]
  405561:	jbe    0x4054ef
  405563:	xor    DWORD PTR [ecx+0x61],ecx
  405566:	(bad)
  40556a:	adc    al,0xe3
  40556c:	test   eax,0xd3d58f71
  405571:	ins    DWORD PTR es:[edi],dx
  405572:	(bad)  
  405573:	sub    eax,0xcc6d64f1
  405578:	imul   edx,DWORD PTR [edi],0x15
  40557b:	es lock loope 0x405556
  40557f:	mov    eax,0x78a04106
  405584:	pop    ds
  405585:	push   ebp
  405586:	retf   
  405587:	jno    0x4055ca
  405589:	test   al,0x6b
  40558b:	retf   0xaa79
  40558e:	ret    0x1613
  405591:	(bad)  
  405592:	or     esp,DWORD PTR [ecx-0x7bc5abc3]
  405598:	mov    ah,BYTE PTR [edx]
  40559a:	and    eax,DWORD PTR [edi+eiz*1]
  40559d:	out    dx,al
  40559e:	xchg   ebx,eax
  40559f:	arpl   WORD PTR [edi-0x28f57009],ax
  4055a5:	imul   edi,DWORD PTR [ecx-0x8ecd04a],0xffffffb3
  4055ac:	inc    edi
  4055ad:	jb     0x405594
  4055af:	inc    ecx
  4055b0:	les    edi,FWORD PTR [ebx+0x61]
  4055b3:	int3   
  4055b4:	sbb    al,0x78
  4055b6:	(bad)  
  4055b7:	js     0x4055fd
  4055b9:	jae    0x405622
  4055bb:	or     cl,al
  4055bd:	mov    eax,0x8c3d2b47
  4055c2:	sahf   
  4055c3:	xor    eax,0x77fe616d
  4055c8:	push   eax
  4055c9:	pop    esi
  4055ca:	push   edi
  4055cb:	push   ecx
  4055cc:	mov    ah,0xac
  4055ce:	(bad)  
  4055cf:	rol    BYTE PTR [ebx],cl
  4055d1:	(bad)  
  4055d2:	std    
  4055d3:	dec    ecx
  4055d4:	inc    esp
  4055d5:	inc    edx
  4055d6:	imul   eax,DWORD PTR [edi],0xfbd06581
  4055dc:	push   ebp
  4055dd:	jge    0x4055e5
  4055df:	icebp  
  4055e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055e1:	idiv   BYTE PTR [esi]
  4055e3:	mov    esi,0xe7d45279
  4055e8:	jmp    0x4055a8
  4055ea:	mov    bl,0x27
  4055ec:	hlt    
  4055ed:	xor    DWORD PTR [ecx+0x66],ecx
  4055f0:	out    0xbd,eax
  4055f2:	push   0x42
  4055f4:	es pop esi
  4055f6:	cmp    DWORD PTR [edi+0x2c],esp
  4055f9:	enter  0x108a,0x69
  4055fd:	cmp    DWORD PTR [ebx-0x1b],0x71
  405601:	iret   
  405602:	icebp  
  405603:	and    al,0xcb
  405605:	push   esi
  405606:	mov    BYTE PTR [ebx+edi*8+0x76],cl
  40560a:	jge    0x405673
  40560c:	mov    ecx,0x95c29c13
  405611:	ss xor al,0xff
  405614:	test   DWORD PTR [esp+ecx*8-0x5f640845],esp
  40561b:	jp     0x405690
  40561d:	jmp    FWORD PTR [ecx+0x19]
  405620:	push   ebx
  405621:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405622:	data16 jns 0x40560d
  405625:	cmp    eax,DWORD PTR [eax-0x676c2c4a]
  40562b:	stos   DWORD PTR es:[edi],eax
  40562c:	pushf  
  40562d:	adc    DWORD PTR [eax],0xf27a909f
  405633:	dec    ebx
  405634:	mov    esp,0xf7f846d1
  405639:	call   0x3998:0x51c72bf2
  405640:	pop    ecx
  405641:	dec    ebx
  405642:	call   0x579da508
  405647:	mov    edx,DWORD PTR [edx]
  405649:	loopne 0x405620
  40564b:	out    0xde,al
  40564d:	fs xor eax,0x20fbd2a0
  405653:	mov    al,0xd0
  405655:	sub    dl,BYTE PTR [eax+ebp*8]
  405658:	shl    DWORD PTR [edi-0x4c746aed],cl
  40565e:	loop   0x4055f5
  405660:	or     al,0xd7
  405662:	sub    al,0x74
  405664:	test   al,0x45
  405666:	mov    esi,DWORD PTR [edi+0x5b]
  405669:	call   0xcbad1bb0
  40566e:	addr16 pusha 
  405670:	mov    dh,0x29
  405672:	rcr    BYTE PTR [ebx+eax*8],0xa6
  405676:	icebp  
  405677:	and    DWORD PTR [ebp+0x3b],esi
  40567a:	fisubr DWORD PTR [ebp+0x47bfe282]
  405680:	call   FWORD PTR [ebp+0x5f]
  405683:	ins    DWORD PTR es:[edi],dx
  405684:	cmp    bh,BYTE PTR [ecx+0x15eed078]
  40568a:	ja     0x4056a6
  40568c:	ins    BYTE PTR es:[edi],dx
  40568d:	cmp    BYTE PTR [eax+0x13],bh
  405690:	ins    DWORD PTR es:[edi],dx
  405691:	fs jb  0x40561b
  405694:	push   0x6b
  405696:	fldpi  
  405698:	mov    ebp,0xa1b146de
  40569d:	cmp    edi,DWORD PTR cs:[ebx-0x26434088]
  4056a4:	in     eax,0xf1
  4056a6:	aaa    
  4056a7:	gs adc al,0x55
  4056aa:	aas    
  4056ab:	add    al,0x42
  4056ad:	mov    dh,0xef
  4056af:	dec    ebx
  4056b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056b1:	(bad)  
  4056b2:	pminsw mm5,QWORD PTR [edx+ebx*2]
  4056b6:	mov    dh,0x36
  4056b8:	dec    ebx
  4056b9:	pop    ebp
  4056ba:	dec    ebx
  4056bb:	add    edx,DWORD PTR [ebp-0x6]
  4056be:	fisubr DWORD PTR [ecx+edi*4-0x66c75cb1]
  4056c5:	xlat   BYTE PTR ds:[ebx]
  4056c6:	sub    BYTE PTR [eax-0x7d],al
  4056c9:	mov    cs,WORD PTR [ecx]
  4056cb:	aad    0x72
  4056cd:	push   esi
  4056ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056cf:	cmp    ebx,DWORD PTR ds:0x54a955e9
  4056d5:	jp     0x405694
  4056d7:	out    0x1a,al
  4056d9:	nop
  4056da:	cmp    al,ch
  4056dc:	sti    
  4056dd:	sub    al,0x88
  4056df:	call   0x6271:0xc8aa850f
  4056e6:	in     eax,dx
  4056e7:	test   al,0x83
  4056e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056ea:	pop    es
  4056eb:	push   ss
  4056ec:	fisttp WORD PTR [ebx-0x6147e4db]
  4056f2:	mov    ds:0x70a7b607,al
  4056f7:	inc    ebp
  4056f8:	aad    0x6c
  4056fa:	mov    ds:0x4e6e6ae,al
  4056ff:	not    BYTE PTR [edi-0x6b]
  405702:	pop    ebp
  405703:	xor    bh,dh
  405705:	mov    bh,0x4d
  405707:	in     al,dx
  405708:	xchg   edx,eax
  405709:	cmp    DWORD PTR [edi-0x48168496],esp
  40570f:	jb     0x4056b0
  405711:	(bad)  
  405712:	dec    esp
  405713:	mov    bl,0x87
  405715:	xchg   ebp,eax
  405716:	lahf   
  405717:	test   BYTE PTR [ecx+0x3694c2e1],0x95
  40571e:	sti    
  40571f:	xor    eax,0xf4818585
  405724:	iret   
  405725:	leave  
  405726:	or     bh,ch
  405728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405729:	(bad)  
  40572a:	sub    ah,BYTE PTR [ebx-0x2c62b5d8]
  405730:	sub    BYTE PTR [edi],bl
  405732:	xchg   esi,eax
  405733:	rol    BYTE PTR [eax],cl
  405735:	push   ecx
  405736:	sahf   
  405737:	rol    DWORD PTR [esi-0x63],0x6a
  40573b:	jmp    0x40570e
  40573d:	std    
  40573e:	cdq    
  40573f:	push   esp
  405740:	in     al,dx
  405741:	test   al,0x76
  405743:	clc    
  405744:	add    DWORD PTR [ebp-0x4],edi
  405747:	(bad)
  40574a:	(bad)  
  40574c:	fcom   DWORD PTR [edx+ecx*4-0x1b104f90]
  405753:	ins    DWORD PTR es:[edi],dx
  405754:	mov    edx,0xbd549e06
  405759:	sbb    eax,0x82d84201
  40575e:	scas   al,BYTE PTR es:[edi]
  40575f:	jge    0x405764
  405761:	mov    ecx,0x9b4c014d
  405766:	cld    
  405767:	dec    esp
  405768:	out    0xe2,eax
  40576a:	enter  0x8d18,0x82
  40576e:	test   BYTE PTR [edi],0x69
  405771:	mov    esi,0x177167ac
  405776:	inc    ecx
  405777:	ret    0x242c
  40577a:	xlat   BYTE PTR ds:[ebx]
  40577b:	jmp    0xb365:0x5ee6fd35
  405782:	test   ah,al
  405784:	aad    0x7c
  405786:	dec    ebp
  405787:	mov    ebp,0x69b1d956
  40578c:	nop
  40578d:	sbb    DWORD PTR [edx+0x7a],0xffffff96
  405791:	(bad)  
  405793:	push   es
  405794:	push   esi
  405795:	xor    DWORD PTR [ecx-0x53],eax
  405798:	xor    ecx,DWORD PTR ds:0x70f2286a
  40579e:	dec    eax
  40579f:	mov    esp,0xe397cd60
  4057a4:	xchg   edx,eax
  4057a5:	popf   
  4057a6:	fsubr  st(3),st
  4057a8:	inc    esp
  4057a9:	ret    0xed49
  4057ac:	loopne 0x40580d
  4057ae:	hlt    
  4057af:	pusha  
  4057b0:	push   es
  4057b1:	jns    0x4057f8
  4057b3:	in     eax,dx
  4057b4:	mov    ds:0xee636d83,eax
  4057b9:	(bad)  
  4057ba:	leave  
  4057bb:	push   esi
  4057bc:	retf   0x66e0
  4057bf:	fdivr  QWORD PTR [ecx-0x6d]
  4057c2:	cmc    
  4057c3:	adc    DWORD PTR [edi],edi
  4057c5:	mov    al,ds:0x7f1bf128
  4057ca:	stc    
  4057cb:	adc    BYTE PTR [edi-0x19db7eaf],dh
  4057d1:	ins    BYTE PTR es:[edi],dx
  4057d2:	mov    WORD PTR [esi+0x3089a67f],cs
  4057d8:	ret    
  4057d9:	aas    
  4057da:	outs   dx,BYTE PTR ds:[esi]
  4057db:	sbb    al,0x8d
  4057dd:	mov    ch,ah
  4057df:	push   ss
  4057e0:	mov    edx,0xe48084c4
  4057e5:	fs stos DWORD PTR es:[edi],eax
  4057e7:	adc    ecx,eax
  4057e9:	mov    esp,0xeca7476a
  4057ee:	test   DWORD PTR [ebx+0x34],ebp
  4057f1:	stc    
  4057f2:	xsavec [eax]
  4057f5:	xchg   edx,eax
  4057f6:	imul   BYTE PTR [edi+0x4f]
  4057f9:	retf   0x7c00
  4057fc:	ins    DWORD PTR es:[edi],dx
  4057fd:	stos   BYTE PTR es:[edi],al
  4057fe:	fiadd  DWORD PTR [edi+0x381e13ae]
  405804:	or     BYTE PTR [ebx-0x30],bh
  405807:	pop    edx
  405808:	lahf   
  405809:	jmp    0xc113a053
  40580e:	xor    ah,0xbe
  405811:	(bad)  
  405813:	mov    ah,0x6d
  405815:	in     al,0xe9
  405817:	cli    
  405818:	fnstsw WORD PTR [ebx+eiz*8+0x4123514b]
  40581f:	push   esp
  405820:	iret   
  405821:	dec    edi
  405822:	xor    eax,0xf97d047d
  405827:	jp     0x4057ac
  405829:	dec    eax
  40582a:	je     0x405837
  40582c:	pop    eax
  40582d:	mov    BYTE PTR [eax-0x8b57d3f],bl
  405833:	push   esp
  405834:	pop    edx
  405835:	mov    ebx,DWORD PTR [bx+di-0x59f0]
  40583a:	and    dh,BYTE PTR [ecx-0x4ab2c376]
  405840:	aad    0x1e
  405842:	rcr    BYTE PTR [eax-0x2e09e3cc],cl
  405848:	sub    BYTE PTR [esp+ebp*1],bh
  40584b:	add    DWORD PTR [edi+0x74e60dc8],ebp
  405851:	pop    ds
  405852:	in     al,0x48
  405854:	mov    ecx,ebx
  405856:	adc    eax,0x210e99f8
  40585b:	call   FWORD PTR [esi]
  40585d:	push   eax
  40585e:	cmc    
  40585f:	xor    dl,ah
  405861:	lea    edi,[esi+0x0]
  405864:	add    bl,BYTE PTR [ebx]
  405866:	retf   0xd2d8
  405869:	xor    edx,DWORD PTR [ebp-0x4c]
  40586c:	and    cl,cl
  40586e:	out    dx,al
  40586f:	or     eax,0x6032accf
  405874:	pop    eax
  405875:	jne    0x4058e9
  405877:	mov    al,0x22
  405879:	jg     0x4057fe
  40587b:	xchg   ecx,eax
  40587c:	outs   dx,BYTE PTR ds:[esi]
  40587d:	jp     0x405893
  40587f:	loop   0x4058d3
  405881:	sahf   
  405882:	mov    ch,0x4c
  405884:	das    
  405885:	add    DWORD PTR [edx],edx
  405887:	push   edi
  405888:	and    eax,0x7a470149
  40588d:	je     0x405865
  40588f:	outs   dx,DWORD PTR ds:[esi]
  405890:	ins    BYTE PTR es:[edi],dx
  405891:	int3   
  405892:	dec    ebx
  405893:	pushf  
  405894:	imul   ecx,DWORD PTR ds:0x4161b936,0x851b704e
  40589f:	sbb    edi,DWORD PTR [edx+0x29]
  4058a2:	and    BYTE PTR [eax],bl
  4058a4:	data16 or al,0x61
  4058a7:	test   eax,0xe7441721
  4058ac:	nop
  4058ad:	out    0x3b,eax
  4058af:	add    eax,0xeb097f1b
  4058b4:	xor    ecx,DWORD PTR [ecx]
  4058b6:	xlat   BYTE PTR ds:[ebx]
  4058b7:	test   BYTE PTR [edx-0x11],dh
  4058ba:	mov    dh,0x51
  4058bc:	jne    0x4058cf
  4058be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058bf:	or     ch,BYTE PTR [esi]
  4058c1:	sahf   
  4058c2:	jp     0x405910
  4058c4:	(bad)  
  4058c5:	push   ecx
  4058c6:	test   eax,0x7b83ce32
  4058cb:	je     0x4058e2
  4058cd:	push   ss
  4058ce:	test   DWORD PTR [ebx],0xebb2d493
  4058d4:	imul   edx,DWORD PTR [edx],0xdfd61dc8
  4058da:	lods   eax,DWORD PTR ds:[esi]
  4058db:	fnstcw WORD PTR [esi+eax*1]
  4058de:	lods   eax,DWORD PTR ds:[esi]
  4058df:	jae    0x4058b4
  4058e1:	or     DWORD PTR ds:0x55d8043e,esi
  4058e7:	std    
  4058e8:	xor    BYTE PTR [ebx],ah
  4058ea:	adc    eax,0x78d75ce6
  4058ef:	(bad)  
  4058f0:	xchg   ebx,eax
  4058f1:	pop    edx
  4058f2:	loope  0x4058ef
  4058f4:	push   eax
  4058f5:	add    eax,0xc96a76f6
  4058fa:	ds jmp 0x40591f
  4058fd:	adc    ah,BYTE PTR [ebp-0x4c]
  405900:	imul   ebx,DWORD PTR [edx+eiz*8+0x21],0xffffffb4
  405905:	ret    0x913e
  405908:	loope  0x405934
  40590a:	std    
  40590b:	push   edi
  40590c:	(bad)  
  40590d:	jns    0x4058f2
  40590f:	sub    DWORD PTR [ebx+0x25],edx
  405912:	add    esp,DWORD PTR [edx]
  405914:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405915:	push   ebp
  405916:	push   ebp
  405917:	mov    al,0xb3
  405919:	ret    0xc98e
  40591c:	xchg   bl,cl
  40591e:	mov    DWORD PTR [edi-0x666eddb5],ebp
  405924:	out    0x3d,al
  405926:	adc    BYTE PTR [edi-0x4428abc5],dl
  40592c:	fcomp  DWORD PTR [edx-0x2e54d9e3]
  405932:	mov    BYTE PTR [edi+0x47eef293],dh
  405938:	mov    esp,0xb1e850e2
  40593d:	je     0x4058e1
  40593f:	inc    eax
  405940:	sub    eax,0x30399e02
  405945:	jecxz  0x405992
  405947:	out    0x54,eax
  405949:	stos   BYTE PTR es:[edi],al
  40594a:	icebp  
  40594b:	mov    ah,0x5a
  40594d:	out    dx,eax
  40594e:	leave  
  40594f:	aaa    
  405950:	mov    ch,0x3f
  405952:	pop    es
  405953:	mul    ecx
  405955:	or     eax,0xa37e7254
  40595a:	sbb    DWORD PTR [ecx],0xffffffe3
  40595d:	sti    
  40595e:	adc    dh,BYTE PTR [esi]
  405960:	xchg   ecx,eax
  405961:	test   eax,0x5883e562
  405966:	push   ebx
  405967:	pop    ecx
  405968:	test   dh,0x53
  40596b:	xchg   BYTE PTR [ebp+0x7ed4c765],ah
  405971:	mov    WORD PTR [edx+0x22],ds
  405974:	mov    ebp,0x293490cd
  405979:	push   ss
  40597a:	cmp    ch,bh
  40597c:	push   esi
  40597d:	and    edi,DWORD PTR [edx]
  40597f:	fimul  WORD PTR [esi+0x5c]
  405982:	jle    0x405938
  405984:	aaa    
  405985:	inc    ebx
  405986:	adc    eax,DWORD PTR [edx+0x71]
  405989:	pop    ebx
  40598a:	jl     0x405936
  40598c:	ret    0xbb11
  40598f:	test   al,0xa5
  405991:	out    0x3f,eax
  405993:	nop
  405994:	arpl   WORD PTR [edi-0x7057dce3],di
  40599a:	xchg   edi,eax
  40599b:	fistp  DWORD PTR [eax-0x6e]
  40599e:	stos   BYTE PTR es:[edi],al
  40599f:	scas   al,BYTE PTR es:[edi]
  4059a0:	das    
  4059a1:	xor    dh,BYTE PTR [ebx+ebx*1+0x39fbe893]
  4059a8:	or     eax,0x60179bc4
  4059ad:	xchg   esi,eax
  4059ae:	xor    ebp,DWORD PTR [edx]
  4059b0:	pop    esi
  4059b1:	jno    0x405a1e
  4059b3:	aas    
  4059b4:	push   esi
  4059b5:	aam    0x80
  4059b7:	test   DWORD PTR [ebx-0x90dc5fb],ebx
  4059bd:	adc    esp,DWORD PTR [esp+eax*1]
  4059c0:	push   0xffffffa9
  4059c2:	dec    eax
  4059c3:	out    0x1f,eax
  4059c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059c6:	jmp    0x6027:0x1c8a27b9
  4059cd:	or     eax,0xa9628afd
  4059d2:	sub    DWORD PTR [ecx+0x5f],ecx
  4059d5:	mov    eax,ds:0xaa9b2896
  4059da:	jmp    0x49ad2662
  4059df:	adc    edx,eax
  4059e1:	push   cs
  4059e2:	in     eax,0x50
  4059e4:	or     DWORD PTR [edi-0x44],edi
  4059e7:	push   eax
  4059e8:	push   edi
  4059e9:	mov    BYTE PTR [edx],al
  4059eb:	mov    edx,0x253d11af
  4059f0:	push   0x7e
  4059f2:	shl    DWORD PTR [bp+si],0x7f
  4059f6:	das    
  4059f7:	mov    esp,0xf94d5c4b
  4059fc:	push   cs
  4059fd:	outs   dx,DWORD PTR ds:[esi]
  4059fe:	sub    edx,DWORD PTR [ebx+0x39]
  405a01:	pop    ebx
  405a02:	pop    edx
  405a03:	adc    al,0xea
  405a05:	sub    al,0x34
  405a07:	pop    ebp
  405a08:	iret   
  405a09:	mov    eax,ds:0x4619a35a
  405a0e:	ret    
  405a0f:	int3   
  405a10:	sbb    ch,ah
  405a12:	jle    0x405a74
  405a14:	mov    ebx,0xe5b4eb4f
  405a19:	loope  0x4059a3
  405a1b:	cmp    DWORD PTR [esi],ebx
  405a1d:	and    ecx,0x49
  405a20:	test   al,0xc5
  405a22:	sub    BYTE PTR [eax+0x23d77074],dh
  405a28:	cli    
  405a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a2a:	push   0xf765abb4
  405a2f:	ret    
  405a30:	and    al,0xc1
  405a32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a33:	sahf   
  405a34:	shl    ecx,cl
  405a36:	dec    edi
  405a37:	test   DWORD PTR [ebp+0x181d22d7],0xe4a9ac98
  405a41:	retf   0x3b58
  405a44:	pusha  
  405a45:	imul   ebp,eax,0x78819e88
  405a4b:	inc    ecx
  405a4c:	scas   eax,DWORD PTR es:[edi]
  405a4d:	pop    ds
  405a4e:	sti    
  405a4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a50:	inc    edx
  405a51:	mov    bh,BYTE PTR [ecx-0x1352a1b0]
  405a57:	mov    ebx,0x34c141f6
  405a5c:	es mov bh,0xc3
  405a5f:	push   esi
  405a60:	xor    al,BYTE PTR [edi+0x4d1eb74c]
  405a66:	arpl   WORD PTR gs:[eax+edi*1-0x51],sp
  405a6b:	shl    DWORD PTR [ecx],cl
  405a6d:	outs   dx,BYTE PTR ds:[esi]
  405a6e:	das    
  405a6f:	mov    ebp,0x13c4215c
  405a74:	sbb    ebp,DWORD PTR [eax+0x64]
  405a77:	mov    esp,0x869036da
  405a7c:	fsub   DWORD PTR [eax+0x1c84b532]
  405a82:	imul   eax,DWORD PTR [ecx+eax*2],0xa2f75adc
  405a89:	enter  0xd9b6,0x5b
  405a8d:	sub    BYTE PTR [ebx+ebp*2],ch
  405a90:	push   cs
  405a91:	jmp    0x405aa5
  405a93:	or     edx,DWORD PTR [ebp+0x12d9d706]
  405a99:	push   esp
  405a9a:	dec    ebx
  405a9b:	dec    DWORD PTR [edi]
  405a9d:	not    DWORD PTR [ecx+0x3a]
  405aa0:	xchg   ebp,eax
  405aa1:	sbb    DWORD PTR [edx+0x18e6d76],ebp
  405aa7:	or     cl,BYTE PTR [ebx]
  405aa9:	adc    edi,DWORD PTR ds:0x81871aad
  405aaf:	cdq    
  405ab0:	jae    0x405a37
  405ab2:	(bad)  
  405ab3:	(bad)  
  405ab4:	jge    0x405ac3
  405ab6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ab7:	inc    ebp
  405ab8:	pushf  
  405ab9:	ja     0x405a69
  405abb:	jle    0x405b13
  405abd:	cmp    eax,0x3af1ba5a
  405ac2:	sub    eax,0xf1f0f869
  405ac7:	pop    ebx
  405ac8:	in     eax,dx
  405ac9:	mov    dh,0xb9
  405acb:	mov    ds:0xb48d9828,al
  405ad0:	cs in  eax,dx
  405ad2:	push   eax
  405ad3:	call   DWORD PTR [eax-0x2e]
  405ad6:	sbb    al,BYTE PTR [edx-0x23]
  405ad9:	enter  0x7a6,0x62
  405add:	inc    ecx
  405ade:	xchg   ebx,eax
  405adf:	fsub   QWORD PTR [ebp+0x42d17ac2]
  405ae5:	mov    esp,0xd25c6a0f
  405aea:	dec    ecx
  405aeb:	or     ebx,DWORD PTR [ecx+edi*8+0x19]
  405aef:	mov    esi,0x567331f0
  405af4:	or     DWORD PTR [esi+0x3a3634fc],edi
  405afa:	dec    ecx
  405afb:	ins    BYTE PTR es:[edi],dx
  405afc:	mov    esp,0xb904a6ce
  405b01:	push   0xffffffdd
  405b03:	mov    eax,0x64319628
  405b08:	dec    edx
  405b09:	inc    esp
  405b0a:	mov    WORD PTR [ecx],es
  405b0c:	sbb    al,0x11
  405b0e:	xor    BYTE PTR [ebx+0x3],ah
  405b11:	les    eax,FWORD PTR [esi+0x5d]
  405b14:	adc    ecx,ecx
  405b16:	add    eax,0x3864a56
  405b1b:	das    
  405b1c:	pop    es
  405b1d:	pusha  
  405b1e:	adc    eax,0xc991556b
  405b23:	fistp  QWORD PTR [ebx-0x57a8116]
  405b29:	(bad)  
  405b2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b2b:	push   ebx
  405b2c:	xchg   edi,eax
  405b2d:	mov    ebp,0xab4bc263
  405b32:	push   edi
  405b33:	pop    ebp
  405b34:	mov    edi,0x36e5b800
  405b39:	dec    ebp
  405b3a:	cmp    eax,0x64de1845
  405b3f:	add    al,0x34
  405b41:	pop    ss
  405b42:	in     al,dx
  405b43:	and    dh,bl
  405b45:	in     eax,dx
  405b46:	sbb    DWORD PTR [edx+0x6e],eax
  405b49:	and    eax,0x80fd7c6a
  405b4e:	xchg   edi,eax
  405b4f:	push   ebp
  405b50:	mov    ebx,0x9af317f5
  405b55:	lds    edx,FWORD PTR [eax]
  405b57:	or     ch,BYTE PTR [ecx+0x65]
  405b5a:	sub    cl,BYTE PTR [eax]
  405b5c:	dec    ebx
  405b5d:	push   edx
  405b5e:	test   eax,0x31a2837a
  405b63:	sbb    DWORD PTR [edi],ebx
  405b65:	xchg   ecx,eax
  405b66:	test   BYTE PTR [eax],ah
  405b68:	cwde   
  405b69:	jmp    0x984c8f7
  405b6e:	pop    ebx
  405b6f:	push   es
  405b70:	ins    DWORD PTR es:[edi],dx
  405b71:	mov    ebp,0x203ae2c9
  405b76:	mov    dh,0xef
  405b78:	popa   
  405b79:	fidivr DWORD PTR [ecx-0x7af9fef5]
  405b7f:	jae    0x405bf1
  405b81:	xor    al,0x26
  405b83:	cld    
  405b84:	mov    edx,0x1b6069d4
  405b89:	jl     0x405bb0
  405b8b:	push   esp
  405b8c:	jp     0x405be1
  405b8e:	pop    ss
  405b8f:	mov    bl,0x6c
  405b91:	cmp    DWORD PTR [ebx+ebx*2+0x21],0x24158f2d
  405b99:	js     0x405b66
  405b9b:	jmp    0x405bde
  405b9d:	in     al,0xbf
  405b9f:	ja     0x405b93
  405ba1:	ret    0xb5a
  405ba4:	mov    WORD PTR [ebp-0xd18d6f2],gs
  405baa:	ds cdq 
  405bac:	ror    bh,1
  405bae:	rol    al,0x7c
  405bb1:	and    DWORD PTR [ebx+0x14],edi
  405bb4:	jne    0x405bca
  405bb6:	jmp    0xd9983a05
  405bbb:	(bad)  
  405bbc:	out    0xd9,al
  405bbe:	push   esp
  405bbf:	push   ds
  405bc0:	mov    DWORD PTR [edi+0x7d],ebp
  405bc3:	nop
  405bc4:	and    eax,edx
  405bc6:	ss retf 
  405bc8:	test   eax,0xf8a88a7e
  405bcd:	sbb    eax,0xae878e21
  405bd2:	sbb    ch,BYTE PTR [ecx-0x6ecdc0ae]
  405bd8:	int3   
  405bd9:	mov    ch,BYTE PTR [eax+0x41]
  405bdc:	sbb    eax,0x33a0b395
  405be1:	ins    BYTE PTR es:[edi],dx
  405be2:	and    DWORD PTR ds:0xe6da52c,0x82573af
  405bec:	repz daa 
  405bee:	xchg   esi,eax
  405bef:	shr    DWORD PTR [esi],cl
  405bf1:	adc    al,0xbd
  405bf3:	iret   
  405bf4:	mov    esp,0x7007faad
  405bf9:	mov    ds:0x6371bd69,al
  405bfe:	jbe    0xb155dd5c
  405c04:	cs fst st(5)
  405c07:	out    dx,eax
  405c08:	mov    bh,BYTE PTR [ebp-0x54d79a94]
  405c0e:	mov    al,0xbd
  405c10:	cwde   
  405c11:	cmp    dh,cl
  405c13:	adc    BYTE PTR [ecx],0x85
  405c16:	mov    bl,0xc0
  405c18:	es int 0xd0
  405c1b:	rcr    DWORD PTR [ecx+0x28],cl
  405c1e:	outs   dx,DWORD PTR ds:[esi]
  405c1f:	jne    0x405c59
  405c21:	or     esi,ecx
  405c23:	push   esp
  405c24:	push   ebx
  405c25:	mov    edx,0xca338153
  405c2a:	retf   
  405c2b:	dec    ebp
  405c2c:	mov    eax,ds:0xefbd06c3
  405c31:	gs test eax,0xd2300788
  405c37:	cmp    BYTE PTR ds:0x501083a9,dl
  405c3d:	and    DWORD PTR [edi+0x46b78617],ecx
  405c43:	jmp    0xc5c66166
  405c48:	ins    DWORD PTR es:[edi],dx
  405c49:	mov    BYTE PTR [ebp+0x5d98440d],ah
  405c4f:	pop    ebx
  405c50:	imul   edi,DWORD PTR [ebx+0x67],0xedcba03f
  405c57:	add    dl,BYTE PTR [eax+esi*1]
  405c5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c5b:	xor    edi,DWORD PTR [edx+0x9]
  405c5e:	in     al,dx
  405c5f:	pushf  
  405c60:	pop    esp
  405c61:	fidivr WORD PTR [ebx-0x65]
  405c64:	jecxz  0x405bee
  405c66:	mov    edi,0x59b072ab
  405c6b:	test   al,0x4e
  405c6d:	daa    
  405c6e:	cli    
  405c6f:	push   cs
  405c70:	jmp    0x405ced
  405c72:	data16 data16 outs dx,BYTE PTR ds:[esi]
  405c75:	adc    al,0xd9
  405c77:	shl    ebp,1
  405c79:	fstp   QWORD PTR [eax-0x7a]
  405c7c:	hlt    
  405c7d:	push   edx
  405c7e:	je     0x405c18
  405c80:	das    
  405c81:	pop    ebx
  405c82:	pop    ebx
  405c83:	ss in  eax,dx
  405c85:	mov    al,ds:0x50f4bb7b
  405c8a:	mov    ds:0xa948e301,eax
  405c8f:	stos   DWORD PTR es:[edi],eax
  405c90:	push   es
  405c91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c92:	pop    edi
  405c93:	and    al,0x8
  405c95:	sbb    al,al
  405c97:	xor    ch,bh
  405c99:	and    edi,DWORD PTR [esi+edx*2+0x2ec9789b]
  405ca0:	aas    
  405ca1:	dec    ebp
  405ca2:	dec    ebp
  405ca3:	test   al,0x57
  405ca5:	imul   ecx,DWORD PTR [edi-0x36],0x4d
  405ca9:	(bad)  
  405cab:	cmp    al,0x1b
  405cad:	mov    bl,BYTE PTR [edi-0x61995573]
  405cb3:	xchg   DWORD PTR [ecx-0x2656f3e0],ecx
  405cb9:	in     eax,0xa9
  405cbb:	or     al,0xf4
  405cbd:	pop    edi
  405cbe:	dec    esi
  405cbf:	mov    ds:0x28359e41,al
  405cc4:	aaa    
  405cc5:	out    dx,al
  405cc6:	and    esp,ecx
  405cc8:	mov    edi,0xde3fc5f9
  405ccd:	jne    0x405d1b
  405ccf:	add    esp,edx
  405cd1:	and    esp,DWORD PTR [ebp+0x10678730]
  405cd7:	xor    eax,0x5e41e70e
  405cdc:	out    0x2b,al
  405cde:	mov    ebx,0x5a31e7ab
  405ce3:	pop    ebx
  405ce4:	inc    ebx
  405ce5:	outs   dx,BYTE PTR ds:[esi]
  405ce6:	cmp    eax,0x22705d68
  405ceb:	aam    0xbd
  405ced:	cdq    
  405cee:	xchg   BYTE PTR [ebx+ebp*4],bl
  405cf1:	adc    BYTE PTR [esp+eax*4-0x28931530],al
  405cf8:	mul    eax
  405cfa:	loop   0x405d4c
  405cfc:	push   esi
  405cfd:	call   0x53f1:0xbd22a34c
  405d04:	fld    TBYTE PTR [ebp+0x89bb6cb]
  405d0a:	retf   0xa88d
  405d0d:	mov    dh,0xbc
  405d0f:	enter  0x5bc7,0x71
  405d13:	stc    
  405d14:	out    0xe,eax
  405d16:	mov    edx,0x5a16c8f9
  405d1b:	mov    edi,0xa62242b7
  405d20:	and    DWORD PTR [ecx-0x4ab6522c],edx
  405d26:	xlat   BYTE PTR ds:[ebx]
  405d27:	push   edx
  405d28:	(bad)  
  405d29:	xor    DWORD PTR [eax-0x11],esp
  405d2c:	sub    ecx,DWORD PTR [eax-0x6e27e537]
  405d32:	(bad)  
  405d34:	int    0x23
  405d36:	imul   ebp,DWORD PTR [eax],0xffffffb4
  405d39:	ss cmp al,0xd0
  405d3c:	sbb    bh,BYTE PTR [edi]
  405d3e:	inc    eax
  405d3f:	in     al,0xe
  405d41:	cmp    DWORD PTR [edx+0xcc18591],edx
  405d47:	push   0x7e
  405d49:	mov    bh,0xfb
  405d4b:	mov    ah,0x5e
  405d4d:	ja     0x405d91
  405d4f:	push   eax
  405d50:	call   0xb39336cd
  405d55:	jbe    0x405dbe
  405d57:	test   DWORD PTR [edx],0x2e6b2263
  405d5d:	cwde   
  405d5e:	jle    0x405d83
  405d60:	(bad)  
  405d61:	je     0x405d70
  405d63:	jns    0x405db6
  405d65:	xchg   esi,eax
  405d66:	jbe    0x405d71
  405d68:	rol    DWORD PTR [ebx-0x2eef4216],1
  405d6e:	fwait
  405d6f:	outs   dx,DWORD PTR ds:[esi]
  405d70:	hlt    
  405d71:	idiv   DWORD PTR [ebx-0x562db2f3]
  405d77:	and    ah,BYTE PTR [ecx+edi*1-0x47]
  405d7b:	push   esp
  405d7c:	mul    BYTE PTR ds:0x4689f1a9
  405d82:	add    al,0x98
  405d84:	sbb    esi,DWORD PTR [edi]
  405d86:	push   cs
  405d87:	scas   al,BYTE PTR es:[edi]
  405d88:	out    0x16,eax
  405d8a:	scas   eax,DWORD PTR es:[edi]
  405d8b:	rcr    DWORD PTR ss:[esi-0x748d118a],1
  405d92:	hlt    
  405d93:	mov    al,0x3d
  405d95:	lods   al,BYTE PTR ds:[esi]
  405d96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d97:	jmp    DWORD PTR [eax]
  405d99:	jge    0x405dbb
  405d9b:	and    esi,DWORD PTR [eax+ebx*1-0x27d95f24]
  405da2:	dec    edi
  405da3:	pushf  
  405da4:	xchg   ebx,eax
  405da5:	and    eax,0xe3b07e2e
  405daa:	mov    BYTE PTR [edi-0x61],ah
  405dad:	rol    DWORD PTR [ebx-0x6b97b788],1
  405db3:	aaa    
  405db4:	mov    DWORD PTR [edx-0x5d],ebx
  405db7:	mov    eax,0xd876b9b3
  405dbc:	push   esi
  405dbd:	dec    edi
  405dbe:	xor    dh,dl
  405dc0:	hlt    
  405dc1:	inc    edi
  405dc2:	mov    bl,0x81
  405dc4:	sbb    eax,0x48e25dc8
  405dc9:	push   ds
  405dca:	sar    DWORD PTR ds:0xd35a4e1a,cl
  405dd0:	mov    esp,0xc8f13357
  405dd5:	nop
  405dd6:	dec    ebp
  405dd7:	test   DWORD PTR [eax+0x2f7d8cf1],0xa824577c
  405de1:	test   DWORD PTR [esi-0x22a17aeb],edx
  405de7:	cmp    eax,0xfc3a8eb1
  405dec:	aaa    
  405ded:	add    al,0x6c
  405def:	push   esp
  405df0:	or     DWORD PTR [ebp+0x133fe909],edi
  405df6:	sub    bh,BYTE PTR [eax]
  405df8:	(bad)  
  405df9:	(bad)  
  405dfa:	(bad)  
  405dfb:	jmp    0xed68cc29
  405e00:	and    al,0xe2
  405e02:	in     al,dx
  405e03:	icebp  
  405e04:	sbb    esi,DWORD PTR [eax+0x3529a2d8]
  405e0a:	addr16 push edi
  405e0c:	shr    BYTE PTR cs:[eax-0x54],1
  405e10:	jp     0x405d9a
  405e12:	dec    eax
  405e13:	adc    bl,dl
  405e15:	hlt    
  405e16:	inc    ebx
  405e17:	(bad)  
  405e18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e19:	jb     0x405e1d
  405e1b:	push   edx
  405e1c:	ja     0x405e36
  405e1e:	arpl   WORD PTR [edi+0x3e],ax
  405e21:	jne    0x405e74
  405e23:	jp     0x405dc7
  405e25:	data16 fimul DWORD PTR [edx]
  405e28:	loopne 0x405dbf
  405e2a:	mov    gs,WORD PTR [edx]
  405e2c:	mov    al,ds:0xff260766
  405e31:	xchg   DWORD PTR [eax+0x5c],ecx
  405e34:	add    BYTE PTR [ecx-0x5d77805a],bh
  405e3a:	mov    edi,esp
  405e3c:	out    dx,eax
  405e3d:	loopne 0x405dcd
  405e3f:	sub    eax,0x612659a2
  405e44:	cwde   
  405e45:	or     BYTE PTR [esi+edx*4],dh
  405e48:	pop    ecx
  405e49:	sub    ebx,DWORD PTR ds:0xa6739912
  405e4f:	mov    BYTE PTR [ebx+0x22f8f4c8],bl
  405e55:	aas    
  405e56:	fs inc eax
  405e58:	sub    DWORD PTR [esi-0x27ebd017],ecx
  405e5e:	loope  0x405e8f
  405e60:	mov    di,0xec55
  405e64:	popa   
  405e65:	out    0xe5,al
  405e67:	iret   
  405e68:	inc    esi
  405e69:	fnsave [ecx+0x1b]
  405e6c:	cli    
  405e6d:	and    esi,esi
  405e6f:	and    al,0xd6
  405e71:	mov    ?,WORD PTR [ebp-0x6abf712b]
  405e77:	leave  
  405e78:	imul   eax,DWORD PTR [edi-0x1b],0x81589635
  405e7f:	shr    BYTE PTR [esi],cl
  405e81:	popa   
  405e82:	add    eax,DWORD PTR [edi]
  405e84:	push   0x90a2136b
  405e89:	outs   dx,BYTE PTR ds:[esi]
  405e8a:	mov    edx,0x5d587f63
  405e8f:	faddp  st(2),st
  405e91:	add    eax,0x547ad9f3
  405e96:	push   esp
  405e97:	leave  
  405e98:	pushf  
  405e99:	fld    DWORD PTR [eax]
  405e9b:	pop    ss
  405e9c:	pop    ebp
  405e9d:	push   esp
  405e9e:	or     bh,dl
  405ea0:	es push esi
  405ea2:	sub    BYTE PTR [eax+0x4d],ah
  405ea5:	push   ebx
  405ea6:	stc    
  405ea7:	ficom  WORD PTR [ebx+0x5b]
  405eaa:	test   al,0x4
  405eac:	imul   esp,DWORD PTR [esi],0xac19afce
  405eb2:	and    cl,BYTE PTR [ebx]
  405eb4:	jp     0x405eb3
  405eb6:	mov    edx,DWORD PTR ss:[edi+ebp*8-0x3f]
  405ebb:	arpl   WORD PTR [ebx+0x4b1c1a20],bx
  405ec1:	push   edx
  405ec2:	sar    ebx,cl
  405ec4:	sub    bl,BYTE PTR [eax-0x42]
  405ec7:	and    eax,0x5f8c8144
  405ecc:	jp     0x405efd
  405ece:	cmp    dl,BYTE PTR [ebp-0x30]
  405ed1:	js     0x405ea9
  405ed3:	pusha  
  405ed4:	loop   0x405f16
  405ed6:	sub    DWORD PTR ds:0x9d9438ef,ebx
  405edc:	pop    esp
  405edd:	mov    eax,ds:0xc9662654
  405ee2:	mov    dh,0x45
  405ee4:	fisub  DWORD PTR [esi+0x7c]
  405ee7:	imul   esp,DWORD PTR [esi],0xffffff8c
  405eea:	pusha  
  405eeb:	pop    ebx
  405eec:	out    0x46,al
  405eee:	xchg   edx,eax
  405eef:	frstor [edx]
  405ef1:	xor    BYTE PTR [esi-0x728ff94f],dh
  405ef7:	adc    esp,esp
  405ef9:	out    dx,al
  405efa:	inc    ebp
  405efb:	mov    al,ds:0x54f6c683
  405f00:	xchg   esp,eax
  405f01:	enter  0xd29e,0xc9
  405f05:	cli    
  405f06:	mov    esi,0x8c7c4b27
  405f0b:	xor    eax,ebp
  405f0d:	outs   dx,BYTE PTR ds:[esi]
  405f0e:	(bad)  
  405f0f:	frstor [edi]
  405f11:	push   eax
  405f12:	inc    edi
  405f13:	jb     0x405f1e
  405f15:	adc    esp,DWORD PTR [edi]
  405f17:	mov    BYTE PTR [edi-0x1b],cl
  405f1a:	fwait
  405f1b:	xcrypt-ofb (bad)
  405f1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f1d:	jmp    0x37a0f616
  405f22:	enter  0xc941,0xcd
  405f26:	mov    al,ds:0x112ea6e7
  405f2b:	sbb    DWORD PTR [eax+0x31b41cdd],edx
  405f31:	test   al,0xd3
  405f33:	fmulp  st(1),st
  405f35:	and    BYTE PTR [esi+0x3d],dh
  405f38:	(bad)  
  405f39:	pop    ebp
  405f3a:	loopne 0x405f5b
  405f3c:	jmp    0x6aad6fc1
  405f41:	into   
  405f42:	jl     0x405efe
  405f44:	and    al,0x20
  405f46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f47:	gs mov eax,0x6f394660
  405f4d:	call   0xffba4a4c
  405f52:	test   eax,0x195de83c
  405f57:	stos   BYTE PTR es:[edi],al
  405f58:	cmp    bl,ah
  405f5a:	sbb    BYTE PTR [ebx],dh
  405f5c:	popa   
  405f5d:	imul   esp,edx,0xd0b118a0
  405f63:	pop    edi
  405f64:	js     0x405fc3
  405f66:	mov    ecx,?
  405f68:	jbe    0x405fa4
  405f6a:	jae    0x405f6a
  405f6c:	(bad)  
  405f6d:	repz inc edx
  405f6f:	hlt    
  405f70:	test   DWORD PTR [ecx-0x56],eax
  405f73:	jl     0x405fe7
  405f75:	mov    edx,0xa75299ab
  405f7a:	les    edx,FWORD PTR [edi+0x7d]
  405f7d:	push   edx
  405f7e:	dec    ecx
  405f7f:	ficom  DWORD PTR [edi+0x7d]
  405f82:	sar    ebp,cl
  405f84:	lods   eax,DWORD PTR ds:[esi]
  405f85:	dec    esi
  405f86:	and    eax,0x65c4ddcc
  405f8b:	mov    ch,0xf4
  405f8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f8e:	xchg   DWORD PTR [ecx+eiz*4],esp
  405f91:	or     ebx,DWORD PTR [eax]
  405f93:	iret   
  405f94:	fdiv   QWORD PTR [ebp-0x351fbbcc]
  405f9a:	jmp    0x3472:0x4a8fb86b
  405fa1:	cmp    BYTE PTR [eax],0xe1
  405fa4:	push   cs
  405fa5:	ja     0x405f7e
  405fa7:	jns    0x405fce
  405fa9:	ins    BYTE PTR es:[edi],dx
  405faa:	and    DWORD PTR [eax+0xdc6cedc],0xbe219d4
  405fb4:	shl    DWORD PTR [esp+edx*1],0x4c
  405fb8:	xchg   esp,eax
  405fb9:	cld    
  405fba:	mov    edx,0x72841b96
  405fbf:	sbb    DWORD PTR ss:[esi+0x0],edi
  405fc3:	out    dx,eax
  405fc4:	fldenv [esi+0x501a8156]
  405fca:	cs xchg ebx,eax
  405fcc:	loope  0x405f6a
  405fce:	test   BYTE PTR [eax+0x6fa985ad],al
  405fd4:	mov    al,ds:0x697f1365
  405fd9:	test   eax,0x3567d1e3
  405fde:	test   cl,cl
  405fe0:	outs   dx,DWORD PTR ds:[esi]
  405fe1:	cmp    dl,0xd
  405fe4:	dec    esp
  405fe5:	sahf   
  405fe6:	sbb    ebp,DWORD PTR [ebx+0x23255d4e]
  405fec:	sbb    esp,DWORD PTR ds:0xe809338c
  405ff2:	pop    esi
  405ff3:	stos   BYTE PTR es:[edi],al
  405ff4:	or     DWORD PTR [esp+ebx*4+0x6db1b8cf],ebp
  405ffb:	sbb    esp,0xfffffff0
  405ffe:	mov    al,0xb8
  406000:	push   0x2b2d226f
  406005:	cld    
  406006:	loope  0x405fc8
  406008:	and    ecx,edx
  40600a:	inc    edi
  40600b:	cli    
  40600c:	adc    BYTE PTR [ebp+0x7df9811c],dl
  406012:	add    ch,dl
  406014:	dec    ebp
  406015:	lahf   
  406016:	enter  0xb56b,0x7d
  40601a:	mov    dl,0xc2
  40601c:	fucomp st(3)
  40601e:	or     DWORD PTR [edi+0x75],esi
  406021:	mov    edi,0xa2eabccb
  406026:	xlat   BYTE PTR ds:[ebx]
  406027:	test   al,0xba
  406029:	sbb    dl,BYTE PTR [edi-0x267c025]
  40602f:	cs repnz in eax,dx
  406032:	inc    ebp
  406033:	jbe    0x405fbb
  406035:	call   0x33d492a8
  40603a:	mov    BYTE PTR [ebx],0xc7
  40603d:	cmp    edx,eax
  40603f:	je     0x408557
  406045:	mov    eax,DWORD PTR [ebp-0x8]
  406048:	mov    DWORD PTR [ebp-0x18],eax
  40604b:	mov    eax,DWORD PTR [ebp-0x10]
  40604e:	add    eax,DWORD PTR [ebp-0x54]
  406051:	mov    DWORD PTR [ebp-0x1c],0xf89c85a1
  406058:	mov    DWORD PTR [ebp-0x8],eax
  40605b:	mov    eax,0xf89c85a2
  406060:	mov    DWORD PTR [ebp-0x28],eax
  406063:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  40606a:	mov    DWORD PTR [ebp-0x40],0xf89c85bc
  406071:	mov    DWORD PTR [ebp-0x30],eax
  406074:	mov    eax,DWORD PTR [ebp-0x1c]
  406077:	xor    eax,esi
  406079:	add    eax,edi
  40607b:	jmp    0x408513
  406080:	mov    DWORD PTR [ebp-0x4c],0xf89c85b4
  406087:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  40608e:	mov    eax,DWORD PTR [ebp-0x30]
  406091:	mov    edx,DWORD PTR [ebp-0xc]
  406094:	xor    eax,esi
  406096:	add    eax,edi
  406098:	imul   eax,edx
  40609b:	mov    edx,DWORD PTR [ebp-0x8]
  40609e:	mov    al,BYTE PTR [eax+edx*1]
  4060a1:	mov    BYTE PTR [ebp-0x1],al
  4060a4:	mov    eax,DWORD PTR [ebp-0x30]
  4060a7:	mov    edx,DWORD PTR [ebp-0xc]
  4060aa:	xor    eax,esi
  4060ac:	add    eax,edi
  4060ae:	imul   eax,edx
  4060b1:	mov    edx,DWORD PTR [ebp-0x5c]
  4060b4:	xor    edx,esi
  4060b6:	add    eax,edx
  4060b8:	mov    edx,DWORD PTR [ebp-0x8]
  4060bb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  4060c3:	mov    edx,DWORD PTR [ebp-0x4c]
  4060c6:	xor    edx,esi
  4060c8:	lea    eax,[edx+eax*1+0x3272f3]
  4060cf:	movzx  edx,BYTE PTR [ebp-0x1]
  4060d3:	xor    edx,eax
  4060d5:	mov    BYTE PTR [ebp-0x1],dl
  4060d8:	mov    al,BYTE PTR [ebp-0x1]
  4060db:	mov    edx,DWORD PTR [ebp-0x30]
  4060de:	mov    ebx,DWORD PTR [ebp-0xc]
  4060e1:	xor    edx,esi
  4060e3:	add    edx,edi
  4060e5:	imul   edx,ebx
  4060e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4060eb:	mov    BYTE PTR [edx+ebx*1],al
  4060ee:	mov    eax,DWORD PTR [ebp-0x30]
  4060f1:	mov    edx,DWORD PTR [ebp-0xc]
  4060f4:	xor    eax,esi
  4060f6:	add    eax,edi
  4060f8:	imul   eax,edx
  4060fb:	mov    edx,DWORD PTR [ebp-0x8]
  4060fe:	mov    al,BYTE PTR [eax+edx*1]
  406101:	mov    BYTE PTR [ebp-0x1],al
  406104:	mov    eax,DWORD PTR [ebp-0x30]
  406107:	mov    edx,DWORD PTR [ebp-0xc]
  40610a:	xor    eax,esi
  40610c:	add    eax,edi
  40610e:	imul   eax,edx
  406111:	mov    edx,DWORD PTR [ebp-0x28]
  406114:	xor    edx,esi
  406116:	add    eax,edx
  406118:	mov    edx,DWORD PTR [ebp-0x8]
  40611b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  406123:	mov    edx,DWORD PTR [ebp-0x50]
  406126:	xor    edx,esi
  406128:	lea    eax,[edx+eax*1+0x3272f3]
  40612f:	movzx  edx,BYTE PTR [ebp-0x1]
  406133:	xor    edx,eax
  406135:	mov    BYTE PTR [ebp-0x1],dl
  406138:	mov    al,BYTE PTR [ebp-0x1]
  40613b:	mov    edx,DWORD PTR [ebp-0x30]
  40613e:	mov    ebx,DWORD PTR [ebp-0xc]
  406141:	xor    edx,esi
  406143:	add    edx,edi
  406145:	imul   edx,ebx
  406148:	mov    ebx,DWORD PTR [ebp-0x8]
  40614b:	jmp    0x4084fc
  406150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406151:	mov    dh,0x7b
  406153:	sbb    eax,0x86859860
  406158:	scas   eax,DWORD PTR es:[edi]
  406159:	mov    cl,0xac
  40615b:	nop
  40615c:	pop    esp
  40615d:	jo     0x4060f9
  40615f:	fwait
  406160:	pop    ebx
  406161:	cmp    BYTE PTR [ebx-0x7ca3107d],al
  406167:	or     DWORD PTR [edx+0x5e95d970],0x24
  40616e:	push   0xffffffab
  406170:	rcl    DWORD PTR [edi-0x21],0xce
  406174:	bound  esi,QWORD PTR [ebp-0x58885e13]
  40617a:	sbb    BYTE PTR [edi+esi*1-0x36ec6889],ah
  406181:	mov    dh,0xf1
  406183:	or     esi,DWORD PTR [eax]
  406185:	das    
  406186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406187:	inc    edi
  406188:	sbb    ecx,DWORD PTR [eax-0x6b]
  40618b:	dec    esi
  40618c:	test   BYTE PTR [ebx-0x72],0x38
  406190:	cmc    
  406191:	xchg   ebp,eax
  406192:	shr    BYTE PTR [eax-0x27],cl
  406195:	(bad)  
  406196:	adc    al,0x10
  406198:	mov    eax,0x1c4b7de5
  40619d:	test   al,0x51
  40619f:	jp     0x4061ae
  4061a1:	nop
  4061a2:	pop    edi
  4061a3:	test   al,0x23
  4061a5:	mov    ss,WORD PTR [edx+0xb7807aa]
  4061ab:	jno    0x406193
  4061ad:	stos   DWORD PTR es:[edi],eax
  4061ae:	in     eax,dx
  4061af:	xchg   edi,eax
  4061b0:	rcr    edx,cl
  4061b2:	mov    cl,0xba
  4061b4:	dec    esi
  4061b5:	push   ebx
  4061b6:	not    DWORD PTR [ecx-0x10b1f107]
  4061bc:	push   ss
  4061bd:	mov    al,ds:0x4c7645b3
  4061c2:	fwait
  4061c3:	clc    
  4061c4:	or     ebx,eax
  4061c6:	adc    BYTE PTR [edx+ebx*1+0x7d],0xae
  4061cb:	push   ebx
  4061cc:	ret    
  4061cd:	push   esi
  4061ce:	dec    edx
  4061cf:	popa   
  4061d0:	jecxz  0x4061b0
  4061d2:	adc    al,0xbd
  4061d4:	mov    ch,0x4e
  4061d6:	adc    BYTE PTR [eax-0x2a4e1830],bl
  4061dc:	or     cl,bl
  4061de:	cmp    al,0x12
  4061e0:	sbb    edi,DWORD PTR [ecx+0x55d07e24]
  4061e6:	mov    al,gs:0x96f6f687
  4061ec:	ins    DWORD PTR es:[edi],dx
  4061ed:	add    DWORD PTR [edi-0x4],ebx
  4061f0:	in     eax,dx
  4061f1:	addps  xmm3,xmm3
  4061f4:	addr16 sub eax,0x2ef657d1
  4061fa:	xor    esp,esi
  4061fc:	pop    esi
  4061fd:	dec    ecx
  4061fe:	xchg   edi,eax
  4061ff:	into   
  406200:	xor    ah,bl
  406202:	cmovl  edi,ebp
  406205:	rcl    BYTE PTR [ebx-0x8],0x58
  406209:	aaa    
  40620a:	xor    BYTE PTR [eax],ch
  40620c:	mov    bh,dh
  40620e:	int    0x9b
  406210:	imul   eax,DWORD PTR [esi],0x60138fc2
  406216:	clc    
  406217:	fadd   QWORD PTR [eax+0x31c98008]
  40621d:	(bad)  [eax-0x5c]
  406220:	inc    eax
  406221:	out    dx,al
  406222:	test   DWORD PTR [edi+esi*8],0x3c877a33
  406229:	pop    ecx
  40622a:	or     eax,0xe5813ed2
  40622f:	push   ds
  406230:	xchg   edx,eax
  406231:	es xchg esi,eax
  406233:	test   bh,cl
  406235:	test   al,0x4f
  406237:	dec    edi
  406238:	cdq    
  406239:	div    edi
  40623b:	pop    ebp
  40623c:	(bad)  
  40623d:	jae    0x4061d4
  40623f:	mov    esp,DWORD PTR [ecx]
  406241:	cmp    DWORD PTR [edi-0x73],0xa6b22896
  406248:	inc    esi
  406249:	pop    ss
  40624a:	xor    al,0x92
  40624c:	retf   0x659e
  40624f:	mov    bh,0x3c
  406251:	jmp    0x3669:0x266d9f94
  406258:	mov    dh,0xc8
  40625a:	scas   al,BYTE PTR es:[edi]
  40625b:	adc    DWORD PTR [edx+ebx*4+0x21],0x79ed2432
  406263:	jmp    0xa207:0xea4d8fe4
  40626a:	sbb    edi,DWORD PTR [ecx+edx*1]
  40626d:	sbb    DWORD PTR [edx-0x3e2ebb85],esi
  406273:	cmp    bl,BYTE PTR [ecx-0x35]
  406276:	retf   0x2069
  406279:	(bad)  [edx+0xea13331]
  40627f:	mov    dl,0xe9
  406281:	dec    edi
  406282:	inc    esp
  406283:	inc    ebp
  406284:	cmp    ch,BYTE PTR [edx-0x1d]
  406287:	push   ss
  406288:	(bad)  
  406289:	cmc    
  40628a:	or     al,0x3c
  40628c:	jle    0x406283
  40628e:	sub    cl,cl
  406290:	hlt    
  406291:	call   0x60602a85
  406296:	sbb    al,0xbd
  406298:	or     al,0xf3
  40629a:	lahf   
  40629b:	xchg   edi,eax
  40629c:	addr16 sub dl,0x3a
  4062a0:	jmp    0x81dc:0x984d6db9
  4062a7:	rcr    BYTE PTR [edi],1
  4062a9:	test   DWORD PTR [esi],eax
  4062ab:	xchg   edx,eax
  4062ac:	sub    edi,DWORD PTR [esp+edx*8+0x1d]
  4062b0:	fsubrp st(3),st
  4062b2:	cmp    eax,0x9017827d
  4062b7:	inc    edi
  4062b8:	push   eax
  4062b9:	jno    0x4062b7
  4062bb:	jmp    0xe378:0x44016082
  4062c2:	aaa    
  4062c3:	sub    BYTE PTR [edx],ah
  4062c5:	sbb    dh,bh
  4062c7:	adc    eax,0xb8ce0f53
  4062cc:	sar    DWORD PTR [esi+0x66],cl
  4062cf:	mov    ?,edi
  4062d1:	xor    edi,DWORD PTR [edx-0x50]
  4062d4:	inc    esi
  4062d5:	test   eax,esi
  4062d7:	frstor [ebp-0x5b]
  4062da:	push   eax
  4062db:	adc    BYTE PTR [esi+eax*2-0x4b],dh
  4062df:	pop    ds
  4062e0:	mov    ah,0xc9
  4062e2:	ins    DWORD PTR es:[edi],dx
  4062e3:	dec    ecx
  4062e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062e5:	scas   eax,DWORD PTR es:[edi]
  4062e6:	cmp    edx,ecx
  4062e8:	inc    eax
  4062e9:	and    DWORD PTR [ebp+0x4dd172a4],ebp
  4062ef:	xchg   edi,eax
  4062f0:	es mov dh,dl
  4062f3:	(bad)  
  4062f4:	sbb    al,0xef
  4062f6:	xchg   ecx,eax
  4062f7:	jp     0x406371
  4062f9:	mov    bl,0xf4
  4062fb:	pop    es
  4062fc:	daa    
  4062fd:	es jbe 0x4062eb
  406300:	sbb    esi,DWORD PTR [ecx-0x79]
  406303:	imul   edx,DWORD PTR [eax+0x697e6044],0xd41ad610
  40630d:	mov    bh,0xc9
  40630f:	pop    dx
  406311:	and    ch,dh
  406313:	fistp  WORD PTR [edi+0x16]
  406316:	mov    ebx,es
  406318:	cdq    
  406319:	adc    DWORD PTR [ecx-0x3142dc39],edx
  40631f:	pop    es
  406320:	aaa    
  406321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406322:	cwde   
  406323:	jg     0x4062b0
  406325:	cmp    DWORD PTR [ebx+ecx*8+0x7d],esp
  406329:	retf   
  40632a:	or     ebp,esp
  40632c:	xlat   BYTE PTR ds:[ebx]
  40632d:	mov    bl,0x75
  40632f:	mov    esi,0xafb89544
  406334:	sbb    al,0x72
  406336:	pop    es
  406337:	lds    ecx,FWORD PTR [ecx-0x7bf3b696]
  40633d:	mov    edi,0x9db10f85
  406342:	(bad)  
  406343:	xchg   DWORD PTR ds:0x72e3760d,ebx
  406349:	sbb    al,0x66
  40634b:	test   DWORD PTR [ebx],eax
  40634d:	mov    ah,0xc
  40634f:	and    bh,cl
  406351:	mov    ebp,0xb3b0eb36
  406356:	inc    esi
  406357:	fcom   QWORD PTR [eax]
  406359:	sub    DWORD PTR [ecx-0x66],esi
  40635c:	mov    bl,BYTE PTR [edi+0x49]
  40635f:	and    dl,bh
  406361:	jg     0x406354
  406363:	cmp    BYTE PTR [eax-0x467ac8a7],0x53
  40636a:	add    BYTE PTR [ecx+0x58],ah
  40636d:	push   0x28
  40636f:	inc    edx
  406370:	xchg   esi,eax
  406371:	inc    edx
  406372:	push   es
  406373:	scas   eax,DWORD PTR es:[edi]
  406374:	(bad)
  406377:	cmp    eax,eax
  406379:	into   
  40637a:	add    DWORD PTR [esi],esi
  40637c:	cdq    
  40637d:	dec    esi
  40637e:	ss jno 0x4063b6
  406381:	or     dh,BYTE PTR [ecx-0x454c3178]
  406387:	dec    esp
  406388:	lods   eax,DWORD PTR ds:[esi]
  406389:	dec    esi
  40638a:	jle    0x4063a9
  40638c:	adc    ch,BYTE PTR [esi+ecx*2-0x49]
  406390:	int3   
  406391:	dec    edi
  406392:	push   ecx
  406393:	mov    eax,0x46cce66c
  406398:	or     al,BYTE PTR [ecx-0x13]
  40639b:	push   esp
  40639c:	cwde   
  40639d:	dec    esi
  40639e:	xchg   ebp,eax
  40639f:	push   cs
  4063a0:	rol    DWORD PTR [ecx-0x38],cl
  4063a3:	cdq    
  4063a4:	jge    0x406414
  4063a6:	fdiv   QWORD PTR [ecx-0x18]
  4063a9:	jno    0x4063fc
  4063ab:	jne    0x406378
  4063ad:	pop    ss
  4063ae:	jp     0x406386
  4063b0:	xchg   esp,eax
  4063b1:	stc    
  4063b2:	push   esi
  4063b3:	and    esi,DWORD PTR [ebx-0x44f8f76b]
  4063b9:	pop    ebp
  4063ba:	and    DWORD PTR [ecx+edi*8],edi
  4063bd:	ins    BYTE PTR es:[edi],dx
  4063be:	call   0xd2c2:0xc66f1312
  4063c5:	sbb    dh,ah
  4063c7:	xchg   ecx,eax
  4063c8:	push   es
  4063c9:	verr   WORD PTR [edi]
  4063cc:	pop    edx
  4063cd:	mov    al,ds:0x376340b0
  4063d2:	mov    dh,BYTE PTR [ebx+0x6b]
  4063d5:	fistp  QWORD PTR [ecx+0x41]
  4063d8:	mov    dl,0x19
  4063da:	pop    ebp
  4063db:	mov    ds:0x5cc18ce7,eax
  4063e0:	cmp    al,0xde
  4063e2:	mov    esi,0x1eaa31ce
  4063e7:	lds    edi,FWORD PTR [ebx-0x3b]
  4063ea:	int3   
  4063eb:	mov    ebx,0xd16ead5b
  4063f0:	pop    edx
  4063f1:	add    eax,0xc44673fa
  4063f6:	bound  ecx,QWORD PTR [esi]
  4063f8:	sbb    esi,DWORD PTR [ecx]
  4063fa:	mov    dl,0xe9
  4063fc:	xor    al,0x60
  4063fe:	and    DWORD PTR [ecx-0x6cd59f49],esi
  406404:	fstp   DWORD PTR [ebx+ebx*1]
  406407:	in     eax,dx
  406408:	pusha  
  406409:	es jle 0x406471
  40640c:	jo     0x406430
  40640e:	or     BYTE PTR [edx],dh
  406410:	jb     0x40643d
  406412:	inc    ecx
  406413:	js     0x4063cd
  406415:	(bad)  
  406416:	or     eax,DWORD PTR [edx]
  406418:	sub    edx,0x1a
  40641b:	outs   dx,BYTE PTR gs:[esi]
  40641d:	popa   
  40641e:	(bad)  
  406421:	(bad)  
  406422:	paddsb mm7,mm2
  406425:	out    dx,al
  406426:	sub    dh,BYTE PTR [edx+0x35]
  406429:	popf   
  40642a:	ins    BYTE PTR es:[edi],dx
  40642b:	lds    edi,FWORD PTR [esi-0x7]
  40642e:	xchg   edx,eax
  40642f:	ja     0x40649d
  406431:	add    ch,BYTE PTR [esi]
  406433:	loopne 0x4063c9
  406435:	in     al,0xf3
  406437:	xor    al,0x42
  406439:	inc    esi
  40643a:	pop    ebp
  40643b:	out    0x5d,eax
  40643d:	fldcw  WORD PTR [ecx+ebx*8-0xc]
  406441:	out    0x2b,al
  406443:	mov    dl,0x61
  406445:	cld    
  406446:	fcomip st,st(4)
  406448:	add    ebx,DWORD PTR [edi]
  40644a:	rcr    bh,cl
  40644c:	cs ret 
  40644e:	into   
  40644f:	mov    DWORD PTR [eax+0x5f],ecx
  406452:	cwde   
  406453:	add    al,0x6a
  406455:	repnz push esi
  406457:	jne    0x406495
  406459:	mov    ds:0xf9256f31,al
  40645e:	mov    ebp,0x27d1c194
  406463:	jp     0x40645d
  406465:	mov    esp,ebx
  406467:	(bad)  
  406468:	aad    0xee
  40646a:	cmc    
  40646b:	xchg   BYTE PTR ds:0xd843a444,cl
  406471:	lds    edi,FWORD PTR [edi+0x38]
  406474:	fdiv   DWORD PTR [edx+eiz*8-0x34]
  406478:	inc    ebx
  406479:	inc    ebp
  40647a:	cmp    DWORD PTR [edi-0x2f],eax
  40647d:	std    
  40647e:	icebp  
  40647f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406480:	test   al,0xfe
  406482:	xlat   BYTE PTR ds:[ebx]
  406483:	inc    ebp
  406484:	repnz and DWORD PTR [ebx-0x45c148ce],eax
  40648b:	shl    BYTE PTR [ecx-0x1],cl
  40648e:	int3   
  40648f:	sub    al,0xa2
  406491:	and    ah,al
  406493:	mov    cl,ch
  406495:	push   ebp
  406496:	aam    0x2e
  406498:	sub    eax,0xa8da9223
  40649d:	cmp    DWORD PTR [esi+edx*8],0x2c
  4064a1:	jge    0x40646f
  4064a3:	int3   
  4064a4:	adc    BYTE PTR [ecx+eax*2+0x69aa18bf],0x95
  4064ac:	das    
  4064ad:	or     ebx,0xf5dd47f9
  4064b3:	or     DWORD PTR [ebp-0x1cbb976],esp
  4064b9:	adc    BYTE PTR [ecx+edi*2],ch
  4064bc:	mov    BYTE PTR ds:0x7d68a1e3,ah
  4064c2:	and    bh,dl
  4064c4:	and    bl,BYTE PTR [eax]
  4064c6:	retf   0x6eb8
  4064c9:	cmp    bl,ah
  4064cb:	jmp    0x4064e7
  4064cd:	(bad)  
  4064ce:	retf   0x7c1b
  4064d1:	adc    eax,0xf49ae3cd
  4064d6:	fst    DWORD PTR [edx+0x61]
  4064d9:	lds    ebx,FWORD PTR [ebx-0x403a96fd]
  4064df:	xchg   edi,eax
  4064e0:	mov    WORD PTR [eax+0x560d8a8c],es
  4064e6:	lds    esp,FWORD PTR [edi+ebp*1-0x1a14e61f]
  4064ed:	frstor [ecx]
  4064ef:	push   edx
  4064f0:	add    BYTE PTR [eax+0x7f081524],al
  4064f6:	fwait
  4064f7:	xchg   ebp,eax
  4064f8:	or     BYTE PTR [ecx],dl
  4064fa:	adc    dh,cl
  4064fc:	lods   eax,DWORD PTR ds:[esi]
  4064fd:	test   DWORD PTR [ebx-0x6a],ebx
  406500:	sub    BYTE PTR [eax-0x1b],bl
  406503:	int3   
  406504:	jp     0x4064ea
  406506:	jbe    0x40650f
  406508:	add    eax,0xecc91372
  40650d:	imul   al
  40650f:	cli    
  406510:	mov    esp,0xe554039d
  406515:	push   cs
  406516:	cmc    
  406517:	jns    0x4064f3
  406519:	cmc    
  40651a:	cmp    bl,ch
  40651c:	xor    BYTE PTR [edi+ebp*2+0x7969d8de],al
  406523:	(bad)  [esi-0x2d]
  406526:	cmp    eax,0xaf69f6cd
  40652b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40652c:	jns    0x406594
  40652e:	xchg   ebp,eax
  40652f:	push   es
  406530:	dec    edx
  406531:	add    cl,BYTE PTR [edi]
  406533:	sub    DWORD PTR cs:[esi-0x266bb5ae],edx
  40653a:	xor    esi,edx
  40653c:	jno    0x406581
  40653e:	and    al,ch
  406540:	jmp    0x95eb1e47
  406545:	add    BYTE PTR [ecx+ebp*8],cl
  406548:	mov    edx,0xf4b7f65f
  40654d:	sbb    BYTE PTR [eax-0x35632261],0x1c
  406554:	data16 sahf 
  406556:	jmp    0x565d0382
  40655b:	lea    eax,[edi+0x2fe70a07]
  406561:	pop    ds
  406562:	hlt    
  406563:	mov    eax,0xef654431
  406568:	pushf  
  406569:	mov    ah,0xd
  40656b:	test   al,0xbe
  40656d:	sbb    eax,0xef78c4a5
  406572:	leave  
  406573:	xchg   edi,eax
  406574:	push   ss
  406575:	test   eax,0xef33c4b7
  40657a:	xchg   BYTE PTR [edx-0x7c],bl
  40657d:	imul   esi,DWORD PTR [eax],0xfffffff3
  406580:	ret    
  406581:	jmp    0x40651f
  406583:	pcmpgtb mm5,QWORD PTR [esp+ebp*1-0x7e]
  406588:	mov    ds:0xb75bed8c,al
  40658d:	pop    es
  40658e:	mov    ?,WORD PTR [eax-0x3d]
  406591:	cli    
  406592:	pop    ebp
  406593:	outs   dx,BYTE PTR ds:[esi]
  406594:	hlt    
  406595:	dec    edi
  406596:	arpl   WORD PTR [esi+0x33],cx
  406599:	out    0x7d,al
  40659b:	je     0x40654d
  40659d:	xor    BYTE PTR [ebx-0x6bb9c7be],bh
  4065a3:	data16 lods al,BYTE PTR gs:[esi]
  4065a6:	cmp    al,0x86
  4065a8:	and    al,0x69
  4065aa:	es lock popf 
  4065ad:	mov    ecx,0x57ab5557
  4065b2:	mov    ebx,0x8bc4104f
  4065b7:	cli    
  4065b8:	mov    ?,esi
  4065ba:	retf   
  4065bb:	and    eax,0x763cbdf4
  4065c0:	mov    esi,esi
  4065c2:	out    dx,eax
  4065c3:	xchg   ebp,eax
  4065c4:	cs cmc 
  4065c6:	sub    ch,BYTE PTR [esi+0x72]
  4065c9:	add    bh,ch
  4065cb:	push   ss
  4065cc:	retf   
  4065cd:	test   al,0xec
  4065cf:	std    
  4065d0:	mov    cl,0xbf
  4065d2:	mov    eax,ds:0x7e6c6138
  4065d7:	(bad)  
  4065d8:	dec    edi
  4065d9:	add    eax,0x9adef03a
  4065de:	adc    al,0x67
  4065e0:	xchg   esp,eax
  4065e1:	jl     0x406565
  4065e3:	mov    bl,0xa0
  4065e5:	xchg   ebp,eax
  4065e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065e7:	enter  0x2927,0x14
  4065eb:	daa    
  4065ec:	(bad)  
  4065ed:	mov    eax,0xe2bf3e04
  4065f2:	retf   0x6c54
  4065f5:	dec    edi
  4065f6:	bound  ebx,QWORD PTR [eax+0x77]
  4065f9:	pusha  
  4065fa:	mov    dl,BYTE PTR [esi+ebx*4-0xb]
  4065fe:	jecxz  0x4065c7
  406600:	imul   esp,DWORD PTR [ebp-0x53248b8b],0x3be2e068
  40660a:	jg     0x4065db
  40660c:	adc    BYTE PTR [ecx-0x57],ch
  40660f:	lahf   
  406610:	popa   
  406611:	xor    BYTE PTR [ebp-0x37],dl
  406614:	leave  
  406615:	cmp    ebx,DWORD PTR es:[edi-0x4d]
  406619:	test   BYTE PTR [eax],bh
  40661b:	mov    ebp,0x1d458321
  406620:	adc    BYTE PTR [ecx-0x44],ah
  406623:	test   DWORD PTR [eax-0x6b696466],esi
  406629:	push   eax
  40662a:	or     DWORD PTR [edi],ebp
  40662c:	aam    0xcb
  40662e:	mov    dh,BYTE PTR [edi+0x2a]
  406631:	lahf   
  406632:	retf   0xb12a
  406635:	pop    edi
  406636:	popa   
  406637:	sub    cl,0x76
  40663a:	das    
  40663b:	mov    cl,0x0
  40663d:	sub    cl,BYTE PTR [ecx]
  40663f:	xor    ebp,DWORD PTR [ebx]
  406641:	jmp    0xffd6458b
  406646:	adc    eax,0x4d331c2b
  40664b:	add    al,0x4b
  40664d:	jp     0x4065dc
  40664f:	push   eax
  406650:	dec    eax
  406651:	add    al,0x32
  406653:	dec    esi
  406654:	mov    cs,WORD PTR [ecx+0x55]
  406657:	bound  edi,QWORD PTR [ebx]
  406659:	cwde   
  40665a:	xchg   ebx,eax
  40665b:	mov    ebp,0x9f7c6eca
  406660:	jo     0x40662c
  406662:	out    dx,al
  406663:	push   ss
  406664:	clc    
  406665:	(bad)  
  406667:	add    eax,0xb94aade
  40666c:	fdiv   DWORD PTR [edx+0x43]
  40666f:	(bad)  
  406670:	ds nop
  406672:	fst    QWORD PTR [ebx]
  406674:	fwait
  406675:	les    edi,FWORD PTR [edx-0x6c90a1f8]
  40667b:	popf   
  40667c:	push   ebp
  40667d:	stos   DWORD PTR es:[edi],eax
  40667e:	aas    
  40667f:	outs   dx,DWORD PTR ds:[esi]
  406680:	dec    eax
  406681:	or     DWORD PTR [eax],0x833dc37f
  406687:	adc    al,0x76
  406689:	fisttp DWORD PTR [eax]
  40668b:	cld    
  40668c:	ficomp DWORD PTR [ecx+0x22]
  40668f:	cmp    eax,0x50c14dd7
  406694:	xor    al,0xac
  406696:	pop    esi
  406697:	aaa    
  406698:	dec    ebx
  406699:	scas   eax,DWORD PTR es:[edi]
  40669a:	xchg   esi,eax
  40669b:	pop    edi
  40669c:	cmp    esi,DWORD PTR [esi+0xe]
  40669f:	push   ebp
  4066a0:	push   edi
  4066a1:	ins    BYTE PTR es:[edi],dx
  4066a2:	mov    BYTE PTR [edx-0x33],bh
  4066a5:	pop    ss
  4066a6:	js     0x40667a
  4066a8:	jmp    0x6bc:0x6192dfaf
  4066af:	pop    es
  4066b0:	sbb    bh,al
  4066b2:	cld    
  4066b3:	push   ecx
  4066b4:	dec    ebp
  4066b5:	add    ecx,DWORD PTR [edi]
  4066b7:	push   eax
  4066b8:	mov    bl,0xd5
  4066ba:	stos   DWORD PTR es:[edi],eax
  4066bb:	and    al,0xef
  4066bd:	sub    edi,DWORD PTR [ebp-0x41c8b880]
  4066c3:	cmp    eax,0xe053a043
  4066c8:	xor    edi,DWORD PTR [eax-0x36]
  4066cb:	enter  0x7faf,0xf2
  4066cf:	xor    DWORD PTR [ebx],esp
  4066d1:	cmc    
  4066d2:	rol    DWORD PTR [esi+0x592241d1],1
  4066d8:	sub    eax,0x3aef9262
  4066dd:	pop    eax
  4066de:	jle    0x4066b1
  4066e0:	cvtpd2pi mm5,XMMWORD PTR [eax+ebx*1+0x16edf260]
  4066e9:	fist   WORD PTR [ebp+0x60]
  4066ec:	mov    eax,ds:0x3b31c4e5
  4066f1:	test   al,0x48
  4066f4:	scas   al,BYTE PTR es:[edi]
  4066f5:	adc    bl,bh
  4066f7:	cmpxchg DWORD PTR [eax+ebx*4-0x494e2d4f],ecx
  4066ff:	scas   eax,DWORD PTR es:[edi]
  406700:	shl    BYTE PTR [ecx-0x65c0d827],1
  406706:	loop   0x406735
  406708:	push   es
  406709:	mov    WORD PTR [edi],cs
  40670b:	and    edi,DWORD PTR [edx+0x59e54831]
  406711:	(bad)  
  406713:	mov    esi,0x143e2a46
  406718:	add    dh,al
  40671a:	lea    esp,[ebx-0x7f909dc8]
  406720:	enter  0xb513,0x17
  406724:	in     eax,0xb2
  406726:	push   0x36ca6ec6
  40672b:	retf   0xc646
  40672e:	in     eax,dx
  40672f:	push   edx
  406730:	pop    ds
  406731:	fiadd  WORD PTR [esi-0x5a07ff9]
  406737:	mov    bh,BYTE PTR [esp+ecx*4]
  40673a:	in     al,dx
  40673b:	fstp   QWORD PTR [edi]
  40673d:	or     ecx,DWORD PTR [ecx-0x74]
  406740:	or     DWORD PTR [esi-0x6d27d54d],esp
  406746:	pusha  
  406747:	and    bl,bl
  406749:	add    bh,BYTE PTR [eax]
  40674b:	(bad)  
  40674c:	stos   BYTE PTR es:[edi],al
  40674d:	cmp    BYTE PTR fs:[ebp-0x3732dab9],bh
  406754:	shl    edi,cl
  406756:	push   ss
  406757:	jne    0x406740
  406759:	push   ds
  40675a:	out    dx,al
  40675b:	pop    ecx
  40675c:	dec    esi
  40675d:	pop    ecx
  40675e:	push   0x7c
  406760:	mov    WORD PTR [esi-0x4f9417be],ss
  406766:	pop    esp
  406767:	push   cs
  406768:	cmc    
  406769:	ret    
  40676a:	sbb    DWORD PTR [eax],ebx
  40676c:	pusha  
  40676d:	mov    ebp,0x44fb709b
  406772:	dec    edi
  406773:	rol    DWORD PTR [ebp-0x4331c745],cl
  406779:	neg    BYTE PTR [esi]
  40677b:	jae    0x4067a8
  40677d:	jns    0x406728
  40677f:	xor    cl,BYTE PTR [edx+0x2c86ccc]
  406785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406786:	adc    bl,BYTE PTR [esi+0x5f420cb]
  40678c:	push   edi
  40678d:	sti    
  40678e:	pop    ecx
  40678f:	xchg   edi,eax
  406790:	push   eax
  406791:	or     ecx,DWORD PTR [eax-0x348de4f]
  406797:	or     esp,ebx
  406799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40679a:	imul   esi,DWORD PTR [esi-0x56852dc3],0x31
  4067a1:	jno    0x406736
  4067a3:	or     DWORD PTR [edi-0x8360424],edx
  4067a9:	sbb    bh,dh
  4067ab:	leave  
  4067ac:	add    ah,BYTE PTR [esi+0x3f]
  4067af:	pop    ss
  4067b0:	icebp  
  4067b1:	fisubr DWORD PTR [edi]
  4067b3:	sub    al,0x38
  4067b5:	jb     0x4067f6
  4067b7:	cmc    
  4067b8:	stc    
  4067b9:	aas    
  4067ba:	(bad)  
  4067bb:	pop    eax
  4067bc:	popf   
  4067bd:	lods   eax,DWORD PTR ds:[esi]
  4067be:	cs scas al,BYTE PTR es:[edi]
  4067c0:	sbb    al,0xdf
  4067c2:	pop    ds
  4067c3:	dec    edi
  4067c4:	sbb    eax,0x769f7700
  4067c9:	das    
  4067ca:	stc    
  4067cb:	dec    ecx
  4067cc:	cmp    eax,0x52102f5
  4067d1:	pop    ds
  4067d2:	jmp    0x4067b1
  4067d4:	fdivr  QWORD PTR [edx]
  4067d6:	add    bh,BYTE PTR [edx+esi*2-0x2f]
  4067da:	(bad)  
  4067dc:	xchg   ecx,esp
  4067de:	inc    esi
  4067df:	ror    BYTE PTR [ecx+0x6],cl
  4067e2:	icebp  
  4067e3:	jbe    0x4067ac
  4067e5:	enter  0x8a63,0xfc
  4067e9:	mov    eax,0x542a3e6a
  4067ee:	jno    0x406841
  4067f0:	ins    DWORD PTR es:[edi],dx
  4067f1:	pop    edx
  4067f2:	cmp    ebx,esi
  4067f4:	neg    BYTE PTR [ecx+0x6e]
  4067f7:	sbb    al,0x1e
  4067f9:	xchg   esi,eax
  4067fa:	dec    esi
  4067fb:	mov    al,0xfb
  4067fd:	jmp    0xa86b1d69
  406802:	mov    eax,ds:0xafc407dc
  406807:	test   DWORD PTR [edi+0xe8391df],esp
  40680d:	adc    bh,BYTE PTR [eax-0x53]
  406810:	mov    ds:0xe8d2f030,al
  406815:	mov    ds:0x2f46c67d,al
  40681a:	mov    ds:0x86a32fa4,al
  40681f:	gs jb  0x406889
  406822:	es mov eax,0x6c040ef5
  406828:	cli    
  406829:	cdq    
  40682a:	aaa    
  40682b:	in     al,0xe9
  40682d:	dec    ecx
  40682e:	(bad)  
  406830:	add    BYTE PTR [edx+ebx*4+0xb662891],bl
  406837:	scas   eax,DWORD PTR es:[edi]
  406838:	mov    cl,dl
  40683a:	(bad)  
  40683c:	cld    
  40683d:	and    DWORD PTR [esi],ebx
  40683f:	jl     0x40685f
  406841:	pop    esp
  406842:	out    dx,eax
  406843:	ret    
  406844:	ret    
  406845:	and    eax,0x7e1705a
  40684a:	and    edi,DWORD PTR [ebp+0x2f]
  40684d:	add    DWORD PTR [edi],ecx
  40684f:	pop    esp
  406850:	ret    0x48ae
  406853:	inc    edx
  406854:	push   ebp
  406855:	clc    
  406856:	mov    dl,0xea
  406858:	mov    WORD PTR [esi+0x46a7f32a],cs
  40685e:	test   al,0x5d
  406860:	out    dx,eax
  406861:	sbb    eax,0xbb444b9c
  406866:	ret    
  406867:	mov    ?,WORD PTR [edx-0x5c501a3f]
  40686d:	or     DWORD PTR [ebx],0x6b
  406870:	mov    esp,0x449ad175
  406875:	or     dl,ch
  406877:	dec    esi
  406878:	mov    esi,0xce8db717
  40687d:	mov    ecx,DWORD PTR [edi+0x7f4658a6]
  406883:	or     eax,0x92cda3f9
  406888:	cdq    
  406889:	pusha  
  40688a:	loop   0x40686a
  40688c:	and    DWORD PTR [ebx+0x49f1b2f3],esi
  406892:	das    
  406893:	(bad)  
  406894:	fdivr  DWORD PTR [edx]
  406896:	fs mov al,0xae
  406899:	imul   BYTE PTR [edi-0x4cb5ead8]
  40689f:	js     0x406916
  4068a1:	jo     0x40689c
  4068a3:	rcl    DWORD PTR [eax+ebx*1],0xec
  4068a7:	lahf   
  4068a8:	idiv   BYTE PTR [edx-0x130ae82d]
  4068ae:	push   esi
  4068af:	nop
  4068b0:	icebp  
  4068b1:	jle    0x4068b1
  4068b3:	(bad)  
  4068b4:	ret    0xe399
  4068b7:	(bad)  
  4068b9:	out    0xa1,al
  4068bb:	jno    0x4068db
  4068bd:	sahf   
  4068be:	inc    esi
  4068bf:	push   ds
  4068c0:	pop    esi
  4068c1:	push   0x2aec8e37
  4068c6:	iret   
  4068c7:	inc    edi
  4068c8:	aaa    
  4068c9:	arpl   WORD PTR [eax],cx
  4068cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068cc:	clc    
  4068cd:	add    edx,0x7c
  4068d0:	out    0x4f,eax
  4068d2:	rol    BYTE PTR [ebx+0x4d],cl
  4068d5:	cld    
  4068d6:	pop    ecx
  4068d7:	push   ds
  4068d8:	mov    edx,0x7577f2b2
  4068dd:	mov    eax,ds:0x16643d96
  4068e2:	mov    edx,0x6254658f
  4068e7:	je     0x40690f
  4068e9:	add    al,0x1e
  4068eb:	inc    edx
  4068ec:	lock mov edi,gs
  4068ef:	cmp    DWORD PTR [eax],ecx
  4068f1:	mov    ds:0x429983a1,eax
  4068f6:	adc    DWORD PTR [ebp-0x11],eax
  4068f9:	mov    DWORD PTR [ebp+0x7e],eax
  4068fc:	test   BYTE PTR [eax],0x7f
  4068ff:	pushf  
  406900:	stos   BYTE PTR es:[edi],al
  406901:	sub    DWORD PTR [edx-0x3e0f5e53],esp
  406907:	jbe    0x406955
  406909:	xchg   ebx,edi
  40690b:	scas   eax,DWORD PTR es:[edi]
  40690c:	push   esp
  40690d:	push   ds
  40690e:	jo     0x40693f
  406910:	sti    
  406911:	jne    0x4068c5
  406913:	test   DWORD PTR ds:0xb87d8ba4,0xebb5cbd1
  40691d:	imul   edx,ebp,0xdfbd3781
  406923:	jle    0x406976
  406925:	nop
  406926:	pusha  
  406927:	ja     0x4068e2
  406929:	pusha  
  40692a:	jg     0x4068e0
  40692c:	jno    0x406940
  40692e:	adc    eax,0xdb2a1d96
  406933:	inc    ecx
  406934:	inc    edi
  406935:	adc    edx,DWORD PTR [ebp-0x38]
  406938:	or     al,0xa3
  40693a:	fsubr  DWORD PTR [edx+0x68c51969]
  406940:	pop    esp
  406941:	mov    ds:0xef9da6fe,eax
  406946:	fwait
  406947:	add    BYTE PTR ds:0xd44a9679,bl
  40694d:	push   cs
  40694e:	sub    al,0x22
  406950:	and    dh,dl
  406952:	cmp    bh,BYTE PTR [ebp+0x60196e2b]
  406958:	popa   
  406959:	pop    eax
  40695a:	mov    BYTE PTR [esi+0x24d175c5],cl
  406960:	in     al,dx
  406961:	pop    esp
  406962:	test   al,0xb2
  406964:	arpl   WORD PTR [esi],dx
  406966:	mov    ch,BYTE PTR [edx]
  406968:	fcom   DWORD PTR [edx]
  40696a:	mov    ds:0xa7a2924c,al
  40696f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406970:	sub    esi,DWORD PTR [ebx+0xc]
  406973:	or     eax,0x4da82cd7
  406978:	inc    DWORD PTR [eax+0x6f]
  40697b:	arpl   dx,dx
  40697d:	or     ebx,edx
  40697f:	mov    cs,WORD PTR [esi-0x73111f08]
  406985:	imul   ebx,DWORD PTR [ecx-0xc46e07a],0xb5b86c53
  40698f:	pop    edi
  406990:	stc    
  406991:	mov    bl,0x5f
  406993:	(bad)  
  406994:	jbe    0x40695c
  406996:	jnp    0x406919
  406998:	mov    BYTE PTR [esi+0x52],cl
  40699b:	outs   dx,DWORD PTR ds:[esi]
  40699c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40699d:	mov    ebp,0x30bf93e9
  4069a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069a3:	pop    ss
  4069a4:	outs   dx,DWORD PTR ds:[esi]
  4069a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069a6:	pop    ebx
  4069a7:	sbb    al,0xf3
  4069a9:	sbb    esi,edx
  4069ab:	mov    ebx,0xfb5c7a2e
  4069b0:	sti    
  4069b1:	out    dx,al
  4069b2:	push   esi
  4069b3:	pop    ds
  4069b4:	xor    bh,BYTE PTR [ebp+ebx*2-0x1aeb9efe]
  4069bb:	mov    edx,0x3139d6e5
  4069c0:	fwait
  4069c1:	cmc    
  4069c2:	dec    ebp
  4069c3:	imul   edx,DWORD PTR [edx],0x17b38293
  4069c9:	in     eax,dx
  4069ca:	inc    ebx
  4069cb:	mov    esp,0xcade02e1
  4069d0:	(bad)  
  4069d1:	hlt    
  4069d2:	sub    eax,0x8c1feae8
  4069d7:	jle    0x4069f6
  4069d9:	mov    BYTE PTR [esi],dl
  4069db:	lock jecxz 0x406970
  4069de:	mov    es,WORD PTR [ebp-0x3d7495b7]
  4069e4:	cwde   
  4069e5:	and    eax,0x676fca
  4069ea:	lods   al,BYTE PTR ds:[esi]
  4069eb:	mov    edi,DWORD PTR [ebx-0x3d3809c9]
  4069f1:	inc    edx
  4069f2:	mov    esi,0x76be824a
  4069f7:	push   ecx
  4069f8:	fcmove st,st(2)
  4069fa:	imul   ebp,DWORD PTR [ebx],0xe68e46f6
  406a00:	in     eax,0xbc
  406a02:	mov    eax,0x3d3dd7d7
  406a07:	mov    esi,0xf436cb04
  406a0c:	adc    al,0x71
  406a0f:	fstp   DWORD PTR ds:0x6fc8583e
  406a15:	dec    edx
  406a16:	xchg   edx,eax
  406a17:	psubd  mm4,QWORD PTR [ecx]
  406a1a:	push   ebx
  406a1b:	jae    0x406a8f
  406a1d:	aaa    
  406a1e:	pop    es
  406a1f:	ret    
  406a20:	call   DWORD PTR [ebp+0x65c644ff]
  406a26:	stos   BYTE PTR es:[edi],al
  406a27:	test   edx,ebx
  406a29:	inc    ecx
  406a2a:	or     bl,ch
  406a2c:	xlat   BYTE PTR ds:[ebx]
  406a2d:	loopne 0x406a62
  406a2f:	adc    eax,0xf60da64c
  406a34:	arpl   WORD PTR [ebp+0x2e],dx
  406a37:	mov    ?,esi
  406a39:	daa    
  406a3a:	aam    0x4
  406a3c:	sbb    edi,edi
  406a3e:	pop    ss
  406a3f:	or     dh,BYTE PTR [ecx+0x54b713d6]
  406a45:	xor    esp,esp
  406a47:	aas    
  406a48:	or     BYTE PTR [esi],ah
  406a4a:	fnstsw WORD PTR [ebx-0x75]
  406a4d:	cmp    al,0x8c
  406a4f:	loopne 0x406a15
  406a51:	jb     0x406ab9
  406a53:	ss dec ecx
  406a55:	lods   al,BYTE PTR ds:[esi]
  406a56:	pop    ecx
  406a57:	punpckhwd mm2,QWORD PTR [ecx+ebp*4-0x38275eaa]
  406a5f:	jae    0x406ac4
  406a61:	lods   al,BYTE PTR ds:[esi]
  406a62:	pusha  
  406a63:	xor    dl,BYTE PTR [ebp+0x5c3ad37d]
  406a69:	dec    eax
  406a6a:	icebp  
  406a6b:	sub    dh,bh
  406a6d:	jl     0x406a43
  406a6f:	add    dl,BYTE PTR ds:0xa99b10fa
  406a75:	out    0x2,al
  406a77:	mov    edx,0x74c62cef
  406a7c:	xchg   esp,eax
  406a7d:	sbb    edx,eax
  406a7f:	xchg   ebp,eax
  406a80:	mov    eax,0x172afcf
  406a85:	mov    edx,0xf5d970d
  406a8a:	push   cs
  406a8b:	push   eax
  406a8c:	xor    eax,0x72397326
  406a92:	iret   
  406a93:	retf   
  406a94:	out    dx,al
  406a95:	int    0x21
  406a97:	pop    es
  406a98:	mov    esp,esi
  406a9a:	xchg   esi,esp
  406a9c:	loope  0x406a3c
  406a9e:	inc    edi
  406a9f:	outs   dx,DWORD PTR ds:[esi]
  406aa0:	add    edi,0xc
  406aa3:	jmp    0x276b55c6
  406aa8:	outs   dx,BYTE PTR ds:[esi]
  406aa9:	lds    ebx,FWORD PTR [ebp+0x71085fd7]
  406aaf:	cmp    BYTE PTR [edi],al
  406ab1:	inc    ebp
  406ab2:	lock add esi,edi
  406ab5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ab6:	mov    bl,0xe6
  406ab8:	adc    BYTE PTR [esi+0x5d15ada0],0x27
  406abf:	xor    eax,0x54612c29
  406ac4:	mov    cl,0x37
  406ac6:	jge    0x406a6e
  406ac8:	mov    ds:0x80c9d524,al
  406acd:	lahf   
  406ace:	xor    BYTE PTR [eax+0xd],cl
  406ad1:	cld    
  406ad2:	inc    eax
  406ad3:	sbb    al,ch
  406ad5:	cmp    eax,0xe03e8f8
  406ada:	dec    eax
  406adb:	jl     0x406acd
  406add:	hlt    
  406ade:	add    BYTE PTR [eax],cl
  406ae0:	and    BYTE PTR [edi+0x5280681b],bh
  406ae6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ae7:	ins    BYTE PTR es:[edi],dx
  406ae8:	cmc    
  406ae9:	in     eax,dx
  406aea:	jne    0x406ac1
  406aec:	push   0x2b
  406aee:	jge    0x406a77
  406af0:	aad    0x1b
  406af2:	aad    0x36
  406af4:	data16 ja 0x406ad7
  406af7:	inc    esi
  406af8:	add    al,0x2f
  406afa:	xor    dl,cl
  406afc:	sub    DWORD PTR [edx+edx*8],ebx
  406aff:	mov    ds:0xd5ffbf15,eax
  406b04:	mov    eax,ds:0xa77f4161
  406b09:	xchg   ebx,eax
  406b0a:	fsub   st,st(6)
  406b0c:	pop    ss
  406b0d:	sub    ecx,0x57
  406b10:	fistp  WORD PTR cs:0x91911e2a
  406b17:	out    dx,eax
  406b18:	cdq    
  406b19:	in     eax,dx
  406b1a:	rol    BYTE PTR ds:[edx+0x7c5d80d5],cl
  406b21:	mov    ebp,0x184bd496
  406b26:	add    BYTE PTR [eax-0x658b5040],ch
  406b2c:	dec    edx
  406b2d:	out    dx,al
  406b2e:	sbb    eax,0xf547cb3
  406b33:	push   0xffffff84
  406b35:	cs js  0x406b2e
  406b38:	mov    eax,0x9ee1b194
  406b3d:	sub    ebx,edx
  406b3f:	out    dx,al
  406b40:	enter  0xffe3,0x7b
  406b44:	repz or eax,0xe2c3ec14
  406b4a:	pushf  
  406b4b:	inc    ebx
  406b4c:	addr16 xchg ebx,eax
  406b4e:	push   es
  406b4f:	stos   BYTE PTR es:[edi],al
  406b50:	push   eax
  406b51:	ins    DWORD PTR es:[edi],dx
  406b52:	fist   WORD PTR [esi+0x21108ea]
  406b58:	outs   dx,DWORD PTR ds:[esi]
  406b59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b5a:	sbb    DWORD PTR [ecx+0x555efe39],0x2ca16ad5
  406b64:	rol    DWORD PTR [ebp+0x5a8d40aa],1
  406b6a:	mov    ch,0x54
  406b6c:	dec    edi
  406b6d:	bound  eax,QWORD PTR [ecx-0x40c6735f]
  406b73:	popa   
  406b74:	dec    edx
  406b75:	adc    bh,cl
  406b77:	out    dx,al
  406b78:	call   0xfe69:0xfe08e9ab
  406b7f:	data16 scas al,BYTE PTR es:[edi]
  406b81:	adc    al,0x11
  406b83:	adc    bh,BYTE PTR [esp+ecx*1+0x69]
  406b87:	push   ebx
  406b88:	not    BYTE PTR [eax+ebx*4-0x7f4a8695]
  406b8f:	fidivr WORD PTR [edi]
  406b91:	call   0x76eb:0x7da887a4
  406b98:	mov    dh,0xa5
  406b9a:	int    0x24
  406b9c:	mov    ch,0x68
  406b9e:	retf   
  406b9f:	push   es
  406ba0:	pop    esp
  406ba1:	mov    eax,0x3634ad1c
  406ba6:	cdq    
  406ba7:	cdq    
  406ba8:	fstp   TBYTE PTR [ebx-0x2]
  406bab:	or     al,0xa7
  406bad:	stos   DWORD PTR es:[edi],eax
  406bae:	std    
  406baf:	shl    dl,1
  406bb1:	adc    ah,BYTE PTR [esi]
  406bb3:	inc    bh
  406bb5:	dec    ebx
  406bb6:	sbb    DWORD PTR [eax],ebp
  406bb8:	inc    ecx
  406bb9:	or     al,0x60
  406bbb:	fstp   QWORD PTR [ebx]
  406bbd:	fist   WORD PTR [edx+0x24]
  406bc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bc1:	adc    al,0xe7
  406bc3:	aam    0x6a
  406bc5:	xchg   DWORD PTR [edx],esi
  406bc7:	pushf  
  406bc8:	lods   al,BYTE PTR ds:[si]
  406bca:	jmp    0xe0a43076
  406bcf:	pop    esp
  406bd0:	repnz sahf 
  406bd2:	lahf   
  406bd3:	jns    0x406c22
  406bd5:	out    dx,eax
  406bd6:	xchg   edi,eax
  406bd7:	mov    ch,0xde
  406bd9:	mov    esi,0x9b28424c
  406bde:	std    
  406bdf:	imul   esp,DWORD PTR [esi],0xc318758a
  406be5:	sbb    ebp,esp
  406be7:	mov    DWORD PTR [eax-0x1a],ecx
  406bea:	sub    bh,dl
  406bec:	or     al,0x29
  406bee:	aas    
  406bef:	cmp    DWORD PTR [eax-0x60],0x35f051b4
  406bf6:	cmp    DWORD PTR [edx-0x1],ebx
  406bf9:	in     eax,dx
  406bfa:	adc    eax,0xd595efe7
  406bff:	mov    esi,0x303d2c83
  406c04:	jle    0x406be5
  406c06:	xchg   ebp,eax
  406c07:	or     al,0xfd
  406c09:	push   esp
  406c0a:	popa   
  406c0b:	pop    esi
  406c0c:	scas   al,BYTE PTR es:[edi]
  406c0d:	stos   DWORD PTR es:[edi],eax
  406c0e:	and    DWORD PTR [esi-0x29c5e495],ebx
  406c14:	sahf   
  406c15:	inc    esp
  406c16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c17:	leave  
  406c18:	dec    ebx
  406c19:	pop    esi
  406c1a:	sbb    DWORD PTR [ebx+0x79],0x5679ac7d
  406c21:	dec    ecx
  406c22:	push   esp
  406c23:	pop    ecx
  406c24:	or     al,0xa8
  406c26:	(bad)  
  406c27:	retf   0xa1f3
  406c2a:	mov    edx,0x99d01746
  406c2f:	bound  ebx,QWORD PTR [esi+0x6]
  406c32:	lods   eax,DWORD PTR ds:[esi]
  406c33:	mov    edx,esi
  406c35:	add    BYTE PTR [eax+0x6b],bh
  406c38:	lds    ebp,FWORD PTR [eax+0xe6177fd]
  406c3e:	push   0x96e11c79
  406c43:	inc    eax
  406c44:	xchg   DWORD PTR [esp+ecx*8],ebx
  406c47:	jmp    DWORD PTR [ecx]
  406c49:	out    dx,al
  406c4a:	add    esi,DWORD PTR [edx+0x74]
  406c4d:	imul   esi
  406c4f:	push   cs
  406c50:	inc    ebp
  406c51:	jns    0x406bd8
  406c53:	and    dl,BYTE PTR [edi]
  406c55:	xchg   DWORD PTR [ecx+0x22b147d],ecx
  406c5b:	das    
  406c5c:	mov    dl,0x7b
  406c5e:	imul   edx,DWORD PTR [ebp+eax*8+0x15aa6141],0xa88e356c
  406c69:	call   0x41e40112
  406c6e:	cdq    
  406c6f:	mov    ?,WORD PTR [esi]
  406c71:	addr16 cmc 
  406c73:	daa    
  406c74:	test   al,0x3
  406c76:	nop
  406c77:	mov    edi,0x8f011ce7
  406c7c:	mov    bl,0x61
  406c7e:	mov    ds:0x7c61172b,al
  406c83:	push   0xffffffe3
  406c85:	aam    0x61
  406c87:	test   al,0x20
  406c89:	test   esp,ebx
  406c8b:	mov    WORD PTR [ebx+esi*4+0x91fc9d4],?
  406c92:	xchg   edi,eax
  406c93:	inc    ecx
  406c94:	ins    DWORD PTR es:[edi],dx
  406c95:	jae    0x406cac
  406c97:	aaa    
  406c98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c99:	xchg   ebx,eax
  406c9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c9b:	stc    
  406c9c:	push   esi
  406c9d:	dec    esp
  406c9e:	sbb    DWORD PTR [ebx-0x7418f4d1],ebx
  406ca4:	inc    esp
  406ca5:	sub    BYTE PTR [edi-0x683129c9],al
  406cab:	dec    ecx
  406cac:	jle    0x406cbd
  406cae:	xor    BYTE PTR [edx+0x230d145],dh
  406cb4:	cwde   
  406cb5:	arpl   WORD PTR [esi+0x7d55c900],si
  406cbb:	lea    esp,[eax+ecx*2+0x20f2c982]
  406cc2:	mov    ah,0x4a
  406cc4:	stos   DWORD PTR es:[edi],eax
  406cc5:	jnp    0x406c70
  406cc7:	inc    ebp
  406cc8:	and    DWORD PTR ds:0xa18ea125,ecx
  406cce:	pop    ebp
  406ccf:	test   eax,0x5f9ae18
  406cd4:	xchg   esp,eax
  406cd5:	dec    ecx
  406cd6:	bound  ebp,QWORD PTR [ebx]
  406cd8:	sbb    al,0xe1
  406cda:	aas    
  406cdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cdc:	push   es
  406cdd:	cmp    BYTE PTR [ebx-0x72],bl
  406ce0:	stos   BYTE PTR es:[edi],al
  406ce1:	xor    bh,BYTE PTR [esp+eax*1+0x19]
  406ce5:	mov    ecx,esi
  406ce7:	mov    WORD PTR [edi-0x4c],gs
  406cea:	stos   DWORD PTR es:[edi],eax
  406ceb:	stc    
  406cec:	xor    cl,BYTE PTR [edx+ebp*1]
  406cef:	jecxz  0x406cb0
  406cf1:	push   ebp
  406cf2:	push   ecx
  406cf3:	mov    ebx,0x9c65beda
  406cf8:	stos   DWORD PTR es:[edi],eax
  406cf9:	lds    ecx,FWORD PTR [edx-0x396e7dd0]
  406cff:	adc    eax,0x8b1309ea
  406d04:	shr    BYTE PTR [esp+edi*1],1
  406d07:	in     eax,dx
  406d08:	cmc    
  406d09:	pop    edx
  406d0a:	pop    ecx
  406d0b:	cmp    dl,BYTE PTR [ecx+0x7ff2e1f]
  406d11:	adc    ebx,DWORD PTR [esi]
  406d13:	in     eax,0x9f
  406d15:	enter  0x65c4,0x1c
  406d19:	jns    0x406d05
  406d1b:	pop    ebp
  406d1c:	mov    esp,0x5cb0d0c1
  406d21:	(bad)  
  406d22:	jmp    0xe936:0x743dd7de
  406d29:	and    ah,dh
  406d2b:	fwait
  406d2c:	jg     0x406cc1
  406d2e:	aaa    
  406d2f:	sbb    DWORD PTR [eax-0x5ddc4ed],eax
  406d35:	mov    ecx,0x77ae5a97
  406d3a:	pop    ss
  406d3b:	add    eax,0xc5ce548a
  406d40:	dec    edx
  406d41:	fadd   DWORD PTR [ecx+0x6d]
  406d44:	jecxz  0x406ce9
  406d46:	adc    al,0xd
  406d48:	les    esp,FWORD PTR [bx-0x71f0]
  406d4d:	jp     0x406d53
  406d4f:	adc    al,0x33
  406d51:	cmp    eax,0x2aa84a3e
  406d56:	pop    ds
  406d57:	mov    ecx,0x891090fe
  406d5c:	ret    
  406d5d:	sahf   
  406d5e:	xchg   edi,eax
  406d5f:	stos   BYTE PTR es:[edi],al
  406d60:	dec    eax
  406d61:	retf   0x1349
  406d64:	mov    ecx,0xda17f0f5
  406d69:	sbb    bl,bl
  406d6b:	retf   
  406d6c:	pushf  
  406d6d:	push   eax
  406d6e:	adc    al,0xee
  406d70:	xchg   ecx,eax
  406d71:	fs push ss
  406d73:	lea    ebp,[ecx-0x822113d]
  406d79:	cld    
  406d7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d7b:	shr    BYTE PTR [esi-0x12],cl
  406d7e:	jp     0x406df1
  406d80:	jb     0x406db7
  406d82:	bound  ebp,QWORD PTR [ebp-0x2b216abe]
  406d88:	sbb    al,0xcc
  406d8a:	enter  0x5182,0xd4
  406d8e:	jp     0x406d61
  406d90:	es or  eax,0xd4ff446e
  406d96:	xor    ecx,DWORD PTR [eax+ecx*2]
  406d99:	popf   
  406d9a:	dec    edx
  406d9b:	in     eax,dx
  406d9c:	ret    
  406d9d:	sub    DWORD PTR [ebx],edi
  406d9f:	cmp    eax,0x22e5bf19
  406da4:	enter  0xf247,0x1e
  406da8:	aad    0x10
  406daa:	in     eax,0xf5
  406dac:	adc    DWORD PTR [eax+0x0],0x67821fd9
  406db3:	xchg   dh,dh
  406db5:	loopne 0x406de9
  406db7:	jle    0x406dc1
  406db9:	idiv   BYTE PTR [eax-0x2496de46]
  406dbf:	sbb    DWORD PTR [edi-0x15e6a7aa],ebx
  406dc5:	pop    esi
  406dc6:	ja     0x406e08
  406dc8:	in     al,dx
  406dc9:	lea    eax,[ebp+0x2f]
  406dcc:	pop    ss
  406dcd:	pop    eax
  406dce:	push   eax
  406dcf:	lods   eax,DWORD PTR ds:[esi]
  406dd0:	mov    WORD PTR [eax-0x74],?
  406dd3:	es gs push ds
  406dd6:	lds    ebx,FWORD PTR [ebx]
  406dd8:	cmp    DWORD PTR [edi],esp
  406dda:	js     0x406dc0
  406ddc:	jae    0x406d7e
  406dde:	sub    eax,0x120a4a6
  406de3:	test   al,0x74
  406de5:	pusha  
  406de6:	out    dx,eax
  406de7:	sbb    al,0xe6
  406de9:	mov    bh,0x5
  406deb:	enter  0xae7c,0x35
  406def:	js     0x406e3f
  406df1:	pop    esi
  406df2:	add    al,0xfa
  406df4:	int    0x74
  406df6:	cmp    eax,0xe4a821d2
  406dfb:	push   cs
  406dfc:	ins    DWORD PTR es:[edi],dx
  406dfd:	sbb    edx,DWORD PTR [ebx+0x68]
  406e00:	cwde   
  406e01:	adc    edx,DWORD PTR [edx+0x77]
  406e04:	call   0xcdaa:0xbe2390f9
  406e0b:	push   0xffffffb3
  406e0d:	fiadd  DWORD PTR [edx-0x32]
  406e10:	jg     0x3449df49
  406e16:	and    DWORD PTR ds:0xd75785c0,0xffffffd1
  406e1d:	mov    dl,0x33
  406e1f:	dec    ebx
  406e20:	out    0xe1,eax
  406e22:	ss sbb al,0x3f
  406e25:	dec    esi
  406e26:	outs   dx,BYTE PTR ds:[esi]
  406e27:	sub    eax,0xdec3873d
  406e2c:	ja     0x406de7
  406e2e:	jp     0x406e27
  406e30:	inc    eax
  406e31:	mov    eax,ds:0x3c306789
  406e36:	jp     0x406e71
  406e38:	jno    0x406e83
  406e3a:	jl     0x406e82
  406e3c:	outs   dx,BYTE PTR cs:[esi]
  406e3e:	sbb    BYTE PTR [ebx+0x3e99b75f],ah
  406e44:	sbb    eax,0xffde3ca8
  406e49:	xor    eax,0x72863bfc
  406e4e:	mov    ah,0x4e
  406e50:	adc    edi,ebx
  406e52:	cmp    esi,DWORD PTR [edx]
  406e54:	and    DWORD PTR [ecx],eax
  406e56:	aaa    
  406e57:	test   eax,0x943240ed
  406e5c:	popa   
  406e5d:	push   cs
  406e5e:	sahf   
  406e5f:	mov    cl,0x78
  406e61:	ror    BYTE PTR [edx],cl
  406e63:	mov    ah,0xe6
  406e65:	sbb    eax,0x30e18241
  406e6a:	push   0xffffffd4
  406e6c:	loop   0x406e6d
  406e6e:	popf   
  406e6f:	xchg   BYTE PTR [ebx+ebp*8-0x71],bh
  406e73:	inc    ecx
  406e74:	fldz   
  406e76:	int    0xcb
  406e78:	dec    ebx
  406e79:	push   edx
  406e7a:	mov    ecx,0xf7a5963a
  406e7f:	nop
  406e80:	pop    edx
  406e81:	lds    edx,FWORD PTR [edx+0x75]
  406e84:	dec    BYTE PTR [eax-0x12]
  406e87:	or     BYTE PTR [eax],ah
  406e89:	or     BYTE PTR [edi+0x5e],bl
  406e8c:	es push cs
  406e8e:	sahf   
  406e8f:	push   edx
  406e90:	cmp    DWORD PTR [ecx+0x145dc14a],ecx
  406e96:	ret    0x9c10
  406e99:	pop    edx
  406e9a:	int    0xbe
  406e9c:	sbb    cl,ch
  406e9e:	dec    esp
  406e9f:	dec    edi
  406ea0:	cs fs cdq 
  406ea3:	loope  0x406e7c
  406ea5:	cmp    al,0x49
  406ea7:	mov    ebp,0x57d655e8
  406eac:	aaa    
  406ead:	add    cl,BYTE PTR [edx+0x10dc05fb]
  406eb3:	pop    esp
  406eb4:	pop    es
  406eb5:	xchg   ebx,eax
  406eb6:	and    al,bh
  406eb8:	jmp    0x521be724
  406ebd:	es adc ah,al
  406ec0:	jmp    0x406f09
  406ec2:	mov    edi,DWORD PTR [eax+edx*2]
  406ec5:	mov    bh,0x25
  406ec7:	inc    esp
  406ec8:	aaa    
  406ec9:	dec    esp
  406eca:	dec    esi
  406ecb:	cld    
  406ecc:	ror    dl,0x4e
  406ecf:	imul   ebp,DWORD PTR [edi-0x77de0b46],0xa80ca30c
  406ed9:	outs   dx,BYTE PTR ds:[esi]
  406eda:	or     al,0x26
  406edc:	jo     0x406ec6
  406ede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406edf:	cmc    
  406ee0:	fldenv [eax+ebp*1+0x2]
  406ee4:	loopne 0x406f3e
  406ee6:	mov    fs,WORD PTR [esi]
  406ee8:	(bad)  
  406ee9:	xor    DWORD PTR [edx],esp
  406eeb:	retf   
  406eec:	xchg   BYTE PTR [edi],al
  406eee:	shr    dh,1
  406ef0:	push   0x4b691490
  406ef5:	ss push ss
  406ef7:	add    eax,0x8bdee3cd
  406efc:	aad    0xe
  406efe:	fst    DWORD PTR [ecx+0x5a]
  406f01:	(bad)  
  406f02:	pop    eax
  406f03:	mov    ah,0x7b
  406f05:	cmp    BYTE PTR [edx],al
  406f07:	dec    ebp
  406f08:	or     al,0xd3
  406f0a:	in     al,dx
  406f0b:	cmp    BYTE PTR [edx-0x20],al
  406f0e:	bound  ecx,QWORD PTR [ebx+ebx*2+0x4e]
  406f12:	outs   dx,DWORD PTR ds:[esi]
  406f13:	mov    ebx,0xf150d243
  406f18:	iret   
  406f19:	jecxz  0x406f5e
  406f1b:	or     BYTE PTR [ecx+0x73],al
  406f1e:	jge    0x406eb1
  406f20:	mov    ds:0x540df9c2,al
  406f25:	dec    esp
  406f26:	push   edi
  406f27:	mov    DWORD PTR [edi],ebp
  406f29:	cld    
  406f2a:	rcr    DWORD PTR [eax+0x487db209],1
  406f30:	out    dx,al
  406f31:	inc    edi
  406f32:	jo     0x406f90
  406f34:	mov    ecx,0x85eb26dd
  406f39:	inc    ebx
  406f3a:	(bad)
  406f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f40:	push   ebx
  406f41:	dec    esi
  406f42:	stos   BYTE PTR es:[edi],al
  406f43:	in     al,dx
  406f44:	mov    bl,0xcc
  406f46:	ret    0x5247
  406f49:	in     eax,dx
  406f4a:	sub    eax,0x949bb54
  406f4f:	js     0x406f3a
  406f51:	dec    eax
  406f52:	outs   dx,BYTE PTR ds:[esi]
  406f53:	in     al,0x2d
  406f55:	inc    edx
  406f56:	add    BYTE PTR [edi+0x6809b6e4],dl
  406f5c:	into   
  406f5d:	xchg   edi,eax
  406f5e:	mov    esp,0x25659b9a
  406f63:	das    
  406f64:	mov    edx,0xfce96b99
  406f69:	dec    edx
  406f6b:	test   DWORD PTR [esi-0x48044ce2],0x8ea33943
  406f75:	inc    edx
  406f76:	arpl   WORD PTR [ecx-0x7e],di
  406f79:	(bad)  
  406f7a:	icebp  
  406f7b:	vpaddusb ymm2,ymm2,YMMWORD PTR [esi+0x7e]
  406f80:	inc    esp
  406f81:	loopne 0x406f06
  406f83:	ret    
  406f84:	mov    esp,0x512e2cd9
  406f89:	and    eax,0x1adfa0c3
  406f8e:	add    eax,0x6bd348be
  406f93:	inc    ebp
  406f94:	cwde   
  406f95:	lds    edx,FWORD PTR [edi-0x24]
  406f98:	out    dx,eax
  406f99:	out    0x73,eax
  406f9b:	mov    ebx,0x8b9c47d1
  406fa0:	pop    DWORD PTR [edx+ebx*2+0x2ac6c9fd]
  406fa7:	and    al,0x28
  406fa9:	arpl   WORD PTR [ebx-0xf],cx
  406fac:	sub    dl,cl
  406fae:	mov    ds:0xe0940ce3,al
  406fb3:	jmp    0xe4b5eb32
  406fb8:	cwde   
  406fb9:	jle    0x406f4e
  406fbb:	pop    ebp
  406fbc:	jno    0x406f92
  406fbe:	(bad)  [esi+0x12]
  406fc1:	ss es in al,0x9b
  406fc5:	pop    edx
  406fc6:	sahf   
  406fc7:	jmp    0x6aab21a4
  406fcc:	jno    0x406fcf
  406fce:	fld    DWORD PTR [edi-0x6fa546d]
  406fd4:	lds    ecx,FWORD PTR [edi-0x2c]
  406fd7:	sbb    BYTE PTR [eax+0x27],0xef
  406fdb:	adc    DWORD PTR [eax],esi
  406fdd:	(bad)  [ebx+0x4]
  406fe0:	add    al,0x6e
  406fe2:	cmp    edx,DWORD PTR [edx+0x35e8c5ca]
  406fe8:	xor    eax,0xbf719e30
  406fed:	mov    dl,0x16
  406fef:	cs ret 0xb200
  406ff3:	retf   0x8282
  406ff6:	sti    
  406ff7:	sub    DWORD PTR [ebx-0x689b9a01],edx
  406ffd:	clc    
  406ffe:	aam    0x4c
  407000:	mov    dl,0x4d
  407002:	leave  
  407003:	repz int3 
  407005:	mov    bl,0x8d
  407007:	repnz xchg edx,eax
  407009:	xchg   edi,eax
  40700a:	push   eax
  40700b:	pushf  
  40700c:	retf   0xb168
  40700f:	add    bh,al
  407011:	mov    bh,0x30
  407013:	inc    ebp
  407014:	cmp    al,0x38
  407016:	fcmove st,st(1)
  407018:	loope  0x406fa0
  40701a:	push   cs
  40701b:	jp     0x40703a
  40701d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40701e:	hlt    
  40701f:	pop    eax
  407020:	push   ebx
  407021:	sbb    bl,BYTE PTR [esp]
  407024:	das    
  407025:	push   cs
  407026:	add    eax,0xc070be89
  40702b:	push   0xbb7f0d82
  407030:	(bad)  
  407031:	lds    esi,FWORD PTR [ebx+0x1c]
  407034:	fst    DWORD PTR [ecx+0x1ea1b0a3]
  40703a:	dec    ecx
  40703b:	xchg   ebx,eax
  40703c:	sti    
  40703d:	inc    ecx
  40703e:	loop   0x407012
  407040:	mov    cs,WORD PTR [ebp-0x5040896]
  407046:	fs nop
  407048:	mov    ah,0xd8
  40704a:	(bad)  
  40704b:	xor    BYTE PTR [ecx-0x53341a82],ch
  407051:	jno    0x407004
  407053:	xchg   esp,eax
  407054:	adc    eax,0xd6f0f260
  407059:	sbb    DWORD PTR ds:0xc7897118,esp
  40705f:	sub    dl,ah
  407061:	adc    eax,0x262b756c
  407066:	xchg   edi,eax
  407067:	loop   0x407074
  407069:	push   ss
  40706a:	and    eax,0xd8019e9b
  40706f:	fdiv   QWORD PTR [edx-0x77]
  407072:	add    ch,BYTE PTR [esi-0x6b]
  407075:	jae    0x407078
  407077:	arpl   WORD PTR [edx-0x40],bx
  40707a:	jno    0x407088
  40707c:	adc    al,0x51
  40707e:	jo     0x407082
  407080:	ds into 
  407082:	imul   edx,DWORD PTR [ecx-0x2],0xffffffea
  407086:	xchg   ecx,eax
  407087:	stos   BYTE PTR es:[edi],al
  407088:	(bad)  
  407089:	jne    0x4070a7
  40708b:	in     al,0x89
  40708d:	pop    ebp
  40708e:	inc    edx
  40708f:	jnp    0x407025
  407091:	retf   0x5e77
  407094:	dec    eax
  407095:	dec    ebx
  407096:	icebp  
  407097:	mov    esi,0x805e8509
  40709c:	adc    bh,bl
  40709e:	sbb    BYTE PTR [edi-0x2],cl
  4070a1:	repz xchg esi,eax
  4070a3:	sti    
  4070a4:	arpl   WORD PTR [bp+si],ax
  4070a7:	js     0x407066
  4070a9:	or     al,0x46
  4070ab:	and    ecx,DWORD PTR [edi]
  4070ad:	push   edi
  4070ae:	xchg   esp,eax
  4070af:	inc    edi
  4070b0:	lods   al,BYTE PTR ds:[esi]
  4070b1:	pop    edi
  4070b2:	sub    eax,0x7bbee0ab
  4070b7:	cmp    BYTE PTR [esi+0x52f72196],dl
  4070bd:	mov    cl,0xdc
  4070bf:	xlat   BYTE PTR ds:[ebx]
  4070c0:	ss cmp ch,dl
  4070c3:	and    dh,BYTE PTR [eax-0x61887d15]
  4070c9:	cmc    
  4070ca:	cmp    BYTE PTR [ebp+ebp*8-0x5d],0xb2
  4070cf:	in     al,dx
  4070d0:	mov    dh,dh
  4070d2:	ins    DWORD PTR es:[edi],dx
  4070d3:	jnp    0x4070b9
  4070d5:	fld    TBYTE PTR [edi-0x75]
  4070d8:	sub    DWORD PTR [esi-0x3f],ebx
  4070db:	and    DWORD PTR [ebx],esp
  4070dd:	pop    eax
  4070de:	sub    eax,0xda33089a
  4070e3:	sub    al,0x99
  4070e5:	sti    
  4070e6:	add    DWORD PTR [ebp+0x4503690a],edx
  4070ec:	jmp    0x40716d
  4070ee:	mov    ds:0xacf6293f,eax
  4070f3:	and    edi,edi
  4070f5:	mov    ecx,0xfe2afe4d
  4070fa:	cmp    ebp,DWORD PTR [edi]
  4070fc:	int    0x7
  4070fe:	cld    
  4070ff:	not    DWORD PTR [esi-0x43bcecd3]
  407105:	(bad)
  407109:	bound  edx,QWORD PTR [edx+ebp*1]
  40710c:	sub    ch,BYTE PTR [edi+0x151e02d7]
  407112:	fisubr DWORD PTR [edx]
  407114:	dec    edx
  407115:	sbb    edi,ecx
  407117:	daa    
  407118:	pop    ebx
  407119:	jno    0x407158
  40711b:	(bad)  
  40711c:	in     al,dx
  40711d:	adc    BYTE PTR [eax],0xe8
  407120:	leave  
  407121:	cmp    cl,dh
  407123:	xor    esp,DWORD PTR [edx]
  407125:	mov    al,0x65
  407127:	sub    eax,0x11ca5b8
  40712c:	fstp   QWORD PTR [edi+0x37]
  40712f:	stos   DWORD PTR es:[edi],eax
  407130:	jg     0x40711c
  407132:	jge    0x40713e
  407134:	adc    al,0xa3
  407136:	jo     0x40715d
  407138:	js     0x4070fe
  40713a:	pop    ds
  40713b:	mov    al,BYTE PTR [esi]
  40713d:	push   cs
  40713e:	in     al,0x8c
  407140:	dec    edx
  407141:	and    DWORD PTR [eax-0x7f227ccb],0x65
  407148:	jmp    0x407197
  40714a:	bound  esp,QWORD PTR [eax-0x63a7d7]
  407150:	pop    es
  407151:	rcr    DWORD PTR [esi+edi*8+0x9],0xe0
  407156:	outs   dx,DWORD PTR ds:[esi]
  407157:	jecxz  0x407163
  407159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40715a:	xchg   ebx,eax
  40715b:	push   esi
  40715c:	ret    0x7f95
  40715f:	mov    DWORD PTR [ebp+0xd],edx
  407162:	xchg   esp,eax
  407163:	aad    0xdf
  407165:	mov    ebp,0x463f8a74
  40716a:	pop    es
  40716b:	xor    DWORD PTR [ebp-0x6],ebp
  40716e:	lods   eax,DWORD PTR ds:[esi]
  40716f:	or     ebp,DWORD PTR gs:[ecx+0x3d]
  407173:	stc    
  407174:	fidivr DWORD PTR [eax]
  407176:	mov    eax,ds:0x5b26924c
  40717b:	daa    
  40717c:	sub    DWORD PTR [esi+edx*1+0x33],eax
  407180:	mov    eax,0x607ddccb
  407185:	and    ebx,DWORD PTR [esi+0x54]
  407188:	xchg   edx,eax
  407189:	or     al,0xff
  40718b:	add    al,0xc6
  40718d:	mov    esi,0x1fe61b76
  407192:	dec    esi
  407193:	mov    cl,0x3b
  407195:	test   al,0x8b
  407197:	ror    DWORD PTR [ebp-0x2f],0xa1
  40719b:	sub    BYTE PTR [edi+0x349d5a9e],0xe4
  4071a2:	pop    edx
  4071a3:	push   0xb29267e1
  4071a8:	mov    al,ds:0x42c58647
  4071ad:	aas    
  4071ae:	adc    eax,0x7c04d99
  4071b3:	adc    DWORD PTR [esi-0xce4de32],ebp
  4071b9:	ins    DWORD PTR es:[edi],dx
  4071ba:	sti    
  4071bb:	in     eax,0x54
  4071bd:	jmp    0x407147
  4071bf:	call   0xb4fb:0xc0c8ace5
  4071c6:	and    eax,0xeb8fe6a7
  4071cb:	mov    ah,0xe
  4071cd:	es mov ah,0xa
  4071d0:	mov    edi,DWORD PTR [ebx+0x4c3d333b]
  4071d6:	add    DWORD PTR [edi],eax
  4071d8:	pop    esp
  4071d9:	aaa    
  4071da:	js     0x40724d
  4071dc:	jecxz  0x407160
  4071de:	cmp    BYTE PTR [ecx+0x33],dl
  4071e1:	mov    cl,0xe2
  4071e3:	sahf   
  4071e4:	xchg   DWORD PTR [eax],ebx
  4071e6:	pop    eax
  4071e7:	push   0x1af20359
  4071ec:	enter  0xe166,0xae
  4071f0:	xlat   BYTE PTR ds:[ebx]
  4071f1:	sub    BYTE PTR [eax+0x19],cl
  4071f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071f5:	add    eax,0x36cae32
  4071fa:	push   ebx
  4071fb:	inc    ebp
  4071fc:	push   edx
  4071fd:	test   al,0xe0
  4071ff:	pop    ss
  407200:	cld    
  407201:	mov    ds:0x3a491dd5,al
  407206:	js     0x369a84c2
  40720c:	mov    bh,bh
  40720e:	repnz cld 
  407210:	cs std 
  407212:	out    dx,eax
  407213:	cmp    bl,BYTE PTR [ecx-0xf5768d5]
  407219:	push   ebp
  40721a:	setg   BYTE PTR [edi+ebp*4-0x4d362803]
  407222:	scas   al,BYTE PTR es:[edi]
  407223:	je     0x407252
  407225:	xor    esp,esp
  407227:	fdivr  DWORD PTR [ebp+0x5c]
  40722a:	lods   al,BYTE PTR ds:[esi]
  40722b:	call   0xddf80fa7
  407230:	inc    ebx
  407231:	popf   
  407232:	scas   eax,DWORD PTR es:[edi]
  407233:	icebp  
  407234:	sub    BYTE PTR [edx+0x5a],ah
  407237:	push   edi
  407238:	in     al,dx
  407239:	int3   
  40723a:	aas    
  40723b:	xor    bl,al
  40723d:	inc    ecx
  40723e:	inc    DWORD PTR [eax]
  407240:	ins    BYTE PTR es:[edi],dx
  407241:	ficomp WORD PTR [edx+eax*4]
  407244:	jmp    0x9ae9:0xc7492615
  40724b:	and    bh,BYTE PTR [ecx-0x78]
  40724e:	or     al,0xe2
  407250:	jnp    0x407281
  407252:	xor    ah,BYTE PTR [edi]
  407254:	or     DWORD PTR [edx-0x7f],0xffffffdf
  407258:	les    ebx,FWORD PTR [eax+0x2a]
  40725b:	jg     0x407234
  40725d:	push   ss
  40725e:	xor    eax,0x953a13a6
  407263:	add    BYTE PTR [edx-0x7cf76a39],cl
  407269:	(bad)
  40726c:	sbb    al,0xe5
  40726e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40726f:	test   BYTE PTR [esi-0x1e1c3d27],dh
  407275:	js     0x407243
  407277:	inc    edi
  407278:	imul   edi,ebx,0xffffffee
  40727b:	sbb    DWORD PTR [edx],ebp
  40727d:	jp     0x407288
  40727f:	mov    BYTE PTR [esi+edx*1],dl
  407282:	sub    BYTE PTR [edx],cl
  407284:	jg     0x407217
  407286:	sbb    BYTE PTR [ebp+0x4f52815c],bl
  40728c:	cs pop ds
  40728e:	ja     0x40727c
  407290:	(bad)  
  407291:	mov    fs,WORD PTR [edx]
  407293:	clc    
  407294:	sub    al,0xd3
  407296:	js     0x407270
  407298:	add    esp,DWORD PTR [ecx-0x4ae98feb]
  40729e:	sub    al,0x79
  4072a0:	sti    
  4072a1:	les    ebp,FWORD PTR [ebp+0x69]
  4072a4:	add    eax,0xa1620629
  4072a9:	ss ss pop ds
  4072ac:	pop    ecx
  4072ad:	add    ebx,DWORD PTR [edi+0x78]
  4072b0:	or     BYTE PTR [eax+edi*1],cl
  4072b3:	inc    ebp
  4072b4:	or     bl,BYTE PTR [esp+ebp*1]
  4072b7:	push   0x99cf45aa
  4072bc:	fld    st(7)
  4072be:	jbe    0x4072bf
  4072c0:	ror    esp,0xff
  4072c3:	jmp    0x3026:0x2b3b21ef
  4072ca:	or     eax,0xe8e6130c
  4072d0:	mov    DWORD PTR [eax+0x5e869bc6],edx
  4072d6:	ins    DWORD PTR es:[edi],dx
  4072d7:	xlat   BYTE PTR ds:[ebx]
  4072d8:	push   0xaf0d5bd7
  4072dd:	lahf   
  4072de:	mov    WORD PTR [edx-0x61],fs
  4072e1:	aad    0xa2
  4072e3:	jbe    0x4072c5
  4072e5:	cmc    
  4072e6:	inc    BYTE PTR [edi-0x63f8da4d]
  4072ec:	and    al,0x29
  4072ee:	mov    DWORD PTR [ebp+0x8],ecx
  4072f1:	jns    0x4072d0
  4072f3:	adc    DWORD PTR ds:0x10cef755,ebx
  4072f9:	cli    
  4072fa:	out    0x45,al
  4072fc:	(bad)  
  4072fd:	mov    esp,0x2c3744e6
  407302:	das    
  407303:	dec    edx
  407304:	mov    esp,0x9007437e
  407309:	imul   esi,DWORD PTR [eax+0x700473aa],0xfffffff5
  407310:	mov    cs,ebp
  407312:	mov    edx,0xad18d12b
  407317:	mov    bh,0xe7
  407319:	mov    DWORD PTR [edi+ebp*2+0x317f24e2],esp
  407320:	push   esi
  407321:	xor    al,ch
  407323:	aam    0xf3
  407325:	aas    
  407326:	cmp    esi,DWORD PTR gs:[ebx+0x5]
  40732a:	repz lahf 
  40732c:	ins    BYTE PTR es:[edi],dx
  40732d:	bound  ebp,QWORD PTR [ebx+0x66]
  407330:	push   eax
  407331:	mov    bl,0x32
  407333:	push   ds
  407334:	pushf  
  407335:	push   esi
  407336:	inc    esi
  407337:	cdq    
  407338:	imul   ebx,DWORD PTR [ebx-0x44],0x75
  40733c:	out    0x0,al
  40733e:	adc    al,0x61
  407340:	clc    
  407341:	adc    BYTE PTR [ebx+ebx*1-0x2c4bb451],ch
  407348:	xor    edi,DWORD PTR [ebp+0x6d]
  40734b:	mov    ah,0x7b
  40734d:	pop    ebx
  40734e:	repz cli 
  407350:	addr16 jae 0x4073a6
  407353:	dec    edx
  407354:	fldcw  WORD PTR [esi-0x611a8c1b]
  40735a:	jnp    0x407308
  40735c:	not    DWORD PTR [eax+0x79]
  40735f:	adc    ebx,edi
  407361:	into   
  407362:	ins    DWORD PTR es:[edi],dx
  407363:	mov    ch,0x41
  407365:	out    dx,al
  407366:	aas    
  407367:	lahf   
  407368:	cdq    
  407369:	dec    edi
  40736a:	ret    0x81c2
  40736d:	mov    ecx,0x64bcd9b0
  407372:	std    
  407373:	and    al,0xbb
  407375:	dec    eax
  407376:	xchg   esp,eax
  407377:	mov    eax,ds:0x341e0e8d
  40737c:	sub    BYTE PTR [eax+eiz*1],bh
  40737f:	enter  0xe460,0xb8
  407383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407384:	rcr    BYTE PTR [eax+0xdfbd394],cl
  40738a:	xchg   edi,eax
  40738b:	pop    edx
  40738c:	js     0x4073a2
  40738e:	ins    BYTE PTR es:[edi],dx
  40738f:	les    ebx,FWORD PTR [ebp-0x35]
  407392:	jb     0xa460cfc1
  407398:	sahf   
  407399:	dec    ebp
  40739a:	jnp    0x407382
  40739c:	jmp    0x407397
  40739e:	inc    edi
  40739f:	cmp    eax,0x3d6ad02d
  4073a4:	pop    ds
  4073a5:	pop    es
  4073a6:	sbb    dl,BYTE PTR [esi]
  4073a8:	fsubr  QWORD PTR [edi]
  4073aa:	xchg   ebp,eax
  4073ab:	sbb    eax,0xb80c59d8
  4073b0:	stc    
  4073b1:	mov    ch,0x21
  4073b3:	xchg   edi,eax
  4073b4:	pop    ebx
  4073b5:	jmp    0x93cd808
  4073ba:	add    esi,DWORD PTR [edx+0x5da62fdd]
  4073c0:	xlat   BYTE PTR ds:[ebx]
  4073c1:	xchg   ebp,eax
  4073c2:	test   BYTE PTR [esi-0x610dd7cf],bl
  4073c8:	sub    dh,al
  4073ca:	clc    
  4073cb:	sub    bl,BYTE PTR [ebx+edi*2]
  4073ce:	cmp    DWORD PTR [edi],eax
  4073d0:	pop    esp
  4073d1:	cmp    eax,0xad17e09c
  4073d6:	fld    QWORD PTR [eax+0x6421da7f]
  4073dc:	mov    al,ds:0xd52f9bfa
  4073e1:	sbb    cl,BYTE PTR [edx-0x79]
  4073e4:	jns    0x4073a0
  4073e6:	hlt    
  4073e7:	jle    0x407414
  4073e9:	push   ebp
  4073ea:	(bad)  
  4073eb:	jnp    0x40741b
  4073ed:	pop    ss
  4073ee:	and    eax,0xdab70b09
  4073f3:	imul   ecx,DWORD PTR [ecx+edi*8-0x39b00cb3],0xc17606a1
  4073fe:	cmp    al,0x6c
  407400:	adc    al,0x57
  407402:	fiadd  DWORD PTR [edx-0x23]
  407405:	stos   BYTE PTR es:[edi],al
  407406:	popa   
  407407:	and    BYTE PTR [esi+eax*2],0xe1
  40740b:	adc    al,0xdf
  40740d:	in     al,0xa3
  40740f:	mov    ch,0xcc
  407411:	out    dx,eax
  407412:	test   eax,0xdfa05811
  407417:	pop    ds
  407418:	sbb    edx,edx
  40741a:	xchg   esp,eax
  40741b:	mov    DWORD PTR [edx],ebx
  40741d:	inc    ebp
  40741e:	inc    eax
  40741f:	int    0xdf
  407421:	fist   DWORD PTR [esi-0x41]
  407424:	ja     0x407419
  407426:	inc    edx
  407427:	cmp    eax,0x78cc3363
  40742c:	adc    al,0x56
  40742e:	leave  
  40742f:	inc    edi
  407430:	lds    edi,FWORD PTR [eax-0x2c]
  407433:	sub    bh,al
  407435:	xchg   esi,eax
  407436:	mov    cl,0x0
  407438:	stos   BYTE PTR es:[edi],al
  407439:	fdiv   DWORD PTR [edx+0x6a]
  40743c:	leave  
  40743d:	xor    al,0xea
  40743f:	retf   0x1c54
  407442:	test   BYTE PTR [edx-0x182ea7b],0x1a
  407449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40744a:	cmp    bl,BYTE PTR gs:[ecx-0x79]
  40744e:	dec    edx
  40744f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407450:	mov    eax,ds:0x3b9c57f8
  407455:	sbb    al,BYTE PTR [ebx-0x4da14c96]
  40745b:	pop    ebx
  40745c:	jp     0x407436
  40745e:	fsub   st(7),st
  407460:	daa    
  407461:	(bad)  
  407462:	dec    ecx
  407463:	sahf   
  407464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407465:	adc    eax,0x37909674
  40746a:	test   BYTE PTR [ecx-0xee90d25],ch
  407470:	or     ch,BYTE PTR [ebx]
  407472:	push   ecx
  407473:	adc    ebx,DWORD PTR [edx-0x1]
  407476:	cmp    DWORD PTR [edi],ebx
  407478:	ins    DWORD PTR es:[edi],dx
  407479:	xor    DWORD PTR [ebx],0x8421f7b9
  40747f:	adc    ebx,esi
  407481:	dec    ecx
  407482:	lahf   
  407483:	add    al,0x1e
  407485:	fwait
  407486:	sub    BYTE PTR [edx-0x5eebcdc8],cl
  40748c:	fdiv   DWORD PTR [edx+0x6f]
  40748f:	push   0xa7fcfc3
  407494:	mov    ebx,0x4379bb6f
  407499:	push   es
  40749a:	add    bh,BYTE PTR [esp+eax*8+0x3f8b04ee]
  4074a1:	sar    BYTE PTR [edi+0x4ee9aa35],cl
  4074a7:	test   BYTE PTR [edx-0x7de5289e],ah
  4074ad:	lock dec edi
  4074af:	jp     0x4074cd
  4074b1:	xchg   ebp,eax
  4074b2:	ins    BYTE PTR es:[edi],dx
  4074b3:	mov    eax,ds:0x6c70f7a8
  4074b8:	pop    edx
  4074b9:	les    esp,FWORD PTR [edx]
  4074bb:	mov    ebp,DWORD PTR [edx+0x449e98b9]
  4074c1:	out    0x7e,eax
  4074c3:	or     BYTE PTR [eax-0x78],bl
  4074c6:	xor    al,0x17
  4074c8:	bound  eax,QWORD PTR [edx]
  4074ca:	repz or edi,esi
  4074cd:	sub    BYTE PTR [esi-0x79],dl
  4074d0:	leave  
  4074d1:	inc    esi
  4074d2:	cmp    eax,0x3e66d09c
  4074d7:	mov    edx,0x8c2d875f
  4074dc:	sti    
  4074dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074de:	in     al,0x8c
  4074e0:	popa   
  4074e1:	stc    
  4074e2:	aad    0x2b
  4074e4:	jbe    0x407516
  4074e6:	inc    ebp
  4074e7:	inc    edx
  4074e8:	cld    
  4074e9:	xor    bh,BYTE PTR [eiz*2+0x2c6a5bfd]
  4074f0:	(bad)
  4074f3:	ja     0x407574
  4074f5:	dec    edi
  4074f6:	test   dl,dl
  4074f8:	mov    ah,0x49
  4074fa:	adc    dl,BYTE PTR [eax+0x7bdcdab4]
  407500:	or     BYTE PTR [ebp+0x13],cl
  407503:	adc    DWORD PTR [ebx+edx*2],esi
  407506:	arpl   WORD PTR [eax+0x6b],ax
  407509:	mov    eax,0x461b8671
  40750e:	ret    
  40750f:	jmp    0x656b:0x4eb9bb84
  407516:	add    DWORD PTR [ebx],0x8c6b1b7b
  40751c:	jne    0x4074ef
  40751e:	test   al,0xf9
  407520:	cmp    bh,bl
  407522:	xchg   edx,eax
  407523:	bound  ebp,QWORD PTR [eax+0x95a301b]
  407529:	and    eax,0x68121344
  40752e:	loop   0x4074fb
  407530:	jb     0x4074c3
  407532:	sbb    cl,BYTE PTR [eax+0x2af6a29e]
  407538:	push   edx
  407539:	add    DWORD PTR [edx+0x7f37e96],eax
  40753f:	das    
  407540:	mov    fs,eax
  407542:	cs pop ecx
  407544:	jg     0x4075a3
  407546:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407547:	push   esi
  407548:	mov    ecx,0x4f8a4cc4
  40754d:	jae    0x40754d
  40754f:	fs pop esi
  407551:	out    dx,al
  407552:	fimul  DWORD PTR [edi+ebx*2]
  407555:	mov    ds:0xc960821,eax
  40755a:	ret    0x4b0
  40755d:	js     0x40750e
  40755f:	mov    ds:0x9ad6b92f,al
  407564:	ds pop ds
  407566:	dec    esp
  407567:	out    0xe0,eax
  407569:	push   ebp
  40756a:	rol    DWORD PTR [ecx+0x6df3a449],cl
  407570:	adc    cl,BYTE PTR [ebp+0x15]
  407573:	mov    DWORD PTR [edx],ebx
  407575:	jo     0x407599
  407577:	jg     0x4075c2
  407579:	aad    0x9f
  40757b:	idiv   DWORD PTR ds:0xdd70f7d4
  407581:	out    0x1,al
  407583:	push   DWORD PTR ds:0x2facd592
  407589:	mov    bh,0xd1
  40758b:	xor    edx,edi
  40758d:	push   esp
  40758e:	push   0xffffffc1
  407590:	xchg   DWORD PTR [eax],edx
  407592:	jb     0x4075d2
  407594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407595:	pop    es
  407596:	jae    0x4075c6
  407598:	cs inc ecx
  40759a:	mov    bh,0x35
  40759c:	push   esp
  40759d:	jmp    0xdf8a93b2
  4075a2:	das    
  4075a3:	xor    dl,BYTE PTR [ecx+0x3f]
  4075a6:	fistp  DWORD PTR [ebx-0x3582fe74]
  4075ac:	(bad)  
  4075ad:	xor    DWORD PTR [esi+0x5f],esi
  4075b0:	jne    0x4075c4
  4075b2:	jmp    0xbe9d:0x84dd3c58
  4075b9:	sub    eax,0x371a98cc
  4075be:	mov    ebx,0xff72836c
  4075c3:	xchg   esi,eax
  4075c4:	xchg   edi,eax
  4075c5:	in     eax,0xe0
  4075c7:	push   edx
  4075c8:	or     al,BYTE PTR [eax-0x7454ba52]
  4075ce:	mov    ds:0x81837cd0,al
  4075d3:	and    eax,ebx
  4075d5:	lods   eax,DWORD PTR ds:[esi]
  4075d6:	out    0x65,eax
  4075d8:	dec    edi
  4075d9:	loopne 0x407617
  4075db:	or     al,0xbc
  4075dd:	inc    ebx
  4075de:	inc    esp
  4075df:	mov    ebp,0xa5e187f
  4075e4:	fnstenv [ebp-0x6fa12f5f]
  4075ea:	jae    0x40759e
  4075ec:	fisttp WORD PTR [edx-0x53]
  4075ef:	fimul  WORD PTR [edx+0xe]
  4075f2:	mov    ebp,0xf588f730
  4075f7:	push   ecx
  4075f8:	push   ecx
  4075f9:	adc    al,0x39
  4075fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075fc:	xchg   ebp,eax
  4075fd:	into   
  4075fe:	iret   
  4075ff:	pop    ss
  407600:	push   ds
  407601:	sub    edx,DWORD PTR [edx]
  407603:	ja     0x4075a2
  407605:	and    BYTE PTR [edi+0x721b9a5c],bh
  40760b:	scas   al,BYTE PTR es:[edi]
  40760c:	xchg   ecx,eax
  40760d:	aaa    
  40760e:	jge    0x407666
  407610:	sub    eax,DWORD PTR [ebx+0x5c2766de]
  407616:	mov    dl,0xb8
  407618:	jnp    0x407604
  40761a:	ja     0x407632
  40761c:	sub    esi,edi
  40761e:	mov    al,0xee
  407620:	mov    bl,0x65
  407622:	out    dx,eax
  407623:	mov    dh,0x82
  407625:	xchg   DWORD PTR [edi-0x25],ebx
  407628:	ins    BYTE PTR es:[edi],dx
  407629:	mov    ah,0xbc
  40762b:	loop   0x4075bb
  40762d:	adc    al,0xb0
  40762f:	add    al,0xa0
  407631:	sbb    al,0x7c
  407633:	push   0x881ca0af
  407638:	mov    eax,DWORD PTR [edi+0x49f2a69f]
  40763e:	ficom  WORD PTR [ebp-0x6f]
  407641:	mov    esi,0xd60fcdcf
  407646:	and    al,al
  407648:	xor    eax,0x5a27cd1d
  40764d:	scas   al,BYTE PTR es:[edi]
  40764e:	push   ds
  40764f:	jae    0x4075e1
  407651:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407652:	jb     0x4075db
  407654:	dec    esi
  407655:	mov    al,0x4a
  407657:	and    BYTE PTR [edi+0x75],al
  40765a:	out    0x99,al
  40765c:	pushf  
  40765d:	jmp    0xa1745a7f
  407662:	popf   
  407663:	cld    
  407664:	in     eax,dx
  407665:	jl     0x4075f1
  407667:	sbb    edx,edx
  407669:	nop
  40766a:	add    ebx,DWORD PTR [edi]
  40766c:	pusha  
  40766d:	jo     0x407643
  40766f:	jg     0x407642
  407671:	retf   
  407672:	js     0x4076cb
  407674:	test   BYTE PTR [ebp-0x25dcc2df],bl
  40767a:	inc    esi
  40767b:	dec    edi
  40767c:	out    dx,al
  40767d:	stc    
  40767e:	fimul  WORD PTR [eax+0x2c]
  407681:	aad    0xc4
  407683:	in     eax,dx
  407684:	mov    ah,0xc4
  407686:	leave  
  407687:	sbb    cl,BYTE PTR [eax+0x37]
  40768a:	bound  edx,QWORD PTR [ebp-0x55]
  40768d:	jne    0x4076a3
  40768f:	gs call 0xa6a00947
  407695:	push   ecx
  407696:	mov    dl,0x50
  407698:	and    eax,0x615fd045
  40769d:	rol    DWORD PTR [eax+0x74075d2],1
  4076a3:	retf   0xb808
  4076a6:	and    ah,al
  4076a8:	pop    es
  4076a9:	aaa    
  4076aa:	fadd   QWORD PTR [edi-0x4b]
  4076ad:	(bad)  
  4076ae:	pop    ebp
  4076af:	out    dx,eax
  4076b0:	outs   dx,DWORD PTR ds:[esi]
  4076b1:	push   cs
  4076b2:	xor    eax,0xe73bb703
  4076b7:	sub    eax,0xe45401d
  4076bc:	adc    DWORD PTR [edi+0x23],eax
  4076bf:	std    
  4076c0:	or     BYTE PTR ds:0xac0385ac,0xd4
  4076c7:	les    eax,FWORD PTR ds:[esi+0x37ef6ab7]
  4076ce:	and    ah,ah
  4076d0:	setge  ah
  4076d3:	retf   
  4076d4:	lods   al,BYTE PTR ds:[esi]
  4076d5:	xchg   edi,eax
  4076d6:	xchg   DWORD PTR [esi-0x346f68bc],esp
  4076dc:	cmp    esp,ecx
  4076de:	inc    esi
  4076df:	jo     0x4076e8
  4076e1:	or     dh,BYTE PTR [edi-0x3407eb51]
  4076e7:	ror    DWORD PTR [esi+0x6e],1
  4076ea:	cli    
  4076eb:	mov    ?,WORD PTR ss:[ebx+0x32]
  4076ef:	inc    DWORD PTR [edx]
  4076f1:	test   DWORD PTR [ecx],eax
  4076f3:	cmp    bh,BYTE PTR [edx+0xd]
  4076f6:	out    dx,eax
  4076f7:	iret   
  4076f8:	clc    
  4076f9:	dec    ebx
  4076fa:	cld    
  4076fb:	mov    ds:0xd7f86afe,eax
  407700:	out    dx,eax
  407701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407702:	adc    al,BYTE PTR [esi-0x60]
  407705:	mov    es,edi
  407707:	adc    esi,DWORD PTR [edx]
  407709:	mov    ebx,0x107375aa
  40770e:	pop    esp
  40770f:	gs jbe 0x407782
  407712:	pop    ss
  407713:	jl     0x4076ae
  407715:	lods   eax,DWORD PTR ds:[esi]
  407716:	test   eax,0x2539d2a
  40771b:	fs gs clc 
  40771e:	mov    cl,0x40
  407720:	lahf   
  407721:	call   0x52b3387
  407726:	push   ebp
  407727:	pusha  
  407728:	das    
  407729:	std    
  40772a:	rcl    DWORD PTR [ebx+0x312dd1f3],cl
  407730:	cmp    al,0x9
  407732:	out    0xce,al
  407734:	(bad)  
  407735:	sbb    al,0xdc
  407737:	(bad)  
  407738:	pop    ebx
  407739:	mov    edi,0x850fe3b7
  40773e:	add    al,0xc8
  407740:	mov    ch,0xfa
  407742:	inc    DWORD PTR [edi+eiz*4]
  407745:	add    ah,0xd2
  407748:	cdq    
  407749:	stos   BYTE PTR es:[edi],al
  40774a:	inc    eax
  40774b:	mov    ds:0x1d47527f,eax
  407750:	mov    ch,0xd5
  407752:	jno    0x407721
  407754:	xchg   esi,eax
  407755:	in     al,dx
  407756:	clc    
  407757:	cmp    esp,DWORD PTR [eax+0x4134d4bb]
  40775d:	call   0x8aa21e31
  407762:	retf   0xadb4
  407765:	test   al,0xf9
  407767:	shl    BYTE PTR [edx-0x641b227a],1
  40776d:	pop    ecx
  40776e:	loope  0x407734
  407770:	into   
  407771:	int    0xe7
  407773:	mov    bh,0xf4
  407775:	aam    0x15
  407777:	mov    BYTE PTR [eax],0xf6
  40777a:	ror    WORD PTR [eax+0x75],cl
  40777e:	pop    esp
  40777f:	dec    ecx
  407780:	rol    BYTE PTR [edi+0x22],cl
  407783:	stc    
  407784:	retf   0x79e6
  407787:	addr16 je 0x4077c8
  40778a:	idiv   BYTE PTR [edx]
  40778c:	inc    ebp
  40778d:	(bad)  
  40778e:	mov    edx,0x23856cc8
  407793:	add    DWORD PTR [ebx+0x5c47d9e6],0x46
  40779a:	xchg   ebp,eax
  40779b:	mov    ecx,esp
  40779d:	mov    eax,0x82c50983
  4077a2:	out    0xd9,eax
  4077a4:	stc    
  4077a5:	lods   al,BYTE PTR ds:[esi]
  4077a6:	mov    ebx,0x18a2bd8
  4077ab:	cmp    eax,0x71a0a934
  4077b0:	add    BYTE PTR [edx],0x32
  4077b3:	(bad)  
  4077b4:	lods   al,BYTE PTR ds:[esi]
  4077b5:	scas   eax,DWORD PTR es:[edi]
  4077b6:	or     BYTE PTR [ebp+ebp*4+0x55],al
  4077ba:	xor    BYTE PTR [esi-0x2db2be1],al
  4077c0:	rcl    DWORD PTR [edi],0xad
  4077c3:	rcr    edx,cl
  4077c5:	xchg   BYTE PTR [ebx],bh
  4077c7:	loop   0x4077eb
  4077c9:	ds retf 
  4077cb:	cwde   
  4077cc:	xor    BYTE PTR [edi+edi*1-0x453e0b54],cl
  4077d3:	jb     0x4077ea
  4077d5:	inc    esp
  4077d6:	push   eax
  4077d7:	and    bl,BYTE PTR ds:0xf8d3e4d8
  4077dd:	mov    BYTE PTR [edi+0x68cd014c],ch
  4077e3:	cld    
  4077e4:	xchg   BYTE PTR [ecx],al
  4077e6:	mov    BYTE PTR [ecx],0x74
  4077e9:	mov    bl,0x3f
  4077eb:	and    esi,ebp
  4077ed:	mov    eax,fs
  4077ef:	ss xchg esi,eax
  4077f1:	xchg   esp,eax
  4077f2:	dec    edx
  4077f3:	inc    ecx
  4077f4:	leave  
  4077f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077f6:	fdivr  DWORD PTR [ebx-0x46657970]
  4077fc:	mov    es,WORD PTR [ebx-0x19]
  4077ff:	mov    dh,BYTE PTR [edi]
  407801:	test   BYTE PTR [esi-0x4],ch
  407804:	dec    edi
  407805:	or     al,0x28
  407807:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407808:	cs int3 
  40780a:	cmp    dh,BYTE PTR [edi-0x1e]
  40780d:	sub    BYTE PTR [eax],bh
  40780f:	sbb    ecx,DWORD PTR [eax-0x1e]
  407812:	pusha  
  407813:	retf   0xc48a
  407816:	mov    edi,0xbff664fc
  40781b:	sbb    DWORD PTR [edx+eiz*4],ebx
  40781e:	test   al,0x45
  407820:	je     0x4077b8
  407822:	jl     0x407881
  407824:	lock das 
  407826:	sbb    ch,BYTE PTR [edi+0x7b90c913]
  40782c:	dec    ebx
  40782d:	jo     0x4077c7
  40782f:	mov    edi,DWORD PTR [esi+0x13]
  407832:	pop    edx
  407833:	ffree  st(4)
  407835:	adc    BYTE PTR [esi],ah
  407837:	pop    edi
  407838:	cmp    al,BYTE PTR [edi+0x1fbd7b56]
  40783e:	inc    edi
  40783f:	push   0xffffffad
  407841:	push   ss
  407842:	out    0xd,al
  407844:	mov    fs,WORD PTR [edx+0x19]
  407847:	inc    edx
  407848:	jle    0x4077f2
  40784a:	scas   eax,DWORD PTR es:[edi]
  40784b:	mov    WORD PTR [ebp+0x9],es
  40784e:	cs sahf 
  407850:	mov    esp,0x5b449726
  407855:	inc    esi
  407856:	adc    eax,0x66e5ae48
  40785b:	pop    es
  40785c:	inc    edi
  40785d:	ds leave 
  40785f:	(bad)  
  407860:	cdq    
  407861:	ss js  0x4077e5
  407864:	jmp    0x4077eb
  407866:	add    BYTE PTR [ebp-0x185df618],bl
  40786c:	mov    ebp,0x44c4319d
  407871:	aas    
  407872:	lahf   
  407873:	fisubr DWORD PTR [ebx-0x61]
  407876:	mov    dh,0xd6
  407878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407879:	fwait
  40787a:	push   eax
  40787b:	into   
  40787c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40787d:	xor    eax,0xaf2473d
  407882:	inc    edx
  407883:	sbb    DWORD PTR [ebp+0x5aa710bf],0xffffff8e
  40788a:	push   0xdc5dd219
  40788f:	scas   al,BYTE PTR es:[edi]
  407890:	xchg   esp,eax
  407891:	inc    ebx
  407892:	inc    edx
  407893:	bound  edi,QWORD PTR [ebx+eax*8]
  407896:	lds    ebx,FWORD PTR [ecx+ebp*2]
  407899:	fld    TBYTE PTR [edi+0x6f]
  40789c:	xor    BYTE PTR [esi-0x43bd1425],bh
  4078a2:	bound  edi,QWORD PTR [eax+0x76]
  4078a5:	mov    esi,0x58bf3498
  4078aa:	pop    esi
  4078ab:	data16 jbe 0x4078d8
  4078ae:	adc    eax,0xd9e28185
  4078b3:	sar    BYTE PTR [edx+0x71ca39d8],1
  4078b9:	ret    0x53c0
  4078bc:	lahf   
  4078bd:	pop    ds
  4078be:	push   ebx
  4078bf:	sub    ch,BYTE PTR [ecx-0x2e]
  4078c2:	aaa    
  4078c3:	push   esi
  4078c4:	sub    bh,al
  4078c6:	lea    ebx,[edi]
  4078c8:	push   eax
  4078c9:	mov    DWORD PTR [esi],0x4dfd62a4
  4078cf:	leave  
  4078d0:	sbb    DWORD PTR [eax+0x1f38b476],eax
  4078d6:	xchg   DWORD PTR [ebp+0x5],edx
  4078d9:	sar    BYTE PTR [edi+0x53d89b72],0xab
  4078e0:	jb     0x407914
  4078e2:	jo     0x407878
  4078e4:	das    
  4078e5:	sbb    al,0xfa
  4078e7:	outs   dx,BYTE PTR ds:[esi]
  4078e8:	xlat   BYTE PTR ds:[ebx]
  4078e9:	mov    bl,0x86
  4078eb:	push   edx
  4078ec:	xchg   edx,eax
  4078ed:	loope  0x4078e8
  4078ef:	sbb    al,0xd1
  4078f1:	loop   0x4078be
  4078f3:	sahf   
  4078f4:	(bad)  
  4078f5:	mov    ecx,0x98fd49a5
  4078fa:	loop   0x4078c9
  4078fc:	repnz and bh,ch
  4078ff:	ret    0x6da6
  407902:	rol    BYTE PTR [esi+0x6322583a],1
  407908:	std    
  407909:	xor    al,0xf7
  40790b:	or     DWORD PTR [eax+0x37],0x3b94e30f
  407912:	mov    ah,0x95
  407914:	dec    edi
  407915:	xchg   BYTE PTR [edx+0x7734e6f5],dh
  40791b:	rol    DWORD PTR ds:0xa63854c,cl
  407921:	fisttp WORD PTR [edi]
  407923:	dec    ebx
  407924:	and    BYTE PTR [ebx+0x65],cl
  407927:	dec    edi
  407928:	dec    ecx
  407929:	es int3 
  40792b:	pop    ss
  40792c:	adc    BYTE PTR [esi],bh
  40792e:	jnp    0x407968
  407930:	mov    ecx,DWORD PTR [eax-0x5c]
  407933:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407934:	xor    eax,0xd39002dc
  407939:	fild   WORD PTR [eax]
  40793b:	sub    al,ah
  40793d:	fmul   DWORD PTR [edi+0x3c]
  407940:	cmp    ah,bh
  407942:	dec    eax
  407943:	out    0xaa,al
  407945:	mov    esi,DWORD PTR [ebx]
  407947:	push   edx
  407948:	sbb    ebx,DWORD PTR [ebx+0x6]
  40794b:	(bad)  
  40794c:	hlt    
  40794d:	in     al,dx
  40794e:	mov    ebx,0xf3bad879
  407953:	inc    edx
  407954:	sub    eax,0xd4686a99
  407959:	std    
  40795a:	and    BYTE PTR [eax+0x430c4b64],ah
  407960:	dec    esi
  407961:	sub    DWORD PTR [ebx+0x4474f65e],ecx
  407967:	sub    esp,DWORD PTR [ebx]
  407969:	sub    al,0x70
  40796b:	fcmovnbe st,st(4)
  40796d:	cmp    al,0xf6
  40796f:	xchg   edx,eax
  407970:	mov    al,0x93
  407972:	fdiv   QWORD PTR [esi]
  407974:	daa    
  407975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407976:	hlt    
  407977:	mov    ch,0xaf
  407979:	xor    al,0x67
  40797b:	ss push ebx
  40797d:	pushf  
  40797e:	dec    ebp
  40797f:	mov    ch,0xcc
  407981:	jmp    0x4079c3
  407983:	jp     0x40790d
  407985:	mov    bh,0xfc
  407987:	jmp    0xe3ea:0x563789d
  40798e:	out    dx,al
  40798f:	mov    ch,0xc8
  407991:	xchg   edi,eax
  407992:	fwait
  407993:	les    esp,FWORD PTR [edi-0xc]
  407996:	lods   eax,DWORD PTR ds:[esi]
  407997:	cmp    al,0x81
  407999:	push   ebp
  40799a:	or     dh,BYTE PTR [edi-0x2269589e]
  4079a0:	push   ebx
  4079a1:	pop    edx
  4079a2:	adc    DWORD PTR [ecx],ecx
  4079a4:	in     al,dx
  4079a5:	xlat   BYTE PTR ds:[ebx]
  4079a6:	sbb    edi,DWORD PTR [ebp+0x4a8105b8]
  4079ac:	fild   WORD PTR [eax]
  4079ae:	mov    edi,0x46f6ff28
  4079b3:	cmp    DWORD PTR [edi+0x3d39fb2b],esi
  4079b9:	sahf   
  4079ba:	arpl   WORD PTR [eax],sp
  4079bc:	inc    esp
  4079bd:	push   edx
  4079be:	ror    BYTE PTR ds:0xf23b6322,0x2c
  4079c5:	les    edi,FWORD PTR [edi]
  4079c7:	fst    DWORD PTR [eax+0x7b335b50]
  4079cd:	dec    ecx
  4079ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079cf:	gs je  0x407a0a
  4079d2:	adc    BYTE PTR [eax],0xdb
  4079d5:	(bad)
  4079d8:	and    BYTE PTR [ebp-0x49],ah
  4079db:	imul   ecx,DWORD PTR [eax],0xaa682cc6
  4079e1:	jmp    0x40798f
  4079e3:	push   esp
  4079e4:	or     eax,ebp
  4079e6:	push   ecx
  4079e7:	dec    edi
  4079e8:	call   0x9412:0x997a8ad5
  4079ef:	jb     0x4079c2
  4079f1:	sahf   
  4079f2:	pop    ds
  4079f3:	repnz xchg edx,eax
  4079f5:	or     dl,BYTE PTR [ebx-0x1e]
  4079f8:	aam    0x2b
  4079fa:	lahf   
  4079fb:	mov    bl,0x6f
  4079fd:	mov    ah,0x16
  4079ff:	dec    esp
  407a00:	nop
  407a01:	scas   eax,DWORD PTR es:[edi]
  407a02:	iret   
  407a03:	jno    0x407a4b
  407a05:	sub    BYTE PTR [esi],ch
  407a07:	push   cs
  407a08:	bound  edi,QWORD PTR [ebp+0x41]
  407a0b:	sti    
  407a0c:	pushf  
  407a0d:	sbb    eax,ebp
  407a0f:	dec    esp
  407a10:	pop    ss
  407a11:	and    eax,0xf4d0b3cb
  407a16:	mov    bl,0x92
  407a18:	jb     0x4079fd
  407a1a:	mov    dh,0x98
  407a1c:	xor    dh,0xde
  407a1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a20:	add    DWORD PTR [eax+0xb],0xfcb76e68
  407a27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a28:	je     0x407a49
  407a2a:	pushf  
  407a2b:	mov    ebx,0x99930cb5
  407a30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a31:	retf   
  407a32:	mov    ecx,0x70c2ab5e
  407a37:	shl    DWORD PTR [edx-0x14cf91fd],1
  407a3d:	cmp    eax,0x586acb15
  407a42:	inc    esp
  407a43:	in     al,dx
  407a44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a45:	push   0xe843cbf3
  407a4a:	imul   ecx,DWORD PTR [edx-0x1c],0x6d1d6aac
  407a51:	and    bh,BYTE PTR [ecx+0x32]
  407a54:	sbb    esi,DWORD PTR [ecx-0x4d0aa220]
  407a5a:	std    
  407a5b:	pop    esi
  407a5c:	add    DWORD PTR [edi-0x2e],0x7c
  407a60:	rcr    cl,0xc8
  407a63:	test   BYTE PTR [ecx],cl
  407a65:	mov    ds:0x7018df0,al
  407a6a:	mov    ds,WORD PTR [edx+0x64]
  407a6d:	fs push es
  407a6f:	pop    es
  407a70:	outs   dx,DWORD PTR ds:[esi]
  407a71:	test   al,0x67
  407a73:	mov    ss,WORD PTR [ebx]
  407a75:	adc    ebp,eax
  407a77:	mov    edi,ecx
  407a79:	(bad)  
  407a7a:	div    esp
  407a7c:	sbb    DWORD PTR [ebx-0x3f82ece8],ecx
  407a82:	fbstp  TBYTE PTR [edi]
  407a84:	retf   0xfcac
  407a87:	xor    al,0xed
  407a89:	inc    edx
  407a8a:	adc    al,0x66
  407a8c:	in     eax,0xaf
  407a8e:	in     eax,0x32
  407a90:	mov    eax,ds:0x7501621c
  407a95:	mov    eax,0xe41e3cc2
  407a9a:	das    
  407a9b:	out    0xaa,eax
  407a9d:	xchg   esi,eax
  407a9e:	test   DWORD PTR [esp+edi*2],eax
  407aa1:	nop
  407aa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407aa3:	pusha  
  407aa4:	add    DWORD PTR cs:[ebx],ecx
  407aa7:	stos   BYTE PTR es:[edi],al
  407aa8:	(bad)
  407aab:	call   FWORD PTR [edi]
  407aad:	xchg   eax,edx
  407aaf:	mov    ah,0x57
  407ab1:	sub    eax,0xa89bb7f3
  407ab7:	repz frstor [ebp+ebx*1+0x50]
  407abc:	imul   DWORD PTR [eax+0x7c]
  407abf:	outs   dx,BYTE PTR ds:[esi]
  407ac0:	and    eax,0xe06934a9
  407ac5:	jl     0x407a89
  407ac7:	fisttp WORD PTR [ebx-0x176219d]
  407acd:	xchg   esi,eax
  407ace:	fstp   QWORD PTR [ebx]
  407ad0:	jl     0x407b2a
  407ad2:	loopne 0x407a74
  407ad4:	push   0x27
  407ad6:	clc    
  407ad7:	mov    DWORD PTR [eax],ebx
  407ad9:	mov    BYTE PTR [ebp-0x1a0fdc9e],ah
  407adf:	lods   eax,DWORD PTR ds:[esi]
  407ae0:	jne    0x407b55
  407ae2:	js     0x407a86
  407ae4:	daa    
  407ae5:	or     ecx,DWORD PTR [ecx+0x11]
  407ae8:	and    al,0x6d
  407aea:	sbb    eax,0x23f60363
  407aef:	inc    esi
  407af0:	adc    edi,DWORD PTR [edi+0x660c48c8]
  407af6:	cwde   
  407af7:	out    dx,eax
  407af8:	sahf   
  407af9:	or     ch,BYTE PTR [ecx+0x4b0b0ad3]
  407aff:	test   eax,0x7609cf22
  407b04:	pop    ecx
  407b05:	ret    
  407b06:	jae    0x407aa3
  407b08:	(bad)
  407b0c:	cwde   
  407b0d:	in     al,dx
  407b0e:	ret    
  407b0f:	jl     0x407adf
  407b11:	bound  esp,QWORD PTR [edi]
  407b13:	cs pop ebp
  407b15:	inc    edi
  407b16:	jecxz  0x407ad8
  407b18:	push   ss
  407b19:	stc    
  407b1a:	push   0xfffffff8
  407b1c:	adc    esp,DWORD PTR [esi]
  407b1e:	xchg   dh,bh
  407b20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b21:	cli    
  407b22:	scas   eax,DWORD PTR es:[edi]
  407b23:	inc    edi
  407b24:	inc    ebp
  407b25:	xchg   ebx,eax
  407b26:	sub    cx,WORD PTR [eax-0x29]
  407b2a:	cmp    ch,BYTE PTR [ecx+0x63b0b371]
  407b30:	mov    dh,0xd6
  407b32:	sbb    ebx,ebx
  407b34:	bound  ebp,QWORD PTR [ebp-0x7d7517de]
  407b3a:	aaa    
  407b3b:	sti    
  407b3c:	addr16 sbb eax,0xbb66e7c2
  407b42:	pop    edx
  407b43:	mov    ecx,0x9074c810
  407b48:	mov    eax,ds:0x8b04d29a
  407b4d:	outs   dx,DWORD PTR ds:[esi]
  407b4e:	jmp    0x8583:0xf8fc65ea
  407b55:	add    al,BYTE PTR [esi]
  407b57:	xor    BYTE PTR [edi-0x17],0xc3
  407b5b:	dec    edi
  407b5c:	fsubr  QWORD PTR [ecx]
  407b5e:	and    dl,bh
  407b60:	lods   al,BYTE PTR ds:[esi]
  407b61:	ss push edi
  407b63:	push   cs
  407b64:	add    esi,DWORD PTR [esi]
  407b66:	ins    DWORD PTR es:[edi],dx
  407b67:	sbb    DWORD PTR [edi-0x18],0xffffff8c
  407b6b:	inc    ebx
  407b6c:	adc    bl,ch
  407b6e:	pop    edx
  407b6f:	cmc    
  407b70:	pop    ds
  407b71:	loopne 0x407b9d
  407b73:	mov    WORD PTR [edi+0x39af07d],?
  407b79:	or     eax,0xfce514cc
  407b7e:	mov    edx,0x84cce3f
  407b83:	jnp    0x407b9a
  407b85:	pop    ecx
  407b86:	xchg   esi,eax
  407b87:	push   edx
  407b88:	ins    DWORD PTR es:[edi],dx
  407b89:	daa    
  407b8a:	ret    0xe647
  407b8d:	push   ebx
  407b8e:	ret    0xa778
  407b91:	stc    
  407b92:	pop    ds
  407b93:	sahf   
  407b94:	push   eax
  407b95:	and    al,0xd0
  407b97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b98:	cmp    bh,BYTE PTR [eax-0x3e]
  407b9b:	mov    ah,0x66
  407b9d:	add    ebp,0xffffffd3
  407ba0:	dec    ebx
  407ba1:	inc    esi
  407ba2:	push   ss
  407ba3:	in     al,dx
  407ba4:	lock push DWORD PTR [ebx-0xf]
  407ba8:	add    BYTE PTR ds:0x3fb9806a,cl
  407bae:	pop    esi
  407baf:	and    edx,DWORD PTR [eax]
  407bb1:	jmp    0x773f46ec
  407bb6:	cdq    
  407bb7:	inc    edx
  407bb8:	mov    ds:0x49795924,eax
  407bbd:	adc    eax,DWORD PTR [edi-0x75]
  407bc0:	inc    edi
  407bc1:	(bad)  [edx+edx*1]
  407bc4:	int3   
  407bc5:	icebp  
  407bc6:	in     al,dx
  407bc7:	in     eax,0x7c
  407bc9:	adc    DWORD PTR ds:0xa7cb5623,ebx
  407bcf:	repnz pop eax
  407bd1:	test   dh,ch
  407bd3:	out    0xa5,al
  407bd5:	sub    bl,BYTE PTR [ecx-0x4a640ef2]
  407bdb:	or     edi,DWORD PTR [ecx+0x7762c9d9]
  407be1:	dec    esp
  407be2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407be3:	loop   0x407bea
  407be5:	les    ebp,FWORD PTR [edx]
  407be7:	imul   edx,DWORD PTR ds:0x9de8cffe,0x73dcaf16
  407bf1:	cmp    eax,0x37cb5766
  407bf6:	add    BYTE PTR [eax],ch
  407bf8:	pop    ss
  407bf9:	lods   eax,DWORD PTR ds:[esi]
  407bfa:	xor    DWORD PTR [edx+0x25a86d26],edi
  407c00:	shl    BYTE PTR [edi+0x51],cl
  407c03:	inc    esi
  407c04:	xchg   edi,eax
  407c05:	inc    esp
  407c06:	push   0x467feade
  407c0b:	in     al,0xd4
  407c0d:	stc    
  407c0e:	mov    ds:0xc00eaf39,eax
  407c13:	jns    0x407c34
  407c15:	jbe    0x407bc1
  407c17:	fs mov dh,0x7d
  407c1a:	inc    esp
  407c1b:	push   esi
  407c1c:	out    dx,al
  407c1d:	test   DWORD PTR ds:0x8156749c,edi
  407c23:	enter  0x3c49,0x6c
  407c27:	ret    0x5980
  407c2a:	ror    DWORD PTR [eax+0x7],cl
  407c2d:	add    eax,0xf470cfe3
  407c32:	pusha  
  407c33:	cdq    
  407c34:	adc    al,0x31
  407c36:	fcomp  st(3)
  407c38:	pusha  
  407c39:	xchg   edi,eax
  407c3a:	inc    esi
  407c3b:	shl    BYTE PTR [esi],cl
  407c3d:	repnz iret 
  407c3f:	jle    0x407bf0
  407c41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c42:	lock and DWORD PTR [ebx-0x5f],esi
  407c46:	cmp    BYTE PTR [esi+0x66283228],dh
  407c4c:	xor    edx,0x72
  407c4f:	dec    edx
  407c50:	or     cl,BYTE PTR [edx-0x2dc68917]
  407c56:	mov    ch,0x9d
  407c58:	imul   esi,DWORD PTR [ecx-0x6089155f],0xfb11f24b
  407c62:	hlt    
  407c63:	ds mov eax,0x79a94bff
  407c69:	mov    bh,0x66
  407c6b:	sbb    al,0xf1
  407c6d:	out    0xc6,al
  407c6f:	cmp    BYTE PTR [ebp+0x69],ah
  407c72:	in     al,dx
  407c73:	hlt    
  407c74:	rcl    BYTE PTR [esi-0x702f900b],cl
  407c7a:	mov    esp,0x15af5836
  407c7f:	cmp    BYTE PTR [esi],dl
  407c81:	shl    DWORD PTR [ebp+0x6ca3643],1
  407c87:	push   es
  407c88:	ds (bad) 
  407c8a:	jnp    0x407c26
  407c8c:	popf   
  407c8d:	add    al,BYTE PTR [eax+esi*4]
  407c90:	cs daa 
  407c92:	in     al,0x53
  407c94:	push   ebx
  407c95:	and    edi,esi
  407c97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c98:	jg     0x407cdd
  407c9a:	and    DWORD PTR [ebx-0x4a],ecx
  407c9d:	adc    eax,0x6a979e38
  407ca2:	jp     0x407c65
  407ca4:	imul   ecx,DWORD PTR ds:0x34e52e36,0x2d917617
  407cae:	mov    al,ds:0x9d103bdc
  407cb3:	ja     0x407c69
  407cb5:	sub    dl,BYTE PTR [ebx+0x646031a1]
  407cbb:	add    esp,eax
  407cbd:	je     0x407cc2
  407cbf:	jmp    0x4de8cd5f
  407cc4:	xchg   DWORD PTR [edi-0x16],eax
  407cc7:	jnp    0x407ce2
  407cc9:	test   eax,0xd67b6211
  407cce:	xchg   edx,eax
  407ccf:	and    esi,esp
  407cd1:	xchg   ebx,eax
  407cd2:	dec    eax
  407cd3:	dec    esp
  407cd4:	mov    edx,0xf44ea09
  407cd9:	mov    ebp,0xdd5af64e
  407cde:	xchg   DWORD PTR [esp+eiz*8-0x2d],edx
  407ce2:	fisttp QWORD PTR [edi]
  407ce4:	jmp    0x1bcb:0xf8418fb1
  407ceb:	jne    0x407cef
  407ced:	icebp  
  407cee:	sbb    al,0xf
  407cf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cf1:	mov    edi,0xb3a3d57f
  407cf6:	pop    eax
  407cf7:	loope  0x407c92
  407cf9:	int3   
  407cfa:	sub    esp,DWORD PTR [edi]
  407cfc:	mov    ebp,0x55df94d1
  407d01:	(bad)  
  407d02:	fs mov esi,0x89d64030
  407d08:	and    eax,0x48c6365e
  407d0d:	nop
  407d0e:	int3   
  407d0f:	xchg   DWORD PTR [eax-0x3f73c0e8],esp
  407d15:	add    esi,DWORD PTR [ecx+0x2b]
  407d18:	and    al,0xcb
  407d1a:	sbb    al,0xaa
  407d1c:	mov    dh,0x29
  407d1e:	lea    ecx,[ebx-0xa65612e]
  407d24:	mov    esp,0x3f41895a
  407d29:	push   es
  407d2a:	jae    0x407cc2
  407d2c:	nop
  407d2d:	add    ch,bl
  407d2f:	shr    DWORD PTR [ecx-0x33],0xd7
  407d33:	imul   ebx,DWORD PTR [ecx],0xa8d2a2c2
  407d39:	ror    DWORD PTR [edi+ebx*8-0x6d],0x4b
  407d3e:	sub    cl,BYTE PTR [edx-0x4ace39da]
  407d44:	sbb    DWORD PTR [ebp-0x5a773afc],edi
  407d4a:	xlat   BYTE PTR ds:[ebx]
  407d4b:	mov    ebp,0x30ec8da0
  407d50:	push   0x71
  407d52:	and    eax,0xa0889954
  407d57:	test   eax,0xfa662601
  407d5c:	and    dl,BYTE PTR [eax]
  407d5e:	es jmp 0x407ceb
  407d61:	js     0x407db8
  407d63:	mov    edi,0xbad4e83
  407d68:	dec    esp
  407d69:	sahf   
  407d6a:	inc    ebx
  407d6b:	pop    eax
  407d6c:	dec    ebp
  407d6d:	sub    al,0xae
  407d6f:	jae    0x407dce
  407d71:	test   BYTE PTR [ecx],0xbe
  407d74:	fisubr WORD PTR [edi*1-0x23d91164]
  407d7b:	jae    0x407d3b
  407d7d:	pop    edi
  407d7e:	add    dh,dh
  407d80:	mov    BYTE PTR [esi],bh
  407d82:	ret    0x29bc
  407d85:	jns    0x407d70
  407d87:	jns    0x407d3b
  407d89:	dec    ecx
  407d8a:	loope  0x407d7b
  407d8c:	loope  0x407d27
  407d8e:	fnsave [esi]
  407d90:	jb     0x407d6f
  407d92:	add    cl,ch
  407d94:	mov    ebp,esi
  407d96:	test   al,0xf5
  407d98:	push   es
  407d99:	cmp    eax,0x7b60db5c
  407d9e:	pop    es
  407d9f:	test   ebx,0x66e3cc7f
  407da5:	dec    esp
  407da6:	mov    ch,0x9e
  407da8:	mov    ebp,0x8237db46
  407dad:	sbb    edi,ecx
  407daf:	cmc    
  407db0:	es adc al,0x71
  407db3:	call   DWORD PTR cs:[ecx+edx*4]
  407db7:	mov    eax,ds:0x190ba130
  407dbc:	adc    al,0xf9
  407dbe:	(bad)  
  407dc0:	sub    DWORD PTR [edi],edi
  407dc2:	inc    esp
  407dc3:	sbb    al,0x32
  407dc5:	jnp    0x407dc7
  407dc7:	test   BYTE PTR ds:0xe23c7ca3,bh
  407dcd:	(bad)  
  407dce:	js     0x407d71
  407dd0:	sahf   
  407dd1:	retf   
  407dd2:	call   FWORD PTR [eax-0x66]
  407dd5:	lds    eax,FWORD PTR [edx]
  407dd7:	or     al,0x37
  407dd9:	mov    dl,0x7
  407ddb:	int3   
  407ddc:	cdq    
  407ddd:	cmc    
  407dde:	mov    eax,ds:0x2a1512b3
  407de3:	hlt    
  407de4:	fs push ss
  407de6:	adc    al,0x96
  407de8:	pop    edx
  407de9:	add    ecx,ebx
  407deb:	fisttp QWORD PTR ds:0xe23777eb
  407df1:	jmp    0x569c3d6f
  407df6:	cmpxchg8b QWORD PTR [edx+0x70c5df97]
  407dfd:	mov    al,ds:0x77014965
  407e02:	adc    BYTE PTR [edi],dl
  407e04:	or     dl,BYTE PTR [ebp-0x52305dd6]
  407e0a:	add    bh,BYTE PTR [ebx-0x9398f66]
  407e10:	mov    dl,bl
  407e12:	mov    al,ds:0x82a069cc
  407e17:	retf   0x81a
  407e1a:	dec    eax
  407e1b:	test   BYTE PTR [esi-0x1009bd60],0x2f
  407e22:	mov    bh,BYTE PTR [edi]
  407e24:	jns    0x407e74
  407e26:	cmp    DWORD PTR [ecx-0x153fa153],esi
  407e2c:	aam    0xb3
  407e2e:	fisub  WORD PTR fs:[ecx+0x7c0a8fc1]
  407e35:	in     eax,dx
  407e36:	adc    eax,0xd899f8fe
  407e3b:	dec    eax
  407e3c:	push   eax
  407e3d:	jbe    0x407e95
  407e3f:	adc    eax,0x3b7b8552
  407e44:	sahf   
  407e45:	cmp    ebx,ecx
  407e47:	adc    al,0xb2
  407e49:	popf   
  407e4a:	cmp    DWORD PTR [edx],esp
  407e4c:	sub    DWORD PTR [esi+0x32],edi
  407e4f:	add    eax,0xf52f1b11
  407e54:	xor    al,0x3d
  407e56:	cdq    
  407e57:	(bad)  
  407e59:	xchg   ebx,eax
  407e5a:	pop    ebp
  407e5b:	retf   
  407e5c:	fdivr  QWORD PTR [ebx]
  407e5e:	mov    ch,0x21
  407e60:	inc    ebp
  407e61:	stos   BYTE PTR es:[edi],al
  407e62:	inc    edi
  407e63:	dec    ecx
  407e64:	mov    edi,0x7044ce47
  407e69:	aas    
  407e6a:	out    0x4b,eax
  407e6c:	inc    edi
  407e6d:	xor    DWORD PTR [edi-0x766c90e2],esi
  407e73:	sar    BYTE PTR [ebp-0xe],cl
  407e76:	lods   al,BYTE PTR ds:[esi]
  407e77:	xchg   ecx,eax
  407e78:	sbb    DWORD PTR [edx+0x2dac94fc],ecx
  407e7e:	pop    ecx
  407e7f:	aas    
  407e80:	int    0xa1
  407e82:	leave  
  407e83:	fidiv  WORD PTR gs:[edx+0x4d]
  407e87:	mov    ?,WORD PTR [edx+esi*8]
  407e8a:	cmp    eax,0xe98c8405
  407e8f:	cmc    
  407e90:	add    BYTE PTR [ebx-0x559a2052],dl
  407e96:	mov    ch,0x64
  407e98:	(bad)  
  407e99:	loop   0x407e48
  407e9b:	outs   dx,DWORD PTR ds:[esi]
  407e9c:	dec    eax
  407e9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e9e:	daa    
  407e9f:	rcr    BYTE PTR [ebp+0x3861fe2],cl
  407ea5:	inc    ebx
  407ea6:	xchg   BYTE PTR [esi+0x27],bh
  407ea9:	rol    DWORD PTR [edi],1
  407eab:	ret    
  407eac:	jp     0x407ebc
  407eae:	inc    ecx
  407eaf:	push   esi
  407eb0:	mov    ebp,0x4cb889f8
  407eb5:	into   
  407eb6:	hlt    
  407eb7:	or     cl,bh
  407eb9:	aam    0xb
  407ebb:	add    DWORD PTR [eax-0xa],esp
  407ebe:	xchg   esi,eax
  407ebf:	out    0xa9,al
  407ec1:	jmp    0xaebbda40
  407ec6:	push   eax
  407ec7:	adc    DWORD PTR [ebx+0x5c],0xffffffa5
  407ecb:	pusha  
  407ecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ecd:	int3   
  407ece:	test   DWORD PTR [ebp-0x79b9f2dd],ecx
  407ed4:	das    
  407ed5:	mov    BYTE PTR [ecx-0x27],dl
  407ed8:	ret    
  407ed9:	lock cmp BYTE PTR [edx+0x1e0c573b],dh
  407ee0:	int3   
  407ee1:	sbb    ch,BYTE PTR [ebp+0x61bd1591]
  407ee7:	or     BYTE PTR [ebp-0x619fcdf5],0xd2
  407eee:	push   ebp
  407eef:	pop    es
  407ef0:	mov    ds:0xc2e30d9e,eax
  407ef5:	cdq    
  407ef6:	fidivr DWORD PTR [eax+0x31]
  407ef9:	test   al,0x65
  407efb:	jg     0x407ecd
  407efd:	inc    esp
  407efe:	in     eax,0xd7
  407f00:	pop    ebp
  407f01:	and    eax,0xee86f7d7
  407f06:	repnz adc BYTE PTR [edi],ah
  407f09:	cmp    BYTE PTR [edi],ah
  407f0b:	fadd   st,st(4)
  407f0d:	pop    eax
  407f0f:	mov    esp,0x46e6d39a
  407f14:	in     eax,0xbd
  407f16:	sbb    ah,BYTE PTR [ecx+0x40]
  407f19:	(bad)  
  407f1a:	or     DWORD PTR [ecx],eax
  407f1c:	xchg   BYTE PTR [edx+edx*4+0x0],ah
  407f20:	(bad)  
  407f21:	cmp    al,0xfa
  407f23:	and    DWORD PTR [ebx],0xa51eb752
  407f29:	mov    bh,0x35
  407f2b:	pop    ecx
  407f2c:	add    DWORD PTR [esi],esp
  407f2e:	mov    ebx,0x84d5edaa
  407f33:	in     al,0xe1
  407f35:	pop    esi
  407f36:	push   ds
  407f37:	lock dec ebp
  407f39:	mov    ds:0x4b06b81,al
  407f3e:	inc    esp
  407f3f:	lock mov bl,ch
  407f42:	mov    ds:0x2206738a,eax
  407f47:	inc    ebp
  407f48:	mov    edx,0x2611d965
  407f4d:	dec    edx
  407f4e:	pop    esp
  407f4f:	jne    0x407ef9
  407f51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f52:	stc    
  407f53:	mov    ebp,0x579a6418
  407f58:	push   0x31
  407f5a:	mov    eax,0x50dc8d87
  407f5f:	mov    bh,0x8
  407f61:	xor    eax,0x6963260d
  407f66:	mov    ds,WORD PTR [eax+ebx*2]
  407f69:	fmul   DWORD PTR [eax+0x46]
  407f6c:	mov    fs,WORD PTR [ebp-0x21]
  407f6f:	iret   
  407f70:	mov    ds:0x9afe8dd6,eax
  407f75:	jae    0x407f3b
  407f77:	cmp    eax,0xa61cde3b
  407f7c:	pop    edx
  407f7d:	(bad)  
  407f7e:	loope  0x407f7c
  407f80:	xchg   edi,eax
  407f81:	pop    ds
  407f82:	ret    0xb1ba
  407f85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f86:	pushf  
  407f87:	pop    ds
  407f88:	and    DWORD PTR [esi],esi
  407f8a:	jl     0x407f51
  407f8c:	pop    eax
  407f8d:	jo     0x407f1c
  407f8f:	jns    0x407fce
  407f91:	adc    esp,esp
  407f93:	mov    ch,0xf4
  407f95:	sub    BYTE PTR [esi+esi*4-0x5d89ee2a],ch
  407f9c:	mov    ebp,DWORD PTR [ebx-0x7c1d28e1]
  407fa2:	mov    WORD PTR [ecx],ss
  407fa4:	xlat   BYTE PTR ds:[ebx]
  407fa5:	je     0x40801e
  407fa7:	cmp    esi,0x68a8bffd
  407fad:	retf   0xa70d
  407fb0:	mov    esi,0x4cc9ec4
  407fb5:	aam    0xda
  407fb7:	mov    ds:0xd42daffe,eax
  407fbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fbd:	inc    edi
  407fbe:	inc    eax
  407fbf:	push   0x5de48a73
  407fc4:	jle    0x408005
  407fc6:	pop    ebx
  407fc7:	jle    0x408034
  407fc9:	out    0x9,al
  407fcb:	jp     0x407ffd
  407fcd:	mov    BYTE PTR [edi],bl
  407fcf:	cmp    al,0xb
  407fd1:	sub    al,ch
  407fd3:	mov    ds:0xecfa1de3,eax
  407fd8:	jp     0x407fef
  407fda:	mov    ds:0xd71a3817,eax
  407fdf:	push   0x35
  407fe1:	mov    bh,0x9a
  407fe3:	pop    edi
  407fe4:	mov    al,BYTE PTR [eax]
  407fe6:	mov    edi,0xae25b2ba
  407feb:	sub    eax,0x652408ba
  407ff0:	and    DWORD PTR [edx-0x6442d327],0x60b0bf76
  407ffa:	sbb    eax,0xe14581f3
  407fff:	add    eax,0x1542b58d
  408004:	pop    ss
  408005:	scas   al,BYTE PTR es:[edi]
  408006:	popa   
  408007:	and    cl,dl
  408009:	push   edx
  40800a:	test   DWORD PTR [edx+0x25b94c0f],0xd3ecd3c4
  408014:	repz in al,dx
  408016:	popf   
  408017:	or     dl,BYTE PTR [esi-0x89103c8]
  40801d:	mov    bl,0x72
  40801f:	cmp    ah,BYTE PTR ds:0x4ce48e48
  408025:	xchg   ebp,eax
  408026:	es out 0x58,al
  408029:	lods   eax,DWORD PTR ds:[esi]
  40802a:	add    DWORD PTR [esi-0x31],edx
  40802d:	jmp    0x4080aa
  40802f:	sti    
  408030:	add    ebx,esp
  408032:	and    al,0x65
  408034:	mov    ebx,0x6d5e5ad3
  408039:	sub    DWORD PTR [edi],0x26b6b2d6
  40803f:	inc    esi
  408040:	pop    edi
  408041:	xlat   BYTE PTR ds:[ebx]
  408042:	rcr    BYTE PTR [eax],0xa0
  408045:	add    eax,0xf45a4d74
  40804a:	and    BYTE PTR [ebx-0x4a],bl
  40804d:	lds    edx,FWORD PTR [esi+esi*8]
  408050:	test   DWORD PTR [ebx+ecx*8+0x20],eax
  408054:	jg     0x407fef
  408056:	and    eax,0xd7d33e14
  40805b:	jl     0x408075
  40805d:	mov    esi,0x666d28bf
  408062:	jbe    0x408081
  408064:	int    0xd0
  408066:	add    DWORD PTR [eax+0x3fc2bc55],ebx
  40806c:	popa   
  40806d:	and    eax,ebp
  40806f:	cmp    dh,ah
  408071:	cwde   
  408072:	outs   dx,DWORD PTR ds:[esi]
  408073:	ds xchg esi,eax
  408075:	and    bl,0x19
  408078:	popa   
  408079:	jo     0x408069
  40807b:	xchg   edx,eax
  40807c:	mov    eax,0x9a080baa
  408081:	add    ebp,edi
  408083:	inc    esi
  408084:	jl     0x408065
  408086:	test   al,0x99
  408088:	or     al,0x15
  40808a:	cs cmp eax,0x49fc7556
  408090:	cmc    
  408091:	mov    DWORD PTR [ebx],ebp
  408093:	push   ebp
  408094:	xchg   esp,eax
  408095:	and    bh,dh
  408097:	fwait
  408098:	sub    al,0x90
  40809a:	fst    QWORD PTR [ebx+0x95522e7]
  4080a0:	push   edi
  4080a1:	iret   
  4080a2:	(bad)  
  4080a3:	in     eax,0x1a
  4080a5:	cmp    bl,BYTE PTR [edx+0x45ec365b]
  4080ab:	fwait
  4080ac:	push   es
  4080ad:	sbb    bh,BYTE PTR [esi-0x74b69c12]
  4080b3:	iret   
  4080b4:	push   ebx
  4080b5:	popa   
  4080b6:	push   cs
  4080b7:	rol    bl,1
  4080b9:	mov    ds:0x1193c1bc,al
  4080be:	out    0x8a,al
  4080c0:	rol    BYTE PTR [edx+0x73],cl
  4080c3:	mov    ebp,0x24fc33f6
  4080c8:	loopne 0x4080e5
  4080ca:	cdq    
  4080cb:	mov    al,0x58
  4080cd:	shr    BYTE PTR [edi-0x637e4f5],0xc
  4080d4:	aam    0x1b
  4080d6:	jne    0x4080bb
  4080d8:	adc    eax,0x6bebf8f0
  4080dd:	add    BYTE PTR [ecx-0x76a60f4f],dl
  4080e3:	xchg   DWORD PTR [esi+0x61f322b],eax
  4080e9:	push   es
  4080ea:	cmp    al,0x51
  4080ec:	jnp    0x40808f
  4080ee:	xor    dh,BYTE PTR [esi+ebx*2-0x37d88d48]
  4080f5:	fldl2t 
  4080f7:	push   0x3d
  4080f9:	pop    ss
  4080fa:	dec    ecx
  4080fb:	ret    0x9259
  4080fe:	and    eax,0xeb9a62cf
  408103:	popa   
  408104:	add    eax,esi
  408106:	mov    eax,ds:0xd77953f1
  40810b:	pop    esi
  40810c:	mov    bl,0x8c
  40810e:	jo     0x4080e2
  408110:	fldenv [ebx+ecx*2]
  408113:	jmp    0xabf8226e
  408118:	mov    WORD PTR [edx-0x9],cs
  40811b:	and    BYTE PTR [eax],dh
  40811d:	or     DWORD PTR [bx+si-0x6d],ebp
  408121:	sub    ch,ah
  408123:	lods   eax,DWORD PTR ds:[esi]
  408124:	ror    DWORD PTR [eax+ebx*4-0x43f67cb6],0x92
  40812c:	mov    ebp,0x320c3f28
  408131:	shl    DWORD PTR [ecx],1
  408133:	shl    BYTE PTR [ebp+0x36f7e3e5],1
  408139:	jo     0x408114
  40813b:	xor    DWORD PTR [edx+0x29],ebx
  40813e:	pop    es
  40813f:	out    0xcc,eax
  408141:	test   BYTE PTR [esp+ecx*2],ah
  408144:	push   ds
  408145:	cmp    bh,BYTE PTR [edi-0x12]
  408148:	pop    ds
  408149:	(bad)  
  40814a:	mul    DWORD PTR [eax+0x60]
  40814d:	pop    ds
  40814e:	ins    BYTE PTR es:[edi],dx
  40814f:	jno    0x408128
  408151:	aad    0xf2
  408153:	mov    eax,ds:0xeb6e86fa
  408158:	pusha  
  408159:	xor    DWORD PTR [ecx+0x7397d55b],0x6f7f4f7
  408163:	jg     0x408182
  408165:	iret   
  408166:	cwde   
  408167:	repz icebp 
  408169:	mov    esp,0x3af23267
  40816e:	popa   
  40816f:	add    al,0xad
  408171:	cwde   
  408172:	inc    ecx
  408173:	mov    ebx,0x28ff2c4a
  408178:	aad    0x69
  40817a:	fs sbb al,0xf8
  40817d:	hlt    
  40817e:	cld    
  40817f:	mov    bh,0xc3
  408181:	outs   dx,DWORD PTR ds:[esi]
  408182:	out    0xde,eax
  408184:	mov    bh,0x59
  408186:	pop    es
  408187:	cmp    ch,BYTE PTR [eax-0x50]
  40818a:	push   esi
  40818b:	push   0xec391679
  408190:	adc    bh,BYTE PTR [ebp-0x5fc7f72a]
  408196:	jno    0x408164
  408198:	adc    al,0xd1
  40819a:	xor    eax,0x989d974e
  40819f:	(bad)  
  4081a0:	into   
  4081a1:	cdq    
  4081a2:	mov    ah,BYTE PTR [edi+0x23d06a18]
  4081a8:	sahf   
  4081a9:	sbb    esp,edi
  4081ab:	cmp    BYTE PTR [ebp+0x344995b1],0x96
  4081b2:	mov    ch,0x9d
  4081b4:	lds    ebp,FWORD PTR [ebp+esi*4+0x45]
  4081b8:	xchg   esp,eax
  4081b9:	push   0xffffff94
  4081bb:	pusha  
  4081bc:	mov    edx,0x7dae65c8
  4081c1:	mov    cl,0xd6
  4081c3:	jb     0x408212
  4081c5:	mov    eax,0xec90d3a0
  4081ca:	in     eax,0x5b
  4081cc:	int3   
  4081cd:	enter  0xfe,0x1c
  4081d1:	mov    cl,0x72
  4081d3:	and    eax,0x2efebf4f
  4081d8:	pop    es
  4081d9:	sub    bl,BYTE PTR [ebx+esi*8]
  4081dc:	fwait
  4081dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081de:	test   eax,0x4ae2b41e
  4081e3:	out    0x4e,al
  4081e5:	jne    0x40818f
  4081e7:	das    
  4081e8:	rcl    DWORD PTR [ecx],1
  4081ea:	and    eax,0x3af2b11e
  4081ef:	ins    DWORD PTR es:[edi],dx
  4081f0:	mov    ch,BYTE PTR [edx+0x0]
  4081f3:	push   es
  4081f4:	dec    ebp
  4081f5:	ror    BYTE PTR [edi+edi*2+0x19],0x84
  4081fa:	push   ecx
  4081fb:	add    DWORD PTR [ebp-0x57967fde],esp
  408201:	xchg   ecx,eax
  408202:	jne    0x4081d8
  408204:	push   ss
  408205:	cmp    esp,ecx
  408207:	nop
  408208:	(bad)  
  408209:	lods   eax,DWORD PTR ds:[esi]
  40820a:	jle    0x40821d
  40820c:	retf   
  40820d:	dec    ebp
  40820e:	mov    ebx,0xa810e78f
  408213:	adc    al,0xaa
  408215:	add    eax,0x8d042ed7
  40821a:	add    eax,DWORD PTR [esi+ecx*2-0x43]
  40821e:	rcl    DWORD PTR [ecx+0x12949845],cl
  408224:	sbb    bh,BYTE PTR [ecx+0x48c4a4a3]
  40822a:	shl    BYTE PTR [edx],cl
  40822c:	and    DWORD PTR [edi+0x46],0x18ec6687
  408233:	mov    dh,0x69
  408235:	cmp    dl,BYTE PTR [ebp+0x35]
  408238:	sar    edx,0x37
  40823b:	in     al,0x3f
  40823d:	mov    bl,0x3f
  40823f:	jge    0x4081e4
  408241:	mov    eax,ds:0xcbcf19ea
  408246:	loope  0x408229
  408248:	jne    0x408227
  40824a:	movhps xmm1,QWORD PTR [eax+0x140247e8]
  408251:	fnstenv [esi+0xc843327]
  408257:	push   ebp
  408258:	inc    esi
  408259:	bound  eax,QWORD PTR [edi+0x16]
  40825c:	or     ebx,esi
  40825e:	outs   dx,BYTE PTR ds:[esi]
  40825f:	adc    al,0x93
  408261:	neg    BYTE PTR ds:0xa4b767c8
  408267:	add    eax,0xa4ada6a3
  40826c:	dec    DWORD PTR [ecx+0x64]
  40826f:	loop   0x408284
  408271:	scas   eax,DWORD PTR es:[edi]
  408272:	imul   edx,ebp,0xffffff8f
  408275:	ins    BYTE PTR es:[edi],dx
  408276:	push   0x69bc28
  40827b:	(bad)  
  40827c:	mov    al,0x73
  40827e:	add    BYTE PTR [edx+0x14dfc6bd],bh
  408284:	daa    
  408285:	push   edi
  408286:	les    esp,FWORD PTR [esi+0xd28bf69]
  40828c:	xchg   ebp,eax
  40828d:	xchg   BYTE PTR [ebx+edi*1],ch
  408290:	sar    DWORD PTR [esi],0x35
  408293:	jne    0x4082d4
  408295:	bound  edx,QWORD PTR [eax+esi*2+0x72]
  408299:	sub    ecx,DWORD PTR [ecx+0x6b9bd501]
  40829f:	sar    BYTE PTR [edi+0x23],1
  4082a2:	rcl    DWORD PTR [edi-0x219a2572],1
  4082a8:	jnp    0x40828c
  4082aa:	lahf   
  4082ab:	jge    0x408310
  4082ad:	loop   0x4082e1
  4082af:	sbb    al,0x2e
  4082b1:	cmp    DWORD PTR [edx-0x24351107],eax
  4082b7:	xor    DWORD PTR [ebx],0xffffffed
  4082ba:	lods   al,BYTE PTR ds:[esi]
  4082bb:	scas   al,BYTE PTR es:[edi]
  4082bc:	fadd   DWORD PTR ds:0xe520992a
  4082c2:	xor    eax,0x68c120fd
  4082c7:	sahf   
  4082c8:	jae    0x4082a6
  4082ca:	push   cs
  4082cb:	shl    DWORD PTR [edi-0x44c898f0],0xc5
  4082d2:	lods   eax,DWORD PTR ds:[esi]
  4082d3:	pop    eax
  4082d4:	mov    cl,0xe9
  4082d6:	fbld   TBYTE PTR [ecx]
  4082d8:	popf   
  4082d9:	dec    esp
  4082da:	sbb    DWORD PTR [edx-0x49],0xffffffa2
  4082de:	cmc    
  4082df:	adc    ebx,DWORD PTR [eax+0x5ea5267f]
  4082e5:	and    al,0x6a
  4082e7:	stc    
  4082e8:	out    dx,eax
  4082e9:	test   al,0xac
  4082eb:	mov    bl,0x40
  4082ed:	cld    
  4082ee:	add    eax,DWORD PTR [esi+0x5b]
  4082f1:	in     al,0xa7
  4082f3:	(bad)  
  4082f4:	or     eax,DWORD PTR [ebx+0x6b919210]
  4082fa:	out    0x30,eax
  4082fc:	fcomi  st,st(0)
  4082fe:	ins    DWORD PTR es:[edi],dx
  4082ff:	mov    bl,0xd8
  408301:	push   ss
  408302:	pop    ebx
  408303:	std    
  408304:	adc    DWORD PTR [ebx],ecx
  408306:	std    
  408307:	dec    ebx
  408308:	and    BYTE PTR [ecx-0x124ce782],cl
  40830e:	push   0xffffffa0
  408310:	test   esi,esi
  408312:	repz aas 
  408314:	cs (bad) 
  408316:	lock adc dh,0xad
  40831a:	lods   al,BYTE PTR ds:[esi]
  40831b:	add    dh,al
  40831d:	cli    
  40831e:	(bad)  
  40831f:	jne    0x40830c
  408321:	lods   eax,DWORD PTR ds:[esi]
  408322:	cmp    al,0x19
  408324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408325:	or     bl,ah
  408327:	xchg   ecx,eax
  408328:	ror    BYTE PTR [edx-0x30ef4b31],cl
  40832e:	lods   eax,DWORD PTR ds:[esi]
  40832f:	xchg   DWORD PTR [ebp-0x71],ebp
  408332:	fucomi st,st(5)
  408334:	rcl    BYTE PTR fs:[esi-0x6d83df52],cl
  40833b:	jb     0x4083a3
  40833d:	cwde   
  40833e:	out    0xae,eax
  408340:	in     eax,dx
  408341:	mov    ch,BYTE PTR [esi+0x2]
  408344:	push   cs
  408345:	adc    BYTE PTR [edi+0x5a60d2af],dh
  40834b:	int    0xce
  40834d:	mov    eax,0xe7383668
  408352:	sub    eax,0x495faad0
  408357:	cwde   
  408358:	cdq    
  408359:	lahf   
  40835a:	sub    DWORD PTR ds:0xcb2ca6ec,esi
  408360:	aad    0xb8
  408362:	push   ss
  408363:	ja     0x4082f2
  408365:	in     eax,0x3b
  408367:	ffreep st(7)
  408369:	mov    ebp,0xf2a41c32
  40836e:	mov    ds:0x78e3dfa9,eax
  408373:	pusha  
  408374:	or     BYTE PTR [ecx+0x71],0x54
  408378:	xchg   esi,eax
  408379:	hlt    
  40837a:	pop    edx
  40837b:	xor    ah,ch
  40837d:	sub    eax,0x5399e4f3
  408382:	test   DWORD PTR [ebp-0x11],ecx
  408385:	mov    ebx,0x13033f18
  40838a:	es xchg ecx,eax
  40838c:	retfw  0x3236
  408390:	jae    0x4083b0
  408392:	pop    esp
  408393:	cmp    al,0x6e
  408395:	xor    ah,BYTE PTR [edx+0x4e]
  408398:	retf   
  408399:	jmp    0x4083b5
  40839b:	ds mov ebx,0x4aebbc77
  4083a1:	into   
  4083a2:	sub    BYTE PTR [esp+edi*2],ah
  4083a5:	shr    BYTE PTR [ebx+0x17c05d03],cl
  4083ab:	or     DWORD PTR [ecx+0x44dd052a],esi
  4083b1:	xor    cl,BYTE PTR [ebp-0x8]
  4083b4:	stos   DWORD PTR es:[edi],eax
  4083b5:	fisttp WORD PTR [edx]
  4083b7:	adc    ecx,ebx
  4083b9:	daa    
  4083ba:	push   DWORD PTR [eax+edx*8]
  4083bd:	mov    edx,0x6649edc2
  4083c2:	sar    DWORD PTR [ebx+0x697ed608],cl
  4083c8:	mov    ch,0x4b
  4083ca:	sub    DWORD PTR [ebx-0x50],ebp
  4083cd:	xchg   edi,eax
  4083ce:	push   0x19
  4083d0:	add    ecx,esp
  4083d2:	xchg   esi,eax
  4083d3:	aam    0xe3
  4083d5:	pop    ebx
  4083d6:	inc    esp
  4083d7:	push   esi
  4083d8:	out    0x9b,al
  4083da:	(bad)  
  4083db:	shl    DWORD PTR [eax],1
  4083dd:	mov    esi,ecx
  4083df:	sar    ah,0xf8
  4083e2:	mov    ebx,DWORD PTR [edi]
  4083e4:	jecxz  0x4083f3
  4083e6:	ins    BYTE PTR es:[edi],dx
  4083e7:	adc    BYTE PTR [ebp+0x6dfd993c],0x65
  4083ee:	and    BYTE PTR [edx+eiz*4],dl
  4083f1:	imul   eax,ebx,0xffffff8d
  4083f4:	mov    ecx,DWORD PTR [ebx-0x3ddb3ff1]
  4083fa:	push   cs
  4083fb:	jne    0x408440
  4083fd:	in     eax,0x36
  4083ff:	or     al,0xee
  408401:	inc    edi
  408402:	cmp    DWORD PTR [ecx+0x5cf2cbed],ecx
  408408:	add    edi,edx
  40840a:	repz mov bl,0x86
  40840d:	popa   
  40840e:	in     al,0xee
  408410:	inc    esi
  408411:	dec    ebp
  408412:	outs   dx,BYTE PTR ds:[esi]
  408413:	stos   BYTE PTR es:[edi],al
  408414:	enter  0x9f82,0x15
  408418:	rcl    DWORD PTR [esi],0xa0
  40841b:	(bad)  [eax]
  40841d:	and    eax,0x1e1d1180
  408422:	test   eax,0x68d3e22b
  408427:	push   eax
  408428:	in     eax,dx
  408429:	and    eax,0xce74ef27
  40842e:	fadd   st(5),st
  408430:	xchg   ebx,eax
  408431:	ds add eax,0xcd1273e1
  408437:	ins    DWORD PTR es:[edi],dx
  408438:	xchg   ch,bl
  40843a:	in     al,0xeb
  40843c:	sbb    cl,BYTE PTR [ebp-0x49c92555]
  408442:	(bad)  
  408443:	fist   DWORD PTR [edi-0xe7d68b0]
  408449:	pop    ecx
  40844a:	mov    dh,0x49
  40844c:	mov    al,0xee
  40844e:	push   esi
  40844f:	mov    esp,0x47aae73b
  408454:	inc    eax
  408455:	jno    0x4083e3
  408457:	lahf   
  408458:	pop    edx
  408459:	add    BYTE PTR [eax-0x5b],0xa3
  40845d:	and    dh,BYTE PTR [eax+0x2e]
  408460:	rcr    DWORD PTR gs:0xe7287546,1
  408467:	ja     0x40840f
  408469:	and    eax,0xa743bc66
  40846e:	inc    esi
  40846f:	out    0xca,eax
  408471:	inc    eax
  408472:	push   ecx
  408473:	test   BYTE PTR [esi],bl
  408475:	inc    ebx
  408476:	shl    ecx,0x85
  408479:	mov    esi,0x864dc453
  40847e:	ret    0xba46
  408481:	pushf  
  408482:	fstp   QWORD PTR [ebx-0x56]
  408485:	and    esp,DWORD PTR [edx+0x7d]
  408488:	loop   0x408467
  40848a:	ror    BYTE PTR [ebx],1
  40848c:	adc    bh,BYTE PTR [ebx+0x6b2bba68]
  408492:	inc    esp
  408493:	jne    0x4084c2
  408495:	into   
  408496:	xor    al,0x81
  408498:	sti    
  408499:	push   esp
  40849a:	xchg   BYTE PTR [ebx+0x7fe6104d],bh
  4084a0:	add    BYTE PTR [ebp+0x72f42318],0x1d
  4084a7:	loop   0x408519
  4084a9:	repz jo 0x408491
  4084ac:	jp     0x408444
  4084ae:	adc    al,0x36
  4084b0:	adc    eax,DWORD PTR [edi+0x61]
  4084b3:	test   al,0x93
  4084b5:	pop    esi
  4084b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084b7:	sub    ebx,DWORD PTR [ebx+0x41bdd834]
  4084bd:	add    al,0x6c
  4084bf:	push   eax
  4084c0:	aad    0xd3
  4084c2:	mov    ecx,0xd6560efb
  4084c7:	retf   0x1221
  4084ca:	out    dx,al
  4084cb:	mov    ecx,0x40cb3a2e
  4084d0:	js     0x4084d8
  4084d2:	xor    eax,0xa20553d
  4084d7:	sub    eax,0x1d5dfd1b
  4084dc:	(bad)  
  4084dd:	lock shl BYTE PTR [ebp-0x7c],0x61
  4084e2:	sbb    eax,0x36d9bddc
  4084e7:	adc    al,bl
  4084e9:	test   al,0x4a
  4084eb:	ins    BYTE PTR es:[edi],dx
  4084ec:	jnp    0x408531
  4084ee:	iret   
  4084ef:	cmp    DWORD PTR [ecx+0x10e5456a],edx
  4084f5:	dec    DWORD PTR [ebp+ebx*4+0x3a]
  4084f9:	shl    DWORD PTR [edx],0x82
  4084fc:	mov    BYTE PTR [edx+ebx*1],al
  4084ff:	mov    eax,DWORD PTR [ebp-0x40]
  408502:	mov    edx,DWORD PTR [ebp-0x28]
  408505:	xor    eax,esi
  408507:	xor    edx,esi
  408509:	add    eax,edi
  40850b:	add    edx,edi
  40850d:	imul   eax,edx
  408510:	add    eax,DWORD PTR [ebp-0xc]
  408513:	mov    DWORD PTR [ebp-0xc],eax
  408516:	mov    eax,DWORD PTR [ebp-0xc]
  408519:	mov    edx,DWORD PTR [ebp-0x18]
  40851c:	cmp    edx,eax
  40851e:	jb     0x406080
  408524:	mov    eax,DWORD PTR [ebp-0x28]
  408527:	mov    edx,DWORD PTR [ebp-0x18]
  40852a:	xor    eax,esi
  40852c:	add    eax,edi
  40852e:	imul   eax,edx
  408531:	mov    edx,DWORD PTR [ebp-0x1c]
  408534:	xor    edx,esi
  408536:	add    edx,edi
  408538:	or     eax,edx
  40853a:	mov    edx,DWORD PTR [ebp-0x20]
  40853d:	xor    edx,esi
  40853f:	add    eax,edx
  408541:	mov    edx,DWORD PTR [ebp-0x20]
  408544:	xor    edx,esi
  408546:	add    eax,edx
  408548:	mov    edx,DWORD PTR [ebp-0x10]
  40854b:	lea    eax,[eax+edx*1+0x64e5e6]
  408552:	jmp    0x408566
  408557:	mov    eax,DWORD PTR [ebp-0x20]
  40855a:	mov    edx,DWORD PTR [ebp-0x10]
  40855d:	xor    eax,esi
  40855f:	lea    eax,[eax+edx*1+0x3272f3]
  408566:	mov    DWORD PTR [ebp-0x10],eax
  408569:	jmp    0x403c1c
  40856e:	mov    ebx,DWORD PTR [ebp-0x3c]
  408571:	mov    eax,DWORD PTR [ebp+0xc]
  408574:	xor    eax,esi
  408576:	lea    ecx,[ecx+eax*1+0x3272f3]
  40857d:	lea    eax,[ecx-0x3272f3]
  408583:	xor    eax,esi
  408585:	cmp    eax,0xf89c95a1
  40858a:	jne    0x403bc0
  408590:	dec    DWORD PTR [ebp-0x34]
  408593:	jne    0x403bb4
  408599:	mov    eax,DWORD PTR [ebp+0x8]
  40859c:	mov    ecx,DWORD PTR [ebp+0xc]
  40859f:	mov    edx,DWORD PTR [ebp+0x8]
  4085a2:	xor    ecx,esi
  4085a4:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f3]
  4085ab:	xor    eax,esi
  4085ad:	mov    al,BYTE PTR [eax+ebx*1+0x3272f3]
  4085b4:	xor    edx,esi
  4085b6:	mov    BYTE PTR [edx+ebx*1+0x3272f3],cl
  4085bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4085c0:	xor    ecx,esi
  4085c2:	mov    BYTE PTR [ecx+ebx*1+0x3272f3],al
  4085c9:	mov    eax,DWORD PTR [ebp+0xc]
  4085cc:	xor    eax,esi
  4085ce:	add    eax,edi
  4085d0:	pop    edi
  4085d1:	pop    esi
  4085d2:	pop    ebx
  4085d3:	leave  
  4085d4:	ret    0x8
  4085d7:	xor    eax,eax
  4085d9:	and    DWORD PTR ds:0x4291db,0x42914b
  4085e3:	inc    eax
  4085e4:	ret    
  4085e5:	push   ebp
  4085e6:	mov    ebp,esp
  4085e8:	sub    esp,0x38
  4085eb:	and    DWORD PTR ds:0x429167,0x0
  4085f5:	mov    eax,ds:0x429167
  4085fa:	inc    eax
  4085fb:	mov    ds:0x429167,eax
  408600:	cmp    DWORD PTR ds:0x429167,0x23
  408607:	jle    0x408625
  40860d:	jmp    0x408618
  408612:	call   DWORD PTR ds:0x42a57b
  408618:	cmp    DWORD PTR ds:0x429167,0x1d
  40861f:	jb     0x4085f5
  408625:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40862c:	push   ebx
  40862d:	adc    DWORD PTR ds:0x4291ef,ecx
  408633:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40863a:	sub    DWORD PTR ds:0x429167,0x723d
  408644:	mov    eax,DWORD PTR [ebp-0x4]
  408647:	push   esi
  408648:	mov    esi,0x75108ac
  40864d:	adc    DWORD PTR ds:0x429153,0x4291d3
  408657:	xor    eax,esi
  408659:	push   edi
  40865a:	and    DWORD PTR ds:0x42915f,0x0
  408664:	jmp    0x408676
  408669:	mov    edi,DWORD PTR ds:0x42915f
  40866f:	inc    edi
  408670:	mov    DWORD PTR ds:0x42915f,edi
  408676:	cmp    DWORD PTR ds:0x42915f,0x18
  40867d:	jae    0x4086c6
  408683:	cmp    DWORD PTR ds:0x42915f,0xb
  40868a:	jg     0x4086c6
  408690:	jmp    0x4086a5
  408695:	push   0x4291bf
  40869a:	push   0x428022
  40869f:	call   DWORD PTR ds:0x42a57f
  4086a5:	cmp    DWORD PTR ds:0x42915f,0xa
  4086ac:	jne    0x4086c1
  4086b2:	xor    edi,edi
  4086b4:	or     edi,DWORD PTR ds:0x42915f
  4086ba:	inc    edi
  4086bb:	mov    DWORD PTR ds:0x42915f,edi
  4086c1:	jmp    0x408669
  4086c6:	mov    edi,0x3272f3
  4086cb:	or     DWORD PTR ds:0x429173,0x4291df
  4086d5:	add    eax,edi
  4086d7:	and    DWORD PTR ds:0x4291cb,0x4291b7
  4086e1:	mov    DWORD PTR [ebp-0x1c],eax
  4086e4:	mov    eax,DWORD PTR [ebp+0x14]
  4086e7:	add    DWORD PTR ds:0x42919b,0xffd
  4086f1:	test   eax,eax
  4086f3:	mov    DWORD PTR ds:0x4291c7,0x550e
  4086fd:	je     0x408761
  408703:	mov    DWORD PTR ds:0x4291c3,0x10
  40870d:	cmp    DWORD PTR ds:0x4291c3,0x0
  408714:	je     0x408749
  40871a:	cmp    DWORD PTR ds:0x4291c3,0x1a
  408721:	jle    0x408749
  408727:	jmp    0x408737
  40872c:	push   0x8b39
  408731:	call   DWORD PTR ds:0x42a583
  408737:	mov    ebx,DWORD PTR ds:0x4291c3
  40873d:	dec    ebx
  40873e:	mov    DWORD PTR ds:0x4291c3,ebx
  408744:	jmp    0x40870d
  408749:	mov    eax,DWORD PTR [ebp+0x14]
  40874c:	sbb    DWORD PTR ds:0x4291db,ebx
  408752:	mov    eax,DWORD PTR [eax]
  408754:	add    DWORD PTR ds:0x4291b3,0x4291cf
  40875e:	mov    DWORD PTR [ebp-0x1c],eax
  408761:	mov    eax,DWORD PTR [ebp-0x4]
  408764:	xor    eax,esi
  408766:	xor    DWORD PTR ds:0x429193,edi
  40876c:	add    eax,edi
  40876e:	and    ebx,DWORD PTR ds:0x42918b
  408774:	mov    DWORD PTR [ebp-0x8],eax
  408777:	mov    eax,DWORD PTR [ebp-0xc]
  40877a:	and    ebx,DWORD PTR ds:0x4291f3
  408780:	xor    eax,esi
  408782:	mov    ebx,DWORD PTR ds:0x429167
  408788:	and    ebx,DWORD PTR ds:0x4291b7
  40878e:	mov    DWORD PTR ds:0x429167,ebx
  408794:	add    eax,edi
  408796:	sbb    ebx,0x2c4d
  40879c:	mov    DWORD PTR [ebp-0x24],eax
  40879f:	mov    eax,DWORD PTR [ebp-0x4]
  4087a2:	xor    eax,esi
  4087a4:	mov    ebx,DWORD PTR ds:0x42919b
  4087aa:	or     ebx,DWORD PTR ds:0x429183
  4087b0:	mov    DWORD PTR ds:0x42919b,ebx
  4087b6:	add    eax,edi
  4087b8:	or     DWORD PTR ds:0x4291df,edx
  4087be:	mov    DWORD PTR [ebp-0x30],eax
  4087c1:	or     DWORD PTR ds:0x42914b,0x176b
  4087cb:	mov    ebx,DWORD PTR [ebp-0x4]
  4087ce:	xor    ebx,esi
  4087d0:	mov    eax,ds:0x429173
  4087d5:	xor    eax,DWORD PTR ds:0x42916f
  4087db:	mov    ds:0x429173,eax
  4087e0:	add    ebx,edi
  4087e2:	mov    eax,DWORD PTR [ebp-0x24]
  4087e5:	sub    eax,edi
  4087e7:	sbb    DWORD PTR ds:0x429157,0x4291c7
  4087f1:	lea    ecx,[ebx-0x3272f3]
  4087f7:	xor    eax,esi
  4087f9:	xor    DWORD PTR ds:0x4291bb,0x42917b
  408803:	xor    ecx,esi
  408805:	mov    DWORD PTR ds:0x429153,0x47e0
  40880f:	cmp    ecx,eax
  408811:	mov    DWORD PTR ds:0x429187,0x3279
  40881b:	je     0x40d27b
  408821:	xor    DWORD PTR ds:0x42915b,0x508b
  40882b:	mov    eax,DWORD PTR [ebp-0x4]
  40882e:	sub    DWORD PTR ds:0x42919b,0x58b3
  408838:	xor    eax,esi
  40883a:	adc    DWORD PTR ds:0x429173,0x4291f7
  408844:	add    eax,edi
  408846:	cmp    ebx,eax
  408848:	mov    DWORD PTR ds:0x42915f,0x75e2
  408852:	jne    0x40adc2
  408858:	push   DWORD PTR [ebp+0x8]
  40885b:	call   0x424151
  408860:	mov    DWORD PTR [ebp-0x14],eax
  408863:	not    eax
  408865:	mov    eax,DWORD PTR [ebp-0x4]
  408868:	adc    DWORD PTR ds:0x429153,0x66a3
  408872:	mov    ecx,DWORD PTR [ebp-0x14]
  408875:	add    DWORD PTR ds:0x4291af,0x7712
  40887f:	xor    eax,esi
  408881:	add    eax,edi
  408883:	mov    DWORD PTR ds:0x4291cb,0x7d26
  40888d:	cmp    ecx,eax
  40888f:	mov    DWORD PTR ds:0x42916f,0x6080
  408899:	je     0x40d2e6
  40889f:	push   DWORD PTR [ebp-0x14]
  4088a2:	sbb    DWORD PTR ds:0x4291c3,0x2326
  4088ac:	push   DWORD PTR [ebp+0x8]
  4088af:	call   0x424291
  4088b4:	mov    DWORD PTR [ebp-0x14],eax
  4088b7:	xor    DWORD PTR ds:0x42919f,edx
  4088bd:	mov    eax,DWORD PTR [ebp-0x4]
  4088c0:	xor    DWORD PTR ds:0x42918f,ecx
  4088c6:	mov    ecx,DWORD PTR [ebp-0x14]
  4088c9:	xor    eax,esi
  4088cb:	add    eax,edi
  4088cd:	mov    DWORD PTR ds:0x42917b,0x355b
  4088d7:	cmp    ecx,eax
  4088d9:	mov    DWORD PTR ds:0x429157,0x7399
  4088e3:	je     0x40d2e6
  4088e9:	mov    eax,DWORD PTR [ebp-0x14]
  4088ec:	mov    eax,DWORD PTR [eax+0x18]
  4088ef:	and    DWORD PTR ds:0x4291f3,0x0
  4088f9:	jmp    0x40890b
  4088fe:	mov    ecx,DWORD PTR ds:0x4291f3
  408904:	inc    ecx
  408905:	mov    DWORD PTR ds:0x4291f3,ecx
  40890b:	cmp    DWORD PTR ds:0x4291f3,0x1b
  408912:	jae    0x40895e
  408918:	cmp    DWORD PTR ds:0x4291f3,0xc
  40891f:	ja     0x40895e
  408925:	jmp    0x40893f
  40892a:	push   0x429197
  40892f:	push   0x429187
  408934:	push   0x5f54
  408939:	call   DWORD PTR ds:0x42a58b
  40893f:	cmp    DWORD PTR ds:0x4291f3,0xb
  408946:	jne    0x408959
  40894c:	mov    ecx,DWORD PTR ds:0x4291f3
  408952:	inc    ecx
  408953:	mov    DWORD PTR ds:0x4291f3,ecx
  408959:	jmp    0x4088fe
  40895e:	mov    DWORD PTR [ebp-0x24],eax
  408961:	xor    DWORD PTR ds:0x42916f,ebx
  408967:	mov    eax,DWORD PTR [ebp-0x14]
  40896a:	and    DWORD PTR ds:0x42916b,0x0
  408974:	jmp    0x408986
  408979:	mov    ecx,DWORD PTR ds:0x42916b
  40897f:	inc    ecx
  408980:	mov    DWORD PTR ds:0x42916b,ecx
  408986:	cmp    DWORD PTR ds:0x42916b,0x1c
  40898d:	jae    0x4089b3
  408993:	cmp    DWORD PTR ds:0x42916b,0x2a
  40899a:	jge    0x4089b3
  4089a0:	jmp    0x4089ae
  4089a5:	push   DWORD PTR [ebp-0x14]
  4089a8:	call   DWORD PTR ds:0x42a553
  4089ae:	jmp    0x408979
  4089b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4089b6:	add    ecx,DWORD PTR [eax+0x20]
  4089b9:	sbb    DWORD PTR ds:0x429183,0x7fc6
  4089c3:	mov    DWORD PTR [ebp-0x2c],ecx
  4089c6:	mov    eax,DWORD PTR [ebp-0x14]
  4089c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4089cc:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  4089d6:	add    ecx,DWORD PTR [eax+0x24]
  4089d9:	or     DWORD PTR ds:0x4291ef,0x4291f3
  4089e3:	mov    DWORD PTR [ebp-0x34],ecx
  4089e6:	jmp    0x40ad9a
  4089eb:	push   ecx
  4089ec:	mov    dl,BYTE PTR [ecx+esi*1]
  4089ef:	and    BYTE PTR [ecx+0x58598a50],0x67
  4089f6:	test   BYTE PTR [edi],ch
  4089f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089f9:	xor    DWORD PTR [edx-0x7c7cea39],esp
  4089ff:	call   0x81c40d60
  408a04:	or     DWORD PTR [ebx],edi
  408a06:	jp     0x4089b7
  408a08:	cmp    ch,BYTE PTR [eax]
  408a0a:	cld    
  408a0b:	jge    0x408a61
  408a0d:	xlat   BYTE PTR ds:[ebx]
  408a0e:	inc    edx
  408a0f:	rcl    DWORD PTR [ecx-0x4dee44c3],cl
  408a15:	mov    bh,0x15
  408a17:	cld    
  408a18:	fyl2x  
  408a1a:	sub    dh,BYTE PTR [ebp+0x5]
  408a1d:	pop    ecx
  408a1e:	icebp  
  408a1f:	iret   
  408a20:	data16 int 0x2e
  408a23:	jge    0x408a8b
  408a25:	je     0x408a59
  408a27:	dec    esi
  408a28:	dec    esp
  408a29:	cmp    ecx,DWORD PTR [edx-0x7a810ccc]
  408a2f:	out    0xec,eax
  408a31:	cmc    
  408a32:	or     esi,ebp
  408a34:	mov    al,0xad
  408a36:	mov    ebx,0x41167231
  408a3b:	sub    edi,0x3
  408a3e:	mov    ch,0x28
  408a40:	ds int 0xc1
  408a43:	mov    bl,0x9c
  408a45:	js     0x408a4f
  408a47:	mov    ?,WORD PTR [eax]
  408a49:	or     DWORD PTR [edi],edi
  408a4b:	jp     0x408a43
  408a4d:	pop    es
  408a4e:	nop
  408a4f:	jne    0x408a7f
  408a51:	xor    edi,edx
  408a53:	push   ebx
  408a54:	add    eax,0x7dbe018f
  408a59:	in     al,dx
  408a5a:	xchg   BYTE PTR [edx+0x16f3486a],al
  408a60:	std    
  408a61:	aaa    
  408a62:	imul   ebp,DWORD PTR [eax-0x1e76a1fc],0xffffffbb
  408a69:	sub    ebp,DWORD PTR [ebp+0x6bdbbe4b]
  408a6f:	jmp    0xbe5543f3
  408a74:	fcomip st,st(4)
  408a76:	add    DWORD PTR [eax+edi*1+0x69],edx
  408a7a:	sahf   
  408a7b:	xchg   esp,eax
  408a7c:	popa   
  408a7d:	pop    esi
  408a7e:	xor    bl,BYTE PTR [eax+0x1d]
  408a81:	mov    DWORD PTR [ebx*2-0x4eaaaff4],ecx
  408a88:	ds lock xchg ebx,eax
  408a8b:	pushf  
  408a8c:	ins    DWORD PTR es:[edi],dx
  408a8d:	pop    esi
  408a8e:	fisub  WORD PTR [ebp+0x474e5fc]
  408a94:	out    dx,eax
  408a95:	fst    DWORD PTR [edi+0x3d77205d]
  408a9b:	push   es
  408a9c:	xchg   esp,eax
  408a9d:	call   0x8c9f6500
  408aa2:	mov    DWORD PTR [edx+ebx*4-0x6fd8fc22],esp
  408aa9:	mov    fs,WORD PTR [ecx-0x3ad39526]
  408aaf:	std    
  408ab0:	cmp    ah,dl
  408ab2:	add    dl,ah
  408ab4:	mov    al,ds:0xe919cbbc
  408ab9:	fcomp  QWORD PTR [eax-0x4ccbd12f]
  408abf:	mov    esp,0xc3b00a75
  408ac4:	fild   DWORD PTR [eax]
  408ac6:	mov    eax,ds:0x2e93307d
  408acb:	in     al,dx
  408acc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408acd:	pop    ds
  408ace:	jmp    0x408ad5
  408ad0:	clc    
  408ad1:	mov    bh,0x13
  408ad3:	enter  0xb5fe,0x58
  408ad7:	imul   ecx,DWORD PTR [ebp-0x3d],0xab5241c1
  408ade:	jmp    0xf40e:0xb32acb3a
  408ae5:	(bad)  [ecx+0x5]
  408ae8:	or     al,bl
  408aea:	dec    edi
  408aeb:	cdq    
  408aec:	imul   esi,edx,0xffffff86
  408aef:	arpl   WORD PTR [esi],ax
  408af1:	fistp  WORD PTR [ecx]
  408af3:	lods   al,BYTE PTR ds:[esi]
  408af4:	inc    cx
  408af6:	xor    BYTE PTR [esi],0xf8
  408af9:	jne    0x408a9e
  408afb:	mov    ch,0x9f
  408afd:	jecxz  0x408ae6
  408aff:	xchg   edi,eax
  408b00:	fsub   QWORD PTR [edi+eiz*4-0x44]
  408b04:	adc    esi,ecx
  408b06:	jns    0x408ab2
  408b08:	dec    eax
  408b09:	fcom   QWORD PTR [edi]
  408b0b:	mul    DWORD PTR [esi+0x74]
  408b0e:	cmp    eax,0xd8c20260
  408b13:	retf   
  408b14:	and    DWORD PTR ds:0xf3e8735c,ebx
  408b1a:	mov    ch,ah
  408b1c:	adc    DWORD PTR [ebp-0x35ad144f],0x1e
  408b23:	and    ah,BYTE PTR [ebp+0x299a7a45]
  408b29:	into   
  408b2a:	rcr    BYTE PTR [eax+eax*2-0x26],1
  408b2e:	outs   dx,BYTE PTR ds:[esi]
  408b2f:	scas   al,BYTE PTR es:[edi]
  408b30:	adc    DWORD PTR [ecx+edx*1],ecx
  408b33:	and    eax,0xb7c0aae0
  408b38:	out    0xe0,eax
  408b3a:	add    eax,0x569d3bc1
  408b3f:	popa   
  408b40:	cmc    
  408b41:	popf   
  408b42:	cli    
  408b43:	cs aam 0x18
  408b46:	xor    cl,BYTE PTR [edx]
  408b48:	leave  
  408b49:	pop    es
  408b4a:	cmp    al,0xfc
  408b4c:	test   al,0x95
  408b4e:	push   esp
  408b4f:	outs   dx,BYTE PTR ds:[esi]
  408b50:	retf   0x175
  408b53:	nop
  408b54:	clc    
  408b55:	rol    edx,1
  408b57:	shr    cl,cl
  408b59:	out    0x88,eax
  408b5b:	xor    BYTE PTR [eax+eax*4],dl
  408b5e:	loope  0x408b94
  408b60:	clc    
  408b61:	dec    edx
  408b62:	pop    ds
  408b63:	jb     0x408b9c
  408b65:	enter  0xc7dd,0x9c
  408b69:	inc    ebp
  408b6a:	xchg   BYTE PTR [ecx],bh
  408b6c:	aam    0xf8
  408b6e:	or     DWORD PTR [edi],0x5c622cd4
  408b74:	mov    cl,0xa2
  408b76:	jl     0x408b54
  408b78:	enter  0x5674,0x38
  408b7c:	add    dl,dl
  408b7e:	add    al,0x8a
  408b80:	enter  0x9591,0x69
  408b84:	mov    bh,0xf7
  408b86:	sbb    eax,0xf87fa862
  408b8b:	cmp    edi,ebx
  408b8d:	jb     0x408b9b
  408b8f:	fs push ecx
  408b91:	neg    BYTE PTR [esi-0x1b]
  408b94:	mov    ebp,DWORD PTR [ebx+esi*8+0x530209aa]
  408b9b:	loop   0x408b6f
  408b9d:	imul   edx,ecx,0xffffffc2
  408ba0:	push   cs
  408ba1:	loop   0x408c00
  408ba3:	xor    BYTE PTR [edx+0x1f],dl
  408ba6:	inc    ebx
  408ba7:	(bad)  
  408ba8:	in     eax,dx
  408ba9:	mov    ds:0x825dd3ff,al
  408bae:	mov    bh,0x1f
  408bb0:	jp     0x408b4d
  408bb2:	test   al,0x40
  408bb4:	nop
  408bb5:	cmp    edi,DWORD PTR [ecx-0x7f]
  408bb8:	push   ecx
  408bb9:	loop   0x408b54
  408bbb:	xchg   ecx,eax
  408bbc:	xchg   ecx,eax
  408bbd:	mov    ebx,0x50552074
  408bc2:	lea    ebp,[ebp-0x2df1855f]
  408bc8:	int3   
  408bc9:	dec    edx
  408bca:	test   eax,0x792c2796
  408bcf:	cmp    BYTE PTR [ebp+0x68],al
  408bd2:	add    al,0x6
  408bd4:	std    
  408bd5:	cmp    al,0x83
  408bd7:	rcr    DWORD PTR [esi-0x40],cl
  408bda:	in     eax,dx
  408bdb:	cmp    eax,0x569774cd
  408be0:	mov    al,ds:0x5310e195
  408be5:	(bad)  
  408be6:	push   ecx
  408be7:	xor    DWORD PTR [eax-0x5818473d],edx
  408bed:	test   eax,0xba10d541
  408bf2:	stos   DWORD PTR es:[edi],eax
  408bf3:	adc    eax,0x6f390957
  408bf8:	or     eax,0x896ee9c7
  408bfd:	inc    edi
  408bfe:	mov    WORD PTR [esi+0x72],?
  408c01:	into   
  408c02:	mov    dh,dl
  408c04:	je     0x408c72
  408c06:	fld    DWORD PTR [ecx]
  408c08:	in     al,dx
  408c09:	into   
  408c0a:	out    dx,eax
  408c0b:	mov    ebp,0x9ddba63d
  408c10:	pop    edx
  408c11:	lahf   
  408c12:	jg     0x408c57
  408c14:	pop    gs
  408c16:	(bad)  
  408c17:	in     eax,0x1d
  408c19:	or     al,0x5
  408c1b:	mov    edi,0x336bc886
  408c20:	iret   
  408c21:	xchg   edi,eax
  408c22:	fsubr  DWORD PTR [edi-0x4d]
  408c25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c26:	loop   0x408c2f
  408c28:	aad    0x40
  408c2a:	push   ebp
  408c2b:	cs mov edi,0x933683de
  408c31:	rcr    DWORD PTR [ebp-0x18146423],1
  408c37:	fcomp  DWORD PTR [ecx+0x5]
  408c3a:	std    
  408c3b:	inc    ebx
  408c3c:	int    0xfd
  408c3e:	xlat   BYTE PTR ds:[ebx]
  408c3f:	xor    bl,ah
  408c41:	sbb    eax,ebx
  408c43:	out    dx,eax
  408c44:	add    DWORD PTR [edx-0xa3e70d3],ebx
  408c4a:	outs   dx,BYTE PTR ds:[esi]
  408c4b:	pusha  
  408c4c:	in     eax,dx
  408c4d:	mov    esp,0xe565e685
  408c52:	sub    al,0x9c
  408c54:	push   esi
  408c55:	mov    edx,0xe14bc161
  408c5a:	into   
  408c5b:	imul   esp,DWORD PTR [edx+0x55],0x66cb9b6c
  408c62:	loop   0x408c5f
  408c64:	repnz push DWORD PTR [ebx+0x229fa1ba]
  408c6b:	icebp  
  408c6c:	push   ss
  408c6d:	gs (bad) 
  408c6f:	bound  eax,QWORD PTR [ecx+ebx*4-0x3d97c96e]
  408c76:	or     edi,0x58af75cd
  408c7c:	(bad)  
  408c7d:	(bad)  
  408c7e:	sbb    al,0x92
  408c80:	sbb    ah,BYTE PTR [ebp-0xa66aab4]
  408c86:	and    al,0x20
  408c88:	jo     0x408c3a
  408c8a:	cmp    al,cl
  408c8c:	aad    0x3a
  408c8e:	add    cl,BYTE PTR ds:[ebp-0xb]
  408c92:	call   0x268b61c2
  408c97:	ret    0xf334
  408c9a:	cld    
  408c9b:	je     0x408d04
  408c9d:	or     al,0xb1
  408c9f:	inc    DWORD PTR ds:0xe03bbf15
  408ca5:	cmp    BYTE PTR [ebp+0x37db396c],dh
  408cab:	mov    esp,0x581ec489
  408cb0:	or     eax,0xc50f7607
  408cb5:	int    0x32
  408cb7:	mov    eax,ds:0x29a0ec89
  408cbc:	push   ecx
  408cbd:	add    dh,BYTE PTR [ecx]
  408cbf:	adc    al,0xa3
  408cc1:	xor    DWORD PTR [edx-0x4aea0ebf],0xfa943f1d
  408ccb:	aad    0x24
  408ccd:	push   ss
  408cce:	cmp    DWORD PTR [ebx+eiz*1+0x3dbb38bd],ecx
  408cd5:	mov    DWORD PTR [esp+eiz*8+0x2],ebx
  408cd9:	aas    
  408cda:	jecxz  0x408c7c
  408cdc:	pushf  
  408cdd:	sub    al,0xf8
  408cdf:	xor    eax,0x7f079d49
  408ce4:	mov    DWORD PTR [ecx+0x73],edi
  408ce7:	fcmovnu st,st(5)
  408ce9:	(bad)  
  408cea:	mov    al,ds:0xea409314
  408cef:	mov    DWORD PTR [eax+esi*4],eax
  408cf2:	ror    dl,cl
  408cf4:	(bad)  
  408cf5:	ficomp WORD PTR [edi-0x4124b70b]
  408cfb:	mov    esi,0x4f752de3
  408d00:	sbb    DWORD PTR [edx],esi
  408d02:	and    eax,0xe024507f
  408d07:	xchg   ebx,eax
  408d08:	pop    ds
  408d09:	cld    
  408d0a:	pop    edi
  408d0b:	sbb    DWORD PTR [ebx-0x6b],ecx
  408d0e:	loope  0x408cf3
  408d10:	add    al,0x4
  408d12:	cmp    al,0xac
  408d14:	jmp    0x408d75
  408d16:	xlat   BYTE PTR ds:[ebx]
  408d17:	or     dl,dl
  408d19:	dec    ecx
  408d1a:	add    al,0x25
  408d1c:	dec    ebp
  408d1d:	ins    DWORD PTR es:[edi],dx
  408d1e:	and    eax,0xe2c397b3
  408d23:	inc    ebp
  408d24:	mov    bl,al
  408d26:	fnstenv [edx+eiz*4-0x3312122b]
  408d2d:	cdq    
  408d2e:	xor    al,0x8a
  408d30:	jg     0x408d83
  408d32:	shr    BYTE PTR [ebx-0x14d4c5e6],1
  408d38:	clc    
  408d39:	int3   
  408d3a:	lahf   
  408d3b:	push   esi
  408d3c:	jge    0x408d7f
  408d3e:	aam    0xda
  408d40:	pop    ebp
  408d41:	retf   0xb49d
  408d44:	loop   0x408d11
  408d46:	xchg   DWORD PTR [ecx],edi
  408d48:	xchg   ebp,eax
  408d49:	pop    edx
  408d4a:	in     eax,0xf
  408d4c:	nop
  408d4d:	dec    edx
  408d4e:	push   eax
  408d4f:	cmp    BYTE PTR [eax],0x1d
  408d52:	(bad)  
  408d53:	aam    0xde
  408d55:	pop    ss
  408d56:	cmp    al,0xfc
  408d58:	and    DWORD PTR [ecx-0x27bc6ade],eax
  408d5e:	jo     0x408d3c
  408d60:	push   edx
  408d61:	or     eax,0xf7220d7f
  408d66:	push   ecx
  408d67:	(bad)  
  408d68:	outs   dx,DWORD PTR ds:[esi]
  408d69:	psubd  mm3,mm1
  408d6c:	pop    ebx
  408d6d:	(bad)  
  408d6e:	mov    ebx,0x53277c56
  408d73:	and    dh,BYTE PTR [edx+0x37]
  408d76:	(bad)  
  408d77:	fld    st(4)
  408d79:	sbb    ebx,esp
  408d7b:	call   0x127c9ab3
  408d80:	inc    esi
  408d81:	mov    ebx,0xd90c8f5d
  408d86:	mov    ah,0xb3
  408d88:	int    0xfa
  408d8a:	sbb    al,0x16
  408d8c:	cmc    
  408d8d:	add    ebp,DWORD PTR [esi]
  408d8f:	dec    esp
  408d90:	cmp    ah,al
  408d92:	call   0x3332:0x6bb122f6
  408d99:	aas    
  408d9a:	lods   eax,DWORD PTR ds:[esi]
  408d9b:	adc    ecx,DWORD PTR [esi-0x43260e0e]
  408da1:	mov    esi,DWORD PTR [esi+edx*8+0xd70bdb6]
  408da8:	mov    al,0xac
  408daa:	scas   al,BYTE PTR es:[edi]
  408dab:	lea    esi,[esi+0x5d]
  408dae:	pop    edx
  408daf:	test   eax,0x55ebc14a
  408db4:	mov    al,0x7
  408db6:	push   ebp
  408db7:	xchg   esp,eax
  408db8:	cdq    
  408db9:	inc    ebp
  408dba:	rol    ebx,cl
  408dbc:	xlat   BYTE PTR ds:[ebx]
  408dbd:	jno    0x408d9d
  408dbf:	mov    dh,0x98
  408dc1:	lahf   
  408dc2:	xlat   BYTE PTR ds:[ebx]
  408dc3:	inc    ecx
  408dc4:	js     0x408daf
  408dc6:	push   esp
  408dc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dc8:	push   ds
  408dc9:	shl    DWORD PTR [edx-0x3aaa32f8],1
  408dcf:	xchg   esi,eax
  408dd0:	jno    0x408dc0
  408dd2:	sub    al,0x7a
  408dd4:	mov    fs,WORD PTR [ebx+0x5ef97839]
  408dda:	pop    es
  408ddb:	lds    esi,FWORD PTR [ecx+ebx*2+0x6d77de2]
  408de2:	cmp    dl,BYTE PTR [ebx+0x1a9ba834]
  408de8:	mov    esp,0xd1ac389d
  408ded:	sbb    ah,BYTE PTR [eax]
  408def:	fnstsw WORD PTR [ecx-0x7fc12bae]
  408df5:	dec    esi
  408df6:	pushf  
  408df7:	lods   al,BYTE PTR ds:[esi]
  408df8:	xlat   BYTE PTR ds:[ebx]
  408df9:	jo     0x408dd7
  408dfb:	mov    ah,0xdd
  408dfd:	pop    edi
  408dfe:	mov    cs,WORD PTR [edi+ebx*8-0x13f2a5ce]
  408e05:	imul   esp,DWORD PTR [esi],0xde54aaa2
  408e0b:	and    ah,BYTE PTR [esi+0x6f5a9922]
  408e11:	stc    
  408e12:	cs fs jmp 0x530bd693
  408e19:	jns    0x408de2
  408e1b:	mov    bh,0xdc
  408e1d:	sub    al,0x29
  408e1f:	xchg   edi,eax
  408e20:	or     BYTE PTR cs:[esi],al
  408e23:	or     BYTE PTR [edi-0x544c819],bh
  408e29:	adc    ch,cl
  408e2b:	push   0x7a996ebc
  408e30:	imul   esp,DWORD PTR [edx],0xffffffcc
  408e33:	jae    0x408e44
  408e35:	mov    dl,0xfd
  408e37:	sub    eax,0x970400e6
  408e3c:	jmp    0xf32c:0xcc8fbc9
  408e43:	cmp    bl,BYTE PTR [ebp-0x35a79301]
  408e49:	pop    es
  408e4a:	popa   
  408e4b:	mov    ds:0xb84f40c8,al
  408e50:	xor    DWORD PTR [edx-0x22c2a172],edi
  408e56:	call   FWORD PTR [edi+0x13]
  408e59:	mov    al,0x96
  408e5b:	leave  
  408e5c:	retf   0xb6c7
  408e5f:	neg    ebp
  408e61:	sbb    al,al
  408e63:	cmp    eax,DWORD PTR [ebx+0x0]
  408e66:	xchg   esi,eax
  408e67:	dec    eax
  408e68:	dec    esp
  408e69:	cmp    dl,0xdc
  408e6c:	jns    0x408e74
  408e6e:	dec    ebx
  408e6f:	jno    0x408e7b
  408e71:	inc    edx
  408e72:	adc    esp,ecx
  408e74:	xchg   esi,eax
  408e75:	out    dx,al
  408e76:	xor    DWORD PTR [edi-0x14],edi
  408e79:	adc    al,0x80
  408e7b:	sahf   
  408e7c:	and    ah,0xa
  408e7f:	mov    esi,esi
  408e81:	out    dx,al
  408e82:	or     eax,0xab996b60
  408e87:	xchg   ebp,eax
  408e88:	gs addr16 adc edx,0x6684d9df
  408e90:	fwait
  408e91:	mov    dl,0x2e
  408e93:	push   eax
  408e94:	cwde   
  408e95:	cmp    DWORD PTR [eax+0x33],ebp
  408e98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e99:	prefetch (bad)
  408e9a:	or     eax,0xf5b3f3e1
  408e9f:	ja     0x408e6b
  408ea1:	iret   
  408ea2:	dec    esp
  408ea3:	leave  
  408ea4:	je     0x408e2b
  408ea6:	retf   
  408ea7:	mov    ecx,DWORD PTR [ebp+0xe]
  408eaa:	and    eax,0x2d0c8643
  408eaf:	pop    ss
  408eb0:	adc    bh,ah
  408eb2:	test   DWORD PTR [ecx-0x73],esp
  408eb5:	xor    al,0x8c
  408eb7:	ficom  DWORD PTR ss:[eax]
  408eba:	std    
  408ebb:	or     eax,0xc9ba1a8b
  408ec0:	inc    esp
  408ec1:	lahf   
  408ec2:	sar    BYTE PTR [ebx],cl
  408ec4:	hlt    
  408ec5:	xor    dh,bl
  408ec7:	jnp    0x408e6b
  408ec9:	push   ecx
  408eca:	out    dx,eax
  408ecb:	pop    esp
  408ecc:	xchg   ecx,eax
  408ecd:	jmp    0x45bd:0xebad2c4b
  408ed4:	mov    esp,0x7ae1843d
  408ed9:	mov    cl,0x87
  408edb:	and    dh,dh
  408edd:	jge    0x408f2d
  408edf:	xor    DWORD PTR [esi+0x4f9936b4],esp
  408ee5:	add    bh,0x58
  408ee8:	sbb    dh,BYTE PTR [edx+0x2c]
  408eeb:	xchg   esp,eax
  408eec:	retf   0x1c16
  408eef:	and    ch,BYTE PTR [esp+edx*8+0x57]
  408ef3:	jne    0x408eac
  408ef5:	in     eax,dx
  408ef6:	fcom   QWORD PTR [ebp+0x581865f5]
  408efc:	dec    edi
  408efd:	jo     0x408ecf
  408eff:	popf   
  408f00:	jnp    0x408e85
  408f02:	jp     0x408f63
  408f04:	add    BYTE PTR [edi+0x73],ah
  408f07:	(bad)  
  408f08:	pop    ds
  408f09:	imul   DWORD PTR [eax+eiz*8]
  408f0c:	mov    ebx,0xc316b87c
  408f11:	mov    eax,0x70c1e818
  408f16:	mov    edi,0xee0ff9b2
  408f1b:	mov    al,ds:0x51caff
  408f20:	add    al,0xd5
  408f22:	mov    dl,0x5e
  408f24:	mov    al,0x11
  408f26:	aad    0xff
  408f28:	or     edx,ecx
  408f2a:	std    
  408f2b:	mov    al,ds:0xd778815f
  408f30:	stos   BYTE PTR es:[edi],al
  408f31:	fdiv   DWORD PTR [eax]
  408f33:	cmp    esp,esi
  408f35:	xchg   ecx,eax
  408f36:	fadd   DWORD PTR gs:[ecx+0x37618a11]
  408f3d:	pusha  
  408f3e:	ss lahf 
  408f40:	mov    gs,eax
  408f42:	mov    ss,WORD PTR [eax]
  408f44:	pop    edx
  408f45:	mov    ecx,0x63f35134
  408f4a:	sub    BYTE PTR [edi],bh
  408f4c:	xchg   edx,eax
  408f4d:	sbb    edi,edx
  408f4f:	sub    ch,al
  408f51:	stos   BYTE PTR es:[edi],al
  408f52:	push   ecx
  408f53:	dec    edx
  408f54:	jle    0x408fa6
  408f56:	push   es
  408f57:	mov    WORD PTR [eax+ecx*8-0x5],?
  408f5b:	mov    bl,0xae
  408f5d:	pop    ecx
  408f5e:	jg     0x408f4a
  408f60:	int    0xe7
  408f62:	ficomp WORD PTR [esi]
  408f64:	dec    esi
  408f65:	test   DWORD PTR [ebp+ebx*1+0x70d66cbe],esi
  408f6c:	popa   
  408f6d:	lea    edi,[ecx]
  408f6f:	sub    BYTE PTR [ebp+0x46],dl
  408f72:	cld    
  408f73:	add    al,0xf4
  408f75:	sahf   
  408f76:	int3   
  408f77:	je     0x408f94
  408f79:	imul   edi,DWORD PTR [ebx+0x79079949],0x71
  408f80:	imul   edx,DWORD PTR [eax-0x9],0xe4646126
  408f87:	(bad)  [edx-0x71c2bdec]
  408f8d:	cld    
  408f8e:	xor    BYTE PTR [edi],bl
  408f90:	loop   0x408fbc
  408f92:	fsubp  st(7),st
  408f94:	or     cl,BYTE PTR [edx-0x7ed462d7]
  408f9a:	push   ds
  408f9b:	in     eax,0xac
  408f9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f9e:	inc    ebp
  408f9f:	pop    ebp
  408fa0:	rcl    BYTE PTR [ebx],cl
  408fa2:	push   0x963efec0
  408fa7:	mov    DWORD PTR [esp+edi*8+0x3df71cb0],esi
  408fae:	cmp    al,0x23
  408fb0:	es push esi
  408fb2:	lahf   
  408fb3:	jns    0x408f9c
  408fb5:	fwait
  408fb6:	hlt    
  408fb7:	or     BYTE PTR [ecx-0x9],cl
  408fba:	sbb    BYTE PTR [ebx+0x678842e],ah
  408fc0:	push   ebp
  408fc1:	test   edi,0x87dfffc9
  408fc7:	mov    cl,0x2d
  408fc9:	adc    eax,0x8d521ad
  408fce:	sbb    eax,0x4c8015e9
  408fd3:	jo     0x409015
  408fd5:	inc    edi
  408fd6:	sbb    ch,BYTE PTR [edx]
  408fd8:	mov    al,ds:0xd8eaff97
  408fdd:	int    0x43
  408fdf:	and    eax,0xc561482f
  408fe4:	jno    0x408fd4
  408fe6:	enter  0x3c68,0x4
  408fea:	xor    BYTE PTR [ecx],ah
  408fec:	pop    ebp
  408fed:	mov    ah,0x81
  408fef:	jno    0x40901a
  408ff1:	ror    BYTE PTR [ebp+0x4e],0x93
  408ff5:	cmp    eax,DWORD PTR [esp+edi*1-0x6f9a1782]
  408ffc:	add    BYTE PTR [esi+0x1982318],cl
  409002:	add    eax,DWORD PTR [ebx-0x60931a3f]
  409008:	push   eax
  409009:	test   BYTE PTR [eax+0x7c],ch
  40900c:	adc    esp,edx
  40900e:	xor    al,0x46
  409010:	and    DWORD PTR [ebp+0x0],esp
  409013:	cmc    
  409014:	mov    WORD PTR [esi],cs
  409016:	sbb    DWORD PTR [edi-0x5b],ebp
  409019:	js     0x408ff4
  40901b:	dec    edi
  40901c:	repz and ch,dl
  40901f:	stos   DWORD PTR es:[edi],eax
  409020:	stos   BYTE PTR es:[edi],al
  409021:	jnp    0x408ff3
  409023:	lahf   
  409024:	jne    0x408ffe
  409026:	cmp    al,0xfd
  409028:	test   cl,ch
  40902a:	push   ds
  40902b:	sbb    esp,edx
  40902d:	lds    ebx,FWORD PTR [ebx+ecx*1]
  409030:	jmp    0x408fe1
  409032:	sbb    ebp,esp
  409034:	add    al,0x21
  409036:	fimul  WORD PTR [edi-0x1881e948]
  40903c:	repz shl ebx,0xb3
  409040:	mov    ebp,0xdcc4fb93
  409045:	stos   BYTE PTR es:[edi],al
  409046:	es aas 
  409048:	sub    BYTE PTR [edx+0x30],dh
  40904b:	jb     0x408fe4
  40904d:	das    
  40904e:	xchg   edx,eax
  40904f:	popa   
  409050:	jg     0x4090ac
  409052:	(bad)  
  409053:	(bad)  [eax-0x3d]
  409056:	cwde   
  409057:	bound  esi,QWORD PTR [eax-0x7a]
  40905a:	fs inc ebx
  40905c:	sub    al,BYTE PTR [eax+esi*4+0x395a2e01]
  409063:	push   eax
  409064:	std    
  409065:	in     eax,0xcf
  409067:	test   esp,ebx
  409069:	leave  
  40906a:	es hlt 
  40906c:	test   bl,bl
  40906e:	arpl   WORD PTR [ebp-0x6],bx
  409071:	mov    BYTE PTR [esi+0x66],0x1
  409075:	leave  
  409076:	mov    ah,dh
  409078:	int    0x1f
  40907a:	stos   DWORD PTR es:[edi],eax
  40907b:	jle    0x40901a
  40907d:	fldenv [eax+0x2b]
  409080:	add    dh,BYTE PTR [esi-0x16]
  409083:	arpl   WORD PTR [esi-0x2f93dae6],si
  409089:	inc    ecx
  40908a:	or     cl,BYTE PTR [ebx]
  40908c:	xchg   edi,eax
  40908d:	push   DWORD PTR [edi+esi*4-0x73]
  409091:	pop    esi
  409092:	and    ecx,ebx
  409094:	cdq    
  409095:	cld    
  409096:	mov    gs,WORD PTR [ebp-0x70]
  409099:	inc    esp
  40909a:	into   
  40909b:	ins    DWORD PTR es:[edi],dx
  40909c:	cdq    
  40909d:	cmp    eax,0xe1e5f0eb
  4090a2:	mov    dl,0xe
  4090a4:	dec    ecx
  4090a5:	data16 cli 
  4090a7:	lods   eax,DWORD PTR ds:[esi]
  4090a8:	mov    ds:0x92bc2e77,eax
  4090ad:	jnp    0x4090c6
  4090af:	jns    0x409074
  4090b1:	push   ds
  4090b2:	lahf   
  4090b3:	or     al,0xe5
  4090b5:	push   es
  4090b6:	pusha  
  4090b7:	dec    ebp
  4090b8:	xor    eax,0xe1c626e9
  4090bd:	test   BYTE PTR [ebp+eax*2+0x150a9a2d],al
  4090c4:	int    0x9d
  4090c6:	mov    al,0x6c
  4090c8:	and    cl,BYTE PTR [edi]
  4090ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090cb:	adc    BYTE PTR [edx+0x4fbdb40b],ah
  4090d1:	mov    ecx,0x94a9ae34
  4090d6:	rcl    edi,0xf0
  4090d9:	std    
  4090da:	loop   0x40915b
  4090dc:	dec    ebx
  4090dd:	jmp    0x4090e8
  4090df:	les    edx,FWORD PTR [edi+0x5dfb73b0]
  4090e5:	push   edx
  4090e6:	cmp    al,BYTE PTR [ebx-0x7e]
  4090e9:	test   al,0x11
  4090eb:	stc    
  4090ec:	adc    eax,esi
  4090ee:	inc    ecx
  4090ef:	jno    0x4090bd
  4090f1:	in     al,dx
  4090f2:	cmc    
  4090f3:	test   ecx,esp
  4090f5:	scas   al,BYTE PTR es:[edi]
  4090f6:	dec    edi
  4090f7:	out    0xda,eax
  4090f9:	mov    dh,0x2a
  4090fb:	sbb    DWORD PTR [eax+0x2b7603a6],ecx
  409101:	or     BYTE PTR [eax-0x6d],0x48
  409105:	pop    edx
  409106:	lods   eax,DWORD PTR ds:[esi]
  409107:	daa    
  409108:	dec    edi
  409109:	or     BYTE PTR [esp+esi*8-0x3f],bl
  40910d:	push   ebx
  40910e:	je     0x4090b6
  409110:	test   BYTE PTR [ebx-0x743ff0e1],0x57
  409117:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409118:	add    eax,0xbe4bdb82
  40911d:	sub    BYTE PTR [esi+esi*1+0x66cb9024],0x1c
  409125:	popf   
  409126:	mov    ebx,0xf2db7cdd
  40912b:	or     ebx,esi
  40912d:	scas   al,BYTE PTR es:[edi]
  40912e:	(bad)  
  40912f:	pusha  
  409130:	ins    BYTE PTR es:[edi],dx
  409131:	mov    WORD PTR [edx-0x4d83d379],es
  409137:	mov    sp,0x9924
  40913b:	mov    edx,0xce3d4a17
  409140:	push   cs
  409141:	in     eax,dx
  409142:	mov    cl,0xca
  409144:	out    0xb8,eax
  409146:	outs   dx,BYTE PTR ds:[esi]
  409147:	pop    ds
  409148:	sub    ecx,esi
  40914a:	mov    ds:0x6748989f,eax
  40914f:	sahf   
  409150:	(bad)  [ebp+0x4b]
  409153:	mov    ecx,0xc9d955cc
  409158:	ja     0x40913c
  40915a:	adc    al,0x47
  40915c:	push   edx
  40915d:	xor    DWORD PTR [eax],ecx
  40915f:	dec    edi
  409160:	dec    esi
  409161:	cmc    
  409162:	cmp    ecx,0x25
  409165:	cmp    DWORD PTR [ebx-0x37],eax
  409168:	sbb    eax,0xe766df5d
  40916d:	adc    eax,0xcc573683
  409172:	xchg   edi,eax
  409173:	out    0xaa,eax
  409175:	or     DWORD PTR [eax],esp
  409177:	and    ch,BYTE PTR [ecx]
  409179:	outs   dx,BYTE PTR ds:[esi]
  40917a:	jns    0x409112
  40917c:	adc    al,0x36
  40917e:	or     eax,0x72f1c1
  409183:	xchg   esi,eax
  409184:	sbb    al,al
  409186:	in     al,0x16
  409188:	leave  
  409189:	nop
  40918a:	push   0x67022cfa
  40918f:	ds xchg edi,eax
  409191:	imul   edx,DWORD PTR ds:0xb3a7274,0xffffffba
  409198:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409199:	dec    ecx
  40919a:	enter  0xa86d,0xaa
  40919e:	jmp    0x4091e3
  4091a0:	iret   
  4091a1:	call   DWORD PTR [ebp-0x7c]
  4091a4:	ins    DWORD PTR es:[edi],dx
  4091a5:	jbe    0x4091e7
  4091a7:	jecxz  0x409179
  4091a9:	pop    esp
  4091aa:	in     eax,dx
  4091ab:	idiv   BYTE PTR [ecx+0xc545978]
  4091b1:	popf   
  4091b2:	enter  0x7942,0x4a
  4091b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091b7:	sbb    eax,0x9778b40
  4091bc:	lods   al,BYTE PTR ds:[esi]
  4091bd:	out    dx,al
  4091be:	add    esp,ebp
  4091c0:	xchg   DWORD PTR [ecx-0x17853ee8],eax
  4091c6:	data16 sbb dh,BYTE PTR [esi+edx*4-0x63023a64]
  4091ce:	in     eax,0x82
  4091d0:	bound  ecx,QWORD PTR [edi-0x71]
  4091d3:	dec    esp
  4091d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091d5:	adc    edx,ebp
  4091d7:	popa   
  4091d8:	xchg   ecx,eax
  4091d9:	inc    esi
  4091da:	mov    ch,0x60
  4091dc:	int    0x1a
  4091de:	fidivr WORD PTR [eax-0x1c1e3da8]
  4091e4:	loope  0x409228
  4091e6:	inc    ebx
  4091e7:	adc    ch,al
  4091e9:	xor    BYTE PTR [ebx-0x71],dh
  4091ec:	inc    ecx
  4091ed:	cmp    BYTE PTR [edx+0xf],cl
  4091f0:	scas   al,BYTE PTR es:[edi]
  4091f1:	sub    BYTE PTR [ecx-0x7d],dl
  4091f4:	inc    edx
  4091f5:	dec    ecx
  4091f6:	mov    dl,0x20
  4091f8:	sub    BYTE PTR [esi+0x1b],dl
  4091fb:	fwait
  4091fc:	in     eax,dx
  4091fd:	xchg   esp,eax
  4091fe:	mov    eax,ds:0x50257291
  409203:	aas    
  409204:	and    al,0x53
  409206:	shr    DWORD PTR [edi],cl
  409208:	loop   0x4091fd
  40920a:	cmp    eax,0xbaa74ac8
  40920f:	fidivr DWORD PTR [di-0x22]
  409213:	popf   
  409214:	iret   
  409215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409216:	inc    ebx
  409217:	mov    dh,BYTE PTR [edx-0x170a4fc9]
  40921d:	pop    es
  40921e:	pushf  
  40921f:	inc    ebx
  409220:	gs in  eax,dx
  409222:	xor    ebx,0x54
  409225:	xchg   ecx,eax
  409226:	inc    eax
  409227:	and    BYTE PTR [edx+edx*8+0x5c1d1993],ch
  40922e:	inc    ebx
  40922f:	clc    
  409230:	(bad)  
  409231:	push   0xffffffab
  409233:	(bad)
  409236:	loope  0x4091d8
  409238:	ins    DWORD PTR es:[edi],dx
  409239:	nop
  40923a:	pop    esi
  40923b:	xchg   esi,eax
  40923c:	xchg   DWORD PTR [edi+eiz*1+0x2cec79e6],edi
  409243:	cmp    DWORD PTR [ebx+0x165921d2],0x6ecc7217
  40924d:	xor    esi,esp
  40924f:	aam    0x64
  409251:	cmp    BYTE PTR [ebx+0x89980a2],cl
  409257:	je     0x409206
  409259:	mov    cl,0x6a
  40925b:	inc    edx
  40925c:	jno    0x40927e
  40925e:	jno    0x40929f
  409260:	jmp    0x336b5f65
  409265:	add    BYTE PTR [esi+0x20],dl
  409268:	frstor [ecx]
  40926a:	xchg   esp,eax
  40926b:	sub    edx,edx
  40926d:	sub    dh,cl
  40926f:	jbe    0x409292
  409271:	pop    edi
  409272:	jmp    0x40922a
  409274:	cmp    bh,BYTE PTR [ecx]
  409276:	and    dl,BYTE PTR [edi]
  409278:	push   esp
  409279:	aam    0xdf
  40927b:	add    BYTE PTR ds:0xb806025b,cl
  409281:	push   esi
  409282:	dec    ebp
  409283:	jnp    0x4092a3
  409285:	dec    DWORD PTR [eax+esi*8-0x5e494639]
  40928c:	fcmovu st,st(1)
  40928e:	or     eax,0xb201aab4
  409293:	add    dl,cl
  409295:	ret    
  409296:	popa   
  409297:	sar    BYTE PTR [edx-0x10],1
  40929a:	loope  0x409246
  40929c:	popf   
  40929d:	loope  0x409305
  40929f:	cli    
  4092a0:	xor    BYTE PTR [edx-0x47],dl
  4092a3:	cli    
  4092a4:	fldenv [ebp+0x10]
  4092a7:	mov    WORD PTR [esi+0x3f687038],es
  4092ad:	(bad)  [eax]
  4092af:	sub    eax,esp
  4092b1:	push   es
  4092b2:	push   ds
  4092b3:	bnd jns 0x4092b7
  4092b6:	addr16 dec esi
  4092b8:	cdq    
  4092b9:	shl    DWORD PTR [eax+0x7fa38bf6],cl
  4092bf:	ret    
  4092c0:	icebp  
  4092c1:	int3   
  4092c2:	xor    al,0xc
  4092c4:	inc    edx
  4092c5:	xchg   ecx,eax
  4092c6:	mov    ah,BYTE PTR [edx]
  4092c8:	xchg   edi,eax
  4092c9:	into   
  4092ca:	icebp  
  4092cb:	inc    esi
  4092cc:	popa   
  4092cd:	fdivr  QWORD PTR ds:0x5f2a24bc
  4092d3:	and    eax,0x95c112aa
  4092d8:	icebp  
  4092d9:	in     al,dx
  4092da:	mov    bl,0xed
  4092dc:	bound  ebp,QWORD PTR [esi+0xf]
  4092df:	push   edx
  4092e0:	jmp    0xdfd8:0xcb77208
  4092e7:	pop    ecx
  4092e8:	mov    edi,DWORD PTR [edx+ecx*4-0x56472280]
  4092ef:	sub    ah,BYTE PTR [esi*1+0x284aa930]
  4092f6:	adc    BYTE PTR [edi+0x191f15a6],dh
  4092fc:	fimul  WORD PTR ds:0xe6d7b65d
  409302:	mov    ds:0xfa9bbd1a,eax
  409307:	fistp  WORD PTR [esi-0x7c]
  40930a:	ss popa 
  40930c:	pop    esp
  40930d:	and    edi,DWORD PTR [edi]
  40930f:	rol    BYTE PTR [edi+0x1522740d],cl
  409315:	scas   al,BYTE PTR es:[edi]
  409316:	and    al,0xc6
  409318:	mov    dl,0x24
  40931a:	addr16 (bad) 
  40931c:	xchg   esp,eax
  40931d:	cmp    BYTE PTR [edi+0x56],0xc6
  409321:	js     0x409364
  409323:	xlat   BYTE PTR ds:[ebx]
  409324:	and    DWORD PTR [ecx],ebp
  409326:	pop    esp
  409327:	cli    
  409328:	shl    BYTE PTR [ecx+edx*8-0x34],cl
  40932c:	and    al,0xdf
  40932e:	mov    ebx,0xfcb8b41b
  409333:	jl     0x4092cf
  409335:	int3   
  409336:	add    eax,DWORD PTR [eax+0x4e]
  409339:	pop    edi
  40933a:	push   eax
  40933b:	xor    edx,DWORD PTR [ebx-0x45fbbeb5]
  409341:	outs   dx,DWORD PTR ds:[esi]
  409342:	enter  0x1735,0x95
  409346:	jmp    0xba5161b8
  40934b:	in     al,0x5e
  40934d:	out    0xa6,al
  40934f:	mov    dl,0x8
  409351:	aam    0x95
  409353:	(bad)  
  409355:	lea    ecx,[edx]
  409357:	mov    edx,0x6e6d184b
  40935c:	test   eax,ecx
  40935e:	jmp    0x4093a1
  409360:	into   
  409361:	test   al,0x86
  409363:	dec    ebp
  409364:	cmp    ah,BYTE PTR ds:0xc55f3182
  40936a:	clc    
  40936b:	cwde   
  40936c:	sub    DWORD PTR [esi-0x50],eax
  40936f:	xchg   ebx,eax
  409370:	stos   DWORD PTR es:[edi],eax
  409371:	repz inc edx
  409373:	call   0xecb258df
  409378:	mov    al,0x5c
  40937a:	repz fcmovne st,st(0)
  40937d:	dec    edx
  40937e:	in     ax,dx
  409380:	aas    
  409381:	mov    BYTE PTR [ecx-0x4f31c0a],cl
  409387:	ss jp  0x40939d
  40938a:	or     DWORD PTR ds:0x7f28b027,esp
  409390:	mov    ds:0xf1e43051,al
  409395:	push   es
  409396:	cmp    ecx,DWORD PTR [ecx+0xb0778fc]
  40939c:	jne    0x4093bb
  40939e:	mov    ch,BYTE PTR [ebp+0x6c]
  4093a1:	nop
  4093a2:	fs jne 0x40941b
  4093a5:	mov    WORD PTR [eax-0x5e92ccc1],?
  4093ab:	dec    edx
  4093ac:	push   esi
  4093ad:	es rcl ebp,0x68
  4093b1:	pop    ebx
  4093b2:	(bad)  
  4093b3:	(bad)  
  4093b4:	inc    esp
  4093b5:	nop
  4093b6:	cwde   
  4093b7:	sub    edi,DWORD PTR [esi-0x1e]
  4093ba:	in     eax,dx
  4093bb:	daa    
  4093bc:	test   esp,edi
  4093be:	cmc    
  4093bf:	mov    ecx,0x1157e81e
  4093c4:	or     eax,0xe91a2cb
  4093c9:	adc    eax,0xe635930
  4093ce:	inc    ebx
  4093cf:	pop    ecx
  4093d0:	xor    ebp,esp
  4093d2:	loopne 0x409441
  4093d4:	sti    
  4093d5:	sub    dl,bl
  4093d7:	pop    es
  4093d8:	pop    edi
  4093d9:	adc    eax,0x7e7e75c5
  4093de:	shr    BYTE PTR [ecx],cl
  4093e0:	das    
  4093e1:	test   al,0x21
  4093e3:	pop    ds
  4093e4:	mov    esp,0x975fd00b
  4093e9:	jnp    0x40943f
  4093eb:	dec    ebp
  4093ec:	das    
  4093ed:	sub    al,BYTE PTR [edx]
  4093ef:	and    bh,ah
  4093f1:	fcmovnb st,st(0)
  4093f3:	fisttp WORD PTR [edx]
  4093f5:	xchg   esp,eax
  4093f6:	sbb    esi,DWORD PTR [ecx]
  4093f8:	push   ebx
  4093f9:	mov    ebx,0xebe59dee
  4093fe:	int    0xc6
  409400:	jo     0x409408
  409402:	and    ebp,DWORD PTR [esi]
  409404:	inc    esi
  409405:	cdq    
  409406:	push   cs
  409407:	fs mov cl,0x9a
  40940a:	out    0x31,al
  40940c:	xor    esp,DWORD PTR [ecx]
  40940e:	adc    eax,0x4f20a4a1
  409413:	push   ss
  409414:	out    dx,al
  409415:	fcmovnbe st,st(2)
  409417:	cmc    
  409418:	call   0x7d0bd99a
  40941d:	vfnmsubpd xmm0,xmm3,xmm5,XMMWORD PTR [ebx-0x41051a05]
  409427:	enter  0x1929,0xd1
  40942b:	retf   
  40942c:	retf   0xcbee
  40942f:	je     0x4093eb
  409431:	xchg   ebp,eax
  409432:	pop    esp
  409433:	mov    ch,0xe2
  409435:	addr16 jae 0x40940e
  409438:	mov    WORD PTR [edx],gs
  40943a:	mov    edi,0x581bb8c9
  40943f:	pop    bx
  409441:	push   ebx
  409442:	mov    esi,0xf850eaa5
  409447:	icebp  
  409448:	dec    ecx
  409449:	mov    ah,0xb6
  40944b:	push   edx
  40944c:	push   edi
  40944d:	(bad)  
  40944e:	jl     0x4094c8
  409450:	and    al,0x25
  409452:	call   0x6f98:0xf617900b
  409459:	push   eax
  40945a:	bound  ebp,QWORD PTR [eax]
  40945c:	out    0x19,al
  40945e:	jbe    0x40942f
  409460:	push   esi
  409461:	and    ah,dl
  409463:	dec    ebx
  409464:	rcr    BYTE PTR [ebp+0x1e1fe040],0x84
  40946b:	push   ss
  40946c:	or     ch,BYTE PTR [edi+ebx*2+0x77c9e9a4]
  409473:	inc    edi
  409474:	pop    ebp
  409475:	dec    esp
  409476:	add    bh,BYTE PTR [ecx-0x1e]
  409479:	ret    0x8729
  40947c:	sub    eax,DWORD PTR [ecx-0x5f3823d7]
  409482:	or     eax,0x88cc2719
  409487:	test   al,0x5f
  409489:	repnz xor BYTE PTR cs:[edi],dl
  40948d:	push   esi
  40948e:	test   eax,0xcfd6c8e1
  409493:	pop    ds
  409494:	inc    ebx
  409495:	push   ss
  409496:	arpl   WORD PTR [edx],cx
  409498:	sbb    eax,0x42e96696
  40949d:	pushf  
  40949e:	sub    ch,0x84
  4094a1:	ds adc eax,0x1759a310
  4094a7:	mov    al,BYTE PTR [esp+esi*1]
  4094aa:	aas    
  4094ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094ac:	scas   eax,DWORD PTR es:[edi]
  4094ad:	add    DWORD PTR [edi+0x46f30dd0],ecx
  4094b3:	push   edx
  4094b4:	sbb    ebx,DWORD PTR [edx]
  4094b6:	cmp    BYTE PTR [edi],bh
  4094b8:	dec    ebx
  4094b9:	mov    ch,0x42
  4094bb:	into   
  4094bc:	stos   DWORD PTR es:[edi],eax
  4094bd:	xor    DWORD PTR [edx],esi
  4094bf:	xchg   ecx,eax
  4094c0:	lods   eax,DWORD PTR ds:[esi]
  4094c1:	push   edi
  4094c2:	sbb    BYTE PTR [ecx-0x22912e4f],0x1c
  4094c9:	mov    dh,0xad
  4094cb:	or     eax,0x290a7331
  4094d0:	shl    BYTE PTR [eax-0x3e827f79],1
  4094d6:	es or  eax,0x14df4cc3
  4094dc:	in     al,dx
  4094dd:	jg     0x40953f
  4094df:	sbb    edi,DWORD PTR [esi+esi*1]
  4094e2:	ja     0x40955c
  4094e4:	mov    eax,0xb97ae47f
  4094e9:	loope  0x4094c6
  4094eb:	stc    
  4094ec:	cmp    al,0x5f
  4094ee:	ret    
  4094ef:	and    BYTE PTR [eax-0x1eabf01b],0xa1
  4094f6:	outs   dx,DWORD PTR ds:[esi]
  4094f7:	(bad)  
  4094f8:	ja     0x40956c
  4094fa:	pop    ebx
  4094fb:	xor    DWORD PTR [esp+ecx*2-0x3f],esi
  4094ff:	outs   dx,DWORD PTR ds:[esi]
  409500:	and    al,0x6f
  409502:	and    DWORD PTR [eax+0x66],0xbbb1c61
  409509:	call   0xb9f3465b
  40950e:	sbb    BYTE PTR [ebp-0x14],bh
  409511:	js     0x4094ba
  409513:	mov    dl,0x8e
  409515:	imul   eax,edx,0xffbfbfb9
  40951b:	push   ecx
  40951c:	xchg   esp,eax
  40951d:	out    dx,al
  40951e:	jmp    0x40955b
  409520:	xchg   BYTE PTR [ecx-0x5fcc0c],bl
  409526:	mov    al,ds:0xbf14b0c7
  40952b:	lds    edi,FWORD PTR [esp+ecx*4+0x4c2d4b82]
  409532:	xor    edx,ebx
  409534:	xor    BYTE PTR [eax+0x74],bl
  409537:	sub    eax,0xefe1a57c
  40953c:	or     eax,0xb2944671
  409541:	add    al,BYTE PTR [edi+0x25]
  409544:	outs   dx,BYTE PTR ds:[esi]
  409545:	push   ds
  409546:	std    
  409547:	or     BYTE PTR [edx+0x459ef537],cl
  40954d:	mov    cl,0xe5
  40954f:	(bad)  
  409550:	retf   
  409551:	(bad)  
  409552:	xchg   ebp,eax
  409553:	jae    0x4094e4
  409555:	xor    al,0xd0
  409557:	and    bh,dl
  409559:	dec    esi
  40955a:	inc    eax
  40955b:	out    0x35,al
  40955d:	jle    0x409512
  40955f:	mov    al,ds:0xa0656cb1
  409564:	pusha  
  409565:	jae    0x409580
  409567:	adc    bh,BYTE PTR [edi+0x2cda4136]
  40956d:	push   0x73206884
  409572:	push   ebx
  409573:	or     eax,0x1bb0450e
  409578:	cwde   
  409579:	sub    BYTE PTR [edi-0x21],dh
  40957c:	pop    esp
  40957d:	cwde   
  40957e:	dec    eax
  40957f:	and    eax,0x3f7b340d
  409584:	shl    DWORD PTR [ecx],0xf
  409587:	rcr    BYTE PTR [edx],cl
  409589:	xchg   eax,esp
  40958b:	mov    dh,0xc
  40958d:	sbb    esp,DWORD PTR [ecx]
  40958f:	xchg   BYTE PTR [edx+edx*8],ch
  409592:	dec    edx
  409593:	xor    DWORD PTR [edx-0x34cb1196],esi
  409599:	aam    0x5e
  40959b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40959c:	movzx  eax,si
  40959f:	inc    ebx
  4095a0:	(bad)
  4095a3:	mov    al,0xb5
  4095a5:	mov    ch,0x83
  4095a7:	add    bl,BYTE PTR [bx-0x7d77]
  4095ac:	fst    st(2)
  4095ae:	ret    0x9560
  4095b1:	cmp    ecx,ebx
  4095b3:	sahf   
  4095b4:	jne    0x40954f
  4095b6:	adc    DWORD PTR [edi+0x45],ebx
  4095b9:	adc    ebp,edx
  4095bb:	shr    edi,cl
  4095bd:	clc    
  4095be:	adc    eax,0xe0c86504
  4095c3:	xchg   dh,ch
  4095c5:	into   
  4095c6:	inc    ebx
  4095c7:	(bad)  
  4095c8:	icebp  
  4095c9:	xor    ebp,DWORD PTR [ebx+edx*1-0x3acc3276]
  4095d0:	and    edx,DWORD PTR [edi+ebx*8+0xb]
  4095d4:	frstor [edi-0x6e21c82a]
  4095da:	sub    BYTE PTR [edx-0x8],bh
  4095dd:	mov    eax,ds:0x9e177f3
  4095e2:	imul   ebp,ecx,0xffffffde
  4095e5:	xchg   ebp,eax
  4095e6:	add    bh,cl
  4095e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095e9:	call   0x26315d48
  4095ee:	pmaddwd mm2,QWORD PTR [eax+0x7f]
  4095f2:	cmp    eax,esp
  4095f4:	sub    DWORD PTR [edi+eiz*4-0x35515817],ebx
  4095fb:	cmp    eax,0xae258a73
  409600:	ror    BYTE PTR [ebx-0x5db3872f],1
  409606:	cmp    eax,0x79c7cc08
  40960b:	in     eax,0x8c
  40960d:	call   0xc136:0xacdb2989
  409614:	sub    eax,0x4cd086e7
  409619:	retf   
  40961a:	jnp    0x4095f5
  40961c:	cs cmc 
  40961e:	(bad)  
  409620:	adc    ebx,0xffffffd2
  409623:	outs   dx,BYTE PTR ds:[esi]
  409624:	mov    esp,0xbe7d7e14
  409629:	cwde   
  40962a:	call   0x51a6:0x2751756e
  409631:	outs   dx,DWORD PTR ds:[esi]
  409632:	iret   
  409633:	push   ebx
  409634:	cdq    
  409635:	xchg   esp,eax
  409636:	cwde   
  409637:	lods   eax,DWORD PTR ds:[esi]
  409638:	cld    
  409639:	je     0x409661
  40963b:	inc    edi
  40963c:	sub    eax,DWORD PTR [edx+esi*4]
  40963f:	dec    eax
  409640:	fld    DWORD PTR [ebp+ebx*1-0x2a]
  409644:	mov    eax,0x81bb00a4
  409649:	psadbw mm7,mm0
  40964c:	retf   0xb267
  40964f:	pop    es
  409650:	inc    edx
  409651:	mov    BYTE PTR [ebx],dl
  409653:	lock lea edi,[ebx+0x7]
  409657:	or     ah,ch
  409659:	lea    eax,[edi]
  40965b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40965c:	ror    DWORD PTR [ecx-0x70],0x2f
  409660:	loop   0x4095e7
  409662:	push   es
  409663:	inc    edx
  409664:	fmulp  st(2),st
  409666:	(bad)  
  409667:	or     ch,bh
  409669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40966a:	ins    DWORD PTR es:[edi],dx
  40966b:	data16 cmp al,0xcd
  40966e:	fst    QWORD PTR [esi*1+0x7efa2e4e]
  409675:	int    0x3f
  409677:	add    eax,0x50e4558
  40967c:	call   0xee93:0x95dfc6da
  409683:	mov    ecx,0x140da978
  409688:	inc    esp
  409689:	(bad)  
  40968a:	(bad)  
  40968b:	les    ebx,FWORD PTR [ebx]
  40968d:	adc    BYTE PTR [edx],bh
  40968f:	push   edi
  409690:	daa    
  409691:	in     eax,dx
  409692:	enter  0xe4cd,0x86
  409696:	scas   eax,DWORD PTR es:[edi]
  409697:	ret    0x32aa
  40969a:	fucomip st,st(5)
  40969c:	and    ch,BYTE PTR [eax-0x6]
  40969f:	jno    0x409636
  4096a1:	stc    
  4096a2:	ds nop
  4096a4:	call   0xef29:0x39fe42fd
  4096ab:	mov    dh,0xe4
  4096ad:	push   ds
  4096ae:	push   esi
  4096af:	push   cs
  4096b0:	fisubr WORD PTR [ecx-0x35]
  4096b3:	mov    edx,0x9ce70d41
  4096b8:	mov    ecx,0xe8cd7b4e
  4096bd:	inc    esp
  4096be:	test   al,0xf3
  4096c0:	dec    ecx
  4096c1:	inc    ebp
  4096c2:	arpl   WORD PTR [edi+edx*1-0x2],bp
  4096c6:	push   cs
  4096c7:	sbb    DWORD PTR [ecx-0x6e],0xffffff96
  4096cb:	or     BYTE PTR [ebp-0x54],dl
  4096ce:	test   BYTE PTR [ebp+0x6c],0x49
  4096d2:	inc    edi
  4096d3:	cmp    bl,BYTE PTR [ecx-0x5f]
  4096d6:	add    DWORD PTR [ecx-0x3e4a1763],ecx
  4096dc:	inc    esi
  4096dd:	jg     0x4096a1
  4096df:	add    bl,al
  4096e1:	cmp    BYTE PTR [ebx-0x6f],0x5d
  4096e5:	in     al,0x19
  4096e7:	sbb    eax,0x867adcf7
  4096ec:	push   edx
  4096ed:	test   ebp,ebx
  4096ef:	jno    0x4096bd
  4096f1:	jl     0x409693
  4096f3:	lods   eax,DWORD PTR ds:[esi]
  4096f4:	ins    DWORD PTR es:[edi],dx
  4096f5:	hlt    
  4096f6:	loop   0x40975a
  4096f8:	shl    BYTE PTR [edx],cl
  4096fa:	std    
  4096fb:	and    al,0xf4
  4096fd:	xchg   edi,eax
  4096fe:	(bad)  
  4096ff:	push   eax
  409700:	xchg   edi,eax
  409701:	lahf   
  409702:	imul   esi,DWORD PTR [ecx+0x21],0xfffffff0
  409706:	and    eax,0x3f77c8dc
  40970b:	xor    DWORD PTR [eax+0x60518d8e],esp
  409711:	dec    esp
  409712:	sbb    al,0x13
  409714:	mov    al,ds:0xe23a68a0
  409719:	or     al,BYTE PTR [ecx-0x38c66f11]
  40971f:	mov    edi,0xf3f864e7
  409724:	and    bh,BYTE PTR [ebx+0xc26dfb]
  40972a:	sbb    DWORD PTR [esi],0xb
  40972d:	fwait
  40972e:	ins    DWORD PTR es:[edi],dx
  40972f:	fwait
  409730:	daa    
  409731:	jge    0x409784
  409733:	jmp    0xa761:0xa759a132
  40973a:	jns    0x40970e
  40973c:	jae    0x4097a1
  40973e:	push   cs
  40973f:	fdiv   QWORD PTR [esi]
  409741:	lods   eax,DWORD PTR ds:[esi]
  409742:	stc    
  409743:	push   ebp
  409744:	mov    dh,0x9d
  409746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409747:	inc    ebp
  409748:	jb     0x409768
  40974a:	inc    ecx
  40974b:	xchg   edi,eax
  40974c:	mov    ecx,0x11c8da
  409751:	jecxz  0x4096ec
  409753:	pusha  
  409754:	or     DWORD PTR [edx*8-0x6769209],edi
  40975b:	mov    bl,0x21
  40975d:	jp     0x4097a4
  40975f:	call   DWORD PTR [edi+eiz*2+0x50]
  409763:	fwait
  409764:	jle    0x4097d3
  409766:	push   0x69b1d2b3
  40976b:	test   DWORD PTR [esi-0x9],ebp
  40976e:	inc    edi
  40976f:	mov    al,ds:0x2ab1defa
  409774:	adc    esp,ecx
  409776:	cmp    bl,dl
  409778:	test   al,0x4a
  40977a:	inc    edi
  40977b:	iret   
  40977c:	mov    bh,0xb0
  40977e:	jge    0x4097ca
  409780:	shl    BYTE PTR [edi-0x5d],cl
  409783:	cmp    eax,0x8199e416
  409788:	out    dx,eax
  409789:	mov    ch,0x25
  40978b:	outs   dx,DWORD PTR ds:[esi]
  40978c:	cmp    eax,0x44f47519
  409791:	inc    eax
  409792:	sub    eax,0x2f4f6a43
  409797:	xor    ecx,DWORD PTR ds:0x5c9bd91b
  40979d:	cmp    ebp,DWORD PTR [edi]
  40979f:	jmp    0x3056aafe
  4097a4:	in     eax,0x5d
  4097a6:	mov    ebx,0x5de43f16
  4097ab:	xchg   esp,eax
  4097ac:	mov    al,BYTE PTR [edx+0x65f5f162]
  4097b2:	outs   dx,WORD PTR ds:[esi]
  4097b4:	aam    0x86
  4097b6:	jmp    0xfa09bc7b
  4097bb:	fdiv   DWORD PTR [edx]
  4097bd:	mov    ebx,0x7a183508
  4097c2:	pop    es
  4097c3:	cmp    BYTE PTR [ecx],al
  4097c5:	aaa    
  4097c6:	cmp    dl,BYTE PTR [ebx-0x68ea9e59]
  4097cc:	sahf   
  4097cd:	(bad)  
  4097ce:	in     eax,dx
  4097cf:	inc    ebx
  4097d0:	scas   eax,DWORD PTR es:[edi]
  4097d1:	xchg   ecx,eax
  4097d2:	pop    eax
  4097d3:	stc    
  4097d4:	(bad)  
  4097d5:	jns    0x40979a
  4097d7:	into   
  4097d8:	xchg   ecx,eax
  4097d9:	inc    esi
  4097da:	inc    edx
  4097db:	fld    DWORD PTR [edi-0x1d]
  4097de:	and    ah,bh
  4097e0:	das    
  4097e1:	and    al,0xc1
  4097e3:	imul   cl
  4097e5:	jecxz  0x4097ea
  4097e7:	ds or  eax,0x736ff6d5
  4097ed:	or     ah,BYTE PTR [eax-0x40]
  4097f0:	cdq    
  4097f1:	jo     0x4097bd
  4097f3:	aas    
  4097f4:	es dec esi
  4097f6:	stos   DWORD PTR es:[edi],eax
  4097f7:	xchg   esi,eax
  4097f8:	inc    al
  4097fa:	in     eax,0x5e
  4097fc:	cmp    bh,BYTE PTR [ebx-0x3c3443a]
  409802:	sbb    ah,BYTE PTR [edi+0x5d95bd32]
  409808:	shl    BYTE PTR [eax-0x4e6747bc],0x21
  40980f:	dec    esi
  409810:	sar    al,0xaa
  409813:	and    BYTE PTR [ecx-0x2ae8b59c],bh
  409819:	inc    edi
  40981a:	or     eax,0x68235070
  40981f:	popf   
  409820:	out    0x80,al
  409822:	repz inc eax
  409824:	imul   BYTE PTR [ebx]
  409826:	fidiv  WORD PTR [eax+0x5c5aa3b]
  40982c:	js     0x4097ae
  40982e:	stos   DWORD PTR es:[edi],eax
  40982f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409830:	test   BYTE PTR [edx-0x3fe9efd4],0x7d
  409837:	hlt    
  409838:	mov    esi,0x77151663
  40983d:	loopne 0x40987a
  40983f:	sbb    ah,BYTE PTR [ebx-0x43]
  409842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409843:	adc    eax,0x17266a7e
  409848:	(bad)  
  409849:	rcr    BYTE PTR [esi],0x65
  40984c:	dec    ebp
  40984d:	and    bl,BYTE PTR [ebx-0x2]
  409850:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409851:	push   esi
  409852:	(bad)  
  409853:	jp     0x409882
  409855:	mov    bl,0xb7
  409857:	cld    
  409858:	sub    al,0x74
  40985a:	cmc    
  40985b:	ret    0xd961
  40985e:	daa    
  40985f:	cmp    eax,0x8e2208ba
  409864:	nop
  409865:	idiv   DWORD PTR [ecx]
  409867:	push   esp
  409868:	and    BYTE PTR [edi],ch
  40986a:	push   edx
  40986b:	mov    edi,0xf389c32e
  409870:	sub    DWORD PTR [edi+0x65],0xc1a7369e
  409877:	sbb    eax,0xc00c61fa
  40987c:	push   ecx
  40987d:	inc    esi
  40987e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40987f:	lods   al,BYTE PTR ds:[esi]
  409880:	mov    ah,BYTE PTR [edx-0x7d]
  409883:	ficom  WORD PTR [edx]
  409885:	popf   
  409886:	cli    
  409887:	popa   
  409888:	jbe    0x409852
  40988a:	xchg   ebx,eax
  40988b:	and    BYTE PTR [eax],dh
  40988d:	jno    0x4098b8
  40988f:	out    dx,eax
  409890:	imul   eax,DWORD PTR [ebx-0x58513f12],0x25c051b4
  40989a:	add    dl,BYTE PTR [edi-0x75a97574]
  4098a0:	test   BYTE PTR [esi+0x67939d81],ch
  4098a6:	(bad)  
  4098a7:	fdivr  QWORD PTR [ebx+ebx*4]
  4098aa:	std    
  4098ab:	ins    BYTE PTR es:[edi],dx
  4098ac:	aad    0x4e
  4098ae:	addr16 in al,dx
  4098b0:	pop    es
  4098b1:	nop
  4098b2:	inc    ecx
  4098b3:	(bad)  
  4098b4:	push   esp
  4098b5:	mov    cl,0x2c
  4098b7:	stc    
  4098b8:	jb     0x409920
  4098ba:	pusha  
  4098bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098bc:	fwait
  4098bd:	adc    edx,DWORD PTR ds:0x8bec485e
  4098c3:	adc    DWORD PTR [ebx-0x6a],ecx
  4098c6:	jb     0x409923
  4098c8:	xor    eax,0x3410c5b
  4098cd:	(bad)  
  4098ce:	pop    ss
  4098cf:	(bad)  
  4098d1:	outs   dx,BYTE PTR ds:[esi]
  4098d2:	dec    edx
  4098d3:	sahf   
  4098d4:	cdq    
  4098d5:	int    0xea
  4098d7:	xchg   ecx,eax
  4098d8:	xchg   ebx,eax
  4098d9:	xchg   BYTE PTR ds:0x8d7a871,bl
  4098df:	pop    edx
  4098e0:	sbb    DWORD PTR [esp],esi
  4098e3:	ret    0x91a3
  4098e6:	int    0xf3
  4098e8:	mov    ebx,0x40bf0ef
  4098ed:	add    BYTE PTR [eax*2-0x3572422b],al
  4098f4:	xchg   edx,eax
  4098f5:	xor    BYTE PTR [edi+0x24],ah
  4098f8:	(bad)
  4098fb:	outs   dx,BYTE PTR ds:[esi]
  4098fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098fd:	add    esi,DWORD PTR [esi+0x31883126]
  409903:	and    eax,0xb50f7f91
  409908:	daa    
  409909:	mov    edx,0x5206f596
  40990e:	sbb    BYTE PTR [esi],0x74
  409911:	jle    0x4098f3
  409913:	inc    ecx
  409914:	push   eax
  409915:	popf   
  409916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409917:	jl     0x409907
  409919:	call   0x2e90fd5a
  40991e:	call   0x27ea:0xe8e847c9
  409925:	idiv   DWORD PTR [eax-0x7f4f92be]
  40992b:	sbb    DWORD PTR [edx+0x52cda11b],edx
  409931:	add    BYTE PTR [ebx-0x97967b6],0x60
  409938:	leave  
  409939:	cmp    ch,dh
  40993b:	sub    dh,bh
  40993d:	push   edx
  40993e:	cmc    
  40993f:	les    edx,FWORD PTR [ecx+edi*2+0x72]
  409943:	push   es
  409944:	xchg   DWORD PTR [ebp-0x55],esi
  409947:	cmp    esp,DWORD PTR [esi-0x666b8048]
  40994d:	retf   0x6ce8
  409950:	sbb    DWORD PTR ds:0xcfa1328,ecx
  409956:	mov    ds:0x4fd033f8,al
  40995b:	or     al,0xfc
  40995d:	pop    es
  40995e:	or     al,0x25
  409960:	pop    eax
  409961:	adc    eax,0x5984e537
  409966:	mov    eax,0x75b83261
  40996b:	mov    ds:0xb19ac408,eax
  409970:	sub    al,0x3a
  409972:	ret    0xac5d
  409975:	jmp    0x3e20:0x186db1a5
  40997c:	mov    eax,ds:0xc4d2ac87
  409981:	and    al,0xf2
  409983:	inc    edx
  409984:	sbb    bh,BYTE PTR [ebx]
  409986:	enter  0xb50c,0x6b
  40998a:	stc    
  40998b:	clc    
  40998c:	es mov dl,0xe4
  40998f:	jo     0x4099aa
  409991:	mov    edx,0xf7d564bf
  409996:	mov    edx,0x88007c23
  40999b:	stos   DWORD PTR es:[edi],eax
  40999c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40999d:	ret    0x10ef
  4099a0:	cwde   
  4099a1:	jp     0x409a19
  4099a3:	and    BYTE PTR ss:[ecx],0xe4
  4099a7:	mov    dl,0x13
  4099a9:	dec    edi
  4099aa:	cmp    cl,BYTE PTR [eax-0x47a9c5df]
  4099b0:	shl    DWORD PTR [ebx],1
  4099b2:	repnz add eax,0xbddce467
  4099b8:	gs add dh,al
  4099bb:	lahf   
  4099bc:	aad    0x31
  4099be:	jmp    0xcb35:0x9158c4e6
  4099c5:	xchg   bl,dh
  4099c7:	add    DWORD PTR [esi+0x56c6c802],edx
  4099cd:	outs   dx,DWORD PTR ds:[esi]
  4099ce:	mov    ecx,0xe180c563
  4099d3:	(bad)  
  4099d5:	mov    esi,0x9792f7d9
  4099da:	adc    BYTE PTR [ebx],bl
  4099dc:	pop    ecx
  4099dd:	das    
  4099de:	pop    esp
  4099df:	lods   eax,DWORD PTR ds:[esi]
  4099e0:	fiadd  WORD PTR [esi+0x129f0937]
  4099e6:	popa   
  4099e7:	and    bh,BYTE PTR [ebx]
  4099e9:	loopne 0x409a3d
  4099eb:	jecxz  0x4099e8
  4099ed:	imul   edx,eax,0xffffffa7
  4099f0:	mov    ecx,0xce92516e
  4099f5:	sbb    cl,dl
  4099f7:	push   cs
  4099f8:	int3   
  4099f9:	sbb    eax,0x256288a3
  4099fe:	jae    0x4099db
  409a00:	out    0xf5,al
  409a02:	jecxz  0x409a5b
  409a04:	pop    ebx
  409a05:	sbb    al,BYTE PTR [esi]
  409a07:	sbb    BYTE PTR [ebp+0x2d2b2e3b],0x9
  409a0e:	je     0x4099c7
  409a10:	and    ecx,edi
  409a12:	outs   dx,BYTE PTR ds:[esi]
  409a13:	out    dx,eax
  409a14:	call   0xfa8f929e
  409a19:	push   es
  409a1a:	inc    ebx
  409a1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a1c:	fisttp QWORD PTR [edi]
  409a1e:	xor    al,0x9f
  409a20:	call   0x8642:0x10c8a7df
  409a27:	adc    cl,dl
  409a29:	out    0xab,eax
  409a2b:	fdivr  QWORD PTR [edi+0x19]
  409a2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a2f:	push   esi
  409a30:	loop   0x409a71
  409a32:	aaa    
  409a33:	jge    0x409a92
  409a35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a36:	les    eax,FWORD PTR [eax+0x10]
  409a39:	sub    eax,DWORD PTR [edi+0x2a]
  409a3c:	jg     0x409a42
  409a3e:	test   DWORD PTR [ebp+0x7ebcf487],ebp
  409a44:	sub    al,0xb7
  409a46:	pop    es
  409a47:	dec    DWORD PTR fs:[ecx-0x60]
  409a4b:	mov    ds:0xa6abca8,al
  409a50:	mov    ecx,0xc549f43a
  409a55:	loope  0x409a58
  409a57:	retf   0xbb6a
  409a5a:	popf   
  409a5b:	mov    ecx,0xbe5f33b6
  409a60:	xchg   DWORD PTR [esi],ebp
  409a62:	inc    edx
  409a63:	mov    ch,0x8a
  409a65:	jmp    0x40511aa8
  409a6a:	fs ds lahf 
  409a6d:	push   ebx
  409a6e:	mov    ecx,es
  409a70:	push   esp
  409a71:	push   es
  409a72:	cmp    ebx,ebx
  409a74:	sub    bh,BYTE PTR [esi+0x75]
  409a77:	outs   dx,BYTE PTR ds:[esi]
  409a78:	(bad)  
  409a79:	shl    BYTE PTR [ebx+0x48f22a01],cl
  409a7f:	out    0xda,eax
  409a81:	(bad)  
  409a82:	aam    0x16
  409a84:	repz jb 0x409a1d
  409a87:	mov    dl,0xcc
  409a89:	shl    edx,1
  409a8b:	lock js 0x409a5f
  409a8e:	mov    esp,0xff588a6c
  409a93:	push   esp
  409a94:	mov    cl,0x57
  409a96:	cmp    al,BYTE PTR ds:0x18ce7784
  409a9c:	push   cs
  409a9d:	popf   
  409a9e:	push   eax
  409a9f:	test   DWORD PTR [ebx-0x5b],edi
  409aa2:	xchg   ecx,eax
  409aa3:	lea    ebx,[ebx+0x73]
  409aa6:	ja     0x409aa6
  409aa8:	pop    ebx
  409aa9:	adc    eax,0x3ced8341
  409aae:	popa   
  409aaf:	sahf   
  409ab0:	jmp    0x409b0a
  409ab2:	lahf   
  409ab3:	cmp    BYTE PTR [ebp+0x3ecc0c6b],bh
  409ab9:	jnp    0x409ac5
  409abb:	mov    edx,0x9021f48d
  409ac0:	and    ecx,DWORD PTR [eax+ebp*4-0x3e302707]
  409ac7:	pop    ss
  409ac8:	imul   ebp,DWORD PTR [esi+0x1155bab1],0xfffffff0
  409acf:	jae    0x409adb
  409ad1:	rcl    DWORD PTR [ecx],cl
  409ad3:	cmp    al,0x71
  409ad5:	dec    edx
  409ad6:	mov    edx,0xc3c6e604
  409adb:	aad    0x41
  409add:	pushf  
  409ade:	adc    DWORD PTR [edi],edi
  409ae0:	das    
  409ae1:	cmp    eax,DWORD PTR [eax+edx*4]
  409ae4:	lods   al,BYTE PTR ds:[esi]
  409ae5:	push   ecx
  409ae6:	and    ebx,eax
  409ae8:	sub    eax,0x3343b448
  409aed:	push   es
  409aee:	test   eax,0xde6c69ed
  409af3:	fwait
  409af4:	push   0x43
  409af6:	cwde   
  409af7:	or     BYTE PTR ds:0xdb694225,cl
  409afd:	mov    al,0x0
  409aff:	in     eax,0xb1
  409b01:	iret   
  409b02:	push   ebx
  409b03:	lods   al,BYTE PTR ds:[esi]
  409b04:	mov    cl,0xa5
  409b06:	mov    ds:0x935ef230,eax
  409b0b:	add    BYTE PTR [ebx-0x44],ch
  409b0e:	inc    ebp
  409b0f:	iret   
  409b10:	sbb    eax,0x1e9aec9
  409b15:	jge    0x409b6a
  409b17:	adc    ah,0xa9
  409b1a:	mov    eax,0x216741b7
  409b1f:	cli    
  409b20:	add    dl,BYTE PTR [eax+0x450c2cfb]
  409b26:	add    eax,0x8e8003f4
  409b2b:	leave  
  409b2c:	fist   WORD PTR [ebp-0x5acb9cf4]
  409b32:	sub    DWORD PTR [edx],edi
  409b34:	pop    esi
  409b35:	out    dx,al
  409b36:	push   cs
  409b37:	cmc    
  409b38:	dec    edi
  409b39:	(bad)  
  409b3a:	cwde   
  409b3b:	xlat   BYTE PTR ds:[ebx]
  409b3c:	imul   BYTE PTR [edx+0x7a]
  409b3f:	dec    ebx
  409b40:	sub    BYTE PTR [ebx+0x442befad],0x41
  409b47:	lds    esp,FWORD PTR [edx-0x51]
  409b4a:	jp     0x409b75
  409b4c:	jmp    0xfd20:0x17e39b63
  409b53:	mov    dx,0xd1c3
  409b57:	scas   eax,DWORD PTR es:[di]
  409b59:	add    esi,esi
  409b5b:	jecxz  0x409bc2
  409b5d:	hlt    
  409b5e:	addr16 daa 
  409b60:	jp     0x409b91
  409b62:	in     al,dx
  409b63:	mov    BYTE PTR [esp+edx*1],dl
  409b66:	fs inc edi
  409b68:	push   es
  409b69:	repz or bl,BYTE PTR [ebx+0x372cba7e]
  409b70:	cmp    dh,dh
  409b72:	loopne 0x409b2b
  409b74:	test   DWORD PTR [edi],eax
  409b76:	mov    ds:0xaff13f41,eax
  409b7b:	js     0x409bcc
  409b7d:	in     al,dx
  409b7e:	mov    gs,esp
  409b80:	inc    eax
  409b81:	xchg   DWORD PTR [ecx+0x63acfaff],esp
  409b87:	mov    ds:0xdce14666,eax
  409b8c:	push   0x84dd7a65
  409b91:	sub    al,0x3f
  409b93:	daa    
  409b94:	and    esp,DWORD PTR [edx+edx*8-0x3]
  409b98:	ds (bad) 
  409b9a:	mov    ebx,0x8df63735
  409b9f:	xor    eax,ebx
  409ba1:	and    eax,0x9a4f5ff3
  409ba6:	lock das 
  409ba8:	inc    eax
  409ba9:	pop    esp
  409baa:	pop    ss
  409bab:	lods   eax,DWORD PTR ds:[esi]
  409bac:	cdq    
  409bad:	mov    eax,ds:0xc57548fa
  409bb2:	xchg   edx,eax
  409bb3:	in     al,0x4c
  409bb5:	repz int3 
  409bb7:	leave  
  409bb8:	push   ss
  409bb9:	les    ebp,FWORD PTR [esp+edx*1+0x211524af]
  409bc0:	jp     0x409bab
  409bc2:	jno    0x409bbc
  409bc4:	mov    WORD PTR [ecx-0x3de4b774],fs
  409bca:	xor    bh,bh
  409bcc:	push   edi
  409bcd:	xchg   esi,eax
  409bce:	add    edi,0x44
  409bd1:	hlt    
  409bd2:	je     0x409c43
  409bd4:	cwde   
  409bd5:	xor    DWORD PTR [edx-0x3b],ecx
  409bd8:	test   eax,0x6600a50c
  409bdd:	ret    
  409bde:	sbb    BYTE PTR [eax-0x404511eb],dl
  409be4:	repz idiv BYTE PTR [ebp+eax*8-0x5259a60]
  409bec:	pop    ebp
  409bed:	out    0xe1,al
  409bef:	into   
  409bf0:	mov    ah,0xe8
  409bf2:	push   ebx
  409bf3:	scas   al,BYTE PTR es:[edi]
  409bf4:	inc    edx
  409bf5:	pop    ecx
  409bf6:	xchg   ecx,eax
  409bf7:	dec    ebp
  409bf8:	outs   dx,BYTE PTR ds:[esi]
  409bf9:	test   al,0x7b
  409bfb:	arpl   WORD PTR [edi-0x58],ax
  409bfe:	jmp    0x594a:0xb810f04b
  409c05:	ins    DWORD PTR es:[edi],dx
  409c06:	jl     0x409c74
  409c08:	mov    ah,0x43
  409c0a:	adc    cl,dl
  409c0c:	pop    edi
  409c0d:	fist   DWORD PTR [ebx+0x21]
  409c10:	fstp   DWORD PTR [ecx-0x6468541f]
  409c16:	cmp    edi,ebx
  409c18:	cli    
  409c19:	jmp    0xe3cd:0x4cfe06e9
  409c20:	mov    ecx,0x1e86be9e
  409c25:	(bad)  
  409c26:	jnp    0x409be3
  409c28:	test   eax,0x99f23e3c
  409c2d:	and    eax,DWORD PTR [edx-0x18d5082c]
  409c33:	bswap  ebx
  409c35:	sbb    ebx,DWORD PTR [ebp+ebp*2-0x272dc59d]
  409c3c:	inc    eax
  409c3d:	sbb    DWORD PTR [ebp-0x1f],esp
  409c40:	jmp    0xf78174e1
  409c45:	lock dec edi
  409c47:	sub    eax,0x9f86d7a2
  409c4c:	xchg   DWORD PTR [edx],ebx
  409c4e:	push   ebx
  409c4f:	jmp    0x7283:0xa6010095
  409c56:	out    dx,eax
  409c57:	outs   dx,BYTE PTR ds:[esi]
  409c58:	enter  0xd1f,0x86
  409c5c:	jae    0x409bf3
  409c5e:	mov    eax,0x81c36d62
  409c63:	mov    ebp,0xcbd5b305
  409c68:	jl     0x409c93
  409c6a:	das    
  409c6b:	inc    edi
  409c6c:	sti    
  409c6d:	sbb    DWORD PTR [eax-0x46c1a77b],edi
  409c73:	aad    0x6d
  409c75:	clc    
  409c76:	xor    eax,0xb8be3dc2
  409c7b:	(bad)  
  409c7c:	popa   
  409c7d:	div    DWORD PTR [esi]
  409c7f:	sbb    al,BYTE PTR [edi]
  409c81:	aas    
  409c82:	rcr    BYTE PTR [esi+0x76],cl
  409c85:	adc    ecx,edx
  409c87:	push   cs
  409c88:	gs leave 
  409c8a:	push   eax
  409c8b:	(bad)  
  409c8c:	aad    0x34
  409c8e:	sub    al,0xec
  409c90:	rcl    BYTE PTR [esi+0x58861ed2],0x17
  409c97:	std    
  409c98:	lods   al,BYTE PTR ds:[esi]
  409c99:	jmp    0xde2726d3
  409c9e:	daa    
  409c9f:	pusha  
  409ca0:	lock dec edi
  409ca2:	and    dl,BYTE PTR [esi+0x4d]
  409ca5:	jmp    0x409cab
  409ca7:	mov    ebp,0x1493fcb
  409cac:	jb     0x409d00
  409cae:	in     al,dx
  409caf:	mov    dh,0x35
  409cb1:	out    dx,al
  409cb2:	mov    bh,0x81
  409cb4:	pop    eax
  409cb5:	inc    esp
  409cb6:	test   al,0xac
  409cb8:	test   DWORD PTR [edx],ecx
  409cba:	hlt    
  409cbb:	call   0x83de9475
  409cc0:	loopne 0x409d3b
  409cc2:	or     eax,0x6847ec5d
  409cc7:	jmp    FWORD PTR [ecx+0x1a]
  409cca:	mov    eax,ds:0x6a390686
  409ccf:	iret   
  409cd0:	and    DWORD PTR [esi+edx*4+0xe],ebx
  409cd4:	adc    DWORD PTR [edx-0x4d3e38a6],ecx
  409cda:	mov    eax,ds:0x69328531
  409cdf:	das    
  409ce0:	mov    bh,0x32
  409ce2:	dec    edx
  409ce3:	hlt    
  409ce4:	je     0x409c72
  409ce6:	scas   eax,DWORD PTR es:[edi]
  409ce7:	scas   eax,DWORD PTR es:[edi]
  409ce8:	stos   DWORD PTR es:[edi],eax
  409ce9:	inc    ecx
  409cea:	mov    BYTE PTR [eax-0x162cac13],dl
  409cf0:	jmp    0x409ca4
  409cf2:	jcxz   0x409d70
  409cf5:	mov    al,ds:0x80e4ad42
  409cfa:	adc    dh,al
  409cfc:	or     al,0xa8
  409cfe:	and    ah,BYTE PTR cs:[edx]
  409d01:	mov    esi,ecx
  409d03:	jecxz  0x409cdd
  409d05:	inc    eax
  409d06:	pusha  
  409d07:	ret    0xe3
  409d0a:	aam    0xdd
  409d0c:	fadd   DWORD PTR [ebp-0x55368ac3]
  409d12:	sbb    al,0xfe
  409d14:	(bad)  [eax+eax*8-0x5b]
  409d18:	push   edx
  409d19:	ficom  DWORD PTR [edi]
  409d1b:	scas   eax,DWORD PTR es:[edi]
  409d1c:	cmp    DWORD PTR [edi-0x2fdf3c72],esi
  409d22:	adc    ch,BYTE PTR [ebx-0x3d]
  409d25:	ret    0x51e7
  409d28:	cmc    
  409d29:	sub    edi,eax
  409d2b:	mov    ebx,0x6188da73
  409d30:	data16 stc 
  409d32:	xchg   ebp,eax
  409d33:	mov    esp,0x564d11fe
  409d38:	and    BYTE PTR ds:0x3c890342,bh
  409d3e:	dec    ecx
  409d3f:	inc    eax
  409d40:	adc    eax,0x3ce683ff
  409d45:	lea    ebp,[eax+0x79]
  409d48:	jo     0x409d70
  409d4a:	inc    esi
  409d4b:	mov    ds:0x5e30e461,al
  409d50:	int    0x5
  409d52:	sbb    esi,edi
  409d54:	test   BYTE PTR [edi+0x212cbc],bh
  409d5a:	neg    BYTE PTR [ebp+edi*8+0x49]
  409d5e:	push   ds
  409d5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d60:	adc    al,0xab
  409d62:	push   0xffffffc0
  409d64:	or     al,0x6b
  409d66:	cwde   
  409d67:	(bad)
  409d6a:	sub    DWORD PTR [edx-0x3],esi
  409d6d:	fwait
  409d6e:	pop    esp
  409d6f:	test   al,0xbf
  409d71:	(bad)  
  409d72:	pop    esi
  409d73:	xchg   ecx,eax
  409d74:	cwde   
  409d75:	out    dx,al
  409d76:	das    
  409d77:	pop    ds
  409d78:	xchg   esp,eax
  409d79:	pop    edx
  409d7a:	leave  
  409d7b:	ins    BYTE PTR es:[edi],dx
  409d7c:	push   cs
  409d7d:	xor    cl,cl
  409d7f:	mov    al,ds:0xf27c6e5b
  409d84:	fiadd  DWORD PTR [ebp+0x54]
  409d87:	cmp    BYTE PTR [ebx],dl
  409d89:	xor    al,0xe6
  409d8b:	(bad)  
  409d8c:	fdivr  DWORD PTR [ebp-0x71ee8549]
  409d92:	adc    ebx,esi
  409d94:	(bad)  
  409d96:	call   0x174e:0x9b503195
  409d9d:	push   ebx
  409d9e:	lahf   
  409d9f:	adc    DWORD PTR [ebx-0x4],ecx
  409da2:	aad    0x9a
  409da4:	(bad)  [ecx-0x56]
  409da7:	and    eax,0x10354f82
  409dac:	jno    0x409deb
  409dae:	shl    DWORD PTR [ecx],cl
  409db0:	mov    WORD PTR [ecx-0x66],ds
  409db3:	cmp    DWORD PTR [eax+eax*2-0x10c7e980],edi
  409dba:	cmp    DWORD PTR [ecx],edi
  409dbc:	ret    0xa970
  409dbf:	imul   ebp,DWORD PTR [eax*4+0x7b2c5688],0x2c
  409dc7:	sub    edx,DWORD PTR [eax-0x5db4eb8]
  409dcd:	int    0x5f
  409dcf:	repz mov cl,0xb
  409dd2:	fadd   st,st(6)
  409dd4:	xchg   ebp,eax
  409dd5:	out    0x3c,al
  409dd7:	out    0xbd,al
  409dd9:	(bad)  
  409dda:	xchg   esi,eax
  409ddb:	jp     0x409e44
  409ddd:	jno    0x409df2
  409ddf:	push   esi
  409de0:	stos   DWORD PTR es:[edi],eax
  409de1:	popa   
  409de2:	sbb    ah,dl
  409de4:	jbe    0x409e45
  409de6:	and    eax,0x73568f9d
  409deb:	pop    esi
  409dec:	dec    esp
  409ded:	pop    ecx
  409dee:	mov    esi,0x740ca61e
  409df3:	xchg   dl,bh
  409df5:	push   0xffffffcf
  409df7:	and    dh,0x13
  409dfa:	test   al,0x99
  409dfc:	or     edx,DWORD PTR [ecx]
  409dfe:	fs cmc 
  409e00:	adc    ebx,edi
  409e02:	rcl    DWORD PTR [ebx],1
  409e04:	sbb    eax,0x18e4a481
  409e09:	lahf   
  409e0a:	div    BYTE PTR [edx+0x2428ecb7]
  409e10:	in     eax,dx
  409e11:	add    al,0xf4
  409e13:	mov    esi,0x2d515270
  409e18:	xor    al,0x86
  409e1a:	cmp    al,0x5d
  409e1c:	mov    dh,0x78
  409e1e:	cmp    DWORD PTR [ebx-0x4d],esp
  409e21:	dec    edi
  409e22:	jg     0x409e2b
  409e24:	icebp  
  409e25:	repnz mov WORD PTR [ebx+0x3d],?
  409e29:	(bad)  
  409e2a:	push   ds
  409e2b:	aas    
  409e2c:	push   0xffffffa7
  409e2e:	ficomp WORD PTR [ebx-0x5a6f4327]
  409e34:	xchg   BYTE PTR [ecx+0x63f5740e],bh
  409e3a:	lods   al,BYTE PTR ds:[esi]
  409e3b:	cmc    
  409e3c:	adc    eax,0x79d02655
  409e41:	pop    edi
  409e42:	sub    eax,0xec5d0f64
  409e47:	daa    
  409e48:	sbb    al,0x7b
  409e4a:	iret   
  409e4b:	mov    BYTE PTR [edx],0xe4
  409e4e:	xor    DWORD PTR [ebp+ebx*4+0x66],edx
  409e52:	fisub  WORD PTR [edi]
  409e54:	dec    edi
  409e55:	pop    edi
  409e56:	or     ecx,DWORD PTR [edi-0x3d68a593]
  409e5c:	xchg   DWORD PTR [ebx-0x17],ebx
  409e5f:	imul   esi,DWORD PTR ss:[ecx-0x801cbcd],0x941908e3
  409e6a:	daa    
  409e6b:	cmp    DWORD PTR [esi],ebp
  409e6d:	jno    0x409e41
  409e6f:	int3   
  409e70:	mov    ebx,0x736e6a65
  409e75:	xor    al,0x1c
  409e77:	out    dx,eax
  409e78:	jmp    DWORD PTR [ebx]
  409e7a:	cdq    
  409e7b:	shl    BYTE PTR [eax+eiz*4-0x2a],0x4f
  409e80:	std    
  409e81:	pop    es
  409e82:	mov    ds:0xb93292bd,al
  409e87:	pusha  
  409e88:	enter  0xe890,0x69
  409e8c:	push   es
  409e8d:	adc    BYTE PTR [eax],bh
  409e8f:	stos   BYTE PTR es:[edi],al
  409e90:	fadd   QWORD PTR gs:[ebp-0x80]
  409e94:	sub    DWORD PTR [ebx-0x6e],esi
  409e97:	mov    ch,0x44
  409e99:	xor    DWORD PTR [ebx-0x5c],0x4e750a5e
  409ea0:	push   ds
  409ea1:	inc    ecx
  409ea2:	leave  
  409ea3:	popf   
  409ea4:	sub    eax,0x6d697e01
  409ea9:	hlt    
  409eaa:	cdq    
  409eab:	or     eax,0xfd123479
  409eb0:	pushf  
  409eb1:	ret    
  409eb2:	test   DWORD PTR [edi+0x40],ecx
  409eb5:	test   DWORD PTR [edi-0x19d04eff],0xb78f2450
  409ebf:	adc    al,bl
  409ec1:	sar    BYTE PTR [ebx+0x630cce04],1
  409ec7:	mov    bh,0x72
  409ec9:	rol    BYTE PTR [ecx],0x2c
  409ecc:	cli    
  409ecd:	jle    0x409e58
  409ecf:	loop   0x409f4c
  409ed1:	push   ecx
  409ed2:	sbb    eax,0xb20369fc
  409ed7:	push   ss
  409ed8:	mov    dh,0xbd
  409eda:	jmp    0x409eda
  409edc:	enter  0xfc23,0x9e
  409ee0:	js     0x409ec4
  409ee2:	inc    esp
  409ee3:	fwait
  409ee4:	sub    ah,BYTE PTR [ebp+0x12e51f09]
  409eea:	jg     0x409ef8
  409eec:	fld    TBYTE PTR [edi+0x19591e23]
  409ef2:	(bad)  
  409ef3:	pop    eax
  409ef4:	inc    edx
  409ef5:	xchg   esp,eax
  409ef6:	push   ecx
  409ef7:	bound  edx,QWORD PTR [edi+0x6c]
  409efa:	inc    ebp
  409efb:	cli    
  409efc:	inc    ecx
  409efd:	add    BYTE PTR [ecx+0x84c317a],ch
  409f03:	mov    edi,0x45230978
  409f08:	in     eax,dx
  409f09:	xor    eax,0x23da6f43
  409f0e:	or     al,0xc6
  409f10:	mov    DWORD PTR ds:0xf009c2d8,ecx
  409f16:	nop
  409f17:	dec    edx
  409f18:	imul   ebp,DWORD PTR [ebx-0x38],0xae29716b
  409f1f:	pop    esp
  409f20:	inc    ebp
  409f21:	xlat   BYTE PTR ds:[ebx]
  409f22:	dec    edi
  409f23:	push   edi
  409f24:	pop    edx
  409f25:	mov    esi,0x477830d1
  409f2a:	push   eax
  409f2b:	mov    al,0x93
  409f2d:	sbb    ebp,DWORD PTR [esi+ebx*8]
  409f30:	pop    ecx
  409f31:	xchg   esp,ebx
  409f33:	aam    0xdd
  409f35:	clc    
  409f36:	test   DWORD PTR [edi-0x28],eax
  409f39:	inc    edx
  409f3a:	test   eax,0x359815df
  409f3f:	arpl   WORD PTR [ecx],di
  409f41:	xchg   BYTE PTR [eax-0x18444e77],cl
  409f47:	jecxz  0x409f1c
  409f49:	push   edx
  409f4a:	cmp    BYTE PTR [edi],cl
  409f4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f4d:	and    BYTE PTR [eax+eiz*2],ah
  409f50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f51:	xchg   ecx,eax
  409f52:	adc    BYTE PTR [ebx-0x14],ch
  409f55:	aam    0x55
  409f57:	sar    BYTE PTR [edx-0x3b],0x46
  409f5b:	inc    edi
  409f5c:	(bad)  
  409f5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f5f:	xor    DWORD PTR [esi],0x190550c3
  409f65:	bound  edx,QWORD PTR [ecx-0x6bc47de2]
  409f6b:	cs dec edi
  409f6d:	(bad)  
  409f6e:	jnp    0x409f84
  409f70:	call   0xff78:0x16564fa
  409f77:	test   al,0xbe
  409f79:	adc    esp,esp
  409f7b:	movntps XMMWORD PTR [ebx],xmm5
  409f7e:	xchg   ebp,eax
  409f7f:	aam    0xbf
  409f81:	sbb    ch,BYTE PTR [eax]
  409f83:	addr16 daa 
  409f85:	test   eax,0x8856a383
  409f8a:	daa    
  409f8b:	sbb    al,0x71
  409f8d:	dec    ebx
  409f8e:	mov    ch,BYTE PTR [edi]
  409f90:	fwait
  409f91:	or     BYTE PTR [ebx],al
  409f93:	mov    al,ds:0xb1a384ad
  409f98:	test   DWORD PTR [eax+0x7a],esp
  409f9b:	jbe    0x409ffd
  409f9d:	jg     0x40a00a
  409f9f:	std    
  409fa0:	lods   eax,DWORD PTR ds:[esi]
  409fa1:	lock push ebx
  409fa3:	lds    ebx,FWORD PTR [ebx-0x524b7bd1]
  409fa9:	mov    ch,0xac
  409fab:	aam    0xd6
  409fad:	mov    DWORD PTR [edi-0x5be17b44],edx
  409fb3:	adc    BYTE PTR [eax-0x31],al
  409fb6:	ja     0x409fee
  409fb8:	pusha  
  409fb9:	lock fimul WORD PTR [esi]
  409fbc:	adc    dh,cl
  409fbe:	shr    BYTE PTR [edx+0x52],0xe6
  409fc2:	or     DWORD PTR ds:0x53c0ae71,edi
  409fc8:	inc    eax
  409fc9:	rcr    DWORD PTR [esi+0x6e47e634],0x6f
  409fd0:	sahf   
  409fd1:	push   es
  409fd2:	lock std 
  409fd4:	push   eax
  409fd5:	cwde   
  409fd6:	jg     0x40a03b
  409fd8:	adc    al,0x6e
  409fda:	retf   0xc4f5
  409fdd:	mov    dh,0xc3
  409fdf:	cmp    DWORD PTR [ebx+0x41],ebp
  409fe2:	in     eax,dx
  409fe3:	mov    ds:0xfc54c049,eax
  409fe8:	and    eax,0xb1185d31
  409fed:	mov    ds:0x334f6cee,eax
  409ff2:	and    ebx,esp
  409ff4:	xlat   BYTE PTR ds:[ebx]
  409ff5:	dec    edi
  409ff6:	xchg   edi,eax
  409ff7:	mov    BYTE PTR [eax-0x70],dl
  409ffa:	ret    
  409ffb:	pop    edi
  409ffc:	mov    eax,0xb2123c73
  40a001:	or     al,0x7e
  40a003:	push   esp
  40a004:	mov    BYTE PTR [ecx],dh
  40a006:	popf   
  40a007:	dec    esp
  40a008:	fimul  DWORD PTR [esi]
  40a00a:	or     DWORD PTR [edi],esi
  40a00c:	aas    
  40a00d:	push   ds
  40a00e:	pop    ebp
  40a00f:	xchg   ebp,eax
  40a010:	aaa    
  40a011:	add    eax,0xa8d96c9d
  40a016:	jmp    0x66fd:0x354d79e9
  40a01d:	repnz in eax,0x15
  40a020:	not    DWORD PTR [ebx-0x45]
  40a023:	test   DWORD PTR [ebx+0x17dc0bc3],edx
  40a029:	popa   
  40a02a:	stos   BYTE PTR es:[edi],al
  40a02b:	das    
  40a02c:	call   0xb051:0xb607a8f
  40a033:	pop    esp
  40a034:	push   ebp
  40a035:	lods   al,BYTE PTR ds:[esi]
  40a036:	inc    esp
  40a037:	aad    0xe8
  40a039:	ror    BYTE PTR [esi],0x62
  40a03c:	jno    0x40a09e
  40a03e:	dec    esp
  40a03f:	and    DWORD PTR [esi+0x270cca02],0xfffffffb
  40a046:	in     eax,0x31
  40a048:	xchg   edx,eax
  40a049:	ret    0x2ac6
  40a04c:	xchg   esp,eax
  40a04d:	dec    eax
  40a04e:	hlt    
  40a04f:	jae    0x40a0bd
  40a051:	stos   DWORD PTR es:[edi],eax
  40a052:	cdq    
  40a053:	inc    esp
  40a054:	imul   BYTE PTR ds:0x87b25a92
  40a05a:	repz sar DWORD PTR [eax-0x3e02792b],1
  40a061:	cmp    al,BYTE PTR [eax+0x4957a7d5]
  40a067:	pop    ss
  40a068:	and    al,0x7a
  40a06a:	retf   
  40a06b:	pop    ecx
  40a06c:	pop    ebx
  40a06d:	packssdw mm2,QWORD PTR [ebx]
  40a070:	imul   esi,DWORD PTR [edi-0x164207ca],0x33
  40a077:	ret    
  40a078:	inc    edx
  40a079:	ss lahf 
  40a07b:	fldenv [edi-0x6793bad5]
  40a081:	push   0x3e
  40a083:	cli    
  40a084:	in     eax,dx
  40a085:	push   0x4c194f65
  40a08a:	dec    eax
  40a08b:	adc    DWORD PTR [esi+ebx*4+0x2a5e2124],eax
  40a092:	or     eax,DWORD PTR [edi+0x50]
  40a095:	pop    es
  40a096:	fs test eax,0x76c71797
  40a09c:	retf   
  40a09d:	pop    ebx
  40a09e:	cmc    
  40a09f:	sub    bl,ah
  40a0a1:	aaa    
  40a0a2:	gs push esp
  40a0a4:	lods   al,BYTE PTR ds:[esi]
  40a0a5:	scas   al,BYTE PTR es:[edi]
  40a0a6:	push   edx
  40a0a7:	jmp    0x40a0d7
  40a0a9:	inc    edx
  40a0aa:	push   edi
  40a0ab:	jp     0x40a0eb
  40a0ad:	pop    ds
  40a0ae:	es aaa 
  40a0b0:	adc    eax,0x92a7057c
  40a0b5:	sub    al,0xf3
  40a0b7:	sbb    eax,0x406006aa
  40a0bc:	mov    esp,0x1ce2bb19
  40a0c1:	lea    edi,cs:[ecx]
  40a0c4:	push   edx
  40a0c5:	xchg   bl,al
  40a0c7:	mov    al,ds:0xa2a420a2
  40a0cc:	lea    edx,[esi-0x6f]
  40a0cf:	pop    eax
  40a0d0:	xor    BYTE PTR [edi-0x3e87e9a7],dh
  40a0d6:	and    BYTE PTR [edi+0x73],ch
  40a0d9:	or     al,0xe4
  40a0db:	fnstsw WORD PTR [ecx-0x58]
  40a0de:	popa   
  40a0df:	cld    
  40a0e0:	adc    edx,0x153ce65e
  40a0e6:	repnz outs dx,BYTE PTR ds:[esi]
  40a0e8:	mov    ah,0x22
  40a0ea:	pop    ds
  40a0eb:	cwde   
  40a0ec:	xor    edi,DWORD PTR [eax+eiz*4]
  40a0ef:	fstp   TBYTE PTR [esp+ecx*1+0x75913a30]
  40a0f6:	ret    0x37a5
  40a0f9:	stos   DWORD PTR es:[edi],eax
  40a0fa:	push   cs
  40a0fb:	ficomp WORD PTR [eax+0x23]
  40a0fe:	outs   dx,BYTE PTR ds:[esi]
  40a0ff:	lds    ebp,FWORD PTR [ebp-0x32d67eb9]
  40a105:	inc    esi
  40a106:	xor    bl,BYTE PTR [edi+eiz*8]
  40a109:	sub    BYTE PTR [eax-0x633f1ea3],bl
  40a10f:	xchg   edx,eax
  40a110:	adc    BYTE PTR [edi+0x2415ef76],bh
  40a116:	pop    es
  40a117:	(bad)  
  40a118:	push   eax
  40a119:	stos   BYTE PTR es:[edi],al
  40a11a:	arpl   WORD PTR [ebx+edi*4],dx
  40a11d:	addr16 in al,0xce
  40a120:	jmp    0x40a111
  40a122:	js     0x40a15a
  40a124:	adc    DWORD PTR [edi+0x78],edi
  40a127:	aad    0x8e
  40a129:	and    dl,BYTE PTR [edx+eiz*2]
  40a12c:	xor    esp,ebp
  40a12e:	jbe    0x40a0bb
  40a130:	add    BYTE PTR [esi+0x50],dl
  40a133:	stc    
  40a134:	test   DWORD PTR [ecx+0x1],esp
  40a137:	mov    eax,0x97514705
  40a13c:	pop    edi
  40a13d:	fidivr DWORD PTR [edx+0x61042df6]
  40a143:	mov    esp,0x7a33d169
  40a148:	mov    ah,BYTE PTR [edx+eiz*2+0x32]
  40a14c:	out    0x33,eax
  40a14e:	and    DWORD PTR [ecx+0x3f],0x713b15f0
  40a155:	xchg   edx,eax
  40a156:	arpl   WORD PTR [esi+0x3a9f0e70],di
  40a15c:	cs xchg esp,eax
  40a15e:	sub    ebp,DWORD PTR [edx+0x10]
  40a161:	test   al,0x5b
  40a163:	cmp    DWORD PTR [ebx],ecx
  40a165:	jle    0x40a18d
  40a167:	out    dx,al
  40a168:	fcomip st,st(6)
  40a16a:	out    dx,eax
  40a16b:	outs   dx,BYTE PTR ds:[esi]
  40a16c:	call   0x6d67:0xe0445058
  40a173:	test   eax,0x7051e049
  40a178:	jb     0x40a19c
  40a17a:	mov    ebp,0x1267b2d8
  40a17f:	or     al,0x8b
  40a181:	jno    0x40a18c
  40a183:	iret   
  40a184:	shr    DWORD PTR [esi],cl
  40a186:	ficomp DWORD PTR [eax-0x8]
  40a189:	fnstenv [ecx]
  40a18b:	cli    
  40a18c:	pop    ecx
  40a18d:	jmp    0xe0eb:0x64744efc
  40a194:	xor    edi,DWORD PTR es:[ecx-0x3c19112d]
  40a19b:	retf   0x842e
  40a19e:	adc    al,0x8c
  40a1a0:	mov    esp,0x846e0113
  40a1a5:	xchg   edx,eax
  40a1a6:	fdivr  QWORD PTR [eax]
  40a1a8:	imul   edi,DWORD PTR [edi-0x4258e5eb],0x125c76d3
  40a1b2:	scas   al,BYTE PTR es:[edi]
  40a1b3:	inc    eax
  40a1b4:	arpl   WORD PTR [edx+edx*4+0x4b],di
  40a1b8:	popf   
  40a1b9:	retf   
  40a1ba:	inc    ebp
  40a1bb:	stc    
  40a1bc:	fmul   QWORD PTR [eax-0x47]
  40a1bf:	lods   eax,DWORD PTR ds:[esi]
  40a1c0:	cmp    eax,0x9e8a4086
  40a1c5:	scas   al,BYTE PTR es:[edi]
  40a1c6:	pop    eax
  40a1c7:	ror    DWORD PTR [edx+0x7],0xa0
  40a1cb:	repz repnz call 0x5332:0x8d917f58
  40a1d4:	into   
  40a1d5:	sub    bl,BYTE PTR [edx-0x6badd88]
  40a1db:	pop    esp
  40a1dc:	sbb    BYTE PTR [ecx+esi*4-0x7c],dh
  40a1e0:	xchg   ebx,eax
  40a1e1:	and    esi,ecx
  40a1e3:	mov    fs,edi
  40a1e5:	inc    ebx
  40a1e6:	pop    ecx
  40a1e7:	sub    esp,DWORD PTR [ecx+0x44]
  40a1ea:	jmp    0x2846:0x1ebedd9d
  40a1f1:	inc    edx
  40a1f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1f3:	retf   
  40a1f4:	test   BYTE PTR [edi],bl
  40a1f6:	cwde   
  40a1f7:	dec    edi
  40a1f8:	repnz and edx,DWORD PTR [ecx-0x58438b8f]
  40a1ff:	xor    dl,dh
  40a201:	imul   esi,edi,0xa9297b5
  40a207:	mov    esp,0xa16329a
  40a20c:	sti    
  40a20d:	push   eax
  40a20e:	js     0x40a1b6
  40a210:	jmp    0x40a247
  40a212:	mov    dl,0xb2
  40a214:	test   al,0xf2
  40a216:	xor    ebx,DWORD PTR [ebp+0x12baa404]
  40a21c:	jae    0x40a205
  40a21e:	push   edi
  40a21f:	mov    BYTE PTR [esp+esi*2+0x5a64c3d3],0x23
  40a227:	loope  0x40a1b6
  40a229:	in     eax,0x2b
  40a22b:	repz xchg ebx,eax
  40a22d:	dec    esp
  40a22e:	inc    BYTE PTR [edi]
  40a230:	fadd   DWORD PTR cs:[ecx+0x1b8236fe]
  40a237:	aam    0x1f
  40a239:	adc    ecx,DWORD PTR [ebx-0x20]
  40a23c:	shl    BYTE PTR [ebx+0x425d4422],0xf2
  40a243:	pop    ebx
  40a244:	jo     0x40a21f
  40a246:	add    DWORD PTR [ebx],0xfffffffa
  40a249:	xlat   BYTE PTR ds:[ebx]
  40a24a:	mov    bl,bh
  40a24c:	arpl   WORD PTR [edx],dx
  40a24e:	mov    edi,0x6466668c
  40a253:	dec    ecx
  40a254:	int3   
  40a255:	(bad)  
  40a256:	call   FWORD PTR [esi]
  40a258:	outs   dx,BYTE PTR ds:[esi]
  40a259:	mov    bh,0xae
  40a25b:	repnz cmp eax,0xca8ad84f
  40a261:	xchg   esp,eax
  40a262:	fs dec edi
  40a264:	push   es
  40a265:	xchg   DWORD PTR [edx-0x7eee0d82],ebx
  40a26b:	jg     0x40a206
  40a26d:	mov    eax,0x9093e731
  40a272:	stos   DWORD PTR es:[edi],eax
  40a273:	(bad)  
  40a274:	mov    ds:0x6def6e21,eax
  40a279:	popf   
  40a27a:	fld    TBYTE PTR [edi]
  40a27c:	xor    eax,0x6ef02e74
  40a281:	adc    eax,0x4e3845f
  40a286:	jle    0x40a264
  40a288:	test   al,0x9a
  40a28a:	dec    edi
  40a28b:	(bad)  
  40a28d:	jbe    0x40a23b
  40a28f:	pop    edi
  40a290:	shl    DWORD PTR [edx+0x6f],0x7
  40a294:	mov    cl,0x68
  40a296:	in     al,dx
  40a297:	jecxz  0x40a21e
  40a299:	jmp    0xc4e2e8eb
  40a29e:	push   ebx
  40a29f:	or     BYTE PTR es:[edx],ch
  40a2a2:	aad    0x61
  40a2a4:	cmp    BYTE PTR [ecx+0x32],cl
  40a2a7:	(bad)  
  40a2a8:	pop    esi
  40a2a9:	outs   dx,DWORD PTR ds:[esi]
  40a2aa:	cmc    
  40a2ab:	stos   BYTE PTR es:[edi],al
  40a2ac:	fs cmp eax,0xe2179bdf
  40a2b2:	enter  0x89d6,0x25
  40a2b6:	ret    0x77ec
  40a2b9:	aam    0x46
  40a2bb:	jae    0x40a336
  40a2bd:	mov    bh,BYTE PTR [esi+0x22]
  40a2c0:	xor    dl,BYTE PTR [ebx]
  40a2c2:	pop    ecx
  40a2c3:	and    cl,BYTE PTR cs:[ebp+0x32]
  40a2c7:	xchg   ebp,eax
  40a2c8:	test   al,0xf0
  40a2ca:	jns    0x40a2be
  40a2cc:	adc    al,0x56
  40a2ce:	inc    ecx
  40a2cf:	cmp    DWORD PTR [edi-0x2d2e622a],0xf0cd8293
  40a2d9:	add    BYTE PTR [esi+0x19f3a132],bh
  40a2df:	mov    edi,0x4d91cf60
  40a2e4:	and    DWORD PTR [edx],eax
  40a2e6:	aam    0x79
  40a2e8:	sub    BYTE PTR [esi],ah
  40a2ea:	mov    dh,0xba
  40a2ec:	jns    0x40a296
  40a2ee:	adc    al,0xba
  40a2f0:	retf   0xd700
  40a2f3:	pop    es
  40a2f4:	pop    edx
  40a2f5:	adc    esp,edi
  40a2f7:	sbb    eax,0xa588dc7f
  40a2fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2fd:	and    BYTE PTR [esi-0x3458baba],ch
  40a303:	cwde   
  40a304:	nop
  40a305:	inc    ebp
  40a306:	stos   BYTE PTR es:[edi],al
  40a307:	push   eax
  40a308:	(bad)  
  40a309:	mov    bh,0xc
  40a30b:	cld    
  40a30c:	shr    BYTE PTR ds:0xcd7920cb,1
  40a312:	test   BYTE PTR [edx+0x11],cl
  40a315:	test   BYTE PTR [ecx+0x27ad8873],0xd0
  40a31c:	jge    0x40a2d5
  40a31e:	lahf   
  40a31f:	fstp   QWORD PTR [edi+eiz*1]
  40a322:	int3   
  40a323:	out    0xcb,eax
  40a325:	push   0xd2b1860c
  40a32a:	cdq    
  40a32b:	inc    ecx
  40a32c:	clc    
  40a32d:	pop    esi
  40a32e:	dec    esp
  40a32f:	test   BYTE PTR [ebx],ch
  40a331:	xchg   edi,eax
  40a332:	(bad)  
  40a333:	or     DWORD PTR [edx],esi
  40a335:	test   ebx,eax
  40a337:	adc    eax,0xc790d2ce
  40a33c:	fimul  WORD PTR [esi+0x4f]
  40a33f:	and    ecx,DWORD PTR [esi+0xb]
  40a342:	lock in al,dx
  40a344:	inc    ebp
  40a345:	pop    eax
  40a346:	pop    edi
  40a347:	mov    ecx,0x8e883379
  40a34c:	adc    ecx,esi
  40a34e:	push   ebx
  40a34f:	cld    
  40a350:	pop    ss
  40a351:	inc    ecx
  40a352:	scas   eax,DWORD PTR es:[edi]
  40a353:	jbe    0x40a2e1
  40a355:	mov    cl,0x3f
  40a357:	(bad)  ds:0x5a689f7d
  40a35d:	test   bl,bl
  40a35f:	gs fwait
  40a361:	imul   eax,DWORD PTR [ebp-0x4f],0x24
  40a365:	jl     0x40a2f6
  40a367:	clc    
  40a368:	repnz loope 0x40a307
  40a36b:	mov    BYTE PTR [edx-0x52],ah
  40a36e:	ins    BYTE PTR es:[edi],dx
  40a36f:	pop    edx
  40a370:	jecxz  0x40a3e5
  40a372:	in     al,dx
  40a373:	or     ah,ah
  40a375:	dec    esi
  40a376:	ins    DWORD PTR es:[edi],dx
  40a377:	sar    BYTE PTR [esi*1+0x3d9a37a0],cl
  40a37e:	adc    dl,BYTE PTR [esi+eax*1+0x58]
  40a382:	mov    ecx,0xaf9450a6
  40a387:	arpl   WORD PTR [edx+0x6f],ax
  40a38a:	dec    esp
  40a38b:	fild   DWORD PTR [esi+0x8]
  40a38e:	jmp    0x48db6753
  40a393:	leave  
  40a394:	adc    edi,0x8a147562
  40a39a:	ja     0x40a398
  40a39c:	ficom  WORD PTR [edi]
  40a39e:	or     al,0xca
  40a3a0:	int3   
  40a3a1:	pop    esi
  40a3a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3a3:	pop    es
  40a3a4:	adc    eax,0x92f3a2e
  40a3a9:	imul   ebp,DWORD PTR [ebp-0x1524a2c1],0x67f3aebe
  40a3b3:	mov    BYTE PTR [ecx],cl
  40a3b5:	retf   0xe4be
  40a3b8:	pop    es
  40a3b9:	repnz push sp
  40a3bc:	in     al,0xb6
  40a3be:	pop    esi
  40a3bf:	add    bh,BYTE PTR [esi+ebx*4-0x7a810a42]
  40a3c6:	ret    
  40a3c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3c8:	je     0x40a3e7
  40a3ca:	and    dh,BYTE PTR [ebx-0x5]
  40a3cd:	shl    ebp,cl
  40a3cf:	xchg   ecx,eax
  40a3d0:	shr    BYTE PTR [ebp-0xd],cl
  40a3d3:	enter  0x53ee,0x48
  40a3d7:	mov    bh,0xb7
  40a3d9:	sbb    bh,dl
  40a3db:	pop    edi
  40a3dc:	aam    0xf3
  40a3de:	fisub  WORD PTR [ebp-0x75c0100c]
  40a3e4:	push   0xffffffe5
  40a3e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3e7:	test   ah,cl
  40a3e9:	out    0x8a,eax
  40a3eb:	pusha  
  40a3ec:	repz sbb eax,0x7d5f3c69
  40a3f2:	in     al,dx
  40a3f3:	lods   al,BYTE PTR ds:[esi]
  40a3f4:	or     al,0xf7
  40a3f6:	loopne 0x40a3d3
  40a3f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3f9:	jecxz  0x40a38b
  40a3fb:	sub    cl,BYTE PTR [ebx+0x5761bd8f]
  40a401:	push   0xd54e2b0b
  40a406:	xor    BYTE PTR [edx-0x70],bl
  40a409:	popa   
  40a40a:	adc    al,0xd3
  40a40c:	out    0xbd,eax
  40a40e:	lds    edx,FWORD PTR fs:[ecx+0x3a]
  40a412:	xchg   edx,eax
  40a413:	jp     0x40a428
  40a415:	stos   DWORD PTR es:[edi],eax
  40a416:	jae    0x40a45f
  40a418:	mov    BYTE PTR [edx-0x2a],dh
  40a41b:	push   esp
  40a41c:	push   sp
  40a41e:	dec    eax
  40a41f:	push   esi
  40a420:	push   esp
  40a421:	jne    0x40a46f
  40a423:	jae    0x40a45a
  40a425:	sti    
  40a426:	out    0xa0,al
  40a428:	cwde   
  40a429:	mov    esi,DWORD PTR [eax-0x1eb54ad7]
  40a42f:	jecxz  0x40a496
  40a431:	jbe    0x40a3ba
  40a433:	shrd   DWORD PTR [eax-0x35],ebp,0x13
  40a438:	icebp  
  40a439:	test   DWORD PTR [esi+0x50],ebx
  40a43c:	stc    
  40a43d:	daa    
  40a43e:	mov    dl,0x51
  40a440:	add    cl,al
  40a442:	int3   
  40a443:	sbb    eax,0x281d9373
  40a448:	arpl   WORD PTR [esi-0x6092ef17],di
  40a44e:	push   0x55cca9c9
  40a453:	stos   DWORD PTR es:[edi],eax
  40a454:	das    
  40a455:	stos   BYTE PTR es:[edi],al
  40a456:	add    al,0xe4
  40a458:	lods   al,BYTE PTR ds:[esi]
  40a459:	fiadd  WORD PTR [esi]
  40a45b:	lahf   
  40a45c:	inc    eax
  40a45d:	or     DWORD PTR [ecx+0x72],ebp
  40a460:	sahf   
  40a461:	div    BYTE PTR ds:0xbf86a8f5
  40a467:	mov    ecx,0x2a82333
  40a46c:	pop    edi
  40a46d:	repz lahf 
  40a46f:	lock jl 0x40a4c4
  40a472:	sbb    bl,BYTE PTR [edi-0x19]
  40a475:	addr16 pushf 
  40a477:	mov    esi,0x9f01fbc
  40a47c:	cs cmp esp,ebp
  40a47f:	sti    
  40a480:	call   0xe50e2783
  40a485:	xsha1  (bad)
  40a486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a487:	retf   0x496b
  40a48a:	cmp    BYTE PTR [ebp+0x18d9c669],0xfa
  40a491:	or     esi,esi
  40a493:	jmp    DWORD PTR [eax+ebp*2+0x6c402b36]
  40a49a:	lods   al,BYTE PTR ds:[esi]
  40a49b:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a49d:	pop    edi
  40a49e:	xchg   esi,eax
  40a49f:	stos   BYTE PTR es:[edi],al
  40a4a0:	and    eax,0x9b57cd12
  40a4a5:	rcr    DWORD PTR [ecx-0x12557bf8],1
  40a4ab:	test   edx,ecx
  40a4ad:	and    esp,DWORD PTR [ebp+0x33]
  40a4b0:	or     al,0x69
  40a4b2:	cdq    
  40a4b3:	inc    edi
  40a4b4:	mov    ecx,0x8502ccb2
  40a4b9:	repz xor ch,BYTE PTR [ebx-0x52]
  40a4bd:	jmp    0x5ec:0xf8812264
  40a4c4:	mov    eax,ds:0x7b4df728
  40a4c9:	scas   al,BYTE PTR es:[edi]
  40a4ca:	fwait
  40a4cb:	pop    ebp
  40a4cc:	sbb    al,0xd5
  40a4cf:	sbb    ebx,ecx
  40a4d1:	xchg   ebp,eax
  40a4d2:	fwait
  40a4d3:	out    0x48,al
  40a4d5:	jne    0x40a535
  40a4d7:	or     BYTE PTR [ebx-0x31f25e80],bh
  40a4dd:	icebp  
  40a4de:	mov    DWORD PTR [ecx+ecx*2],esi
  40a4e1:	xchg   esp,eax
  40a4e2:	and    ebp,DWORD PTR [si-0x2981]
  40a4e7:	retf   
  40a4e8:	aaa    
  40a4e9:	out    dx,eax
  40a4ea:	test   eax,0x8a0c680d
  40a4ef:	stc    
  40a4f0:	repz or BYTE PTR [eax-0x52],bh
  40a4f4:	aam    0x5c
  40a4f6:	shr    BYTE PTR [edx],1
  40a4f8:	sbb    al,0xd8
  40a4fa:	or     DWORD PTR [esi-0x59],ebx
  40a4fd:	adc    DWORD PTR [esi-0x56],ebx
  40a500:	sub    eax,0x1eb60149
  40a505:	pop    ecx
  40a506:	jnp    0x40a4f9
  40a508:	mov    BYTE PTR [edi-0x4a],dh
  40a50b:	or     DWORD PTR [edi+ecx*1],edi
  40a50e:	dec    ebx
  40a50f:	retf   
  40a510:	mov    dh,0x4c
  40a512:	ins    BYTE PTR es:[edi],dx
  40a513:	mov    ebp,0x8a26fbcd
  40a518:	out    dx,eax
  40a519:	fidivr DWORD PTR [esi]
  40a51b:	shl    cl,0xd2
  40a51e:	add    eax,0x3b7b00aa
  40a523:	test   BYTE PTR [esi-0x62],dh
  40a526:	add    dh,0x3e
  40a529:	pop    es
  40a52a:	pop    esp
  40a52b:	stc    
  40a52c:	shl    DWORD PTR [ecx+0x1b],1
  40a52f:	sbb    al,0xd5
  40a531:	sbb    eax,0x8dfce21a
  40a536:	push   cs
  40a537:	jne    0x40a509
  40a539:	hlt    
  40a53a:	pop    ds
  40a53b:	pusha  
  40a53c:	daa    
  40a53d:	xchg   edx,eax
  40a53e:	sar    edx,cl
  40a540:	mov    ds:0x8f4b6b0f,al
  40a545:	xchg   bl,dh
  40a547:	jb     0x40a57e
  40a549:	inc    edx
  40a54a:	add    eax,0x3fb3290c
  40a54f:	xor    ebx,DWORD PTR [ebp-0x4a]
  40a552:	xchg   ecx,eax
  40a553:	pusha  
  40a554:	or     bh,BYTE PTR [ecx-0x6c]
  40a557:	mov    ebx,0xb4d53984
  40a55c:	ja     0x40a5c0
  40a55e:	jmp    0x9655:0xc17ad76f
  40a565:	dec    edx
  40a566:	push   eax
  40a567:	retf   
  40a568:	or     DWORD PTR [eax-0x6d3a687e],eax
  40a56e:	ret    0x48ff
  40a571:	cmp    eax,0x29abef2f
  40a576:	cmp    edi,esi
  40a578:	jne    0x40a5d3
  40a57a:	fdiv   QWORD PTR es:[ebx]
  40a57d:	add    al,0x33
  40a57f:	retf   
  40a580:	arpl   WORD PTR [edx+0xa0dc7e3],bx
  40a586:	cli    
  40a587:	sub    DWORD PTR [eax-0x35],ebp
  40a58a:	sub    dl,ch
  40a58c:	in     eax,0x34
  40a58e:	les    ebp,FWORD PTR [ebx]
  40a590:	xchg   ecx,eax
  40a591:	add    esi,DWORD PTR ds:0x27e933e6
  40a597:	js     0x40a599
  40a599:	cli    
  40a59a:	jo     0x40a553
  40a59c:	sub    bl,BYTE PTR [ebx+ebp*1]
  40a59f:	dec    esi
  40a5a0:	xlat   BYTE PTR ds:[ebx]
  40a5a1:	sar    BYTE PTR [ebp-0x358ae9a2],1
  40a5a7:	pop    ecx
  40a5a8:	outs   dx,DWORD PTR ds:[esi]
  40a5a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5aa:	cmp    ah,BYTE PTR [ebx]
  40a5ac:	push   es
  40a5ad:	inc    esp
  40a5ae:	mov    es,WORD PTR [eax+0x3d]
  40a5b1:	aas    
  40a5b2:	pop    edx
  40a5b3:	out    dx,al
  40a5b4:	mov    WORD PTR [eax+0x9],?
  40a5b7:	mov    cl,0x1e
  40a5b9:	or     al,0x9e
  40a5bb:	or     BYTE PTR [eax-0x1c],bh
  40a5be:	imul   ebp,DWORD PTR [esi+0x24],0xffffff8e
  40a5c2:	xor    cl,dl
  40a5c4:	push   cs
  40a5c5:	pop    ecx
  40a5c6:	(bad)  
  40a5c7:	das    
  40a5c8:	stos   BYTE PTR es:[edi],al
  40a5c9:	push   ebp
  40a5ca:	push   edx
  40a5cb:	cmc    
  40a5cc:	sub    ecx,DWORD PTR [ebx-0x6c]
  40a5cf:	sbb    BYTE PTR [ecx+0x56e3d40d],dh
  40a5d5:	push   ebx
  40a5d6:	int3   
  40a5d7:	daa    
  40a5d8:	dec    eax
  40a5d9:	and    al,BYTE PTR [ecx-0x23]
  40a5dc:	mov    bh,0x8a
  40a5de:	retf   0x9ab4
  40a5e1:	stos   BYTE PTR es:[edi],al
  40a5e2:	es push edi
  40a5e4:	xchg   edx,eax
  40a5e5:	aam    0xa2
  40a5e7:	fwait
  40a5e8:	pop    esp
  40a5e9:	and    BYTE PTR [ebx-0x19],ah
  40a5ec:	xchg   ebx,eax
  40a5ed:	daa    
  40a5ee:	imul   eax,DWORD PTR [ecx+edi*4+0x1046035c],0x76
  40a5f6:	cmp    DWORD PTR [ebx-0x6bf6e8a7],edx
  40a5fc:	popf   
  40a5fd:	jno    0x40a678
  40a5ff:	mov    BYTE PTR [ebx],ch
  40a601:	xor    dl,BYTE PTR [edi-0x5dc25fd]
  40a607:	lea    eax,[ebx]
  40a609:	retf   
  40a60a:	pop    esp
  40a60b:	adc    DWORD PTR [ecx+0x5e56b338],ecx
  40a611:	fwait
  40a612:	sub    edi,DWORD PTR [esi+edx*8+0x53]
  40a616:	inc    eax
  40a617:	xlat   BYTE PTR ds:[ebx]
  40a618:	add    DWORD PTR [ebx-0x5011f05e],ecx
  40a61e:	jns    0x40a642
  40a620:	dec    eax
  40a621:	jno    0x40a5a7
  40a623:	inc    esp
  40a624:	adc    eax,0x60b185e0
  40a629:	stc    
  40a62a:	hlt    
  40a62b:	lods   al,BYTE PTR ds:[esi]
  40a62c:	ja     0x40a5bf
  40a62e:	jae    0x40a644
  40a630:	aas    
  40a631:	sub    BYTE PTR [eax-0x1b],0x1c
  40a635:	popa   
  40a636:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a637:	inc    ebx
  40a638:	xor    ebx,DWORD PTR [eax]
  40a63a:	xor    dh,dh
  40a63c:	xchg   DWORD PTR [edx+0x28c4c6f3],eax
  40a642:	dec    ebp
  40a643:	test   dl,al
  40a645:	inc    ebp
  40a646:	and    cl,BYTE PTR [esi+0x66]
  40a649:	mov    ds:0xc2c05935,al
  40a64e:	mov    dh,0xf3
  40a650:	ds push eax
  40a652:	pusha  
  40a653:	imul   ebp,edi,0x15
  40a656:	inc    esi
  40a657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a658:	mov    al,0xed
  40a65a:	jle    0x40a5ff
  40a65c:	dec    edi
  40a65d:	fdivr  QWORD PTR gs:[ecx-0x52]
  40a661:	loopne 0x40a6a4
  40a663:	aas    
  40a664:	add    al,0x66
  40a666:	ret    
  40a667:	loopne 0x40a64a
  40a669:	pusha  
  40a66a:	dec    ecx
  40a66b:	push   ss
  40a66c:	cld    
  40a66d:	outs   dx,BYTE PTR ds:[esi]
  40a66e:	xchg   esp,eax
  40a66f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a670:	addr16 pop ss
  40a672:	popf   
  40a673:	not    ch
  40a675:	xlat   BYTE PTR ds:[ebx]
  40a676:	fwait
  40a677:	sbb    esp,edx
  40a679:	sub    bh,bh
  40a67b:	call   0x3da57919
  40a680:	daa    
  40a681:	in     eax,0x30
  40a683:	and    BYTE PTR [ecx-0x4f73fb2b],bh
  40a689:	loope  0x40a706
  40a68b:	(bad)  
  40a68c:	(bad)  
  40a68d:	pop    ecx
  40a68e:	fist   DWORD PTR [edx-0x29]
  40a691:	sbb    bh,BYTE PTR [ebp-0x41f01d36]
  40a697:	add    DWORD PTR [esi-0x5a],eax
  40a69a:	xor    eax,0xb0532ed0
  40a69f:	je     0x40a66c
  40a6a1:	mov    ah,0x32
  40a6a3:	mov    bl,0xd
  40a6a5:	bound  esi,QWORD PTR [edx+0x6c]
  40a6a8:	ds mov eax,0xf87c869d
  40a6ae:	je     0x40a674
  40a6b0:	es aad 0xe6
  40a6b3:	test   ecx,ecx
  40a6b5:	jmp    0x40a6fc
  40a6b7:	xor    edx,DWORD PTR [esi]
  40a6b9:	cmp    al,0x4f
  40a6bb:	jg     0x40a6e7
  40a6bd:	retf   
  40a6be:	cwde   
  40a6bf:	(bad)  
  40a6c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6c1:	test   BYTE PTR [ebp+0x76],dl
  40a6c4:	cmp    eax,0xfa739c2c
  40a6c9:	icebp  
  40a6ca:	sub    BYTE PTR [ebx],ch
  40a6cc:	inc    esi
  40a6cd:	cmp    eax,0x4f58c83f
  40a6d2:	aaa    
  40a6d3:	inc    esp
  40a6d4:	or     eax,0xe1cf822
  40a6d9:	adc    al,0xbb
  40a6db:	rol    bl,0x39
  40a6de:	icebp  
  40a6df:	or     ch,BYTE PTR [edi]
  40a6e1:	add    ch,dl
  40a6e3:	or     BYTE PTR [esp+edi*4-0x28],dh
  40a6e7:	mov    bl,0xb4
  40a6e9:	ins    DWORD PTR es:[edi],dx
  40a6ea:	daa    
  40a6eb:	mov    eax,ds:0xde437e0a
  40a6f0:	repnz in eax,dx
  40a6f2:	sbb    eax,DWORD PTR [ebp+0x62]
  40a6f5:	push   eax
  40a6f6:	inc    BYTE PTR [esi+0x3eee08e3]
  40a6fc:	mov    dl,0x18
  40a6fe:	or     eax,0x78877e62
  40a703:	mov    eax,DWORD PTR [edi+eiz*4-0x5fe6c39c]
  40a70a:	retf   0xffdf
  40a70d:	sbb    dh,bh
  40a70f:	sub    eax,0x478c2348
  40a714:	sub    cl,dh
  40a716:	inc    esi
  40a717:	jae    0x40a6e5
  40a719:	loope  0x40a6b6
  40a71b:	and    DWORD PTR [edx-0x33c001a2],ebp
  40a721:	in     al,0xd
  40a723:	push   ebp
  40a724:	imul   ebx,DWORD PTR [ecx],0xffffffa1
  40a727:	mov    dh,bh
  40a729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a72a:	inc    ebp
  40a72b:	add    bl,ch
  40a72d:	mov    al,0xd4
  40a72f:	das    
  40a730:	out    dx,al
  40a731:	sub    eax,esi
  40a733:	adc    al,0x14
  40a735:	iret   
  40a736:	adc    BYTE PTR [ebp-0xd],bl
  40a739:	cmp    DWORD PTR [edi],ebx
  40a73b:	mov    cl,bh
  40a73d:	xor    BYTE PTR [ebp+0x4f],bh
  40a740:	pop    ebp
  40a741:	aad    0x26
  40a743:	inc    edi
  40a744:	xor    BYTE PTR [esi-0x7ed4aa44],ch
  40a74a:	sbb    eax,0x8070d443
  40a74f:	mov    ecx,0x84a5546f
  40a754:	pop    edi
  40a755:	je     0x40a768
  40a757:	pop    edx
  40a758:	pop    ebp
  40a759:	ret    
  40a75a:	les    ebx,FWORD PTR [edx+0x60fa4d0c]
  40a760:	or     dl,al
  40a762:	(bad)  
  40a763:	sti    
  40a764:	mov    ch,0x32
  40a766:	inc    ecx
  40a767:	jg     0x40a781
  40a769:	loope  0x40a782
  40a76b:	fsub   DWORD PTR ds:0xd1572015
  40a771:	and    esp,ebx
  40a773:	mov    bh,0xaa
  40a775:	pop    edi
  40a776:	dec    ebx
  40a777:	jbe    0x40a7e6
  40a779:	int3   
  40a77a:	adc    DWORD PTR [ebp-0x7d5d26c9],ecx
  40a780:	sub    edx,DWORD PTR ds:0x172cc84f
  40a786:	cmp    ch,cl
  40a788:	test   eax,0xc37e8fbf
  40a78d:	lahf   
  40a78e:	inc    ebx
  40a78f:	xchg   edx,eax
  40a790:	jmp    0xc96d6020
  40a795:	xchg   esi,eax
  40a796:	sub    BYTE PTR [ecx+ebx*8],0x43
  40a79a:	call   0x5cf253a2
  40a79f:	repz push ds
  40a7a1:	add    al,0x5b
  40a7a3:	push   0xe1c3b123
  40a7a8:	shr    ch,1
  40a7aa:	loopne 0x40a740
  40a7ac:	mov    eax,ds:0x5b211eaa
  40a7b1:	enter  0x2b84,0xcf
  40a7b5:	pushf  
  40a7b6:	push   esi
  40a7b7:	cmp    bh,BYTE PTR [eax-0x5e]
  40a7ba:	por    mm2,mm5
  40a7bd:	sub    DWORD PTR [eax+0x49],eax
  40a7c0:	cdq    
  40a7c1:	popf   
  40a7c2:	adc    eax,0x65e32ad8
  40a7c7:	loop   0x40a7aa
  40a7c9:	(bad)  
  40a7ca:	xor    cl,BYTE PTR [edx+0xc]
  40a7cd:	stc    
  40a7ce:	in     eax,0x50
  40a7d0:	push   ebp
  40a7d1:	and    DWORD PTR [esi-0x32],esp
  40a7d4:	lock imul ebp,ebx,0xe9ac8200
  40a7db:	mov    ch,0xe2
  40a7dd:	fdivr  DWORD PTR ds:0x90bbd08b
  40a7e3:	and    eax,DWORD PTR [ebx+0x5e911155]
  40a7e9:	jne    0x40a77a
  40a7eb:	dec    ecx
  40a7ec:	fisttp DWORD PTR ds:0x57820fe7
  40a7f2:	ret    0x2722
  40a7f5:	sbb    dh,BYTE PTR [ecx]
  40a7f7:	dec    eax
  40a7f8:	and    DWORD PTR [edi-0x4af1ca83],esp
  40a7fe:	dec    ecx
  40a7ff:	cmp    ah,BYTE PTR [ebp-0x4ba0b867]
  40a805:	test   BYTE PTR [edi-0x69],0x52
  40a809:	sbb    bh,dl
  40a80b:	std    
  40a80c:	lahf   
  40a80d:	add    DWORD PTR [ebx],0x32
  40a810:	mov    ds,WORD PTR [ebp+0x2403e80f]
  40a816:	fistp  QWORD PTR [edi-0x2a415952]
  40a81d:	mov    ebp,0xc94168f1
  40a822:	mov    dl,0x7
  40a824:	ret    
  40a825:	sub    DWORD PTR [edi+0x24],esi
  40a828:	fstp   QWORD PTR [ebx+0x2f642416]
  40a82e:	mov    esp,0x2859d06
  40a833:	aas    
  40a834:	or     eax,0x751c56
  40a839:	imul   ch
  40a83b:	call   DWORD PTR [edi-0x51a1844d]
  40a841:	push   ebp
  40a842:	jle    0x40a873
  40a844:	xchg   esp,eax
  40a845:	imul   BYTE PTR [ebp+0x354a7945]
  40a84b:	pop    edx
  40a84c:	adc    BYTE PTR [edi-0x58],cl
  40a84f:	sahf   
  40a850:	lods   eax,DWORD PTR ds:[esi]
  40a851:	cs mov ecx,0x11a2d979
  40a857:	and    DWORD PTR [edx],ebp
  40a859:	pop    esp
  40a85a:	or     BYTE PTR [ebx],0x73
  40a85d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a85e:	dec    ebp
  40a85f:	jns    0x40a86b
  40a861:	jg     0x40a7ea
  40a863:	jns    0x40a84d
  40a865:	push   ds
  40a866:	and    ah,BYTE PTR [edi]
  40a868:	fwait
  40a869:	dec    esp
  40a86a:	ss in  al,dx
  40a86c:	not    DWORD PTR [edi+0x61]
  40a86f:	lds    ecx,FWORD PTR [edi]
  40a871:	sub    ch,BYTE PTR [ebp-0x6f59dfd4]
  40a877:	data16 loop 0x40a8a8
  40a87a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a87b:	ret    
  40a87c:	push   edi
  40a87d:	mov    eax,0x879e5cc1
  40a882:	pop    ebp
  40a883:	push   edx
  40a884:	stc    
  40a885:	xor    BYTE PTR [esp+eax*4-0x7],dh
  40a889:	out    dx,al
  40a88a:	cmp    al,0xe2
  40a88c:	sub    eax,0xdd3bbb6f
  40a891:	inc    esp
  40a892:	pop    es
  40a893:	mov    ah,0x1f
  40a895:	jmp    0x40a8e9
  40a897:	mov    bh,0xb8
  40a899:	pusha  
  40a89a:	div    BYTE PTR [edx+edx*4-0x3f]
  40a89e:	or     eax,0xfb52adbd
  40a8a3:	ins    BYTE PTR es:[edi],dx
  40a8a4:	mov    al,0x3b
  40a8a6:	pop    esi
  40a8a7:	add    bl,BYTE PTR [ebx+0x2388deb7]
  40a8ad:	and    BYTE PTR [esi+edi*4],0xde
  40a8b1:	inc    esi
  40a8b2:	xor    BYTE PTR [esi],dh
  40a8b4:	push   0x47
  40a8b6:	lods   eax,DWORD PTR ds:[esi]
  40a8b7:	lea    ecx,[eax]
  40a8b9:	dec    esi
  40a8ba:	aaa    
  40a8bb:	mov    DWORD PTR [edi+0x1f],ecx
  40a8be:	cmp    al,0x39
  40a8c0:	popa   
  40a8c1:	sbb    al,0x36
  40a8c3:	jne    0x40a90e
  40a8c5:	(bad)  
  40a8c6:	ins    DWORD PTR es:[edi],dx
  40a8c7:	jecxz  0x40a8ee
  40a8c9:	loopne 0x40a89b
  40a8cb:	adc    eax,0xdc27a7e4
  40a8d0:	inc    eax
  40a8d1:	fwait
  40a8d2:	jg     0x40a8c1
  40a8d4:	gs sbb al,0x89
  40a8d7:	gs (bad) 
  40a8d9:	jg     0x40a8ad
  40a8db:	sub    al,BYTE PTR [esi+eiz*1+0x4c]
  40a8df:	xor    esi,DWORD PTR [ebx]
  40a8e1:	outs   dx,BYTE PTR ds:[esi]
  40a8e2:	(bad)  
  40a8e3:	cmp    bh,BYTE PTR [edi-0x58a83451]
  40a8e9:	stos   DWORD PTR es:[edi],eax
  40a8ea:	lods   eax,DWORD PTR ds:[esi]
  40a8eb:	dec    edi
  40a8ec:	push   ds
  40a8ed:	mov    bl,0x89
  40a8ef:	lea    eax,[edi]
  40a8f1:	fstp   DWORD PTR [esi+ecx*8]
  40a8f4:	dec    ebp
  40a8f5:	js     0x40a8b4
  40a8f7:	lds    ebp,FWORD PTR [ecx+eiz*4+0x766173d3]
  40a8fe:	and    al,0x42
  40a900:	mov    bl,0x30
  40a902:	aaa    
  40a903:	xchg   ebx,eax
  40a904:	int3   
  40a905:	(bad)  
  40a906:	ins    BYTE PTR es:[edi],dx
  40a907:	popw   ss
  40a909:	or     DWORD PTR [ecx+edi*8-0x11],ebp
  40a90d:	xchg   DWORD PTR [ebx+0x24592967],edi
  40a913:	hlt    
  40a914:	(bad)  
  40a915:	fdivr  QWORD PTR [esp+ebx*2-0x75]
  40a919:	xchg   edx,eax
  40a91a:	retf   
  40a91b:	dec    ebp
  40a91c:	dec    edx
  40a91d:	jle    0x40a943
  40a91f:	add    ch,ch
  40a921:	data16 sbb dh,dl
  40a924:	fnstcw WORD PTR [esi+0x1c]
  40a927:	jmp    0xcc92d467
  40a92c:	imul   ebp,esp,0xff5c1476
  40a932:	vmread DWORD PTR [ecx+0x6c],edx
  40a936:	repz and BYTE PTR [edx+ecx*2],dh
  40a93a:	aas    
  40a93b:	xchg   edi,eax
  40a93c:	in     eax,0xf8
  40a93e:	cs sti 
  40a940:	aam    0x6d
  40a942:	push   cs
  40a943:	div    DWORD PTR [eax+0x73]
  40a946:	xchg   ebx,eax
  40a947:	sub    al,0x51
  40a949:	dec    esi
  40a94a:	in     eax,dx
  40a94b:	jne    0x40a976
  40a94d:	or     edi,DWORD PTR [ecx+0xe97b961]
  40a953:	retf   
  40a954:	jae    0x40a8d6
  40a956:	sbb    eax,0xbf8dbc73
  40a95b:	xlat   BYTE PTR ds:[ebx]
  40a95c:	pmulhuw mm0,mm2
  40a95f:	aad    0x94
  40a961:	xor    al,0xf9
  40a963:	sar    BYTE PTR [esi+0x6f],0xc5
  40a967:	ins    DWORD PTR es:[edi],dx
  40a968:	push   ss
  40a969:	jmp    0x45daca1f
  40a96e:	hlt    
  40a96f:	add    eax,0xb9bbce11
  40a974:	mov    al,ds:0xefcb1a68
  40a979:	push   es
  40a97a:	test   al,0x86
  40a97c:	sbb    BYTE PTR [ebp+0x1c],bh
  40a97f:	push   es
  40a980:	sti    
  40a981:	jg     0x40a91b
  40a983:	out    dx,al
  40a984:	xchg   edi,eax
  40a985:	xchg   esp,eax
  40a986:	xor    bl,0x5b
  40a989:	pop    ds
  40a98a:	retf   0x328f
  40a98d:	xlat   BYTE PTR ds:[ebx]
  40a98e:	cs jno 0x40a997
  40a991:	sbb    ecx,ecx
  40a993:	or     bl,0x98
  40a996:	xor    eax,edi
  40a998:	push   0xd1b4dbdd
  40a99d:	push   ebx
  40a99e:	aas    
  40a99f:	mov    al,ds:0x92ad16aa
  40a9a4:	pushf  
  40a9a5:	lods   al,BYTE PTR ds:[esi]
  40a9a6:	lea    edx,[edx-0x27]
  40a9a9:	sbb    ecx,ecx
  40a9ab:	repz add ecx,ebp
  40a9ae:	pop    esi
  40a9af:	shl    DWORD PTR [edi+ecx*2+0x1f],cl
  40a9b3:	mov    ch,0x91
  40a9b5:	or     al,0x8c
  40a9b7:	jg     0x40aa24
  40a9b9:	mov    al,BYTE PTR ss:[edi]
  40a9bc:	into   
  40a9bd:	lea    ebp,[eax-0x29]
  40a9c0:	and    BYTE PTR [edi-0x64],bh
  40a9c3:	dec    ebx
  40a9c4:	(bad)  
  40a9c5:	pushf  
  40a9c6:	ficom  WORD PTR [esi+0x4f77e485]
  40a9cc:	ds xchg esp,eax
  40a9ce:	out    0x71,eax
  40a9d0:	mov    eax,ds:0x15057561
  40a9d5:	adc    al,0x14
  40a9d7:	enter  0x4467,0xf2
  40a9db:	and    eax,0x2c03036f
  40a9e0:	call   0x360a:0x81cff17e
  40a9e7:	xor    esp,DWORD PTR [esi-0x2ba6c76c]
  40a9ed:	sar    BYTE PTR [edx-0x6b18ede3],0xb6
  40a9f4:	or     al,0x8e
  40a9f6:	hlt    
  40a9f7:	nop
  40a9f8:	cmp    eax,0x8282f326
  40a9fd:	mov    ah,0xa9
  40a9ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa00:	jl     0x40aa76
  40aa02:	dec    edx
  40aa03:	ror    DWORD PTR [ebp+0x2d],cl
  40aa06:	pusha  
  40aa07:	out    0x26,al
  40aa09:	inc    ebx
  40aa0a:	push   ss
  40aa0b:	inc    esp
  40aa0c:	inc    ecx
  40aa0d:	ror    bl,1
  40aa0f:	push   es
  40aa10:	gs sub ecx,0x6570f205
  40aa17:	rcr    DWORD PTR [eax-0x75],cl
  40aa1a:	and    al,0x6d
  40aa1c:	cmp    BYTE PTR [si+0x4e76],0xf3
  40aa22:	icebp  
  40aa23:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40aa25:	add    dh,BYTE PTR [esi-0x3a35796b]
  40aa2b:	cmp    ebp,edi
  40aa2d:	add    al,0x47
  40aa2f:	sbb    edx,DWORD PTR [edi-0x63]
  40aa32:	push   edi
  40aa33:	pop    ds
  40aa34:	xchg   ebp,eax
  40aa35:	repnz das 
  40aa37:	jo     0x40a9f6
  40aa39:	pop    eax
  40aa3a:	loope  0x40aa8a
  40aa3c:	mov    al,0xe2
  40aa3e:	xchg   edi,eax
  40aa3f:	(bad)
  40aa42:	test   ch,dl
  40aa44:	aaa    
  40aa45:	lock sbb BYTE PTR [edi],bh
  40aa48:	addr16 jne 0x40aac6
  40aa4b:	sub    al,0x6d
  40aa4d:	jmp    DWORD PTR [esi+0x2a]
  40aa50:	dec    ecx
  40aa51:	jecxz  0x40aaa9
  40aa53:	pop    ebx
  40aa54:	call   0x5272:0xc3fcf707
  40aa5b:	shl    edx,1
  40aa5d:	hlt    
  40aa5e:	push   es
  40aa5f:	push   es
  40aa60:	jmp    0x40aabf
  40aa62:	jae    0x40aa9f
  40aa64:	scas   al,BYTE PTR es:[edi]
  40aa65:	ja     0x40aa6c
  40aa67:	push   ecx
  40aa68:	hlt    
  40aa69:	shr    DWORD PTR [edi],cl
  40aa6b:	jo     0x40aa7a
  40aa6d:	add    DWORD PTR [esi+ebp*4-0x2b3aa0e9],esp
  40aa74:	(bad)  
  40aa75:	mov    ch,0x3
  40aa77:	gs adc al,0xcc
  40aa7a:	mov    eax,0xc9065f8c
  40aa7f:	adc    DWORD PTR [eax],edi
  40aa81:	repnz call 0xe99c:0x47cace82
  40aa89:	and    DWORD PTR [ebp+ebp*4-0x73],edi
  40aa8d:	mov    esp,0xa22f0f1e
  40aa92:	mov    eax,0x8e61e1c6
  40aa97:	je     0x40ab11
  40aa99:	mov    BYTE PTR [ebp+0x2ec785a0],al
  40aa9f:	iret   
  40aaa0:	ficomp DWORD PTR es:[ebp-0x45]
  40aaa4:	loop   0x40aaa6
  40aaa6:	in     eax,dx
  40aaa7:	neg    DWORD PTR [ebx-0x6fa7a145]
  40aaad:	xor    DWORD PTR [ebx],edx
  40aaaf:	push   esi
  40aab0:	xchg   ebx,eax
  40aab1:	sbb    DWORD PTR [ebx-0x4d28ae8a],esi
  40aab7:	and    BYTE PTR [eax],ah
  40aab9:	add    eax,0xb4137efa
  40aabe:	fisubr DWORD PTR ds:0x2e928a0a
  40aac4:	out    0xcc,al
  40aac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aac7:	push   0x9662c9bc
  40aacc:	sbb    bl,BYTE PTR [esi+0x65]
  40aacf:	xor    DWORD PTR [esi+0x33308fbd],edi
  40aad5:	das    
  40aad6:	ins    BYTE PTR es:[edi],dx
  40aad7:	cmp    eax,0x9241a12d
  40aadc:	sbb    al,0x4e
  40aade:	stc    
  40aadf:	ficom  WORD PTR [ebp+0x71]
  40aae2:	daa    
  40aae3:	cmp    DWORD PTR [edi+0x72],edx
  40aae6:	dec    edx
  40aae7:	iret   
  40aae8:	mov    ebx,?
  40aaea:	jg     0x40ab24
  40aaec:	cs out dx,al
  40aaee:	ret    
  40aaef:	in     al,0x60
  40aaf1:	mov    ebx,0xc2d4750e
  40aaf6:	dec    esp
  40aaf7:	push   eax
  40aaf8:	fs and eax,0xdd7827bd
  40aafe:	jno    0x40aaf5
  40ab00:	jle    0x40ab31
  40ab02:	and    al,0x37
  40ab04:	add    dl,BYTE PTR [esi-0x231cdbd3]
  40ab0a:	dec    edx
  40ab0b:	fidivr DWORD PTR ds:0xdbfeb5c6
  40ab11:	cli    
  40ab12:	sub    bh,BYTE PTR [ecx+0x23e4a0b1]
  40ab18:	jecxz  0x40ab51
  40ab1a:	stos   BYTE PTR es:[edi],al
  40ab1b:	dec    esi
  40ab1c:	ins    DWORD PTR es:[edi],dx
  40ab1d:	adc    DWORD PTR [esi-0x54],edi
  40ab20:	out    0xaf,al
  40ab22:	inc    ebx
  40ab23:	ja     0x40ab7d
  40ab25:	add    eax,0x3ea59f78
  40ab2a:	outs   dx,DWORD PTR ds:[esi]
  40ab2b:	sub    dl,bh
  40ab2d:	dec    ecx
  40ab2e:	popf   
  40ab2f:	loope  0x40abad
  40ab31:	mov    edi,eax
  40ab33:	push   esp
  40ab34:	(bad)  
  40ab35:	out    0xa6,al
  40ab37:	push   0x425b6998
  40ab3c:	test   al,0xb4
  40ab3e:	pusha  
  40ab3f:	test   BYTE PTR [edx+0x26b03e91],0x67
  40ab46:	das    
  40ab47:	pop    eax
  40ab48:	jmp    0x6238:0x92d7e3dd
  40ab4f:	test   BYTE PTR [ecx],bh
  40ab51:	idiv   DWORD PTR [ecx+0x53]
  40ab54:	test   eax,0x9371675
  40ab59:	cmp    DWORD PTR [eax],edi
  40ab5b:	into   
  40ab5c:	mov    BYTE PTR [esi+0x4a],dh
  40ab5f:	push   ebp
  40ab60:	loope  0x40ab4a
  40ab62:	shr    BYTE PTR es:[edx],1
  40ab65:	inc    edi
  40ab66:	dec    esi
  40ab67:	and    edi,DWORD PTR [esi+ecx*4]
  40ab6a:	jmp    FWORD PTR [edx+0x6e]
  40ab6d:	mov    ecx,DWORD PTR ds:0xdb14d6be
  40ab73:	or     DWORD PTR [ecx+ebp*1],eax
  40ab76:	ret    0xbf5c
  40ab79:	push   ebp
  40ab7a:	enter  0xe990,0xf
  40ab7e:	pop    eax
  40ab7f:	mov    ecx,0xe21cb223
  40ab84:	imul   ebp,DWORD PTR [edx-0x6c09157b],0xd19ba436
  40ab8e:	cs pop ds
  40ab90:	xor    eax,0x98e9bf93
  40ab95:	mov    esp,0x8e9a962a
  40ab9a:	es jmp 0x40abe3
  40ab9d:	div    DWORD PTR [edx+0xa36603d]
  40aba3:	add    eax,0xb182fe6d
  40aba8:	addr16 mov al,0x61
  40abab:	and    eax,0xa919d5dc
  40abb0:	fimul  WORD PTR [ebx]
  40abb2:	mov    edi,0x23939fa8
  40abb7:	xor    edx,DWORD PTR [eax+0x24e02be7]
  40abbd:	mov    dh,0xdd
  40abbf:	dec    esi
  40abc0:	mov    ds:0x4bd5d4ed,al
  40abc5:	out    dx,eax
  40abc6:	sbb    eax,0x8f03a8f5
  40abcb:	mov    ebp,0x15e912b
  40abd0:	mov    esi,DWORD PTR [ebx-0x38e52e53]
  40abd6:	xchg   ebp,eax
  40abd7:	aaa    
  40abd8:	repnz out dx,eax
  40abda:	mov    edx,0x754a221a
  40abdf:	stc    
  40abe0:	outs   dx,BYTE PTR ds:[esi]
  40abe1:	xchg   ecx,eax
  40abe2:	bound  esi,QWORD PTR [edx-0xf51cb95]
  40abe8:	xchg   ecx,eax
  40abe9:	sahf   
  40abea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abeb:	(bad)  
  40abec:	jno    0x40ab86
  40abee:	repnz dec esp
  40abf0:	popa   
  40abf1:	int    0x93
  40abf3:	pop    esi
  40abf4:	leave  
  40abf5:	pop    ebp
  40abf6:	push   ebp
  40abf7:	shl    BYTE PTR [ebx+ebp*8-0x17d5cb75],cl
  40abfe:	fisttp DWORD PTR [edi]
  40ac00:	mov    eax,ds:0xac143005
  40ac05:	push   edx
  40ac06:	rol    BYTE PTR [eax],1
  40ac08:	(bad)  
  40ac09:	rcl    DWORD PTR [ebx+0x9],1
  40ac0c:	lds    esi,FWORD PTR [edx]
  40ac0e:	in     eax,dx
  40ac0f:	fistp  DWORD PTR [ecx+0x45]
  40ac12:	jmp    0x4f27222
  40ac17:	jbe    0x40ac46
  40ac19:	ldmxcsr DWORD PTR [ebp+edx*1+0xe]
  40ac1e:	or     al,0x2c
  40ac20:	xor    BYTE PTR [ecx-0x1f],al
  40ac23:	jecxz  0x40abb8
  40ac25:	mov    BYTE PTR [ecx+0x23],al
  40ac28:	cmp    edi,DWORD PTR [ecx+ebp*4]
  40ac2b:	loop   0x40abb9
  40ac2d:	push   edx
  40ac2e:	add    esi,DWORD PTR [ebp+0x11]
  40ac31:	dec    ebx
  40ac32:	xor    eax,0xa0cd0c39
  40ac37:	popa   
  40ac38:	xchg   ebx,eax
  40ac39:	jne    0x40abea
  40ac3b:	ss ss mov ebp,fs
  40ac3f:	xchg   bl,dl
  40ac41:	enter  0xbc28,0xc2
  40ac45:	rcr    BYTE PTR ds:0x63a092e1,cl
  40ac4b:	sub    BYTE PTR [edx],al
  40ac4d:	iret   
  40ac4e:	loopne 0x40ac59
  40ac50:	mov    ecx,0x3560077d
  40ac55:	loop   0x40ac99
  40ac57:	inc    esp
  40ac58:	inc    esi
  40ac59:	lods   eax,DWORD PTR ds:[esi]
  40ac5a:	and    eax,0xba3f6657
  40ac5f:	pusha  
  40ac60:	jb     0x40ac0b
  40ac62:	pop    esp
  40ac63:	xlat   BYTE PTR ds:[ebx]
  40ac64:	xor    cl,al
  40ac66:	out    dx,al
  40ac67:	and    bl,dl
  40ac69:	xchg   esp,eax
  40ac6a:	in     eax,dx
  40ac6b:	jnp    0x40ac1e
  40ac6d:	or     ah,bh
  40ac6f:	xor    DWORD PTR [esi-0x7d1d15f6],eax
  40ac75:	push   0xffffffe7
  40ac77:	stos   BYTE PTR es:[edi],al
  40ac78:	bswap  di
  40ac7b:	shl    DWORD PTR [ecx],cl
  40ac7d:	xchg   ebx,eax
  40ac7e:	dec    edx
  40ac7f:	adc    bh,ch
  40ac81:	out    0x3f,eax
  40ac83:	outs   dx,DWORD PTR ds:[esi]
  40ac84:	cld    
  40ac85:	mov    WORD PTR [esi+0x40],es
  40ac88:	lds    ecx,FWORD PTR [edx]
  40ac8a:	fst    QWORD PTR [eax]
  40ac8c:	mov    al,BYTE PTR [edi+0x4c]
  40ac8f:	sub    dl,cl
  40ac91:	push   esi
  40ac92:	or     BYTE PTR [edi],ah
  40ac94:	addr16 iret 
  40ac96:	bound  edx,QWORD PTR [ebx]
  40ac98:	mov    dl,al
  40ac9a:	ret    0xefbb
  40ac9d:	in     al,0x41
  40ac9f:	shl    ebx,0x1e
  40aca2:	ret    0x5911
  40aca5:	loope  0x40ac97
  40aca7:	and    eax,0x1f53a8f9
  40acac:	out    dx,eax
  40acad:	and    esp,DWORD PTR [ebp-0xc1f6d68]
  40acb3:	sub    eax,0x2a9abd2c
  40acb8:	mov    ds:0x3f3b35ce,al
  40acbd:	mov    eax,ds:0xbb6e3cd8
  40acc2:	not    BYTE PTR ds:0x1a77ec96
  40acc8:	pop    ds
  40acc9:	xor    al,0xc4
  40accb:	repz loop 0x40acfa
  40acce:	pop    ss
  40accf:	mov    dh,0xa4
  40acd1:	in     eax,0xa
  40acd3:	and    dh,BYTE PTR [ecx-0xb267b28]
  40acd9:	sub    edx,ebp
  40acdb:	inc    edx
  40acdc:	sub    edx,ecx
  40acde:	out    dx,al
  40acdf:	cmp    al,0xa4
  40ace1:	cmp    BYTE PTR [edx],ah
  40ace3:	adc    BYTE PTR ds:0x126908e7,0xc6
  40acea:	xor    al,0xd
  40acec:	pop    ebx
  40aced:	push   esp
  40acee:	iret   
  40acef:	cs fwait
  40acf1:	jmp    0x663c:0x1b480355
  40acf8:	push   ebp
  40acf9:	sbb    DWORD PTR [edx+0x5d05b0ca],esi
  40acff:	sbb    dh,BYTE PTR [ebx-0x26db1302]
  40ad05:	test   DWORD PTR [esi-0x4a],esi
  40ad08:	push   ebx
  40ad09:	out    0xfd,al
  40ad0b:	test   BYTE PTR [eax+0x776057fe],bl
  40ad11:	sub    BYTE PTR [esi+eax*8-0x45063a56],0xd8
  40ad19:	(bad)  
  40ad1a:	outs   dx,DWORD PTR ds:[esi]
  40ad1b:	pop    ebx
  40ad1c:	or     edx,DWORD PTR [ebx-0x77e584a3]
  40ad22:	xlat   BYTE PTR ds:[ebx]
  40ad23:	test   dl,0x40
  40ad26:	xor    edi,DWORD PTR [edi+0x28]
  40ad29:	out    dx,eax
  40ad2a:	jbe    0x40ad29
  40ad2c:	dec    edx
  40ad2d:	push   ebp
  40ad2e:	fwait
  40ad2f:	mov    al,ds:0x75b1b8d6
  40ad34:	xchg   edx,eax
  40ad35:	sbb    ebp,ebp
  40ad37:	jecxz  0x40acce
  40ad39:	add    eax,0x4fc6cdb6
  40ad3e:	xchg   ebp,eax
  40ad3f:	aad    0x26
  40ad41:	xchg   esp,eax
  40ad42:	xor    dl,dl
  40ad44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad45:	arpl   WORD PTR [edi-0x34],si
  40ad48:	mov    dh,0x5d
  40ad4a:	xor    ch,BYTE PTR [edi]
  40ad4c:	ds xchg edx,eax
  40ad4e:	pop    ebx
  40ad4f:	into   
  40ad50:	ja     0x40ad0f
  40ad52:	mov    ecx,0x7d381ac2
  40ad57:	xchg   ebx,eax
  40ad58:	arpl   WORD PTR [edx+0x78],bp
  40ad5b:	je     0x40ad26
  40ad5d:	retf   0x801b
  40ad60:	push   ebp
  40ad61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad62:	and    al,0x1
  40ad64:	leave  
  40ad65:	xchg   esi,eax
  40ad66:	jmp    0x2912:0x2549b456
  40ad6d:	retf   0xa4ff
  40ad70:	xchg   edx,eax
  40ad71:	imul   ebx,DWORD PTR ds:0xaa644c40,0xba82e0e1
  40ad7b:	mov    ds:0xdc444861,eax
  40ad80:	jmp    0x40adba
  40ad82:	pop    bx
  40ad84:	ret    
  40ad85:	xchg   esi,eax
  40ad86:	xchg   ebx,eax
  40ad87:	cs ins DWORD PTR es:[edi],dx
  40ad89:	stos   BYTE PTR es:[edi],al
  40ad8a:	lea    ebp,[ebx-0x2d65f52b]
  40ad90:	mov    ecx,0xb6c50acb
  40ad95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad96:	loopne 0x40ad57
  40ad98:	inc    ebx
  40ad99:	out    dx,al
  40ad9a:	mov    eax,DWORD PTR [ebp-0x14]
  40ad9d:	movzx  ecx,WORD PTR ds:0x42915f
  40ada4:	or     DWORD PTR ds:0x4291e7,ecx
  40adaa:	mov    ecx,DWORD PTR [ebp+0x8]
  40adad:	add    ecx,DWORD PTR [eax+0x1c]
  40adb0:	mov    DWORD PTR [ebp-0x14],ecx
  40adb3:	mov    DWORD PTR ds:0x4291d3,0x1651
  40adbd:	jmp    0x40d2ae
  40adc2:	mov    eax,DWORD PTR [ebp-0x2c]
  40adc5:	and    DWORD PTR ds:0x4291c3,0x0
  40adcf:	jmp    0x40ade1
  40add4:	mov    ecx,DWORD PTR ds:0x4291c3
  40adda:	inc    ecx
  40addb:	mov    DWORD PTR ds:0x4291c3,ecx
  40ade1:	cmp    DWORD PTR ds:0x4291c3,0x1e
  40ade8:	jae    0x40ae37
  40adee:	cmp    DWORD PTR ds:0x4291c3,0x10
  40adf5:	jbe    0x40ae37
  40adfb:	jmp    0x40ae18
  40ae00:	push   0x54af
  40ae05:	push   0x428000
  40ae0a:	push   0x42810e
  40ae0f:	push   DWORD PTR [ebp-0x10]
  40ae12:	call   DWORD PTR ds:0x42a55b
  40ae18:	cmp    DWORD PTR ds:0x4291c3,0xf
  40ae1f:	jne    0x40ae32
  40ae25:	mov    ecx,DWORD PTR ds:0x4291c3
  40ae2b:	inc    ecx
  40ae2c:	mov    DWORD PTR ds:0x4291c3,ecx
  40ae32:	jmp    0x40add4
  40ae37:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae3a:	add    ecx,DWORD PTR [eax+ebx*4]
  40ae3d:	and    DWORD PTR ds:0x4291df,0x0
  40ae47:	jmp    0x40ae57
  40ae4c:	mov    eax,ds:0x4291df
  40ae51:	inc    eax
  40ae52:	mov    ds:0x4291df,eax
  40ae57:	cmp    DWORD PTR ds:0x4291df,0x10
  40ae5e:	jae    0x40aea1
  40ae64:	cmp    DWORD PTR ds:0x4291df,0x5
  40ae6b:	jb     0x40aea1
  40ae71:	jmp    0x40ae84
  40ae76:	push   0x73ed
  40ae7b:	push   DWORD PTR [ebp-0xc]
  40ae7e:	call   DWORD PTR ds:0x42a55f
  40ae84:	cmp    DWORD PTR ds:0x4291df,0x4
  40ae8b:	jne    0x40ae9c
  40ae91:	mov    eax,ds:0x4291df
  40ae96:	inc    eax
  40ae97:	mov    ds:0x4291df,eax
  40ae9c:	jmp    0x40ae4c
  40aea1:	mov    DWORD PTR [ebp-0x28],ecx
  40aea4:	add    ecx,DWORD PTR ds:0x429183
  40aeaa:	mov    eax,DWORD PTR [ebp-0x4]
  40aead:	xor    DWORD PTR ds:0x42916b,ebx
  40aeb3:	mov    ecx,DWORD PTR [ebp-0x28]
  40aeb6:	xor    eax,esi
  40aeb8:	jmp    0x40d26c
  40aebd:	add    BYTE PTR [ecx],dh
  40aebf:	cld    
  40aec0:	sbb    esp,ecx
  40aec2:	nop
  40aec3:	and    BYTE PTR [eax],0xe5
  40aec6:	push   eax
  40aec7:	(bad)  [edi+0x23b4c2fa]
  40aecd:	sub    al,0xf1
  40aecf:	add    DWORD PTR [ebx-0x7c7ca318],0x42
  40aed6:	rol    bh,cl
  40aed8:	ins    DWORD PTR es:[edi],dx
  40aed9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aeda:	call   0x3d9593df
  40aedf:	cmc    
  40aee0:	bnd jbe 0x40af07
  40aee3:	jg     0x40aeff
  40aee5:	call   0x9b4d49fb
  40aeea:	push   ds
  40aeeb:	ret    0x2f4
  40aeee:	stc    
  40aeef:	dec    BYTE PTR [ecx+0x60]
  40aef2:	push   edi
  40aef3:	push   ss
  40aef4:	pop    eax
  40aef5:	das    
  40aef6:	cs push 0x58
  40aef9:	pop    edx
  40aefa:	xchg   ecx,eax
  40aefb:	xchg   ebp,eax
  40aefc:	push   0xffffffc6
  40aefe:	cmp    DWORD PTR [edx],0xb0c702f3
  40af04:	xchg   ah,dh
  40af06:	inc    ebx
  40af07:	jle    0x40aec4
  40af09:	and    al,0xa9
  40af0b:	enter  0xf494,0x1
  40af0f:	outs   dx,DWORD PTR ds:[esi]
  40af10:	lods   eax,DWORD PTR ds:[esi]
  40af11:	das    
  40af12:	outs   dx,DWORD PTR ds:[esi]
  40af13:	or     BYTE PTR [ecx+edi*2],bh
  40af16:	lahf   
  40af17:	call   DWORD PTR [ecx-0x1611ed44]
  40af1d:	mov    DWORD PTR [ebp-0xe],ebx
  40af20:	lea    edi,[edi+0x22]
  40af23:	shl    DWORD PTR [esi+0x1a],1
  40af26:	push   0x20761c31
  40af2b:	outs   dx,BYTE PTR ds:[esi]
  40af2c:	cli    
  40af2d:	inc    ebx
  40af2e:	xchg   DWORD PTR [esi+edi*8+0x7c],edx
  40af32:	(bad)  
  40af33:	or     DWORD PTR [edi],esp
  40af35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af36:	or     al,0xe3
  40af38:	adc    al,0xe2
  40af3a:	into   
  40af3b:	mov    eax,ds:0xcbd3c458
  40af40:	cs aas 
  40af42:	push   esi
  40af43:	das    
  40af44:	sar    DWORD PTR [edi+0x45],0xd8
  40af48:	(bad)  
  40af49:	rcr    BYTE PTR [ebx],0xd
  40af4c:	test   ah,dh
  40af4e:	jbe    0x40af54
  40af50:	not    DWORD PTR [eax-0x7f9cff4]
  40af56:	test   DWORD PTR [esi-0x612c5f96],edi
  40af5c:	push   edx
  40af5d:	icebp  
  40af5e:	es push esp
  40af60:	lea    ebp,[eax*4-0x6ef0401b]
  40af67:	dec    edi
  40af68:	mov    ah,0x17
  40af6a:	pop    es
  40af6b:	mov    eax,ds:0xd86ea3ca
  40af70:	push   esi
  40af71:	ficomp WORD PTR [ebx+eiz*2-0x1a]
  40af75:	mov    ebx,0xe01768ff
  40af7a:	jnp    0x40afcf
  40af7c:	mov    ecx,0xafd731ec
  40af81:	cmp    ebp,eax
  40af83:	push   ebx
  40af84:	es adc dh,0x80
  40af88:	dec    edi
  40af89:	push   ebx
  40af8a:	lods   al,BYTE PTR ds:[esi]
  40af8b:	fnstcw WORD PTR [ecx-0x6b5f1998]
  40af91:	jecxz  0x40af3b
  40af93:	jmp    0x40afd1
  40af95:	nop
  40af96:	xchg   DWORD PTR [edi+0xc],edi
  40af99:	xchg   ebx,eax
  40af9a:	xchg   DWORD PTR [esi+ebp*4-0x4e1a089d],esp
  40afa1:	mov    edi,0x961c8e6b
  40afa6:	sub    DWORD PTR [ecx+0x7c],eax
  40afa9:	pop    esp
  40afaa:	lods   al,BYTE PTR ds:[esi]
  40afab:	test   eax,0x967c2151
  40afb0:	test   eax,0x6b7e541b
  40afb5:	(bad)  
  40afb6:	dec    esp
  40afb7:	stos   DWORD PTR es:[edi],eax
  40afb8:	ins    DWORD PTR es:[edi],dx
  40afb9:	inc    edx
  40afba:	fnstenv [ebp-0x64]
  40afbd:	out    0xbe,al
  40afbf:	dec    eax
  40afc0:	je     0x40afbf
  40afc2:	xor    BYTE PTR [ecx+0x79cccb7f],dh
  40afc8:	sti    
  40afc9:	ror    BYTE PTR [ecx],cl
  40afcb:	cmp    BYTE PTR [edi-0x11443fe4],ah
  40afd1:	stos   BYTE PTR es:[edi],al
  40afd2:	imul   ecx,ebx,0x1b18e685
  40afd8:	adc    al,0xff
  40afda:	jmp    0xc8a5fdc4
  40afdf:	fxch   st(5)
  40afe1:	mov    eax,ds:0x4e4cbd93
  40afe6:	bound  ecx,QWORD PTR [ecx+ecx*4-0x5db20b9f]
  40afed:	jl     0x40afce
  40afef:	bound  ebp,QWORD PTR [esi+0x19]
  40aff2:	sar    BYTE PTR [ebp-0x4f5533ea],1
  40aff8:	test   DWORD PTR [edx+0x75350f9b],esi
  40affe:	add    eax,DWORD PTR ds:[ebx+0x79]
  40b002:	jle    0x40b06d
  40b004:	xchg   ebx,eax
  40b005:	test   bl,cl
  40b007:	inc    esp
  40b008:	(bad)  
  40b009:	pop    esi
  40b00a:	test   al,0x42
  40b00c:	adc    dh,BYTE PTR [ebp-0x581c5d7b]
  40b012:	fcomp  QWORD PTR [ebx+0x44]
  40b015:	and    BYTE PTR [ebx+ecx*4-0x1f],al
  40b019:	mov    edx,0xec97bec
  40b01e:	test   al,0x21
  40b020:	cmp    DWORD PTR [eax+0x75],0xc98b7a43
  40b027:	repnz stc 
  40b029:	popa   
  40b02a:	xchg   ebp,eax
  40b02b:	stc    
  40b02c:	ror    DWORD PTR [ebx+0x5f],cl
  40b02f:	mov    bh,0x87
  40b031:	aaa    
  40b032:	push   es
  40b033:	sub    cl,BYTE PTR [esi]
  40b035:	mov    ecx,0xc13384db
  40b03a:	inc    ebp
  40b03b:	fild   WORD PTR [esp+ebp*2-0x12380ad]
  40b042:	loop   0x40b03e
  40b044:	gs (bad) 
  40b046:	int    0xb3
  40b048:	dec    edi
  40b049:	mov    ah,ch
  40b04b:	call   0x3b95:0x5838fa21
  40b052:	fwait
  40b053:	int3   
  40b054:	and    bl,0x45
  40b057:	or     eax,0xda847153
  40b05c:	je     0x40b0b1
  40b05e:	loope  0x40affb
  40b060:	inc    edx
  40b061:	popf   
  40b062:	jmp    0x238ccf1a
  40b067:	dec    eax
  40b068:	xor    eax,0x63727d88
  40b06d:	out    0x3e,eax
  40b06f:	imul   esp,DWORD PTR [eax],0x38bfe3a6
  40b075:	lods   al,BYTE PTR ds:[esi]
  40b076:	push   0x4a
  40b078:	mov    edx,0x4f1282af
  40b07d:	ins    BYTE PTR es:[edi],dx
  40b07e:	out    dx,eax
  40b07f:	sahf   
  40b080:	xlat   BYTE PTR ds:[ebx]
  40b081:	loopne 0x40b0f6
  40b083:	mov    esi,0xb2b7055a
  40b088:	jnp    0x40b040
  40b08a:	mov    ds:0x4dc5f821,eax
  40b08f:	xchg   esp,eax
  40b090:	mov    ?,WORD PTR ds:0xa61418e8
  40b096:	dec    eax
  40b097:	aam    0xc1
  40b099:	jp     0x40b0ef
  40b09b:	jne    0x40b115
  40b09d:	or     al,0x2f
  40b09f:	ficom  WORD PTR [eax+0x42]
  40b0a2:	mov    esp,0x5f170caf
  40b0a7:	lock xchg esi,eax
  40b0a9:	and    eax,0xbccf7ba3
  40b0ae:	inc    ebp
  40b0af:	mov    DWORD PTR [ebx],0x5126a3db
  40b0b5:	cmp    ah,BYTE PTR [ebp-0x69]
  40b0b8:	xor    BYTE PTR [ebx+0x46],dl
  40b0bb:	push   ebp
  40b0bc:	aam    0x4
  40b0be:	inc    ebp
  40b0bf:	(bad)  
  40b0c0:	lods   eax,DWORD PTR ds:[esi]
  40b0c1:	in     eax,0x8a
  40b0c3:	out    dx,al
  40b0c4:	mov    eax,ss
  40b0c6:	outs   dx,DWORD PTR ds:[esi]
  40b0c7:	data16 xchg BYTE PTR [esi+edx*2+0x457049a7],dl
  40b0cf:	into   
  40b0d0:	push   ecx
  40b0d1:	nop
  40b0d2:	add    al,0x1
  40b0d4:	pusha  
  40b0d5:	jle    0x40b084
  40b0d7:	mov    ebx,0x292bd7ed
  40b0dc:	push   esi
  40b0dd:	fisttp WORD PTR [ecx-0x1b5d19be]
  40b0e3:	add    ch,dh
  40b0e5:	adc    al,0x97
  40b0e7:	add    cl,bl
  40b0e9:	sub    dl,al
  40b0eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0ec:	xchg   ebp,eax
  40b0ed:	push   ds
  40b0ee:	or     DWORD PTR [ebx-0x5e],ecx
  40b0f1:	xchg   ecx,eax
  40b0f2:	and    eax,0x518dc6b0
  40b0f7:	pop    edx
  40b0f8:	test   eax,0xa2c295de
  40b0fe:	pop    edi
  40b0ff:	(bad)  
  40b101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b102:	and    dh,al
  40b104:	mov    bl,0xbd
  40b106:	xchg   ebp,eax
  40b107:	mov    al,0xad
  40b109:	mov    WORD PTR [eax],cs
  40b10b:	fs jl  0x40b0cd
  40b10e:	or     DWORD PTR [ecx],0x2bb2528e
  40b114:	or     ebx,edi
  40b116:	push   ds
  40b117:	cmp    BYTE PTR [ecx+0x4e],ch
  40b11a:	pop    ss
  40b11b:	mov    bh,0x48
  40b11d:	xlat   BYTE PTR ds:[ebx]
  40b11e:	or     bh,BYTE PTR [ebx]
  40b120:	leave  
  40b121:	pushf  
  40b122:	lds    ebx,FWORD PTR [edx-0x3227dbfa]
  40b128:	sub    BYTE PTR [ebx+0x35],bl
  40b12b:	(bad)  
  40b12c:	lahf   
  40b12d:	dec    BYTE PTR fs:[ebp-0x25d4bac2]
  40b134:	pop    ebp
  40b135:	enter  0x9445,0x32
  40b139:	or     eax,DWORD PTR ds:0xd5781abd
  40b13f:	mov    esi,0x43e98d77
  40b144:	jbe    0x40b1a8
  40b146:	xchg   edi,eax
  40b147:	dec    ebx
  40b148:	dec    ebp
  40b149:	push   esp
  40b14a:	ret    
  40b14b:	pop    ecx
  40b14c:	(bad)  [ebx+0x77e2d024]
  40b152:	test   eax,0xd6919809
  40b157:	push   edx
  40b158:	icebp  
  40b159:	mov    dh,0xbe
  40b15b:	push   ebp
  40b15c:	dec    ebx
  40b15d:	mov    ebp,0xe66ac9be
  40b162:	push   ss
  40b163:	add    BYTE PTR [edx+0x18],0x9e
  40b167:	stos   BYTE PTR es:[edi],al
  40b168:	mov    ch,0xfb
  40b16a:	lahf   
  40b16b:	sub    ch,BYTE PTR [ecx+0x7]
  40b16e:	je     0x40b119
  40b170:	aaa    
  40b171:	pop    edi
  40b172:	aaa    
  40b173:	lods   al,BYTE PTR ds:[esi]
  40b174:	rcl    DWORD PTR [edi],cl
  40b176:	push   esi
  40b177:	inc    eax
  40b178:	sahf   
  40b179:	div    DWORD PTR [ebx]
  40b17b:	jl     0x40b1ef
  40b17d:	lods   eax,DWORD PTR ds:[esi]
  40b17e:	lahf   
  40b17f:	xchg   BYTE PTR [edi-0x34],bl
  40b182:	inc    esi
  40b183:	or     BYTE PTR [edi],al
  40b185:	jecxz  0x40b1b9
  40b187:	jmp    0x40b10d
  40b189:	pop    es
  40b18a:	imul   BYTE PTR [ebx+ebp*8-0x361d4e46]
  40b191:	(bad)  
  40b192:	pop    esi
  40b193:	out    dx,al
  40b194:	fcom   DWORD PTR [ecx+0x71]
  40b197:	jns    0x40b1d1
  40b199:	add    eax,esi
  40b19b:	popf   
  40b19c:	xlat   BYTE PTR ds:[ebx]
  40b19d:	sub    DWORD PTR [ebx-0x24],eax
  40b1a0:	or     DWORD PTR [ebp+0x1b],ebx
  40b1a3:	inc    ecx
  40b1a4:	jecxz  0x40b153
  40b1a6:	mov    ah,0x26
  40b1a8:	inc    edx
  40b1a9:	lods   al,BYTE PTR ds:[esi]
  40b1aa:	lods   al,BYTE PTR ds:[esi]
  40b1ab:	gs nop
  40b1ad:	jl     0x40b1a0
  40b1af:	ins    DWORD PTR es:[edi],dx
  40b1b0:	nop
  40b1b1:	lahf   
  40b1b2:	imul   ecx,DWORD PTR [ebp-0x2e45da26],0x91cbbf91
  40b1bc:	mov    dl,BYTE PTR [ecx]
  40b1be:	or     eax,0x7af63b40
  40b1c3:	sbb    al,0x27
  40b1c5:	(bad)  
  40b1c6:	xorps  xmm3,XMMWORD PTR [esi-0x25]
  40b1ca:	scas   al,BYTE PTR es:[edi]
  40b1cb:	arpl   WORD PTR [ebp-0x13c6e63f],cx
  40b1d1:	fistp  WORD PTR [eax+0x78776476]
  40b1d7:	jo     0x40b177
  40b1d9:	pop    eax
  40b1da:	adc    al,0x58
  40b1dc:	push   esi
  40b1dd:	dec    DWORD PTR [ebx]
  40b1df:	and    DWORD PTR [edx],edx
  40b1e1:	adc    al,0xe6
  40b1e3:	call   0x54c3:0x4d9ef91c
  40b1ea:	jno    0x40b20f
  40b1ec:	out    0x80,al
  40b1ee:	ds cmp ebx,edx
  40b1f1:	pop    ebx
  40b1f2:	mov    ah,0xe6
  40b1f4:	add    DWORD PTR [esi],ebx
  40b1f6:	sbb    BYTE PTR [ebx+0x6496d525],0x5a
  40b1fd:	clc    
  40b1fe:	cld    
  40b1ff:	jne    0x40b257
  40b201:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b202:	ins    DWORD PTR es:[edi],dx
  40b203:	sbb    eax,0xcf8266ce
  40b208:	xchg   ebp,eax
  40b209:	mov    edx,0x4ecbb175
  40b20e:	push   es
  40b20f:	xchg   edi,eax
  40b210:	(bad)
  40b213:	inc    edi
  40b214:	pop    ss
  40b215:	hlt    
  40b216:	dec    edi
  40b217:	cmp    DWORD PTR [ebp-0x28],ebx
  40b21a:	push   ebp
  40b21b:	aas    
  40b21c:	or     dl,BYTE PTR [ecx+0x69]
  40b21f:	pop    esp
  40b220:	mov    WORD PTR [di],es
  40b223:	(bad)  
  40b224:	sar    BYTE PTR [edx+0x35],1
  40b227:	js     0x40b1f0
  40b229:	mov    eax,ds:0xb89b775d
  40b22e:	mov    dl,0x8e
  40b230:	jb     0x40b263
  40b232:	mov    edx,0xb13641c4
  40b237:	jmp    FWORD PTR [ecx+edi*8+0x69]
  40b23b:	and    eax,0xd695d0f5
  40b240:	shl    dl,1
  40b242:	xor    ch,BYTE PTR [edi]
  40b244:	jb     0x40b25e
  40b246:	xor    eax,0x8958df39
  40b24b:	add    al,0x84
  40b24d:	jl     0xee91cdce
  40b253:	mov    ds:0x8bb63973,al
  40b258:	xor    BYTE PTR [esi-0x10d9e71c],dl
  40b25e:	sub    esi,esi
  40b260:	pop    es
  40b261:	mov    bh,0x80
  40b263:	mov    edi,0x49f82f33
  40b268:	inc    edi
  40b269:	dec    ebp
  40b26a:	imul   edx,ecx,0x1b
  40b26d:	mov    eax,0x159cbf02
  40b272:	inc    ebx
  40b273:	adc    eax,DWORD PTR [edi+0xe438c51]
  40b279:	cli    
  40b27a:	add    BYTE PTR [ebp-0x3a],ah
  40b27d:	jl     0x40b23f
  40b27f:	imul   BYTE PTR [ebx-0x477f70eb]
  40b285:	xor    DWORD PTR [edi-0x7d],ecx
  40b288:	js     0x40b2bb
  40b28a:	mov    dh,0x2
  40b28c:	jnp    0x40b2ca
  40b28e:	or     DWORD PTR [ebx-0x934f5e],ebp
  40b294:	(bad)  [esi]
  40b296:	pop    es
  40b297:	in     eax,0xb5
  40b299:	int3   
  40b29a:	jbe    0x40b297
  40b29c:	xor    eax,DWORD PTR [eax-0x72ec10f2]
  40b2a2:	jb     0x40b23e
  40b2a4:	cmp    eax,0x5b908a11
  40b2a9:	hlt    
  40b2aa:	inc    ebx
  40b2ab:	pop    ds
  40b2ac:	out    0xf,al
  40b2ae:	lahf   
  40b2af:	jo     0x40b231
  40b2b1:	call   0xa5e7:0x6de7e4d6
  40b2b8:	push   edx
  40b2b9:	es dec esp
  40b2bb:	adc    DWORD PTR [eax-0x19],ecx
  40b2be:	add    DWORD PTR [eax-0x20],0x73
  40b2c2:	lds    eax,FWORD PTR [esi+0x3c]
  40b2c5:	pusha  
  40b2c6:	shr    BYTE PTR [ebp-0x3f],0x17
  40b2ca:	mov    dh,0x35
  40b2cc:	xlat   BYTE PTR ds:[ebx]
  40b2cd:	arpl   WORD PTR [esi+0x7b82398e],bp
  40b2d3:	mov    ah,cl
  40b2d5:	jl     0x40b2ba
  40b2d7:	mov    ch,0x1e
  40b2d9:	sub    DWORD PTR [ebx],0xffffff95
  40b2dc:	and    eax,0x5cac9a24
  40b2e1:	add    dh,BYTE PTR [ecx]
  40b2e3:	mov    ecx,edi
  40b2e5:	iret   
  40b2e6:	in     eax,0x80
  40b2e8:	loop   0x40b345
  40b2ea:	pop    esp
  40b2eb:	enter  0x9f16,0x44
  40b2ef:	inc    edi
  40b2f0:	mov    eax,ds:0xe559b06b
  40b2f5:	adc    edx,edi
  40b2f7:	(bad)  
  40b2f8:	adc    eax,0x8889b154
  40b2fd:	mov    dh,0xd6
  40b2ff:	push   ds
  40b300:	sahf   
  40b301:	(bad)  
  40b302:	out    0xed,eax
  40b304:	pop    es
  40b305:	mov    eax,esp
  40b307:	mov    ebp,0x9f3b1c37
  40b30c:	fistp  DWORD PTR [edx+0x8]
  40b30f:	or     al,0x1
  40b311:	stos   BYTE PTR es:[edi],al
  40b312:	fimul  DWORD PTR [eax]
  40b314:	(bad)  
  40b316:	xlat   BYTE PTR ds:[ebx]
  40b317:	fs pushf 
  40b319:	and    ebp,edi
  40b31b:	fpatan 
  40b31d:	jp     0x40b2c4
  40b31f:	fistp  DWORD PTR [edi+0x550075c0]
  40b325:	ss enter 0xe68,0xa3
  40b32a:	mov    DWORD PTR [edi],esp
  40b32c:	and    eax,0xfe9c9ede
  40b331:	les    ebx,FWORD PTR [ebx]
  40b333:	cmp    ecx,DWORD PTR [ebx-0x39370ab4]
  40b339:	test   al,0x90
  40b33b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b33c:	addr16 rcr esi,cl
  40b33f:	ret    
  40b340:	call   0x11d0:0x4179c1d8
  40b347:	adc    eax,0xf931d81b
  40b34c:	(bad)  
  40b34d:	mov    cl,0x91
  40b34f:	shl    DWORD PTR [edi],cl
  40b351:	inc    edx
  40b352:	push   cs
  40b353:	mov    ch,0x19
  40b355:	stos   BYTE PTR es:[edi],al
  40b356:	jecxz  0x40b328
  40b358:	add    BYTE PTR [eax+ebp*2+0x3bc0a23a],dh
  40b35f:	inc    ebx
  40b360:	pop    ebp
  40b361:	mov    bl,0x90
  40b363:	std    
  40b364:	shl    BYTE PTR [ecx+0x6a9a06e2],1
  40b36a:	(bad)  
  40b36b:	mov    ebp,fs
  40b36d:	cld    
  40b36e:	add    dh,BYTE PTR [eax-0x4f]
  40b371:	fldenv [ecx+0x3e4657b]
  40b377:	loop   0x40b358
  40b379:	add    eax,0x1d0562e1
  40b37e:	in     eax,dx
  40b37f:	dec    ebp
  40b380:	push   ss
  40b381:	ins    DWORD PTR es:[edi],dx
  40b382:	push   edx
  40b383:	repz pop ebp
  40b385:	push   0x3b8a6d68
  40b38a:	outs   dx,DWORD PTR ds:[esi]
  40b38b:	fwait
  40b38c:	fs inc ecx
  40b38e:	pop    ecx
  40b38f:	inc    ebx
  40b390:	push   edi
  40b391:	jecxz  0x40b403
  40b393:	out    dx,al
  40b394:	rcr    bl,cl
  40b396:	pop    esi
  40b397:	inc    edx
  40b398:	les    ebp,FWORD PTR [ebx-0x51]
  40b39b:	adc    al,0x58
  40b39d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b39e:	push   0x3e
  40b3a0:	fs test DWORD PTR es:[esi+0x3e],edi
  40b3a5:	sub    BYTE PTR [edx],0x74
  40b3a8:	jb     0x40b407
  40b3aa:	idiv   BYTE PTR [esp+eiz*8-0x15]
  40b3ae:	jle    0x40b406
  40b3b0:	mov    ss,edx
  40b3b2:	mov    ebp,0x377ba6e6
  40b3b7:	lock loop 0x40b346
  40b3ba:	call   0xe2ce279f
  40b3bf:	add    ah,BYTE PTR [ecx+eax*8-0x3c]
  40b3c3:	fisub  WORD PTR [eax*1+0x548c4b4f]
  40b3ca:	dec    esi
  40b3cb:	xor    edi,ebp
  40b3cd:	sbb    al,0x7d
  40b3cf:	dec    esi
  40b3d0:	sub    al,0xff
  40b3d2:	cmp    al,0xdd
  40b3d4:	xchg   edi,eax
  40b3d5:	pop    ebx
  40b3d6:	cmp    cl,BYTE PTR [edx]
  40b3d8:	mov    ecx,0xf7f5c655
  40b3dd:	sub    edx,eax
  40b3df:	cs cmp al,0x67
  40b3e2:	dec    edi
  40b3e3:	js     0x40b3a0
  40b3e5:	ss or  eax,0x91a78adf
  40b3eb:	cmp    BYTE PTR [edx-0xa],0x70
  40b3ef:	jp     0x40b3c5
  40b3f1:	adc    al,0xa1
  40b3f3:	mov    ebx,0xae69a900
  40b3f8:	cmp    dl,BYTE PTR [edi]
  40b3fa:	or     esp,DWORD PTR [ebx+0x16]
  40b3fd:	add    eax,0xcb2b4d4e
  40b402:	jmp    0x6bd9:0xa023b70
  40b409:	daa    
  40b40a:	mov    bh,0x14
  40b40c:	mov    ah,0x25
  40b40e:	dec    ebx
  40b40f:	fisub  DWORD PTR [edx-0x428ea7c8]
  40b415:	add    esi,DWORD PTR [esi]
  40b417:	shl    DWORD PTR [esp+eax*1-0x2e],cl
  40b41b:	xchg   ecx,ebx
  40b41d:	pop    ebp
  40b41e:	pop    ebp
  40b41f:	in     eax,0x5f
  40b421:	push   eax
  40b422:	stos   DWORD PTR es:[edi],eax
  40b423:	test   BYTE PTR [esi+ebx*4+0x6d],bh
  40b427:	sar    DWORD PTR [esi+0xdc91c2],1
  40b42d:	repnz dec ebx
  40b42f:	jae    0x40b4ad
  40b431:	jp     0x40b467
  40b433:	adc    esp,edx
  40b435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b436:	or     cl,cl
  40b438:	or     DWORD PTR [ecx-0x3d],edx
  40b43b:	into   
  40b43c:	xchg   esi,eax
  40b43d:	fldcw  WORD PTR [edi-0x6046e19f]
  40b443:	imul   edx,esi,0x7f8ff3ae
  40b449:	sbb    al,0x71
  40b44b:	adc    bl,al
  40b44d:	cli    
  40b44e:	xor    DWORD PTR [ebx-0x42],edx
  40b451:	inc    ebp
  40b452:	push   edi
  40b453:	bound  esp,QWORD PTR [edi*4+0x4d7683f8]
  40b45a:	or     al,0x77
  40b45c:	xor    eax,0x5f04115e
  40b461:	cdq    
  40b462:	sub    BYTE PTR ds:0x9d6e45e3,al
  40b468:	aad    0xa
  40b46a:	(bad)  
  40b46b:	jmp    0x40b4a8
  40b46d:	call   0xad59acce
  40b472:	aas    
  40b473:	fcmove st,st(0)
  40b475:	popf   
  40b476:	mov    cl,0x66
  40b478:	out    dx,eax
  40b479:	cld    
  40b47a:	jl     0x40b3ff
  40b47c:	outs   dx,BYTE PTR ds:[esi]
  40b47d:	jo     0x40b4ea
  40b47f:	xlat   BYTE PTR ds:[ebx]
  40b480:	fdiv   QWORD PTR [ebp+0x4cabc4c4]
  40b486:	test   esi,eax
  40b488:	sub    eax,0xd27be6e8
  40b48d:	mov    dl,0xd4
  40b48f:	test   al,0x5e
  40b491:	test   DWORD PTR [esi+edi*1],eax
  40b494:	sub    esp,ecx
  40b496:	inc    edx
  40b497:	mov    eax,ds:0xcf402bb9
  40b49c:	fisubr WORD PTR [ebp+0x477e432e]
  40b4a2:	xchg   edi,eax
  40b4a3:	(bad)  
  40b4a4:	mov    ebx,0x868b1f47
  40b4a9:	clc    
  40b4aa:	sbb    ebp,DWORD PTR [edx-0x7fb57e34]
  40b4b0:	lods   eax,DWORD PTR ds:[esi]
  40b4b1:	(bad)  
  40b4b2:	not    DWORD PTR [edx-0x5f7add6c]
  40b4b8:	aas    
  40b4b9:	mov    cs,WORD PTR [ecx-0x31bb11e7]
  40b4bf:	mov    ecx,0x50657572
  40b4c4:	rcl    DWORD PTR [eiz*2+0x34a254f6],cl
  40b4cb:	jmp    0xf00e421c
  40b4d0:	mov    cl,0xff
  40b4d2:	cwde   
  40b4d3:	xchg   ebx,eax
  40b4d4:	scas   al,BYTE PTR es:[edi]
  40b4d5:	sub    eax,0x6ea7afb
  40b4da:	(bad)  
  40b4db:	rcr    BYTE PTR [eax],0xb5
  40b4de:	adc    DWORD PTR [eax*2-0x6fbfecb1],0xe532b826
  40b4e9:	adc    al,0x82
  40b4eb:	add    eax,0x92eabe59
  40b4f0:	pop    ecx
  40b4f1:	or     esp,esi
  40b4f3:	rcr    DWORD PTR [edi+ebp*8],0x8b
  40b4f7:	pop    esi
  40b4f8:	popf   
  40b4f9:	fcomp  QWORD PTR [ebp+0x63f97d13]
  40b4ff:	scas   eax,DWORD PTR es:[edi]
  40b500:	inc    ecx
  40b502:	or     ah,BYTE PTR ds:0x4d6b964a
  40b508:	push   ebp
  40b509:	add    eax,DWORD PTR [ebp-0x11ee67e]
  40b50f:	cmp    BYTE PTR [ecx+0x635f69e9],dh
  40b515:	xor    eax,0x24d21a5f
  40b51a:	inc    edx
  40b51b:	xchg   DWORD PTR [ebx+0xa90dc22],ebx
  40b521:	lea    ecx,[ebp-0x649a700]
  40b527:	nop
  40b528:	xchg   esi,eax
  40b529:	or     edi,esi
  40b52b:	or     ecx,edx
  40b52d:	sub    al,0xc7
  40b52f:	mov    ebp,0xcea237b3
  40b534:	jge    0x40b4c4
  40b536:	cli    
  40b537:	sbb    eax,DWORD PTR [ebx]
  40b539:	jb     0x40b57f
  40b53b:	mov    DWORD PTR [eax+0x15],esi
  40b53e:	mov    eax,0x86ee11d2
  40b543:	test   eax,0xa9c74b8b
  40b548:	stos   BYTE PTR es:[edi],al
  40b549:	(bad)  
  40b54b:	shl    BYTE PTR [ebx+0x3f],0xb6
  40b54f:	mov    esp,0x9c04d797
  40b554:	vmwrite ecx,ebp
  40b557:	mov    bh,0x20
  40b559:	inc    ebp
  40b55a:	addr16 or ch,ah
  40b55d:	arpl   ax,cx
  40b55f:	sbb    BYTE PTR [edx+eiz*4-0x45],al
  40b563:	and    BYTE PTR [eax+0x6d6eb455],ch
  40b569:	outs   dx,BYTE PTR ds:[esi]
  40b56a:	mov    bl,BYTE PTR [edx+0x784a11e]
  40b570:	mov    ds:0xac4bda92,al
  40b575:	sbb    eax,0x8f65dbaf
  40b57a:	(bad)  
  40b57b:	mov    dl,0x46
  40b57d:	or     BYTE PTR [ebx-0x164e7c60],bh
  40b583:	xchg   edx,eax
  40b584:	imul   edi,DWORD PTR [edx],0x26c0c24a
  40b58a:	sbb    eax,0xb07d88f6
  40b58f:	mov    eax,ds:0x807c266f
  40b594:	outs   dx,DWORD PTR ds:[esi]
  40b595:	add    cl,bh
  40b597:	jnp    0x40b5d1
  40b599:	add    bh,BYTE PTR [eax+esi*2]
  40b59c:	in     al,dx
  40b59d:	cmp    eax,0x25e59ef8
  40b5a2:	mov    bh,BYTE PTR [edx-0x23528fa6]
  40b5a8:	mov    dh,0x1
  40b5aa:	pop    eax
  40b5ab:	dec    eax
  40b5ac:	sahf   
  40b5ad:	jnp    0x40b5d8
  40b5af:	aaa    
  40b5b0:	sub    dh,BYTE PTR [eax]
  40b5b2:	jl     0x40b5f4
  40b5b4:	not    ah
  40b5b6:	shl    ebx,1
  40b5b8:	cdq    
  40b5b9:	or     ecx,ebp
  40b5bb:	add    DWORD PTR [edi],edi
  40b5bd:	mov    eax,0x26d5065
  40b5c2:	cs out 0xd9,al
  40b5c5:	jge    0x40b619
  40b5c7:	test   ebp,esi
  40b5c9:	mov    eax,ds:0x771f45aa
  40b5ce:	js     0x40b5dd
  40b5d0:	mov    ds:0xebdfca50,al
  40b5d5:	pop    edx
  40b5d6:	xchg   ecx,eax
  40b5d7:	cwde   
  40b5d8:	adc    bl,BYTE PTR [eax]
  40b5da:	(bad)  
  40b5db:	fiadd  WORD PTR [edi+0x1c]
  40b5de:	sub    BYTE PTR [ebp+0x7d],al
  40b5e1:	xor    al,0xab
  40b5e3:	ja     0x40b5a3
  40b5e5:	xchg   edx,eax
  40b5e6:	test   eax,0x448ef413
  40b5eb:	(bad)  
  40b5ec:	mov    dh,0x2f
  40b5ee:	int    0xdc
  40b5f0:	test   ebp,eax
  40b5f2:	fwait
  40b5f3:	jge    0x40b5b6
  40b5f5:	ror    BYTE PTR [eax-0x46],0x97
  40b5f9:	adc    edi,eax
  40b5fb:	shl    cl,1
  40b5fd:	inc    ecx
  40b5fe:	lds    ebp,FWORD PTR [ebx+0x25e12e8d]
  40b604:	sbb    al,0x1b
  40b606:	outs   dx,BYTE PTR ds:[esi]
  40b607:	int    0x2c
  40b609:	out    dx,eax
  40b60a:	mov    ebx,0x233e9e40
  40b60f:	sub    eax,0x3d95ee5
  40b614:	and    al,BYTE PTR [ebx-0x28]
  40b617:	mov    edx,DWORD PTR [eax+0x55c45b30]
  40b61d:	push   0x6d
  40b61f:	push   ecx
  40b620:	outs   dx,DWORD PTR ds:[esi]
  40b621:	fiadd  WORD PTR [ecx+ebp*2-0xb]
  40b625:	call   0x3ac0459c
  40b62a:	loopne 0x40b5db
  40b62c:	mov    ebp,0xdcfe1f96
  40b631:	fs push ds
  40b633:	mov    dh,0xbe
  40b635:	jnp    0x40b68a
  40b637:	inc    esi
  40b638:	in     eax,dx
  40b639:	xchg   edi,eax
  40b63a:	sub    ebp,DWORD PTR [ecx]
  40b63c:	pop    ds
  40b63d:	outs   dx,BYTE PTR ds:[esi]
  40b63e:	pushf  
  40b63f:	push   es
  40b640:	cmp    BYTE PTR [ecx+0x3d],ah
  40b643:	add    ebx,0x3
  40b646:	gs lahf 
  40b648:	cwde   
  40b649:	mov    edi,0x3897a431
  40b64e:	mov    al,ds:0x860f4251
  40b653:	fidivr DWORD PTR [ebx]
  40b655:	xor    eax,0xec1d9a56
  40b65a:	jp     0x40b5fa
  40b65c:	call   0xc4ff:0xe2ebb961
  40b663:	xchg   ecx,eax
  40b664:	push   edx
  40b665:	jmp    0x9f4cc8af
  40b66a:	mov    ch,0xaf
  40b66c:	fnstenv [esi]
  40b66e:	sbb    BYTE PTR [esp+edi*8+0x7004c07c],dl
  40b675:	sub    BYTE PTR [esp+ebx*1-0x34],al
  40b679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b67a:	push   DWORD PTR [ebp+0x6c4d109b]
  40b680:	adc    eax,0x2cc3aac0
  40b685:	ja     0x40b703
  40b687:	lods   al,BYTE PTR ds:[esi]
  40b688:	in     al,0xf0
  40b68a:	dec    ebp
  40b68b:	dec    edx
  40b68c:	cwde   
  40b68d:	sbb    DWORD PTR [esi+0x3d],edi
  40b690:	mov    ebx,0x47b59c59
  40b695:	bound  esp,QWORD PTR ds:0x188304bc
  40b69b:	std    
  40b69c:	pusha  
  40b69d:	hlt    
  40b69e:	nop
  40b69f:	cmp    al,0xe0
  40b6a1:	mov    ds:0xafe4aed1,eax
  40b6a6:	push   esi
  40b6a7:	jbe    0x40b705
  40b6a9:	repz mov ds:0xa11311a0,al
  40b6af:	outs   dx,DWORD PTR ds:[esi]
  40b6b0:	dec    eax
  40b6b1:	xchg   edi,edx
  40b6b3:	jmp    0x40b6a0
  40b6b5:	js     0x40b63e
  40b6b7:	adc    dh,BYTE PTR [edx+0x456dcfd5]
  40b6bd:	adc    edi,ebp
  40b6bf:	int    0x7e
  40b6c1:	sub    DWORD PTR [eax+0x46eba293],esp
  40b6c7:	sahf   
  40b6c8:	xchg   BYTE PTR [edi+0x10],bl
  40b6cb:	das    
  40b6cc:	neg    DWORD PTR [ecx+0x7e]
  40b6cf:	stc    
  40b6d0:	and    al,BYTE PTR [edi-0x44]
  40b6d3:	sbb    al,0xb9
  40b6d5:	adc    eax,0x35ce9ab7
  40b6da:	aas    
  40b6db:	ret    
  40b6dc:	(bad)  
  40b6dd:	aas    
  40b6de:	jbe    0x40b678
  40b6e0:	sub    eax,0x29140aea
  40b6e5:	sbb    eax,0x5e2ba8d3
  40b6ea:	sub    BYTE PTR [edx],al
  40b6ec:	mov    ebp,0x3f9097a4
  40b6f1:	hlt    
  40b6f2:	cmp    al,0x5f
  40b6f4:	retf   
  40b6f5:	loope  0x40b763
  40b6f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6f8:	pop    ss
  40b6f9:	mov    eax,ds:0xa32bfaeb
  40b6fe:	cld    
  40b6ff:	cmp    DWORD PTR [ecx-0x6882ff03],eax
  40b705:	sub    al,0x37
  40b707:	repnz lea ecx,[esp+eax*8+0x2b71155c]
  40b70f:	imul   BYTE PTR [ecx-0x6b9f1d1d]
  40b715:	mov    dl,0x92
  40b717:	push   0x6e0e7986
  40b71c:	inc    edx
  40b71d:	xchg   ecx,eax
  40b71e:	or     bh,BYTE PTR [ebx+0x38]
  40b721:	out    dx,eax
  40b722:	aam    0xf2
  40b724:	mov    es,ebp
  40b726:	add    eax,0x133d1a3f
  40b72b:	retf   
  40b72c:	icebp  
  40b72d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b72e:	and    eax,0x90736f40
  40b733:	aas    
  40b734:	dec    ecx
  40b735:	sbb    al,0xaf
  40b737:	test   al,0xfe
  40b739:	pop    edx
  40b73a:	test   eax,0xd6d82896
  40b73f:	adc    ebp,DWORD PTR [ecx+0x27]
  40b742:	retf   0x2cef
  40b745:	add    edi,ebx
  40b747:	mov    ah,0x70
  40b749:	push   ebx
  40b74a:	and    eax,0x3f1ccdda
  40b74f:	scas   eax,DWORD PTR es:[edi]
  40b750:	mov    ds:0x84099cff,eax
  40b755:	inc    edx
  40b756:	sar    BYTE PTR [eax+0x77],cl
  40b759:	xchg   esi,eax
  40b75a:	sbb    BYTE PTR [edx],al
  40b75c:	repnz mov esi,DWORD PTR [ebp+0x32]
  40b760:	aam    0x82
  40b762:	loope  0x40b717
  40b764:	loop   0x40b709
  40b766:	sub    dh,0x34
  40b769:	or     DWORD PTR [edi-0x6d],ebx
  40b76c:	addr16 sbb eax,0x2e7ce617
  40b772:	jo     0x40b6fb
  40b774:	push   eax
  40b775:	rcr    dh,cl
  40b777:	xchg   edx,eax
  40b778:	or     eax,0x5967aa11
  40b77d:	cmp    ch,BYTE PTR [ecx-0x2e]
  40b780:	sti    
  40b781:	sub    edi,DWORD PTR [edi+edx*2+0x57]
  40b785:	or     ecx,eax
  40b787:	mov    eax,ds:0x25393909
  40b78c:	repz sbb eax,0xfdcd9e75
  40b792:	cs mov ebx,0x6a2dd85d
  40b798:	cld    
  40b799:	mul    DWORD PTR [ebx]
  40b79b:	fistp  DWORD PTR [edi+0x2c]
  40b79e:	add    BYTE PTR [edi],bl
  40b7a0:	and    BYTE PTR [eax+0x2d],0x93
  40b7a4:	jmp    0x294318a7
  40b7a9:	daa    
  40b7aa:	push   esi
  40b7ab:	or     al,0x65
  40b7ad:	inc    ebp
  40b7ae:	fdivr  QWORD PTR [ebx-0x2e]
  40b7b1:	xchg   DWORD PTR [edx+0x4e],esi
  40b7b4:	jle    0x40b7b8
  40b7b6:	ins    BYTE PTR es:[edi],dx
  40b7b7:	mov    bl,bh
  40b7b9:	pop    ds
  40b7ba:	push   es
  40b7bb:	idiv   DWORD PTR [ebp+ebp*1-0x2f]
  40b7bf:	xchg   edx,esi
  40b7c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7c2:	push   ebx
  40b7c3:	push   esp
  40b7c4:	sbb    BYTE PTR [esi],0x5
  40b7c7:	dec    edx
  40b7c8:	mov    bh,0xc7
  40b7ca:	mov    ecx,0x5903588a
  40b7cf:	jnp    0x40b7fb
  40b7d1:	xlat   BYTE PTR ds:[ebx]
  40b7d2:	stos   DWORD PTR es:[edi],eax
  40b7d3:	push   es
  40b7d4:	sub    eax,0xbc0b3351
  40b7d9:	inc    ebp
  40b7da:	out    dx,al
  40b7db:	push   0xe2afcaa6
  40b7e0:	pop    edi
  40b7e1:	jmp    0x2fb3:0xf8321e20
  40b7e8:	jle    0x40b832
  40b7ea:	xchg   ecx,eax
  40b7eb:	popa   
  40b7ec:	std    
  40b7ed:	(bad)  [ebp-0x52a58016]
  40b7f3:	rdpmc  
  40b7f5:	scas   eax,DWORD PTR es:[edi]
  40b7f6:	inc    edi
  40b7f7:	push   0x77089ff5
  40b7fc:	jle    0x40b84b
  40b7fe:	int3   
  40b7ff:	adc    bl,BYTE PTR [ebp-0x32868605]
  40b805:	mov    eax,0x3d657b2c
  40b80a:	jmp    0x90abdb8b
  40b80f:	mov    edi,0xc1f26977
  40b814:	jns    0x40b7a4
  40b816:	mov    al,ds:0x88d92d2b
  40b81b:	fidivr DWORD PTR [esi]
  40b81d:	les    eax,FWORD PTR [ecx+0x17acd780]
  40b823:	mov    esp,0x6cba7a3d
  40b828:	pushf  
  40b829:	into   
  40b82a:	rcl    DWORD PTR es:[ebx-0x50],0x73
  40b82f:	pop    edx
  40b830:	sub    BYTE PTR [ecx],ah
  40b832:	or     dl,ah
  40b834:	mul    DWORD PTR [ecx+0x42]
  40b837:	shl    DWORD PTR [edi+esi*1],cl
  40b83a:	push   esp
  40b83b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b83c:	sbb    eax,edx
  40b83e:	mov    dh,0xba
  40b840:	arpl   dx,bp
  40b842:	out    0x4a,al
  40b844:	jno    0x40b875
  40b846:	aad    0x72
  40b848:	inc    esp
  40b849:	inc    ebx
  40b84a:	ins    DWORD PTR es:[edi],dx
  40b84b:	push   0x1b
  40b84d:	das    
  40b84e:	sti    
  40b84f:	leave  
  40b850:	loop   0x40b825
  40b852:	mov    edx,gs
  40b854:	cmc    
  40b855:	arpl   dx,bp
  40b857:	inc    edi
  40b858:	xchg   edx,eax
  40b859:	int3   
  40b85a:	and    eax,0x7c101076
  40b85f:	mov    DWORD PTR [esi+ebp*8-0x28ff4df9],0x931e9aa3
  40b86a:	in     al,0xec
  40b86c:	inc    esp
  40b86d:	and    al,0xcf
  40b86f:	push   ebx
  40b870:	repz mov ecx,0x51c8b0ea
  40b876:	in     al,dx
  40b877:	aas    
  40b878:	sub    dl,dl
  40b87a:	xor    edi,DWORD PTR [ecx-0x51]
  40b87d:	arpl   WORD PTR [edi-0x2d],si
  40b880:	dec    esp
  40b881:	loope  0x40b851
  40b883:	fistp  DWORD PTR [edx+0xa758a24]
  40b889:	mov    ds:0x240d14fa,eax
  40b88e:	ins    DWORD PTR es:[edi],dx
  40b88f:	jne    0x40b859
  40b891:	das    
  40b892:	sbb    al,0x6
  40b894:	cs inc ebx
  40b896:	xor    ecx,ebp
  40b898:	push   esp
  40b899:	rcl    BYTE PTR [edx],0x7b
  40b89c:	xor    esi,DWORD PTR [esi+esi*1]
  40b89f:	sbb    BYTE PTR [esi+ebx*1-0x10],0x91
  40b8a4:	xor    eax,0x572b9f65
  40b8a9:	adc    DWORD PTR [ebp+0x6],0x441270af
  40b8b0:	repnz aas 
  40b8b2:	shr    al,0xed
  40b8b5:	pop    ds
  40b8b6:	ins    DWORD PTR es:[edi],dx
  40b8b7:	add    eax,0xd602b018
  40b8bc:	jp     0x40b85d
  40b8be:	pop    edx
  40b8bf:	leave  
  40b8c0:	cmp    eax,0x579aade8
  40b8c5:	popa   
  40b8c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8c7:	xor    eax,0xdd06399f
  40b8cc:	je     0x40b878
  40b8ce:	dec    edx
  40b8cf:	add    eax,0xc064bd69
  40b8d4:	xor    al,0xc4
  40b8d6:	dec    ecx
  40b8d7:	add    DWORD PTR [esi+0x37],edx
  40b8da:	mulps  xmm1,xmm5
  40b8dd:	lods   al,BYTE PTR ds:[esi]
  40b8de:	xchg   edi,eax
  40b8df:	xor    edi,edx
  40b8e1:	in     eax,dx
  40b8e2:	push   esi
  40b8e3:	push   ebp
  40b8e4:	mov    cl,0xd7
  40b8e6:	inc    DWORD PTR [edx-0x7b77a5b]
  40b8ec:	and    DWORD PTR [ebx],ebp
  40b8ee:	inc    ecx
  40b8ef:	xlat   BYTE PTR ds:[ebx]
  40b8f0:	push   esi
  40b8f1:	cld    
  40b8f2:	aaa    
  40b8f3:	add    ebx,0xffffffa9
  40b8f6:	adc    al,BYTE PTR [ebp+0x5d9eb93b]
  40b8fc:	outs   dx,BYTE PTR ds:[esi]
  40b8fd:	mov    cs,esi
  40b8ff:	jge    0x40b956
  40b901:	aas    
  40b902:	inc    esp
  40b903:	push   edi
  40b904:	inc    edx
  40b905:	(bad)  [edi]
  40b907:	inc    DWORD PTR [ebp+0x366b28f]
  40b90d:	cmp    ah,BYTE PTR [ebp+0x14]
  40b910:	lods   al,BYTE PTR ds:[esi]
  40b911:	mov    esp,0xb222d06e
  40b916:	cmp    eax,0x71b670bf
  40b91b:	mov    DWORD PTR [ebp+0xecd6c4d],edi
  40b921:	fwait
  40b922:	sub    al,al
  40b924:	aam    0x16
  40b926:	mov    WORD PTR [edx],cs
  40b928:	dec    ebx
  40b929:	xchg   ecx,eax
  40b92a:	lahf   
  40b92b:	inc    eax
  40b92c:	test   al,0xf4
  40b92e:	mov    eax,0xd50ec8cc
  40b933:	inc    BYTE PTR [edi-0x77c30fd4]
  40b939:	inc    esi
  40b93a:	cli    
  40b93b:	fs jne 0x40b954
  40b93e:	scas   eax,DWORD PTR es:[edi]
  40b93f:	dec    edi
  40b940:	dec    ebx
  40b941:	test   BYTE PTR [ecx+0x3f],0x8a
  40b945:	stos   DWORD PTR es:[edi],eax
  40b946:	mov    fs,WORD PTR [esi-0x9]
  40b949:	or     ah,BYTE PTR [ebx]
  40b94b:	or     al,0xa7
  40b94d:	fcom   DWORD PTR [ebx-0x73]
  40b950:	xchg   esi,eax
  40b951:	daa    
  40b952:	pop    edx
  40b953:	xchg   ecx,eax
  40b954:	push   esi
  40b955:	call   0xfa95:0x365fba21
  40b95c:	mov    eax,0x89e69cca
  40b961:	ret    0xbad8
  40b964:	mov    ebp,0x2d0143fa
  40b969:	int    0xd3
  40b96b:	rep stos BYTE PTR es:[edi],al
  40b96d:	jge    0x40b9ce
  40b96f:	jno    0x40b9be
  40b971:	mov    ecx,0xfdfcc27a
  40b976:	mov    edx,0xa23519df
  40b97b:	outs   dx,DWORD PTR ds:[esi]
  40b97c:	scas   al,BYTE PTR es:[edi]
  40b97d:	cmc    
  40b97e:	push   ebx
  40b97f:	push   ebp
  40b980:	das    
  40b981:	pushf  
  40b982:	neg    DWORD PTR [ecx]
  40b984:	icebp  
  40b985:	inc    eax
  40b986:	adc    dl,BYTE PTR [ecx+0x70c2e915]
  40b98c:	inc    ecx
  40b98d:	fdiv   DWORD PTR [ebp-0x2e706725]
  40b993:	or     DWORD PTR [eax-0x20cbe88],eax
  40b999:	addr16 mov bl,0xa1
  40b99c:	(bad)  
  40b99d:	lods   al,BYTE PTR ds:[esi]
  40b99e:	and    ebx,DWORD PTR [ebp+ebp*8-0x13c0d2f]
  40b9a5:	add    ah,BYTE PTR [eax+ecx*2+0x54]
  40b9a9:	test   al,0xe7
  40b9ab:	xor    esp,DWORD PTR [ebx-0x4f]
  40b9ae:	push   ds
  40b9af:	jl     0x40b9a4
  40b9b1:	jb     0x40b964
  40b9b3:	pop    eax
  40b9b4:	cld    
  40b9b5:	xor    eax,0xc077b38c
  40b9ba:	xor    eax,0x8f5e9aa1
  40b9bf:	mov    dl,0x1
  40b9c1:	stos   BYTE PTR es:[edi],al
  40b9c2:	pushf  
  40b9c3:	mov    esp,0xff29f068
  40b9c8:	xchg   DWORD PTR [edx],ebp
  40b9ca:	sbb    BYTE PTR [edx-0x44b90500],dh
  40b9d0:	aam    0x78
  40b9d2:	outs   dx,BYTE PTR ds:[esi]
  40b9d3:	inc    edx
  40b9d4:	pusha  
  40b9d5:	leave  
  40b9d6:	dec    ebx
  40b9d7:	cmp    dl,BYTE PTR [esi+0x4c11eb19]
  40b9dd:	and    eax,0x226da9da
  40b9e2:	pushf  
  40b9e3:	out    dx,al
  40b9e4:	iret   
  40b9e5:	mov    al,ds:0x9ce17678
  40b9ea:	jle    0x40b9a0
  40b9ec:	retf   
  40b9ed:	enter  0xc006,0xe3
  40b9f1:	arpl   WORD PTR [edi-0x1a95fb35],di
  40b9f7:	adc    al,0xc3
  40b9f9:	mov    ds:0x6f1c4fe7,eax
  40b9fe:	ficomp DWORD PTR [ebx+0x6c]
  40ba01:	xchg   ecx,eax
  40ba02:	xor    eax,DWORD PTR [edi-0x70]
  40ba05:	push   ss
  40ba06:	jecxz  0x40ba6e
  40ba08:	fcomp  DWORD PTR [ecx-0x48]
  40ba0b:	mov    ds:0x3eea2da2,eax
  40ba10:	dec    esp
  40ba11:	jmp    0x6b4a:0x76c71d13
  40ba18:	mov    DWORD PTR [ebx+0x61],eax
  40ba1b:	pop    esp
  40ba1c:	inc    edx
  40ba1d:	dec    eax
  40ba1e:	addr16 mov esi,0xc857d1f8
  40ba24:	inc    eax
  40ba25:	cwde   
  40ba26:	fcomp  DWORD PTR [edx]
  40ba28:	iret   
  40ba29:	xor    BYTE PTR [edx-0x7c460ecc],bh
  40ba2f:	sub    DWORD PTR [eax-0x3a],ebx
  40ba32:	adc    BYTE PTR [edx-0x1b],ah
  40ba35:	lea    eax,[edi]
  40ba37:	jne    0x40b9e3
  40ba39:	sub    DWORD PTR [eax+ebp*1],0x528f20fd
  40ba40:	mov    ds:0x14cb65bb,eax
  40ba45:	add    BYTE PTR [ecx],bl
  40ba47:	fild   WORD PTR [edi-0x73]
  40ba4a:	loopne 0x40ba87
  40ba4c:	(bad)
  40ba50:	scas   eax,DWORD PTR es:[edi]
  40ba51:	ins    BYTE PTR es:[edi],dx
  40ba52:	xlat   BYTE PTR ds:[ebx]
  40ba53:	adc    BYTE PTR [ebx+0x33],ch
  40ba56:	clc    
  40ba57:	les    esi,FWORD PTR [ecx+0x3a]
  40ba5a:	or     cl,BYTE PTR [eax+0x4560e63c]
  40ba60:	in     al,0x44
  40ba62:	sub    al,0xf0
  40ba64:	pop    ecx
  40ba65:	cmp    eax,0x3ba1f770
  40ba6a:	push   esp
  40ba6b:	stc    
  40ba6c:	mov    dl,0xbf
  40ba6e:	dec    edi
  40ba6f:	mov    ds:0xf2884cf7,al
  40ba74:	fsubr  QWORD PTR [eax-0x3d3e542e]
  40ba7a:	xchg   bl,bh
  40ba7c:	out    0x5c,al
  40ba7e:	xor    cl,BYTE PTR [ecx-0x72]
  40ba81:	xor    al,0x8e
  40ba83:	jge    0x40ba63
  40ba85:	fwait
  40ba86:	pop    edx
  40ba87:	in     al,dx
  40ba88:	push   ss
  40ba89:	ret    
  40ba8a:	out    0x40,al
  40ba8c:	int    0x82
  40ba8e:	xor    BYTE PTR [ebx-0x5820f952],dh
  40ba94:	aam    0xd4
  40ba96:	adc    eax,0xcc20c23e
  40ba9b:	dec    eax
  40ba9c:	aad    0xb6
  40ba9e:	mov    ah,BYTE PTR [ecx+0x1f]
  40baa1:	rol    DWORD PTR [edx],1
  40baa3:	js     0x40bac5
  40baa5:	cwde   
  40baa6:	stos   BYTE PTR es:[edi],al
  40baa7:	repnz inc esi
  40baa9:	ret    0x93b
  40baac:	lds    ebp,FWORD PTR [edx-0x5b919f92]
  40bab2:	sbb    DWORD PTR [edx+edx*1+0x43],0x42
  40bab7:	jl     0x40bb34
  40bab9:	loope  0x40bb2f
  40babb:	mov    ebx,0xef51cc70
  40bac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bac1:	das    
  40bac2:	adc    DWORD PTR [ecx-0x1c],ebp
  40bac5:	cmp    ebx,DWORD PTR [ebx-0x1a1d0ba8]
  40bacb:	dec    ebp
  40bacc:	loop   0x40ba9d
  40bace:	fstp   QWORD PTR [eax]
  40bad0:	cmc    
  40bad1:	bound  esi,QWORD PTR [edi-0x2a]
  40bad4:	cmp    al,0xd5
  40bad6:	stos   BYTE PTR es:[edi],al
  40bad7:	imul   ebx,ebp,0x1d
  40bada:	sahf   
  40badb:	je     0x40bb1b
  40badd:	das    
  40bade:	clc    
  40badf:	lods   al,BYTE PTR ds:[esi]
  40bae0:	je     0x40bae0
  40bae2:	cli    
  40bae3:	out    0x89,eax
  40bae5:	jo     0x40ba94
  40bae7:	pop    ss
  40bae8:	pusha  
  40bae9:	test   DWORD PTR [ebx+0x6e],ecx
  40baec:	dec    esp
  40baed:	xor    dl,BYTE PTR [ebp+0x29c0e688]
  40baf3:	imul   ebp,DWORD PTR [ebx],0xffffff80
  40baf6:	es mov ebx,edi
  40baf9:	mov    dl,0xbd
  40bafb:	lock fcomp st(3)
  40bafe:	pop    edx
  40baff:	cmp    DWORD PTR [ebp+ecx*2+0x520905e5],0x7c
  40bb07:	jne    0x40bb62
  40bb09:	xchg   esp,eax
  40bb0a:	inc    ecx
  40bb0b:	jnp    0x40bb4d
  40bb0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb0e:	addr16 inc esp
  40bb10:	push   esp
  40bb11:	fdivr  DWORD PTR [ecx]
  40bb13:	pop    ecx
  40bb14:	bound  esi,QWORD PTR [ebp-0x39fcde79]
  40bb1a:	push   ebx
  40bb1b:	mov    cl,0x2
  40bb1d:	aas    
  40bb1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb1f:	xchg   ebp,eax
  40bb20:	cli    
  40bb21:	or     cl,BYTE PTR [ecx+0x464a5739]
  40bb27:	ficom  DWORD PTR [eax+esi*4+0x24fa73ff]
  40bb2e:	and    cl,BYTE PTR [edi+0x7e]
  40bb31:	cdq    
  40bb32:	push   edx
  40bb33:	xor    bl,BYTE PTR [edx]
  40bb35:	pop    ss
  40bb36:	mov    al,0x1f
  40bb38:	xor    BYTE PTR [edi],0x8f
  40bb3b:	dec    esi
  40bb3c:	or     ebx,DWORD PTR [edx]
  40bb3e:	pop    ebp
  40bb3f:	inc    eax
  40bb40:	xchg   ebx,eax
  40bb41:	iret   
  40bb42:	(bad)  
  40bb43:	nop
  40bb44:	lods   eax,DWORD PTR ds:[esi]
  40bb45:	jl     0x40bb77
  40bb47:	mov    edi,0x6f09e5c8
  40bb4c:	test   al,0xb7
  40bb4e:	and    eax,0xf7ebd098
  40bb53:	dec    ebp
  40bb54:	push   es
  40bb55:	std    
  40bb56:	mov    esi,0x50a5e93c
  40bb5b:	retf   
  40bb5c:	in     eax,0x8c
  40bb5e:	mov    eax,0xc0718176
  40bb63:	add    eax,DWORD PTR ds:0x324ca42e
  40bb69:	sub    eax,0x398ac879
  40bb6e:	ja     0x40bb9f
  40bb70:	call   0x9155:0xf00a6466
  40bb77:	inc    ecx
  40bb78:	leave  
  40bb79:	dec    eax
  40bb7a:	jp     0x40bb28
  40bb7c:	pusha  
  40bb7d:	ret    
  40bb7e:	stos   BYTE PTR es:[edi],al
  40bb7f:	push   0x89e5349c
  40bb84:	mov    al,ds:0x33746eb1
  40bb89:	ret    
  40bb8a:	fsubr  DWORD PTR [esi+edx*8+0x16]
  40bb8e:	jge    0x40bb28
  40bb90:	lods   eax,DWORD PTR ds:[esi]
  40bb91:	loop   0x40bbad
  40bb93:	popa   
  40bb94:	cmp    BYTE PTR [edi+0x84e3f14],dl
  40bb9a:	xchg   esi,eax
  40bb9b:	dec    edi
  40bb9c:	loope  0x40bc0e
  40bb9e:	(bad)
  40bba1:	cmp    BYTE PTR fs:[edx+0x58],dh
  40bba5:	adc    al,0xb0
  40bba7:	les    ebp,FWORD PTR [ebx+0x233b6b7f]
  40bbad:	mov    bl,0x75
  40bbaf:	push   edi
  40bbb0:	in     eax,0xc0
  40bbb2:	dec    eax
  40bbb3:	(bad)  
  40bbb5:	fadd   DWORD PTR [edi]
  40bbb7:	sbb    eax,0xeb1969c2
  40bbbc:	xor    DWORD PTR [esi+0x4e1d7493],edx
  40bbc2:	dec    esp
  40bbc3:	jecxz  0x40bc3f
  40bbc5:	inc    ebp
  40bbc6:	xchg   BYTE PTR [eax-0x7c],dh
  40bbc9:	push   0xac9d65fa
  40bbce:	add    eax,0x198313f0
  40bbd3:	outs   dx,DWORD PTR ds:[esi]
  40bbd4:	and    esi,DWORD PTR [ebx]
  40bbd6:	scas   al,BYTE PTR es:[edi]
  40bbd7:	cwde   
  40bbd8:	xchg   ebp,eax
  40bbd9:	shr    DWORD PTR [ebx],cl
  40bbdb:	lods   al,BYTE PTR ds:[esi]
  40bbdc:	mov    edx,0xf2a8f97b
  40bbe1:	jb     0x40bb9a
  40bbe3:	cmp    DWORD PTR [eax+0x4968c954],esi
  40bbe9:	cmp    BYTE PTR [ecx-0x64a7dc8e],0x50
  40bbf0:	xchg   esp,eax
  40bbf1:	repz hlt 
  40bbf3:	rcl    bl,1
  40bbf5:	jp     0x40bc65
  40bbf7:	inc    esi
  40bbf8:	mov    ebx,DWORD PTR [eax+0x48]
  40bbfb:	or     ebx,DWORD PTR [eax-0x7c]
  40bbfe:	cld    
  40bbff:	jecxz  0x40bc6c
  40bc01:	out    dx,al
  40bc02:	dec    edx
  40bc03:	pop    es
  40bc04:	xchg   edi,eax
  40bc05:	mov    al,BYTE PTR [ecx]
  40bc07:	push   ebp
  40bc08:	es in  eax,0xd3
  40bc0b:	mov    bh,0x6e
  40bc0d:	dec    esi
  40bc0e:	movd   edi,mm2
  40bc11:	hlt    
  40bc12:	rcr    DWORD PTR [edi+0x4e],1
  40bc15:	pop    edi
  40bc16:	jmp    0x40bbce
  40bc18:	lods   al,BYTE PTR ds:[esi]
  40bc19:	repz and DWORD PTR ds:0x6b4942bd,esp
  40bc20:	fist   DWORD PTR [ebx-0x19957554]
  40bc26:	scas   eax,DWORD PTR es:[edi]
  40bc27:	or     al,0x53
  40bc29:	or     edi,DWORD PTR [ecx+edx*1+0x63]
  40bc2d:	popa   
  40bc2e:	pop    esi
  40bc2f:	jge    0x40bc17
  40bc31:	add    al,0xdc
  40bc33:	rcr    BYTE PTR [eax+0x42d20c8e],cl
  40bc39:	xchg   ebx,eax
  40bc3a:	fcomp  DWORD PTR [ebx+0x46]
  40bc3d:	mov    ebp,0x5182b08a
  40bc42:	xchg   ebp,eax
  40bc43:	and    BYTE PTR [ecx],ah
  40bc45:	adc    esi,DWORD PTR [edx-0x4c]
  40bc48:	inc    eax
  40bc49:	jmp    0x3657:0x6a0ae04b
  40bc50:	pop    DWORD PTR [ebp+0x7c43ed]
  40bc56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc57:	inc    eax
  40bc58:	jne    0x40bc3e
  40bc5a:	pushf  
  40bc5b:	push   ebp
  40bc5c:	xchg   esp,eax
  40bc5d:	pop    ebx
  40bc5e:	xlat   BYTE PTR ds:[ebx]
  40bc5f:	adc    edx,DWORD PTR [esi]
  40bc61:	mov    ds:0x2b12d807,eax
  40bc66:	push   edx
  40bc67:	test   DWORD PTR [ebx+0x16],0xd44f98d6
  40bc6e:	sbb    al,0x9b
  40bc70:	adc    ecx,DWORD PTR ds:0x600f310b
  40bc76:	leave  
  40bc77:	lahf   
  40bc78:	out    dx,eax
  40bc79:	pop    ss
  40bc7a:	mov    eax,ds:0x474260ef
  40bc7f:	inc    DWORD PTR ds:0x5e730832
  40bc85:	sahf   
  40bc86:	adc    eax,0x411b1eae
  40bc8b:	je     0x40bc23
  40bc8d:	xchg   esp,eax
  40bc8e:	ja     0x40bce7
  40bc90:	sub    eax,0xfc567184
  40bc95:	rep ins DWORD PTR es:[edi],dx
  40bc97:	rol    bh,1
  40bc99:	ss xchg edx,eax
  40bc9b:	pop    eax
  40bc9c:	into   
  40bc9d:	test   eax,0xeef963ed
  40bca2:	xchg   ebp,eax
  40bca3:	sub    eax,DWORD PTR [esi+0x2e96c05b]
  40bca9:	dec    edi
  40bcaa:	nop
  40bcab:	sub    bh,BYTE PTR es:[edi-0x4cc88754]
  40bcb2:	xor    ch,bl
  40bcb4:	aas    
  40bcb5:	pop    edi
  40bcb6:	mov    ecx,0xe755c6d2
  40bcbb:	scas   al,BYTE PTR es:[edi]
  40bcbc:	loope  0x40bcb3
  40bcbe:	cmp    edi,DWORD PTR [esi+0x9]
  40bcc1:	adc    edi,DWORD PTR [esi-0xf]
  40bcc4:	ret    0xc408
  40bcc7:	xchg   esp,eax
  40bcc8:	pop    eax
  40bcc9:	mov    ebx,0xcc9a5f2b
  40bcce:	adc    al,0x1f
  40bcd0:	jmp    edx
  40bcd2:	mov    esp,0xe2e0ea95
  40bcd7:	sub    BYTE PTR [edi],0x4f
  40bcda:	imul   ebx,DWORD PTR [ebp+0x1dcb6588],0x98ae2fa4
  40bce4:	pop    edx
  40bce5:	mov    BYTE PTR [edi+ecx*1],0x70
  40bce9:	and    edi,DWORD PTR [esi]
  40bceb:	mov    ecx,ebp
  40bced:	xchg   edi,eax
  40bcee:	xor    ecx,ebx
  40bcf0:	mov    esi,0x61232592
  40bcf5:	stc    
  40bcf6:	cmp    esp,DWORD PTR [ebx]
  40bcf8:	aad    0x88
  40bcfa:	repnz push 0x4c65705d
  40bd00:	mov    dl,0xbe
  40bd02:	cld    
  40bd03:	or     BYTE PTR [ebx-0x4c646bfe],ah
  40bd09:	cmp    al,0x32
  40bd0b:	add    eax,DWORD PTR [ebp-0x71]
  40bd0e:	pop    esi
  40bd0f:	push   edx
  40bd10:	inc    ecx
  40bd11:	div    DWORD PTR [esi+0x7b1231d5]
  40bd17:	enter  0x6f7a,0x78
  40bd1b:	btc    DWORD PTR [ebx-0x3],ecx
  40bd1f:	mov    ecx,0xcf9bcf2e
  40bd24:	cdq    
  40bd25:	sub    eax,DWORD PTR [ebp+0x32]
  40bd28:	jmp    0x40bce8
  40bd2a:	cmp    eax,0xa20cd243
  40bd2f:	adc    dh,BYTE PTR [edx+0x46]
  40bd32:	pop    edi
  40bd33:	ins    BYTE PTR es:[edi],dx
  40bd34:	mov    cl,BYTE PTR [ebx-0x71]
  40bd37:	and    al,al
  40bd39:	mov    bh,dh
  40bd3b:	mov    ah,0x3a
  40bd3d:	mov    BYTE PTR [eax-0x21],0xa3
  40bd41:	sub    BYTE PTR [eax-0x22400bf8],ch
  40bd47:	inc    ecx
  40bd48:	mov    al,0x35
  40bd4a:	sbb    ebp,edx
  40bd4c:	(bad)  
  40bd4d:	jno    0x40bd02
  40bd4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd50:	in     eax,dx
  40bd51:	add    DWORD PTR [edx-0x71],0x62243589
  40bd58:	jge    0x40bd2b
  40bd5a:	adc    al,0x85
  40bd5c:	fs scas al,BYTE PTR es:[edi]
  40bd5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd5f:	adc    eax,0xdacad35
  40bd64:	sar    DWORD PTR [edx],cl
  40bd66:	pop    esp
  40bd67:	mov    ds:0x7ab749b4,al
  40bd6c:	bound  esp,QWORD PTR [edi+eax*8-0xf0f507b]
  40bd73:	sbb    bl,BYTE PTR [ebp+0x6a]
  40bd76:	cmp    DWORD PTR [esi-0x2c],esi
  40bd79:	or     ah,al
  40bd7b:	jle    0x40bde7
  40bd7d:	retf   0x10cb
  40bd80:	pop    ebx
  40bd81:	outs   dx,BYTE PTR ds:[esi]
  40bd82:	or     al,0x90
  40bd84:	push   cs
  40bd85:	mov    edi,0x8c7cf19f
  40bd8a:	fiadd  DWORD PTR [edi]
  40bd8c:	or     al,0x7d
  40bd8e:	push   ebp
  40bd8f:	dec    eax
  40bd90:	dec    eax
  40bd91:	enter  0xf264,0x41
  40bd95:	add    BYTE PTR [esi-0x394cf647],cl
  40bd9b:	das    
  40bd9c:	jle    0x40bd93
  40bd9e:	rol    cl,1
  40bda0:	cdq    
  40bda1:	cmp    dh,BYTE PTR [ecx]
  40bda3:	jge    0x40be0c
  40bda5:	mov    WORD PTR [ecx],es
  40bda7:	xchg   DWORD PTR [edi+esi*2-0x17],eax
  40bdab:	add    al,BYTE PTR [ecx-0x43603859]
  40bdb1:	popa   
  40bdb2:	cdq    
  40bdb3:	xor    BYTE PTR cs:[esi-0x1bedd8eb],bh
  40bdba:	push   edx
  40bdbb:	or     BYTE PTR ss:[ebx+0x391731ac],dh
  40bdc2:	retf   0x45bd
  40bdc5:	int3   
  40bdc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdc7:	test   ebp,esp
  40bdc9:	sub    al,0x65
  40bdcb:	and    DWORD PTR [eax+0x68124790],esi
  40bdd1:	fwait
  40bdd2:	mov    BYTE PTR [ecx-0x1],ah
  40bdd5:	add    cl,BYTE PTR [ebp-0x4bef91f8]
  40bddb:	xchg   edi,eax
  40bddc:	mov    ebx,0x3c8ee98b
  40bde1:	push   0x745a7d1e
  40bde6:	outs   dx,DWORD PTR ds:[esi]
  40bde7:	out    dx,al
  40bde8:	cmp    BYTE PTR [esi-0x36cc61bc],0xc5
  40bdef:	stos   BYTE PTR es:[edi],al
  40bdf0:	and    bl,bl
  40bdf2:	je     0x40bda5
  40bdf4:	jne    0x40be6f
  40bdf6:	and    DWORD PTR [edi-0x1f2b59a0],0x21
  40bdfd:	loopne 0x40bdc3
  40bdff:	or     DWORD PTR [edx+0x1d],ebp
  40be02:	and    DWORD PTR [edi],esi
  40be04:	xchg   esi,eax
  40be05:	sub    BYTE PTR [esi-0x704b9feb],cl
  40be0b:	xor    edi,DWORD PTR [ebx]
  40be0d:	inc    ecx
  40be0e:	mov    al,0x74
  40be11:	ficomp DWORD PTR [edx]
  40be13:	sub    eax,0x1746cb5e
  40be18:	dec    edi
  40be19:	fidivr DWORD PTR [edi]
  40be1b:	stc    
  40be1c:	aaa    
  40be1d:	push   eax
  40be1e:	xlat   BYTE PTR ds:[ebx]
  40be1f:	ds dec ecx
  40be21:	mov    ds:0xfc98afee,eax
  40be26:	xchg   ebx,eax
  40be27:	cld    
  40be28:	inc    edx
  40be29:	in     al,dx
  40be2a:	retf   
  40be2b:	cmp    eax,0x22e5068
  40be30:	test   eax,0x9df586f1
  40be35:	iret   
  40be36:	and    esp,edi
  40be38:	jecxz  0x40be42
  40be3a:	je     0x40be36
  40be3c:	pop    ecx
  40be3d:	(bad)  
  40be3e:	mov    dl,0xa9
  40be40:	pop    esi
  40be41:	mov    dl,BYTE PTR [eax]
  40be43:	retf   
  40be44:	fiadd  WORD PTR [edi]
  40be46:	mov    BYTE PTR [edi+0x48a17129],0xbe
  40be4d:	(bad)  
  40be4e:	cmc    
  40be4f:	add    BYTE PTR ds:0x120c96b2,0xab
  40be56:	mov    ebp,0x23767c26
  40be5b:	out    0xae,eax
  40be5d:	sub    eax,ebx
  40be5f:	xor    ah,dh
  40be61:	shl    DWORD PTR [ebx-0x2f554369],0xf4
  40be68:	das    
  40be69:	and    eax,0xcdfc8085
  40be6e:	or     eax,0xfafb78fc
  40be73:	ret    
  40be74:	lds    ebp,FWORD PTR [esi]
  40be76:	mov    edi,edi
  40be78:	(bad)  
  40be7a:	jg     0x40be8f
  40be7c:	retf   
  40be7d:	push   eax
  40be7e:	sbb    BYTE PTR [esi+0x8],ch
  40be81:	jnp    0x40be60
  40be83:	dec    ebp
  40be84:	repz cmc 
  40be86:	mov    al,BYTE PTR [eax-0x42f924ec]
  40be8c:	sbb    ecx,ecx
  40be8e:	mov    bh,0x2d
  40be90:	dec    eax
  40be91:	xor    BYTE PTR [eax+0x39d15973],bl
  40be97:	push   DWORD PTR [eax]
  40be99:	fidivr DWORD PTR [esi]
  40be9b:	(bad)  
  40be9c:	daa    
  40be9d:	test   DWORD PTR [ebx+0x118a4c8e],eax
  40bea3:	pop    esi
  40bea4:	enter  0x38a3,0x6c
  40bea8:	test   eax,0xb155f56
  40bead:	fidivr WORD PTR [ecx-0x2]
  40beb0:	(bad)  
  40beb1:	mov    BYTE PTR [esi],cl
  40beb3:	cwde   
  40beb4:	and    DWORD PTR [edx],ebp
  40beb6:	fwait
  40beb7:	push   cs
  40beb8:	fld    QWORD PTR ds:0x8751fe3d
  40bebe:	pop    esp
  40bebf:	cmc    
  40bec0:	scas   eax,DWORD PTR es:[edi]
  40bec1:	jns    0x40beec
  40bec3:	sub    BYTE PTR [ebx+0x41],ch
  40bec6:	inc    eax
  40bec7:	sahf   
  40bec8:	xchg   ecx,eax
  40bec9:	imul   edi,ebp,0xffffffd7
  40becc:	aas    
  40becd:	ret    0xc566
  40bed0:	(bad)  
  40bed1:	fnstsw WORD PTR [eax+0x7]
  40bed4:	push   cs
  40bed5:	xchg   ebp,eax
  40bed6:	mov    dh,0xde
  40bed8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bed9:	pop    es
  40beda:	mov    ebx,0xc40ddac4
  40bedf:	inc    esp
  40bee0:	sbb    dl,BYTE PTR [ebx+0x79b8260e]
  40bee6:	add    esi,ebp
  40bee8:	pop    edx
  40bee9:	pop    ds
  40beea:	lea    ebx,[edx-0x7a85e137]
  40bef0:	dec    ebx
  40bef1:	dec    ecx
  40bef2:	outs   dx,BYTE PTR ds:[esi]
  40bef3:	fimul  DWORD PTR [ecx+0x69]
  40bef6:	dec    eax
  40bef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bef8:	lea    ebp,[edi]
  40befa:	out    dx,eax
  40befb:	in     al,dx
  40befc:	mov    edi,0xa556d560
  40bf01:	cld    
  40bf02:	aaa    
  40bf03:	mov    esi,0x81628e5c
  40bf08:	rol    ch,1
  40bf0a:	loopne 0x40beb5
  40bf0c:	clc    
  40bf0d:	ror    DWORD PTR [eax-0x36],1
  40bf10:	inc    esi
  40bf11:	xchg   ecx,eax
  40bf12:	jp     0x40bf3d
  40bf14:	int    0x5e
  40bf16:	daa    
  40bf17:	xchg   ecx,eax
  40bf18:	inc    esi
  40bf19:	jbe    0x40bedd
  40bf1b:	xor    eax,0xa97168c3
  40bf20:	mov    al,0x9e
  40bf22:	ins    DWORD PTR es:[edi],dx
  40bf23:	rol    BYTE PTR [edx-0x5e],1
  40bf26:	push   ecx
  40bf27:	stos   DWORD PTR es:[edi],eax
  40bf28:	rol    DWORD PTR [eax+0x6e],1
  40bf2b:	inc    edx
  40bf2c:	ds jp  0x40beca
  40bf2f:	mov    bl,0xde
  40bf31:	push   esi
  40bf32:	mov    DWORD PTR [esi],esp
  40bf34:	test   BYTE PTR [ebx+0x66985f58],0x59
  40bf3b:	and    bl,dl
  40bf3d:	cmp    eax,0x360cb1ea
  40bf42:	cs int3 
  40bf44:	add    BYTE PTR [ebx],bh
  40bf46:	ud2    
  40bf48:	xchg   edi,eax
  40bf49:	mov    al,0x44
  40bf4b:	loope  0x40bfc5
  40bf4d:	je     0x40bfaf
  40bf4f:	adc    BYTE PTR [edx],dh
  40bf51:	inc    eax
  40bf52:	mov    ch,0xe6
  40bf54:	sbb    cl,bh
  40bf56:	iret   
  40bf57:	jle    0x40bfb2
  40bf59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf5a:	mov    DWORD PTR [eax+edi*1-0x68f75de],eax
  40bf61:	push   ebp
  40bf62:	pop    esi
  40bf63:	lea    edx,[ebp-0x4e0d3d92]
  40bf69:	cdq    
  40bf6a:	(bad)  
  40bf6b:	je     0x40bfec
  40bf6d:	adc    BYTE PTR [esi+eax*4+0x243322b],0x49
  40bf75:	das    
  40bf76:	std    
  40bf77:	dec    edi
  40bf78:	(bad)
  40bf7b:	jo     0x40bffa
  40bf7d:	and    esi,ecx
  40bf7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf80:	xor    esi,DWORD PTR [ecx]
  40bf82:	dec    edi
  40bf83:	mov    dl,BYTE PTR [ebx-0x7b]
  40bf86:	mov    ebp,0xcd65549
  40bf8b:	pop    es
  40bf8c:	xor    ch,BYTE PTR [eax]
  40bf8e:	mov    ecx,0x3263fe4
  40bf93:	mov    BYTE PTR ds:0xe1b56833,cl
  40bf99:	and    eax,0x3ef75167
  40bf9e:	shr    edi,0x62
  40bfa1:	xchg   esp,eax
  40bfa2:	fs mov ebx,0xe47c2d37
  40bfa8:	adc    DWORD PTR [edi+0x5c],ebx
  40bfab:	or     al,0x40
  40bfad:	mov    ebx,DWORD PTR [edx-0x4af1aed4]
  40bfb3:	xchg   esi,eax
  40bfb4:	dec    esp
  40bfb5:	xchg   edi,eax
  40bfb6:	pusha  
  40bfb7:	push   esp
  40bfb8:	dec    ebx
  40bfb9:	scas   al,BYTE PTR es:[edi]
  40bfba:	mov    bl,BYTE PTR [ecx]
  40bfbc:	or     edx,DWORD PTR [eax-0x37]
  40bfbf:	mov    al,0x4d
  40bfc1:	or     ebp,DWORD PTR [edx+edi*4-0x6a]
  40bfc5:	cli    
  40bfc6:	xor    bh,BYTE PTR [ecx]
  40bfc8:	fdivr  DWORD PTR [edi-0x6b96a329]
  40bfce:	pop    ecx
  40bfcf:	push   edi
  40bfd0:	lock les esp,FWORD PTR [ebp+ebx*1-0xc]
  40bfd5:	push   eax
  40bfd6:	inc    eax
  40bfd7:	xchg   esi,eax
  40bfd8:	int    0xe1
  40bfda:	(bad)  
  40bfdd:	sub    eax,0x5a8bb764
  40bfe2:	cmp    esp,eax
  40bfe4:	mov    ebx,DWORD PTR [eax-0x797dbb31]
  40bfea:	fldcw  WORD PTR [eax-0x115acaa5]
  40bff0:	ins    BYTE PTR es:[edi],dx
  40bff1:	sub    DWORD PTR [esi-0x26],esi
  40bff4:	mov    ah,BYTE PTR [eax-0x76]
  40bff7:	sbb    edi,DWORD PTR [eax-0x3d21e6cc]
  40bffd:	mov    eax,0xc36ace98
  40c002:	xchg   esi,eax
  40c003:	xchg   edx,eax
  40c004:	dec    eax
  40c005:	push   esp
  40c006:	or     al,0x20
  40c008:	je     0x40c07e
  40c00a:	aaa    
  40c00b:	pop    ds
  40c00c:	and    dl,BYTE PTR [ebp-0x3e6e9e]
  40c012:	xchg   esi,eax
  40c013:	repz cs pop ss
  40c016:	adc    BYTE PTR [edi],bh
  40c018:	or     DWORD PTR [ebp-0xe],ebx
  40c01b:	dec    esp
  40c01c:	pop    ecx
  40c01d:	xchg   DWORD PTR [ebp-0x6e3172a6],esp
  40c023:	aad    0xd9
  40c025:	js     0x40c058
  40c027:	cwde   
  40c028:	xor    ebp,DWORD PTR [ebx+0x48]
  40c02b:	jno    0x40c09a
  40c02d:	inc    ebx
  40c02e:	gs clc 
  40c030:	mov    ebp,0xbf7c6e0a
  40c035:	(bad)  
  40c036:	mov    al,ds:0xe4ef4fba
  40c03b:	jl     0x40bfd5
  40c03d:	push   ss
  40c03e:	sbb    BYTE PTR [ecx+0x21711834],ch
  40c044:	xchg   esi,ebx
  40c046:	fwait
  40c047:	mov    edi,0xaeece5bf
  40c04c:	jge    0x40c095
  40c04e:	lock jp 0x40bfe0
  40c051:	js     0x40c0a2
  40c053:	add    ebp,DWORD PTR [ecx-0x7e7d1479]
  40c059:	inc    ebx
  40c05a:	mov    ch,0x6d
  40c05c:	lods   al,BYTE PTR ds:[esi]
  40c05d:	mov    DWORD PTR [eax+0x50],esi
  40c060:	cwde   
  40c061:	and    esp,DWORD PTR [ecx-0x7032e56a]
  40c067:	test   eax,0xe9435127
  40c06c:	add    BYTE PTR [ebx-0x30],0x65
  40c070:	push   esi
  40c071:	(bad)
  40c076:	jl     0x40c00f
  40c078:	stos   BYTE PTR es:[edi],al
  40c079:	stc    
  40c07a:	jg     0x40c004
  40c07c:	push   ecx
  40c07d:	jno    0x40c006
  40c07f:	adc    DWORD PTR [edx],0xe991d7bf
  40c085:	adc    eax,edx
  40c087:	push   ecx
  40c088:	and    DWORD PTR [edx-0x27d7dca7],ebp
  40c08e:	xchg   edi,eax
  40c08f:	bound  ecx,QWORD PTR [esi+0x32]
  40c092:	mov    esp,0x50c29997
  40c097:	pop    eax
  40c098:	fwait
  40c099:	pop    ss
  40c09a:	test   al,0xe3
  40c09c:	dec    esp
  40c09d:	adc    DWORD PTR [esi+0x288a3ad2],0x1c
  40c0a4:	fdivr  st,st(5)
  40c0a6:	or     BYTE PTR [edi+eiz*2],ah
  40c0a9:	mov    esi,gs
  40c0ab:	enter  0x55da,0x19
  40c0af:	jl     0x40c07c
  40c0b1:	aam    0xc7
  40c0b3:	daa    
  40c0b4:	adc    BYTE PTR [ecx+0x1e],bh
  40c0b7:	xchg   esp,eax
  40c0b8:	mov    ds:0xdafc1265,eax
  40c0bd:	hlt    
  40c0be:	stos   DWORD PTR es:[edi],eax
  40c0bf:	dec    ecx
  40c0c0:	dec    ebp
  40c0c1:	fistp  DWORD PTR [esi]
  40c0c3:	inc    edi
  40c0c4:	pop    edx
  40c0c5:	aas    
  40c0c6:	adc    al,0x7f
  40c0c8:	stc    
  40c0c9:	sti    
  40c0ca:	mov    ds:0x362fe444,eax
  40c0cf:	push   ss
  40c0d0:	cli    
  40c0d1:	push   edi
  40c0d2:	xchg   ecx,eax
  40c0d3:	dec    ecx
  40c0d4:	jb     0x40c0ae
  40c0d6:	mov    cs,WORD PTR [ebp+ebx*1+0x6d]
  40c0da:	inc    esp
  40c0db:	movlps xmm1,QWORD PTR [ebx+0x2e38c481]
  40c0e2:	aad    0xff
  40c0e4:	jle    0x40c0df
  40c0e6:	push   ss
  40c0e7:	push   esp
  40c0e8:	test   eax,0xf0daf5ae
  40c0ed:	and    edi,DWORD PTR [ecx]
  40c0ef:	aad    0xb7
  40c0f1:	(bad)  
  40c0f2:	in     al,0xab
  40c0f4:	xchg   edx,eax
  40c0f5:	sub    DWORD PTR [esi],eax
  40c0f7:	cmc    
  40c0f8:	(bad)  
  40c0f9:	fcmovb st,st(3)
  40c0fb:	and    esp,0x3e
  40c0fe:	jne    0x40c134
  40c100:	xchg   ebx,eax
  40c101:	(bad)
  40c104:	push   ebp
  40c105:	into   
  40c106:	jg     0x40c12a
  40c108:	(bad)  
  40c109:	fs aad 0x10
  40c10c:	or     al,0x7b
  40c10e:	or     eax,0x17c5be18
  40c113:	xor    BYTE PTR [ebx-0x4b],ch
  40c116:	push   cs
  40c117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c118:	cli    
  40c119:	xor    bl,BYTE PTR [edx+0x34d85db6]
  40c11f:	mov    edx,0x4110e215
  40c124:	sub    BYTE PTR [ecx+0x3c],cl
  40c127:	aaa    
  40c128:	jno    0x40c112
  40c12a:	mov    cl,0xd1
  40c12c:	mov    BYTE PTR [edx+0x8],bh
  40c12f:	enter  0xabb8,0x4f
  40c133:	lds    ebp,FWORD PTR [esi+0x5f]
  40c136:	jmp    0x19b6a5a6
  40c13b:	sbb    eax,eax
  40c13d:	inc    eax
  40c13e:	cli    
  40c13f:	cmp    al,0x87
  40c141:	repnz not bh
  40c144:	jae    0x40c195
  40c146:	sbb    al,0x7b
  40c148:	adc    esi,ecx
  40c14a:	bound  ebx,QWORD PTR [edi]
  40c14c:	adc    esi,edx
  40c14e:	inc    eax
  40c14f:	mov    WORD PTR [ebp+ebx*2-0x686ee7d9],ds
  40c156:	ins    BYTE PTR es:[edi],dx
  40c157:	repz sar BYTE PTR ds:0xad0b5f55,cl
  40c15e:	iret   
  40c15f:	fwait
  40c160:	xchg   edi,eax
  40c161:	retf   
  40c162:	test   BYTE PTR [eax],bl
  40c164:	adc    BYTE PTR [ecx-0x2b1cfa6],0x7c
  40c16b:	adc    BYTE PTR ds:0xd436f5f2,dh
  40c171:	fisttp WORD PTR [ebp+ebp*2+0xf908f7c]
  40c178:	sti    
  40c179:	leave  
  40c17a:	jne    0x40c1d0
  40c17c:	mov    edx,0xba1ccfbb
  40c181:	clc    
  40c182:	sti    
  40c183:	cwde   
  40c184:	or     DWORD PTR [ebx],ecx
  40c186:	inc    edi
  40c187:	add    DWORD PTR [esi+esi*2],edx
  40c18a:	sub    eax,0x4de147d4
  40c18f:	ja     0x40c12d
  40c191:	mov    esi,0xc334d0fb
  40c196:	sbb    DWORD PTR [edx-0x53c3d5f5],esi
  40c19c:	or     DWORD PTR [edx-0x39ddd932],ebp
  40c1a2:	mov    DWORD PTR [ebx+0x75],eax
  40c1a5:	(bad)  
  40c1a6:	dec    edi
  40c1a7:	cmp    esi,DWORD PTR [edx]
  40c1a9:	test   eax,0xc852298e
  40c1ae:	pop    edx
  40c1af:	arpl   WORD PTR [ebx-0x46],ax
  40c1b2:	mov    WORD PTR fs:[edx],fs
  40c1b5:	lahf   
  40c1b6:	jmp    0x8e2a:0x1dc6443a
  40c1bd:	xor    esp,DWORD PTR [ebx-0x44]
  40c1c0:	jp     0x40c188
  40c1c2:	sti    
  40c1c3:	and    eax,0xde8778d7
  40c1c8:	shl    esp,cl
  40c1ca:	(bad)  
  40c1cb:	dec    eax
  40c1cc:	nop
  40c1cd:	dec    edi
  40c1ce:	stos   BYTE PTR es:[edi],al
  40c1cf:	mov    dl,0xd
  40c1d1:	nop
  40c1d2:	adc    al,0xb2
  40c1d4:	test   ah,dh
  40c1d6:	jg     0x40c243
  40c1d8:	jnp    0x40c162
  40c1da:	cmp    edi,esp
  40c1dc:	push   edx
  40c1dd:	push   edx
  40c1de:	jge    0x40c167
  40c1e0:	push   ebx
  40c1e1:	mov    ds:0x164583ef,eax
  40c1e6:	icebp  
  40c1e7:	or     bh,BYTE PTR [edi+0x53]
  40c1ea:	es or  al,0x1e
  40c1ed:	pop    ebx
  40c1ee:	cmp    DWORD PTR [ebp-0x24a6ee05],eax
  40c1f4:	mov    al,0xcd
  40c1f6:	es xchg dx,ax
  40c1f9:	mov    dh,0x53
  40c1fb:	xchg   ecx,eax
  40c1fc:	stos   BYTE PTR es:[edi],al
  40c1fd:	cmc    
  40c1fe:	xor    eax,DWORD PTR [esi-0x3e]
  40c201:	mov    ss,WORD PTR [ebp-0x49]
  40c204:	and    eax,0xa93e5221
  40c209:	(bad)  
  40c20a:	loopne 0x40c1d8
  40c20c:	xchg   ebx,eax
  40c20d:	xchg   BYTE PTR [esi],cl
  40c20f:	pop    ds
  40c210:	ret    
  40c211:	dec    eax
  40c212:	inc    ecx
  40c213:	int3   
  40c214:	out    dx,eax
  40c215:	sub    eax,0xea680e2e
  40c21a:	jmp    0x51be:0x47bc5c76
  40c221:	(bad)  
  40c222:	mov    edx,0x4b2e3c69
  40c227:	stos   DWORD PTR es:[edi],eax
  40c228:	aad    0x74
  40c22a:	adc    esp,edx
  40c22c:	or     eax,0x75b8a43f
  40c231:	push   esp
  40c232:	out    dx,al
  40c233:	sub    ebp,DWORD PTR [ecx+0x22]
  40c236:	mov    al,ds:0x1c13c1b2
  40c23b:	dec    ebx
  40c23c:	cwde   
  40c23d:	mov    dh,0xc0
  40c23f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c240:	iret   
  40c241:	push   ss
  40c242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c243:	mov    dh,0xcd
  40c245:	test   al,0xf1
  40c247:	cmp    al,BYTE PTR [edx+0x2e]
  40c24a:	clc    
  40c24b:	jne    0x40c24f
  40c24d:	div    cl
  40c24f:	fs sahf 
  40c251:	(bad)  
  40c253:	retf   0xe5cd
  40c256:	pop    es
  40c257:	lods   eax,DWORD PTR ds:[esi]
  40c258:	sub    DWORD PTR [eax],edi
  40c25a:	mov    dh,0xc0
  40c25c:	pusha  
  40c25d:	cmp    ebx,DWORD PTR [edi+0x5]
  40c260:	ret    
  40c261:	lahf   
  40c262:	jg     0x40c22b
  40c264:	lods   eax,DWORD PTR ds:[esi]
  40c265:	mov    esi,0xd02c4f36
  40c26a:	push   0x4cc359d7
  40c26f:	rol    al,1
  40c271:	cli    
  40c272:	mov    ebp,0x3c6f8f8b
  40c277:	arpl   WORD PTR [edi-0x65],dx
  40c27a:	or     dl,BYTE PTR [eax+ebx*8+0xf778d8b]
  40c281:	daa    
  40c282:	test   BYTE PTR [eax-0x2b],dl
  40c285:	push   ss
  40c286:	push   esi
  40c287:	mov    DWORD PTR [eax-0x2c12a4b0],0x61dc1b56
  40c291:	in     eax,dx
  40c292:	inc    esi
  40c293:	and    edx,0xf44f04e9
  40c299:	jbe    0x40c27d
  40c29b:	jp     0x40c27c
  40c29d:	xor    BYTE PTR [ecx+ebp*2+0x56a40d35],dh
  40c2a4:	fild   DWORD PTR [edx+0x54]
  40c2a7:	stos   BYTE PTR es:[edi],al
  40c2a8:	xor    ah,dh
  40c2aa:	out    0x86,eax
  40c2ac:	pop    edx
  40c2ad:	xchg   edx,eax
  40c2ae:	xor    eax,0x12695d7d
  40c2b3:	jl     0x40c289
  40c2b5:	dec    ebx
  40c2b6:	sub    cl,BYTE PTR [edi]
  40c2b8:	push   eax
  40c2b9:	(bad)  
  40c2ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2bb:	mov    ch,0xd3
  40c2bd:	or     dl,BYTE PTR [ebx]
  40c2bf:	in     eax,0x18
  40c2c1:	cwde   
  40c2c2:	pushf  
  40c2c3:	push   ss
  40c2c4:	call   0xe2bd731d
  40c2c9:	std    
  40c2ca:	nop
  40c2cb:	out    dx,eax
  40c2cc:	dec    edx
  40c2cd:	push   ebx
  40c2ce:	test   eax,0xc2faa15f
  40c2d3:	or     al,0xa6
  40c2d5:	adc    BYTE PTR [ecx+0x8],al
  40c2d8:	xchg   edx,eax
  40c2d9:	ins    DWORD PTR es:[edi],dx
  40c2da:	pop    ecx
  40c2db:	push   esi
  40c2dc:	inc    ebp
  40c2dd:	fnsave [edi-0x21]
  40c2e0:	and    dl,BYTE PTR [edx]
  40c2e2:	(bad)  
  40c2e3:	or     eax,0x154b6c80
  40c2e8:	adc    BYTE PTR [ecx],0x97
  40c2eb:	dec    edi
  40c2ec:	imul   esi,ebp,0x42
  40c2ef:	mov    dh,0xb8
  40c2f1:	and    edi,ebp
  40c2f3:	inc    esp
  40c2f4:	jle    0x40c2eb
  40c2f6:	and    al,0xde
  40c2f8:	fwait
  40c2f9:	cmp    esi,DWORD PTR [edi]
  40c2fb:	mov    esp,gs
  40c2fd:	jmp    0x591c:0x1618efb6
  40c304:	aas    
  40c305:	xlat   BYTE PTR ds:[ebx]
  40c306:	icebp  
  40c307:	into   
  40c308:	nop
  40c309:	pop    ss
  40c30a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c30b:	add    BYTE PTR [edx-0x547e688],bl
  40c311:	cmc    
  40c312:	xchg   ecx,eax
  40c313:	dec    edx
  40c314:	fcom   DWORD PTR cs:[edx]
  40c317:	addr16 gs clc 
  40c31a:	sub    DWORD PTR [eax],ecx
  40c31c:	jmp    0x40c30c
  40c31e:	mov    DWORD PTR [ebp+0x50d48442],ecx
  40c324:	fdivr  DWORD PTR [esi+0x2f]
  40c327:	mov    dh,0x6a
  40c329:	ja     0x40c334
  40c32b:	sti    
  40c32c:	rcl    DWORD PTR [ebx-0x7c6ecb88],1
  40c332:	(bad)  
  40c333:	popf   
  40c334:	cmc    
  40c335:	test   DWORD PTR [ebx+0x5a046946],0x54acdc60
  40c33f:	aam    0x7d
  40c341:	sub    BYTE PTR [ebx+0x3f],0x19
  40c345:	ss scas eax,DWORD PTR es:[edi]
  40c347:	mov    al,0x1e
  40c349:	mov    edx,0x5472c107
  40c34e:	adc    eax,0x1da09ed0
  40c353:	xor    ecx,ebx
  40c355:	mov    cl,0x20
  40c357:	and    al,0x8a
  40c359:	popf   
  40c35a:	sub    al,BYTE PTR [edx+eiz*2+0x1206a80a]
  40c361:	cs aaa 
  40c363:	ins    BYTE PTR es:[edi],dx
  40c364:	(bad)  
  40c365:	or     DWORD PTR [ebx+edi*8+0x2291f863],ebx
  40c36c:	xor    DWORD PTR [ecx],esp
  40c36e:	pop    es
  40c36f:	das    
  40c370:	imul   ecx,edx,0x24
  40c373:	outs   dx,DWORD PTR ds:[esi]
  40c374:	dec    DWORD PTR [eax-0x34]
  40c377:	mov    bl,0x65
  40c379:	sub    bh,ch
  40c37b:	mov    eax,0xaa2c837e
  40c380:	out    dx,eax
  40c381:	xor    esi,DWORD PTR [edi]
  40c383:	sahf   
  40c384:	imul   esp,ebx,0x2c
  40c387:	adc    al,0x9d
  40c389:	inc    esi
  40c38a:	mov    gs,edx
  40c38c:	jnp    0x40c310
  40c38e:	cmp    ebx,DWORD PTR [ecx]
  40c390:	push   ds
  40c391:	in     eax,0xc2
  40c393:	mov    WORD PTR [edx+0x7842027d],gs
  40c399:	in     al,0x93
  40c39b:	add    esi,DWORD PTR [ebx-0x299c71e5]
  40c3a1:	imul   ebx,DWORD PTR [edx+0x44],0x4f
  40c3a5:	pop    ebx
  40c3a6:	sbb    eax,0xe0c17a28
  40c3ab:	aam    0x58
  40c3ad:	pop    esp
  40c3ae:	mov    ebx,0xd4941fc4
  40c3b3:	test   BYTE PTR [esi-0x2713dd0f],dh
  40c3b9:	dec    edi
  40c3ba:	pop    ebx
  40c3bb:	cmp    dh,0x2f
  40c3be:	push   ebx
  40c3bf:	je     0x40c3fd
  40c3c1:	pop    ds
  40c3c2:	add    eax,DWORD PTR [ecx]
  40c3c4:	push   0x65
  40c3c6:	clc    
  40c3c7:	xor    bl,ah
  40c3c9:	jns    0x40c36c
  40c3cb:	mov    edi,DWORD PTR [edi]
  40c3cd:	aaa    
  40c3ce:	rol    DWORD PTR [esi],cl
  40c3d0:	ror    DWORD PTR [eax],0x12
  40c3d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3d4:	add    edi,DWORD PTR [ebp-0x21]
  40c3d7:	mov    ebp,0x3af38110
  40c3dc:	mov    al,ds:0xda8160df
  40c3e1:	je     0x40c377
  40c3e3:	fisub  WORD PTR [edi+0x1c6afac3]
  40c3e9:	lock cmp eax,0x5c90931c
  40c3ef:	and    BYTE PTR [edi],bh
  40c3f1:	dec    ecx
  40c3f2:	lea    esi,[edx]
  40c3f4:	push   ebp
  40c3f5:	jp     0x40c401
  40c3f7:	imul   ebp,esp,0x2e
  40c3fa:	(bad)  
  40c3fb:	cmp    DWORD PTR [eax-0x76a7c79e],esp
  40c401:	shr    BYTE PTR [esi-0x4e],cl
  40c404:	retf   
  40c405:	push   es
  40c406:	push   0x14d9253c
  40c40b:	pop    ecx
  40c40c:	inc    ebx
  40c40d:	mov    eax,ds:0x17c00bab
  40c412:	(bad)  
  40c413:	hlt    
  40c414:	js     0x40c440
  40c416:	cli    
  40c417:	mov    BYTE PTR [ebx-0x5e15376f],cl
  40c41d:	sahf   
  40c41e:	repnz or cl,ah
  40c421:	mov    eax,ds:0xa7cd16d2
  40c426:	jmp    0x5233:0xa332f218
  40c42d:	cmp    eax,0x25d3be3b
  40c432:	pop    edx
  40c433:	cmp    esp,DWORD PTR [ebx+0x9]
  40c436:	inc    ecx
  40c437:	mov    DWORD PTR [ecx-0x719071d],ecx
  40c43d:	jo     0x40c3e2
  40c43f:	pushf  
  40c440:	mov    edi,0xb3f91f45
  40c445:	cmp    eax,0xdcc6d48b
  40c44a:	dec    ecx
  40c44b:	scas   eax,DWORD PTR es:[edi]
  40c44c:	pushf  
  40c44d:	(bad)  
  40c44e:	(bad)  
  40c44f:	iret   
  40c450:	sbb    eax,0xe5961c03
  40c455:	stos   DWORD PTR es:[edi],eax
  40c456:	inc    DWORD PTR [ecx-0x5262bf90]
  40c45c:	enter  0x70ae,0x60
  40c460:	inc    ebx
  40c461:	xor    BYTE PTR [esi+edx*2+0x5690cd5],dh
  40c468:	cmp    al,0xb3
  40c46a:	sub    BYTE PTR [si+0x4591],bh
  40c46f:	add    eax,ebx
  40c471:	mov    bh,0xb9
  40c473:	push   eax
  40c474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c475:	sub    eax,0x245fd4ed
  40c47a:	ror    BYTE PTR [ebx],0xd5
  40c47d:	mov    al,0x63
  40c47f:	jecxz  0x40c49c
  40c481:	and    ebx,DWORD PTR ds:0x49aaf92f
  40c487:	add    cl,bh
  40c489:	and    BYTE PTR [ebx+0x1602511a],al
  40c48f:	mov    esi,0x93c362b2
  40c494:	pop    edi
  40c495:	je     0x40c4f9
  40c497:	dec    ecx
  40c498:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c499:	dec    ebx
  40c49a:	mov    esp,DWORD PTR [ebp+0x5d]
  40c49d:	hlt    
  40c49e:	pop    eax
  40c49f:	or     cl,cl
  40c4a1:	outs   dx,DWORD PTR ds:[esi]
  40c4a2:	sar    DWORD PTR [ecx-0x3f7ad56c],0xf1
  40c4a9:	iret   
  40c4aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4ab:	sbb    DWORD PTR [edi],edi
  40c4ad:	mov    ds:0xfa72d84a,eax
  40c4b2:	shr    BYTE PTR [eax+0x5fd4934c],cl
  40c4b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4b9:	and    BYTE PTR [edx],0x90
  40c4bc:	test   BYTE PTR [edx+0x76cca796],cl
  40c4c2:	loop   0x40c452
  40c4c4:	lahf   
  40c4c5:	jno    0x40c4a1
  40c4c7:	inc    esp
  40c4c8:	data16 loop 0x40c4b2
  40c4cb:	nop
  40c4cc:	pop    ds
  40c4cd:	push   esi
  40c4ce:	mov    ds:0x3138c1de,eax
  40c4d3:	mov    BYTE PTR [esi-0x15cdaba7],al
  40c4d9:	cmp    bh,ch
  40c4db:	ret    0xe52e
  40c4de:	or     DWORD PTR [ebx-0x28],ebx
  40c4e1:	push   es
  40c4e2:	mov    ebx,0x80b2b92b
  40c4e7:	lods   al,BYTE PTR ds:[esi]
  40c4e8:	pop    ds
  40c4e9:	jmp    0x1b277764
  40c4ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4f0:	shl    DWORD PTR [eax+ecx*8+0xe],cl
  40c4f4:	pop    esi
  40c4f5:	pop    esp
  40c4f6:	call   0x819f1d9e
  40c4fb:	mov    ch,0xdf
  40c4fd:	push   eax
  40c4fe:	sub    BYTE PTR ss:[eax+eax*4],al
  40c502:	enter  0xe115,0x18
  40c506:	out    0xab,al
  40c508:	and    DWORD PTR [esi+edx*1],0x2526277
  40c50f:	jne    0x40c4d0
  40c511:	xor    al,BYTE PTR [esi+0x4b114908]
  40c517:	in     eax,0x42
  40c519:	inc    ebx
  40c51a:	cmp    esi,ebx
  40c51c:	mov    BYTE PTR [edx],bl
  40c51e:	jbe    0x40c53f
  40c520:	ficomp WORD PTR [edi+0x40]
  40c523:	mov    al,0x6a
  40c525:	inc    ecx
  40c526:	and    esp,DWORD PTR [ebx]
  40c528:	pop    ecx
  40c529:	bnd ja 0x40c5a6
  40c52c:	push   es
  40c52d:	xchg   edi,eax
  40c52e:	pop    edi
  40c52f:	jnp    0x40c52d
  40c531:	cmp    BYTE PTR [ecx-0x14],ah
  40c534:	cmp    esp,esi
  40c536:	aam    0xf0
  40c538:	or     DWORD PTR [ecx],ebx
  40c53a:	cmp    DWORD PTR [ecx-0x74ddb733],ebx
  40c540:	push   edi
  40c541:	mov    cl,0xce
  40c543:	pop    edx
  40c544:	push   0x6fba0f53
  40c549:	int3   
  40c54a:	xchg   ebx,eax
  40c54b:	ror    DWORD PTR [edi-0x19],1
  40c54e:	test   ch,cl
  40c550:	repnz push cs
  40c552:	fsub   st(6),st
  40c554:	or     al,0x68
  40c556:	loopne 0x40c5c9
  40c558:	add    BYTE PTR [esi],0x7c
  40c55b:	dec    eax
  40c55c:	rol    BYTE PTR [ebx-0x3a76a508],0x70
  40c563:	inc    eax
  40c564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c565:	mov    DWORD PTR [ecx+0x1c],ebx
  40c568:	lock rcl esi,1
  40c56b:	mul    BYTE PTR [esp+edi*1]
  40c56e:	cmp    edi,ecx
  40c570:	xor    cl,BYTE PTR [esi]
  40c572:	dec    esp
  40c573:	icebp  
  40c574:	cmp    ebp,esp
  40c576:	pop    ebx
  40c577:	jl     0x40c52f
  40c579:	jbe    0x40c54f
  40c57b:	mov    esp,0x799f2aaa
  40c580:	inc    esp
  40c581:	(bad)  
  40c582:	xchg   esp,eax
  40c583:	inc    ecx
  40c584:	xlat   BYTE PTR ds:[ebx]
  40c585:	iret   
  40c586:	lods   al,BYTE PTR ds:[esi]
  40c587:	ins    BYTE PTR es:[edi],dx
  40c588:	scas   eax,DWORD PTR es:[edi]
  40c589:	push   0x8e2482af
  40c58e:	xchg   ebx,eax
  40c58f:	outs   dx,DWORD PTR ds:[esi]
  40c590:	adc    eax,0x65f80ef5
  40c595:	inc    esi
  40c596:	add    BYTE PTR ds:0x233d4662,cl
  40c59c:	clc    
  40c59d:	pop    ss
  40c59e:	mov    dh,0x45
  40c5a0:	stos   BYTE PTR es:[edi],al
  40c5a1:	jmp    0x40c573
  40c5a3:	in     al,0x49
  40c5a5:	mov    edx,0x2f070baf
  40c5aa:	cmp    BYTE PTR [ebp+0xf],dh
  40c5ad:	out    dx,eax
  40c5ae:	sub    al,0xbd
  40c5b0:	stc    
  40c5b1:	inc    esp
  40c5b2:	sub    ebx,DWORD PTR [ebx+0x46]
  40c5b5:	jmp    0x40c60a
  40c5b7:	jg     0x40c61c
  40c5b9:	bound  edi,QWORD PTR [ebx+0x17c95bff]
  40c5bf:	inc    edx
  40c5c0:	pop    ebp
  40c5c1:	call   0x3dfc83b2
  40c5c6:	mov    esi,0xc6ccdc8e
  40c5cb:	jnp    0x40c608
  40c5cd:	lds    eax,FWORD PTR [ebx-0x6de23b8c]
  40c5d3:	test   BYTE PTR [eax],dh
  40c5d5:	nop
  40c5d6:	xchg   esp,eax
  40c5d7:	shl    DWORD PTR [eax-0x30981d73],0x85
  40c5de:	sub    eax,0x7ce4ee54
  40c5e3:	shl    eax,cl
  40c5e5:	ins    BYTE PTR es:[edi],dx
  40c5e6:	adc    ah,BYTE PTR [esi+0x5d764b2c]
  40c5ec:	push   esi
  40c5ed:	data16 outs dx,BYTE PTR ds:[esi]
  40c5ef:	jge    0x40c605
  40c5f1:	cmp    eax,0xb82df371
  40c5f6:	out    dx,eax
  40c5f7:	lods   al,BYTE PTR ds:[esi]
  40c5f8:	mov    dl,0xd7
  40c5fa:	sar    cl,0xcd
  40c5fd:	add    eax,esp
  40c5ff:	dec    esp
  40c600:	mov    eax,ds:0xf63b48a8
  40c605:	xor    eax,0xaf8a95b0
  40c60a:	sbb    al,0xfa
  40c60c:	ret    
  40c60d:	push   edx
  40c60e:	push   ss
  40c60f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c610:	pop    esp
  40c611:	jne    0x40c5b7
  40c613:	adc    eax,0x10a9d200
  40c618:	daa    
  40c619:	fwait
  40c61a:	lahf   
  40c61b:	cmp    dh,bh
  40c61d:	test   eax,0x9336d559
  40c622:	mov    bl,0x1a
  40c624:	inc    ebp
  40c625:	dec    ebx
  40c626:	clc    
  40c627:	repz mov bh,0xe3
  40c62a:	mov    db6,edi
  40c62d:	fisttp DWORD PTR [ebx+eiz*2+0x64]
  40c631:	retf   
  40c632:	sbb    esp,0x75
  40c635:	inc    eax
  40c636:	pop    edi
  40c638:	pop    ss
  40c639:	sar    BYTE PTR [esi+0x676f8a2f],cl
  40c63f:	outs   dx,DWORD PTR ds:[esi]
  40c640:	arpl   ax,ax
  40c642:	int    0x45
  40c644:	and    BYTE PTR [ebx],0xf7
  40c647:	or     BYTE PTR [eax],0x88
  40c64a:	sbb    DWORD PTR [esi+edx*2-0x6a5d1a8],eax
  40c651:	je     0x40c696
  40c653:	push   edi
  40c654:	and    bh,BYTE PTR [ecx]
  40c656:	ds into 
  40c658:	jnp    0x40c65e
  40c65a:	xchg   esi,eax
  40c65b:	push   ebp
  40c65c:	ret    0xc2c3
  40c65f:	mov    ch,0x2d
  40c661:	jg     0x40c5f7
  40c663:	es mov esp,0x42da55a7
  40c669:	jo     0x40c661
  40c66b:	(bad)  
  40c66c:	jmp    0x40c6e1
  40c66e:	push   0xcfac0b42
  40c673:	sbb    BYTE PTR [edx-0x36e2237f],cl
  40c679:	fisubr WORD PTR [ebx+0x5b]
  40c67c:	dec    edx
  40c67d:	fwait
  40c67e:	mov    cl,0x22
  40c680:	sahf   
  40c681:	outs   dx,BYTE PTR ds:[esi]
  40c682:	mov    edi,0xc8ebda0e
  40c687:	ins    BYTE PTR es:[edi],dx
  40c688:	int    0xff
  40c68a:	das    
  40c68b:	mov    al,ds:0xc5a6a7ff
  40c690:	std    
  40c691:	add    al,0xff
  40c693:	sub    al,BYTE PTR [edx]
  40c695:	push   ebp
  40c696:	inc    edx
  40c697:	cmp    eax,0xe288c5ed
  40c69c:	(bad)  [ebx]
  40c69e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c69f:	into   
  40c6a0:	addr16 cmp bl,ch
  40c6a3:	inc    ebx
  40c6a4:	pop    edx
  40c6a5:	cwde   
  40c6a6:	imul   ecx,DWORD PTR [edi-0x71],0xebfc7f12
  40c6ad:	or     al,0x71
  40c6af:	pop    ss
  40c6b0:	mov    esi,0x55898ca6
  40c6b5:	test   bl,0x58
  40c6b8:	jo     0x40c6b7
  40c6ba:	mov    ebx,0xd2abc9d7
  40c6bf:	test   BYTE PTR [edi-0x3a7c74a4],dl
  40c6c5:	pop    ss
  40c6c6:	fdiv   QWORD PTR [ebx-0x325ff4c9]
  40c6cc:	pop    esi
  40c6cd:	scas   al,BYTE PTR es:[edi]
  40c6ce:	push   esp
  40c6cf:	adc    al,BYTE PTR ds:0x79933fa3
  40c6d5:	xor    eax,0x83035311
  40c6da:	jge    0x40c711
  40c6dc:	sbb    ch,BYTE PTR [edx-0x2b7d5c05]
  40c6e2:	cmp    eax,0xddeb13f3
  40c6e7:	ds aad 0xc9
  40c6ea:	sub    DWORD PTR [edx],esi
  40c6ec:	and    al,0xfc
  40c6ee:	icebp  
  40c6ef:	js     0x40c764
  40c6f1:	jle    0x40c6fd
  40c6f3:	out    0x50,eax
  40c6f5:	push   edx
  40c6f6:	sbb    eax,DWORD PTR ds:[ebx+ebx*8+0x52]
  40c6fb:	ins    DWORD PTR es:[edi],dx
  40c6fc:	aas    
  40c6fd:	rol    BYTE PTR [edx],cl
  40c6ff:	mov    ah,BYTE PTR [ebx+eax*2-0x426baea2]
  40c706:	hlt    
  40c707:	pop    ecx
  40c708:	mov    al,ds:0x87291aa7
  40c70d:	imul   esp,ecx,0xffffffce
  40c710:	cwde   
  40c711:	pushf  
  40c712:	mov    esp,0xdc6cf0df
  40c717:	enter  0x6b5b,0xa5
  40c71b:	outs   dx,DWORD PTR ds:[esi]
  40c71c:	cmp    cl,bl
  40c71e:	push   ds
  40c71f:	jg     0x40c79a
  40c721:	xchg   BYTE PTR [esi+0x26ba44e3],dh
  40c727:	bound  ebx,QWORD PTR [ebx+0x430a2572]
  40c72d:	sub    ah,bh
  40c72f:	push   ss
  40c730:	dec    esi
  40c731:	pusha  
  40c732:	(bad)  [ecx+eiz*2-0x120bdf88]
  40c739:	pop    es
  40c73a:	stos   DWORD PTR es:[edi],eax
  40c73b:	and    eax,0x38e47ce0
  40c740:	mov    dh,0x4c
  40c742:	in     eax,0x8f
  40c744:	jae    0x40c77e
  40c746:	and    eax,0xd3a49f61
  40c74b:	pop    ds
  40c74c:	jb     0x40c6d7
  40c74e:	push   ebp
  40c74f:	(bad)
  40c752:	mov    eax,0x8af686c9
  40c757:	push   ebx
  40c758:	cmp    ecx,DWORD PTR [edi]
  40c75a:	sbb    BYTE PTR [ecx+0x45],0xb6
  40c75e:	stos   BYTE PTR es:[edi],al
  40c75f:	pop    ebx
  40c760:	adc    eax,0xb3758938
  40c765:	pop    ds
  40c766:	sub    eax,0xc4021efd
  40c76b:	or     eax,0x80dbbf39
  40c770:	pop    ebp
  40c771:	test   DWORD PTR [edi+0x655bdec6],0x63801abf
  40c77b:	push   esp
  40c77c:	mov    ds,WORD PTR [edi-0x4]
  40c77f:	(bad)  
  40c780:	enter  0x6ba5,0x2f
  40c784:	js     0x40c75c
  40c786:	xchg   ebp,eax
  40c787:	popf   
  40c788:	cmp    DWORD PTR [ecx],esi
  40c78a:	xor    eax,0x1a912972
  40c78f:	rcr    BYTE PTR [ecx],cl
  40c791:	addr16 leave 
  40c793:	sbb    BYTE PTR [eax],bh
  40c795:	jns    0x40c7eb
  40c797:	xor    bh,ah
  40c799:	xchg   esi,eax
  40c79a:	sub    ch,BYTE PTR [ebx+eiz*2]
  40c79d:	jbe    0x40c80e
  40c79f:	rol    DWORD PTR [eax+ecx*2-0x22],0x71
  40c7a4:	adc    bh,al
  40c7a6:	xchg   DWORD PTR [edx+0xc],ebp
  40c7a9:	push   esp
  40c7aa:	ror    ebp,0x24
  40c7ad:	enter  0x7383,0x66
  40c7b1:	and    eax,DWORD PTR [edx+0x1d643676]
  40c7b7:	xchg   ecx,eax
  40c7b8:	mov    ecx,0x6bd3dc7
  40c7bd:	cdq    
  40c7be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7bf:	in     eax,dx
  40c7c0:	mov    al,BYTE PTR [ecx]
  40c7c2:	test   BYTE PTR [ebp+0x283b7de2],dh
  40c7c8:	xor    al,0xc5
  40c7ca:	mov    WORD PTR [ebp-0x52714053],es
  40c7d0:	retf   
  40c7d1:	lea    ebp,ds:0xa99eee2d
  40c7d7:	mov    DWORD PTR ds:0x547454b1,eax
  40c7dd:	sbb    DWORD PTR ds:0x5056b01c,esi
  40c7e3:	xor    eax,0x33ad8b3f
  40c7e8:	(bad)  
  40c7ea:	mov    ds:0xf33c15e5,al
  40c7ef:	xchg   ecx,eax
  40c7f0:	mov    edi,0x6bf3fec5
  40c7f5:	je     0x40c783
  40c7f7:	leave  
  40c7f8:	adc    eax,0xb698804f
  40c7fd:	rcl    BYTE PTR [esi],1
  40c7ff:	scas   al,BYTE PTR es:[edi]
  40c800:	adc    al,0xea
  40c802:	scas   al,BYTE PTR es:[edi]
  40c803:	dec    edx
  40c804:	sub    al,0x64
  40c806:	mov    al,0x1c
  40c808:	jbe    0x40c82f
  40c80a:	jmp    0x40c822
  40c80c:	rcl    BYTE PTR [ebx+0x10a6b133],0xd3
  40c813:	leave  
  40c814:	in     al,0x85
  40c816:	outs   dx,DWORD PTR ds:[esi]
  40c817:	stos   DWORD PTR es:[edi],eax
  40c818:	mov    ebp,0xae729b79
  40c81d:	mov    dl,0x70
  40c81f:	sbb    al,0xed
  40c821:	pop    esp
  40c822:	xchg   ebp,eax
  40c823:	dec    ebx
  40c824:	and    al,bh
  40c826:	push   0x7fb68bdb
  40c82b:	cmp    BYTE PTR [edx],0x76
  40c82e:	mov    ch,BYTE PTR [ecx+esi*8+0x37]
  40c832:	test   eax,0x4b10490a
  40c837:	scas   al,BYTE PTR es:[edi]
  40c838:	mov    cl,0x4b
  40c83a:	jge    0x40c7e7
  40c83c:	xor    DWORD PTR [eax],eax
  40c83e:	loopne 0x40c7ff
  40c840:	lods   eax,DWORD PTR ds:[esi]
  40c841:	into   
  40c842:	jns    0x40c834
  40c844:	loopne 0x40c82a
  40c846:	retf   
  40c847:	jg     0x40c84c
  40c849:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c84a:	xchg   ebx,eax
  40c84b:	push   eax
  40c84c:	mov    ds:0x2a88505b,al
  40c851:	fadd   DWORD PTR [esi-0x43]
  40c854:	popa   
  40c855:	xabort 0xd1
  40c858:	daa    
  40c859:	mov    al,ds:0xcd3477f5
  40c85e:	outs   dx,DWORD PTR ds:[si]
  40c860:	es scas al,BYTE PTR es:[edi]
  40c862:	push   es
  40c863:	inc    edi
  40c864:	sbb    al,BYTE PTR [ebp+0x7a]
  40c867:	xchg   edx,eax
  40c868:	(bad)  
  40c869:	cmp    esp,DWORD PTR [edx]
  40c86b:	pop    ds
  40c86c:	xchg   edx,eax
  40c86d:	push   ebp
  40c86e:	inc    edi
  40c86f:	pop    ss
  40c870:	int    0xac
  40c872:	in     eax,dx
  40c873:	(bad)  
  40c875:	add    al,0x20
  40c877:	ja     0x40c83c
  40c879:	jecxz  0x40c8af
  40c87b:	push   es
  40c87c:	xor    dl,cl
  40c87e:	mov    ebp,0x6f9fee7c
  40c883:	in     eax,dx
  40c884:	cdq    
  40c885:	pop    ds
  40c886:	push   ss
  40c887:	sub    BYTE PTR [ecx-0x40],dh
  40c88a:	jbe    0x40c881
  40c88c:	arpl   WORD PTR cs:[eiz*4+0x5ce1ef0b],dx
  40c894:	popf   
  40c895:	or     edx,eax
  40c897:	lods   al,BYTE PTR ds:[esi]
  40c898:	sbb    BYTE PTR [ecx],dh
  40c89a:	popf   
  40c89b:	adc    eax,0xa61646a5
  40c8a0:	leave  
  40c8a1:	adc    DWORD PTR [eax-0x1faabcee],0x34
  40c8a8:	push   edi
  40c8a9:	and    DWORD PTR [ecx+ebx*8],ebp
  40c8ac:	mov    BYTE PTR [edi],0x4e
  40c8af:	lods   al,BYTE PTR ds:[esi]
  40c8b0:	call   ecx
  40c8b2:	mov    edi,0x5cc96ba0
  40c8b7:	pop    edi
  40c8b8:	js     0x40c8a4
  40c8ba:	addr16 xchg ecx,eax
  40c8bc:	test   eax,0xde68ad90
  40c8c1:	scas   al,BYTE PTR es:[edi]
  40c8c2:	aas    
  40c8c3:	push   ss
  40c8c4:	ficomp DWORD PTR [ebp+0x31708660]
  40c8ca:	and    edi,ebp
  40c8cc:	mov    eax,0x53c8287a
  40c8d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8d2:	xchg   edx,eax
  40c8d3:	and    BYTE PTR [edi-0x13],ch
  40c8d6:	inc    eax
  40c8d7:	ja     0x40c87f
  40c8d9:	js     0x40c8c7
  40c8db:	xchg   DWORD PTR [eax+ebp*8+0x13],esi
  40c8df:	sbb    al,BYTE PTR [edi+0x28]
  40c8e2:	jb     0x40c930
  40c8e4:	xor    al,0x86
  40c8e6:	xchg   ebp,eax
  40c8e7:	mov    esi,0x62b7003d
  40c8ec:	jae    0x40c947
  40c8ee:	dec    edx
  40c8ef:	out    dx,al
  40c8f0:	repz out dx,al
  40c8f2:	mov    cl,0x95
  40c8f4:	pop    ecx
  40c8f5:	popa   
  40c8f6:	mov    esp,0xf60686ec
  40c8fb:	inc    edi
  40c8fc:	adc    ebp,DWORD PTR [ecx+0x681ed97f]
  40c902:	push   eax
  40c903:	xor    BYTE PTR [ebx],bl
  40c905:	sub    DWORD PTR [esi-0x41],0xd3e2d45b
  40c90c:	test   BYTE PTR [bx],bh
  40c90f:	pop    ebp
  40c910:	dec    edx
  40c911:	mov    ds:0x38ed41d4,eax
  40c916:	pop    esp
  40c917:	xor    al,0x78
  40c919:	inc    ebp
  40c91a:	xlat   BYTE PTR ds:[ebx]
  40c91b:	jp     0x40c8c7
  40c91d:	jae    0x40c97a
  40c91f:	lock enter 0xdf37,0x18
  40c924:	cli    
  40c925:	sub    al,0xb4
  40c927:	inc    esp
  40c928:	sar    BYTE PTR [esi+esi*8],1
  40c92b:	sub    DWORD PTR [ebx],esp
  40c92d:	mov    ebx,0x11c21b80
  40c932:	jno    0x40c8e4
  40c934:	or     al,0x17
  40c936:	jmp    0x84bd:0xb45da1b
  40c93d:	lods   eax,DWORD PTR ds:[esi]
  40c93e:	dec    ebx
  40c93f:	sub    DWORD PTR [esi-0x75],edx
  40c942:	add    al,0x67
  40c944:	dec    esi
  40c945:	mov    dh,0x2e
  40c947:	pop    es
  40c948:	lea    esp,[ebx]
  40c94a:	jecxz  0x40c911
  40c94c:	stos   BYTE PTR es:[edi],al
  40c94d:	xchg   ebx,eax
  40c94e:	scas   al,BYTE PTR es:[edi]
  40c94f:	cmp    BYTE PTR [edi+0x78],0x3f
  40c953:	js     0x40c97e
  40c955:	icebp  
  40c956:	ret    
  40c957:	cwde   
  40c958:	out    0xa2,eax
  40c95a:	mov    bl,0xed
  40c95c:	push   eax
  40c95d:	xor    al,0xd9
  40c95f:	push   esp
  40c960:	inc    edi
  40c961:	ss and edx,ecx
  40c964:	das    
  40c965:	je     0x40c957
  40c967:	jmp    FWORD PTR [edx]
  40c969:	mov    ds:0x8dbdb27f,eax
  40c96e:	or     al,0x64
  40c970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c971:	xchg   esp,eax
  40c972:	mov    ebx,0x57d4e474
  40c977:	sub    BYTE PTR [ecx],bh
  40c979:	mov    al,ds:0xd23bc5bb
  40c97e:	push   ebx
  40c97f:	cli    
  40c980:	push   ebx
  40c981:	dec    eax
  40c982:	lods   eax,DWORD PTR ds:[esi]
  40c983:	jge    0x40c93a
  40c985:	int    0x5c
  40c987:	cmp    BYTE PTR [di+0x40],ch
  40c98b:	jmp    0x2c51:0xcbc28e30
  40c992:	mov    ah,0x2f
  40c994:	inc    esi
  40c995:	dec    edx
  40c996:	jb     0x40c9b5
  40c998:	add    eax,0x621ce1fa
  40c99d:	inc    ecx
  40c99e:	frstor [ebp+edx*2+0x97063c1]
  40c9a5:	test   BYTE PTR gs:[edx-0x10],0xb
  40c9aa:	inc    edx
  40c9ab:	mov    bl,0xfd
  40c9ad:	mov    ds:0xb168d8ca,al
  40c9b2:	cli    
  40c9b3:	or     dh,BYTE PTR [ebx-0x74]
  40c9b6:	std    
  40c9b7:	int3   
  40c9b8:	in     al,dx
  40c9b9:	mov    ah,BYTE PTR [ebx+0x50]
  40c9bc:	neg    DWORD PTR [esi+0x7b]
  40c9bf:	push   edi
  40c9c0:	mov    ebx,0xa774b4
  40c9c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9c6:	and    BYTE PTR [ebp-0x7e182a2f],bh
  40c9cc:	jns    0x40ca13
  40c9ce:	mov    ebx,0x91794371
  40c9d3:	xchg   ebx,eax
  40c9d4:	jae    0x40c9fc
  40c9d6:	popf   
  40c9d7:	cmp    eax,0x10718c0
  40c9dc:	mov    BYTE PTR [edx+0x33],bl
  40c9df:	mov    dl,0x62
  40c9e1:	aad    0x67
  40c9e3:	out    0xc7,eax
  40c9e5:	test   bh,dh
  40c9e7:	push   ecx
  40c9e8:	inc    esi
  40c9e9:	int3   
  40c9ea:	stos   BYTE PTR es:[edi],al
  40c9eb:	push   0x7b
  40c9ed:	xor    eax,0xdc2cb8c0
  40c9f2:	outs   dx,BYTE PTR ds:[esi]
  40c9f3:	push   edx
  40c9f4:	mov    ecx,0xb0fcbbd1
  40c9f9:	arpl   WORD PTR [edi+ebx*8+0x77],cx
  40c9fd:	mov    DWORD PTR ds:0x41ac8e16,ebx
  40ca03:	add    ebx,ebx
  40ca05:	loop   0x40ca15
  40ca07:	sub    al,0x86
  40ca09:	sbb    bh,BYTE PTR ss:[bx+di+0x5b]
  40ca0e:	clc    
  40ca0f:	dec    ecx
  40ca10:	dec    esi
  40ca11:	fcmove st,st(7)
  40ca13:	je     0x40c9fd
  40ca15:	cmp    cl,BYTE PTR [ebp-0x19]
  40ca18:	adc    edi,DWORD PTR [edx-0x7d]
  40ca1b:	xor    cl,BYTE PTR [ebp+0x286fb3a1]
  40ca21:	stos   DWORD PTR es:[edi],eax
  40ca22:	push   ss
  40ca23:	mov    cl,bh
  40ca25:	dec    ebx
  40ca26:	mov    bh,0x12
  40ca28:	pop    ebp
  40ca29:	fimul  WORD PTR [edx+0x29]
  40ca2c:	call   0x6345:0x7e2fe1fe
  40ca33:	fwait
  40ca34:	out    dx,eax
  40ca35:	adc    DWORD PTR [esi],esp
  40ca37:	retf   
  40ca38:	and    DWORD PTR [esi+0x2f],ecx
  40ca3b:	fwait
  40ca3c:	mov    edx,0x5cf5126
  40ca41:	inc    ecx
  40ca42:	aaa    
  40ca43:	mov    dl,0x2b
  40ca45:	cmp    edx,ecx
  40ca47:	imul   edx,DWORD PTR [ebp+0x40f6657],0xf
  40ca4e:	xchg   ebp,eax
  40ca4f:	(bad)  
  40ca50:	mov    eax,0xd589dcc4
  40ca55:	and    al,0xb7
  40ca57:	lea    ebp,[ecx+0x5d2934c9]
  40ca5d:	mov    ecx,0x2fdfa2c2
  40ca62:	jnp    0x40ca25
  40ca64:	sar    BYTE PTR fs:[esp+ecx*2],0x47
  40ca69:	int3   
  40ca6a:	cmp    BYTE PTR [edx],dl
  40ca6c:	stos   DWORD PTR es:[edi],eax
  40ca6d:	adc    al,0xd5
  40ca6f:	xchg   edx,eax
  40ca70:	jns    0x40ca20
  40ca72:	ins    DWORD PTR es:[edi],dx
  40ca73:	ins    BYTE PTR es:[edi],dx
  40ca74:	loope  0x40ca57
  40ca76:	call   0x3f7b:0x9c92e8e0
  40ca7d:	sbb    al,BYTE PTR [ebx-0x2d]
  40ca80:	idiv   BYTE PTR [ebx+esi*1]
  40ca83:	clc    
  40ca84:	xchg   esi,eax
  40ca85:	test   al,0xe1
  40ca87:	fadd   QWORD PTR [edi]
  40ca89:	add    ebx,DWORD PTR [eax]
  40ca8b:	jno    0x40cab4
  40ca8d:	out    dx,al
  40ca8e:	leave  
  40ca8f:	jg     0x40ca5b
  40ca91:	fldpi  
  40ca93:	shl    esi,1
  40ca95:	inc    edi
  40ca96:	jb     0x40ca74
  40ca98:	fwait
  40ca99:	adc    esi,DWORD PTR [esp+ebp*4]
  40ca9c:	mov    ds:0xdb3ee100,eax
  40caa1:	mov    eax,DWORD PTR [ebx-0x4aa67f0d]
  40caa7:	sub    DWORD PTR [ebx-0x3e],ebx
  40caaa:	jp     0x40cadd
  40caac:	xor    DWORD PTR gs:[edi-0x15],ecx
  40cab0:	mov    al,0x11
  40cab2:	push   ebx
  40cab3:	imul   esp,DWORD PTR [ebx],0xffffffc3
  40cab6:	lods   al,BYTE PTR ds:[esi]
  40cab7:	push   es
  40cab8:	jecxz  0x40ca87
  40caba:	mov    al,ds:0x711ee84b
  40cabf:	sbb    al,0xdd
  40cac1:	pusha  
  40cac2:	xchg   ebx,eax
  40cac3:	push   esp
  40cac4:	lock pusha 
  40cac6:	fst    DWORD PTR [eax]
  40cac8:	fnstcw WORD PTR [edi]
  40caca:	push   ecx
  40cacb:	inc    eax
  40cacc:	(bad)  
  40cacd:	scas   al,BYTE PTR es:[edi]
  40cace:	add    ch,0x72
  40cad1:	dec    edx
  40cad2:	stos   BYTE PTR es:[edi],al
  40cad3:	jns    0x40ca7d
  40cad5:	mov    al,0xa6
  40cad7:	jo     0x40cb23
  40cad9:	nop
  40cada:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cadb:	scas   al,BYTE PTR es:[edi]
  40cadc:	jb     0x40cb3b
  40cade:	sub    eax,0x832f5db1
  40cae3:	or     al,0x90
  40cae5:	dec    edx
  40cae6:	pop    ss
  40cae7:	leave  
  40cae8:	add    esi,DWORD PTR [ecx+0x53]
  40caeb:	dec    ebx
  40caec:	retf   0x5d1e
  40caef:	call   0xe177:0xf1c0027
  40caf6:	mov    ch,0xee
  40caf8:	mov    edi,0x8aeb80a1
  40cafd:	jae    0x40cabc
  40caff:	xor    DWORD PTR [edi],0x79497fe7
  40cb05:	pop    ds
  40cb06:	or     dl,BYTE PTR [ebx+edx*8-0x4133140b]
  40cb0d:	sbb    esi,DWORD PTR [ebp-0x1e]
  40cb10:	push   ecx
  40cb11:	jecxz  0x40caf1
  40cb13:	lods   al,BYTE PTR ds:[esi]
  40cb14:	aaa    
  40cb15:	push   0x7f90a0fc
  40cb1a:	inc    edi
  40cb1b:	cmp    al,0xa2
  40cb1d:	sahf   
  40cb1e:	mov    dh,0xe1
  40cb20:	daa    
  40cb21:	dec    esi
  40cb22:	and    eax,0x3d7e973f
  40cb27:	gs or  al,0x87
  40cb2a:	lock ds pusha 
  40cb2d:	sar    DWORD PTR [bx+0x737d],0x46
  40cb33:	into   
  40cb34:	mov    esi,0xc4e783ab
  40cb39:	popf   
  40cb3a:	ja     0x40cb24
  40cb3c:	mov    dl,0x8
  40cb3e:	cli    
  40cb3f:	or     BYTE PTR [ebx],dh
  40cb41:	cmp    al,BYTE PTR ds:0xbfa33c74
  40cb47:	imul   ecx,esi,0x2aa6a142
  40cb4d:	es dec edi
  40cb4f:	sbb    dh,BYTE PTR ds:0x2df331f2
  40cb55:	sub    cl,BYTE PTR [edi]
  40cb57:	outs   dx,BYTE PTR ds:[esi]
  40cb58:	les    esp,FWORD PTR [edx+0x4ba4d71]
  40cb5e:	nop
  40cb5f:	mov    edi,0xcaa01011
  40cb64:	xchg   BYTE PTR [edx-0x6d],bh
  40cb67:	push   ds
  40cb68:	add    eax,0x5f93fb8c
  40cb6d:	adc    DWORD PTR [esi],eax
  40cb6f:	daa    
  40cb70:	xor    ebx,eax
  40cb72:	sub    al,0xbb
  40cb74:	shl    ch,1
  40cb76:	dec    edi
  40cb77:	dec    ebx
  40cb78:	scas   al,BYTE PTR es:[edi]
  40cb79:	cmp    al,0x4d
  40cb7b:	aad    0x5c
  40cb7d:	stc    
  40cb7e:	sub    al,0x37
  40cb80:	ds push es
  40cb82:	arpl   cx,di
  40cb84:	sbb    ah,BYTE PTR [edx]
  40cb86:	fisttp DWORD PTR cs:[edi]
  40cb89:	js     0x40cb63
  40cb8b:	xchg   edx,eax
  40cb8c:	pop    esp
  40cb8d:	sub    DWORD PTR [edi],esi
  40cb8f:	(bad)  
  40cb90:	jmp    0x3f1f81e4
  40cb95:	xchg   BYTE PTR [edi+ebp*2+0x166dc237],bh
  40cb9c:	aad    0xc0
  40cb9e:	mov    esp,0x4eacf876
  40cba3:	loop   0x40cbbd
  40cba5:	inc    eax
  40cba6:	sub    esp,0x59613edf
  40cbac:	nop
  40cbad:	ret    
  40cbae:	mov    ds:0x3032dfa4,eax
  40cbb3:	mov    WORD PTR [ebx+edi*2+0x7ec4f99b],es
  40cbba:	loope  0x40cc29
  40cbbc:	or     BYTE PTR [ebp-0x4e3b3c3b],dl
  40cbc2:	add    esp,0x1efbcb6c
  40cbc8:	sbb    al,0x37
  40cbca:	cmc    
  40cbcb:	xchg   ecx,eax
  40cbcc:	nop
  40cbcd:	push   ss
  40cbce:	pop    es
  40cbcf:	push   esi
  40cbd0:	xor    BYTE PTR [edx+0x12c4002c],ch
  40cbd6:	dec    ecx
  40cbd7:	(bad)  
  40cbd8:	xor    eax,0xe536e04a
  40cbdd:	cs jle 0x40cc17
  40cbe0:	dec    esi
  40cbe1:	mov    edx,0xef835001
  40cbe6:	inc    ecx
  40cbe7:	inc    ecx
  40cbe8:	xrelease xchg DWORD PTR [esi-0x3851e390],ecx
  40cbef:	stc    
  40cbf0:	jge    0x40cc3b
  40cbf2:	sub    BYTE PTR [ebp-0x2f],cl
  40cbf5:	mov    esp,0xdd878a25
  40cbfa:	pop    ds
  40cbfb:	fimul  DWORD PTR [eax+eax*1]
  40cbfe:	fst    QWORD PTR [esp+edx*2]
  40cc01:	mov    ebp,0x53b02cdb
  40cc06:	inc    ecx
  40cc07:	aaa    
  40cc08:	and    BYTE PTR [edx],al
  40cc0a:	mov    ebx,0x3318925e
  40cc0f:	int3   
  40cc10:	mov    ch,dh
  40cc12:	mov    bh,0x54
  40cc14:	nop
  40cc15:	enter  0xdc74,0x36
  40cc19:	icebp  
  40cc1a:	leave  
  40cc1b:	mov    bl,0x8f
  40cc1d:	aas    
  40cc1e:	aaa    
  40cc1f:	imul   BYTE PTR [esi-0x61]
  40cc22:	retf   0x53a2
  40cc25:	fcom   QWORD PTR [ecx]
  40cc27:	sbb    BYTE PTR [ecx+0x5b00b342],bh
  40cc2d:	push   0x65af18be
  40cc32:	xor    al,0x15
  40cc34:	dec    ecx
  40cc35:	mov    ch,0x1c
  40cc37:	cmc    
  40cc38:	repz ds in eax,0xab
  40cc3c:	sbb    al,0xa0
  40cc3e:	pop    ds
  40cc3f:	jl     0x40cc05
  40cc41:	shl    DWORD PTR [esi-0x2c263329],0x7
  40cc48:	mov    edx,0x8795f0f9
  40cc4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc4e:	adc    al,0x67
  40cc50:	xchg   edi,eax
  40cc51:	outs   dx,BYTE PTR ds:[esi]
  40cc52:	(bad)  
  40cc53:	push   edi
  40cc54:	neg    BYTE PTR [edi-0x5f437242]
  40cc5a:	mov    ch,BYTE PTR gs:[ecx+0xc255036]
  40cc61:	mov    dl,0x0
  40cc63:	in     al,dx
  40cc64:	pop    esi
  40cc65:	jns    0x40cc34
  40cc67:	cmp    BYTE PTR [ebp-0x620cc60b],dh
  40cc6d:	lds    edx,FWORD PTR [edi+0xd]
  40cc70:	int3   
  40cc71:	out    dx,al
  40cc72:	mov    cs,edi
  40cc74:	pop    edx
  40cc75:	call   0xbf9e:0x68121030
  40cc7c:	int    0x55
  40cc7e:	pop    ecx
  40cc7f:	int3   
  40cc80:	jbe    0x40cc08
  40cc82:	mov    al,fs:0x6d2dbb52
  40cc88:	in     eax,0x6b
  40cc8a:	cmp    eax,0xc1c9e103
  40cc8f:	popa   
  40cc90:	xchg   ecx,eax
  40cc91:	jp     0x40cc59
  40cc93:	retf   0x1363
  40cc96:	ins    DWORD PTR es:[edi],dx
  40cc97:	rol    cl,cl
  40cc99:	das    
  40cc9a:	(bad)  
  40cc9b:	fldcw  WORD PTR [ebx-0x4ca9adf1]
  40cca1:	dec    ebx
  40cca2:	push   eax
  40cca3:	and    DWORD PTR [esi],edx
  40cca5:	arpl   WORD PTR [edx+0x4268ed1d],si
  40ccab:	sub    dh,BYTE PTR [esi]
  40ccad:	nop
  40ccae:	jb     0x40cc59
  40ccb0:	or     bh,dl
  40ccb2:	mov    dh,0xf2
  40ccb4:	sub    al,0x3f
  40ccb6:	or     BYTE PTR [eax-0x48],dl
  40ccb9:	std    
  40ccba:	in     eax,0x43
  40ccbc:	aad    0xf2
  40ccbe:	imul   ebp,DWORD PTR [ebp-0x1d],0x157b383
  40ccc5:	pop    es
  40ccc6:	sbb    eax,0x97032bb4
  40cccb:	sbb    eax,0xacae6d2e
  40ccd0:	jo     0x40ccdf
  40ccd2:	add    BYTE PTR [ecx-0x595268dd],dh
  40ccd8:	test   BYTE PTR [eax],dl
  40ccda:	(bad)  
  40ccdb:	push   ecx
  40ccdc:	jns    0x40ccc9
  40ccde:	xchg   ebx,eax
  40ccdf:	xchg   ecx,eax
  40cce0:	and    BYTE PTR [ebp+0x79122fa9],bh
  40cce6:	scas   eax,DWORD PTR es:[edi]
  40cce7:	push   ebp
  40cce8:	dec    eax
  40cce9:	mov    ecx,0x8a204793
  40ccee:	test   eax,0x254c7502
  40ccf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccf4:	pop    esp
  40ccf5:	(bad)  
  40ccf6:	addr16 sti 
  40ccf8:	out    0xcf,al
  40ccfa:	fmul   QWORD PTR [edi+esi*4+0xcfe05b4]
  40cd01:	adc    DWORD PTR [esi],ecx
  40cd03:	bound  edx,QWORD PTR [ebx]
  40cd05:	in     al,dx
  40cd06:	jg     0x40cc9f
  40cd08:	push   eax
  40cd09:	or     bl,BYTE PTR [edx]
  40cd0b:	ins    BYTE PTR es:[edi],dx
  40cd0c:	aaa    
  40cd0d:	(bad)  
  40cd0e:	js     0x40ccd6
  40cd10:	dec    esp
  40cd11:	out    dx,al
  40cd12:	mov    ds:0x97604380,eax
  40cd17:	mov    al,0x99
  40cd19:	xor    BYTE PTR [eax+0x73],dh
  40cd1c:	or     al,0xe2
  40cd1e:	ss out dx,al
  40cd20:	jg     0x40cd50
  40cd22:	inc    ecx
  40cd23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd24:	ret    
  40cd25:	out    dx,al
  40cd26:	sub    edx,DWORD PTR [esi-0x57446d01]
  40cd2c:	xchg   ecx,eax
  40cd2d:	push   edx
  40cd2e:	jmp    0x40cd90
  40cd30:	push   edi
  40cd31:	ds aaa 
  40cd33:	sub    BYTE PTR [edx+0x4ae344c6],al
  40cd39:	sbb    eax,DWORD PTR [ebx]
  40cd3b:	sti    
  40cd3c:	push   ds
  40cd3d:	fimul  WORD PTR [esi]
  40cd3f:	mov    esp,ebx
  40cd41:	sub    eax,0x322d70a5
  40cd46:	ret    
  40cd47:	mov    ebp,0x42c25a7f
  40cd4c:	inc    ebp
  40cd4d:	stos   BYTE PTR es:[edi],al
  40cd4e:	xchg   edi,eax
  40cd4f:	ja     0x40cce1
  40cd51:	lock popf 
  40cd53:	mov    edx,0x629a253d
  40cd58:	xchg   edi,eax
  40cd59:	lahf   
  40cd5a:	popf   
  40cd5b:	push   0x12
  40cd5d:	mov    al,ds:0x65fbd5f7
  40cd62:	pop    esp
  40cd63:	mov    ecx,0xb87799aa
  40cd68:	sub    eax,0xbf4a58d4
  40cd6d:	imul   ebp,DWORD PTR [edi+edx*4-0x14],0x3d1009b6
  40cd75:	xchg   DWORD PTR [ebx-0xda3ca06],esp
  40cd7b:	fadd   QWORD PTR [eax+0x1f]
  40cd7e:	call   0x5:0xefcfd5cc
  40cd85:	inc    edx
  40cd86:	enter  0x7cba,0x79
  40cd8a:	shl    DWORD PTR [esi],1
  40cd8c:	btc    DWORD PTR [eax],eax
  40cd8f:	mov    BYTE PTR [ebp-0x4a],bl
  40cd92:	jns    0x40cd95
  40cd94:	add    eax,0xbb97b49b
  40cd99:	mov    al,ds:0xd31a861f
  40cd9e:	ins    DWORD PTR es:[edi],dx
  40cd9f:	mov    ah,0x62
  40cda1:	dec    esp
  40cda2:	xor    edx,DWORD PTR [ebx]
  40cda4:	fmulp  st(7),st
  40cda6:	clc    
  40cda7:	mov    eax,0xe4f272cd
  40cdac:	test   eax,0xf9f36e5f
  40cdb1:	retf   
  40cdb2:	dec    ebp
  40cdb3:	xchg   DWORD PTR [edi],edx
  40cdb5:	int3   
  40cdb6:	mov    cl,0xa3
  40cdb8:	sar    BYTE PTR [eax+eax*8+0x2d],0xf7
  40cdbd:	sar    bl,cl
  40cdbf:	xchg   edi,esp
  40cdc1:	stc    
  40cdc2:	pop    esi
  40cdc3:	mov    dl,0x8a
  40cdc5:	xchg   edx,ecx
  40cdc7:	push   ss
  40cdc8:	out    0x48,eax
  40cdca:	sbb    esp,DWORD PTR [edi]
  40cdcc:	jno    0x40cd5c
  40cdce:	or     DWORD PTR [edx-0x52ce8bdf],0x96e134d1
  40cdd8:	add    bh,BYTE PTR [edi]
  40cdda:	ins    BYTE PTR es:[edi],dx
  40cddb:	or     eax,ebp
  40cddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdde:	(bad)  
  40cddf:	ins    BYTE PTR es:[edi],dx
  40cde0:	mov    dh,0x11
  40cde2:	and    al,0xbe
  40cde4:	xchg   edi,eax
  40cde5:	mov    ebx,0xc617abf5
  40cdea:	mov    bh,0xb2
  40cdec:	shl    BYTE PTR [eax-0x48],0x29
  40cdf0:	push   ds
  40cdf1:	mov    WORD PTR ds:0xeb0e83,?
  40cdf7:	xor    ebx,DWORD PTR [esi+0x38]
  40cdfa:	std    
  40cdfb:	jno    0x40ce6b
  40cdfd:	neg    DWORD PTR [eax+0x13]
  40ce00:	fcmove st,st(3)
  40ce02:	imul   ebx,edi,0xe19d5ff5
  40ce08:	pop    DWORD PTR [eax-0x2c]
  40ce0b:	xor    cl,ch
  40ce0d:	inc    edx
  40ce0e:	shl    BYTE PTR [ebx-0x534aaf05],cl
  40ce14:	mul    DWORD PTR [edx+0x2f9e984c]
  40ce1a:	mov    ss,WORD PTR [ebx]
  40ce1c:	inc    ebx
  40ce1d:	mov    eax,ebp
  40ce1f:	xchg   ebx,eax
  40ce20:	(bad)  
  40ce21:	mov    WORD PTR [edi],ss
  40ce23:	fwait
  40ce24:	push   eax
  40ce25:	cwde   
  40ce26:	ret    0x3c59
  40ce29:	xchg   ecx,eax
  40ce2a:	cwde   
  40ce2b:	and    DWORD PTR [edx-0x2d],edi
  40ce2e:	push   es
  40ce2f:	pop    ebp
  40ce30:	pop    edi
  40ce31:	jge    0x40ce4e
  40ce33:	mov    eax,ds:0xea975e19
  40ce38:	or     al,0xdb
  40ce3a:	popa   
  40ce3b:	xor    DWORD PTR [edi+ebp*4+0x21],esi
  40ce3f:	and    al,0xa9
  40ce41:	aad    0x5b
  40ce43:	mov    ds:0x8cebaa12,al
  40ce48:	cmc    
  40ce49:	mov    bl,0xeb
  40ce4b:	sub    eax,0x995e80e6
  40ce50:	dec    eax
  40ce51:	add    DWORD PTR [eax-0x44],0x6e
  40ce55:	cmp    eax,0xe9a2a708
  40ce5a:	jge    0x40ceb1
  40ce5c:	(bad)  
  40ce5d:	mov    dh,0xe9
  40ce5f:	in     eax,0x33
  40ce61:	mov    ecx,0x4326e0e5
  40ce66:	pop    esp
  40ce67:	int3   
  40ce68:	pop    ss
  40ce69:	aaa    
  40ce6a:	pop    ecx
  40ce6b:	mov    eax,0x5602a31c
  40ce70:	dec    edi
  40ce71:	and    eax,0xb9fa1db5
  40ce76:	fstp   QWORD PTR [edi+0x41]
  40ce79:	jp     0x40ce6c
  40ce7b:	outs   dx,BYTE PTR ds:[esi]
  40ce7c:	pop    edx
  40ce7d:	and    DWORD PTR [ebx],ebp
  40ce7f:	dec    ecx
  40ce80:	adc    eax,0x96b381cc
  40ce85:	shr    BYTE PTR [edi+0x133c327],cl
  40ce8b:	mov    dh,0xad
  40ce8d:	push   ss
  40ce8e:	jmp    0x6a8a:0xaa1ab778
  40ce95:	jecxz  0x40cf12
  40ce97:	dec    edi
  40ce98:	fbstp  TBYTE PTR [ebx+0x78ae2986]
  40ce9f:	out    dx,al
  40cea0:	inc    esi
  40cea1:	out    dx,al
  40cea2:	push   ebp
  40cea3:	jg     0x40cf18
  40cea5:	inc    esi
  40cea6:	fdivr  st,st(3)
  40cea8:	add    ecx,DWORD PTR [esi]
  40ceaa:	add    al,0xe5
  40ceac:	dec    ebx
  40cead:	mov    eax,0x17d328b5
  40ceb2:	(bad)  
  40ceb3:	out    dx,eax
  40ceb4:	pushf  
  40ceb5:	jecxz  0x40cebc
  40ceb7:	xor    BYTE PTR [ecx],0x55
  40ceba:	repz and BYTE PTR [edx-0x72a770a],ah
  40cec1:	sahf   
  40cec2:	dec    edi
  40cec3:	jecxz  0x40cee9
  40cec5:	xor    al,0x17
  40cec7:	push   ebx
  40cec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cec9:	xchg   ebx,eax
  40ceca:	daa    
  40cecb:	dec    edx
  40cecc:	mov    ebp,0xbaf48a37
  40ced1:	aad    0x62
  40ced3:	jge    0x40cf1c
  40ced5:	les    edi,FWORD PTR [esi+0x3a]
  40ced8:	inc    ecx
  40ced9:	xchg   edx,eax
  40ceda:	inc    edi
  40cedb:	inc    edx
  40cedc:	scas   eax,DWORD PTR es:[edi]
  40cedd:	lahf   
  40cede:	inc    DWORD PTR [edi-0x7eb5fb8b]
  40cee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cee5:	mov    ch,0xa3
  40cee7:	mov    edi,0x38ab9593
  40ceec:	xor    eax,0x420afbff
  40cef1:	jb     0x40cebd
  40cef3:	xchg   edi,eax
  40cef4:	push   cs
  40cef5:	(bad)  
  40cef7:	pusha  
  40cef8:	jg     0x40ceaf
  40cefa:	sbb    dl,BYTE PTR [ecx+0x35]
  40cefd:	mov    ds:0x63cdd49,eax
  40cf02:	mov    dl,0x71
  40cf04:	or     ecx,DWORD PTR [edi-0x79]
  40cf07:	(bad)  
  40cf08:	xchg   edi,eax
  40cf09:	or     al,0xbb
  40cf0b:	les    eax,FWORD PTR [ebx+0x1666027a]
  40cf11:	jb     0xd53845e2
  40cf17:	push   eax
  40cf18:	std    
  40cf19:	xchg   edx,eax
  40cf1a:	mov    eax,0xa09ee38c
  40cf1f:	cwde   
  40cf20:	lods   eax,DWORD PTR ds:[esi]
  40cf21:	xor    BYTE PTR [ebx+0x324abee7],ch
  40cf27:	mov    bh,0x5c
  40cf29:	and    ebp,DWORD PTR [ebx+0x70cfcb45]
  40cf2f:	cs out dx,al
  40cf31:	addr16 dec edi
  40cf33:	in     al,0x34
  40cf35:	sub    eax,0xc858b892
  40cf3a:	mov    edi,0xc46abacc
  40cf3f:	(bad)  
  40cf40:	fcom   QWORD PTR [eax+0x5f]
  40cf43:	(bad)  
  40cf44:	cmp    eax,0x37c1d552
  40cf49:	and    esp,ebx
  40cf4b:	push   edi
  40cf4c:	int    0x6b
  40cf4e:	xor    bh,cl
  40cf50:	loopne 0x40cf66
  40cf52:	test   eax,0x6f0fc6ce
  40cf57:	mov    ebp,0xf87945e3
  40cf5c:	retf   0x820b
  40cf5f:	mov    dl,0x55
  40cf61:	mov    ebp,0x871f0faf
  40cf66:	sbb    bl,al
  40cf68:	pushf  
  40cf69:	fdivr  DWORD PTR ds:0x35ff0a74
  40cf6f:	icebp  
  40cf70:	repz iret 
  40cf72:	lock setae BYTE PTR [ebx]
  40cf76:	inc    esp
  40cf77:	sbb    bl,BYTE PTR [esi]
  40cf79:	repnz int3 
  40cf7b:	mov    es,WORD PTR [esi]
  40cf7d:	inc    ebx
  40cf7e:	inc    edi
  40cf7f:	pop    edx
  40cf80:	push   ebx
  40cf81:	mov    al,ds:0x34691e9a
  40cf86:	add    dl,BYTE PTR [esp+ebx*2]
  40cf89:	jns    0x40cfd1
  40cf8b:	inc    ebx
  40cf8c:	gs pushw 0x46b
  40cf91:	(bad)  
  40cf92:	das    
  40cf93:	aad    0xc9
  40cf95:	psubw  mm0,QWORD PTR [esi+0x6a]
  40cf99:	or     BYTE PTR [edi+ecx*2-0x7a],bh
  40cf9d:	daa    
  40cf9e:	add    esi,ebx
  40cfa0:	push   cs
  40cfa1:	rol    BYTE PTR ds:0x60a3f798,0x54
  40cfa8:	call   0x11fa0b11
  40cfad:	sbb    esi,DWORD PTR [eax-0x19]
  40cfb0:	daa    
  40cfb1:	adc    al,0x8
  40cfb3:	mov    esp,0xf2606626
  40cfb8:	or     esi,ecx
  40cfba:	pusha  
  40cfbb:	mov    ch,0x4e
  40cfbd:	cmp    DWORD PTR [ecx-0x32],eax
  40cfc0:	pop    esi
  40cfc1:	lods   al,BYTE PTR ds:[esi]
  40cfc2:	mov    ah,0x5e
  40cfc4:	mov    WORD PTR [edx+edx*1],?
  40cfc7:	aaa    
  40cfc8:	jmp    0x40cfa7
  40cfca:	and    DWORD PTR [esi-0x3569555b],eax
  40cfd0:	mov    eax,ds:0x35cac8b7
  40cfd5:	jle    0x40cfc8
  40cfd7:	dec    esp
  40cfd8:	jmp    0x6129e0ea
  40cfdd:	inc    esp
  40cfde:	dec    edx
  40cfdf:	test   BYTE PTR [ebx-0x30b6d5c2],ah
  40cfe5:	jb     0x40d053
  40cfe7:	je     0x40d039
  40cfe9:	cli    
  40cfea:	fwait
  40cfeb:	xor    cl,BYTE PTR [edi-0x32788191]
  40cff1:	add    esp,DWORD PTR [edi-0x73]
  40cff4:	out    dx,al
  40cff5:	cmp    BYTE PTR [ecx+edx*4],ch
  40cff8:	cmp    edi,DWORD PTR [ebx-0x76]
  40cffb:	dec    eax
  40cffc:	jmp    0x6db42e31
  40d001:	mov    edx,0x14cb702b
  40d006:	rol    ebx,0x48
  40d009:	jns    0x40d025
  40d00b:	push   es
  40d00c:	pusha  
  40d00d:	mov    gs,edi
  40d00f:	aad    0x98
  40d011:	pop    esp
  40d012:	aad    0x47
  40d014:	ds mov al,0xfc
  40d017:	push   esi
  40d018:	loope  0x40d008
  40d01a:	mov    al,ds:0x7889d6c7
  40d01f:	pop    eax
  40d020:	fisubr DWORD PTR [ebx+edi*2+0x9d871c7]
  40d027:	pop    edi
  40d028:	push   edx
  40d029:	sub    esp,DWORD PTR [ebx+0x27]
  40d02c:	lea    ebx,[edi+0x79ddd21d]
  40d032:	add    ebp,edx
  40d034:	adc    edi,DWORD PTR [ebx-0x64c40ce4]
  40d03a:	shl    dh,1
  40d03c:	add    dh,BYTE PTR [edi+ebp*2]
  40d03f:	in     eax,dx
  40d040:	or     al,0x82
  40d042:	test   ch,ah
  40d044:	push   ds
  40d045:	adc    eax,0x738f6707
  40d04a:	loop   0x40d089
  40d04c:	out    dx,al
  40d04d:	xchg   edx,eax
  40d04e:	xor    al,0x44
  40d050:	cmp    ebp,ebx
  40d052:	xchg   ebx,eax
  40d053:	data16 mov al,0xbe
  40d056:	inc    ebx
  40d057:	cmc    
  40d058:	cmc    
  40d059:	outs   dx,BYTE PTR ds:[esi]
  40d05a:	and    DWORD PTR [esi],0x390aa3ee
  40d060:	ss mov ecx,0xfa0c1895
  40d066:	dec    ecx
  40d067:	xlat   BYTE PTR ds:[ebx]
  40d068:	xor    al,0xd3
  40d06a:	mov    ebp,0x685becc8
  40d06f:	mov    al,ds:0x50970dff
  40d074:	xchg   edi,eax
  40d075:	stc    
  40d076:	ror    BYTE PTR [esi],cl
  40d078:	pop    ebx
  40d079:	fstp   DWORD PTR [eax-0x746d812]
  40d07f:	in     eax,0x54
  40d081:	sub    al,0xe1
  40d083:	sahf   
  40d084:	cmp    al,0x8b
  40d086:	lods   eax,DWORD PTR ds:[esi]
  40d087:	mov    ebx,0xb39b8dda
  40d08c:	sbb    ebp,DWORD PTR [edx]
  40d08e:	sub    esp,DWORD PTR [eax-0x207b4a6b]
  40d094:	ins    DWORD PTR es:[edi],dx
  40d095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d096:	sub    eax,0x31eecd8
  40d09b:	leave  
  40d09c:	jecxz  0x40d0c0
  40d09e:	hlt    
  40d09f:	nop
  40d0a0:	pusha  
  40d0a1:	test   eax,0xd95b0c34
  40d0a6:	adc    bh,BYTE PTR [edx+0x542c2339]
  40d0ac:	jmp    0x40d046
  40d0ae:	cmp    BYTE PTR [ebp-0x62a0385f],ch
  40d0b4:	jmp    FWORD PTR [esi-0x19de42a3]
  40d0ba:	mov    ebx,0xba777c30
  40d0bf:	xchg   DWORD PTR [edi+0x61f48a6e],ebx
  40d0c5:	aas    
  40d0c6:	push   eax
  40d0c7:	and    esp,DWORD PTR [ebp-0x62fd3f10]
  40d0cd:	sub    DWORD PTR [edx+0x61045e1d],esi
  40d0d3:	sar    BYTE PTR [esi-0x5146d16e],1
  40d0d9:	fld    QWORD PTR [ebx+edi*2+0x10]
  40d0dd:	add    DWORD PTR [edx+0xd],ecx
  40d0e0:	mov    ecx,0xe117537d
  40d0e5:	xchg   edi,eax
  40d0e6:	mov    esi,0xab24eab1
  40d0eb:	and    eax,DWORD PTR [esi]
  40d0ed:	enter  0xc103,0xfd
  40d0f1:	js     0x40d09b
  40d0f3:	xor    eax,0xc10db0b8
  40d0f8:	push   esp
  40d0f9:	fwait
  40d0fa:	xor    BYTE PTR [esi],bh
  40d0fc:	cld    
  40d0fd:	mov    ds:0xec5cb332,al
  40d102:	or     ah,BYTE PTR [ebx+0x7e]
  40d105:	cdq    
  40d106:	pop    esi
  40d107:	or     dh,dl
  40d109:	or     BYTE PTR [ebx+0x74a4bfaa],cl
  40d10f:	in     eax,dx
  40d110:	dec    ebx
  40d111:	(bad)
  40d114:	(bad)  
  40d115:	ins    DWORD PTR es:[edi],dx
  40d116:	mov    esp,0xb7ecc7da
  40d11b:	call   0x7c6d:0x3b2c7476
  40d122:	imul   edx,esp,0x24ace004
  40d128:	dec    edx
  40d129:	jge    0x40d14a
  40d12b:	sar    BYTE PTR [esi],cl
  40d12d:	dec    esp
  40d12e:	(bad)  
  40d12f:	jmp    0xf216:0x3c5640ac
  40d136:	mov    bh,0x2f
  40d138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d139:	lock inc edx
  40d13b:	(bad)  
  40d13c:	mov    cl,0x28
  40d13e:	mul    BYTE PTR [eax]
  40d140:	mov    ebp,0xadba0743
  40d145:	sub    DWORD PTR [edi-0x27],0xd
  40d149:	cwde   
  40d14a:	sbb    DWORD PTR [edx+0x50],eax
  40d14d:	xchg   esp,eax
  40d14e:	xlat   BYTE PTR ds:[ebx]
  40d14f:	idiv   BYTE PTR ds:0x41b38bf9
  40d155:	mov    bh,0x58
  40d157:	jo     0x40d1d6
  40d159:	sub    eax,0xeefd2e4b
  40d15e:	das    
  40d15f:	stos   BYTE PTR es:[edi],al
  40d160:	sbb    BYTE PTR [ecx-0x366268ac],bl
  40d166:	jge    0x40d1a3
  40d168:	mov    cl,dl
  40d16a:	sahf   
  40d16b:	and    al,0x1b
  40d16d:	lods   eax,DWORD PTR ds:[esi]
  40d16e:	adc    eax,0xc6b94058
  40d173:	fdivr  DWORD PTR [eax-0x3b6b8def]
  40d179:	xor    BYTE PTR [esi],0x51
  40d17c:	push   ecx
  40d17d:	inc    esp
  40d17e:	cdq    
  40d17f:	add    DWORD PTR [ecx],0x54060d6c
  40d185:	sahf   
  40d186:	add    al,0x21
  40d188:	(bad)  
  40d189:	jge    0x40d197
  40d18b:	xchg   ebx,eax
  40d18c:	jecxz  0x40d1a0
  40d18e:	xchg   ebx,eax
  40d18f:	mov    bl,BYTE PTR [ebp-0x64e2b2c4]
  40d195:	and    DWORD PTR [eax+esi*2],edi
  40d198:	sub    cl,ah
  40d19a:	mov    esi,0x6ce24527
  40d19f:	jnp    0x40d209
  40d1a1:	jns    0x40d123
  40d1a3:	inc    esp
  40d1a4:	(bad)  
  40d1a5:	mov    dh,0x58
  40d1a7:	sub    BYTE PTR [esi+edi*2-0x57],cl
  40d1ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1ac:	rcl    BYTE PTR [edx-0x1e9b2f8f],1
  40d1b2:	mov    bl,0x35
  40d1b4:	popf   
  40d1b5:	inc    ebp
  40d1b6:	push   0xcc4ad85
  40d1bb:	cdq    
  40d1bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1bd:	jmp    0x40d21b
  40d1bf:	jae    0x40d171
  40d1c1:	mov    ecx,0x1e5624b6
  40d1c6:	lods   al,BYTE PTR ds:[esi]
  40d1c7:	mov    bh,0x12
  40d1c9:	cmp    DWORD PTR ds:0x7f5de3df,esp
  40d1cf:	(bad)  
  40d1d0:	cmc    
  40d1d1:	sub    edi,eax
  40d1d3:	mov    WORD PTR ds:0x9f0fde7,cs
  40d1d9:	jp     0x40d250
  40d1db:	sbb    ebp,ebx
  40d1dd:	(bad)  
  40d1df:	aas    
  40d1e0:	sbb    cl,BYTE PTR [ecx+edx*4+0x79]
  40d1e4:	mov    eax,0x9cc951c9
  40d1ea:	pop    ecx
  40d1eb:	cwde   
  40d1ec:	pop    ebx
  40d1ed:	in     al,dx
  40d1ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1ef:	push   edx
  40d1f0:	div    ebp
  40d1f2:	sub    esi,eax
  40d1f4:	imul   ecx,DWORD PTR [eax+eiz*2+0x76],0xffffffe3
  40d1f9:	or     BYTE PTR [edx-0xc05b80b],bl
  40d1ff:	dec    edi
  40d200:	sub    eax,0xd2f59021
  40d205:	(bad)  
  40d206:	mov    edi,0x20363df6
  40d20b:	mov    ch,0xdf
  40d20d:	loop   0x40d18f
  40d20f:	lock lods al,BYTE PTR ds:[esi]
  40d211:	in     eax,dx
  40d212:	(bad)  
  40d214:	(bad)  
  40d215:	mov    ch,0xfc
  40d217:	icebp  
  40d218:	jle    0x40d19e
  40d21a:	inc    esp
  40d21b:	shl    cl,0xef
  40d21e:	out    0x5c,eax
  40d220:	push   edx
  40d221:	and    esp,ebp
  40d223:	inc    ebp
  40d224:	jno    0x40d1a9
  40d226:	and    DWORD PTR [eax],ebx
  40d228:	stc    
  40d229:	push   ss
  40d22a:	inc    esp
  40d22b:	dec    edx
  40d22c:	into   
  40d22d:	jbe    0x40d243
  40d22f:	cli    
  40d230:	xchg   edx,eax
  40d231:	sbb    al,0x21
  40d233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d234:	or     esi,ebx
  40d236:	dec    ecx
  40d237:	inc    ebx
  40d238:	adc    edi,edi
  40d23a:	out    dx,eax
  40d23b:	adc    al,0x3a
  40d23d:	mov    eax,0xeaf76b73
  40d242:	mov    BYTE PTR ds:0xad358727,ch
  40d248:	dec    ebx
  40d249:	adc    DWORD PTR [eax-0x29],0x8fef9a9e
  40d250:	sbb    BYTE PTR [ecx+eax*2-0x23],0xad
  40d255:	mov    ch,0xfc
  40d257:	jno    0x40d211
  40d259:	sub    edx,0x6b206917
  40d25f:	mov    al,0xa2
  40d261:	(bad)  
  40d262:	jmp    0xe345ac66
  40d267:	outs   dx,DWORD PTR fs:[esi]
  40d269:	jp     0x40d2be
  40d26b:	cmp    BYTE PTR [ebx],al
  40d26d:	(bad)  
  40d26e:	cmp    ecx,eax
  40d270:	je     0x40d2ae
  40d276:	jmp    0x40d29f
  40d27b:	mov    eax,DWORD PTR [ebp-0x4]
  40d27e:	mov    ecx,DWORD PTR [ebp-0x8]
  40d281:	xor    eax,esi
  40d283:	add    eax,edi
  40d285:	cmp    ecx,eax
  40d287:	mov    eax,DWORD PTR [ebp-0x4]
  40d28a:	je     0x40d2e9
  40d290:	mov    ecx,DWORD PTR [ebp-0x30]
  40d293:	xor    eax,esi
  40d295:	add    eax,edi
  40d297:	cmp    ecx,eax
  40d299:	je     0x40f6a6
  40d29f:	lea    eax,[ebp-0x8]
  40d2a2:	push   eax
  40d2a3:	push   DWORD PTR [ebp-0x28]
  40d2a6:	push   DWORD PTR [ebp+0xc]
  40d2a9:	call   0x411c5a
  40d2ae:	mov    eax,DWORD PTR [ebp-0x4]
  40d2b1:	mov    ecx,DWORD PTR [ebp-0x8]
  40d2b4:	xor    eax,esi
  40d2b6:	add    eax,edi
  40d2b8:	cmp    ecx,eax
  40d2ba:	je     0x40d2d5
  40d2c0:	mov    eax,DWORD PTR [ebp-0x34]
  40d2c3:	movzx  eax,WORD PTR [eax+ebx*2]
  40d2c7:	mov    ecx,DWORD PTR [ebp-0x14]
  40d2ca:	mov    eax,DWORD PTR [ecx+eax*4]
  40d2cd:	mov    DWORD PTR [ebp-0x38],eax
  40d2d0:	jmp    0x40d27b
  40d2d5:	mov    eax,DWORD PTR [ebp-0xc]
  40d2d8:	xor    eax,esi
  40d2da:	lea    ebx,[ebx+eax*1+0x3272f3]
  40d2e1:	jmp    0x4087e2
  40d2e6:	mov    eax,DWORD PTR [ebp-0x4]
  40d2e9:	xor    eax,esi
  40d2eb:	jmp    0x40f69f
  40d2f0:	add    BYTE PTR [esi],cl
  40d2f2:	mov    ch,BYTE PTR [esp+eax*4+0x5e8600a0]
  40d2f9:	hlt    
  40d2fa:	aas    
  40d2fb:	push   eax
  40d2fc:	mov    edi,0x958780c5
  40d301:	rol    BYTE PTR [ebx-0x7ca3177d],cl
  40d307:	xor    ecx,0x27
  40d30a:	lea    edi,[ebp-0x8]
  40d30d:	fidivr WORD PTR [ebx-0x78]
  40d310:	mov    ecx,0x5e911e48
  40d315:	xchg   esi,eax
  40d316:	xchg   ebx,eax
  40d317:	bound  ebx,QWORD PTR [ebx]
  40d319:	hlt    
  40d31a:	xchg   ebp,eax
  40d31b:	cwde   
  40d31c:	aas    
  40d31d:	fs popa 
  40d31f:	jmp    0x40d2f5
  40d321:	mov    ?,WORD PTR [ebp+0x4a218116]
  40d327:	inc    ebx
  40d328:	lock mov fs,WORD PTR [ecx-0x454d1818]
  40d32f:	bound  ebx,QWORD PTR [ebp+0xe]
  40d332:	jbe    0x40d2fc
  40d334:	addr16 xchg ebx,eax
  40d336:	or     al,0x1d
  40d338:	xor    DWORD PTR [esi],esp
  40d33a:	arpl   WORD PTR [ecx+0x30df24a4],bp
  40d340:	xor    dh,ah
  40d342:	dec    ebx
  40d343:	mov    al,0xa
  40d345:	mov    cl,BYTE PTR [ebx-0x71]
  40d348:	mov    ds:0x76640251,eax
  40d34d:	cmp    DWORD PTR [ecx+ecx*1-0x3f],edx
  40d351:	int    0xe
  40d353:	xchg   ecx,eax
  40d354:	mov    WORD PTR [edx+edx*8+0x54f2b0b7],ss
  40d35b:	mov    ds:0x2e75d9db,eax
  40d360:	cmc    
  40d361:	fst    DWORD PTR cs:[ebx+edx*1]
  40d365:	mov    cl,0xb
  40d367:	pushf  
  40d368:	inc    ebp
  40d369:	sbb    ecx,DWORD PTR [ebx]
  40d36b:	jae    0x40d352
  40d36d:	es jne 0x40d3ef
  40d370:	jge    0x40d342
  40d372:	(bad)  
  40d373:	fs cmp al,0xaa
  40d376:	jecxz  0x40d391
  40d378:	imul   ecx,DWORD PTR [ebp+0x57],0x3d626193
  40d37f:	das    
  40d380:	cmp    DWORD PTR [ecx+ecx*8],ecx
  40d383:	dec    ecx
  40d384:	sbb    eax,DWORD PTR [edx-0x1b]
  40d387:	push   DWORD PTR [eax-0x26982600]
  40d38d:	xchg   ebx,eax
  40d38e:	xor    edi,esp
  40d390:	out    0x91,al
  40d392:	add    BYTE PTR [edi-0x58],cl
  40d395:	jns    0x40d404
  40d397:	aam    0x23
  40d399:	mov    eax,0xf7c0cbbb
  40d39e:	sbb    DWORD PTR [eax-0x38],eax
  40d3a1:	dec    esp
  40d3a2:	mov    dh,0xf8
  40d3a4:	add    al,0xe9
  40d3a6:	ret    0x9424
  40d3a9:	push   ecx
  40d3aa:	mov    cl,0x2c
  40d3ac:	mov    ch,0x17
  40d3ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3af:	cmp    BYTE PTR [ebx],0xda
  40d3b2:	fadd   DWORD PTR [esi]
  40d3b4:	inc    ebp
  40d3b5:	dec    ebx
  40d3b6:	inc    edi
  40d3b7:	rol    DWORD PTR [esi-0x24],0xd3
  40d3bb:	aad    0xec
  40d3bd:	pop    edi
  40d3be:	lods   al,BYTE PTR ds:[esi]
  40d3bf:	mov    al,0xcb
  40d3c1:	pop    ss
  40d3c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3c3:	xor    bl,BYTE PTR [ecx-0x3]
  40d3c6:	inc    edi
  40d3c7:	inc    esp
  40d3c8:	pop    ecx
  40d3c9:	xor    eax,esp
  40d3cb:	dec    edi
  40d3cc:	call   0x376a:0xaaf9426f
  40d3d3:	lds    ebp,FWORD PTR [ecx+0x1fe5c3e9]
  40d3d9:	lods   al,BYTE PTR ds:[esi]
  40d3da:	pop    edx
  40d3db:	imul   esi,DWORD PTR [esi],0xffffffd4
  40d3de:	xchg   edi,eax
  40d3df:	pop    ds
  40d3e0:	push   cs
  40d3e1:	adc    ebp,ecx
  40d3e3:	fwait
  40d3e4:	mov    ebp,0x6947e0d
  40d3e9:	inc    esi
  40d3ea:	das    
  40d3eb:	inc    eax
  40d3ec:	(bad)  
  40d3ed:	or     edi,DWORD PTR [edi+0x5d2126d9]
  40d3f3:	mov    bh,BYTE PTR [edx+0x67bbd3cd]
  40d3f9:	fdiv   QWORD PTR [ebx-0x47]
  40d3fc:	psubq  mm2,mm7
  40d3ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d400:	les    ebp,FWORD PTR [edx+0x531df2e4]
  40d406:	or     BYTE PTR [esi-0x2e],0x21
  40d40a:	out    0x8e,eax
  40d40c:	sub    dh,BYTE PTR ds:0x288e7127
  40d412:	sbb    dh,BYTE PTR [ebp-0x40b3f87]
  40d418:	aaa    
  40d419:	repz pop eax
  40d41b:	cmp    ch,BYTE PTR [ebp-0x53677232]
  40d421:	dec    ecx
  40d422:	hlt    
  40d423:	xor    BYTE PTR [edi],0x91
  40d426:	push   esi
  40d427:	and    al,0xbc
  40d429:	popa   
  40d42a:	pusha  
  40d42b:	lods   al,BYTE PTR ds:[esi]
  40d42c:	sub    DWORD PTR [esi+0x5],ebx
  40d42f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d430:	dec    ebp
  40d431:	jmp    0xb54:0xead76b3f
  40d438:	fcmovb st,st(4)
  40d43a:	and    eax,0x11544839
  40d43f:	adc    dh,BYTE PTR [ebx-0x16f34d19]
  40d445:	rol    BYTE PTR [ebx+0x16],cl
  40d448:	pop    ebp
  40d449:	mov    edx,0x774db3fe
  40d44e:	fldcw  WORD PTR [edi]
  40d450:	lock inc eax
  40d452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d453:	xchg   esi,eax
  40d455:	adc    al,0x25
  40d457:	pop    ss
  40d458:	push   eax
  40d459:	inc    edx
  40d45a:	mov    ah,0xec
  40d45c:	retf   
  40d45d:	xchg   DWORD PTR [edx-0x79],edi
  40d460:	cmp    eax,edi
  40d462:	xor    BYTE PTR [ebx-0x644aa3d0],dl
  40d468:	std    
  40d469:	fistp  QWORD PTR [ebx]
  40d46b:	adc    al,0x4e
  40d46d:	hlt    
  40d46e:	std    
  40d46f:	loope  0x40d4db
  40d471:	(bad)  
  40d472:	push   edx
  40d473:	xor    BYTE PTR [edi+0x1ab81742],bh
  40d479:	ficomp DWORD PTR [ebx-0x27314bd6]
  40d47f:	leave  
  40d480:	lahf   
  40d481:	stos   BYTE PTR es:[edi],al
  40d482:	in     al,dx
  40d483:	sub    eax,0xc4fd7a31
  40d488:	sub    esp,DWORD PTR [edi-0x3f]
  40d48b:	stos   BYTE PTR es:[edi],al
  40d48c:	sahf   
  40d48d:	data16 test bh,ah
  40d490:	lahf   
  40d491:	push   ebx
  40d492:	repz popa 
  40d494:	mov    WORD PTR [ebx-0x59],fs
  40d497:	sbb    BYTE PTR [ebp+0x55d596ec],ch
  40d49d:	xlat   BYTE PTR ds:[ebx]
  40d49e:	jb     0x40d4f3
  40d4a0:	dec    esi
  40d4a1:	shl    BYTE PTR ss:[ecx],1
  40d4a4:	cmp    ecx,DWORD PTR [esi-0x71]
  40d4a7:	or     eax,0x3174a2f2
  40d4ac:	inc    edx
  40d4ad:	stc    
  40d4ae:	adc    edx,eax
  40d4b0:	pop    edi
  40d4b1:	iret   
  40d4b2:	adc    edx,esi
  40d4b4:	and    ah,BYTE PTR [esi+0x7a]
  40d4b7:	xchg   ebx,eax
  40d4b8:	xchg   ebx,eax
  40d4b9:	test   esp,esi
  40d4bb:	pop    ecx
  40d4bc:	mov    dh,0x84
  40d4be:	xor    cl,0xc6
  40d4c1:	aad    0x6e
  40d4c3:	out    0x36,eax
  40d4c5:	pop    ds
  40d4c6:	jno    0x40d50b
  40d4c8:	stc    
  40d4c9:	mov    dl,0xf8
  40d4cb:	xchg   BYTE PTR [edi+0x73a43d0],dl
  40d4d1:	add    DWORD PTR [esi+0x52],0x1d
  40d4d5:	loopne 0x40d549
  40d4d7:	cmp    BYTE PTR [esi+0x18],cl
  40d4da:	push   0xffffffbb
  40d4dc:	retf   
  40d4dd:	out    dx,eax
  40d4de:	pop    esi
  40d4df:	ret    
  40d4e0:	xchg   edi,eax
  40d4e1:	stos   BYTE PTR es:[edi],al
  40d4e2:	dec    BYTE PTR [eax+0xbb709f]
  40d4e8:	xchg   esi,eax
  40d4e9:	sub    eax,0x932fd010
  40d4ee:	or     BYTE PTR [ebx],bl
  40d4f0:	ins    DWORD PTR es:[edi],dx
  40d4f1:	ja     0x40d4a8
  40d4f3:	push   esi
  40d4f4:	test   al,0x9b
  40d4f7:	fidiv  DWORD PTR [ebx+0x1f471d1a]
  40d4fd:	mov    bl,0x8e
  40d4ff:	dec    eax
  40d500:	push   ss
  40d501:	pop    edi
  40d502:	je     0x40d49a
  40d504:	hlt    
  40d505:	xchg   BYTE PTR cs:[ecx],ch
  40d508:	xchg   ebx,eax
  40d509:	call   0x853bcaf3
  40d50e:	out    0x26,eax
  40d510:	adc    ebp,DWORD PTR [edi-0x45]
  40d513:	(bad)  
  40d514:	xor    edi,edi
  40d516:	hlt    
  40d517:	aam    0x89
  40d519:	jg     0x40d55c
  40d51b:	inc    esp
  40d51c:	loop   0x40d572
  40d51e:	mov    ecx,0xb5c9c578
  40d523:	adc    BYTE PTR [eax],dh
  40d525:	jp     0x40d4d7
  40d527:	mov    ds:0x3f4c05e9,al
  40d52c:	pop    ecx
  40d52d:	push   ebp
  40d52e:	in     al,0x9d
  40d530:	xor    ebx,eax
  40d532:	in     eax,0xa6
  40d534:	mov    eax,0x88e214d2
  40d539:	xchg   cx,ax
  40d53b:	enter  0xf589,0x85
  40d53f:	jae    0x40d525
  40d541:	jb     0x40d4fd
  40d543:	pop    ds
  40d544:	push   ss
  40d545:	jl     0x40d4d7
  40d547:	setns  BYTE PTR [ebx+0x695731e2]
  40d54e:	pop    edi
  40d54f:	sub    eax,0xedb0af8f
  40d554:	mov    esp,0x96d3776c
  40d559:	in     al,dx
  40d55a:	push   esp
  40d55b:	loope  0x40d5b2
  40d55d:	inc    ebx
  40d55e:	int3   
  40d55f:	push   ss
  40d560:	mov    ecx,0x13ab2627
  40d565:	jno    0x40d526
  40d567:	mov    bh,0x89
  40d569:	mov    ah,0x52
  40d56b:	fst    st(4)
  40d56d:	cmp    edx,esp
  40d56f:	xchg   DWORD PTR [ebx],edx
  40d571:	jmp    0xf8c:0x2dc019b4
  40d578:	add    dl,BYTE PTR [eax-0x16eee84a]
  40d57e:	sbb    bl,al
  40d580:	or     ebx,DWORD PTR [edx-0x64fdbd5e]
  40d586:	cwde   
  40d587:	sub    al,0xa9
  40d589:	pop    es
  40d58a:	mov    ebp,0x870e880b
  40d58f:	iret   
  40d590:	in     eax,0xf
  40d592:	mov    al,0x95
  40d594:	cmp    eax,0x33be368e
  40d599:	mov    ah,0xaa
  40d59b:	pxor   mm4,QWORD PTR [ecx-0x5c]
  40d59f:	mov    bh,0x11
  40d5a1:	jecxz  0x40d617
  40d5a3:	jg     0x40d603
  40d5a5:	xchg   esi,eax
  40d5a6:	pop    ebx
  40d5a7:	les    esi,FWORD PTR [ecx+0x2]
  40d5aa:	dec    esp
  40d5ab:	nop
  40d5ac:	adc    BYTE PTR [eax+edx*2],0x24
  40d5b0:	pushf  
  40d5b1:	popa   
  40d5b2:	rcl    esp,1
  40d5b4:	pop    ecx
  40d5b5:	rcr    DWORD PTR [edx],0x75
  40d5b8:	mov    DWORD PTR [esi],eax
  40d5ba:	data16 and bl,BYTE PTR [di]
  40d5be:	pop    ecx
  40d5bf:	in     eax,dx
  40d5c0:	test   eax,0x3369b783
  40d5c5:	dec    edx
  40d5c6:	sbb    ecx,ebx
  40d5c8:	xchg   edx,eax
  40d5c9:	xchg   ebp,eax
  40d5ca:	pop    ecx
  40d5cb:	sti    
  40d5cc:	or     esp,DWORD PTR [ebp+0x263f7d6d]
  40d5d2:	xchg   DWORD PTR [ebx],ecx
  40d5d4:	les    esp,FWORD PTR [ecx-0x5299635c]
  40d5da:	sar    BYTE PTR [ebx+0x1226307],0x86
  40d5e1:	add    eax,0xc9b96171
  40d5e6:	ror    BYTE PTR [ecx-0x4c4ed4ad],1
  40d5ec:	xchg   esi,eax
  40d5ed:	dec    edi
  40d5ee:	xchg   edi,eax
  40d5ef:	mov    ah,0xbd
  40d5f1:	retf   
  40d5f2:	add    al,0xa0
  40d5f4:	cmp    esi,ebx
  40d5f6:	add    DWORD PTR [edi],ecx
  40d5f8:	fdivr  QWORD PTR [edx-0x4c5f4b80]
  40d5fe:	pop    esp
  40d5ff:	mov    eax,0xe8c299f3
  40d604:	not    ebp
  40d606:	jle    0x40d5cc
  40d608:	out    dx,al
  40d609:	jmp    0xe6dda5e7
  40d60e:	pop    ss
  40d60f:	pusha  
  40d610:	std    
  40d611:	xchg   ecx,eax
  40d612:	js     0x40d650
  40d614:	mov    bl,dh
  40d616:	push   esi
  40d617:	rcl    DWORD PTR [ebx+0x705428a6],cl
  40d61d:	pop    es
  40d61e:	xchg   edi,eax
  40d61f:	mov    eax,0x8832fdb
  40d624:	int    0x33
  40d626:	sub    al,0xe1
  40d628:	xchg   dh,ah
  40d62a:	in     al,0xab
  40d62c:	add    BYTE PTR [ebx],ah
  40d62e:	push   esp
  40d62f:	adc    eax,0x2495436f
  40d634:	pop    ebx
  40d635:	xchg   ebx,eax
  40d636:	ret    0x111c
  40d639:	xor    al,0x41
  40d63b:	jne    0x40d655
  40d63d:	sti    
  40d63e:	xor    bl,al
  40d640:	in     al,dx
  40d641:	call   0x4803:0x480bd082
  40d648:	adc    al,0x9b
  40d64a:	add    eax,0xc25f028e
  40d64f:	sbb    bh,BYTE PTR ds:[ebp-0x63]
  40d653:	mov    ch,0x9c
  40d655:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d656:	lods   al,BYTE PTR ds:[esi]
  40d657:	cli    
  40d658:	call   0x555a:0x830cf041
  40d65f:	mov    esi,ss
  40d661:	popa   
  40d662:	pusha  
  40d663:	(bad)  
  40d664:	jb     0x40d686
  40d666:	jmp    0xbe03aa5b
  40d66b:	sbb    bh,BYTE PTR [esi]
  40d66d:	mov    edx,0xe58b7498
  40d672:	and    edx,DWORD PTR [esi+ebp*4+0x17]
  40d676:	dec    edx
  40d677:	or     BYTE PTR [edx],ah
  40d679:	es dec edx
  40d67b:	mov    WORD PTR [edx+0xf],ds
  40d67e:	fisttp WORD PTR [edi-0x66]
  40d681:	iret   
  40d682:	mov    ah,0x8d
  40d684:	(bad)  
  40d685:	(bad)  
  40d686:	repz test eax,0xf1084be0
  40d68c:	shr    BYTE PTR [esi+ebp*2-0x68de7c25],1
  40d693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d694:	les    eax,FWORD PTR [ebx-0x27b4da03]
  40d69a:	xchg   DWORD PTR [ebp+0x3b],eax
  40d69d:	push   es
  40d69e:	xchg   esp,eax
  40d69f:	int    0x41
  40d6a1:	iret   
  40d6a2:	stos   DWORD PTR es:[edi],eax
  40d6a3:	or     al,0xb
  40d6a5:	cld    
  40d6a6:	jmp    0x86eb3a1b
  40d6ab:	sub    eax,0xef8cd37d
  40d6b0:	inc    ebp
  40d6b1:	push   0x5b00de5b
  40d6b6:	add    BYTE PTR [esi+eax*1],bl
  40d6b9:	dec    ecx
  40d6ba:	cmp    eax,0x66935a0d
  40d6bf:	and    al,0x33
  40d6c1:	into   
  40d6c2:	xor    eax,0xb9793a71
  40d6c7:	sbb    BYTE PTR [edx],0x67
  40d6ca:	in     eax,dx
  40d6cb:	fcmove st,st(2)
  40d6cd:	pop    esi
  40d6ce:	xor    eax,0xea77d2ea
  40d6d3:	sbb    al,0x97
  40d6d5:	int3   
  40d6d6:	adc    eax,0x17c507a4
  40d6db:	dec    ecx
  40d6dc:	add    bh,BYTE PTR [eax-0x6257c9ba]
  40d6e2:	fiadd  WORD PTR ds:[esi+0x2f]
  40d6e6:	inc    edi
  40d6e7:	test   bl,al
  40d6e9:	retf   0x4d3c
  40d6ec:	mov    al,0x4
  40d6ee:	dec    ecx
  40d6ef:	hlt    
  40d6f0:	inc    ebp
  40d6f1:	xchg   ebp,eax
  40d6f2:	lea    edx,[edx-0x394887c9]
  40d6f8:	inc    esp
  40d6f9:	in     al,dx
  40d6fa:	xor    bl,BYTE PTR [edx+0x32430870]
  40d700:	ja     0x40d70a
  40d702:	fmul   DWORD PTR ds:0x6f895c46
  40d708:	into   
  40d709:	cwde   
  40d70a:	stos   BYTE PTR es:[edi],al
  40d70b:	xlat   BYTE PTR ds:[ebx]
  40d70c:	xchg   ebx,eax
  40d70d:	mov    eax,0x627c59be
  40d712:	xor    cl,0xb0
  40d715:	rcr    BYTE PTR [esi+0x73],0xd9
  40d719:	enter  0xf970,0xbf
  40d71d:	sub    edi,ebp
  40d71f:	xor    eax,DWORD PTR ds:0x1da264d4
  40d725:	aad    0x6c
  40d727:	sbb    eax,0xceae6b25
  40d72c:	outs   dx,DWORD PTR ds:[esi]
  40d72d:	retf   
  40d72e:	pop    edi
  40d72f:	fs adc eax,0x35f1aa7a
  40d735:	outs   dx,BYTE PTR ds:[esi]
  40d736:	mov    dh,bl
  40d738:	jo     0x40d706
  40d73a:	xchg   ebp,eax
  40d73b:	push   es
  40d73c:	daa    
  40d73d:	sti    
  40d73e:	cmp    al,0x90
  40d740:	jge    0x40d713
  40d742:	dec    ebx
  40d743:	push   cs
  40d744:	out    dx,eax
  40d745:	fist   WORD PTR ds:0xb2090dc5
  40d74b:	int    0x8c
  40d74d:	gs (bad) 
  40d750:	ins    DWORD PTR es:[edi],dx
  40d751:	(bad)  
  40d752:	pop    esp
  40d753:	mov    esp,0xb2dd3d02
  40d758:	ret    
  40d759:	mov    ds:0x480ff293,al
  40d75e:	fsub   DWORD PTR ds:0xb0b6d8d7
  40d764:	mov    esp,0x9b7f655f
  40d769:	cwde   
  40d76a:	cld    
  40d76b:	sub    esi,ebp
  40d76d:	jmp    eax
  40d76f:	test   al,0xcd
  40d771:	sbb    dl,al
  40d773:	mov    dh,0x1
  40d775:	xchg   ebp,eax
  40d776:	sbb    DWORD PTR [esi],ecx
  40d778:	les    esi,FWORD PTR [edx]
  40d77a:	adc    bh,BYTE PTR [eax-0x43]
  40d77d:	sahf   
  40d77e:	(bad)  
  40d77f:	in     al,0x7e
  40d781:	fisttp DWORD PTR [edi]
  40d783:	mov    WORD PTR [esi+0x63],?
  40d786:	xor    edx,DWORD PTR [edx]
  40d788:	int    0x3d
  40d78a:	ins    BYTE PTR es:[edi],dx
  40d78b:	sub    eax,0xce11e4b4
  40d790:	push   eax
  40d791:	in     al,0xa5
  40d793:	(bad)  
  40d794:	fistp  WORD PTR [edi-0x5c]
  40d797:	outs   dx,BYTE PTR ds:[esi]
  40d798:	sahf   
  40d799:	mov    dh,0x7e
  40d79b:	scas   eax,DWORD PTR es:[edi]
  40d79c:	inc    ebx
  40d79d:	sub    eax,0x2fdea3bc
  40d7a2:	mov    al,ds:0x78fcc7c3
  40d7a7:	retf   
  40d7a8:	xchg   ebp,eax
  40d7a9:	sub    BYTE PTR [eax+0x403711fd],cl
  40d7af:	pop    ss
  40d7b0:	inc    esi
  40d7b1:	fdivr  st(7),st
  40d7b3:	sbb    BYTE PTR [ebx],dl
  40d7b5:	std    
  40d7b6:	pop    esp
  40d7b7:	mov    ebp,0x4555c50d
  40d7bc:	jecxz  0x40d81a
  40d7be:	out    dx,al
  40d7bf:	jno    0x40d801
  40d7c1:	into   
  40d7c2:	xchg   edx,eax
  40d7c3:	mov    dh,0x18
  40d7c5:	or     al,0x58
  40d7c7:	outs   dx,BYTE PTR ds:[esi]
  40d7c8:	outs   dx,DWORD PTR ds:[esi]
  40d7c9:	lods   al,BYTE PTR ds:[esi]
  40d7ca:	js     0x40d81f
  40d7cc:	add    DWORD PTR [edx-0x3b5f08b6],esi
  40d7d2:	jno    0x40d7f9
  40d7d4:	into   
  40d7d5:	neg    DWORD PTR [esi-0x320e11ca]
  40d7db:	cli    
  40d7dc:	loopne 0x40d7cf
  40d7de:	xor    eax,0xdf13a542
  40d7e3:	sub    BYTE PTR [esi+0x7e],ah
  40d7e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7e7:	push   es
  40d7e8:	bswap  esp
  40d7ea:	inc    edx
  40d7eb:	stos   BYTE PTR es:[edi],al
  40d7ec:	xchg   edx,eax
  40d7ed:	sub    ecx,DWORD PTR [eax+0x79]
  40d7f0:	mov    DWORD PTR [ebx],edx
  40d7f2:	scas   al,BYTE PTR es:[edi]
  40d7f3:	sbb    BYTE PTR [ebx+eiz*8],ch
  40d7f6:	arpl   WORD PTR [ecx],ax
  40d7f8:	stos   BYTE PTR es:[edi],al
  40d7f9:	aaa    
  40d7fa:	pusha  
  40d7fb:	je     0x40d7f8
  40d7fd:	add    DWORD PTR [ebx+0x714d2d2a],ebp
  40d803:	mov    eax,0xe1682ffd
  40d808:	mov    DWORD PTR [edi-0x4cb3cc0],0x4c72fff0
  40d812:	fidivr DWORD PTR [edx-0x18]
  40d815:	(bad)  
  40d816:	pop    ss
  40d817:	jmp    0x40d802
  40d819:	out    dx,eax
  40d81a:	sbb    BYTE PTR [ecx-0x6c],dl
  40d81d:	in     eax,dx
  40d81e:	cli    
  40d81f:	je     0x40d89b
  40d821:	les    ebp,FWORD PTR [ecx+0x62]
  40d824:	fsubr  DWORD PTR [esi]
  40d826:	inc    eax
  40d827:	pop    eax
  40d828:	loopne 0x40d83c
  40d82a:	ret    0x8d56
  40d82d:	shl    BYTE PTR [edi+0x7793a8c7],0xe9
  40d834:	stc    
  40d835:	mov    esi,0x2c60bccd
  40d83a:	dec    ebp
  40d83b:	mov    dl,0x15
  40d83d:	xor    DWORD PTR [eax],edx
  40d83f:	jmp    DWORD PTR [edx]
  40d841:	xor    BYTE PTR [edi],ch
  40d843:	pop    ecx
  40d844:	aaa    
  40d845:	push   eax
  40d846:	pop    edx
  40d847:	push   0xffffffb8
  40d849:	ret    
  40d84a:	test   eax,0x332f4a98
  40d84f:	mov    esp,0x828cf3ef
  40d854:	not    DWORD PTR [esi+ebp*4]
  40d857:	stos   BYTE PTR es:[edi],al
  40d858:	ret    
  40d859:	adc    BYTE PTR [edx],cl
  40d85b:	pop    esi
  40d85c:	scas   al,BYTE PTR es:[edi]
  40d85d:	repz adc edi,DWORD PTR [edx+0x1b6035be]
  40d864:	pop    edi
  40d865:	iret   
  40d866:	mov    WORD PTR [esi+0x4d5579ca],?
  40d86c:	cwde   
  40d86d:	sbb    BYTE PTR [ebp-0x5c57bcc9],0xa7
  40d874:	sbb    BYTE PTR [eax],0x96
  40d877:	add    al,0xc4
  40d879:	loopne 0x40d8a5
  40d87b:	and    DWORD PTR [ecx+0x64e98d29],0x5e
  40d882:	lea    eax,[ecx+0x23465294]
  40d888:	xor    eax,edx
  40d88a:	pop    edi
  40d88b:	cmp    DWORD PTR [esi-0x77],0xffffff98
  40d88f:	enter  0x1979,0x7d
  40d893:	mov    ebp,0xf658892f
  40d898:	std    
  40d899:	xor    BYTE PTR [esi-0x7e],dl
  40d89c:	lock add BYTE PTR [esi],cl
  40d89f:	mov    edx,0x35a3278a
  40d8a4:	sub    eax,0x4d268c95
  40d8a9:	jnp    0x40d87d
  40d8ab:	cli    
  40d8ac:	xor    dl,BYTE PTR [ecx]
  40d8ae:	push   ebp
  40d8af:	jne    0x40d83d
  40d8b1:	and    al,0xea
  40d8b3:	or     eax,0xa1619277
  40d8b8:	and    al,0xc1
  40d8ba:	ja     0x40d8bf
  40d8bc:	fisttp DWORD PTR [ecx]
  40d8be:	add    ecx,DWORD PTR [ebx-0x32]
  40d8c1:	or     DWORD PTR [edi+edx*1-0x40d38f98],esi
  40d8c8:	push   ds
  40d8c9:	xchg   esp,eax
  40d8ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8cb:	adc    ecx,eax
  40d8cd:	add    al,0xb1
  40d8cf:	and    DWORD PTR [ecx],0x8693495d
  40d8d5:	in     eax,0x64
  40d8d7:	mov    ecx,0xbf14d19b
  40d8dc:	mov    eax,0x634c3308
  40d8e1:	push   eax
  40d8e2:	mov    dl,0x66
  40d8e4:	(bad)  
  40d8e6:	dec    ebp
  40d8e7:	cmp    ah,BYTE PTR [edi+0x76]
  40d8ea:	dec    eax
  40d8eb:	mov    esi,0x82da3c79
  40d8f0:	test   eax,0x23bfb100
  40d8f5:	lock xchg edi,eax
  40d8f7:	push   ecx
  40d8f8:	mov    WORD PTR cs:[esi-0x20616e43],fs
  40d8ff:	pop    edx
  40d900:	(bad)  [esi+edi*8+0x6ae21bc9]
  40d907:	imul   DWORD PTR [edi+0x49c914e]
  40d90d:	dec    edi
  40d90e:	jg     0x40d966
  40d910:	cwde   
  40d911:	cdq    
  40d912:	ror    cl,cl
  40d914:	call   FWORD PTR [edx+eiz*2]
  40d917:	loopne 0x40d905
  40d919:	mov    eax,0xdc7ade9a
  40d91e:	(bad)  
  40d91f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d920:	mov    eax,0xb24673a
  40d925:	pop    ss
  40d926:	and    bl,BYTE PTR [edi-0x3f451ada]
  40d92c:	dec    ecx
  40d92d:	loopne 0x40d928
  40d92f:	repnz pop ebp
  40d931:	retf   0x5316
  40d934:	xor    eax,0xea2c2fae
  40d939:	jp     0x40d8f8
  40d93b:	push   ds
  40d93c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d93d:	imul   edi,DWORD PTR ds:0x44d8632c,0x41adb5d7
  40d947:	es int 0x1c
  40d94a:	push   es
  40d94b:	adc    ebx,edx
  40d94d:	sub    ecx,ecx
  40d94f:	mov    ah,0xda
  40d951:	or     eax,0xbc055a4a
  40d956:	adc    al,0xfc
  40d958:	lods   eax,DWORD PTR ds:[esi]
  40d959:	xchg   ebx,eax
  40d95a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d95b:	xchg   ebp,eax
  40d95c:	adc    eax,DWORD PTR [ebp+0x62]
  40d95f:	or     bh,BYTE PTR [esi+ecx*1-0x6ebc3d7]
  40d966:	xor    eax,0x2ab6ad19
  40d96b:	loop   0x40d99b
  40d96d:	fstp   TBYTE PTR [edi]
  40d96f:	pop    ecx
  40d970:	xchg   edi,eax
  40d971:	add    bh,BYTE PTR [ebx]
  40d973:	popf   
  40d974:	mov    ah,0x9a
  40d976:	sub    al,0xd9
  40d978:	leave  
  40d979:	mov    eax,ds:0x3ac89bfa
  40d97e:	cmp    eax,0xbef2c982
  40d983:	or     cl,BYTE PTR [ebp-0x1182d0fc]
  40d989:	ins    BYTE PTR es:[edi],dx
  40d98a:	lds    esp,FWORD PTR [eax-0x5e28a909]
  40d990:	mov    edi,DWORD PTR [edi-0x25]
  40d993:	repnz inc esp
  40d995:	push   es
  40d996:	push   0x71
  40d998:	cli    
  40d999:	icebp  
  40d99a:	jns    0x40d9ce
  40d99c:	xor    esi,DWORD PTR [edx-0x47]
  40d99f:	cmp    bh,ch
  40d9a1:	arpl   ax,di
  40d9a3:	dec    esp
  40d9a4:	sub    al,0x96
  40d9a6:	adc    dh,dl
  40d9a8:	adc    BYTE PTR [eax],bl
  40d9aa:	jecxz  0x40d9f0
  40d9ac:	lds    edi,FWORD PTR [eax+0x7c911734]
  40d9b2:	xor    edx,DWORD PTR [ecx]
  40d9b4:	in     al,dx
  40d9b5:	mov    esi,0x2915dbcc
  40d9ba:	test   ch,ah
  40d9bc:	pop    edi
  40d9bd:	jnp    0x40d974
  40d9bf:	dec    ebx
  40d9c0:	lds    esi,FWORD PTR ds:0xaa3a890f
  40d9c6:	or     DWORD PTR [eax],eax
  40d9c8:	retf   0x8c99
  40d9cb:	and    BYTE PTR [eax-0x6dcaace5],dh
  40d9d1:	clc    
  40d9d2:	add    BYTE PTR ds:0xfc1354d,bh
  40d9d8:	das    
  40d9d9:	out    dx,eax
  40d9da:	(bad)  
  40d9db:	mov    ds:0x2408abde,al
  40d9e0:	adc    ebp,DWORD PTR [edx]
  40d9e2:	mov    cl,0x64
  40d9e4:	loopne 0x40d992
  40d9e6:	jns    0x40da21
  40d9e8:	arpl   WORD PTR [esi],bp
  40d9ea:	add    cl,bh
  40d9ec:	test   eax,0x3e834a9f
  40d9f1:	mov    edx,0xa8eb52e0
  40d9f6:	and    eax,0x634e385c
  40d9fb:	ret    
  40d9fc:	je     0x40d9c4
  40d9fe:	sub    al,0x2c
  40da00:	ret    
  40da01:	imul   esi,edx,0xffffffde
  40da04:	inc    ecx
  40da05:	call   0x52e9:0xd8a2097f
  40da0c:	mov    ebp,0x14f34e2f
  40da11:	push   edi
  40da12:	mov    ebp,0x8c493f48
  40da17:	jmp    0x881b3b79
  40da1c:	pop    ds
  40da1d:	(bad)  
  40da1e:	cli    
  40da1f:	mov    gs,eax
  40da21:	(bad)  
  40da22:	and    eax,0x12b6f48d
  40da27:	test   eax,0x90065fe9
  40da2c:	gs es cs ja 0x40daa7
  40da31:	rol    cl,0x54
  40da34:	mov    ebx,0x569249f4
  40da39:	test   eax,0x7ba4c676
  40da3e:	int3   
  40da3f:	jge    0x40da88
  40da41:	mov    bl,0x49
  40da43:	mov    WORD PTR [eax],fs
  40da45:	sbb    BYTE PTR [esi-0x260b421b],al
  40da4b:	aad    0xe3
  40da4d:	iret   
  40da4e:	inc    ebp
  40da4f:	mov    cl,0xf8
  40da51:	push   0xffffffc6
  40da53:	or     eax,0xb8c0e7f2
  40da58:	or     bh,al
  40da5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da5b:	aam    0x8b
  40da5d:	inc    esi
  40da5e:	dec    ecx
  40da5f:	dec    ebx
  40da60:	xchg   DWORD PTR [ecx+esi*1-0x5c8d7007],eax
  40da67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da68:	add    al,0xd0
  40da6a:	mov    ebx,gs
  40da6c:	xchg   ecx,eax
  40da6d:	dec    ebx
  40da6e:	pop    esi
  40da6f:	cwde   
  40da70:	adc    BYTE PTR [edx+0x5d83569d],dh
  40da76:	les    ebx,FWORD PTR [edx+0x7a0dab26]
  40da7c:	jnp    0x40dadf
  40da7e:	sub    DWORD PTR [ebp-0x48],eax
  40da81:	int3   
  40da82:	clc    
  40da83:	call   0x2836d4f5
  40da88:	js     0x40da66
  40da8a:	sbb    DWORD PTR [esi+ebp*4+0x31],ebp
  40da8e:	cmp    ebp,DWORD PTR [ebx-0x7ecdabb0]
  40da94:	cmp    al,0x91
  40da96:	aas    
  40da97:	int    0x82
  40da99:	or     bh,BYTE PTR ds:[ebp-0x1f]
  40da9d:	pop    ecx
  40da9e:	push   esp
  40da9f:	fadd   DWORD PTR [esi-0x62f2e11d]
  40daa5:	(bad)  
  40daa6:	hlt    
  40daa7:	jmp    0x40da34
  40daa9:	cmc    
  40daaa:	bound  ecx,QWORD PTR [esi-0x3e]
  40daad:	adc    DWORD PTR [edi+ecx*8],edx
  40dab0:	aaa    
  40dab1:	cld    
  40dab2:	aam    0x2f
  40dab4:	(bad)  
  40dab5:	push   esi
  40dab6:	mov    ebp,0x73203357
  40dabb:	out    0xe3,al
  40dabd:	loope  0x40da6b
  40dabf:	mov    dh,0xc6
  40dac1:	hlt    
  40dac2:	bound  eax,QWORD PTR ds:0xfd33ce31
  40dac8:	dec    eax
  40dac9:	test   DWORD PTR [ebx+ebp*8+0x56a5ff6b],esi
  40dad0:	push   cs
  40dad1:	aas    
  40dad2:	dec    ebx
  40dad3:	test   al,0x8c
  40dad5:	cmp    ebp,DWORD PTR [ecx+ebp*8-0x64e922f8]
  40dadc:	and    esp,DWORD PTR [edx+ebx*8+0x61]
  40dae0:	fs pushf 
  40dae2:	xchg   DWORD PTR [ebp-0x66],edx
  40dae5:	push   edx
  40dae6:	push   0x30d609ed
  40daeb:	or     esp,DWORD PTR [ebx+0x8]
  40daee:	cwde   
  40daef:	add    BYTE PTR [edx+0x77],0x26
  40daf3:	mov    BYTE PTR [ecx+0x68],ch
  40daf6:	push   eax
  40daf7:	call   0x19134798
  40dafc:	(bad)  
  40dafd:	or     ecx,DWORD PTR [esi]
  40daff:	hlt    
  40db00:	cmp    DWORD PTR [edi],0xffffffd5
  40db03:	test   BYTE PTR [edx+ebx*4],bl
  40db06:	jne    0x40db78
  40db08:	aaa    
  40db09:	adc    eax,0xc189633f
  40db0e:	sbb    BYTE PTR [ebx-0x26],al
  40db11:	mov    al,ds:0xd0ae4f0d
  40db16:	dec    BYTE PTR [ebp+esi*8-0x516ad19b]
  40db1d:	mov    al,0x3b
  40db1f:	cmp    al,0x42
  40db21:	or     eax,0x6f322a98
  40db26:	retf   0xb483
  40db29:	xor    cl,ah
  40db2b:	jmp    0x4cd97b9c
  40db30:	ja     0x40dac1
  40db32:	dec    esp
  40db33:	icebp  
  40db34:	or     ecx,DWORD PTR [esi]
  40db36:	sub    DWORD PTR [eax+0x2e],0x10
  40db3a:	xor    ch,BYTE PTR [ebx+0x34]
  40db3d:	sub    BYTE PTR [ebp+0x1f],cl
  40db40:	leave  
  40db41:	xchg   dl,dh
  40db43:	out    dx,eax
  40db44:	inc    BYTE PTR [ecx+0x21]
  40db47:	sub    BYTE PTR [esi-0x20],al
  40db4a:	xchg   edi,eax
  40db4b:	leave  
  40db4c:	mov    dl,0x22
  40db4e:	jg     0x40dae5
  40db50:	or     ch,BYTE PTR [esi+edi*2]
  40db53:	ror    al,1
  40db55:	dec    ebp
  40db56:	or     eax,0xa65ea09a
  40db5b:	mov    al,0xde
  40db5d:	popf   
  40db5e:	mov    eax,0x7d01bee3
  40db63:	inc    ebx
  40db64:	stos   DWORD PTR es:[edi],eax
  40db65:	sbb    BYTE PTR [ebp+0x7b23c6ec],al
  40db6b:	jne    0x40db9a
  40db6d:	mov    dh,0x47
  40db6f:	sahf   
  40db70:	sbb    bh,BYTE PTR [ebx]
  40db72:	lahf   
  40db73:	sub    al,0x1a
  40db75:	add    BYTE PTR [esi+0x55e7eb8c],0x62
  40db7c:	push   eax
  40db7d:	sti    
  40db7e:	sbb    bh,BYTE PTR [ebx-0x34]
  40db81:	pop    ebp
  40db82:	inc    eax
  40db83:	or     bh,BYTE PTR [edx-0x34b5fee6]
  40db89:	(bad)  
  40db8a:	xchg   edi,eax
  40db8b:	or     eax,0x76c367f1
  40db90:	xchg   ebx,eax
  40db91:	dec    edi
  40db92:	ret    0xcc20
  40db95:	add    BYTE PTR [edi-0x74],bh
  40db98:	adc    al,0xd
  40db9a:	test   BYTE PTR [esi+0x35],dl
  40db9d:	xchg   edx,eax
  40db9e:	push   ds
  40db9f:	stc    
  40dba0:	xchg   edi,eax
  40dba1:	cld    
  40dba2:	xchg   ebx,eax
  40dba3:	push   ecx
  40dba4:	mov    esi,0x8041ba38
  40dba9:	jno    0x40db4f
  40dbab:	outs   dx,BYTE PTR ds:[esi]
  40dbac:	jo     0x40dc11
  40dbae:	popf   
  40dbaf:	fnsave [eax]
  40dbb1:	jmp    0x40db4b
  40dbb3:	inc    edi
  40dbb4:	dec    edi
  40dbb5:	cld    
  40dbb6:	frstor [ecx-0x1e]
  40dbb9:	das    
  40dbba:	nop
  40dbbb:	dec    ebx
  40dbbc:	push   ecx
  40dbbd:	mov    al,BYTE PTR [ecx+eax*8-0x56]
  40dbc1:	js     0x40dbb2
  40dbc3:	pop    esp
  40dbc4:	ja     0x40dbfd
  40dbc6:	imul   ecx,DWORD PTR [edi],0xfcaa4a1d
  40dbcc:	push   es
  40dbcd:	rep outs dx,BYTE PTR ds:[esi]
  40dbcf:	dec    ecx
  40dbd0:	mov    edi,0x50ef6cde
  40dbd5:	sbb    eax,0x17885a1b
  40dbda:	scas   eax,DWORD PTR es:[edi]
  40dbdb:	add    dl,BYTE PTR gs:[ebp+edi*8-0x15]
  40dbe0:	addr16 xchg esi,eax
  40dbe2:	mov    ecx,0xc61fb24e
  40dbe7:	jg     0x40dbe1
  40dbe9:	mov    BYTE PTR [ecx-0x75c02e26],ch
  40dbef:	scas   eax,DWORD PTR es:[edi]
  40dbf0:	cmp    bl,dl
  40dbf2:	ds mov dh,0x25
  40dbf5:	cdq    
  40dbf6:	sub    edx,DWORD PTR [ecx+0x528fb29f]
  40dbfc:	cmp    eax,edi
  40dbfe:	dec    eax
  40dbff:	push   esi
  40dc00:	xor    esp,esi
  40dc02:	mov    edi,0x240811b4
  40dc07:	sbb    eax,0x45cca6be
  40dc0c:	ds add al,0x7d
  40dc0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc10:	into   
  40dc11:	in     eax,0xb5
  40dc13:	outs   dx,DWORD PTR ds:[esi]
  40dc14:	mov    edx,0x59a16642
  40dc19:	mov    dh,0x2
  40dc1b:	mov    eax,0x4e289e08
  40dc20:	loope  0x40dc87
  40dc22:	xor    ch,BYTE PTR [ebx+0x13]
  40dc25:	popf   
  40dc26:	leave  
  40dc27:	and    DWORD PTR [ebx+0x61e40ec7],0x4f
  40dc2e:	je     0x40dbc0
  40dc30:	jmp    0xbe2c:0x42a43c62
  40dc37:	jne    0x40dc1e
  40dc39:	repnz out dx,eax
  40dc3b:	jnp    0x40dcb9
  40dc3d:	in     eax,0x2f
  40dc3f:	push   eax
  40dc40:	movups xmm3,XMMWORD PTR [edi]
  40dc43:	mov    edi,0x1e59f78f
  40dc48:	lea    ebp,[edx-0x77]
  40dc4b:	cmp    al,0xa3
  40dc4d:	jnp    0x40dc0a
  40dc4f:	dec    edx
  40dc50:	clc    
  40dc51:	ror    al,0x26
  40dc54:	xor    al,0x74
  40dc56:	jmp    0x7a54d1e5
  40dc5b:	jo     0x40dc8e
  40dc5d:	jmp    0x354fd503
  40dc62:	xlat   BYTE PTR ds:[ebx]
  40dc63:	(bad)  
  40dc65:	pop    es
  40dc66:	call   0x3748:0xbff38fe1
  40dc6d:	in     al,dx
  40dc6e:	stc    
  40dc6f:	in     eax,0xfe
  40dc71:	je     0x40dc30
  40dc73:	cmp    ah,BYTE PTR [eax+0x46]
  40dc76:	fsub   QWORD PTR [ebp-0x3b3ad88f]
  40dc7c:	push   eax
  40dc7d:	in     eax,dx
  40dc7e:	cmp    eax,0x3a83d42a
  40dc83:	xlat   BYTE PTR ds:[ebx]
  40dc84:	aad    0xfc
  40dc86:	add    BYTE PTR [ebx-0x54188f],al
  40dc8c:	fisubr WORD PTR [edi-0x33]
  40dc8f:	shr    BYTE PTR [ebx-0x1d],1
  40dc92:	(bad)  
  40dc93:	jg     0x40dcfa
  40dc95:	aam    0xda
  40dc97:	jl     0x40dce0
  40dc99:	loope  0x40dcb1
  40dc9b:	mov    ebp,0x729200d4
  40dca0:	imul   ebx,DWORD PTR [edi+0x4c],0x57
  40dca4:	mov    ds:0xdb4385df,eax
  40dca9:	mov    BYTE PTR [esi],0x89
  40dcac:	sub    DWORD PTR [ecx],0xffffff90
  40dcaf:	aas    
  40dcb0:	sub    eax,0x3e77029
  40dcb5:	cdq    
  40dcb6:	adc    al,BYTE PTR [ecx]
  40dcb8:	lea    eax,[ecx]
  40dcba:	aas    
  40dcbb:	lahf   
  40dcbc:	sbb    ecx,esp
  40dcbe:	or     esi,DWORD PTR [esi]
  40dcc0:	pop    ss
  40dcc1:	sbb    ebx,0xe43cefa
  40dcc7:	and    DWORD PTR [ebx+eax*1],ebp
  40dcca:	add    ah,BYTE PTR [edx]
  40dccc:	jmp    0x2dfd:0x7edee143
  40dcd3:	lahf   
  40dcd4:	repnz mov eax,0xbd83145c
  40dcda:	in     al,0x5f
  40dcdc:	xor    al,0x87
  40dcde:	mov    ecx,0xf296958a
  40dce3:	and    al,0xfd
  40dce5:	jg     0x40dc73
  40dce7:	xchg   esp,eax
  40dce8:	push   ds
  40dce9:	cli    
  40dcea:	adc    esi,DWORD PTR [ecx+0x5c]
  40dced:	(bad)  
  40dcee:	(bad)  
  40dcf0:	add    ebx,edi
  40dcf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcf3:	inc    esp
  40dcf4:	xchg   esp,eax
  40dcf5:	mov    dh,cl
  40dcf7:	inc    esp
  40dcf8:	add    ch,BYTE PTR [esi+edi*2]
  40dcfb:	mov    dh,0x32
  40dcfd:	aaa    
  40dcfe:	inc    ebx
  40dcff:	sahf   
  40dd00:	not    ecx
  40dd02:	outs   dx,BYTE PTR ds:[esi]
  40dd03:	add    BYTE PTR [edx-0xd20dd0d],0x96
  40dd0a:	add    ebp,esp
  40dd0c:	out    dx,al
  40dd0d:	mov    dl,0x2b
  40dd0f:	mov    ch,0x7
  40dd11:	ds jge 0x40dd11
  40dd14:	fprem1 
  40dd16:	jmp    0x40dd29
  40dd18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd19:	push   DWORD PTR [ebx-0x3c]
  40dd1c:	not    DWORD PTR [eax+ebx*4+0x72]
  40dd20:	jns    0x40dd1e
  40dd22:	adc    DWORD PTR ds:0xe08f88c4,edi
  40dd28:	into   
  40dd29:	pop    ebp
  40dd2a:	lods   eax,DWORD PTR ds:[esi]
  40dd2b:	pop    ebp
  40dd2c:	or     BYTE PTR [ecx+0x5e99f61a],ch
  40dd32:	mov    eax,ds:0x70bd563
  40dd37:	cwde   
  40dd38:	mov    bl,0xb3
  40dd3a:	pop    DWORD PTR [ebx+eiz*4+0x74]
  40dd3e:	clc    
  40dd3f:	mov    edi,0x83bbdfad
  40dd44:	mov    dl,0xfe
  40dd46:	lds    edi,FWORD PTR [esi]
  40dd48:	fadd   QWORD PTR [edi-0x53b50f9c]
  40dd4e:	fs cwde 
  40dd50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd51:	sbb    BYTE PTR [ebp+0x9],dl
  40dd54:	rol    BYTE PTR [ecx],cl
  40dd56:	adc    BYTE PTR [edx+0x3e],cl
  40dd59:	lods   eax,DWORD PTR ds:[esi]
  40dd5a:	dec    eax
  40dd5b:	rcr    DWORD PTR [bx+si-0x7c],0xaa
  40dd60:	retf   
  40dd61:	add    DWORD PTR [eax+0x4eadbc99],esi
  40dd67:	jns    0x40dd9e
  40dd69:	pop    edi
  40dd6a:	stc    
  40dd6b:	mov    bh,0x5a
  40dd6d:	push   ds
  40dd6e:	fadd   DWORD PTR [edx]
  40dd70:	(bad)  
  40dd71:	adc    eax,0x63e3905b
  40dd76:	add    bh,BYTE PTR [edi]
  40dd78:	and    al,0xd3
  40dd7a:	mov    ebx,DWORD PTR [esi+0x6167f051]
  40dd80:	push   esi
  40dd81:	je     0x40dd99
  40dd83:	les    edi,FWORD PTR [eax-0x4b]
  40dd86:	sbb    eax,0x59a410a9
  40dd8b:	call   0x6f5a:0xbe068f40
  40dd92:	loope  0x40ddff
  40dd94:	push   ecx
  40dd95:	iret   
  40dd96:	(bad)  
  40dd97:	dec    esp
  40dd98:	in     eax,dx
  40dd99:	mov    BYTE PTR [edx],cl
  40dd9b:	push   0x7138a552
  40dda0:	push   edi
  40dda1:	pop    esp
  40dda2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dda3:	xchg   edi,eax
  40dda4:	je     0x40ddd2
  40dda6:	(bad)  
  40dda7:	mov    eax,0xce6efcad
  40ddac:	mov    ah,0xa1
  40ddae:	xchg   esi,eax
  40ddaf:	ins    BYTE PTR es:[edi],dx
  40ddb0:	sub    ebx,DWORD PTR [eax]
  40ddb2:	push   cs
  40ddb3:	retf   0x8ca0
  40ddb6:	repz sub eax,0x52221ddc
  40ddbc:	pop    ecx
  40ddbd:	dec    ebp
  40ddbe:	repz fcmovbe st,st(3)
  40ddc1:	rol    esi,cl
  40ddc3:	sub    DWORD PTR [ebp+0x53],edi
  40ddc6:	mov    ch,0x1a
  40ddc8:	ret    0x7681
  40ddcb:	pop    ds
  40ddcc:	ror    BYTE PTR [ecx+esi*4+0x23039046],1
  40ddd3:	gs pop esi
  40ddd5:	scas   al,BYTE PTR es:[edi]
  40ddd6:	or     al,0xd9
  40ddd8:	fcomp  DWORD PTR [edi]
  40ddda:	jmp    0xe1a:0x77cf5cdc
  40dde1:	mov    dl,al
  40dde3:	sub    al,0x11
  40dde5:	mov    ds:0x546b50e3,eax
  40ddea:	jb     0x40de48
  40ddec:	adc    BYTE PTR [eax],ah
  40ddee:	outs   dx,BYTE PTR ds:[esi]
  40ddef:	out    dx,eax
  40ddf0:	aam    0x87
  40ddf2:	xchg   edx,eax
  40ddf3:	jns    0x40de5e
  40ddf5:	xchg   DWORD PTR [ebx+0x3b],ebx
  40ddf8:	mov    edi,0xdc1a1dc
  40ddfd:	iret   
  40ddfe:	inc    eax
  40ddff:	sub    al,0xb3
  40de01:	das    
  40de02:	sub    al,0x40
  40de04:	aam    0x25
  40de06:	mov    al,ds:0x16b957fb
  40de0b:	dec    eax
  40de0c:	push   esp
  40de0d:	icebp  
  40de0e:	push   ss
  40de0f:	fs adc al,0x7a
  40de12:	lods   eax,DWORD PTR ds:[esi]
  40de13:	xchg   esi,eax
  40de14:	jle    0x40de85
  40de16:	stos   BYTE PTR es:[edi],al
  40de17:	mov    ecx,0x7465e0b2
  40de1c:	imul   edx,DWORD PTR [edi-0x5322091f],0x180fecdc
  40de26:	jmp    0x40ddf0
  40de28:	push   DWORD PTR [ebx+esi*4]
  40de2b:	(bad)  
  40de2c:	aad    0xc
  40de2e:	adc    ebx,ebp
  40de30:	jnp    0x40de02
  40de32:	icebp  
  40de33:	arpl   WORD PTR [ebx-0x5a],di
  40de36:	adc    DWORD PTR [edx],0x137db2b2
  40de3c:	jno    0x40de67
  40de3e:	lods   al,BYTE PTR ds:[esi]
  40de3f:	mov    ds:0xa1bdf0a8,eax
  40de44:	ret    0x2cae
  40de47:	sub    al,0xf
  40de49:	dec    DWORD PTR [ebx-0x92a6498]
  40de4f:	daa    
  40de50:	push   0x6d5ad2ca
  40de55:	jo     0x40de12
  40de57:	and    eax,0xb5519a49
  40de5c:	gs push 0x9972ece0
  40de62:	cld    
  40de63:	or     ebx,DWORD PTR [ebx+0x74db830c]
  40de69:	stos   DWORD PTR es:[edi],eax
  40de6a:	(bad)  
  40de6b:	loop   0x40deb7
  40de6d:	add    esp,DWORD PTR [esi]
  40de6f:	fiadd  WORD PTR [edx+ebp*2+0x62]
  40de73:	les    ebx,FWORD PTR [ebp+ecx*1-0x15aebaa0]
  40de7a:	test   DWORD PTR [edx-0x78],eax
  40de7d:	fldenv [esi-0x64]
  40de80:	mov    ebx,0x125af1ea
  40de85:	pushf  
  40de86:	mov    al,0xc5
  40de88:	cli    
  40de89:	test   BYTE PTR [esi+0x61cadfd8],bl
  40de8f:	jmp    FWORD PTR [edi+0x4b]
  40de92:	mov    ?,edi
  40de94:	(bad)  
  40de95:	pop    edi
  40de96:	xor    al,0xe4
  40de98:	fcom   QWORD PTR [edi+0x6a2d1391]
  40de9e:	repz jg 0x40de69
  40dea1:	and    al,0x60
  40dea3:	ins    DWORD PTR es:[edi],dx
  40dea4:	mov    esi,?
  40dea6:	mov    dl,0x30
  40dea8:	xchg   esp,eax
  40dea9:	jb     0x40de94
  40deab:	shr    BYTE PTR [edi+0x30],cl
  40deae:	mov    es,ebx
  40deb0:	call   0x953e:0xab166053
  40deb7:	push   esi
  40deb8:	pop    edx
  40deb9:	lds    ecx,FWORD PTR [edx]
  40debb:	adc    esp,DWORD PTR [edi-0x5a5fa7e3]
  40dec1:	in     eax,dx
  40dec2:	bound  edx,QWORD PTR [edx]
  40dec4:	dec    edi
  40dec5:	js     0x40df2f
  40dec7:	nop
  40dec8:	(bad)  
  40dec9:	sub    DWORD PTR [edx],ebp
  40decb:	idiv   DWORD PTR [eax+0x7f]
  40dece:	popf   
  40decf:	retf   
  40ded0:	rol    DWORD PTR [ebx],cl
  40ded2:	mov    ds:0xac340004,al
  40ded7:	mov    ds:0xa92d46c7,al
  40dedc:	adc    al,BYTE PTR [edx-0x27]
  40dedf:	mov    edi,0xbf1213
  40dee4:	popf   
  40dee5:	ja     0x40df22
  40dee7:	out    0x42,eax
  40dee9:	adc    eax,0x9c9d94e
  40deee:	and    esp,DWORD PTR [edx]
  40def0:	add    eax,0x1dc2aaef
  40def5:	cmp    DWORD PTR [edx+0x26d969c9],eax
  40defb:	mov    dh,0x6
  40defd:	hlt    
  40defe:	mov    es,WORD PTR [edi-0x14]
  40df01:	sbb    DWORD PTR [edi],ebx
  40df03:	dec    edx
  40df04:	or     cl,BYTE PTR [edx+eax*1-0x5f]
  40df08:	sub    ebp,DWORD PTR [ebp+0x29]
  40df0b:	push   esp
  40df0c:	xchg   ecx,eax
  40df0d:	sti    
  40df0e:	jl     0x40df0e
  40df10:	in     eax,dx
  40df11:	pop    esi
  40df12:	rol    dl,0x74
  40df15:	mov    edi,0x28b2cc18
  40df1a:	pop    ss
  40df1b:	push   ss
  40df1c:	mov    ecx,0x36e37543
  40df21:	arpl   WORD PTR [ebx+0x22],cx
  40df24:	fdivr  DWORD PTR [edi+eax*1+0x6c]
  40df28:	call   0x3616:0xd40c3c62
  40df2f:	push   eax
  40df30:	sar    edi,cl
  40df32:	mov    ?,WORD PTR [esi+0x30]
  40df35:	rol    DWORD PTR [eax+eax*2+0x29922b85],1
  40df3c:	sub    ch,BYTE PTR [eax-0x37350d37]
  40df42:	mov    al,ds:0x856f294c
  40df47:	jg     0x40df81
  40df49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df4a:	scas   al,BYTE PTR es:[edi]
  40df4b:	fmul   QWORD PTR [edi]
  40df4d:	jno    0x40dfc9
  40df4f:	push   eax
  40df50:	xor    al,0x1e
  40df52:	cli    
  40df53:	adc    dh,BYTE PTR [edi-0x80]
  40df56:	je     0x40df04
  40df58:	test   DWORD PTR [edx+esi*1+0x19e7a7d4],ebx
  40df5f:	in     eax,0xa9
  40df61:	cmp    WORD PTR es:[eax+0x19],0x36
  40df67:	push   ebp
  40df68:	mov    eax,ds:0x8528325c
  40df6d:	sbb    DWORD PTR [esp+ebx*2],ecx
  40df70:	add    eax,0x7a23d76e
  40df75:	cld    
  40df76:	fisub  WORD PTR [eax]
  40df78:	xor    al,0x79
  40df7a:	push   esi
  40df7b:	(bad)  
  40df7c:	repnz icebp 
  40df7e:	(bad)  
  40df80:	cmp    dl,BYTE PTR [ecx]
  40df82:	test   DWORD PTR [ebp+0x3e45748b],0x91ca0e23
  40df8c:	inc    esp
  40df8d:	cmc    
  40df8e:	sub    BYTE PTR [ecx+0x68],0xdc
  40df92:	test   BYTE PTR [ebp-0x6bbf0d66],ch
  40df98:	mov    ds:0xcd698629,eax
  40df9d:	bound  edx,QWORD PTR [edx+0x12]
  40dfa0:	lea    edx,[ebx+ebx*8+0x79]
  40dfa4:	popa   
  40dfa5:	jg     0x40df86
  40dfa7:	fsubr  DWORD PTR [edi+eax*4]
  40dfaa:	mov    dh,BYTE PTR [esi+0x61]
  40dfad:	rol    dh,cl
  40dfaf:	ins    BYTE PTR es:[edi],dx
  40dfb0:	push   0xc1227e55
  40dfb5:	cmp    ch,BYTE PTR [edx]
  40dfb7:	mov    dh,0x25
  40dfb9:	out    0x40,eax
  40dfbb:	int    0x92
  40dfbd:	xchg   edx,eax
  40dfbe:	jno    0x40dfc3
  40dfc0:	pop    ds
  40dfc1:	xlat   BYTE PTR ds:[ebx]
  40dfc2:	inc    ecx
  40dfc3:	sbb    BYTE PTR [esi+0x368ef1f0],cl
  40dfc9:	sbb    al,0xe1
  40dfcb:	ja     0x40dff9
  40dfcd:	and    esi,DWORD PTR [edx+0x57b0f12c]
  40dfd3:	inc    edi
  40dfd4:	ja     0x40df6a
  40dfd6:	jo     0x40dfce
  40dfd8:	mov    BYTE PTR [edx],0x4f
  40dfdb:	sub    esp,ebx
  40dfdd:	jne    0x40e03f
  40dfdf:	pop    edx
  40dfe0:	add    eax,0x705e57cd
  40dfe5:	mov    ds:0x9831889f,eax
  40dfea:	cmc    
  40dfeb:	jae    0x40dfa4
  40dfed:	xchg   edi,eax
  40dfee:	mov    esi,0x8cb5937e
  40dff3:	daa    
  40dff4:	mov    dh,BYTE PTR [edi+0x27c66395]
  40dffa:	push   eax
  40dffb:	call   FWORD PTR [ebp-0x965e39d]
  40e001:	das    
  40e002:	call   0x2298fed3
  40e007:	sbb    eax,DWORD PTR [edi+0x71]
  40e00a:	or     ebx,DWORD PTR [ebx+0x65e021c0]
  40e010:	dec    edx
  40e011:	sub    al,BYTE PTR [ecx-0x30]
  40e014:	mov    dl,0x1f
  40e016:	in     al,0x85
  40e018:	sti    
  40e019:	clc    
  40e01a:	jns    0x40dfee
  40e01c:	ret    0xb917
  40e01f:	into   
  40e020:	int3   
  40e021:	pop    esp
  40e022:	data16 (bad) 
  40e024:	leave  
  40e025:	adc    al,0x2d
  40e027:	call   0x21a5765c
  40e02c:	xchg   esp,eax
  40e02d:	mov    bl,0xe5
  40e02f:	mov    eax,ds:0xb90d23c2
  40e034:	push   cs
  40e035:	push   ss
  40e036:	pushf  
  40e037:	pop    ecx
  40e038:	mov    ebp,0x47a6ff9e
  40e03d:	les    edx,FWORD PTR [edi]
  40e03f:	xchg   edx,eax
  40e040:	int3   
  40e041:	xor    DWORD PTR [eax+0x4cd0c62e],ecx
  40e047:	jge    0x40e0a8
  40e049:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e04a:	ins    BYTE PTR es:[edi],dx
  40e04b:	dec    esp
  40e04c:	test   esp,edx
  40e04e:	cmp    al,0x5
  40e050:	dec    ebp
  40e051:	test   DWORD PTR [edx+0x6d3b6a59],eax
  40e057:	adc    edi,esp
  40e059:	js     0x40e0d0
  40e05b:	push   edi
  40e05c:	add    edx,DWORD PTR [ecx+0x435ba66]
  40e062:	jb     0x40dfee
  40e064:	inc    edi
  40e065:	and    edx,DWORD PTR [eax+0x2ded46c0]
  40e06b:	jno    0x40e011
  40e06d:	adc    ch,BYTE PTR [ecx-0x9]
  40e070:	leave  
  40e071:	push   ecx
  40e072:	sub    bl,BYTE PTR [ecx-0x608207eb]
  40e078:	dec    edx
  40e079:	imul   ecx,DWORD PTR [ecx-0xff66aca],0xffffff8c
  40e080:	dec    ecx
  40e081:	enter  0x7e99,0x4e
  40e085:	scas   eax,DWORD PTR es:[edi]
  40e086:	repz cli 
  40e088:	dec    esi
  40e089:	pushf  
  40e08a:	add    al,BYTE PTR [eax+0x44]
  40e08d:	mov    esi,0x72267dad
  40e092:	sub    esi,DWORD PTR [edx+0x1c6e7f2b]
  40e098:	xchg   edx,eax
  40e099:	retf   0xe60c
  40e09c:	sub    edi,DWORD PTR [ebp+ecx*8-0x29355799]
  40e0a3:	jl     0x40e0d3
  40e0a5:	test   BYTE PTR [eax+0x5561cc81],ch
  40e0ab:	cmp    edi,eax
  40e0ad:	mov    BYTE PTR [ebx-0x39b52e36],dl
  40e0b3:	xor    DWORD PTR [ecx+0x12],ecx
  40e0b6:	add    BYTE PTR [ecx+0x26],bl
  40e0b9:	and    DWORD PTR [esi+0x38],edx
  40e0bc:	enter  0xe6c2,0xb2
  40e0c0:	imul   ebx,DWORD PTR [edx],0x9c5055d2
  40e0c6:	ins    DWORD PTR es:[edi],dx
  40e0c7:	mov    ds:0xcb81ac82,eax
  40e0cc:	lock scas eax,DWORD PTR es:[edi]
  40e0ce:	jae    0x40e08a
  40e0d0:	or     eax,0xa4074b77
  40e0d5:	or     bh,BYTE PTR [ebx-0x35c5ea74]
  40e0db:	into   
  40e0dc:	in     eax,dx
  40e0dd:	and    al,0x82
  40e0df:	push   ebp
  40e0e0:	or     dh,al
  40e0e2:	loop   0x40e124
  40e0e4:	jge    0x40e0ce
  40e0e6:	(bad)  
  40e0e8:	mov    DWORD PTR [edi-0x24],esi
  40e0eb:	cmp    al,BYTE PTR [eax]
  40e0ed:	dec    ecx
  40e0ee:	and    edx,eax
  40e0f0:	jmp    0xba5309a7
  40e0f5:	cs or  eax,0x32f38ea8
  40e0fb:	sar    ch,cl
  40e0fd:	loop   0x40e16d
  40e0ff:	pop    esp
  40e100:	out    dx,al
  40e101:	stos   DWORD PTR es:[edi],eax
  40e102:	in     al,0x8a
  40e104:	jle    0x40e0e4
  40e106:	or     DWORD PTR [ebp+0x7b0e11d],ebp
  40e10c:	mov    edx,0x6c7ca16
  40e111:	xor    DWORD PTR [edx],eax
  40e113:	add    bh,bh
  40e115:	and    cl,BYTE PTR [edi+0x13]
  40e118:	(bad)  
  40e119:	shl    BYTE PTR [ebx],0xd6
  40e11c:	jns    0x40e120
  40e11e:	pop    ecx
  40e11f:	pop    edi
  40e120:	fsub   QWORD PTR [ecx]
  40e122:	bound  edx,QWORD PTR [esp+edx*8]
  40e125:	mov    cl,0x2b
  40e127:	test   eax,0x9f1f7434
  40e12c:	in     eax,dx
  40e12d:	(bad)  
  40e12e:	out    0x2a,al
  40e130:	(bad)  
  40e132:	nop
  40e133:	clc    
  40e134:	push   esi
  40e135:	xchg   ebp,eax
  40e136:	mov    eax,ds:0x3b501c78
  40e13b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e13c:	mov    bh,bl
  40e13e:	inc    eax
  40e13f:	ret    
  40e140:	jo     0x40e0de
  40e142:	xor    al,0x38
  40e144:	test   eax,0xc7328cd0
  40e149:	pop    ebp
  40e14a:	adc    al,0x70
  40e14c:	not    eax
  40e14e:	or     DWORD PTR [eax-0x24b5036e],esp
  40e154:	(bad)  
  40e155:	out    dx,eax
  40e156:	in     eax,0x1e
  40e158:	pop    ebp
  40e159:	ins    BYTE PTR es:[edi],dx
  40e15a:	out    0x9b,eax
  40e15c:	repnz and DWORD PTR [ecx],0x1e9d8a4f
  40e163:	xchg   BYTE PTR [ebx-0x465aab90],dh
  40e169:	(bad)  
  40e16a:	lods   al,BYTE PTR ds:[esi]
  40e16b:	xchg   ecx,eax
  40e16c:	adc    al,0x13
  40e16e:	push   edi
  40e16f:	leave  
  40e170:	or     al,0xea
  40e172:	dec    eax
  40e173:	sub    DWORD PTR [edx-0x79b24e54],esp
  40e179:	sub    esi,ebp
  40e17b:	jae    0x40e19b
  40e17d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e17e:	xor    DWORD PTR [eax+edi*1],esi
  40e181:	sub    eax,0xe8f1ab0b
  40e186:	sub    eax,0xd24347de
  40e18b:	xor    BYTE PTR [eax-0x7a],0x85
  40e18f:	jo     0x40e1db
  40e191:	sbb    eax,0x205d8281
  40e196:	dec    esi
  40e197:	fwait
  40e198:	dec    esi
  40e199:	(bad)  
  40e19a:	fdiv   DWORD PTR [edi+0x7ffeecd0]
  40e1a0:	sti    
  40e1a1:	sti    
  40e1a2:	jecxz  0x40e1de
  40e1a4:	out    dx,al
  40e1a5:	jmp    0xc602:0x468bae24
  40e1ac:	xchg   DWORD PTR [edx+ecx*8-0x382faca5],esi
  40e1b3:	adc    DWORD PTR [esi],edx
  40e1b5:	in     al,0x7c
  40e1b7:	lods   al,BYTE PTR ds:[esi]
  40e1b8:	out    dx,al
  40e1b9:	sbb    esi,edi
  40e1bb:	jbe    0x40e1ca
  40e1bd:	ins    DWORD PTR es:[edi],dx
  40e1be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1bf:	mov    esi,0x5c376ed5
  40e1c4:	fwait
  40e1c5:	imul   ebx,DWORD PTR [eax-0x71],0x28
  40e1c9:	jecxz  0x40e17a
  40e1cb:	repz das 
  40e1cd:	inc    esi
  40e1ce:	jmp    0x2b3bd781
  40e1d3:	sahf   
  40e1d4:	dec    ecx
  40e1d5:	and    BYTE PTR [esi+0x67dcdfe8],ah
  40e1db:	sub    al,0xd0
  40e1dd:	test   BYTE PTR [ebp+ebp*1-0x73],ah
  40e1e1:	imul   ebp,DWORD PTR [ebx+0x26cbaf8a],0xc
  40e1e8:	ja     0x40e1c5
  40e1ea:	add    al,0x44
  40e1ec:	add    BYTE PTR [ebx+0x37c5ae0b],ah
  40e1f2:	repnz out dx,al
  40e1f4:	mov    eax,0x7c2b56ad
  40e1f9:	mul    BYTE PTR [edx]
  40e1fb:	pop    esp
  40e1fc:	fild   DWORD PTR [esi+0x443c99d7]
  40e202:	inc    esi
  40e203:	inc    eax
  40e204:	inc    ebp
  40e205:	cmp    al,0x3a
  40e207:	mov    dl,0x8a
  40e209:	push   edx
  40e20a:	or     BYTE PTR [ebp-0x1035dfef],ah
  40e210:	xchg   DWORD PTR [edx],ebp
  40e212:	mov    esp,0xbb2f3561
  40e217:	aad    0xe6
  40e219:	outs   dx,BYTE PTR ds:[esi]
  40e21a:	jmp    0x40e1c2
  40e21c:	or     BYTE PTR [esi],cl
  40e21e:	cmp    al,0xb2
  40e220:	jge    0x40e288
  40e222:	pop    esi
  40e223:	pop    eax
  40e224:	xlat   BYTE PTR ds:[ebx]
  40e225:	dec    esi
  40e226:	jnp    0x40e282
  40e228:	sbb    edx,edx
  40e22a:	shl    BYTE PTR [edi+esi*4-0x1fb72920],0x92
  40e232:	adc    DWORD PTR [ecx],ebp
  40e234:	sbb    BYTE PTR [esi+0x44],al
  40e237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e238:	dec    esp
  40e239:	adc    DWORD PTR [eax],0xffffffa0
  40e23c:	imul   esp,ebp,0x4c6e45ca
  40e242:	fdiv   st(7),st
  40e244:	outs   dx,BYTE PTR ds:[esi]
  40e245:	test   eax,0x7db86072
  40e24a:	jmp    0x48fd:0xb4b985f4
  40e251:	push   es
  40e252:	push   ds
  40e253:	adc    ah,al
  40e255:	adc    ch,ah
  40e257:	push   ebp
  40e258:	xor    edi,DWORD PTR [edx-0x3417ae55]
  40e25e:	retf   0x61dc
  40e261:	inc    esi
  40e262:	lea    edi,[ebx+0x9]
  40e265:	add    al,0x86
  40e267:	pop    edi
  40e268:	imul   ecx,ebx,0x6a922f0f
  40e26e:	adc    eax,0x8db1078a
  40e273:	and    ebp,DWORD PTR [ecx]
  40e275:	xchg   edx,eax
  40e276:	adc    ebp,ecx
  40e278:	sub    al,0x1
  40e27a:	push   ecx
  40e27b:	push   esi
  40e27c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e27d:	pusha  
  40e27e:	mov    ebx,0xd814088d
  40e283:	mov    ebx,0x8fb8fa62
  40e288:	jb     0x40e2d1
  40e28a:	mov    WORD PTR [eax+0x64],?
  40e28d:	popa   
  40e28e:	mov    ds:0xd6566f13,al
  40e293:	bnd jl 0x40e303
  40e296:	jno    0x40e2a5
  40e298:	aas    
  40e299:	mov    DWORD PTR [ecx],ebp
  40e29b:	inc    esi
  40e29c:	fs and eax,0x807fa127
  40e2a2:	mov    edi,0x945807b2
  40e2a7:	xor    eax,0x8ef42c87
  40e2ac:	mov    al,0xda
  40e2ae:	xadd   DWORD PTR ds:0x3c799f7b,esp
  40e2b5:	popa   
  40e2b6:	mov    eax,ds:0x456bec0
  40e2bb:	adc    eax,0x12532a14
  40e2c0:	push   ebp
  40e2c1:	lds    ecx,FWORD PTR [edx-0x77]
  40e2c4:	sub    al,0x51
  40e2c6:	jg     0x40e319
  40e2c8:	xchg   edi,eax
  40e2c9:	or     al,0xa9
  40e2cb:	sbb    edi,0xffffff9d
  40e2ce:	ins    BYTE PTR es:[edi],dx
  40e2cf:	test   BYTE PTR [eax+eax*8-0x676fd97],cl
  40e2d6:	ja     0x40e355
  40e2d8:	xchg   esp,eax
  40e2d9:	mov    eax,0x138acc9e
  40e2de:	dec    eax
  40e2df:	mov    bl,BYTE PTR [edi-0x3e619cbe]
  40e2e5:	push   es
  40e2e6:	cmc    
  40e2e7:	lahf   
  40e2e8:	dec    esi
  40e2e9:	les    ebx,FWORD PTR [ecx+0x13]
  40e2ec:	jle    0x40e2de
  40e2ee:	mov    edi,0xc0f33bcc
  40e2f3:	dec    di
  40e2f5:	xor    ecx,DWORD PTR ds:[ebx+esi*4-0x33]
  40e2fa:	mov    al,ds:0xe072c4d
  40e2ff:	or     al,0x54
  40e301:	sub    al,0x26
  40e303:	sar    BYTE PTR [esi-0x6b],0xd2
  40e307:	aad    0x1b
  40e309:	mov    bl,0x3f
  40e30b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e30c:	es push ebx
  40e30e:	in     al,0x48
  40e310:	fadd   st(5),st
  40e312:	idiv   BYTE PTR [eax-0x3126c8f0]
  40e318:	call   0xebe8:0xc67dfe0f
  40e31f:	mov    ch,0x6a
  40e321:	mov    bh,0xd4
  40e323:	leave  
  40e324:	imul   esp,esi,0x68
  40e327:	cld    
  40e328:	rcr    BYTE PTR [eax-0x6d],0x88
  40e32c:	lahf   
  40e32d:	ffree  st(4)
  40e32f:	push   esi
  40e330:	(bad)  
  40e333:	mov    al,ds:0xde611f13
  40e338:	outs   dx,BYTE PTR ds:[esi]
  40e339:	arpl   WORD PTR [eax],sp
  40e33b:	or     dl,BYTE PTR [edi-0x64]
  40e33e:	fwait
  40e33f:	les    ecx,FWORD PTR [esi+0x67]
  40e342:	mov    cl,0xae
  40e344:	push   esi
  40e345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e346:	lods   eax,DWORD PTR ds:[esi]
  40e347:	mov    dl,0x98
  40e349:	xchg   ebp,eax
  40e34a:	inc    BYTE PTR ds:0x7244aca
  40e350:	jg     0x40e34e
  40e352:	(bad)  
  40e353:	push   edi
  40e354:	push   0xffffffcf
  40e356:	retf   0x415a
  40e359:	aas    
  40e35a:	out    dx,eax
  40e35b:	out    0x8a,eax
  40e35d:	dec    ebp
  40e35e:	div    DWORD PTR [esi-0x5e0a0166]
  40e364:	stos   BYTE PTR es:[edi],al
  40e365:	mov    cl,0x78
  40e367:	daa    
  40e368:	jmp    0xc01b:0x4019b239
  40e36f:	lods   eax,DWORD PTR ds:[esi]
  40e370:	mov    cl,0x8a
  40e372:	addr16 mov al,ds:0xe409
  40e376:	xchg   esi,eax
  40e377:	sti    
  40e378:	cmp    dh,BYTE PTR [eax]
  40e37a:	push   ss
  40e37b:	xchg   ebp,eax
  40e37c:	and    BYTE PTR [ecx-0x2b],0x25
  40e380:	clc    
  40e381:	jne    0x40e3fc
  40e383:	inc    ebp
  40e384:	sbb    bh,BYTE PTR [edi+0x1964c91f]
  40e38a:	cmp    bh,ah
  40e38c:	jo     0x40e3c6
  40e38e:	mov    ch,0xde
  40e390:	xchg   ecx,eax
  40e391:	jnp    0x40e38c
  40e393:	and    al,0xea
  40e395:	inc    esi
  40e396:	test   dl,bl
  40e398:	cdq    
  40e399:	icebp  
  40e39a:	sbb    BYTE PTR [edi],dh
  40e39c:	dec    esp
  40e39d:	xchg   al,dh
  40e39f:	int3   
  40e3a0:	(bad)  
  40e3a2:	xor    edi,edi
  40e3a4:	mov    ebx,DWORD PTR [ecx]
  40e3a6:	adc    DWORD PTR [ebx+0x68380761],ebx
  40e3ac:	enter  0x4148,0x96
  40e3b0:	lea    ecx,[edx+0x18f76488]
  40e3b6:	xor    al,0x18
  40e3b8:	jb     0x40e3dc
  40e3ba:	push   ebx
  40e3bb:	inc    edx
  40e3bc:	popa   
  40e3bd:	std    
  40e3be:	ins    BYTE PTR es:[edi],dx
  40e3bf:	sahf   
  40e3c0:	cmp    eax,ebp
  40e3c2:	loope  0x40e41d
  40e3c4:	addr16 jae 0x40e404
  40e3c7:	das    
  40e3c8:	shl    DWORD PTR [ebx+0x4ee52768],0xd0
  40e3cf:	pop    ebx
  40e3d0:	mov    ebp,0x73ffe6f4
  40e3d5:	xor    esi,DWORD PTR ds:[eax-0x14]
  40e3d9:	mov    al,fs:0x316efe4f
  40e3df:	rol    BYTE PTR [eax],cl
  40e3e1:	cmp    al,BYTE PTR [ebp+0x5d]
  40e3e4:	jp     0x40e40d
  40e3e6:	xchg   esp,eax
  40e3e7:	mov    bl,0x6e
  40e3e9:	jg     0x40e435
  40e3eb:	xchg   ebx,eax
  40e3ec:	push   0x8b774d0c
  40e3f1:	bound  edi,QWORD PTR [edx]
  40e3f3:	sbb    eax,0xb9e8b2eb
  40e3f8:	pusha  
  40e3f9:	out    0xa0,eax
  40e3fb:	dec    ebp
  40e3fc:	pusha  
  40e3fd:	push   ebp
  40e3fe:	cmp    BYTE PTR [edi+0x3ebfc7d9],0xe9
  40e405:	in     al,dx
  40e406:	shr    ch,0x6c
  40e409:	ss aad 0x97
  40e40c:	les    ebp,FWORD PTR [ecx]
  40e40e:	ins    DWORD PTR es:[edi],dx
  40e40f:	pop    edx
  40e410:	mov    bh,BYTE PTR [esi+0x62]
  40e413:	ins    BYTE PTR es:[edi],dx
  40e414:	inc    eax
  40e415:	arpl   WORD PTR [ebx-0x70],cx
  40e418:	in     eax,dx
  40e419:	data16 das 
  40e41b:	mov    ah,0x1f
  40e41d:	mul    BYTE PTR [ebp+0x7eb66cf5]
  40e423:	rcl    BYTE PTR [ebx],1
  40e425:	sub    al,0x1
  40e427:	icebp  
  40e428:	test   eax,0x49a04976
  40e42d:	mov    eax,ds:0xd45d6bd5
  40e432:	enter  0x1b62,0xe3
  40e436:	ror    BYTE PTR [ebp-0x1a613098],cl
  40e43c:	in     al,dx
  40e43d:	push   esi
  40e43e:	xor    eax,0x8475336
  40e443:	pop    esi
  40e444:	pusha  
  40e445:	sar    DWORD PTR [edi],cl
  40e447:	loop   0x40e42f
  40e449:	mul    DWORD PTR [ebp-0x4f]
  40e44c:	sub    esi,esi
  40e44e:	fcmovne st,st(5)
  40e450:	daa    
  40e451:	shl    DWORD PTR ds:0x716dd9d,1
  40e457:	xchg   BYTE PTR [ecx-0x7],ch
  40e45a:	xor    DWORD PTR [ecx-0x3fed440],edi
  40e460:	mov    ebx,0xb032ae5f
  40e465:	int3   
  40e466:	and    al,0xb8
  40e468:	pop    esp
  40e469:	sbb    eax,0xc679a883
  40e46e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e46f:	sub    BYTE PTR [esi+0x26496dc],dh
  40e475:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e476:	jmp    0x67e1:0xaae966e5
  40e47d:	inc    ecx
  40e47e:	inc    ecx
  40e47f:	or     al,0x55
  40e481:	cmp    al,0x6f
  40e483:	sti    
  40e484:	outs   dx,BYTE PTR ds:[esi]
  40e485:	scas   al,BYTE PTR es:[edi]
  40e486:	inc    esp
  40e487:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e488:	dec    ebp
  40e489:	dec    edi
  40e48a:	xchg   BYTE PTR [esi],dl
  40e48c:	adc    al,0x44
  40e48e:	sti    
  40e48f:	mov    bh,0xfc
  40e491:	into   
  40e492:	mov    esp,0x9de53d4
  40e497:	je     0x40e4f1
  40e499:	and    ecx,ecx
  40e49b:	in     eax,dx
  40e49c:	icebp  
  40e49d:	adc    ebp,ecx
  40e49f:	enter  0x560a,0xa
  40e4a3:	mov    ebp,0xcbd24fd7
  40e4a8:	or     DWORD PTR [edx+eax*2-0x5d36941],ebx
  40e4af:	in     al,dx
  40e4b0:	xor    ebp,edx
  40e4b2:	cs retf 0x1032
  40e4b6:	mov    dh,0x1c
  40e4b8:	gs mov al,0x13
  40e4bb:	add    ebx,DWORD PTR [eax]
  40e4bd:	gs aad 0xde
  40e4c0:	pop    edx
  40e4c1:	fcom   DWORD PTR [ebp-0x12]
  40e4c4:	or     eax,0x5e11e1d
  40e4c9:	jbe    0x40e46a
  40e4cb:	adc    edx,edx
  40e4cd:	sbb    eax,0xf10a2321
  40e4d2:	sbb    al,0x66
  40e4d4:	mov    WORD PTR [eax],cs
  40e4d6:	jo     0x40e466
  40e4d8:	push   esp
  40e4d9:	or     esi,DWORD PTR [edx+ecx*8]
  40e4dc:	or     DWORD PTR [edi-0x41f1a4f7],ecx
  40e4e2:	std    
  40e4e3:	cli    
  40e4e4:	mov    bl,0xde
  40e4e6:	and    DWORD PTR [ecx+0x6c138503],esi
  40e4ec:	push   esi
  40e4ee:	stos   DWORD PTR es:[edi],eax
  40e4ef:	cmc    
  40e4f0:	sbb    DWORD PTR [edi-0x31],edi
  40e4f3:	test   al,bh
  40e4f5:	ror    dh,cl
  40e4f7:	mov    BYTE PTR [ebp-0x41],dh
  40e4fa:	sbb    al,0x5a
  40e4fc:	lahf   
  40e4fd:	and    eax,0x834ae202
  40e502:	mov    eax,0x24ccfb77
  40e507:	fisub  DWORD PTR [ecx+0x66355330]
  40e50d:	jmp    0x39e11610
  40e512:	loope  0x40e57e
  40e514:	or     dh,BYTE PTR [ebx+0x1ec823f3]
  40e51a:	les    ebp,FWORD PTR [esi+0x1a]
  40e51d:	jg     0x40e544
  40e51f:	sbb    DWORD PTR [ecx+0x4087d45e],ebx
  40e525:	and    BYTE PTR [eax-0x7a],al
  40e528:	repnz push edx
  40e52a:	pop    edi
  40e52b:	jne    0x40e55e
  40e52d:	push   esi
  40e52e:	adc    DWORD PTR [ebx-0xda82db8],ebx
  40e534:	hlt    
  40e535:	mov    BYTE PTR [ebx+0x66],ch
  40e538:	mov    al,ds:0xa55aac8f
  40e53d:	rol    DWORD PTR [ecx-0x52],cl
  40e540:	ds call 0xdbc6:0xb097f58e
  40e548:	test   eax,0x624ec1f6
  40e54d:	call   0x8a54707b
  40e552:	xor    al,0xf7
  40e554:	push   ebp
  40e555:	jbe    0x40e531
  40e557:	mov    esi,0x2cf420b1
  40e55c:	ds in  al,dx
  40e55e:	and    eax,0xbdded391
  40e563:	ins    BYTE PTR es:[edi],dx
  40e564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e565:	inc    ebx
  40e566:	push   ebx
  40e567:	lahf   
  40e568:	sbb    al,0x3e
  40e56a:	mov    ds:0x6f777ac2,al
  40e56f:	div    BYTE PTR [esi]
  40e571:	mov    ss,WORD PTR [edi-0x64]
  40e574:	imul   esp,edi,0xd3603543
  40e57a:	(bad)  
  40e57c:	mov    ds:0xb1098c04,eax
  40e581:	mov    ah,0x44
  40e583:	push   0xa0c4bd1e
  40e588:	lea    esi,fs:[esi-0xb99eb03]
  40e58f:	mov    dl,0xdd
  40e591:	push   ebp
  40e592:	push   esp
  40e593:	inc    eax
  40e594:	xchg   ebp,eax
  40e595:	cli    
  40e596:	test   al,0x3d
  40e598:	sbb    esi,0x11b441e6
  40e59e:	nop
  40e59f:	pop    ds
  40e5a0:	jl     0x40e5e1
  40e5a2:	adc    al,cl
  40e5a4:	add    ah,dl
  40e5a6:	mov    ebp,0x69edeceb
  40e5ab:	mov    ecx,0x40f6525e
  40e5b0:	push   es
  40e5b1:	xchg   esi,eax
  40e5b2:	add    BYTE PTR [ebx+edi*4],0x63
  40e5b6:	sar    ch,1
  40e5b8:	mov    eax,ds:0xbcf350af
  40e5bd:	cmp    DWORD PTR [ecx+edx*4],ebp
  40e5c0:	add    cl,BYTE PTR ds:0x4b6a1d42
  40e5c6:	pop    edx
  40e5c7:	repnz (bad) 
  40e5c9:	jo     0x40e577
  40e5cb:	popf   
  40e5cc:	mov    al,bl
  40e5ce:	(bad)  
  40e5cf:	(bad)  
  40e5d0:	jp     0x40e5a7
  40e5d2:	sar    BYTE PTR [ecx],0x18
  40e5d5:	pop    ds
  40e5d6:	cmp    BYTE PTR [ebx+0x11],dh
  40e5d9:	ins    BYTE PTR es:[edi],dx
  40e5da:	or     al,0x38
  40e5dc:	adc    al,0x8d
  40e5de:	sub    esi,DWORD PTR [ecx+edx*1]
  40e5e1:	mov    esi,0x93c3bac7
  40e5e6:	test   BYTE PTR [ecx+edx*2-0x2f466a5e],dl
  40e5ed:	inc    ebx
  40e5ee:	mov    cl,0xfb
  40e5f0:	rcl    BYTE PTR [eax+0x53cf11df],0x1
  40e5f7:	lods   eax,DWORD PTR ds:[esi]
  40e5f8:	outs   dx,BYTE PTR ds:[esi]
  40e5f9:	xchg   ecx,eax
  40e5fa:	call   0xa4e8:0x85deaf30
  40e601:	(bad)  
  40e602:	mov    eax,0xee06a8f
  40e607:	call   0xb6faba9
  40e60c:	out    0xf2,al
  40e60e:	mov    ds:0xa4352fb4,al
  40e613:	xchg   esi,eax
  40e614:	aas    
  40e615:	or     edx,DWORD PTR [edi+0x3e]
  40e618:	mov    dh,0xc9
  40e61a:	mov    eax,0x332b0a1e
  40e61f:	div    BYTE PTR [ebx]
  40e621:	adc    eax,0xf7aba819
  40e626:	repz pop ds
  40e628:	test   BYTE PTR [esp+eax*2],dl
  40e62b:	sbb    eax,0xdb1c508d
  40e630:	mov    bh,0xa4
  40e632:	test   DWORD PTR [ebx],ebp
  40e634:	rcl    BYTE PTR [ecx],cl
  40e636:	hlt    
  40e637:	mov    al,ds:0xdb57da94
  40e63c:	pop    ebp
  40e63d:	fiadd  DWORD PTR [esi-0x1f]
  40e640:	inc    esp
  40e641:	mov    cl,0xd3
  40e643:	repnz sti 
  40e645:	mov    ah,0xde
  40e647:	sti    
  40e648:	sub    esi,DWORD PTR ds:0x8a34222f
  40e64e:	sub    esp,ecx
  40e650:	lods   al,BYTE PTR ds:[esi]
  40e651:	out    0x18,al
  40e653:	loope  0x40e608
  40e655:	je     0x40e688
  40e657:	imul   ebx,DWORD PTR [eax-0x1fa6c97c],0xffffff9f
  40e65e:	sbb    eax,0x5c735dd8
  40e663:	iret   
  40e664:	sbb    DWORD PTR [edi+0x1],ecx
  40e667:	in     al,0xdc
  40e669:	mov    ebp,0x8523c223
  40e66e:	xchg   edx,eax
  40e66f:	js     0x40e693
  40e671:	and    al,0x70
  40e673:	mov    edx,edx
  40e675:	add    al,0xd4
  40e677:	push   es
  40e678:	addr16 push ecx
  40e67a:	in     eax,dx
  40e67b:	mov    ah,0x81
  40e67d:	aaa    
  40e67e:	iret   
  40e67f:	popa   
  40e680:	and    BYTE PTR [edi],bh
  40e682:	mov    ebp,0x3c84d1b9
  40e687:	popw   ds
  40e689:	jg     0x40e643
  40e68b:	pop    ss
  40e68c:	mov    ebx,DWORD PTR [eax+0x53]
  40e68f:	jnp    0x40e671
  40e691:	icebp  
  40e692:	push   esp
  40e693:	loope  0x40e6ca
  40e695:	mov    edi,0x6fc16b5c
  40e69a:	push   ss
  40e69b:	test   DWORD PTR [edx-0x63fc84eb],ebp
  40e6a1:	daa    
  40e6a2:	adc    DWORD PTR [ebx+0x98fba07],eax
  40e6a8:	sbb    eax,0x2f87425d
  40e6ad:	pusha  
  40e6ae:	aas    
  40e6af:	mov    esi,0x2d8bbfa9
  40e6b4:	outs   dx,DWORD PTR ds:[esi]
  40e6b5:	cmp    BYTE PTR [edi],bl
  40e6b7:	arpl   WORD PTR [ecx],si
  40e6b9:	fsub   st(6),st
  40e6bb:	pop    ss
  40e6bc:	xor    DWORD PTR [edi-0x18],eax
  40e6bf:	out    dx,al
  40e6c0:	mov    eax,ds:0xdb70b012
  40e6c5:	std    
  40e6c6:	repz ficom DWORD PTR [esi]
  40e6c9:	inc    ecx
  40e6ca:	lahf   
  40e6cb:	xchg   ebp,edx
  40e6cd:	fnstcw WORD PTR [ebx+0x1aac79a4]
  40e6d3:	movs   DWORD PTR es:[di],DWORD PTR gs:[si]
  40e6d6:	xchg   BYTE PTR [esi+esi*2],bh
  40e6d9:	xchg   edi,eax
  40e6da:	mov    edi,0xe16837af
  40e6df:	adc    eax,0xebd350f3
  40e6e4:	popf   
  40e6e5:	nop
  40e6e6:	rol    BYTE PTR [esi],0x36
  40e6e9:	mov    al,ds:0x6be63b94
  40e6ee:	bound  ebx,QWORD PTR [ecx-0x50]
  40e6f1:	mov    ebp,0xc33eb09a
  40e6f6:	outs   dx,DWORD PTR ds:[esi]
  40e6f7:	dec    esi
  40e6f8:	push   cs
  40e6f9:	clc    
  40e6fa:	push   eax
  40e6fb:	fwait
  40e6fc:	mov    dl,0x23
  40e6fe:	test   ebx,edi
  40e700:	and    al,dh
  40e702:	mov    ch,0xdc
  40e704:	or     DWORD PTR [esi+0x13],esp
  40e707:	(bad)  
  40e708:	jo     0x40e6fe
  40e70a:	mov    cl,0xed
  40e70c:	je     0x40e6c5
  40e70e:	and    eax,0xe6057d04
  40e713:	nop
  40e714:	hlt    
  40e715:	gs or  eax,0xa7eb2799
  40e71b:	clc    
  40e71c:	mov    dh,0x60
  40e71e:	enter  0x5604,0x5f
  40e722:	mov    esp,edx
  40e724:	stos   DWORD PTR es:[edi],eax
  40e725:	sbb    BYTE PTR [esi],bl
  40e727:	nop
  40e728:	add    ebp,DWORD PTR [edi]
  40e72a:	push   ebp
  40e72b:	xor    bh,BYTE PTR [ebx-0xa9b9963]
  40e731:	inc    ecx
  40e732:	jo     0x40e784
  40e734:	cld    
  40e735:	shl    DWORD PTR [ebx-0x59],1
  40e738:	out    dx,al
  40e739:	dec    edi
  40e73a:	sbb    ch,BYTE PTR [edi]
  40e73c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e73d:	and    BYTE PTR [edx-0x68a1dab2],cl
  40e743:	out    dx,eax
  40e744:	mov    esp,0x6d791a71
  40e749:	and    ah,BYTE PTR [ebx-0x1c2f09ae]
  40e74f:	loope  0x40e7a8
  40e751:	xchg   ebx,eax
  40e752:	mov    esi,0xe6beef8a
  40e757:	mov    ebx,0x36415bab
  40e75c:	cld    
  40e75d:	dec    ecx
  40e75e:	dec    edx
  40e75f:	add    ebp,DWORD PTR [ebx+0x2069da88]
  40e765:	push   esp
  40e766:	push   ecx
  40e767:	mov    edx,0x4472a180
  40e76c:	test   al,0x59
  40e76e:	inc    edi
  40e76f:	popa   
  40e770:	mov    eax,0xdd69dace
  40e775:	fsubr  QWORD PTR [eax]
  40e777:	xchg   ebp,eax
  40e778:	add    ebx,ecx
  40e77a:	cmp    edx,DWORD PTR ds:0xe4fc
  40e77f:	scas   eax,DWORD PTR es:[edi]
  40e780:	pop    ds
  40e781:	imul   ecx,edi,0x90034a6d
  40e787:	fwait
  40e788:	in     al,dx
  40e789:	mov    ss,WORD PTR [ecx+0x38]
  40e78c:	cmc    
  40e78d:	jl     0x40e74d
  40e78f:	or     BYTE PTR [esi-0x5463ebe6],dl
  40e795:	outs   dx,BYTE PTR ds:[esi]
  40e796:	les    eax,FWORD PTR [edx]
  40e798:	in     eax,0x27
  40e79a:	push   ecx
  40e79b:	sub    dh,BYTE PTR [eax]
  40e79d:	xor    edi,esp
  40e79f:	es jbe 0x40e7fd
  40e7a2:	mov    ?,WORD PTR [esi-0x16]
  40e7a5:	xchg   ecx,eax
  40e7a6:	mov    dl,0x4e
  40e7a8:	les    edi,FWORD PTR ds:0xd6a05f98
  40e7ae:	popf   
  40e7af:	pop    ds
  40e7b0:	push   ebx
  40e7b1:	stos   DWORD PTR es:[edi],eax
  40e7b2:	nop
  40e7b3:	add    BYTE PTR [esi-0x8],bl
  40e7b6:	rol    edi,1
  40e7b8:	xchg   BYTE PTR [ebp+0x37db27e2],dl
  40e7be:	outs   dx,DWORD PTR ds:[esi]
  40e7bf:	lods   eax,DWORD PTR ds:[esi]
  40e7c0:	lea    esp,[esi-0x742833fd]
  40e7c6:	mov    eax,0x94f91bfd
  40e7cb:	mov    cl,0xe9
  40e7cd:	and    DWORD PTR [esp+esi*2],esp
  40e7d0:	loopne 0x40e7c1
  40e7d2:	sbb    cl,al
  40e7d4:	jb     0x40e7b0
  40e7d6:	dec    ebp
  40e7d7:	(bad)  
  40e7d8:	test   al,0x71
  40e7da:	and    BYTE PTR [ecx-0xc],bh
  40e7dd:	(bad)
  40e7e2:	ins    DWORD PTR es:[edi],dx
  40e7e3:	std    
  40e7e4:	dec    ebp
  40e7e5:	scas   eax,DWORD PTR es:[edi]
  40e7e6:	ins    BYTE PTR es:[edi],dx
  40e7e7:	xchg   dh,ch
  40e7e9:	push   edx
  40e7ea:	cwde   
  40e7eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7ec:	pop    esp
  40e7ed:	push   ecx
  40e7ee:	pop    ebp
  40e7ef:	mov    esp,0x3389081a
  40e7f4:	loopne 0x40e7e0
  40e7f6:	inc    edi
  40e7f7:	cld    
  40e7f8:	popf   
  40e7f9:	mov    bl,0x61
  40e7fb:	cs (bad) 
  40e7fd:	iret   
  40e7fe:	scas   al,BYTE PTR es:[edi]
  40e7ff:	jg     0x40e83a
  40e801:	(bad)  
  40e802:	xor    al,0xb7
  40e804:	test   ah,dh
  40e806:	push   0x62
  40e808:	gs xor eax,0xbf01c07a
  40e80e:	or     cl,BYTE PTR [edx]
  40e810:	clc    
  40e811:	push   ds
  40e812:	jmp    0x821f:0x376b90f7
  40e819:	pop    edx
  40e81a:	shr    BYTE PTR [edi-0x5e99a05f],1
  40e820:	sub    edx,DWORD PTR [ecx+0x3bc1fbfb]
  40e826:	mov    edx,0x73fd5534
  40e82b:	ret    
  40e82c:	or     eax,0xe669631f
  40e831:	(bad)  
  40e832:	in     al,0x2b
  40e834:	out    dx,al
  40e835:	dec    esp
  40e836:	repz xchg ebp,eax
  40e838:	pop    ds
  40e839:	lods   al,BYTE PTR ds:[esi]
  40e83a:	fstp   TBYTE PTR [ecx]
  40e83c:	xor    eax,0x85d0e3f3
  40e841:	pcmpeqb mm2,QWORD PTR [esi+0xc]
  40e845:	ins    BYTE PTR es:[edi],dx
  40e846:	cmp    BYTE PTR [eax-0x1fb09d4c],dl
  40e84c:	cmc    
  40e84d:	mov    BYTE PTR [edi],bh
  40e84f:	hlt    
  40e850:	aaa    
  40e851:	shl    BYTE PTR [edi+0x5d14896e],1
  40e857:	jge    0x40e8ca
  40e859:	fld    QWORD PTR [ebx+0x2499528b]
  40e85f:	std    
  40e860:	pop    ss
  40e861:	call   0x182ebd02
  40e866:	popf   
  40e867:	(bad)  
  40e868:	cmc    
  40e869:	mov    dh,BYTE PTR [edi+0x55]
  40e86c:	aad    0x62
  40e86e:	lock ins DWORD PTR es:[edi],dx
  40e870:	ror    DWORD PTR [ebp-0x28],1
  40e873:	aaa    
  40e874:	sbb    BYTE PTR [ecx],0x25
  40e877:	aaa    
  40e878:	clc    
  40e879:	push   esi
  40e87a:	inc    edx
  40e87b:	lods   eax,DWORD PTR ds:[esi]
  40e87c:	in     al,dx
  40e87d:	mov    eax,ds:0xde92cf77
  40e882:	test   DWORD PTR [ebx+0x3c],ecx
  40e885:	repnz ins BYTE PTR es:[edi],dx
  40e887:	rcr    DWORD PTR [edi-0x3f67e4d8],cl
  40e88d:	mov    al,ds:0xcbab930f
  40e892:	popa   
  40e893:	inc    eax
  40e894:	aas    
  40e895:	fs push esi
  40e897:	(bad)  
  40e898:	addr16 mov eax,0x4673851d
  40e89e:	and    eax,0xb3181425
  40e8a3:	jae    0x40e8dd
  40e8a5:	imul   eax,DWORD PTR [esi-0x38],0x66527f5c
  40e8ac:	dec    esp
  40e8ad:	cmp    ah,BYTE PTR [eax+0x35]
  40e8b0:	retf   0x1958
  40e8b3:	sub    BYTE PTR [edi],al
  40e8b5:	jo     0x40e8bc
  40e8b7:	inc    eax
  40e8b8:	xor    eax,0x4ca2c9
  40e8bd:	add    esi,DWORD PTR [esi+0x781d4a7f]
  40e8c3:	pusha  
  40e8c4:	mov    eax,ds:0x14cb881b
  40e8c9:	and    dl,BYTE PTR [ecx+0x7c61e748]
  40e8cf:	mov    ds:0x4de5b9ca,al
  40e8d4:	push   esi
  40e8d5:	retf   0x7f5c
  40e8d8:	cwde   
  40e8d9:	mov    ecx,fs
  40e8db:	je     0x40e91e
  40e8dd:	in     eax,dx
  40e8de:	inc    esp
  40e8df:	loop   0x40e951
  40e8e1:	mov    eax,0x7cf9d351
  40e8e6:	xchg   ebx,eax
  40e8e7:	pushf  
  40e8e8:	sahf   
  40e8e9:	(bad)
  40e8ec:	cmp    BYTE PTR [edi-0x122e587a],0x67
  40e8f3:	sub    al,0x86
  40e8f5:	dec    eax
  40e8f6:	pop    es
  40e8f7:	inc    ebp
  40e8f8:	daa    
  40e8f9:	daa    
  40e8fa:	inc    eax
  40e8fb:	das    
  40e8fc:	jecxz  0x40e8ff
  40e8fe:	xor    bl,cl
  40e900:	or     eax,0x523cd3b5
  40e905:	mov    al,0x3c
  40e907:	sub    eax,DWORD PTR [ecx]
  40e909:	in     eax,0xa5
  40e90b:	sti    
  40e90c:	repz dec ecx
  40e90e:	cs jbe 0x40e8d0
  40e911:	cdq    
  40e912:	(bad)  ds:0xe3a2ba08
  40e918:	jb     0x40e94b
  40e91a:	adc    al,0xfd
  40e91c:	pop    ss
  40e91d:	push   ebx
  40e91e:	mov    esi,0x74554aca
  40e923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e924:	(bad)  
  40e925:	push   ebp
  40e926:	test   eax,0x6efca0da
  40e92b:	int    0xc2
  40e92d:	mov    ah,0x7d
  40e92f:	xchg   edi,eax
  40e930:	popf   
  40e931:	push   ebp
  40e932:	in     al,0x1c
  40e934:	pop    esi
  40e935:	call   0x3f6d:0x288abd1d
  40e93c:	adc    dh,BYTE PTR cs:[ebp-0x3f]
  40e940:	cmp    esp,DWORD PTR [ebp+0xccdad6a]
  40e946:	jecxz  0x40e8d4
  40e948:	push   ds
  40e949:	icebp  
  40e94a:	or     DWORD PTR [eax],0x5cda0cbd
  40e950:	mov    edi,0xca2b203c
  40e955:	xchg   ecx,eax
  40e956:	(bad)  
  40e957:	popa   
  40e958:	cmp    eax,0x49ee5d6b
  40e95d:	or     al,0x3d
  40e95f:	imul   edx,DWORD PTR [edx+0x31],0x1c27fb8e
  40e966:	and    al,0xfe
  40e968:	mov    edi,0x4e449c75
  40e96d:	mov    bl,0xb4
  40e96f:	addr16 sbb al,0xf8
  40e972:	jo     0x40e963
  40e974:	adc    BYTE PTR [edx+edi*1+0x486d2daa],bh
  40e97b:	jmp    0x40e91f
  40e97d:	dec    ebp
  40e97e:	fs sahf 
  40e980:	out    dx,al
  40e981:	jae    0x40e937
  40e983:	xchg   ecx,eax
  40e984:	(bad)  
  40e985:	loope  0x40e986
  40e987:	jge    0x40e9f7
  40e989:	mov    cl,BYTE PTR [eax+0x6e20463c]
  40e98f:	aad    0xeb
  40e991:	xchg   ecx,eax
  40e992:	(bad)  
  40e993:	mov    ecx,0x393e4d50
  40e998:	adc    al,0x9d
  40e99a:	cmp    BYTE PTR [eax],bl
  40e99c:	fidivr WORD PTR [eax+0xd]
  40e99f:	push   ds
  40e9a0:	adc    al,0x34
  40e9a2:	nop
  40e9a3:	ss inc eax
  40e9a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9a6:	test   BYTE PTR [esi+0x3e0d3540],dh
  40e9ac:	adc    al,0xa8
  40e9ae:	jecxz  0x40e97b
  40e9b0:	popa   
  40e9b1:	out    dx,al
  40e9b2:	push   esp
  40e9b3:	fdiv   QWORD PTR [esi-0x61d9d0ba]
  40e9b9:	ja     0x40e940
  40e9bb:	out    dx,eax
  40e9bc:	pop    eax
  40e9bd:	test   ecx,edi
  40e9bf:	pop    ss
  40e9c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9c1:	in     eax,0xd
  40e9c3:	icebp  
  40e9c4:	and    esi,DWORD PTR [ecx]
  40e9c6:	jne    0x40ea3b
  40e9c8:	cdq    
  40e9c9:	pop    ebp
  40e9ca:	outs   dx,DWORD PTR ds:[esi]
  40e9cb:	adc    cl,ch
  40e9cd:	dec    ebp
  40e9ce:	test   BYTE PTR [esi+edi*2-0x645871fe],ah
  40e9d5:	les    ebx,FWORD PTR [ebx-0x26]
  40e9d8:	mov    esp,0x516b51c0
  40e9dd:	imul   ecx,DWORD PTR [ebx+eax*2],0xffffffc6
  40e9e1:	aas    
  40e9e2:	fs mov eax,0x6d125ee0
  40e9e8:	cli    
  40e9e9:	aam    0x13
  40e9eb:	and    al,0xf2
  40e9ed:	mov    esp,DWORD PTR [eax-0x40]
  40e9f0:	or     bh,ch
  40e9f2:	sahf   
  40e9f3:	je     0x40ea0a
  40e9f5:	add    DWORD PTR [edi-0x75ccb03],eax
  40e9fb:	imul   BYTE PTR [ecx+esi*4+0x69]
  40e9ff:	mov    ecx,0xec82a77e
  40ea04:	dec    eax
  40ea05:	xor    eax,0x47c7477c
  40ea0a:	dec    eax
  40ea0b:	jmp    0x2749:0x2bfbf2
  40ea12:	aaa    
  40ea13:	cld    
  40ea14:	or     DWORD PTR [ecx-0x3d],ebp
  40ea17:	xchg   ebp,eax
  40ea18:	xor    ah,BYTE PTR [ebx]
  40ea1a:	xchg   ebp,eax
  40ea1b:	cld    
  40ea1c:	add    BYTE PTR [edx],dh
  40ea1e:	push   esi
  40ea1f:	pushf  
  40ea20:	sbb    DWORD PTR [edx-0x1437b364],edi
  40ea26:	dec    edx
  40ea27:	mov    bl,0x30
  40ea29:	cmp    DWORD PTR [ebx+0xe52f932],esp
  40ea2f:	push   es
  40ea30:	cmc    
  40ea31:	rcr    DWORD PTR [ebp+0x2f17838b],0x75
  40ea38:	mov    BYTE PTR [ebp+0xa],cl
  40ea3b:	fld    TBYTE PTR [eax+0x3f]
  40ea3e:	xchg   ecx,eax
  40ea3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea40:	loop   0x40ea51
  40ea42:	pusha  
  40ea43:	fwait
  40ea44:	and    al,0x57
  40ea46:	lea    esi,[ebp-0xf]
  40ea49:	ret    
  40ea4a:	dec    ebp
  40ea4b:	popa   
  40ea4c:	(bad)
  40ea50:	push   esp
  40ea51:	imul   edi,DWORD PTR [ecx],0x3b
  40ea54:	adc    al,0x3b
  40ea56:	push   ds
  40ea57:	jbe    0x40e9ec
  40ea59:	popf   
  40ea5a:	mov    edi,0x636cd61c
  40ea5f:	mov    bl,0xad
  40ea61:	xchg   DWORD PTR [edi-0x1b],ebp
  40ea64:	pop    es
  40ea65:	push   ebx
  40ea66:	inc    ebp
  40ea67:	cli    
  40ea68:	jp     0x40e9f1
  40ea6a:	jle    0x40eab6
  40ea6c:	xlat   BYTE PTR ds:[ebx]
  40ea6d:	mov    bh,0xbb
  40ea6f:	mov    ds:0x978bf657,eax
  40ea74:	mov    esi,0x170d4fca
  40ea79:	push   esi
  40ea7a:	mov    WORD PTR [ecx],cs
  40ea7c:	in     eax,dx
  40ea7d:	stc    
  40ea7e:	add    al,0x3e
  40ea80:	leave  
  40ea81:	clc    
  40ea82:	aaa    
  40ea83:	jnp    0x40ea59
  40ea85:	cwde   
  40ea86:	mov    ah,0x89
  40ea88:	sub    dl,BYTE PTR [ebx]
  40ea8a:	stos   DWORD PTR es:[edi],eax
  40ea8b:	clc    
  40ea8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea8d:	dec    eax
  40ea8e:	mov    ebx,esi
  40ea90:	imul   edx,ebp,0xfffffff4
  40ea93:	push   cs
  40ea94:	outs   dx,BYTE PTR ds:[esi]
  40ea95:	addr16 sbb al,0x9
  40ea98:	push   cs
  40ea99:	cdq    
  40ea9a:	ret    
  40ea9b:	mov    esi,esp
  40ea9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea9e:	mov    bh,0xa3
  40eaa0:	pop    edi
  40eaa1:	or     esp,edx
  40eaa3:	fidivr DWORD PTR [ebp-0x48]
  40eaa6:	mov    ch,0x24
  40eaa8:	test   eax,0xda33f54a
  40eaad:	ds test eax,0x4a718a86
  40eab3:	imul   esp,DWORD PTR [ebx],0xffffffa7
  40eab6:	pop    edx
  40eab7:	push   ecx
  40eab8:	or     eax,0xb76c984d
  40eabd:	sbb    eax,0xe8efffd4
  40eac2:	ins    BYTE PTR es:[edi],dx
  40eac3:	mov    bh,0xcc
  40eac5:	into   
  40eac6:	aad    0x40
  40eac8:	daa    
  40eac9:	aaa    
  40eaca:	inc    esp
  40eacb:	inc    esp
  40eacc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eacd:	push   ebp
  40eace:	cdq    
  40eacf:	xchg   esp,eax
  40ead0:	lock mov cl,dl
  40ead3:	xchg   ecx,eax
  40ead4:	mov    ebp,0xf54ee34c
  40ead9:	xor    al,0x64
  40eadb:	push   edx
  40eadc:	sbb    esi,esi
  40eade:	add    al,0x87
  40eae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eae1:	sbb    DWORD PTR [edi],eax
  40eae3:	rcl    DWORD PTR [esp+esi*2-0x12],0xa
  40eae8:	cmc    
  40eae9:	cmp    al,0xf7
  40eaeb:	pop    esp
  40eaec:	ja     0x40eb33
  40eaee:	inc    ebp
  40eaef:	and    ebp,DWORD PTR [ecx-0x77]
  40eaf2:	mov    esp,0xac89ee15
  40eaf7:	mov    ?,esi
  40eaf9:	iret   
  40eafa:	jg     0x40eae2
  40eafc:	rol    cl,0xb
  40eaff:	cs (bad) 
  40eb01:	sub    dh,BYTE PTR [edi-0x41a687ba]
  40eb07:	into   
  40eb08:	cld    
  40eb09:	mov    cl,0xcc
  40eb0b:	arpl   WORD PTR ds:0xfa48c29e,si
  40eb11:	jno    0x40eaf6
  40eb13:	retf   0xee43
  40eb16:	sbb    eax,0xeec12555
  40eb1b:	(bad)  
  40eb1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb1d:	hlt    
  40eb1e:	aaa    
  40eb1f:	cmp    BYTE PTR [esp+ebp*4+0x36],cl
  40eb23:	jge    0x40eb9e
  40eb25:	mov    esp,0xe735049d
  40eb2a:	mov    ebp,0xd0385429
  40eb2f:	mov    WORD PTR [eax+0x23],?
  40eb32:	mov    cl,0x73
  40eb34:	or     BYTE PTR [ecx+0x2b],ch
  40eb37:	cmc    
  40eb38:	loopne 0x40ebab
  40eb3a:	dec    eax
  40eb3b:	ja     0x40eb54
  40eb3d:	mov    edx,0xa37c2fcb
  40eb42:	sub    eax,0x50fa82c
  40eb47:	and    BYTE PTR [ecx+ebp*1+0x178bbe09],0x35
  40eb4f:	inc    ecx
  40eb50:	call   0x4057fecb
  40eb55:	into   
  40eb56:	sub    BYTE PTR [ecx+0x698b843c],dl
  40eb5c:	adc    ecx,DWORD PTR [edi]
  40eb5e:	jmp    0x40ebc1
  40eb60:	push   edx
  40eb61:	xor    BYTE PTR [esi+0xf],ah
  40eb64:	dec    ebp
  40eb65:	imul   esi,DWORD PTR [edi+edi*1-0x43455d84],0xbeef6ec1
  40eb70:	xchg   esp,eax
  40eb71:	in     eax,dx
  40eb72:	pop    ebp
  40eb73:	adc    esp,DWORD PTR [ebx+0x5b35ed0c]
  40eb79:	pop    eax
  40eb7a:	retf   
  40eb7b:	inc    eax
  40eb7c:	inc    edx
  40eb7d:	sbb    DWORD PTR cs:[ebx-0x77],edi
  40eb81:	mov    esi,0x2241b55b
  40eb86:	imul   DWORD PTR [esi-0x4d9e5374]
  40eb8c:	jp     0x40eb7e
  40eb8e:	push   edi
  40eb8f:	test   BYTE PTR [eax+0x282c8868],al
  40eb95:	sub    eax,esp
  40eb97:	pop    eax
  40eb98:	dec    esi
  40eb99:	imul   edi,DWORD PTR [edi-0x4cffdd9c],0xffffffab
  40eba0:	ins    DWORD PTR es:[edi],dx
  40eba1:	(bad)
  40eba6:	(bad)  [ecx]
  40eba8:	sahf   
  40eba9:	test   ah,al
  40ebab:	ficomp DWORD PTR [edi-0x6b]
  40ebae:	adc    eax,0x7c6c0745
  40ebb3:	cli    
  40ebb4:	sbb    edi,DWORD PTR [ecx]
  40ebb6:	inc    esp
  40ebb7:	cmc    
  40ebb8:	cs xchg edi,eax
  40ebba:	mov    eax,0x29d02bda
  40ebbf:	imul   ecx,esi,0xffffff86
  40ebc2:	push   edi
  40ebc3:	mov    al,ds:0x554b55f4
  40ebc8:	sub    BYTE PTR [ebp-0x61],0x67
  40ebcc:	ss (bad) 
  40ebcf:	aad    0x6c
  40ebd1:	gs mov edi,es
  40ebd4:	sub    BYTE PTR [esi],0x51
  40ebd7:	mov    ds:0x98c9678e,al
  40ebdc:	mov    ds:0xce793836,al
  40ebe1:	(bad)  
  40ebe3:	jne    0x40ebfe
  40ebe5:	push   ss
  40ebe6:	mov    cl,0x4c
  40ebe8:	aaa    
  40ebe9:	cli    
  40ebea:	mov    bl,0x4a
  40ebec:	sar    ebx,cl
  40ebee:	(bad)  
  40ebef:	mov    al,ds:0xbfd45cfd
  40ebf4:	sbb    DWORD PTR [edx],0x4de701f7
  40ebfa:	(bad)  
  40ebfb:	push   cs
  40ebfc:	mov    eax,0x593ba139
  40ec01:	jns    0x40ebe8
  40ec03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec04:	aaa    
  40ec05:	call   0xf777cf80
  40ec0a:	or     eax,0x8b0e0772
  40ec0f:	fist   WORD PTR cs:[eax-0x6fd1ed04]
  40ec16:	and    ecx,DWORD PTR [eax-0x2e44ae88]
  40ec1c:	imul   edi,DWORD PTR [eax-0x7c55031c],0xb9aaf2e7
  40ec26:	jno    0x40ec91
  40ec28:	sbb    al,0x71
  40ec2a:	jae    0x40ebce
  40ec2c:	push   0x5ca083af
  40ec31:	ds hlt 
  40ec33:	shl    DWORD PTR [edx],cl
  40ec35:	ror    DWORD PTR [esi+0x54d9561a],0x61
  40ec3c:	push   0x43a7428f
  40ec41:	mov    ds:0xf431478f,eax
  40ec46:	cmp    al,0xe3
  40ec48:	loop   0x40ebde
  40ec4a:	aaa    
  40ec4b:	(bad)  
  40ec4c:	jp     0x40ec3e
  40ec4e:	push   0x7c53d4a3
  40ec53:	inc    ebp
  40ec54:	xchg   esp,eax
  40ec55:	addr16 push es
  40ec57:	mov    dh,0x48
  40ec59:	in     eax,dx
  40ec5a:	dec    esi
  40ec5b:	lds    esp,FWORD PTR [edx+0x6543b1e]
  40ec61:	js     0x40ec2f
  40ec63:	cmp    ecx,DWORD PTR [edx-0x23b61491]
  40ec69:	mov    DWORD PTR [eax],eax
  40ec6b:	mov    eax,0x97a2ccb
  40ec70:	lods   al,BYTE PTR ds:[esi]
  40ec71:	sbb    eax,0x5c576a5d
  40ec76:	adc    DWORD PTR [edx+0x586a0bf],0xffffffc9
  40ec7d:	dec    edx
  40ec7e:	mov    al,ds:0x993d98b0
  40ec83:	lds    bx,DWORD PTR [eax+0x38593146]
  40ec8a:	adc    al,0x24
  40ec8c:	call   0xdbc2:0xfe7daad6
  40ec93:	mov    ecx,0xc016af91
  40ec98:	les    eax,FWORD PTR [eax-0x7]
  40ec9b:	cmp    BYTE PTR [edi+0x58],0x5
  40ec9f:	cmp    BYTE PTR [esi+0x32],al
  40eca2:	ins    DWORD PTR es:[edi],dx
  40eca3:	mov    bl,al
  40eca5:	sub    BYTE PTR [edx],bl
  40eca7:	mov    ah,0x11
  40eca9:	imul   eax,DWORD PTR [ecx+eiz*2],0xf
  40ecad:	leave  
  40ecae:	xchg   ebx,eax
  40ecaf:	and    ecx,ecx
  40ecb1:	(bad)  
  40ecb2:	pop    ss
  40ecb3:	push   eax
  40ecb4:	scas   eax,DWORD PTR es:[edi]
  40ecb5:	sbb    esi,DWORD PTR [esi]
  40ecb7:	sub    eax,0xae2f43f9
  40ecbc:	ds xchg ebp,eax
  40ecbe:	sbb    DWORD PTR [ebp+0x2e],ecx
  40ecc1:	retf   
  40ecc2:	add    BYTE PTR [edi-0x36],bh
  40ecc5:	mov    ecx,0x38f95c20
  40ecca:	mov    edi,cs
  40eccc:	sub    BYTE PTR [esi+0x71],bh
  40eccf:	cld    
  40ecd0:	cdq    
  40ecd1:	sti    
  40ecd2:	sub    eax,0x35dbb5bd
  40ecd7:	pop    esi
  40ecd8:	pushf  
  40ecd9:	add    al,0x23
  40ecdb:	jl     0x40ed53
  40ecdd:	jmp    0x2d5a:0x5ae590d8
  40ece4:	pop    eax
  40ece5:	pop    edi
  40ece6:	es pop eax
  40ece8:	test   al,0x81
  40ecea:	inc    ebp
  40eceb:	xor    dl,cl
  40eced:	and    BYTE PTR [ebx+0x4a79c89d],bl
  40ecf3:	cmovl  ebp,DWORD PTR [eax+0x2ebc5cdb]
  40ecfa:	arpl   WORD PTR [ecx-0x1e],ax
  40ecfd:	lods   eax,DWORD PTR ds:[esi]
  40ecfe:	cmc    
  40ecff:	addr16 add eax,0xd65244fd
  40ed05:	dec    edi
  40ed06:	xchg   ebp,eax
  40ed07:	fcmovb st,st(4)
  40ed09:	ins    DWORD PTR es:[edi],dx
  40ed0a:	sahf   
  40ed0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed0c:	sub    dh,BYTE PTR [edi+0x35]
  40ed0f:	fld    QWORD PTR [edx+0x47970b98]
  40ed15:	loop   0x40ed50
  40ed17:	mov    dl,0xc3
  40ed19:	xlat   BYTE PTR ds:[ebx]
  40ed1a:	int3   
  40ed1b:	nop
  40ed1c:	bnd je 0x40ed8c
  40ed1f:	je     0x40ecb2
  40ed21:	or     eax,0xf7aca534
  40ed26:	int    0xed
  40ed28:	sbb    BYTE PTR [ecx+0x4801ae4],bh
  40ed2e:	xchg   ebp,eax
  40ed2f:	(bad)  
  40ed30:	mov    eax,0xa3326bc6
  40ed35:	jg     0x40ed2f
  40ed37:	dec    ecx
  40ed38:	(bad)  
  40ed39:	int3   
  40ed3a:	inc    esp
  40ed3b:	xlat   BYTE PTR ds:[ebx]
  40ed3c:	cwde   
  40ed3d:	gs jmp 0x40ed6e
  40ed40:	sahf   
  40ed41:	push   es
  40ed42:	jmp    0x8455:0x46a7ddc7
  40ed49:	xor    al,0xef
  40ed4b:	pop    ds
  40ed4c:	ficom  DWORD PTR [ecx]
  40ed4e:	jecxz  0x40edc0
  40ed50:	int3   
  40ed51:	push   ebx
  40ed52:	add    eax,DWORD PTR ds:0xdebc9706
  40ed58:	sub    BYTE PTR [ebx-0x7e],ch
  40ed5b:	sti    
  40ed5c:	jmp    0x40ed1f
  40ed5e:	cmp    dh,dh
  40ed60:	ror    ecx,cl
  40ed62:	pop    eax
  40ed63:	sub    eax,0xafcac0c1
  40ed68:	fstp   st(4)
  40ed6a:	retf   
  40ed6b:	pop    ds
  40ed6c:	mov    edx,0x9dc5b0e0
  40ed71:	into   
  40ed72:	scas   al,BYTE PTR es:[edi]
  40ed73:	call   0xe37a:0x401e1574
  40ed7a:	xor    al,0xef
  40ed7c:	add    BYTE PTR [ecx],bh
  40ed7e:	stc    
  40ed7f:	in     al,0x8f
  40ed81:	lods   eax,DWORD PTR ds:[esi]
  40ed82:	and    DWORD PTR [edx+eiz*2],ebx
  40ed85:	pop    eax
  40ed86:	out    dx,al
  40ed87:	in     eax,0x34
  40ed89:	cmp    edi,eax
  40ed8b:	inc    bp
  40ed8d:	adc    BYTE PTR [esi],dh
  40ed8f:	dec    esi
  40ed90:	pop    ebx
  40ed91:	jbe    0x40ede2
  40ed93:	mov    ah,0xff
  40ed95:	adc    BYTE PTR [eax-0x22a491c9],bh
  40ed9b:	sahf   
  40ed9c:	push   0x19ba922b
  40eda1:	cmc    
  40eda2:	jbe    0x40ed96
  40eda4:	mov    ebp,0xe5d1dec7
  40eda9:	pop    ds
  40edaa:	and    esp,edx
  40edac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edad:	es jmp 0xd63358f3
  40edb3:	outs   dx,DWORD PTR ds:[esi]
  40edb4:	cwde   
  40edb5:	push   cs
  40edb6:	mov    ebx,0x185eafb6
  40edbb:	jge    0x40ed66
  40edbd:	mov    DWORD PTR [edi-0x1f],esi
  40edc0:	fwait
  40edc1:	cmp    esp,ecx
  40edc3:	jno    0x40ee43
  40edc5:	and    ecx,DWORD PTR [edi+0x8]
  40edc8:	js     0x40edf7
  40edca:	fiadd  DWORD PTR [ebx+0x72476795]
  40edd0:	mov    dh,cl
  40edd2:	out    dx,eax
  40edd3:	(bad)  
  40edd4:	bound  edx,QWORD PTR [esi+0x127e1f90]
  40edda:	add    al,0x34
  40eddc:	ins    DWORD PTR es:[edi],dx
  40eddd:	jmp    0x6737:0x302ec3eb
  40ede4:	add    cl,BYTE PTR ds:0x6fee17e7
  40edea:	jb     0x40edb7
  40edec:	je     0x40ee47
  40edee:	lods   al,BYTE PTR ds:[esi]
  40edef:	xchg   ecx,eax
  40edf0:	mov    es,WORD PTR [ecx+0x61]
  40edf3:	(bad)  
  40edf4:	xlat   BYTE PTR ds:[ebx]
  40edf5:	add    eax,0xa08bd734
  40edfa:	int    0x6f
  40edfc:	rcr    BYTE PTR [eax+0x20],1
  40edff:	xchg   esi,eax
  40ee00:	and    DWORD PTR [edx+0x34395657],edx
  40ee06:	and    dh,BYTE PTR ds:0x3fad287c
  40ee0c:	outs   dx,BYTE PTR ds:[esi]
  40ee0d:	push   ebx
  40ee0e:	push   0xfe494362
  40ee13:	out    dx,eax
  40ee14:	out    dx,eax
  40ee15:	jnp    0x40ee08
  40ee17:	xchg   ebp,eax
  40ee18:	pop    ds
  40ee19:	cld    
  40ee1a:	mov    dl,0x22
  40ee1c:	jp     0x40ee13
  40ee1e:	mov    ah,BYTE PTR [ecx+0x6e3d5150]
  40ee24:	inc    esi
  40ee25:	sub    al,BYTE PTR [eax-0x1c]
  40ee28:	dec    ebp
  40ee29:	jbe    0x40ede2
  40ee2b:	and    al,0x35
  40ee2d:	ret    0xc753
  40ee30:	enter  0xd146,0x23
  40ee34:	xchg   BYTE PTR [esi-0x29],dl
  40ee37:	outs   dx,BYTE PTR ds:[esi]
  40ee38:	pop    es
  40ee39:	js     0x40edd2
  40ee3b:	inc    edx
  40ee3c:	mov    BYTE PTR ds:0x3b42247e,ah
  40ee42:	push   ds
  40ee43:	cmp    al,0xbd
  40ee45:	adc    bh,bh
  40ee47:	mov    dl,0x9
  40ee49:	test   eax,0x916636a7
  40ee4e:	hlt    
  40ee4f:	popf   
  40ee50:	loope  0x40edd3
  40ee52:	into   
  40ee53:	stc    
  40ee54:	cmp    cl,BYTE PTR [ebp-0x61]
  40ee57:	or     DWORD PTR [eax],edi
  40ee59:	dec    eax
  40ee5a:	dec    esp
  40ee5b:	jmp    0x43c42a8e
  40ee60:	jnp    0x40ee6c
  40ee62:	sbb    BYTE PTR [esi+eiz*8-0xf],0x11
  40ee67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee68:	mov    ss,ecx
  40ee6a:	jecxz  0x40eed3
  40ee6c:	popa   
  40ee6d:	fucom  st(2)
  40ee6f:	jb     0x40ee15
  40ee71:	push   es
  40ee72:	dec    ecx
  40ee73:	repz out dx,eax
  40ee75:	pop    esi
  40ee76:	xchg   ebx,eax
  40ee77:	jp     0x40ee49
  40ee79:	add    bl,dh
  40ee7b:	retf   
  40ee7c:	jns    0x40ee48
  40ee7e:	xor    bh,BYTE PTR [eax+0x1bd1610]
  40ee84:	shr    BYTE PTR [esi-0x4a],0x6f
  40ee88:	(bad)  
  40ee89:	je     0x40eef8
  40ee8b:	std    
  40ee8c:	cmp    bl,dh
  40ee8e:	jmp    0xfcb8:0x925f7c05
  40ee95:	shl    BYTE PTR [ecx],cl
  40ee97:	leave  
  40ee98:	rcl    ebx,0x3e
  40ee9b:	lods   al,BYTE PTR ds:[esi]
  40ee9c:	jne    0x40eecc
  40ee9e:	mov    edx,0xb8ea5b0c
  40eea3:	sub    eax,DWORD PTR [edx-0x1f]
  40eea6:	adc    cl,BYTE PTR [ecx+0x369a3bac]
  40eeac:	mov    ch,bl
  40eeae:	or     ebp,DWORD PTR [ecx]
  40eeb0:	inc    eax
  40eeb1:	xchg   ebp,eax
  40eeb2:	or     BYTE PTR fs:[edx-0x4b],ah
  40eeb6:	mov    ah,dh
  40eeb8:	retf   
  40eeb9:	add    BYTE PTR [esp+edx*4+0x8],dl
  40eebd:	sbb    eax,DWORD PTR [eax+0x7]
  40eec0:	je     0x40ee93
  40eec2:	inc    esi
  40eec3:	fadd   st,st(1)
  40eec5:	in     eax,dx
  40eec6:	fxch   st(3)
  40eec8:	inc    eax
  40eec9:	mov    esi,0xcfbca4ce
  40eece:	ins    BYTE PTR es:[edi],dx
  40eecf:	mul    DWORD PTR [edi-0x6f5a0bb4]
  40eed5:	cmp    DWORD PTR [edx-0x26],ebp
  40eed8:	or     al,0xfe
  40eeda:	add    DWORD PTR ss:[edx],eax
  40eedd:	push   ds
  40eede:	inc    edx
  40eedf:	test   BYTE PTR [eax-0x40ad43b7],bl
  40eee5:	xor    al,BYTE PTR [edi+0x4e0c9584]
  40eeeb:	pushf  
  40eeec:	dec    edi
  40eeed:	mov    esp,0xa0511b97
  40eef2:	fldenv ds:0xf6fc02f6
  40eef8:	shl    DWORD PTR [edi],1
  40eefa:	mov    esi,0x597547ba
  40eeff:	(bad)  
  40ef00:	jnp    0x40ef35
  40ef02:	xlat   BYTE PTR ds:[ebx]
  40ef03:	push   ds
  40ef04:	in     eax,dx
  40ef05:	push   ax
  40ef07:	cli    
  40ef08:	icebp  
  40ef09:	sahf   
  40ef0a:	dec    esi
  40ef0b:	lea    ecx,[esp+edx*2+0x4bc7c624]
  40ef12:	sbb    ch,0xe
  40ef15:	adc    DWORD PTR [ebx+0x10],0xba2c65c4
  40ef1c:	jp     0x40eedb
  40ef1e:	push   ecx
  40ef1f:	inc    esp
  40ef20:	inc    ebx
  40ef21:	add    BYTE PTR [esi],bl
  40ef23:	mov    BYTE PTR [ebx+0x6c],bl
  40ef26:	add    eax,0xb175adbc
  40ef2b:	leave  
  40ef2c:	mov    ebx,0xcf38536d
  40ef31:	pop    ss
  40ef32:	(bad)  
  40ef33:	std    
  40ef34:	mov    WORD PTR [ebx+0x2575bf48],ds
  40ef3a:	mov    eax,0x80c564f6
  40ef3f:	(bad)  
  40ef41:	push   ss
  40ef42:	xor    eax,0xa19a7a28
  40ef47:	xlat   BYTE PTR ds:[ebx]
  40ef48:	sbb    ebp,DWORD PTR [edx-0x4e686ea4]
  40ef4e:	bound  ecx,QWORD PTR [ecx]
  40ef50:	sub    dl,dh
  40ef52:	add    eax,0xf87b4c75
  40ef57:	cwde   
  40ef58:	mov    dh,BYTE PTR [esi-0x1a0ca199]
  40ef5e:	add    BYTE PTR [edx+0x75d74a77],0x8c
  40ef65:	rol    DWORD PTR [eax+0x28e8ad],0x2f
  40ef6c:	cli    
  40ef6d:	or     esi,DWORD PTR [ebx-0x4bfd793b]
  40ef73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef74:	or     DWORD PTR [ecx-0x6b],edi
  40ef77:	popa   
  40ef78:	jns    0x40ef40
  40ef7a:	jle    0x40ef0e
  40ef7c:	retf   
  40ef7d:	xor    al,0xfc
  40ef7f:	popa   
  40ef80:	dec    edx
  40ef81:	fldenv [esp+edx*4+0x688ff61a]
  40ef88:	sub    edi,edi
  40ef8a:	mov    bh,0xf1
  40ef8c:	jno    0x40ef84
  40ef8e:	in     al,0x72
  40ef90:	pop    edi
  40ef91:	and    eax,DWORD PTR [esi]
  40ef93:	inc    BYTE PTR [eax+ecx*2]
  40ef96:	cld    
  40ef97:	mov    al,0xae
  40ef99:	inc    esi
  40ef9a:	shl    DWORD PTR [ebp+edi*1+0x6f],1
  40ef9e:	xor    BYTE PTR [eax],dh
  40efa0:	in     eax,dx
  40efa1:	test   al,0xd8
  40efa3:	xor    esi,DWORD PTR [esi]
  40efa5:	mov    eax,ds:0x3d08ecd7
  40efaa:	jne    0x40ef6d
  40efac:	sbb    BYTE PTR [ebx+0x1c],dh
  40efaf:	jl     0x40efe4
  40efb1:	arpl   WORD PTR [edx],si
  40efb3:	rcl    ebp,1
  40efb5:	mov    bh,BYTE PTR [ecx]
  40efb7:	and    esi,DWORD PTR [ebp-0x4592d19c]
  40efbd:	pop    edi
  40efbe:	fidivr WORD PTR [eax-0x18]
  40efc1:	cmp    DWORD PTR [ecx],edi
  40efc3:	and    BYTE PTR [ebp-0x72],dh
  40efc6:	push   eax
  40efc7:	jns    0x40ef72
  40efc9:	out    dx,al
  40efca:	enter  0xd858,0x45
  40efce:	(bad)  
  40efcf:	xor    DWORD PTR [eax+ebx*4-0x31697a2f],ecx
  40efd6:	adc    al,0x70
  40efd8:	(bad)  [eax+ecx*4+0x1e]
  40efdc:	(bad)  [ecx]
  40efde:	les    ebp,FWORD PTR [esi+0x7c7fa4f1]
  40efe4:	or     cl,cl
  40efe6:	lahf   
  40efe7:	lock pop edi
  40efe9:	jmp    0x40ef92
  40efeb:	(bad)  
  40efed:	and    DWORD PTR [ecx],esp
  40efef:	mov    fs,WORD PTR [ebp+0x53]
  40eff2:	sub    bl,dl
  40eff4:	iret   
  40eff5:	jle    0x40efad
  40eff7:	pop    ecx
  40eff8:	pop    eax
  40eff9:	es dec edx
  40effb:	ins    DWORD PTR es:[edi],dx
  40effc:	(bad)  
  40effd:	cld    
  40effe:	xchg   ebp,eax
  40efff:	sbb    DWORD PTR [ebp+0x7d],0x4c
  40f003:	mov    ?,WORD PTR [ebx+eiz*8-0x52]
  40f007:	mov    DWORD PTR [ecx],edx
  40f009:	shr    esp,cl
  40f00b:	pop    esi
  40f00c:	xor    bl,ch
  40f00e:	out    dx,eax
  40f00f:	imul   esp,DWORD PTR [ebp-0x2a0f0640],0xffffffc7
  40f016:	nop
  40f017:	xchg   cl,bh
  40f019:	shl    BYTE PTR [ebx+0x9336da3],cl
  40f01f:	mov    ebp,0x63f10d82
  40f024:	xor    al,0x88
  40f026:	xor    eax,esp
  40f028:	or     edi,DWORD PTR [edi+0x54a70944]
  40f02e:	ret    0x7ee0
  40f031:	out    0x1f,al
  40f033:	(bad)  
  40f034:	sbb    eax,0x8106e467
  40f039:	jmp    0x38f4:0x98a2d8e3
  40f040:	fld    TBYTE PTR [esi]
  40f042:	mov    ebp,DWORD PTR [edx+0x688d89ec]
  40f048:	pop    es
  40f049:	jmp    0x73d0:0x1452c7be
  40f050:	aam    0x3e
  40f052:	pop    es
  40f053:	fs dec edx
  40f055:	(bad)  
  40f056:	les    ebx,FWORD PTR [esi+0x7ebad6d1]
  40f05c:	or     al,0x7f
  40f05e:	out    0xdd,al
  40f060:	call   0x3170:0x53b076ea
  40f067:	or     BYTE PTR [edx-0x2d],0xaa
  40f06b:	(bad)  
  40f06c:	out    dx,al
  40f06d:	jns    0x40eff4
  40f06f:	jo     0x40f013
  40f071:	rol    BYTE PTR [edi-0x15],1
  40f074:	aad    0x7
  40f076:	add    al,0x50
  40f078:	jb     0x40f071
  40f07a:	mov    dh,0x25
  40f07c:	test   al,0x4a
  40f07e:	dec    eax
  40f07f:	stos   BYTE PTR es:[edi],al
  40f080:	imul   edx,esp,0x19f77d43
  40f086:	adc    dh,BYTE PTR [edi-0x13]
  40f089:	fst    st(7)
  40f08b:	lahf   
  40f08c:	push   0x637cd2cd
  40f091:	add    eax,DWORD PTR [ecx+0x4f2e5c34]
  40f097:	fistp  WORD PTR [esi+0x43]
  40f09a:	sub    al,0x81
  40f09c:	jae    0x40f059
  40f09e:	mov    edx,0x6638ce11
  40f0a3:	cmp    al,0x84
  40f0a5:	outs   dx,DWORD PTR ds:[esi]
  40f0a6:	xor    DWORD PTR [ebp+0x4b862e42],0xffffffee
  40f0ad:	lahf   
  40f0ae:	fcomp  DWORD PTR [ecx-0x4be5fc67]
  40f0b4:	fisubr WORD PTR [edx-0x52622958]
  40f0ba:	lea    ebx,ds:0x7887ac34
  40f0c0:	test   eax,ebx
  40f0c2:	jbe    0x40f0f4
  40f0c4:	and    eax,DWORD PTR [esi-0x197b4dee]
  40f0ca:	xor    ch,0xc3
  40f0cd:	jbe    0x40f10c
  40f0cf:	into   
  40f0d0:	push   0x2f
  40f0d2:	push   esi
  40f0d3:	xor    dl,ch
  40f0d5:	cli    
  40f0d6:	dec    eax
  40f0d7:	sub    al,0xee
  40f0d9:	mov    ebp,0x8ee2c502
  40f0de:	mov    ebx,0xe0d02d3d
  40f0e3:	pop    eax
  40f0e4:	mov    cl,0xbe
  40f0e6:	out    0x2d,al
  40f0e8:	cmp    eax,0xeda6b103
  40f0ed:	cld    
  40f0ee:	adc    eax,0xc9e42eec
  40f0f3:	mov    BYTE PTR [edx+ebx*4],bl
  40f0f6:	dec    ecx
  40f0f7:	adc    BYTE PTR [ebp-0x23a4dee7],ah
  40f0fd:	xchg   esp,eax
  40f0fe:	ret    
  40f0ff:	fabs   
  40f101:	push   es
  40f102:	pusha  
  40f103:	xor    BYTE PTR [ecx+ebp*2],dh
  40f106:	mov    ecx,0x8f5788af
  40f10b:	inc    ebx
  40f10d:	jb     0x40f185
  40f10f:	dec    ecx
  40f110:	inc    esi
  40f111:	in     eax,0xf6
  40f113:	push   ss
  40f114:	(bad)  
  40f115:	shr    DWORD PTR [ecx-0x77],cl
  40f118:	pop    esp
  40f119:	push   ebx
  40f11a:	out    dx,al
  40f11b:	or     cl,BYTE PTR [ebp+0x11]
  40f11e:	mov    cl,0x7a
  40f120:	aas    
  40f121:	sub    DWORD PTR [ecx],esi
  40f123:	retf   0xfd4d
  40f126:	sbb    BYTE PTR [edx+edi*4-0x67],dl
  40f12a:	test   al,0xc1
  40f12c:	mov    eax,ds:0xcb6901ec
  40f131:	stos   DWORD PTR es:[edi],eax
  40f132:	ja     0x40f12a
  40f134:	fiadd  WORD PTR [ecx-0x52]
  40f137:	add    DWORD PTR [eax+0x14],0x18
  40f13b:	mov    edx,0x32953fe
  40f140:	xlat   BYTE PTR ds:[ebx]
  40f141:	dec    edi
  40f142:	sub    al,0x45
  40f144:	and    al,0xb3
  40f146:	add    ebx,esi
  40f148:	lods   al,BYTE PTR ds:[esi]
  40f149:	cmp    DWORD PTR [edi],ebx
  40f14b:	stos   DWORD PTR es:[edi],eax
  40f14c:	outs   dx,BYTE PTR ds:[esi]
  40f14d:	dec    ecx
  40f14e:	fdiv   QWORD PTR [esi+0x73f14f74]
  40f154:	xor    eax,0xf5914982
  40f159:	sbb    DWORD PTR [esi+0x4b],ebp
  40f15c:	(bad)  
  40f15d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f15e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f15f:	mov    al,ds:0xccce745a
  40f164:	arpl   WORD PTR [esi+0x64a5c42d],sp
  40f16a:	(bad)  
  40f16b:	jnp    0x40f1d4
  40f16d:	icebp  
  40f16e:	pop    ecx
  40f16f:	and    DWORD PTR [ecx-0x3e],esp
  40f172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f173:	shl    DWORD PTR [eax],0x8f
  40f176:	cmp    cl,dh
  40f178:	and    eax,0xea6f5d94
  40f17d:	cmp    BYTE PTR [edx+0x7701e92f],ah
  40f183:	lock jb 0x40f1e0
  40f186:	xor    al,0xfa
  40f188:	aas    
  40f189:	enter  0x9116,0x3
  40f18d:	repnz xchg edx,eax
  40f18f:	sbb    BYTE PTR [ebx+0x46be1286],0xf9
  40f196:	popf   
  40f197:	mov    dl,0x6c
  40f199:	aaa    
  40f19a:	mov    eax,ds:0xfc9d1290
  40f19f:	out    0x48,eax
  40f1a1:	out    0x40,eax
  40f1a3:	js     0x40f171
  40f1a5:	add    al,0x7e
  40f1a7:	or     BYTE PTR [ebx],bh
  40f1a9:	and    BYTE PTR [ebx],dh
  40f1ab:	scas   al,BYTE PTR es:[edi]
  40f1ac:	xchg   esp,eax
  40f1ad:	pop    ss
  40f1ae:	ds pop edi
  40f1b0:	cdq    
  40f1b1:	xchg   edi,ebx
  40f1b3:	cmc    
  40f1b4:	push   ebp
  40f1b5:	push   0x2f29485b
  40f1ba:	cmp    edx,edi
  40f1bc:	test   BYTE PTR [edi-0x63],bl
  40f1bf:	pop    ebx
  40f1c0:	ror    BYTE PTR ds:0xadab6711,0xda
  40f1c7:	jnp    0x40f200
  40f1c9:	mov    bh,0x1b
  40f1cb:	mov    ah,0xc3
  40f1cd:	(bad)  
  40f1ce:	test   DWORD PTR [eax],ebp
  40f1d0:	lea    ebx,[ebx+eiz*8-0x80]
  40f1d4:	and    eax,0x611947a6
  40f1d9:	inc    edi
  40f1da:	dec    eax
  40f1db:	sbb    eax,0x3af7a98c
  40f1e0:	sti    
  40f1e1:	inc    eax
  40f1e2:	test   BYTE PTR [edi-0x46],0x63
  40f1e6:	sbb    BYTE PTR [ecx+eiz*4],cl
  40f1e9:	pop    edx
  40f1ea:	in     eax,dx
  40f1eb:	in     al,dx
  40f1ec:	sbb    dl,dl
  40f1ee:	in     eax,dx
  40f1ef:	ds pushf 
  40f1f1:	mov    ebx,0x9ee05091
  40f1f6:	and    BYTE PTR [edi+0x7],dl
  40f1f9:	fadd   st,st(0)
  40f1fb:	sbb    BYTE PTR [ebp+0x50],0xbc
  40f1ff:	dec    ecx
  40f200:	sub    eax,0x7c5f48b6
  40f205:	inc    ebx
  40f206:	nop
  40f207:	scas   eax,DWORD PTR es:[edi]
  40f208:	leave  
  40f209:	lods   eax,DWORD PTR cs:[esi]
  40f20b:	imul   DWORD PTR [edx+0x14215a64]
  40f211:	or     DWORD PTR [ebp-0x1963d31],ecx
  40f217:	into   
  40f218:	add    DWORD PTR [edx+0x46],ecx
  40f21b:	stc    
  40f21c:	not    cl
  40f21e:	add    BYTE PTR [esi+0x47],bl
  40f221:	push   edx
  40f222:	dec    ecx
  40f223:	push   ebx
  40f224:	or     al,0xcf
  40f226:	sub    al,0x4c
  40f228:	scas   eax,DWORD PTR es:[edi]
  40f229:	data16 int3 
  40f22b:	iret   
  40f22c:	pop    eax
  40f22d:	cmp    eax,edx
  40f22f:	add    eax,0x7b45e0f8
  40f234:	and    ebp,DWORD PTR [ebx+0x67]
  40f237:	push   DWORD PTR [ebp-0x5f]
  40f23a:	pop    esp
  40f23b:	in     al,0x3b
  40f23d:	nop
  40f23e:	inc    eax
  40f23f:	xor    edi,DWORD PTR [eax-0x3]
  40f242:	pop    esi
  40f243:	(bad)  
  40f244:	mov    edx,0xfbfff8de
  40f249:	sub    esp,DWORD PTR [eax+ebp*2+0x569ef3b1]
  40f250:	pop    ebp
  40f251:	imul   edi,DWORD PTR [ebx+0x589e6a2d],0xffffff83
  40f258:	jbe    0x40f1ee
  40f25a:	adc    eax,0x2d8e61cf
  40f25f:	mov    fs,WORD PTR [esi]
  40f261:	cli    
  40f262:	call   0x1ae9:0xc82f39e9
  40f269:	cmp    BYTE PTR [edx+edx*1-0x17],dl
  40f26d:	mov    ds:0xbbda83c3,al
  40f272:	dec    edx
  40f273:	sti    
  40f274:	add    eax,0xaa3812a0
  40f279:	mov    ds:0x413fae93,eax
  40f27e:	call   0x565ad85
  40f283:	addr16 sbb eax,0xe42fa5ee
  40f289:	xor    al,0x58
  40f28b:	mov    eax,ds:0x22becbb5
  40f290:	leave  
  40f291:	fnstcw WORD PTR [edx]
  40f293:	mov    esi,0x968f13b5
  40f298:	xchg   esi,eax
  40f299:	aas    
  40f29a:	int3   
  40f29b:	sbb    edi,DWORD PTR [ebx]
  40f29d:	cmp    bl,BYTE PTR [edx+0x762395c]
  40f2a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2a4:	rcr    DWORD PTR [edx],1
  40f2a6:	popa   
  40f2a7:	(bad)  
  40f2a8:	icebp  
  40f2a9:	cmp    DWORD PTR [edx],eax
  40f2ab:	shl    dh,cl
  40f2ad:	int    0xe1
  40f2af:	es retf 0x90cd
  40f2b3:	push   esp
  40f2b4:	xor    esi,ecx
  40f2b6:	jno    0x40f2e2
  40f2b8:	mov    edx,?
  40f2ba:	sub    ch,BYTE PTR [ebp+0x69]
  40f2bd:	aad    0x37
  40f2bf:	test   DWORD PTR [ebx],edx
  40f2c1:	xor    ch,BYTE PTR [ecx+0x14a6c40d]
  40f2c7:	inc    eax
  40f2c8:	inc    ebx
  40f2c9:	and    edx,DWORD PTR [eax+0x5bdb5c30]
  40f2cf:	imul   ebx,DWORD PTR [esi-0x25],0x65f9cd5c
  40f2d6:	xchg   ebx,eax
  40f2d7:	add    edx,eax
  40f2d9:	in     al,dx
  40f2da:	xlat   BYTE PTR ds:[ebx]
  40f2db:	leave  
  40f2dc:	in     al,dx
  40f2dd:	xchg   esi,eax
  40f2de:	jns    0x40f35e
  40f2e0:	hlt    
  40f2e1:	push   edi
  40f2e2:	inc    ecx
  40f2e3:	mov    BYTE PTR [ecx-0x5a],dh
  40f2e6:	sbb    ch,ah
  40f2e8:	les    edx,FWORD PTR [ebp+0x5e6692ee]
  40f2ee:	fild   WORD PTR [esi-0x5c]
  40f2f1:	inc    ebp
  40f2f2:	dec    ebx
  40f2f3:	add    BYTE PTR [ebx],bh
  40f2f5:	inc    ecx
  40f2f6:	jnp    0x40f28d
  40f2f8:	cld    
  40f2f9:	xchg   esi,eax
  40f2fa:	add    eax,0xb252dc94
  40f2ff:	(bad)  ds:0x909a805a
  40f305:	or     eax,0x8ad75442
  40f30a:	retf   0xdd65
  40f30d:	and    BYTE PTR [esi],bl
  40f30f:	daa    
  40f310:	xchg   edi,eax
  40f311:	add    bh,bh
  40f313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f314:	mov    ah,0xd6
  40f316:	sbb    BYTE PTR [ebx+0x17],cl
  40f319:	fisub  WORD PTR [ecx]
  40f31b:	sbb    DWORD PTR [edi-0x73d57add],ecx
  40f321:	xchg   esi,eax
  40f322:	push   ebx
  40f323:	cmp    eax,0xe5587d1
  40f328:	sahf   
  40f329:	jp     0x40f2bc
  40f32b:	retf   0x706c
  40f32e:	dec    edx
  40f32f:	test   al,0x0
  40f331:	pusha  
  40f332:	dec    esp
  40f333:	xor    esi,ebp
  40f335:	mov    al,ds:0xbd089de8
  40f33a:	adc    ah,dl
  40f33c:	jno    0x40f2de
  40f33e:	int    0xc8
  40f340:	add    DWORD PTR [ecx-0x28],esi
  40f343:	jl     0x40f2ff
  40f345:	mov    ds:0xb0f1c2ac,eax
  40f34a:	cmp    cl,BYTE PTR [eax-0x6e]
  40f34d:	add    eax,0xda285863
  40f352:	ins    BYTE PTR es:[edi],dx
  40f353:	sbb    esi,DWORD PTR [ebx+0x9a65085]
  40f359:	(bad)  
  40f35a:	call   FWORD PTR [edx-0x30aa57ab]
  40f360:	inc    edi
  40f361:	xor    esp,ebp
  40f363:	mov    BYTE PTR [ecx],ch
  40f365:	dec    edi
  40f366:	mov    esi,0xc89cadbc
  40f36b:	cld    
  40f36c:	rcr    BYTE PTR [ebx+0x46],0x56
  40f370:	inc    ecx
  40f371:	rcr    BYTE PTR [edi-0x56],cl
  40f374:	and    ah,ch
  40f376:	mov    ch,0xe5
  40f378:	test   DWORD PTR [edi],ebx
  40f37a:	(bad)  
  40f37b:	mov    al,ds:0x285d2873
  40f380:	lds    eax,FWORD PTR [ebp+edi*8+0x9dccd21]
  40f387:	or     ecx,DWORD PTR [edi-0x67a2f62c]
  40f38d:	out    dx,al
  40f38e:	retf   0xd875
  40f391:	mov    bh,BYTE PTR [eax+edi*1-0x2cfa6eef]
  40f398:	sub    bl,BYTE PTR [esp+ebp*1]
  40f39b:	jo     0x40f3fc
  40f39d:	arpl   WORD PTR [edi+0x1c5a107c],bp
  40f3a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3a4:	xor    al,0x20
  40f3a6:	xor    edx,DWORD PTR [esi-0x57def607]
  40f3ac:	hlt    
  40f3ad:	jmp    0x33ca:0x3a033931
  40f3b4:	mov    WORD PTR [esi-0x35],ss
  40f3b7:	mov    edi,0xd38b7625
  40f3bc:	cmp    BYTE PTR [esi-0x4f],dl
  40f3bf:	mov    ds:0x10e3ce0c,al
  40f3c4:	gs sub al,0x92
  40f3c7:	pop    es
  40f3c8:	mov    ds:0x752f3b8c,eax
  40f3cd:	into   
  40f3ce:	xor    eax,0x3a9b8c31
  40f3d3:	push   ss
  40f3d4:	cs xor eax,0x3fcbc8d8
  40f3da:	inc    ecx
  40f3db:	imul   ecx,ebp,0xffffffd6
  40f3de:	add    BYTE PTR [ebx-0x7a],ch
  40f3e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3e2:	loope  0x40f367
  40f3e4:	fidiv  WORD PTR [ebx+0x650ddf63]
  40f3ea:	push   esi
  40f3eb:	and    ecx,eax
  40f3ed:	loope  0x40f44a
  40f3ef:	xchg   esp,eax
  40f3f0:	int3   
  40f3f1:	loop   0x40f444
  40f3f3:	push   edi
  40f3f4:	in     eax,dx
  40f3f5:	sub    al,0x3
  40f3f7:	sbb    ebp,esp
  40f3f9:	aaa    
  40f3fa:	ret    
  40f3fb:	or     eax,ecx
  40f3fd:	lds    edx,FWORD PTR [edx-0x54bea449]
  40f403:	or     al,0xf3
  40f405:	pop    ebx
  40f406:	mov    esp,0x3f5f6dab
  40f40b:	lock (bad) 
  40f40d:	push   ebx
  40f40e:	ret    0xe302
  40f411:	loope  0x40f47c
  40f413:	arpl   WORD PTR [ecx-0x44],dx
  40f416:	(bad)  
  40f418:	lods   al,BYTE PTR ds:[esi]
  40f419:	retf   
  40f41a:	test   ah,ch
  40f41c:	sti    
  40f41d:	(bad)  
  40f41e:	aam    0x4d
  40f420:	and    edi,DWORD PTR ds:0x65867a64
  40f426:	sahf   
  40f427:	in     eax,dx
  40f428:	jl     0x40f494
  40f42a:	arpl   di,dx
  40f42c:	aam    0xc3
  40f42e:	outs   dx,DWORD PTR ds:[esi]
  40f430:	inc    eax
  40f432:	mov    ebp,DWORD PTR [ebp-0x31eabd05]
  40f438:	aaa    
  40f439:	ss ds jge 0x40f3d9
  40f43d:	add    al,0xc
  40f43f:	add    eax,0xbe80568
  40f444:	mov    ds:0xf8f0e629,al
  40f449:	push   es
  40f44a:	lock in eax,dx
  40f44c:	pop    ebp
  40f44d:	xchg   DWORD PTR [edx+0x7f],ecx
  40f450:	aam    0xc7
  40f452:	mov    esi,0x9f4a9e76
  40f457:	xchg   BYTE PTR [edx+0xe],cl
  40f45a:	mov    bh,0x20
  40f45c:	rcl    bl,cl
  40f45e:	mov    ch,0x8
  40f460:	in     eax,0x8d
  40f462:	sbb    DWORD PTR [ebp+0x23fb44f],edi
  40f468:	inc    edi
  40f469:	jmp    0xded9:0xcef3dc71
  40f470:	ret    
  40f471:	pop    ecx
  40f472:	mov    ds:0xe7f0dc65,eax
  40f477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f478:	(bad)  
  40f479:	mov    ch,0x3
  40f47b:	std    
  40f47c:	sub    DWORD PTR [ecx-0x2e],ecx
  40f47f:	bound  edi,QWORD PTR [edx-0x5a]
  40f482:	call   0x2232b569
  40f487:	(bad)  
  40f488:	cdq    
  40f489:	sub    al,BYTE PTR [edx+0x2823920c]
  40f48f:	xchg   esp,eax
  40f490:	pusha  
  40f491:	sbb    BYTE PTR [ecx+0x4aedc938],cl
  40f497:	inc    ecx
  40f498:	dec    edx
  40f499:	cmc    
  40f49a:	add    DWORD PTR [eax+0x12],edx
  40f49d:	mov    ah,0xd5
  40f49f:	jae    0x40f4d9
  40f4a1:	in     al,dx
  40f4a2:	iret   
  40f4a3:	inc    edx
  40f4a4:	cli    
  40f4a5:	sbb    al,0x99
  40f4a7:	and    esp,DWORD PTR gs:[eax-0x480086d3]
  40f4ae:	mov    WORD PTR [edx],fs
  40f4b0:	clc    
  40f4b1:	mov    DWORD PTR [eax+0xa5a7d25],edx
  40f4b7:	mov    cl,0x46
  40f4b9:	bound  ebp,QWORD PTR [edi+0x69f066f3]
  40f4bf:	pushf  
  40f4c0:	push   ds
  40f4c1:	das    
  40f4c2:	bound  bp,DWORD PTR [eax]
  40f4c5:	les    eax,FWORD PTR [edi-0x10224847]
  40f4cb:	es adc eax,0xa7514e04
  40f4d1:	mov    ds:0x90c4c6e1,eax
  40f4d6:	gs push ecx
  40f4d8:	fsub   st(7),st
  40f4da:	cli    
  40f4db:	jb     0x40f477
  40f4dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4de:	jecxz  0x40f512
  40f4e0:	adc    eax,0xa24a1608
  40f4e5:	mov    eax,0x98d54d22
  40f4ea:	and    eax,0x8e766a66
  40f4ef:	sub    ecx,eax
  40f4f1:	jmp    0xf15b8361
  40f4f6:	addr16 mov dl,0x96
  40f4f9:	pop    esi
  40f4fa:	pop    ebx
  40f4fb:	push   esp
  40f4fc:	and    eax,0xae6371c0
  40f501:	in     eax,dx
  40f502:	pushf  
  40f503:	push   edx
  40f504:	popa   
  40f505:	fbld   TBYTE PTR [edi+0x231ecef0]
  40f50b:	pop    ebp
  40f50c:	pop    eax
  40f50d:	aaa    
  40f50e:	fisttp DWORD PTR [ecx]
  40f510:	sub    al,0x2e
  40f512:	adc    edi,DWORD PTR [esp+esi*4-0x63]
  40f516:	adc    DWORD PTR [edx-0xe],ebx
  40f519:	shl    DWORD PTR [edx+0x2bbcda34],1
  40f51f:	inc    esi
  40f520:	and    bh,0x70
  40f523:	push   esi
  40f524:	sar    BYTE PTR [ebp+0x3a5918e9],cl
  40f52a:	mov    edi,0x3c890743
  40f52f:	inc    ebp
  40f530:	ins    BYTE PTR es:[edi],dx
  40f531:	and    eax,0x3636727f
  40f536:	shl    BYTE PTR [ebx+0x3c],1
  40f539:	lock push es
  40f53b:	dec    edx
  40f53c:	(bad)  
  40f53d:	push   ecx
  40f53e:	mov    ecx,0xc30f7602
  40f543:	icebp  
  40f544:	std    
  40f545:	mov    esi,0x24f5ac3b
  40f54a:	scas   eax,DWORD PTR es:[edi]
  40f54b:	and    ebp,esi
  40f54d:	mov    cl,0xa
  40f54f:	(bad)  
  40f550:	ja     0x40f5d1
  40f552:	inc    ebx
  40f553:	push   edi
  40f554:	fmul   QWORD PTR ds:0x4ac3c545
  40f55a:	into   
  40f55b:	sahf   
  40f55c:	les    ebp,FWORD PTR [ebp-0x21a5c55c]
  40f562:	das    
  40f563:	iret   
  40f564:	add    DWORD PTR [ebp-0x31b2e256],0xf53ac1dd
  40f56e:	popf   
  40f56f:	lods   al,BYTE PTR ds:[esi]
  40f570:	jecxz  0x40f5bf
  40f572:	mov    dl,0x86
  40f574:	fbstp  TBYTE PTR [ebx]
  40f576:	ss inc ecx
  40f578:	xchg   edi,eax
  40f579:	fwait
  40f57a:	pop    ebx
  40f57b:	push   ebx
  40f57c:	push   0xffffffdd
  40f57e:	sub    ch,bl
  40f580:	jb     0x40f52d
  40f582:	pusha  
  40f583:	shr    BYTE PTR [ebp-0x72aa56aa],0xbd
  40f58a:	stos   BYTE PTR es:[edi],al
  40f58b:	xor    al,0xa0
  40f58d:	daa    
  40f58e:	jge    0x40f604
  40f590:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f591:	int    0x51
  40f593:	sub    BYTE PTR [esp+ebp*4],cl
  40f596:	aad    0xa0
  40f598:	mov    al,0xdb
  40f59a:	clc    
  40f59b:	xor    edi,DWORD PTR [edi+esi*2+0x52]
  40f59f:	jecxz  0x40f57b
  40f5a1:	sbb    eax,0xca9b5dd8
  40f5a6:	mov    esp,0x614f6f66
  40f5ab:	dec    ebp
  40f5ac:	pop    edx
  40f5ad:	lods   eax,DWORD PTR ds:[esi]
  40f5ae:	aaa    
  40f5af:	repz ficomp DWORD PTR [ecx-0x1e]
  40f5b3:	jns    0x40f547
  40f5b5:	mov    bh,0xc1
  40f5b7:	das    
  40f5b8:	arpl   WORD PTR [ecx+0x7789ce19],ax
  40f5be:	int3   
  40f5bf:	fld    QWORD PTR [eax-0x5f]
  40f5c2:	leave  
  40f5c3:	js     0x40f610
  40f5c5:	mov    ebx,0xbcde26b5
  40f5ca:	imul   esi,DWORD PTR [edx-0x65b6a24a],0xad703ae
  40f5d4:	cs scas al,BYTE PTR es:[edi]
  40f5d6:	mov    esp,ecx
  40f5d8:	jmp    0x65ca:0xbcb25a39
  40f5df:	cmp    eax,0x4e925354
  40f5e4:	into   
  40f5e5:	or     eax,0x1b76d968
  40f5ea:	test   edi,ebx
  40f5ec:	push   edi
  40f5ed:	cmp    BYTE PTR [eax+ebp*2],0x3d
  40f5f1:	adc    cl,BYTE PTR [esi-0x2818b7d]
  40f5f7:	adc    DWORD PTR [edx-0x45],0xffffff95
  40f5fb:	sbb    ah,BYTE PTR [eax+eax*4]
  40f5fe:	pushf  
  40f5ff:	and    DWORD PTR [ecx+0xc],ebp
  40f602:	mov    edx,0xc1c6f98e
  40f607:	xchg   ebx,eax
  40f608:	push   edx
  40f609:	enter  0x314b,0xef
  40f60d:	stc    
  40f60e:	pop    ebp
  40f60f:	push   ds
  40f610:	push   esi
  40f611:	ins    BYTE PTR es:[edi],dx
  40f612:	out    dx,eax
  40f613:	stc    
  40f614:	cld    
  40f615:	dec    eax
  40f616:	or     eax,DWORD PTR [edi-0x50b25f5a]
  40f61c:	ret    
  40f61d:	shr    eax,cl
  40f61f:	mov    ebx,0x781f5267
  40f624:	popa   
  40f625:	inc    ebp
  40f626:	mov    ch,0x9d
  40f628:	(bad)  
  40f629:	je     0x40f5cf
  40f62b:	push   edi
  40f62c:	dec    ebx
  40f62d:	sahf   
  40f62e:	test   DWORD PTR ds:0x317fe9a6,edx
  40f634:	mov    cs,WORD PTR [esi-0x6a7dd600]
  40f63a:	(bad)  
  40f63b:	es pop eax
  40f63d:	fs cs sub eax,0x72e4647f
  40f644:	jecxz  0x40f635
  40f646:	mov    bl,0xd4
  40f648:	iret   
  40f649:	icebp  
  40f64a:	pop    edx
  40f64b:	leave  
  40f64c:	aas    
  40f64d:	lods   al,BYTE PTR ds:[esi]
  40f64e:	xchg   ebp,eax
  40f64f:	jnp    0x40f62a
  40f651:	and    al,0x73
  40f653:	in     al,dx
  40f654:	mov    bl,0xf8
  40f656:	das    
  40f657:	retf   0x2fd6
  40f65a:	test   BYTE PTR [ebx],bl
  40f65c:	add    ecx,DWORD PTR [ecx]
  40f65e:	push   edx
  40f65f:	ret    0xa927
  40f662:	pop    edi
  40f663:	pop    es
  40f664:	mov    ch,ch
  40f666:	xor    eax,0x26128cd7
  40f66b:	pusha  
  40f66c:	mov    ds:0x33650370,eax
  40f671:	std    
  40f672:	push   edx
  40f673:	std    
  40f674:	nop
  40f675:	mov    dh,0xf5
  40f677:	test   BYTE PTR [eax+0x6f],al
  40f67a:	jnp    0x40f6b1
  40f67c:	cmc    
  40f67d:	fidivr DWORD PTR [edx]
  40f67f:	out    0xe5,al
  40f681:	adc    eax,0xbc07bfb8
  40f686:	sub    al,0x24
  40f688:	js     0x40f705
  40f68a:	stos   BYTE PTR es:[edi],al
  40f68b:	push   0x109cd1ec
  40f690:	outs   dx,DWORD PTR ds:[esi]
  40f691:	les    esp,FWORD PTR [esi-0x570064ee]
  40f697:	(bad)  
  40f698:	pushf  
  40f699:	mov    ah,BYTE PTR [ecx-0x6e42dacb]
  40f69f:	add    eax,edi
  40f6a1:	jmp    0x411b79
  40f6a6:	mov    eax,DWORD PTR [ebp-0x38]
  40f6a9:	add    eax,DWORD PTR [ebp+0x8]
  40f6ac:	mov    DWORD PTR [ebp-0x18],eax
  40f6af:	mov    eax,DWORD PTR [ebp-0x1c]
  40f6b2:	test   eax,eax
  40f6b4:	je     0x411b02
  40f6ba:	mov    DWORD PTR [ebp-0x20],0x0
  40f6c1:	push   0x3
  40f6c3:	xor    edx,edx
  40f6c5:	pop    edx
  40f6c6:	add    edx,0x8
  40f6c9:	push   edx
  40f6ca:	pop    ecx
  40f6cb:	push   0x6
  40f6cd:	dec    ecx
  40f6ce:	pop    ebx
  40f6cf:	dec    ebx
  40f6d0:	xchg   ebx,ecx
  40f6d2:	sub    ebx,ecx
  40f6d4:	xchg   ebx,ecx
  40f6d6:	dec    ecx
  40f6d7:	mov    eax,DWORD PTR [ebp-0x1c]
  40f6da:	imul   eax,ecx
  40f6dd:	sub    esp,eax
  40f6df:	mov    DWORD PTR [ebp-0x20],esp
  40f6e2:	mov    eax,DWORD PTR [ebp-0x4]
  40f6e5:	xor    eax,esi
  40f6e7:	add    eax,edi
  40f6e9:	jmp    0x411adb
  40f6ee:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6f1:	mov    eax,DWORD PTR [ebp+0x8]
  40f6f4:	mov    edx,DWORD PTR [ebp+0x14]
  40f6f7:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40f6fb:	xor    ecx,esi
  40f6fd:	add    ecx,edi
  40f6ff:	xor    edx,edx
  40f701:	div    ecx
  40f703:	mov    ecx,DWORD PTR [ebp-0x4]
  40f706:	jmp    0x411aba
  40f70b:	outs   dx,BYTE PTR ds:[esi]
  40f70c:	lods   al,BYTE PTR ds:[esi]
  40f70d:	or     ch,al
  40f70f:	mov    cl,al
  40f711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f712:	or     ah,0x7d
  40f715:	push   0x5680cff0
  40f71a:	cmp    al,0x2
  40f71c:	scas   al,BYTE PTR es:[edi]
  40f71d:	add    DWORD PTR [ebx-0x7c7ca318],0xffffffb6
  40f724:	bswap  esp
  40f726:	cs scas eax,DWORD PTR es:[edi]
  40f728:	stc    
  40f729:	push   ecx
  40f72a:	jg     0x40f6e7
  40f72c:	shl    BYTE PTR [esi],1
  40f72e:	push   esi
  40f72f:	(bad)  
  40f731:	add    BYTE PTR [edx+0xd],bl
  40f734:	mov    es,ebx
  40f736:	mov    bl,0xa0
  40f738:	(bad)  
  40f739:	out    dx,al
  40f73a:	jo     0x40f7af
  40f73c:	fmul   DWORD PTR [ebx]
  40f73e:	and    DWORD PTR [ecx],edx
  40f740:	call   0x93a9:0xfff9f187
  40f747:	dec    ecx
  40f748:	pop    esp
  40f749:	and    BYTE PTR [ebp-0x5b],0x0
  40f74d:	or     al,0x7
  40f74f:	outs   dx,BYTE PTR ds:[esi]
  40f750:	pop    esi
  40f751:	sbb    eax,0x44aa54b5
  40f756:	xor    eax,0x48f0fbec
  40f75b:	jno    0x40f7cf
  40f75d:	cmp    esp,edx
  40f75f:	shr    BYTE PTR [edx],0xaa
  40f762:	cmp    ebp,eax
  40f764:	push   es
  40f765:	pop    ss
  40f766:	retf   
  40f767:	mov    WORD PTR [ecx+ecx*1-0x177f6280],cs
  40f76e:	in     eax,dx
  40f76f:	sti    
  40f770:	and    al,0x69
  40f772:	cld    
  40f773:	add    al,0xa4
  40f775:	mov    ds:0x9d891516,al
  40f77a:	pop    edi
  40f77b:	jmp    0x8df35315
  40f780:	cvtdq2ps xmm3,XMMWORD PTR [edx]
  40f783:	sahf   
  40f784:	jb     0x40f777
  40f786:	sub    eax,0xddb19f2
  40f78b:	jno    0x40f79f
  40f78d:	and    DWORD PTR ds:0xe8e26bdd,edi
  40f793:	xor    bl,dh
  40f795:	xchg   ebx,eax
  40f796:	jmp    0x40f73c
  40f798:	rcl    BYTE PTR [eax+0x12],0x33
  40f79c:	out    dx,al
  40f79d:	in     al,dx
  40f79e:	mov    ecx,0x41925ab2
  40f7a3:	mul    DWORD PTR [ebx]
  40f7a5:	push   esi
  40f7a6:	mov    edi,0x9df35807
  40f7ab:	cwde   
  40f7ac:	les    ebx,FWORD PTR [ebx-0x6689bd50]
  40f7b2:	xchg   esp,eax
  40f7b3:	rcl    BYTE PTR [edi],0xd3
  40f7b6:	stc    
  40f7b7:	push   esp
  40f7b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7b9:	fcmovnbe st,st(1)
  40f7bb:	hlt    
  40f7bc:	pop    ds
  40f7bd:	ret    
  40f7be:	(bad)  
  40f7bf:	popf   
  40f7c0:	adc    al,0x35
  40f7c2:	call   0xd7e0:0x41fe9b98
  40f7c9:	xchg   DWORD PTR [ecx+0x6e95c88b],ebp
  40f7cf:	outs   dx,BYTE PTR ds:[esi]
  40f7d0:	fnstsw WORD PTR [ebp+0x64]
  40f7d3:	inc    esi
  40f7d4:	stc    
  40f7d5:	push   ebx
  40f7d6:	int3   
  40f7d7:	(bad)  
  40f7d8:	(bad)  
  40f7d9:	mov    ?,WORD PTR [ebp-0x35aea28f]
  40f7df:	clc    
  40f7e0:	add    BYTE PTR [eax],cl
  40f7e2:	es mov al,0x62
  40f7e5:	dec    edx
  40f7e6:	mov    DWORD PTR [esi-0x38],edx
  40f7e9:	fldcw  WORD PTR [edi-0x58d2ae45]
  40f7ef:	dec    eax
  40f7f0:	mov    esi,DWORD PTR [edx-0x73]
  40f7f3:	push   ebx
  40f7f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7f5:	out    0xd3,eax
  40f7f7:	cwde   
  40f7f8:	xor    dh,bl
  40f7fa:	or     edx,DWORD PTR [edi]
  40f7fc:	addr16 pop ds
  40f7fe:	(bad)  
  40f7ff:	or     DWORD PTR [esi],0x57272db4
  40f805:	scas   al,BYTE PTR es:[edi]
  40f806:	xlat   BYTE PTR ds:[ebx]
  40f807:	jg     0x40f7d7
  40f809:	test   eax,0xb4356135
  40f80e:	sar    BYTE PTR [edx-0x1f],cl
  40f811:	cmp    dh,BYTE PTR [ecx+eax*4+0x1b]
  40f815:	push   esp
  40f816:	out    0xe4,eax
  40f818:	fwait
  40f819:	arpl   WORD PTR [edi+0x1c],si
  40f81c:	gs push 0xde47ea37
  40f822:	test   eax,0x86f80059
  40f827:	pop    esi
  40f828:	aas    
  40f829:	xor    DWORD PTR [ecx+edi*4-0x4d],0x6e9e22ff
  40f831:	lea    ecx,[edi-0x5ac726e8]
  40f837:	lds    ecx,FWORD PTR [esi]
  40f839:	sub    ecx,ecx
  40f83b:	stc    
  40f83c:	repz push 0x62
  40f83f:	jno    0x40f7e2
  40f841:	add    al,0x1a
  40f843:	enter  0xc6ed,0x65
  40f847:	ror    bl,cl
  40f849:	iret   
  40f84a:	cmp    BYTE PTR [bx],bl
  40f84d:	fdivp  st(5),st
  40f84f:	mov    ds:0x5ad08abc,eax
  40f854:	or     esp,DWORD PTR [ebx+edi*8-0x60]
  40f858:	push   eax
  40f859:	dec    eax
  40f85a:	out    0x7f,al
  40f85c:	retf   0x7d40
  40f85f:	add    BYTE PTR [eax-0x2c],0x3
  40f863:	mov    eax,0xbe749720
  40f868:	hlt    
  40f869:	test   BYTE PTR [edi-0x57],ah
  40f86c:	enter  0xbdc8,0x64
  40f870:	pop    esi
  40f871:	mov    ds:0xb5ce4dc5,eax
  40f876:	mov    dh,0xb0
  40f878:	aad    0x24
  40f87a:	or     bh,BYTE PTR [ebx+edx*1-0xdaf9f5c]
  40f881:	inc    eax
  40f882:	jg     0x40f8b6
  40f884:	jmp    0x40f8fa
  40f886:	mov    dh,0x70
  40f888:	(bad)  
  40f889:	and    dh,dl
  40f88b:	xchg   edi,eax
  40f88c:	adc    al,0xa6
  40f88e:	dec    edx
  40f88f:	add    al,0x67
  40f891:	jnp    0x40f88f
  40f893:	inc    ebx
  40f894:	cwde   
  40f895:	pop    esi
  40f896:	pop    edx
  40f897:	adc    esp,esp
  40f899:	dec    eax
  40f89a:	dec    esi
  40f89b:	test   eax,0x88f58e28
  40f8a0:	(bad)  
  40f8a2:	and    edx,ebx
  40f8a4:	mov    ch,0xd2
  40f8a6:	(bad)  
  40f8a7:	adc    eax,0x8a789cd7
  40f8ac:	xchg   ecx,eax
  40f8ad:	in     eax,dx
  40f8ae:	adc    al,BYTE PTR [edx-0x30]
  40f8b1:	scas   eax,DWORD PTR es:[edi]
  40f8b2:	add    BYTE PTR [esi+0x1fdd623],cl
  40f8b8:	push   ebp
  40f8b9:	xchg   esp,eax
  40f8ba:	sub    ecx,DWORD PTR ds:0x49f31bad
  40f8c0:	call   0xa98070c2
  40f8c5:	aad    0x6a
  40f8c7:	pop    edi
  40f8c8:	neg    bl
  40f8ca:	je     0x40f910
  40f8cc:	mov    eax,ds:0xbb000e19
  40f8d1:	aam    0x19
  40f8d3:	rol    DWORD PTR [esi+0x54],cl
  40f8d6:	test   ebx,ebp
  40f8d8:	mov    edi,0x29600665
  40f8dd:	imul   ecx,DWORD PTR [edx-0x121e8a97],0xfffffff3
  40f8e4:	xchg   ebx,eax
  40f8e5:	inc    ecx
  40f8e6:	ret    0xb319
  40f8e9:	sub    esi,eax
  40f8eb:	sbb    eax,0xc4512b3c
  40f8f0:	pushf  
  40f8f1:	sub    eax,0xef29ac3f
  40f8f6:	or     esp,0x3e
  40f8f9:	jo     0x40f8e6
  40f8fb:	mov    gs,edi
  40f8fd:	shr    DWORD PTR [ebx-0x26c3e756],1
  40f903:	or     al,0x2f
  40f905:	popa   
  40f906:	lahf   
  40f907:	in     eax,dx
  40f908:	in     eax,dx
  40f909:	shl    DWORD PTR [esi],cl
  40f90b:	pop    ds
  40f90c:	addr16 pop es
  40f90e:	rcr    DWORD PTR [eax-0x460b8d1],0x58
  40f915:	add    BYTE PTR ds:0xd2a9d8ce,dl
  40f91b:	retf   
  40f91c:	sub    bl,bl
  40f91e:	mov    WORD PTR [edx-0x56b82c1e],ss
  40f924:	adc    eax,0x92fdc237
  40f929:	ret    0xd7a2
  40f92c:	jmp    0x972992f2
  40f931:	aad    0xaf
  40f933:	out    0xee,al
  40f935:	inc    esi
  40f936:	cs inc ebp
  40f938:	add    dh,0xff
  40f93b:	mov    edi,ebx
  40f93d:	adc    BYTE PTR [edx+ecx*4+0x12],al
  40f941:	sbb    DWORD PTR [ebx-0x5b],0x4c
  40f945:	pushf  
  40f946:	test   eax,0x3927584e
  40f94b:	add    dl,BYTE PTR [ebp+0x18]
  40f94e:	lea    esi,[ebx+0x1a45da42]
  40f954:	fbld   TBYTE PTR [edi]
  40f956:	scas   eax,DWORD PTR es:[edi]
  40f957:	xchg   ecx,eax
  40f958:	in     al,0x11
  40f95a:	sub    DWORD PTR [ebx+0x19cff928],ebx
  40f960:	test   al,0xa9
  40f962:	into   
  40f963:	pusha  
  40f964:	xchg   ecx,eax
  40f965:	xlat   BYTE PTR ds:[ebx]
  40f966:	ss jno 0x40f976
  40f969:	and    eax,0x3b379346
  40f96e:	retf   
  40f96f:	into   
  40f970:	and    DWORD PTR [ecx-0x26db19aa],edi
  40f976:	call   0x4ed8b79a
  40f97b:	push   ecx
  40f97c:	int3   
  40f97d:	or     cl,BYTE PTR [edi]
  40f97f:	test   eax,0xb7fa17f9
  40f984:	mov    cl,0xdf
  40f986:	popf   
  40f987:	jb     0x40f9b1
  40f989:	jp     0x40f9fa
  40f98b:	inc    edx
  40f98c:	mov    ebp,0xee0504e9
  40f991:	mov    esi,0x2e6da944
  40f996:	mov    ch,0x99
  40f998:	int    0xbb
  40f99a:	test   eax,eax
  40f99c:	or     DWORD PTR [esi-0x3930d471],ecx
  40f9a2:	sub    al,0x6f
  40f9a4:	xchg   BYTE PTR [edx],ch
  40f9a6:	mov    ah,0xe6
  40f9a8:	addr16 cld 
  40f9aa:	xchg   esi,eax
  40f9ab:	lds    edi,FWORD PTR [ebp-0xff3022d]
  40f9b1:	pop    edi
  40f9b2:	inc    esi
  40f9b3:	mov    ebx,0xc76dac0b
  40f9b8:	sbb    edx,esi
  40f9ba:	les    edx,FWORD PTR [ebp+eax*8-0x7f]
  40f9be:	mov    al,ds:0xc335c748
  40f9c3:	inc    edx
  40f9c4:	shl    BYTE PTR [esi+0x65],cl
  40f9c7:	daa    
  40f9c8:	sysret 
  40f9ca:	sub    DWORD PTR [ebp+0xa],esp
  40f9cd:	mov    eax,ds:0x94a848d1
  40f9d2:	popf   
  40f9d3:	and    al,0xf0
  40f9d5:	fs sti 
  40f9d7:	mov    ecx,0xa8d59e74
  40f9dc:	loop   0x40f968
  40f9de:	push   esp
  40f9df:	xchg   ecx,eax
  40f9e0:	test   DWORD PTR [ebp+0x10],ecx
  40f9e3:	arpl   di,di
  40f9e5:	dec    edi
  40f9e6:	lea    ebx,[edx-0x25126d8f]
  40f9ec:	sub    bl,0x1c
  40f9ef:	scas   al,BYTE PTR es:[edi]
  40f9f0:	jnp    0x40f9a4
  40f9f2:	mov    BYTE PTR [edi],ah
  40f9f4:	sbb    eax,0xa7e2804c
  40f9f9:	jb     0x40f9ea
  40f9fb:	es push ebx
  40f9fd:	(bad)  
  40f9fe:	cmp    ebp,esi
  40fa00:	pop    ebp
  40fa01:	not    al
  40fa03:	in     eax,dx
  40fa04:	mov    ah,0x18
  40fa06:	xor    BYTE PTR [edi],al
  40fa08:	mov    ah,0xd2
  40fa0a:	ins    DWORD PTR es:[edi],dx
  40fa0b:	ror    BYTE PTR [ecx],0x25
  40fa0e:	mov    ebp,0x476bd0b8
  40fa13:	pop    ss
  40fa14:	ds pop ecx
  40fa16:	loopne 0x40f9ba
  40fa18:	lock or al,0x32
  40fa1b:	mov    ch,0xad
  40fa1d:	ja     0x40f9f6
  40fa1f:	outs   dx,DWORD PTR ds:[esi]
  40fa20:	repnz add bh,BYTE PTR [ebx+0xe]
  40fa24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa25:	xchg   esp,eax
  40fa26:	sub    DWORD PTR [eax],eax
  40fa28:	test   eax,0xe4d24f99
  40fa2d:	pop    esp
  40fa2e:	pop    ebx
  40fa2f:	xor    al,0x49
  40fa31:	mov    esp,0x79a0daec
  40fa36:	sub    eax,0xcd2f65bb
  40fa3b:	mov    ch,0xfe
  40fa3d:	fmul   st(1),st
  40fa3f:	sub    edi,DWORD PTR [edi+ebx*2-0x2b]
  40fa43:	aad    0x54
  40fa45:	nop
  40fa46:	pop    edi
  40fa47:	stos   DWORD PTR es:[edi],eax
  40fa48:	(bad)  
  40fa49:	jp     0x40f9df
  40fa4b:	pop    ss
  40fa4c:	inc    edi
  40fa4d:	add    esi,DWORD PTR [edi-0x24413382]
  40fa53:	cmp    al,0x71
  40fa55:	or     esi,esp
  40fa57:	pop    ds
  40fa58:	xor    al,0x68
  40fa5a:	xor    edi,DWORD PTR [ecx-0x7dd7668a]
  40fa60:	mov    dl,0x7c
  40fa62:	xchg   edi,eax
  40fa63:	inc    ecx
  40fa64:	jle    0x40fa97
  40fa66:	es pushf 
  40fa68:	xchg   BYTE PTR [ebx+0x27ef0657],ch
  40fa6e:	bound  edx,QWORD PTR [ebp+0x30a33687]
  40fa74:	mov    fs,WORD PTR [ecx]
  40fa76:	out    dx,al
  40fa77:	push   eax
  40fa78:	dec    esi
  40fa79:	add    al,0x7d
  40fa7b:	rcr    DWORD PTR ss:[esi+0x70],1
  40fa7f:	push   ebp
  40fa80:	mov    ebx,0x52fe075a
  40fa85:	jne    0x40faf1
  40fa87:	dec    BYTE PTR [eax-0xf77e331]
  40fa8d:	idiv   DWORD PTR [edi]
  40fa8f:	xor    al,0x56
  40fa91:	adc    ebx,DWORD PTR [ebx-0x2ace7b4d]
  40fa97:	cvtps2pd xmm0,QWORD PTR [edi-0x6eedb5b8]
  40fa9e:	push   ebx
  40fa9f:	(bad)
  40faa3:	sub    eax,0x94ac0c14
  40faa8:	add    al,0x23
  40faaa:	daa    
  40faab:	cwde   
  40faac:	ja     0x40fa69
  40faae:	popa   
  40faaf:	bound  esp,QWORD PTR [eax+0x3d44f4c7]
  40fab5:	loop   0x40fa50
  40fab7:	mov    cl,0xfe
  40fab9:	add    al,0x82
  40fabb:	ret    0xf071
  40fabe:	cmp    DWORD PTR [edi],eax
  40fac0:	xor    eax,0x6bf9cb93
  40fac5:	pop    ss
  40fac6:	fimul  DWORD PTR [ebx]
  40fac8:	pop    ds
  40fac9:	jmp    0x45b:0x997d6127
  40fad0:	mov    ds,WORD PTR [ecx+0x6f]
  40fad3:	cdq    
  40fad4:	mov    ds:0xe442ecc9,al
  40fad9:	jno    0x40fb50
  40fadb:	mov    cl,0x5f
  40fadd:	aad    0xef
  40fadf:	fistp  WORD PTR [esi]
  40fae1:	adc    ebp,esi
  40fae3:	sub    DWORD PTR ds:0x6a73637e,eax
  40fae9:	lock lods al,BYTE PTR ds:[esi]
  40faeb:	xor    DWORD PTR [ebx+0x49f923e6],ecx
  40faf1:	pop    ebp
  40faf2:	or     BYTE PTR [edx+0x30162717],bh
  40faf8:	jae    0x40fb50
  40fafa:	ss inc edi
  40fafc:	mov    WORD PTR [edx-0x392e604f],gs
  40fb02:	(bad)  
  40fb03:	cs add eax,0xda18387b
  40fb09:	stos   BYTE PTR es:[edi],al
  40fb0a:	popa   
  40fb0b:	jmp    0x40fb08
  40fb0d:	repnz inc edx
  40fb0f:	clc    
  40fb10:	ret    
  40fb11:	push   es
  40fb12:	and    BYTE PTR [ecx],cl
  40fb14:	mov    eax,ds:0x82de90a
  40fb19:	and    ecx,DWORD PTR gs:[eax]
  40fb1c:	mov    edx,0x8a1372db
  40fb21:	not    BYTE PTR [ebx+0x3f18ee93]
  40fb27:	jge    0x40fb6b
  40fb29:	stos   BYTE PTR es:[edi],al
  40fb2a:	out    dx,al
  40fb2b:	xlat   BYTE PTR ds:[ebx]
  40fb2c:	nop
  40fb2d:	gs add esp,edx
  40fb30:	in     al,0xe
  40fb32:	int    0xae
  40fb34:	out    0x59,eax
  40fb36:	cli    
  40fb37:	adc    al,0x12
  40fb39:	adc    al,0xf0
  40fb3b:	pop    esp
  40fb3c:	fisubr WORD PTR [edi]
  40fb3e:	cmp    eax,DWORD PTR [eax-0x46]
  40fb41:	cmp    bl,BYTE PTR [ecx]
  40fb43:	ja     0x40fb63
  40fb45:	and    edx,eax
  40fb47:	ins    BYTE PTR es:[edi],dx
  40fb48:	aad    0x58
  40fb4a:	ins    DWORD PTR es:[edi],dx
  40fb4b:	mov    edx,0xe4abffa9
  40fb50:	push   edx
  40fb51:	xor    al,0x7
  40fb53:	(bad)  [ecx-0x1158fe7e]
  40fb59:	dec    ecx
  40fb5a:	xchg   BYTE PTR [edi],dl
  40fb5c:	hlt    
  40fb5d:	mov    ch,0xd0
  40fb5f:	mov    BYTE PTR [ecx+0x3b],ah
  40fb62:	sbb    al,0x60
  40fb64:	retf   
  40fb65:	repnz mov dh,0x9e
  40fb68:	test   eax,0xa849028a
  40fb6d:	in     eax,0xf6
  40fb6f:	mov    ds:0x541c96b,al
  40fb74:	loopne 0x40fb96
  40fb76:	nop
  40fb77:	loopne 0x40fbe2
  40fb79:	pop    edi
  40fb7a:	fdiv   QWORD PTR [ebx]
  40fb7c:	dec    ecx
  40fb7d:	call   0x5703:0xd10ff467
  40fb84:	push   0x30
  40fb86:	std    
  40fb87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb89:	pushf  
  40fb8a:	rcr    DWORD PTR [ecx],cl
  40fb8c:	hlt    
  40fb8d:	mov    dl,0xc9
  40fb8f:	sbb    eax,DWORD PTR [edi-0x3181b430]
  40fb95:	in     al,dx
  40fb96:	pushf  
  40fb97:	popf   
  40fb98:	push   cs
  40fb99:	xchg   ebx,eax
  40fb9a:	sbb    al,0x97
  40fb9c:	ret    
  40fb9d:	stos   DWORD PTR es:[edi],eax
  40fb9e:	sbb    al,0x79
  40fba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fba1:	rol    DWORD PTR [esi-0x36d2a81f],1
  40fba7:	daa    
  40fba8:	push   ecx
  40fba9:	imul   eax
  40fbab:	daa    
  40fbac:	mul    BYTE PTR [esi]
  40fbae:	ror    BYTE PTR [eax+0x51f2f472],cl
  40fbb4:	mov    eax,0x3d39202f
  40fbb9:	inc    esi
  40fbba:	mov    esi,ss
  40fbbc:	bound  eax,QWORD PTR [ecx+eax*1-0x7d]
  40fbc0:	(bad)  
  40fbc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbc2:	rcr    DWORD PTR [ebp-0x5b],cl
  40fbc5:	pop    ecx
  40fbc6:	int    0xee
  40fbc8:	and    ecx,esp
  40fbca:	loop   0x40fb92
  40fbcc:	mov    bh,0x68
  40fbce:	(bad)  
  40fbcf:	xlat   BYTE PTR ds:[ebx]
  40fbd0:	jno    0x40fc33
  40fbd2:	or     BYTE PTR [edi-0x2b],ah
  40fbd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbd6:	mov    esp,0x5f68dcda
  40fbdb:	cmp    ebp,DWORD PTR [edi]
  40fbdd:	cmp    dh,BYTE PTR [esi]
  40fbdf:	mov    al,ds:0xc4af0d04
  40fbe4:	rcl    BYTE PTR [ecx-0x2208ec10],1
  40fbea:	(bad)  
  40fbeb:	pop    DWORD PTR [eax]
  40fbed:	fstp   TBYTE PTR gs:[ebx+0x35]
  40fbf1:	inc    ebp
  40fbf2:	aaa    
  40fbf3:	sub    BYTE PTR [edi+0x151cb8da],cl
  40fbf9:	push   edx
  40fbfa:	mov    DWORD PTR [ebp+0x17ac83dd],ebx
  40fc00:	mov    esi,0x5b60aaae
  40fc05:	pop    ebp
  40fc06:	sbb    esp,esp
  40fc08:	out    0xd1,eax
  40fc0a:	shr    BYTE PTR [edi+0xeb997a8],1
  40fc10:	mov    ds:0xcb8196e9,al
  40fc15:	cmp    edx,DWORD PTR [esi-0x666631e4]
  40fc1b:	rcr    DWORD PTR [edx+0xf],0xaa
  40fc1f:	retf   0xdb9b
  40fc22:	pop    edi
  40fc23:	dec    ebp
  40fc24:	dec    edx
  40fc25:	aad    0x65
  40fc27:	push   ds
  40fc28:	mov    ?,WORD PTR [ebp+0x2]
  40fc2b:	dec    esi
  40fc2c:	push   ecx
  40fc2d:	jl     0x40fbcd
  40fc2f:	test   DWORD PTR [eax+0x55],eax
  40fc32:	cmp    al,0x9c
  40fc34:	mov    ah,BYTE PTR [ebp+0x6d3a0c33]
  40fc3a:	push   0xfffffff5
  40fc3c:	inc    ebx
  40fc3d:	mov    DWORD PTR [edx],esp
  40fc3f:	div    DWORD PTR [eax+ecx*1]
  40fc42:	xchg   esi,eax
  40fc43:	(bad)  
  40fc44:	addr16 inc edi
  40fc46:	and    eax,0x666ae954
  40fc4b:	add    ch,BYTE PTR [ecx+0x6d]
  40fc4e:	xor    al,BYTE PTR [ecx+0x6715a2d5]
  40fc54:	out    0x94,eax
  40fc56:	aaa    
  40fc57:	mov    eax,0xa4d358e5
  40fc5c:	sar    BYTE PTR [eax],0x7b
  40fc5f:	ja     0x40fc7f
  40fc61:	jns    0x40fc6f
  40fc63:	aas    
  40fc64:	cwde   
  40fc65:	sbb    BYTE PTR ds:0xfd0643e2,dl
  40fc6b:	call   0xf17e0d3
  40fc70:	dec    esi
  40fc71:	in     al,0x7a
  40fc73:	cmp    eax,0x4110123e
  40fc78:	mov    esi,0xee6c0361
  40fc7d:	das    
  40fc7e:	add    ebp,esp
  40fc80:	stos   BYTE PTR es:[edi],al
  40fc81:	clc    
  40fc82:	sahf   
  40fc83:	fstp   QWORD PTR [ecx-0x5a1e694b]
  40fc89:	jmp    0x40fc14
  40fc8b:	jg     0x40fc99
  40fc8d:	sbb    al,0xe8
  40fc8f:	cld    
  40fc90:	jae    0x40fca2
  40fc92:	and    ebp,DWORD PTR [edx-0x7e]
  40fc95:	mov    edi,DWORD PTR [esi-0x3b]
  40fc98:	inc    esi
  40fc99:	pushf  
  40fc9a:	inc    ecx
  40fc9b:	(bad)  
  40fc9c:	clc    
  40fc9d:	shl    DWORD PTR [esi+ebx*2],1
  40fca0:	adc    eax,0x1f5cf48e
  40fca5:	dec    esi
  40fca6:	ja     0x40fc51
  40fca8:	push   edx
  40fca9:	sbb    al,0x31
  40fcab:	repnz xchg ebp,eax
  40fcad:	call   0x3fe7e45d
  40fcb2:	sub    eax,0x528c705a
  40fcb7:	dec    ebx
  40fcb8:	jmp    0x15f544b0
  40fcbd:	rol    BYTE PTR [edx+0x3b],1
  40fcc0:	push   ebx
  40fcc1:	std    
  40fcc2:	and    eax,0xee5a0450
  40fcc7:	jle    0x40fcd8
  40fcc9:	shr    edi,cl
  40fccb:	cwde   
  40fccc:	stc    
  40fccd:	(bad)  
  40fcce:	stos   BYTE PTR es:[edi],al
  40fccf:	sbb    ebx,DWORD PTR [edi+ecx*4+0x630fb317]
  40fcd6:	mov    esp,0x8d3b7666
  40fcdb:	mov    esp,DWORD PTR [esi]
  40fcdd:	mov    esp,0xe10de7fc
  40fce2:	jp     0x40fd0e
  40fce4:	xor    al,0x3d
  40fce6:	addr16 mov dh,0x7e
  40fce9:	std    
  40fcea:	jne    0x40fcea
  40fcec:	ret    0x498f
  40fcef:	mov    cl,0x1e
  40fcf1:	adc    ch,BYTE PTR [edi]
  40fcf3:	or     ebx,DWORD PTR [ebx-0x29]
  40fcf6:	out    0xd4,al
  40fcf8:	arpl   WORD PTR [edi+0xdf8e719],si
  40fcfe:	daa    
  40fcff:	xchg   esp,eax
  40fd00:	mov    eax,0x124d4876
  40fd05:	into   
  40fd06:	xchg   ebx,eax
  40fd07:	or     bh,BYTE PTR [ebx+0x35]
  40fd0a:	aaa    
  40fd0b:	xor    esi,DWORD PTR [edi+0x39]
  40fd0e:	outs   dx,BYTE PTR ds:[esi]
  40fd0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd10:	or     cl,bh
  40fd12:	xchg   BYTE PTR [ebp+0x28],dh
  40fd15:	push   ecx
  40fd16:	dec    eax
  40fd17:	xchg   ebx,eax
  40fd18:	je     0x40fd0d
  40fd1a:	sahf   
  40fd1b:	das    
  40fd1c:	arpl   WORD PTR [esp+esi*4-0x30],sp
  40fd20:	push   eax
  40fd21:	push   0xf5f6fee0
  40fd26:	jno    0x40fd60
  40fd28:	or     cl,BYTE PTR [edx+0x2d303169]
  40fd2e:	(bad)  
  40fd2f:	in     eax,dx
  40fd30:	xor    BYTE PTR [ecx*2+0x10152343],dh
  40fd37:	fidivr DWORD PTR [ecx+0x37eb21a1]
  40fd3d:	lock push edi
  40fd3f:	xchg   ecx,eax
  40fd40:	ja     0x40fd2b
  40fd42:	in     al,dx
  40fd43:	mov    ch,0x3f
  40fd45:	scas   al,BYTE PTR es:[edi]
  40fd46:	jnp    0x40fd30
  40fd48:	inc    edx
  40fd49:	repnz test DWORD PTR [ebx],ebp
  40fd4c:	jbe    0x40fdc9
  40fd4e:	bound  edx,QWORD PTR [edi]
  40fd50:	test   al,0x36
  40fd52:	xchg   ebp,eax
  40fd53:	shr    DWORD PTR [edx],0x45
  40fd56:	xor    edi,eax
  40fd58:	lock sub dh,BYTE PTR [eax+ebx*1]
  40fd5c:	gs jo  0x40fd9c
  40fd5f:	mov    al,ds:0xa2eaebba
  40fd64:	pusha  
  40fd65:	mov    esi,0xafe0b90e
  40fd6a:	aad    0x9c
  40fd6c:	in     eax,dx
  40fd6d:	and    DWORD PTR [eax+0x35bf1725],0x8162fa5b
  40fd77:	mov    ch,0x74
  40fd79:	and    DWORD PTR [edi+0x60e283e6],esp
  40fd7f:	lock cmc 
  40fd81:	sbb    bh,al
  40fd83:	dec    edx
  40fd84:	mov    esp,0x911c28
  40fd89:	das    
  40fd8a:	retf   
  40fd8b:	in     eax,0xce
  40fd8d:	adc    edi,DWORD PTR [ecx+0x2c]
  40fd90:	lahf   
  40fd91:	sbb    dl,BYTE PTR [ebx+esi*8]
  40fd94:	std    
  40fd95:	sub    eax,0xbff3863c
  40fd9a:	outs   dx,DWORD PTR ds:[esi]
  40fd9b:	sbb    ebx,DWORD PTR ds:0xda1cf9be
  40fda2:	dec    edx
  40fda3:	out    dx,eax
  40fda4:	mov    bh,0x54
  40fda6:	loopne 0x40fdf2
  40fda8:	stc    
  40fda9:	jge    0x40fda4
  40fdab:	xchg   ebx,eax
  40fdac:	jl     0x40fe0c
  40fdae:	mov    ebx,0xb5392592
  40fdb3:	push   cs
  40fdb4:	(bad)  
  40fdb5:	push   es
  40fdb6:	mov    gs,WORD PTR ss:[ebp+ebx*2-0x4716d0ed]
  40fdbe:	and    al,0xa7
  40fdc0:	jmp    0x82cb9a5f
  40fdc5:	add    bh,BYTE PTR [edi-0x203863a1]
  40fdcb:	inc    edx
  40fdcc:	mov    ch,BYTE PTR [edi+0x7dbd71eb]
  40fdd2:	sti    
  40fdd3:	jge    0x40fd81
  40fdd5:	sbb    edi,edi
  40fdd7:	(bad)  
  40fdd9:	cdq    
  40fdda:	sub    BYTE PTR [edx-0xfac9736],cl
  40fde0:	adc    ebp,DWORD PTR [ebx-0x2]
  40fde3:	xchg   BYTE PTR [esi+ecx*1+0x38],ch
  40fde7:	repnz mov ebp,0x7ced3362
  40fded:	and    BYTE PTR [ecx+0x42],ah
  40fdf0:	pop    edx
  40fdf1:	test   DWORD PTR [esi],ebp
  40fdf3:	mov    bh,0x43
  40fdf5:	pop    esp
  40fdf6:	pop    edi
  40fdf7:	xchg   BYTE PTR [eax],ah
  40fdf9:	push   ebx
  40fdfa:	adc    bh,BYTE PTR [ecx+0x6e]
  40fdfd:	xor    edi,ebx
  40fdff:	mov    ?,WORD PTR [edx]
  40fe01:	sub    DWORD PTR [ecx+eiz*4-0x3f],esi
  40fe05:	mov    ds:0xb17f16ec,eax
  40fe0a:	mov    ecx,0x32a58684
  40fe0f:	push   0xffffffea
  40fe11:	leave  
  40fe12:	fnstcw WORD PTR ss:[ecx-0x69]
  40fe16:	cwde   
  40fe17:	repz dec ebp
  40fe19:	add    DWORD PTR [edi],edi
  40fe1b:	fnop   
  40fe1d:	icebp  
  40fe1e:	aas    
  40fe1f:	imul   esp,DWORD PTR gs:[esi+0x4e7cd824],0xa763987b
  40fe2a:	lods   al,BYTE PTR ds:[esi]
  40fe2b:	mov    esp,0x41f6cf70
  40fe30:	cmp    esp,edx
  40fe32:	cmp    eax,0x2aef63b3
  40fe37:	fbstp  TBYTE PTR [edi+0x46535017]
  40fe3d:	sbb    al,0x28
  40fe3f:	and    al,0xaa
  40fe41:	out    dx,eax
  40fe42:	popf   
  40fe43:	stos   BYTE PTR es:[edi],al
  40fe44:	jecxz  0x40fe75
  40fe46:	xchg   ebx,eax
  40fe47:	lahf   
  40fe48:	add    DWORD PTR [esi-0x2f],edx
  40fe4b:	jmp    0xc26068c1
  40fe50:	and    al,0x6
  40fe52:	hlt    
  40fe53:	adc    eax,0xe51c1734
  40fe58:	cmp    edx,DWORD PTR [eax+0x46]
  40fe5b:	das    
  40fe5c:	sub    DWORD PTR [esi-0x46],ebp
  40fe5f:	sbb    DWORD PTR [eax-0x6b5a2c8f],0x8306b8eb
  40fe69:	(bad)  
  40fe6a:	sbb    BYTE PTR [ebx-0x3ef28831],al
  40fe70:	or     esi,DWORD PTR [ebx-0x1]
  40fe73:	outs   dx,BYTE PTR ds:[esi]
  40fe74:	and    bh,bh
  40fe76:	sub    BYTE PTR [ebx+0x25],0x16
  40fe7a:	call   0x5f34:0xda241c10
  40fe81:	cmp    DWORD PTR [edx],0x5
  40fe84:	popf   
  40fe85:	pusha  
  40fe86:	jp     0x40fec7
  40fe88:	mov    edi,0x2a3f884
  40fe8d:	ja     0x40fe5a
  40fe8f:	add    bh,BYTE PTR [edi-0x34]
  40fe92:	xlat   BYTE PTR ds:[ebx]
  40fe93:	xor    BYTE PTR [edi],bh
  40fe95:	ins    BYTE PTR es:[edi],dx
  40fe96:	fstp   QWORD PTR [ebp+0x37]
  40fe99:	into   
  40fe9a:	xor    esi,DWORD PTR [edx]
  40fe9c:	pop    ebx
  40fe9d:	jb     0x40ff03
  40fe9f:	outs   dx,BYTE PTR ds:[esi]
  40fea0:	mov    bh,0x1e
  40fea2:	dec    ebx
  40fea3:	ret    
  40fea4:	xor    eax,0x5411364b
  40fea9:	dec    edi
  40feaa:	xor    eax,0x4090897c
  40feaf:	jl     0x40fe48
  40feb1:	dec    ebp
  40feb2:	add    eax,0x710fd6ef
  40feb7:	retf   0x2b2c
  40feba:	sbb    DWORD PTR [edi],ebx
  40febc:	shl    dh,0x3f
  40febf:	sbb    dl,ah
  40fec1:	dec    ebp
  40fec2:	addr16 repz ja 0x40fe47
  40fec6:	repz pop esi
  40fec8:	imul   edx,DWORD PTR [ebp-0x5c],0xffffffb5
  40fecc:	mov    edx,0x5f3b9f8
  40fed1:	ror    DWORD PTR [ecx+0x70],1
  40fed4:	add    BYTE PTR [ebx+0xb],0xc6
  40fed8:	pop    edx
  40feda:	stc    
  40fedb:	stos   BYTE PTR es:[edi],al
  40fedc:	sub    eax,0xffffffb7
  40fedf:	sti    
  40fee0:	js     0x40fe95
  40fee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fee3:	out    dx,al
  40fee4:	inc    ebx
  40fee5:	push   edi
  40fee6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fee7:	fninit 
  40fee9:	mov    ecx,0x5c9208c3
  40feee:	push   edi
  40feef:	mov    cl,0x69
  40fef1:	jl     0x40fe92
  40fef3:	std    
  40fef4:	ror    ebx,1
  40fef6:	mov    ch,0xb5
  40fef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fef9:	cmp    DWORD PTR [esi+0x13],ecx
  40fefc:	ficomp WORD PTR [edx-0x7dd2674c]
  40ff02:	and    ecx,esi
  40ff04:	dec    ebp
  40ff05:	xchg   esi,eax
  40ff06:	sbb    eax,0x353fb3bb
  40ff0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff0c:	(bad)  
  40ff0d:	not    DWORD PTR [esi-0x427cf9ef]
  40ff13:	les    edi,FWORD PTR [ecx-0x52f4040e]
  40ff19:	inc    esp
  40ff1a:	(bad)  
  40ff1b:	mov    ebp,0xdaa3640a
  40ff20:	sub    BYTE PTR [esi+0x5d33cea],bl
  40ff26:	out    0x86,al
  40ff28:	pushf  
  40ff29:	mov    ebp,0xf3b685f2
  40ff2e:	out    dx,eax
  40ff2f:	gs push ebx
  40ff31:	cmp    eax,0xe565b48a
  40ff36:	jmp    0x211:0x2c7a5b69
  40ff3d:	adc    ebx,DWORD PTR [edi+0x69bdbca0]
  40ff43:	or     DWORD PTR [edx+0xc],0x57
  40ff47:	or     al,0xb5
  40ff49:	push   0xd5b34a90
  40ff4e:	out    dx,al
  40ff4f:	or     DWORD PTR [eax],esp
  40ff51:	scas   eax,DWORD PTR es:[edi]
  40ff52:	stos   BYTE PTR es:[edi],al
  40ff53:	outs   dx,BYTE PTR ds:[esi]
  40ff54:	adc    BYTE PTR [esi+0x78],dh
  40ff57:	sbb    esp,DWORD PTR [ebp-0x8646865]
  40ff5d:	in     al,0x7b
  40ff5f:	cmp    DWORD PTR [ebx-0x5f],ebp
  40ff62:	stc    
  40ff63:	ins    BYTE PTR es:[edi],dx
  40ff64:	test   DWORD PTR [esi-0x7f5eedc8],edi
  40ff6a:	out    dx,al
  40ff6b:	cmp    BYTE PTR [eax+0x2d11b2b],0x93
  40ff72:	jae    0x40ffea
  40ff74:	das    
  40ff75:	bound  edx,QWORD PTR [ecx+0x48d44379]
  40ff7b:	les    edx,FWORD PTR [eax+0x7463f4f2]
  40ff81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff82:	push   ebp
  40ff83:	leave  
  40ff84:	inc    esp
  40ff85:	hlt    
  40ff86:	xor    dl,dl
  40ff88:	xchg   esp,eax
  40ff89:	in     eax,dx
  40ff8a:	mov    edi,0xfb8b7262
  40ff8f:	mov    ebx,0xea14efb7
  40ff94:	dec    ebx
  40ff95:	sub    DWORD PTR ds:0xdc4a6841,0xdaaa98ab
  40ff9f:	pop    edi
  40ffa0:	jmp    0xf0cb:0xb0a17bc6
  40ffa7:	pop    ecx
  40ffa8:	add    edi,ecx
  40ffaa:	cmp    dh,dl
  40ffac:	je     0x410000
  40ffae:	dec    esp
  40ffaf:	(bad)  
  40ffb0:	std    
  40ffb1:	stos   BYTE PTR es:[edi],al
  40ffb2:	mov    eax,0xab0c3947
  40ffb7:	mov    ecx,0x9465e28e
  40ffbc:	int    0x1f
  40ffbe:	sbb    eax,0x7708bc37
  40ffc3:	inc    edi
  40ffc4:	inc    esi
  40ffc5:	mov    si,0x877e
  40ffc9:	das    
  40ffca:	xchg   edi,eax
  40ffcb:	xchg   BYTE PTR [ecx],bh
  40ffcd:	aaa    
  40ffce:	or     eax,0x81484f28
  40ffd3:	ins    BYTE PTR es:[edi],dx
  40ffd4:	fnstenv [ecx+0x5a]
  40ffd7:	in     eax,dx
  40ffd8:	mov    ch,0x9e
  40ffda:	sahf   
  40ffdb:	scas   al,BYTE PTR es:[edi]
  40ffdc:	add    al,0x6
  40ffde:	xor    DWORD PTR [edi-0x2c],esp
  40ffe1:	push   ebx
  40ffe2:	mov    ebp,0xc88e5e3e
  40ffe7:	push   ds
  40ffe8:	xor    ch,BYTE PTR [edi]
  40ffea:	and    ecx,eax
  40ffec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffed:	push   cs
  40ffee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffef:	(bad)  
  40fff1:	mov    ebx,0x347d9d66
  40fff6:	mov    bl,0xe8
  40fff8:	call   FWORD PTR [edi-0x49]
  40fffb:	sbb    bl,BYTE PTR [eax+0x2f]
  40fffe:	sbb    eax,0x54fbdef5
  410003:	push   edi
  410004:	lods   eax,DWORD PTR ss:[esi]
  410006:	in     eax,dx
  410007:	clc    
  410008:	push   es
  410009:	test   DWORD PTR [ebx],eax
  41000b:	rol    DWORD PTR [edi],1
  41000d:	aaa    
  41000e:	push   esp
  41000f:	in     eax,0x96
  410011:	call   0x88038a29
  410016:	stos   BYTE PTR es:[edi],al
  410017:	xlat   BYTE PTR ds:[ebx]
  410018:	adc    DWORD PTR [ebx+eiz*4],edx
  41001b:	and    ch,BYTE PTR [ecx-0x78451fc1]
  410021:	cld    
  410022:	and    al,0x6c
  410024:	or     dl,bl
  410026:	cmp    DWORD PTR [eax+ebx*4+0x42],edi
  41002a:	push   DWORD PTR [ebx+0x11]
  41002d:	sub    DWORD PTR [ecx+0x3307a816],edi
  410033:	inc    edi
  410034:	pop    esi
  410035:	add    BYTE PTR [edi+ebp*1-0x72597c61],al
  41003c:	stos   DWORD PTR es:[edi],eax
  41003d:	xchg   esp,eax
  41003e:	inc    ecx
  41003f:	dec    ebx
  410040:	sub    al,0xdb
  410042:	or     BYTE PTR [ebp-0x65],dh
  410045:	jno    0x4100c2
  410047:	retf   
  410048:	mov    edi,0x42b39be0
  41004d:	jge    0x410044
  41004f:	cwde   
  410050:	jb     0x40fff0
  410052:	jl     0x410037
  410054:	pop    ecx
  410055:	mov    ebx,0x7fbefe0a
  41005a:	mov    dh,0x84
  41005c:	popf   
  41005d:	xor    eax,0xf2257bfe
  410062:	adc    bl,BYTE PTR [eax]
  410064:	fwait
  410065:	push   cs
  410066:	inc    ebp
  410067:	inc    ebp
  410068:	mov    edi,0x72b7c8e7
  41006d:	test   eax,0xd7fdfa6
  410072:	jl     0x410037
  410074:	in     al,0xf9
  410076:	lods   eax,DWORD PTR ds:[esi]
  410077:	data16 (bad) 
  410079:	(bad)  
  41007a:	jno    0x4100bd
  41007c:	ss pusha 
  41007e:	(bad)  
  410080:	fiadd  WORD PTR [ecx-0xa]
  410083:	int    0x65
  410085:	jae    0x4100e3
  410087:	mov    eax,0x80ddeace
  41008c:	bound  esp,QWORD PTR [edi+0x79dfe05f]
  410092:	iret   
  410093:	mov    ?,WORD PTR [edi+0xdc092d8]
  410099:	and    esi,ebp
  41009b:	lahf   
  41009c:	add    ecx,DWORD PTR [ecx+0x6b29a006]
  4100a2:	jl     0x410107
  4100a4:	pop    ecx
  4100a5:	mov    ah,0xcd
  4100a7:	adc    edx,DWORD PTR [eax-0x61835227]
  4100ad:	sub    DWORD PTR [edx+0x13111b2],ecx
  4100b3:	clc    
  4100b4:	cmp    al,bl
  4100b6:	das    
  4100b7:	add    ch,BYTE PTR [esi+edx*8]
  4100ba:	popf   
  4100bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100bc:	outs   dx,BYTE PTR ds:[esi]
  4100bd:	rol    DWORD PTR [edx],0x52
  4100c0:	sub    dl,BYTE PTR [edx+0x11e2631f]
  4100c6:	pop    edi
  4100c7:	clc    
  4100c8:	retf   0x4822
  4100cb:	adc    cl,bh
  4100cd:	cmc    
  4100ce:	dec    edx
  4100cf:	mov    WORD PTR [esi+ebx*4+0x365a23a4],?
  4100d6:	daa    
  4100d7:	mov    eax,0xcbc0dbfb
  4100dc:	les    edx,FWORD PTR [esi+0x3c]
  4100df:	mov    al,ds:0x39472568
  4100e4:	xor    ax,0x8fba
  4100e8:	sub    bl,dl
  4100ea:	jl     0x410095
  4100ec:	arpl   WORD PTR [esi+0x6a],di
  4100ef:	stc    
  4100f0:	lahf   
  4100f1:	(bad)  
  4100f3:	mov    eax,DWORD PTR [ecx]
  4100f5:	mov    edi,0x1c26fc0c
  4100fb:	icebp  
  4100fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100fd:	xchg   esi,eax
  4100fe:	loop   0x41010e
  410100:	sub    al,0x1c
  410102:	or     BYTE PTR [ecx+edi*2],0x68
  410106:	js     0x4100d0
  410108:	test   al,0xc4
  41010a:	mov    ?,WORD PTR [ebx-0x5918f0a9]
  410110:	dec    esp
  410111:	ss icebp 
  410113:	jbe    0x4100ea
  410115:	int    0x48
  410117:	dec    ebp
  410118:	cmp    ecx,DWORD PTR [ebp+0x13]
  41011b:	aas    
  41011c:	and    al,0x12
  41011e:	(bad)  
  41011f:	push   ss
  410120:	push   ecx
  410121:	icebp  
  410122:	xchg   DWORD PTR [ecx-0x3124639a],edi
  410128:	add    bl,BYTE PTR [esi+0x61862967]
  41012e:	jo     0x41018b
  410130:	xchg   ebp,eax
  410131:	call   0xb435:0x94917eab
  410138:	sete   BYTE PTR [esi-0x44]
  41013c:	ins    BYTE PTR es:[edi],dx
  41013d:	dec    edi
  41013e:	jle    0x41017b
  410140:	out    dx,al
  410141:	pop    ds
  410142:	mov    edi,0xeb02a9e7
  410147:	jmp    0x130e:0xcd15237b
  41014e:	sub    al,0x6c
  410150:	es inc esi
  410152:	add    ch,cl
  410154:	jb     0x41013b
  410156:	fnstenv [ebp+0x62]
  410159:	and    DWORD PTR [eax],edx
  41015b:	mov    dl,0x94
  41015d:	inc    ebp
  41015e:	push   0xbd995f7c
  410163:	mov    ebx,0x9d550e3e
  410168:	cwde   
  410169:	push   ss
  41016a:	(bad)  
  41016b:	enter  0x2efc,0x84
  41016f:	push   es
  410170:	sub    DWORD PTR [esi+eax*1-0x5e],0x2a
  410175:	into   
  410176:	dec    eax
  410177:	lahf   
  410178:	push   esp
  410179:	stos   DWORD PTR es:[edi],eax
  41017a:	ja     0x41019d
  41017c:	cmp    esp,ebx
  41017e:	out    0xfc,eax
  410180:	(bad)  
  410181:	shl    DWORD PTR [ebx+0x240b5231],0x57
  410188:	pop    ebx
  410189:	aad    0x43
  41018b:	add    DWORD PTR [edi],esi
  41018d:	ja     0x4101fe
  41018f:	mov    bl,0x37
  410191:	add    ah,cl
  410193:	js     0x410162
  410195:	cmovns edi,DWORD PTR [ecx+0x20]
  410199:	cs (bad) 
  41019b:	pop    esp
  41019c:	mov    ah,0xf7
  41019e:	pop    ebx
  41019f:	stos   DWORD PTR es:[edi],eax
  4101a0:	cmp    DWORD PTR [eax-0x7a88b84c],0xffffffb6
  4101a7:	pop    ss
  4101a8:	in     eax,dx
  4101a9:	mov    dh,0x0
  4101ab:	in     eax,0x85
  4101ad:	out    dx,al
  4101ae:	and    esi,DWORD PTR ds:0x4eccd26c
  4101b4:	mov    dh,0x65
  4101b6:	pop    esp
  4101b7:	jno    0x410203
  4101b9:	and    dh,cl
  4101bb:	out    0x1e,eax
  4101bd:	pop    edx
  4101be:	mov    ds:0x4f4d9cfd,al
  4101c3:	xor    edx,esp
  4101c5:	rcl    BYTE PTR [ecx+0x42],cl
  4101c8:	ret    0xe73a
  4101cb:	pop    edi
  4101cc:	mov    ebp,0xa59816e6
  4101d1:	jno    0x41017b
  4101d3:	and    eax,0xe4d2b6d2
  4101d8:	lahf   
  4101d9:	cmp    ebp,DWORD PTR [ebx+0x610edb3e]
  4101df:	fdiv   st,st(0)
  4101e1:	retf   0xf4bd
  4101e4:	xchg   DWORD PTR [edx],esp
  4101e6:	jmp    0x2252:0x88b83a71
  4101ed:	es cmp al,0xe1
  4101f0:	icebp  
  4101f1:	xor    eax,0x7095d081
  4101f6:	mov    esi,DWORD PTR [ebp+0x20]
  4101f9:	xchg   edx,eax
  4101fa:	sahf   
  4101fb:	js     0x41019b
  4101fd:	mov    ebx,ebx
  4101ff:	sub    al,cl
  410201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410202:	jns    0x410252
  410204:	int3   
  410205:	cmc    
  410206:	mov    al,ds:0xc1d5db09
  41020b:	push   ebx
  41020c:	sahf   
  41020d:	xor    DWORD PTR [ecx+0x37619753],ebp
  410213:	mov    ah,0x3e
  410215:	bound  edx,QWORD PTR [ecx+0x6025eaa1]
  41021b:	bound  ebp,QWORD PTR [ebx+0x70]
  41021e:	fnstcw WORD PTR [ebp-0x1e3d4d23]
  410224:	mov    dl,BYTE PTR [eax+eax*4+0x1c7b1e22]
  41022b:	test   BYTE PTR [esi-0x18],dh
  41022e:	add    al,0x94
  410230:	lahf   
  410231:	jne    0x410283
  410233:	pop    es
  410234:	mov    edi,0x56d53b26
  410239:	and    ebx,DWORD PTR [esi]
  41023b:	jbe    0x4101c2
  41023d:	mov    ch,BYTE PTR [esi]
  41023f:	clc    
  410240:	mov    cl,0xb1
  410242:	push   es
  410243:	fbstp  TBYTE PTR [esi]
  410245:	push   0x6e1b60e3
  41024a:	iret   
  41024b:	nop
  41024c:	dec    eax
  41024d:	xchg   ebx,eax
  41024e:	xchg   ebp,eax
  41024f:	(bad)  
  410250:	lods   eax,DWORD PTR ds:[esi]
  410251:	and    eax,0x83417aa
  410256:	sub    DWORD PTR [ebx+esi*1],ebx
  410259:	adc    DWORD PTR [esi+edx*4],esp
  41025c:	adc    eax,0x118deaad
  410261:	mov    esp,0xab1c2214
  410266:	or     ebx,esp
  410268:	inc    ebx
  410269:	xor    BYTE PTR [eax],cl
  41026b:	jns    0x41025b
  41026d:	jp     0x41026c
  41026f:	ror    DWORD PTR [eax+0x6],cl
  410272:	or     edx,ebx
  410274:	sbb    DWORD PTR [eax],edx
  410276:	xlat   BYTE PTR ss:[ebx]
  410278:	xchg   esp,eax
  410279:	jmp    0x4102e2
  41027b:	inc    edx
  41027c:	stc    
  41027d:	and    cl,BYTE PTR [eax-0x2d47497d]
  410283:	fcomi  st,st(3)
  410285:	sbb    edi,DWORD PTR [edx*1-0x3e6f13ee]
  41028c:	inc    eax
  41028d:	sbb    DWORD PTR [ebp-0x26],ebx
  410290:	jmp    0xffadec75
  410295:	xor    bl,BYTE PTR [ecx+0x4c3f579f]
  41029b:	mov    ebp,0x4dc1ac75
  4102a0:	or     al,0xd9
  4102a2:	jmp    0x410316
  4102a4:	out    0x11,eax
  4102a6:	jmp    0x410319
  4102a8:	jo     0x410248
  4102aa:	test   DWORD PTR [edx+ebx*4+0x6b],eax
  4102ae:	mov    dl,0xcb
  4102b0:	retf   
  4102b1:	add    al,BYTE PTR [ebp+0x4c]
  4102b4:	je     0x4102c1
  4102b6:	inc    ecx
  4102b7:	ds cwde 
  4102b9:	fist   WORD PTR [eax-0x3405f9e4]
  4102bf:	cmp    ebp,eax
  4102c1:	sub    DWORD PTR [esi-0x16],eax
  4102c4:	mov    esp,0x26326f67
  4102c9:	enter  0x861a,0x67
  4102cd:	sub    DWORD PTR [ecx*2-0x7a741a0f],esi
  4102d4:	scas   eax,DWORD PTR es:[edi]
  4102d5:	inc    edx
  4102d6:	sahf   
  4102d7:	sbb    DWORD PTR [edx],eax
  4102d9:	pop    ds
  4102da:	pop    edi
  4102db:	retf   
  4102dc:	sbb    DWORD PTR [ecx+0x2e],0xd7852a12
  4102e3:	add    eax,0xc3c57adb
  4102e8:	pop    ebp
  4102e9:	xlat   BYTE PTR fs:[ebx]
  4102eb:	test   eax,0x12e92ea9
  4102f0:	cmovns edi,eax
  4102f3:	mov    cl,0x22
  4102f5:	inc    edi
  4102f6:	cmp    eax,0xe69bcc7f
  4102fb:	or     eax,0x8d7fe4e0
  410300:	loop   0x410381
  410302:	dec    ebx
  410303:	inc    DWORD PTR [eax+ecx*2-0x126874a8]
  41030a:	jmp    0x5d3d:0xa240f071
  410311:	es imul ebx,edx,0xffffffd4
  410315:	rcr    esi,0xec
  410318:	add    al,0xaf
  41031a:	cli    
  41031b:	mov    DWORD PTR [edi-0x44],ecx
  41031e:	or     esi,0x3
  410321:	and    dl,BYTE PTR [esp+esi*2-0x56]
  410325:	sub    ch,ah
  410327:	push   ss
  410328:	jmp    0xbe5:0x235fea51
  41032f:	jae    0x410301
  410331:	scas   eax,DWORD PTR es:[edi]
  410332:	xor    edi,DWORD PTR [eax+0x4c]
  410335:	mov    ecx,0x57dd9ebd
  41033a:	in     al,dx
  41033b:	je     0x410366
  41033d:	push   es
  41033e:	and    ebx,esp
  410340:	adc    eax,0x9c3e07a0
  410345:	std    
  410346:	outs   dx,DWORD PTR ds:[esi]
  410347:	packssdw mm2,QWORD PTR [ebx]
  41034a:	xchg   esp,eax
  41034b:	sti    
  41034c:	sbb    al,BYTE PTR [edx]
  41034e:	xchg   esp,eax
  41034f:	jle    0x4102ec
  410351:	ret    
  410352:	sub    eax,0x4c2c2261
  410357:	ss xchg ecx,eax
  410359:	sbb    BYTE PTR [ecx+esi*2+0x51a924f7],0xf8
  410361:	adc    BYTE PTR [esi+0x2a34aba],bh
  410367:	aaa    
  410368:	jmp    0x87efc572
  41036d:	clc    
  41036e:	mov    ch,0x2b
  410370:	aad    0x4f
  410372:	hlt    
  410373:	repnz rcl BYTE PTR [edi-0x72],0x9d
  410378:	fwait
  410379:	cmp    eax,0x45ab8181
  41037e:	in     al,dx
  41037f:	mov    al,ds:0x23cb2872
  410384:	mov    DWORD PTR [eax],0x2bcb945b
  41038a:	jns    0x4103c3
  41038c:	loop   0x410381
  41038e:	jo     0x410358
  410390:	mov    ecx,0x151f8417
  410395:	inc    ecx
  410396:	xor    edi,DWORD PTR es:[edx+ecx*2+0x5f246a9]
  41039e:	push   ds
  41039f:	cdq    
  4103a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103a1:	(bad)  [ebp+ebx*8+0x8]
  4103a5:	in     al,dx
  4103a6:	popa   
  4103a7:	mov    edi,0x77e11d7f
  4103ac:	mov    ss,WORD PTR [edx]
  4103ae:	pop    ss
  4103af:	push   ds
  4103b0:	add    DWORD PTR [ebx-0xa33b4f4],ebx
  4103b6:	inc    eax
  4103b7:	in     eax,dx
  4103b8:	push   edi
  4103b9:	jecxz  0x410439
  4103bb:	es fdiv st(2),st
  4103be:	mov    DWORD PTR [ecx-0x5072a7a3],eax
  4103c4:	pop    es
  4103c5:	in     eax,0x31
  4103c7:	mov    ds:0x38e044f1,eax
  4103cc:	xchg   ebx,eax
  4103cd:	mov    eax,0xa80de592
  4103d2:	add    bl,cl
  4103d4:	jmp    0xe426:0x658df7d6
  4103db:	adc    ebx,DWORD PTR [ebx]
  4103dd:	(bad)
  4103e0:	xor    bh,BYTE PTR [edx+0x36]
  4103e3:	test   DWORD PTR [ebp+0x10],0x854c55a9
  4103ea:	xor    eax,0x2f954b53
  4103ef:	mov    edx,0x4178c882
  4103f4:	js     0x4103a5
  4103f6:	je     0x410423
  4103f8:	push   ds
  4103f9:	or     edi,DWORD PTR [edi+esi*2+0x7c]
  4103fd:	push   edx
  4103fe:	add    DWORD PTR [eax-0x49758919],ebp
  410404:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410405:	push   ebx
  410406:	cld    
  410407:	mov    eax,ds:0xf370293b
  41040c:	pop    esi
  41040d:	lds    edx,FWORD PTR [ebx-0x60bf0911]
  410413:	cmp    esi,DWORD PTR [ecx+0x72]
  410416:	sub    al,0xd
  410418:	add    ah,BYTE PTR [ebx+0x2bce3c02]
  41041e:	inc    edi
  41041f:	xchg   edx,eax
  410420:	push   ebx
  410421:	dec    edi
  410422:	daa    
  410423:	pop    ebx
  410424:	mov    cl,0x18
  410426:	test   al,0xef
  410428:	mov    edi,0x447ec2a1
  41042d:	xchg   edi,eax
  41042e:	xchg   ecx,eax
  41042f:	xchg   esp,eax
  410430:	repz mov dh,0xc8
  410433:	jge    0x41040b
  410435:	pushf  
  410436:	into   
  410437:	stos   BYTE PTR es:[edi],al
  410438:	std    
  410439:	loope  0x4103c2
  41043b:	mov    ebx,0x7a53acbe
  410440:	pop    es
  410441:	leave  
  410442:	inc    ebp
  410443:	or     al,0xe8
  410445:	xor    DWORD PTR [edi-0x5],eax
  410448:	loope  0x4104a8
  41044a:	std    
  41044b:	cwde   
  41044c:	cld    
  41044d:	sub    al,0x68
  41044f:	in     al,dx
  410450:	mov    edx,0xb0d55160
  410455:	sbb    eax,0x54169a24
  41045a:	scas   al,BYTE PTR es:[edi]
  41045b:	adc    edx,0xa567fbfb
  410461:	gs cmp di,cx
  410465:	inc    ebx
  410466:	out    0xf3,eax
  410468:	xchg   esp,eax
  410469:	gs ret 
  41046b:	rcr    BYTE PTR [ebp+0x7a4ef861],1
  410471:	dec    esp
  410472:	cwde   
  410473:	out    0xdc,eax
  410475:	mov    edi,edx
  410477:	xor    BYTE PTR cs:[edi+0x7eab7c3e],0xe5
  41047f:	and    dh,BYTE PTR [eax+0xb0e2cb5]
  410485:	int3   
  410486:	std    
  410487:	mov    al,ds:0xbfbae7d7
  41048d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41048e:	push   0xceb401b4
  410493:	ja     0x4104e9
  410495:	pop    ebp
  410496:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410497:	and    BYTE PTR [ebx+0x4c],0x87
  41049b:	aas    
  41049c:	aam    0x57
  41049e:	dec    esi
  41049f:	(bad)  
  4104a0:	out    dx,al
  4104a1:	(bad)
  4104a4:	sti    
  4104a5:	dec    ecx
  4104a6:	mov    bl,0x72
  4104a8:	pop    ebx
  4104a9:	mov    WORD PTR [ecx+0x25],es
  4104ac:	mov    esi,0x205013bb
  4104b1:	scas   eax,DWORD PTR es:[edi]
  4104b2:	lock xor BYTE PTR [edx],0x49
  4104b6:	sahf   
  4104b7:	aaa    
  4104b8:	retf   0x3ea8
  4104bb:	adc    esi,DWORD PTR [ecx+ecx*8-0x3211edbc]
  4104c2:	push   ebp
  4104c3:	xchg   edi,eax
  4104c4:	mov    ds:0x57ee7755,al
  4104c9:	lock mov ax,0x1b7f
  4104ce:	lods   al,BYTE PTR ds:[esi]
  4104cf:	repnz outs dx,DWORD PTR ds:[esi]
  4104d1:	mov    ebx,0x24decb14
  4104d6:	inc    ecx
  4104d7:	enter  0xaea9,0x95
  4104db:	and    eax,0x4f1e910e
  4104e0:	int3   
  4104e1:	jmp    0xdae3:0x9d98c9bf
  4104e8:	jno    0x410486
  4104ea:	loope  0x410502
  4104ec:	pushf  
  4104ed:	mov    edi,0xe7345f4a
  4104f2:	sub    eax,0x3805a0d6
  4104f7:	and    BYTE PTR [ecx+0x6f09230c],cl
  4104fd:	retf   
  4104fe:	pop    es
  4104ff:	mov    cl,0xf0
  410501:	call   0x603d:0xdfa9b407
  410508:	fmul   QWORD PTR [eax+0x4d]
  41050b:	(bad)  
  41050c:	inc    edx
  41050d:	adc    eax,0xd808fa29
  410512:	fist   WORD PTR [edi]
  410514:	in     al,0xb1
  410516:	fcmovu st,st(4)
  410518:	fdivr  st(2),st
  41051a:	sub    DWORD PTR [ecx-0x47],edx
  41051d:	dec    esp
  41051e:	shrd   DWORD PTR [eax-0x67],edi,0x9b
  410523:	sti    
  410524:	pop    ecx
  410525:	xchg   esi,eax
  410526:	sbb    edi,DWORD PTR [ebp+esi*2+0x623f0a35]
  41052d:	xlat   BYTE PTR ds:[ebx]
  41052e:	lea    esp,[edx+0x3391fb28]
  410534:	ss leave 
  410536:	div    DWORD PTR [ecx-0x78]
  410539:	inc    edi
  41053a:	cmc    
  41053b:	push   eax
  41053c:	rcl    BYTE PTR [esi],0x5d
  41053f:	jl     0x4104cc
  410541:	sbb    BYTE PTR ds:0xa9e1a8a8,bl
  410547:	into   
  410548:	retf   
  410549:	sbb    bh,bl
  41054b:	or     DWORD PTR [edx],esp
  41054d:	dec    esp
  41054e:	push   0x78cfd71b
  410553:	xchg   esp,eax
  410554:	mov    cl,0x7b
  410556:	dec    edx
  410557:	mov    edi,0x4608cffb
  41055c:	xchg   esp,eax
  41055d:	dec    edx
  41055e:	dec    ebp
  41055f:	repnz or BYTE PTR [eax],al
  410562:	push   ebp
  410563:	lods   eax,DWORD PTR ds:[esi]
  410564:	fnsave [esi]
  410566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410567:	mov    ebp,edx
  410569:	pop    es
  41056a:	add    DWORD PTR [edi-0x6c],0x73a97145
  410571:	out    dx,eax
  410572:	arpl   WORD PTR [ebx],sp
  410574:	mov    ebp,cr2
  410577:	pop    edi
  410578:	pop    esp
  410579:	test   eax,0xd335e869
  41057e:	dec    esi
  41057f:	mov    al,0x94
  410581:	daa    
  410582:	mov    dh,0x18
  410584:	retf   0xd942
  410587:	inc    ebp
  410588:	(bad)  
  410589:	hlt    
  41058a:	pushf  
  41058b:	dec    ebp
  41058c:	cdq    
  41058d:	add    DWORD PTR [esi+0x2038f381],ebx
  410593:	mov    dl,0x81
  410595:	loopne 0x4105ee
  410597:	cld    
  410598:	sar    DWORD PTR [edi],0x49
  41059b:	xor    esi,DWORD PTR [esi+0x5b29a123]
  4105a1:	sbb    DWORD PTR [ebx+0x79],edi
  4105a4:	daa    
  4105a5:	sti    
  4105a6:	std    
  4105a7:	inc    esi
  4105a8:	retf   0xbfe6
  4105ab:	push   es
  4105ac:	fimul  DWORD PTR [ecx-0x44e89513]
  4105b2:	mov    ch,0xd1
  4105b4:	(bad)  
  4105b5:	jbe    0x4105a0
  4105b7:	push   es
  4105b8:	lods   al,BYTE PTR ds:[esi]
  4105b9:	add    eax,0x25119b55
  4105be:	int    0x6f
  4105c0:	shr    BYTE PTR [edi-0x35],cl
  4105c3:	and    ebx,ecx
  4105c5:	adc    eax,0x484b2c1e
  4105ca:	dec    eax
  4105cb:	leave  
  4105cc:	inc    edi
  4105cd:	mov    esp,0xf4b6591b
  4105d2:	inc    esi
  4105d3:	or     ecx,DWORD PTR [ebx+ebp*4-0x52]
  4105d7:	fs (bad) 
  4105d9:	jecxz  0x4105ad
  4105db:	sbb    DWORD PTR [ebx],0xffffffb6
  4105de:	sub    DWORD PTR [eax+0xd],0xf838c424
  4105e5:	mov    eax,ds:0x346ebd89
  4105ea:	xor    al,0xa0
  4105ec:	in     al,dx
  4105ed:	in     eax,0x60
  4105ef:	bound  ebp,QWORD PTR [edx+0x7e]
  4105f2:	popf   
  4105f3:	xchg   ecx,eax
  4105f4:	or     BYTE PTR [esi+0x4926b398],cl
  4105fa:	mov    dl,0x41
  4105fc:	dec    eax
  4105fd:	mov    edi,0xe3e85b24
  410602:	adc    al,0xbc
  410604:	xchg   ebp,eax
  410605:	jg     0x4105de
  410607:	sub    cl,dl
  410609:	and    al,0x87
  41060b:	imul   ecx,ebx,0xc5b6d4bf
  410611:	repnz push es
  410613:	hlt    
  410614:	rcl    BYTE PTR [ebp+0x48],cl
  410617:	pop    edx
  410618:	pushf  
  410619:	fwait
  41061a:	mov    bl,0x1
  41061c:	inc    ebp
  41061d:	xchg   esi,eax
  41061e:	js     0x410653
  410620:	fiadd  WORD PTR [edi]
  410622:	inc    edx
  410623:	dec    ebx
  410624:	fs sahf 
  410626:	or     eax,0xbe783ff7
  41062b:	lea    esp,[eax+ebx*2-0x71]
  41062f:	jbe    0x410695
  410631:	jno    0x4105d4
  410633:	lahf   
  410634:	dec    eax
  410635:	inc    ebx
  410636:	sar    DWORD PTR [esi-0x3e],1
  410639:	or     edi,DWORD PTR [eax+0x79]
  41063c:	xor    al,BYTE PTR [ebx-0x6d34b6e2]
  410642:	sbb    DWORD PTR [eax+0x530d1cbe],ebx
  410648:	dec    edx
  410649:	(bad)  
  41064a:	push   ds
  41064b:	xchg   esi,eax
  41064c:	inc    eax
  41064d:	sbb    al,0x5b
  41064f:	inc    edi
  410650:	mov    edx,0xeeb38068
  410655:	cmp    BYTE PTR [edi],0x15
  410658:	dec    eax
  410659:	dec    eax
  41065a:	sahf   
  41065b:	js     0x4105e2
  41065d:	push   0x4a69d374
  410662:	push   0x25abe396
  410667:	in     al,0x39
  410669:	adc    DWORD PTR [esi-0x19c84575],edx
  41066f:	or     bh,BYTE PTR [ebx+0x715c757a]
  410675:	cmp    al,0x61
  410677:	sbb    DWORD PTR [edi-0x585478db],0x27f9617d
  410681:	popa   
  410682:	mov    WORD PTR [ebx],?
  410684:	adc    ecx,edi
  410686:	in     al,0xc7
  410688:	ficom  WORD PTR [ebx-0x51]
  41068b:	cmp    al,0x90
  41068d:	xor    edi,DWORD PTR [eax+0x4e]
  410690:	push   edx
  410691:	and    eax,0x505689d
  410696:	or     dl,BYTE PTR [edi-0x76de54d6]
  41069c:	or     al,0xd2
  41069e:	in     eax,dx
  41069f:	pushf  
  4106a0:	adc    BYTE PTR [ebx+0x3e],ah
  4106a3:	and    eax,0x3309773
  4106a8:	jmp    ebp
  4106aa:	imul   eax,DWORD PTR [ebx+0xdb81d6a],0x55
  4106b1:	(bad)  
  4106b2:	mov    ebx,0xae03c91b
  4106b7:	mov    al,ds:0x263a7778
  4106bc:	mov    ecx,0xbde4f665
  4106c1:	dec    edx
  4106c2:	test   al,0x44
  4106c4:	inc    edx
  4106c5:	out    dx,al
  4106c6:	sbb    DWORD PTR [esi-0x55f35e6d],0xad917684
  4106d0:	sub    cl,ah
  4106d2:	jmp    0x63b01a2b
  4106d7:	out    dx,al
  4106d8:	loopne 0x410699
  4106da:	xchg   ebp,eax
  4106db:	inc    edi
  4106dc:	add    ebx,DWORD PTR [edx+edi*8-0x7d]
  4106e0:	adc    cl,0x2b
  4106e3:	(bad)  
  4106e4:	in     eax,dx
  4106e5:	int    0x2d
  4106e7:	mov    esi,0x4ed92568
  4106ec:	ret    0xe105
  4106ef:	imul   edx,DWORD PTR [esi+0x71d54d20],0xe0ec9fa2
  4106f9:	jecxz  0x410711
  4106fb:	jge    0x4106ef
  4106fd:	outs   dx,DWORD PTR ds:[esi]
  4106fe:	or     DWORD PTR [ecx],eax
  410700:	div    DWORD PTR [ecx-0x9]
  410703:	lods   al,BYTE PTR ds:[esi]
  410704:	and    esp,DWORD PTR [esp+ecx*4]
  410707:	in     al,dx
  410708:	push   ebp
  410709:	dec    edi
  41070a:	bound  edx,QWORD PTR [ebp+0x256d9f1d]
  410710:	ss jge 0x4106d5
  410713:	dec    ecx
  410714:	mul    BYTE PTR [ebx]
  410716:	cmc    
  410717:	pop    ss
  410718:	xor    ecx,ebp
  41071a:	jmp    0x4106fc
  41071c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41071d:	addr16 xor al,0x5d
  410720:	in     al,0x30
  410722:	jne    0x4106dc
  410724:	lods   al,BYTE PTR ds:[esi]
  410725:	or     ch,BYTE PTR [ebx-0x1c]
  410728:	or     BYTE PTR [ebx+esi*4],al
  41072b:	adc    BYTE PTR [esi-0x56d7e3c4],bh
  410731:	push   cs
  410732:	fnstcw WORD PTR [eax+0x764ed4c9]
  410738:	mov    dh,0xe
  41073a:	outs   dx,DWORD PTR ds:[esi]
  41073b:	in     eax,0xa5
  41073d:	int3   
  41073e:	pop    esp
  41073f:	les    esi,FWORD PTR [eax+0x1c]
  410742:	cmp    al,0x57
  410744:	inc    esp
  410745:	xor    al,0x72
  410747:	push   cs
  410748:	popa   
  410749:	cdq    
  41074a:	ss push ecx
  41074c:	xchg   ebp,eax
  41074d:	jl     0x41074e
  41074f:	lds    edx,FWORD PTR [esp+ebx*1]
  410752:	fidiv  DWORD PTR [ecx-0x45]
  410755:	icebp  
  410756:	pop    ss
  410757:	outs   dx,BYTE PTR ds:[esi]
  410758:	outs   dx,DWORD PTR ds:[esi]
  410759:	sub    DWORD PTR [edi],0x5536b9f4
  41075f:	xchg   edx,eax
  410760:	pop    edx
  410761:	push   ebp
  410762:	push   ds
  410763:	mov    WORD PTR [ebx],?
  410765:	add    BYTE PTR [ecx-0x5e0e731c],0x86
  41076c:	scas   al,BYTE PTR es:[edi]
  41076d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41076e:	out    dx,al
  41076f:	dec    edx
  410770:	mov    ss,WORD PTR [edi-0x43]
  410773:	scas   eax,DWORD PTR es:[edi]
  410774:	adc    DWORD PTR [esi+eax*4-0x50f10642],edx
  41077b:	in     eax,0x17
  41077d:	sar    BYTE PTR [ecx+edi*8+0x7d],1
  410781:	shl    ebp,1
  410783:	(bad)  
  410784:	cmp    BYTE PTR [ecx+eax*2+0x59],dh
  410788:	outs   dx,BYTE PTR ds:[esi]
  410789:	mov    esi,0x4aa5960a
  41078e:	xor    al,0x8d
  410790:	dec    edi
  410791:	cmp    DWORD PTR [ecx-0x6d6af7bd],eax
  410797:	mov    edi,0x2ce288dc
  41079c:	fucomip st,st(0)
  41079e:	push   eax
  41079f:	enter  0xf9b4,0x40
  4107a3:	dec    ebx
  4107a4:	cmp    cl,dh
  4107a6:	mov    edi,esp
  4107a8:	add    al,0x9e
  4107aa:	cwde   
  4107ab:	cmp    edi,esi
  4107ad:	scas   al,BYTE PTR es:[edi]
  4107ae:	mov    al,ds:0x647a64b9
  4107b3:	xchg   ebp,eax
  4107b4:	icebp  
  4107b5:	jle    0x41077e
  4107b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107b8:	add    al,0x4e
  4107ba:	mov    dl,0xa1
  4107bc:	mov    ah,ah
  4107be:	lea    edx,[ebp-0x28]
  4107c1:	(bad)  
  4107c3:	adc    cl,BYTE PTR [ebp+esi*1-0x7b]
  4107c7:	jp     0x4107b0
  4107c9:	xchg   DWORD PTR [ebp+0x682710b2],esi
  4107cf:	and    ebp,DWORD PTR [eax]
  4107d1:	xchg   ebp,eax
  4107d2:	mov    ds:0x2e2ea1b8,eax
  4107d7:	ret    
  4107d8:	inc    eax
  4107d9:	cmp    BYTE PTR [ecx-0x6f],dh
  4107dc:	jmp    0x41079e
  4107de:	or     bh,BYTE PTR ds:0xc6ca4d35
  4107e4:	(bad)  
  4107e5:	xor    ah,BYTE PTR [edi]
  4107e7:	mov    edi,0xf36e5597
  4107ec:	xchg   ecx,eax
  4107ed:	iret   
  4107ee:	sub    bh,BYTE PTR [ebp+0x5c7d47aa]
  4107f4:	fwait
  4107f5:	push   esi
  4107f6:	loopne 0x410873
  4107f8:	sbb    al,0xaf
  4107fa:	jae    0x4107da
  4107fc:	ss inc esi
  4107fe:	xchg   ebp,eax
  4107ff:	rol    DWORD PTR [eax+0x74fb0ff2],1
  410805:	loop   0x410833
  410807:	or     ch,BYTE PTR [esi-0x176d092c]
  41080d:	cmp    edi,DWORD PTR [edx-0x4e]
  410810:	sbb    DWORD PTR [eax],0xffffffce
  410813:	sbb    al,0x75
  410815:	xchg   ecx,eax
  410816:	or     edx,DWORD PTR [ebx-0x6]
  410819:	jg     0x4107a5
  41081b:	test   eax,0x9f824705
  410820:	leave  
  410821:	mov    eax,DWORD PTR [edx+edi*1-0x8]
  410825:	xchg   edi,eax
  410826:	cmp    dl,BYTE PTR [edx+0x3888a18d]
  41082c:	push   ds
  41082d:	loope  0x410892
  41082f:	scas   eax,DWORD PTR es:[edi]
  410830:	imul   eax,DWORD PTR [ebx],0xffffffea
  410833:	cli    
  410834:	jno    0x410810
  410836:	jmp    DWORD PTR [edx+0x6]
  410839:	sbb    dh,BYTE PTR [edi-0x58]
  41083c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41083d:	lahf   
  41083e:	dec    edi
  41083f:	in     al,0xcf
  410841:	or     BYTE PTR [edx-0x16],ch
  410844:	mov    ch,0x96
  410846:	push   ds
  410847:	in     eax,dx
  410848:	xchg   edi,eax
  410849:	inc    edi
  41084a:	pop    edx
  41084b:	xor    eax,0xa5528e58
  410850:	lea    eax,[ebp+0xd8a4b61]
  410856:	jmp    0x4108ad
  410858:	xchg   edx,eax
  410859:	sar    dl,1
  41085b:	fisub  DWORD PTR [ebx+0x2d62b71c]
  410861:	or     al,0xa4
  410863:	xor    bh,BYTE PTR [esi-0x5f]
  410866:	push   edx
  410867:	cmc    
  410868:	jne    0x4108c1
  41086a:	push   ebp
  41086b:	sub    al,0x74
  41086d:	ret    
  41086e:	add    edi,esp
  410870:	in     eax,0xf4
  410872:	ins    DWORD PTR es:[edi],dx
  410873:	fnstenv [edi+0x184276b7]
  410879:	pop    esp
  41087a:	pop    esp
  41087b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41087c:	push   cs
  41087d:	sbb    eax,0xfd121498
  410882:	jnp    0x4108a2
  410884:	adc    ebp,DWORD PTR ss:[ecx-0x3b4cf997]
  41088b:	ss in  al,dx
  41088d:	ss sbb edx,eax
  410890:	mov    dl,0x9b
  410892:	lahf   
  410893:	jl     0x4108a4
  410895:	mov    al,0x81
  410897:	pusha  
  410898:	daa    
  410899:	adc    DWORD PTR ds:0x2b41776d,esi
  41089f:	out    0x59,al
  4108a1:	adc    dl,BYTE PTR [ebx+eiz*2-0x6124f86b]
  4108a8:	data16 mov al,BYTE PTR [ecx+0x1d2edfe]
  4108af:	ins    BYTE PTR es:[edi],dx
  4108b0:	sub    esp,esi
  4108b2:	push   cs
  4108b3:	repz out 0xf3,eax
  4108b6:	xor    al,0x29
  4108b8:	in     al,0xe0
  4108ba:	ror    ah,1
  4108bc:	mov    bh,0xa3
  4108be:	stc    
  4108bf:	or     eax,0x8aac0ba8
  4108c4:	and    al,0x59
  4108c6:	popf   
  4108c7:	inc    esp
  4108c8:	fisubr WORD PTR [ecx+0x72]
  4108cb:	xchg   BYTE PTR [eax+0x65],bh
  4108ce:	add    dl,BYTE PTR [edi]
  4108d0:	aas    
  4108d1:	in     eax,0x52
  4108d3:	or     eax,0x91df2b25
  4108d8:	inc    ebx
  4108d9:	push   0x8c239931
  4108de:	(bad)  
  4108df:	mov    cl,0xa9
  4108e1:	fdivr  QWORD PTR [ebp+0x6b]
  4108e4:	and    bh,BYTE PTR [ebx+0x1f]
  4108e7:	and    bh,bl
  4108e9:	sub    al,0xc1
  4108eb:	test   BYTE PTR [ebp-0x24],cl
  4108ee:	mov    eax,ds:0x6c865c54
  4108f3:	leave  
  4108f4:	push   ecx
  4108f5:	test   DWORD PTR [esi],ebp
  4108f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108f8:	xchg   edi,eax
  4108f9:	fisubr WORD PTR [ecx-0x55]
  4108fc:	dec    ebx
  4108fd:	jg     0x410915
  4108ff:	test   al,0x71
  410901:	shl    BYTE PTR [eax-0x419484bb],cl
  410907:	inc    edi
  410908:	in     al,0x60
  41090a:	ins    DWORD PTR es:[edi],dx
  41090b:	mov    BYTE PTR [ebx],0x3
  41090e:	adc    dl,dh
  410910:	inc    ebp
  410911:	mov    ecx,0x65e525af
  410916:	xchg   edx,eax
  410917:	adc    ebx,DWORD PTR [ebx]
  410919:	int3   
  41091a:	adc    BYTE PTR [edi+ebp*1],dh
  41091d:	xor    bh,BYTE PTR [ecx-0x38]
  410920:	mov    dl,0x47
  410922:	sti    
  410923:	popa   
  410924:	or     al,0x2f
  410926:	mov    bh,0xcd
  410928:	dec    esp
  410929:	fcomp  DWORD PTR [eax+0x7d]
  41092c:	pop    ecx
  41092d:	repnz mov esp,0x97ddfb1f
  410933:	shl    BYTE PTR [edi+0x87d0a7d],1
  410939:	sub    ch,BYTE PTR [edi+0x6fb4d885]
  41093f:	into   
  410940:	dec    esi
  410941:	sub    ah,cl
  410943:	xlat   BYTE PTR ds:[ebx]
  410944:	and    DWORD PTR [edx-0x5049b092],esp
  41094a:	imul   ecx,ebx,0x66
  41094d:	pop    edx
  41094e:	or     BYTE PTR [edi],cl
  410950:	xor    ch,ch
  410952:	loope  0x41094e
  410954:	or     edx,ebx
  410956:	jg     0x41093a
  410958:	aas    
  410959:	lea    ecx,es:[edx]
  41095c:	aas    
  41095d:	or     BYTE PTR [esi+0x2383f175],0x43
  410964:	call   0xa01a:0xd8070b5
  41096b:	sar    BYTE PTR [ebx+edi*8],1
  41096e:	lock ret 0x998e
  410972:	je     0x41093e
  410974:	fcom   DWORD PTR [ebp+0x3c]
  410977:	dec    ebp
  410978:	mov    bh,0xf7
  41097a:	jg     0x4109c0
  41097c:	xchg   edx,eax
  41097d:	jl     0x41095e
  41097f:	and    BYTE PTR [esi-0x471a33a3],bl
  410985:	ret    
  410986:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410987:	sbb    ebp,DWORD PTR [ecx+0x2]
  41098a:	mov    ah,0xad
  41098c:	fisubr WORD PTR [edx+0x56]
  41098f:	das    
  410990:	sub    DWORD PTR [esi-0x3cf27ca4],esp
  410996:	pop    esp
  410997:	jg     0x4109e8
  410999:	jns    0x410926
  41099b:	dec    eax
  41099c:	cld    
  41099d:	and    DWORD PTR [esi-0x707ee66a],ebx
  4109a3:	into   
  4109a4:	mov    DWORD PTR [edi+eax*8],edi
  4109a7:	mov    edx,0xf1481364
  4109ac:	or     DWORD PTR [eax],edx
  4109ae:	lahf   
  4109af:	add    eax,0x77e7ecce
  4109b4:	pop    esp
  4109b5:	aam    0x67
  4109b7:	test   al,0x7d
  4109b9:	or     eax,0x7106cb1
  4109be:	pop    edx
  4109bf:	mov    BYTE PTR [esi],ch
  4109c1:	pop    esp
  4109c2:	pushf  
  4109c3:	call   0xa399:0xba90dd7c
  4109ca:	sbb    eax,0xc117ab75
  4109cf:	push   ecx
  4109d0:	aaa    
  4109d1:	jae    0x4109ba
  4109d3:	sbb    BYTE PTR [esi+edx*8+0x14],dl
  4109d7:	test   esp,ebx
  4109d9:	repz or al,BYTE PTR [eax-0x79]
  4109dd:	add    dl,BYTE PTR [ebx+0x6dbf9653]
  4109e3:	mov    eax,0x3cf3a20a
  4109e8:	push   es
  4109e9:	and    DWORD PTR [esi+0x199fd64],esp
  4109ef:	jae    0x4109c6
  4109f1:	xor    eax,0xebd644c7
  4109f6:	xor    al,0x72
  4109f8:	cmp    eax,0xc2905f00
  4109fd:	std    
  4109fe:	push   ebx
  4109ff:	cdq    
  410a00:	jns    0x410a4a
  410a02:	daa    
  410a03:	std    
  410a04:	dec    edx
  410a05:	pop    edi
  410a06:	sbb    eax,DWORD PTR ss:[ebp-0x3c89c0f7]
  410a0d:	inc    eax
  410a0e:	rcl    DWORD PTR [eax],cl
  410a10:	imul   ebp,DWORD PTR [edi+0x5bde251a],0x47
  410a17:	mov    dh,0xc9
  410a19:	xor    al,0xb7
  410a1b:	push   0x70f366c0
  410a20:	xor    DWORD PTR [edx+0x12],0xffffff99
  410a24:	leave  
  410a25:	cmp    esi,edi
  410a27:	shl    ebx,1
  410a29:	into   
  410a2a:	mov    bl,0x10
  410a2c:	mov    bh,0x25
  410a2e:	mov    BYTE PTR [esi+0x3c],bh
  410a31:	dec    ebx
  410a32:	xor    al,ah
  410a34:	cwde   
  410a35:	(bad)  
  410a36:	and    al,0xbb
  410a38:	jnp    0x4109dc
  410a3a:	mov    ah,0x6b
  410a3c:	push   edx
  410a3d:	popf   
  410a3e:	js     0x410a15
  410a40:	cmp    BYTE PTR [esi],ch
  410a42:	sub    BYTE PTR [edx-0x46a7b80f],bl
  410a48:	out    0xc,al
  410a4a:	mov    ds:0xb04df00d,eax
  410a4f:	ficom  WORD PTR [edx]
  410a51:	sahf   
  410a52:	adc    al,0x5b
  410a54:	cwde   
  410a55:	pusha  
  410a56:	pop    esp
  410a57:	sbb    DWORD PTR ds:0xf5409aa5,edi
  410a5d:	jle    0x410aaf
  410a5f:	lds    esi,FWORD PTR [edi]
  410a61:	dec    eax
  410a62:	or     dh,BYTE PTR ds:0x1ff81488
  410a68:	pop    esi
  410a69:	ret    0xe79
  410a6c:	leave  
  410a6d:	mov    ecx,0x85083724
  410a72:	lea    esp,[eax]
  410a74:	pop    ebp
  410a75:	call   0x519d:0x93b8b380
  410a7c:	jecxz  0x410ad1
  410a7e:	je     0x410a2b
  410a80:	loop   0x410a31
  410a82:	loope  0x410a94
  410a84:	inc    eax
  410a85:	or     eax,0xdc52d02c
  410a8a:	popfw  
  410a8c:	inc    ebp
  410a8d:	cmp    BYTE PTR ds:[ebp+0x6c],0x7d
  410a92:	aaa    
  410a93:	xchg   esi,eax
  410a94:	test   eax,0x5d18093f
  410a99:	bound  esp,QWORD PTR [eax+eax*2-0x5758b3d5]
  410aa0:	rcl    BYTE PTR [ebx],1
  410aa2:	mov    dh,BYTE PTR [esi+0x5]
  410aa5:	xchg   esp,eax
  410aa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410aa7:	aas    
  410aa8:	xor    BYTE PTR [ebx],ch
  410aaa:	pop    ss
  410aab:	jmp    0x410a4e
  410aad:	xor    BYTE PTR [esi+0x6fcc550],bl
  410ab3:	call   DWORD PTR [edx+eiz*8-0x72]
  410ab7:	xchg   edi,eax
  410ab8:	(bad)  
  410ab9:	scas   eax,DWORD PTR es:[edi]
  410aba:	repnz test DWORD PTR [ebx-0x5287a697],edi
  410ac1:	mov    eax,0x75faab74
  410ac6:	mov    ecx,?
  410ac8:	data16 mov al,0xbf
  410acb:	test   ch,dh
  410acd:	pop    ebp
  410ace:	sub    ecx,edx
  410ad0:	test   al,0xf9
  410ad2:	test   BYTE PTR [esi+esi*8-0x724047c9],ah
  410ad9:	xchg   ebx,eax
  410ada:	loope  0x410b4d
  410adc:	sbb    DWORD PTR [edi+esi*2+0x4c],eax
  410ae0:	sbb    eax,0xd52330f4
  410ae5:	sahf   
  410ae6:	jne    0x410aaf
  410ae8:	fiadd  DWORD PTR [eax]
  410aea:	cmp    ch,BYTE PTR ds:0x498ddf5f
  410af0:	jo     0x410b54
  410af2:	aad    0x2e
  410af4:	jmp    0x410b33
  410af6:	jg     0x410abd
  410af8:	cmp    DWORD PTR [ecx-0x3f],eax
  410afb:	rol    BYTE PTR ds:0xf7e78e0f,0x7a
  410b02:	imul   ebx,DWORD PTR [esi-0x4e998d38],0xa21883ca
  410b0c:	(bad)  
  410b0d:	adc    esp,eax
  410b0f:	push   0xffffffc4
  410b11:	xor    al,0x2b
  410b13:	mov    edi,0x5e548315
  410b18:	or     BYTE PTR [edi-0x4c72a79a],0x99
  410b1f:	inc    edi
  410b20:	test   al,0x7
  410b22:	adc    eax,0x4dd37012
  410b27:	mov    al,0x0
  410b29:	lds    ebp,FWORD PTR [eax+0x6c51188a]
  410b2f:	icebp  
  410b30:	lods   al,BYTE PTR ds:[esi]
  410b31:	sbb    eax,edx
  410b33:	or     eax,0x841af3b2
  410b38:	push   ebx
  410b39:	lds    ebp,FWORD PTR [ecx]
  410b3b:	scas   eax,DWORD PTR es:[edi]
  410b3c:	mov    WORD PTR [edi],?
  410b3e:	inc    eax
  410b3f:	mov    ebx,ebx
  410b41:	sti    
  410b42:	mov    ch,BYTE PTR [esi]
  410b44:	pop    ebx
  410b45:	push   ds
  410b46:	pop    ss
  410b47:	jae    0x410b06
  410b49:	pop    es
  410b4a:	outs   dx,DWORD PTR ds:[esi]
  410b4b:	call   FWORD PTR [edx]
  410b4d:	dec    ebp
  410b4e:	pusha  
  410b4f:	retf   
  410b50:	test   BYTE PTR [eax+0x72],bh
  410b53:	lds    ecx,FWORD PTR [edi-0x10]
  410b56:	xchg   edx,eax
  410b57:	mov    dl,0x6f
  410b59:	mov    ds:0x3855b7be,al
  410b5e:	jae    0x410b46
  410b60:	or     eax,0xf92155d1
  410b65:	daa    
  410b66:	mov    al,0x5e
  410b68:	inc    edx
  410b69:	fstp   QWORD PTR [edx]
  410b6b:	lahf   
  410b6c:	xchg   ebx,eax
  410b6d:	inc    edx
  410b6e:	je     0x410b55
  410b70:	mov    ds:0x241e42e4,eax
  410b75:	out    0xe9,eax
  410b77:	out    0xc0,al
  410b79:	sub    esp,DWORD PTR [edx-0x32]
  410b7c:	mov    esi,edx
  410b7e:	add    BYTE PTR [esp+edx*2+0x3a8a674e],cl
  410b85:	ror    ah,0x3
  410b88:	retf   
  410b89:	mov    ebp,0x3f5e34b7
  410b8e:	dec    edi
  410b8f:	fwait
  410b90:	fwait
  410b91:	lahf   
  410b92:	cld    
  410b93:	ret    
  410b94:	adc    eax,0x7976395b
  410b99:	sub    eax,0x37a62781
  410b9e:	imul   ebx,DWORD PTR [ebp-0x3d],0x32e54996
  410ba5:	loop   0x410b71
  410ba7:	adc    al,0x6
  410ba9:	and    al,0x26
  410bab:	ins    BYTE PTR es:[edi],dx
  410bac:	gs jno 0x410b8a
  410baf:	std    
  410bb0:	ins    DWORD PTR es:[edi],dx
  410bb1:	inc    esp
  410bb2:	mov    eax,ds:0xb20e6f58
  410bb7:	cli    
  410bb8:	push   es
  410bb9:	cmp    cl,BYTE PTR [ecx-0x32]
  410bbc:	sbb    BYTE PTR [edi+0x1e],ch
  410bbf:	clc    
  410bc0:	out    dx,eax
  410bc1:	mov    cl,0xae
  410bc3:	cli    
  410bc4:	mov    ebp,0x20486be0
  410bc9:	(bad)  
  410bca:	xchg   ebx,eax
  410bcb:	sbb    esi,esi
  410bcd:	mov    ds:0x87e18e46,al
  410bd2:	sub    eax,0x94edf4ea
  410bd7:	mov    bl,0x8c
  410bd9:	pusha  
  410bda:	rcr    BYTE PTR [edi],cl
  410bdc:	in     eax,dx
  410bdd:	out    0xa8,eax
  410bdf:	test   ah,dh
  410be1:	pop    ecx
  410be2:	ret    
  410be3:	mov    eax,ds:0x77dce330
  410be8:	mov    dh,cl
  410bea:	mov    al,0x9a
  410bec:	(bad)  
  410bed:	push   ds
  410bee:	popa   
  410bef:	(bad)  
  410bf0:	cmp    eax,0x1c31ee0
  410bf5:	stos   DWORD PTR es:[di],eax
  410bf7:	outs   dx,DWORD PTR ds:[esi]
  410bf8:	add    bh,BYTE PTR [eax+0x32]
  410bfb:	shl    ch,cl
  410bfd:	mov    edi,0x680e6e4a
  410c02:	lahf   
  410c03:	push   eax
  410c04:	(bad)  
  410c05:	shl    bl,cl
  410c07:	inc    ebx
  410c08:	icebp  
  410c09:	sub    eax,0x7ea828c6
  410c0e:	icebp  
  410c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c10:	(bad)  
  410c11:	leave  
  410c12:	fs pushf 
  410c14:	dec    esp
  410c15:	pop    esp
  410c16:	icebp  
  410c17:	ss dec ebx
  410c19:	jb     0x410c24
  410c1b:	jns    0x410c70
  410c1d:	jnp    0x410c70
  410c1f:	push   0x22
  410c21:	push   esi
  410c22:	push   esp
  410c23:	fld    QWORD PTR ds:0xa5ce961c
  410c29:	adc    eax,0x1864aac3
  410c2e:	cli    
  410c2f:	sub    dh,cl
  410c31:	scas   al,BYTE PTR es:[edi]
  410c32:	shl    BYTE PTR [eax-0x16],0x12
  410c36:	dec    edx
  410c37:	into   
  410c38:	adc    esp,DWORD PTR gs:[edi-0x52]
  410c3c:	cld    
  410c3d:	pop    ebp
  410c3e:	lock jmp 0x410bd0
  410c41:	pop    eax
  410c42:	out    0xe2,al
  410c44:	mov    eax,0x96f7f1f7
  410c49:	or     al,0xf9
  410c4b:	enter  0x65f4,0xf9
  410c4f:	shl    DWORD PTR [eax+esi*2+0x121bb2c8],0x53
  410c57:	pop    ds
  410c58:	sub    al,0x8b
  410c5a:	stos   BYTE PTR es:[edi],al
  410c5b:	or     ecx,DWORD PTR [eax-0x7]
  410c5e:	rcl    DWORD PTR [ecx+0x1f],cl
  410c61:	pop    ss
  410c62:	dec    eax
  410c63:	into   
  410c64:	jmp    0x410be8
  410c66:	addr16 dec edi
  410c68:	xor    BYTE PTR [ebp-0x28],bl
  410c6b:	mov    ebx,0xdb9e5e08
  410c70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c71:	(bad)  
  410c72:	int3   
  410c73:	fiadd  WORD PTR [eax]
  410c75:	fsubr  QWORD PTR [ecx]
  410c77:	rcl    DWORD PTR [ebx-0x4b],0x2c
  410c7b:	(bad)  
  410c7c:	push   ebp
  410c7d:	inc    BYTE PTR [ecx]
  410c7f:	dec    edi
  410c80:	xchg   esi,eax
  410c81:	rcr    DWORD PTR [esi],0x0
  410c84:	mov    ebp,0xad06a256
  410c89:	and    ecx,DWORD PTR [edi+0x6d86148c]
  410c8f:	(bad)  
  410c90:	stc    
  410c91:	dec    ebp
  410c92:	adc    al,0xed
  410c94:	dec    edx
  410c95:	(bad)  
  410c96:	popa   
  410c97:	mov    esi,0x846f8e37
  410c9c:	in     eax,dx
  410c9d:	mov    bh,0x96
  410c9f:	xchg   esi,eax
  410ca0:	cmp    ecx,ebp
  410ca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ca3:	test   dl,0x6f
  410ca6:	icebp  
  410ca7:	inc    ebx
  410ca8:	mov    DWORD PTR [edx],ebx
  410caa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cab:	inc    eax
  410cac:	push   eax
  410cad:	mov    bh,0xb9
  410caf:	stos   DWORD PTR es:[edi],eax
  410cb0:	mov    ds:0xfd75cdae,eax
  410cb5:	xor    BYTE PTR gs:[ecx+0x41],0x13
  410cba:	das    
  410cbb:	int3   
  410cbc:	out    dx,eax
  410cbd:	sbb    eax,0x172dfc5
  410cc2:	mov    bh,0x56
  410cc4:	mov    edi,0x4a144ae9
  410cc9:	mov    ds:0x18eedf9a,al
  410cce:	jb     0x410d12
  410cd0:	fild   QWORD PTR [edx-0x39]
  410cd3:	dec    ecx
  410cd4:	sbb    al,0x50
  410cd6:	jge    0x410cbf
  410cd8:	out    dx,eax
  410cd9:	push   ebp
  410cda:	mov    eax,ds:0x33fddbfb
  410cdf:	mov    ch,0xc3
  410ce1:	out    0x19,al
  410ce3:	jne    0x410d10
  410ce5:	fdivr  DWORD PTR [edx]
  410ce7:	ret    0xd141
  410cea:	pop    esi
  410ceb:	mov    edi,0xbc11b345
  410cf0:	in     al,0xed
  410cf2:	test   eax,0xe4e9bcd3
  410cf7:	mov    eax,0x88fb09be
  410cfc:	mov    esi,0x6ad1e4e0
  410d01:	das    
  410d02:	(bad)  
  410d03:	fs adc al,0xf5
  410d06:	xlat   BYTE PTR ss:[ebx]
  410d08:	(bad)  
  410d0a:	clc    
  410d0b:	jbe    0x410c93
  410d0d:	inc    edx
  410d0e:	data16 clc 
  410d10:	jmp    0xa05167ef
  410d15:	mov    bh,0xdf
  410d17:	mov    ch,0xf
  410d19:	and    esi,ebx
  410d1b:	aad    0xf8
  410d1d:	adc    al,0xd3
  410d1f:	in     eax,0x33
  410d21:	push   cs
  410d22:	adc    DWORD PTR [edx+0x67],edi
  410d25:	xchg   esi,eax
  410d26:	in     al,0x9b
  410d28:	ret    0xd1c3
  410d2b:	fnsave [edi]
  410d2d:	aaa    
  410d2e:	fdiv   DWORD PTR [ebx]
  410d30:	ror    DWORD PTR [edi+0x14a4ee05],1
  410d36:	cmp    al,0x9f
  410d38:	xchg   esi,eax
  410d39:	iret   
  410d3a:	jmp    0xa4fd:0xc30632d2
  410d41:	jp     0x410ce7
  410d43:	outs   dx,BYTE PTR ds:[esi]
  410d44:	sbb    BYTE PTR [edx+0x736b25b7],0x9
  410d4b:	mov    ch,0xd0
  410d4d:	jmp    0x832519f
  410d52:	sub    DWORD PTR [esi-0x5a25f54e],ecx
  410d58:	repz adc eax,0xe2e14f4b
  410d5e:	retf   0x7b36
  410d61:	dec    edx
  410d62:	xor    al,0x30
  410d64:	mov    eax,0x14b93409
  410d69:	inc    ecx
  410d6a:	fcmovnu st,st(6)
  410d6c:	fs adc eax,0x6063e169
  410d72:	push   0x6a51cb29
  410d77:	into   
  410d78:	xor    al,0xae
  410d7a:	popf   
  410d7b:	mov    ds:0xd41c259e,al
  410d80:	ja     0x410d23
  410d82:	inc    esi
  410d83:	mov    esi,0x69b3f856
  410d88:	stos   BYTE PTR es:[edi],al
  410d89:	jnp    0x410db8
  410d8b:	je     0x410da6
  410d8d:	repz xchg ecx,eax
  410d8f:	add    edx,DWORD PTR [edi+0x2692445c]
  410d95:	mov    cl,0x91
  410d97:	enter  0x6241,0x23
  410d9b:	sbb    DWORD PTR [esi-0x37b82f7],eax
  410da1:	cmp    eax,0x7e64b470
  410da6:	cmp    al,0x96
  410da8:	xchg   edx,eax
  410da9:	sbb    eax,0x58ae113a
  410dae:	mov    bh,0x37
  410db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410db1:	jae    0x410d92
  410db3:	mov    esp,0xfb25f805
  410db8:	mov    ebp,0x18590cb7
  410dbd:	jmp    0x6638:0xeb2a93a9
  410dc4:	add    eax,0x5fa81db2
  410dc9:	cld    
  410dca:	and    eax,0x10583dd4
  410dcf:	pusha  
  410dd0:	das    
  410dd1:	xor    ebp,edi
  410dd3:	outs   dx,DWORD PTR ds:[esi]
  410dd4:	ret    
  410dd5:	add    al,0xf0
  410dd7:	push   ss
  410dd8:	inc    ecx
  410dd9:	pushf  
  410dda:	sbb    al,0xeb
  410ddc:	sar    BYTE PTR [ecx+0x36],0x6d
  410de0:	cdq    
  410de1:	pop    eax
  410de2:	sbb    al,BYTE PTR ds:0xa9ae26d7
  410de8:	mov    gs,WORD PTR [ecx-0x24]
  410deb:	dec    esi
  410dec:	or     bl,BYTE PTR [esi+ebp*2+0x41c4b7f7]
  410df3:	enter  0x9861,0x44
  410df7:	fcmovnb st,st(2)
  410df9:	cdq    
  410dfa:	bound  eax,QWORD PTR [edx+0x79802892]
  410e00:	xor    eax,0xa75cf2b2
  410e05:	rcl    DWORD PTR [esi+0x51],1
  410e08:	mov    eax,0xadcabd23
  410e0d:	js     0x410e48
  410e0f:	lods   eax,DWORD PTR ds:[esi]
  410e10:	xchg   esi,eax
  410e11:	add    al,0xe6
  410e13:	outs   dx,BYTE PTR ds:[esi]
  410e14:	test   cl,dh
  410e16:	test   eax,0xf21451b3
  410e1b:	pop    ebx
  410e1c:	mov    ch,0xc6
  410e1e:	into   
  410e1f:	sbb    DWORD PTR [eax+esi*8-0x43],edx
  410e23:	cmp    bl,ah
  410e25:	inc    ebx
  410e26:	imul   edx,DWORD PTR [esi-0x69],0x13
  410e2a:	(bad)  [esi]
  410e2c:	mov    edx,0xd1d6602a
  410e31:	inc    edx
  410e32:	push   esp
  410e33:	fld    DWORD PTR [eax+0x69ae503f]
  410e39:	imul   esi,esi,0x8b5dc949
  410e3f:	xor    ah,al
  410e41:	enter  0xbbf,0x32
  410e45:	fnsave [ecx+esi*1+0x45]
  410e49:	fdivr  st,st(2)
  410e4b:	cdq    
  410e4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e4d:	push   esi
  410e4e:	out    0xdf,eax
  410e50:	xor    DWORD PTR [esp+ebp*8-0x72d98462],edx
  410e57:	and    al,0x9d
  410e59:	cmc    
  410e5a:	clc    
  410e5b:	hlt    
  410e5c:	mov    ebp,0x36fc50ee
  410e61:	imul   ecx,DWORD PTR [edx-0x6e],0x64
  410e65:	mov    ds:0xd850d02d,eax
  410e6a:	loopne 0x410ede
  410e6c:	fldcw  WORD PTR [edx+0x163ab969]
  410e72:	aad    0xdb
  410e74:	pushf  
  410e75:	sub    BYTE PTR [ecx-0x18c01735],cl
  410e7b:	pop    edx
  410e7c:	dec    ecx
  410e7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e7e:	ret    
  410e7f:	adc    DWORD PTR [esi],edi
  410e81:	jns    0x410ee8
  410e83:	push   edi
  410e84:	mov    dh,bh
  410e86:	arpl   WORD PTR [ecx],bx
  410e88:	js     0x410e2d
  410e8a:	push   ss
  410e8b:	jbe    0x410f0c
  410e8d:	push   0xffffffa9
  410e8f:	push   edi
  410e90:	jmp    0x14d80730
  410e95:	outs   dx,BYTE PTR ds:[esi]
  410e96:	imul   edx,DWORD PTR [ecx+0x78],0x65
  410e9a:	push   esp
  410e9b:	dec    BYTE PTR [ebp-0x13]
  410e9e:	test   al,0xb6
  410ea0:	sahf   
  410ea1:	and    dl,BYTE PTR [esi-0x14]
  410ea4:	leave  
  410ea5:	scas   al,BYTE PTR es:[edi]
  410ea6:	aad    0x88
  410ea8:	test   BYTE PTR [eax],ah
  410eaa:	mov    ebx,0xe2ddcb68
  410eaf:	repnz or DWORD PTR [edx-0x15],edi
  410eb3:	int    0xcb
  410eb5:	or     al,BYTE PTR [edx]
  410eb7:	jecxz  0x410eca
  410eb9:	test   BYTE PTR ds:0x3c66714e,dl
  410ebf:	sub    al,0xbe
  410ec1:	ins    DWORD PTR es:[edi],dx
  410ec2:	jno    0x410e57
  410ec4:	mov    ecx,0xe8b65946
  410ec9:	cmc    
  410eca:	mov    bh,dl
  410ecc:	(bad)  
  410ecd:	retf   
  410ece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ecf:	sbb    BYTE PTR [ebp-0x55970520],bh
  410ed5:	fnstenv [edx-0x77]
  410ed8:	hlt    
  410ed9:	call   0xf5d8:0xad470c59
  410ee0:	or     eax,0x51c1d49e
  410ee5:	pop    edx
  410ee6:	or     ah,cl
  410ee8:	leave  
  410ee9:	into   
  410eea:	cmp    BYTE PTR [esi],ah
  410eec:	jo     0x410f26
  410eee:	pusha  
  410eef:	sar    BYTE PTR [esi*8-0x7972f131],cl
  410ef6:	lea    esp,[ebx]
  410ef8:	pop    es
  410ef9:	cmp    al,0xb7
  410efb:	mov    dh,0x9c
  410efd:	jb     0x410ecb
  410eff:	jno    0x410f4c
  410f01:	inc    ebp
  410f02:	mov    ebp,0x6181fcc
  410f07:	imul   ebx,DWORD PTR [esi+0x6db18b82],0x4d
  410f0e:	mov    WORD PTR [esi+0x43],es
  410f11:	ffreep st(4)
  410f13:	dec    edx
  410f14:	fucomp st(1)
  410f16:	pusha  
  410f17:	push   ebp
  410f18:	mov    al,ds:0xcc340f45
  410f1d:	push   es
  410f1e:	jge    0x410ede
  410f20:	adc    DWORD PTR [ecx-0x54],edx
  410f23:	sbb    cl,BYTE PTR [edx+0x71]
  410f26:	(bad)  
  410f27:	rcr    DWORD PTR fs:[esi-0x40],1
  410f2b:	dec    eax
  410f2c:	inc    edx
  410f2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f2e:	dec    edx
  410f2f:	cmp    ah,BYTE PTR [edi+0xf]
  410f32:	pop    ebp
  410f33:	jb     0x410faf
  410f35:	pop    edx
  410f36:	sahf   
  410f37:	jg     0x410ef7
  410f39:	(bad)  
  410f3a:	and    bl,bh
  410f3c:	jge    0x410ed9
  410f3e:	in     al,dx
  410f3f:	scas   al,BYTE PTR es:[edi]
  410f40:	in     al,dx
  410f41:	mov    WORD PTR [edi-0x44c4026c],fs
  410f47:	ins    BYTE PTR es:[edi],dx
  410f48:	xchg   esp,eax
  410f49:	add    al,0x6
  410f4b:	mov    ecx,0xde19efb5
  410f50:	in     al,dx
  410f51:	pushf  
  410f52:	pop    ebp
  410f53:	ret    0x23ad
  410f56:	add    BYTE PTR ss:[ebx],bl
  410f59:	dec    edi
  410f5b:	loop   0x410faa
  410f5d:	imul   ecx,DWORD PTR [eax],0xd
  410f60:	mov    DWORD PTR [ecx],0x2c4df459
  410f66:	dec    esp
  410f67:	mov    ds:0xacda78d7,al
  410f6c:	into   
  410f6d:	mov    eax,ds:0xa1279700
  410f72:	cmp    BYTE PTR cs:[edi+0x5b7ac133],bh
  410f79:	jbe    0x410f7c
  410f7b:	retf   
  410f7c:	int3   
  410f7d:	out    0x88,al
  410f7f:	cs stc 
  410f81:	push   ebx
  410f82:	gs fsub st,st(3)
  410f85:	sbb    BYTE PTR [ecx+eiz*1],ah
  410f88:	dec    edx
  410f89:	sbb    DWORD PTR [edi],ebp
  410f8b:	xchg   BYTE PTR [edi],al
  410f8d:	mov    BYTE PTR [ecx-0x7d],ah
  410f90:	inc    esi
  410f91:	dec    ecx
  410f92:	sbb    eax,0x9ed486bb
  410f97:	xchg   ecx,eax
  410f98:	cwde   
  410f99:	cmp    cl,al
  410f9b:	jp     0x410f83
  410f9d:	das    
  410f9e:	sbb    bh,BYTE PTR [edi+eax*4+0x74]
  410fa2:	(bad)  
  410fa3:	xchg   esi,eax
  410fa4:	xor    edx,DWORD PTR [esi+0x7e]
  410fa7:	lods   al,BYTE PTR ds:[esi]
  410fa8:	pop    ds
  410fa9:	ja     0x410f9c
  410fab:	loopne 0x410f98
  410fad:	cli    
  410fae:	add    al,0x83
  410fb0:	(bad)  
  410fb1:	push   edx
  410fb2:	add    BYTE PTR ds:0xd3dd50fe,dl
  410fb8:	cs loopne 0x410fbd
  410fbb:	and    ebp,DWORD PTR [edx-0x72]
  410fbe:	fwait
  410fbf:	es int 0x7f
  410fc2:	xor    edi,0x7a7ab5d6
  410fc8:	(bad)  
  410fc9:	popf   
  410fca:	icebp  
  410fcb:	mov    bh,0xec
  410fcd:	dec    esp
  410fce:	adc    edx,DWORD PTR [ebp+0xa]
  410fd1:	add    al,0xc5
  410fd3:	ja     0x410fb7
  410fd5:	call   0x2920a258
  410fda:	and    ah,BYTE PTR [edx-0x60e6875a]
  410fe0:	retf   
  410fe1:	push   ebp
  410fe2:	dec    esp
  410fe3:	mov    esi,0xdbc6ae27
  410fe8:	loope  0x410fea
  410fea:	jb     0x410fad
  410fec:	cwde   
  410fed:	shl    esi,1
  410fef:	stc    
  410ff0:	adc    edi,DWORD PTR [edx-0x16]
  410ff3:	cmp    al,0x4a
  410ff5:	add    eax,0xa4e90a79
  410ffa:	mov    WORD PTR [edx+0x42],gs
  410ffd:	add    al,0x5b
  410fff:	comiss xmm0,DWORD PTR [eax+esi*2]
  411003:	lahf   
  411004:	test   ah,bh
  411006:	sub    DWORD PTR [edx+edx*2-0x5e0f00dc],edx
  41100d:	push   ss
  41100e:	call   0xddaec5bc
  411013:	jno    0x411090
  411015:	and    bh,BYTE PTR [eax+esi*4]
  411018:	ret    
  411019:	imul   ecx,DWORD PTR [ebx+0x74422877],0x493af3d5
  411023:	push   ds
  411024:	mov    ecx,0x4e12598
  411029:	ins    BYTE PTR es:[edi],dx
  41102a:	rcr    DWORD PTR [edi-0x2e],cl
  41102d:	cs in  al,dx
  41102f:	shl    DWORD PTR ds:0xd46cf798,cl
  411035:	mov    fs,eax
  411037:	push   0xffffff8b
  411039:	bound  edx,QWORD PTR [ebx-0xe9e8be9]
  41103f:	leave  
  411040:	cs sub eax,0x427a26c2
  411046:	add    BYTE PTR [esi-0x50056a29],al
  41104c:	pop    ecx
  41104d:	xor    BYTE PTR [ecx+0x27],cl
  411050:	add    ecx,DWORD PTR [edx+0x33]
  411053:	test   bl,0x69
  411056:	daa    
  411057:	xchg   edx,eax
  411058:	out    dx,eax
  411059:	xor    ch,bl
  41105b:	call   0x707e:0x917736c4
  411062:	mov    cl,0x70
  411064:	ror    DWORD PTR [esi-0x3ce7bef9],cl
  41106a:	shr    DWORD PTR [ecx+0x36f833ca],cl
  411070:	in     eax,0x63
  411072:	mov    bh,0x68
  411074:	shr    eax,1
  411076:	mov    al,bl
  411078:	sbb    cl,BYTE PTR [ebp+0x3ac586fc]
  41107e:	aaa    
  41107f:	mov    esi,0x401a2471
  411084:	rcr    DWORD PTR [eax+0x6886e67f],1
  41108a:	cld    
  41108b:	(bad)  [esi+esi*1]
  41108e:	scas   al,BYTE PTR es:[edi]
  41108f:	sub    al,0xfc
  411091:	mov    ebp,0xe9e96ea2
  411096:	cwde   
  411097:	stos   DWORD PTR es:[edi],eax
  411098:	add    DWORD PTR [ecx+0x2b],esp
  41109b:	ins    BYTE PTR es:[edi],dx
  41109c:	pop    ecx
  41109d:	pushf  
  41109e:	dec    esp
  41109f:	(bad)  
  4110a0:	call   0x26b2:0x3b82f097
  4110a7:	cmp    BYTE PTR [ebp+0x4f1c0b0e],cl
  4110ad:	ror    BYTE PTR [ecx+eax*2],cl
  4110b0:	mov    ecx,DWORD PTR [edx+0x3c]
  4110b3:	and    al,0x6
  4110b5:	cmp    esi,DWORD PTR [edi+0x25]
  4110b8:	jp     0x4110a9
  4110ba:	mov    edi,0x77bb2dda
  4110bf:	les    eax,FWORD PTR [edi]
  4110c1:	lods   eax,DWORD PTR ds:[esi]
  4110c2:	aad    0x31
  4110c4:	lods   eax,DWORD PTR ds:[esi]
  4110c5:	xor    DWORD PTR [edx],ebp
  4110c7:	(bad)  
  4110c8:	pop    eax
  4110c9:	pop    esi
  4110ca:	inc    edi
  4110cb:	fld    QWORD PTR [eax+0x63]
  4110ce:	mov    ebp,0xfdbbaeb8
  4110d3:	sub    eax,0x7d433994
  4110d8:	or     ecx,DWORD PTR [edi+0x166f79fc]
  4110de:	mov    dh,0xf
  4110e0:	mov    ds:0x65e70c81,al
  4110e5:	scas   eax,DWORD PTR es:[edi]
  4110e6:	hlt    
  4110e7:	cs pop esi
  4110e9:	stos   BYTE PTR es:[edi],al
  4110ea:	jecxz  0x411096
  4110ec:	addr16 xor eax,0x5d29c50b
  4110f2:	adc    ebx,esi
  4110f4:	in     al,dx
  4110f5:	sbb    bh,al
  4110f7:	jo     0x41112b
  4110f9:	add    bh,BYTE PTR [ecx+edi*4]
  4110fc:	loop   0x411160
  4110fe:	mov    BYTE PTR [esi],ch
  411100:	push   ds
  411101:	shl    esi,1
  411103:	push   cs
  411104:	ja     0x411098
  411106:	sti    
  411107:	mov    bl,0x7c
  411109:	jne    0x411186
  41110b:	inc    edi
  41110c:	bound  edx,QWORD PTR ds:0xd3e5711e
  411112:	dec    ebx
  411113:	test   eax,0xfc65717b
  411118:	dec    esp
  411119:	iret   
  41111a:	sbb    dh,BYTE PTR [esi+esi*1]
  41111d:	and    cl,dl
  41111f:	sub    ch,al
  411121:	or     eax,0x2a8c74f0
  411126:	adc    BYTE PTR [ebp+0x18],0x3e
  41112a:	js     0x41117b
  41112c:	push   edx
  41112d:	aad    0x7a
  41112f:	dec    edi
  411130:	inc    ecx
  411131:	test   eax,0x91e6d009
  411136:	out    dx,eax
  411137:	mov    dh,0x97
  411139:	sbb    eax,ebp
  41113b:	pushf  
  41113c:	in     eax,dx
  41113d:	push   eax
  41113e:	xchg   DWORD PTR [eax+0x2e],ebx
  411141:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411142:	fadd   QWORD PTR ds:0x99ffcde8
  411148:	stos   DWORD PTR es:[edi],eax
  411149:	and    al,BYTE PTR [bp+si-0x4ed]
  41114e:	push   ebp
  41114f:	cwde   
  411150:	xchg   ecx,eax
  411151:	adc    BYTE PTR ds:0x6b078a95,bh
  411157:	xchg   esp,eax
  411158:	pextrw esi,(bad),0xc5
  41115a:	mov    ah,0xa9
  41115c:	push   ecx
  41115d:	loop   0x411114
  41115f:	gs sahf 
  411161:	dec    edi
  411162:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411163:	mov    al,0x44
  411165:	sahf   
  411166:	leave  
  411167:	je     0x411191
  411169:	mov    dh,0x4
  41116b:	repz mov cl,0x96
  41116e:	or     DWORD PTR [esi+0x7c],ebp
  411171:	dec    edx
  411172:	pop    ds
  411173:	sbb    ch,bl
  411175:	ror    DWORD PTR [ebp-0x23],0xdd
  411179:	ret    0xaffd
  41117c:	bound  ecx,QWORD PTR [eax+0x7a]
  41117f:	es inc esp
  411181:	cmp    eax,edx
  411183:	sahf   
  411184:	retf   
  411185:	mov    al,ds:0x81ef66b
  41118a:	and    eax,0xed98d5e8
  41118f:	jmp    0x4111a2
  411191:	mov    eax,ds:0xfcf552a4
  411196:	mov    BYTE PTR [ebx+0x7e57b3ac],0x34
  41119d:	pop    esi
  41119e:	xchg   edx,eax
  41119f:	and    ah,BYTE PTR [edi]
  4111a1:	out    0x30,eax
  4111a3:	mov    ah,0x8b
  4111a5:	adc    al,0xd6
  4111a7:	popa   
  4111a8:	cdq    
  4111a9:	hlt    
  4111aa:	pop    ds
  4111ab:	xor    DWORD PTR [ebp-0x70],0x14
  4111af:	pop    eax
  4111b0:	mov    esp,0x84a35dbc
  4111b5:	jle    0x4111cd
  4111b7:	pop    es
  4111b8:	jp     0x411222
  4111ba:	cmp    BYTE PTR [edi-0x52],dh
  4111bd:	cmp    bl,dh
  4111bf:	adc    al,bh
  4111c1:	push   edx
  4111c2:	pusha  
  4111c3:	outs   dx,DWORD PTR ds:[esi]
  4111c4:	xor    ah,dl
  4111c6:	pop    esi
  4111c7:	data16 inc BYTE PTR ds:[esi+ecx*8-0x3e61c2d9]
  4111d0:	or     ebx,DWORD PTR [edx+0x40]
  4111d3:	and    esi,DWORD PTR [esi]
  4111d5:	imul   BYTE PTR ds:0xce19ac4f
  4111db:	test   al,0xa2
  4111dd:	outs   dx,DWORD PTR ds:[esi]
  4111de:	cwde   
  4111df:	test   DWORD PTR [edx-0x7e4aa4f0],ecx
  4111e5:	ja     0x41116b
  4111e7:	pop    esi
  4111e8:	lea    ecx,[esi-0x37]
  4111eb:	repz or al,0xf7
  4111ee:	repnz test BYTE PTR [edx+eiz*8+0x6a],dl
  4111f3:	mov    edi,0x3cc47ff0
  4111f8:	sbb    ecx,DWORD PTR [ebx+0x34]
  4111fb:	pop    es
  4111fc:	lea    edx,[edx+eax*4-0x14b6d2b5]
  411203:	push   edx
  411204:	mov    edi,0x622d4456
  411209:	shl    BYTE PTR [ebp+0x6d679f0c],1
  41120f:	das    
  411210:	std    
  411211:	pop    es
  411212:	xchg   bh,bh
  411214:	cmp    al,0x1
  411216:	rep lods eax,DWORD PTR ds:[si]
  411219:	popf   
  41121a:	gs dec edx
  41121c:	gs pop ecx
  41121e:	rcl    ebp,1
  411220:	ficom  WORD PTR [eax-0x48d7e6b7]
  411226:	loope  0x411239
  411228:	(bad)  
  411229:	stc    
  41122a:	daa    
  41122b:	mov    eax,ds:0xd2f994fe
  411230:	sub    eax,0xba1d4e61
  411235:	in     eax,dx
  411236:	cmc    
  411237:	xor    eax,0xcb191c6a
  41123c:	test   DWORD PTR [eax-0x6e],ecx
  41123f:	in     eax,0x3c
  411241:	or     al,0x15
  411243:	or     BYTE PTR [esi-0x37c9f5b6],al
  411249:	dec    edx
  41124a:	aad    0x99
  41124c:	test   DWORD PTR [edi-0x19],esi
  41124f:	xchg   edi,eax
  411250:	and    eax,0x6b73be9d
  411255:	add    edx,edi
  411257:	mov    dl,0xc4
  411259:	xchg   DWORD PTR [ebp-0x29],esp
  41125c:	jmp    0xbe0e:0x998d4d63
  411263:	dec    edx
  411264:	lods   eax,DWORD PTR ds:[esi]
  411265:	xor    ebp,ecx
  411267:	jecxz  0x411252
  411269:	aaa    
  41126a:	lea    ebx,[ebx-0x5e10f5b]
  411270:	mov    bl,0x11
  411272:	push   esp
  411273:	aaa    
  411274:	ins    BYTE PTR es:[edi],dx
  411275:	jb     0x411212
  411277:	fimul  WORD PTR [esi+0x12]
  41127a:	cli    
  41127b:	mov    BYTE PTR cs:[ecx+0x7e],bl
  41127f:	shr    DWORD PTR [ebp-0x21c7dfa8],cl
  411285:	xor    BYTE PTR [ecx-0x16],ah
  411288:	or     ebp,DWORD PTR ds:0x36591894
  41128e:	dec    edx
  41128f:	cs mov dh,0xbe
  411292:	jns    0x4112ee
  411294:	adc    DWORD PTR [ecx],edx
  411296:	mov    esi,ds
  411298:	and    al,0x27
  41129a:	into   
  41129b:	mov    edx,0xc1f93e10
  4112a0:	mov    dl,0xfe
  4112a2:	rcr    DWORD PTR [edx+0x4dab6481],1
  4112a8:	pop    es
  4112a9:	push   edx
  4112aa:	aad    0x80
  4112ac:	add    BYTE PTR [esi+0x1c421349],ah
  4112b2:	xchg   esi,eax
  4112b3:	push   ss
  4112b4:	jnp    0x41127d
  4112b6:	loopne 0x411335
  4112b8:	jmp    esi
  4112ba:	ins    DWORD PTR es:[edi],dx
  4112bb:	push   ecx
  4112bc:	and    DWORD PTR [ecx+0x0],0x101744cb
  4112c3:	mov    ecx,gs
  4112c5:	(bad)  
  4112c7:	pop    edx
  4112c8:	jno    0x411284
  4112ca:	mov    ebp,0xe43a0d24
  4112cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112d0:	ret    
  4112d1:	mov    esi,0x56617a52
  4112d6:	dec    ecx
  4112d7:	jmp    0xe44c4567
  4112dc:	mov    eax,ds:0x862802b8
  4112e1:	pop    esp
  4112e2:	daa    
  4112e3:	and    DWORD PTR [edx-0x3e1f10f8],esi
  4112e9:	ss sar dl,0x44
  4112ed:	dec    esp
  4112ee:	test   BYTE PTR [edi+0x9900a3],dh
  4112f4:	mov    bh,0xc
  4112f6:	mov    bl,0x79
  4112f8:	mov    bl,0xc2
  4112fa:	test   BYTE PTR [ecx+esi*4+0x29a2dac3],dh
  411301:	jl     0x4112a4
  411303:	test   bh,dl
  411305:	imul   eax,esp,0xffffffb7
  411308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411309:	mov    edx,0x24fabc64
  41130e:	sub    cl,BYTE PTR [ecx+0x5e]
  411311:	popa   
  411312:	or     dl,BYTE PTR [ebx+ebp*2]
  411315:	add    al,al
  411317:	jp     0x411366
  411319:	pandn  mm2,QWORD PTR [ecx]
  41131c:	mov    bl,0xe3
  41131e:	hlt    
  41131f:	xchg   ebx,edi
  411321:	neg    DWORD PTR [ecx-0x3a]
  411324:	pop    ds
  411325:	ror    BYTE PTR [edx],0x16
  411328:	or     ch,BYTE PTR [edi]
  41132a:	xor    DWORD PTR [esp+ebp*8+0x3f],esp
  41132e:	scas   al,BYTE PTR es:[edi]
  41132f:	(bad)  
  411330:	cmc    
  411331:	sahf   
  411332:	mov    al,0x7f
  411334:	mov    DWORD PTR [ecx+ebp*2],esi
  411337:	dec    DWORD PTR [eax]
  411339:	sub    dh,BYTE PTR [esi]
  41133b:	xor    eax,0x4f50083e
  411340:	jae    0x4113a7
  411342:	mov    ebp,0x485f5745
  411347:	push   0x12
  411349:	das    
  41134a:	dec    edi
  41134b:	mov    edx,0x777fc5fb
  411350:	fild   WORD PTR [edx]
  411352:	push   ds
  411353:	cmp    al,0xde
  411355:	and    eax,eax
  411357:	test   al,0x0
  411359:	mov    WORD PTR [ebp+0x3a172321],es
  41135f:	into   
  411360:	sbb    eax,0xfdf5ce10
  411365:	aaa    
  411366:	jne    0x4113ba
  411368:	cdq    
  411369:	mov    ebx,0xfab6ab2f
  41136e:	adc    eax,0xc34610bb
  411373:	aas    
  411374:	jmp    0x5d2c:0xa0168272
  41137b:	shl    BYTE PTR [ebx-0xeb3d3b9],1
  411381:	push   esp
  411382:	pop    ebp
  411383:	in     eax,dx
  411384:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411385:	stos   DWORD PTR es:[edi],eax
  411386:	fs (bad) 
  411388:	aas    
  411389:	and    al,0xaa
  41138b:	es pushf 
  41138d:	mov    ah,0x7c
  41138f:	gs add eax,0x4c7bc56d
  411395:	add    BYTE PTR [edx+0x3229c63f],ch
  41139b:	sub    dl,dh
  41139d:	jge    0x41133b
  41139f:	mov    eax,0x3f4fc938
  4113a4:	cmc    
  4113a5:	ret    
  4113a6:	or     ebx,DWORD PTR [edx-0x54]
  4113a9:	lea    esi,[esi]
  4113ab:	cwde   
  4113ac:	pop    ebx
  4113ad:	outs   dx,DWORD PTR gs:[esi]
  4113af:	cld    
  4113b0:	jmp    0x454ab1f8
  4113b5:	push   esi
  4113b6:	mov    al,ds:0x7d5f7de9
  4113bb:	(bad)  
  4113bd:	push   es
  4113be:	stos   BYTE PTR es:[edi],al
  4113bf:	fwait
  4113c0:	cli    
  4113c1:	call   DWORD PTR [esp+edx*8+0x41c93771]
  4113c8:	adc    al,0xc7
  4113ca:	sbb    al,BYTE PTR [esi]
  4113cc:	es jo  0x41138e
  4113cf:	scas   eax,DWORD PTR es:[edi]
  4113d0:	xor    BYTE PTR [edx],0x7e
  4113d3:	inc    ecx
  4113d4:	xor    al,0x88
  4113d6:	fwait
  4113d7:	aaa    
  4113d8:	mov    ?,WORD PTR [esi+edx*1-0x73]
  4113dc:	iret   
  4113dd:	aam    0xe3
  4113df:	dec    edx
  4113e0:	dec    edx
  4113e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113e2:	mov    ch,0x89
  4113e4:	lahf   
  4113e5:	enter  0x6504,0x4c
  4113e9:	call   0xa11c6003
  4113ee:	retf   
  4113ef:	push   ds
  4113f0:	inc    ecx
  4113f1:	es mov al,0xc0
  4113f4:	pop    esi
  4113f5:	jns    0x4113d8
  4113f7:	test   cl,bl
  4113f9:	and    al,0xa2
  4113fb:	sar    edx,0x4b
  4113fe:	dec    ecx
  4113ff:	mov    bl,0xb4
  411401:	sar    DWORD PTR ds:0xc0ea2529,1
  411407:	sbb    ebp,DWORD PTR [ecx-0x6eb8653f]
  41140d:	rcr    BYTE PTR [esp+ecx*1-0x45],cl
  411411:	push   0x68001d1a
  411416:	aaa    
  411417:	dec    esi
  411418:	mov    ?,esi
  41141a:	mov    eax,0xe1971838
  41141f:	xchg   BYTE PTR [edx],dh
  411421:	or     DWORD PTR [ecx],eax
  411423:	mov    ch,0x46
  411425:	fisttp DWORD PTR [eax-0xc]
  411428:	fisub  DWORD PTR [edx+edx*2-0x4e75e0d9]
  41142f:	scas   al,BYTE PTR es:[edi]
  411430:	sub    ah,BYTE PTR [eax]
  411432:	sti    
  411433:	jne    0x41140f
  411435:	sbb    al,0x3a
  411437:	sub    eax,0x3c33c3a7
  41143c:	jno    0x411413
  41143e:	adc    eax,0x6a596cb9
  411443:	push   edx
  411444:	xor    bl,BYTE PTR [ebp+0x20b54943]
  41144a:	rcr    eax,cl
  41144c:	adc    dh,ah
  41144e:	mov    dl,0x5e
  411450:	out    dx,eax
  411451:	pushf  
  411452:	inc    ebp
  411453:	sub    DWORD PTR [edx-0x53],ebx
  411456:	xor    DWORD PTR [esp+ebx*4-0x72961cdb],0xeb15a4e0
  411461:	rol    dh,cl
  411463:	outs   dx,DWORD PTR ds:[esi]
  411464:	ja     0x4113e7
  411466:	mov    ds:0x37056e84,al
  41146b:	adc    ecx,esi
  41146d:	mov    es,WORD PTR [ecx]
  41146f:	aam    0x59
  411471:	jmp    0xbbde:0x3f75267c
  411478:	mov    dl,0xb9
  41147a:	call   0x97e4:0xb47fa7a5
  411481:	inc    esp
  411482:	mov    esi,0x82b9f401
  411487:	(bad)  
  411489:	test   eax,0x7cc76564
  41148e:	xchg   esi,eax
  41148f:	mov    ebp,0x4d62cdb3
  411494:	call   0x25d1311d
  411499:	cwde   
  41149a:	adc    bh,BYTE PTR [eax-0x58a7e7b5]
  4114a0:	xchg   ebp,eax
  4114a1:	lods   eax,DWORD PTR ds:[esi]
  4114a2:	mov    BYTE PTR [ecx+0x1b269ab2],bl
  4114a8:	pushw  0xffd5
  4114ab:	mov    es,WORD PTR [esi+0x2cb3c600]
  4114b1:	aam    0x16
  4114b3:	(bad)  
  4114b4:	mov    ebx,0xe8e6053e
  4114b9:	cmp    ecx,DWORD PTR [ecx+0x7a]
  4114bc:	fld    TBYTE PTR [edi]
  4114be:	sbb    dh,bh
  4114c0:	jle    0x4114c7
  4114c2:	xor    eax,0x4bfdb08c
  4114c7:	jb     0x411516
  4114c9:	stos   BYTE PTR es:[edi],al
  4114ca:	out    dx,al
  4114cb:	or     BYTE PTR [edx],ah
  4114cd:	and    ebx,DWORD PTR [ebp-0x5a1ec6a8]
  4114d3:	lds    ebp,FWORD PTR [edx-0x559869ee]
  4114d9:	mov    ch,0x55
  4114db:	jecxz  0x411532
  4114dd:	int    0x84
  4114df:	add    al,dh
  4114e1:	lahf   
  4114e2:	sbb    al,0x7e
  4114e4:	jecxz  0x4114e9
  4114e6:	mov    dh,0x8
  4114e8:	fcomip st,st(4)
  4114ea:	fldenv [ebx+0x753c6667]
  4114f0:	pop    edx
  4114f1:	xchg   edx,eax
  4114f2:	retf   
  4114f3:	xchg   ebx,eax
  4114f4:	cmp    BYTE PTR [ebx],bh
  4114f6:	push   es
  4114f7:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4114f9:	loopne 0x4114ce
  4114fb:	mov    ebx,0xf73889b4
  411500:	sub    ch,BYTE PTR [ebx]
  411502:	or     bh,BYTE PTR [eax]
  411504:	jne    0x4114cc
  411506:	mov    ecx,0x16d7c17c
  41150b:	dec    BYTE PTR [ebp-0x2d8c19f5]
  411511:	push   esi
  411512:	stos   BYTE PTR es:[edi],al
  411513:	imul   ebp,DWORD PTR [ecx-0x2b4887ba],0x38f2ae01
  41151d:	ret    
  41151e:	inc    ebx
  41151f:	xchg   ecx,eax
  411520:	push   esp
  411521:	pop    es
  411522:	into   
  411523:	jno    0x4114d6
  411525:	adc    al,0xa8
  411527:	dec    edi
  411528:	bound  ebx,QWORD PTR gs:[ebx-0x6a0d3234]
  41152f:	inc    edx
  411530:	outs   dx,DWORD PTR ds:[esi]
  411531:	mov    edi,0x96b7233d
  411536:	call   0xbece:0x8edd18ce
  41153d:	adc    edx,DWORD PTR [ebx]
  41153f:	aam    0x1d
  411541:	jg     0x41158c
  411543:	inc    edi
  411544:	mov    edx,ebp
  411546:	rcl    DWORD PTR [esi],0xed
  411549:	cmp    ah,bl
  41154b:	and    BYTE PTR [ebp-0xc2aeb2f],0xca
  411552:	sbb    edi,0x7120ad3f
  411558:	push   0x1
  41155a:	cmc    
  41155b:	ja     0x4115d6
  41155d:	aad    0xb
  41155f:	shl    ecx,0x6f
  411562:	not    DWORD PTR [eax+0x5a]
  411565:	jns    0x411581
  411567:	mov    esi,0xe15bfa79
  41156c:	push   ss
  41156d:	inc    edx
  41156e:	sar    DWORD PTR [eax-0x27],cl
  411571:	repnz cmp eax,0x74e39f5c
  411577:	loop   0x4115f8
  411579:	loopne 0x411500
  41157b:	pop    edx
  41157c:	retf   
  41157d:	call   0x77378683
  411582:	push   esi
  411583:	or     eax,0x3880903c
  411588:	and    ebx,DWORD PTR [edi+ebp*1+0x3abb083e]
  41158f:	sub    bh,BYTE PTR [edx]
  411591:	sub    eax,0x25261f70
  411596:	pusha  
  411597:	xchg   ecx,eax
  411598:	xchg   esp,eax
  411599:	sbb    BYTE PTR [ecx+ecx*4-0x292af0f2],0xc5
  4115a1:	inc    ecx
  4115a2:	inc    ecx
  4115a3:	or     al,0x71
  4115a5:	mov    BYTE PTR ds:[esi-0x3f],bl
  4115a9:	sbb    ecx,DWORD PTR [esi-0x2458bd5b]
  4115af:	std    
  4115b0:	mov    edx,0x887fc081
  4115b5:	(bad)  
  4115b7:	jne    0x411621
  4115b9:	push   ecx
  4115ba:	dec    ecx
  4115bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115bc:	fistp  DWORD PTR [esi+0x67]
  4115bf:	xor    ebp,eax
  4115c1:	cli    
  4115c2:	mov    dl,0x97
  4115c4:	fcom   st(1)
  4115c6:	dec    ebp
  4115c7:	fnstcw WORD PTR [ebp+0x70]
  4115ca:	pusha  
  4115cb:	jae    0x4115e9
  4115cd:	lahf   
  4115ce:	add    BYTE PTR [esi*8-0x3a1c694],dh
  4115d5:	fld    DWORD PTR [edi+0x6c]
  4115d8:	aaa    
  4115d9:	and    DWORD PTR [esp+edi*1+0x3d6849c5],ebp
  4115e0:	leave  
  4115e1:	call   0x99fd26fc
  4115e6:	pushf  
  4115e7:	mov    al,0x36
  4115e9:	test   ebp,0x6ed95427
  4115ef:	cmp    eax,0xe7351fa8
  4115f4:	mov    edx,0x7c9cf9f1
  4115f9:	cs stos DWORD PTR es:[edi],eax
  4115fb:	jmp    0xf058496
  411600:	jl     0x4115de
  411602:	cmp    DWORD PTR [edi-0x60],ebp
  411605:	cmp    eax,0x242386c1
  41160a:	or     bl,BYTE PTR [eax-0x281c612e]
  411610:	dec    edx
  411611:	or     bh,BYTE PTR [ecx-0x9]
  411614:	(bad)  
  411615:	sahf   
  411616:	ja     0x411629
  411618:	mov    ecx,0x942d6b8b
  41161d:	mov    dh,al
  41161f:	test   al,0x78
  411621:	jne    0x4115d6
  411623:	add    BYTE PTR [ecx],al
  411625:	push   0xad64bf8
  41162a:	inc    esi
  41162b:	mov    eax,ds:0xa04b0cf9
  411630:	cli    
  411631:	sbb    al,0x53
  411633:	dec    esp
  411634:	inc    ebx
  411635:	mov    cl,0xdf
  411637:	ret    0x3d2f
  41163a:	and    al,0xee
  41163c:	push   0xffffffcb
  41163e:	xchg   ebp,eax
  41163f:	fst    st(1)
  411641:	aaa    
  411642:	js     0x41166a
  411644:	push   esp
  411645:	sti    
  411646:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411647:	aaa    
  411648:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411649:	push   ecx
  41164a:	rcr    dl,cl
  41164c:	mov    ebx,0xa8957c46
  411651:	imul   eax,edx,0x5c
  411654:	std    
  411655:	test   eax,0x32c7d2a4
  41165a:	mov    cl,0x56
  41165c:	push   ds
  41165d:	js     0x4116c7
  41165f:	mov    ecx,0x5141b30
  411664:	sbb    DWORD PTR [edi+edx*2-0x4c],esi
  411668:	jbe    0x41169a
  41166a:	xchg   ebx,eax
  41166b:	cmp    DWORD PTR [ecx-0x68],ecx
  41166e:	mov    ds:0x13f716e5,al
  411673:	cmp    al,0x32
  411675:	jmp    0x92473063
  41167a:	repz cmp BYTE PTR [esi+0x32536031],dl
  411681:	cmp    al,0xbe
  411683:	pop    eax
  411684:	shl    BYTE PTR [edx-0x43],1
  411687:	cmc    
  411688:	bound  eax,QWORD PTR [eax-0x22]
  41168b:	aam    0x8c
  41168d:	imul   ebx,DWORD PTR [esi],0xfffffff5
  411690:	sti    
  411691:	out    0x7,al
  411693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411694:	push   esp
  411695:	scas   al,BYTE PTR es:[edi]
  411696:	test   eax,0x8feb055
  41169b:	xor    eax,0x272e4ac3
  4116a0:	das    
  4116a1:	or     ecx,DWORD PTR [edx]
  4116a3:	nop
  4116a4:	or     bh,BYTE PTR [ecx-0x14878fdb]
  4116aa:	stos   DWORD PTR es:[edi],eax
  4116ab:	loop   0x41164b
  4116ad:	ror    cl,cl
  4116af:	out    dx,eax
  4116b0:	and    al,0x74
  4116b2:	rcr    ecx,0xba
  4116b5:	mov    ebp,0xfbafb096
  4116ba:	mov    ah,BYTE PTR [esp+ecx*4+0x7fbbd392]
  4116c1:	mov    al,0xb3
  4116c3:	mov    cl,0xbb
  4116c5:	ds inc edi
  4116c7:	cs jns 0x4116b2
  4116ca:	not    DWORD PTR ds:0x966353aa
  4116d0:	jg     0x4116c5
  4116d2:	imul   esp,edi,0xffffffbd
  4116d5:	into   
  4116d6:	and    esi,esp
  4116d8:	jmp    0x41168c
  4116da:	mov    BYTE PTR [esp+eax*4],bh
  4116dd:	in     eax,dx
  4116de:	jl     0x41175c
  4116e0:	xchg   edi,eax
  4116e1:	cmp    BYTE PTR [edi-0x1d8ea4e2],dl
  4116e7:	pop    ss
  4116e8:	inc    ecx
  4116e9:	cli    
  4116ea:	test   DWORD PTR [ebp+0x50e48168],ebp
  4116f0:	push   edx
  4116f1:	push   ss
  4116f2:	cmp    WORD PTR [edi],ax
  4116f5:	xor    al,0x1f
  4116f7:	jecxz  0x4116a7
  4116f9:	push   ebp
  4116fa:	retf   
  4116fb:	into   
  4116fc:	fstp   TBYTE PTR [esp+esi*8-0xb]
  411700:	push   0x42
  411702:	mov    esi,0x71b3368c
  411707:	pop    ss
  411708:	loop   0x41168b
  41170a:	or     DWORD PTR [esi],esi
  41170c:	punpckhbw mm3,QWORD PTR [eax+eiz*2-0x1575dca0]
  411714:	jle    0x411779
  411716:	in     al,0xc8
  411718:	cli    
  411719:	adc    al,0x97
  41171b:	adc    al,0x2a
  41171d:	sub    ebp,DWORD PTR [ebx]
  41171f:	in     eax,dx
  411720:	call   0x636d9bea
  411725:	mov    edx,0x9ed3b7e2
  41172a:	cmc    
  41172b:	sar    DWORD PTR [ebp-0x43],0x94
  41172f:	popf   
  411730:	mov    ?,WORD PTR [edx*8+0x78163bcd]
  411737:	push   esp
  411738:	ror    ebp,1
  41173a:	cmp    dl,BYTE PTR [eax-0x19]
  41173d:	js     0x4116d1
  41173f:	add    BYTE PTR ds:0x1faeb137,ah
  411745:	fist   DWORD PTR ds:0xa64506ab
  41174b:	(bad)  
  41174c:	xor    DWORD PTR [esi-0x21],esi
  41174f:	test   al,0x2
  411751:	call   0xfd041608
  411756:	xchg   ebx,eax
  411757:	cmc    
  411758:	or     al,BYTE PTR [edi]
  41175a:	lods   al,BYTE PTR ds:[esi]
  41175b:	xor    bh,ch
  41175d:	cli    
  41175e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41175f:	mov    ecx,0x26cfd9d2
  411764:	dec    edi
  411765:	adc    bh,dh
  411767:	fild   QWORD PTR [eax-0x74]
  41176a:	js     0x411708
  41176c:	mov    al,ds:0x7a34ddbd
  411771:	aaa    
  411772:	inc    esi
  411773:	push   ss
  411774:	or     esi,DWORD PTR [ebx]
  411776:	lods   eax,DWORD PTR ds:[esi]
  411777:	pop    ss
  411778:	inc    edi
  411779:	push   ecx
  41177a:	jp     0x4117da
  41177c:	out    dx,eax
  41177d:	mov    cl,0x26
  41177f:	aad    0x85
  411781:	fiadd  WORD PTR [ebx-0x4ccd2120]
  411787:	enter  0xe058,0xb3
  41178b:	pop    ebx
  41178c:	or     ebp,DWORD PTR [edx]
  41178e:	and    ecx,DWORD PTR [edi]
  411790:	ror    BYTE PTR [ebp+0x6b],cl
  411793:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411794:	push   ecx
  411795:	mov    esi,0x15096d93
  41179a:	addr16 ret 
  41179c:	add    eax,0x75fb2c8c
  4117a1:	scas   eax,DWORD PTR es:[edi]
  4117a2:	loope  0x4117e8
  4117a4:	aam    0x25
  4117a6:	and    BYTE PTR [eax],ch
  4117a8:	mov    ?,ebx
  4117aa:	push   edx
  4117ab:	enter  0xf8e3,0x29
  4117af:	or     al,BYTE PTR [ecx+ecx*4+0x57]
  4117b3:	push   ss
  4117b4:	jno    0x411814
  4117b6:	fistp  DWORD PTR [ecx+0x51fb1c2b]
  4117bc:	out    dx,eax
  4117bd:	push   ebp
  4117be:	xchg   DWORD PTR [edx],esp
  4117c0:	int3   
  4117c1:	push   0x1db099b5
  4117c6:	leave  
  4117c7:	inc    edi
  4117c8:	out    0xfb,eax
  4117ca:	and    BYTE PTR [edx-0x20],bl
  4117cd:	push   esi
  4117ce:	push   edi
  4117cf:	push   ebx
  4117d0:	mov    dl,0xb2
  4117d2:	shr    DWORD PTR [ecx-0x28],1
  4117d5:	cmp    DWORD PTR [ebx+0x78e61343],ebp
  4117db:	mov    edi,0x6aa8b31c
  4117e0:	ins    DWORD PTR es:[edi],dx
  4117e1:	cmp    DWORD PTR [edx],ebx
  4117e3:	or     dl,BYTE PTR [ebp-0x28c736d4]
  4117e9:	sar    BYTE PTR [edi+0x7a291080],1
  4117ef:	lods   eax,DWORD PTR ds:[esi]
  4117f0:	sbb    DWORD PTR [edi],esi
  4117f2:	sbb    BYTE PTR [edx+ecx*4],bl
  4117f5:	sbb    al,0xd3
  4117f7:	data16 sbb cl,BYTE PTR [eax+0x24]
  4117fb:	icebp  
  4117fc:	cli    
  4117fd:	mov    ch,0xaa
  4117ff:	cmp    ah,bl
  411801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411802:	jge    0x4117cc
  411804:	(bad)  [esi]
  411806:	xchg   esi,eax
  411807:	repz fidivr DWORD PTR [esi-0x21]
  41180b:	dec    esp
  41180c:	pop    ebp
  41180d:	clc    
  41180e:	in     eax,0xe8
  411810:	add    ebp,DWORD PTR [edi-0x58d1dd0b]
  411816:	test   BYTE PTR [ebp-0x5b63a59b],bh
  41181c:	aas    
  41181d:	cli    
  41181e:	pop    ds
  41181f:	or     al,BYTE PTR [eax]
  411821:	xchg   esi,eax
  411822:	nop
  411823:	pop    ebp
  411824:	daa    
  411825:	push   0xffffffb9
  411827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411828:	std    
  411829:	pop    ds
  41182a:	inc    ecx
  41182b:	sbb    dh,BYTE PTR [ecx]
  41182d:	pop    esp
  41182e:	cmc    
  41182f:	pop    edi
  411830:	mov    bl,0xa9
  411832:	pushf  
  411833:	sub    al,0xbc
  411835:	xor    edx,esp
  411837:	hlt    
  411838:	mov    al,ds:0xdc13e2e7
  41183d:	daa    
  41183e:	out    dx,al
  41183f:	mov    eax,ds:0x9743e93c
  411844:	sar    DWORD PTR [edi],1
  411846:	hlt    
  411847:	xor    DWORD PTR [edx],esi
  411849:	or     ecx,DWORD PTR [ecx+0x7e]
  41184c:	int    0x5a
  41184e:	retf   
  41184f:	pop    ebx
  411850:	repnz iret 
  411852:	std    
  411853:	scas   al,BYTE PTR es:[edi]
  411854:	jnp    0x411863
  411856:	sub    BYTE PTR [edi-0x74],dh
  411859:	mov    eax,ds:0x3aeb2c7c
  41185e:	out    0xc2,eax
  411860:	xchg   ecx,eax
  411861:	popf   
  411862:	das    
  411863:	mov    cl,0xa3
  411865:	shl    DWORD PTR [eax],1
  411867:	(bad)  
  411868:	pop    ebx
  411869:	or     bl,BYTE PTR [ebp+0x79]
  41186c:	add    eax,0x80510c06
  411871:	test   BYTE PTR [esi],dl
  411873:	ds jbe 0x411841
  411876:	ss sbb ebx,0xf807fa12
  41187d:	out    0xcb,eax
  41187f:	push   cs
  411880:	add    DWORD PTR [edx],edi
  411882:	gs xchg ecx,eax
  411884:	pop    eax
  411885:	or     dl,bl
  411887:	ror    BYTE PTR [esi],cl
  411889:	ds mov ebp,0x2d8f8300
  41188f:	popf   
  411890:	cmp    al,0x6e
  411892:	push   esp
  411894:	fwait
  411895:	add    ebx,DWORD PTR [ebp+0x5ed72467]
  41189b:	call   0xf2af5331
  4118a0:	fiadd  WORD PTR [eax+0x27e9ae70]
  4118a6:	scas   al,BYTE PTR es:[edi]
  4118a7:	hlt    
  4118a8:	ins    BYTE PTR es:[edi],dx
  4118a9:	aaa    
  4118aa:	jp     0x4118f3
  4118ac:	sbb    eax,DWORD PTR [edx-0x70]
  4118af:	adc    bl,BYTE PTR [ebx]
  4118b1:	scas   eax,DWORD PTR es:[edi]
  4118b2:	test   DWORD PTR [edx],esi
  4118b4:	mov    ch,0x82
  4118b6:	jnp    0x411908
  4118b8:	js     0x4118c9
  4118ba:	cmp    al,0xbe
  4118bc:	inc    edi
  4118bd:	enter  0x9964,0x35
  4118c1:	add    DWORD PTR [ebx+0x51],0xffffffd9
  4118c5:	mov    ds:0x74db0452,eax
  4118ca:	shr    BYTE PTR ds:0xf6ac49da,1
  4118d0:	xchg   BYTE PTR [eax-0x41],bl
  4118d3:	mov    ch,BYTE PTR [eax-0x3]
  4118d6:	mov    al,ds:0x317f2e62
  4118db:	add    dl,BYTE PTR [ebx-0x12]
  4118de:	jae    0x411894
  4118e0:	retf   
  4118e1:	popa   
  4118e2:	inc    ebp
  4118e3:	rcl    dh,1
  4118e5:	retf   0x312e
  4118e8:	ja     0x411922
  4118ea:	mov    ebp,0xb9964634
  4118ef:	call   0xb42bb856
  4118f4:	repz or ah,BYTE PTR [ecx-0x71]
  4118f8:	push   ds
  4118f9:	jo     0x411923
  4118fb:	sbb    esi,DWORD PTR [edx]
  4118fd:	dec    edi
  4118fe:	sti    
  4118ff:	dec    edx
  411900:	inc    edi
  411901:	xor    DWORD PTR [edx],esp
  411903:	ja     0x4118ac
  411905:	push   ds
  411906:	xor    DWORD PTR [edi],esi
  411908:	lods   al,BYTE PTR ds:[esi]
  411909:	cmp    esi,DWORD PTR [edx+eax*1+0x1e647f0d]
  411910:	(bad)  
  411911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411912:	gs scas al,BYTE PTR es:[di]
  411915:	adc    dh,ch
  411917:	dec    eax
  411918:	cmp    al,BYTE PTR [ebx]
  41191a:	das    
  41191b:	and    BYTE PTR [eax+0x248cc937],0xec
  411922:	mov    edx,0x4813ce0d
  411927:	ss lahf 
  411929:	pop    ebp
  41192a:	sbb    dl,dh
  41192c:	outs   dx,BYTE PTR ds:[esi]
  41192d:	nop
  41192e:	jb     0x411938
  411930:	push   ecx
  411931:	push   es
  411932:	addr16 adc al,0xe7
  411935:	cld    
  411936:	sahf   
  411937:	lock popf 
  411939:	adc    al,0xfe
  41193b:	outs   dx,BYTE PTR ds:[esi]
  41193c:	pop    edx
  41193d:	jg     0x41199d
  41193f:	cwde   
  411940:	xchg   DWORD PTR [ebx-0x7342c7f],eax
  411946:	sbb    al,0xcf
  411948:	fmul   QWORD PTR [edx-0x1595e130]
  41194e:	sub    esp,0x70
  411951:	shr    BYTE PTR [eax+eax*2+0x2f965ffb],1
  411958:	hlt    
  411959:	cmp    dh,cl
  41195b:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41195d:	jne    0x4119d9
  41195f:	mov    eax,eax
  411961:	mov    eax,ecx
  411963:	dec    edx
  411964:	mov    dh,0xfa
  411966:	mov    dl,0x73
  411968:	std    
  411969:	jae    0x411962
  41196b:	aad    0x79
  41196d:	pop    ds
  41196e:	fdivr  QWORD PTR [edx]
  411970:	add    DWORD PTR [ebx*1+0x9b7c827],edi
  411977:	pop    edi
  411978:	fldcw  WORD PTR [edi-0x53856941]
  41197e:	cmp    DWORD PTR [edx+eiz*8-0x10],ebx
  411982:	jg     0x41194e
  411984:	ins    BYTE PTR es:[edi],dx
  411985:	(bad)  
  411986:	xchg   edi,eax
  411987:	iret   
  411988:	or     BYTE PTR [ebp+eax*2-0x139837f2],bh
  41198f:	jno    0x41199c
  411991:	jge    0x41193c
  411993:	in     eax,0xf4
  411995:	inc    esi
  411996:	out    dx,eax
  411997:	aaa    
  411998:	mov    esp,0xcfc626
  41199d:	mov    ch,0xce
  41199f:	lock lock scas eax,DWORD PTR es:[edi]
  4119a2:	sbb    ebp,DWORD PTR [ebx+0xf3b59e8]
  4119a8:	adc    bl,BYTE PTR [esi-0x151eae27]
  4119ae:	retf   
  4119af:	jp     0x41199f
  4119b1:	nop
  4119b2:	retf   0x33a2
  4119b5:	xor    DWORD PTR [ebp-0x7560698],esp
  4119bb:	pop    edx
  4119bc:	sub    DWORD PTR [eax],esi
  4119be:	dec    esp
  4119bf:	bound  esi,QWORD PTR [esp+ebp*1-0x3812355d]
  4119c6:	(bad)  
  4119c8:	fst    DWORD PTR [edx-0x2]
  4119cb:	adc    eax,0x2a439dac
  4119d0:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4119d2:	push   esi
  4119d3:	adc    al,dh
  4119d5:	mov    eax,ds:0x6b380a00
  4119da:	bound  ebx,QWORD PTR [ebp+0x621e011e]
  4119e0:	rol    BYTE PTR [edx+0x4e],cl
  4119e3:	jbe    0x4119e0
  4119e5:	and    DWORD PTR [eax-0x6f],ebp
  4119e8:	mov    ds,WORD PTR [ecx]
  4119ea:	jp     0x4119da
  4119ec:	or     BYTE PTR [edx],al
  4119ee:	out    0x35,al
  4119f0:	retf   
  4119f1:	aas    
  4119f2:	out    0x38,eax
  4119f4:	mov    esi,?
  4119f6:	or     cl,BYTE PTR [ecx]
  4119f8:	and    ecx,eax
  4119fa:	(bad)
  4119fe:	call   0x484a:0x42aec85
  411a05:	mov    BYTE PTR [edi],al
  411a07:	test   eax,0x699671a6
  411a0c:	into   
  411a0d:	data16 sar BYTE PTR [edi+0x18ebec6e],cl
  411a14:	ret    
  411a15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a16:	push   ebx
  411a17:	jl     0x411a6f
  411a19:	outs   dx,DWORD PTR ds:[esi]
  411a1a:	push   ecx
  411a1c:	mov    esi,0x6bc3f5f7
  411a21:	add    eax,0xa3ad1a7b
  411a26:	repnz test esp,ebp
  411a29:	aam    0x68
  411a2b:	lods   al,BYTE PTR ds:[esi]
  411a2c:	stos   BYTE PTR es:[edi],al
  411a2d:	inc    ebp
  411a2e:	pop    es
  411a2f:	adc    ch,cl
  411a31:	jp     0x411a65
  411a33:	add    dl,BYTE PTR [eax+esi*4]
  411a36:	push   cs
  411a37:	sub    al,0x31
  411a39:	dec    BYTE PTR [ebx-0x2d0d02ef]
  411a3f:	stc    
  411a40:	shr    DWORD PTR [eax-0x2a],1
  411a43:	pop    ss
  411a44:	dec    ecx
  411a45:	ins    DWORD PTR es:[edi],dx
  411a46:	sbb    al,0x95
  411a48:	xor    eax,0x63f4c31e
  411a4d:	out    0xbc,al
  411a4f:	outs   dx,DWORD PTR ds:[esi]
  411a50:	mov    edi,0x7cdf065
  411a55:	(bad)  
  411a56:	ficomp WORD PTR [ebp+0x7f]
  411a59:	inc    eax
  411a5a:	and    al,0x64
  411a5c:	cs (bad) 
  411a5e:	cmp    BYTE PTR [edx+0x4a],bh
  411a61:	sub    eax,0x2aa4e87a
  411a66:	repnz dec ebx
  411a68:	mov    BYTE PTR [edi+ecx*8],bh
  411a6b:	retf   0xe86a
  411a6e:	pop    esp
  411a6f:	inc    esp
  411a70:	rcl    BYTE PTR [esp+eax*4-0x794e696],0xa1
  411a78:	pop    edi
  411a79:	cdq    
  411a7a:	sbb    ecx,DWORD PTR [esi+eax*4]
  411a7d:	cmp    eax,0xd8eddf6d
  411a82:	ret    
  411a83:	imul   ebx,DWORD PTR cs:[ebx-0x7eec2705],0x74
  411a8b:	dec    ebx
  411a8c:	fs add eax,0x150e2ea
  411a92:	cwde   
  411a93:	xlat   BYTE PTR ds:[ebx]
  411a94:	mov    dh,0x79
  411a96:	scas   al,BYTE PTR es:[edi]
  411a97:	idiv   cl
  411a99:	int3   
  411a9a:	mov    ebx,0x953bf853
  411a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411aa0:	sbb    BYTE PTR [esi-0x54],0x3b
  411aa4:	cmp    BYTE PTR [ebx],ch
  411aa6:	and    al,0xdd
  411aa8:	scas   eax,DWORD PTR es:[edi]
  411aa9:	fisub  DWORD PTR [edx+0x5f]
  411aac:	data16 sahf 
  411aae:	pop    ecx
  411aaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ab0:	mov    eax,DWORD PTR [esi+0x10]
  411ab3:	jo     0x411a6f
  411ab5:	call   0xce33:0xb6001189
  411abc:	lea    eax,[ecx+eax*1+0x3272f3]
  411ac3:	mov    ecx,DWORD PTR [ebp+0x8]
  411ac6:	mov    edx,DWORD PTR [ebp-0x20]
  411ac9:	mov    DWORD PTR [edx+ecx*4],eax
  411acc:	mov    eax,DWORD PTR [ebp-0xc]
  411acf:	mov    ecx,DWORD PTR [ebp+0x8]
  411ad2:	xor    eax,esi
  411ad4:	lea    eax,[eax+ecx*1+0x3272f3]
  411adb:	mov    DWORD PTR [ebp+0x8],eax
  411ade:	mov    eax,DWORD PTR [ebp-0xc]
  411ae1:	mov    ecx,DWORD PTR [ebp+0x14]
  411ae4:	xor    eax,esi
  411ae6:	add    eax,edi
  411ae8:	imul   eax,DWORD PTR [ecx]
  411aeb:	mov    ecx,DWORD PTR [ebp-0x4]
  411aee:	mov    edx,DWORD PTR [ebp+0x8]
  411af1:	xor    ecx,esi
  411af3:	lea    ecx,[ecx+edx*1+0x3272f3]
  411afa:	cmp    ecx,eax
  411afc:	jne    0x40f6ee
  411b02:	mov    eax,DWORD PTR [ebp-0x4]
  411b05:	xor    eax,esi
  411b07:	add    eax,edi
  411b09:	mov    DWORD PTR [ebp-0x10],eax
  411b0c:	mov    ebx,0x65655
  411b11:	add    ebx,0x3234
  411b17:	xchg   ebx,esi
  411b19:	xor    ebx,ebx
  411b1b:	push   esi
  411b1c:	mov    esi,ebx
  411b1e:	pop    ebx
  411b1f:	mov    edx,esi
  411b21:	add    ebx,0x1002
  411b27:	lea    eax,[ebp-0x18]
  411b2a:	add    edx,eax
  411b2c:	add    edx,0x5
  411b2f:	push   edx
  411b30:	inc    esi
  411b31:	pop    ecx
  411b32:	dec    ecx
  411b33:	xchg   ecx,eax
  411b34:	dec    eax
  411b35:	xchg   ecx,eax
  411b36:	dec    ecx
  411b37:	xchg   ecx,edx
  411b39:	dec    edx
  411b3a:	push   edx
  411b3b:	mov    edx,ebx
  411b3d:	pop    ebx
  411b3e:	dec    ebx
  411b3f:	call   DWORD PTR [ebx]
  411b41:	cmp    DWORD PTR [ebp+0x10],esi
  411b44:	je     0x411b65
  411b4a:	xchg   edx,eax
  411b4b:	push   0xc
  411b4d:	pop    ecx
  411b4e:	dec    ecx
  411b4f:	push   0x3
  411b51:	pop    ebx
  411b52:	inc    ebx
  411b53:	xchg   ebx,ecx
  411b55:	inc    ecx
  411b56:	sub    ebx,ecx
  411b58:	xchg   ebx,ecx
  411b5a:	dec    ecx
  411b5b:	dec    ecx
  411b5c:	mov    eax,DWORD PTR [ebp-0x1c]
  411b5f:	imul   eax,ecx
  411b62:	add    esp,eax
  411b64:	xchg   edx,eax
  411b65:	push   eax
  411b66:	xor    ebx,ebx
  411b68:	mov    edx,esp
  411b6a:	dec    edx
  411b6b:	inc    ebx
  411b6c:	add    ebx,DWORD PTR [edx+ebx*1]
  411b6f:	dec    ebx
  411b70:	xor    edx,edx
  411b72:	add    DWORD PTR [ebp-0x10],ebx
  411b75:	pop    ebx
  411b76:	mov    eax,DWORD PTR [ebp-0x10]
  411b79:	pop    edi
  411b7a:	pop    esi
  411b7b:	pop    ebx
  411b7c:	leave  
  411b7d:	ret    0x10
  411b80:	push   ebp
  411b81:	mov    ebp,esp
  411b83:	push   ecx
  411b84:	and    DWORD PTR ds:0x4291db,ecx
  411b8a:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  411b91:	and    DWORD PTR ds:0x4291cb,0x0
  411b9b:	mov    ecx,DWORD PTR ds:0x4291cb
  411ba1:	inc    ecx
  411ba2:	mov    DWORD PTR ds:0x4291cb,ecx
  411ba8:	cmp    DWORD PTR ds:0x4291cb,0x20
  411baf:	jbe    0x411bd2
  411bb5:	jmp    0x411bc5
  411bba:	push   0x4291cf
  411bbf:	call   DWORD PTR ds:0x42a563
  411bc5:	cmp    DWORD PTR ds:0x4291cb,0x1c
  411bcc:	jb     0x411b9b
  411bd2:	mov    eax,DWORD PTR [ebp-0x4]
  411bd5:	xor    DWORD PTR ds:0x4291d7,0x42915f
  411bdf:	mov    edx,DWORD PTR [ebp+0x10]
  411be2:	mov    ecx,0x75108ac
  411be7:	sbb    DWORD PTR ds:0x42919f,0x2976
  411bf1:	xor    eax,ecx
  411bf3:	xor    DWORD PTR ds:0x429167,0x4291ab
  411bfd:	add    eax,0x3272f3
  411c02:	mov    DWORD PTR [edx],eax
  411c04:	and    eax,DWORD PTR ds:0x4291e7
  411c0a:	mov    eax,DWORD PTR [ebp+0xc]
  411c0d:	and    DWORD PTR ds:0x4291d3,edi
  411c13:	xor    eax,ecx
  411c15:	xor    DWORD PTR ds:0x429187,0x6377
  411c1f:	push   esi
  411c20:	xor    edx,DWORD PTR ds:0x42915b
  411c26:	mov    esi,DWORD PTR [ebp+0x10]
  411c29:	mov    edx,0x3272f3
  411c2e:	add    eax,edx
  411c30:	mov    DWORD PTR [esi+0x4],eax
  411c33:	mov    eax,DWORD PTR [ebp+0x14]
  411c36:	mov    esi,DWORD PTR [ebp+0x10]
  411c39:	mov    DWORD PTR [esi+0x8],eax
  411c3c:	mov    eax,DWORD PTR [ebp+0x18]
  411c3f:	mov    esi,DWORD PTR [ebp+0x10]
  411c42:	mov    DWORD PTR [esi+0xc],eax
  411c45:	mov    eax,DWORD PTR [ebp+0x1c]
  411c48:	mov    esi,DWORD PTR [ebp+0x10]
  411c4b:	mov    DWORD PTR [esi+0x10],eax
  411c4e:	mov    eax,DWORD PTR [ebp+0x8]
  411c51:	xor    eax,ecx
  411c53:	add    eax,edx
  411c55:	pop    esi
  411c56:	leave  
  411c57:	ret    0x18
  411c5a:	push   ebp
  411c5b:	mov    ebp,esp
  411c5d:	sub    esp,0x9c
  411c63:	movzx  ecx,BYTE PTR ds:0x429187
  411c6a:	or     DWORD PTR ds:0x4291f3,ecx
  411c70:	mov    ecx,DWORD PTR [ebp+0x8]
  411c73:	mov    eax,0x8a99
  411c78:	sub    DWORD PTR ds:0x4291a7,0x19e0
  411c82:	xor    ax,WORD PTR [ecx+0x20]
  411c86:	mov    ecx,0x3b5b
  411c8b:	add    ax,cx
  411c8e:	and    DWORD PTR ds:0x4291f7,0x0
  411c98:	mov    ecx,DWORD PTR ds:0x4291f7
  411c9e:	inc    ecx
  411c9f:	mov    DWORD PTR ds:0x4291f7,ecx
  411ca5:	cmp    DWORD PTR ds:0x4291f7,0x11
  411cac:	jl     0x411cec
  411cb2:	jmp    0x411cc5
  411cb7:	push   DWORD PTR [ebp-0x28]
  411cba:	push   0x42806d
  411cbf:	call   DWORD PTR ds:0x42a567
  411cc5:	cmp    DWORD PTR ds:0x4291f7,0x10
  411ccc:	jne    0x411cdf
  411cd2:	mov    ecx,DWORD PTR ds:0x4291f7
  411cd8:	inc    ecx
  411cd9:	mov    DWORD PTR ds:0x4291f7,ecx
  411cdf:	cmp    DWORD PTR ds:0x4291f7,0x1c
  411ce6:	jb     0x411c98
  411cec:	movzx  eax,ax
  411cef:	mov    DWORD PTR [ebp-0x10],eax
  411cf2:	mov    BYTE PTR [ebp-0x1],0x82
  411cf6:	and    DWORD PTR ds:0x4291df,0x0
  411d00:	jmp    0x411d14
  411d05:	xor    ecx,ecx
  411d07:	add    ecx,DWORD PTR ds:0x4291df
  411d0d:	inc    ecx
  411d0e:	mov    DWORD PTR ds:0x4291df,ecx
  411d14:	cmp    DWORD PTR ds:0x4291df,0x1b
  411d1b:	jae    0x411d48
  411d21:	cmp    DWORD PTR ds:0x4291df,0x22
  411d28:	jge    0x411d48
  411d2e:	jmp    0x411d43
  411d33:	push   0x4280f2
  411d38:	push   0x0
  411d3a:	push   DWORD PTR [ebp-0x1c]
  411d3d:	call   DWORD PTR ds:0x42a56f
  411d43:	jmp    0x411d05
  411d48:	lea    eax,[ebp-0x1]
  411d4b:	inc    DWORD PTR ds:0x42919b
  411d51:	mov    DWORD PTR [ebp-0xc],eax
  411d54:	mov    al,BYTE PTR [ebp-0x1]
  411d57:	and    DWORD PTR ds:0x4291af,0x0
  411d61:	mov    ecx,DWORD PTR ds:0x4291af
  411d67:	inc    ecx
  411d68:	mov    DWORD PTR ds:0x4291af,ecx
  411d6e:	cmp    DWORD PTR ds:0x4291af,0x19
  411d75:	jbe    0x411d96
  411d7b:	jmp    0x411d89
  411d80:	push   DWORD PTR [ebp-0x20]
  411d83:	call   DWORD PTR ds:0x42a573
  411d89:	cmp    DWORD PTR ds:0x4291af,0x10
  411d90:	jb     0x411d61
  411d96:	mov    ecx,DWORD PTR [ebp-0xc]
  411d99:	xor    al,0x7d
  411d9b:	mov    DWORD PTR ds:0x4291bb,0x2666
  411da5:	add    al,0x2
  411da7:	and    DWORD PTR ds:0x4291c3,0x42917f
  411db1:	mov    BYTE PTR [ecx],al
  411db3:	sbb    DWORD PTR ds:0x4291eb,0x5717
  411dbd:	mov    DWORD PTR [ebp-0x18],0xf89c85a1
  411dc4:	push   ebx
  411dc5:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  411dcc:	mov    DWORD PTR ds:0x4291eb,0x16
  411dd6:	cmp    DWORD PTR ds:0x4291eb,0x0
  411ddd:	je     0x411e17
  411de3:	cmp    DWORD PTR ds:0x4291eb,0x1e
  411dea:	jl     0x411e17
  411df0:	jmp    0x411e07
  411df5:	push   0x428010
  411dfa:	push   0x0
  411dfc:	push   0x6e74
  411e01:	call   DWORD PTR ds:0x42a577
  411e07:	mov    eax,ds:0x4291eb
  411e0c:	dec    eax
  411e0d:	mov    ds:0x4291eb,eax
  411e12:	jmp    0x411dd6
  411e17:	mov    ecx,DWORD PTR [ebp-0x18]
  411e1a:	or     DWORD PTR ds:0x429153,ebx
  411e20:	push   esi
  411e21:	mov    eax,0x75108ac
  411e26:	xor    esi,esi
  411e28:	xor    esi,DWORD PTR ds:0x4291b7
  411e2e:	or     DWORD PTR ds:0x42915b,esi
  411e34:	xor    ecx,eax
  411e36:	mov    esi,DWORD PTR ds:0x4291a3
  411e3c:	sbb    esi,DWORD PTR ds:0x42914f
  411e42:	mov    DWORD PTR ds:0x4291a3,esi
  411e48:	mov    esi,0x3272f3
  411e4d:	push   edi
  411e4e:	add    ecx,esi
  411e50:	jmp    0x411e66
  411e55:	inc    DWORD PTR ds:0x429163
  411e5b:	mov    dl,BYTE PTR [ebp-0x1]
  411e5e:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e65:	inc    ecx
  411e66:	mov    DWORD PTR ds:0x42917b,0x7bd4
  411e70:	cmp    ecx,0x40
  411e73:	jb     0x411e55
  411e79:	not    edx
  411e7b:	mov    edx,DWORD PTR [ebp-0x18]
  411e7e:	xor    edx,eax
  411e80:	mov    DWORD PTR ds:0x4291f7,0x3db0
  411e8a:	add    edx,esi
  411e8c:	jmp    0x411f80
  411e91:	movzx  edi,WORD PTR ds:0x42918b
  411e98:	or     DWORD PTR ds:0x429157,edi
  411e9e:	mov    edi,DWORD PTR [ebp+0x8]
  411ea1:	adc    DWORD PTR ds:0x42917b,edx
  411ea7:	mov    ecx,0x8a99
  411eac:	adc    DWORD PTR ds:0x4291f3,0x3816
  411eb6:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ebb:	and    DWORD PTR ds:0x4291a3,0x0
  411ec5:	jmp    0x411ed7
  411eca:	mov    edi,DWORD PTR ds:0x4291a3
  411ed0:	inc    edi
  411ed1:	mov    DWORD PTR ds:0x4291a3,edi
  411ed7:	cmp    DWORD PTR ds:0x4291a3,0x1f
  411ede:	jae    0x411f1d
  411ee4:	cmp    DWORD PTR ds:0x4291a3,0xa
  411eeb:	jl     0x411f1d
  411ef1:	jmp    0x411efc
  411ef6:	call   DWORD PTR ds:0x42a57b
  411efc:	cmp    DWORD PTR ds:0x4291a3,0x9
  411f03:	jne    0x411f18
  411f09:	xor    edi,edi
  411f0b:	xor    edi,DWORD PTR ds:0x4291a3
  411f11:	inc    edi
  411f12:	mov    DWORD PTR ds:0x4291a3,edi
  411f18:	jmp    0x411eca
  411f1d:	mov    edi,0x3b5b
  411f22:	add    cx,di
  411f25:	add    DWORD PTR ds:0x4291ef,0x4291b7
  411f2f:	movzx  ecx,cx
  411f32:	sbb    DWORD PTR ds:0x42914b,0x16d8
  411f3c:	mov    DWORD PTR [ebp-0xc],ecx
  411f3f:	movzx  ecx,WORD PTR ds:0x42918f
  411f46:	and    DWORD PTR ds:0x429197,ecx
  411f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  411f4f:	sbb    DWORD PTR ds:0x42915b,0x631a
  411f59:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f5d:	xor    ecx,0x8a99
  411f63:	add    ecx,edi
  411f65:	mov    edi,DWORD PTR [ebp-0xc]
  411f68:	mov    DWORD PTR ds:0x4291f7,0x4ad9
  411f72:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f79:	mov    DWORD PTR ds:0x4291e7,ecx
  411f7f:	inc    edx
  411f80:	not    ecx
  411f82:	mov    ecx,DWORD PTR [ebp-0x10]
  411f85:	mov    DWORD PTR ds:0x42914f,0x2d30
  411f8f:	cmp    edx,ecx
  411f91:	jne    0x411e91
  411f97:	and    edx,edx
  411f99:	mov    ecx,DWORD PTR [ebp-0x18]
  411f9c:	sub    edi,DWORD PTR ds:0x42914f
  411fa2:	mov    edx,DWORD PTR [ebp+0x10]
  411fa5:	xor    DWORD PTR ds:0x4291bf,0xf9d
  411faf:	xor    ecx,eax
  411fb1:	and    DWORD PTR ds:0x4291b7,ebx
  411fb7:	add    ecx,esi
  411fb9:	mov    DWORD PTR [edx],ecx
  411fbb:	mov    ecx,DWORD PTR [ebp-0x18]
  411fbe:	sbb    DWORD PTR ds:0x42919f,0x1e81
  411fc8:	xor    ecx,eax
  411fca:	add    ecx,esi
  411fcc:	adc    DWORD PTR ds:0x4291e3,edi
  411fd2:	mov    DWORD PTR [ebp-0xc],ecx
  411fd5:	add    DWORD PTR ds:0x42914f,0x6cdc
  411fdf:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  411fe6:	mov    DWORD PTR ds:0x4291bf,0x1d36
  411ff0:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  411ff7:	mov    DWORD PTR [ebp-0x10],0xf89c95a1
  411ffe:	mov    ecx,DWORD PTR [ebp-0x14]
  412001:	mov    DWORD PTR ds:0x4291e3,0x1b
  41200b:	cmp    DWORD PTR ds:0x4291e3,0x0
  412012:	je     0x41204c
  412018:	cmp    DWORD PTR ds:0x4291e3,0x1c
  41201f:	jb     0x41204c
  412025:	jmp    0x41203a
  41202a:	push   0x42915f
  41202f:	push   0x428022
  412034:	call   DWORD PTR ds:0x42a57f
  41203a:	mov    edi,DWORD PTR ds:0x4291e3
  412040:	dec    edi
  412041:	mov    DWORD PTR ds:0x4291e3,edi
  412047:	jmp    0x41200b
  41204c:	mov    DWORD PTR [ebp+0x8],ecx
  41204f:	mov    ecx,DWORD PTR [ebp+0x8]
  412052:	xor    ecx,eax
  412054:	add    ecx,esi
  412056:	movzx  ecx,WORD PTR ds:0x4291b3
  41205d:	mov    ecx,0x242ebcd
  412062:	mov    edi,0xf641bcc
  412067:	je     0x414acc
  41206d:	mov    edx,DWORD PTR [ebp+0x8]
  412070:	sub    DWORD PTR ds:0x42917b,0x1976
  41207a:	mov    ebx,DWORD PTR [ebp-0x8]
  41207d:	xor    edx,eax
  41207f:	xor    ebx,eax
  412081:	not    DWORD PTR ds:0x4291d3
  412087:	sub    edx,ebx
  412089:	not    DWORD PTR ds:0x42918f
  41208f:	sub    edx,esi
  412091:	xor    edx,eax
  412093:	and    DWORD PTR ds:0x4291cb,0x0
  41209d:	jmp    0x4120af
  4120a2:	mov    ebx,DWORD PTR ds:0x4291cb
  4120a8:	inc    ebx
  4120a9:	mov    DWORD PTR ds:0x4291cb,ebx
  4120af:	cmp    DWORD PTR ds:0x4291cb,0x18
  4120b6:	jae    0x4120f8
  4120bc:	cmp    DWORD PTR ds:0x4291cb,0xa
  4120c3:	ja     0x4120f8
  4120c9:	jmp    0x4120d9
  4120ce:	push   0x4a1a
  4120d3:	call   DWORD PTR ds:0x42a583
  4120d9:	cmp    DWORD PTR ds:0x4291cb,0x9
  4120e0:	jne    0x4120f3
  4120e6:	mov    ebx,DWORD PTR ds:0x4291cb
  4120ec:	inc    ebx
  4120ed:	mov    DWORD PTR ds:0x4291cb,ebx
  4120f3:	jmp    0x4120a2
  4120f8:	mov    DWORD PTR [ebp+0x8],edx
  4120fb:	sub    DWORD PTR ds:0x4291e3,0x2e82
  412105:	mov    edx,DWORD PTR [ebp+0x8]
  412108:	mov    ebx,DWORD PTR [ebp-0x58]
  41210b:	mov    DWORD PTR ds:0x42919b,0x1dc1
  412115:	add    edx,0x5708e2
  41211b:	and    DWORD PTR ds:0x4291e7,0x42919f
  412125:	imul   edx,ebx
  412128:	mov    DWORD PTR [ebp-0x58],edx
  41212b:	xor    edx,0x49c6
  412131:	mov    edx,DWORD PTR [ebp+0x8]
  412134:	mov    ebx,DWORD PTR ds:0x42914b
  41213a:	add    DWORD PTR ds:0x4291e3,ebx
  412140:	mov    ebx,DWORD PTR [ebp-0x54]
  412143:	add    edx,0x64f89c
  412149:	inc    DWORD PTR ds:0x42917f
  41214f:	or     edx,ebx
  412151:	mov    DWORD PTR [ebp-0x54],edx
  412154:	mov    edx,DWORD PTR [ebp+0x8]
  412157:	mov    ebx,DWORD PTR [ebp-0x50]
  41215a:	sbb    DWORD PTR ds:0x429183,0x4291b7
  412164:	add    edx,ecx
  412166:	xor    edx,ebx
  412168:	mov    DWORD PTR [ebp-0x50],edx
  41216b:	dec    ebx
  41216c:	mov    edx,DWORD PTR [ebp+0x8]
  41216f:	add    ebx,0x68ce
  412175:	mov    ebx,DWORD PTR [ebp-0x4c]
  412178:	add    edx,edi
  41217a:	and    edx,ebx
  41217c:	and    ebx,0x35bf
  412182:	mov    DWORD PTR [ebp-0x4c],edx
  412185:	xor    DWORD PTR ds:0x4291d3,ebx
  41218b:	mov    edx,DWORD PTR [ebp+0x8]
  41218e:	sub    DWORD PTR ds:0x4291cf,0x55b5
  412198:	mov    ebx,DWORD PTR [ebp-0x48]
  41219b:	lea    edx,[ebx+edx*1+0x241fcdf]
  4121a2:	mov    DWORD PTR [ebp-0x48],edx
  4121a5:	and    DWORD PTR ds:0x429173,0x0
  4121af:	mov    ebx,DWORD PTR ds:0x429173
  4121b5:	inc    ebx
  4121b6:	mov    DWORD PTR ds:0x429173,ebx
  4121bc:	cmp    DWORD PTR ds:0x429173,0x19
  4121c3:	jge    0x4121ee
  4121c9:	jmp    0x4121e1
  4121ce:	push   0x4291f7
  4121d3:	push   0x429187
  4121d8:	push   DWORD PTR [ebp-0x10]
  4121db:	call   DWORD PTR ds:0x42a58b
  4121e1:	cmp    DWORD PTR ds:0x429173,0x12
  4121e8:	jb     0x4121af
  4121ee:	mov    edx,DWORD PTR [ebp+0x8]
  4121f1:	or     DWORD PTR ds:0x4291df,ebx
  4121f7:	mov    ebx,0xfa5e1528
  4121fc:	sub    ebx,edx
  4121fe:	movzx  edx,WORD PTR ds:0x4291c7
  412205:	and    DWORD PTR ds:0x4291f7,edx
  41220b:	add    ebx,DWORD PTR [ebp-0x44]
  41220e:	mov    DWORD PTR [ebp-0x44],ebx
  412211:	and    DWORD PTR ds:0x4291db,0x4291bf
  41221b:	mov    edx,DWORD PTR [ebp+0x8]
  41221e:	xor    edx,eax
  412220:	adc    DWORD PTR ds:0x429153,0x429187
  41222a:	add    edx,esi
  41222c:	mov    DWORD PTR ds:0x42915b,0x2aa5
  412236:	jne    0x41206d
  41223c:	mov    DWORD PTR ds:0x4291af,0x939
  412246:	jmp    0x414acc
  41224b:	xor    DWORD PTR ds:0x4291cb,0x4110
  412255:	mov    edx,DWORD PTR [ebp-0xc]
  412258:	sub    DWORD PTR ds:0x42918b,0x429163
  412262:	sub    edx,esi
  412264:	xor    edx,eax
  412266:	mov    DWORD PTR ds:0x4291b7,0x1c
  412270:	cmp    DWORD PTR ds:0x4291b7,0x0
  412277:	je     0x4122ae
  41227d:	cmp    DWORD PTR ds:0x4291b7,0x21
  412284:	jbe    0x4122ae
  41228a:	jmp    0x41229a
  41228f:	push   0x337f
  412294:	call   DWORD PTR ds:0x42a553
  41229a:	xor    ebx,ebx
  41229c:	or     ebx,DWORD PTR ds:0x4291b7
  4122a2:	dec    ebx
  4122a3:	mov    DWORD PTR ds:0x4291b7,ebx
  4122a9:	jmp    0x412270
  4122ae:	mov    DWORD PTR [ebp-0x5c],edx
  4122b1:	sub    DWORD PTR ds:0x429173,0x5ea2
  4122bb:	mov    edx,DWORD PTR [ebp-0x10]
  4122be:	mov    ebx,DWORD PTR [ebp-0x8]
  4122c1:	xor    edx,eax
  4122c3:	dec    DWORD PTR ds:0x4291b7
  4122c9:	xor    ebx,eax
  4122cb:	adc    DWORD PTR ds:0x429197,0x42917b
  4122d5:	sub    edx,ebx
  4122d7:	sub    edx,esi
  4122d9:	xor    edx,eax
  4122db:	mov    DWORD PTR [ebp-0x10],edx
  4122de:	mov    edx,DWORD PTR [ebp-0x14]
  4122e1:	mov    DWORD PTR [ebp+0x8],edx
  4122e4:	jmp    0x412527
  4122e9:	mov    edx,DWORD PTR [ebp+0x8]
  4122ec:	mov    DWORD PTR ds:0x429157,0x1c
  4122f6:	cmp    DWORD PTR ds:0x429157,0x0
  4122fd:	je     0x412341
  412303:	cmp    DWORD PTR ds:0x429157,0x21
  41230a:	jl     0x412341
  412310:	jmp    0x41232f
  412315:	push   0x4cc6
  41231a:	push   0x428152
  41231f:	push   0x428140
  412324:	push   0x400000
  412329:	call   DWORD PTR ds:0x42a55b
  41232f:	mov    ebx,DWORD PTR ds:0x429157
  412335:	dec    ebx
  412336:	mov    DWORD PTR ds:0x429157,ebx
  41233c:	jmp    0x4122f6
  412341:	mov    ebx,DWORD PTR [ebp-0x8]
  412344:	xor    edx,eax
  412346:	xor    ebx,eax
  412348:	sub    edx,ebx
  41234a:	sub    edx,esi
  41234c:	xor    edx,eax
  41234e:	mov    DWORD PTR [ebp+0x8],edx
  412351:	mov    edx,DWORD PTR [ebp+0x8]
  412354:	mov    ebx,DWORD PTR [ebp-0x58]
  412357:	add    edx,0x5708e2
  41235d:	add    DWORD PTR ds:0x42918f,0x4291b7
  412367:	imul   edx,ebx
  41236a:	mov    DWORD PTR [ebp-0x58],edx
  41236d:	and    DWORD PTR ds:0x4291df,0x0
  412377:	mov    edx,DWORD PTR ds:0x4291df
  41237d:	inc    edx
  41237e:	mov    DWORD PTR ds:0x4291df,edx
  412384:	cmp    DWORD PTR ds:0x4291df,0x9
  41238b:	jb     0x4123cb
  412391:	jmp    0x4123a4
  412396:	push   DWORD PTR [ebp-0x24]
  412399:	push   0x400000
  41239e:	call   DWORD PTR ds:0x42a55f
  4123a4:	cmp    DWORD PTR ds:0x4291df,0x8
  4123ab:	jne    0x4123be
  4123b1:	mov    edx,DWORD PTR ds:0x4291df
  4123b7:	inc    edx
  4123b8:	mov    DWORD PTR ds:0x4291df,edx
  4123be:	cmp    DWORD PTR ds:0x4291df,0x10
  4123c5:	jb     0x412377
  4123cb:	mov    edx,DWORD PTR [ebp+0x8]
  4123ce:	adc    ebx,DWORD PTR ds:0x429183
  4123d4:	mov    ebx,DWORD PTR [ebp-0x54]
  4123d7:	add    DWORD PTR ds:0x4291ef,0x468d
  4123e1:	add    edx,0x64f89c
  4123e7:	or     edx,ebx
  4123e9:	mov    DWORD PTR [ebp-0x54],edx
  4123ec:	and    DWORD PTR ds:0x429187,0x0
  4123f6:	jmp    0x412408
  4123fb:	mov    ebx,DWORD PTR ds:0x429187
  412401:	inc    ebx
  412402:	mov    DWORD PTR ds:0x429187,ebx
  412408:	cmp    DWORD PTR ds:0x429187,0x1d
  41240f:	jae    0x412437
  412415:	cmp    DWORD PTR ds:0x429187,0x1e
  41241c:	jg     0x412437
  412422:	jmp    0x412432
  412427:	push   0x4291cf
  41242c:	call   DWORD PTR ds:0x42a563
  412432:	jmp    0x4123fb
  412437:	mov    edx,DWORD PTR [ebp+0x8]
  41243a:	mov    ebx,DWORD PTR [ebp-0x50]
  41243d:	and    DWORD PTR ds:0x4291db,0x4291cf
  412447:	add    edx,ecx
  412449:	mov    DWORD PTR ds:0x42919b,0x55c4
  412453:	xor    edx,ebx
  412455:	mov    DWORD PTR [ebp-0x50],edx
  412458:	sub    DWORD PTR ds:0x42915f,0x3296
  412462:	mov    edx,DWORD PTR [ebp+0x8]
  412465:	mov    ebx,DWORD PTR [ebp-0x4c]
  412468:	xor    DWORD PTR ds:0x4291a7,0x42916b
  412472:	add    edx,edi
  412474:	xor    DWORD PTR ds:0x4291e7,0x4291af
  41247e:	and    edx,ebx
  412480:	or     DWORD PTR ds:0x42915f,edx
  412486:	mov    DWORD PTR [ebp-0x4c],edx
  412489:	mov    ebx,DWORD PTR ds:0x42918b
  41248f:	sbb    DWORD PTR ds:0x429157,ebx
  412495:	mov    edx,DWORD PTR [ebp+0x8]
  412498:	xor    DWORD PTR ds:0x429157,0x429153
  4124a2:	mov    ebx,DWORD PTR [ebp-0x48]
  4124a5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4124ac:	mov    DWORD PTR [ebp-0x48],edx
  4124af:	and    DWORD PTR ds:0x429173,0x0
  4124b9:	jmp    0x4124cb
  4124be:	mov    edx,DWORD PTR ds:0x429173
  4124c4:	inc    edx
  4124c5:	mov    DWORD PTR ds:0x429173,edx
  4124cb:	cmp    DWORD PTR ds:0x429173,0x15
  4124d2:	jae    0x412517
  4124d8:	cmp    DWORD PTR ds:0x429173,0x5
  4124df:	jle    0x412517
  4124e5:	jmp    0x4124f8
  4124ea:	push   DWORD PTR [ebp-0x18]
  4124ed:	push   0x42808a
  4124f2:	call   DWORD PTR ds:0x42a567
  4124f8:	cmp    DWORD PTR ds:0x429173,0x4
  4124ff:	jne    0x412512
  412505:	mov    edx,DWORD PTR ds:0x429173
  41250b:	inc    edx
  41250c:	mov    DWORD PTR ds:0x429173,edx
  412512:	jmp    0x4124be
  412517:	mov    edx,DWORD PTR [ebp+0x8]
  41251a:	mov    ebx,0xfa5e1528
  41251f:	sub    ebx,edx
  412521:	add    ebx,DWORD PTR [ebp-0x44]
  412524:	mov    DWORD PTR [ebp-0x44],ebx
  412527:	mov    edx,DWORD PTR [ebp+0x8]
  41252a:	xor    edx,eax
  41252c:	add    edx,esi
  41252e:	jne    0x4122e9
  412534:	mov    edx,DWORD PTR [ebp-0xc]
  412537:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41253e:	mov    bl,BYTE PTR [ebp-0x1]
  412541:	cmp    dl,bl
  412543:	je     0x412621
  412549:	mov    ecx,DWORD PTR [ebp-0x5c]
  41254c:	mov    edx,DWORD PTR [ebp-0xc]
  41254f:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412556:	mov    ebx,DWORD PTR [ebp+0xc]
  412559:	xor    ecx,eax
  41255b:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f3]
  412562:	jne    0x414ade
  412568:	mov    ecx,DWORD PTR [ebp-0x5c]
  41256b:	mov    edx,DWORD PTR [ebp+0xc]
  41256e:	xor    ecx,eax
  412570:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f3]
  412578:	mov    edx,DWORD PTR [ebp-0x18]
  41257b:	xor    edx,eax
  41257d:	add    edx,esi
  41257f:	cmp    ecx,edx
  412581:	mov    ecx,DWORD PTR [ebp-0x14]
  412584:	mov    DWORD PTR [ebp+0x8],ecx
  412587:	mov    ecx,DWORD PTR [ebp+0x8]
  41258a:	je     0x41b681
  412590:	xor    ecx,eax
  412592:	add    ecx,esi
  412594:	mov    ecx,0x242ebcd
  412599:	je     0x414a32
  41259f:	mov    edx,DWORD PTR [ebp+0x8]
  4125a2:	mov    ebx,DWORD PTR [ebp-0x8]
  4125a5:	xor    edx,eax
  4125a7:	xor    ebx,eax
  4125a9:	sub    edx,ebx
  4125ab:	sub    edx,esi
  4125ad:	xor    edx,eax
  4125af:	mov    DWORD PTR [ebp+0x8],edx
  4125b2:	mov    edx,DWORD PTR [ebp+0x8]
  4125b5:	mov    ebx,DWORD PTR [ebp-0x58]
  4125b8:	add    edx,0x5708e2
  4125be:	imul   edx,ebx
  4125c1:	mov    DWORD PTR [ebp-0x58],edx
  4125c4:	mov    edx,DWORD PTR [ebp+0x8]
  4125c7:	mov    ebx,DWORD PTR [ebp-0x54]
  4125ca:	add    edx,0x64f89c
  4125d0:	or     edx,ebx
  4125d2:	mov    DWORD PTR [ebp-0x54],edx
  4125d5:	mov    edx,DWORD PTR [ebp+0x8]
  4125d8:	mov    ebx,DWORD PTR [ebp-0x50]
  4125db:	add    edx,ecx
  4125dd:	xor    edx,ebx
  4125df:	mov    DWORD PTR [ebp-0x50],edx
  4125e2:	mov    edx,DWORD PTR [ebp+0x8]
  4125e5:	mov    ebx,DWORD PTR [ebp-0x4c]
  4125e8:	add    edx,edi
  4125ea:	and    edx,ebx
  4125ec:	mov    DWORD PTR [ebp-0x4c],edx
  4125ef:	mov    edx,DWORD PTR [ebp+0x8]
  4125f2:	mov    ebx,DWORD PTR [ebp-0x48]
  4125f5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4125fc:	mov    DWORD PTR [ebp-0x48],edx
  4125ff:	mov    edx,DWORD PTR [ebp+0x8]
  412602:	mov    ebx,0xfa5e1528
  412607:	sub    ebx,edx
  412609:	add    ebx,DWORD PTR [ebp-0x44]
  41260c:	mov    DWORD PTR [ebp-0x44],ebx
  41260f:	mov    edx,DWORD PTR [ebp+0x8]
  412612:	xor    edx,eax
  412614:	add    edx,esi
  412616:	jne    0x41259f
  41261c:	jmp    0x414a32
  412621:	mov    edx,DWORD PTR [ebp-0x14]
  412624:	jmp    0x4149ad
  412629:	rcr    ah,1
  41262b:	sbb    eax,DWORD PTR [edx+0x17]
  41262e:	mov    ah,0xd0
  412630:	nop
  412631:	cs aam 0x99
  412634:	or     BYTE PTR [ebp+0x61],cl
  412637:	mov    eax,ds:0x838a6bb0
  41263c:	adc    DWORD PTR [edi],0x5c
  41263f:	add    DWORD PTR [ebx-0x385b7938],0x6
  412646:	push   es
  412647:	sub    al,0x80
  412649:	shl    BYTE PTR [eax-0x5df5c9ec],0xc3
  412650:	jne    0x4126c5
  412652:	fcom   QWORD PTR [ecx-0x2b8e108]
  412658:	jns    0x412692
  41265a:	fist   DWORD PTR [eax]
  41265c:	add    eax,0xfecad092
  412661:	dec    ebx
  412662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412663:	mov    ebp,0x3ecd0eed
  412668:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412669:	out    0x7a,eax
  41266b:	add    edi,DWORD PTR [edi]
  41266d:	mov    ah,0x5a
  41266f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412670:	retf   
  412671:	jmp    0x62ac:0x81d2109a
  412678:	loop   0x4126f7
  41267a:	jge    0x41261e
  41267c:	cmp    DWORD PTR [eiz*4+0x1fe1b209],esi
  412683:	pop    esi
  412684:	rol    al,cl
  412686:	ins    DWORD PTR es:[edi],dx
  412687:	repz and BYTE PTR [edx-0x6b],dl
  41268b:	fisttp WORD PTR [eax+0x74a37233]
  412691:	sbb    ebp,ecx
  412693:	call   0x1cb6ece4
  412698:	ins    BYTE PTR es:[edi],dx
  412699:	rcr    BYTE PTR [edi+0x581e9993],cl
  41269f:	not    BYTE PTR [eax-0x40]
  4126a2:	nop
  4126a3:	in     eax,0x4e
  4126a5:	test   eax,0xfa65cde6
  4126aa:	fst    DWORD PTR es:[edx+0x7147160a]
  4126b1:	mov    eax,ds:0xdd768500
  4126b6:	loope  0x41265c
  4126b8:	fsubr  st,st(5)
  4126ba:	jg     0x4126c5
  4126bc:	pop    edx
  4126bd:	loope  0x41266f
  4126bf:	fidiv  WORD PTR [ebp+0x41]
  4126c2:	inc    esp
  4126c3:	sub    eax,0x3e9844b
  4126c8:	retf   0x602f
  4126cb:	xchg   ecx,eax
  4126cc:	mov    ds:0xad21363,eax
  4126d1:	push   es
  4126d2:	mov    ds:0x8ee082d2,eax
  4126d7:	sub    DWORD PTR [eax-0x4],ecx
  4126da:	loop   0x4126d0
  4126dc:	into   
  4126dd:	ds dec ebp
  4126df:	push   edx
  4126e0:	outs   dx,BYTE PTR ds:[esi]
  4126e1:	outs   dx,BYTE PTR ds:[esi]
  4126e2:	dec    ecx
  4126e3:	and    esi,DWORD PTR [ebp-0x5ab2e616]
  4126e9:	std    
  4126ea:	add    bh,BYTE PTR [ebp+0x177ec659]
  4126f0:	mov    eax,0xb83aaa09
  4126f5:	fs push ecx
  4126f7:	dec    edx
  4126f8:	fsubr  DWORD PTR [esi]
  4126fa:	xchg   ebx,eax
  4126fb:	lods   eax,DWORD PTR ds:[esi]
  4126fc:	lock icebp 
  4126fe:	push   ss
  4126ff:	push   eax
  412700:	fst    DWORD PTR [eax+0x19]
  412703:	or     ecx,DWORD PTR [edx+0x49c27e0d]
  412709:	scas   eax,DWORD PTR es:[edi]
  41270a:	fdiv   QWORD PTR [edi]
  41270c:	and    BYTE PTR [ebx+0x55],0x3e
  412710:	cs cwde 
  412712:	ins    BYTE PTR es:[edi],dx
  412713:	or     BYTE PTR [eax+0x6202de03],dl
  412719:	(bad)  
  41271a:	mov    WORD PTR [eax-0x44],?
  41271d:	push   esp
  41271e:	stos   BYTE PTR es:[edi],al
  41271f:	pusha  
  412720:	mov    ecx,0x3cefd1af
  412725:	loop   0x412764
  412727:	test   ebx,ebp
  412729:	sub    esi,esi
  41272b:	sub    al,0x45
  41272d:	adc    eax,0xae74efdb
  412732:	xor    al,0x9d
  412734:	jnp    0x4126c5
  412736:	call   0xcbba4c8d
  41273b:	loop   0x41279f
  41273d:	cld    
  41273e:	outs   dx,BYTE PTR ds:[esi]
  41273f:	cwde   
  412740:	les    ebx,FWORD PTR [edx+0x1f87533b]
  412746:	ja     0x4126ea
  412748:	lods   al,BYTE PTR ds:[esi]
  412749:	rol    DWORD PTR [ebx+0x30e42445],1
  41274f:	fisttp QWORD PTR [eax-0x18]
  412752:	(bad)  
  412753:	cmp    BYTE PTR [edx],ah
  412755:	stc    
  412756:	popa   
  412757:	into   
  412758:	ja     0x412770
  41275a:	call   0xde852f59
  41275f:	scas   al,BYTE PTR es:[edi]
  412760:	std    
  412761:	sub    al,0x7c
  412763:	cs iret 
  412765:	(bad)  
  412767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412768:	dec    ebp
  412769:	add    al,0x32
  41276b:	loopne 0x412731
  41276d:	outs   dx,BYTE PTR ds:[esi]
  41276e:	push   ecx
  41276f:	jmp    0x36f345d4
  412774:	xchg   dh,ah
  412776:	in     eax,dx
  412777:	ret    0xb36f
  41277a:	adc    al,BYTE PTR [edx]
  41277c:	test   DWORD PTR [ecx],ebp
  41277e:	add    al,0x4f
  412780:	mov    cl,0xb7
  412782:	(bad)  
  412783:	(bad)  
  412784:	pushf  
  412785:	leave  
  412786:	pop    ebp
  412787:	mov    edx,DWORD PTR [esi]
  412789:	int3   
  41278a:	push   ecx
  41278b:	fidiv  WORD PTR [ecx]
  41278d:	add    dl,BYTE PTR [ecx]
  41278f:	mov    ds:0x9aaf4cc6,al
  412794:	or     al,0xc0
  412796:	xchg   BYTE PTR [ebx-0x736841d9],dh
  41279c:	adc    al,0x22
  41279e:	cs (bad) 
  4127a0:	es shr eax,1
  4127a3:	pop    ebx
  4127a4:	xor    eax,0x60f1d388
  4127a9:	loop   0x412765
  4127ab:	mov    al,0x66
  4127ad:	and    esi,edx
  4127af:	fimul  WORD PTR [edi-0x22]
  4127b2:	mov    ah,0xd5
  4127b4:	(bad)  
  4127b5:	(bad)  
  4127b6:	xchg   ecx,eax
  4127b7:	jmp    0x4127bd
  4127b9:	test   DWORD PTR ss:[ecx+0x60],0x8f220df5
  4127c1:	ins    DWORD PTR es:[edi],dx
  4127c2:	pushf  
  4127c3:	inc    ecx
  4127c4:	mov    ds:0x77a29ef9,al
  4127c9:	fwait
  4127ca:	std    
  4127cb:	and    dh,cl
  4127cd:	call   0x4e979cce
  4127d2:	cmc    
  4127d3:	or     al,0x22
  4127d5:	(bad)  
  4127d7:	inc    edx
  4127d8:	mov    al,ds:0xf7145e71
  4127dd:	sbb    BYTE PTR [esi+0x769b9326],ah
  4127e3:	daa    
  4127e4:	mov    ch,0x39
  4127e6:	in     al,dx
  4127e7:	cdq    
  4127e8:	rol    BYTE PTR [esi+0x2],0x0
  4127ec:	sbb    eax,0xd5e1811e
  4127f1:	inc    edi
  4127f2:	test   al,al
  4127f4:	cwde   
  4127f5:	inc    edx
  4127f6:	ret    0x7bfb
  4127f9:	pop    es
  4127fa:	inc    ebp
  4127fb:	sub    al,0x55
  4127fd:	dec    ecx
  4127fe:	xchg   ebp,eax
  4127ff:	aad    0x55
  412801:	imul   ecx,DWORD PTR [ecx-0x35],0x99a8233c
  412808:	in     al,0x6b
  41280a:	not    esi
  41280c:	cs iret 
  41280e:	sahf   
  41280f:	pop    es
  412810:	dec    edi
  412811:	xor    bh,cl
  412813:	inc    eax
  412814:	inc    eax
  412815:	inc    bp
  412817:	mov    DWORD PTR [edi-0x67],ecx
  41281a:	mov    ds:0x7730584,al
  41281f:	push   0xec925920
  412824:	in     al,dx
  412825:	pop    ebp
  412826:	add    bl,BYTE PTR [ebp-0x7954981e]
  41282c:	xchg   esp,eax
  41282d:	imul   esi,DWORD PTR [ecx-0xa],0xffffffdd
  412831:	in     al,dx
  412832:	(bad)  
  412833:	sar    BYTE PTR ds:0xc86b5a54,1
  412839:	rcl    DWORD PTR [eax-0x6d],cl
  41283c:	shl    WORD PTR fs:[ebx-0x1],cl
  412841:	out    dx,eax
  412842:	lods   eax,DWORD PTR ds:[esi]
  412843:	call   0xf581d73f
  412848:	jbe    0x4127d6
  41284a:	xchg   ebx,eax
  41284b:	sar    esp,cl
  41284d:	and    BYTE PTR [ebx],bh
  41284f:	pop    ds
  412850:	sbb    al,0x38
  412852:	imul   eax,edi,0x67
  412855:	call   0x756a:0x1f405539
  41285c:	repz repz ret 0x7e53
  412861:	out    dx,eax
  412862:	sahf   
  412863:	or     edi,ebx
  412865:	dec    esi
  412866:	ss jp  0x4128be
  412869:	pusha  
  41286a:	pushf  
  41286b:	retf   0x9b3
  41286e:	mov    esp,0x632f24c6
  412873:	xchg   ebp,eax
  412874:	cli    
  412875:	inc    ecx
  412876:	xchg   esp,eax
  412877:	fucomp st(5)
  412879:	mov    edi,DWORD PTR [ebp-0x7]
  41287c:	js     0x412844
  41287e:	ficom  DWORD PTR [ebx-0x72]
  412881:	shl    DWORD PTR [edx],1
  412883:	jp     0x412882
  412885:	sbb    al,0x9c
  412887:	push   ebx
  412888:	dec    esp
  412889:	into   
  41288a:	mov    ebp,0xa86485eb
  41288f:	xor    esp,DWORD PTR [ecx+ebx*2]
  412892:	dec    ebp
  412893:	stos   BYTE PTR es:[edi],al
  412894:	jg     0x4128cb
  412896:	xor    BYTE PTR [eax],ah
  412898:	fld    DWORD PTR [eax+0x1cf620c8]
  41289e:	pop    edx
  41289f:	fs mov ch,0x74
  4128a2:	pop    edx
  4128a3:	add    al,0x1
  4128a5:	sub    eax,0x2d8d861d
  4128aa:	jne    0x41288d
  4128ac:	cld    
  4128ad:	push   ecx
  4128ae:	push   ss
  4128af:	jmp    0xd1a918c3
  4128b4:	dec    ecx
  4128b5:	mov    eax,0xab5b99b8
  4128ba:	xlat   BYTE PTR ds:[ebx]
  4128bb:	sahf   
  4128bc:	pop    es
  4128bd:	push   edi
  4128be:	xor    al,0x58
  4128c0:	aad    0xf
  4128c2:	push   esp
  4128c3:	sbb    al,0x17
  4128c5:	lds    ecx,FWORD PTR [eax]
  4128c7:	mov    edx,0x389bd6f4
  4128cc:	jae    0x41286f
  4128ce:	bound  ebx,QWORD PTR [ecx-0x5a]
  4128d1:	in     al,0x4d
  4128d3:	adc    BYTE PTR [eax+0x6f],bh
  4128d6:	dec    ebp
  4128d7:	cmp    DWORD PTR [ecx-0x7035ad61],esp
  4128dd:	sti    
  4128de:	call   0xeab56385
  4128e3:	xchg   esi,eax
  4128e4:	jmp    0x412956
  4128e6:	cli    
  4128e7:	popa   
  4128e8:	push   ds
  4128e9:	out    0xf1,al
  4128eb:	mov    bl,ah
  4128ed:	mov    ds:0x335c6f89,eax
  4128f2:	retf   
  4128f3:	add    eax,DWORD PTR [eax-0x2bcb5d8f]
  4128f9:	lock loopne 0x4128d9
  4128fc:	daa    
  4128fd:	test   DWORD PTR [ebp-0x75eb4fb2],ecx
  412903:	jecxz  0x4128b3
  412905:	sbb    esp,DWORD PTR [eax]
  412907:	aam    0xed
  412909:	ret    
  41290a:	sbb    edi,DWORD PTR [edi-0x8]
  41290d:	jb     0x4128d2
  41290f:	das    
  412910:	mov    ecx,ebp
  412912:	aaa    
  412913:	lods   eax,DWORD PTR ds:[esi]
  412914:	jbe    0x4128a0
  412916:	stos   DWORD PTR es:[edi],eax
  412917:	jp     0x412905
  412919:	add    eax,0x2c878b8d
  41291e:	mov    ds:0xdd63d772,al
  412923:	std    
  412924:	sbb    eax,eax
  412926:	xchg   DWORD PTR [ebx],esp
  412928:	jb     0x4128c6
  41292a:	lahf   
  41292b:	cmp    eax,0xb9182bbe
  412930:	inc    edx
  412931:	sub    esp,DWORD PTR [ebx]
  412933:	scas   al,BYTE PTR es:[edi]
  412934:	and    BYTE PTR [ebx],0xa7
  412937:	or     ah,ah
  412939:	imul   edx,DWORD PTR [edx+0x5f60eba4],0xffffffd3
  412940:	mov    esp,0x6cdddb2a
  412945:	cmp    BYTE PTR [edx-0x65],dh
  412948:	pop    ebp
  412949:	dec    esi
  41294a:	mov    ah,0xca
  41294c:	rol    ch,1
  41294e:	inc    edx
  41294f:	in     eax,0xa4
  412951:	call   0x5959:0xea29a2db
  412958:	shr    DWORD PTR [edx],1
  41295a:	int    0xa8
  41295c:	or     dl,dh
  41295e:	(bad)  
  41295f:	fld    QWORD PTR [esi+0x15]
  412962:	xor    bh,BYTE PTR [ecx+0x66]
  412965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412966:	xor    DWORD PTR [ebp-0x1b48d58e],0x76
  41296d:	hlt    
  41296e:	jge    0x4129a8
  412970:	aaa    
  412971:	push   ebx
  412972:	jo     0x4129a4
  412974:	in     al,0x49
  412976:	call   0xcfac:0x8eb6a515
  41297d:	dec    ebp
  41297e:	test   eax,0xcd534de9
  412983:	inc    ebx
  412984:	mov    ds:0x50e62dba,eax
  412989:	ret    0x14be
  41298c:	lods   eax,DWORD PTR ds:[esi]
  41298d:	rcr    BYTE PTR [edi-0x23],0xb1
  412991:	sti    
  412992:	fndisi(8087 only) 
  412994:	enter  0xf9d4,0xc5
  412998:	addr16 repnz cli 
  41299b:	mov    DWORD PTR [edx],eax
  41299d:	dec    edx
  41299e:	fist   WORD PTR [esi-0x11]
  4129a1:	sub    dh,BYTE PTR [esi-0x2e]
  4129a4:	loope  0x4129eb
  4129a6:	adc    DWORD PTR [ebx],ecx
  4129a8:	int3   
  4129a9:	test   al,0x91
  4129ab:	jmp    0x6cf5:0xf2300afe
  4129b2:	mov    esp,0xad2bc470
  4129b7:	pop    edi
  4129b8:	and    al,0x78
  4129ba:	cdq    
  4129bb:	loopne 0x4129b6
  4129bd:	rcl    DWORD PTR [eax+0x6dbc8dcf],cl
  4129c3:	mov    esp,eax
  4129c5:	xor    al,0xb8
  4129c7:	int    0x27
  4129c9:	push   esp
  4129ca:	pop    ds
  4129cb:	ds pushaw 
  4129ce:	lds    edi,FWORD PTR [edx+eax*1]
  4129d1:	fldenv [ebx]
  4129d3:	fbld   TBYTE PTR [ecx]
  4129d5:	in     al,0x20
  4129d7:	mov    edi,0x1336589d
  4129dc:	or     ebx,DWORD PTR [ecx+eiz*4+0x44]
  4129e0:	xchg   edi,eax
  4129e1:	xor    bh,BYTE PTR [eax-0x7739f7ce]
  4129e7:	sbb    bh,bl
  4129e9:	or     BYTE PTR [ebp+0x50],dl
  4129ec:	ret    0xbcab
  4129ef:	es jge 0x412a67
  4129f2:	add    edi,esp
  4129f4:	xor    eax,0x9d4dd98
  4129f9:	jmp    0x84e0c8d9
  4129fe:	and    eax,0xad3a1436
  412a03:	xlat   BYTE PTR ds:[ebx]
  412a04:	icebp  
  412a05:	mov    ch,0xed
  412a07:	imul   BYTE PTR [eax-0x188269e2]
  412a0d:	dec    ecx
  412a0e:	not    DWORD PTR [esi-0x164e2221]
  412a14:	inc    esi
  412a15:	pop    edx
  412a16:	repnz hlt 
  412a18:	xchg   ebp,eax
  412a19:	fldcw  WORD PTR [eax]
  412a1b:	cwde   
  412a1c:	pop    ecx
  412a1d:	mov    al,ds:0x386648
  412a23:	aam    0x37
  412a25:	outs   dx,BYTE PTR ds:[esi]
  412a26:	and    al,al
  412a28:	idiv   bl
  412a2a:	cmp    al,0xb6
  412a2c:	mov    ch,0x77
  412a2e:	ins    BYTE PTR es:[edi],dx
  412a2f:	and    DWORD PTR [esi-0x7375e8cd],esi
  412a35:	je     0x412a0a
  412a37:	jno    0x412a78
  412a39:	sti    
  412a3a:	push   edx
  412a3b:	dec    esi
  412a3c:	es sbb ebp,ecx
  412a3f:	rol    esp,1
  412a41:	mov    al,BYTE PTR ds:0x98443a42
  412a47:	stos   BYTE PTR es:[edi],al
  412a48:	push   esp
  412a49:	and    ebp,ebp
  412a4b:	push   esp
  412a4c:	cmp    eax,edx
  412a4e:	inc    ecx
  412a4f:	adc    DWORD PTR [edi],edx
  412a51:	aaa    
  412a52:	push   0xa7aa44b2
  412a57:	in     eax,0xd0
  412a59:	sub    ebx,DWORD PTR [edx-0x61]
  412a5c:	add    eax,0x1f220162
  412a61:	nop
  412a62:	sar    DWORD PTR [esi+0x62011482],1
  412a68:	jecxz  0x412aa9
  412a6a:	or     al,0x44
  412a6c:	call   0x2afe:0xfaf2efe
  412a73:	inc    esp
  412a74:	jecxz  0x412a4f
  412a76:	int    0xe5
  412a78:	jnp    0x412ac3
  412a7a:	pop    ebx
  412a7b:	jp     0x412a97
  412a7d:	dec    esi
  412a7e:	call   0x9d7a9300
  412a83:	ret    0xd155
  412a86:	sub    eax,0x22cace86
  412a8b:	add    eax,0x234f6ba
  412a90:	aam    0x8b
  412a92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a93:	and    al,0x32
  412a95:	pop    eax
  412a96:	lahf   
  412a97:	cwde   
  412a98:	mov    al,ds:0x14ef5e25
  412a9d:	es mov bh,0xe
  412aa0:	inc    esi
  412aa1:	cs jp  0x412a2b
  412aa4:	xchg   dh,bl
  412aa6:	daa    
  412aa7:	ret    0x3418
  412aaa:	daa    
  412aab:	aad    0x24
  412aad:	dec    esi
  412aae:	fstp   DWORD PTR [eax]
  412ab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ab1:	ja     0x412a8f
  412ab3:	cmp    edi,DWORD PTR [edx-0x4d234629]
  412ab9:	and    edx,DWORD PTR [esi]
  412abb:	adc    eax,0xdb06911
  412ac0:	test   BYTE PTR [ebp+eax*1+0x44],bh
  412ac4:	mov    bh,0x14
  412ac6:	lods   eax,DWORD PTR ds:[esi]
  412ac7:	cmp    esp,DWORD PTR [esi-0x3ede5893]
  412acd:	jl     0x412ad9
  412acf:	sub    DWORD PTR [edx+0x24],ecx
  412ad2:	aas    
  412ad3:	push   es
  412ad4:	jp     0x412aba
  412ad6:	push   edx
  412ad7:	pop    eax
  412ad8:	add    ecx,DWORD PTR [ebp+0x1a]
  412adb:	jno    0x412b56
  412add:	mov    BYTE PTR [edx-0x1963eb68],al
  412ae3:	iret   
  412ae4:	aaa    
  412ae5:	lea    ebp,[ebp+0x5fcb813f]
  412aeb:	fxtract 
  412aed:	mov    eax,ds:0xcfaf11c1
  412af2:	arpl   WORD PTR [ecx-0x73],dx
  412af5:	jbe    0x412aa2
  412af7:	pushf  
  412af8:	into   
  412af9:	iret   
  412afa:	stos   BYTE PTR es:[edi],al
  412afb:	mov    edx,0xb1ecba1c
  412b00:	push   ebp
  412b01:	mov    esp,0xc56e7e89
  412b06:	outs   dx,DWORD PTR ds:[esi]
  412b07:	adc    al,0x9b
  412b09:	push   ebx
  412b0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b0b:	test   esi,esp
  412b0d:	jo     0x412ad7
  412b0f:	test   al,0xdd
  412b11:	into   
  412b12:	jo     0x412b78
  412b14:	push   ebp
  412b15:	test   edi,ecx
  412b17:	add    ebp,edx
  412b19:	add    eax,DWORD PTR [edx]
  412b1b:	sub    eax,0x7292d1c7
  412b20:	aam    0x78
  412b22:	pop    ss
  412b23:	sub    edx,ecx
  412b25:	stc    
  412b26:	lods   al,BYTE PTR ds:[esi]
  412b27:	iret   
  412b28:	fwait
  412b29:	xor    eax,0xf0aaad2d
  412b2e:	mov    BYTE PTR [eax-0x41],bh
  412b31:	fs repz jno 0x412bad
  412b35:	add    ebp,ecx
  412b37:	cld    
  412b38:	or     DWORD PTR [eax+0x70a3da22],esp
  412b3e:	std    
  412b3f:	mov    dh,0x31
  412b41:	jae    0x412b04
  412b43:	sub    BYTE PTR [esi+0xabcb8ee],0x55
  412b4a:	xchg   DWORD PTR [eax],esp
  412b4c:	push   ecx
  412b4d:	rcr    DWORD PTR [ecx],cl
  412b4f:	xor    dh,dl
  412b51:	mov    bl,0xf8
  412b53:	inc    ebp
  412b54:	and    BYTE PTR ss:[ecx-0x7995fd23],0x61
  412b5c:	mov    bl,BYTE PTR [ecx+0x7]
  412b5f:	jnp    0x412b6e
  412b61:	xor    BYTE PTR [edx],ch
  412b63:	pop    ss
  412b64:	lods   eax,DWORD PTR ds:[esi]
  412b65:	les    edx,FWORD PTR [eax-0x3a738a32]
  412b6b:	lds    edi,FWORD PTR [edx+0x51ab576c]
  412b71:	cwde   
  412b72:	adc    al,ah
  412b74:	je     0x412b44
  412b76:	fsub   st(4),st
  412b78:	shl    DWORD PTR [ebx-0x70],1
  412b7b:	push   ebx
  412b7c:	lock dec edx
  412b7e:	loop   0x412ba1
  412b80:	fild   DWORD PTR [edx]
  412b82:	fsub   QWORD PTR [ecx]
  412b84:	scas   eax,DWORD PTR es:[edi]
  412b85:	pop    ecx
  412b86:	dec    eax
  412b87:	fsub   DWORD PTR [esp+eiz*8-0x6f48542c]
  412b8e:	jmp    0x412b64
  412b90:	xchg   ecx,eax
  412b91:	daa    
  412b92:	ror    DWORD PTR [edi+0x5ebddfd6],0xb1
  412b99:	js     0x412b81
  412b9b:	adc    BYTE PTR [edx+0x3c],bh
  412b9e:	cmp    eax,DWORD PTR [ebx-0x3ed55be9]
  412ba4:	sbb    BYTE PTR [edx],ch
  412ba6:	daa    
  412ba7:	arpl   WORD PTR [ebx+0x4b5d8523],bp
  412bad:	sub    eax,0xef783411
  412bb2:	sbb    bh,BYTE PTR [eax]
  412bb4:	mov    cl,ch
  412bb6:	jno    0x412b4f
  412bb8:	inc    edi
  412bb9:	mov    cl,dh
  412bbb:	scas   al,BYTE PTR es:[edi]
  412bbc:	sbb    al,0x23
  412bbe:	frstor [edx]
  412bc0:	dec    BYTE PTR [eax-0xd]
  412bc3:	inc    ecx
  412bc4:	into   
  412bc5:	retf   0xb7c3
  412bc8:	ret    0x4dd6
  412bcb:	out    dx,eax
  412bcc:	xchg   BYTE PTR [eax-0x31],bh
  412bcf:	sub    dh,ch
  412bd1:	cmp    al,0xd5
  412bd3:	ss dec esi
  412bd5:	or     eax,0x38b09e7b
  412bda:	mov    eax,0x51f3cc8a
  412bdf:	sbb    al,0xcd
  412be1:	imul   edx,DWORD PTR [eax+0x4183be69],0x58
  412be8:	inc    esp
  412be9:	mov    bl,BYTE PTR [eax+0x4b]
  412bec:	lock push esi
  412bee:	inc    esp
  412bef:	in     al,0xf
  412bf1:	pop    edx
  412bf2:	xor    al,0x9b
  412bf4:	sub    ah,BYTE PTR [edi]
  412bf6:	call   0xb07d25b3
  412bfb:	jl     0x412b82
  412bfd:	arpl   WORD PTR [ebx+ebp*2],dx
  412c00:	imul   ebp,DWORD PTR [edx],0x50
  412c03:	jp     0x412ba1
  412c05:	push   esi
  412c06:	bound  esi,QWORD PTR [edx+0x47]
  412c09:	fld    DWORD PTR [edi-0x2c]
  412c0c:	pop    ds
  412c0d:	pop    ebp
  412c0e:	jbe    0x412c56
  412c10:	bnd js 0x412be4
  412c13:	mov    BYTE PTR [edx+0x37],dh
  412c16:	es mov ebx,0x8a7e6b4e
  412c1c:	out    dx,al
  412c1d:	lahf   
  412c1e:	mov    ecx,0x844a6bfa
  412c23:	shl    BYTE PTR [eax],0x27
  412c26:	mov    al,0x38
  412c28:	jo     0x412c3f
  412c2a:	adc    eax,0x7ef03567
  412c2f:	fwait
  412c30:	jmp    0x1a3652ca
  412c35:	mov    ebp,0xc9c4be10
  412c3a:	mov    ebp,0x7f4c6c72
  412c3f:	inc    esi
  412c40:	stos   BYTE PTR es:[edi],al
  412c41:	pusha  
  412c42:	int    0x24
  412c44:	sti    
  412c45:	push   ebx
  412c46:	mov    esp,0x28908dd0
  412c4b:	leave  
  412c4c:	(bad)
  412c50:	arpl   WORD PTR [eax+eax*1+0xc],cx
  412c54:	and    eax,0x1dee63c0
  412c59:	jo     0x412cbd
  412c5b:	and    DWORD PTR [edx-0x6],edi
  412c5e:	dec    eax
  412c5f:	lods   eax,DWORD PTR ds:[esi]
  412c60:	push   edi
  412c61:	outs   dx,BYTE PTR ds:[esi]
  412c62:	cmc    
  412c63:	ror    esi,1
  412c65:	gs mov edi,0x6d83f0b5
  412c6b:	pop    ecx
  412c6c:	add    BYTE PTR [ebx],al
  412c6e:	or     cl,al
  412c70:	aas    
  412c71:	out    dx,eax
  412c72:	popf   
  412c73:	cli    
  412c74:	fist   DWORD PTR [ebx-0x2fc3c860]
  412c7a:	mov    eax,0xe267bef2
  412c7f:	or     DWORD PTR [ebx],0xffffffc6
  412c82:	pop    eax
  412c83:	adc    DWORD PTR [ecx+edi*8-0x5f],ecx
  412c87:	mov    ch,0xb3
  412c89:	std    
  412c8a:	ror    BYTE PTR [edx],0xbe
  412c8d:	cs rcr ecx,1
  412c90:	dec    esp
  412c91:	fidiv  WORD PTR [ebx+0x50c82a19]
  412c97:	enter  0xfbd3,0x7b
  412c9b:	xor    cl,0xd
  412c9e:	mov    al,ds:0x983e3c39
  412ca3:	mov    ebp,ebx
  412ca5:	push   es
  412ca6:	lds    edi,FWORD PTR [edx]
  412ca8:	adc    esp,DWORD PTR [eax-0x59fba557]
  412cae:	push   ss
  412caf:	jecxz  0x412d0b
  412cb1:	mov    dh,BYTE PTR [edi-0x7d]
  412cb4:	lea    esi,[edx]
  412cb6:	cwde   
  412cb7:	(bad)  
  412cb8:	sti    
  412cb9:	repz test al,0x71
  412cbc:	dec    ecx
  412cbd:	xor    edx,DWORD PTR [ebx]
  412cbf:	repz iret 
  412cc1:	mov    dl,0xba
  412cc3:	std    
  412cc4:	iret   
  412cc5:	jmp    0x9ae088ad
  412cca:	loope  0x412c4e
  412ccc:	mov    ch,0x4f
  412cce:	cmp    eax,esi
  412cd0:	lock (bad) 
  412cd2:	pop    esp
  412cd3:	xchg   esi,eax
  412cd4:	jnp    0x412d2c
  412cd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cd7:	in     eax,0x98
  412cd9:	xor    ah,ah
  412cdb:	mov    al,0x3d
  412cdd:	fs mov ah,0x91
  412ce0:	(bad)
  412ce5:	rcl    DWORD PTR [eax],1
  412ce7:	add    al,0xd8
  412ce9:	test   eax,0xc7705224
  412cee:	pop    esi
  412cef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cf0:	pop    esi
  412cf1:	sub    BYTE PTR [ebx+ebp*2],ah
  412cf4:	ficomp WORD PTR [ebp+eax*2-0x6c]
  412cf8:	shr    ebx,cl
  412cfa:	out    dx,eax
  412cfb:	lods   eax,DWORD PTR ds:[esi]
  412cfc:	sahf   
  412cfd:	dec    edx
  412cfe:	imul   ebx,DWORD PTR [esi-0x31],0xa896949c
  412d05:	mov    dh,0x1b
  412d07:	dec    eax
  412d08:	aaa    
  412d09:	mov    ebp,edi
  412d0b:	push   ss
  412d0c:	out    0x51,eax
  412d0e:	sahf   
  412d0f:	fidivr DWORD PTR [esi-0x1cccf1f7]
  412d15:	imul   ebx,esi,0x77dec283
  412d1b:	mov    cl,0x1e
  412d1d:	mov    al,0x41
  412d1f:	mov    esi,0xc778627a
  412d24:	sbb    dl,BYTE PTR [ecx+0x17a76507]
  412d2a:	inc    ebp
  412d2b:	pop    ecx
  412d2c:	xlat   BYTE PTR ds:[ebx]
  412d2d:	lods   eax,DWORD PTR ds:[esi]
  412d2e:	push   esp
  412d2f:	mov    esi,0x8ce13aad
  412d34:	call   DWORD PTR [edx]
  412d36:	push   edx
  412d37:	push   0x7919ae93
  412d3c:	lahf   
  412d3d:	xchg   DWORD PTR [ebp+0x5a],ebp
  412d40:	jmp    0x19fa:0x1d70cc32
  412d47:	mov    BYTE PTR [ebx],bh
  412d49:	pop    es
  412d4a:	xchg   esi,eax
  412d4b:	stc    
  412d4c:	cs int 0x7c
  412d4f:	out    dx,eax
  412d50:	rcl    esi,cl
  412d52:	push   ebp
  412d53:	mov    BYTE PTR [edx+0x39],ch
  412d56:	push   ebx
  412d57:	jmp    0xd81f1a0e
  412d5c:	loop   0x412d9e
  412d5e:	mov    ebp,0xc71239fa
  412d63:	je     0x412da3
  412d65:	test   BYTE PTR [eax-0x6],dh
  412d68:	pop    eax
  412d69:	repz leave 
  412d6b:	sub    DWORD PTR [edi+0x2f],ebp
  412d6e:	aad    0x1b
  412d70:	sbb    ebx,DWORD PTR ds:[esi+0x66ed0366]
  412d77:	popf   
  412d78:	jmp    0x412d44
  412d7a:	not    BYTE PTR [eax+esi*1]
  412d7d:	sub    bl,BYTE PTR [edi-0x2d]
  412d80:	or     eax,0x583290b2
  412d85:	push   cs
  412d86:	pushf  
  412d87:	xor    ah,BYTE PTR [edi]
  412d89:	cmp    DWORD PTR [esi-0x7e],edi
  412d8c:	add    ch,BYTE PTR [esi-0x79]
  412d8f:	xor    BYTE PTR [eax+0x76],dl
  412d92:	push   ss
  412d93:	push   ds
  412d94:	mov    eax,0x9c5dae0c
  412d99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d9a:	dec    esi
  412d9b:	scas   eax,DWORD PTR es:[edi]
  412d9c:	pusha  
  412d9d:	xor    al,0xce
  412d9f:	mov    al,ds:0x3f6c0313
  412da4:	sub    edi,edi
  412da6:	sbb    DWORD PTR [eax],ebx
  412da8:	mov    cl,0xa7
  412daa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dab:	push   edx
  412dac:	and    eax,0x845ba45d
  412db1:	mov    ds:0x3e876a08,al
  412db6:	lods   eax,DWORD PTR ds:[esi]
  412db7:	cmp    DWORD PTR [ecx-0x3defa29],esi
  412dbd:	int    0x3a
  412dbf:	mov    bh,0x1f
  412dc1:	cmp    DWORD PTR [edi+0x2be838ae],esp
  412dc7:	mov    bl,BYTE PTR [edi-0x28a4b0ba]
  412dcd:	rcr    BYTE PTR [eax+0x50],1
  412dd0:	mov    ecx,DWORD PTR [edx+0x69ba9c33]
  412dd6:	cmp    DWORD PTR [ebp+0x1a535bef],esi
  412ddc:	daa    
  412ddd:	and    DWORD PTR [ebx],0xfffffffe
  412de0:	dec    edx
  412de1:	cwde   
  412de2:	ror    ah,1
  412de4:	add    ebx,esp
  412de6:	lods   al,BYTE PTR ds:[esi]
  412de7:	scas   al,BYTE PTR es:[edi]
  412de8:	sub    esi,ebx
  412dea:	pop    ebx
  412deb:	sub    esi,DWORD PTR [esi+0x2af302c7]
  412df1:	(bad)  
  412df2:	xchg   ebx,eax
  412df3:	aas    
  412df4:	sbb    esp,DWORD PTR [edx+0x62e30b07]
  412dfa:	mov    ch,0xe0
  412dfc:	or     DWORD PTR [edx-0x6e],esp
  412dff:	or     eax,ebp
  412e01:	cmp    edi,DWORD PTR [eax]
  412e03:	adc    eax,eax
  412e05:	(bad)  
  412e07:	mov    WORD PTR [ecx-0x1fd58db4],ss
  412e0d:	jno    0x412e00
  412e0f:	sub    DWORD PTR [ebx+0x1ed61dda],ebp
  412e15:	push   edi
  412e16:	xchg   BYTE PTR [ebx],al
  412e18:	mov    esp,DWORD PTR [edx-0xb1ae56e]
  412e1e:	popa   
  412e1f:	loope  0x412e65
  412e21:	lock xlat BYTE PTR ds:[ebx]
  412e23:	and    eax,0x3b3e5b8b
  412e28:	mov    ds:0x3ea1fa09,eax
  412e2d:	add    DWORD PTR [ecx+eax*4],ebx
  412e30:	pusha  
  412e31:	cdq    
  412e32:	icebp  
  412e33:	aas    
  412e34:	lods   eax,DWORD PTR ss:[esi]
  412e36:	jmp    0x412e0d
  412e38:	mov    bl,0x64
  412e3a:	psubsb mm1,mm6
  412e3d:	cmc    
  412e3e:	pop    ds
  412e3f:	test   DWORD PTR [eax+0x3f],esi
  412e42:	stc    
  412e43:	and    DWORD PTR [esi],eax
  412e45:	and    eax,0xa1e881d2
  412e4a:	retf   
  412e4b:	push   0xffffffd4
  412e4d:	je     0x412e8b
  412e4f:	stc    
  412e50:	fsub   QWORD PTR [esp+esi*1-0x58109ae6]
  412e57:	sub    BYTE PTR [ecx],ch
  412e59:	dec    esi
  412e5a:	cmp    cl,dh
  412e5c:	cli    
  412e5d:	jge    0x412ed4
  412e5f:	mov    eax,ds:0x76d4271d
  412e64:	ds mov dl,0x9f
  412e67:	seta   BYTE PTR [esi+0x97d0005]
  412e6e:	add    esi,DWORD PTR [edi]
  412e70:	imul   edx,DWORD PTR [ecx],0xdff513a4
  412e76:	rcl    DWORD PTR [edx*1+0x2df1e9d4],0x4
  412e7e:	add    ebp,ecx
  412e80:	dec    eax
  412e81:	xor    ah,BYTE PTR [edi-0x62]
  412e84:	fmul   DWORD PTR [ecx+0x56c333ff]
  412e8a:	(bad)  
  412e8b:	push   cs
  412e8c:	ja     0x412e74
  412e8e:	stos   BYTE PTR es:[edi],al
  412e8f:	fiadd  WORD PTR [ebx]
  412e91:	mov    ds:0xd0aff92e,al
  412e96:	pop    edi
  412e97:	mov    ?,WORD PTR [edi-0x75]
  412e9a:	pushf  
  412e9b:	test   edx,ecx
  412e9d:	lea    ecx,[ecx+eiz*2]
  412ea0:	mov    ds:0xf5409bb3,eax
  412ea5:	xchg   esi,eax
  412ea6:	ins    DWORD PTR es:[edi],dx
  412ea7:	pop    ebp
  412ea8:	mov    edx,0x1ab481e3
  412ead:	nop
  412eae:	push   0xffffff90
  412eb0:	adc    ch,BYTE PTR [edi+0xa]
  412eb3:	or     cl,BYTE PTR [ebx+esi*2]
  412eb6:	push   ebp
  412eb7:	mov    ecx,0x2d4e22bf
  412ebc:	or     al,0x52
  412ebe:	nop
  412ebf:	add    al,0x2e
  412ec1:	(bad)  
  412ec2:	push   ecx
  412ec3:	and    BYTE PTR [ebx+edx*8-0x6b74a136],bh
  412eca:	mov    ebp,0xfb43662b
  412ecf:	mov    ecx,DWORD PTR [eax-0x12]
  412ed2:	daa    
  412ed3:	out    dx,eax
  412ed4:	pushf  
  412ed5:	mov    dh,0x75
  412ed7:	jne    0x412f2d
  412ed9:	mov    ecx,0xcf727a29
  412ede:	jno    0x412ed5
  412ee0:	repnz lods al,BYTE PTR ds:[esi]
  412ee2:	and    bh,BYTE PTR [ebx]
  412ee4:	jno    0x412e6a
  412ee6:	nop
  412ee7:	add    DWORD PTR [ebx-0x152112c6],esp
  412eed:	leave  
  412eee:	(bad)  
  412eef:	fdiv   DWORD PTR [ecx+0x1]
  412ef2:	jmp    0x6a053a27
  412ef7:	and    DWORD PTR [ebp+0x11],esp
  412efa:	inc    ebp
  412efb:	jae    0x412efd
  412efd:	pop    ss
  412efe:	test   al,0xf1
  412f00:	pop    edi
  412f01:	jg     0x412eea
  412f03:	mov    al,0x64
  412f05:	and    bh,ah
  412f07:	add    eax,0x13fdda81
  412f0c:	imul   edi,DWORD PTR [ecx],0xffffffad
  412f0f:	loopne 0x412ee6
  412f11:	lahf   
  412f12:	lahf   
  412f13:	daa    
  412f14:	push   0x42f2caf4
  412f19:	hlt    
  412f1a:	enter  0xbf0b,0x30
  412f1e:	jbe    0x412f16
  412f20:	sbb    al,0x61
  412f22:	sbb    DWORD PTR [edx-0x13e38464],esi
  412f28:	sub    DWORD PTR ds:[edi+0x71514305],esi
  412f2f:	outs   dx,DWORD PTR ds:[esi]
  412f30:	sbb    ch,BYTE PTR [ecx+edi*8]
  412f33:	leave  
  412f34:	sbb    al,0xa9
  412f36:	jle    0x412f48
  412f38:	mov    ecx,0x580fe46d
  412f3d:	jb     0x412eea
  412f3f:	jmp    0x2bd31311
  412f44:	lock (bad) 
  412f46:	pop    esi
  412f47:	mov    ds:0x5ded65eb,eax
  412f4c:	fwait
  412f4d:	lods   eax,DWORD PTR ds:[esi]
  412f4e:	mov    esi,0x25c0b9e4
  412f53:	popa   
  412f54:	sti    
  412f55:	iret   
  412f56:	les    ebp,FWORD PTR [ebx-0x2b]
  412f59:	inc    esp
  412f5a:	shr    BYTE PTR [edi-0x4d1c622e],1
  412f60:	test   BYTE PTR [ebx+0x3d4d8f26],dl
  412f66:	push   eax
  412f67:	repnz in al,0x32
  412f6a:	sbb    bh,BYTE PTR [ecx-0x6ef3d284]
  412f70:	mov    edi,0x809d20ab
  412f75:	and    eax,0x5d09ae2d
  412f7a:	add    edi,DWORD PTR [edx-0x259cfafb]
  412f80:	jge    0x412f6c
  412f82:	test   al,0x37
  412f84:	push   ecx
  412f85:	push   edi
  412f86:	test   al,0x14
  412f88:	div    al
  412f8a:	cdq    
  412f8b:	cmp    BYTE PTR [edi],ah
  412f8d:	data16 mov al,ds:0xa1b3b913
  412f93:	inc    esi
  412f94:	gs pop esi
  412f96:	ds jge 0x412f54
  412f99:	(bad)  
  412f9b:	jnp    0x413009
  412f9d:	mov    al,ds:0xde9d1462
  412fa2:	jg     0x412fc9
  412fa4:	or     ch,BYTE PTR [eax]
  412fa6:	es pop ds
  412fa8:	add    DWORD PTR [ecx],esp
  412faa:	ds ss inc edi
  412fad:	jle    0x412f31
  412faf:	scas   al,BYTE PTR es:[edi]
  412fb0:	dec    edi
  412fb1:	mov    DWORD PTR [esi-0x3f],ecx
  412fb4:	mov    dl,0x83
  412fb6:	dec    ebx
  412fb7:	mov    DWORD PTR [esi+0x1f73ffa7],ecx
  412fbd:	ret    
  412fbe:	dec    ecx
  412fbf:	inc    esp
  412fc0:	jg     0x412f7b
  412fc2:	les    edx,FWORD PTR [esi-0x5879d220]
  412fc8:	fist   WORD PTR [eax]
  412fca:	inc    edi
  412fcb:	retf   
  412fcc:	retf   0x1bda
  412fcf:	test   BYTE PTR [eax+0x45],0x2f
  412fd3:	imul   BYTE PTR [ebp+eiz*2+0x23]
  412fd7:	cld    
  412fd8:	and    DWORD PTR [ecx],ecx
  412fda:	mov    al,0x91
  412fdc:	and    cl,cl
  412fde:	sub    ah,bh
  412fe0:	mov    WORD PTR [ebx],ss
  412fe2:	mov    ah,0x46
  412fe4:	in     al,0xd6
  412fe6:	push   0xf6f964ed
  412feb:	mov    ebx,DWORD PTR [edi-0x28]
  412fee:	cmp    ah,BYTE PTR ds:0xebbb7bd6
  412ff4:	scas   al,BYTE PTR es:[edi]
  412ff5:	aas    
  412ff6:	iret   
  412ff7:	test   edx,esp
  412ff9:	jnp    0x412fc4
  412ffb:	clc    
  412ffc:	js     0x412fe0
  412ffe:	ja     0x412fc2
  413000:	ds dec edx
  413002:	jno    0x413009
  413004:	shr    DWORD PTR [edx+edx*1],0x5e
  413008:	and    DWORD PTR [esi+ecx*2-0x47680c14],esi
  41300f:	jo     0x412f9c
  413011:	imul   eax,edi,0xc9f2a2e9
  413017:	pushf  
  413018:	stos   DWORD PTR es:[edi],eax
  413019:	leave  
  41301a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41301b:	int3   
  41301c:	inc    esp
  41301d:	push   0x13
  41301f:	and    BYTE PTR [esp+edx*8],bl
  413022:	repnz adc BYTE PTR [ebx+edi*4+0xf2c16df],dl
  41302a:	dec    esi
  41302b:	push   ds
  41302c:	popa   
  41302d:	mov    esp,0xe76850c
  413032:	js     0x41303b
  413034:	ret    0x3400
  413037:	xchg   ebx,eax
  413038:	pop    ebp
  413039:	sub    eax,0x78c675b2
  41303e:	sbb    BYTE PTR [ecx-0x2],ch
  413041:	adc    BYTE PTR ss:[ecx],0xb9
  413045:	call   DWORD PTR ds:0x8da1fe49
  41304b:	sub    DWORD PTR [edi],ebx
  41304d:	rcl    BYTE PTR ds:0x3b8075b2,cl
  413053:	bound  esi,QWORD PTR [ecx-0x46]
  413056:	call   FWORD PTR [esi]
  413058:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413059:	mov    al,ds:0xf77e5625
  41305e:	ficom  WORD PTR [esi+0x1f]
  413061:	adc    eax,0x24aecea2
  413066:	cmp    ebx,esi
  413068:	shr    edi,1
  41306a:	pop    ss
  41306b:	(bad)  
  41306c:	cmp    al,0x4c
  41306e:	gs aas 
  413070:	mov    bl,0x19
  413072:	test   al,0x62
  413074:	dec    ebx
  413075:	pop    ds
  413076:	scas   eax,DWORD PTR es:[edi]
  413077:	in     eax,dx
  413078:	xchg   BYTE PTR [edi+0x6],ah
  41307b:	pop    esp
  41307c:	mov    ebp,DWORD PTR [ebp+0x648a3579]
  413082:	retf   0xaa02
  413085:	xchg   esp,eax
  413086:	pop    eax
  413087:	add    eax,0x81d6ed53
  41308c:	hlt    
  41308d:	or     al,0xfc
  41308f:	cmp    ebx,ebp
  413091:	scas   eax,DWORD PTR es:[edi]
  413092:	test   al,0xbf
  413094:	pushf  
  413095:	xor    al,0xde
  413097:	lds    ebp,FWORD PTR [di-0x4322]
  41309c:	int    0x6c
  41309e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41309f:	scas   al,BYTE PTR es:[edi]
  4130a0:	inc    ebx
  4130a1:	ret    
  4130a2:	xor    DWORD PTR [edx],esi
  4130a4:	mov    edi,0x7bc021bd
  4130a9:	jo     0x413125
  4130ab:	sbb    al,0x9a
  4130ad:	ror    DWORD PTR [ebp-0x2758062d],0xf7
  4130b4:	adc    ebx,DWORD PTR [edi+0x2d]
  4130b7:	addr16 in eax,0x18
  4130ba:	bnd jmp 0x5c03e74b
  4130c0:	je     0x413129
  4130c2:	ins    DWORD PTR es:[edi],dx
  4130c3:	dec    esi
  4130c4:	pop    ecx
  4130c5:	inc    ecx
  4130c6:	std    
  4130c7:	call   0x42f0:0x2fff8ec
  4130ce:	and    eax,0x32ef86f3
  4130d3:	dec    ecx
  4130d4:	mov    WORD PTR [eax],cs
  4130d6:	dec    esi
  4130d7:	add    ebx,0xf0c2ce48
  4130dd:	pop    esi
  4130de:	add    ecx,eax
  4130e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130e1:	call   FWORD PTR [edx+0x199fe97e]
  4130e7:	fadd   QWORD PTR [edx-0x39dbb96e]
  4130ed:	or     eax,edi
  4130ef:	fistp  DWORD PTR [ebp-0x43]
  4130f2:	cmp    DWORD PTR [ecx],edi
  4130f4:	mov    ebp,0x81fa2c71
  4130f9:	sbb    ah,BYTE PTR [esi*8-0x13db9dd1]
  413100:	xchg   DWORD PTR [esi+0x186043cd],edi
  413106:	and    eax,0x2befa3fb
  41310b:	in     eax,dx
  41310c:	dec    edi
  41310d:	add    BYTE PTR [edx-0x1521dd82],dl
  413113:	add    eax,0x53415dd1
  413118:	or     BYTE PTR [edx],bl
  41311a:	mov    edx,0x8255b927
  41311f:	pop    edi
  413120:	fimul  DWORD PTR [edx-0xa]
  413123:	fscale 
  413125:	sti    
  413126:	lock dec esp
  413128:	add    BYTE PTR [bp+si+0x54],bl
  41312c:	gs dec edx
  41312e:	sub    eax,DWORD PTR [esp+edx*1]
  413131:	into   
  413132:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  413134:	unpckhps xmm3,xmm5
  413137:	pop    ebx
  413138:	cs mov al,0xe5
  41313b:	pop    es
  41313c:	sbb    al,0x19
  41313e:	pop    ecx
  41313f:	leave  
  413140:	mov    ebx,0x7b331ae1
  413145:	mov    gs,eax
  413147:	pushf  
  413148:	add    eax,ecx
  41314a:	call   0x9782c552
  41314f:	xchg   esi,eax
  413150:	repz mov ah,0x71
  413153:	xchg   ebp,eax
  413154:	sub    al,0xde
  413156:	xchg   edx,eax
  413157:	call   0xb5fe:0xf60201ff
  41315e:	outs   dx,BYTE PTR ds:[esi]
  41315f:	cmp    BYTE PTR [ebp+edx*8+0x2f],cl
  413163:	and    al,bl
  413165:	mov    al,0x96
  413167:	pop    ss
  413168:	inc    edx
  413169:	pushf  
  41316a:	fbld   TBYTE PTR [eax+0x70c4e151]
  413170:	or     esi,ebx
  413172:	and    BYTE PTR [edi],cl
  413174:	pop    ebx
  413175:	or     BYTE PTR [eax+0x42],ch
  413178:	sar    eax,0xe9
  41317b:	xchg   edx,eax
  41317c:	aas    
  41317d:	mov    esp,0x65acb3a6
  413182:	and    BYTE PTR [ecx],0x60
  413185:	scas   al,BYTE PTR es:[edi]
  413186:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413187:	shr    BYTE PTR [eax+0x1cbebe3],cl
  41318d:	xchg   ecx,eax
  41318e:	(bad)  
  41318f:	lahf   
  413190:	sbb    al,0xbc
  413192:	in     eax,0xf0
  413194:	mov    dh,BYTE PTR [ebx+0x1a85132]
  41319a:	mov    al,BYTE PTR [edx]
  41319c:	mov    edx,0x4a7c6b72
  4131a1:	sahf   
  4131a2:	lds    ecx,FWORD PTR [edx]
  4131a4:	fdiv   DWORD PTR gs:[ecx+0x74]
  4131a8:	sbb    BYTE PTR [edx-0x6d13388c],ah
  4131ae:	adc    BYTE PTR [ecx-0x3e718c04],0x2
  4131b5:	mov    WORD PTR fs:[ebp+0x6a],?
  4131b9:	repnz pop eax
  4131bb:	inc    eax
  4131bc:	clc    
  4131bd:	into   
  4131be:	iret   
  4131bf:	(bad)  
  4131c0:	mov    ebx,0x7dd8aa4d
  4131c5:	push   edx
  4131c6:	pop    edx
  4131c7:	sbb    al,bh
  4131c9:	pusha  
  4131ca:	in     al,0x51
  4131cc:	push   0xacf75a88
  4131d1:	std    
  4131d2:	inc    edx
  4131d3:	leave  
  4131d4:	idiv   BYTE PTR ds:0xbf00ff2
  4131da:	test   DWORD PTR [esi-0x2ff9f1a5],ebp
  4131e0:	sbb    eax,esi
  4131e2:	pop    es
  4131e3:	dec    edx
  4131e4:	scas   eax,DWORD PTR es:[edi]
  4131e5:	pushf  
  4131e6:	inc    esp
  4131e7:	scas   eax,DWORD PTR es:[edi]
  4131e8:	cdq    
  4131e9:	dec    edx
  4131ea:	and    bl,BYTE PTR [eax]
  4131ec:	push   ecx
  4131ed:	inc    edi
  4131ee:	dec    edi
  4131ef:	pop    ebx
  4131f0:	lock mov dh,0x24
  4131f3:	out    dx,eax
  4131f4:	lahf   
  4131f5:	cli    
  4131f6:	int3   
  4131f7:	imul   eax,DWORD PTR [ebx+0x75a22e3b],0x24
  4131fe:	aaa    
  4131ff:	jl     0x41321b
  413201:	sti    
  413202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413203:	ja     0x413265
  413205:	push   ebx
  413206:	push   ebp
  413207:	cmp    eax,0x40312e64
  41320c:	(bad)
  41320f:	adc    BYTE PTR [edi+0x93d288d],ah
  413215:	mov    WORD PTR [edi],?
  413217:	ins    DWORD PTR es:[edi],dx
  413218:	loope  0x413206
  41321a:	pop    edi
  41321b:	xchg   edx,eax
  41321c:	xor    DWORD PTR [ecx-0x46],eax
  41321f:	push   eax
  413220:	dec    esi
  413221:	popa   
  413222:	das    
  413223:	(bad)  
  413224:	lock out dx,eax
  413226:	cmc    
  413227:	sar    dh,0x8d
  41322a:	pushf  
  41322b:	dec    ecx
  41322c:	(bad)  
  41322d:	sbb    eax,0xfb9f73d8
  413232:	jg     0x4131c9
  413234:	test   al,0xf5
  413236:	xor    BYTE PTR [ebx-0x704df703],cl
  41323c:	xor    cl,bl
  41323e:	dec    eax
  41323f:	fsubr  DWORD PTR [edi-0x2156a9e2]
  413245:	mov    ds:0x2c586b93,al
  41324a:	sbb    al,0x98
  41324c:	dec    eax
  41324d:	inc    ebx
  41324e:	adc    cl,BYTE PTR [esi]
  413250:	ins    DWORD PTR es:[edi],dx
  413251:	mov    bh,0xa2
  413253:	test   DWORD PTR [edx+edi*1],ebp
  413256:	jbe    0x413281
  413258:	out    dx,eax
  413259:	xlat   BYTE PTR ds:[ebx]
  41325a:	test   DWORD PTR [ebx+0x4cf6ece8],0xf32a6174
  413264:	imul   eax,DWORD PTR [eax+0x1b4b9e3e],0xfffffffc
  41326b:	mov    al,0xc4
  41326d:	out    0xf0,eax
  41326f:	mov    DWORD PTR [ebx],edx
  413271:	mov    dh,0x56
  413273:	dec    esp
  413274:	xchg   edx,eax
  413275:	mov    edx,0x164b0d5b
  41327a:	jecxz  0x41322f
  41327c:	cmp    DWORD PTR ds:0x31c2d75a,esi
  413282:	push   ss
  413283:	jae    0x4132dd
  413285:	repz push ds
  413287:	jb     0x41328a
  413289:	mov    ?,WORD PTR [edx]
  41328b:	addr16 loopne 0x4132e0
  41328e:	rcl    DWORD PTR ds:0xb813d432,0x46
  413295:	push   esp
  413296:	xor    DWORD PTR ds:[ebp+ecx*4+0x5],ebx
  41329b:	mov    bh,0x17
  41329d:	push   ds
  41329e:	rol    DWORD PTR [edx-0x1a],1
  4132a1:	xchg   edx,eax
  4132a2:	ficom  WORD PTR [ebx+edx*8+0x4c28aaa6]
  4132a9:	pop    es
  4132aa:	dec    ecx
  4132ab:	rcl    bl,0x11
  4132ae:	sbb    eax,0x4635ce59
  4132b3:	cdq    
  4132b4:	xchg   ecx,eax
  4132b5:	push   0xf13dcff4
  4132ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132bb:	lea    ebx,[ecx+0xacd67e1]
  4132c1:	or     BYTE PTR [esi-0x762a0197],bh
  4132c7:	adc    bl,ah
  4132c9:	jmp    0x413311
  4132cb:	xchg   ecx,eax
  4132cc:	addr16 (bad) 
  4132ce:	cli    
  4132cf:	mov    dh,0x51
  4132d1:	int3   
  4132d2:	lods   eax,DWORD PTR ds:[esi]
  4132d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132d4:	mov    BYTE PTR [edi+0x6a8df24],dl
  4132da:	jp     0x413324
  4132dc:	fld    QWORD PTR [esi]
  4132de:	or     eax,0x8a7a7968
  4132e3:	in     al,dx
  4132e4:	dec    eax
  4132e5:	mov    bl,0x3
  4132e8:	push   ds
  4132e9:	jge    0x4132d4
  4132eb:	out    dx,al
  4132ec:	in     al,dx
  4132ed:	add    ch,BYTE PTR [eax-0x658e3d21]
  4132f3:	stos   BYTE PTR es:[edi],al
  4132f4:	das    
  4132f5:	mov    esi,0xf4f898fb
  4132fa:	(bad)  
  4132fb:	scas   al,BYTE PTR es:[edi]
  4132fc:	and    eax,0xf22776ab
  413301:	add    al,0x3e
  413303:	add    esi,DWORD PTR [eax]
  413305:	push   esp
  413306:	mul    BYTE PTR [ebx]
  413308:	bound  eax,QWORD PTR [esi+0x5f47696c]
  41330e:	mov    al,ds:0x2692e1e6
  413313:	nop
  413314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413315:	test   BYTE PTR [esi+0x7ee054b4],al
  41331b:	xchg   ecx,eax
  41331c:	mov    al,ds:0x1eb33d9
  413321:	es mov eax,0xdf8a0a7d
  413327:	push   ebx
  413328:	inc    eax
  413329:	mov    al,ds:0xdce5643b
  41332e:	leave  
  41332f:	popa   
  413330:	inc    ebp
  413331:	mov    cl,0x28
  413333:	(bad)  
  413334:	cli    
  413335:	inc    esi
  413336:	mov    edi,0x63208b3e
  41333b:	retf   0x36a3
  41333e:	adc    esi,DWORD PTR [esp+ebp*4-0x73]
  413342:	neg    BYTE PTR ss:[edi+eiz*1]
  413346:	sub    eax,0xe7d504a5
  41334b:	push   0xc0b25830
  413350:	mov    edi,0x877922ed
  413355:	daa    
  413356:	dec    esp
  413357:	cwde   
  413358:	popa   
  413359:	dec    ebx
  41335a:	add    eax,0x5a8cb9dc
  41335f:	add    al,BYTE PTR [edx]
  413361:	inc    edx
  413362:	aad    0x6f
  413364:	inc    edx
  413365:	lock sbb DWORD PTR [ebp+0x5a340760],edx
  41336c:	adc    BYTE PTR [ebx+0x58],dh
  41336f:	call   0x387759a0
  413374:	sbb    bh,0xd7
  413377:	and    eax,0xee9b3998
  41337c:	and    eax,0x52645a1b
  413381:	mov    bh,0x80
  413383:	inc    eax
  413384:	sbb    edi,ecx
  413386:	jnp    0x4133ff
  413388:	dec    eax
  413389:	mov    BYTE PTR [ebp+0x23],dl
  41338c:	int    0x29
  41338e:	out    0x5a,al
  413390:	jmp    0xe73d:0x487fc99c
  413397:	int    0xc5
  413399:	shl    DWORD PTR [edi+0x1aac52f4],1
  41339f:	daa    
  4133a0:	or     ch,ah
  4133a2:	lods   al,BYTE PTR ds:[si]
  4133a4:	cmp    DWORD PTR [eax],edx
  4133a6:	jg     0x41338d
  4133a8:	loope  0x4133cc
  4133aa:	and    edi,DWORD PTR [edx+0x7a5aceb0]
  4133b0:	mov    ebp,0xbc5d13ab
  4133b5:	js     0x413407
  4133b7:	xchg   esi,eax
  4133b8:	loope  0x413375
  4133ba:	push   eax
  4133bb:	adc    DWORD PTR [ebp-0x5c],edx
  4133be:	jbe    0x413371
  4133c0:	cwde   
  4133c1:	push   ds
  4133c2:	sub    eax,0x93a7e256
  4133c7:	jecxz  0x41343f
  4133c9:	mov    edx,cs
  4133cb:	test   BYTE PTR [edx],ah
  4133cd:	xchg   edx,eax
  4133ce:	in     eax,0x10
  4133d0:	pop    ecx
  4133d1:	mov    eax,ds:0xbac9aa53
  4133d6:	test   DWORD PTR [ebp+0x67],edi
  4133d9:	cmp    al,0xe4
  4133db:	mov    al,ds:0xd4609379
  4133e0:	mov    esp,0xa92b8af6
  4133e5:	outs   dx,BYTE PTR ds:[esi]
  4133e6:	imul   edx,DWORD PTR [ecx],0x88beea1d
  4133ec:	test   DWORD PTR [ecx+0x65],ebx
  4133ef:	mov    cl,0x6f
  4133f1:	sub    eax,DWORD PTR [edi+0x6c]
  4133f4:	aad    0xd8
  4133f6:	push   ebp
  4133f7:	jb     0x4133a4
  4133f9:	xlat   BYTE PTR ds:[ebx]
  4133fa:	dec    esp
  4133fb:	and    bl,ch
  4133fd:	mov    gs,WORD PTR [edx+ebp*1-0x55]
  413401:	stos   DWORD PTR es:[edi],eax
  413402:	leave  
  413403:	fistp  QWORD PTR [edi+0x3305ba03]
  413409:	and    ebp,DWORD PTR [eax+0x58bee6eb]
  41340f:	rcr    BYTE PTR [eax+edi*4-0x178c1f7d],cl
  413416:	retf   
  413417:	btr    DWORD PTR [ebx+0x25],ebp
  41341b:	inc    esi
  41341d:	enter  0x1343,0x71
  413421:	jne    0x413459
  413423:	(bad)  
  413425:	pop    ss
  413426:	xchg   edi,eax
  413427:	arpl   WORD PTR [eax],cx
  413429:	aaa    
  41342a:	jns    0x413498
  41342c:	rol    DWORD PTR [edx+0x6bbeb9d2],1
  413432:	mov    edx,0xe946c41
  413437:	ja     0x413468
  413439:	jmp    0x251f:0xde4cb1c5
  413440:	(bad)  
  413441:	fwait
  413442:	mul    DWORD PTR [edx]
  413444:	clc    
  413445:	adc    bh,dl
  413447:	push   0x44
  413449:	adc    al,0xb2
  41344b:	aas    
  41344c:	ror    DWORD PTR [esi+0x29],0x3c
  413450:	add    edi,DWORD PTR [ebx]
  413452:	mov    bl,0xd9
  413454:	(bad)  
  413455:	jge    0x413495
  413457:	loope  0x413466
  413459:	and    BYTE PTR [edi-0x6a],bl
  41345c:	test   al,0xef
  41345e:	inc    edx
  41345f:	ret    0x1ea4
  413462:	jp     0x413408
  413464:	in     al,0x71
  413466:	jo     0x413415
  413468:	sub    DWORD PTR [edi-0x76],esi
  41346b:	adc    dh,BYTE PTR [edi+0x3]
  41346e:	inc    edx
  41346f:	cmp    al,0xea
  413471:	ret    
  413472:	inc    edi
  413473:	sbb    esi,ebp
  413475:	and    eax,0x7f4befce
  41347a:	push   edx
  41347b:	cmp    al,0xc2
  41347d:	out    0xad,al
  41347f:	arpl   bx,cx
  413481:	call   0x87f4:0x2149985a
  413488:	push   esi
  413489:	xchg   ebx,eax
  41348a:	fisttp WORD PTR [edi+ecx*2-0x36]
  41348e:	mov    bh,0xc0
  413490:	push   ss
  413491:	inc    ebp
  413492:	iret   
  413493:	ja     0x413466
  413495:	(bad)  
  413496:	jmp    0x92787ade
  41349b:	pop    DWORD PTR [ecx+0x4036f8a4]
  4134a1:	inc    eax
  4134a2:	jl     0x4134fa
  4134a4:	les    ebp,FWORD PTR [edi-0x79]
  4134a7:	sub    DWORD PTR [ebx+0x0],esi
  4134aa:	lods   al,BYTE PTR ds:[esi]
  4134ab:	enter  0x41eb,0xa6
  4134af:	test   esi,esi
  4134b1:	daa    
  4134b2:	xor    edx,DWORD PTR [edi-0x66b63727]
  4134b8:	lods   al,BYTE PTR ds:[esi]
  4134b9:	aam    0xed
  4134bb:	mov    dl,BYTE PTR [ebx]
  4134bd:	xchg   edx,eax
  4134be:	xchg   edi,eax
  4134bf:	test   al,0xbe
  4134c1:	inc    eax
  4134c2:	cmp    eax,0xa6f43620
  4134c7:	jo     0x41353b
  4134c9:	outs   dx,DWORD PTR ds:[esi]
  4134ca:	inc    esp
  4134cb:	cwde   
  4134cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134cd:	cmp    DWORD PTR [eax-0x4251676],eax
  4134d3:	mov    cs,edx
  4134d5:	dec    edx
  4134d6:	inc    DWORD PTR ds:[eax+0x67]
  4134da:	or     edi,DWORD PTR [eax-0x6e]
  4134dd:	gs push es
  4134df:	jmp    0x6a91:0xb62ff36c
  4134e6:	test   eax,0xebaf11c
  4134eb:	mov    dl,0x8c
  4134ed:	jmp    0x413483
  4134ef:	ss inc esp
  4134f1:	mov    BYTE PTR [edx-0x7e78f46e],0x41
  4134f8:	mov    ebp,0x86a14534
  4134fd:	adc    DWORD PTR [ebx-0x6b2b7bbc],0xe34a17aa
  413507:	pop    ebx
  413508:	addr16 pop edi
  41350a:	pop    esp
  41350b:	arpl   WORD PTR ss:[ecx-0xf97bf93],sp
  413512:	xchg   bl,bl
  413514:	inc    esi
  413515:	lea    edx,[ebp+0x34]
  413518:	test   DWORD PTR [eax+0x37],0x37d545dc
  41351f:	pop    esp
  413520:	aam    0x18
  413522:	aad    0x80
  413524:	imul   BYTE PTR ss:[bx]
  413528:	scas   al,BYTE PTR es:[edi]
  413529:	mov    cs,WORD PTR [eax+ebx*8+0x5254fd63]
  413530:	lods   al,BYTE PTR ds:[esi]
  413531:	sbb    edx,DWORD PTR [esi-0x76]
  413534:	dec    ebp
  413535:	sahf   
  413536:	out    0x17,eax
  413538:	test   DWORD PTR [eax+0x40e85c75],eax
  41353e:	ds aaa 
  413540:	cdq    
  413541:	sbb    BYTE PTR [ecx-0x66],ch
  413544:	in     al,dx
  413545:	cmp    esp,edx
  413547:	cwde   
  413548:	cwde   
  413549:	xchg   ebp,eax
  41354a:	push   edi
  41354b:	mov    edx,0x943e224b
  413550:	jne    0x41357e
  413552:	(bad)  
  413553:	push   esi
  413554:	pusha  
  413555:	jp     0x413506
  413557:	mov    cl,0xd9
  413559:	fmul   DWORD PTR [ecx]
  41355b:	adc    esp,DWORD PTR [eax+ecx*1]
  41355e:	scas   eax,DWORD PTR es:[edi]
  41355f:	int3   
  413560:	pop    es
  413561:	ins    BYTE PTR es:[edi],dx
  413562:	xchg   esp,eax
  413563:	mov    bh,0xc7
  413565:	(bad)  
  413566:	xchg   ebp,eax
  413567:	lods   ax,WORD PTR ds:[esi]
  413569:	sub    edi,0x106e3caa
  41356f:	jns    0x4135bb
  413571:	jno    0x41358f
  413573:	and    BYTE PTR [eax],bh
  413575:	or     BYTE PTR [ebx+esi*8-0x48],ah
  413579:	outs   dx,BYTE PTR ds:[esi]
  41357a:	repz pop edi
  41357c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41357d:	cmp    edi,DWORD PTR [ebx-0x5d]
  413580:	repz pushf 
  413582:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413583:	sbb    al,0xb8
  413585:	dec    esp
  413586:	das    
  413587:	or     eax,0xbca95d57
  41358c:	iret   
  41358d:	mov    WORD PTR [esi-0x8563236],fs
  413593:	fiadd  DWORD PTR [ebp-0x41]
  413596:	jecxz  0x4135fd
  413598:	inc    esi
  413599:	cwde   
  41359a:	aam    0xae
  41359c:	xor    BYTE PTR [esi],cl
  41359e:	loop   0x41354d
  4135a0:	iret   
  4135a1:	mov    dh,0xfe
  4135a3:	push   esi
  4135a4:	pop    es
  4135a5:	mov    edi,DWORD PTR [esi+0x14]
  4135a8:	and    BYTE PTR ds:0x1d42cc78,ch
  4135ae:	into   
  4135af:	(bad)
  4135b3:	mov    eax,ds:0x895d31d2
  4135b8:	cmp    al,0x75
  4135ba:	xor    edi,DWORD PTR [eax+esi*4]
  4135bd:	clc    
  4135be:	popf   
  4135bf:	push   ebx
  4135c0:	sahf   
  4135c1:	and    eax,0x18abdd7
  4135c6:	sub    ebx,ebx
  4135c8:	cmp    esp,DWORD PTR [eax]
  4135ca:	jecxz  0x413647
  4135cc:	push   ebx
  4135cd:	fmul   st(1),st
  4135cf:	js     0x41356c
  4135d1:	jle    0x4135c7
  4135d3:	add    eax,0xa19ea894
  4135d8:	adc    al,0x91
  4135da:	(bad)  
  4135db:	and    DWORD PTR [ecx+0x38],eax
  4135de:	inc    esp
  4135df:	clc    
  4135e0:	aam    0xb1
  4135e2:	mov    dh,0xb1
  4135e4:	arpl   WORD PTR [edi],bx
  4135e6:	add    dh,cl
  4135e8:	loopne 0x4135e3
  4135ea:	inc    edi
  4135eb:	and    bl,BYTE PTR [ebx-0x523a2bda]
  4135f1:	imul   eax,DWORD PTR [ecx-0x2e],0x82aa2c85
  4135f8:	mov    al,ds:0x695414db
  4135fd:	imul   BYTE PTR [ebx-0x19]
  413600:	xlat   BYTE PTR ds:[ebx]
  413601:	jl     0x413661
  413603:	fst    st(1)
  413605:	mov    BYTE PTR [ebp+0x12a05a63],al
  41360b:	mov    bh,0x1d
  41360d:	push   ss
  41360e:	mov    dh,0x7c
  413610:	fiadd  WORD PTR [ebp+0x51b919ac]
  413616:	jns    0x413622
  413618:	sbb    eax,0x41a9718d
  41361d:	push   es
  41361e:	sub    al,0x68
  413620:	xor    al,0x1c
  413622:	in     al,0xd5
  413624:	or     eax,0xc70b413d
  413629:	ins    BYTE PTR es:[edi],dx
  41362a:	xchg   edx,eax
  41362b:	inc    eax
  41362c:	call   0xa5b2:0x3d1c389e
  413633:	arpl   WORD PTR [esi],ax
  413635:	daa    
  413636:	ja     0x41360c
  413638:	pushf  
  413639:	jbe    0x4136b6
  41363b:	rcr    DWORD PTR [edx+0x316a047a],cl
  413641:	pop    ecx
  413642:	rcl    bl,cl
  413644:	cmp    ch,bh
  413646:	imul   ebp,esp,0xffffffc6
  413649:	push   edi
  41364a:	cmp    eax,0xda7bc9e8
  41364f:	push   esp
  413650:	loope  0x413614
  413652:	fiadd  WORD PTR [edi]
  413654:	aas    
  413655:	adc    BYTE PTR [edx+ecx*1-0x24],0x86
  41365a:	mov    WORD PTR [eax],cs
  41365c:	adc    edx,edx
  41365e:	pop    ecx
  41365f:	xchg   ecx,eax
  413660:	jge    0x413694
  413662:	ins    DWORD PTR es:[edi],dx
  413663:	sbb    eax,0xf29dd90
  413668:	ins    BYTE PTR es:[edi],dx
  413669:	(bad)  
  41366a:	sti    
  41366b:	pop    ss
  41366c:	mov    ebp,0x8246291b
  413671:	jle    0x413656
  413673:	adc    DWORD PTR [ecx+ebp*1+0x6],0x35
  413678:	dec    edi
  413679:	addr16 pop esp
  41367b:	mov    ch,0x2d
  41367d:	movups XMMWORD PTR [ecx+0x1de73638],xmm3
  413684:	adc    ecx,eax
  413686:	jmp    0x6584efe
  41368b:	mov    ebp,0x8ebfd1a5
  413690:	out    0x44,eax
  413692:	jno    0x413694
  413694:	inc    edi
  413695:	test   al,0xb7
  413697:	fadd   QWORD PTR [esi+eiz*8-0x52]
  41369b:	inc    esi
  41369c:	ins    BYTE PTR es:[edi],dx
  41369d:	sbb    ebp,DWORD PTR [eax+0x28]
  4136a0:	inc    edx
  4136a1:	push   ss
  4136a2:	push   esp
  4136a3:	jmp    0x41370e
  4136a5:	scas   eax,DWORD PTR es:[edi]
  4136a6:	pop    es
  4136a7:	ja     0x4136eb
  4136a9:	mov    ebp,0x9ccd18d
  4136ae:	cmc    
  4136af:	outs   dx,BYTE PTR ds:[esi]
  4136b0:	fmul   st(2),st
  4136b2:	inc    eax
  4136b3:	mov    al,0xf7
  4136b5:	nop
  4136b6:	cmp    DWORD PTR [bx+di-0x2547],edi
  4136bb:	push   esp
  4136bc:	xchg   BYTE PTR [edx+0x46],dh
  4136bf:	fnstcw WORD PTR [edi-0x3b5a320c]
  4136c5:	or     eax,0x89549d3c
  4136ca:	dec    esi
  4136cb:	sbb    DWORD PTR [edi-0x75],ebp
  4136ce:	sti    
  4136cf:	push   edi
  4136d0:	repz sar BYTE PTR [esi+0x3a30a870],cl
  4136d7:	dec    esi
  4136d8:	sbb    eax,0x6efd2c1e
  4136dd:	cmp    eax,0x17cb7160
  4136e2:	out    0xcc,al
  4136e4:	and    ecx,esi
  4136e6:	cmp    ebx,DWORD PTR [ecx+0x5a422bdd]
  4136ec:	inc    ebx
  4136ed:	and    ecx,ebx
  4136ef:	aad    0xb1
  4136f1:	aas    
  4136f2:	sbb    cl,BYTE PTR [ebp+0x2a]
  4136f5:	cdq    
  4136f6:	arpl   WORD PTR [edi],cx
  4136f8:	std    
  4136f9:	or     BYTE PTR [esi+0x3a],al
  4136fc:	hlt    
  4136fd:	int    0x3f
  4136ff:	bound  ecx,QWORD PTR [ebp-0x41f272e7]
  413705:	sub    esp,DWORD PTR [esi-0x3b]
  413708:	or     edi,DWORD PTR [edi+0x48811733]
  41370e:	retf   
  41370f:	add    cl,BYTE PTR [esi+edi*2]
  413712:	sub    bh,cl
  413714:	xor    esp,DWORD PTR [esi+eiz*1]
  413717:	cmp    ch,BYTE PTR [edi+0x2f8a813]
  41371d:	or     al,0xc5
  41371f:	xor    DWORD PTR [ecx],edi
  413721:	mov    DWORD PTR [esi+0x52],edx
  413724:	jns    0x413745
  413726:	or     DWORD PTR [eax-0x256336d3],0x6e
  41372d:	icebp  
  41372e:	inc    esi
  41372f:	rcl    BYTE PTR [ebx],cl
  413731:	jo     0x41370f
  413733:	add    DWORD PTR [esi+0x39],edi
  413736:	xor    al,0x43
  413738:	popa   
  413739:	push   ecx
  41373a:	cmp    esp,DWORD PTR [ebx-0x7c]
  41373d:	scas   eax,DWORD PTR es:[edi]
  41373e:	xchg   esp,eax
  41373f:	jg     0x413783
  413741:	sub    ebx,DWORD PTR [eax+0x1]
  413744:	mov    ah,0x62
  413746:	ss jb  0x4136cc
  413749:	dec    esp
  41374a:	mov    esp,0xa98686c8
  41374f:	adc    al,0xb
  413751:	pop    ss
  413752:	jmp    0x4136e1
  413754:	xchg   ebp,eax
  413755:	push   cs
  413756:	jl     0x413730
  413758:	repnz iret 
  41375a:	ins    BYTE PTR es:[edi],dx
  41375b:	scas   eax,DWORD PTR es:[edi]
  41375c:	pop    edi
  41375d:	loop   0x413701
  41375f:	mov    ?,WORD PTR [ebp+0x1b]
  413762:	push   ecx
  413763:	cs aaa 
  413765:	mov    bh,0x4b
  413767:	push   ecx
  413768:	shr    DWORD PTR [ecx-0x6],0x7c
  41376c:	stc    
  41376d:	push   es
  41376e:	xlat   BYTE PTR ds:[ebx]
  41376f:	fsub   QWORD PTR [esi-0x2ea1519b]
  413775:	int3   
  413776:	jl     0x413798
  413778:	jns    0x413740
  41377a:	fsub   DWORD PTR [edi-0x3ed5df1f]
  413780:	stos   BYTE PTR es:[edi],al
  413781:	dec    ebp
  413782:	push   ebx
  413783:	mov    eax,0xa52ebde5
  413788:	or     bh,bl
  41378a:	jg     0x413762
  41378c:	test   BYTE PTR [edx+0x7],cl
  41378f:	pop    edi
  413790:	sar    BYTE PTR [edx-0x59],1
  413793:	dec    ebx
  413794:	cmp    al,0x8b
  413796:	fmul   DWORD PTR [esi]
  413798:	in     al,dx
  413799:	or     eax,0xe0eaf29b
  41379e:	xchg   DWORD PTR [edi+eiz*2+0x3b],esp
  4137a2:	xchg   ecx,eax
  4137a3:	inc    eax
  4137a4:	jnp    0x4137eb
  4137a6:	pop    edx
  4137a7:	out    dx,al
  4137a8:	add    WORD PTR [edx+0x9],sp
  4137ac:	ror    DWORD PTR [esi],0x9c
  4137af:	jl     0x41378a
  4137b1:	xor    ah,BYTE PTR ds:[esi+0x1f43a6c3]
  4137b8:	push   es
  4137b9:	xchg   ebp,eax
  4137ba:	out    dx,al
  4137bb:	or     DWORD PTR gs:[ebx],0xe0855b9
  4137c2:	retf   
  4137c3:	rol    DWORD PTR [ecx-0x4e],1
  4137c6:	aam    0x86
  4137c8:	mov    ds:0x7bcbd003,al
  4137cd:	jno    0x4137c0
  4137cf:	iret   
  4137d0:	xchg   esp,eax
  4137d1:	in     eax,0x41
  4137d3:	or     BYTE PTR [ebx+edx*8],al
  4137d6:	cmc    
  4137d7:	adc    BYTE PTR [edi+edx*8],bl
  4137da:	mov    DWORD PTR [ebp+0x151e3974],edx
  4137e0:	dec    edi
  4137e1:	gs cmc 
  4137e3:	test   al,0x56
  4137e5:	cmp    al,0xf0
  4137e7:	push   edx
  4137e8:	test   BYTE PTR [esi+0x37c21570],ah
  4137ee:	mov    WORD PTR [esi],cs
  4137f0:	ja     0x41381a
  4137f2:	pop    eax
  4137f3:	cmp    eax,0xdba1fe77
  4137f8:	scas   al,BYTE PTR es:[edi]
  4137f9:	mov    ds:0x4db0ea06,al
  4137fe:	jge    0x413831
  413800:	pop    es
  413801:	stos   DWORD PTR es:[edi],eax
  413802:	leave  
  413803:	sbb    eax,0x8af61d5f
  413808:	popa   
  413809:	rol    DWORD PTR [ebx],1
  41380b:	sub    BYTE PTR [edi],0xfe
  41380e:	lds    ecx,FWORD PTR [ebp+0x7adac47d]
  413814:	or     DWORD PTR [esi-0x2a],esp
  413817:	or     BYTE PTR [eax-0x37],0xcf
  41381b:	cmp    esi,DWORD PTR [ebx-0x5c]
  41381e:	mov    eax,0xff72be11
  413823:	sub    DWORD PTR [edx],0x54
  413826:	in     eax,0x4
  413828:	sahf   
  413829:	fcomp  DWORD PTR [ecx+0x650c28dc]
  41382f:	add    esp,DWORD PTR [esi]
  413831:	xor    eax,0x2a680262
  413836:	cs mov ah,0x4
  413839:	addr16 inc edx
  41383b:	push   0x28c02519
  413840:	mov    edi,0x13ad26ae
  413845:	sub    DWORD PTR ds:0x922a161b,ecx
  41384b:	xchg   ebp,eax
  41384c:	push   ss
  41384d:	gs int3 
  41384f:	daa    
  413850:	and    DWORD PTR [edx+0x65041eec],0xffffff95
  413857:	mov    ebp,0x61465295
  41385c:	dec    eax
  41385d:	lea    esp,[esi+eax*2-0x6e8ef511]
  413864:	push   ds
  413865:	dec    esi
  413866:	fsubp  st(7),st
  413868:	or     eax,0x8448fa35
  41386d:	lods   al,BYTE PTR ds:[esi]
  41386e:	lahf   
  41386f:	cmp    DWORD PTR [edi+0x2a],edx
  413872:	mov    BYTE PTR [ebx],cl
  413874:	rcr    BYTE PTR [ecx-0x5750505c],cl
  41387a:	mov    es,WORD PTR [ebx+edx*1-0x23]
  41387e:	sbb    BYTE PTR [edx+0x74df28e8],cl
  413884:	jns    0x4138c1
  413886:	add    al,0x76
  413888:	ret    
  413889:	jnp    0x4138d5
  41388b:	hlt    
  41388c:	xchg   edx,eax
  41388d:	pop    ecx
  41388e:	cmp    ch,BYTE PTR [ecx-0x36]
  413891:	daa    
  413892:	pop    edi
  413893:	lds    ebx,FWORD PTR [edi-0xe1b2717]
  413899:	inc    esi
  41389a:	mov    ebp,0xb7f5693b
  41389f:	sahf   
  4138a0:	add    dl,BYTE PTR [edx-0x23162c64]
  4138a6:	sbb    BYTE PTR [ebp-0x61064ba],dl
  4138ac:	sub    dh,dl
  4138ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138af:	jle    0x413886
  4138b1:	lock test eax,0xfe541924
  4138b7:	push   eax
  4138b8:	adc    DWORD PTR [ecx-0x71],edx
  4138bb:	loope  0x413851
  4138bd:	dec    edx
  4138be:	xchg   ecx,eax
  4138bf:	xor    eax,0x865b90a2
  4138c4:	mov    esp,0x630c4831
  4138c9:	retf   
  4138ca:	mov    dl,0x61
  4138cc:	dec    esp
  4138cd:	in     al,0x11
  4138cf:	xor    DWORD PTR [esi],ebx
  4138d1:	shl    DWORD PTR [esi-0x67],0xf3
  4138d5:	sbb    eax,DWORD PTR [edx+0x46]
  4138d8:	jnp    0x413897
  4138da:	enter  0xe21,0xfc
  4138de:	bound  eax,QWORD PTR [ebp-0x6]
  4138e1:	cdq    
  4138e2:	add    BYTE PTR [ecx+eiz*8-0x486225ec],ah
  4138e9:	cwde   
  4138ea:	clc    
  4138eb:	sub    dl,BYTE PTR [esi+0x41fb3e82]
  4138f1:	jns    0x4138fe
  4138f3:	call   0xbf09:0x41473d9
  4138fa:	test   BYTE PTR [edx-0x8c64d9f],ch
  413900:	inc    ecx
  413901:	jmp    0xb944:0xb93e9f53
  413908:	sub    al,BYTE PTR [ecx-0x354076ff]
  41390e:	and    BYTE PTR [esi-0x575e9a24],0x56
  413915:	lods   eax,DWORD PTR ds:[esi]
  413916:	fadd   DWORD PTR [esi+ebp*2+0x148507fc]
  41391d:	jmp    0x41395f
  41391f:	add    BYTE PTR [eax-0x42],ah
  413922:	jb     0x413973
  413924:	shr    BYTE PTR [ebx],1
  413926:	(bad)  
  413927:	xor    edi,esi
  413929:	(bad)  
  41392a:	cld    
  41392b:	rcl    BYTE PTR [ebp+0x34],1
  41392e:	int3   
  41392f:	jbe    0x413960
  413931:	call   FWORD PTR [edx]
  413933:	aad    0x3
  413935:	jno    0x413999
  413937:	popf   
  413938:	cdq    
  413939:	lahf   
  41393a:	outs   dx,DWORD PTR ds:[esi]
  41393b:	(bad)  
  41393c:	jmp    0xcb67:0xfda8dec4
  413943:	sub    eax,0x6bce44fd
  413948:	ret    
  413949:	bound  ebp,QWORD PTR [eax-0x69c11898]
  41394f:	mov    cl,BYTE PTR [edi]
  413951:	mov    cl,0xd8
  413953:	or     BYTE PTR [ecx-0x33],cl
  413956:	ret    
  413957:	jns    0x4138ee
  413959:	(bad)  
  41395a:	cld    
  41395b:	outs   dx,BYTE PTR ds:[esi]
  41395c:	jo     0x413956
  41395e:	or     edi,DWORD PTR [ebx]
  413960:	pop    ebx
  413961:	mov    WORD PTR [ebp-0xf49b940],?
  413967:	dec    ebp
  413968:	xchg   ebx,eax
  413969:	sub    ebp,ebp
  41396b:	hlt    
  41396c:	push   ebp
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	scas   al,BYTE PTR es:[edi]
  41396f:	sti    
  413970:	pop    ebp
  413971:	or     dl,BYTE PTR [ecx]
  413973:	cdq    
  413974:	lods   al,BYTE PTR ds:[esi]
  413975:	add    ah,BYTE PTR [eax+0x31a6ff6c]
  41397b:	sar    BYTE PTR [edi-0x16835f07],1
  413981:	idiv   BYTE PTR [eax]
  413983:	stos   BYTE PTR es:[edi],al
  413984:	and    al,BYTE PTR [ebx]
  413986:	mov    ah,0xaf
  413988:	jmp    0xa995cfaa
  41398d:	ss test bh,dh
  413990:	pusha  
  413991:	fidiv  DWORD PTR [ebx]
  413993:	call   0x2aff3953
  413998:	cmc    
  413999:	cli    
  41399a:	push   ss
  41399b:	or     al,0x46
  41399d:	aaa    
  41399e:	jle    0x413927
  4139a0:	add    al,0xa6
  4139a2:	mov    cl,0x19
  4139a4:	(bad)  
  4139a5:	jo     0x413a1d
  4139a7:	in     eax,0xb7
  4139a9:	ror    edx,0xc5
  4139ac:	mov    esp,edi
  4139ae:	pushf  
  4139af:	cmp    DWORD PTR [ecx+0x144cb0dc],ebx
  4139b5:	test   al,0x14
  4139b7:	dec    edx
  4139b8:	das    
  4139b9:	push   edi
  4139ba:	xchg   esi,eax
  4139bb:	jbe    0x4139c1
  4139bd:	cmp    eax,0x786df8f3
  4139c2:	ficomp DWORD PTR es:[esi-0x19]
  4139c6:	test   DWORD PTR [esi+0x1fc6e3c4],eax
  4139cc:	jmp    0x4139bd
  4139ce:	jg     0x41398d
  4139d0:	and    DWORD PTR [ebp+0x18],eax
  4139d3:	pop    ebx
  4139d4:	mov    al,0x8c
  4139d6:	jmp    0x58a6:0x6c4e6a00
  4139dd:	fwait
  4139de:	or     al,0x64
  4139e0:	xchg   esi,eax
  4139e1:	mov    bh,0xf8
  4139e3:	js     0x413a5b
  4139e5:	mov    bh,BYTE PTR [edx+0x7d511852]
  4139eb:	and    BYTE PTR [ebp+0x56a5517c],0x53
  4139f2:	push   ss
  4139f3:	je     0x4139d9
  4139f5:	rcl    BYTE PTR [esi-0x58],cl
  4139f8:	fcmovnu st,st(0)
  4139fa:	fucomi st,st(0)
  4139fc:	in     al,dx
  4139fd:	stc    
  4139fe:	push   es
  4139ff:	xchg   edi,eax
  413a00:	or     BYTE PTR [edi-0x3caf56a0],ch
  413a06:	inc    DWORD PTR [edx-0x46]
  413a09:	push   DWORD PTR [esi]
  413a0b:	(bad)  
  413a0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a0d:	push   es
  413a0e:	and    BYTE PTR [eax],0xef
  413a11:	clc    
  413a12:	xor    DWORD PTR [esi+0x4d],ebx
  413a15:	lea    esp,[eax+0x67]
  413a18:	mov    eax,ds:0xddecccfc
  413a1d:	ins    BYTE PTR es:[edi],dx
  413a1e:	jmp    0x413a49
  413a20:	add    DWORD PTR [ecx],ebp
  413a22:	mov    eax,ds:0x9a8c1f0e
  413a27:	pop    DWORD PTR [ebx+0x2d]
  413a2a:	pop    ds
  413a2b:	(bad)  
  413a2c:	pop    ebp
  413a2d:	test   DWORD PTR ds:0x458ed3cf,edi
  413a33:	sub    DWORD PTR [esi-0x3e],edi
  413a36:	repnz cmp ebp,DWORD PTR [ecx-0x3923b956]
  413a3d:	xchg   edi,eax
  413a3e:	(bad)  
  413a3f:	push   edi
  413a40:	pop    ss
  413a41:	loopne 0x413a39
  413a43:	repnz sbb al,0x9a
  413a46:	inc    ebx
  413a47:	stos   DWORD PTR es:[edi],eax
  413a48:	adc    DWORD PTR [esi-0x16f0f69d],edi
  413a4e:	push   ecx
  413a4f:	int3   
  413a50:	sti    
  413a51:	fs loope 0x413a44
  413a54:	aam    0x27
  413a56:	adc    dl,al
  413a58:	icebp  
  413a59:	call   0x18e76bfd
  413a5e:	adc    al,bh
  413a60:	int    0x66
  413a62:	mov    ch,0x7f
  413a64:	sbb    al,0xeb
  413a66:	loope  0x413ae4
  413a68:	adc    eax,0xd2d1ef55
  413a6d:	ret    
  413a6e:	mov    edx,0x970222
  413a73:	mov    bl,BYTE PTR fs:[ebx-0x4e]
  413a77:	retf   0xc622
  413a7a:	cmp    BYTE PTR [esp+ebp*2],bl
  413a7d:	mov    edi,0x66a4ea91
  413a82:	test   DWORD PTR [ecx+edx*8],0xfcbc8b6a
  413a89:	push   ds
  413a8a:	ins    BYTE PTR es:[edi],dx
  413a8b:	(bad)  
  413a8d:	in     al,dx
  413a8e:	xchg   edi,eax
  413a8f:	fiadd  DWORD PTR [edx-0x3c]
  413a92:	dec    edx
  413a93:	or     DWORD PTR [esi+0x3d0c7be3],ebp
  413a99:	jne    0x413a5f
  413a9b:	popf   
  413a9c:	jnp    0x413abf
  413a9e:	and    BYTE PTR [eax],ah
  413aa0:	cmp    DWORD PTR [esi+0x26e7f935],0x2f
  413aa7:	test   al,0xc1
  413aa9:	nop
  413aaa:	out    dx,al
  413aab:	xchg   ecx,eax
  413aac:	or     DWORD PTR [esi-0x16ab8096],ebx
  413ab2:	popa   
  413ab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ab4:	(bad)  
  413ab5:	mov    bl,0xf7
  413ab7:	pop    ebp
  413ab8:	imul   ebp,DWORD PTR [edi],0x303a60ce
  413abe:	dec    esi
  413abf:	pop    edx
  413ac0:	cmp    bh,BYTE PTR [ebp-0x434bfd6c]
  413ac6:	push   ecx
  413ac7:	shl    DWORD PTR [ebx-0x2fd09b04],1
  413acd:	cs scas al,BYTE PTR es:[edi]
  413acf:	mov    ch,0x1e
  413ad1:	aam    0xee
  413ad3:	(bad)
  413ad6:	or     eax,0x309aa1f4
  413adb:	inc    edx
  413adc:	dec    ebx
  413add:	lock mov ch,0xdb
  413ae0:	retf   
  413ae1:	fsubp  st(4),st
  413ae3:	mov    edi,0xd5c6c490
  413ae8:	ficom  DWORD PTR [esi]
  413aea:	cdq    
  413aeb:	cmp    al,0xe5
  413aed:	push   ds
  413aee:	das    
  413aef:	and    al,0xae
  413af1:	mov    ebx,0xb876c120
  413af6:	ret    0x3918
  413af9:	loopne 0x413b3c
  413afb:	adc    eax,esi
  413afd:	inc    esp
  413afe:	jg     0x413b7f
  413b00:	cli    
  413b01:	iret   
  413b02:	scas   al,BYTE PTR es:[edi]
  413b03:	int3   
  413b04:	mov    bl,0x45
  413b06:	jae    0x413ab6
  413b08:	daa    
  413b09:	cs jecxz 0x413b02
  413b0c:	out    dx,eax
  413b0d:	push   0xfffffff8
  413b0f:	add    eax,edx
  413b11:	dec    eax
  413b12:	dec    eax
  413b13:	and    DWORD PTR [ecx-0x227f44b6],ebx
  413b19:	out    0x28,eax
  413b1b:	or     dl,ah
  413b1d:	mov    al,0x23
  413b1f:	pop    ebp
  413b20:	cmp    DWORD PTR [ecx],0x23
  413b23:	push   ecx
  413b24:	mov    ebx,0xf89fea80
  413b29:	shl    DWORD PTR [ebx+0x1eb5cdf7],1
  413b2f:	dec    edx
  413b30:	mov    ebp,0x2d9ac1
  413b35:	sub    cl,BYTE PTR [edx-0x16]
  413b38:	fcmovne st,st(3)
  413b3a:	jl     0x413ac5
  413b3c:	retf   0x47c9
  413b3f:	sbb    al,0x2a
  413b41:	repnz adc bh,BYTE PTR [esi-0x528035ce]
  413b48:	mov    bh,al
  413b4a:	pop    edx
  413b4b:	arpl   cx,dx
  413b4d:	test   al,0x10
  413b4f:	retf   0x7de4
  413b52:	rcr    BYTE PTR [edx+0x4f],1
  413b55:	ret    0x9390
  413b58:	scas   al,BYTE PTR es:[edi]
  413b59:	test   al,0x31
  413b5b:	mov    ebp,0xecc672eb
  413b60:	mov    ds,WORD PTR [edi+0x7b]
  413b63:	scas   al,BYTE PTR es:[edi]
  413b64:	sbb    BYTE PTR [ebp+0x3c8210e4],ch
  413b6a:	xchg   edx,eax
  413b6b:	mov    ch,BYTE PTR [ecx+0x48]
  413b6e:	shl    DWORD PTR [edx+0x6a36670b],0x64
  413b75:	mov    cl,0xa
  413b77:	lahf   
  413b78:	fisubr WORD PTR ds:0x1a7ae35c
  413b7e:	mov    ebp,0x7ae7007f
  413b83:	sahf   
  413b84:	sub    eax,0x3bfaf353
  413b89:	into   
  413b8a:	pop    es
  413b8b:	enter  0xf2d3,0x51
  413b8f:	add    al,0xe6
  413b91:	xchg   DWORD PTR ds:0x9ba4afb9,ebx
  413b97:	fsub   QWORD PTR [eax+0x22]
  413b9a:	out    dx,eax
  413b9b:	ja     0x413b49
  413b9d:	int3   
  413b9e:	mov    ebp,0x97b8409b
  413ba3:	jne    0x413b48
  413ba5:	retf   
  413ba6:	mul    DWORD PTR [ebx]
  413ba8:	mov    ecx,0x751c8960
  413bad:	js     0x413b3b
  413baf:	inc    ebx
  413bb0:	adc    eax,esi
  413bb2:	lahf   
  413bb3:	cwde   
  413bb4:	je     0x413ba5
  413bb6:	jne    0x413c18
  413bb8:	loope  0x413c0a
  413bba:	mov    ds:0x5d4450c4,eax
  413bbf:	mov    dl,0x1c
  413bc1:	iret   
  413bc2:	pop    es
  413bc3:	in     al,0x49
  413bc5:	(bad)  
  413bc6:	dec    DWORD PTR [ecx-0x1c0708ea]
  413bcc:	call   0x310d:0x7171500
  413bd3:	shl    DWORD PTR [edi],1
  413bd5:	test   al,0x90
  413bd7:	mov    al,0x2c
  413bd9:	cld    
  413bda:	aad    0x9b
  413bdc:	mov    ds:0x5f166193,al
  413be1:	xchg   ebp,eax
  413be2:	cmp    ebp,0xf75bf2c3
  413be8:	shl    DWORD PTR [edi-0x3d],0xf0
  413bec:	nop
  413bed:	sahf   
  413bee:	cld    
  413bef:	and    eax,0xc98248fe
  413bf4:	call   0x12343432
  413bf9:	xlat   BYTE PTR ds:[ebx]
  413bfa:	pop    ss
  413bfb:	je     0x413c68
  413bfd:	mov    edx,DWORD PTR [edi+0x746b2893]
  413c03:	adc    al,0xdc
  413c05:	loop   0x413be4
  413c07:	bound  esi,QWORD PTR [ecx+0x2d8b42ea]
  413c0d:	sbb    edi,ebp
  413c0f:	jb     0x413ba4
  413c11:	test   dh,al
  413c13:	stc    
  413c14:	clc    
  413c15:	rcr    edi,1
  413c17:	jge    0x413ba8
  413c19:	mov    bl,0xa
  413c1b:	pop    ecx
  413c1c:	sub    BYTE PTR [ebp+0x5b],al
  413c1f:	icebp  
  413c20:	or     al,0xbf
  413c22:	mov    ?,WORD PTR [esi+0x73]
  413c25:	in     al,dx
  413c26:	add    eax,0x9c88d2f1
  413c2b:	push   esi
  413c2c:	xor    edx,ecx
  413c2e:	inc    esi
  413c2f:	dec    eax
  413c30:	xor    DWORD PTR [edx],0x78
  413c33:	int    0x98
  413c35:	and    DWORD PTR [ebp+0x74],0xc5349e6c
  413c3c:	adc    edi,DWORD PTR [esp+eax*2-0x38]
  413c40:	cmp    eax,DWORD PTR [esi+ecx*1+0x34b22cf]
  413c47:	jl     0x413c1f
  413c49:	cmp    eax,0xea805d86
  413c4e:	and    ecx,DWORD PTR [edi-0x289277dd]
  413c54:	shl    BYTE PTR [esi-0x27],0xcb
  413c58:	add    BYTE PTR [ebp-0x36],bl
  413c5b:	xor    esi,esi
  413c5d:	inc    edi
  413c5e:	ins    BYTE PTR es:[edi],dx
  413c5f:	mov    esi,0xce01e3c5
  413c64:	call   DWORD PTR cs:[edi]
  413c67:	xchg   bl,al
  413c69:	iret   
  413c6a:	xchg   ebp,eax
  413c6b:	leave  
  413c6c:	fsub   st(1),st
  413c6e:	add    al,0x28
  413c70:	and    DWORD PTR [esi+0x7c0cf0fd],edx
  413c76:	pop    ebx
  413c77:	jp     0x413c4f
  413c79:	ds int3 
  413c7b:	mov    bh,0x38
  413c7d:	(bad)  
  413c7e:	sar    DWORD PTR [eax-0x6],cl
  413c81:	sbb    dh,ch
  413c83:	nop
  413c84:	mov    DWORD PTR [ebx],eax
  413c86:	jnp    0x413d04
  413c88:	xor    eax,0xb929f689
  413c8d:	mov    ebp,0xfa65935c
  413c92:	aaa    
  413c93:	rol    DWORD PTR [edx+0x26],1
  413c96:	sub    al,0xd3
  413c98:	pop    ebp
  413c99:	imul   ebp,DWORD PTR [ecx-0x3b03b069],0xd6d8a0d7
  413ca3:	je     0x413cbf
  413ca5:	sbb    al,0xb4
  413ca7:	int3   
  413ca8:	call   0x34fb:0xa1def375
  413caf:	iret   
  413cb0:	xor    esp,DWORD PTR [edi+0x5026a905]
  413cb6:	enter  0x7391,0xc8
  413cba:	(bad)  
  413cbb:	out    dx,eax
  413cbc:	out    dx,al
  413cbd:	jbe    0x413cb7
  413cbf:	and    DWORD PTR [edx],0x23
  413cc2:	sub    BYTE PTR [edi],ch
  413cc4:	retf   
  413cc5:	test   al,0xb1
  413cc7:	(bad)  
  413cc8:	xor    al,0x5d
  413cca:	cmp    ch,BYTE PTR [eax-0x6d]
  413ccd:	test   BYTE PTR [edx-0x36],bh
  413cd0:	rcr    BYTE PTR [esi],1
  413cd2:	scas   eax,DWORD PTR es:[edi]
  413cd3:	and    ebx,DWORD PTR ds:0x29bbd2eb
  413cd9:	mov    esi,gs
  413cdb:	pop    esi
  413cdc:	xlat   BYTE PTR ds:[ebx]
  413cdd:	lods   eax,DWORD PTR ds:[esi]
  413cde:	mov    eax,ds:0x1accfa20
  413ce3:	neg    DWORD PTR [edi]
  413ce5:	xor    al,0x78
  413ce7:	dec    ebp
  413ce8:	dec    edi
  413ce9:	sub    cl,dl
  413ceb:	pusha  
  413cec:	cdq    
  413ced:	push   0x1b7652df
  413cf2:	in     eax,0x3e
  413cf4:	inc    edi
  413cf5:	inc    eax
  413cf6:	sbb    eax,0x81fea729
  413cfb:	mov    ah,0xa1
  413cfd:	in     eax,dx
  413cfe:	sbb    BYTE PTR [ecx+0x747f4d3b],ch
  413d04:	(bad)  
  413d05:	fiadd  WORD PTR [ebx]
  413d07:	into   
  413d08:	jne    0x413d24
  413d0a:	mov    al,0x71
  413d0c:	outs   dx,BYTE PTR ds:[esi]
  413d0d:	xchg   esp,eax
  413d0e:	call   0xec9d:0xf20cf67a
  413d15:	mov    ah,0x20
  413d17:	fdiv   DWORD PTR [esi+0x27]
  413d1a:	cli    
  413d1b:	pop    esp
  413d1c:	mov    esp,0x3d6c5492
  413d21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d22:	cli    
  413d23:	jmp    0x16da839c
  413d28:	mov    cl,0x4
  413d2a:	mov    dl,0x5
  413d2c:	sbb    DWORD PTR [edx+0x71],ecx
  413d2f:	jne    0x413ce2
  413d31:	in     al,0x54
  413d33:	test   DWORD PTR [edi+0x32c037e7],eax
  413d39:	fst    st(7)
  413d3b:	mov    edx,0xf47bc551
  413d40:	mov    cl,0x67
  413d42:	inc    eax
  413d43:	add    al,0xd0
  413d45:	enter  0x70fa,0x41
  413d49:	adc    eax,0x7c170148
  413d4e:	aam    0x85
  413d50:	out    0xd8,al
  413d52:	sar    esi,0x63
  413d55:	xor    eax,0xd2d30812
  413d5a:	push   ecx
  413d5b:	mov    bh,0x2c
  413d5d:	int3   
  413d5e:	sbb    ebp,ecx
  413d60:	push   ss
  413d61:	mov    esp,0xfe33c19a
  413d66:	sbb    BYTE PTR [ecx*8+0x5554abed],dl
  413d6d:	dec    esp
  413d6e:	lods   eax,DWORD PTR ds:[esi]
  413d6f:	in     al,0xb5
  413d71:	mov    ch,BYTE PTR ds:0x8b641651
  413d77:	jns    0x413d86
  413d79:	iret   
  413d7a:	mov    ebp,0xc1ace274
  413d7f:	xor    al,0x91
  413d81:	sbb    eax,0x464034ea
  413d86:	ret    
  413d87:	nop
  413d88:	(bad)  
  413d89:	ja     0x413d2f
  413d8b:	xlat   BYTE PTR ds:[ebx]
  413d8c:	dec    esi
  413d8d:	(bad)  
  413d8e:	push   edi
  413d8f:	daa    
  413d90:	and    BYTE PTR [ebx],dl
  413d92:	cdq    
  413d93:	push   DWORD PTR [ebx+eiz*8-0x30]
  413d97:	jmp    0x950d:0x290b32b
  413d9e:	fiadd  DWORD PTR [eax-0x91af85e]
  413da4:	imul   edi,DWORD PTR [ebx+0x57ddd46f],0x8c64c2d4
  413dae:	add    ch,BYTE PTR [eax+0x258b768e]
  413db4:	jecxz  0x413da9
  413db6:	adc    ebp,ecx
  413db8:	les    ebp,FWORD PTR [edi+0xc]
  413dbb:	dec    esi
  413dbc:	mov    ecx,0xa00302e4
  413dc1:	pop    esp
  413dc2:	jbe    0x413db0
  413dc4:	mov    esp,0x435c0a5
  413dc9:	adc    eax,0xd26c9c0a
  413dce:	push   ebx
  413dcf:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dd1:	sub    esi,DWORD PTR [eax]
  413dd3:	es xchg ebp,eax
  413dd5:	jl     0x413d74
  413dd7:	xchg   ebx,eax
  413dd8:	(bad)  
  413dd9:	pop    esi
  413dda:	add    cl,BYTE PTR [esi+0x1f717b62]
  413de0:	sub    BYTE PTR [edi+0x2fe693c3],al
  413de6:	dec    eax
  413de7:	arpl   WORD PTR [edi+0xd],si
  413dea:	sbb    ebp,edi
  413dec:	jbe    0x413e6a
  413dee:	sar    BYTE PTR [ebp+0x3b3090e7],0x4c
  413df5:	jo     0x413dff
  413df7:	xchg   esp,eax
  413df8:	fwait
  413df9:	icebp  
  413dfa:	out    dx,al
  413dfb:	and    bl,dl
  413dfd:	stos   BYTE PTR es:[edi],al
  413dfe:	adc    edx,DWORD PTR [edi-0x1be1cd46]
  413e04:	mov    dh,0xdf
  413e06:	add    al,0xfb
  413e08:	cmp    BYTE PTR [edi-0x764ba218],bl
  413e0e:	pop    ecx
  413e0f:	push   esi
  413e10:	nop
  413e11:	ss sub al,0x74
  413e14:	cld    
  413e15:	mov    ch,BYTE PTR [eax-0x3a]
  413e18:	pop    edx
  413e19:	xor    BYTE PTR [ebx],bl
  413e1b:	gs pop esi
  413e1d:	lock outs dx,BYTE PTR ds:[esi]
  413e1f:	pusha  
  413e20:	shr    DWORD PTR [ecx],1
  413e22:	pop    es
  413e23:	pop    ebx
  413e24:	loope  0x413e78
  413e26:	jns    0x413df6
  413e28:	jecxz  0x413e72
  413e2a:	popf   
  413e2b:	jge    0x413ea8
  413e2d:	sub    edi,DWORD PTR [edi+0x319431d2]
  413e33:	mov    al,0xd9
  413e35:	fs push ds
  413e37:	push   cs
  413e38:	sbb    DWORD PTR [ecx-0x28],0xffffffee
  413e3c:	inc    ecx
  413e3d:	je     0x413dee
  413e3f:	into   
  413e40:	test   DWORD PTR [edi-0x55],ecx
  413e43:	(bad)  [esi+0x7335d82d]
  413e49:	aas    
  413e4a:	mov    ds:0xc0d511a0,al
  413e4f:	dec    ecx
  413e50:	repnz sti 
  413e52:	xor    al,0x19
  413e54:	jge    0x413e1b
  413e56:	sub    ebx,esi
  413e58:	loope  0x413e5b
  413e5a:	jecxz  0x413ecb
  413e5c:	sahf   
  413e5d:	push   edi
  413e5e:	lods   eax,DWORD PTR ds:[esi]
  413e5f:	jecxz  0x413e9c
  413e61:	ins    DWORD PTR es:[edi],dx
  413e62:	sahf   
  413e63:	dec    ecx
  413e64:	inc    edx
  413e65:	inc    edi
  413e66:	fdivr  QWORD PTR [eax]
  413e68:	int3   
  413e69:	mov    esp,0xf3ff883e
  413e6e:	mov    ecx,0x8b3b66b3
  413e73:	inc    eax
  413e74:	leave  
  413e75:	test   eax,ebp
  413e77:	out    dx,eax
  413e78:	cmp    esi,DWORD PTR [edx+0xa4aabf]
  413e7e:	pop    ecx
  413e7f:	rol    BYTE PTR [edx+0x2b],cl
  413e82:	or     al,0x8
  413e84:	sub    al,0xcd
  413e86:	sahf   
  413e87:	pop    ecx
  413e88:	out    dx,al
  413e89:	mov    ah,cl
  413e8b:	mov    bl,0x2d
  413e8d:	push   ebp
  413e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e8f:	std    
  413e90:	dec    eax
  413e91:	xchg   edi,eax
  413e92:	adc    ecx,DWORD PTR [ecx+0x5d]
  413e95:	cs jns 0x413e65
  413e98:	or     ah,BYTE PTR [eax+ebx*1]
  413e9b:	cmp    BYTE PTR [ebp-0x1b20f554],dl
  413ea1:	adc    al,BYTE PTR [edi-0x5a]
  413ea4:	dec    ebx
  413ea5:	das    
  413ea6:	cmp    bl,bl
  413ea8:	outs   dx,DWORD PTR ds:[esi]
  413ea9:	dec    edi
  413eaa:	mov    DWORD PTR [edi],esi
  413eac:	int    0x7c
  413eae:	inc    esi
  413eaf:	dec    edi
  413eb0:	in     eax,dx
  413eb1:	add    bh,BYTE PTR [edi]
  413eb3:	inc    eax
  413eb4:	xor    BYTE PTR [ecx-0x65],0xa1
  413eb8:	sbb    esi,DWORD PTR [ebx-0x7d095e19]
  413ebe:	pop    esp
  413ebf:	fs das 
  413ec1:	mov    dl,0xb6
  413ec3:	xor    eax,0xe4842fae
  413ec8:	sub    bl,BYTE PTR [esp+edi*1+0x26]
  413ecc:	dec    ecx
  413ecd:	mov    ch,0x5
  413ecf:	mov    eax,0xb67b6f40
  413ed4:	int3   
  413ed5:	int    0xc9
  413ed7:	jg     0x413e8c
  413ed9:	mov    bl,0xc1
  413edb:	ss push eax
  413edd:	cmp    eax,0x7fdda600
  413ee2:	xchg   BYTE PTR [ebx],ch
  413ee4:	imul   ebx,DWORD PTR [esi-0x54],0xffffffb5
  413ee8:	sub    eax,0xf9905ab8
  413eed:	mov    WORD PTR [ecx+0x1c],fs
  413ef0:	lods   eax,DWORD PTR ds:[esi]
  413ef1:	cmp    al,ch
  413ef3:	mov    al,0x91
  413ef5:	or     DWORD PTR ds:0xf7d21153,0x76d75069
  413eff:	idiv   DWORD PTR [edi+0x405affac]
  413f05:	fimul  DWORD PTR [ecx]
  413f07:	das    
  413f08:	xchg   esi,eax
  413f09:	aam    0x4e
  413f0b:	ins    DWORD PTR es:[edi],dx
  413f0c:	gs push ds
  413f0e:	add    bl,dh
  413f10:	cmp    eax,0xe8f96f1d
  413f15:	mov    bh,0x6f
  413f17:	in     al,dx
  413f18:	jae    0x413f29
  413f1a:	xor    dh,0xf4
  413f1d:	fadd   QWORD PTR [ebp+0x45]
  413f20:	fistp  WORD PTR [ebp-0x65]
  413f23:	fild   WORD PTR [edx]
  413f25:	cmp    esi,DWORD PTR [eax-0x7d75a620]
  413f2b:	jg     0x413f0a
  413f2d:	aad    0xfc
  413f2f:	ror    ebx,0x76
  413f32:	xor    eax,0xa4053c3e
  413f37:	xlat   BYTE PTR ds:[ebx]
  413f38:	loop   0x413ed5
  413f3a:	jns    0x413f05
  413f3c:	xchg   edx,eax
  413f3d:	repz or edi,DWORD PTR [edx]
  413f40:	das    
  413f41:	psrad  mm1,mm7
  413f44:	fdivr  DWORD PTR [esi+0x1c60a3e1]
  413f4a:	xor    cl,BYTE PTR [edi+esi*2]
  413f4d:	retf   
  413f4e:	and    edx,ebx
  413f50:	retf   0x1753
  413f53:	pop    es
  413f54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f55:	mov    esi,0x50a42d85
  413f5a:	pop    eax
  413f5b:	(bad)  
  413f5d:	imul   ecx,DWORD PTR [eax+0x730acaa5],0x14facc19
  413f67:	(bad)  
  413f68:	in     al,0x82
  413f6a:	icebp  
  413f6b:	imul   BYTE PTR [esp+ebp*4+0x40d18598]
  413f72:	jmp    0x413f63
  413f74:	scas   eax,DWORD PTR es:[edi]
  413f75:	(bad)  
  413f76:	shr    DWORD PTR [ebx-0x5c88a4cb],cl
  413f7c:	adc    DWORD PTR [edi],edx
  413f7e:	mov    cl,0x68
  413f80:	inc    ecx
  413f81:	push   esi
  413f82:	addr16 mov esi,0xf10f71b4
  413f88:	sbb    bl,BYTE PTR [ebx-0x6a]
  413f8b:	icebp  
  413f8c:	retf   
  413f8d:	cmp    al,0xc2
  413f8f:	das    
  413f90:	pop    ebx
  413f91:	mov    ah,0xcf
  413f93:	mov    bh,0x37
  413f95:	inc    ebx
  413f96:	shl    BYTE PTR [ebp-0x1616951],1
  413f9c:	sbb    DWORD PTR [edx+0x449a7ed5],edi
  413fa2:	cmp    eax,0xb55e37c1
  413fa7:	mov    DWORD PTR [edi+0x53],ecx
  413faa:	(bad)  
  413fab:	fwait
  413fac:	jge    0x413f57
  413fae:	and    edi,esi
  413fb0:	sbb    bh,BYTE PTR [eax+0xb0da292]
  413fb6:	sbb    al,0xc5
  413fb8:	in     al,dx
  413fb9:	stos   DWORD PTR es:[edi],eax
  413fba:	jne    0x413f61
  413fbc:	popf   
  413fbd:	add    cl,BYTE PTR [edi+0x63776a78]
  413fc3:	popa   
  413fc4:	fsub   DWORD PTR [ebx+0x4057c300]
  413fca:	pop    es
  413fcb:	xchg   esp,eax
  413fcc:	xor    dh,bh
  413fce:	push   edx
  413fcf:	fwait
  413fd0:	push   cs
  413fd1:	cmp    edx,esi
  413fd3:	cmc    
  413fd4:	xchg   edi,eax
  413fd5:	mov    esi,0x729a47d0
  413fda:	adc    eax,0x5e6ae3b7
  413fdf:	or     ecx,DWORD PTR [ebp-0x7c4f8193]
  413fe5:	mov    ch,0x8b
  413fe7:	xchg   ebx,eax
  413fe8:	xor    al,0xf1
  413fea:	jp     0x413fec
  413fec:	cwde   
  413fed:	pop    esi
  413fee:	es push 0x63
  413ff1:	addr16 (bad) 
  413ff3:	in     al,dx
  413ff4:	mul    BYTE PTR [eax]
  413ff6:	sbb    edi,DWORD PTR [edx+ebp*2-0x15]
  413ffa:	or     BYTE PTR ds:0xb85e8ba0,dl
  414000:	push   ebx
  414001:	es dec eax
  414003:	mov    edi,0xdc61a4b0
  414008:	jo     0x414088
  41400a:	add    DWORD PTR [eax-0x78404f27],ebp
  414010:	mov    eax,0x7f96624e
  414015:	stos   DWORD PTR es:[edi],eax
  414016:	jg     0x41406f
  414018:	pop    ds
  414019:	inc    esp
  41401a:	ds adc al,0x29
  41401d:	leave  
  41401e:	pop    eax
  41401f:	mov    edx,0x9d8d41a8
  414024:	stc    
  414025:	(bad)  
  414026:	test   al,0xd7
  414028:	in     al,dx
  414029:	cli    
  41402a:	into   
  41402b:	and    esi,eax
  41402d:	rcr    BYTE PTR [edx-0x479de84],cl
  414033:	xor    DWORD PTR [edi-0x2b8241cb],0xfffffff8
  41403a:	aaa    
  41403b:	jne    0x414087
  41403d:	lods   eax,DWORD PTR ds:[esi]
  41403e:	ins    DWORD PTR es:[edi],dx
  41403f:	imul   BYTE PTR ds:0xae26fca4
  414045:	(bad)  
  414047:	cwde   
  414048:	popa   
  414049:	aad    0x3c
  41404b:	fld    TBYTE PTR [ecx-0x439f8db5]
  414051:	stos   DWORD PTR es:[edi],eax
  414052:	sbb    edi,DWORD PTR [esi]
  414054:	out    dx,eax
  414055:	push   ebx
  414056:	test   edi,0xfbe6bb2a
  41405c:	stos   DWORD PTR es:[edi],eax
  41405d:	push   edi
  41405e:	or     BYTE PTR [edi],cl
  414060:	(bad)  [eax+0x68]
  414063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414064:	fsubr  DWORD PTR ss:[ecx+0x79]
  414068:	jns    0x414000
  41406a:	ss scas al,BYTE PTR es:[edi]
  41406c:	(bad)  
  41406d:	test   eax,0xd8cf745
  414072:	popf   
  414073:	mov    dh,0x9d
  414075:	jmp    0x4140d7
  414077:	jns    0x414036
  414079:	pop    esp
  41407a:	nop
  41407b:	scas   al,BYTE PTR es:[edi]
  41407c:	inc    ecx
  41407d:	in     eax,0x40
  41407f:	sbb    DWORD PTR [ebx],esp
  414081:	sbb    BYTE PTR ds:0xd3c945ac,0xd4
  414088:	ret    0xc1cb
  41408b:	pushf  
  41408c:	(bad)  [ebx+0x629b18d6]
  414092:	mov    edi,0x3d20c880
  414097:	mov    WORD PTR [ebx-0x2635eccd],cs
  41409d:	outs   dx,DWORD PTR ds:[esi]
  41409e:	fcmovne st,st(4)
  4140a0:	or     eax,edx
  4140a2:	arpl   WORD PTR [eax-0x3ed6b8ae],dx
  4140a8:	cmp    eax,0xa4328f4c
  4140ad:	fmul   st(1),st
  4140b0:	xor    dl,ch
  4140b2:	sbb    DWORD PTR [esi+0x2b],esi
  4140b5:	shl    BYTE PTR [ecx+0x22],cl
  4140b8:	jbe    0x4140d6
  4140ba:	sbb    BYTE PTR [edi+0x61603203],dl
  4140c0:	imul   ecx,DWORD PTR [ebp+0x62],0x66
  4140c4:	sbb    BYTE PTR [ecx-0xda8be44],ah
  4140ca:	xchg   esp,eax
  4140cb:	push   0x53893ef5
  4140d0:	sbb    DWORD PTR gs:[ebp-0x7c],esp
  4140d4:	inc    esp
  4140d5:	pop    es
  4140d6:	jmp    0x414058
  4140d8:	mov    esp,0x99e722be
  4140dd:	sub    al,0x79
  4140df:	and    al,0x80
  4140e1:	xchg   ebx,eax
  4140e2:	fist   WORD PTR [ebx-0x4c]
  4140e5:	push   eax
  4140e6:	jp     0x414128
  4140e8:	not    edx
  4140ea:	cs (bad) 
  4140ec:	lods   al,BYTE PTR ds:[esi]
  4140ed:	ret    0x5fb9
  4140f0:	dec    DWORD PTR [ebx]
  4140f2:	mov    ebp,0x975d3d55
  4140f7:	repnz in al,dx
  4140f9:	push   ebp
  4140fa:	ins    DWORD PTR es:[edi],dx
  4140fb:	test   dh,dl
  4140fd:	loopne 0x41413f
  4140ff:	ins    DWORD PTR es:[edi],dx
  414100:	addr16 in eax,dx
  414102:	retf   0xf64
  414105:	test   BYTE PTR [ebp-0x2c],bl
  414108:	scas   al,BYTE PTR es:[edi]
  414109:	(bad)  
  41410a:	aad    0xc2
  41410c:	cld    
  41410d:	aas    
  41410e:	xor    edi,DWORD PTR [esi]
  414110:	scas   eax,DWORD PTR es:[edi]
  414111:	dec    esp
  414112:	mov    ds:0xa846d24,al
  414117:	fwait
  414118:	dec    esp
  414119:	cmp    eax,0x8ff7263b
  41411e:	jns    0x414124
  414120:	mov    al,ds:0x979ff72c
  414125:	pop    ecx
  414126:	mov    DWORD PTR [ecx-0xaa7d0df],esp
  41412c:	xor    al,0x3a
  41412e:	push   ebx
  41412f:	(bad)  
  414130:	(bad)  
  414131:	jle    0x414102
  414133:	dec    ebp
  414134:	cmp    eax,0x8a93616a
  414139:	push   edx
  41413a:	cmp    BYTE PTR [edx*4+0x51263e36],dl
  414141:	push   edi
  414142:	mov    dh,0x84
  414144:	pop    ds
  414145:	cld    
  414146:	js     0x41418e
  414148:	enter  0x2105,0x2b
  41414c:	or     al,0xd9
  41414e:	dec    esi
  41414f:	mov    ah,0xb3
  414151:	inc    ecx
  414152:	(bad)
  414155:	cmp    BYTE PTR [esi],0x61
  414158:	mov    bl,0x2c
  41415a:	jbe    0x4140ee
  41415c:	jo     0x4141ad
  41415e:	or     bh,BYTE PTR [eax]
  414160:	xchg   esp,eax
  414161:	mov    ah,0xf2
  414163:	add    al,0xd2
  414165:	lea    esi,[edi]
  414167:	adc    BYTE PTR [edi-0x68c9677],dl
  41416d:	mov    edx,0xdc543845
  414172:	xor    BYTE PTR [edi],ah
  414174:	jbe    0x4141ee
  414176:	inc    ebp
  414177:	(bad)  
  414178:	ficom  WORD PTR [ecx]
  41417a:	sub    al,0x7d
  41417c:	xchg   esp,eax
  41417d:	mov    bh,0x75
  41417f:	pop    ss
  414180:	test   eax,0xafbc62e
  414185:	inc    esi
  414186:	adc    eax,0x77ac96f7
  41418b:	cmp    al,0x5c
  41418d:	pop    esi
  41418e:	adc    edx,DWORD PTR [edi+0x78]
  414191:	dec    edi
  414192:	inc    eax
  414193:	ins    BYTE PTR es:[edi],dx
  414194:	leave  
  414195:	rol    DWORD PTR [ecx-0x2d],cl
  414198:	stc    
  414199:	adc    dl,BYTE PTR [ecx]
  41419b:	sub    al,0xc
  41419d:	xchg   esi,eax
  41419e:	test   BYTE PTR [eax-0x77b11832],dh
  4141a4:	stc    
  4141a5:	(bad)  
  4141a6:	jae    0x4141b7
  4141a8:	sbb    eax,edi
  4141aa:	and    al,0xec
  4141ac:	inc    BYTE PTR [ebp+0x7e]
  4141af:	mov    dh,0x16
  4141b1:	inc    ebp
  4141b2:	cmp    esp,DWORD PTR [edi+esi*2-0x2]
  4141b6:	xchg   esp,eax
  4141b7:	cmp    eax,0x9a01e85
  4141bc:	jno    0x414165
  4141be:	shl    BYTE PTR [edx],1
  4141c0:	push   ecx
  4141c1:	or     eax,0xdb042f12
  4141c6:	push   ebx
  4141c7:	push   ebp
  4141c8:	(bad)  
  4141c9:	fsub   DWORD PTR [ecx]
  4141cb:	cmp    esp,esp
  4141cd:	fwait
  4141ce:	dec    ebp
  4141cf:	rol    esp,0xd6
  4141d2:	mov    al,ds:0xc2211700
  4141d7:	into   
  4141d8:	aad    0x97
  4141da:	fild   WORD PTR [edx+ebp*1-0x42ce1bbc]
  4141e1:	cmc    
  4141e2:	cld    
  4141e3:	add    BYTE PTR [ebp+0x23],dh
  4141e6:	jne    0x414221
  4141e8:	sbb    BYTE PTR [ecx],bl
  4141ea:	dec    edx
  4141eb:	push   edi
  4141ec:	out    dx,al
  4141ed:	into   
  4141ee:	push   ds
  4141ef:	jne    0x414237
  4141f1:	dec    esi
  4141f2:	bound  esp,QWORD PTR [edx]
  4141f4:	inc    ecx
  4141f5:	pop    edx
  4141f6:	aam    0xde
  4141f8:	popa   
  4141f9:	in     al,dx
  4141fa:	xchg   esp,eax
  4141fb:	push   ecx
  4141fc:	or     DWORD PTR [eax+0x78],esi
  4141ff:	loope  0x4141a5
  414201:	(bad)  
  414202:	pop    ds
  414203:	or     DWORD PTR [edi+0x11fb9738],esi
  414209:	xchg   ebp,eax
  41420a:	xor    al,0xff
  41420c:	xchg   ebp,eax
  41420d:	adc    eax,0x7459d7d3
  414212:	add    al,0x4b
  414214:	data16 shr al,0x6d
  414218:	jmp    0x414292
  41421a:	retf   0xe3da
  41421d:	xor    eax,0xe2f5013e
  414222:	call   0x40ec:0x32812a76
  414229:	call   0x9e63d9f2
  41422e:	cwde   
  41422f:	loop   0x414269
  414231:	aam    0x63
  414233:	retf   
  414234:	ins    BYTE PTR es:[edi],dx
  414235:	jbe    0x414249
  414237:	lock aas 
  414239:	and    eax,0x36223a7c
  41423e:	xchg   esp,eax
  41423f:	mul    ecx
  414241:	pop    ss
  414242:	mov    BYTE PTR [esi-0x36],al
  414245:	lods   eax,DWORD PTR ds:[esi]
  414246:	and    al,0xfd
  414248:	ins    DWORD PTR es:[edi],dx
  414249:	jle    0x4141eb
  41424b:	cmp    DWORD PTR [ebx-0x11],esp
  41424e:	pop    ebp
  41424f:	cmp    BYTE PTR [edx+esi*4],ch
  414252:	popf   
  414253:	pop    ebx
  414254:	xlat   BYTE PTR ds:[ebx]
  414255:	retf   
  414256:	in     al,dx
  414257:	sbb    DWORD PTR [ebx+eax*4-0x4b],edx
  41425b:	scas   eax,DWORD PTR es:[edi]
  41425c:	dec    esp
  41425d:	shr    DWORD PTR [esi],0x9b
  414260:	outs   dx,DWORD PTR ds:[esi]
  414261:	lahf   
  414262:	or     DWORD PTR [ebx+0x65ab2f17],edi
  414268:	fdivr  st(0),st
  41426a:	push   ebp
  41426b:	(bad)  
  41426c:	icebp  
  41426d:	scas   al,BYTE PTR es:[edi]
  41426e:	jne    0x4142e8
  414270:	adc    esp,edx
  414272:	cmc    
  414273:	xor    al,0xd0
  414275:	scas   eax,DWORD PTR es:[edi]
  414276:	int3   
  414277:	push   edx
  414278:	out    0x6c,eax
  41427a:	or     eax,DWORD PTR [ebx+0x3e755f33]
  414280:	ret    
  414281:	(bad)  
  414282:	test   al,0x93
  414284:	push   edx
  414285:	dec    esi
  414286:	out    0x9c,eax
  414288:	dec    edi
  414289:	test   al,0xe3
  41428b:	jne    0x4142a9
  41428d:	int    0x7a
  41428f:	cwde   
  414290:	jo     0x414308
  414292:	movsx  edx,BYTE PTR [ebp+0x7c]
  414296:	fcomp  DWORD PTR [eax]
  414298:	mov    BYTE PTR [edx],al
  41429a:	pop    edi
  41429b:	lods   al,BYTE PTR ds:[esi]
  41429c:	aam    0x5b
  41429e:	dec    ebx
  41429f:	inc    edi
  4142a0:	dec    edx
  4142a2:	rol    DWORD PTR [edx+esi*2+0x5499b99],1
  4142a9:	xor    ebx,DWORD PTR [ebx+ebp*1+0x1c]
  4142ad:	add    al,0xe2
  4142af:	xchg   ebx,eax
  4142b0:	sbb    esi,ebx
  4142b2:	cmp    ch,BYTE PTR [eax+0x7b]
  4142b5:	loope  0x41429d
  4142b7:	or     DWORD PTR [edi+0x7c0705f0],ebx
  4142bd:	jne    0x414252
  4142bf:	push   edi
  4142c0:	test   BYTE PTR [edx+0x1a],dh
  4142c3:	std    
  4142c4:	sub    al,0xde
  4142c6:	mov    edi,0xc120e579
  4142cc:	jb     0x4142dc
  4142ce:	or     BYTE PTR [ecx+0x5e],cl
  4142d1:	jne    0x4142d9
  4142d3:	mov    fs,edx
  4142d5:	push   ecx
  4142d6:	imul   edi,DWORD PTR [edx-0x46],0x9990a803
  4142dd:	je     0x41426f
  4142df:	cmp    eax,0x7e50db3a
  4142e4:	sub    eax,0x3bd14757
  4142e9:	or     BYTE PTR [eax+ebx*2],ah
  4142ec:	mov    al,bl
  4142ee:	mov    cl,0xe2
  4142f0:	jle    0x4142e5
  4142f2:	xchg   esp,eax
  4142f3:	sub    eax,0xfaa4a50e
  4142f8:	gs stos DWORD PTR es:[edi],eax
  4142fa:	pusha  
  4142fb:	adc    bl,bl
  4142fd:	adc    eax,0x935b4927
  414302:	xchg   esp,eax
  414303:	push   ecx
  414304:	xchg   edx,eax
  414305:	mov    DWORD PTR [edi+0x660a8f63],eax
  41430b:	lahf   
  41430c:	sbb    bl,BYTE PTR [ecx]
  41430e:	data16 js 0x414379
  414311:	cwde   
  414312:	pop    ds
  414313:	cs popa 
  414315:	pop    esi
  414316:	adc    ebx,DWORD PTR [ecx-0x5a]
  414319:	mov    cl,0x52
  41431b:	mov    al,ds:0x57d9a3ea
  414320:	sar    dl,1
  414322:	out    0xf2,al
  414324:	pushf  
  414325:	inc    esi
  414326:	loopne 0x414335
  414328:	xchg   edx,eax
  414329:	inc    edx
  41432a:	enter  0xc81f,0xcb
  41432e:	mov    eax,0xec5732db
  414333:	les    ebx,FWORD PTR [eax+0x3875ad6a]
  414339:	adc    DWORD PTR [ebx],esp
  41433b:	xchg   ecx,eax
  41433c:	push   esi
  41433d:	mov    bh,BYTE PTR [eax-0x15]
  414340:	xor    al,0x58
  414342:	or     ecx,DWORD PTR [eax]
  414344:	and    DWORD PTR [ecx-0x5fb2e3b9],0x23aff3b2
  41434e:	push   0x5c3d7cdf
  414353:	loop   0x4142f7
  414355:	gs mov esi,0xb09e16ee
  41435b:	pop    ss
  41435c:	repnz loope 0x4143c0
  41435f:	imul   edi,DWORD PTR [ecx-0x5f],0xfffffff6
  414363:	xor    DWORD PTR [edi+0x60],esp
  414366:	enter  0x103b,0x12
  41436a:	jge    0x4143b0
  41436c:	js     0x414333
  41436e:	mov    esp,0x44afc17c
  414373:	test   BYTE PTR [edx-0x2a],ch
  414376:	xchg   DWORD PTR ds:0x1706d36d,ebx
  41437c:	jns    0x414308
  41437e:	(bad)  
  41437f:	xchg   edi,eax
  414380:	xchg   edi,ebp
  414382:	fstp   TBYTE PTR [esi-0x43866001]
  414388:	and    edx,DWORD PTR [edi]
  41438a:	and    dh,0x71
  41438d:	je     0x41439a
  41438f:	push   esp
  414390:	outs   dx,DWORD PTR ds:[esi]
  414391:	mov    esi,0xa0f26d01
  414396:	and    ah,BYTE PTR [edx]
  414398:	mov    BYTE PTR [edx],cl
  41439a:	sahf   
  41439b:	jno    0x4143f3
  41439d:	mov    ebp,0xa0a15560
  4143a2:	rol    DWORD PTR [ecx+0x66796535],0xb1
  4143a9:	into   
  4143aa:	pop    ds
  4143ab:	int3   
  4143ac:	repnz and BYTE PTR [edi+0x6a],cl
  4143b0:	push   ds
  4143b1:	mov    bh,0x6a
  4143b3:	aam    0x5e
  4143b5:	sbb    eax,0x5b70caa9
  4143ba:	shr    BYTE PTR [ebx],0x37
  4143bd:	retf   
  4143be:	sub    BYTE PTR [edx],cl
  4143c0:	sar    al,0xfd
  4143c3:	sub    al,0x68
  4143c5:	fcmovnu st,st(5)
  4143c7:	(bad)  
  4143c8:	dec    eax
  4143c9:	fisubr WORD PTR [ecx]
  4143cb:	cmp    edx,ecx
  4143cd:	pushf  
  4143ce:	in     eax,0xc1
  4143d0:	cwde   
  4143d1:	add    eax,0x321bc96f
  4143d6:	cmp    al,BYTE PTR [ebx+eax*1]
  4143d9:	and    BYTE PTR [esp+eax*8-0x112a228],bh
  4143e0:	sbb    BYTE PTR [esi-0x62065200],ah
  4143e6:	or     DWORD PTR [esp+ecx*1-0x4982f95a],ebp
  4143ed:	xlat   BYTE PTR ds:[ebx]
  4143ee:	inc    edi
  4143ef:	ja     0x4143f5
  4143f1:	mov    esi,0x34ab983f
  4143f6:	sbb    edi,eax
  4143f8:	adc    eax,0x9358f6c7
  4143fd:	out    0xb3,eax
  4143ff:	mov    eax,0x331be36c
  414404:	jns    0x4143e8
  414406:	adc    DWORD PTR [ebx+ebp*1-0xe],edi
  41440a:	cmp    eax,0x2956c0a4
  41440f:	les    eax,FWORD PTR ds:0xdc8dc203
  414415:	push   es
  414416:	rcl    eax,1
  414418:	xor    dh,cl
  41441a:	test   cl,bl
  41441c:	mov    ecx,0x56ff502b
  414421:	cmp    BYTE PTR [edx-0x6c],al
  414424:	ror    DWORD PTR [esi+0x668c2ce9],1
  41442a:	sti    
  41442b:	inc    ecx
  41442c:	in     eax,dx
  41442d:	jmp    0x6d51854e
  414432:	lods   eax,DWORD PTR ds:[esi]
  414433:	jge    0x414456
  414435:	sar    DWORD PTR [ebp+esi*8+0x7184cba1],0x31
  41443d:	push   edi
  41443e:	imul   eax,DWORD PTR [esi+0x7f46e8cf],0xfffffff9
  414445:	xchg   edx,eax
  414446:	cdq    
  414447:	nop
  414448:	std    
  414449:	inc    eax
  41444a:	jge    0x4144b7
  41444c:	push   es
  41444d:	das    
  41444e:	jle    0x414461
  414450:	in     al,0xca
  414452:	pop    ecx
  414453:	dec    ecx
  414454:	and    ebx,DWORD PTR [esi]
  414456:	mov    ecx,0xc85288a2
  41445b:	sub    DWORD PTR [esi],edx
  41445d:	adc    BYTE PTR [esi+0x1e],ah
  414460:	push   esp
  414461:	or     ch,BYTE PTR [edx]
  414463:	pop    ebx
  414464:	inc    esp
  414465:	ds enter 0x2061,0xfc
  41446a:	retf   0xc080
  41446d:	pop    esp
  41446e:	pop    ss
  41446f:	out    0x69,al
  414471:	sub    eax,0x767fb48
  414476:	mov    ebp,0xf1ed089b
  41447b:	cwde   
  41447c:	and    esp,DWORD PTR [ebp+0x1915641b]
  414482:	popa   
  414483:	iret   
  414484:	cwde   
  414485:	stos   BYTE PTR es:[edi],al
  414486:	ins    DWORD PTR es:[edi],dx
  414487:	push   0xffffffd4
  414489:	fs or  eax,0xf05fe2f3
  41448f:	push   cs
  414490:	or     DWORD PTR [ecx],0xf07dd48f
  414496:	or     DWORD PTR [ecx],eax
  414498:	push   ebp
  414499:	sbb    ecx,DWORD PTR [edx]
  41449b:	aam    0xf
  41449d:	not    BYTE PTR [ebx]
  41449f:	sbb    eax,0x875b5de3
  4144a4:	ds adc al,0x46
  4144a7:	mov    ds:0x4103b65c,al
  4144ac:	adc    eax,0x1e7b92a4
  4144b1:	inc    ebx
  4144b2:	cmp    eax,0x231341a7
  4144b7:	scas   al,BYTE PTR es:[edi]
  4144b8:	ins    DWORD PTR es:[edi],dx
  4144b9:	dec    ebp
  4144ba:	fst    st(6)
  4144bc:	jae    0x4144f8
  4144be:	xchg   esi,eax
  4144bf:	sti    
  4144c0:	add    bl,BYTE PTR [edi]
  4144c2:	sbb    DWORD PTR [ebp-0x70],esp
  4144c5:	adc    eax,0x34d7839b
  4144ca:	cmp    BYTE PTR fs:[ebx+0x2d],0x67
  4144cf:	pop    esi
  4144d0:	ror    BYTE PTR [esi-0x1917ba27],cl
  4144d6:	stos   BYTE PTR es:[edi],al
  4144d7:	sub    al,0xc1
  4144d9:	push   es
  4144da:	fs jne 0x41452c
  4144dd:	into   
  4144de:	(bad)  
  4144df:	mov    bh,0xa9
  4144e1:	push   esp
  4144e2:	fidiv  WORD PTR [edi]
  4144e4:	ss ror ch,1
  4144e7:	scas   eax,DWORD PTR es:[edi]
  4144e8:	push   es
  4144e9:	mov    dh,0x4a
  4144eb:	mov    dl,0x68
  4144ed:	lahf   
  4144ee:	pop    esp
  4144ef:	mov    DWORD PTR [esi+0x7d9c6480],ebx
  4144f5:	jle    0x4144e7
  4144f7:	cmp    al,0x88
  4144fa:	dec    edi
  4144fb:	data16 (bad) 
  4144fd:	pop    edi
  4144fe:	loop   0x414559
  414500:	mov    ?,WORD PTR [esi+0x14]
  414503:	aas    
  414504:	mov    ebp,0x63444065
  414509:	sub    al,0x58
  41450b:	inc    esi
  41450c:	fstp   QWORD PTR [eax+edi*8]
  41450f:	daa    
  414510:	daa    
  414511:	ins    DWORD PTR es:[edi],dx
  414512:	sbb    eax,0x4a8ed6a3
  414517:	push   esi
  414518:	adc    BYTE PTR [ebx+0x39],ah
  41451b:	xchg   esi,eax
  41451c:	dec    ecx
  41451d:	or     BYTE PTR [edx],dl
  41451f:	xchg   ebx,eax
  414520:	cmc    
  414521:	inc    esp
  414522:	cld    
  414523:	scas   al,BYTE PTR es:[edi]
  414524:	mov    cl,0xbb
  414526:	add    eax,0xbca2a4ee
  41452b:	fucomi st,st(6)
  41452d:	arpl   si,cx
  41452f:	add    eax,0xee91cf95
  414535:	idiv   ecx
  414537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414538:	or     eax,0x2ed79e8
  41453d:	outs   dx,BYTE PTR ds:[esi]
  41453e:	ds js  0x414540
  414541:	pusha  
  414542:	adc    BYTE PTR [edi],bl
  414544:	sbb    DWORD PTR [ecx-0x4f455934],edx
  41454a:	add    al,0x4c
  41454c:	xor    DWORD PTR [eax+ecx*1+0xd770f70],eax
  414553:	in     al,0x25
  414555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414556:	cmp    eax,0x60176e00
  41455b:	mov    ecx,0x26fe6813
  414560:	pushf  
  414561:	xor    BYTE PTR [esi-0x2c],dl
  414564:	mov    ebx,0x4daec136
  414569:	cmp    BYTE PTR [esi+esi*4],al
  41456c:	or     DWORD PTR [ecx-0x35213378],edi
  414572:	test   BYTE PTR [edx],dl
  414574:	cmp    ebx,ebp
  414576:	add    ah,BYTE PTR [ebx+0x2]
  414579:	in     eax,dx
  41457a:	sub    DWORD PTR [edx+0x132c9ef0],0xf7959676
  414584:	inc    esp
  414585:	rol    ecx,1
  414587:	enter  0x67dd,0xec
  41458b:	xor    al,ch
  41458d:	loope  0x41459c
  41458f:	push   edx
  414590:	icebp  
  414591:	loopne 0x41456d
  414593:	jb     0x4145a8
  414595:	and    BYTE PTR [ebp-0x2f],bl
  414598:	mov    eax,ds:0xe172c0ff
  41459d:	ret    
  41459e:	out    dx,eax
  41459f:	mov    ah,0x71
  4145a1:	je     0x4145a3
  4145a3:	sbb    BYTE PTR [eax+0x1],0x3f
  4145a7:	es (bad) 
  4145a9:	aam    0xb9
  4145ab:	scas   al,BYTE PTR es:[edi]
  4145ac:	popf   
  4145ad:	jb     0xf4128f95
  4145b3:	int3   
  4145b4:	out    dx,eax
  4145b5:	xchg   edi,eax
  4145b6:	aas    
  4145b7:	icebp  
  4145b8:	cmc    
  4145b9:	arpl   di,sp
  4145bb:	adc    ecx,DWORD PTR ds:0x5e2ed74e
  4145c1:	inc    ebx
  4145c2:	leave  
  4145c3:	jmp    0x9a58450c
  4145c8:	xchg   ecx,eax
  4145c9:	cdq    
  4145ca:	js     0x414580
  4145cc:	cs fs jne 0x414575
  4145d0:	pop    ebp
  4145d1:	mov    dl,0xb5
  4145d3:	aaa    
  4145d4:	mov    eax,0x33f5ca75
  4145d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145da:	mov    ch,0x2b
  4145dc:	loop   0x414568
  4145de:	outs   dx,BYTE PTR ds:[esi]
  4145df:	mov    WORD PTR [ebp-0x527a7f49],es
  4145e5:	sbb    BYTE PTR [esp+edx*8+0x1fb9b759],cl
  4145ec:	xchg   ebx,eax
  4145ed:	jne    0x414583
  4145ef:	test   eax,0xc282b218
  4145f4:	and    eax,0x2e543573
  4145f9:	out    dx,eax
  4145fa:	adc    ch,ah
  4145fc:	aam    0x6e
  4145fe:	and    BYTE PTR [edi-0x7],0xb8
  414602:	mov    al,0x93
  414604:	jge    0x41464d
  414606:	in     eax,dx
  414607:	xor    DWORD PTR [ecx-0xe800831],0x75
  41460e:	sbb    DWORD PTR [edx+0x3e],ecx
  414611:	test   eax,0x177a7a5d
  414616:	mov    esp,edx
  414618:	add    edx,DWORD PTR [esi-0x64]
  41461b:	jbe    0x41461f
  41461d:	test   DWORD PTR [esi+0xfd22240],0xce1a63f6
  414627:	stos   DWORD PTR es:[edi],eax
  414628:	push   ds
  414629:	push   ecx
  41462a:	and    esp,ecx
  41462c:	js     0x4145e9
  41462e:	test   bl,dl
  414630:	push   0xc2250eac
  414635:	and    esi,DWORD PTR [esi+0x2f]
  414638:	lea    ebx,[esi+0x73bd874e]
  41463e:	push   ss
  41463f:	cmp    BYTE PTR [edx],0x16
  414642:	pushf  
  414643:	mov    ah,0x94
  414645:	jmp    0xb904fc21
  41464a:	and    dh,BYTE PTR [edi]
  41464c:	aaa    
  41464d:	or     ebp,DWORD PTR [esi-0x66c4b777]
  414653:	ins    BYTE PTR es:[edi],dx
  414654:	(bad)  
  414655:	jl     0x41461b
  414657:	cmc    
  414658:	loope  0x414613
  41465a:	pop    ebp
  41465b:	lods   eax,DWORD PTR ds:[esi]
  41465c:	mov    esi,0x24038f74
  414661:	ins    BYTE PTR es:[edi],dx
  414662:	lea    ebp,[edi]
  414664:	daa    
  414665:	inc    edi
  414666:	js     0x414664
  414668:	mov    cl,0x89
  41466a:	mov    eax,0xa0412dfb
  41466f:	pop    ds
  414670:	loop   0x414630
  414672:	mov    ebx,fs
  414674:	sub    BYTE PTR [esi-0x615a08df],0xea
  41467b:	sub    DWORD PTR [ecx-0x4dc10674],edi
  414681:	dec    ebx
  414682:	in     al,dx
  414683:	fadd   QWORD PTR [ecx+0x9be5153]
  414689:	imul   bh
  41468b:	lds    esi,FWORD PTR [ebx+0x5c7395a4]
  414691:	fisubr DWORD PTR [edx+edi*2+0x65]
  414695:	and    esp,DWORD PTR [edx]
  414697:	mov    dh,0x5a
  414699:	loop   0x414680
  41469b:	push   es
  41469c:	mov    dh,0xf4
  41469e:	subps  xmm2,XMMWORD PTR [ecx+0x3c]
  4146a2:	pop    edi
  4146a3:	sub    al,0xf9
  4146a5:	daa    
  4146a6:	inc    edi
  4146a7:	sub    BYTE PTR [ecx+0x1ae53b9f],dh
  4146ad:	pop    ebx
  4146ae:	test   BYTE PTR [esi-0x6f1954db],ah
  4146b4:	int3   
  4146b5:	mov    ebp,0x98282d6a
  4146ba:	outs   dx,BYTE PTR ds:[esi]
  4146bb:	hlt    
  4146bc:	mov    al,0x97
  4146be:	gs pop esi
  4146c0:	and    BYTE PTR [ebx],al
  4146c2:	sub    bl,ch
  4146c4:	xchg   esi,eax
  4146c5:	jle    0x4146c1
  4146c7:	mov    ebp,0x26ca07f6
  4146cc:	sub    esp,DWORD PTR [ecx+0xa1a380f]
  4146d2:	aam    0x1b
  4146d4:	mov    ds:0xf483a0f9,al
  4146d9:	stc    
  4146da:	add    al,BYTE PTR [esi]
  4146dc:	(bad)  
  4146de:	pusha  
  4146df:	adc    eax,0x4d6ed513
  4146e4:	(bad)
  4146e9:	inc    esp
  4146ea:	jmp    0x7795135c
  4146ef:	sub    eax,0x1c1c8939
  4146f4:	cwde   
  4146f5:	ret    0x2107
  4146f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146f9:	mov    ds:0x9abdead5,al
  4146fe:	dec    ebx
  4146ff:	stos   BYTE PTR es:[edi],al
  414700:	jge    0x4146cd
  414702:	ja     0x41472d
  414704:	fisttp QWORD PTR [ecx-0x125b8ac5]
  41470a:	dec    ecx
  41470b:	pop    edx
  41470c:	mov    bl,0x19
  41470e:	xor    dl,BYTE PTR ds:0xd6c6135e
  414714:	in     eax,dx
  414715:	xchg   edx,eax
  414716:	cdq    
  414717:	add    eax,0xa56bc33f
  41471c:	ja     0x4146bd
  41471e:	push   esi
  41471f:	or     DWORD PTR [eax-0x752cd0e],edx
  414725:	jl     0x4146b7
  414727:	das    
  414728:	rcr    BYTE PTR [ecx-0x3b],cl
  41472b:	xchg   esp,eax
  41472c:	push   ss
  41472d:	xor    DWORD PTR [edx-0x4f],ecx
  414730:	adc    BYTE PTR [ebp+edi*1-0x2e],cl
  414734:	lock pop es
  414736:	rol    BYTE PTR [eax],cl
  414738:	cdq    
  414739:	sbb    BYTE PTR [ecx+ebp*4],dl
  41473c:	mov    bl,0xdc
  41473e:	or     eax,0xb0835c35
  414743:	mov    esp,0x7bb8c16f
  414748:	mov    ebx,0xe7b0d4d
  41474d:	dec    ecx
  41474e:	div    BYTE PTR [edx-0x3e3b948e]
  414754:	mov    dl,0xf9
  414756:	retf   
  414757:	push   cs
  414758:	lea    ebp,[ecx]
  41475a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41475b:	jmp    0x377a:0x3501c240
  414762:	(bad)  
  414764:	jae    0x414707
  414766:	rol    DWORD PTR ds:0x76defd6f,0x81
  41476d:	ret    0x241
  414770:	test   al,al
  414772:	es mov edi,0x5b4d4aa1
  414778:	push   edi
  414779:	sbb    esp,edi
  41477b:	ss jb  0x4147a4
  41477e:	mov    ebp,0xec8cfd50
  414783:	push   ss
  414784:	inc    ebp
  414785:	loope  0x414749
  414787:	dec    esp
  414788:	jp     0x414715
  41478a:	ins    DWORD PTR es:[edi],dx
  41478b:	repz sbb esp,edi
  41478e:	test   eax,0x69faf0d6
  414793:	inc    ebx
  414794:	or     DWORD PTR [ebp+0x2720e100],ebp
  41479a:	xor    esp,DWORD PTR [eax]
  41479c:	outs   dx,DWORD PTR ds:[esi]
  41479d:	and    DWORD PTR [ebx+esi*8-0x4d3a41c9],0xffffffe8
  4147a5:	adc    BYTE PTR [ebp+0x6d48a748],bl
  4147ab:	mov    eax,ds:0xb6d63d12
  4147b0:	inc    edx
  4147b1:	dec    edx
  4147b2:	mov    cl,0x15
  4147b4:	or     ch,0x27
  4147b7:	sub    BYTE PTR [ebp-0x34aa4],0x25
  4147be:	or     ah,BYTE PTR [esi-0x5f]
  4147c1:	push   eax
  4147c2:	add    BYTE PTR [edi+ecx*1+0x59],bl
  4147c6:	call   0x82473cc5
  4147cb:	push   ss
  4147cc:	sar    BYTE PTR [esp+esi*8],1
  4147cf:	cdq    
  4147d0:	pop    ebp
  4147d1:	sbb    DWORD PTR [ebx+eiz*1-0x67],edx
  4147d5:	xchg   esi,eax
  4147d6:	fs push ebx
  4147d8:	sahf   
  4147d9:	mov    bl,0xfe
  4147db:	push   0x54
  4147dd:	adc    ch,BYTE PTR [ecx]
  4147df:	sub    esi,ebp
  4147e1:	aad    0xf2
  4147e3:	sub    edi,DWORD PTR [esi]
  4147e5:	ja     0x414838
  4147e7:	inc    edi
  4147e8:	add    DWORD PTR [ebx-0x2e076d1c],esp
  4147ee:	aad    0xee
  4147f0:	ins    DWORD PTR es:[edi],dx
  4147f1:	int    0x42
  4147f3:	mov    eax,ds:0xdc3d078f
  4147f8:	dec    edx
  4147f9:	addr16 sub al,0x67
  4147fc:	and    edx,DWORD PTR [ebx]
  4147fe:	scas   eax,DWORD PTR es:[edi]
  4147ff:	leave  
  414800:	fdiv   QWORD PTR ds:0x2b55ea83
  414806:	jge    0x41480f
  414808:	xchg   esi,eax
  414809:	pop    edx
  41480a:	shl    DWORD PTR [ecx-0x169c846b],0xba
  414811:	jmp    0xfe5f72cd
  414816:	pop    ebx
  414817:	arpl   WORD PTR [edx-0x3e],di
  41481a:	loopne 0x4147c0
  41481c:	adc    al,0xd2
  41481e:	(bad)  
  414820:	push   ebx
  414821:	mov    eax,ds:0x3803e01c
  414826:	es push eax
  414828:	inc    BYTE PTR [esi+eax*2]
  41482b:	das    
  41482c:	aad    0x94
  41482e:	and    eax,DWORD PTR ds:0x8605876b
  414834:	sbb    DWORD PTR [edi-0x45],esp
  414837:	jmp    0x2d1aaf03
  41483c:	sub    BYTE PTR [edx-0x7b],bh
  41483f:	adc    ebx,DWORD PTR [ebp-0x6]
  414842:	xlat   BYTE PTR ds:[ebx]
  414843:	sti    
  414844:	jmp    0x811717e1
  414849:	lock cmc 
  41484b:	cwde   
  41484c:	retf   
  41484d:	mov    esi,0xbb0df43c
  414852:	xlat   BYTE PTR ds:[ebx]
  414853:	mov    WORD PTR [edx+0x7d],?
  414856:	lods   al,BYTE PTR ds:[esi]
  414857:	push   cs
  414858:	sti    
  414859:	in     al,0x91
  41485b:	jbe    0x414818
  41485d:	inc    ebx
  41485e:	or     BYTE PTR [edi+edx*2-0x6dfcb486],dh
  414865:	mov    ch,0x99
  414867:	and    al,0x63
  414869:	ins    DWORD PTR es:[edi],dx
  41486a:	jle    0x414862
  41486c:	ror    cl,0xdd
  41486f:	dec    ebp
  414870:	add    al,0x1e
  414872:	mov    dh,0xde
  414874:	repz ret 
  414876:	sub    eax,0x97da69ac
  41487c:	data16 jle 0x41486c
  41487f:	lds    edx,FWORD PTR [edx+0x5aa66815]
  414885:	and    ecx,DWORD PTR [edi+0x7c3aa57b]
  41488b:	push   ebp
  41488c:	xchg   DWORD PTR [ecx-0x5],esp
  41488f:	jae    0x414865
  414891:	xchg   esp,eax
  414892:	inc    edx
  414893:	push   esp
  414894:	aas    
  414895:	test   BYTE PTR [edi],bl
  414897:	adc    eax,0x83159f5
  41489c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41489d:	(bad)  
  41489f:	repz ds push es
  4148a2:	mov    eax,ds:0xe4b01caf
  4148a7:	jae    0x4148e7
  4148a9:	xchg   BYTE PTR [edi-0x363e8c31],ah
  4148af:	bound  esp,QWORD PTR [edx+0x227f8d31]
  4148b5:	mov    esi,0x28ae86a7
  4148ba:	mov    ebp,DWORD PTR [edi]
  4148bc:	hlt    
  4148bd:	adc    al,0x3c
  4148bf:	addr16 xchg edi,eax
  4148c1:	es dec esi
  4148c3:	pop    ebp
  4148c4:	xchg   dh,ah
  4148c6:	popa   
  4148c7:	mov    ds:0x8a9625a2,eax
  4148cc:	mov    ds:0xff44e1c7,eax
  4148d1:	frstor [edx+edx*8]
  4148d4:	xchg   ebx,eax
  4148d5:	outs   dx,BYTE PTR ds:[esi]
  4148d6:	adc    ebp,DWORD PTR [esi+0xf74c7f]
  4148dc:	outs   dx,DWORD PTR ds:[esi]
  4148dd:	sub    al,0x4d
  4148df:	ret    0x7e6c
  4148e2:	fdiv   QWORD PTR [edx-0x49]
  4148e5:	dec    esp
  4148e6:	ret    
  4148e7:	pop    edx
  4148e8:	mov    ds:0xedbbd937,eax
  4148ed:	lods   al,BYTE PTR ds:[esi]
  4148ee:	nop
  4148ef:	jmp    0x41496e
  4148f1:	shr    BYTE PTR [esi+eax*8-0x24a8fbce],cl
  4148f8:	mov    edx,0x987bbc0b
  4148fd:	dec    edx
  4148ff:	test   eax,0xb195e759
  414904:	mov    esi,0x2f7d71b9
  414909:	ds adc al,0x7c
  41490c:	mov    DWORD PTR ds:0x9c478ef7,ecx
  414912:	pop    eax
  414913:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414914:	cdq    
  414915:	(bad)  
  414916:	cs jecxz 0x4148e0
  414919:	into   
  41491a:	dec    esi
  41491b:	mov    al,ds:0xfc6aa65c
  414920:	lahf   
  414921:	pop    ebx
  414922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414923:	repnz aaa 
  414925:	jns    0x4148ee
  414927:	push   esi
  414928:	push   esp
  414929:	int    0x8f
  41492b:	int3   
  41492c:	int    0xcd
  41492e:	cli    
  41492f:	in     eax,0x55
  414931:	dec    ebp
  414932:	mov    esi,ebx
  414934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414935:	imul   DWORD PTR [ebp-0x18f31f26]
  41493b:	test   eax,0x95781eb4
  414940:	je     0x414934
  414942:	test   DWORD PTR [esi],edx
  414944:	sub    dh,BYTE PTR [edi]
  414946:	outs   dx,DWORD PTR ds:[esi]
  414947:	push   ecx
  414948:	push   0x45292745
  41494d:	in     al,dx
  41494e:	inc    eax
  41494f:	push   0xe
  414951:	jecxz  0x41495b
  414953:	or     eax,0x3ef2254
  414958:	mov    bl,0xf3
  41495a:	inc    ecx
  41495b:	ss ja  0x41490b
  41495e:	mov    dl,0x49
  414960:	mov    edx,0x495bc072
  414965:	or     eax,0x3eb2d91
  41496a:	adc    BYTE PTR [edx+0x4adcbbcd],0x3a
  414971:	adc    DWORD PTR [esi+0x61989eb8],0xffffffd0
  414978:	mov    ds:0x1b9e1bbf,al
  41497d:	xchg   ebx,eax
  41497e:	fcomp  DWORD PTR [edi+0x3bb63af4]
  414984:	jbe    0x41493b
  414986:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414987:	cld    
  414988:	inc    ebp
  414989:	pusha  
  41498a:	not    eax
  41498c:	outs   dx,DWORD PTR ds:[esi]
  41498d:	add    dl,ch
  41498f:	push   ecx
  414990:	fwait
  414991:	lds    ebx,FWORD PTR [eax-0x3c]
  414994:	sbb    bh,BYTE PTR [edx+0x68e53418]
  41499a:	pop    ebp
  41499b:	dec    ebx
  41499c:	arpl   WORD PTR [ebx+0x36],di
  41499f:	retf   
  4149a0:	inc    esi
  4149a1:	push   ss
  4149a2:	fld    DWORD PTR [esi-0x7ccefec8]
  4149a8:	inc    edi
  4149a9:	adc    BYTE PTR [ebx],dl
  4149ab:	dec    esp
  4149ac:	xchg   ebp,eax
  4149ad:	mov    DWORD PTR [ebp+0x8],edx
  4149b0:	jmp    0x414a25
  4149b5:	mov    edx,DWORD PTR [ebp+0x8]
  4149b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4149bb:	xor    edx,eax
  4149bd:	xor    ebx,eax
  4149bf:	sub    edx,ebx
  4149c1:	sub    edx,esi
  4149c3:	xor    edx,eax
  4149c5:	mov    DWORD PTR [ebp+0x8],edx
  4149c8:	mov    edx,DWORD PTR [ebp+0x8]
  4149cb:	mov    ebx,DWORD PTR [ebp-0x58]
  4149ce:	add    edx,0x5708e2
  4149d4:	imul   edx,ebx
  4149d7:	mov    DWORD PTR [ebp-0x58],edx
  4149da:	mov    edx,DWORD PTR [ebp+0x8]
  4149dd:	mov    ebx,DWORD PTR [ebp-0x54]
  4149e0:	add    edx,0x64f89c
  4149e6:	or     edx,ebx
  4149e8:	mov    DWORD PTR [ebp-0x54],edx
  4149eb:	mov    edx,DWORD PTR [ebp+0x8]
  4149ee:	mov    ebx,DWORD PTR [ebp-0x50]
  4149f1:	add    edx,ecx
  4149f3:	xor    edx,ebx
  4149f5:	mov    DWORD PTR [ebp-0x50],edx
  4149f8:	mov    edx,DWORD PTR [ebp+0x8]
  4149fb:	mov    ebx,DWORD PTR [ebp-0x4c]
  4149fe:	add    edx,edi
  414a00:	and    edx,ebx
  414a02:	mov    DWORD PTR [ebp-0x4c],edx
  414a05:	mov    edx,DWORD PTR [ebp+0x8]
  414a08:	mov    ebx,DWORD PTR [ebp-0x48]
  414a0b:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a12:	mov    DWORD PTR [ebp-0x48],edx
  414a15:	mov    edx,DWORD PTR [ebp+0x8]
  414a18:	mov    ebx,0xfa5e1528
  414a1d:	sub    ebx,edx
  414a1f:	add    ebx,DWORD PTR [ebp-0x44]
  414a22:	mov    DWORD PTR [ebp-0x44],ebx
  414a25:	mov    edx,DWORD PTR [ebp+0x8]
  414a28:	xor    edx,eax
  414a2a:	add    edx,esi
  414a2c:	jne    0x4149b5
  414a32:	mov    edx,DWORD PTR [ebp-0x14]
  414a35:	mov    DWORD PTR [ebp+0x8],edx
  414a38:	jmp    0x414aad
  414a3d:	mov    edx,DWORD PTR [ebp+0x8]
  414a40:	mov    ebx,DWORD PTR [ebp-0x8]
  414a43:	xor    edx,eax
  414a45:	xor    ebx,eax
  414a47:	sub    edx,ebx
  414a49:	sub    edx,esi
  414a4b:	xor    edx,eax
  414a4d:	mov    DWORD PTR [ebp+0x8],edx
  414a50:	mov    edx,DWORD PTR [ebp+0x8]
  414a53:	mov    ebx,DWORD PTR [ebp-0x58]
  414a56:	add    edx,0x5708e2
  414a5c:	imul   edx,ebx
  414a5f:	mov    DWORD PTR [ebp-0x58],edx
  414a62:	mov    edx,DWORD PTR [ebp+0x8]
  414a65:	mov    ebx,DWORD PTR [ebp-0x54]
  414a68:	add    edx,0x64f89c
  414a6e:	or     edx,ebx
  414a70:	mov    DWORD PTR [ebp-0x54],edx
  414a73:	mov    edx,DWORD PTR [ebp+0x8]
  414a76:	mov    ebx,DWORD PTR [ebp-0x50]
  414a79:	add    edx,ecx
  414a7b:	xor    edx,ebx
  414a7d:	mov    DWORD PTR [ebp-0x50],edx
  414a80:	mov    edx,DWORD PTR [ebp+0x8]
  414a83:	mov    ebx,DWORD PTR [ebp-0x4c]
  414a86:	add    edx,edi
  414a88:	and    edx,ebx
  414a8a:	mov    DWORD PTR [ebp-0x4c],edx
  414a8d:	mov    edx,DWORD PTR [ebp+0x8]
  414a90:	mov    ebx,DWORD PTR [ebp-0x48]
  414a93:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a9a:	mov    DWORD PTR [ebp-0x48],edx
  414a9d:	mov    edx,DWORD PTR [ebp+0x8]
  414aa0:	mov    ebx,0xfa5e1528
  414aa5:	sub    ebx,edx
  414aa7:	add    ebx,DWORD PTR [ebp-0x44]
  414aaa:	mov    DWORD PTR [ebp-0x44],ebx
  414aad:	mov    edx,DWORD PTR [ebp+0x8]
  414ab0:	xor    edx,eax
  414ab2:	add    edx,esi
  414ab4:	jne    0x414a3d
  414aba:	mov    edx,DWORD PTR [ebp-0x8]
  414abd:	mov    ebx,DWORD PTR [ebp-0xc]
  414ac0:	xor    edx,eax
  414ac2:	lea    edx,[edx+ebx*1+0x3272f3]
  414ac9:	mov    DWORD PTR [ebp-0xc],edx
  414acc:	mov    edx,DWORD PTR [ebp-0x10]
  414acf:	xor    edx,eax
  414ad1:	add    edx,esi
  414ad3:	jne    0x41224b
  414ad9:	jmp    0x41b68b
  414ade:	mov    ecx,DWORD PTR [ebp-0x14]
  414ae1:	mov    DWORD PTR [ebp+0x8],ecx
  414ae4:	jmp    0x414b5d
  414ae9:	mov    ecx,DWORD PTR [ebp+0x8]
  414aec:	mov    edx,DWORD PTR [ebp-0x8]
  414aef:	xor    ecx,eax
  414af1:	xor    edx,eax
  414af3:	sub    ecx,edx
  414af5:	sub    ecx,esi
  414af7:	xor    ecx,eax
  414af9:	mov    DWORD PTR [ebp+0x8],ecx
  414afc:	mov    ecx,DWORD PTR [ebp+0x8]
  414aff:	mov    edx,DWORD PTR [ebp-0x58]
  414b02:	add    ecx,0x5708e2
  414b08:	imul   ecx,edx
  414b0b:	mov    DWORD PTR [ebp-0x58],ecx
  414b0e:	mov    ecx,DWORD PTR [ebp+0x8]
  414b11:	mov    edx,DWORD PTR [ebp-0x54]
  414b14:	add    ecx,0x64f89c
  414b1a:	or     ecx,edx
  414b1c:	mov    DWORD PTR [ebp-0x54],ecx
  414b1f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b22:	mov    edx,DWORD PTR [ebp-0x50]
  414b25:	add    ecx,0x242ebcd
  414b2b:	xor    ecx,edx
  414b2d:	mov    DWORD PTR [ebp-0x50],ecx
  414b30:	mov    ecx,DWORD PTR [ebp+0x8]
  414b33:	mov    edx,DWORD PTR [ebp-0x4c]
  414b36:	add    ecx,edi
  414b38:	and    ecx,edx
  414b3a:	mov    DWORD PTR [ebp-0x4c],ecx
  414b3d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b40:	mov    edx,DWORD PTR [ebp-0x48]
  414b43:	lea    ecx,[edx+ecx*1+0x241fcdf]
  414b4a:	mov    DWORD PTR [ebp-0x48],ecx
  414b4d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b50:	mov    edx,0xfa5e1528
  414b55:	sub    edx,ecx
  414b57:	add    edx,DWORD PTR [ebp-0x44]
  414b5a:	mov    DWORD PTR [ebp-0x44],edx
  414b5d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b60:	xor    ecx,eax
  414b62:	add    ecx,esi
  414b64:	jne    0x414ae9
  414b6a:	jmp    0x41b697
  414b6f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b72:	mov    edx,DWORD PTR [ebp-0x8]
  414b75:	xor    ecx,eax
  414b77:	jmp    0x416f00
  414b7c:	repnz mov esi,esp
  414b7f:	repz add BYTE PTR [esi+eiz*8-0x19361778],0xd3
  414b88:	and    DWORD PTR [edi-0x8],0x8267ff54
  414b8f:	adc    DWORD PTR [edi],0x5c
  414b92:	add    DWORD PTR [ebx+0x31978985],0x7a
  414b99:	mov    eax,0x98a24da0
  414b9e:	ret    0xfab9
  414ba1:	or     DWORD PTR [eax+0xfe8e895],eax
  414ba7:	sub    BYTE PTR [edi+0x7f],ch
  414baa:	pushf  
  414bab:	shl    esi,0xd9
  414bae:	gs scas eax,DWORD PTR es:[edi]
  414bb0:	or     ecx,DWORD PTR [ecx-0x42]
  414bb3:	push   esi
  414bb4:	mov    ebx,0x3706ced0
  414bb9:	or     BYTE PTR [ebx-0x15],dh
  414bbc:	(bad)  
  414bbd:	jmp    0xcb0c:0xf96a3e3a
  414bc4:	pop    ss
  414bc5:	or     ecx,DWORD PTR [esi+0x7935b51b]
  414bcb:	inc    esi
  414bcc:	push   esp
  414bcd:	rcr    BYTE PTR [ebx],0x86
  414bd0:	xor    eax,0xdbb799f3
  414bd5:	mov    BYTE PTR [ebx],dl
  414bd7:	popf   
  414bd8:	mov    eax,0x979fb364
  414bdd:	das    
  414bde:	pop    esp
  414bdf:	pop    ds
  414be0:	aaa    
  414be1:	mov    edi,0x42e8b870
  414be6:	ins    BYTE PTR es:[edi],dx
  414be7:	dec    eax
  414be8:	in     al,0xa6
  414bea:	stc    
  414beb:	cmp    DWORD PTR [ecx-0x40],esi
  414bee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bef:	jno    0x414bd5
  414bf1:	shr    esp,cl
  414bf3:	dec    esp
  414bf4:	push   ss
  414bf5:	mov    WORD PTR [esi+0x17],es
  414bf8:	adc    al,0x2e
  414bfa:	stc    
  414bfb:	retf   
  414bfc:	data16 hlt 
  414bfe:	cmp    al,0x1d
  414c00:	add    DWORD PTR [esi+0x1a],edx
  414c03:	pop    edi
  414c04:	(bad)  
  414c05:	cmp    ebx,DWORD PTR [edx+0x40cbc927]
  414c0b:	(bad)  
  414c0c:	mov    bl,0x23
  414c0e:	cmp    DWORD PTR [eax],0xdfe6e813
  414c14:	sbb    al,cl
  414c16:	test   eax,0xf87aac60
  414c1b:	repnz std 
  414c1d:	lock push esp
  414c1f:	mov    DWORD PTR [esi],ebp
  414c21:	sti    
  414c22:	out    0xce,al
  414c24:	dec    eax
  414c25:	push   ebx
  414c26:	in     eax,dx
  414c27:	xchg   ebx,eax
  414c28:	outs   dx,DWORD PTR ds:[esi]
  414c29:	mov    ds:0xb3a4ec4c,eax
  414c2e:	or     al,0x2e
  414c30:	sti    
  414c31:	mov    ?,WORD PTR [edi+0x2802795b]
  414c37:	pop    ds
  414c38:	jb     0x414c04
  414c3a:	push   esi
  414c3b:	not    DWORD PTR [ecx]
  414c3d:	lock sub ebx,DWORD PTR [ecx+0x5e]
  414c41:	adc    esi,esi
  414c43:	mov    ebx,0x9296cb05
  414c48:	clc    
  414c49:	xchg   DWORD PTR [eax-0x28],ecx
  414c4c:	xor    BYTE PTR [edi-0x359a388f],al
  414c52:	shl    BYTE PTR [edx-0xaf8cd46],1
  414c58:	inc    ecx
  414c59:	dec    ecx
  414c5a:	mov    DWORD PTR [ebx+0x57],edi
  414c5d:	inc    edi
  414c5e:	imul   edx,DWORD PTR [edx],0x966303d5
  414c64:	int3   
  414c65:	push   ebp
  414c66:	inc    ecx
  414c67:	mov    dl,ch
  414c69:	push   ebx
  414c6a:	iret   
  414c6b:	in     eax,dx
  414c6c:	dec    eax
  414c6d:	adc    eax,0x84c7cce6
  414c72:	leave  
  414c73:	cs in  eax,dx
  414c75:	lock xor ah,BYTE PTR [ebp-0x14382879]
  414c7c:	sbb    esi,DWORD PTR [ebx-0x4e]
  414c7f:	add    cl,ch
  414c81:	repnz icebp 
  414c83:	ds loop 0x414cf1
  414c86:	adc    edx,edi
  414c88:	scas   eax,DWORD PTR es:[edi]
  414c89:	mov    edx,0x8c0532db
  414c8e:	sbb    dh,dh
  414c90:	fbstp  TBYTE PTR [esi]
  414c92:	mov    edi,0x5433ff17
  414c97:	stos   BYTE PTR es:[edi],al
  414c98:	or     eax,0x980a1cf8
  414c9d:	in     al,dx
  414c9e:	sbb    al,0xff
  414ca0:	mov    si,0x30d2
  414ca4:	dec    ebp
  414ca5:	retf   0xcbf2
  414ca8:	dec    edx
  414ca9:	pop    esi
  414caa:	arpl   di,si
  414cac:	repz jp 0x414c3a
  414caf:	je     0x414ca0
  414cb1:	mov    al,0x20
  414cb3:	cmp    bh,al
  414cb5:	cli    
  414cb6:	lock fidiv DWORD PTR [esi+eax*4-0x6a2566c9]
  414cbe:	mov    BYTE PTR [ebp+0x3e0d7b3b],dh
  414cc4:	jno    0x414d37
  414cc6:	dec    ebp
  414cc7:	jne    0x414c7f
  414cc9:	mov    ds:0x3d9c321f,eax
  414cce:	sahf   
  414ccf:	lds    ecx,FWORD PTR [eax+0x7f64611e]
  414cd5:	leave  
  414cd6:	(bad)  
  414cd7:	mov    ds:0x24859af2,al
  414cdc:	mov    ds:0x3f71f318,al
  414ce1:	pop    esi
  414ce2:	push   0x7d
  414ce4:	js     0x414cb8
  414ce6:	stos   BYTE PTR es:[edi],al
  414ce7:	nop
  414ce8:	stos   BYTE PTR es:[edi],al
  414ce9:	fcom   QWORD PTR [ecx]
  414ceb:	scas   eax,DWORD PTR es:[edi]
  414cec:	sbb    BYTE PTR [ecx-0x33],bh
  414cef:	ficomp DWORD PTR [ebx-0x6833dd16]
  414cf5:	imul   edi,DWORD PTR [ebx-0x4e],0x348d2b69
  414cfc:	cld    
  414cfd:	adc    BYTE PTR [ecx+0x4a],dh
  414d00:	std    
  414d01:	mov    esi,0x4ed4d796
  414d06:	mov    al,ds:0x2e348d60
  414d0b:	arpl   WORD PTR ds:0x1bfb58a4,dx
  414d11:	dec    ebp
  414d12:	jmp    0x414d54
  414d14:	sbb    BYTE PTR ds:0xeda6db53,al
  414d1a:	lds    ecx,FWORD PTR [edx+0x6f]
  414d1d:	retf   0x3dd7
  414d20:	adc    BYTE PTR [ecx],bl
  414d22:	jl     0x414ce3
  414d24:	(bad)  
  414d25:	or     al,0x9d
  414d27:	inc    edx
  414d28:	jne    0x414cb8
  414d2a:	or     eax,0xbbe4b5fa
  414d2f:	or     al,0xc
  414d31:	stos   BYTE PTR es:[edi],al
  414d32:	enter  0x114f,0x5b
  414d36:	nop
  414d37:	inc    edx
  414d38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d39:	addr16 mov al,ds:0x575a
  414d3d:	jae    0x414ccd
  414d3f:	or     BYTE PTR [esi+0x2],cl
  414d42:	jnp    0x414d5a
  414d44:	rcr    DWORD PTR [ebp-0x344a9163],1
  414d4a:	pop    es
  414d4b:	outs   dx,DWORD PTR ds:[esi]
  414d4c:	cmp    eax,edx
  414d4e:	jbe    0x414d76
  414d50:	xchg   ecx,eax
  414d51:	and    ebx,DWORD PTR [edi+0x2ab7ce5]
  414d57:	or     BYTE PTR [eax+ecx*2],cl
  414d5a:	scas   al,BYTE PTR es:[edi]
  414d5b:	loopne 0x414cde
  414d5d:	mov    DWORD PTR [ecx],edx
  414d5f:	in     al,0x60
  414d61:	int3   
  414d62:	shl    BYTE PTR [ebx-0x53],0xb3
  414d66:	sub    al,0x47
  414d68:	xchg   BYTE PTR [ebx+ebp*2],bh
  414d6b:	push   ds
  414d6c:	or     BYTE PTR [ebx],0x2e
  414d6f:	inc    esp
  414d70:	and    al,0xf8
  414d72:	dec    ecx
  414d73:	jno    0x414d52
  414d75:	rol    BYTE PTR [edi-0x707bb52f],0x40
  414d7c:	sbb    al,0xd8
  414d7e:	ds clc 
  414d80:	cmp    eax,0xf3e3a213
  414d85:	sbb    BYTE PTR [ecx],0x82
  414d88:	sbb    ch,ch
  414d8a:	mov    ah,0x40
  414d8c:	and    DWORD PTR [edi+0x2e],esp
  414d8f:	fiadd  WORD PTR [ecx]
  414d91:	repnz and BYTE PTR [esi-0x33e23956],ch
  414d98:	jl     0x414d6b
  414d9a:	ss xchg ebx,eax
  414d9c:	mov    bh,0xa0
  414d9e:	retf   0xdcb3
  414da1:	ins    BYTE PTR es:[edi],dx
  414da2:	adc    cl,BYTE PTR [eax]
  414da4:	inc    edx
  414da5:	xchg   ecx,eax
  414da6:	mul    BYTE PTR [ecx-0x7f]
  414da9:	in     eax,dx
  414daa:	adc    bh,BYTE PTR [ebx]
  414dac:	arpl   WORD PTR [esp+ecx*8],bp
  414daf:	pop    eax
  414db0:	and    al,0x74
  414db2:	inc    eax
  414db3:	cdq    
  414db4:	pop    ebx
  414db5:	xor    DWORD PTR ds:0x642459be,esi
  414dbb:	xchg   ebx,eax
  414dbc:	cmc    
  414dbd:	cmp    ebx,DWORD PTR [eax]
  414dbf:	test   DWORD PTR [ecx-0x1f],ebx
  414dc2:	xchg   DWORD PTR [ecx-0x7bab00d7],ebx
  414dc8:	ins    BYTE PTR es:[edi],dx
  414dc9:	sbb    BYTE PTR [edx+0x6db832bc],ch
  414dcf:	adc    DWORD PTR [ebx+ebx*8+0x70],ebp
  414dd3:	inc    ecx
  414dd4:	mov    edx,0xbf706679
  414dd9:	outs   dx,DWORD PTR ds:[esi]
  414dda:	pop    eax
  414ddb:	iret   
  414ddc:	or     cl,BYTE PTR [esp+ebx*4+0x502e31b3]
  414de3:	imul   eax,DWORD PTR [eax-0x28f96ca7],0xffffffd9
  414dea:	and    DWORD PTR [edi],0x41
  414ded:	inc    ecx
  414dee:	(bad)  
  414def:	scas   al,BYTE PTR es:[edi]
  414df0:	xchg   esp,eax
  414df1:	dec    edx
  414df2:	adc    eax,0x12be126b
  414df7:	mov    WORD PTR [edi+0x79],?
  414dfa:	mov    cl,0xbb
  414dfc:	xor    DWORD PTR [ebx-0x7a],0x6a
  414e00:	sbb    BYTE PTR [ebx-0x54],al
  414e03:	add    BYTE PTR [edx+eiz*4+0x5bcba888],ah
  414e0a:	dec    ebx
  414e0b:	ffree  st(5)
  414e0d:	mov    al,0x6f
  414e0f:	pusha  
  414e10:	mov    ebp,0x557141ff
  414e15:	cdq    
  414e16:	mov    DWORD PTR [ebp-0x183a95f7],edx
  414e1c:	popa   
  414e1d:	mov    ebp,0x563bb453
  414e22:	add    al,0xb8
  414e24:	fnstenv [ecx]
  414e26:	dec    edi
  414e27:	adc    DWORD PTR ds:0x95066835,eax
  414e2d:	inc    esp
  414e2e:	and    al,bh
  414e30:	sub    al,BYTE PTR es:[edx]
  414e33:	adc    al,0x78
  414e35:	stos   DWORD PTR es:[edi],eax
  414e36:	mov    dl,0xce
  414e38:	push   ebx
  414e39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e3a:	sbb    al,0xf3
  414e3c:	inc    esi
  414e3d:	adc    eax,0x63da0cab
  414e42:	mov    ch,0x47
  414e44:	jns    0x414e98
  414e46:	test   BYTE PTR [esi],cl
  414e48:	inc    eax
  414e49:	fist   DWORD PTR ss:[ebx-0x6aa4761c]
  414e50:	adc    BYTE PTR [ecx],0x9a
  414e53:	mov    ds,WORD PTR [edx]
  414e55:	loop   0x414ecc
  414e57:	add    DWORD PTR [ecx+0x47],0xffffff95
  414e5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e5c:	mov    edx,0xa2e72974
  414e61:	inc    esi
  414e62:	xchg   esi,eax
  414e63:	popf   
  414e64:	in     eax,0x6e
  414e66:	cmp    ebx,esi
  414e68:	push   edi
  414e69:	test   esi,edx
  414e6b:	sahf   
  414e6c:	fld    QWORD PTR [edx-0x26]
  414e6f:	adc    al,0x89
  414e71:	mov    bl,0xb2
  414e73:	jmp    FWORD PTR [edi]
  414e75:	scas   eax,DWORD PTR es:[edi]
  414e76:	mov    ds:0x5ce47c33,al
  414e7b:	and    DWORD PTR [eax],edi
  414e7d:	xchg   esi,eax
  414e7e:	or     edi,ebp
  414e80:	loop   0x414e12
  414e82:	cmp    eax,eax
  414e84:	inc    ecx
  414e85:	ds (bad) 
  414e87:	fmul   DWORD PTR [eax+0x4fa60cfb]
  414e8d:	out    dx,eax
  414e8e:	fisttp WORD PTR [eax-0x21e9bc7d]
  414e94:	mov    gs,WORD PTR [edi-0x4f]
  414e97:	jl     0x414e40
  414e99:	inc    ebx
  414e9a:	repz mov ch,0xbe
  414e9d:	stc    
  414e9e:	jle    0x414e2e
  414ea0:	cmp    dh,BYTE PTR [edi]
  414ea2:	fdivr  DWORD PTR [ebp+0x74a66894]
  414ea8:	cmp    ebp,DWORD PTR [edi+0x2803e0a4]
  414eae:	in     al,0xea
  414eb0:	push   cs
  414eb1:	lds    edx,FWORD PTR [edx-0x57567d20]
  414eb7:	adc    BYTE PTR [edx+0x1b265ea],bl
  414ebd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ebe:	push   eax
  414ebf:	fadd   QWORD PTR [eax+0x55b68e69]
  414ec5:	xchg   edx,eax
  414ec6:	sbb    al,0x64
  414ec8:	aad    0xc0
  414eca:	out    dx,eax
  414ecb:	inc    ebx
  414ecc:	push   0x82b3a70d
  414ed1:	leave  
  414ed2:	lods   eax,DWORD PTR ds:[esi]
  414ed3:	add    ebx,ebx
  414ed5:	cli    
  414ed6:	mov    esp,0x8339d315
  414edb:	out    dx,al
  414edc:	mov    dh,0x97
  414ede:	stos   BYTE PTR es:[edi],al
  414edf:	mov    BYTE PTR ss:[edx+0x3b2a3d6d],bl
  414ee6:	in     al,0x9c
  414ee8:	or     BYTE PTR [ebx+eiz*2+0x42],ah
  414eec:	add    DWORD PTR [ecx],ebp
  414eee:	nop
  414eef:	inc    esp
  414ef0:	pusha  
  414ef1:	cwde   
  414ef2:	jmp    0x414f03
  414ef4:	and    al,0x6f
  414ef6:	xchg   edi,eax
  414ef7:	fadd   st(7),st
  414ef9:	ret    
  414efa:	dec    ecx
  414efb:	lea    ebx,ds:0x5dc2c528
  414f01:	and    ebx,DWORD PTR [edx+ecx*8]
  414f04:	ret    0x4677
  414f07:	inc    esp
  414f08:	pop    ebx
  414f09:	inc    edx
  414f0a:	push   0xffffffdb
  414f0c:	xor    DWORD PTR [eax],ebx
  414f0e:	sbb    cl,BYTE PTR [ebp+0x599c9ded]
  414f14:	sub    edi,DWORD PTR [ebx-0x4f61cced]
  414f1a:	jmp    0xa6fe:0x2ab6f1f8
  414f21:	jmp    0x414f10
  414f23:	cmp    eax,0xc69917c9
  414f28:	inc    ebx
  414f29:	push   ecx
  414f2a:	imul   edx,DWORD PTR [edx+0x3d],0xab070e74
  414f31:	xchg   esp,eax
  414f32:	pop    ss
  414f33:	sbb    BYTE PTR [edi],dh
  414f35:	(bad)  
  414f36:	leave  
  414f37:	scas   al,BYTE PTR es:[edi]
  414f38:	out    dx,al
  414f39:	out    dx,al
  414f3a:	lea    esp,[esi-0x5f9d9a29]
  414f40:	hlt    
  414f41:	(bad)  
  414f42:	pop    ebp
  414f43:	mov    bh,0xc8
  414f45:	jp     0x414f46
  414f47:	jg     0x414f91
  414f49:	pop    ebp
  414f4a:	cmp    eax,0xcca56895
  414f4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f50:	xor    cl,BYTE PTR [ecx]
  414f52:	xchg   ecx,eax
  414f53:	jge    0x414f20
  414f55:	ror    BYTE PTR [esi],cl
  414f57:	neg    BYTE PTR gs:[ecx-0x37]
  414f5b:	jge    0x414edf
  414f5d:	stos   DWORD PTR es:[edi],eax
  414f5e:	cmp    esp,eax
  414f60:	out    dx,al
  414f61:	jnp    0x414f17
  414f63:	pop    ebx
  414f64:	ja     0x414efd
  414f66:	addr16 ret 
  414f68:	jge    0x414f49
  414f6a:	jmp    0x23db:0x9b541973
  414f71:	imul   ecx,DWORD PTR [esi+0x6d],0xffffffb7
  414f75:	and    eax,0xb9d8db74
  414f7a:	aas    
  414f7b:	cdq    
  414f7c:	mov    dh,0x78
  414f7e:	mov    dl,0xbb
  414f80:	sub    eax,DWORD PTR [esi]
  414f82:	push   es
  414f83:	in     al,dx
  414f84:	test   bl,bh
  414f86:	rol    ch,1
  414f88:	scas   eax,DWORD PTR es:[edi]
  414f89:	fnsave [ecx+0x3133ec3b]
  414f8f:	nop
  414f90:	inc    ebp
  414f91:	and    DWORD PTR [eax-0x6f90d87f],edx
  414f97:	cmc    
  414f98:	xchg   eax,ebp
  414f9a:	scas   eax,DWORD PTR es:[edi]
  414f9b:	xchg   DWORD PTR [edx],ebx
  414f9d:	jb     0x414fc4
  414f9f:	ins    DWORD PTR es:[edi],dx
  414fa0:	ror    DWORD PTR [ebp-0x6a],cl
  414fa3:	into   
  414fa4:	ret    0xee6a
  414fa7:	js     0x414f7b
  414fa9:	xchg   edx,eax
  414faa:	(bad)  
  414fab:	adc    bl,dh
  414fad:	aad    0x89
  414faf:	cmp    eax,0x8c6e1b5d
  414fb4:	or     al,0xf0
  414fb6:	jne    0x414fe1
  414fb8:	dec    ebx
  414fb9:	mov    bh,0x66
  414fbb:	(bad)  
  414fbd:	cmp    ebx,esp
  414fbf:	fbld   TBYTE PTR [edi-0x60]
  414fc2:	sub    dl,BYTE PTR ds:0x19780d7c
  414fc8:	addr16 ss retf 
  414fcb:	sbb    al,0xd7
  414fcd:	or     al,0xe
  414fcf:	jge    0x414fe5
  414fd1:	div    bh
  414fd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fd4:	and    BYTE PTR [esp+eax*4],ah
  414fd7:	mov    cl,0x2a
  414fd9:	inc    edx
  414fda:	pop    ss
  414fdb:	xchg   ecx,eax
  414fdc:	xchg   ecx,eax
  414fdd:	or     eax,0x6120b135
  414fe2:	out    0xad,al
  414fe4:	out    dx,al
  414fe5:	retf   0x243
  414fe8:	mov    al,ds:0x57ade1e1
  414fed:	push   ebx
  414fee:	fs mov esp,0xe1e0ed82
  414ff4:	jmp    0x41500a
  414ff6:	push   edx
  414ff7:	jmp    0x414fac
  414ff9:	push   ss
  414ffa:	or     bl,BYTE PTR ds:0xed4cbe0f
  415000:	fnstenv [edi-0x78]
  415003:	sbb    eax,0xdb0bd451
  415008:	or     cl,ah
  41500a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41500b:	mov    dl,0x85
  41500d:	into   
  41500e:	(bad)  
  41500f:	fadd   DWORD PTR [ebx-0x3a]
  415012:	pop    ss
  415013:	push   ecx
  415014:	shl    esi,cl
  415016:	sar    BYTE PTR [esi-0x23],0xd7
  41501a:	xchg   edi,eax
  41501b:	sbb    DWORD PTR [esi+0x11],ebx
  41501e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41501f:	fcom   QWORD PTR [ecx+0x3f9e9edf]
  415025:	into   
  415026:	jae    0x415034
  415028:	aas    
  415029:	lds    esi,FWORD PTR [edi-0x6309159b]
  41502f:	sub    eax,0x7259cddf
  415034:	mov    al,BYTE PTR [ebp-0x27]
  415037:	adc    eax,0x2cfd85c4
  41503c:	pop    es
  41503d:	jg     0x415021
  41503f:	mov    ebp,0xd0bcf6e6
  415044:	push   cs
  415045:	aas    
  415046:	mov    bh,0x67
  415048:	sub    dh,bh
  41504a:	inc    esi
  41504b:	sti    
  41504c:	adc    al,0xc4
  41504e:	pop    es
  41504f:	push   ebx
  415050:	sub    al,bl
  415052:	imul   ecx,DWORD PTR [esp+edi*4+0x47d8dada],0x7c
  41505a:	adc    edi,DWORD PTR [esi+ecx*4+0x40]
  41505e:	inc    ebx
  41505f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415060:	imul   esi,ebp,0x4e
  415063:	shl    BYTE PTR [eax],0x37
  415066:	dec    ecx
  415067:	fsub   st,st(6)
  415069:	retf   0x12cd
  41506c:	mov    dh,0x78
  41506e:	ja     0x415042
  415070:	and    al,0xc4
  415072:	xchg   ch,dh
  415074:	dec    ecx
  415075:	cli    
  415076:	arpl   WORD PTR [edx],bx
  415078:	ins    DWORD PTR es:[edi],dx
  415079:	or     DWORD PTR [ebp+ebx*2+0x16],edi
  41507d:	push   cs
  41507e:	dec    edi
  41507f:	push   ecx
  415080:	repnz arpl WORD PTR [eax+0x22f56318],bx
  415087:	and    ebp,eax
  415089:	ins    BYTE PTR es:[edi],dx
  41508a:	mov    cl,0xfd
  41508c:	cmp    al,cl
  41508e:	inc    edx
  41508f:	xchg   esi,eax
  415090:	or     ebp,DWORD PTR [eax-0x365faa93]
  415096:	xchg   ebp,eax
  415097:	out    dx,al
  415098:	add    eax,0x10e9201c
  41509d:	pusha  
  41509e:	cmc    
  41509f:	push   cs
  4150a0:	stos   BYTE PTR es:[edi],al
  4150a1:	lock adc cl,BYTE PTR [ecx]
  4150a4:	xchg   edi,eax
  4150a5:	jl     0x4150d5
  4150a7:	dec    ebp
  4150a8:	outs   dx,BYTE PTR ds:[esi]
  4150a9:	outs   dx,DWORD PTR ds:[esi]
  4150aa:	mov    esi,DWORD PTR [ebp+0x78]
  4150ad:	out    0x1c,eax
  4150af:	xchg   DWORD PTR [ecx-0x73568151],edi
  4150b5:	push   edi
  4150b6:	push   ecx
  4150b7:	scas   eax,DWORD PTR es:[edi]
  4150b8:	ret    
  4150b9:	cmp    ebx,DWORD PTR [eax-0x4b]
  4150bc:	mov    cl,0x2
  4150be:	mov    ah,0xb6
  4150c0:	push   0xc5043b79
  4150c5:	fs add edx,edx
  4150c8:	imul   esp,DWORD PTR [esp+edx*1+0xc],0x4c300635
  4150d0:	jge    0x41512e
  4150d2:	xor    DWORD PTR [ecx],esp
  4150d4:	jecxz  0x415131
  4150d6:	jmp    0x3fa97085
  4150db:	fsubr  QWORD PTR [ecx-0x43]
  4150de:	push   0x27
  4150e0:	shr    BYTE PTR [edi+esi*1+0x74],0xc6
  4150e5:	ficom  DWORD PTR [ecx]
  4150e7:	push   ebp
  4150e8:	sub    dh,BYTE PTR [edx+0x30]
  4150eb:	cmp    edi,DWORD PTR [edi-0x1821fca0]
  4150f1:	ret    0xc22b
  4150f4:	les    edi,FWORD PTR [ecx+0x48b4c34a]
  4150fa:	loopne 0x4150e0
  4150fc:	mov    eax,ds:0xd73d9c6e
  415101:	or     eax,0x924b259c
  415106:	jae    0x41510a
  415108:	jb     0x415151
  41510a:	repnz test DWORD PTR [edx],0xe4c4cc53
  415111:	fs jb  0x4150ec
  415114:	jbe    0x415183
  415116:	jg     0x415163
  415118:	imul   edi,DWORD PTR cs:[edi-0x29],0x6
  41511d:	mov    bl,0xaf
  41511f:	jecxz  0x4150d2
  415121:	test   al,0xf
  415123:	aam    0x1
  415125:	daa    
  415126:	jno    0x415193
  415128:	test   DWORD PTR [esi+eiz*4+0x13],esp
  41512c:	adc    DWORD PTR [ebx+0x3c],ecx
  41512f:	mov    al,ds:0x110850d9
  415134:	fimul  DWORD PTR [eax]
  415136:	mov    esp,0x9cc6f5a3
  41513b:	add    al,0x4c
  41513d:	adc    BYTE PTR [eax],ch
  41513f:	jne    0x415155
  415141:	and    cl,BYTE PTR ds:0x1fe5b966
  415147:	(bad)  
  415149:	sti    
  41514a:	add    eax,0x7aea49b
  41514f:	aad    0x45
  415151:	hlt    
  415152:	jg     0x4151d2
  415154:	jmp    0x415195
  415156:	pxor   mm3,QWORD PTR [ecx]
  415159:	jmp    DWORD PTR [edi+0x6a]
  41515c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41515d:	pop    esp
  41515e:	jno    0x41511f
  415160:	mov    al,0x72
  415162:	jo     0x415189
  415164:	pop    ss
  415165:	arpl   di,ax
  415167:	mov    dl,0xd0
  415169:	nop
  41516a:	xchg   esi,eax
  41516b:	inc    edx
  41516c:	arpl   cx,ax
  41516e:	push   edi
  41516f:	add    al,0x51
  415171:	inc    eax
  415172:	jp     0x41517f
  415174:	sub    DWORD PTR [esi+0x26],eax
  415177:	test   edx,esp
  415179:	ds sbb edi,ecx
  41517c:	(bad)  
  41517d:	cld    
  41517e:	lahf   
  41517f:	(bad)  
  415180:	and    eax,0x9be7a851
  415185:	fwait
  415186:	and    ebp,edx
  415188:	mov    ebp,0xcc7f3998
  41518d:	add    ch,BYTE PTR ss:[esi-0x7b]
  415191:	dec    edi
  415192:	call   0xb4ca:0xda13a3a2
  415199:	sub    ch,BYTE PTR [ebp-0x46]
  41519c:	fsubr  QWORD PTR [edi*4-0x7d87b536]
  4151a3:	cmp    DWORD PTR [edi-0xfb2fb58],0xd74ac372
  4151ad:	cmc    
  4151ae:	in     al,0xe7
  4151b0:	cmp    esi,eax
  4151b2:	xchg   ebx,eax
  4151b3:	fldcw  WORD PTR [ecx]
  4151b5:	add    al,0x52
  4151b7:	loope  0x415221
  4151b9:	in     al,0x79
  4151bb:	adc    ebx,esp
  4151bd:	div    BYTE PTR [edx+0x26]
  4151c0:	out    0x89,al
  4151c2:	sub    ch,BYTE PTR [edi+edi*2-0x4d4f3dd3]
  4151c9:	inc    ebp
  4151ca:	out    dx,al
  4151cb:	loopne 0x41515a
  4151cd:	cmp    dl,ah
  4151cf:	or     BYTE PTR [ebx-0x750991d4],0x8d
  4151d6:	jo     0x41516f
  4151d8:	xchg   dl,ch
  4151da:	popf   
  4151db:	aam    0x3d
  4151dd:	shr    DWORD PTR [ebx],cl
  4151df:	repnz test DWORD PTR ds:0x785c7e28,eax
  4151e6:	sbb    ch,bl
  4151e8:	cmc    
  4151e9:	jae    0x41522b
  4151eb:	out    dx,al
  4151ec:	pop    DWORD PTR [eax-0x35]
  4151ef:	xchg   esi,eax
  4151f1:	call   0xca0087ce
  4151f6:	mov    ebp,0x60add12
  4151fb:	mov    ds:0xcf4db4bc,eax
  415200:	xor    eax,0x36d90f15
  415205:	repz push ebp
  415207:	sbb    al,0x5e
  415209:	or     edi,edx
  41520b:	shl    DWORD PTR [ecx],cl
  41520d:	aam    0xb3
  41520f:	or     DWORD PTR [ebx+0x70f4780d],ecx
  415215:	arpl   WORD PTR [eax+0x1590a237],bp
  41521b:	mov    DWORD PTR [edi+0x72],esp
  41521e:	je     0x41520e
  415220:	sub    BYTE PTR [ecx+0x2d374253],0x63
  415227:	jo     0x41524f
  415229:	mov    ebx,0xaed65e91
  41522e:	fld    TBYTE PTR [ecx-0x3b]
  415231:	aam    0x28
  415233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415234:	int3   
  415235:	pushf  
  415236:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415237:	fwait
  415238:	sbb    al,0xb8
  41523a:	mov    BYTE PTR [edi-0x7871f844],ah
  415240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415241:	pop    edi
  415242:	in     eax,dx
  415243:	test   dl,ch
  415245:	repz mov dh,0x4c
  415248:	sar    dl,cl
  41524a:	pop    ecx
  41524b:	repz ja 0x415246
  41524e:	ja     0x415229
  415250:	adc    al,0x2
  415252:	sbb    BYTE PTR [esi-0x64],0xb9
  415256:	xchg   edi,eax
  415257:	and    DWORD PTR [ecx+eiz*2-0xa],0x2487276d
  41525f:	leave  
  415260:	jbe    0x415212
  415262:	sub    bl,bh
  415264:	stos   DWORD PTR es:[edi],eax
  415265:	jle    0x4152db
  415267:	mov    ds:0xf16c9a90,eax
  41526c:	push   edi
  41526d:	je     0x4152b7
  41526f:	xchg   ebx,eax
  415270:	push   ss
  415271:	inc    ecx
  415272:	js     0x41525f
  415274:	(bad)  
  415275:	lds    edi,FWORD PTR [edi-0x2489b659]
  41527b:	je     0x41528b
  41527d:	mov    ah,0xe6
  41527f:	les    edi,FWORD PTR [edi+0x37b640fa]
  415285:	fldenv [eax+0x25ebf06c]
  41528b:	or     eax,0xf8cb5624
  415290:	sbb    ebp,DWORD PTR [edx]
  415292:	mov    BYTE PTR [ecx+ecx*2+0x49],bh
  415296:	mov    ?,WORD PTR [ecx+edx*8+0x5e5c552f]
  41529d:	scas   eax,DWORD PTR es:[edi]
  41529e:	nop
  41529f:	xchg   esp,eax
  4152a0:	sbb    BYTE PTR [esi+esi*1+0x33],cl
  4152a4:	lea    edx,es:[esi]
  4152a7:	push   0x7762fea7
  4152ac:	inc    esp
  4152ad:	icebp  
  4152ae:	leave  
  4152af:	dec    esi
  4152b0:	mov    ds:0x2a3f110c,al
  4152b5:	or     DWORD PTR [edi+0x2d35a580],ecx
  4152bb:	xor    edx,DWORD PTR [bx+0x4b]
  4152bf:	dec    eax
  4152c0:	gs in  al,0xb1
  4152c3:	cmp    ch,0xbb
  4152c6:	adc    esp,edi
  4152c8:	test   al,0xa8
  4152ca:	out    0x11,al
  4152cc:	fisubr WORD PTR [ebp+0x66f36712]
  4152d2:	xchg   esi,eax
  4152d3:	stos   BYTE PTR es:[edi],al
  4152d4:	aas    
  4152d5:	outs   dx,BYTE PTR ds:[esi]
  4152d6:	sbb    cl,BYTE PTR [ebp+0x62f0728]
  4152dc:	sub    ecx,esi
  4152de:	iret   
  4152df:	(bad)  
  4152e0:	or     BYTE PTR [ebx-0x4c],ah
  4152e3:	loopne 0x4152bb
  4152e5:	mov    eax,0x3a9ad807
  4152ea:	mov    ds:0x50496ec1,al
  4152ef:	bound  ebx,QWORD PTR [esi]
  4152f1:	xor    al,0x6b
  4152f3:	hlt    
  4152f4:	mov    ds:0xdcf0ad21,eax
  4152f9:	and    dh,bh
  4152fb:	loope  0x415292
  4152fd:	mov    esp,0x3764f1e4
  415302:	or     eax,0xa3a7ebde
  415307:	adc    DWORD PTR [edx+edi*2+0xa376262],ebx
  41530e:	or     edi,ecx
  415310:	outs   dx,DWORD PTR gs:[esi]
  415312:	adc    esp,ecx
  415314:	mov    al,ds:0xf9283fad
  415319:	dec    eax
  41531a:	and    DWORD PTR [esi-0x598e7d40],0xffffffff
  415321:	scas   al,BYTE PTR es:[edi]
  415322:	pop    es
  415323:	cmp    bl,BYTE PTR [esi]
  415325:	dec    esp
  415326:	jbe    0x41534e
  415328:	js     0x41535c
  41532a:	int    0x2a
  41532c:	xchg   esp,eax
  41532d:	(bad)  
  41532e:	pop    esi
  41532f:	pushf  
  415330:	inc    eax
  415331:	out    dx,al
  415332:	or     al,0x8e
  415334:	mov    bl,0x72
  415336:	data16 xlat BYTE PTR ds:[ebx]
  415338:	jmp    0x15a8:0xa772dc43
  41533f:	fsubrp st(5),st
  415341:	(bad)  
  415343:	mov    al,0x5a
  415345:	es dec ecx
  415347:	cld    
  415348:	sbb    eax,0xad542401
  41534d:	ds sti 
  41534f:	or     BYTE PTR [ebx+0x70c6d348],bl
  415355:	aam    0x20
  415357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415358:	mov    al,0x8f
  41535a:	mov    bh,0xe6
  41535c:	(bad)  
  41535e:	xchg   ebx,eax
  41535f:	add    eax,0xa797d0e9
  415364:	(bad)  
  415366:	aad    0x67
  415368:	inc    eax
  415369:	inc    ebp
  41536a:	test   al,0x32
  41536c:	imul   edi,ebp,0xffffffa1
  41536f:	cld    
  415370:	mov    dh,0x1
  415372:	push   ss
  415373:	push   esp
  415374:	push   eax
  415375:	jmp    0x7715:0xc46875e3
  41537c:	inc    ebp
  41537d:	scas   al,BYTE PTR es:[edi]
  41537e:	cmp    cl,BYTE PTR [esi+0x44]
  415381:	mov    DWORD PTR [ebp+0x19],esp
  415384:	retf   
  415385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415386:	out    0x29,eax
  415388:	xchg   DWORD PTR [eax],ebp
  41538a:	lods   eax,DWORD PTR ds:[esi]
  41538b:	dec    eax
  41538c:	es es stos DWORD PTR es:[edi],eax
  41538f:	and    bh,ah
  415391:	sbb    bl,BYTE PTR [ebp-0x6f]
  415394:	mov    ah,0x69
  415396:	dec    ebx
  415397:	add    BYTE PTR [edi-0x1d],ch
  41539a:	lock shr bl,1
  41539d:	or     BYTE PTR [ebx+0x46],dl
  4153a0:	cmp    al,0x99
  4153a2:	outs   dx,DWORD PTR ds:[esi]
  4153a3:	les    edx,FWORD PTR ds:0x769453d0
  4153a9:	icebp  
  4153aa:	or     edi,edx
  4153ac:	mov    esi,0x6e89759f
  4153b1:	rcr    ch,cl
  4153b3:	mov    bh,0x18
  4153b5:	ret    
  4153b6:	sub    ecx,DWORD PTR [edi]
  4153b8:	xor    al,0xcb
  4153ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153bb:	arpl   WORD PTR [esi+0xf249480],ax
  4153c1:	add    al,0x40
  4153c3:	js     0x415441
  4153c5:	aas    
  4153c6:	push   eax
  4153c7:	inc    esi
  4153c8:	aas    
  4153c9:	int3   
  4153ca:	pop    ds
  4153cb:	jo     0x415376
  4153cd:	xlat   BYTE PTR ds:[ebx]
  4153ce:	(bad)  
  4153cf:	jne    0x4153a8
  4153d1:	sbb    ebp,edi
  4153d3:	hlt    
  4153d4:	push   0xb5697607
  4153d9:	sbb    ch,BYTE PTR [ebx]
  4153db:	mov    al,0x63
  4153dd:	xor    DWORD PTR [esp+edx*2],0x2a7b2504
  4153e4:	xchg   ebp,eax
  4153e5:	add    dl,BYTE PTR [esi-0x6411dfad]
  4153eb:	pop    edx
  4153ec:	pop    es
  4153ed:	loope  0x41541a
  4153ef:	loop   0x4153b1
  4153f1:	jae    0x415395
  4153f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153f4:	sub    ebx,ebp
  4153f6:	pop    esp
  4153f7:	pop    ebp
  4153f8:	or     eax,0x29109afc
  4153fd:	jmp    0x1855e583
  415402:	or     BYTE PTR [ecx],cl
  415404:	sub    DWORD PTR [edi+0x44],ecx
  415407:	(bad)  
  415408:	ficom  DWORD PTR [eax+0x33]
  41540b:	ret    
  41540c:	je     0x415460
  41540e:	popa   
  41540f:	gs cwde 
  415411:	cdq    
  415412:	push   eax
  415413:	dec    ecx
  415414:	mov    ebx,0x8794940b
  415419:	jge    0x415478
  41541b:	xchg   edx,eax
  41541c:	add    bh,BYTE PTR [edi-0x4e2d9eab]
  415422:	mov    DWORD PTR [edx],edi
  415424:	mov    cl,0x33
  415426:	push   es
  415427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415428:	mov    BYTE PTR [edi+0x2522a5ab],bl
  41542e:	mov    bl,0x34
  415430:	mov    edx,0x4897193c
  415435:	ds sbb eax,esi
  415438:	cli    
  415439:	or     eax,0x3bedaed8
  41543e:	cmc    
  41543f:	push   ebx
  415440:	xor    eax,0x28eae89b
  415445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415446:	call   0xe18f:0xce21c9cc
  41544d:	ret    
  41544e:	daa    
  41544f:	fist   DWORD PTR [ebp-0x3c848da9]
  415455:	push   ebx
  415456:	mov    DWORD PTR [eax],edx
  415458:	(bad)  
  415459:	retf   
  41545a:	push   ds
  41545b:	cmp    DWORD PTR [ebp+0x68a2b803],ebp
  415461:	jne    0x4154c2
  415463:	lahf   
  415464:	mov    dl,0xb1
  415466:	test   DWORD PTR [ebp-0x2],ecx
  415469:	xlat   BYTE PTR ds:[ebx]
  41546a:	mov    bl,BYTE PTR [ebx+0x21]
  41546d:	pop    esp
  41546e:	or     al,BYTE PTR [ebx-0x6e]
  415471:	dec    ebx
  415472:	lods   al,BYTE PTR ds:[esi]
  415473:	sbb    al,0xf9
  415475:	inc    ebx
  415476:	mov    bh,0x51
  415478:	rol    BYTE PTR [ebp-0x63],0x7a
  41547c:	dec    eax
  41547d:	push   ebp
  41547e:	jp     0x4154e7
  415480:	xchg   ebp,eax
  415481:	aam    0x4
  415483:	aad    0xbe
  415485:	xor    al,0xff
  415487:	mov    DWORD PTR ds:0x7cfcbda6,ecx
  41548d:	pop    esi
  41548e:	in     al,0x70
  415490:	stc    
  415491:	inc    edi
  415492:	(bad)  
  415493:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415494:	mov    cl,ah
  415496:	pop    es
  415497:	leave  
  415498:	pushf  
  415499:	adc    DWORD PTR [esi-0x71],esi
  41549c:	adc    al,0x98
  41549e:	lods   eax,DWORD PTR ds:[esi]
  41549f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154a0:	dec    edx
  4154a1:	call   0x5a4e:0xc68b
  4154a7:	repz loopne 0x415486
  4154aa:	les    eax,FWORD PTR [esi+0x58]
  4154ad:	mov    edx,0x66f5a1c1
  4154b2:	test   al,0xed
  4154b4:	dec    ecx
  4154b5:	test   DWORD PTR [ebx],eax
  4154b7:	inc    esi
  4154b8:	in     al,0xea
  4154ba:	aam    0x80
  4154bc:	sub    ecx,esi
  4154be:	lea    edx,[ebp+0x2065eab]
  4154c4:	inc    edi
  4154c5:	mov    ch,0xff
  4154c7:	jp     0x415482
  4154c9:	xchg   ecx,eax
  4154ca:	dec    eax
  4154cb:	shl    BYTE PTR [ecx],cl
  4154cd:	je     0x41546c
  4154cf:	add    eax,0x35fe1c1
  4154d4:	sub    al,0x52
  4154d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154d7:	mov    bl,ah
  4154d9:	inc    esi
  4154da:	std    
  4154db:	push   ebp
  4154dc:	cmp    ebx,0xf5e7850f
  4154e2:	lods   al,BYTE PTR ds:[esi]
  4154e3:	(bad)  
  4154e4:	pop    ebx
  4154e5:	jl     0x415538
  4154e7:	in     eax,dx
  4154e8:	sbb    bh,al
  4154ea:	mov    ch,0x41
  4154ec:	out    0x19,al
  4154ee:	inc    ecx
  4154ef:	retf   0x138b
  4154f2:	push   0xac498340
  4154f7:	inc    edi
  4154f8:	bound  edx,QWORD PTR [edx]
  4154fa:	ret    
  4154fb:	push   edx
  4154fc:	xchg   ebx,eax
  4154fd:	dec    ebx
  4154fe:	add    cl,BYTE PTR [esp+esi*8]
  415501:	out    dx,al
  415502:	jg     0x415567
  415504:	push   0x22d525fa
  415509:	push   ebx
  41550a:	je     0x4154cb
  41550c:	xlat   BYTE PTR ds:[ebx]
  41550d:	and    eax,0x28a96aff
  415512:	mov    esp,0x57a202ee
  415517:	loope  0x41554b
  415519:	stc    
  41551a:	mov    BYTE PTR [ecx+0x3],0x71
  41551e:	sub    eax,0xc5e9e4f9
  415523:	add    BYTE PTR [esi-0x7eb2ac23],0x1e
  41552a:	sti    
  41552b:	(bad)  
  41552c:	and    DWORD PTR [edi],ebx
  41552e:	sbb    BYTE PTR [edi+ebx*1],bl
  415531:	add    BYTE PTR [ebx+0x4346ea5e],cl
  415537:	shr    BYTE PTR [esi+0x583e562b],0xac
  41553e:	sbb    dh,BYTE PTR [edi]
  415540:	or     esp,DWORD PTR [ecx-0x22]
  415543:	xchg   DWORD PTR [ecx-0x5a],esi
  415546:	or     BYTE PTR [edi+eiz*2],bl
  415549:	(bad)  
  41554a:	rcr    BYTE PTR [ebx+ecx*2+0x4a],1
  41554e:	dec    eax
  41554f:	out    0x24,al
  415551:	mov    cl,0x8c
  415553:	mov    ah,0xbe
  415555:	pushf  
  415556:	xchg   edi,eax
  415557:	jbe    0x4155d6
  415559:	sahf   
  41555a:	pop    ds
  41555b:	sub    al,0xc7
  41555d:	mov    bl,0x6c
  41555f:	in     eax,dx
  415560:	dec    ebx
  415561:	(bad)  [ebx]
  415563:	push   ss
  415564:	pop    edi
  415565:	or     BYTE PTR gs:[edx+edx*8-0x1b0fed6e],ch
  41556d:	cmp    eax,0xe45c1b7d
  415572:	inc    ebx
  415573:	(bad)  
  415574:	xor    BYTE PTR fs:[esi-0x5f],bh
  415578:	and    eax,0xea6a272d
  41557d:	mov    fs:0xfc7e35e4,eax
  415583:	sub    eax,DWORD PTR [eax-0x45493d41]
  415589:	into   
  41558a:	cld    
  41558b:	mov    cl,0xf9
  41558d:	rcr    al,0xa9
  415590:	jo     0x415586
  415592:	sbb    edx,esi
  415594:	xchg   BYTE PTR [esi-0x16],bl
  415597:	xor    DWORD PTR [edi-0x25],eax
  41559a:	or     dh,cl
  41559c:	mov    edi,0x6cdbe4e0
  4155a1:	mov    cl,ch
  4155a3:	jne    0x415537
  4155a5:	cmp    dl,al
  4155a7:	adc    bl,ah
  4155a9:	dec    ebx
  4155aa:	repnz repnz add BYTE PTR [ecx],ch
  4155ae:	in     al,dx
  4155af:	push   edi
  4155b0:	pop    ss
  4155b1:	cli    
  4155b2:	test   DWORD PTR ds:0xcc930282,esi
  4155b8:	shr    BYTE PTR [eax-0xc],1
  4155bb:	aam    0xf3
  4155bd:	pop    edi
  4155be:	mov    esi,0xbbe01d84
  4155c3:	jmp    0x4e3a:0xb4c44e1e
  4155ca:	cmc    
  4155cb:	sub    eax,0xfefaf286
  4155d0:	sbb    bl,BYTE PTR [edi+edx*1-0x590dc1d8]
  4155d7:	ss add al,0x3f
  4155da:	stc    
  4155db:	or     dh,bl
  4155dd:	sti    
  4155de:	sbb    eax,0x8b7ed631
  4155e3:	ss mov ch,0x74
  4155e6:	dec    eax
  4155e7:	pop    eax
  4155e8:	ret    0x5017
  4155eb:	lds    ecx,FWORD PTR [ecx+0x68]
  4155ee:	sub    al,0xe0
  4155f0:	fist   DWORD PTR [ecx-0x4a]
  4155f3:	xchg   esp,eax
  4155f4:	mov    ebx,0xbe6f77
  4155f9:	and    eax,0xa9534854
  4155fe:	sbb    DWORD PTR [eax+ebx*1],0x8c04d7ba
  415605:	mov    ebp,0xb2fc3011
  41560a:	test   esi,0x65c01a8c
  415610:	mov    ds:0xc1be0d65,eax
  415615:	xor    al,0xcd
  415617:	sbb    esi,esi
  415619:	cmp    eax,0x7e56c540
  41561e:	or     ch,BYTE PTR [ecx+0x5b]
  415621:	mov    ecx,esp
  415623:	ins    DWORD PTR es:[edi],dx
  415624:	fld    QWORD PTR [ecx+0x27]
  415627:	and    BYTE PTR [ebp+0x6b967838],dl
  41562d:	mov    bh,0xb9
  41562f:	xchg   ebp,eax
  415630:	sbb    bl,BYTE PTR [ecx]
  415632:	sti    
  415633:	popf   
  415634:	arpl   WORD PTR [esi+0x3b],cx
  415637:	test   DWORD PTR [ebx+0x51],ebx
  41563a:	je     0x415620
  41563c:	out    dx,eax
  41563d:	sub    BYTE PTR [edi+edx*4],cl
  415640:	xor    BYTE PTR [ecx],bh
  415642:	pop    es
  415643:	ret    0x63ac
  415646:	dec    eax
  415647:	dec    ebp
  415648:	add    DWORD PTR [esi+0x1b],eax
  41564b:	jmp    0x41565d
  41564d:	ins    DWORD PTR es:[edi],dx
  41564e:	xchg   edx,eax
  41564f:	push   eax
  415650:	leave  
  415651:	sbb    edx,ebp
  415653:	mov    ebp,0xbe28b51c
  415658:	call   0xf187cce6
  41565d:	loopne 0x41562a
  41565f:	mov    BYTE PTR [esi-0x5f4ff83c],ch
  415665:	test   eax,0xddb854dc
  41566a:	push   0x28fb7c03
  41566f:	mov    edi,0xf3b8b22f
  415674:	push   0x5a
  415676:	sub    ebp,DWORD PTR [esi-0x4f]
  415679:	mov    ebp,DWORD PTR [ebx]
  41567b:	lock out 0x90,eax
  41567e:	cs xchg ebx,eax
  415680:	inc    ebx
  415681:	nop
  415682:	dec    ecx
  415683:	clc    
  415684:	repnz (bad) 
  415686:	shl    BYTE PTR [edx+eax*4],cl
  415689:	outs   dx,BYTE PTR ds:[esi]
  41568a:	es retfw 0xdbd2
  41568f:	sub    eax,0x30d1a5d6
  415694:	gs cdq 
  415696:	jle    0x4156ba
  415698:	retw   
  41569a:	mov    bl,0x41
  41569c:	sbb    BYTE PTR [ecx+0x1f],ah
  41569f:	lds    ebp,FWORD PTR [edi]
  4156a1:	aam    0x77
  4156a3:	add    eax,0x1d5fe826
  4156a8:	pop    ebx
  4156a9:	pop    edx
  4156aa:	jle    0x4156fe
  4156ac:	push   edi
  4156ad:	cmp    ebp,DWORD PTR [ebx-0x458d92c6]
  4156b3:	pop    ecx
  4156b4:	pop    DWORD PTR [edi-0x2e400796]
  4156ba:	xor    al,bl
  4156bc:	shl    DWORD PTR [edx],0x86
  4156bf:	cmp    DWORD PTR [ebx],0x50
  4156c2:	cmp    edx,DWORD PTR [ebx+0x77afc1ad]
  4156c8:	add    DWORD PTR ds:0x5bb57bab,esi
  4156ce:	mov    DWORD PTR [ecx-0x42],edi
  4156d1:	int3   
  4156d2:	ins    BYTE PTR es:[edi],dx
  4156d3:	push   ss
  4156d4:	aam    0x19
  4156d6:	stos   DWORD PTR es:[edi],eax
  4156d7:	pop    eax
  4156d8:	test   al,0xdc
  4156da:	mov    ds:0xd607b74a,al
  4156df:	imul   esi,DWORD PTR [eax+0x71f61812],0xb5a706a5
  4156e9:	das    
  4156ea:	test   bl,0x11
  4156ed:	dec    ebx
  4156ee:	sub    al,BYTE PTR [edx]
  4156f0:	scas   eax,DWORD PTR es:[edi]
  4156f1:	mov    cl,0x37
  4156f3:	add    bl,BYTE PTR [eax-0x3a4609d]
  4156f9:	loopne 0x4156c5
  4156fb:	pop    ebx
  4156fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156fd:	repz jmp 0x9c743499
  415703:	aad    0xb0
  415705:	ret    0xd8c1
  415708:	and    dl,BYTE PTR [esi]
  41570a:	outs   dx,DWORD PTR ds:[esi]
  41570b:	fwait
  41570c:	addr16 repnz adc cl,cl
  415710:	fisttp DWORD PTR [esi-0x6e6c7756]
  415716:	xchg   esp,eax
  415717:	sbb    ebp,DWORD PTR [eax]
  415719:	xchg   DWORD PTR [ebp-0x4a],ebx
  41571c:	push   ebp
  41571d:	pop    ds
  41571e:	jns    0x4156b7
  415720:	cmp    eax,DWORD PTR gs:[eax-0x4f89245e]
  415727:	inc    ecx
  415728:	or     eax,0x5945d3ae
  41572d:	or     BYTE PTR [ecx+0xd],bh
  415730:	outs   dx,DWORD PTR ds:[esi]
  415731:	xor    eax,0x5f57b483
  415736:	ja     0x41574d
  415738:	cmc    
  415739:	fld    TBYTE PTR [esi]
  41573b:	jp     0x41575b
  41573d:	std    
  41573e:	lock mov edi,0x540afdea
  415744:	push   edi
  415745:	ins    BYTE PTR es:[edi],dx
  415746:	mov    ds:0xaeb115ac,eax
  41574b:	and    eax,0x71aef61f
  415750:	fwait
  415751:	data16 mov cl,0x5e
  415754:	xor    ah,BYTE PTR [ecx]
  415756:	and    eax,0xe841ec63
  41575b:	aad    0x27
  41575d:	and    al,BYTE PTR [eax+0x4505bdd2]
  415763:	call   0x69bf:0x4547f61d
  41576a:	sub    cl,al
  41576c:	leave  
  41576d:	retf   0x93b3
  415770:	out    0x33,al
  415772:	sub    BYTE PTR [eax-0x235f3220],cl
  415778:	push   ebp
  415779:	jbe    0x4157d4
  41577b:	fsubr  DWORD PTR [ebp-0x85ed195]
  415781:	inc    ebx
  415782:	scas   al,BYTE PTR es:[edi]
  415783:	ja     0x415733
  415785:	in     al,0x34
  415787:	sub    DWORD PTR [esi+0x6f],0x1a
  41578b:	ja     0x41578b
  41578d:	or     BYTE PTR [ecx],dh
  41578f:	loope  0x41579a
  415791:	sbb    al,0x44
  415793:	aaa    
  415794:	jl     0x415769
  415796:	adc    cl,BYTE PTR [edx]
  415798:	xchg   edx,eax
  415799:	adc    DWORD PTR [eax-0x3d],ecx
  41579c:	sbb    BYTE PTR [esi+eax*2+0x3f],ah
  4157a0:	pop    es
  4157a1:	xchg   ebp,eax
  4157a2:	pop    ds
  4157a3:	pop    esi
  4157a4:	bound  ecx,QWORD PTR [edi]
  4157a6:	rcl    cl,cl
  4157a8:	mov    esi,DWORD PTR [ebx-0x2ca6e2b4]
  4157ae:	inc    eax
  4157af:	add    eax,0x8e11b2ee
  4157b4:	or     esp,DWORD PTR [esi-0xc]
  4157b7:	ret    0x30b2
  4157ba:	push   eax
  4157bb:	lock mov ecx,DWORD PTR [esi]
  4157be:	pop    ss
  4157bf:	mov    al,ds:0x27271bd5
  4157c4:	cmp    eax,eax
  4157c6:	adc    DWORD PTR [esi+0xaddec64],esp
  4157cc:	add    DWORD PTR [ecx-0x1845fa20],0x7e
  4157d3:	jne    0x4157a1
  4157d5:	ret    0xb599
  4157d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157d9:	push   0x88560c14
  4157de:	arpl   di,bp
  4157e0:	jmp    FWORD PTR [ebp+edx*8-0x72338e79]
  4157e7:	int    0x43
  4157e9:	ss popf 
  4157eb:	(bad)  
  4157ee:	pushf  
  4157ef:	sub    DWORD PTR [ebx+0x63d73be7],eax
  4157f5:	jle    0x415867
  4157f7:	loop   0x4157e3
  4157f9:	xchg   BYTE PTR [edi-0x66],ch
  4157fc:	test   bh,dh
  4157fe:	sahf   
  4157ff:	dec    ebx
  415800:	mov    esp,DWORD PTR [ebx-0x4c5e97d6]
  415806:	sub    BYTE PTR [ebp-0x429435b9],0xd9
  41580d:	push   es
  41580e:	xchg   ecx,eax
  41580f:	sbb    bh,BYTE PTR [eax+0x147eed60]
  415815:	pop    ds
  415816:	in     al,0xe4
  415818:	inc    ecx
  415819:	mov    al,ds:0xfab506e5
  41581e:	mov    ch,0xfc
  415820:	jmp    0x41585b
  415822:	sub    ah,dl
  415824:	gs loopne 0x4157c5
  415827:	jbe    0x4157f4
  415829:	jge    0x415864
  41582b:	hlt    
  41582c:	ss dec ebx
  41582e:	jo     0x415886
  415830:	jae    0x4157cc
  415832:	mov    ecx,0xee3d801e
  415837:	shl    edx,0x58
  41583a:	push   ds
  41583b:	push   edi
  41583c:	pusha  
  41583d:	iret   
  41583e:	mov    ecx,0x44ce41c9
  415843:	pop    esp
  415844:	and    esp,DWORD PTR [ecx+0x76]
  415847:	stc    
  415848:	push   edx
  415849:	lods   al,BYTE PTR ds:[esi]
  41584a:	xor    al,0x9e
  41584c:	sbb    al,0x12
  41584e:	loop   0x4158cf
  415850:	out    dx,eax
  415851:	popa   
  415852:	cdq    
  415853:	and    eax,0x2a6f7f0e
  415858:	xor    cl,BYTE PTR [edi-0x6b2e9771]
  41585e:	sar    bh,cl
  415860:	mov    dh,0xc1
  415862:	inc    esi
  415863:	call   0xf0e8d103
  415868:	daa    
  415869:	jo     0x415874
  41586b:	cs retf 0x2d3c
  41586f:	cwde   
  415870:	mov    al,0x2
  415872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415873:	push   cs
  415874:	add    cl,BYTE PTR [ebp-0x45]
  415877:	lods   eax,DWORD PTR ds:[esi]
  415878:	stos   DWORD PTR es:[edi],eax
  415879:	jns    0x415892
  41587b:	inc    edi
  41587c:	sbb    eax,0x57f2564d
  415881:	xchg   dh,dl
  415883:	stc    
  415884:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415885:	fidiv  WORD PTR [ecx-0x55]
  415888:	int    0x2b
  41588a:	pop    ecx
  41588b:	dec    esi
  41588c:	xor    al,0x31
  41588e:	lahf   
  41588f:	sub    BYTE PTR [ebx-0x3836091c],ch
  415895:	aas    
  415896:	fnstcw WORD PTR [ebp-0x55f01120]
  41589c:	clc    
  41589d:	sub    eax,0x8ca255ab
  4158a2:	jo     0x41583a
  4158a4:	scas   eax,DWORD PTR es:[edi]
  4158a5:	sub    al,0x35
  4158a7:	push   cs
  4158a8:	mov    ds:0x48d8b601,eax
  4158ad:	cmc    
  4158ae:	pop    ecx
  4158af:	mov    dh,0xfe
  4158b1:	and    al,0x32
  4158b3:	in     al,0x0
  4158b5:	test   BYTE PTR [ebx+0x400c7124],dl
  4158bb:	sahf   
  4158bc:	inc    edx
  4158bd:	dec    eax
  4158be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158bf:	mov    bl,BYTE PTR [eax]
  4158c1:	mov    BYTE PTR [ebp+0xc40157c],dh
  4158c7:	xchg   ebx,eax
  4158c8:	sti    
  4158c9:	sub    DWORD PTR [ebx],ebx
  4158cb:	(bad)  
  4158cc:	(bad)  
  4158ce:	mov    bh,0xe5
  4158d0:	js     0x41592c
  4158d2:	jl     0x4158ee
  4158d4:	outs   dx,BYTE PTR ds:[esi]
  4158d5:	or     eax,0xd94c02fe
  4158da:	fcmovnu st,st(3)
  4158dc:	fnstenv [edx]
  4158de:	ins    DWORD PTR es:[edi],dx
  4158df:	inc    edi
  4158e0:	push   cs
  4158e1:	pop    esp
  4158e2:	and    edi,DWORD PTR [esi-0x540e53d7]
  4158e8:	sti    
  4158e9:	inc    esp
  4158ea:	xor    BYTE PTR [edx],0x8b
  4158ed:	scas   al,BYTE PTR es:[edi]
  4158ee:	out    dx,eax
  4158ef:	mov    eax,ds:0x296f5d46
  4158f4:	daa    
  4158f5:	mov    cl,0x1e
  4158f7:	push   esi
  4158f8:	xor    BYTE PTR [edi-0x7fe827ce],dh
  4158fe:	sar    DWORD PTR [ebp+0x7d85e0e0],cl
  415904:	fwait
  415905:	sbb    eax,0xfce3871e
  41590a:	pop    es
  41590b:	xchg   edi,eax
  41590c:	sar    eax,cl
  41590e:	pushf  
  41590f:	mov    ah,0xa
  415911:	push   eax
  415912:	idiv   bh
  415914:	aam    0xd6
  415916:	imul   ebx,DWORD PTR [eax+ecx*2-0x11612eb7],0xffffffb1
  41591e:	les    ebp,FWORD PTR [esi-0x42341a07]
  415924:	jmp    0x1725:0xaeda9647
  41592b:	jmp    0x299:0x15938f5c
  415932:	push   ecx
  415933:	xchg   ecx,eax
  415934:	fwait
  415935:	inc    ecx
  415936:	mov    ah,0x91
  415938:	call   0xfb7c96e0
  41593d:	xor    ah,cl
  41593f:	shr    cl,1
  415941:	mov    dl,0x1d
  415943:	mov    ah,0x7e
  415945:	push   ss
  415946:	jl     0x415908
  415948:	add    DWORD PTR [esi*2+0xcf4e7cd],ebx
  41594f:	lock or cl,BYTE PTR [ebp+0x79c02628]
  415956:	dec    ebx
  415957:	push   ebx
  415958:	(bad)  
  415959:	out    0x95,eax
  41595b:	mov    ecx,0x7da58f7b
  415960:	(bad)  
  415961:	scas   eax,DWORD PTR es:[edi]
  415962:	arpl   WORD PTR [edi+0x4dcc19aa],dx
  415968:	lock push ebp
  41596a:	stos   BYTE PTR es:[edi],al
  41596b:	and    eax,0xf7d85e77
  415970:	sti    
  415971:	xchg   bh,ah
  415973:	jbe    0x415926
  415975:	or     DWORD PTR [edx+0x7c8cfce4],edx
  41597b:	push   ebx
  41597c:	mov    edi,0x4dd7ab16
  415981:	adc    eax,0x588b2298
  415986:	jno    0x415926
  415988:	stos   BYTE PTR es:[edi],al
  415989:	std    
  41598a:	(bad)  
  41598b:	pop    ss
  41598c:	xor    BYTE PTR [ecx+0x66],al
  41598f:	pop    ss
  415990:	div    DWORD PTR ds:0x1f408de4
  415996:	fistp  WORD PTR [esi+0x3805086b]
  41599c:	stos   DWORD PTR es:[edi],eax
  41599d:	rcl    BYTE PTR [edx],cl
  41599f:	dec    esp
  4159a0:	stos   DWORD PTR es:[edi],eax
  4159a1:	popa   
  4159a2:	push   eax
  4159a3:	mov    cl,0xe4
  4159a5:	icebp  
  4159a6:	sub    bh,BYTE PTR [edx+0x2a]
  4159a9:	push   edx
  4159aa:	xchg   esp,eax
  4159ab:	das    
  4159ac:	stos   DWORD PTR es:[di],eax
  4159ae:	cdq    
  4159af:	cmp    eax,DWORD PTR [eax+0x4]
  4159b2:	test   BYTE PTR [edx],ch
  4159b4:	sub    ebx,esi
  4159b6:	or     al,ch
  4159b8:	mov    edx,0x2d67d58f
  4159bd:	push   cs
  4159be:	sub    bh,cl
  4159c0:	sub    edi,esi
  4159c2:	sub    eax,DWORD PTR cs:[esi-0x2f103fad]
  4159c9:	es icebp 
  4159cb:	retf   
  4159cc:	sub    edi,DWORD PTR [eax-0x2e9e03ad]
  4159d2:	and    DWORD PTR [ebx],esi
  4159d4:	pop    ecx
  4159d5:	clc    
  4159d6:	pop    esi
  4159d7:	ins    DWORD PTR es:[edi],dx
  4159d8:	iret   
  4159d9:	push   edx
  4159da:	push   esp
  4159db:	inc    esp
  4159dc:	inc    ebx
  4159dd:	into   
  4159de:	test   ch,al
  4159e0:	sub    eax,0x56075d10
  4159e5:	or     ah,dl
  4159e7:	inc    eax
  4159e8:	div    BYTE PTR [esi+0x1]
  4159eb:	ja     0x415993
  4159ed:	jbe    0x4159f8
  4159ef:	mov    al,ds:0x97e9a394
  4159f4:	add    al,0x13
  4159f6:	sti    
  4159f7:	xchg   edi,eax
  4159f8:	mov    ds:0x883aac8d,al
  4159fd:	pusha  
  4159fe:	lock push ds
  415a00:	icebp  
  415a01:	xchg   ebp,eax
  415a02:	xor    al,0x59
  415a04:	mov    ch,0xd8
  415a06:	xchg   ecx,eax
  415a07:	push   edx
  415a08:	scas   eax,DWORD PTR es:[edi]
  415a09:	and    DWORD PTR [eax-0x63],ecx
  415a0c:	mov    al,ds:0xd1301daa
  415a11:	dec    eax
  415a12:	inc    ebp
  415a13:	aad    0x19
  415a15:	push   es
  415a16:	xor    al,0x1a
  415a18:	jmp    0x696c9338
  415a1d:	mov    cl,0xb2
  415a1f:	pop    ebp
  415a20:	ins    DWORD PTR es:[edi],dx
  415a21:	lea    eax,[ebx+0x6f]
  415a24:	mov    BYTE PTR [edx-0x4d],al
  415a27:	into   
  415a28:	(bad)  
  415a29:	sub    eax,DWORD PTR [eax-0x4f65d68c]
  415a2f:	adc    ebx,DWORD PTR [ebx+0x31]
  415a32:	out    dx,eax
  415a33:	icebp  
  415a34:	pop    edx
  415a35:	push   esp
  415a36:	add    edx,DWORD PTR [edx+0x5b96a799]
  415a3c:	imul   ecx,eax,0x58
  415a3f:	sub    DWORD PTR [ecx-0x59],eax
  415a42:	mov    al,ds:0xb7a3d52d
  415a47:	imul   ebp,DWORD PTR [esi],0x4d
  415a4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a4b:	lods   al,BYTE PTR ds:[esi]
  415a4c:	push   ds
  415a4d:	push   ds
  415a4e:	jo     0x415a2a
  415a50:	sbb    eax,0x438f4009
  415a55:	in     al,dx
  415a56:	fisub  DWORD PTR ds:[edx-0x7a]
  415a5a:	scas   al,BYTE PTR es:[edi]
  415a5b:	ins    DWORD PTR es:[edi],dx
  415a5c:	rcr    DWORD PTR [edi+ebp*8+0x6],0x2f
  415a61:	or     DWORD PTR [eax],edx
  415a63:	xlat   BYTE PTR ds:[ebx]
  415a64:	popa   
  415a65:	xor    BYTE PTR [edi-0x21],bl
  415a68:	pop    esi
  415a69:	outs   dx,BYTE PTR ds:[esi]
  415a6a:	icebp  
  415a6b:	xlat   BYTE PTR ds:[ebx]
  415a6c:	test   DWORD PTR ds:0x518b10ea,ebp
  415a72:	fs pop ebp
  415a74:	daa    
  415a75:	out    dx,al
  415a76:	cwde   
  415a77:	jb     0x415acc
  415a79:	pop    esi
  415a7a:	shl    DWORD PTR [eax+0x7c],1
  415a7d:	jmp    FWORD PTR [ebp-0x7c4a4111]
  415a83:	(bad)  
  415a84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a85:	rcl    DWORD PTR [eax+esi*4-0x62],1
  415a89:	or     BYTE PTR [bx+si-0x5473],bh
  415a8e:	sar    edi,cl
  415a90:	aaa    
  415a91:	shl    DWORD PTR [ebx+0x45],1
  415a94:	popf   
  415a95:	and    BYTE PTR [eax+0xe881d4b],bl
  415a9b:	push   eax
  415a9c:	mov    al,0xe
  415a9e:	std    
  415a9f:	out    dx,eax
  415aa0:	inc    eax
  415aa1:	dec    ebp
  415aa2:	and    eax,0xe36a7e9b
  415aa7:	shl    edx,1
  415aa9:	sub    DWORD PTR [ebp-0x1273d7d4],esp
  415aaf:	ins    BYTE PTR es:[edi],dx
  415ab0:	or     eax,0x6
  415ab3:	(bad)  
  415ab4:	dec    edi
  415ab5:	out    0xd0,al
  415ab7:	cmp    BYTE PTR [edi+ecx*1+0x6ede415b],bh
  415abe:	out    dx,eax
  415abf:	arpl   WORD PTR ds:0x36a7ceeb,bx
  415ac5:	shr    BYTE PTR [esi],cl
  415ac7:	es ret 
  415ac9:	cmp    DWORD PTR [esp+ebp*4],edx
  415acc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415acd:	out    0xe2,al
  415acf:	(bad)  
  415ad0:	mov    edi,0x817d3b07
  415ad5:	sti    
  415ad6:	mov    ch,0x87
  415ad8:	out    dx,eax
  415ad9:	cld    
  415ada:	stos   BYTE PTR es:[edi],al
  415adb:	and    dl,bl
  415add:	inc    esi
  415ade:	or     eax,0x71a6116d
  415ae3:	xchg   ebp,eax
  415ae4:	jo     0x415b4d
  415ae6:	sbb    esp,DWORD PTR [ecx+0x51a674da]
  415aec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415aed:	call   0x63a8:0x1ad17bb8
  415af4:	xor    al,0x80
  415af6:	gs cmp eax,0x2f527fe1
  415afc:	data16 addr16 int3 
  415aff:	in     al,dx
  415b00:	or     eax,0xc6c0c989
  415b05:	ror    BYTE PTR ds:0x742fcffe,1
  415b0b:	out    0xe9,eax
  415b0d:	lahf   
  415b0e:	jne    0x415b50
  415b10:	(bad)  
  415b11:	dec    edx
  415b12:	jge    0x415ad6
  415b14:	inc    eax
  415b15:	icebp  
  415b16:	in     al,dx
  415b17:	pushf  
  415b18:	xor    edi,DWORD PTR [edi+0x3f]
  415b1b:	mov    edx,0x3c710db6
  415b20:	jg     0x415af0
  415b22:	shl    ecx,1
  415b24:	ja     0x415b7a
  415b26:	popf   
  415b27:	mov    edx,0x93714be0
  415b2c:	hlt    
  415b2d:	adc    dh,BYTE PTR [esi-0x3d3be205]
  415b33:	pop    ebx
  415b34:	loope  0x415abb
  415b36:	and    BYTE PTR [ecx+0x2d],ah
  415b39:	or     al,0x8d
  415b3b:	sub    BYTE PTR [eax+edx*1+0x2daa549d],dh
  415b42:	push   cs
  415b43:	into   
  415b44:	sub    bh,ah
  415b46:	daa    
  415b47:	pop    edi
  415b48:	mov    esp,0x30a42695
  415b4d:	fistp  DWORD PTR [ebx]
  415b4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b50:	mov    bl,0xfa
  415b52:	push   edi
  415b53:	loop   0x415b13
  415b55:	sbb    BYTE PTR [eax],0x86
  415b58:	aam    0x47
  415b5a:	lds    edx,FWORD PTR [eax-0x488578da]
  415b60:	xor    eax,0x732a457a
  415b65:	xrelease mov DWORD PTR [esi],0xd7951e7d
  415b6c:	retf   
  415b6d:	inc    DWORD PTR [ecx+0x277deab6]
  415b73:	js     0x415b1c
  415b75:	jecxz  0x415b76
  415b77:	pop    es
  415b78:	shr    eax,1
  415b7a:	or     al,0x5c
  415b7c:	sbb    DWORD PTR ds:0xd6d8d6cf,0x457d1d62
  415b86:	adc    ebp,DWORD PTR [eax-0x6c6219f9]
  415b8c:	mov    al,0x82
  415b8e:	aad    0x7d
  415b90:	(bad)  
  415b91:	shr    DWORD PTR [edi+edx*4+0x2691c24a],1
  415b98:	fsubr  QWORD PTR [edx+0x1d21df19]
  415b9e:	and    ch,BYTE PTR [ebx+0xd8930f0]
  415ba4:	jl     0x415c1c
  415ba6:	(bad)  
  415ba7:	fisttp QWORD PTR [eax+0x660e0643]
  415bad:	jno    0x415c05
  415baf:	push   es
  415bb0:	or     eax,0x78bbe5e3
  415bb5:	call   0xebb081f
  415bba:	call   0x5316:0xc9410559
  415bc1:	fisttp WORD PTR [eax-0x45]
  415bc4:	jp     0x415bce
  415bc6:	popa   
  415bc7:	pusha  
  415bc8:	adc    BYTE PTR [ecx+0x4dd064e0],dl
  415bce:	lahf   
  415bcf:	les    ecx,FWORD PTR [edi+0x4d961a5b]
  415bd5:	ficom  DWORD PTR [edx+0x535f4849]
  415bdb:	fstp   TBYTE PTR [ebx]
  415bdd:	jnp    0x415c08
  415bdf:	aam    0xb7
  415be1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415be2:	mov    eax,ds:0xf9b39f63
  415be7:	fdiv   DWORD PTR [ebx+eax*8]
  415bea:	push   ds
  415beb:	ins    BYTE PTR es:[edi],dx
  415bec:	inc    ebp
  415bed:	test   BYTE PTR [edi],ch
  415bef:	mov    ds:0x7f647c86,al
  415bf4:	test   BYTE PTR [esi-0x6e74f0e6],0xa3
  415bfb:	rol    DWORD PTR [edx],1
  415bfd:	mov    bl,0xcb
  415bff:	adc    cl,BYTE PTR ds:0x148578a6
  415c05:	jp     0x415c25
  415c07:	and    BYTE PTR [esi+0x6f],cl
  415c0a:	cmp    eax,0xfeff8ce1
  415c0f:	stc    
  415c10:	cld    
  415c11:	in     eax,dx
  415c12:	test   bh,0xf5
  415c15:	iret   
  415c16:	jmp    0xb5096252
  415c1b:	sbb    esi,DWORD PTR [eax]
  415c1d:	jnp    0x415bdd
  415c1f:	xor    eax,0xf659a84e
  415c24:	stos   DWORD PTR es:[edi],eax
  415c25:	outs   dx,BYTE PTR ds:[esi]
  415c26:	xchg   edi,eax
  415c27:	leave  
  415c28:	jp     0x415bcf
  415c2a:	mov    eax,ds:0xe074bd89
  415c2f:	stc    
  415c30:	mov    edi,0xd0ba655d
  415c35:	jmp    0x415c79
  415c37:	and    al,0x1a
  415c39:	jb     0x415c63
  415c3b:	stc    
  415c3c:	push   ds
  415c3d:	mov    dl,0x5
  415c3f:	int    0x14
  415c41:	adc    ebp,DWORD PTR [ebx-0x51]
  415c44:	fidiv  WORD PTR [esi-0x7b]
  415c47:	ror    BYTE PTR [ecx],1
  415c49:	xor    eax,0x473ed62e
  415c4e:	or     BYTE PTR [eax-0x6f],0x2a
  415c52:	int    0x65
  415c54:	push   ebp
  415c55:	sbb    BYTE PTR [ebx+0x349fb91f],ah
  415c5b:	pop    ss
  415c5c:	out    dx,eax
  415c5d:	cmc    
  415c5e:	pop    esp
  415c5f:	inc    ebx
  415c60:	jbe    0x415c01
  415c62:	mov    bh,0xfc
  415c64:	das    
  415c65:	imul   esi,DWORD PTR [ecx+0x1c79ebc8],0x74
  415c6c:	cmp    BYTE PTR [ebp+eiz*8+0x1e],dl
  415c70:	shl    BYTE PTR [ebx],0x5d
  415c73:	mov    ecx,0xaa9d4734
  415c78:	adc    eax,0xade8c302
  415c7d:	xor    ecx,DWORD PTR [ecx+0x40287903]
  415c83:	mov    cs,WORD PTR [ecx+0x71]
  415c86:	add    ebp,ecx
  415c88:	and    al,0xb8
  415c8a:	std    
  415c8b:	jl     0x415c5c
  415c8d:	ds cmp al,0xc8
  415c90:	repz loop 0x415c54
  415c93:	ins    BYTE PTR es:[edi],dx
  415c94:	pop    esi
  415c95:	imul   esp,DWORD PTR [edi-0xa],0x9fdae0e3
  415c9c:	jle    0x415c98
  415c9e:	out    dx,al
  415c9f:	push   ss
  415ca0:	bound  eax,QWORD PTR [esi+0x65]
  415ca3:	(bad)  
  415ca4:	push   ebx
  415ca5:	xchg   edi,eax
  415ca6:	mov    ebx,0x347a04b4
  415cab:	mov    al,ds:0x184f5f9f
  415cb0:	and    DWORD PTR [edx-0x6f464612],0xfffffffc
  415cb7:	stos   BYTE PTR es:[edi],al
  415cb8:	sbb    edi,0x89290808
  415cbe:	loopne 0x415cc2
  415cc0:	vprotd ymm11,xmm0,[eax-0x7c]
  415cc6:	push   ebx
  415cc7:	sub    DWORD PTR [eax+0x45],esi
  415cca:	std    
  415ccb:	jne    0x415c52
  415ccd:	or     dl,BYTE PTR [ebx*2+0x40fe4aa7]
  415cd4:	jb     0x415c67
  415cd6:	mov    bl,0x6f
  415cd8:	dec    ecx
  415cd9:	cwde   
  415cda:	jecxz  0x415d0e
  415cdc:	dec    esp
  415cdd:	retf   
  415cde:	inc    edx
  415cdf:	jg     0x415c8d
  415ce1:	aam    0xde
  415ce3:	pop    esp
  415ce4:	or     al,0xf8
  415ce6:	inc    ecx
  415ce7:	lea    esp,[eax-0x33e313a3]
  415ced:	into   
  415cee:	jno    0x415cf7
  415cf0:	mov    al,ds:0x578f8e45
  415cf5:	dec    edi
  415cf6:	cmp    eax,0xc52a7ab3
  415cfb:	popf   
  415cfc:	jb     0x415c8d
  415cfe:	arpl   WORD PTR [ebp-0x59],si
  415d01:	and    BYTE PTR [ecx],bh
  415d03:	jmp    0xbc8f2e8f
  415d08:	jbe    0x415cdb
  415d0a:	lods   al,BYTE PTR ds:[esi]
  415d0b:	sub    al,0x9f
  415d0d:	sub    BYTE PTR [ebx],0x32
  415d10:	shr    BYTE PTR [edi],cl
  415d12:	xor    DWORD PTR [esi*1+0x499d8776],eax
  415d19:	inc    esp
  415d1a:	push   ss
  415d1b:	inc    esi
  415d1c:	cmp    DWORD PTR [ecx-0x3b],edi
  415d1f:	or     DWORD PTR [edi-0x4d],0x4a3952b2
  415d26:	rol    DWORD PTR [ebp+0x5dec5d70],cl
  415d2c:	jnp    0x415cc2
  415d2e:	add    al,0x17
  415d30:	sub    BYTE PTR [edi+0x68],cl
  415d33:	not    DWORD PTR [edi+ebx*4]
  415d36:	and    DWORD PTR ds:0xe46db404,eax
  415d3c:	push   ebp
  415d3d:	mov    ss,esi
  415d3f:	jle    0x415da4
  415d41:	frstor [ebp+0x73be5c58]
  415d47:	lds    ecx,FWORD PTR [ebp+0x54bb6560]
  415d4d:	jae    0x415d7b
  415d4f:	cmp    ah,BYTE PTR [ecx-0x62]
  415d52:	mov    dl,0x69
  415d54:	push   ebp
  415d55:	repz fs sub cl,ch
  415d59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d5a:	xor    BYTE PTR [ebp-0x56],cl
  415d5d:	ins    BYTE PTR es:[edi],dx
  415d5e:	sub    edx,DWORD PTR [esi+0x44]
  415d61:	mov    esi,0x45f2e9b7
  415d66:	xor    al,BYTE PTR [edi]
  415d68:	or     eax,0xeddcdd70
  415d6d:	xchg   ecx,eax
  415d6e:	xor    BYTE PTR [ebx-0x5a],cl
  415d71:	dec    edi
  415d72:	call   0x10bf:0xdefd952f
  415d79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d7a:	into   
  415d7b:	cli    
  415d7c:	jg     0x415dcc
  415d7e:	jg     0x415d52
  415d80:	pop    edi
  415d81:	leave  
  415d82:	push   ecx
  415d83:	lds    esi,FWORD PTR [ebx-0x2881f1cb]
  415d89:	mov    bh,0xe2
  415d8b:	pop    edi
  415d8c:	fstp   TBYTE PTR [eax-0x3164b744]
  415d92:	loopne 0x415dbf
  415d94:	or     al,0x3a
  415d96:	test   eax,0xea642f30
  415d9b:	loopne 0x415df6
  415d9d:	mov    eax,ds:0xd147f8fa
  415da2:	dec    esp
  415da3:	push   cs
  415da4:	and    ch,bh
  415da6:	retf   0xa551
  415da9:	fst    DWORD PTR [esi-0x71]
  415dac:	or     bl,BYTE PTR [eax+edx*4-0x78]
  415db0:	push   eax
  415db1:	sahf   
  415db2:	pushf  
  415db3:	lahf   
  415db4:	pop    eax
  415db5:	int    0x8e
  415db7:	lock ret 0x7ece
  415dbb:	add    eax,0xf0dcbf9
  415dc0:	out    dx,eax
  415dc1:	or     al,0x3d
  415dc3:	mov    DWORD PTR [edx+0x6f1868b1],esi
  415dc9:	std    
  415dca:	mov    esi,0x28fe7cbf
  415dcf:	jne    0x415d52
  415dd1:	xchg   edx,eax
  415dd2:	jmp    0xb61:0x8f654be8
  415dd9:	push   es
  415dda:	iret   
  415ddb:	sbb    al,0x9b
  415ddd:	pushf  
  415dde:	mov    esi,0x61b3cd9e
  415de3:	xchg   ebp,eax
  415de4:	nop
  415de5:	and    edx,DWORD PTR [ecx+ebx*1-0x58]
  415de9:	mov    ah,0x54
  415deb:	dec    edi
  415dec:	adc    bh,BYTE PTR ds:0x504cf700
  415df2:	lahf   
  415df3:	add    BYTE PTR [ecx-0x281c7e17],ch
  415df9:	ds jecxz 0x415dfe
  415dfc:	or     dh,al
  415dfe:	(bad)  
  415dff:	scas   al,BYTE PTR es:[edi]
  415e00:	es pop ebx
  415e02:	push   esi
  415e03:	jmp    0x246fee2e
  415e08:	pusha  
  415e09:	clc    
  415e0a:	lea    ebx,[ecx-0x45]
  415e0d:	sub    al,0x9b
  415e0f:	adc    dh,BYTE PTR [edx-0x57]
  415e12:	aad    0xf7
  415e14:	fisub  DWORD PTR [esi-0x7]
  415e18:	enter  0xb42e,0x1
  415e1c:	imul   ecx,DWORD PTR [eax+0x4f7bb735],0x64a4f0b9
  415e26:	popa   
  415e27:	jp     0x415e74
  415e29:	retf   0x1276
  415e2c:	pop    edx
  415e2d:	in     eax,dx
  415e2e:	push   edi
  415e2f:	popa   
  415e30:	mov    edx,0x13237986
  415e35:	mov    ch,0x24
  415e37:	in     eax,dx
  415e38:	sub    ah,bl
  415e3a:	outs   dx,DWORD PTR ds:[esi]
  415e3b:	dec    edi
  415e3c:	xor    al,0xd9
  415e3e:	in     eax,0x18
  415e40:	add    DWORD PTR [esi-0x793fbec0],ebp
  415e46:	fisub  DWORD PTR [eax-0x30]
  415e49:	dec    sp
  415e4b:	xchg   ebx,eax
  415e4c:	jmp    0x5cedb90
  415e51:	(bad)  
  415e52:	push   ds
  415e53:	xchg   DWORD PTR [eax],ebp
  415e55:	ja     0x415eb5
  415e57:	dec    ebx
  415e58:	mov    cl,0x34
  415e5a:	icebp  
  415e5b:	pop    eax
  415e5c:	cmp    DWORD PTR cs:[edx+0x2d],esi
  415e60:	cmc    
  415e61:	nop
  415e62:	jb     0x415eaa
  415e64:	adc    dh,bl
  415e66:	vmovupd XMMWORD PTR [esi],xmm0
  415e6a:	mov    ch,0xf8
  415e6c:	add    al,0x30
  415e6e:	jbe    0x415e2c
  415e70:	push   eax
  415e71:	loope  0x415e07
  415e73:	pop    ds
  415e74:	push   0x5b
  415e76:	fst    QWORD PTR [edx+0x1d]
  415e79:	in     al,0xda
  415e7b:	arpl   WORD PTR [esi+edx*1-0x1487ca5],di
  415e82:	sub    bl,BYTE PTR [ecx+ebx*2]
  415e85:	mov    DWORD PTR [eax],ebp
  415e87:	fild   WORD PTR [edi]
  415e89:	xchg   BYTE PTR [ebx-0x15],al
  415e8c:	sbb    bl,0xb6
  415e8f:	inc    esi
  415e90:	ret    
  415e91:	mov    ecx,DWORD PTR [eax-0x3d]
  415e94:	dec    ebp
  415e95:	shl    BYTE PTR [edi*8+0x7ffeed0a],0x93
  415e9d:	(bad)  
  415e9f:	or     ebp,DWORD PTR ds:0x2fd7c8e
  415ea5:	add    al,ch
  415ea7:	xchg   edx,eax
  415ea8:	cwde   
  415ea9:	mov    es,WORD PTR [edi+ecx*1+0x539a4747]
  415eb0:	xchg   ebp,eax
  415eb1:	enter  0x6f71,0x8e
  415eb5:	jl     0x415e7e
  415eb7:	arpl   sp,bp
  415eb9:	sub    DWORD PTR [ebp+0x5a7a47ff],esp
  415ebf:	xor    dl,BYTE PTR [edi+0x8]
  415ec2:	cmp    ah,BYTE PTR ds:0xcda21ae3
  415ec8:	inc    edx
  415ec9:	es mov ch,0xb2
  415ecc:	pop    eax
  415ecd:	(bad)  
  415ece:	das    
  415ecf:	pop    es
  415ed0:	mov    eax,ds:0xab171890
  415ed5:	mov    gs,WORD PTR ss:[edx+0x29]
  415ed9:	add    DWORD PTR [ebx+edi*2],edi
  415edc:	js     0x415f06
  415ede:	mov    edi,0x33c14041
  415ee3:	xor    al,0xdc
  415ee5:	xor    dl,0x12
  415ee8:	mov    eax,ds:0x900870c
  415eed:	arpl   WORD PTR [esi],bx
  415eef:	das    
  415ef0:	and    DWORD PTR [esi],esp
  415ef2:	aas    
  415ef3:	gs fwait
  415ef5:	xchg   ebp,eax
  415ef6:	dec    esp
  415ef7:	test   dh,0x45
  415efa:	ins    DWORD PTR es:[edi],dx
  415efb:	dec    esp
  415efc:	mov    ds:0x26b169cc,eax
  415f01:	xor    al,0x90
  415f03:	imul   ebx,DWORD PTR [ecx-0x66acf824],0xd12a4e6b
  415f0d:	out    0x6e,al
  415f0f:	xchg   ebx,eax
  415f11:	xchg   DWORD PTR [eax+0x23],ebp
  415f14:	push   0x412f18b8
  415f19:	jae    0x415f52
  415f1b:	stos   BYTE PTR es:[edi],al
  415f1c:	div    DWORD PTR [ecx-0x256b09c6]
  415f22:	cmc    
  415f23:	out    0x30,al
  415f25:	mov    ah,0xff
  415f27:	out    dx,al
  415f28:	or     BYTE PTR [ebp+0x2bea09a4],cl
  415f2e:	inc    eax
  415f2f:	mov    al,ds:0xc0bf6e41
  415f34:	add    BYTE PTR [edi],dl
  415f36:	or     eax,0x61e0a980
  415f3b:	nop
  415f3c:	fst    DWORD PTR [ebx+0x27]
  415f3f:	add    eax,0x4d1a379e
  415f44:	mov    bh,0xd5
  415f46:	sbb    DWORD PTR [esi-0x7b],ebp
  415f49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f4a:	cmp    al,BYTE PTR [edi+0x77df9fd4]
  415f50:	push   edx
  415f51:	(bad)  
  415f52:	lahf   
  415f53:	push   cs
  415f54:	sub    edi,DWORD PTR [ebx-0x6]
  415f57:	mov    esp,0x5d4e4864
  415f5c:	addr16 es push 0x18
  415f60:	sub    ch,BYTE PTR [ebx-0x6b482798]
  415f66:	rcr    dh,0xa7
  415f69:	or     DWORD PTR [ecx-0x7db9b485],eax
  415f6f:	inc    edi
  415f70:	fdivr  QWORD PTR [edx+esi*1+0xcc18c47]
  415f77:	lods   al,BYTE PTR ds:[esi]
  415f78:	dec    edx
  415f79:	pusha  
  415f7a:	xor    BYTE PTR [ecx],0xf0
  415f7d:	pop    esp
  415f7e:	aad    0x8a
  415f80:	jecxz  0x415f32
  415f82:	lods   al,BYTE PTR ds:[esi]
  415f83:	push   esp
  415f84:	push   0xb800b99f
  415f89:	xchg   esi,esp
  415f8b:	mov    BYTE PTR [ebx],0xad
  415f8e:	mov    bh,0x26
  415f90:	bswap  esp
  415f92:	add    DWORD PTR [eax],esp
  415f94:	sbb    ebp,DWORD PTR [ecx-0x43ef20a]
  415f9a:	js     0x415f88
  415f9c:	mov    ah,0x4c
  415f9e:	iret   
  415f9f:	outs   dx,BYTE PTR ds:[esi]
  415fa0:	jmp    0x416007
  415fa2:	sti    
  415fa3:	mov    ch,0x2c
  415fa5:	jle    0x415ffa
  415fa7:	sub    BYTE PTR [esi-0x2dae2277],ch
  415fad:	pop    esi
  415fae:	icebp  
  415faf:	pop    ds
  415fb0:	mov    bh,0x7d
  415fb2:	ins    DWORD PTR es:[edi],dx
  415fb3:	add    BYTE PTR [edi+0x5a9dff1a],bl
  415fb9:	or     DWORD PTR [ebp+0x51],ebx
  415fbc:	pop    ebp
  415fbd:	cs jo  0x415f4a
  415fc0:	fdiv   st(6),st
  415fc2:	dec    ecx
  415fc3:	pop    ebx
  415fc4:	jno    0x415f9f
  415fc6:	mov    BYTE PTR [edi+eiz*4],bh
  415fc9:	and    ebp,edi
  415fcb:	pop    ebx
  415fcc:	loope  0x416025
  415fce:	push   ds
  415fcf:	mov    ah,0x39
  415fd1:	push   edx
  415fd2:	mov    edi,0x2ec53853
  415fd8:	jmp    0x415f6e
  415fda:	(bad)  
  415fdb:	lahf   
  415fdc:	inc    esi
  415fdd:	cmpxchg BYTE PTR [ecx+ebp*1],ah
  415fe1:	pop    ss
  415fe2:	and    eax,0x7524767d
  415fe7:	aaa    
  415fe8:	pop    edi
  415fe9:	sub    BYTE PTR [edi],bl
  415feb:	lds    esi,FWORD PTR [edi]
  415fed:	fs inc esi
  415fef:	mov    cl,0x7e
  415ff1:	sbb    BYTE PTR [edx+0x2bff7499],ah
  415ff7:	dec    eax
  415ff8:	mov    eax,ds:0xff8fd93e
  415ffd:	mov    esi,0xa4b4eb85
  416002:	lea    esp,[esi-0x53f961f]
  416008:	test   al,0xab
  41600a:	pop    edx
  41600b:	dec    edx
  41600c:	pop    ebx
  41600d:	mov    esp,0xa96b6de
  416012:	sub    BYTE PTR [eax+0x14],bh
  416015:	leave  
  416016:	pop    eax
  416017:	dec    ebx
  416018:	jbe    0x415ff5
  41601a:	sub    esi,ebp
  41601c:	(bad)  
  41601d:	int3   
  41601e:	enter  0x6726,0x2e
  416022:	test   bl,dh
  416024:	push   edx
  416025:	xchg   edi,eax
  416026:	daa    
  416027:	outs   dx,DWORD PTR ds:[esi]
  416028:	add    BYTE PTR [edi],bh
  41602a:	scas   al,BYTE PTR es:[edi]
  41602b:	scas   al,BYTE PTR es:[edi]
  41602c:	adc    al,BYTE PTR [edx-0x6a46fdc5]
  416032:	test   DWORD PTR es:[edi+0x0],edx
  416036:	jmp    FWORD PTR [eax+0x51]
  416039:	mov    cs,edi
  41603b:	jne    0x4160a3
  41603d:	add    BYTE PTR ds:0xab3a1393,cl
  416043:	arpl   WORD PTR [ecx],bp
  416045:	mov    bl,0xa0
  416047:	mov    eax,0x42dd8743
  41604c:	pop    edi
  41604d:	imul   eax,DWORD PTR [edx+edi*4-0x18a4b2df],0x67
  416055:	ss ret 0xd0e5
  416059:	jae    0x41602d
  41605b:	ficomp DWORD PTR [esi-0x2d784609]
  416061:	dec    ebp
  416062:	add    cl,al
  416064:	cwde   
  416065:	in     al,dx
  416066:	pop    es
  416067:	out    dx,eax
  416068:	stc    
  416069:	pop    ebx
  41606a:	nop
  41606b:	adc    DWORD PTR [eax-0x60],eax
  41606e:	mov    fs,WORD PTR [eax+edx*1-0x5b]
  416072:	mov    edi,0x7b6ddf86
  416077:	cld    
  416078:	jge    0x4160da
  41607a:	ficomp WORD PTR [esi+0x5bccd3af]
  416080:	inc    esp
  416081:	push   edx
  416082:	mov    cl,0x19
  416084:	sub    BYTE PTR [ecx-0x3f44138a],bh
  41608a:	inc    ebp
  41608b:	stos   DWORD PTR es:[edi],eax
  41608c:	fisubr DWORD PTR [edx]
  41608e:	dec    edx
  41608f:	xchg   esi,eax
  416090:	cmp    bh,al
  416092:	in     al,dx
  416093:	fwait
  416094:	dec    ebp
  416095:	jl     0x4160d3
  416097:	push   edx
  416098:	xchg   ebx,eax
  416099:	push   edx
  41609a:	sub    ah,BYTE PTR [ebx+0x55093aff]
  4160a0:	rol    DWORD PTR [eax+0x38a27db6],0x71
  4160a7:	mov    esp,0x87320a3
  4160ac:	aam    0x67
  4160ae:	fs leave 
  4160b0:	pop    ebx
  4160b1:	lods   al,BYTE PTR ds:[esi]
  4160b2:	ins    BYTE PTR es:[edi],dx
  4160b3:	add    DWORD PTR [eax-0x50ff36a3],edi
  4160b9:	push   esp
  4160ba:	sub    ch,cl
  4160bc:	loope  0x4160c2
  4160be:	adc    ebx,edx
  4160c0:	push   edi
  4160c1:	and    edi,DWORD PTR es:[ecx]
  4160c4:	(bad)  
  4160c5:	mov    ebp,0xb1ff579a
  4160ca:	(bad)  
  4160cb:	dec    esp
  4160cd:	fiadd  WORD PTR [ebp-0x3a]
  4160d0:	jge    0x4160ed
  4160d2:	outs   dx,DWORD PTR ds:[esi]
  4160d3:	and    BYTE PTR [edx+eax*1+0x3b],ch
  4160d7:	mov    bl,0x51
  4160d9:	add    esp,DWORD PTR ds:0x84c44bd
  4160df:	stc    
  4160e0:	lock mov WORD PTR [ecx+ebx*1],fs
  4160e4:	and    edi,DWORD PTR [ecx+ebp*2-0x29]
  4160e8:	pop    es
  4160e9:	(bad)  
  4160ea:	(bad)  
  4160eb:	or     ecx,DWORD PTR [esi]
  4160ed:	fs push ebp
  4160ef:	inc    esi
  4160f0:	call   ecx
  4160f2:	xchg   edx,eax
  4160f3:	add    esi,DWORD PTR [edi+0x71]
  4160f6:	and    DWORD PTR [esi-0x13],edi
  4160f9:	xor    dh,0xf2
  4160fc:	bound  edx,QWORD PTR [ebp-0x63c086]
  416102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416103:	js     0x4160a4
  416105:	xchg   di,ax
  416107:	jle    0x41614a
  416109:	sub    BYTE PTR [ebp+0x3f],bl
  41610c:	dec    ebx
  41610d:	pop    DWORD PTR [edx-0xb]
  416110:	mov    ds:0x31036593,al
  416115:	daa    
  416116:	fnsetpm(287 only) 
  416118:	lds    edi,FWORD PTR ds:0x18cb933e
  41611e:	add    DWORD PTR [edi],esi
  416120:	cdq    
  416121:	dec    esi
  416122:	fld    QWORD PTR [ecx]
  416124:	call   0x6ec1:0xad20a5f6
  41612b:	lea    ecx,[edi-0x2618ef06]
  416131:	push   cs
  416132:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416133:	in     eax,dx
  416134:	enter  0x4e6d,0x23
  416138:	xor    BYTE PTR [eax],ch
  41613a:	(bad)  
  41613b:	retf   
  41613c:	ret    
  41613d:	mov    DWORD PTR gs:[edi-0x3e9b21ea],esp
  416144:	push   cs
  416145:	add    dh,BYTE PTR [edi+0x2a]
  416148:	inc    ebx
  416149:	mov    ah,0xcd
  41614b:	(bad)  
  41614c:	and    esi,ebp
  41614e:	push   ebx
  41614f:	aam    0xcf
  416151:	aam    0xf9
  416153:	jae    0x4161cd
  416155:	cmc    
  416156:	dec    edx
  416157:	sbb    DWORD PTR [ecx],esp
  416159:	ret    
  41615a:	into   
  41615b:	sbb    eax,0xc44d1947
  416160:	jbe    0x416147
  416162:	add    DWORD PTR [edx+0x17],esp
  416165:	ret    
  416166:	not    BYTE PTR fs:[esi+0x681d403c]
  41616d:	inc    ebx
  41616e:	std    
  41616f:	scas   eax,DWORD PTR es:[edi]
  416170:	mov    al,0xbe
  416172:	aad    0xab
  416174:	nop
  416175:	mov    ecx,0x9150e36a
  41617a:	stc    
  41617b:	fistp  WORD PTR [esi+0x69]
  41617e:	mov    ds:0xea4bbc4e,eax
  416183:	sub    DWORD PTR [edx-0x2726b650],ebp
  416189:	mov    WORD PTR ds:0x6cab5b49,gs
  41618f:	or     BYTE PTR [esi+0x52],0xa3
  416193:	pop    es
  416194:	lock xlat BYTE PTR ds:[ebx]
  416196:	mov    bh,0x57
  416198:	out    dx,al
  416199:	add    esp,DWORD PTR [eax]
  41619b:	cmp    eax,0x4fe19e04
  4161a0:	iret   
  4161a1:	out    0x1b,al
  4161a3:	retf   
  4161a4:	sbb    eax,eax
  4161a6:	or     cl,BYTE PTR [edx-0x8]
  4161a9:	sbb    DWORD PTR [ebx+ebp*8+0xd],0xb2da606a
  4161b1:	retf   
  4161b2:	inc    esi
  4161b3:	cld    
  4161b4:	xchg   BYTE PTR [ebx-0x78],bl
  4161b7:	jnp    0x416180
  4161b9:	daa    
  4161ba:	fistp  DWORD PTR [ebx-0x76db362c]
  4161c0:	adc    edx,DWORD PTR [ecx-0xe9e41a1]
  4161c6:	dec    edi
  4161c7:	sar    dh,1
  4161c9:	add    eax,DWORD PTR [ebx]
  4161cb:	scas   al,BYTE PTR es:[edi]
  4161cc:	sub    DWORD PTR [ebx],0x1f
  4161cf:	stos   DWORD PTR es:[edi],eax
  4161d0:	stc    
  4161d1:	(bad)  
  4161d2:	or     al,0x1
  4161d4:	mov    ebp,0xb7c83e3d
  4161d9:	xchg   edx,eax
  4161da:	loop   0x41622c
  4161dc:	jmp    DWORD PTR [eax-0x40]
  4161df:	and    esp,ebx
  4161e1:	sub    al,0xb9
  4161e3:	out    dx,al
  4161e4:	adc    BYTE PTR [edx+0x0],al
  4161e7:	pop    ecx
  4161e8:	mov    ?,ecx
  4161ea:	test   BYTE PTR [edx+eax*4+0x68b4cc25],dl
  4161f1:	loopne 0x416258
  4161f3:	jnp    0x416202
  4161f5:	push   0x325e2613
  4161fa:	xchg   edx,eax
  4161fb:	int    0x6b
  4161fd:	mov    eax,ds:0x53622812
  416202:	popf   
  416203:	jo     0x416250
  416205:	lahf   
  416206:	les    ebx,FWORD PTR [eax]
  416208:	test   DWORD PTR [ecx],0x633634fd
  41620e:	inc    ebp
  41620f:	retf   0x5ce9
  416212:	das    
  416213:	sbb    eax,0x3ae6f6c4
  416218:	sbb    al,0x42
  41621a:	sub    bh,al
  41621c:	push   esi
  41621d:	lds    edx,FWORD PTR [ebx-0x4b493fef]
  416223:	pushf  
  416224:	pop    esi
  416225:	cmp    eax,0xcf5df5af
  41622a:	sbb    ecx,eax
  41622c:	ror    DWORD PTR [ecx+0x3609be31],0x40
  416233:	gs xor al,0x13
  416236:	test   BYTE PTR [esi],dh
  416238:	mov    esi,0x7943fbfc
  41623d:	ss push esp
  41623f:	retf   0x8c10
  416242:	push   edi
  416243:	or     eax,0xb18887d2
  416248:	(bad)  
  416249:	stc    
  41624a:	cmc    
  41624b:	add    DWORD PTR [ebp+0x6fdbc74d],ebx
  416251:	sti    
  416252:	inc    edi
  416253:	and    DWORD PTR [ecx+ecx*1],esi
  416256:	(bad)  gs:[ebp-0x3]
  41625a:	int3   
  41625b:	int    0x77
  41625d:	sbb    ebp,DWORD PTR ds:[bp-0x6422]
  416263:	push   esi
  416264:	mov    al,ds:0x25a2cb25
  416269:	sub    ch,BYTE PTR [edx]
  41626b:	sbb    DWORD PTR [ebp-0x11],edi
  41626e:	cmp    ecx,ebx
  416270:	xchg   ebp,eax
  416271:	dec    ebx
  416272:	add    dh,cl
  416274:	push   eax
  416275:	xchg   esi,eax
  416276:	xor    DWORD PTR [esi+0x45],ebp
  416279:	push   0x5a0978f8
  41627e:	sar    DWORD PTR [edx+edi*1+0x73a71551],0xe
  416286:	or     DWORD PTR [edi],edi
  416288:	call   FWORD PTR [ecx-0x7aacadd4]
  41628e:	loopne 0x416218
  416290:	inc    ebp
  416291:	and    eax,0xc378b932
  416296:	mov    al,ds:0x5b1dacd7
  41629b:	scas   al,BYTE PTR es:[edi]
  41629c:	gs dec esi
  41629e:	and    edi,DWORD PTR ds:0xe125be0e
  4162a4:	add    ch,BYTE PTR [edi+0x42]
  4162a7:	rcl    BYTE PTR [ecx],0xf4
  4162aa:	mov    al,ds:0x785b0867
  4162af:	mov    ds:0x7afe0af7,al
  4162b4:	push   edx
  4162b5:	mov    esi,0x1ea03222
  4162ba:	ret    
  4162bb:	enter  0xedc,0xca
  4162bf:	adc    edx,DWORD PTR [eax]
  4162c1:	retf   0xbd75
  4162c4:	popf   
  4162c5:	xor    al,0xef
  4162c7:	push   0x0
  4162c9:	pop    ebp
  4162ca:	xlat   BYTE PTR ds:[ebx]
  4162cb:	pushf  
  4162cc:	add    eax,DWORD PTR [eax-0x59]
  4162cf:	adc    edx,edi
  4162d1:	and    al,0x6c
  4162d3:	xchg   ecx,eax
  4162d4:	jecxz  0x41629d
  4162d6:	jae    0x416269
  4162d8:	je     0x416295
  4162da:	arpl   dx,bx
  4162dc:	xor    al,0x70
  4162de:	jg     0x4162fc
  4162e0:	repnz or esp,DWORD PTR [bx+di+0x4]
  4162e5:	xchg   edi,eax
  4162e6:	inc    ebp
  4162e7:	dec    ecx
  4162e8:	mov    ah,0x17
  4162ea:	sahf   
  4162eb:	xor    ax,0xefe7
  4162ef:	jae    0x4162e8
  4162f1:	outs   dx,BYTE PTR ds:[esi]
  4162f2:	xchg   BYTE PTR [esi-0x5],dl
  4162f5:	xor    esp,DWORD PTR ds:0xd9c7c2fd
  4162fb:	jno    0x4162b2
  4162fd:	xchg   esp,eax
  4162fe:	in     eax,dx
  4162ff:	sub    edi,ecx
  416301:	js     0x4162fb
  416303:	test   BYTE PTR [esi],bh
  416305:	lock xlat BYTE PTR ds:[ebx]
  416307:	inc    ebx
  416308:	xchg   edx,eax
  416309:	lods   al,BYTE PTR ds:[esi]
  41630a:	rol    ecx,0x2f
  41630d:	push   ebx
  41630e:	aam    0xa8
  416310:	clc    
  416311:	daa    
  416312:	(bad)  
  416313:	xor    al,0x48
  416315:	pop    esp
  416316:	pop    ecx
  416317:	pop    ebx
  416318:	pop    esp
  416319:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41631a:	mov    esp,0x21313558
  41631f:	xchg   edx,eax
  416320:	inc    ebx
  416321:	push   0x60adce2b
  416326:	mov    edi,0xa3ac2ee4
  41632b:	or     dh,BYTE PTR [ebp+0x13]
  41632e:	hlt    
  41632f:	sar    BYTE PTR [edx+0x59928e8d],cl
  416335:	arpl   WORD PTR [ebx-0x79],cx
  416338:	sar    DWORD PTR [ebp-0x7e],0x9f
  41633c:	and    al,BYTE PTR [edx+0x3a]
  41633f:	mov    ebx,0x4bc5b71f
  416344:	mov    eax,0x986d7343
  416349:	sbb    al,0xb7
  41634b:	sub    al,0x14
  41634d:	(bad)  
  41634e:	pusha  
  41634f:	scas   eax,DWORD PTR es:[edi]
  416350:	pop    ax
  416352:	jle    0x416314
  416354:	jns    0x416321
  416356:	pop    ss
  416357:	push   esi
  416358:	cdq    
  416359:	jbe    0x4162f4
  41635b:	sbb    DWORD PTR [ebp+0x3],ebp
  41635e:	jp     0x4163a5
  416360:	sub    dl,bh
  416362:	cdq    
  416363:	jmp    0x166665ed
  416368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416369:	jmp    0x4a10e7d4
  41636e:	aas    
  41636f:	add    DWORD PTR [edx],ebp
  416371:	sbb    eax,0x1bc344e0
  416376:	adc    BYTE PTR [esi+esi*2+0x1c85cafa],ch
  41637d:	jno    0x41637a
  41637f:	into   
  416380:	and    DWORD PTR [ecx],0xac1d8cb
  416386:	je     0x41631e
  416388:	js     0x4163f5
  41638a:	je     0x416365
  41638c:	add    DWORD PTR [eax+0xc13ce82],esi
  416392:	fnstsw WORD PTR [ecx-0x8]
  416395:	fcmove st,st(5)
  416397:	out    dx,al
  416398:	adc    al,0xf8
  41639a:	pop    ebp
  41639b:	(bad)  
  41639d:	cmp    al,0x80
  41639f:	cwde   
  4163a0:	or     dh,BYTE PTR [edi-0x58fae30e]
  4163a6:	pop    ebp
  4163a7:	mov    ebx,eax
  4163a9:	neg    BYTE PTR [ecx]
  4163ab:	push   esi
  4163ac:	sub    bh,BYTE PTR [eax]
  4163ae:	inc    BYTE PTR [eax-0x65c2490e]
  4163b4:	scas   al,BYTE PTR es:[edi]
  4163b5:	push   ds
  4163b6:	mov    edx,0x60aab36
  4163bb:	je     0x4163f1
  4163bd:	xlat   BYTE PTR ds:[ebx]
  4163be:	cld    
  4163bf:	add    esi,edx
  4163c1:	hlt    
  4163c2:	push   ecx
  4163c3:	in     eax,dx
  4163c4:	and    ch,ch
  4163c6:	mov    BYTE PTR [esp+0x75],bh
  4163ca:	loop   0x416381
  4163cc:	add    BYTE PTR [eax+0x263440f],ah
  4163d2:	xlat   BYTE PTR ds:[ebx]
  4163d3:	xchg   esp,eax
  4163d4:	inc    esp
  4163d5:	and    eax,0xa3e7e5dd
  4163da:	xchg   edi,eax
  4163db:	mov    ds:0x444b22b4,eax
  4163e0:	mov    BYTE PTR [esi],dh
  4163e2:	fstp   QWORD PTR [edx]
  4163e4:	inc    eax
  4163e5:	lds    ebp,FWORD PTR [ecx]
  4163e7:	jmp    0x416415
  4163e9:	jmp    0xf17f:0x387407fc
  4163f0:	jle    0x41637b
  4163f2:	jecxz  0x416430
  4163f4:	shrd   DWORD PTR [edi],edi,0xb7
  4163f8:	pop    ss
  4163f9:	fs clc 
  4163fb:	sbb    al,0x72
  4163fd:	cs inc ecx
  4163ff:	mov    dh,0xba
  416401:	shl    bh,0x71
  416404:	hlt    
  416405:	jno    0x416476
  416407:	fisub  WORD PTR [edx+0x58]
  41640a:	pushf  
  41640b:	and    cl,BYTE PTR [edx]
  41640d:	mov    edi,0xbb1854b9
  416412:	mov    DWORD PTR [edx+0x2f],edx
  416415:	adc    eax,edx
  416417:	push   ebx
  416418:	(bad)  
  416419:	xchg   ebx,eax
  41641a:	cmp    DWORD PTR [edx-0x26],edi
  41641d:	push   es
  41641e:	add    eax,0x69a5a5f8
  416423:	ret    
  416424:	mov    al,0xee
  416426:	jno    0x4163bd
  416428:	pop    edx
  416429:	jle    0x416414
  41642b:	dec    esi
  41642c:	ror    DWORD PTR [edx],cl
  41642e:	cmp    eax,0x40061750
  416433:	sub    ah,BYTE PTR [ebx-0x735b5733]
  416439:	push   ds
  41643a:	sbb    al,BYTE PTR [edi+0x3353905a]
  416440:	fsub   st,st(2)
  416442:	fld    TBYTE PTR es:[eax-0x6a22b515]
  416449:	daa    
  41644a:	sub    ecx,DWORD PTR [ebx-0x6b]
  41644d:	pop    eax
  41644e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41644f:	out    0x2c,al
  416451:	lods   al,BYTE PTR ds:[esi]
  416452:	mov    al,ds:0xe727719
  416457:	fstp   TBYTE PTR [ebx+edi*8+0x62]
  41645b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41645c:	jmp    0x743f21c0
  416461:	inc    eax
  416462:	jge    0x4163e4
  416464:	fdiv   st,st(6)
  416466:	rol    ebp,cl
  416468:	and    ah,BYTE PTR [edi]
  41646a:	out    dx,al
  41646b:	dec    esi
  41646c:	jo     0x416426
  41646e:	and    BYTE PTR [ebp-0x59],dl
  416471:	loopne 0x416441
  416473:	xchg   edx,eax
  416474:	inc    edi
  416475:	mov    ds:0xb3690122,eax
  41647a:	inc    esp
  41647b:	icebp  
  41647c:	jbe    0x416423
  41647e:	add    BYTE PTR [edi],bl
  416480:	ins    BYTE PTR es:[edi],dx
  416481:	ss cmc 
  416483:	call   0xe46532c3
  416488:	dec    ebx
  416489:	xor    bl,BYTE PTR [edx-0xf]
  41648c:	in     eax,dx
  41648d:	mov    dh,BYTE PTR [ecx+0x18]
  416490:	(bad)
  416493:	in     eax,0x7d
  416495:	inc    ecx
  416496:	jg     0x41641f
  416498:	push   ebp
  416499:	cmp    eax,0xed386a1d
  41649e:	mov    ch,0xfa
  4164a0:	add    BYTE PTR [esi+0x11],bh
  4164a3:	enter  0x98b9,0x1a
  4164a7:	and    al,0x7a
  4164a9:	xchg   ecx,eax
  4164aa:	xchg   ebp,eax
  4164ab:	not    DWORD PTR [ebp+0x50]
  4164ae:	dec    ebp
  4164af:	add    ebx,DWORD PTR [esp+ebx*2]
  4164b2:	mov    ds:0x9c6106cb,al
  4164b7:	jg     0x416444
  4164b9:	in     al,dx
  4164ba:	lahf   
  4164bb:	imul   esi,esp,0x3fb13bd4
  4164c1:	sub    al,0x3e
  4164c3:	push   ss
  4164c4:	nop
  4164c5:	dec    ecx
  4164c6:	movaps xmm2,xmm7
  4164c9:	test   al,0xa6
  4164cb:	push   0x3f
  4164cd:	neg    bl
  4164cf:	push   es
  4164d0:	pushf  
  4164d1:	sbb    ch,bh
  4164d3:	pop    eax
  4164d4:	mov    cs,WORD PTR [ecx-0x73c70e88]
  4164da:	inc    esp
  4164db:	inc    esp
  4164dc:	retf   
  4164dd:	popa   
  4164de:	int    0x2e
  4164e0:	mov    gs,WORD PTR [eax+0x7134a12]
  4164e6:	pop    ss
  4164e7:	mov    al,0x70
  4164e9:	push   ds
  4164ea:	mov    dh,0xaf
  4164ec:	mov    bh,0x34
  4164ee:	jno    0x4164eb
  4164f0:	cld    
  4164f1:	cmp    BYTE PTR [eax+0x43682991],0x34
  4164f8:	xor    eax,ebx
  4164fa:	dec    ecx
  4164fb:	mov    DWORD PTR [eax-0x44],edi
  4164fe:	adc    al,0xc8
  416500:	aaa    
  416501:	pop    esi
  416502:	pop    ebx
  416503:	jle    0x416569
  416505:	cmp    eax,0x32aaafbf
  41650a:	xor    eax,0xf5b327a8
  41650f:	xchg   edi,eax
  416510:	cmp    DWORD PTR [esi],ebp
  416512:	bound  edx,QWORD PTR [eax-0x32]
  416515:	push   edi
  416516:	fisttp QWORD PTR [edx-0x39b3f35a]
  41651c:	out    dx,eax
  41651d:	sbb    eax,DWORD PTR [edi]
  41651f:	std    
  416520:	test   DWORD PTR [eax-0x5],edi
  416523:	(bad)  
  416524:	or     dh,BYTE PTR [edi]
  416526:	mov    es,WORD PTR [ebx+0x59c9cfe1]
  41652c:	adc    BYTE PTR [eax-0x41],0xf4
  416530:	lods   eax,DWORD PTR ds:[esi]
  416531:	sbb    edi,esi
  416533:	jae    0x41650e
  416535:	and    BYTE PTR [eax+esi*4-0x2d],bl
  416539:	popf   
  41653a:	je     0x4164bf
  41653c:	test   esp,esp
  41653e:	fidivr DWORD PTR [ecx+0x4f26ad93]
  416544:	xchg   edi,eax
  416545:	cli    
  416546:	mov    esi,0xdd310aeb
  41654b:	mul    DWORD PTR ds:0xa7962847
  416551:	xor    eax,0x219fbe6a
  416556:	jmp    0x416596
  416558:	push   edx
  416559:	cmp    ah,bl
  41655b:	or     edx,edx
  41655d:	xor    eax,0x68ab2d2b
  416562:	sub    ah,dl
  416564:	mov    BYTE PTR [esi+0x28ff6106],dl
  41656a:	jge    0x41657f
  41656c:	xlat   BYTE PTR ds:[ebx]
  41656d:	setg   BYTE PTR [edx]
  416570:	adc    dl,dl
  416572:	fimul  WORD PTR [eax+0x623aa802]
  416578:	or     BYTE PTR [ecx+ebp*2],al
  41657b:	jo     0x41659a
  41657d:	add    BYTE PTR [ecx+0x3b],bl
  416580:	or     al,0xcb
  416582:	test   al,0x54
  416584:	icebp  
  416585:	test   al,0x6c
  416587:	outs   dx,DWORD PTR ds:[esi]
  416588:	es out 0x91,al
  41658b:	push   ds
  41658c:	outs   dx,DWORD PTR ds:[esi]
  41658d:	hlt    
  41658e:	inc    ebx
  41658f:	lods   al,BYTE PTR ds:[esi]
  416590:	sbb    eax,DWORD PTR [edx+0x9597e03]
  416596:	sub    bl,BYTE PTR es:[esi-0x1d]
  41659a:	cmc    
  41659b:	lods   al,BYTE PTR ds:[esi]
  41659c:	adc    al,0xde
  41659e:	enter  0x7b82,0x2
  4165a2:	and    esp,0x4cab82eb
  4165a8:	js     0x4165f9
  4165aa:	or     BYTE PTR [ecx-0x6],cl
  4165ad:	sub    DWORD PTR [edi-0x46],ecx
  4165b0:	xlat   BYTE PTR ds:[ebx]
  4165b1:	aam    0xd2
  4165b3:	mov    esp,0xe77a6697
  4165b8:	or     ebp,DWORD PTR [ebp+0x35b86c78]
  4165be:	rcr    BYTE PTR [eax+0x6bedca62],0x3b
  4165c5:	fadd   st,st(4)
  4165c7:	jge    0x416549
  4165c9:	jb     0x41663c
  4165cb:	adc    DWORD PTR [ebx],ebp
  4165cd:	inc    edi
  4165ce:	jecxz  0x4165dd
  4165d0:	jo     0x416566
  4165d2:	sbb    ecx,DWORD PTR [ecx]
  4165d4:	popf   
  4165d5:	into   
  4165d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165d7:	jnp    0x416568
  4165d9:	rol    BYTE PTR [edi-0x47e7c0dd],1
  4165df:	mov    bl,0x13
  4165e1:	cmp    al,0x52
  4165e3:	dec    ebp
  4165e4:	adc    al,BYTE PTR [ecx-0xe698c4f]
  4165ea:	jmp    0x4a51f309
  4165ef:	mov    ecx,0x87e23c72
  4165f4:	or     DWORD PTR [ebp+0x19a301e5],esi
  4165fa:	lds    esp,FWORD PTR [ebx+0x1f]
  4165fd:	inc    edx
  4165fe:	push   edi
  4165ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416600:	pop    ebp
  416601:	es in  al,0x7d
  416604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416605:	jmp    0x4165f6
  416607:	adc    eax,0xe7cfc613
  41660c:	jns    0x41662e
  41660e:	xchg   edi,eax
  41660f:	jnp    0x416594
  416611:	ficom  WORD PTR [ebp-0x2292faf6]
  416617:	fld    st(4)
  416619:	ret    0xc779
  41661c:	fimul  DWORD PTR [edi-0x2cd39d]
  416622:	scas   al,BYTE PTR es:[edi]
  416623:	test   BYTE PTR [ebx+edi*2+0x4beacbde],bh
  41662a:	mov    edx,eax
  41662c:	and    al,0xfb
  41662e:	inc    esi
  41662f:	(bad)  [esi-0x42ab63de]
  416635:	into   
  416636:	stos   DWORD PTR es:[edi],eax
  416637:	mov    ebx,0x7301fd02
  41663c:	add    al,0xa1
  41663e:	in     ax,0xc4
  416641:	xchg   ebp,eax
  416642:	jnp    0x4166bc
  416644:	xchg   esi,eax
  416645:	das    
  416646:	mov    ?,WORD PTR ds:0xae2d7f48
  41664c:	sub    dl,al
  41664e:	mov    bh,0x70
  416650:	out    0x78,eax
  416652:	cwde   
  416653:	push   0x3c
  416655:	stos   DWORD PTR es:[edi],eax
  416656:	push   ss
  416657:	jmp    0xa910dcfd
  41665c:	clc    
  41665d:	lahf   
  41665e:	icebp  
  41665f:	repz in al,0x5
  416662:	cli    
  416663:	ins    DWORD PTR es:[edi],dx
  416664:	dec    esp
  416665:	dec    esi
  416666:	scas   eax,DWORD PTR es:[edi]
  416667:	add    bl,dl
  416669:	push   ds
  41666a:	pusha  
  41666b:	or     eax,0x3fab85ce
  416670:	or     al,0x2d
  416672:	stos   DWORD PTR es:[edi],eax
  416673:	retf   0xe3b
  416676:	mov    bh,dl
  416678:	add    DWORD PTR [edx+0x74a3343a],eax
  41667e:	repnz xor esp,DWORD PTR [edx-0xf142ccf]
  416685:	sbb    eax,ebx
  416687:	int3   
  416688:	(bad)  
  416689:	aas    
  41668a:	out    dx,eax
  41668b:	mov    ds:0x6cae02c,al
  416690:	imul   ebx,DWORD PTR fs:[edx],0x51d606ab
  416697:	xchg   esi,eax
  416698:	adc    BYTE PTR [ebp+0x58ba09eb],dh
  41669e:	or     bl,BYTE PTR [ebx+ebx*1]
  4166a1:	xchg   edx,eax
  4166a2:	cmp    al,0x6e
  4166a4:	aas    
  4166a5:	fldcw  WORD PTR [eax+0x2d]
  4166a8:	jns    0x4166ed
  4166aa:	mov    ebp,0xf1277429
  4166af:	mov    esi,0xb3fe1cbe
  4166b4:	xchg   esp,eax
  4166b5:	and    eax,0x3249a026
  4166ba:	in     eax,dx
  4166bb:	mov    edi,0xaed45aef
  4166c0:	mov    BYTE PTR [eax+0x4f6dfe02],dh
  4166c6:	adc    si,sp
  4166c9:	pop    edi
  4166ca:	inc    edx
  4166cb:	shl    BYTE PTR [edi],cl
  4166cd:	sbb    al,0x3b
  4166cf:	in     al,0x11
  4166d1:	iret   
  4166d2:	push   es
  4166d3:	rcr    DWORD PTR [edx],cl
  4166d5:	or     eax,0x7ecd1ed3
  4166da:	loope  0x4166b3
  4166dc:	adc    eax,0x86b5ec73
  4166e1:	mov    DWORD PTR [edx+0xf412d9b],esi
  4166e7:	mov    ebp,ebp
  4166e9:	popf   
  4166ea:	push   0x37366ddc
  4166ef:	popf   
  4166f0:	xchg   ecx,eax
  4166f1:	inc    esp
  4166f2:	in     al,dx
  4166f3:	aad    0x6e
  4166f5:	mov    ebx,0x1aa1782
  4166fb:	in     eax,dx
  4166fc:	sar    ch,cl
  4166fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166ff:	mov    ds:0x9d605d14,al
  416704:	inc    esp
  416705:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416706:	sbb    edi,esp
  416708:	inc    edi
  416709:	xchg   edx,eax
  41670a:	das    
  41670b:	xor    eax,0x3fa04bbe
  416710:	jp     0x41678b
  416712:	add    al,0x90
  416714:	outs   dx,BYTE PTR ds:[esi]
  416715:	mov    esp,0x50fc6735
  41671a:	pop    ecx
  41671b:	push   cs
  41671c:	add    eax,DWORD PTR [eax]
  41671e:	out    dx,al
  41671f:	cmp    esi,ecx
  416721:	out    dx,ax
  416723:	test   al,0x76
  416725:	data16 aad 0x82
  416728:	pop    ebx
  416729:	push   edx
  41672a:	mov    ebx,DWORD PTR [ebp-0x120e21d4]
  416730:	mov    edi,0x54616673
  416735:	hlt    
  416736:	cdq    
  416737:	rcl    bl,cl
  416739:	fstp   TBYTE PTR [ebp+0x3d935901]
  41673f:	mov    fs,WORD PTR [ecx+0x36a5c494]
  416745:	pop    ecx
  416746:	fucomip st,st(7)
  416748:	push   edx
  416749:	cmp    DWORD PTR [edx-0x46],esp
  41674c:	ror    edi,1
  41674e:	ss mov eax,0x4afbe67f
  416754:	pop    es
  416755:	stos   DWORD PTR es:[edi],eax
  416756:	jmp    0xfb46:0xfe9420bc
  41675d:	stos   DWORD PTR es:[edi],eax
  41675e:	clc    
  41675f:	(bad)  
  416760:	cmp    BYTE PTR [eax+ebp*4+0x2e],ch
  416764:	jae    0x4167e0
  416766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416767:	test   eax,0x2101c94f
  41676c:	sahf   
  41676d:	pop    ds
  41676e:	pop    ebp
  41676f:	lock jg 0x416700
  416772:	xlat   BYTE PTR ds:[ebx]
  416773:	mov    esi,0x1f66d495
  416778:	xchg   esi,eax
  416779:	out    dx,eax
  41677a:	out    0x93,al
  41677c:	call   0x85327fc1
  416781:	(bad)  
  416782:	dec    ebp
  416783:	mov    eax,ds:0x16979182
  416788:	sub    ah,BYTE PTR [ebx-0x1c]
  41678b:	mov    al,ds:0xb7a8955
  416790:	sbb    ah,BYTE PTR [esi-0x6c]
  416793:	xchg   BYTE PTR [ebx+0x12],bh
  416796:	aam    0x50
  416798:	mov    cl,0x85
  41679a:	push   es
  41679b:	xchg   ecx,eax
  41679c:	inc    edi
  41679d:	imul   ebx,DWORD PTR [esi-0x5219b9d1],0x12aa82b5
  4167a7:	or     al,0xcd
  4167a9:	jae    0x41676e
  4167ab:	das    
  4167ac:	aaa    
  4167ad:	clc    
  4167ae:	ins    DWORD PTR es:[edi],dx
  4167af:	and    ch,al
  4167b1:	aaa    
  4167b2:	std    
  4167b3:	xor    BYTE PTR [eax],dl
  4167b5:	retf   
  4167b6:	mov    ebp,DWORD PTR [ebp-0x7e]
  4167b9:	jecxz  0x416767
  4167bb:	push   esi
  4167bc:	in     eax,0xb3
  4167be:	je     0x4167ae
  4167c0:	out    0x53,eax
  4167c2:	lahf   
  4167c3:	pushf  
  4167c4:	ja     0x41677c
  4167c6:	pop    es
  4167c7:	inc    edx
  4167c8:	sti    
  4167c9:	mov    dl,0xb0
  4167cb:	mov    bh,0xd0
  4167cd:	xchg   ecx,eax
  4167ce:	dec    ebp
  4167cf:	ror    BYTE PTR ds:0xf700964c,cl
  4167d5:	sahf   
  4167d6:	inc    ebx
  4167d7:	sub    dh,BYTE PTR [ebx]
  4167d9:	add    BYTE PTR [edx-0x5b8be278],dl
  4167df:	push   edx
  4167e0:	rcl    DWORD PTR [ebp+ecx*8+0x3c],1
  4167e4:	sub    DWORD PTR [esp-0x50],ebp
  4167e8:	shr    BYTE PTR [edx],cl
  4167ea:	push   esi
  4167eb:	enter  0x7328,0xe7
  4167ef:	pop    edi
  4167f0:	or     eax,0xa0c20ef8
  4167f5:	xor    dl,cl
  4167f7:	enter  0x6d4,0x36
  4167fb:	and    al,0x11
  4167fd:	dec    ebx
  4167fe:	aaa    
  4167ff:	jne    0x41680a
  416801:	mov    ebx,esi
  416803:	push   edx
  416804:	int3   
  416805:	loop   0x416853
  416807:	inc    ebx
  416808:	cmp    eax,DWORD PTR [edi]
  41680a:	jl     0x41680f
  41680c:	dec    esi
  41680d:	xchg   esp,eax
  41680e:	and    BYTE PTR [esp+esi*8+0x105455fc],bl
  416815:	sbb    DWORD PTR [ecx-0x1a],eax
  416818:	inc    ebx
  416819:	loop   0x4167a7
  41681b:	dec    esi
  41681c:	cmp    eax,0xdcb25d60
  416821:	add    al,0x9a
  416823:	sar    DWORD PTR [edx+ecx*1-0x66],cl
  416827:	inc    ebp
  416828:	xor    ebp,DWORD PTR [ebx]
  41682a:	add    edx,DWORD PTR [ebp+edx*2-0x5]
  41682e:	dec    eax
  41682f:	bound  esp,QWORD PTR [edi-0x74]
  416832:	cmp    BYTE PTR [edx+0x7d],bh
  416835:	sub    edi,DWORD PTR [esp+ebx*8+0x4f]
  416839:	rep outs dx,DWORD PTR ds:[esi]
  41683b:	sbb    esi,DWORD PTR [ebp+0x28]
  41683e:	xchg   BYTE PTR [edi+0x39],cl
  416841:	adc    BYTE PTR [ebx],ch
  416843:	dec    ecx
  416844:	jbe    0x41680d
  416846:	stos   DWORD PTR es:[edi],eax
  416847:	(bad)  
  416848:	popa   
  416849:	pusha  
  41684a:	inc    ecx
  41684b:	push   eax
  41684c:	push   ss
  41684d:	icebp  
  41684e:	xor    DWORD PTR [eax+0x41],edx
  416851:	arpl   WORD PTR [edi],ax
  416853:	sbb    dl,BYTE PTR [edi+0xf]
  416856:	shr    BYTE PTR [ebx],0xe8
  416859:	lahf   
  41685a:	ins    BYTE PTR es:[edi],dx
  41685b:	lods   al,BYTE PTR ds:[esi]
  41685c:	xor    esp,DWORD PTR [edx+0x3a1304d7]
  416862:	cwde   
  416863:	dec    esi
  416864:	jge    0x41681a
  416866:	mov    bl,0xb6
  416868:	pop    esp
  416869:	push   edx
  41686a:	push   ebp
  41686b:	aad    0x7
  41686d:	jecxz  0x416816
  41686f:	push   esp
  416870:	pushf  
  416871:	sub    DWORD PTR fs:0x189716ac,ebx
  416878:	shl    BYTE PTR [ebx-0x54],0xc
  41687c:	sub    edx,DWORD PTR [eax-0x5f]
  41687f:	mov    dl,0xb1
  416881:	not    cl
  416883:	pop    edx
  416884:	daa    
  416885:	adc    BYTE PTR [edi+0x47],dh
  416888:	sti    
  416889:	sub    eax,0x7614cf17
  41688e:	sub    ecx,DWORD PTR [ebx+0x2cf0f5ea]
  416894:	xor    BYTE PTR [edx],dh
  416896:	pop    ebx
  416897:	or     al,0xad
  416899:	fist   DWORD PTR gs:[esi+0x55]
  41689d:	adc    edi,esi
  41689f:	inc    ebp
  4168a0:	loope  0x416880
  4168a2:	xchg   ecx,eax
  4168a3:	arpl   WORD PTR [edi],cx
  4168a5:	dec    eax
  4168a6:	push   0x5c
  4168a8:	jg     0x416901
  4168aa:	and    eax,0x9fd9d9c2
  4168af:	mov    cl,0x7b
  4168b1:	imul   ebx,esi,0x39
  4168b4:	sub    dh,cl
  4168b6:	fisub  WORD PTR [edi+edx*1-0x760c9306]
  4168bd:	xor    eax,0x7ade2608
  4168c2:	(bad)  
  4168c3:	jle    0x416922
  4168c5:	rol    BYTE PTR [ecx+0x61],1
  4168c8:	mov    esi,0x4fe393eb
  4168cd:	dec    edx
  4168ce:	push   ss
  4168cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168d0:	mov    edi,0x3a4960b4
  4168d5:	sub    BYTE PTR [edi],ah
  4168d7:	(bad)  
  4168d8:	fistp  DWORD PTR [esi+0x48a2c979]
  4168de:	out    dx,eax
  4168df:	push   0x9
  4168e1:	leave  
  4168e2:	imul   ebp,DWORD PTR [edx-0x18],0x57da4c80
  4168e9:	mov    ds:0x83d32130,eax
  4168ee:	sti    
  4168ef:	push   ebp
  4168f0:	xor    al,0xfb
  4168f2:	fwait
  4168f3:	jns    0x41690a
  4168f5:	icebp  
  4168f6:	dec    eax
  4168f7:	mov    edi,DWORD PTR [edx]
  4168f9:	in     eax,0x9d
  4168fb:	sub    al,ah
  4168fd:	(bad)
  416900:	imul   ebp,DWORD PTR [edx+0x53c99925],0x32
  416907:	mov    ah,0xd4
  416909:	es push esi
  41690b:	(bad)  
  41690c:	fidivr WORD PTR [esi]
  41690e:	inc    esi
  41690f:	lods   al,BYTE PTR ds:[esi]
  416910:	and    BYTE PTR [esp+ebp*8],al
  416913:	pop    esi
  416914:	mov    ch,0xf8
  416916:	aad    0xb9
  416918:	test   DWORD PTR [edi],ebx
  41691a:	push   eax
  41691b:	(bad)  
  41691d:	shl    DWORD PTR [ebx-0x3e99240f],1
  416923:	mov    DWORD PTR [ebp-0x3],0xa9e56462
  41692a:	std    
  41692b:	mov    cl,0xa1
  41692d:	sbb    eax,0x45010834
  416932:	in     eax,0xba
  416934:	ss push 0x485d411a
  41693a:	idiv   esp
  41693c:	jmp    0x4f90:0x2756cd76
  416943:	sar    BYTE PTR [ebx-0x6ff72384],0x85
  41694a:	pop    ebx
  41694b:	jp     0x416964
  41694d:	xor    bh,BYTE PTR [ebx]
  41694f:	(bad)  
  416950:	fldlg2 
  416952:	xor    esp,DWORD PTR [ebp+edx*8-0x5ee1054]
  416959:	mov    bl,0xa7
  41695b:	mov    ah,0xe9
  41695d:	test   eax,0x65519912
  416962:	xchg   BYTE PTR [bx+di+0x591a],bl
  416967:	pop    esp
  416968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416969:	in     al,dx
  41696a:	pop    ds
  41696b:	(bad)  
  41696c:	pop    ds
  41696d:	dec    ebp
  41696e:	xchg   esi,eax
  41696f:	stos   BYTE PTR es:[edi],al
  416970:	adc    esp,edi
  416972:	mov    eax,cs
  416974:	dec    ebx
  416975:	mov    esi,0xfb5f7e7d
  41697a:	mov    bl,0xfd
  41697c:	stc    
  41697d:	test   esi,0xb502ed59
  416983:	sub    al,0x35
  416985:	xor    DWORD PTR [edx+eax*1-0x4abf0c49],ebx
  41698c:	jp     0x416914
  41698e:	jb     0x416971
  416990:	mov    ch,0x15
  416992:	idiv   DWORD PTR [ecx]
  416994:	xor    DWORD PTR [edx+eiz*2],esi
  416997:	int3   
  416998:	mov    ah,0xad
  41699a:	inc    edi
  41699b:	cmp    bh,BYTE PTR [esi]
  41699d:	fidivr DWORD PTR [ecx]
  41699f:	jns    0x416958
  4169a1:	pop    edi
  4169a2:	aam    0xe8
  4169a4:	aas    
  4169a5:	call   0xdda26f95
  4169aa:	mov    ebx,0x42f46115
  4169af:	jne    0x416a04
  4169b1:	(bad)  
  4169b2:	dec    esp
  4169b3:	fild   DWORD PTR [esi-0x65]
  4169b6:	dec    ebp
  4169b7:	mov    al,0x23
  4169b9:	sbb    cl,BYTE PTR [ecx]
  4169bb:	inc    ebx
  4169bc:	clc    
  4169bd:	xchg   ecx,eax
  4169be:	mov    cs,WORD PTR [edi]
  4169c0:	cwde   
  4169c1:	mov    edi,0xd2262c70
  4169c6:	jmp    0xc71b:0xefb86be9
  4169cd:	dec    edx
  4169ce:	push   ecx
  4169cf:	xchg   ebp,eax
  4169d0:	cmp    esi,ecx
  4169d2:	mov    fs,WORD PTR [ebp-0x52a58583]
  4169d8:	into   
  4169d9:	pop    eax
  4169da:	rcl    DWORD PTR [ebx+0x1a],0x67
  4169de:	pop    esi
  4169df:	xchg   DWORD PTR [ebx],ecx
  4169e1:	cld    
  4169e2:	out    0xfc,eax
  4169e4:	mov    ch,0xeb
  4169e6:	jmp    0x416996
  4169e8:	ds dec ebx
  4169ea:	pop    esp
  4169eb:	movlhps xmm5,xmm0
  4169ee:	pop    ds
  4169ef:	mov    ah,0xd4
  4169f1:	jmp    0x854a:0x99545ea5
  4169f8:	neg    BYTE PTR [esp+ebx*1-0x63]
  4169fc:	gs ja  0x4169ce
  4169ff:	jge    0x41699c
  416a01:	dec    esp
  416a02:	sub    al,0x19
  416a04:	jp     0x41699f
  416a06:	jge    0x4169f4
  416a08:	bound  esi,QWORD PTR [edx]
  416a0a:	call   0xe1c4ca1b
  416a0f:	fld    DWORD PTR [esi]
  416a11:	mov    ecx,0xd751e7bc
  416a16:	pop    es
  416a17:	inc    edx
  416a18:	gs xchg edi,eax
  416a1a:	mov    cl,0xc5
  416a1c:	cmp    ebp,DWORD PTR [edx+0xf2151f]
  416a22:	out    0x26,eax
  416a24:	and    al,0xcd
  416a26:	stos   BYTE PTR es:[edi],al
  416a27:	test   al,0x45
  416a29:	jae    0x416a88
  416a2b:	xchg   edx,eax
  416a2c:	pop    ebp
  416a2d:	lock jo 0x4169e0
  416a30:	and    eax,0x4269152b
  416a35:	loope  0x4169e5
  416a37:	sub    BYTE PTR [ebx-0x5a],cl
  416a3a:	inc    edi
  416a3b:	add    BYTE PTR ds:0x53f1928,bl
  416a41:	arpl   WORD PTR [edi-0x679c2b8f],si
  416a47:	xlat   BYTE PTR ds:[ebx]
  416a48:	hlt    
  416a49:	sub    ebp,edi
  416a4b:	jno    0x4169f4
  416a4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a4e:	test   al,0xd
  416a50:	adc    ecx,edi
  416a52:	stos   DWORD PTR es:[edi],eax
  416a53:	pop    es
  416a54:	sub    DWORD PTR [ebp+0x7d],edx
  416a57:	dec    ebx
  416a58:	hlt    
  416a59:	xchg   edi,eax
  416a5a:	jle    0x416a53
  416a5c:	or     BYTE PTR [esi],ch
  416a5e:	daa    
  416a5f:	sub    al,BYTE PTR [eax]
  416a61:	test   DWORD PTR [ecx+0x79131771],esi
  416a67:	pop    ds
  416a68:	mov    eax,ds:0xccac8b6d
  416a6d:	jbe    0x416a29
  416a6f:	push   es
  416a70:	(bad)  
  416a72:	xchg   ecx,eax
  416a73:	xchg   DWORD PTR [edi-0x28869fcd],edx
  416a79:	pop    ss
  416a7a:	int    0x92
  416a7c:	les    ecx,FWORD PTR [esi+esi*2+0x78f688fc]
  416a83:	loopne 0x416a11
  416a85:	or     ah,BYTE PTR [edi-0x46]
  416a88:	mov    ch,0xde
  416a8a:	xor    ah,al
  416a8c:	sbb    BYTE PTR [ecx-0x33e54fc3],bl
  416a92:	fsubp  st(3),st
  416a94:	out    0xed,eax
  416a96:	aas    
  416a97:	and    ah,bh
  416a99:	inc    eax
  416a9a:	pop    esi
  416a9b:	dec    BYTE PTR [edx+0x25f1166b]
  416aa1:	and    bl,bl
  416aa3:	add    eax,0x5654e2e8
  416aa8:	rol    DWORD PTR [esi+0x400b165d],cl
  416aae:	arpl   WORD PTR ds:0x56d515b3,di
  416ab4:	mov    ds:0x5f67a7b7,al
  416ab9:	enter  0x74fd,0xc9
  416abd:	jmp    0xeb45:0x16833566
  416ac4:	add    al,BYTE PTR [esp+edx*2]
  416ac7:	aad    0x7f
  416ac9:	cld    
  416aca:	popa   
  416acb:	add    al,0x9
  416acd:	inc    esp
  416ace:	in     al,0x5a
  416ad0:	je     0x416b3b
  416ad2:	retf   0xcdb3
  416ad5:	shl    BYTE PTR [ebp+0x67],cl
  416ad8:	inc    ecx
  416ad9:	sbb    eax,0x5c81b728
  416ade:	sbb    DWORD PTR [edx-0x13],ecx
  416ae1:	adc    al,0x57
  416ae3:	fld    TBYTE PTR [ebx+0x15eb36b6]
  416ae9:	sbb    eax,0x312171f8
  416aee:	push   edi
  416aef:	into   
  416af0:	adc    BYTE PTR [ebx-0x2454e8c7],0x52
  416af7:	jmp    0x416af1
  416af9:	push   ecx
  416afa:	int3   
  416afb:	(bad)  
  416afc:	mov    eax,ds:0xe7351604
  416b01:	retf   0x389e
  416b04:	jge    0x416b7b
  416b06:	daa    
  416b07:	xchg   BYTE PTR [ebx+0x4d],bl
  416b0a:	pop    es
  416b0b:	pop    ebp
  416b0c:	inc    esp
  416b0d:	pop    ss
  416b0e:	fdivr  QWORD PTR [esi-0x4]
  416b11:	(bad)  
  416b12:	jle    0x416ade
  416b14:	das    
  416b15:	xchg   BYTE PTR [ebx-0x3ca599b0],bh
  416b1b:	mov    ebx,0xc63bcc71
  416b20:	mov    eax,0x827f796
  416b25:	jbe    0x416b24
  416b27:	sub    al,0x3f
  416b29:	push   es
  416b2a:	sti    
  416b2b:	cld    
  416b2c:	push   esi
  416b2d:	xor    DWORD PTR [eax+edx*1-0x69],esi
  416b31:	add    eax,0xacc83ff2
  416b36:	sar    BYTE PTR [ebx-0x719c78e2],cl
  416b3c:	dec    eax
  416b3d:	lods   al,BYTE PTR ds:[esi]
  416b3e:	pop    edi
  416b3f:	nop
  416b40:	pop    ss
  416b41:	sub    edx,DWORD PTR [edi+0x7e]
  416b44:	ja     0x416b46
  416b46:	call   0x890f:0x2e9416ff
  416b4d:	dec    edi
  416b4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b4f:	gs pop ss
  416b51:	jo     0x416b9c
  416b53:	push   0xd40e7f02
  416b58:	fist   DWORD PTR [esi+0x54]
  416b5b:	retf   0x8251
  416b5e:	mov    ebp,edx
  416b60:	call   0xb3224d2e
  416b65:	mov    edx,ecx
  416b67:	sar    dh,0xa0
  416b6a:	mov    esi,0x1e5ce296
  416b6f:	add    BYTE PTR [eax+0xa67d109],ah
  416b75:	icebp  
  416b76:	into   
  416b77:	mov    WORD PTR [eax-0x49],ds
  416b7a:	cmc    
  416b7b:	leave  
  416b7c:	mov    es,WORD PTR [esi+edi*2]
  416b7f:	pop    eax
  416b80:	sbb    DWORD PTR [ecx],esp
  416b82:	and    DWORD PTR [ecx],eax
  416b84:	add    DWORD PTR [ecx+edi*2+0x1e86236],edi
  416b8b:	sub    bh,al
  416b8d:	jp     0x416b77
  416b8f:	xor    edx,DWORD PTR [ecx+0x67]
  416b92:	push   ecx
  416b93:	add    ch,BYTE PTR cs:[ecx]
  416b96:	cmp    eax,0x276078ea
  416b9b:	and    ch,BYTE PTR [ebp+0x9]
  416b9e:	adc    DWORD PTR [ebx+0x24640691],esi
  416ba4:	ins    BYTE PTR es:[edi],dx
  416ba5:	data16 js 0x416bf3
  416ba8:	jae    0x416bb9
  416baa:	sbb    eax,0x9c173ccd
  416baf:	inc    ecx
  416bb0:	fs into 
  416bb2:	jmp    0x945ed39d
  416bb7:	inc    esi
  416bb8:	dec    edi
  416bb9:	xchg   BYTE PTR [esp+ebx*4-0x426728c2],al
  416bc0:	loopne 0x416b54
  416bc2:	enter  0x4a6,0xf8
  416bc6:	ja     0x416b94
  416bc8:	sub    BYTE PTR [ebx+edi*4+0x62],bl
  416bcc:	js     0x416bed
  416bce:	push   ecx
  416bcf:	mov    dh,0x9f
  416bd1:	mov    ebx,0xe94c4312
  416bd6:	mov    BYTE PTR [ecx],dh
  416bd8:	pop    ds
  416bd9:	mov    al,0x13
  416bdb:	xchg   BYTE PTR [edx+0x29d3434d],dh
  416be1:	repz aaa 
  416be3:	sub    eax,0x4bbb66ad
  416be8:	mov    dh,cl
  416bea:	mov    WORD PTR [eax+0x3b3539e7],cs
  416bf0:	dec    ecx
  416bf1:	leave  
  416bf2:	in     al,dx
  416bf3:	(bad)  
  416bf4:	jle    0x416b92
  416bf6:	neg    ecx
  416bf8:	cmp    eax,0xaaf148ee
  416bfd:	xor    DWORD PTR [ebx+ebx*8],0xffffff95
  416c01:	lock or BYTE PTR [edx-0x49],ah
  416c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c06:	pop    edx
  416c07:	(bad)  
  416c08:	adc    ebx,edx
  416c0a:	arpl   di,bx
  416c0c:	mov    ch,0xa0
  416c0e:	mov    al,0xc4
  416c10:	(bad)  
  416c11:	and    bl,BYTE PTR [edx-0x21]
  416c14:	(bad)  
  416c15:	dec    edi
  416c16:	aaa    
  416c17:	fisttp QWORD PTR [esi+0x40]
  416c1a:	dec    esi
  416c1b:	xor    eax,0x84025a9b
  416c20:	jle    0x416c38
  416c22:	fwait
  416c23:	scas   eax,DWORD PTR es:[edi]
  416c24:	sbb    eax,0x8e8be7a1
  416c29:	jge    0x416be9
  416c2b:	inc    esp
  416c2c:	jbe    0x416c6f
  416c2e:	mov    eax,0x130a118f
  416c33:	dec    esp
  416c34:	and    DWORD PTR [ebx+0x417d6ff6],ecx
  416c3a:	rcr    bl,0xbf
  416c3d:	push   cs
  416c3e:	xchg   DWORD PTR [ebx],ebx
  416c40:	fldcw  WORD PTR [eax]
  416c42:	cs dec ebp
  416c44:	inc    edx
  416c45:	mov    esp,0x54937d9e
  416c4a:	pop    esi
  416c4b:	enter  0xad44,0x2a
  416c4f:	cmc    
  416c50:	shl    cl,1
  416c52:	je     0x416c70
  416c54:	sbb    eax,0x677c9077
  416c59:	ret    
  416c5a:	dec    ecx
  416c5b:	mov    bh,0xb9
  416c5d:	pop    ss
  416c5e:	into   
  416c5f:	cmp    eax,0x7800ea70
  416c64:	xlat   BYTE PTR ds:[ebx]
  416c65:	push   esi
  416c66:	cs add eax,0x26885f5a
  416c6c:	dec    eax
  416c6d:	(bad)  [ecx-0x267d95b0]
  416c73:	mov    WORD PTR [edi+edx*2],gs
  416c76:	je     0x416cbf
  416c78:	repz test eax,0x73125a85
  416c7e:	sub    BYTE PTR [eax],0xc1
  416c81:	call   0x1f98d50c
  416c86:	out    0x27,eax
  416c88:	push   ds
  416c89:	mov    al,0x88
  416c8b:	mov    edx,0xcdfbf7dd
  416c90:	lahf   
  416c91:	mov    esi,0x434ed5e3
  416c96:	and    eax,0x996c565c
  416c9b:	cmp    BYTE PTR [edi],0x67
  416c9e:	(bad)  
  416c9f:	pop    ds
  416ca0:	jecxz  0x416c37
  416ca2:	mov    esi,DWORD PTR ds:0x428e67fb
  416ca8:	popf   
  416ca9:	call   0x1bc6:0x29b9834a
  416cb0:	mov    DWORD PTR [edi+eiz*8],ebp
  416cb3:	and    eax,0x7cc4828a
  416cb8:	int    0xc2
  416cba:	nop
  416cbb:	out    dx,eax
  416cbc:	cmp    ch,bh
  416cbe:	jmp    0xcdb50eb
  416cc3:	push   0x29
  416cc5:	or     cl,0xe8
  416cc8:	and    eax,0xa30c8177
  416ccd:	sub    BYTE PTR [edx-0x3c],0xd5
  416cd1:	lea    ebp,[ebx]
  416cd3:	cmp    DWORD PTR [eax-0x61],eax
  416cd6:	sub    eax,0x72a98482
  416cdb:	scas   al,BYTE PTR es:[edi]
  416cdc:	xchg   edx,ebp
  416cde:	sub    dh,dh
  416ce0:	popf   
  416ce1:	mov    ah,0x3e
  416ce3:	push   ebx
  416ce4:	cmp    DWORD PTR [edx],edx
  416ce6:	mov    eax,DWORD PTR [esi+0x165cc115]
  416cec:	ins    DWORD PTR es:[edi],dx
  416ced:	jo     0x416d01
  416cef:	adc    BYTE PTR [eax],dl
  416cf1:	jl     0x416ca1
  416cf3:	inc    esp
  416cf4:	daa    
  416cf5:	call   DWORD PTR [eax+ecx*1+0x64b8fcdf]
  416cfc:	mov    esp,0xfa386c43
  416d01:	pop    ss
  416d02:	call   0xbcc51b29
  416d07:	pop    ds
  416d08:	es daa 
  416d0a:	jb     0x416d42
  416d0c:	daa    
  416d0d:	sub    eax,0x2dc45fbb
  416d12:	inc    edi
  416d13:	es pop edi
  416d15:	add    BYTE PTR [edx+0xd],bl
  416d18:	or     DWORD PTR [eax-0x69e0dad5],edi
  416d1e:	cmp    BYTE PTR [ecx],bl
  416d20:	mov    bh,0x12
  416d22:	push   ebx
  416d23:	inc    esp
  416d24:	and    edi,DWORD PTR [ebx]
  416d26:	stos   BYTE PTR es:[edi],al
  416d27:	adc    ch,BYTE PTR [edi-0x1a48d461]
  416d2d:	mov    dh,0x4d
  416d2f:	std    
  416d30:	iret   
  416d31:	(bad)  
  416d32:	popf   
  416d33:	in     al,0xff
  416d35:	push   ecx
  416d36:	jl     0x416d62
  416d38:	sti    
  416d39:	jns    0x416d03
  416d3b:	dec    edx
  416d3c:	jmp    0x934f:0x4182c1b5
  416d43:	fadd   DWORD PTR [eax]
  416d45:	mov    esp,0x844e5b34
  416d4a:	mov    bh,0x5a
  416d4c:	adc    ah,bh
  416d4e:	dec    edi
  416d4f:	lds    ebx,FWORD PTR [ebx+0x7]
  416d52:	mov    cl,0xc2
  416d54:	mov    ?,edi
  416d56:	xlat   BYTE PTR ds:[ebx]
  416d57:	setg   BYTE PTR [edx+0x5]
  416d5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d5c:	in     al,dx
  416d5d:	mov    edx,0x1956b30b
  416d62:	dec    ebx
  416d63:	stc    
  416d64:	push   es
  416d65:	sbb    BYTE PTR [edi-0x1dbdb068],ah
  416d6b:	dec    esp
  416d6c:	inc    esi
  416d6d:	push   ebp
  416d6e:	frstor [ebx]
  416d70:	xor    eax,0xdc65120c
  416d75:	fist   WORD PTR [ebx-0x33]
  416d78:	mov    ebp,0xd2b2d6
  416d7d:	xchg   esi,eax
  416d7e:	mov    eax,ds:0xaf21a934
  416d83:	xor    eax,0x95edf275
  416d88:	ja     0x416d2a
  416d8a:	cmp    DWORD PTR [ebp+0x18],0xbecf5eda
  416d91:	sub    bl,bh
  416d93:	iret   
  416d94:	mov    ebx,0xfefe40a2
  416d99:	xor    DWORD PTR [eax],0x3866f48f
  416d9f:	mov    dh,0x2b
  416da1:	ss cwde 
  416da3:	sub    dl,BYTE PTR [esi-0x6669a1e0]
  416da9:	or     bl,BYTE PTR [eax]
  416dab:	push   esp
  416dac:	pop    ss
  416dad:	cld    
  416dae:	push   edx
  416daf:	pop    eax
  416db0:	and    eax,0x36c508b6
  416db5:	retf   0x253d
  416db8:	lods   eax,DWORD PTR ds:[esi]
  416db9:	sub    DWORD PTR [edi+0x654e770],edx
  416dbf:	pusha  
  416dc0:	and    ch,BYTE PTR [edi-0xa038493]
  416dc6:	ja     0x416d90
  416dc8:	lods   eax,DWORD PTR ds:[esi]
  416dc9:	ins    DWORD PTR es:[edi],dx
  416dca:	nop
  416dcb:	aam    0xbc
  416dcd:	mov    WORD PTR [ecx+0x24],gs
  416dd0:	outs   dx,DWORD PTR ds:[esi]
  416dd1:	cmp    ah,BYTE PTR ds:0xb8d96e80
  416dd7:	jg     0x416e06
  416dd9:	or     ah,dh
  416ddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ddc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ddd:	dec    BYTE PTR [ebp+0x1a0b9100]
  416de3:	retf   0x3d2
  416de6:	movups xmm1,xmm5
  416de9:	stos   DWORD PTR es:[edi],eax
  416dea:	mov    ebp,0xa8483ab0
  416def:	add    ebp,DWORD PTR [esi+0x5b65a124]
  416df5:	push   0xffffff8b
  416df7:	add    esi,DWORD PTR [esi+edx*1-0x5e390b2]
  416dfe:	ficomp WORD PTR [ecx]
  416e00:	fwait
  416e01:	dec    ebx
  416e02:	js     0x416db9
  416e04:	ins    BYTE PTR es:[edi],dx
  416e05:	add    DWORD PTR [edi-0x30c135d4],ecx
  416e0b:	inc    eax
  416e0c:	test   BYTE PTR ds:0x387ed356,0x8d
  416e13:	cmp    BYTE PTR [ebp-0x338e633c],0x4a
  416e1a:	fs jne 0x416de4
  416e1d:	adc    eax,0x1f44822d
  416e22:	jg     0x416e77
  416e24:	nop
  416e25:	push   es
  416e26:	and    ebp,edx
  416e28:	cmp    al,0xac
  416e2a:	dec    ebp
  416e2b:	ret    0x1552
  416e2e:	ins    DWORD PTR es:[edi],dx
  416e2f:	sbb    edi,esp
  416e31:	adc    BYTE PTR [eax+0x11],ah
  416e34:	mov    eax,0x7a41d7cc
  416e39:	fsubr  DWORD PTR [eax+0xf]
  416e3c:	push   esp
  416e3d:	sbb    eax,0xa4192b06
  416e42:	cmp    DWORD PTR [esi-0x697c5164],esp
  416e48:	xor    esp,DWORD PTR [eax-0x4e]
  416e4b:	xor    DWORD PTR [edx+0x7d],ebp
  416e4e:	sub    dh,BYTE PTR [edi]
  416e50:	adc    BYTE PTR [ecx-0x4639674b],ah
  416e56:	je     0x416e3e
  416e58:	ins    BYTE PTR es:[edi],dx
  416e59:	jnp    0x416e3f
  416e5b:	sub    eax,0x2cb061e6
  416e60:	sbb    dh,BYTE PTR [edi-0x16]
  416e63:	scas   al,BYTE PTR es:[edi]
  416e64:	fisttp QWORD PTR [ebp+0x4f]
  416e67:	xchg   edx,eax
  416e68:	push   ss
  416e69:	js     0x416e9f
  416e6b:	sub    eax,0xeb36146a
  416e70:	add    bl,ah
  416e72:	cmp    esi,DWORD PTR [eax-0x40]
  416e75:	push   edi
  416e76:	xchg   ecx,eax
  416e77:	xchg   edi,eax
  416e78:	push   ds
  416e79:	sar    DWORD PTR [edx],1
  416e7b:	fucomi st,st(7)
  416e7d:	dec    ecx
  416e7e:	mov    ds:0x9be5a18e,eax
  416e83:	sub    esi,DWORD PTR [edx]
  416e85:	je     0x416ea5
  416e87:	mov    dh,0x8c
  416e89:	std    
  416e8a:	mov    ebx,0xcdc7caa4
  416e8f:	ds ret 0x4b92
  416e93:	xchg   edi,edx
  416e95:	sub    al,0xe5
  416e97:	cdq    
  416e98:	cmp    BYTE PTR [ebx+0x20],ah
  416e9b:	mov    BYTE PTR [edx],al
  416e9d:	ins    DWORD PTR es:[edi],dx
  416e9e:	loopne 0x416e56
  416ea0:	dec    edx
  416ea1:	sbb    ax,0x48df
  416ea5:	or     al,0xaf
  416ea7:	dec    eax
  416ea8:	(bad)  
  416ea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416eaa:	sbb    DWORD PTR [ecx],ebx
  416eac:	dec    esi
  416ead:	dec    ebx
  416eae:	les    edi,FWORD PTR [ebx-0x40afb3b5]
  416eb4:	daa    
  416eb5:	sub    DWORD PTR [edx],eax
  416eb7:	push   ecx
  416eb8:	lahf   
  416eb9:	push   edi
  416eba:	test   eax,0x4357385f
  416ebf:	jecxz  0x416efe
  416ec1:	ja     0x416eaa
  416ec3:	push   es
  416ec4:	sbb    eax,0xddc482c3
  416ec9:	pop    es
  416eca:	cmp    ch,dh
  416ecc:	hlt    
  416ecd:	dec    esp
  416ece:	int3   
  416ecf:	aam    0x21
  416ed1:	jo     0x416f1f
  416ed3:	(bad)  
  416ed4:	out    dx,al
  416ed5:	std    
  416ed6:	bound  ebp,QWORD PTR [ebp+ebx*4-0x4c]
  416eda:	cmp    eax,0x25c8df86
  416edf:	dec    edi
  416ee0:	adc    al,0xca
  416ee2:	mov    al,BYTE PTR [eax-0x10]
  416ee5:	ins    BYTE PTR es:[edi],dx
  416ee6:	std    
  416ee7:	xchg   edx,eax
  416ee8:	imul   ebx,DWORD PTR [edi-0x2c],0xffffffa2
  416eec:	push   eax
  416eed:	mov    edx,DWORD PTR [edi+ecx*2-0x79140ce6]
  416ef4:	imul   eax,DWORD PTR [eax+0x23],0x7ccf59a8
  416efb:	jge    0x416f25
  416efd:	cld    
  416efe:	inc    eax
  416eff:	jo     0x416f34
  416f01:	shr    BYTE PTR [ebx],1
  416f03:	retf   0xce2b
  416f06:	jmp    0x41928f
  416f0b:	adc    ah,BYTE PTR [edx+0xe708f7]
  416f11:	test   BYTE PTR [eax+0x9a72d6],bl
  416f17:	(bad)  
  416f18:	pop    ds
  416f19:	xor    al,0x17
  416f1b:	xchg   ebx,eax
  416f1c:	inc    eax
  416f1d:	add    BYTE PTR [ebx-0x7c7ca3e9],0x26
  416f24:	cmp    edx,ebp
  416f26:	popf   
  416f27:	mov    WORD PTR [ebp-0x43023282],fs
  416f2d:	mov    dh,0xd3
  416f2f:	call   0x9710:0xf6c5b228
  416f36:	xor    BYTE PTR [ebp+0x66],ah
  416f39:	into   
  416f3a:	push   ebx
  416f3b:	daa    
  416f3c:	fist   WORD PTR [ebx-0x27]
  416f40:	mov    ebx,0xa1782e33
  416f45:	and    DWORD PTR [eax-0x5bd250dc],edi
  416f4b:	icebp  
  416f4c:	xchg   ebp,eax
  416f4d:	addr16 es loopne 0x416f10
  416f51:	inc    esi
  416f52:	mov    WORD PTR [ecx],gs
  416f54:	into   
  416f55:	iret   
  416f56:	adc    dl,BYTE PTR [ebx+0xb]
  416f59:	jle    0x416f1c
  416f5b:	sub    DWORD PTR [ebp+eax*1+0x1],edi
  416f5f:	jae    0x416fc8
  416f61:	cmp    BYTE PTR [ecx],ah
  416f63:	push   ecx
  416f64:	dec    esp
  416f65:	rcl    DWORD PTR [ecx+ebx*4],1
  416f68:	xchg   edx,eax
  416f69:	out    dx,al
  416f6a:	pop    eax
  416f6b:	jl     0x416eef
  416f6d:	mov    eax,0xca1fb76
  416f72:	repz xlat BYTE PTR ds:[ebx]
  416f74:	jns    0x416f80
  416f76:	jnp    0x416f1c
  416f78:	test   al,0x2b
  416f7a:	sbb    eax,0xcfb486b2
  416f7f:	test   DWORD PTR [edi-0x3d],ebp
  416f82:	and    dl,BYTE PTR [esi]
  416f84:	fstp   DWORD PTR [ebx+esi*2-0x8b62556]
  416f8b:	jle    0x416fba
  416f8d:	lea    eax,[esi]
  416f8f:	mov    BYTE PTR [eax],al
  416f91:	inc    esp
  416f92:	xor    BYTE PTR [edx+0x70],0xfa
  416f96:	mov    ds,WORD PTR [eax+0x5eb8763c]
  416f9c:	xor    edx,edx
  416f9e:	push   edx
  416f9f:	sbb    ebp,eax
  416fa1:	arpl   WORD PTR [edx],sp
  416fa3:	les    esp,FWORD PTR [edi-0x8]
  416fa6:	bound  ebx,QWORD PTR [esi+0x29a113a6]
  416fac:	add    BYTE PTR [edx+0x57],dh
  416faf:	jle    0x416fb9
  416fb1:	jmp    0x6b29927
  416fb6:	fnsave [ecx-0xa283f21]
  416fbc:	push   ebp
  416fbd:	pop    ds
  416fbe:	fisttp DWORD PTR [edx]
  416fc0:	fdivr  DWORD PTR [ebx+0x18]
  416fc3:	mov    ecx,?
  416fc5:	xor    al,0xa2
  416fc7:	scas   al,BYTE PTR es:[edi]
  416fc8:	clc    
  416fc9:	aad    0x42
  416fcb:	loop   0x416fb9
  416fcd:	xor    eax,0xd55889a
  416fd2:	sub    ecx,DWORD PTR [ebp-0xb2c129d]
  416fd8:	and    al,0xf3
  416fda:	scas   al,BYTE PTR es:[edi]
  416fdb:	nop
  416fdc:	and    BYTE PTR [esi+0x68],0x75
  416fe0:	sub    dl,BYTE PTR [ecx]
  416fe2:	push   esi
  416fe3:	xchg   esi,eax
  416fe4:	xchg   DWORD PTR [esi],edx
  416fe6:	mov    ch,0xb9
  416fe8:	jne    0x41701d
  416fea:	fwait
  416feb:	mov    esi,ecx
  416fed:	and    al,0x6d
  416fef:	mov    bh,0xcb
  416ff1:	std    
  416ff2:	xchg   DWORD PTR [edi-0x57],edi
  416ff5:	std    
  416ff6:	pop    ebp
  416ff7:	xchg   DWORD PTR [ecx-0x70],edx
  416ffa:	mov    esi,0xf6220ca0
  416fff:	dec    ecx
  417000:	and    dh,0xe0
  417003:	jg     0x416fa3
  417005:	cmp    bl,BYTE PTR ds:0x9ff65599
  41700b:	and    bh,BYTE PTR [eax+0x57f93671]
  417011:	mov    ebx,0x195510c4
  417016:	or     dh,BYTE PTR [ebp+0x7d46fff]
  41701c:	mov    al,ds:0xaef57ef3
  417021:	inc    esi
  417022:	sbb    ebx,DWORD PTR [ecx+0x11afe4c6]
  417028:	jle    0x41702f
  41702a:	cmp    al,0xde
  41702c:	mov    esp,0x400def7a
  417031:	xchg   DWORD PTR [ebx-0x4428f12d],ebp
  417037:	dec    ebp
  417038:	xchg   ecx,eax
  417039:	mov    cl,0x20
  41703b:	and    BYTE PTR [ecx-0xb0ca815],ch
  417041:	add    edi,DWORD PTR [edx+0x25]
  417044:	out    0xb0,al
  417046:	(bad)  
  417048:	mov    edx,0x5e69aad7
  41704d:	outs   dx,DWORD PTR ds:[esi]
  41704e:	jp     0x8ea737a4
  417054:	sti    
  417055:	scas   eax,DWORD PTR es:[edi]
  417056:	shl    DWORD PTR [eax],cl
  417058:	push   edx
  417059:	push   esi
  41705a:	enter  0xcc7b,0xdb
  41705e:	hlt    
  41705f:	out    0x10,eax
  417061:	sbb    DWORD PTR [eax-0x5e],ecx
  417064:	ror    cl,1
  417066:	adc    ecx,DWORD PTR [ebx-0x78]
  417069:	ror    bh,1
  41706b:	mov    ds,WORD PTR ds:0xa4d36416
  417071:	fild   DWORD PTR [ebp+0x56]
  417074:	ret    
  417075:	push   ds
  417076:	adc    eax,0x9aefbcba
  41707b:	sbb    esi,DWORD PTR [ecx]
  41707d:	push   ss
  41707e:	clc    
  41707f:	fst    DWORD PTR [ebp-0x11ad1a53]
  417085:	dec    ecx
  417086:	cmp    bh,bl
  417088:	gs or  al,0x98
  41708b:	jecxz  0x4170d0
  41708d:	and    DWORD PTR [ebx-0x28],eax
  417090:	push   eax
  417091:	pop    ss
  417092:	xor    al,0x91
  417094:	cmc    
  417095:	or     edx,ebx
  417097:	sub    ecx,DWORD PTR [edx+0x55]
  41709a:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41709c:	add    al,0x7b
  41709e:	int3   
  41709f:	mov    esi,0x263dfef5
  4170a4:	push   esi
  4170a5:	test   DWORD PTR [ecx],edx
  4170a7:	dec    edi
  4170a8:	ret    0x1780
  4170ab:	lods   eax,DWORD PTR ds:[esi]
  4170ac:	dec    edx
  4170ad:	mov    bl,0x1b
  4170af:	ror    dh,cl
  4170b1:	mov    ebp,0x5a6f3f12
  4170b6:	or     al,0x55
  4170b8:	sahf   
  4170b9:	sub    al,0x80
  4170bb:	xchg   edi,eax
  4170bc:	sbb    DWORD PTR [edi-0x61],0xffffffcf
  4170c0:	mov    WORD PTR [eax-0x46],ds
  4170c3:	sub    eax,0xd239fc3a
  4170c8:	imul   esi,DWORD PTR [esi],0x5e
  4170cb:	jp     0x417076
  4170cd:	xor    BYTE PTR [ebp-0x5d5881f6],ah
  4170d3:	xchg   BYTE PTR [ecx],ch
  4170d5:	jae    0x4170b9
  4170d7:	pop    eax
  4170d8:	jmp    DWORD PTR [esi-0x3631d73c]
  4170de:	push   esi
  4170df:	loop   0x417076
  4170e1:	and    bl,bl
  4170e3:	lds    ecx,FWORD PTR [edx+0x32]
  4170e6:	aam    0x9e
  4170e8:	push   eax
  4170e9:	jl     0x41708d
  4170eb:	scas   eax,DWORD PTR es:[edi]
  4170ec:	jmp    0x38e5:0xe841d508
  4170f3:	sub    eax,0x2454c542
  4170f8:	cmp    DWORD PTR [ecx+0x5e],ebp
  4170fb:	jbe    0x4170ef
  4170fd:	add    eax,0xa47b530d
  417102:	push   edi
  417103:	lds    edi,FWORD PTR fs:[esi+esi*1-0x789a1029]
  41710b:	dec    ecx
  41710c:	push   ds
  41710d:	add    DWORD PTR [ebx+ecx*8],esp
  417110:	adc    eax,0x8173336e
  417115:	js     0x41718d
  417117:	sbb    al,BYTE PTR [ebp+0x1b736573]
  41711d:	shr    DWORD PTR [esp+edi*1-0x4eb53df7],1
  417124:	and    al,0xc5
  417126:	mov    eax,0x61a7428a
  41712b:	ins    DWORD PTR es:[edi],dx
  41712c:	pop    edx
  41712d:	aam    0xf4
  41712f:	xchg   DWORD PTR [ebx-0x1b],esp
  417132:	or     ebp,DWORD PTR [ebp+0x2]
  417135:	stos   BYTE PTR es:[edi],al
  417136:	into   
  417137:	cs inc ebp
  417139:	dec    edi
  41713a:	loopne 0x41719d
  41713c:	ja     0x41715b
  41713e:	int    0x8b
  417140:	pmulhuw mm5,mm0
  417143:	js     0x41710e
  417145:	jne    0x41719b
  417147:	test   eax,0xb60147c0
  41714c:	ins    DWORD PTR es:[edi],dx
  41714d:	in     eax,dx
  41714e:	mov    bl,0x42
  417150:	cld    
  417151:	imul   esp,eax,0xffffffd1
  417154:	xor    ah,BYTE PTR [eax+eiz*8-0x2f]
  417158:	jl     0x4171c4
  41715a:	sbb    cl,BYTE PTR [ebp-0xc831b13]
  417160:	(bad)  
  417161:	js     0x4171d5
  417163:	nop
  417164:	leave  
  417165:	scas   eax,DWORD PTR es:[edi]
  417166:	sbb    ah,BYTE PTR [ebx+0x620895a0]
  41716c:	mov    ds:0xc5ce27fd,al
  417171:	retf   
  417172:	mov    es,WORD PTR [ecx+0x3adb8316]
  417178:	lods   al,BYTE PTR ds:[esi]
  417179:	cmc    
  41717a:	and    eax,0x49480a61
  41717f:	cli    
  417180:	or     DWORD PTR [edi+0xeaa2042],esi
  417186:	xor    eax,0xd7daeee
  41718b:	out    dx,al
  41718c:	not    DWORD PTR [edx+ebx*4]
  41718f:	inc    bl
  417191:	out    0xf5,eax
  417193:	out    0x1c,eax
  417195:	adc    esi,DWORD PTR [ebp-0x50797f82]
  41719b:	stos   BYTE PTR es:[edi],al
  41719c:	sub    cl,BYTE PTR [edx+0x6e]
  41719f:	pop    ebx
  4171a0:	leave  
  4171a1:	xlat   BYTE PTR ds:[ebx]
  4171a2:	cmp    DWORD PTR [ebx],edx
  4171a4:	test   eax,0x2543fe9f
  4171a9:	test   cl,ch
  4171ab:	xor    eax,0x26978492
  4171b0:	popf   
  4171b1:	mov    ds:0xcf9da1,eax
  4171b6:	or     eax,DWORD PTR [edx-0x5]
  4171b9:	stc    
  4171ba:	jnp    0x417178
  4171bc:	sub    esi,edx
  4171be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171bf:	xchg   edx,eax
  4171c0:	adc    DWORD PTR [ebp+0x4a61b3fd],0x5c
  4171c7:	call   0x4575:0x58e1b96f
  4171ce:	fdivrp st(1),st
  4171d0:	enter  0xddd7,0xc8
  4171d4:	jne    0x4171b1
  4171d6:	xchg   ebx,eax
  4171d7:	es push es
  4171d9:	push   ecx
  4171da:	gs mov al,0x7f
  4171dd:	sti    
  4171de:	popa   
  4171df:	retf   0x2052
  4171e2:	in     al,dx
  4171e3:	mov    ds:0xce13244f,al
  4171e8:	add    ecx,eax
  4171ea:	and    eax,0x6b1f8c44
  4171ef:	icebp  
  4171f0:	mov    edx,0xcefe07ee
  4171f5:	addr16 sub al,0x3e
  4171f8:	add    eax,0x1626bdbe
  4171fd:	loop   0x417278
  4171ff:	mov    eax,0xd425cd68
  417204:	mov    ss,WORD PTR [ecx]
  417206:	outs   dx,BYTE PTR ds:[esi]
  417207:	sub    eax,0xee1b70cc
  41720c:	stc    
  41720d:	push   ebp
  41720e:	repz cli 
  417210:	xchg   esi,eax
  417211:	mov    ah,0xee
  417213:	sbb    edx,DWORD PTR es:[esi-0x536b14ac]
  41721a:	or     edi,DWORD PTR gs:[esi]
  41721d:	out    dx,eax
  41721e:	(bad)  
  41721f:	lahf   
  417220:	inc    edx
  417221:	test   DWORD PTR [eax],ecx
  417223:	cdq    
  417224:	stos   DWORD PTR es:[edi],eax
  417225:	push   ebx
  417226:	out    0xb7,eax
  417228:	(bad)  
  41722a:	(bad)  
  41722b:	xchg   DWORD PTR es:[ebp-0x56],eax
  41722f:	cmp    eax,0xdf7c913d
  417234:	cli    
  417235:	repnz xor eax,0x70316b3c
  41723b:	sahf   
  41723c:	das    
  41723d:	mov    ebx,0x46cf03fc
  417242:	jecxz  0x417223
  417244:	sub    al,0x68
  417246:	dec    eax
  417247:	dec    esp
  417248:	push   edx
  417249:	lods   al,BYTE PTR ds:[esi]
  41724a:	pop    ecx
  41724b:	xchg   BYTE PTR [edx-0xe],cl
  41724e:	sub    esp,DWORD PTR [eax+0x7d8df892]
  417254:	lods   al,BYTE PTR ds:[esi]
  417255:	inc    ebp
  417256:	cli    
  417257:	pop    ds
  417258:	dec    ebp
  417259:	in     eax,dx
  41725a:	dec    ebx
  41725b:	sbb    DWORD PTR [edi-0x73a5db83],ebp
  417261:	add    al,0x16
  417263:	fcom   QWORD PTR [edi]
  417265:	adc    ebp,DWORD PTR [ebp-0x5e]
  417268:	or     edx,ecx
  41726a:	pop    esp
  41726b:	xchg   ebx,eax
  41726c:	stos   BYTE PTR es:[edi],al
  41726d:	and    eax,0x6e98905b
  417272:	push   ebx
  417273:	and    BYTE PTR ds:0xd38c237b,al
  417279:	xlat   BYTE PTR ds:[ebx]
  41727a:	out    0xd,al
  41727c:	test   BYTE PTR [esi],bh
  41727e:	cld    
  41727f:	adc    BYTE PTR [ebx+0x731a849],0xab
  417286:	push   esp
  417287:	(bad)  
  417288:	sub    eax,DWORD PTR [eax+eax*1]
  41728b:	cmp    edx,DWORD PTR [edi-0x11046717]
  417291:	cdq    
  417292:	(bad)  
  417294:	jmp    0xace2cf1f
  417299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41729a:	in     al,0x8
  41729c:	inc    eax
  41729d:	shl    DWORD PTR [esi+eiz*4+0x7c881523],1
  4172a4:	sub    dh,bh
  4172a6:	sub    ch,BYTE PTR [bx+si]
  4172a9:	jmp    0x6a9e:0xa8caf896
  4172b0:	jmp    0x86cc3290
  4172b5:	outs   dx,DWORD PTR ds:[esi]
  4172b6:	push   cs
  4172b7:	mov    eax,ds:0x178790ab
  4172bc:	inc    ebp
  4172bd:	xchg   ebp,eax
  4172be:	das    
  4172bf:	add    DWORD PTR ds:0xa0edd130,0x2a
  4172c6:	or     al,0x1
  4172c8:	(bad)  
  4172c9:	pushf  
  4172ca:	mov    edx,0x9fe8b1b2
  4172cf:	dec    esi
  4172d0:	pop    ebx
  4172d1:	xchg   esi,eax
  4172d2:	xchg   ebx,eax
  4172d3:	std    
  4172d4:	jnp    0x4172c2
  4172d6:	cdq    
  4172d7:	icebp  
  4172d8:	inc    esp
  4172d9:	pop    ebp
  4172da:	ins    DWORD PTR es:[edi],dx
  4172db:	shl    BYTE PTR [ecx],cl
  4172dd:	dec    esp
  4172de:	scas   al,BYTE PTR es:[edi]
  4172df:	jp     0x417315
  4172e1:	xor    al,BYTE PTR [ebp+ecx*1+0x75]
  4172e5:	inc    ecx
  4172e6:	pop    edx
  4172e7:	(bad)  cs:[edi]
  4172ea:	or     ecx,ecx
  4172ec:	(bad)  
  4172ed:	(bad)  
  4172ef:	jmp    0x4172ad
  4172f1:	mov    ebx,0xaec4d59a
  4172f6:	add    DWORD PTR [eax],edx
  4172f8:	into   
  4172f9:	dec    ebx
  4172fa:	xchg   ecx,eax
  4172fb:	add    ebp,esi
  4172fd:	sub    cl,ch
  4172ff:	loope  0x4172ef
  417301:	dec    edi
  417302:	adc    al,0xe6
  417304:	cli    
  417305:	sbb    eax,0x3a0922a1
  41730a:	repz dec eax
  41730c:	popf   
  41730d:	mov    dl,BYTE PTR [ebx-0x2c]
  417310:	mov    ebp,DWORD PTR [esi]
  417312:	pop    edi
  417313:	mov    bh,0xe2
  417315:	fisttp WORD PTR [eax-0x36]
  417318:	dec    eax
  417319:	xchg   ebx,eax
  41731a:	int3   
  41731b:	fwait
  41731c:	and    ebp,DWORD PTR [ecx-0x3b]
  41731f:	jbe    0x417399
  417321:	dec    edx
  417322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417323:	sbb    BYTE PTR [edi-0x52],bl
  417326:	push   esi
  417327:	cmp    eax,0x5854c79a
  41732c:	xlat   BYTE PTR ds:[ebx]
  41732d:	xor    ch,BYTE PTR [ecx-0x5f0d2b1]
  417333:	ror    DWORD PTR [esi-0x1e12e377],1
  417339:	mov    dh,0x6c
  41733b:	mov    ?,ecx
  41733d:	shr    DWORD PTR [ecx-0x5d],0xce
  417341:	and    eax,0x6cafc8be
  417346:	sbb    ebx,DWORD PTR [edi]
  417348:	xor    DWORD PTR [ebx],0xffffffd2
  41734b:	icebp  
  41734c:	mov    al,0xe0
  41734e:	leave  
  41734f:	mov    al,0x76
  417351:	lock mov ebx,0xeb8ba627
  417357:	jmp    0x41730f
  417359:	or     dh,BYTE PTR [edx]
  41735b:	xchg   edx,eax
  41735c:	xchg   esi,eax
  41735d:	adc    dl,bl
  41735f:	pushf  
  417360:	sbb    ah,bh
  417362:	je     0x41733f
  417364:	scas   eax,DWORD PTR es:[edi]
  417365:	(bad)  
  417366:	iret   
  417367:	fmul   DWORD PTR [ecx+0x35115c90]
  41736d:	pushf  
  41736e:	add    dh,BYTE PTR [ebx+esi*1]
  417371:	and    BYTE PTR [edx+0x15],ah
  417374:	jae    0x41733c
  417376:	add    ch,BYTE PTR [ecx-0x2c]
  417379:	adc    DWORD PTR [eax+0x2e2b4b06],esi
  41737f:	call   0xfd:0x4d8e4d1d
  417386:	arpl   WORD PTR [esi],dx
  417388:	cdq    
  417389:	lock fdivr st(0),st
  41738c:	adc    al,0x4c
  41738e:	inc    edx
  41738f:	dec    eax
  417390:	cmc    
  417391:	pop    ebp
  417392:	ins    BYTE PTR es:[edi],dx
  417393:	ret    0x9731
  417396:	neg    DWORD PTR [ebx+0x7f4595aa]
  41739c:	mov    edi,0xad98f535
  4173a1:	ins    BYTE PTR es:[edi],dx
  4173a2:	enterw 0xbf77,0x9
  4173a7:	jp     0x4173a6
  4173a9:	jnp    0x417340
  4173ab:	mov    ds:0xdb868170,eax
  4173b0:	mov    ebp,0xeeb83c59
  4173b5:	mov    ah,0xf
  4173b7:	scas   eax,DWORD PTR es:[edi]
  4173b8:	jmp    0x4173c8
  4173ba:	mov    al,0xd4
  4173bc:	retf   
  4173bd:	retf   
  4173be:	or     DWORD PTR [edi+0xe9fa8b4],edi
  4173c4:	(bad)  
  4173c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173c8:	cmp    dl,0xb9
  4173cb:	mov    esp,0x28484089
  4173d0:	out    dx,al
  4173d1:	jmp    0x67e18716
  4173d6:	mov    ch,0xdd
  4173d8:	cmc    
  4173d9:	sbb    eax,edi
  4173db:	dec    esp
  4173dc:	xchg   ebp,eax
  4173dd:	push   dx
  4173df:	sahf   
  4173e0:	pop    edx
  4173e1:	cmp    DWORD PTR [edi-0x38c1aee],ecx
  4173e7:	cmp    ah,BYTE PTR [ecx-0x42]
  4173ea:	sahf   
  4173eb:	and    al,BYTE PTR [ecx+0x4a1d4f3e]
  4173f1:	popa   
  4173f2:	(bad)  
  4173f3:	pop    ecx
  4173f4:	inc    esp
  4173f5:	add    eax,0xb4397ee8
  4173fa:	xchg   ebp,eax
  4173fb:	(bad)  
  4173fc:	adc    edx,DWORD PTR [edx-0x6b0138bd]
  417402:	hlt    
  417403:	xor    al,BYTE PTR [edi+ecx*4-0x2]
  417407:	(bad)  
  417409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41740a:	in     al,0x3e
  41740c:	mov    ecx,0xe682c803
  417411:	mov    cl,0x90
  417413:	push   eax
  417414:	(bad)  
  417416:	in     al,0xe5
  417418:	push   ebx
  417419:	leave  
  41741a:	pop    esi
  41741b:	mov    ebx,0x84ee9888
  417420:	pop    edx
  417421:	push   esi
  417422:	mov    ds:0xb4b1eb1e,al
  417427:	outs   dx,BYTE PTR ds:[esi]
  417428:	push   eax
  417429:	xor    al,0x8d
  41742b:	mov    esp,0xd4c54aec
  417430:	mov    edi,DWORD PTR [ecx-0x35]
  417433:	xchg   edx,eax
  417434:	sub    ah,ch
  417436:	ret    
  417437:	mov    ebp,0x4ecc381d
  41743c:	mov    WORD PTR [esi-0x67],es
  41743f:	test   BYTE PTR [eax+ebp*2+0x4d6b37f],0xde
  417447:	cmp    eax,0x8b8c447
  41744c:	js     0x417496
  41744e:	dec    edx
  41744f:	inc    ebx
  417450:	fiadd  DWORD PTR [ecx-0x2768d935]
  417456:	jb     0x41745b
  417458:	jmp    0xd7a6ad8a
  41745d:	pop    ebp
  41745e:	popa   
  41745f:	std    
  417460:	dec    edi
  417461:	mov    cl,dl
  417463:	ror    DWORD PTR [eax+edx*8-0x3b],0xa1
  417468:	xor    al,0xfa
  41746a:	mov    ebx,0xbfb0f048
  41746f:	xchg   edi,eax
  417470:	je     0x4173f3
  417472:	test   al,0x65
  417474:	das    
  417475:	xchg   edx,eax
  417476:	mov    WORD PTR [edi],gs
  417478:	push   ebx
  417479:	data16 sbb bl,BYTE PTR [esp+eiz*4-0x6e]
  41747e:	aaa    
  41747f:	xchg   ecx,eax
  417480:	out    dx,al
  417481:	leave  
  417482:	or     eax,0x587c0aed
  417487:	repnz cli 
  417489:	popf   
  41748a:	retf   0x463
  41748d:	retf   0x65cd
  417490:	mov    al,BYTE PTR [ebx+0x4c304ad8]
  417496:	pushf  
  417497:	mov    edi,0x6b590d99
  41749c:	or     al,BYTE PTR [ecx+ebp*8+0x1a]
  4174a0:	aad    0xcc
  4174a2:	lea    edi,[ecx+0x897d736]
  4174a8:	fdiv   QWORD PTR [esi+0x5c]
  4174ab:	pop    esi
  4174ac:	fdivp  st(4),st
  4174ae:	jne    0x4174a4
  4174b0:	mov    edi,DWORD PTR [ecx-0x42]
  4174b3:	push   ecx
  4174b4:	fnstcw WORD PTR [ebp+edi*1+0x7fed0d5d]
  4174bb:	xchg   ebp,eax
  4174bc:	ins    DWORD PTR es:[edi],dx
  4174bd:	loopne 0x417487
  4174bf:	mov    dh,0x2b
  4174c1:	es out 0xfa,al
  4174c4:	push   cs
  4174c5:	xlat   BYTE PTR ds:[ebx]
  4174c6:	gs pop ebx
  4174c8:	dec    ebx
  4174c9:	retf   0x47d
  4174cc:	or     al,0xff
  4174ce:	loop   0x417502
  4174d0:	aas    
  4174d1:	cli    
  4174d2:	cld    
  4174d3:	push   ebx
  4174d4:	mov    al,BYTE PTR [ecx+eiz*2]
  4174d7:	adc    al,0xbb
  4174d9:	mov    ds:0x978100ae,eax
  4174de:	repz adc eax,0x32344075
  4174e4:	jge    0x4174be
  4174e6:	xchg   edi,eax
  4174e7:	cmp    eax,0x94f1b778
  4174ec:	pop    edx
  4174ed:	cdq    
  4174ee:	xor    esp,0x8
  4174f1:	mov    ebp,0x2496a673
  4174f6:	push   ds
  4174f7:	mov    bl,BYTE PTR [edx+0x48]
  4174fa:	cmp    DWORD PTR [edi],esp
  4174fc:	xchg   BYTE PTR [edi],ah
  4174fe:	ins    BYTE PTR es:[edi],dx
  4174ff:	test   BYTE PTR [ecx],0xc
  417502:	mov    dl,dh
  417504:	add    DWORD PTR [ebx-0x61],0x5c
  417508:	push   cs
  417509:	add    al,0x1
  41750b:	dec    edi
  41750c:	outs   dx,DWORD PTR ds:[esi]
  41750d:	fist   DWORD PTR [edi+esi*8-0x42]
  417511:	js     0x417513
  417513:	inc    esi
  417514:	xor    esp,DWORD PTR ds:0xaa7e496a
  41751a:	dec    DWORD PTR [ebx]
  41751c:	mov    bh,0x7d
  41751e:	icebp  
  41751f:	test   al,0x1c
  417521:	sbb    al,0x3b
  417523:	jb     0x4174c9
  417525:	adc    ch,ch
  417527:	iret   
  417528:	push   eax
  417529:	add    ecx,DWORD PTR [ecx+0x5ea65b5b]
  41752f:	mov    dl,BYTE PTR [ebx]
  417531:	xor    esi,esi
  417533:	pop    edx
  417534:	dec    DWORD PTR [ebx]
  417536:	xchg   esi,ebp
  417538:	sahf   
  417539:	dec    esi
  41753a:	fwait
  41753b:	mov    ch,0xf4
  41753d:	push   ds
  41753e:	mov    al,ds:0xaaf9b71b
  417543:	sub    al,BYTE PTR [ebx]
  417545:	or     al,0x7d
  417547:	fdivr  QWORD PTR [edi-0x46]
  41754a:	mov    ah,0xd4
  41754c:	or     BYTE PTR [ebx],ch
  41754e:	leave  
  41754f:	mov    eax,0x62f468b7
  417554:	das    
  417555:	jns    0x41757b
  417557:	ret    0xe803
  41755a:	push   ds
  41755b:	hlt    
  41755c:	(bad)  
  41755d:	loopne 0x417511
  41755f:	shl    DWORD PTR [eax-0x69eb377d],1
  417565:	push   es
  417566:	mov    WORD PTR [eax+0x3d],?
  417569:	lock adc dl,bl
  41756c:	out    0x7e,al
  41756e:	sti    
  41756f:	dec    DWORD PTR [ebx+0x2d]
  417572:	jg     0x417581
  417574:	clc    
  417575:	dec    ebx
  417576:	in     eax,0x95
  417578:	inc    ebp
  417579:	cmc    
  41757a:	(bad)  
  41757e:	mov    bl,0x22
  417580:	ins    BYTE PTR es:[edi],dx
  417581:	ficomp DWORD PTR cs:[edi]
  417584:	scas   eax,DWORD PTR es:[edi]
  417585:	pop    eax
  417586:	dec    ecx
  417587:	call   0xbf54:0x6e340184
  41758e:	scas   al,BYTE PTR es:[edi]
  41758f:	outs   dx,DWORD PTR ds:[esi]
  417590:	mov    al,ds:0x5b211009
  417595:	cs push ecx
  417597:	and    al,0x3c
  417599:	inc    esp
  41759a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41759b:	push   eax
  41759c:	out    0x15,eax
  41759e:	xchg   edi,eax
  41759f:	loopne 0x417609
  4175a1:	xchg   ecx,eax
  4175a2:	iret   
  4175a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175a4:	dec    ecx
  4175a5:	bound  esp,QWORD PTR [ebp+0x11]
  4175a8:	enter  0x395c,0x7e
  4175ac:	pusha  
  4175ad:	lds    esp,FWORD PTR ds:0x15ada939
  4175b3:	or     edi,0xcfbab1c5
  4175b9:	xchg   ecx,eax
  4175ba:	jo     0x4175be
  4175bc:	ins    DWORD PTR es:[edi],dx
  4175bd:	jmp    0x9a9e8cd9
  4175c2:	popa   
  4175c3:	jle    0x417561
  4175c5:	push   es
  4175c6:	shr    DWORD PTR [ebx+0x5],0x47
  4175ca:	jmp    0x4175fa
  4175cc:	(bad)  
  4175cd:	jecxz  0x41761c
  4175cf:	push   cs
  4175d0:	xor    DWORD PTR [esi],esi
  4175d2:	fst    QWORD PTR [ebx+edx*4-0x26]
  4175d6:	enter  0xb934,0xb0
  4175da:	xlat   BYTE PTR ds:[ebx]
  4175db:	outs   dx,DWORD PTR ds:[esi]
  4175dc:	leave  
  4175dd:	sub    ch,dl
  4175df:	daa    
  4175e0:	cmp    DWORD PTR [eax+0x25],eax
  4175e3:	add    ah,BYTE PTR [ecx-0x2a7e4621]
  4175e9:	inc    edi
  4175ea:	jne    0x417598
  4175ec:	mov    edi,0xa4473d58
  4175f1:	dec    esp
  4175f2:	mov    al,ds:0x3da262a5
  4175f7:	ins    DWORD PTR es:[edi],dx
  4175f8:	shl    BYTE PTR [ecx],1
  4175fa:	leave  
  4175fb:	jg     0x4175e6
  4175fd:	inc    eax
  4175fe:	and    DWORD PTR [ebp+0x6b],0xfffffff5
  417602:	mov    edx,0x3b05ee2c
  417607:	loope  0x417607
  417609:	jp     0x4175db
  41760b:	mov    ds:0xc4b05019,eax
  417610:	retf   
  417611:	push   0x9dbb6728
  417616:	mul    DWORD PTR [ebp-0x7]
  417619:	sub    al,0xff
  41761b:	push   ecx
  41761c:	pop    ebp
  41761d:	daa    
  41761e:	cmp    eax,0x626cd863
  417623:	inc    edx
  417624:	test   DWORD PTR [eax],0x1ed20c3c
  41762a:	push   esp
  41762b:	dec    ebx
  41762c:	and    ecx,DWORD PTR [esi+0x1cd000f6]
  417632:	sub    eax,DWORD PTR [esi]
  417634:	mov    ebx,0x59f85539
  417639:	mov    bl,0x2c
  41763b:	inc    edi
  41763c:	leave  
  41763d:	adc    edi,DWORD PTR [ebx+0x69]
  417640:	imul   ebp,DWORD PTR [ebx+edi*1-0x17],0xfffffffe
  417645:	xchg   esp,eax
  417646:	mov    ebp,0xdbcf7242
  41764b:	stc    
  41764c:	and    DWORD PTR [eax-0x33677f33],edx
  417652:	(bad)  
  417653:	inc    bx
  417655:	add    DWORD PTR [edx-0x47],esp
  417658:	dec    esp
  417659:	cmp    eax,0xff8ca636
  41765e:	sbb    al,BYTE PTR [edi+edx*2-0x326caea5]
  417665:	dec    ecx
  417666:	clc    
  417667:	cli    
  417668:	popf   
  417669:	ja     0x41769c
  41766b:	adc    BYTE PTR [eax],0x6c
  41766e:	je     0x417605
  417670:	jbe    0x417683
  417672:	xchg   esi,eax
  417673:	sbb    dh,cl
  417675:	dec    edi
  417676:	adc    ecx,ecx
  417678:	push   ds
  417679:	and    DWORD PTR [edi+0x0],edi
  41767c:	cli    
  41767d:	and    bh,BYTE PTR [edx+0xf2685c6]
  417683:	stos   DWORD PTR es:[edi],eax
  417684:	outs   dx,DWORD PTR ds:[esi]
  417685:	cmp    DWORD PTR fs:[ebp+0x26],eax
  417689:	gs cdq 
  41768b:	sbb    bh,dh
  41768d:	sub    dl,BYTE PTR [ebx-0x12128df8]
  417693:	and    ch,BYTE PTR [edi+0xb667ea4]
  417699:	push   0xffffffee
  41769b:	shr    dh,cl
  41769d:	cld    
  41769e:	or     al,0xed
  4176a0:	cmp    DWORD PTR [ebp-0x2ce81572],ebp
  4176a6:	and    esp,DWORD PTR [ebx+0x67]
  4176a9:	xchg   bl,dh
  4176ab:	cmp    cl,BYTE PTR [esi+edi*2]
  4176ae:	or     eax,0xcb3174b9
  4176b3:	enter  0xdd52,0xd7
  4176b7:	cmp    eax,0x11b29530
  4176bc:	shr    BYTE PTR [ecx+0x5f],0x14
  4176c0:	in     al,0xc0
  4176c2:	(bad)  
  4176c4:	fst    st(0)
  4176c6:	loopne 0x4176ce
  4176c8:	mov    al,0xe2
  4176ca:	and    bl,bh
  4176cc:	jecxz  0x4176bb
  4176ce:	xchg   ecx,eax
  4176cf:	xchg   ebx,eax
  4176d0:	enter  0x4c3,0x71
  4176d4:	mov    al,0xea
  4176d7:	inc    esp
  4176d8:	lea    ecx,[ecx+0x74]
  4176db:	jmp    0x4176fd
  4176dd:	shr    bh,0xd3
  4176e0:	sahf   
  4176e1:	jle    0x417753
  4176e3:	adc    eax,DWORD PTR [ebx]
  4176e5:	inc    ebp
  4176e6:	(bad)  
  4176e7:	xor    eax,DWORD PTR [edx+0x17]
  4176ea:	cli    
  4176eb:	retf   
  4176ec:	shl    DWORD PTR [ecx-0x41],1
  4176ef:	sbb    ecx,DWORD PTR [edx]
  4176f1:	shl    BYTE PTR [ebx],0x76
  4176f4:	xor    edi,DWORD PTR [ebx+eax*2-0x278dc24]
  4176fb:	sub    BYTE PTR [ebp-0x32e9eda7],cl
  417701:	cmp    ch,BYTE PTR [ebx]
  417703:	ss loop 0x417779
  417706:	test   al,0xd5
  417708:	nop
  417709:	add    al,0x1d
  41770b:	pop    ds
  41770c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41770d:	mov    ah,0xe6
  41770f:	mov    edx,0xef561b5a
  417714:	jo     0x4176e8
  417716:	cmp    al,0x1b
  417718:	inc    ebx
  417719:	arpl   bx,dx
  41771b:	imul   edi,DWORD PTR [ecx+0x99be70e],0xffffffc8
  417722:	pop    edi
  417723:	dec    ebx
  417725:	jne    0x417766
  417727:	dec    esp
  417728:	sub    al,0xbc
  41772a:	xchg   edi,eax
  41772b:	push   esp
  41772c:	cmc    
  41772d:	fcmove st,st(0)
  41772f:	test   ch,al
  417731:	test   eax,0x381e5624
  417736:	jl     0x41774e
  417738:	pop    esi
  417739:	lods   eax,DWORD PTR ds:[esi]
  41773a:	sub    dl,al
  41773c:	stos   BYTE PTR es:[edi],al
  41773d:	call   0x14fe1b21
  417742:	jae    0x41773e
  417744:	fdivr  st,st(3)
  417746:	(bad)  
  417748:	or     DWORD PTR [esi+eiz*2],esp
  41774b:	das    
  41774c:	jl     0x41774d
  41774e:	mov    dl,0x55
  417750:	mov    ds:0xa9064230,eax
  417755:	in     eax,dx
  417756:	call   0x89ae4aa5
  41775b:	in     eax,dx
  41775c:	sbb    ecx,DWORD PTR [esi+eax*4-0x8]
  417760:	leave  
  417761:	out    dx,al
  417762:	sbb    eax,0x4d9baefe
  417767:	lahf   
  417768:	mov    cl,0xcc
  41776a:	pop    ecx
  41776b:	sbb    eax,0x74ba4d73
  417770:	cs je  0x4177a3
  417773:	test   DWORD PTR es:[esi-0x50],esi
  417777:	mov    ebx,0x4c21b3c5
  41777c:	pop    ebp
  41777d:	xchg   esp,ecx
  41777f:	popf   
  417780:	mov    ch,0xe6
  417782:	fs and dh,0x50
  417786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417787:	fldenv [ebx+esi*8]
  41778a:	dec    ebp
  41778b:	mov    edi,esp
  41778d:	xor    BYTE PTR [esi+edx*8],dh
  417790:	inc    ebp
  417791:	lods   eax,DWORD PTR ds:[esi]
  417792:	mov    ebp,0x88a13e2f
  417797:	mul    BYTE PTR [esi+edi*4-0x3f]
  41779b:	ret    0xa210
  41779e:	aas    
  41779f:	pop    es
  4177a0:	xchg   ecx,eax
  4177a1:	dec    ecx
  4177a2:	sbb    eax,0x41240a70
  4177a7:	adc    BYTE PTR [esi+0x18],0x24
  4177ab:	mov    bh,0xaf
  4177ad:	pop    esi
  4177ae:	lds    ebx,FWORD PTR [edi-0x6c07f756]
  4177b4:	das    
  4177b5:	adc    al,0xdb
  4177b7:	push   DWORD PTR [ebp+0x5aaa2612]
  4177bd:	and    DWORD PTR [eax-0x1495a6ca],0x5a
  4177c4:	adc    cl,BYTE PTR ds:0x5ad80e79
  4177ca:	sub    esi,ecx
  4177cc:	or     DWORD PTR [eax-0x2c],edx
  4177cf:	ss jg  0x41783e
  4177d2:	loope  0x417825
  4177d4:	loop   0x4177a0
  4177d6:	sub    al,0xb7
  4177d8:	or     ch,BYTE PTR [ecx+0x7f]
  4177db:	iret   
  4177dc:	inc    ebp
  4177dd:	or     eax,0x7628db6e
  4177e2:	loopne 0x417855
  4177e4:	adc    DWORD PTR [ecx+0x29],ebp
  4177e7:	push   ebx
  4177e8:	lds    ebx,FWORD PTR [esi+0x48]
  4177eb:	push   esp
  4177ec:	out    0x2c,al
  4177ee:	sbb    edx,DWORD PTR [ebx-0x5381e0dc]
  4177f4:	cmc    
  4177f5:	sar    DWORD PTR [edx-0x132200a8],cl
  4177fb:	or     BYTE PTR [eax+0x1b],dh
  4177fe:	sti    
  4177ff:	int    0x31
  417801:	(bad)  
  417802:	cmp    eax,0x51c32fa
  417807:	imul   eax,DWORD PTR [esi-0x32bf0c02],0x3438b6ab
  417811:	lock fdivr st,st(7)
  417814:	or     esp,ebx
  417816:	jbe    0x4177bc
  417818:	and    BYTE PTR [ebp+ebp*1-0x76],0x5
  41781d:	stos   BYTE PTR es:[edi],al
  41781e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41781f:	xor    ebp,esi
  417821:	add    esi,edi
  417823:	jp     0x417854
  417825:	dec    eax
  417826:	dec    ebp
  417827:	mov    dl,0x7f
  417829:	mov    al,0x8b
  41782b:	mov    edi,ecx
  41782d:	xor    edx,edi
  41782f:	ins    DWORD PTR es:[edi],dx
  417830:	ins    DWORD PTR es:[edi],dx
  417831:	outs   dx,BYTE PTR ss:[esi]
  417833:	xchg   ebx,eax
  417834:	lea    ebx,[ecx]
  417836:	pop    es
  417837:	aad    0x32
  417839:	jno    0x417835
  41783b:	popa   
  41783c:	cmp    DWORD PTR [edi-0x44],ecx
  41783f:	push   ss
  417840:	(bad)  
  417841:	adc    al,0x88
  417843:	fs jne 0x4178bc
  417846:	(bad)  
  417847:	mov    eax,ds:0x8f2bfc18
  41784c:	xchg   BYTE PTR [esi+eiz*2],ah
  41784f:	cmc    
  417850:	test   eax,0xddc94fd7
  417855:	fstp   QWORD PTR [esi+edi*8+0x4a]
  417859:	popa   
  41785a:	mov    edx,0x462cba6d
  41785f:	mov    bl,0xad
  417861:	pushf  
  417862:	inc    ecx
  417863:	call   DWORD PTR [esi+0x7c4c1ebb]
  417869:	mov    esi,0x8193d121
  41786e:	cmp    eax,0x7c8ccb2a
  417873:	mov    al,ds:0xb7daa09e
  417878:	jmp    0x1b3e3879
  41787d:	aaa    
  41787e:	ds xchg edi,eax
  417880:	je     0x417812
  417882:	jae    0x417846
  417884:	pop    ds
  417885:	sbb    eax,0xa032f4a3
  41788a:	in     al,0x26
  41788c:	sub    eax,0x5b1b7753
  417891:	add    BYTE PTR [ecx-0x499080e7],ah
  417897:	pop    es
  417898:	cmp    DWORD PTR [esi],0xffffffd6
  41789b:	mov    cl,0x61
  41789d:	test   DWORD PTR [esi],ebp
  41789f:	inc    edx
  4178a0:	xchg   ebp,eax
  4178a1:	and    BYTE PTR [edx-0x5d7699ed],dh
  4178a7:	sub    bl,BYTE PTR [ebp+0x3e]
  4178aa:	enter  0x51b5,0x96
  4178ae:	(bad)  
  4178af:	out    0x64,al
  4178b1:	mov    cl,0xdb
  4178b3:	fist   WORD PTR [ebx]
  4178b5:	or     BYTE PTR [edx],bh
  4178b7:	fistp  WORD PTR [esi-0x41a58fb5]
  4178bd:	pushf  
  4178be:	int    0x47
  4178c0:	scas   al,BYTE PTR es:[edi]
  4178c1:	(bad)  
  4178c3:	int3   
  4178c4:	popa   
  4178c5:	and    esp,ebp
  4178c7:	lock sbb al,0x4f
  4178ca:	inc    edx
  4178cb:	cwde   
  4178cc:	jecxz  0x41792f
  4178ce:	cmp    DWORD PTR [eax+0x680f1c92],esi
  4178d4:	cs sub eax,0x7f1ca418
  4178da:	sbb    al,0xe2
  4178dc:	ret    0xfac0
  4178df:	cmp    BYTE PTR [edx+0x5c],al
  4178e2:	(bad)  
  4178e3:	mov    al,BYTE PTR [ebx]
  4178e5:	adc    edi,DWORD PTR [edx]
  4178e7:	xor    ah,BYTE PTR [ebp+0x15980577]
  4178ed:	dec    eax
  4178ee:	mov    WORD PTR [eax+ecx*1],ds
  4178f1:	pushf  
  4178f2:	push   0x5500b93a
  4178f7:	arpl   WORD PTR [edx],bp
  4178f9:	mul    DWORD PTR [ecx+0x41]
  4178fc:	xor    BYTE PTR [eax*8-0x8f046c7],cl
  417903:	adc    edx,esi
  417905:	mov    bl,0x34
  417907:	out    0x16,eax
  417909:	pop    edx
  41790a:	cmp    edi,DWORD PTR [ecx]
  41790c:	repnz cmp ecx,DWORD PTR gs:[esp+esi*8-0x4c]
  417912:	xchg   edx,ecx
  417914:	rcr    BYTE PTR [ebx],0x6f
  417917:	adc    ah,BYTE PTR [ebp-0x34f4f1d4]
  41791d:	sti    
  41791e:	pop    edx
  41791f:	jae    0x4178f4
  417921:	and    esi,DWORD PTR [ebx+eiz*4+0x73]
  417925:	push   cs
  417926:	(bad)
  417929:	jmp    0x4178ae
  41792b:	adc    eax,0xf95aa515
  417930:	jns    0x4178f0
  417932:	pop    eax
  417933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417934:	adc    al,0x32
  417936:	mov    cl,0xf2
  417938:	stos   DWORD PTR es:[edi],eax
  417939:	and    DWORD PTR [ebx],esp
  41793b:	rcl    dl,0xa1
  41793e:	jns    0x417989
  417940:	push   edx
  417941:	pop    ds
  417942:	aas    
  417943:	cmp    BYTE PTR [eax+0x5dc9b48],bl
  417949:	fnstcw WORD PTR [eax+0x6e]
  41794c:	std    
  41794d:	pop    ebx
  41794e:	les    ebp,FWORD PTR [esi+0x62]
  417951:	xchg   BYTE PTR [edx+0x55],al
  417954:	push   esp
  417955:	out    0xbc,eax
  417957:	xchg   edi,eax
  417958:	mov    ds:0x286c959e,eax
  41795d:	enter  0x972b,0xee
  417961:	stos   BYTE PTR es:[edi],al
  417962:	mov    ch,0x9f
  417964:	dec    esi
  417965:	daa    
  417966:	inc    esi
  417967:	jecxz  0x417906
  417969:	jbe    0x4179c2
  41796b:	sbb    esi,edi
  41796d:	ins    BYTE PTR es:[edi],dx
  41796e:	out    0xfe,al
  417970:	or     eax,0x4d10ff37
  417975:	call   0x44029fb1
  41797a:	popf   
  41797b:	add    eax,0xcca52f83
  417980:	fstp   DWORD PTR [esp+eax*8]
  417983:	cli    
  417984:	test   al,0x51
  417986:	jns    0x41798a
  417988:	xchg   DWORD PTR [esp+edx*2-0x27eb033d],esi
  41798f:	pop    edi
  417990:	add    ebp,DWORD PTR [ebx+0x6dc43be7]
  417996:	xchg   ecx,eax
  417997:	(bad)  
  417998:	mov    esi,0xfc7f61d2
  41799d:	jecxz  0x417991
  41799f:	lods   al,BYTE PTR ds:[esi]
  4179a0:	js     0x41792d
  4179a2:	retf   0x785b
  4179a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179a6:	test   al,0xa0
  4179a8:	sbb    ebx,ebp
  4179aa:	out    0xa4,al
  4179ac:	add    BYTE PTR [ebx+0x46],0xfe
  4179b0:	push   0xc
  4179b2:	adc    eax,0xb021eeed
  4179b7:	fiadd  WORD PTR [edx]
  4179b9:	dec    eax
  4179ba:	inc    esi
  4179bb:	mov    al,ds:0x9596d6f3
  4179c0:	pop    ecx
  4179c1:	push   esp
  4179c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179c3:	pop    esp
  4179c4:	push   ss
  4179c5:	cmp    ebx,esi
  4179c7:	jo     0x417988
  4179c9:	jge    0x4179d4
  4179cb:	xchg   ebx,eax
  4179cc:	jecxz  0x417a2a
  4179ce:	popa   
  4179cf:	mov    ds:0x8268c9ce,al
  4179d4:	(bad)  
  4179d6:	cdq    
  4179d7:	or     DWORD PTR [eax-0x33],ebx
  4179da:	mov    bh,0x51
  4179dc:	imul   ebx,DWORD PTR [ebx+0x35],0x60
  4179e0:	mov    ebx,0xf38146cc
  4179e5:	pop    edx
  4179e6:	mov    bh,0x74
  4179e8:	xor    ah,BYTE PTR [esi-0x52]
  4179eb:	add    al,0x6
  4179ed:	add    ebx,DWORD PTR [ecx]
  4179ef:	mov    cl,0xdc
  4179f1:	adc    al,0xbd
  4179f3:	in     al,dx
  4179f4:	and    DWORD PTR [eax+0x5b3c96a6],ecx
  4179fa:	(bad)  
  4179fb:	ins    BYTE PTR es:[edi],dx
  4179fc:	pop    edi
  4179fd:	push   0x3dd8d36b
  417a02:	xchg   esp,eax
  417a03:	out    0xe8,al
  417a05:	push   0x28b4bcd0
  417a0a:	mov    ah,0xd4
  417a0c:	lea    ebp,[edx+0x6e]
  417a0f:	inc    edi
  417a10:	jno    0x417a01
  417a12:	jp     0x4179ca
  417a14:	jmp    DWORD PTR [edx]
  417a16:	xchg   ebp,eax
  417a17:	das    
  417a18:	mov    ds:0x8d76f050,al
  417a1d:	imul   ebx,DWORD PTR [ebp-0x10],0x853cf84e
  417a24:	in     al,dx
  417a25:	in     al,dx
  417a26:	(bad)  
  417a27:	cmp    dh,BYTE PTR [ecx-0x359b77b0]
  417a2d:	xor    DWORD PTR [ecx],ebp
  417a2f:	imul   edx,DWORD PTR [edi+0x6a],0xf06d1e6a
  417a36:	add    ebp,DWORD PTR [edx+edi*2+0x7d26c597]
  417a3d:	stc    
  417a3e:	jg     0x417a11
  417a40:	mov    edx,0x8ec1340
  417a45:	jecxz  0x417a68
  417a47:	xchg   dl,bh
  417a49:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  417a4b:	mov    BYTE PTR [eax+eiz*2+0x54426da1],bl
  417a52:	and    bl,ah
  417a54:	pop    edi
  417a55:	jno    0x4179f9
  417a57:	inc    ebp
  417a58:	sbb    ah,BYTE PTR [eax]
  417a5a:	adc    ebp,ecx
  417a5c:	ds ins BYTE PTR es:[edi],dx
  417a5e:	outs   dx,BYTE PTR ds:[esi]
  417a5f:	push   eax
  417a60:	not    DWORD PTR [ebx-0x41a6e4c4]
  417a66:	out    0x6b,al
  417a68:	iret   
  417a69:	xchg   edi,eax
  417a6a:	test   al,0xb8
  417a6c:	cld    
  417a6d:	neg    DWORD PTR [ecx+esi*2-0x2fcee8cf]
  417a74:	sub    eax,0x6293fff8
  417a79:	(bad)  
  417a7a:	sbb    bh,BYTE PTR [edx+0x19]
  417a7d:	clc    
  417a7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a7f:	push   edi
  417a81:	pop    ecx
  417a82:	mov    dl,0xf8
  417a84:	or     bl,BYTE PTR [edi]
  417a86:	loopne 0x417a81
  417a88:	push   cs
  417a89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a8a:	daa    
  417a8b:	xchg   BYTE PTR [edi+0x622419f],dl
  417a91:	pop    ecx
  417a92:	dec    esp
  417a93:	std    
  417a94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a95:	dec    esp
  417a96:	popf   
  417a97:	xchg   ebx,eax
  417a98:	bswap  edx
  417a9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a9b:	jne    0x89ca1051
  417aa1:	clc    
  417aa2:	rol    DWORD PTR ds:0x8444e737,0xe7
  417aa9:	pushf  
  417aaa:	mov    ch,0x70
  417aac:	mov    dl,0xad
  417aae:	daa    
  417aaf:	ret    0x5f74
  417ab2:	push   esi
  417ab3:	(bad)  
  417ab4:	cli    
  417ab5:	stc    
  417ab6:	fwait
  417ab7:	or     al,0x10
  417ab9:	iret   
  417aba:	adc    cl,bh
  417abc:	add    DWORD PTR [esi],0x72eba9e5
  417ac2:	mov    dl,0x46
  417ac4:	pop    ebx
  417ac5:	rcr    BYTE PTR [ebx-0x15f9b1d6],0x82
  417acc:	sbb    eax,0xd941d28c
  417ad1:	push   ecx
  417ad2:	add    eax,0x715c4dee
  417ad7:	jb     0x417a82
  417ad9:	dec    eax
  417ada:	int    0x5c
  417adc:	jbe    0x417b59
  417ade:	adc    DWORD PTR [esi],edx
  417ae0:	add    esp,DWORD PTR [edi]
  417ae2:	sub    ebx,DWORD PTR [ebx]
  417ae4:	xor    dl,BYTE PTR [ecx-0x9]
  417ae7:	add    BYTE PTR [esi+0x6f163271],cl
  417aed:	pop    ecx
  417aee:	fcmovnu st,st(4)
  417af0:	enter  0xd256,0x7d
  417af4:	test   DWORD PTR [ecx+0x63],edi
  417af7:	add    edi,esi
  417af9:	leave  
  417afa:	sbb    BYTE PTR [eax],cl
  417afc:	(bad)  
  417afd:	out    dx,al
  417afe:	test   DWORD PTR ds:0xffa583e,0x1541d3f8
  417b08:	mov    edi,ebx
  417b0a:	lahf   
  417b0b:	or     eax,0xa758a1b8
  417b10:	call   DWORD PTR [edi-0x35f501dc]
  417b16:	add    bh,ah
  417b18:	sub    al,0x31
  417b1a:	outs   dx,BYTE PTR es:[esi]
  417b1c:	sbb    edx,eax
  417b1e:	push   ds
  417b1f:	stos   DWORD PTR es:[edi],eax
  417b20:	imul   edx,edi,0xffffffe6
  417b23:	into   
  417b24:	dec    eax
  417b25:	in     eax,0x14
  417b27:	jae    0x417afe
  417b29:	out    dx,al
  417b2a:	into   
  417b2b:	push   cs
  417b2c:	sahf   
  417b2d:	mov    ebx,0xe7b246df
  417b33:	and    edx,ebx
  417b35:	adc    eax,0x2e169338
  417b3a:	mov    bh,0xe0
  417b3c:	stos   DWORD PTR es:[edi],eax
  417b3d:	ds cli 
  417b3f:	retf   0x3307
  417b42:	add    BYTE PTR [edi+eax*1-0x237b87ba],0xfb
  417b4a:	cs push esp
  417b4c:	cwde   
  417b4d:	lods   eax,DWORD PTR ds:[esi]
  417b4e:	call   0x7f8f:0x3ce5dfdb
  417b55:	ja     0x417ae6
  417b57:	hlt    
  417b58:	and    DWORD PTR [edi-0x37d4491c],0x7
  417b5f:	mov    esp,DWORD PTR [ebp-0x7e]
  417b62:	(bad)  
  417b63:	aam    0x7f
  417b65:	addr16 xor eax,esp
  417b68:	cmp    eax,0x916ff27b
  417b6d:	leave  
  417b6e:	jbe    0x417bb8
  417b70:	iret   
  417b71:	adc    bl,BYTE PTR [edx+ebp*1]
  417b74:	mov    dl,0xb5
  417b76:	xchg   edx,eax
  417b77:	cdq    
  417b78:	push   es
  417b79:	pusha  
  417b7a:	cs cmp eax,0xdf62c668
  417b80:	gs (bad) 
  417b82:	lock call 0xda76:0xb24af4d3
  417b8a:	pop    ss
  417b8b:	xchg   DWORD PTR [esi+0x26],edx
  417b8e:	cwde   
  417b8f:	out    0x53,eax
  417b91:	pop    es
  417b92:	adc    al,0x15
  417b94:	sbb    eax,0x90c8dc8d
  417b99:	test   ecx,esi
  417b9b:	or     bh,dh
  417b9d:	iret   
  417b9e:	sub    al,BYTE PTR [eax+0x56]
  417ba1:	dec    ecx
  417ba2:	dec    edx
  417ba3:	adc    al,0xbb
  417ba5:	inc    esp
  417ba6:	mov    ?,WORD PTR [ecx+ebp*2]
  417ba9:	fisubr WORD PTR [ecx+0x7fcb86c5]
  417baf:	cmp    eax,edx
  417bb1:	sub    BYTE PTR [ebp+ecx*1+0x23],bh
  417bb5:	and    DWORD PTR [edx-0x6a5b4501],eax
  417bbb:	add    al,0x50
  417bbd:	sti    
  417bbe:	push   edx
  417bbf:	test   al,0xc5
  417bc1:	out    0x84,eax
  417bc3:	mov    al,0x68
  417bc5:	nop
  417bc6:	es jmp 0x33991b02
  417bcc:	call   0xc2f35927
  417bd1:	mov    esi,0x66ff26b4
  417bd6:	addr16 call 0x98ee2ed4
  417bdc:	xchg   edi,eax
  417bdd:	dec    ebp
  417bdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417be0:	popa   
  417be1:	mov    DWORD PTR cs:[edi],esi
  417be4:	pop    ebx
  417be5:	mov    ch,0xa8
  417be7:	mov    al,ds:0xe01c140
  417bec:	jg     0x417c16
  417bee:	test   bh,dl
  417bf0:	nop
  417bf1:	xchg   ebp,eax
  417bf2:	jge    0x417c2a
  417bf4:	mov    dh,0x6f
  417bf6:	jbe    0x417c5e
  417bf8:	je     0x417c5e
  417bfa:	test   al,0xf6
  417bfc:	(bad)  
  417bfd:	call   0x93cc599f
  417c02:	jp     0x417c32
  417c04:	fstp   QWORD PTR [ecx+0x27]
  417c07:	push   ds
  417c08:	mov    ch,0x8
  417c0a:	gs mov cl,ch
  417c0d:	dec    edx
  417c0e:	repz popf 
  417c10:	aad    0x4d
  417c12:	ret    
  417c13:	cmp    edi,DWORD PTR [ebx+0x59]
  417c16:	sub    cl,BYTE PTR [ecx+0x13901d48]
  417c1c:	mov    DWORD PTR [esp+eiz*4+0x71b267a9],eax
  417c23:	push   ecx
  417c24:	xchg   esi,ebx
  417c26:	int    0x4a
  417c28:	out    dx,al
  417c29:	std    
  417c2a:	mov    esi,0x3aa7014a
  417c2f:	xchg   BYTE PTR [edi+0x31],dl
  417c32:	cwde   
  417c33:	stc    
  417c34:	iret   
  417c35:	gs int 0xc3
  417c38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c39:	cdq    
  417c3a:	mov    dh,0xce
  417c3c:	leave  
  417c3d:	cmp    bl,BYTE PTR [edi+0x2495ff33]
  417c43:	sub    al,0x43
  417c45:	xor    edi,edi
  417c47:	mov    ch,0x19
  417c49:	sub    al,0x71
  417c4b:	fwait
  417c4c:	xchg   ebx,eax
  417c4d:	fidivr WORD PTR [esi+0x74303c20]
  417c53:	fwait
  417c54:	sbb    eax,0x8f54f130
  417c59:	repz adc esi,esi
  417c5c:	mov    dh,0x54
  417c5e:	jae    0x417c5b
  417c60:	pop    ecx
  417c61:	inc    ecx
  417c62:	push   0xc
  417c64:	leave  
  417c65:	and    BYTE PTR [edi+edi*2+0x3eae357f],al
  417c6c:	cdq    
  417c6d:	shl    DWORD PTR [edi],0x3c
  417c70:	mov    eax,ds:0x1adfcb18
  417c75:	fwait
  417c76:	cwde   
  417c77:	inc    ebx
  417c78:	pop    ss
  417c79:	out    dx,al
  417c7a:	ja     0x417c60
  417c7c:	adc    al,0x3c
  417c7e:	rol    DWORD PTR [ebp+0x28],1
  417c81:	jno    0x417cc0
  417c83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c84:	movq   mm4,QWORD PTR [esi+0x56]
  417c88:	fist   DWORD PTR [ebx-0x4be2d00b]
  417c8e:	add    BYTE PTR [ecx],0xf1
  417c91:	cmp    DWORD PTR [eax-0x1d],esp
  417c94:	ds seta bh
  417c98:	out    0x3d,eax
  417c9a:	aas    
  417c9b:	dec    esi
  417c9c:	xchg   ebx,eax
  417c9d:	outs   dx,DWORD PTR ds:[esi]
  417c9e:	mov    edi,ecx
  417ca0:	xchg   BYTE PTR [esi-0x4c1fa96b],ch
  417ca6:	and    eax,0x50093204
  417cab:	nop
  417cac:	jmp    FWORD PTR [ecx+0x2b]
  417caf:	dec    edx
  417cb0:	stc    
  417cb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cb2:	fisttp QWORD PTR [ecx+0x2f8797b0]
  417cb8:	or     DWORD PTR [ebx],ebx
  417cba:	jp     0x417cab
  417cbc:	imul   edx,DWORD PTR [ecx],0x7
  417cbf:	ins    DWORD PTR es:[edi],dx
  417cc0:	in     eax,dx
  417cc1:	pop    si
  417cc3:	xchg   edi,eax
  417cc4:	sbb    DWORD PTR [edx-0x331e3471],esp
  417cca:	popf   
  417ccb:	and    al,0x26
  417ccd:	ins    DWORD PTR es:[edi],dx
  417cce:	inc    esp
  417ccf:	and    BYTE PTR [esi-0x65ae5ef6],dh
  417cd5:	jmp    0x417ce8
  417cd7:	test   BYTE PTR [ebp+ebx*2-0x643184eb],0xa3
  417cdf:	xchg   DWORD PTR [ebp-0x1c],edi
  417ce2:	aaa    
  417ce3:	jl     0x417d2b
  417ce5:	int3   
  417ce6:	push   edi
  417ce7:	test   BYTE PTR [eax-0x28],bl
  417cea:	repz sub DWORD PTR [esi],edi
  417ced:	pop    ebp
  417cee:	jle    0x417d6b
  417cf0:	sti    
  417cf1:	push   es
  417cf2:	sub    ebp,DWORD PTR [ecx+0x2d591aa3]
  417cf8:	les    edx,FWORD PTR [ecx+0x1084dbd4]
  417cfe:	dec    esi
  417cff:	les    edi,FWORD PTR [ebx+0x24]
  417d02:	sub    DWORD PTR [esi+edi*4+0x37176620],ebp
  417d09:	cmp    DWORD PTR [ecx+0x7e44cf7a],0xc3a877d0
  417d13:	adc    BYTE PTR [ebp-0x67],0x89
  417d17:	adc    dh,BYTE PTR [esi-0x53]
  417d1a:	lods   eax,DWORD PTR ds:[esi]
  417d1b:	or     dl,0x4b
  417d1e:	test   eax,0x51f6beaa
  417d23:	cs stos BYTE PTR es:[edi],al
  417d25:	iret   
  417d26:	clc    
  417d27:	pop    DWORD PTR ds:0xb8b83892
  417d2d:	fwait
  417d2e:	rol    edi,0xf9
  417d31:	mov    eax,ds:0xeb35bf35
  417d36:	in     al,0xc3
  417d38:	(bad)  
  417d39:	sub    al,0xfe
  417d3b:	inc    ebp
  417d3c:	cdq    
  417d3d:	dec    ecx
  417d3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d3f:	sahf   
  417d40:	je     0x417d5a
  417d42:	jge    0x417dc3
  417d44:	(bad)  
  417d45:	neg    BYTE PTR [esi]
  417d47:	inc    ebx
  417d48:	rcr    DWORD PTR [ecx],0x85
  417d4b:	xacquire xchg BYTE PTR [ecx+0x4a],ah
  417d4f:	push   ecx
  417d50:	adc    BYTE PTR [ebx+0x15],0xcb
  417d54:	test   BYTE PTR [edx],0x22
  417d57:	and    al,0xfa
  417d59:	pop    eax
  417d5a:	pop    ebp
  417d5b:	js     0x417dad
  417d5d:	repz out 0x2e,al
  417d60:	test   DWORD PTR [edx+0x40],ecx
  417d63:	stos   DWORD PTR es:[edi],eax
  417d64:	sbb    eax,0xc9135a86
  417d69:	arpl   di,bp
  417d6b:	int    0x23
  417d6d:	(bad)  
  417d6e:	jnp    0x417db9
  417d70:	pop    esi
  417d71:	inc    ebp
  417d72:	lock lods eax,DWORD PTR ds:[esi]
  417d74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d75:	or     ebp,DWORD PTR [ebx]
  417d77:	hlt    
  417d78:	cmp    al,0x94
  417d7a:	add    DWORD PTR [ebx+0x73],esp
  417d7d:	mov    eax,0x4e163a49
  417d82:	mov    esi,0x4fe6641b
  417d87:	int    0xec
  417d89:	pusha  
  417d8a:	or     eax,DWORD PTR ds:0x1d411752
  417d90:	adc    eax,edi
  417d92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d93:	mov    bh,ch
  417d95:	rol    dh,cl
  417d97:	mov    edi,0xe602d2cd
  417d9c:	push   ecx
  417d9d:	pop    ss
  417d9e:	in     al,0xba
  417da0:	xor    al,0xae
  417da2:	ja     0x417d6c
  417da4:	dec    eax
  417da5:	or     ebp,DWORD PTR [esi-0x22c6484b]
  417dab:	push   ds
  417dac:	dec    esi
  417dad:	ror    BYTE PTR [esp+edi*8-0x6dc169d8],cl
  417db4:	xor    BYTE PTR [eax],0x4f
  417db7:	inc    edx
  417db8:	mov    al,ds:0x6700547e
  417dbd:	and    eax,0x92c39b67
  417dc2:	inc    edi
  417dc3:	jg     0x417d70
  417dc5:	repz stc 
  417dc7:	xor    esp,ebx
  417dc9:	repz sbb al,0xb2
  417dcc:	iret   
  417dcd:	pop    esi
  417dce:	pop    ebx
  417dcf:	mov    dl,0x7b
  417dd1:	dec    BYTE PTR [edi-0x4c1ba34]
  417dd7:	fcom   st(3)
  417dd9:	stos   DWORD PTR es:[edi],eax
  417dda:	lods   eax,DWORD PTR ds:[esi]
  417ddb:	fnstenv [ebx]
  417ddd:	rol    BYTE PTR [ebx],1
  417ddf:	cmp    al,0xe6
  417de1:	call   0x19abc167
  417de6:	dec    eax
  417de7:	mov    BYTE PTR [esi],ah
  417de9:	push   edi
  417dea:	pop    edx
  417deb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417dec:	mov    ebx,0x6236723d
  417df1:	sbb    al,0xa0
  417df3:	mov    bh,BYTE PTR [ebx]
  417df5:	cmp    eax,0x2656d47c
  417dfa:	xor    BYTE PTR [eax],cl
  417dfc:	dec    esp
  417dfd:	xchg   DWORD PTR [eax+0x1dad4208],ecx
  417e03:	xchg   esi,eax
  417e04:	xchg   ecx,eax
  417e05:	outs   dx,DWORD PTR ds:[esi]
  417e06:	scas   al,BYTE PTR es:[edi]
  417e07:	outs   dx,DWORD PTR ds:[esi]
  417e08:	adc    ecx,ebp
  417e0a:	xchg   edx,eax
  417e0b:	add    al,0xf4
  417e0d:	clc    
  417e0e:	aad    0xb3
  417e10:	mov    WORD PTR [esi],cs
  417e12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e13:	out    0x4,eax
  417e15:	das    
  417e16:	push   ebx
  417e17:	push   cs
  417e18:	xlat   BYTE PTR ds:[ebx]
  417e19:	cs pop esp
  417e1b:	push   ds
  417e1c:	mov    ebx,0x60f9f06d
  417e21:	sbb    edi,0xe3bb5f63
  417e27:	out    dx,al
  417e28:	out    0x6f,eax
  417e2a:	dec    edx
  417e2b:	mov    ecx,0x7d58a316
  417e30:	dec    esi
  417e31:	sbb    ebx,ebx
  417e33:	push   ecx
  417e34:	sub    BYTE PTR [ecx+eiz*4],al
  417e37:	fs aaa 
  417e39:	jmp    0x2448356c
  417e3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e3f:	and    esi,esp
  417e41:	je     0x417e3d
  417e43:	adc    ebp,ebx
  417e45:	xor    BYTE PTR [edi+0x703c3a69],dh
  417e4b:	js     0x417e87
  417e4d:	or     DWORD PTR [si-0x80],esp
  417e51:	repz aaa 
  417e53:	jmp    0x417eaf
  417e55:	out    dx,al
  417e56:	mov    al,BYTE PTR [esi+0x7e6a8f52]
  417e5c:	loop   0x417e0e
  417e5e:	sahf   
  417e5f:	mov    ebp,0x2127cf9e
  417e64:	push   esi
  417e65:	xor    eax,0x9a5e4efb
  417e6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e6b:	or     DWORD PTR [ecx+0x1d9d3161],0xd8cd836e
  417e75:	and    DWORD PTR [esi],ecx
  417e77:	mov    ds:0x39962c56,eax
  417e7c:	mov    ebp,0x827a4d08
  417e81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e82:	leave  
  417e83:	jnp    0x417e4a
  417e85:	pushf  
  417e86:	inc    ebx
  417e88:	xor    DWORD PTR [esi],ecx
  417e8a:	xchg   esp,eax
  417e8b:	sub    esp,DWORD PTR [edi-0x26]
  417e8e:	lock or edx,DWORD PTR [edx-0x5ef444f4]
  417e95:	(bad)  
  417e96:	and    al,0x78
  417e98:	or     al,0xb7
  417e9a:	int3   
  417e9b:	loope  0x417f12
  417e9d:	les    eax,FWORD PTR [edx+0x10]
  417ea0:	add    al,0xc0
  417ea2:	push   ebp
  417ea3:	pop    es
  417ea4:	outs   dx,BYTE PTR ds:[esi]
  417ea5:	lds    eax,FWORD PTR [ecx-0x4f]
  417ea8:	mov    edx,0x58a0352d
  417ead:	das    
  417eae:	rcr    DWORD PTR [ebp-0x54],0xb3
  417eb2:	xor    BYTE PTR [eax+0x7],al
  417eb5:	loopne 0x417eb7
  417eb7:	pop    ebp
  417eb8:	add    edx,ebx
  417eba:	mov    ch,0x8c
  417ebc:	xor    DWORD PTR [edx],edi
  417ebe:	shr    WORD PTR [edi+0x6c861193],cl
  417ec5:	push   esi
  417ec6:	mov    edx,0xe52bf8a
  417ecb:	cdq    
  417ecc:	in     eax,0xfc
  417ece:	jge    0x417eb6
  417ed0:	stos   BYTE PTR es:[edi],al
  417ed1:	and    BYTE PTR [ebp+0x2d4f0fa],al
  417ed7:	hlt    
  417ed8:	js     0x417e8a
  417eda:	dec    eax
  417edb:	(bad)  
  417edd:	pusha  
  417ede:	in     al,dx
  417edf:	mov    bl,0x6c
  417ee1:	inc    eax
  417ee2:	in     eax,dx
  417ee3:	pop    ecx
  417ee4:	xor    bl,BYTE PTR [eax]
  417ee6:	(bad)  
  417ee7:	sar    BYTE PTR [ecx-0x65],1
  417eea:	xchg   ebp,eax
  417eeb:	push   edi
  417eec:	and    BYTE PTR [esp+edx*4+0x1563a58],0xb2
  417ef4:	sbb    edx,DWORD PTR [esi-0x1cab41ba]
  417efa:	mov    cr5,ecx
  417efd:	inc    eax
  417efe:	push   ds
  417eff:	(bad)  
  417f00:	inc    ecx
  417f01:	add    ah,BYTE PTR [eax-0x3e]
  417f04:	and    DWORD PTR [ecx+0xa9c8e8d],eax
  417f0a:	test   DWORD PTR [ecx+eiz*4+0x30],ebx
  417f0e:	cmp    DWORD PTR [eax+eax*2+0x79],ecx
  417f12:	xchg   esi,eax
  417f13:	rcl    ah,1
  417f15:	inc    ecx
  417f16:	movnti DWORD PTR [esi-0x5fccffbc],eax
  417f1d:	aas    
  417f1e:	loopne 0x417eb9
  417f20:	into   
  417f21:	cmp    edx,DWORD PTR [ecx-0x1e]
  417f24:	gs aam 0x59
  417f27:	mov    eax,ds:0x34f29245
  417f2c:	pop    ebp
  417f2d:	jns    0x417f04
  417f2f:	gs cwde 
  417f31:	repz je 0x417f55
  417f34:	xor    BYTE PTR [ebx-0x4f09cbd7],0xdb
  417f3b:	outs   dx,BYTE PTR ds:[esi]
  417f3c:	cmp    eax,0x953e4496
  417f41:	and    eax,0x6c940878
  417f46:	mov    ?,WORD PTR [esi+0x51]
  417f49:	xor    cl,BYTE PTR [edx]
  417f4b:	push   ecx
  417f4c:	xchg   esi,eax
  417f4d:	pop    ebp
  417f4e:	hlt    
  417f4f:	lock inc esi
  417f51:	imul   eax,DWORD PTR [edi-0x3d],0xce51f531
  417f58:	test   al,0xab
  417f5a:	in     eax,dx
  417f5b:	push   ebp
  417f5c:	push   0x7
  417f5e:	mov    bh,0xad
  417f60:	and    al,0xde
  417f62:	cld    
  417f63:	in     al,dx
  417f64:	xor    BYTE PTR [ebx],dl
  417f66:	xchg   ecx,eax
  417f67:	les    esi,FWORD PTR [esi]
  417f69:	push   edi
  417f6a:	adc    DWORD PTR [ebx-0xc],esp
  417f6d:	fwait
  417f6e:	pushf  
  417f6f:	xchg   BYTE PTR [esi-0x15],bl
  417f72:	jno    0x417f52
  417f74:	aas    
  417f75:	ss out dx,al
  417f77:	inc    edi
  417f78:	mov    ds:0xbd500978,al
  417f7d:	(bad)  
  417f7e:	imul   DWORD PTR [eax+0x58e1f49b]
  417f84:	leave  
  417f85:	mov    ebp,DWORD PTR [ebx]
  417f87:	lock mov ah,0x48
  417f8a:	mov    bl,0xd0
  417f8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f8d:	xchg   esi,eax
  417f8e:	lods   eax,DWORD PTR ds:[esi]
  417f8f:	js     0x417f36
  417f91:	jno    0x417f9c
  417f93:	jbe    0x417f63
  417f95:	hlt    
  417f96:	mov    al,0x9b
  417f98:	dec    esp
  417f99:	into   
  417f9a:	repz addr16 cwde 
  417f9d:	adc    DWORD PTR [edi+eiz*2],0xffffffa0
  417fa1:	data16 adc BYTE PTR [edi],al
  417fa4:	fwait
  417fa5:	jmp    0xa67c:0x2157e51
  417fac:	out    0x8a,al
  417fae:	or     DWORD PTR gs:[edx+0x3c],0xf5f2f33e
  417fb6:	push   ss
  417fb7:	das    
  417fb8:	xchg   esi,eax
  417fb9:	jp     0x417ff9
  417fbb:	and    eax,0x767fda9e
  417fc0:	rep lods al,BYTE PTR ds:[esi]
  417fc2:	stos   BYTE PTR es:[edi],al
  417fc3:	es pop edi
  417fc5:	scas   eax,DWORD PTR es:[edi]
  417fc6:	cmp    eax,0x8139b793
  417fcb:	pop    ss
  417fcc:	sbb    al,0x4a
  417fce:	cmp    esp,ecx
  417fd0:	and    DWORD PTR [edx-0x26c62496],eax
  417fd6:	popa   
  417fd7:	popa   
  417fd8:	dec    eax
  417fd9:	addr16 sti 
  417fdb:	loop   0x41802d
  417fdd:	xlat   BYTE PTR ds:[ebx]
  417fde:	jns    0x417f69
  417fe0:	mov    DWORD PTR [ebx+0x23],esp
  417fe3:	adc    esi,DWORD PTR [edi+0x5f]
  417fe6:	call   0x1874:0x918407d2
  417fed:	jmp    0x41803b
  417fef:	popf   
  417ff0:	mov    edx,0x6578fb2f
  417ff5:	aad    0x1b
  417ff7:	push   0x3d
  417ff9:	in     eax,dx
  417ffa:	sub    ebp,esi
  417ffc:	mov    ?,WORD PTR [ebp-0x71]
  417fff:	mov    BYTE PTR [ecx+0x51],0xcf
  418003:	call   0xabfa0ad2
  418008:	mov    BYTE PTR [esi],ah
  41800a:	ins    DWORD PTR es:[edi],dx
  41800b:	or     DWORD PTR [ebx+eax*2],ecx
  41800e:	cld    
  41800f:	push   0x2f9f9bde
  418014:	jmp    0x417fc8
  418016:	or     BYTE PTR [edi+0x31],ah
  418019:	js     0x418031
  41801b:	jle    0x417fe1
  41801d:	xor    al,BYTE PTR [edi]
  41801f:	and    BYTE PTR [eax+0x55],ah
  418022:	push   esp
  418023:	xor    DWORD PTR [ebp+0x6298a1a1],ebx
  418029:	mov    WORD PTR [eax+0x1fe49873],fs
  41802f:	imul   eax,DWORD PTR [esi-0x2bb08e59],0x41bbbd60
  418039:	aaa    
  41803a:	add    bh,dh
  41803c:	push   edx
  41803d:	push   ds
  41803e:	frstor [esp+edx*8]
  418041:	lods   eax,DWORD PTR ds:[esi]
  418042:	test   BYTE PTR [eax-0x188de00d],cl
  418048:	mov    ds:0xd4d5940f,al
  41804d:	lock inc ebp
  41804f:	js     0x418061
  418051:	pop    edi
  418052:	mov    al,0x7f
  418054:	push   0x5bde248f
  418059:	and    eax,0x85038ce
  41805e:	add    edx,esp
  418060:	test   eax,0x6ccd5605
  418065:	add    edx,edx
  418067:	add    ebx,DWORD PTR [ebx]
  418069:	retf   0x910f
  41806c:	bound  esp,QWORD PTR [ebx+0x4d06800]
  418072:	pop    edx
  418073:	mov    cl,0x47
  418075:	inc    eax
  418076:	dec    esi
  418077:	je     0x41808b
  418079:	push   es
  41807a:	mov    cl,0x5e
  41807c:	jg     0x41805e
  41807e:	fiadd  WORD PTR [ecx]
  418080:	int3   
  418081:	inc    edx
  418082:	dec    esi
  418083:	out    dx,eax
  418084:	jp     0x418083
  418086:	pusha  
  418087:	je     0x4180d2
  418089:	outs   dx,DWORD PTR ds:[esi]
  41808a:	leave  
  41808b:	push   edi
  41808c:	shr    BYTE PTR [ebx-0x66],0x32
  418090:	fst    QWORD PTR [ecx]
  418092:	or     ebx,esi
  418094:	aad    0x2f
  418096:	jmp    0x3d51127f
  41809b:	sti    
  41809c:	mov    ah,0x81
  41809e:	pop    edx
  41809f:	cs aaa 
  4180a1:	ins    BYTE PTR es:[edi],dx
  4180a2:	dec    edi
  4180a3:	pusha  
  4180a4:	xchg   ecx,eax
  4180a5:	cmp    BYTE PTR [ecx-0x478d8073],ch
  4180ab:	lods   al,BYTE PTR ds:[esi]
  4180ac:	jg     0x41807c
  4180ae:	cmp    dl,dh
  4180b0:	in     al,0xd2
  4180b2:	ds ins DWORD PTR es:[edi],dx
  4180b4:	mov    WORD PTR [edi],fs
  4180b6:	push   edi
  4180b7:	sub    al,0x1a
  4180b9:	mov    esi,0xecf29f29
  4180be:	mov    edx,0xc29d0b20
  4180c3:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4180c5:	aaa    
  4180c6:	imul   esp,DWORD PTR [edx+0x4e],0xa3980025
  4180cd:	xchg   edx,eax
  4180ce:	pop    ecx
  4180cf:	mov    BYTE PTR [esi+0x497ddda6],bl
  4180d5:	push   ds
  4180d6:	out    dx,al
  4180d7:	and    dh,BYTE PTR [ecx-0x48]
  4180da:	inc    ebx
  4180db:	clc    
  4180dc:	loopne 0x41810a
  4180de:	gs popa 
  4180e0:	leave  
  4180e1:	popa   
  4180e2:	sbb    BYTE PTR [edx+edi*2+0x7914d5ca],cl
  4180e9:	adc    al,0xed
  4180eb:	jl     0x418138
  4180ed:	out    dx,eax
  4180ee:	test   BYTE PTR [ebp+esi*1-0x1f],dl
  4180f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180f4:	lods   eax,DWORD PTR ds:[esi]
  4180f5:	sub    al,0x1a
  4180f7:	inc    eax
  4180f8:	or     ch,BYTE PTR [ecx-0xc]
  4180fb:	inc    edi
  4180fc:	mov    ds:0x7ce7f5c2,al
  418101:	xor    al,ah
  418103:	retf   
  418104:	cmp    dh,0x2c
  418107:	arpl   WORD PTR [ebp+edx*2-0x753db0e6],ax
  41810e:	sub    al,0x94
  418110:	jg     0x418100
  418112:	ds je  0x418174
  418115:	fucom  st(6)
  418117:	add    ebp,0xffffffcd
  41811a:	outs   dx,BYTE PTR ds:[esi]
  41811b:	adc    ebp,ebx
  41811d:	sar    BYTE PTR [ebp-0x9],1
  418120:	dec    ebx
  418121:	outs   dx,DWORD PTR ds:[esi]
  418122:	mov    ecx,0x1002426
  418127:	fwait
  418128:	jecxz  0x418102
  41812a:	jns    0x418152
  41812c:	ds jl  0x41819a
  41812f:	int3   
  418130:	mov    eax,ds:0xbc5b4684
  418135:	or     eax,0x81e4e6df
  41813a:	cmp    BYTE PTR [edx-0x7ff300f3],ah
  418140:	cwde   
  418141:	add    DWORD PTR [esi+0x3ca033dc],esp
  418147:	mov    al,ds:0x2db6c8ee
  41814c:	add    esp,esp
  41814e:	mov    ebp,0x59afe6fc
  418153:	push   ecx
  418154:	ret    0x27e1
  418157:	pop    edi
  418158:	and    BYTE PTR [edx-0x6a1b6922],ah
  41815e:	icebp  
  41815f:	push   edi
  418160:	mov    eax,ds:0xc22d8856
  418165:	cs xor eax,0x50d3b234
  41816b:	inc    edi
  41816c:	aad    0xa1
  41816e:	aas    
  41816f:	sub    al,0xb9
  418171:	lods   al,BYTE PTR ds:[esi]
  418172:	dec    ebp
  418173:	cmp    BYTE PTR ds:0x6e71a74,al
  418179:	in     eax,0xd9
  41817b:	aas    
  41817c:	sahf   
  41817d:	dec    edi
  41817e:	fstp   TBYTE PTR [esi+0x60]
  418181:	xor    eax,0x276b94ba
  418186:	jae    0x4181b2
  418188:	mov    eax,0x94190c5e
  41818d:	xchg   DWORD PTR [ebx+edx*2+0x3],eax
  418191:	push   eax
  418192:	hlt    
  418193:	inc    edx
  418194:	in     al,dx
  418195:	fbstp  TBYTE PTR [edx+0x36]
  418198:	sbb    al,0xa8
  41819a:	out    0x49,eax
  41819c:	xchg   esi,eax
  41819d:	jmp    0x41817b
  41819f:	sbb    BYTE PTR ds:0xcf2aefd3,cl
  4181a5:	push   ss
  4181a6:	leave  
  4181a7:	dec    esp
  4181a8:	jns    0x418207
  4181aa:	sahf   
  4181ab:	add    eax,0xc07c1fec
  4181b0:	pushf  
  4181b1:	lds    ecx,FWORD PTR [esi]
  4181b3:	jno    0x418196
  4181b5:	add    eax,0xa466a294
  4181ba:	es cdq 
  4181bc:	popf   
  4181bd:	push   0x16
  4181bf:	jb     0x4181ed
  4181c1:	inc    ecx
  4181c2:	and    BYTE PTR [eax-0x42],bl
  4181c5:	int    0x62
  4181c7:	pop    esi
  4181c8:	mov    al,ds:0x909a4415
  4181cd:	adc    eax,0x9e4c81d4
  4181d2:	loope  0x41816d
  4181d4:	ins    BYTE PTR es:[edi],dx
  4181d5:	push   eax
  4181d6:	xchg   edi,eax
  4181d7:	and    dl,BYTE PTR [edx-0x416cb53f]
  4181dd:	outs   dx,BYTE PTR ds:[esi]
  4181de:	repnz push es
  4181e0:	or     ecx,0x144512a6
  4181e6:	outs   dx,DWORD PTR ds:[esi]
  4181e7:	out    0x51,eax
  4181e9:	inc    eax
  4181ea:	je     0x418173
  4181ec:	stc    
  4181ed:	cmp    edi,0x0
  4181f0:	shl    edi,0xcf
  4181f3:	or     al,0xa4
  4181f5:	lods   eax,DWORD PTR ds:[esi]
  4181f6:	mov    ah,0x24
  4181f8:	and    BYTE PTR [ebx-0x3d780293],bl
  4181fe:	out    0x56,eax
  418200:	cmp    esi,DWORD PTR [esi+0x60]
  418203:	lock push ss
  418205:	hlt    
  418206:	or     dh,BYTE PTR [edi]
  418208:	stc    
  418209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41820a:	mov    al,0xa5
  41820c:	outs   dx,DWORD PTR ds:[esi]
  41820d:	add    al,0x7a
  41820f:	je     0x4181f6
  418211:	dec    edx
  418212:	enter  0x9c7d,0x5c
  418216:	outs   dx,DWORD PTR ds:[esi]
  418217:	jmp    0xd7e9:0x1710ed12
  41821e:	fild   WORD PTR [esp+eax*4-0x46b83c49]
  418225:	mov    al,fs:0x87bf23ed
  41822b:	jnp    0x41824a
  41822d:	mul    BYTE PTR ds:0x35b2f16e
  418233:	cs xchg esi,eax
  418235:	sbb    BYTE PTR [edi-0x7d3be975],0x9e
  41823c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41823d:	mov    ebp,0xe090d47d
  418242:	mov    esp,0x341a99a4
  418247:	sbb    ecx,DWORD PTR [ecx-0x69d400bb]
  41824d:	and    BYTE PTR [ebx-0x61],dl
  418250:	(bad)  
  418252:	ins    BYTE PTR es:[di],dx
  418254:	xchg   edx,eax
  418255:	or     al,0x43
  418257:	jge    0x4182c5
  418259:	out    dx,al
  41825a:	jl     0x41828c
  41825c:	rol    cl,cl
  41825e:	jmp    FWORD PTR [ebx-0x31]
  418261:	call   0x3a96:0x4060bcc5
  418268:	or     BYTE PTR [edi],0xcf
  41826b:	dec    ebx
  41826c:	push   fs
  41826e:	fstp   QWORD PTR [ebp-0x76]
  418271:	and    DWORD PTR [ebp+0x52],ebx
  418274:	cmp    BYTE PTR [ebx+0x7f],ch
  418277:	stos   DWORD PTR es:[edi],eax
  418278:	mov    al,ds:0x202237f1
  41827d:	sub    ecx,DWORD PTR [esi]
  41827f:	pop    ds
  418280:	stos   DWORD PTR es:[edi],eax
  418281:	imul   BYTE PTR [esi+0x48b21223]
  418287:	mov    DWORD PTR [ebx],ecx
  418289:	cmp    BYTE PTR [ebx+esi*8],ah
  41828c:	push   esi
  41828d:	jp     0x41824f
  41828f:	add    DWORD PTR [eax-0x16],0xd3fff2c8
  418296:	cmp    cl,BYTE PTR [ecx]
  418298:	lea    ecx,[edi]
  41829a:	jmp    0x4182ee
  41829c:	lea    eax,[esi-0x2bfb7219]
  4182a2:	push   ss
  4182a3:	stos   DWORD PTR es:[edi],eax
  4182a4:	and    eax,0x9210dbf2
  4182a9:	inc    edi
  4182aa:	out    dx,eax
  4182ab:	add    esp,DWORD PTR [esi+0x50]
  4182ae:	loopne 0x4182be
  4182b0:	out    0xb1,eax
  4182b2:	jle    0x418321
  4182b4:	fst    st(0)
  4182b6:	jmp    0x6eb5c8d9
  4182bb:	and    bl,BYTE PTR [edx-0x3b]
  4182be:	out    dx,al
  4182bf:	fimul  DWORD PTR [edx-0x40]
  4182c2:	adc    BYTE PTR ds:0xa79533c8,ah
  4182c8:	push   0xffffffe8
  4182ca:	shl    BYTE PTR [ecx],cl
  4182cc:	int3   
  4182cd:	mov    eax,edx
  4182cf:	mov    edx,0xa7eff618
  4182d4:	xlat   BYTE PTR ds:[ebx]
  4182d5:	xor    dl,dh
  4182d7:	in     eax,dx
  4182d8:	data16 adc al,0xb8
  4182db:	(bad)  
  4182dc:	scas   al,BYTE PTR es:[edi]
  4182dd:	pusha  
  4182de:	test   BYTE PTR [esi+ebx*8],dh
  4182e1:	in     al,0xa1
  4182e3:	xor    BYTE PTR [ecx-0x7f137f67],0x42
  4182ea:	out    dx,al
  4182eb:	test   DWORD PTR [ebp+0x3a],edx
  4182ee:	and    ecx,DWORD PTR [edx+0x69736690]
  4182f4:	cmp    DWORD PTR [ebx+0x1b],esi
  4182f7:	jnp    0x41827f
  4182f9:	mov    ds:0x81b102bd,al
  4182fe:	pop    eax
  4182ff:	inc    eax
  418300:	test   al,0xf0
  418302:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418303:	das    
  418304:	test   eax,0xbe318c96
  418309:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41830b:	add    DWORD PTR [eax-0x31],eax
  41830e:	mov    eax,0xd8d6554a
  418313:	jle    0x4182d6
  418315:	mov    eax,DWORD PTR [esi-0x7e]
  418318:	mov    edi,0x2070f458
  41831d:	mov    cl,0x85
  41831f:	shl    eax,0xcd
  418322:	mov    ds:0x3b8846f0,al
  418327:	out    0xb7,eax
  418329:	push   ds
  41832a:	and    dl,cl
  41832c:	sbb    BYTE PTR [edi+0x4e9ae4b9],0xd3
  418333:	in     eax,0x7a
  418335:	and    BYTE PTR [ebx],ah
  418337:	adc    eax,0x2dfea09d
  41833c:	push   0xffffffe1
  41833e:	jle    0x4183ab
  418340:	(bad)  
  418341:	cmp    bl,BYTE PTR [ebx-0x347868f2]
  418347:	dec    esp
  418348:	pusha  
  418349:	xchg   dh,bh
  41834b:	jnp    0x418352
  41834d:	(bad)  
  41834e:	out    0x8b,al
  418350:	xchg   esp,eax
  418351:	mov    edi,0x9a29b2a8
  418356:	and    al,0xe0
  418358:	push   ebp
  418359:	inc    ecx
  41835a:	xchg   esi,eax
  41835b:	cmp    eax,0x58688b33
  418360:	icebp  
  418361:	gs jae 0x4183bc
  418364:	push   esp
  418365:	ret    0x9b5
  418368:	pop    es
  418369:	in     eax,dx
  41836a:	sbb    BYTE PTR [ebp+0x12],cl
  41836d:	iret   
  41836e:	xor    BYTE PTR [edi],dh
  418370:	pop    edi
  418371:	fbstp  TBYTE PTR [eax+0x1c]
  418374:	sub    ebp,DWORD PTR [ebp+0x7d]
  418377:	mov    eax,0x6e417fef
  41837c:	cmp    ecx,edi
  41837e:	cld    
  41837f:	lds    esp,FWORD PTR [ebx]
  418381:	cmp    eax,0xbf7e896
  418386:	xchg   esi,ebp
  418388:	(bad)  
  418389:	test   al,0x13
  41838b:	lods   eax,DWORD PTR ds:[esi]
  41838c:	test   cl,dh
  41838e:	mov    ch,0x45
  418390:	xchg   edi,eax
  418391:	sub    BYTE PTR fs:[esi+0xb],cl
  418395:	pop    ecx
  418396:	jnp    0x418325
  418398:	inc    ecx
  418399:	cmp    ecx,ecx
  41839b:	pushf  
  41839c:	mov    ch,0x63
  41839e:	dec    ebx
  41839f:	mov    DWORD PTR [ecx-0x14],0x10625e96
  4183a6:	push   esi
  4183a7:	add    DWORD PTR [ecx-0x6e4f3edf],ebx
  4183ad:	daa    
  4183ae:	lds    eax,FWORD PTR [edx+ecx*2]
  4183b1:	popa   
  4183b2:	mov    cl,0xb7
  4183b4:	xchg   ebx,eax
  4183b5:	push   es
  4183b6:	arpl   WORD PTR [ebp+0x54],dx
  4183b9:	(bad)  
  4183ba:	fisubr WORD PTR [edx]
  4183bc:	push   ds
  4183bd:	or     BYTE PTR [edx+edi*8],bl
  4183c0:	sub    ah,BYTE PTR [eax+esi*1-0xe]
  4183c4:	and    eax,0x6ca913f1
  4183c9:	push   cs
  4183ca:	imul   ebp,DWORD PTR [edi+0x4e71caa9],0x35
  4183d1:	je     0x41837e
  4183d3:	mov    ch,0x57
  4183d5:	push   cs
  4183d6:	sub    cl,dl
  4183d8:	xchg   BYTE PTR [edx+0x32c2a379],cl
  4183de:	test   al,0xe6
  4183e0:	cmc    
  4183e1:	ds inc ebx
  4183e3:	pop    eax
  4183e4:	or     esp,DWORD PTR [ebx+0x14]
  4183e7:	pop    esi
  4183e8:	cs pop edx
  4183ea:	(bad)  
  4183eb:	lds    ebx,FWORD PTR [ecx-0x10]
  4183ee:	hlt    
  4183ef:	jl     0x41842b
  4183f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183f2:	repnz fadd QWORD PTR [ebx-0x12]
  4183f6:	mov    eax,0xbb4679dc
  4183fb:	es pop esp
  4183fd:	enter  0xd891,0x3d
  418401:	inc    esp
  418402:	in     al,0xed
  418404:	sar    cl,cl
  418406:	ror    DWORD PTR [esi],cl
  418408:	pop    ss
  418409:	fwait
  41840a:	mov    ah,0x68
  41840c:	add    DWORD PTR [eax+eiz*1+0x79],eax
  418410:	stos   BYTE PTR es:[edi],al
  418411:	push   ds
  418412:	hlt    
  418413:	pop    edi
  418414:	frstor [ecx+esi*1]
  418417:	push   cs
  418418:	or     al,0xe7
  41841a:	pop    esi
  41841b:	clc    
  41841c:	sbb    ch,ah
  41841e:	mov    es,WORD PTR [edi]
  418420:	add    edi,edx
  418422:	mov    ss,esi
  418424:	fmul   DWORD PTR [eax+edi*4]
  418427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418428:	jno    0x4183f6
  41842a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41842b:	frstor [edi-0x5e]
  41842e:	jo     0x41843a
  418430:	jns    0x41845e
  418432:	mov    DWORD PTR [edx+0x1a],edx
  418435:	out    dx,al
  418436:	out    dx,eax
  418437:	dec    edi
  418438:	inc    esi
  418439:	add    eax,ebp
  41843b:	rol    eax,cl
  41843d:	test   BYTE PTR [eax+edi*8+0x68],dl
  418441:	jecxz  0x4183e6
  418443:	rol    DWORD PTR [ecx+0x57],cl
  418446:	jbe    0x41843c
  418448:	or     ch,BYTE PTR [ebx+0x39]
  41844b:	xchg   ebx,eax
  41844c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41844d:	dec    esp
  41844e:	inc    ebx
  41844f:	jl     0x41847a
  418451:	jne    0x4183e3
  418453:	lods   eax,DWORD PTR ds:[esi]
  418454:	aam    0xa4
  418456:	arpl   WORD PTR [ecx+0x5af1380a],sp
  41845c:	lods   eax,DWORD PTR ds:[esi]
  41845d:	jo     0x418419
  41845f:	loopne 0x418475
  418461:	lock mov ch,0x5
  418464:	rcl    DWORD PTR [ecx],0xeb
  418467:	sub    DWORD PTR gs:[eax+0x496cedc2],edx
  41846e:	and    DWORD PTR [ecx-0x48],0x1c
  418472:	sub    bl,BYTE PTR [esi]
  418474:	outs   dx,DWORD PTR ds:[esi]
  418475:	mov    edx,0xf56bc14c
  41847a:	call   DWORD PTR ss:[edi+0x4fca8b3d]
  418481:	cli    
  418482:	pusha  
  418483:	and    cl,BYTE PTR [esi+edx*1]
  418486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418487:	mov    eax,ds:0x1b79e8d8
  41848c:	outs   dx,DWORD PTR ds:[esi]
  41848d:	push   esp
  41848e:	sub    BYTE PTR [edx],0xe3
  418491:	or     DWORD PTR [edi],edi
  418493:	push   ebp
  418494:	jnp    0x41849f
  418496:	(bad)  
  418498:	or     DWORD PTR [edi],esi
  41849a:	mov    al,ds:0x82021fc9
  41849f:	mov    ds,WORD PTR [ebx+0x4d107686]
  4184a5:	leave  
  4184a6:	test   al,0xe0
  4184a8:	dec    ebx
  4184a9:	lods   al,BYTE PTR ds:[esi]
  4184aa:	stos   BYTE PTR es:[edi],al
  4184ab:	push   cs
  4184ac:	inc    edx
  4184ad:	shl    DWORD PTR [eax+0x23],cl
  4184b0:	(bad)  
  4184b1:	es cmp cl,dh
  4184b4:	mov    ah,0xbe
  4184b6:	pushf  
  4184b7:	sub    eax,ebx
  4184b9:	mov    eax,ds:0x2ceb2663
  4184be:	or     dh,bh
  4184c0:	sbb    ch,dl
  4184c2:	je     0x41853e
  4184c4:	jge    0x4184c0
  4184c6:	inc    edi
  4184c7:	jmp    0x418498
  4184c9:	inc    edi
  4184ca:	bnd ret 
  4184cc:	test   DWORD PTR [ebp-0x1f],ebx
  4184cf:	and    esi,edx
  4184d1:	push   ds
  4184d2:	mov    ecx,0xe507539
  4184d7:	ret    
  4184d8:	mov    dl,BYTE PTR [eax]
  4184da:	dec    eax
  4184db:	cld    
  4184dc:	or     eax,0x915578b0
  4184e1:	add    BYTE PTR [ebp-0x23],0xbb
  4184e5:	push   eax
  4184e6:	adc    DWORD PTR [esi+0xf87dd16],0x14
  4184ed:	ja     0x418569
  4184ef:	jns    0x41849c
  4184f1:	pop    edi
  4184f2:	mov    dh,0x74
  4184f4:	sahf   
  4184f5:	ficom  DWORD PTR [ebx+0x6fe23948]
  4184fb:	jb     0x418489
  4184fd:	push   0xe1b3907a
  418502:	(bad)  
  418503:	ds gs jg 0x41851d
  418507:	sbb    dh,ah
  418509:	push   eax
  41850a:	dec    esi
  41850b:	jae    0x418507
  41850d:	xchg   ebp,eax
  41850e:	add    DWORD PTR [eax+0x3d],edx
  418511:	jnp    0x418578
  418513:	fwait
  418514:	dec    edi
  418515:	out    dx,al
  418516:	(bad)  
  418517:	out    dx,al
  418518:	adc    al,0x95
  41851a:	call   0xec52:0xea6261e2
  418521:	out    dx,al
  418522:	pop    edi
  418523:	cld    
  418524:	aad    0xbd
  418526:	mov    fs,WORD PTR [eax+0x3]
  418529:	or     bh,ch
  41852b:	test   BYTE PTR ss:[eax+0x17],0x8f
  418530:	lahf   
  418531:	aad    0x19
  418533:	vpminsw ymm7,ymm6,YMMWORD PTR [edx]
  418537:	in     al,dx
  418538:	inc    esp
  418539:	or     esi,DWORD PTR [ebx+0x54c945d1]
  41853f:	sbb    al,0x76
  418541:	aam    0x9d
  418543:	in     eax,0x3d
  418545:	mov    dl,0x6b
  418547:	jo     0x41858d
  418549:	fistp  QWORD PTR [edi+0xc7e4614]
  41854f:	xchg   ecx,eax
  418550:	mov    ds:0x839377ef,al
  418555:	cmp    al,0x6
  418557:	loope  0x418502
  418559:	int3   
  41855a:	jle    0x41857c
  41855c:	js     0x418547
  41855e:	sub    al,0xf8
  418560:	outs   dx,BYTE PTR ds:[esi]
  418561:	scas   al,BYTE PTR es:[edi]
  418562:	ret    0x42bb
  418565:	in     al,dx
  418566:	ds das 
  418568:	inc    eax
  418569:	mov    bh,ah
  41856b:	push   es
  41856c:	dec    edx
  41856d:	scas   eax,DWORD PTR es:[edi]
  41856e:	jg     0x4185cf
  418570:	cmp    dl,BYTE PTR [esi]
  418572:	mov    cl,0x4d
  418574:	pop    esi
  418575:	sbb    eax,0x1c76f623
  41857a:	push   0x70
  41857c:	dec    edx
  41857d:	push   es
  41857e:	popf   
  41857f:	cmc    
  418580:	test   eax,0xa0307d
  418585:	(bad)  
  418586:	cli    
  418587:	lahf   
  418588:	and    DWORD PTR [ebp+ebp*1-0x6a],eax
  41858c:	cmp    edi,eax
  41858e:	stos   BYTE PTR es:[edi],al
  41858f:	clc    
  418590:	lock mov cl,BYTE PTR [esi+0x79]
  418594:	xor    eax,0xb999ba96
  418599:	pop    esi
  41859a:	retf   0x5c7b
  41859d:	inc    edx
  41859e:	mul    DWORD PTR [edi-0x2a28df95]
  4185a4:	mov    ch,0x45
  4185a6:	mov    dl,0xc2
  4185a9:	xor    eax,0xfdee4a4d
  4185ae:	aad    0x40
  4185b0:	xchg   DWORD PTR [edx+0xa4b009f],esp
  4185b6:	(bad)  
  4185b7:	add    al,0xc8
  4185b9:	jmp    0x4185a7
  4185bb:	dec    edi
  4185bc:	ja     0x41853f
  4185be:	jno    0x41859e
  4185c0:	es push cs
  4185c2:	fs xchg edi,eax
  4185c4:	gs ret 0x4bde
  4185c8:	scas   al,BYTE PTR es:[edi]
  4185c9:	scas   al,BYTE PTR es:[edi]
  4185ca:	out    dx,eax
  4185cb:	test   eax,0x55296191
  4185d0:	(bad)  [ecx-0x74d744b1]
  4185d6:	sti    
  4185d7:	mov    eax,DWORD PTR [edx-0x26]
  4185da:	addr16 dec esi
  4185dc:	stos   DWORD PTR es:[edi],eax
  4185dd:	dec    ebx
  4185de:	out    dx,al
  4185df:	das    
  4185e0:	fbld   TBYTE PTR [esi-0x444022e7]
  4185e6:	mov    eax,0x493dbfec
  4185eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185ec:	jo     0x418662
  4185ee:	dec    ebp
  4185ef:	dec    esp
  4185f0:	dec    DWORD PTR [ebp+0x715a7700]
  4185f6:	mov    al,0x66
  4185f8:	push   0x5790dad6
  4185fd:	add    edi,edi
  4185ff:	pop    ds
  418600:	fidivr DWORD PTR [ebx]
  418602:	or     BYTE PTR [edx+0x5cbafb69],bl
  418608:	out    dx,eax
  418609:	call   0xd8ca:0xe027bd2a
  418610:	popa   
  418611:	or     edx,DWORD PTR [ecx-0x69]
  418614:	push   ds
  418615:	jae    0x418614
  418617:	test   ch,ah
  418619:	sub    eax,DWORD PTR [ebx+0x3f]
  41861c:	and    eax,0xbba4f9e5
  418621:	cld    
  418622:	push   edi
  418623:	mov    eax,ds:0xc38bb651
  418628:	fisubr WORD PTR [ecx-0x393ade6b]
  41862e:	ss jp  0x4185f5
  418631:	xor    al,dh
  418633:	in     al,dx
  418634:	retf   0xae02
  418637:	xchg   ecx,eax
  418638:	jge    0x41869f
  41863a:	in     al,dx
  41863b:	push   esi
  41863c:	(bad)  [ecx-0x41623361]
  418642:	add    edi,DWORD PTR ds:0x225c900a
  418648:	outs   dx,DWORD PTR ds:[esi]
  418649:	imul   ecx,esp,0x7a
  41864c:	iret   
  41864d:	out    dx,eax
  41864e:	bound  edx,QWORD PTR [eax]
  418650:	adc    BYTE PTR [eax-0x6bc8af31],al
  418656:	xchg   esi,eax
  418657:	dec    ecx
  418658:	leave  
  418659:	int3   
  41865a:	dec    ebx
  41865b:	xchg   esi,eax
  41865c:	retf   
  41865d:	call   DWORD PTR [ecx]
  41865f:	aam    0x39
  418661:	push   esp
  418662:	aaa    
  418663:	sbb    dl,0xa9
  418666:	jmp    0xe29f4a66
  41866b:	pushf  
  41866c:	sub    BYTE PTR [ebp+0x37],ah
  41866f:	inc    edx
  418670:	ins    DWORD PTR es:[edi],dx
  418671:	shr    DWORD PTR [ebx],0x7d
  418674:	adc    al,0x71
  418676:	test   al,0xb2
  418678:	aam    0xe6
  41867a:	sahf   
  41867b:	pop    eax
  41867c:	ins    DWORD PTR es:[edi],dx
  41867d:	mov    ch,0x37
  41867f:	icebp  
  418680:	mov    al,0xdc
  418682:	mov    ah,BYTE PTR [edi+0x3b]
  418685:	mov    ds:0x2a95e63a,al
  41868a:	in     eax,dx
  41868b:	fisubr WORD PTR [esi]
  41868d:	inc    DWORD PTR [eax-0x154dbd31]
  418693:	in     al,0x9d
  418695:	mov    al,0x31
  418697:	cmp    al,0x39
  418699:	add    ecx,DWORD PTR [eax]
  41869b:	jb     0x41868b
  41869d:	sub    DWORD PTR [esi+0x2020e21],ebp
  4186a3:	rol    DWORD PTR [ebx],cl
  4186a5:	pop    ecx
  4186a6:	lods   eax,DWORD PTR ds:[esi]
  4186a7:	pusha  
  4186a8:	out    dx,al
  4186a9:	xlat   BYTE PTR ds:[ebx]
  4186aa:	lea    edi,[edx-0x42]
  4186ad:	and    bh,0x0
  4186b0:	sbb    esp,edi
  4186b2:	pop    eax
  4186b3:	cli    
  4186b4:	out    0x7d,eax
  4186b6:	es aaa 
  4186b8:	lds    eax,FWORD PTR [edx-0x1b85c33d]
  4186be:	jg     0x4186b3
  4186c0:	xchg   esp,eax
  4186c1:	shl    dl,1
  4186c3:	jecxz  0x4186fe
  4186c5:	push   cs
  4186c6:	mov    ecx,0x5673996
  4186cb:	es pop esi
  4186cd:	lds    edx,FWORD PTR [edi+0x55cf6276]
  4186d3:	in     al,dx
  4186d4:	(bad)  
  4186d5:	adc    al,0x73
  4186d7:	lock lods al,BYTE PTR ds:[esi]
  4186d9:	ss jl  0x418694
  4186dc:	xchg   ebx,eax
  4186dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186de:	and    al,0x3b
  4186e0:	xor    eax,0x722f91c
  4186e5:	xchg   edi,eax
  4186e6:	ins    DWORD PTR es:[edi],dx
  4186e7:	mov    esp,0x4d78f5aa
  4186ec:	or     eax,0x7eddc284
  4186f1:	or     ebp,DWORD PTR [esi-0x1e966f24]
  4186f7:	lds    ebx,FWORD PTR [esi]
  4186f9:	ret    0x797
  4186fc:	test   BYTE PTR [esi+0x0],0x57
  418700:	mul    BYTE PTR [eax-0x51888bea]
  418706:	call   0xfe5fb361
  41870b:	xor    eax,0xf5ed0a2c
  418710:	pop    esp
  418711:	out    dx,eax
  418712:	lahf   
  418713:	scas   eax,DWORD PTR es:[edi]
  418714:	mov    ah,0x8b
  418716:	jl     0x4186da
  418718:	shr    DWORD PTR [edx-0x2c863cc9],1
  41871e:	adc    al,0x92
  418720:	push   ss
  418721:	lods   eax,DWORD PTR ds:[esi]
  418722:	(bad)  
  418723:	int3   
  418724:	test   BYTE PTR [ebp-0x2c],0x7d
  418728:	jne    0x418766
  41872a:	mov    DWORD PTR [esi+ebp*8],esi
  41872d:	fsub   QWORD PTR [esi+0x41]
  418730:	imul   edx,DWORD PTR [eax-0x76],0xffffff88
  418734:	push   ebx
  418735:	inc    ecx
  418736:	inc    esi
  418737:	call   0xd92ffca5
  41873c:	ss mov ah,0xf4
  41873f:	jmp    0x418735
  418741:	jbe    0x4186fe
  418743:	mov    ah,0x89
  418745:	test   eax,0x406b43c7
  41874a:	mov    cl,0x39
  41874c:	jge    0x4187c8
  41874e:	mov    edi,0xf4071ae4
  418753:	dec    esi
  418754:	mov    BYTE PTR [ebp+ecx*4-0x6542a681],cl
  41875b:	mov    cl,0xa7
  41875d:	add    eax,DWORD PTR [edi]
  41875f:	leave  
  418760:	(bad)  
  418761:	icebp  
  418762:	fnstcw WORD PTR [eax+0x63]
  418765:	ret    
  418766:	mov    ds:0xb644ab2a,eax
  41876b:	cmp    bh,BYTE PTR [ebx]
  41876d:	push   ebp
  41876e:	jmp    0xc9ec:0x350edb48
  418775:	jo     0x418711
  418777:	push   0x35a36ea1
  41877c:	mov    bh,0x1e
  41877e:	and    eax,0xf79b852
  418783:	dec    ebp
  418784:	fsub   QWORD PTR [esi+esi*4+0x62b76464]
  41878b:	pop    ss
  41878c:	(bad)  
  41878d:	dec    edi
  41878e:	push   cs
  41878f:	jnp    0x4187b9
  418791:	inc    edx
  418792:	ror    DWORD PTR [ebp+0x68],1
  418795:	add    BYTE PTR [esi],dh
  418797:	fistp  WORD PTR [edx-0x5053176]
  41879d:	adc    edi,ebp
  41879f:	pop    ebp
  4187a0:	mov    edi,0xedbd9c1a
  4187a5:	or     esi,DWORD PTR [edi+ebp*2]
  4187a8:	add    dl,0xfb
  4187ab:	mov    esi,0x4e4ba640
  4187b0:	push   0x57f1275f
  4187b5:	icebp  
  4187b6:	xrelease xchg DWORD PTR [esi],ebp
  4187b9:	outs   dx,DWORD PTR ds:[esi]
  4187ba:	leave  
  4187bb:	test   ch,dl
  4187bd:	int3   
  4187be:	mov    ds:0x605ec4cf,al
  4187c3:	mov    cl,0xe8
  4187c5:	inc    ecx
  4187c6:	push   0xa3fc2006
  4187cb:	in     eax,0x70
  4187cd:	inc    ebp
  4187ce:	gs jl  0x418802
  4187d1:	fcom   st(4)
  4187d3:	mov    esi,0x6a36cba7
  4187d8:	mov    edi,0xb93ec540
  4187dd:	add    ah,BYTE PTR [ebx]
  4187df:	adc    al,0x24
  4187e1:	inc    eax
  4187e2:	arpl   bx,cx
  4187e4:	mov    ebp,0x7c7ad0bf
  4187e9:	loope  0x41876b
  4187eb:	xchg   DWORD PTR [edx+0x771e2c12],ecx
  4187f1:	mov    ch,0x7d
  4187f3:	mov    edi,0x28af8cb4
  4187f8:	push   ecx
  4187f9:	(bad)  
  4187fa:	xlat   BYTE PTR ds:[ebx]
  4187fb:	inc    esi
  4187fc:	inc    eax
  4187fd:	push   0x57
  4187ff:	pop    ebp
  418800:	ins    DWORD PTR es:[edi],dx
  418801:	adc    bl,BYTE PTR [edx+esi*1]
  418804:	push   edx
  418805:	pop    esp
  418806:	rol    DWORD PTR [ebp+0x6eb7a8aa],0xc4
  41880d:	dec    esp
  41880e:	mov    cs,WORD PTR [ecx+edx*1+0x3ca5c3db]
  418815:	sbb    bh,BYTE PTR [edx]
  418817:	jae    0x418834
  418819:	shl    DWORD PTR [esi+0x2d3dd8b4],1
  41881f:	adc    BYTE PTR [edx+0x7ddadf3e],bl
  418825:	and    BYTE PTR [edi+0x4a97c588],ah
  41882b:	mov    ch,0xf5
  41882d:	je     0x4187bd
  41882f:	sbb    al,0x1e
  418831:	out    dx,eax
  418832:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418833:	mov    esp,0x2b8db677
  418838:	out    dx,al
  418839:	test   eax,0x7b3103b9
  41883e:	lea    esi,[edi+0x4a]
  418841:	(bad)  
  418842:	jns    0x41886e
  418844:	add    ebp,DWORD PTR [edx]
  418846:	mov    eax,DWORD PTR [edx]
  418848:	jno    0x418806
  41884a:	inc    eax
  41884b:	aaa    
  41884c:	jecxz  0x418865
  41884e:	mov    ds:0x30ad654c,al
  418853:	add    DWORD PTR [eax],0xdce7ed3e
  418859:	mov    al,ds:0x6b5892d6
  41885e:	cmp    eax,0x7d432857
  418863:	and    BYTE PTR [ecx+esi*1],dl
  418866:	xor    eax,0xd1b7ae08
  41886b:	add    BYTE PTR [ebp+0x1],cl
  41886e:	xor    DWORD PTR [edi],esp
  418870:	and    BYTE PTR [ecx],dl
  418872:	cwde   
  418873:	sti    
  418874:	shl    edi,1
  418876:	leave  
  418877:	push   es
  418878:	inc    esp
  418879:	push   ebx
  41887a:	das    
  41887b:	xor    al,0x3b
  41887d:	les    edi,FWORD PTR [edi]
  41887f:	imul   esi,DWORD PTR [ebx],0xffffffea
  418882:	inc    ebx
  418883:	jno    0x418897
  418885:	xchg   edi,eax
  418886:	lock and bl,dh
  418889:	test   BYTE PTR [edx-0x4a],al
  41888c:	cmp    edi,edi
  41888e:	mov    dh,0x89
  418890:	js     0x418839
  418892:	and    eax,0xb533f169
  418897:	sbb    ebx,DWORD PTR [ebp+0x5de04c59]
  41889d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41889e:	mov    dl,0xca
  4188a0:	mov    ebp,0xa421de53
  4188a5:	fst    QWORD PTR [ebx+0x14e43c90]
  4188ab:	push   ecx
  4188ac:	push   edx
  4188ad:	aaa    
  4188ae:	xchg   ebp,eax
  4188af:	jl     0x4188bb
  4188b1:	dec    esi
  4188b2:	out    dx,eax
  4188b3:	sub    eax,0x29273605
  4188b8:	stc    
  4188b9:	mov    al,ds:0xf1e7b69e
  4188be:	sbb    bh,dh
  4188c0:	jp     0x418927
  4188c2:	cli    
  4188c3:	aad    0x19
  4188c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188c6:	cli    
  4188c7:	inc    ecx
  4188c8:	ret    0x243c
  4188cb:	mov    esi,0xf100b430
  4188d0:	xchg   edi,eax
  4188d1:	mov    eax,0xbaae89df
  4188d6:	or     bl,BYTE PTR [ecx+0x1f]
  4188d9:	mov    eax,ds:0xbf8160a
  4188de:	ret    0xc168
  4188e1:	add    bh,BYTE PTR [esi-0x12bd660]
  4188e7:	dec    edx
  4188e8:	sbb    DWORD PTR [edi-0x734dea61],edx
  4188ee:	cdq    
  4188ef:	and    al,0x7e
  4188f1:	mov    ah,BYTE PTR [edx]
  4188f3:	leave  
  4188f4:	push   esp
  4188f5:	imul   eax,DWORD PTR ds:0xd5274804,0xbe77185e
  4188ff:	inc    ebp
  418900:	retf   
  418901:	jl     0x4188bf
  418903:	push   esp
  418904:	mov    edx,DWORD PTR [ecx+0x40f0fd12]
  41890a:	mov    cl,0x68
  41890c:	cld    
  41890d:	pop    esi
  41890e:	mov    bl,0xcc
  418910:	mov    ebp,DWORD PTR cs:[edx+0x5c]
  418914:	in     al,dx
  418915:	jne    0x418899
  418917:	adc    ecx,DWORD PTR [ecx+0x4643c357]
  41891d:	pop    edx
  41891e:	les    edi,FWORD PTR [edx+0x23]
  418921:	daa    
  418922:	daa    
  418923:	mov    ebx,0x140640a0
  418928:	out    dx,al
  418929:	pop    edx
  41892a:	sub    edi,DWORD PTR [edi]
  41892c:	mov    ds:0x5d3a93fb,al
  418931:	gs add al,0xa3
  418934:	pusha  
  418935:	test   DWORD PTR [esi+0x36],edi
  418938:	inc    ebp
  418939:	out    dx,al
  41893a:	adc    DWORD PTR ds:0x491fbc0,eax
  418940:	adc    BYTE PTR [ecx],ah
  418942:	or     ch,dl
  418944:	and    eax,0xa4837658
  418949:	lds    esi,FWORD PTR [edx-0x70d169d5]
  41894f:	(bad)  
  418950:	jmp    0x4189c0
  418952:	sub    ecx,DWORD PTR [edx-0x7ebb18a0]
  418958:	sahf   
  418959:	push   esp
  41895a:	shr    DWORD PTR [esi],cl
  41895c:	xchg   BYTE PTR [esi-0xd],dh
  41895f:	inc    ebp
  418960:	mov    al,0x12
  418962:	pop    ds
  418963:	sahf   
  418964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418965:	jge    0x418969
  418967:	and    BYTE PTR [eax-0x3],dh
  41896a:	adc    BYTE PTR [ebx-0x11],ah
  41896d:	mov    ecx,0x255b8ae5
  418972:	(bad)  
  418974:	sub    eax,0x7b32317c
  418979:	mov    ch,0xb2
  41897b:	mov    eax,0xee310e45
  418980:	cs sub eax,0x1bec299f
  418986:	push   cs
  418987:	jo     0x4189fa
  418989:	(bad)  
  41898a:	pushf  
  41898b:	stos   DWORD PTR es:[edi],eax
  41898c:	inc    ebp
  41898d:	loop   0x418924
  41898f:	mov    eax,ds:0x2b54cefb
  418994:	sbb    eax,0xedcde877
  418999:	addr16 xchg bh,dl
  41899c:	out    dx,al
  41899d:	rcl    BYTE PTR [edi-0x54fee7b9],cl
  4189a3:	in     eax,0xf3
  4189a5:	loop   0x418a12
  4189a7:	lock pop esi
  4189a9:	test   DWORD PTR [edi-0x74ce84c9],0x1d821b51
  4189b3:	xor    bl,BYTE PTR [esi-0x37]
  4189b6:	adc    DWORD PTR [ebx-0x5d],ebp
  4189b9:	in     al,0x6
  4189bb:	aam    0x1
  4189bd:	retf   
  4189be:	repz xor dl,BYTE PTR [edi]
  4189c1:	push   0x4fc6ff96
  4189c6:	jg     0x418998
  4189c8:	aas    
  4189c9:	and    bl,BYTE PTR [ebx-0x29]
  4189cc:	mov    ebp,gs
  4189ce:	out    dx,eax
  4189cf:	and    BYTE PTR [edi-0x3d],bh
  4189d2:	repz push edi
  4189d4:	sub    eax,0x36bc204f
  4189d9:	daa    
  4189da:	xor    al,0xda
  4189dc:	loopne 0x41896b
  4189de:	shl    DWORD PTR ds:0xef89627,0xee
  4189e5:	rol    BYTE PTR [edi-0x63f5b1af],1
  4189eb:	add    edx,ebp
  4189ed:	jmp    0x882707c0
  4189f2:	imul   eax,edi,0xab0a37fe
  4189f8:	mov    ah,0x3c
  4189fa:	dec    esi
  4189fb:	mov    esi,0xad39688b
  418a00:	imul   edi,DWORD PTR [eax-0x5a],0xfe56470e
  418a07:	repnz xor DWORD PTR [ebp+0x3027032c],ecx
  418a0e:	cmp    dh,BYTE PTR ds:0x443bc9bd
  418a14:	inc    eax
  418a15:	scas   eax,DWORD PTR es:[edi]
  418a16:	or     al,0x1
  418a18:	in     eax,0x9b
  418a1a:	adc    al,BYTE PTR [ecx]
  418a1c:	mov    al,ds:0x8b8081e1
  418a21:	mov    esi,DWORD PTR [ebx]
  418a23:	xor    DWORD PTR [edx],0xf360aa7c
  418a29:	xchg   ebp,eax
  418a2a:	mov    DWORD PTR [ebp+0x2e],ecx
  418a2d:	mov    ebp,0xb01c7c27
  418a32:	xor    eax,0xad68ccd9
  418a37:	loop   0x418a1e
  418a39:	mov    eax,0x1fcd835c
  418a3e:	cmc    
  418a3f:	fwait
  418a40:	and    eax,0x62f9c625
  418a45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a46:	dec    esp
  418a47:	ins    DWORD PTR es:[edi],dx
  418a48:	leave  
  418a49:	and    DWORD PTR [ecx-0x3d],ebp
  418a4c:	rcr    DWORD PTR [edi],cl
  418a4e:	jl     0x418a61
  418a50:	lock neg bh
  418a53:	cmp    dl,BYTE PTR [esp+edi*8-0x3e76d2ce]
  418a5a:	pop    eax
  418a5b:	in     al,0xcd
  418a5d:	bound  ebx,QWORD PTR [ecx]
  418a5f:	test   eax,0xa8195241
  418a64:	inc    edx
  418a65:	div    DWORD PTR [eax+0x2f]
  418a68:	psadbw mm1,QWORD PTR [edi+0x5f]
  418a6c:	in     eax,dx
  418a6d:	sti    
  418a6e:	jnp    0x418a6e
  418a70:	(bad)  
  418a71:	push   ss
  418a72:	sbb    BYTE PTR [ebx+esi*2+0xf3b5fe9],al
  418a79:	shr    DWORD PTR [edi+esi*4-0x310d21dd],1
  418a80:	sbb    dl,bh
  418a82:	lock mov ecx,0x871d1897
  418a88:	xchg   esp,eax
  418a89:	in     al,dx
  418a8a:	mov    ah,0x57
  418a8c:	dec    ebp
  418a8d:	sub    BYTE PTR [eax],bl
  418a8f:	cmp    al,0x6e
  418a91:	jmp    0x418a1f
  418a93:	mov    ?,WORD PTR [eax+0x56]
  418a96:	out    0x97,eax
  418a98:	jg     0x418a2b
  418a9a:	push   ebx
  418a9b:	sbb    esi,esi
  418a9d:	inc    esi
  418a9e:	cs add bl,cl
  418aa1:	jle    0x418a52
  418aa3:	shr    ebp,0xd8
  418aa6:	xchg   DWORD PTR [eax+0x364763ef],ebp
  418aac:	mov    al,0x88
  418aae:	sti    
  418aaf:	mov    ebx,0x6312efde
  418ab4:	cld    
  418ab5:	cmp    edx,DWORD PTR [esi+0xe]
  418ab8:	xchg   edi,eax
  418ab9:	in     al,dx
  418aba:	add    eax,DWORD PTR [ebp+0x2fc69757]
  418ac0:	mov    ah,0xf6
  418ac2:	aaa    
  418ac3:	mov    al,ds:0x90d0b23a
  418ac8:	mov    ecx,gs
  418aca:	jl     0x418a62
  418acc:	sbb    ebx,esi
  418ace:	dec    edi
  418acf:	push   eax
  418ad0:	add    al,0xb3
  418ad2:	push   edi
  418ad3:	stos   DWORD PTR es:[edi],eax
  418ad4:	cs test dh,dl
  418ad7:	je     0x418b4b
  418ad9:	jnp    0x418ac2
  418adb:	mov    DWORD PTR [eax+0x10a63440],ecx
  418ae1:	and    BYTE PTR [ebx+0x1b],0x6c
  418ae5:	mov    DWORD PTR [ecx+0x4d],edx
  418ae8:	adc    ah,BYTE PTR [edx]
  418aea:	pop    esi
  418aeb:	push   eax
  418aec:	fdivr  DWORD PTR [edx+edi*1+0xb]
  418af0:	mov    cl,0x7d
  418af2:	or     ah,bl
  418af4:	mov    edx,0x17532b62
  418af9:	sub    al,0xfa
  418afb:	fldl2e 
  418afd:	sbb    al,BYTE PTR [ebx-0x4a]
  418b00:	into   
  418b01:	mov    ebp,DWORD PTR [edi+0x3d]
  418b04:	mov    bl,0x54
  418b06:	dec    ebp
  418b07:	int    0xa3
  418b09:	xchg   esp,eax
  418b0a:	dec    ebp
  418b0b:	div    al
  418b0d:	jb     0x418b25
  418b0f:	stos   BYTE PTR es:[edi],al
  418b10:	jmp    0x1e29baad
  418b15:	pop    ecx
  418b16:	add    edi,ebx
  418b18:	mov    esp,DWORD PTR [edi]
  418b1a:	std    
  418b1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b1c:	retf   0xce74
  418b1f:	dec    ecx
  418b20:	aam    0xda
  418b22:	ret    0x1a5d
  418b25:	enter  0xfc1a,0xb6
  418b29:	in     eax,0xe6
  418b2b:	pop    eax
  418b2c:	ror    dh,cl
  418b2e:	xor    DWORD PTR [ecx],edi
  418b30:	sbb    cl,0x18
  418b33:	mov    eax,0x4ba1b52a
  418b38:	ja     0x418abb
  418b3a:	and    ch,BYTE PTR [ebp-0x706ee2aa]
  418b40:	mov    eax,DWORD PTR [edi+0x2e0332f]
  418b46:	mov    DWORD PTR [ecx+eax*4+0x732f597b],0xe4ab15f6
  418b51:	les    edi,FWORD PTR [edi]
  418b53:	xor    al,0xde
  418b55:	aad    0x84
  418b57:	scas   eax,DWORD PTR es:[edi]
  418b58:	mov    BYTE PTR [eax-0x1c],dl
  418b5b:	mov    DWORD PTR [esi+ebx*2+0x7939d845],ebp
  418b62:	pop    eax
  418b63:	and    BYTE PTR [ecx-0x2c48b68f],bh
  418b69:	dec    edx
  418b6a:	cmp    esp,DWORD PTR [edi+0x7a39b8e1]
  418b70:	adc    al,0x8d
  418b72:	scas   eax,DWORD PTR es:[edi]
  418b73:	adc    DWORD PTR [ecx-0x418bcdf7],esp
  418b79:	subps  xmm4,XMMWORD PTR [edi+0x49]
  418b7d:	mov    ds:0xf3dabb1a,eax
  418b82:	fiadd  WORD PTR [ecx-0x1461c8dd]
  418b88:	nop    esp
  418b8b:	imul   esp,DWORD PTR [ecx+0x43d570e0],0xe31bf22f
  418b95:	into   
  418b96:	pushf  
  418b97:	js     0x418bb7
  418b99:	inc    eax
  418b9a:	and    bh,BYTE PTR [ecx]
  418b9c:	pop    es
  418b9d:	cdq    
  418b9e:	call   0x739a2258
  418ba3:	bnd jb 0x418b74
  418ba6:	sbb    eax,0xbe902864
  418bab:	repnz xchg ecx,eax
  418bad:	sbb    al,0xa7
  418baf:	data16 icebp 
  418bb1:	jmp    0x99bd792d
  418bb6:	jmp    0x8ec0:0x7fe1ceee
  418bbd:	arpl   WORD PTR [eax],sp
  418bbf:	out    0x5c,eax
  418bc1:	call   FWORD PTR [esi+edx*8-0x6b]
  418bc5:	jno    0x418b83
  418bc7:	or     esi,DWORD PTR [ecx+0x4e518378]
  418bcd:	(bad)  
  418bce:	dec    ebx
  418bcf:	shl    BYTE PTR [eax+0x56bd778d],cl
  418bd5:	aas    
  418bd6:	loop   0x418b70
  418bd8:	inc    ebp
  418bd9:	retf   
  418bda:	sub    ecx,DWORD PTR [ecx+0x5b6cd90]
  418be0:	fistp  WORD PTR [ebx+0x2f25a130]
  418be6:	stc    
  418be7:	pop    ebx
  418be8:	loop   0x418bd3
  418bea:	iret   
  418beb:	(bad)  
  418bec:	lods   eax,DWORD PTR ds:[esi]
  418bed:	and    ch,BYTE PTR [ecx+edi*4]
  418bf0:	add    BYTE PTR [eax],0x90
  418bf3:	imul   esi,DWORD PTR ds:0xb05defcd,0xffffffad
  418bfa:	daa    
  418bfb:	fldcw  WORD PTR [edi-0xd]
  418bfe:	ret    0x3111
  418c01:	outs   dx,BYTE PTR ds:[esi]
  418c02:	push   ebp
  418c03:	jg     0x418c38
  418c05:	int    0xb1
  418c07:	xor    DWORD PTR [ecx],ebp
  418c09:	shr    DWORD PTR [eax],1
  418c0b:	adc    eax,0xfaebb597
  418c10:	into   
  418c11:	mov    eax,DWORD PTR [ecx-0x7b]
  418c14:	pop    ss
  418c15:	xor    DWORD PTR [ecx+ebx*8-0x49],ebp
  418c19:	inc    eax
  418c1a:	cld    
  418c1b:	and    ebx,DWORD PTR [eax+0x71]
  418c1e:	sbb    al,0xd9
  418c20:	mov    dl,bl
  418c22:	add    DWORD PTR [eax+0x7b3e8581],ebx
  418c28:	pop    edx
  418c29:	scas   eax,DWORD PTR es:[edi]
  418c2a:	loope  0x418c5a
  418c2c:	sub    al,0x48
  418c2e:	sbb    eax,0xe0a0f9d6
  418c33:	sbb    edi,ebx
  418c35:	inc    esp
  418c36:	cmp    cl,BYTE PTR [esi]
  418c38:	stc    
  418c39:	push   0xd921580d
  418c3e:	jo     0x418c51
  418c40:	pop    edx
  418c41:	pushf  
  418c42:	loopne 0x418c97
  418c44:	dec    eax
  418c45:	and    eax,0x83254d43
  418c4a:	pop    esp
  418c4b:	outs   dx,BYTE PTR ds:[esi]
  418c4c:	mov    ecx,0x828cbc9b
  418c51:	aaa    
  418c52:	mov    bh,0x3
  418c54:	je     0x418c41
  418c56:	leave  
  418c57:	pop    esp
  418c58:	xor    eax,0xd49068bf
  418c5d:	test   eax,0x18d39195
  418c62:	push   edi
  418c63:	pop    esp
  418c64:	ds js  0x418cae
  418c67:	ror    esp,cl
  418c69:	xor    DWORD PTR [edi],ebp
  418c6b:	sub    DWORD PTR ds:0x24775e13,edi
  418c71:	jge    0x418c49
  418c73:	push   ebp
  418c74:	adc    dh,dh
  418c76:	sub    ch,BYTE PTR [ebx]
  418c78:	mov    bh,ah
  418c7a:	mov    edx,0x693c73a9
  418c7f:	add    eax,0xc5a6d58e
  418c84:	xlat   BYTE PTR ds:[ebx]
  418c85:	add    ebx,DWORD PTR [ecx-0x3b]
  418c88:	pusha  
  418c89:	xor    al,0x63
  418c8b:	outs   dx,BYTE PTR ds:[esi]
  418c8c:	add    ch,bl
  418c8e:	xor    al,ch
  418c90:	sbb    BYTE PTR [edx+edx*2-0x74308612],0xd7
  418c98:	xchg   edx,eax
  418c99:	inc    ebx
  418c9a:	cld    
  418c9b:	test   bh,cl
  418c9d:	ja     0x418d08
  418c9f:	retf   0x2117
  418ca2:	or     eax,0x874ef6cc
  418ca7:	jle    0x418d20
  418ca9:	adc    ebp,DWORD PTR [edi]
  418cab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cac:	cld    
  418cad:	or     dh,BYTE PTR [edi+0x45]
  418cb0:	sti    
  418cb1:	pop    es
  418cb2:	mov    eax,DWORD PTR [ebp+eiz*8-0x77272671]
  418cb9:	jmp    DWORD PTR [eax+0x39]
  418cbc:	call   0xe3bc:0xd253153f
  418cc3:	dec    ebp
  418cc4:	xor    BYTE PTR [edx],cl
  418cc6:	repz xor eax,0x8b6ddf83
  418ccc:	and    eax,0xc3ae24dc
  418cd1:	adc    DWORD PTR [edx-0x5ee6ea11],esp
  418cd7:	loop   0x418ce4
  418cd9:	loopne 0x418cc4
  418cdb:	or     esi,ebx
  418cdd:	outs   dx,BYTE PTR ds:[esi]
  418cde:	jl     0x418cf8
  418ce0:	add    al,0xdf
  418ce2:	or     BYTE PTR [ecx],bl
  418ce4:	jo     0x418cf9
  418ce6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ce7:	sbb    DWORD PTR [ebp+0x63e7c96d],0xd4c37b28
  418cf1:	pusha  
  418cf2:	cdq    
  418cf3:	xchg   edi,eax
  418cf4:	dec    ecx
  418cf5:	or     ch,BYTE PTR [ebx-0x4d8fc94c]
  418cfb:	not    DWORD PTR [eax-0x2765857c]
  418d01:	mov    bl,0xd8
  418d03:	ds enter 0xdfcb,0x52
  418d08:	inc    eax
  418d09:	cmp    al,0x41
  418d0b:	adc    al,ch
  418d0d:	sbb    DWORD PTR [eax-0x4ac52c3b],esp
  418d13:	nop
  418d14:	push   cs
  418d15:	mov    edx,0x9f7bb36f
  418d1a:	pop    DWORD PTR [edi-0x5084cc32]
  418d20:	dec    eax
  418d21:	mov    edx,0xad68c7dc
  418d26:	retf   0xe38b
  418d29:	pop    ss
  418d2a:	(bad)  
  418d2c:	push   ecx
  418d2d:	jnp    0x418d4e
  418d2f:	cld    
  418d30:	or     eax,0x5882be91
  418d35:	sub    bl,BYTE PTR [eax-0x60]
  418d38:	bnd jno 0x418d5c
  418d3b:	inc    ebp
  418d3c:	test   BYTE PTR [esp+esi*4],al
  418d3f:	jmp    0x418dab
  418d41:	les    edi,FWORD PTR [esi+ecx*2+0x43]
  418d45:	clc    
  418d46:	pop    edi
  418d47:	jmp    0x418d43
  418d49:	fidiv  DWORD PTR [edi+ebx*2]
  418d4c:	xor    al,0x48
  418d4e:	mov    fs,WORD PTR [edi]
  418d50:	dec    edi
  418d51:	add    esp,edi
  418d53:	call   0x313739dd
  418d58:	fstp   TBYTE PTR [ebx-0x72a01d15]
  418d5e:	in     al,dx
  418d5f:	cwde   
  418d60:	cdq    
  418d61:	jmp    FWORD PTR [edx+0x18e82266]
  418d67:	cmp    eax,DWORD PTR [edx-0x23ab0630]
  418d6d:	daa    
  418d6e:	fucomi st,st(7)
  418d70:	mov    DWORD PTR [ebx],ebx
  418d72:	mov    dl,0x64
  418d74:	xchg   edi,eax
  418d75:	pop    ebp
  418d76:	pusha  
  418d77:	jnp    0x418d61
  418d79:	jae    0x418d28
  418d7b:	dec    esp
  418d7c:	or     ch,cl
  418d7e:	inc    esp
  418d7f:	push   cs
  418d80:	mov    ss,WORD PTR [eax]
  418d82:	fadd   DWORD PTR [edi+0x79fc7b62]
  418d88:	(bad)  
  418d89:	repnz mov DWORD PTR [esi-0x68fe9e9d],esi
  418d90:	pop    ds
  418d91:	or     DWORD PTR ds:0x79577236,0x3a
  418d98:	(bad)  
  418d9a:	mov    al,ds:0x16d16ba1
  418d9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418da0:	loop   0x418dbc
  418da2:	(bad)  
  418da3:	fisub  WORD PTR [edx-0x33]
  418da6:	inc    edx
  418da7:	inc    ecx
  418da8:	push   edx
  418da9:	push   eax
  418daa:	ss push esi
  418dac:	(bad)  
  418dad:	sbb    BYTE PTR [edi],bh
  418daf:	and    bl,0xda
  418db2:	ins    BYTE PTR es:[edi],dx
  418db3:	cmp    al,BYTE PTR [ecx+eiz*1]
  418db6:	jg     0x418e05
  418db8:	jbe    0x418d98
  418dba:	xchg   edx,eax
  418dbb:	fmul   QWORD PTR [edx+0x45]
  418dbe:	pop    eax
  418dbf:	ret    
  418dc0:	xchg   bl,bh
  418dc2:	pop    esp
  418dc3:	push   edi
  418dc4:	std    
  418dc5:	pop    esi
  418dc6:	and    eax,0x90cade97
  418dcb:	out    dx,al
  418dcc:	sub    BYTE PTR [ebp-0x1c],dl
  418dcf:	scas   eax,DWORD PTR es:[edi]
  418dd0:	mov    WORD PTR [esi],?
  418dd2:	not    BYTE PTR [ecx+0x62]
  418dd5:	sbb    BYTE PTR [edx+ecx*8-0xadcd672],ch
  418ddc:	fsubrp st(2),st
  418dde:	popa   
  418ddf:	cwde   
  418de0:	ret    0xc022
  418de3:	or     al,0xa1
  418de5:	icebp  
  418de6:	aas    
  418de7:	repnz fwait
  418de9:	mov    ebx,0xbf9a42ba
  418dee:	jno    0x418de4
  418df0:	push   edi
  418df1:	mov    eax,0x15f6de94
  418df6:	adc    dl,ah
  418df8:	mov    ds:0x64c557ab,eax
  418dfd:	jae    0x418e1f
  418dff:	stos   BYTE PTR es:[edi],al
  418e00:	inc    ebx
  418e01:	imul   ebx,DWORD PTR [ecx+0x45],0x4c
  418e05:	dec    eax
  418e06:	mov    al,ds:0x8223bcf7
  418e0b:	dec    edx
  418e0c:	das    
  418e0d:	psubsb mm6,QWORD PTR [ebp+edx*1-0x30]
  418e12:	pushf  
  418e13:	imul   ecx,DWORD PTR [ebx+0x940d9ce],0xfffffff2
  418e1a:	mov    esi,0x4ac98ff9
  418e1f:	lods   al,BYTE PTR ds:[esi]
  418e20:	cmc    
  418e21:	adc    eax,0x18f5d31e
  418e26:	mov    esi,DWORD PTR [esi-0x1a]
  418e29:	jp     0x418e09
  418e2b:	enter  0x188a,0x70
  418e2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e30:	gs push ss
  418e32:	push   esp
  418e33:	and    ch,al
  418e35:	inc    eax
  418e36:	popa   
  418e37:	pushf  
  418e38:	and    al,0x19
  418e3a:	dec    ebx
  418e3b:	dec    eax
  418e3c:	fcmovnbe st,st(5)
  418e3e:	js     0x418dcb
  418e40:	gs mov ebx,0xe55803c0
  418e46:	lods   al,BYTE PTR ds:[esi]
  418e47:	mov    bh,BYTE PTR [ebp+eax*1+0x4c175ed7]
  418e4e:	cwde   
  418e4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e50:	xchg   edi,eax
  418e51:	pop    ecx
  418e52:	in     eax,0x99
  418e54:	outs   dx,DWORD PTR ds:[esi]
  418e55:	pop    ds
  418e56:	rcl    BYTE PTR [esp+eax*2-0x1840883b],cl
  418e5d:	vpcmpgtw ymm6,ymm4,YMMWORD PTR [edi-0x14]
  418e62:	(bad)  
  418e63:	push   ds
  418e64:	jno    0x418e57
  418e66:	adc    DWORD PTR [ebp-0x21172cb1],edx
  418e6c:	frstor [ebx+0x2e]
  418e6f:	scas   eax,DWORD PTR es:[edi]
  418e70:	or     BYTE PTR [eax],ah
  418e72:	(bad)  
  418e73:	(bad)  
  418e74:	jge    0x418e0a
  418e76:	add    ebx,DWORD PTR [edx]
  418e78:	and    al,0x69
  418e7a:	adc    ebx,DWORD PTR gs:[esi+0x77]
  418e7e:	cs dec esi
  418e80:	sub    DWORD PTR [eax+0x41],ebx
  418e83:	pop    es
  418e84:	out    0x56,al
  418e86:	push   0xffffffc8
  418e88:	imul   ebp,ebp,0x64ff94dc
  418e8e:	and    eax,0xa17d8a3d
  418e93:	rol    DWORD PTR [di+0x3ed4],1
  418e98:	add    ecx,esp
  418e9a:	mov    ds:0x476dd6ce,eax
  418e9f:	shl    DWORD PTR [edi+eiz*1-0x4b],cl
  418ea3:	adc    BYTE PTR [ecx-0x47],dh
  418ea6:	jno    0x418e85
  418ea8:	mov    ds:0x8eddf9c2,eax
  418ead:	jmp    0xe393:0x78f6086d
  418eb4:	push   esp
  418eb5:	cmp    eax,0x2ef42673
  418eba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ebb:	and    eax,0xe8bd0c45
  418ec0:	not    BYTE PTR [esi+0x294d025e]
  418ec6:	fld    QWORD PTR [esi+ebx*4+0x118cfda8]
  418ecd:	and    DWORD PTR [esi],ebp
  418ecf:	add    BYTE PTR [edi-0x79],al
  418ed2:	pop    edi
  418ed3:	cmc    
  418ed4:	es out dx,al
  418ed6:	dec    esp
  418ed7:	dec    edx
  418ed8:	mov    ch,0xd7
  418eda:	pop    edx
  418edb:	mov    ah,0xc0
  418edd:	(bad)  [edx-0x3b061484]
  418ee3:	loope  0x418ebb
  418ee5:	mov    al,ds:0xff0da33a
  418eea:	mov    ds:0x4312fb04,eax
  418ef0:	mov    ah,0x62
  418ef2:	push   ds
  418ef3:	mov    sp,0x2aaa
  418ef7:	retf   
  418ef8:	dec    esi
  418ef9:	pop    edx
  418efa:	pop    ss
  418efb:	in     eax,0xab
  418efd:	retf   0x3f2
  418f00:	sbb    BYTE PTR [esi],dh
  418f02:	(bad)  
  418f03:	retf   0x4e9e
  418f06:	mov    esi,DWORD PTR [ecx-0x60]
  418f09:	jo     0x418f02
  418f0b:	jns    0x418f07
  418f0d:	fcmove st,st(7)
  418f0f:	xchg   ebp,eax
  418f10:	test   BYTE PTR [edi+0x5e7a4f8b],ch
  418f16:	xchg   ah,dh
  418f18:	mov    eax,DWORD PTR [esi+0x24]
  418f1b:	jge    0x418f63
  418f1d:	jp     0x418eb8
  418f1f:	fild   DWORD PTR [edx-0x3c]
  418f22:	jne    0x418ed9
  418f24:	dec    edx
  418f25:	mov    WORD PTR [edi],?
  418f27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f28:	dec    esi
  418f29:	loopne 0x418f53
  418f2b:	cmp    dl,al
  418f2d:	or     DWORD PTR [eax+0x4e],0x7
  418f31:	out    0xd7,eax
  418f33:	pushf  
  418f34:	rol    BYTE PTR [esi+esi*4],0x5e
  418f38:	sbb    eax,0x985c4afb
  418f3d:	js     0x418f15
  418f3f:	outs   dx,DWORD PTR ds:[esi]
  418f40:	fild   DWORD PTR [eax-0x21996c81]
  418f46:	push   eax
  418f47:	fdiv   st,st(4)
  418f49:	jge    0x418f66
  418f4b:	mov    ds:0x6fe73039,al
  418f50:	xchg   ebx,eax
  418f51:	(bad)  
  418f52:	mov    esi,0x8d9de394
  418f57:	fwait
  418f58:	aas    
  418f59:	jl     0x418f24
  418f5b:	sub    al,0x4d
  418f5d:	fwait
  418f5e:	mov    ds:0x182976c,al
  418f63:	mov    dh,0xf1
  418f65:	sub    al,0xfa
  418f67:	rcr    bh,1
  418f69:	xor    BYTE PTR [ebp+0x7821f473],dh
  418f6f:	add    dl,bl
  418f71:	or     eax,0x35454a35
  418f76:	mov    esi,0xc301ff1b
  418f7b:	addr16 dec ebx
  418f7d:	call   0x6238:0x9d9fe29a
  418f84:	arpl   di,si
  418f86:	(bad)  
  418f87:	aad    0x4a
  418f89:	or     ah,0xe0
  418f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f8d:	lea    esi,[ebp-0x219afd2f]
  418f93:	call   0xbc78:0xe3ebe095
  418f9a:	or     eax,0xacd75d2a
  418f9f:	mov    edx,0x970cba38
  418fa4:	ja     0x418f28
  418fa6:	mov    cl,0x52
  418fa8:	xchg   ecx,eax
  418fa9:	fst    DWORD PTR [ebp-0x3c]
  418fac:	aaa    
  418fad:	je     0x418fee
  418faf:	dec    eax
  418fb0:	xchg   edx,eax
  418fb1:	test   DWORD PTR [ecx],0x25b8e522
  418fb7:	add    DWORD PTR [edx],eax
  418fb9:	sub    BYTE PTR [esi+0x79],bh
  418fbc:	ja     0x418f89
  418fbe:	scas   eax,DWORD PTR es:[edi]
  418fbf:	jmp    0x418ff3
  418fc1:	daa    
  418fc2:	(bad)  
  418fc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fc4:	cdq    
  418fc5:	xchg   ebx,eax
  418fc6:	(bad)  
  418fc7:	mov    cl,0xf5
  418fc9:	sbb    ah,BYTE PTR [ecx]
  418fcb:	test   al,0x35
  418fcd:	ins    DWORD PTR es:[edi],dx
  418fce:	mov    al,ds:0x73d45fab
  418fd3:	in     al,0x26
  418fd5:	les    ecx,FWORD PTR [edi-0x1c8de8af]
  418fdb:	cld    
  418fdc:	jae    0x41905c
  418fde:	ins    DWORD PTR es:[edi],dx
  418fdf:	mov    bh,0x77
  418fe1:	jne    0x418f9e
  418fe3:	fwait
  418fe4:	enter  0x3416,0x1d
  418fe8:	dec    eax
  418fe9:	scas   al,BYTE PTR es:[edi]
  418fea:	and    DWORD PTR [ebx-0x44b968b4],edi
  418ff0:	clc    
  418ff1:	xchg   edx,eax
  418ff2:	(bad)  
  418ff3:	pop    eax
  418ff4:	push   ebp
  418ff6:	rol    DWORD PTR [ecx-0x18f34ae6],1
  418ffc:	out    dx,eax
  418ffd:	ficomp WORD PTR [edx-0x2a]
  419000:	inc    esp
  419001:	xchg   edi,eax
  419002:	push   ebx
  419003:	int    0xf8
  419005:	out    dx,eax
  419006:	or     esp,esp
  419008:	pop    ss
  419009:	(bad)  
  41900a:	imul   ecx,DWORD PTR [eax],0xffffff85
  41900d:	push   eax
  41900e:	dec    ecx
  41900f:	mov    ds:0x911d1a8f,eax
  419014:	or     BYTE PTR [ecx-0x55],0x47
  419018:	xchg   edi,eax
  419019:	sti    
  41901a:	outs   dx,DWORD PTR ds:[esi]
  41901b:	fsub   DWORD PTR [edi]
  41901d:	pop    es
  41901e:	into   
  41901f:	scas   al,BYTE PTR es:[edi]
  419020:	call   0x567813fa
  419025:	aad    0x3b
  419027:	pusha  
  419028:	sahf   
  419029:	cs sbb ebp,0x3bd36011
  419030:	jae    0x41902c
  419032:	cmp    eax,0x6e960273
  419037:	in     eax,0xfd
  419039:	outs   dx,DWORD PTR ds:[esi]
  41903a:	shr    BYTE PTR [esi-0x79df4607],1
  419040:	shl    BYTE PTR [ecx+0xa],cl
  419043:	add    al,0x91
  419045:	or     DWORD PTR ds:[ecx+0x54],edi
  419049:	lods   eax,DWORD PTR ds:[esi]
  41904a:	pop    ds
  41904b:	(bad)  
  41904c:	cmp    DWORD PTR [ecx-0x5c],edx
  41904f:	(bad)  
  419050:	retf   0xa19
  419053:	fnstcw WORD PTR [ebp+0x2fa986a0]
  419059:	call   0x4ce21520
  41905e:	bound  edx,QWORD PTR [edx-0xc12720c]
  419064:	scas   al,BYTE PTR es:[edi]
  419065:	xor    ch,ah
  419067:	shl    DWORD PTR [ebp-0x4d8be423],0x98
  41906e:	cli    
  41906f:	cmp    BYTE PTR [edx+0x13a93cb7],bl
  419075:	and    al,BYTE PTR [ecx]
  419077:	xchg   ecx,eax
  419078:	fstp   TBYTE PTR [edi]
  41907a:	dec    edx
  41907b:	sub    bh,BYTE PTR [esi+0x4b991277]
  419081:	push   ds
  419082:	mov    ?,WORD PTR [edi-0x80]
  419085:	out    dx,al
  419086:	loopne 0x419033
  419088:	nop
  419089:	sbb    esi,DWORD PTR [ebx+0x36]
  41908c:	imul   esp,DWORD PTR [eax-0x31],0xa42ef3d2
  419093:	or     ebp,esp
  419095:	sub    al,0x89
  419097:	xchg   edx,eax
  419098:	cmp    BYTE PTR [eax+ebx*4],dh
  41909b:	xlat   BYTE PTR ds:[ebx]
  41909c:	sub    DWORD PTR [ebx+0x597b8959],0x1c
  4190a3:	nop
  4190a4:	mov    esi,0xa272aba4
  4190a9:	mov    bl,0x64
  4190ab:	popa   
  4190ac:	mov    bl,0x9c
  4190ae:	jbe    0x4190a1
  4190b0:	fbld   TBYTE PTR [edx+0x6431f8fa]
  4190b6:	push   ss
  4190b7:	jg     0x41905f
  4190b9:	test   BYTE PTR [edx],0xf0
  4190bc:	out    0x6e,eax
  4190be:	xchg   ebx,eax
  4190bf:	loopne 0x4190c1
  4190c1:	inc    eax
  4190c2:	push   ebx
  4190c3:	mov    eax,ds:0x47a9bfda
  4190c8:	rcl    DWORD PTR [esi-0x31],cl
  4190cb:	xchg   ecx,eax
  4190cc:	adc    ah,dl
  4190ce:	xchg   DWORD PTR ds:0x40e0b488,eax
  4190d4:	push   es
  4190d5:	or     BYTE PTR [ecx+ebx*2-0x48a9a7aa],al
  4190dc:	or     eax,0xb63cfcc5
  4190e1:	scas   al,BYTE PTR es:[edi]
  4190e2:	je     0x4190c3
  4190e4:	jge    0x41914f
  4190e6:	dec    esi
  4190e7:	sub    BYTE PTR [edx],dl
  4190e9:	mov    eax,0x1f3dc940
  4190ee:	dec    edx
  4190ef:	jae    0x419124
  4190f1:	add    esi,edi
  4190f3:	push   0x6732d5db
  4190f8:	jb     0x4190e4
  4190fa:	ret    0xf9f3
  4190fd:	mov    ah,0xf0
  4190ff:	sbb    DWORD PTR [edi+0x6672f22f],0x25229746
  419109:	out    dx,eax
  41910a:	not    BYTE PTR [ebx-0x2ce69765]
  419110:	aam    0xd1
  419112:	dec    edx
  419113:	pop    ss
  419114:	mov    ah,0x2
  419116:	and    al,0x1b
  419118:	xchg   edx,eax
  419119:	jecxz  0x419156
  41911b:	outs   dx,DWORD PTR ds:[esi]
  41911c:	add    DWORD PTR [eax-0x38],ebp
  41911f:	sbb    DWORD PTR [ebp-0x6255faaa],edi
  419125:	lock jae 0x4190c1
  419128:	add    ch,BYTE PTR [ebp-0x4b]
  41912b:	mov    ebp,0xc50c101f
  419130:	inc    edx
  419131:	aas    
  419132:	sbb    BYTE PTR cs:[esi],ch
  419135:	xor    bx,si
  419138:	addr16 clc 
  41913a:	sahf   
  41913b:	xchg   DWORD PTR [esi+0x5b891fa7],ecx
  419141:	jbe    0x41910e
  419143:	mov    ecx,0x7b44627f
  419148:	xor    esp,DWORD PTR [ebx]
  41914a:	(bad)  
  41914c:	mov    eax,0x5a23e198
  419151:	jns    0x4190d9
  419153:	test   eax,0x888541d
  419158:	xchg   edi,eax
  419159:	mov    dh,0x25
  41915b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41915c:	xlat   BYTE PTR ds:[ebx]
  41915d:	fstp   DWORD PTR [edx*8+0x27aef853]
  419164:	fdiv   QWORD PTR [di+0x19]
  419168:	sub    DWORD PTR [eax+edi*1],0x5fef9e6e
  41916f:	or     DWORD PTR [eax],ebp
  419171:	mov    dl,0xe
  419173:	int    0xff
  419175:	or     BYTE PTR [edx],ch
  419177:	(bad)
  41917b:	pushf  
  41917c:	(bad)  
  41917d:	fadd   QWORD PTR [edi-0x44dd469a]
  419183:	not    DWORD PTR [esi+eax*1]
  419186:	les    edx,FWORD PTR [edi+0x41]
  419189:	sub    BYTE PTR [ecx+0x60],bl
  41918c:	sbb    eax,0x2b903aa9
  419191:	adc    al,0x28
  419193:	mov    edx,DWORD PTR [ecx+0x4aef25ad]
  419199:	push   es
  41919a:	stos   BYTE PTR es:[edi],al
  41919b:	jnp    0x4191ed
  41919d:	pop    eax
  41919e:	add    cl,ah
  4191a0:	mov    esi,0x2ffd6f77
  4191a5:	inc    edi
  4191a6:	lods   al,BYTE PTR ds:[esi]
  4191a7:	dec    ebx
  4191a8:	pop    ecx
  4191a9:	fisttp QWORD PTR [esi]
  4191ab:	cmp    ah,0x75
  4191ae:	jne    0x41920f
  4191b0:	cmp    dl,ah
  4191b2:	sbb    al,0xc1
  4191b4:	ins    DWORD PTR es:[edi],dx
  4191b5:	jge    0x41914d
  4191b7:	enter  0xde05,0x23
  4191bb:	sub    ebx,DWORD PTR [ecx+ebp*1+0x670d0bd4]
  4191c2:	stc    
  4191c3:	inc    ebp
  4191c4:	push   cs
  4191c5:	dec    esi
  4191c6:	ja     0x4191eb
  4191c8:	mov    ecx,0x6c87de73
  4191cd:	fsubr  DWORD PTR ss:[edi-0x20]
  4191d1:	push   edx
  4191d2:	mov    ebx,0xb0ea9596
  4191d7:	ret    0xd7ab
  4191da:	fisttp WORD PTR [esi+0x75]
  4191dd:	outs   dx,DWORD PTR ds:[esi]
  4191de:	loop   0x4191f7
  4191e0:	dec    eax
  4191e1:	dec    edi
  4191e2:	or     al,0x82
  4191e4:	and    ah,BYTE PTR [ebp+ecx*8-0x78]
  4191e8:	jmp    DWORD PTR [edx-0x64bfb8e4]
  4191ee:	jecxz  0x4191ab
  4191f0:	dec    esp
  4191f1:	fild   QWORD PTR [esi+0x37]
  4191f4:	add    al,0x1a
  4191f6:	push   ebp
  4191f7:	test   al,0x66
  4191f9:	out    0x8d,al
  4191fb:	xlat   BYTE PTR ds:[ebx]
  4191fc:	(bad)  
  4191fd:	push   ecx
  4191fe:	aaa    
  4191ff:	dec    esi
  419200:	sahf   
  419201:	adc    eax,0x5ba2c6b5
  419207:	call   0xe371:0x7dd2174c
  41920e:	loop   0x419234
  419210:	adc    DWORD PTR [edi+0x193f0d84],edx
  419216:	in     al,0x77
  419218:	cmp    dl,BYTE PTR [edi+0x4861329b]
  41921e:	sbb    edx,DWORD PTR [ecx-0x5e]
  419221:	jg     0x419231
  419223:	add    DWORD PTR ds:0x4790704c,edx
  419229:	mov    ds:0xeadc89a8,eax
  41922e:	jecxz  0x419240
  419230:	cmp    bh,BYTE PTR [ebp-0x3f]
  419233:	loop   0x41922d
  419235:	(bad)  
  419236:	sbb    eax,0x8ff3c9d9
  41923b:	push   ebp
  41923c:	fcomp  QWORD PTR [ebx-0x2b570a2e]
  419242:	imul   DWORD PTR [ecx+0x4b]
  419245:	mov    gs:0xf4d25f7a,eax
  41924b:	lods   al,BYTE PTR ds:[esi]
  41924c:	iret   
  41924d:	sub    eax,0x3b8d9f62
  419252:	push   cs
  419253:	xor    eax,esp
  419255:	mov    edx,DWORD PTR [ebp-0x3eae1df4]
  41925b:	add    eax,0x980384d1
  419260:	shl    DWORD PTR [esi],cl
  419262:	in     eax,dx
  419263:	adc    ebp,esi
  419265:	lods   eax,DWORD PTR ds:[esi]
  419266:	loopne 0x41925c
  419268:	(bad)  
  41926a:	xor    al,0xda
  41926c:	repnz (bad) 
  41926e:	rcl    DWORD PTR [esi],1
  419270:	cmp    DWORD PTR [eax],0x13
  419273:	test   DWORD PTR ds:0x418fbb3a,edx
  419279:	inc    edi
  41927a:	xchg   eax,edx
  41927c:	or     al,0xa9
  41927e:	imul   esp,DWORD PTR [edx+eax*1-0x784c04d2],0xca9900cf
  419289:	add    ah,BYTE PTR [eax+0x16bbd3c7]
  41928f:	xor    ecx,eax
  419291:	mov    DWORD PTR [ebp+0x8],ecx
  419294:	mov    ecx,DWORD PTR [ebp+0x8]
  419297:	mov    edx,DWORD PTR [ebp-0x58]
  41929a:	add    ecx,0x5708e2
  4192a0:	imul   ecx,edx
  4192a3:	mov    DWORD PTR [ebp-0x58],ecx
  4192a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4192a9:	mov    edx,DWORD PTR [ebp-0x54]
  4192ac:	add    ecx,0x64f89c
  4192b2:	or     ecx,edx
  4192b4:	mov    DWORD PTR [ebp-0x54],ecx
  4192b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4192ba:	jmp    0x41b643
  4192bf:	aad    0xa2
  4192c1:	mov    dh,0x8d
  4192c3:	mov    al,0x81
  4192c5:	ror    BYTE PTR [edx+0x26797ce2],0xa2
  4192cc:	mov    edx,0x1c2720c4
  4192d1:	add    BYTE PTR [ebx-0x7c7ca3e9],0x26
  4192d8:	imul   ecx,ecx,0x16af6367
  4192de:	cwde   
  4192df:	jge    0x41926e
  4192e1:	jno    0x419277
  4192e3:	ret    0x20cb
  4192e6:	ret    0x2066
  4192e9:	rol    edx,1
  4192eb:	mov    ah,0xdb
  4192ed:	outs   dx,BYTE PTR ds:[esi]
  4192ee:	repz sbb ah,BYTE PTR ds:0xe96cbae3
  4192f5:	scas   al,BYTE PTR es:[edi]
  4192f6:	repnz sti 
  4192f8:	jle    0x41928b
  4192fa:	pop    ds
  4192fb:	sti    
  4192fc:	add    edx,DWORD PTR [edx-0x143d9297]
  419302:	cmp    BYTE PTR [esp],ch
  419305:	mov    ds:0x4d733af3,al
  41930a:	and    DWORD PTR cs:[edi],0xe4f7acab
  419311:	inc    esp
  419312:	xchg   esp,eax
  419313:	sti    
  419314:	xchg   eax,esp
  419316:	cmp    BYTE PTR [esi+0x625a3b9e],al
  41931c:	mov    edx,0xc14635db
  419321:	shl    BYTE PTR [edx-0xa23fb89],0xfa
  419328:	test   eax,0xc22c1a59
  41932d:	(bad)  
  41932e:	aad    0xd
  419330:	rcr    DWORD PTR [ebx],1
  419332:	mov    ecx,0x3b9ccfed
  419337:	loop   0x4193ae
  419339:	fnstcw WORD PTR [edi-0x13]
  41933c:	mov    edi,0x1ec2a924
  419341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419342:	dec    eax
  419343:	and    al,0x1f
  419345:	jb     0x419388
  419347:	xchg   esp,eax
  419348:	je     0x419359
  41934a:	adc    eax,0x6188b4db
  41934f:	fbld   TBYTE PTR [ebx-0x2142751a]
  419355:	retf   0x3390
  419358:	push   ecx
  419359:	jl     0x41932f
  41935b:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41935d:	(bad)  
  41935e:	xchg   ebp,eax
  41935f:	mov    ds:0xbd07b2b7,eax
  419364:	xchg   edi,eax
  419365:	outs   dx,DWORD PTR ds:[esi]
  419366:	in     eax,dx
  419367:	fwait
  419368:	or     ch,bl
  41936a:	sbb    BYTE PTR [ebp+0x5],0x51
  41936e:	push   ds
  41936f:	add    al,0x94
  419371:	nop
  419372:	sbb    BYTE PTR [ecx+0x67],bl
  419375:	and    al,0x33
  419377:	fdivp  st(7),st
  419379:	scas   al,BYTE PTR es:[edi]
  41937a:	cmp    DWORD PTR [eax],eax
  41937c:	rol    BYTE PTR [esi+0x26867d10],0xf4
  419383:	mov    WORD PTR gs:[eax-0x7a50b4d3],cs
  41938a:	xor    BYTE PTR [eax+esi*2-0x1f7b5f63],bh
  419391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419392:	inc    edi
  419393:	cld    
  419394:	or     eax,0x9b2c8f04
  419399:	sub    eax,ebx
  41939b:	fcomp  DWORD PTR [edx+0x7]
  41939e:	test   ecx,ebp
  4193a0:	xchg   esi,eax
  4193a1:	int3   
  4193a2:	sbb    eax,0x989adee4
  4193a7:	cdq    
  4193a8:	retf   
  4193a9:	cmp    DWORD PTR [ebx-0x45],eax
  4193ac:	or     BYTE PTR [ecx-0x38eec4f0],al
  4193b2:	or     al,BYTE PTR [edx-0x37]
  4193b5:	adc    eax,0xa753c80b
  4193ba:	push   0x8
  4193bc:	xor    dh,BYTE PTR [edi-0x521c7258]
  4193c2:	and    ebx,DWORD PTR [ecx]
  4193c4:	and    ah,ah
  4193c6:	stos   BYTE PTR es:[edi],al
  4193c7:	xchg   BYTE PTR [edx-0x693fcc60],dl
  4193cd:	xchg   esp,eax
  4193ce:	(bad)  
  4193cf:	std    
  4193d0:	push   cs
  4193d1:	(bad)  
  4193d2:	hlt    
  4193d3:	into   
  4193d4:	sub    DWORD PTR [edi+0x6e329884],ecx
  4193da:	lock and dl,dh
  4193dd:	iret   
  4193de:	leave  
  4193df:	aam    0x14
  4193e1:	in     al,dx
  4193e2:	jno    0x4193fb
  4193e4:	add    al,0xdc
  4193e6:	xchg   edi,eax
  4193e7:	cmp    ecx,esi
  4193e9:	loopne 0x41939c
  4193eb:	xor    DWORD PTR [ebx+0x7172f4b9],esi
  4193f1:	inc    edi
  4193f2:	(bad)
  4193f5:	push   es
  4193f6:	loopne 0x4193d6
  4193f8:	xchg   ebx,eax
  4193f9:	call   0xb0cffc9d
  4193fe:	push   ss
  4193ff:	add    eax,0x24845c55
  419404:	adc    al,0x8f
  419406:	test   eax,0xaf058c99
  41940b:	shl    ebx,1
  41940d:	out    0x25,eax
  41940f:	shl    DWORD PTR [edx-0x310b4143],0x50
  419416:	das    
  419417:	int3   
  419418:	and    DWORD PTR ds:0xb0337650,edi
  41941e:	dec    esp
  41941f:	xchg   ecx,eax
  419420:	xor    BYTE PTR [edi+eiz*1+0x6b],0xb6
  419425:	icebp  
  419426:	adc    eax,0x8f6e4960
  41942b:	popa   
  41942c:	pop    eax
  41942d:	mov    ch,0x3d
  41942f:	xchg   esi,eax
  419430:	cld    
  419431:	neg    BYTE PTR [edi+0x537b28f8]
  419437:	test   ah,al
  419439:	sbb    eax,0x881e5db4
  41943e:	jb     0x419429
  419440:	loope  0x419410
  419442:	xor    BYTE PTR [ecx-0x37],ah
  419445:	or     eax,0x2f73cc9f
  41944a:	mov    eax,ds:0x2cdba2cd
  41944f:	std    
  419450:	pop    ecx
  419451:	mov    ebx,0xeaa7d69e
  419456:	mov    edi,0x40696400
  41945b:	inc    eax
  41945c:	call   0x2d93:0x9d1a162b
  419463:	loope  0x419483
  419465:	pusha  
  419466:	js     0x4194b0
  419468:	mov    dl,cl
  41946a:	mov    ds:0x3d8d4d79,eax
  41946f:	push   esp
  419470:	wrmsr  
  419472:	xlat   BYTE PTR ds:[ebx]
  419473:	or     eax,0xff8be849
  419478:	call   0x530e6cfd
  41947d:	jmp    0x419458
  41947f:	jne    0x4194f1
  419481:	shl    cl,0x44
  419484:	mov    ebp,esi
  419486:	pop    edi
  419487:	pop    esi
  419488:	add    DWORD PTR [eax+0x643878cb],eax
  41948e:	leave  
  41948f:	push   cs
  419490:	xchg   dl,ch
  419492:	fxch   st(0)
  419494:	xchg   BYTE PTR [ecx+ebx*2-0x27],cl
  419498:	scas   eax,DWORD PTR es:[edi]
  419499:	mov    ds:0x2ca4216e,eax
  41949e:	ins    DWORD PTR es:[edi],dx
  41949f:	jecxz  0x4194d1
  4194a1:	add    al,0x42
  4194a3:	daa    
  4194a4:	xor    cl,cl
  4194a6:	push   esp
  4194a7:	lahf   
  4194a8:	imul   edi,DWORD PTR [ecx+0x69],0xd319b3ed
  4194af:	add    al,0x23
  4194b1:	sahf   
  4194b2:	sbb    BYTE PTR [edi],dl
  4194b4:	xchg   BYTE PTR [ecx-0x4e8bde1c],al
  4194ba:	inc    edi
  4194bb:	sar    DWORD PTR [eax],cl
  4194bd:	adc    eax,0xc8f77722
  4194c2:	jnp    0x41944a
  4194c4:	sub    BYTE PTR [edi-0x21b306d2],0xaa
  4194cb:	iret   
  4194cc:	xchg   edx,eax
  4194cd:	cdq    
  4194ce:	and    eax,0x90a20f06
  4194d3:	fwait
  4194d4:	shrd   DWORD PTR [edx+0x26ca4ae],edi,0x1f
  4194dc:	sub    eax,0xa8f8bbb3
  4194e1:	mov    cl,0x27
  4194e3:	dec    eax
  4194e4:	(bad)  
  4194e6:	sbb    eax,DWORD PTR [ebx-0x671cf1fb]
  4194ec:	xchg   esp,eax
  4194ed:	mov    es,esi
  4194ef:	sahf   
  4194f0:	pop    edi
  4194f1:	bound  esi,QWORD PTR [ecx+eiz*1]
  4194f4:	mov    ebx,0x1704f7e0
  4194f9:	pop    ds
  4194fa:	icebp  
  4194fb:	shl    al,1
  4194fd:	test   al,0xfc
  4194ff:	or     al,0x55
  419501:	(bad)  
  419502:	in     eax,dx
  419503:	rcl    DWORD PTR [ecx-0x46],0xab
  419507:	popf   
  419508:	or     edx,esi
  41950a:	push   esi
  41950b:	jo     0x4194d7
  41950d:	sbb    eax,0x1e463fb2
  419512:	mov    BYTE PTR [ebx+0x5f],bh
  419515:	xchg   esi,eax
  419516:	out    dx,eax
  419517:	and    ah,BYTE PTR [edx-0x7d]
  41951a:	pop    esi
  41951b:	(bad)  
  41951c:	out    0xa2,al
  41951e:	outs   dx,DWORD PTR ds:[esi]
  41951f:	sub    dl,BYTE PTR [ebp+0x5c]
  419522:	sub    cl,BYTE PTR [edi]
  419524:	repnz add DWORD PTR [ebx-0x34],edx
  419528:	xor    esp,DWORD PTR [ebp-0x81b16c9]
  41952e:	mov    ebx,0x1fa96a75
  419533:	pop    esp
  419534:	cmp    DWORD PTR [eax+0x1f4c1c22],esi
  41953a:	jle    0x41955e
  41953c:	or     al,0xaf
  41953e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41953f:	cmp    DWORD PTR [ebx-0x3650f113],ecx
  419545:	jmp    0x419558
  419547:	sub    DWORD PTR [edx],esp
  419549:	mov    al,0x98
  41954b:	mov    cl,0x6f
  41954d:	fdivp  st(3),st
  41954f:	sub    al,0x64
  419551:	add    al,0x98
  419553:	adc    eax,0x4f845e1f
  419558:	xor    al,0xdb
  41955a:	pusha  
  41955b:	ficomp WORD PTR [edx+0x4b]
  41955e:	jno    0x419558
  419560:	xchg   ecx,eax
  419561:	test   ch,0xa4
  419564:	jp     0x41951f
  419566:	or     ch,cl
  419568:	retf   
  419569:	lds    ecx,FWORD PTR [ecx]
  41956b:	fidiv  DWORD PTR [ebx+0x56b13169]
  419571:	xor    eax,esp
  419573:	(bad)  
  419574:	jge    0x419513
  419576:	aam    0xae
  419578:	shl    DWORD PTR ds:0xe5ee54cb,0x6a
  41957f:	or     al,0xd4
  419581:	rol    BYTE PTR ds:[eax],1
  419584:	mov    ch,BYTE PTR [edx]
  419586:	in     eax,0x28
  419588:	sbb    DWORD PTR [eax],ebp
  41958a:	inc    eax
  41958b:	pop    edx
  41958c:	xchg   DWORD PTR [ebp-0x1b05abfb],edx
  419592:	jno    0x4195b8
  419594:	ror    DWORD PTR [edi],cl
  419596:	adc    edx,DWORD PTR [eax-0x73]
  419599:	adc    eax,0x44ac3f85
  41959e:	cmp    cl,dl
  4195a0:	xchg   ebp,eax
  4195a1:	cmp    esi,esi
  4195a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195a4:	fldcw  WORD PTR [ecx]
  4195a6:	fs stos DWORD PTR es:[edi],eax
  4195a8:	and    eax,ebx
  4195aa:	scas   al,BYTE PTR es:[edi]
  4195ab:	rcr    DWORD PTR [ebx+0x57],0x82
  4195af:	xchg   ecx,eax
  4195b0:	daa    
  4195b1:	aas    
  4195b2:	dec    edx
  4195b3:	sub    al,0xeb
  4195b5:	fstp   DWORD PTR [ebp+0x68]
  4195b8:	mov    esi,0x17ad3659
  4195bd:	inc    edi
  4195be:	dec    ecx
  4195bf:	and    cl,BYTE PTR [ebx-0x29ad0a09]
  4195c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195c6:	pushf  
  4195c7:	int3   
  4195c8:	fwait
  4195c9:	and    BYTE PTR ds:0x8a8dd290,dl
  4195cf:	outs   dx,BYTE PTR ds:[esi]
  4195d0:	push   esi
  4195d1:	fs pop eax
  4195d3:	mov    esi,DWORD PTR [ebx+0x4330e020]
  4195d9:	mov    bl,0x9e
  4195db:	ret    
  4195dc:	lea    ebp,[ecx]
  4195de:	in     eax,0xee
  4195e0:	lods   eax,DWORD PTR ds:[esi]
  4195e1:	fild   DWORD PTR [ecx-0x6a]
  4195e4:	mov    bl,0xd2
  4195e6:	ins    DWORD PTR es:[edi],dx
  4195e7:	xchg   edi,eax
  4195e8:	jecxz  0x4195f9
  4195ea:	push   esi
  4195eb:	icebp  
  4195ec:	loope  0x41960a
  4195ee:	sub    al,0x19
  4195f0:	je     0x4195e2
  4195f2:	cmp    bl,BYTE PTR ds:0xb18713db
  4195f8:	rol    DWORD PTR [ebp+0x751bcc2f],0x27
  4195ff:	jge    0x41967c
  419601:	push   eax
  419602:	lods   al,BYTE PTR ds:[esi]
  419603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419604:	adc    al,0x9d
  419606:	aas    
  419607:	cmp    ebx,edi
  419609:	inc    ebp
  41960a:	std    
  41960b:	mov    bh,0x4e
  41960d:	loopne 0x41961a
  41960f:	dec    ebx
  419610:	inc    ecx
  419611:	lds    edi,FWORD PTR [ebx+0x492ef7d3]
  419617:	push   ebp
  419618:	or     eax,DWORD PTR [ecx+0x5dcad1b9]
  41961e:	sub    BYTE PTR [ecx+0x40f2f61d],0xc2
  419625:	add    eax,0x5a308bca
  41962a:	enter  0x6494,0xc3
  41962e:	in     al,0x90
  419630:	sub    ebx,DWORD PTR [eax+esi*1-0x3ca3f540]
  419637:	scas   al,BYTE PTR es:[edi]
  419638:	test   eax,0x9d191baf
  41963d:	into   
  41963e:	jl     0x419651
  419640:	js     0x41968f
  419642:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419643:	loop   0x419659
  419645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419646:	xor    bl,BYTE PTR [ebp+eax*1-0x73]
  41964a:	and    DWORD PTR [ecx+0x1fd905f4],ecx
  419650:	jnp    0x4196bb
  419652:	(bad)  
  419653:	stc    
  419654:	add    BYTE PTR [ecx],ah
  419656:	mov    cl,0x56
  419658:	dec    ebx
  419659:	pop    ss
  41965a:	pop    es
  41965b:	mov    edx,0x26289c22
  419660:	xor    BYTE PTR [edi-0x18a5abbb],ah
  419666:	push   ebx
  419667:	xchg   esp,eax
  419668:	dec    eax
  419669:	retf   0xc0d7
  41966c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41966d:	or     BYTE PTR [edx+ebp*8],0xb5
  419671:	pusha  
  419672:	daa    
  419673:	je     0x4196c6
  419675:	jge    0x41965a
  419677:	or     al,0x95
  419679:	jecxz  0x4196da
  41967b:	call   FWORD PTR [edx-0x4]
  41967e:	sub    al,BYTE PTR [ebx]
  419680:	cs nop
  419682:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419683:	call   0x96001ec3
  419688:	fidiv  DWORD PTR [eax]
  41968a:	mov    cl,BYTE PTR [edx-0x8e1c80b]
  419690:	hlt    
  419691:	imul   edx,DWORD PTR [edx],0x3e49fb3
  419697:	mov    eax,ds:0x926ead3b
  41969c:	hlt    
  41969d:	mov    BYTE PTR [esi+ebp*4],bh
  4196a0:	daa    
  4196a1:	add    BYTE PTR [eax],0x36
  4196a4:	xchg   BYTE PTR [ebp+ebp*2+0x34],al
  4196a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196a9:	sub    esp,DWORD PTR [ecx]
  4196ab:	inc    edi
  4196ac:	and    DWORD PTR [eax+0x35],0x73ff17a4
  4196b3:	imul   edx,DWORD PTR ds:0xef0e5985,0x7d
  4196ba:	push   edi
  4196bb:	jae    0x4196a9
  4196bd:	popa   
  4196be:	adc    al,0x8e
  4196c0:	xor    BYTE PTR [ecx+0x5a],al
  4196c3:	nop
  4196c4:	xchg   edi,eax
  4196c5:	sbb    eax,0x8989e309
  4196ca:	fist   DWORD PTR ds:0xb7e2104a
  4196d0:	or     BYTE PTR [ebp-0x5a],ch
  4196d3:	repnz xor DWORD PTR [edx-0x55],0xfc4196e2
  4196db:	push   ebp
  4196dc:	arpl   si,dx
  4196de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196df:	clc    
  4196e0:	pop    edx
  4196e1:	fstp   QWORD PTR [ecx+0x65]
  4196e4:	pop    edx
  4196e5:	je     0x419720
  4196e7:	mov    eax,0xaad578b7
  4196ec:	adc    al,0x3d
  4196ee:	pop    ds
  4196ef:	(bad)  
  4196f0:	and    eax,0xc68981e0
  4196f5:	mov    eax,0xfad94c29
  4196fa:	xchg   BYTE PTR [eax],cl
  4196fc:	jns    0x4196cf
  4196fe:	jle    0x419720
  419700:	cdq    
  419701:	jp     0x41969e
  419703:	mov    dl,0xfe
  419705:	ret    
  419706:	push   ebp
  419707:	mov    dl,0xf0
  419709:	aas    
  41970a:	cld    
  41970b:	popa   
  41970c:	mov    al,ds:0x45a3381a
  419711:	xchg   ebx,esi
  419713:	and    al,0x87
  419715:	das    
  419716:	dec    esi
  419717:	and    edi,DWORD PTR [edi+0x29]
  41971a:	mov    sp,0x850a
  41971e:	mov    ecx,0x4e234d01
  419723:	jne    0x4196d7
  419725:	fwait
  419726:	test   eax,0xd1efc4e4
  41972b:	fld    QWORD PTR [edi]
  41972d:	mov    al,0x8c
  41972f:	jno    0x41971d
  419731:	and    ebp,edx
  419733:	fist   DWORD PTR [ebx]
  419735:	fcmovnbe st,st(1)
  419737:	ret    
  419738:	call   0xfbc7:0xe2ca29ee
  41973f:	loopne 0x41972e
  419741:	cs xchg esp,eax
  419743:	sbb    bh,bl
  419745:	jns    0x4196c7
  419747:	mov    cl,0x82
  419749:	cvtdq2ps xmm4,XMMWORD PTR [edx+0x56a3c589]
  419750:	pop    esi
  419751:	dec    edx
  419752:	popa   
  419753:	pop    esp
  419754:	fst    DWORD PTR [edx+0x36]
  419757:	dec    eax
  419758:	mov    esp,0xe6fcc0c1
  41975d:	dec    ebp
  41975e:	xchg   esi,eax
  41975f:	xchg   esp,eax
  419760:	ins    BYTE PTR es:[edi],dx
  419761:	sti    
  419762:	add    ebp,DWORD PTR [eax]
  419764:	and    DWORD PTR [ecx-0x60],ecx
  419767:	addr16 xor dh,bl
  41976a:	neg    DWORD PTR [eax+eiz*4-0x57]
  41976e:	aam    0x2a
  419770:	in     al,0xe3
  419772:	mov    ebp,DWORD PTR [esi-0x2f498cfd]
  419778:	mov    al,ds:0x669c0baf
  41977d:	pop    eax
  41977e:	or     BYTE PTR [edi+0x24],0xb0
  419782:	cmp    al,0x9e
  419784:	(bad)  
  419786:	lds    esi,FWORD PTR [esi]
  419788:	jnp    0x4197ee
  41978a:	out    dx,al
  41978b:	out    0x88,al
  41978d:	aas    
  41978e:	pushf  
  41978f:	pop    esi
  419790:	pop    ebp
  419791:	mov    ebp,0xdfad9ffe
  419796:	mov    DWORD PTR [edx],0x8a96e473
  41979c:	aam    0x8e
  41979e:	cmp    al,0x68
  4197a0:	div    BYTE PTR [esi+0x4e]
  4197a3:	pusha  
  4197a4:	popf   
  4197a5:	das    
  4197a6:	jno    0x419799
  4197a8:	int3   
  4197a9:	imul   eax,DWORD PTR [ebp+0x41],0xaac2b7ac
  4197b0:	mov    dl,0xfb
  4197b2:	mov    cs,WORD PTR [esi+0x361e8926]
  4197b8:	lds    ecx,FWORD PTR [esi]
  4197ba:	push   0x30
  4197bc:	loopne 0x4197b0
  4197be:	stc    
  4197bf:	xchg   ebx,eax
  4197c0:	daa    
  4197c1:	mov    esp,0x9c654c93
  4197c6:	jb     0x419781
  4197c8:	pop    ecx
  4197c9:	mov    BYTE PTR [esi],dh
  4197cb:	(bad)  
  4197cc:	jmp    0x41979c
  4197ce:	mov    dh,0xdd
  4197d0:	aas    
  4197d1:	ds cwde 
  4197d3:	cmp    bl,BYTE PTR [edx-0x44ac9c52]
  4197d9:	or     BYTE PTR [esi+0x5b],0xb
  4197dd:	sbb    ebx,0x12e9c9db
  4197e3:	lods   al,BYTE PTR ds:[esi]
  4197e4:	icebp  
  4197e5:	add    eax,0x59ee54cd
  4197ea:	lods   al,BYTE PTR ds:[esi]
  4197eb:	mov    al,0xeb
  4197ed:	scas   al,BYTE PTR es:[edi]
  4197ee:	daa    
  4197ef:	and    eax,0x5d54238e
  4197f4:	sub    BYTE PTR [ebp-0x1cddd23b],dh
  4197fa:	pushf  
  4197fb:	aaa    
  4197fc:	sbb    al,BYTE PTR [edi]
  4197fe:	mov    WORD PTR [edx+0x5d8d7e6d],?
  419804:	push   esi
  419805:	jno    0x419789
  419807:	pop    esi
  419808:	enter  0xcc6d,0x17
  41980c:	push   edi
  41980d:	gs ins BYTE PTR es:[edi],dx
  41980f:	or     DWORD PTR [eax-0x179b5b5a],ecx
  419815:	mov    ?,WORD PTR [edx]
  419817:	mov    esi,0x6af70bbb
  41981c:	push   ds
  41981d:	push   ecx
  41981e:	ficomp DWORD PTR [edx+ecx*1+0x41]
  419822:	jae    0x4197c0
  419824:	fs xchg edx,eax
  419826:	ins    DWORD PTR es:[edi],dx
  419827:	aam    0xe4
  419829:	fldenv es:[ebx*4+0x41de2d4]
  419831:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419832:	call   0x131c:0x26e187a
  419839:	repnz push cs
  41983b:	cmp    DWORD PTR [edi-0x80],edi
  41983e:	add    ebp,DWORD PTR [esi+ebx*2-0x1]
  419842:	enter  0xbb7d,0xe2
  419846:	adc    BYTE PTR [edi+eiz*2],ah
  419849:	inc    esi
  41984a:	cmp    ecx,DWORD PTR [ecx*4-0x2ded5da4]
  419851:	inc    ecx
  419852:	push   cs
  419853:	retf   0xedca
  419856:	cmp    dh,0x3d
  419859:	add    al,0xad
  41985b:	or     BYTE PTR [ebp+0x50],al
  41985e:	mov    ds,WORD PTR [edx+0x45df226b]
  419864:	test   al,0xd5
  419866:	mov    dl,0x71
  419868:	lds    edi,FWORD PTR [edi]
  41986a:	jo     0x4198c1
  41986c:	jge    0x394abee3
  419872:	out    dx,al
  419873:	jmp    0xd3f5:0xb49406af
  41987a:	push   edi
  41987b:	sub    bl,BYTE PTR [ecx+0x28a13d5f]
  419881:	lea    ecx,[ecx+0x5d5f9a2c]
  419887:	xor    al,0x41
  419889:	imul   ebx,DWORD PTR [edi-0x3],0x5ce6eb40
  419890:	stos   DWORD PTR es:[edi],eax
  419891:	or     eax,0xe5d6e239
  419896:	aas    
  419897:	sbb    bl,BYTE PTR [esi]
  419899:	movzx  ebp,bl
  41989c:	ret    0x6c75
  41989f:	shl    DWORD PTR [ebp+0x2d95a6cc],1
  4198a5:	or     al,0x15
  4198a7:	or     al,0xe5
  4198a9:	mov    esp,ecx
  4198ab:	xchg   ecx,eax
  4198ac:	inc    ebp
  4198ad:	cmp    BYTE PTR [esi+0x45],ch
  4198b0:	(bad)  [edx]
  4198b2:	in     eax,dx
  4198b3:	imul   ecx,DWORD PTR [ebx-0x26],0xffffffb5
  4198b7:	add    BYTE PTR [edi+ebx*8+0x3e774591],dl
  4198be:	aas    
  4198bf:	lods   al,BYTE PTR ds:[esi]
  4198c0:	pop    esp
  4198c1:	int3   
  4198c2:	xlat   BYTE PTR ds:[ebx]
  4198c3:	inc    edx
  4198c4:	jae    0x41992a
  4198c6:	test   eax,0x174ac51e
  4198cb:	jb     0x4198c2
  4198cd:	cmp    DWORD PTR [ecx+0x57186d64],0x4d95db9a
  4198d7:	jbe    0x419933
  4198d9:	hlt    
  4198da:	xor    BYTE PTR [ebx],ch
  4198dc:	xor    dl,ah
  4198de:	or     ebp,ebp
  4198e0:	stos   BYTE PTR es:[edi],al
  4198e1:	dec    esi
  4198e2:	call   0xc7b0:0xf5668132
  4198e9:	mov    BYTE PTR [esi+edi*8+0x53],bh
  4198ed:	adc    al,0xbf
  4198ef:	scas   eax,DWORD PTR es:[edi]
  4198f0:	repnz ins BYTE PTR es:[edi],dx
  4198f2:	mov    ds:0x51f3e8,al
  4198f7:	xchg   ebp,eax
  4198f8:	sub    DWORD PTR [eax-0x786c2d78],esp
  4198fe:	dec    esi
  4198ff:	leave  
  419900:	imul   edi,DWORD PTR [edx+0x5ce944b],0x5452d297
  41990a:	xor    esi,esp
  41990c:	fimul  WORD PTR [eax-0x1f468ac9]
  419912:	mov    eax,ebp
  419914:	xchg   ecx,eax
  419915:	dec    edi
  419916:	sahf   
  419917:	imul   ebp,DWORD PTR gs:[ebx-0x5fe86d48],0xfffffff1
  41991f:	hlt    
  419920:	in     eax,dx
  419921:	push   esi
  419922:	(bad)  
  419923:	fucomip st,st(5)
  419925:	call   0x4472dd59
  41992a:	mov    BYTE PTR [ebx+0x3c4227bf],ah
  419930:	dec    esp
  419931:	fcomp  QWORD PTR [esi+ebx*2+0x14]
  419936:	ss into 
  419938:	fsub   QWORD PTR [ebx-0x16]
  41993b:	int    0x6d
  41993d:	sbb    al,0x2d
  41993f:	pop    edi
  419940:	push   ds
  419941:	loopne 0x419924
  419943:	daa    
  419944:	cdq    
  419945:	jle    0x4198e5
  419947:	sbb    DWORD PTR [ebx-0x2e373175],eax
  41994d:	hlt    
  41994e:	add    al,0xbe
  419950:	scas   eax,DWORD PTR es:[edi]
  419951:	aas    
  419952:	lea    ebp,fs:[edi+0x32]
  419956:	xor    esi,ebx
  419958:	pop    edx
  419959:	popf   
  41995a:	or     al,0xb5
  41995c:	inc    edx
  41995d:	nop
  41995e:	call   0xad33:0x1c369887
  419965:	int    0xe4
  419967:	add    al,0xf2
  419969:	mov    dl,0x59
  41996b:	inc    edx
  41996c:	bound  ebp,QWORD PTR [edx+0x1c]
  41996f:	xchg   ecx,eax
  419970:	mov    esp,es
  419972:	mov    bh,0x3b
  419974:	sti    
  419975:	aad    0x42
  419977:	call   0xcbae83ea
  41997c:	xchg   ecx,eax
  41997d:	punpckhbw mm4,QWORD PTR [edx-0x75]
  419981:	cmp    eax,0xcea9e79b
  419986:	pop    esi
  419987:	add    BYTE PTR [edi+0x2e750008],ch
  41998d:	add    ch,dl
  41998f:	into   
  419990:	push   ebx
  419991:	mov    ch,0x19
  419993:	jle    0x419a11
  419995:	sub    edx,DWORD PTR [eax]
  419997:	es clc 
  419999:	cmp    dh,BYTE PTR [ecx]
  41999b:	xchg   ebp,eax
  41999c:	jl     0x419947
  41999e:	adc    eax,0xb6d00b2b
  4199a3:	es sub eax,0x14b79558
  4199a9:	fld    DWORD PTR [ecx-0x1c]
  4199ac:	or     BYTE PTR [edi+0xb4a9bb3],dl
  4199b2:	xchg   ebp,eax
  4199b3:	mov    bh,0xb8
  4199b5:	mov    ds:0x49e4dcd8,al
  4199ba:	std    
  4199bb:	or     ecx,edx
  4199bd:	mov    ch,0x8c
  4199bf:	call   0x92f3:0x9e64b09d
  4199c6:	jmp    0xee5a:0x7996a937
  4199cd:	dec    eax
  4199ce:	lahf   
  4199cf:	inc    esi
  4199d0:	pushf  
  4199d1:	outs   dx,BYTE PTR ds:[esi]
  4199d2:	sub    edi,DWORD PTR [ecx+0x1df5acd5]
  4199d8:	int    0x60
  4199da:	test   BYTE PTR [edx+0x47e4fa5],bl
  4199e0:	mov    DWORD PTR [edx],eax
  4199e2:	mov    edx,0x407d6ad6
  4199e7:	push   esi
  4199e8:	popf   
  4199e9:	xchg   ah,cl
  4199eb:	sbb    al,0x8
  4199ed:	out    0xc3,eax
  4199ef:	xchg   esp,eax
  4199f0:	or     dh,bh
  4199f2:	jl     0x4199a2
  4199f4:	sub    eax,0x2ed0dcbc
  4199f9:	ds dec ebx
  4199fb:	fldenv [esi-0x2c]
  4199fe:	loopne 0x419a4a
  419a00:	ret    
  419a01:	out    0x4a,al
  419a03:	jne    0x4199ce
  419a05:	je     0x4199ac
  419a07:	jecxz  0x419a50
  419a09:	cmp    ah,BYTE PTR [esi-0x6b]
  419a0c:	sbb    DWORD PTR [esi+edi*2+0x9e40b54],esi
  419a13:	mov    dl,0x45
  419a15:	cli    
  419a16:	clc    
  419a17:	sub    al,0x48
  419a19:	dec    eax
  419a1a:	dec    edi
  419a1b:	xchg   eax,ebp
  419a1d:	shl    BYTE PTR [eax+0x34b54060],1
  419a23:	push   0x2d
  419a25:	push   ss
  419a26:	and    bl,bh
  419a28:	stos   BYTE PTR es:[edi],al
  419a29:	xchg   esi,eax
  419a2a:	cmp    ah,BYTE PTR [ebx-0x40]
  419a2d:	jl     0x4199d5
  419a2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a30:	sub    bl,dh
  419a32:	sub    ebx,ecx
  419a34:	(bad)
  419a38:	mov    ch,BYTE PTR [edx-0x74]
  419a3b:	push   cs
  419a3c:	call   FWORD PTR [ebp+0x31]
  419a3f:	lock sub eax,0xe6b941b2
  419a45:	mov    bl,0xc
  419a47:	outs   dx,BYTE PTR ds:[esi]
  419a48:	out    dx,al
  419a49:	cli    
  419a4a:	xchg   esp,eax
  419a4b:	sahf   
  419a4c:	popf   
  419a4d:	jo     0x4199e9
  419a4f:	cmp    edi,DWORD PTR ds:0x7244054b
  419a55:	and    esp,0x1b4416ea
  419a5b:	fisttp DWORD PTR [ebp+eiz*1-0x7e]
  419a5f:	push   esp
  419a60:	lods   al,BYTE PTR ds:[esi]
  419a61:	into   
  419a62:	stos   DWORD PTR es:[edi],eax
  419a63:	xor    DWORD PTR [edx-0x6c],esp
  419a66:	pop    esp
  419a67:	hlt    
  419a68:	lock fldcw WORD PTR [ebx-0x747c64ed]
  419a6f:	test   DWORD PTR [edx-0x37e70a79],ecx
  419a75:	cmc    
  419a76:	test   eax,0xd282e54a
  419a7b:	or     BYTE PTR [ebx+eax*8-0x36],ch
  419a7f:	jae    0x419a97
  419a81:	adc    DWORD PTR [eax],0x37
  419a84:	adc    bh,BYTE PTR [edi+edi*2]
  419a87:	not    BYTE PTR [ecx]
  419a89:	(bad)  
  419a8a:	pop    esi
  419a8b:	jae    0x419ad8
  419a8d:	sbb    ah,BYTE PTR [ebx+0x2d772f80]
  419a93:	cli    
  419a94:	loopne 0x419a73
  419a96:	(bad)  
  419a97:	jp     0x419a48
  419a99:	sbb    al,BYTE PTR [edi-0x1bb832a5]
  419a9f:	(bad)  
  419aa0:	cmp    ecx,DWORD PTR [eax-0x5513ea76]
  419aa6:	enter  0xf419,0xa3
  419aaa:	shl    BYTE PTR [ebp+0x69],1
  419aad:	pop    es
  419aae:	mov    ebp,0x9bb2c73f
  419ab3:	int    0xfd
  419ab5:	cmp    al,BYTE PTR [edi+0x4673be85]
  419abb:	and    edx,DWORD PTR [esi-0x7cd2554a]
  419ac1:	add    DWORD PTR [ebx+0x5ab66ad2],ebp
  419ac7:	xchg   esi,eax
  419ac8:	mov    dl,0xcf
  419aca:	and    ebp,DWORD PTR [ecx]
  419acc:	pop    ss
  419acd:	xchg   ebx,eax
  419ace:	add    eax,0x11309fc5
  419ad3:	pop    ebp
  419ad4:	mov    cl,0xf3
  419ad6:	xor    eax,0x6b4f8cf0
  419adb:	mov    edx,0xd510d11f
  419ae0:	jmp    0xfa35:0x212982eb
  419ae7:	adc    eax,0xfad6739e
  419aec:	adc    al,BYTE PTR [eax]
  419aee:	in     al,0xea
  419af0:	imul   ebx,DWORD PTR [edi],0xffffffbf
  419af3:	cmp    ebp,edx
  419af5:	pop    edi
  419af6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419af7:	lock inc edx
  419af9:	ja     0x419b42
  419afb:	mov    ch,0xdb
  419afd:	dec    ebx
  419afe:	push   ds
  419aff:	push   es
  419b00:	mov    ch,0x10
  419b02:	adc    ch,0xb6
  419b05:	mov    bl,0x7b
  419b07:	jae    0x419afa
  419b09:	inc    esp
  419b0a:	call   0x3355:0xddc64f57
  419b11:	scas   eax,DWORD PTR es:[edi]
  419b12:	push   ebx
  419b13:	ret    
  419b14:	mov    ah,BYTE PTR [ebx-0x20]
  419b17:	mov    ch,0x19
  419b19:	pop    eax
  419b1a:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  419b1c:	nop
  419b1d:	jae    0x419b8d
  419b1f:	mov    edx,0x832d3b28
  419b24:	icebp  
  419b25:	jl     0x419b36
  419b27:	out    0x76,eax
  419b29:	mov    eax,0x75fb5a5d
  419b2e:	lock std 
  419b30:	add    BYTE PTR [ecx+0x4b6c1280],al
  419b36:	jnp    0x419ba4
  419b38:	idiv   BYTE PTR [ecx]
  419b3a:	sbb    esp,DWORD PTR [edx+0xb733c4e]
  419b40:	mov    ebx,0x19fce839
  419b45:	outs   dx,BYTE PTR ds:[esi]
  419b46:	cmc    
  419b47:	fnstcw WORD PTR ds:0x5324b99b
  419b4d:	pusha  
  419b4e:	mov    edi,0x582d2a4c
  419b53:	test   esp,0xbfed1ccb
  419b59:	rep stos BYTE PTR es:[edi],al
  419b5b:	xchg   ecx,eax
  419b5c:	ret    
  419b5d:	add    DWORD PTR [eax-0x479a9d3a],esp
  419b63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b64:	(bad)  
  419b65:	stc    
  419b66:	sub    eax,0x3c98064f
  419b6b:	fcmove st,st(5)
  419b6d:	cmc    
  419b6e:	std    
  419b6f:	adc    ebx,DWORD PTR [eax+eiz*4+0x1c]
  419b73:	xor    ebp,DWORD PTR [ecx-0x70]
  419b76:	mov    esp,DWORD PTR [edi]
  419b78:	mov    edi,0xf0b96266
  419b7d:	stc    
  419b7e:	aas    
  419b7f:	jno    0x419b33
  419b81:	pop    ds
  419b82:	jmp    0xd5e54df3
  419b87:	ja     0x419bce
  419b89:	arpl   WORD PTR [eax-0x43],si
  419b8c:	jge    0x419c00
  419b8e:	pop    esp
  419b8f:	add    al,0x32
  419b91:	sub    eax,0xe5b33fe7
  419b96:	xchg   DWORD PTR [eax+0x31],ebp
  419b99:	enter  0xb617,0x27
  419b9d:	in     eax,0xfe
  419b9f:	aas    
  419ba0:	xchg   DWORD PTR [edi+0x2e24b965],esi
  419ba6:	xchg   edi,eax
  419ba7:	ror    DWORD PTR [edi],0xc7
  419baa:	arpl   WORD PTR [ecx],bp
  419bac:	mov    eax,0x11058ff2
  419bb1:	je     0x419c18
  419bb3:	lahf   
  419bb4:	daa    
  419bb5:	sub    bh,BYTE PTR [ebx+0x39]
  419bb8:	push   esi
  419bb9:	mov    edx,0xfec89f07
  419bbe:	pop    ebp
  419bbf:	cmp    DWORD PTR [eax],esi
  419bc1:	mov    WORD PTR [ecx+0xd],?
  419bc4:	xchg   edi,eax
  419bc5:	aaa    
  419bc6:	sbb    al,0xbe
  419bc8:	sub    DWORD PTR [esi],ebx
  419bca:	push   ecx
  419bcb:	jg     0x419bbe
  419bcd:	ja     0x419c1b
  419bcf:	addr16 jmp 0x419bb1
  419bd2:	mov    dl,0xd8
  419bd4:	mov    edx,0x83d1f42d
  419bd9:	pop    ebp
  419bda:	push   ebx
  419bdb:	push   cs
  419bdc:	es jl  0x419b90
  419bdf:	mov    esi,ebx
  419be1:	mov    esp,0x4de6c132
  419be6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419be7:	arpl   WORD PTR [esi-0x46f74e4a],ax
  419bed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bee:	lahf   
  419bef:	jbe    0x419b8e
  419bf1:	out    0x55,al
  419bf3:	mov    cl,0xa
  419bf5:	fiadd  DWORD PTR [ebp+0x5a]
  419bf8:	mov    eax,ds:0xc3e8e30d
  419bfd:	loopne 0x419c29
  419bff:	out    0x6f,eax
  419c01:	shr    DWORD PTR [ecx-0x5f],cl
  419c04:	and    BYTE PTR [ebx],dh
  419c06:	sub    edi,DWORD PTR [ebx]
  419c08:	cmc    
  419c09:	add    edx,0xb549e9b2
  419c0f:	mov    bl,0x8b
  419c11:	dec    edi
  419c12:	ror    DWORD PTR [edi],cl
  419c14:	inc    edi
  419c15:	push   esp
  419c16:	stos   BYTE PTR es:[edi],al
  419c17:	sub    BYTE PTR [edi-0x48],dl
  419c1a:	xor    esi,DWORD PTR [ecx-0x2aa11fa3]
  419c20:	mov    ds:0xa41f5b3f,eax
  419c25:	mov    ah,bh
  419c27:	lds    ebp,FWORD PTR [ebx]
  419c29:	pusha  
  419c2a:	imul   eax,DWORD PTR [ecx-0x61],0x13
  419c2e:	adc    edx,esp
  419c30:	cmp    BYTE PTR [ebp+0x48cd7dfa],ah
  419c36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c37:	xchg   esp,eax
  419c38:	ret    
  419c39:	outs   dx,BYTE PTR ds:[esi]
  419c3a:	ins    BYTE PTR es:[edi],dx
  419c3b:	xchg   esp,esp
  419c3d:	out    dx,al
  419c3e:	dec    edx
  419c3f:	mov    dh,0x1a
  419c41:	mov    al,ds:0x4c21fba2
  419c46:	push   cs
  419c47:	hlt    
  419c48:	imul   ebx,edi,0x1f9ebd61
  419c4e:	fbstp  TBYTE PTR ds:0xb6e4a36e
  419c54:	pushf  
  419c55:	lahf   
  419c56:	dec    edi
  419c57:	adc    BYTE PTR [edx-0x2527d0d4],ch
  419c5d:	dec    ebx
  419c5e:	pop    ecx
  419c5f:	fcomp  st(1)
  419c61:	mov    edi,0xa027c565
  419c66:	aaa    
  419c67:	pop    ebp
  419c68:	jb     0x419c55
  419c6a:	jl     0x419bf6
  419c6c:	xchg   DWORD PTR [eax+0x5e29ceac],esp
  419c72:	fstp   QWORD PTR [esi]
  419c74:	or     al,BYTE PTR [ecx]
  419c76:	pop    esi
  419c77:	call   0xab693af5
  419c7c:	shr    BYTE PTR [eax+0x52a916ff],0x6e
  419c83:	ins    BYTE PTR es:[edi],dx
  419c84:	rcr    BYTE PTR [ecx],cl
  419c86:	push   edi
  419c87:	test   BYTE PTR [esi+ecx*4],dl
  419c8a:	mov    eax,ebp
  419c8c:	in     al,0x66
  419c8e:	popf   
  419c8f:	mov    dh,0x95
  419c91:	test   DWORD PTR [ebx+edi*2-0x4d5f16e8],ebx
  419c98:	(bad)  
  419c99:	or     DWORD PTR [edi+0x6845acb4],esp
  419c9f:	ins    BYTE PTR es:[edi],dx
  419ca0:	retf   
  419ca1:	leave  
  419ca2:	sub    DWORD PTR [esi],eax
  419ca4:	adc    edx,DWORD PTR [eax-0x660da4f4]
  419caa:	inc    esi
  419cab:	mov    ch,0x36
  419cad:	push   es
  419cae:	out    0x8c,eax
  419cb0:	push   ss
  419cb1:	mov    bh,0x10
  419cb3:	aad    0x75
  419cb5:	fs cmp eax,0xdc5f5c5d
  419cbb:	pop    ebp
  419cbc:	loop   0x419cc4
  419cbe:	add    BYTE PTR [edi+ebx*4+0x38418ecd],dh
  419cc5:	sub    al,BYTE PTR [eax-0x3b1ab71e]
  419ccb:	fwait
  419ccc:	test   eax,0x95b0e907
  419cd1:	aad    0x9f
  419cd3:	shr    BYTE PTR [eax-0x6d88a326],0x8e
  419cda:	add    dh,bh
  419cdc:	xchg   edx,eax
  419cdd:	dec    ebp
  419cde:	push   ecx
  419cdf:	xchg   edx,eax
  419ce0:	xchg   edi,eax
  419ce1:	ss mov bh,0x3f
  419ce4:	shl    DWORD PTR [edx-0x7b],1
  419ce7:	jge    0x419cfa
  419ce9:	and    al,0xe2
  419ceb:	add    esp,DWORD PTR ds:0x6921bebc
  419cf1:	or     ebx,eax
  419cf3:	cwde   
  419cf4:	xchg   BYTE PTR [ecx-0x7347e4d3],dl
  419cfa:	pminub mm0,QWORD PTR fs:[edi]
  419cfe:	add    ah,ch
  419d00:	cmp    al,0x46
  419d02:	call   0x52d8478c
  419d07:	out    dx,eax
  419d08:	or     bh,0xdf
  419d0b:	fwait
  419d0c:	in     al,dx
  419d0d:	cs inc edi
  419d0f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  419d11:	shl    BYTE PTR [edi-0x4efc54c2],cl
  419d17:	out    0xcf,eax
  419d19:	mov    esi,DWORD PTR [esi-0x32]
  419d1c:	stc    
  419d1d:	xchg   edi,eax
  419d1e:	xor    BYTE PTR [ebx+0x5d],dh
  419d21:	aam    0xb5
  419d23:	cdq    
  419d24:	pop    ebp
  419d25:	cmp    DWORD PTR [eax-0x1],esp
  419d28:	enter  0xd3c5,0x92
  419d2c:	add    eax,0xb64b0319
  419d31:	pop    ds
  419d32:	clc    
  419d33:	dec    ebx
  419d34:	fldcw  WORD PTR [esp+ebx*1]
  419d37:	shl    ebp,1
  419d39:	daa    
  419d3a:	pushaw 
  419d3c:	pop    eax
  419d3d:	data16 xlat BYTE PTR ds:[ebx]
  419d3f:	xlat   BYTE PTR ds:[ebx]
  419d40:	jmp    0xd382:0x1be8ff33
  419d47:	nop
  419d48:	adc    ebp,DWORD PTR [eax]
  419d4a:	and    eax,0xf166e211
  419d4f:	stos   BYTE PTR es:[edi],al
  419d50:	in     eax,0x13
  419d52:	jo     0x419dc2
  419d54:	xor    dl,BYTE PTR [ebx+ecx*8-0x6ec93950]
  419d5b:	sub    bl,al
  419d5d:	bsr    esi,ebp
  419d60:	add    DWORD PTR [ecx-0x2a3dd046],0xffffffca
  419d67:	pop    eax
  419d68:	jnp    0x419d08
  419d6a:	fsub   QWORD PTR [eax+esi*8]
  419d6d:	pop    edi
  419d6e:	(bad)  
  419d6f:	fiadd  WORD PTR [edi-0x60]
  419d72:	gs scas al,BYTE PTR es:[edi]
  419d74:	pop    ds
  419d75:	sbb    al,0x79
  419d77:	mov    esp,0xd0d7443d
  419d7c:	mov    edx,0xd481c6ac
  419d81:	sti    
  419d82:	fst    st(2)
  419d84:	dec    ebp
  419d85:	into   
  419d86:	addr16 mov dh,0xff
  419d89:	add    DWORD PTR [edi+0x2a],edi
  419d8c:	mov    bl,0xe6
  419d8e:	loope  0x419d36
  419d90:	dec    ebx
  419d91:	sbb    ch,BYTE PTR [esi+0x2c934167]
  419d97:	jno    0x419da4
  419d99:	test   BYTE PTR [edi-0xf],dl
  419d9c:	xchg   ecx,eax
  419d9d:	dec    eax
  419d9e:	shl    edi,1
  419da0:	cmp    BYTE PTR [ecx],cl
  419da2:	pop    ebp
  419da3:	mov    cl,0xe3
  419da5:	adc    DWORD PTR [edx],edi
  419da7:	cs jbe 0x419e08
  419daa:	je     0x419e00
  419dac:	retf   
  419dad:	add    DWORD PTR [eax-0x12],edi
  419db0:	(bad)  
  419db1:	ins    BYTE PTR es:[edi],dx
  419db2:	mov    esi,0x3c471d53
  419db7:	jmp    0x419dbc
  419db9:	sbb    dh,ch
  419dbb:	fcom   DWORD PTR [ebx+0x53394ede]
  419dc1:	or     al,0x7c
  419dc3:	popf   
  419dc4:	jge    0x419d8b
  419dc6:	xor    eax,0x5d51fd10
  419dcb:	aad    0x4c
  419dcd:	sub    BYTE PTR [edx-0x62be4d8d],cl
  419dd3:	push   ebp
  419dd4:	sbb    esp,ecx
  419dd6:	push   ecx
  419dd7:	mov    dh,0x63
  419dd9:	mov    edx,0x651ea3f0
  419dde:	outs   dx,DWORD PTR ds:[esi]
  419ddf:	sbb    eax,0x4004e348
  419de4:	dec    BYTE PTR [edx+ebp*1-0x1f221ba6]
  419deb:	aas    
  419dec:	mov    dh,0x27
  419dee:	in     al,dx
  419def:	repz rcl DWORD PTR [esi+ebp*1-0xf],0xd
  419df5:	and    edi,DWORD PTR [eax-0x722bcb13]
  419dfb:	dec    ecx
  419dfc:	jecxz  0x419de5
  419dfe:	(bad)  
  419e01:	stc    
  419e02:	or     esp,DWORD PTR [ebx-0x117364d6]
  419e08:	xchg   esi,eax
  419e09:	and    cl,BYTE PTR [ebx+edx*8+0x31e4650c]
  419e10:	loop   0x419e6d
  419e12:	retf   
  419e13:	inc    esp
  419e14:	jle    0x419e32
  419e16:	fisttp QWORD PTR [bx+si]
  419e19:	js     0x419dc6
  419e1b:	jnp    0x419dd2
  419e1d:	pop    es
  419e1e:	adc    al,0x1d
  419e20:	js     0x419e9d
  419e22:	fs xchg edx,eax
  419e24:	add    BYTE PTR [ecx-0x23742343],cl
  419e2a:	sar    BYTE PTR [esi],cl
  419e2c:	fstp   TBYTE PTR [eax+0x2f65b7f8]
  419e32:	cmc    
  419e33:	out    0xfe,eax
  419e35:	jecxz  0x419dbb
  419e37:	xor    dl,cl
  419e39:	aam    0xbe
  419e3b:	jp     0x419e12
  419e3d:	cld    
  419e3e:	jg     0x419e06
  419e40:	xor    al,0xdb
  419e42:	mov    eax,ds:0xc6079cdd
  419e47:	rcr    dl,cl
  419e49:	out    dx,eax
  419e4a:	inc    ebp
  419e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e4c:	popf   
  419e4d:	sbb    eax,DWORD PTR [edi]
  419e4f:	adc    DWORD PTR [ebx+0x4e],0x6a1ce51d
  419e56:	xor    BYTE PTR ds:0x5d1b06d5,ah
  419e5c:	mov    eax,0x42a86b0c
  419e61:	xor    al,0x15
  419e63:	aas    
  419e64:	or     ecx,esp
  419e66:	test   DWORD PTR [esi-0x54c90f10],edi
  419e6c:	pop    eax
  419e6d:	popf   
  419e6e:	sub    eax,0x38a6097f
  419e73:	push   esp
  419e74:	jg     0x419e3a
  419e76:	xor    BYTE PTR [ebx],bl
  419e78:	dec    eax
  419e79:	mov    bl,0xf0
  419e7b:	call   DWORD PTR [ebp-0x5c]
  419e7e:	cld    
  419e7f:	arpl   dx,di
  419e81:	and    dh,0x98
  419e84:	outs   dx,BYTE PTR ds:[esi]
  419e85:	dec    edx
  419e86:	mov    DWORD PTR [edx-0x12a94329],ecx
  419e8c:	jo     0x419e11
  419e8e:	sbb    DWORD PTR [ebx+0x2e],0xffffffbd
  419e92:	loope  0x419ee8
  419e94:	dec    edi
  419e95:	fwait
  419e96:	ss (bad) 
  419e98:	loopne 0x419ef6
  419e9a:	jg     0x419e7b
  419e9c:	adc    al,0x8a
  419e9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e9f:	dec    edi
  419ea0:	pop    ss
  419ea1:	ja     0x419f08
  419ea3:	stos   BYTE PTR es:[edi],al
  419ea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ea5:	jp     0x419e9f
  419ea7:	dec    ecx
  419ea8:	test   DWORD PTR [eax+0x6959139e],eax
  419eae:	push   edi
  419eaf:	imul   edi,ebx,0x87df1e0b
  419eb5:	bound  ebp,QWORD PTR [ecx]
  419eb7:	(bad)  
  419eb8:	xor    DWORD PTR [edx],esi
  419eba:	pop    edi
  419ebb:	push   esp
  419ebc:	fdivrp st(2),st
  419ebe:	push   ebp
  419ebf:	mov    al,dh
  419ec1:	(bad)  
  419ec2:	lock int 0xa1
  419ec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ec6:	in     al,dx
  419ec7:	jns    0x419ec6
  419ec9:	push   ebx
  419eca:	shl    BYTE PTR [ecx+edx*2+0x19],cl
  419ece:	inc    ebx
  419ecf:	movsx  eax,cl
  419ed2:	in     al,dx
  419ed3:	dec    edi
  419ed4:	out    0xe8,al
  419ed6:	gs in  eax,dx
  419ed8:	mov    WORD PTR [ebx-0x705fcf32],fs
  419ede:	lods   eax,DWORD PTR ds:[esi]
  419edf:	mov    ecx,0x90de1135
  419ee4:	imul   eax,DWORD PTR [edx-0x76],0x12
  419ee8:	fwait
  419ee9:	mov    esi,0x6c33d910
  419eee:	stc    
  419eef:	adc    eax,DWORD PTR [ecx+0x2511514b]
  419ef5:	push   eax
  419ef6:	jbe    0x419ee2
  419ef8:	popf   
  419ef9:	mov    ch,0xae
  419efb:	push   ss
  419efc:	enter  0x7266,0xa6
  419f00:	ret    0xeca4
  419f03:	add    al,0x56
  419f05:	dec    edx
  419f06:	inc    edi
  419f07:	popf   
  419f08:	xchg   bl,dl
  419f0a:	jmp    0x593cdb67
  419f0f:	push   esp
  419f10:	lock cs (bad) 
  419f13:	aas    
  419f14:	ror    DWORD PTR [ebx+0x73],1
  419f17:	cmp    al,0xf5
  419f19:	test   BYTE PTR [ebx+0x5e],dh
  419f1c:	dec    ebp
  419f1d:	sub    ch,BYTE PTR [edx]
  419f1f:	addr16 pop edi
  419f21:	mov    ds:0x45a1d2af,eax
  419f26:	add    al,0x63
  419f28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f29:	cmp    edx,DWORD PTR [ebp-0x54ec3b26]
  419f2f:	lock jmp 0x419eca
  419f32:	xchg   bl,ah
  419f34:	imul   edx,DWORD PTR [esi-0x2a65cdd6],0xe3cc5949
  419f3e:	ja     0x419f92
  419f40:	(bad)  
  419f41:	and    esp,ebp
  419f43:	std    
  419f44:	ins    DWORD PTR es:[edi],dx
  419f45:	pop    ebx
  419f46:	cmp    ecx,eax
  419f48:	xor    edi,edx
  419f4a:	repnz mov eax,ecx
  419f4d:	pop    es
  419f4e:	lods   eax,DWORD PTR ds:[esi]
  419f4f:	jge    0x419f77
  419f51:	jo     0x419f02
  419f53:	add    eax,0xb24e379f
  419f58:	xor    DWORD PTR [ebx+0x68dcd915],edi
  419f5e:	or     edi,ebx
  419f60:	dec    esp
  419f61:	push   ebx
  419f62:	or     DWORD PTR [edx-0x2a],ecx
  419f65:	(bad)  [esi+0x13]
  419f68:	push   es
  419f69:	jb     0x419f94
  419f6b:	cs stc 
  419f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f6e:	and    eax,0x4f3442cb
  419f73:	loopne 0x419f78
  419f75:	aaa    
  419f76:	or     dh,BYTE PTR [ebp+eiz*4+0x41]
  419f7a:	jl     0x419fdc
  419f7c:	mov    edx,0xf0182be2
  419f81:	shr    DWORD PTR [eax-0x6cd01159],1
  419f87:	out    dx,eax
  419f88:	sbb    DWORD PTR [edi-0x744d21eb],esp
  419f8e:	mov    ebx,0x69c199f2
  419f93:	int3   
  419f94:	int3   
  419f95:	mov    ds,WORD PTR [ebp-0x3a]
  419f98:	ror    BYTE PTR [edx+edx*4+0x75],1
  419f9c:	mov    ch,0x93
  419f9e:	mov    eax,0xef1dc8ab
  419fa3:	or     bl,BYTE PTR [eax]
  419fa5:	adc    eax,0xee7d8b9c
  419faa:	xchg   ebx,eax
  419fab:	popf   
  419fac:	sti    
  419fad:	(bad)  
  419fae:	icebp  
  419faf:	sbb    BYTE PTR [edx-0x23],dl
  419fb2:	outs   dx,DWORD PTR ds:[esi]
  419fb3:	dec    esp
  419fb4:	pop    ebx
  419fb5:	cdq    
  419fb6:	cmc    
  419fb7:	or     ecx,DWORD PTR [edx+0x794d5102]
  419fbd:	leave  
  419fbe:	inc    ebx
  419fbf:	add    cl,BYTE PTR [esi+0x2]
  419fc2:	imul   esp,DWORD PTR [esi],0x77
  419fc5:	out    dx,al
  419fc6:	fld    DWORD PTR [ebx+0x7fc5b0df]
  419fcc:	cli    
  419fcd:	jns    0x41a015
  419fcf:	fsub   st(3),st
  419fd1:	inc    ecx
  419fd2:	push   es
  419fd3:	lea    ebx,[edi+edx*2+0x2d]
  419fd7:	arpl   WORD PTR [ebx+0x77466fb3],bp
  419fdd:	jmp    0x27cd:0xb9f6b4ac
  419fe4:	sbb    eax,0xb6fd454c
  419fe9:	in     eax,dx
  419fea:	lock xor esp,DWORD PTR [edi]
  419fed:	xchg   esi,eax
  419fee:	into   
  419fef:	scas   eax,DWORD PTR es:[edi]
  419ff0:	inc    ecx
  419ff1:	mov    bh,0xcd
  419ff3:	retf   
  419ff4:	and    bh,bh
  419ff6:	sub    al,0x7b
  419ff8:	inc    edi
  419ff9:	dec    eax
  419ffa:	jl     0x41a008
  419ffc:	addr16 or al,0x18
  419fff:	mov    ebx,0x9018cd58
  41a004:	adc    eax,0xca3e593d
  41a009:	hlt    
  41a00a:	aas    
  41a00b:	lea    ebp,[edx-0xd1e7121]
  41a011:	retf   0x6662
  41a014:	repz dec edx
  41a016:	mov    eax,ds:0x5febdd78
  41a01b:	sbb    al,0x14
  41a01d:	jmp    0x7d82cad8
  41a022:	int3   
  41a023:	shl    DWORD PTR [edx+0x20],cl
  41a026:	inc    ebp
  41a027:	adc    bh,BYTE PTR [edi+0xd]
  41a02a:	ss push edi
  41a02c:	les    ebp,FWORD PTR [ebp-0x56456117]
  41a032:	(bad)  
  41a033:	xchg   ebx,eax
  41a034:	or     ah,BYTE PTR [ecx]
  41a036:	frstor [ecx+0x7f3554ad]
  41a03c:	aaa    
  41a03d:	mov    ecx,0xc86a2ad7
  41a042:	scas   al,BYTE PTR es:[edi]
  41a043:	lahf   
  41a044:	pop    esi
  41a045:	sbb    BYTE PTR ds:0x50c40fe6,bh
  41a04b:	push   ds
  41a04c:	push   ebp
  41a04d:	outs   dx,BYTE PTR ds:[esi]
  41a04e:	dec    edx
  41a04f:	test   DWORD PTR [eax-0x77],edx
  41a052:	ret    0x3b4f
  41a055:	mov    ecx,DWORD PTR [ebp+0x7c]
  41a058:	js     0x41a0d7
  41a05a:	jo     0x41a0ba
  41a05c:	mov    edx,0x6e9199e0
  41a061:	sbb    al,0xee
  41a063:	cmp    eax,0xcaa6a819
  41a068:	push   cs
  41a069:	xor    dh,al
  41a06b:	test   BYTE PTR [ebp+0x61],ch
  41a06e:	xor    eax,0xa9d0b4c3
  41a073:	retf   0x6267
  41a076:	pop    eax
  41a077:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a079:	aam    0xd3
  41a07b:	fsub   QWORD PTR [ebx-0x36b3e9dd]
  41a081:	(bad)  
  41a082:	aad    0x3f
  41a084:	arpl   WORD PTR [ebp-0x5a],bp
  41a087:	(bad)  
  41a088:	jns    0x41a09f
  41a08a:	mov    eax,0x29e7be3c
  41a08f:	mov    cl,0xfc
  41a091:	push   edi
  41a092:	add    ebx,DWORD PTR [ebx]
  41a094:	xor    al,0xda
  41a096:	add    al,0x7b
  41a098:	add    BYTE PTR [edx+0x58],al
  41a09b:	std    
  41a09c:	jmp    0x41a0b2
  41a09e:	fcmovnb st,st(3)
  41a0a0:	adc    ah,ah
  41a0a2:	outs   dx,DWORD PTR ds:[esi]
  41a0a3:	fld    DWORD PTR [esp+ecx*2]
  41a0a6:	push   es
  41a0a7:	add    ebx,0x75ca535c
  41a0ad:	jno    0x41a0c7
  41a0af:	pop    esp
  41a0b0:	ror    DWORD PTR [ecx-0x618eee99],1
  41a0b6:	xchg   ebp,eax
  41a0b7:	adc    BYTE PTR [esp+edi*2],ch
  41a0ba:	jb     0x41a0c7
  41a0bc:	rcr    BYTE PTR [edx],1
  41a0be:	pop    ss
  41a0bf:	push   edi
  41a0c0:	xlat   BYTE PTR ds:[ebx]
  41a0c1:	hlt    
  41a0c2:	inc    ecx
  41a0c3:	ja     0x41a0d4
  41a0c5:	mov    dl,0x62
  41a0c7:	outs   dx,DWORD PTR ds:[esi]
  41a0c8:	and    ecx,DWORD PTR [edi-0x493b3967]
  41a0ce:	push   edi
  41a0cf:	and    al,0xdb
  41a0d1:	mov    ds:0x88df9c7f,al
  41a0d6:	adc    al,0x92
  41a0d8:	cld    
  41a0d9:	mov    DWORD PTR [eax-0x70],ecx
  41a0dc:	(bad)  
  41a0dd:	test   eax,0xa353793f
  41a0e3:	test   DWORD PTR [eax*2-0x77c27c75],0x89aa5d0
  41a0ee:	icebp  
  41a0ef:	jne    0x41a072
  41a0f1:	das    
  41a0f2:	ins    BYTE PTR es:[edi],dx
  41a0f3:	dec    edi
  41a0f4:	pop    ebp
  41a0f5:	es ja  0x41a0df
  41a0f8:	mov    dl,0x49
  41a0fa:	jmp    0x41a108
  41a0fc:	sbb    ecx,DWORD PTR [edx+edi*4+0x62]
  41a100:	inc    ebp
  41a101:	mov    esp,0xead8c176
  41a106:	std    
  41a107:	push   ebx
  41a108:	jns    0x41a0e4
  41a10a:	push   edi
  41a10b:	sbb    ah,bh
  41a10d:	loop   0x41a103
  41a10f:	adc    DWORD PTR [ecx],0x3d
  41a112:	sub    bl,BYTE PTR [esi+0x63]
  41a115:	add    ebx,edx
  41a117:	gs jne 0x41a0b3
  41a11a:	(bad)  
  41a11b:	outs   dx,BYTE PTR ds:[esi]
  41a11c:	imul   esi,ebx,0xffffffb3
  41a11f:	inc    ebx
  41a120:	push   esp
  41a121:	adc    al,0x9b
  41a123:	ins    BYTE PTR es:[edi],dx
  41a124:	rcr    DWORD PTR [esi-0x1a],0x8
  41a128:	jmp    0x41a0ef
  41a12a:	mov    edx,0x1bbd10af
  41a12f:	int    0xb5
  41a131:	dec    ecx
  41a132:	xor    al,0xfe
  41a134:	not    ch
  41a136:	cli    
  41a137:	push   esp
  41a138:	stos   BYTE PTR es:[edi],al
  41a139:	mov    al,ds:0xb5676df
  41a13e:	jmp    0x2944:0x7dc36af6
  41a145:	xor    al,0x84
  41a147:	ins    DWORD PTR es:[edi],dx
  41a148:	mov    eax,0xb3de27fb
  41a14d:	ror    DWORD PTR [ebp+0x13],cl
  41a150:	xchg   ebp,eax
  41a151:	imul   edx,DWORD PTR [ebx+0x7b],0xffffffe5
  41a155:	pop    ecx
  41a156:	ins    BYTE PTR es:[edi],dx
  41a157:	sub    BYTE PTR [edi-0x34],al
  41a15a:	clc    
  41a15b:	pushf  
  41a15c:	add    bh,BYTE PTR [ebx]
  41a15e:	sahf   
  41a15f:	push   edx
  41a160:	sbb    BYTE PTR ds:0xf37cbfcb,ch
  41a166:	sub    dl,BYTE PTR [edi+0x10]
  41a169:	jbe    0x41a18a
  41a16b:	jae    0x41a183
  41a16d:	pop    edx
  41a16e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a16f:	(bad)  
  41a170:	ds jne 0x41a1e3
  41a173:	mov    ecx,0x3224998d
  41a178:	mov    DWORD PTR ds:0xd981bf06,ebx
  41a17e:	bound  ebp,QWORD PTR [ebx+0x67]
  41a181:	push   ss
  41a182:	hlt    
  41a183:	test   DWORD PTR [eax-0x68],esp
  41a186:	stos   BYTE PTR es:[edi],al
  41a187:	push   esi
  41a188:	ja     0x41a1af
  41a18a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a18b:	xor    edi,DWORD PTR [edx+0x52]
  41a18e:	xchg   ecx,eax
  41a18f:	lods   al,BYTE PTR ds:[esi]
  41a190:	jg     0x41a187
  41a192:	sbb    DWORD PTR [esi-0x3d],esp
  41a195:	repnz sub BYTE PTR [ebp-0x22cbfb2b],bh
  41a19c:	popf   
  41a19d:	dec    edi
  41a19e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a19f:	jmp    0xf379:0x6c49b5a9
  41a1a6:	imul   edi,edx,0x4e
  41a1a9:	not    BYTE PTR [ebx-0x1f]
  41a1ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1ad:	or     DWORD PTR [ecx+0x7c68b8ee],edi
  41a1b3:	repnz cmp BYTE PTR [ebp+0x29eba006],dl
  41a1ba:	pop    edi
  41a1bc:	push   esi
  41a1bd:	ret    
  41a1be:	aas    
  41a1bf:	and    eax,0x23640dd0
  41a1c4:	adc    al,0x6c
  41a1c6:	pop    eax
  41a1c7:	sbb    cl,ch
  41a1c9:	pop    ecx
  41a1ca:	mov    ebp,0xabad5d22
  41a1cf:	mov    ds:0x11c00311,eax
  41a1d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1d5:	outs   dx,BYTE PTR ds:[esi]
  41a1d6:	iret   
  41a1d7:	dec    ecx
  41a1d8:	sbb    eax,0xb761034
  41a1dd:	leave  
  41a1de:	addr16 jo 0x41a235
  41a1e1:	push   edi
  41a1e2:	in     eax,dx
  41a1e3:	or     al,BYTE PTR [ecx]
  41a1e5:	fild   QWORD PTR [edx]
  41a1e7:	mov    ecx,fs
  41a1e9:	push   ds
  41a1ea:	mov    dh,0xa5
  41a1ec:	jmp    FWORD PTR [ebp*4-0x12a35cce]
  41a1f3:	push   esi
  41a1f4:	loopne 0x41a1a5
  41a1f6:	push   es
  41a1f7:	fcmovnb st,st(3)
  41a1f9:	mov    ds,WORD PTR [ebx]
  41a1fb:	ret    0x56b9
  41a1fe:	(bad)  
  41a1ff:	jmp    0x8167:0xb33c58ab
  41a206:	mov    edx,0xa96c8be3
  41a20b:	mov    bh,0xff
  41a20d:	jp     0x41a19e
  41a20f:	sbb    BYTE PTR [ebp+0x7c],bl
  41a212:	pop    esp
  41a213:	jbe    0x41a1ba
  41a215:	sub    ah,cl
  41a217:	and    BYTE PTR [ebx+0x74],dl
  41a21a:	inc    eax
  41a21b:	xchg   edx,eax
  41a21c:	mov    eax,0x23b67a45
  41a221:	and    BYTE PTR [edx],ch
  41a223:	dec    esi
  41a224:	ins    DWORD PTR es:[edi],dx
  41a225:	leave  
  41a226:	inc    edx
  41a227:	sbb    edi,0xe1575109
  41a22d:	mov    BYTE PTR [ecx],ch
  41a22f:	jnp    0x41a1f4
  41a231:	push   edx
  41a232:	xchg   esi,eax
  41a233:	(bad)  
  41a235:	push   ebx
  41a236:	xor    eax,0x878d9662
  41a23b:	(bad)  
  41a23c:	push   edx
  41a23d:	loope  0x41a2a4
  41a23f:	cmp    ecx,DWORD PTR [ecx-0x52ff0c84]
  41a245:	jo     0x41a275
  41a247:	pop    ecx
  41a248:	sub    DWORD PTR fs:[si],esp
  41a24c:	inc    ebp
  41a24d:	retf   0x33ca
  41a250:	out    dx,al
  41a251:	mov    dh,bh
  41a253:	mov    ch,0x38
  41a255:	outs   dx,DWORD PTR ds:[esi]
  41a256:	stos   DWORD PTR es:[edi],eax
  41a257:	(bad)  
  41a258:	call   FWORD PTR [ebx-0x2e]
  41a25b:	std    
  41a25c:	pminub mm3,QWORD PTR [edi-0x5e]
  41a260:	jno    0x41a29f
  41a262:	rep lods eax,DWORD PTR ds:[esi]
  41a264:	jg     0x41a2c8
  41a266:	push   ss
  41a267:	popa   
  41a268:	cmp    al,0x93
  41a26a:	lahf   
  41a26b:	aas    
  41a26c:	inc    esi
  41a26d:	xor    al,0x9a
  41a26f:	xor    BYTE PTR [edi],cl
  41a271:	in     al,dx
  41a272:	or     al,0x35
  41a274:	xor    ebp,ebp
  41a276:	bound  ebx,QWORD PTR [eax-0x7a390b86]
  41a27c:	push   edx
  41a27d:	(bad)  
  41a27e:	fadd   QWORD PTR [edx]
  41a280:	mov    ecx,DWORD PTR [edx+0x3e]
  41a283:	add    ebp,ebx
  41a285:	xor    DWORD PTR [ecx-0x6e],edx
  41a288:	inc    esp
  41a289:	adc    al,0x6d
  41a28b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a28c:	mov    esp,DWORD PTR [eax-0x37]
  41a28f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a290:	inc    eax
  41a291:	and    al,0x47
  41a293:	dec    esi
  41a294:	cs popf 
  41a296:	repnz mov bh,0x35
  41a299:	jo     0x41a21e
  41a29b:	push   ebx
  41a29c:	aam    0xc7
  41a29e:	les    edx,FWORD PTR ss:[ebp+0x49109d19]
  41a2a5:	cs nop
  41a2a7:	loop   0x41a249
  41a2a9:	dec    ebx
  41a2aa:	xor    BYTE PTR [ebx],ch
  41a2ac:	inc    ebx
  41a2ad:	aam    0xd7
  41a2af:	mov    edx,0x58d7a716
  41a2b4:	es out dx,al
  41a2b6:	inc    ebp
  41a2b7:	fdivp  st(5),st
  41a2b9:	mov    edx,DWORD PTR [esi-0x4e530670]
  41a2bf:	enter  0x59e9,0xe0
  41a2c3:	les    edi,FWORD PTR [esi-0x6d781457]
  41a2c9:	jge    0x41a31f
  41a2cb:	(bad)  
  41a2cc:	mov    eax,ds:0xed3f211f
  41a2d1:	or     edx,DWORD PTR [eax]
  41a2d3:	mov    cl,0x65
  41a2d5:	fimul  WORD PTR [edi+0x7c2810fd]
  41a2db:	loope  0x41a35a
  41a2dd:	dec    ecx
  41a2de:	stos   DWORD PTR es:[edi],eax
  41a2df:	push   esi
  41a2e0:	ret    
  41a2e1:	shr    BYTE PTR [edi+0x769a8704],1
  41a2e7:	ret    0x87db
  41a2ea:	sub    eax,0x359685d2
  41a2ef:	test   ecx,edi
  41a2f1:	test   eax,0x5f7cab6e
  41a2f6:	dec    edx
  41a2f7:	jbe    0x41a2e7
  41a2f9:	sbb    edi,ebp
  41a2fb:	js     0x41a284
  41a2fd:	dec    ebx
  41a2fe:	push   esp
  41a2ff:	sahf   
  41a300:	xchg   BYTE PTR [eax+0x26],ah
  41a303:	push   edi
  41a304:	push   eax
  41a305:	stos   BYTE PTR es:[edi],al
  41a306:	fdiv   DWORD PTR [edi-0x14d85647]
  41a30c:	mov    cl,0xfb
  41a30e:	retf   
  41a30f:	jl     0x41a343
  41a311:	dec    esi
  41a312:	pop    ss
  41a313:	mul    DWORD PTR [ebp+0x10b779d0]
  41a319:	xchg   ebx,eax
  41a31a:	test   DWORD PTR ds:0xe57e5,esp
  41a320:	mov    esp,0x6d691852
  41a325:	cwde   
  41a326:	loope  0x41a352
  41a328:	jno    0x41a30a
  41a32a:	xchg   edx,eax
  41a32b:	rcl    bh,cl
  41a32d:	call   0x2192:0x599eafcd
  41a334:	mul    BYTE PTR [edi]
  41a336:	fcmovnb st,st(7)
  41a338:	shl    eax,1
  41a33a:	lds    esp,FWORD PTR [edi-0x70]
  41a33d:	pop    edi
  41a33e:	aas    
  41a33f:	outs   dx,BYTE PTR ds:[esi]
  41a340:	jbe    0x41a3ad
  41a342:	mov    BYTE PTR ds:0x60353e12,dl
  41a348:	ja     0x41a303
  41a34a:	fisttp DWORD PTR [esp+ebp*2-0x7a]
  41a34e:	or     esi,DWORD PTR [eax]
  41a350:	push   cs
  41a351:	jecxz  0x41a2d4
  41a353:	and    al,0x18
  41a355:	add    eax,0x8a2075c5
  41a35a:	mov    ah,0x50
  41a35c:	fnsave [esi]
  41a35e:	or     DWORD PTR [edx-0x1cc52398],ebx
  41a364:	xchg   edx,eax
  41a365:	or     dl,dh
  41a367:	ss (bad) 
  41a36a:	mov    cl,0x90
  41a36c:	push   ebp
  41a36d:	stos   DWORD PTR es:[edi],eax
  41a36e:	adc    BYTE PTR [esi+0x1dec39b7],bh
  41a374:	xchg   DWORD PTR [eax+ebx*1+0x73],esi
  41a378:	mov    bh,0x85
  41a37a:	dec    ebx
  41a37b:	sar    DWORD PTR [esp+edx*1-0x2e73b0da],1
  41a382:	int3   
  41a383:	mov    edx,0x99fa1367
  41a388:	mov    bh,BYTE PTR [edi+0x26015d65]
  41a38e:	dec    ebx
  41a38f:	mov    DWORD PTR [ecx+0x69],edx
  41a392:	jne    0x41a33d
  41a394:	adc    ah,bh
  41a396:	adc    al,0x53
  41a398:	jg     0x41a35f
  41a39a:	fdiv   DWORD PTR [ebx+edx*2]
  41a39d:	push   eax
  41a39e:	mov    dl,0xa3
  41a3a0:	dec    esp
  41a3a1:	lock ret 0x4467
  41a3a5:	mov    al,0xe0
  41a3a7:	mov    ds:0x4519c0d1,al
  41a3ac:	xchg   esp,eax
  41a3ad:	jo     0x41a38e
  41a3af:	mov    BYTE PTR [ecx-0x12dc9974],bh
  41a3b5:	loopne 0x41a3d2
  41a3b7:	out    dx,al
  41a3b8:	shl    BYTE PTR [edx+0x40c4e8c1],cl
  41a3be:	not    BYTE PTR [eax+0x16]
  41a3c1:	inc    eax
  41a3c2:	jp     0x41a36d
  41a3c4:	stos   DWORD PTR es:[edi],eax
  41a3c5:	in     al,0x44
  41a3c7:	repz int 0xa8
  41a3ca:	and    DWORD PTR [ebx-0x75],edx
  41a3cd:	test   DWORD PTR [edi],edi
  41a3cf:	mov    BYTE PTR [edi],ah
  41a3d1:	sub    ah,dl
  41a3d3:	and    ebp,DWORD PTR [edx*2+0x21e8d38b]
  41a3da:	sbb    al,0xee
  41a3dc:	lahf   
  41a3dd:	in     eax,dx
  41a3de:	scas   al,BYTE PTR es:[edi]
  41a3df:	cdq    
  41a3e0:	scas   al,BYTE PTR es:[edi]
  41a3e1:	and    bl,BYTE PTR [ebp-0x5b]
  41a3e4:	pop    ecx
  41a3e5:	and    edx,DWORD PTR [esp+eax*4-0x33a341a]
  41a3ec:	dec    ebx
  41a3ed:	jae    0x41a418
  41a3ef:	aas    
  41a3f0:	mov    ch,0xd
  41a3f2:	inc    ebx
  41a3f3:	pop    esp
  41a3f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3f5:	lods   al,BYTE PTR ds:[esi]
  41a3f6:	scas   al,BYTE PTR es:[edi]
  41a3f7:	mov    BYTE PTR [ebp-0x4b],bl
  41a3fa:	xchg   ebp,eax
  41a3fb:	rcl    BYTE PTR [eax-0x4b],cl
  41a3fe:	sbb    ah,ah
  41a400:	add    BYTE PTR [eax],cl
  41a402:	inc    ebx
  41a403:	cmc    
  41a404:	out    0x3d,al
  41a406:	mov    DWORD PTR [edx-0x19],eax
  41a409:	repnz enter 0xd0ff,0x2e
  41a40e:	inc    edi
  41a40f:	imul   ebx,DWORD PTR [edx]
  41a412:	cdq    
  41a413:	sti    
  41a414:	rcl    DWORD PTR ds:0xca980eed,0xa1
  41a41b:	mov    DWORD PTR [ebx-0x54e7ae50],edx
  41a421:	inc    ebp
  41a422:	cmp    al,0x1d
  41a424:	mov    esp,0x68ac6d0e
  41a429:	pop    esp
  41a42a:	sub    ecx,DWORD PTR [eax-0x13505ae3]
  41a430:	dec    ecx
  41a431:	imul   ecx,DWORD PTR [ebp-0x7f4a52bd],0x4c
  41a438:	xchg   edx,eax
  41a439:	dec    esi
  41a43a:	loop   0x41a3dd
  41a43c:	adc    esp,DWORD PTR [ecx]
  41a43e:	sub    BYTE PTR [eax+ecx*8],bl
  41a441:	rcpps  xmm2,XMMWORD PTR [esi-0x4f]
  41a445:	into   
  41a446:	sbb    eax,DWORD PTR [ebx]
  41a448:	gs aad 0xf9
  41a44b:	adc    ah,cl
  41a44d:	add    BYTE PTR fs:[edi],0x12
  41a451:	stos   BYTE PTR es:[edi],al
  41a452:	jp     0x41a3ff
  41a454:	clc    
  41a455:	push   edx
  41a456:	sbb    DWORD PTR [eax-0x4f2f7c51],esp
  41a45c:	loopne 0x41a467
  41a45e:	xor    eax,0x801edf6a
  41a463:	or     esp,esi
  41a465:	sbb    ecx,DWORD PTR [edx]
  41a467:	rol    esp,0x15
  41a46a:	add    al,0x9f
  41a46c:	jecxz  0x41a481
  41a46e:	add    bl,BYTE PTR [eax+0x7bc162d4]
  41a474:	push   edx
  41a475:	fmul   QWORD PTR [ebx-0x5b]
  41a478:	(bad)  
  41a479:	cld    
  41a47a:	mov    al,0x73
  41a47c:	bound  ebp,QWORD PTR [edi]
  41a47e:	inc    esi
  41a47f:	dec    edx
  41a480:	mov    bl,0xb9
  41a482:	retf   0x9bdb
  41a485:	jne    0x41a4f4
  41a487:	(bad)  
  41a488:	jo     0x41a441
  41a48a:	test   al,0x44
  41a48c:	add    eax,0x760c608d
  41a491:	push   0xc60ea7f
  41a496:	fistp  WORD PTR [eax+eax*4+0x998b2bc]
  41a49d:	dec    esp
  41a49e:	cmp    BYTE PTR [eax-0x74],dl
  41a4a1:	fistp  DWORD PTR [ecx+edx*8]
  41a4a4:	fbld   TBYTE PTR [ebx]
  41a4a6:	hlt    
  41a4a7:	or     al,0x14
  41a4a9:	ja     0x41a470
  41a4ab:	outs   dx,BYTE PTR ds:[esi]
  41a4ac:	mov    edi,0xebe8163c
  41a4b1:	test   bh,dh
  41a4b3:	push   ds
  41a4b4:	push   ss
  41a4b5:	and    DWORD PTR [ebp+0x7a],ebx
  41a4b8:	sub    BYTE PTR [ecx],cl
  41a4ba:	fcom   QWORD PTR [ebx+0x42bdda82]
  41a4c0:	in     al,0x4
  41a4c2:	hlt    
  41a4c3:	stos   DWORD PTR es:[edi],eax
  41a4c4:	xlat   BYTE PTR ss:[ebx]
  41a4c6:	cmp    BYTE PTR [ebx+0x5602a429],al
  41a4cc:	(bad)  
  41a4cd:	and    al,BYTE PTR [esi-0x5a]
  41a4d0:	or     DWORD PTR [edx],eax
  41a4d2:	shr    BYTE PTR [ebp-0x13],1
  41a4d5:	sub    ecx,DWORD PTR [edi+esi*8+0x484501ca]
  41a4dc:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4de:	mov    ebx,0xb9d10fb4
  41a4e3:	ins    BYTE PTR es:[edi],dx
  41a4e4:	popa   
  41a4e5:	jae    0x41a48e
  41a4e7:	pop    eax
  41a4e8:	sti    
  41a4e9:	xor    eax,0x4890661c
  41a4ee:	pop    ss
  41a4ef:	neg    edi
  41a4f1:	neg    BYTE PTR [ebx-0x1f59c1c5]
  41a4f7:	hlt    
  41a4f8:	retf   0x835a
  41a4fb:	or     ch,BYTE PTR [eax]
  41a4fd:	pop    esi
  41a4fe:	mov    ds,WORD PTR [ecx+0x6a6883dd]
  41a504:	ss push bp
  41a507:	arpl   WORD PTR [ebp-0x47770c94],di
  41a50d:	pop    ss
  41a50e:	imul   ecx,edi,0xfffffffc
  41a511:	fs mov bl,0x41
  41a514:	ins    BYTE PTR es:[edi],dx
  41a515:	sub    eax,0x9b1762f8
  41a51a:	sbb    eax,ebp
  41a51c:	popa   
  41a51d:	xchg   ebx,eax
  41a51e:	sbb    ch,ch
  41a520:	in     eax,dx
  41a521:	fdivr  DWORD PTR [ecx+0x6a90eb1d]
  41a527:	nop
  41a528:	cdq    
  41a529:	pop    es
  41a52a:	xor    bh,al
  41a52c:	rcr    ecx,cl
  41a52e:	sar    DWORD PTR [ebx-0xb],cl
  41a531:	cwde   
  41a532:	mov    ds:0x5bbebbf2,eax
  41a537:	add    DWORD PTR [eax],edi
  41a539:	adc    eax,0x14f34ba5
  41a53e:	test   DWORD PTR [ebx],esi
  41a540:	sub    ecx,ecx
  41a542:	les    edx,FWORD PTR [ebp+0x1a086505]
  41a548:	aad    0x38
  41a54a:	test   eax,0x33fae192
  41a54f:	mov    cl,BYTE PTR [ecx+0x4e]
  41a552:	push   esi
  41a553:	push   esp
  41a554:	xchg   ecx,eax
  41a555:	or     DWORD PTR [ebp-0x4168b0fb],0x1a
  41a55c:	mov    ebx,DWORD PTR [edi+0x3e72bfbe]
  41a562:	mov    al,BYTE PTR [edx-0x58]
  41a565:	xchg   esi,eax
  41a566:	mov    ds:0xa658cab5,eax
  41a56b:	sub    al,0x83
  41a56d:	inc    eax
  41a56e:	dec    ecx
  41a56f:	ret    0xc336
  41a572:	pop    esi
  41a573:	addr16 push ds
  41a575:	pop    ebx
  41a576:	mov    edx,0x97493f5e
  41a57b:	or     DWORD PTR [edx-0x1b],0xf8561b53
  41a582:	pop    esp
  41a583:	sub    al,0x35
  41a585:	add    BYTE PTR [esi],0x2b
  41a588:	gs add ax,0xbd30
  41a58d:	out    0x76,al
  41a58f:	push   ebx
  41a590:	jmp    0x41a5ae
  41a592:	or     ecx,DWORD PTR [esi]
  41a594:	add    edx,DWORD PTR [esi+0x5e]
  41a597:	mov    ds:0x8e0a9130,al
  41a59c:	and    BYTE PTR [edx+0x61b81eb7],cl
  41a5a2:	cli    
  41a5a3:	ins    BYTE PTR es:[edi],dx
  41a5a4:	bound  eax,QWORD PTR [esi+0x5f]
  41a5a7:	sbb    esi,DWORD PTR [edi-0x6a28c7da]
  41a5ad:	mov    WORD PTR [edi],ss
  41a5af:	adc    BYTE PTR [eax-0x3f],al
  41a5b2:	inc    ebx
  41a5b3:	jle    0x41a553
  41a5b5:	stos   DWORD PTR es:[edi],eax
  41a5b6:	hlt    
  41a5b7:	aaa    
  41a5b8:	pop    edx
  41a5b9:	test   DWORD PTR [ebx-0x4a],ebx
  41a5bc:	adc    al,0x3c
  41a5be:	imul   ebx,DWORD PTR [edi],0xaf10da70
  41a5c4:	mov    ch,0xd2
  41a5c6:	mov    ebp,0x43502fc7
  41a5cb:	test   al,0x6e
  41a5cd:	pop    ss
  41a5ce:	fcom   st(4)
  41a5d0:	dec    ebx
  41a5d1:	fdiv   DWORD PTR [ebx+0x1bd5272a]
  41a5d7:	xchg   esi,eax
  41a5d8:	inc    edi
  41a5d9:	aas    
  41a5da:	inc    esp
  41a5db:	std    
  41a5dc:	dec    ebx
  41a5dd:	or     DWORD PTR [esi+0x65],ebx
  41a5e0:	nop
  41a5e1:	scas   eax,DWORD PTR es:[edi]
  41a5e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5e3:	repz fild DWORD PTR [esi*1-0x41dddf03]
  41a5eb:	mov    al,0x38
  41a5ed:	adc    BYTE PTR [eax-0x58],al
  41a5f0:	adc    ebx,esp
  41a5f2:	loopne 0x41a5ad
  41a5f4:	call   0xbe1a7a30
  41a5f9:	pop    edx
  41a5fa:	mov    ds:0x8e375c1f,al
  41a5ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a600:	push   cs
  41a601:	jno    0x41a628
  41a603:	aaa    
  41a604:	neg    esi
  41a606:	test   eax,0x838dc322
  41a60b:	(bad)  
  41a60c:	xor    DWORD PTR [esi+eiz*8+0x1b],edi
  41a610:	ja     0x41a5b2
  41a612:	push   ebx
  41a613:	data16 cmp BYTE PTR [edi],0xec
  41a617:	xor    ebx,DWORD PTR [esi+edx*2]
  41a61a:	adc    BYTE PTR [ebx-0x5e99962d],dl
  41a620:	popa   
  41a621:	mov    edx,0xf6cf51c6
  41a626:	div    BYTE PTR [ebx+0x7d]
  41a629:	dec    ecx
  41a62a:	pop    edx
  41a62b:	pop    esp
  41a62c:	inc    ecx
  41a62d:	repnz dec edi
  41a62f:	(bad)  
  41a631:	sar    BYTE PTR ds:0xe19e76f4,1
  41a637:	mov    BYTE PTR [edi-0x2e],ch
  41a63a:	sub    al,0x64
  41a63c:	out    0x24,eax
  41a63e:	pop    esi
  41a63f:	dec    ebx
  41a640:	inc    esi
  41a641:	dec    edi
  41a642:	sar    BYTE PTR [ebx],cl
  41a644:	in     al,dx
  41a645:	xor    edi,DWORD PTR [edi]
  41a647:	(bad)  
  41a648:	out    dx,al
  41a649:	or     eax,0xed29e7a1
  41a64e:	dec    edx
  41a64f:	push   ebx
  41a650:	fwait
  41a651:	adc    BYTE PTR [edi-0x551035f3],bl
  41a657:	leave  
  41a658:	out    dx,eax
  41a659:	lock ja 0x41a630
  41a65c:	xlat   BYTE PTR ds:[ebx]
  41a65d:	out    dx,eax
  41a65e:	test   eax,0x2c0244cf
  41a663:	add    eax,0x25afbef4
  41a668:	xchg   edx,eax
  41a669:	push   ecx
  41a66a:	fimul  WORD PTR [ebx]
  41a66c:	mov    al,0x68
  41a66e:	xor    edx,DWORD PTR [eax]
  41a670:	mov    eax,0xfdf7ac1d
  41a675:	test   DWORD PTR [esi+0x2fe8fdc4],ebx
  41a67b:	fsub   QWORD PTR [edi+ecx*8-0x5c]
  41a67f:	imul   esi,DWORD PTR [edi-0x546c3b16],0x7c393729
  41a689:	mov    eax,ds:0xdcb83133
  41a68e:	into   
  41a68f:	or     DWORD PTR ds:0xa664d41,edx
  41a695:	push   0x40
  41a697:	lock sbb dl,dh
  41a69a:	sbb    al,0x74
  41a69c:	mov    ecx,0x81d6cb3a
  41a6a1:	fdivr  st,st(7)
  41a6a3:	adc    eax,0x2b25b8e0
  41a6a8:	jo     0x41a6e6
  41a6aa:	rcl    BYTE PTR [ecx+0x1fdb5d1a],1
  41a6b0:	mov    dl,0x92
  41a6b2:	inc    ecx
  41a6b3:	dec    ebp
  41a6b4:	cli    
  41a6b5:	je     0x41a727
  41a6b7:	retf   0xad7e
  41a6ba:	(bad)  
  41a6bb:	in     al,dx
  41a6bc:	shl    DWORD PTR [eax-0x20],cl
  41a6bf:	mov    ebx,ecx
  41a6c1:	push   ecx
  41a6c2:	scas   eax,DWORD PTR es:[edi]
  41a6c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6c4:	jge    0x41a6c1
  41a6c6:	inc    edx
  41a6c7:	call   0x562b:0x688691e3
  41a6ce:	mov    BYTE PTR [ebx+0x5a971818],bh
  41a6d4:	stos   DWORD PTR es:[edi],eax
  41a6d5:	test   eax,0xc0982867
  41a6da:	fldcw  WORD PTR [edi]
  41a6dc:	sbb    edx,DWORD PTR [ebp+0x5d]
  41a6df:	sub    eax,0x59c59cd7
  41a6e4:	rcl    BYTE PTR [esi+ecx*1],0xe6
  41a6e8:	push   edx
  41a6e9:	cmp    ebx,edi
  41a6eb:	sub    BYTE PTR [esi+0x7e5bba04],al
  41a6f1:	test   eax,0x214b7351
  41a6f6:	jg     0x41a734
  41a6f8:	std    
  41a6f9:	mov    eax,ds:0x7e09f2e3
  41a6fe:	cdq    
  41a6ff:	sub    eax,DWORD PTR [esi+0x1a1be5f7]
  41a705:	push   esi
  41a706:	and    ch,0x36
  41a709:	(bad)  
  41a70a:	mov    al,0xd1
  41a70c:	mov    ah,0xb1
  41a70e:	in     al,0xf8
  41a710:	out    dx,eax
  41a711:	xchg   edi,eax
  41a712:	cmp    al,BYTE PTR [esi]
  41a714:	xchg   esp,eax
  41a715:	(bad)  
  41a716:	repnz scas al,BYTE PTR es:[edi]
  41a718:	(bad)
  41a71b:	sbb    eax,0x11abab4a
  41a720:	push   ebp
  41a721:	pop    ss
  41a722:	(bad)  
  41a723:	sti    
  41a724:	iret   
  41a725:	push   es
  41a726:	jg     0x41a6cf
  41a728:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a729:	mov    eax,0xf98dc6b7
  41a72e:	add    esi,DWORD PTR [edx]
  41a730:	push   esi
  41a731:	xor    BYTE PTR [edi+edi*2],dl
  41a734:	jae    0x41a793
  41a736:	inc    esp
  41a737:	fwait
  41a738:	mov    WORD PTR [ebp+0x49],?
  41a73b:	outs   dx,DWORD PTR ds:[esi]
  41a73c:	dec    esp
  41a73d:	(bad)  
  41a73e:	fbld   TBYTE PTR [edi]
  41a740:	clc    
  41a741:	inc    eax
  41a742:	es cmp al,0xa0
  41a745:	inc    esp
  41a746:	mov    dh,0xd
  41a748:	ret    0x5904
  41a74b:	pop    es
  41a74c:	xchg   dh,cl
  41a74e:	mov    ?,ecx
  41a750:	sub    ah,BYTE PTR [eax+0x530623bc]
  41a756:	push   esi
  41a757:	and    esp,ebp
  41a759:	jbe    0x41a7c3
  41a75b:	clc    
  41a75c:	mov    dl,0x76
  41a75e:	xor    eax,0xf134022
  41a763:	lea    esi,[esi+0x564f7c80]
  41a769:	inc    edi
  41a76a:	ret    0xadf6
  41a76d:	mov    ds:0x49a15696,eax
  41a772:	scas   eax,DWORD PTR es:[edi]
  41a773:	cmova  ecx,DWORD PTR [ebx]
  41a776:	and    ebx,DWORD PTR [edx-0x4ca3fe2e]
  41a77c:	dec    ebp
  41a77d:	mov    dl,BYTE PTR [ecx-0x5b]
  41a780:	add    al,0x18
  41a782:	in     al,0x24
  41a784:	(bad)  [edx+0x1fd7340d]
  41a78a:	fsubr  DWORD PTR [ebx]
  41a78c:	mov    ecx,0x4cd635c0
  41a791:	mov    eax,0x746b43d
  41a796:	and    DWORD PTR [esi+0x7b],ecx
  41a799:	leave  
  41a79a:	retf   
  41a79b:	pusha  
  41a79c:	js     0x41a80e
  41a79e:	mov    edx,0x81cf50c1
  41a7a3:	inc    ebp
  41a7a4:	xchg   edx,eax
  41a7a5:	mov    ecx,0xbd259021
  41a7aa:	popf   
  41a7ab:	and    al,0xb3
  41a7ad:	sub    ah,BYTE PTR [ebp-0x43db02cd]
  41a7b3:	packssdw mm5,mm3
  41a7b6:	adc    eax,0x8add7a0a
  41a7bb:	repz inc esi
  41a7bd:	js     0x41a7b7
  41a7bf:	cmp    al,bh
  41a7c1:	cmp    DWORD PTR [esi-0x4fb6b191],0x4a
  41a7c8:	loop   0x41a81d
  41a7ca:	pop    ecx
  41a7cb:	add    esi,DWORD PTR [ecx+0x53]
  41a7ce:	sbb    cl,dh
  41a7d0:	nop
  41a7d1:	sbb    eax,0x6c20a8c2
  41a7d6:	fs loop 0x41a797
  41a7d9:	(bad)  
  41a7da:	jns    0x41a802
  41a7dc:	fst    QWORD PTR [eax+0x50]
  41a7df:	inc    ecx
  41a7e0:	push   cs
  41a7e1:	popa   
  41a7e2:	enter  0xea0d,0x23
  41a7e6:	or     bh,BYTE PTR ds:0x218f59db
  41a7ec:	jmp    0x35699468
  41a7f1:	push   edi
  41a7f2:	mov    ecx,gs
  41a7f4:	js     0x41a841
  41a7f6:	mov    eax,0x898db42d
  41a7fb:	mov    ds:0xfac9cffb,al
  41a800:	fwait
  41a801:	addr16 jmp 0x41a85f
  41a804:	(bad)  
  41a805:	xchg   esp,eax
  41a806:	xor    eax,0x33bcf28d
  41a80b:	data16 mov WORD PTR ds:0xb91fe736,cs
  41a812:	(bad)  
  41a813:	sub    DWORD PTR [eax-0x66f21fc4],eax
  41a819:	xor    BYTE PTR [ecx],cl
  41a81b:	sti    
  41a81c:	js     0x41a880
  41a81e:	mov    ebx,0xf45a69d2
  41a823:	push   es
  41a824:	ss xchg esi,eax
  41a826:	and    ebx,DWORD PTR [ebx-0x45]
  41a829:	push   esp
  41a82a:	test   eax,0x94265768
  41a82f:	xlat   BYTE PTR ds:[ebx]
  41a830:	xlat   BYTE PTR ds:[ebx]
  41a831:	lds    ecx,FWORD PTR [eax]
  41a833:	xchg   ebx,eax
  41a834:	das    
  41a835:	ds jbe 0x41a879
  41a838:	cmp    DWORD PTR [eax+0x4af9c1c2],ecx
  41a83e:	adc    al,0xbc
  41a840:	xor    esi,DWORD PTR [edx+0x75f22e06]
  41a846:	int    0xca
  41a848:	ret    
  41a849:	call   0xc11c13f9
  41a84e:	leave  
  41a84f:	add    DWORD PTR [ecx-0x3c],edx
  41a852:	(bad)  [edx]
  41a854:	out    0x50,eax
  41a856:	gs pop ebp
  41a858:	pop    edi
  41a859:	jp     0x41a810
  41a85b:	(bad)  
  41a85c:	and    ah,BYTE PTR [esi]
  41a85e:	scas   eax,DWORD PTR es:[edi]
  41a85f:	add    edi,DWORD PTR [edx+0x2f]
  41a862:	into   
  41a863:	rcr    BYTE PTR [eax+edx*4],1
  41a866:	push   esi
  41a867:	jp     0x41a812
  41a869:	jae    0x41a898
  41a86b:	out    0x26,al
  41a86d:	adc    al,0x9
  41a86f:	xor    ecx,DWORD PTR [esi+edx*8-0x5b]
  41a873:	pop    ebx
  41a874:	push   edi
  41a875:	inc    edi
  41a876:	(bad)  
  41a877:	aas    
  41a878:	cli    
  41a879:	mov    ecx,0x70805253
  41a87e:	les    eax,FWORD PTR [bx+si+0x783a]
  41a883:	push   0xd96582ed
  41a888:	pushf  
  41a889:	mov    al,0x3a
  41a88b:	or     edi,DWORD PTR [edi-0x7163a571]
  41a891:	push   cs
  41a892:	and    edx,0xffffff93
  41a895:	cmp    ch,cl
  41a897:	scas   al,BYTE PTR es:[edi]
  41a898:	xor    eax,0x8e1ee100
  41a89d:	inc    ecx
  41a89e:	mov    esp,0x66d63091
  41a8a3:	aas    
  41a8a4:	test   eax,0x4456bbe
  41a8a9:	leave  
  41a8aa:	leave  
  41a8ab:	das    
  41a8ac:	push   0xffffff9d
  41a8ae:	neg    esi
  41a8b0:	xchg   ebx,eax
  41a8b1:	shl    BYTE PTR [edi+0x3a],0x42
  41a8b5:	jbe    0x41a92b
  41a8b7:	jnp    0x41a906
  41a8b9:	mov    dl,0xac
  41a8bb:	jno    0x41a857
  41a8bd:	add    cl,ch
  41a8bf:	or     dh,bl
  41a8c1:	mov    ds:0x8919b7ca,al
  41a8c6:	mov    eax,ds:0xd86f5e42
  41a8cb:	inc    edx
  41a8cc:	dec    esi
  41a8cd:	push   cs
  41a8ce:	arpl   WORD PTR [esi-0x47],sp
  41a8d1:	cmp    DWORD PTR [ebx],edi
  41a8d3:	stos   BYTE PTR es:[edi],al
  41a8d4:	rcl    BYTE PTR [edx],cl
  41a8d6:	loop   0x41a8fb
  41a8d8:	add    eax,0x8daf8d55
  41a8dd:	and    al,0xf0
  41a8df:	push   ds
  41a8e0:	adc    al,0x7e
  41a8e2:	scas   ax,WORD PTR es:[edi]
  41a8e4:	jmp    0x96783ed0
  41a8e9:	test   al,0x47
  41a8eb:	xor    esi,ebp
  41a8ed:	add    eax,0xb7603a7f
  41a8f2:	sbb    DWORD PTR [edi-0x10],edi
  41a8f5:	into   
  41a8f6:	in     al,0x19
  41a8f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8f9:	mov    dh,BYTE PTR [edi-0x2d]
  41a8fc:	inc    esi
  41a8fd:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41a8ff:	int    0x1e
  41a901:	js     0x41a920
  41a903:	outs   dx,DWORD PTR ds:[esi]
  41a904:	ins    BYTE PTR es:[edi],dx
  41a905:	or     ah,ch
  41a907:	fwait
  41a908:	sbb    dh,BYTE PTR [ecx+0x7]
  41a90b:	xor    DWORD PTR [eax],0xa3f38661
  41a911:	mov    eax,ds:0x8b5fec27
  41a916:	ds dec ebx
  41a918:	fcomp  QWORD PTR [esi-0x13]
  41a91b:	cmp    al,BYTE PTR [edx-0x6f197695]
  41a921:	pop    esi
  41a922:	pop    ebp
  41a923:	mov    esi,0x13910e1
  41a928:	pop    ebx
  41a929:	mov    ebp,0xe3fae74a
  41a92e:	fdivr  DWORD PTR [eax-0x126c97eb]
  41a934:	or     DWORD PTR [edx-0x5],ebp
  41a937:	mov    ds:0x305d3359,al
  41a93c:	es jmp 0xf10a5a30
  41a942:	test   DWORD PTR [edx-0x30],esi
  41a945:	out    dx,eax
  41a946:	pop    eax
  41a947:	das    
  41a948:	mov    edi,0x10717360
  41a94d:	jp     0x41a947
  41a94f:	shl    ebp,0x1a
  41a952:	mov    dl,0x1
  41a954:	rcr    BYTE PTR [edi-0x17011247],1
  41a95a:	or     cl,ah
  41a95c:	push   edx
  41a95d:	mov    ebx,0xfe3f3645
  41a962:	es addr16 add eax,0x7fe60b76
  41a969:	addr16 pop ss
  41a96b:	pop    ebx
  41a96c:	mov    edx,0x4eeb2430
  41a971:	add    ch,cl
  41a973:	test   ebp,eax
  41a975:	scas   eax,DWORD PTR es:[edi]
  41a976:	jae    0x41a968
  41a978:	retf   0xc7e7
  41a97b:	inc    ebp
  41a97c:	int3   
  41a97d:	jle    0x41a939
  41a97f:	or     dl,0x64
  41a982:	inc    esp
  41a983:	aad    0x2d
  41a985:	sub    ecx,edi
  41a987:	xor    al,0x55
  41a989:	not    DWORD PTR [edi-0x3fb12af0]
  41a98f:	test   eax,0x1989047f
  41a994:	push   ds
  41a995:	out    0x55,al
  41a997:	or     DWORD PTR [edx+0x304f5013],edx
  41a99d:	mov    esi,0x3f8e92fb
  41a9a2:	jnp    0x41a93a
  41a9a4:	retf   0xdec2
  41a9a7:	imul   esi,DWORD PTR [ebx+0x5e],0xffffffca
  41a9ab:	mov    dh,bh
  41a9ad:	mov    edi,0x6f9d1999
  41a9b2:	sub    BYTE PTR [esi+0x7e29f524],bh
  41a9b8:	add    ebx,edi
  41a9ba:	cmp    eax,0x866b48ec
  41a9bf:	and    DWORD PTR [ecx+0xa],ebp
  41a9c2:	jb     0x41a946
  41a9c4:	push   es
  41a9c5:	inc    edi
  41a9c6:	and    ah,dh
  41a9c8:	xor    eax,0x51257d1e
  41a9cd:	hlt    
  41a9ce:	lods   al,BYTE PTR ds:[esi]
  41a9cf:	jmp    0x41a957
  41a9d1:	mov    bl,0xcd
  41a9d3:	into   
  41a9d4:	shl    BYTE PTR [eax+0x54],cl
  41a9d7:	xchg   esi,eax
  41a9d8:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41a9da:	xchg   DWORD PTR [ecx],esi
  41a9dc:	pop    ds
  41a9dd:	jae    0x41aa5e
  41a9df:	xchg   edx,eax
  41a9e0:	fmul   st,st(3)
  41a9e2:	jb     0x41a99d
  41a9e4:	jmp    0x41a980
  41a9e6:	pushf  
  41a9e7:	xlat   BYTE PTR ds:[ebx]
  41a9e8:	mov    ds,WORD PTR [ebp+0x31f7317c]
  41a9ee:	pop    edx
  41a9ef:	rcr    BYTE PTR [edx+0x71],1
  41a9f2:	pop    ss
  41a9f3:	mov    eax,0x289df5cf
  41a9f8:	inc    edi
  41a9f9:	adc    DWORD PTR [edi+0x64],edi
  41a9fc:	(bad)  
  41a9fd:	dec    eax
  41a9fe:	mov    ah,0xd5
  41aa00:	daa    
  41aa01:	daa    
  41aa02:	cmp    ah,cl
  41aa04:	into   
  41aa05:	fcomp  DWORD PTR cs:[ecx+esi*1-0x5]
  41aa0a:	mov    DWORD PTR [edi+0x1ed28fb8],edi
  41aa10:	and    eax,DWORD PTR ds:[ebx-0xc3e6fef]
  41aa17:	fst    DWORD PTR [ebx+0x334b4380]
  41aa1d:	in     al,0x62
  41aa1f:	int3   
  41aa20:	stc    
  41aa21:	inc    edi
  41aa22:	adc    al,BYTE PTR [eax-0x62]
  41aa25:	adc    ecx,DWORD PTR [edi+0x2]
  41aa28:	outs   dx,BYTE PTR ds:[esi]
  41aa29:	test   eax,0x78651bf4
  41aa2e:	dec    ebp
  41aa2f:	stc    
  41aa30:	pop    esi
  41aa31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa32:	sbb    esi,esi
  41aa34:	adc    bh,BYTE PTR [ecx-0x1a]
  41aa37:	mov    ah,0x0
  41aa39:	push   ss
  41aa3a:	or     al,0xb6
  41aa3c:	and    DWORD PTR [esi+ebp*1],0x30
  41aa40:	cs jne 0x41aa99
  41aa43:	lods   eax,DWORD PTR ds:[esi]
  41aa44:	fist   WORD PTR [ebx-0x5b]
  41aa47:	aaa    
  41aa48:	out    dx,al
  41aa49:	pop    ss
  41aa4a:	imul   ah
  41aa4c:	add    DWORD PTR [esi],ebx
  41aa4e:	outs   dx,BYTE PTR ds:[esi]
  41aa4f:	out    dx,al
  41aa50:	sub    eax,0x964a2d49
  41aa55:	pop    edx
  41aa56:	mov    ebx,0x74d7855e
  41aa5b:	int3   
  41aa5c:	mov    ebx,DWORD PTR [ecx+0x2]
  41aa5f:	punpckhwd mm3,QWORD PTR [edi-0x7b70bd7d]
  41aa66:	stos   DWORD PTR es:[edi],eax
  41aa67:	aad    0xb8
  41aa69:	mov    ch,0xda
  41aa6b:	dec    DWORD PTR [esi+0xe69a6d6]
  41aa71:	add    DWORD PTR [esi-0x74e1d17e],esp
  41aa77:	inc    ebx
  41aa78:	rcl    BYTE PTR [ecx+0x5ddec611],1
  41aa7e:	nop
  41aa7f:	popa   
  41aa80:	pop    ss
  41aa81:	(bad)  
  41aa82:	push   ds
  41aa83:	cmp    eax,0x3f341830
  41aa88:	jmp    0xc7abe377
  41aa8d:	xor    ah,BYTE PTR [edx+0x2419259c]
  41aa93:	jne    0x41aaf0
  41aa95:	push   ds
  41aa96:	jnp    0x41aa48
  41aa98:	pop    edi
  41aa99:	sbb    al,0x1f
  41aa9b:	out    0x5d,eax
  41aa9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa9e:	fld    DWORD PTR [ebx]
  41aaa0:	add    dl,BYTE PTR [edx+ebx*8+0x2a]
  41aaa4:	test   eax,0xed24507a
  41aaa9:	sbb    bh,ch
  41aaab:	ins    BYTE PTR es:[edi],dx
  41aaac:	sub    eax,DWORD PTR [eax-0x72]
  41aaaf:	push   edx
  41aab0:	retf   0x615f
  41aab3:	inc    ecx
  41aab4:	xchg   DWORD PTR [eax],esp
  41aab6:	arpl   WORD PTR [eax],di
  41aab8:	or     ebp,ebx
  41aaba:	clc    
  41aabb:	dec    edi
  41aabc:	cmp    eax,0xf623a76f
  41aac1:	add    DWORD PTR [ebp+0x2c],ebx
  41aac4:	xor    DWORD PTR [eax-0x44],edx
  41aac7:	mov    dh,0x1a
  41aac9:	cwde   
  41aaca:	and    ebx,DWORD PTR [ebx]
  41aacc:	jns    0x41aabb
  41aace:	in     eax,0xa9
  41aad0:	inc    ecx
  41aad1:	test   BYTE PTR [ebx+0x6e576867],ch
  41aad7:	in     eax,0x2a
  41aad9:	mov    esi,0x231a520c
  41aade:	jno    0x41ab09
  41aae0:	in     al,0xc0
  41aae2:	data16 mov dh,0xe1
  41aae5:	cmp    al,0x2a
  41aae7:	add    cl,BYTE PTR [edi-0x1a]
  41aaea:	push   edx
  41aaeb:	ret    0x8ad1
  41aaee:	out    dx,al
  41aaef:	pop    eax
  41aaf0:	add    al,0xd5
  41aaf2:	mov    ecx,0xdfa89310
  41aaf7:	adc    dl,ch
  41aaf9:	push   ebp
  41aafa:	mov    al,0x67
  41aafc:	jbe    0x41aa94
  41aafe:	sub    eax,esi
  41ab00:	test   DWORD PTR [edx+eiz*4],edi
  41ab03:	inc    esi
  41ab04:	sbb    edi,esp
  41ab06:	test   al,0x46
  41ab08:	cmp    DWORD PTR [ecx],edx
  41ab0a:	sbb    BYTE PTR [eax-0x72],dl
  41ab0d:	cmp    eax,0xa01ba30e
  41ab12:	cwde   
  41ab13:	pop    es
  41ab14:	pop    ds
  41ab15:	sub    eax,0xade31eca
  41ab1a:	xchg   esi,eax
  41ab1b:	not    DWORD PTR [ebx+0x7b]
  41ab1e:	pop    es
  41ab1f:	das    
  41ab20:	add    BYTE PTR [ecx+0x2b0e138e],ah
  41ab26:	push   0x1069fbda
  41ab2b:	cmp    BYTE PTR [edi-0x29cde5d7],ch
  41ab31:	hlt    
  41ab32:	stos   BYTE PTR es:[edi],al
  41ab33:	out    dx,al
  41ab34:	psraw  mm4,QWORD PTR [edi+0x3051a457]
  41ab3b:	jle    0x41ab17
  41ab3d:	and    ebx,0xffffff89
  41ab40:	sbb    dl,BYTE PTR [ecx+0x46]
  41ab43:	xor    al,0xb0
  41ab45:	(bad)
  41ab49:	push   0xfcbd1130
  41ab4e:	rcr    BYTE PTR [esi+0x568c1ac8],cl
  41ab54:	out    dx,al
  41ab55:	sub    DWORD PTR [eax-0x385de901],ebp
  41ab5b:	hlt    
  41ab5c:	lea    esi,[edi+0x6c6dd6ab]
  41ab62:	std    
  41ab63:	adc    DWORD PTR [edi],edi
  41ab65:	mov    eax,ds:0x99d73dad
  41ab6a:	cmp    DWORD PTR [edx-0x1a],edx
  41ab6d:	adc    ebp,DWORD PTR [edi+0x2d]
  41ab70:	and    BYTE PTR [esi],al
  41ab72:	xor    DWORD PTR [edi],edi
  41ab74:	inc    edi
  41ab75:	sub    bh,0x7f
  41ab78:	add    BYTE PTR es:[edx+0x455ed993],0xbc
  41ab80:	fnstcw WORD PTR [ebx]
  41ab82:	(bad)
  41ab86:	and    BYTE PTR [edx-0x743285c2],0x64
  41ab8d:	and    dh,BYTE PTR [ebx+0xbca88cd]
  41ab93:	adc    BYTE PTR [ebx+eax*8],0xc5
  41ab97:	pusha  
  41ab98:	rcl    dh,1
  41ab9a:	js     0x41ab3b
  41ab9c:	pop    es
  41ab9d:	mov    bl,0xe0
  41ab9f:	mov    edi,DWORD PTR [ecx-0x18566ad5]
  41aba5:	stos   DWORD PTR es:[edi],eax
  41aba6:	or     al,0x97
  41aba8:	pop    eax
  41aba9:	out    dx,al
  41abaa:	stos   BYTE PTR es:[edi],al
  41abab:	cmp    dh,BYTE PTR ds:0xbeb4824d
  41abb1:	adc    DWORD PTR [esi+0x3a],ebp
  41abb4:	rcr    bh,1
  41abb6:	cwde   
  41abb7:	loop   0x41abf8
  41abb9:	xchg   ecx,eax
  41abba:	adc    al,0xbd
  41abbc:	clc    
  41abbd:	and    DWORD PTR [eax-0x5b998493],esp
  41abc3:	mov    esp,0x5e720653
  41abc8:	not    esi
  41abca:	dec    esp
  41abcb:	pop    ebp
  41abcc:	push   ebx
  41abcd:	jb     0x41ac2e
  41abcf:	sti    
  41abd0:	jae    0x41ab57
  41abd2:	sar    DWORD PTR [eax+eiz*4-0x33],0x59
  41abd7:	test   ah,bl
  41abd9:	mov    cl,BYTE PTR [edi]
  41abdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abdc:	cmp    bl,BYTE PTR [ecx]
  41abde:	push   ecx
  41abdf:	sti    
  41abe0:	(bad)  
  41abe1:	and    BYTE PTR [edx+0x166ac468],dh
  41abe7:	and    BYTE PTR [edx],ch
  41abe9:	ret    0x3a39
  41abec:	xchg   BYTE PTR ds:0x57ba518c,bl
  41abf2:	sub    esi,DWORD PTR [edi-0x4e]
  41abf5:	dec    ecx
  41abf6:	inc    edx
  41abf7:	or     al,0x1e
  41abf9:	aam    0x3e
  41abfb:	fstp   QWORD PTR [ebx+0x6d765dcc]
  41ac01:	lock jns 0x41abf5
  41ac04:	inc    esi
  41ac05:	addr16 aas 
  41ac07:	sbb    DWORD PTR [eax+0x59],ecx
  41ac0a:	cmp    eax,0x3416f834
  41ac0f:	mov    BYTE PTR [edi-0x1740021b],dl
  41ac15:	aad    0x99
  41ac17:	imul   ebp,eax,0xffffffa9
  41ac1a:	(bad)  
  41ac1b:	dec    ecx
  41ac1c:	repz ds jp 0x41abed
  41ac20:	out    0x3,eax
  41ac22:	and    BYTE PTR gs:[edx],bl
  41ac25:	scas   al,BYTE PTR es:[edi]
  41ac26:	(bad)  
  41ac27:	cmc    
  41ac28:	test   ecx,edi
  41ac2a:	imul   eax,DWORD PTR [ecx-0x4d],0x143c4b56
  41ac31:	mov    edx,0xcbc6f746
  41ac36:	pop    es
  41ac37:	call   0x20d4:0x63fba321
  41ac3e:	jbe    0x41ac69
  41ac40:	pop    es
  41ac41:	sub    eax,0x90c77f05
  41ac46:	adc    ch,BYTE PTR [ebp+0x6ffca0bf]
  41ac4c:	inc    edi
  41ac4d:	sbb    DWORD PTR [ecx],0xfffffff3
  41ac50:	in     eax,dx
  41ac51:	mov    WORD PTR [ebx-0x5e],fs
  41ac54:	mov    dl,0x99
  41ac56:	popa   
  41ac57:	push   es
  41ac58:	sti    
  41ac59:	xor    eax,0x119c88c0
  41ac5e:	dec    DWORD PTR [ebp-0x592e20b8]
  41ac64:	daa    
  41ac65:	push   ss
  41ac66:	push   0xedfae289
  41ac6b:	cmp    al,0x48
  41ac6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac6e:	xchg   ecx,eax
  41ac6f:	jmp    0x41acdb
  41ac71:	dec    esi
  41ac72:	out    dx,eax
  41ac73:	data16 or al,0x6d
  41ac76:	sub    ch,dh
  41ac78:	retf   
  41ac79:	adc    DWORD PTR [ebx-0xe],esi
  41ac7c:	mov    ecx,0xcf397fc1
  41ac81:	dec    eax
  41ac82:	call   0xcb:0xe21dbdfd
  41ac89:	aas    
  41ac8a:	mov    ds:0x67fbbaa7,al
  41ac8f:	mov    ebx,0xfc6694c1
  41ac94:	icebp  
  41ac95:	pusha  
  41ac96:	sub    al,0x5e
  41ac98:	outs   dx,BYTE PTR ds:[esi]
  41ac99:	pop    ecx
  41ac9a:	xchg   DWORD PTR [eax],ebp
  41ac9c:	mov    WORD PTR [eax+ebp*2+0x64cd5d81],gs
  41aca3:	mov    BYTE PTR [ebp+ecx*2-0x75],ah
  41aca7:	or     al,0xb2
  41aca9:	mov    ch,0xe1
  41acab:	shr    edi,0x47
  41acae:	hlt    
  41acaf:	rcl    DWORD PTR [ebx-0x55172e32],0xe6
  41acb6:	sbb    al,0x84
  41acb8:	jns    0x41ad21
  41acba:	scas   al,BYTE PTR es:[edi]
  41acbb:	pop    eax
  41acbc:	pop    ss
  41acbd:	jp     0x41acbf
  41acbf:	mov    ebx,0x8cced2dc
  41acc4:	lds    edx,FWORD PTR [ebx+ebp*1]
  41acc7:	xor    al,0x47
  41acc9:	cwde   
  41acca:	add    ah,BYTE PTR [ecx-0x60]
  41accd:	pop    ss
  41acce:	push   cs
  41accf:	cmp    al,0xfa
  41acd1:	jg     0x41acde
  41acd3:	pop    ebp
  41acd4:	inc    edx
  41acd5:	enter  0x65e8,0xf9
  41acd9:	cwde   
  41acda:	xor    bl,bh
  41acdc:	cdq    
  41acdd:	sub    DWORD PTR [edi],eax
  41acdf:	fcmovb st,st(3)
  41ace1:	gs mov al,0xbb
  41ace4:	mov    ecx,0x97e60e4
  41ace9:	xor    ch,BYTE PTR [ecx]
  41aceb:	xor    BYTE PTR [ecx+0xbb2415d],al
  41acf1:	push   esi
  41acf2:	dec    DWORD PTR [eax-0x70]
  41acf5:	mov    ebx,0x72b279ec
  41acfa:	rol    DWORD PTR [eax-0x759dbf27],cl
  41ad00:	mov    ah,0x1a
  41ad02:	shl    BYTE PTR [edi-0x24],0xbf
  41ad06:	loope  0x41acd8
  41ad08:	retf   0xf79f
  41ad0b:	fs pop eax
  41ad0d:	bound  eax,QWORD PTR ds:0xdf5e12a7
  41ad13:	inc    ebx
  41ad14:	int    0x58
  41ad16:	outs   dx,BYTE PTR ds:[esi]
  41ad18:	and    bh,ah
  41ad1a:	js     0x41acde
  41ad1c:	call   0xf44e276c
  41ad21:	mov    cl,0x6d
  41ad23:	enter  0x94f6,0x69
  41ad27:	arpl   WORD PTR [eax+0x2c21721],di
  41ad2d:	je     0x41ad2e
  41ad2f:	out    dx,al
  41ad30:	xchg   al,cl
  41ad32:	mov    esi,0xabe429c3
  41ad37:	pushf  
  41ad38:	push   cs
  41ad39:	cld    
  41ad3a:	out    0x8e,al
  41ad3c:	adc    al,0xcc
  41ad3e:	pop    es
  41ad3f:	aad    0x6f
  41ad41:	pop    ebx
  41ad42:	lock bound ebp,QWORD PTR [ebp+0x5c]
  41ad46:	jo     0x41ada3
  41ad48:	loopne 0x41acdd
  41ad4a:	ins    DWORD PTR es:[edi],dx
  41ad4b:	inc    eax
  41ad4c:	push   ecx
  41ad4d:	inc    ebp
  41ad4e:	pop    es
  41ad4f:	inc    BYTE PTR [esi+0x7264855d]
  41ad55:	inc    ebx
  41ad56:	mov    al,ds:0xc3a40f29
  41ad5b:	push   ebx
  41ad5c:	adc    eax,0x25b31be
  41ad61:	cmp    DWORD PTR [edi+0x101e4c8f],0xffffffee
  41ad68:	shr    DWORD PTR [ebx+0x6f48ee88],0x9f
  41ad6f:	mov    dh,0x4b
  41ad71:	dec    ecx
  41ad72:	pop    ds
  41ad73:	ret    0x3907
  41ad76:	or     al,0xb8
  41ad78:	sub    BYTE PTR [edx+esi*4],cl
  41ad7b:	ror    DWORD PTR [ebx+edi*2],1
  41ad7e:	pop    ds
  41ad7f:	test   DWORD PTR [ebx+0x23],0xc4c32461
  41ad86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad87:	aas    
  41ad88:	jecxz  0x41ad4b
  41ad8a:	retf   
  41ad8b:	ins    DWORD PTR es:[edi],dx
  41ad8c:	sbb    al,0x64
  41ad8e:	push   ebp
  41ad8f:	push   edx
  41ad90:	jmp    0x8b1f:0xa28d4e2b
  41ad97:	mov    ds,WORD PTR [edi+0x35b00c2d]
  41ad9d:	xchg   esi,eax
  41ad9e:	mov    BYTE PTR [edx+ebx*4-0x1f],ah
  41ada2:	adc    DWORD PTR [esi+esi*2-0x4c9cb71c],ebp
  41ada9:	sti    
  41adaa:	rcl    ch,1
  41adac:	xor    al,0x31
  41adae:	shl    DWORD PTR [ecx],cl
  41adb0:	mov    cs,ecx
  41adb2:	or     BYTE PTR [esi-0x51],cl
  41adb5:	jne    0x41ada3
  41adb7:	xchg   DWORD PTR [esi+0x57fc2ac8],ecx
  41adbd:	cmp    eax,0x218c8ed0
  41adc2:	pop    edx
  41adc3:	rcl    BYTE PTR [ebx*2+0x38681f34],0x3e
  41adcb:	(bad)  
  41adcc:	push   ss
  41adcd:	mov    edi,ds
  41adcf:	(bad)  
  41add0:	fincstp 
  41add2:	jns    0x41ad71
  41add4:	jne    0x41ad67
  41add6:	(bad)  
  41add8:	jae    0x41ad95
  41adda:	aas    
  41addb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41addc:	fcomp  DWORD PTR [ecx+ecx*2-0x20ffd6c9]
  41ade3:	adc    BYTE PTR [ecx],al
  41ade5:	loop   0x41ad70
  41ade7:	and    al,0x21
  41ade9:	aad    0xb4
  41adeb:	popa   
  41adec:	sahf   
  41aded:	pop    ss
  41adee:	imul   edi,esp,0x71
  41adf1:	in     eax,dx
  41adf2:	push   esi
  41adf3:	dec    edx
  41adf4:	or     DWORD PTR [ecx-0x1c],0x1ac94c5e
  41adfb:	enter  0x7506,0x19
  41adff:	mov    esi,0x2422b4f9
  41ae04:	sbb    bh,cl
  41ae06:	out    dx,eax
  41ae07:	pop    ecx
  41ae08:	adc    eax,0xabf9aaf1
  41ae0d:	jmp    0xf0ec4b1d
  41ae12:	mov    esi,0x1e0c5fa7
  41ae17:	enter  0xda94,0xdc
  41ae1b:	or     ebx,esi
  41ae1d:	shl    DWORD PTR [eax],1
  41ae1f:	jnp    0x41ae6f
  41ae21:	sahf   
  41ae22:	mov    eax,ds:0x47c2ad62
  41ae27:	xor    ecx,DWORD PTR [ebp+0x6de87106]
  41ae2d:	sub    BYTE PTR [ebx-0x7c],dl
  41ae30:	call   0x6819:0x38ae9a8b
  41ae37:	jbe    0x41ae5c
  41ae39:	push   0xffffff94
  41ae3b:	dec    ebx
  41ae3c:	dec    ecx
  41ae3d:	scas   al,BYTE PTR es:[edi]
  41ae3e:	imul   ebx,esi,0x40
  41ae41:	push   ds
  41ae42:	std    
  41ae43:	and    al,0xaa
  41ae45:	leave  
  41ae46:	dec    edi
  41ae47:	mov    ah,0x75
  41ae49:	scas   eax,DWORD PTR es:[edi]
  41ae4a:	cmp    DWORD PTR [eax+0x2dd33c3e],eax
  41ae50:	jo     0x41adf7
  41ae52:	dec    ax
  41ae54:	cwde   
  41ae55:	inc    esp
  41ae56:	jns    0x41aec7
  41ae58:	mov    edx,0x7ce188d8
  41ae5d:	imul   ecx,DWORD PTR [ecx+esi*1],0xffffff89
  41ae61:	cli    
  41ae62:	gs (bad) 
  41ae64:	scas   eax,DWORD PTR es:[edi]
  41ae65:	push   edi
  41ae66:	jmp    0x1700:0x54eb5184
  41ae6d:	jmp    0xdf7f711d
  41ae72:	or     edx,edx
  41ae74:	lock ss call 0x8ad8:0x5e4b9297
  41ae7d:	(bad)  
  41ae7e:	xchg   ebx,eax
  41ae7f:	jbe    0x41aedf
  41ae81:	arpl   di,dx
  41ae83:	pop    edi
  41ae84:	pop    eax
  41ae85:	inc    esi
  41ae86:	fbld   TBYTE PTR [edi]
  41ae88:	xchg   ebx,eax
  41ae89:	xor    esp,DWORD PTR [ecx+0x7ef9edf8]
  41ae8f:	pop    ss
  41ae90:	mov    ecx,0xbf401212
  41ae95:	jecxz  0x41ae94
  41ae97:	push   DWORD PTR [edi+0xdd46fa1]
  41ae9d:	aas    
  41ae9e:	loope  0x41ae30
  41aea0:	ins    DWORD PTR es:[edi],dx
  41aea1:	(bad)  
  41aea2:	xor    bh,BYTE PTR [esi]
  41aea4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aea5:	rol    DWORD PTR [edi],cl
  41aea7:	xchg   ebp,eax
  41aea8:	(bad)  
  41aea9:	mov    dh,0xa8
  41aeab:	lods   eax,DWORD PTR ds:[esi]
  41aeac:	inc    edi
  41aead:	cwde   
  41aeae:	and    ebp,edi
  41aeb0:	daa    
  41aeb1:	dec    esi
  41aeb2:	sub    BYTE PTR [edi-0x1baf7f1b],dl
  41aeb8:	iret   
  41aeb9:	in     al,0x4f
  41aebb:	mov    dl,0x33
  41aebd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aebe:	outs   dx,BYTE PTR ds:[esi]
  41aebf:	(bad)  
  41aec0:	ins    DWORD PTR es:[edi],dx
  41aec1:	inc    edx
  41aec2:	push   ds
  41aec3:	xchg   esi,eax
  41aec4:	and    edi,DWORD PTR [edx+0x7b]
  41aec7:	dec    eax
  41aec8:	setne  BYTE PTR [edi+0x785ea10f]
  41aecf:	fwait
  41aed0:	mov    dl,0x8a
  41aed2:	js     0x41ae5a
  41aed4:	in     al,0xe5
  41aed6:	fcmovnb st,st(3)
  41aed8:	sub    DWORD PTR [ebx+ecx*1-0x6ae276b7],ebp
  41aedf:	ficom  WORD PTR [eax-0x142aca20]
  41aee5:	iret   
  41aee6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aee7:	cmp    ebx,DWORD PTR [eax+0x7a]
  41aeea:	or     DWORD PTR [esi+0x124d2420],0x67
  41aef1:	rol    DWORD PTR [esi],cl
  41aef3:	in     al,0x79
  41aef5:	daa    
  41aef6:	sub    al,BYTE PTR [eax+0x78]
  41aef9:	and    BYTE PTR [edx-0x5a0b088f],ch
  41aeff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af00:	push   esp
  41af01:	outs   dx,DWORD PTR ds:[esi]
  41af02:	lea    ecx,[esi]
  41af04:	call   0xd694f720
  41af09:	and    BYTE PTR [ecx+0x7c16a6a4],ch
  41af0f:	mov    eax,ds:0x1db3bd7c
  41af14:	add    esp,DWORD PTR [edi]
  41af16:	mov    WORD PTR ds:0x5c6ed2ec,fs
  41af1c:	mov    eax,ds:0xeb65540a
  41af21:	fwait
  41af22:	dec    ebx
  41af23:	into   
  41af24:	cmp    ecx,DWORD PTR [esi]
  41af26:	cli    
  41af27:	xor    bl,ch
  41af29:	mov    WORD PTR [edi+ebx*2],ds
  41af2c:	push   es
  41af2d:	pop    edi
  41af2e:	ret    0x1822
  41af31:	add    DWORD PTR [ebx+eiz*8+0x37],eax
  41af35:	out    0x53,al
  41af37:	jae    0x41af10
  41af39:	sbb    eax,0x5cf1b87b
  41af3e:	popf   
  41af3f:	xor    al,0xd6
  41af41:	push   edx
  41af42:	fwait
  41af43:	std    
  41af44:	outs   dx,BYTE PTR ds:[esi]
  41af45:	fnstsw WORD PTR [edi-0x4ba0dfe5]
  41af4b:	iret   
  41af4c:	popa   
  41af4d:	and    al,0xab
  41af4f:	and    BYTE PTR [eax+0x2e],al
  41af52:	mov    bl,0xaf
  41af54:	sbb    al,0x67
  41af56:	bound  edi,QWORD PTR [ebx-0xfee9119]
  41af5c:	xchg   ebp,eax
  41af5d:	jmp    0x41afb7
  41af5f:	pop    es
  41af60:	xor    eax,DWORD PTR ds:0xd11ab4ec
  41af66:	mov    dh,0xa1
  41af68:	call   0xeef1cbc
  41af6d:	inc    esp
  41af6e:	dec    ebx
  41af6f:	jo     0x41af12
  41af71:	aam    0x37
  41af73:	nop
  41af74:	jno    0x41af5f
  41af76:	pop    esi
  41af77:	xchg   edx,eax
  41af78:	xlat   BYTE PTR ds:[ebx]
  41af79:	enter  0x9d12,0xfa
  41af7d:	sbb    dh,BYTE PTR [edx]
  41af7f:	inc    eax
  41af80:	cs (bad) 
  41af82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af83:	cmc    
  41af84:	jno    0x41aff5
  41af86:	ins    BYTE PTR es:[edi],dx
  41af87:	dec    eax
  41af88:	xchg   ebp,eax
  41af89:	jmp    0x9aae:0xc7237e4a
  41af90:	fcomp  QWORD PTR [ecx+0x5]
  41af93:	sub    BYTE PTR [edi],bh
  41af95:	dec    edi
  41af96:	cmp    al,0xbb
  41af98:	lea    edx,[esi+0x35f5c514]
  41af9e:	push   edi
  41af9f:	test   BYTE PTR ds:0x87121259,bl
  41afa5:	inc    ebp
  41afa6:	mov    ecx,0xd69800d0
  41afab:	loop   0x41aff0
  41afad:	int3   
  41afae:	adc    al,BYTE PTR [esi-0x2e3a625e]
  41afb4:	fisub  DWORD PTR [ebx]
  41afb6:	fdiv   DWORD PTR [ebx-0x1b]
  41afb9:	mov    fs,WORD PTR [ecx]
  41afbb:	mov    edi,0x842b3993
  41afc0:	scas   al,BYTE PTR es:[edi]
  41afc1:	xor    edx,edx
  41afc3:	lods   al,BYTE PTR ds:[esi]
  41afc4:	add    eax,DWORD PTR [esp+edx*8]
  41afc7:	mov    bh,0x1f
  41afc9:	loope  0x41afa9
  41afcb:	sub    BYTE PTR [ebx-0x4f63813c],dh
  41afd1:	or     eax,0xf65b053
  41afd6:	push   ebp
  41afd7:	shr    ch,0xb
  41afda:	sub    ebp,DWORD PTR [edi+0x5a]
  41afdd:	mov    ah,0xa9
  41afdf:	ja     0x41af8d
  41afe1:	call   DWORD PTR fs:[ecx-0x69]
  41afe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afe6:	out    0x18,eax
  41afe8:	xchg   BYTE PTR [esi-0x1f],ah
  41afeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afec:	ins    BYTE PTR es:[edi],dx
  41afed:	add    edx,DWORD PTR [ebp-0x65fd587c]
  41aff3:	mov    ds:0x7e5f616c,al
  41aff8:	sar    edx,1
  41affa:	jno    0x41b07b
  41affc:	ret    
  41affd:	ret    0xef2c
  41b000:	jl     0x41b034
  41b002:	push   esi
  41b003:	cmp    eax,0x1a25117f
  41b008:	dec    esp
  41b009:	and    al,0xd5
  41b00b:	dec    eax
  41b00c:	imul   ebp,DWORD PTR [ebx-0x6719d8b7],0x57ba0e4d
  41b016:	fld    DWORD PTR [edx-0x2efe5d40]
  41b01c:	pop    ds
  41b01d:	push   cs
  41b01e:	xor    al,0xbe
  41b020:	pop    esi
  41b021:	mov    bh,0x21
  41b023:	jae    0x41b023
  41b025:	sbb    DWORD PTR [edi+0x45ad7554],eax
  41b02b:	add    DWORD PTR [esi-0x53],ebx
  41b02e:	je     0x41b015
  41b030:	rol    DWORD PTR [eax-0x67],cl
  41b033:	mov    dl,0x27
  41b035:	mov    esi,0xf9e9ca61
  41b03a:	sbb    al,0x9a
  41b03c:	add    al,0x94
  41b03e:	cmc    
  41b03f:	inc    ecx
  41b040:	sti    
  41b041:	(bad)  
  41b043:	push   0xde2e9274
  41b048:	lahf   
  41b049:	cld    
  41b04a:	sbb    eax,0x51855ce6
  41b04f:	int    0xe5
  41b051:	clc    
  41b052:	aaa    
  41b053:	jp     0x41b0d2
  41b055:	adc    bh,BYTE PTR [esi]
  41b057:	pop    eax
  41b058:	fiadd  WORD PTR [eax-0x43]
  41b05b:	dec    edi
  41b05c:	nop
  41b05d:	xchg   DWORD PTR [ebx-0x6493fc65],esi
  41b063:	push   ds
  41b064:	or     DWORD PTR [edx+0xd],edx
  41b067:	xor    esi,DWORD PTR [edx]
  41b069:	xor    bl,al
  41b06b:	mov    ecx,0x3954597e
  41b070:	ror    BYTE PTR [ecx+0x1],1
  41b073:	pop    edi
  41b074:	xor    DWORD PTR ds:0x3ebadcd4,0x72
  41b07b:	retf   0xfdd7
  41b07e:	mov    ah,0x44
  41b080:	sub    eax,0xf2c4858b
  41b085:	xor    ah,BYTE PTR [ecx+0x7b]
  41b088:	adc    eax,0xf8851312
  41b08d:	xor    cl,BYTE PTR [ebp+0x39d8dc60]
  41b093:	push   es
  41b094:	(bad)  
  41b095:	cmc    
  41b096:	xchg   edx,eax
  41b097:	push   0xffffffdb
  41b099:	cmp    al,0xb3
  41b09b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b09c:	mov    dh,0x41
  41b09e:	and    eax,0x6bcc57cc
  41b0a3:	push   0x45
  41b0a5:	rol    BYTE PTR [ebp+0x50e7fc8d],cl
  41b0ab:	mov    cl,0x17
  41b0ad:	xchg   BYTE PTR [edi+edi*4+0x40],cl
  41b0b1:	lahf   
  41b0b2:	shr    DWORD PTR [edx],cl
  41b0b4:	xor    BYTE PTR [esi+0x14],ch
  41b0b7:	pop    ebx
  41b0b8:	sbb    ah,dh
  41b0ba:	hlt    
  41b0bb:	repz mov dh,dh
  41b0be:	jge    0x41b0bd
  41b0c0:	ror    DWORD PTR [eax+eax*8-0x1caf8dd6],1
  41b0c7:	cmp    BYTE PTR [esi-0x6f8ef28e],0x17
  41b0ce:	sub    al,0x28
  41b0d0:	std    
  41b0d1:	xchg   DWORD PTR [ecx],ebp
  41b0d3:	push   edx
  41b0d4:	aam    0x21
  41b0d6:	inc    esp
  41b0d7:	aad    0x9e
  41b0d9:	push   ebx
  41b0da:	retf   0xd74a
  41b0dd:	mov    WORD PTR [esi],ds
  41b0df:	pop    ss
  41b0e0:	jg     0x41b0b0
  41b0e2:	fcmovnu st,st(5)
  41b0e4:	mov    WORD PTR [ebx+0x28ba2e42],?
  41b0ea:	or     DWORD PTR [ecx+0x4168a8da],esi
  41b0f0:	and    esp,0x11
  41b0f3:	cs xchg ebp,eax
  41b0f5:	fistp  DWORD PTR [ebx+0x23067bd3]
  41b0fb:	pop    edi
  41b0fc:	push   es
  41b0fd:	mov    ?,WORD PTR [edx]
  41b0ff:	data16 and al,0x9
  41b102:	xchg   ecx,eax
  41b103:	mov    esp,0x4e67a9c3
  41b108:	add    cl,0x21
  41b10b:	sub    al,0x8f
  41b10d:	xor    BYTE PTR [eax],dh
  41b10f:	mov    edi,0xe2248059
  41b114:	rol    DWORD PTR [esi-0x61],0xe0
  41b118:	push   edi
  41b119:	ror    BYTE PTR [ecx],0x65
  41b11c:	das    
  41b11d:	outs   dx,DWORD PTR ds:[esi]
  41b11e:	push   esi
  41b11f:	imul   edx,DWORD PTR [ebx+eax*4+0x1c],0xe4718a58
  41b127:	fs stc 
  41b129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b12a:	mov    es,WORD PTR [eax-0x7a]
  41b12d:	loope  0x41b1aa
  41b12f:	cmp    eax,0xa1ff600c
  41b134:	push   ebx
  41b135:	(bad)  
  41b136:	jb     0x41b142
  41b138:	scas   eax,DWORD PTR es:[edi]
  41b139:	add    dl,dh
  41b13b:	lods   eax,DWORD PTR ds:[esi]
  41b13c:	dec    eax
  41b13d:	or     cl,0xe3
  41b140:	dec    eax
  41b141:	popf   
  41b142:	scas   eax,DWORD PTR es:[edi]
  41b143:	or     al,0xce
  41b145:	js     0x41b154
  41b147:	ins    BYTE PTR es:[edi],dx
  41b148:	xlat   BYTE PTR ds:[ebx]
  41b149:	and    DWORD PTR [edx+0x2e],edi
  41b14c:	pop    ss
  41b14d:	xchg   esi,eax
  41b14e:	sub    esp,ebx
  41b150:	call   0x4ff:0xe8a3b65a
  41b157:	dec    edx
  41b158:	xor    al,0x27
  41b15a:	xchg   ecx,eax
  41b15b:	popa   
  41b15c:	push   esp
  41b15d:	sbb    ecx,0xfbf6c15a
  41b163:	dec    esp
  41b164:	imul   esi,eax,0x3b
  41b167:	ret    0x5ebe
  41b16a:	(bad)  
  41b16b:	jl     0x41b117
  41b16d:	pop    ds
  41b16e:	outs   dx,BYTE PTR ds:[esi]
  41b16f:	inc    eax
  41b170:	pop    edx
  41b171:	mov    al,0x69
  41b173:	jp     0x41b109
  41b175:	push   ecx
  41b176:	inc    esi
  41b177:	ins    DWORD PTR es:[edi],dx
  41b178:	push   edi
  41b179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b17a:	fst    st(2)
  41b17c:	pop    eax
  41b17d:	popf   
  41b17e:	dec    ebx
  41b17f:	dec    edi
  41b180:	push   esp
  41b181:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b182:	stc    
  41b183:	jb     0x41b18d
  41b185:	add    ah,BYTE PTR [esp+ebp*1+0x7a]
  41b189:	call   0xea18:0x426a35c
  41b190:	mov    esp,0x60bae9f2
  41b195:	retf   0x1d79
  41b198:	xor    DWORD PTR [ecx],edi
  41b19a:	sub    al,0x82
  41b19c:	sub    DWORD PTR [edi+0x456d3c30],0x85578697
  41b1a6:	dec    esp
  41b1a7:	adc    eax,0xc4c7f6c5
  41b1ac:	adc    al,0xc0
  41b1ae:	add    BYTE PTR [eax-0x505cb4c4],ah
  41b1b4:	dec    eax
  41b1b5:	ja     0x41b205
  41b1b7:	xchg   edx,eax
  41b1b8:	add    DWORD PTR [eax-0x26de6233],edi
  41b1be:	push   0x3b
  41b1c0:	dec    edx
  41b1c1:	jge    0x41b226
  41b1c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1c4:	jae    0x41b1d4
  41b1c6:	cmp    ah,0x95
  41b1c9:	push   ss
  41b1ca:	cmp    BYTE PTR [esi-0x188fce2f],cl
  41b1d0:	dec    esi
  41b1d1:	jl     0x41b1ab
  41b1d3:	adc    ah,cl
  41b1d5:	sbb    eax,0x49bbcbb1
  41b1da:	push   0xb
  41b1dc:	mov    ds:0x8573d452,eax
  41b1e1:	call   0x66315d2a
  41b1e6:	sub    ebp,DWORD PTR [ebp-0x68b33e29]
  41b1ec:	js     0x41b245
  41b1ee:	lds    edx,FWORD PTR fs:[esi+0x5ff54a55]
  41b1f5:	iret   
  41b1f6:	push   ds
  41b1f7:	push   esi
  41b1f8:	xchg   ebp,eax
  41b1f9:	sub    eax,ebx
  41b1fb:	dec    eax
  41b1fc:	lock repz sbb al,bh
  41b200:	(bad)  
  41b201:	adc    BYTE PTR [edi-0x29811b90],dh
  41b207:	loop   0x41b22b
  41b209:	or     BYTE PTR [esi-0x26],dh
  41b20c:	les    esi,FWORD PTR [ecx-0x263e1499]
  41b212:	mov    esp,DWORD PTR [edx-0x67]
  41b215:	mov    bl,0xf
  41b217:	lds    eax,FWORD PTR [ecx-0x24]
  41b21a:	mov    fs,WORD PTR [eax+ecx*8]
  41b21d:	lods   eax,DWORD PTR ds:[esi]
  41b21e:	add    al,BYTE PTR [edi+0x7edbc36c]
  41b224:	stos   DWORD PTR es:[edi],eax
  41b225:	ds dec ebp
  41b227:	outs   dx,DWORD PTR ds:[esi]
  41b228:	retf   
  41b229:	cmovo  esp,DWORD PTR [esi+0x615ccf21]
  41b230:	xchg   DWORD PTR [esi-0x7c002ff8],esp
  41b236:	sub    eax,0xdd6261e3
  41b23b:	and    al,0x8e
  41b23d:	cdq    
  41b23e:	jge    0x41b1c8
  41b240:	aad    0xe4
  41b242:	call   0x9f5b:0x474f070e
  41b249:	ins    BYTE PTR es:[edi],dx
  41b24a:	xchg   edi,eax
  41b24b:	loope  0x41b22b
  41b24d:	shr    DWORD PTR [ebp-0x175a00e1],cl
  41b253:	adc    DWORD PTR [esi+0x30499d20],edx
  41b259:	xchg   BYTE PTR [eax+0x304e0093],al
  41b25f:	test   ah,ch
  41b261:	fsubr  QWORD PTR [ebp-0x2b]
  41b264:	and    BYTE PTR cs:[eax+ecx*4],cl
  41b268:	mov    bh,0x4e
  41b26a:	int    0x23
  41b26c:	xchg   ecx,eax
  41b26d:	jg     0x41b220
  41b26f:	loope  0x41b21e
  41b271:	xchg   esi,eax
  41b272:	sbb    dl,al
  41b274:	rol    BYTE PTR [ebp+0x76],cl
  41b277:	xchg   esp,eax
  41b278:	xor    eax,0x5d3b3641
  41b27d:	ja     0x41b2e8
  41b27f:	popf   
  41b280:	or     DWORD PTR [ebx+0x29135498],ecx
  41b286:	mov    ds:0x5b984c63,eax
  41b28b:	push   0x69
  41b28d:	ficom  DWORD PTR [esi+ebp*4]
  41b290:	push   es
  41b291:	inc    edi
  41b292:	sbb    edx,DWORD PTR [ebp+0x70]
  41b295:	(bad)  
  41b296:	sub    cl,bh
  41b298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b299:	ficomp DWORD PTR [edx+0x9]
  41b29c:	ror    DWORD PTR [esi-0x7e],cl
  41b29f:	or     al,0x71
  41b2a1:	dec    eax
  41b2a2:	cmp    ecx,esi
  41b2a4:	sbb    BYTE PTR [esi+0x1c],cl
  41b2a7:	jecxz  0x41b2fb
  41b2a9:	and    DWORD PTR [edi+0x9],esp
  41b2ac:	das    
  41b2ad:	or     eax,DWORD PTR [edi+0x34]
  41b2b0:	mov    esp,0x9cfc6f54
  41b2b5:	jecxz  0x41b327
  41b2b7:	daa    
  41b2b8:	enter  0xdf36,0x84
  41b2bc:	test   al,0x17
  41b2be:	mov    ah,0x61
  41b2c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2c1:	mov    ah,BYTE PTR es:[esi]
  41b2c4:	outs   dx,DWORD PTR ds:[esi]
  41b2c5:	icebp  
  41b2c6:	cmp    ebx,edx
  41b2c8:	push   eax
  41b2c9:	push   ecx
  41b2ca:	popa   
  41b2cb:	scas   eax,DWORD PTR es:[edi]
  41b2cc:	sub    al,0x41
  41b2ce:	imul   ecx,DWORD PTR [esi],0xffffffee
  41b2d1:	mov    al,0x6a
  41b2d3:	daa    
  41b2d4:	cmp    al,0x13
  41b2d6:	push   0xfd485e52
  41b2db:	ret    
  41b2dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2dd:	jmp    FWORD PTR [ebp-0x7b99dc87]
  41b2e3:	sbb    al,0x34
  41b2e5:	adc    edi,esp
  41b2e7:	mov    esi,0x4f6758e9
  41b2ec:	mov    WORD PTR [eax-0x2b],fs
  41b2ef:	daa    
  41b2f0:	adc    DWORD PTR [ebx-0x3f3480bd],ecx
  41b2f6:	out    0x63,al
  41b2f8:	mov    WORD PTR [ebp+0x6b],cs
  41b2fb:	xchg   ecx,eax
  41b2fc:	inc    ebx
  41b2fd:	cwde   
  41b2fe:	pop    esp
  41b2ff:	sbb    DWORD PTR [edi],esp
  41b301:	adc    al,BYTE PTR [ebx-0x7a758c54]
  41b307:	pop    ecx
  41b308:	xchg   DWORD PTR [edx],ecx
  41b30a:	das    
  41b30b:	xor    BYTE PTR [esi],bh
  41b30d:	and    BYTE PTR [edx+0x6b90df03],0x31
  41b314:	std    
  41b315:	adc    eax,0x9b7e48b
  41b31a:	mov    bh,0x68
  41b31c:	cs inc ebx
  41b31e:	cld    
  41b31f:	out    0xdf,al
  41b321:	and    dl,BYTE PTR [edx]
  41b323:	sbb    DWORD PTR [eax],0xffffffe3
  41b326:	xor    DWORD PTR [eax],ebx
  41b328:	push   edx
  41b329:	icebp  
  41b32a:	ins    BYTE PTR es:[edi],dx
  41b32b:	jl     0x41b370
  41b32d:	dec    ecx
  41b32e:	push   ebp
  41b32f:	cmp    eax,0xa819ac4a
  41b334:	sbb    BYTE PTR [eax+eax*8+0x7d],ch
  41b338:	sahf   
  41b339:	add    ch,BYTE PTR [ecx-0x74710eca]
  41b33f:	add    bh,BYTE PTR [ebp-0xf]
  41b342:	xor    BYTE PTR [eax+0x4c],ah
  41b345:	add    DWORD PTR [ecx+esi*1],0xffffff99
  41b349:	fidivr DWORD PTR [eax+eiz*1-0x71]
  41b34d:	call   0x866387d9
  41b352:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b353:	inc    esi
  41b354:	punpckhwd mm7,QWORD PTR [edi-0x294bf71f]
  41b35b:	sbb    al,0x51
  41b35d:	xchg   ebx,eax
  41b35e:	mov    ch,0xa5
  41b360:	mov    eax,0x2b8890fe
  41b365:	fcomp  DWORD PTR [edx-0x53]
  41b368:	(bad)  
  41b369:	es mov al,0x95
  41b36c:	dec    ebp
  41b36d:	xchg   edi,eax
  41b36e:	jmp    0x60efb3cc
  41b373:	add    DWORD PTR [ebp-0x3db35a99],edi
  41b379:	(bad)
  41b37c:	xchg   edx,ebp
  41b37e:	cmp    dh,BYTE PTR [ecx]
  41b380:	xor    edx,edi
  41b382:	jmp    0x8f0210ef
  41b387:	out    dx,eax
  41b388:	enter  0x75bc,0x44
  41b38c:	test   al,0xa7
  41b38e:	imul   ecx,DWORD PTR [ebp+0x207d669a],0x7b
  41b395:	inc    esi
  41b396:	add    DWORD PTR [edx-0x7f519b9],ebx
  41b39c:	add    DWORD PTR [edx-0x5d],eax
  41b39f:	in     eax,0xe1
  41b3a1:	shr    ebp,cl
  41b3a3:	scas   eax,DWORD PTR es:[edi]
  41b3a4:	sub    DWORD PTR [ebp+0x1cd781de],ecx
  41b3aa:	scas   eax,DWORD PTR es:[edi]
  41b3ab:	push   ebx
  41b3ac:	add    esp,DWORD PTR [edx+0x1e5043ed]
  41b3b2:	icebp  
  41b3b3:	icebp  
  41b3b4:	lea    ebp,ds:0xf72b3760
  41b3ba:	and    eax,0x27fc2ea6
  41b3bf:	push   edi
  41b3c0:	shl    edi,1
  41b3c2:	imul   DWORD PTR [edi-0x5c8d547c]
  41b3c8:	addr16 icebp 
  41b3ca:	cmp    ch,BYTE PTR [eax]
  41b3cc:	sub    eax,0x80f77607
  41b3d1:	mov    bl,0x67
  41b3d3:	mov    dl,0xae
  41b3d5:	fs jae 0x41b3d8
  41b3d8:	loopne 0x41b397
  41b3da:	push   cs
  41b3db:	(bad)  
  41b3dc:	mov    ebx,0x1290612d
  41b3e1:	pushf  
  41b3e2:	imul   ebx,DWORD PTR [ecx-0x1b93da3d],0xffffff85
  41b3e9:	cmp    ebp,DWORD PTR [esi]
  41b3eb:	pop    esp
  41b3ec:	mov    eax,ds:0x1726ec75
  41b3f1:	sbb    ebx,DWORD PTR [eax+eiz*4-0x1b654f3]
  41b3f8:	arpl   WORD PTR [ebx],sp
  41b3fa:	icebp  
  41b3fb:	addr16 adc esi,0x7a22fc0
  41b402:	jge    0x41b453
  41b404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b405:	mov    dl,0x70
  41b407:	xchg   ebp,eax
  41b408:	dec    ebp
  41b409:	sub    eax,0x90ff7625
  41b40e:	xchg   ebx,eax
  41b40f:	mov    cl,0x9d
  41b411:	dec    edx
  41b412:	push   eax
  41b413:	mov    esi,0x215fe760
  41b418:	jecxz  0x41b3cf
  41b41a:	imul   eax,edx,0x36424a2a
  41b420:	verr   WORD PTR [ebx+0x566837c1]
  41b427:	xor    ebx,DWORD PTR [edi-0x637b1512]
  41b42d:	iret   
  41b42e:	in     eax,dx
  41b42f:	repnz dec ebp
  41b431:	mov    ah,0xdc
  41b433:	dec    esi
  41b434:	add    DWORD PTR [ebx+edi*2],edx
  41b437:	sub    DWORD PTR [esi-0x6451e880],edx
  41b43d:	mov    dh,BYTE PTR [edi+0x7aae648f]
  41b443:	mov    al,ds:0x18bdaddc
  41b448:	scas   eax,DWORD PTR es:[edi]
  41b449:	push   0xbf3f0a9f
  41b44e:	and    BYTE PTR [edi],bh
  41b450:	leave  
  41b451:	loopne 0x41b476
  41b453:	gs or  eax,0x9cdefd90
  41b459:	mov    bl,0xdc
  41b45b:	mov    edi,0xe4c2174f
  41b460:	es scas eax,DWORD PTR es:[edi]
  41b462:	or     DWORD PTR [eax],eax
  41b464:	push   edx
  41b465:	push   edx
  41b466:	shl    DWORD PTR [edx-0x3e],cl
  41b469:	and    DWORD PTR [ebx+0x7a],eax
  41b46c:	jmp    0x5e91b109
  41b471:	stos   BYTE PTR es:[edi],al
  41b472:	pop    edi
  41b473:	out    dx,al
  41b474:	pop    esp
  41b475:	loope  0x41b4b2
  41b477:	xchg   esp,eax
  41b478:	push   eax
  41b479:	gs iretw 
  41b47c:	sti    
  41b47d:	(bad)  
  41b47e:	mov    esp,DWORD PTR [edx+eiz*8+0xb1fc403]
  41b485:	adc    eax,0x30125f3a
  41b48a:	icebp  
  41b48b:	aaa    
  41b48c:	mov    gs,eax
  41b48e:	push   edi
  41b48f:	out    0xc5,eax
  41b491:	dec    ebx
  41b492:	test   eax,0xfd2d3acd
  41b497:	test   al,0xac
  41b499:	test   DWORD PTR [edx-0x3a56647b],ecx
  41b49f:	push   es
  41b4a0:	cmp    bl,dh
  41b4a2:	cmp    dh,BYTE PTR [edi-0x78]
  41b4a5:	push   0xa8792bf7
  41b4aa:	xchg   edi,eax
  41b4ab:	paddq  mm5,QWORD PTR [ecx+esi*8]
  41b4af:	in     al,dx
  41b4b0:	or     bh,BYTE PTR [esi+0x92c88f5]
  41b4b6:	jmp    DWORD PTR [esi-0x3f9bf654]
  41b4bc:	xor    esi,DWORD PTR [ecx-0x1f]
  41b4bf:	je     0x41b53d
  41b4c1:	popa   
  41b4c2:	rcl    DWORD PTR [ebx],1
  41b4c4:	jp     0x41b494
  41b4c6:	je     0x41b4de
  41b4c8:	xor    al,BYTE PTR [edi-0x35e4bd39]
  41b4ce:	sbb    esp,DWORD PTR [edx-0x7914e66d]
  41b4d4:	pusha  
  41b4d5:	and    ch,dh
  41b4d7:	ins    BYTE PTR es:[edi],dx
  41b4d8:	ins    BYTE PTR es:[edi],dx
  41b4d9:	daa    
  41b4da:	hlt    
  41b4db:	xor    BYTE PTR [eax-0x1b5b34dd],ah
  41b4e1:	adc    eax,0x64fe88e5
  41b4e6:	mov    bh,0xa8
  41b4e8:	ins    BYTE PTR es:[edi],dx
  41b4e9:	repnz dec edx
  41b4eb:	cmp    BYTE PTR [ebx],dl
  41b4ed:	cmp    al,0x43
  41b4ef:	outs   dx,DWORD PTR ds:[esi]
  41b4f0:	mov    ds:0xe94d502c,al
  41b4f5:	sbb    DWORD PTR [ecx],0xa42fb58c
  41b4fb:	(bad)  
  41b4fc:	test   al,0xbc
  41b4fe:	enter  0xd1df,0x66
  41b502:	and    DWORD PTR [eax+eax*1-0x726f13de],esi
  41b509:	stc    
  41b50a:	enter  0xaf70,0x73
  41b50e:	call   0x9e36:0xd2f05729
  41b515:	lods   eax,DWORD PTR ds:[esi]
  41b516:	xchg   ebx,eax
  41b517:	adc    dl,bl
  41b519:	mov    dl,BYTE PTR [edi+0x11e92a29]
  41b51f:	mov    dh,0x5e
  41b521:	(bad)  [ebp-0x2a70b624]
  41b527:	aaa    
  41b528:	mov    ecx,0xf8a3e8cb
  41b52d:	sahf   
  41b52e:	inc    esi
  41b52f:	pop    ecx
  41b530:	mov    ds:0xa2a59b3,al
  41b535:	jo     0x41b576
  41b537:	push   ss
  41b538:	not    DWORD PTR [ebp+0x34]
  41b53b:	jmp    0xfcec1688
  41b540:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b541:	retf   0xbed4
  41b544:	dec    esp
  41b545:	pop    esp
  41b546:	mov    eax,0xb68fc813
  41b54b:	and    DWORD PTR [ebp-0x10b00084],esp
  41b551:	or     eax,0x93e9d09e
  41b556:	sbb    al,0xd9
  41b558:	jno    0x41b58d
  41b55a:	not    BYTE PTR [ecx]
  41b55c:	pusha  
  41b55d:	push   cs
  41b55e:	ret    
  41b55f:	or     al,0x2b
  41b561:	lock stos BYTE PTR es:[edi],al
  41b563:	repz push 0x5b
  41b566:	stc    
  41b567:	or     edi,DWORD PTR [esi-0x59ac7344]
  41b56d:	push   eax
  41b56e:	aas    
  41b56f:	jns    0x41b5eb
  41b571:	jmp    0x6a872c01
  41b576:	sub    al,0xa2
  41b578:	and    eax,eax
  41b57a:	dec    esi
  41b57b:	adc    DWORD PTR [esi-0x7e888626],ecx
  41b581:	fcmovbe st,st(5)
  41b583:	xor    BYTE PTR [esi],0xf4
  41b586:	push   edx
  41b587:	sub    eax,0xd8016d7c
  41b58c:	mov    bl,0xb1
  41b58e:	mov    dl,0x51
  41b590:	stos   BYTE PTR es:[edi],al
  41b591:	push   esp
  41b592:	pushf  
  41b593:	fld    TBYTE PTR [eax+0x74]
  41b596:	pop    ss
  41b597:	imul   edi,DWORD PTR [ebx-0x36],0xffffffc0
  41b59b:	nop
  41b59c:	into   
  41b59d:	ss mov bh,0xff
  41b5a0:	adc    DWORD PTR [ecx-0x76],esi
  41b5a3:	sbb    al,0x3e
  41b5a5:	lods   eax,DWORD PTR ds:[esi]
  41b5a6:	push   ds
  41b5a7:	out    dx,eax
  41b5a8:	add    al,dl
  41b5aa:	fldcw  WORD PTR [ebp+0x4d]
  41b5ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5ae:	lea    edi,[eax+0x77]
  41b5b1:	dec    esi
  41b5b2:	jle    0x41b5c8
  41b5b4:	inc    esi
  41b5b5:	sub    ebx,esi
  41b5b7:	sub    BYTE PTR [esi-0x4e481dd7],dl
  41b5bd:	xor    BYTE PTR [edi-0x2e],0xb8
  41b5c1:	dec    ebx
  41b5c2:	inc    ebp
  41b5c3:	icebp  
  41b5c4:	dec    esp
  41b5c5:	fadd   DWORD PTR [ebx-0x74d68555]
  41b5cb:	daa    
  41b5cc:	push   ebx
  41b5cd:	dec    ecx
  41b5ce:	repz inc edx
  41b5d0:	xlat   BYTE PTR ds:[ebx]
  41b5d1:	xor    BYTE PTR [edi],cl
  41b5d3:	fwait
  41b5d4:	push   edi
  41b5d5:	add    DWORD PTR [ecx+0x72],ecx
  41b5d8:	cs push cs
  41b5da:	mov    bh,0x6f
  41b5dc:	push   esi
  41b5dd:	mov    al,BYTE PTR [esi]
  41b5df:	jo     0x41b63d
  41b5e1:	ror    DWORD PTR [ecx+ebp*4+0x32],cl
  41b5e5:	jge    0x41b590
  41b5e7:	icebp  
  41b5e8:	push   ecx
  41b5e9:	and    al,0xad
  41b5eb:	fdiv   st(0),st
  41b5ed:	dec    DWORD PTR [eax-0x4443d78e]
  41b5f3:	aaa    
  41b5f4:	(bad)  
  41b5f6:	push   ds
  41b5f7:	mov    ah,0x26
  41b5f9:	pop    ebx
  41b5fa:	pop    es
  41b5fb:	jmp    0x1304:0x3aa19b50
  41b602:	sti    
  41b603:	in     eax,dx
  41b604:	ins    DWORD PTR es:[edi],dx
  41b605:	lods   al,BYTE PTR fs:[esi]
  41b607:	hlt    
  41b608:	inc    edx
  41b609:	mov    cs,WORD PTR [esi-0x38677cb6]
  41b60f:	cli    
  41b610:	popf   
  41b611:	outs   dx,BYTE PTR ds:[esi]
  41b612:	pop    ebx
  41b613:	push   ds
  41b614:	lock adc al,0xb5
  41b618:	mov    DWORD PTR [ebp-0x4ad25c5a],esp
  41b61e:	lds    edi,FWORD PTR [edx]
  41b620:	repnz inc edx
  41b622:	mov    esp,0x94cc59f1
  41b627:	mov    eax,ds:0x24e81b2a
  41b62c:	aam    0xea
  41b62e:	(bad)  
  41b62f:	std    
  41b630:	(bad)  [esi+0x2dacaad4]
  41b636:	mov    BYTE PTR [ebp-0x56],dh
  41b639:	icebp  
  41b63a:	sbb    esp,DWORD PTR [edx]
  41b63c:	jbe    0x41b5f3
  41b63e:	and    al,0xc6
  41b640:	inc    eax
  41b641:	bound  ebx,QWORD PTR [esi-0x75]
  41b644:	push   ebp
  41b645:	mov    al,0x81
  41b647:	ror    ebp,0xeb
  41b64a:	inc    edx
  41b64b:	add    dh,BYTE PTR [ebx]
  41b64d:	retf   0x4d89
  41b650:	mov    al,0x8b
  41b652:	dec    ebp
  41b653:	or     BYTE PTR [ebx-0x30fc4bab],cl
  41b659:	and    ecx,edx
  41b65b:	mov    DWORD PTR [ebp-0x4c],ecx
  41b65e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b661:	mov    edx,DWORD PTR [ebp-0x48]
  41b664:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b66b:	mov    DWORD PTR [ebp-0x48],ecx
  41b66e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b671:	mov    edx,0xfa5e1528
  41b676:	sub    edx,ecx
  41b678:	add    edx,DWORD PTR [ebp-0x44]
  41b67b:	mov    DWORD PTR [ebp-0x44],edx
  41b67e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b681:	xor    ecx,eax
  41b683:	add    ecx,esi
  41b685:	jne    0x414b6f
  41b68b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b68e:	xor    ecx,eax
  41b690:	mov    eax,DWORD PTR [ebp+0x10]
  41b693:	add    ecx,esi
  41b695:	mov    DWORD PTR [eax],ecx
  41b697:	pop    edi
  41b698:	pop    esi
  41b699:	pop    ebx
  41b69a:	leave  
  41b69b:	ret    0xc
  41b69e:	push   ebp
  41b69f:	mov    ebp,esp
  41b6a1:	sub    esp,0x78
  41b6a4:	not    DWORD PTR ds:0x4291f7
  41b6aa:	push   esi
  41b6ab:	sub    eax,ecx
  41b6ad:	push   edi
  41b6ae:	sub    eax,esi
  41b6b0:	mov    eax,ds:0x42830b
  41b6b5:	mov    DWORD PTR [ebp-0x24],eax
  41b6b8:	mov    eax,ds:0x42842b
  41b6bd:	inc    ecx
  41b6be:	mov    DWORD PTR [ebp-0x30],eax
  41b6c1:	or     DWORD PTR ds:0x42919f,edi
  41b6c7:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  41b6ce:	movzx  edi,BYTE PTR ds:0x42918f
  41b6d5:	adc    DWORD PTR ds:0x42914b,edi
  41b6db:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b6e2:	adc    DWORD PTR ds:0x42918f,edx
  41b6e8:	mov    eax,DWORD PTR [ebp-0x10]
  41b6eb:	add    DWORD PTR ds:0x4291f3,ecx
  41b6f1:	mov    ecx,DWORD PTR [ebp-0x10]
  41b6f4:	adc    DWORD PTR ds:0x42915f,0x287e
  41b6fe:	sub    eax,ecx
  41b700:	adc    esi,esi
  41b702:	mov    DWORD PTR [ebp-0x10],eax
  41b705:	xor    DWORD PTR [ebp-0x10],0xf89cb5a1
  41b70c:	xor    DWORD PTR ds:0x4291ab,0x51ed
  41b716:	mov    eax,DWORD PTR [ebp-0x18]
  41b719:	and    DWORD PTR ds:0x4291a3,0x0
  41b723:	mov    edi,DWORD PTR ds:0x4291a3
  41b729:	inc    edi
  41b72a:	mov    DWORD PTR ds:0x4291a3,edi
  41b730:	cmp    DWORD PTR ds:0x4291a3,0x1b
  41b737:	jle    0x41b760
  41b73d:	jmp    0x41b753
  41b742:	push   0x4280d6
  41b747:	push   DWORD PTR [ebp-0x18]
  41b74a:	push   DWORD PTR [ebp-0x14]
  41b74d:	call   DWORD PTR ds:0x42a56f
  41b753:	cmp    DWORD PTR ds:0x4291a3,0x12
  41b75a:	jb     0x41b723
  41b760:	mov    ecx,DWORD PTR [ebp-0x18]
  41b763:	sub    eax,ecx
  41b765:	mov    DWORD PTR [ebp-0x18],eax
  41b768:	or     DWORD PTR [ebp-0x18],0xf89f05a1
  41b76f:	mov    eax,DWORD PTR [ebp-0xc]
  41b772:	and    DWORD PTR ds:0x42919f,0x1b88
  41b77c:	mov    ecx,DWORD PTR [ebp-0xc]
  41b77f:	sub    eax,ecx
  41b781:	and    DWORD PTR ds:0x429173,0x0
  41b78b:	mov    ecx,DWORD PTR ds:0x429173
  41b791:	inc    ecx
  41b792:	mov    DWORD PTR ds:0x429173,ecx
  41b798:	cmp    DWORD PTR ds:0x429173,0x1b
  41b79f:	jg     0x41b7c2
  41b7a5:	jmp    0x41b7b5
  41b7aa:	push   0x3a78
  41b7af:	call   DWORD PTR ds:0x42a573
  41b7b5:	cmp    DWORD PTR ds:0x429173,0x15
  41b7bc:	jb     0x41b78b
  41b7c2:	mov    DWORD PTR [ebp-0xc],eax
  41b7c5:	xor    DWORD PTR ds:0x4291a7,0x3902
  41b7cf:	or     DWORD PTR [ebp-0xc],0xf89c85e1
  41b7d6:	mov    eax,DWORD PTR [ebp-0x1c]
  41b7d9:	and    DWORD PTR ds:0x4291f7,0x5581
  41b7e3:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b7e6:	and    DWORD PTR ds:0x42914b,0x0
  41b7f0:	mov    esi,DWORD PTR ds:0x42914b
  41b7f6:	inc    esi
  41b7f7:	mov    DWORD PTR ds:0x42914b,esi
  41b7fd:	cmp    DWORD PTR ds:0x42914b,0xc
  41b804:	jg     0x41b848
  41b80a:	jmp    0x41b821
  41b80f:	push   0x428010
  41b814:	push   0x0
  41b816:	push   0x6059
  41b81b:	call   DWORD PTR ds:0x42a577
  41b821:	cmp    DWORD PTR ds:0x42914b,0xb
  41b828:	jne    0x41b83b
  41b82e:	mov    esi,DWORD PTR ds:0x42914b
  41b834:	inc    esi
  41b835:	mov    DWORD PTR ds:0x42914b,esi
  41b83b:	cmp    DWORD PTR ds:0x42914b,0x13
  41b842:	jb     0x41b7f0
  41b848:	sub    eax,ecx
  41b84a:	mov    DWORD PTR ds:0x4291e7,0x17
  41b854:	cmp    DWORD PTR ds:0x4291e7,0x0
  41b85b:	je     0x41b88b
  41b861:	cmp    DWORD PTR ds:0x4291e7,0x22
  41b868:	jbe    0x41b88b
  41b86e:	jmp    0x41b879
  41b873:	call   DWORD PTR ds:0x42a57b
  41b879:	mov    edi,DWORD PTR ds:0x4291e7
  41b87f:	dec    edi
  41b880:	mov    DWORD PTR ds:0x4291e7,edi
  41b886:	jmp    0x41b854
  41b88b:	mov    DWORD PTR [ebp-0x1c],eax
  41b88e:	or     DWORD PTR [ebp-0x1c],0xf89c8581
  41b895:	add    eax,eax
  41b897:	mov    eax,DWORD PTR [ebp-0x20]
  41b89a:	mov    ecx,DWORD PTR [ebp-0x20]
  41b89d:	sub    eax,ecx
  41b89f:	and    DWORD PTR ds:0x4291b3,0x0
  41b8a9:	jmp    0x41b8bb
  41b8ae:	mov    esi,DWORD PTR ds:0x4291b3
  41b8b4:	inc    esi
  41b8b5:	mov    DWORD PTR ds:0x4291b3,esi
  41b8bb:	cmp    DWORD PTR ds:0x4291b3,0x1e
  41b8c2:	jae    0x41b8ef
  41b8c8:	cmp    DWORD PTR ds:0x4291b3,0x28
  41b8cf:	jle    0x41b8ef
  41b8d5:	jmp    0x41b8ea
  41b8da:	push   0x4291c7
  41b8df:	push   0x428047
  41b8e4:	call   DWORD PTR ds:0x42a57f
  41b8ea:	jmp    0x41b8ae
  41b8ef:	mov    DWORD PTR [ebp-0x20],eax
  41b8f2:	mov    eax,DWORD PTR [ebp-0x2c]
  41b8f5:	mov    ecx,DWORD PTR [ebp-0x20]
  41b8f8:	neg    edi
  41b8fa:	mov    esi,0x75108ac
  41b8ff:	xor    eax,esi
  41b901:	mov    edi,0x3272f3
  41b906:	add    eax,edi
  41b908:	or     eax,ecx
  41b90a:	mov    DWORD PTR [ebp-0x20],eax
  41b90d:	mov    eax,DWORD PTR [ebp-0x4]
  41b910:	mov    ecx,DWORD PTR [ebp-0x4]
  41b913:	sub    eax,ecx
  41b915:	mov    DWORD PTR [ebp-0x4],eax
  41b918:	or     DWORD PTR [ebp-0x4],0xf89c85be
  41b91f:	mov    eax,DWORD PTR [ebp-0xc]
  41b922:	xor    eax,esi
  41b924:	add    eax,edi
  41b926:	push   eax
  41b927:	mov    eax,DWORD PTR [ebp-0x10]
  41b92a:	xor    eax,esi
  41b92c:	add    eax,edi
  41b92e:	push   eax
  41b92f:	mov    eax,DWORD PTR [ebp-0x4]
  41b932:	xor    eax,esi
  41b934:	add    eax,edi
  41b936:	push   eax
  41b937:	lea    eax,[ebp-0x78]
  41b93a:	push   eax
  41b93b:	push   DWORD PTR [ebp-0x2c]
  41b93e:	push   DWORD PTR [ebp-0x28]
  41b941:	call   0x411b80
  41b946:	test   eax,eax
  41b948:	je     0x41b976
  41b94e:	lea    eax,[ebp-0x78]
  41b951:	push   eax
  41b952:	mov    eax,DWORD PTR [ebp-0x28]
  41b955:	xor    eax,esi
  41b957:	add    eax,edi
  41b959:	push   eax
  41b95a:	mov    eax,DWORD PTR [ebp-0x24]
  41b95d:	add    eax,0xaa
  41b962:	push   eax
  41b963:	mov    eax,DWORD PTR [ebp-0x24]
  41b966:	mov    eax,DWORD PTR [eax+0x198]
  41b96c:	push   DWORD PTR [eax]
  41b96e:	call   0x4085e5
  41b973:	mov    DWORD PTR [ebp-0x14],eax
  41b976:	mov    ecx,DWORD PTR ds:0x428403
  41b97c:	lea    eax,[ebp+0x4]
  41b97f:	mov    DWORD PTR [ecx*4+0x4283fb],eax
  41b986:	inc    DWORD PTR ds:0x428403
  41b98c:	mov    eax,DWORD PTR [ebp-0x14]
  41b98f:	test   eax,eax
  41b991:	je     0x41b9f9
  41b997:	lea    eax,[ebp-0x8]
  41b99a:	mov    DWORD PTR [ebp-0x34],eax
  41b99d:	mov    eax,DWORD PTR [ebp-0x30]
  41b9a0:	mov    DWORD PTR [ebp-0x8],eax
  41b9a3:	mov    eax,DWORD PTR [ebp-0x8]
  41b9a6:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9a9:	sub    eax,ecx
  41b9ab:	mov    DWORD PTR [ebp-0x8],eax
  41b9ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41b9b1:	xor    ecx,esi
  41b9b3:	mov    eax,0xffcd8d0d
  41b9b8:	sub    eax,ecx
  41b9ba:	add    DWORD PTR [ebp-0x8],eax
  41b9bd:	mov    eax,DWORD PTR [ebp-0x8]
  41b9c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9c3:	mov    DWORD PTR [ecx+0x1],eax
  41b9c6:	mov    eax,DWORD PTR [ebp-0x14]
  41b9c9:	push   DWORD PTR [ebp-0x24]
  41b9cc:	mov    BYTE PTR [eax],0xe9
  41b9cf:	mov    eax,ds:0x428187
  41b9d4:	push   DWORD PTR [eax]
  41b9d6:	push   DWORD PTR ds:0x4283eb
  41b9dc:	push   DWORD PTR ds:0x42818f
  41b9e2:	push   DWORD PTR ds:0x4283cb
  41b9e8:	push   DWORD PTR ds:0x428f4f
  41b9ee:	push   DWORD PTR [ebp-0x28]
  41b9f1:	push   DWORD PTR [ebp-0x2c]
  41b9f4:	mov    eax,DWORD PTR [ebp-0x14]
  41b9f7:	call   eax
  41b9f9:	pop    edi
  41b9fa:	pop    esi
  41b9fb:	leave  
  41b9fc:	ret    
  41b9fd:	push   ebp
  41b9fe:	mov    ebp,esp
  41ba00:	sub    esp,0x1c
  41ba03:	adc    DWORD PTR ds:0x4291bf,0x12a2
  41ba0d:	mov    DWORD PTR [ebp-0x10],0xf89f85a1
  41ba14:	sub    DWORD PTR ds:0x4291b3,0x1e28
  41ba1e:	lea    eax,[ebp+0x14]
  41ba21:	movzx  edx,BYTE PTR ds:0x4291c7
  41ba28:	sbb    edx,DWORD PTR ds:0x4291ef
  41ba2e:	mov    DWORD PTR ds:0x4291c7,edx
  41ba34:	mov    DWORD PTR [ebp-0x4],eax
  41ba37:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  41ba3e:	and    DWORD PTR ds:0x4291a3,0x0
  41ba48:	jmp    0x41ba5a
  41ba4d:	mov    edx,DWORD PTR ds:0x4291a3
  41ba53:	inc    edx
  41ba54:	mov    DWORD PTR ds:0x4291a3,edx
  41ba5a:	cmp    DWORD PTR ds:0x4291a3,0x1c
  41ba61:	jae    0x41ba87
  41ba67:	cmp    DWORD PTR ds:0x4291a3,0x2a
  41ba6e:	jb     0x41ba87
  41ba74:	jmp    0x41ba82
  41ba79:	push   DWORD PTR [ebp-0x10]
  41ba7c:	call   DWORD PTR ds:0x42a583
  41ba82:	jmp    0x41ba4d
  41ba87:	lea    eax,[ebp-0xc]
  41ba8a:	add    DWORD PTR ds:0x4291d7,ecx
  41ba90:	mov    DWORD PTR [ebp-0x14],eax
  41ba93:	xor    ecx,eax
  41ba95:	mov    eax,DWORD PTR [ebp-0xc]
  41ba98:	mov    ecx,DWORD PTR ds:0x42921f
  41ba9e:	mov    edx,DWORD PTR ds:0x42982b
  41baa4:	sub    edx,ecx
  41baa6:	xor    ecx,DWORD PTR [ecx+edx*1]
  41baa9:	mov    edx,DWORD PTR [ebp-0x14]
  41baac:	adc    ecx,0x3c0d
  41bab2:	mov    ecx,0x75108ac
  41bab7:	adc    DWORD PTR ds:0x4291eb,0xbc
  41bac1:	xor    eax,ecx
  41bac3:	or     DWORD PTR ds:0x4291eb,0x4291d3
  41bacd:	add    eax,0x3272f3
  41bad2:	xor    DWORD PTR ds:0x4291db,0x429193
  41badc:	mov    DWORD PTR [edx],eax
  41bade:	and    DWORD PTR ds:0x429157,0x0
  41bae8:	xor    edx,edx
  41baea:	add    edx,DWORD PTR ds:0x429157
  41baf0:	inc    edx
  41baf1:	mov    DWORD PTR ds:0x429157,edx
  41baf7:	cmp    DWORD PTR ds:0x429157,0x2c
  41bafe:	jge    0x41bb29
  41bb04:	jmp    0x41bb1c
  41bb09:	push   0x4291c7
  41bb0e:	push   0x4291db
  41bb13:	push   DWORD PTR [ebp-0x20]
  41bb16:	call   DWORD PTR ds:0x42a58b
  41bb1c:	cmp    DWORD PTR ds:0x429157,0x1d
  41bb23:	jb     0x41bae8
  41bb29:	mov    eax,ds:0x428183
  41bb2e:	mov    edx,DWORD PTR [ebp-0x4]
  41bb31:	mov    eax,DWORD PTR [eax]
  41bb33:	add    eax,DWORD PTR [edx]
  41bb35:	mov    DWORD PTR ds:0x4291e7,0x17
  41bb3f:	cmp    DWORD PTR ds:0x4291e7,0x0
  41bb46:	je     0x41bb7d
  41bb4c:	cmp    DWORD PTR ds:0x4291e7,0x22
  41bb53:	ja     0x41bb7d
  41bb59:	jmp    0x41bb69
  41bb5e:	push   0x40e7
  41bb63:	call   DWORD PTR ds:0x42a553
  41bb69:	xor    edx,edx
  41bb6b:	or     edx,DWORD PTR ds:0x4291e7
  41bb71:	dec    edx
  41bb72:	mov    DWORD PTR ds:0x4291e7,edx
  41bb78:	jmp    0x41bb3f
  41bb7d:	push   esi
  41bb7e:	sub    edx,0x5425
  41bb84:	mov    DWORD PTR [ebp-0x8],eax
  41bb87:	mov    edx,DWORD PTR [ebp+0x8]
  41bb8a:	mov    eax,ds:0x42830b
  41bb8f:	mov    esi,DWORD PTR ds:0x429b4f
  41bb95:	mov    esi,DWORD PTR [esi]
  41bb97:	adc    DWORD PTR ds:0x42919f,esi
  41bb9d:	mov    eax,DWORD PTR [eax+0x198]
  41bba3:	xor    edx,ecx
  41bba5:	and    DWORD PTR ds:0x4291cf,ecx
  41bbab:	mov    esi,0x3272f3
  41bbb0:	add    edx,esi
  41bbb2:	mov    DWORD PTR ds:0x4291c7,0x7ba3
  41bbbc:	cmp    DWORD PTR [eax],edx
  41bbbe:	mov    DWORD PTR ds:0x4291df,0x7d4d
  41bbc8:	je     0x41bbdb
  41bbce:	not    DWORD PTR ds:0x42917b
  41bbd4:	mov    eax,DWORD PTR [eax]
  41bbd6:	jmp    0x4207f9
  41bbdb:	mov    eax,DWORD PTR [ebp+0x18]
  41bbde:	xor    DWORD PTR ds:0x429183,0x42919f
  41bbe8:	xor    eax,ecx
  41bbea:	push   ebx
  41bbeb:	add    eax,esi
  41bbed:	xor    DWORD PTR ds:0x429197,edi
  41bbf3:	xor    edx,edx
  41bbf5:	sub    DWORD PTR ds:0x4291e3,edi
  41bbfb:	mov    ebx,0xfabdbed6
  41bc00:	add    eax,ebx
  41bc02:	mov    DWORD PTR ds:0x4291cb,0x2663
  41bc0c:	push   edi
  41bc0d:	adc    edx,0xffffffff
  41bc10:	and    DWORD PTR ds:0x4291a3,0x0
  41bc1a:	jmp    0x41bc2e
  41bc1f:	xor    edi,edi
  41bc21:	xor    edi,DWORD PTR ds:0x4291a3
  41bc27:	inc    edi
  41bc28:	mov    DWORD PTR ds:0x4291a3,edi
  41bc2e:	cmp    DWORD PTR ds:0x4291a3,0x1f
  41bc35:	jae    0x41bc68
  41bc3b:	cmp    DWORD PTR ds:0x4291a3,0x22
  41bc42:	jl     0x41bc68
  41bc48:	jmp    0x41bc63
  41bc4d:	push   DWORD PTR [ebp-0x24]
  41bc50:	push   0x42810e
  41bc55:	push   0x42812a
  41bc5a:	push   DWORD PTR [ebp-0x1c]
  41bc5d:	call   DWORD PTR ds:0x42a55b
  41bc63:	jmp    0x41bc1f
  41bc68:	mov    edi,0x8a29a13f
  41bc6d:	xor    eax,edi
  41bc6f:	sub    DWORD PTR ds:0x429197,0x48a0
  41bc79:	xor    edx,0x0
  41bc7c:	mov    DWORD PTR ds:0x42919f,0x3301
  41bc86:	cmp    eax,0x70941fe9
  41bc8b:	mov    DWORD PTR ds:0x429167,0x2e01
  41bc95:	jne    0x41bcc2
  41bc9b:	mov    DWORD PTR ds:0x4291a3,0x73ae
  41bca5:	cmp    edx,0xffffffff
  41bca8:	jne    0x41bcc2
  41bcae:	push   0xf89c85a2
  41bcb3:	mov    DWORD PTR ds:0x4291af,0x3feb
  41bcbd:	jmp    0x4207e6
  41bcc2:	mov    eax,DWORD PTR [ebp+0x18]
  41bcc5:	xor    eax,ecx
  41bcc7:	adc    DWORD PTR ds:0x42916b,0x4291af
  41bcd1:	add    eax,esi
  41bcd3:	sub    DWORD PTR ds:0x429163,0x429173
  41bcdd:	xor    edx,edx
  41bcdf:	add    eax,ebx
  41bce1:	mov    DWORD PTR ds:0x429163,0x4b51
  41bceb:	adc    edx,0xffffffff
  41bcee:	sub    DWORD PTR ds:0x4291af,0x6866
  41bcf8:	xor    eax,edi
  41bcfa:	or     DWORD PTR ds:0x42914f,0x4291db
  41bd04:	xor    edx,0x0
  41bd07:	mov    DWORD PTR ds:0x4291eb,0x1dc4
  41bd11:	cmp    eax,0x70941fe7
  41bd16:	mov    DWORD PTR ds:0x429153,0x3724
  41bd20:	jne    0x4207d3
  41bd26:	cmp    edx,0xffffffff
  41bd29:	mov    DWORD PTR ds:0x4291ef,0x5140
  41bd33:	jne    0x4207d3
  41bd39:	add    DWORD PTR ds:0x429193,0x7d28
  41bd43:	mov    eax,DWORD PTR [ebp+0x10]
  41bd46:	mov    DWORD PTR ds:0x42916b,0x1b
  41bd50:	cmp    DWORD PTR ds:0x42916b,0x0
  41bd57:	je     0x41bd93
  41bd5d:	cmp    DWORD PTR ds:0x42916b,0x1d
  41bd64:	jl     0x41bd93
  41bd6a:	jmp    0x41bd7f
  41bd6f:	push   0x2cfc
  41bd74:	push   0x400000
  41bd79:	call   DWORD PTR ds:0x42a55f
  41bd7f:	xor    edx,edx
  41bd81:	xor    edx,DWORD PTR ds:0x42916b
  41bd87:	dec    edx
  41bd88:	mov    DWORD PTR ds:0x42916b,edx
  41bd8e:	jmp    0x41bd50
  41bd93:	xor    eax,ecx
  41bd95:	add    eax,esi
  41bd97:	mov    DWORD PTR [ebp-0x18],eax
  41bd9a:	sub    DWORD PTR ds:0x42918f,0x3e4b
  41bda4:	mov    eax,DWORD PTR [ebp+0xc]
  41bda7:	and    DWORD PTR ds:0x429183,0x0
  41bdb1:	jmp    0x41bdc5
  41bdb6:	xor    edx,edx
  41bdb8:	add    edx,DWORD PTR ds:0x429183
  41bdbe:	inc    edx
  41bdbf:	mov    DWORD PTR ds:0x429183,edx
  41bdc5:	cmp    DWORD PTR ds:0x429183,0x19
  41bdcc:	jae    0x41bdf4
  41bdd2:	cmp    DWORD PTR ds:0x429183,0x28
  41bdd9:	jbe    0x41bdf4
  41bddf:	jmp    0x41bdef
  41bde4:	push   0x429193
  41bde9:	call   DWORD PTR ds:0x42a563
  41bdef:	jmp    0x41bdb6
  41bdf4:	mov    edx,DWORD PTR [ebp-0x8]
  41bdf7:	mov    DWORD PTR ds:0x4291ab,0x2654
  41be01:	xor    eax,ecx
  41be03:	add    eax,esi
  41be05:	adc    DWORD PTR ds:0x4291e7,0x4291db
  41be0f:	imul   eax,DWORD PTR [edx]
  41be12:	mov    edx,DWORD PTR [ebp+0x8]
  41be15:	or     DWORD PTR ds:0x42914b,0x4291d3
  41be1f:	xor    edx,ecx
  41be21:	add    edx,esi
  41be23:	mov    DWORD PTR ds:0x4291e7,0x151c
  41be2d:	cmp    edx,eax
  41be2f:	mov    eax,DWORD PTR [ebp-0x4]
  41be32:	je     0x41beca
  41be38:	mov    DWORD PTR ds:0x429163,0x16
  41be42:	cmp    DWORD PTR ds:0x429163,0x0
  41be49:	je     0x41be83
  41be4f:	cmp    DWORD PTR ds:0x429163,0x1a
  41be56:	ja     0x41be83
  41be5c:	jmp    0x41be71
  41be61:	push   0x4e27
  41be66:	push   0x4280a5
  41be6b:	call   DWORD PTR ds:0x42a567
  41be71:	mov    edx,DWORD PTR ds:0x429163
  41be77:	dec    edx
  41be78:	mov    DWORD PTR ds:0x429163,edx
  41be7e:	jmp    0x41be42
  41be83:	mov    edx,DWORD PTR [ebp-0x18]
  41be86:	or     DWORD PTR ds:0x42917f,0x4f4
  41be90:	add    DWORD PTR [eax],edx
  41be92:	and    eax,0x7343
  41be97:	mov    eax,DWORD PTR [ebp-0x4]
  41be9a:	mov    edx,DWORD PTR [ebp+0xc]
  41be9d:	xor    edx,ecx
  41be9f:	add    edx,esi
  41bea1:	imul   edx,DWORD PTR [eax]
  41bea4:	sbb    DWORD PTR ds:0x429183,0x4291b3
  41beae:	mov    DWORD PTR [eax],edx
  41beb0:	mov    eax,DWORD PTR [ebp-0x4]
  41beb3:	mov    DWORD PTR [ebp-0x1c],eax
  41beb6:	mov    eax,DWORD PTR [ebp+0x10]
  41beb9:	xor    eax,ecx
  41bebb:	mov    edx,0xffcd8d0d
  41bec0:	sub    edx,eax
  41bec2:	mov    eax,DWORD PTR [ebp-0x1c]
  41bec5:	jmp    0x41bee4
  41beca:	mov    edx,DWORD PTR [ebp+0x14]
  41becd:	xor    DWORD PTR [eax],edx
  41becf:	mov    eax,DWORD PTR [ebp-0x4]
  41bed2:	mov    DWORD PTR [ebp-0x1c],eax
  41bed5:	mov    eax,DWORD PTR [ebp+0x10]
  41bed8:	xor    eax,ecx
  41beda:	mov    edx,0xffcd8d0d
  41bedf:	sub    edx,eax
  41bee1:	mov    eax,DWORD PTR [ebp-0x1c]
  41bee4:	add    DWORD PTR [eax],edx
  41bee6:	mov    eax,DWORD PTR [ebp-0x4]
  41bee9:	mov    edx,DWORD PTR [ebp-0x8]
  41beec:	add    edx,DWORD PTR [eax]
  41beee:	mov    DWORD PTR [ebp-0x8],edx
  41bef1:	mov    eax,DWORD PTR [ebp+0xc]
  41bef4:	mov    edx,DWORD PTR [ebp+0xc]
  41bef7:	xor    edx,ecx
  41bef9:	xor    eax,ecx
  41befb:	lea    eax,[eax+edx*1+0x64e5e6]
  41bf02:	mov    edx,DWORD PTR [ebp+0xc]
  41bf05:	xor    edx,ecx
  41bf07:	add    edx,esi
  41bf09:	imul   eax,edx
  41bf0c:	mov    edx,DWORD PTR [ebp+0xc]
  41bf0f:	xor    edx,ecx
  41bf11:	sub    edx,eax
  41bf13:	mov    eax,DWORD PTR [ebp-0x4]
  41bf16:	add    edx,esi
  41bf18:	cmp    DWORD PTR [eax],edx
  41bf1a:	mov    eax,DWORD PTR [ebp-0x4]
  41bf1d:	jg     0x41bf3a
  41bf23:	mov    DWORD PTR [ebp-0x1c],eax
  41bf26:	mov    eax,DWORD PTR [ebp+0x10]
  41bf29:	xor    eax,ecx
  41bf2b:	mov    edx,0xffcd8d0d
  41bf30:	sub    edx,eax
  41bf32:	mov    eax,DWORD PTR [ebp-0x1c]
  41bf35:	jmp    0x41bf41
  41bf3a:	mov    edx,DWORD PTR [ebp+0x10]
  41bf3d:	xor    edx,ecx
  41bf3f:	add    edx,esi
  41bf41:	add    DWORD PTR [eax],edx
  41bf43:	mov    eax,DWORD PTR [ebp-0x8]
  41bf46:	mov    edx,DWORD PTR [ebp-0x10]
  41bf49:	mov    eax,DWORD PTR [eax]
  41bf4b:	xor    edx,ecx
  41bf4d:	add    edx,0x3272f2
  41bf53:	not    edx
  41bf55:	and    eax,edx
  41bf57:	mov    DWORD PTR [ebp-0x4],eax
  41bf5a:	movsx  eax,BYTE PTR [eax+0x1]
  41bf5e:	cdq    
  41bf5f:	add    eax,ebx
  41bf61:	adc    edx,0xffffffff
  41bf64:	jmp    0x41e327
  41bf69:	pop    esi
  41bf6a:	push   0x85807d90
  41bf6f:	xchg   esi,eax
  41bf70:	dec    eax
  41bf71:	add    cl,BYTE PTR [ebx+0x3]
  41bf74:	rol    DWORD PTR [edi+edi*2+0x47],cl
  41bf78:	sar    DWORD PTR [ebx-0x267c7d07],1
  41bf7e:	pop    esp
  41bf7f:	add    DWORD PTR [ebx+0x2e8507ff],0xffffffce
  41bf86:	or     BYTE PTR [ebx],dl
  41bf88:	dec    ecx
  41bf89:	push   ecx
  41bf8a:	pop    es
  41bf8b:	push   ss
  41bf8c:	add    esi,ebx
  41bf8e:	in     al,0x81
  41bf90:	pop    ebx
  41bf91:	sub    ecx,DWORD PTR [ecx-0x7cad67de]
  41bf97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf98:	dec    eax
  41bf99:	(bad)  
  41bf9a:	push   esi
  41bf9b:	std    
  41bf9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf9d:	(bad)  
  41bf9e:	push   0x97912a41
  41bfa3:	jg     0x41bff0
  41bfa5:	push   ss
  41bfa6:	push   ss
  41bfa7:	ins    BYTE PTR es:[edi],dx
  41bfa8:	loopne 0x41bf66
  41bfaa:	mov    ebp,0xcef7daf
  41bfaf:	icebp  
  41bfb0:	xchg   ebx,eax
  41bfb1:	fwait
  41bfb2:	aas    
  41bfb3:	ja     0x41bf4f
  41bfb5:	xchg   ebx,eax
  41bfb6:	frstor [eax+0x3864311b]
  41bfbc:	mov    BYTE PTR [eax+0x568a8092],al
  41bfc2:	push   ecx
  41bfc3:	xchg   DWORD PTR [edx+0x2969784c],edx
  41bfc9:	push   esp
  41bfca:	lahf   
  41bfcb:	inc    edx
  41bfcc:	inc    ecx
  41bfcd:	(bad)  
  41bfcf:	pushf  
  41bfd0:	data16 aaa 
  41bfd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfd3:	sbb    dh,BYTE PTR [edx-0x64]
  41bfd6:	fs imul esi,esi,0xffffffe7
  41bfda:	adc    ah,BYTE PTR ds:0xbbb8c2bd
  41bfe0:	jmp    FWORD PTR [ebp-0x5bcb533d]
  41bfe6:	out    dx,eax
  41bfe7:	xchg   ebp,eax
  41bfe8:	mov    eax,0xc392e325
  41bfed:	xchg   edi,eax
  41bfee:	loope  0x41bfce
  41bff0:	pop    ebp
  41bff1:	cmp    eax,0x2f5c0270
  41bff6:	sbb    eax,DWORD PTR [edi]
  41bff8:	jle    0x41bf7c
  41bffa:	dec    esi
  41bffb:	aad    0xd6
  41bffd:	or     al,0x3a
  41bfff:	out    dx,eax
  41c000:	call   DWORD PTR [edx]
  41c002:	(bad)  
  41c003:	loopne 0x41c07d
  41c005:	sbb    eax,0x3dbbe925
  41c00a:	imul   ecx,DWORD PTR [esi+0x933d8c9],0x10
  41c011:	xchg   ebp,eax
  41c012:	int    0xc0
  41c014:	push   0xd
  41c016:	fwait
  41c017:	sub    ah,BYTE PTR [esi-0x10f829f8]
  41c01d:	(bad)  
  41c01e:	mov    al,ds:0x13d8eca6
  41c023:	dec    edx
  41c024:	or     eax,DWORD PTR [ecx+ebx*8-0x47]
  41c028:	dec    ebp
  41c029:	and    eax,0xdb1b0380
  41c02e:	adc    ah,dl
  41c030:	clc    
  41c031:	into   
  41c032:	push   ds
  41c033:	inc    ebp
  41c034:	sub    BYTE PTR [esi+0x76],dl
  41c037:	xchg   bl,ch
  41c039:	mov    dh,0x82
  41c03b:	stos   DWORD PTR es:[edi],eax
  41c03c:	cmp    bl,BYTE PTR [eax]
  41c03e:	jno    0x41c093
  41c040:	xchg   ebx,eax
  41c041:	jle    0x41c02a
  41c043:	xchg   ebp,eax
  41c044:	ror    BYTE PTR [eax+0x7e],1
  41c047:	hlt    
  41c048:	in     al,0xd8
  41c04a:	lahf   
  41c04b:	cmp    DWORD PTR [edi+0x49],esp
  41c04e:	sti    
  41c04f:	mov    ah,0x79
  41c051:	sar    ebx,cl
  41c053:	push   edi
  41c054:	ror    BYTE PTR [ecx+0x2a],1
  41c057:	lods   eax,DWORD PTR ds:[esi]
  41c058:	pop    ebp
  41c059:	xlat   BYTE PTR ds:[ebx]
  41c05a:	add    DWORD PTR [esp+edx*4],ebp
  41c05d:	fild   WORD PTR [edi-0x4f]
  41c060:	pop    es
  41c061:	push   ds
  41c062:	lock daa 
  41c064:	sub    DWORD PTR [eax+0x6f],ebp
  41c067:	gs sub BYTE PTR ss:[bp+di+0x5cc7],0x9f
  41c06f:	stos   DWORD PTR es:[edi],eax
  41c070:	js     0x41c01e
  41c072:	fmul   st,st(1)
  41c074:	jle    0x41c0f0
  41c076:	(bad)  
  41c077:	(bad)  
  41c078:	jmp    0xcaa0:0x1aeba6b0
  41c07f:	sbb    dl,BYTE PTR [ebx+esi*1+0x4b46a3ec]
  41c086:	mov    bl,BYTE PTR [ebx-0x48]
  41c089:	add    ebp,esi
  41c08b:	(bad)  
  41c08c:	pop    ebp
  41c08d:	inc    esi
  41c08e:	add    al,0x7c
  41c090:	fistp  DWORD PTR [ebx]
  41c092:	mov    eax,0x92883589
  41c097:	int    0x88
  41c099:	std    
  41c09a:	and    al,0x64
  41c09c:	loope  0x41c0d0
  41c09e:	pop    esi
  41c09f:	loopne 0x41c0bb
  41c0a1:	push   edx
  41c0a2:	sbb    ebx,DWORD PTR [ecx-0x577f9cdb]
  41c0a8:	or     BYTE PTR [ebx-0x212c98f],al
  41c0ae:	xchg   esi,eax
  41c0af:	pop    edi
  41c0b0:	lods   eax,DWORD PTR ds:[esi]
  41c0b1:	and    eax,0x8f631f21
  41c0b6:	mov    al,es:0x95247484
  41c0bc:	std    
  41c0bd:	inc    edi
  41c0be:	mov    ds:0x78bbc8b7,eax
  41c0c3:	aas    
  41c0c4:	frstpm(287 only) 
  41c0c6:	loopne 0x41c0ff
  41c0c8:	add    esi,ebx
  41c0ca:	fcom   st(6)
  41c0cc:	xchg   eax,eax
  41c0ce:	mov    ch,0xb1
  41c0d0:	adc    al,0xc
  41c0d2:	pop    ecx
  41c0d3:	push   edx
  41c0d4:	out    0x7e,al
  41c0d6:	outs   dx,DWORD PTR ds:[esi]
  41c0d7:	frndint 
  41c0d9:	or     al,0xbc
  41c0db:	pop    esi
  41c0dc:	mov    ah,0xb9
  41c0de:	sahf   
  41c0df:	inc    esp
  41c0e0:	aam    0x9e
  41c0e2:	out    0xcd,al
  41c0e4:	dec    ecx
  41c0e5:	in     eax,0x6c
  41c0e7:	sar    ebx,cl
  41c0e9:	pop    ds
  41c0ea:	mov    ecx,0x2f97a7da
  41c0ef:	or     DWORD PTR [edi],esi
  41c0f1:	sub    eax,0x5b678741
  41c0f6:	push   ecx
  41c0f7:	add    ah,dh
  41c0f9:	push   ecx
  41c0fa:	(bad)  
  41c0fb:	rol    DWORD PTR [ebx-0x1e],0xd7
  41c0ff:	mov    ebp,0x3f40d783
  41c104:	adc    DWORD PTR [eax+0x4522ae5d],eax
  41c10a:	stos   BYTE PTR es:[edi],al
  41c10b:	or     eax,0xbe234eb2
  41c110:	push   ebp
  41c111:	push   ecx
  41c112:	xchg   ebx,eax
  41c113:	enter  0xd786,0x13
  41c117:	les    eax,FWORD PTR [ebx-0x8]
  41c11a:	jmp    0x886e:0xeb12af17
  41c121:	int3   
  41c122:	mov    ecx,0x3906efe4
  41c127:	bound  edi,QWORD PTR [bx-0x79]
  41c12b:	stos   DWORD PTR es:[edi],eax
  41c12c:	inc    ecx
  41c12d:	cmc    
  41c12e:	out    0x3d,eax
  41c130:	push   ss
  41c131:	hlt    
  41c132:	adc    eax,0xeb377cae
  41c137:	test   ebx,ecx
  41c139:	lods   al,BYTE PTR ds:[esi]
  41c13a:	pop    ebp
  41c13b:	leave  
  41c13c:	lods   eax,DWORD PTR ds:[esi]
  41c13d:	push   ecx
  41c13e:	mov    al,0xfa
  41c140:	ins    DWORD PTR es:[edi],dx
  41c141:	and    eax,0xd750bc69
  41c146:	xchg   DWORD PTR [edx+eiz*2+0x5b6087bf],ebx
  41c14d:	mov    ecx,0x1d381f28
  41c152:	(bad)  
  41c154:	loop   0x41c156
  41c156:	shl    DWORD PTR [ebx],0xd
  41c159:	sbb    DWORD PTR [ebp+edx*2-0x6503cead],esi
  41c160:	cli    
  41c161:	outs   dx,BYTE PTR ds:[esi]
  41c162:	aas    
  41c163:	shl    DWORD PTR [edi],0x17
  41c166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c167:	xchg   ecx,eax
  41c168:	pop    ds
  41c169:	data16 jb 0x41c165
  41c16c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c16d:	xor    eax,DWORD PTR [ecx-0x1]
  41c170:	arpl   WORD PTR [ebp+0x3c],dx
  41c173:	add    eax,0xfb9ca471
  41c178:	retf   0xea2f
  41c17b:	jmp    0xbfe9e04
  41c180:	mov    bh,0xf9
  41c182:	sub    BYTE PTR [ebp+0x25388b29],cl
  41c188:	jbe    0x41c135
  41c18a:	xor    al,0xb9
  41c18c:	xchg   ebp,eax
  41c18d:	inc    eax
  41c18e:	ret    0xfdc3
  41c191:	fidiv  WORD PTR [esp+esi*1+0x3bca22eb]
  41c198:	mov    esi,0x5d6adfab
  41c19d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c19e:	sub    al,0xe9
  41c1a0:	mov    dh,0xeb
  41c1a2:	or     ecx,esp
  41c1a4:	push   es
  41c1a5:	pop    ds
  41c1a6:	out    0x16,al
  41c1a8:	ror    ch,1
  41c1aa:	or     WORD PTR [edx],0xc8b9
  41c1af:	iret   
  41c1b0:	add    DWORD PTR [edx+0x5a],esi
  41c1b3:	pop    esi
  41c1b4:	mov    ds:0xf1156537,al
  41c1b9:	cmp    eax,DWORD PTR [ecx+0x62]
  41c1bc:	adc    dh,0x30
  41c1bf:	jbe    0x41c1ea
  41c1c1:	sub    BYTE PTR [edi-0x7a],dl
  41c1c4:	mov    bh,0xce
  41c1c6:	(bad)  [esi]
  41c1c8:	xchg   edx,eax
  41c1c9:	popf   
  41c1ca:	test   BYTE PTR [ebp-0x4eaf0a91],0xff
  41c1d1:	cmp    edi,DWORD PTR [ecx]
  41c1d3:	fdivr  st,st(7)
  41c1d5:	iret   
  41c1d6:	fs cld 
  41c1d8:	loop   0x41c1b1
  41c1da:	mov    ebx,0xaad0f1be
  41c1df:	jle    0x41c1e8
  41c1e1:	stc    
  41c1e2:	(bad)  
  41c1e3:	aad    0x1e
  41c1e5:	push   eax
  41c1e6:	(bad)  
  41c1e7:	adc    ebx,DWORD PTR ds:0x29d56daa
  41c1ed:	or     DWORD PTR [ecx-0x2a],ebp
  41c1f0:	je     0x41c235
  41c1f2:	or     ebp,DWORD PTR [ebp+0x3c]
  41c1f5:	test   BYTE PTR [ebp-0x4c1d7a03],dl
  41c1fb:	popa   
  41c1fc:	dec    esp
  41c1fd:	xor    BYTE PTR [ebp-0x2dca536d],bh
  41c203:	out    dx,al
  41c204:	call   0xb93f:0xda818779
  41c20b:	xor    DWORD PTR [edi],0xffffff95
  41c20e:	sub    eax,0xe599aafb
  41c213:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c214:	ins    BYTE PTR es:[edi],dx
  41c215:	and    al,0x40
  41c217:	ins    DWORD PTR es:[edi],dx
  41c218:	call   0xf550:0xcbd35f70
  41c21f:	fild   QWORD PTR [esi-0x3d]
  41c222:	aam    0xcd
  41c224:	add    BYTE PTR [ecx],al
  41c226:	scas   eax,DWORD PTR es:[edi]
  41c227:	add    ebp,esp
  41c229:	mov    ?,WORD PTR [ecx]
  41c22b:	adc    DWORD PTR [ecx+esi*8],edi
  41c22e:	add    esi,esi
  41c230:	(bad)  
  41c231:	or     eax,0x2804c566
  41c236:	out    0x5e,al
  41c238:	test   DWORD PTR [edi+0x45],esp
  41c23b:	lgs    esp,FWORD PTR [ecx+0x5a81ee41]
  41c242:	pop    esp
  41c243:	cs adc al,0x9f
  41c246:	push   esi
  41c247:	scas   al,BYTE PTR es:[edi]
  41c248:	out    dx,eax
  41c249:	cli    
  41c24a:	popa   
  41c24b:	adc    DWORD PTR [ebp+0xd],0x5e3317e1
  41c252:	add    DWORD PTR [eax],ecx
  41c254:	or     BYTE PTR [ecx],0xad
  41c257:	inc    edi
  41c258:	sbb    cl,cl
  41c25a:	repz add ebp,DWORD PTR ds:0x4142c12c
  41c261:	mov    esp,0x522cc112
  41c266:	push   edx
  41c267:	pop    edi
  41c268:	pop    esp
  41c269:	js     0x41c28a
  41c26b:	sbb    eax,0x56e89cb8
  41c270:	mov    ah,0xc7
  41c272:	into   
  41c273:	or     ebp,edi
  41c275:	sub    ebx,DWORD PTR [edi]
  41c277:	or     BYTE PTR [eax],ch
  41c279:	xchg   DWORD PTR [edx-0x6a9a0c09],esi
  41c27f:	dec    esi
  41c280:	mov    al,0x68
  41c282:	xor    DWORD PTR [edx],edx
  41c284:	xchg   esi,eax
  41c285:	or     esp,edi
  41c287:	clc    
  41c288:	pushf  
  41c289:	pop    ebp
  41c28a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c28b:	popa   
  41c28c:	loopne 0x41c2f7
  41c28e:	pop    es
  41c28f:	add    DWORD PTR [ecx+ebp*8+0x61],ecx
  41c293:	and    DWORD PTR [ecx+edx*2],edi
  41c296:	in     al,0x6b
  41c298:	jp     0x41c291
  41c29a:	aam    0xd2
  41c29c:	fist   WORD PTR [esp+ebp*1]
  41c29f:	xchg   esi,eax
  41c2a0:	or     BYTE PTR [edx-0x37c4930a],0x78
  41c2a7:	(bad)  
  41c2a8:	push   ebx
  41c2a9:	into   
  41c2aa:	cmp    DWORD PTR [edi-0x6ecec4af],ecx
  41c2b0:	jp     0x41c282
  41c2b2:	scas   eax,DWORD PTR es:[edi]
  41c2b3:	jae    0x41c317
  41c2b5:	aas    
  41c2b6:	mov    eax,ds:0x3d944112
  41c2bb:	dec    edi
  41c2bc:	imul   edi,DWORD PTR [edi+0x5d],0xffffffeb
  41c2c0:	pop    ss
  41c2c1:	ins    DWORD PTR es:[edi],dx
  41c2c2:	inc    edx
  41c2c3:	fisub  WORD PTR [eax]
  41c2c5:	xchg   edi,eax
  41c2c6:	sbb    ah,dl
  41c2c8:	adc    dh,BYTE PTR [ebx+0x7da1784e]
  41c2ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2cf:	popf   
  41c2d0:	mov    bh,0x2d
  41c2d2:	sbb    eax,0xd2abf712
  41c2d7:	xor    al,0x3d
  41c2d9:	and    edx,DWORD PTR [ebx]
  41c2db:	jno    0x41c2a2
  41c2dd:	jl     0x41c30a
  41c2df:	jmp    0x41c32e
  41c2e1:	test   ecx,edx
  41c2e3:	jecxz  0x41c2d5
  41c2e5:	mul    DWORD PTR [ecx+0x4c]
  41c2e8:	popa   
  41c2e9:	addr16 mov ecx,0x49ad68c0
  41c2ef:	scas   eax,DWORD PTR es:[edi]
  41c2f0:	xchg   ebx,eax
  41c2f1:	iret   
  41c2f2:	sub    eax,0x2dba1acd
  41c2f7:	add    al,0x92
  41c2f9:	stc    
  41c2fa:	retf   
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	(bad)  
  41c2fd:	pop    ecx
  41c2fe:	fisub  DWORD PTR [eax-0x3516fde1]
  41c304:	ins    BYTE PTR es:[edi],dx
  41c305:	cwde   
  41c306:	mov    edx,DWORD PTR [edx-0x14]
  41c309:	jnp    0x41c349
  41c30b:	adc    eax,0xd8fb88ce
  41c310:	xor    DWORD PTR [ecx-0x5d],edx
  41c313:	sbb    BYTE PTR [ecx-0x7c],cl
  41c316:	popa   
  41c317:	add    bh,BYTE PTR [eax+0x5d220ca1]
  41c31d:	repz sar BYTE PTR [ebx-0x7889cca0],cl
  41c324:	inc    edi
  41c325:	bts    DWORD PTR [esi-0x1b],ecx
  41c329:	fdivr  DWORD PTR [ecx+0x19]
  41c32c:	fcos   
  41c32e:	aam    0xb8
  41c330:	mov    bl,0xaf
  41c332:	in     eax,0xab
  41c334:	bound  edx,QWORD PTR ds:0x673dfd3
  41c33a:	and    BYTE PTR ds:[edx+0x16],bl
  41c33e:	popa   
  41c33f:	dec    eax
  41c340:	sub    al,0x4d
  41c342:	stos   DWORD PTR es:[edi],eax
  41c343:	push   eax
  41c344:	mov    esi,0x7e5feb99
  41c349:	hlt    
  41c34a:	cld    
  41c34b:	mov    edx,edi
  41c34d:	add    ch,BYTE PTR [esi+0x42]
  41c350:	push   ebx
  41c351:	add    edx,DWORD PTR [ebx+ebp*8-0x2582b87b]
  41c358:	sbb    esi,DWORD PTR [ebx-0xb3f05cc]
  41c35e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c35f:	push   edx
  41c360:	imul   esi,DWORD PTR [esi-0x6b],0x6c
  41c364:	test   al,0x57
  41c366:	daa    
  41c367:	xchg   DWORD PTR [edx+ebx*4+0x4c1f91da],ebx
  41c36e:	lahf   
  41c36f:	dec    esp
  41c370:	xor    cl,BYTE PTR [esi]
  41c372:	jle    0x41c39c
  41c374:	inc    esi
  41c375:	dec    edx
  41c376:	xchg   esi,eax
  41c377:	loope  0x41c362
  41c379:	jo     0x41c362
  41c37b:	sar    DWORD PTR [eax],0x65
  41c37e:	sub    eax,0xaf35a054
  41c383:	inc    ebx
  41c384:	jecxz  0x41c3bb
  41c386:	fstp   st(5)
  41c388:	pop    ss
  41c389:	das    
  41c38a:	adc    al,0x2f
  41c38c:	(bad)  
  41c38d:	dec    esi
  41c38e:	mov    al,ds:0xb16fb24c
  41c393:	mov    WORD PTR [edi],ds
  41c395:	or     ebx,DWORD PTR [eax-0x13]
  41c398:	jae    0x41c370
  41c39a:	adc    BYTE PTR [eax+edi*4+0x7665fc14],0x31
  41c3a2:	stos   BYTE PTR es:[edi],al
  41c3a3:	into   
  41c3a4:	xor    al,0x3c
  41c3a6:	push   ecx
  41c3a7:	pusha  
  41c3a8:	retf   
  41c3a9:	inc    esp
  41c3aa:	mov    dh,0x21
  41c3ac:	xchg   ecx,eax
  41c3ad:	fwait
  41c3ae:	and    bh,BYTE PTR [edx]
  41c3b0:	push   0xffffffc7
  41c3b2:	mov    esp,0x4067d4a2
  41c3b7:	data16 into 
  41c3b9:	outs   dx,BYTE PTR ds:[esi]
  41c3ba:	cs ret 0x2cf5
  41c3be:	imul   eax,DWORD PTR [edi-0x16bb7955],0x41
  41c3c5:	not    BYTE PTR [ecx*2-0x55aef6eb]
  41c3cc:	sbb    esi,edx
  41c3ce:	ins    BYTE PTR es:[edi],dx
  41c3cf:	or     BYTE PTR [ebx-0x7d8bc0d5],bh
  41c3d5:	lea    esi,[ecx+0x36ad7519]
  41c3db:	fxch   st(1)
  41c3dd:	ret    0xcbbc
  41c3e0:	nop
  41c3e1:	ret    
  41c3e2:	pusha  
  41c3e3:	scas   eax,DWORD PTR es:[edi]
  41c3e4:	std    
  41c3e5:	cmp    ebp,ebx
  41c3e7:	int    0xff
  41c3e9:	xlat   BYTE PTR ds:[ebx]
  41c3ea:	sahf   
  41c3eb:	push   ecx
  41c3ec:	and    DWORD PTR [eax],esp
  41c3ee:	into   
  41c3ef:	lock mov dl,0x5
  41c3f2:	sbb    al,0xec
  41c3f4:	mov    ah,0x1d
  41c3f6:	in     al,0xc4
  41c3f8:	xchg   DWORD PTR [ecx+0x38],edx
  41c3fb:	mov    edx,0xd7a9180d
  41c400:	and    esp,DWORD PTR [ebp+ebp*2+0x6846baa9]
  41c407:	fstp   QWORD PTR [eax+ebx*4+0x4c00e534]
  41c40e:	mov    ecx,0xb517cc28
  41c413:	mov    dh,0x65
  41c415:	cwde   
  41c416:	dec    ebx
  41c417:	mov    ecx,0x26b1d3e5
  41c41c:	xchg   esi,eax
  41c41d:	push   ss
  41c41e:	inc    esi
  41c41f:	aam    0xb0
  41c421:	shl    ebp,cl
  41c423:	cdq    
  41c424:	and    bh,BYTE PTR [ecx]
  41c426:	out    dx,al
  41c427:	ror    DWORD PTR [ecx-0x5a],cl
  41c42a:	push   edi
  41c42b:	jge    0x41c3b3
  41c42d:	popa   
  41c42e:	loop   0x41c3eb
  41c430:	outs   dx,DWORD PTR ds:[esi]
  41c431:	fidivr WORD PTR [ecx-0x5ca79938]
  41c437:	in     al,0x10
  41c439:	push   0xf5d4b837
  41c43e:	scas   al,BYTE PTR es:[edi]
  41c43f:	cmp    BYTE PTR [ecx],cl
  41c441:	mov    esp,DWORD PTR [ebp+0x20a7aa91]
  41c447:	ret    
  41c448:	adc    ebx,edi
  41c44a:	cld    
  41c44b:	cmp    DWORD PTR [esp+eax*2-0xd],0xbdcd303c
  41c453:	repnz mov ds:0x30ad3f1,al
  41c459:	xor    al,0xc4
  41c45b:	jmp    0xb946a85a
  41c460:	fsub   QWORD PTR [esi]
  41c462:	js     0x41c40c
  41c464:	inc    edx
  41c465:	scas   eax,DWORD PTR es:[edi]
  41c466:	inc    ebp
  41c467:	(bad)  
  41c468:	gs pop edx
  41c46a:	xchg   BYTE PTR [ebp-0x1c],ch
  41c46d:	jo     0x41c407
  41c46f:	lahf   
  41c470:	and    DWORD PTR [edx],ebp
  41c472:	mov    edx,0xee1c13ba
  41c477:	mov    ebx,0xa2614905
  41c47c:	jl     0x41c4c3
  41c47e:	pop    edi
  41c47f:	pusha  
  41c480:	clc    
  41c481:	test   DWORD PTR [edx-0x25],edi
  41c484:	inc    ecx
  41c485:	push   ebx
  41c486:	sbb    DWORD PTR [ecx+0x2ab8bd99],ecx
  41c48c:	pop    edx
  41c48d:	repz aad 0x18
  41c490:	dec    edi
  41c491:	push   esp
  41c492:	shl    BYTE PTR [ecx+0x43],cl
  41c495:	out    dx,al
  41c496:	jb     0x41c4d5
  41c498:	or     eax,0x62b550c3
  41c49d:	fldenv [edi+0x6f]
  41c4a0:	retf   
  41c4a1:	add    al,0x66
  41c4a3:	fsub   DWORD PTR [ebx+eiz*1+0x12]
  41c4a7:	dec    edx
  41c4a8:	pushf  
  41c4a9:	pop    ebp
  41c4aa:	inc    esi
  41c4ab:	fmul   DWORD PTR [eax-0x480db1a3]
  41c4b1:	retf   
  41c4b2:	cmp    eax,0x1af43235
  41c4b7:	dec    ecx
  41c4b8:	add    DWORD PTR [eax+0x717903ee],ebp
  41c4be:	jle    0x41c49d
  41c4c0:	pop    ecx
  41c4c1:	lahf   
  41c4c2:	(bad)  
  41c4c3:	scas   al,BYTE PTR es:[edi]
  41c4c4:	jg     0x41c476
  41c4c6:	repnz test al,0x5
  41c4c9:	push   0x1371d4cd
  41c4ce:	mov    DWORD PTR [edx+0x2f],ecx
  41c4d1:	push   esp
  41c4d2:	test   DWORD PTR [esi+0x18e3b0b2],0x9ce361a9
  41c4dc:	fcomp  DWORD PTR [ebp-0x33c2d761]
  41c4e2:	clc    
  41c4e3:	mov    ds:0xef87f694,al
  41c4e8:	xchg   BYTE PTR [esi+0x48],dl
  41c4eb:	loope  0x41c532
  41c4ed:	or     ch,BYTE PTR [ecx-0x3d]
  41c4f0:	test   DWORD PTR [ebx+0x47],edx
  41c4f3:	in     eax,dx
  41c4f4:	les    ecx,FWORD PTR [edx+0x328939cb]
  41c4fa:	pusha  
  41c4fb:	ds xchg edx,eax
  41c4fd:	dec    edi
  41c4fe:	jmp    0xe7b4ce8f
  41c503:	data16 clc 
  41c505:	fcmovu st,st(3)
  41c507:	shr    DWORD PTR [ecx+0x22],1
  41c50a:	(bad)  
  41c50b:	mov    ds:0x2dcbca23,al
  41c510:	inc    edx
  41c511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c512:	mov    eax,DWORD PTR [ebp-0xc347179]
  41c518:	xor    bl,dh
  41c51a:	clc    
  41c51b:	push   ebp
  41c51c:	sar    DWORD PTR [edx+0x53],1
  41c51f:	xchg   ebx,eax
  41c520:	or     BYTE PTR [ebp+0x706c2014],al
  41c526:	xchg   edi,eax
  41c527:	add    ebx,DWORD PTR [edi+0x52]
  41c52a:	loope  0x41c549
  41c52c:	xchg   ecx,eax
  41c52d:	icebp  
  41c52e:	call   0x11fa0ee0
  41c533:	cmp    BYTE PTR [ebx],0x86
  41c536:	sbb    edx,DWORD PTR [ecx]
  41c538:	iret   
  41c539:	xchg   edx,eax
  41c53a:	inc    ebx
  41c53b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c53c:	sub    al,0xea
  41c53e:	call   0x397e326f
  41c543:	sbb    DWORD PTR [edi],ebp
  41c545:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c546:	inc    eax
  41c547:	and    DWORD PTR [esi],esi
  41c549:	sbb    esi,DWORD PTR ds:0x8c3b592
  41c54f:	xchg   esi,eax
  41c550:	mov    al,0xf8
  41c552:	sub    eax,0x89d7afe7
  41c557:	xor    edx,DWORD PTR [ebx+0x45453236]
  41c55d:	or     ch,BYTE PTR ss:[esi]
  41c560:	and    ebp,DWORD PTR [esi+edx*2-0x580e6200]
  41c567:	jp     0x41c4ee
  41c569:	out    0x40,eax
  41c56b:	pushf  
  41c56c:	mov    ds:0x5cf33666,eax
  41c571:	jg     0x41c59f
  41c573:	or     BYTE PTR [edx+0x6eb2002e],0x9d
  41c57a:	mov    edx,DWORD PTR [edi+0x64]
  41c57d:	add    ecx,DWORD PTR [esi]
  41c57f:	add    bh,BYTE PTR [ebp+0x7d0b2de7]
  41c585:	pop    edx
  41c586:	cmp    eax,edx
  41c588:	and    eax,0x5c953d70
  41c58d:	xchg   bh,bl
  41c58f:	retf   0x2510
  41c592:	xchg   dh,dh
  41c594:	xor    DWORD PTR [ebx+0x44],ebx
  41c597:	pop    ss
  41c598:	sbb    ecx,DWORD PTR [edx+0x0]
  41c59b:	mov    ds:0x43d9049e,al
  41c5a0:	mov    eax,0x7f1111b0
  41c5a5:	mov    WORD PTR [ecx+ebx*4],gs
  41c5a8:	leave  
  41c5a9:	scas   al,BYTE PTR es:[edi]
  41c5aa:	xor    BYTE PTR [edi],cl
  41c5ac:	and    ecx,edx
  41c5ae:	push   esp
  41c5af:	sub    ch,0x28
  41c5b2:	or     ch,BYTE PTR [esi+eax*8+0x7c]
  41c5b6:	adc    ebx,edi
  41c5b8:	mov    al,ds:0xd7ffd129
  41c5bd:	lahf   
  41c5be:	adc    ah,dl
  41c5c0:	jnp    0x41c61c
  41c5c2:	ins    DWORD PTR es:[edi],dx
  41c5c3:	gs cmp esi,eax
  41c5c6:	jns    0x41c5d2
  41c5c8:	or     BYTE PTR [ecx+eax*1-0xf],dh
  41c5cc:	aas    
  41c5cd:	dec    esp
  41c5ce:	scas   al,BYTE PTR es:[edi]
  41c5cf:	jnp    0x41c5b4
  41c5d1:	fisttp DWORD PTR [ebx+0x69824abe]
  41c5d7:	stos   BYTE PTR es:[edi],al
  41c5d8:	push   ebp
  41c5d9:	(bad)  
  41c5da:	mov    bh,0x1
  41c5dc:	retf   
  41c5dd:	loopne 0x41c65e
  41c5df:	jmp    0x41c5c5
  41c5e1:	xchg   BYTE PTR [edx+0x29],ch
  41c5e4:	lock jb 0x41c64c
  41c5e7:	sub    eax,0x87561857
  41c5ec:	(bad)  [ebp-0x4e]
  41c5ef:	sbb    DWORD PTR [eax],0x6603d976
  41c5f5:	inc    esp
  41c5f6:	adc    BYTE PTR [esi-0x41],bh
  41c5f9:	and    dh,0x60
  41c5fc:	push   0x2a
  41c5fe:	inc    ebx
  41c5ff:	pop    esi
  41c600:	aam    0xb5
  41c602:	jnp    0x41c602
  41c604:	jl     0x41c593
  41c606:	add    eax,0xed33082e
  41c60b:	gs inc ebp
  41c60d:	dec    ebp
  41c60e:	xchg   edi,eax
  41c60f:	pop    ds
  41c610:	into   
  41c611:	mov    edi,0x622f0a59
  41c616:	cld    
  41c617:	(bad)  
  41c618:	(bad)  
  41c619:	fisub  DWORD PTR [ebx+eax*4]
  41c61c:	stos   BYTE PTR es:[edi],al
  41c61d:	mov    DWORD PTR [esi],eax
  41c61f:	jne    0x41c626
  41c621:	xor    DWORD PTR [ebx-0x72bd4dae],0x55
  41c628:	in     eax,dx
  41c629:	xchg   DWORD PTR [ebp-0x68],ebp
  41c62c:	add    BYTE PTR [esi],dl
  41c62e:	pop    ebp
  41c62f:	or     WORD PTR [edi+0xa22141e],bp
  41c636:	cwde   
  41c637:	sar    esp,cl
  41c639:	sub    eax,0x7ff4d7ec
  41c63e:	das    
  41c63f:	out    0xe5,al
  41c641:	loopne 0x41c640
  41c643:	cmc    
  41c644:	or     al,0xf0
  41c646:	add    al,0x64
  41c648:	ret    
  41c649:	gs imul esi,edi,0x4a
  41c64d:	and    al,bl
  41c64f:	or     al,0x9c
  41c651:	sbb    al,0x67
  41c653:	or     ecx,DWORD PTR [edi]
  41c655:	(bad)  
  41c656:	mov    esp,0x8565624b
  41c65b:	arpl   si,cx
  41c65d:	dec    ebp
  41c65e:	mov    bl,0x4c
  41c660:	out    dx,al
  41c661:	aam    0xa7
  41c663:	fbld   TBYTE PTR [ecx]
  41c665:	aaa    
  41c666:	retf   
  41c667:	pop    ecx
  41c668:	add    edx,ecx
  41c66a:	push   ss
  41c66b:	push   cs
  41c66c:	jae    0x41c62d
  41c66e:	int    0xc0
  41c670:	push   eax
  41c671:	xor    al,0xe2
  41c673:	test   eax,0x4cdaa3cb
  41c678:	push   esp
  41c679:	mov    cl,0x62
  41c67b:	xor    al,0x99
  41c67d:	mov    bh,0xb1
  41c67f:	adc    DWORD PTR [ecx-0x66e79161],ebp
  41c685:	scas   eax,DWORD PTR es:[edi]
  41c686:	inc    eax
  41c687:	nop
  41c688:	jmp    0x84e75946
  41c68d:	pop    ebx
  41c68e:	xchg   edx,eax
  41c68f:	pop    ds
  41c690:	xchg   esi,eax
  41c691:	shl    bh,cl
  41c693:	out    dx,al
  41c694:	adc    al,0x30
  41c696:	jbe    0x41c6cb
  41c698:	cwde   
  41c699:	clc    
  41c69a:	or     BYTE PTR [edx-0x7a],al
  41c69d:	iret   
  41c69e:	add    edi,eax
  41c6a0:	jne    0x41c707
  41c6a2:	cmp    eax,0x4f356f60
  41c6a7:	sbb    BYTE PTR [esi],ah
  41c6a9:	cmp    ecx,DWORD PTR [eax]
  41c6ab:	mov    al,0x4f
  41c6ad:	cmp    al,0x5f
  41c6af:	aaa    
  41c6b0:	jnp    0x41c6cd
  41c6b2:	shl    edi,1
  41c6b4:	daa    
  41c6b5:	ja     0x41c6c3
  41c6b7:	inc    ebx
  41c6b8:	aad    0x97
  41c6ba:	aas    
  41c6bb:	or     DWORD PTR [esi-0xb],0xfffffff1
  41c6bf:	pop    esp
  41c6c0:	adc    bl,ah
  41c6c2:	lds    edi,FWORD PTR [ebx]
  41c6c4:	ss call 0x597b138e
  41c6ca:	jns    0x41c709
  41c6cc:	hlt    
  41c6cd:	int3   
  41c6ce:	dec    esp
  41c6cf:	or     ebx,DWORD PTR [ebp-0x21]
  41c6d2:	test   ch,bh
  41c6d4:	xchg   ebx,eax
  41c6d5:	mov    bh,0xff
  41c6d7:	dec    esp
  41c6d8:	sub    al,BYTE PTR [edi]
  41c6da:	mov    ds:0x8e55114e,eax
  41c6df:	mov    dl,bh
  41c6e1:	push   cs
  41c6e2:	fsubp  st(5),st
  41c6e4:	cld    
  41c6e5:	inc    esp
  41c6e6:	mov    al,ds:0x6ec88658
  41c6eb:	fiadd  WORD PTR [ebp-0xf]
  41c6ee:	les    eax,FWORD PTR [ebx-0x4e8bbc7c]
  41c6f4:	pop    esi
  41c6f5:	dec    esp
  41c6f6:	xor    bl,dl
  41c6f8:	or     eax,0x9a172565
  41c6fd:	jno    0x41c73d
  41c6ff:	push   eax
  41c700:	xchg   ch,bh
  41c702:	mov    esi,0xfe85c659
  41c707:	mov    bh,BYTE PTR [edi]
  41c709:	push   cs
  41c70a:	aad    0xf2
  41c70c:	nop
  41c70d:	shl    BYTE PTR [di],0xb8
  41c711:	ss (bad) 
  41c713:	sahf   
  41c714:	sbb    edi,DWORD PTR [edx-0x61]
  41c717:	dec    ebp
  41c718:	mov    fs,WORD PTR [ebx+0x31e7af37]
  41c71e:	sbb    ebx,ebp
  41c720:	sbb    BYTE PTR es:[esi-0x6804cc47],0xf5
  41c728:	mov    al,ds:0x5b41e3ed
  41c72d:	not    BYTE PTR [edi]
  41c72f:	jecxz  0x41c78e
  41c731:	outs   dx,BYTE PTR ds:[esi]
  41c732:	sar    DWORD PTR [eax],0xf3
  41c735:	out    0x7d,al
  41c737:	mul    BYTE PTR [edx]
  41c739:	xchg   esi,eax
  41c73a:	mov    ch,0x5f
  41c73c:	in     al,0x9e
  41c73e:	call   FWORD PTR [esi]
  41c740:	iret   
  41c741:	jno    0x41c768
  41c743:	mul    BYTE PTR [edx]
  41c745:	cld    
  41c746:	movlps QWORD PTR [ebx],xmm6
  41c749:	(bad)  
  41c74a:	mov    al,ds:0xf693c8c9
  41c74f:	pop    es
  41c750:	fcom   QWORD PTR [edi-0x1c982bb7]
  41c756:	xchg   edi,eax
  41c757:	stos   BYTE PTR es:[edi],al
  41c758:	add    DWORD PTR [edx-0x14c43758],ebp
  41c75e:	mov    ebp,0xab9019dd
  41c763:	push   esi
  41c764:	pop    esp
  41c765:	in     al,0x79
  41c767:	sub    edi,DWORD PTR [esi+ebx*2+0x3e]
  41c76b:	test   al,bh
  41c76d:	mov    dh,0x1c
  41c76f:	mov    BYTE PTR [eax+0xa],cl
  41c772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c773:	pop    eax
  41c774:	cmc    
  41c775:	push   ss
  41c776:	(bad)  
  41c777:	xlat   BYTE PTR ds:[ebx]
  41c778:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41c77a:	ins    DWORD PTR es:[edi],dx
  41c77b:	mov    esp,0x6e7c7297
  41c780:	xor    ebp,ecx
  41c782:	mov    ebx,DWORD PTR [edi-0x51f16315]
  41c788:	popa   
  41c789:	hlt    
  41c78a:	pop    eax
  41c78b:	cmc    
  41c78c:	and    al,0x21
  41c78e:	xchg   edx,eax
  41c78f:	jl     0x41c7c3
  41c791:	adc    ebx,DWORD PTR [edx]
  41c793:	jno    0x41c787
  41c795:	jno    0x41c718
  41c797:	jg     0x41c7a8
  41c799:	mov    esp,0x8896f126
  41c79e:	lods   eax,DWORD PTR ds:[esi]
  41c79f:	xchg   esi,eax
  41c7a0:	(bad)  
  41c7a1:	imul   esp,ecx,0x5ad86d6e
  41c7a7:	push   0xffffffa8
  41c7a9:	pop    ebp
  41c7aa:	jecxz  0x41c829
  41c7ac:	gs sub al,0xcc
  41c7af:	add    al,0x4f
  41c7b1:	mov    esi,edx
  41c7b3:	jmp    0x9c51:0x736f5394
  41c7ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7bb:	jl     0x41c75c
  41c7bd:	jp     0x41c7f1
  41c7bf:	dec    eax
  41c7c0:	or     BYTE PTR [esi],ch
  41c7c2:	sub    al,0x25
  41c7c4:	push   ss
  41c7c5:	sbb    bh,BYTE PTR [ebx+esi*8+0x3f647b22]
  41c7cc:	inc    esp
  41c7cd:	(bad)  
  41c7ce:	sbb    BYTE PTR [ecx-0x638464b],al
  41c7d4:	in     al,dx
  41c7d5:	in     eax,dx
  41c7d6:	and    al,0xe0
  41c7d8:	sub    ch,BYTE PTR [ecx+0x51e3b7cb]
  41c7de:	xor    al,0x6
  41c7e0:	mov    DWORD PTR [esi],edi
  41c7e2:	pop    ebx
  41c7e3:	add    ah,BYTE PTR [ecx-0x5b]
  41c7e6:	lea    edx,[ecx-0x1958b9ce]
  41c7ec:	arpl   ax,sp
  41c7ee:	test   eax,0x232c3917
  41c7f3:	jecxz  0x41c862
  41c7f5:	push   cs
  41c7f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7f7:	mov    bl,0x16
  41c7f9:	out    dx,al
  41c7fa:	mov    ebp,0xaf407ffe
  41c7ff:	(bad)  
  41c800:	and    DWORD PTR [ecx-0x1],edi
  41c803:	jle    0x41c833
  41c805:	(bad)  
  41c806:	mov    al,ds:0x899862b8
  41c80b:	(bad)  
  41c80c:	(bad)  
  41c80d:	jp     0x41c7a8
  41c80f:	pop    esp
  41c810:	shl    BYTE PTR [edx-0x301dd824],cl
  41c816:	je     0x41c80c
  41c818:	add    edx,DWORD PTR [eax]
  41c81a:	(bad)  
  41c81b:	xor    eax,0xb3282e7b
  41c820:	mov    al,ds:0xc54054f5
  41c825:	push   ecx
  41c826:	stos   BYTE PTR es:[edi],al
  41c827:	(bad)  
  41c829:	clc    
  41c82a:	das    
  41c82b:	sbb    al,0xb9
  41c82d:	cmp    ecx,DWORD PTR [esi+0x12e256f9]
  41c833:	mov    esp,0x8372ac0f
  41c838:	cmc    
  41c839:	ins    BYTE PTR es:[edi],dx
  41c83a:	stos   BYTE PTR es:[edi],al
  41c83b:	push   0x77251a84
  41c840:	adc    dl,BYTE PTR [eax+ebx*4]
  41c843:	mov    eax,ds:0x4fcc97ea
  41c848:	arpl   bp,bx
  41c84a:	out    dx,eax
  41c84b:	inc    edi
  41c84c:	mov    ds:0xfb9d146f,eax
  41c851:	leave  
  41c852:	mov    ds:0x83052046,al
  41c857:	loope  0x41c8c5
  41c859:	call   0x5a117319
  41c85e:	das    
  41c85f:	xchg   ebx,eax
  41c860:	lock in eax,dx
  41c862:	add    bl,bh
  41c864:	ret    
  41c865:	sti    
  41c866:	inc    edx
  41c867:	mov    al,0xea
  41c869:	push   ebp
  41c86a:	cli    
  41c86b:	mov    ds:0x836f0f5,eax
  41c870:	push   es
  41c871:	repnz dec ebp
  41c873:	inc    ecx
  41c874:	adc    al,0xeb
  41c876:	div    DWORD PTR [ecx]
  41c878:	push   ebx
  41c879:	repnz push esp
  41c87b:	jae    0x41c8b9
  41c87d:	test   al,0xcb
  41c87f:	outs   dx,DWORD PTR ds:[esi]
  41c880:	push   edi
  41c881:	jns    0x41c8ae
  41c883:	imul   edx,DWORD PTR [edx],0xffffffd6
  41c886:	adc    edx,DWORD PTR [eax]
  41c888:	call   0xf4a2:0xfb651e3
  41c88f:	cmp    bh,BYTE PTR ds:0x81a53503
  41c895:	add    al,0x34
  41c897:	sub    DWORD PTR [esi],esp
  41c899:	test   eax,0x938a17fa
  41c89e:	loopne 0x41c914
  41c8a0:	push   cs
  41c8a1:	mov    dl,0xa4
  41c8a3:	dec    ecx
  41c8a4:	adc    al,0xdb
  41c8a6:	js     0x41c8b7
  41c8a8:	out    dx,al
  41c8a9:	aaa    
  41c8aa:	out    dx,al
  41c8ab:	popf   
  41c8ac:	outs   dx,DWORD PTR ds:[esi]
  41c8ad:	mov    bh,BYTE PTR [edx-0x566aa470]
  41c8b3:	cmp    DWORD PTR [ebx],edi
  41c8b5:	pusha  
  41c8b6:	jo     0x41c932
  41c8b8:	mov    al,BYTE PTR [esi-0x57]
  41c8bb:	cmp    DWORD PTR [eax+0x39],ebx
  41c8be:	pop    ebp
  41c8bf:	sahf   
  41c8c0:	stc    
  41c8c1:	xor    ecx,DWORD PTR [ecx+0x44]
  41c8c4:	dec    ebp
  41c8c5:	and    DWORD PTR [esi+0x7c39092b],esp
  41c8cb:	iret   
  41c8cc:	adc    eax,0xc95af4e5
  41c8d1:	xchg   esp,eax
  41c8d2:	int    0x65
  41c8d4:	sbb    eax,0xd89b4b5c
  41c8d9:	mov    esi,0x84a36b9b
  41c8de:	jle    0x41c95f
  41c8e0:	xchg   ecx,eax
  41c8e1:	jns    0x41c8d1
  41c8e3:	retf   0xfe52
  41c8e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8e7:	dec    esp
  41c8e8:	dec    eax
  41c8e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8ea:	iret   
  41c8eb:	mov    edi,0x4ca7598a
  41c8f0:	cpuid  
  41c8f2:	jnp    0x41c8a5
  41c8f4:	xchg   ecx,eax
  41c8f5:	arpl   di,bx
  41c8f7:	(bad)  
  41c8f8:	std    
  41c8f9:	xor    DWORD PTR [ebx+0x42],ebp
  41c8fc:	adc    esi,DWORD PTR ds:0x237d8adf
  41c902:	rcr    BYTE PTR [ecx-0x8],0xe6
  41c906:	push   es
  41c907:	imul   ebx,DWORD PTR [eax-0x1c],0x7b
  41c90b:	push   0x34067d5a
  41c910:	popf   
  41c911:	mov    WORD PTR [ebx+eax*1-0x2cd0cf26],fs
  41c918:	int3   
  41c919:	int    0xf6
  41c91b:	mov    ebx,0x914d9106
  41c920:	aas    
  41c921:	or     ah,0xbe
  41c924:	xchg   edx,eax
  41c925:	xor    eax,0x38560531
  41c92a:	or     al,0x84
  41c92c:	sub    esp,DWORD PTR [edi+ebx*1+0x2a0f6b29]
  41c933:	sbb    esp,DWORD PTR [ebp+0x312734ca]
  41c939:	popf   
  41c93a:	mov    dl,0x9f
  41c93c:	cmp    BYTE PTR ds:0xf79e8935,bl
  41c942:	jp     0x41c975
  41c944:	jb     0x41c915
  41c946:	out    dx,eax
  41c947:	out    dx,al
  41c948:	cs mov ecx,0xe3873f4f
  41c94e:	pop    esp
  41c94f:	mov    cl,0xb6
  41c951:	outs   dx,BYTE PTR ds:[esi]
  41c952:	sub    ax,0x6c04
  41c956:	sub    eax,DWORD PTR [eax]
  41c958:	mov    ds:0x3df9a1fe,al
  41c95d:	jle    0x41c951
  41c95f:	cs (bad) 
  41c961:	jle    0x41c9dc
  41c963:	mov    ah,0x25
  41c965:	lods   eax,DWORD PTR ds:[esi]
  41c966:	test   esp,esi
  41c968:	cdq    
  41c969:	mov    ds:0x156f49,al
  41c96e:	fstp   DWORD PTR [ebp-0x1d]
  41c971:	and    ebp,ecx
  41c973:	div    DWORD PTR [ebx+0x7261f0e8]
  41c979:	mov    dh,0x88
  41c97b:	test   BYTE PTR [ecx],0xa7
  41c97e:	jle    0x41c986
  41c980:	xor    ecx,esp
  41c982:	outs   dx,DWORD PTR ds:[esi]
  41c983:	test   DWORD PTR [ebp+0x2034dcec],ebp
  41c989:	rcl    BYTE PTR ss:[eax],1
  41c98c:	test   esp,ebp
  41c98e:	adc    DWORD PTR [ecx-0x29ec5071],edx
  41c994:	imul   ebx,DWORD PTR [ebx-0x13694efb],0x4a
  41c99b:	test   al,0x14
  41c99d:	push   0xf2d7f1c1
  41c9a2:	ins    DWORD PTR es:[edi],dx
  41c9a3:	repz fs aas 
  41c9a6:	cmp    ebp,DWORD PTR [esp+edx*8]
  41c9a9:	mov    ecx,0xe6f2f3f4
  41c9ae:	jecxz  0x41c995
  41c9b0:	repz clc 
  41c9b2:	mov    ds:0x18effcde,eax
  41c9b7:	cmp    al,0x53
  41c9b9:	out    0x9a,eax
  41c9bb:	mov    ebx,0xd74bc615
  41c9c0:	mov    WORD PTR [eax+0x4a],cs
  41c9c3:	data16 xor bl,0xcb
  41c9c7:	jp     0x41c9bb
  41c9c9:	mov    esp,0x15c62bf8
  41c9ce:	loope  0x41c968
  41c9d0:	or     al,0x70
  41c9d2:	sti    
  41c9d3:	sub    eax,DWORD PTR [ebx]
  41c9d5:	in     al,dx
  41c9d6:	cmp    bh,dh
  41c9d8:	and    al,0x8a
  41c9da:	test   DWORD PTR [edx+0x3ea0d29e],eax
  41c9e0:	pop    eax
  41c9e1:	jecxz  0x41c9f5
  41c9e3:	jns    0x41c9b0
  41c9e5:	into   
  41c9e6:	jg     0x41c9ef
  41c9e8:	inc    ebp
  41c9e9:	aaa    
  41c9ea:	push   ss
  41c9eb:	ins    BYTE PTR es:[edi],dx
  41c9ec:	stos   BYTE PTR es:[edi],al
  41c9ed:	cmp    BYTE PTR [edx-0x2c],bh
  41c9f0:	pop    ss
  41c9f1:	scas   eax,DWORD PTR es:[edi]
  41c9f2:	into   
  41c9f3:	enter  0xd9e2,0x28
  41c9f7:	in     eax,0xc4
  41c9f9:	test   al,0x1b
  41c9fb:	adc    eax,0x423f5e7b
  41ca00:	inc    BYTE PTR [ecx]
  41ca02:	add    eax,0x22f53e8f
  41ca07:	loope  0x41ca7b
  41ca09:	dec    ebp
  41ca0a:	pop    ecx
  41ca0b:	dec    ebp
  41ca0c:	mov    ah,0x4d
  41ca0e:	aam    0x55
  41ca10:	fadd   DWORD PTR [ebx]
  41ca12:	xchg   esp,eax
  41ca13:	xor    al,0xd1
  41ca15:	pop    eax
  41ca16:	call   0x99e2:0x1d74cfe4
  41ca1d:	sbb    ah,ah
  41ca1f:	cdq    
  41ca20:	in     eax,0x74
  41ca22:	sahf   
  41ca23:	and    eax,0x4114c2
  41ca28:	or     dl,ah
  41ca2a:	shl    DWORD PTR [edx],0x4
  41ca2d:	js     0x41c9e6
  41ca2f:	repz pop ss
  41ca31:	lahf   
  41ca32:	cwde   
  41ca33:	outs   dx,DWORD PTR ds:[esi]
  41ca34:	sbb    eax,0xd64f934a
  41ca39:	in     al,dx
  41ca3a:	leave  
  41ca3b:	xchg   DWORD PTR ds:0x35a442d,esi
  41ca41:	xchg   edx,eax
  41ca42:	sbb    edx,0xffffff80
  41ca45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca46:	xchg   esi,eax
  41ca47:	fist   WORD PTR [ecx]
  41ca49:	(bad)  
  41ca4a:	sub    ch,BYTE PTR [ebx-0x59d37165]
  41ca50:	ss push ds
  41ca52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca53:	cwde   
  41ca54:	loop   0x41ca01
  41ca56:	frstor [esi]
  41ca58:	shl    BYTE PTR [eiz*4-0x6105c52c],cl
  41ca5f:	out    0xf7,eax
  41ca61:	mov    ah,0x7e
  41ca63:	mov    WORD PTR [eax+0x52],?
  41ca66:	mov    ecx,0xe6fa09b0
  41ca6b:	xor    al,cl
  41ca6d:	sub    eax,0x431b9df3
  41ca72:	dec    esi
  41ca73:	test   eax,0x8f31ca30
  41ca78:	xor    BYTE PTR [ecx],cl
  41ca7a:	(bad)  
  41ca7b:	loopne 0x41ca75
  41ca7d:	outs   dx,DWORD PTR ds:[esi]
  41ca7e:	test   eax,0xb329eab8
  41ca83:	lods   eax,DWORD PTR ds:[esi]
  41ca84:	int3   
  41ca85:	or     cl,BYTE PTR [edi+0x31832884]
  41ca8b:	adc    DWORD PTR [ecx-0x6a5dbc6c],0x669fa12d
  41ca95:	fdivrp st(0),st
  41ca97:	out    0x78,eax
  41ca99:	sub    al,0x10
  41ca9b:	mov    al,ds:0xea137266
  41caa0:	push   cs
  41caa1:	add    BYTE PTR [ecx*4+0x51b12dc5],al
  41caa8:	aam    0xc4
  41caaa:	jo     0x41ca47
  41caac:	jae    0x41cae0
  41caae:	sbb    eax,0x9b364eba
  41cab3:	hlt    
  41cab4:	push   ebx
  41cab5:	mov    ebp,0xb34c6440
  41caba:	(bad)  
  41cabb:	xor    ch,dh
  41cabd:	scas   al,BYTE PTR es:[edi]
  41cabe:	mov    ebx,0xe56a2e86
  41cac3:	imul   ebp,DWORD PTR [ebx+edx*8],0x497e26fd
  41caca:	dec    ecx
  41cacb:	(bad)  
  41cacc:	fld    QWORD PTR [eax+0x12]
  41cacf:	retf   
  41cad0:	mov    ebx,0x7b6fd4b2
  41cad5:	xchg   esi,eax
  41cad6:	data16 sbb cl,BYTE PTR [ebp-0x599280cc]
  41cadd:	dec    esi
  41cade:	ins    BYTE PTR es:[edi],dx
  41cadf:	dec    edi
  41cae0:	cmp    BYTE PTR ds:0xb73f3c5c,cl
  41cae6:	repnz mov edi,0xa701e745
  41caec:	and    al,0xa
  41caee:	ret    0x9ac4
  41caf1:	jbe    0x41cad6
  41caf3:	pop    ss
  41caf4:	or     bl,BYTE PTR ds:0xd285e32e
  41cafa:	fimul  DWORD PTR [edi-0x4bf2cd57]
  41cb00:	xchg   ebp,eax
  41cb01:	cmp    ah,0xf7
  41cb04:	lods   eax,DWORD PTR ds:[esi]
  41cb05:	test   eax,0xbdc93855
  41cb0a:	push   ds
  41cb0b:	sbb    eax,0x571e58b9
  41cb10:	sub    BYTE PTR [edi-0x16],dl
  41cb13:	repnz dec ebp
  41cb15:	mov    esp,0x99d73732
  41cb1a:	push   ss
  41cb1b:	push   esp
  41cb1c:	js     0x41cb8f
  41cb1e:	bound  edi,QWORD PTR [eax+ebp*4-0x62]
  41cb22:	mov    al,ds:0x5590f367
  41cb27:	bound  ebx,QWORD PTR [ebp-0x80]
  41cb2a:	jecxz  0x41cabe
  41cb2c:	test   edx,edi
  41cb2e:	lock jle 0x41cb56
  41cb31:	inc    esi
  41cb32:	or     al,dh
  41cb34:	add    al,dh
  41cb36:	xor    BYTE PTR [ebp-0x3f],dh
  41cb39:	aas    
  41cb3a:	and    al,0x3a
  41cb3c:	jmp    0x41cb7a
  41cb3e:	sub    eax,0x567b42cf
  41cb43:	jle    0x41caf6
  41cb45:	fdivr  DWORD PTR fs:0x533326bb
  41cb4c:	in     al,0xff
  41cb4e:	mov    esi,0xf506f85b
  41cb53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb54:	ds inc esi
  41cb56:	inc    eax
  41cb57:	popa   
  41cb58:	jmp    0x2dae:0x2126dc7e
  41cb5f:	ret    0xd73a
  41cb62:	stos   DWORD PTR es:[edi],eax
  41cb63:	idiv   esp
  41cb65:	shr    DWORD PTR [eax-0x75],0xff
  41cb69:	call   0xf705f3a5
  41cb6e:	xchg   edx,eax
  41cb6f:	out    0x1c,al
  41cb71:	fst    DWORD PTR [edx]
  41cb73:	into   
  41cb74:	sbb    eax,esi
  41cb76:	cmc    
  41cb77:	iret   
  41cb78:	xchg   ecx,eax
  41cb79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb7a:	push   ebp
  41cb7b:	hlt    
  41cb7c:	lds    eax,FWORD PTR [ebx]
  41cb7e:	iret   
  41cb7f:	rol    DWORD PTR [edi+ebx*8],cl
  41cb82:	dec    ebx
  41cb83:	sub    cl,ah
  41cb85:	movzx  esp,WORD PTR [ebx]
  41cb88:	sbb    al,0x32
  41cb8a:	sbb    al,0x6e
  41cb8c:	add    edi,DWORD PTR [eax-0x51]
  41cb8f:	jne    0x41cbb3
  41cb91:	cmc    
  41cb92:	cmp    al,0x7c
  41cb94:	cwde   
  41cb95:	sbb    BYTE PTR ds:0x40740071,0x9c
  41cb9c:	xor    eax,0xdd67e6a7
  41cba1:	adc    edi,DWORD PTR [ebx]
  41cba3:	pop    ds
  41cba4:	push   ds
  41cba5:	leave  
  41cba6:	clc    
  41cba7:	outs   dx,BYTE PTR ds:[esi]
  41cba8:	ins    BYTE PTR es:[edi],dx
  41cba9:	pop    edi
  41cbaa:	mov    bl,0x1
  41cbac:	dec    ebp
  41cbad:	push   esi
  41cbae:	cld    
  41cbaf:	jnp    0x41cb55
  41cbb1:	(bad)  
  41cbb2:	scas   al,BYTE PTR es:[edi]
  41cbb3:	inc    ecx
  41cbb4:	xchg   esi,esi
  41cbb6:	cmp    ecx,DWORD PTR [edi+0x0]
  41cbb9:	push   ds
  41cbba:	jp     0x41cb95
  41cbbc:	(bad)  
  41cbbd:	in     eax,dx
  41cbbe:	pusha  
  41cbbf:	sub    DWORD PTR [ecx],ebx
  41cbc1:	xor    BYTE PTR [edx+0x1ebef242],bl
  41cbc7:	arpl   WORD PTR [ebx+0x6c],bp
  41cbca:	ss inc esp
  41cbcc:	sub    DWORD PTR [edi+0x55],edi
  41cbcf:	sbb    BYTE PTR [edx+0x33],0xd0
  41cbd3:	pushf  
  41cbd4:	(bad)  
  41cbd5:	sub    BYTE PTR [esp+ebp*1],dl
  41cbd8:	ja     0x41cbc4
  41cbda:	inc    ebp
  41cbdb:	add    cl,ch
  41cbdd:	dec    esi
  41cbde:	cmp    al,0x59
  41cbe0:	ds mov ch,0xb9
  41cbe3:	jg     0x41cb9f
  41cbe5:	sub    DWORD PTR [ecx-0x11],esp
  41cbe8:	xor    ebp,DWORD PTR [edx]
  41cbea:	(bad)  
  41cbeb:	jo     0x41cc3f
  41cbed:	cmp    BYTE PTR [eax+0x67d57e28],dh
  41cbf3:	lods   al,BYTE PTR ds:[esi]
  41cbf4:	das    
  41cbf5:	dec    esp
  41cbf6:	jge    0x41cba7
  41cbf8:	inc    ebp
  41cbf9:	mov    ds:0x1b459bbc,eax
  41cbfe:	shl    DWORD PTR [esi],0x72
  41cc01:	jmp    0x346c:0x8972e5fc
  41cc08:	jl     0x41cbd9
  41cc0a:	sub    edx,DWORD PTR [ebx]
  41cc0c:	pop    edi
  41cc0d:	repnz cmp dl,al
  41cc10:	shl    DWORD PTR [edx-0x57],cl
  41cc13:	mov    dl,0xd
  41cc15:	pop    ss
  41cc16:	and    DWORD PTR [edi],0xed6c1dc5
  41cc1c:	mov    edi,es
  41cc1e:	sbb    al,0xb
  41cc20:	xchg   ebp,eax
  41cc21:	in     al,0xe4
  41cc23:	out    dx,al
  41cc24:	jecxz  0x41cc51
  41cc26:	push   eax
  41cc27:	scas   eax,DWORD PTR es:[edi]
  41cc28:	shl    DWORD PTR [esi],0xc5
  41cc2b:	or     DWORD PTR [eax+0x25],ecx
  41cc2e:	aas    
  41cc2f:	in     eax,dx
  41cc30:	std    
  41cc31:	and    BYTE PTR [edi],ah
  41cc33:	jl     0x41cbbd
  41cc35:	jle    0x41cc36
  41cc37:	imul   BYTE PTR ds:0xdeec7b14
  41cc3d:	adc    BYTE PTR [ebp+0x28934e1b],bl
  41cc43:	jne    0x41cc94
  41cc45:	xor    al,0xf1
  41cc47:	test   ebx,ebp
  41cc49:	pop    edi
  41cc4a:	ins    DWORD PTR es:[edi],dx
  41cc4b:	push   ebp
  41cc4c:	sti    
  41cc4d:	sbb    DWORD PTR [ebx+0x763c93a],esp
  41cc53:	xchg   ecx,eax
  41cc54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc55:	je     0x41cc20
  41cc57:	fs test al,0x50
  41cc5a:	inc    esi
  41cc5b:	xchg   ebx,eax
  41cc5c:	ret    
  41cc5d:	sub    eax,0x2a3f7c64
  41cc62:	out    dx,eax
  41cc63:	xchg   esp,eax
  41cc64:	pop    ebp
  41cc65:	jbe    0x41cc8b
  41cc67:	lods   eax,DWORD PTR ds:[esi]
  41cc68:	pop    eax
  41cc69:	test   eax,0xaf944824
  41cc6e:	pop    edi
  41cc6f:	mov    al,0x2d
  41cc71:	xchg   ebx,eax
  41cc72:	test   edx,edx
  41cc74:	pop    edx
  41cc75:	jp     0x41cc7e
  41cc77:	push   ebx
  41cc78:	rcr    BYTE PTR [ebx],0x45
  41cc7b:	xchg   esi,eax
  41cc7c:	or     eax,0xb5f6822a
  41cc81:	xchg   edi,eax
  41cc82:	sub    eax,0xe012b065
  41cc87:	in     al,0xa
  41cc89:	xor    BYTE PTR [edx-0x70],ah
  41cc8c:	xchg   ebx,eax
  41cc8d:	push   0x3ca326b2
  41cc92:	sub    BYTE PTR [edx-0x20],dl
  41cc95:	pop    es
  41cc96:	adc    dh,BYTE PTR [ebp-0x3d]
  41cc99:	mov    esi,0xbcd82877
  41cc9e:	dec    edx
  41cc9f:	cmp    al,BYTE PTR ds:0x806be76
  41cca5:	gs jecxz 0x41cd19
  41cca8:	aas    
  41cca9:	cwde   
  41ccaa:	fstp   QWORD PTR [ebp+0x580e6f49]
  41ccb0:	and    edi,DWORD PTR [edx]
  41ccb2:	push   eax
  41ccb3:	inc    ecx
  41ccb4:	fmul   QWORD PTR [eax-0x2a]
  41ccb7:	out    0xe3,eax
  41ccb9:	adc    cl,BYTE PTR [ebx-0xc58674f]
  41ccbf:	mov    ?,WORD PTR [di-0x2e96]
  41ccc4:	pushf  
  41ccc5:	mov    BYTE PTR ds:0x604f12c9,bl
  41cccb:	add    BYTE PTR [esi-0xbe635b2],cl
  41ccd1:	jne    0x41cc8b
  41ccd3:	leave  
  41ccd4:	mov    bl,0xaa
  41ccd6:	rol    BYTE PTR [edi],1
  41ccd8:	mov    ?,WORD PTR [ecx+0x24fa2cfb]
  41ccde:	or     ah,BYTE PTR [ebx+ebp*1-0x58eda08d]
  41cce5:	mov    esp,0x574b4aef
  41ccea:	and    bl,BYTE PTR [edi-0x601631d6]
  41ccf0:	outs   dx,DWORD PTR ds:[esi]
  41ccf1:	adc    BYTE PTR [ebx+0x2f],al
  41ccf4:	lahf   
  41ccf5:	mov    esp,?
  41ccf7:	mov    eax,DWORD PTR [edx]
  41ccf9:	scas   eax,DWORD PTR es:[edi]
  41ccfa:	test   dh,0xba
  41ccfd:	jecxz  0x41cd3a
  41ccff:	mov    cl,0xc1
  41cd01:	lock (bad) [ecx]
  41cd04:	inc    eax
  41cd05:	leave  
  41cd06:	or     BYTE PTR [ecx],cl
  41cd08:	or     BYTE PTR [ecx-0x1d6fd132],dh
  41cd0e:	sub    ebp,DWORD PTR [edx+0x1eb40935]
  41cd14:	outs   dx,DWORD PTR ds:[esi]
  41cd15:	popa   
  41cd16:	sub    al,0xc8
  41cd18:	push   0xffffffb0
  41cd1a:	cdq    
  41cd1b:	mov    bl,0x60
  41cd1d:	mov    ebx,0xf0365c38
  41cd22:	sti    
  41cd23:	std    
  41cd24:	dec    esi
  41cd25:	dec    edx
  41cd26:	or     al,0x2b
  41cd28:	and    ebx,DWORD PTR [edi+edi*2+0x4f]
  41cd2c:	cmp    bh,BYTE PTR [ebx]
  41cd2e:	retf   
  41cd2f:	sbb    eax,0x3848ac71
  41cd34:	mov    edi,esp
  41cd36:	cwde   
  41cd37:	(bad)  
  41cd38:	repz cld 
  41cd3a:	adc    DWORD PTR [eax-0x7e6c4a8],esp
  41cd40:	mov    es,WORD PTR [esi+0x5c2b8771]
  41cd46:	and    DWORD PTR [eax-0x532fe7b6],ecx
  41cd4c:	cmp    eax,0x88dd44f0
  41cd51:	fwait
  41cd52:	jno    0x41cdc9
  41cd54:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41cd56:	add    DWORD PTR [edx-0x70],ebp
  41cd59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd5a:	mov    al,0xbc
  41cd5c:	in     al,0xa7
  41cd5e:	mov    cl,0xb3
  41cd60:	jns    0x41cd01
  41cd62:	add    ah,dh
  41cd64:	and    eax,0x14c27692
  41cd69:	jne    0x41cceb
  41cd6b:	dec    ebx
  41cd6d:	into   
  41cd6e:	in     eax,dx
  41cd6f:	mov    bh,0x32
  41cd71:	dec    edi
  41cd72:	adc    esi,esi
  41cd74:	test   DWORD PTR [esi-0x51],ebp
  41cd77:	retf   0x1e00
  41cd7a:	in     al,0xe5
  41cd7c:	mov    DWORD PTR [esi+ebx*8+0x4bfde8a4],edi
  41cd83:	jns    0x41cd46
  41cd85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd86:	push   ebp
  41cd87:	and    dl,BYTE PTR [ecx-0x25bd5bd7]
  41cd8d:	pop    ebx
  41cd8e:	sbb    BYTE PTR [ecx+0x464cd552],al
  41cd94:	pop    ebx
  41cd95:	xchg   esp,eax
  41cd96:	(bad)  
  41cd97:	stos   BYTE PTR es:[edi],al
  41cd98:	fsub   QWORD PTR [ebx+0x45]
  41cd9b:	sti    
  41cd9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd9d:	out    0x4c,eax
  41cd9f:	cli    
  41cda0:	jl     0x41cd2c
  41cda2:	adc    eax,DWORD PTR [ebx-0x2242a350]
  41cda8:	sbb    eax,0x2ffd8bf
  41cdad:	clc    
  41cdae:	inc    edx
  41cdaf:	sahf   
  41cdb0:	adc    BYTE PTR [edi-0x15],ch
  41cdb3:	ror    BYTE PTR [ebx+0x2d3c6e21],0x72
  41cdba:	push   ecx
  41cdbb:	ins    DWORD PTR es:[edi],dx
  41cdbc:	out    dx,al
  41cdbd:	daa    
  41cdbe:	mov    bh,al
  41cdc0:	dec    ebp
  41cdc1:	jl     0x41cdcf
  41cdc3:	xor    DWORD PTR [ebp+0x23],edi
  41cdc6:	cmp    esi,ebp
  41cdc8:	in     al,dx
  41cdc9:	data16 jbe 0x41ce06
  41cdcc:	aam    0x9a
  41cdce:	xchg   esi,eax
  41cdcf:	and    cl,BYTE PTR [ebx-0xb]
  41cdd2:	jg     0x41ce25
  41cdd4:	sbb    esi,DWORD PTR [edx-0x2a84f3fb]
  41cdda:	pusha  
  41cddb:	outs   dx,BYTE PTR ds:[esi]
  41cddc:	add    bl,BYTE PTR [ecx+0x62]
  41cddf:	cmp    ah,BYTE PTR [eax]
  41cde1:	cli    
  41cde2:	cmp    bh,BYTE PTR [esi]
  41cde4:	retf   0x2c7
  41cde7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cde8:	aam    0x88
  41cdea:	jns    0x41cda8
  41cdec:	xchg   edi,eax
  41cded:	sbb    esp,DWORD PTR [esi]
  41cdef:	xchg   ecx,eax
  41cdf0:	xchg   esp,eax
  41cdf1:	leave  
  41cdf2:	jae    0x41ce5d
  41cdf4:	dec    esp
  41cdf5:	pusha  
  41cdf6:	ror    DWORD PTR [bx+0x3f1d],1
  41cdfb:	mov    BYTE PTR [ebp-0x57fcd64d],dl
  41ce01:	push   esp
  41ce02:	sbb    BYTE PTR [ebp-0x71],0x78
  41ce06:	test   BYTE PTR [ebx+0x6],0xfd
  41ce0a:	xchg   DWORD PTR [esi-0x3fe2206c],edx
  41ce10:	fwait
  41ce11:	adc    edi,DWORD PTR [eax+0x22b57c92]
  41ce17:	fwait
  41ce18:	mov    WORD PTR [esi-0x3084512],?
  41ce1e:	pop    edi
  41ce1f:	or     dh,BYTE PTR [ecx]
  41ce21:	sub    esi,DWORD PTR [ecx+0x5051d584]
  41ce27:	or     bh,ch
  41ce29:	test   BYTE PTR [ebx],dh
  41ce2b:	call   0xc8cb:0xca4f008c
  41ce32:	mov    eax,0x9b159552
  41ce37:	mov    ds:0x82545cac,eax
  41ce3c:	mov    BYTE PTR [edi+eax*1+0x66],ch
  41ce40:	loope  0x41ce5f
  41ce42:	cmp    dl,0x9c
  41ce45:	fst    DWORD PTR cs:[ebx-0x64]
  41ce49:	ret    0xf60b
  41ce4c:	xchg   esp,eax
  41ce4d:	push   esp
  41ce4e:	arpl   bp,si
  41ce50:	cmp    edi,ecx
  41ce52:	dec    esp
  41ce53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce54:	jecxz  0x41ce35
  41ce56:	(bad)  [esi]
  41ce58:	in     eax,0x53
  41ce5a:	or     al,0xac
  41ce5c:	xor    DWORD PTR [ecx+0x3d],ebp
  41ce5f:	sub    DWORD PTR [ebx+edi*2-0x3b],edx
  41ce63:	xor    edx,DWORD PTR [edi+0x60863555]
  41ce69:	add    DWORD PTR [edi],eax
  41ce6b:	xor    ebp,DWORD PTR ds:0xf61a62bf
  41ce72:	or     esp,esp
  41ce74:	test   BYTE PTR ds:[esi+0x566ebbb6],bl
  41ce7b:	mov    esp,0x5090f8fe
  41ce80:	mov    ecx,0x5d9ed1dd
  41ce85:	push   ss
  41ce86:	cwde   
  41ce87:	dec    ecx
  41ce88:	sahf   
  41ce89:	mov    ds:0xa5c70094,al
  41ce8e:	inc    edi
  41ce8f:	outs   dx,BYTE PTR ds:[esi]
  41ce90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce91:	dec    edi
  41ce92:	pop    eax
  41ce93:	dec    esp
  41ce94:	and    al,0x74
  41ce96:	sub    BYTE PTR [ebx+0x2802fabd],0x5f
  41ce9d:	int3   
  41ce9e:	mov    dh,0xb8
  41cea0:	or     eax,0xc97f9b62
  41cea5:	or     DWORD PTR [edx+0x2d8eb57c],esi
  41ceab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ceac:	mov    ch,0x44
  41ceae:	and    DWORD PTR [ebx],0xdee84b93
  41ceb4:	out    0xa1,al
  41ceb6:	ja     0x41ced2
  41ceb8:	push   ecx
  41ceb9:	jge    0x41ced1
  41cebb:	pop    esp
  41cebc:	inc    edi
  41cebd:	sub    DWORD PTR [ebx+0x77593933],ebx
  41cec3:	gs pop esp
  41cec5:	ss xchg esp,eax
  41cec7:	test   BYTE PTR [ecx],al
  41cec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ceca:	mov    cl,0x4a
  41cecc:	fs mov dl,0x1c
  41cecf:	lahf   
  41ced0:	aad    0xa2
  41ced2:	and    dh,bh
  41ced4:	inc    edx
  41ced5:	(bad)  
  41ced6:	jmp    0xee5c8070
  41cedb:	(bad)  
  41cedc:	shr    BYTE PTR [eax+0x4b],cl
  41cedf:	imul   eax,DWORD PTR [edx+0x52],0x31f2d2a8
  41cee6:	ins    BYTE PTR es:[edi],dx
  41cee7:	xor    ah,BYTE PTR [ecx-0x69]
  41ceea:	mov    BYTE PTR [ebp+0x2c1d9d70],bh
  41cef0:	das    
  41cef1:	mov    ebx,0x9e037b5f
  41cef6:	mov    WORD PTR [edi+edx*4],ss
  41cef9:	lods   al,BYTE PTR ds:[esi]
  41cefa:	stos   BYTE PTR es:[edi],al
  41cefb:	popf   
  41cefc:	test   eax,0x71f6e55e
  41cf01:	lea    ecx,[esi+0x3a]
  41cf04:	lods   al,BYTE PTR ds:[esi]
  41cf05:	pop    ds
  41cf06:	jo     0x41ced0
  41cf08:	push   edi
  41cf09:	enter  0x1b90,0x39
  41cf0d:	mov    esi,0xe8656ea2
  41cf12:	mov    cl,dh
  41cf14:	rcr    DWORD PTR [ecx-0x7ac7d9fc],1
  41cf1a:	mov    eax,0xc8bc10cb
  41cf1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf20:	out    dx,al
  41cf21:	shl    DWORD PTR [edx-0x14a18cc2],0xba
  41cf28:	bound  ebp,QWORD PTR [ebx+0x6811d97e]
  41cf2e:	jg     0x41cf5c
  41cf30:	jmp    0x3ca3:0xd19ebe02
  41cf37:	cmp    esp,edi
  41cf39:	sbb    edx,DWORD PTR [edx]
  41cf3b:	sar    DWORD PTR [ecx+0x34f153b7],0x3
  41cf42:	ds jle 0x41cf52
  41cf45:	mov    ch,0xb9
  41cf47:	int3   
  41cf48:	fwait
  41cf49:	retf   0x5f85
  41cf4c:	jne    0x41ceea
  41cf4e:	ds addr16 addr16 mov bl,0xce
  41cf53:	jg     0x41cf23
  41cf55:	sub    eax,0x480f335a
  41cf5a:	ins    DWORD PTR es:[edi],dx
  41cf5b:	neg    BYTE PTR [esp+esi*2-0x45]
  41cf5f:	sub    bh,BYTE PTR [eax-0x5f]
  41cf62:	out    dx,eax
  41cf63:	dec    ch
  41cf65:	push   ss
  41cf66:	pop    ds
  41cf67:	jnp    0x41cfd9
  41cf69:	sub    eax,0xb6f40701
  41cf6e:	adc    al,0x30
  41cf70:	push   0xfffffff8
  41cf72:	xchg   ecx,eax
  41cf73:	adc    BYTE PTR [ebx+0x28],al
  41cf76:	jmp    0x41cf80
  41cf78:	lock cmp BYTE PTR [eax],0xc3
  41cf7c:	pop    es
  41cf7d:	jnp    0x41cf5a
  41cf7f:	xlat   BYTE PTR ss:[ebx]
  41cf81:	add    edi,edi
  41cf83:	mov    ds:0xec9c0646,al
  41cf88:	cwde   
  41cf89:	or     BYTE PTR [edx],cl
  41cf8b:	jge    0x41cfc1
  41cf8d:	fdiv   DWORD PTR [edi-0x18]
  41cf90:	call   0x35d4b06b
  41cf95:	add    esi,DWORD PTR [eax+0x6763c5db]
  41cf9b:	clc    
  41cf9c:	and    al,0xff
  41cf9e:	out    dx,al
  41cf9f:	in     eax,dx
  41cfa0:	pop    ebx
  41cfa1:	sub    ecx,DWORD PTR [eax-0x5cdca91b]
  41cfa7:	push   ecx
  41cfa8:	inc    esp
  41cfa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfaa:	fnstsw WORD PTR [ebp-0x36]
  41cfad:	sbb    BYTE PTR [edx+0x4ceaf790],0x84
  41cfb4:	push   ecx
  41cfb5:	jmp    0xb19771a
  41cfba:	dec    esi
  41cfbb:	test   al,0xde
  41cfbd:	jb     0x41cfbb
  41cfbf:	inc    ebp
  41cfc0:	jae    0x41cffb
  41cfc2:	pop    eax
  41cfc3:	rcl    BYTE PTR [esi-0x5e27fdaf],0x9e
  41cfca:	sbb    eax,DWORD PTR [ecx]
  41cfcc:	enter  0x5074,0xe0
  41cfd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfd1:	sahf   
  41cfd2:	inc    ebx
  41cfd3:	test   bh,cl
  41cfd5:	ja     0x41d025
  41cfd7:	add    ebp,esi
  41cfd9:	adc    DWORD PTR [ebp-0x5b3d1ba2],esi
  41cfdf:	outs   dx,BYTE PTR ds:[esi]
  41cfe0:	push   eax
  41cfe1:	xor    BYTE PTR [eax-0x1b15a61],dh
  41cfe7:	add    eax,0xd3fca900
  41cfec:	ja     0x41cf80
  41cfee:	or     eax,esi
  41cff0:	ja     0x41d039
  41cff2:	xchg   ebx,eax
  41cff3:	adc    BYTE PTR [esp+esi*4],bh
  41cff6:	jg     0x41d061
  41cff8:	mov    eax,ds:0x360b9ebc
  41cffd:	in     al,0xf3
  41cfff:	iret   
  41d000:	into   
  41d001:	outs   dx,BYTE PTR ds:[esi]
  41d002:	mov    es,WORD PTR [esp+edx*4+0x4751fb4f]
  41d009:	gs cmp DWORD PTR fs:[esi],esi
  41d00d:	jmp    0x5a2a:0x67982aa
  41d014:	lods   eax,DWORD PTR ds:[esi]
  41d015:	sbb    ah,BYTE PTR [ecx+0x40]
  41d018:	push   ds
  41d019:	adc    BYTE PTR [ecx],cl
  41d01b:	call   0xd91edd26
  41d020:	lds    ecx,FWORD PTR [esi+0x6b4e50e9]
  41d026:	js     0x41cfc4
  41d028:	lods   al,BYTE PTR ds:[esi]
  41d029:	call   0x8b647dd2
  41d02e:	mov    ah,0x3e
  41d030:	mov    ah,BYTE PTR [eax]
  41d032:	dec    ebx
  41d033:	jne    0x41cfc4
  41d035:	push   cs
  41d036:	adc    BYTE PTR [ecx],al
  41d038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d039:	(bad)  
  41d03a:	in     al,dx
  41d03b:	fsqrt  
  41d03d:	call   0x395d:0x28216cd7
  41d044:	fdivr  st,st(2)
  41d046:	test   DWORD PTR [edi],0x39d1f8fc
  41d04c:	xchg   ebp,eax
  41d04d:	mov    ss,edx
  41d04f:	push   esp
  41d050:	rol    esi,cl
  41d052:	push   ebp
  41d053:	pop    es
  41d054:	xchg   ecx,eax
  41d055:	shr    ecx,1
  41d057:	inc    ebx
  41d058:	out    0x8e,al
  41d05a:	sbb    eax,0x67a39174
  41d05f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d060:	mov    ebp,0xecdb55c1
  41d065:	sub    ch,BYTE PTR [esi]
  41d067:	test   eax,0xf1fe9d73
  41d06c:	sbb    BYTE PTR [ebp-0xb],al
  41d06f:	pop    edi
  41d070:	out    0xe6,al
  41d072:	push   esi
  41d073:	es in  eax,0xfb
  41d076:	fcomp  DWORD PTR [ebp-0x51c32fe1]
  41d07c:	fldcw  WORD PTR [ebx]
  41d07e:	dec    ebx
  41d07f:	cli    
  41d080:	(bad)  
  41d081:	xlat   BYTE PTR ds:[ebx]
  41d082:	scas   al,BYTE PTR es:[edi]
  41d083:	inc    esp
  41d084:	jge    0x41d09b
  41d086:	repz fwait
  41d088:	popf   
  41d089:	aad    0x5b
  41d08b:	aaa    
  41d08c:	adc    al,0x16
  41d08e:	test   eax,0x70a637aa
  41d093:	mov    gs,WORD PTR [ebx-0x2a151c93]
  41d099:	test   BYTE PTR [edx+0x76],cl
  41d09c:	out    0x64,al
  41d09e:	jmp    0x41d0da
  41d0a0:	icebp  
  41d0a1:	rcr    BYTE PTR [esi-0xf],1
  41d0a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0a5:	push   ds
  41d0a6:	fimul  WORD PTR [esi+0x867bbac]
  41d0ac:	in     al,dx
  41d0ad:	pop    DWORD PTR [ebp+0x13590368]
  41d0b3:	addr16 clc 
  41d0b5:	push   esi
  41d0b6:	dec    edi
  41d0b7:	ja     0x41d0e2
  41d0b9:	and    eax,0x22bc7e9b
  41d0be:	add    DWORD PTR [eax-0x32bf8eb3],eax
  41d0c4:	mov    ds:0xd23070b9,eax
  41d0c9:	cwde   
  41d0ca:	gs cmp bl,cl
  41d0cd:	xchg   ebx,eax
  41d0ce:	clc    
  41d0cf:	sub    esi,DWORD PTR [eax+0x78]
  41d0d2:	and    bh,BYTE PTR [ebx-0x6bcd9304]
  41d0d8:	and    dl,BYTE PTR [ebp-0xd]
  41d0db:	inc    ebp
  41d0dc:	(bad)  
  41d0dd:	push   ecx
  41d0de:	cli    
  41d0df:	adc    ch,BYTE PTR [ebx]
  41d0e1:	js     0x41d126
  41d0e3:	jns    0x41d0c0
  41d0e5:	aam    0xf7
  41d0e7:	sar    BYTE PTR [ebx],1
  41d0e9:	inc    ecx
  41d0ea:	cld    
  41d0eb:	fcmovnb st,st(6)
  41d0ed:	int    0xca
  41d0ef:	gs test dh,ah
  41d0f2:	mov    dl,0xdb
  41d0f4:	rcr    ebx,cl
  41d0f6:	in     al,0xe2
  41d0f8:	pop    ecx
  41d0f9:	cmp    eax,DWORD PTR [edx]
  41d0fb:	jge    0x41d119
  41d0fd:	inc    edi
  41d0fe:	mov    WORD PTR [esi+0x3bfaa8aa],ds
  41d104:	(bad)  
  41d105:	sbb    DWORD PTR [ebp+0x7],ebx
  41d108:	unpckhps xmm7,XMMWORD PTR [ecx]
  41d10b:	daa    
  41d10c:	or     ah,cl
  41d10e:	in     eax,0x10
  41d110:	std    
  41d111:	xlat   BYTE PTR ds:[ebx]
  41d112:	mov    WORD PTR [edi+0x17],ss
  41d115:	cmp    al,0x5b
  41d117:	clc    
  41d118:	stc    
  41d119:	sahf   
  41d11a:	cld    
  41d11b:	dec    esi
  41d11c:	out    0x3a,al
  41d11e:	mov    esp,gs
  41d120:	out    0xd1,eax
  41d122:	iret   
  41d123:	add    ebx,esp
  41d125:	popa   
  41d126:	rol    DWORD PTR [edi+eax*4],cl
  41d129:	lods   eax,DWORD PTR ds:[esi]
  41d12a:	repnz pop edi
  41d12c:	stos   DWORD PTR es:[edi],eax
  41d12d:	ja     0x41d170
  41d12f:	pop    ecx
  41d130:	sub    bl,BYTE PTR [edi+0x24835f29]
  41d136:	cmp    al,0x50
  41d138:	add    eax,0x39584def
  41d13d:	lock dec esp
  41d13f:	and    BYTE PTR [eax+ebp*1-0x35],bh
  41d143:	dec    ebp
  41d144:	pop    es
  41d145:	int3   
  41d146:	dec    eax
  41d147:	mov    ebx,0x2e8b2310
  41d14c:	push   esi
  41d14d:	mov    al,0xe3
  41d14f:	push   0xa15a8a38
  41d154:	sub    DWORD PTR [eax+0x2d1c5a6d],edi
  41d15a:	test   BYTE PTR [esi],dl
  41d15c:	mov    edi,0x1e0ae534
  41d161:	mov    al,bl
  41d163:	nop
  41d164:	out    0xad,eax
  41d166:	imul   esi,esi,0x6d89c822
  41d16c:	cld    
  41d16d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d16e:	(bad)  
  41d16f:	sahf   
  41d170:	or     eax,0xd6adc18b
  41d175:	das    
  41d176:	ds inc edi
  41d178:	retf   0x2553
  41d17b:	rcr    DWORD PTR [edx+0x4862110f],0x79
  41d182:	sbb    bl,bh
  41d184:	mov    ds:0xfb887ad3,eax
  41d189:	or     DWORD PTR [ebx+0x1b27c050],0xd97948fc
  41d193:	cmp    eax,0xac2da8
  41d198:	retf   
  41d199:	xor    DWORD PTR [ebx-0x20],ebx
  41d19c:	ret    0x3a9b
  41d19f:	shl    dl,1
  41d1a1:	add    eax,0xb03542fa
  41d1a6:	int3   
  41d1a7:	jg     0x41d18b
  41d1a9:	rol    DWORD PTR [eax-0x306c5e26],1
  41d1af:	ins    BYTE PTR es:[edi],dx
  41d1b0:	push   ecx
  41d1b1:	or     DWORD PTR ds:0xfd2d03c2,ebp
  41d1b7:	sar    BYTE PTR [eax+0x780f9c28],1
  41d1bd:	xchg   edx,eax
  41d1be:	pushf  
  41d1bf:	scas   al,BYTE PTR es:[edi]
  41d1c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1c1:	xchg   ecx,eax
  41d1c2:	js     0x41d14e
  41d1c4:	sahf   
  41d1c5:	pop    ss
  41d1c6:	or     esi,DWORD PTR [edi]
  41d1c8:	jo     0x41d156
  41d1ca:	scas   al,BYTE PTR es:[edi]
  41d1cb:	inc    ebp
  41d1cc:	je     0x41d1b1
  41d1ce:	ss mov cl,0x47
  41d1d1:	gs and al,0x78
  41d1d4:	cmp    dl,BYTE PTR [edx+0x7f]
  41d1d7:	outs   dx,BYTE PTR ds:[esi]
  41d1d8:	inc    eax
  41d1d9:	in     al,0x24
  41d1db:	jae    0x41d255
  41d1dd:	(bad)  
  41d1de:	loop   0x41d1da
  41d1e0:	mov    fs,WORD PTR [ebp+0x1200a583]
  41d1e6:	aam    0x43
  41d1e8:	xchg   esi,esi
  41d1ea:	fsubr  st(3),st
  41d1ec:	mov    dh,0x2
  41d1ee:	lds    esi,FWORD PTR ss:[ecx-0x2e516059]
  41d1f5:	jg     0x41d223
  41d1f7:	xchg   ebx,eax
  41d1f8:	mov    eax,ebx
  41d1fa:	inc    edx
  41d1fb:	imul   esi,DWORD PTR [ebp-0xf],0xffffffbc
  41d1ff:	(bad)  [ebx-0x3c4fbb20]
  41d205:	xor    BYTE PTR [eax+0x4d6bde54],ch
  41d20b:	fsub   DWORD PTR [edx-0x2a85e792]
  41d211:	out    dx,al
  41d212:	aas    
  41d213:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d214:	loope  0x41d28c
  41d216:	xchg   ecx,eax
  41d217:	pop    ecx
  41d218:	pop    ss
  41d219:	mov    eax,DWORD PTR [ebx+0x200555d0]
  41d21f:	ins    DWORD PTR es:[edi],dx
  41d220:	sbb    BYTE PTR [eax+0xd65a818],ch
  41d226:	ror    ch,cl
  41d228:	gs int 0x26
  41d22b:	pop    esi
  41d22c:	xchg   esp,eax
  41d22d:	or     ebx,DWORD PTR [ecx-0x1a]
  41d230:	inc    ebx
  41d231:	aad    0x7e
  41d233:	gs repnz repz push ds
  41d237:	pop    ds
  41d238:	pop    eax
  41d239:	jl     0x41d2a5
  41d23b:	cmp    eax,0x413db7f1
  41d240:	mov    bl,0xc8
  41d242:	push   edi
  41d243:	lods   al,BYTE PTR ds:[esi]
  41d244:	imul   esp,edi,0xfffffffd
  41d247:	add    al,0xf0
  41d249:	cdq    
  41d24a:	scas   al,BYTE PTR es:[edi]
  41d24b:	test   eax,0x7e74d9bb
  41d250:	in     eax,0x7d
  41d252:	push   esi
  41d253:	mov    eax,0xd1ad07e5
  41d258:	xchg   edx,eax
  41d259:	ret    0xc43f
  41d25c:	out    dx,al
  41d25d:	out    dx,eax
  41d25e:	into   
  41d25f:	xor    BYTE PTR [eax+0x23c9df9a],cl
  41d265:	xchg   edi,eax
  41d266:	cmc    
  41d267:	lock mov dl,0x20
  41d26a:	mov    ah,0x40
  41d26c:	jge    0x41d1ee
  41d26e:	das    
  41d26f:	add    al,0x2
  41d271:	test   eax,0x816970df
  41d276:	jge    0x41d245
  41d278:	sti    
  41d279:	jne    0x41d278
  41d27b:	push   esp
  41d27c:	and    BYTE PTR [ecx+0x5ad7bf0c],ch
  41d282:	cmp    al,0xe3
  41d284:	pop    edi
  41d285:	push   cs
  41d286:	loop   0x41d2c0
  41d288:	pop    ebx
  41d289:	and    BYTE PTR [edi-0x240bc03a],0xa5
  41d290:	mov    dh,0x85
  41d292:	aad    0x84
  41d294:	rol    cl,1
  41d296:	in     al,dx
  41d297:	push   ss
  41d298:	(bad)
  41d29d:	mov    ds:0x336de37f,eax
  41d2a2:	rcl    DWORD PTR [edi-0x78],cl
  41d2a5:	dec    edi
  41d2a6:	pop    ss
  41d2a7:	rcl    BYTE PTR [edi+0x111cd46c],cl
  41d2ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2ae:	les    esp,FWORD PTR ds:0xf2c90712
  41d2b4:	cmp    BYTE PTR [eax+0x20],ch
  41d2b7:	push   edx
  41d2b8:	sti    
  41d2b9:	add    al,0x9e
  41d2bb:	stos   BYTE PTR es:[edi],al
  41d2bc:	scas   eax,DWORD PTR es:[edi]
  41d2bd:	mov    cl,BYTE PTR es:[esi]
  41d2c0:	push   esp
  41d2c1:	add    ah,BYTE PTR [ebx+0x20]
  41d2c4:	jmp    0x41d257
  41d2c6:	dec    esp
  41d2c7:	call   0xc282:0xb2b501ed
  41d2ce:	mov    dh,0x78
  41d2d0:	and    BYTE PTR [edi+0x26],bh
  41d2d3:	les    edi,FWORD PTR [esi+edx*1]
  41d2d6:	ds push edx
  41d2d8:	loope  0x41d29c
  41d2da:	xchg   esi,eax
  41d2db:	mov    al,ds:0x96a93459
  41d2e0:	es dec edi
  41d2e2:	jmp    0x5463:0x4277fdd
  41d2e9:	jmp    0xb5810b58
  41d2ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2ef:	and    DWORD PTR [esi+0x4a],0xffffffcf
  41d2f3:	adc    al,0xb4
  41d2f5:	sub    esi,eax
  41d2f7:	fisub  DWORD PTR [ecx+edx*8-0x467c9b97]
  41d2fe:	push   edi
  41d2ff:	cwde   
  41d300:	push   ds
  41d301:	ja     0x41d319
  41d303:	sti    
  41d304:	out    dx,al
  41d305:	sahf   
  41d306:	jle    0x41d344
  41d308:	mov    eax,0x408da795
  41d30d:	jg     0x41d375
  41d30f:	sub    eax,0x546ce3b7
  41d314:	sahf   
  41d315:	leave  
  41d316:	dec    edx
  41d317:	xor    dh,BYTE PTR [ebx]
  41d319:	fld    TBYTE PTR [eax]
  41d31b:	push   ss
  41d31c:	and    eax,0x7e04aae2
  41d321:	cwde   
  41d322:	xchg   ah,ch
  41d324:	adc    bh,BYTE PTR [ebx]
  41d326:	mov    WORD PTR [edx-0x29de0e72],ss
  41d32c:	stos   BYTE PTR es:[edi],al
  41d32d:	cs xchg ebx,eax
  41d32f:	popa   
  41d330:	es hlt 
  41d332:	push   ebx
  41d333:	sub    al,0xcf
  41d335:	inc    esi
  41d336:	lea    ebx,[ecx+0x6d]
  41d339:	or     al,0x8d
  41d33b:	adc    BYTE PTR [esp+ecx*1+0x12],0x2c
  41d340:	dec    ebp
  41d341:	adc    ebx,0x6e74572a
  41d347:	adc    bl,BYTE PTR [esi+0x2d]
  41d34a:	loopne 0x41d2eb
  41d34c:	mov    bh,0xdd
  41d34e:	jb     0x41d2f8
  41d350:	test   al,0x82
  41d352:	and    bl,BYTE PTR [eax+0x4ae1649d]
  41d358:	mov    al,0x7c
  41d35a:	pop    edi
  41d35b:	and    ebp,DWORD PTR [edi-0x5b]
  41d35e:	sbb    ebx,ebx
  41d360:	xchg   ebx,eax
  41d361:	lds    esi,FWORD PTR [esi+ebx*2]
  41d364:	in     eax,dx
  41d365:	push   0x2ca73115
  41d36a:	jmp    0x79f8:0x3d48fd66
  41d371:	dec    esi
  41d372:	xor    dl,BYTE PTR [ebx+ecx*1-0x5d537fdd]
  41d379:	mov    ebx,0x684f64fc
  41d37e:	call   0x4b96:0xe9371e27
  41d385:	mov    eax,ds:0x29e22cd
  41d38a:	push   esp
  41d38b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d38c:	mov    ecx,0x30c01246
  41d391:	xchg   edi,eax
  41d392:	dec    edi
  41d393:	add    al,0x3a
  41d395:	mov    ch,0x8a
  41d397:	int    0xba
  41d399:	add    DWORD PTR [esi-0x2f0c441],eax
  41d39f:	sub    ebp,0x63
  41d3a2:	int    0x70
  41d3a4:	aam    0x14
  41d3a6:	ret    0x3316
  41d3a9:	jmp    0x41d35c
  41d3ab:	dec    ecx
  41d3ac:	jo     0x41d420
  41d3ae:	and    esp,edi
  41d3b0:	mov    edx,0xf3e9f8fc
  41d3b5:	stos   BYTE PTR es:[edi],al
  41d3b6:	repnz mov esp,0x84ee9dff
  41d3bc:	fmul   QWORD PTR [edi-0x13]
  41d3bf:	shr    DWORD PTR [eax-0x46aba867],1
  41d3c5:	mov    esp,0xc8fd1d0e
  41d3ca:	xchg   edi,eax
  41d3cb:	(bad)  
  41d3cc:	arpl   WORD PTR [ecx+0x68],bx
  41d3cf:	test   DWORD PTR [esi+0x60],esi
  41d3d2:	aaa    
  41d3d3:	stc    
  41d3d4:	das    
  41d3d5:	outs   dx,DWORD PTR ds:[esi]
  41d3d6:	cli    
  41d3d7:	sbb    al,0x17
  41d3d9:	adc    al,0xc1
  41d3db:	fldenv ss:[esi+0x296537bd]
  41d3e2:	pop    ss
  41d3e3:	lock fcom DWORD PTR [esi-0x2fd03552]
  41d3ea:	pusha  
  41d3eb:	sub    al,0x5f
  41d3ed:	scas   eax,DWORD PTR es:[edi]
  41d3ee:	fist   DWORD PTR [eax]
  41d3f0:	into   
  41d3f1:	test   BYTE PTR [eax],bh
  41d3f3:	shl    DWORD PTR [edx-0x762758da],cl
  41d3f9:	(bad)  
  41d3fb:	clc    
  41d3fc:	outs   dx,BYTE PTR ds:[esi]
  41d3fd:	xor    eax,0xd64db591
  41d402:	lock out dx,eax
  41d404:	and    eax,0x1b664804
  41d409:	cli    
  41d40a:	scas   al,BYTE PTR es:[edi]
  41d40b:	call   FWORD PTR [esi-0x4a]
  41d40e:	pop    es
  41d40f:	dec    ebx
  41d410:	cmp    DWORD PTR [edi+0x49],0xffffff84
  41d414:	add    dh,BYTE PTR [edx+eax*4]
  41d417:	cmp    dl,ch
  41d419:	out    dx,al
  41d41a:	pop    ecx
  41d41b:	sbb    al,BYTE PTR [esi]
  41d41d:	js     0x41d3f8
  41d41f:	push   0xcab5f5f7
  41d424:	adc    BYTE PTR [ebx-0x18],bl
  41d427:	popa   
  41d428:	or     edi,0xffffffb8
  41d42b:	cld    
  41d42c:	jecxz  0x41d46d
  41d42e:	push   esp
  41d42f:	lods   al,BYTE PTR ds:[esi]
  41d430:	pop    ss
  41d431:	lods   eax,DWORD PTR ds:[esi]
  41d432:	inc    esi
  41d433:	xchg   edx,eax
  41d434:	pop    ds
  41d435:	mov    WORD PTR [edi],es
  41d437:	jo     0x41d3ba
  41d439:	pop    esi
  41d43a:	sbb    cl,BYTE PTR [esi-0xa]
  41d43d:	push   esp
  41d43e:	imul   ebx,DWORD PTR [eax+0x334781e3],0x76e40808
  41d448:	repz mov ebx,0x2a1a922d
  41d44e:	add    DWORD PTR [ebx+0x62e4e0dd],esp
  41d454:	je     0x41d42b
  41d456:	pop    eax
  41d457:	(bad)  
  41d459:	sbb    eax,DWORD PTR [eax+0x2f75aea5]
  41d45f:	push   esi
  41d460:	pushf  
  41d461:	bound  edx,QWORD PTR [edx-0x17]
  41d464:	and    DWORD PTR ds:0x586fee62,esi
  41d46a:	sar    DWORD PTR [ecx-0x73],1
  41d46d:	pop    ss
  41d46e:	rol    DWORD PTR [edi],0x3e
  41d471:	mov    edi,0x69bfe6a6
  41d476:	inc    esi
  41d477:	fs jne 0x41d494
  41d47a:	mov    ebp,0x47b60643
  41d47f:	fstp   DWORD PTR ds:0x5fd4e22b
  41d485:	xor    eax,ecx
  41d487:	mov    cl,BYTE PTR [esi+eiz*4]
  41d48a:	mov    cl,ch
  41d48c:	sti    
  41d48d:	in     eax,0x6f
  41d48f:	in     al,0x6f
  41d491:	mov    bh,0x77
  41d493:	mov    ebp,0xd645f500
  41d498:	inc    ebp
  41d499:	cmc    
  41d49a:	out    dx,al
  41d49b:	repz xlat BYTE PTR ds:[ebx]
  41d49d:	pop    esi
  41d49e:	or     ah,BYTE PTR [ecx+ebp*2]
  41d4a1:	mov    esi,ss
  41d4a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4a5:	scas   al,BYTE PTR es:[edi]
  41d4a6:	adc    al,0xab
  41d4a8:	pop    esp
  41d4a9:	(bad)  
  41d4aa:	std    
  41d4ab:	adc    DWORD PTR [edx-0x6b83d3d],edi
  41d4b1:	shl    BYTE PTR es:[eax-0x7ab40ee2],1
  41d4b8:	sub    BYTE PTR [ebx+ecx*2],al
  41d4bb:	loop   0x41d4ea
  41d4bd:	jmp    0x73e7:0x710d65be
  41d4c4:	xchg   si,ax
  41d4c6:	into   
  41d4c7:	xchg   edx,eax
  41d4c8:	sub    BYTE PTR [esi+0x162f721],0x33
  41d4cf:	scas   al,BYTE PTR es:[edi]
  41d4d0:	add    BYTE PTR [ebp+ecx*2-0x10],al
  41d4d4:	dec    edi
  41d4d5:	arpl   WORD PTR [edx],si
  41d4d7:	mov    esi,0x8e09b2b5
  41d4dc:	xchg   ebp,eax
  41d4dd:	xchg   BYTE PTR [ecx+0x4133d652],al
  41d4e3:	jle    0x41d48e
  41d4e5:	cld    
  41d4e6:	cdq    
  41d4e7:	enter  0x7111,0x7f
  41d4eb:	(bad)  
  41d4ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4ed:	mov    WORD PTR [edx+ebx*8-0x79e619b9],gs
  41d4f4:	jne    0x41d549
  41d4f6:	jno    0x41d53f
  41d4f8:	mov    ebp,0x1d93ee7
  41d4fd:	push   ebp
  41d4fe:	xor    al,0xc5
  41d500:	lods   al,BYTE PTR ds:[esi]
  41d501:	jg     0x41d510
  41d503:	xor    al,0x59
  41d505:	or     al,bl
  41d507:	xor    DWORD PTR [ecx+0x4d2fe1b],eax
  41d50d:	inc    esi
  41d50e:	jnp    0x41d4d0
  41d510:	dec    ecx
  41d511:	jecxz  0x41d52c
  41d513:	xchg   BYTE PTR [eax+eax*2+0x6c],dh
  41d517:	adc    BYTE PTR [esi+0x37],bl
  41d51a:	jle    0x41d4f6
  41d51c:	loope  0x41d4c3
  41d51e:	xor    al,0x16
  41d520:	xchg   ebx,eax
  41d521:	aam    0x9b
  41d523:	sub    esi,DWORD PTR [esi+0x7a]
  41d526:	nop
  41d527:	mov    ecx,0xdb0dba4c
  41d52c:	inc    ebp
  41d52d:	stos   BYTE PTR es:[edi],al
  41d52e:	enter  0x132,0xb8
  41d532:	adc    BYTE PTR [eax-0x473588b6],dh
  41d538:	rcr    DWORD PTR [ecx-0x1bb6df61],cl
  41d53e:	gs pop ecx
  41d540:	and    BYTE PTR [esi-0x4e0eec64],ah
  41d546:	jecxz  0x41d527
  41d548:	xchg   BYTE PTR [ecx-0x482081e4],bh
  41d54e:	jg     0x41d53e
  41d550:	cdq    
  41d551:	pop    es
  41d552:	dec    esi
  41d553:	cmc    
  41d554:	cli    
  41d555:	mov    dl,0x44
  41d557:	or     al,0x65
  41d559:	pop    ebx
  41d55a:	sub    eax,ebp
  41d55c:	loop   0x41d512
  41d55e:	xchg   bl,bl
  41d560:	std    
  41d561:	ds mov bl,0xe9
  41d564:	(bad)  
  41d565:	and    eax,0xc4a8ea3b
  41d56a:	in     al,dx
  41d56b:	icebp  
  41d56c:	dec    edi
  41d56d:	dec    edx
  41d56e:	in     eax,dx
  41d56f:	arpl   WORD PTR [ebx-0x67],sp
  41d572:	loop   0x41d58a
  41d574:	xchg   BYTE PTR [edi],dl
  41d576:	mov    edx,0x6151eb97
  41d57b:	push   esp
  41d57c:	jge    0x41d507
  41d57e:	repz cmc 
  41d580:	inc    eax
  41d581:	leave  
  41d582:	pushf  
  41d583:	test   al,0xa6
  41d585:	jnp    0x41d523
  41d587:	jmp    0x1e13:0xf7dfce84
  41d58e:	pop    edi
  41d58f:	mov    ds:0xf9457e40,al
  41d594:	es pop ecx
  41d596:	xchg   ebp,eax
  41d597:	adc    ebp,DWORD PTR [eax+0x2a039413]
  41d59d:	mov    DWORD PTR [edi+0x1493f5e6],esi
  41d5a3:	(bad)  
  41d5a4:	out    dx,al
  41d5a5:	and    al,0x3d
  41d5a7:	fsub   st(6),st
  41d5a9:	ins    BYTE PTR es:[edi],dx
  41d5aa:	inc    eax
  41d5ab:	shr    BYTE PTR [ecx],1
  41d5ad:	mov    ds,WORD PTR ds:0x8929cc8f
  41d5b3:	adc    al,0x5d
  41d5b5:	jb     0x41d541
  41d5b7:	push   esi
  41d5b8:	fild   DWORD PTR [ebx-0x1443e34f]
  41d5be:	test   BYTE PTR [esi+0x52315efa],bh
  41d5c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5c5:	clc    
  41d5c6:	cmp    al,0xae
  41d5c8:	cwde   
  41d5c9:	add    edi,ebx
  41d5cb:	dec    DWORD PTR [edx+0xe]
  41d5ce:	call   0x549a9e85
  41d5d3:	js     0x41d618
  41d5d5:	adc    edi,esp
  41d5d7:	in     al,dx
  41d5d8:	mov    eax,0x8ada5db8
  41d5dd:	popa   
  41d5de:	adc    al,0x7a
  41d5e0:	pop    ebx
  41d5e1:	or     DWORD PTR [eax-0x18220575],0xffffffa6
  41d5e8:	call   0x839226a9
  41d5ed:	dec    eax
  41d5ee:	xor    DWORD PTR [ebx],ecx
  41d5f0:	mov    BYTE PTR [eax],al
  41d5f2:	sub    ecx,ebp
  41d5f4:	dec    ebp
  41d5f5:	pop    ebp
  41d5f6:	push   cs
  41d5f7:	js     0x41d64f
  41d5f9:	xchg   esi,eax
  41d5fa:	(bad)  
  41d5fb:	(bad)  
  41d5fc:	jge    0x41d667
  41d5fe:	dec    esi
  41d5ff:	and    esp,ebx
  41d601:	stos   BYTE PTR es:[edi],al
  41d602:	fist   DWORD PTR [esp+edi*8+0x19]
  41d606:	sbb    ecx,ebp
  41d608:	pop    ecx
  41d609:	dec    ebp
  41d60a:	sub    al,0x57
  41d60c:	sub    edx,ebx
  41d60e:	bound  esi,QWORD PTR [edi+0x25]
  41d611:	test   al,0x30
  41d613:	inc    ecx
  41d614:	cmp    BYTE PTR [esi-0x2d],bl
  41d617:	lahf   
  41d618:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d619:	hlt    
  41d61a:	or     bh,al
  41d61c:	stos   BYTE PTR es:[edi],al
  41d61d:	or     al,bl
  41d61f:	(bad)  
  41d620:	fs js  0x41d639
  41d623:	xor    BYTE PTR [ecx+0x76a81851],cl
  41d629:	addr16 add al,0x17
  41d62c:	inc    edx
  41d62d:	pop    ebx
  41d62e:	(bad)  
  41d62f:	jbe    0x41d5fc
  41d631:	add    cl,BYTE PTR [eax+0x25]
  41d634:	and    al,0x74
  41d636:	mov    cl,0xb4
  41d638:	lahf   
  41d639:	mov    al,0x26
  41d63b:	cmp    al,0xa2
  41d63d:	jp     0x41d5f7
  41d63f:	fcmovb st,st(1)
  41d641:	push   edi
  41d642:	adc    al,0x7e
  41d644:	sahf   
  41d645:	(bad)  
  41d646:	out    0xe2,al
  41d648:	mov    BYTE PTR ds:0xb6250d91,bl
  41d64e:	push   0xfffffff2
  41d650:	or     al,0x6
  41d652:	test   eax,0xda5465b5
  41d657:	sub    al,0x74
  41d659:	or     eax,0xa710423f
  41d65e:	and    dh,0x77
  41d661:	out    0x28,al
  41d663:	adc    bl,BYTE PTR [edx+0x1e79c51b]
  41d669:	sbb    ch,BYTE PTR [edx+0x7af8c535]
  41d66f:	mov    ebx,0x1e427317
  41d674:	xlat   BYTE PTR ds:[ebx]
  41d675:	int    0x1f
  41d677:	mov    ah,0x37
  41d679:	fisubr WORD PTR ds:0x841035e6
  41d67f:	mov    DWORD PTR [ebx-0x62],ecx
  41d682:	es mov cl,0x42
  41d685:	push   0xe53e1f75
  41d68a:	cs ret 0x105b
  41d68e:	xor    dl,BYTE PTR [ecx-0x6e686fb6]
  41d694:	sar    DWORD PTR [edi-0x214a2dc5],1
  41d69a:	rcl    dl,0xeb
  41d69d:	or     al,0x2a
  41d69f:	sar    BYTE PTR [edx+ebx*8-0x68],0xca
  41d6a4:	cmp    BYTE PTR [esi+0x21bd4659],cl
  41d6aa:	aad    0x82
  41d6ac:	mov    dh,0x5f
  41d6ae:	out    dx,al
  41d6af:	jmp    0xd69a589f
  41d6b4:	jo     0x41d712
  41d6b6:	int3   
  41d6b7:	scas   al,BYTE PTR es:[edi]
  41d6b8:	les    ebx,FWORD PTR [eax]
  41d6ba:	inc    edx
  41d6bb:	out    dx,al
  41d6bc:	mov    BYTE PTR [esi-0x5],ah
  41d6bf:	test   BYTE PTR [ebp-0xf5a3720],bh
  41d6c5:	xor    eax,0x374cf4bd
  41d6ca:	mov    bl,0x74
  41d6cc:	jae    0x41d6b2
  41d6ce:	jb     0x41d6c8
  41d6d0:	test   al,0xf2
  41d6d2:	add    DWORD PTR [ecx+0x624b535a],ebp
  41d6d8:	popa   
  41d6d9:	mov    al,0x19
  41d6db:	adc    BYTE PTR [ecx+0x45],dh
  41d6de:	enter  0x6180,0x6f
  41d6e2:	push   ds
  41d6e3:	xchg   al,dl
  41d6e5:	sar    DWORD PTR [ecx+edi*8+0x1a9edfd3],0x82
  41d6ed:	jo     0x41d715
  41d6ef:	call   DWORD PTR [ebp-0x5fa47da7]
  41d6f5:	iret   
  41d6f6:	loope  0x41d6dc
  41d6f8:	shr    edi,cl
  41d6fa:	iret   
  41d6fb:	jae    0x41d75f
  41d6fd:	fild   WORD PTR [ecx-0x17]
  41d700:	jmp    0xcca7:0x9f40bddc
  41d707:	imul   edx,DWORD PTR [ecx+ebp*8+0x46d64ba2],0x6f
  41d70f:	sub    edx,DWORD PTR [ebx+0x4f]
  41d712:	adc    al,0xeb
  41d714:	and    al,0x9c
  41d716:	add    cl,BYTE PTR [edi]
  41d718:	ja     0x41d787
  41d71a:	dec    ebp
  41d71b:	lock push 0x6eadb698
  41d721:	pop    edi
  41d722:	fisub  DWORD PTR [esi-0x3eaafa2]
  41d728:	shr    BYTE PTR [esi+0x63],0x89
  41d72c:	sbb    ecx,0xffffffa2
  41d72f:	xchg   ebx,eax
  41d730:	mov    ah,0xea
  41d732:	sbb    BYTE PTR [esi+0x59],bl
  41d735:	(bad)  
  41d736:	mov    ebp,0x5e78dc3f
  41d73b:	or     edx,DWORD PTR [ecx+edx*2-0x37]
  41d73f:	adc    ch,bl
  41d741:	fdiv   st,st(4)
  41d743:	inc    esp
  41d744:	in     al,0x54
  41d746:	ss pop ss
  41d748:	mov    ecx,DWORD PTR [edx+0x4a]
  41d74b:	stc    
  41d74c:	cmp    esp,DWORD PTR [eax-0x48]
  41d74f:	inc    ecx
  41d750:	cmp    esi,ebp
  41d752:	stos   BYTE PTR es:[edi],al
  41d753:	adc    al,0x16
  41d755:	inc    esi
  41d756:	or     al,0x3f
  41d758:	jo     0x41d770
  41d75a:	in     al,dx
  41d75b:	fimul  DWORD PTR [eax]
  41d75d:	(bad)  
  41d75e:	cmp    BYTE PTR [ecx],dl
  41d760:	pop    ebx
  41d761:	or     ebx,DWORD PTR [edx]
  41d763:	cdq    
  41d764:	mov    edx,0x80c1b8ac
  41d769:	jmp    0x80817daf
  41d76e:	ins    DWORD PTR es:[edi],dx
  41d76f:	loop   0x41d721
  41d771:	sub    DWORD PTR [esi+0x4f],esi
  41d774:	push   edi
  41d775:	push   edi
  41d776:	jne    0x41d7a8
  41d778:	fild   DWORD PTR [ecx+edi*8+0x9]
  41d77c:	adc    dl,BYTE PTR [ebp+0x4]
  41d77f:	sbb    ah,BYTE PTR [ebx-0x56d2690c]
  41d785:	dec    ebp
  41d786:	push   ecx
  41d787:	lea    esp,[edx-0x3b]
  41d78a:	sbb    ebx,esp
  41d78c:	mov    ah,0x56
  41d78e:	adc    eax,0xc4d59599
  41d793:	inc    edi
  41d794:	in     eax,0x57
  41d796:	test   al,0x1b
  41d798:	rol    cl,cl
  41d79a:	pop    edi
  41d79b:	jmp    0x41d751
  41d79d:	cmc    
  41d79e:	stos   BYTE PTR es:[edi],al
  41d79f:	cli    
  41d7a0:	dec    ecx
  41d7a1:	vdivps xmm6,xmm7,xmm1
  41d7a6:	sub    al,BYTE PTR [ecx+0x2343a7c9]
  41d7ac:	mov    edx,0xb54293f1
  41d7b1:	add    BYTE PTR [ebx-0x42cb1610],bh
  41d7b7:	call   0x7a088c73
  41d7bc:	and    BYTE PTR [edx+0x53ae2185],dl
  41d7c2:	shr    dl,1
  41d7c4:	sbb    al,0x1e
  41d7c6:	dec    eax
  41d7c7:	sub    al,0x6b
  41d7c9:	jmp    0x41d80f
  41d7cb:	fiadd  WORD PTR [ebx*1+0xfaf6fd5]
  41d7d2:	out    dx,eax
  41d7d3:	mov    bh,0xf4
  41d7d5:	xor    DWORD PTR [edx-0x41],ebx
  41d7d8:	pop    ebx
  41d7d9:	xor    bl,BYTE PTR [eax+0x2f]
  41d7dc:	aam    0x95
  41d7de:	push   esp
  41d7df:	jns    0x41d787
  41d7e1:	add    ch,cl
  41d7e3:	cmp    BYTE PTR [ebx+0x5c],dh
  41d7e6:	jmp    0x4362:0x3708030d
  41d7ed:	std    
  41d7ee:	arpl   bx,bx
  41d7f0:	fcomp  QWORD PTR [edx-0x28a5d074]
  41d7f6:	jmp    0xab5b:0xc5b4e738
  41d7fd:	leave  
  41d7fe:	sbb    edi,DWORD PTR [edi-0x13]
  41d801:	xchg   esp,eax
  41d802:	loope  0x41d843
  41d804:	fidiv  WORD PTR [edi+ebx*1-0x4e]
  41d808:	mov    esi,0xe2dc22dd
  41d80d:	in     eax,0xea
  41d80f:	repz out 0x60,al
  41d812:	add    ch,BYTE PTR [eax]
  41d814:	mov    al,ds:0xdb5f0de0
  41d819:	xor    DWORD PTR [eax-0x6bcbcb8a],ebp
  41d81f:	fdiv   DWORD PTR [ebx-0x60260226]
  41d825:	add    eax,0xd8105177
  41d82a:	ja     0x41d7db
  41d82c:	or     eax,0x1859c894
  41d831:	call   0x5daa:0x6f2b9c90
  41d838:	cdq    
  41d839:	loope  0x41d7d6
  41d83b:	dec    ebp
  41d83c:	inc    ebp
  41d83d:	aam    0xc
  41d83f:	loope  0x41d7c9
  41d841:	jnp    0x41d83f
  41d843:	js     0x41d894
  41d845:	xchg   BYTE PTR [edi-0x6d],bl
  41d848:	data16 (bad) 
  41d84a:	inc    esi
  41d84b:	in     al,dx
  41d84c:	cmp    dh,BYTE PTR [ebx+0x5b01feef]
  41d852:	pop    es
  41d853:	adc    dh,BYTE PTR [ecx]
  41d855:	xchg   esp,eax
  41d856:	icebp  
  41d857:	shr    DWORD PTR ds:0x11b55e9c,1
  41d85d:	scas   eax,DWORD PTR es:[edi]
  41d85e:	scas   al,BYTE PTR es:[edi]
  41d85f:	aam    0x81
  41d861:	xor    BYTE PTR [edx+0x71419db9],bh
  41d867:	aas    
  41d868:	rcl    BYTE PTR [ebp+0x17efb4cd],cl
  41d86e:	sbb    ch,cl
  41d870:	std    
  41d871:	daa    
  41d872:	retf   0xe1cd
  41d875:	stos   BYTE PTR es:[edi],al
  41d876:	add    DWORD PTR [edi+0x6d145337],0x2e
  41d87d:	adc    eax,0x132e73f2
  41d882:	int3   
  41d883:	aas    
  41d884:	je     0x41d8f0
  41d886:	lock cdq 
  41d888:	fild   QWORD PTR [eax+0x507fec8d]
  41d88e:	dec    ebp
  41d88f:	push   0xdab3587f
  41d894:	pop    esi
  41d895:	scas   eax,DWORD PTR es:[edi]
  41d896:	cdq    
  41d897:	mov    DWORD PTR [eax],0xb5df7f58
  41d89d:	jle    0x41d875
  41d89f:	and    BYTE PTR [edx-0x1ecf082d],ch
  41d8a5:	imul   ecx,DWORD PTR [eax],0xffffffc3
  41d8a8:	enter  0xa1dd,0xc1
  41d8ac:	jo     0x41d872
  41d8ae:	(bad)  
  41d8af:	add    cl,BYTE PTR [edi+eax*2]
  41d8b2:	dec    esi
  41d8b3:	pop    ss
  41d8b4:	jecxz  0x41d885
  41d8b6:	jge    0x41d854
  41d8b8:	xor    ebp,edx
  41d8ba:	mov    esp,0xb538e426
  41d8bf:	retf   0x67d8
  41d8c2:	(bad)  
  41d8c3:	out    dx,al
  41d8c4:	pop    ebp
  41d8c5:	icebp  
  41d8c6:	mov    ebx,0x457a86f4
  41d8cb:	push   0x6a8a1b3d
  41d8d0:	mov    es,ebp
  41d8d2:	nop
  41d8d3:	sub    BYTE PTR [edi+0x43],dl
  41d8d6:	pop    ss
  41d8d7:	push   ebx
  41d8d8:	stos   BYTE PTR es:[edi],al
  41d8d9:	cmp    dl,bh
  41d8db:	xor    al,0xc
  41d8dd:	push   es
  41d8de:	push   edx
  41d8df:	fwait
  41d8e0:	pop    ecx
  41d8e1:	repnz loopne 0x41d87e
  41d8e4:	sbb    BYTE PTR [eax-0x75],ch
  41d8e7:	loope  0x41d888
  41d8e9:	pop    esp
  41d8ea:	test   eax,0x8a6285c5
  41d8ef:	jp     0x41d96b
  41d8f1:	mov    ?,WORD PTR [esi-0x19]
  41d8f4:	jae    0x41d8dd
  41d8f6:	mov    esi,0x1ccf2c8
  41d8fb:	sub    al,0x1b
  41d8fd:	xchg   BYTE PTR [esp+eax*4],ch
  41d900:	mov    BYTE PTR [eax],bl
  41d902:	sub    BYTE PTR [ebp+0x2439bbaa],0xa6
  41d909:	fbstp  TBYTE PTR [edi]
  41d90b:	jmp    0x31141028
  41d910:	adc    al,0xdc
  41d912:	xchg   ecx,eax
  41d913:	xchg   esp,eax
  41d914:	call   0x1fe06fb
  41d919:	jne    0x41d94d
  41d91b:	aad    0x9a
  41d91d:	hlt    
  41d91e:	out    0xac,al
  41d920:	pop    es
  41d921:	cmp    BYTE PTR [edi+ebp*4+0x33],dl
  41d925:	aam    0xc9
  41d927:	jp     0x41d92b
  41d929:	mov    al,0x5b
  41d92b:	rol    DWORD PTR [esp+eax*8-0x493f64d4],0xc8
  41d933:	xchg   ebp,eax
  41d934:	add    al,0xde
  41d936:	xlat   BYTE PTR ss:[ebx]
  41d938:	mov    eax,ebp
  41d93a:	ins    BYTE PTR es:[edi],dx
  41d93b:	retf   
  41d93c:	dec    esi
  41d93d:	lds    ebp,FWORD PTR [esi+ecx*4]
  41d940:	dec    eax
  41d941:	and    dh,0xe8
  41d944:	stc    
  41d945:	sub    edx,DWORD PTR [eax-0x12]
  41d948:	scas   al,BYTE PTR es:[edi]
  41d949:	je     0x41d96f
  41d94b:	jp     0x41d97c
  41d94d:	in     al,dx
  41d94e:	pop    eax
  41d94f:	xchg   esp,eax
  41d950:	push   edx
  41d951:	push   ebp
  41d952:	test   ah,al
  41d954:	aad    0xf5
  41d956:	push   es
  41d957:	dec    edx
  41d958:	xchg   DWORD PTR [ecx-0x2],edi
  41d95b:	gs push ds
  41d95d:	jmp    0x41d9b9
  41d95f:	add    dl,bh
  41d961:	ds std 
  41d963:	or     al,BYTE PTR [ebx+0x2c]
  41d966:	jnp    0x41d96b
  41d968:	fiadd  WORD PTR [ebp-0x41]
  41d96b:	std    
  41d96c:	ins    DWORD PTR es:[edi],dx
  41d96d:	mov    esi,0x2ea321d7
  41d972:	imul   eax,edi,0x601e834
  41d978:	mov    ds:0x1ded87f8,al
  41d97d:	cs add al,0xbe
  41d980:	vpaddw xmm4,xmm5,XMMWORD PTR [ebx-0x4f]
  41d985:	dec    ebp
  41d986:	mov    ebx,0x49834e81
  41d98b:	fucomip st,st(0)
  41d98d:	pop    es
  41d98e:	push   eax
  41d98f:	in     eax,dx
  41d990:	push   ss
  41d991:	mov    ch,0xe8
  41d993:	jecxz  0x41d93b
  41d995:	adc    bh,ah
  41d997:	sbb    ecx,esi
  41d999:	imul   ebx,ecx,0xfffffff8
  41d99c:	aad    0x66
  41d99e:	cmp    eax,0xab1eb1ac
  41d9a3:	add    eax,0x3cc7b5a4
  41d9a8:	(bad)  
  41d9a9:	daa    
  41d9aa:	xor    eax,DWORD PTR [edx+0x6d]
  41d9ad:	sbb    eax,0x888adadd
  41d9b2:	adc    al,0x28
  41d9b4:	popf   
  41d9b5:	xchg   ecx,eax
  41d9b6:	push   esi
  41d9b7:	fistp  DWORD PTR [edx+0x3a]
  41d9ba:	das    
  41d9bb:	cmp    eax,0xb5bb562a
  41d9c0:	pop    ebx
  41d9c1:	aad    0xcf
  41d9c3:	ss xor esp,esp
  41d9c6:	gs xchg edx,eax
  41d9c8:	sub    DWORD PTR [esi+0x41],edx
  41d9cb:	add    al,0x98
  41d9cd:	repnz dec ebp
  41d9cf:	sub    eax,0xea441455
  41d9d4:	cmp    eax,0x73fd4f0e
  41d9d9:	xchg   esp,eax
  41d9da:	das    
  41d9db:	xchg   ecx,eax
  41d9dc:	mov    ch,0xb7
  41d9de:	leave  
  41d9df:	out    dx,al
  41d9e0:	cmp    eax,0x42cc843
  41d9e5:	out    0xe7,eax
  41d9e7:	fsubr  st(4),st
  41d9e9:	push   ss
  41d9ea:	dec    edi
  41d9eb:	rcl    BYTE PTR [edi],0x1f
  41d9ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9ef:	jle    0x41d9ef
  41d9f1:	fwait
  41d9f2:	pop    es
  41d9f3:	xor    ebp,DWORD PTR [eax-0x36]
  41d9f6:	sbb    DWORD PTR [ecx-0x59d23940],eax
  41d9fc:	dec    edi
  41d9fd:	mov    ebx,0xf57237c9
  41da02:	mov    ds:0xbad89027,eax
  41da07:	pop    ss
  41da08:	stc    
  41da09:	push   ebp
  41da0a:	fwait
  41da0b:	cmp    BYTE PTR [ebx],bh
  41da0d:	xor    esp,eax
  41da0f:	int    0xca
  41da11:	mov    al,bh
  41da13:	mov    BYTE PTR [ebx+0x6f75dcc5],dh
  41da19:	and    al,0x47
  41da1b:	mov    ebx,0x7f0993b
  41da20:	push   eax
  41da21:	mov    al,ds:0x9b01f476
  41da26:	sbb    eax,DWORD PTR ds:0x4d924d21
  41da2c:	shl    BYTE PTR [ebp+edi*2+0x7e5af2f],0xea
  41da34:	mov    bh,0xd
  41da36:	jg     0x41daab
  41da38:	sub    edx,DWORD PTR [ecx]
  41da3a:	popa   
  41da3b:	mov    DWORD PTR [ebx+0x1c],ecx
  41da3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da3f:	jle    0x41d9d0
  41da41:	test   DWORD PTR ds:0x1c86c088,eax
  41da47:	out    0xe4,eax
  41da49:	jnp    0x41daae
  41da4b:	inc    edi
  41da4c:	movd   mm6,esp
  41da4f:	sysret 
  41da51:	dec    esi
  41da52:	mov    edx,0xa6d38d7c
  41da57:	in     eax,dx
  41da58:	ins    DWORD PTR es:[edi],dx
  41da59:	(bad)
  41da5e:	nop
  41da5f:	mov    bh,0xb0
  41da61:	ret    0xb95c
  41da64:	adc    eax,0x4d3e37bc
  41da69:	fs loope 0x41da40
  41da6c:	fistp  WORD PTR [eax]
  41da6e:	jae    0x41da79
  41da70:	sub    eax,0xfe5d83db
  41da75:	push   ebx
  41da76:	fdiv   st(2),st
  41da78:	and    al,BYTE PTR ds:0x6a2edc62
  41da7e:	sub    BYTE PTR [eax+0x8],dl
  41da81:	std    
  41da82:	push   ecx
  41da83:	stos   BYTE PTR es:[edi],al
  41da84:	inc    DWORD PTR [eax+0x47688731]
  41da8a:	add    eax,0xd4203b17
  41da8f:	in     al,dx
  41da90:	les    ebp,FWORD PTR [ebx-0x72ee9daf]
  41da96:	in     al,0xe1
  41da98:	xor    eax,0xd6080865
  41da9d:	mul    BYTE PTR [edi]
  41da9f:	pusha  
  41daa0:	test   eax,0x22266590
  41daa5:	out    0x46,al
  41daa7:	mov    ds:0xd033eed9,al
  41daac:	pop    ecx
  41daad:	loop   0x41dab8
  41daaf:	loopne 0x41da51
  41dab1:	int3   
  41dab2:	imul   DWORD PTR [ebx]
  41dab4:	imul   esi,ebp,0x4b
  41dab7:	or     ebp,ebx
  41dab9:	xor    BYTE PTR [edi],0x79
  41dabc:	jle    0x41db09
  41dabe:	push   ebx
  41dabf:	(bad)  
  41dac0:	enter  0x4304,0xaf
  41dac4:	pop    esp
  41dac5:	je     0x41da7d
  41dac7:	mov    edx,0x7378d95d
  41dacc:	add    eax,0xde617d02
  41dad1:	push   0x17
  41dad3:	std    
  41dad4:	and    DWORD PTR ss:[esi+0x13],eax
  41dad8:	les    ecx,FWORD PTR es:[ebx]
  41dadb:	repz jbe 0x41da9a
  41dade:	int    0x46
  41dae0:	mov    al,0xb0
  41dae2:	and    ah,BYTE PTR [ecx]
  41dae4:	adc    DWORD PTR [ecx+esi*2],eax
  41dae7:	rcl    BYTE PTR [ebx+0x2fc104fc],0x45
  41daee:	lods   eax,DWORD PTR ds:[esi]
  41daef:	sbb    esp,DWORD PTR [edx+eiz*8-0x2a]
  41daf3:	aaa    
  41daf4:	dec    edx
  41daf5:	mov    dl,0x29
  41daf7:	ja     0x41db65
  41daf9:	loopne 0x41db71
  41dafb:	aam    0x31
  41dafd:	sbb    DWORD PTR [eax-0x28],edx
  41db00:	dec    edi
  41db01:	arpl   ax,si
  41db03:	mov    eax,ds:0x7b881c55
  41db08:	pop    eax
  41db09:	dec    DWORD PTR [ebp+0x28cbfedc]
  41db0f:	jnp    0x41db21
  41db11:	jecxz  0x41dafe
  41db13:	jbe    0x41dab3
  41db15:	std    
  41db16:	jbe    0x41db94
  41db18:	call   0x5d15:0x6b09cec
  41db1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db21:	faddp  st(7),st
  41db23:	sar    DWORD PTR [eax+0x46f09c2a],cl
  41db29:	cmp    eax,0x26b66c54
  41db2e:	mov    al,0x5d
  41db30:	pushf  
  41db31:	dec    edx
  41db32:	xchg   ecx,eax
  41db33:	aam    0x4a
  41db35:	clc    
  41db36:	int3   
  41db37:	test   al,0xfe
  41db39:	push   ss
  41db3a:	and    DWORD PTR [ebp*2+0x60d5d67f],ecx
  41db41:	ja     0x41daec
  41db43:	xchg   edx,eax
  41db44:	stos   BYTE PTR es:[edi],al
  41db45:	gs push 0xffffffbb
  41db48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db49:	inc    ebx
  41db4a:	pop    es
  41db4b:	dec    ebp
  41db4c:	aad    0x3f
  41db4e:	push   edx
  41db4f:	(bad)  
  41db50:	jp     0x41dba0
  41db52:	adc    dl,BYTE PTR [edi+ebp*1-0x3c]
  41db56:	sub    al,0x1c
  41db58:	jae    0x41daea
  41db5a:	sub    ebp,ecx
  41db5c:	in     eax,dx
  41db5d:	sbb    dl,ch
  41db5f:	mov    dh,cl
  41db61:	addr16 add al,0x2b
  41db64:	jmp    DWORD PTR [ebp-0x1ee39c25]
  41db6a:	cmp    bl,BYTE PTR [ebp+0x7]
  41db6d:	and    al,0x6e
  41db6f:	pop    ss
  41db70:	cwde   
  41db71:	jmp    0x7c2f:0xb685504e
  41db78:	inc    esp
  41db79:	inc    ebx
  41db7a:	mov    bh,0xec
  41db7c:	sbb    DWORD PTR [ebx+0xdeda932],edi
  41db82:	sub    al,0xcc
  41db84:	pushf  
  41db85:	(bad)
  41db89:	sar    DWORD PTR [ebp-0x49],0x26
  41db8d:	cmc    
  41db8e:	aam    0x28
  41db90:	ss (bad) 
  41db93:	sbb    esi,DWORD PTR [edx-0x24]
  41db96:	aas    
  41db97:	adc    eax,0x76cb8736
  41db9c:	hlt    
  41db9d:	jmp    0xc745:0x47bb2689
  41dba4:	lods   al,BYTE PTR ds:[esi]
  41dba5:	sub    al,BYTE PTR [ebx+eax*8+0x18f3c2af]
  41dbac:	popf   
  41dbad:	xor    ecx,DWORD PTR [eax-0x3dc2fd95]
  41dbb3:	(bad)  
  41dbb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbb6:	mov    ah,0xc5
  41dbb8:	neg    bh
  41dbba:	pop    esi
  41dbbb:	jmp    0x102cd49d
  41dbc0:	into   
  41dbc1:	xchg   ecx,eax
  41dbc2:	push   esp
  41dbc3:	mov    BYTE PTR [eax],cl
  41dbc5:	push   cs
  41dbc6:	sbb    al,0x82
  41dbc8:	mov    eax,0xe861037c
  41dbcd:	sub    DWORD PTR [edx+eax*2-0x43b2005f],eax
  41dbd4:	inc    esp
  41dbd5:	add    al,0x56
  41dbd7:	imul   eax,DWORD PTR [ecx],0x212c324e
  41dbdd:	hlt    
  41dbde:	in     al,0x91
  41dbe0:	int3   
  41dbe1:	dec    esi
  41dbe2:	ss pop esp
  41dbe4:	(bad)  
  41dbe5:	sbb    BYTE PTR [edx+0x6d],dh
  41dbe8:	add    ch,dh
  41dbea:	sub    eax,0xbe113205
  41dbef:	pop    esi
  41dbf0:	push   0xffffffdc
  41dbf2:	sbb    dl,BYTE PTR ds:0xea53c813
  41dbf8:	idiv   cl
  41dbfa:	xor    edi,DWORD PTR ds:0x4719099f
  41dc00:	xor    BYTE PTR [ebx-0x22],cl
  41dc03:	ins    DWORD PTR es:[edi],dx
  41dc04:	add    ebp,DWORD PTR [ebp+0x11489a75]
  41dc0a:	pop    esp
  41dc0b:	inc    eax
  41dc0c:	jg     0x41dc47
  41dc0e:	mov    bh,BYTE PTR [esp+ebp*4-0x66]
  41dc12:	fcmovbe st,st(1)
  41dc14:	jg     0x41dc0d
  41dc16:	and    al,0xa7
  41dc18:	loopne 0x41dc6d
  41dc1a:	push   edx
  41dc1b:	dec    edi
  41dc1c:	pop    ss
  41dc1d:	popa   
  41dc1e:	retf   0x1779
  41dc21:	cwde   
  41dc22:	or     al,0x68
  41dc24:	jle    0x41dc70
  41dc26:	repz in al,0x16
  41dc29:	xor    bh,bl
  41dc2b:	push   es
  41dc2c:	imul   esi,DWORD PTR [edx-0x4c],0x8d2be6d8
  41dc33:	inc    esp
  41dc34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc35:	repnz xor edi,DWORD PTR [eax]
  41dc38:	mov    ds:0x915d435b,eax
  41dc3d:	mov    edi,0x9ae19598
  41dc42:	xchg   esi,eax
  41dc43:	sub    esp,DWORD PTR [ebx+edx*1-0x2a]
  41dc47:	ins    BYTE PTR es:[edi],dx
  41dc48:	and    al,0x6a
  41dc4a:	adc    DWORD PTR [esp+eiz*4-0x7a4e3434],ebx
  41dc51:	xor    al,0x60
  41dc53:	pusha  
  41dc54:	into   
  41dc55:	xor    bl,ah
  41dc57:	sub    bl,BYTE PTR [eax-0x2f3336ae]
  41dc5d:	dec    edx
  41dc5e:	mov    eax,0x2d4d6c1c
  41dc63:	sbb    ebx,DWORD PTR [esi-0x31]
  41dc66:	mov    fs:0xd5645e1a,al
  41dc6c:	push   esp
  41dc6d:	cli    
  41dc6e:	cdq    
  41dc6f:	push   cs
  41dc70:	mov    cl,al
  41dc72:	repnz pop ebx
  41dc74:	and    eax,ebx
  41dc76:	(bad)  
  41dc77:	cmp    eax,0xfe582ae7
  41dc7c:	int3   
  41dc7d:	dec    esi
  41dc7e:	mov    edi,0x1587ca42
  41dc83:	ret    
  41dc84:	fstp   DWORD PTR [edi-0x7d]
  41dc87:	or     BYTE PTR [esi],ch
  41dc89:	icebp  
  41dc8a:	in     eax,dx
  41dc8b:	sahf   
  41dc8c:	lods   al,BYTE PTR ds:[esi]
  41dc8d:	add    al,dl
  41dc8f:	xchg   DWORD PTR [edx+0xff09e7e],esi
  41dc95:	push   es
  41dc96:	stc    
  41dc97:	xlat   BYTE PTR ds:[ebx]
  41dc98:	cmp    cl,BYTE PTR [edi+ecx*2]
  41dc9b:	xor    BYTE PTR [esi+0x273eb178],al
  41dca1:	inc    ebp
  41dca2:	stos   BYTE PTR es:[edi],al
  41dca3:	add    al,0x7f
  41dca5:	jne    0x41dc9b
  41dca7:	lods   eax,DWORD PTR ds:[esi]
  41dca8:	fsubr  DWORD PTR [ebp+esi*8-0xab913d6]
  41dcaf:	leave  
  41dcb0:	sbb    BYTE PTR [ebx-0x3da239b8],0xfb
  41dcb7:	jne    0x41dcf0
  41dcb9:	push   edx
  41dcba:	cmp    DWORD PTR [esi],ebp
  41dcbc:	fbstp  TBYTE PTR [ecx-0x399aa3df]
  41dcc2:	inc    esi
  41dcc3:	(bad)  
  41dcc4:	stos   BYTE PTR es:[edi],al
  41dcc5:	(bad)  
  41dcc6:	mov    WORD PTR [edi-0x18c247ea],cs
  41dccc:	fld    DWORD PTR [ecx]
  41dcce:	ror    dl,cl
  41dcd0:	rcl    DWORD PTR [eax-0x7],1
  41dcd3:	(bad)
  41dcd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcd7:	ja     0x41dd03
  41dcd9:	out    0xec,eax
  41dcdb:	pop    ds
  41dcdc:	xchg   BYTE PTR ss:[esi-0x17],al
  41dce0:	in     eax,0x6c
  41dce2:	mov    ecx,0x29f88f89
  41dce7:	mov    WORD PTR [edx+0x6d],gs
  41dcea:	test   DWORD PTR [ecx],ebp
  41dcec:	rcr    BYTE PTR [ecx],1
  41dcee:	xor    al,0xf
  41dcf0:	xor    BYTE PTR [esi],0x61
  41dcf3:	add    BYTE PTR [esi-0x6c],ch
  41dcf6:	mov    ebp,0x5432b706
  41dcfb:	gs pop ecx
  41dcfd:	mov    ah,0x20
  41dcff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd00:	mov    esi,0x62faeb2c
  41dd05:	mov    al,0x24
  41dd07:	mov    dh,0x1e
  41dd09:	mov    ds:0x3fb61689,eax
  41dd0e:	push   ebp
  41dd0f:	inc    esi
  41dd10:	and    al,0xd2
  41dd12:	cmp    eax,0x11fc0f69
  41dd17:	int3   
  41dd18:	cmp    eax,0xe7b8e4a7
  41dd1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd1e:	xor    al,0x6b
  41dd20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd21:	nop
  41dd22:	xchg   ecx,eax
  41dd23:	push   edi
  41dd24:	stos   BYTE PTR es:[edi],al
  41dd25:	pop    edx
  41dd26:	lea    eax,[ebp-0x73]
  41dd29:	mov    bh,0x50
  41dd2b:	lods   al,BYTE PTR ds:[esi]
  41dd2c:	test   BYTE PTR [ebp+0x67],ah
  41dd2f:	mul    DWORD PTR [edx]
  41dd31:	or     al,0xa7
  41dd33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd34:	pop    ss
  41dd35:	clc    
  41dd36:	(bad)  
  41dd37:	(bad)
  41dd3a:	in     eax,dx
  41dd3b:	mov    eax,0xa2e2cb52
  41dd40:	fistp  QWORD PTR [esi-0x42199848]
  41dd46:	jg     0x41dce4
  41dd48:	(bad)  
  41dd4a:	sbb    DWORD PTR [esi+0x12],ebx
  41dd4d:	xchg   ebp,eax
  41dd4e:	push   ss
  41dd4f:	leave  
  41dd50:	xchg   ecx,eax
  41dd51:	pop    ss
  41dd52:	neg    BYTE PTR [eiz*1+0xa767ca1]
  41dd59:	mov    ds:0xdbdd9757,al
  41dd5e:	dec    edx
  41dd5f:	fld    QWORD PTR [edi]
  41dd61:	jle    0x41ddc2
  41dd63:	dec    edi
  41dd64:	mov    ?,WORD PTR [ebx+ebx*4]
  41dd67:	mov    esp,0x192252a8
  41dd6c:	mov    esi,0xfae1ae6c
  41dd71:	mov    al,ds:0x30945ddf
  41dd76:	shl    DWORD PTR [ebx],cl
  41dd78:	cmp    eax,0x94b0abb1
  41dd7d:	sbb    BYTE PTR [ebx+0x76],al
  41dd80:	adc    edx,DWORD PTR [eax]
  41dd82:	adc    edx,DWORD PTR [edi+0x43636d8d]
  41dd88:	or     BYTE PTR [ebp+0x1e],al
  41dd8b:	jle    0x41ddd9
  41dd8d:	mov    ah,0x18
  41dd8f:	(bad)  
  41dd90:	pop    ecx
  41dd91:	sbb    esi,DWORD PTR [esi+esi*2-0x7a]
  41dd95:	sub    al,0xc5
  41dd97:	mov    edx,0x6688e4f4
  41dd9c:	cmc    
  41dd9d:	enter  0xecce,0x1
  41dda1:	aaa    
  41dda2:	sbb    DWORD PTR [ebx],edi
  41dda4:	stos   BYTE PTR es:[edi],al
  41dda5:	in     al,0x84
  41dda7:	sahf   
  41dda8:	cmp    bl,BYTE PTR [eax]
  41ddaa:	enter  0x4577,0x9
  41ddae:	ret    0x4d92
  41ddb1:	stos   DWORD PTR es:[edi],eax
  41ddb2:	push   ecx
  41ddb3:	out    0x3,al
  41ddb5:	adc    eax,0x53780c27
  41ddba:	adc    eax,0xa1b2975b
  41ddbf:	push   0x24ccb327
  41ddc4:	xlat   BYTE PTR ds:[ebx]
  41ddc5:	lds    ebp,FWORD PTR [esi+ecx*8]
  41ddc8:	out    0x3,al
  41ddca:	cwde   
  41ddcb:	imul   eax,esp,0x78
  41ddce:	arpl   WORD PTR [edi],di
  41ddd0:	(bad)  
  41ddd1:	cmp    DWORD PTR [ebx-0x3d],eax
  41ddd4:	lds    eax,FWORD PTR [ebp+ebp*1-0x701ec4d]
  41dddb:	sar    BYTE PTR [eax+ebp*2+0x55d84c7],cl
  41dde2:	mov    ebx,0x685ed55a
  41dde7:	clc    
  41dde8:	adc    al,0x86
  41ddea:	daa    
  41ddeb:	cwde   
  41ddec:	cwde   
  41dded:	bound  eax,QWORD PTR [esi+0x51257716]
  41ddf3:	ss enter 0x65d8,0x9a
  41ddf8:	not    DWORD PTR [ebp+edx*4-0x46]
  41ddfc:	mov    edx,ebx
  41ddfe:	enter  0xc3ad,0x89
  41de02:	fadd   st(1),st
  41de04:	inc    ebx
  41de05:	jmp    0xf94:0xa045e216
  41de0c:	shr    cl,0xa1
  41de0f:	loope  0x41de05
  41de11:	inc    edx
  41de12:	sbb    BYTE PTR [ecx+ecx*2-0xd],bl
  41de16:	dec    edi
  41de17:	jns    0x41ddb0
  41de19:	jo     0x41dde6
  41de1b:	mov    ?,WORD PTR [ecx-0x2b]
  41de1e:	jg     0x41de91
  41de20:	cwde   
  41de21:	jb     0x41de17
  41de23:	out    0xdc,eax
  41de25:	pusha  
  41de26:	ins    DWORD PTR es:[edi],dx
  41de27:	pop    ebx
  41de28:	(bad)  
  41de29:	sbb    edi,ecx
  41de2b:	into   
  41de2c:	push   edx
  41de2d:	and    al,0x36
  41de2f:	out    dx,eax
  41de30:	mul    DWORD PTR [edx]
  41de32:	sbb    al,0xa5
  41de34:	ret    0xaf48
  41de37:	add    eax,0xeb6c55db
  41de3c:	mov    esi,0x6af87e0c
  41de41:	enter  0x1e5d,0xcc
  41de45:	xor    cl,BYTE PTR [eax+0x49]
  41de48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de49:	dec    edi
  41de4a:	cmp    BYTE PTR [edx-0x1b],dl
  41de4d:	enter  0x9d51,0xaf
  41de51:	(bad)  
  41de52:	enter  0xb9d5,0x61
  41de56:	cmp    ch,BYTE PTR [ebx+0x78]
  41de59:	pusha  
  41de5a:	(bad)  
  41de5b:	or     esp,esi
  41de5d:	jmp    0x6332:0x8e90e68c
  41de64:	iret   
  41de65:	fadd   st,st(5)
  41de67:	pop    ss
  41de68:	or     al,0x7a
  41de6a:	clc    
  41de6b:	adc    WORD PTR [edi-0x2dcaaf5f],si
  41de72:	out    dx,al
  41de73:	or     al,0x5b
  41de75:	out    dx,eax
  41de76:	dec    esi
  41de77:	fdivr  st(3),st
  41de79:	cdq    
  41de7a:	jg     0x41deb2
  41de7c:	pushf  
  41de7d:	jmp    0xd5573dfe
  41de82:	xchg   ebx,eax
  41de83:	test   al,0xa9
  41de85:	ins    DWORD PTR es:[edi],dx
  41de86:	xor    edx,ebp
  41de88:	add    eax,0xde2727c3
  41de8d:	xchg   ecx,eax
  41de8e:	xchg   ecx,eax
  41de8f:	sub    edi,DWORD PTR [ecx-0x4894a3c4]
  41de95:	sti    
  41de96:	mov    eax,0x836b226f
  41de9b:	or     al,0xcb
  41de9d:	ror    BYTE PTR [eax],0xc2
  41dea0:	das    
  41dea1:	mov    BYTE PTR [esi+0x6545153c],bh
  41dea7:	fsubp  st(5),st
  41dea9:	fadd   QWORD PTR [esi+0x64]
  41deac:	mov    dh,0xb1
  41deae:	xor    dh,BYTE PTR ds:0x5d8f7bf9
  41deb4:	lods   al,BYTE PTR ds:[esi]
  41deb5:	loopne 0x41de70
  41deb7:	fwait
  41deb8:	cmp    ecx,DWORD PTR [edx]
  41deba:	push   esp
  41debb:	add    cl,0x70
  41debe:	or     ebp,edx
  41dec0:	push   edx
  41dec1:	ins    DWORD PTR es:[edi],dx
  41dec2:	sbb    eax,0xa1f7d924
  41dec7:	xor    eax,0x91ac2739
  41decc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41decd:	sbb    al,BYTE PTR gs:[ebx+0xb]
  41ded1:	sub    ebx,DWORD PTR [esi-0x2eac4fbd]
  41ded7:	pop    edx
  41ded8:	push   0xfffffffb
  41deda:	and    ecx,DWORD PTR [ebx]
  41dedc:	dec    ecx
  41dedd:	sub    edi,eax
  41dedf:	in     eax,0x5c
  41dee1:	shl    BYTE PTR [edi+ecx*2+0x58],0xec
  41dee6:	mov    edx,0xaf732867
  41deeb:	inc    eax
  41deec:	cmc    
  41deed:	xor    DWORD PTR ds:0x80bad259,esi
  41def3:	or     DWORD PTR [edx-0x21e92d63],edx
  41def9:	call   0x37cae76
  41defe:	retf   0x406f
  41df01:	push   ds
  41df02:	or     BYTE PTR [ecx+0x5c],bl
  41df05:	push   esi
  41df06:	cmovs  ecx,DWORD PTR [edi+0x44]
  41df0a:	pop    edi
  41df0b:	loop   0x41de97
  41df0d:	pop    eax
  41df0e:	sub    al,0xef
  41df10:	retf   0x7a57
  41df13:	imul   esp,DWORD PTR [edx-0xc997503],0xa
  41df1a:	das    
  41df1b:	shl    BYTE PTR [edi+ebp*1],1
  41df1e:	jmp    0xca03:0xcc9f7a01
  41df25:	pop    es
  41df26:	cmp    bl,BYTE PTR [ebx+0x60]
  41df29:	push   ebp
  41df2a:	addr16 dec edx
  41df2c:	scas   eax,DWORD PTR es:[edi]
  41df2d:	push   ss
  41df2e:	loop   0x41dec8
  41df30:	jae    0x41df81
  41df32:	pop    edx
  41df33:	xchg   esi,eax
  41df34:	mov    al,ds:0xc2b994f6
  41df39:	inc    esi
  41df3a:	in     eax,dx
  41df3b:	dec    edx
  41df3c:	xchg   ebx,eax
  41df3d:	das    
  41df3e:	add    BYTE PTR [ebp+0x29],ch
  41df41:	mov    edi,0x42ce4b69
  41df46:	lahf   
  41df47:	mov    al,0x39
  41df49:	and    eax,ebp
  41df4b:	jbe    0x41df66
  41df4d:	and    eax,0xf3e17505
  41df52:	dec    eax
  41df53:	dec    esp
  41df54:	jle    0x41def1
  41df56:	(bad)  
  41df57:	hlt    
  41df58:	cmp    DWORD PTR [edx-0x330fb434],ebp
  41df5e:	cmc    
  41df5f:	ins    DWORD PTR es:[edi],dx
  41df60:	(bad)  
  41df61:	mov    esp,0x286b3d26
  41df66:	stos   BYTE PTR es:[edi],al
  41df67:	cmp    BYTE PTR [edx+0x5e],al
  41df6a:	aam    0xf9
  41df6c:	std    
  41df6d:	add    dl,BYTE PTR [ecx]
  41df6f:	aaa    
  41df70:	dec    eax
  41df71:	and    DWORD PTR [eax],ebp
  41df73:	ret    0xace2
  41df76:	out    dx,eax
  41df77:	pushf  
  41df78:	jne    0x41df6a
  41df7a:	aas    
  41df7b:	daa    
  41df7c:	mov    edi,DWORD PTR [edx]
  41df7e:	lods   eax,DWORD PTR ds:[esi]
  41df7f:	lea    esp,[eax]
  41df81:	jb     0x41df91
  41df83:	bound  esp,QWORD PTR [ecx-0x45]
  41df86:	ins    DWORD PTR es:[edi],dx
  41df87:	pop    ebp
  41df88:	xor    DWORD PTR [eax+0x45b4a145],esi
  41df8e:	adc    al,0xff
  41df90:	cmp    DWORD PTR [ebp+0x2d],ecx
  41df93:	out    0xe0,eax
  41df95:	push   ds
  41df96:	xchg   esp,eax
  41df97:	or     eax,DWORD PTR [edx]
  41df99:	out    dx,eax
  41df9a:	xor    DWORD PTR [ebp+ebp*8-0x74296d1b],esi
  41dfa1:	jns    0x41dfbe
  41dfa3:	xchg   edx,eax
  41dfa4:	cs loopne 0x41df36
  41dfa7:	(bad)  
  41dfa9:	in     al,dx
  41dfaa:	fs in  eax,dx
  41dfac:	sti    
  41dfad:	ja     0x41df6d
  41dfaf:	retf   
  41dfb0:	imul   edi,edx,0x4e5c3e95
  41dfb6:	sbb    cl,0xa5
  41dfb9:	call   0x1e81:0x2476cd5
  41dfc0:	pop    edx
  41dfc1:	xor    BYTE PTR [edx],ah
  41dfc3:	jmp    0xaa35:0xd8c99942
  41dfca:	adc    dh,bh
  41dfcc:	mov    bl,0x6
  41dfce:	and    BYTE PTR [ebx+ecx*2],0x46
  41dfd2:	sbb    BYTE PTR [eax+0x35],bl
  41dfd5:	add    BYTE PTR [esi+0x46c67af3],ah
  41dfdb:	fnsave [eax+0x41c74342]
  41dfe1:	and    eax,0x8308343e
  41dfe6:	rcr    DWORD PTR [edx],cl
  41dfe8:	mov    DWORD PTR [eax+0x49],esp
  41dfeb:	or     esp,DWORD PTR [ebx-0x59]
  41dfee:	and    eax,0xbbb35cec
  41dff3:	inc    BYTE PTR [edi+0x71]
  41dff6:	and    edx,eax
  41dff8:	fisubr WORD PTR [edi]
  41dffa:	and    al,0x26
  41dffc:	push   edx
  41dffd:	sbb    eax,0x10c4c54c
  41e002:	xchg   DWORD PTR ds:0x451f0b57,ebx
  41e008:	mov    al,0x7d
  41e00a:	and    al,0x86
  41e00c:	pop    ebx
  41e00d:	test   BYTE PTR [edi+0x39],al
  41e010:	pop    es
  41e011:	nop
  41e012:	add    eax,0xd5d6479
  41e017:	dec    esi
  41e018:	inc    esi
  41e019:	cmp    ecx,ebx
  41e01b:	and    DWORD PTR [ecx-0x111eda4d],ebp
  41e021:	aaa    
  41e022:	add    BYTE PTR [ebx+esi*2],bh
  41e025:	in     eax,dx
  41e026:	cld    
  41e027:	popf   
  41e028:	(bad)  
  41e029:	aaa    
  41e02a:	lea    esi,[esi+0x25]
  41e02d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e02e:	add    ah,al
  41e030:	xchg   ebp,eax
  41e031:	adc    BYTE PTR [ecx],bh
  41e033:	jmp    DWORD PTR [ecx]
  41e035:	dec    ebx
  41e036:	sbb    BYTE PTR [edi+edi*4],ah
  41e039:	mov    al,0xc0
  41e03b:	aas    
  41e03c:	stc    
  41e03d:	dec    ecx
  41e03e:	push   0xffffff8b
  41e040:	pop    ecx
  41e041:	add    DWORD PTR [ebp+0x7cad85d6],esi
  41e047:	xor    DWORD PTR [ebx+0x71],0x356c98f8
  41e04e:	popa   
  41e04f:	pop    esp
  41e050:	scas   al,BYTE PTR es:[edi]
  41e051:	aam    0x36
  41e053:	popf   
  41e054:	mov    ds:0x9624cf,al
  41e059:	(bad)  
  41e05a:	retf   
  41e05b:	fidivr DWORD PTR [ebp+edx*2+0x275d2675]
  41e062:	add    eax,0x39a50b2d
  41e067:	in     al,0xc5
  41e069:	xor    edx,DWORD PTR [esp+edx*1+0x43]
  41e06d:	inc    esi
  41e06e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e06f:	add    al,0xa8
  41e071:	scas   eax,DWORD PTR es:[edi]
  41e072:	in     al,0xf9
  41e074:	sub    al,0xe9
  41e076:	mov    ebx,0x4dbbc101
  41e07b:	dec    ebp
  41e07c:	paddq  mm2,mm5
  41e07f:	inc    edx
  41e080:	lahf   
  41e081:	cdq    
  41e082:	mov    ebp,DWORD PTR [edi-0x64]
  41e085:	jmp    0x4939:0x3b4c8c22
  41e08c:	bound  esi,QWORD PTR [ebx-0xc]
  41e08f:	aam    0x16
  41e091:	imul   esp,DWORD PTR [edi],0x2532a39
  41e097:	mov    ebx,0x1797ed8
  41e09c:	mov    dl,0xc2
  41e09e:	fwait
  41e09f:	mov    bh,BYTE PTR [ebp+ebx*8-0x7176d47a]
  41e0a6:	mov    eax,ds:0xf4f59d8c
  41e0ab:	ins    WORD PTR es:[edi],dx
  41e0ad:	push   ecx
  41e0ae:	pop    esp
  41e0af:	jns    0x41e0a8
  41e0b1:	fwait
  41e0b2:	enter  0x91e3,0xa7
  41e0b6:	cdq    
  41e0b7:	xor    esi,DWORD PTR [edx]
  41e0b9:	stos   DWORD PTR es:[edi],eax
  41e0ba:	daa    
  41e0bb:	in     eax,0xfe
  41e0bd:	outs   dx,DWORD PTR ds:[esi]
  41e0be:	in     al,dx
  41e0bf:	(bad)  
  41e0c0:	fdiv   st,st(1)
  41e0c2:	icebp  
  41e0c3:	push   eax
  41e0c4:	dec    esi
  41e0c5:	mov    DWORD PTR [edi+0x206c3ed0],esp
  41e0cb:	leave  
  41e0cc:	scas   al,BYTE PTR es:[edi]
  41e0cd:	scas   eax,DWORD PTR es:[edi]
  41e0ce:	add    edx,DWORD PTR [edx+eiz*8-0x4b846065]
  41e0d5:	test   dl,ah
  41e0d7:	rcr    BYTE PTR [edi+0x3a],cl
  41e0da:	fadd   st(6),st
  41e0dc:	(bad)  
  41e0dd:	sub    edi,DWORD PTR [ebp-0x77230b2c]
  41e0e3:	sbb    al,0x13
  41e0e5:	les    esp,FWORD PTR [edx+ebx*8+0xf028946]
  41e0ec:	inc    esi
  41e0ed:	lahf   
  41e0ee:	aas    
  41e0ef:	inc    esi
  41e0f0:	cmp    eax,0x120643a8
  41e0f5:	add    al,0xf0
  41e0f7:	je     0x41e109
  41e0f9:	or     DWORD PTR [ebx+ecx*4-0x2d],0xffffffe2
  41e0fe:	dec    esi
  41e0ff:	sub    BYTE PTR [edx-0x1c],bh
  41e102:	inc    edx
  41e103:	out    dx,eax
  41e104:	pop    edx
  41e105:	daa    
  41e106:	int3   
  41e107:	mov    edx,0xd203368f
  41e10c:	adc    DWORD PTR [edi],0x836774eb
  41e112:	popf   
  41e113:	imul   ebx,DWORD PTR [ebx-0x63be294],0x86b22ddb
  41e11d:	dec    edx
  41e11e:	and    ebx,DWORD PTR [eax+0x49]
  41e121:	sahf   
  41e122:	mov    cl,0x26
  41e124:	mov    ecx,0x27421011
  41e129:	and    ecx,DWORD PTR [edx-0x10]
  41e12c:	sub    dh,bl
  41e12e:	mov    al,BYTE PTR [ebx+0x216185db]
  41e134:	in     al,dx
  41e135:	leave  
  41e136:	sbb    ebx,DWORD PTR [edx-0x34464aba]
  41e13c:	int3   
  41e13d:	je     0x41e10b
  41e13f:	mov    DWORD PTR [edi],ebp
  41e141:	loop   0x41e0e0
  41e143:	ss and al,0xa
  41e146:	adc    DWORD PTR [ebx-0x49],ebx
  41e149:	jbe    0x41e0fb
  41e14b:	push   ds
  41e14c:	add    edi,DWORD PTR [ecx+ebx*1+0x3649bf18]
  41e153:	xor    al,0x3b
  41e155:	sbb    bl,BYTE PTR [ecx]
  41e157:	xor    DWORD PTR [edi-0x2917e216],edx
  41e15d:	or     eax,0xcfdb0df1
  41e162:	inc    ebp
  41e163:	test   DWORD PTR [edi-0x8],0x8dcee827
  41e16a:	fldenv ds:[edi-0x4a]
  41e16e:	and    DWORD PTR [eax+ecx*8-0x57],0xe173a5e0
  41e176:	cdq    
  41e177:	or     esp,edi
  41e179:	test   DWORD PTR [eax],edx
  41e17b:	cmp    eax,0x3b36e271
  41e180:	cmp    eax,0x473d1260
  41e185:	ja     0x41e1b5
  41e187:	or     DWORD PTR [esi+0x2f],0xfffffffc
  41e18b:	xchg   ecx,eax
  41e18c:	retf   0xfb90
  41e18f:	imul   esi,ecx,0xc2b5eb0c
  41e195:	or     BYTE PTR [edi-0x57],cl
  41e198:	test   eax,edx
  41e19a:	test   ecx,edi
  41e19c:	mov    ecx,ecx
  41e19e:	and    DWORD PTR [edi-0x3b],0x16
  41e1a2:	ja     0x41e158
  41e1a4:	stos   BYTE PTR es:[edi],al
  41e1a5:	fbstp  TBYTE PTR ds:0x895909db
  41e1ab:	loop   0x41e15f
  41e1ad:	xor    al,0xb7
  41e1af:	ds push es
  41e1b1:	out    0xa8,al
  41e1b3:	shr    BYTE PTR cs:[ecx+0x4e466c28],0x26
  41e1bb:	xor    eax,DWORD PTR [ebx]
  41e1bd:	outs   dx,BYTE PTR ds:[esi]
  41e1be:	(bad)  
  41e1bf:	sbb    eax,0xb880f637
  41e1c4:	scas   al,BYTE PTR es:[edi]
  41e1c5:	xchg   edx,eax
  41e1c6:	add    DWORD PTR [ecx-0x47],edi
  41e1c9:	mov    cl,BYTE PTR [edi]
  41e1cb:	(bad)
  41e1ce:	mov    eax,0x2a162a42
  41e1d3:	sbb    ebp,ebx
  41e1d5:	adc    eax,0xb8f38b0b
  41e1da:	push   0x1c
  41e1dc:	es pop edi
  41e1de:	not    BYTE PTR [eax-0x18]
  41e1e1:	jb     0x41e207
  41e1e3:	and    DWORD PTR [edi+0x65],0x49340781
  41e1ea:	xchg   esp,eax
  41e1eb:	dec    ecx
  41e1ec:	loope  0x41e192
  41e1ee:	xchg   edi,eax
  41e1ef:	inc    ecx
  41e1f0:	imul   esi,DWORD PTR [ebp-0x30],0xe8251d8b
  41e1f7:	daa    
  41e1f8:	jmp    0x58e737af
  41e1fd:	cmp    eax,0x4478cf81
  41e202:	inc    edx
  41e203:	js     0x41e1b2
  41e205:	inc    edx
  41e206:	cli    
  41e207:	pop    esi
  41e208:	xor    edi,edi
  41e20a:	jno    0x41e239
  41e20c:	mov    bh,bh
  41e20e:	mov    DWORD PTR [eax+0x3c],edx
  41e211:	test   BYTE PTR [ebx+ebx*8-0x3d],ch
  41e215:	add    DWORD PTR ds:0xbc7a6089,0xf6542931
  41e21f:	add    eax,0x485e29dd
  41e224:	xor    al,0x0
  41e226:	xchg   ecx,eax
  41e227:	adc    bh,BYTE PTR ds:0xc542cff0
  41e22d:	(bad)  
  41e22e:	mov    al,0xb5
  41e230:	mov    al,0x5e
  41e232:	cwde   
  41e233:	rcl    esp,1
  41e235:	mov    edi,0xff45df7a
  41e23a:	mov    dh,0x16
  41e23c:	and    DWORD PTR [edi+0x7529219e],esi
  41e242:	cdq    
  41e243:	call   DWORD PTR [ebx]
  41e245:	add    bl,al
  41e247:	out    dx,al
  41e248:	inc    ebp
  41e249:	push   0x48
  41e24b:	or     BYTE PTR [edi-0x168be2dc],0x91
  41e252:	or     eax,0x9c3b2684
  41e257:	pop    ecx
  41e258:	lods   al,BYTE PTR ds:[esi]
  41e259:	mov    eax,0xebec483c
  41e25e:	pop    esi
  41e25f:	jmp    0x759f:0x2cef87a7
  41e266:	fsubr  st,st(1)
  41e268:	sub    edi,DWORD PTR [eax+0x5f85927]
  41e26e:	cmc    
  41e26f:	(bad)  
  41e270:	add    eax,0x2eb69065
  41e275:	(bad)  
  41e276:	(bad)
  41e279:	sar    BYTE PTR ds:0x20574cc1,cl
  41e27f:	cli    
  41e280:	or     ch,BYTE PTR [ecx]
  41e282:	fld    TBYTE PTR [eax-0x52]
  41e285:	rcl    BYTE PTR [edi-0xf],cl
  41e288:	fbld   TBYTE PTR [esi]
  41e28a:	cmp    BYTE PTR [edx-0x5807d8e3],ch
  41e290:	push   ebp
  41e291:	fistp  QWORD PTR [edi-0x71]
  41e294:	or     al,0x6c
  41e296:	data16 add al,0xea
  41e299:	add    BYTE PTR [edi],ah
  41e29b:	push   ds
  41e29c:	cs jne 0x41e304
  41e29f:	sub    DWORD PTR [esp+esi*8-0x42],0x9869a0b5
  41e2a7:	dec    edx
  41e2a8:	jle    0x41e2bf
  41e2aa:	xchg   esi,eax
  41e2ab:	popa   
  41e2ac:	jno    0x41e302
  41e2ae:	imul   esp,DWORD PTR [ecx+edi*1-0x22],0xe
  41e2b3:	mov    ah,0xe5
  41e2b5:	(bad)
  41e2b8:	sub    ebp,0x7eed220
  41e2be:	jne    0x41e2f1
  41e2c0:	ret    0xd9eb
  41e2c3:	sub    al,0x17
  41e2c5:	adc    BYTE PTR [edx-0x8],dh
  41e2c8:	pusha  
  41e2c9:	fdivr  DWORD PTR [ebx+0x206e35d6]
  41e2cf:	fsub   DWORD PTR [ecx+0x1741dfe4]
  41e2d5:	mov    al,0x3c
  41e2d7:	sbb    ebp,esi
  41e2d9:	test   eax,0x2e7c84b5
  41e2de:	shl    DWORD PTR [ebp+0x65],1
  41e2e1:	ret    
  41e2e2:	retf   0x9512
  41e2e5:	adc    ah,BYTE PTR [edi-0x14022cba]
  41e2eb:	cmp    edx,edi
  41e2ed:	xchg   edx,eax
  41e2ee:	adc    cl,bh
  41e2f0:	call   0xbe9f:0x69b0e6d0
  41e2f7:	xor    ecx,DWORD PTR [eax-0x3848b7e7]
  41e2fd:	jb     0x41e2fd
  41e2ff:	test   BYTE PTR [ebp-0x7853983],0xc5
  41e306:	mov    edi,ebp
  41e308:	dec    ebp
  41e309:	out    dx,eax
  41e30a:	add    esp,esi
  41e30c:	pusha  
  41e30d:	fimul  WORD PTR [ecx-0x46]
  41e310:	cmp    esi,DWORD PTR ss:[edx-0x2fc3998d]
  41e317:	push   cs
  41e318:	mov    es,WORD PTR [esi+0x33e00e30]
  41e31e:	popf   
  41e31f:	test   al,0xf2
  41e321:	retf   
  41e322:	int3   
  41e323:	dec    edi
  41e324:	and    bl,BYTE PTR [esi-0x7c38cc9d]
  41e32a:	repnz add BYTE PTR ds:0x70941e0f,bh
  41e331:	jne    0x41e365
  41e337:	cmp    edx,0xffffffff
  41e33a:	jne    0x41e365
  41e340:	mov    eax,DWORD PTR [ebp-0x4]
  41e343:	movsx  eax,BYTE PTR [eax]
  41e346:	cdq    
  41e347:	add    eax,ebx
  41e349:	adc    edx,0xffffffff
  41e34c:	xor    eax,edi
  41e34e:	xor    edx,0x0
  41e351:	cmp    eax,0x70941e1c
  41e356:	jne    0x41e365
  41e35c:	cmp    edx,0xffffffff
  41e35f:	je     0x41e37c
  41e365:	mov    eax,DWORD PTR [ebp-0x10]
  41e368:	xor    eax,ecx
  41e36a:	mov    edx,0xffcd8d0d
  41e36f:	sub    edx,eax
  41e371:	add    DWORD PTR [ebp-0x4],edx
  41e374:	mov    eax,DWORD PTR [ebp-0x4]
  41e377:	jmp    0x41bf5a
  41e37c:	mov    eax,DWORD PTR [ebp-0x14]
  41e37f:	mov    eax,DWORD PTR [eax]
  41e381:	mov    edx,DWORD PTR [ebp-0x4]
  41e384:	mov    edx,DWORD PTR [edx+0x3c]
  41e387:	lea    eax,[edx+eax*8+0x78]
  41e38b:	mov    edx,DWORD PTR [ebp-0x4]
  41e38e:	mov    eax,DWORD PTR [eax+edx*1]
  41e391:	mov    DWORD PTR [ebp-0x8],eax
  41e394:	mov    eax,DWORD PTR [ebp+0x8]
  41e397:	xor    eax,ecx
  41e399:	add    eax,esi
  41e39b:	mov    DWORD PTR [ebp-0x14],eax
  41e39e:	mov    eax,DWORD PTR [ebp+0x8]
  41e3a1:	mov    edx,DWORD PTR [ebp-0x8]
  41e3a4:	xor    eax,ecx
  41e3a6:	add    eax,esi
  41e3a8:	cmp    edx,eax
  41e3aa:	jne    0x41e3c8
  41e3b0:	mov    eax,DWORD PTR [ebp+0xc]
  41e3b3:	xor    eax,ecx
  41e3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3b8:	add    eax,esi
  41e3ba:	imul   eax,ecx
  41e3bd:	mov    DWORD PTR [ebp-0x8],eax
  41e3c0:	push   DWORD PTR [ebp+0x18]
  41e3c3:	jmp    0x4207e6
  41e3c8:	mov    eax,DWORD PTR [ebp-0x8]
  41e3cb:	mov    ecx,DWORD PTR [ebp-0x4]
  41e3ce:	jmp    0x420791
  41e3d3:	test   BYTE PTR [eax+0x3d],cl
  41e3d6:	lock mov cl,0x80
  41e3d9:	or     BYTE PTR [eax],0x6f
  41e3dc:	enter  0xd93f,0x26
  41e3e0:	mov    BYTE PTR [eax-0x7d2aeeb3],dh
  41e3e6:	sbb    ecx,0x5c
  41e3e9:	add    DWORD PTR [ebx+0x347c5252],0xffffffe1
  41e3f0:	sub    BYTE PTR [edx+esi*1-0x4],ah
  41e3f4:	nop
  41e3f5:	adc    DWORD PTR [esi-0x546f394b],esi
  41e3fb:	push   edx
  41e3fc:	(bad)  [ecx-0x67]
  41e3ff:	mov    dh,0x74
  41e401:	test   DWORD PTR [esi+0x4dfdf988],0x7f95fdd7
  41e40b:	int3   
  41e40c:	in     al,dx
  41e40d:	stos   DWORD PTR es:[edi],eax
  41e40e:	pop    eax
  41e40f:	aas    
  41e410:	xchg   BYTE PTR ds:0x45467b3,bh
  41e416:	add    DWORD PTR [ecx+0x19],esp
  41e419:	xchg   edx,eax
  41e41a:	sub    ah,BYTE PTR [esi-0x14a9e0b5]
  41e420:	mov    BYTE PTR [ebx+ebx*2],ch
  41e423:	inc    eax
  41e424:	loopne 0x41e44a
  41e426:	xor    eax,DWORD PTR [edx+0x11]
  41e429:	cmp    DWORD PTR [esp+esi*2+0x5c5f18de],esi
  41e430:	pop    ss
  41e431:	out    0x55,eax
  41e433:	jno    0x41e3e6
  41e435:	stc    
  41e436:	pop    ebp
  41e437:	mov    ebx,0x977047c9
  41e43c:	jmp    0x41e454
  41e43e:	add    al,BYTE PTR [edi]
  41e440:	out    0x70,eax
  41e442:	(bad)  
  41e443:	imul   edx,DWORD PTR [ecx-0x72205501],0xeff9b664
  41e44d:	test   al,0xc9
  41e44f:	rcl    DWORD PTR [edi-0x1c],0xb3
  41e453:	shl    BYTE PTR [edx+0x2],1
  41e456:	fld    QWORD PTR [edx-0x68]
  41e459:	pop    edx
  41e45a:	stos   DWORD PTR es:[edi],eax
  41e45b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e45c:	xchg   edi,eax
  41e45d:	enter  0xccb0,0xbb
  41e461:	dec    esp
  41e462:	fidivr WORD PTR [edx+ecx*8]
  41e465:	scas   eax,DWORD PTR es:[edi]
  41e466:	inc    ebp
  41e467:	cmp    DWORD PTR [edi+0x54],0xcc842eda
  41e46e:	cli    
  41e46f:	jl     0x41e4c7
  41e471:	jmp    0x41e4d2
  41e473:	enter  0xc276,0x23
  41e477:	mov    BYTE PTR [ebp-0x29],dh
  41e47a:	jg     0x41e447
  41e47c:	retf   
  41e47d:	cmc    
  41e47e:	jno    0x41e424
  41e480:	fwait
  41e481:	pop    edx
  41e482:	clc    
  41e483:	push   es
  41e484:	xchg   esp,eax
  41e485:	mov    esi,0x1a854f6c
  41e48a:	outs   dx,DWORD PTR ds:[esi]
  41e48b:	push   cs
  41e48c:	adc    eax,0x7cdc510b
  41e491:	xor    edi,esi
  41e493:	dec    ebp
  41e494:	cmp    eax,0x3ebf83f1
  41e499:	and    DWORD PTR [eax-0x6f],eax
  41e49c:	mov    ecx,0x9620f17a
  41e4a1:	push   esi
  41e4a2:	adc    eax,0x7bb511cc
  41e4a7:	adc    al,BYTE PTR [ebx-0x1e]
  41e4aa:	in     al,0x37
  41e4ac:	pop    ecx
  41e4ad:	xchg   esi,eax
  41e4ae:	ror    BYTE PTR [eax],0x3b
  41e4b1:	inc    ebx
  41e4b2:	pushf  
  41e4b3:	pop    ebx
  41e4b4:	xchg   DWORD PTR [ebp-0x72],esi
  41e4b7:	adc    cl,ch
  41e4b9:	mov    al,ds:0xa75c50aa
  41e4be:	xchg   BYTE PTR [esp+ecx*4+0x74],dh
  41e4c2:	sub    BYTE PTR [edi],al
  41e4c4:	pop    ecx
  41e4c5:	inc    eax
  41e4c6:	fisubr DWORD PTR [ebp-0x2d72ea94]
  41e4cc:	cmp    edx,DWORD PTR [ebx-0x76]
  41e4cf:	lahf   
  41e4d0:	mov    bh,0xc
  41e4d2:	retf   0x8f8f
  41e4d5:	adc    ch,0x95
  41e4d8:	cli    
  41e4d9:	push   0x52
  41e4db:	fiadd  WORD PTR [esi-0x79]
  41e4de:	or     DWORD PTR [esi],esp
  41e4e0:	jp     0x41e51e
  41e4e2:	push   cs
  41e4e3:	fs push 0x8ce8e9bf
  41e4e9:	cmp    cl,BYTE PTR [edx]
  41e4eb:	xchg   BYTE PTR [ebp+0x1e],bl
  41e4ee:	sbb    BYTE PTR [esi-0x10d9e647],ch
  41e4f4:	fcom   st(5)
  41e4f6:	lahf   
  41e4f7:	xchg   ebx,eax
  41e4f8:	gs dec edx
  41e4fa:	je     0x41e54c
  41e4fc:	adc    al,0x4
  41e4fe:	aam    0xc9
  41e500:	jp     0x41e566
  41e502:	or     esp,DWORD PTR gs:[eax+eiz*1]
  41e506:	ins    BYTE PTR es:[edi],dx
  41e507:	cmp    al,0x4b
  41e509:	aad    0x9a
  41e50b:	mov    edi,0xc8814a4d
  41e510:	mov    BYTE PTR [ebx-0x35],0x39
  41e514:	fnstsw WORD PTR [edx-0x3e]
  41e517:	in     al,dx
  41e518:	fcomp  DWORD PTR [edi]
  41e51a:	aas    
  41e51b:	aas    
  41e51c:	mov    al,ds:0xddf69af
  41e521:	push   cs
  41e522:	jp     0x41e562
  41e524:	cmp    BYTE PTR [edx-0x34],al
  41e527:	sti    
  41e528:	xor    ebp,DWORD PTR [esi+0x42c3f1a7]
  41e52e:	call   0xe2ed9c6
  41e533:	add    al,0xc0
  41e535:	adc    ch,BYTE PTR ds:0xfe3fb074
  41e53b:	or     BYTE PTR [esi+0x79fa4298],ah
  41e541:	enter  0x520f,0xcd
  41e545:	repnz lods eax,DWORD PTR ds:[esi]
  41e547:	(bad)  
  41e548:	(bad)  
  41e549:	mov    esp,0xe6065b87
  41e54e:	jo     0x41e534
  41e550:	arpl   WORD PTR gs:[edx+0x19],sp
  41e554:	push   esp
  41e555:	int3   
  41e556:	pop    eax
  41e557:	stos   BYTE PTR es:[edi],al
  41e558:	xor    BYTE PTR [ecx+0x56],dh
  41e55b:	pop    edx
  41e55c:	fs aam 0x61
  41e55f:	and    ebx,DWORD PTR [esi]
  41e561:	mov    esi,0x6cb0f1ec
  41e566:	repz aam 0x87
  41e569:	(bad)  
  41e56a:	and    eax,0x889c7ed0
  41e56f:	call   FWORD PTR [edx-0x328d5072]
  41e575:	sbb    bh,BYTE PTR [ebx+esi*1-0x39]
  41e579:	or     eax,0x4f25cd58
  41e57e:	das    
  41e57f:	jno    0x41e5f1
  41e581:	cmc    
  41e582:	lea    ebp,[eax+0x56]
  41e585:	push   ebp
  41e586:	test   eax,0x4823522b
  41e58b:	fiadd  DWORD PTR [ebp+0x3f]
  41e58e:	aad    0x27
  41e590:	cdq    
  41e591:	xchg   ebp,eax
  41e592:	cs jbe 0x41e558
  41e595:	pop    ecx
  41e596:	ss push cs
  41e598:	bnd je 0x41e5c6
  41e59b:	fwait
  41e59c:	or     al,0x35
  41e59e:	or     eax,0x6cc49fa7
  41e5a3:	push   ss
  41e5a4:	cmp    eax,0x18dbd029
  41e5a9:	jg     0x41e563
  41e5ab:	ins    DWORD PTR es:[edi],dx
  41e5ac:	xchg   edi,eax
  41e5ad:	sub    ecx,DWORD PTR [edi-0x6]
  41e5b0:	mov    edi,DWORD PTR [ecx-0x7c]
  41e5b3:	aas    
  41e5b4:	call   0x4da6:0xe4eb5a96
  41e5bb:	dec    esp
  41e5bc:	sbb    BYTE PTR [ecx+ebp*8],ah
  41e5bf:	jbe    0x41e544
  41e5c1:	into   
  41e5c2:	sub    al,0x7d
  41e5c4:	cmc    
  41e5c5:	sar    DWORD PTR [eax+0x19],cl
  41e5c8:	and    BYTE PTR gs:[esi],dl
  41e5cb:	lds    edi,FWORD PTR [edx]
  41e5cd:	je     0x41e5cb
  41e5cf:	adc    al,0x3a
  41e5d1:	pop    es
  41e5d2:	test   eax,0xd3090ce5
  41e5d7:	cmp    DWORD PTR [ecx-0x2d],ebx
  41e5da:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5dc:	pop    esp
  41e5dd:	scas   al,BYTE PTR es:[edi]
  41e5de:	sahf   
  41e5df:	rol    DWORD PTR [edi],cl
  41e5e1:	loop   0x41e604
  41e5e3:	packssdw mm6,QWORD PTR [eax-0x4fecb440]
  41e5ea:	rcr    DWORD PTR [ebp+edi*1-0x67],cl
  41e5ee:	cmp    BYTE PTR [ecx+0x607e1693],cl
  41e5f4:	sahf   
  41e5f5:	or     eax,0x649af847
  41e5fa:	outs   dx,BYTE PTR ds:[esi]
  41e5fb:	xchg   ecx,eax
  41e5fc:	aam    0xd3
  41e5fe:	mov    BYTE PTR [esi+0x71a45b03],dl
  41e604:	xor    al,BYTE PTR [ecx+0x17]
  41e607:	push   ss
  41e608:	mov    bl,0x12
  41e60b:	loopne 0x41e5dc
  41e60d:	add    ah,BYTE PTR ds:0x6fb4ca4e
  41e613:	call   0x35bc:0x523d0089
  41e61a:	int3   
  41e61b:	push   edx
  41e61c:	enter  0xe963,0x6f
  41e620:	pop    ebx
  41e621:	mov    esi,cr6
  41e624:	mov    bh,0xba
  41e626:	or     al,0x83
  41e628:	test   eax,0x103418b3
  41e62d:	jp     0x41e6a2
  41e62f:	out    0xcd,eax
  41e631:	out    dx,al
  41e632:	pushf  
  41e633:	shl    BYTE PTR [esp+ebp*1+0x581627b9],1
  41e63a:	dec    ebx
  41e63b:	mov    eax,ds:0xce4a467b
  41e640:	aam    0x38
  41e642:	pop    esp
  41e643:	cmp    esi,edx
  41e645:	ins    BYTE PTR es:[edi],dx
  41e646:	iret   
  41e647:	xor    al,0xca
  41e649:	cld    
  41e64a:	ficomp WORD PTR [eax+0x47e02adb]
  41e650:	lods   eax,DWORD PTR ds:[esi]
  41e651:	out    dx,eax
  41e652:	sbb    DWORD PTR [ecx],edi
  41e654:	mov    esp,eax
  41e656:	(bad)  [esi-0x9]
  41e659:	dec    esi
  41e65a:	add    al,0x77
  41e65c:	pushf  
  41e65d:	fwait
  41e65e:	ret    0xfc1e
  41e661:	adc    al,0xa4
  41e663:	sbb    eax,0xb8baf4a9
  41e668:	lea    edx,[eax-0x35]
  41e66b:	pop    edi
  41e66c:	rcr    DWORD PTR ds:[ebp-0x3f],0x4
  41e671:	push   esp
  41e672:	sti    
  41e673:	sub    eax,0xed313bfd
  41e678:	jno    0x41e637
  41e67a:	fwait
  41e67b:	or     dh,dl
  41e67d:	sub    BYTE PTR [esi],bh
  41e67f:	cdq    
  41e680:	push   ds
  41e681:	mov    cs,WORD PTR ds:0xd6ea1eb4
  41e687:	mul    BYTE PTR [edx+0x3f]
  41e68a:	mov    esi,0x28b30f73
  41e68f:	xor    BYTE PTR [edi+eiz*2-0x7e],0xd0
  41e694:	mov    ebp,0x8431c5c9
  41e699:	jl     0x41e690
  41e69b:	adc    BYTE PTR [edx-0x4a],cl
  41e69e:	add    al,0x3f
  41e6a0:	mov    ?,WORD PTR [esp+ebx*8+0x679b792a]
  41e6a7:	cmp    eax,0x33f793b1
  41e6ac:	loopne 0x41e702
  41e6ae:	cdq    
  41e6af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6b0:	jp     0x41e67e
  41e6b2:	or     dl,cl
  41e6b4:	mov    ebx,0xf3e23ca5
  41e6b9:	in     eax,dx
  41e6ba:	and    DWORD PTR [ebx-0x2d9abace],edi
  41e6c0:	aad    0xa3
  41e6c2:	push   edx
  41e6c3:	cwde   
  41e6c4:	mov    ah,0xc6
  41e6c6:	inc    ebp
  41e6c7:	cmp    ah,BYTE PTR [ecx]
  41e6c9:	xchg   edx,eax
  41e6ca:	xchg   ebp,eax
  41e6cb:	pusha  
  41e6cc:	mov    ds:0x506238a,al
  41e6d1:	shr    BYTE PTR [esi],1
  41e6d3:	adc    esi,edi
  41e6d5:	(bad)  
  41e6d6:	xor    al,0xb3
  41e6d8:	repz mov ds,edi
  41e6db:	add    BYTE PTR [eax],ch
  41e6dd:	and    al,0x6a
  41e6df:	dec    ecx
  41e6e0:	aad    0xd6
  41e6e2:	aam    0x9c
  41e6e4:	adc    al,0x84
  41e6e6:	push   esp
  41e6e7:	pop    esi
  41e6e8:	shl    ebx,cl
  41e6ea:	add    al,0x1
  41e6ec:	outs   dx,DWORD PTR ds:[esi]
  41e6ed:	in     al,dx
  41e6ee:	fdiv   DWORD PTR [esi+0x1c]
  41e6f1:	std    
  41e6f2:	jmp    0x41e722
  41e6f4:	fst    DWORD PTR ss:[edx]
  41e6f7:	mov    DWORD PTR [edi+0x5439522b],ebp
  41e6fd:	js     0x41e6b8
  41e6ff:	mov    cl,0xd
  41e701:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e702:	nop
  41e703:	or     dl,BYTE PTR [ecx+0x6a]
  41e706:	mov    edi,esp
  41e708:	fsubr  DWORD PTR [edx+esi*4+0xdde7823]
  41e70f:	js     0x41e74e
  41e711:	xor    cl,ah
  41e713:	jle    0x41e74d
  41e715:	inc    eax
  41e716:	mov    eax,ds:0x533fb993
  41e71b:	(bad)  
  41e71c:	adc    eax,DWORD PTR [ebx-0x31]
  41e71f:	mov    BYTE PTR [eax+ebx*2+0x36],dl
  41e723:	in     eax,dx
  41e724:	adc    al,0x6f
  41e726:	mov    ds:0xf9760d95,al
  41e72b:	popf   
  41e72c:	inc    edi
  41e72d:	fld    QWORD PTR [esi]
  41e72f:	fist   WORD PTR [ecx+ecx*4+0x4a6d372e]
  41e736:	and    esi,edx
  41e738:	in     al,0x7e
  41e73a:	pusha  
  41e73b:	imul   ebp,DWORD PTR [ebx-0x35],0xfffffffd
  41e73f:	adc    dl,BYTE PTR [esi]
  41e741:	loope  0x41e715
  41e743:	fidivr DWORD PTR [esp+ebx*1]
  41e746:	pop    ebx
  41e747:	mov    eax,ds:0x45a32445
  41e74c:	inc    DWORD PTR [eax]
  41e74e:	mul    bh
  41e750:	hlt    
  41e751:	jp     0x41e6f8
  41e753:	sbb    DWORD PTR [ebx+0x7e],ebx
  41e756:	mul    DWORD PTR [ecx+0x28]
  41e759:	inc    edx
  41e75a:	mov    al,ds:0x618949d0
  41e75f:	mov    esp,0xf71a11ff
  41e764:	leave  
  41e765:	daa    
  41e766:	(bad)  
  41e767:	sbb    BYTE PTR [esi-0x75f6ea46],cl
  41e76d:	inc    ebx
  41e76e:	cmp    dh,BYTE PTR [edx+ecx*2+0x56fa4f2c]
  41e775:	sub    ch,BYTE PTR [edi]
  41e777:	not    BYTE PTR [edx-0x76107bdc]
  41e77d:	and    esi,DWORD PTR [ebp+0x4b4d542c]
  41e783:	fdivp  st(2),st
  41e785:	mov    ds:0x95d5f571,al
  41e78a:	xlat   BYTE PTR ds:[ebx]
  41e78b:	pop    ecx
  41e78c:	rcl    bl,0x28
  41e78f:	(bad)  
  41e790:	les    esi,FWORD PTR [ebx+0xea658a3]
  41e796:	(bad)  
  41e797:	or     eax,0x90ca07a5
  41e79c:	mov    WORD PTR [esi+0x12b8d99d],cs
  41e7a2:	pop    es
  41e7a3:	dec    eax
  41e7a4:	push   ds
  41e7a5:	pop    edx
  41e7a6:	int3   
  41e7a7:	cmp    ah,BYTE PTR [ebp+0x27de3e3]
  41e7ad:	data16 (bad) 
  41e7af:	xchg   DWORD PTR [edx+eax*8],ecx
  41e7b2:	stc    
  41e7b3:	neg    BYTE PTR [edx+0x20]
  41e7b6:	out    0xc3,eax
  41e7b8:	xchg   esi,eax
  41e7b9:	pop    ss
  41e7ba:	xor    ecx,0xffffffd3
  41e7bd:	jb     0x41e7de
  41e7bf:	jg     0x41e7bc
  41e7c1:	mov    ds:0xe2ecb991,eax
  41e7c6:	and    eax,DWORD PTR [ebp-0xf]
  41e7c9:	sub    bh,BYTE PTR [ebp-0xb3ec66b]
  41e7cf:	ss popa 
  41e7d1:	int    0x8d
  41e7d3:	cmp    DWORD PTR [ecx-0x5f9ebaa2],esi
  41e7d9:	fsubrp st(5),st
  41e7db:	add    al,0xd4
  41e7dd:	in     al,0xaa
  41e7df:	into   
  41e7e0:	cmp    eax,0xa810145b
  41e7e5:	adc    esi,DWORD PTR [edi]
  41e7e7:	xchg   DWORD PTR [ebx-0x5b17ebc2],ebp
  41e7ed:	mov    bh,0xde
  41e7ef:	ins    BYTE PTR es:[edi],dx
  41e7f0:	jbe    0x41e77e
  41e7f2:	mov    ecx,0xb565915e
  41e7f7:	mov    bl,0x4
  41e7f9:	pop    ebp
  41e7fa:	jmp    0xf894:0xf66004cd
  41e801:	cs cmp bh,BYTE PTR ss:[edx-0x68fbecbc]
  41e809:	inc    esi
  41e80a:	sbb    esi,DWORD PTR [edi-0x1a717eed]
  41e810:	or     al,0xd
  41e812:	add    edx,DWORD PTR ds:0xeb2e359d
  41e818:	inc    edi
  41e819:	pop    ds
  41e81a:	inc    esp
  41e81b:	sub    DWORD PTR [ecx+0x6c3fbfd9],0x5f
  41e822:	stc    
  41e823:	or     esp,DWORD PTR [bx+di-0x80]
  41e827:	loope  0x41e85d
  41e829:	jae    0x41e881
  41e82b:	xchg   ebp,eax
  41e82c:	pop    es
  41e82d:	jmp    0xb986329c
  41e832:	stc    
  41e833:	jmp    0x5fab734a
  41e838:	sub    eax,eax
  41e83a:	xor    ch,dl
  41e83c:	and    cl,BYTE PTR ds:0xcf9a154d
  41e842:	fcompp 
  41e844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e845:	nop
  41e846:	test   ah,0xd2
  41e849:	sub    al,0x5d
  41e84b:	data16 mov cl,0x5d
  41e84e:	sub    ebx,esp
  41e850:	cmp    eax,0x872a5756
  41e855:	sub    eax,0x39885c37
  41e85a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e85b:	ret    0x520b
  41e85e:	outs   dx,BYTE PTR ds:[esi]
  41e85f:	jbe    0x41e7fd
  41e861:	adc    DWORD PTR [edi-0xa83ad69],esi
  41e867:	cmc    
  41e868:	mov    ebx,0xa8631875
  41e86d:	dec    ebx
  41e86e:	sbb    dl,BYTE PTR [ebp+0x793059f0]
  41e874:	push   esp
  41e875:	sbb    eax,0x3d35f7c3
  41e87a:	aam    0x68
  41e87c:	mov    ecx,ecx
  41e87e:	cld    
  41e87f:	xor    eax,0x1849a8f7
  41e884:	lahf   
  41e885:	jbe    0x41e816
  41e887:	jne    0x41e8de
  41e889:	inc    esp
  41e88a:	inc    ecx
  41e88b:	push   edi
  41e88c:	and    ch,BYTE PTR [esi+0x2b]
  41e88f:	daa    
  41e890:	repnz leave 
  41e892:	shl    BYTE PTR [esi-0x29ac5934],cl
  41e898:	pop    edx
  41e899:	clc    
  41e89a:	test   edi,edx
  41e89c:	push   es
  41e89d:	push   ebp
  41e89e:	lock dec ebp
  41e8a0:	popf   
  41e8a1:	mov    ah,0xf
  41e8a3:	xor    BYTE PTR [edx-0x20b6b5e6],0x65
  41e8aa:	xor    BYTE PTR [eax-0x718a923c],0x6d
  41e8b1:	inc    edx
  41e8b2:	aad    0xea
  41e8b4:	(bad)  
  41e8b5:	out    dx,al
  41e8b6:	xor    eax,0x9bef5586
  41e8bb:	stc    
  41e8bc:	jae    0x41e8ab
  41e8be:	stc    
  41e8bf:	xchg   edx,eax
  41e8c0:	sbb    esi,edi
  41e8c2:	into   
  41e8c3:	leave  
  41e8c4:	mov    BYTE PTR [eax+0xfdd2db2],0x89
  41e8cb:	xchg   esi,eax
  41e8cc:	test   al,0x43
  41e8ce:	iret   
  41e8cf:	mov    edx,DWORD PTR [eax-0x15]
  41e8d2:	popa   
  41e8d3:	in     eax,0x3c
  41e8d5:	push   0x58
  41e8d7:	in     al,dx
  41e8d8:	mov    WORD PTR [ebx-0x15365dd7],gs
  41e8de:	jb     0x41e93d
  41e8e0:	mov    gs,WORD PTR [ebx+0x392d38ac]
  41e8e6:	mov    edi,0x12a84366
  41e8eb:	cs addr16 or eax,0x909a803d
  41e8f2:	in     al,dx
  41e8f3:	lea    ecx,[ebp+0x43]
  41e8f6:	repz les eax,FWORD PTR [edx+0x14]
  41e8fa:	jb     0x41e937
  41e8fc:	jns    0x41e88c
  41e8fe:	push   ss
  41e8ff:	jp     0x41e8d8
  41e901:	lahf   
  41e902:	mov    edi,0x889fbaf3
  41e907:	sbb    ebp,DWORD PTR [ecx]
  41e909:	stc    
  41e90a:	fnstsw WORD PTR [eax+0x37]
  41e90d:	mov    al,ds:0x56a41278
  41e912:	mov    ebp,0x80e71bf7
  41e917:	dec    esi
  41e918:	inc    eax
  41e919:	sub    eax,0xba734bbe
  41e91e:	push   ebp
  41e91f:	add    esi,DWORD PTR [esi+0x6b29195c]
  41e925:	adc    BYTE PTR [ecx-0x26],0x94
  41e929:	and    esp,DWORD PTR [esi+0x289d11fb]
  41e92f:	adc    BYTE PTR [ebp-0x73],ah
  41e932:	data16 mov al,BYTE PTR [ebx+0x21]
  41e936:	mov    ch,0x74
  41e938:	int3   
  41e939:	js     0x41e997
  41e93b:	mov    esi,0x4875bffd
  41e940:	repnz ins BYTE PTR es:[edi],dx
  41e942:	xchg   ebp,eax
  41e943:	xor    BYTE PTR [edx],dl
  41e945:	loope  0x41e94b
  41e947:	sar    DWORD PTR [ebp-0x25],1
  41e94a:	cld    
  41e94b:	mov    ds,ecx
  41e94d:	lods   al,BYTE PTR ds:[esi]
  41e94e:	retf   
  41e94f:	in     eax,dx
  41e950:	xlat   BYTE PTR ds:[ebx]
  41e951:	sbb    DWORD PTR [eax],0xfe5e9b59
  41e957:	push   ebp
  41e958:	std    
  41e959:	mov    al,ds:0x34470ce3
  41e95e:	loop   0x41e98a
  41e960:	test   bh,bh
  41e962:	ins    DWORD PTR es:[edi],dx
  41e963:	dec    ebx
  41e964:	pop    ecx
  41e965:	dec    ebx
  41e966:	mov    bl,0xa2
  41e968:	(bad)  
  41e969:	xlat   BYTE PTR ds:[ebx]
  41e96a:	in     eax,0x99
  41e96c:	jns    0x41e944
  41e96e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e96f:	(bad)  
  41e970:	sbb    BYTE PTR [edx+0x23],ah
  41e973:	rol    ebx,cl
  41e975:	or     ch,BYTE PTR [edi-0x57946192]
  41e97b:	jp     0x41e91b
  41e97d:	pop    edx
  41e97e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e97f:	inc    ebp
  41e980:	lods   eax,DWORD PTR ds:[esi]
  41e981:	repz sahf 
  41e983:	out    dx,eax
  41e984:	mov    ebx,0x75a65128
  41e989:	bound  ecx,QWORD PTR [edx+eax*8+0x69]
  41e98d:	repz pop bx
  41e990:	das    
  41e991:	add    ch,ah
  41e993:	sbb    al,0xfb
  41e996:	popf   
  41e997:	test   BYTE PTR [eax+0x2d519f32],0xa3
  41e99e:	sub    DWORD PTR [edx-0x508768e],edx
  41e9a4:	loopne 0x41e97d
  41e9a6:	fidivr DWORD PTR [ecx+0x3ebbeae8]
  41e9ac:	out    dx,eax
  41e9ad:	or     esi,DWORD PTR [ecx]
  41e9af:	(bad)  
  41e9b0:	or     al,0x59
  41e9b2:	xor    DWORD PTR [edx-0x3889c102],0x52
  41e9b9:	push   0x73
  41e9bb:	mov    ah,ch
  41e9bd:	sbb    al,0x8a
  41e9c0:	push   ecx
  41e9c1:	out    0xcb,eax
  41e9c3:	jle    0x41e94f
  41e9c5:	rcr    DWORD PTR [esi-0x4f0f8207],1
  41e9cb:	int3   
  41e9cc:	cli    
  41e9cd:	jae    0x41ea0d
  41e9cf:	inc    ecx
  41e9d0:	aas    
  41e9d1:	into   
  41e9d2:	inc    edx
  41e9d3:	sbb    DWORD PTR [edx-0x34],ebp
  41e9d6:	or     DWORD PTR [ecx],ebp
  41e9d8:	sti    
  41e9d9:	inc    edi
  41e9da:	push   esp
  41e9db:	jp     0x41e9e6
  41e9dd:	pop    esi
  41e9de:	push   0x934c9b6f
  41e9e3:	fidiv  DWORD PTR [esi]
  41e9e5:	xor    DWORD PTR [esi-0x10680ae5],edi
  41e9eb:	xchg   DWORD PTR [edx],esi
  41e9ed:	pusha  
  41e9ee:	into   
  41e9ef:	push   cs
  41e9f0:	dec    eax
  41e9f1:	jnp    0x41ea36
  41e9f3:	cwde   
  41e9f4:	lods   eax,DWORD PTR ds:[esi]
  41e9f5:	xor    eax,0xe68b8f8f
  41e9fa:	mov    edi,0x3e619c8c
  41e9ff:	push   0xfffffffd
  41ea01:	xor    eax,0xe10afa1c
  41ea06:	stos   BYTE PTR es:[edi],al
  41ea07:	mov    eax,0x4a4190ce
  41ea0c:	bound  eax,QWORD PTR [ecx+edx*1-0xb6201f0]
  41ea13:	popa   
  41ea14:	and    edi,DWORD PTR [eax-0x54]
  41ea17:	jge    0x41e9cd
  41ea19:	cmp    al,0xf5
  41ea1b:	nop
  41ea1c:	mov    esp,0x47527440
  41ea21:	mov    ebx,cs
  41ea23:	adc    ah,dh
  41ea25:	popa   
  41ea26:	imul   eax,edx,0xfffffff0
  41ea29:	into   
  41ea2a:	push   ecx
  41ea2b:	push   ebx
  41ea2c:	inc    edx
  41ea2d:	addr16 jns 0x41e9dc
  41ea30:	inc    esp
  41ea31:	loopne 0x41ea3a
  41ea33:	call   0x6fa400da
  41ea38:	or     esp,DWORD PTR [ebp+eax*2-0x67]
  41ea3c:	inc    esp
  41ea3d:	or     DWORD PTR [esi+0x4c249266],0xe2730479
  41ea47:	or     ch,ah
  41ea49:	test   eax,0x1f9d1145
  41ea4e:	adc    al,0xce
  41ea50:	sar    esi,1
  41ea52:	sar    ebp,cl
  41ea54:	push   0x76
  41ea56:	xchg   esp,eax
  41ea57:	bound  esp,QWORD PTR [ebx+ebp*1]
  41ea5a:	(bad)  
  41ea5b:	loopne 0x41ea88
  41ea5d:	(bad)  
  41ea5f:	cmp    BYTE PTR [ebx],bl
  41ea61:	fstp   TBYTE PTR [eax+0x1ad1b251]
  41ea67:	pop    ds
  41ea68:	aas    
  41ea69:	pop    ebx
  41ea6a:	mov    bl,0x5b
  41ea6c:	jge    0x41ea9d
  41ea6e:	shr    al,0xb
  41ea71:	pusha  
  41ea72:	test   cl,ah
  41ea74:	daa    
  41ea75:	mov    ch,0x1f
  41ea77:	fcmovnu st,st(7)
  41ea79:	pop    eax
  41ea7a:	es xchg edi,eax
  41ea7c:	into   
  41ea7d:	sub    al,0xf9
  41ea7f:	cmp    BYTE PTR [esi],dh
  41ea81:	cs dec edi
  41ea83:	lods   eax,DWORD PTR ds:[esi]
  41ea84:	cmp    eax,0xb41e163
  41ea89:	sub    al,0x31
  41ea8b:	into   
  41ea8c:	pop    es
  41ea8d:	ins    BYTE PTR es:[edi],dx
  41ea8e:	imul   ebx,eax,0xffffffdb
  41ea91:	push   edi
  41ea92:	and    DWORD PTR [esi],esi
  41ea94:	fcom   st(0)
  41ea96:	sbb    cl,BYTE PTR [edi]
  41ea98:	(bad)  
  41ea99:	frstor [eax+0x48]
  41ea9c:	xchg   esp,eax
  41ea9d:	lahf   
  41ea9e:	ins    DWORD PTR es:[edi],dx
  41ea9f:	bound  edx,QWORD PTR [ebx]
  41eaa1:	cmp    DWORD PTR [eax-0x3e],eax
  41eaa4:	(bad)  
  41eaa5:	dec    esp
  41eaa6:	mov    ah,0xc9
  41eaa8:	mov    eax,0x9ae11633
  41eaad:	push   cs
  41eaae:	lahf   
  41eaaf:	pop    ebp
  41eab0:	inc    eax
  41eab1:	or     DWORD PTR [ebx],0xf
  41eab4:	fisubr WORD PTR [esi+0x7f0708f4]
  41eaba:	adc    DWORD PTR [ebx+0x76235dd],esp
  41eac0:	ss dec ecx
  41eac2:	loope  0x41eac5
  41eac4:	xchg   ebx,eax
  41eac5:	sbb    ah,cl
  41eac7:	lds    edi,FWORD PTR [edx]
  41eac9:	sbb    BYTE PTR ds:0x72475b14,bh
  41eacf:	cmp    BYTE PTR [edi],ch
  41ead1:	aad    0x41
  41ead3:	jo     0x41ea56
  41ead5:	mov    bl,0x6
  41ead7:	fwait
  41ead8:	leave  
  41ead9:	dec    esi
  41eada:	pop    esp
  41eadb:	mov    dh,0x16
  41eadd:	and    edx,edi
  41eadf:	and    BYTE PTR [esi+0x2f418573],cl
  41eae5:	and    edx,DWORD PTR [esi]
  41eae7:	push   ecx
  41eae8:	sub    DWORD PTR [ebx-0x584a0c5f],0x27de69f4
  41eaf2:	pop    esi
  41eaf3:	jbe    0x41eae2
  41eaf5:	hlt    
  41eaf6:	pop    edx
  41eaf7:	mov    dl,0xbf
  41eaf9:	fwait
  41eafa:	dec    edi
  41eafb:	pop    esi
  41eafc:	iret   
  41eafd:	mov    cl,0xc7
  41eaff:	sub    BYTE PTR [edx+0x10],ah
  41eb02:	(bad)  
  41eb03:	xchg   esi,eax
  41eb04:	mov    al,0xd
  41eb06:	in     eax,dx
  41eb07:	mov    ds:0x8c76cd51,eax
  41eb0c:	cmp    BYTE PTR [ebp+0x347edc82],0x29
  41eb13:	add    esp,DWORD PTR [eax-0x7e]
  41eb16:	mov    al,BYTE PTR [ecx-0x68]
  41eb19:	mov    dl,0x4c
  41eb1b:	mov    ds:0x26446b8c,al
  41eb20:	in     eax,0x69
  41eb22:	xchg   esp,eax
  41eb23:	data16 shl al,1
  41eb26:	push   ebp
  41eb27:	aad    0xbf
  41eb29:	sub    ah,BYTE PTR [ecx]
  41eb2b:	cmc    
  41eb2c:	into   
  41eb2d:	repnz xor eax,0x791a352b
  41eb33:	jno    0x41eb1f
  41eb35:	in     eax,0x56
  41eb37:	shl    BYTE PTR [edx-0x5d],0xc5
  41eb3b:	neg    DWORD PTR [esi-0x1]
  41eb3e:	xor    al,ah
  41eb40:	test   al,0x80
  41eb42:	fstp   TBYTE PTR [eax]
  41eb44:	sub    BYTE PTR [edx],bl
  41eb46:	adc    ch,BYTE PTR [edi]
  41eb48:	xchg   esp,eax
  41eb49:	rcl    DWORD PTR [ecx],cl
  41eb4b:	xchg   esi,eax
  41eb4c:	inc    esp
  41eb4d:	out    0x1b,al
  41eb4f:	ins    DWORD PTR es:[edi],dx
  41eb50:	sbb    DWORD PTR [ebx-0x35],0xee947e65
  41eb57:	and    ah,BYTE PTR [ebx]
  41eb59:	cs loope 0x41eb13
  41eb5c:	xchg   edx,eax
  41eb5d:	sub    BYTE PTR [eax+ecx*4+0x4060f31b],dl
  41eb64:	mov    ch,0x9f
  41eb66:	sbb    al,0x68
  41eb68:	push   eax
  41eb69:	(bad)  
  41eb6a:	out    0xe,eax
  41eb6c:	mov    edi,DWORD PTR [edi+0x1f]
  41eb6f:	xchg   edx,eax
  41eb70:	mov    eax,ds:0x740bac9d
  41eb75:	xor    dh,BYTE PTR [ebx]
  41eb77:	jno    0x41eb08
  41eb79:	les    edi,FWORD PTR cs:[edx+0x295a39e3]
  41eb80:	nop
  41eb81:	lock in eax,0x9d
  41eb84:	packssdw mm3,QWORD PTR [eax+0x34b45a5d]
  41eb8b:	in     eax,0x4f
  41eb8d:	stos   DWORD PTR es:[edi],eax
  41eb8e:	cdq    
  41eb8f:	xchg   esi,eax
  41eb90:	adc    cl,BYTE PTR ds:0x85166b30
  41eb96:	in     al,dx
  41eb97:	add    bh,BYTE PTR [edx-0x51]
  41eb9a:	mov    ch,0x9e
  41eb9c:	push   esp
  41eb9d:	pop    ecx
  41eb9e:	jmp    0x7ded:0xf82dd133
  41eba5:	stos   DWORD PTR es:[edi],eax
  41eba6:	popf   
  41eba7:	(bad)  
  41eba8:	in     al,dx
  41eba9:	mov    eax,DWORD PTR [ecx-0x6485dfc6]
  41ebaf:	fisttp QWORD PTR [ebx]
  41ebb1:	(bad)  
  41ebb2:	gs cmp eax,0x945c5348
  41ebb8:	in     al,0x8e
  41ebba:	out    dx,al
  41ebbb:	push   eax
  41ebbc:	cdq    
  41ebbd:	cmp    DWORD PTR [ebx-0x72],0x9c0c5b50
  41ebc4:	dec    eax
  41ebc5:	sbb    al,0x18
  41ebc7:	mov    ch,0xb5
  41ebc9:	lds    esi,FWORD PTR [eax+0x1a]
  41ebcc:	(bad)  
  41ebcd:	pop    es
  41ebce:	push   ecx
  41ebcf:	leave  
  41ebd0:	out    0xf0,eax
  41ebd2:	outs   dx,DWORD PTR ds:[esi]
  41ebd3:	dec    ecx
  41ebd4:	shl    al,1
  41ebd6:	jg     0x41eb9b
  41ebd8:	(bad)  
  41ebd9:	aaa    
  41ebda:	test   eax,0x3355f43c
  41ebdf:	je     0x41ebdd
  41ebe1:	xchg   BYTE PTR [edi+ebx*8],cl
  41ebe4:	or     BYTE PTR [ecx+0x7b],cl
  41ebe7:	imul   BYTE PTR [ebp-0xc97172f]
  41ebed:	in     eax,dx
  41ebee:	ficomp WORD PTR [ecx]
  41ebf0:	add    al,0x81
  41ebf2:	xchg   BYTE PTR [edi+0x15],cl
  41ebf5:	mov    ch,0xa2
  41ebf7:	loop   0x41ec25
  41ebf9:	cli    
  41ebfa:	out    0x9c,eax
  41ebfc:	jbe    0xee1eb473
  41ec02:	test   BYTE PTR [eax+0x5c],ah
  41ec05:	xchg   esp,edi
  41ec07:	(bad)  
  41ec08:	out    dx,eax
  41ec09:	adc    al,0x67
  41ec0b:	shl    BYTE PTR [ebx-0x7a8bcbab],1
  41ec11:	add    BYTE PTR [ebp-0x1750f10b],0x19
  41ec18:	push   ebx
  41ec19:	rcr    BYTE PTR [edx],cl
  41ec1b:	sar    BYTE PTR [esi-0x56],0x5c
  41ec1f:	inc    eax
  41ec20:	shl    BYTE PTR [esp+ebx*1+0x4ed1e7ae],1
  41ec27:	(bad)  
  41ec29:	mov    esp,0x32d11b4d
  41ec2e:	jle    0x41ebdd
  41ec30:	push   ds
  41ec31:	mul    BYTE PTR [eax+0x481eee49]
  41ec37:	shr    ebx,cl
  41ec39:	cmp    eax,0x346a1f97
  41ec3e:	or     dh,BYTE PTR es:[ecx-0x45]
  41ec42:	cmp    al,0x71
  41ec44:	cmp    eax,0xdebdfffb
  41ec49:	dec    edx
  41ec4a:	fcom   DWORD PTR [eax+0x35ece76f]
  41ec50:	add    bl,BYTE PTR [edi]
  41ec52:	sbb    BYTE PTR [ebx+eiz*1+0x408fb43],bh
  41ec59:	mov    DWORD PTR [edi+0x16],0xac33f651
  41ec60:	xchg   ebp,eax
  41ec62:	or     BYTE PTR [ebx+0x31],0xfa
  41ec66:	jp     0x41ec30
  41ec68:	mov    eax,DWORD PTR [esi+eax*8-0x5313acfe]
  41ec6f:	mov    ah,0x22
  41ec71:	mov    dh,0x53
  41ec73:	icebp  
  41ec74:	lahf   
  41ec75:	jno    0x41ec9a
  41ec77:	ret    0xd526
  41ec7a:	div    DWORD PTR [ebx+0x74139283]
  41ec80:	adc    ecx,DWORD PTR [eax-0x7ef16b0e]
  41ec86:	call   0xe2b:0x93160f69
  41ec8d:	xchg   esi,eax
  41ec8e:	sub    BYTE PTR ds:0x31310dd1,al
  41ec94:	sbb    eax,DWORD PTR [ecx+0x69711784]
  41ec9a:	rcr    BYTE PTR [ebp+ebp*1+0x0],cl
  41ec9e:	fdiv   QWORD PTR [eax+0x7f]
  41eca1:	fcomp  st(5)
  41eca3:	add    al,0xc5
  41eca5:	mov    ch,0xdb
  41eca7:	pop    ebx
  41eca8:	xchg   DWORD PTR [ecx],ecx
  41ecaa:	int    0x81
  41ecac:	or     DWORD PTR [ecx+ecx*4+0x507c4c6],ebp
  41ecb3:	mov    eax,0xb48326d3
  41ecb8:	jmp    0x41ed03
  41ecba:	sbb    eax,0xd117c548
  41ecbf:	pop    ss
  41ecc0:	pop    es
  41ecc1:	jecxz  0x41eca3
  41ecc3:	mov    ch,0xcd
  41ecc5:	inc    edx
  41ecc6:	rcl    bl,1
  41ecc8:	ror    DWORD PTR [ecx],1
  41ecca:	and    eax,0xf7bf6aba
  41eccf:	imul   esi,DWORD PTR [edx],0x8a57ce3
  41ecd5:	adc    BYTE PTR ds:0xae1416ae,0x48
  41ecdc:	ret    0x925b
  41ecdf:	and    BYTE PTR [edx+edi*4-0x1cf76dbd],ch
  41ece6:	ss (bad) 
  41ece8:	mov    al,cs:0xdcefb84f
  41ecee:	xchg   esp,eax
  41ecef:	clc    
  41ecf0:	loopne 0x41ed0b
  41ecf2:	test   BYTE PTR [edx+0x4d481266],0xf6
  41ecf9:	add    edi,ebx
  41ecfb:	mov    ah,0x34
  41ecfd:	pusha  
  41ecfe:	jg     0x41ecc0
  41ed00:	fld    QWORD PTR [ebx+0x46]
  41ed03:	pop    edi
  41ed04:	aam    0xf5
  41ed06:	inc    esp
  41ed07:	pop    ebp
  41ed08:	bound  esp,QWORD PTR [esi-0x710eb857]
  41ed0e:	dec    edi
  41ed0f:	pop    DWORD PTR [ebx-0x49]
  41ed12:	sub    eax,0xfb6e82e2
  41ed17:	in     al,dx
  41ed18:	out    dx,al
  41ed19:	add    al,0x94
  41ed1b:	jae    0x41ed19
  41ed1d:	sub    bh,ch
  41ed1f:	lods   eax,DWORD PTR ds:[esi]
  41ed20:	daa    
  41ed21:	mov    bh,0x81
  41ed23:	nop
  41ed24:	and    BYTE PTR [edi-0x1e03a484],bl
  41ed2a:	shl    esi,1
  41ed2c:	repz cmp eax,0xd96f504b
  41ed32:	cli    
  41ed33:	mov    ecx,0x33d6f72c
  41ed38:	test   edi,0xf958134d
  41ed3e:	cmp    BYTE PTR [ecx-0xf],bl
  41ed41:	mov    esp,0xd6e2d7b
  41ed46:	jl     0x41ed58
  41ed48:	push   ebp
  41ed49:	push   0xcc0dbb07
  41ed4e:	out    0xbc,eax
  41ed50:	pusha  
  41ed51:	outs   dx,DWORD PTR ds:[esi]
  41ed52:	push   0x2b
  41ed54:	adc    dl,bl
  41ed56:	mov    DWORD PTR [esi-0x70],0x811774ac
  41ed5d:	mov    DWORD PTR [ecx-0xc7843fe],ebx
  41ed63:	inc    edx
  41ed64:	add    al,0x41
  41ed66:	xor    eax,ebp
  41ed68:	push   es
  41ed69:	popf   
  41ed6a:	ja     0x41ed93
  41ed6c:	stc    
  41ed6d:	popa   
  41ed6e:	test   eax,0x45408ca3
  41ed73:	sub    DWORD PTR [edx*8-0x1206c311],esp
  41ed7a:	adc    BYTE PTR [ecx],ah
  41ed7c:	lock and eax,0x568ef578
  41ed82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed83:	push   ss
  41ed84:	xchg   esi,eax
  41ed85:	lea    edi,[ebx+0x2f]
  41ed88:	jb     0x41ed4c
  41ed8a:	xor    al,0xe
  41ed8c:	leave  
  41ed8d:	or     ebp,DWORD PTR ds:[esi-0x18fe60c]
  41ed94:	icebp  
  41ed95:	cmp    eax,0x2029c368
  41ed9a:	add    ah,BYTE PTR [edi+ecx*4]
  41ed9d:	test   BYTE PTR [esi],dh
  41ed9f:	mov    edi,0x1687afcb
  41eda4:	push   ss
  41eda5:	sbb    bl,BYTE PTR [eax]
  41eda7:	dec    edx
  41eda8:	or     DWORD PTR [ebx+0x19a06a0f],esi
  41edae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edaf:	cmp    esp,DWORD PTR [ebp+ebx*4+0x7d]
  41edb3:	push   es
  41edb4:	jo     0x41edb8
  41edb6:	pop    ebx
  41edb7:	push   0xffffffca
  41edb9:	jle    0x41ed7b
  41edbb:	repnz aam 0x71
  41edbe:	sub    DWORD PTR [ebx+0xf],esi
  41edc1:	xchg   esi,eax
  41edc2:	mov    esi,?
  41edc4:	sbb    DWORD PTR [edi],ebp
  41edc6:	mov    BYTE PTR [edi+0x7a],dl
  41edc9:	cmc    
  41edca:	jo     0x41ee3d
  41edcc:	mov    dh,0x74
  41edce:	in     eax,0xfe
  41edd0:	rol    al,0x17
  41edd3:	icebp  
  41edd4:	popf   
  41edd5:	pop    ds
  41edd6:	sahf   
  41edd7:	hlt    
  41edd8:	cmp    eax,edx
  41edda:	aas    
  41eddb:	pop    edi
  41eddc:	loopne 0x41edf0
  41edde:	mov    bh,0xb3
  41ede1:	or     bh,BYTE PTR [ebx-0x6b]
  41ede4:	jae    0x41edde
  41ede6:	inc    ebp
  41ede7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ede8:	xchg   edx,eax
  41ede9:	adc    esi,edx
  41edeb:	sub    ecx,DWORD PTR [esi+0x5b]
  41edee:	dec    ebx
  41edef:	jo     0x41edce
  41edf1:	sub    DWORD PTR [ebx+0x12e3e3ad],edi
  41edf7:	mov    ds:0x8fc9b0ee,eax
  41edfc:	(bad)  
  41edfd:	out    dx,al
  41edfe:	mov    ah,0xef
  41ee00:	add    al,0xdf
  41ee02:	pushf  
  41ee03:	fcom   QWORD PTR [edi]
  41ee05:	mov    edi,0xecca0f92
  41ee0a:	and    BYTE PTR [ebx+0x670d92f3],dh
  41ee10:	jge    0x41ee21
  41ee12:	sbb    ebx,DWORD PTR ds:0xc21a36bf
  41ee18:	in     al,0x87
  41ee1a:	test   eax,0x14f716e6
  41ee1f:	into   
  41ee20:	pop    ds
  41ee21:	xchg   ebp,eax
  41ee22:	clc    
  41ee23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee24:	adc    BYTE PTR [ebp+0x4a4bb96c],ch
  41ee2a:	inc    edi
  41ee2b:	dec    eax
  41ee2c:	out    dx,eax
  41ee2d:	push   cs
  41ee2e:	hlt    
  41ee2f:	jo     0x41edc3
  41ee31:	(bad)  
  41ee32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee33:	mov    ds:0x1f75445f,eax
  41ee38:	call   0x5cd95d1d
  41ee3d:	cmp    DWORD PTR [esi-0x54],0x7d
  41ee41:	push   ss
  41ee42:	dec    esp
  41ee43:	test   ch,0x8a
  41ee46:	xchg   bl,ch
  41ee48:	jnp    0x41ee9c
  41ee4a:	xlat   BYTE PTR ds:[ebx]
  41ee4b:	sub    eax,0xaa21e490
  41ee50:	pop    esi
  41ee51:	sub    BYTE PTR [ebp-0x1199c70b],dh
  41ee57:	lods   eax,DWORD PTR ds:[esi]
  41ee58:	ret    
  41ee59:	fdivr  QWORD PTR [esi+0x2f137407]
  41ee5f:	adc    al,0x1
  41ee61:	pop    ebp
  41ee62:	loope  0x41ee23
  41ee64:	int    0xa2
  41ee66:	xor    eax,0xcf84e49b
  41ee6b:	iret   
  41ee6c:	mov    dl,0x51
  41ee6e:	or     DWORD PTR [edx-0x4fb2a718],ebx
  41ee74:	in     eax,0x18
  41ee76:	nop
  41ee77:	jecxz  0x41eeb5
  41ee79:	loop   0x41ee13
  41ee7b:	and    bh,BYTE PTR [edx]
  41ee7d:	xchg   ebp,eax
  41ee7e:	and    edx,DWORD PTR [edi+0x3c8bb3df]
  41ee84:	or     DWORD PTR ds:0xcf287477,edx
  41ee8a:	and    DWORD PTR [edi+edi*8],edx
  41ee8d:	mov    BYTE PTR [ebx],bl
  41ee8f:	push   ebx
  41ee90:	add    al,0xc4
  41ee92:	je     0x41ee1d
  41ee94:	aam    0xc
  41ee96:	add    eax,0xe14cee3a
  41ee9b:	adc    ah,dl
  41ee9d:	dec    edx
  41ee9e:	btr    DWORD PTR [eax+0x42],0x9b
  41eea3:	dec    edi
  41eea4:	pop    ebp
  41eea5:	mov    eax,0xd15b10de
  41eeaa:	fist   WORD PTR [esi-0x14]
  41eead:	lahf   
  41eeae:	and    al,0xc4
  41eeb0:	jbe    0x41ee58
  41eeb2:	mov    bh,0xe
  41eeb4:	aam    0x6a
  41eeb6:	cmp    eax,0xd4bb64c5
  41eebb:	sbb    DWORD PTR [edi],edi
  41eebd:	sub    DWORD PTR [ebp-0x1d],ebp
  41eec0:	cld    
  41eec1:	push   ss
  41eec2:	jg     0x41ee8c
  41eec4:	les    edi,FWORD PTR [ecx]
  41eec6:	rol    DWORD PTR [ebx-0x38],0x7b
  41eeca:	gs jle 0x41ee8b
  41eecd:	add    ecx,DWORD PTR es:[ecx+eiz*2-0x35]
  41eed2:	retf   
  41eed3:	dec    bp
  41eed5:	imul   eax,DWORD PTR [edx+0x2f],0xbbd4f56f
  41eedc:	es mov ch,0x7c
  41eedf:	mov    ah,0x25
  41eee1:	stos   DWORD PTR es:[edi],eax
  41eee2:	mov    ds:0xac61064a,eax
  41eee7:	add    eax,0x3e7b1c9f
  41eeec:	rcl    esp,cl
  41eeee:	sub    eax,0x566ea34c
  41eef3:	fidivr DWORD PTR [ebx-0xa]
  41eef6:	mov    bh,0x36
  41eef8:	fwait
  41eef9:	mov    eax,0x79e4dc72
  41eefe:	aaa    
  41eeff:	mov    DWORD PTR [edi-0x13],edx
  41ef02:	in     al,0xb8
  41ef04:	or     esp,ebx
  41ef06:	inc    eax
  41ef07:	icebp  
  41ef08:	jno    0x41ef4e
  41ef0a:	mov    DWORD PTR [esi-0x1],ebp
  41ef0d:	fild   QWORD PTR [esi-0x16]
  41ef10:	or     ebx,DWORD PTR [ebp+0x49]
  41ef13:	push   edx
  41ef14:	fcmovnu st,st(6)
  41ef16:	mov    eax,0x9780e901
  41ef1b:	fcomi  st,st(5)
  41ef1d:	and    BYTE PTR [eax],0xc2
  41ef20:	pop    edi
  41ef21:	into   
  41ef22:	mov    ah,BYTE PTR [eax-0x13]
  41ef25:	push   cs
  41ef26:	pop    edx
  41ef27:	mov    DWORD PTR [ebx],esp
  41ef29:	xchg   esi,eax
  41ef2a:	pop    ebp
  41ef2b:	je     0x41ef04
  41ef2d:	sub    eax,0xbd09a18b
  41ef32:	pusha  
  41ef33:	pop    ebp
  41ef34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef35:	mov    BYTE PTR [edi-0x68],bl
  41ef38:	(bad)  
  41ef39:	out    0xa8,al
  41ef3b:	aaa    
  41ef3c:	mov    ds:0x6e5a8e95,al
  41ef41:	out    0x9e,al
  41ef43:	pop    es
  41ef44:	and    dh,dl
  41ef46:	push   cs
  41ef47:	add    eax,0x6119e2b
  41ef4c:	mov    eax,0x31215a52
  41ef51:	(bad)  
  41ef52:	mov    ds:0x172524c6,al
  41ef57:	hlt    
  41ef58:	lds    edi,FWORD PTR [ebx-0x35]
  41ef5b:	ins    DWORD PTR es:[edi],dx
  41ef5c:	lds    edx,FWORD PTR ss:[ebx+0xf]
  41ef60:	std    
  41ef61:	dec    ebp
  41ef62:	into   
  41ef63:	add    al,0xdb
  41ef65:	in     eax,0x23
  41ef67:	nop
  41ef68:	mov    WORD PTR fs:[ebx-0x33],cs
  41ef6c:	test   DWORD PTR [ebx-0x43ab95d],esi
  41ef72:	cwde   
  41ef73:	test   BYTE PTR [eax+0x8],0x6
  41ef77:	repnz jmp 0x6c98:0x2d9d
  41ef7e:	test   DWORD PTR [ebx+0x2d],edi
  41ef81:	(bad)  
  41ef82:	push   0xffffffcb
  41ef84:	stc    
  41ef85:	mov    ch,bh
  41ef87:	(bad)  
  41ef89:	or     cl,BYTE PTR [ebp+0x44b14995]
  41ef8f:	adc    al,BYTE PTR [esi-0x119587bf]
  41ef95:	loop   0x41efa6
  41ef97:	rcr    ch,0xa5
  41ef9a:	outs   dx,BYTE PTR ds:[esi]
  41ef9b:	sub    ebx,DWORD PTR [eax-0x1b62ca5c]
  41efa1:	sub    cl,0x88
  41efa4:	pop    eax
  41efa5:	cwde   
  41efa6:	clc    
  41efa7:	mov    BYTE PTR [eax-0x7f],bh
  41efaa:	or     BYTE PTR ds:[ebp-0x392292f8],ch
  41efb1:	add    ah,ch
  41efb3:	push   0xfd1a96fc
  41efb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efb9:	sub    BYTE PTR [edi-0x40],dl
  41efbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efbd:	fs push ebx
  41efbf:	mov    ebx,0x75263e18
  41efc4:	lea    ecx,[esp+ebp*4+0x2c03e903]
  41efcb:	pop    ss
  41efcc:	les    edi,FWORD PTR [edx+0x1b]
  41efcf:	inc    ebx
  41efd0:	ror    DWORD PTR [ebx],1
  41efd2:	sub    BYTE PTR [esi+0x79819a33],ah
  41efd8:	shr    BYTE PTR [edx],cl
  41efda:	rcl    DWORD PTR [eax-0x2a],1
  41efdd:	sbb    ebx,DWORD PTR [edi]
  41efdf:	mov    edi,0x18108f0c
  41efe4:	fild   WORD PTR [ecx]
  41efe6:	sub    ecx,DWORD PTR [eax-0x6c3d3ff5]
  41efec:	or     DWORD PTR [eax+0x32],edi
  41efef:	and    BYTE PTR [eax-0x54130227],0x9c
  41eff6:	jo     0x41effb
  41eff8:	sahf   
  41eff9:	iret   
  41effa:	int3   
  41effb:	inc    edi
  41effc:	loop   0x41f00b
  41effe:	sbb    eax,DWORD PTR [eax]
  41f000:	xor    eax,0x4e1d5315
  41f005:	dec    ecx
  41f006:	ficomp DWORD PTR [esi-0x44388bfb]
  41f00c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f00d:	or     DWORD PTR [edi+0x3f],0x6d
  41f011:	xor    DWORD PTR [ebp-0x704e2327],eax
  41f017:	mov    esp,0xb23db41d
  41f01c:	sahf   
  41f01d:	jo     0x41f098
  41f01f:	lea    edi,[eax+0x2c]
  41f022:	fmul   QWORD PTR [esi+0x54]
  41f025:	ss int3 
  41f027:	fst    st(1)
  41f029:	cdq    
  41f02a:	push   eax
  41f02b:	leave  
  41f02c:	cmp    eax,0x752e6636
  41f031:	cli    
  41f032:	je     0x41f084
  41f034:	push   ds
  41f035:	push   ss
  41f036:	mov    esi,0x890285
  41f03b:	stc    
  41f03c:	daa    
  41f03d:	mov    ah,0xd1
  41f03f:	sbb    al,dl
  41f041:	push   eax
  41f042:	dec    DWORD PTR [edi]
  41f044:	adc    eax,0xdedda079
  41f049:	ja     0x41f084
  41f04b:	loope  0x41f0b2
  41f04d:	retf   
  41f04e:	je     0x41f04b
  41f050:	nop
  41f051:	dec    eax
  41f052:	mov    esi,0xe5ec501c
  41f057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f058:	jle    0x41f084
  41f05a:	loopne 0x41f0b9
  41f05c:	das    
  41f05d:	adc    BYTE PTR [ecx+0x1f],cl
  41f060:	test   eax,0x6b5dd8f9
  41f065:	popa   
  41f066:	jnp    0x41f0a8
  41f068:	(bad)  
  41f06a:	cmp    cl,BYTE PTR [ebx-0x434e3b27]
  41f070:	call   0xab93:0xc2b10d3e
  41f077:	fisub  WORD PTR [ebx-0x9]
  41f07a:	test   edi,ebp
  41f07c:	sub    eax,0x84550db1
  41f081:	pop    es
  41f082:	in     eax,dx
  41f083:	dec    BYTE PTR [eax+eax*1]
  41f086:	(bad)  
  41f087:	xchg   esp,eax
  41f088:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f089:	or     DWORD PTR [edx],edx
  41f08b:	inc    edi
  41f08c:	xchg   esp,eax
  41f08d:	push   0xb7659b40
  41f092:	out    0x4a,al
  41f094:	sbb    al,0x7c
  41f096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f097:	xlat   BYTE PTR ds:[ebx]
  41f098:	gs add esi,esp
  41f09b:	jne    0x41f091
  41f09d:	push   ecx
  41f09e:	lds    eax,FWORD PTR [ebp+0x7e]
  41f0a1:	push   0xffffffb7
  41f0a3:	lods   eax,DWORD PTR ds:[esi]
  41f0a4:	push   esp
  41f0a5:	ror    BYTE PTR [ecx+0x21491250],1
  41f0ab:	les    esp,FWORD PTR [ebx-0x13]
  41f0ae:	jecxz  0x41f0dd
  41f0b0:	pop    ebp
  41f0b1:	or     esi,ebx
  41f0b3:	rcr    BYTE PTR [ebx-0x5c],0x1b
  41f0b7:	add    DWORD PTR [ebx],ebp
  41f0b9:	test   esp,0xc0c7654b
  41f0bf:	jb     0x41f128
  41f0c1:	add    eax,0x6ad6ab11
  41f0c6:	fimul  DWORD PTR [eax]
  41f0c8:	lods   al,BYTE PTR ds:[esi]
  41f0c9:	or     edx,DWORD PTR [edi]
  41f0cb:	mov    al,ds:0x694c9046
  41f0d0:	in     eax,0xda
  41f0d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0d3:	pop    edx
  41f0d4:	xor    al,0x37
  41f0d6:	cwde   
  41f0d7:	pop    ebx
  41f0d8:	arpl   WORD PTR [eax],dx
  41f0da:	dec    esi
  41f0db:	pop    ebx
  41f0dc:	scas   eax,DWORD PTR es:[edi]
  41f0dd:	inc    eax
  41f0de:	out    dx,eax
  41f0df:	mov    edx,0xa98e037b
  41f0e4:	jno    0x41f08d
  41f0e6:	push   edx
  41f0e7:	inc    esi
  41f0e8:	fs xchg ebp,eax
  41f0ea:	imul   ebp,DWORD PTR [ebx+0x7354ab23],0x5635e2db
  41f0f4:	sub    DWORD PTR [eax],ebx
  41f0f6:	(bad)  
  41f0f7:	call   FWORD PTR [edi]
  41f0f9:	adc    BYTE PTR [esi],0xa4
  41f0fc:	mov    ebp,0x951fa7fc
  41f101:	mov    esp,ss
  41f103:	jge    0x41f125
  41f105:	(bad)
  41f108:	sub    bh,dl
  41f10a:	mov    ds:0x7a5af5ac,eax
  41f10f:	sub    al,0x63
  41f111:	fild   WORD PTR [edx+0x3bbd5fe9]
  41f117:	fimul  WORD PTR [esi-0x281cd667]
  41f11d:	mov    ch,0x1e
  41f11f:	push   es
  41f120:	push   esi
  41f121:	into   
  41f122:	inc    edx
  41f123:	fdivr  DWORD PTR [ebx]
  41f125:	mov    dh,0x4d
  41f127:	or     BYTE PTR [ebp-0x2fa32eff],bh
  41f12d:	xor    BYTE PTR [esi+esi*8+0x4f380731],ch
  41f134:	(bad)  
  41f135:	into   
  41f136:	cmp    ecx,edi
  41f138:	sti    
  41f139:	call   0x5a825168
  41f13e:	iret   
  41f13f:	shl    BYTE PTR [eax+esi*1-0x7],cl
  41f143:	loope  0x41f1ac
  41f145:	jge    0x41f19c
  41f147:	dec    ebx
  41f148:	adc    al,BYTE PTR [eax-0xd]
  41f14b:	ja     0x41f0d9
  41f14d:	and    ebp,edx
  41f14f:	lods   eax,DWORD PTR ds:[esi]
  41f150:	pop    ecx
  41f151:	out    0x2,eax
  41f153:	add    eax,0x4453ee61
  41f158:	push   ds
  41f159:	shl    BYTE PTR [eax-0xb],0x9a
  41f15d:	imul   ebx,ebp,0x7e
  41f160:	ret    
  41f161:	sti    
  41f162:	shl    DWORD PTR [edx],0x22
  41f165:	xchg   esi,eax
  41f166:	out    dx,al
  41f167:	and    BYTE PTR [ecx-0x10],0x72
  41f16b:	pop    edi
  41f16c:	cmc    
  41f16d:	mov    eax,0x5036bd07
  41f172:	imul   DWORD PTR [ebx-0x4e]
  41f175:	cdq    
  41f176:	xor    DWORD PTR [eax-0x7c],edi
  41f179:	aam    0x57
  41f17b:	sub    dh,BYTE PTR ds:0x4058b0a5
  41f181:	mov    ch,0xf9
  41f183:	ret    0xeecc
  41f186:	sbb    DWORD PTR [ebx+0x11],ecx
  41f189:	ss enter 0x2cfc,0xf4
  41f18e:	lods   eax,DWORD PTR ds:[esi]
  41f18f:	adc    eax,0x83493241
  41f194:	mov    ds:0xf930da01,eax
  41f199:	not    DWORD PTR [edi+0x1]
  41f19c:	retf   0xac37
  41f19f:	mov    dl,0x16
  41f1a1:	and    ah,BYTE PTR [ebx]
  41f1a3:	dec    edi
  41f1a4:	push   eax
  41f1a5:	jns    0x41f1f7
  41f1a7:	xor    DWORD PTR [ebx+0x245a6978],ebp
  41f1ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1ae:	or     eax,0x5202e620
  41f1b3:	or     eax,0x26272e63
  41f1b8:	retf   0x7c73
  41f1bb:	mov    eax,0xbd28d00d
  41f1c0:	xchg   BYTE PTR [ecx+0x7c],bl
  41f1c3:	fs ds xchg edx,eax
  41f1c6:	add    al,0xd0
  41f1c8:	sahf   
  41f1c9:	and    ah,BYTE PTR ds:0x729a8bf5
  41f1cf:	ja     0x41f17c
  41f1d1:	je     0x41f1b8
  41f1d3:	fadd   DWORD PTR [eax+ecx*8]
  41f1d6:	aad    0x9d
  41f1d8:	cwde   
  41f1d9:	adc    bl,BYTE PTR [esi-0x4e]
  41f1dc:	sub    eax,0x16667a5e
  41f1e1:	ins    BYTE PTR es:[edi],dx
  41f1e2:	daa    
  41f1e3:	fcomp  QWORD PTR [ebp-0x78e67de4]
  41f1e9:	mov    ecx,0x96527da6
  41f1ee:	ins    BYTE PTR es:[edi],dx
  41f1ef:	dec    edx
  41f1f0:	mov    ebp,0x6438d733
  41f1f5:	ret    0x1434
  41f1f8:	mov    ah,0x70
  41f1fa:	mov    ah,ch
  41f1fc:	sbb    al,0xcb
  41f1fe:	sbb    DWORD PTR [edx],0xffffffa5
  41f201:	jns    0x41f278
  41f203:	icebp  
  41f204:	repz mov ah,BYTE PTR [eax]
  41f207:	inc    ebx
  41f208:	xchg   edi,eax
  41f209:	mov    al,0x31
  41f20b:	data16 mov bh,0x34
  41f20e:	rcr    DWORD PTR [edi-0x36717743],1
  41f214:	test   eax,0x1974f855
  41f219:	mov    DWORD PTR gs:[ecx+0x40],eax
  41f21d:	cmp    ah,BYTE PTR [ebx-0x5a9b3e75]
  41f223:	adc    bh,BYTE PTR [eax]
  41f225:	mov    ecx,0xc07650d6
  41f22a:	xchg   BYTE PTR [ecx-0x7e41563a],cl
  41f230:	aad    0xb1
  41f232:	xchg   ebx,eax
  41f233:	sahf   
  41f234:	arpl   bp,bp
  41f236:	jno    0x41f256
  41f238:	xor    DWORD PTR [edi-0x36],edi
  41f23b:	jmp    0xf416:0x7c85b773
  41f242:	popf   
  41f243:	sub    edx,DWORD PTR [ecx+0x70]
  41f246:	and    BYTE PTR [ecx-0x19],0x4
  41f24a:	(bad)  
  41f24b:	cmp    dh,BYTE PTR [ebp+0x77652b98]
  41f251:	sbb    DWORD PTR [edi+0x66054db8],ebp
  41f257:	shl    DWORD PTR [ebx-0x35b0e634],1
  41f25d:	pop    edx
  41f25e:	xchg   esp,eax
  41f25f:	adc    eax,0x5e900e57
  41f264:	in     eax,dx
  41f265:	out    dx,al
  41f266:	inc    ecx
  41f267:	div    BYTE PTR [eax]
  41f269:	mov    edi,0x358ab2ba
  41f26e:	inc    ebx
  41f26f:	xchg   edx,ebx
  41f271:	xlat   BYTE PTR ds:[ebx]
  41f272:	cmp    DWORD PTR [eax],ebx
  41f274:	dec    ecx
  41f275:	ret    0xda4e
  41f278:	cmp    DWORD PTR [edi+0x76],ebp
  41f27b:	jle    0x41f221
  41f27d:	jge    0x41f2b5
  41f27f:	xchg   ebx,eax
  41f280:	ror    DWORD PTR [ebp-0x6a],0x63
  41f284:	xchg   ebp,eax
  41f285:	mov    BYTE PTR [edx-0x305c7ad7],al
  41f28b:	repz mov eax,0x9a37690e
  41f291:	mov    cl,0x3
  41f293:	adc    dl,cl
  41f295:	mov    bh,0xa1
  41f297:	jbe    0x41f264
  41f299:	fnstsw WORD PTR ds:0x223eb7e
  41f29f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2a0:	fadd   QWORD PTR [edi-0x59f63ecd]
  41f2a6:	or     DWORD PTR [ecx+0x41],esp
  41f2a9:	xor    bl,BYTE PTR ds:[esp+eax*2-0x4d]
  41f2ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2af:	int3   
  41f2b0:	test   DWORD PTR [ecx+0x5d],edx
  41f2b3:	jno    0x41f326
  41f2b5:	xor    edi,DWORD PTR [eax+0x7c4b6242]
  41f2bb:	or     eax,0x7cf54492
  41f2c0:	push   ss
  41f2c1:	push   edi
  41f2c2:	add    eax,0x641a18e5
  41f2c7:	jp     0x41f31c
  41f2c9:	mov    DWORD PTR [edi+edi*8],ebp
  41f2cc:	mov    ch,0xa7
  41f2ce:	dec    ebx
  41f2cf:	jmp    0xce86:0xc0d98606
  41f2d6:	add    bh,BYTE PTR [ebp-0x2f]
  41f2d9:	in     eax,0x3f
  41f2db:	xor    ah,ch
  41f2dd:	inc    ebp
  41f2de:	mov    ebp,0x498b3e21
  41f2e3:	jmp    0xecce:0x190a40b3
  41f2ea:	call   0xbac5:0xb5f88940
  41f2f1:	jmp    0xf919:0x3f0b6462
  41f2f8:	xchg   esp,eax
  41f2f9:	aad    0xb5
  41f2fb:	fs cwde 
  41f2fd:	sti    
  41f2fe:	add    BYTE PTR [ebp+eax*2-0x341e9cb7],dh
  41f305:	ds and eax,0xc33066ce
  41f30b:	mov    al,ds:0x12180f81
  41f310:	in     eax,0x58
  41f312:	pop    esp
  41f313:	outs   dx,BYTE PTR ds:[esi]
  41f314:	sub    al,0x1b
  41f316:	pop    ebp
  41f317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f318:	and    eax,0xef176bf9
  41f31d:	and    eax,0x3b90a4f3
  41f322:	or     eax,0x549e0104
  41f327:	mov    ds:0x60d6473b,eax
  41f32c:	je     0x41f2da
  41f32e:	pop    ecx
  41f32f:	hlt    
  41f330:	daa    
  41f331:	js     0x41f37d
  41f333:	xor    al,0xce
  41f335:	data16 mov al,ds:0x4e9d9c4a
  41f33b:	nop
  41f33c:	push   edi
  41f33d:	pop    ecx
  41f33e:	je     0x41f2f5
  41f340:	mov    al,0x9f
  41f342:	or     eax,0x512ed9b4
  41f347:	std    
  41f348:	mov    edi,0xf90db07f
  41f34d:	(bad)  
  41f34e:	mov    ecx,eax
  41f350:	ds das 
  41f352:	je     0x41f2e5
  41f354:	sbb    eax,0xd66198aa
  41f359:	jl     0x41f35a
  41f35b:	lods   eax,DWORD PTR ds:[esi]
  41f35c:	mov    eax,ecx
  41f35e:	ja     0x41f3bd
  41f360:	pop    edi
  41f361:	mov    edx,0xb34ce19d
  41f366:	bound  eax,QWORD PTR cs:[esi]
  41f369:	clc    
  41f36a:	mov    al,ds:0xf9fbd53
  41f36f:	repz xor eax,0xa0457a67
  41f375:	call   0xf48aa6fd
  41f37a:	xor    ebx,DWORD PTR [eax+edi*4]
  41f37d:	fdivr  DWORD PTR [esi+edi*4+0x0]
  41f381:	jae    0x41f400
  41f383:	neg    DWORD PTR ss:[edx-0xc]
  41f387:	sub    eax,0x98a8697
  41f38c:	xor    eax,0xfa85c8de
  41f391:	or     ebp,ecx
  41f393:	ins    DWORD PTR es:[edi],dx
  41f394:	sub    eax,0xe4530994
  41f399:	jne    0x41f379
  41f39b:	ja     0x41f3c7
  41f39d:	or     al,0xe
  41f39f:	das    
  41f3a0:	mov    ebp,eax
  41f3a2:	or     bh,0xa0
  41f3a5:	xor    BYTE PTR [esi],al
  41f3a7:	jmp    DWORD PTR [edx]
  41f3a9:	jb     0x41f3ec
  41f3ab:	push   esi
  41f3ac:	into   
  41f3ad:	cmp    eax,0x2eecea3c
  41f3b2:	push   ss
  41f3b3:	mov    ch,0x12
  41f3b5:	data16 mov al,ds:0xb1e39aa3
  41f3bb:	add    eax,0x3ac006d4
  41f3c0:	inc    edx
  41f3c1:	pcmpgtd mm0,QWORD PTR [eax-0x533a6ebc]
  41f3c8:	xor    edx,DWORD PTR [edi+ebx*8-0x1f41d9e3]
  41f3cf:	and    bh,dh
  41f3d1:	fimul  WORD PTR [eax+0x2]
  41f3d4:	jae    0x41f3f3
  41f3d6:	ficom  WORD PTR [ecx-0x75]
  41f3d9:	rcr    DWORD PTR [eax+0x7e3be4d3],cl
  41f3df:	or     eax,0x2865850b
  41f3e4:	jno    0x41f3ee
  41f3e6:	neg    DWORD PTR [eax]
  41f3e8:	clc    
  41f3e9:	push   ecx
  41f3ea:	leave  
  41f3eb:	mov    edx,0x73705982
  41f3f0:	sub    ecx,edi
  41f3f2:	xchg   ebp,eax
  41f3f3:	mov    al,0xbf
  41f3f5:	(bad)  
  41f3f6:	pop    esp
  41f3f7:	mov    ebp,0x9a6f67f9
  41f3fc:	mov    ds:0x1fc88a0,al
  41f401:	mov    ecx,0x7509479f
  41f406:	mov    ah,0xa4
  41f408:	push   ecx
  41f409:	test   al,0x67
  41f40b:	idiv   BYTE PTR [eax+0x5b602337]
  41f411:	push   eax
  41f412:	and    eax,DWORD PTR [esi-0x7c]
  41f415:	cmp    DWORD PTR [edi-0x4013935c],eax
  41f41b:	ret    0x9538
  41f41e:	nop
  41f41f:	outs   dx,DWORD PTR ds:[esi]
  41f420:	inc    esp
  41f421:	sar    ebp,1
  41f423:	push   ebp
  41f424:	out    0x4c,eax
  41f426:	xchg   ecx,eax
  41f427:	aaa    
  41f428:	mov    ebp,0xc4d39d35
  41f42d:	test   eax,0x4af8cf0d
  41f432:	dec    esp
  41f433:	and    ecx,DWORD PTR [edx+edx*1+0x6792b18f]
  41f43a:	adc    al,0xcb
  41f43c:	push   es
  41f43d:	xor    eax,0x9cf1f6fb
  41f442:	mov    bl,BYTE PTR [esp+esi*2]
  41f445:	mov    BYTE PTR [ecx],bh
  41f447:	sub    DWORD PTR [ecx],ebp
  41f449:	adc    eax,0x800e35ce
  41f44e:	cs fcmovnb st,st(5)
  41f451:	mov    ebx,0xc979048a
  41f456:	out    dx,al
  41f457:	jecxz  0x41f46d
  41f459:	sub    ebp,DWORD PTR [ebp+edx*4-0x7]
  41f45d:	ror    dl,0x1d
  41f460:	or     esp,edx
  41f462:	popa   
  41f463:	jne    0x41f42f
  41f465:	or     eax,0x3f000830
  41f46a:	xchg   ebx,eax
  41f46b:	cdq    
  41f46c:	cmp    BYTE PTR [ecx+0xd],cl
  41f46f:	inc    edx
  41f470:	mov    ah,0xb7
  41f472:	adc    DWORD PTR [esi+0x5629eeb6],ebp
  41f478:	jne    0x41f457
  41f47a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f47b:	into   
  41f47c:	fisubr DWORD PTR [edx+0x5c]
  41f47f:	inc    eax
  41f480:	inc    esi
  41f481:	retf   0xef0
  41f484:	push   edi
  41f485:	lods   eax,DWORD PTR ds:[esi]
  41f486:	pop    ds
  41f487:	(bad)  
  41f489:	es jmp 0x7a1128bd
  41f48f:	add    DWORD PTR [edi-0x1a],edx
  41f492:	add    ebx,DWORD PTR [edx+0x359ce7b6]
  41f498:	repnz mov esi,0x4e1f2141
  41f49e:	shr    DWORD PTR [esi],cl
  41f4a0:	mov    ch,0xab
  41f4a2:	scas   eax,DWORD PTR es:[edi]
  41f4a3:	sbb    BYTE PTR [eax],dl
  41f4a5:	test   BYTE PTR [ebp+0x4a56dfa6],al
  41f4ab:	pop    edx
  41f4ac:	lock jg 0x41f47f
  41f4af:	std    
  41f4b0:	jnp    0x41f4e8
  41f4b2:	fcomp  DWORD PTR ds:0x4dcbffe1
  41f4b8:	js     0x41f4db
  41f4ba:	adc    esp,DWORD PTR [eax+0x6187b47d]
  41f4c0:	mov    dh,0xef
  41f4c2:	int3   
  41f4c3:	sahf   
  41f4c4:	push   es
  41f4c5:	xor    edx,esi
  41f4c7:	cmp    dl,al
  41f4c9:	fist   WORD PTR [ecx]
  41f4cb:	gs scas al,BYTE PTR es:[edi]
  41f4cd:	pusha  
  41f4ce:	cld    
  41f4cf:	xchg   edi,eax
  41f4d0:	push   0xeb5ac3a5
  41f4d5:	bswap  eax
  41f4d7:	neg    DWORD PTR [eax-0x2505ebcf]
  41f4dd:	jg     0x41f4dc
  41f4df:	(bad)  
  41f4e0:	pop    ecx
  41f4e1:	push   eax
  41f4e2:	loopne 0x41f509
  41f4e4:	cmp    eax,0xedabee5e
  41f4e9:	dec    ecx
  41f4ea:	jbe    0x41f499
  41f4ec:	xchg   ebp,eax
  41f4ed:	lock les esp,FWORD PTR [ecx+ebp*8+0x55]
  41f4f2:	mov    edi,0x9b948eea
  41f4f7:	mov    ebx,0x20a45f2c
  41f4fc:	cmc    
  41f4fd:	pop    esi
  41f4fe:	out    0x5d,eax
  41f500:	xlat   BYTE PTR ss:[ebx]
  41f502:	and    esi,DWORD PTR [edi-0x4ee33ba5]
  41f508:	xor    ch,BYTE PTR [esi+edi*4+0x4634848e]
  41f50f:	pop    eax
  41f510:	(bad)  
  41f511:	int    0xd4
  41f513:	stc    
  41f514:	cmp    DWORD PTR [ebx],0x27
  41f517:	adc    cl,0x75
  41f51a:	ret    0x9bd7
  41f51d:	mov    bh,0xfc
  41f51f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f520:	adc    edi,DWORD PTR [ebp+0x66e53dcd]
  41f526:	call   0xf05192bb
  41f52b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f52c:	fs jg  0x41f5a4
  41f52f:	outs   dx,BYTE PTR ds:[esi]
  41f530:	retf   
  41f531:	dec    esp
  41f532:	mov    al,0x29
  41f534:	in     al,0xc2
  41f536:	sub    edx,0x55aeda4f
  41f53c:	and    al,0x80
  41f53e:	pop    ecx
  41f53f:	and    edi,esi
  41f541:	imul   esp,edx,0xffffff97
  41f544:	imul   ebx,DWORD PTR [ecx+0x44],0xffffffc3
  41f548:	mov    DWORD PTR [esi-0x62],0xd1bdc216
  41f54f:	cld    
  41f550:	(bad)  
  41f551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f552:	rcr    DWORD PTR [esp+ebx*1],cl
  41f555:	sub    edi,DWORD PTR [ecx-0x57]
  41f558:	mov    DWORD PTR [ebx-0x1ccd78c6],edi
  41f55e:	ret    0x20c5
  41f561:	popa   
  41f562:	xor    ebp,0xffffff9f
  41f565:	sbb    BYTE PTR [ebp-0x2ee7f7bc],dl
  41f56b:	sub    DWORD PTR [ecx],ebx
  41f56d:	loop   0x41f536
  41f56f:	xor    DWORD PTR [ebx+0x3f91cb4d],eax
  41f575:	pop    ecx
  41f576:	add    al,0x34
  41f578:	or     BYTE PTR [ecx+0x3],0xf9
  41f57c:	sub    BYTE PTR [edi+0x3c935953],cl
  41f582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f583:	sub    edx,esp
  41f585:	lods   al,BYTE PTR ds:[esi]
  41f586:	adc    esi,DWORD PTR [edx+edx*4-0x1ce18cd0]
  41f58d:	jns    0x41f579
  41f58f:	adc    DWORD PTR ds:0xd1254fe7,esp
  41f595:	lds    ebp,FWORD PTR [ebx+0x47]
  41f598:	cmp    ebx,esp
  41f59a:	add    eax,0xbd7389cd
  41f59f:	scas   al,BYTE PTR es:[edi]
  41f5a0:	dec    ecx
  41f5a1:	xchg   ebp,eax
  41f5a2:	push   esp
  41f5a3:	adc    dh,BYTE PTR [edi-0x402ebc75]
  41f5a9:	or     al,0xab
  41f5ab:	lds    ebp,FWORD PTR [edi]
  41f5ad:	mov    cl,0xd1
  41f5af:	arpl   di,sp
  41f5b1:	mov    esi,0xfe4500cf
  41f5b6:	(bad)  
  41f5b7:	dec    esi
  41f5b8:	add    eax,0x2dd48f52
  41f5bd:	ds pop ebp
  41f5bf:	sbb    DWORD PTR [eax-0x37774351],eax
  41f5c5:	ins    DWORD PTR es:[edi],dx
  41f5c6:	pop    ebx
  41f5c7:	push   0xb6f1e54d
  41f5cc:	pop    edx
  41f5cd:	xchg   ebp,eax
  41f5ce:	inc    esi
  41f5cf:	sub    DWORD PTR [ecx+0x101101d1],0xfffffff7
  41f5d6:	jb     0x41f641
  41f5d8:	scas   eax,DWORD PTR es:[edi]
  41f5d9:	cld    
  41f5da:	retf   
  41f5db:	out    dx,eax
  41f5dc:	inc    ecx
  41f5dd:	dec    eax
  41f5de:	push   eax
  41f5df:	imul   ebp,DWORD PTR [edx],0x8b47fad0
  41f5e5:	std    
  41f5e6:	jbe    0x41f62e
  41f5e8:	lock xchg esp,eax
  41f5ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5eb:	in     eax,0xb7
  41f5ed:	sbb    al,BYTE PTR [edx+0x26]
  41f5f0:	outs   dx,BYTE PTR ds:[esi]
  41f5f1:	and    dl,bh
  41f5f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5f4:	jge    0x41f639
  41f5f6:	ror    BYTE PTR [edi-0x26],0x72
  41f5fa:	dec    ecx
  41f5fb:	mov    ss,esi
  41f5fd:	push   ds
  41f5fe:	sbb    eax,0x5e90400b
  41f603:	test   eax,0x905c33c2
  41f608:	ficom  WORD PTR [ebx+ebp*4+0x6]
  41f60c:	and    dl,BYTE PTR [ecx+esi*8]
  41f60f:	inc    ecx
  41f610:	xchg   ecx,eax
  41f611:	and    ah,BYTE PTR [edx-0x20]
  41f614:	dec    esi
  41f615:	sti    
  41f616:	out    dx,eax
  41f617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f618:	shl    DWORD PTR [edi+0x13],cl
  41f61b:	mov    ch,0x4c
  41f61d:	ror    BYTE PTR ds:0x5ae25dde,1
  41f623:	pop    ds
  41f624:	mov    bl,0xf
  41f626:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f627:	pop    ss
  41f628:	sub    BYTE PTR [eax],0xc0
  41f62b:	icebp  
  41f62c:	ret    0xe5f7
  41f62f:	xchg   esi,eax
  41f630:	adc    BYTE PTR [ecx],ah
  41f632:	mov    ebp,0x4e65ca87
  41f637:	dec    edi
  41f638:	push   es
  41f639:	adc    bh,BYTE PTR [esi+0x29]
  41f63c:	xor    BYTE PTR [ebx+ebp*2-0x4],ch
  41f640:	scas   al,BYTE PTR es:[edi]
  41f641:	xor    ecx,DWORD PTR [ebp-0x25]
  41f644:	or     BYTE PTR [edi-0x3810eeda],dh
  41f64a:	imul   ebx,DWORD PTR [edx],0x86be5dc5
  41f650:	mov    dl,0xee
  41f652:	shr    ebx,0x12
  41f655:	(bad)  
  41f656:	cmp    al,0xd8
  41f658:	xor    eax,0xadaaf2c6
  41f65d:	daa    
  41f65e:	test   eax,0x5bcc900a
  41f663:	idiv   BYTE PTR [ecx]
  41f665:	xchg   DWORD PTR [edi+esi*8+0x4f],esi
  41f669:	out    0xe,al
  41f66b:	xor    dh,BYTE PTR [eax+ebx*2]
  41f66e:	or     bl,ah
  41f670:	jecxz  0x41f60d
  41f672:	cmp    BYTE PTR [eax+0x163b1406],dh
  41f678:	hlt    
  41f679:	push   esp
  41f67a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f67b:	out    dx,al
  41f67c:	lea    eax,[eax-0x8]
  41f67f:	and    BYTE PTR [eax],0x12
  41f682:	pop    edi
  41f683:	jb     0x41f69f
  41f685:	pop    esp
  41f686:	arpl   WORD PTR [esi+0x2a499b5a],si
  41f68c:	(bad)  
  41f68d:	shr    DWORD PTR [edx+0x5fd7f119],cl
  41f693:	sar    DWORD PTR [eax+0x10b84662],cl
  41f699:	dec    ecx
  41f69a:	imul   edi,edx,0x2df1f34c
  41f6a0:	mov    ecx,0x7f24565b
  41f6a5:	pop    ebx
  41f6a6:	jb     0x41f6b0
  41f6a8:	dec    esi
  41f6a9:	xor    al,0x7
  41f6ab:	mov    eax,ds:0xc38c031f
  41f6b0:	iret   
  41f6b1:	or     DWORD PTR [eax-0x48],0x3b17e070
  41f6b8:	cmp    bh,BYTE PTR [eax+0x7cd4467c]
  41f6be:	cmp    DWORD PTR [edx+edx*1],eax
  41f6c1:	dec    esp
  41f6c2:	popf   
  41f6c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6c4:	or     al,BYTE PTR [esi+0x2f]
  41f6c7:	xor    eax,DWORD PTR [ebx]
  41f6c9:	sub    al,0x2f
  41f6cb:	push   cs
  41f6cc:	mov    edx,0xb30a5b6b
  41f6d1:	mov    ds,WORD PTR [eax+0x72d9bcdd]
  41f6d7:	push   ss
  41f6d8:	iret   
  41f6d9:	jno    0x41f699
  41f6db:	test   DWORD PTR [eax+0x7b],0x6fb47415
  41f6e2:	or     esp,DWORD PTR [edx]
  41f6e4:	vorpd  ymm4,ymm5,YMMWORD PTR [edi-0x2e]
  41f6e9:	jb     0x41f711
  41f6eb:	mov    dl,BYTE PTR [ebx]
  41f6ed:	and    al,BYTE PTR [ebx+0x9c8a6c0]
  41f6f3:	adc    DWORD PTR [eax],ebx
  41f6f5:	cmp    edi,esp
  41f6f7:	outs   dx,DWORD PTR ds:[esi]
  41f6f8:	jl     0x41f6aa
  41f6fa:	xor    eax,0xe2c9461c
  41f6ff:	iret   
  41f700:	cmp    BYTE PTR [ecx-0x54],ch
  41f703:	mov    ecx,0x72dbe87a
  41f708:	mov    eax,ds:0x68af27f1
  41f70d:	adc    eax,0xeb0b7674
  41f712:	sub    DWORD PTR [esi],eax
  41f714:	ss jo  0x41f6ff
  41f717:	sub    eax,eax
  41f719:	adc    eax,0x149c7d15
  41f71e:	jmp    0x41f6a3
  41f720:	sub    edx,esp
  41f722:	pop    ebp
  41f723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f724:	fcomp  QWORD PTR [ebx+0x6a7d761b]
  41f72a:	aaa    
  41f72b:	mov    ecx,0x7cd5eef9
  41f730:	dec    ecx
  41f731:	mov    ds:0x679ac15c,eax
  41f736:	nop
  41f737:	lds    eax,FWORD PTR [ebx+0x32]
  41f73a:	fdiv   DWORD PTR [ebx*1-0x38f205ef]
  41f741:	sub    al,0x17
  41f743:	mov    dl,0xcf
  41f745:	sar    BYTE PTR [ebp+0x10],0x13
  41f749:	imul   ecx,DWORD PTR [ebx+0x6a4ac78f],0x10d72a27
  41f753:	push   eax
  41f754:	cmp    BYTE PTR [edx+ebp*4+0x1ae766a5],dl
  41f75b:	xor    BYTE PTR [esi],al
  41f75d:	mov    ebx,0xb680b483
  41f762:	jge    0x41f7a0
  41f764:	pop    ds
  41f765:	popa   
  41f766:	loopne 0x41f6fa
  41f768:	std    
  41f769:	adc    al,0x98
  41f76b:	adc    ch,BYTE PTR [esi]
  41f76d:	push   ebp
  41f76e:	and    BYTE PTR [edi-0x14],bl
  41f771:	jo     0x41f74e
  41f773:	jmp    0xfc7ad063
  41f778:	push   esi
  41f779:	adc    DWORD PTR [edx-0x23],ebx
  41f77c:	sbb    al,al
  41f77e:	sbb    eax,DWORD PTR [eax-0x92d2c8a]
  41f784:	sub    edi,DWORD PTR [ecx+ecx*1]
  41f787:	sub    al,0x36
  41f789:	mov    ecx,0x192dc364
  41f78e:	es jp  0x41f809
  41f791:	sbb    dh,BYTE PTR [esi+0x6d]
  41f794:	sub    al,0x78
  41f796:	xchg   DWORD PTR [esi+eiz*8],ecx
  41f799:	xor    BYTE PTR [ecx+edx*4-0x6f],0xaf
  41f79e:	rcr    BYTE PTR [eax-0x5e],1
  41f7a1:	pusha  
  41f7a2:	fwait
  41f7a3:	lods   al,BYTE PTR ds:[esi]
  41f7a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7a5:	ins    BYTE PTR es:[di],dx
  41f7a7:	mov    eax,ds:0xdb7d1af8
  41f7ac:	jbe    0x41f73f
  41f7ae:	add    eax,0xe917f2f7
  41f7b3:	cmp    DWORD PTR [edx+edx*2+0x4f],0xfffffff0
  41f7b8:	aad    0x73
  41f7ba:	les    esi,FWORD PTR [esi-0x62e8eacb]
  41f7c0:	enter  0x47dd,0x93
  41f7c4:	retf   
  41f7c5:	fadd   QWORD PTR [eax+eax*8]
  41f7c8:	xlat   BYTE PTR es:[ebx]
  41f7ca:	pusha  
  41f7cb:	cwde   
  41f7cc:	jo     0x41f777
  41f7ce:	mov    ch,BYTE PTR [esp+ebx*1-0x111effb]
  41f7d5:	out    dx,al
  41f7d6:	repz push ebp
  41f7d8:	or     eax,edx
  41f7da:	add    DWORD PTR [ebp-0x76],edx
  41f7dd:	dec    ecx
  41f7de:	xor    al,0xf1
  41f7e0:	pop    ebx
  41f7e1:	rcl    BYTE PTR [edi-0x50e9d1c7],cl
  41f7e7:	jno    0x41f84b
  41f7e9:	jmp    0xeaa2:0x3128d7ba
  41f7f0:	xor    esp,DWORD PTR [ebx]
  41f7f2:	jmp    0x41f775
  41f7f4:	push   0xe3a9c63d
  41f7f9:	ret    0x59f1
  41f7fc:	ret    0x6458
  41f7ff:	jmp    0x41f7b9
  41f801:	in     eax,dx
  41f802:	adc    edx,eax
  41f804:	std    
  41f805:	push   ebp
  41f806:	int3   
  41f807:	in     eax,0x66
  41f809:	jbe    0x41f7e4
  41f80b:	sbb    BYTE PTR [ebp+0x6f],bl
  41f80e:	mov    edx,0xfec3ebcb
  41f813:	std    
  41f814:	sbb    cl,BYTE PTR [edx+0x4f76944d]
  41f81a:	out    dx,al
  41f81b:	cwde   
  41f81c:	stc    
  41f81d:	dec    ebp
  41f81e:	aas    
  41f81f:	ret    0x2609
  41f822:	pop    esi
  41f823:	retf   0xe4a7
  41f826:	dec    ebp
  41f827:	(bad)  
  41f828:	iret   
  41f829:	(bad)
  41f82d:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41f82f:	outs   dx,DWORD PTR ds:[esi]
  41f830:	sahf   
  41f831:	cs cs mov fs:0xe53786d1,al
  41f839:	jecxz  0x41f804
  41f83b:	adc    al,0xf0
  41f83d:	rcl    BYTE PTR [esi-0x283af77c],1
  41f843:	xchg   DWORD PTR [ebp+0x47],ebx
  41f846:	sbb    ch,cl
  41f848:	sbb    dl,dh
  41f84a:	adc    BYTE PTR [eax-0x15],cl
  41f84d:	push   ss
  41f84e:	xchg   edx,eax
  41f84f:	out    0xb6,al
  41f851:	sub    edi,esi
  41f853:	add    ebp,ebx
  41f855:	add    DWORD PTR fs:[esi],esi
  41f858:	mov    dh,0x6c
  41f85a:	test   eax,0x76b3bd96
  41f85f:	pop    ebx
  41f860:	out    dx,al
  41f861:	cs push edi
  41f863:	in     eax,dx
  41f864:	jg     0x41f87e
  41f866:	out    0xe7,al
  41f868:	mov    WORD PTR [ebx-0x1fc99a30],es
  41f86e:	mov    eax,ds:0xed45a053
  41f873:	push   ds
  41f874:	(bad)  
  41f875:	or     BYTE PTR [edi],bl
  41f877:	xlat   BYTE PTR ds:[ebx]
  41f878:	add    eax,0x893b8d85
  41f87d:	call   0x6c105f5c
  41f882:	or     eax,0xd14eca4a
  41f887:	cmp    cl,BYTE PTR [ebp+0x2d]
  41f88a:	xchg   edx,eax
  41f88b:	xor    BYTE PTR [ebx+0x49],0x8b
  41f88f:	cmp    DWORD PTR [edx-0x189545fb],edx
  41f895:	mov    ah,0x88
  41f897:	pop    eax
  41f898:	les    eax,FWORD PTR [esi+ecx*8+0x4ff8f973]
  41f89f:	adc    edi,DWORD PTR [ebp-0x22]
  41f8a2:	xchg   ebp,eax
  41f8a3:	mov    bl,BYTE PTR [eax]
  41f8a5:	jno    0x41f8f9
  41f8a7:	lods   al,BYTE PTR ds:[esi]
  41f8a8:	imul   ecx,DWORD PTR [ebx+ebp*8-0x5914c219],0x24
  41f8b0:	sub    dh,cl
  41f8b2:	hlt    
  41f8b3:	dec    eax
  41f8b4:	fsubr  QWORD PTR [ecx+0x1aea1f2a]
  41f8ba:	loopne 0x41f8a8
  41f8bc:	enter  0x7a5c,0x46
  41f8c0:	nop
  41f8c1:	xchg   ebp,eax
  41f8c2:	sbb    ecx,ebp
  41f8c4:	neg    BYTE PTR [eax-0x3a8bb98a]
  41f8ca:	dec    edi
  41f8cb:	cwde   
  41f8cc:	inc    edi
  41f8cd:	pop    ebx
  41f8ce:	aas    
  41f8cf:	and    DWORD PTR [edi+0x61],ebx
  41f8d2:	mov    eax,DWORD PTR [eax+0x6068a03b]
  41f8d8:	sub    DWORD PTR [ebx],esp
  41f8da:	or     DWORD PTR [edi+0x2fced147],ecx
  41f8e0:	fwait
  41f8e1:	cmp    BYTE PTR [ebp+0x4a],0xf6
  41f8e5:	sub    ah,BYTE PTR [ebp-0x53723416]
  41f8eb:	retf   0xf222
  41f8ee:	sub    al,bl
  41f8f0:	outs   dx,DWORD PTR ds:[esi]
  41f8f1:	fscale 
  41f8f3:	dec    eax
  41f8f4:	arpl   WORD PTR [edi],bp
  41f8f6:	stc    
  41f8f7:	stc    
  41f8f8:	mov    bh,0xf
  41f8fa:	jbe    0x41f8e1
  41f8fc:	push   ebx
  41f8fd:	ins    DWORD PTR es:[edi],dx
  41f8fe:	and    ebx,edi
  41f900:	fsubr  DWORD PTR [edx+0x2c66f48]
  41f906:	inc    esp
  41f907:	mov    ebx,0x4d8abfdb
  41f90c:	outs   dx,DWORD PTR ds:[esi]
  41f90d:	retf   
  41f90e:	call   0x43e8a110
  41f913:	test   al,0x29
  41f915:	sub    cl,bh
  41f917:	cdq    
  41f918:	jnp    0x41f981
  41f91a:	pop    ebp
  41f91b:	dec    eax
  41f91c:	call   0xacdd:0xe1393503
  41f923:	and    cl,BYTE PTR ds:0x3d1ab8f4
  41f929:	or     al,0x4b
  41f92b:	mov    eax,ds:0x18b4ed03
  41f930:	(bad)  
  41f931:	ror    DWORD PTR [edi],1
  41f933:	add    al,0x2c
  41f935:	lds    edx,FWORD PTR [edx+0x50c47378]
  41f93b:	mov    ah,0x2
  41f93d:	mov    ah,0x3f
  41f93f:	pusha  
  41f940:	in     al,dx
  41f941:	cmp    eax,0x760b9421
  41f946:	mov    bh,0x4e
  41f948:	sbb    ecx,DWORD PTR [ebp-0x37]
  41f94b:	(bad)  
  41f94c:	(bad)  
  41f94d:	adc    cl,BYTE PTR [edi]
  41f94f:	ficomp DWORD PTR ds:0xa682f395
  41f955:	mov    eax,0x96b6025
  41f95a:	gs loop 0x41f941
  41f95d:	mov    dh,0x54
  41f95f:	lods   eax,DWORD PTR ds:[esi]
  41f960:	dec    ebp
  41f961:	cmp    cl,BYTE PTR [edi+0x4d62a116]
  41f967:	scas   al,BYTE PTR es:[edi]
  41f968:	xchg   edx,eax
  41f969:	shr    esi,1
  41f96b:	xchg   edx,eax
  41f96c:	int    0xec
  41f96e:	add    al,0xd8
  41f970:	push   0xffffffdb
  41f972:	pop    edi
  41f973:	dec    ebp
  41f974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f975:	jmp    0x4671:0x189b8db4
  41f97c:	fs mov cl,0x67
  41f97f:	mov    dh,0x3f
  41f981:	inc    esp
  41f982:	adc    BYTE PTR [ebx-0x21757d5e],ch
  41f988:	in     eax,0x69
  41f98a:	mov    DWORD PTR [edi-0x2dc3c16c],ebp
  41f990:	pop    ecx
  41f991:	fcmovnu st,st(5)
  41f993:	add    al,0xed
  41f995:	or     bl,0xee
  41f998:	xchg   ecx,eax
  41f999:	shl    DWORD PTR [ecx+0x50],0x49
  41f99d:	sahf   
  41f99e:	lds    edi,FWORD PTR [ecx+0x7a407e00]
  41f9a4:	jns    0x41f9fa
  41f9a6:	add    eax,0x88330e16
  41f9ab:	or     eax,0xd71f9a56
  41f9b0:	sub    eax,0xb30aaad9
  41f9b5:	push   esi
  41f9b6:	out    0x9f,al
  41f9b8:	jge    0x41f991
  41f9ba:	mov    WORD PTR [ebx-0x41965de2],ss
  41f9c0:	lods   eax,DWORD PTR ds:[esi]
  41f9c1:	mov    gs,WORD PTR [edx+0x6e86d2a5]
  41f9c7:	test   al,0x3c
  41f9c9:	pop    edx
  41f9ca:	data16 js 0x41fa06
  41f9cd:	mov    esp,0xde02da15
  41f9d2:	rcl    BYTE PTR [ebp-0x255a39c],1
  41f9d8:	sub    esp,DWORD PTR [ecx-0x4]
  41f9db:	es mov dh,0xa6
  41f9de:	mov    ebp,0x84a18246
  41f9e3:	xor    al,0xc8
  41f9e5:	jge    0x41f96c
  41f9e7:	pop    ebp
  41f9e8:	icebp  
  41f9e9:	lods   al,BYTE PTR ds:[esi]
  41f9ea:	mov    ah,0x21
  41f9ec:	mov    ebx,0x36062c44
  41f9f1:	fbstp  TBYTE PTR [esi]
  41f9f3:	dec    esp
  41f9f4:	cli    
  41f9f5:	or     eax,0xee98353e
  41f9fa:	test   BYTE PTR ds:0xfaa236cd,al
  41fa00:	leave  
  41fa01:	(bad)  
  41fa02:	stc    
  41fa03:	xchg   esi,eax
  41fa04:	xor    al,0x67
  41fa06:	jle    0x41f9a9
  41fa08:	or     al,0xa
  41fa0a:	mov    edx,0x64cf6b27
  41fa0f:	xor    BYTE PTR [esi-0xa],0x51
  41fa13:	rcr    edx,1
  41fa15:	cli    
  41fa16:	das    
  41fa17:	ret    
  41fa18:	loopne 0x41f9d4
  41fa1a:	ins    DWORD PTR es:[edi],dx
  41fa1b:	add    esi,DWORD PTR [ebp-0x5620a5d1]
  41fa21:	(bad)  
  41fa22:	inc    ecx
  41fa23:	stos   BYTE PTR es:[edi],al
  41fa24:	int3   
  41fa25:	dec    esp
  41fa26:	mov    dh,0x4f
  41fa28:	mov    ecx,0xb9fef6af
  41fa2d:	out    dx,eax
  41fa2e:	jbe    0x41fa92
  41fa30:	push   ebp
  41fa31:	add    eax,0x902626f7
  41fa36:	sub    al,0x40
  41fa38:	pop    ss
  41fa39:	fdivr  QWORD PTR [eax]
  41fa3b:	sub    al,0xca
  41fa3d:	mov    ebp,0x7cca7b89
  41fa42:	adc    BYTE PTR [edx],0xb7
  41fa45:	push   es
  41fa46:	ja     0x41f9e9
  41fa48:	add    al,0xa8
  41fa4a:	jmp    0x41fa4d
  41fa4c:	dec    esi
  41fa4d:	aam    0x90
  41fa4f:	icebp  
  41fa50:	call   0x585d1761
  41fa55:	std    
  41fa56:	push   esp
  41fa57:	inc    eax
  41fa58:	pusha  
  41fa59:	les    ecx,FWORD PTR [ebx-0x3a]
  41fa5c:	scas   eax,DWORD PTR es:[edi]
  41fa5d:	push   es
  41fa5e:	xor    al,0x80
  41fa60:	xchg   ebp,eax
  41fa61:	and    BYTE PTR [esi+0x98321b0],cl
  41fa67:	das    
  41fa68:	inc    esp
  41fa69:	ds push cs
  41fa6b:	push   esi
  41fa6c:	(bad)  
  41fa6d:	cli    
  41fa6e:	mov    WORD PTR [ecx-0x2a],es
  41fa71:	push   es
  41fa72:	dec    esp
  41fa73:	push   ebx
  41fa74:	(bad)  
  41fa75:	aam    0xb2
  41fa77:	push   ds
  41fa78:	pop    edi
  41fa79:	pushf  
  41fa7a:	push   cs
  41fa7b:	xchg   esp,eax
  41fa7c:	pushf  
  41fa7d:	lods   al,BYTE PTR ds:[esi]
  41fa7e:	xchg   BYTE PTR [edx*2-0xbe0c36e],dl
  41fa85:	aaa    
  41fa86:	ja     0x41fa30
  41fa88:	pop    edx
  41fa89:	popf   
  41fa8a:	jno    0x41fa77
  41fa8c:	jg     0x41fae5
  41fa8e:	push   edi
  41fa8f:	cmp    ebp,DWORD PTR [ebp+0x60]
  41fa92:	xor    ebx,DWORD PTR [edx-0x6bdcd814]
  41fa98:	sub    al,0x53
  41fa9a:	popf   
  41fa9b:	std    
  41fa9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa9d:	popf   
  41fa9e:	xor    DWORD PTR [eax+0x625acc63],esp
  41faa4:	inc    ebx
  41faa5:	push   edi
  41faa6:	data16 mov dl,BYTE PTR [esi]
  41faa9:	push   eax
  41faaa:	cwde   
  41faab:	jno    0x41fab2
  41faad:	cmp    dl,BYTE PTR [ebp-0x42]
  41fab0:	aad    0x43
  41fab2:	jle    0x41fa56
  41fab4:	push   ebp
  41fab5:	sub    ecx,esi
  41fab7:	mov    ecx,0xd6edbc4c
  41fabc:	sbb    dh,BYTE PTR [ecx-0x45]
  41fabf:	pusha  
  41fac0:	pop    esp
  41fac1:	mov    WORD PTR [eax+0x29e3873d],ss
  41fac7:	fild   QWORD PTR [edi]
  41fac9:	call   0xde5b:0x696a9490
  41fad0:	dec    ebp
  41fad1:	inc    ebx
  41fad2:	mov    ds:0x40b2b71f,al
  41fad7:	inc    BYTE PTR [edi+0x54763ad3]
  41fadd:	lock or al,BYTE PTR [esi+0x19]
  41fae1:	add    ebp,DWORD PTR [edx-0x72]
  41fae4:	adc    eax,esp
  41fae6:	jmp    0x41fb52
  41fae8:	and    DWORD PTR [edi+0x39],edi
  41faeb:	scas   al,BYTE PTR es:[edi]
  41faec:	aas    
  41faed:	mov    al,ds:0x5db1243c
  41faf2:	mov    ebx,0xffd8d5b9
  41faf7:	cld    
  41faf8:	push   ss
  41faf9:	xlat   BYTE PTR ds:[ebx]
  41fafa:	dec    eax
  41fafb:	add    DWORD PTR [eax],ebx
  41fafd:	sbb    BYTE PTR [ebx+0x48],al
  41fb00:	mov    ebx,0xb133674a
  41fb06:	and    DWORD PTR [edx],edi
  41fb08:	scas   eax,DWORD PTR es:[edi]
  41fb09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb0a:	out    dx,eax
  41fb0b:	cmc    
  41fb0c:	push   edi
  41fb0d:	cld    
  41fb0e:	dec    esi
  41fb0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb10:	(bad)  
  41fb11:	pop    esp
  41fb12:	mov    ecx,DWORD PTR [esi+0x1a]
  41fb15:	jg     0x41fad7
  41fb17:	pop    esp
  41fb18:	imul   DWORD PTR [edx-0x3c3d109a]
  41fb1e:	aas    
  41fb1f:	rol    esi,0x9a
  41fb22:	push   0xf9f2a024
  41fb27:	jecxz  0x41faa9
  41fb29:	add    al,0xf8
  41fb2b:	adc    BYTE PTR [eax+eax*8+0x373ddd7a],cl
  41fb32:	test   BYTE PTR ds:0xdcfd852a,0x8
  41fb39:	inc    esp
  41fb3a:	iret   
  41fb3b:	adc    eax,0xc9cea719
  41fb40:	mov    edx,0x1d272170
  41fb45:	retf   
  41fb46:	xchg   ecx,eax
  41fb47:	shr    DWORD PTR [edi+0x51],1
  41fb4a:	pusha  
  41fb4b:	sbb    DWORD PTR [edx],esp
  41fb4d:	dec    ecx
  41fb4e:	out    0xe2,al
  41fb50:	mov    dl,0x18
  41fb52:	inc    eax
  41fb53:	aam    0x1d
  41fb55:	shr    DWORD PTR [ecx-0x5b],cl
  41fb58:	pop    ebp
  41fb59:	push   ebp
  41fb5a:	jmp    0x3ebdd796
  41fb5f:	mov    WORD PTR [esi+esi*2+0xa],es
  41fb63:	jge    0x41fb17
  41fb65:	xchg   BYTE PTR [edi+eiz*8-0x4ad4639b],dl
  41fb6c:	xchg   esi,eax
  41fb6d:	mov    ds:0x91e648de,al
  41fb72:	mov    ds:0x26dc0ab5,eax
  41fb77:	lahf   
  41fb78:	jl     0x41fbb5
  41fb7a:	mov    cl,0xb3
  41fb7c:	xor    al,0xfc
  41fb7e:	adc    eax,0xc9664ed7
  41fb83:	push   ebp
  41fb84:	pop    ds
  41fb85:	fwait
  41fb86:	pop    eax
  41fb87:	sub    eax,0x320fc05e
  41fb8c:	leave  
  41fb8d:	adc    cl,dh
  41fb8f:	fisubr DWORD PTR [esi+0x78]
  41fb92:	dec    ebp
  41fb93:	sub    esi,DWORD PTR [ecx+esi*8-0x39017987]
  41fb9a:	imul   ecx,esi,0x2
  41fb9d:	push   edx
  41fb9e:	(bad)  
  41fb9f:	xchg   ebp,eax
  41fba0:	shr    BYTE PTR [ebp-0x20],1
  41fba3:	lds    ecx,FWORD PTR [eax]
  41fba5:	push   ds
  41fba6:	outs   dx,DWORD PTR ds:[esi]
  41fba7:	or     DWORD PTR [ebx+esi*2-0x4a735b47],0x30
  41fbaf:	ss inc edi
  41fbb1:	sbb    bl,ah
  41fbb3:	jo     0x41fbc6
  41fbb5:	dec    esi
  41fbb6:	jle    0x41fb48
  41fbb8:	and    eax,0x467c6f8f
  41fbbd:	aaa    
  41fbbe:	mov    esi,0xa37f21cc
  41fbc3:	outs   dx,BYTE PTR ds:[esi]
  41fbc4:	dec    eax
  41fbc5:	in     al,0x5
  41fbc7:	and    eax,0xff549c6f
  41fbcc:	mov    bl,0xac
  41fbce:	cmp    DWORD PTR [ecx-0x44],0x4a
  41fbd2:	retf   
  41fbd3:	pushf  
  41fbd4:	xchg   edi,eax
  41fbd5:	push   0x3e99e4b7
  41fbda:	fisub  WORD PTR [esi]
  41fbdc:	ror    BYTE PTR ds:[ebx+0x2e],1
  41fbe0:	xor    DWORD PTR [edx+eiz*2+0x5d],esi
  41fbe4:	add    dh,bl
  41fbe6:	call   0xbf21fd52
  41fbeb:	or     edx,DWORD PTR [eax]
  41fbed:	jmp    0x71fe0914
  41fbf2:	pop    ebx
  41fbf3:	inc    ecx
  41fbf4:	adc    DWORD PTR [edi+0x45],ecx
  41fbf7:	iret   
  41fbf8:	push   0x6fe93262
  41fbfd:	in     eax,dx
  41fbfe:	mov    edx,0x7a886526
  41fc03:	icebp  
  41fc04:	add    BYTE PTR [esi+0x507540b7],cl
  41fc0a:	mov    al,0x5d
  41fc0c:	cmp    al,BYTE PTR [edx+0x29]
  41fc0f:	or     eax,ecx
  41fc11:	and    cl,bh
  41fc13:	popa   
  41fc14:	aaa    
  41fc15:	push   ds
  41fc16:	shl    BYTE PTR [eax-0x12318103],cl
  41fc1c:	xchg   edi,eax
  41fc1d:	sub    BYTE PTR [eax+0x66],dh
  41fc20:	pop    eax
  41fc21:	add    DWORD PTR [esi],esi
  41fc23:	test   eax,ecx
  41fc25:	cmc    
  41fc26:	pop    ss
  41fc27:	mul    esp
  41fc29:	(bad)  
  41fc2a:	cs mov edi,0x1c56c732
  41fc30:	and    DWORD PTR [ecx-0x17],edx
  41fc33:	jmp    0xab66:0xde84f575
  41fc3a:	fcmovnu st,st(2)
  41fc3c:	ret    0xbbfe
  41fc3f:	mov    edi,DWORD PTR [ecx+0x78eb7119]
  41fc45:	jge    0x41fc2c
  41fc47:	mov    bl,0x31
  41fc49:	lock test BYTE PTR [ecx],dl
  41fc4c:	sub    edi,DWORD PTR [esi-0x47772378]
  41fc52:	arpl   WORD PTR [ebx-0x5a821bd0],dx
  41fc58:	push   esp
  41fc59:	jle    0x41fc4d
  41fc5b:	loope  0x41fc27
  41fc5d:	mov    al,ds:0xd3587106
  41fc62:	adc    eax,0xcfe40ee7
  41fc67:	adc    al,0xe9
  41fc69:	into   
  41fc6a:	cmp    al,0x91
  41fc6c:	mov    edx,0x362453a0
  41fc71:	mov    ds:0xed668ab8,al
  41fc76:	add    al,0x3b
  41fc78:	inc    eax
  41fc79:	and    esp,DWORD PTR [edx-0x68]
  41fc7c:	je     0x41fcc0
  41fc7e:	or     edx,0xaada6c1d
  41fc84:	cmp    ah,ah
  41fc86:	mov    ebx,0xf6f501dd
  41fc8b:	sub    eax,0xb0fb82b8
  41fc90:	jle    0x41fcba
  41fc92:	xor    BYTE PTR [edi],ch
  41fc94:	or     eax,0xa3132ed
  41fc99:	cmp    BYTE PTR [edi+0x52],bh
  41fc9c:	push   ebp
  41fc9d:	stos   DWORD PTR es:[edi],eax
  41fc9e:	jle    0x41fcda
  41fca0:	mov    esp,0xc4b2f631
  41fca5:	push   ebx
  41fca6:	add    DWORD PTR [edi+0x5a930235],edi
  41fcac:	(bad)  
  41fcad:	mov    esi,0xfff709de
  41fcb2:	dec    eax
  41fcb3:	shl    BYTE PTR [ebx-0x32],cl
  41fcb6:	js     0x41fd1c
  41fcb8:	push   0x521b55c8
  41fcbd:	dec    ecx
  41fcbe:	adc    ebp,DWORD PTR [ebx+0xe]
  41fcc1:	xor    BYTE PTR [ebp*8-0x2a719249],0x58
  41fcc9:	push   ebx
  41fcca:	iret   
  41fccb:	jne    0x41fcb1
  41fccd:	shl    BYTE PTR [edx+0xd],1
  41fcd0:	mul    ecx
  41fcd2:	loope  0x41fc71
  41fcd4:	in     al,0xc2
  41fcd6:	inc    ebp
  41fcd7:	shr    DWORD PTR [eax+0x2f],cl
  41fcda:	retf   
  41fcdb:	push   esi
  41fcdc:	test   DWORD PTR [ebx+0x2392297e],ecx
  41fce2:	repnz xchg edx,eax
  41fce4:	in     al,dx
  41fce5:	lea    ebp,[edi-0x67006e30]
  41fceb:	or     BYTE PTR [edi-0x5460b46c],al
  41fcf1:	sub    edi,DWORD PTR [eax+0x4c]
  41fcf4:	fcomp  QWORD PTR [esi]
  41fcf6:	call   0x15ebe66c
  41fcfb:	in     eax,0x7
  41fcfd:	add    esi,DWORD PTR [edx+eiz*8]
  41fd00:	leave  
  41fd01:	jns    0x41fcea
  41fd03:	cmovs  ecx,DWORD PTR [eax-0x70d19974]
  41fd0a:	sbb    BYTE PTR [ebx-0x72baaf51],0x4f
  41fd11:	neg    bh
  41fd13:	add    esp,DWORD PTR [esi]
  41fd15:	addr16 push 0xffffff9b
  41fd18:	jge    0x41fcf1
  41fd1a:	pop    es
  41fd1b:	ret    
  41fd1c:	adc    DWORD PTR [ebx+0xc998c7b],ecx
  41fd22:	push   cs
  41fd23:	xchg   ebx,eax
  41fd24:	pop    edi
  41fd25:	fsubr  DWORD PTR [eax-0x7b2499fe]
  41fd2b:	inc    edx
  41fd2c:	jae    0x41fd93
  41fd2e:	xor    eax,0x67fa862a
  41fd33:	jge    0x41fcbf
  41fd35:	mov    eax,0xeb44375d
  41fd3a:	rcl    DWORD PTR [ecx],0xee
  41fd3d:	dec    esp
  41fd3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd40:	xor    ebx,DWORD PTR [ebx+eiz*8-0x5f]
  41fd44:	mov    al,ds:0xd3b5cd8d
  41fd49:	mov    ds:0x476d3fbf,eax
  41fd4e:	pop    ecx
  41fd4f:	xchg   ebx,eax
  41fd50:	inc    edx
  41fd51:	pop    edi
  41fd52:	ror    BYTE PTR ds:0x9fb9c696,0x28
  41fd59:	leave  
  41fd5a:	hlt    
  41fd5b:	adc    eax,0xede258d5
  41fd60:	(bad)  
  41fd61:	fxch   st(5)
  41fd63:	lock and eax,0xbdb3c531
  41fd69:	data16 jp 0x41fdd0
  41fd6c:	or     bh,BYTE PTR [edi-0x6f]
  41fd6f:	in     al,0x6e
  41fd71:	cmp    eax,0xf295f9c8
  41fd76:	and    ah,BYTE PTR [ebx-0x3]
  41fd79:	mov    BYTE PTR [ecx+eax*4+0x4f],ch
  41fd7d:	and    edi,DWORD PTR [edi+eax*8-0x725150c6]
  41fd84:	jmp    0x41fdcc
  41fd86:	mov    DWORD PTR [bx+si+0x1c60],0x6a9c1f5
  41fd8f:	test   eax,0x7ec90e28
  41fd94:	and    DWORD PTR [edx-0x5a388f5d],esi
  41fd9a:	xor    dh,BYTE PTR [ebx+0x2d]
  41fd9d:	adc    edi,DWORD PTR [edx+0x4ec23687]
  41fda3:	fwait
  41fda4:	sub    edx,ecx
  41fda6:	cmp    eax,0x2ba7fb9b
  41fdab:	and    eax,0x62fc1faf
  41fdb0:	test   al,0x97
  41fdb2:	ja     0x41fdd7
  41fdb4:	scas   al,BYTE PTR es:[edi]
  41fdb5:	leave  
  41fdb6:	mov    bl,0x13
  41fdb8:	out    0xaa,eax
  41fdba:	pop    ds
  41fdbb:	dec    ecx
  41fdbc:	pop    ss
  41fdbd:	ficomp WORD PTR [ebp-0x54b5c5b3]
  41fdc3:	jle    0x41fd7b
  41fdc5:	in     eax,dx
  41fdc6:	or     al,0xc5
  41fdc8:	xor    eax,0x8d269dd1
  41fdcd:	mov    bl,BYTE PTR [ebx-0x65]
  41fdd0:	mov    bl,0x27
  41fdd2:	cmp    esi,DWORD PTR [esi+0x74]
  41fdd5:	xchg   ecx,edx
  41fdd7:	(bad)  
  41fdd8:	ret    0x6156
  41fddb:	daa    
  41fddc:	xlat   BYTE PTR ds:[ebx]
  41fddd:	dec    ebp
  41fdde:	cmc    
  41fddf:	out    dx,eax
  41fde0:	push   cs
  41fde1:	sbb    esp,DWORD PTR [esi]
  41fde3:	(bad)  
  41fde4:	xchg   edx,eax
  41fde5:	mov    ds:0x80431009,al
  41fdea:	pop    ebx
  41fdeb:	add    al,0x97
  41fded:	jmp    0xd7f50e62
  41fdf2:	fiadd  WORD PTR [edi-0x16]
  41fdf5:	push   0xbb85521a
  41fdfa:	(bad)  
  41fdfb:	(bad)  
  41fdfd:	inc    ebp
  41fdfe:	jecxz  0x41fde3
  41fe00:	rcr    BYTE PTR [ecx],1
  41fe02:	mov    esi,0xc5b577b8
  41fe07:	out    dx,eax
  41fe08:	jns    0x41fe6f
  41fe0a:	aam    0xdf
  41fe0c:	loopne 0x41fe37
  41fe0e:	retf   
  41fe0f:	ror    DWORD PTR [esi+0x6e],0x45
  41fe13:	loopne 0x41fdf0
  41fe15:	mov    eax,ds:0x2d18ba29
  41fe1a:	pop    esi
  41fe1b:	adc    al,0x26
  41fe1d:	mov    bl,0x75
  41fe1f:	push   0xffffffbb
  41fe21:	jl     0x41fe04
  41fe23:	mov    DWORD PTR [eax-0x4d7ff89f],ebx
  41fe29:	addr16 sub eax,0xec642b0f
  41fe2f:	jo     0x41fdea
  41fe31:	jnp    0x41fdc3
  41fe33:	test   DWORD PTR [ebp+0x3998a98f],eax
  41fe39:	and    dl,BYTE PTR [edx]
  41fe3b:	adc    eax,0x901c3a76
  41fe40:	jno    0x41fe89
  41fe42:	pop    edx
  41fe43:	pop    eax
  41fe44:	pop    ebp
  41fe45:	jb     0x41fe93
  41fe47:	jbe    0x41fe5a
  41fe49:	mov    BYTE PTR [ecx+0x26],ch
  41fe4c:	je     0x41fe26
  41fe4e:	out    dx,eax
  41fe4f:	pusha  
  41fe50:	fs inc edx
  41fe52:	int3   
  41fe53:	(bad)  
  41fe54:	rcr    BYTE PTR [edi],1
  41fe56:	push   ebp
  41fe57:	popf   
  41fe58:	push   ebp
  41fe59:	cmp    edi,eax
  41fe5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe5c:	dec    edx
  41fe5d:	ins    DWORD PTR es:[edi],dx
  41fe5e:	es scas eax,DWORD PTR es:[edi]
  41fe60:	cli    
  41fe61:	loop   0x41fe6f
  41fe63:	cli    
  41fe64:	ret    0x6d7b
  41fe67:	sbb    eax,0x7f74c255
  41fe6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe6d:	lea    ecx,[esi]
  41fe6f:	or     eax,0x4ad68a6a
  41fe74:	jmp    0x98e2330a
  41fe79:	inc    edi
  41fe7a:	dec    DWORD PTR [esi]
  41fe7c:	loop   0x41fe55
  41fe7e:	sbb    BYTE PTR ds:0xe8395ae5,dh
  41fe84:	(bad)  
  41fe85:	ficom  WORD PTR [ecx]
  41fe87:	sti    
  41fe88:	leave  
  41fe89:	dec    ebx
  41fe8a:	pushf  
  41fe8b:	mov    ds:0x13902120,eax
  41fe90:	fcomp  QWORD PTR [ecx+0x6b]
  41fe93:	cmp    DWORD PTR [ebp-0x221052d1],ebp
  41fe99:	arpl   WORD PTR [edx],si
  41fe9b:	in     eax,dx
  41fe9c:	retf   
  41fe9d:	and    eax,0xebb83cf2
  41fea2:	data16 mov bl,0x5e
  41fea5:	daa    
  41fea6:	add    eax,0x58c2fab5
  41feab:	xor    BYTE PTR [ebx+ebp*1-0x60ecfd41],ch
  41feb2:	push   edi
  41feb3:	mul    DWORD PTR [eax-0x59]
  41feb6:	pop    ecx
  41feb7:	fs dec ebx
  41feb9:	mov    esp,0x895479ca
  41febe:	call   0x7da783de
  41fec3:	lea    ecx,[ecx-0x4c07a61b]
  41fec9:	daa    
  41feca:	(bad)  
  41fecb:	dec    ebp
  41fecc:	cwde   
  41fecd:	xchg   ebx,eax
  41fece:	sub    DWORD PTR [edi+0x17],ecx
  41fed1:	dec    ebx
  41fed2:	mov    al,0x80
  41fed4:	and    ebx,DWORD PTR [edx+0x70]
  41fed7:	aam    0x38
  41fed9:	jno    0x41fe93
  41fedb:	xlat   BYTE PTR ds:[ebx]
  41fedc:	sbb    al,0x17
  41fede:	jge    0x41fef3
  41fee0:	(bad)  
  41fee2:	jb     0x41fed7
  41fee4:	adc    cl,dh
  41fee6:	in     eax,0xbe
  41fee8:	add    al,0x18
  41feea:	jo     0x41fefb
  41feec:	int3   
  41feed:	ja     0x41ff6d
  41feef:	cli    
  41fef0:	push   eax
  41fef1:	or     BYTE PTR [edi-0x59],cl
  41fef4:	ss xchg al,ah
  41fef7:	jno    0x41fed0
  41fef9:	push   esi
  41fefa:	xchg   esi,eax
  41fefb:	aad    0x73
  41fefd:	imul   ebp,DWORD PTR [edx+edx*4-0xd19d412],0xffffffff
  41ff05:	mov    bh,0x1c
  41ff07:	xchg   edx,eax
  41ff08:	out    dx,eax
  41ff09:	cmp    ebx,DWORD PTR [ecx+0x517e840e]
  41ff0f:	ins    DWORD PTR es:[edi],dx
  41ff10:	push   ds
  41ff11:	add    DWORD PTR [ecx+0x2e],edx
  41ff14:	ja     0x41ff2f
  41ff16:	or     edi,DWORD PTR [ecx+0x494aea35]
  41ff1c:	jp     0x41ff99
  41ff1e:	cs jg  0x41fee0
  41ff21:	add    ebx,esi
  41ff23:	xchg   esi,eax
  41ff24:	loopne 0x41ff34
  41ff26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff27:	add    esp,eax
  41ff29:	pusha  
  41ff2a:	cmp    bh,ch
  41ff2c:	or     ah,BYTE PTR [ecx-0x211afe80]
  41ff32:	test   BYTE PTR [ebp-0x67],ah
  41ff35:	call   0xd064c71a
  41ff3a:	mov    edi,0xc2a9d353
  41ff3f:	jno    0x41ff18
  41ff41:	dec    ebx
  41ff43:	xchg   edi,eax
  41ff44:	stos   DWORD PTR es:[edi],eax
  41ff45:	out    dx,al
  41ff46:	sbb    eax,0x3c227d35
  41ff4b:	lods   eax,DWORD PTR ds:[esi]
  41ff4c:	out    dx,al
  41ff4d:	sbb    edx,DWORD PTR ds:[edx-0xf]
  41ff51:	addr16 cmc 
  41ff53:	pop    ebp
  41ff54:	daa    
  41ff55:	imul   ebp,esp,0x7f766b7e
  41ff5b:	xor    DWORD PTR [esi-0x37],eax
  41ff5e:	cld    
  41ff5f:	cmc    
  41ff60:	jb     0x41ffb3
  41ff62:	dec    eax
  41ff63:	cmp    esi,DWORD PTR cs:[edx]
  41ff66:	add    edi,ebx
  41ff68:	adc    BYTE PTR [ebx+0x2c],bh
  41ff6b:	jge    0x41ff04
  41ff6d:	xlat   BYTE PTR ds:[ebx]
  41ff6e:	sahf   
  41ff6f:	dec    eax
  41ff70:	cmp    ch,ah
  41ff72:	push   0xbb7d9a1d
  41ff77:	test   DWORD PTR [edx],edx
  41ff79:	stc    
  41ff7a:	mov    DWORD PTR [ebp+0x70],ecx
  41ff7d:	lds    edi,FWORD PTR es:[ebx-0x3d]
  41ff81:	leave  
  41ff82:	dec    eax
  41ff83:	jmp    0xf07d:0xc28b7579
  41ff8a:	push   es
  41ff8b:	pop    ebx
  41ff8c:	xchg   edi,eax
  41ff8d:	loopne 0x41ffb2
  41ff8f:	lahf   
  41ff90:	mov    DWORD PTR [ebp*2-0x33567cf0],ebp
  41ff97:	xchg   edi,eax
  41ff98:	inc    edi
  41ff99:	push   ds
  41ff9a:	outs   dx,DWORD PTR ds:[esi]
  41ff9b:	hlt    
  41ff9c:	aaa    
  41ff9d:	dec    ebp
  41ff9e:	cmp    eax,0x18ef07c2
  41ffa3:	dec    esp
  41ffa4:	test   al,0x7a
  41ffa6:	mov    DWORD PTR [eax],edi
  41ffa8:	sub    al,0x75
  41ffaa:	cmp    cl,BYTE PTR [esi+0x777cd2b2]
  41ffb0:	mov    es,edx
  41ffb2:	loop   0x41ff8f
  41ffb4:	mov    cl,BYTE PTR [eax-0x6e7454d2]
  41ffba:	hlt    
  41ffbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffbc:	and    bl,0x1a
  41ffbf:	jg     0x41ff62
  41ffc1:	push   cs
  41ffc2:	sbb    dh,BYTE PTR [ebx+0x2f]
  41ffc5:	icebp  
  41ffc6:	pop    es
  41ffc7:	push   0x1
  41ffc9:	pop    ds
  41ffca:	push   esp
  41ffcb:	sub    ebp,DWORD PTR [ecx]
  41ffcd:	sub    dh,BYTE PTR [esi-0x5a]
  41ffd0:	and    BYTE PTR ds:0x76e6904f,cl
  41ffd6:	xlat   BYTE PTR ds:[ebx]
  41ffd7:	cli    
  41ffd8:	xlat   BYTE PTR ds:[ebx]
  41ffd9:	xchg   ebp,eax
  41ffda:	adc    eax,0x6456cc1d
  41ffdf:	pop    es
  41ffe0:	gs pop edi
  41ffe2:	cs aaa 
  41ffe4:	cdq    
  41ffe5:	sub    edx,DWORD PTR [ecx-0x49da80a]
  41ffeb:	call   0xa11f7c6a
  41fff0:	mov    cs,WORD PTR [ecx+0x28]
  41fff3:	sbb    al,0xc0
  41fff5:	test   BYTE PTR [ecx],ch
  41fff7:	mov    al,ds:0x2ab443d6
  41fffc:	inc    ebp
  41fffd:	scas   al,BYTE PTR es:[edi]
  41fffe:	pusha  
  41ffff:	push   ss
  420000:	pop    esi
  420001:	fs push ds
  420003:	jmp    0x874fc1a4
  420008:	sbb    cl,BYTE PTR [ecx-0x8b16674]
  42000e:	clc    
  42000f:	mov    ds:0xeafb04ec,al
  420014:	into   
  420015:	test   DWORD PTR [ebx+ecx*1],esp
  420018:	bound  edx,QWORD PTR [ecx-0x7a]
  42001b:	(bad)  
  42001c:	xlat   BYTE PTR ds:[ebx]
  42001d:	mov    ch,0x28
  42001f:	sti    
  420020:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420021:	add    BYTE PTR [edx-0x36a2c8d6],cl
  420027:	pop    esp
  420028:	push   es
  420029:	dec    ebx
  42002a:	ror    DWORD PTR [eax+edx*4+0x51],1
  42002e:	inc    ebx
  42002f:	ror    DWORD PTR [ebp+0x68a7648a],1
  420035:	shl    BYTE PTR [ecx+edx*8-0xce14e42],cl
  42003c:	dec    ecx
  42003d:	push   ss
  42003e:	scas   al,BYTE PTR es:[edi]
  42003f:	out    dx,al
  420040:	cdq    
  420041:	dec    DWORD PTR [edi]
  420043:	(bad)  
  420044:	stc    
  420045:	mov    dl,0x36
  420047:	or     dh,ch
  420049:	mov    bl,0xe5
  42004b:	into   
  42004c:	(bad)  
  42004d:	out    0xbd,eax
  42004f:	jne    0x4200c8
  420051:	push   eax
  420052:	ret    0xcc41
  420055:	call   0x75e4:0x5efe2d14
  42005c:	fs xchg edi,eax
  42005e:	dec    edi
  42005f:	xchg   edi,eax
  420060:	cdq    
  420061:	iret   
  420062:	mov    al,ds:0x6b03a946
  420067:	jnp    0x4200e4
  420069:	fwait
  42006a:	call   DWORD PTR [esi]
  42006c:	mov    WORD PTR [ecx+0x59],gs
  42006f:	dec    eax
  420070:	loop   0x41fff8
  420072:	rcl    DWORD PTR [ebp-0x7618543b],1
  420078:	cdq    
  420079:	xchg   ebx,eax
  42007a:	and    ebx,esi
  42007c:	idiv   DWORD PTR ds:0xd35ea94a
  420082:	push   es
  420083:	sbb    edi,DWORD PTR [ecx-0x61b33f28]
  420089:	mov    ebx,DWORD PTR [ebx+0x528fde08]
  42008f:	xchg   esi,eax
  420090:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420091:	mov    al,0x48
  420093:	or     BYTE PTR [ebp+0x7a],cl
  420096:	clc    
  420097:	out    dx,al
  420098:	loope  0x42005b
  42009a:	add    al,0x5b
  42009c:	mov    esp,0x6e054684
  4200a1:	jno    0x42007e
  4200a3:	xor    esp,eax
  4200a5:	mov    ebp,0x6753a403
  4200aa:	mov    dh,0x7f
  4200ac:	push   ss
  4200ad:	iret   
  4200ae:	ins    BYTE PTR es:[edi],dx
  4200af:	xchg   ebx,eax
  4200b0:	pushw  0x5b80
  4200b4:	jle    0x420100
  4200b6:	sub    ebp,DWORD PTR [edi]
  4200b8:	jg     0x420083
  4200ba:	shl    ah,cl
  4200bc:	cmp    BYTE PTR [ecx+0x5b3cf31b],al
  4200c2:	jp     0x420139
  4200c4:	jmp    DWORD PTR [esi]
  4200c6:	fstp   TBYTE PTR [ebp+0x69]
  4200c9:	dec    edi
  4200ca:	jle    0x420072
  4200cc:	outs   dx,BYTE PTR ds:[esi]
  4200cd:	(bad)  
  4200ce:	shl    esp,cl
  4200d0:	jmp    0xfa30a6fb
  4200d5:	lahf   
  4200d6:	jbe    0x420084
  4200d8:	dec    esi
  4200d9:	arpl   sp,di
  4200db:	jae    0x42013e
  4200dd:	hlt    
  4200de:	xchg   edi,eax
  4200df:	(bad)  
  4200e0:	in     al,dx
  4200e1:	sti    
  4200e2:	xor    al,0x49
  4200e4:	jb     0x4200e8
  4200e6:	jbe    0x420129
  4200e8:	out    0x70,al
  4200ea:	push   edi
  4200eb:	mov    al,0x1a
  4200ed:	sub    esp,ebp
  4200ef:	call   FWORD PTR ds:0x37b3e161
  4200f5:	push   esi
  4200f6:	scas   eax,DWORD PTR es:[edi]
  4200f7:	xchg   ecx,eax
  4200f8:	dec    eax
  4200f9:	adc    DWORD PTR [eax+0x12804f88],eax
  4200ff:	sub    DWORD PTR [ebp+edx*2-0x4b],esi
  420103:	int3   
  420104:	mov    dl,0x33
  420106:	adc    ecx,ebp
  420108:	das    
  420109:	enter  0x6144,0x98
  42010d:	int3   
  42010e:	jle    0x42017c
  420110:	icebp  
  420111:	mov    ebx,0xaa721935
  420116:	jbe    0x420106
  420118:	or     DWORD PTR [eax-0x69],edi
  42011b:	xor    eax,0x649a4ba7
  420120:	sahf   
  420121:	sub    eax,0x16c54165
  420126:	retf   
  420127:	jp     0x42015e
  420129:	inc    ebp
  42012a:	cmp    DWORD PTR [edx],esp
  42012c:	push   0xfa8e6b43
  420131:	out    0x8b,eax
  420133:	xor    ebx,eax
  420135:	pop    ss
  420136:	sub    DWORD PTR [edx+edx*4],esp
  420139:	(bad)  
  42013a:	cli    
  42013b:	mov    edx,0x725b041c
  420140:	push   ecx
  420141:	lea    ebx,[esi]
  420143:	div    DWORD PTR ds:0x6ec767fd
  420149:	add    DWORD PTR [edi-0x799f6566],esi
  42014f:	daa    
  420150:	mov    dl,0xe2
  420152:	(bad)  
  420153:	sbb    bl,BYTE PTR [esi+0x38]
  420156:	push   ss
  420157:	retf   
  420158:	mov    bl,0xf0
  42015a:	jbe    0x42013d
  42015c:	and    al,0x11
  42015e:	(bad)  
  42015f:	in     eax,dx
  420160:	jb     0x4201a2
  420162:	sub    ecx,DWORD PTR [esi-0x7]
  420165:	fnstcw WORD PTR [ebx-0x454b42a2]
  42016b:	shl    BYTE PTR [esi],cl
  42016d:	fnstenv [edx]
  42016f:	hlt    
  420170:	push   ecx
  420171:	pop    edi
  420172:	sub    BYTE PTR gs:[edi+eiz*4-0x5f090f1a],bh
  42017a:	fimul  WORD PTR [ebp+0x19c1c8f2]
  420180:	pop    esp
  420181:	adc    ebx,DWORD PTR [ebp+0x15]
  420184:	mov    ebp,0x122623b6
  420189:	cmp    al,0xa6
  42018b:	xchg   ecx,eax
  42018c:	test   BYTE PTR ds:0xc81af864,cl
  420192:	lahf   
  420193:	lea    ecx,[esi+edx*8-0x5c6ca4e1]
  42019a:	cmp    dl,BYTE PTR [ebx-0x5]
  42019d:	pusha  
  42019e:	mov    bl,0x9c
  4201a0:	mov    ebp,0x1b22e726
  4201a5:	cmc    
  4201a6:	ins    BYTE PTR es:[edi],dx
  4201a7:	dec    eax
  4201a8:	xchg   ebp,eax
  4201a9:	ficom  WORD PTR [esi+eax*4-0x5ed6b211]
  4201b0:	dec    eax
  4201b1:	xor    eax,0x70c1d86f
  4201b6:	mov    eax,ds:0x6759abc3
  4201bb:	mov    ah,BYTE PTR [edi-0x3ab9214e]
  4201c1:	cmc    
  4201c2:	sub    cl,0x91
  4201c5:	sar    bl,0xc1
  4201c8:	fist   DWORD PTR [ebx]
  4201ca:	fst    QWORD PTR [esi-0x520312f1]
  4201d0:	inc    esi
  4201d1:	and    DWORD PTR [eax-0x31],esp
  4201d4:	add    eax,edx
  4201d6:	ins    DWORD PTR es:[edi],dx
  4201d7:	inc    ebx
  4201d8:	jmp    0xe053f422
  4201dd:	aam    0x6
  4201df:	mov    al,ds:0xa193b969
  4201e4:	cli    
  4201e5:	cmp    eax,0xdbab319e
  4201ea:	arpl   WORD PTR [ebp-0x67],dx
  4201ed:	mov    ds:0x884d6f42,eax
  4201f2:	push   esp
  4201f3:	xchg   edi,eax
  4201f4:	aam    0xc
  4201f6:	div    DWORD PTR [ebp-0x68]
  4201f9:	adc    al,0x5d
  4201fb:	lahf   
  4201fc:	int3   
  4201fd:	and    edx,esp
  4201ff:	inc    eax
  420200:	push   ss
  420201:	dec    eax
  420202:	dec    ebx
  420203:	or     dh,BYTE PTR [ecx-0x72]
  420206:	int3   
  420207:	sub    BYTE PTR [eax+0x1e],dh
  42020a:	(bad)  
  42020b:	jmp    0xb3716b8a
  420210:	pop    es
  420211:	shl    BYTE PTR [ebx+0x1f635ea1],0x53
  420218:	(bad)  
  420219:	enter  0x4fb6,0x10
  42021d:	aas    
  42021e:	push   0x5c
  420220:	mov    eax,ds:0x6092f417
  420225:	and    eax,0x3b31f75a
  42022a:	iret   
  42022b:	inc    eax
  42022c:	mov    WORD PTR [ebp-0x8],?
  42022f:	call   0x7cdf:0xe0f6a10e
  420236:	xor    al,0x4b
  420238:	sub    bh,BYTE PTR [eiz*1+0x64747ab0]
  42023f:	iret   
  420240:	push   es
  420241:	lock mov al,0x61
  420244:	hlt    
  420245:	arpl   WORD PTR ds:[edi+0x44],di
  420249:	adc    eax,0x3a12aeec
  42024e:	or     DWORD PTR [edx+0x26],ebp
  420251:	adc    ecx,DWORD PTR [ebp-0x32]
  420254:	imul   ecx,DWORD PTR [ebx+0x3f],0x3e06049b
  42025b:	ret    0xf32b
  42025e:	repz xor al,0x8
  420261:	mov    esi,0xa9ea415f
  420266:	xchg   al,dl
  420268:	mov    ebx,0x2e00e131
  42026d:	lods   al,BYTE PTR ds:[esi]
  42026e:	push   cs
  42026f:	sbb    ebx,DWORD PTR [esi+0x68]
  420272:	sar    BYTE PTR [eax],cl
  420274:	or     DWORD PTR [esp+ebp*4],0x3eb84d0f
  42027b:	dec    edx
  42027c:	sbb    eax,0xac993d3b
  420281:	sbb    ebx,ecx
  420283:	mov    BYTE PTR [ebp+0x51ee5e8d],0xe2
  42028a:	ficom  DWORD PTR [edi]
  42028c:	data16 loopne 0x4202d7
  42028f:	mov    ds:0xea210461,eax
  420294:	cwde   
  420295:	cmc    
  420296:	inc    ebx
  420297:	push   esi
  420298:	and    BYTE PTR [ebx+0x1e],al
  42029b:	and    esp,DWORD PTR [eax]
  42029d:	inc    ecx
  42029e:	pop    edx
  42029f:	inc    ebp
  4202a0:	cwde   
  4202a1:	fiadd  DWORD PTR [ecx+eax*4]
  4202a4:	mov    eax,0x7ecaa84d
  4202a9:	hlt    
  4202aa:	int3   
  4202ab:	cmp    al,0x9c
  4202ad:	mov    esp,0x8b529818
  4202b2:	sub    eax,0xd5f6b7e0
  4202b7:	cdq    
  4202b8:	inc    edx
  4202b9:	xchg   BYTE PTR [esp+ecx*4],bh
  4202bc:	jge    0x420313
  4202be:	outs   dx,DWORD PTR ds:[esi]
  4202bf:	xor    esp,DWORD PTR ds:0x7ecb84f6
  4202c5:	dec    edi
  4202c6:	pop    ebp
  4202c7:	cmp    al,0x2e
  4202c9:	xor    BYTE PTR [edx],bl
  4202cb:	mov    ebx,0xf9786129
  4202d0:	(bad)  
  4202d1:	pop    esi
  4202d2:	jmp    0xe1dd2301
  4202d7:	lock repnz cmps DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4202db:	xchg   BYTE PTR [eax],ah
  4202dd:	xlat   BYTE PTR ds:[ebx]
  4202de:	repnz sub eax,0x46f38022
  4202e4:	enter  0x2bab,0xf
  4202e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202e9:	mov    BYTE PTR ds:0x5ed1b16a,al
  4202ef:	ret    
  4202f0:	mov    bh,0xa0
  4202f2:	dec    ebx
  4202f3:	stc    
  4202f4:	mov    bl,0x61
  4202f6:	mov    WORD PTR [edi],gs
  4202f8:	iret   
  4202f9:	mov    WORD PTR [edi+0x54699f17],?
  4202ff:	popa   
  420300:	cmp    bl,BYTE PTR [eax+ecx*1+0x51]
  420304:	dec    ecx
  420305:	and    ecx,DWORD PTR [edi+0x28]
  420308:	mov    ebx,0x65a2ac6c
  42030d:	fs fcmovnb st,st(4)
  420310:	jp     0x420307
  420312:	(bad)  
  420313:	popf   
  420314:	mov    cl,0x8c
  420316:	repz push esp
  420318:	out    dx,al
  420319:	or     BYTE PTR [edx+esi*8+0x69],0x44
  42031e:	ss sbb al,0x3a
  420321:	sbb    BYTE PTR [edx+0x5097dd18],cl
  420327:	ja     0x420321
  420329:	xchg   DWORD PTR [edi+0x25],ecx
  42032c:	pop    edx
  42032d:	push   edx
  42032e:	sahf   
  42032f:	clc    
  420330:	daa    
  420331:	shl    dh,0x20
  420334:	mov    al,ds:0xd7d50fc0
  420339:	inc    esi
  42033a:	mov    WORD PTR [ebp-0x6b],fs
  42033d:	je     0x4202f9
  42033f:	sti    
  420340:	adc    eax,0x1fbeb766
  420345:	sub    esp,ecx
  420347:	push   esp
  420348:	or     ebx,DWORD PTR ds:0x746d7cab
  42034e:	sub    DWORD PTR [ebx+0x42],esp
  420351:	cmp    eax,0x2a8df97f
  420356:	push   esi
  420357:	imul   ebp,DWORD PTR ds:0x3b24a6a2,0x710edf18
  420361:	pop    edx
  420362:	fimul  DWORD PTR [eiz*1+0x62c172dc]
  420369:	pusha  
  42036a:	and    BYTE PTR [ebx],bh
  42036c:	or     BYTE PTR [edi],cl
  42036e:	jb     0x42033c
  420370:	inc    esi
  420371:	enter  0xc121,0x54
  420375:	adc    WORD PTR [ebp+0x6],di
  420379:	push   es
  42037a:	dec    ebp
  42037b:	call   0xee18:0x79548c67
  420382:	pop    eax
  420383:	mov    al,ds:0x8168d0a9
  420388:	sbb    edx,DWORD PTR [eax]
  42038a:	push   es
  42038b:	mov    bh,0x24
  42038d:	jbe    0x42033f
  42038f:	jne    0x42034e
  420391:	sbb    eax,0x62167462
  420396:	xchg   edi,eax
  420397:	pusha  
  420398:	fadd   st(0),st
  42039a:	add    al,dh
  42039c:	sbb    eax,0x640cf4ee
  4203a1:	pop    ecx
  4203a2:	xchg   edx,eax
  4203a3:	out    dx,al
  4203a4:	in     al,dx
  4203a5:	cmp    ch,BYTE PTR [ecx-0x18]
  4203a8:	repz out 0x89,eax
  4203ab:	ds aad 0x0
  4203ae:	pushf  
  4203af:	lahf   
  4203b0:	icebp  
  4203b1:	jno    0x42041a
  4203b3:	int3   
  4203b4:	jnp    0x420345
  4203b6:	ficomp WORD PTR [eax+0x6586957b]
  4203bc:	or     dh,BYTE PTR [ecx]
  4203be:	add    eax,0x4cbcb93e
  4203c3:	outs   dx,BYTE PTR ds:[esi]
  4203c4:	iret   
  4203c5:	pop    ss
  4203c6:	sub    eax,0xfa197264
  4203cb:	cmp    al,cl
  4203cd:	push   ebx
  4203ce:	test   BYTE PTR [esi+0x4b],ch
  4203d1:	mov    db1,ebx
  4203d4:	sbb    dl,BYTE PTR [ebx]
  4203d6:	aas    
  4203d7:	outs   dx,DWORD PTR ss:[esi]
  4203d9:	loop   0x4203ec
  4203db:	jae    0x420365
  4203dd:	and    DWORD PTR [edx],ebx
  4203df:	(bad)  
  4203e0:	adc    edx,DWORD PTR gs:[edx]
  4203e3:	call   0x6a7d:0x5389d2c7
  4203ea:	or     al,0xc0
  4203ed:	or     BYTE PTR [ebp+0x5e],bl
  4203f0:	mov    ds:0xa67e6e1c,al
  4203f5:	mov    cl,BYTE PTR [ebp-0x43b7fc2c]
  4203fb:	js     0x420405
  4203fd:	mov    ecx,0x2ac540a2
  420402:	xor    al,0x16
  420404:	or     al,0x41
  420406:	pop    ebx
  420407:	dec    eax
  420408:	fistp  WORD PTR [edx+0x18]
  42040b:	add    al,0xfc
  42040d:	iret   
  42040e:	loope  0x42047d
  420410:	retf   
  420411:	jge    0x420428
  420413:	pop    edx
  420414:	xchg   edx,eax
  420415:	je     0x4203be
  420417:	fld    QWORD PTR [eax+0x6ab4e293]
  42041d:	and    al,0x9e
  42041f:	das    
  420420:	lock push ss
  420422:	jae    0x42044e
  420424:	xor    BYTE PTR ds:0x21d8c251,0x13
  42042b:	lea    ecx,[edx+0x59]
  42042e:	mov    ebx,0x77e5c55d
  420433:	iret   
  420434:	add    ch,bl
  420436:	idiv   BYTE PTR [ebp+0x6a2c5108]
  42043c:	add    BYTE PTR ds:0xc14b820a,bl
  420442:	mov    eax,0x1c77b6af
  420447:	aaa    
  420448:	add    dl,ah
  42044a:	mov    ebp,?
  42044c:	lds    edx,FWORD PTR [eax+ecx*2]
  42044f:	data16 jle 0x42044a
  420452:	mov    dh,0x89
  420454:	pop    edi
  420455:	jp     0x420425
  420457:	stos   DWORD PTR es:[edi],eax
  420458:	mov    ebp,0x56ab3fb0
  42045d:	test   BYTE PTR [ebx-0x62],0x36
  420461:	leave  
  420462:	xchg   ecx,eax
  420463:	gs xchg esi,eax
  420465:	mov    ah,0xea
  420467:	pop    ss
  420468:	mov    ebx,0xa5592bef
  42046d:	stc    
  42046e:	sub    edi,DWORD PTR [ebx]
  420470:	or     eax,0x5ece187b
  420475:	loope  0x420479
  420477:	jg     0x420405
  420479:	cmp    DWORD PTR [ebp-0x79],ebp
  42047c:	cmp    al,0x8b
  42047e:	adc    ecx,DWORD PTR [edx]
  420480:	sbb    BYTE PTR [edi+0x24],dl
  420483:	or     BYTE PTR [ebx+0x42],ah
  420486:	dec    edx
  420487:	mov    esp,0x101e2437
  42048c:	outs   dx,DWORD PTR ds:[esi]
  42048d:	cmp    eax,0x803d22f3
  420492:	mov    cl,0x80
  420494:	je     0x420439
  420496:	lods   eax,DWORD PTR ds:[esi]
  420497:	adc    esp,esp
  420499:	pop    edx
  42049a:	xlat   BYTE PTR ds:[ebx]
  42049b:	sti    
  42049c:	xchg   ecx,eax
  42049d:	stc    
  42049e:	out    0x59,eax
  4204a0:	pushf  
  4204a1:	fisub  DWORD PTR [ebx-0xf]
  4204a4:	jno    0x4204ed
  4204a6:	mov    cl,0xbb
  4204a8:	fmul   QWORD PTR [ecx+0x10]
  4204ab:	and    dl,0x34
  4204ae:	or     al,0x9c
  4204b0:	lahf   
  4204b1:	in     al,0xb0
  4204b3:	std    
  4204b4:	icebp  
  4204b5:	sbb    al,0xa5
  4204b7:	mov    ch,BYTE PTR [ecx]
  4204b9:	or     dl,BYTE PTR [eax]
  4204bb:	push   ebx
  4204bc:	sahf   
  4204bd:	dec    esp
  4204be:	xor    eax,0x5fb295e7
  4204c3:	mov    cl,0x28
  4204c5:	cmp    edx,DWORD PTR [ebx]
  4204c7:	xchg   ebp,eax
  4204c8:	sbb    BYTE PTR [edx+0x7c],ah
  4204cb:	scas   eax,DWORD PTR es:[edi]
  4204cc:	mov    WORD PTR [edi+0x6b],ds
  4204cf:	ror    DWORD PTR [edx],0x3c
  4204d2:	push   ds
  4204d3:	into   
  4204d4:	dec    edx
  4204d5:	jg     0x420480
  4204d7:	cmp    eax,0x4cb81cbc
  4204dc:	repnz cmp eax,0xc572df05
  4204e2:	and    bl,0x9c
  4204e5:	fcomp  DWORD PTR [esi+0x69]
  4204e8:	inc    ebx
  4204e9:	pop    edx
  4204ea:	(bad)  
  4204eb:	nop
  4204ec:	call   0x8c89:0x4e8b2b42
  4204f3:	mov    dl,0xb4
  4204f5:	ret    0xb56d
  4204f8:	mul    DWORD PTR [edx+0x58]
  4204fb:	aas    
  4204fc:	js     0x4204e7
  4204fe:	pop    esp
  4204ff:	add    al,0x75
  420501:	mov    eax,ds:0x98bcf98d
  420506:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420507:	(bad)  
  420508:	pop    ss
  420509:	sub    ah,bl
  42050b:	fisttp QWORD PTR [ebp+esi*8+0x7c]
  42050f:	xchg   edx,eax
  420510:	icebp  
  420511:	cdq    
  420512:	sar    dl,cl
  420514:	xchg   esi,eax
  420515:	daa    
  420516:	rol    DWORD PTR ds:0x8650258f,1
  42051c:	or     BYTE PTR [ecx+0x74],cl
  42051f:	icebp  
  420520:	xchg   esp,eax
  420521:	sub    bh,al
  420523:	popa   
  420524:	js     0x42051c
  420526:	inc    esp
  420527:	fild   DWORD PTR [ecx]
  420529:	popa   
  42052a:	mov    BYTE PTR [ebx],bl
  42052c:	push   eax
  42052d:	outs   dx,DWORD PTR ds:[esi]
  42052e:	push   esp
  42052f:	mov    dl,BYTE PTR [eax]
  420531:	push   eax
  420532:	xor    edx,DWORD PTR [edi-0x2e4eba93]
  420538:	out    dx,al
  420539:	mov    esi,0x776b2985
  42053e:	mov    ecx,0x1796b08
  420543:	leave  
  420544:	mov    ebp,0xace4e50f
  420549:	mov    cl,0x90
  42054b:	or     ecx,DWORD PTR [ecx-0x66]
  42054e:	fstp   QWORD PTR [esi]
  420550:	jge    0x420561
  420552:	jae    0x420582
  420554:	push   ebx
  420555:	cmp    BYTE PTR [edi+0x744f0687],al
  42055b:	pop    edx
  42055c:	scas   al,BYTE PTR es:[edi]
  42055d:	cmp    eax,0x71e0c741
  420562:	test   al,0x3c
  420564:	add    eax,0x8bd09316
  420569:	scas   eax,DWORD PTR es:[edi]
  42056a:	das    
  42056b:	pushf  
  42056c:	add    DWORD PTR [edi+0x2deaa116],ecx
  420572:	jns    0x42057e
  420574:	sub    BYTE PTR [edx+0x34],0xe3
  420578:	ret    
  420579:	(bad)  
  42057b:	pop    ds
  42057c:	cmp    al,0x28
  42057e:	das    
  42057f:	bound  ecx,QWORD PTR [edi]
  420581:	mov    bl,BYTE PTR [ecx+0x3f78de4b]
  420587:	mov    ch,0x12
  420589:	mov    edx,0xee3247f0
  42058e:	addr16 gs push ebx
  420591:	int3   
  420592:	pop    eax
  420593:	imul   ebp,DWORD PTR [ecx],0xffffffa3
  420596:	test   al,0xb7
  420598:	dec    ebp
  420599:	pop    ds
  42059a:	neg    BYTE PTR [ecx]
  42059c:	mov    ch,0xbe
  42059e:	outs   dx,DWORD PTR ds:[esi]
  42059f:	jo     0x420591
  4205a1:	jbe    0x4205db
  4205a3:	mov    eax,ds:0xe399db6b
  4205a8:	and    ebx,DWORD PTR [eax]
  4205aa:	rol    DWORD PTR [bp+si],1
  4205ad:	ror    DWORD PTR [esi-0x12],1
  4205b0:	sub    eax,DWORD PTR [eax+0x1d]
  4205b3:	sbb    BYTE PTR [eax],ah
  4205b5:	arpl   WORD PTR [ebx+esi*2+0x46],dx
  4205b9:	pop    ds
  4205ba:	cdq    
  4205bb:	mov    ebp,0x633cabcb
  4205c0:	or     eax,0xd119e71
  4205c5:	leave  
  4205c6:	push   edx
  4205c7:	psubusb mm0,mm0
  4205ca:	ins    DWORD PTR es:[edi],dx
  4205cb:	in     al,dx
  4205cc:	enter  0x795f,0x8a
  4205d0:	mov    ds:0x9be6eaf2,al
  4205d5:	pop    esp
  4205d6:	and    DWORD PTR [edi+0x6b061ccf],edx
  4205dc:	push   0x56bc5fb
  4205e1:	shl    DWORD PTR [ecx],cl
  4205e3:	call   0x7fd1:0xfc1af1f9
  4205ea:	dec    eax
  4205eb:	in     eax,dx
  4205ec:	imul   ebp,esp,0xe617cc7e
  4205f2:	sub    DWORD PTR [ebx+0x6],ecx
  4205f5:	mov    dh,0x98
  4205f7:	les    ecx,FWORD PTR [ebx+0x4c]
  4205fa:	daa    
  4205fb:	shld   ebp,edx,cl
  4205fe:	or     BYTE PTR [ebp-0x71],0xd4
  420602:	retf   0xf9d2
  420605:	mov    esi,0x401a18db
  42060a:	xchg   DWORD PTR [edx],ebp
  42060c:	inc    edi
  42060d:	fmul   QWORD PTR [ebp+eax*1+0x3d2b6372]
  420614:	xchg   edx,eax
  420615:	(bad)  
  420616:	lods   eax,DWORD PTR ds:[esi]
  420617:	cmp    cl,BYTE PTR [edi+ecx*2]
  42061a:	dec    eax
  42061b:	and    BYTE PTR [ebp-0x11b80a4b],0xf0
  420622:	sbb    BYTE PTR [esi],0x81
  420625:	sbb    esi,DWORD PTR [edi]
  420627:	fnstsw WORD PTR [ebp+0x76]
  42062a:	pop    edx
  42062b:	shl    dl,cl
  42062d:	inc    esp
  42062e:	inc    edx
  42062f:	scas   eax,DWORD PTR es:[edi]
  420630:	fisttp DWORD PTR [ebx+0x6c]
  420633:	adc    bl,BYTE PTR [esi+0x32e11ad6]
  420639:	xchg   ebp,eax
  42063a:	fadd   DWORD PTR [edx-0x69]
  42063d:	adc    eax,0x71cffacb
  420642:	pop    edi
  420643:	(bad)  
  420645:	ret    0x9b47
  420648:	mov    cl,0x82
  42064a:	sbb    DWORD PTR [esi],esi
  42064c:	xor    eax,0x75367de7
  420651:	hlt    
  420652:	xor    eax,0xd201e371
  420657:	popf   
  420658:	cmp    DWORD PTR [ebp-0x10e693fe],esi
  42065e:	xchg   edx,eax
  42065f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420660:	cmc    
  420661:	jno    0x420618
  420663:	xor    eax,0x6b9b99ee
  420668:	xchg   esi,eax
  420669:	sbb    ebx,ebx
  42066b:	(bad)  
  42066c:	in     al,dx
  42066d:	push   eax
  42066e:	je     0x420684
  420670:	es and ch,cl
  420673:	fwait
  420674:	aas    
  420675:	sti    
  420676:	or     bh,BYTE PTR [eax+0x28]
  420679:	ret    
  42067a:	and    BYTE PTR [ecx],dh
  42067c:	mov    dh,0x81
  42067e:	mov    al,ds:0x5efdc336
  420683:	stos   BYTE PTR es:[edi],al
  420684:	dec    ebp
  420685:	(bad)  
  420686:	xor    al,0x64
  420688:	jge    0x4206a1
  42068a:	imul   ebp,esi,0xffffff88
  42068d:	sbb    BYTE PTR [ebx-0x2e5f82bf],dh
  420693:	push   ds
  420694:	out    dx,eax
  420695:	push   esi
  420696:	jecxz  0x4206ae
  420698:	cmc    
  420699:	push   es
  42069a:	bound  ecx,QWORD PTR [esi+0xf37fdb8]
  4206a0:	sbb    al,0xcd
  4206a2:	jg     0x4206cc
  4206a4:	nop
  4206a5:	enter  0x3cf,0xc5
  4206a9:	push   es
  4206aa:	cwde   
  4206ab:	jmp    0x42072b
  4206ad:	and    dh,BYTE PTR [edi+edi*1]
  4206b0:	and    DWORD PTR [edx],0x50815775
  4206b6:	pushf  
  4206b7:	dec    edi
  4206b8:	and    DWORD PTR [eax+0x75fa4fe7],ebp
  4206be:	jmp    0x9261:0x5fc86b53
  4206c5:	push   eax
  4206c6:	shl    DWORD PTR [edx+0x6e4bedd8],1
  4206cc:	or     DWORD PTR [ebx+0x1fc519d6],0xb48215d5
  4206d6:	and    DWORD PTR [ebp+0x3e],ebx
  4206d9:	lea    esi,[esp+esi*8]
  4206dc:	sub    dh,ch
  4206de:	xchg   ecx,eax
  4206df:	ins    DWORD PTR es:[edi],dx
  4206e0:	mov    ebp,0xebabdfc8
  4206e5:	pop    esp
  4206e6:	push   edx
  4206e7:	adc    BYTE PTR [eax],bh
  4206e9:	in     eax,dx
  4206ea:	test   BYTE PTR [esi-0x3716dd26],bl
  4206f0:	pop    esp
  4206f1:	mov    dl,0x31
  4206f3:	fs scas eax,DWORD PTR es:[edi]
  4206f5:	lods   al,BYTE PTR ds:[esi]
  4206f6:	cwde   
  4206f7:	jne    0x4206e7
  4206f9:	out    dx,al
  4206fa:	mov    ecx,0xf261df94
  4206ff:	(bad)  
  420700:	in     al,dx
  420701:	call   0xc145:0x6c381c91
  420708:	xchg   ebx,eax
  420709:	sub    DWORD PTR gs:[edx-0x2d],edi
  42070d:	mov    dh,0xd6
  42070f:	fdivr  DWORD PTR [edi-0x54]
  420712:	lods   eax,DWORD PTR ds:[esi]
  420713:	mov    bh,0x4e
  420715:	repz mov edx,0x9c945cd
  42071b:	and    al,0x6b
  42071d:	mov    ah,0xbe
  42071f:	xor    eax,0xb5ed13f9
  420724:	mov    ds:0x5ef42306,al
  420729:	jmp    0x5e94:0x4beaf91c
  420730:	inc    edi
  420731:	push   edi
  420732:	sub    DWORD PTR ss:[ecx],ecx
  420735:	mov    edi,DWORD PTR [esi]
  420737:	in     eax,dx
  420738:	xor    bh,dh
  42073a:	js     0x42075d
  42073c:	jb     0x42073c
  42073e:	fadd   QWORD PTR [ecx-0x79b228eb]
  420744:	loop   0x4206de
  420746:	dec    edx
  420747:	dec    edx
  420748:	mov    al,0xda
  42074a:	dec    esp
  42074b:	mov    ecx,0xbb801022
  420750:	mov    ecx,DWORD PTR [ebp-0x60efc778]
  420756:	fsub   DWORD PTR [ecx-0x5bd6fd2f]
  42075c:	fwait
  42075d:	and    dl,al
  42075f:	dec    ebp
  420760:	add    eax,DWORD PTR [eax-0x6e]
  420763:	dec    edx
  420764:	(bad)  
  420765:	xlat   BYTE PTR ds:[ebx]
  420766:	mov    DWORD PTR [eax-0x1c3826b5],esi
  42076c:	dec    esi
  42076d:	add    BYTE PTR [eax+0x43],cl
  420770:	dec    edi
  420771:	sbb    edi,ecx
  420773:	sbb    DWORD PTR [esi-0x53],ebx
  420776:	cli    
  420777:	mov    ebx,0x74a69874
  42077c:	test   DWORD PTR [edx+0x7b0f7a3f],ecx
  420782:	imul   edx,DWORD PTR [edx],0x1b0ee5a
  420788:	push   es
  420789:	aas    
  42078a:	popa   
  42078b:	fsubp  st(3),st
  42078d:	shl    DWORD PTR [edx-0x3efc8cb3],1
  420793:	mov    DWORD PTR [ebp-0x14],eax
  420796:	mov    eax,DWORD PTR [ebp-0x14]
  420799:	mov    eax,DWORD PTR [eax+0xc]
  42079c:	movsx  eax,BYTE PTR [eax+ecx*1]
  4207a0:	cdq    
  4207a1:	add    eax,ebx
  4207a3:	adc    edx,0xffffffff
  4207a6:	xor    eax,edi
  4207a8:	xor    edx,0x0
  4207ab:	cmp    eax,0x70941e1e
  4207b0:	jne    0x41e3c0
  4207b6:	cmp    edx,0xffffffff
  4207b9:	jne    0x41e3c0
  4207bf:	mov    eax,ds:0x42830b
  4207c4:	mov    eax,DWORD PTR [eax+0x198]
  4207ca:	mov    DWORD PTR [eax],ecx
  4207cc:	mov    eax,ecx
  4207ce:	jmp    0x4207f7
  4207d3:	mov    eax,DWORD PTR [ebp+0x18]
  4207d6:	cmp    eax,0xf89c85a2
  4207db:	jne    0x4207f7
  4207e1:	push   0xf89c85a3
  4207e6:	push   DWORD PTR [ebp+0x14]
  4207e9:	push   DWORD PTR [ebp+0x10]
  4207ec:	push   DWORD PTR [ebp+0xc]
  4207ef:	push   DWORD PTR [ebp+0x8]
  4207f2:	call   0x41b9fd
  4207f7:	pop    edi
  4207f8:	pop    ebx
  4207f9:	pop    esi
  4207fa:	leave  
  4207fb:	ret    0x14
  4207fe:	push   ebp
  4207ff:	mov    ebp,esp
  420801:	and    esp,0xfffffff8
  420804:	or     DWORD PTR ds:0x42918f,0x225c
  42080e:	sub    esp,0x3fc
  420814:	sbb    DWORD PTR ds:0x4291a7,0x4291f3
  42081e:	push   ebx
  42081f:	push   esi
  420820:	push   edi
  420821:	and    DWORD PTR ds:0x42915f,0x397e
  42082b:	push   0x42842f
  420830:	or     DWORD PTR ds:0x4291af,0x2ff8
  42083a:	push   0x7876867
  42083f:	or     DWORD PTR ds:0x4291b7,0x20a1
  420849:	call   DWORD PTR ds:0x42a54b
  42084f:	sub    DWORD PTR ds:0x42915f,0x5681
  420859:	mov    DWORD PTR [esp+0x30],eax
  42085d:	lea    eax,[esp+0x78]
  420861:	push   eax
  420862:	sub    DWORD PTR ds:0x42919b,0x4291d3
  42086c:	push   0x428447
  420871:	mov    DWORD PTR ds:0x4291e3,0x3a46
  42087b:	call   DWORD PTR ds:0x42a56b
  420881:	cmp    eax,0xffffffff
  420884:	je     0x42089b
  42088a:	xor    DWORD PTR ds:0x42915f,0x150a
  420894:	xor    eax,eax
  420896:	jmp    0x421b36
  42089b:	mov    esi,DWORD PTR ds:0x42a587
  4208a1:	xor    DWORD PTR ds:0x4291d3,0x3930
  4208ab:	push   0xf
  4208ad:	lea    eax,[esp+0x44]
  4208b1:	push   eax
  4208b2:	push   0x42845b
  4208b7:	push   0x42846f
  4208bc:	sub    DWORD PTR ds:0x42915f,0x4291d7
  4208c6:	push   0x42848f
  4208cb:	adc    DWORD PTR ds:0x429183,0x3c8a
  4208d5:	call   esi
  4208d7:	imul   eax,eax,0x300000
  4208dd:	cmp    eax,0x1b00000
  4208e2:	mov    DWORD PTR ds:0x4291bf,0x78b4
  4208ec:	jne    0x42088a
  4208f2:	or     DWORD PTR ds:0x4291b3,0x42915b
  4208fc:	lea    eax,[esp+0x1b8]
  420903:	and    DWORD PTR ds:0x42919f,0x5d3c
  42090d:	push   eax
  42090e:	add    DWORD PTR ds:0x4291e3,0x4291af
  420918:	push   0x4284cb
  42091d:	and    DWORD PTR ds:0x429153,0x42915b
  420927:	call   DWORD PTR ds:0x42a557
  42092d:	cmp    eax,0xffffffff
  420930:	jne    0x42088a
  420936:	add    DWORD PTR ds:0x42914b,0x6e9d
  420940:	mov    DWORD PTR [esp+0x30],0x0
  420948:	or     ecx,ecx
  42094a:	mov    ecx,0xf89c85a1
  42094f:	mov    DWORD PTR ds:0x4291af,0x17
  420959:	cmp    DWORD PTR ds:0x4291af,0x0
  420960:	je     0x4209b6
  420966:	cmp    DWORD PTR ds:0x4291af,0x4
  42096d:	jge    0x4209b6
  420973:	jmp    0x420988
  420978:	push   0x4280d6
  42097d:	push   0x1
  42097f:	push   DWORD PTR [ebp-0x24]
  420982:	call   DWORD PTR ds:0x42a56f
  420988:	cmp    DWORD PTR ds:0x4291af,0x5
  42098f:	jne    0x4209a2
  420995:	mov    ebx,DWORD PTR ds:0x4291af
  42099b:	dec    ebx
  42099c:	mov    DWORD PTR ds:0x4291af,ebx
  4209a2:	xor    ebx,ebx
  4209a4:	xor    ebx,DWORD PTR ds:0x4291af
  4209aa:	dec    ebx
  4209ab:	mov    DWORD PTR ds:0x4291af,ebx
  4209b1:	jmp    0x420959
  4209b6:	mov    DWORD PTR [esp+0x18],ecx
  4209ba:	add    DWORD PTR ds:0x429167,0x3918
  4209c4:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  4209cc:	mov    edx,DWORD PTR ds:0x4291af
  4209d2:	or     DWORD PTR ds:0x429163,edx
  4209d8:	lea    eax,[esp+0x3c]
  4209dc:	mov    DWORD PTR [esp+0x30],eax
  4209e0:	xor    edi,edx
  4209e2:	lea    eax,[esp+0x38]
  4209e6:	sbb    edx,DWORD PTR ds:0x4291c3
  4209ec:	mov    DWORD PTR [esp+0x20],eax
  4209f0:	or     edi,0x5972
  4209f6:	mov    eax,ds:0x42830b
  4209fb:	mov    DWORD PTR ds:0x42917f,0x17
  420a05:	cmp    DWORD PTR ds:0x42917f,0x0
  420a0c:	je     0x420a43
  420a12:	cmp    DWORD PTR ds:0x42917f,0x21
  420a19:	jl     0x420a43
  420a1f:	jmp    0x420a2f
  420a24:	push   0x3972
  420a29:	call   DWORD PTR ds:0x42a573
  420a2f:	xor    edi,edi
  420a31:	add    edi,DWORD PTR ds:0x42917f
  420a37:	dec    edi
  420a38:	mov    DWORD PTR ds:0x42917f,edi
  420a3e:	jmp    0x420a05
  420a43:	mov    eax,DWORD PTR [eax+0x1c8]
  420a49:	mov    eax,DWORD PTR [eax]
  420a4b:	mov    edx,DWORD PTR [esp+0x20]
  420a4f:	mov    edi,0x75108ac
  420a54:	mov    ebx,DWORD PTR ds:0x4291db
  420a5a:	sbb    DWORD PTR ds:0x429153,ebx
  420a60:	xor    eax,edi
  420a62:	adc    DWORD PTR ds:0x4291f3,0x37f0
  420a6c:	mov    ebx,0x3272f3
  420a71:	add    DWORD PTR ds:0x4291a3,0x4291a7
  420a7b:	add    eax,ebx
  420a7d:	not    DWORD PTR ds:0x4291a3
  420a83:	mov    DWORD PTR [edx],eax
  420a85:	mov    DWORD PTR ds:0x4291cb,0x5252
  420a8f:	mov    eax,ds:0x42901f
  420a94:	cmp    eax,0x445cecf9
  420a99:	mov    DWORD PTR ds:0x4291bb,0x4b3f
  420aa3:	jne    0x420b94
  420aa9:	mov    eax,DWORD PTR [esp+0x18]
  420aad:	and    DWORD PTR ds:0x4291ab,0x0
  420ab7:	jmp    0x420acb
  420abc:	xor    edx,edx
  420abe:	add    edx,DWORD PTR ds:0x4291ab
  420ac4:	inc    edx
  420ac5:	mov    DWORD PTR ds:0x4291ab,edx
  420acb:	cmp    DWORD PTR ds:0x4291ab,0x1e
  420ad2:	jae    0x420b1c
  420ad8:	cmp    DWORD PTR ds:0x4291ab,0xe
  420adf:	jl     0x420b1c
  420ae5:	jmp    0x420afd
  420aea:	push   0x4280a5
  420aef:	push   DWORD PTR [ebp-0x1c]
  420af2:	push   0x3b7d
  420af7:	call   DWORD PTR ds:0x42a577
  420afd:	cmp    DWORD PTR ds:0x4291ab,0xd
  420b04:	jne    0x420b17
  420b0a:	mov    edx,DWORD PTR ds:0x4291ab
  420b10:	inc    edx
  420b11:	mov    DWORD PTR ds:0x4291ab,edx
  420b17:	jmp    0x420abc
  420b1c:	mov    edx,DWORD PTR ds:0x42830b
  420b22:	adc    DWORD PTR ds:0x4291b3,0x4291a7
  420b2c:	mov    edx,DWORD PTR [edx+0x198]
  420b32:	adc    DWORD PTR ds:0x4291a3,0x42918f
  420b3c:	xor    eax,edi
  420b3e:	sub    DWORD PTR ds:0x42916f,0x429197
  420b48:	add    eax,ebx
  420b4a:	add    DWORD PTR ds:0x42915f,0x42915b
  420b54:	mov    DWORD PTR [edx],eax
  420b56:	mov    eax,DWORD PTR [esp+0x18]
  420b5a:	xor    eax,edi
  420b5c:	not    DWORD PTR ds:0x4291b3
  420b62:	add    eax,ebx
  420b64:	sbb    DWORD PTR ds:0x4291eb,0x4291d3
  420b6e:	mov    ds:0x42901f,eax
  420b73:	mov    eax,DWORD PTR [esp+0x18]
  420b77:	sbb    DWORD PTR ds:0x42917b,0x42915f
  420b81:	xor    eax,edi
  420b83:	sub    DWORD PTR ds:0x429167,0x5dcc
  420b8d:	add    eax,ebx
  420b8f:	mov    ds:0x428403,eax
  420b94:	and    DWORD PTR ds:0x4291c3,0x0
  420b9e:	xor    eax,eax
  420ba0:	xor    eax,DWORD PTR ds:0x4291c3
  420ba6:	inc    eax
  420ba7:	mov    ds:0x4291c3,eax
  420bac:	cmp    DWORD PTR ds:0x4291c3,0x10
  420bb3:	jb     0x420be9
  420bb9:	jmp    0x420bc4
  420bbe:	call   DWORD PTR ds:0x42a57b
  420bc4:	cmp    DWORD PTR ds:0x4291c3,0xf
  420bcb:	jne    0x420bdc
  420bd1:	mov    eax,ds:0x4291c3
  420bd6:	inc    eax
  420bd7:	mov    ds:0x4291c3,eax
  420bdc:	cmp    DWORD PTR ds:0x4291c3,0x1a
  420be3:	jb     0x420b9e
  420be9:	mov    eax,ds:0x42830b
  420bee:	xor    DWORD PTR ds:0x4291bb,0x4291bf
  420bf8:	mov    eax,DWORD PTR [eax+0x18c]
  420bfe:	add    DWORD PTR ds:0x4291e7,0x4bf9
  420c08:	mov    eax,DWORD PTR [eax]
  420c0a:	mov    DWORD PTR [esp+0x60],eax
  420c0e:	mov    eax,0xf89c85bd
  420c13:	mov    DWORD PTR [esp+0x10],eax
  420c17:	add    DWORD PTR ds:0x429193,0x4291c7
  420c21:	mov    DWORD PTR [esp+0x10],eax
  420c25:	or     DWORD PTR ds:0x42917f,0x429187
  420c2f:	mov    DWORD PTR [esp+0x10],eax
  420c33:	mov    DWORD PTR [esp+0x10],ecx
  420c37:	dec    DWORD PTR ds:0x429167
  420c3d:	mov    DWORD PTR [esp+0x20],eax
  420c41:	and    DWORD PTR ds:0x4291d7,0x0
  420c4b:	xor    eax,eax
  420c4d:	add    eax,DWORD PTR ds:0x4291d7
  420c53:	inc    eax
  420c54:	mov    ds:0x4291d7,eax
  420c59:	cmp    DWORD PTR ds:0x4291d7,0xc
  420c60:	jge    0x420ca3
  420c66:	jmp    0x420c7b
  420c6b:	push   0x4291a7
  420c70:	push   0x4280a5
  420c75:	call   DWORD PTR ds:0x42a57f
  420c7b:	cmp    DWORD PTR ds:0x4291d7,0xb
  420c82:	jne    0x420c96
  420c88:	xor    eax,eax
  420c8a:	xor    eax,DWORD PTR ds:0x4291d7
  420c90:	inc    eax
  420c91:	mov    ds:0x4291d7,eax
  420c96:	cmp    DWORD PTR ds:0x4291d7,0x18
  420c9d:	jb     0x420c4b
  420ca3:	mov    DWORD PTR [esp+0x20],0xf89c85b9
  420cab:	sbb    eax,0x733e
  420cb0:	mov    eax,DWORD PTR [esp+0x18]
  420cb4:	xor    eax,edi
  420cb6:	xor    DWORD PTR ds:0x429167,0x2364
  420cc0:	add    eax,ebx
  420cc2:	jmp    0x420ea1
  420cc7:	lea    eax,[esp+0x78]
  420ccb:	sub    DWORD PTR ds:0x42918f,0x2bd1
  420cd5:	push   eax
  420cd6:	add    DWORD PTR ds:0x4291af,0x4291bb
  420ce0:	push   0x4284b7
  420ce5:	add    DWORD PTR ds:0x42916f,0x62a2
  420cef:	call   DWORD PTR ds:0x42a56b
  420cf5:	mov    DWORD PTR ds:0x4291ef,0x479f
  420cff:	cmp    eax,0xffffffff
  420d02:	jne    0x42088a
  420d08:	push   0xf
  420d0a:	lea    eax,[esp+0x44]
  420d0e:	add    DWORD PTR ds:0x42918f,0x71aa
  420d18:	push   eax
  420d19:	adc    DWORD PTR ds:0x4291bb,0x429187
  420d23:	push   0x42850b
  420d28:	push   0x42851f
  420d2d:	or     DWORD PTR ds:0x4291ef,0x259a
  420d37:	push   0x42853f
  420d3c:	call   esi
  420d3e:	imul   eax,eax,0x300000
  420d44:	mov    DWORD PTR ds:0x42914f,0x7610
  420d4e:	cmp    eax,0x1b00000
  420d53:	mov    DWORD PTR ds:0x429157,0x1024
  420d5d:	jne    0x42088a
  420d63:	sbb    DWORD PTR ds:0x4291c3,0x4291d7
  420d6d:	lea    eax,[esp+0x1b8]
  420d74:	push   eax
  420d75:	push   0x42857b
  420d7a:	sbb    DWORD PTR ds:0x42918f,0x1a84
  420d84:	call   DWORD PTR ds:0x42a557
  420d8a:	mov    DWORD PTR ds:0x4291b3,0x1d41
  420d94:	cmp    eax,0xffffffff
  420d97:	jne    0x42088a
  420d9d:	mov    eax,DWORD PTR [esp+0xc]
  420da1:	xor    ecx,DWORD PTR ds:0x42914f
  420da7:	mov    ecx,DWORD PTR [esp+0x20]
  420dab:	sbb    DWORD PTR ds:0x429197,0x5641
  420db5:	xor    eax,edi
  420db7:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  420dc1:	lea    eax,[eax+ecx*1+0x3272f3]
  420dc8:	inc    DWORD PTR ds:0x4291e7
  420dce:	push   eax
  420dcf:	add    DWORD PTR ds:0x4291b3,ebx
  420dd5:	mov    eax,DWORD PTR [esp+0x14]
  420dd9:	xor    eax,edi
  420ddb:	lea    eax,[ebp+eax*1+0x3272fb]
  420de2:	xor    DWORD PTR ds:0x429197,0x3901
  420dec:	push   eax
  420ded:	mov    DWORD PTR ds:0x429153,0x5a0a
  420df7:	mov    eax,ds:0x42830b
  420dfc:	xor    DWORD PTR ds:0x4291c3,0x2a62
  420e06:	push   DWORD PTR [eax+0x1bc]
  420e0c:	adc    DWORD PTR ds:0x429153,0x42915f
  420e16:	call   0x421b3f
  420e1b:	and    DWORD PTR ds:0x4291af,0x0
  420e25:	jmp    0x420e37
  420e2a:	mov    edx,DWORD PTR ds:0x4291af
  420e30:	inc    edx
  420e31:	mov    DWORD PTR ds:0x4291af,edx
  420e37:	cmp    DWORD PTR ds:0x4291af,0x15
  420e3e:	jae    0x420e7e
  420e44:	cmp    DWORD PTR ds:0x4291af,0xd
  420e4b:	jl     0x420e7e
  420e51:	jmp    0x420e5f
  420e56:	push   DWORD PTR [ebp-0x1c]
  420e59:	call   DWORD PTR ds:0x42a583
  420e5f:	cmp    DWORD PTR ds:0x4291af,0xc
  420e66:	jne    0x420e79
  420e6c:	mov    edx,DWORD PTR ds:0x4291af
  420e72:	inc    edx
  420e73:	mov    DWORD PTR ds:0x4291af,edx
  420e79:	jmp    0x420e2a
  420e7e:	mov    eax,DWORD PTR [esp+0xc]
  420e82:	mov    ecx,DWORD PTR [esp+0x20]
  420e86:	mov    edx,DWORD PTR ds:0x429167
  420e8c:	adc    DWORD PTR ds:0x4291b3,edx
  420e92:	xor    eax,edi
  420e94:	and    edx,DWORD PTR ds:0x4291b3
  420e9a:	lea    eax,[ecx+eax*1+0x3272f3]
  420ea1:	mov    ecx,DWORD PTR [esp+0xc]
  420ea5:	neg    edx
  420ea7:	mov    edx,DWORD PTR [esp+0xc]
  420eab:	or     DWORD PTR ds:0x42917b,0x429157
  420eb5:	xor    edx,edi
  420eb7:	or     DWORD PTR ds:0x4291c7,0x1707
  420ec1:	xor    ecx,edi
  420ec3:	xor    DWORD PTR ds:0x42916f,0x6f67
  420ecd:	add    ecx,edx
  420ecf:	mov    edx,DWORD PTR [esp+0xc]
  420ed3:	add    DWORD PTR ds:0x429193,0xde7
  420edd:	xor    edx,edi
  420edf:	mov    DWORD PTR ds:0x429197,0x79ec
  420ee9:	lea    ecx,[ecx+edx*1+0x9758d9]
  420ef0:	mov    DWORD PTR ds:0x42917b,0x463d
  420efa:	mov    DWORD PTR [esp+0x20],eax
  420efe:	cmp    eax,ecx
  420f00:	jbe    0x420cc7
  420f06:	xor    ecx,ecx
  420f08:	or     ecx,DWORD PTR ds:0x4291a3
  420f0e:	or     DWORD PTR ds:0x4291b3,ecx
  420f14:	mov    eax,DWORD PTR [ebp+0xc]
  420f17:	and    DWORD PTR ds:0x4291e3,0x0
  420f21:	mov    ecx,DWORD PTR ds:0x4291e3
  420f27:	inc    ecx
  420f28:	mov    DWORD PTR ds:0x4291e3,ecx
  420f2e:	cmp    DWORD PTR ds:0x4291e3,0x18
  420f35:	jge    0x420f62
  420f3b:	jmp    0x420f55
  420f40:	push   0x4291ab
  420f45:	push   0x4291db
  420f4a:	push   0x4566
  420f4f:	call   DWORD PTR ds:0x42a58b
  420f55:	cmp    DWORD PTR ds:0x4291e3,0x17
  420f5c:	jb     0x420f21
  420f62:	mov    ds:0x42818f,eax
  420f67:	mov    eax,DWORD PTR [ebp+0x10]
  420f6a:	mov    ds:0x4283eb,eax
  420f6f:	mov    DWORD PTR ds:0x4291af,0x18
  420f79:	cmp    DWORD PTR ds:0x4291af,0x0
  420f80:	je     0x420fd1
  420f86:	cmp    DWORD PTR ds:0x4291af,0x4
  420f8d:	ja     0x420fd1
  420f93:	jmp    0x420fa3
  420f98:	push   0x82c1
  420f9d:	call   DWORD PTR ds:0x42a553
  420fa3:	cmp    DWORD PTR ds:0x4291af,0x5
  420faa:	jne    0x420fbf
  420fb0:	xor    ecx,ecx
  420fb2:	or     ecx,DWORD PTR ds:0x4291af
  420fb8:	dec    ecx
  420fb9:	mov    DWORD PTR ds:0x4291af,ecx
  420fbf:	mov    ecx,DWORD PTR ds:0x4291af
  420fc5:	dec    ecx
  420fc6:	mov    DWORD PTR ds:0x4291af,ecx
  420fcc:	jmp    0x420f79
  420fd1:	mov    eax,ds:0x42818f
  420fd6:	movzx  ecx,BYTE PTR ds:0x429183
  420fdd:	adc    DWORD PTR ds:0x4291d7,ecx
  420fe3:	mov    ecx,DWORD PTR [esp+0x30]
  420fe7:	sub    DWORD PTR ds:0x4291ab,0x2768
  420ff1:	sub    eax,ebx
  420ff3:	and    DWORD PTR ds:0x42919f,0x51d9
  420ffd:	xor    eax,edi
  420fff:	mov    DWORD PTR [ecx],eax
  421001:	lea    eax,[esp+0x2c]
  421005:	mov    DWORD PTR [esp+0x6c],eax
  421009:	xor    DWORD PTR ds:0x4291cf,0x6aa
  421013:	lea    eax,[ebp+0x4]
  421016:	sub    DWORD PTR ds:0x42915b,0x4291af
  421020:	mov    DWORD PTR [esp+0x2c],eax
  421024:	lea    eax,[esp+0x78]
  421028:	sub    DWORD PTR ds:0x429153,0x6538
  421032:	push   eax
  421033:	add    DWORD PTR ds:0x4291a3,0x4291f3
  42103d:	push   0x428567
  421042:	call   DWORD PTR ds:0x42a56b
  421048:	mov    DWORD PTR ds:0x4291e3,0x1cd6
  421052:	cmp    eax,0xffffffff
  421055:	mov    DWORD PTR ds:0x4291b7,0x32c8
  42105f:	jne    0x42088a
  421065:	push   0xf
  421067:	lea    eax,[esp+0x44]
  42106b:	xor    DWORD PTR ds:0x429193,0x42919b
  421075:	push   eax
  421076:	push   0x4285bb
  42107b:	adc    DWORD PTR ds:0x429193,0x7895
  421085:	push   0x4285cf
  42108a:	push   0x4285ef
  42108f:	call   esi
  421091:	imul   eax,eax,0x300000
  421097:	cmp    eax,0x1b00000
  42109c:	jne    0x42088a
  4210a2:	lea    eax,[esp+0x1b8]
  4210a9:	push   eax
  4210aa:	push   0x42862b
  4210af:	sub    DWORD PTR ds:0x4291bf,0x42918b
  4210b9:	call   DWORD PTR ds:0x42a557
  4210bf:	mov    DWORD PTR ds:0x429187,0x3d95
  4210c9:	cmp    eax,0xffffffff
  4210cc:	mov    DWORD PTR ds:0x42917f,0x79ad
  4210d6:	jne    0x42088a
  4210dc:	lea    eax,[esp+0x78]
  4210e0:	add    DWORD PTR ds:0x42914f,0x6022
  4210ea:	push   eax
  4210eb:	neg    DWORD PTR ds:0x42917f
  4210f1:	push   0x428617
  4210f6:	add    DWORD PTR ds:0x42917b,0x4291e7
  421100:	call   DWORD PTR ds:0x42a56b
  421106:	mov    DWORD PTR ds:0x42916f,0x4f36
  421110:	cmp    eax,0xffffffff
  421113:	mov    DWORD PTR ds:0x429197,0x71f8
  42111d:	jne    0x42088a
  421123:	xor    DWORD PTR ds:0x4291b7,0x540c
  42112d:	push   0xf
  42112f:	or     DWORD PTR ds:0x42914b,0x42916b
  421139:	lea    eax,[esp+0x44]
  42113d:	and    DWORD PTR ds:0x4291ab,0x3361
  421147:	push   eax
  421148:	sub    DWORD PTR ds:0x4291bb,0x5c7b
  421152:	push   0x42866b
  421157:	adc    DWORD PTR ds:0x4291ab,0x4291cf
  421161:	push   0x42867f
  421166:	xor    DWORD PTR ds:0x429183,0x4291b7
  421170:	push   0x42869f
  421175:	or     DWORD PTR ds:0x4291af,0x4291cf
  42117f:	call   esi
  421181:	imul   eax,eax,0x300000
  421187:	mov    DWORD PTR ds:0x429157,0x112c
  421191:	cmp    eax,0x1b00000
  421196:	jne    0x42088a
  42119c:	or     DWORD PTR ds:0x42914f,0x1a1c
  4211a6:	lea    eax,[esp+0x1b8]
  4211ad:	push   eax
  4211ae:	sub    DWORD PTR ds:0x4291eb,0xb4e
  4211b8:	push   0x4286db
  4211bd:	not    DWORD PTR ds:0x429153
  4211c3:	call   DWORD PTR ds:0x42a557
  4211c9:	mov    DWORD PTR ds:0x4291d7,0x34b9
  4211d3:	cmp    eax,0xffffffff
  4211d6:	mov    DWORD PTR ds:0x4291bb,0x68d6
  4211e0:	jne    0x42088a
  4211e6:	lea    eax,[esp+0x78]
  4211ea:	push   eax
  4211eb:	sub    DWORD PTR ds:0x4291a7,0x429183
  4211f5:	push   0x4286c7
  4211fa:	sub    DWORD PTR ds:0x42919f,0xfe
  421204:	call   DWORD PTR ds:0x42a56b
  42120a:	mov    DWORD PTR ds:0x4291a3,0x162e
  421214:	cmp    eax,0xffffffff
  421217:	jne    0x42088a
  42121d:	add    DWORD PTR ds:0x42918f,0x39d
  421227:	push   0xf
  421229:	lea    eax,[esp+0x44]
  42122d:	push   eax
  42122e:	sbb    DWORD PTR ds:0x4291df,0x4c8c
  421238:	push   0x42871b
  42123d:	push   0x42872f
  421242:	push   0x42874f
  421247:	call   esi
  421249:	sub    DWORD PTR ds:0x42914f,0x429163
  421253:	imul   eax,eax,0x300000
  421259:	mov    DWORD PTR ds:0x42918b,0x5962
  421263:	cmp    eax,0x1b00000
  421268:	jne    0x42088a
  42126e:	add    DWORD PTR ds:0x4291a3,0x4291cb
  421278:	lea    eax,[esp+0x1b8]
  42127f:	or     DWORD PTR ds:0x4291ab,0x4619
  421289:	push   eax
  42128a:	push   0x42878b
  42128f:	and    DWORD PTR ds:0x42916f,0x4291ef
  421299:	call   DWORD PTR ds:0x42a557
  42129f:	mov    DWORD PTR ds:0x4291ef,0x2004
  4212a9:	cmp    eax,0xffffffff
  4212ac:	mov    DWORD PTR ds:0x42918b,0x62c6
  4212b6:	jne    0x42088a
  4212bc:	and    DWORD PTR ds:0x4291d3,0x5eb4
  4212c6:	lea    eax,[esp+0x78]
  4212ca:	adc    DWORD PTR ds:0x42917f,0x4918
  4212d4:	push   eax
  4212d5:	or     DWORD PTR ds:0x42919b,0x429153
  4212df:	push   0x428777
  4212e4:	sbb    DWORD PTR ds:0x429197,0x429157
  4212ee:	call   DWORD PTR ds:0x42a56b
  4212f4:	mov    DWORD PTR ds:0x42914f,0x13e7
  4212fe:	cmp    eax,0xffffffff
  421301:	mov    DWORD PTR ds:0x4291cf,0xa62
  42130b:	jne    0x42088a
  421311:	xor    DWORD PTR ds:0x42915b,0x4291bb
  42131b:	push   0xf
  42131d:	lea    eax,[esp+0x44]
  421321:	or     DWORD PTR ds:0x4291b3,0x2cef
  42132b:	push   eax
  42132c:	push   0x4287cb
  421331:	push   0x4287df
  421336:	sub    DWORD PTR ds:0x4291a3,0x42918f
  421340:	push   0x4287ff
  421345:	call   esi
  421347:	imul   eax,eax,0x300000
  42134d:	mov    DWORD PTR ds:0x429193,0x43ec
  421357:	cmp    eax,0x1b00000
  42135c:	mov    DWORD PTR ds:0x4291c7,0x18cb
  421366:	jne    0x42088a
  42136c:	add    DWORD PTR ds:0x4291af,0x5057
  421376:	lea    eax,[esp+0x1b8]
  42137d:	or     DWORD PTR ds:0x4291c3,0x48df
  421387:	push   eax
  421388:	and    DWORD PTR ds:0x4291e3,0x7c0c
  421392:	push   0x42883b
  421397:	and    DWORD PTR ds:0x4291f7,0x4291d7
  4213a1:	call   DWORD PTR ds:0x42a557
  4213a7:	cmp    eax,0xffffffff
  4213aa:	jne    0x42088a
  4213b0:	or     DWORD PTR ds:0x4291cb,0x5541
  4213ba:	lea    eax,[esp+0x78]
  4213be:	sub    DWORD PTR ds:0x4291f7,0x686a
  4213c8:	push   eax
  4213c9:	xor    DWORD PTR ds:0x4291ef,0x4291eb
  4213d3:	push   0x428827
  4213d8:	add    DWORD PTR ds:0x4291bb,0x4894
  4213e2:	call   DWORD PTR ds:0x42a56b
  4213e8:	mov    DWORD PTR ds:0x42914b,0x5d36
  4213f2:	cmp    eax,0xffffffff
  4213f5:	mov    DWORD PTR ds:0x42918b,0x63d2
  4213ff:	jne    0x42088a
  421405:	adc    DWORD PTR ds:0x4291d3,0x6d
  42140f:	push   0xf
  421411:	xor    DWORD PTR ds:0x4291df,0x4291b3
  42141b:	lea    eax,[esp+0x44]
  42141f:	xor    DWORD PTR ds:0x42914f,0x245a
  421429:	push   eax
  42142a:	adc    DWORD PTR ds:0x42915f,0x29d1
  421434:	push   0x42887b
  421439:	push   0x42888f
  42143e:	sbb    DWORD PTR ds:0x42914f,0x429163
  421448:	push   0x4288af
  42144d:	adc    DWORD PTR ds:0x42917f,0x4291a3
  421457:	call   esi
  421459:	imul   eax,eax,0x300000
  42145f:	cmp    eax,0x1b00000
  421464:	jne    0x42088a
  42146a:	mov    DWORD PTR ds:0x4291cf,0x5dc8
  421474:	lea    eax,[esp+0x1b8]
  42147b:	add    DWORD PTR ds:0x42919b,0x4291ab
  421485:	push   eax
  421486:	not    DWORD PTR ds:0x429153
  42148c:	push   0x4288eb
  421491:	call   DWORD PTR ds:0x42a557
  421497:	mov    DWORD PTR ds:0x4291e7,0x183e
  4214a1:	cmp    eax,0xffffffff
  4214a4:	jne    0x42088a
  4214aa:	lea    eax,[esp+0x78]
  4214ae:	xor    DWORD PTR ds:0x4291d7,0x57b8
  4214b8:	push   eax
  4214b9:	push   0x4288d7
  4214be:	add    DWORD PTR ds:0x4291af,0x1e81
  4214c8:	call   DWORD PTR ds:0x42a56b
  4214ce:	mov    DWORD PTR ds:0x4291c3,0x328a
  4214d8:	cmp    eax,0xffffffff
  4214db:	mov    DWORD PTR ds:0x4291f7,0x13f0
  4214e5:	jne    0x42088a
  4214eb:	push   0xf
  4214ed:	lea    eax,[esp+0x44]
  4214f1:	adc    DWORD PTR ds:0x4291c3,0x429173
  4214fb:	push   eax
  4214fc:	xor    DWORD PTR ds:0x4291cf,0x725b
  421506:	push   0x42892b
  42150b:	adc    DWORD PTR ds:0x4291bb,0x39d7
  421515:	push   0x42893f
  42151a:	xor    DWORD PTR ds:0x42918b,0x4291a7
  421524:	push   0x42895f
  421529:	call   esi
  42152b:	adc    DWORD PTR ds:0x4291ab,0x4291f7
  421535:	imul   eax,eax,0x300000
  42153b:	mov    DWORD PTR ds:0x4291cf,0x3d0e
  421545:	cmp    eax,0x1b00000
  42154a:	jne    0x42088a
  421550:	lea    eax,[esp+0x1b8]
  421557:	xor    DWORD PTR ds:0x429197,0x42919f
  421561:	push   eax
  421562:	push   0x42899b
  421567:	or     DWORD PTR ds:0x42915b,0x3d87
  421571:	call   DWORD PTR ds:0x42a557
  421577:	mov    DWORD PTR ds:0x4291bf,0x3132
  421581:	cmp    eax,0xffffffff
  421584:	jne    0x42088a
  42158a:	add    DWORD PTR ds:0x4291df,0x6129
  421594:	lea    eax,[esp+0x78]
  421598:	mov    DWORD PTR ds:0x42915b,0x7683
  4215a2:	push   eax
  4215a3:	push   0x428987
  4215a8:	adc    DWORD PTR ds:0x4291d3,0x4f30
  4215b2:	call   DWORD PTR ds:0x42a56b
  4215b8:	mov    DWORD PTR ds:0x42918f,0x2474
  4215c2:	cmp    eax,0xffffffff
  4215c5:	jne    0x42088a
  4215cb:	and    DWORD PTR ds:0x4291c3,0x7c44
  4215d5:	push   0xf
  4215d7:	lea    eax,[esp+0x44]
  4215db:	push   eax
  4215dc:	push   0x4289db
  4215e1:	sub    DWORD PTR ds:0x42914f,0x6ca1
  4215eb:	push   0x4289ef
  4215f0:	sbb    DWORD PTR ds:0x42916f,0x4291cf
  4215fa:	push   0x428a0f
  4215ff:	call   esi
  421601:	xor    DWORD PTR ds:0x4291eb,0x4291a3
  42160b:	imul   eax,eax,0x300000
  421611:	mov    DWORD PTR ds:0x4291a7,0x6fd3
  42161b:	cmp    eax,0x1b00000
  421620:	mov    DWORD PTR ds:0x4291f7,0x26fc
  42162a:	jne    0x42088a
  421630:	lea    eax,[esp+0x1b8]
  421637:	push   eax
  421638:	push   0x428a4b
  42163d:	call   DWORD PTR ds:0x42a557
  421643:	cmp    eax,0xffffffff
  421646:	jne    0x42088a
  42164c:	lea    eax,[esp+0x78]
  421650:	push   eax
  421651:	push   0x428a37
  421656:	call   DWORD PTR ds:0x42a56b
  42165c:	cmp    eax,0xffffffff
  42165f:	jne    0x42088a
  421665:	push   0xf
  421667:	lea    eax,[esp+0x44]
  42166b:	push   eax
  42166c:	push   0x428a8b
  421671:	push   0x428a9f
  421676:	push   0x428abf
  42167b:	call   esi
  42167d:	imul   eax,eax,0x300000
  421683:	cmp    eax,0x1b00000
  421688:	jne    0x42088a
  42168e:	lea    eax,[esp+0x1b8]
  421695:	push   eax
  421696:	push   0x428afb
  42169b:	call   DWORD PTR ds:0x42a557
  4216a1:	cmp    eax,0xffffffff
  4216a4:	jne    0x42088a
  4216aa:	lea    eax,[esp+0x78]
  4216ae:	push   eax
  4216af:	push   0x428ae7
  4216b4:	call   DWORD PTR ds:0x42a56b
  4216ba:	cmp    eax,0xffffffff
  4216bd:	jne    0x42088a
  4216c3:	push   0xf
  4216c5:	lea    eax,[esp+0x44]
  4216c9:	push   eax
  4216ca:	push   0x428b3b
  4216cf:	push   0x428b4f
  4216d4:	push   0x428b6f
  4216d9:	call   esi
  4216db:	imul   eax,eax,0x300000
  4216e1:	cmp    eax,0x1b00000
  4216e6:	jne    0x42088a
  4216ec:	lea    eax,[esp+0x1b8]
  4216f3:	push   eax
  4216f4:	push   0x428bab
  4216f9:	call   DWORD PTR ds:0x42a557
  4216ff:	cmp    eax,0xffffffff
  421702:	jne    0x42088a
  421708:	lea    eax,[esp+0x78]
  42170c:	push   eax
  42170d:	push   0x428b97
  421712:	call   DWORD PTR ds:0x42a56b
  421718:	cmp    eax,0xffffffff
  42171b:	jne    0x42088a
  421721:	push   0xf
  421723:	lea    eax,[esp+0x44]
  421727:	push   eax
  421728:	push   0x428beb
  42172d:	push   0x428bff
  421732:	push   0x428c1f
  421737:	call   esi
  421739:	imul   eax,eax,0x300000
  42173f:	cmp    eax,0x1b00000
  421744:	jne    0x42088a
  42174a:	lea    eax,[esp+0x1b8]
  421751:	push   eax
  421752:	push   0x428c5b
  421757:	call   DWORD PTR ds:0x42a557
  42175d:	cmp    eax,0xffffffff
  421760:	jne    0x42088a
  421766:	lea    eax,[esp+0x78]
  42176a:	push   eax
  42176b:	push   0x428c47
  421770:	call   DWORD PTR ds:0x42a56b
  421776:	cmp    eax,0xffffffff
  421779:	jne    0x42088a
  42177f:	push   0xf
  421781:	lea    eax,[esp+0x44]
  421785:	push   eax
  421786:	push   0x428c9b
  42178b:	push   0x428caf
  421790:	push   0x428ccf
  421795:	call   esi
  421797:	imul   eax,eax,0x300000
  42179d:	cmp    eax,0x1b00000
  4217a2:	jne    0x42088a
  4217a8:	lea    eax,[esp+0x1b8]
  4217af:	push   eax
  4217b0:	push   0x428d0b
  4217b5:	call   DWORD PTR ds:0x42a557
  4217bb:	cmp    eax,0xffffffff
  4217be:	jne    0x42088a
  4217c4:	lea    eax,[esp+0x78]
  4217c8:	push   eax
  4217c9:	push   0x428cf7
  4217ce:	call   DWORD PTR ds:0x42a56b
  4217d4:	cmp    eax,0xffffffff
  4217d7:	jne    0x42088a
  4217dd:	push   0xf
  4217df:	lea    eax,[esp+0x44]
  4217e3:	push   eax
  4217e4:	push   0x428d4b
  4217e9:	push   0x428d5f
  4217ee:	push   0x428d7f
  4217f3:	call   esi
  4217f5:	imul   eax,eax,0x300000
  4217fb:	cmp    eax,0x1b00000
  421800:	jne    0x42088a
  421806:	lea    eax,[esp+0x1b8]
  42180d:	push   eax
  42180e:	push   0x428dbb
  421813:	call   DWORD PTR ds:0x42a557
  421819:	cmp    eax,0xffffffff
  42181c:	jne    0x42088a
  421822:	mov    eax,DWORD PTR [esp+0x3c]
  421826:	cmp    eax,0xf89c85a2
  42182b:	je     0x42188a
  421831:	mov    eax,DWORD PTR [esp+0x18]
  421835:	mov    ecx,DWORD PTR [esp+0x38]
  421839:	xor    eax,edi
  42183b:	add    eax,ebx
  42183d:	cmp    eax,ecx
  42183f:	je     0x42188a
  421845:	mov    eax,ds:0x42830b
  42184a:	mov    eax,DWORD PTR [eax+0x194]
  421850:	mov    ecx,DWORD PTR [eax]
  421852:	mov    eax,DWORD PTR [ecx+0x3c]
  421855:	push   DWORD PTR ds:0x4283eb
  42185b:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  42185f:	push   DWORD PTR ds:0x42818f
  421865:	add    eax,ecx
  421867:	mov    ecx,DWORD PTR ds:0x42830b
  42186d:	mov    ecx,DWORD PTR [ecx+0x194]
  421873:	push   DWORD PTR [ecx]
  421875:	call   eax
  421877:	mov    ecx,DWORD PTR ds:0x42830b
  42187d:	mov    ecx,DWORD PTR [ecx+0x1cc]
  421883:	mov    DWORD PTR [ecx],eax
  421885:	jmp    0x421ab7
  42188a:	mov    eax,DWORD PTR [esp+0x18]
  42188e:	mov    ecx,DWORD PTR [esp+0x60]
  421892:	xor    eax,edi
  421894:	add    eax,ebx
  421896:	cmp    eax,ecx
  421898:	jne    0x421901
  42189e:	mov    eax,DWORD PTR [esp+0x18]
  4218a2:	mov    ecx,DWORD PTR ds:0x42830b
  4218a8:	mov    ecx,DWORD PTR [ecx+0x198]
  4218ae:	xor    eax,edi
  4218b0:	add    eax,ebx
  4218b2:	cmp    eax,DWORD PTR [ecx]
  4218b4:	jne    0x4218da
  4218ba:	mov    eax,DWORD PTR [esp+0x18]
  4218be:	push   0xf89c85a1
  4218c3:	xor    eax,edi
  4218c5:	add    eax,ebx
  4218c7:	push   eax
  4218c8:	push   0xf89c85bd
  4218cd:	push   DWORD PTR [esp+0x18]
  4218d1:	push   DWORD PTR [esp+0x28]
  4218d5:	call   0x41b9fd
  4218da:	push   DWORD PTR [esp+0xc]
  4218de:	push   DWORD PTR [esp+0x1c]
  4218e2:	call   0x401000
  4218e7:	mov    eax,DWORD PTR [esp+0x18]
  4218eb:	xor    eax,edi
  4218ed:	add    eax,ebx
  4218ef:	mov    ds:0x428397,eax
  4218f4:	mov    eax,DWORD PTR [esp+0x18]
  4218f8:	xor    eax,edi
  4218fa:	add    eax,ebx
  4218fc:	mov    ds:0x42838f,eax
  421901:	mov    eax,DWORD PTR [esp+0x2c]
  421905:	test   eax,eax
  421907:	je     0x421ab7
  42190d:	lea    eax,[esp+0x78]
  421911:	mov    DWORD PTR [esp+0x64],0xf152c3a
  421919:	push   eax
  42191a:	mov    DWORD PTR [esp+0x78],0x712ed2f
  421922:	mov    DWORD PTR [esp+0x74],0x373fc09
  42192a:	push   0x428da7
  42192f:	mov    DWORD PTR [esp+0x70],0x72670ad9
  421937:	call   DWORD PTR ds:0x42a56b
  42193d:	cmp    eax,0xffffffff
  421940:	jne    0x42088a
  421946:	push   0xf
  421948:	lea    eax,[esp+0x44]
  42194c:	push   eax
  42194d:	push   0x428dfb
  421952:	push   0x428e0f
  421957:	push   0x428e2f
  42195c:	call   esi
  42195e:	imul   eax,eax,0x300000
  421964:	cmp    eax,0x1b00000
  421969:	jne    0x42088a
  42196f:	lea    eax,[esp+0x1b8]
  421976:	push   eax
  421977:	push   0x428e6b
  42197c:	call   DWORD PTR ds:0x42a557
  421982:	cmp    eax,0xffffffff
  421985:	jne    0x42088a
  42198b:	call   0x41b69e
  421990:	mov    eax,DWORD PTR [esp+0x34]
  421994:	mov    eax,DWORD PTR [esp+0xc]
  421998:	mov    DWORD PTR [esp+0x30],eax
  42199c:	mov    eax,DWORD PTR [esp+0x18]
  4219a0:	mov    DWORD PTR [esp+0xc],eax
  4219a4:	mov    eax,eax
  4219a6:	mov    eax,ds:0x42830b
  4219ab:	mov    ecx,DWORD PTR [eax+0x1c0]
  4219b1:	mov    edx,DWORD PTR [ecx]
  4219b3:	and    DWORD PTR [esp+0x14],0x0
  4219b8:	mov    esi,0xfabdbed6
  4219bd:	add    edx,esi
  4219bf:	adc    DWORD PTR [esp+0x14],0xffffffff
  4219c4:	mov    ecx,0x8a29a13f
  4219c9:	xor    edx,ecx
  4219cb:	mov    DWORD PTR [esp+0x20],edx
  4219cf:	mov    edx,DWORD PTR [esp+0x14]
  4219d3:	xor    edx,0x0
  4219d6:	cmp    DWORD PTR [esp+0x20],0x70941fe8
  4219de:	mov    DWORD PTR [esp+0x24],edx
  4219e2:	jne    0x4219f1
  4219e8:	cmp    edx,0xffffffff
  4219eb:	je     0x421a5a
  4219f1:	mov    eax,DWORD PTR [eax+0x1c8]
  4219f7:	mov    eax,DWORD PTR [eax]
  4219f9:	cdq    
  4219fa:	add    eax,esi
  4219fc:	adc    edx,0xffffffff
  4219ff:	and    DWORD PTR [esp+0x14],0x0
  421a04:	xor    edx,0x0
  421a07:	mov    DWORD PTR [esp+0x1c],edx
  421a0b:	mov    edx,DWORD PTR [esp+0xc]
  421a0f:	mov    DWORD PTR [esp+0x10],edx
  421a13:	xor    eax,ecx
  421a15:	add    DWORD PTR [esp+0x10],esi
  421a19:	mov    edx,DWORD PTR [esp+0x10]
  421a1d:	adc    DWORD PTR [esp+0x14],0xffffffff
  421a22:	xor    edx,ecx
  421a24:	mov    DWORD PTR [esp+0x20],edx
  421a28:	mov    edx,DWORD PTR [esp+0x14]
  421a2c:	xor    edx,0x0
  421a2f:	mov    DWORD PTR [esp+0x24],edx
  421a33:	cmp    DWORD PTR [esp+0x20],eax
  421a37:	jne    0x421a49
  421a3d:	mov    eax,DWORD PTR [esp+0x1c]
  421a41:	cmp    edx,eax
  421a43:	je     0x421a5a
  421a49:	mov    eax,DWORD PTR [esp+0xc]
  421a4d:	add    eax,DWORD PTR [esp+0x30]
  421a51:	mov    DWORD PTR [esp+0xc],eax
  421a55:	jmp    0x421ab7
  421a5a:	mov    eax,ds:0x42838f
  421a5f:	mov    edx,DWORD PTR ds:0x428397
  421a65:	xor    eax,edx
  421a67:	mov    ds:0x42838f,eax
  421a6c:	mov    edx,DWORD PTR ds:0x42838f
  421a72:	mov    eax,DWORD PTR [esp+0x2c]
  421a76:	add    DWORD PTR [eax],edx
  421a78:	mov    edx,DWORD PTR [esp+0xc]
  421a7c:	mov    eax,ds:0x42838f
  421a81:	xor    edx,edi
  421a83:	add    edx,ebx
  421a85:	xor    ebx,ebx
  421a87:	add    edx,esi
  421a89:	adc    ebx,0xffffffff
  421a8c:	xor    edi,edi
  421a8e:	xor    edx,ecx
  421a90:	xor    ebx,0x0
  421a93:	add    eax,esi
  421a95:	adc    edi,0xffffffff
  421a98:	xor    eax,ecx
  421a9a:	xor    edi,0x0
  421a9d:	cmp    eax,edx
  421a9f:	jne    0x421ab7
  421aa5:	cmp    edi,ebx
  421aa7:	jne    0x421ab7
  421aad:	mov    eax,ds:0x42838f
  421ab2:	mov    ds:0x428397,eax
  421ab7:	lea    eax,[esp+0x78]
  421abb:	push   eax
  421abc:	push   0x428e57
  421ac1:	call   DWORD PTR ds:0x42a56b
  421ac7:	cmp    eax,0xffffffff
  421aca:	jne    0x42088a
  421ad0:	push   0xf
  421ad2:	lea    eax,[esp+0x44]
  421ad6:	push   eax
  421ad7:	push   0x428eab
  421adc:	push   0x428ebf
  421ae1:	push   0x428edf
  421ae6:	call   DWORD PTR ds:0x42a587
  421aec:	imul   eax,eax,0x300000
  421af2:	cmp    eax,0x1b00000
  421af7:	jne    0x42088a
  421afd:	lea    eax,[esp+0x1b8]
  421b04:	push   eax
  421b05:	push   0x428f0b
  421b0a:	call   DWORD PTR ds:0x42a557
  421b10:	cmp    eax,0xffffffff
  421b13:	jne    0x42088a
  421b19:	mov    eax,ds:0x42830b
  421b1e:	push   0x4
  421b20:	add    eax,0x1cc
  421b25:	push   eax
  421b26:	lea    eax,[esp+0x3c]
  421b2a:	push   eax
  421b2b:	call   0x421b3f
  421b30:	mov    eax,DWORD PTR [esp+0x34]
  421b34:	mov    eax,DWORD PTR [eax]
  421b36:	pop    edi
  421b37:	pop    esi
  421b38:	pop    ebx
  421b39:	mov    esp,ebp
  421b3b:	pop    ebp
  421b3c:	ret    0xc
  421b3f:	push   ebp
  421b40:	mov    ebp,esp
  421b42:	sub    esp,0x10
  421b45:	sub    DWORD PTR ds:0x429153,ebx
  421b4b:	mov    eax,0xf89c85a1
  421b50:	and    ecx,DWORD PTR ds:0x42914b
  421b56:	mov    DWORD PTR [ebp-0x4],eax
  421b59:	and    DWORD PTR ds:0x429167,0x0
  421b63:	jmp    0x421b75
  421b68:	mov    edx,DWORD PTR ds:0x429167
  421b6e:	inc    edx
  421b6f:	mov    DWORD PTR ds:0x429167,edx
  421b75:	cmp    DWORD PTR ds:0x429167,0x1c
  421b7c:	jae    0x421bcb
  421b82:	cmp    DWORD PTR ds:0x429167,0xc
  421b89:	jge    0x421bcb
  421b8f:	jmp    0x421bac
  421b94:	push   DWORD PTR [ebp-0x28]
  421b97:	push   0x428152
  421b9c:	push   0x42810e
  421ba1:	push   0x400000
  421ba6:	call   DWORD PTR ds:0x42a55b
  421bac:	cmp    DWORD PTR ds:0x429167,0xb
  421bb3:	jne    0x421bc6
  421bb9:	mov    edx,DWORD PTR ds:0x429167
  421bbf:	inc    edx
  421bc0:	mov    DWORD PTR ds:0x429167,edx
  421bc6:	jmp    0x421b68
  421bcb:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  421bd2:	or     edx,0x5b7d
  421bd8:	mov    ecx,DWORD PTR [ebp-0x4]
  421bdb:	push   esi
  421bdc:	mov    DWORD PTR ds:0x42918b,0x1a
  421be6:	cmp    DWORD PTR ds:0x42918b,0x0
  421bed:	je     0x421c25
  421bf3:	cmp    DWORD PTR ds:0x42918b,0x26
  421bfa:	ja     0x421c25
  421c00:	jmp    0x421c13
  421c05:	push   0x4386
  421c0a:	push   DWORD PTR [ebp-0x14]
  421c0d:	call   DWORD PTR ds:0x42a55f
  421c13:	mov    edx,DWORD PTR ds:0x42918b
  421c19:	dec    edx
  421c1a:	mov    DWORD PTR ds:0x42918b,edx
  421c20:	jmp    0x421be6
  421c25:	mov    edx,0x75108ac
  421c2a:	xor    ecx,edx
  421c2c:	mov    esi,0x3272f3
  421c31:	push   edi
  421c32:	mov    edi,DWORD PTR [ebp+0x10]
  421c35:	add    ecx,esi
  421c37:	cmp    ecx,edi
  421c39:	mov    DWORD PTR ds:0x42916f,0x60ec
  421c43:	je     0x42414b
  421c49:	movzx  ecx,WORD PTR ds:0x4291f7
  421c50:	adc    DWORD PTR ds:0x4291cf,ecx
  421c56:	mov    ecx,DWORD PTR [ebp-0x4]
  421c59:	mov    edi,DWORD PTR [ebp+0x10]
  421c5c:	inc    DWORD PTR ds:0x4291d3
  421c62:	xor    eax,eax
  421c64:	and    DWORD PTR ds:0x4291b7,0x2b27
  421c6e:	xor    ecx,edx
  421c70:	add    ecx,esi
  421c72:	add    DWORD PTR ds:0x42914b,0x714
  421c7c:	add    edi,0xfabdbed6
  421c82:	mov    DWORD PTR ds:0x429173,0x79de
  421c8c:	adc    eax,0xffffffff
  421c8f:	or     DWORD PTR ds:0x4291b3,0x42917f
  421c99:	xor    eax,0x0
  421c9c:	adc    DWORD PTR ds:0x4291e7,0x4ab7
  421ca6:	mov    DWORD PTR [ebp-0xc],eax
  421ca9:	mov    DWORD PTR ds:0x42914b,0x1e
  421cb3:	cmp    DWORD PTR ds:0x42914b,0x0
  421cba:	je     0x421d0b
  421cc0:	cmp    DWORD PTR ds:0x42914b,0x8
  421cc7:	jge    0x421d0b
  421ccd:	jmp    0x421cdd
  421cd2:	push   0x4291eb
  421cd7:	call   DWORD PTR ds:0x42a563
  421cdd:	cmp    DWORD PTR ds:0x42914b,0x9
  421ce4:	jne    0x421cf8
  421cea:	xor    eax,eax
  421cec:	add    eax,DWORD PTR ds:0x42914b
  421cf2:	dec    eax
  421cf3:	mov    ds:0x42914b,eax
  421cf8:	xor    eax,eax
  421cfa:	xor    eax,DWORD PTR ds:0x42914b
  421d00:	dec    eax
  421d01:	mov    ds:0x42914b,eax
  421d06:	jmp    0x421cb3
  421d0b:	push   ebx
  421d0c:	xor    ebx,ebx
  421d0e:	xor    edi,0x8a29a13f
  421d14:	mov    eax,ecx
  421d16:	add    eax,0xfabdbed6
  421d1b:	adc    ebx,0xffffffff
  421d1e:	xor    eax,0x8a29a13f
  421d23:	xor    ebx,0x0
  421d26:	cmp    eax,edi
  421d28:	jne    0x421d41
  421d2e:	cmp    ebx,DWORD PTR [ebp-0xc]
  421d31:	je     0x424145
  421d37:	jmp    0x421d41
  421d3c:	mov    esi,0x3272f3
  421d41:	mov    eax,DWORD PTR [ebp-0x4]
  421d44:	mov    edi,DWORD PTR [ebp-0x8]
  421d47:	xor    edi,edx
  421d49:	add    edi,esi
  421d4b:	mov    esi,DWORD PTR [ebp+0x8]
  421d4e:	imul   edi,ecx
  421d51:	mov    ebx,DWORD PTR [ebp+0xc]
  421d54:	xor    eax,edx
  421d56:	add    eax,ecx
  421d58:	mov    al,BYTE PTR [ebx+eax*1+0x3272f3]
  421d5f:	mov    BYTE PTR [edi+esi*1],al
  421d62:	mov    eax,DWORD PTR [ebp-0x8]
  421d65:	mov    esi,DWORD PTR [ebp+0x10]
  421d68:	xor    eax,edx
  421d6a:	xor    ebx,ebx
  421d6c:	add    esi,0xfabdbed6
  421d72:	adc    ebx,0xffffffff
  421d75:	lea    ecx,[ecx+eax*1+0x3272f3]
  421d7c:	xor    edi,edi
  421d7e:	xor    esi,0x8a29a13f
  421d84:	xor    ebx,0x0
  421d87:	mov    eax,ecx
  421d89:	add    eax,0xfabdbed6
  421d8e:	adc    edi,0xffffffff
  421d91:	xor    eax,0x8a29a13f
  421d96:	xor    edi,0x0
  421d99:	cmp    eax,esi
  421d9b:	jne    0x421d3c
  421da1:	cmp    edi,ebx
  421da3:	jne    0x421d3c
  421da9:	jmp    0x424145
  421dae:	sbb    ah,bl
  421db0:	cmp    ch,BYTE PTR [edi-0x46]
  421db3:	xchg   BYTE PTR [esi],al
  421db5:	xchg   BYTE PTR [edx-0x68],bl
  421db8:	dec    esi
  421db9:	push   esp
  421dba:	lock jne 0x421df2
  421dbd:	ins    BYTE PTR es:[edi],dx
  421dbe:	outs   dx,DWORD PTR ds:[esi]
  421dbf:	mov    cl,0x82
  421dc1:	add    DWORD PTR [eax],0x5c
  421dc4:	add    DWORD PTR [ebx+0x203cdd6d],0xffffffca
  421dcb:	jo     0x421e09
  421dcd:	(bad)  
  421dce:	pop    esi
  421dcf:	push   ebp
  421dd0:	ins    DWORD PTR es:[edi],dx
  421dd1:	xchg   edi,eax
  421dd2:	add    eax,0x37570233
  421dd7:	xchg   ebp,eax
  421dd8:	in     al,0xe8
  421dda:	sbb    DWORD PTR [ebp-0xe],eax
  421ddd:	and    ebx,edx
  421ddf:	pop    esi
  421de0:	popa   
  421de1:	bound  esp,QWORD PTR [edx]
  421de3:	or     DWORD PTR [edi+0x55],0x4e
  421de7:	mov    WORD PTR [edx+0x6c3b25bf],fs
  421ded:	pop    ds
  421dee:	mov    dh,0x71
  421df0:	mov    dl,0xe2
  421df2:	popa   
  421df3:	inc    eax
  421df4:	sbb    al,BYTE PTR [ebx+ebx*2]
  421df7:	test   al,0x99
  421df9:	and    dl,BYTE PTR [ebp-0x37]
  421dfc:	ins    BYTE PTR es:[edi],dx
  421dfd:	lods   al,BYTE PTR ds:[esi]
  421dfe:	jge    0x421d96
  421e00:	jmp    0x421d87
  421e02:	adc    DWORD PTR [ecx-0x56],edi
  421e05:	mov    eax,0x77028ae4
  421e0a:	loopne 0x421e1b
  421e0c:	xor    DWORD PTR [esi-0x47351651],0x565d6e85
  421e16:	dec    edi
  421e17:	xor    eax,DWORD PTR [edx]
  421e19:	fdiv   QWORD PTR [esi+0x162c32a8]
  421e1f:	and    ch,cl
  421e21:	int3   
  421e22:	xchg   esi,eax
  421e23:	inc    ecx
  421e24:	hlt    
  421e25:	push   ecx
  421e26:	inc    ecx
  421e27:	in     al,0x17
  421e29:	pop    es
  421e2a:	fisttp WORD PTR [ebx-0x9]
  421e2d:	jecxz  0x421dce
  421e2f:	call   0x93b8:0x2ec0f08d
  421e36:	xor    DWORD PTR [esi],eax
  421e38:	mov    ecx,0x9a810228
  421e3d:	cwde   
  421e3e:	cmp    cl,BYTE PTR [ebp-0x3c]
  421e41:	pop    ebp
  421e42:	sbb    al,0x74
  421e44:	mov    BYTE PTR [ebx-0x28adb9f9],ah
  421e4a:	out    dx,eax
  421e4b:	mov    ds:0xcbd21192,eax
  421e50:	and    BYTE PTR [eax+eiz*8],dl
  421e53:	cmp    DWORD PTR [ebx-0x384ea3ad],edx
  421e59:	lea    ebx,[eax]
  421e5b:	ret    0x3365
  421e5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e5f:	lods   al,BYTE PTR ds:[esi]
  421e60:	mov    ss,ecx
  421e62:	and    bh,BYTE PTR [edi-0x1c]
  421e65:	push   ebx
  421e66:	mov    edx,0x24f10f70
  421e6b:	stos   BYTE PTR es:[edi],al
  421e6c:	call   0x6081:0xd494dbde
  421e73:	add    ch,bl
  421e75:	jmp    DWORD PTR [esi-0x58a09e7c]
  421e7b:	and    BYTE PTR [bp+si-0x45],al
  421e7f:	sahf   
  421e80:	mov    fs,WORD PTR [edi-0x5e6faf81]
  421e86:	shl    BYTE PTR [edx+esi*2+0x48],cl
  421e8a:	or     DWORD PTR [edi],ebx
  421e8c:	mov    esi,esp
  421e8e:	jmp    DWORD PTR [edi]
  421e90:	(bad)  
  421e91:	jmp    0x5ff5953a
  421e96:	push   eax
  421e97:	outs   dx,DWORD PTR ds:[esi]
  421e98:	jnp    0x421e75
  421e9a:	js     0x421ebb
  421e9c:	jp     0x421f07
  421e9e:	xor    eax,0xb4e02d4a
  421ea3:	or     eax,0xd8f9561e
  421ea8:	cmc    
  421ea9:	mov    ecx,0xf12d4d1a
  421eae:	sbb    BYTE PTR [edx-0x25b10b14],dh
  421eb4:	or     BYTE PTR [edx],dl
  421eb6:	cmp    al,0x57
  421eb8:	cld    
  421eb9:	lds    eax,FWORD PTR [eax]
  421ebb:	daa    
  421ebc:	adc    DWORD PTR [edi],esp
  421ebe:	div    DWORD PTR [ebp+0x1f27566a]
  421ec4:	mov    edi,0xc2f8e5fa
  421ec9:	xor    esi,DWORD PTR [eax+0x61]
  421ecc:	mov    ds,WORD PTR [ecx-0x206bd4bc]
  421ed2:	retf   0x8f23
  421ed5:	inc    esp
  421ed6:	fistp  DWORD PTR [ebx]
  421ed8:	int    0x75
  421eda:	dec    ecx
  421edb:	lahf   
  421edc:	mov    ch,0x61
  421ede:	pop    esi
  421edf:	jmp    0xd899:0x735a32da
  421ee6:	xchg   ebp,eax
  421ee7:	jl     0x421f0c
  421ee9:	dec    ecx
  421eea:	std    
  421eeb:	jle    0x421f2a
  421eed:	sub    bl,BYTE PTR [edi+0x6efa64d4]
  421ef3:	leave  
  421ef4:	shl    DWORD PTR [esi-0x7be1b55d],cl
  421efa:	aad    0x8b
  421efc:	stos   DWORD PTR es:[edi],eax
  421efd:	pop    esi
  421efe:	pop    ecx
  421eff:	sahf   
  421f00:	xor    dh,BYTE PTR [edx+0x5b9c76f2]
  421f06:	mov    al,BYTE PTR [ecx]
  421f08:	mov    al,ds:0xb11fc207
  421f0d:	jnp    0x421ed0
  421f0f:	mov    esp,0x5c7be327
  421f14:	pop    ebx
  421f15:	(bad)  
  421f18:	or     eax,0x46e87674
  421f1d:	pop    edx
  421f1e:	adc    al,0x49
  421f20:	xchg   esi,eax
  421f21:	xor    DWORD PTR [ebp-0x7c],ebp
  421f24:	aas    
  421f25:	dec    ebp
  421f26:	jno    0x421efc
  421f28:	ds ds push eax
  421f2b:	and    dl,BYTE PTR [ecx-0x2f8ca8a2]
  421f31:	and    eax,0x69452512
  421f36:	jae    0x421f46
  421f38:	sub    DWORD PTR [esi-0x30e9feca],esp
  421f3e:	lock pusha 
  421f40:	or     eax,0x5fbef386
  421f45:	pop    edi
  421f46:	repnz cs es push 0xffe602a4
  421f4e:	and    ebx,esp
  421f50:	xchg   esp,eax
  421f51:	sbb    ecx,DWORD PTR [esi]
  421f53:	shl    BYTE PTR ds:0x979ee34e,0x87
  421f5a:	popa   
  421f5b:	mov    ah,0x65
  421f5d:	push   edx
  421f5e:	inc    ebp
  421f5f:	push   edi
  421f60:	push   0x28f0db2b
  421f65:	lock stos DWORD PTR es:[edi],eax
  421f67:	inc    ebx
  421f68:	jecxz  0x421fad
  421f6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f6b:	ja     0x421efa
  421f6d:	or     DWORD PTR [edi],edi
  421f6f:	shr    dl,cl
  421f71:	cmc    
  421f72:	mov    ds:0x22ca4a0b,al
  421f77:	call   0xfbef:0x568486c1
  421f7e:	add    DWORD PTR [eax-0x2455d757],0xd250822f
  421f88:	pop    ss
  421f89:	sub    al,0xa7
  421f8b:	into   
  421f8c:	pop    ecx
  421f8d:	add    BYTE PTR [edx+0x46368ecc],0x1e
  421f94:	xlat   BYTE PTR ds:[ebx]
  421f95:	adc    BYTE PTR [eax],dl
  421f97:	pop    es
  421f98:	ror    DWORD PTR [ecx+eax*2+0x5a52549c],0xfb
  421fa0:	in     eax,dx
  421fa1:	cmp    ah,BYTE PTR [edi+esi*2-0x7b5dd25c]
  421fa8:	call   0x5dad8bc8
  421fad:	or     DWORD PTR ds:0x5af52865,edx
  421fb3:	mov    ah,0xd6
  421fb5:	sub    eax,DWORD PTR [esi+0x11f07d8c]
  421fbb:	(bad)  
  421fbc:	push   edi
  421fbd:	inc    ebx
  421fbe:	test   al,0xf
  421fc0:	lahf   
  421fc1:	popf   
  421fc2:	cmp    eax,0xa81e1c51
  421fc7:	loope  0x422036
  421fc9:	clc    
  421fca:	pop    esp
  421fcb:	pop    esi
  421fcc:	lahf   
  421fcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fce:	(bad)  
  421fcf:	fs add eax,0xd7ce0d3
  421fd5:	mov    esi,0x17a89b63
  421fda:	inc    ebp
  421fdb:	sub    DWORD PTR [esi+eiz*2+0x9bce04],edx
  421fe2:	sahf   
  421fe3:	clc    
  421fe4:	popa   
  421fe5:	sub    ebp,DWORD PTR [edi-0x23]
  421fe8:	out    0x2a,al
  421fea:	nop
  421feb:	out    dx,eax
  421fec:	adc    DWORD PTR [edi-0x6dffc4dc],edx
  421ff2:	adc    ecx,eax
  421ff4:	pop    ebp
  421ff5:	bound  ecx,QWORD PTR ss:[ebp-0x1f6eb03d]
  421ffc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ffd:	sbb    BYTE PTR [ebx-0x1f461b7b],dh
  422003:	mov    ah,0x8a
  422005:	in     eax,0x5
  422007:	call   0xfec:0xe99769f4
  42200e:	inc    ebp
  42200f:	adc    al,0xb9
  422011:	mov    WORD PTR [edi-0x4e],gs
  422014:	jbe    0x422048
  422016:	mov    esp,0xdb0a3e97
  42201b:	mov    dh,BYTE PTR [edi+0x3d]
  42201e:	xchg   ebx,eax
  42201f:	scas   eax,DWORD PTR es:[edi]
  422020:	sub    al,0xb1
  422022:	pop    ds
  422023:	popa   
  422024:	or     al,0xe8
  422026:	lds    ebx,FWORD PTR [eax+0x28]
  422029:	push   eax
  42202a:	lods   al,BYTE PTR ds:[esi]
  42202b:	push   ds
  42202c:	repnz add bh,BYTE PTR [edi+ebx*1-0x40]
  422031:	xchg   edx,eax
  422032:	ror    DWORD PTR [ebx-0x414f4674],1
  422038:	outs   dx,BYTE PTR ds:[esi]
  422039:	sub    DWORD PTR [eax],ebp
  42203b:	push   es
  42203c:	pop    esp
  42203d:	mov    esi,0xfb73435a
  422042:	push   cs
  422043:	ror    DWORD PTR [esi-0x57],1
  422046:	(bad)
  422049:	xor    BYTE PTR ds:0x595adf1d,dl
  42204f:	mov    edx,0xd14a402f
  422054:	adc    bl,BYTE PTR [ecx-0x3fe4e5cb]
  42205a:	mov    dl,0x15
  42205c:	test   sp,ax
  42205f:	ror    cl,1
  422061:	int3   
  422062:	scas   eax,DWORD PTR es:[edi]
  422063:	mov    WORD PTR [esi-0x18ad7995],es
  422069:	adc    dl,bl
  42206b:	call   0xf365a7e0
  422070:	dec    edi
  422071:	(bad)  
  422072:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422073:	and    esi,esi
  422075:	fldenv [eax+esi*1+0x1126eb6]
  42207c:	test   DWORD PTR [ebx+0x1272bb30],ecx
  422082:	xchg   DWORD PTR [ebx-0xf4958f6],esp
  422088:	push   0xffffffd2
  42208a:	dec    esi
  42208b:	cmp    edx,edi
  42208d:	push   es
  42208e:	std    
  42208f:	fsub   DWORD PTR [ecx-0x3e827db5]
  422095:	pop    edi
  422096:	clc    
  422097:	out    dx,al
  422098:	or     BYTE PTR [ebx+ecx*2-0x6a0c23a2],ch
  42209f:	mov    eax,0x34cd086f
  4220a4:	dec    ecx
  4220a5:	jge    0x4220f8
  4220a7:	cwde   
  4220a8:	mov    cl,0x5d
  4220aa:	and    dh,ah
  4220ac:	ret    
  4220ad:	stc    
  4220ae:	xchg   ebp,eax
  4220af:	fcmovb st,st(1)
  4220b1:	push   ds
  4220b2:	shr    BYTE PTR [ebp+0x73],0xa3
  4220b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220b7:	jle    0x422067
  4220b9:	loope  0x422101
  4220bb:	push   cs
  4220bc:	dec    eax
  4220bd:	int    0xa8
  4220bf:	push   ebp
  4220c0:	ret    
  4220c1:	inc    eax
  4220c2:	lea    edx,[ecx]
  4220c4:	pop    ecx
  4220c5:	sahf   
  4220c6:	push   esi
  4220c7:	inc    ecx
  4220c8:	es ret 
  4220ca:	sub    dl,BYTE PTR [edx-0x28]
  4220cd:	lods   eax,DWORD PTR ds:[esi]
  4220ce:	shl    cl,0x84
  4220d1:	aaa    
  4220d2:	push   0xffffffc0
  4220d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220d5:	sti    
  4220d6:	xor    esi,DWORD PTR [edi]
  4220d8:	lods   eax,DWORD PTR ds:[esi]
  4220d9:	jge    0x4220d7
  4220db:	sub    bl,BYTE PTR [eax-0x32]
  4220de:	pop    edx
  4220df:	mov    bh,0x76
  4220e1:	dec    edx
  4220e2:	retf   
  4220e3:	mov    dh,0x59
  4220e5:	sbb    DWORD PTR [ebp-0xd],ebp
  4220e8:	enter  0xd2ce,0x51
  4220ec:	loop   0x42216b
  4220ee:	mov    edx,0x5d68f2b3
  4220f3:	push   ebx
  4220f4:	lods   eax,DWORD PTR ds:[esi]
  4220f5:	fcmovu st,st(5)
  4220f7:	fs mov cl,0x29
  4220fa:	jmp    0x89eb71bd
  4220ff:	stos   BYTE PTR es:[edi],al
  422100:	stc    
  422101:	loopne 0x4220a3
  422103:	lea    ebp,[ebp-0x40]
  422106:	dec    esi
  422107:	xor    BYTE PTR [ebx+0x2c],0xb0
  42210b:	ret    
  42210c:	fisttp WORD PTR [ecx-0x6]
  42210f:	push   ebx
  422110:	mov    ah,BYTE PTR [ebx*8-0x663ebfbc]
  422117:	mov    edx,0x6ecf4529
  42211c:	inc    eax
  42211d:	mov    ds:0x3c67916a,al
  422122:	pop    ebx
  422123:	std    
  422124:	pop    es
  422125:	pop    eax
  422126:	push   es
  422127:	imul   ecx,DWORD PTR [ebp-0x5f4cde0b],0xacd9ba30
  422131:	call   0x99d5e22a
  422136:	mov    edi,0xa35e027f
  42213b:	clc    
  42213c:	in     al,0x1e
  42213e:	arpl   dx,si
  422140:	les    edx,FWORD PTR [edi-0x3b]
  422143:	gs inc ebx
  422145:	push   0xccb8db11
  42214a:	sbb    dh,cl
  42214c:	jge    0x4221ac
  42214e:	cmp    ch,BYTE PTR [ebp+0x19]
  422151:	xchg   ecx,eax
  422152:	jb     0x422156
  422154:	sbb    DWORD PTR [esi+esi*1-0x58],0xe731ac06
  42215c:	adc    al,0xef
  42215e:	sub    eax,0x2b809020
  422163:	dec    ebp
  422164:	inc    ecx
  422165:	cwde   
  422166:	xchg   esp,eax
  422167:	les    esp,FWORD PTR [eax]
  422169:	jbe    0x422192
  42216b:	(bad)  
  42216c:	(bad)  
  42216d:	jge    0x42215a
  42216f:	mov    ch,0x49
  422171:	in     al,dx
  422172:	je     0x4221ed
  422174:	sub    eax,0xe7a79fcf
  422179:	shl    DWORD PTR [esi+0x50],1
  42217c:	fdivrp st(1),st
  42217e:	sub    esp,DWORD PTR [ebp-0x23db600f]
  422184:	call   0x59d03b5
  422189:	sub    BYTE PTR [eax+ebx*2+0x261e3ec],al
  422190:	fsub   QWORD PTR [edx]
  422192:	scas   eax,DWORD PTR es:[edi]
  422193:	ins    DWORD PTR es:[edi],dx
  422194:	sti    
  422195:	pop    ebp
  422196:	addr16 mov dl,0x57
  422199:	cdq    
  42219a:	xor    al,0x90
  42219c:	dec    edi
  42219d:	sbb    DWORD PTR [ebx+0x2b],0xffffffd0
  4221a1:	fistp  QWORD PTR ds:0xd8e7071
  4221a7:	xor    al,0x3d
  4221a9:	push   esi
  4221aa:	les    edx,FWORD PTR [edx-0x6ffc13c5]
  4221b0:	lods   al,BYTE PTR ds:[esi]
  4221b1:	xchg   ebp,eax
  4221b2:	outs   dx,DWORD PTR ds:[esi]
  4221b3:	push   es
  4221b4:	pop    edi
  4221b5:	jo     0x422180
  4221b7:	icebp  
  4221b8:	retf   
  4221b9:	cmp    BYTE PTR [ebp+eiz*2-0x77],ch
  4221bd:	and    eax,DWORD PTR [ebx-0x76]
  4221c0:	mov    eax,0x1ea1e2c5
  4221c5:	lahf   
  4221c6:	lea    esp,[eax-0x3a4608c5]
  4221cc:	fisubr WORD PTR [ecx]
  4221ce:	lock inc BYTE PTR [ebp-0x471d34c1]
  4221d5:	fist   WORD PTR [edx+edi*2+0x1d]
  4221d9:	xchg   esp,eax
  4221da:	(bad)  
  4221db:	icebp  
  4221dc:	lea    ebp,[edx+0x64]
  4221df:	(bad)  [esi+0x64]
  4221e2:	adc    al,0xfb
  4221e4:	sar    ebx,1
  4221e6:	imul   esi,DWORD PTR [ecx],0xffffff96
  4221e9:	jecxz  0x42223f
  4221eb:	or     DWORD PTR gs:[edx+0x21b7bab0],esp
  4221f2:	jnp    0x422258
  4221f4:	xor    edi,ecx
  4221f6:	pop    ebx
  4221f7:	loop   0x42226b
  4221f9:	cmp    dl,BYTE PTR [edx+ebx*2]
  4221fc:	push   ds
  4221fd:	mov    ah,ah
  4221ff:	or     DWORD PTR [edx+0x5b],edx
  422202:	xchg   DWORD PTR [esi],edi
  422204:	clc    
  422205:	and    eax,0x49260dae
  42220a:	push   ebp
  42220b:	xchg   ebp,eax
  42220c:	scas   al,BYTE PTR es:[edi]
  42220d:	adc    eax,0xa49fb04b
  422212:	mov    bh,cl
  422214:	sbb    bh,dl
  422216:	jb     0x4221cb
  422218:	(bad)  
  422219:	ins    BYTE PTR es:[edi],dx
  42221a:	ficom  WORD PTR [ebx-0x3d]
  42221d:	hlt    
  42221e:	push   edx
  42221f:	push   ebx
  422220:	xor    ebp,edx
  422222:	lods   eax,DWORD PTR ds:[esi]
  422223:	cmp    BYTE PTR [edi+0x7f],bh
  422226:	ja     0x42227b
  422228:	mov    edx,0xfbee1547
  42222d:	in     al,0x5a
  42222f:	mov    esp,DWORD PTR [ecx-0x2e]
  422232:	inc    ecx
  422233:	call   0x9cb4eee9
  422238:	pop    ecx
  422239:	jle    0x4221cc
  42223b:	imul   esp,DWORD PTR [ebx+0x5c],0x37084db1
  422242:	in     al,0xbc
  422244:	push   0x35
  422246:	fisubr WORD PTR [ebx]
  422248:	mov    es,ebp
  42224a:	dec    ecx
  42224b:	dec    esp
  42224c:	cmc    
  42224d:	aas    
  42224e:	stc    
  42224f:	clc    
  422250:	or     edi,DWORD PTR ss:[edi+0x23]
  422254:	inc    esp
  422255:	push   eax
  422256:	repnz scas eax,DWORD PTR es:[edi]
  422258:	push   eax
  422259:	mov    esp,0xf664a922
  42225e:	jmp    0x6f26:0x5a2eac96
  422265:	test   eax,0xdbc1a700
  42226a:	mov    al,0x5d
  42226c:	(bad)  
  42226d:	pop    DWORD PTR [ecx-0x14]
  422270:	mov    ecx,0xff49feb
  422275:	test   eax,0x60b91f82
  42227a:	pop    ebp
  42227b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42227c:	jns    0x4222f3
  42227e:	aad    0x6a
  422280:	sbb    DWORD PTR [edx],ecx
  422282:	lods   al,BYTE PTR ds:[esi]
  422283:	push   cs
  422284:	popa   
  422285:	pop    ecx
  422286:	data16 xor bh,0xb7
  42228a:	nop
  42228b:	neg    DWORD PTR [edi]
  42228d:	add    BYTE PTR [edx+eiz*2],cl
  422290:	mov    bl,0x85
  422292:	pop    ebx
  422293:	inc    ebp
  422294:	push   es
  422295:	xchg   edx,eax
  422296:	test   BYTE PTR [edx],ch
  422298:	adc    BYTE PTR [eax+0x3dd07460],0x4f
  42229f:	call   0x532d:0xf482d3b1
  4222a6:	jb     0x4222f3
  4222a8:	lahf   
  4222a9:	xor    eax,0xeded501d
  4222ae:	push   edi
  4222af:	loope  0x422256
  4222b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222b2:	jg     0x42223c
  4222b4:	add    al,0x7e
  4222b6:	(bad)  
  4222b7:	clc    
  4222b8:	leave  
  4222b9:	mov    ebx,0x26eddaa5
  4222be:	inc    edx
  4222bf:	out    0xec,al
  4222c1:	hlt    
  4222c2:	out    0x5a,eax
  4222c4:	push   0xa2b18721
  4222c9:	and    edi,eax
  4222cb:	jno    0x42230a
  4222cd:	push   es
  4222ce:	pop    eax
  4222cf:	(bad)  
  4222d0:	and    eax,0x5462829a
  4222d5:	mov    ds:0x83504738,al
  4222da:	outs   dx,DWORD PTR ds:[esi]
  4222db:	and    cl,BYTE PTR [ecx+0x66]
  4222de:	add    eax,0x36d57a03
  4222e3:	(bad)  
  4222e4:	push   ebp
  4222e5:	sub    ebx,edi
  4222e7:	cmp    BYTE PTR [ebx-0x14],dh
  4222ea:	sbb    DWORD PTR [edx+ecx*8-0x3b],ecx
  4222ee:	pop    edx
  4222ef:	mov    ebp,0x2631abce
  4222f4:	(bad)  
  4222f7:	mov    eax,ds:0x2ad3f869
  4222fc:	pushw  ss
  4222fe:	add    dh,BYTE PTR [eax-0x6b]
  422301:	push   cs
  422302:	or     BYTE PTR [edi-0x643a5c76],dh
  422308:	mov    ds:0xd92dd2a4,eax
  42230d:	inc    eax
  42230e:	adc    al,BYTE PTR [edx+0x395ad1f2]
  422314:	leave  
  422315:	push   edi
  422316:	daa    
  422317:	dec    ebx
  422318:	xchg   esi,eax
  422319:	adc    al,0x2a
  42231b:	test   eax,0x23a46819
  422320:	fs mov esi,0xefa94b25
  422326:	mov    ?,WORD PTR [esi+0x35]
  422329:	mov    al,0xe0
  42232b:	cdq    
  42232c:	add    edx,DWORD PTR [ecx-0x72d4d667]
  422332:	in     eax,dx
  422333:	repz call 0xfc577a1e
  422339:	sbb    cl,bl
  42233b:	fs das 
  42233d:	ja     0x4223a8
  42233f:	adc    eax,DWORD PTR [edx]
  422341:	push   ebx
  422342:	mov    bh,0x58
  422344:	mov    ch,0x93
  422346:	std    
  422347:	xor    BYTE PTR ds:0x5c1bafc0,dl
  42234d:	fst    QWORD PTR [eax+eiz*1-0xf]
  422351:	pop    esi
  422352:	mov    ecx,0xdb1bb587
  422357:	js     0x422331
  422359:	daa    
  42235a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42235b:	imul   edi,edx,0xffffffb5
  42235e:	enter  0x5e4a,0x4e
  422362:	ja     0x4223d3
  422364:	adc    DWORD PTR [eax+0x79a7a9e],eax
  42236a:	scas   eax,DWORD PTR es:[edi]
  42236b:	sbb    BYTE PTR [edi],cl
  42236d:	mov    al,ds:0x6ffea46f
  422372:	inc    edx
  422373:	outs   dx,BYTE PTR ds:[esi]
  422374:	repnz xchg ebp,eax
  422376:	push   0x49
  422378:	(bad)  
  422379:	stos   DWORD PTR es:[edi],eax
  42237a:	xchg   ebp,eax
  42237b:	fnsave [esi+0x663c3603]
  422381:	loope  0x422316
  422383:	sub    esp,edx
  422385:	lods   al,BYTE PTR ds:[esi]
  422386:	std    
  422387:	int    0xcf
  422389:	pop    eax
  42238a:	fidiv  DWORD PTR [edx]
  42238c:	fdivp  st(1),st
  42238e:	popf   
  42238f:	dec    edi
  422390:	push   ds
  422391:	in     eax,dx
  422392:	mul    ch
  422394:	arpl   WORD PTR [esi-0x42],bx
  422397:	inc    esp
  422398:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422399:	mov    ebx,0x54d07702
  42239e:	push   esi
  42239f:	aas    
  4223a0:	ret    0x3fe8
  4223a3:	xchg   ecx,eax
  4223a4:	aam    0xe0
  4223a6:	xchg   ecx,eax
  4223a7:	je     0x422330
  4223a9:	cli    
  4223aa:	pop    eax
  4223ab:	ret    
  4223ac:	dec    edx
  4223ad:	fwait
  4223ae:	mov    ah,0x7b
  4223b0:	sar    ebx,0xff
  4223b3:	mov    ss,WORD PTR [ecx+0xa]
  4223b6:	sti    
  4223b7:	rol    edx,0x8c
  4223ba:	outs   dx,DWORD PTR ds:[esi]
  4223bb:	mov    ebx,fs
  4223bd:	xchg   edx,eax
  4223be:	imul   esi,ebp,0x1a70d099
  4223c4:	fs push edx
  4223c6:	or     al,0xc0
  4223c8:	cmp    al,0x1b
  4223ca:	outs   dx,DWORD PTR ds:[esi]
  4223cb:	xchg   ebx,eax
  4223cc:	cmp    cl,bh
  4223ce:	push   ecx
  4223cf:	mov    ch,0x95
  4223d1:	cmp    DWORD PTR [bx-0x2b],edx
  4223d5:	or     dh,bl
  4223d7:	dec    esp
  4223d8:	jae    0x422385
  4223da:	lods   al,BYTE PTR ds:[esi]
  4223db:	mov    cl,0xbe
  4223dd:	out    0xbc,al
  4223df:	fnstsw WORD PTR [edi-0x28ae8d98]
  4223e5:	push   ebp
  4223e6:	sub    al,0x3f
  4223e8:	jne    0x422435
  4223ea:	repz in al,0x35
  4223ed:	imul   ecx,DWORD PTR [eax-0x63c8b651],0x76
  4223f4:	sbb    BYTE PTR [edi+ebx*2-0x70],cl
  4223f8:	jl     0x4223c8
  4223fa:	and    DWORD PTR [edx-0x1c],ebx
  4223fd:	push   edi
  4223fe:	sahf   
  4223ff:	xor    ebx,DWORD PTR [esp+edi*8+0x7dedc6fd]
  422406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422407:	pop    ebx
  422408:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422409:	dec    ecx
  42240a:	jno    0x4223df
  42240c:	scas   al,BYTE PTR es:[edi]
  42240d:	mov    dh,0xf7
  42240f:	mov    ds:0xa3b45a87,eax
  422414:	mov    dh,0xf6
  422416:	call   0x644d2912
  42241b:	shl    BYTE PTR [ebx+esi*8-0x7e],cl
  42241f:	ss inc esp
  422421:	xchg   ebx,eax
  422422:	aas    
  422423:	outs   dx,BYTE PTR ds:[esi]
  422424:	fcmove st,st(5)
  422426:	ret    0x3923
  422429:	(bad)  
  42242a:	sbb    DWORD PTR [ecx+ecx*4-0x7b],ebp
  42242e:	dec    edx
  42242f:	inc    ecx
  422430:	iret   
  422431:	inc    esp
  422432:	call   DWORD PTR [ebx-0x5bbc16c8]
  422438:	outs   dx,BYTE PTR ds:[esi]
  422439:	inc    ecx
  42243a:	arpl   WORD PTR [ecx+0x3d],sp
  42243d:	inc    edx
  42243e:	xchg   BYTE PTR ds:0xdb0f5a4b,cl
  422444:	aad    0xe7
  422446:	or     DWORD PTR [eax],ebx
  422448:	sub    al,0x24
  42244a:	aaa    
  42244b:	pop    edi
  42244c:	cld    
  42244d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42244e:	dec    eax
  42244f:	cli    
  422450:	ins    DWORD PTR es:[edi],dx
  422451:	mov    ds:0x877ac785,eax
  422456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422458:	dec    edx
  422459:	jmp    0x42248f
  42245b:	pop    ecx
  42245c:	(bad)  
  42245f:	sbb    dl,BYTE PTR [eax-0x1f]
  422462:	enter  0x89eb,0xeb
  422466:	nop
  422467:	ret    0xd902
  42246a:	outs   dx,BYTE PTR ds:[esi]
  42246b:	xchg   esi,eax
  42246c:	sub    DWORD PTR [edx+0x2cda36e1],edi
  422472:	out    dx,al
  422473:	inc    DWORD PTR [ecx+0x6f]
  422476:	push   es
  422477:	pop    eax
  422478:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422479:	pop    ss
  42247a:	dec    ebp
  42247b:	inc    ebp
  42247c:	xor    ch,BYTE PTR [edi]
  42247e:	rcl    BYTE PTR [ebp+0x1d],1
  422481:	xchg   esp,eax
  422482:	mov    esp,0x14c9337
  422487:	inc    ecx
  422488:	fst    DWORD PTR [eax]
  42248a:	pusha  
  42248b:	pop    edx
  42248c:	mov    ebx,0x134379af
  422491:	push   ebx
  422492:	push   ss
  422493:	pop    ds
  422494:	imul   esp,DWORD PTR [ebx],0xffffffb0
  422497:	div    BYTE PTR [edx]
  422499:	test   DWORD PTR [edi],0x90b26c7d
  42249f:	cld    
  4224a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224a1:	adc    al,0xe0
  4224a3:	fdivp  st(3),st
  4224a5:	push   esp
  4224a6:	xor    DWORD PTR [ebp-0x31a60edb],esi
  4224ac:	xor    dl,al
  4224ae:	or     eax,0xfae1d218
  4224b3:	sbb    ah,BYTE PTR [eax+ebp*8+0x71]
  4224b7:	pop    ds
  4224b8:	sub    esi,eax
  4224ba:	shr    ah,1
  4224bc:	cmp    dx,WORD PTR [edx+0x3d]
  4224c0:	int    0x26
  4224c2:	in     eax,0x41
  4224c4:	push   0xffffff86
  4224c6:	mov    ?,WORD PTR [ebx-0x2e]
  4224c9:	test   DWORD PTR [edi+ecx*8],esi
  4224cc:	jp     0x4224d6
  4224ce:	xlat   BYTE PTR ds:[ebx]
  4224cf:	ja     0x422465
  4224d1:	fist   WORD PTR [edx-0x32]
  4224d4:	sub    al,0xe
  4224d6:	lock mov edx,0x62bf9180
  4224dc:	imul   DWORD PTR [ecx+0x78]
  4224df:	addr16 push esi
  4224e1:	sti    
  4224e2:	xor    eax,0x6eb6dea7
  4224e7:	cmp    DWORD PTR [esi],edx
  4224e9:	test   DWORD PTR [edi+eiz*4-0x4532c857],0xc02b39b2
  4224f4:	mov    eax,ds:0x857778e8
  4224f9:	mov    al,0x1b
  4224fb:	loopne 0x42254c
  4224fd:	in     al,dx
  4224fe:	jno    0x4224e0
  422500:	je     0x42253f
  422502:	mov    edi,0xe6e5b4bd
  422507:	mov    ds:0xc298cdd0,eax
  42250c:	mov    cl,0x4d
  42250e:	mov    edx,0x7ff6ea0b
  422513:	sbb    BYTE PTR [edi-0x17],dh
  422516:	hlt    
  422517:	add    BYTE PTR [esi+0x8],ah
  42251a:	test   BYTE PTR [ebp-0x2fb77624],dh
  422520:	sti    
  422521:	int    0x4e
  422523:	retf   
  422524:	inc    edi
  422525:	popa   
  422526:	xchg   ebx,eax
  422527:	dec    edi
  422528:	scas   al,BYTE PTR es:[edi]
  422529:	(bad)  
  42252a:	loopne 0x422560
  42252c:	adc    eax,esi
  42252e:	retf   0xb308
  422531:	or     ecx,DWORD PTR [ebp+ebp*2+0x45b37946]
  422538:	or     dl,BYTE PTR [edi]
  42253a:	out    0x92,al
  42253c:	les    ebp,FWORD PTR [ecx+0x3]
  42253f:	xchg   dl,bh
  422541:	push   ecx
  422542:	jae    0x422588
  422544:	pusha  
  422545:	shl    BYTE PTR [edx-0x33d398fc],1
  42254b:	jnp    0x422590
  42254d:	push   ss
  42254e:	adc    al,0x97
  422550:	fwait
  422551:	cwde   
  422552:	cmp    al,0xc
  422554:	mov    ecx,0xf5a1de2a
  422559:	or     eax,0xa2b5cc6c
  42255e:	and    al,BYTE PTR [esi]
  422560:	pop    ebp
  422561:	mov    al,ds:0x43a59e18
  422566:	mov    edx,0x8579e901
  42256b:	out    0x6d,eax
  42256d:	jmp    0x2144cbc3
  422572:	in     al,0x8e
  422574:	mov    al,0x66
  422576:	addr16 ss sbb eax,0x70a0e19e
  42257d:	xor    dl,BYTE PTR [edi-0x5d]
  422580:	push   edi
  422581:	add    al,0x5
  422583:	test   DWORD PTR [esi+0x4e],ebx
  422586:	out    dx,al
  422587:	sub    edx,DWORD PTR [edi-0x3f]
  42258a:	mov    ecx,0x8086c209
  42258f:	int    0x3e
  422591:	scas   al,BYTE PTR es:[edi]
  422592:	nop
  422593:	shr    DWORD PTR [ebx+ecx*4],1
  422596:	std    
  422597:	lock int3 
  422599:	js     0x422589
  42259b:	pop    eax
  42259c:	adc    ebp,DWORD PTR [ecx+0x28]
  42259f:	xchg   ebp,eax
  4225a0:	mov    cl,0x8e
  4225a2:	pop    ebp
  4225a3:	js     0x422622
  4225a5:	xor    DWORD PTR [ecx-0x95937d1],eax
  4225ab:	jmp    0xeba10541
  4225b0:	push   0xffffffad
  4225b2:	sbb    esi,DWORD PTR ds:0xb786f9aa
  4225b8:	je     0x4225f9
  4225ba:	js     0x42259b
  4225bc:	jbe    0x422589
  4225be:	jecxz  0x422607
  4225c0:	clc    
  4225c1:	mov    ch,BYTE PTR [ecx]
  4225c3:	inc    esi
  4225c4:	push   cs
  4225c5:	nop
  4225c6:	pop    ebx
  4225c7:	fldenv [esi+0x15dd1464]
  4225cd:	mov    ecx,0x99e754df
  4225d2:	je     0x422638
  4225d4:	mov    ss,WORD PTR [esi-0x667219e3]
  4225da:	add    DWORD PTR [edi],ebx
  4225dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225dd:	push   ds
  4225de:	mov    cl,0x82
  4225e0:	test   DWORD PTR [edx-0x64],0x1fe6aa0e
  4225e7:	outs   dx,DWORD PTR ds:[esi]
  4225e8:	outs   dx,BYTE PTR ds:[esi]
  4225e9:	mov    edi,0x784a06bc
  4225ee:	xchg   BYTE PTR [edx+0xd],dh
  4225f1:	lea    ebp,[edi+0x11]
  4225f4:	sub    al,0xb5
  4225f6:	cmp    DWORD PTR [bx+si],edx
  4225f9:	(bad)  
  4225fa:	jnp    0x4225a1
  4225fc:	mov    bh,0x5a
  4225fe:	push   0x9480effb
  422603:	cwde   
  422604:	mov    DWORD PTR [esi],eax
  422606:	and    BYTE PTR [edx+edx*4-0x1a6644],0xd7
  42260e:	nop
  42260f:	push   0xfffffff8
  422611:	xchg   edi,eax
  422612:	jbe    0x422660
  422614:	fsub   QWORD PTR [esi+eiz*1]
  422617:	pop    ebx
  422618:	je     0x42267f
  42261a:	mov    WORD PTR [eax-0x7a],cs
  42261d:	mov    al,ds:0x63c4265e
  422622:	ds das 
  422624:	out    0xbc,al
  422626:	mov    DWORD PTR [edi-0x5f],eax
  422629:	pop    esi
  42262a:	jecxz  0x4225b5
  42262c:	ins    DWORD PTR es:[edi],dx
  42262d:	in     eax,0x55
  42262f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422630:	add    DWORD PTR [ecx],esi
  422632:	enter  0xdaba,0x4
  422636:	aam    0x46
  422638:	les    edi,FWORD PTR [esi-0x4efafdc]
  42263e:	mov    WORD PTR [ebx],ds
  422640:	xchg   ebp,eax
  422641:	sub    DWORD PTR ds:0xd605b563,ebp
  422647:	in     al,0x81
  422649:	mov    al,0xea
  42264b:	int3   
  42264c:	mov    bl,0xee
  42264e:	scas   al,BYTE PTR es:[edi]
  42264f:	add    cl,BYTE PTR [esi+0x62]
  422652:	stc    
  422653:	in     al,dx
  422654:	inc    DWORD PTR [edx-0x93170be]
  42265a:	pushf  
  42265b:	les    ebx,FWORD PTR [ecx]
  42265d:	xchg   edi,eax
  42265e:	mov    edx,0x8c8eab59
  422663:	mov    ?,WORD PTR [edx-0x80]
  422666:	daa    
  422667:	pusha  
  422668:	inc    ecx
  422669:	cmp    eax,0x29edacf8
  42266e:	sub    DWORD PTR [edx+0x2f8f0e5d],edi
  422674:	or     BYTE PTR [ebx],bl
  422676:	ror    DWORD PTR [ebx+eax*1+0x7b80b368],0x18
  42267e:	mov    bh,0x32
  422680:	pop    esp
  422681:	or     BYTE PTR ds:0xf4577b32,ch
  422687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422688:	dec    esi
  422689:	xchg   BYTE PTR [ebp+esi*4+0x52],dh
  42268d:	addr16 adc al,0xfa
  422690:	pop    ebp
  422691:	hlt    
  422692:	cli    
  422693:	push   ebx
  422694:	dec    eax
  422695:	add    BYTE PTR [eax+eax*4],ch
  422698:	cld    
  422699:	mov    bh,BYTE PTR [bx+di-0x7be8]
  42269e:	inc    ebx
  42269f:	dec    edx
  4226a0:	dec    ecx
  4226a1:	fbstp  TBYTE PTR [ecx]
  4226a3:	fimul  DWORD PTR [esi+0x27]
  4226a6:	fcomp  DWORD PTR [ebx+0x35fcc5f0]
  4226ac:	test   DWORD PTR [esi-0x4fa6b116],0x330ca1e
  4226b6:	repnz aaa 
  4226b8:	fstp   QWORD PTR [ecx+0x7059f8]
  4226be:	rol    eax,cl
  4226c0:	xor    esp,DWORD PTR [ebx-0x68]
  4226c3:	icebp  
  4226c4:	xor    eax,0xdf6c7ebf
  4226c9:	sub    BYTE PTR [esi+0x6d],dl
  4226cc:	xchg   ah,dl
  4226ce:	jl     0x4226d9
  4226d0:	pusha  
  4226d1:	leavew 
  4226d3:	stc    
  4226d4:	xchg   edx,ecx
  4226d6:	enter  0x844a,0xe0
  4226da:	push   ds
  4226db:	loopne 0x422669
  4226dd:	xchg   ebx,eax
  4226de:	adc    DWORD PTR [edi],ebp
  4226e0:	xor    ecx,esp
  4226e2:	(bad)
  4226e5:	out    dx,eax
  4226e6:	cmp    bl,BYTE PTR [ebx+0x2d]
  4226e9:	inc    ebx
  4226ea:	push   ebp
  4226eb:	fs fucomi st,st(7)
  4226ee:	popf   
  4226ef:	je     0x4226b7
  4226f1:	nop
  4226f2:	lods   al,BYTE PTR ds:[esi]
  4226f3:	sub    DWORD PTR [edi-0x7f793858],0x71dacc64
  4226fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226fe:	add    ecx,DWORD PTR [esi]
  422700:	and    esi,ecx
  422702:	inc    edi
  422703:	retf   
  422704:	retf   
  422705:	jb     0x42277e
  422707:	in     al,0x3e
  422709:	repz addr16 daa 
  42270c:	sub    bh,BYTE PTR [ebx-0x4b]
  42270f:	pusha  
  422710:	std    
  422711:	dec    ecx
  422712:	ins    DWORD PTR es:[edi],dx
  422713:	push   es
  422714:	cld    
  422715:	stos   BYTE PTR es:[edi],al
  422716:	push   0x187c58ab
  42271b:	mov    bh,0x0
  42271d:	jns    0x422790
  42271f:	clc    
  422720:	scas   eax,DWORD PTR es:[edi]
  422721:	and    DWORD PTR [edx+0x45],ebx
  422724:	imul   esi,ebp,0x249158a3
  42272a:	or     ecx,DWORD PTR [edi+0x4b]
  42272d:	in     eax,dx
  42272e:	cli    
  42272f:	cwde   
  422730:	jne    0x422774
  422732:	inc    eax
  422733:	or     DWORD PTR [esp+edi*2-0x7c401e36],0x61
  42273b:	fsub   st(6),st
  42273d:	xchg   esi,ebx
  42273f:	xchg   esi,eax
  422740:	test   al,0x89
  422742:	add    al,0x9f
  422744:	je     0x422736
  422746:	ret    0x9550
  422749:	inc    esi
  42274a:	adc    eax,0x4dab62e2
  42274f:	das    
  422750:	push   edi
  422751:	xchg   edx,eax
  422752:	sbb    DWORD PTR [ebp+0x17d1b9fe],ebp
  422758:	(bad)  
  422759:	mov    dh,0x6b
  42275b:	dec    esp
  42275c:	stos   BYTE PTR es:[edi],al
  42275d:	jg     0x42279a
  42275f:	enter  0xd38c,0x6b
  422763:	mov    WORD PTR ss:[ecx],cs
  422766:	mov    eax,ds:0x2bf57e54
  42276b:	fwait
  42276c:	scas   eax,DWORD PTR es:[edi]
  42276d:	and    al,0x2e
  42276f:	js     0x422778
  422771:	aaa    
  422772:	cli    
  422773:	push   edi
  422774:	mov    ebx,0x5e120a68
  422779:	pop    ss
  42277a:	in     al,0x39
  42277c:	pop    edx
  42277d:	pop    ds
  42277e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42277f:	(bad)  
  422780:	sbb    ecx,DWORD PTR [edi+0x45]
  422783:	inc    edx
  422784:	stos   BYTE PTR es:[edi],al
  422785:	jns    0x422777
  422787:	pop    ecx
  422788:	scas   eax,DWORD PTR es:[edi]
  422789:	mov    DWORD PTR [eax-0x5f23e5f6],eax
  42278f:	mov    dl,0xc6
  422791:	xlat   BYTE PTR ds:[ebx]
  422792:	xor    eax,0x240d0428
  422797:	push   ecx
  422798:	jae    0x422746
  42279a:	mov    edi,0x351ca9ed
  42279f:	mov    esp,0xfdab2bce
  4227a4:	std    
  4227a5:	mov    BYTE PTR [edi+0x3],0x2b
  4227a9:	dec    edi
  4227aa:	ret    
  4227ab:	jno    0x4227b8
  4227ad:	sbb    eax,0xb801bdcf
  4227b2:	jns    0x422784
  4227b4:	(bad)  
  4227b5:	cmp    ch,bl
  4227b7:	mov    ds:0xb0055d36,eax
  4227bc:	cmp    bl,BYTE PTR [ebp-0x5e]
  4227bf:	jbe    0x4227e5
  4227c1:	lea    ebx,[edx+0x25ea22a8]
  4227c7:	push   0xd3a129d2
  4227cc:	cmp    BYTE PTR [esp+edx*1-0x49e82588],al
  4227d3:	lea    esi,[ebp+0x429eccf3]
  4227d9:	mov    esp,0x8f244dc0
  4227de:	sub    bl,BYTE PTR [ebp-0x66]
  4227e1:	pop    ecx
  4227e2:	out    dx,al
  4227e3:	sbb    eax,0x949f5a88
  4227e8:	or     al,0x66
  4227ea:	sbb    al,0x9d
  4227ec:	lea    esi,[ebx-0x3b]
  4227ef:	fs mov eax,0x349743b1
  4227f5:	or     al,0x4c
  4227f7:	addr16 mov ds:0x7d67,eax
  4227fb:	in     eax,dx
  4227fc:	sbb    al,0x1d
  4227fe:	pop    ebx
  4227ff:	iret   
  422800:	(bad)  
  422801:	mov    ch,ch
  422803:	aaa    
  422804:	mov    ah,0x7e
  422806:	xor    DWORD PTR [edx],ecx
  422808:	data16 int3 
  42280a:	lock enter 0x620d,0x90
  42280f:	xchg   edx,eax
  422810:	pop    esp
  422811:	add    BYTE PTR [ebp-0x4d837f45],dh
  422817:	jg     0x42283a
  422819:	push   ecx
  42281a:	inc    ebx
  42281b:	(bad)  
  42281c:	repz inc ebp
  42281e:	or     DWORD PTR [esi-0x622cbc9],0x5a
  422825:	sbb    eax,0x69209fd0
  42282a:	push   0x14
  42282c:	xor    DWORD PTR [edx],edi
  42282e:	jl     0x422826
  422830:	fldenv [eax+0x119dfe44]
  422836:	jmp    0x42282c
  422838:	dec    ecx
  422839:	cmc    
  42283a:	or     DWORD PTR [edi-0x45],0x7f
  42283e:	dec    ebp
  42283f:	xchg   cx,ax
  422841:	pop    ebx
  422842:	repz push 0x55
  422845:	std    
  422846:	int    0x3a
  422848:	retf   
  422849:	and    eax,0x255a66f8
  42284e:	or     DWORD PTR [ebx+0x5e053212],0xffffffb7
  422855:	jns    0x422839
  422857:	mov    edx,?
  422859:	fld    TBYTE PTR [eax+0x282c4fd6]
  42285f:	cmc    
  422860:	inc    ebx
  422861:	and    eax,0xa93493b3
  422866:	lock fistp WORD PTR [ebp-0x42]
  42286a:	dec    eax
  42286b:	mov    esp,0x212e529b
  422870:	mov    ebx,0xa454bc0f
  422875:	in     eax,0x5c
  422877:	jb     0x42289a
  422879:	out    dx,al
  42287a:	lahf   
  42287b:	fist   WORD PTR [eax-0x52]
  42287e:	push   edi
  42287f:	in     al,0x8f
  422881:	mov    al,ds:0x69080220
  422886:	ins    DWORD PTR es:[edi],dx
  422887:	cdq    
  422888:	pop    ss
  422889:	mov    cl,BYTE PTR [ebp-0x49cde34]
  42288f:	xchg   esi,eax
  422890:	xchg   ebp,eax
  422891:	out    0x1,eax
  422893:	stc    
  422894:	(bad)  
  422895:	clc    
  422896:	jnp    0x4228c7
  422898:	jge    0x4228c3
  42289a:	jns    0x422849
  42289c:	ja     0xddd89eec
  4228a2:	ret    
  4228a3:	dec    ebx
  4228a4:	cmp    al,BYTE PTR [ebp-0x27167c75]
  4228aa:	ss inc ebp
  4228ac:	retf   0xbd05
  4228af:	std    
  4228b0:	mov    ecx,0x7d68a151
  4228b5:	sbb    esi,DWORD PTR [eax+0x4c9df3a8]
  4228bb:	xor    eax,0x4490608
  4228c0:	neg    BYTE PTR [eax-0x47]
  4228c3:	sbb    bh,bh
  4228c5:	and    bh,BYTE PTR [edx]
  4228c7:	js     0x4228cc
  4228c9:	and    ebp,DWORD PTR [esi]
  4228cb:	or     ebp,DWORD PTR [edx]
  4228cd:	ret    
  4228ce:	pop    esp
  4228cf:	inc    ecx
  4228d0:	in     al,0x85
  4228d2:	aaa    
  4228d3:	sar    BYTE PTR [esi-0x39609b5],1
  4228d9:	xchg   DWORD PTR [edi+0x5f],edx
  4228dc:	ins    BYTE PTR es:[edi],dx
  4228dd:	in     al,0x6c
  4228df:	fisub  DWORD PTR [esi+0x2a3745ac]
  4228e5:	cmc    
  4228e6:	je     0x42293e
  4228e8:	mov    edx,0x3713e8df
  4228ed:	ret    
  4228ee:	jnp    0x422912
  4228f0:	imul   esp,DWORD PTR [ecx+0x3c4e0b10],0x15
  4228f7:	dec    esp
  4228f8:	adc    esp,esi
  4228fa:	jp     0x4228ae
  4228fc:	pop    ecx
  4228fd:	xor    ch,BYTE PTR [esi+eiz*1]
  422900:	test   ecx,ebx
  422902:	imul   ecx,DWORD PTR [ebp-0x3c7df4b6],0xa92542d6
  42290c:	xchg   DWORD PTR ss:[esi+0x18],esi
  422910:	mov    eax,DWORD PTR [ecx-0x2010748]
  422916:	out    0x35,eax
  422918:	sub    dl,BYTE PTR [ebp-0x23978ed6]
  42291e:	sbb    ah,cl
  422920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422921:	pop    ss
  422922:	and    DWORD PTR [ecx],ebp
  422924:	adc    DWORD PTR [edx+0x4],ecx
  422927:	xlat   BYTE PTR ds:[ebx]
  422928:	jge    0x4228d8
  42292a:	in     al,0xd7
  42292c:	mov    eax,ds:0x9159b848
  422931:	sbb    al,BYTE PTR [ebp+0xbf1033b]
  422937:	dec    ebx
  422938:	mov    eax,ds:0x41878b82
  42293d:	and    al,0x1e
  42293f:	or     BYTE PTR fs:[ebx-0x6f],ah
  422943:	cmp    edi,DWORD PTR [esi-0x60f330b9]
  422949:	sbb    bh,BYTE PTR [edi-0x25]
  42294c:	mov    bl,0x5d
  42294e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42294f:	push   es
  422950:	stos   DWORD PTR es:[edi],eax
  422951:	sub    BYTE PTR [ecx+eax*1],dl
  422954:	jo     0x42296a
  422956:	test   ebx,esi
  422958:	imul   BYTE PTR [ecx]
  42295a:	ja     0x4229a5
  42295c:	ja     0x422920
  42295e:	dec    edx
  42295f:	mov    bl,0xa0
  422961:	or     al,0xc9
  422963:	or     DWORD PTR [edx+0x2a],esp
  422966:	mov    edi,0xf6f63ea3
  42296b:	frstor [eax]
  42296d:	daa    
  42296e:	mov    ah,0xb4
  422970:	and    esi,DWORD PTR [edx-0x6fc9209]
  422976:	inc    edi
  422977:	xchg   BYTE PTR [esi-0x4e9e0fc9],bl
  42297d:	xor    eax,0x12872f3b
  422982:	addr16 inc edi
  422984:	sub    al,0xd
  422986:	jae    0x422977
  422988:	fbstp  TBYTE PTR [eax]
  42298a:	mov    ds,WORD PTR [edi-0x50]
  42298d:	popa   
  42298e:	outs   dx,DWORD PTR ds:[esi]
  42298f:	ins    BYTE PTR es:[edi],dx
  422990:	int    0x56
  422992:	imul   esi,DWORD PTR [esp+eax*2],0x23
  422996:	fwait
  422997:	sub    eax,edi
  422999:	inc    edx
  42299a:	xor    al,0xa
  42299c:	loope  0x422937
  42299e:	mov    edi,0xef338184
  4229a3:	ins    DWORD PTR es:[edi],dx
  4229a4:	or     ch,BYTE PTR [edi+0xdd1d252]
  4229aa:	mov    bh,0x12
  4229ac:	(bad)  
  4229ad:	retf   0x9723
  4229b0:	imul   eax,DWORD PTR [ebx],0x5140b3e8
  4229b6:	xor    al,0x46
  4229b8:	dec    esi
  4229b9:	jp     0x422a36
  4229bb:	fcom   DWORD PTR [bp+si-0x79]
  4229bf:	sub    dh,BYTE PTR [edx+0x2ea9b184]
  4229c5:	xor    eax,DWORD PTR [edi]
  4229c7:	mov    bh,0x16
  4229c9:	ins    BYTE PTR es:[edi],dx
  4229ca:	jno    0x422a43
  4229cc:	pop    edi
  4229cd:	scas   al,BYTE PTR es:[edi]
  4229ce:	or     dh,BYTE PTR [eax-0x1d]
  4229d1:	dec    ebp
  4229d2:	fadd   st,st(7)
  4229d4:	fwait
  4229d5:	mov    ds:0xee1834c1,al
  4229da:	pusha  
  4229db:	sub    eax,DWORD PTR [ecx]
  4229dd:	outs   dx,DWORD PTR ds:[esi]
  4229de:	pop    ecx
  4229df:	rol    dh,0x77
  4229e2:	lea    ebp,[edx+eax*2-0x13]
  4229e6:	mov    eax,0x4d27b119
  4229eb:	inc    esp
  4229ec:	xor    BYTE PTR [ebx-0xc1689ce],cl
  4229f2:	xor    ah,BYTE PTR [eax]
  4229f4:	sbb    esp,DWORD PTR [edx-0x61]
  4229f7:	(bad)  
  4229f8:	ror    DWORD PTR [edx],cl
  4229fa:	arpl   WORD PTR [edx+0x29134fe1],bx
  422a00:	sub    eax,0xdf24412b
  422a05:	outs   dx,BYTE PTR ds:[esi]
  422a06:	leave  
  422a07:	pop    ebx
  422a08:	les    eax,FWORD PTR [ebp-0x2c4ec0ed]
  422a0e:	mov    ds:0xa713f5c6,eax
  422a13:	adc    ah,ah
  422a15:	jns    0x422a17
  422a17:	mov    esp,0xddc988ab
  422a1c:	jns    0x422a45
  422a1e:	sub    al,0x45
  422a20:	mov    ebp,0x76fd8d30
  422a25:	xor    cl,dl
  422a27:	mov    eax,ds:0x58e8f42b
  422a2c:	enter  0x81b4,0xc7
  422a30:	sbb    al,BYTE PTR [ebx]
  422a32:	call   0xb70f:0x4b2fe6a7
  422a39:	in     al,dx
  422a3a:	jecxz  0x4229fc
  422a3c:	shr    bl,cl
  422a3e:	sti    
  422a3f:	xor    DWORD PTR [esi+0x4765c3ef],0xc33f3602
  422a49:	and    edi,esp
  422a4b:	test   eax,0xc9afdd23
  422a50:	stos   DWORD PTR es:[edi],eax
  422a51:	addr16 js 0x422aa2
  422a54:	(bad)  
  422a55:	fldenv ds:0xb6215b62
  422a5b:	ror    cl,cl
  422a5d:	jl     0x422ac8
  422a5f:	mov    ds:0x630a268b,al
  422a64:	cmp    cl,BYTE PTR [edi-0x44]
  422a67:	jnp    0x422a3e
  422a69:	cmp    eax,0xdf3bb31a
  422a6e:	xchg   esp,eax
  422a6f:	sbb    BYTE PTR [ebx-0x56],ah
  422a72:	xlat   BYTE PTR ds:[ebx]
  422a73:	xor    DWORD PTR [ebx+ecx*8],edx
  422a76:	outs   dx,BYTE PTR ds:[esi]
  422a77:	xchg   dh,bl
  422a79:	add    al,BYTE PTR [edi+0x50924ad8]
  422a7f:	mov    edi,0x8dfe0def
  422a84:	sbb    BYTE PTR [ecx-0x60],ah
  422a87:	bnd jp 0x422a6b
  422a8a:	jmp    0xcd58:0x6da67233
  422a91:	sbb    al,0x65
  422a93:	mov    al,ds:0x182c31ba
  422a98:	dec    ebx
  422a99:	repnz sub dh,BYTE PTR [ebx-0x42]
  422a9d:	push   cs
  422a9e:	push   edi
  422a9f:	stc    
  422aa0:	jl     0x422a79
  422aa2:	arpl   WORD PTR [esi-0x63b58f24],dx
  422aa8:	cmp    esi,DWORD PTR [edx]
  422aaa:	and    ch,BYTE PTR [edx+eax*4-0x246134c]
  422ab1:	daa    
  422ab2:	pop    ebp
  422ab3:	jl     0x422a5f
  422ab5:	mov    DWORD PTR [eax+0x4f],esp
  422ab8:	lock cmc 
  422aba:	jno    0x422b08
  422abc:	add    BYTE PTR [eax-0x1922867e],dh
  422ac2:	(bad)  
  422ac3:	out    dx,eax
  422ac4:	sub    BYTE PTR [ebx-0x5204bd07],cl
  422aca:	test   BYTE PTR [esi+0x20816562],cl
  422ad0:	leave  
  422ad1:	cld    
  422ad2:	mov    al,BYTE PTR [ebp+0x4e4b27c2]
  422ad8:	pop    edi
  422ad9:	xchg   esp,eax
  422adb:	pop    edi
  422adc:	mov    ecx,0x8bc00188
  422ae1:	stos   BYTE PTR es:[edi],al
  422ae2:	test   eax,0xa1465a05
  422ae7:	add    al,0xf3
  422ae9:	scas   eax,DWORD PTR es:[edi]
  422aea:	xor    esp,ebp
  422aec:	stos   DWORD PTR es:[edi],eax
  422aed:	add    BYTE PTR gs:[ebx],bh
  422af0:	fdiv   DWORD PTR [edi+0x7338917f]
  422af6:	fs std 
  422af8:	push   esi
  422af9:	scas   eax,DWORD PTR es:[edi]
  422afa:	jmp    0x422afb
  422afc:	ja     0x422aa8
  422afe:	cld    
  422aff:	pop    esi
  422b00:	push   esi
  422b01:	mov    esi,0x9ccb316f
  422b06:	or     eax,0x47d54e32
  422b0c:	js     0x422b57
  422b0e:	sbb    BYTE PTR [edi],0xa1
  422b11:	dec    ebp
  422b12:	push   edx
  422b13:	popf   
  422b14:	scas   eax,DWORD PTR es:[edi]
  422b15:	pop    edx
  422b16:	cdq    
  422b17:	mov    esi,cs
  422b19:	and    ebp,DWORD PTR [ebx]
  422b1b:	mov    ?,ebx
  422b1d:	addr16 fdiv st(2),st
  422b20:	les    edi,FWORD PTR [ebp-0x55f93cdf]
  422b26:	sbb    DWORD PTR [ebp-0x31248270],0x141f0d6e
  422b30:	adc    BYTE PTR [edx],ah
  422b32:	mov    dl,BYTE PTR [ecx]
  422b34:	shl    BYTE PTR [ebx],cl
  422b36:	mov    cl,0xb6
  422b38:	cmp    bh,bh
  422b3a:	int    0x88
  422b3c:	repnz push ds
  422b3e:	test   esi,ebx
  422b40:	jge    0x422b52
  422b42:	sub    esp,DWORD PTR [ebp+0x2a]
  422b45:	ret    
  422b46:	js     0x422bb2
  422b48:	call   0xbc56fca6
  422b4d:	outs   dx,BYTE PTR gs:[esi]
  422b4f:	sub    dh,ah
  422b51:	push   esp
  422b52:	hlt    
  422b53:	mov    edi,0x204c23b4
  422b58:	jae    0x422b4e
  422b5a:	retf   
  422b5b:	and    dh,BYTE PTR [ebx]
  422b5d:	or     eax,0xf1d96f24
  422b62:	add    DWORD PTR [edx+0x441e6f6],ecx
  422b68:	aam    0x61
  422b6a:	test   eax,0x58b71196
  422b6f:	mov    edx,0x49117190
  422b74:	jae    0x422b8a
  422b76:	out    0xca,eax
  422b78:	aam    0x86
  422b7a:	jo     0x422bd5
  422b7c:	and    eax,0xed75146d
  422b81:	add    DWORD PTR [edi+ecx*8+0x46],ecx
  422b85:	mov    BYTE PTR [ecx-0x36],bh
  422b88:	lds    ebp,FWORD PTR [esi+0x2ea40d26]
  422b8e:	sbb    al,0xef
  422b90:	cmp    esp,DWORD PTR [ebp-0x77]
  422b93:	xchg   ebp,eax
  422b94:	ret    
  422b95:	xchg   ebp,eax
  422b96:	jmp    DWORD PTR [eax+0xf]
  422b99:	pand   mm1,QWORD PTR [edx]
  422b9c:	repz push edi
  422b9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b9f:	nop
  422ba0:	outs   dx,DWORD PTR ds:[esi]
  422ba1:	out    dx,eax
  422ba2:	sahf   
  422ba3:	retf   
  422ba4:	js     0x422b35
  422ba6:	(bad)  
  422ba7:	mov    ebp,0x891d704f
  422bac:	push   edx
  422bad:	push   ebx
  422bae:	cdq    
  422baf:	sbb    edi,DWORD PTR [edx+ecx*8]
  422bb2:	cdq    
  422bb3:	and    al,0x2f
  422bb5:	jg     0x422bd3
  422bb7:	nop
  422bb8:	daa    
  422bb9:	jnp    0x422bf7
  422bbb:	xchg   al,ch
  422bbd:	cdq    
  422bbe:	xchg   DWORD PTR [edx+0x79],esp
  422bc1:	jp     0x422bef
  422bc3:	mov    bh,0x2a
  422bc5:	iret   
  422bc6:	xlat   BYTE PTR ds:[ebx]
  422bc7:	sahf   
  422bc8:	sbb    DWORD PTR [ecx+ecx*2-0x4c],ebx
  422bcc:	cmp    edi,ecx
  422bce:	sbb    eax,0x8e6fc891
  422bd3:	es ins DWORD PTR es:[edi],dx
  422bd5:	ss stc 
  422bd7:	fmul   QWORD PTR [ebx-0xae0920d]
  422bdd:	mov    ch,0x55
  422bdf:	es retf 
  422be1:	(bad)  
  422be2:	inc    esi
  422be3:	into   
  422be4:	mov    ds:0xe0c39635,eax
  422be9:	mov    ecx,0x108b9149
  422bee:	(bad)  
  422bef:	fadd   QWORD PTR [eax+0x24]
  422bf2:	xchg   esi,eax
  422bf3:	mov    DWORD PTR [esi+eax*1+0x1e],ecx
  422bf7:	imul   eax,DWORD PTR [eax],0x9b193ceb
  422bfd:	imul   esp,DWORD PTR ds:0xc4d26d8a,0x43bacac5
  422c07:	inc    ebx
  422c08:	(bad)  
  422c09:	out    0x4e,eax
  422c0b:	jecxz  0x422c79
  422c0d:	jecxz  0x422be1
  422c0f:	fcomi  st,st(4)
  422c11:	jg     0x422c31
  422c13:	lds    esp,FWORD PTR [ebp-0x6e]
  422c16:	fild   QWORD PTR [ebp-0x556edc57]
  422c1c:	xchg   esi,eax
  422c1d:	(bad)  
  422c1e:	outs   dx,BYTE PTR ds:[esi]
  422c1f:	or     al,0xc9
  422c21:	fist   DWORD PTR [edi+edi*8]
  422c24:	xlat   BYTE PTR ds:[ebx]
  422c25:	(bad)  
  422c26:	les    edi,FWORD PTR [edx+ebp*2-0x3c30a010]
  422c2d:	jg     0x422ca1
  422c2f:	imul   ecx,ecx,0xffffff92
  422c32:	cs mov esp,0xd7c7ab68
  422c38:	mov    dh,0x3e
  422c3a:	jmp    0xcc5:0xb505
  422c40:	loope  0x422c05
  422c42:	cld    
  422c43:	or     DWORD PTR [edx+0x3c6bf816],edx
  422c49:	ins    DWORD PTR es:[edi],dx
  422c4a:	pop    esp
  422c4b:	mov    eax,ds:0xa2a54100
  422c50:	pop    edi
  422c51:	leave  
  422c52:	and    bl,BYTE PTR [ebx]
  422c54:	pop    ebx
  422c55:	adc    BYTE PTR [eax+eax*8-0x10],bl
  422c59:	inc    eax
  422c5a:	adc    ch,bl
  422c5c:	inc    edx
  422c5d:	jle    0x422bdf
  422c5f:	add    eax,0x9e0b7cef
  422c64:	pop    edx
  422c65:	xor    bh,BYTE PTR [ebp+0x293c6fad]
  422c6b:	dec    esp
  422c6c:	xchg   ebp,eax
  422c6d:	or     al,0x88
  422c6f:	xor    al,0x5b
  422c71:	ja     0x422c26
  422c73:	inc    eax
  422c74:	cmp    ebx,ecx
  422c76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c77:	jl     0x422c77
  422c79:	xor    esp,esp
  422c7b:	sub    ebp,DWORD PTR [edi+0x52bfbc6e]
  422c81:	les    ecx,FWORD PTR [eax-0x73]
  422c84:	or     ebx,edx
  422c86:	and    BYTE PTR [ebp-0x5b],cl
  422c89:	lock je 0x422c87
  422c8c:	sbb    al,0x21
  422c8e:	pop    ebp
  422c8f:	push   ds
  422c90:	cwde   
  422c91:	enter  0x596,0x67
  422c95:	stos   BYTE PTR es:[edi],al
  422c96:	popa   
  422c97:	daa    
  422c98:	and    eax,0x190e4202
  422c9d:	xor    cl,al
  422c9f:	add    bl,BYTE PTR ds:0x5e5852b6
  422ca5:	pop    ebx
  422ca6:	(bad)  
  422ca7:	test   al,0x5f
  422ca9:	out    dx,eax
  422caa:	xor    cl,BYTE PTR [esi]
  422cac:	or     eax,0x4487aa16
  422cb1:	gs xchg ebp,eax
  422cb3:	test   eax,0xc98ec4e1
  422cb8:	mov    ds:0x230d70d6,al
  422cbd:	sub    edx,ebx
  422cbf:	mov    al,0x6f
  422cc1:	jbe    0x422d20
  422cc3:	mov    edx,0xcbf47aa2
  422cc8:	loop   0x422d34
  422cca:	pop    edi
  422ccb:	out    dx,eax
  422ccc:	mov    ss,WORD PTR [ecx]
  422cce:	jb     0x422d39
  422cd0:	call   0x169d:0x86a6ded5
  422cd7:	out    dx,al
  422cd8:	dec    esi
  422cd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cda:	pusha  
  422cdb:	daa    
  422cdc:	es sbb ebp,ebx
  422cdf:	in     eax,dx
  422ce0:	mov    ebp,0x31019e07
  422ce5:	pop    esp
  422ce6:	add    DWORD PTR [ecx],0xabbafd99
  422cec:	out    0x39,al
  422cee:	jp     0x422d6c
  422cf0:	mov    bl,0x70
  422cf2:	fs dec ebp
  422cf4:	pop    esi
  422cf5:	or     eax,0xb1174f8a
  422cfa:	and    DWORD PTR [ecx-0x1b122ff6],ebp
  422d00:	bnd jnp 0x422c98
  422d03:	xor    dl,BYTE PTR [esi]
  422d05:	cmp    esi,edx
  422d07:	in     al,dx
  422d08:	or     bh,BYTE PTR [esi+0x2b]
  422d0b:	jbe    0x422cae
  422d0d:	mov    ds:0x256c911e,eax
  422d12:	test   ebp,ebx
  422d14:	addr16 cmc 
  422d16:	or     BYTE PTR [ecx],cl
  422d18:	enter  0x1374,0xcf
  422d1c:	aas    
  422d1d:	add    BYTE PTR [edi-0x35],ch
  422d20:	push   eax
  422d21:	pop    ebx
  422d22:	xor    eax,0x4a1aee24
  422d27:	add    eax,ebp
  422d29:	dec    esp
  422d2a:	jno    0x422d2c
  422d2c:	fstp   QWORD PTR [esi]
  422d2e:	(bad)  
  422d2f:	cdq    
  422d30:	jnp    0x422cdc
  422d32:	jecxz  0x422d16
  422d34:	or     al,0x6b
  422d36:	pushf  
  422d37:	loopne 0x422cd1
  422d39:	mul    DWORD PTR [edi-0x2cff0b2b]
  422d3f:	aad    0x4
  422d41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d42:	push   0xffffff81
  422d44:	int    0xa
  422d46:	or     al,0x28
  422d48:	js     0x422d0f
  422d4a:	call   0xed0c:0xbd14d364
  422d51:	mov    esp,0x7d66028b
  422d56:	int3   
  422d57:	mov    ebx,0x428bda32
  422d5c:	pusha  
  422d5d:	mov    dh,0x91
  422d5f:	jne    0x422dd5
  422d61:	push   ds
  422d62:	lea    ebp,[bp+di-0x58]
  422d66:	mov    al,ds:0xba9668c3
  422d6b:	sahf   
  422d6c:	xchg   edx,eax
  422d6d:	sbb    eax,0xba3afe36
  422d72:	bound  ecx,QWORD PTR [edi+0x5e4bb472]
  422d78:	lock cmp BYTE PTR cs:[edi],ch
  422d7c:	retf   0xf670
  422d7f:	les    ebx,FWORD PTR [eax+0x61]
  422d82:	cmp    al,0xcb
  422d84:	mul    ch
  422d86:	mov    ah,0x68
  422d88:	xor    eax,0x7828d558
  422d8d:	sub    esi,esi
  422d8f:	sbb    BYTE PTR [esi],ch
  422d91:	push   eax
  422d92:	jge    0x422d3b
  422d94:	aaa    
  422d95:	sbb    ebp,DWORD PTR [ebp-0x67]
  422d98:	sub    al,BYTE PTR ds:0xd297b051
  422d9e:	outs   dx,DWORD PTR ds:[esi]
  422d9f:	xchg   ebx,eax
  422da0:	aad    0xbd
  422da2:	or     ebp,ebp
  422da4:	scas   al,BYTE PTR es:[edi]
  422da5:	jne    0x422d71
  422da7:	mov    eax,0xe74be19
  422dac:	adc    ecx,DWORD PTR [ecx]
  422dae:	call   0x13cb1200
  422db3:	(bad)  
  422db5:	in     al,0x9e
  422db7:	daa    
  422db8:	out    0x93,eax
  422dba:	sahf   
  422dbb:	sub    eax,0xa275bd46
  422dc0:	or     eax,DWORD PTR [ebp+0x226064da]
  422dc6:	sub    BYTE PTR [ecx+0x685e475c],0x77
  422dcd:	xor    al,0xb6
  422dcf:	add    BYTE PTR [ecx+0x11],bh
  422dd2:	clc    
  422dd3:	mov    esi,0x1d768572
  422dd8:	and    BYTE PTR [ebx-0x274da902],bl
  422dde:	repnz fdiv DWORD PTR [edx+0x56d28084]
  422de5:	hlt    
  422de6:	cmp    DWORD PTR [edi+0x7a91cad4],eax
  422dec:	or     dh,BYTE PTR [ebp+esi*4-0x66dbc0db]
  422df3:	neg    DWORD PTR [esi-0x529e69f2]
  422df9:	test   bl,cl
  422dfb:	jb     0x422e67
  422dfd:	sub    BYTE PTR ds:0xe41c92f0,0x81
  422e04:	daa    
  422e05:	mov    cl,0x82
  422e07:	push   ebp
  422e08:	adc    al,0xf5
  422e0a:	sub    eax,0xa939c1e7
  422e0f:	stos   BYTE PTR es:[edi],al
  422e10:	xchg   BYTE PTR [ebp+0x519fb0],dh
  422e16:	fs cwde 
  422e18:	lahf   
  422e19:	cmp    esp,esp
  422e1b:	jne    0x422e01
  422e1d:	xor    edi,edx
  422e1f:	(bad)  
  422e20:	call   0xdf48c5d7
  422e25:	pop    ecx
  422e26:	jns    0x422ea4
  422e28:	adc    dl,0xc7
  422e2b:	adc    BYTE PTR [esi-0xf],0x25
  422e2f:	cmp    DWORD PTR [ebp-0x3c],edx
  422e32:	sbb    eax,0xe97d1096
  422e37:	fst    DWORD PTR [eax+esi*2+0x7]
  422e3b:	jmp    0xfe00ab49
  422e40:	pop    esi
  422e41:	ins    BYTE PTR es:[edi],dx
  422e42:	int3   
  422e43:	xchg   esi,eax
  422e44:	fwait
  422e45:	add    cl,BYTE PTR [ebx-0x206b6ed9]
  422e4b:	inc    ebx
  422e4c:	call   0xf122:0x94763454
  422e53:	idiv   BYTE PTR [esi+0x27]
  422e56:	mov    eax,0x343f22c0
  422e5b:	call   0x6d6b76af
  422e60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e61:	cmc    
  422e62:	mov    eax,ds:0x3b67cad
  422e67:	lds    esp,FWORD PTR ds:0xb33a38cd
  422e6d:	lea    edi,[eax]
  422e6f:	rol    BYTE PTR [edx+0x56f09237],cl
  422e75:	fist   DWORD PTR [edi+0x74]
  422e78:	xor    ah,BYTE PTR ss:[ebx-0x7c7f2b16]
  422e7f:	xchg   edx,eax
  422e80:	push   0xffffff80
  422e82:	jl     0x422ed0
  422e84:	daa    
  422e85:	sub    al,0x1d
  422e87:	imul   ecx,DWORD PTR [ebx],0xffffffd4
  422e8a:	and    eax,0xdc41d148
  422e8f:	jnp    0x422eb3
  422e91:	mov    esp,0x305bd953
  422e96:	mov    dh,0x91
  422e98:	out    dx,eax
  422e99:	xchg   ecx,eax
  422e9a:	aad    0x2f
  422e9c:	scas   al,BYTE PTR es:[edi]
  422e9d:	inc    esp
  422e9e:	inc    eax
  422e9f:	inc    ebp
  422ea0:	xchg   DWORD PTR [ebp-0x7f2dcc41],edi
  422ea6:	dec    esp
  422ea7:	jp     0x422e2f
  422ea9:	gs cs cs cs push 0x55
  422eaf:	xchg   ebx,eax
  422eb0:	pusha  
  422eb1:	cmp    BYTE PTR [edi+0x21f8a9af],bl
  422eb7:	sbb    ebx,DWORD PTR ds:0x274bb359
  422ebd:	(bad)  
  422ebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ebf:	or     esp,DWORD PTR [esi+ecx*1-0x4f19e66b]
  422ec6:	or     eax,0xef8d50ec
  422ecb:	popa   
  422ecc:	lock shr DWORD PTR [ebx],1
  422ecf:	mov    ch,0x33
  422ed1:	ret    0x74e
  422ed4:	lea    eax,[eax-0x60]
  422ed7:	fst    QWORD PTR [ecx+0xe]
  422eda:	and    eax,0x62c2c704
  422edf:	cmc    
  422ee0:	adc    BYTE PTR [ebx],0x4d
  422ee3:	dec    esi
  422ee4:	pop    ds
  422ee5:	jg     0x422f17
  422ee7:	dec    edx
  422ee8:	add    al,0x3e
  422eea:	in     al,dx
  422eeb:	into   
  422eec:	sbb    eax,0xb87e03dd
  422ef1:	cmp    ecx,DWORD PTR [ecx]
  422ef3:	sub    dl,BYTE PTR [eax]
  422ef5:	(bad)  
  422ef6:	sub    bh,BYTE PTR [edx+edx*4-0x4b63c6d4]
  422efd:	div    DWORD PTR [esi-0x409ae1f7]
  422f03:	pop    ebx
  422f04:	rcl    BYTE PTR fs:[ebp+0x65a50dac],1
  422f0b:	and    DWORD PTR [esi+0x7d],ebp
  422f0e:	xor    cl,dh
  422f10:	stos   BYTE PTR es:[edi],al
  422f11:	or     eax,esi
  422f13:	stc    
  422f14:	pop    ebx
  422f15:	sbb    BYTE PTR [ecx+0x5a917a13],dl
  422f1b:	inc    ecx
  422f1c:	sub    dl,BYTE PTR [ecx-0x5e]
  422f1f:	cmp    ebx,DWORD PTR [ebp+0x7e147de8]
  422f25:	cmp    al,0x22
  422f27:	sti    
  422f28:	jg     0x422f86
  422f2a:	leave  
  422f2b:	cmp    al,0x66
  422f2d:	(bad)  
  422f2e:	xor    esi,DWORD PTR [ebx]
  422f30:	jecxz  0x422fa6
  422f32:	push   0x15
  422f34:	(bad)  [ebx-0x7]
  422f37:	shl    BYTE PTR [esi-0x6915adb4],1
  422f3d:	and    dh,BYTE PTR ds:0xc7a43c84
  422f43:	mov    ds:0x4299f999,al
  422f48:	jnp    0x422f16
  422f4a:	pop    edi
  422f4b:	mov    dl,0x3e
  422f4d:	scas   eax,DWORD PTR es:[edi]
  422f4e:	or     al,BYTE PTR [eax-0x3ade205c]
  422f54:	sbb    DWORD PTR [edx],ebx
  422f56:	pop    ebx
  422f57:	fimul  DWORD PTR [ebx-0x7b6b0e07]
  422f5d:	lods   eax,DWORD PTR ds:[esi]
  422f5e:	sub    BYTE PTR [esi-0x2f],0xff
  422f62:	adc    al,BYTE PTR [edi]
  422f64:	cmp    ebx,DWORD PTR [ecx+eax*4-0x13]
  422f68:	cli    
  422f69:	xor    al,0xb7
  422f6b:	and    bh,BYTE PTR [edx]
  422f6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f6e:	fldz   
  422f70:	jle    0x422fc6
  422f72:	xchg   ebp,eax
  422f73:	xchg   ecx,eax
  422f74:	nop
  422f75:	fs out dx,eax
  422f77:	push   0x62
  422f79:	rol    BYTE PTR [ebp+0x55],1
  422f7c:	push   cs
  422f7d:	fild   WORD PTR [edx+esi*4+0x13]
  422f81:	fstp   TBYTE PTR [ebx+0x36]
  422f84:	and    eax,0x4fb45fe2
  422f89:	sbb    al,0x8b
  422f8b:	jnp    0x422f49
  422f8d:	jl     0x423003
  422f8f:	rcl    DWORD PTR [edx],cl
  422f91:	push   ss
  422f92:	imul   eax,DWORD PTR [esi-0x5b4c7fed],0xfffffff3
  422f99:	sbb    BYTE PTR [edi+0x49],dh
  422f9c:	mov    ds:0x52a0c9a4,al
  422fa1:	or     DWORD PTR [ebx+edx*8],edx
  422fa4:	jg     0x422f3c
  422fa6:	lods   al,BYTE PTR ds:[esi]
  422fa7:	add    al,0x36
  422fa9:	jno    0x422fec
  422fab:	in     al,0x4a
  422fad:	sub    bh,BYTE PTR [ebp+0x27cd04dc]
  422fb3:	mov    ds:0x3ad5d938,eax
  422fb8:	sub    cl,BYTE PTR [ebx]
  422fba:	xchg   ebp,eax
  422fbb:	icebp  
  422fbc:	dec    ecx
  422fbd:	xor    ecx,DWORD PTR [eax-0x1c383fb]
  422fc3:	mov    ebp,0x5655a805
  422fc8:	pop    ecx
  422fc9:	mov    esp,DWORD PTR [ebx+0x4edea9f0]
  422fcf:	add    ah,BYTE PTR [edx+0x78aded30]
  422fd5:	pop    ss
  422fd6:	mov    dl,0xe9
  422fd8:	xlat   BYTE PTR ds:[ebx]
  422fd9:	mov    bl,0xdf
  422fdc:	inc    edi
  422fdd:	adc    cl,BYTE PTR [eax+ebx*1-0x65]
  422fe1:	(bad)  
  422fe3:	pop    ecx
  422fe4:	jmp    0xccc8fe8e
  422fe9:	pop    ds
  422fea:	ss ds ds jle 0x422f95
  422fef:	jg     0x423002
  422ff1:	push   edx
  422ff2:	jmp    0x423037
  422ff4:	jmp    0xa590aed6
  422ff9:	jg     0x42305d
  422ffb:	jl     0x422fad
  422ffd:	pop    esp
  422ffe:	enter  0x181,0x81
  423002:	pop    esp
  423003:	(bad)  
  423004:	(bad)  [edi+ebp*8-0x7595599f]
  42300b:	xchg   BYTE PTR [eax-0x3f],dh
  42300e:	fnsave [ebx+0xfc61862]
  423014:	xor    BYTE PTR [eax+0x13],0xd1
  423018:	sub    ah,BYTE PTR [ebp-0x2be68089]
  42301e:	loopne 0x423024
  423020:	or     BYTE PTR [edi-0x63],dl
  423023:	test   DWORD PTR [ebp-0x42fbb65e],0xdcd8adda
  42302d:	sahf   
  42302e:	test   DWORD PTR ds:0x988ef58e,edi
  423034:	mov    al,0x1c
  423036:	push   ss
  423037:	add    bl,al
  423039:	add    bl,BYTE PTR [ebx+0x4]
  42303c:	jb     0x4230b8
  42303e:	push   edi
  42303f:	adc    DWORD PTR [ecx],0xffffffac
  423042:	ja     0x423009
  423044:	pop    edx
  423045:	jo     0x4230ac
  423047:	fild   DWORD PTR [ebx-0x16991b4c]
  42304d:	xor    ah,dl
  42304f:	inc    eax
  423050:	daa    
  423051:	gs dec ecx
  423053:	icebp  
  423054:	test   BYTE PTR [edx],dl
  423056:	int    0xc2
  423058:	xor    eax,0x68b71a2c
  42305d:	lea    esp,[edx]
  42305f:	and    al,0xc9
  423061:	inc    esp
  423062:	fnstcw WORD PTR [edx]
  423064:	add    al,0xe8
  423066:	fadd   DWORD PTR [ebx]
  423068:	not    BYTE PTR [edx+ecx*4-0x3539a705]
  42306f:	cmp    BYTE PTR [eax],cl
  423071:	ret    
  423072:	pop    ss
  423073:	inc    esi
  423074:	enter  0x2b43,0xf
  423078:	mov    ah,0x4f
  42307a:	ins    DWORD PTR es:[edi],dx
  42307b:	pop    ss
  42307c:	int3   
  42307d:	repnz push ecx
  42307f:	out    dx,al
  423080:	dec    ebx
  423081:	add    cl,BYTE PTR [ebx]
  423083:	sub    al,0xc6
  423085:	daa    
  423086:	adc    dl,0x36
  423089:	adc    al,0x31
  42308b:	lea    edi,[edi+0x4f]
  42308e:	retf   0xd5bb
  423091:	add    ebx,0x3f
  423094:	sbb    DWORD PTR [esi],esp
  423096:	and    ecx,edi
  423098:	sahf   
  423099:	mul    DWORD PTR [ecx]
  42309b:	bound  ecx,QWORD PTR ds:0x88b920b4
  4230a1:	pop    eax
  4230a2:	xchg   ecx,eax
  4230a3:	xor    edx,DWORD PTR [ecx+0x51]
  4230a6:	mov    ds:0x3dd7ff04,al
  4230ab:	adc    bl,BYTE PTR [eax]
  4230ad:	and    eax,0x679bdd1c
  4230b2:	iret   
  4230b3:	aaa    
  4230b4:	es or  al,0x38
  4230b7:	pop    ss
  4230b8:	js     0x4230bb
  4230ba:	pop    es
  4230bb:	stc    
  4230bc:	lahf   
  4230bd:	add    BYTE PTR [eax-0x37747c27],ch
  4230c3:	int3   
  4230c4:	cmp    BYTE PTR [edx-0x63],al
  4230c7:	mov    dh,0x52
  4230c9:	sub    ebp,DWORD PTR [ebx-0x6a]
  4230cc:	rol    DWORD PTR [ebx],0x57
  4230cf:	call   0x70ee:0x10bf3e2e
  4230d6:	cmp    DWORD PTR fs:[ebx+0x2f8ef389],0xf9308ab
  4230e1:	add    edi,DWORD PTR [edi-0x34]
  4230e4:	add    eax,0x11f65609
  4230e9:	(bad)  
  4230ea:	xchg   esi,eax
  4230eb:	(bad)  [ebx-0x21]
  4230ee:	or     al,0x61
  4230f0:	loopne 0x423108
  4230f2:	inc    edi
  4230f3:	ds cmp al,0x50
  4230f6:	into   
  4230f7:	push   ss
  4230f8:	pop    es
  4230f9:	jno    0x4230fa
  4230fb:	adc    al,0x8f
  4230fd:	icebp  
  4230fe:	or     eax,0xf188b276
  423103:	enter  0xb65a,0xde
  423107:	mov    bl,0x8
  423109:	mov    edi,ebp
  42310b:	fsub   st(2),st
  42310d:	push   esp
  42310e:	push   ecx
  42310f:	sub    cl,0x69
  423112:	shl    DWORD PTR [edi+ebx*8+0x47],1
  423116:	xor    eax,0x42a67739
  42311b:	mov    ch,BYTE PTR ds:0xd7944640
  423121:	repnz push 0xfffffff0
  423124:	pop    ds
  423125:	inc    edx
  423126:	ret    0x3b22
  423129:	inc    esi
  42312a:	dec    ebp
  42312b:	(bad)  [edi]
  42312d:	mov    ebp,0x9219ac44
  423132:	pop    esp
  423133:	or     esi,ebx
  423135:	and    ch,BYTE PTR [eax-0x30]
  423138:	std    
  423139:	popf   
  42313a:	xor    DWORD PTR [edx+0x647a5988],eax
  423140:	push   esp
  423141:	(bad)
  423144:	jb     0x4230e5
  423146:	out    dx,al
  423147:	mov    DWORD PTR [edi-0x73],eax
  42314a:	sub    BYTE PTR [ecx-0x3c],cl
  42314d:	test   DWORD PTR [edi-0x6b6b4c09],esi
  423153:	inc    ebp
  423154:	sub    eax,0x48029b31
  423159:	pop    esp
  42315a:	pop    edx
  42315b:	mov    ah,0xdd
  42315d:	mov    dl,0x62
  42315f:	mov    ecx,0x453021fb
  423164:	ins    BYTE PTR es:[edi],dx
  423165:	js     0x4230f4
  423167:	in     eax,dx
  423168:	icebp  
  423169:	cmp    eax,0x9f43d9eb
  42316e:	jle    0x42313a
  423170:	mov    ebp,0xa7a5122f
  423175:	mov    al,ds:0x4f7053e1
  42317a:	out    dx,al
  42317b:	fs inc ebp
  42317d:	push   ss
  42317e:	jno    0x423121
  423180:	or     al,0xc
  423182:	lds    edx,FWORD PTR [ecx+0x4]
  423185:	xor    DWORD PTR [ecx+edi*4-0x9],ebx
  423189:	cmp    DWORD PTR [ecx+ebx*8+0x1380c69],esp
  423190:	mov    ch,0x7
  423192:	fstp   DWORD PTR [ebx+0x5cf6a945]
  423198:	add    eax,esp
  42319a:	cmc    
  42319b:	or     ch,cl
  42319d:	mov    edi,0xf3b5b11d
  4231a2:	jg     0x423174
  4231a4:	push   ebp
  4231a5:	lahf   
  4231a6:	xor    dl,dh
  4231a8:	sub    esp,DWORD PTR [edi]
  4231aa:	push   edx
  4231ab:	mov    al,ds:0xce3857d7
  4231b0:	push   edi
  4231b1:	popf   
  4231b2:	push   edx
  4231b3:	(bad)  
  4231b4:	jmp    0xecc4:0x26c2db3b
  4231bb:	jmp    0xab9e:0xd2000c5c
  4231c2:	cmp    eax,0x3fd9c7a2
  4231c7:	(bad)  
  4231c8:	cmp    BYTE PTR [eax],bl
  4231ca:	inc    ecx
  4231cb:	jge    0x4231c5
  4231cd:	outs   dx,DWORD PTR ss:[esi]
  4231cf:	out    0x5b,al
  4231d1:	lahf   
  4231d2:	add    al,0x0
  4231d4:	test   al,0xa9
  4231d6:	sbb    DWORD PTR [esi],ecx
  4231d8:	stos   BYTE PTR es:[edi],al
  4231d9:	mov    ebx,0x558c2807
  4231de:	adc    ebx,ebx
  4231e0:	or     DWORD PTR [edi-0x6dba57fb],esp
  4231e6:	pop    ebx
  4231e8:	xor    BYTE PTR es:[esi+ecx*4-0x326be06a],dl
  4231f0:	inc    eax
  4231f1:	cwde   
  4231f2:	(bad)  
  4231f3:	push   0xfffffff8
  4231f5:	dec    ecx
  4231f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231f7:	lock ss mov ecx,0x42548fa8
  4231fe:	sbb    DWORD PTR [ebp-0x8],ebx
  423201:	inc    ebp
  423202:	mov    ch,0x99
  423204:	fwait
  423205:	jnp    0x42319e
  423207:	nop
  423208:	cwde   
  423209:	cmp    al,BYTE PTR [ebx*8+0x798205c]
  423210:	pop    esp
  423211:	xchg   esp,eax
  423212:	shl    BYTE PTR [edi-0x5598722c],cl
  423218:	inc    esi
  423219:	sub    edx,DWORD PTR [esi]
  42321b:	aad    0x6d
  42321d:	push   0xffffff8b
  42321f:	push   ecx
  423220:	sbb    esi,DWORD PTR [edx]
  423222:	add    eax,0xeeb0451e
  423227:	out    0xce,eax
  423229:	and    eax,0xfdbebb78
  42322e:	adc    ah,BYTE PTR [edi]
  423230:	inc    esp
  423231:	jo     0x423243
  423233:	int    0xe
  423235:	lods   eax,DWORD PTR ds:[esi]
  423236:	das    
  423237:	aas    
  423238:	sti    
  423239:	sti    
  42323a:	jnp    0x4231ce
  42323c:	sbb    eax,0x5da8fce8
  423241:	loopne 0x423229
  423243:	push   ebp
  423244:	pusha  
  423245:	mov    ebp,0x194421d1
  42324a:	sub    eax,0xec6e3005
  42324f:	add    al,0xa1
  423251:	adc    BYTE PTR [esi],dh
  423253:	int    0x16
  423255:	aaa    
  423256:	das    
  423257:	test   BYTE PTR [ecx+0x5d],bl
  42325a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42325b:	fwait
  42325c:	pop    esi
  42325d:	jle    0x423292
  42325f:	push   esp
  423260:	jne    0x423268
  423262:	xchg   ebp,eax
  423263:	test   al,0xbb
  423265:	jmp    0x423294
  423267:	fcom   DWORD PTR [esi+0x6b6185e9]
  42326d:	push   edi
  42326e:	lods   al,BYTE PTR ds:[esi]
  42326f:	cmp    esp,DWORD PTR [ebx+0x9]
  423272:	mov    bh,0xe5
  423274:	cmp    DWORD PTR [ecx+eiz*4+0x4f852475],ebp
  42327b:	mov    DWORD PTR [ecx-0x3f],ecx
  42327e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42327f:	push   edi
  423280:	fidivr DWORD PTR [eax-0x55467b0a]
  423286:	outs   dx,BYTE PTR ds:[esi]
  423287:	inc    esp
  423288:	jle    0x423213
  42328a:	adc    eax,0x58ca90cf
  42328f:	dec    eax
  423290:	fist   DWORD PTR [ebp-0x14dfc86f]
  423296:	inc    edi
  423297:	push   esp
  423298:	mov    cl,0xc1
  42329a:	mov    eax,0x26205046
  42329f:	and    eax,0x6f654056
  4232a4:	xchg   ecx,eax
  4232a5:	cmp    al,0xd7
  4232a7:	adc    BYTE PTR [ebp+eiz*2-0x38bb7913],al
  4232ae:	jne    0x423248
  4232b0:	and    al,0xfd
  4232b2:	test   al,0x4d
  4232b4:	out    0x4c,al
  4232b6:	loope  0x4232d3
  4232b8:	das    
  4232b9:	icebp  
  4232ba:	pop    ds
  4232bb:	(bad)  
  4232bc:	into   
  4232bd:	jge    0x4232e3
  4232bf:	mov    dl,0x8d
  4232c1:	pop    ebx
  4232c2:	push   ds
  4232c3:	bnd jb 0x4232ae
  4232c6:	and    DWORD PTR [bx+si-0x5d],edi
  4232ca:	sub    DWORD PTR [edi-0x66],0x8f5245f9
  4232d1:	ja     0x4232e3
  4232d3:	and    edi,esp
  4232d5:	jecxz  0x42333b
  4232d7:	(bad)  
  4232d8:	hlt    
  4232d9:	mov    esi,0x38306924
  4232de:	clc    
  4232df:	stos   DWORD PTR es:[edi],eax
  4232e0:	pop    ebx
  4232e1:	jo     0x4232b5
  4232e3:	xchg   ebx,eax
  4232e4:	jbe    0x423314
  4232e6:	jae    0x4232fa
  4232e8:	jnp    0x4232a9
  4232ea:	in     al,0x18
  4232ec:	pop    eax
  4232ed:	daa    
  4232ee:	repnz (bad) [edx]
  4232f1:	nop
  4232f2:	inc    ebp
  4232f3:	fs dec ebp
  4232f5:	or     eax,0xb6f3c434
  4232fa:	loopne 0x4232f4
  4232fc:	out    0xd8,al
  4232fe:	inc    ebp
  4232ff:	ficomp DWORD PTR [edi+0x7d3c8fc4]
  423305:	pusha  
  423306:	cmp    DWORD PTR [edx],edx
  423308:	aaa    
  423309:	scas   eax,DWORD PTR es:[edi]
  42330a:	mov    edx,ds
  42330c:	cmp    ah,ah
  42330e:	inc    ecx
  42330f:	and    al,0xa
  423311:	test   BYTE PTR [ebx],0x3a
  423314:	inc    esi
  423315:	in     al,0x15
  423317:	sti    
  423318:	das    
  423319:	mov    ds:0xd17a3ea5,eax
  42331e:	xchg   edx,eax
  42331f:	pop    ebx
  423320:	shl    BYTE PTR [ebx-0x11],1
  423323:	rcr    BYTE PTR [esi+edx*8-0x1897a1f],1
  42332a:	pop    eax
  42332b:	lea    eax,[edi]
  42332d:	shl    dl,cl
  42332f:	inc    ebp
  423330:	ins    DWORD PTR es:[edi],dx
  423331:	add    al,0x62
  423333:	es (bad) 
  423335:	daa    
  423336:	and    al,BYTE PTR [esi+0x8034c00]
  42333c:	fs pop edi
  42333e:	mov    eax,0x759462dd
  423343:	sub    esi,DWORD PTR [ebp-0x31a29a16]
  423349:	inc    esp
  42334a:	dec    ebp
  42334b:	xor    DWORD PTR [ebp-0x29],ecx
  42334e:	cs inc edx
  423350:	test   DWORD PTR [edi+ebx*2-0x71],esi
  423354:	popf   
  423355:	sub    edi,eax
  423357:	mov    esp,0xb5009f1d
  42335c:	mov    bl,0x95
  42335e:	dec    edx
  42335f:	cs pop eax
  423361:	sbb    al,0x7b
  423363:	mov    ss,WORD PTR [edi-0x1b]
  423366:	lods   al,BYTE PTR ds:[esi]
  423367:	pop    edi
  423368:	adc    al,0xb7
  42336a:	jns    0x423325
  42336c:	scas   eax,DWORD PTR es:[edi]
  42336d:	dec    ebx
  42336e:	push   eax
  42336f:	sbb    al,0x8f
  423371:	mov    eax,0x43b5a3f3
  423376:	(bad)  
  423377:	cmp    bl,BYTE PTR [eax-0x363c9754]
  42337d:	scas   eax,DWORD PTR es:[edi]
  42337e:	js     0x4233a2
  423380:	ds (bad) 
  423382:	out    dx,eax
  423383:	mov    ecx,0x635687cc
  423388:	add    al,0x7c
  42338a:	stos   BYTE PTR es:[edi],al
  42338b:	push   ecx
  42338c:	stc    
  42338d:	jbe    0x423409
  42338f:	and    esi,DWORD PTR [ebx]
  423391:	inc    edi
  423392:	call   0x50c6fbbd
  423397:	stos   DWORD PTR es:[edi],eax
  423398:	(bad)
  42339c:	dec    ebx
  42339d:	addr16 pop ss
  42339f:	and    ah,BYTE PTR [ecx-0x15]
  4233a2:	mov    dh,0x4a
  4233a4:	outs   dx,DWORD PTR ds:[esi]
  4233a5:	bnd jmp DWORD PTR [ecx+0x2a075bd5]
  4233ac:	push   es
  4233ad:	imul   ebp,DWORD PTR [esi],0xffffffe9
  4233b0:	jnp    0x42342e
  4233b2:	xor    ebx,edx
  4233b4:	loopne 0x4233c1
  4233b6:	xchg   esp,eax
  4233b7:	lds    edx,FWORD PTR [ebp-0x35]
  4233ba:	cld    
  4233bb:	(bad)  
  4233bc:	into   
  4233bd:	enter  0x4b32,0xf5
  4233c1:	sahf   
  4233c2:	fimul  WORD PTR [esi+0x3015f5dd]
  4233c8:	inc    esi
  4233c9:	stos   BYTE PTR es:[edi],al
  4233ca:	test   BYTE PTR [ecx*8-0x24764480],ah
  4233d1:	inc    ebp
  4233d2:	mov    BYTE PTR [eax+0x3d695218],dh
  4233d8:	pop    ss
  4233d9:	dec    esi
  4233da:	call   0x267a1f61
  4233df:	add    dl,BYTE PTR [ebx-0x57]
  4233e2:	fsubr  DWORD PTR ds:0xd54d40cd
  4233e8:	adc    BYTE PTR [ebx-0x729443fd],al
  4233ee:	sbb    DWORD PTR [edi-0x37],ebp
  4233f1:	mov    ch,0x29
  4233f3:	outs   dx,DWORD PTR ds:[esi]
  4233f4:	push   es
  4233f5:	call   0x59e2:0x5f70bac7
  4233fc:	sbb    BYTE PTR [edi-0xffaabfc],ah
  423402:	mov    edx,0x46fb146
  423407:	dec    ebp
  423408:	cdq    
  423409:	mov    esp,0xe0798361
  42340e:	ret    
  42340f:	and    BYTE PTR [ebx],dh
  423411:	mov    cl,0xcc
  423413:	inc    esi
  423414:	jno    0x423438
  423416:	adc    eax,0x377e7973
  42341b:	lahf   
  42341c:	sbb    DWORD PTR [ebx-0xf],ebx
  42341f:	inc    ecx
  423420:	xchg   ebx,eax
  423421:	cmp    esi,DWORD PTR [ebx+edx*2-0x56]
  423425:	fwait
  423426:	out    dx,eax
  423427:	mov    eax,0x5e0d6d23
  42342c:	ss out dx,eax
  42342e:	sub    al,0x9a
  423430:	cmc    
  423431:	stos   BYTE PTR es:[edi],al
  423432:	(bad)  
  423433:	js     0x423472
  423435:	push   edx
  423436:	iret   
  423437:	add    al,0x2b
  423439:	imul   ecx,DWORD PTR [ecx+0x4cc90fb3],0x5d
  423440:	imul   eax,edi,0x27084af7
  423446:	mov    bh,0x13
  423448:	leave  
  423449:	mov    al,ds:0x795cfeb2
  42344e:	(bad)  
  42344f:	xlat   BYTE PTR ds:[ebx]
  423450:	nop    DWORD PTR [esi]
  423453:	loopne 0x4234d2
  423455:	sub    al,0x12
  423457:	sahf   
  423458:	jns    0x42344a
  42345a:	mov    eax,0xdad7db16
  42345f:	test   eax,0x5e7ff16a
  423464:	call   0xed9e2ed4
  423469:	test   DWORD PTR [ebx+0x4ce60bbb],edx
  42346f:	xchg   edi,eax
  423470:	test   DWORD PTR [edi],ebp
  423472:	or     BYTE PTR [edi-0x6e],0xb8
  423476:	mov    ds:0x480aa83c,al
  42347b:	push   esp
  42347c:	adc    al,0x22
  42347e:	out    dx,eax
  42347f:	cmp    al,0xbb
  423481:	or     dl,BYTE PTR [esi+eax*4+0x3d]
  423485:	in     eax,0x96
  423487:	clc    
  423488:	mov    edx,?
  42348a:	xchg   DWORD PTR [edi+0x52ee0e98],ebx
  423490:	fdiv   st(5),st
  423492:	div    DWORD PTR [ecx-0x54]
  423495:	pusha  
  423496:	lods   eax,DWORD PTR ds:[esi]
  423497:	cs jb  0x4234c7
  42349a:	fild   DWORD PTR [ecx-0x7c6fdf99]
  4234a0:	jg     0x423461
  4234a2:	cmp    DWORD PTR [edi],ecx
  4234a4:	(bad)  
  4234a5:	adc    dl,BYTE PTR [ebx]
  4234a7:	fild   WORD PTR [ebp+0x67]
  4234aa:	dec    eax
  4234ab:	mov    ah,0x82
  4234ad:	test   DWORD PTR [edx],0x276a1ece
  4234b3:	ds push edi
  4234b5:	daa    
  4234b6:	push   edx
  4234b7:	arpl   WORD PTR [eax-0x58],di
  4234ba:	and    BYTE PTR [edx],0xf6
  4234bd:	push   cs
  4234be:	xlat   BYTE PTR ds:[ebx]
  4234bf:	dec    ecx
  4234c0:	ficom  DWORD PTR [ecx+eiz*4]
  4234c3:	in     al,0x6e
  4234c5:	shr    BYTE PTR [esi-0x7c],0xc8
  4234c9:	js     0x4234d6
  4234cb:	lods   al,BYTE PTR ds:[esi]
  4234cc:	pop    ss
  4234cd:	dec    edx
  4234ce:	xchg   esp,eax
  4234cf:	sbb    ch,BYTE PTR [edx]
  4234d1:	xor    BYTE PTR [ebx-0x31],ch
  4234d4:	jns    0x423525
  4234d6:	sbb    eax,0xadd751ba
  4234db:	sbb    DWORD PTR [ecx],ebx
  4234dd:	push   ebp
  4234de:	add    bl,BYTE PTR [ecx]
  4234e0:	out    dx,eax
  4234e1:	lock mov edi,0x9e566b5d
  4234e7:	dec    ecx
  4234e8:	dec    edi
  4234e9:	scas   al,BYTE PTR es:[edi]
  4234ea:	and    eax,DWORD PTR [ecx-0x15]
  4234ed:	shr    DWORD PTR [ebx+0x46],0xb
  4234f1:	sub    dh,ah
  4234f3:	mov    esi,?
  4234f5:	xlat   BYTE PTR ds:[ebx]
  4234f6:	add    al,0x50
  4234f9:	inc    ecx
  4234fa:	retf   0x3df9
  4234fd:	pushf  
  4234fe:	cmp    edi,DWORD PTR [ecx]
  423500:	daa    
  423501:	push   0xffffffd0
  423503:	and    eax,DWORD PTR [ecx-0x2a25e607]
  423509:	std    
  42350a:	adc    BYTE PTR [edx],bl
  42350c:	mov    WORD PTR [edi+0x0],?
  42350f:	cmp    BYTE PTR [eax],bl
  423511:	into   
  423512:	nop
  423513:	nop
  423514:	cmp    dl,BYTE PTR [esi+edi*2-0x5c22d768]
  42351b:	inc    edi
  42351c:	lds    edx,FWORD PTR [ecx]
  42351e:	push   esi
  42351f:	and    BYTE PTR [ebp-0x216b320],dl
  423525:	stos   DWORD PTR es:[edi],eax
  423526:	xor    BYTE PTR [edx+0x20],0x2b
  42352a:	mov    edi,DWORD PTR [ebx+edi*2+0x3f]
  42352e:	and    ebx,DWORD PTR [ebx]
  423530:	or     al,0xcd
  423532:	jns    0x423536
  423534:	sar    BYTE PTR [esi],0xd7
  423537:	push   edi
  423538:	pop    ebx
  423539:	xchg   ebx,eax
  42353a:	or     al,0x57
  42353c:	mov    dh,BYTE PTR [esi+eiz*2+0x43071a16]
  423543:	fild   DWORD PTR [ecx-0x20736758]
  423549:	fsub   QWORD PTR [edi+0x49]
  42354c:	xor    bl,BYTE PTR [ecx-0x70a05ad6]
  423552:	dec    esp
  423553:	mov    ds:0x194e16a8,eax
  423558:	mov    cs,WORD PTR [edx+0x1531afb4]
  42355e:	out    0xf1,eax
  423560:	retf   0xb282
  423563:	shr    DWORD PTR [esi-0x58c9f7f2],cl
  423569:	cmp    DWORD PTR [ebp-0x18],esi
  42356c:	into   
  42356d:	shr    DWORD PTR [ebp-0x2569746d],cl
  423573:	sar    BYTE PTR [ecx-0x4a6a651b],1
  423579:	push   edx
  42357a:	pop    ecx
  42357b:	or     ebp,ebx
  42357d:	aaa    
  42357e:	sub    ch,dh
  423580:	out    0xfe,al
  423582:	cwde   
  423583:	jg     0x8fed02ee
  423589:	into   
  42358a:	in     eax,0xd5
  42358c:	adc    DWORD PTR [eax+eax*4],0xd258d58
  423593:	dec    ebp
  423594:	pop    eax
  423595:	push   esi
  423596:	sub    esp,DWORD PTR [eax+edx*1-0x42]
  42359a:	mov    cl,0xf8
  42359c:	push   edi
  42359d:	test   al,0x3b
  42359f:	aam    0x31
  4235a1:	push   ebx
  4235a2:	fst    QWORD PTR [ebp-0x3f]
  4235a5:	mov    edx,0x7d7a9658
  4235aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235ab:	cmp    bh,bh
  4235ad:	pop    eax
  4235ae:	scas   al,BYTE PTR es:[edi]
  4235af:	add    BYTE PTR [edx],0x3f
  4235b2:	adc    BYTE PTR [edx+0x19a44fc2],0xf3
  4235b9:	out    dx,al
  4235ba:	sbb    BYTE PTR [ecx-0x4d],dl
  4235bd:	push   ds
  4235be:	psubd  mm5,QWORD PTR [esi]
  4235c1:	push   ds
  4235c2:	mov    esi,0x43f4bb67
  4235c7:	xor    ecx,esp
  4235c9:	mov    dh,0x6f
  4235cb:	inc    edi
  4235cc:	or     DWORD PTR [edx+0x22ea9915],ecx
  4235d2:	jle    0x423563
  4235d4:	in     al,0x81
  4235d6:	gs cld 
  4235d8:	popf   
  4235d9:	cmp    al,0xd1
  4235db:	repz xchg edi,eax
  4235dd:	xlat   BYTE PTR ds:[ebx]
  4235de:	dec    ebp
  4235df:	scas   al,BYTE PTR es:[edi]
  4235e0:	dec    ebx
  4235e1:	dec    ebx
  4235e2:	xor    esp,eax
  4235e4:	das    
  4235e5:	xor    cl,cl
  4235e7:	in     eax,dx
  4235e8:	and    DWORD PTR [esi+0x56970198],ebp
  4235ee:	aaa    
  4235ef:	out    0x9c,eax
  4235f1:	xchg   edx,eax
  4235f2:	pop    ds
  4235f3:	mov    ebp,0xc4889315
  4235f8:	in     al,0xdd
  4235fa:	adc    eax,0x60a39d7c
  4235ff:	cmp    BYTE PTR ds:0x250bcd74,bl
  423605:	(bad)  
  423606:	ss cli 
  423608:	dec    edi
  423609:	es and al,0xea
  42360c:	jbe    0x42365a
  42360e:	ins    DWORD PTR es:[edi],dx
  42360f:	sbb    al,0x43
  423611:	imul   edi,DWORD PTR [edx],0x86386fa6
  423617:	sahf   
  423618:	mov    ah,0x58
  42361a:	mov    bh,0x32
  42361c:	cwde   
  42361d:	and    edx,esp
  42361f:	push   es
  423620:	retf   
  423621:	stc    
  423622:	cmp    ch,BYTE PTR [edx-0x5c]
  423625:	or     al,0x12
  423627:	sbb    dl,BYTE PTR [esi-0x25]
  42362a:	cmp    eax,0x4d6d934d
  42362f:	pop    es
  423630:	push   edi
  423631:	addr16 push ss
  423633:	cmp    BYTE PTR ss:[edi],dl
  423636:	fsub   QWORD PTR [esi]
  423638:	mov    bh,0xd7
  42363a:	les    esp,FWORD PTR [edi-0x18]
  42363d:	stos   DWORD PTR es:[edi],eax
  42363e:	inc    ecx
  42363f:	cmp    DWORD PTR [eax+0x495b0e53],esi
  423645:	daa    
  423646:	outs   dx,BYTE PTR ds:[esi]
  423647:	imul   ecx,DWORD PTR [ecx-0x555894e2],0x17
  42364e:	jmp    0x2f814d68
  423653:	and    esi,DWORD PTR [edi]
  423655:	(bad)  
  423656:	rcr    bh,1
  423658:	jo     0x4235db
  42365a:	test   al,0x5d
  42365c:	sub    dl,bh
  42365e:	pop    esp
  42365f:	adc    eax,0x9f26c723
  423664:	repz inc ebx
  423666:	mov    DWORD PTR [edx-0x1c],0x3c9f9177
  42366d:	adc    DWORD PTR [ebp+0x7b],0x438bdfd0
  423674:	sub    eax,0x36857c12
  423679:	sub    bh,BYTE PTR [edx+0x4670dbe1]
  42367f:	pop    esp
  423680:	mov    bl,0xc5
  423682:	jecxz  0x423687
  423684:	sbb    ecx,esp
  423686:	or     al,0x50
  423688:	xor    bl,BYTE PTR [esi+0x5a04538f]
  42368e:	xchg   esp,eax
  42368f:	push   ebp
  423690:	adc    al,0x5f
  423692:	jno    0x423665
  423694:	and    ebp,DWORD PTR [ebx-0x6c]
  423697:	or     DWORD PTR [esi-0xe],esp
  42369a:	jmp    0x423651
  42369c:	cli    
  42369d:	push   0x38eeb774
  4236a2:	(bad)  
  4236a4:	and    ah,dh
  4236a6:	fcomp  st(4)
  4236a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236a9:	imul   edx,DWORD PTR [ecx+0x48],0x7f
  4236ad:	mov    cl,0x47
  4236af:	mov    ebp,0xf9ac11e9
  4236b4:	pushf  
  4236b5:	inc    ecx
  4236b6:	jns    0x42367b
  4236b8:	mov    dl,0x7
  4236ba:	in     eax,dx
  4236bb:	mov    ebp,0x45bc5f73
  4236c0:	add    esp,DWORD PTR [eax+0x1f8b43]
  4236c6:	(bad)  
  4236c7:	imul   esi,DWORD PTR ds:0xccab0de7,0xb58b762d
  4236d1:	sti    
  4236d2:	ins    BYTE PTR es:[edi],dx
  4236d3:	mov    BYTE PTR [edx],ah
  4236d5:	jg     0x4236b1
  4236d7:	das    
  4236d8:	push   es
  4236d9:	xchg   esp,eax
  4236da:	lock out 0x17,al
  4236dd:	pusha  
  4236de:	stc    
  4236df:	sbb    eax,DWORD PTR [esi+0x47fedb15]
  4236e5:	sbb    edi,ebp
  4236e7:	push   0xcee80781
  4236ec:	pop    ds
  4236ed:	ret    
  4236ee:	mov    al,ds:0x85242c1b
  4236f3:	add    eax,0x60aac918
  4236f8:	out    0xa4,al
  4236fa:	outs   dx,DWORD PTR ds:[esi]
  4236fb:	lea    edi,[eax]
  4236fd:	pop    edi
  4236fe:	jmp    0x4127:0xacb6e162
  423705:	std    
  423706:	cmp    al,0xde
  423708:	outs   dx,BYTE PTR ds:[esi]
  423709:	inc    eax
  42370a:	mov    ebp,0xa4b17cda
  42370f:	push   ecx
  423710:	dec    esi
  423711:	cmp    esp,DWORD PTR [ecx+edx*1+0x36]
  423715:	or     al,0xdc
  423717:	xchg   edi,eax
  423718:	shl    BYTE PTR [edi-0x5],0xba
  42371c:	ficomp DWORD PTR [edi+0x7f]
  42371f:	les    esp,FWORD PTR [ecx]
  423721:	(bad)  
  423723:	sbb    BYTE PTR [ecx],dh
  423725:	add    bh,ch
  423727:	in     eax,0x69
  423729:	retf   0xf4a7
  42372c:	jne    0x4237ab
  42372e:	xlat   BYTE PTR ds:[ebx]
  42372f:	mov    esi,0xec3741b5
  423734:	mov    edi,0x3f57a5d5
  423739:	jno    0x423720
  42373b:	scas   al,BYTE PTR es:[edi]
  42373c:	pop    ds
  42373d:	or     ebx,DWORD PTR [esi+ecx*2-0x439080e]
  423744:	lods   al,BYTE PTR ds:[esi]
  423745:	pop    ebx
  423746:	clc    
  423747:	jno    0x4237ae
  423749:	inc    eax
  42374a:	addr16 in eax,0x9d
  42374d:	sbb    dl,ah
  42374f:	dec    eax
  423750:	mov    al,0x95
  423752:	xor    esp,eax
  423754:	gs xchg edx,eax
  423756:	lahf   
  423757:	xchg   esp,eax
  423758:	arpl   WORD PTR [ecx],si
  42375a:	in     eax,0x86
  42375c:	push   es
  42375d:	inc    ebp
  42375e:	pop    edx
  42375f:	mov    esp,0x6ddf89d5
  423764:	jo     0x423748
  423766:	fidivr WORD PTR [ecx]
  423768:	or     eax,0xa3ffd6c8
  42376d:	inc    ecx
  42376e:	add    DWORD PTR [eax],esi
  423770:	test   eax,0x7782c829
  423775:	xor    DWORD PTR [ecx+0x71db9ad7],ebx
  42377b:	push   0x7689a198
  423780:	inc    ebx
  423781:	repnz sahf 
  423783:	xlat   BYTE PTR ds:[ebx]
  423784:	jl     0x4237e6
  423786:	fadd   QWORD PTR [ebx+edi*2]
  423789:	mov    ds:0x933330f9,al
  42378e:	sub    DWORD PTR [eax-0x5b70c228],0x7a0e3e2b
  423798:	mov    bh,BYTE PTR [ebx+0x5c]
  42379b:	fistp  WORD PTR [eax-0x5bc15819]
  4237a1:	dec    esi
  4237a2:	test   al,0xdd
  4237a4:	xchg   DWORD PTR [eax-0xdda2fbf],esi
  4237aa:	adc    DWORD PTR [ebx-0x6e],ecx
  4237ad:	adc    cl,ah
  4237af:	(bad)  
  4237b0:	idiv   BYTE PTR [eax]
  4237b2:	mov    ecx,0x7c7b89be
  4237b7:	mov    fs,WORD PTR [ebp-0x219cb3e8]
  4237bd:	jmp    0x1c97d0b9
  4237c2:	cmp    eax,0x99cd7889
  4237c7:	mov    ds:0x219e9ea9,eax
  4237cc:	xor    eax,0xe73c39f3
  4237d1:	mov    ebp,0xf4158e4
  4237d6:	sub    al,0xa6
  4237d8:	xchg   DWORD PTR [ebx],edx
  4237da:	shr    edx,0x9
  4237dd:	cmp    al,0x4a
  4237df:	shl    DWORD PTR [eax-0x2e95d0ad],1
  4237e5:	mov    ebx,0xd26b997f
  4237ea:	fs ja  0x423776
  4237ed:	repnz ins BYTE PTR es:[edi],dx
  4237ef:	shl    BYTE PTR [esi],0x51
  4237f2:	fdiv   QWORD PTR [bx+si-0x3]
  4237f6:	mov    ds:0xa8734fee,al
  4237fb:	hlt    
  4237fc:	and    ebx,DWORD PTR [ebx-0x33]
  4237ff:	jbe    0x423843
  423801:	test   BYTE PTR [edx],dh
  423803:	and    edx,edx
  423805:	sahf   
  423806:	(bad)  
  423807:	aam    0x92
  423809:	mov    ch,0x17
  42380b:	xchg   edx,eax
  42380c:	pop    esp
  42380d:	mov    al,0x8e
  42380f:	jmp    0x423818
  423811:	imul   esp,DWORD PTR ds:0x73389c59,0x3d387b4b
  42381b:	or     DWORD PTR [ecx],ebp
  42381d:	nop
  42381e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42381f:	push   ebp
  423820:	add    esi,DWORD PTR [edx+0x7]
  423823:	stc    
  423824:	push   es
  423825:	rcl    edi,1
  423827:	int    0x38
  423829:	sbb    DWORD PTR ss:[edx+0x62],0x8963c0c5
  423831:	imul   edx,DWORD PTR [ebp-0x2a9d9520],0xe4a06d5a
  42383b:	push   ecx
  42383c:	sub    al,0xce
  42383e:	sbb    al,0x31
  423840:	out    0x98,eax
  423842:	mov    dl,0xe3
  423844:	popa   
  423845:	jle    0x423867
  423847:	adc    dh,BYTE PTR [edi]
  423849:	inc    edx
  42384a:	test   BYTE PTR [eax-0x52],dl
  42384d:	add    esp,edx
  42384f:	pop    edi
  423850:	xchg   DWORD PTR [esi+0x5b],edx
  423853:	pop    eax
  423854:	out    0x19,eax
  423856:	(bad)  
  423857:	xchg   edi,eax
  423858:	in     al,dx
  423859:	dec    esi
  42385a:	xor    bh,bl
  42385c:	scas   al,BYTE PTR es:[edi]
  42385d:	dec    ebp
  42385e:	sbb    al,0xdc
  423860:	mov    BYTE PTR [eax+ebp*1],ch
  423863:	cdq    
  423864:	mov    edx,0x1291f44c
  423869:	rcl    BYTE PTR [bx+0x6ae7],1
  42386e:	jb     0x42385d
  423870:	psubusb mm0,QWORD PTR [edx]
  423873:	xchg   BYTE PTR [edx],al
  423875:	stos   DWORD PTR es:[edi],eax
  423876:	add    cl,BYTE PTR [esi-0x651c6de1]
  42387c:	ror    BYTE PTR [esi],1
  42387e:	inc    ebx
  42387f:	sub    eax,0x46726d72
  423884:	scas   al,BYTE PTR es:[edi]
  423885:	push   edi
  423886:	and    ebp,DWORD PTR [edx+0x54]
  423889:	data16 adc BYTE PTR [edx],ch
  42388c:	adc    ah,BYTE PTR [ebp-0x516eddea]
  423892:	dec    edi
  423893:	rol    dh,cl
  423895:	jge    0x4238b8
  423897:	xchg   esi,eax
  423898:	int    0x7
  42389a:	(bad)  
  42389b:	push   ebx
  42389c:	xchg   DWORD PTR [esi],edx
  42389e:	add    al,0x6c
  4238a0:	xor    ch,ch
  4238a2:	shl    DWORD PTR [edx],1
  4238a4:	inc    ebx
  4238a5:	in     eax,0xa9
  4238a7:	pop    esp
  4238a8:	arpl   bx,dx
  4238aa:	fimul  DWORD PTR ds:0x1cdd85a8
  4238b0:	rcl    cl,cl
  4238b2:	shr    ebp,0xd
  4238b5:	shr    cl,cl
  4238b7:	add    bh,BYTE PTR ds:0x838e1971
  4238bd:	ins    DWORD PTR es:[edi],dx
  4238be:	jle    0x42389e
  4238c0:	pop    ss
  4238c1:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238c3:	fistp  QWORD PTR [ecx]
  4238c5:	mov    ch,0xd7
  4238c7:	xchg   ebx,eax
  4238c8:	cli    
  4238c9:	dec    edx
  4238ca:	adc    al,0x7b
  4238cc:	(bad)  
  4238cd:	out    0xd7,eax
  4238cf:	pushf  
  4238d0:	cs es push 0xffffff8e
  4238d4:	sbb    ah,ch
  4238d6:	sub    al,0x15
  4238d8:	inc    edi
  4238d9:	retf   0x5780
  4238dc:	pop    edx
  4238dd:	push   0xbd4cdaff
  4238e2:	(bad)  
  4238e3:	pusha  
  4238e4:	inc    ebx
  4238e5:	aam    0x8
  4238e7:	dec    eax
  4238e8:	sub    edx,esi
  4238ea:	and    eax,0x3ca3e1c2
  4238ef:	fwait
  4238f0:	mul    DWORD PTR [ecx*2-0x66038709]
  4238f7:	push   0xadbac43a
  4238fc:	mov    eax,ds:0x8449fdd5
  423901:	jne    0x4238e8
  423903:	sbb    edx,eax
  423905:	pop    ebx
  423907:	pusha  
  423908:	sahf   
  423909:	out    0x12,eax
  42390b:	adc    edi,eax
  42390d:	daa    
  42390e:	cmp    eax,0xf822ef13
  423913:	lea    edx,[ebx]
  423915:	daa    
  423916:	cmp    dh,BYTE PTR ds:0xd51a793a
  42391c:	dec    edi
  42391d:	fsubr  DWORD PTR [edx+edi*2-0x16a861e7]
  423924:	jg     0x423923
  423926:	clc    
  423927:	xchg   eax,esp
  423929:	xchg   esi,eax
  42392a:	sbb    al,BYTE PTR [esp+ebp*8+0x20]
  42392e:	pop    ecx
  42392f:	sar    DWORD PTR [eax+0x50],0x46
  423933:	push   edi
  423934:	scas   al,BYTE PTR es:[edi]
  423935:	jnp    0x4238d8
  423937:	mov    ds:0x53e9c1d8,eax
  42393c:	sbb    al,0x75
  42393e:	push   0x37a04e60
  423943:	or     BYTE PTR [edx+0x4aa5a50c],bl
  423949:	pop    ebp
  42394a:	jo     0x4238ff
  42394c:	icebp  
  42394d:	int    0xfc
  42394f:	call   0xc8eac0ea
  423954:	test   dh,bh
  423956:	adc    ebx,DWORD PTR [edx]
  423958:	add    BYTE PTR [ebx-0x444b6c33],bh
  42395e:	inc    edi
  42395f:	(bad)  
  423960:	jp     0x42390a
  423962:	daa    
  423963:	lea    ebp,[edx-0x1e1ea59b]
  423969:	mov    eax,ds:0x3d984580
  42396e:	(bad)  
  423970:	shl    BYTE PTR [eax-0x3e],cl
  423973:	stos   DWORD PTR es:[edi],eax
  423974:	in     eax,dx
  423975:	fwait
  423976:	test   BYTE PTR [edi+0xb],bl
  423979:	es sub eax,0x3821211e
  42397f:	(bad)  
  423980:	int    0x26
  423982:	adc    DWORD PTR [edx-0x30],ebp
  423985:	inc    eax
  423986:	jle    0x4239be
  423988:	xor    bl,BYTE PTR [edi]
  42398a:	push   ebp
  42398b:	mov    al,0x1f
  42398e:	repz dec ebp
  423990:	out    0x8d,al
  423992:	pop    es
  423993:	test   al,0xc
  423995:	adc    al,bh
  423997:	cs das 
  423999:	ret    0x218
  42399c:	out    0xd8,al
  42399e:	lock pop ebp
  4239a0:	or     al,0xd5
  4239a2:	(bad)  
  4239a4:	outs   dx,BYTE PTR ds:[esi]
  4239a5:	repz (bad) 
  4239a7:	mov    eax,0x6a562233
  4239ac:	stc    
  4239ad:	mov    ds,WORD PTR [edx]
  4239af:	sahf   
  4239b0:	nop
  4239b1:	test   DWORD PTR [ebp+0x5653fd27],0x249c5155
  4239bb:	outs   dx,DWORD PTR ds:[esi]
  4239bc:	and    DWORD PTR [ebx+ebp*1-0x496ef9b2],ebp
  4239c3:	popf   
  4239c4:	fwait
  4239c5:	stc    
  4239c6:	fadd   DWORD PTR [ebp+0x22]
  4239c9:	das    
  4239ca:	add    al,0x88
  4239cc:	in     eax,0xfb
  4239ce:	cmp    bh,dl
  4239d0:	ret    0xdbcf
  4239d3:	xchg   ebp,eax
  4239d4:	out    0x93,eax
  4239d6:	pop    esi
  4239d7:	call   0x2966:0xd56f232b
  4239de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239df:	out    dx,eax
  4239e0:	jnp    0x4239ba
  4239e2:	and    dl,BYTE PTR [edi]
  4239e4:	jmp    0x15f04ee4
  4239e9:	in     eax,0xcc
  4239eb:	inc    edx
  4239ec:	shl    ebp,1
  4239ee:	jle    0x4239e6
  4239f0:	and    ebp,DWORD PTR [edx+0xe]
  4239f3:	jle    0x423978
  4239f5:	std    
  4239f6:	sti    
  4239f7:	sub    esi,ebp
  4239f9:	ja     0x423a26
  4239fb:	sti    
  4239fc:	and    bl,bl
  4239fe:	inc    eax
  4239ff:	mov    eax,0x64886881
  423a04:	xchg   esp,eax
  423a05:	mov    esp,0x70ff5c56
  423a0a:	push   es
  423a0b:	shl    BYTE PTR [edi],cl
  423a0d:	aas    
  423a0e:	sbb    DWORD PTR ds:0xcd68327b,esi
  423a14:	push   edi
  423a15:	add    DWORD PTR [edi],ecx
  423a17:	daa    
  423a18:	daa    
  423a19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a1a:	mov    eax,0x7f7cc9ae
  423a1f:	push   edi
  423a20:	mov    esi,0x701cbff3
  423a25:	fucomip st,st(4)
  423a27:	xchg   dl,bh
  423a29:	int    0x98
  423a2b:	(bad)  
  423a2c:	lahf   
  423a2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a2e:	sar    DWORD PTR [edi-0x5039c68],cl
  423a34:	hlt    
  423a35:	mov    al,0xc4
  423a37:	xor    eax,0x71842c77
  423a3c:	cmp    eax,ebp
  423a3e:	int3   
  423a3f:	inc    ebx
  423a40:	arpl   WORD PTR [ebp+0x2b09b673],cx
  423a46:	cmp    ebx,DWORD PTR [esi+edx*1]
  423a49:	bound  edi,QWORD PTR [edx+0x4894253a]
  423a4f:	adc    DWORD PTR [edx+eiz*4-0x5b],edx
  423a53:	cmp    edi,edx
  423a55:	popa   
  423a56:	pop    esi
  423a57:	adc    ebp,DWORD PTR [edx+esi*8+0x1d17c99b]
  423a5e:	pop    edi
  423a5f:	pop    edx
  423a60:	add    eax,ecx
  423a62:	outs   dx,DWORD PTR ds:[esi]
  423a63:	rol    DWORD PTR [ebx-0x3d],cl
  423a66:	rcr    ebp,0x60
  423a69:	aam    0xb1
  423a6b:	hlt    
  423a6c:	mov    edx,0xb5f18e8e
  423a71:	loop   0x4239f4
  423a73:	pop    esi
  423a74:	jg     0x423aaa
  423a76:	ss (bad) 
  423a78:	cli    
  423a79:	les    edi,FWORD PTR [edi+0x502c5bc8]
  423a7f:	mov    bh,0x60
  423a81:	jmp    0x72372cc1
  423a86:	add    BYTE PTR [edi],al
  423a88:	or     edx,esp
  423a8a:	xchg   esp,eax
  423a8b:	jno    0x423aa1
  423a8d:	(bad)  
  423a8e:	xchg   edi,eax
  423a8f:	adc    ecx,DWORD PTR [esi+0x33]
  423a92:	mov    al,ds:0xf686574f
  423a97:	xor    edi,DWORD PTR [ebx]
  423a99:	add    DWORD PTR [ecx+0x56],ebp
  423a9c:	loopne 0x423a83
  423a9e:	mov    eax,0xbecbcea4
  423aa3:	add    BYTE PTR [ecx-0x563a858c],ah
  423aa9:	push   ss
  423aaa:	out    0x95,eax
  423aac:	dec    ebp
  423aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423aae:	xchg   ebp,eax
  423aaf:	adc    DWORD PTR [ebx-0x49],eax
  423ab2:	icebp  
  423ab3:	jmp    0x423a76
  423ab5:	ins    BYTE PTR es:[edi],dx
  423ab6:	into   
  423ab7:	pop    ebp
  423ab8:	ficomp DWORD PTR [eax]
  423aba:	jp     0x423b2d
  423abc:	stos   DWORD PTR es:[edi],eax
  423abd:	adc    esp,DWORD PTR [esi-0x6a416ed6]
  423ac3:	jo     0x423b38
  423ac5:	in     eax,0xea
  423ac7:	sti    
  423ac8:	mov    ecx,0xa773a622
  423acd:	mov    bh,0xc9
  423acf:	sub    DWORD PTR [edx+0x4abfc4aa],edi
  423ad5:	xchg   ebx,eax
  423ad6:	mov    al,0x96
  423ad8:	pop    edx
  423ad9:	test   esp,ecx
  423adb:	push   ecx
  423adc:	mov    ebp,0x55324f21
  423ae1:	pop    edi
  423ae2:	xor    eax,0x8497d7e0
  423ae7:	sbb    BYTE PTR [ebp+0x1273ee91],al
  423aed:	lods   eax,DWORD PTR ds:[esi]
  423aee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423aef:	in     al,dx
  423af0:	pop    esp
  423af1:	pop    ebp
  423af2:	setle  BYTE PTR [edi-0x1779aa17]
  423af9:	fimul  WORD PTR [ebx+0x66b943f7]
  423aff:	jmp    0xcd9d:0x59c68e5b
  423b06:	ja     0x423b0b
  423b08:	aas    
  423b09:	test   BYTE PTR [ebx+0x46],0x7e
  423b0d:	pop    ecx
  423b0e:	sub    al,0xf1
  423b10:	js     0x423b09
  423b12:	mov    bl,0x78
  423b14:	sbb    al,BYTE PTR [ecx]
  423b16:	gs jp  0x423b95
  423b19:	or     BYTE PTR [ebx],cl
  423b1b:	imul   eax,esp,0xffffff88
  423b1e:	pop    esi
  423b1f:	iret   
  423b20:	mov    ebp,0xdcbd204
  423b25:	fistp  DWORD PTR [esi]
  423b27:	jge    0x423afb
  423b29:	jns    0x423aef
  423b2b:	cwde   
  423b2c:	adc    al,BYTE PTR [ecx-0x3ce924fc]
  423b32:	ss (bad) 
  423b34:	lods   eax,DWORD PTR ds:[esi]
  423b35:	std    
  423b36:	repnz ins DWORD PTR es:[edi],dx
  423b38:	pop    eax
  423b39:	sbb    ah,BYTE PTR [esi+0x530c551a]
  423b3f:	(bad)  
  423b40:	(bad)  [edi+0x19c52f26]
  423b46:	mov    esp,0x2db5475f
  423b4b:	dec    ebp
  423b4c:	scas   eax,DWORD PTR es:[edi]
  423b4d:	adc    BYTE PTR [ecx+ebp*4-0xd],0xa5
  423b52:	mov    dh,0x13
  423b54:	test   al,0x6d
  423b56:	pop    edx
  423b57:	icebp  
  423b58:	(bad)  
  423b59:	sahf   
  423b5a:	add    al,ch
  423b5c:	lods   al,BYTE PTR ds:[esi]
  423b5d:	sti    
  423b5e:	jb     0x423b55
  423b60:	shl    DWORD PTR [ebp+eax*1-0xa2cf0b0],cl
  423b67:	adc    al,0xdf
  423b69:	aad    0x35
  423b6b:	enter  0xeab0,0xfe
  423b6f:	hlt    
  423b70:	test   DWORD PTR [ecx],0xf2ab1f15
  423b76:	repnz call FWORD PTR [ebp+0x6e7e37d7]
  423b7d:	in     eax,dx
  423b7e:	jl     0x423bd2
  423b80:	lods   eax,DWORD PTR ds:[esi]
  423b81:	idiv   BYTE PTR [ebp+0x67]
  423b84:	push   eax
  423b85:	shr    eax,0xea
  423b88:	pop    esi
  423b89:	cmc    
  423b8a:	sbb    DWORD PTR [edi],ebp
  423b8c:	repz xchg edx,eax
  423b8e:	jmp    0x65a7:0x16d4b44
  423b95:	pusha  
  423b96:	mov    esp,0x6ec957e7
  423b9b:	sub    ebx,esi
  423b9d:	mov    al,0x5
  423b9f:	sub    ax,WORD PTR [ebx+0x6b]
  423ba3:	ja     0x423bee
  423ba5:	push   cs
  423ba6:	sahf   
  423ba7:	int3   
  423ba8:	or     DWORD PTR [ebx-0x24],edi
  423bab:	adc    eax,0x8f2df0c9
  423bb0:	push   esp
  423bb1:	adc    BYTE PTR [eax+0x2ed6ebba],0xfb
  423bb8:	loop   0x423c24
  423bba:	or     eax,0x73673d98
  423bbf:	dec    eax
  423bc0:	push   esi
  423bc1:	pop    edx
  423bc2:	js     0x423c32
  423bc4:	mov    bl,0xcb
  423bc6:	mov    edi,eax
  423bc8:	popa   
  423bc9:	add    BYTE PTR [ebx+0x67],bh
  423bcc:	xchg   edi,eax
  423bcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423bce:	(bad)  
  423bcf:	rcl    BYTE PTR ds:0x51e64675,0x57
  423bd6:	lods   al,BYTE PTR ds:[esi]
  423bd7:	clc    
  423bd8:	lds    ebx,FWORD PTR [eax-0x569fed61]
  423bde:	jae    0x423c3b
  423be0:	xchg   ecx,eax
  423be1:	adc    BYTE PTR [edi+0x6ea8b03a],dl
  423be7:	sub    DWORD PTR [edx-0x63],0x72b8c0b0
  423bee:	ins    BYTE PTR es:[edi],dx
  423bef:	test   al,0x72
  423bf1:	rol    DWORD PTR [edi+0x1a],1
  423bf4:	loopne 0x423c6c
  423bf6:	test   al,0x18
  423bf8:	sahf   
  423bf9:	jecxz  0x423b83
  423bfb:	push   edi
  423bfc:	dec    ebx
  423bfd:	pop    es
  423bfe:	dec    ebx
  423bff:	mov    cl,0x82
  423c01:	enter  0xe9e6,0xf
  423c05:	call   0x860c:0x6242a1f3
  423c0c:	in     al,dx
  423c0d:	lock push ds
  423c0f:	cmp    DWORD PTR [esp+eax*2+0x4d4d6e33],ebx
  423c16:	dec    ebp
  423c17:	mov    esi,ecx
  423c19:	xor    BYTE PTR ds:0x3339bdb0,0x77
  423c20:	pop    edx
  423c21:	stc    
  423c22:	js     0x423c4d
  423c24:	test   al,0x92
  423c26:	outs   dx,DWORD PTR ds:[esi]
  423c27:	mov    bh,0x2b
  423c29:	in     al,dx
  423c2a:	ins    BYTE PTR es:[edi],dx
  423c2b:	dec    ecx
  423c2c:	xchg   esp,eax
  423c2d:	cwde   
  423c2e:	mov    bh,0x56
  423c30:	jbe    0x423c09
  423c32:	pop    ebx
  423c33:	cmp    DWORD PTR [eax],edi
  423c35:	xchg   edi,eax
  423c36:	dec    esi
  423c37:	dec    esi
  423c38:	dec    esp
  423c39:	xor    al,0xa4
  423c3b:	sub    BYTE PTR [edi],ch
  423c3d:	leave  
  423c3e:	in     eax,dx
  423c3f:	jbe    0x423c02
  423c41:	adc    DWORD PTR [edx+0x11],ecx
  423c44:	(bad)  
  423c45:	sahf   
  423c46:	aad    0x1
  423c48:	xor    bh,BYTE PTR [edx+0x61e70180]
  423c4e:	dec    edx
  423c4f:	ret    0x9048
  423c52:	adc    cl,dh
  423c54:	mov    ds:0x800aa2bd,eax
  423c59:	dec    ebx
  423c5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c5b:	in     eax,0xef
  423c5d:	push   eax
  423c5e:	xchg   esi,eax
  423c5f:	sub    al,0xe4
  423c61:	lods   eax,DWORD PTR ds:[esi]
  423c62:	inc    ecx
  423c63:	or     BYTE PTR [ebx+0x360b1836],dl
  423c69:	imul   ebp,ebx,0x67
  423c6c:	rol    dh,1
  423c6e:	jo     0x423c2c
  423c70:	cli    
  423c71:	sbb    al,0xe3
  423c73:	push   eax
  423c74:	es inc edx
  423c76:	fnstcw WORD PTR [edi]
  423c78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c79:	cs jbe 0x423c96
  423c7c:	leave  
  423c7d:	enter  0x98c,0xa6
  423c81:	or     dl,BYTE PTR [eax]
  423c83:	cmp    BYTE PTR [edx+0x4944ab24],ah
  423c89:	add    al,0x7c
  423c8b:	shl    BYTE PTR [edi-0x1],1
  423c8e:	pop    ebp
  423c8f:	ror    DWORD PTR [eax],0x5c
  423c92:	(bad)  
  423c93:	ins    DWORD PTR es:[edi],dx
  423c94:	sub    DWORD PTR [esi-0x62],edx
  423c97:	int    0x4d
  423c99:	lea    edx,[ebp+0x4a]
  423c9c:	int3   
  423c9d:	sub    DWORD PTR [esi+edx*4],esp
  423ca0:	out    dx,al
  423ca1:	sahf   
  423ca2:	mov    ebx,?
  423ca4:	in     al,0xd0
  423ca6:	jb     0x423cf6
  423ca8:	outs   dx,BYTE PTR ds:[esi]
  423ca9:	adc    ebx,DWORD PTR [esi+0x32]
  423cac:	cmp    eax,0xf756670
  423cb1:	cmp    ebx,edx
  423cb3:	cmp    DWORD PTR [eax],esp
  423cb5:	push   es
  423cb6:	fld    DWORD PTR fs:[ecx-0x3f]
  423cba:	jl     0x423c89
  423cbc:	in     eax,0x83
  423cbe:	les    edx,FWORD PTR [edi+esi*1+0x68ab548]
  423cc5:	and    al,0x88
  423cc7:	stc    
  423cc8:	inc    edx
  423cc9:	stos   BYTE PTR es:[edi],al
  423cca:	pop    esp
  423ccb:	clc    
  423ccc:	cli    
  423ccd:	inc    esp
  423cce:	aas    
  423ccf:	cli    
  423cd0:	je     0x423ca1
  423cd2:	jle    0x423d3a
  423cd4:	lds    ebp,FWORD PTR [eax+0x5c]
  423cd7:	lock mov al,ds:0x988b2f2f
  423cdd:	not    cl
  423cdf:	mov    ah,BYTE PTR [ebx-0x2aef6ff6]
  423ce5:	or     eax,0xa3f37bfd
  423cea:	xchg   ebp,eax
  423ceb:	fst    DWORD PTR [esi]
  423ced:	or     DWORD PTR [eax],0x40e2126b
  423cf3:	xchg   DWORD PTR [eax-0x80],ebp
  423cf6:	mov    ?,ebx
  423cf8:	cdq    
  423cf9:	enter  0xa18f,0xaa
  423cfd:	sub    DWORD PTR [ebx],edx
  423cff:	dec    esi
  423d00:	pop    edi
  423d01:	sbb    eax,0xcd0965
  423d06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d07:	jmp    0x886948ab
  423d0c:	(bad)  
  423d0d:	mov    ebp,0xe073a23f
  423d12:	stos   DWORD PTR es:[edi],eax
  423d13:	lods   eax,DWORD PTR ds:[esi]
  423d14:	outs   dx,BYTE PTR ds:[esi]
  423d15:	pop    ss
  423d16:	jle    0x423d1e
  423d18:	imul   esi,DWORD PTR [eax-0x21ca794e],0x8bbf7758
  423d22:	jbe    0x423d9a
  423d24:	mov    dh,0x90
  423d26:	rcl    DWORD PTR [ecx+0x45676112],cl
  423d2c:	mov    edi,0xbf4bb919
  423d31:	push   eax
  423d32:	stos   BYTE PTR es:[edi],al
  423d33:	jo     0x423d71
  423d35:	xchg   esi,eax
  423d36:	ds mov dh,0xd9
  423d39:	loope  0x423cdd
  423d3b:	sti    
  423d3c:	aaa    
  423d3d:	dec    esp
  423d3e:	jo     0x423ce8
  423d40:	cwde   
  423d41:	lds    eax,FWORD PTR [edi+0x2c0e9943]
  423d47:	dec    edx
  423d48:	mov    WORD PTR [edi],ds
  423d4a:	push   ecx
  423d4b:	pop    edi
  423d4c:	jmp    0x423cd8
  423d4e:	mov    dh,bl
  423d50:	pushf  
  423d51:	dec    esp
  423d52:	sub    BYTE PTR [ebx+0x3c],bl
  423d55:	jmp    0x8da7:0x421224d2
  423d5c:	je     0x423dd6
  423d5e:	sub    al,0x1a
  423d60:	popf   
  423d61:	aas    
  423d62:	shl    DWORD PTR [esi+0x4d96a9ca],0x64
  423d69:	adc    al,0xfe
  423d6b:	(bad)  
  423d6c:	push   cs
  423d6d:	sbb    edi,ebp
  423d6f:	pusha  
  423d70:	inc    ebp
  423d71:	mov    ecx,0x6b314d02
  423d76:	(bad)  
  423d77:	not    BYTE PTR [eax+0x6e]
  423d7a:	fadd   QWORD PTR [ecx-0x46a5a0d1]
  423d80:	jmp    0x423d2d
  423d82:	mov    al,ds:0xe352c642
  423d87:	and    DWORD PTR [edi],0x1f
  423d8a:	test   al,0xe6
  423d8c:	test   DWORD PTR [edx],0x84019c0b
  423d92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d93:	and    al,0x8b
  423d95:	mov    al,0xbc
  423d97:	(bad)  
  423d98:	div    DWORD PTR [ebp-0x22aee968]
  423d9e:	jns    0x423d82
  423da0:	cld    
  423da1:	push   esi
  423da2:	pop    ds
  423da3:	lock (bad) 
  423da5:	mov    ecx,DWORD PTR [edi-0x41]
  423da8:	loopne 0x423da4
  423daa:	inc    esi
  423dab:	call   0x85ec6bad
  423db0:	lahf   
  423db1:	xchg   DWORD PTR [ebx-0x3a565562],edx
  423db7:	clc    
  423db8:	mov    DWORD PTR [ebp-0x54],0xc156391
  423dbf:	and    edx,ecx
  423dc1:	or     al,BYTE PTR [ebx+ecx*1+0x4e]
  423dc5:	inc    ebx
  423dc6:	mov    esp,0x1f80de3
  423dcb:	xor    dh,ah
  423dcd:	sub    bh,BYTE PTR es:[edx+edx*2]
  423dd1:	xor    BYTE PTR [edi+ebx*2+0x19],dl
  423dd5:	mov    eax,0xfd29d4b4
  423dda:	cld    
  423ddb:	add    eax,0x76ac0ccd
  423de0:	or     BYTE PTR [edx],0x87
  423de3:	rcl    DWORD PTR [esi],0xc5
  423de6:	sbb    ah,dl
  423de8:	mov    bl,BYTE PTR ds:0xf13d3e4e
  423dee:	or     BYTE PTR [ecx-0x6fa10911],bl
  423df4:	frstor [eax]
  423df6:	sbb    DWORD PTR [esi+ebx*8],ebx
  423df9:	sub    esi,0xffffff94
  423dfc:	outs   dx,BYTE PTR ds:[esi]
  423dfd:	pushf  
  423dfe:	adc    eax,0xd15c44b3
  423e03:	sti    
  423e04:	xor    BYTE PTR [ecx-0x67],ch
  423e07:	cmp    edi,DWORD PTR [ebx]
  423e09:	stos   BYTE PTR es:[edi],al
  423e0a:	aad    0x46
  423e0c:	push   0xca3606df
  423e11:	in     eax,0xad
  423e13:	adc    DWORD PTR [edx],0x8c4d5313
  423e19:	mov    eax,0xcab10099
  423e1e:	xchg   edx,eax
  423e1f:	mov    edi,0x21df2b27
  423e24:	jo     0x423e3c
  423e26:	jno    0x423e74
  423e28:	xchg   ebp,eax
  423e29:	ret    0x4cd9
  423e2c:	ret    
  423e2d:	test   al,0xe1
  423e2f:	add    al,0xe6
  423e31:	imul   edx,DWORD PTR [edx+0x27],0x78
  423e35:	aas    
  423e36:	xlat   BYTE PTR ds:[ebx]
  423e37:	imul   ah
  423e39:	mov    ch,0x5e
  423e3b:	imul   edx,DWORD PTR fs:[ecx],0x13
  423e3f:	int    0xa4
  423e41:	pop    ebx
  423e42:	daa    
  423e43:	aad    0xcc
  423e45:	and    bl,0x3a
  423e48:	fcomip st,st(3)
  423e4a:	retf   0x643
  423e4d:	push   0x5c
  423e4f:	mov    cl,0x9c
  423e51:	dec    edx
  423e52:	inc    esi
  423e53:	dec    esp
  423e54:	shl    BYTE PTR [eax+0x7544bd4e],0x2b
  423e5b:	jle    0x423e26
  423e5d:	adc    DWORD PTR [ebx+0x1d],0xffffffd2
  423e61:	inc    ebx
  423e62:	mov    ds:0xa588d7fc,eax
  423e67:	jmp    0xb8638931
  423e6c:	shl    DWORD PTR [eax],0x69
  423e6f:	or     esp,0x65b98609
  423e75:	xchg   BYTE PTR [eax+0x6d],ah
  423e78:	imul   DWORD PTR [ebp-0x52810eb4]
  423e7e:	ror    BYTE PTR [eax+0x45],cl
  423e81:	int3   
  423e82:	rol    DWORD PTR [edx-0x28],0xf9
  423e86:	xchg   ch,bl
  423e88:	stos   BYTE PTR es:[edi],al
  423e89:	cmp    eax,DWORD PTR [ebx+0x32]
  423e8c:	push   ecx
  423e8d:	xchg   esi,eax
  423e8e:	mov    cl,0x52
  423e90:	dec    ecx
  423e91:	std    
  423e92:	or     eax,0x1a
  423e95:	mov    eax,0xe6e0f28a
  423e9a:	test   DWORD PTR [ebp-0x43],ebp
  423e9d:	shl    DWORD PTR [ecx],1
  423e9f:	loopne 0x423ebf
  423ea1:	out    0x6e,eax
  423ea3:	test   eax,0x993cfb36
  423ea8:	(bad)  
  423ea9:	int3   
  423eaa:	xor    al,0x5d
  423eac:	pop    esi
  423ead:	test   eax,0x1f54c95c
  423eb2:	aas    
  423eb3:	pop    eax
  423eb4:	push   ecx
  423eb5:	ror    dh,cl
  423eb7:	adc    eax,eax
  423eb9:	adc    DWORD PTR [ebp-0x76],esp
  423ebc:	out    0x58,al
  423ebe:	dec    eax
  423ebf:	inc    bp
  423ec1:	outs   dx,BYTE PTR ds:[esi]
  423ec2:	dec    ebp
  423ec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ec4:	out    dx,al
  423ec5:	xchg   esp,eax
  423ec6:	push   0x3b02ed27
  423ecb:	retf   
  423ecc:	sub    dl,dh
  423ece:	xor    al,0xb0
  423ed0:	or     BYTE PTR [bp+0x2b1d],bh
  423ed5:	push   DWORD PTR [ecx+0x4f3a65f4]
  423edb:	sbb    al,0x97
  423edd:	adc    edi,DWORD PTR [edi+esi*4]
  423ee0:	(bad)  
  423ee2:	xor    ebx,0x6af50354
  423ee8:	cmp    ecx,DWORD PTR [edi]
  423eea:	gs dec ecx
  423eec:	mov    edi,0xd029fbca
  423ef1:	xchg   ecx,eax
  423ef2:	stc    
  423ef3:	pop    es
  423ef4:	in     al,dx
  423ef5:	xor    ah,BYTE PTR [edi]
  423ef7:	js     0x423e9c
  423ef9:	outs   dx,DWORD PTR ds:[esi]
  423efa:	popa   
  423efb:	mov    ebp,0x337a9b92
  423f00:	or     DWORD PTR [ebx-0x56c81b74],ebx
  423f06:	in     al,dx
  423f07:	xor    BYTE PTR [eax-0x27db5ce0],dh
  423f0d:	adc    al,0x9b
  423f0f:	daa    
  423f10:	std    
  423f11:	jecxz  0x423eaf
  423f13:	pop    eax
  423f14:	xor    esi,edi
  423f16:	jmp    0x1b30:0x7c2374e1
  423f1d:	dec    edi
  423f1e:	sub    cl,dh
  423f20:	(bad)  
  423f22:	sub    BYTE PTR [eax],ch
  423f24:	mov    dl,0x52
  423f26:	stos   BYTE PTR es:[edi],al
  423f27:	jg     0x423f98
  423f29:	add    dh,BYTE PTR [ebx]
  423f2b:	popa   
  423f2c:	inc    esi
  423f2d:	scas   eax,DWORD PTR es:[edi]
  423f2e:	int3   
  423f2f:	test   DWORD PTR [ecx],edi
  423f31:	jmp    0xf2af40b8
  423f36:	xor    eax,0xf7162f2e
  423f3b:	lds    ebx,FWORD PTR [esi+0x28]
  423f3e:	cld    
  423f3f:	add    dh,BYTE PTR [esi+0x4650ce32]
  423f45:	sti    
  423f46:	mov    DWORD PTR [edi+0x26],ebx
  423f49:	mov    cs:0xb4c3265,eax
  423f4f:	jl     0x423f5b
  423f51:	inc    ebp
  423f52:	ja     0x423f32
  423f54:	mov    ds:0x9e734be7,al
  423f59:	arpl   bp,si
  423f5b:	xor    ecx,DWORD PTR ds:0xeaeb166e
  423f61:	sbb    BYTE PTR [ebp+0x33ea46d8],0x4d
  423f68:	or     DWORD PTR [ebx+0x7a30ddb3],ecx
  423f6e:	stos   BYTE PTR es:[edi],al
  423f6f:	jnp    0x423f5d
  423f71:	cs pop ds
  423f73:	jmp    0x4a6d206
  423f78:	inc    esp
  423f79:	(bad)  
  423f7a:	imul   DWORD PTR [edi+ecx*2-0x296d1341]
  423f81:	xchg   esi,eax
  423f82:	lds    edx,FWORD PTR ds:[edi-0x26d96cbd]
  423f89:	cs push esp
  423f8b:	fst    DWORD PTR [ebp-0x6]
  423f8e:	es push ss
  423f90:	xor    al,0xcc
  423f92:	sar    BYTE PTR [edi+0x30],cl
  423f95:	ins    DWORD PTR es:[edi],dx
  423f96:	mov    eax,ds:0x2a71527b
  423f9b:	xchg   edx,eax
  423f9c:	jns    0x423ff1
  423f9e:	add    BYTE PTR [ecx-0xbb51725],ah
  423fa4:	jle    0x423f47
  423fa6:	adc    eax,0xd62dac5a
  423fab:	mov    al,0x9
  423fad:	sbb    bl,BYTE PTR [ecx]
  423faf:	int3   
  423fb0:	ss pushf 
  423fb2:	jns    0x423fd3
  423fb4:	or     al,0xe9
  423fb6:	add    al,0xd0
  423fb8:	mov    bl,0x4f
  423fba:	mov    WORD PTR [edx],es
  423fbc:	into   
  423fbd:	and    eax,0x5f69f513
  423fc2:	les    eax,FWORD PTR [edx-0x32]
  423fc5:	dec    ecx
  423fc6:	out    0xd7,al
  423fc8:	lahf   
  423fc9:	retf   0x5636
  423fcc:	enter  0xae1f,0x36
  423fd0:	sub    ah,bl
  423fd2:	cmp    DWORD PTR [edx-0x26],ebx
  423fd5:	addr16 int 0x9b
  423fd8:	xchg   esp,eax
  423fd9:	pop    ecx
  423fda:	jnp    0x423fe6
  423fdc:	lds    ebp,FWORD PTR [ecx-0x5f64b6ac]
  423fe2:	(bad)  
  423fe3:	call   0xe2a1:0xe66e64c4
  423fea:	and    eax,0x909078f9
  423fef:	jmp    0x726c6741
  423ff4:	pop    eax
  423ff5:	in     eax,0xbc
  423ff7:	pop    es
  423ff8:	jnp    0x423f98
  423ffa:	jp     0x423fc2
  423ffc:	mov    cl,0x54
  423ffe:	xchg   esi,eax
  423fff:	push   esi
  424000:	rcl    DWORD PTR [esi+0x49],cl
  424003:	cdq    
  424004:	mov    dl,0x9a
  424006:	pop    ecx
  424007:	cmp    cl,ch
  424009:	and    eax,0x21b8f49f
  42400e:	adc    esi,DWORD PTR [edi-0x510ae8e8]
  424014:	lds    esi,FWORD PTR [edx+edi*2+0xb]
  424018:	pop    eax
  424019:	retf   0xfd62
  42401c:	cmc    
  42401d:	mov    ds:0x9b3ce396,eax
  424022:	test   BYTE PTR ds:0x33e76054,ch
  424028:	int3   
  424029:	pop    es
  42402a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42402b:	push   edi
  42402c:	jns    0x423ffe
  42402e:	lods   al,BYTE PTR ds:[esi]
  42402f:	shl    bh,1
  424031:	jp     0x424080
  424033:	(bad)  
  424034:	mov    eax,0x8278d061
  424039:	ss cs xor esp,ebp
  42403d:	cmp    eax,0x9cd4446e
  424042:	icebp  
  424043:	xchg   esp,eax
  424044:	stos   BYTE PTR es:[edi],al
  424045:	aaa    
  424046:	jbe    0x424096
  424048:	push   ss
  424049:	jns    0x4240bc
  42404b:	mov    DWORD PTR [ecx],ecx
  42404d:	fdiv   QWORD PTR [ecx]
  42404f:	sbb    al,0x7f
  424051:	jp     0x424008
  424053:	lahf   
  424054:	mov    dh,0xd1
  424056:	xor    al,al
  424058:	mov    esp,0xc55601e1
  42405d:	test   edi,ebp
  42405f:	mov    ebx,DWORD PTR [esi+0x9]
  424062:	stos   DWORD PTR es:[edi],eax
  424063:	arpl   WORD PTR [ecx+ebp*4+0x25],bp
  424067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424068:	or     BYTE PTR ds:0x1d590fda,cl
  42406e:	fs popf 
  424070:	push   eax
  424071:	mov    cs,WORD PTR [edx-0x50]
  424074:	hlt    
  424075:	adc    bh,BYTE PTR [eax]
  424077:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424078:	inc    ebx
  424079:	rol    DWORD PTR [ebx],0xfa
  42407c:	dec    ebx
  42407d:	stc    
  42407e:	or     al,0xa
  424080:	xor    ah,dh
  424082:	pop    ebp
  424083:	mov    bl,0x82
  424085:	arpl   cx,bp
  424087:	push   ss
  424088:	jno    0x42402b
  42408a:	or     bh,BYTE PTR [ebx+0x60ee7406]
  424090:	push   esi
  424091:	repnz pushf 
  424093:	xchg   esi,eax
  424094:	mov    dh,0x31
  424096:	push   esi
  424097:	scas   al,BYTE PTR es:[edi]
  424098:	jle    0x4240cc
  42409a:	pop    ds
  42409b:	mov    ah,dh
  42409d:	lds    edi,FWORD PTR [ecx]
  42409f:	xor    BYTE PTR [eax],cl
  4240a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240a2:	mov    cl,0xf9
  4240a4:	iret   
  4240a5:	pop    esp
  4240a6:	scas   eax,DWORD PTR es:[edi]
  4240a7:	adc    DWORD PTR cs:[ecx+0x18],0x48584ffe
  4240af:	lea    esi,[ebx]
  4240b1:	inc    ebp
  4240b2:	jp     0x424126
  4240b4:	mov    al,ds:0x4b34578c
  4240b9:	pop    ebx
  4240ba:	jmp    0x4592:0x141791a4
  4240c1:	hlt    
  4240c2:	mul    DWORD PTR [ecx-0x76]
  4240c5:	adc    DWORD PTR [ebp+0x78],esi
  4240c8:	sbb    eax,0x221d8088
  4240cd:	mov    ecx,0x347b4475
  4240d2:	push   edi
  4240d3:	mov    ecx,0xfb682744
  4240d8:	rcl    DWORD PTR [edx+0x7a],cl
  4240db:	sub    al,0x14
  4240dd:	xor    eax,0xfab0e513
  4240e2:	mov    ebx,0x7ad69d75
  4240e7:	dec    ebx
  4240e8:	mov    ebx,0x8bec756e
  4240ed:	ins    BYTE PTR es:[edi],dx
  4240ee:	into   
  4240ef:	cdq    
  4240f0:	rol    DWORD PTR [edx],1
  4240f2:	mov    ebp,0xae899daf
  4240f7:	xchg   ebp,eax
  4240f8:	lock retf 
  4240fa:	fdiv   QWORD PTR [ecx]
  4240fc:	jl     0x4240c7
  4240fe:	mov    eax,DWORD PTR [ecx-0x70]
  424101:	inc    ebx
  424102:	xor    al,0xb5
  424104:	adc    eax,0xcc29f611
  424109:	(bad)  
  42410a:	scas   eax,DWORD PTR es:[edi]
  42410b:	mov    al,0x73
  42410d:	push   cs
  42410e:	add    DWORD PTR [edi-0x51667631],0x71
  424115:	xor    al,0x2e
  424117:	(bad)
  42411a:	fisub  DWORD PTR [ebp+0x664271bf]
  424120:	in     eax,dx
  424121:	cmp    ecx,edx
  424123:	mov    DWORD PTR [edi-0x3b],edx
  424126:	(bad)  
  424127:	mov    eax,ds:0x41af18fa
  42412c:	ins    DWORD PTR es:[edi],dx
  42412d:	imul   esp,DWORD PTR [esi+edi*2-0x35cb6fce],0x2fd73367
  424138:	push   ebp
  424139:	data16 mov al,0xec
  42413c:	xor    dh,BYTE PTR [ebx-0x5]
  42413f:	xchg   DWORD PTR [esi],ebx
  424141:	dec    ebp
  424142:	gs dec ebx
  424144:	ds mov eax,0xf89c85a2
  42414a:	pop    ebx
  42414b:	pop    edi
  42414c:	pop    esi
  42414d:	leave  
  42414e:	ret    0xc
  424151:	push   ebp
  424152:	mov    ebp,esp
  424154:	push   ecx
  424155:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42415c:	mov    DWORD PTR ds:0x4291bb,0x19
  424166:	cmp    DWORD PTR ds:0x4291bb,0x0
  42416d:	je     0x4241c3
  424173:	cmp    DWORD PTR ds:0x4291bb,0x5
  42417a:	jb     0x4241c3
  424180:	jmp    0x424195
  424185:	push   0x6cdd
  42418a:	push   0x428019
  42418f:	call   DWORD PTR ds:0x42a567
  424195:	cmp    DWORD PTR ds:0x4291bb,0x6
  42419c:	jne    0x4241b1
  4241a2:	xor    ecx,ecx
  4241a4:	xor    ecx,DWORD PTR ds:0x4291bb
  4241aa:	dec    ecx
  4241ab:	mov    DWORD PTR ds:0x4291bb,ecx
  4241b1:	mov    ecx,DWORD PTR ds:0x4291bb
  4241b7:	dec    ecx
  4241b8:	mov    DWORD PTR ds:0x4291bb,ecx
  4241be:	jmp    0x424166
  4241c3:	mov    eax,DWORD PTR [ebp+0x8]
  4241c6:	or     ecx,ecx
  4241c8:	movsx  eax,BYTE PTR [eax]
  4241cb:	or     ecx,0x305b
  4241d1:	mov    edx,0x3272f3
  4241d6:	add    DWORD PTR ds:0x4291c7,0x4291f7
  4241e0:	sub    eax,edx
  4241e2:	mov    DWORD PTR ds:0x4291a7,0x1e
  4241ec:	cmp    DWORD PTR ds:0x4291a7,0x0
  4241f3:	je     0x42424b
  4241f9:	cmp    DWORD PTR ds:0x4291a7,0x6
  424200:	jl     0x42424b
  424206:	jmp    0x42421d
  42420b:	push   0x4280f2
  424210:	push   0x1
  424212:	push   0x8730
  424217:	call   DWORD PTR ds:0x42a56f
  42421d:	cmp    DWORD PTR ds:0x4291a7,0x7
  424224:	jne    0x424237
  42422a:	mov    ecx,DWORD PTR ds:0x4291a7
  424230:	dec    ecx
  424231:	mov    DWORD PTR ds:0x4291a7,ecx
  424237:	xor    ecx,ecx
  424239:	add    ecx,DWORD PTR ds:0x4291a7
  42423f:	dec    ecx
  424240:	mov    DWORD PTR ds:0x4291a7,ecx
  424246:	jmp    0x4241ec
  42424b:	mov    ecx,0x75108ac
  424250:	xor    eax,ecx
  424252:	cmp    eax,0xf89c85f6
  424257:	jne    0x424286
  42425d:	mov    eax,DWORD PTR [ebp+0x8]
  424260:	push   esi
  424261:	mov    esi,DWORD PTR [ebp+0x8]
  424264:	add    esi,DWORD PTR [eax+0x3c]
  424267:	mov    DWORD PTR [ebp+0x8],esi
  42426a:	mov    eax,DWORD PTR [ebp-0x4]
  42426d:	mov    esi,DWORD PTR [ebp+0x8]
  424270:	xor    eax,ecx
  424272:	add    eax,edx
  424274:	cmp    DWORD PTR [esi+0x54],eax
  424277:	pop    esi
  424278:	je     0x424286
  42427e:	mov    eax,DWORD PTR [ebp+0x8]
  424281:	jmp    0x42428d
  424286:	mov    eax,DWORD PTR [ebp-0x4]
  424289:	xor    eax,ecx
  42428b:	add    eax,edx
  42428d:	leave  
  42428e:	ret    0x4
  424291:	push   ebp
  424292:	mov    ebp,esp
  424294:	sub    esp,0xc
  424297:	and    DWORD PTR ds:0x429157,0x0
  4242a1:	mov    edx,DWORD PTR ds:0x429157
  4242a7:	inc    edx
  4242a8:	mov    DWORD PTR ds:0x429157,edx
  4242ae:	cmp    DWORD PTR ds:0x429157,0x16
  4242b5:	jl     0x4242d6
  4242bb:	jmp    0x4242c9
  4242c0:	push   DWORD PTR [ebp-0x14]
  4242c3:	call   DWORD PTR ds:0x42a573
  4242c9:	cmp    DWORD PTR ds:0x429157,0x13
  4242d0:	jb     0x4242a1
  4242d6:	push   esi
  4242d7:	mov    esi,0xf89c85a1
  4242dc:	mov    edx,DWORD PTR ds:0x429e7f
  4242e2:	mov    ecx,DWORD PTR ds:0x429e87
  4242e8:	sub    edx,ecx
  4242ea:	sub    edx,DWORD PTR [edx+ecx*1]
  4242ed:	mov    DWORD PTR [ebp-0x8],esi
  4242f0:	and    DWORD PTR ds:0x4291bf,0x59ca
  4242fa:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424301:	sub    edx,DWORD PTR ds:0x4291df
  424307:	push   edi
  424308:	and    DWORD PTR ds:0x4291c7,0x0
  424312:	jmp    0x424326
  424317:	xor    ecx,ecx
  424319:	or     ecx,DWORD PTR ds:0x4291c7
  42431f:	inc    ecx
  424320:	mov    DWORD PTR ds:0x4291c7,ecx
  424326:	cmp    DWORD PTR ds:0x4291c7,0x1f
  42432d:	jae    0x42435b
  424333:	cmp    DWORD PTR ds:0x4291c7,0x20
  42433a:	jbe    0x42435b
  424340:	jmp    0x424356
  424345:	push   0x42803d
  42434a:	push   DWORD PTR [ebp-0x20]
  42434d:	push   DWORD PTR [ebp-0x24]
  424350:	call   DWORD PTR ds:0x42a577
  424356:	jmp    0x424317
  42435b:	mov    eax,eax
  42435d:	and    DWORD PTR ds:0x42919b,0x3c1b
  424367:	mov    eax,DWORD PTR [ebp-0x4]
  42436a:	add    DWORD PTR ds:0x4291df,0x7092
  424374:	mov    edi,DWORD PTR [ebp-0x8]
  424377:	adc    DWORD PTR ds:0x429193,edx
  42437d:	mov    ecx,0x75108ac
  424382:	mov    edx,DWORD PTR ds:0x42917b
  424388:	and    DWORD PTR ds:0x4291e7,edx
  42438e:	xor    eax,ecx
  424390:	add    DWORD PTR ds:0x4291df,0x314e
  42439a:	xor    edi,ecx
  42439c:	mov    edx,DWORD PTR ds:0x429e6b
  4243a2:	mov    edx,DWORD PTR [edx]
  4243a4:	adc    DWORD PTR ds:0x4291ab,edx
  4243aa:	mov    edx,0x3272f3
  4243af:	add    edi,edx
  4243b1:	add    eax,edx
  4243b3:	imul   eax,edi
  4243b6:	mov    edi,DWORD PTR [ebp+0xc]
  4243b9:	cmp    edi,eax
  4243bb:	je     0x424410
  4243c1:	mov    DWORD PTR [ebp-0xc],esi
  4243c4:	mov    eax,DWORD PTR [ebp-0xc]
  4243c7:	mov    esi,DWORD PTR [ebp+0xc]
  4243ca:	xor    eax,ecx
  4243cc:	lea    eax,[eax*8+0x1939810]
  4243d3:	mov    eax,DWORD PTR [esi+eax*1]
  4243d6:	mov    DWORD PTR [ebp+0xc],eax
  4243d9:	mov    eax,DWORD PTR [ebp-0x4]
  4243dc:	mov    esi,DWORD PTR [ebp-0x8]
  4243df:	xor    eax,ecx
  4243e1:	xor    esi,ecx
  4243e3:	add    esi,edx
  4243e5:	add    eax,edx
  4243e7:	imul   eax,esi
  4243ea:	mov    esi,DWORD PTR [ebp+0xc]
  4243ed:	cmp    esi,eax
  4243ef:	je     0x424410
  4243f5:	mov    eax,DWORD PTR [ebp-0x4]
  4243f8:	xor    eax,ecx
  4243fa:	mov    ecx,DWORD PTR [ebp+0xc]
  4243fd:	add    eax,edx
  4243ff:	imul   eax,ecx
  424402:	add    eax,DWORD PTR [ebp+0x8]
  424405:	mov    DWORD PTR [ebp+0xc],eax
  424408:	mov    eax,DWORD PTR [ebp+0xc]
  42440b:	jmp    0x424421
  424410:	mov    eax,DWORD PTR [ebp-0x4]
  424413:	mov    esi,DWORD PTR [ebp-0x8]
  424416:	xor    esi,ecx
  424418:	xor    eax,ecx
  42441a:	add    esi,edx
  42441c:	add    eax,edx
  42441e:	imul   eax,esi
  424421:	pop    edi
  424422:	pop    esi
  424423:	leave  
  424424:	ret    0x8
	...
  424433:	add    BYTE PTR [ebx],dl
  424435:	push   esp
  424436:	test   BYTE PTR [ebp+0x0],cl
  424439:	add    BYTE PTR [eax],al
  42443b:	add    BYTE PTR [edx],al
  42443d:	add    BYTE PTR [eax],al
  42443f:	add    BYTE PTR [eax],dh
  424441:	add    BYTE PTR [eax],al
  424443:	add    BYTE PTR [eax+0x44],dl
  424446:	add    al,BYTE PTR [eax]
  424448:	push   eax
  424449:	cmp    BYTE PTR [edx],al
  42444b:	add    BYTE PTR [eax],al
  42444d:	add    BYTE PTR [eax],al
  42444f:	add    BYTE PTR [edx+0x53],dl
  424452:	inc    esp
  424453:	push   ebx
  424454:	and    edi,edx
  424456:	and    BYTE PTR [edi+0x48],ah
  424459:	outs   dx,BYTE PTR ds:[esi]
  42445a:	sbb    ecx,DWORD PTR [ebp-0x4e]
  42445d:	jno    0x42444b
  42445f:	mov    ah,0x62
  424461:	cli    
  424462:	add    dl,bl
  424464:	add    DWORD PTR [eax],eax
  424466:	add    BYTE PTR [eax],al
  424468:	inc    esi
  424469:	cmp    bl,BYTE PTR [edi+edx*2+0x69]
  42446d:	outs   dx,BYTE PTR ds:[esi]
  42446e:	outs   dx,DWORD PTR fs:[esi]
  424470:	ja     0x4244e5
  424472:	and    BYTE PTR [ecx+ebp*2+0x72],al
  424476:	pop    esp
  424477:	inc    esi
  424478:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x636578
  424480:	mov    edx,DWORD PTR [ebp-0x14]
  424483:	sub    esp,0x108
  424489:	push   ebx
  42448a:	mov    eax,ebx
  42448c:	xchg   ecx,eax
  42448d:	mov    eax,DWORD PTR [ebp+0x8]
  424490:	cmp    eax,0xf89c85a1
  424495:	jne    0x424952
  42449b:	mov    eax,DWORD PTR [ebp+0xc]
  42449e:	cmp    eax,0xf89c85a2
  4244a3:	jne    0x424952
  4244a9:	mov    eax,DWORD PTR [ebp+0x24]
  4244ac:	mov    DWORD PTR [ebp-0x4],eax
  4244af:	mov    eax,DWORD PTR [ebp-0x4]
  4244b2:	mov    eax,DWORD PTR [eax+0x1d8]
  4244b8:	mov    eax,DWORD PTR [eax]
  4244ba:	mov    eax,DWORD PTR [eax]
  4244bc:	mov    DWORD PTR [ebp-0x8],eax
  4244bf:	mov    BYTE PTR [ebp-0x18],0x18
  4244c3:	mov    BYTE PTR [ebp-0x17],0x1f
  4244c7:	mov    BYTE PTR [ebp-0x16],0x1a
  4244cb:	mov    BYTE PTR [ebp-0x15],0x4c
  4244cf:	mov    BYTE PTR [ebp-0x14],0x4d
  4244d3:	mov    BYTE PTR [ebp-0x13],0x83
  4244d7:	mov    BYTE PTR [ebp-0x20],0xe
  4244db:	mov    BYTE PTR [ebp-0x1f],0xc
  4244df:	mov    BYTE PTR [ebp-0x1e],0x1e
  4244e3:	mov    BYTE PTR [ebp-0x1d],0xd
  4244e7:	mov    BYTE PTR [ebp-0x1c],0x4c
  4244eb:	mov    BYTE PTR [ebp-0x1b],0x4d
  4244ef:	mov    BYTE PTR [ebp-0x1a],0x83
  4244f3:	mov    BYTE PTR [ebp-0x28],0xc
  4244f7:	mov    BYTE PTR [ebp-0x27],0x1b
  4244fb:	mov    BYTE PTR [ebp-0x26],0x17
  4244ff:	mov    BYTE PTR [ebp-0x25],0x8
  424503:	mov    BYTE PTR [ebp-0x24],0x22
  424507:	mov    BYTE PTR [ebp-0x23],0x13
  42450b:	mov    BYTE PTR [ebp-0x22],0x1a
  42450f:	mov    BYTE PTR [ebp-0x21],0x83
  424513:	xor    ecx,ecx
  424515:	lea    eax,[ebp+ecx*1-0x18]
  424519:	movzx  edx,BYTE PTR [eax]
  42451c:	xor    edx,0x7d
  42451f:	add    edx,0x2
  424522:	inc    ecx
  424523:	mov    BYTE PTR [eax],dl
  424525:	cmp    ecx,0x6
  424528:	jb     0x424515
  42452a:	xor    ecx,ecx
  42452c:	lea    eax,[ebp+ecx*1-0x20]
  424530:	movzx  edx,BYTE PTR [eax]
  424533:	xor    edx,0x7d
  424536:	add    edx,0x2
  424539:	inc    ecx
  42453a:	mov    BYTE PTR [eax],dl
  42453c:	cmp    ecx,0x7
  42453f:	jb     0x42452c
  424541:	xor    ecx,ecx
  424543:	lea    eax,[ebp+ecx*1-0x28]
  424547:	movzx  edx,BYTE PTR [eax]
  42454a:	xor    edx,0x7d
  42454d:	add    edx,0x2
  424550:	inc    ecx
  424551:	mov    BYTE PTR [eax],dl
  424553:	cmp    ecx,0x8
  424556:	jb     0x424543
  424558:	lea    eax,[ebp-0x2c]
  42455b:	mov    DWORD PTR [ebp-0x8],eax
  42455e:	mov    ecx,DWORD PTR [ebp-0x8]
  424561:	mov    eax,0x7113fccf
  424566:	mov    DWORD PTR [ecx],eax
  424568:	mov    ecx,DWORD PTR [ebp-0x2c]
  42456b:	push   esi
  42456c:	push   edi
  42456d:	mov    esi,0x4e3c
  424572:	mov    ebx,0x3272f3
  424577:	cmp    ecx,eax
  424579:	jne    0x424644
  42457f:	lea    eax,[esi+0x3b]
  424582:	mov    WORD PTR [ebp-0x78],ax
  424586:	mov    eax,esi
  424588:	mov    WORD PTR [ebp-0x76],ax
  42458c:	add    eax,0x35
  42458f:	mov    WORD PTR [ebp-0x74],ax
  424593:	lea    eax,[esi+0x2]
  424596:	mov    WORD PTR [ebp-0x72],ax
  42459a:	add    eax,0x41
  42459d:	mov    ecx,eax
  42459f:	lea    eax,[esi-0x13]
  4245a2:	mov    WORD PTR [ebp-0x66],ax
  4245a6:	mov    eax,esi
  4245a8:	mov    WORD PTR [ebp-0x64],ax
  4245ac:	add    eax,0xffffffec
  4245af:	mov    WORD PTR [ebp-0x62],ax
  4245b3:	mov    eax,0x443
  4245b8:	mov    WORD PTR [ebp-0x60],ax
  4245bc:	mov    eax,0x5672
  4245c1:	mov    WORD PTR [ebp-0x5e],ax
  4245c5:	mov    eax,0x6112
  4245ca:	mov    WORD PTR [ebp-0x5c],ax
  4245ce:	lea    eax,[ebp-0xe0]
  4245d4:	push   eax
  4245d5:	mov    eax,DWORD PTR [ebp+0xc]
  4245d8:	mov    edi,0x75108ac
  4245dd:	xor    eax,edi
  4245df:	add    eax,ebx
  4245e1:	push   eax
  4245e2:	mov    WORD PTR [ebp-0x70],cx
  4245e6:	lea    ecx,[esi-0xa]
  4245e9:	mov    edx,ecx
  4245eb:	lea    eax,[ebp-0x78]
  4245ee:	push   eax
  4245ef:	mov    eax,DWORD PTR [ebp-0x4]
  4245f2:	mov    eax,DWORD PTR [eax+0x198]
  4245f8:	mov    WORD PTR [ebp-0x6e],dx
  4245fc:	mov    edx,0x4f88
  424601:	mov    WORD PTR [ebp-0x6c],dx
  424605:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e35
  42460c:	mov    DWORD PTR [ebp-0x5a],0x4e32f1e4
  424613:	mov    DWORD PTR [ebp-0xe0],0x1
  42461d:	mov    DWORD PTR [ebp-0xdc],0x255
  424627:	push   DWORD PTR [eax]
  424629:	mov    eax,DWORD PTR [ebp+0x10]
  42462c:	call   eax
  42462e:	mov    DWORD PTR [ebp-0x8],eax
  424631:	mov    eax,DWORD PTR [ebp-0x8]
  424634:	test   eax,eax
  424636:	je     0x424649
  424638:	xor    DWORD PTR ds:0x76586876,0x87687666
  424642:	jmp    0x424649
  424644:	mov    edi,0x75108ac
  424649:	mov    eax,DWORD PTR [ebp-0x4]
  42464c:	mov    ecx,DWORD PTR [eax+0x18c]
  424652:	xor    eax,eax
  424654:	cmp    DWORD PTR [ecx],eax
  424656:	jne    0x4248c5
  42465c:	mov    ecx,DWORD PTR [ebp-0x4]
  42465f:	mov    ecx,DWORD PTR [ecx+0x17c]
  424665:	mov    DWORD PTR [ecx],eax
  424667:	mov    ecx,DWORD PTR [ebp-0x4]
  42466a:	mov    ecx,DWORD PTR [ecx+0x180]
  424670:	mov    DWORD PTR [ecx],eax
  424672:	mov    eax,0x4e61
  424677:	mov    WORD PTR [ebp-0x9c],ax
  42467e:	mov    eax,esi
  424680:	mov    WORD PTR [ebp-0x9a],ax
  424687:	mov    eax,0x4e71
  42468c:	mov    WORD PTR [ebp-0x98],ax
  424693:	add    eax,0xffffffc0
  424696:	mov    WORD PTR [ebp-0x96],ax
  42469d:	mov    eax,0x4f8c
  4246a2:	mov    WORD PTR [ebp-0x94],ax
  4246a9:	mov    eax,0x4e30
  4246ae:	mov    WORD PTR [ebp-0x92],ax
  4246b5:	add    eax,0x4f
  4246b8:	mov    WORD PTR [ebp-0x90],ax
  4246bf:	mov    eax,0x4e32
  4246c4:	mov    WORD PTR [ebp-0x8e],ax
  4246cb:	mov    eax,esi
  4246cd:	mov    WORD PTR [ebp-0x8c],ax
  4246d4:	mov    eax,0x4e35
  4246d9:	mov    WORD PTR [ebp-0x8a],ax
  4246e0:	mov    eax,0x99f1
  4246e5:	mov    WORD PTR [ebp-0x88],ax
  4246ec:	mov    eax,0x8d60
  4246f1:	mov    WORD PTR [ebp-0x86],ax
  4246f8:	mov    eax,0xd66f
  4246fd:	mov    WORD PTR [ebp-0x84],ax
  424704:	mov    eax,0xd783
  424709:	mov    WORD PTR [ebp-0x82],ax
  424710:	mov    eax,0x2782
  424715:	mov    WORD PTR [ebp-0x80],ax
  424719:	mov    eax,0x4782
  42471e:	mov    WORD PTR [ebp-0x7e],ax
  424722:	mov    eax,0x4e33
  424727:	push   0x8
  424729:	mov    WORD PTR [ebp-0x7c],ax
  42472d:	mov    DWORD PTR [ebp-0x10],0x8171b0c
  424734:	mov    DWORD PTR [ebp-0xc],0x831a1322
  42473b:	lea    eax,[ebp-0x10]
  42473e:	pop    ecx
  42473f:	mov    dl,BYTE PTR [eax]
  424741:	xor    dl,0x7d
  424744:	add    dl,0x2
  424747:	mov    BYTE PTR [eax],dl
  424749:	inc    eax
  42474a:	dec    ecx
  42474b:	jne    0x42473f
  42474d:	lea    eax,[ebp-0x10]
  424750:	mov    DWORD PTR [ebp-0xdc],eax
  424756:	lea    eax,[ebp-0xe0]
  42475c:	push   eax
  42475d:	mov    eax,DWORD PTR [ebp+0xc]
  424760:	xor    eax,edi
  424762:	add    eax,ebx
  424764:	push   eax
  424765:	mov    eax,DWORD PTR [ebp-0x4]
  424768:	add    eax,0x66
  42476b:	push   eax
  42476c:	mov    eax,DWORD PTR [ebp-0x4]
  42476f:	mov    eax,DWORD PTR [eax+0x198]
  424775:	mov    DWORD PTR [ebp-0xe0],0x1
  42477f:	push   DWORD PTR [eax]
  424781:	mov    eax,DWORD PTR [ebp+0x10]
  424784:	call   eax
  424786:	mov    ecx,DWORD PTR [ebp+0x8]
  424789:	xor    ecx,edi
  42478b:	add    ecx,ebx
  42478d:	mov    DWORD PTR [ebp-0x8],eax
  424790:	cmp    eax,ecx
  424792:	jne    0x4247ad
  424794:	mov    eax,ds:0x33730bc8
  424799:	or     eax,0x22150bcf
  42479e:	mov    ds:0x33730bc8,eax
  4247a3:	add    eax,0x3372e92f
  4247a8:	mov    ds:0x33730bc8,eax
  4247ad:	mov    ecx,0x4e64
  4247b2:	mov    eax,ecx
  4247b4:	mov    WORD PTR [ebp-0x40],ax
  4247b8:	add    eax,0x7
  4247bb:	mov    edx,eax
  4247bd:	mov    WORD PTR [ebp-0x3e],dx
  4247c1:	mov    edx,0x4f93
  4247c6:	mov    WORD PTR [ebp-0x3c],dx
  4247ca:	add    edx,0xfffffff8
  4247cd:	mov    WORD PTR [ebp-0x3a],dx
  4247d1:	mov    edx,0x4f8d
  4247d6:	mov    WORD PTR [ebp-0x38],dx
  4247da:	inc    edx
  4247db:	mov    WORD PTR [ebp-0x36],dx
  4247df:	mov    edx,0x4f87
  4247e4:	mov    WORD PTR [ebp-0x34],dx
  4247e8:	mov    WORD PTR [ebp-0x32],cx
  4247ec:	mov    ecx,esi
  4247ee:	mov    WORD PTR [ebp-0x30],cx
  4247f2:	lea    ecx,[edx-0x3]
  4247f5:	mov    edx,ecx
  4247f7:	mov    WORD PTR [ebp-0x54],dx
  4247fb:	mov    edx,eax
  4247fd:	mov    WORD PTR [ebp-0x52],dx
  424801:	mov    edx,0x4e73
  424806:	mov    WORD PTR [ebp-0x50],dx
  42480a:	mov    WORD PTR [ebp-0x4e],ax
  42480e:	lea    eax,[edx-0x6]
  424811:	mov    WORD PTR [ebp-0x4c],ax
  424815:	inc    eax
  424816:	mov    WORD PTR [ebp-0x4a],ax
  42481a:	lea    eax,[edx-0xc]
  42481d:	mov    WORD PTR [ebp-0x48],ax
  424821:	mov    WORD PTR [ebp-0x46],cx
  424825:	mov    WORD PTR [ebp-0x44],si
  424829:	mov    eax,DWORD PTR [ebp+0x8]
  42482c:	movzx  ecx,WORD PTR [ebp-0x54]
  424830:	xor    eax,edi
  424832:	add    eax,ebx
  424834:	xor    eax,ecx
  424836:	mov    WORD PTR [ebp-0x54],ax
  42483a:	mov    eax,DWORD PTR [ebp+0x8]
  42483d:	movzx  ecx,WORD PTR [ebp-0x40]
  424841:	xor    eax,edi
  424843:	add    eax,ebx
  424845:	xor    eax,ecx
  424847:	mov    WORD PTR [ebp-0x40],ax
  42484b:	xor    eax,eax
  42484d:	mov    WORD PTR [ebp-0xf4],ax
  424854:	mov    WORD PTR [ebp-0x108],ax
  42485b:	mov    edi,DWORD PTR [ebp+0x24]
  42485e:	lea    eax,[ebp-0xf4]
  424864:	lea    edx,[ebp-0x54]
  424867:	mov    DWORD PTR [ebp-0xe0],0x2
  424871:	mov    DWORD PTR [ebp-0xdc],eax
  424877:	call   0x4272b1
  42487c:	mov    DWORD PTR [ebp-0xd8],eax
  424882:	lea    eax,[ebp-0xe0]
  424888:	push   eax
  424889:	mov    eax,DWORD PTR [ebp+0xc]
  42488c:	xor    eax,0x75108ac
  424891:	add    eax,ebx
  424893:	push   eax
  424894:	lea    eax,[ebp-0x9c]
  42489a:	push   eax
  42489b:	push   DWORD PTR [ebp-0x8]
  42489e:	mov    eax,DWORD PTR [ebp+0x10]
  4248a1:	call   eax
  4248a3:	mov    edi,DWORD PTR [ebp+0x24]
  4248a6:	lea    eax,[ebp-0x108]
  4248ac:	lea    edx,[ebp-0x40]
  4248af:	mov    DWORD PTR [ebp-0xdc],eax
  4248b5:	call   0x4272b1
  4248ba:	mov    DWORD PTR [ebp-0xd8],eax
  4248c0:	mov    edi,0x75108ac
  4248c5:	mov    eax,DWORD PTR [ebp+0x14]
  4248c8:	push   DWORD PTR [ebp-0x4]
  4248cb:	push   DWORD PTR [ebp+0x20]
  4248ce:	push   DWORD PTR [ebp+0x1c]
  4248d1:	push   DWORD PTR [ebp+0x18]
  4248d4:	push   DWORD PTR [ebp+0x10]
  4248d7:	push   DWORD PTR [ebp+0x8]
  4248da:	push   DWORD PTR [ebp+0xc]
  4248dd:	call   0x425b50
  4248e2:	test   eax,eax
  4248e4:	je     0x424928
  4248e6:	add    DWORD PTR [ebp-0x4],eax
  4248e9:	push   DWORD PTR [ebp-0x4]
  4248ec:	lea    esi,[ebp+0x4]
  4248ef:	call   0x424d40
  4248f4:	mov    eax,DWORD PTR [ebp-0x4]
  4248f7:	mov    eax,DWORD PTR [eax+0x1c8]
  4248fd:	mov    eax,DWORD PTR [eax]
  4248ff:	xor    eax,edi
  424901:	add    eax,ebx
  424903:	mov    eax,DWORD PTR [ebp-0x4]
  424906:	jne    0x42491e
  424908:	mov    ecx,DWORD PTR [ebp-0x4]
  42490b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424911:	push   DWORD PTR [ecx]
  424913:	mov    eax,DWORD PTR [eax+0x1e0]
  424919:	call   DWORD PTR [eax+0x28]
  42491c:	jmp    0x424928
  42491e:	mov    eax,DWORD PTR [eax+0x17c]
  424924:	mov    eax,DWORD PTR [eax]
  424926:	add    DWORD PTR [esi],eax
  424928:	mov    eax,DWORD PTR [ebp-0x4]
  42492b:	mov    eax,DWORD PTR [eax+0x1dc]
  424931:	dec    DWORD PTR [eax]
  424933:	mov    ecx,DWORD PTR [ebp-0x4]
  424936:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42493c:	mov    eax,DWORD PTR [eax]
  42493e:	lea    eax,[ecx+eax*4]
  424941:	mov    ecx,DWORD PTR [ebp-0x4]
  424944:	mov    ecx,DWORD PTR [ecx+0x17c]
  42494a:	mov    eax,DWORD PTR [eax]
  42494c:	mov    ecx,DWORD PTR [ecx]
  42494e:	add    DWORD PTR [eax],ecx
  424950:	pop    edi
  424951:	pop    esi
  424952:	pop    ebx
  424953:	leave  
  424954:	ret    0x20
  424957:	push   edi
  424958:	push   esi
  424959:	push   ebx
  42495a:	push   ebp
  42495b:	mov    ebp,esp
  42495d:	mov    eax,DWORD PTR [ebp+0x24]
  424960:	add    DWORD PTR [ebp+0x28],eax
  424963:	push   eax
  424964:	cld    
  424965:	mov    esi,DWORD PTR [ebp+0x18]
  424968:	add    DWORD PTR [ebp+0x1c],esi
  42496b:	push   esi
  42496c:	mov    esi,DWORD PTR [ebp+0x14]
  42496f:	lods   eax,DWORD PTR ds:[esi]
  424970:	xchg   edx,eax
  424971:	push   edx
  424972:	mov    cl,BYTE PTR [esi-0x2]
  424975:	or     eax,0xffffffff
  424978:	shl    eax,cl
  42497a:	not    eax
  42497c:	push   eax
  42497d:	mov    cl,dh
  42497f:	or     eax,0xffffffff
  424982:	shl    eax,cl
  424984:	not    eax
  424986:	push   eax
  424987:	add    cl,dl
  424989:	mov    edi,esi
  42498b:	sub    esp,0xc
  42498e:	sub    eax,eax
  424990:	inc    eax
  424991:	push   eax
  424992:	push   eax
  424993:	push   eax
  424994:	push   eax
  424995:	push   eax
  424996:	push   edi
  424997:	sub    esi,esi
  424999:	push   esi
  42499a:	or     ebx,0xffffffff
  42499d:	mov    eax,0x300
  4249a2:	shl    eax,cl
  4249a4:	lea    ecx,[eax+0x736]
  4249aa:	mov    eax,0x4000400
  4249af:	shr    ecx,1
  4249b1:	rep stos DWORD PTR es:[edi],eax
  4249b3:	push   0x5
  4249b5:	pop    ecx
  4249b6:	call   0x424ca1
  4249bb:	loop   0x4249b6
  4249bd:	lea    esi,[esi]
  4249bf:	lea    edi,[edi]
  4249c1:	mov    edi,DWORD PTR [ebp-0x4]
  4249c4:	mov    eax,DWORD PTR [ebp-0x10]
  4249c7:	sub    edi,DWORD PTR [ebp+0x24]
  4249ca:	and    eax,edi
  4249cc:	mov    DWORD PTR [ebp-0x18],eax
  4249cf:	mov    al,0x0
  4249d1:	call   0x424cb9
  4249d6:	jne    0x424a71
  4249dc:	mov    cl,BYTE PTR [ebp-0xc]
  4249df:	and    edi,DWORD PTR [ebp-0x14]
  4249e2:	shl    edi,cl
  4249e4:	sub    cl,0x8
  4249e7:	neg    cl
  4249e9:	shr    esi,cl
  4249eb:	pop    eax
  4249ec:	add    edi,esi
  4249ee:	pop    esi
  4249ef:	lea    edi,[edi+edi*2]
  4249f2:	shl    edi,0x8
  4249f5:	cmp    al,0x7
  4249f7:	pop    edx
  4249f8:	lea    ecx,[esi+edi*2+0xe6c]
  4249ff:	push   ecx
  424a00:	push   esi
  424a01:	mov    esi,0x100
  424a06:	push   eax
  424a07:	mov    al,0x1
  424a09:	jb     0x424a3f
  424a0b:	mov    edi,DWORD PTR [ebp-0x4]
  424a0e:	sub    edi,DWORD PTR [ebp-0x24]
  424a11:	movzx  edi,BYTE PTR [edi]
  424a14:	mov    ebp,DWORD PTR [ebp-0x34]
  424a17:	shl    edi,1
  424a19:	mov    ecx,esi
  424a1b:	and    esi,edi
  424a1d:	add    ecx,esi
  424a1f:	lea    ebp,[ebp+ecx*2+0x0]
  424a23:	call   0x424cd8
  424a28:	mov    ecx,eax
  424a2a:	shr    esi,0x8
  424a2d:	and    ecx,0x1
  424a30:	cmp    esi,ecx
  424a32:	mov    esi,0x100
  424a37:	jne    0x424a47
  424a39:	cmp    eax,esi
  424a3b:	jb     0x424a14
  424a3d:	jmp    0x424a53
  424a3f:	mov    ebp,DWORD PTR [ebp-0x34]
  424a42:	call   0x424cd8
  424a47:	inc    eax
  424a48:	inc    esi
  424a49:	sub    eax,0x1
  424a4c:	sub    esi,0x1
  424a4f:	cmp    eax,esi
  424a51:	jb     0x424a3f
  424a53:	pop    edx
  424a54:	inc    edx
  424a55:	cmp    edx,0x5
  424a58:	dec    edx
  424a59:	mov    ecx,edx
  424a5b:	jb     0x424a6c
  424a5d:	inc    edx
  424a5e:	cmp    edx,0xb
  424a61:	dec    edx
  424a62:	mov    cl,0x4
  424a64:	dec    cl
  424a66:	jb     0x424a6c
  424a68:	mov    cl,0x7
  424a6a:	dec    cl
  424a6c:	sub    edx,ecx
  424a6e:	push   edx
  424a6f:	jmp    0x424ac0
  424a71:	mov    al,0xc1
  424a73:	dec    al
  424a75:	call   0x424cc9
  424a7a:	jne    0x424a90
  424a7c:	pop    eax
  424a7d:	pop    edi
  424a7e:	pop    edx
  424a7f:	pop    ecx
  424a80:	pop    edx
  424a81:	pop    ecx
  424a82:	push   DWORD PTR [esp]
  424a85:	push   ecx
  424a86:	push   edx
  424a87:	mov    edx,0x664
  424a8c:	mov    cl,0x0
  424a8e:	jmp    0x424b03
  424a90:	mov    al,0xcd
  424a92:	dec    al
  424a94:	call   0x424cc9
  424a99:	jne    0x424ac9
  424a9b:	mov    al,0xf1
  424a9d:	dec    al
  424a9f:	call   0x424cb9
  424aa4:	jne    0x424af9
  424aa6:	pop    eax
  424aa7:	cmp    al,0x7
  424aa9:	mov    al,0x9
  424aab:	jb     0x424aaf
  424aad:	mov    al,0xb
  424aaf:	push   eax
  424ab0:	mov    esi,DWORD PTR [ebp-0x4]
  424ab3:	sub    esi,DWORD PTR [ebp-0x24]
  424ab6:	cmp    esi,DWORD PTR [ebp+0x24]
  424ab9:	jb     0x424c90
  424abf:	lods   al,BYTE PTR ds:[esi]
  424ac0:	mov    edi,DWORD PTR [ebp-0x4]
  424ac3:	stos   BYTE PTR es:[edi],al
  424ac4:	jmp    0x424c57
  424ac9:	mov    al,0xd8
  424acb:	call   0x424cc9
  424ad0:	mov    esi,DWORD PTR [ebp-0x28]
  424ad3:	je     0x424af0
  424ad5:	mov    al,0xe4
  424ad7:	call   0x424cc9
  424adc:	mov    esi,DWORD PTR [ebp-0x2c]
  424adf:	je     0x424aea
  424ae1:	mov    esi,DWORD PTR [ebp-0x30]
  424ae4:	mov    ecx,DWORD PTR [ebp-0x2c]
  424ae7:	mov    DWORD PTR [ebp-0x30],ecx
  424aea:	mov    ecx,DWORD PTR [ebp-0x28]
  424aed:	mov    DWORD PTR [ebp-0x2c],ecx
  424af0:	mov    ecx,DWORD PTR [ebp-0x24]
  424af3:	mov    DWORD PTR [ebp-0x28],ecx
  424af6:	mov    DWORD PTR [ebp-0x24],esi
  424af9:	pop    eax
  424afa:	pop    edi
  424afb:	pop    ecx
  424afc:	mov    edx,0xa68
  424b01:	mov    cl,0x8
  424b03:	add    edx,edi
  424b05:	push   edx
  424b06:	push   edi
  424b07:	cmp    al,0x7
  424b09:	mov    al,cl
  424b0b:	jb     0x424b0f
  424b0d:	add    al,0x3
  424b0f:	push   eax
  424b10:	mov    ebp,DWORD PTR [ebp-0x34]
  424b13:	call   0x424cd6
  424b18:	jne    0x424b2e
  424b1a:	mov    eax,DWORD PTR [ebp-0x18]
  424b1d:	mov    edi,DWORD PTR [ebp-0x34]
  424b20:	shl    eax,0x3
  424b23:	sub    ecx,ecx
  424b25:	push   0x8
  424b27:	pop    esi
  424b28:	lea    edi,[edi+eax*2+0x4]
  424b2c:	jmp    0x424b63
  424b2e:	mov    ebp,DWORD PTR [ebp-0x34]
  424b31:	add    ebp,0x2
  424b34:	call   0x424cd6
  424b39:	jne    0x424b53
  424b3b:	mov    eax,DWORD PTR [ebp-0x18]
  424b3e:	mov    edi,DWORD PTR [ebp-0x34]
  424b41:	shl    eax,0x3
  424b44:	push   0x8
  424b46:	pop    ecx
  424b47:	push   0x8
  424b49:	pop    esi
  424b4a:	lea    edi,[edi+eax*2+0x104]
  424b51:	jmp    0x424b63
  424b53:	mov    edi,0x204
  424b58:	add    edi,DWORD PTR [ebp-0x34]
  424b5b:	push   0x10
  424b5d:	pop    ecx
  424b5e:	mov    esi,0x100
  424b63:	mov    DWORD PTR [ebp-0x1c],ecx
  424b66:	sub    eax,eax
  424b68:	inc    eax
  424b69:	mov    ebp,edi
  424b6b:	call   0x424cd8
  424b70:	mov    ecx,eax
  424b72:	sub    ecx,esi
  424b74:	jb     0x424b69
  424b76:	add    DWORD PTR [ebp-0x1c],ecx
  424b79:	cmp    DWORD PTR [ebp-0x3c],0x4
  424b7d:	jae    0x424c33
  424b83:	add    DWORD PTR [ebp-0x3c],0x7
  424b87:	mov    ecx,DWORD PTR [ebp-0x1c]
  424b8a:	cmp    ecx,0x4
  424b8d:	jb     0x424b92
  424b8f:	push   0x3
  424b91:	pop    ecx
  424b92:	mov    edi,DWORD PTR [ebp-0x38]
  424b95:	shl    ecx,0x6
  424b98:	sub    eax,eax
  424b9a:	inc    eax
  424b9b:	push   0x40
  424b9d:	pop    esi
  424b9e:	lea    edi,[edi+ecx*2+0x360]
  424ba5:	mov    ebp,edi
  424ba7:	call   0x424cd8
  424bac:	mov    ecx,eax
  424bae:	sub    ecx,esi
  424bb0:	jb     0x424ba5
  424bb2:	mov    DWORD PTR [ebp-0x18],ecx
  424bb5:	mov    DWORD PTR [ebp-0x24],ecx
  424bb8:	cmp    ecx,0x4
  424bbb:	jb     0x424c30
  424bbd:	mov    esi,ecx
  424bbf:	and    DWORD PTR [ebp-0x24],0x1
  424bc3:	shr    esi,1
  424bc5:	or     DWORD PTR [ebp-0x24],0x2
  424bc9:	dec    esi
  424bca:	cmp    ecx,0xe
  424bcd:	jae    0x424be8
  424bcf:	mov    eax,0x2af
  424bd4:	sub    eax,ecx
  424bd6:	mov    ecx,esi
  424bd8:	shl    BYTE PTR [ebp-0x24],cl
  424bdb:	add    eax,DWORD PTR [ebp-0x24]
  424bde:	shl    eax,1
  424be0:	add    eax,DWORD PTR [ebp-0x38]
  424be3:	mov    DWORD PTR [ebp-0x34],eax
  424be6:	jmp    0x424c15
  424be8:	sub    esi,0x4
  424beb:	call   0x424c95
  424bf0:	shr    ebx,1
  424bf2:	shl    DWORD PTR [ebp-0x24],1
  424bf5:	cmp    DWORD PTR [ebp-0x20],ebx
  424bf8:	jb     0x424c00
  424bfa:	inc    DWORD PTR [ebp-0x24]
  424bfd:	sub    DWORD PTR [ebp-0x20],ebx
  424c00:	dec    esi
  424c01:	jne    0x424beb
  424c03:	mov    eax,0x644
  424c08:	add    eax,DWORD PTR [ebp-0x38]
  424c0b:	mov    DWORD PTR [ebp-0x34],eax
  424c0e:	shl    DWORD PTR [ebp-0x24],0x4
  424c12:	push   0x4
  424c14:	pop    esi
  424c15:	sub    edi,edi
  424c17:	inc    edi
  424c18:	mov    eax,edi
  424c1a:	mov    ebp,DWORD PTR [ebp-0x34]
  424c1d:	call   0x424cd8
  424c22:	test   al,0x1
  424c24:	je     0x424c29
  424c26:	or     DWORD PTR [ebp-0x24],edi
  424c29:	shl    edi,1
  424c2b:	dec    esi
  424c2c:	jne    0x424c1a
  424c2e:	jmp    0x424c30
  424c30:	inc    DWORD PTR [ebp-0x24]
  424c33:	mov    ecx,DWORD PTR [ebp-0x1c]
  424c36:	add    ecx,0x2
  424c39:	mov    edi,DWORD PTR [ebp-0x4]
  424c3c:	mov    eax,edi
  424c3e:	sub    eax,DWORD PTR [ebp+0x24]
  424c41:	cmp    DWORD PTR [ebp-0x24],eax
  424c44:	ja     0x424c90
  424c46:	mov    esi,edi
  424c48:	sub    esi,DWORD PTR [ebp-0x24]
  424c4b:	mov    edx,DWORD PTR [ebp+0x28]
  424c4e:	lods   al,BYTE PTR ds:[esi]
  424c4f:	stos   BYTE PTR es:[edi],al
  424c50:	cmp    edi,edx
  424c52:	jae    0x424c57
  424c54:	dec    ecx
  424c55:	jne    0x424c4e
  424c57:	mov    DWORD PTR [ebp-0x4],edi
  424c5a:	movzx  esi,al
  424c5d:	cmp    edi,DWORD PTR [ebp+0x28]
  424c60:	jb     0x4249c1
  424c66:	call   0x424c95
  424c6b:	sub    eax,eax
  424c6d:	lea    ebp,[esp+0x3c]
  424c71:	mov    edx,DWORD PTR [ebp+0x20]
  424c74:	mov    esi,DWORD PTR [ebp-0x8]
  424c77:	sub    esi,DWORD PTR [ebp+0x18]
  424c7a:	mov    DWORD PTR [edx],esi
  424c7c:	mov    edx,DWORD PTR [ebp+0x2c]
  424c7f:	mov    edi,DWORD PTR [edx+edi*2+0x33]
  424c83:	jl     0x424c9c
  424c85:	lods   eax,DWORD PTR ds:[esi]
  424c86:	outs   dx,DWORD PTR ds:[esi]
  424c87:	scas   al,BYTE PTR es:[edi]
  424c88:	hlt    
  424c89:	add    BYTE PTR [edx+edx*4],al
  424c8c:	test   DWORD PTR [edi-0x75cc1800],0x8dea3688
  424c96:	jbe    0x424c1f
  424c98:	xchg   DWORD PTR [edi-0x6974af75],eax
  424c9e:	mov    ss,WORD PTR [esi]
  424ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ca1:	loopne 0x424c58
  424ca3:	pop    esp
  424ca4:	push   0x73
  424ca6:	pop    esp
  424ca7:	not    DWORD PTR [edx+ebx*1-0x4b]
  424cab:	pushf  
  424cac:	or     cl,BYTE PTR [esi-0x52c658f6]
  424cb2:	pushf  
  424cb3:	or     ch,BYTE PTR [ebp-0x69ff95a4]
  424cb9:	mov    ch,0xbc
  424cbb:	call   0x970e:0x8e8a61c3
  424cc2:	xchg   ebx,eax
  424cc3:	pushf  
  424cc4:	sub    dl,BYTE PTR [ebx-0x3c60c972]
  424cca:	popa   
  424ccb:	mov    dl,BYTE PTR [ebx+0x3cb59a9c]
  424cd1:	stos   BYTE PTR es:[edi],al
  424cd2:	mov    ebp,0x33879c38
  424cd7:	mov    bh,BYTE PTR [ebp-0x727863c8]
  424cdd:	jbe    0x424c66
  424cdf:	xchg   DWORD PTR [edi-0x4a08ab75],eax
  424ce5:	mov    eax,0x188e6717
  424cea:	pop    ss
  424ceb:	pop    es
  424cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ced:	jae    0x424ca7
  424cef:	pop    ss
  424cf0:	clc    
  424cf1:	push   esp
  424cf2:	stc    
  424cf3:	mov    cl,0xcb
  424cf5:	xchg   BYTE PTR [eax+0x168e6717],bl
  424cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424cfc:	test   eax,0x8b0717d8
  424d01:	retf   
  424d02:	movzx  edx,WORD PTR [ebp+0x0]
  424d06:	shr    ecx,0xb
  424d09:	imul   ecx,edx
  424d0c:	cmp    DWORD PTR [esp+0x20],ecx
  424d10:	jae    0x424d29
  424d12:	mov    ebx,ecx
  424d14:	mov    ecx,0x800
  424d19:	sub    ecx,edx
  424d1b:	shr    ecx,0x5
  424d1e:	add    WORD PTR [ebp+0x0],cx
  424d22:	add    eax,eax
  424d24:	lea    ebp,[esp+0x40]
  424d28:	ret    
  424d29:	shr    edx,0x5
  424d2c:	sub    DWORD PTR [esp+0x20],ecx
  424d30:	sub    ebx,ecx
  424d32:	sub    WORD PTR [ebp+0x0],dx
  424d36:	add    eax,eax
  424d38:	add    eax,0x1
  424d3b:	lea    ebp,[esp+0x40]
  424d3f:	ret    
  424d40:	push   ebp
  424d41:	mov    ebp,esp
  424d43:	sub    esp,0x12c
  424d49:	push   ebx
  424d4a:	push   esi
  424d4b:	push   edi
  424d4c:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  424d53:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  424d5a:	mov    eax,DWORD PTR [ebp+0x8]
  424d5d:	mov    DWORD PTR [ebp+0x8],eax
  424d60:	mov    ecx,DWORD PTR [ebp-0x10]
  424d63:	mov    ebx,0x75108ac
  424d68:	xor    ecx,ebx
  424d6a:	mov    eax,0x3272f3
  424d6f:	add    ecx,eax
  424d71:	mov    DWORD PTR [ebp-0x24],ecx
  424d74:	mov    ecx,DWORD PTR [ebp-0x10]
  424d77:	xor    ecx,ebx
  424d79:	add    ecx,eax
  424d7b:	mov    DWORD PTR [ebp-0x40],ecx
  424d7e:	mov    ecx,DWORD PTR [ebp-0x10]
  424d81:	xor    ecx,ebx
  424d83:	add    ecx,eax
  424d85:	mov    DWORD PTR [ebp-0x3c],ecx
  424d88:	mov    ecx,DWORD PTR [ebp-0x10]
  424d8b:	xor    ecx,ebx
  424d8d:	add    ecx,eax
  424d8f:	mov    DWORD PTR [ebp-0xd8],ecx
  424d95:	mov    DWORD PTR [ebp-0x50],0xf89f05a1
  424d9c:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a1
  424da3:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  424daa:	push   0x25
  424dac:	pop    ecx
  424dad:	mov    DWORD PTR [ebp-0x30],ecx
  424db0:	mov    DWORD PTR [ebp-0x30],ecx
  424db3:	push   0x65
  424db5:	pop    ecx
  424db6:	mov    DWORD PTR [ebp-0x30],ecx
  424db9:	mov    DWORD PTR [ebp-0x30],ecx
  424dbc:	mov    DWORD PTR [ebp-0x30],0x4d
  424dc3:	mov    DWORD PTR [ebp-0x30],0x43
  424dca:	mov    ecx,DWORD PTR [ebp-0x10]
  424dcd:	xor    ecx,ebx
  424dcf:	add    ecx,eax
  424dd1:	mov    DWORD PTR [ebp-0x30],ecx
  424dd4:	mov    ecx,DWORD PTR [ebp-0x10]
  424dd7:	xor    ecx,ebx
  424dd9:	add    ecx,eax
  424ddb:	mov    DWORD PTR [ebp-0x30],ecx
  424dde:	mov    DWORD PTR [ebp-0x28],0x258
  424de5:	mov    DWORD PTR [ebp-0x34],0x36
  424dec:	mov    DWORD PTR [ebp-0x14],0x7a
  424df3:	lea    edi,[ebp-0x10c]
  424df9:	lea    esi,[ebp-0x12c]
  424dff:	call   0x425abf
  424e04:	dec    DWORD PTR [ebp-0x14]
  424e07:	jne    0x424df3
  424e09:	dec    DWORD PTR [ebp-0x34]
  424e0c:	jne    0x424dec
  424e0e:	dec    DWORD PTR [ebp-0x28]
  424e11:	jne    0x424de5
  424e13:	mov    DWORD PTR [ebp-0x28],0x400e
  424e1a:	mov    eax,DWORD PTR [ebp-0x10]
  424e1d:	xor    eax,ebx
  424e1f:	mov    esi,0x3272f3
  424e24:	add    eax,esi
  424e26:	mov    DWORD PTR [ebp-0x1c],eax
  424e29:	mov    eax,DWORD PTR [ebp-0x10]
  424e2c:	and    DWORD PTR [ebp-0x94],0x0
  424e33:	xor    eax,ebx
  424e35:	add    eax,esi
  424e37:	mov    DWORD PTR [ebp-0x38],eax
  424e3a:	mov    eax,fs:0x18
  424e40:	mov    DWORD PTR [ebp-0x94],eax
  424e46:	mov    eax,DWORD PTR [eax+0x30]
  424e49:	mov    DWORD PTR [ebp-0xcc],eax
  424e4f:	mov    eax,DWORD PTR [eax+0xc]
  424e52:	mov    DWORD PTR [ebp-0xc0],eax
  424e58:	mov    eax,DWORD PTR [ebp+0x8]
  424e5b:	lea    ecx,[ebp-0x94]
  424e61:	mov    DWORD PTR [eax+0x1a0],ecx
  424e67:	mov    eax,DWORD PTR [ebp+0x8]
  424e6a:	lea    ecx,[ebp-0xcc]
  424e70:	mov    DWORD PTR [eax+0x1a4],ecx
  424e76:	mov    eax,DWORD PTR [ebp+0x8]
  424e79:	push   DWORD PTR [ebp+0x8]
  424e7c:	lea    ecx,[ebp-0xc0]
  424e82:	mov    DWORD PTR [eax+0x1a8],ecx
  424e88:	call   0x427282
  424e8d:	mov    ecx,DWORD PTR [ebp-0x10]
  424e90:	xor    ecx,ebx
  424e92:	add    ecx,esi
  424e94:	cmp    ecx,eax
  424e96:	je     0x425219
  424e9c:	mov    eax,DWORD PTR [ebp+0x8]
  424e9f:	mov    eax,DWORD PTR [eax+0x194]
  424ea5:	mov    ecx,DWORD PTR [eax]
  424ea7:	mov    eax,DWORD PTR [ebp+0x8]
  424eaa:	mov    eax,DWORD PTR [eax+0x194]
  424eb0:	mov    eax,DWORD PTR [eax]
  424eb2:	add    eax,DWORD PTR [ecx+0x3c]
  424eb5:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb8:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424ebe:	lea    edx,[ebp-0xec]
  424ec4:	push   edx
  424ec5:	mov    edx,DWORD PTR [ebp+0x8]
  424ec8:	mov    edx,DWORD PTR [edx+0x18c]
  424ece:	mov    edx,DWORD PTR [edx]
  424ed0:	add    edx,DWORD PTR [eax+0x88]
  424ed6:	push   0x4
  424ed8:	push   DWORD PTR [eax+0x8c]
  424ede:	push   edx
  424edf:	call   DWORD PTR [ecx+0x1c]
  424ee2:	push   DWORD PTR [ebp+0x8]
  424ee5:	xor    eax,eax
  424ee7:	mov    DWORD PTR [ebp-0xa8],0x1b3c0c3a
  424ef1:	mov    DWORD PTR [ebp-0xa4],0x10370d22
  424efb:	mov    DWORD PTR [ebp-0xa0],0x420d1e08
  424f05:	mov    BYTE PTR [ebp-0x9c],0x83
  424f0c:	lea    edi,[ebp-0x9b]
  424f12:	stos   DWORD PTR es:[edi],eax
  424f13:	stos   WORD PTR es:[edi],ax
  424f15:	stos   BYTE PTR es:[edi],al
  424f16:	xor    eax,eax
  424f18:	mov    DWORD PTR [ebp-0xbc],0x1b3c0c3a
  424f22:	mov    DWORD PTR [ebp-0xb8],0x10370d22
  424f2c:	mov    DWORD PTR [ebp-0xb4],0x280d1e08
  424f36:	mov    BYTE PTR [ebp-0xb0],0x83
  424f3d:	lea    edi,[ebp-0xaf]
  424f43:	stos   DWORD PTR es:[edi],eax
  424f44:	stos   WORD PTR es:[edi],ax
  424f46:	stos   BYTE PTR es:[edi],al
  424f47:	mov    edi,DWORD PTR [ebp+0x8]
  424f4a:	mov    eax,DWORD PTR [ebp+0x8]
  424f4d:	mov    edx,DWORD PTR [eax+0x1b8]
  424f53:	mov    DWORD PTR [ebp-0x68],0xd0f0c17
  424f5a:	mov    DWORD PTR [ebp-0x64],0x1a13161c
  424f61:	mov    WORD PTR [ebp-0x60],0x8342
  424f67:	mov    DWORD PTR [ebp-0x90],0x1b3c0c3a
  424f71:	mov    DWORD PTR [ebp-0x8c],0x17420d22
  424f7b:	mov    DWORD PTR [ebp-0x88],0x31221b13
  424f85:	mov    DWORD PTR [ebp-0x84],0xd1e160e
  424f8f:	mov    DWORD PTR [ebp-0x80],0x83421c1a
  424f96:	mov    DWORD PTR [ebp-0x7c],0x1b3c0c3a
  424f9d:	mov    DWORD PTR [ebp-0x78],0x17420d22
  424fa4:	mov    DWORD PTR [ebp-0x74],0x31221b13
  424fab:	mov    DWORD PTR [ebp-0x70],0xd1e160e
  424fb2:	mov    DWORD PTR [ebp-0x6c],0x83281c1a
  424fb9:	call   0x4272b1
  424fbe:	push   eax
  424fbf:	mov    eax,DWORD PTR [ebp+0x8]
  424fc2:	mov    eax,DWORD PTR [eax+0x1a8]
  424fc8:	push   DWORD PTR [eax]
  424fca:	call   0x426f52
  424fcf:	test   eax,eax
  424fd1:	jne    0x425023
  424fd3:	mov    eax,DWORD PTR [ebp+0x8]
  424fd6:	mov    eax,DWORD PTR [eax+0x1e0]
  424fdc:	mov    edi,DWORD PTR [ebp+0x8]
  424fdf:	add    eax,0x4
  424fe2:	mov    DWORD PTR [ebp-0x20],eax
  424fe5:	mov    eax,DWORD PTR [ebp+0x8]
  424fe8:	mov    edx,DWORD PTR [eax+0x1b8]
  424fee:	call   0x4272b1
  424ff3:	push   eax
  424ff4:	mov    eax,DWORD PTR [ebp-0x20]
  424ff7:	call   DWORD PTR [eax]
  424ff9:	test   eax,eax
  424ffb:	jne    0x425023
  424ffd:	mov    eax,DWORD PTR [ebp+0x8]
  425000:	mov    eax,DWORD PTR [eax+0x1e0]
  425006:	mov    edi,DWORD PTR [ebp+0x8]
  425009:	add    eax,0x10
  42500c:	mov    DWORD PTR [ebp-0x20],eax
  42500f:	mov    eax,DWORD PTR [ebp+0x8]
  425012:	mov    edx,DWORD PTR [eax+0x1b8]
  425018:	call   0x4272b1
  42501d:	push   eax
  42501e:	mov    eax,DWORD PTR [ebp-0x20]
  425021:	call   DWORD PTR [eax]
  425023:	mov    eax,DWORD PTR [ebp-0x10]
  425026:	mov    ecx,DWORD PTR [ebp-0x28]
  425029:	xor    eax,ebx
  42502b:	add    eax,esi
  42502d:	cmp    eax,ecx
  42502f:	je     0x4251f2
  425035:	mov    eax,DWORD PTR [ebp-0x18]
  425038:	xor    eax,ebx
  42503a:	mov    ecx,0xffcd8d0d
  42503f:	sub    ecx,eax
  425041:	add    ecx,DWORD PTR [ebp-0x28]
  425044:	mov    eax,DWORD PTR [ebp-0x1c]
  425047:	cmp    eax,ecx
  425049:	ja     0x4251f2
  42504f:	mov    DWORD PTR [ebp-0x34],0x0
  425056:	push   DWORD PTR [ebp+0x8]
  425059:	mov    edi,DWORD PTR [ebp+0x8]
  42505c:	mov    eax,DWORD PTR [ebp+0x8]
  42505f:	mov    edx,DWORD PTR [eax+0x1b4]
  425065:	call   0x4272b1
  42506a:	push   eax
  42506b:	mov    eax,DWORD PTR [ebp+0x8]
  42506e:	mov    eax,DWORD PTR [eax+0x1a8]
  425074:	push   DWORD PTR [eax]
  425076:	call   0x426f52
  42507b:	mov    ecx,DWORD PTR [ebp+0x8]
  42507e:	mov    ecx,DWORD PTR [ecx+0x19c]
  425084:	mov    DWORD PTR [ecx],eax
  425086:	mov    eax,DWORD PTR [ebp+0x8]
  425089:	mov    edi,DWORD PTR [eax+0x1e0]
  42508f:	mov    esi,DWORD PTR [ebp+0x8]
  425092:	xor    eax,eax
  425094:	lea    edx,[ebp-0x7c]
  425097:	call   0x4272e7
  42509c:	push   eax
  42509d:	mov    eax,DWORD PTR [ebp+0x8]
  4250a0:	mov    eax,DWORD PTR [eax+0x19c]
  4250a6:	push   DWORD PTR [eax]
  4250a8:	call   DWORD PTR [edi+0x8]
  4250ab:	mov    DWORD PTR [ebp-0x20],eax
  4250ae:	mov    eax,DWORD PTR [ebp+0x8]
  4250b1:	mov    edi,DWORD PTR [eax+0x1e0]
  4250b7:	mov    esi,DWORD PTR [ebp+0x8]
  4250ba:	xor    eax,eax
  4250bc:	lea    edx,[ebp-0x90]
  4250c2:	call   0x4272e7
  4250c7:	push   eax
  4250c8:	mov    eax,DWORD PTR [ebp+0x8]
  4250cb:	mov    eax,DWORD PTR [eax+0x19c]
  4250d1:	push   DWORD PTR [eax]
  4250d3:	call   DWORD PTR [edi+0x8]
  4250d6:	mov    eax,DWORD PTR [ebp+0x8]
  4250d9:	mov    edi,DWORD PTR [eax+0x1e0]
  4250df:	mov    esi,DWORD PTR [ebp+0x8]
  4250e2:	xor    eax,eax
  4250e4:	lea    edx,[ebp-0xa8]
  4250ea:	call   0x4272e7
  4250ef:	push   eax
  4250f0:	mov    eax,DWORD PTR [ebp+0x8]
  4250f3:	mov    eax,DWORD PTR [eax+0x19c]
  4250f9:	push   DWORD PTR [eax]
  4250fb:	call   DWORD PTR [edi+0x8]
  4250fe:	and    DWORD PTR [ebp-0x8],0x0
  425102:	mov    DWORD PTR [ebp-0x48],eax
  425105:	mov    eax,DWORD PTR [ebp-0x8]
  425108:	and    eax,0x7
  42510b:	add    eax,0x31
  42510e:	push   eax
  42510f:	call   DWORD PTR [ebp-0x20]
  425112:	test   eax,eax
  425114:	je     0x425158
  425116:	mov    eax,DWORD PTR [ebp-0x8]
  425119:	push   0x19
  42511b:	xor    edx,edx
  42511d:	pop    ecx
  42511e:	div    ecx
  425120:	add    dl,0x41
  425123:	movzx  eax,dl
  425126:	push   eax
  425127:	call   DWORD PTR [ebp-0x48]
  42512a:	test   eax,eax
  42512c:	jne    0x425158
  42512e:	mov    eax,DWORD PTR [ebp+0x8]
  425131:	mov    edi,DWORD PTR [eax+0x1e0]
  425137:	mov    esi,DWORD PTR [ebp+0x8]
  42513a:	xor    eax,eax
  42513c:	lea    edx,[ebp-0x68]
  42513f:	call   0x4272e7
  425144:	push   eax
  425145:	mov    eax,DWORD PTR [ebp+0x8]
  425148:	mov    eax,DWORD PTR [eax+0x198]
  42514e:	push   DWORD PTR [eax]
  425150:	call   DWORD PTR [edi+0x8]
  425153:	mov    DWORD PTR [ebp-0x14],eax
  425156:	jmp    0x42515c
  425158:	and    DWORD PTR [ebp-0x14],0x0
  42515c:	inc    DWORD PTR [ebp-0x8]
  42515f:	cmp    DWORD PTR [ebp-0x8],0x10
  425163:	jb     0x425105
  425165:	mov    eax,DWORD PTR [ebp-0x18]
  425168:	mov    esi,DWORD PTR [ebp+0x8]
  42516b:	xor    eax,ebx
  42516d:	mov    edi,0x3272f3
  425172:	add    eax,edi
  425174:	lea    edx,[ebp-0x10c]
  42517a:	call   0x4272e7
  42517f:	push   eax
  425180:	mov    eax,DWORD PTR [ebp-0x10]
  425183:	mov    esi,DWORD PTR [ebp+0x8]
  425186:	xor    eax,ebx
  425188:	add    eax,edi
  42518a:	lea    edx,[ebp-0x12c]
  425190:	call   0x4272e7
  425195:	push   eax
  425196:	call   DWORD PTR [ebp-0x14]
  425199:	mov    ecx,DWORD PTR [ebp-0x10]
  42519c:	xor    ecx,ebx
  42519e:	add    ecx,edi
  4251a0:	cmp    ecx,eax
  4251a2:	jne    0x4251ab
  4251a4:	mov    DWORD PTR [ebp-0x34],0x1
  4251ab:	mov    eax,DWORD PTR [ebp-0x18]
  4251ae:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251b1:	xor    eax,ebx
  4251b3:	lea    eax,[eax+ecx*1+0x3272f3]
  4251ba:	mov    DWORD PTR [ebp-0x1c],eax
  4251bd:	mov    eax,DWORD PTR [ebp-0x34]
  4251c0:	test   eax,eax
  4251c2:	je     0x4251d6
  4251c4:	mov    eax,DWORD PTR [ebp-0x18]
  4251c7:	mov    ecx,DWORD PTR [ebp-0x38]
  4251ca:	xor    eax,ebx
  4251cc:	lea    eax,[eax+ecx*1+0x3272f3]
  4251d3:	mov    DWORD PTR [ebp-0x38],eax
  4251d6:	mov    eax,DWORD PTR [ebp-0x18]
  4251d9:	xor    eax,ebx
  4251db:	mov    ecx,0xffcd8d0d
  4251e0:	sub    ecx,eax
  4251e2:	add    ecx,DWORD PTR [ebp-0x28]
  4251e5:	mov    eax,DWORD PTR [ebp-0x1c]
  4251e8:	cmp    eax,ecx
  4251ea:	jbe    0x42504f
  4251f0:	mov    esi,edi
  4251f2:	mov    eax,DWORD PTR [ebp-0x38]
  4251f5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251f8:	cmp    ecx,eax
  4251fa:	jne    0x42520d
  4251fc:	push   DWORD PTR [ebp+0x8]
  4251ff:	lea    eax,[ebp-0x40]
  425202:	push   eax
  425203:	call   0x427d56
  425208:	mov    DWORD PTR [ebp-0x24],eax
  42520b:	jmp    0x425219
  42520d:	mov    eax,DWORD PTR [ebp-0x24]
  425210:	mov    ecx,DWORD PTR [ebp-0x18]
  425213:	xor    ecx,ebx
  425215:	add    ecx,esi
  425217:	xor    DWORD PTR [eax],ecx
  425219:	mov    eax,DWORD PTR [ebp-0x10]
  42521c:	mov    ecx,DWORD PTR [ebp-0x24]
  42521f:	xor    eax,ebx
  425221:	add    eax,esi
  425223:	cmp    eax,ecx
  425225:	je     0x42599d
  42522b:	mov    eax,DWORD PTR [ebp-0x10]
  42522e:	mov    ecx,DWORD PTR [ebp-0x40]
  425231:	xor    eax,ebx
  425233:	add    eax,esi
  425235:	cmp    eax,ecx
  425237:	je     0x42599d
  42523d:	mov    eax,DWORD PTR [ebp-0x10]
  425240:	xor    eax,ebx
  425242:	add    eax,esi
  425244:	jmp    0x425262
  425246:	mov    edi,DWORD PTR [ebp-0x24]
  425249:	mov    cl,al
  42524b:	and    cl,0x1f
  42524e:	or     dl,0xff
  425251:	sub    dl,cl
  425253:	add    BYTE PTR [edi+eax*1],dl
  425256:	mov    ecx,DWORD PTR [ebp-0x18]
  425259:	xor    ecx,ebx
  42525b:	lea    eax,[eax+ecx*1+0x3272f3]
  425262:	mov    ecx,DWORD PTR [ebp-0x40]
  425265:	cmp    eax,ecx
  425267:	jb     0x425246
  425269:	mov    eax,DWORD PTR [ebp-0x40]
  42526c:	mov    DWORD PTR [ebp-0x28],eax
  42526f:	mov    eax,DWORD PTR [ebp-0x24]
  425272:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  425279:	mov    DWORD PTR [ebp-0xd4],eax
  42527f:	mov    edi,0xf89c85a2
  425284:	mov    DWORD PTR [ebp-0x2c],edi
  425287:	mov    eax,DWORD PTR [ebp-0x38]
  42528a:	xor    eax,ebx
  42528c:	add    eax,esi
  42528e:	mov    DWORD PTR [ebp-0xc],eax
  425291:	mov    eax,DWORD PTR [ebp-0x38]
  425294:	xor    eax,ebx
  425296:	add    eax,esi
  425298:	mov    DWORD PTR [ebp-0x8],eax
  42529b:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  4252a2:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  4252a9:	mov    eax,DWORD PTR [ebp-0x38]
  4252ac:	mov    ecx,DWORD PTR [ebp-0x28]
  4252af:	xor    eax,ebx
  4252b1:	add    eax,esi
  4252b3:	cmp    ecx,eax
  4252b5:	je     0x4254b4
  4252bb:	jmp    0x425490
  4252c0:	mov    ecx,DWORD PTR [ebp-0xc]
  4252c3:	mov    eax,DWORD PTR [ebp-0x28]
  4252c6:	sub    eax,ecx
  4252c8:	mov    ecx,DWORD PTR [ebp-0x48]
  4252cb:	xor    ecx,ebx
  4252cd:	add    ecx,esi
  4252cf:	xor    edx,edx
  4252d1:	div    ecx
  4252d3:	mov    DWORD PTR [ebp-0x8],eax
  4252d6:	mov    eax,DWORD PTR [ebp-0x4c]
  4252d9:	mov    ecx,DWORD PTR [ebp-0x8]
  4252dc:	xor    eax,ebx
  4252de:	add    eax,esi
  4252e0:	cmp    ecx,eax
  4252e2:	jbe    0x4252ee
  4252e4:	mov    eax,DWORD PTR [ebp-0x4c]
  4252e7:	xor    eax,ebx
  4252e9:	add    eax,esi
  4252eb:	mov    DWORD PTR [ebp-0x8],eax
  4252ee:	mov    eax,DWORD PTR [ebp-0x48]
  4252f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4252f4:	xor    eax,ebx
  4252f6:	add    eax,esi
  4252f8:	imul   eax,ecx
  4252fb:	mov    DWORD PTR [ebp-0x8],eax
  4252fe:	mov    eax,DWORD PTR [ebp-0x38]
  425301:	mov    ecx,DWORD PTR [ebp-0x8]
  425304:	xor    eax,ebx
  425306:	add    eax,esi
  425308:	cmp    ecx,eax
  42530a:	je     0x42547e
  425310:	mov    eax,DWORD PTR [ebp-0x8]
  425313:	mov    DWORD PTR [ebp-0x14],eax
  425316:	mov    eax,DWORD PTR [ebp-0xc]
  425319:	add    eax,DWORD PTR [ebp-0xd4]
  42531f:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  425326:	mov    DWORD PTR [ebp-0x34],edi
  425329:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  425333:	mov    DWORD PTR [ebp-0x8],eax
  425336:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  42533d:	mov    DWORD PTR [ebp-0x1c],edi
  425340:	mov    eax,DWORD PTR [ebp-0x20]
  425343:	xor    eax,ebx
  425345:	add    eax,esi
  425347:	jmp    0x42543d
  42534c:	mov    DWORD PTR [ebp-0xe0],0xf89c85b4
  425356:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  425360:	mov    eax,DWORD PTR [ebp-0x1c]
  425363:	mov    ecx,DWORD PTR [ebp-0x44]
  425366:	xor    eax,ebx
  425368:	add    eax,esi
  42536a:	imul   eax,ecx
  42536d:	mov    ecx,DWORD PTR [ebp-0x8]
  425370:	mov    al,BYTE PTR [eax+ecx*1]
  425373:	mov    BYTE PTR [ebp-0x2],al
  425376:	mov    eax,DWORD PTR [ebp-0x1c]
  425379:	mov    ecx,DWORD PTR [ebp-0x44]
  42537c:	xor    eax,ebx
  42537e:	add    eax,esi
  425380:	imul   eax,ecx
  425383:	mov    ecx,DWORD PTR [ebp-0xe8]
  425389:	xor    ecx,ebx
  42538b:	add    eax,ecx
  42538d:	mov    ecx,DWORD PTR [ebp-0x8]
  425390:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  425398:	mov    ecx,DWORD PTR [ebp-0xe0]
  42539e:	xor    ecx,ebx
  4253a0:	lea    eax,[ecx+eax*1+0x3272f3]
  4253a7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4253ab:	xor    ecx,eax
  4253ad:	mov    BYTE PTR [ebp-0x2],cl
  4253b0:	mov    al,BYTE PTR [ebp-0x2]
  4253b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4253b6:	mov    edx,DWORD PTR [ebp-0x44]
  4253b9:	xor    ecx,ebx
  4253bb:	add    ecx,esi
  4253bd:	imul   ecx,edx
  4253c0:	mov    edx,DWORD PTR [ebp-0x8]
  4253c3:	mov    BYTE PTR [ecx+edx*1],al
  4253c6:	mov    eax,DWORD PTR [ebp-0x1c]
  4253c9:	mov    ecx,DWORD PTR [ebp-0x44]
  4253cc:	xor    eax,ebx
  4253ce:	add    eax,esi
  4253d0:	imul   eax,ecx
  4253d3:	mov    ecx,DWORD PTR [ebp-0x8]
  4253d6:	mov    al,BYTE PTR [eax+ecx*1]
  4253d9:	mov    BYTE PTR [ebp-0x2],al
  4253dc:	mov    eax,DWORD PTR [ebp-0x1c]
  4253df:	mov    ecx,DWORD PTR [ebp-0x44]
  4253e2:	xor    eax,ebx
  4253e4:	add    eax,esi
  4253e6:	imul   eax,ecx
  4253e9:	mov    ecx,DWORD PTR [ebp-0x34]
  4253ec:	xor    ecx,ebx
  4253ee:	add    eax,ecx
  4253f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4253f3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4253fb:	mov    ecx,DWORD PTR [ebp-0xc4]
  425401:	xor    ecx,ebx
  425403:	lea    eax,[ecx+eax*1+0x3272f3]
  42540a:	movzx  ecx,BYTE PTR [ebp-0x2]
  42540e:	xor    ecx,eax
  425410:	mov    BYTE PTR [ebp-0x2],cl
  425413:	mov    al,BYTE PTR [ebp-0x2]
  425416:	mov    ecx,DWORD PTR [ebp-0x1c]
  425419:	mov    edx,DWORD PTR [ebp-0x44]
  42541c:	xor    ecx,ebx
  42541e:	add    ecx,esi
  425420:	imul   ecx,edx
  425423:	mov    edx,DWORD PTR [ebp-0x8]
  425426:	mov    BYTE PTR [ecx+edx*1],al
  425429:	mov    eax,DWORD PTR [ebp-0x30]
  42542c:	mov    ecx,DWORD PTR [ebp-0x34]
  42542f:	xor    eax,ebx
  425431:	xor    ecx,ebx
  425433:	add    eax,esi
  425435:	add    ecx,esi
  425437:	imul   eax,ecx
  42543a:	add    eax,DWORD PTR [ebp-0x44]
  42543d:	mov    DWORD PTR [ebp-0x44],eax
  425440:	mov    eax,DWORD PTR [ebp-0x44]
  425443:	mov    ecx,DWORD PTR [ebp-0x14]
  425446:	cmp    ecx,eax
  425448:	jb     0x42534c
  42544e:	mov    eax,DWORD PTR [ebp-0x34]
  425451:	mov    ecx,DWORD PTR [ebp-0x14]
  425454:	xor    eax,ebx
  425456:	add    eax,esi
  425458:	imul   eax,ecx
  42545b:	mov    ecx,DWORD PTR [ebp-0x20]
  42545e:	xor    ecx,ebx
  425460:	add    ecx,esi
  425462:	or     eax,ecx
  425464:	mov    ecx,DWORD PTR [ebp-0x2c]
  425467:	xor    ecx,ebx
  425469:	add    eax,ecx
  42546b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42546e:	xor    ecx,ebx
  425470:	add    eax,ecx
  425472:	mov    ecx,DWORD PTR [ebp-0xc]
  425475:	lea    eax,[eax+ecx*1+0x64e5e6]
  42547c:	jmp    0x42548d
  42547e:	mov    eax,DWORD PTR [ebp-0x2c]
  425481:	mov    ecx,DWORD PTR [ebp-0xc]
  425484:	xor    eax,ebx
  425486:	lea    eax,[eax+ecx*1+0x3272f3]
  42548d:	mov    DWORD PTR [ebp-0xc],eax
  425490:	mov    eax,DWORD PTR [ebp-0x2c]
  425493:	xor    eax,ebx
  425495:	mov    ecx,0xffcd8d0d
  42549a:	sub    ecx,eax
  42549c:	add    ecx,DWORD PTR [ebp-0x28]
  42549f:	mov    eax,DWORD PTR [ebp-0x2c]
  4254a2:	mov    edx,DWORD PTR [ebp-0xc]
  4254a5:	xor    eax,ebx
  4254a7:	add    eax,esi
  4254a9:	imul   eax,edx
  4254ac:	cmp    eax,ecx
  4254ae:	jbe    0x4252c0
  4254b4:	mov    eax,DWORD PTR [ebp-0x10]
  4254b7:	mov    ecx,DWORD PTR [ebp-0x40]
  4254ba:	mov    eax,DWORD PTR [ebp+0x8]
  4254bd:	mov    edx,DWORD PTR [ebp-0x54]
  4254c0:	mov    eax,DWORD PTR [eax+0x1e0]
  4254c6:	xor    edx,ebx
  4254c8:	add    edx,esi
  4254ca:	push   edx
  4254cb:	mov    edx,DWORD PTR [ebp-0x3c]
  4254ce:	xor    edx,ebx
  4254d0:	add    edx,esi
  4254d2:	push   edx
  4254d3:	push   ecx
  4254d4:	mov    DWORD PTR [ebp-0x30],ecx
  4254d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4254da:	xor    ecx,ebx
  4254dc:	add    ecx,esi
  4254de:	push   ecx
  4254df:	call   DWORD PTR [eax+0x14]
  4254e2:	mov    edi,eax
  4254e4:	mov    eax,DWORD PTR [ebp-0x10]
  4254e7:	xor    eax,ebx
  4254e9:	add    eax,esi
  4254eb:	cmp    eax,edi
  4254ed:	je     0x425548
  4254ef:	mov    eax,DWORD PTR [ebp-0x10]
  4254f2:	jmp    0x425515
  4254f4:	mov    ecx,DWORD PTR [ebp-0x24]
  4254f7:	xor    eax,ebx
  4254f9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f3]
  425500:	mov    BYTE PTR [eax+edi*1+0x3272f3],cl
  425507:	mov    ecx,DWORD PTR [ebp-0x18]
  42550a:	xor    ecx,ebx
  42550c:	lea    eax,[ecx+eax*1+0x3272f3]
  425513:	xor    eax,ebx
  425515:	mov    ecx,DWORD PTR [ebp-0x40]
  425518:	sub    ecx,esi
  42551a:	xor    ecx,ebx
  42551c:	cmp    eax,ecx
  42551e:	jne    0x4254f4
  425520:	mov    eax,DWORD PTR [ebp+0x8]
  425523:	mov    ecx,DWORD PTR [ebp-0x50]
  425526:	mov    eax,DWORD PTR [eax+0x1e0]
  42552c:	xor    ecx,ebx
  42552e:	add    ecx,esi
  425530:	push   ecx
  425531:	mov    ecx,DWORD PTR [ebp-0x10]
  425534:	xor    ecx,ebx
  425536:	add    ecx,esi
  425538:	push   ecx
  425539:	push   DWORD PTR [ebp-0x24]
  42553c:	call   DWORD PTR [eax+0x18]
  42553f:	mov    eax,DWORD PTR [ebp-0x30]
  425542:	mov    DWORD PTR [ebp-0x24],edi
  425545:	mov    DWORD PTR [ebp-0x40],eax
  425548:	mov    edi,DWORD PTR [ebp-0x24]
  42554b:	mov    eax,DWORD PTR [ebp-0x18]
  42554e:	mov    ecx,DWORD PTR [ebp-0x10]
  425551:	xor    eax,ebx
  425553:	mov    DWORD PTR [ebp-0x30],edi
  425556:	add    eax,esi
  425558:	mov    DWORD PTR [ebp-0x5c],0x422b332b
  42555f:	mov    DWORD PTR [ebp-0x58],0x342b3c2b
  425566:	jmp    0x42559a
  425568:	xor    ecx,ebx
  42556a:	mov    dl,BYTE PTR [ebp+ecx*1+0x327297]
  425571:	xor    dl,0x7d
  425574:	add    dl,0x2
  425577:	mov    DWORD PTR [ebp-0x3c],ecx
  42557a:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f3]
  425582:	movzx  edx,dl
  425585:	cmp    ecx,edx
  425587:	jne    0x4255a4
  425589:	mov    ecx,DWORD PTR [ebp-0x18]
  42558c:	mov    edx,DWORD PTR [ebp-0x3c]
  42558f:	xor    ecx,ebx
  425591:	lea    ecx,[ecx+edx*1+0x3272f3]
  425598:	xor    ecx,ebx
  42559a:	cmp    ecx,0xf89c85b9
  4255a0:	jne    0x425568
  4255a2:	jmp    0x4255ab
  4255a4:	mov    eax,DWORD PTR [ebp-0x10]
  4255a7:	xor    eax,ebx
  4255a9:	add    eax,esi
  4255ab:	mov    ecx,DWORD PTR [ebp-0x10]
  4255ae:	xor    ecx,ebx
  4255b0:	add    ecx,esi
  4255b2:	cmp    ecx,eax
  4255b4:	je     0x425727
  4255ba:	mov    eax,DWORD PTR [edi+0x8]
  4255bd:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  4255c4:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d0
  4255cb:	mov    DWORD PTR [ebp-0x48],0xf89cb5a1
  4255d2:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4255d9:	mov    DWORD PTR [ebp-0x14],eax
  4255dc:	mov    eax,DWORD PTR [ebp+0x8]
  4255df:	mov    ecx,DWORD PTR [ebp-0x20]
  4255e2:	xor    ecx,ebx
  4255e4:	add    ecx,esi
  4255e6:	push   ecx
  4255e7:	mov    ecx,DWORD PTR [ebp-0x48]
  4255ea:	mov    eax,DWORD PTR [eax+0x1e0]
  4255f0:	xor    ecx,ebx
  4255f2:	add    ecx,esi
  4255f4:	push   ecx
  4255f5:	mov    ecx,DWORD PTR [ebp-0x3c]
  4255f8:	xor    ecx,ebx
  4255fa:	add    ecx,esi
  4255fc:	push   ecx
  4255fd:	mov    ecx,DWORD PTR [ebp-0xc]
  425600:	xor    ecx,ebx
  425602:	add    ecx,esi
  425604:	push   ecx
  425605:	call   DWORD PTR [eax+0x14]
  425608:	mov    edi,eax
  42560a:	mov    eax,DWORD PTR [ebp+0x8]
  42560d:	mov    ecx,DWORD PTR [ebp-0x20]
  425610:	mov    eax,DWORD PTR [eax+0x1e0]
  425616:	xor    ecx,ebx
  425618:	add    ecx,esi
  42561a:	push   ecx
  42561b:	mov    ecx,DWORD PTR [ebp-0x48]
  42561e:	xor    ecx,ebx
  425620:	add    ecx,esi
  425622:	push   ecx
  425623:	mov    ecx,DWORD PTR [ebp-0xc]
  425626:	push   DWORD PTR [ebp-0x14]
  425629:	xor    ecx,ebx
  42562b:	add    ecx,esi
  42562d:	push   ecx
  42562e:	call   DWORD PTR [eax+0x14]
  425631:	mov    ecx,DWORD PTR [ebp-0xc]
  425634:	xor    ecx,ebx
  425636:	add    ecx,esi
  425638:	mov    DWORD PTR [ebp-0x20],eax
  42563b:	cmp    ecx,edi
  42563d:	je     0x4259ca
  425643:	mov    ecx,DWORD PTR [ebp-0xc]
  425646:	xor    ecx,ebx
  425648:	add    ecx,esi
  42564a:	cmp    ecx,eax
  42564c:	je     0x4259ca
  425652:	mov    DWORD PTR [ebp-0x3c],0xf89c85bc
  425659:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  425660:	mov    ecx,DWORD PTR [ebp-0x3c]
  425663:	xor    cl,0xac
  425666:	sub    cl,0xd
  425669:	mov    BYTE PTR [edi],cl
  42566b:	mov    ecx,DWORD PTR [ebp-0xc]
  42566e:	xor    cl,0xac
  425671:	sub    cl,0xd
  425674:	mov    BYTE PTR [edi+0x1],cl
  425677:	mov    ecx,DWORD PTR [ebp-0x54]
  42567a:	xor    cl,0xac
  42567d:	sub    cl,0xd
  425680:	mov    BYTE PTR [edi+0x2],cl
  425683:	and    DWORD PTR [ebp-0xc8],0x0
  42568a:	and    DWORD PTR [ebp-0xdc],0x0
  425691:	lea    ecx,[ebp-0xdc]
  425697:	push   ecx
  425698:	push   DWORD PTR [ebp-0x14]
  42569b:	push   eax
  42569c:	lea    eax,[ebp-0xc8]
  4256a2:	push   eax
  4256a3:	mov    eax,DWORD PTR [ebp-0x30]
  4256a6:	push   DWORD PTR [eax+0xc]
  4256a9:	mov    eax,DWORD PTR [ebp-0x24]
  4256ac:	add    eax,0x10
  4256af:	push   eax
  4256b0:	push   edi
  4256b1:	call   0x424957
  4256b6:	mov    DWORD PTR [ebp-0x3c],eax
  4256b9:	mov    eax,DWORD PTR [ebp+0x8]
  4256bc:	mov    ecx,DWORD PTR [ebp-0x50]
  4256bf:	mov    eax,DWORD PTR [eax+0x1e0]
  4256c5:	xor    ecx,ebx
  4256c7:	add    ecx,esi
  4256c9:	push   ecx
  4256ca:	mov    ecx,DWORD PTR [ebp-0xc]
  4256cd:	xor    ecx,ebx
  4256cf:	add    ecx,esi
  4256d1:	push   ecx
  4256d2:	push   edi
  4256d3:	call   DWORD PTR [eax+0x18]
  4256d6:	mov    eax,DWORD PTR [ebp-0x3c]
  4256d9:	add    eax,0xffcd8d0d
  4256de:	xor    eax,ebx
  4256e0:	cmp    eax,0xf89c85a1
  4256e5:	mov    eax,DWORD PTR [ebp+0x8]
  4256e8:	mov    eax,DWORD PTR [eax+0x1e0]
  4256ee:	mov    ecx,DWORD PTR [ebp-0x50]
  4256f1:	jne    0x425714
  4256f3:	xor    ecx,ebx
  4256f5:	add    ecx,esi
  4256f7:	push   ecx
  4256f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4256fb:	xor    ecx,ebx
  4256fd:	add    ecx,esi
  4256ff:	push   ecx
  425700:	push   DWORD PTR [ebp-0x24]
  425703:	call   DWORD PTR [eax+0x18]
  425706:	mov    eax,DWORD PTR [ebp-0x20]
  425709:	mov    DWORD PTR [ebp-0x24],eax
  42570c:	mov    eax,DWORD PTR [ebp-0x14]
  42570f:	mov    DWORD PTR [ebp-0x40],eax
  425712:	jmp    0x425727
  425714:	xor    ecx,ebx
  425716:	add    ecx,esi
  425718:	push   ecx
  425719:	mov    ecx,DWORD PTR [ebp-0xc]
  42571c:	xor    ecx,ebx
  42571e:	add    ecx,esi
  425720:	push   ecx
  425721:	push   DWORD PTR [ebp-0x20]
  425724:	call   DWORD PTR [eax+0x18]
  425727:	mov    eax,DWORD PTR [ebp-0x40]
  42572a:	mov    DWORD PTR [ebp-0x38],eax
  42572d:	mov    eax,DWORD PTR [ebp-0x24]
  425730:	mov    DWORD PTR [ebp-0x28],0xf89c85a1
  425737:	mov    DWORD PTR [ebp-0x3c],eax
  42573a:	mov    edi,0xf89c85a2
  42573f:	mov    DWORD PTR [ebp-0x2c],edi
  425742:	mov    eax,DWORD PTR [ebp-0x28]
  425745:	xor    eax,ebx
  425747:	add    eax,esi
  425749:	mov    DWORD PTR [ebp-0xc],eax
  42574c:	mov    eax,DWORD PTR [ebp-0x28]
  42574f:	xor    eax,ebx
  425751:	add    eax,esi
  425753:	mov    DWORD PTR [ebp-0x14],eax
  425756:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  42575d:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  425764:	mov    eax,DWORD PTR [ebp-0x28]
  425767:	mov    ecx,DWORD PTR [ebp-0x38]
  42576a:	xor    eax,ebx
  42576c:	add    eax,esi
  42576e:	cmp    ecx,eax
  425770:	je     0x425966
  425776:	jmp    0x425942
  42577b:	mov    ecx,DWORD PTR [ebp-0xc]
  42577e:	mov    eax,DWORD PTR [ebp-0x38]
  425781:	sub    eax,ecx
  425783:	mov    ecx,DWORD PTR [ebp-0x48]
  425786:	xor    ecx,ebx
  425788:	add    ecx,esi
  42578a:	xor    edx,edx
  42578c:	div    ecx
  42578e:	mov    DWORD PTR [ebp-0x14],eax
  425791:	mov    eax,DWORD PTR [ebp-0x20]
  425794:	mov    ecx,DWORD PTR [ebp-0x14]
  425797:	xor    eax,ebx
  425799:	add    eax,esi
  42579b:	cmp    ecx,eax
  42579d:	jbe    0x4257a9
  42579f:	mov    eax,DWORD PTR [ebp-0x20]
  4257a2:	xor    eax,ebx
  4257a4:	add    eax,esi
  4257a6:	mov    DWORD PTR [ebp-0x14],eax
  4257a9:	mov    eax,DWORD PTR [ebp-0x48]
  4257ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4257af:	xor    eax,ebx
  4257b1:	add    eax,esi
  4257b3:	imul   eax,ecx
  4257b6:	mov    DWORD PTR [ebp-0x14],eax
  4257b9:	mov    eax,DWORD PTR [ebp-0x28]
  4257bc:	mov    ecx,DWORD PTR [ebp-0x14]
  4257bf:	xor    eax,ebx
  4257c1:	add    eax,esi
  4257c3:	cmp    ecx,eax
  4257c5:	je     0x425930
  4257cb:	mov    eax,DWORD PTR [ebp-0x14]
  4257ce:	mov    DWORD PTR [ebp-0x34],eax
  4257d1:	mov    eax,DWORD PTR [ebp-0xc]
  4257d4:	add    eax,DWORD PTR [ebp-0x3c]
  4257d7:	mov    DWORD PTR [ebp-0x4c],0xf89c85a1
  4257de:	mov    DWORD PTR [ebp-0x14],edi
  4257e1:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  4257e8:	mov    DWORD PTR [ebp-0x1c],eax
  4257eb:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  4257f2:	mov    DWORD PTR [ebp-0x8],edi
  4257f5:	mov    eax,DWORD PTR [ebp-0x4c]
  4257f8:	xor    eax,ebx
  4257fa:	add    eax,esi
  4257fc:	jmp    0x4258ef
  425801:	mov    DWORD PTR [ebp-0xe4],0xf89c85b4
  42580b:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  425815:	mov    eax,DWORD PTR [ebp-0x8]
  425818:	mov    ecx,DWORD PTR [ebp-0x18]
  42581b:	xor    eax,ebx
  42581d:	add    eax,esi
  42581f:	imul   eax,ecx
  425822:	mov    ecx,DWORD PTR [ebp-0x1c]
  425825:	mov    al,BYTE PTR [eax+ecx*1]
  425828:	mov    BYTE PTR [ebp-0x1],al
  42582b:	mov    eax,DWORD PTR [ebp-0x8]
  42582e:	mov    ecx,DWORD PTR [ebp-0x18]
  425831:	xor    eax,ebx
  425833:	add    eax,esi
  425835:	imul   eax,ecx
  425838:	mov    ecx,DWORD PTR [ebp-0x54]
  42583b:	xor    ecx,ebx
  42583d:	add    eax,ecx
  42583f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425842:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  42584a:	mov    ecx,DWORD PTR [ebp-0xe4]
  425850:	xor    ecx,ebx
  425852:	lea    eax,[ecx+eax*1+0x3272f3]
  425859:	movzx  ecx,BYTE PTR [ebp-0x1]
  42585d:	xor    ecx,eax
  42585f:	mov    BYTE PTR [ebp-0x1],cl
  425862:	mov    al,BYTE PTR [ebp-0x1]
  425865:	mov    ecx,DWORD PTR [ebp-0x8]
  425868:	mov    edx,DWORD PTR [ebp-0x18]
  42586b:	xor    ecx,ebx
  42586d:	add    ecx,esi
  42586f:	imul   ecx,edx
  425872:	mov    edx,DWORD PTR [ebp-0x1c]
  425875:	mov    BYTE PTR [ecx+edx*1],al
  425878:	mov    eax,DWORD PTR [ebp-0x8]
  42587b:	mov    ecx,DWORD PTR [ebp-0x18]
  42587e:	xor    eax,ebx
  425880:	add    eax,esi
  425882:	imul   eax,ecx
  425885:	mov    ecx,DWORD PTR [ebp-0x1c]
  425888:	mov    al,BYTE PTR [eax+ecx*1]
  42588b:	mov    BYTE PTR [ebp-0x1],al
  42588e:	mov    eax,DWORD PTR [ebp-0x8]
  425891:	mov    ecx,DWORD PTR [ebp-0x18]
  425894:	xor    eax,ebx
  425896:	add    eax,esi
  425898:	imul   eax,ecx
  42589b:	mov    ecx,DWORD PTR [ebp-0x14]
  42589e:	xor    ecx,ebx
  4258a0:	add    eax,ecx
  4258a2:	mov    ecx,DWORD PTR [ebp-0x1c]
  4258a5:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4258ad:	mov    ecx,DWORD PTR [ebp-0xd0]
  4258b3:	xor    ecx,ebx
  4258b5:	lea    eax,[ecx+eax*1+0x3272f3]
  4258bc:	movzx  ecx,BYTE PTR [ebp-0x1]
  4258c0:	xor    ecx,eax
  4258c2:	mov    BYTE PTR [ebp-0x1],cl
  4258c5:	mov    al,BYTE PTR [ebp-0x1]
  4258c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4258cb:	mov    edx,DWORD PTR [ebp-0x18]
  4258ce:	xor    ecx,ebx
  4258d0:	add    ecx,esi
  4258d2:	imul   ecx,edx
  4258d5:	mov    edx,DWORD PTR [ebp-0x1c]
  4258d8:	mov    BYTE PTR [ecx+edx*1],al
  4258db:	mov    eax,DWORD PTR [ebp-0x30]
  4258de:	mov    ecx,DWORD PTR [ebp-0x14]
  4258e1:	xor    eax,ebx
  4258e3:	xor    ecx,ebx
  4258e5:	add    eax,esi
  4258e7:	add    ecx,esi
  4258e9:	imul   eax,ecx
  4258ec:	add    eax,DWORD PTR [ebp-0x18]
  4258ef:	mov    DWORD PTR [ebp-0x18],eax
  4258f2:	mov    eax,DWORD PTR [ebp-0x18]
  4258f5:	mov    ecx,DWORD PTR [ebp-0x34]
  4258f8:	cmp    ecx,eax
  4258fa:	jb     0x425801
  425900:	mov    eax,DWORD PTR [ebp-0x14]
  425903:	mov    ecx,DWORD PTR [ebp-0x34]
  425906:	xor    eax,ebx
  425908:	add    eax,esi
  42590a:	imul   eax,ecx
  42590d:	mov    ecx,DWORD PTR [ebp-0x4c]
  425910:	xor    ecx,ebx
  425912:	add    ecx,esi
  425914:	or     eax,ecx
  425916:	mov    ecx,DWORD PTR [ebp-0x2c]
  425919:	xor    ecx,ebx
  42591b:	add    eax,ecx
  42591d:	mov    ecx,DWORD PTR [ebp-0x2c]
  425920:	xor    ecx,ebx
  425922:	add    eax,ecx
  425924:	mov    ecx,DWORD PTR [ebp-0xc]
  425927:	lea    eax,[eax+ecx*1+0x64e5e6]
  42592e:	jmp    0x42593f
  425930:	mov    eax,DWORD PTR [ebp-0x2c]
  425933:	mov    ecx,DWORD PTR [ebp-0xc]
  425936:	xor    eax,ebx
  425938:	lea    eax,[eax+ecx*1+0x3272f3]
  42593f:	mov    DWORD PTR [ebp-0xc],eax
  425942:	mov    eax,DWORD PTR [ebp-0x2c]
  425945:	xor    eax,ebx
  425947:	mov    ecx,0xffcd8d0d
  42594c:	sub    ecx,eax
  42594e:	add    ecx,DWORD PTR [ebp-0x38]
  425951:	mov    eax,DWORD PTR [ebp-0x2c]
  425954:	mov    edx,DWORD PTR [ebp-0xc]
  425957:	xor    eax,ebx
  425959:	add    eax,esi
  42595b:	imul   eax,edx
  42595e:	cmp    eax,ecx
  425960:	jbe    0x42577b
  425966:	push   DWORD PTR [ebp+0x8]
  425969:	mov    eax,DWORD PTR [ebp+0x8]
  42596c:	push   DWORD PTR [eax+0x1cc]
  425972:	lea    eax,[ebp-0xd8]
  425978:	push   eax
  425979:	mov    eax,DWORD PTR [ebp+0x8]
  42597c:	mov    eax,DWORD PTR [eax+0x1c4]
  425982:	push   DWORD PTR [eax]
  425984:	mov    eax,DWORD PTR [ebp+0x8]
  425987:	mov    eax,DWORD PTR [eax+0x1c0]
  42598d:	push   DWORD PTR [eax]
  42598f:	push   DWORD PTR [ebp-0x40]
  425992:	push   DWORD PTR [ebp-0x24]
  425995:	call   0x42642c
  42599a:	mov    DWORD PTR [ebp-0x3c],eax
  42599d:	mov    eax,DWORD PTR [ebp-0x10]
  4259a0:	mov    ecx,DWORD PTR [ebp-0x24]
  4259a3:	xor    eax,ebx
  4259a5:	add    eax,esi
  4259a7:	cmp    eax,ecx
  4259a9:	je     0x4259ca
  4259ab:	mov    eax,DWORD PTR [ebp+0x8]
  4259ae:	mov    ecx,DWORD PTR [ebp-0x50]
  4259b1:	mov    eax,DWORD PTR [eax+0x1e0]
  4259b7:	xor    ecx,ebx
  4259b9:	add    ecx,esi
  4259bb:	push   ecx
  4259bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4259bf:	xor    ecx,ebx
  4259c1:	add    ecx,esi
  4259c3:	push   ecx
  4259c4:	push   DWORD PTR [ebp-0x24]
  4259c7:	call   DWORD PTR [eax+0x18]
  4259ca:	pop    edi
  4259cb:	pop    esi
  4259cc:	pop    ebx
  4259cd:	leave  
  4259ce:	ret    0x4
  4259d1:	push   ebp
  4259d2:	mov    ebp,esp
  4259d4:	push   ecx
  4259d5:	push   ecx
  4259d6:	lea    eax,[ebp-0x8]
  4259d9:	mov    DWORD PTR [ebp-0x4],eax
  4259dc:	push   esi
  4259dd:	mov    esi,DWORD PTR [ebp-0x4]
  4259e0:	mov    eax,0xf881ba2f
  4259e5:	mov    DWORD PTR [esi],eax
  4259e7:	mov    esi,DWORD PTR [ebp-0x8]
  4259ea:	cmp    esi,eax
  4259ec:	pop    esi
  4259ed:	jne    0x4259f7
  4259ef:	mov    BYTE PTR [ecx+0xa],0x83
  4259f3:	mov    BYTE PTR [edx+0x8],0x2c
  4259f7:	mov    BYTE PTR [edx+0xa],0x83
  4259fb:	mov    BYTE PTR [ecx+0x2],0x11
  4259ff:	leave  
  425a00:	ret    
  425a01:	push   ebp
  425a02:	mov    ebp,esp
  425a04:	push   ecx
  425a05:	push   ecx
  425a06:	lea    eax,[ebp-0x8]
  425a09:	mov    DWORD PTR [ebp-0x4],eax
  425a0c:	mov    edx,DWORD PTR [ebp-0x4]
  425a0f:	mov    eax,0xf88b0bcb
  425a14:	mov    DWORD PTR [edx],eax
  425a16:	mov    edx,DWORD PTR [ebp-0x8]
  425a19:	cmp    edx,eax
  425a1b:	jne    0x425a2c
  425a1d:	mov    eax,DWORD PTR [ebp+0x8]
  425a20:	mov    BYTE PTR [ecx+0x9],0xf
  425a24:	mov    BYTE PTR [eax+0x7],0x54
  425a28:	mov    BYTE PTR [ecx+0x6],0xc
  425a2c:	mov    BYTE PTR [ecx+0x3],0x1f
  425a30:	leave  
  425a31:	ret    0x4
  425a34:	push   ebp
  425a35:	mov    ebp,esp
  425a37:	push   ecx
  425a38:	push   ecx
  425a39:	lea    eax,[ebp-0x8]
  425a3c:	mov    DWORD PTR [ebp-0x4],eax
  425a3f:	mov    edx,DWORD PTR [ebp-0x4]
  425a42:	mov    eax,0x7e0da2f
  425a47:	mov    DWORD PTR [edx],eax
  425a49:	mov    edx,DWORD PTR [ebp-0x8]
  425a4c:	cmp    edx,eax
  425a4e:	jne    0x425a54
  425a50:	mov    BYTE PTR [ecx+0x7],0x54
  425a54:	mov    eax,DWORD PTR [ebp+0x8]
  425a57:	mov    BYTE PTR [ecx+0x1],0x1a
  425a5b:	mov    BYTE PTR [eax+0x9],0x2f
  425a5f:	leave  
  425a60:	ret    0x4
  425a63:	push   ebp
  425a64:	mov    ebp,esp
  425a66:	push   ecx
  425a67:	push   ecx
  425a68:	lea    eax,[ebp-0x8]
  425a6b:	mov    DWORD PTR [ebp-0x4],eax
  425a6e:	push   esi
  425a6f:	mov    esi,DWORD PTR [ebp-0x4]
  425a72:	mov    eax,0x7060e38
  425a77:	mov    DWORD PTR [esi],eax
  425a79:	mov    esi,DWORD PTR [ebp-0x8]
  425a7c:	cmp    esi,eax
  425a7e:	pop    esi
  425a7f:	jne    0x425a8b
  425a81:	mov    BYTE PTR [edx+0x4],0x10
  425a85:	mov    WORD PTR [ecx+0x3],0x101f
  425a8b:	mov    BYTE PTR [edx],0x3c
  425a8e:	leave  
  425a8f:	ret    
  425a90:	push   ebp
  425a91:	mov    ebp,esp
  425a93:	push   ecx
  425a94:	push   ecx
  425a95:	lea    eax,[ebp-0x8]
  425a98:	mov    DWORD PTR [ebp-0x4],eax
  425a9b:	mov    edx,DWORD PTR [ebp-0x4]
  425a9e:	mov    eax,0xf8870b3f
  425aa3:	mov    DWORD PTR [edx],eax
  425aa5:	mov    edx,DWORD PTR [ebp-0x8]
  425aa8:	cmp    edx,eax
  425aaa:	jne    0x425ab7
  425aac:	mov    eax,DWORD PTR [ebp+0x8]
  425aaf:	mov    BYTE PTR [ecx+0x8],0xc
  425ab3:	mov    BYTE PTR [eax+0x1],0x1a
  425ab7:	mov    BYTE PTR [ecx+0x5],0x8
  425abb:	leave  
  425abc:	ret    0x4
  425abf:	push   esi
  425ac0:	mov    ecx,edi
  425ac2:	call   0x425a90
  425ac7:	mov    edx,edi
  425ac9:	mov    ecx,esi
  425acb:	mov    BYTE PTR [esi],0x1c
  425ace:	call   0x425a63
  425ad3:	push   esi
  425ad4:	mov    ecx,edi
  425ad6:	mov    BYTE PTR [esi+0x5],0x8
  425ada:	call   0x425a34
  425adf:	push   esi
  425ae0:	mov    BYTE PTR [esi+0x6],0xc
  425ae4:	call   0x425a01
  425ae9:	mov    BYTE PTR [esi+0x2],0x11
  425aed:	mov    edx,esi
  425aef:	jmp    0x4259d1
  425af4:	push   ebp
  425af5:	mov    ebp,esp
  425af7:	push   ecx
  425af8:	mov    ecx,DWORD PTR [edx+0x194]
  425afe:	push   esi
  425aff:	mov    esi,DWORD PTR [ebp+0x8]
  425b02:	mov    esi,DWORD PTR [esi]
  425b04:	mov    DWORD PTR [ecx],esi
  425b06:	mov    ecx,DWORD PTR [edx+0x194]
  425b0c:	mov    ecx,DWORD PTR [ecx]
  425b0e:	mov    esi,DWORD PTR [edx+0x190]
  425b14:	mov    DWORD PTR [esi],ecx
  425b16:	mov    eax,DWORD PTR [edx+0x194]
  425b1c:	mov    ecx,DWORD PTR [eax]
  425b1e:	mov    ecx,DWORD PTR [ecx+0x3c]
  425b21:	add    ecx,DWORD PTR [eax]
  425b23:	mov    DWORD PTR [ebp-0x4],0xf89ca5a1
  425b2a:	mov    eax,DWORD PTR [ebp-0x4]
  425b2d:	movzx  ecx,WORD PTR [ecx+0x16]
  425b31:	xor    eax,0x75108ac
  425b36:	add    eax,0x3272f3
  425b3b:	pop    esi
  425b3c:	test   ecx,eax
  425b3e:	je     0x425b4c
  425b40:	mov    eax,DWORD PTR [edx+0x1c8]
  425b46:	mov    DWORD PTR [eax],0xf89c85a2
  425b4c:	leave  
  425b4d:	ret    0x4
  425b50:	push   ebp
  425b51:	mov    ebp,esp
  425b53:	sub    esp,0x70
  425b56:	and    DWORD PTR [ebp-0x20],0x0
  425b5a:	mov    DWORD PTR [ebp-0x18],0xf89cb5a1
  425b61:	mov    DWORD PTR [ebp-0x1c],0xf89c85e1
  425b68:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  425b6f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  425b76:	mov    DWORD PTR [ebp-0x2c],0xf89f05a1
  425b7d:	mov    eax,DWORD PTR [ebp+0x20]
  425b80:	mov    eax,DWORD PTR [eax+0x194]
  425b86:	mov    DWORD PTR [ebp-0xc],eax
  425b89:	mov    eax,DWORD PTR [ebp+0x20]
  425b8c:	push   ebx
  425b8d:	push   esi
  425b8e:	mov    esi,DWORD PTR [eax+0x190]
  425b94:	mov    eax,DWORD PTR [ebp+0x20]
  425b97:	mov    eax,DWORD PTR [eax+0x18c]
  425b9d:	mov    DWORD PTR [ebp-0x8],eax
  425ba0:	mov    eax,DWORD PTR [eax]
  425ba2:	push   edi
  425ba3:	mov    DWORD PTR [ebp-0x4],esi
  425ba6:	test   eax,eax
  425ba8:	jne    0x425bb5
  425baa:	push   DWORD PTR [ebp+0x1c]
  425bad:	mov    edx,DWORD PTR [ebp+0x20]
  425bb0:	call   0x425af4
  425bb5:	mov    eax,DWORD PTR [esi]
  425bb7:	mov    ebx,DWORD PTR [esi]
  425bb9:	add    ebx,DWORD PTR [eax+0x3c]
  425bbc:	mov    eax,DWORD PTR [ebp+0xc]
  425bbf:	mov    ecx,DWORD PTR [ebp-0x8]
  425bc2:	mov    ecx,DWORD PTR [ecx]
  425bc4:	mov    esi,0x75108ac
  425bc9:	xor    eax,esi
  425bcb:	mov    edi,0x3272f3
  425bd0:	add    eax,edi
  425bd2:	cmp    eax,ecx
  425bd4:	jne    0x425e0c
  425bda:	mov    eax,DWORD PTR [ebp-0xc]
  425bdd:	mov    eax,DWORD PTR [eax]
  425bdf:	mov    DWORD PTR [ebp-0x10],eax
  425be2:	mov    eax,DWORD PTR [ebx+0x50]
  425be5:	mov    DWORD PTR [ebp-0x68],eax
  425be8:	mov    eax,DWORD PTR [ebp-0x18]
  425beb:	xor    eax,esi
  425bed:	add    eax,edi
  425bef:	mov    DWORD PTR [ebp-0x64],eax
  425bf2:	mov    eax,DWORD PTR [ebp-0x14]
  425bf5:	and    DWORD PTR [ebp-0x6c],0x0
  425bf9:	xor    eax,esi
  425bfb:	add    eax,edi
  425bfd:	mov    DWORD PTR [ebp-0x60],eax
  425c00:	lea    eax,[ebp-0x70]
  425c03:	push   eax
  425c04:	mov    eax,DWORD PTR [ebp+0x8]
  425c07:	xor    eax,esi
  425c09:	add    eax,edi
  425c0b:	push   eax
  425c0c:	mov    eax,DWORD PTR [ebp+0x20]
  425c0f:	add    eax,0xaa
  425c14:	push   eax
  425c15:	mov    eax,DWORD PTR [ebp+0x20]
  425c18:	mov    eax,DWORD PTR [eax+0x198]
  425c1e:	mov    DWORD PTR [ebp-0x70],0x4
  425c25:	push   DWORD PTR [eax]
  425c27:	mov    eax,DWORD PTR [ebp+0x10]
  425c2a:	call   eax
  425c2c:	mov    ecx,DWORD PTR [ebp-0xc]
  425c2f:	mov    ecx,DWORD PTR [ecx]
  425c31:	mov    edx,DWORD PTR [ebp-0x8]
  425c34:	mov    DWORD PTR [ebp-0x6c],eax
  425c37:	mov    DWORD PTR [ebp+0x1c],eax
  425c3a:	mov    DWORD PTR [edx],ecx
  425c3c:	mov    ecx,DWORD PTR [ebp-0x4]
  425c3f:	mov    DWORD PTR [ecx],eax
  425c41:	mov    eax,DWORD PTR [ebx+0x50]
  425c44:	mov    DWORD PTR [ebp-0x68],eax
  425c47:	mov    eax,DWORD PTR [ebp-0x1c]
  425c4a:	xor    eax,esi
  425c4c:	add    eax,edi
  425c4e:	mov    DWORD PTR [ebp-0x64],eax
  425c51:	lea    eax,[ebp-0x20]
  425c54:	mov    DWORD PTR [ebp-0x60],eax
  425c57:	lea    eax,[ebp-0x70]
  425c5a:	push   eax
  425c5b:	mov    eax,DWORD PTR [ebp+0x8]
  425c5e:	xor    eax,esi
  425c60:	add    eax,edi
  425c62:	push   eax
  425c63:	mov    eax,DWORD PTR [ebp+0x20]
  425c66:	add    eax,0xee
  425c6b:	push   eax
  425c6c:	mov    eax,DWORD PTR [ebp+0x20]
  425c6f:	mov    eax,DWORD PTR [eax+0x198]
  425c75:	mov    DWORD PTR [ebp-0x70],0x4
  425c7c:	push   DWORD PTR [eax]
  425c7e:	mov    eax,DWORD PTR [ebp+0x10]
  425c81:	call   eax
  425c83:	test   eax,eax
  425c85:	je     0x425caa
  425c87:	and    DWORD PTR [ebp+0xc],0x0
  425c8b:	cmp    DWORD PTR [ebx+0x50],0x0
  425c8f:	jbe    0x425caa
  425c91:	mov    eax,DWORD PTR [ebp+0x1c]
  425c94:	mov    ecx,DWORD PTR [ebp-0x10]
  425c97:	sub    ecx,eax
  425c99:	mov    dl,BYTE PTR [ecx+eax*1]
  425c9c:	inc    DWORD PTR [ebp+0xc]
  425c9f:	mov    BYTE PTR [eax],dl
  425ca1:	mov    edx,DWORD PTR [ebp+0xc]
  425ca4:	inc    eax
  425ca5:	cmp    edx,DWORD PTR [ebx+0x50]
  425ca8:	jb     0x425c99
  425caa:	mov    edx,DWORD PTR [ebp+0x1c]
  425cad:	mov    ecx,DWORD PTR [edx+0x3c]
  425cb0:	add    ecx,edx
  425cb2:	mov    eax,DWORD PTR [ecx+0xa0]
  425cb8:	mov    ebx,DWORD PTR [ecx+0x28]
  425cbb:	add    eax,edx
  425cbd:	sub    edx,DWORD PTR [ebp-0x10]
  425cc0:	add    ebx,DWORD PTR [ebp+0x1c]
  425cc3:	mov    DWORD PTR [ebp+0xc],edx
  425cc6:	mov    DWORD PTR [ebp-0x2c],ecx
  425cc9:	mov    DWORD PTR [ebp-0x14],ebx
  425ccc:	mov    DWORD PTR [ebp-0x8],0x0
  425cd3:	jmp    0x425d4f
  425cd5:	add    edx,0xfffffff8
  425cd8:	shr    edx,1
  425cda:	mov    DWORD PTR [ebp-0x18],edx
  425cdd:	je     0x425d3b
  425cdf:	lea    edx,[eax+0x8]
  425ce2:	mov    DWORD PTR [ebp-0x4],edx
  425ce5:	mov    edx,DWORD PTR [ebp-0x18]
  425ce8:	mov    DWORD PTR [ebp-0x18],edx
  425ceb:	mov    edx,DWORD PTR [ebp-0x4]
  425cee:	movzx  edx,WORD PTR [edx]
  425cf1:	mov    DWORD PTR [ebp-0x24],edx
  425cf4:	and    edx,0xfff
  425cfa:	mov    DWORD PTR [ebp-0x28],edx
  425cfd:	mov    edx,DWORD PTR [ebp-0x24]
  425d00:	shr    edx,0xc
  425d03:	add    edx,0xffcd8d0d
  425d09:	xor    edx,esi
  425d0b:	cmp    edx,0xf89c85bc
  425d11:	jne    0x425d32
  425d13:	mov    edx,DWORD PTR [ebp-0x28]
  425d16:	add    edx,DWORD PTR [ebp+0x1c]
  425d19:	mov    ebx,DWORD PTR [eax]
  425d1b:	cmp    DWORD PTR [ebx+edx*1],0x0
  425d1f:	je     0x425d2f
  425d21:	mov    ecx,DWORD PTR [ebp+0xc]
  425d24:	add    ecx,DWORD PTR [ebx+edx*1]
  425d27:	mov    ebx,DWORD PTR [eax]
  425d29:	mov    DWORD PTR [edx+ebx*1],ecx
  425d2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  425d2f:	mov    ebx,DWORD PTR [ebp-0x14]
  425d32:	add    DWORD PTR [ebp-0x4],0x2
  425d36:	dec    DWORD PTR [ebp-0x18]
  425d39:	jne    0x425ceb
  425d3b:	mov    edx,DWORD PTR [ebp-0xc]
  425d3e:	add    DWORD PTR [ebp-0x8],edx
  425d41:	mov    edx,DWORD PTR [ebp-0x8]
  425d44:	cmp    edx,DWORD PTR [ecx+0xa4]
  425d4a:	jae    0x425d5d
  425d4c:	add    eax,DWORD PTR [ebp-0xc]
  425d4f:	mov    edx,DWORD PTR [eax+0x4]
  425d52:	mov    DWORD PTR [ebp-0xc],edx
  425d55:	test   edx,edx
  425d57:	jne    0x425cd5
  425d5d:	mov    eax,DWORD PTR [ebp-0x10]
  425d60:	mov    DWORD PTR [ebp-0x6c],eax
  425d63:	mov    DWORD PTR [ebp-0x70],0x4
  425d6a:	mov    eax,DWORD PTR [ecx+0x50]
  425d6d:	mov    DWORD PTR [ebp-0x68],eax
  425d70:	mov    eax,DWORD PTR [ebp-0x1c]
  425d73:	xor    eax,esi
  425d75:	add    eax,edi
  425d77:	mov    DWORD PTR [ebp-0x64],eax
  425d7a:	lea    eax,[ebp-0x20]
  425d7d:	mov    DWORD PTR [ebp-0x60],eax
  425d80:	lea    eax,[ebp-0x70]
  425d83:	push   eax
  425d84:	mov    eax,DWORD PTR [ebp+0x8]
  425d87:	xor    eax,esi
  425d89:	add    eax,edi
  425d8b:	push   eax
  425d8c:	mov    eax,DWORD PTR [ebp+0x20]
  425d8f:	add    eax,0xee
  425d94:	push   eax
  425d95:	mov    eax,DWORD PTR [ebp+0x20]
  425d98:	mov    eax,DWORD PTR [eax+0x198]
  425d9e:	push   DWORD PTR [eax]
  425da0:	mov    eax,DWORD PTR [ebp+0x10]
  425da3:	call   eax
  425da5:	mov    eax,DWORD PTR [ebp+0x20]
  425da8:	mov    eax,DWORD PTR [eax+0x180]
  425dae:	add    eax,DWORD PTR [ebp+0xc]
  425db1:	mov    ecx,DWORD PTR [ebp+0xc]
  425db4:	push   DWORD PTR [ebp+0x18]
  425db7:	mov    DWORD PTR [eax],ecx
  425db9:	push   DWORD PTR [ebp+0x14]
  425dbc:	push   DWORD PTR [ebp+0x1c]
  425dbf:	call   ebx
  425dc1:	mov    ecx,DWORD PTR [ebp+0xc]
  425dc4:	add    ecx,DWORD PTR [ebp+0x20]
  425dc7:	lea    eax,[ebp+0x4]
  425dca:	mov    DWORD PTR [ebp+0x20],ecx
  425dcd:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd0:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd3:	mov    edx,DWORD PTR [ecx+0x190]
  425dd9:	mov    ecx,DWORD PTR [ebp+0x20]
  425ddc:	mov    ecx,DWORD PTR [ecx+0x18c]
  425de2:	mov    esi,DWORD PTR [ecx]
  425de4:	cmp    DWORD PTR [eax],esi
  425de6:	jb     0x425e07
  425de8:	mov    esi,DWORD PTR [edx]
  425dea:	mov    edi,DWORD PTR [edx]
  425dec:	mov    esi,DWORD PTR [esi+0x3c]
  425def:	lea    esi,[edi+esi*1+0x50]
  425df3:	mov    edi,DWORD PTR [ecx]
  425df5:	add    edi,DWORD PTR [esi]
  425df7:	cmp    DWORD PTR [eax],edi
  425df9:	jae    0x425e07
  425dfb:	mov    esi,DWORD PTR [ecx]
  425dfd:	mov    ecx,DWORD PTR [eax]
  425dff:	mov    edx,DWORD PTR [edx]
  425e01:	sub    ecx,esi
  425e03:	add    edx,ecx
  425e05:	mov    DWORD PTR [eax],edx
  425e07:	mov    eax,DWORD PTR [ebp+0xc]
  425e0a:	jmp    0x425e0e
  425e0c:	xor    eax,eax
  425e0e:	pop    edi
  425e0f:	pop    esi
  425e10:	pop    ebx
  425e11:	leave  
  425e12:	ret    0x1c
  425e15:	push   ebp
  425e16:	mov    ebp,esp
  425e18:	sub    esp,0x1c
  425e1b:	push   esi
  425e1c:	mov    esi,eax
  425e1e:	mov    eax,DWORD PTR [ecx+0x190]
  425e24:	cmp    DWORD PTR [eax],0x0
  425e27:	je     0x425f37
  425e2d:	test   edx,edx
  425e2f:	je     0x425f37
  425e35:	test   esi,esi
  425e37:	je     0x425f37
  425e3d:	mov    eax,DWORD PTR [esi+0x88]
  425e43:	test   eax,eax
  425e45:	je     0x425f32
  425e4b:	cmp    DWORD PTR [esi+0x8c],0x10
  425e52:	je     0x425f32
  425e58:	cmp    DWORD PTR [esi+0x34],edx
  425e5b:	je     0x425f32
  425e61:	mov    esi,DWORD PTR [ecx+0x18c]
  425e67:	and    DWORD PTR [ebp-0x10],0x0
  425e6b:	mov    ecx,edx
  425e6d:	sub    ecx,DWORD PTR [esi]
  425e6f:	add    eax,edx
  425e71:	movzx  edx,WORD PTR [eax+0xc]
  425e75:	mov    DWORD PTR [ebp-0x1c],ecx
  425e78:	movzx  ecx,WORD PTR [eax+0xe]
  425e7c:	add    ecx,edx
  425e7e:	je     0x425f32
  425e84:	lea    ecx,[eax+0x14]
  425e87:	push   ebx
  425e88:	mov    DWORD PTR [ebp-0x18],ecx
  425e8b:	mov    esi,0x7fffffff
  425e90:	push   edi
  425e91:	test   DWORD PTR [ecx],esi
  425e93:	je     0x425f14
  425e95:	mov    edx,DWORD PTR [ecx]
  425e97:	and    DWORD PTR [ebp-0xc],0x0
  425e9b:	and    edx,esi
  425e9d:	add    edx,eax
  425e9f:	movzx  edi,WORD PTR [edx+0xe]
  425ea3:	movzx  ebx,WORD PTR [edx+0xc]
  425ea7:	add    edi,ebx
  425ea9:	je     0x425f14
  425eab:	lea    ecx,[edx+0x14]
  425eae:	mov    DWORD PTR [ebp-0x14],ecx
  425eb1:	test   DWORD PTR [ecx],esi
  425eb3:	je     0x425ef6
  425eb5:	mov    ecx,DWORD PTR [ecx]
  425eb7:	and    DWORD PTR [ebp-0x8],0x0
  425ebb:	and    ecx,esi
  425ebd:	add    ecx,eax
  425ebf:	movzx  edi,WORD PTR [ecx+0xe]
  425ec3:	movzx  ebx,WORD PTR [ecx+0xc]
  425ec7:	add    edi,ebx
  425ec9:	je     0x425ef6
  425ecb:	lea    edi,[ecx+0x14]
  425ece:	mov    DWORD PTR [ebp-0x4],edi
  425ed1:	mov    edi,DWORD PTR [ebp-0x4]
  425ed4:	mov    edi,DWORD PTR [edi]
  425ed6:	test   edi,edi
  425ed8:	je     0x425ee0
  425eda:	mov    ebx,DWORD PTR [ebp-0x1c]
  425edd:	add    DWORD PTR [edi+eax*1],ebx
  425ee0:	movzx  edi,WORD PTR [ecx+0xe]
  425ee4:	movzx  ebx,WORD PTR [ecx+0xc]
  425ee8:	inc    DWORD PTR [ebp-0x8]
  425eeb:	add    DWORD PTR [ebp-0x4],0x8
  425eef:	add    edi,ebx
  425ef1:	cmp    DWORD PTR [ebp-0x8],edi
  425ef4:	jb     0x425ed1
  425ef6:	movzx  edi,WORD PTR [edx+0xe]
  425efa:	movzx  ebx,WORD PTR [edx+0xc]
  425efe:	mov    ecx,DWORD PTR [ebp-0x14]
  425f01:	inc    DWORD PTR [ebp-0xc]
  425f04:	add    ecx,0x8
  425f07:	add    edi,ebx
  425f09:	mov    DWORD PTR [ebp-0x14],ecx
  425f0c:	cmp    DWORD PTR [ebp-0xc],edi
  425f0f:	jb     0x425eb1
  425f11:	mov    ecx,DWORD PTR [ebp-0x18]
  425f14:	movzx  edx,WORD PTR [eax+0xe]
  425f18:	movzx  edi,WORD PTR [eax+0xc]
  425f1c:	inc    DWORD PTR [ebp-0x10]
  425f1f:	add    ecx,0x8
  425f22:	add    edx,edi
  425f24:	mov    DWORD PTR [ebp-0x18],ecx
  425f27:	cmp    DWORD PTR [ebp-0x10],edx
  425f2a:	jb     0x425e91
  425f30:	pop    edi
  425f31:	pop    ebx
  425f32:	xor    eax,eax
  425f34:	inc    eax
  425f35:	jmp    0x425f39
  425f37:	xor    eax,eax
  425f39:	pop    esi
  425f3a:	leave  
  425f3b:	ret    
  425f3c:	push   ebp
  425f3d:	mov    ebp,esp
  425f3f:	mov    ecx,DWORD PTR [ecx+0x190]
  425f45:	mov    eax,DWORD PTR [ebp+0xc]
  425f48:	sub    esp,0x10
  425f4b:	push   ebx
  425f4c:	xor    ebx,ebx
  425f4e:	push   esi
  425f4f:	push   edi
  425f50:	cmp    DWORD PTR [ecx],ebx
  425f52:	je     0x425fda
  425f58:	cmp    eax,ebx
  425f5a:	je     0x425fda
  425f5c:	cmp    DWORD PTR [eax+0x78],ebx
  425f5f:	jne    0x425f66
  425f61:	xor    eax,eax
  425f63:	inc    eax
  425f64:	jmp    0x425fdc
  425f66:	mov    eax,DWORD PTR [eax+0x78]
  425f69:	add    eax,DWORD PTR [ebp+0x8]
  425f6c:	mov    ecx,DWORD PTR [eax+0x1c]
  425f6f:	mov    edx,DWORD PTR [eax+0x24]
  425f72:	mov    esi,DWORD PTR [eax+0x14]
  425f75:	mov    edi,DWORD PTR [eax+0x18]
  425f78:	add    ecx,DWORD PTR [ebp+0x8]
  425f7b:	add    edx,DWORD PTR [ebp+0x8]
  425f7e:	mov    DWORD PTR [ebp-0x4],esi
  425f81:	cmp    esi,edi
  425f83:	ja     0x425f88
  425f85:	mov    DWORD PTR [ebp-0x4],edi
  425f88:	mov    DWORD PTR [ebp-0x8],ebx
  425f8b:	cmp    DWORD PTR [ebp-0x4],ebx
  425f8e:	jbe    0x425f61
  425f90:	cmp    ebx,DWORD PTR [eax+0x14]
  425f93:	jae    0x425f9b
  425f95:	movzx  esi,WORD PTR [edx+ebx*2]
  425f99:	jmp    0x425f9d
  425f9b:	mov    esi,ebx
  425f9d:	lea    esi,[ecx+esi*4]
  425fa0:	mov    edi,DWORD PTR [esi]
  425fa2:	test   edi,edi
  425fa4:	je     0x425fcf
  425fa6:	add    edi,DWORD PTR [ebp+0x8]
  425fa9:	mov    DWORD PTR [ebp-0x10],edi
  425fac:	cmp    edi,eax
  425fae:	jbe    0x425fc0
  425fb0:	mov    ebx,DWORD PTR [ebp+0xc]
  425fb3:	mov    ebx,DWORD PTR [ebx+0x7c]
  425fb6:	add    ebx,eax
  425fb8:	cmp    edi,ebx
  425fba:	jae    0x425fc0
  425fbc:	mov    esi,DWORD PTR [esi]
  425fbe:	jmp    0x425fc8
  425fc0:	sub    edi,DWORD PTR [ebp+0x8]
  425fc3:	mov    DWORD PTR [esi],edi
  425fc5:	mov    esi,DWORD PTR [ebp-0x10]
  425fc8:	test   esi,esi
  425fca:	je     0x425fda
  425fcc:	mov    ebx,DWORD PTR [ebp-0x8]
  425fcf:	inc    ebx
  425fd0:	mov    DWORD PTR [ebp-0x8],ebx
  425fd3:	cmp    ebx,DWORD PTR [ebp-0x4]
  425fd6:	jb     0x425f90
  425fd8:	jmp    0x425f61
  425fda:	xor    eax,eax
  425fdc:	pop    edi
  425fdd:	pop    esi
  425fde:	pop    ebx
  425fdf:	leave  
  425fe0:	ret    0x8
  425fe3:	push   ebp
  425fe4:	mov    ebp,esp
  425fe6:	sub    esp,0x2c
  425fe9:	mov    edx,0xf89c85a1
  425fee:	mov    DWORD PTR [ebp-0x4],edx
  425ff1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  425ff8:	mov    eax,DWORD PTR [ebp-0x4]
  425ffb:	mov    ecx,DWORD PTR [ebp-0x4]
  425ffe:	mov    ecx,DWORD PTR [ebp-0x4]
  426001:	mov    ecx,DWORD PTR [ebp-0x4]
  426004:	mov    ecx,DWORD PTR [ebp-0x4]
  426007:	mov    ecx,DWORD PTR [ebp-0x4]
  42600a:	push   ebx
  42600b:	mov    ebx,DWORD PTR [ebp+0x10]
  42600e:	push   esi
  42600f:	mov    esi,0x75108ac
  426014:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  42601b:	mov    ecx,DWORD PTR [ebp-0x4]
  42601e:	mov    ebx,DWORD PTR [ebx+0x190]
  426024:	push   edi
  426025:	mov    edi,0x3272f3
  42602a:	xor    ecx,esi
  42602c:	xor    eax,esi
  42602e:	add    eax,edi
  426030:	add    ecx,edi
  426032:	mov    DWORD PTR [ebp-0x18],eax
  426035:	cmp    ecx,DWORD PTR [ebx]
  426037:	je     0x4262b8
  42603d:	mov    ebx,DWORD PTR [ebp-0x4]
  426040:	mov    ecx,DWORD PTR [ebp+0xc]
  426043:	xor    ebx,esi
  426045:	add    ebx,edi
  426047:	cmp    ebx,ecx
  426049:	je     0x4262b8
  42604f:	mov    ebx,DWORD PTR [ebp-0x4]
  426052:	mov    ecx,DWORD PTR [ecx+0x80]
  426058:	xor    ebx,esi
  42605a:	add    ebx,edi
  42605c:	cmp    ecx,ebx
  42605e:	je     0x4262b3
  426064:	add    ecx,DWORD PTR [ebp+0x8]
  426067:	mov    DWORD PTR [ebp-0x2c],ecx
  42606a:	mov    ebx,edx
  42606c:	xor    ebx,esi
  42606e:	add    ebx,edi
  426070:	mov    DWORD PTR [ebp-0x10],ebx
  426073:	mov    ebx,DWORD PTR [ebp-0x10]
  426076:	cmp    ebx,edx
  426078:	je     0x42608c
  42607a:	mov    edx,DWORD PTR [ebp-0x10]
  42607d:	mov    ebx,DWORD PTR [ebp-0x4]
  426080:	imul   edx,edx,0x14
  426083:	xor    ebx,esi
  426085:	add    ebx,edi
  426087:	cmp    DWORD PTR [edx+ecx*1],ebx
  42608a:	jne    0x4260a3
  42608c:	mov    edx,DWORD PTR [ebp-0x10]
  42608f:	mov    ebx,DWORD PTR [ebp-0x4]
  426092:	imul   edx,edx,0x14
  426095:	xor    ebx,esi
  426097:	add    ebx,edi
  426099:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  42609d:	je     0x4262a5
  4260a3:	mov    eax,DWORD PTR [ebp-0x4]
  4260a6:	mov    ebx,DWORD PTR [ebp-0x4]
  4260a9:	mov    eax,DWORD PTR [ebp-0x10]
  4260ac:	imul   eax,eax,0x14
  4260af:	add    eax,ecx
  4260b1:	mov    ecx,DWORD PTR [eax+0x10]
  4260b4:	add    ecx,DWORD PTR [ebp+0x8]
  4260b7:	xor    ebx,esi
  4260b9:	mov    DWORD PTR [ebp-0x1c],ecx
  4260bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4260bf:	mov    edx,DWORD PTR [ebp-0x4]
  4260c2:	xor    ecx,esi
  4260c4:	add    ecx,edi
  4260c6:	xor    edx,esi
  4260c8:	mov    DWORD PTR [ebp-0x24],ecx
  4260cb:	mov    ecx,DWORD PTR [eax]
  4260cd:	add    edx,edi
  4260cf:	add    ebx,edi
  4260d1:	cmp    ecx,edx
  4260d3:	je     0x4260db
  4260d5:	add    ecx,DWORD PTR [ebp+0x8]
  4260d8:	mov    DWORD PTR [ebp-0x24],ecx
  4260db:	mov    ecx,DWORD PTR [ebp-0x4]
  4260de:	xor    ecx,esi
  4260e0:	add    ecx,DWORD PTR [eax+0xc]
  4260e3:	mov    eax,DWORD PTR [ebp+0x8]
  4260e6:	lea    eax,[ecx+eax*1+0x3272f3]
  4260ed:	mov    DWORD PTR [ebp+0xc],eax
  4260f0:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4260f7:	mov    eax,DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	mov    eax,DWORD PTR [eax+0x1e0]
  426103:	call   DWORD PTR [eax]
  426105:	mov    ecx,DWORD PTR [ebp-0x4]
  426108:	xor    ecx,esi
  42610a:	add    ecx,edi
  42610c:	mov    DWORD PTR [ebp-0xc],eax
  42610f:	cmp    ecx,eax
  426111:	jne    0x426125
  426113:	mov    eax,DWORD PTR [ebp+0x10]
  426116:	push   DWORD PTR [ebp+0xc]
  426119:	mov    eax,DWORD PTR [eax+0x1e0]
  42611f:	call   DWORD PTR [eax+0xc]
  426122:	mov    DWORD PTR [ebp-0xc],eax
  426125:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  42612c:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  426133:	mov    eax,DWORD PTR [ebp-0x4]
  426136:	xor    eax,esi
  426138:	add    eax,edi
  42613a:	cmp    eax,DWORD PTR [ebp-0xc]
  42613d:	jne    0x426162
  42613f:	mov    eax,DWORD PTR [ebp-0x8]
  426142:	mov    ecx,DWORD PTR [ebp-0x20]
  426145:	xor    eax,esi
  426147:	xor    ecx,esi
  426149:	lea    ebx,[ebx+eax*1+0x3272f3]
  426150:	mov    eax,DWORD PTR [ebp+0x10]
  426153:	mov    eax,DWORD PTR [eax+0x1e0]
  426159:	add    ecx,edi
  42615b:	imul   ecx,ebx
  42615e:	push   ecx
  42615f:	call   DWORD PTR [eax+0x24]
  426162:	mov    eax,DWORD PTR [ebp-0x4]
  426165:	xor    eax,esi
  426167:	add    eax,edi
  426169:	cmp    eax,DWORD PTR [ebp-0xc]
  42616c:	jne    0x42617d
  42616e:	mov    eax,DWORD PTR [ebp-0x28]
  426171:	xor    eax,esi
  426173:	add    eax,edi
  426175:	cmp    ebx,eax
  426177:	jbe    0x4260f7
  42617d:	mov    eax,DWORD PTR [ebp-0x4]
  426180:	xor    eax,esi
  426182:	add    eax,edi
  426184:	cmp    eax,DWORD PTR [ebp-0xc]
  426187:	jne    0x4261a0
  426189:	mov    eax,DWORD PTR [ebp-0x8]
  42618c:	mov    ecx,DWORD PTR [ebp-0x18]
  42618f:	xor    eax,esi
  426191:	lea    eax,[ecx+eax*1+0x3272f3]
  426198:	mov    DWORD PTR [ebp-0x18],eax
  42619b:	jmp    0x42628f
  4261a0:	mov    DWORD PTR [ebp-0x14],0x1121b29
  4261a7:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  4261ae:	mov    ebx,DWORD PTR [ebp-0x4]
  4261b1:	xor    ebx,esi
  4261b3:	add    ebx,edi
  4261b5:	jmp    0x42627c
  4261ba:	mov    eax,DWORD PTR [ebp-0x4]
  4261bd:	xor    eax,esi
  4261bf:	add    eax,edi
  4261c1:	mov    DWORD PTR [ebp-0x14],eax
  4261c4:	mov    eax,DWORD PTR [ebp-0x4]
  4261c7:	xor    eax,esi
  4261c9:	add    eax,edi
  4261cb:	mov    DWORD PTR [ebp+0xc],eax
  4261ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4261d1:	mov    eax,DWORD PTR [ebp-0x24]
  4261d4:	xor    ecx,esi
  4261d6:	add    ecx,edi
  4261d8:	cmp    ecx,eax
  4261da:	je     0x4261e2
  4261dc:	mov    eax,DWORD PTR [eax+ebx*4]
  4261df:	mov    DWORD PTR [ebp-0x14],eax
  4261e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4261e5:	mov    eax,DWORD PTR [eax+ebx*4]
  4261e8:	mov    DWORD PTR [ebp+0xc],eax
  4261eb:	mov    eax,DWORD PTR [ebp-0x4]
  4261ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4261f1:	xor    eax,esi
  4261f3:	add    eax,edi
  4261f5:	cmp    eax,ecx
  4261f7:	je     0x426222
  4261f9:	mov    eax,DWORD PTR [ebp-0x4]
  4261fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4261ff:	xor    eax,esi
  426201:	add    eax,edi
  426203:	shr    ecx,0x1f
  426206:	cmp    eax,ecx
  426208:	je     0x426222
  42620a:	mov    ecx,DWORD PTR [ebp-0x14]
  42620d:	mov    eax,DWORD PTR [ebp+0x10]
  426210:	mov    eax,DWORD PTR [eax+0x1e0]
  426216:	movzx  ecx,cx
  426219:	push   ecx
  42621a:	push   DWORD PTR [ebp-0xc]
  42621d:	call   DWORD PTR [eax+0x8]
  426220:	jmp    0x42623b
  426222:	mov    eax,DWORD PTR [ebp+0xc]
  426225:	add    eax,DWORD PTR [ebp+0x8]
  426228:	mov    ecx,DWORD PTR [ebp+0x10]
  42622b:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426231:	add    eax,0x2
  426234:	push   eax
  426235:	push   DWORD PTR [ebp-0xc]
  426238:	call   DWORD PTR [ecx+0x8]
  42623b:	mov    DWORD PTR [ebp+0xc],eax
  42623e:	mov    eax,DWORD PTR [ebp-0x4]
  426241:	mov    ecx,DWORD PTR [ebp+0xc]
  426244:	xor    eax,esi
  426246:	add    eax,edi
  426248:	cmp    eax,ecx
  42624a:	mov    eax,DWORD PTR [ebp-0x8]
  42624d:	jne    0x426260
  42624f:	mov    ecx,DWORD PTR [ebp-0x18]
  426252:	xor    eax,esi
  426254:	lea    eax,[ecx+eax*1+0x3272f3]
  42625b:	mov    DWORD PTR [ebp-0x18],eax
  42625e:	jmp    0x426270
  426260:	mov    ecx,DWORD PTR [ebp+0xc]
  426263:	xor    eax,esi
  426265:	add    eax,edi
  426267:	imul   eax,ecx
  42626a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42626d:	mov    DWORD PTR [ecx+ebx*4],eax
  426270:	mov    eax,DWORD PTR [ebp-0x8]
  426273:	xor    eax,esi
  426275:	lea    ebx,[ebx+eax*1+0x3272f3]
  42627c:	mov    eax,DWORD PTR [ebp-0x4]
  42627f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426282:	xor    eax,esi
  426284:	add    eax,edi
  426286:	cmp    DWORD PTR [ecx+ebx*4],eax
  426289:	jne    0x4261ba
  42628f:	mov    edx,DWORD PTR [ebp-0x10]
  426292:	mov    eax,DWORD PTR [ebp-0x18]
  426295:	mov    ecx,DWORD PTR [ebp-0x2c]
  426298:	sub    edx,0x3272f2
  42629e:	xor    edx,esi
  4262a0:	jmp    0x42606a
  4262a5:	mov    ecx,DWORD PTR [ebp-0x4]
  4262a8:	xor    ecx,esi
  4262aa:	add    ecx,edi
  4262ac:	cmp    eax,ecx
  4262ae:	mov    eax,DWORD PTR [ebp-0x4]
  4262b1:	jne    0x4262bb
  4262b3:	mov    eax,DWORD PTR [ebp-0x8]
  4262b6:	jmp    0x4262bb
  4262b8:	mov    eax,DWORD PTR [ebp-0x4]
  4262bb:	xor    eax,esi
  4262bd:	add    eax,edi
  4262bf:	pop    edi
  4262c0:	pop    esi
  4262c1:	pop    ebx
  4262c2:	leave  
  4262c3:	ret    0xc
  4262c6:	push   ebp
  4262c7:	mov    ebp,esp
  4262c9:	sub    esp,0x28
  4262cc:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  4262d3:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  4262da:	mov    eax,DWORD PTR [ebp+0xc]
  4262dd:	mov    DWORD PTR [ebp+0xc],eax
  4262e0:	push   esi
  4262e1:	mov    eax,eax
  4262e3:	mov    eax,DWORD PTR [ebp-0x4]
  4262e6:	mov    esi,DWORD PTR [ebp+0x8]
  4262e9:	mov    ecx,0x75108ac
  4262ee:	xor    eax,ecx
  4262f0:	mov    edx,0x3272f3
  4262f5:	add    eax,edx
  4262f7:	cmp    esi,eax
  4262f9:	je     0x426420
  4262ff:	mov    eax,DWORD PTR [ebp+0x8]
  426302:	mov    esi,DWORD PTR [ebp+0x8]
  426305:	add    esi,DWORD PTR [eax+0x3c]
  426308:	push   edi
  426309:	mov    DWORD PTR [ebp+0xc],esi
  42630c:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  426313:	mov    eax,DWORD PTR [ebp-0x1c]
  426316:	mov    esi,DWORD PTR [ebp-0x4]
  426319:	mov    edi,DWORD PTR [ebp+0xc]
  42631c:	xor    esi,ecx
  42631e:	xor    eax,ecx
  426320:	add    esi,edx
  426322:	cmp    DWORD PTR [edi+eax*8+0x1939810],esi
  426329:	je     0x42641a
  42632f:	mov    esi,DWORD PTR [ebp+0xc]
  426332:	mov    eax,DWORD PTR [ebp+0x8]
  426335:	add    eax,DWORD PTR [esi+0xa0]
  42633b:	mov    esi,DWORD PTR [ebp+0x8]
  42633e:	mov    edi,DWORD PTR [ebp+0xc]
  426341:	sub    esi,DWORD PTR [edi+0x34]
  426344:	mov    edi,DWORD PTR [ebp-0x4]
  426347:	xor    edi,ecx
  426349:	add    edi,edx
  42634b:	mov    DWORD PTR [ebp-0x24],esi
  42634e:	cmp    esi,edi
  426350:	je     0x42641a
  426356:	mov    esi,DWORD PTR [ebp-0x4]
  426359:	xor    esi,ecx
  42635b:	add    esi,edx
  42635d:	mov    DWORD PTR [ebp-0x8],esi
  426360:	push   ebx
  426361:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  426368:	jmp    0x426404
  42636d:	mov    esi,DWORD PTR [ebp-0x4]
  426370:	xor    esi,ecx
  426372:	lea    edi,[ebx-0x8]
  426375:	add    esi,edx
  426377:	shr    edi,1
  426379:	cmp    esi,edi
  42637b:	jae    0x4263ea
  42637d:	sub    edi,esi
  42637f:	lea    ebx,[eax+esi*2+0x8]
  426383:	mov    DWORD PTR [ebp-0x18],edi
  426386:	movzx  esi,WORD PTR [ebx]
  426389:	and    esi,0xfff
  42638f:	mov    DWORD PTR [ebp-0x14],esi
  426392:	mov    edi,DWORD PTR [ebp-0x14]
  426395:	mov    esi,DWORD PTR [eax]
  426397:	sub    esi,edx
  426399:	add    edi,esi
  42639b:	movzx  esi,WORD PTR [ebx]
  42639e:	shr    esi,0xc
  4263a1:	xor    edi,ecx
  4263a3:	mov    DWORD PTR [ebp-0x20],edi
  4263a6:	mov    DWORD PTR [ebp-0x14],esi
  4263a9:	mov    esi,DWORD PTR [ebp-0x20]
  4263ac:	mov    edi,DWORD PTR [ebp+0x8]
  4263af:	xor    esi,ecx
  4263b1:	lea    esi,[esi+edi*1+0x3272f3]
  4263b8:	mov    DWORD PTR [ebp-0x20],esi
  4263bb:	mov    esi,DWORD PTR [ebp-0x10]
  4263be:	mov    edi,DWORD PTR [ebp-0x14]
  4263c1:	xor    esi,ecx
  4263c3:	add    esi,edx
  4263c5:	cmp    edi,esi
  4263c7:	jne    0x4263df
  4263c9:	mov    esi,DWORD PTR [ebp-0x10]
  4263cc:	mov    edi,DWORD PTR [ebp-0x14]
  4263cf:	xor    esi,ecx
  4263d1:	add    esi,edx
  4263d3:	cmp    edi,esi
  4263d5:	jne    0x4263df
  4263d7:	mov    esi,DWORD PTR [ebp-0x20]
  4263da:	mov    edi,DWORD PTR [ebp-0x24]
  4263dd:	add    DWORD PTR [esi],edi
  4263df:	add    ebx,0x2
  4263e2:	dec    DWORD PTR [ebp-0x18]
  4263e5:	jne    0x426386
  4263e7:	mov    ebx,DWORD PTR [ebp-0xc]
  4263ea:	add    DWORD PTR [ebp-0x8],ebx
  4263ed:	mov    esi,DWORD PTR [ebp-0x1c]
  4263f0:	mov    edi,DWORD PTR [ebp-0x8]
  4263f3:	mov    ebx,DWORD PTR [ebp+0xc]
  4263f6:	xor    esi,ecx
  4263f8:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939814]
  4263ff:	jae    0x426419
  426401:	add    eax,DWORD PTR [ebp-0xc]
  426404:	mov    esi,DWORD PTR [ebp-0x4]
  426407:	mov    ebx,DWORD PTR [eax+0x4]
  42640a:	xor    esi,ecx
  42640c:	add    esi,edx
  42640e:	mov    DWORD PTR [ebp-0xc],ebx
  426411:	cmp    ebx,esi
  426413:	jne    0x42636d
  426419:	pop    ebx
  42641a:	mov    eax,DWORD PTR [ebp-0x28]
  42641d:	pop    edi
  42641e:	jmp    0x426423
  426420:	mov    eax,DWORD PTR [ebp-0x4]
  426423:	xor    eax,ecx
  426425:	add    eax,edx
  426427:	pop    esi
  426428:	leave  
  426429:	ret    0x8
  42642c:	push   ebp
  42642d:	mov    ebp,esp
  42642f:	sub    esp,0xd8
  426435:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42643c:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  426443:	mov    eax,DWORD PTR [ebp-0x4]
  426446:	push   ebx
  426447:	push   esi
  426448:	mov    esi,0x75108ac
  42644d:	xor    eax,esi
  42644f:	push   edi
  426450:	mov    edi,0x3272f3
  426455:	add    eax,edi
  426457:	mov    DWORD PTR [ebp-0x18],eax
  42645a:	mov    eax,DWORD PTR [ebp-0x4]
  42645d:	xor    eax,esi
  42645f:	add    eax,edi
  426461:	mov    DWORD PTR [ebp-0x8],eax
  426464:	mov    ebx,DWORD PTR [ebp+0x20]
  426467:	mov    eax,DWORD PTR [ebp-0x1c]
  42646a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42646d:	xor    eax,ecx
  42646f:	mov    DWORD PTR [ebp-0x1c],eax
  426472:	add    DWORD PTR [ebp-0x1c],0xf89cb5a1
  426479:	mov    eax,DWORD PTR [ebp-0xc]
  42647c:	mov    ecx,DWORD PTR [ebp-0xc]
  42647f:	xor    eax,ecx
  426481:	mov    DWORD PTR [ebp-0xc],eax
  426484:	add    DWORD PTR [ebp-0xc],0xf89c85e1
  42648b:	mov    eax,DWORD PTR [ebp-0x10]
  42648e:	mov    ecx,DWORD PTR [ebp-0x10]
  426491:	xor    eax,ecx
  426493:	mov    DWORD PTR [ebp-0x10],eax
  426496:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  42649d:	mov    eax,DWORD PTR [ebp-0x28]
  4264a0:	mov    ecx,DWORD PTR [ebp-0x28]
  4264a3:	xor    eax,ecx
  4264a5:	mov    DWORD PTR [ebp-0x28],eax
  4264a8:	add    DWORD PTR [ebp-0x28],0xf89f05a1
  4264af:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  4264b6:	mov    eax,DWORD PTR [ebp+0x8]
  4264b9:	test   eax,eax
  4264bb:	je     0x426944
  4264c1:	mov    eax,DWORD PTR [ebp+0xc]
  4264c4:	test   eax,eax
  4264c6:	je     0x426944
  4264cc:	mov    eax,DWORD PTR [ebp+0x18]
  4264cf:	test   eax,eax
  4264d1:	je     0x426944
  4264d7:	mov    eax,DWORD PTR [ebp+0x20]
  4264da:	mov    ecx,DWORD PTR [ebp+0x8]
  4264dd:	xor    eax,0x8ac
  4264e2:	add    eax,0x72f3
  4264e7:	cmp    WORD PTR [ecx],ax
  4264ea:	jne    0x426944
  4264f0:	mov    eax,DWORD PTR [ebp-0x4]
  4264f3:	xor    eax,esi
  4264f5:	add    eax,edi
  4264f7:	mov    DWORD PTR [ebp-0x30],eax
  4264fa:	mov    eax,DWORD PTR [ebp-0x4]
  4264fd:	mov    ecx,DWORD PTR [ebp+0x8]
  426500:	mov    eax,DWORD PTR [ebp+0x8]
  426503:	add    eax,DWORD PTR [ecx+0x3c]
  426506:	mov    DWORD PTR [ebp+0xc],eax
  426509:	mov    eax,DWORD PTR [eax+0x50]
  42650c:	test   eax,eax
  42650e:	je     0x426944
  426514:	mov    DWORD PTR [ebp-0x2c],0xf88c85a1
  42651b:	mov    eax,DWORD PTR [ebp-0x2c]
  42651e:	xor    eax,esi
  426520:	add    eax,edi
  426522:	mov    DWORD PTR [ebp-0x2c],eax
  426525:	mov    eax,DWORD PTR [ebp-0x4]
  426528:	mov    eax,DWORD PTR [ebx+0x190]
  42652e:	mov    ecx,DWORD PTR [eax]
  426530:	mov    ecx,DWORD PTR [ecx+0x3c]
  426533:	add    ecx,DWORD PTR [eax]
  426535:	mov    eax,DWORD PTR [ebp-0x4]
  426538:	mov    eax,DWORD PTR [ebx+0x18c]
  42653e:	mov    edx,DWORD PTR [eax]
  426540:	mov    DWORD PTR [ebp-0x20],ecx
  426543:	mov    DWORD PTR [ebp+0x20],edx
  426546:	cmp    edx,edx
  426548:	jne    0x42657c
  42654a:	mov    eax,DWORD PTR [ebx+0x1e0]
  426550:	lea    edx,[ebp-0x18]
  426553:	push   edx
  426554:	mov    edx,DWORD PTR [ebp-0xc]
  426557:	xor    edx,esi
  426559:	add    edx,edi
  42655b:	push   edx
  42655c:	push   DWORD PTR [ecx+0x50]
  42655f:	push   DWORD PTR [ebp+0x20]
  426562:	call   DWORD PTR [eax+0x1c]
  426565:	mov    eax,DWORD PTR [ebp-0x20]
  426568:	mov    ecx,DWORD PTR [eax+0x54]
  42656b:	mov    eax,DWORD PTR [eax+0x50]
  42656e:	sub    eax,ecx
  426570:	add    ecx,DWORD PTR [ebp+0x20]
  426573:	push   ecx
  426574:	call   0x426ee1
  426579:	mov    edx,DWORD PTR [ebp+0x20]
  42657c:	mov    eax,DWORD PTR [ebx+0x194]
  426582:	mov    DWORD PTR [eax],edx
  426584:	mov    eax,DWORD PTR [ebp+0xc]
  426587:	push   DWORD PTR [eax+0x54]
  42658a:	push   DWORD PTR [ebp+0x8]
  42658d:	push   edx
  42658e:	call   0x426dd7
  426593:	mov    ecx,DWORD PTR [ebp+0x20]
  426596:	mov    eax,DWORD PTR [ecx+0x3c]
  426599:	add    eax,ecx
  42659b:	movzx  ecx,WORD PTR [eax+0x14]
  42659f:	lea    ecx,[ecx+eax*1+0x18]
  4265a3:	mov    DWORD PTR [ebp+0x18],ecx
  4265a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4265a9:	movzx  edx,WORD PTR [eax+0x6]
  4265ad:	xor    ecx,esi
  4265af:	add    ecx,edi
  4265b1:	mov    DWORD PTR [ebp+0xc],eax
  4265b4:	cmp    edx,ecx
  4265b6:	je     0x426663
  4265bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4265bf:	xor    ecx,esi
  4265c1:	add    ecx,edi
  4265c3:	mov    DWORD PTR [ebp-0x8],ecx
  4265c6:	mov    ecx,DWORD PTR [ebp-0x24]
  4265c9:	movzx  edx,WORD PTR [eax+0x6]
  4265cd:	xor    ecx,esi
  4265cf:	sub    edx,ecx
  4265d1:	sub    edx,edi
  4265d3:	cmp    DWORD PTR [ebp-0x8],edx
  4265d6:	ja     0x426663
  4265dc:	mov    edx,DWORD PTR [ebp+0x18]
  4265df:	add    edx,0x8
  4265e2:	mov    DWORD PTR [ebp+0x18],edx
  4265e5:	jmp    0x4265ea
  4265e7:	mov    edx,DWORD PTR [ebp+0x18]
  4265ea:	mov    eax,DWORD PTR [eax+0x38]
  4265ed:	lea    ecx,[eax-0x1]
  4265f0:	mov    DWORD PTR [ebp-0x38],eax
  4265f3:	mov    eax,DWORD PTR [edx]
  4265f5:	test   eax,ecx
  4265f7:	je     0x426600
  4265f9:	not    ecx
  4265fb:	and    eax,ecx
  4265fd:	add    eax,DWORD PTR [ebp-0x38]
  426600:	mov    ecx,DWORD PTR [edx+0x4]
  426603:	add    ecx,DWORD PTR [ebp+0x20]
  426606:	push   ecx
  426607:	call   0x426ee1
  42660c:	mov    edx,DWORD PTR [ebp-0x4]
  42660f:	mov    eax,DWORD PTR [ebp+0x18]
  426612:	mov    ecx,DWORD PTR [eax+0x8]
  426615:	xor    edx,esi
  426617:	add    edx,edi
  426619:	cmp    ecx,edx
  42661b:	je     0x426634
  42661d:	push   ecx
  42661e:	mov    ecx,DWORD PTR [ebp+0x8]
  426621:	add    ecx,DWORD PTR [eax+0xc]
  426624:	mov    eax,DWORD PTR [eax+0x4]
  426627:	add    eax,DWORD PTR [ebp+0x20]
  42662a:	push   ecx
  42662b:	push   eax
  42662c:	call   0x426dd7
  426631:	mov    eax,DWORD PTR [ebp+0x18]
  426634:	mov    ecx,DWORD PTR [ebp-0x24]
  426637:	mov    edx,DWORD PTR [ebp-0x8]
  42663a:	add    eax,0x28
  42663d:	xor    ecx,esi
  42663f:	lea    ecx,[edx+ecx*1+0x3272f3]
  426646:	mov    edx,DWORD PTR [ebp+0xc]
  426649:	mov    DWORD PTR [ebp+0x18],eax
  42664c:	mov    eax,DWORD PTR [ebp-0x24]
  42664f:	movzx  edx,WORD PTR [edx+0x6]
  426653:	xor    eax,esi
  426655:	sub    edx,eax
  426657:	mov    eax,DWORD PTR [ebp+0xc]
  42665a:	sub    edx,edi
  42665c:	mov    DWORD PTR [ebp-0x8],ecx
  42665f:	cmp    ecx,edx
  426661:	jbe    0x4265e7
  426663:	mov    edx,DWORD PTR [ebx+0x18c]
  426669:	mov    ecx,DWORD PTR [ebp+0x20]
  42666c:	cmp    ecx,DWORD PTR [edx]
  42666e:	jne    0x426697
  426670:	mov    eax,DWORD PTR [ebx+0x1e0]
  426676:	lea    edx,[ebp-0x18]
  426679:	push   edx
  42667a:	mov    edx,DWORD PTR [ebp-0x10]
  42667d:	xor    edx,esi
  42667f:	add    edx,edi
  426681:	push   edx
  426682:	mov    edx,DWORD PTR [ebp-0x20]
  426685:	push   DWORD PTR [edx+0x54]
  426688:	push   ecx
  426689:	call   DWORD PTR [eax+0x1c]
  42668c:	test   eax,eax
  42668e:	je     0x426935
  426694:	mov    eax,DWORD PTR [ebp+0xc]
  426697:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42669d:	mov    ecx,DWORD PTR [ecx]
  42669f:	xor    ecx,esi
  4266a1:	add    ecx,edi
  4266a3:	je     0x426860
  4266a9:	mov    eax,DWORD PTR [ebp-0x4]
  4266ac:	xor    eax,esi
  4266ae:	add    eax,edi
  4266b0:	and    DWORD PTR [ebp+0x8],0x0
  4266b4:	mov    DWORD PTR [ebp-0x14],eax
  4266b7:	mov    eax,0xf89c85dd
  4266bc:	lea    ecx,[eax-0x8]
  4266bf:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4266c6:	mov    DWORD PTR [ebp-0x54],0xf89c852d
  4266cd:	mov    DWORD PTR [ebp-0x50],eax
  4266d0:	mov    DWORD PTR [ebp-0x4c],ecx
  4266d3:	mov    DWORD PTR [ebp-0x48],ecx
  4266d6:	mov    DWORD PTR [ebp-0x44],0xf89c85a1
  4266dd:	mov    edx,DWORD PTR [ebp+0x8]
  4266e0:	mov    ecx,0x8ac
  4266e5:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4266ea:	mov    edx,0x72f3
  4266ef:	add    cx,dx
  4266f2:	mov    edx,DWORD PTR [ebp+0x8]
  4266f5:	inc    DWORD PTR [ebp+0x8]
  4266f8:	cmp    DWORD PTR [ebp+0x8],0x6
  4266fc:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426704:	jb     0x4266dd
  426706:	mov    ecx,0xf89c85d3
  42670b:	mov    DWORD PTR [ebp-0xb0],eax
  426711:	mov    DWORD PTR [ebp-0x9c],eax
  426717:	mov    DWORD PTR [ebp-0x74],eax
  42671a:	mov    DWORD PTR [ebp-0x70],eax
  42671d:	mov    eax,0xf89c852c
  426722:	lea    edx,[ecx+0x2c]
  426725:	mov    DWORD PTR [ebp-0x64],eax
  426728:	mov    DWORD PTR [ebp-0x60],eax
  42672b:	mov    DWORD PTR [ebp-0xb4],0xf89c85f5
  426735:	mov    DWORD PTR [ebp-0xac],ecx
  42673b:	mov    DWORD PTR [ebp-0xa8],edx
  426741:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  42674b:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  426755:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  42675f:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  426769:	mov    DWORD PTR [ebp-0x90],0xf89c852d
  426773:	mov    DWORD PTR [ebp-0x8c],ecx
  426779:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  426783:	mov    DWORD PTR [ebp-0x84],edx
  426789:	mov    DWORD PTR [ebp-0x80],0xf89c85d0
  426790:	mov    DWORD PTR [ebp-0x7c],ecx
  426793:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  42679a:	mov    DWORD PTR [ebp-0x6c],ecx
  42679d:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  4267a4:	mov    DWORD PTR [ebp-0x5c],0xf89c85a1
  4267ab:	xor    eax,eax
  4267ad:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4267b4:	xor    cl,0xac
  4267b7:	sub    cl,0xd
  4267ba:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4267c1:	inc    eax
  4267c2:	cmp    eax,0x17
  4267c5:	jb     0x4267ad
  4267c7:	mov    eax,DWORD PTR [ebx+0x1e0]
  4267cd:	lea    ecx,[ebp-0xc0]
  4267d3:	push   ecx
  4267d4:	call   DWORD PTR [eax+0x4]
  4267d7:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4267dd:	lea    edx,[ebp-0xd8]
  4267e3:	push   edx
  4267e4:	push   eax
  4267e5:	call   DWORD PTR [ecx+0x8]
  4267e8:	mov    DWORD PTR [ebp-0x40],eax
  4267eb:	lea    eax,[ebp-0x14]
  4267ee:	push   eax
  4267ef:	mov    eax,DWORD PTR [ebx+0x18c]
  4267f5:	push   DWORD PTR [eax]
  4267f7:	mov    eax,DWORD PTR [ebp-0x40]
  4267fa:	call   eax
  4267fc:	mov    eax,DWORD PTR [ebp-0x4]
  4267ff:	xor    eax,esi
  426801:	add    eax,edi
  426803:	mov    DWORD PTR [ebp-0x34],eax
  426806:	mov    ecx,DWORD PTR [ebp-0x4]
  426809:	mov    eax,DWORD PTR [ebp-0x14]
  42680c:	xor    ecx,esi
  42680e:	add    ecx,edi
  426810:	cmp    eax,ecx
  426812:	je     0x42685d
  426814:	mov    DWORD PTR [ebp-0x3c],eax
  426817:	jmp    0x426828
  426819:	mov    eax,DWORD PTR [eax]
  42681b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42681e:	mov    DWORD PTR [ebp-0x14],eax
  426821:	mov    eax,DWORD PTR [ebp-0x14]
  426824:	cmp    eax,ecx
  426826:	je     0x426835
  426828:	mov    edx,DWORD PTR [eax+0x18]
  42682b:	mov    ecx,DWORD PTR [ebx+0x18c]
  426831:	cmp    edx,DWORD PTR [ecx]
  426833:	jne    0x426819
  426835:	mov    ecx,DWORD PTR [ebx+0x18c]
  42683b:	mov    edx,DWORD PTR [eax+0x18]
  42683e:	cmp    edx,DWORD PTR [ecx]
  426840:	jne    0x42685d
  426842:	mov    ecx,DWORD PTR [ebx+0x190]
  426848:	mov    edx,DWORD PTR [ebp-0x20]
  42684b:	mov    edx,DWORD PTR [edx+0x28]
  42684e:	add    edx,DWORD PTR [ecx]
  426850:	mov    DWORD PTR [eax+0x1c],edx
  426853:	mov    eax,DWORD PTR [ebp-0x24]
  426856:	xor    eax,esi
  426858:	add    eax,edi
  42685a:	mov    DWORD PTR [ebp-0x34],eax
  42685d:	mov    eax,DWORD PTR [ebp+0xc]
  426860:	push   ebx
  426861:	push   eax
  426862:	push   DWORD PTR [ebp+0x20]
  426865:	call   0x425fe3
  42686a:	test   eax,eax
  42686c:	je     0x426935
  426872:	push   DWORD PTR [ebp+0xc]
  426875:	mov    ecx,ebx
  426877:	push   DWORD PTR [ebp+0x20]
  42687a:	call   0x425f3c
  42687f:	test   eax,eax
  426881:	je     0x426935
  426887:	mov    eax,DWORD PTR [ebp+0xc]
  42688a:	mov    edx,DWORD PTR [ebp+0x20]
  42688d:	mov    ecx,ebx
  42688f:	call   0x425e15
  426894:	test   eax,eax
  426896:	je     0x426935
  42689c:	push   ebx
  42689d:	push   DWORD PTR [ebp+0x20]
  4268a0:	call   0x4262c6
  4268a5:	test   eax,eax
  4268a7:	je     0x426935
  4268ad:	mov    eax,DWORD PTR [ebx+0x18c]
  4268b3:	mov    edx,DWORD PTR [ebp+0x20]
  4268b6:	cmp    edx,DWORD PTR [eax]
  4268b8:	jne    0x4268d4
  4268ba:	mov    eax,DWORD PTR [ebx+0x1e0]
  4268c0:	lea    ecx,[ebp-0x18]
  4268c3:	push   ecx
  4268c4:	push   DWORD PTR [ebp-0x18]
  4268c7:	mov    ecx,DWORD PTR [ebp-0x20]
  4268ca:	push   DWORD PTR [ecx+0x54]
  4268cd:	push   edx
  4268ce:	call   DWORD PTR [eax+0x1c]
  4268d1:	mov    edx,DWORD PTR [ebp+0x20]
  4268d4:	mov    eax,DWORD PTR [ebx+0x1c8]
  4268da:	mov    eax,DWORD PTR [eax]
  4268dc:	xor    eax,esi
  4268de:	add    eax,edi
  4268e0:	je     0x426919
  4268e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4268e5:	mov    eax,DWORD PTR [ecx+0x28]
  4268e8:	mov    DWORD PTR [ebp+0x8],0xf89ca5a1
  4268ef:	mov    esi,DWORD PTR [ebp+0x8]
  4268f2:	push   DWORD PTR [ebp+0x14]
  4268f5:	xor    esi,0x8ac
  4268fb:	push   DWORD PTR [ebp+0x10]
  4268fe:	add    esi,0x72f3
  426904:	or     WORD PTR [ecx+0x16],si
  426908:	add    eax,edx
  42690a:	push   edx
  42690b:	call   eax
  42690d:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  426917:	jmp    0x426923
  426919:	mov    eax,DWORD PTR [ebp+0xc]
  42691c:	mov    eax,DWORD PTR [eax+0x28]
  42691f:	add    eax,edx
  426921:	call   eax
  426923:	mov    DWORD PTR [ebp-0x8],eax
  426926:	mov    eax,DWORD PTR [ebp-0x8]
  426929:	mov    ecx,DWORD PTR [ebp+0x1c]
  42692c:	mov    DWORD PTR [ecx],eax
  42692e:	mov    DWORD PTR [ebp-0x30],0x1
  426935:	cmp    DWORD PTR [ebp-0x30],0x0
  426939:	jne    0x42693f
  42693b:	and    DWORD PTR [ebp+0x20],0x0
  42693f:	mov    eax,DWORD PTR [ebp+0x20]
  426942:	jmp    0x426946
  426944:	xor    eax,eax
  426946:	pop    edi
  426947:	pop    esi
  426948:	pop    ebx
  426949:	leave  
  42694a:	ret    0x1c
  42694d:	push   ebp
  42694e:	mov    ebp,esp
  426950:	movzx  edx,WORD PTR [ecx+0x6]
  426954:	movzx  eax,WORD PTR [ecx+0x14]
  426958:	push   ebx
  426959:	push   edi
  42695a:	xor    edi,edi
  42695c:	lea    eax,[eax+ecx*1+0x18]
  426960:	test   edx,edx
  426962:	je     0x426983
  426964:	mov    ecx,DWORD PTR [eax+0xc]
  426967:	lea    ebx,[ecx+esi*1]
  42696a:	cmp    DWORD PTR [ebp+0x8],ebx
  42696d:	jb     0x42697b
  42696f:	mov    ebx,DWORD PTR [eax+0x8]
  426972:	add    ebx,ecx
  426974:	add    ebx,esi
  426976:	cmp    DWORD PTR [ebp+0x8],ebx
  426979:	jb     0x426985
  42697b:	add    eax,0x28
  42697e:	inc    edi
  42697f:	cmp    edi,edx
  426981:	jb     0x426964
  426983:	xor    eax,eax
  426985:	pop    edi
  426986:	pop    ebx
  426987:	pop    ebp
  426988:	ret    0x4
  42698b:	push   ebp
  42698c:	mov    ebp,esp
  42698e:	sub    esp,0x34
  426991:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  426998:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  42699f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  4269a6:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  4269ad:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  4269b4:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  4269bb:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  4269c2:	mov    DWORD PTR [ebp-0x10],eax
  4269c5:	mov    eax,DWORD PTR [ebp+0x8]
  4269c8:	mov    DWORD PTR [ebp-0x14],eax
  4269cb:	mov    eax,DWORD PTR [ebp-0xc]
  4269ce:	push   ebx
  4269cf:	mov    ecx,0x75108ac
  4269d4:	xor    eax,ecx
  4269d6:	push   esi
  4269d7:	mov    esi,DWORD PTR [ebp-0x10]
  4269da:	mov    edx,0x3272f3
  4269df:	add    eax,edx
  4269e1:	push   edi
  4269e2:	cmp    esi,eax
  4269e4:	je     0x426bc3
  4269ea:	mov    eax,DWORD PTR [ebp-0xc]
  4269ed:	mov    esi,DWORD PTR [ebp-0x14]
  4269f0:	xor    eax,ecx
  4269f2:	add    eax,edx
  4269f4:	cmp    esi,eax
  4269f6:	je     0x426bc3
  4269fc:	mov    eax,DWORD PTR [ebp-0xc]
  4269ff:	xor    eax,ecx
  426a01:	add    eax,edx
  426a03:	mov    DWORD PTR [ebp-0x24],eax
  426a06:	mov    eax,DWORD PTR [ebp-0xc]
  426a09:	xor    eax,ecx
  426a0b:	add    eax,edx
  426a0d:	mov    DWORD PTR [ebp-0x28],eax
  426a10:	mov    edi,DWORD PTR [ebp-0x20]
  426a13:	mov    ebx,DWORD PTR [ebp-0x8]
  426a16:	mov    esi,0x8ac
  426a1b:	xor    edi,esi
  426a1d:	mov    eax,0x72f3
  426a22:	xor    ebx,esi
  426a24:	add    edi,eax
  426a26:	add    ebx,eax
  426a28:	sub    ebx,edi
  426a2a:	mov    WORD PTR [ebp-0x8],bx
  426a2e:	jmp    0x426af3
  426a33:	mov    edi,DWORD PTR [ebp-0xc]
  426a36:	mov    bx,WORD PTR [ebp-0x4]
  426a3a:	xor    edi,esi
  426a3c:	add    edi,eax
  426a3e:	cmp    bx,di
  426a41:	je     0x426b35
  426a47:	mov    edi,DWORD PTR [ebp-0xc]
  426a4a:	mov    ebx,DWORD PTR [ebp+0xc]
  426a4d:	xor    edi,ecx
  426a4f:	add    edi,edx
  426a51:	cmp    ebx,edi
  426a53:	mov    di,WORD PTR [ebp-0x4]
  426a57:	mov    bx,WORD PTR [ebp+0x8]
  426a5b:	je     0x426ac6
  426a5d:	cmp    bx,di
  426a60:	je     0x426acf
  426a62:	mov    edi,DWORD PTR [ebp-0x20]
  426a65:	mov    bx,WORD PTR [ebp+0x8]
  426a69:	xor    edi,esi
  426a6b:	add    edi,eax
  426a6d:	cmp    bx,di
  426a70:	jb     0x426a90
  426a72:	mov    edi,DWORD PTR [ebp-0x2c]
  426a75:	mov    bx,WORD PTR [ebp+0x8]
  426a79:	xor    edi,esi
  426a7b:	add    edi,eax
  426a7d:	cmp    bx,di
  426a80:	ja     0x426a90
  426a82:	movzx  edi,WORD PTR [ebp+0x8]
  426a86:	movzx  ebx,WORD PTR [ebp-0x8]
  426a8a:	add    edi,ebx
  426a8c:	mov    WORD PTR [ebp+0x8],di
  426a90:	mov    edi,DWORD PTR [ebp-0x20]
  426a93:	mov    bx,WORD PTR [ebp-0x4]
  426a97:	xor    edi,esi
  426a99:	add    edi,eax
  426a9b:	cmp    bx,di
  426a9e:	jb     0x426abe
  426aa0:	mov    edi,DWORD PTR [ebp-0x2c]
  426aa3:	mov    bx,WORD PTR [ebp-0x4]
  426aa7:	xor    edi,esi
  426aa9:	add    edi,eax
  426aab:	cmp    bx,di
  426aae:	ja     0x426abe
  426ab0:	movzx  edi,WORD PTR [ebp-0x4]
  426ab4:	movzx  ebx,WORD PTR [ebp-0x8]
  426ab8:	add    edi,ebx
  426aba:	mov    WORD PTR [ebp-0x4],di
  426abe:	mov    di,WORD PTR [ebp-0x4]
  426ac2:	mov    bx,WORD PTR [ebp+0x8]
  426ac6:	cmp    bx,di
  426ac9:	jne    0x426bc3
  426acf:	mov    edi,DWORD PTR [ebp-0x1c]
  426ad2:	mov    ebx,DWORD PTR [ebp-0x10]
  426ad5:	xor    edi,ecx
  426ad7:	lea    edi,[edi+ebx*1+0x3272f3]
  426ade:	mov    DWORD PTR [ebp-0x10],edi
  426ae1:	mov    edi,DWORD PTR [ebp-0x1c]
  426ae4:	mov    ebx,DWORD PTR [ebp-0x14]
  426ae7:	xor    edi,ecx
  426ae9:	lea    edi,[edi+ebx*1+0x3272f3]
  426af0:	mov    DWORD PTR [ebp-0x14],edi
  426af3:	mov    edi,DWORD PTR [ebp-0x24]
  426af6:	mov    ebx,DWORD PTR [ebp-0x10]
  426af9:	mov    di,WORD PTR [ebx+edi*2]
  426afd:	mov    WORD PTR [ebp+0x8],di
  426b01:	mov    edi,DWORD PTR [ebp-0x28]
  426b04:	mov    ebx,DWORD PTR [ebp-0x14]
  426b07:	mov    di,WORD PTR [ebx+edi*2]
  426b0b:	mov    WORD PTR [ebp-0x4],di
  426b0f:	mov    edi,DWORD PTR [ebp-0xc]
  426b12:	mov    bx,WORD PTR [ebp+0x8]
  426b16:	xor    edi,esi
  426b18:	add    edi,eax
  426b1a:	cmp    bx,di
  426b1d:	jne    0x426a33
  426b23:	mov    eax,DWORD PTR [ebp-0x18]
  426b26:	mov    esi,DWORD PTR [ebp-0xc]
  426b29:	xor    eax,ecx
  426b2b:	add    eax,edx
  426b2d:	imul   eax,esi
  426b30:	mov    DWORD PTR [ebp-0xc],eax
  426b33:	jmp    0x426b47
  426b35:	mov    eax,DWORD PTR [ebp-0xc]
  426b38:	mov    esi,DWORD PTR [ebp-0x18]
  426b3b:	xor    eax,ecx
  426b3d:	lea    eax,[eax+esi*1+0x3272f3]
  426b44:	mov    DWORD PTR [ebp-0x18],eax
  426b47:	mov    eax,DWORD PTR [ebp-0x24]
  426b4a:	sub    eax,edx
  426b4c:	xor    eax,ecx
  426b4e:	mov    DWORD PTR [ebp-0x30],eax
  426b51:	mov    eax,DWORD PTR [ebp-0x28]
  426b54:	sub    eax,edx
  426b56:	xor    eax,ecx
  426b58:	mov    DWORD PTR [ebp-0x34],eax
  426b5b:	mov    eax,DWORD PTR [ebp-0x34]
  426b5e:	mov    esi,DWORD PTR [ebp-0x1c]
  426b61:	xor    esi,ecx
  426b63:	add    esi,edx
  426b65:	xor    eax,ecx
  426b67:	add    eax,0x3272f3
  426b6c:	imul   esi,eax
  426b6f:	mov    eax,DWORD PTR [ebp-0x14]
  426b72:	movzx  eax,WORD PTR [esi+eax*1]
  426b76:	mov    esi,DWORD PTR [ebp-0x30]
  426b79:	mov    edi,DWORD PTR [ebp-0x1c]
  426b7c:	xor    esi,ecx
  426b7e:	add    esi,edx
  426b80:	xor    edi,ecx
  426b82:	add    edi,edx
  426b84:	imul   edi,esi
  426b87:	mov    esi,DWORD PTR [ebp-0x10]
  426b8a:	movzx  esi,WORD PTR [edi+esi*1]
  426b8e:	sub    eax,edx
  426b90:	sub    esi,edx
  426b92:	xor    eax,ecx
  426b94:	xor    esi,ecx
  426b96:	cmp    esi,eax
  426b98:	jne    0x426bc3
  426b9a:	mov    eax,DWORD PTR [ebp-0x30]
  426b9d:	mov    esi,DWORD PTR [ebp-0x1c]
  426ba0:	xor    eax,ecx
  426ba2:	add    eax,0x3272f3
  426ba7:	xor    esi,ecx
  426ba9:	add    esi,edx
  426bab:	imul   esi,eax
  426bae:	mov    eax,DWORD PTR [ebp-0x10]
  426bb1:	movzx  eax,WORD PTR [esi+eax*1]
  426bb5:	mov    esi,DWORD PTR [ebp-0xc]
  426bb8:	sub    eax,edx
  426bba:	xor    eax,ecx
  426bbc:	cmp    eax,esi
  426bbe:	mov    eax,DWORD PTR [ebp-0xc]
  426bc1:	je     0x426bc6
  426bc3:	mov    eax,DWORD PTR [ebp-0x18]
  426bc6:	pop    edi
  426bc7:	xor    eax,ecx
  426bc9:	pop    esi
  426bca:	add    eax,edx
  426bcc:	pop    ebx
  426bcd:	leave  
  426bce:	ret    0x8
  426bd1:	push   ebp
  426bd2:	mov    ebp,esp
  426bd4:	push   ecx
  426bd5:	mov    cx,WORD PTR [eax]
  426bd8:	push   esi
  426bd9:	mov    esi,0x3b5b
  426bde:	sub    cx,si
  426be1:	mov    esi,0x8a99
  426be6:	xor    cx,si
  426be9:	mov    esi,0x4e3c
  426bee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426bf5:	mov    edx,0xf89c85a1
  426bfa:	cmp    cx,si
  426bfd:	je     0x426c5c
  426bff:	push   ebx
  426c00:	push   edi
  426c01:	movzx  ecx,cx
  426c04:	mov    edi,0xffcd8d0d
  426c09:	mov    esi,0x75108ac
  426c0e:	mov    ebx,0x4f98
  426c13:	cmp    cx,bx
  426c16:	jne    0x426c1b
  426c18:	mov    DWORD PTR [ebp-0x4],edx
  426c1b:	lea    edx,[edi+0x1]
  426c1e:	xor    edx,esi
  426c20:	mov    edi,edx
  426c22:	xor    edi,esi
  426c24:	mov    cx,WORD PTR [eax+edi*2+0x64e5e6]
  426c2c:	mov    ebx,0x3b5b
  426c31:	sub    cx,bx
  426c34:	mov    ebx,0x8a99
  426c39:	xor    cx,bx
  426c3c:	mov    ebx,0x4e3c
  426c41:	cmp    cx,bx
  426c44:	jne    0x426c0e
  426c46:	mov    ecx,DWORD PTR [ebp-0x4]
  426c49:	pop    edi
  426c4a:	pop    ebx
  426c4b:	cmp    ecx,0xf89c85a0
  426c51:	je     0x426c5c
  426c53:	xor    ecx,esi
  426c55:	lea    eax,[eax+ecx*2+0x64e5e8]
  426c5c:	pop    esi
  426c5d:	leave  
  426c5e:	ret    
  426c5f:	push   ebp
  426c60:	mov    ebp,esp
  426c62:	push   ecx
  426c63:	push   esi
  426c64:	push   edi
  426c65:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426c6c:	mov    esi,0xf89c85a1
  426c71:	call   0x426bd1
  426c76:	mov    edi,eax
  426c78:	mov    al,BYTE PTR [edi]
  426c7a:	sub    al,0x2
  426c7c:	xor    al,0x7d
  426c7e:	cmp    al,0x83
  426c80:	je     0x426ce3
  426c82:	mov    eax,edi
  426c84:	mov    edx,0xffcd8d0d
  426c89:	mov    ecx,0x75108ac
  426c8e:	push   ebx
  426c8f:	mov    ax,WORD PTR [eax]
  426c92:	mov    ebx,0x3b5b
  426c97:	sub    ax,bx
  426c9a:	mov    ebx,0x8a99
  426c9f:	xor    ax,bx
  426ca2:	mov    ebx,0x4e4a
  426ca7:	cmp    ax,bx
  426caa:	jne    0x426caf
  426cac:	mov    DWORD PTR [ebp-0x4],esi
  426caf:	lea    esi,[edx+0x1]
  426cb2:	xor    esi,ecx
  426cb4:	mov    edx,esi
  426cb6:	xor    edx,ecx
  426cb8:	lea    eax,[edi+edx*2+0x64e5e6]
  426cbf:	mov    bl,BYTE PTR [eax]
  426cc1:	sub    bl,0x2
  426cc4:	xor    bl,0x7d
  426cc7:	cmp    bl,0x83
  426cca:	jne    0x426c8f
  426ccc:	mov    eax,DWORD PTR [ebp-0x4]
  426ccf:	pop    ebx
  426cd0:	cmp    eax,0xf89c85a0
  426cd5:	je     0x426ce3
  426cd7:	xor    eax,ecx
  426cd9:	xor    ecx,ecx
  426cdb:	mov    WORD PTR [edi+eax*2+0x64e5e6],cx
  426ce3:	mov    eax,edi
  426ce5:	pop    edi
  426ce6:	pop    esi
  426ce7:	leave  
  426ce8:	ret    
  426ce9:	push   ebp
  426cea:	mov    ebp,esp
  426cec:	push   ecx
  426ced:	push   esi
  426cee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426cf5:	mov    esi,0xf89c85a1
  426cfa:	call   0x426bd1
  426cff:	mov    cx,WORD PTR [eax]
  426d02:	mov    edx,0x3b5b
  426d07:	sub    cx,dx
  426d0a:	mov    edx,0x8a99
  426d0f:	xor    cx,dx
  426d12:	mov    edx,0x4e3c
  426d17:	cmp    cx,dx
  426d1a:	je     0x426d73
  426d1c:	push   ebx
  426d1d:	push   edi
  426d1e:	movzx  ecx,cx
  426d21:	mov    edx,0xffcd8d0d
  426d26:	mov    edi,0x75108ac
  426d2b:	mov    ebx,0x4e4a
  426d30:	cmp    cx,bx
  426d33:	jne    0x426d38
  426d35:	mov    DWORD PTR [ebp-0x4],esi
  426d38:	lea    esi,[edx+0x1]
  426d3b:	xor    esi,edi
  426d3d:	mov    edx,esi
  426d3f:	xor    edx,edi
  426d41:	mov    cx,WORD PTR [eax+edx*2+0x64e5e6]
  426d49:	mov    ebx,0x3b5b
  426d4e:	sub    cx,bx
  426d51:	mov    ebx,0x8a99
  426d56:	xor    cx,bx
  426d59:	mov    ebx,0x4e3c
  426d5e:	cmp    cx,bx
  426d61:	jne    0x426d2b
  426d63:	cmp    DWORD PTR [ebp-0x4],0xf89c85a0
  426d6a:	pop    edi
  426d6b:	pop    ebx
  426d6c:	je     0x426d73
  426d6e:	xor    eax,eax
  426d70:	inc    eax
  426d71:	jmp    0x426d75
  426d73:	xor    eax,eax
  426d75:	pop    esi
  426d76:	leave  
  426d77:	ret    
  426d78:	push   ebp
  426d79:	mov    ebp,esp
  426d7b:	push   ecx
  426d7c:	mov    eax,DWORD PTR [ebp+0x8]
  426d7f:	movzx  ecx,WORD PTR [eax]
  426d82:	push   esi
  426d83:	lea    eax,[ecx-0x3b5b]
  426d89:	mov    esi,0x8a99
  426d8e:	push   edi
  426d8f:	xor    eax,esi
  426d91:	mov    edi,0x4e3c
  426d96:	mov    DWORD PTR [ebp-0x4],edx
  426d99:	cmp    ax,di
  426d9c:	je     0x426dc9
  426d9e:	mov    eax,DWORD PTR [ebp+0x8]
  426da1:	sub    eax,edx
  426da3:	mov    DWORD PTR [ebp+0x8],eax
  426da6:	jmp    0x426dab
  426da8:	mov    eax,DWORD PTR [ebp+0x8]
  426dab:	mov    WORD PTR [edx],cx
  426dae:	add    edx,0x2
  426db1:	movzx  edi,WORD PTR [eax+edx*1]
  426db5:	mov    ecx,edi
  426db7:	add    edi,0xffffc4a5
  426dbd:	xor    edi,esi
  426dbf:	mov    eax,0x4e3c
  426dc4:	cmp    di,ax
  426dc7:	jne    0x426da8
  426dc9:	xor    eax,eax
  426dcb:	pop    edi
  426dcc:	mov    WORD PTR [edx],ax
  426dcf:	mov    eax,DWORD PTR [ebp-0x4]
  426dd2:	pop    esi
  426dd3:	leave  
  426dd4:	ret    0x4
  426dd7:	push   ebp
  426dd8:	mov    ebp,esp
  426dda:	sub    esp,0x18
  426ddd:	mov    DWORD PTR [ebp-0x8],0xf89c85a1
  426de4:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  426deb:	mov    ecx,DWORD PTR [ebp-0x8]
  426dee:	push   esi
  426def:	mov    eax,0x75108ac
  426df4:	xor    ecx,eax
  426df6:	mov    esi,0x3272f3
  426dfb:	add    ecx,esi
  426dfd:	mov    DWORD PTR [ebp-0x4],ecx
  426e00:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  426e07:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  426e0e:	push   edi
  426e0f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426e16:	jmp    0x426eb7
  426e1b:	mov    ecx,DWORD PTR [ebp-0x4]
  426e1e:	mov    edx,DWORD PTR [ebp+0x10]
  426e21:	sub    edx,ecx
  426e23:	mov    ecx,DWORD PTR [ebp-0xc]
  426e26:	xor    ecx,eax
  426e28:	add    ecx,esi
  426e2a:	cmp    edx,ecx
  426e2c:	jbe    0x426e49
  426e2e:	mov    edx,DWORD PTR [ebp-0x4]
  426e31:	add    edx,DWORD PTR [ebp+0x8]
  426e34:	mov    ecx,DWORD PTR [ebp-0x4]
  426e37:	add    ecx,DWORD PTR [ebp+0xc]
  426e3a:	mov    edi,DWORD PTR [ecx]
  426e3c:	mov    DWORD PTR [edx],edi
  426e3e:	mov    ecx,DWORD PTR [ecx+0x4]
  426e41:	mov    DWORD PTR [edx+0x4],ecx
  426e44:	mov    ecx,DWORD PTR [ebp-0xc]
  426e47:	jmp    0x426e96
  426e49:	mov    ecx,DWORD PTR [ebp-0x4]
  426e4c:	mov    edx,DWORD PTR [ebp+0x10]
  426e4f:	sub    edx,ecx
  426e51:	mov    ecx,DWORD PTR [ebp-0x10]
  426e54:	xor    ecx,eax
  426e56:	add    ecx,esi
  426e58:	cmp    edx,ecx
  426e5a:	mov    ecx,DWORD PTR [ebp-0x4]
  426e5d:	jbe    0x426e71
  426e5f:	add    ecx,DWORD PTR [ebp+0x8]
  426e62:	mov    edx,DWORD PTR [ebp-0x4]
  426e65:	add    edx,DWORD PTR [ebp+0xc]
  426e68:	mov    edx,DWORD PTR [edx]
  426e6a:	mov    DWORD PTR [ecx],edx
  426e6c:	mov    ecx,DWORD PTR [ebp-0x10]
  426e6f:	jmp    0x426e96
  426e71:	mov    edx,DWORD PTR [ebp+0x10]
  426e74:	sub    edx,ecx
  426e76:	mov    ecx,DWORD PTR [ebp-0x14]
  426e79:	xor    ecx,eax
  426e7b:	add    ecx,esi
  426e7d:	cmp    edx,ecx
  426e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  426e82:	jbe    0x426ea7
  426e84:	add    ecx,DWORD PTR [ebp+0x8]
  426e87:	mov    edx,DWORD PTR [ebp-0x4]
  426e8a:	add    edx,DWORD PTR [ebp+0xc]
  426e8d:	mov    dx,WORD PTR [edx]
  426e90:	mov    WORD PTR [ecx],dx
  426e93:	mov    ecx,DWORD PTR [ebp-0x14]
  426e96:	mov    edx,DWORD PTR [ebp-0x4]
  426e99:	xor    ecx,eax
  426e9b:	lea    ecx,[ecx+edx*1+0x3272f3]
  426ea2:	mov    DWORD PTR [ebp-0x4],ecx
  426ea5:	jmp    0x426eb7
  426ea7:	add    ecx,DWORD PTR [ebp+0x8]
  426eaa:	mov    edx,DWORD PTR [ebp-0x4]
  426ead:	add    edx,DWORD PTR [ebp+0xc]
  426eb0:	mov    dl,BYTE PTR [edx]
  426eb2:	mov    BYTE PTR [ecx],dl
  426eb4:	inc    DWORD PTR [ebp-0x4]
  426eb7:	mov    ecx,DWORD PTR [ebp-0x18]
  426eba:	mov    edx,DWORD PTR [ebp+0x10]
  426ebd:	xor    ecx,eax
  426ebf:	add    ecx,esi
  426ec1:	imul   ecx,edx
  426ec4:	mov    edx,DWORD PTR [ebp-0x8]
  426ec7:	mov    edi,DWORD PTR [ebp-0x4]
  426eca:	xor    edx,eax
  426ecc:	lea    edx,[edx+edi*1+0x3272f3]
  426ed3:	cmp    edx,ecx
  426ed5:	jb     0x426e1b
  426edb:	pop    edi
  426edc:	pop    esi
  426edd:	leave  
  426ede:	ret    0xc
  426ee1:	push   ebp
  426ee2:	mov    ebp,esp
  426ee4:	sub    esp,0xc
  426ee7:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426eee:	push   esi
  426eef:	mov    esi,eax
  426ef1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  426ef8:	mov    edx,DWORD PTR [ebp-0x4]
  426efb:	mov    eax,0x75108ac
  426f00:	xor    edx,eax
  426f02:	mov    ecx,0x3272f3
  426f07:	add    edx,ecx
  426f09:	cmp    esi,edx
  426f0b:	je     0x426f4d
  426f0d:	push   ebx
  426f0e:	push   edi
  426f0f:	mov    edx,DWORD PTR [ebp-0x8]
  426f12:	mov    ebx,DWORD PTR [ebp+0x8]
  426f15:	xor    edx,eax
  426f17:	mov    edi,0xffcd8d0d
  426f1c:	sub    edi,edx
  426f1e:	add    esi,edi
  426f20:	lea    edx,[esi-0x3272f3]
  426f26:	xor    edx,eax
  426f28:	mov    DWORD PTR [ebp-0xc],edx
  426f2b:	mov    edx,DWORD PTR [ebp-0x4]
  426f2e:	mov    edi,DWORD PTR [ebp-0xc]
  426f31:	xor    dl,0xac
  426f34:	sub    dl,0xd
  426f37:	xor    edi,eax
  426f39:	mov    BYTE PTR [edi+ebx*1+0x3272f3],dl
  426f40:	mov    edx,DWORD PTR [ebp-0x4]
  426f43:	xor    edx,eax
  426f45:	add    edx,ecx
  426f47:	cmp    esi,edx
  426f49:	jne    0x426f0f
  426f4b:	pop    edi
  426f4c:	pop    ebx
  426f4d:	pop    esi
  426f4e:	leave  
  426f4f:	ret    0x4
  426f52:	push   ebp
  426f53:	mov    ebp,esp
  426f55:	sub    esp,0x21c
  426f5b:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426f62:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  426f69:	mov    eax,DWORD PTR [ebp+0x10]
  426f6c:	mov    eax,DWORD PTR [ebp-0x4]
  426f6f:	mov    ecx,DWORD PTR [ebp+0x8]
  426f72:	push   esi
  426f73:	push   edi
  426f74:	mov    edi,0x75108ac
  426f79:	xor    eax,edi
  426f7b:	mov    esi,0x3272f3
  426f80:	add    eax,esi
  426f82:	cmp    eax,ecx
  426f84:	mov    eax,DWORD PTR [ebp-0x4]
  426f87:	jne    0x426f92
  426f89:	xor    eax,edi
  426f8b:	add    eax,esi
  426f8d:	jmp    0x42703e
  426f92:	mov    ecx,DWORD PTR [ebp+0xc]
  426f95:	xor    eax,edi
  426f97:	add    eax,esi
  426f99:	cmp    eax,ecx
  426f9b:	jne    0x426fa2
  426f9d:	mov    eax,DWORD PTR [ebp-0x4]
  426fa0:	jmp    0x426f89
  426fa2:	lea    eax,[ebp-0x21c]
  426fa8:	mov    DWORD PTR [ebp-0x8],eax
  426fab:	mov    eax,DWORD PTR [ebp+0xc]
  426fae:	mov    DWORD PTR [ebp-0x10],eax
  426fb1:	mov    eax,DWORD PTR [ebp-0x4]
  426fb4:	xor    eax,edi
  426fb6:	add    eax,esi
  426fb8:	mov    DWORD PTR [ebp+0x10],eax
  426fbb:	mov    eax,DWORD PTR [ebp+0xc]
  426fbe:	push   ebx
  426fbf:	call   0x426ce9
  426fc4:	mov    ebx,eax
  426fc6:	mov    eax,DWORD PTR [ebp+0x8]
  426fc9:	mov    eax,DWORD PTR [eax+0x14]
  426fcc:	jmp    0x427026
  426fce:	mov    eax,DWORD PTR [ebp+0xc]
  426fd1:	sub    eax,0x8
  426fd4:	mov    DWORD PTR [ebp-0xc],eax
  426fd7:	mov    eax,DWORD PTR [ebp-0xc]
  426fda:	mov    eax,DWORD PTR [eax+0x28]
  426fdd:	call   0x426bd1
  426fe2:	mov    DWORD PTR [ebp+0x10],eax
  426fe5:	push   DWORD PTR [ebp+0x10]
  426fe8:	mov    edx,DWORD PTR [ebp-0x8]
  426feb:	call   0x426d78
  426ff0:	mov    eax,DWORD PTR [ebp-0x4]
  426ff3:	xor    eax,edi
  426ff5:	add    eax,esi
  426ff7:	cmp    eax,ebx
  426ff9:	jne    0x427003
  426ffb:	mov    eax,DWORD PTR [ebp-0x8]
  426ffe:	call   0x426c5f
  427003:	mov    eax,DWORD PTR [ebp-0x14]
  427006:	xor    eax,edi
  427008:	add    eax,esi
  42700a:	push   eax
  42700b:	push   DWORD PTR [ebp-0x10]
  42700e:	mov    eax,DWORD PTR [ebp-0x8]
  427011:	call   0x42698b
  427016:	mov    ecx,DWORD PTR [ebp-0x4]
  427019:	xor    ecx,edi
  42701b:	add    ecx,esi
  42701d:	cmp    eax,ecx
  42701f:	je     0x427044
  427021:	mov    eax,DWORD PTR [ebp+0xc]
  427024:	mov    eax,DWORD PTR [eax]
  427026:	mov    DWORD PTR [ebp+0xc],eax
  427029:	mov    eax,DWORD PTR [ebp+0x8]
  42702c:	mov    ecx,DWORD PTR [ebp+0xc]
  42702f:	add    eax,0x14
  427032:	cmp    ecx,eax
  427034:	jne    0x426fce
  427036:	mov    eax,DWORD PTR [ebp-0x4]
  427039:	xor    eax,edi
  42703b:	add    eax,esi
  42703d:	pop    ebx
  42703e:	pop    edi
  42703f:	pop    esi
  427040:	leave  
  427041:	ret    0xc
  427044:	mov    eax,DWORD PTR [ebp-0xc]
  427047:	mov    eax,DWORD PTR [eax+0x18]
  42704a:	jmp    0x42703d
  42704c:	push   ebp
  42704d:	mov    ebp,esp
  42704f:	mov    eax,DWORD PTR [ebp+0xc]
  427052:	sub    esp,0x10
  427055:	cmp    DWORD PTR [ebp+0x8],0x0
  427059:	push   ebx
  42705a:	push   esi
  42705b:	push   edi
  42705c:	je     0x427111
  427062:	test   eax,eax
  427064:	je     0x427111
  42706a:	movzx  eax,WORD PTR [eax+0x20]
  42706e:	mov    ecx,eax
  427070:	mov    DWORD PTR [ebp-0x10],eax
  427073:	xor    edx,edx
  427075:	and    DWORD PTR [ebp-0x8],edx
  427078:	mov    eax,0x8a99
  42707d:	xor    ecx,eax
  42707f:	add    ecx,0x3b5b
  427085:	mov    DWORD PTR [ebp-0xc],ecx
  427088:	and    DWORD PTR [ebp-0x4],0x0
  42708c:	xor    ecx,ecx
  42708e:	push   0x7d
  427090:	pop    edi
  427091:	cmp    cx,WORD PTR [ebp-0xc]
  427095:	jae    0x4270fb
  427097:	lea    esi,[edx-0x3b5b]
  42709d:	xor    esi,eax
  42709f:	movzx  ecx,WORD PTR [ebp-0x4]
  4270a3:	mov    ebx,DWORD PTR [ebp+0xc]
  4270a6:	lea    ecx,[ebx+ecx*4]
  4270a9:	cmp    WORD PTR [ecx+0x2],si
  4270ad:	jne    0x4270e6
  4270af:	movzx  ecx,WORD PTR [ecx]
  4270b2:	mov    edi,0x4e3c
  4270b7:	cmp    cx,di
  4270ba:	jne    0x4270c8
  4270bc:	mov    ebx,DWORD PTR [ebp+0x8]
  4270bf:	movzx  edi,dx
  4270c2:	cmp    BYTE PTR [edi+ebx*1],0x0
  4270c6:	je     0x4270f5
  4270c8:	mov    ebx,DWORD PTR [ebp+0x8]
  4270cb:	movzx  edi,dx
  4270ce:	movsx  di,BYTE PTR [edi+ebx*1]
  4270d3:	mov    ebx,0x3b5b
  4270d8:	sub    di,bx
  4270db:	xor    di,ax
  4270de:	cmp    cx,di
  4270e1:	je     0x4270f5
  4270e3:	push   0xffffff83
  4270e5:	pop    edi
  4270e6:	inc    DWORD PTR [ebp-0x4]
  4270e9:	mov    cx,WORD PTR [ebp-0xc]
  4270ed:	cmp    WORD PTR [ebp-0x4],cx
  4270f1:	jb     0x42709f
  4270f3:	jmp    0x4270fb
  4270f5:	inc    DWORD PTR [ebp-0x8]
  4270f8:	push   0xffffff82
  4270fa:	pop    edi
  4270fb:	mov    esi,DWORD PTR [ebp+0x8]
  4270fe:	movzx  ecx,dx
  427101:	cmp    BYTE PTR [ecx+esi*1],0x0
  427105:	je     0x42711a
  427107:	inc    edx
  427108:	cmp    edi,0xffffff83
  42710b:	jne    0x427088
  427111:	xor    eax,eax
  427113:	pop    edi
  427114:	pop    esi
  427115:	pop    ebx
  427116:	leave  
  427117:	ret    0x8
  42711a:	mov    ecx,DWORD PTR [ebp-0x8]
  42711d:	add    ecx,0xffffc4a5
  427123:	xor    cx,ax
  427126:	xor    eax,eax
  427128:	cmp    cx,WORD PTR [ebp-0x10]
  42712c:	sete   al
  42712f:	jmp    0x427113
  427131:	push   ebp
  427132:	mov    ebp,esp
  427134:	sub    esp,0x50
  427137:	push   edi
  427138:	mov    edi,eax
  42713a:	mov    eax,DWORD PTR [edi+0x1a8]
  427140:	cmp    DWORD PTR [eax],0x0
  427143:	jne    0x42714c
  427145:	xor    eax,eax
  427147:	jmp    0x42727d
  42714c:	push   DWORD PTR [ebp+0x8]
  42714f:	push   0x2c
  427151:	pop    eax
  427152:	call   0x426ee1
  427157:	mov    edx,DWORD PTR [edi+0x1ac]
  42715d:	lea    eax,[edi+0x22]
  427160:	mov    DWORD PTR [ebp-0x4c],eax
  427163:	lea    eax,[edi+0x44]
  427166:	mov    DWORD PTR [ebp-0x48],eax
  427169:	lea    eax,[edi+0x66]
  42716c:	mov    DWORD PTR [ebp-0x44],eax
  42716f:	lea    eax,[edi+0x88]
  427175:	mov    DWORD PTR [ebp-0x40],eax
  427178:	lea    eax,[edi+0xaa]
  42717e:	mov    DWORD PTR [ebp-0x3c],eax
  427181:	lea    eax,[edi+0xcc]
  427187:	mov    DWORD PTR [ebp-0x38],eax
  42718a:	lea    eax,[edi+0xee]
  427190:	mov    DWORD PTR [ebp-0x34],eax
  427193:	lea    eax,[edi+0x110]
  427199:	mov    DWORD PTR [ebp-0x30],eax
  42719c:	lea    eax,[edi+0x132]
  4271a2:	mov    DWORD PTR [ebp-0x2c],eax
  4271a5:	lea    eax,[edi+0x154]
  4271ab:	push   edi
  4271ac:	mov    DWORD PTR [ebp-0x50],edi
  4271af:	mov    DWORD PTR [ebp-0x28],eax
  4271b2:	call   0x4272b1
  4271b7:	push   eax
  4271b8:	mov    eax,DWORD PTR [edi+0x1a8]
  4271be:	push   DWORD PTR [eax]
  4271c0:	call   0x426f52
  4271c5:	mov    DWORD PTR [ebp-0x10],eax
  4271c8:	test   eax,eax
  4271ca:	je     0x42727d
  4271d0:	mov    ecx,DWORD PTR [eax+0x3c]
  4271d3:	push   ebx
  4271d4:	push   esi
  4271d5:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4271d9:	add    esi,eax
  4271db:	mov    edi,DWORD PTR [esi+0x24]
  4271de:	mov    ecx,DWORD PTR [esi+0x1c]
  4271e1:	mov    edx,DWORD PTR [esi+0x20]
  4271e4:	mov    ebx,DWORD PTR [esi+0x18]
  4271e7:	add    edi,eax
  4271e9:	mov    DWORD PTR [ebp-0x20],edi
  4271ec:	mov    edi,DWORD PTR [esi+0x14]
  4271ef:	add    ecx,eax
  4271f1:	add    edx,eax
  4271f3:	mov    DWORD PTR [ebp-0xc],ecx
  4271f6:	mov    DWORD PTR [ebp-0x1c],edx
  4271f9:	mov    DWORD PTR [ebp-0x8],edi
  4271fc:	cmp    edi,ebx
  4271fe:	ja     0x427203
  427200:	mov    DWORD PTR [ebp-0x8],ebx
  427203:	xor    ebx,ebx
  427205:	mov    DWORD PTR [ebp-0x18],ebx
  427208:	cmp    DWORD PTR [ebp-0x8],ebx
  42720b:	jbe    0x42727b
  42720d:	jmp    0x427212
  42720f:	mov    edx,DWORD PTR [ebp-0x1c]
  427212:	mov    edi,DWORD PTR [ebp-0x20]
  427215:	movzx  edi,WORD PTR [edi+ebx*2]
  427219:	cmp    ebx,DWORD PTR [esi+0x18]
  42721c:	jae    0x42727b
  42721e:	cmp    edi,DWORD PTR [esi+0x14]
  427221:	jae    0x42727b
  427223:	mov    ebx,DWORD PTR [edx+ebx*4]
  427226:	mov    edx,DWORD PTR [ebp+0x8]
  427229:	mov    edi,DWORD PTR [ecx+edi*4]
  42722c:	mov    DWORD PTR [ebp-0x4],edx
  42722f:	lea    edx,[ebp-0x50]
  427232:	add    ebx,eax
  427234:	add    edi,eax
  427236:	sub    edx,DWORD PTR [ebp+0x8]
  427239:	mov    DWORD PTR [ebp-0x14],0xb
  427240:	mov    DWORD PTR [ebp-0x24],edx
  427243:	mov    edx,DWORD PTR [ebp-0x4]
  427246:	cmp    DWORD PTR [edx],0x0
  427249:	jne    0x427266
  42724b:	mov    eax,DWORD PTR [ebp-0x24]
  42724e:	push   DWORD PTR [eax+edx*1]
  427251:	push   ebx
  427252:	call   0x42704c
  427257:	mov    ecx,DWORD PTR [ebp-0xc]
  42725a:	test   eax,eax
  42725c:	je     0x427263
  42725e:	mov    eax,DWORD PTR [ebp-0x4]
  427261:	mov    DWORD PTR [eax],edi
  427263:	mov    eax,DWORD PTR [ebp-0x10]
  427266:	add    DWORD PTR [ebp-0x4],0x4
  42726a:	dec    DWORD PTR [ebp-0x14]
  42726d:	jne    0x427243
  42726f:	mov    ebx,DWORD PTR [ebp-0x18]
  427272:	inc    ebx
  427273:	mov    DWORD PTR [ebp-0x18],ebx
  427276:	cmp    ebx,DWORD PTR [ebp-0x8]
  427279:	jb     0x42720f
  42727b:	pop    esi
  42727c:	pop    ebx
  42727d:	pop    edi
  42727e:	leave  
  42727f:	ret    0x4
  427282:	push   ebp
  427283:	mov    ebp,esp
  427285:	mov    eax,DWORD PTR [ebp+0x8]
  427288:	push   esi
  427289:	push   DWORD PTR [eax+0x1e0]
  42728f:	lea    esi,[eax+0x198]
  427295:	mov    eax,DWORD PTR [ebp+0x8]
  427298:	call   0x427131
  42729d:	mov    ecx,DWORD PTR [esi]
  42729f:	mov    DWORD PTR [ecx],eax
  4272a1:	mov    eax,DWORD PTR [esi]
  4272a3:	xor    ecx,ecx
  4272a5:	cmp    DWORD PTR [eax],ecx
  4272a7:	pop    esi
  4272a8:	setne  cl
  4272ab:	mov    eax,ecx
  4272ad:	pop    ebp
  4272ae:	ret    0x4
  4272b1:	mov    ecx,DWORD PTR [edi+0x188]
  4272b7:	push   ebx
  4272b8:	jmp    0x4272cd
  4272ba:	xor    eax,0x8a99
  4272bf:	add    eax,0x3b5b
  4272c4:	mov    WORD PTR [ecx],ax
  4272c7:	add    ecx,0x2
  4272ca:	add    edx,0x2
  4272cd:	movzx  eax,WORD PTR [edx]
  4272d0:	mov    ebx,0x4e3c
  4272d5:	cmp    ax,bx
  4272d8:	jne    0x4272ba
  4272da:	xor    eax,eax
  4272dc:	mov    WORD PTR [ecx],ax
  4272df:	mov    eax,DWORD PTR [edi+0x188]
  4272e5:	pop    ebx
  4272e6:	ret    
  4272e7:	push   edi
  4272e8:	mov    edi,eax
  4272ea:	mov    eax,DWORD PTR [esi+0x188]
  4272f0:	shl    edi,0x6
  4272f3:	add    eax,edi
  4272f5:	jmp    0x427301
  4272f7:	xor    cl,0x7d
  4272fa:	add    cl,0x2
  4272fd:	mov    BYTE PTR [eax],cl
  4272ff:	inc    eax
  427300:	inc    edx
  427301:	mov    cl,BYTE PTR [edx]
  427303:	cmp    cl,0x83
  427306:	jne    0x4272f7
  427308:	mov    BYTE PTR [eax],0x0
  42730b:	mov    eax,DWORD PTR [esi+0x188]
  427311:	add    eax,edi
  427313:	pop    edi
  427314:	ret    
  427315:	push   ebp
  427316:	mov    ebp,esp
  427318:	sub    esp,0x14
  42731b:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  427322:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  427329:	mov    eax,DWORD PTR [ebx]
  42732b:	mov    DWORD PTR [ebp-0x8],eax
  42732e:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  427335:	push   esi
  427336:	push   edi
  427337:	mov    DWORD PTR [ebp-0x14],0xead71881
  42733e:	mov    edi,DWORD PTR [ebp-0x4]
  427341:	mov    ecx,DWORD PTR [ebp-0x10]
  427344:	mov    eax,0x75108ac
  427349:	xor    edi,eax
  42734b:	mov    edx,0x3272f3
  427350:	xor    ecx,eax
  427352:	add    edi,edx
  427354:	add    ecx,edx
  427356:	imul   edi,ecx
  427359:	jmp    0x4273a1
  42735b:	mov    ecx,DWORD PTR [ebp-0x8]
  42735e:	mov    esi,DWORD PTR [ebp-0x4]
  427361:	xor    ecx,eax
  427363:	xor    esi,eax
  427365:	add    ecx,edx
  427367:	add    esi,edx
  427369:	test   esi,ecx
  42736b:	mov    esi,DWORD PTR [ebp-0x8]
  42736e:	mov    ecx,DWORD PTR [ebp-0x4]
  427371:	je     0x427388
  427373:	xor    ecx,eax
  427375:	xor    esi,eax
  427377:	add    ecx,edx
  427379:	add    esi,edx
  42737b:	shr    esi,cl
  42737d:	mov    ecx,DWORD PTR [ebp-0x14]
  427380:	xor    ecx,eax
  427382:	add    ecx,edx
  427384:	xor    esi,ecx
  427386:	jmp    0x427392
  427388:	xor    esi,eax
  42738a:	xor    ecx,eax
  42738c:	add    esi,edx
  42738e:	add    ecx,edx
  427390:	shr    esi,cl
  427392:	mov    DWORD PTR [ebp-0x8],esi
  427395:	mov    ecx,DWORD PTR [ebp-0x4]
  427398:	xor    ecx,eax
  42739a:	lea    edi,[edi+ecx*1+0x3272f3]
  4273a1:	mov    ecx,DWORD PTR [ebp-0xc]
  4273a4:	mov    esi,DWORD PTR [ebp-0x4]
  4273a7:	xor    esi,eax
  4273a9:	xor    ecx,eax
  4273ab:	sub    ecx,esi
  4273ad:	cmp    edi,ecx
  4273af:	jbe    0x42735b
  4273b1:	mov    eax,DWORD PTR [ebp-0x8]
  4273b4:	pop    edi
  4273b5:	mov    DWORD PTR [ebx],eax
  4273b7:	mov    eax,DWORD PTR [ebp-0x8]
  4273ba:	pop    esi
  4273bb:	leave  
  4273bc:	ret    
  4273bd:	push   ebp
  4273be:	mov    ebp,esp
  4273c0:	sub    esp,0x38
  4273c3:	push   ebx
  4273c4:	mov    ebx,0xf89c85a1
  4273c9:	mov    DWORD PTR [ebp-0x4],ebx
  4273cc:	lea    ecx,[ebx+0x1]
  4273cf:	mov    DWORD PTR [ebp-0x24],ecx
  4273d2:	mov    eax,DWORD PTR [ebp-0x4]
  4273d5:	mov    edx,DWORD PTR [ebp+0x8]
  4273d8:	push   esi
  4273d9:	mov    esi,0x75108ac
  4273de:	xor    eax,esi
  4273e0:	push   edi
  4273e1:	mov    edi,0x3272f3
  4273e6:	add    eax,edi
  4273e8:	cmp    edx,eax
  4273ea:	mov    eax,DWORD PTR [ebp-0x4]
  4273ed:	je     0x427552
  4273f3:	mov    edx,DWORD PTR [ebp+0xc]
  4273f6:	xor    eax,esi
  4273f8:	add    eax,edi
  4273fa:	cmp    edx,eax
  4273fc:	je     0x42754f
  427402:	mov    eax,DWORD PTR [ebp+0x10]
  427405:	mov    edx,DWORD PTR [ebp+0xc]
  427408:	mov    DWORD PTR [ebp-0x14],eax
  42740b:	mov    eax,DWORD PTR [ebp+0x8]
  42740e:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  427415:	mov    DWORD PTR [ebp-0xc],eax
  427418:	lea    eax,[ebx+0x2]
  42741b:	mov    DWORD PTR [ebp-0x1c],eax
  42741e:	mov    DWORD PTR [ebp-0x10],ebx
  427421:	mov    DWORD PTR [ebp+0xc],ecx
  427424:	mov    DWORD PTR [ebp+0x10],eax
  427427:	mov    eax,DWORD PTR [ebp+0xc]
  42742a:	xor    eax,esi
  42742c:	mov    DWORD PTR [ebp-0x20],edx
  42742f:	sub    edx,eax
  427431:	sub    edx,edi
  427433:	mov    DWORD PTR [ebp+0x8],edx
  427436:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  42743d:	jmp    0x42753f
  427442:	mov    eax,DWORD PTR [ebp+0xc]
  427445:	mov    ecx,DWORD PTR [ebp+0xc]
  427448:	xor    eax,esi
  42744a:	xor    ecx,esi
  42744c:	lea    ecx,[eax+ecx*1+0x64e5e6]
  427453:	mov    eax,DWORD PTR [ebp+0x8]
  427456:	xor    edx,edx
  427458:	div    ecx
  42745a:	mov    eax,DWORD PTR [ebp+0x10]
  42745d:	mov    ecx,DWORD PTR [ebp+0xc]
  427460:	xor    eax,esi
  427462:	xor    ecx,esi
  427464:	sub    eax,ecx
  427466:	cmp    edx,eax
  427468:	jne    0x4274fe
  42746e:	mov    eax,DWORD PTR [ebp+0x8]
  427471:	mov    ecx,DWORD PTR [ebp-0xc]
  427474:	mov    dl,BYTE PTR [eax+ecx*1]
  427477:	mov    eax,DWORD PTR [ebp-0x10]
  42747a:	mov    ecx,DWORD PTR [ebp-0x8]
  42747d:	xor    eax,esi
  42747f:	xor    ecx,esi
  427481:	add    eax,edi
  427483:	add    ecx,edi
  427485:	cmp    eax,ecx
  427487:	jae    0x4274cf
  427489:	lea    ecx,[eax-0x3272f3]
  42748f:	mov    DWORD PTR [ebp-0x4],ecx
  427492:	mov    ebx,DWORD PTR [ebp-0x4]
  427495:	xor    ebx,esi
  427497:	add    ebx,0x7f55d8e3
  42749d:	lea    ecx,[ebp+eax*4-0x38]
  4274a1:	mov    DWORD PTR [ecx],ebx
  4274a3:	mov    ebx,DWORD PTR [ecx]
  4274a5:	cmp    ebx,0x244ecb9c
  4274ab:	jbe    0x4274b5
  4274ad:	add    DWORD PTR [ecx],0x405fcdd
  4274b3:	jmp    0x4274bb
  4274b5:	add    DWORD PTR [ecx],0xfdaf4323
  4274bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4274be:	xor    ecx,esi
  4274c0:	inc    eax
  4274c1:	inc    DWORD PTR [ebp-0x4]
  4274c4:	add    ecx,edi
  4274c6:	cmp    eax,ecx
  4274c8:	jb     0x427492
  4274ca:	mov    ebx,0xf89c85a1
  4274cf:	cmp    DWORD PTR [ebp-0x14],0x0
  4274d3:	jne    0x4274dd
  4274d5:	xor    dl,0x7d
  4274d8:	add    dl,0x2
  4274db:	jmp    0x4274f3
  4274dd:	mov    eax,DWORD PTR [ebp-0x18]
  4274e0:	xor    al,0xac
  4274e2:	mov    cl,0xd
  4274e4:	sub    cl,al
  4274e6:	add    dl,cl
  4274e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4274eb:	xor    cl,0xac
  4274ee:	sub    cl,0xd
  4274f1:	ror    dl,cl
  4274f3:	xor    eax,eax
  4274f5:	mov    eax,DWORD PTR [ebp+0x8]
  4274f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4274fb:	mov    BYTE PTR [eax+ecx*1],dl
  4274fe:	mov    eax,DWORD PTR [ebp+0x8]
  427501:	mov    ecx,DWORD PTR [ebp-0x10]
  427504:	sub    eax,edi
  427506:	xor    eax,esi
  427508:	cmp    eax,ecx
  42750a:	jne    0x42752d
  42750c:	mov    eax,DWORD PTR [ebp+0x10]
  42750f:	mov    ecx,DWORD PTR [ebp+0xc]
  427512:	xor    eax,esi
  427514:	xor    ecx,esi
  427516:	sub    eax,ecx
  427518:	mov    ecx,DWORD PTR [ebp-0x20]
  42751b:	sub    eax,edi
  42751d:	xor    eax,esi
  42751f:	mov    DWORD PTR [ebp+0x10],eax
  427522:	mov    eax,DWORD PTR [ebp+0xc]
  427525:	xor    eax,esi
  427527:	sub    ecx,eax
  427529:	sub    ecx,edi
  42752b:	jmp    0x42753c
  42752d:	mov    eax,DWORD PTR [ebp+0xc]
  427530:	xor    eax,esi
  427532:	mov    ecx,0xffcd8d0d
  427537:	sub    ecx,eax
  427539:	add    ecx,DWORD PTR [ebp+0x8]
  42753c:	mov    DWORD PTR [ebp+0x8],ecx
  42753f:	mov    eax,DWORD PTR [ebp+0x10]
  427542:	cmp    eax,ebx
  427544:	jne    0x427442
  42754a:	mov    eax,DWORD PTR [ebp-0x24]
  42754d:	jmp    0x427552
  42754f:	mov    eax,DWORD PTR [ebp-0x4]
  427552:	xor    eax,esi
  427554:	add    eax,edi
  427556:	pop    edi
  427557:	pop    esi
  427558:	pop    ebx
  427559:	leave  
  42755a:	ret    0xc
  42755d:	push   ebp
  42755e:	mov    ebp,esp
  427560:	sub    esp,0x420
  427566:	mov    DWORD PTR [ebp-0x14],0xf89c85a1
  42756d:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427574:	mov    DWORD PTR [ebp-0x18],0xf89c86a1
  42757b:	push   ebx
  42757c:	mov    DWORD PTR [ebp-0x1c],0xf89c85a0
  427583:	mov    eax,DWORD PTR [ebp-0x14]
  427586:	push   esi
  427587:	mov    esi,0x75108ac
  42758c:	push   edi
  42758d:	xor    eax,esi
  42758f:	mov    edi,0x3272f3
  427594:	add    eax,edi
  427596:	mov    DWORD PTR [ebp-0x8],eax
  427599:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  4275a0:	mov    DWORD PTR [ebp-0x4],0xead71881
  4275a7:	mov    DWORD PTR [ebp-0x10],0x8
  4275ae:	mov    ecx,ecx
  4275b0:	mov    eax,DWORD PTR [ebp-0xc]
  4275b3:	mov    ecx,DWORD PTR [ebp-0x14]
  4275b6:	xor    eax,esi
  4275b8:	xor    ecx,esi
  4275ba:	add    eax,edi
  4275bc:	add    ecx,edi
  4275be:	imul   eax,ecx
  4275c1:	jmp    0x4275f4
  4275c3:	mov    eax,DWORD PTR [ebp-0x4]
  4275c6:	sub    eax,edi
  4275c8:	xor    eax,esi
  4275ca:	mov    DWORD PTR [ebp-0x8],eax
  4275cd:	lea    ebx,[ebp-0x8]
  4275d0:	call   0x427315
  4275d5:	mov    DWORD PTR [ebp-0x8],eax
  4275d8:	mov    eax,DWORD PTR [ebp-0x8]
  4275db:	mov    ecx,DWORD PTR [ebp-0x4]
  4275de:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4275e5:	mov    eax,DWORD PTR [ebp-0xc]
  4275e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4275eb:	xor    eax,esi
  4275ed:	lea    eax,[eax+ecx*1+0x3272f3]
  4275f4:	mov    DWORD PTR [ebp-0x4],eax
  4275f7:	mov    eax,DWORD PTR [ebp-0x18]
  4275fa:	mov    ecx,DWORD PTR [ebp-0xc]
  4275fd:	xor    ecx,esi
  4275ff:	xor    eax,esi
  427601:	sub    eax,ecx
  427603:	mov    ecx,DWORD PTR [ebp-0x4]
  427606:	cmp    ecx,eax
  427608:	jbe    0x4275c3
  42760a:	mov    eax,DWORD PTR [ebp-0x1c]
  42760d:	xor    eax,esi
  42760f:	add    eax,edi
  427611:	mov    DWORD PTR [ebp-0x8],eax
  427614:	mov    DWORD PTR [ebp-0x18],0xf89c86a0
  42761b:	mov    ebx,ebx
  42761d:	jmp    0x427680
  42761f:	mov    ecx,DWORD PTR [ebp-0x20]
  427622:	mov    eax,DWORD PTR [ebp-0x8]
  427625:	xor    ecx,esi
  427627:	add    ecx,edi
  427629:	shr    eax,cl
  42762b:	mov    DWORD PTR [ebp-0x4],eax
  42762e:	mov    eax,DWORD PTR [ebp+0x8]
  427631:	mov    cl,BYTE PTR [eax]
  427633:	mov    BYTE PTR [ebp+0xb],cl
  427636:	mov    cl,BYTE PTR [ebp+0xb]
  427639:	mov    edx,DWORD PTR [ebp-0x8]
  42763c:	movzx  ecx,cl
  42763f:	xor    ecx,edx
  427641:	mov    DWORD PTR [ebp+0x8],ecx
  427644:	mov    ecx,DWORD PTR [ebp-0x18]
  427647:	mov    edx,DWORD PTR [ebp+0x8]
  42764a:	xor    ecx,esi
  42764c:	add    ecx,edi
  42764e:	and    ecx,edx
  427650:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427657:	mov    edx,DWORD PTR [ebp-0x4]
  42765a:	xor    ecx,edx
  42765c:	mov    DWORD PTR [ebp-0x8],ecx
  42765f:	mov    ecx,DWORD PTR [ebp-0xc]
  427662:	xor    ecx,esi
  427664:	lea    eax,[eax+ecx*1+0x3272f3]
  42766b:	mov    DWORD PTR [ebp+0x8],eax
  42766e:	mov    eax,DWORD PTR [ebp-0xc]
  427671:	xor    eax,esi
  427673:	mov    ecx,0xffcd8d0d
  427678:	sub    ecx,eax
  42767a:	add    ecx,DWORD PTR [ebp-0x10]
  42767d:	mov    DWORD PTR [ebp-0x10],ecx
  427680:	mov    eax,DWORD PTR [ebp-0x14]
  427683:	mov    ecx,DWORD PTR [ebp-0x10]
  427686:	xor    eax,esi
  427688:	add    eax,edi
  42768a:	cmp    ecx,eax
  42768c:	jne    0x42761f
  42768e:	mov    eax,DWORD PTR [ebp-0x1c]
  427691:	mov    ecx,DWORD PTR [ebp-0x8]
  427694:	xor    eax,esi
  427696:	add    eax,edi
  427698:	pop    edi
  427699:	pop    esi
  42769a:	xor    eax,ecx
  42769c:	pop    ebx
  42769d:	leave  
  42769e:	ret    0x4
  4276a1:	push   ebp
  4276a2:	mov    ebp,esp
  4276a4:	mov    eax,DWORD PTR [ebp+0x1c]
  4276a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4276aa:	mov    edx,DWORD PTR [ebp+0x10]
  4276ad:	mov    eax,DWORD PTR [eax+0x190]
  4276b3:	mov    eax,DWORD PTR [eax]
  4276b5:	sub    esp,0x64
  4276b8:	push   ebx
  4276b9:	push   esi
  4276ba:	push   edi
  4276bb:	mov    edi,0x75108ac
  4276c0:	xor    ecx,edi
  4276c2:	mov    ebx,0x3272f3
  4276c7:	add    ecx,ebx
  4276c9:	cmp    ecx,edx
  4276cb:	jne    0x4276dc
  4276cd:	or     DWORD PTR ds:0x3750c3f,0x4263eb28
  4276d7:	jmp    0x427bd8
  4276dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4276df:	mov    esi,DWORD PTR [ebp+0x14]
  4276e2:	mov    edx,DWORD PTR [esi]
  4276e4:	xor    ecx,edi
  4276e6:	add    ecx,ebx
  4276e8:	cmp    edx,ecx
  4276ea:	je     0x427b93
  4276f0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4276f3:	mov    DWORD PTR [ebp-0x1c],eax
  4276f6:	mov    DWORD PTR [ebp+0x1c],ecx
  4276f9:	mov    ecx,DWORD PTR [ebp+0x18]
  4276fc:	mov    eax,DWORD PTR [esi]
  4276fe:	mov    DWORD PTR [ebp-0x20],eax
  427701:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  427708:	mov    edx,0xf89c85a2
  42770d:	mov    DWORD PTR [ebp-0x8],edx
  427710:	mov    eax,DWORD PTR [ebp+0x1c]
  427713:	mov    DWORD PTR [ebp+0x1c],eax
  427716:	mov    eax,DWORD PTR [ebp+0x1c]
  427719:	mov    eax,DWORD PTR [eax+0x190]
  42771f:	mov    eax,DWORD PTR [eax]
  427721:	mov    DWORD PTR [ebp-0x24],ecx
  427724:	mov    ecx,DWORD PTR [ebp+0x1c]
  427727:	mov    ecx,DWORD PTR [ecx+0x190]
  42772d:	mov    ecx,DWORD PTR [ecx]
  42772f:	add    ecx,DWORD PTR [eax+0x3c]
  427732:	mov    DWORD PTR [ebp+0x10],ecx
  427735:	mov    eax,DWORD PTR [ebp+0x8]
  427738:	xor    eax,edi
  42773a:	add    eax,ebx
  42773c:	mov    DWORD PTR [ebp-0x4],eax
  42773f:	mov    eax,DWORD PTR [ebp+0x8]
  427742:	xor    eax,edi
  427744:	add    eax,ebx
  427746:	mov    DWORD PTR [ebp+0x18],eax
  427749:	mov    eax,DWORD PTR [ebp+0x10]
  42774c:	mov    eax,DWORD PTR [eax+0x50]
  42774f:	sub    eax,0xc
  427752:	mov    DWORD PTR [ebp-0x28],eax
  427755:	mov    eax,DWORD PTR [ebp+0x10]
  427758:	mov    eax,DWORD PTR [eax+0x38]
  42775b:	mov    ecx,DWORD PTR [ebp+0x10]
  42775e:	dec    eax
  42775f:	test   DWORD PTR [ecx+0x54],eax
  427762:	mov    eax,DWORD PTR [ebp+0x10]
  427765:	je     0x42777f
  427767:	mov    eax,DWORD PTR [eax+0x38]
  42776a:	mov    ecx,DWORD PTR [ebp+0x10]
  42776d:	mov    ecx,DWORD PTR [ecx+0x54]
  427770:	dec    eax
  427771:	not    eax
  427773:	and    ecx,eax
  427775:	mov    eax,DWORD PTR [ebp+0x10]
  427778:	mov    eax,DWORD PTR [eax+0x38]
  42777b:	add    eax,ecx
  42777d:	jmp    0x427782
  42777f:	mov    eax,DWORD PTR [eax+0x54]
  427782:	mov    DWORD PTR [ebp+0x1c],eax
  427785:	mov    eax,DWORD PTR [ebp+0x8]
  427788:	xor    eax,edi
  42778a:	add    eax,ebx
  42778c:	mov    DWORD PTR [ebp+0x18],eax
  42778f:	mov    eax,DWORD PTR [ebp+0x8]
  427792:	xor    eax,edi
  427794:	add    eax,ebx
  427796:	mov    DWORD PTR [ebp+0x18],eax
  427799:	mov    eax,DWORD PTR [ebp+0x8]
  42779c:	mov    ecx,DWORD PTR [ebp-0x24]
  42779f:	xor    eax,edi
  4277a1:	add    eax,ebx
  4277a3:	mov    DWORD PTR [ecx],eax
  4277a5:	mov    DWORD PTR [ebp+0x18],edx
  4277a8:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  4277af:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  4277b6:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  4277bd:	mov    eax,DWORD PTR [ebp-0x8]
  4277c0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4277c3:	xor    eax,edi
  4277c5:	add    eax,ebx
  4277c7:	imul   eax,ecx
  4277ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4277cd:	mov    edx,DWORD PTR [ebp-0x28]
  4277d0:	xor    ecx,edi
  4277d2:	lea    ecx,[ecx+edx*1+0x3272f3]
  4277d9:	cmp    eax,ecx
  4277db:	jae    0x427b8c
  4277e1:	mov    eax,DWORD PTR [ebp+0x8]
  4277e4:	xor    eax,edi
  4277e6:	add    eax,ebx
  4277e8:	mov    DWORD PTR [ebp+0x18],eax
  4277eb:	mov    eax,DWORD PTR [ebp+0x1c]
  4277ee:	add    eax,DWORD PTR [ebp-0x1c]
  4277f1:	mov    DWORD PTR [ebp-0x4],eax
  4277f4:	push   DWORD PTR [ebp-0x4]
  4277f7:	mov    esi,DWORD PTR [ebp-0x1c]
  4277fa:	mov    ecx,DWORD PTR [ebp+0x10]
  4277fd:	call   0x42694d
  427802:	mov    DWORD PTR [ebp+0xc],eax
  427805:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  42780c:	mov    eax,DWORD PTR [ebp-0x18]
  42780f:	xor    eax,edi
  427811:	lea    ecx,[ebp-0x40]
  427814:	add    eax,ebx
  427816:	push   ecx
  427817:	call   0x426ee1
  42781c:	mov    eax,DWORD PTR [ebp+0xc]
  42781f:	test   eax,eax
  427821:	je     0x427871
  427823:	mov    eax,DWORD PTR [ebp-0x18]
  427826:	xor    eax,edi
  427828:	add    eax,ebx
  42782a:	push   eax
  42782b:	push   DWORD PTR [ebp+0xc]
  42782e:	lea    eax,[ebp-0x40]
  427831:	push   eax
  427832:	call   0x426dd7
  427837:	mov    eax,DWORD PTR [ebp-0x4]
  42783a:	mov    DWORD PTR [ebp-0x18],eax
  42783d:	mov    eax,DWORD PTR [ebp-0x18]
  427840:	mov    ecx,DWORD PTR [ebp-0x1c]
  427843:	sub    eax,ecx
  427845:	mov    DWORD PTR [ebp-0x18],eax
  427848:	mov    eax,DWORD PTR [ebp+0xc]
  42784b:	mov    ecx,DWORD PTR [ebp+0xc]
  42784e:	mov    eax,DWORD PTR [eax+0x10]
  427851:	add    eax,DWORD PTR [ecx+0xc]
  427854:	mov    ecx,DWORD PTR [ebp-0x18]
  427857:	cmp    ecx,eax
  427859:	jb     0x427871
  42785b:	mov    eax,DWORD PTR [ebp+0xc]
  42785e:	mov    eax,DWORD PTR [eax+0xc]
  427861:	mov    ecx,DWORD PTR [ebp+0xc]
  427864:	add    eax,DWORD PTR [ecx+0x8]
  427867:	mov    ecx,DWORD PTR [ebp-0x18]
  42786a:	sub    eax,ecx
  42786c:	jmp    0x427b5f
  427871:	push   0xc
  427873:	push   DWORD PTR [ebp-0x4]
  427876:	lea    eax,[ebp-0x4c]
  427879:	push   eax
  42787a:	call   0x426dd7
  42787f:	mov    eax,0xf89c85a1
  427884:	mov    DWORD PTR [ebp-0x2c],eax
  427887:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  42788e:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  427895:	mov    DWORD PTR [ebp-0x38],0xf89c85bc
  42789c:	lea    ecx,[ebp-0x2c]
  42789f:	mov    DWORD PTR [ebp-0xc],ecx
  4278a2:	lea    ecx,[ebp-0x30]
  4278a5:	mov    DWORD PTR [ebp-0x10],ecx
  4278a8:	lea    ecx,[ebp-0x34]
  4278ab:	mov    DWORD PTR [ebp+0xc],ecx
  4278ae:	lea    ecx,[ebp-0x38]
  4278b1:	mov    DWORD PTR [ebp-0x14],ecx
  4278b4:	mov    ecx,DWORD PTR [ebp+0x8]
  4278b7:	xor    ecx,edi
  4278b9:	add    ecx,ebx
  4278bb:	mov    DWORD PTR [ebp-0x18],ecx
  4278be:	jmp    0x427aba
  4278c3:	cmp    eax,0xf89c85a3
  4278c8:	je     0x427acc
  4278ce:	mov    ecx,DWORD PTR [ebp-0x8]
  4278d1:	xor    ecx,edi
  4278d3:	mov    esi,eax
  4278d5:	add    ecx,ebx
  4278d7:	mov    DWORD PTR [ebp+0x18],ecx
  4278da:	mov    eax,DWORD PTR [ebp-0x18]
  4278dd:	xor    esi,edi
  4278df:	lea    eax,[eax+esi*1+0x3272f3]
  4278e6:	mov    DWORD PTR [ebp-0x18],eax
  4278e9:	mov    eax,DWORD PTR [ebp-0x8]
  4278ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4278ef:	xor    eax,edi
  4278f1:	add    eax,ebx
  4278f3:	cmp    ecx,eax
  4278f5:	jne    0x42790a
  4278f7:	mov    eax,DWORD PTR [ebp+0x8]
  4278fa:	xor    eax,edi
  4278fc:	add    eax,ebx
  4278fe:	push   eax
  4278ff:	push   0xc
  427901:	lea    eax,[ebp-0x4c]
  427904:	push   eax
  427905:	call   0x4273bd
  42790a:	mov    eax,DWORD PTR [ebp-0xc]
  42790d:	mov    eax,DWORD PTR [eax]
  42790f:	xor    eax,edi
  427911:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427918:	mov    ecx,DWORD PTR [ebp+0x8]
  42791b:	xor    ecx,edi
  42791d:	movzx  eax,al
  427920:	add    ecx,ebx
  427922:	cmp    eax,ecx
  427924:	je     0x427aa2
  42792a:	mov    eax,DWORD PTR [ebp-0x10]
  42792d:	mov    eax,DWORD PTR [eax]
  42792f:	xor    eax,edi
  427931:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427938:	mov    ecx,DWORD PTR [ebp+0x8]
  42793b:	xor    ecx,edi
  42793d:	movzx  eax,al
  427940:	add    ecx,ebx
  427942:	cmp    eax,ecx
  427944:	je     0x427aa2
  42794a:	mov    eax,DWORD PTR [ebp+0xc]
  42794d:	mov    eax,DWORD PTR [eax]
  42794f:	xor    eax,edi
  427951:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427958:	mov    ecx,DWORD PTR [ebp+0x8]
  42795b:	xor    ecx,edi
  42795d:	movzx  eax,al
  427960:	add    ecx,ebx
  427962:	cmp    eax,ecx
  427964:	je     0x427aa2
  42796a:	mov    eax,DWORD PTR [ebp-0x14]
  42796d:	mov    eax,DWORD PTR [eax]
  42796f:	xor    eax,edi
  427971:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427978:	mov    ecx,DWORD PTR [ebp+0x8]
  42797b:	xor    ecx,edi
  42797d:	movzx  eax,al
  427980:	add    ecx,ebx
  427982:	cmp    eax,ecx
  427984:	je     0x427aa2
  42798a:	mov    eax,DWORD PTR [ebp-0x10]
  42798d:	mov    eax,DWORD PTR [eax]
  42798f:	xor    eax,edi
  427991:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427998:	mov    ecx,DWORD PTR [ebp-0xc]
  42799b:	mov    ecx,DWORD PTR [ecx]
  42799d:	xor    ecx,edi
  42799f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279a6:	xor    al,cl
  4279a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4279ab:	mov    ecx,DWORD PTR [ecx]
  4279ad:	xor    ecx,edi
  4279af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279b6:	or     al,cl
  4279b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4279bb:	mov    ecx,DWORD PTR [ecx]
  4279bd:	xor    ecx,edi
  4279bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  4279c6:	cmp    cl,al
  4279c8:	jne    0x427aa2
  4279ce:	mov    eax,DWORD PTR [ebp+0xc]
  4279d1:	mov    eax,DWORD PTR [eax]
  4279d3:	xor    eax,edi
  4279d5:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  4279dc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279df:	mov    ecx,DWORD PTR [ecx]
  4279e1:	xor    ecx,edi
  4279e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279ea:	xor    al,cl
  4279ec:	mov    ecx,DWORD PTR [ebp-0x14]
  4279ef:	mov    ecx,DWORD PTR [ecx]
  4279f1:	xor    ecx,edi
  4279f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279fa:	or     al,cl
  4279fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279ff:	mov    ecx,DWORD PTR [ecx]
  427a01:	xor    ecx,edi
  427a03:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a0a:	cmp    cl,al
  427a0c:	jne    0x427aa2
  427a12:	mov    eax,DWORD PTR [ebp-0x14]
  427a15:	mov    eax,DWORD PTR [eax]
  427a17:	xor    eax,edi
  427a19:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a20:	mov    ecx,DWORD PTR [ebp+0xc]
  427a23:	mov    ecx,DWORD PTR [ecx]
  427a25:	xor    ecx,edi
  427a27:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a2e:	xor    al,cl
  427a30:	mov    ecx,DWORD PTR [ebp-0xc]
  427a33:	mov    ecx,DWORD PTR [ecx]
  427a35:	xor    ecx,edi
  427a37:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a3e:	or     al,cl
  427a40:	mov    ecx,DWORD PTR [ebp+0xc]
  427a43:	mov    ecx,DWORD PTR [ecx]
  427a45:	xor    ecx,edi
  427a47:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a4e:	cmp    cl,al
  427a50:	jne    0x427aa2
  427a52:	mov    eax,DWORD PTR [ebp-0x14]
  427a55:	mov    eax,DWORD PTR [eax]
  427a57:	xor    eax,edi
  427a59:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a60:	mov    ecx,DWORD PTR [ebp-0xc]
  427a63:	mov    ecx,DWORD PTR [ecx]
  427a65:	xor    ecx,edi
  427a67:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a6e:	xor    al,cl
  427a70:	mov    ecx,DWORD PTR [ebp-0x10]
  427a73:	mov    ecx,DWORD PTR [ecx]
  427a75:	xor    ecx,edi
  427a77:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a7e:	or     al,cl
  427a80:	mov    ecx,DWORD PTR [ebp-0x14]
  427a83:	mov    ecx,DWORD PTR [ecx]
  427a85:	xor    ecx,edi
  427a87:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a8e:	cmp    cl,al
  427a90:	jne    0x427aa2
  427a92:	lea    eax,[ebp-0x4c]
  427a95:	push   eax
  427a96:	call   0x42755d
  427a9b:	mov    ecx,DWORD PTR [ebp-0x44]
  427a9e:	cmp    eax,ecx
  427aa0:	je     0x427aac
  427aa2:	mov    eax,DWORD PTR [ebp+0x8]
  427aa5:	xor    eax,edi
  427aa7:	add    eax,ebx
  427aa9:	mov    DWORD PTR [ebp+0x18],eax
  427aac:	mov    eax,DWORD PTR [ebp-0x8]
  427aaf:	xor    eax,edi
  427ab1:	lea    eax,[eax+esi*1+0x3272f3]
  427ab8:	xor    eax,edi
  427aba:	mov    ecx,DWORD PTR [ebp+0x8]
  427abd:	mov    edx,DWORD PTR [ebp+0x18]
  427ac0:	xor    ecx,edi
  427ac2:	add    ecx,ebx
  427ac4:	cmp    edx,ecx
  427ac6:	je     0x4278c3
  427acc:	mov    eax,DWORD PTR [ebp+0x8]
  427acf:	mov    ecx,DWORD PTR [ebp+0x18]
  427ad2:	xor    eax,edi
  427ad4:	add    eax,ebx
  427ad6:	cmp    ecx,eax
  427ad8:	jne    0x427aeb
  427ada:	mov    eax,DWORD PTR [ebp-0x8]
  427add:	mov    ecx,DWORD PTR [ebp+0x1c]
  427ae0:	xor    eax,edi
  427ae2:	lea    eax,[eax+ecx*1+0x3272f3]
  427ae9:	jmp    0x427b62
  427aeb:	push   0x18
  427aed:	push   DWORD PTR [ebp-0x4]
  427af0:	lea    eax,[ebp-0x64]
  427af3:	push   eax
  427af4:	call   0x426dd7
  427af9:	mov    eax,DWORD PTR [ebp+0x8]
  427afc:	mov    ecx,DWORD PTR [ebp-0x18]
  427aff:	xor    eax,edi
  427b01:	add    eax,ebx
  427b03:	cmp    eax,ecx
  427b05:	je     0x427b1a
  427b07:	mov    eax,DWORD PTR [ebp+0x8]
  427b0a:	xor    eax,edi
  427b0c:	add    eax,ebx
  427b0e:	push   eax
  427b0f:	push   0x18
  427b11:	lea    eax,[ebp-0x64]
  427b14:	push   eax
  427b15:	call   0x4273bd
  427b1a:	mov    eax,DWORD PTR [ebp-0x4]
  427b1d:	add    eax,0x18
  427b20:	mov    DWORD PTR [ebp+0x18],eax
  427b23:	push   DWORD PTR [ebp-0x50]
  427b26:	push   DWORD PTR [ebp+0x18]
  427b29:	mov    eax,DWORD PTR [ebp-0x54]
  427b2c:	add    eax,DWORD PTR [ebp-0x20]
  427b2f:	push   eax
  427b30:	call   0x426dd7
  427b35:	mov    eax,DWORD PTR [ebp+0x8]
  427b38:	mov    ecx,DWORD PTR [ebp-0x18]
  427b3b:	xor    eax,edi
  427b3d:	add    eax,ebx
  427b3f:	cmp    eax,ecx
  427b41:	je     0x427b54
  427b43:	push   0x0
  427b45:	push   DWORD PTR [ebp-0x50]
  427b48:	mov    eax,DWORD PTR [ebp-0x54]
  427b4b:	add    eax,DWORD PTR [ebp-0x20]
  427b4e:	push   eax
  427b4f:	call   0x4273bd
  427b54:	mov    eax,DWORD PTR [ebp-0x24]
  427b57:	mov    ecx,DWORD PTR [ebp-0x50]
  427b5a:	add    DWORD PTR [eax],ecx
  427b5c:	mov    eax,DWORD PTR [ebp-0x50]
  427b5f:	add    eax,DWORD PTR [ebp+0x1c]
  427b62:	mov    DWORD PTR [ebp+0x1c],eax
  427b65:	mov    eax,DWORD PTR [ebp-0x8]
  427b68:	mov    ecx,DWORD PTR [ebp+0x1c]
  427b6b:	xor    eax,edi
  427b6d:	add    eax,ebx
  427b6f:	imul   eax,ecx
  427b72:	mov    ecx,DWORD PTR [ebp+0x8]
  427b75:	mov    edx,DWORD PTR [ebp-0x28]
  427b78:	xor    ecx,edi
  427b7a:	lea    ecx,[ecx+edx*1+0x3272f3]
  427b81:	cmp    eax,ecx
  427b83:	jb     0x4277e1
  427b89:	mov    esi,DWORD PTR [ebp+0x14]
  427b8c:	mov    eax,DWORD PTR [ebp-0x20]
  427b8f:	mov    DWORD PTR [esi],eax
  427b91:	jmp    0x427bd8
  427b93:	mov    ecx,DWORD PTR [ebp+0x8]
  427b96:	mov    edx,DWORD PTR [ebp+0xc]
  427b99:	xor    ecx,edi
  427b9b:	xor    edx,edi
  427b9d:	add    ecx,ebx
  427b9f:	add    edx,ebx
  427ba1:	cmp    ecx,edx
  427ba3:	jne    0x427bb7
  427ba5:	mov    eax,ds:0x7f642dd8
  427baa:	imul   eax,eax,0x9f15fccf
  427bb0:	mov    ds:0x7f642dd8,eax
  427bb5:	jmp    0x427bd8
  427bb7:	mov    ecx,DWORD PTR [ebp+0x8]
  427bba:	xor    ecx,edi
  427bbc:	add    ecx,ebx
  427bbe:	cmp    eax,ecx
  427bc0:	je     0x427bce
  427bc2:	sub    DWORD PTR ds:0xf861e38,0x709beac8
  427bcc:	jmp    0x427bd8
  427bce:	and    DWORD PTR ds:0x3343fad8,0x5265ec3f
  427bd8:	pop    edi
  427bd9:	pop    esi
  427bda:	pop    ebx
  427bdb:	leave  
  427bdc:	ret    0x18
  427bdf:	push   ebp
  427be0:	mov    ebp,esp
  427be2:	and    esp,0xfffffff8
  427be5:	mov    eax,DWORD PTR [ebp+0x20]
  427be8:	sub    esp,0x14
  427beb:	push   ebx
  427bec:	mov    ebx,DWORD PTR [ebp+0x14]
  427bef:	push   esi
  427bf0:	push   edi
  427bf1:	cmp    eax,0xf89c85a1
  427bf6:	jne    0x427c02
  427bf8:	push   0xf89c85a2
  427bfd:	jmp    0x427d34
  427c02:	mov    eax,DWORD PTR [ebp+0x20]
  427c05:	cmp    eax,0xf89c85a2
  427c0a:	jne    0x427c16
  427c0c:	push   0xf89c85a3
  427c11:	jmp    0x427d34
  427c16:	mov    eax,DWORD PTR [ebp+0x20]
  427c19:	cmp    eax,0xf89c85a3
  427c1e:	jne    0x427c2a
  427c20:	push   0xf89c85bc
  427c25:	jmp    0x427d34
  427c2a:	mov    eax,DWORD PTR [ebp+0x20]
  427c2d:	cmp    eax,0xf89c85bc
  427c32:	jne    0x427c3e
  427c34:	push   0xf89c85bd
  427c39:	jmp    0x427d34
  427c3e:	mov    ecx,DWORD PTR [ebp+0x20]
  427c41:	mov    eax,0xf89c85b8
  427c46:	cmp    ecx,eax
  427c48:	jne    0x427d04
  427c4e:	mov    eax,DWORD PTR [ebp+0x10]
  427c51:	mov    DWORD PTR [esp+0xc],eax
  427c55:	mov    eax,DWORD PTR [ebp+0x18]
  427c58:	mov    DWORD PTR [esp+0x14],eax
  427c5c:	mov    eax,DWORD PTR [ebp+0xc]
  427c5f:	mov    DWORD PTR [esp+0x18],eax
  427c63:	mov    eax,DWORD PTR [ebp+0x8]
  427c66:	mov    DWORD PTR [esp+0x10],eax
  427c6a:	mov    eax,DWORD PTR [esp+0x10]
  427c6e:	mov    ecx,DWORD PTR [esp+0x14]
  427c72:	mov    edi,0x75108ac
  427c77:	xor    eax,edi
  427c79:	mov    esi,0x3272f3
  427c7e:	add    eax,esi
  427c80:	mov    DWORD PTR [ecx],eax
  427c82:	mov    eax,DWORD PTR [esp+0xc]
  427c86:	mov    eax,DWORD PTR [eax+0x194]
  427c8c:	mov    ecx,DWORD PTR [eax]
  427c8e:	mov    eax,DWORD PTR [esp+0xc]
  427c92:	mov    eax,DWORD PTR [eax+0x194]
  427c98:	mov    eax,DWORD PTR [eax]
  427c9a:	add    eax,DWORD PTR [ecx+0x3c]
  427c9d:	mov    ecx,DWORD PTR [esp+0xc]
  427ca1:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427ca7:	mov    ecx,DWORD PTR [ecx+0x14]
  427caa:	push   0x4
  427cac:	push   0x3000
  427cb1:	push   DWORD PTR [eax+0x50]
  427cb4:	push   0x0
  427cb6:	call   ecx
  427cb8:	mov    DWORD PTR [ebx],eax
  427cba:	mov    eax,DWORD PTR [esp+0x10]
  427cbe:	push   DWORD PTR [esp+0xc]
  427cc2:	xor    eax,edi
  427cc4:	add    eax,esi
  427cc6:	mov    DWORD PTR [esp+0x20],eax
  427cca:	lea    eax,[esp+0x20]
  427cce:	push   eax
  427ccf:	push   ebx
  427cd0:	push   DWORD PTR [esp+0x20]
  427cd4:	push   DWORD PTR [esp+0x28]
  427cd8:	push   DWORD PTR [esp+0x24]
  427cdc:	call   0x4276a1
  427ce1:	mov    eax,DWORD PTR [esp+0x10]
  427ce5:	mov    ecx,DWORD PTR [ebx]
  427ce7:	xor    eax,edi
  427ce9:	add    eax,esi
  427ceb:	cmp    ecx,eax
  427ced:	je     0x427d4b
  427cef:	mov    eax,DWORD PTR [esp+0x18]
  427cf3:	mov    ecx,DWORD PTR [esp+0x14]
  427cf7:	xor    eax,edi
  427cf9:	add    eax,esi
  427cfb:	imul   eax,DWORD PTR [esp+0x1c]
  427d00:	mov    DWORD PTR [ecx],eax
  427d02:	jmp    0x427d4b
  427d04:	mov    ecx,DWORD PTR [ebp+0x20]
  427d07:	cmp    ecx,0xf89c85bd
  427d0d:	jne    0x427d16
  427d0f:	push   0xf89c85be
  427d14:	jmp    0x427d34
  427d16:	mov    ecx,DWORD PTR [ebp+0x20]
  427d19:	cmp    ecx,0xf89c85be
  427d1f:	jne    0x427d28
  427d21:	push   0xf89c85bf
  427d26:	jmp    0x427d34
  427d28:	mov    ecx,DWORD PTR [ebp+0x20]
  427d2b:	cmp    ecx,0xf89c85bf
  427d31:	jne    0x427d4b
  427d33:	push   eax
  427d34:	push   DWORD PTR [ebp+0x1c]
  427d37:	push   DWORD PTR [ebp+0x18]
  427d3a:	push   ebx
  427d3b:	push   DWORD PTR [ebp+0x10]
  427d3e:	push   DWORD PTR [ebp+0xc]
  427d41:	push   DWORD PTR [ebp+0x8]
  427d44:	call   0x427bdf
  427d49:	mov    DWORD PTR [ebx],eax
  427d4b:	mov    eax,DWORD PTR [ebx]
  427d4d:	pop    edi
  427d4e:	pop    esi
  427d4f:	pop    ebx
  427d50:	mov    esp,ebp
  427d52:	pop    ebp
  427d53:	ret    0x1c
  427d56:	push   ebp
  427d57:	mov    ebp,esp
  427d59:	sub    esp,0xc
  427d5c:	mov    eax,0xf89c85a1
  427d61:	mov    DWORD PTR [ebp-0x8],eax
  427d64:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427d6b:	mov    ecx,DWORD PTR [ebp-0x8]
  427d6e:	xor    ecx,0x75108ac
  427d74:	add    ecx,0x3272f3
  427d7a:	mov    DWORD PTR [ebp-0x4],ecx
  427d7d:	mov    ecx,DWORD PTR [ebp+0xc]
  427d80:	push   eax
  427d81:	mov    DWORD PTR [ebp+0xc],ecx
  427d84:	push   DWORD PTR [ebp+0xc]
  427d87:	lea    eax,[ebp-0x4]
  427d8a:	push   DWORD PTR [ebp+0x8]
  427d8d:	push   eax
  427d8e:	push   DWORD PTR [ebp+0xc]
  427d91:	push   DWORD PTR [ebp-0xc]
  427d94:	push   DWORD PTR [ebp-0x8]
  427d97:	call   0x427bdf
  427d9c:	mov    DWORD PTR [ebp-0x4],eax
  427d9f:	mov    eax,DWORD PTR [ebp-0x4]
  427da2:	leave  
  427da3:	ret    0x8
