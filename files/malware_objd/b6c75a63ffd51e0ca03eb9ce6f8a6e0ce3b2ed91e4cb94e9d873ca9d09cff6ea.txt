
b6c75a63ffd51e0ca03eb9ce6f8a6e0ce3b2ed91e4cb94e9d873ca9d09cff6ea.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	or     DWORD PTR ds:0x42c010,0x42b004
  401013:	push   edi
  401014:	adc    DWORD PTR ds:0x42c000,0x42b014
  40101e:	push   0x42e423
  401023:	dec    DWORD PTR ds:0x42a018
  401029:	xor    edi,edi
  40102b:	not    DWORD PTR ds:0x42901c
  401031:	inc    edi
  401032:	push   edi
  401033:	push   edi
  401034:	call   DWORD PTR ds:0x42e9c3
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42b01c,0x7587
  401046:	je     0x401075
  40104c:	lea    eax,[ebp-0x64]
  40104f:	not    DWORD PTR ds:0x42b004
  401055:	push   eax
  401056:	adc    DWORD PTR ds:0x42d00c,0x42d014
  401060:	call   DWORD PTR ds:0x42e98b
  401066:	mov    DWORD PTR ds:0x42a00c,0x7907
  401070:	jmp    0x4026aa
  401075:	sub    DWORD PTR ds:0x42a010,0x42a01c
  40107f:	push   esi
  401080:	mov    esi,DWORD PTR ds:0x42e9cf
  401086:	push   0x8
  401088:	sub    DWORD PTR ds:0x429004,0x42c000
  401092:	push   0x42e433
  401097:	sub    DWORD PTR ds:0x429000,0x1be5
  4010a1:	call   esi
  4010a3:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010ad:	test   eax,eax
  4010af:	mov    DWORD PTR ds:0x42b000,0x51df
  4010b9:	je     0x4010de
  4010bf:	lea    eax,[ebp-0x64]
  4010c2:	and    DWORD PTR ds:0x42d014,0x42a004
  4010cc:	push   eax
  4010cd:	inc    DWORD PTR ds:0x42d008
  4010d3:	call   DWORD PTR ds:0x42e98b
  4010d9:	jmp    0x4026a9
  4010de:	xor    DWORD PTR ds:0x42a008,0x429000
  4010e8:	push   ebx
  4010e9:	mov    ebx,DWORD PTR ds:0x42e99b
  4010ef:	add    DWORD PTR ds:0x429004,0x5c52
  4010f9:	push   0x42e443
  4010fe:	adc    DWORD PTR ds:0x42c014,0x42b014
  401108:	push   edi
  401109:	push   edi
  40110a:	and    DWORD PTR ds:0x429020,0x61d3
  401114:	call   ebx
  401116:	test   eax,eax
  401118:	mov    DWORD PTR ds:0x42b018,0x2d2c
  401122:	je     0x40115f
  401128:	sbb    DWORD PTR ds:0x42a010,0x429004
  401132:	lea    eax,[ebp-0x64]
  401135:	xor    DWORD PTR ds:0x42c000,0x429008
  40113f:	push   eax
  401140:	or     DWORD PTR ds:0x429000,0x4b22
  40114a:	call   DWORD PTR ds:0x42e98b
  401150:	mov    DWORD PTR ds:0x429004,0x6e7d
  40115a:	jmp    0x4026a8
  40115f:	push   0xc
  401161:	sbb    DWORD PTR ds:0x42d014,0x5298
  40116b:	push   0x42e467
  401170:	sbb    DWORD PTR ds:0x42c010,0x42c008
  40117a:	call   esi
  40117c:	dec    DWORD PTR ds:0x42d000
  401182:	test   eax,eax
  401184:	jne    0x401768
  40118a:	push   0x7
  40118c:	push   0x42e47b
  401191:	call   esi
  401193:	adc    DWORD PTR ds:0x429014,0x42900c
  40119d:	test   eax,eax
  40119f:	mov    DWORD PTR ds:0x42c000,0x2037
  4011a9:	jne    0x401768
  4011af:	push   0x8
  4011b1:	xor    DWORD PTR ds:0x42d010,0x429014
  4011bb:	push   0x42e48b
  4011c0:	and    DWORD PTR ds:0x42d010,0x7e73
  4011ca:	call   esi
  4011cc:	test   eax,eax
  4011ce:	mov    DWORD PTR ds:0x429014,0x43a5
  4011d8:	jne    0x401768
  4011de:	push   0x42e49b
  4011e3:	adc    DWORD PTR ds:0x429014,0x42b00c
  4011ed:	push   edi
  4011ee:	push   edi
  4011ef:	call   DWORD PTR ds:0x42e9c3
  4011f5:	xor    DWORD PTR ds:0x429008,0xc25
  4011ff:	test   eax,eax
  401201:	mov    DWORD PTR ds:0x42b004,0x1e9f
  40120b:	jne    0x401768
  401211:	sbb    DWORD PTR ds:0x42b008,0x42a01c
  40121b:	push   0x42e4ab
  401220:	push   edi
  401221:	sbb    DWORD PTR ds:0x42b000,0x42b018
  40122b:	push   edi
  40122c:	sbb    DWORD PTR ds:0x42a008,0x42c00c
  401236:	call   ebx
  401238:	adc    DWORD PTR ds:0x42a01c,0xefe
  401242:	test   eax,eax
  401244:	mov    DWORD PTR ds:0x42d014,0x5190
  40124e:	jne    0x401768
  401254:	sub    DWORD PTR ds:0x42b000,0x721d
  40125e:	push   0xc
  401260:	add    DWORD PTR ds:0x42d018,0x42c000
  40126a:	push   0x42e4cf
  40126f:	call   esi
  401271:	test   eax,eax
  401273:	mov    DWORD PTR ds:0x42a014,0x465b
  40127d:	jne    0x401768
  401283:	or     DWORD PTR ds:0x42d014,0x42900c
  40128d:	push   0x7
  40128f:	push   0x42e4e3
  401294:	xor    DWORD PTR ds:0x42c014,0x14b0
  40129e:	call   esi
  4012a0:	test   eax,eax
  4012a2:	mov    DWORD PTR ds:0x42a01c,0x4b6
  4012ac:	jne    0x401768
  4012b2:	push   0x8
  4012b4:	or     DWORD PTR ds:0x429028,0x429010
  4012be:	push   0x42e4f3
  4012c3:	sbb    DWORD PTR ds:0x42a010,0x429008
  4012cd:	call   esi
  4012cf:	test   eax,eax
  4012d1:	mov    DWORD PTR ds:0x42a00c,0x7915
  4012db:	jne    0x401768
  4012e1:	or     DWORD PTR ds:0x42b000,0xa15
  4012eb:	push   0x42e503
  4012f0:	push   edi
  4012f1:	sub    DWORD PTR ds:0x42901c,0x42c008
  4012fb:	push   edi
  4012fc:	xor    DWORD PTR ds:0x42a01c,0x42d010
  401306:	call   DWORD PTR ds:0x42e9c3
  40130c:	test   eax,eax
  40130e:	jne    0x401768
  401314:	sub    DWORD PTR ds:0x42d014,0x42a000
  40131e:	push   0x42e513
  401323:	adc    DWORD PTR ds:0x42b018,0x14c4
  40132d:	push   edi
  40132e:	xor    DWORD PTR ds:0x42c008,0x6706
  401338:	push   edi
  401339:	or     DWORD PTR ds:0x42a01c,0x6055
  401343:	call   ebx
  401345:	sub    DWORD PTR ds:0x429014,0x42b00c
  40134f:	test   eax,eax
  401351:	mov    DWORD PTR ds:0x42d00c,0x550a
  40135b:	jne    0x401768
  401361:	push   0xc
  401363:	push   0x42e537
  401368:	adc    DWORD PTR ds:0x42c00c,0x429018
  401372:	call   esi
  401374:	test   eax,eax
  401376:	mov    DWORD PTR ds:0x429024,0x758e
  401380:	jne    0x401768
  401386:	push   0x7
  401388:	adc    DWORD PTR ds:0x429010,0x1615
  401392:	push   0x42e54b
  401397:	sub    DWORD PTR ds:0x429008,0x42b01c
  4013a1:	call   esi
  4013a3:	adc    DWORD PTR ds:0x42c01c,0x7f54
  4013ad:	test   eax,eax
  4013af:	jne    0x401768
  4013b5:	or     DWORD PTR ds:0x429000,0x429008
  4013bf:	push   0x8
  4013c1:	sub    DWORD PTR ds:0x42a000,0x50c8
  4013cb:	push   0x42e55b
  4013d0:	call   esi
  4013d2:	xor    DWORD PTR ds:0x42a018,0x58f3
  4013dc:	test   eax,eax
  4013de:	mov    DWORD PTR ds:0x42a010,0x4d09
  4013e8:	jne    0x401768
  4013ee:	push   0x42e56b
  4013f3:	push   edi
  4013f4:	sbb    DWORD PTR ds:0x42c00c,0x429018
  4013fe:	push   edi
  4013ff:	call   DWORD PTR ds:0x42e9c3
  401405:	sbb    DWORD PTR ds:0x42d008,0x42d004
  40140f:	test   eax,eax
  401411:	mov    DWORD PTR ds:0x42a010,0xbaa
  40141b:	jne    0x401768
  401421:	push   0x42e57b
  401426:	push   edi
  401427:	push   edi
  401428:	call   ebx
  40142a:	sbb    DWORD PTR ds:0x42b000,0x429014
  401434:	test   eax,eax
  401436:	mov    DWORD PTR ds:0x42d008,0x1c53
  401440:	jne    0x401768
  401446:	adc    DWORD PTR ds:0x42a00c,0x429024
  401450:	push   0xc
  401452:	push   0x42e59f
  401457:	sbb    DWORD PTR ds:0x429028,0x2f15
  401461:	call   esi
  401463:	test   eax,eax
  401465:	mov    DWORD PTR ds:0x42d004,0x2bd4
  40146f:	jne    0x401768
  401475:	mov    DWORD PTR ds:0x42d014,0xc7e
  40147f:	push   0x7
  401481:	or     DWORD PTR ds:0x42b01c,0x629c
  40148b:	push   0x42e5b3
  401490:	call   esi
  401492:	xor    DWORD PTR ds:0x429020,0x42c014
  40149c:	test   eax,eax
  40149e:	mov    DWORD PTR ds:0x42b008,0x386
  4014a8:	jne    0x401768
  4014ae:	push   0x8
  4014b0:	push   0x42e5c3
  4014b5:	sub    DWORD PTR ds:0x429024,0x42a008
  4014bf:	call   esi
  4014c1:	sub    DWORD PTR ds:0x42b004,0x42c018
  4014cb:	test   eax,eax
  4014cd:	mov    DWORD PTR ds:0x42900c,0x6fc8
  4014d7:	jne    0x401768
  4014dd:	xor    DWORD PTR ds:0x42d010,0x42901c
  4014e7:	push   0x42e5d3
  4014ec:	and    DWORD PTR ds:0x42d014,0x50c
  4014f6:	push   edi
  4014f7:	push   edi
  4014f8:	sbb    DWORD PTR ds:0x42b000,0x3361
  401502:	call   DWORD PTR ds:0x42e9c3
  401508:	test   eax,eax
  40150a:	mov    DWORD PTR ds:0x42b008,0x5d56
  401514:	jne    0x401768
  40151a:	xor    DWORD PTR ds:0x42a000,0x4d69
  401524:	push   0x42e5e3
  401529:	and    DWORD PTR ds:0x429024,0x42a014
  401533:	push   edi
  401534:	or     DWORD PTR ds:0x42c004,0x3817
  40153e:	push   edi
  40153f:	add    DWORD PTR ds:0x429024,0x2571
  401549:	call   ebx
  40154b:	xor    DWORD PTR ds:0x429028,0x42b00c
  401555:	test   eax,eax
  401557:	mov    DWORD PTR ds:0x42b00c,0x17fe
  401561:	jne    0x401768
  401567:	mov    DWORD PTR ds:0x42c014,0x28c7
  401571:	push   0xc
  401573:	and    DWORD PTR ds:0x429024,0x5a57
  40157d:	push   0x42e607
  401582:	call   esi
  401584:	test   eax,eax
  401586:	mov    DWORD PTR ds:0x42b00c,0xc7e
  401590:	jne    0x401768
  401596:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015a0:	push   0x7
  4015a2:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015ac:	push   0x42e61b
  4015b1:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015bb:	call   esi
  4015bd:	xor    DWORD PTR ds:0x42c00c,0x55d5
  4015c7:	test   eax,eax
  4015c9:	jne    0x401768
  4015cf:	or     DWORD PTR ds:0x429008,0x62a0
  4015d9:	push   0x8
  4015db:	or     DWORD PTR ds:0x429020,0x42d018
  4015e5:	push   0x42e62b
  4015ea:	call   esi
  4015ec:	test   eax,eax
  4015ee:	mov    DWORD PTR ds:0x429010,0x43d8
  4015f8:	jne    0x401768
  4015fe:	push   0x42e63b
  401603:	sub    DWORD PTR ds:0x42a008,0x5452
  40160d:	push   edi
  40160e:	adc    DWORD PTR ds:0x42b004,0x3794
  401618:	push   edi
  401619:	add    DWORD PTR ds:0x42b018,0x429000
  401623:	call   DWORD PTR ds:0x42e9c3
  401629:	add    DWORD PTR ds:0x42b014,0x42c014
  401633:	test   eax,eax
  401635:	mov    DWORD PTR ds:0x42c010,0x9db
  40163f:	jne    0x401768
  401645:	add    DWORD PTR ds:0x42b01c,0x42c010
  40164f:	push   0x42e64b
  401654:	push   edi
  401655:	push   edi
  401656:	call   ebx
  401658:	test   eax,eax
  40165a:	jne    0x401768
  401660:	sub    DWORD PTR ds:0x42a010,0x42b00c
  40166a:	push   0xc
  40166c:	xor    DWORD PTR ds:0x42a000,0x46f8
  401676:	push   0x42e66f
  40167b:	sub    DWORD PTR ds:0x429028,0x1e37
  401685:	call   esi
  401687:	not    DWORD PTR ds:0x42b000
  40168d:	test   eax,eax
  40168f:	mov    DWORD PTR ds:0x42a010,0x1824
  401699:	jne    0x401768
  40169f:	push   0x7
  4016a1:	neg    DWORD PTR ds:0x42d004
  4016a7:	push   0x42e683
  4016ac:	call   esi
  4016ae:	xor    DWORD PTR ds:0x429020,0x5303
  4016b8:	test   eax,eax
  4016ba:	jne    0x401768
  4016c0:	sub    DWORD PTR ds:0x429014,0x42c01c
  4016ca:	push   0x8
  4016cc:	not    DWORD PTR ds:0x429000
  4016d2:	push   0x42e693
  4016d7:	or     DWORD PTR ds:0x42c01c,0x7461
  4016e1:	call   esi
  4016e3:	test   eax,eax
  4016e5:	jne    0x401768
  4016eb:	or     DWORD PTR ds:0x42b010,0x6614
  4016f5:	push   0x42e6a3
  4016fa:	push   edi
  4016fb:	and    DWORD PTR ds:0x42b01c,0x42a008
  401705:	push   edi
  401706:	call   DWORD PTR ds:0x42e9c3
  40170c:	sub    DWORD PTR ds:0x429010,0x42a018
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42b004,0x423f
  401722:	jne    0x401768
  401728:	push   0x42e6b3
  40172d:	and    DWORD PTR ds:0x42d014,0x5d3e
  401737:	push   edi
  401738:	push   edi
  401739:	call   ebx
  40173b:	sub    DWORD PTR ds:0x42a004,0x8003
  401745:	test   eax,eax
  401747:	jne    0x401768
  40174d:	push   0xc
  40174f:	push   0x42e6d7
  401754:	call   esi
  401756:	or     DWORD PTR ds:0x42a014,0x792e
  401760:	test   eax,eax
  401762:	je     0x401783
  401768:	add    DWORD PTR ds:0x42d004,0x429000
  401772:	xor    eax,eax
  401774:	mov    DWORD PTR ds:0x42c00c,0x1740
  40177e:	jmp    0x4026a8
  401783:	sub    DWORD PTR ds:0x42c01c,0x74ec
  40178d:	mov    DWORD PTR [ebp-0x10],0x0
  401794:	sub    edx,ecx
  401796:	mov    eax,DWORD PTR [ebp-0x34]
  401799:	adc    edx,DWORD PTR ds:0x42b004
  40179f:	mov    DWORD PTR [ebp-0x34],eax
  4017a2:	sub    edx,DWORD PTR ds:0x429024
  4017a8:	mov    ecx,0xf89c85b9
  4017ad:	xor    esi,esi
  4017af:	or     esi,DWORD PTR ds:0x42b018
  4017b5:	adc    DWORD PTR ds:0x429020,esi
  4017bb:	mov    DWORD PTR [ebp-0x8],ecx
  4017be:	mov    edx,DWORD PTR ds:0x42d004
  4017c4:	sbb    edx,DWORD PTR ds:0x42901c
  4017ca:	mov    DWORD PTR ds:0x42d004,edx
  4017d0:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4017d7:	add    esi,edx
  4017d9:	lea    eax,[ebp-0x3c]
  4017dc:	xor    edx,edx
  4017de:	mov    DWORD PTR [ebp-0x30],eax
  4017e1:	lea    eax,[ebp-0x44]
  4017e4:	mov    DWORD PTR ds:0x42b00c,0x18
  4017ee:	cmp    DWORD PTR ds:0x42b00c,0x0
  4017f5:	je     0x40184f
  4017fb:	cmp    DWORD PTR ds:0x42b00c,0x7
  401802:	jne    0x40181d
  401808:	push   0x42b010
  40180d:	push   0x42c014
  401812:	push   0x42d004
  401817:	call   DWORD PTR ds:0x42e993
  40181d:	cmp    DWORD PTR ds:0x42b00c,0x8
  401824:	jne    0x401837
  40182a:	mov    esi,DWORD PTR ds:0x42b00c
  401830:	dec    esi
  401831:	mov    DWORD PTR ds:0x42b00c,esi
  401837:	mov    esi,DWORD PTR ds:0x42b00c
  40183d:	dec    esi
  40183e:	mov    DWORD PTR ds:0x42b00c,esi
  401844:	jmp    0x4017ee
  401849:	adc    DWORD PTR ds:0x429000,ebx
  40184f:	mov    DWORD PTR [ebp-0x18],eax
  401852:	mov    eax,ds:0x42e313
  401857:	and    DWORD PTR ds:0x429004,0x0
  401861:	jmp    0x401873
  401866:	mov    edi,DWORD PTR ds:0x429004
  40186c:	inc    edi
  40186d:	mov    DWORD PTR ds:0x429004,edi
  401873:	cmp    DWORD PTR ds:0x429004,0x1c
  40187a:	jae    0x4018a6
  401880:	cmp    DWORD PTR ds:0x429004,0x22
  401887:	jne    0x40189b
  40188d:	push   0x0
  40188f:	push   DWORD PTR [ebp-0x20]
  401892:	push   DWORD PTR [ebp-0x10]
  401895:	call   DWORD PTR ds:0x42e997
  40189b:	jmp    0x401866
  4018a0:	adc    DWORD PTR ds:0x42c018,ebx
  4018a6:	mov    eax,DWORD PTR [eax+0x1c8]
  4018ac:	mov    DWORD PTR ds:0x42a010,0x15
  4018b6:	cmp    DWORD PTR ds:0x42a010,0x0
  4018bd:	je     0x401923
  4018c3:	cmp    DWORD PTR ds:0x42a010,0xa
  4018ca:	jne    0x4018f1
  4018d0:	push   DWORD PTR [ebp-0x10]
  4018d3:	push   0x85d6
  4018d8:	push   0x42c01c
  4018dd:	push   DWORD PTR [ebp-0x24]
  4018e0:	push   DWORD PTR [ebp-0x18]
  4018e3:	push   0x61a0
  4018e8:	push   DWORD PTR [ebp-0x18]
  4018eb:	call   DWORD PTR ds:0x42e99f
  4018f1:	cmp    DWORD PTR ds:0x42a010,0xb
  4018f8:	jne    0x40190b
  4018fe:	mov    esi,DWORD PTR ds:0x42a010
  401904:	dec    esi
  401905:	mov    DWORD PTR ds:0x42a010,esi
  40190b:	mov    esi,DWORD PTR ds:0x42a010
  401911:	dec    esi
  401912:	mov    DWORD PTR ds:0x42a010,esi
  401918:	jmp    0x4018b6
  40191d:	and    DWORD PTR ds:0x42b000,edx
  401923:	mov    eax,DWORD PTR [eax]
  401925:	xor    DWORD PTR ds:0x42c01c,0x42d014
  40192f:	mov    edx,DWORD PTR [ebp-0x18]
  401932:	or     esi,DWORD PTR ds:0x42d014
  401938:	mov    esi,0x7510899
  40193d:	xor    eax,esi
  40193f:	mov    edi,0x3272e0
  401944:	add    eax,edi
  401946:	mov    DWORD PTR [edx],eax
  401948:	mov    DWORD PTR ds:0x42900c,0x4148
  401952:	mov    eax,ds:0x42e7c3
  401957:	cmp    eax,0x312bc9f6
  40195c:	mov    DWORD PTR ds:0x429010,0x7018
  401966:	jne    0x401abf
  40196c:	adc    DWORD PTR ds:0x42a018,0x1f6
  401976:	mov    eax,DWORD PTR [ebp-0x8]
  401979:	and    DWORD PTR ds:0x42d010,0x0
  401983:	jmp    0x401995
  401988:	mov    ebx,DWORD PTR ds:0x42d010
  40198e:	inc    ebx
  40198f:	mov    DWORD PTR ds:0x42d010,ebx
  401995:	cmp    DWORD PTR ds:0x42d010,0x1a
  40199c:	jae    0x4019d3
  4019a2:	cmp    DWORD PTR ds:0x42d010,0x1f
  4019a9:	jne    0x4019c8
  4019af:	push   0x42b018
  4019b4:	push   DWORD PTR [ebp-0x18]
  4019b7:	push   0x42e127
  4019bc:	push   DWORD PTR [ebp-0x24]
  4019bf:	push   DWORD PTR [ebp-0x14]
  4019c2:	call   DWORD PTR ds:0x42e9a3
  4019c8:	jmp    0x401988
  4019cd:	and    ebx,DWORD PTR ds:0x429020
  4019d3:	mov    edx,DWORD PTR ds:0x42e313
  4019d9:	sbb    DWORD PTR ds:0x42b000,edi
  4019df:	mov    edx,DWORD PTR [edx+0x198]
  4019e5:	inc    ebx
  4019e6:	xor    eax,esi
  4019e8:	movzx  ebx,WORD PTR ds:0x42b01c
  4019ef:	or     DWORD PTR ds:0x429014,ebx
  4019f5:	add    eax,edi
  4019f7:	sub    DWORD PTR ds:0x42b008,edx
  4019fd:	mov    DWORD PTR [edx],eax
  4019ff:	add    ebx,0x6ca
  401a05:	mov    eax,DWORD PTR [ebp-0x8]
  401a08:	mov    DWORD PTR ds:0x429008,0x1c
  401a12:	cmp    DWORD PTR ds:0x429008,0x0
  401a19:	je     0x401a65
  401a1f:	cmp    DWORD PTR ds:0x429008,0x9
  401a26:	jne    0x401a37
  401a2c:	push   0x42d004
  401a31:	call   DWORD PTR ds:0x42e9ab
  401a37:	cmp    DWORD PTR ds:0x429008,0xa
  401a3e:	jne    0x401a51
  401a44:	mov    ebx,DWORD PTR ds:0x429008
  401a4a:	dec    ebx
  401a4b:	mov    DWORD PTR ds:0x429008,ebx
  401a51:	xor    ebx,ebx
  401a53:	add    ebx,DWORD PTR ds:0x429008
  401a59:	dec    ebx
  401a5a:	mov    DWORD PTR ds:0x429008,ebx
  401a60:	jmp    0x401a12
  401a65:	xor    eax,esi
  401a67:	mov    DWORD PTR ds:0x42a010,0x13
  401a71:	cmp    DWORD PTR ds:0x42a010,0x0
  401a78:	je     0x401ab2
  401a7e:	cmp    DWORD PTR ds:0x42a010,0x23
  401a85:	jne    0x401a9e
  401a8b:	push   DWORD PTR [ebp-0xc]
  401a8e:	push   0x0
  401a90:	push   0x429028
  401a95:	push   DWORD PTR [ebp-0x1c]
  401a98:	call   DWORD PTR ds:0x42e9af
  401a9e:	mov    ebx,DWORD PTR ds:0x42a010
  401aa4:	dec    ebx
  401aa5:	mov    DWORD PTR ds:0x42a010,ebx
  401aab:	jmp    0x401a71
  401ab0:	not    ebx
  401ab2:	add    eax,edi
  401ab4:	xor    DWORD PTR ds:0x42900c,ecx
  401aba:	mov    ds:0x42e7c3,eax
  401abf:	xor    DWORD PTR ds:0x42c010,0x7580
  401ac9:	mov    eax,ds:0x42e313
  401ace:	and    DWORD PTR ds:0x42d018,0x0
  401ad8:	mov    ebx,DWORD PTR ds:0x42d018
  401ade:	inc    ebx
  401adf:	mov    DWORD PTR ds:0x42d018,ebx
  401ae5:	cmp    DWORD PTR ds:0x42d018,0x4
  401aec:	jne    0x401af8
  401af2:	call   DWORD PTR ds:0x42e9b3
  401af8:	cmp    DWORD PTR ds:0x42d018,0x3
  401aff:	jne    0x401b12
  401b05:	mov    ebx,DWORD PTR ds:0x42d018
  401b0b:	inc    ebx
  401b0c:	mov    DWORD PTR ds:0x42d018,ebx
  401b12:	cmp    DWORD PTR ds:0x42d018,0x1f
  401b19:	jb     0x401ad8
  401b1f:	add    DWORD PTR ds:0x42a000,0x4980
  401b29:	mov    eax,DWORD PTR [eax+0x18c]
  401b2f:	mov    eax,DWORD PTR [eax]
  401b31:	mov    DWORD PTR [ebp-0x7c],eax
  401b34:	or     DWORD PTR ds:0x42c014,ebx
  401b3a:	mov    ebx,0xf89c85bd
  401b3f:	mov    DWORD PTR [ebp-0x10],ebx
  401b42:	mov    DWORD PTR [ebp-0x10],ebx
  401b45:	add    eax,0x7960
  401b4a:	mov    DWORD PTR [ebp-0x10],ebx
  401b4d:	or     eax,DWORD PTR ds:0x42c000
  401b53:	mov    DWORD PTR [ebp-0x18],ecx
  401b56:	mov    DWORD PTR ds:0x429000,0x1d
  401b60:	cmp    DWORD PTR ds:0x429000,0x0
  401b67:	je     0x401c18
  401b6d:	cmp    DWORD PTR ds:0x429000,0xf
  401b74:	jne    0x401b9a
  401b7a:	push   DWORD PTR [ebp-0x18]
  401b7d:	push   0x429020
  401b82:	push   0x22ca
  401b87:	push   0x6383
  401b8c:	push   DWORD PTR [ebp-0x18]
  401b8f:	push   0x7f4f
  401b94:	call   DWORD PTR ds:0x42e9b7
  401b9a:	cmp    DWORD PTR ds:0x429000,0x10
  401ba1:	jne    0x401bb2
  401ba7:	mov    eax,ds:0x429000
  401bac:	dec    eax
  401bad:	mov    ds:0x429000,eax
  401bb2:	mov    eax,ds:0x429000
  401bb7:	dec    eax
  401bb8:	mov    ds:0x429000,eax
  401bbd:	jmp    0x401b60
  401bc2:	and    DWORD PTR ds:0x42a000,0x0
  401bcc:	xor    eax,eax
  401bce:	add    eax,DWORD PTR ds:0x42a000
  401bd4:	inc    eax
  401bd5:	mov    ds:0x42a000,eax
  401bda:	cmp    DWORD PTR ds:0x42a000,0xd
  401be1:	jne    0x401bed
  401be7:	call   DWORD PTR ds:0x42e9bb
  401bed:	cmp    DWORD PTR ds:0x42a000,0xc
  401bf4:	jne    0x401c05
  401bfa:	mov    eax,ds:0x42a000
  401bff:	inc    eax
  401c00:	mov    ds:0x42a000,eax
  401c05:	cmp    DWORD PTR ds:0x42a000,0x18
  401c0c:	jb     0x401bcc
  401c12:	or     DWORD PTR ds:0x42c008,ebx
  401c18:	mov    DWORD PTR [ebp-0x10],ebx
  401c1b:	xor    DWORD PTR ds:0x42c000,edx
  401c21:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  401c28:	mov    eax,DWORD PTR [ebp-0x8]
  401c2b:	xor    eax,esi
  401c2d:	or     DWORD PTR ds:0x42d000,0x4414
  401c37:	add    eax,edi
  401c39:	mov    DWORD PTR ds:0x429018,0x61ad
  401c43:	jmp    0x401d03
  401c48:	and    DWORD PTR ds:0x42b018,0x0
  401c52:	xor    ecx,ecx
  401c54:	add    ecx,DWORD PTR ds:0x42b018
  401c5a:	inc    ecx
  401c5b:	mov    DWORD PTR ds:0x42b018,ecx
  401c61:	cmp    DWORD PTR ds:0x42b018,0x29
  401c68:	jne    0x401c81
  401c6e:	push   DWORD PTR [ebp-0x24]
  401c71:	push   0x42c018
  401c76:	push   0x8c2e
  401c7b:	call   DWORD PTR ds:0x42e9bf
  401c81:	cmp    DWORD PTR ds:0x42b018,0x19
  401c88:	jb     0x401c52
  401c8e:	mov    eax,DWORD PTR [ebp-0xc]
  401c91:	adc    ecx,DWORD PTR ds:0x42b000
  401c97:	mov    ecx,DWORD PTR [ebp-0x1c]
  401c9a:	xor    eax,esi
  401c9c:	lea    eax,[eax+ecx*1+0x3272e0]
  401ca3:	push   eax
  401ca4:	mov    eax,DWORD PTR [ebp-0x18]
  401ca7:	or     DWORD PTR ds:0x42c01c,0x6aa9
  401cb1:	xor    eax,esi
  401cb3:	add    DWORD PTR ds:0x42d014,0x21f
  401cbd:	lea    eax,[ebp+eax*1+0x3272e8]
  401cc4:	or     DWORD PTR ds:0x42d004,0x505e
  401cce:	push   eax
  401ccf:	adc    DWORD PTR ds:0x42c01c,ecx
  401cd5:	mov    eax,ds:0x42e313
  401cda:	push   DWORD PTR [eax+0x1bc]
  401ce0:	sbb    DWORD PTR ds:0x42d004,0x7640
  401cea:	call   0x4026bd
  401cef:	xor    eax,0x743a
  401cf4:	mov    eax,DWORD PTR [ebp-0xc]
  401cf7:	mov    ecx,DWORD PTR [ebp-0x1c]
  401cfa:	xor    eax,esi
  401cfc:	lea    eax,[ecx+eax*1+0x3272e0]
  401d03:	mov    ecx,DWORD PTR [ebp-0xc]
  401d06:	not    edx
  401d08:	mov    edx,DWORD PTR [ebp-0xc]
  401d0b:	sbb    DWORD PTR ds:0x42c008,0x6696
  401d15:	xor    edx,esi
  401d17:	xor    ecx,esi
  401d19:	sub    DWORD PTR ds:0x42c014,0x5039
  401d23:	add    ecx,edx
  401d25:	mov    edx,DWORD PTR [ebp-0xc]
  401d28:	xor    edx,esi
  401d2a:	mov    DWORD PTR ds:0x42d004,0x46d7
  401d34:	lea    ecx,[ecx+edx*1+0x9758a0]
  401d3b:	mov    DWORD PTR [ebp-0x1c],eax
  401d3e:	cmp    eax,ecx
  401d40:	mov    DWORD PTR ds:0x42c01c,0x3624
  401d4a:	jbe    0x401c48
  401d50:	mov    DWORD PTR ds:0x42a018,0x1f
  401d5a:	cmp    DWORD PTR ds:0x42a018,0x0
  401d61:	je     0x401db7
  401d67:	cmp    DWORD PTR ds:0x42a018,0xc
  401d6e:	jne    0x401d89
  401d74:	push   0x42e127
  401d79:	push   0x42e139
  401d7e:	push   0x400000
  401d83:	call   DWORD PTR ds:0x42e9c7
  401d89:	cmp    DWORD PTR ds:0x42a018,0xd
  401d90:	jne    0x401da1
  401d96:	mov    eax,ds:0x42a018
  401d9b:	dec    eax
  401d9c:	mov    ds:0x42a018,eax
  401da1:	mov    eax,ds:0x42a018
  401da6:	dec    eax
  401da7:	mov    ds:0x42a018,eax
  401dac:	jmp    0x401d5a
  401db1:	sbb    ecx,0x5e3
  401db7:	mov    eax,DWORD PTR [ebp+0xc]
  401dba:	dec    ecx
  401dbb:	mov    ds:0x42e197,eax
  401dc0:	mov    DWORD PTR ds:0x42c010,0x5070
  401dca:	mov    eax,DWORD PTR [ebp+0x10]
  401dcd:	and    DWORD PTR ds:0x42b000,0x0
  401dd7:	mov    ecx,DWORD PTR ds:0x42b000
  401ddd:	inc    ecx
  401dde:	mov    DWORD PTR ds:0x42b000,ecx
  401de4:	cmp    DWORD PTR ds:0x42b000,0x22
  401deb:	jne    0x401dfc
  401df1:	push   0x42e000
  401df6:	call   DWORD PTR ds:0x42e9cb
  401dfc:	cmp    DWORD PTR ds:0x42b000,0x18
  401e03:	jb     0x401dd7
  401e09:	mov    ds:0x42e3eb,eax
  401e0e:	mov    eax,ds:0x42e197
  401e13:	add    DWORD PTR ds:0x42a010,ebx
  401e19:	mov    ecx,DWORD PTR [ebp-0x30]
  401e1c:	and    DWORD PTR ds:0x42900c,0x4f3f
  401e26:	sub    eax,edi
  401e28:	xor    DWORD PTR ds:0x42a018,0x42a01c
  401e32:	xor    eax,esi
  401e34:	mov    DWORD PTR [ecx],eax
  401e36:	movzx  eax,BYTE PTR ds:0x42900c
  401e3d:	mov    eax,DWORD PTR [ebp-0x34]
  401e40:	cmp    eax,0xf89c85b9
  401e45:	mov    DWORD PTR ds:0x42901c,0x22d7
  401e4f:	jne    0x402106
  401e55:	lea    eax,[ebp-0x40]
  401e58:	mov    DWORD PTR [ebp-0x9c],eax
  401e5e:	or     DWORD PTR ds:0x429028,0x42a008
  401e68:	lea    eax,[ebp+0x4]
  401e6b:	add    DWORD PTR ds:0x42a014,0x42c008
  401e75:	mov    DWORD PTR [ebp-0x40],eax
  401e78:	mov    eax,DWORD PTR [ebp-0x40]
  401e7b:	test   eax,eax
  401e7d:	mov    DWORD PTR ds:0x42b000,0x1a3e
  401e87:	je     0x40268d
  401e8d:	xor    ecx,0x3b66
  401e93:	mov    eax,DWORD PTR [ebp-0x24]
  401e96:	and    DWORD PTR ds:0x429028,0x0
  401ea0:	jmp    0x401eb2
  401ea5:	mov    ecx,DWORD PTR ds:0x429028
  401eab:	inc    ecx
  401eac:	mov    DWORD PTR ds:0x429028,ecx
  401eb2:	cmp    DWORD PTR ds:0x429028,0x14
  401eb9:	jae    0x401ef8
  401ebf:	cmp    DWORD PTR ds:0x429028,0x7
  401ec6:	jne    0x401ed7
  401ecc:	push   0x42a018
  401ed1:	call   DWORD PTR ds:0x42e9d3
  401ed7:	cmp    DWORD PTR ds:0x429028,0x6
  401ede:	jne    0x401ef3
  401ee4:	xor    ecx,ecx
  401ee6:	add    ecx,DWORD PTR ds:0x429028
  401eec:	inc    ecx
  401eed:	mov    DWORD PTR ds:0x429028,ecx
  401ef3:	jmp    0x401ea5
  401ef8:	mov    eax,DWORD PTR [ebp-0xc]
  401efb:	mov    DWORD PTR ds:0x42c018,0x16
  401f05:	cmp    DWORD PTR ds:0x42c018,0x0
  401f0c:	je     0x401f44
  401f12:	cmp    DWORD PTR ds:0x42c018,0x20
  401f19:	jne    0x401f34
  401f1f:	push   0x42a010
  401f24:	push   0x42b014
  401f29:	push   0x42d004
  401f2e:	call   DWORD PTR ds:0x42e993
  401f34:	mov    eax,ds:0x42c018
  401f39:	dec    eax
  401f3a:	mov    ds:0x42c018,eax
  401f3f:	jmp    0x401f05
  401f44:	mov    eax,DWORD PTR [ebp-0x8]
  401f47:	add    DWORD PTR ds:0x42d014,0x2c68
  401f51:	mov    DWORD PTR [ebp+0xc],eax
  401f54:	mov    eax,eax
  401f56:	mov    eax,ds:0x42e313
  401f5b:	movzx  ecx,BYTE PTR ds:0x42900c
  401f62:	and    DWORD PTR ds:0x42d014,ecx
  401f68:	mov    eax,DWORD PTR [eax+0x1c8]
  401f6e:	not    DWORD PTR ds:0x429024
  401f74:	mov    eax,DWORD PTR [eax]
  401f76:	cdq    
  401f77:	and    DWORD PTR ds:0x42a00c,0x0
  401f81:	jmp    0x401f95
  401f86:	xor    ebx,ebx
  401f88:	xor    ebx,DWORD PTR ds:0x42a00c
  401f8e:	inc    ebx
  401f8f:	mov    DWORD PTR ds:0x42a00c,ebx
  401f95:	cmp    DWORD PTR ds:0x42a00c,0x10
  401f9c:	jae    0x401fe4
  401fa2:	cmp    DWORD PTR ds:0x42a00c,0x8
  401fa9:	jne    0x401fbf
  401faf:	push   0x0
  401fb1:	push   DWORD PTR [ebp-0x18]
  401fb4:	push   0x4e1d
  401fb9:	call   DWORD PTR ds:0x42e997
  401fbf:	cmp    DWORD PTR ds:0x42a00c,0x7
  401fc6:	jne    0x401fd9
  401fcc:	mov    ebx,DWORD PTR ds:0x42a00c
  401fd2:	inc    ebx
  401fd3:	mov    DWORD PTR ds:0x42a00c,ebx
  401fd9:	jmp    0x401f86
  401fde:	and    ecx,0x6703
  401fe4:	mov    ebx,eax
  401fe6:	add    eax,DWORD PTR ds:0x429000
  401fec:	mov    eax,0xfabdbee9
  401ff1:	sbb    ecx,DWORD PTR ds:0x42c000
  401ff7:	add    ebx,eax
  401ff9:	adc    edx,0xffffffff
  401ffc:	mov    ecx,DWORD PTR ds:0x42d004
  402002:	adc    DWORD PTR ds:0x42a008,ecx
  402008:	and    DWORD PTR [ebp-0x10],0x0
  40200c:	add    ecx,0x4d2b
  402012:	xor    edx,0x0
  402015:	mov    DWORD PTR [ebp-0x6c],edx
  402018:	mov    edx,DWORD PTR [ebp+0xc]
  40201b:	mov    DWORD PTR ds:0x42c004,0x11
  402025:	cmp    DWORD PTR ds:0x42c004,0x0
  40202c:	je     0x40207c
  402032:	cmp    DWORD PTR ds:0x42c004,0x1d
  402039:	jne    0x40205c
  40203f:	push   DWORD PTR [ebp-0x10]
  402042:	push   DWORD PTR [ebp-0x24]
  402045:	push   0x429014
  40204a:	push   DWORD PTR [ebp-0x24]
  40204d:	push   DWORD PTR [ebp-0x28]
  402050:	push   DWORD PTR [ebp-0x24]
  402053:	push   DWORD PTR [ebp-0x1c]
  402056:	call   DWORD PTR ds:0x42e99f
  40205c:	mov    ecx,DWORD PTR ds:0x42c004
  402062:	dec    ecx
  402063:	mov    DWORD PTR ds:0x42c004,ecx
  402069:	jmp    0x402025
  40206e:	xor    ecx,ecx
  402070:	add    ecx,DWORD PTR ds:0x42c014
  402076:	and    DWORD PTR ds:0x42b004,ecx
  40207c:	mov    DWORD PTR [ebp-0x14],edx
  40207f:	mov    ecx,0x8a29a12b
  402084:	xor    ebx,ecx
  402086:	add    DWORD PTR [ebp-0x14],eax
  402089:	mov    edx,DWORD PTR [ebp-0x14]
  40208c:	adc    DWORD PTR [ebp-0x10],0xffffffff
  402090:	xor    edx,ecx
  402092:	mov    DWORD PTR [ebp-0x58],edx
  402095:	mov    edx,DWORD PTR [ebp-0x10]
  402098:	xor    edx,0x0
  40209b:	mov    DWORD PTR [ebp-0x54],edx
  40209e:	cmp    DWORD PTR [ebp-0x58],ebx
  4020a1:	jne    0x4020b3
  4020a7:	mov    edx,DWORD PTR [ebp-0x6c]
  4020aa:	cmp    DWORD PTR [ebp-0x54],edx
  4020ad:	je     0x4020e2
  4020b3:	mov    edx,DWORD PTR ds:0x42e313
  4020b9:	mov    edx,DWORD PTR [edx+0x1c0]
  4020bf:	mov    edx,DWORD PTR [edx]
  4020c1:	xor    ebx,ebx
  4020c3:	add    edx,eax
  4020c5:	adc    ebx,0xffffffff
  4020c8:	xor    edx,ecx
  4020ca:	xor    ebx,0x0
  4020cd:	cmp    edx,0x70941fc1
  4020d3:	jne    0x40268d
  4020d9:	cmp    ebx,0xffffffff
  4020dc:	jne    0x40268d
  4020e2:	mov    edx,DWORD PTR ds:0x42e38f
  4020e8:	mov    ebx,DWORD PTR ds:0x42e397
  4020ee:	xor    edx,ebx
  4020f0:	mov    DWORD PTR ds:0x42e38f,edx
  4020f6:	mov    ebx,DWORD PTR ds:0x42e38f
  4020fc:	mov    edx,DWORD PTR [ebp-0x40]
  4020ff:	add    DWORD PTR [edx],ebx
  402101:	jmp    0x40264e
  402106:	mov    eax,DWORD PTR [ebp-0x3c]
  402109:	cmp    eax,0xf89c85b8
  40210e:	je     0x40216b
  402114:	mov    eax,DWORD PTR [ebp-0x8]
  402117:	mov    ecx,DWORD PTR [ebp-0x44]
  40211a:	xor    eax,esi
  40211c:	add    eax,edi
  40211e:	cmp    eax,ecx
  402120:	je     0x40216b
  402126:	mov    eax,ds:0x42e313
  40212b:	mov    eax,DWORD PTR [eax+0x194]
  402131:	mov    ecx,DWORD PTR [eax]
  402133:	mov    eax,DWORD PTR [ecx+0x3c]
  402136:	push   DWORD PTR ds:0x42e3eb
  40213c:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  402140:	push   DWORD PTR ds:0x42e197
  402146:	add    eax,ecx
  402148:	mov    ecx,DWORD PTR ds:0x42e313
  40214e:	mov    ecx,DWORD PTR [ecx+0x194]
  402154:	push   DWORD PTR [ecx]
  402156:	call   eax
  402158:	mov    ecx,DWORD PTR ds:0x42e313
  40215e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402164:	mov    DWORD PTR [ecx],eax
  402166:	jmp    0x40268d
  40216b:	mov    eax,DWORD PTR [ebp-0x8]
  40216e:	mov    ecx,DWORD PTR [ebp-0x7c]
  402171:	xor    eax,esi
  402173:	add    eax,edi
  402175:	cmp    eax,ecx
  402177:	jne    0x402548
  40217d:	mov    eax,DWORD PTR [ebp-0x8]
  402180:	mov    ecx,DWORD PTR ds:0x42e313
  402186:	mov    ecx,DWORD PTR [ecx+0x198]
  40218c:	xor    eax,esi
  40218e:	add    eax,edi
  402190:	cmp    eax,DWORD PTR [ecx]
  402192:	jne    0x4021b1
  402198:	mov    eax,DWORD PTR [ebp-0x8]
  40219b:	push   0xf89c85b9
  4021a0:	xor    eax,esi
  4021a2:	add    eax,edi
  4021a4:	push   eax
  4021a5:	push   ebx
  4021a6:	push   DWORD PTR [ebp-0xc]
  4021a9:	push   DWORD PTR [ebp-0x8]
  4021ac:	call   0x409ed5
  4021b1:	mov    eax,DWORD PTR [ebp-0xc]
  4021b4:	mov    DWORD PTR [ebp-0x48],eax
  4021b7:	mov    eax,DWORD PTR [ebp-0x8]
  4021ba:	mov    DWORD PTR [ebp-0x1c],eax
  4021bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4021c0:	xor    eax,esi
  4021c2:	add    eax,edi
  4021c4:	mov    DWORD PTR [ebp+0x10],eax
  4021c7:	mov    eax,ds:0x42e193
  4021cc:	mov    eax,DWORD PTR [eax]
  4021ce:	mov    DWORD PTR [ebp+0x10],eax
  4021d1:	mov    eax,ds:0x42e39b
  4021d6:	mov    eax,DWORD PTR [eax]
  4021d8:	mov    DWORD PTR [ebp-0x18],eax
  4021db:	mov    DWORD PTR [ebp+0xc],0xf89c87b9
  4021e2:	mov    eax,DWORD PTR [ebp+0xc]
  4021e5:	xor    eax,esi
  4021e7:	add    eax,edi
  4021e9:	mov    DWORD PTR [ebp+0xc],eax
  4021ec:	mov    eax,ds:0x42e313
  4021f1:	mov    DWORD PTR [ebp+0xc],eax
  4021f4:	mov    eax,DWORD PTR [ebp+0x10]
  4021f7:	mov    DWORD PTR [ebp+0xc],eax
  4021fa:	mov    eax,DWORD PTR [ebp+0xc]
  4021fd:	push   0x4
  4021ff:	pop    ecx
  402200:	sub    ecx,eax
  402202:	add    ecx,DWORD PTR [ebp-0x18]
  402205:	mov    DWORD PTR [ebp-0x30],0xf89c85f9
  40220c:	mov    DWORD PTR [ebp+0x10],ecx
  40220f:	mov    DWORD PTR [ebp-0xe4],ebx
  402215:	mov    eax,DWORD PTR [ebp+0xc]
  402218:	mov    DWORD PTR [ebp-0xe0],eax
  40221e:	mov    eax,DWORD PTR [ebp+0x10]
  402221:	mov    DWORD PTR [ebp-0xdc],eax
  402227:	mov    eax,DWORD PTR [ebp-0x30]
  40222a:	xor    eax,esi
  40222c:	add    eax,edi
  40222e:	mov    DWORD PTR [ebp-0xd8],eax
  402234:	lea    eax,[ebp-0x88]
  40223a:	mov    DWORD PTR [ebp-0xd4],eax
  402240:	mov    eax,DWORD PTR [ebp-0xe4]
  402246:	xor    eax,esi
  402248:	add    eax,edi
  40224a:	mov    DWORD PTR [ebp-0xe4],eax
  402250:	lea    eax,[ebp-0xe4]
  402256:	push   eax
  402257:	mov    eax,DWORD PTR [ebp-0x48]
  40225a:	xor    eax,esi
  40225c:	add    eax,edi
  40225e:	push   eax
  40225f:	mov    eax,ds:0x42e333
  402264:	push   0x42e289
  402269:	push   DWORD PTR [eax]
  40226b:	call   0x402992
  402270:	mov    eax,DWORD PTR [ebp+0xc]
  402273:	mov    ecx,DWORD PTR [ebp+0x10]
  402276:	mov    DWORD PTR [ebp-0x84],ecx
  40227c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40227f:	xor    ecx,esi
  402281:	mov    DWORD PTR [ebp-0x18],eax
  402284:	add    ecx,edi
  402286:	jmp    0x4024e9
  40228b:	lea    edx,[ecx+eax*1]
  40228e:	mov    DWORD PTR [ebp+0x10],edx
  402291:	mov    edx,DWORD PTR [ebp-0x84]
  402297:	sub    edx,ecx
  402299:	mov    DWORD PTR [ebp+0xc],edx
  40229c:	mov    edx,DWORD PTR [ebp+0xc]
  40229f:	mov    DWORD PTR [ebp-0x4c],edx
  4022a2:	mov    edx,DWORD PTR [ebp+0x10]
  4022a5:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  4022ac:	mov    DWORD PTR [ebp-0x6c],edx
  4022af:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  4022b6:	mov    edx,DWORD PTR [ebp-0x50]
  4022b9:	xor    edx,esi
  4022bb:	add    edx,edi
  4022bd:	mov    DWORD PTR [ebp+0x10],edx
  4022c0:	mov    edx,DWORD PTR [ebp-0x50]
  4022c3:	xor    edx,esi
  4022c5:	add    edx,edi
  4022c7:	mov    DWORD PTR [ebp+0xc],edx
  4022ca:	mov    DWORD PTR [ebp-0x68],0xf89c85d9
  4022d1:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  4022d8:	mov    edx,DWORD PTR [ebp-0x50]
  4022db:	mov    ebx,DWORD PTR [ebp-0x4c]
  4022de:	xor    edx,esi
  4022e0:	add    edx,edi
  4022e2:	cmp    ebx,edx
  4022e4:	je     0x4024dd
  4022ea:	mov    eax,DWORD PTR [ebp-0x20]
  4022ed:	xor    eax,esi
  4022ef:	mov    edx,0xffcd8d20
  4022f4:	sub    edx,eax
  4022f6:	add    edx,DWORD PTR [ebp-0x4c]
  4022f9:	mov    eax,DWORD PTR [ebp-0x20]
  4022fc:	mov    ebx,DWORD PTR [ebp+0x10]
  4022ff:	xor    eax,esi
  402301:	add    eax,edi
  402303:	imul   eax,ebx
  402306:	cmp    eax,edx
  402308:	ja     0x4024da
  40230e:	mov    edx,DWORD PTR [ebp+0x10]
  402311:	mov    eax,DWORD PTR [ebp-0x4c]
  402314:	mov    ebx,DWORD PTR [ebp-0x68]
  402317:	sub    eax,edx
  402319:	xor    ebx,esi
  40231b:	xor    edx,edx
  40231d:	add    ebx,edi
  40231f:	div    ebx
  402321:	mov    DWORD PTR [ebp+0xc],eax
  402324:	mov    eax,DWORD PTR [ebp-0x74]
  402327:	mov    edx,DWORD PTR [ebp+0xc]
  40232a:	xor    eax,esi
  40232c:	add    eax,edi
  40232e:	cmp    edx,eax
  402330:	jbe    0x402340
  402336:	mov    eax,DWORD PTR [ebp-0x74]
  402339:	xor    eax,esi
  40233b:	add    eax,edi
  40233d:	mov    DWORD PTR [ebp+0xc],eax
  402340:	mov    eax,DWORD PTR [ebp-0x68]
  402343:	mov    edx,DWORD PTR [ebp+0xc]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	imul   eax,edx
  40234d:	mov    DWORD PTR [ebp+0xc],eax
  402350:	mov    eax,DWORD PTR [ebp-0x50]
  402353:	mov    edx,DWORD PTR [ebp+0xc]
  402356:	xor    eax,esi
  402358:	add    eax,edi
  40235a:	cmp    edx,eax
  40235c:	je     0x4024c3
  402362:	mov    eax,DWORD PTR [ebp+0xc]
  402365:	mov    DWORD PTR [ebp-0x34],eax
  402368:	mov    eax,DWORD PTR [ebp+0x10]
  40236b:	add    eax,DWORD PTR [ebp-0x6c]
  40236e:	mov    DWORD PTR [ebp-0x30],0xf89c85b9
  402375:	mov    DWORD PTR [ebp-0x28],eax
  402378:	mov    eax,0xf89c85b8
  40237d:	mov    DWORD PTR [ebp-0x5c],eax
  402380:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  402387:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  40238e:	mov    DWORD PTR [ebp-0x38],eax
  402391:	mov    eax,DWORD PTR [ebp-0x30]
  402394:	xor    eax,esi
  402396:	add    eax,edi
  402398:	jmp    0x40247f
  40239d:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4023a4:	mov    DWORD PTR [ebp-0x80],0xf89c85ad
  4023ab:	mov    eax,DWORD PTR [ebp-0x38]
  4023ae:	mov    edx,DWORD PTR [ebp+0xc]
  4023b1:	xor    eax,esi
  4023b3:	add    eax,edi
  4023b5:	imul   eax,edx
  4023b8:	mov    edx,DWORD PTR [ebp-0x28]
  4023bb:	mov    al,BYTE PTR [eax+edx*1]
  4023be:	mov    BYTE PTR [ebp-0x1],al
  4023c1:	mov    eax,DWORD PTR [ebp-0x38]
  4023c4:	mov    edx,DWORD PTR [ebp+0xc]
  4023c7:	xor    eax,esi
  4023c9:	add    eax,edi
  4023cb:	imul   eax,edx
  4023ce:	mov    edx,DWORD PTR [ebp-0x54]
  4023d1:	xor    edx,esi
  4023d3:	add    eax,edx
  4023d5:	mov    edx,DWORD PTR [ebp-0x28]
  4023d8:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  4023e0:	mov    edx,DWORD PTR [ebp-0x78]
  4023e3:	xor    edx,esi
  4023e5:	lea    eax,[edx+eax*1+0x3272e0]
  4023ec:	movzx  edx,BYTE PTR [ebp-0x1]
  4023f0:	xor    edx,eax
  4023f2:	mov    BYTE PTR [ebp-0x1],dl
  4023f5:	mov    al,BYTE PTR [ebp-0x1]
  4023f8:	mov    edx,DWORD PTR [ebp-0x38]
  4023fb:	mov    ebx,DWORD PTR [ebp+0xc]
  4023fe:	xor    edx,esi
  402400:	add    edx,edi
  402402:	imul   edx,ebx
  402405:	mov    ebx,DWORD PTR [ebp-0x28]
  402408:	mov    BYTE PTR [edx+ebx*1],al
  40240b:	mov    eax,DWORD PTR [ebp-0x38]
  40240e:	mov    edx,DWORD PTR [ebp+0xc]
  402411:	xor    eax,esi
  402413:	add    eax,edi
  402415:	imul   eax,edx
  402418:	mov    edx,DWORD PTR [ebp-0x28]
  40241b:	mov    al,BYTE PTR [eax+edx*1]
  40241e:	mov    BYTE PTR [ebp-0x1],al
  402421:	mov    eax,DWORD PTR [ebp-0x38]
  402424:	mov    edx,DWORD PTR [ebp+0xc]
  402427:	xor    eax,esi
  402429:	add    eax,edi
  40242b:	imul   eax,edx
  40242e:	mov    edx,DWORD PTR [ebp-0x5c]
  402431:	xor    edx,esi
  402433:	add    eax,edx
  402435:	mov    edx,DWORD PTR [ebp-0x28]
  402438:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  402440:	mov    edx,DWORD PTR [ebp-0x80]
  402443:	xor    edx,esi
  402445:	lea    eax,[edx+eax*1+0x3272e0]
  40244c:	movzx  edx,BYTE PTR [ebp-0x1]
  402450:	xor    edx,eax
  402452:	mov    BYTE PTR [ebp-0x1],dl
  402455:	mov    al,BYTE PTR [ebp-0x1]
  402458:	mov    edx,DWORD PTR [ebp-0x38]
  40245b:	mov    ebx,DWORD PTR [ebp+0xc]
  40245e:	xor    edx,esi
  402460:	add    edx,edi
  402462:	imul   edx,ebx
  402465:	mov    ebx,DWORD PTR [ebp-0x28]
  402468:	mov    BYTE PTR [edx+ebx*1],al
  40246b:	mov    eax,DWORD PTR [ebp-0x10]
  40246e:	mov    edx,DWORD PTR [ebp-0x5c]
  402471:	xor    eax,esi
  402473:	xor    edx,esi
  402475:	add    eax,edi
  402477:	add    edx,edi
  402479:	imul   eax,edx
  40247c:	add    eax,DWORD PTR [ebp+0xc]
  40247f:	mov    DWORD PTR [ebp+0xc],eax
  402482:	mov    eax,DWORD PTR [ebp+0xc]
  402485:	mov    edx,DWORD PTR [ebp-0x34]
  402488:	cmp    edx,eax
  40248a:	jb     0x40239d
  402490:	mov    eax,DWORD PTR [ebp-0x5c]
  402493:	mov    edx,DWORD PTR [ebp-0x34]
  402496:	xor    eax,esi
  402498:	add    eax,edi
  40249a:	imul   eax,edx
  40249d:	mov    edx,DWORD PTR [ebp-0x30]
  4024a0:	xor    edx,esi
  4024a2:	add    edx,edi
  4024a4:	or     eax,edx
  4024a6:	mov    edx,DWORD PTR [ebp-0x20]
  4024a9:	xor    edx,esi
  4024ab:	add    eax,edx
  4024ad:	mov    edx,DWORD PTR [ebp-0x20]
  4024b0:	xor    edx,esi
  4024b2:	add    eax,edx
  4024b4:	mov    edx,DWORD PTR [ebp+0x10]
  4024b7:	lea    eax,[eax+edx*1+0x64e5c0]
  4024be:	jmp    0x4024d2
  4024c3:	mov    eax,DWORD PTR [ebp-0x20]
  4024c6:	mov    edx,DWORD PTR [ebp+0x10]
  4024c9:	xor    eax,esi
  4024cb:	lea    eax,[eax+edx*1+0x3272e0]
  4024d2:	mov    DWORD PTR [ebp+0x10],eax
  4024d5:	jmp    0x4022ea
  4024da:	mov    eax,DWORD PTR [ebp-0x18]
  4024dd:	mov    edx,DWORD PTR [ebp-0x48]
  4024e0:	xor    edx,esi
  4024e2:	lea    ecx,[ecx+edx*1+0x3272e0]
  4024e9:	lea    edx,[ecx-0x3272e0]
  4024ef:	xor    edx,esi
  4024f1:	cmp    edx,0xf89c95b9
  4024f7:	jne    0x40228b
  4024fd:	mov    ecx,DWORD PTR [ebp-0x1c]
  402500:	mov    edx,DWORD PTR [ebp-0x48]
  402503:	mov    ebx,DWORD PTR [ebp-0x1c]
  402506:	xor    edx,esi
  402508:	mov    dl,BYTE PTR [edx+eax*1+0x3272e0]
  40250f:	xor    ecx,esi
  402511:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  402518:	xor    ebx,esi
  40251a:	mov    BYTE PTR [ebx+eax*1+0x3272e0],dl
  402521:	mov    edx,DWORD PTR [ebp-0x48]
  402524:	xor    edx,esi
  402526:	mov    BYTE PTR [edx+eax*1+0x3272e0],cl
  40252d:	mov    eax,DWORD PTR [ebp-0x48]
  402530:	mov    eax,DWORD PTR [ebp-0x8]
  402533:	xor    eax,esi
  402535:	add    eax,edi
  402537:	mov    ds:0x42e397,eax
  40253c:	mov    eax,DWORD PTR [ebp-0x8]
  40253f:	xor    eax,esi
  402541:	add    eax,edi
  402543:	mov    ds:0x42e38f,eax
  402548:	lea    eax,[ebp-0x2c]
  40254b:	mov    DWORD PTR [ebp-0x90],eax
  402551:	lea    eax,[ebp+0x4]
  402554:	mov    DWORD PTR [ebp-0x2c],eax
  402557:	mov    eax,DWORD PTR [ebp-0x2c]
  40255a:	test   eax,eax
  40255c:	je     0x40268d
  402562:	mov    DWORD PTR [ebp-0xa0],0xf152c30
  40256c:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  402576:	mov    DWORD PTR [ebp-0x8c],0x373fc21
  402580:	mov    DWORD PTR [ebp-0x94],0x72670a11
  40258a:	call   0x4053bb
  40258f:	mov    eax,DWORD PTR [ebp-0x24]
  402592:	mov    eax,DWORD PTR [ebp-0xc]
  402595:	mov    eax,DWORD PTR [ebp-0x8]
  402598:	mov    DWORD PTR [ebp+0xc],eax
  40259b:	mov    eax,eax
  40259d:	mov    eax,ds:0x42e313
  4025a2:	mov    eax,DWORD PTR [eax+0x1c8]
  4025a8:	mov    eax,DWORD PTR [eax]
  4025aa:	cdq    
  4025ab:	mov    ebx,eax
  4025ad:	mov    eax,0xfabdbee9
  4025b2:	add    ebx,eax
  4025b4:	adc    edx,0xffffffff
  4025b7:	and    DWORD PTR [ebp-0x10],0x0
  4025bb:	xor    edx,0x0
  4025be:	mov    DWORD PTR [ebp-0x6c],edx
  4025c1:	mov    edx,DWORD PTR [ebp+0xc]
  4025c4:	mov    DWORD PTR [ebp-0x14],edx
  4025c7:	mov    ecx,0x8a29a12b
  4025cc:	xor    ebx,ecx
  4025ce:	add    DWORD PTR [ebp-0x14],eax
  4025d1:	mov    edx,DWORD PTR [ebp-0x14]
  4025d4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025d8:	xor    edx,ecx
  4025da:	mov    DWORD PTR [ebp-0x58],edx
  4025dd:	mov    edx,DWORD PTR [ebp-0x10]
  4025e0:	xor    edx,0x0
  4025e3:	mov    DWORD PTR [ebp-0x54],edx
  4025e6:	cmp    DWORD PTR [ebp-0x58],ebx
  4025e9:	jne    0x4025fb
  4025ef:	mov    edx,DWORD PTR [ebp-0x6c]
  4025f2:	cmp    DWORD PTR [ebp-0x54],edx
  4025f5:	je     0x40262a
  4025fb:	mov    edx,DWORD PTR ds:0x42e313
  402601:	mov    edx,DWORD PTR [edx+0x1c0]
  402607:	mov    edx,DWORD PTR [edx]
  402609:	xor    ebx,ebx
  40260b:	add    edx,eax
  40260d:	adc    ebx,0xffffffff
  402610:	xor    edx,ecx
  402612:	xor    ebx,0x0
  402615:	cmp    edx,0x70941fc1
  40261b:	jne    0x40268d
  402621:	cmp    ebx,0xffffffff
  402624:	jne    0x40268d
  40262a:	mov    edx,DWORD PTR ds:0x42e38f
  402630:	mov    ebx,DWORD PTR ds:0x42e397
  402636:	xor    edx,ebx
  402638:	mov    DWORD PTR ds:0x42e38f,edx
  40263e:	mov    edx,DWORD PTR [ebp-0x2c]
  402641:	mov    ebx,DWORD PTR ds:0x42e38f
  402647:	add    ebx,DWORD PTR [edx]
  402649:	mov    edx,DWORD PTR [ebp-0x2c]
  40264c:	mov    DWORD PTR [edx],ebx
  40264e:	mov    edx,DWORD PTR [ebp+0xc]
  402651:	xor    esi,edx
  402653:	mov    edx,DWORD PTR ds:0x42e38f
  402659:	add    esi,edi
  40265b:	xor    ebx,ebx
  40265d:	add    esi,eax
  40265f:	adc    ebx,0xffffffff
  402662:	xor    edi,edi
  402664:	xor    esi,ecx
  402666:	xor    ebx,0x0
  402669:	add    edx,eax
  40266b:	adc    edi,0xffffffff
  40266e:	xor    edx,ecx
  402670:	xor    edi,0x0
  402673:	cmp    edx,esi
  402675:	jne    0x40268d
  40267b:	cmp    edi,ebx
  40267d:	jne    0x40268d
  402683:	mov    eax,ds:0x42e38f
  402688:	mov    ds:0x42e397,eax
  40268d:	mov    eax,ds:0x42e313
  402692:	push   0x4
  402694:	add    eax,0x1cc
  402699:	push   eax
  40269a:	lea    eax,[ebp-0x24]
  40269d:	push   eax
  40269e:	call   0x4026bd
  4026a3:	mov    eax,DWORD PTR [ebp-0x24]
  4026a6:	mov    eax,DWORD PTR [eax]
  4026a8:	pop    ebx
  4026a9:	pop    esi
  4026aa:	pop    edi
  4026ab:	leave  
  4026ac:	ret    0xc
  4026af:	xor    eax,eax
  4026b1:	sub    DWORD PTR ds:0x429010,0x42b004
  4026bb:	inc    eax
  4026bc:	ret    
  4026bd:	push   ebp
  4026be:	mov    ebp,esp
  4026c0:	sub    esp,0x10
  4026c3:	mov    eax,0xf89c85b9
  4026c8:	and    DWORD PTR ds:0x42b01c,0x0
  4026d2:	jmp    0x4026e4
  4026d7:	mov    edx,DWORD PTR ds:0x42b01c
  4026dd:	inc    edx
  4026de:	mov    DWORD PTR ds:0x42b01c,edx
  4026e4:	cmp    DWORD PTR ds:0x42b01c,0x17
  4026eb:	jae    0x402746
  4026f1:	cmp    DWORD PTR ds:0x42b01c,0x9
  4026f8:	jne    0x40271b
  4026fe:	push   0x42a010
  402703:	push   DWORD PTR [ebp-0x20]
  402706:	push   0x42e111
  40270b:	push   0x54f4
  402710:	push   0x3b26
  402715:	call   DWORD PTR ds:0x42e9a3
  40271b:	cmp    DWORD PTR ds:0x42b01c,0x8
  402722:	jne    0x402735
  402728:	mov    edx,DWORD PTR ds:0x42b01c
  40272e:	inc    edx
  40272f:	mov    DWORD PTR ds:0x42b01c,edx
  402735:	jmp    0x4026d7
  40273a:	mov    edx,DWORD PTR ds:0x42c000
  402740:	or     DWORD PTR ds:0x429018,edx
  402746:	mov    DWORD PTR [ebp-0x4],eax
  402749:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  402750:	mov    ecx,DWORD PTR [ebp-0x4]
  402753:	xor    edx,0x6f97
  402759:	push   esi
  40275a:	adc    esi,esi
  40275c:	mov    edx,0x7510899
  402761:	sbb    DWORD PTR ds:0x429008,0x3023
  40276b:	xor    ecx,edx
  40276d:	and    DWORD PTR ds:0x42900c,ebx
  402773:	mov    esi,0x3272e0
  402778:	push   edi
  402779:	mov    DWORD PTR ds:0x42d01c,0xa60
  402783:	mov    edi,DWORD PTR [ebp+0x10]
  402786:	sub    DWORD PTR ds:0x42c00c,0x3e85
  402790:	add    ecx,esi
  402792:	cmp    ecx,edi
  402794:	mov    DWORD PTR ds:0x42b010,0x6d5c
  40279e:	je     0x4028b7
  4027a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4027a7:	mov    edi,DWORD PTR ds:0x42b000
  4027ad:	sbb    DWORD PTR ds:0x429000,edi
  4027b3:	mov    edi,DWORD PTR [ebp+0x10]
  4027b6:	xor    eax,eax
  4027b8:	xor    ecx,edx
  4027ba:	xor    DWORD PTR ds:0x42900c,0x42a014
  4027c4:	add    ecx,esi
  4027c6:	xor    DWORD PTR ds:0x42d004,0x5916
  4027d0:	add    edi,0xfabdbee9
  4027d6:	adc    eax,0xffffffff
  4027d9:	not    DWORD PTR ds:0x42c004
  4027df:	xor    eax,0x0
  4027e2:	add    DWORD PTR ds:0x42c010,0x42c014
  4027ec:	mov    DWORD PTR [ebp-0xc],eax
  4027ef:	inc    eax
  4027f0:	push   ebx
  4027f1:	add    eax,0x103f
  4027f6:	xor    ebx,ebx
  4027f8:	xor    edi,0x8a29a12b
  4027fe:	mov    eax,ecx
  402800:	add    eax,0xfabdbee9
  402805:	adc    ebx,0xffffffff
  402808:	mov    DWORD PTR ds:0x42c00c,0x588f
  402812:	xor    eax,0x8a29a12b
  402817:	xor    ebx,0x0
  40281a:	mov    DWORD PTR ds:0x42d01c,0x82d
  402824:	cmp    eax,edi
  402826:	mov    DWORD PTR ds:0x42c01c,0x36f6
  402830:	jne    0x402849
  402836:	cmp    ebx,DWORD PTR [ebp-0xc]
  402839:	je     0x4028b1
  40283f:	jmp    0x402849
  402844:	mov    esi,0x3272e0
  402849:	mov    eax,DWORD PTR [ebp-0x4]
  40284c:	mov    edi,DWORD PTR [ebp-0x8]
  40284f:	xor    edi,edx
  402851:	add    edi,esi
  402853:	mov    esi,DWORD PTR [ebp+0x8]
  402856:	imul   edi,ecx
  402859:	mov    ebx,DWORD PTR [ebp+0xc]
  40285c:	xor    eax,edx
  40285e:	add    eax,ecx
  402860:	mov    al,BYTE PTR [ebx+eax*1+0x3272e0]
  402867:	mov    BYTE PTR [edi+esi*1],al
  40286a:	mov    eax,DWORD PTR [ebp-0x8]
  40286d:	mov    esi,DWORD PTR [ebp+0x10]
  402870:	xor    eax,edx
  402872:	xor    ebx,ebx
  402874:	add    esi,0xfabdbee9
  40287a:	adc    ebx,0xffffffff
  40287d:	lea    ecx,[ecx+eax*1+0x3272e0]
  402884:	xor    edi,edi
  402886:	xor    esi,0x8a29a12b
  40288c:	xor    ebx,0x0
  40288f:	mov    eax,ecx
  402891:	add    eax,0xfabdbee9
  402896:	adc    edi,0xffffffff
  402899:	xor    eax,0x8a29a12b
  40289e:	xor    edi,0x0
  4028a1:	cmp    eax,esi
  4028a3:	jne    0x402844
  4028a9:	cmp    edi,ebx
  4028ab:	jne    0x402844
  4028b1:	mov    eax,0xf89c85b8
  4028b6:	pop    ebx
  4028b7:	pop    edi
  4028b8:	pop    esi
  4028b9:	leave  
  4028ba:	ret    0xc
  4028bd:	push   ebp
  4028be:	mov    ebp,esp
  4028c0:	push   ecx
  4028c1:	and    DWORD PTR ds:0x42d010,0x0
  4028cb:	jmp    0x4028de
  4028d0:	xor    eax,eax
  4028d2:	add    eax,DWORD PTR ds:0x42d010
  4028d8:	inc    eax
  4028d9:	mov    ds:0x42d010,eax
  4028de:	cmp    DWORD PTR ds:0x42d010,0x1c
  4028e5:	jae    0x402908
  4028eb:	cmp    DWORD PTR ds:0x42d010,0x24
  4028f2:	jne    0x402903
  4028f8:	push   0x42c010
  4028fd:	call   DWORD PTR ds:0x42e9ab
  402903:	jmp    0x4028d0
  402908:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40290f:	add    edx,0x297b
  402915:	mov    eax,DWORD PTR [ebp+0x8]
  402918:	movsx  eax,BYTE PTR [eax]
  40291b:	add    edx,edx
  40291d:	mov    edx,0x3272e0
  402922:	sbb    DWORD PTR ds:0x429014,0x3776
  40292c:	sub    eax,edx
  40292e:	mov    ecx,0x7510899
  402933:	xor    DWORD PTR ds:0x429014,0x42b000
  40293d:	xor    eax,ecx
  40293f:	mov    DWORD PTR ds:0x429008,0x73b1
  402949:	cmp    eax,0xf89c85f4
  40294e:	mov    DWORD PTR ds:0x42c014,0x53e4
  402958:	jne    0x402987
  40295e:	mov    eax,DWORD PTR [ebp+0x8]
  402961:	push   esi
  402962:	mov    esi,DWORD PTR [ebp+0x8]
  402965:	add    esi,DWORD PTR [eax+0x3c]
  402968:	mov    DWORD PTR [ebp+0x8],esi
  40296b:	mov    eax,DWORD PTR [ebp-0x4]
  40296e:	mov    esi,DWORD PTR [ebp+0x8]
  402971:	xor    eax,ecx
  402973:	add    eax,edx
  402975:	cmp    DWORD PTR [esi+0x54],eax
  402978:	pop    esi
  402979:	je     0x402987
  40297f:	mov    eax,DWORD PTR [ebp+0x8]
  402982:	jmp    0x40298e
  402987:	mov    eax,DWORD PTR [ebp-0x4]
  40298a:	xor    eax,ecx
  40298c:	add    eax,edx
  40298e:	leave  
  40298f:	ret    0x4
  402992:	push   ebp
  402993:	mov    ebp,esp
  402995:	sub    esp,0x40
  402998:	push   ebx
  402999:	adc    DWORD PTR ds:0x42d000,0x42b014
  4029a3:	push   esi
  4029a4:	push   edi
  4029a5:	lea    eax,[ebp-0x24]
  4029a8:	push   eax
  4029a9:	add    DWORD PTR ds:0x429028,0x429004
  4029b3:	lea    eax,[ebp-0x20]
  4029b6:	push   eax
  4029b7:	xor    DWORD PTR ds:0x42c00c,0x5e29
  4029c1:	call   DWORD PTR ds:0x42e9a7
  4029c7:	sub    DWORD PTR ds:0x42a018,0x7df1
  4029d1:	push   0x21
  4029d3:	push   0x434
  4029d8:	sbb    DWORD PTR ds:0x429000,0x54d2
  4029e2:	push   0x98678765
  4029e7:	sub    DWORD PTR ds:0x42d014,0x42c00c
  4029f1:	call   DWORD PTR ds:0x42e983
  4029f7:	xor    DWORD PTR ds:0x429000,edx
  4029fd:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  402a04:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  402a0b:	mov    eax,DWORD PTR [ebp-0x4]
  402a0e:	mov    esi,0x7510899
  402a13:	xor    eax,esi
  402a15:	mov    edi,DWORD PTR ds:0x42b01c
  402a1b:	adc    DWORD PTR ds:0x429010,edi
  402a21:	mov    edi,0x3272e0
  402a26:	add    eax,edi
  402a28:	dec    DWORD PTR ds:0x429000
  402a2e:	mov    DWORD PTR [ebp-0x1c],eax
  402a31:	mov    eax,DWORD PTR [ebp+0x14]
  402a34:	adc    DWORD PTR ds:0x42c000,0x42b014
  402a3e:	test   eax,eax
  402a40:	je     0x402a4e
  402a46:	mov    eax,DWORD PTR [ebp+0x14]
  402a49:	mov    eax,DWORD PTR [eax]
  402a4b:	mov    DWORD PTR [ebp-0x1c],eax
  402a4e:	xor    eax,eax
  402a50:	xor    eax,DWORD PTR ds:0x42901c
  402a56:	and    eax,DWORD PTR ds:0x42b000
  402a5c:	mov    ds:0x42901c,eax
  402a61:	mov    eax,DWORD PTR [ebp-0x4]
  402a64:	xor    eax,esi
  402a66:	adc    ebx,DWORD PTR ds:0x429024
  402a6c:	add    eax,edi
  402a6e:	mov    DWORD PTR [ebp-0x8],eax
  402a71:	sbb    ebx,DWORD PTR ds:0x42c008
  402a77:	mov    eax,DWORD PTR [ebp-0xc]
  402a7a:	mov    DWORD PTR ds:0x42b014,0x1d
  402a84:	cmp    DWORD PTR ds:0x42b014,0x0
  402a8b:	je     0x402aca
  402a91:	cmp    DWORD PTR ds:0x42b014,0x20
  402a98:	jne    0x402ab6
  402a9e:	push   0x3b9b
  402aa3:	push   DWORD PTR [ebp-0x24]
  402aa6:	push   0x42d018
  402aab:	push   0x5e20
  402ab0:	call   DWORD PTR ds:0x42e9af
  402ab6:	xor    ebx,ebx
  402ab8:	or     ebx,DWORD PTR ds:0x42b014
  402abe:	dec    ebx
  402abf:	mov    DWORD PTR ds:0x42b014,ebx
  402ac5:	jmp    0x402a84
  402aca:	xor    eax,esi
  402acc:	and    DWORD PTR ds:0x42a01c,0x0
  402ad6:	mov    ebx,DWORD PTR ds:0x42a01c
  402adc:	inc    ebx
  402add:	mov    DWORD PTR ds:0x42a01c,ebx
  402ae3:	cmp    DWORD PTR ds:0x42a01c,0xd
  402aea:	jne    0x402af6
  402af0:	call   DWORD PTR ds:0x42e9b3
  402af6:	cmp    DWORD PTR ds:0x42a01c,0xc
  402afd:	jne    0x402b10
  402b03:	mov    ebx,DWORD PTR ds:0x42a01c
  402b09:	inc    ebx
  402b0a:	mov    DWORD PTR ds:0x42a01c,ebx
  402b10:	cmp    DWORD PTR ds:0x42a01c,0x15
  402b17:	jb     0x402ad6
  402b1d:	or     DWORD PTR ds:0x42c004,edx
  402b23:	add    eax,edi
  402b25:	sub    DWORD PTR ds:0x42b008,ebx
  402b2b:	mov    DWORD PTR [ebp-0x2c],eax
  402b2e:	mov    eax,DWORD PTR [ebp-0x4]
  402b31:	xor    eax,esi
  402b33:	add    eax,edi
  402b35:	dec    ebx
  402b36:	mov    DWORD PTR [ebp-0x38],eax
  402b39:	mov    DWORD PTR ds:0x42a00c,0x11
  402b43:	cmp    DWORD PTR ds:0x42a00c,0x0
  402b4a:	je     0x402bcf
  402b50:	cmp    DWORD PTR ds:0x42a00c,0x1b
  402b57:	jne    0x402b7d
  402b5d:	push   DWORD PTR [ebp-0x28]
  402b60:	push   0x42a000
  402b65:	push   DWORD PTR [ebp-0x24]
  402b68:	push   0x6762
  402b6d:	push   0x632b
  402b72:	push   0x871c
  402b77:	call   DWORD PTR ds:0x42e9b7
  402b7d:	xor    ebx,ebx
  402b7f:	xor    ebx,DWORD PTR ds:0x42a00c
  402b85:	dec    ebx
  402b86:	mov    DWORD PTR ds:0x42a00c,ebx
  402b8c:	jmp    0x402b43
  402b91:	and    DWORD PTR ds:0x42d018,0x0
  402b9b:	xor    eax,eax
  402b9d:	xor    eax,DWORD PTR ds:0x42d018
  402ba3:	inc    eax
  402ba4:	mov    ds:0x42d018,eax
  402ba9:	cmp    DWORD PTR ds:0x42d018,0x2a
  402bb0:	jne    0x402bbc
  402bb6:	call   DWORD PTR ds:0x42e9bb
  402bbc:	cmp    DWORD PTR ds:0x42d018,0x1c
  402bc3:	jb     0x402b9b
  402bc9:	and    ebx,0x7bf
  402bcf:	mov    ebx,DWORD PTR [ebp-0x4]
  402bd2:	xor    ebx,esi
  402bd4:	adc    DWORD PTR ds:0x42d01c,0x429024
  402bde:	add    ebx,edi
  402be0:	xor    DWORD PTR ds:0x42d008,0x22f2
  402bea:	mov    eax,DWORD PTR [ebp-0x2c]
  402bed:	xor    DWORD PTR ds:0x42a008,0x42d00c
  402bf7:	sub    eax,edi
  402bf9:	lea    ecx,[ebx-0x3272e0]
  402bff:	adc    DWORD PTR ds:0x42c01c,0x429010
  402c09:	xor    eax,esi
  402c0b:	xor    ecx,esi
  402c0d:	cmp    ecx,eax
  402c0f:	mov    DWORD PTR ds:0x42a014,0x880
  402c19:	je     0x405220
  402c1f:	and    DWORD PTR ds:0x42d018,0x0
  402c29:	jmp    0x402c3c
  402c2e:	xor    eax,eax
  402c30:	or     eax,DWORD PTR ds:0x42d018
  402c36:	inc    eax
  402c37:	mov    ds:0x42d018,eax
  402c3c:	cmp    DWORD PTR ds:0x42d018,0x1f
  402c43:	jae    0x402c7e
  402c49:	cmp    DWORD PTR ds:0x42d018,0x26
  402c50:	jne    0x402c69
  402c56:	push   0x847e
  402c5b:	push   0x42901c
  402c60:	push   DWORD PTR [ebp-0x20]
  402c63:	call   DWORD PTR ds:0x42e9bf
  402c69:	jmp    0x402c2e
  402c6e:	mov    eax,ds:0x42b010
  402c73:	and    eax,DWORD PTR ds:0x429010
  402c79:	mov    ds:0x42b010,eax
  402c7e:	mov    eax,DWORD PTR [ebp-0x4]
  402c81:	xor    eax,esi
  402c83:	mov    DWORD PTR ds:0x42c008,0x7a4b
  402c8d:	add    eax,edi
  402c8f:	cmp    ebx,eax
  402c91:	mov    DWORD PTR ds:0x42b000,0x3723
  402c9b:	jne    0x405184
  402ca1:	push   DWORD PTR [ebp+0x8]
  402ca4:	neg    DWORD PTR ds:0x42d018
  402caa:	call   0x4028bd
  402caf:	movzx  ecx,BYTE PTR ds:0x42c000
  402cb6:	xor    DWORD PTR ds:0x429000,ecx
  402cbc:	mov    DWORD PTR [ebp-0x14],eax
  402cbf:	sbb    eax,0x7bdb
  402cc4:	mov    eax,DWORD PTR [ebp-0x4]
  402cc7:	mov    ecx,DWORD PTR [ebp-0x14]
  402cca:	sbb    DWORD PTR ds:0x42b00c,0x398d
  402cd4:	xor    eax,esi
  402cd6:	add    eax,edi
  402cd8:	mov    DWORD PTR ds:0x42a018,0x3718
  402ce2:	jmp    0x405039
  402ce7:	dec    ecx
  402ce8:	je     0x402ca4
  402cea:	dec    ebp
  402ceb:	stos   DWORD PTR es:[edi],eax
  402cec:	cmp    ecx,DWORD PTR [ebp+0x6a681074]
  402cf2:	adc    eax,0xb3a9b665
  402cf7:	jp     0x402d73
  402cf9:	jp     0x402d75
  402cfb:	xor    BYTE PTR [edi+0x7a],bl
  402cfe:	jp     0x402d11
  402d00:	sub    BYTE PTR [edi],dl
  402d02:	cmp    eax,0x2f1b2115
  402d07:	popa   
  402d08:	xor    al,0x65
  402d0a:	out    dx,ax
  402d0c:	arpl   WORD PTR [edx+0x6a],bp
  402d0f:	imul   esi,DWORD PTR [edx],0x6cfdd8c1
  402d15:	inc    esp
  402d16:	imul   edi,DWORD PTR [ebp+0x5b],0xffffffac
  402d1a:	jl     0x402d85
  402d1c:	push   ebp
  402d1d:	iret   
  402d1e:	pop    ecx
  402d1f:	dec    edx
  402d20:	cmp    al,0x88
  402d22:	cli    
  402d23:	xchg   DWORD PTR [esi+0x57],esi
  402d26:	dec    ecx
  402d27:	jg     0x402d60
  402d29:	mov    WORD PTR [esi+0x3ba2bc7f],fs
  402d2f:	sub    bh,bh
  402d31:	data16 fdivr st,st(2)
  402d34:	push   ebx
  402d35:	jg     0x402d55
  402d37:	jmp    0xe9faf671
  402d3c:	xchg   DWORD PTR [ebx],edx
  402d3e:	fimul  WORD PTR [ebx-0x54aaf0db]
  402d44:	mov    al,al
  402d46:	imul   DWORD PTR [ecx-0x27]
  402d49:	add    al,dl
  402d4b:	push   cs
  402d4c:	cli    
  402d4d:	es adc al,0x44
  402d50:	or     BYTE PTR [esi],ah
  402d52:	imul   esp,DWORD PTR [ebp+esi*4-0x51],0x13
  402d57:	pop    ebp
  402d58:	add    DWORD PTR [esi+0x2b45e5ff],esp
  402d5e:	jo     0x402d92
  402d60:	les    ebx,FWORD PTR [ebx-0xb]
  402d63:	sbb    bh,dl
  402d65:	je     0x402d24
  402d67:	arpl   cx,bx
  402d69:	xchg   esp,eax
  402d6a:	pop    edi
  402d6b:	mov    edi,DWORD PTR [ebp+0x4d821007]
  402d71:	repz sahf 
  402d73:	cmp    BYTE PTR [edx+0x73],dh
  402d76:	or     ebx,edx
  402d78:	sub    DWORD PTR [edx-0x77],edx
  402d7b:	xor    BYTE PTR [ebx],dh
  402d7d:	push   eax
  402d7e:	jecxz  0x402d4f
  402d80:	mov    ah,BYTE PTR ds:0xc8b7cc85
  402d86:	test   BYTE PTR [ebp-0x20],ch
  402d89:	inc    ecx
  402d8a:	push   edx
  402d8b:	dec    eax
  402d8c:	or     BYTE PTR [esi],bh
  402d8e:	repz add ebp,DWORD PTR ss:[ecx+0x4ca7ca4b]
  402d96:	fadd   QWORD PTR [eax]
  402d98:	push   esi
  402d99:	stc    
  402d9a:	push   edx
  402d9b:	push   esi
  402d9c:	mov    eax,ds:0xf4bf64f5
  402da1:	inc    edx
  402da2:	sbb    DWORD PTR [ebp+0x3],eax
  402da5:	popa   
  402da6:	frstor [ecx+0x3a]
  402da9:	std    
  402daa:	lds    esp,FWORD PTR [eax+0x7e]
  402dad:	mov    dl,0xd3
  402daf:	or     esi,DWORD PTR [esi]
  402db1:	push   esp
  402db3:	or     eax,0x2d757994
  402db8:	fnstsw WORD PTR [ebp+0x14]
  402dbb:	push   ebx
  402dbc:	lea    edi,[eax*1-0x6c222921]
  402dc3:	cli    
  402dc4:	xor    edi,DWORD PTR [eax-0x6df5188d]
  402dca:	ss pop edx
  402dcc:	push   edi
  402dcd:	ret    
  402dce:	ret    
  402dcf:	gs sahf 
  402dd1:	pusha  
  402dd2:	retf   0x6640
  402dd5:	mov    ds:0xf352c637,al
  402dda:	aas    
  402ddb:	mov    ah,dl
  402ddd:	push   edi
  402dde:	mov    ah,0xd6
  402de0:	push   0x548efe42
  402de5:	ret    
  402de6:	sub    ah,bl
  402de8:	dec    esp
  402de9:	push   ds
  402dea:	les    edi,FWORD PTR [edx]
  402dec:	xor    BYTE PTR [eax+eiz*4+0x3c],0x5c
  402df1:	jb     0x402e62
  402df3:	fist   WORD PTR [ebx+0x1b]
  402df6:	not    bl
  402df8:	dec    ebp
  402df9:	jno    0x402e42
  402dfb:	inc    eax
  402dfc:	cmp    BYTE PTR [eax-0x6ac3e4c8],ah
  402e02:	scas   eax,DWORD PTR es:[edi]
  402e03:	das    
  402e04:	and    DWORD PTR [ecx],edi
  402e06:	imul   ebx,DWORD PTR [edi+edx*1+0x19f13b9b],0x86b79f63
  402e11:	mov    bh,0x4e
  402e13:	pushf  
  402e14:	mov    esi,0x901d4a25
  402e19:	shl    DWORD PTR [ebp+0x6e],1
  402e1c:	fld    TBYTE PTR [edx+ebx*2]
  402e1f:	rcr    BYTE PTR [eax+0x39951789],cl
  402e25:	test   eax,edi
  402e27:	xchg   edi,eax
  402e28:	push   esi
  402e29:	xlat   BYTE PTR ds:[ebx]
  402e2a:	pop    edi
  402e2b:	enter  0x4e12,0xb8
  402e2f:	bound  esp,QWORD PTR [eax+ecx*4]
  402e32:	sub    esi,edi
  402e34:	popf   
  402e35:	xor    eax,0xaa861b6a
  402e3a:	scas   eax,DWORD PTR es:[edi]
  402e3b:	jbe    0x402dd9
  402e3d:	jp     0x402dea
  402e3f:	rcr    DWORD PTR [ebx],cl
  402e41:	call   0x2bbc7149
  402e46:	out    0x11,al
  402e48:	(bad)  
  402e49:	in     eax,dx
  402e4a:	lods   al,BYTE PTR ds:[esi]
  402e4b:	outs   dx,DWORD PTR ds:[esi]
  402e4c:	out    dx,eax
  402e4d:	xchg   DWORD PTR [ebx+0x34],ebx
  402e50:	jb     0x402e6d
  402e52:	dec    edx
  402e53:	test   eax,0x384b6dfb
  402e58:	pushf  
  402e59:	pop    es
  402e5a:	hlt    
  402e5b:	jne    0x402e6e
  402e5d:	push   esi
  402e5e:	loopne 0x402e61
  402e60:	xor    al,0x26
  402e62:	and    bl,dh
  402e64:	or     eax,0x3e324705
  402e69:	xchg   DWORD PTR [edi],eax
  402e6b:	push   cs
  402e6c:	stos   BYTE PTR es:[edi],al
  402e6d:	jbe    0x402e41
  402e6f:	or     BYTE PTR ss:[ebp+0x11],cl
  402e73:	mov    al,0x45
  402e75:	inc    edx
  402e76:	sbb    eax,0x584007de
  402e7b:	out    dx,al
  402e7c:	lods   eax,DWORD PTR ds:[esi]
  402e7d:	ret    
  402e7e:	mov    DWORD PTR [edi],esp
  402e80:	and    ecx,esp
  402e82:	mov    cl,0x89
  402e84:	push   eax
  402e85:	push   esi
  402e86:	leave  
  402e87:	test   ebp,ebx
  402e89:	aaa    
  402e8a:	(bad)  
  402e8b:	adc    al,0x55
  402e8d:	popf   
  402e8e:	add    al,0x18
  402e90:	repnz test eax,0x1f1d0a53
  402e96:	aaa    
  402e97:	loope  0x402f10
  402e99:	nop
  402e9a:	jecxz  0x402e39
  402e9c:	cmp    cl,bl
  402e9e:	aam    0x9d
  402ea0:	stos   BYTE PTR es:[edi],al
  402ea1:	pop    ebp
  402ea2:	jmp    0x402e9d
  402ea4:	pushf  
  402ea5:	mov    edi,0x230971f9
  402eaa:	pop    es
  402eab:	std    
  402eac:	mov    al,0x1
  402eae:	inc    esi
  402eaf:	mov    ebp,0x7f1a1816
  402eb4:	sbb    al,0x97
  402eb6:	dec    ecx
  402eb7:	mov    ch,0x62
  402eb9:	jae    0x402e9c
  402ebb:	and    eax,0x33da8a5e
  402ec0:	mov    ?,WORD PTR [esi]
  402ec2:	neg    DWORD PTR [ebx-0x2f042d39]
  402ec8:	leave  
  402ec9:	popa   
  402eca:	push   es
  402ecb:	adc    dl,bl
  402ecd:	push   eax
  402ece:	popa   
  402ecf:	(bad)  
  402ed1:	jo     0x402e89
  402ed3:	sbb    ecx,DWORD PTR [edi-0x2d]
  402ed6:	mov    esi,0x741788cb
  402edb:	in     eax,dx
  402edc:	adc    al,0x15
  402ede:	stos   BYTE PTR es:[edi],al
  402edf:	or     eax,DWORD PTR [esi]
  402ee1:	sar    DWORD PTR [eax],1
  402ee3:	hlt    
  402ee4:	das    
  402ee5:	cmp    dh,BYTE PTR [ebp+0x5d]
  402ee8:	in     al,0x20
  402eea:	out    dx,eax
  402eeb:	xor    esi,DWORD PTR fs:[ebx-0xc]
  402eef:	fadd   QWORD PTR [eax+esi*8+0xc]
  402ef3:	ins    DWORD PTR es:[edi],dx
  402ef4:	test   BYTE PTR [edx-0x3],bl
  402ef7:	push   ebx
  402ef8:	in     al,dx
  402ef9:	lods   al,BYTE PTR ds:[esi]
  402efa:	and    ebx,DWORD PTR ds:0x4fcc3941
  402f00:	pop    eax
  402f01:	shr    al,1
  402f03:	bound  edi,QWORD PTR [edx-0x71]
  402f06:	inc    ebp
  402f07:	idiv   BYTE PTR [esp+eax*8+0x78db4cd0]
  402f0e:	stos   DWORD PTR es:[edi],eax
  402f0f:	in     al,dx
  402f10:	xor    BYTE PTR [bx+di],dl
  402f13:	scas   eax,DWORD PTR es:[edi]
  402f14:	xlat   BYTE PTR ds:[ebx]
  402f15:	imul   edx,DWORD PTR [edi-0x1909bc74],0x80686d6e
  402f1f:	lea    edi,[ecx-0x68abe48]
  402f25:	and    eax,0xdb78c6e5
  402f2a:	mov    ah,0x84
  402f2c:	mov    WORD PTR [si-0x4f],es
  402f30:	jnp    0x402f38
  402f32:	sub    edx,DWORD PTR [esp+eiz*2+0x4ec30fda]
  402f39:	ret    
  402f3a:	int3   
  402f3b:	out    dx,eax
  402f3c:	and    dh,BYTE PTR [eax]
  402f3e:	mov    WORD PTR [eax],ss
  402f40:	mov    bh,0x4b
  402f42:	(bad)  
  402f43:	icebp  
  402f44:	fisubr DWORD PTR [ebx+edx*2+0x31de028b]
  402f4b:	hlt    
  402f4c:	fmul   QWORD PTR [ebx+0x4f40bcba]
  402f52:	jmp    0xe94d:0x997a9537
  402f59:	je     0x402f3b
  402f5b:	jle    0x402fa8
  402f5d:	mov    eax,ds:0x16409940
  402f62:	xchg   ebx,eax
  402f63:	inc    ebx
  402f64:	or     al,0x4c
  402f66:	mov    al,0xec
  402f68:	mov    DWORD PTR ds:0xd00b86bf,edx
  402f6e:	xchg   ecx,eax
  402f6f:	or     ecx,DWORD PTR [edx]
  402f71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f72:	sbb    DWORD PTR [ecx+0x7b968faa],edx
  402f78:	xor    eax,0x7213f960
  402f7d:	xlat   BYTE PTR ds:[ebx]
  402f7e:	imul   esp,DWORD PTR [edi],0x5ca9fbed
  402f84:	and    edx,esi
  402f86:	fnstsw WORD PTR [ebx]
  402f88:	and    DWORD PTR ds:0xf531bb96,esi
  402f8e:	or     DWORD PTR [esi],0xf480381f
  402f94:	add    ah,BYTE PTR [edi-0x47]
  402f97:	cmp    al,0x56
  402f99:	loope  0x402f55
  402f9b:	stos   BYTE PTR es:[edi],al
  402f9c:	push   esp
  402f9d:	stc    
  402f9e:	into   
  402f9f:	rcr    BYTE PTR [edx+0x24],1
  402fa2:	int    0x28
  402fa4:	cmp    dh,BYTE PTR [edx]
  402fa6:	nop
  402fa7:	sahf   
  402fa8:	xchg   DWORD PTR [ecx],ebx
  402faa:	(bad)  
  402fab:	mov    DWORD PTR [ecx-0x5d],0xec266090
  402fb2:	pop    di
  402fb4:	sub    ch,0xfe
  402fb7:	(bad)  
  402fb9:	mov    ebx,0xb697587b
  402fbe:	pop    ss
  402fbf:	fs nop
  402fc1:	jne    0x40300f
  402fc3:	add    eax,0x806f540b
  402fc8:	mov    al,ds:0xce6633b2
  402fcd:	test   al,0xd3
  402fcf:	jnp    0x402f59
  402fd1:	sub    edi,eax
  402fd3:	repz imul esp,DWORD PTR [esi],0x57fece5f
  402fda:	nop
  402fdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fdc:	push   es
  402fdd:	shl    DWORD PTR [ecx-0x2a3e62a3],0xcd
  402fe4:	mov    bl,0x39
  402fe6:	daa    
  402fe7:	and    esp,DWORD PTR [edi-0x60]
  402fea:	repnz push esp
  402fec:	mov    bh,0xce
  402fee:	mov    esp,esp
  402ff0:	loop   0x403051
  402ff2:	daa    
  402ff3:	mov    DWORD PTR [ecx-0x1ea3d462],edi
  402ff9:	(bad)  
  402ffb:	add    BYTE PTR [ebx+0x60],dl
  402ffe:	retf   
  402fff:	lods   eax,DWORD PTR ds:[esi]
  403000:	cwde   
  403001:	adc    eax,0x8af3e439
  403006:	and    al,0x16
  403008:	add    DWORD PTR [ebp-0x8],eax
  40300b:	and    eax,0xaa6a678b
  403010:	add    edx,edx
  403012:	cmp    ah,BYTE PTR [eax]
  403014:	mov    ds:0x95172bd,al
  403019:	lock sti 
  40301b:	xchg   edx,eax
  40301c:	mov    ds,WORD PTR [edx-0x32]
  40301f:	popf   
  403020:	call   0x3ec4:0xdfb41c6e
  403027:	xchg   esi,eax
  403028:	mov    ds:0xfffac45b,al
  40302d:	outs   dx,DWORD PTR ds:[esi]
  40302e:	leave  
  40302f:	retf   
  403030:	int    0xf0
  403032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403033:	pop    ds
  403034:	inc    esi
  403035:	xchg   DWORD PTR [ebx+0x6a04e7c2],esp
  40303b:	mov    al,gs:0xc5742016
  403041:	add    ch,ah
  403043:	or     bh,BYTE PTR [edx+0x65]
  403046:	cmp    al,0xf8
  403048:	dec    edi
  403049:	jae    0x40309d
  40304b:	mov    edi,0xfc449a5d
  403050:	gs pusha 
  403052:	and    BYTE PTR [eax-0x4a],ah
  403055:	pushf  
  403056:	in     al,dx
  403057:	dec    ecx
  403058:	cmp    eax,0xb690fed1
  40305d:	into   
  40305e:	mov    eax,0xac90b0f0
  403063:	lock add eax,0x2851beba
  403069:	pop    eax
  40306a:	rol    BYTE PTR [edx],cl
  40306c:	jmp    0x30af9e0b
  403071:	cmp    DWORD PTR [edx-0x8daf259],esp
  403077:	stos   DWORD PTR es:[edi],eax
  403078:	mov    WORD PTR [esi-0x18],?
  40307b:	scas   al,BYTE PTR es:[edi]
  40307c:	push   ebp
  40307d:	dec    ebx
  40307e:	iret   
  40307f:	adc    BYTE PTR [ebx+0x65],ch
  403082:	cld    
  403083:	test   eax,0xecc0799e
  403088:	jns    0x4030cc
  40308a:	or     DWORD PTR [ebp-0x41],edi
  40308d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40308e:	and    dh,al
  403090:	imul   esp,DWORD PTR [ecx],0x2732f15d
  403096:	popf   
  403097:	jo     0x40309a
  403099:	cmp    edi,esp
  40309b:	ins    BYTE PTR es:[edi],dx
  40309c:	lea    edi,[ecx+0x21cc853b]
  4030a2:	and    BYTE PTR [edi],bh
  4030a4:	es popf 
  4030a6:	push   esi
  4030a7:	pop    eax
  4030a8:	sub    esp,DWORD PTR [ebp+0x6460164b]
  4030ae:	(bad)  
  4030af:	in     eax,dx
  4030b0:	mov    edi,0xd028b07f
  4030b5:	fiadd  WORD PTR [eax+edi*2-0x1f994ca7]
  4030bc:	add    cl,BYTE PTR [edx+0x40351a25]
  4030c2:	lfs    edi,FWORD PTR [ecx+0x7f]
  4030c6:	cmp    eax,0x2c589019
  4030cb:	mov    ah,0x7a
  4030ce:	xchg   esi,eax
  4030cf:	xlat   BYTE PTR ds:[ebx]
  4030d0:	cli    
  4030d1:	dec    esi
  4030d2:	pop    ds
  4030d3:	sub    bh,BYTE PTR [ecx+edx*2+0x4a]
  4030d7:	repz std 
  4030d9:	cmp    al,0x9a
  4030db:	xchg   cl,ch
  4030dd:	bound  esi,QWORD PTR [edx+0x70]
  4030e0:	jge    0x4030db
  4030e2:	sub    esi,ebp
  4030e4:	xor    dh,BYTE PTR [ecx+0x1c]
  4030e7:	pushf  
  4030e8:	sub    BYTE PTR [ebx+0x3fea269d],dh
  4030ee:	jne    0x40308e
  4030f0:	mov    cl,0xd4
  4030f2:	fs jl  0x403156
  4030f5:	loope  0x403108
  4030f7:	cmc    
  4030f8:	push   ebx
  4030f9:	and    al,0xc
  4030fb:	dec    BYTE PTR [ebx+0x32de5b34]
  403101:	add    edi,DWORD PTR [edx]
  403103:	fsub   DWORD PTR [eax+edx*1+0xdd22704]
  40310a:	call   0x6dee8861
  40310f:	or     ch,BYTE PTR [eax+0x44]
  403112:	mov    ds:0x75b47e19,al
  403117:	jno    0x403151
  403119:	pop    ds
  40311a:	pushf  
  40311b:	jno    0x403154
  40311d:	add    al,0x34
  40311f:	repnz mov eax,ds:0xb09a64af
  403125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403126:	xor    dl,cl
  403128:	cmc    
  403129:	xchg   edx,eax
  40312a:	das    
  40312b:	out    dx,eax
  40312c:	fnsave [eax+0x5c129dc1]
  403132:	push   ecx
  403133:	dec    ebx
  403134:	or     al,0x91
  403136:	dec    esp
  403137:	add    eax,0x6ae90df4
  40313c:	mov    cl,0xcb
  40313e:	int    0x59
  403140:	xor    DWORD PTR [eax],0xffffffcb
  403143:	retf   
  403144:	pop    ss
  403145:	ins    BYTE PTR es:[edi],dx
  403146:	xor    dh,cl
  403148:	ret    
  403149:	add    al,0x2c
  40314b:	add    al,0xbf
  40314d:	into   
  40314e:	pop    eax
  40314f:	div    DWORD PTR [edx-0x3e]
  403152:	xchg   esi,eax
  403153:	mov    ds:0xcb216cdd,al
  403158:	xchg   dl,dl
  40315a:	or     eax,0xd90c210f
  40315f:	pop    ss
  403160:	jecxz  0x4031b6
  403162:	add    ebx,DWORD PTR [edi+edx*8]
  403165:	dec    esi
  403166:	mov    WORD PTR [edi],ss
  403168:	cmc    
  403169:	sbb    eax,0xa1d2fbed
  40316e:	mov    bl,0x99
  403170:	dec    ebx
  403171:	pop    ss
  403172:	ds ret 0xde96
  403176:	jne    0x403116
  403178:	xlat   BYTE PTR ds:[ebx]
  403179:	jge    0x403198
  40317b:	test   BYTE PTR [edx+0x7f],cl
  40317e:	push   ebx
  40317f:	inc    esp
  403180:	test   ch,ch
  403182:	mov    BYTE PTR [ebp+0x4ae68bd1],dl
  403188:	test   eax,0x6ea2079f
  40318d:	ret    0xbc21
  403190:	pop    esp
  403191:	out    dx,eax
  403192:	sti    
  403193:	popf   
  403194:	mov    edi,0x7712bec5
  403199:	lahf   
  40319a:	sub    eax,0x4a94b7
  40319f:	add    BYTE PTR [eax-0x7e00908a],dl
  4031a5:	lea    ebp,[ebx]
  4031a7:	jmp    0xb174:0x3ae98b32
  4031ae:	fs jae 0x4031d5
  4031b1:	xchg   edx,eax
  4031b2:	and    DWORD PTR [edx+esi*4-0x3f],esp
  4031b6:	or     al,0xd9
  4031b8:	in     al,dx
  4031b9:	test   DWORD PTR [esi-0x22875086],0x79286395
  4031c3:	cmp    esi,DWORD PTR [edi+esi*4+0x293f10b6]
  4031ca:	cmp    DWORD PTR [ecx-0x6e],edx
  4031cd:	call   0x1f4d:0xd098f49e
  4031d4:	(bad)  [esi]
  4031d6:	in     eax,dx
  4031d7:	and    esp,ebx
  4031d9:	jb     0x403172
  4031db:	or     DWORD PTR [edx],eax
  4031dd:	cmp    DWORD PTR [ebx+eiz*4],esp
  4031e0:	sti    
  4031e1:	lods   al,BYTE PTR ds:[esi]
  4031e2:	dec    eax
  4031e3:	adc    ebx,DWORD PTR [edi+0x76]
  4031e6:	adc    DWORD PTR [esi-0x5548ed39],ebp
  4031ec:	inc    eax
  4031ed:	or     eax,ebx
  4031ef:	add    al,0xf5
  4031f1:	jnp    0x403219
  4031f3:	mov    ah,0xb2
  4031f5:	inc    esi
  4031f6:	push   edi
  4031f7:	jnp    0x4031dd
  4031f9:	cli    
  4031fa:	ds xchg esp,eax
  4031fc:	loopne 0x403226
  4031fe:	push   0xd35d81a8
  403203:	ror    esp,cl
  403205:	mov    esp,0x815d75eb
  40320a:	pop    ebx
  40320b:	pop    es
  40320c:	sar    BYTE PTR [esi-0x7ec625c2],1
  403212:	push   ebp
  403213:	or     al,dh
  403215:	cld    
  403216:	pop    es
  403217:	ins    BYTE PTR es:[edi],dx
  403218:	pop    ds
  403219:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40321a:	xlat   BYTE PTR ds:[ebx]
  40321b:	dec    esp
  40321c:	xchg   DWORD PTR [ecx],edx
  40321e:	in     eax,0x8e
  403220:	cdq    
  403221:	pop    ecx
  403222:	pop    ecx
  403223:	ins    BYTE PTR es:[edi],dx
  403224:	es push ebp
  403226:	ret    0x8732
  403229:	dec    esp
  40322a:	sub    ebp,DWORD PTR [esi+eiz*2-0xf]
  40322e:	bound  edx,QWORD PTR [ecx]
  403230:	lods   eax,DWORD PTR ds:[esi]
  403231:	push   eax
  403232:	and    eax,0x8d19935b
  403237:	xlat   BYTE PTR ds:[ebx]
  403238:	test   bh,ch
  40323a:	mov    edi,0xae226dd1
  40323f:	mov    bl,0x40
  403241:	hlt    
  403242:	aad    0xfd
  403244:	rdtsc  
  403246:	xchg   ebp,eax
  403247:	lods   eax,DWORD PTR ds:[esi]
  403248:	xor    ch,bh
  40324a:	cdq    
  40324b:	addr16 jbe 0x403265
  40324e:	jle    0x403203
  403250:	xchg   edi,eax
  403251:	sbb    al,0x1c
  403253:	lahf   
  403254:	dec    edx
  403255:	add    cl,dh
  403257:	(bad)  
  403258:	mov    esi,0x375657e6
  40325d:	lea    edi,[esi+0x36]
  403260:	sbb    bl,BYTE PTR [ecx+0x2]
  403263:	retf   
  403264:	clc    
  403265:	(bad)  
  403266:	sub    eax,0xbc394f65
  40326b:	mov    ecx,0x5cec74b4
  403270:	ficomp WORD PTR [edx]
  403272:	sbb    dh,BYTE PTR [esi+0x36]
  403275:	add    eax,0x802c10ef
  40327a:	out    dx,al
  40327b:	adc    al,0x8b
  40327d:	addr16 nop
  40327f:	adc    BYTE PTR [eax],bh
  403281:	lock mov ebx,0xa817c280
  403287:	test   BYTE PTR [edi-0x435ab8a5],dh
  40328d:	pop    ds
  40328e:	pop    ds
  40328f:	int    0x67
  403291:	ror    dl,0x80
  403294:	adc    al,0x93
  403296:	xchg   edi,eax
  403297:	jmp    0xaee77251
  40329c:	mov    eax,0x7db98fb2
  4032a1:	mov    bl,0x58
  4032a3:	inc    ebp
  4032a4:	cmp    eax,eax
  4032a6:	push   0x19045395
  4032ab:	adc    BYTE PTR [ecx+0x1c3ae935],0x8e
  4032b2:	dec    esi
  4032b3:	mov    esp,DWORD PTR [eax-0x648c4c15]
  4032b9:	sbb    ah,ch
  4032bb:	mov    ch,0xc9
  4032bd:	jb     0x403254
  4032bf:	test   BYTE PTR [edx+0x4cb4a6fa],0x66
  4032c6:	ins    BYTE PTR es:[edi],dx
  4032c7:	imul   esi,DWORD PTR [ebx+0xf],0xffffffac
  4032cb:	shr    DWORD PTR [edx-0x1f881332],cl
  4032d1:	ins    DWORD PTR es:[edi],dx
  4032d2:	daa    
  4032d3:	mov    ecx,0xdf5983a2
  4032d8:	cmp    bl,al
  4032da:	lock (bad) 
  4032dc:	aad    0xdb
  4032de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032df:	adc    BYTE PTR [eax-0x58],dl
  4032e2:	pop    ebp
  4032e3:	and    eax,DWORD PTR [ecx-0x3d]
  4032e6:	push   esi
  4032e7:	push   esp
  4032e8:	mov    bh,BYTE PTR [edi+0x62]
  4032eb:	jl     0x403346
  4032ed:	jmp    0x40330a
  4032ef:	push   ds
  4032f0:	cld    
  4032f1:	cmc    
  4032f2:	test   BYTE PTR [ebx+edx*4],al
  4032f5:	jg     0x40334e
  4032f7:	mov    ds:0x9d3b3ff0,eax
  4032fc:	loop   0x403353
  4032fe:	add    BYTE PTR [ebp+0x53],bh
  403301:	enter  0x80cb,0x2c
  403305:	lea    ebp,[esi-0x5b]
  403308:	retfw  
  40330a:	jb     0x4032fb
  40330c:	adc    DWORD PTR [eax],esp
  40330e:	inc    eax
  40330f:	jmp    0x665adcd7
  403314:	or     edx,DWORD PTR [esi]
  403316:	jo     0x403392
  403318:	enter  0x1a2a,0xef
  40331c:	or     BYTE PTR [ebx],0x2f
  40331f:	push   0x6fa8f83a
  403324:	cmp    BYTE PTR [edx],0xa7
  403327:	xor    al,BYTE PTR [ebp+0x14bbda87]
  40332d:	mov    eax,0x3e098c2a
  403332:	dec    ebp
  403333:	jb     0x4032ce
  403335:	pop    eax
  403336:	jb     0x4033b0
  403338:	inc    ebp
  403339:	jnp    0x40330c
  40333b:	gs xor ch,cl
  40333e:	in     eax,dx
  40333f:	pop    edi
  403340:	bound  ebp,QWORD PTR [edi-0x76]
  403343:	cmp    al,BYTE PTR [esi]
  403345:	mov    WORD PTR [esi],ss
  403347:	dec    ebp
  403349:	scas   eax,DWORD PTR es:[edi]
  40334a:	add    dl,al
  40334c:	je     0x4033a4
  40334e:	fcmovb st,st(5)
  403350:	push   ebx
  403351:	xor    al,BYTE PTR [eax]
  403353:	cli    
  403354:	mov    ds:0x8f6affac,al
  403359:	push   cs
  40335a:	pop    edx
  40335b:	imul   di,WORD PTR [ecx+0x41],0x3b
  403360:	stos   DWORD PTR es:[edi],eax
  403361:	inc    eax
  403362:	loopne 0x4033a1
  403364:	jge    0x403369
  403366:	dec    ecx
  403367:	jb     0x403352
  403369:	sar    DWORD PTR [ebx+0x4e630ecb],1
  40336f:	mov    cl,0x60
  403371:	jo     0x4032f7
  403373:	test   al,0x19
  403375:	retf   
  403376:	fild   DWORD PTR [esi-0x15f1da45]
  40337c:	adc    bl,BYTE PTR [edi-0x7c]
  40337f:	xchg   edi,eax
  403380:	mov    ds:0x4820ae23,eax
  403385:	out    0x42,al
  403387:	sub    BYTE PTR [edi+ecx*8-0x6],dh
  40338b:	arpl   cx,si
  40338d:	mov    WORD PTR [eax],ss
  40338f:	retf   0x4f28
  403392:	pop    esp
  403393:	mov    BYTE PTR [edi+ebx*2+0x31],ah
  403397:	lods   al,BYTE PTR ds:[esi]
  403398:	(bad)  
  403399:	loopne 0x403414
  40339b:	pop    esp
  40339c:	sub    al,0xc3
  40339e:	or     BYTE PTR [edi],al
  4033a0:	jge    0x40332a
  4033a2:	mov    BYTE PTR [esi-0x784a71bc],cl
  4033a8:	push   ss
  4033a9:	and    al,BYTE PTR [ebx+0x6b056d93]
  4033af:	dec    eax
  4033b0:	xor    eax,edi
  4033b2:	es test al,0xb6
  4033b5:	dec    eax
  4033b6:	imul   esi,DWORD PTR ds:0xf6f4764e,0xffffffc7
  4033bd:	adc    esp,DWORD PTR [edi+edx*2]
  4033c0:	cmp    ebp,ecx
  4033c2:	test   BYTE PTR [esi+0x29],cl
  4033c5:	test   BYTE PTR [eax-0x43],bh
  4033c8:	fwait
  4033c9:	int    0xa0
  4033cb:	push   DWORD PTR [esi+0x61785ed8]
  4033d1:	(bad)  
  4033d2:	xchg   ebx,eax
  4033d3:	jp     0x4033bf
  4033d5:	jl     0x4033b3
  4033d7:	arpl   WORD PTR [eax-0x2e],bx
  4033da:	out    0x2c,al
  4033dc:	imul   edx,DWORD PTR [ebx+0x8de97cd],0x39
  4033e3:	add    cl,BYTE PTR [edx-0x3d]
  4033e6:	add    eax,0xb5787f13
  4033eb:	dec    eax
  4033ec:	jno    0x403432
  4033ee:	fimul  DWORD PTR [eax+0x29]
  4033f1:	fwait
  4033f2:	(bad)  
  4033f3:	je     0x403474
  4033f5:	add    eax,0xfa24b8de
  4033fa:	pushf  
  4033fb:	and    BYTE PTR [eax],al
  4033fd:	int    0x65
  4033ff:	jmp    0x403396
  403401:	jg     0x403398
  403403:	and    BYTE PTR [ebx+0x9],cl
  403406:	or     dl,BYTE PTR [ebx+0x55]
  403409:	xchg   edx,eax
  40340a:	pushf  
  40340b:	and    BYTE PTR ds:0xc1a1311d,ch
  403411:	aam    0x9c
  403413:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403414:	pop    ebp
  403415:	push   ebp
  403416:	aad    0x7d
  403418:	es in  eax,0x9e
  40341b:	jns    0x40347d
  40341d:	xchg   bl,bh
  40341f:	cmp    esp,esi
  403421:	inc    esi
  403422:	enter  0x561c,0x86
  403426:	adc    eax,DWORD PTR [eax]
  403428:	pop    ebx
  403429:	jge    0x4033fd
  40342b:	outs   dx,BYTE PTR ds:[esi]
  40342c:	mov    ch,0x8f
  40342e:	je     0x403437
  403430:	shr    BYTE PTR [esi+0x31],1
  403433:	mov    esi,0xc6e8cf0b
  403438:	mov    gs,edi
  40343a:	shl    DWORD PTR [eax],1
  40343c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40343d:	pop    esi
  40343e:	jo     0x403418
  403440:	sar    DWORD PTR [ecx-0x3],0x48
  403444:	retf   0xbc0f
  403447:	mov    ds:0x62ae2805,eax
  40344c:	call   0x18fc:0x957f71f4
  403453:	mov    eax,ds:0xfd7b2d
  403458:	imul   edi,DWORD PTR [esi],0x46
  40345b:	je     0x403443
  40345d:	call   0x81d0f552
  403462:	xor    edx,DWORD PTR [ebx+edx*4]
  403465:	add    al,0x90
  403467:	(bad)  
  403468:	inc    DWORD PTR [edx+0x65f7df6f]
  40346e:	or     DWORD PTR [ebx],edi
  403470:	push   ebp
  403471:	mov    eax,0x21853383
  403476:	add    BYTE PTR [edx],dh
  403478:	pop    edi
  403479:	in     eax,0xa1
  40347b:	sbb    bl,dh
  40347d:	das    
  40347e:	bound  esp,QWORD PTR [ecx-0xa]
  403481:	jmp    0x1a3:0x2231fbdd
  403488:	pop    ebp
  403489:	sti    
  40348a:	sti    
  40348b:	es scas eax,DWORD PTR es:[edi]
  40348d:	push   ds
  40348e:	(bad)  ds:0xa9c0efa3
  403494:	pop    esp
  403495:	mov    ebp,0x3596987d
  40349a:	out    dx,al
  40349b:	inc    edx
  40349c:	ficomp WORD PTR [ecx]
  40349e:	xor    al,0xe
  4034a0:	cmc    
  4034a1:	xchg   edx,eax
  4034a2:	and    ecx,edi
  4034a4:	inc    ebp
  4034a5:	sub    al,0xdf
  4034a7:	fisubr WORD PTR [eax+0x3cf835fd]
  4034ad:	sub    cl,BYTE PTR [edx]
  4034af:	nop
  4034b0:	pop    ss
  4034b1:	in     eax,dx
  4034b2:	pop    DWORD PTR [edi]
  4034b4:	or     al,0x69
  4034b6:	test   bh,al
  4034b8:	int3   
  4034b9:	jl     0x403516
  4034bb:	xor    bh,BYTE PTR [edi-0x3]
  4034be:	dec    ebx
  4034bf:	daa    
  4034c0:	jae    0x40345a
  4034c2:	bound  ebp,QWORD PTR [ecx-0x3c412597]
  4034c8:	and    bh,BYTE PTR [edi-0x48588d89]
  4034ce:	(bad)  
  4034d0:	retf   
  4034d1:	inc    eax
  4034d2:	rcl    ah,0x1c
  4034d5:	cmp    dl,cl
  4034d7:	dec    ebp
  4034d8:	iret   
  4034d9:	hlt    
  4034da:	mov    esi,0xd194d523
  4034df:	int3   
  4034e0:	mov    ebx,DWORD PTR [eax]
  4034e2:	(bad)  
  4034e3:	or     DWORD PTR [ecx+0x21b34021],esp
  4034e9:	adc    al,0xc6
  4034eb:	clc    
  4034ec:	dec    edx
  4034ed:	repz xor esp,DWORD PTR [edx+0x200ec439]
  4034f4:	cmp    dl,BYTE PTR [edi]
  4034f6:	fdivp  st(5),st
  4034f8:	push   cs
  4034f9:	ror    al,0x9
  4034fc:	dec    ebp
  4034fd:	xchg   esi,eax
  4034fe:	js     0x4034f2
  403500:	jo     0x403494
  403502:	sar    bh,0x44
  403505:	xchg   sp,si
  403508:	xchg   edi,eax
  403509:	das    
  40350a:	ret    
  40350b:	xor    esi,esp
  40350d:	nop
  40350e:	sub    DWORD PTR [esi-0x47],edi
  403511:	shl    BYTE PTR [edi+0x43],1
  403514:	pop    ecx
  403515:	sub    ebp,DWORD PTR [ecx]
  403517:	push   es
  403518:	jb     0x4034f9
  40351a:	ss (bad) 
  40351c:	fdiv   DWORD PTR [edi-0x56c9a01f]
  403522:	fwait
  403523:	xor    eax,DWORD PTR [ecx-0x4c]
  403526:	adc    ecx,ebp
  403528:	rol    DWORD PTR [ebx],1
  40352a:	add    BYTE PTR [eax+0x35],al
  40352d:	mov    bh,0xac
  40352f:	push   cs
  403530:	or     DWORD PTR [ecx],0x644675a
  403536:	enter  0xfe4b,0x5b
  40353a:	xchg   ebp,eax
  40353b:	pop    edi
  40353c:	sub    al,0x49
  40353e:	jo     0x403584
  403540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403541:	lods   al,BYTE PTR ds:[esi]
  403542:	cdq    
  403543:	inc    ebx
  403544:	(bad)  
  403546:	and    eax,0xd7e7fd0e
  40354b:	or     dl,BYTE PTR [eax]
  40354d:	sar    BYTE PTR [esi-0x103e94cc],0x91
  403554:	lods   al,BYTE PTR ds:[esi]
  403555:	add    dh,BYTE PTR [esi*8-0x6fb85dac]
  40355c:	jne    0x4035a0
  40355e:	pop    es
  40355f:	pop    edi
  403560:	adc    eax,0x33df8e7c
  403565:	xor    ebp,DWORD PTR [eax]
  403567:	pop    edx
  403568:	adc    eax,0x3a257047
  40356d:	test   eax,0xdc0b2b7
  403572:	inc    dx
  403574:	adc    edi,ebx
  403576:	imul   ecx,DWORD PTR [ebx+eax*2],0x845609fd
  40357d:	jb     0x403561
  40357f:	out    0x98,al
  403581:	shr    DWORD PTR [ebp-0x6d],cl
  403584:	jo     0x403513
  403586:	fstp   QWORD PTR [ecx]
  403588:	jae    0x40359c
  40358a:	stos   DWORD PTR es:[edi],eax
  40358b:	call   0xa356:0x9013e596
  403592:	das    
  403593:	push   ebp
  403594:	pushf  
  403595:	xchg   esp,eax
  403596:	xor    ebx,DWORD PTR [edx]
  403598:	les    edx,FWORD PTR [edx+ecx*2]
  40359b:	pop    ebx
  40359c:	ficomp DWORD PTR [ebx]
  40359e:	xor    al,0xf
  4035a0:	xor    esi,DWORD PTR [edx+0x5a]
  4035a3:	stos   BYTE PTR es:[edi],al
  4035a4:	daa    
  4035a5:	lock mov ds:0x2da853ff,eax
  4035ab:	in     eax,0xb4
  4035ad:	sbb    DWORD PTR [ebp+0x690d7a7b],ebp
  4035b3:	int    0x69
  4035b5:	(bad)  
  4035b6:	mov    dh,0x45
  4035b8:	mov    bl,BYTE PTR [ebx]
  4035ba:	lods   eax,DWORD PTR ds:[esi]
  4035bb:	imul   ecx,DWORD PTR [esi],0x13c9430d
  4035c1:	jecxz  0x4035cd
  4035c3:	add    eax,0xea5f81eb
  4035c8:	outs   dx,DWORD PTR ds:[esi]
  4035c9:	icebp  
  4035ca:	aam    0x2b
  4035cc:	adc    al,0x4c
  4035ce:	jle    0x40357f
  4035d0:	dec    ecx
  4035d1:	mov    dh,0x53
  4035d3:	cmp    BYTE PTR [ecx+0x4f],0x21
  4035d7:	shl    DWORD PTR [esi+0x6291ac76],1
  4035dd:	std    
  4035de:	mov    dl,0xa6
  4035e0:	retf   
  4035e1:	pop    ebx
  4035e2:	adc    BYTE PTR [esi+0x1f],0x65
  4035e6:	sub    al,0xf3
  4035e8:	or     eax,0x12a96a84
  4035ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035ee:	addr16 dec edi
  4035f0:	dec    ebx
  4035f1:	outs   dx,BYTE PTR ds:[esi]
  4035f2:	ds mov edi,0x751ad39d
  4035f8:	bound  ecx,QWORD PTR [ebx-0x10]
  4035fb:	imul   eax,esp,0xffffffb8
  4035fe:	iret   
  4035ff:	pop    edi
  403600:	dec    ebp
  403601:	mov    ecx,0x8fe898d1
  403606:	inc    eax
  403607:	repnz sub bh,BYTE PTR ds:0x73fe742b
  40360e:	fwait
  40360f:	add    dh,BYTE PTR [eax]
  403611:	sti    
  403612:	jp     0x40360c
  403614:	push   es
  403615:	mov    DWORD PTR [esi-0x1bd3fce8],edx
  40361b:	cld    
  40361c:	xchg   ecx,eax
  40361d:	fstp   QWORD PTR [ebx-0x36]
  403620:	inc    edx
  403621:	mov    eax,0xbcdcd70b
  403626:	cmp    BYTE PTR [ebp-0xa],bl
  403629:	cld    
  40362a:	(bad)  
  40362b:	scas   al,BYTE PTR es:[edi]
  40362c:	cmp    BYTE PTR [ecx-0x39],al
  40362f:	or     BYTE PTR [esi],al
  403631:	dec    edi
  403632:	leave  
  403633:	dec    eax
  403634:	add    ah,BYTE PTR gs:[ebx-0x37080246]
  40363b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40363c:	push   es
  40363d:	loop   0x40366e
  40363f:	sbb    al,cl
  403641:	int3   
  403642:	mov    BYTE PTR [edx],ah
  403644:	aad    0x38
  403646:	xor    al,0x62
  403648:	das    
  403649:	sbb    DWORD PTR [esi],0x3166202c
  40364f:	cld    
  403650:	jo     0x403610
  403652:	rol    ebx,0xf3
  403655:	cli    
  403656:	pop    ebp
  403657:	push   ebp
  403658:	lds    esp,FWORD PTR [edx]
  40365a:	loop   0x4035ed
  40365c:	xor    dl,al
  40365e:	sbb    eax,0xa243f7ed
  403663:	push   0x5397b395
  403668:	push   esp
  403669:	jg     0x4036b2
  40366b:	(bad)  
  40366c:	mul    DWORD PTR [edx+0x44]
  40366f:	xchg   esi,eax
  403670:	jae    0x40365c
  403672:	mov    ebp,0x728ed94c
  403677:	mov    ds:0xf0d91c2c,al
  40367c:	add    al,0x2b
  40367e:	out    0xeb,eax
  403680:	aad    0xd9
  403682:	pop    es
  403683:	ins    WORD PTR es:[edi],dx
  403685:	pop    ss
  403686:	test   al,0xa2
  403688:	pushf  
  403689:	loopne 0x4036e3
  40368b:	jae    0x4036f3
  40368d:	mov    ebx,0xaf6b7a46
  403692:	add    al,0xa6
  403694:	adc    al,0x39
  403696:	lahf   
  403697:	jns    0x403672
  403699:	push   ecx
  40369a:	xor    al,0x9
  40369c:	popf   
  40369d:	push   ds
  40369e:	loopne 0x4036b0
  4036a0:	fst    DWORD PTR [esi+0x17c04e8b]
  4036a6:	sub    dh,BYTE PTR [ebp-0xb]
  4036a9:	mov    dl,0x43
  4036ab:	add    BYTE PTR [edi-0x4fb1aa59],ah
  4036b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036b2:	inc    ecx
  4036b3:	in     eax,0x1f
  4036b5:	push   ebp
  4036b6:	mov    bl,0xe4
  4036b8:	pop    ds
  4036b9:	stc    
  4036ba:	in     eax,0xf
  4036bc:	rcl    BYTE PTR [ebx-0x188bfcf9],1
  4036c2:	sub    BYTE PTR [ecx+0x57d81b05],dl
  4036c8:	xor    ebx,DWORD PTR [edx]
  4036ca:	sar    BYTE PTR [ecx],cl
  4036cc:	cmp    eax,0xae69205b
  4036d1:	(bad)  
  4036d3:	sahf   
  4036d4:	retf   0x4fad
  4036d7:	lahf   
  4036d8:	call   0xfd59:0x46e5b3ae
  4036df:	mov    esi,0xd1199b7b
  4036e4:	sbb    ah,BYTE PTR [ebp+0x35d92e4a]
  4036ea:	sbb    ecx,ebp
  4036ec:	(bad)  
  4036ed:	outs   dx,DWORD PTR ds:[esi]
  4036ee:	xchg   esi,eax
  4036ef:	pop    edi
  4036f0:	mov    edx,0xeaaa925c
  4036f5:	ins    DWORD PTR es:[edi],dx
  4036f6:	pop    ds
  4036f7:	push   ss
  4036f8:	xor    cl,BYTE PTR [eax-0x62943174]
  4036fe:	pop    eax
  4036ff:	lock pop es
  403701:	push   eax
  403702:	mov    ah,0x4a
  403704:	(bad)  
  403705:	mov    al,ds:0x433ab18d
  40370a:	lods   eax,DWORD PTR ds:[esi]
  40370b:	sbb    eax,0xc6566074
  403710:	dec    ebp
  403711:	imul   ecx,DWORD PTR ds:0x5e3fe0b,0x3335df85
  40371b:	loop   0x40373e
  40371d:	daa    
  40371e:	int    0x75
  403720:	adc    BYTE PTR [edx],al
  403722:	mov    eax,ds:0x3aa2b38a
  403727:	call   0x81c3:0xe0296092
  40372e:	add    edi,esp
  403730:	js     0x40374e
  403732:	mov    edx,0x630836a8
  403737:	iret   
  403738:	call   0x31297f8b
  40373d:	sub    dh,BYTE PTR [edx+ebp*1-0x7f]
  403741:	arpl   WORD PTR [edi],bx
  403743:	adc    eax,0xffd896fe
  403748:	(bad)  
  403749:	mov    esp,0x5d539ec1
  40374e:	pushf  
  40374f:	fdivr  DWORD PTR [edi]
  403751:	in     eax,0x94
  403753:	stc    
  403754:	mov    ebp,0xcc80fb10
  403759:	jmp    FWORD PTR [eax+0x2a527d99]
  40375f:	std    
  403760:	push   esp
  403761:	xchg   ecx,eax
  403762:	mov    esi,?
  403764:	fild   WORD PTR [esi+0x249cea2a]
  40376a:	xor    esp,DWORD PTR [ecx+0xd]
  40376d:	test   al,0x90
  40376f:	push   edx
  403770:	daa    
  403771:	stc    
  403772:	xor    bl,dh
  403774:	pop    edi
  403775:	outs   dx,DWORD PTR ds:[esi]
  403776:	inc    ebx
  403777:	ins    BYTE PTR es:[edi],dx
  403778:	scas   eax,DWORD PTR es:[edi]
  403779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40377a:	or     al,BYTE PTR [ecx-0x5b]
  40377d:	adc    bh,ch
  40377f:	jbe    0x4037f7
  403781:	dec    edx
  403782:	push   ds
  403783:	bound  eax,QWORD PTR [esi+ebx*8]
  403786:	push   ebp
  403787:	cld    
  403788:	ja     0x4037ef
  40378a:	push   ds
  40378b:	dec    esp
  40378c:	sub    esi,DWORD PTR [ebx]
  40378e:	fst    DWORD PTR [ecx+0x55]
  403791:	clc    
  403792:	and    cl,0x9d
  403795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403796:	aaa    
  403797:	mov    bl,0x5
  403799:	inc    esp
  40379a:	pop    eax
  40379b:	sbb    eax,0xef7e543
  4037a0:	jp     0x4037d6
  4037a2:	add    ebp,DWORD PTR [esi-0x76]
  4037a5:	and    ah,bl
  4037a7:	dec    ebx
  4037a8:	arpl   WORD PTR ds:0xfbb8ae05,sp
  4037ae:	cmp    dl,al
  4037b0:	jae    0x403748
  4037b2:	jne    0x403756
  4037b4:	jns    0x4037eb
  4037b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037b7:	dec    ebp
  4037b8:	adc    eax,0x1f5aa214
  4037bd:	stc    
  4037be:	ss pop ebx
  4037c0:	mov    dl,0xe1
  4037c2:	sbb    DWORD PTR [ecx],0xe13f293a
  4037c8:	sbb    eax,0xa830ff8f
  4037cd:	das    
  4037ce:	ss mov bh,0x57
  4037d1:	xchg   ch,cl
  4037d3:	retf   
  4037d4:	fs sbb bl,dh
  4037d7:	(bad)  
  4037d8:	push   cs
  4037d9:	pop    edi
  4037da:	jecxz  0x403835
  4037dc:	mov    bl,0x1
  4037de:	imul   ecx,DWORD PTR [ecx-0x6e],0xffffffab
  4037e2:	push   edi
  4037e3:	cwde   
  4037e4:	add    bl,BYTE PTR [eax]
  4037e6:	je     0x40383f
  4037e8:	mov    eax,DWORD PTR [ecx+ecx*8-0x54]
  4037ec:	jnp    0x4037e7
  4037ee:	ret    0xf352
  4037f1:	stos   DWORD PTR es:[edi],eax
  4037f2:	xlat   BYTE PTR ds:[ebx]
  4037f3:	mov    edx,0xb77191d0
  4037f8:	jns    0x403833
  4037fa:	cld    
  4037fb:	xchg   ebx,eax
  4037fc:	int3   
  4037fd:	sbb    edx,esp
  4037ff:	jecxz  0x40385f
  403801:	je     0x40385e
  403803:	add    DWORD PTR [eax],edx
  403805:	les    ebp,FWORD PTR ds:0x8f014495
  40380b:	mov    ebp,0x82ce9119
  403810:	sub    eax,0x1cefdb02
  403815:	add    eax,0xa26fe443
  40381a:	xor    al,ch
  40381c:	push   es
  40381d:	mov    dl,BYTE PTR [esi]
  40381f:	mov    ?,WORD PTR [edi]
  403821:	fsubp  st(1),st
  403823:	adc    DWORD PTR [eax-0x27454dfd],0x6d
  40382a:	test   al,0xb3
  40382c:	push   esp
  40382d:	inc    eax
  40382e:	jnp    0x40380b
  403830:	jno    0x4037d5
  403832:	cs jmp 0x40381e
  403835:	adc    BYTE PTR [esp+ebx*1-0x27],ah
  403839:	outs   dx,DWORD PTR ds:[esi]
  40383a:	int    0x8a
  40383c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40383d:	aaa    
  40383e:	or     BYTE PTR [edi+eax*8],bh
  403841:	xor    eax,0x3d444378
  403846:	or     dh,0xbd
  403849:	sub    al,BYTE PTR [eax-0x35]
  40384c:	mov    DWORD PTR ds:0x1ff12bcf,esi
  403852:	mov    ah,0x9d
  403854:	lock sbb ch,BYTE PTR [ebx-0x4cc942e9]
  40385b:	add    cl,BYTE PTR [ebp-0x9f1520a]
  403861:	mov    dl,0x9d
  403863:	mov    bh,0x92
  403865:	and    cl,dl
  403867:	mov    edi,0x180f0ed2
  40386c:	scas   eax,DWORD PTR es:[edi]
  40386d:	push   edx
  40386e:	push   0xf62337cd
  403873:	in     eax,dx
  403874:	or     edx,ebx
  403876:	test   BYTE PTR [esi+0x481da22b],cl
  40387c:	xchg   edx,eax
  40387d:	add    al,BYTE PTR [edi-0x70]
  403880:	loopne 0x4038ce
  403882:	jae    0x4038fd
  403884:	cmp    ah,BYTE PTR [eax]
  403886:	(bad)  
  403887:	fist   WORD PTR [edx-0x62]
  40388a:	mov    ah,0xad
  40388c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40388d:	jbe    0x4038c0
  40388f:	xchg   edx,eax
  403890:	pop    edi
  403891:	rol    BYTE PTR [ebp+0x12],0x5
  403895:	(bad)  
  403898:	addr16 pop esi
  40389a:	mov    al,ds:0x7ed10e90
  40389f:	or     al,0x80
  4038a2:	jno    0x4038ae
  4038a4:	push   ecx
  4038a5:	mov    dh,0x37
  4038a7:	not    DWORD PTR [esi-0x5b76cb02]
  4038ad:	and    eax,0xbab867e9
  4038b2:	add    BYTE PTR [eax-0x7c],al
  4038b5:	lods   al,BYTE PTR ds:[esi]
  4038b6:	dec    esp
  4038b7:	das    
  4038b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038b9:	iret   
  4038ba:	int    0x60
  4038bc:	add    edi,ecx
  4038be:	cli    
  4038bf:	pushf  
  4038c0:	std    
  4038c1:	jmp    0x40385e
  4038c3:	ins    BYTE PTR es:[edi],dx
  4038c4:	mov    cl,0x62
  4038c6:	cdq    
  4038c7:	lea    esi,[edx-0x21]
  4038ca:	inc    edx
  4038cb:	scas   eax,DWORD PTR es:[edi]
  4038cc:	jmp    0x403929
  4038ce:	call   FWORD PTR [ebx+0x7dda3274]
  4038d4:	mov    ebx,0xd36d6358
  4038d9:	and    al,BYTE PTR [ebx-0x23b614fd]
  4038df:	add    BYTE PTR [ebp+0x4aea377b],cl
  4038e5:	daa    
  4038e6:	and    cl,BYTE PTR [ebx+edx*2-0x74]
  4038ea:	inc    esi
  4038eb:	mov    DWORD PTR [edx-0x26655d26],0xb9aa136b
  4038f5:	push   ecx
  4038f6:	mov    eax,ds:0x170da48d
  4038fb:	jge    0x4038c5
  4038fd:	pop    edi
  4038fe:	mov    ecx,0xe26d341d
  403903:	out    0x90,eax
  403905:	mov    ch,0xac
  403907:	jg     0x40394b
  403909:	pop    es
  40390a:	mov    dl,bh
  40390c:	xor    BYTE PTR [ebp-0x5a],0xea
  403910:	lahf   
  403911:	sub    eax,0x4971bbcd
  403916:	sbb    edx,edx
  403918:	add    dl,BYTE PTR [edi-0x46]
  40391b:	fadd   st,st(7)
  40391d:	scas   eax,DWORD PTR es:[edi]
  40391e:	xor    DWORD PTR ss:[edi-0x14],0xffffff9a
  403923:	push   esp
  403924:	call   DWORD PTR [ecx+edi*8+0x1bc787e7]
  40392b:	add    DWORD PTR [esi-0x20839b12],ebp
  403931:	pop    eax
  403932:	sub    ebx,esp
  403934:	mov    ds:0xb2dcd150,al
  403939:	fmul   QWORD PTR [esi]
  40393b:	xchg   ebx,eax
  40393c:	xor    dl,BYTE PTR [ecx+ebx*4+0x2055dd80]
  403943:	push   edx
  403944:	into   
  403945:	mov    eax,0x7e32da7b
  40394a:	sub    BYTE PTR [ecx-0x7fae02e1],bh
  403950:	jmp    0x4f22c372
  403955:	cmp    BYTE PTR [eax-0x5da8d7a3],dl
  40395b:	test   al,0x9a
  40395d:	gs cmp esi,esp
  403960:	or     esp,eax
  403962:	inc    edi
  403963:	test   DWORD PTR cs:[edi-0xe1b31a3],eax
  40396a:	sbb    al,0x7a
  40396c:	and    BYTE PTR [esi],al
  40396e:	fst    DWORD PTR [edx]
  403970:	clc    
  403971:	mov    ds:0x1f5c853c,eax
  403976:	fild   DWORD PTR [edx]
  403978:	adc    ah,BYTE PTR [edi-0x6d]
  40397b:	mov    cl,0xb9
  40397d:	daa    
  40397e:	jno    0x4039ac
  403980:	pop    es
  403981:	fimul  DWORD PTR [edx]
  403983:	dec    ebp
  403984:	push   eax
  403985:	inc    eax
  403986:	aam    0x5b
  403988:	inc    edi
  403989:	iret   
  40398a:	(bad)  
  40398b:	or     ah,ah
  40398d:	and    ecx,esi
  40398f:	or     ebx,esi
  403991:	xchg   ebx,eax
  403992:	cmc    
  403993:	cli    
  403994:	pop    ebx
  403995:	jo     0x403a13
  403997:	bnd jns 0x403978
  40399a:	add    DWORD PTR [esi+0x23d80089],edi
  4039a0:	addr16 pushf 
  4039a2:	dec    ebp
  4039a3:	mov    ds:0x63ea70fe,al
  4039a8:	popf   
  4039a9:	mov    ss,WORD PTR [eax-0x6a395d8d]
  4039af:	adc    ecx,edx
  4039b1:	fcmovbe st,st(0)
  4039b3:	popf   
  4039b4:	or     BYTE PTR [ebx+0x55121296],dh
  4039ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039bb:	(bad)  
  4039bc:	int    0x97
  4039be:	sub    BYTE PTR [eax],ch
  4039c0:	in     eax,dx
  4039c1:	adc    al,0x12
  4039c3:	push   ebx
  4039c4:	aam    0xd7
  4039c6:	jge    0x403a2f
  4039c8:	sbb    cl,dl
  4039ca:	repnz pop ss
  4039cc:	or     cl,BYTE PTR [esi+0x4cb0f60e]
  4039d2:	adc    BYTE PTR ds:0x459609b7,al
  4039d8:	sub    DWORD PTR gs:[ecx+0xc],ecx
  4039dc:	ds push ebp
  4039de:	xchg   esi,eax
  4039df:	repnz dec esp
  4039e1:	xor    DWORD PTR [ebx+0x7d],edx
  4039e4:	mov    bl,0x45
  4039e6:	pop    esp
  4039e7:	scas   al,BYTE PTR es:[edi]
  4039e8:	cli    
  4039e9:	xor    DWORD PTR [ebx-0x7e],ecx
  4039ec:	and    DWORD PTR [ebx+0x7f],ebp
  4039ef:	(bad)  
  4039f0:	adc    dh,BYTE PTR [edx]
  4039f2:	mov    eax,0x96049f6
  4039f7:	jo     0x403992
  4039f9:	xchg   edi,eax
  4039fa:	push   ebx
  4039fb:	sbb    BYTE PTR [edx],ah
  4039fd:	call   0xc657:0xd8a6174d
  403a04:	ret    
  403a05:	jne    0x4039ea
  403a07:	push   ss
  403a08:	out    dx,eax
  403a09:	sub    DWORD PTR ds:0x5c71bff3,edi
  403a0f:	adc    eax,0x51f5e980
  403a14:	retf   
  403a15:	pop    eax
  403a16:	loopne 0x4039ea
  403a18:	cld    
  403a19:	inc    cx
  403a1b:	out    0x1d,al
  403a1d:	(bad)  
  403a1f:	(bad)  
  403a20:	mov    ecx,0xfa97ce8f
  403a25:	and    DWORD PTR [ebp+0x3028ad0b],esp
  403a2b:	clc    
  403a2c:	or     DWORD PTR [eax],esp
  403a2e:	push   0xd
  403a30:	mov    bh,0x3
  403a32:	adc    esi,DWORD PTR [eax-0x2b]
  403a35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a36:	and    DWORD PTR [edi+ebp*2],eax
  403a39:	scas   eax,DWORD PTR es:[edi]
  403a3a:	ret    0x7a24
  403a3d:	loop   0x403a82
  403a3f:	rcr    DWORD PTR [edi-0x45],0x23
  403a43:	pop    ecx
  403a44:	iret   
  403a45:	int3   
  403a46:	shl    DWORD PTR [ebx],1
  403a48:	sahf   
  403a49:	inc    ecx
  403a4a:	push   ebx
  403a4b:	mov    ebp,0x3861c6ea
  403a50:	(bad)
  403a53:	xchg   ecx,eax
  403a54:	pop    ecx
  403a55:	sbb    DWORD PTR [ecx],eax
  403a57:	lods   al,BYTE PTR ds:[esi]
  403a58:	push   es
  403a59:	ja     0x403a34
  403a5b:	cmp    eax,0x90a340ef
  403a60:	out    0x11,al
  403a62:	mov    dl,0xda
  403a64:	mov    ss,WORD PTR [edx-0x37c5f056]
  403a6a:	mov    ah,0x67
  403a6c:	mov    ebx,edx
  403a6e:	(bad)  
  403a6f:	inc    edx
  403a70:	retf   0x8a64
  403a73:	sbb    dl,BYTE PTR [ebx+0x324bb008]
  403a79:	(bad)  
  403a7a:	jle    0x403af6
  403a7c:	dec    esp
  403a7d:	das    
  403a7e:	in     al,dx
  403a7f:	mov    bl,0xfe
  403a81:	sub    al,0xa2
  403a83:	add    BYTE PTR [ebx+0x50175cd],bh
  403a89:	inc    BYTE PTR [ecx-0x14]
  403a8c:	cmp    edx,DWORD PTR [ebp+0x3d]
  403a8f:	xchg   edx,eax
  403a90:	push   0x97e6d3fd
  403a95:	rcr    eax,0xc6
  403a98:	loopne 0x403aab
  403a9a:	cld    
  403a9b:	inc    esp
  403a9c:	daa    
  403a9d:	mov    ebx,0xb46a1951
  403aa2:	xchg   DWORD PTR [esi],edx
  403aa4:	test   eax,0xf93bb793
  403aa9:	pop    edi
  403aaa:	sbb    DWORD PTR [ebx+0x3c],0x1f
  403aae:	cmp    eax,0x5c03fe72
  403ab3:	repz mov cl,0x66
  403ab6:	test   eax,0xc6bfe60e
  403abb:	jp     0x403ac2
  403abd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403abe:	popa   
  403abf:	(bad)  
  403ac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ac1:	test   DWORD PTR [edx+0x22],edx
  403ac4:	fsubr  st(2),st
  403ac6:	lea    ebp,[esi]
  403ac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ac9:	out    0x6f,al
  403acb:	cmp    eax,0xa4b55be8
  403ad0:	jle    0x403b38
  403ad2:	ja     0x403ae1
  403ad4:	cmc    
  403ad5:	out    dx,al
  403ad6:	dec    ecx
  403ad7:	imul   ecx,DWORD PTR [ebp-0x13],0xfffffff0
  403adb:	dec    esi
  403adc:	and    al,BYTE PTR [edx+0x25]
  403adf:	sub    DWORD PTR [ebp+0x61a8e564],ebx
  403ae5:	aas    
  403ae6:	retf   
  403ae7:	rcr    eax,cl
  403ae9:	fist   DWORD PTR [edi+0x23]
  403aec:	pop    esp
  403aed:	mov    ebp,0xd629177d
  403af2:	hlt    
  403af3:	xor    DWORD PTR [ebx],edi
  403af5:	jmp    0x1deb:0x56e099cc
  403afc:	icebp  
  403afd:	sbb    BYTE PTR [ebp-0x32],ch
  403b00:	and    DWORD PTR [ecx-0x3f],eax
  403b03:	dec    ecx
  403b04:	xchg   ebx,eax
  403b05:	das    
  403b06:	in     eax,dx
  403b07:	ja     0x403ae4
  403b09:	dec    edi
  403b0a:	out    0x9a,eax
  403b0c:	into   
  403b0d:	xchg   ebp,ebp
  403b0f:	addr16 mov bh,0x5a
  403b12:	xchg   ebx,eax
  403b13:	test   eax,0x76e9727e
  403b18:	mov    ch,0x21
  403b1a:	jns    0x403ac0
  403b1c:	or     ch,al
  403b1e:	mov    fs,WORD PTR [esi+esi*8-0x73319b71]
  403b25:	(bad)  [esi]
  403b27:	ret    
  403b28:	adc    bl,ch
  403b2a:	mov    esp,0x103993e5
  403b2f:	out    dx,al
  403b30:	lds    esi,FWORD PTR [eax-0x2e895356]
  403b36:	mov    esp,0xa5266aee
  403b3b:	cmp    al,dl
  403b3d:	leave  
  403b3e:	mov    al,0x68
  403b40:	rcl    ebp,1
  403b42:	shl    BYTE PTR [ebx],1
  403b44:	inc    edi
  403b45:	mov    bl,0x3b
  403b47:	fsincos 
  403b49:	cmp    ah,bl
  403b4b:	adc    BYTE PTR [ebx],al
  403b4d:	aas    
  403b4e:	mov    eax,ds:0xee860c89
  403b53:	dec    ecx
  403b54:	mov    dl,0xce
  403b56:	sti    
  403b57:	daa    
  403b58:	daa    
  403b59:	xchg   BYTE PTR [ebx+eax*4+0x4f],ch
  403b5d:	call   0x6ef9e31d
  403b62:	test   eax,0x97fe44a8
  403b67:	mov    eax,ds:0x684b81
  403b6c:	lahf   
  403b6d:	pop    ecx
  403b6e:	aas    
  403b6f:	push   esp
  403b70:	inc    esi
  403b71:	test   BYTE PTR [ebp+0x4d],ah
  403b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b75:	and    esi,0x22072ca6
  403b7b:	add    eax,DWORD PTR [edx-0x6869c74e]
  403b81:	mov    al,ds:0x4d1dd2ed
  403b86:	xor    bh,BYTE PTR [edx+0x73]
  403b89:	pop    ecx
  403b8a:	push   eax
  403b8b:	jecxz  0x403bd8
  403b8d:	cli    
  403b8e:	rcl    DWORD PTR [edx+0x1c],cl
  403b91:	xor    edx,DWORD PTR [ebx]
  403b93:	test   DWORD PTR [edi-0x23c4fd9a],esp
  403b99:	hlt    
  403b9a:	shl    edi,0xf2
  403b9d:	outs   dx,DWORD PTR ds:[esi]
  403b9e:	xchg   BYTE PTR [eax+0x2f],cl
  403ba1:	mov    bl,0x79
  403ba3:	test   eax,0xeee164ae
  403ba8:	pusha  
  403ba9:	loopne 0x403baf
  403bab:	call   0x1cf265df
  403bb0:	pop    ecx
  403bb1:	dec    esp
  403bb2:	jle    0x403b8f
  403bb4:	mov    bl,al
  403bb6:	sub    eax,0x5b4ef124
  403bbb:	mov    ebx,0x87847436
  403bc0:	adc    DWORD PTR [eax],ecx
  403bc2:	sbb    al,0x7e
  403bc4:	pusha  
  403bc5:	jle    0x403b83
  403bc7:	sub    DWORD PTR [edi-0x4c],0xb90a37a0
  403bce:	jg     0x403ba4
  403bd0:	push   ebx
  403bd1:	out    0x49,eax
  403bd3:	ja     0x403bd5
  403bd5:	xchg   ebp,eax
  403bd6:	cmp    eax,0xaf0b6769
  403bdb:	push   0x946ab664
  403be0:	sar    BYTE PTR [edi],1
  403be2:	pop    edx
  403be3:	loope  0x403b81
  403be5:	mov    esi,0x2ad6894e
  403bea:	sub    eax,0x2c7c6487
  403bef:	push   0xe987744a
  403bf4:	jne    0x403b79
  403bf6:	pop    edx
  403bf7:	sub    esp,DWORD PTR [ecx+esi*8+0xd]
  403bfb:	and    BYTE PTR [ecx-0x2f],dl
  403bfe:	adc    eax,0xdd765be3
  403c03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c04:	xchg   esp,eax
  403c05:	pop    edi
  403c06:	test   DWORD PTR [ebp-0x12565197],ecx
  403c0c:	mov    al,0x7
  403c0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c0f:	rcr    dl,cl
  403c11:	test   al,0xf7
  403c13:	jecxz  0x403c28
  403c15:	test   eax,0x6628bd3d
  403c1a:	dec    edx
  403c1b:	xchg   esp,eax
  403c1c:	push   edx
  403c1d:	mov    edx,DWORD PTR [edi]
  403c1f:	mov    eax,0x7ae89a65
  403c24:	loopne 0x403c9f
  403c26:	in     eax,dx
  403c27:	arpl   di,bp
  403c29:	sbb    cl,ch
  403c2b:	xchg   ecx,eax
  403c2c:	ficom  DWORD PTR [esi+0x2fae197f]
  403c32:	leave  
  403c33:	xchg   ecx,eax
  403c34:	js     0x403bc1
  403c36:	mov    bl,BYTE PTR [ebx-0x72162a55]
  403c3c:	mov    ds:0xa41729dd,eax
  403c41:	jns    0x403c0f
  403c43:	test   al,0x10
  403c45:	mov    eax,DWORD PTR [ecx]
  403c47:	outs   dx,DWORD PTR ds:[esi]
  403c48:	mov    ?,eax
  403c4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c4b:	jmp    0x5c5c9c62
  403c50:	dec    ebx
  403c51:	jno    0x403ca7
  403c53:	push   ss
  403c54:	int    0xbf
  403c56:	rcr    BYTE PTR [ecx+0x6d9c61f6],1
  403c5c:	inc    ebx
  403c5d:	aam    0xc8
  403c5f:	repnz bound esi,QWORD PTR [edx+0x4b]
  403c63:	scas   eax,DWORD PTR es:[edi]
  403c64:	cli    
  403c65:	pop    edi
  403c66:	mov    edx,0x7659f490
  403c6b:	aas    
  403c6c:	sbb    BYTE PTR [edx+esi*8],dl
  403c6f:	jmp    0x2d0a:0x9c6d1c82
  403c76:	inc    ecx
  403c77:	outs   dx,BYTE PTR ds:[esi]
  403c78:	pop    edi
  403c79:	shl    DWORD PTR [esi-0x26],0x4
  403c7d:	jmp    0x7e3e:0x4f708836
  403c84:	sbb    DWORD PTR [ecx-0x2b],0x2356d229
  403c8b:	mov    cl,0xc9
  403c8d:	js     0x403c1e
  403c8f:	int3   
  403c90:	mov    ds,WORD PTR [esi+0x60]
  403c93:	adc    DWORD PTR [eax-0x34f99c5],ebp
  403c99:	fstp   QWORD PTR [esi+ecx*1+0x179d3eaa]
  403ca0:	inc    esi
  403ca1:	mov    cl,0x37
  403ca3:	adc    eax,0xe58a93ef
  403ca8:	fdiv   st,st(4)
  403caa:	mov    eax,ds:0xb8640c83
  403caf:	mov    ds:0x5ca64684,al
  403cb4:	jo     0x403cc7
  403cb6:	int    0x65
  403cb8:	jns    0x403cfa
  403cba:	cmp    ecx,esi
  403cbc:	aaa    
  403cbd:	fidivr WORD PTR [edi+0x61]
  403cc0:	repnz iret 
  403cc2:	mov    bh,0x86
  403cc4:	shl    DWORD PTR [eax+esi*4+0x6defe4c],0x88
  403ccc:	scas   eax,DWORD PTR es:[edi]
  403ccd:	mov    edx,0x3bbefa14
  403cd2:	mov    bl,0xda
  403cd4:	mov    edi,0x54949b59
  403cd9:	push   0x38b79db6
  403cde:	pop    eax
  403cdf:	in     al,0xd8
  403ce1:	(bad)  
  403ce2:	jne    0x403d63
  403ce4:	mul    DWORD PTR [ebx]
  403ce6:	xchg   edx,eax
  403ce7:	xlat   BYTE PTR ds:[ebx]
  403ce8:	jnp    0x403ce5
  403cea:	add    al,0xc
  403cec:	or     BYTE PTR [edi],0xc5
  403cef:	xor    DWORD PTR [edx],ebx
  403cf1:	cmp    dl,BYTE PTR [eax+esi*8+0x445422b2]
  403cf8:	and    BYTE PTR [eax+esi*4-0x59],dh
  403cfc:	int3   
  403cfd:	fist   WORD PTR [edi+eax*4+0x319a5421]
  403d04:	dec    ecx
  403d05:	pop    edx
  403d06:	cs pop ebx
  403d08:	stos   BYTE PTR es:[edi],al
  403d09:	or     dl,al
  403d0b:	jne    0x403cc0
  403d0d:	sub    eax,esp
  403d0f:	add    ecx,DWORD PTR [edi-0x6ea08938]
  403d15:	into   
  403d16:	es and bh,cl
  403d19:	push   esp
  403d1a:	pop    ecx
  403d1b:	mov    al,ds:0x3db776ea
  403d20:	jnp    0x403cd6
  403d22:	repnz dec ecx
  403d24:	or     dh,BYTE PTR [edi]
  403d26:	inc    ebp
  403d27:	cld    
  403d28:	mov    ebx,0x8f9bfdce
  403d2d:	add    al,0xa0
  403d2f:	bound  eax,QWORD PTR [esi-0x3b2c40ff]
  403d35:	dec    edi
  403d36:	pop    ecx
  403d37:	jg     0x403d52
  403d39:	(bad)  
  403d3a:	popf   
  403d3b:	sub    al,0xa6
  403d3d:	sub    edi,edi
  403d3f:	sub    eax,0xb14d2e9a
  403d44:	nop
  403d45:	leave  
  403d46:	add    ebx,DWORD PTR [eax+0x69]
  403d49:	mov    ds:0x8be124ac,eax
  403d4e:	or     ebp,edx
  403d50:	pusha  
  403d51:	mov    cl,0x5e
  403d53:	shl    BYTE PTR [eax-0x5c],0x2c
  403d57:	bound  ebp,QWORD PTR fs:[esi+0x67d32f45]
  403d5e:	adc    DWORD PTR [ebp+0x6a],esi
  403d61:	fwait
  403d62:	in     eax,0x6d
  403d64:	jmp    0x7c28:0x4fc00862
  403d6b:	xchg   DWORD PTR [ebp+0x56ee6dff],edx
  403d71:	inc    ecx
  403d72:	fistp  WORD PTR [ebx-0x2b]
  403d75:	push   esi
  403d76:	pop    edi
  403d77:	outs   dx,DWORD PTR ds:[esi]
  403d78:	dec    ebp
  403d79:	inc    edx
  403d7a:	and    esi,DWORD PTR [ecx-0x6a]
  403d7d:	pop    esi
  403d7e:	mov    edx,0xc12baec5
  403d83:	pop    edx
  403d84:	lock mov ds:0xf9f20b3e,eax
  403d8a:	xchg   edx,eax
  403d8b:	add    edi,0x6
  403d8e:	lods   al,BYTE PTR ds:[esi]
  403d8f:	xchg   ebp,eax
  403d90:	xor    ecx,DWORD PTR [ecx-0x79]
  403d93:	nop
  403d94:	out    0x40,eax
  403d96:	mov    al,ds:0xb3ba0e20
  403d9b:	repz (bad) 
  403d9d:	and    al,0x21
  403d9f:	mov    al,ds:0x23647a5
  403da4:	arpl   WORD PTR [edi+0x5c],dx
  403da7:	and    al,0x70
  403da9:	xor    eax,0x871e6bb3
  403dae:	ds xchg edi,eax
  403db0:	mov    bh,0xfb
  403db3:	xor    eax,0x9ab70908
  403db8:	rol    BYTE PTR [ebx],0xbe
  403dbb:	inc    esp
  403dbc:	xor    cl,BYTE PTR [ecx+0x3c]
  403dbf:	mov    dh,0xec
  403dc1:	adc    eax,0xd506f1a8
  403dc6:	or     edx,DWORD PTR [ecx]
  403dc8:	dec    ebp
  403dc9:	js     0x403db9
  403dcb:	hlt    
  403dcc:	xchg   ecx,eax
  403dcd:	sbb    BYTE PTR [ecx-0x6bc56969],al
  403dd3:	push   esi
  403dd4:	inc    ebp
  403dd5:	add    DWORD PTR [edi+0x1bf8a50],ecx
  403ddb:	dec    eax
  403ddc:	sub    al,0xf5
  403dde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ddf:	(bad)  
  403de0:	aas    
  403de1:	call   0x81c3:0x12c8f87e
  403de8:	(bad)  
  403de9:	fldcw  WORD PTR [esi+eiz*4-0x46a78e03]
  403df0:	(bad)  
  403df1:	shr    edi,cl
  403df3:	mov    eax,ds:0x713eb27e
  403df8:	sbb    al,0x49
  403dfa:	and    bh,BYTE PTR [ebp-0x46]
  403dfd:	data16 out 0x67,al
  403e00:	cmc    
  403e01:	dec    ecx
  403e02:	shl    BYTE PTR [eax],1
  403e04:	int    0x4d
  403e06:	pop    ecx
  403e07:	inc    esp
  403e08:	mov    dl,0x58
  403e0a:	ss dec ebp
  403e0c:	pop    ecx
  403e0d:	cwde   
  403e0e:	mov    esi,0x5a38dfd0
  403e13:	sub    eax,0xcddd5fba
  403e18:	cld    
  403e19:	or     BYTE PTR [eax-0x3e],dh
  403e1c:	iret   
  403e1d:	sub    ch,bh
  403e1f:	in     eax,dx
  403e20:	into   
  403e21:	pop    edx
  403e22:	push   cs
  403e23:	xlat   BYTE PTR ds:[ebx]
  403e24:	mov    dh,0x1d
  403e26:	add    al,0xe6
  403e28:	mov    bh,BYTE PTR [ecx]
  403e2a:	or     edi,DWORD PTR [edx]
  403e2c:	data16 (bad) 
  403e2f:	mov    eax,ds:0x7b802f54
  403e34:	dec    ebp
  403e35:	data16 add al,0xd9
  403e38:	inc    ebp
  403e39:	ror    BYTE PTR [ebx],1
  403e3b:	inc    edi
  403e3c:	fwait
  403e3d:	jb     0x403e19
  403e3f:	fistp  DWORD PTR ds:0x10dfe34c
  403e45:	pushf  
  403e46:	cmp    eax,0x7adef40d
  403e4b:	or     DWORD PTR [edi+0x31],eax
  403e4e:	jge    0x403de4
  403e50:	scas   eax,DWORD PTR es:[edi]
  403e51:	imul   ebp,DWORD PTR [edx+eiz*8],0xffffffb8
  403e55:	fimul  WORD PTR [edx+ebx*1+0x31]
  403e59:	pop    es
  403e5a:	mov    eax,ds:0x2c1953f4
  403e5f:	into   
  403e60:	xchg   ebp,eax
  403e61:	out    dx,eax
  403e62:	hlt    
  403e63:	inc    esi
  403e64:	jmp    0x5f19:0x1098d607
  403e6b:	sbb    DWORD PTR [ebp-0x5b],esi
  403e6e:	pop    ecx
  403e6f:	or     eax,0xe134d06d
  403e74:	js     0x403eaf
  403e76:	(bad)  [edx+0x623c58e4]
  403e7c:	fnstsw WORD PTR [ebp-0x2cea155]
  403e82:	jp     0x403e0c
  403e84:	cli    
  403e85:	out    dx,eax
  403e86:	retf   0x70e
  403e89:	pop    esp
  403e8a:	pushf  
  403e8b:	das    
  403e8c:	mov    edx,0x7826d2f9
  403e91:	jbe    0x403e9e
  403e93:	jb     0x403e2f
  403e95:	jmp    0x403ed9
  403e97:	push   esi
  403e98:	call   0x5863:0x2d864a0
  403e9f:	xchg   ebx,eax
  403ea0:	int3   
  403ea1:	or     eax,0xdd22ce8b
  403ea6:	lds    edx,FWORD PTR [edx+0x7f]
  403ea9:	push   ds
  403eaa:	sub    eax,DWORD PTR [ecx]
  403eac:	push   ds
  403ead:	push   eax
  403eae:	cld    
  403eaf:	inc    BYTE PTR [ebx+0x30]
  403eb2:	inc    esi
  403eb3:	adc    edx,esp
  403eb5:	sbb    DWORD PTR [esi],ecx
  403eb7:	fs daa 
  403eb9:	arpl   WORD PTR [edx+eax*4-0x5d9ce6fd],di
  403ec0:	pop    ebp
  403ec1:	push   0x4
  403ec3:	jbe    0x403eb4
  403ec5:	add    cl,cl
  403ec7:	jnp    0x403f2e
  403ec9:	pop    ss
  403eca:	scas   eax,DWORD PTR es:[edi]
  403ecb:	adc    al,0x83
  403ecd:	xchg   edx,eax
  403ece:	(bad)  
  403ecf:	loop   0x403e5b
  403ed1:	jmp    0x403e64
  403ed3:	sbb    edx,DWORD PTR [ecx+0x7fed4b40]
  403ed9:	scas   eax,DWORD PTR es:[edi]
  403eda:	lds    esp,FWORD PTR [edi+0x5486d61d]
  403ee0:	cmp    al,0x24
  403ee2:	loope  0x403f59
  403ee4:	mov    cl,BYTE PTR [esi+0x19]
  403ee7:	shr    DWORD PTR [ecx+0x67],1
  403eea:	or     BYTE PTR [eax-0x1b95017e],ch
  403ef0:	popf   
  403ef1:	pop    eax
  403ef2:	xchg   ebp,eax
  403ef3:	into   
  403ef4:	ror    DWORD PTR [ebx],cl
  403ef6:	fmul   QWORD PTR [edx-0xf324d39]
  403efc:	xor    al,0xd2
  403efe:	jae    0x403f64
  403f00:	mov    esi,0x6d26895c
  403f05:	div    DWORD PTR [edx+ebp*2+0x31]
  403f09:	inc    edi
  403f0a:	les    ebx,FWORD PTR [eax+ecx*1-0x38]
  403f0e:	xchg   esp,eax
  403f0f:	ret    0xa9dd
  403f12:	add    BYTE PTR [edx+0x2aadc79f],bl
  403f18:	push   esi
  403f19:	out    0x5b,eax
  403f1b:	shr    DWORD PTR [eax+0x7c],0x33
  403f1f:	daa    
  403f20:	dec    esp
  403f21:	pop    ebp
  403f22:	clc    
  403f23:	mov    WORD PTR [edi],gs
  403f25:	and    al,0xc9
  403f27:	sbb    BYTE PTR [eax],bh
  403f29:	aas    
  403f2a:	sbb    DWORD PTR [esi],esi
  403f2c:	fldcw  WORD PTR [eax]
  403f2e:	or     eax,0x26c744eb
  403f33:	xor    al,0xf7
  403f35:	shl    ah,cl
  403f37:	sbb    cl,0xf9
  403f3a:	pop    ds
  403f3b:	pop    esp
  403f3c:	lea    esp,[eax+0x53fcdb23]
  403f42:	push   ss
  403f43:	xchg   edi,eax
  403f44:	xor    eax,0xf3044cbf
  403f49:	retf   0xd7b2
  403f4c:	mov    ebx,0x70c2c65d
  403f51:	jg     0x403f22
  403f53:	jmp    0xcb65:0x7f914d6b
  403f5a:	or     bh,ch
  403f5c:	out    0xe7,al
  403f5e:	lea    ecx,[ecx+0x48]
  403f61:	or     DWORD PTR [edi-0x5f],edx
  403f64:	rol    edx,1
  403f66:	push   0x63
  403f68:	outs   dx,DWORD PTR ds:[esi]
  403f69:	inc    edi
  403f6a:	cld    
  403f6b:	call   0x46c59104
  403f70:	cwde   
  403f71:	jne    0x403f15
  403f73:	add    ebp,DWORD PTR [ecx-0x6]
  403f76:	xor    ebp,DWORD PTR [ebx-0x4]
  403f79:	add    dh,ch
  403f7b:	inc    esp
  403f7c:	or     edi,DWORD PTR [ecx-0x63370d06]
  403f82:	ss add eax,0xdb2b2e96
  403f88:	jg     0x403feb
  403f8a:	ja     0x403fc2
  403f8c:	(bad)
  403f8f:	push   esp
  403f90:	das    
  403f91:	sub    BYTE PTR [ebx+0x62],ch
  403f94:	xor    edx,DWORD PTR [ebx]
  403f96:	dec    ebp
  403f97:	and    DWORD PTR [ecx+eax*4+0x13101273],0xffffffcb
  403f9f:	push   edi
  403fa0:	inc    esp
  403fa1:	cwde   
  403fa2:	out    dx,al
  403fa3:	jl     0x403f48
  403fa5:	mov    esp,0xd80b7ccd
  403faa:	mov    edi,0x7f0ad32f
  403faf:	imul   eax,DWORD PTR ds:0xf43a2cad,0x5b197445
  403fb9:	and    BYTE PTR [ecx+0x60],bl
  403fbc:	sbb    eax,edx
  403fbe:	enter  0xa643,0x35
  403fc2:	pushf  
  403fc3:	mov    DWORD PTR [ecx-0x29],esp
  403fc6:	(bad)  
  403fc7:	push   ss
  403fc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fc9:	jg     0x403f65
  403fcb:	adc    eax,0xe004e5d2
  403fd0:	inc    esi
  403fd1:	mov    edi,0x969a8da8
  403fd6:	sti    
  403fd7:	jo     0x403f5a
  403fd9:	mov    gs,WORD PTR [edi-0x42]
  403fdc:	leave  
  403fdd:	xchg   edx,eax
  403fde:	push   es
  403fdf:	(bad)  
  403fe0:	iret   
  403fe1:	std    
  403fe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fe3:	lahf   
  403fe4:	add    ebp,DWORD PTR [eax]
  403fe6:	sub    cl,BYTE PTR [ecx-0xd74dc5]
  403fec:	cmp    ah,BYTE PTR [ecx-0x1ebb198c]
  403ff2:	stos   DWORD PTR es:[edi],eax
  403ff3:	jno    0x403ffb
  403ff5:	rol    DWORD PTR [esi-0x6a5742ae],0xde
  403ffc:	call   ebx
  403ffe:	dec    ebp
  403fff:	push   eax
  404000:	cs inc esp
  404002:	int3   
  404003:	sub    BYTE PTR ds:0xfad3cc8f,ch
  404009:	jb     0x403fe8
  40400b:	inc    edi
  40400c:	inc    esp
  40400d:	inc    ebp
  40400e:	mov    dh,0x1d
  404010:	or     DWORD PTR [edx+0x394c3f96],ebx
  404016:	mov    BYTE PTR [ebp+0x1e],dl
  404019:	xor    ah,ah
  40401b:	adc    eax,0x77b6c8f6
  404020:	ficom  DWORD PTR [edi-0xc]
  404023:	outs   dx,BYTE PTR ds:[esi]
  404024:	js     0x403fa9
  404026:	bound  ebx,QWORD PTR [ebx+edx*1+0x2a9a80f7]
  40402d:	cld    
  40402e:	inc    edx
  40402f:	sbb    ebx,edi
  404031:	popa   
  404032:	fdivrp st(1),st
  404034:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404035:	jo     0x404080
  404037:	imul   ebx,edi,0x33a30095
  40403d:	popa   
  40403e:	ja     0x40409a
  404040:	fucom  st(2)
  404042:	dec    edx
  404043:	das    
  404044:	or     DWORD PTR [edx],0xffffffd0
  404047:	pop    ds
  404048:	jle    0x40405d
  40404a:	dec    esp
  40404b:	ss and eax,0x9f8c92da
  404051:	popa   
  404052:	in     al,0x16
  404054:	cmp    eax,0x6b9624de
  404059:	xacquire xchg BYTE PTR [ecx],dh
  40405c:	inc    eax
  40405d:	nop
  40405e:	pop    ebx
  40405f:	ret    
  404060:	faddp  st(2),st
  404062:	mov    al,0x72
  404064:	(bad)  
  404065:	popa   
  404066:	dec    edi
  404067:	jnp    0x4040e4
  404069:	cmc    
  40406a:	jo     0x4040d1
  40406c:	enter  0xbf18,0xa5
  404070:	sbb    BYTE PTR [edx+0x1f2e3b91],bl
  404076:	out    dx,al
  404077:	loopne 0x40405b
  404079:	call   0x748d:0x947090f0
  404080:	jle    0x404020
  404082:	mov    WORD PTR [edx+ecx*8],?
  404085:	fwait
  404086:	leave  
  404087:	(bad)  
  404088:	xor    BYTE PTR [ebx-0x4b],al
  40408b:	test   eax,0x2b1c082f
  404090:	mov    al,ds:0xb50c9b02
  404095:	and    eax,0x5f7b0cb6
  40409a:	fcom   QWORD PTR [esi+0x213757ce]
  4040a0:	outs   dx,BYTE PTR ds:[esi]
  4040a1:	int3   
  4040a2:	jmp    0x404040
  4040a4:	std    
  4040a5:	arpl   WORD PTR [esi-0x30],si
  4040a8:	mov    BYTE PTR [edx+0x754ca0eb],cl
  4040ae:	aad    0xd4
  4040b0:	xor    edi,ebx
  4040b2:	fmulp  st(4),st
  4040b4:	je     0x4040d3
  4040b6:	test   edi,0x57887823
  4040bc:	cld    
  4040bd:	(bad)  
  4040be:	stc    
  4040bf:	jne    0x404106
  4040c1:	fcomp  DWORD PTR [ebx-0x515e466e]
  4040c7:	jno    0x404050
  4040c9:	and    al,0x13
  4040cb:	int3   
  4040cc:	adc    BYTE PTR [ecx+0x3a],cl
  4040cf:	dec    esp
  4040d0:	or     esi,DWORD PTR [edi+0x1042e9cf]
  4040d6:	in     eax,dx
  4040d7:	mov    ebp,0xb7771da8
  4040dc:	call   DWORD PTR [ecx+edx*1-0xc4569d5]
  4040e3:	add    edx,ebx
  4040e5:	test   eax,0x3326d249
  4040ea:	fistp  QWORD PTR [ebp-0x6e6a7eba]
  4040f0:	call   0xc6ea7224
  4040f5:	mov    dh,0x21
  4040f7:	cmp    BYTE PTR [esi],0xcc
  4040fa:	cmp    BYTE PTR [ecx],bl
  4040fc:	lods   al,BYTE PTR ds:[esi]
  4040fd:	cdq    
  4040fe:	mov    DWORD PTR [ebx+0x317b4427],ebp
  404104:	shl    cl,1
  404106:	(bad)  
  404107:	cli    
  404108:	int3   
  404109:	ud2    
  40410b:	ret    
  40410c:	outs   dx,BYTE PTR ds:[esi]
  40410d:	mov    al,0x75
  40410f:	popf   
  404110:	add    eax,0xa4b8fecb
  404115:	leave  
  404116:	loop   0x404153
  404118:	xchg   ebx,eax
  404119:	scas   eax,DWORD PTR es:[edi]
  40411a:	or     DWORD PTR [ecx],0x4d21f632
  404120:	call   0x51cc67f6
  404125:	sti    
  404126:	jmp    0xd540:0xdbef81a
  40412d:	repz icebp 
  40412f:	or     esi,DWORD PTR [esi]
  404131:	cwde   
  404132:	bound  ecx,QWORD PTR [edx]
  404134:	mov    al,ds:0x957bb16b
  404139:	or     eax,eax
  40413b:	int3   
  40413c:	popa   
  40413d:	xor    al,0xac
  40413f:	inc    esp
  404140:	in     al,0xea
  404142:	lods   al,BYTE PTR ds:[esi]
  404143:	repz mov ebx,0xe9db2d06
  404149:	mov    DWORD PTR [ebx-0x2231a344],esi
  40414f:	sar    dh,0x44
  404152:	sti    
  404153:	push   0xb
  404155:	inc    eax
  404156:	pop    ds
  404157:	or     cl,ch
  404159:	daa    
  40415a:	data16 jae 0x4041b4
  40415d:	adc    DWORD PTR [eax+0x73],0xc21e97a3
  404164:	stos   DWORD PTR es:[edi],eax
  404165:	into   
  404166:	cdq    
  404167:	inc    esi
  404168:	dec    eax
  404169:	push   esp
  40416a:	fldcw  WORD PTR [esi+0x73b614b0]
  404170:	ret    
  404171:	sahf   
  404172:	and    al,0xce
  404174:	dec    DWORD PTR [edi]
  404176:	divps  xmm0,xmm1
  404179:	mov    edx,ss
  40417b:	int3   
  40417c:	xchg   esp,eax
  40417d:	inc    ecx
  40417e:	shl    ah,0xb8
  404181:	sub    bh,BYTE PTR [ebp-0x5b]
  404184:	sub    DWORD PTR [ecx-0x8],edi
  404187:	jmp    0x40417f
  404189:	mov    eax,ds:0x16c6f7f0
  40418e:	or     ebp,DWORD PTR [ecx-0x20eb84ee]
  404194:	lods   eax,DWORD PTR ds:[esi]
  404195:	pop    ds
  404196:	lahf   
  404197:	cmp    DWORD PTR [edi],eax
  404199:	(bad)  
  40419a:	fsubr  QWORD PTR [edx]
  40419c:	adc    esi,DWORD PTR [ecx]
  40419e:	add    cl,bl
  4041a0:	std    
  4041a1:	mov    eax,ds:0x8e9f5a10
  4041a6:	mov    esi,ebp
  4041a8:	sbb    al,0xa9
  4041aa:	iret   
  4041ab:	xchg   DWORD PTR [eax+0xa],esp
  4041ae:	ins    BYTE PTR es:[edi],dx
  4041af:	js     0x4041ee
  4041b1:	xor    dh,BYTE PTR [eax]
  4041b3:	pusha  
  4041b4:	jnp    0x404183
  4041b6:	and    BYTE PTR ds:0x8cbe833a,dh
  4041bc:	aad    0x6e
  4041be:	lods   al,BYTE PTR ds:[esi]
  4041bf:	cld    
  4041c0:	and    cl,BYTE PTR gs:[ecx-0x3eea4cc4]
  4041c7:	mov    dl,BYTE PTR [ecx]
  4041c9:	(bad)  
  4041cb:	cwde   
  4041cc:	push   ds
  4041cd:	mov    dh,0xe2
  4041cf:	push   ds
  4041d0:	dec    ebp
  4041d1:	das    
  4041d2:	push   edx
  4041d3:	out    0x3c,al
  4041d5:	mov    ecx,0xb04bc0ea
  4041da:	mov    eax,0x43246108
  4041df:	dec    edi
  4041e0:	and    ebp,ecx
  4041e2:	rcl    BYTE PTR [eax+edx*2],cl
  4041e5:	das    
  4041e6:	call   0xec60:0x2614250
  4041ed:	cld    
  4041ee:	loope  0x404182
  4041f0:	pop    ebp
  4041f1:	jbe    0x40422a
  4041f3:	pusha  
  4041f4:	add    eax,0xc185ec59
  4041f9:	pop    ebx
  4041fa:	bsf    edx,DWORD PTR [esi+0x2b]
  4041fe:	inc    esp
  4041ff:	jae    0x4041ca
  404201:	cli    
  404202:	sbb    ecx,DWORD PTR [esi+0x1dbdc949]
  404208:	ins    DWORD PTR es:[edi],dx
  404209:	sub    eax,0x33e20d2
  40420e:	pop    esi
  40420f:	sbb    ebp,DWORD PTR [eax]
  404211:	scas   al,BYTE PTR es:[edi]
  404212:	or     ebp,DWORD PTR [ebp+0x5]
  404215:	int    0xff
  404217:	xchg   edi,eax
  404218:	sub    al,BYTE PTR [edi+ebp*4+0x40]
  40421c:	in     al,dx
  40421d:	or     ch,BYTE PTR [ecx-0x4dfd3328]
  404223:	push   0x93d954dd
  404228:	and    al,0x79
  40422a:	sub    dl,BYTE PTR [esi+0x37]
  40422d:	daa    
  40422e:	gs jne 0x4041ee
  404231:	fistp  QWORD PTR [eax-0x52b61f36]
  404237:	sbb    bh,BYTE PTR [ebx+ecx*2-0xbef00fd]
  40423e:	mov    ecx,0x131aa9e7
  404243:	xor    eax,0x847efbc0
  404248:	and    al,0xec
  40424a:	call   0x9c72:0xa506b314
  404251:	lods   al,BYTE PTR ds:[esi]
  404252:	mov    cl,BYTE PTR [edi-0x71]
  404255:	stos   BYTE PTR es:[edi],al
  404256:	ret    
  404257:	mov    cl,0xae
  404259:	dec    ebx
  40425a:	push   cs
  40425b:	cmp    esp,ebp
  40425d:	mov    BYTE PTR ds:0x342fb7e1,ah
  404263:	inc    ebp
  404264:	fist   WORD PTR [ecx-0x7b364edf]
  40426a:	(bad)  
  40426b:	jmp    0x4042c4
  40426d:	out    dx,eax
  40426e:	das    
  40426f:	ret    
  404270:	xchg   esp,eax
  404271:	shl    DWORD PTR [ebx+0x17],cl
  404274:	jae    0x4041f9
  404276:	stos   BYTE PTR es:[edi],al
  404277:	lahf   
  404278:	js     0x40420f
  40427a:	sahf   
  40427b:	cmp    DWORD PTR [eax],eax
  40427d:	fistp  DWORD PTR [ebp+0x174ef963]
  404283:	sub    eax,0x20268c92
  404288:	into   
  404289:	outs   dx,BYTE PTR ds:[esi]
  40428a:	pop    eax
  40428b:	lods   al,BYTE PTR ds:[esi]
  40428c:	and    dh,BYTE PTR [eax-0x7cc88d3f]
  404292:	lock xchg edi,eax
  404294:	inc    ebx
  404295:	gs inc ebx
  404297:	mov    ds:0xb1ef8bd,al
  40429c:	and    eax,0xac83eb0e
  4042a1:	ficomp DWORD PTR [edx+0x26]
  4042a4:	adc    DWORD PTR [ebx+esi*1],eax
  4042a7:	and    DWORD PTR [esp+ebp*2+0x25],0xeed8854d
  4042af:	push   edi
  4042b0:	mov    ecx,0xb97d4ea9
  4042b5:	sbb    eax,0xb4ef19b3
  4042ba:	jns    0x404248
  4042bc:	pop    edi
  4042bd:	pop    esi
  4042be:	xor    eax,0xd46df638
  4042c3:	aaa    
  4042c4:	fstp   st(3)
  4042c6:	sti    
  4042c7:	aas    
  4042c8:	mov    cs,WORD PTR [eax-0x3d0cdd47]
  4042ce:	pop    ecx
  4042cf:	push   ecx
  4042d0:	jnp    0x4042d8
  4042d2:	test   eax,0xcb3b70c9
  4042d7:	xchg   esp,eax
  4042d8:	xlat   BYTE PTR ds:[ebx]
  4042d9:	sub    dh,BYTE PTR [ecx+0x58]
  4042dc:	sar    DWORD PTR [edx-0x779ce04f],cl
  4042e2:	xor    bl,ah
  4042e4:	rcr    BYTE PTR [eax-0x3b785bf9],cl
  4042ea:	dec    ebp
  4042eb:	pop    es
  4042ec:	inc    esi
  4042ed:	mov    ds:0x7aa4cbd6,eax
  4042f2:	adc    eax,0x74ee1084
  4042f7:	adc    esi,DWORD PTR [ecx+0x65ada216]
  4042fd:	sbb    al,0x9d
  4042ff:	popa   
  404300:	ss mov esp,0x9bdebfbc
  404306:	jnp    0x4042dc
  404308:	mov    al,0xf
  40430a:	sbb    dl,BYTE PTR [ebp-0x53]
  40430d:	jmp    0x50104dc8
  404312:	in     eax,dx
  404313:	and    BYTE PTR [esi-0x8],0x38
  404317:	into   
  404318:	xchg   edi,eax
  404319:	mov    ds:0x58a62b44,al
  40431e:	lods   eax,DWORD PTR ds:[esi]
  40431f:	test   al,0x8a
  404321:	mov    cl,0xd2
  404323:	push   0x0
  404325:	sahf   
  404326:	out    dx,al
  404327:	(bad)  [esi]
  404329:	dec    esp
  40432a:	cdq    
  40432b:	mov    bl,0x2a
  40432d:	mov    bh,0xdd
  40432f:	mov    ebx,0x97684461
  404334:	adc    DWORD PTR [ebx-0x12bdda4d],esp
  40433a:	adc    bh,BYTE PTR [eax]
  40433c:	nop
  40433d:	adc    DWORD PTR [eax],ebp
  40433f:	xchg   esi,eax
  404340:	mov    WORD PTR [esi-0x30],gs
  404343:	les    esp,FWORD PTR [eax+0x56]
  404346:	dec    esi
  404347:	dec    BYTE PTR [bx+si]
  40434a:	push   esi
  40434b:	fisttp QWORD PTR [edi+0x38e0c921]
  404351:	imul   edi,DWORD PTR [ebp+ebx*4-0x28b3440c],0x72
  404359:	mov    edi,0x21bff476
  40435e:	fcomp  QWORD PTR [eax+0x45763a3f]
  404364:	in     eax,0xa2
  404366:	xchg   ebx,eax
  404367:	mov    al,0x63
  404369:	dec    esp
  40436a:	inc    esp
  40436b:	dec    ecx
  40436c:	inc    ebp
  40436d:	(bad)  
  40436f:	sar    ecx,0x6d
  404372:	ret    0x2cc1
  404375:	pop    esp
  404376:	ror    bh,1
  404378:	jb     0x40430c
  40437a:	pop    es
  40437b:	sbb    al,0x5f
  40437d:	push   ebp
  40437e:	sti    
  40437f:	adc    bl,BYTE PTR [esp+eiz*2]
  404382:	dec    DWORD PTR [edx]
  404384:	jne    0x40430f
  404386:	sbb    BYTE PTR [esi+0x7f],0x98
  40438a:	ins    DWORD PTR es:[edi],dx
  40438b:	mov    cl,0x53
  40438d:	push   es
  40438e:	jnp    0x404345
  404390:	jmp    0xe915:0x84190ef
  404397:	(bad)  
  404398:	and    edi,edx
  40439a:	test   al,0xa2
  40439c:	push   esi
  40439d:	xor    eax,0xe34e6a07
  4043a2:	popf   
  4043a3:	cmp    BYTE PTR [esi],al
  4043a5:	mov    cl,0x86
  4043a7:	pop    ebp
  4043a8:	add    eax,0x60bc1bed
  4043ad:	mov    ebp,0x55b54cd5
  4043b2:	sbb    eax,0xa3a1da25
  4043b7:	fsubr  QWORD PTR [eax-0x3cdb3556]
  4043bd:	(bad)  
  4043be:	shr    cl,1
  4043c0:	pop    edi
  4043c1:	mov    dl,0xae
  4043c3:	inc    edi
  4043c4:	mov    dh,0x3c
  4043c6:	dec    eax
  4043c7:	adc    eax,0xcee6509e
  4043cc:	popf   
  4043cd:	xchg   edi,eax
  4043ce:	test   eax,0xe44c8487
  4043d3:	int    0x3
  4043d5:	mov    ds,WORD PTR [ebx-0x3fbc0623]
  4043db:	neg    ecx
  4043dd:	stos   DWORD PTR es:[edi],eax
  4043de:	loop   0x404418
  4043e0:	arpl   WORD PTR [edx-0x30],di
  4043e3:	jno    0x40444d
  4043e5:	cwde   
  4043e6:	stos   BYTE PTR es:[edi],al
  4043e7:	jecxz  0x40438c
  4043e9:	dec    ecx
  4043ea:	pop    ds
  4043eb:	push   cs
  4043ec:	inc    ebp
  4043ed:	jbe    0x4043bd
  4043ef:	add    eax,0xf5c54a0f
  4043f4:	sbb    BYTE PTR [ecx+ebx*1+0x78b6f2f2],ch
  4043fb:	pop    ecx
  4043fc:	or     BYTE PTR [ebp+0x59],cl
  4043ff:	lea    esp,[ecx+0x7efddf4a]
  404405:	xor    eax,0x581162eb
  40440a:	jge    0x4043a5
  40440c:	inc    esp
  40440d:	xor    BYTE PTR [eax],0x57
  404410:	stos   BYTE PTR es:[edi],al
  404411:	mov    bh,0xc8
  404413:	popf   
  404414:	xchg   ebx,eax
  404415:	mov    ebp,0xe3354d54
  40441a:	mov    edx,DWORD PTR [eax-0x4a758aff]
  404420:	ja     0x4043ce
  404422:	inc    ebp
  404423:	mov    eax,ds:0xa9f47a8f
  404428:	imul   eax,DWORD PTR [esi],0x6102136e
  40442e:	sub    bl,dh
  404430:	cmp    al,BYTE PTR [edi-0x11]
  404433:	jb     0x404422
  404435:	bound  esp,QWORD PTR [edi-0x712dc84c]
  40443b:	outs   dx,BYTE PTR ds:[esi]
  40443c:	(bad)  
  40443d:	lea    esp,[ebx+0x28]
  404440:	icebp  
  404441:	sbb    BYTE PTR [ecx+eax*4-0x700e1c93],ah
  404448:	jnp    0x40446a
  40444a:	dec    esp
  40444b:	lahf   
  40444c:	mov    BYTE PTR [eax-0x2b29b6bd],bh
  404452:	mov    esi,0xb8d3e1b9
  404457:	fs pusha 
  404459:	dec    esi
  40445a:	and    ecx,DWORD PTR [eax-0x66]
  40445d:	nop
  40445e:	iret   
  40445f:	mov    cl,BYTE PTR [ebx]
  404461:	cmp    DWORD PTR [eax],0xc0207a12
  404467:	cmp    eax,0x3da74643
  40446c:	xchg   esp,eax
  40446d:	in     eax,dx
  40446e:	fidiv  WORD PTR [ebx-0x5b]
  404471:	(bad)  
  404472:	xor    ah,BYTE PTR [edi]
  404474:	aam    0xaa
  404476:	push   ebp
  404477:	bound  edx,QWORD PTR [ecx+ebx*1]
  40447a:	icebp  
  40447b:	ja     0x4044e4
  40447d:	mov    bh,0x4d
  40447f:	imul   edi,DWORD PTR [ebx-0x61a14867],0x77671763
  404489:	retf   0x4f3f
  40448c:	adc    esp,DWORD PTR [ebx+0x4381868e]
  404492:	sbb    BYTE PTR [esi-0x14eda28f],bl
  404498:	ror    BYTE PTR [eax-0x7b8a4edf],0xcb
  40449f:	push   0x5c489ac1
  4044a4:	or     ebx,DWORD PTR [edx+eax*1+0x6c]
  4044a8:	mov    bh,0x4
  4044aa:	mov    ecx,0x884e121
  4044af:	imul   esi,DWORD PTR [ebx+0x77],0xf873ac3d
  4044b6:	seto   BYTE PTR [esi-0x71]
  4044ba:	inc    ebx
  4044bb:	scas   al,BYTE PTR es:[edi]
  4044bc:	adc    DWORD PTR [edi+0x2e],0xc8d900cb
  4044c3:	mov    ebp,0x3c990da2
  4044c8:	jge    0x404520
  4044ca:	jmp    0x9da3:0xf4ed7cdc
  4044d1:	jns    0x40450b
  4044d3:	in     eax,dx
  4044d4:	xchg   esi,eax
  4044d5:	sbb    eax,0x978cd394
  4044da:	push   eax
  4044db:	sbb    eax,0x9ab148e2
  4044e0:	shl    eax,cl
  4044e2:	(bad)  
  4044e3:	xchg   BYTE PTR [edi-0x48],dl
  4044e6:	and    dh,BYTE PTR [ecx+ebx*2-0x5d919635]
  4044ed:	ret    
  4044ee:	addr16 mov esp,0x625d86fb
  4044f4:	mov    dl,0x5d
  4044f6:	lds    ecx,FWORD PTR [eax]
  4044f8:	or     DWORD PTR [edx],ebx
  4044fa:	mov    bh,0x1b
  4044fc:	hlt    
  4044fd:	sub    cl,dh
  4044ff:	jne    0x4044cc
  404501:	jae    0x404487
  404503:	cmp    al,0xd0
  404505:	ret    0xcb85
  404508:	add    eax,0x72a6f053
  40450d:	inc    ecx
  40450e:	mov    WORD PTR [eax+0x222cecf],es
  404514:	call   0xf850430
  404519:	push   esp
  40451a:	and    eax,0xe376cc0d
  40451f:	sub    BYTE PTR [edx+0x4],cl
  404522:	jns    0x4044d6
  404524:	cmp    BYTE PTR [ecx+0x5b0c77b7],dl
  40452a:	test   BYTE PTR [ebx-0x7f],cl
  40452d:	ret    
  40452e:	sub    esp,edx
  404530:	repz jmp 0x404577
  404533:	out    0xf7,eax
  404535:	or     DWORD PTR [ecx+0xb3f516a],eax
  40453b:	cmp    dh,ch
  40453d:	mov    eax,ds:0x4073f7a2
  404542:	xchg   ebp,eax
  404543:	push   eax
  404544:	repnz loopne 0x40454d
  404547:	lods   al,BYTE PTR ds:[esi]
  404548:	das    
  404549:	jp     0x4045c0
  40454b:	cmovs  eax,ebx
  40454e:	add    edx,ebx
  404550:	and    eax,0x26d5b1a5
  404555:	mov    esp,0x2d8cfdf4
  40455a:	unpckhps xmm7,XMMWORD PTR [eax-0x7c5ff1ff]
  404561:	sub    eax,0x4ae2e689
  404566:	xchg   esp,eax
  404567:	or     DWORD PTR [edi+0x6ee0fb4a],esp
  40456d:	xlat   BYTE PTR ds:[ebx]
  40456e:	mov    dh,0xf4
  404570:	fmul   DWORD PTR [ebp-0x70ec3316]
  404576:	push   edi
  404577:	aam    0x4
  404579:	daa    
  40457a:	jl     0x404546
  40457c:	icebp  
  40457d:	sahf   
  40457e:	lahf   
  40457f:	mov    ebp,0xb5cf936
  404584:	in     al,dx
  404585:	out    dx,al
  404586:	inc    esp
  404587:	in     eax,dx
  404588:	fwait
  404589:	push   ss
  40458a:	mov    DWORD PTR [edi+0x61],0x5f4eb2f7
  404591:	pop    ds
  404592:	xor    eax,0x46549cba
  404597:	lds    ebx,FWORD PTR [esi+0x79494b89]
  40459d:	fsubr  QWORD PTR ds:0xc91ee088
  4045a3:	adc    eax,0x5a541947
  4045a8:	mov    ebp,esi
  4045aa:	popa   
  4045ab:	sub    al,0xdd
  4045ad:	out    0xf5,al
  4045af:	scas   al,BYTE PTR es:[edi]
  4045b0:	inc    edx
  4045b1:	loopne 0x404533
  4045b3:	jge    0x40462f
  4045b5:	push   0xffffff84
  4045b7:	jecxz  0x4045c7
  4045b9:	in     eax,dx
  4045ba:	and    DWORD PTR [ebx+0x57],ecx
  4045bd:	das    
  4045be:	stc    
  4045bf:	add    BYTE PTR [eax],bl
  4045c1:	rol    dh,1
  4045c3:	or     BYTE PTR [ebp+0x58924069],bh
  4045c9:	lea    ecx,[ebx]
  4045cb:	out    0xda,al
  4045cd:	popf   
  4045ce:	and    BYTE PTR [eax],dl
  4045d0:	inc    DWORD PTR [ebp-0x2ee10b3]
  4045d6:	and    al,0x8c
  4045d8:	or     BYTE PTR [ecx+eiz*8],dl
  4045db:	mov    ah,0x8f
  4045dd:	mov    ebp,0x3fc79bfa
  4045e2:	inc    edi
  4045e3:	stc    
  4045e4:	popa   
  4045e5:	adc    ah,bl
  4045e7:	inc    ebx
  4045e8:	je     0x4045e8
  4045ea:	pop    es
  4045eb:	push   ecx
  4045ec:	sub    ah,BYTE PTR [eax+ebp*2]
  4045ef:	loope  0x40459d
  4045f1:	je     0x4045c6
  4045f3:	sub    dh,BYTE PTR [ecx+edi*4]
  4045f6:	pop    esi
  4045f7:	jp     0x40466e
  4045f9:	leave  
  4045fa:	push   edx
  4045fb:	dec    edx
  4045fc:	mov    ch,0xf9
  4045fe:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  404600:	jae    0x4045d0
  404602:	jl     0x40466c
  404604:	popf   
  404605:	mov    bl,cl
  404607:	adc    al,0x3d
  404609:	in     eax,0xa2
  40460b:	repz in al,dx
  40460d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40460e:	gs pop esi
  404610:	data16 mov ?,WORD PTR [ecx]
  404613:	outs   dx,DWORD PTR ds:[esi]
  404614:	retf   0x5536
  404617:	dec    ebx
  404618:	int    0x58
  40461a:	dec    ebp
  40461b:	pop    esi
  40461c:	mov    cl,0xcd
  40461e:	shr    DWORD PTR [esi+ebx*1],0xfd
  404622:	dec    ecx
  404623:	inc    ebx
  404624:	sub    al,0x39
  404626:	ja     0x404613
  404628:	fcomp  QWORD PTR [ebp-0x69]
  40462b:	daa    
  40462c:	addr16 or dh,ch
  40462f:	mov    cl,0x24
  404631:	push   es
  404632:	loop   0x4045db
  404634:	(bad)  
  404635:	out    0x92,al
  404637:	lahf   
  404638:	cmp    DWORD PTR [ebx+0x24e84cf1],esi
  40463e:	sbb    ch,BYTE PTR [ecx-0x2b]
  404641:	sbb    DWORD PTR [ecx],0x50492624
  404647:	add    bl,BYTE PTR [ecx]
  404649:	popf   
  40464a:	add    esp,esp
  40464c:	retf   
  40464d:	loop   0x404653
  40464f:	div    BYTE PTR [edi-0x25]
  404652:	in     eax,dx
  404653:	sar    BYTE PTR [edi+0x172e1879],cl
  404659:	cs lahf 
  40465b:	fadd   st,st(4)
  40465d:	inc    edx
  40465e:	inc    ebp
  40465f:	ins    BYTE PTR es:[edi],dx
  404660:	dec    esp
  404661:	dec    esi
  404662:	dec    edx
  404663:	adc    eax,0x40f78dfb
  404668:	inc    esp
  404669:	xchg   DWORD PTR [edi],esi
  40466b:	ds out dx,eax
  40466d:	mov    bh,0x5b
  40466f:	mov    ds:0x65e018dd,eax
  404674:	popf   
  404675:	out    0x33,al
  404677:	test   eax,0x62b21fcd
  40467c:	adc    eax,0xe74d064d
  404681:	jmp    0x6aa91b6e
  404686:	mov    esp,0x79ab511b
  40468b:	mov    bl,0xd9
  40468d:	aam    0x1d
  40468f:	(bad)  [esi+0x6d]
  404692:	mov    al,ds:0x93fc3f5a
  404697:	jb     0x404679
  404699:	or     esi,DWORD PTR [eax]
  40469b:	jne    0x4046cd
  40469d:	int3   
  40469e:	and    eax,0x181c0535
  4046a3:	push   esp
  4046a4:	inc    esi
  4046a5:	cmp    al,BYTE PTR [esi+0x14]
  4046a8:	xchg   edx,eax
  4046a9:	iret   
  4046aa:	pop    es
  4046ab:	test   BYTE PTR [ebp-0x5c6d1cb8],bh
  4046b1:	mov    ebp,0xa86d121e
  4046b6:	push   esi
  4046b7:	in     eax,dx
  4046b8:	push   eax
  4046b9:	add    edx,DWORD PTR [ecx]
  4046bb:	sbb    BYTE PTR [ecx+0x309ddda6],0xf1
  4046c2:	(bad)  
  4046c3:	cmp    dh,BYTE PTR [edi+0x104c1ef6]
  4046c9:	retf   0xa74e
  4046cc:	std    
  4046cd:	cmp    BYTE PTR [ecx+0x5b],0xae
  4046d1:	mov    esi,0x90e8045f
  4046d6:	iret   
  4046d7:	sahf   
  4046d8:	cmp    BYTE PTR [eax-0x60],ah
  4046db:	(bad)  
  4046dc:	stc    
  4046dd:	es push ebx
  4046df:	cwde   
  4046e0:	dec    edi
  4046e1:	sbb    DWORD PTR [edi],esi
  4046e3:	test   BYTE PTR [ecx],cl
  4046e5:	fnstsw WORD PTR [esp+ebx*8-0xc]
  4046e9:	jecxz  0x404687
  4046eb:	cmp    al,0x67
  4046ed:	(bad)  [eax+0x6d]
  4046f0:	ret    0xbdc
  4046f3:	inc    ecx
  4046f4:	xlat   BYTE PTR ds:[ebx]
  4046f5:	(bad)
  4046f8:	pop    ecx
  4046f9:	cmc    
  4046fa:	ret    
  4046fb:	scas   eax,DWORD PTR es:[edi]
  4046fc:	jb     0x4046a3
  4046fe:	pop    es
  4046ff:	bound  eax,QWORD PTR [edx+0x49]
  404702:	jo     0x404705
  404704:	lahf   
  404705:	bound  eax,QWORD PTR [ebx-0x77]
  404708:	cli    
  404709:	cld    
  40470a:	cli    
  40470b:	xchg   ecx,eax
  40470c:	inc    DWORD PTR [ecx]
  40470e:	cwde   
  40470f:	fst    QWORD PTR [ebx+0x53]
  404712:	jge    0x4046bc
  404714:	add    DWORD PTR [ebp+0x77],ecx
  404717:	pushf  
  404718:	ins    BYTE PTR es:[edi],dx
  404719:	div    BYTE PTR [ebp-0x2225edaa]
  40471f:	xchg   BYTE PTR [eax+0x45],ch
  404722:	es test eax,0x6f23f985
  404728:	sub    al,0xa8
  40472a:	sbb    esp,DWORD PTR [ebx+0x46242a22]
  404730:	imul   edx,DWORD PTR [ecx-0x6b67578e],0xffffffa6
  404737:	xor    eax,0x39e6e20f
  40473c:	mov    ah,0x1d
  40473e:	jbe    0x404731
  404740:	test   esi,ebp
  404742:	push   edi
  404743:	std    
  404744:	adc    eax,0xd5ce48b0
  404749:	mov    ds:0x1205f87e,eax
  40474e:	push   0x705df42f
  404753:	xor    BYTE PTR [edi+0x59],ch
  404756:	das    
  404757:	add    edi,DWORD PTR [eax]
  404759:	cs jo  0x4047cc
  40475c:	and    eax,0xb813e15f
  404761:	sbb    ebp,DWORD PTR [eax+0x4]
  404764:	fwait
  404765:	aaa    
  404766:	in     eax,dx
  404767:	dec    esi
  404768:	movlps QWORD PTR [esi],xmm3
  40476b:	mov    DWORD PTR [edx],0x71aadc4f
  404771:	std    
  404772:	jg     0x40473b
  404774:	out    dx,al
  404775:	out    0xdd,eax
  404777:	and    dh,al
  404779:	icebp  
  40477a:	ja     0x4047f9
  40477c:	push   ebp
  40477d:	sub    BYTE PTR [edx],al
  40477f:	(bad)  
  404780:	je     0x4047b5
  404782:	jno    0x404757
  404784:	and    DWORD PTR [eax],esp
  404786:	xchg   edi,eax
  404787:	not    BYTE PTR [ebp+0x385b10f9]
  40478d:	arpl   WORD PTR [edx],ax
  40478f:	or     eax,0xb29c1aa5
  404794:	pop    edi
  404795:	dec    esi
  404796:	cmp    ah,BYTE PTR [eax+esi*2+0x61df0c7e]
  40479d:	and    ebx,esp
  40479f:	scas   al,BYTE PTR es:[edi]
  4047a0:	push   eax
  4047a1:	cli    
  4047a2:	xlat   BYTE PTR ds:[ebx]
  4047a3:	lods   eax,DWORD PTR ds:[esi]
  4047a4:	in     al,dx
  4047a5:	repz fsubrp st(3),st
  4047a8:	in     eax,0xd8
  4047aa:	addr16 pop ecx
  4047ac:	test   dl,cl
  4047ae:	arpl   WORD PTR [edi+eiz*1],cx
  4047b1:	(bad)  
  4047b2:	popa   
  4047b3:	pop    ebp
  4047b4:	jb     0x404777
  4047b6:	dec    ebp
  4047b7:	and    bl,bh
  4047b9:	add    eax,0xcd33550e
  4047be:	imul   esp,DWORD PTR [ebx+ebx*2-0x3d],0xb
  4047c3:	stc    
  4047c4:	retf   0x183e
  4047c7:	sbb    ebx,DWORD PTR [eax-0x295955f0]
  4047cd:	pop    ebp
  4047ce:	dec    esi
  4047cf:	adc    al,0xdc
  4047d1:	pop    ebp
  4047d2:	dec    ecx
  4047d3:	pop    esi
  4047d4:	pop    ebp
  4047d5:	sub    DWORD PTR [edi],ebp
  4047d7:	pop    ds
  4047d8:	test   eax,0x9cd9da4b
  4047dd:	push   cs
  4047de:	sar    DWORD PTR [edx],0x82
  4047e1:	jge    0x40480f
  4047e3:	cdq    
  4047e4:	pop    ds
  4047e5:	ja     0x4047d9
  4047e7:	mov    bl,0x48
  4047e9:	mov    BYTE PTR [edi],bl
  4047eb:	mov    cl,0x42
  4047ed:	ins    BYTE PTR es:[edi],dx
  4047ee:	fiadd  WORD PTR [ecx+0x27c34309]
  4047f4:	scas   eax,DWORD PTR es:[edi]
  4047f5:	or     ch,BYTE PTR [edx-0x77899337]
  4047fb:	lock inc edi
  4047fd:	(bad)  [ebp-0x3a]
  404800:	cli    
  404801:	adc    eax,0xc49ca319
  404806:	mov    WORD PTR [edi],es
  404808:	aas    
  404809:	jmp    0xeae1:0xddc36a1a
  404810:	jecxz  0x40480b
  404812:	ins    DWORD PTR es:[edi],dx
  404813:	test   BYTE PTR [ebp+0x22aa56f2],al
  404819:	inc    esi
  40481a:	mov    bh,0x9e
  40481c:	popw   ds
  40481e:	mov    esp,0xb7c9e70f
  404823:	or     dl,al
  404825:	fsub   DWORD PTR ds:0x2a88a477
  40482b:	inc    edi
  40482c:	mov    WORD PTR [edi+0x7e],es
  40482f:	lds    ebx,FWORD PTR [ebx+0x67e9b72c]
  404835:	out    0xe6,al
  404837:	out    dx,al
  404838:	fs dec eax
  40483a:	ret    0x6e5e
  40483d:	adc    edi,DWORD PTR [esp+0xad34218]
  404844:	fwait
  404845:	aam    0xa4
  404847:	xchg   ecx,eax
  404848:	and    ebx,edi
  40484a:	lods   al,BYTE PTR ds:[esi]
  40484b:	push   esp
  40484c:	cs pop eax
  40484e:	cmp    al,0x4a
  404850:	lea    ebx,[ebp-0x25caed48]
  404856:	mov    edx,0xc62c5b2d
  40485b:	mov    al,0xef
  40485d:	mov    edi,0x96026237
  404862:	loope  0x40488b
  404864:	lock stos DWORD PTR es:[edi],eax
  404866:	mov    edx,ecx
  404868:	out    0xe8,eax
  40486a:	mov    ebx,0xa3c6f5a2
  40486f:	xchg   esi,eax
  404870:	jae    0x40486d
  404872:	mov    eax,0x8612de0a
  404877:	fst    DWORD PTR [ebx]
  404879:	jle    0x40480b
  40487b:	cld    
  40487c:	(bad)  
  40487d:	test   eax,0x7e34d7aa
  404882:	jl     0x4048a8
  404884:	shl    DWORD PTR [eax+ebp*8+0x3d],cl
  404888:	sub    esi,DWORD PTR [ebp-0x75]
  40488b:	inc    edx
  40488c:	and    DWORD PTR [edx-0xbee4faa],esp
  404892:	fisub  DWORD PTR gs:[ebp-0x54]
  404896:	jns    0x40481b
  404898:	stos   BYTE PTR es:[edi],al
  404899:	shl    eax,1
  40489b:	int3   
  40489c:	push   eax
  40489d:	imul   edx,DWORD PTR [eax+0x1fa04b87],0xffffff95
  4048a4:	jge    0x404903
  4048a6:	jmp    0x6e480ca9
  4048ab:	or     esi,ebx
  4048ad:	test   BYTE PTR [edx-0x65976ce9],al
  4048b3:	add    DWORD PTR [edi+0x8],esi
  4048b6:	cmp    esp,DWORD PTR [eax-0x28]
  4048b9:	out    dx,eax
  4048ba:	or     ebp,DWORD PTR [ebp+edx*8-0x58]
  4048be:	not    ah
  4048c0:	lock js 0x404916
  4048c3:	dec    eax
  4048c4:	or     al,0x1
  4048c6:	and    eax,0x35f618e9
  4048cb:	pop    ds
  4048cc:	test   DWORD PTR [eax+0x54d23008],ebp
  4048d2:	inc    ebx
  4048d3:	cld    
  4048d4:	imul   ebp,DWORD PTR [ebx-0x40],0x6b
  4048d8:	cs sbb al,0x7b
  4048db:	dec    eax
  4048dc:	push   ecx
  4048dd:	mov    dl,0xc2
  4048df:	inc    DWORD PTR [edi-0x3be0aa87]
  4048e5:	cmc    
  4048e6:	out    dx,eax
  4048e7:	aas    
  4048e8:	xlat   BYTE PTR ds:[ebx]
  4048e9:	jmp    0x4bcb:0x62d7cbb3
  4048f0:	jge    0x4048d1
  4048f2:	jmp    0x639d:0xf9470b04
  4048f9:	dec    esi
  4048fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048fb:	(bad)  
  4048fc:	lock adc esi,DWORD PTR [ebx]
  4048ff:	popf   
  404900:	mov    dh,BYTE PTR [ecx*4+0x6d6668c4]
  404907:	dec    ebx
  404908:	outs   dx,BYTE PTR ds:[esi]
  404909:	and    eax,0xadb84d99
  40490e:	sbb    BYTE PTR [ebp+eiz*2+0x4e],al
  404912:	cld    
  404913:	jecxz  0x40491c
  404915:	shl    BYTE PTR [edx],cl
  404917:	xlat   BYTE PTR ds:[ebx]
  404918:	jbe    0x404961
  40491a:	or     ebp,edx
  40491c:	std    
  40491d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40491e:	adc    DWORD PTR cs:[ebp-0x28],esp
  404922:	in     eax,0x62
  404924:	xchg   esp,eax
  404925:	lods   al,BYTE PTR ds:[esi]
  404926:	fild   WORD PTR [edx]
  404928:	pop    edx
  404929:	push   0xffffff94
  40492b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40492c:	sar    cl,0x27
  40492f:	cmp    al,0xd4
  404931:	and    esp,DWORD PTR [ebp+0x10aba496]
  404937:	call   edx
  404939:	(bad)  
  40493a:	sub    DWORD PTR [esi+0x49],esp
  40493d:	dec    eax
  40493e:	mov    cl,BYTE PTR [edi-0x60]
  404941:	sub    cl,dl
  404943:	and    ecx,DWORD PTR [edx+0x2515bc12]
  404949:	sahf   
  40494a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40494b:	push   0x260f5adf
  404950:	ret    0xe3c
  404953:	gs jg  0x404950
  404956:	sub    al,0x9f
  404958:	popa   
  404959:	sub    BYTE PTR gs:[edx-0x6f96f116],dh
  404960:	pop    es
  404961:	ret    
  404962:	in     al,dx
  404963:	push   edi
  404964:	pop    esi
  404965:	shl    DWORD PTR [ebx],1
  404967:	outs   dx,DWORD PTR ds:[esi]
  404968:	sbb    BYTE PTR [edi+0x34d572d7],0xac
  40496f:	jmp    0x7a5:0xcfb730d2
  404976:	ja     0x404940
  404978:	(bad)  
  404979:	mov    ah,0x4f
  40497b:	mov    ecx,0x887f7a49
  404980:	dec    edx
  404981:	xchg   DWORD PTR [ebp-0x1a538f4c],eax
  404987:	sar    DWORD PTR [eax+0x14],0x7a
  40498b:	push   edi
  40498c:	fild   QWORD PTR [edi+0x79]
  40498f:	enter  0x7480,0x98
  404993:	pusha  
  404994:	jnp    0x404927
  404996:	mov    ds,WORD PTR [esi+0x657bb1c4]
  40499c:	sar    BYTE PTR [esi],cl
  40499e:	add    DWORD PTR [esi+edx*8-0x29],edx
  4049a2:	test   al,0x23
  4049a4:	xchg   DWORD PTR [esi],edi
  4049a6:	jl     0x40496f
  4049a8:	sub    DWORD PTR [ecx+0x60fb8e65],0x894027b
  4049b2:	add    edx,ebx
  4049b4:	ret    0xd752
  4049b7:	pusha  
  4049b8:	enter  0xccb7,0xc5
  4049bc:	or     dh,BYTE PTR [eax-0x527059fd]
  4049c2:	aaa    
  4049c3:	sub    eax,0x95320e89
  4049c8:	push   ecx
  4049c9:	fs add edi,ebx
  4049cc:	dec    ecx
  4049cd:	jns    0x4049e2
  4049cf:	pop    eax
  4049d0:	pop    ds
  4049d1:	ja     0x404a42
  4049d3:	test   DWORD PTR [edx],ecx
  4049d5:	nop
  4049d6:	add    BYTE PTR [edi],bl
  4049d8:	xchg   bl,ch
  4049da:	lahf   
  4049db:	mov    dl,0x8f
  4049dd:	jbe    0x404a31
  4049df:	cwde   
  4049e0:	adc    esp,DWORD PTR [ecx+0x41]
  4049e3:	jo     0x404a36
  4049e5:	jle    0x4049e0
  4049e7:	cld    
  4049e8:	lods   al,BYTE PTR ds:[esi]
  4049e9:	mov    cl,BYTE PTR [ecx+0x72]
  4049ec:	pop    ss
  4049ed:	xchg   ecx,eax
  4049ee:	aam    0x86
  4049f0:	cmp    eax,0x7b753a0a
  4049f5:	and    eax,0x9a101c4b
  4049fa:	inc    edi
  4049fb:	sti    
  4049fc:	fist   WORD PTR [eax+0x47]
  4049ff:	cmc    
  404a00:	cli    
  404a01:	mov    esi,0xe57b00bf
  404a06:	add    eax,0x8910558d
  404a0b:	call   0xbb0:0x60399c53
  404a12:	inc    esp
  404a13:	mov    ah,0x8f
  404a15:	mov    ah,0x3f
  404a17:	test   ecx,edi
  404a19:	fisub  WORD PTR [esi-0x44]
  404a1c:	mov    bh,0x72
  404a1e:	add    BYTE PTR [ecx],bl
  404a20:	mov    DWORD PTR [ebx],ecx
  404a22:	mov    cl,0xc2
  404a24:	ja     0x4049e6
  404a26:	mov    ebx,0xf642e835
  404a2b:	cmp    DWORD PTR [ebp+0x78],esi
  404a2e:	mov    al,dl
  404a30:	in     al,0x45
  404a32:	call   0x1e5c:0x9079d5b7
  404a39:	pop    edx
  404a3a:	dec    esp
  404a3b:	fcomp  DWORD PTR [eax-0x6e69cac4]
  404a41:	lea    esp,[eax]
  404a43:	inc    ebp
  404a44:	adc    ch,al
  404a46:	retf   0x15ae
  404a49:	pop    edi
  404a4a:	jmp    0x8776:0xb1aa7283
  404a51:	pop    esi
  404a52:	test   BYTE PTR [ebp-0x48ac530e],bh
  404a58:	scas   eax,DWORD PTR es:[edi]
  404a59:	stc    
  404a5a:	mov    al,0x51
  404a5c:	sub    eax,0xfcc5964d
  404a61:	mov    edi,0x2564a313
  404a66:	test   BYTE PTR ds:[ecx],al
  404a69:	cmp    al,0x4a
  404a6b:	cld    
  404a6c:	out    dx,eax
  404a6d:	adc    al,0xed
  404a6f:	and    dh,ah
  404a71:	sub    edi,ebx
  404a73:	or     al,BYTE PTR [ebx-0x7b]
  404a76:	pop    eax
  404a77:	jbe    0x404a60
  404a79:	cmp    al,0xc7
  404a7b:	jmp    0x404a31
  404a7d:	cs out 0x20,al
  404a80:	xchg   edx,eax
  404a81:	(bad)  
  404a82:	jle    0x404a2e
  404a84:	shl    BYTE PTR [ebp+0x42],cl
  404a87:	jg     0x404adb
  404a89:	ffreep st(7)
  404a8b:	add    al,0xc1
  404a8d:	sub    al,0xec
  404a8f:	je     0x404b08
  404a91:	add    eax,0x24ec30e0
  404a96:	inc    edx
  404a97:	enter  0xc7c8,0x8f
  404a9b:	and    esi,ebx
  404a9d:	out    0x5c,al
  404a9f:	shl    DWORD PTR [edi+0x1d],0x66
  404aa3:	fsubrp st(2),st
  404aa5:	out    0x69,al
  404aa7:	add    BYTE PTR [esi+esi*1-0x6],ah
  404aab:	sbb    cl,BYTE PTR [eax+0x3b]
  404aae:	xor    ah,BYTE PTR [ebx+ebp*1]
  404ab1:	das    
  404ab2:	inc    eax
  404ab3:	fcomip st,st(1)
  404ab5:	add    al,0xc4
  404ab7:	scas   al,BYTE PTR es:[edi]
  404ab8:	cdq    
  404ab9:	ret    0x74c0
  404abc:	inc    DWORD PTR [ebx]
  404abe:	ret    0x1e3a
  404ac1:	(bad)  
  404ac2:	clc    
  404ac3:	push   cs
  404ac4:	push   ebp
  404ac5:	inc    esp
  404ac6:	jns    0x404b04
  404ac8:	mov    ch,0x9c
  404aca:	lods   al,BYTE PTR ds:[esi]
  404acb:	xchg   edi,eax
  404acc:	mov    edi,0xbe7eba05
  404ad1:	arpl   WORD PTR [esi-0x19],dx
  404ad4:	into   
  404ad5:	jecxz  0x404aa8
  404ad7:	add    BYTE PTR [ebx-0x58],bl
  404ada:	mov    ss:0xf82228d1,eax
  404ae0:	out    0x80,eax
  404ae2:	cmp    al,0x8a
  404ae4:	sbb    bl,BYTE PTR [edi]
  404ae6:	hlt    
  404ae7:	push   ebp
  404ae8:	adc    bl,cl
  404aea:	test   dh,bl
  404aec:	sub    al,0xdb
  404aee:	fbstp  TBYTE PTR [edi-0x2]
  404af1:	jmp    0x668bc193
  404af6:	add    al,0x6e
  404af8:	or     ebp,DWORD PTR [ebx-0x4f]
  404afb:	(bad)  
  404afc:	popa   
  404afd:	mov    bh,0xa3
  404aff:	fisubr WORD PTR [ebx+ebp*2+0x6a40e10c]
  404b06:	jno    0x404ab1
  404b08:	xchg   ebp,eax
  404b09:	outs   dx,DWORD PTR gs:[esi]
  404b0b:	pop    edx
  404b0c:	cld    
  404b0d:	rcl    al,cl
  404b0f:	cmp    dl,al
  404b11:	push   esi
  404b12:	daa    
  404b13:	dec    edi
  404b14:	and    BYTE PTR [edi-0x21],0x9e
  404b18:	fucomip st,st(0)
  404b1a:	mov    al,0x2d
  404b1c:	mov    dl,0x8
  404b1e:	popf   
  404b1f:	sub    eax,DWORD PTR ds:0x12b8ceb1
  404b25:	sub    DWORD PTR [edx-0x2f12be1a],edx
  404b2b:	jl     0x404b47
  404b2d:	ficom  DWORD PTR [eax+0x227eca7d]
  404b33:	jo     0x404b96
  404b35:	ffree  st(6)
  404b37:	jle    0x404b8b
  404b39:	aad    0xaf
  404b3b:	enter  0xa09e,0x20
  404b3f:	add    bh,cl
  404b41:	jnp    0x404aeb
  404b43:	inc    edx
  404b44:	pop    edx
  404b45:	xor    eax,0x43ce2bc1
  404b4a:	mov    esp,0x44bec62
  404b4f:	mov    BYTE PTR [ecx-0x2f],dh
  404b52:	(bad)
  404b55:	xlat   BYTE PTR ds:[ebx]
  404b56:	cmp    al,0xd6
  404b58:	dec    DWORD PTR [ebx]
  404b5a:	shl    ch,cl
  404b5c:	mov    bl,0x41
  404b5e:	add    esi,DWORD PTR ds:[esi+ebx*1]
  404b62:	das    
  404b63:	stos   DWORD PTR es:[edi],eax
  404b64:	retf   0x1efa
  404b67:	adc    DWORD PTR [edi+0x2d],0xffffffa1
  404b6b:	inc    edx
  404b6c:	adc    al,0x24
  404b6e:	imul   edi,DWORD PTR [ecx],0x31
  404b71:	in     al,0xf8
  404b73:	inc    ecx
  404b74:	jae    0x404b62
  404b76:	in     eax,dx
  404b77:	sbb    bh,ch
  404b79:	inc    edx
  404b7a:	outs   dx,DWORD PTR ds:[esi]
  404b7b:	add    eax,esi
  404b7d:	sub    DWORD PTR [ebp-0x48],edx
  404b80:	xlat   BYTE PTR ds:[ebx]
  404b81:	call   DWORD PTR [eax+edx*4]
  404b84:	ss test eax,0xf184b29c
  404b8a:	inc    ebx
  404b8b:	lahf   
  404b8c:	stc    
  404b8d:	out    0x3b,al
  404b8f:	ins    DWORD PTR es:[edi],dx
  404b90:	sbb    BYTE PTR [eax+ecx*4-0x56],al
  404b94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b95:	sbb    DWORD PTR ds:0xd0476f3b,esp
  404b9b:	shl    DWORD PTR [ecx+0x2b15af6e],0x98
  404ba2:	sbb    al,0xd6
  404ba4:	sub    DWORD PTR [ebx+0x67],esp
  404ba7:	ret    
  404ba8:	inc    edx
  404ba9:	xor    edi,DWORD PTR [ebx+0x72]
  404bac:	or     al,0x11
  404bae:	xor    ah,BYTE PTR [ebp-0x4d0b2cf4]
  404bb4:	cmc    
  404bb5:	stos   BYTE PTR es:[edi],al
  404bb6:	adc    DWORD PTR ds:0x3fb474b1,edi
  404bbc:	mov    ebp,0x3794cc8b
  404bc1:	mov    ebp,0x80052c84
  404bc6:	rcl    esi,cl
  404bc8:	dec    BYTE PTR [edi+0x1285e500]
  404bce:	jle    0x404b7b
  404bd0:	lods   eax,DWORD PTR ds:[esi]
  404bd1:	ss and eax,0x20341ea8
  404bd7:	adc    DWORD PTR [esi],0xffffffbe
  404bda:	push   0x70
  404bdc:	stos   DWORD PTR es:[edi],eax
  404bdd:	fsubr  DWORD PTR ds:0xf6d5cbb
  404be3:	mov    al,0xc4
  404be5:	sub    ebx,DWORD PTR ds:0xbed65871
  404beb:	pop    esp
  404bec:	mov    ds:0x8ed661e7,al
  404bf1:	adc    BYTE PTR [edi+0x1f],bh
  404bf4:	sub    eax,0xa5cae320
  404bf9:	pop    ebx
  404bfa:	je     0x404c72
  404bfc:	int3   
  404bfd:	(bad)  
  404bfe:	push   esi
  404bff:	pushf  
  404c00:	clc    
  404c01:	and    eax,0xc157c54c
  404c06:	sub    al,BYTE PTR [edi]
  404c08:	xchg   ebp,eax
  404c09:	mov    esp,0xad34a0f2
  404c0e:	imul   esp,DWORD PTR ss:[ebx-0x69],0x3ff5f6d0
  404c16:	enter  0x20cb,0x2a
  404c1a:	xchg   BYTE PTR [edx+0x75],al
  404c1d:	sub    al,0xcd
  404c1f:	cwde   
  404c20:	dec    ebx
  404c21:	xchg   esi,eax
  404c22:	js     0x404c9b
  404c24:	add    DWORD PTR [edx],0x13
  404c27:	mov    cl,0x69
  404c29:	imul   edi,esp,0x6a
  404c2c:	xor    BYTE PTR [ecx-0x6b],0x22
  404c30:	jecxz  0x404c12
  404c32:	(bad)  
  404c33:	(bad)  
  404c35:	adc    cl,al
  404c37:	test   DWORD PTR [edx+0x629d6224],edx
  404c3d:	push   es
  404c3e:	pop    esi
  404c3f:	fs add ax,0x3339
  404c44:	sub    esp,DWORD PTR [ecx+0x4c0a0215]
  404c4a:	in     al,dx
  404c4b:	leave  
  404c4c:	or     ebp,ecx
  404c4e:	inc    esp
  404c4f:	dec    ebp
  404c50:	in     eax,0xa8
  404c52:	fld    DWORD PTR ds:0x77baaf8d
  404c58:	add    eax,0xd28b990b
  404c5d:	int    0x18
  404c5f:	dec    esi
  404c60:	pushf  
  404c61:	ja     0x404c6d
  404c63:	dec    edi
  404c64:	call   0xd98a:0x4a2c11c4
  404c6b:	jo     0x404cbf
  404c6d:	add    ecx,DWORD PTR [ecx+0x4b]
  404c70:	mov    al,0x6
  404c72:	dec    ebp
  404c73:	ja     0x404cc2
  404c75:	mov    al,0x1c
  404c77:	mov    bh,0x5a
  404c79:	jp     0x404c81
  404c7b:	or     al,0x2a
  404c7d:	xchg   ebx,eax
  404c7e:	xor    ecx,0xb
  404c81:	outs   dx,BYTE PTR ds:[esi]
  404c82:	and    edi,DWORD PTR [edi-0x60]
  404c85:	ins    BYTE PTR es:[edi],dx
  404c86:	jb     0x404c30
  404c88:	mov    ch,BYTE PTR [ebx+0x7c]
  404c8b:	adc    eax,0x67e9d4c1
  404c90:	aas    
  404c91:	ss adc eax,0xe874832b
  404c97:	mov    al,0xa2
  404c99:	outs   dx,DWORD PTR ds:[esi]
  404c9a:	shr    ah,cl
  404c9c:	rep stos BYTE PTR es:[edi],al
  404c9e:	jns    0x404d04
  404ca0:	sub    eax,0x586351e0
  404ca5:	mov    dh,0xc8
  404ca7:	cmp    ebp,ecx
  404ca9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404caa:	adc    edx,eax
  404cac:	push   edi
  404cad:	add    BYTE PTR [ebx-0x3a],bh
  404cb0:	cmc    
  404cb1:	pop    edx
  404cb2:	test   eax,0xfb4e8e3f
  404cb7:	push   0xffffffcd
  404cb9:	outs   dx,DWORD PTR ds:[esi]
  404cba:	dec    ebp
  404cbb:	or     eax,0xdc635cf7
  404cc0:	shr    bl,1
  404cc2:	outs   dx,DWORD PTR ds:[esi]
  404cc3:	scas   eax,DWORD PTR es:[edi]
  404cc4:	(bad)  
  404cc5:	loop   0x404cf1
  404cc7:	retf   0x2344
  404cca:	sub    bh,BYTE PTR [esp+ebx*4+0x75]
  404cce:	std    
  404ccf:	outs   dx,DWORD PTR ds:[esi]
  404cd0:	sbb    eax,0x9288bbf7
  404cd5:	or     cl,BYTE PTR [edi+ecx*4+0x169cbbc4]
  404cdc:	sbb    eax,0xbbd4ee52
  404ce1:	add    bh,dl
  404ce3:	add    ah,bh
  404ce5:	fwait
  404ce6:	inc    eax
  404ce7:	ins    DWORD PTR es:[edi],dx
  404ce8:	and    bh,ch
  404cea:	cwde   
  404ceb:	mov    eax,0x5aded74e
  404cf0:	xchg   DWORD PTR [ebp-0x6c],eax
  404cf3:	mov    esp,0x7c52b2c8
  404cf8:	into   
  404cf9:	fs popa 
  404cfb:	sub    BYTE PTR [ecx-0x1e],al
  404cfe:	mov    edi,0xa7b9a1e
  404d03:	jbe    0x404d7c
  404d05:	in     al,dx
  404d06:	xchg   ebx,eax
  404d07:	add    al,0xc0
  404d09:	(bad)  [edx+0x66]
  404d0c:	dec    esi
  404d0d:	or     esi,edi
  404d0f:	(bad)  
  404d10:	fdiv   QWORD PTR [ecx-0x2e10b423]
  404d16:	xor    esp,DWORD PTR [eax+0x5a3697e8]
  404d1c:	add    bh,BYTE PTR [edx+0x7961ea37]
  404d22:	icebp  
  404d23:	icebp  
  404d24:	add    eax,DWORD PTR [esi+0x58f8c546]
  404d2a:	fidiv  DWORD PTR [edx]
  404d2c:	out    0x10,al
  404d2e:	fadd   st,st(5)
  404d30:	adc    ah,BYTE PTR [esi-0x5b13e086]
  404d36:	xor    BYTE PTR [ebp-0x1e],al
  404d39:	es jl  0x404cc6
  404d3c:	xchg   esp,eax
  404d3d:	ret    0x5878
  404d40:	pop    ecx
  404d41:	into   
  404d42:	add    DWORD PTR [eax-0x299b6261],ebp
  404d48:	mov    DWORD PTR [ebp+0x23a829e0],ebx
  404d4e:	jl     0x404d1c
  404d50:	clc    
  404d51:	sub    al,BYTE PTR [ecx-0xe]
  404d54:	adc    al,dh
  404d56:	pushf  
  404d57:	lods   eax,DWORD PTR ds:[esi]
  404d58:	adc    DWORD PTR [ecx+0x4e],esp
  404d5b:	jne    0x404d45
  404d5d:	jbe    0x404dd7
  404d5f:	cmp    al,0xa6
  404d61:	xchg   ebx,eax
  404d62:	test   al,0x58
  404d64:	jp     0x404d98
  404d66:	repnz add BYTE PTR [edx-0x22],dh
  404d6a:	ins    BYTE PTR es:[edi],dx
  404d6b:	xchg   ebp,eax
  404d6c:	rol    BYTE PTR [ebx-0x1a],1
  404d6f:	ja     0x404cfc
  404d71:	jp     0x404dc2
  404d73:	popa   
  404d74:	fucomi st,st(3)
  404d76:	push   esi
  404d77:	pop    edi
  404d78:	push   ss
  404d79:	pusha  
  404d7a:	pop    ss
  404d7b:	dec    esi
  404d7c:	cmp    DWORD PTR [edi-0x484d21a8],0x83a6b826
  404d86:	jge    0x404dad
  404d88:	push   0xaa757a07
  404d8d:	push   cs
  404d8e:	lods   eax,DWORD PTR ds:[esi]
  404d8f:	mov    ds:0xac694a44,eax
  404d94:	shr    BYTE PTR [edi+0x11],0x6e
  404d98:	fldenv [esi-0x39dd6d91]
  404d9e:	sahf   
  404d9f:	sub    DWORD PTR [esi+eiz*2],0x2d
  404da3:	fisubr WORD PTR [ebp-0x37]
  404da6:	(bad)  
  404da7:	adc    BYTE PTR [ecx-0x4a8e414a],ah
  404dad:	leave  
  404dae:	lea    ecx,[ebx]
  404db0:	fcomp  st(6)
  404db2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404db3:	cld    
  404db4:	retf   0xf9cc
  404db7:	or     esp,esi
  404db9:	xchg   ecx,eax
  404dba:	aad    0xd
  404dbc:	mov    edi,0xed0008bb
  404dc1:	lods   al,BYTE PTR ds:[si]
  404dc3:	pop    edi
  404dc4:	data16 fld TBYTE PTR [esi+eax*8]
  404dc8:	push   ebx
  404dc9:	push   eax
  404dca:	test   DWORD PTR [edx-0x67fcad34],esi
  404dd0:	pop    ecx
  404dd1:	jmp    FWORD PTR ds:0x1994d9f7
  404dd7:	repnz retf 
  404dd9:	dec    ebp
  404dda:	push   ebx
  404ddb:	and    cl,BYTE PTR [bp+si]
  404dde:	jae    0x404dc7
  404de0:	fist   DWORD PTR [ebx+0xf]
  404de3:	arpl   WORD PTR [edx+0x4f],cx
  404de6:	call   0x72f9fae5
  404deb:	jp     0x404e40
  404ded:	mov    ebp,0x863a3e4f
  404df2:	sbb    BYTE PTR [esi],dh
  404df4:	ret    0xa485
  404df7:	add    al,0x3f
  404df9:	dec    esi
  404dfa:	pusha  
  404dfb:	pop    esp
  404dfc:	imul   ebx,DWORD PTR [ebp+0x45fd82c6],0xffffffdb
  404e03:	sbb    BYTE PTR [ebx],0x5f
  404e06:	repz mov ecx,0x969d6291
  404e0c:	aam    0x6e
  404e0e:	pop    eax
  404e0f:	inc    edi
  404e10:	add    ch,BYTE PTR ds:0xd54989c9
  404e16:	sbb    bl,BYTE PTR [ecx]
  404e18:	jp     0x404e30
  404e1a:	fcom   QWORD PTR [edx]
  404e1c:	sub    eax,0x70051686
  404e21:	dec    ebx
  404e22:	push   0xa8de937c
  404e27:	shl    ch,cl
  404e29:	pop    es
  404e2a:	into   
  404e2b:	cmp    DWORD PTR ds:0xa1f779bc,0x8
  404e32:	ja     0x404ded
  404e34:	retf   
  404e35:	adc    eax,0xd8d3f7d3
  404e3a:	add    esp,edi
  404e3c:	add    ebx,esp
  404e3e:	lods   eax,DWORD PTR ds:[esi]
  404e3f:	lock lock jg 0x404e4a
  404e43:	sbb    ecx,DWORD PTR [edx-0x12ece544]
  404e49:	mov    ecx,0x35eb9137
  404e4e:	xor    eax,0xa4bda21
  404e53:	adc    BYTE PTR [ecx-0x292b08a4],bh
  404e59:	popf   
  404e5a:	jl     0x404e73
  404e5c:	lods   al,BYTE PTR ss:[esi]
  404e5e:	call   0x42ff8ea1
  404e63:	sub    al,0x96
  404e65:	fcom   QWORD PTR [ecx+0x40224fb2]
  404e6b:	in     al,dx
  404e6c:	sbb    al,0x4e
  404e6e:	add    esp,eax
  404e70:	fistp  QWORD PTR [edi+ebx*4-0x1f]
  404e74:	pop    ebp
  404e75:	xchg   edx,eax
  404e76:	or     al,0x9a
  404e78:	(bad)  
  404e79:	out    dx,al
  404e7a:	lods   al,BYTE PTR ds:[esi]
  404e7b:	call   0x6be4:0xb45e79e6
  404e82:	and    eax,0x43c7254e
  404e87:	imul   esi,DWORD PTR [esi+esi*1+0x260f8615],0xe20447b
  404e92:	cmp    ch,BYTE PTR [edi-0x30]
  404e95:	sub    BYTE PTR [edi],dl
  404e97:	cwde   
  404e98:	push   edi
  404e99:	lahf   
  404e9a:	fiadd  DWORD PTR [esi+0x18]
  404e9d:	jmp    0x404edb
  404e9f:	nop
  404ea0:	dec    ecx
  404ea1:	popf   
  404ea2:	std    
  404ea3:	rol    bl,cl
  404ea5:	push   edx
  404ea6:	outs   dx,DWORD PTR ds:[esi]
  404ea7:	mov    eax,0x86ac990f
  404eac:	or     DWORD PTR [ebx+edx*1-0x5a],edx
  404eb0:	mov    WORD PTR [ebx+0x4f],es
  404eb3:	mov    ebp,0x61a9c68
  404eb8:	jnp    0x404e84
  404eba:	lods   eax,DWORD PTR ds:[esi]
  404ebb:	jp     0x404e82
  404ebd:	scas   eax,DWORD PTR es:[edi]
  404ebe:	les    edx,FWORD PTR [esi-0x58]
  404ec1:	fsub   st,st(4)
  404ec3:	sahf   
  404ec4:	jge    0x404f1c
  404ec6:	mov    ebp,0x8ff2da2
  404ecb:	xchg   ebp,eax
  404ecc:	mov    ecx,0x42aebfc3
  404ed1:	lahf   
  404ed2:	div    DWORD PTR [edx+0x53a330bf]
  404ed8:	popa   
  404ed9:	mov    bl,0xd9
  404edb:	pusha  
  404edc:	mov    eax,ds:0x859382c6
  404ee1:	xor    al,BYTE PTR [esi]
  404ee3:	inc    ecx
  404ee4:	mov    dl,0x5c
  404ee6:	adc    cl,dh
  404ee8:	fs or  eax,0x65fd8721
  404eee:	(bad)  
  404eef:	fisttp QWORD PTR [eax+0x71]
  404ef2:	fimul  DWORD PTR [edx+eax*4-0x31]
  404ef6:	inc    ebx
  404ef7:	mov    fs,WORD PTR [eax+0x7667d850]
  404efd:	push   ds
  404efe:	sub    BYTE PTR [ebp-0x5eabf5de],dh
  404f04:	enter  0xb618,0xde
  404f08:	stc    
  404f09:	pop    esi
  404f0a:	mov    dh,0x9b
  404f0c:	cmp    ebp,edx
  404f0e:	pop    ebp
  404f0f:	mov    bh,0xc8
  404f11:	sbb    DWORD PTR [ebx-0x64],eax
  404f14:	sbb    BYTE PTR [ebp-0x5e],0x75
  404f18:	xor    DWORD PTR [ebp+eax*4-0x66],edi
  404f1c:	mov    al,ds:0x129ac732
  404f21:	sub    esp,ecx
  404f23:	stos   DWORD PTR es:[edi],eax
  404f24:	sub    bl,BYTE PTR [esi-0x56]
  404f27:	cmp    al,0x6e
  404f29:	in     eax,dx
  404f2a:	mov    ah,0x80
  404f2c:	adc    bh,dl
  404f2e:	and    al,BYTE PTR [edx+0x3]
  404f31:	enter  0xa478,0x45
  404f35:	add    DWORD PTR [edx-0x13],edx
  404f38:	xor    al,0x54
  404f3a:	cmp    esp,DWORD PTR [ecx]
  404f3c:	add    al,0x83
  404f3e:	jo     0x404ef4
  404f40:	or     eax,0xee70a8e4
  404f45:	or     al,0x45
  404f47:	dec    ebp
  404f48:	stos   DWORD PTR es:[edi],eax
  404f49:	rcr    ecx,0xf5
  404f4c:	mov    al,ds:0x826136a0
  404f51:	cmp    dl,BYTE PTR [ebx]
  404f53:	push   0xfffffff4
  404f55:	xor    esp,DWORD PTR [esi+0x6c2d6728]
  404f5b:	adc    eax,0xae2dc966
  404f60:	jns    0x404f8b
  404f62:	scas   al,BYTE PTR es:[edi]
  404f63:	mov    al,ds:0xec376279
  404f68:	jae    0x404fe1
  404f6a:	sbb    al,0xc3
  404f6c:	xchg   esi,eax
  404f6d:	sar    DWORD PTR ds:0x6841a4c4,0x86
  404f74:	sbb    esp,ebp
  404f76:	mov    BYTE PTR [ebp-0x55],ah
  404f79:	cmp    dh,BYTE PTR [esi-0x2d]
  404f7c:	or     eax,0xf1481159
  404f81:	inc    ecx
  404f82:	sub    DWORD PTR [edx+eiz*8],edi
  404f85:	adc    esi,DWORD PTR [eax]
  404f87:	test   DWORD PTR [ecx+0x51255cb0],edx
  404f8d:	add    esp,0x78
  404f90:	pop    eax
  404f91:	xor    esp,DWORD PTR [ebp-0x227fc19b]
  404f97:	mov    edx,0x9b9b6e3c
  404f9c:	xchg   ecx,eax
  404f9d:	push   ebp
  404f9e:	out    dx,eax
  404f9f:	out    dx,al
  404fa0:	fild   DWORD PTR [edi-0x403846de]
  404fa6:	dec    ecx
  404fa7:	leave  
  404fa8:	pop    eax
  404fa9:	mov    gs,WORD PTR [edx-0x38]
  404fac:	pop    esp
  404fad:	mov    ebp,0xb17a1f53
  404fb2:	mov    eax,0xed53393e
  404fb7:	mov    ch,0x3a
  404fb9:	jbe    0x404f89
  404fbb:	push   0xa
  404fbd:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  404fbf:	js     0x40502a
  404fc1:	push   ebp
  404fc2:	push   0xffffffb5
  404fc4:	out    0x4d,eax
  404fc6:	sbb    al,0xb5
  404fc8:	jae    0x404fa8
  404fca:	cli    
  404fcb:	and    al,0x9f
  404fcd:	inc    eax
  404fce:	call   DWORD PTR [esi+0x578ffc99]
  404fd4:	cmp    DWORD PTR [ecx-0x55],ecx
  404fd7:	pop    edx
  404fd8:	sub    bh,BYTE PTR [edx+0x5f]
  404fdb:	out    dx,al
  404fdc:	pushf  
  404fdd:	les    eax,FWORD PTR [ecx]
  404fdf:	push   ecx
  404fe0:	sub    eax,0xfbae4c4c
  404fe5:	sbb    edx,DWORD PTR [edx+0x339c3cd5]
  404feb:	in     al,dx
  404fec:	pop    es
  404fed:	push   ds
  404fee:	in     al,0x81
  404ff0:	and    BYTE PTR [ecx+0x472b440d],dh
  404ff6:	mov    bh,0x5
  404ff8:	ss xchg ebp,eax
  404ffa:	mov    ebx,DWORD PTR [eax-0x1d]
  404ffd:	addr16 in al,0x35
  405000:	aam    0x15
  405002:	xlat   BYTE PTR ds:[ebx]
  405003:	aam    0x6f
  405005:	sbb    esp,DWORD PTR [ebx-0x7]
  405008:	cmc    
  405009:	inc    esp
  40500a:	xor    al,0x6b
  40500c:	push   ecx
  40500e:	dec    esi
  40500f:	(bad)  
  405010:	xchg   ecx,eax
  405011:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405012:	pop    ecx
  405013:	in     eax,dx
  405014:	jns    0x40500d
  405016:	(bad)  
  405017:	mov    DWORD PTR [ecx+0x239170b3],ecx
  40501d:	adc    al,0x95
  40501f:	sub    DWORD PTR [edi+0x6a944edd],esp
  405025:	dec    esp
  405026:	adc    BYTE PTR [edx-0x1e3a6297],dh
  40502c:	cli    
  40502d:	outs   dx,BYTE PTR ds:[esi]
  40502e:	lds    esp,FWORD PTR [edx]
  405030:	fdivr  st,st(5)
  405032:	push   ecx
  405033:	xor    ecx,DWORD PTR [ecx-0x4e]
  405036:	pop    ebx
  405037:	push   eax
  405038:	push   0x3b
  40503a:	enter  0x840f,0x4a
  40503e:	add    al,BYTE PTR [eax]
  405040:	add    BYTE PTR [ecx+0x42b01805],al
  405046:	add    BYTE PTR [eax],cl
  405048:	rol    BYTE PTR [edx+0x0],0xff
  40504c:	jne    0x40503a
  40504e:	xor    DWORD PTR ds:0x42b00c,0x3dbe
  405058:	push   DWORD PTR [ebp+0x8]
  40505b:	call   0x40c78f
  405060:	sbb    ecx,0x6495
  405066:	mov    DWORD PTR [ebp-0x14],eax
  405069:	or     DWORD PTR ds:0x42901c,ebx
  40506f:	mov    eax,DWORD PTR [ebp-0x4]
  405072:	mov    ecx,DWORD PTR [ebp-0x14]
  405075:	adc    DWORD PTR ds:0x42d00c,0x15e5
  40507f:	xor    eax,esi
  405081:	add    eax,edi
  405083:	mov    DWORD PTR ds:0x42b004,0x7edf
  40508d:	cmp    ecx,eax
  40508f:	mov    DWORD PTR ds:0x42d014,0x1e10
  405099:	je     0x40528b
  40509f:	mov    eax,DWORD PTR [ebp-0x14]
  4050a2:	mov    ecx,DWORD PTR ds:0x429010
  4050a8:	sbb    DWORD PTR ds:0x42c00c,ecx
  4050ae:	mov    eax,DWORD PTR [eax+0x18]
  4050b1:	mov    DWORD PTR [ebp-0x2c],eax
  4050b4:	add    ecx,ecx
  4050b6:	mov    eax,DWORD PTR [ebp-0x14]
  4050b9:	sbb    DWORD PTR ds:0x42c01c,0x4c1
  4050c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4050c6:	xor    DWORD PTR ds:0x42b000,0x3fa3
  4050d0:	add    ecx,DWORD PTR [eax+0x20]
  4050d3:	xor    eax,0x40df
  4050d8:	mov    DWORD PTR [ebp-0x34],ecx
  4050db:	or     ecx,eax
  4050dd:	mov    eax,DWORD PTR [ebp-0x14]
  4050e0:	xor    DWORD PTR ds:0x429008,ecx
  4050e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4050e9:	and    DWORD PTR ds:0x42a008,0x42d014
  4050f3:	add    ecx,DWORD PTR [eax+0x24]
  4050f6:	mov    DWORD PTR [ebp-0x3c],ecx
  4050f9:	movzx  eax,BYTE PTR ds:0x42c000
  405100:	sbb    DWORD PTR ds:0x429010,eax
  405106:	mov    eax,DWORD PTR [ebp-0x14]
  405109:	mov    DWORD PTR ds:0x42d004,0x14
  405113:	cmp    DWORD PTR ds:0x42d004,0x0
  40511a:	je     0x405176
  405120:	cmp    DWORD PTR ds:0x42d004,0x9
  405127:	jne    0x405142
  40512d:	push   0x42e0f9
  405132:	push   0x42e0c7
  405137:	push   0x400000
  40513c:	call   DWORD PTR ds:0x42e9c7
  405142:	cmp    DWORD PTR ds:0x42d004,0xa
  405149:	jne    0x40515c
  40514f:	mov    ecx,DWORD PTR ds:0x42d004
  405155:	dec    ecx
  405156:	mov    DWORD PTR ds:0x42d004,ecx
  40515c:	xor    ecx,ecx
  40515e:	or     ecx,DWORD PTR ds:0x42d004
  405164:	dec    ecx
  405165:	mov    DWORD PTR ds:0x42d004,ecx
  40516b:	jmp    0x405113
  405170:	inc    DWORD PTR ds:0x42b00c
  405176:	mov    ecx,DWORD PTR [ebp+0x8]
  405179:	add    ecx,DWORD PTR [eax+0x1c]
  40517c:	mov    DWORD PTR [ebp-0x14],ecx
  40517f:	jmp    0x405253
  405184:	sub    DWORD PTR ds:0x42c018,ebx
  40518a:	mov    eax,DWORD PTR [ebp-0x34]
  40518d:	mov    ecx,DWORD PTR [ebp+0x8]
  405190:	sbb    DWORD PTR ds:0x42a014,0x429000
  40519a:	add    ecx,DWORD PTR [eax+ebx*4]
  40519d:	and    DWORD PTR ds:0x42d00c,0x0
  4051a7:	jmp    0x4051b7
  4051ac:	mov    eax,ds:0x42d00c
  4051b1:	inc    eax
  4051b2:	mov    ds:0x42d00c,eax
  4051b7:	cmp    DWORD PTR ds:0x42d00c,0x1b
  4051be:	jae    0x405206
  4051c4:	cmp    DWORD PTR ds:0x42d00c,0xd
  4051cb:	jne    0x4051dc
  4051d1:	push   0x42e0b3
  4051d6:	call   DWORD PTR ds:0x42e9cb
  4051dc:	cmp    DWORD PTR ds:0x42d00c,0xc
  4051e3:	jne    0x4051f7
  4051e9:	xor    eax,eax
  4051eb:	xor    eax,DWORD PTR ds:0x42d00c
  4051f1:	inc    eax
  4051f2:	mov    ds:0x42d00c,eax
  4051f7:	jmp    0x4051ac
  4051fc:	xor    DWORD PTR ds:0x42b010,0x429024
  405206:	mov    DWORD PTR [ebp-0x30],ecx
  405209:	mov    eax,DWORD PTR [ebp-0x4]
  40520c:	mov    ecx,DWORD PTR [ebp-0x30]
  40520f:	xor    eax,esi
  405211:	add    eax,edi
  405213:	cmp    ecx,eax
  405215:	je     0x405253
  40521b:	jmp    0x405244
  405220:	mov    eax,DWORD PTR [ebp-0x4]
  405223:	mov    ecx,DWORD PTR [ebp-0x8]
  405226:	xor    eax,esi
  405228:	add    eax,edi
  40522a:	cmp    ecx,eax
  40522c:	mov    eax,DWORD PTR [ebp-0x4]
  40522f:	je     0x40528e
  405235:	mov    ecx,DWORD PTR [ebp-0x38]
  405238:	xor    eax,esi
  40523a:	add    eax,edi
  40523c:	cmp    ecx,eax
  40523e:	je     0x405297
  405244:	lea    eax,[ebp-0x8]
  405247:	push   eax
  405248:	push   DWORD PTR [ebp-0x30]
  40524b:	push   DWORD PTR [ebp+0xc]
  40524e:	call   0x40ca0a
  405253:	mov    eax,DWORD PTR [ebp-0x4]
  405256:	mov    ecx,DWORD PTR [ebp-0x8]
  405259:	xor    eax,esi
  40525b:	add    eax,edi
  40525d:	cmp    ecx,eax
  40525f:	je     0x40527a
  405265:	mov    eax,DWORD PTR [ebp-0x3c]
  405268:	movzx  eax,WORD PTR [eax+ebx*2]
  40526c:	mov    ecx,DWORD PTR [ebp-0x14]
  40526f:	mov    eax,DWORD PTR [ecx+eax*4]
  405272:	mov    DWORD PTR [ebp-0x40],eax
  405275:	jmp    0x405220
  40527a:	mov    eax,DWORD PTR [ebp-0xc]
  40527d:	xor    eax,esi
  40527f:	lea    ebx,[ebx+eax*1+0x3272e0]
  405286:	jmp    0x402be0
  40528b:	mov    eax,DWORD PTR [ebp-0x4]
  40528e:	xor    eax,esi
  405290:	add    eax,edi
  405292:	jmp    0x4053b4
  405297:	mov    eax,DWORD PTR [ebp-0x40]
  40529a:	add    eax,DWORD PTR [ebp+0x8]
  40529d:	mov    DWORD PTR [ebp-0x18],eax
  4052a0:	mov    eax,DWORD PTR [ebp-0x1c]
  4052a3:	test   eax,eax
  4052a5:	je     0x40533f
  4052ab:	mov    DWORD PTR [ebp-0x28],0x0
  4052b2:	push   0x3
  4052b4:	xor    edx,edx
  4052b6:	pop    edx
  4052b7:	add    edx,0x8
  4052ba:	push   edx
  4052bb:	pop    ecx
  4052bc:	push   0x6
  4052be:	dec    ecx
  4052bf:	pop    ebx
  4052c0:	dec    ebx
  4052c1:	xchg   ebx,ecx
  4052c3:	sub    ebx,ecx
  4052c5:	xchg   ebx,ecx
  4052c7:	dec    ecx
  4052c8:	mov    eax,DWORD PTR [ebp-0x1c]
  4052cb:	imul   eax,ecx
  4052ce:	sub    esp,eax
  4052d0:	mov    DWORD PTR [ebp-0x28],esp
  4052d3:	mov    eax,DWORD PTR [ebp-0x4]
  4052d6:	xor    eax,esi
  4052d8:	add    eax,edi
  4052da:	jmp    0x405318
  4052df:	mov    ecx,DWORD PTR [ebp-0xc]
  4052e2:	mov    eax,DWORD PTR [ebp+0x8]
  4052e5:	mov    edx,DWORD PTR [ebp+0x14]
  4052e8:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052ec:	xor    ecx,esi
  4052ee:	add    ecx,edi
  4052f0:	xor    edx,edx
  4052f2:	div    ecx
  4052f4:	mov    ecx,DWORD PTR [ebp-0x4]
  4052f7:	xor    ecx,esi
  4052f9:	lea    eax,[ecx+eax*1+0x3272e0]
  405300:	mov    ecx,DWORD PTR [ebp+0x8]
  405303:	mov    edx,DWORD PTR [ebp-0x28]
  405306:	mov    DWORD PTR [edx+ecx*4],eax
  405309:	mov    eax,DWORD PTR [ebp-0xc]
  40530c:	mov    ecx,DWORD PTR [ebp+0x8]
  40530f:	xor    eax,esi
  405311:	lea    eax,[eax+ecx*1+0x3272e0]
  405318:	mov    DWORD PTR [ebp+0x8],eax
  40531b:	mov    eax,DWORD PTR [ebp-0xc]
  40531e:	mov    ecx,DWORD PTR [ebp+0x14]
  405321:	xor    eax,esi
  405323:	add    eax,edi
  405325:	imul   eax,DWORD PTR [ecx]
  405328:	mov    ecx,DWORD PTR [ebp-0x4]
  40532b:	mov    edx,DWORD PTR [ebp+0x8]
  40532e:	xor    ecx,esi
  405330:	lea    ecx,[ecx+edx*1+0x3272e0]
  405337:	cmp    ecx,eax
  405339:	jne    0x4052df
  40533f:	mov    eax,DWORD PTR [ebp-0x4]
  405342:	xor    eax,esi
  405344:	add    eax,edi
  405346:	mov    DWORD PTR [ebp-0x10],eax
  405349:	mov    ebx,0x65655
  40534e:	add    ebx,0x3234
  405354:	xchg   ebx,esi
  405356:	xor    ebx,ebx
  405358:	push   esi
  405359:	mov    esi,ebx
  40535b:	pop    ebx
  40535c:	mov    edx,esi
  40535e:	add    ebx,0x1002
  405364:	lea    eax,[ebp-0x18]
  405367:	add    edx,eax
  405369:	add    edx,0x5
  40536c:	push   edx
  40536d:	inc    esi
  40536e:	pop    ecx
  40536f:	dec    ecx
  405370:	xchg   ecx,eax
  405371:	dec    eax
  405372:	xchg   ecx,eax
  405373:	dec    ecx
  405374:	xchg   ecx,edx
  405376:	dec    edx
  405377:	push   edx
  405378:	mov    edx,ebx
  40537a:	pop    ebx
  40537b:	dec    ebx
  40537c:	call   DWORD PTR [ebx]
  40537e:	cmp    DWORD PTR [ebp+0x10],esi
  405381:	je     0x4053a0
  405387:	xchg   edx,eax
  405388:	push   0xb
  40538a:	pop    ecx
  40538b:	push   0x4
  40538d:	pop    ebx
  40538e:	inc    ebx
  40538f:	xchg   ebx,ecx
  405391:	sub    ebx,ecx
  405393:	xchg   ebx,ecx
  405395:	dec    ecx
  405396:	dec    ecx
  405397:	mov    eax,DWORD PTR [ebp-0x1c]
  40539a:	imul   eax,ecx
  40539d:	add    esp,eax
  40539f:	xchg   edx,eax
  4053a0:	push   eax
  4053a1:	xor    ebx,ebx
  4053a3:	mov    edx,esp
  4053a5:	dec    edx
  4053a6:	inc    ebx
  4053a7:	add    ebx,DWORD PTR [edx+ebx*1]
  4053aa:	dec    ebx
  4053ab:	xor    edx,edx
  4053ad:	add    DWORD PTR [ebp-0x10],ebx
  4053b0:	pop    ebx
  4053b1:	mov    eax,DWORD PTR [ebp-0x10]
  4053b4:	pop    edi
  4053b5:	pop    esi
  4053b6:	pop    ebx
  4053b7:	leave  
  4053b8:	ret    0x10
  4053bb:	push   ebp
  4053bc:	mov    ebp,esp
  4053be:	sub    esp,0x7c
  4053c1:	mov    eax,ds:0x42a000
  4053c6:	xor    eax,DWORD PTR ds:0x42c014
  4053cc:	mov    ds:0x42a000,eax
  4053d1:	push   esi
  4053d2:	and    DWORD PTR ds:0x42a004,0x0
  4053dc:	jmp    0x4053f0
  4053e1:	xor    esi,esi
  4053e3:	or     esi,DWORD PTR ds:0x42a004
  4053e9:	inc    esi
  4053ea:	mov    DWORD PTR ds:0x42a004,esi
  4053f0:	cmp    DWORD PTR ds:0x42a004,0x18
  4053f7:	jae    0x4054e8
  4053fd:	cmp    DWORD PTR ds:0x42a004,0x6
  405404:	jne    0x405415
  40540a:	push   0x429028
  40540f:	call   DWORD PTR ds:0x42e9d3
  405415:	cmp    DWORD PTR ds:0x42a004,0x5
  40541c:	jne    0x405431
  405422:	xor    esi,esi
  405424:	or     esi,DWORD PTR ds:0x42a004
  40542a:	inc    esi
  40542b:	mov    DWORD PTR ds:0x42a004,esi
  405431:	jmp    0x4053e1
  405436:	and    DWORD PTR ds:0x42a014,0x0
  405440:	jmp    0x405454
  405445:	xor    esi,esi
  405447:	or     esi,DWORD PTR ds:0x42a014
  40544d:	inc    esi
  40544e:	mov    DWORD PTR ds:0x42a014,esi
  405454:	cmp    DWORD PTR ds:0x42a014,0x19
  40545b:	jae    0x4054e8
  405461:	cmp    DWORD PTR ds:0x42a014,0xf
  405468:	jne    0x405483
  40546e:	push   0x42d01c
  405473:	push   0x42a00c
  405478:	push   0x42d010
  40547d:	call   DWORD PTR ds:0x42e993
  405483:	cmp    DWORD PTR ds:0x42a014,0xe
  40548a:	jne    0x40549d
  405490:	mov    esi,DWORD PTR ds:0x42a014
  405496:	inc    esi
  405497:	mov    DWORD PTR ds:0x42a014,esi
  40549d:	jmp    0x405445
  4054a2:	mov    DWORD PTR ds:0x42c010,0x19
  4054ac:	cmp    DWORD PTR ds:0x42c010,0x0
  4054b3:	je     0x4054e8
  4054b9:	cmp    DWORD PTR ds:0x42c010,0x1e
  4054c0:	jne    0x4054d6
  4054c6:	push   0x0
  4054c8:	push   0x13e0
  4054cd:	push   DWORD PTR [ebp-0x14]
  4054d0:	call   DWORD PTR ds:0x42e997
  4054d6:	mov    esi,DWORD PTR ds:0x42c010
  4054dc:	dec    esi
  4054dd:	mov    DWORD PTR ds:0x42c010,esi
  4054e3:	jmp    0x4054ac
  4054e8:	push   edi
  4054e9:	adc    DWORD PTR ds:0x42901c,edx
  4054ef:	mov    eax,ds:0x42e313
  4054f4:	mov    esi,DWORD PTR ds:0x42c01c
  4054fa:	and    DWORD PTR ds:0x42a00c,esi
  405500:	mov    DWORD PTR [ebp-0x24],eax
  405503:	mov    eax,ds:0x42e41f
  405508:	mov    DWORD PTR [ebp-0x34],eax
  40550b:	mov    DWORD PTR ds:0x42b008,0x1b
  405515:	cmp    DWORD PTR ds:0x42b008,0x0
  40551c:	je     0x405564
  405522:	cmp    DWORD PTR ds:0x42b008,0x26
  405529:	jne    0x405554
  40552f:	push   0x5039
  405534:	push   DWORD PTR [ebp-0x20]
  405537:	push   0x42d010
  40553c:	push   0x88e6
  405541:	push   DWORD PTR [ebp-0x10]
  405544:	push   0x8f04
  405549:	push   0x8b34
  40554e:	call   DWORD PTR ds:0x42e99f
  405554:	mov    eax,ds:0x42b008
  405559:	dec    eax
  40555a:	mov    ds:0x42b008,eax
  40555f:	jmp    0x405515
  405564:	and    DWORD PTR [ebp-0x30],0x0
  405568:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  40556f:	add    eax,eax
  405571:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  405578:	add    DWORD PTR ds:0x42c014,edi
  40557e:	mov    eax,DWORD PTR [ebp-0x10]
  405581:	and    DWORD PTR ds:0x42d014,0x0
  40558b:	mov    esi,DWORD PTR ds:0x42d014
  405591:	inc    esi
  405592:	mov    DWORD PTR ds:0x42d014,esi
  405598:	cmp    DWORD PTR ds:0x42d014,0x5
  40559f:	jne    0x4055c0
  4055a5:	push   0x42c004
  4055aa:	push   DWORD PTR [ebp-0x20]
  4055ad:	push   0x42e0c7
  4055b2:	push   DWORD PTR [ebp-0x24]
  4055b5:	push   0x31c8
  4055ba:	call   DWORD PTR ds:0x42e9a3
  4055c0:	cmp    DWORD PTR ds:0x42d014,0x4
  4055c7:	jne    0x4055dc
  4055cd:	xor    esi,esi
  4055cf:	xor    esi,DWORD PTR ds:0x42d014
  4055d5:	inc    esi
  4055d6:	mov    DWORD PTR ds:0x42d014,esi
  4055dc:	cmp    DWORD PTR ds:0x42d014,0x1c
  4055e3:	jb     0x40558b
  4055e9:	and    DWORD PTR ds:0x42c004,0x0
  4055f3:	xor    ecx,ecx
  4055f5:	xor    ecx,DWORD PTR ds:0x42c004
  4055fb:	inc    ecx
  4055fc:	mov    DWORD PTR ds:0x42c004,ecx
  405602:	cmp    DWORD PTR ds:0x42c004,0x28
  405609:	jne    0x40561a
  40560f:	push   0x42d010
  405614:	call   DWORD PTR ds:0x42e9ab
  40561a:	cmp    DWORD PTR ds:0x42c004,0x18
  405621:	jb     0x4055f3
  405627:	and    DWORD PTR ds:0x42c018,edx
  40562d:	mov    ecx,DWORD PTR [ebp-0x10]
  405630:	sub    eax,ecx
  405632:	mov    DWORD PTR [ebp-0x10],eax
  405635:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  40563c:	mov    eax,DWORD PTR [ebp-0x18]
  40563f:	mov    ecx,DWORD PTR [ebp-0x18]
  405642:	sub    eax,ecx
  405644:	mov    DWORD PTR [ebp-0x18],eax
  405647:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  40564e:	jmp    0x4079f8
  405653:	neg    DWORD PTR [edi+0x51]
  405656:	pop    ds
  405657:	adc    edi,esi
  405659:	div    DWORD PTR [edi]
  40565b:	jge    0x40560a
  40565d:	aam    0xe9
  40565f:	sti    
  405660:	xor    ecx,ecx
  405662:	clc    
  405663:	xor    BYTE PTR [edi+0x7a],bl
  405666:	jp     0x40564d
  405668:	pop    edi
  405669:	jp     0x4056e5
  40566b:	mov    ebp,0x1af66a7d
  405670:	inc    edx
  405671:	sbb    dl,bh
  405673:	nop
  405674:	xchg   DWORD PTR [edi+ebx*8],eax
  405677:	fsub   st(2),st
  405679:	pop    ss
  40567a:	dec    ebx
  40567b:	ror    DWORD PTR [ebx],1
  40567d:	mov    al,ds:0xf3b55903
  405682:	icebp  
  405683:	fstp   st(3)
  405685:	scas   al,BYTE PTR es:[edi]
  405686:	test   DWORD PTR [ebp+0x43d70c3b],0x5fc0501f
  405690:	xor    al,0x38
  405692:	cmp    ah,bl
  405694:	mov    ds,WORD PTR ss:[ebp-0x25]
  405698:	push   ecx
  405699:	inc    esp
  40569a:	les    eax,FWORD PTR [edi+ebp*2-0x45]
  40569e:	dec    ecx
  40569f:	cmp    dh,BYTE PTR [ebx+0x451faa]
  4056a5:	pop    ebp
  4056a6:	les    edx,FWORD PTR [edx-0x8]
  4056a9:	cwde   
  4056aa:	(bad)  
  4056ab:	in     al,dx
  4056ac:	mov    ch,0xad
  4056ae:	jb     0x4056d8
  4056b0:	xchg   ebx,eax
  4056b1:	mov    bh,0xc6
  4056b3:	leave  
  4056b4:	stos   BYTE PTR es:[edi],al
  4056b5:	add    BYTE PTR [ebp+0x4d],0xf9
  4056b9:	sbb    bl,BYTE PTR [edx+0x18]
  4056bc:	jg     0x4056eb
  4056be:	xchg   ecx,eax
  4056bf:	pop    esp
  4056c0:	xor    DWORD PTR [edx-0x753d1489],ecx
  4056c6:	xchg   ecx,eax
  4056c7:	mov    DWORD PTR [edx+0xadc4994],ecx
  4056cd:	(bad)  [eax]
  4056cf:	sbb    DWORD PTR [edi-0x7d],0xa7fdbc4b
  4056d6:	in     al,dx
  4056d7:	fcomp  QWORD PTR [ecx-0x25]
  4056da:	push   0x7a7f340b
  4056df:	ja     0x4056a4
  4056e1:	mov    bh,0xbb
  4056e3:	rcl    DWORD PTR [eax],0x45
  4056e6:	gs inc esi
  4056e8:	sbb    eax,0xf79525aa
  4056ed:	push   ds
  4056ee:	mov    bl,0x69
  4056f0:	mov    ds:0xe50dc931,eax
  4056f5:	(bad)  
  4056f6:	sti    
  4056f7:	or     al,0xa6
  4056f9:	sbb    esi,DWORD PTR [edi-0x6c]
  4056fc:	ret    0x9b64
  4056ff:	xor    eax,0xb5831039
  405704:	test   DWORD PTR [edi-0x7228b775],edx
  40570a:	nop
  40570b:	rcl    BYTE PTR [eax],cl
  40570d:	popf   
  40570e:	in     al,dx
  40570f:	jno    0x405771
  405711:	mov    ecx,0xc0dd26cf
  405716:	mov    dl,BYTE PTR [ebx+eax*4]
  405719:	sub    eax,0x2558d74d
  40571e:	retf   
  40571f:	rcl    BYTE PTR [ecx+0x3d],0x0
  405723:	or     bh,BYTE PTR [edx+0x478a76d2]
  405729:	pusha  
  40572a:	add    al,0xd0
  40572c:	ficomp WORD PTR [ecx]
  40572e:	out    0xcb,eax
  405730:	mov    dh,0xb0
  405732:	iret   
  405733:	pushf  
  405734:	xchg   ebx,eax
  405735:	leave  
  405736:	dec    ebx
  405737:	dec    ecx
  405738:	inc    esi
  405739:	cmp    ebx,DWORD PTR [ecx-0x61]
  40573c:	cli    
  40573d:	xchg   ecx,eax
  40573e:	push   edx
  40573f:	mov    eax,0x81bcfd2b
  405744:	adc    eax,ebx
  405746:	and    al,0x7d
  405748:	(bad)  
  405749:	sti    
  40574a:	pop    esi
  40574b:	jmp    0xbd4fd401
  405750:	out    dx,al
  405751:	jmp    0xe151:0xca4164a8
  405758:	jae    0x4056e8
  40575a:	rol    BYTE PTR [edi+0x5b],0x95
  40575e:	pop    ecx
  40575f:	dec    esi
  405760:	aam    0x42
  405762:	sub    al,0x9d
  405764:	jo     0x4057db
  405766:	xchg   ecx,eax
  405767:	push   edi
  405768:	aas    
  405769:	test   al,0x63
  40576b:	pop    edx
  40576c:	das    
  40576d:	scas   eax,DWORD PTR es:[edi]
  40576e:	jns    0x4057d3
  405770:	mov    esp,DWORD PTR [ebp-0x58048583]
  405776:	lds    ebp,FWORD PTR [ebx]
  405778:	mov    bh,BYTE PTR [eax]
  40577a:	jno    0x405741
  40577c:	test   BYTE PTR [eax-0x4a],bl
  40577f:	mov    bl,bl
  405781:	gs jnp 0x4057a6
  405784:	pop    ds
  405785:	and    BYTE PTR [ebx+0x19],bl
  405788:	and    BYTE PTR [ecx],ch
  40578a:	mov    ds:0xe499c780,al
  40578f:	in     eax,dx
  405790:	push   edx
  405791:	rcr    DWORD PTR [ebp+0x5b],1
  405794:	add    dl,ah
  405796:	js     0x405792
  405798:	aaa    
  405799:	in     al,dx
  40579a:	add    eax,0x49217cf0
  40579f:	hlt    
  4057a0:	(bad)  
  4057a2:	je     0x40572d
  4057a4:	adc    BYTE PTR [ebx+0x7d],bh
  4057a7:	imul   eax,DWORD PTR [edx+0x66],0xeff75936
  4057ae:	xor    ebx,DWORD PTR [esi+ecx*8+0x6a]
  4057b2:	push   ds
  4057b3:	xor    esi,DWORD PTR ds:0x16e9a43f
  4057b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057ba:	push   0xf16dce8d
  4057bf:	mov    ?,WORD PTR [ebx+0x2]
  4057c2:	cli    
  4057c3:	sbb    ch,dl
  4057c5:	dec    esi
  4057c6:	hlt    
  4057c7:	scas   al,BYTE PTR es:[edi]
  4057c8:	push   esp
  4057c9:	inc    eax
  4057ca:	or     al,BYTE PTR [edx+0x5a]
  4057cd:	fsubr  st,st(1)
  4057cf:	inc    ebp
  4057d0:	or     DWORD PTR [ebx-0x77],0xffffffbf
  4057d4:	retf   0x57cc
  4057d7:	lds    ebp,FWORD PTR [eax-0x7d]
  4057da:	dec    edi
  4057db:	mov    ecx,0xab29e8ef
  4057e0:	xchg   esp,eax
  4057e1:	mov    esp,0xa50af55d
  4057e6:	pop    es
  4057e7:	enter  0x13be,0x1a
  4057eb:	mov    al,0x3d
  4057ed:	loope  0x40580c
  4057ef:	nop
  4057f0:	icebp  
  4057f1:	dec    edi
  4057f2:	xor    DWORD PTR [edi+0x7650fc98],0xffffffdb
  4057f9:	arpl   WORD PTR [eax+0x6f],ax
  4057fc:	and    DWORD PTR [eiz*4+0x4181efd7],0x91fa7ab6
  405807:	loop   0x405811
  405809:	mov    esp,0x556edfc5
  40580e:	xor    eax,0x863c4ff7
  405813:	or     eax,0xec4078d8
  405818:	std    
  405819:	std    
  40581a:	mov    ecx,0x3a762e1a
  40581f:	popa   
  405820:	xchg   BYTE PTR [ebx+0x4a],bl
  405823:	out    0xe1,eax
  405825:	sub    ah,BYTE PTR [edx]
  405827:	lods   al,BYTE PTR ds:[esi]
  405828:	sbb    al,0x5
  40582a:	cmp    al,0xb7
  40582c:	pop    es
  40582d:	int    0xfa
  40582f:	mov    eax,ds:0x627d81f0
  405834:	jno    0x4057c6
  405836:	mov    ds:0x4b70586,al
  40583b:	add    DWORD PTR [esi],esi
  40583d:	cmp    al,0xcb
  40583f:	stos   BYTE PTR es:[edi],al
  405840:	jne    0x40588f
  405842:	fmul   DWORD PTR [ecx+edi*4-0x6e9d388]
  405849:	push   edx
  40584a:	and    cl,cl
  40584c:	xor    DWORD PTR [edx],eax
  40584e:	aad    0x7d
  405850:	sub    al,0x8b
  405852:	mov    edi,0x38b6c2bc
  405857:	(bad)  
  405858:	ret    
  405859:	lds    esp,FWORD PTR ds:0x49ef551b
  405860:	sbb    cl,BYTE PTR [edi]
  405862:	stc    
  405863:	push   0xffffffd2
  405865:	push   ebx
  405866:	retf   
  405867:	aad    0x3c
  405869:	adc    BYTE PTR ds:0xd56d380,ah
  40586f:	pusha  
  405870:	xchg   edx,eax
  405871:	popf   
  405872:	(bad)  
  405873:	sbb    dl,ah
  405875:	iret   
  405876:	and    BYTE PTR [esp+edx*2],bh
  405879:	std    
  40587a:	das    
  40587b:	cs loopne 0x405837
  40587e:	test   eax,0xf44286df
  405883:	sub    esp,DWORD PTR [esi+0x54]
  405886:	pushf  
  405887:	loope  0x405856
  405889:	into   
  40588a:	test   BYTE PTR [edx-0x45],bl
  40588d:	jmp    0x977f3dfe
  405892:	int    0x44
  405894:	(bad)  
  405895:	bound  edi,QWORD PTR [ebx+0x1c963d2f]
  40589b:	cs repz adc al,0x88
  40589f:	es xor al,0x37
  4058a2:	jns    0x405869
  4058a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058a5:	mov    ecx,0x7de15631
  4058aa:	cmp    DWORD PTR [edx+ebx*1-0x69],ebx
  4058ae:	jecxz  0x4058b0
  4058b0:	and    al,0xdb
  4058b2:	lahf   
  4058b3:	jae    0x40585f
  4058b5:	cmp    BYTE PTR [ebp+0x39bbfb94],bl
  4058bb:	push   ecx
  4058bc:	shl    DWORD PTR [edi+0x69],1
  4058bf:	in     eax,0x6a
  4058c1:	jb     0x4058fe
  4058c3:	lea    eax,ds:0x35cbd5b
  4058c9:	es cli 
  4058cb:	push   ebp
  4058cc:	mov    esi,0x449085b7
  4058d1:	pop    ds
  4058d2:	and    DWORD PTR [edi+0x19b33a33],ebp
  4058d8:	dec    ecx
  4058d9:	add    dl,BYTE PTR [ebx+0x41]
  4058dc:	lea    esp,[eax+0x65457d94]
  4058e2:	jge    0x405867
  4058e4:	retf   
  4058e5:	pop    esp
  4058e6:	test   DWORD PTR [esi-0x1ea78749],ebx
  4058ec:	jbe    0x405941
  4058ee:	and    dh,BYTE PTR [ebp+0x4dbc7472]
  4058f4:	aad    0x78
  4058f6:	xchg   edi,eax
  4058f7:	jmp    0xea7d:0x88d5d8a8
  4058fe:	dec    edi
  4058ff:	jmp    0x5925:0x6f1e8045
  405906:	sub    ch,BYTE PTR [ecx+0x6]
  405909:	xchg   esi,eax
  40590a:	jg     0x405935
  40590c:	into   
  40590d:	jmp    FWORD PTR [eax-0x3e4415a1]
  405913:	test   ecx,esp
  405915:	mov    ?,esp
  405917:	or     bh,BYTE PTR [ecx+eax*1-0x19]
  40591b:	leave  
  40591c:	inc    edi
  40591d:	leave  
  40591e:	cmp    BYTE PTR ds:0xf83bd21e,dl
  405924:	push   0x2a766c7d
  405929:	ficomp WORD PTR [ecx]
  40592b:	enter  0x869c,0x60
  40592f:	repnz bound edi,QWORD PTR [edi+0x6d]
  405933:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405934:	or     eax,0xe3228ca8
  405939:	cmp    DWORD PTR [esi+0x51fc4ced],ebp
  40593f:	dec    ebx
  405940:	mov    esi,0x6b46c20
  405945:	js     0x4059a1
  405947:	and    dh,BYTE PTR [edi+0x1d]
  40594a:	clc    
  40594b:	scas   al,BYTE PTR es:[edi]
  40594c:	adc    BYTE PTR [esp+ebx*8+0x42],bl
  405950:	xchg   DWORD PTR [ebx],edi
  405952:	mov    ecx,0x5f3270f9
  405957:	dec    edx
  405958:	pop    ebp
  405959:	retf   0xd178
  40595c:	mov    ch,0xda
  40595e:	fwait
  40595f:	jmp    0x40594e
  405961:	(bad)  
  405962:	jge    0x40591c
  405964:	into   
  405965:	in     eax,0xd7
  405967:	repz add bl,cl
  40596a:	lahf   
  40596b:	mov    eax,0x33f520ca
  405970:	int3   
  405971:	xchg   esp,ebp
  405973:	mov    ebp,0x5acbb86f
  405978:	cmp    BYTE PTR [ebx-0x30],cl
  40597b:	loope  0x405927
  40597d:	test   al,0x8d
  40597f:	cmc    
  405980:	push   ecx
  405981:	sbb    WORD PTR [ecx+0x13],di
  405985:	mov    dl,0x5a
  405987:	cmp    edi,DWORD PTR [ecx+0x5]
  40598a:	mov    ah,0xbe
  40598c:	imul   ecx,edi,0x88226d21
  405992:	cmp    BYTE PTR [edx],0x9a
  405995:	or     eax,0xfc90b230
  40599a:	mov    eax,ds:0x4adb7774
  40599f:	in     eax,0x0
  4059a1:	in     eax,dx
  4059a2:	fs mov dh,0x6a
  4059a5:	sbb    al,al
  4059a7:	icebp  
  4059a8:	dec    esi
  4059a9:	cli    
  4059aa:	jmp    0x4059ec
  4059ac:	(bad)  
  4059ad:	js     0x405a0a
  4059af:	out    dx,al
  4059b0:	fwait
  4059b1:	out    0xf0,al
  4059b3:	jbe    0x405960
  4059b5:	or     al,0x28
  4059b7:	neg    BYTE PTR [esi+0x50]
  4059ba:	push   0x72
  4059bc:	sub    BYTE PTR [edx+esi*8],al
  4059bf:	frstor [ebp-0x5f]
  4059c2:	lods   eax,DWORD PTR ds:[esi]
  4059c3:	push   edi
  4059c4:	loope  0x4059be
  4059c6:	stc    
  4059c7:	test   eax,0x6d5c22e7
  4059cc:	add    ah,BYTE PTR [edx-0x62]
  4059cf:	fcom   st(5)
  4059d1:	cmp    al,0x83
  4059d3:	mov    esp,0x89402852
  4059d8:	loopne 0x405a24
  4059da:	pop    ss
  4059db:	adc    bl,al
  4059dd:	jb     0x4059f1
  4059df:	pop    ebp
  4059e0:	nop
  4059e1:	ss and edx,edx
  4059e4:	xchg   edx,eax
  4059e5:	into   
  4059e6:	dec    esp
  4059e7:	sub    al,ch
  4059e9:	cmp    ah,BYTE PTR [edx-0x2f]
  4059ec:	ins    DWORD PTR es:[edi],dx
  4059ed:	imul   ecx,DWORD PTR [ebp-0x72da297f],0x60
  4059f4:	or     al,0x9c
  4059f6:	faddp  st(3),st
  4059f8:	imul   ecx,DWORD PTR ds:0xccc9af06,0x65
  4059ff:	leave  
  405a00:	push   esp
  405a01:	dec    eax
  405a02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a03:	je     0x40599a
  405a05:	jp     0x405a60
  405a07:	bound  edx,QWORD PTR [esi+0x7ceba56a]
  405a0d:	pushf  
  405a0e:	into   
  405a0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a10:	ins    BYTE PTR es:[edi],dx
  405a11:	jno    0x405a91
  405a13:	pop    eax
  405a14:	and    DWORD PTR [ebx+0x2aebf573],ebx
  405a1a:	xchg   DWORD PTR [edx+edi*8],edi
  405a1d:	xchg   ecx,eax
  405a1e:	test   eax,edx
  405a20:	pop    ecx
  405a21:	pop    edi
  405a22:	mov    eax,ds:0x57dc11ba
  405a27:	popf   
  405a28:	push   esp
  405a29:	or     esi,DWORD PTR [ecx-0x495b316d]
  405a2f:	fadd   DWORD PTR [ebx+0x23464aaa]
  405a35:	dec    edi
  405a36:	xchg   edi,eax
  405a37:	cdq    
  405a38:	mov    ch,0x69
  405a3a:	jnp    0x4059f8
  405a3c:	inc    ebp
  405a3d:	mov    bh,0x74
  405a3f:	imul   esi,DWORD PTR [eax+0x325c1c3c],0x190c99e0
  405a49:	sbb    BYTE PTR [edi-0x42],ch
  405a4c:	and    ebp,edx
  405a4e:	js     0x405ac6
  405a50:	mov    ebp,DWORD PTR [ebx+0x6726dd63]
  405a56:	fld    QWORD PTR [edi+edx*2-0x5f]
  405a5a:	sbb    al,0xc6
  405a5c:	or     BYTE PTR [ebp+edi*2-0x12f50f8b],0xf6
  405a64:	push   es
  405a65:	mov    ds:0xb99ca9c6,eax
  405a6a:	push   ds
  405a6b:	pop    es
  405a6c:	(bad)  
  405a6d:	loope  0x405ac4
  405a6f:	add    DWORD PTR [eax-0x52],edi
  405a72:	test   BYTE PTR [ebx],bl
  405a74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a75:	push   cs
  405a76:	(bad)  
  405a77:	push   ebp
  405a78:	dec    edi
  405a79:	cdq    
  405a7a:	sub    BYTE PTR [esi+0x3d389b0c],ah
  405a80:	jmp    0x405a9b
  405a82:	enter  0xa609,0xf5
  405a86:	sub    eax,0x1971b394
  405a8b:	shr    BYTE PTR [edx-0x37],cl
  405a8e:	mov    ebp,0x8b17e62c
  405a93:	test   BYTE PTR [ecx+0x5d5ab826],0x68
  405a9a:	sub    DWORD PTR [ecx],edx
  405a9c:	in     al,dx
  405a9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a9e:	and    BYTE PTR [edx+0x45],bh
  405aa1:	call   0x3234495e
  405aa6:	ins    BYTE PTR es:[edi],dx
  405aa7:	shr    BYTE PTR ds:[edi],1
  405aaa:	jmp    0x80819ffc
  405aaf:	and    eax,0xacf65cc8
  405ab4:	pop    esp
  405ab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ab6:	shl    DWORD PTR [ebx-0x541a6cee],cl
  405abc:	std    
  405abd:	push   ss
  405abe:	aam    0x13
  405ac0:	jmp    0x1345475
  405ac5:	or     edx,DWORD PTR [esi+0x42fad418]
  405acb:	sbb    BYTE PTR [eax-0x579563be],cl
  405ad1:	and    DWORD PTR [ecx-0x4c],esi
  405ad4:	add    BYTE PTR [ecx],dl
  405ad6:	or     eax,0x1d18e5e2
  405adb:	mov    bl,0xb0
  405add:	xchg   edi,eax
  405ade:	mov    eax,ds:0x20c912f
  405ae3:	push   eax
  405ae4:	dec    edx
  405ae5:	cs pop ebx
  405ae7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ae8:	jle    0x405af6
  405aea:	and    DWORD PTR [ecx+0x5e1e3aa6],edi
  405af0:	stc    
  405af1:	or     DWORD PTR [ecx+esi*1-0x16],eax
  405af5:	adc    al,0xe3
  405af7:	push   cs
  405af8:	ds das 
  405afa:	jmp    0x1e5eb6bb
  405aff:	jl     0x405aea
  405b01:	nop
  405b02:	mov    cl,0x66
  405b04:	leave  
  405b05:	fdiv   st(2),st
  405b07:	out    dx,al
  405b08:	push   ebp
  405b09:	jbe    0x405ad8
  405b0b:	and    dl,dl
  405b0d:	je     0x405ab6
  405b0f:	lea    edx,[ecx+ecx*2+0xc]
  405b13:	(bad)  
  405b14:	adc    al,0x96
  405b16:	jg     0x405ad7
  405b18:	lods   eax,DWORD PTR ds:[esi]
  405b19:	ja     0x405b24
  405b1b:	gs push edx
  405b1d:	push   0x1f5ee800
  405b22:	aaa    
  405b23:	or     DWORD PTR [esi+eiz*8+0x1c],ebx
  405b27:	scas   al,BYTE PTR es:[edi]
  405b28:	repz xor BYTE PTR [edx+ebx*1+0x138b3d41],bl
  405b30:	das    
  405b31:	push   edi
  405b32:	test   cl,0x6e
  405b35:	xchg   ebp,eax
  405b36:	sub    edx,DWORD PTR [ebx]
  405b38:	pop    es
  405b39:	fidiv  DWORD PTR [edx+0xca94dda]
  405b3f:	xlat   BYTE PTR ds:[ebx]
  405b40:	fist   DWORD PTR [edx-0x4b028a54]
  405b46:	add    cl,ah
  405b48:	cs adc bl,al
  405b4b:	pusha  
  405b4c:	dec    edi
  405b4d:	inc    edx
  405b4e:	inc    ebx
  405b4f:	or     al,0x52
  405b51:	mov    esp,0x94368edb
  405b56:	sbb    al,0xb4
  405b58:	dec    ecx
  405b59:	mov    al,ds:0x7cce3db1
  405b5e:	inc    edi
  405b5f:	(bad)  
  405b60:	out    0x51,eax
  405b62:	in     eax,dx
  405b63:	pop    esi
  405b64:	inc    ebx
  405b65:	ror    al,1
  405b67:	pop    esi
  405b68:	pop    ebp
  405b69:	jecxz  0x405b82
  405b6b:	xor    DWORD PTR [edi],ecx
  405b6d:	arpl   si,ax
  405b6f:	mov    edi,0x6f05c224
  405b74:	dec    edx
  405b75:	jbe    0x405b10
  405b77:	sar    DWORD PTR [ecx+0x21f8d5c0],cl
  405b7d:	mov    gs,WORD PTR [edx]
  405b7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b80:	jne    0x405b67
  405b82:	mov    ds:0x43c79295,al
  405b87:	fld    DWORD PTR [edi+0x2f7cc793]
  405b8d:	and    al,0x8
  405b8f:	mov    bh,0x57
  405b91:	or     BYTE PTR [edx+0x7db18bb4],ch
  405b97:	jge    0x405bb3
  405b99:	stos   BYTE PTR es:[edi],al
  405b9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b9b:	pop    ebp
  405b9c:	sbb    BYTE PTR [edi*8+0x715062f0],ah
  405ba3:	cmp    bl,BYTE PTR [eax]
  405ba5:	int    0x8f
  405ba7:	jp     0x405bbb
  405ba9:	lods   eax,DWORD PTR ds:[esi]
  405baa:	mov    dl,0xa5
  405bac:	cmp    al,0x82
  405bae:	loop   0x405be1
  405bb0:	xor    eax,0xaab9adc
  405bb5:	push   0x3
  405bb7:	xchg   ebx,eax
  405bb8:	pop    esi
  405bb9:	mov    fs,WORD PTR [ebx]
  405bbb:	and    ebp,DWORD PTR [ecx-0x5f203c6c]
  405bc1:	mov    cs,WORD PTR [esi]
  405bc3:	aaa    
  405bc4:	scas   al,BYTE PTR es:[edi]
  405bc5:	je     0x405c1e
  405bc7:	mov    ah,0xe
  405bc9:	jl     0x405be1
  405bcb:	cwde   
  405bcc:	inc    ebp
  405bcd:	sbb    eax,0x38bffac9
  405bd2:	dec    edi
  405bd3:	or     BYTE PTR [eax-0x70],bh
  405bd6:	scas   eax,DWORD PTR es:[edi]
  405bd7:	inc    eax
  405bd8:	sbb    al,0x10
  405bda:	in     al,0xea
  405bdc:	int3   
  405bdd:	ror    BYTE PTR [edi+0xd9c846f],1
  405be3:	sahf   
  405be4:	mov    esi,0xac5c063d
  405be9:	or     al,BYTE PTR [edx-0x26]
  405bec:	stos   DWORD PTR es:[edi],eax
  405bed:	ret    
  405bee:	sbb    BYTE PTR [ebx-0x52],0x2b
  405bf2:	add    eax,0x3b38164b
  405bf7:	xor    eax,0xebfecf6
  405bfc:	mov    edx,0x2757b1a5
  405c01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c02:	mov    cl,0x28
  405c04:	sub    DWORD PTR [esi-0x179a48bc],ecx
  405c0a:	cmp    ebx,DWORD PTR [esi]
  405c0c:	test   BYTE PTR [eax],al
  405c0e:	stos   DWORD PTR es:[edi],eax
  405c0f:	mov    cl,BYTE PTR [edx]
  405c11:	mov    al,0x7a
  405c13:	jb     0x405c89
  405c15:	outs   dx,BYTE PTR ds:[esi]
  405c16:	push   0x5e
  405c18:	mov    bh,0x24
  405c1a:	popf   
  405c1b:	clc    
  405c1c:	std    
  405c1d:	pop    edx
  405c1e:	inc    edx
  405c1f:	mov    bl,0x35
  405c21:	leave  
  405c22:	xor    DWORD PTR [edx+0x736aa1d8],esp
  405c28:	add    BYTE PTR [ecx+esi*4-0x60],ch
  405c2c:	jecxz  0x405c52
  405c2e:	xchg   esp,eax
  405c2f:	popf   
  405c30:	aas    
  405c31:	mov    al,0x9
  405c33:	cmp    eax,0x4a6c2804
  405c38:	jae    0x405bce
  405c3a:	daa    
  405c3b:	ror    DWORD PTR [ecx-0x42fa55f3],1
  405c41:	inc    ecx
  405c42:	popf   
  405c43:	sub    eax,0x7b6ae4b
  405c48:	mov    al,0x6b
  405c4a:	mov    edi,edi
  405c4c:	inc    edi
  405c4d:	add    al,0x8e
  405c4f:	xchg   edx,eax
  405c50:	lods   al,BYTE PTR ds:[esi]
  405c51:	mov    ds,WORD PTR [eax+0x37]
  405c54:	jmp    0x405c6b
  405c56:	(bad)  
  405c57:	xor    DWORD PTR [eax+0x6076a8e8],esi
  405c5d:	pop    ds
  405c5e:	fs mov ecx,0xbabfd66e
  405c64:	repnz shr ebp,cl
  405c67:	jmp    FWORD PTR [esi+0x6a]
  405c6a:	mov    dh,0x47
  405c6c:	push   edx
  405c6d:	(bad)  
  405c6e:	sub    eax,0xcf93400b
  405c73:	dec    edx
  405c74:	call   DWORD PTR [esi-0x7c56288a]
  405c7a:	mov    ch,cl
  405c7c:	and    BYTE PTR [eax+0x29],cl
  405c7f:	push   0x2d
  405c81:	loope  0x405c40
  405c83:	mov    eax,0x418760e5
  405c88:	cld    
  405c89:	mov    ah,BYTE PTR [edx+0x6ab602c7]
  405c8f:	ficom  DWORD PTR [edx+0x73]
  405c92:	dec    eax
  405c93:	int    0xd8
  405c95:	xchg   ebp,eax
  405c96:	loopne 0x405ce2
  405c98:	or     eax,0x3d1f5db2
  405c9d:	xchg   esp,eax
  405c9e:	mov    ecx,DWORD PTR [ebp-0x7f]
  405ca1:	aas    
  405ca2:	cmp    cl,BYTE PTR [edx-0x4]
  405ca5:	mov    bl,0xd0
  405ca7:	xchg   DWORD PTR [edx+0x607c7b7d],ebx
  405cad:	lods   eax,DWORD PTR ds:[esi]
  405cae:	xchg   esi,eax
  405caf:	(bad)  
  405cb0:	jae    0x405d2e
  405cb2:	push   0x5e
  405cb4:	mov    ebx,0xe3a470cc
  405cb9:	ja     0x405d16
  405cbb:	ret    
  405cbc:	rcl    DWORD PTR [ebp-0x59],0xd6
  405cc0:	cmp    eax,DWORD PTR [ecx+edi*8+0x50ef3e4e]
  405cc7:	sub    ecx,eax
  405cc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cca:	ret    
  405ccb:	jle    0x405cc7
  405ccd:	(bad)  
  405cce:	push   cs
  405ccf:	icebp  
  405cd0:	es xchg ebx,eax
  405cd2:	sbb    dl,BYTE PTR [edi-0x7c344a6c]
  405cd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cd9:	fiadd  DWORD PTR [esi-0x6c8c7a1b]
  405cdf:	pusha  
  405ce0:	dec    ebx
  405ce1:	scas   eax,DWORD PTR es:[edi]
  405ce2:	and    BYTE PTR [ebp-0x70769c98],al
  405ce8:	push   esp
  405ce9:	std    
  405cea:	mov    ebp,0x4a085fa5
  405cef:	dec    esi
  405cf0:	push   esi
  405cf1:	enter  0xfec5,0xa
  405cf5:	imul   edi,DWORD PTR [ebp-0x32],0xffffffe9
  405cf9:	in     eax,0x1b
  405cfb:	mov    eax,fs:0x5142f5db
  405d01:	cs push ds
  405d03:	fcomi  st,st(2)
  405d05:	(bad)  
  405d06:	dec    eax
  405d07:	sbb    DWORD PTR [esi-0x616c21d7],ebp
  405d0d:	inc    esi
  405d0e:	fadd   QWORD PTR [edi+0x29]
  405d11:	pop    edx
  405d12:	fnstsw WORD PTR [edi-0x44]
  405d15:	sbb    BYTE PTR [eax+0x7f],0x64
  405d19:	loopne 0x405cda
  405d1b:	rol    BYTE PTR [ebx],1
  405d1d:	xor    esi,DWORD PTR ds:0x5dee6ffd
  405d23:	inc    esi
  405d24:	cmp    dl,BYTE PTR [ecx-0xa70fcf9]
  405d2a:	jns    0x405d85
  405d2c:	leave  
  405d2d:	mov    ah,0xb1
  405d2f:	pop    ebp
  405d30:	in     eax,0xea
  405d32:	test   al,0xc1
  405d34:	(bad)  
  405d35:	and    DWORD PTR [eax+0x43],eax
  405d38:	jns    0x405d39
  405d3a:	or     BYTE PTR [edx],cl
  405d3c:	add    dh,ch
  405d3e:	mov    ds:0x4480de4d,eax
  405d43:	sub    DWORD PTR [ebp+esi*2+0x32],edi
  405d47:	jbe    0x405d36
  405d49:	xor    BYTE PTR [ebp-0x14],0x5f
  405d4d:	mov    ah,0x90
  405d4f:	mov    bl,BYTE PTR [ebp-0x13575e9c]
  405d55:	xchg   ebx,eax
  405d56:	pusha  
  405d57:	outs   dx,DWORD PTR ds:[esi]
  405d58:	xchg   edi,eax
  405d59:	xor    ebp,esp
  405d5b:	jno    0x405dd8
  405d5d:	shl    BYTE PTR [ecx],0x94
  405d60:	pop    ss
  405d61:	push   edx
  405d62:	adc    ecx,DWORD PTR [esi]
  405d64:	cmp    eax,0x17a59bcc
  405d69:	int3   
  405d6a:	sbb    DWORD PTR [edi+0x3a],esi
  405d6d:	jle    0x405da6
  405d6f:	inc    esp
  405d70:	pop    ecx
  405d71:	mov    eax,0xf4b2ec08
  405d76:	clc    
  405d77:	xchg   ebp,eax
  405d78:	sahf   
  405d79:	fs xchg edi,eax
  405d7b:	push   cs
  405d7c:	in     eax,0x69
  405d7e:	stos   BYTE PTR es:[edi],al
  405d7f:	inc    edx
  405d80:	inc    ebx
  405d81:	jp     0x405dfb
  405d83:	xchg   DWORD PTR [eax],edx
  405d85:	(bad)  
  405d86:	pop    edi
  405d87:	mov    edx,0x47697bef
  405d8c:	xor    ebp,DWORD PTR [esi+esi*1-0x7c]
  405d90:	pushf  
  405d91:	in     eax,dx
  405d92:	(bad)  [edi+0x77]
  405d95:	in     al,dx
  405d96:	test   edx,ebx
  405d98:	push   edx
  405d99:	sbb    BYTE PTR [edi+0x34],ch
  405d9c:	int3   
  405d9d:	ins    BYTE PTR es:[edi],dx
  405d9e:	ins    BYTE PTR es:[edi],dx
  405d9f:	xor    BYTE PTR [eax],dh
  405da1:	fdiv   DWORD PTR [ebx+0x4b]
  405da4:	imul   eax,DWORD PTR [ebp-0x719bf92f],0xffffffea
  405dab:	scas   eax,DWORD PTR es:[edi]
  405dac:	mov    ecx,0x8d271c56
  405db1:	xor    DWORD PTR [eax-0x4035d684],edi
  405db7:	jp     0x405d9f
  405db9:	loopne 0x405de2
  405dbb:	ss (bad) 
  405dbd:	jae    0x405e05
  405dbf:	repnz mov edi,DWORD PTR [ebx+0x2aa90cf0]
  405dc6:	gs popf 
  405dc8:	stos   BYTE PTR es:[edi],al
  405dc9:	ins    BYTE PTR es:[edi],dx
  405dca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dcb:	push   ss
  405dcc:	out    0xdb,eax
  405dce:	into   
  405dcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dd0:	cmp    edi,edx
  405dd2:	mov    bh,0x90
  405dd4:	in     al,dx
  405dd5:	push   0x130be3b
  405dda:	cs jle 0x405da6
  405ddd:	test   eax,0xe67fd81f
  405de2:	jmp    0x405df0
  405de4:	sti    
  405de5:	pop    es
  405de6:	mov    al,0x86
  405de8:	push   edx
  405de9:	cli    
  405dea:	stc    
  405deb:	enter  0x1b5a,0xc7
  405def:	jns    0x405dc2
  405df1:	and    ah,BYTE PTR [eax+0x69]
  405df4:	nop
  405df5:	dec    ebx
  405df6:	fmul   DWORD PTR [eax-0x3f]
  405df9:	or     esi,DWORD PTR [edi]
  405dfb:	push   ss
  405dfc:	jmp    0x405e04
  405dfe:	mov    cl,0x95
  405e00:	mov    bh,0x16
  405e02:	mov    cl,0x4b
  405e04:	call   0x37e0c2d0
  405e09:	fcmove st,st(3)
  405e0b:	bound  esp,QWORD PTR [ebx-0x5d]
  405e0e:	adc    bh,BYTE PTR [edx]
  405e10:	sbb    edx,DWORD PTR [edi+0x1]
  405e13:	(bad)  
  405e14:	jne    0x405e82
  405e16:	and    DWORD PTR es:[edi-0x5db6df79],0xb7f40dbd
  405e21:	jne    0x405e10
  405e23:	outs   dx,BYTE PTR ds:[esi]
  405e24:	lods   eax,DWORD PTR ds:[esi]
  405e25:	scas   eax,DWORD PTR es:[edi]
  405e26:	loop   0x405e7b
  405e28:	sbb    al,0x5f
  405e2a:	loope  0x405de6
  405e2c:	mov    eax,ds:0xfe7db0ae
  405e31:	fcmovnbe st,st(1)
  405e33:	fnstenv [edi+0x2b17b752]
  405e39:	and    al,0xb2
  405e3b:	ficomp DWORD PTR [esi+0x4cc52ae2]
  405e41:	retf   
  405e42:	jp     0x405e55
  405e44:	cdq    
  405e45:	(bad)  
  405e46:	(bad)  
  405e47:	sub    edx,edi
  405e49:	outs   dx,DWORD PTR ds:[esi]
  405e4a:	push   ecx
  405e4b:	sub    ebx,DWORD PTR [ebp+0x66]
  405e4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e4f:	sbb    esp,edx
  405e51:	jnp    0x405ecb
  405e53:	mov    dl,0xdd
  405e55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e56:	mov    ebp,DWORD PTR [eax*4-0x11f8a99f]
  405e5d:	out    dx,al
  405e5e:	fcmovnb st,st(7)
  405e60:	sbb    BYTE PTR [ecx-0x53],bh
  405e63:	xchg   esp,eax
  405e64:	sbb    al,0x16
  405e66:	push   ss
  405e67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e68:	leave  
  405e69:	dec    edx
  405e6a:	fdivr  QWORD PTR [edi-0x581c3014]
  405e70:	dec    ecx
  405e71:	scas   eax,DWORD PTR es:[edi]
  405e72:	ror    DWORD PTR [ecx],1
  405e74:	jne    0x405dfd
  405e76:	mov    ah,0xe4
  405e78:	sbb    DWORD PTR [ecx+0x6604d9a2],esi
  405e7e:	sbb    esi,eax
  405e80:	sub    al,0x9e
  405e82:	out    0xc6,eax
  405e84:	mov    WORD PTR [ecx-0x3],?
  405e87:	shl    DWORD PTR [esi+0x21],1
  405e8a:	popa   
  405e8b:	xor    al,0xa
  405e8d:	add    edx,ecx
  405e8f:	mov    dl,0xaf
  405e91:	jle    0x405e38
  405e93:	dec    ebp
  405e94:	aaa    
  405e95:	in     al,dx
  405e96:	sub    BYTE PTR [edi],dl
  405e98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e99:	call   0x724e76d2
  405e9e:	in     al,0x4e
  405ea0:	jg     0x405eb8
  405ea2:	repz mov ebp,0xef81dd17
  405ea8:	dec    esp
  405ea9:	mov    esi,0x57b29751
  405eae:	dec    esp
  405eaf:	(bad)  
  405eb0:	das    
  405eb1:	mov    ebp,0x3c75de7d
  405eb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb7:	fist   WORD PTR [ebx-0x502284c0]
  405ebd:	out    0xdf,eax
  405ebf:	ss int 0x9c
  405ec2:	fcomip st,st(5)
  405ec4:	scas   al,BYTE PTR es:[edi]
  405ec5:	mov    eax,ds:0x8a431e1b
  405eca:	mov    ds:0x9c43118d,al
  405ecf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ed0:	in     al,dx
  405ed1:	xchg   DWORD PTR [eax],ebx
  405ed3:	leave  
  405ed4:	lds    edi,FWORD PTR [ecx]
  405ed6:	sub    esi,ebx
  405ed8:	pushf  
  405ed9:	xchg   edi,eax
  405eda:	pop    edi
  405edb:	shl    DWORD PTR [edx],cl
  405edd:	sbb    eax,0x4c007670
  405ee2:	popa   
  405ee3:	inc    ebp
  405ee4:	leave  
  405ee5:	sahf   
  405ee6:	out    0x36,al
  405ee8:	cmp    BYTE PTR [edi-0x4b],bl
  405eeb:	dec    ebp
  405eec:	jl     0x405f39
  405eee:	pop    edi
  405eef:	sub    edi,edx
  405ef1:	pop    ds
  405ef2:	int    0x3f
  405ef4:	lods   al,BYTE PTR ds:[esi]
  405ef5:	fwait
  405ef6:	push   esp
  405ef7:	ss inc esi
  405ef9:	loopne 0x405f52
  405efb:	xchg   ebp,eax
  405efc:	pop    edx
  405efd:	pop    ebx
  405efe:	repz loopne 0x405ee2
  405f01:	pop    esi
  405f02:	xlat   BYTE PTR ds:[ebx]
  405f03:	mov    eax,DWORD PTR [ecx-0x35]
  405f06:	cmp    eax,edi
  405f08:	sti    
  405f09:	outs   dx,DWORD PTR ds:[esi]
  405f0a:	(bad)  
  405f0b:	push   ebp
  405f0c:	xchg   ebx,eax
  405f0d:	jg     0x405ed3
  405f0f:	dec    ebx
  405f10:	sbb    edi,eax
  405f12:	mov    ecx,0x21f457c4
  405f17:	cmc    
  405f18:	mov    esi,0xa6721b9b
  405f1d:	push   eax
  405f1e:	push   esp
  405f1f:	mov    edx,0xf268f1be
  405f24:	mov    esp,0x5342cf6b
  405f29:	jbe    0x405f7b
  405f2b:	jp     0x405f7b
  405f2d:	out    dx,al
  405f2e:	jg     0x405f0a
  405f30:	cmp    al,0xb4
  405f32:	(bad)  
  405f33:	(bad)  
  405f35:	cmc    
  405f36:	sahf   
  405f37:	inc    edi
  405f38:	addr16 loop 0x405ef7
  405f3b:	inc    edx
  405f3c:	dec    ebx
  405f3d:	pusha  
  405f3e:	push   esi
  405f3f:	pop    es
  405f40:	xchg   esi,eax
  405f41:	lahf   
  405f42:	mov    ebp,0x1a25ec11
  405f47:	(bad)  
  405f48:	cmp    DWORD PTR [esi],ecx
  405f4a:	sbb    al,0x11
  405f4c:	mov    ch,0x83
  405f4e:	and    eax,0x71480277
  405f53:	(bad)  
  405f54:	push   cs
  405f55:	push   esp
  405f56:	sar    BYTE PTR cs:[edx+esi*1],cl
  405f5a:	adc    ebx,edi
  405f5c:	sbb    DWORD PTR [ecx],ecx
  405f5e:	and    bh,BYTE PTR [edx+0x4790354]
  405f64:	pop    esi
  405f65:	and    bl,BYTE PTR [eax+0xa]
  405f68:	inc    edi
  405f69:	pop    ebp
  405f6a:	shl    dh,cl
  405f6c:	push   esi
  405f6d:	add    ebx,DWORD PTR [ebx+esi*1+0x62b611ed]
  405f74:	push   eax
  405f75:	clc    
  405f76:	dec    edi
  405f77:	hlt    
  405f78:	retf   0x4b54
  405f7b:	ret    0xba6b
  405f7e:	cmp    dh,BYTE PTR [esp+ebx*8-0x20]
  405f82:	sub    BYTE PTR [esi],bl
  405f84:	nop
  405f85:	or     BYTE PTR [ebx+eax*8],ch
  405f88:	jmp    0xe1ef:0xa97bcea0
  405f8f:	out    0xff,al
  405f91:	out    0xcd,eax
  405f93:	jmp    0x405f90
  405f95:	xchg   edx,eax
  405f96:	lea    eax,[ecx-0xd]
  405f99:	in     eax,0xbd
  405f9b:	stos   BYTE PTR es:[edi],al
  405f9c:	lock push ds
  405f9e:	loope  0x405f3c
  405fa0:	jae    0x405fcf
  405fa2:	mov    BYTE PTR [ebp+0x2a],ch
  405fa5:	push   ss
  405fa6:	sbb    eax,0x181513ae
  405fab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fac:	push   0xc851f456
  405fb1:	imul   ecx,DWORD PTR es:[ebx],0xffffffbe
  405fb5:	mov    bh,0x70
  405fb7:	(bad)  
  405fb8:	outs   dx,BYTE PTR ds:[esi]
  405fb9:	push   ds
  405fba:	std    
  405fbb:	mov    al,ds:0x28129ee4
  405fc0:	pop    edx
  405fc1:	inc    esp
  405fc2:	pusha  
  405fc3:	test   eax,0xf3ac6b03
  405fc8:	mov    cl,0x90
  405fca:	push   ecx
  405fcb:	jl     0x405f52
  405fcd:	adc    edx,DWORD PTR [edi+edx*1-0x40b86f76]
  405fd4:	adc    ah,BYTE PTR ds:0x87c7fbad
  405fda:	xchg   ebx,eax
  405fdb:	fcom   DWORD PTR [eax-0x2bbae7b2]
  405fe1:	loop   0x406044
  405fe3:	dec    ebx
  405fe4:	xchg   esp,eax
  405fe5:	dec    BYTE PTR [eax]
  405fe7:	das    
  405fe8:	adc    esp,ebx
  405fea:	cmovg  edi,edi
  405fed:	ficom  DWORD PTR [edx]
  405fef:	loopne 0x405ff0
  405ff1:	pop    ss
  405ff2:	add    DWORD PTR [ebx],esi
  405ff4:	cmp    BYTE PTR [ebp+0x2872f8d2],ch
  405ffa:	jbe    0x40605d
  405ffc:	mov    ds:0x98f9c694,al
  406001:	add    DWORD PTR [esi+0x1d],ecx
  406004:	mov    ebx,0x9e31d3d9
  406009:	out    0x80,al
  40600b:	outs   dx,DWORD PTR ds:[esi]
  40600c:	mov    dh,al
  40600e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40600f:	add    BYTE PTR [edx+0x1b],0xdd
  406013:	stc    
  406014:	stos   BYTE PTR es:[edi],al
  406015:	out    dx,al
  406016:	mov    eax,ds:0x14013bc1
  40601b:	in     eax,dx
  40601c:	push   esi
  40601d:	mov    edx,0x26fa744e
  406022:	stos   BYTE PTR es:[edi],al
  406023:	pop    ecx
  406024:	imul   ebp,DWORD PTR [edx],0x8f20d9d
  40602a:	mov    DWORD PTR [ebx-0x23],esp
  40602d:	push   esi
  40602e:	adc    al,bh
  406030:	loopne 0x40607e
  406032:	or     DWORD PTR [edx+0x68],ecx
  406035:	mov    tr7,edx
  406038:	mov    ebx,0x8086b8a3
  40603d:	ins    DWORD PTR es:[edi],dx
  40603e:	sub    ebx,DWORD PTR [edi+0x4036bbcc]
  406044:	jo     0x405fdc
  406046:	mov    ecx,0x4193da72
  40604b:	(bad)  
  40604c:	repz mov esi,0x96ce7a7
  406052:	adc    BYTE PTR [edi+0xd],cl
  406055:	ins    DWORD PTR es:[edi],dx
  406056:	xchg   ebx,eax
  406057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406058:	and    DWORD PTR [ebx],esi
  40605a:	jns    0x406058
  40605c:	test   al,0xab
  40605e:	cli    
  40605f:	sbb    eax,0x8de84954
  406064:	push   ss
  406065:	mov    eax,0x1021df45
  40606a:	inc    ebp
  40606b:	xor    eax,0xe8ad0be7
  406070:	or     dl,0x7d
  406073:	jae    0x406034
  406075:	lds    eax,FWORD PTR [ebx]
  406077:	cs leave 
  406079:	fcmovnbe st,st(3)
  40607b:	sub    BYTE PTR [esi+0xe60370c],dh
  406081:	into   
  406082:	out    dx,al
  406083:	xchg   BYTE PTR [edi-0x44e0973e],bl
  406089:	push   0xf4d8fd58
  40608e:	(bad)  
  40608f:	out    0x21,eax
  406091:	push   0x96931ad4
  406096:	mov    bh,0x8c
  406098:	fstp   TBYTE PTR [esi]
  40609a:	and    BYTE PTR [edi+0x8d91d74],dl
  4060a0:	mov    cl,0xf2
  4060a2:	add    eax,DWORD PTR ds:0x19807857
  4060a8:	ret    
  4060a9:	dec    ecx
  4060aa:	jp     0x4060c2
  4060ac:	inc    edi
  4060ad:	sar    BYTE PTR [edi],cl
  4060af:	jae    0x40611c
  4060b1:	aaa    
  4060b2:	ret    0xd9b1
  4060b5:	sbb    eax,0x29a72f4
  4060ba:	lods   al,BYTE PTR ds:[esi]
  4060bb:	push   esp
  4060bc:	shr    BYTE PTR [edi],0xa
  4060bf:	clc    
  4060c0:	rcr    DWORD PTR ds:[ebp-0x4cbffc88],cl
  4060c7:	neg    ebx
  4060c9:	iret   
  4060ca:	shl    ebp,0xe6
  4060cd:	sub    ebx,ecx
  4060cf:	retf   0xfcfa
  4060d2:	add    DWORD PTR [ebx],esi
  4060d4:	hlt    
  4060d5:	les    edx,FWORD PTR [ebp+esi*4+0x54]
  4060d9:	push   ecx
  4060da:	dec    edi
  4060db:	aad    0x73
  4060dd:	xchg   esi,eax
  4060de:	push   ds
  4060df:	and    eax,0x20eaafb2
  4060e4:	pushf  
  4060e5:	xchg   ebx,eax
  4060e6:	add    eax,0x65d58e20
  4060eb:	call   DWORD PTR [esi-0x38]
  4060ee:	adc    DWORD PTR [edx],eax
  4060f0:	es jecxz 0x406102
  4060f3:	push   0xffffff82
  4060f5:	add    DWORD PTR ds:[edi],edi
  4060f8:	ja     0x4060c8
  4060fa:	rcr    DWORD PTR [edx-0x51c44247],cl
  406100:	outs   dx,BYTE PTR ds:[esi]
  406101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406102:	pop    esi
  406103:	out    dx,eax
  406104:	pop    edi
  406105:	cdq    
  406106:	inc    ebp
  406107:	mov    ecx,DWORD PTR [ebx-0x3edf8073]
  40610d:	ins    DWORD PTR es:[edi],dx
  40610e:	dec    esi
  40610f:	or     esp,DWORD PTR [esi+0x38]
  406112:	or     BYTE PTR [ebp+0x7e],dh
  406115:	lea    esi,[ecx+0x77]
  406118:	pop    edx
  406119:	shl    bh,cl
  40611b:	pop    ds
  40611c:	loope  0x40617c
  40611e:	popf   
  40611f:	aad    0x40
  406121:	dec    edx
  406122:	sub    al,bl
  406124:	sub    ch,BYTE PTR [ebx-0x700df6e1]
  40612a:	mov    ah,0xb
  40612c:	jmp    0x14c585ec
  406131:	mov    bh,bl
  406133:	es jns 0x4060f6
  406136:	jl     0x40615c
  406138:	dec    eax
  406139:	jo     0x4060e4
  40613b:	push   ds
  40613c:	jge    0x40614b
  40613e:	and    esp,DWORD PTR [esi+0x17]
  406141:	call   0x63cc:0xb2c8387f
  406148:	push   0xd7bc3e40
  40614d:	(bad)  
  40614e:	mov    eax,ds:0x435fcbfb
  406153:	pop    ebp
  406154:	into   
  406155:	(bad)  
  406157:	cmp    cl,0x2d
  40615a:	sub    esp,0x14e79ed9
  406160:	mov    bl,0x94
  406162:	dec    edi
  406163:	loopne 0x4060e6
  406165:	(bad)  
  406166:	mov    WORD PTR [eax-0x18],gs
  406169:	sub    BYTE PTR [ebp+eiz*2+0xbc04c6f],bh
  406170:	mov    bh,0x91
  406172:	fild   WORD PTR [edx-0x54]
  406175:	inc    edx
  406176:	push   cs
  406177:	repz sub BYTE PTR [esi],ch
  40617a:	add    eax,0xfc409000
  40617f:	fbld   TBYTE PTR ds:0x7b3a6e9e
  406185:	adc    eax,0xdff4f87a
  40618a:	xor    esp,DWORD PTR [edi]
  40618c:	ins    DWORD PTR es:[edi],dx
  40618d:	xchg   ebp,eax
  40618e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40618f:	jg     0x4061d2
  406191:	lock adc cl,BYTE PTR [ecx]
  406194:	add    eax,0x422cbdb3
  406199:	pop    ecx
  40619a:	mov    edi,DWORD PTR [ecx+eiz*1+0x1f27d539]
  4061a1:	sbb    ebp,DWORD PTR [ebx+0x6ca1801f]
  4061a7:	es call 0xbf195a63
  4061ad:	test   BYTE PTR [esi+0xc],ch
  4061b0:	pop    esi
  4061b1:	aaa    
  4061b2:	add    ch,BYTE PTR [ebx+0x56]
  4061b5:	fsubr  st,st(5)
  4061b7:	add    al,0x9c
  4061b9:	inc    ecx
  4061ba:	(bad)  
  4061bb:	mov    ebp,0x9f54dc91
  4061c0:	ins    BYTE PTR es:[edi],dx
  4061c1:	lahf   
  4061c2:	aas    
  4061c3:	(bad)  
  4061c4:	sbb    eax,0xf89bbb40
  4061c9:	(bad)  
  4061ca:	jp     0x40616f
  4061cc:	pcmpgtw mm4,QWORD PTR [eax+eax*4]
  4061d0:	dec    esp
  4061d1:	push   es
  4061d2:	mov    al,ds:0x76c072f4
  4061d7:	rcl    DWORD PTR ds:0xcaea869a,1
  4061dd:	scas   al,BYTE PTR es:[edi]
  4061de:	stos   BYTE PTR es:[edi],al
  4061df:	xor    eax,DWORD PTR [eax+0xc73cba9]
  4061e5:	cdq    
  4061e6:	or     al,0xf6
  4061e8:	gs retf 
  4061ea:	pop    esp
  4061eb:	push   eax
  4061ec:	and    eax,0x6a78e598
  4061f1:	or     bh,BYTE PTR ds:0x1f6e8f69
  4061f7:	stos   BYTE PTR es:[edi],al
  4061f8:	adc    eax,0x1ae1d62b
  4061fd:	int3   
  4061fe:	sbb    edx,DWORD PTR [esi]
  406200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406201:	pop    ds
  406202:	adc    al,0x59
  406204:	dec    esp
  406205:	clc    
  406206:	adc    al,0x93
  406208:	std    
  406209:	lahf   
  40620a:	lods   al,BYTE PTR ds:[esi]
  40620b:	jmp    0x406230
  40620d:	out    0x56,eax
  40620f:	inc    ebp
  406210:	popa   
  406211:	loope  0x406226
  406213:	test   ah,cl
  406215:	dec    eax
  406216:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406217:	sbb    BYTE PTR [esi],ah
  406219:	sub    esi,DWORD PTR [esp+ebp*1-0x19]
  40621d:	adc    eax,0x96089a6c
  406222:	xor    BYTE PTR [edx],ch
  406224:	dec    ebp
  406225:	xchg   ebx,eax
  406226:	jge    0x406292
  406228:	out    0x7c,eax
  40622a:	push   esi
  40622b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40622c:	aaa    
  40622d:	push   DWORD PTR [ecx-0xb1a9639]
  406233:	fucomi st,st(0)
  406235:	push   edx
  406236:	xchg   ebx,eax
  406237:	cdq    
  406238:	inc    edi
  406239:	add    eax,0xf86e0af1
  40623e:	xor    DWORD PTR [edi-0x70],eax
  406241:	mov    edi,0x82da8d33
  406246:	jo     0x4061ed
  406248:	and    DWORD PTR [eax],ecx
  40624a:	pop    edi
  40624b:	jmp    0x4062c7
  40624d:	iret   
  40624e:	in     al,0x3a
  406250:	clc    
  406251:	push   ecx
  406252:	and    eax,0xa2339238
  406257:	adc    al,0x65
  406259:	mov    bl,0xf7
  40625b:	push   esi
  40625c:	hlt    
  40625d:	jne    0x406218
  40625f:	xor    eax,0xbd0091f9
  406264:	pop    ecx
  406265:	popa   
  406266:	xchg   ecx,eax
  406267:	mov    dl,0x81
  406269:	sbb    al,0x74
  40626b:	pop    ecx
  40626c:	mov    bl,0x17
  40626e:	shl    BYTE PTR [ebp-0x521a126c],cl
  406274:	test   ebp,esp
  406276:	pop    ss
  406277:	cmc    
  406278:	js     0x406228
  40627a:	test   eax,0xf054fa5e
  40627f:	gs out 0x8e,eax
  406282:	test   WORD PTR fs:[ecx-0xc],si
  406287:	dec    eax
  406288:	pop    edx
  406289:	cwde   
  40628a:	(bad)  
  40628b:	push   esi
  40628c:	mov    ecx,0xce9808d5
  406291:	mul    BYTE PTR [edi+0xfc9dbcc]
  406297:	push   ecx
  406298:	or     esp,DWORD PTR [ebx*1+0x2bdec220]
  40629f:	rcr    ecx,1
  4062a1:	jns    0x40623c
  4062a3:	test   eax,0xf2d90296
  4062a8:	mov    ebp,0x2189bd17
  4062ad:	cmp    DWORD PTR [ebx-0x3a33f380],ecx
  4062b3:	xchg   edi,eax
  4062b4:	test   DWORD PTR [esi],edx
  4062b6:	cmovbe ecx,DWORD PTR [ebx+ebx*4]
  4062ba:	sbb    ebp,DWORD PTR [edx]
  4062bc:	ja     0x406256
  4062be:	and    edx,eax
  4062c0:	fst    QWORD PTR [edi]
  4062c2:	mov    ah,0xb1
  4062c4:	push   eax
  4062c5:	dec    edx
  4062c6:	aad    0xd3
  4062c8:	sub    ebp,DWORD PTR [ebx+0x27]
  4062cb:	out    dx,al
  4062cc:	and    edi,DWORD PTR [ecx-0x7d]
  4062cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062d0:	add    dl,al
  4062d2:	push   ds
  4062d3:	fisub  DWORD PTR [edx+0x527421be]
  4062d9:	xchg   esp,eax
  4062da:	stos   DWORD PTR es:[edi],eax
  4062db:	push   edi
  4062dc:	das    
  4062dd:	ins    BYTE PTR es:[edi],dx
  4062de:	mov    eax,0x33f64b5
  4062e3:	inc    edi
  4062e4:	add    BYTE PTR [edi+esi*4+0x5b],ah
  4062e8:	sbb    eax,0x6a050ddc
  4062ed:	and    BYTE PTR gs:[esi-0x3d],bl
  4062f1:	sbb    ebp,DWORD PTR [ecx-0x76]
  4062f4:	sub    cl,BYTE PTR [edx-0x468d6cd7]
  4062fa:	js     0x40629a
  4062fc:	icebp  
  4062fd:	stos   DWORD PTR es:[edi],eax
  4062fe:	jb     0x4062a4
  406300:	jae    0x406344
  406302:	pop    esp
  406303:	sbb    al,0xba
  406305:	mov    WORD PTR [edi-0x5],ss
  406308:	cmp    ch,dl
  40630a:	cmp    DWORD PTR [edi-0x629758af],esi
  406310:	mov    cl,0x82
  406312:	jle    0x4062b1
  406314:	imul   ebp,eax,0xd
  406317:	fiadd  DWORD PTR [eax]
  406319:	jne    0x4062c6
  40631b:	dec    edi
  40631c:	or     al,0x9e
  40631e:	rol    ch,1
  406320:	fmul   QWORD PTR [edx+0x507a44d9]
  406326:	retf   0xf108
  406329:	xchg   DWORD PTR [ecx],edx
  40632b:	cli    
  40632c:	inc    ebp
  40632d:	lods   eax,DWORD PTR ds:[esi]
  40632e:	jg     0x406357
  406330:	in     eax,0x5a
  406332:	scas   eax,DWORD PTR es:[edi]
  406333:	push   ebp
  406334:	push   ds
  406335:	inc    eax
  406336:	jno    0x4062fa
  406338:	pop    ebx
  406339:	nop
  40633a:	stos   DWORD PTR es:[edi],eax
  40633b:	in     al,0xd9
  40633d:	lahf   
  40633e:	push   esp
  40633f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406340:	inc    DWORD PTR [ebp+0x7738164e]
  406346:	jnp    0x406368
  406348:	xor    BYTE PTR [edx+0x5],bh
  40634b:	mov    eax,ds:0xe50c6c70
  406350:	mov    bl,0xfc
  406352:	push   edi
  406353:	dec    edx
  406354:	jg     0x406398
  406356:	xchg   DWORD PTR [ebp+ebx*1-0x25],esp
  40635a:	xchg   ecx,eax
  40635b:	xchg   esi,eax
  40635c:	mov    dl,0xb6
  40635e:	dec    esi
  40635f:	ds push esp
  406361:	and    al,0x6
  406363:	neg    BYTE PTR [esp+edx*1-0x5b2c6f24]
  40636a:	or     BYTE PTR [edi],0x64
  40636d:	pop    edx
  40636e:	retf   
  40636f:	outs   dx,BYTE PTR ds:[esi]
  406370:	jg     0x406399
  406372:	fild   DWORD PTR [eax+0x60]
  406375:	and    al,0x25
  406377:	test   ah,0x79
  40637a:	push   ebx
  40637b:	xor    DWORD PTR [edi+0x585b1d4a],ecx
  406381:	scas   eax,DWORD PTR es:[edi]
  406382:	xchg   esi,eax
  406383:	shr    DWORD PTR [ebx-0x22270a0],1
  406389:	dec    esi
  40638a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40638b:	jbe    0x4063e0
  40638d:	(bad)  
  40638f:	cmp    DWORD PTR [edi+0x11bf1558],esi
  406395:	push   edi
  406396:	lds    eax,FWORD PTR [edx+0x505db5f4]
  40639c:	push   cs
  40639d:	jns    0x4063e6
  40639f:	inc    edx
  4063a0:	or     eax,0x3df38bdf
  4063a5:	inc    ebp
  4063a6:	aaa    
  4063a7:	mov    eax,ds:0x8515b9a
  4063ac:	add    al,0x71
  4063ae:	fistp  DWORD PTR [edi]
  4063b0:	int3   
  4063b1:	mov    DWORD PTR ds:0x7e1dfa10,ebp
  4063b7:	popf   
  4063b8:	mov    ds:0x985e2901,al
  4063bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063be:	fwait
  4063bf:	cmp    dl,BYTE PTR gs:[edi]
  4063c2:	or     bl,ah
  4063c4:	or     esp,esp
  4063c6:	sub    eax,0x1fd3090c
  4063cb:	das    
  4063cc:	mov    ecx,0x93047114
  4063d1:	loopne 0x4063ae
  4063d3:	dec    ebp
  4063d4:	lock jge 0x406358
  4063d7:	fldcw  WORD PTR [ebp+0x52]
  4063da:	mov    esi,esp
  4063dc:	fdivr  QWORD PTR [eax+0x481cf4c2]
  4063e2:	push   0x7b
  4063e4:	sbb    ch,BYTE PTR [ebx]
  4063e6:	jb     0x406420
  4063e8:	repnz fs daa 
  4063eb:	aas    
  4063ec:	pop    esp
  4063ed:	push   ecx
  4063ee:	mov    ebx,DWORD PTR [esi-0x4353d2e2]
  4063f4:	retf   0x8ff8
  4063f7:	mov    eax,0x34c7c907
  4063fc:	cmc    
  4063fd:	outs   dx,DWORD PTR ds:[esi]
  4063fe:	ins    BYTE PTR es:[edi],dx
  4063ff:	ins    DWORD PTR es:[edi],dx
  406400:	les    edi,FWORD PTR [eax+eiz*8-0x15874ec9]
  406407:	xor    ecx,DWORD PTR [edi]
  406409:	cld    
  40640a:	repz xor BYTE PTR [eax+edi*4],dh
  40640e:	adc    DWORD PTR [ecx*2-0x7093769b],esi
  406415:	leave  
  406416:	sub    cl,ah
  406418:	pop    ebp
  406419:	inc    ebp
  40641a:	adc    al,0x34
  40641c:	imul   ebx,DWORD PTR [edi],0xd0ded0b3
  406422:	loop   0x4064a2
  406424:	jg     0x4063d7
  406426:	jo     0x406484
  406428:	and    DWORD PTR [ecx],0xd664177b
  40642e:	shl    BYTE PTR [ecx],1
  406430:	rcl    bl,cl
  406432:	jb     0x406408
  406434:	(bad)  
  406436:	xchg   esp,eax
  406437:	out    dx,eax
  406438:	cdq    
  406439:	push   ds
  40643a:	pop    ds
  40643b:	call   0x90ba63b7
  406440:	xchg   ebp,eax
  406441:	cmc    
  406442:	mov    ecx,0x498e09e3
  406447:	pop    ebx
  406448:	je     0x4064a3
  40644a:	dec    edx
  40644b:	(bad)  
  40644c:	sahf   
  40644d:	daa    
  40644e:	push   ecx
  40644f:	push   eax
  406450:	mov    ah,0x1e
  406452:	add    al,0x71
  406454:	sub    DWORD PTR [ebx-0x8],esi
  406457:	(bad)  
  406458:	cdq    
  406459:	sbb    esi,DWORD PTR [edi]
  40645b:	cmc    
  40645c:	mov    ecx,0xad62ba32
  406461:	push   esp
  406462:	push   esi
  406463:	pop    ecx
  406464:	ds je  0x4064d7
  406467:	pop    eax
  406468:	add    edi,DWORD PTR [esi+esi*4+0x49]
  40646c:	jns    0x40640f
  40646e:	inc    eax
  40646f:	scas   eax,DWORD PTR es:[edi]
  406470:	mov    edx,0xc54e1f5f
  406475:	idiv   DWORD PTR [edi+0x1f27be86]
  40647b:	ins    BYTE PTR es:[edi],dx
  40647c:	fxch   st(7)
  40647e:	hlt    
  40647f:	mov    esi,0xf7babf12
  406484:	push   esp
  406485:	jbe    0x40645f
  406487:	pop    edx
  406488:	xchg   edi,eax
  406489:	stos   DWORD PTR es:[edi],eax
  40648a:	daa    
  40648b:	test   eax,0x7dc3879f
  406490:	lock pop ebx
  406492:	inc    esi
  406493:	lods   eax,DWORD PTR ds:[esi]
  406494:	ss loop 0x406448
  406497:	(bad)  
  406498:	std    
  406499:	sbb    eax,0x69f4d12e
  40649e:	pop    edi
  40649f:	push   eax
  4064a0:	adc    eax,0x40f91d75
  4064a5:	push   ds
  4064a6:	imul   edi,DWORD PTR [ebx+0x6ac9d7c],0xa9616e7a
  4064b0:	adc    ebp,ebp
  4064b2:	ds lock fsubr st(4),st
  4064b6:	jbe    0x40651c
  4064b8:	hlt    
  4064b9:	adc    DWORD PTR [ebx],0x268fe55c
  4064bf:	int3   
  4064c0:	add    eax,0xf232fe80
  4064c5:	jp     0x40653d
  4064c7:	push   ss
  4064c8:	shr    DWORD PTR [esi-0x1c269565],cl
  4064ce:	mov    edx,0x1c555143
  4064d3:	popf   
  4064d4:	cs ss sbb eax,0xbaeaa774
  4064db:	into   
  4064dc:	popa   
  4064dd:	inc    ebx
  4064de:	mov    WORD PTR [eax-0x132479e],gs
  4064e4:	loop   0x40651e
  4064e6:	mov    ecx,0x6da2fba5
  4064eb:	je     0x4064e8
  4064ed:	pop    es
  4064ee:	data16 int3 
  4064f0:	in     al,dx
  4064f1:	xchg   edx,eax
  4064f2:	mov    edi,0x1a5ec654
  4064f7:	test   al,0x91
  4064f9:	jmp    FWORD PTR [ebp-0x55]
  4064fc:	jno    0x4064f3
  4064fe:	cmp    bl,BYTE PTR [ecx-0x73d82c8]
  406504:	xor    BYTE PTR [edi+edx*4+0x649802a4],bl
  40650b:	inc    ecx
  40650c:	fnsave [eax]
  40650e:	in     al,0xbc
  406510:	mov    WORD PTR [ebp-0x12d45014],gs
  406516:	dec    ebx
  406517:	jbe    0x40652e
  406519:	jle    0x40649d
  40651b:	xlat   BYTE PTR ds:[ebx]
  40651c:	sar    BYTE PTR [edi-0x3303d065],cl
  406522:	cmp    al,0x12
  406524:	adc    al,0x8
  406526:	sar    BYTE PTR [edx+ecx*2+0x5e3417bc],1
  40652d:	enter  0x4d93,0xf8
  406531:	push   0xb0f9faa4
  406536:	es pushf 
  406538:	mov    WORD PTR [edi+0x37],gs
  40653b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40653c:	add    ah,bl
  40653e:	xchg   esp,eax
  40653f:	xor    BYTE PTR [ebp+0x5a],ah
  406542:	push   ss
  406543:	jno    0x4064d2
  406545:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406546:	mov    ch,0x7d
  406548:	pop    esi
  406549:	iret   
  40654a:	and    edx,ebp
  40654c:	jp     0x4065a4
  40654e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40654f:	fiadd  WORD PTR [eax+0x2b58fc37]
  406555:	adc    BYTE PTR [ebx-0x18],ah
  406558:	mov    bl,0xfd
  40655a:	pop    edx
  40655b:	mov    ah,0x5f
  40655d:	xor    esp,esi
  40655f:	dec    esi
  406560:	das    
  406561:	out    dx,eax
  406562:	aas    
  406563:	js     0x40659d
  406565:	sub    BYTE PTR [eax+eiz*8+0x4024e0b],bl
  40656c:	xchg   edx,eax
  40656d:	sub    esi,DWORD PTR [edx]
  40656f:	(bad)  
  406570:	ret    0xa84a
  406573:	js     0x406571
  406575:	jnp    0x40654a
  406577:	loopne 0x40654a
  406579:	or     eax,0x6d6aa8c4
  40657e:	sub    bl,BYTE PTR [ebx-0x600438e3]
  406584:	cmp    dl,BYTE PTR [edx]
  406586:	pop    ds
  406587:	fidiv  DWORD PTR [edx]
  406589:	xchg   esi,eax
  40658a:	inc    esi
  40658b:	cmp    bl,cl
  40658d:	or     DWORD PTR [edx+0x2],0xb5d27928
  406594:	cdq    
  406595:	sbb    ch,BYTE PTR [eax-0x80]
  406598:	jns    0x4065e3
  40659a:	sub    eax,0x7a66e99e
  40659f:	mov    eax,ebp
  4065a1:	mov    cl,0x25
  4065a3:	jmp    0x2d193e32
  4065a8:	push   eax
  4065a9:	(bad)  
  4065aa:	dec    ebx
  4065ab:	push   0xffffffa9
  4065ad:	adc    DWORD PTR [ebp+0x27],esp
  4065b0:	pop    ds
  4065b1:	add    DWORD PTR [edi+0x736b9f29],ebp
  4065b7:	mov    ?,esp
  4065b9:	mov    dl,0x90
  4065bb:	pop    es
  4065bc:	dec    ebx
  4065bd:	dec    esi
  4065be:	aaa    
  4065bf:	aas    
  4065c0:	adc    bh,BYTE PTR es:[ebp+0x9]
  4065c4:	leave  
  4065c5:	mov    ds,WORD PTR [edx+0x7]
  4065c8:	lods   al,BYTE PTR ds:[esi]
  4065c9:	cmp    al,0x16
  4065cb:	js     0x4065a7
  4065cd:	loope  0x4065f9
  4065cf:	jno    0x40655b
  4065d1:	pop    ebx
  4065d2:	push   esp
  4065d3:	dec    eax
  4065d4:	and    DWORD PTR [ebx],0x59
  4065d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065d8:	test   eax,0xefad6dfc
  4065dd:	sbb    BYTE PTR [esp+eax*8+0x42],bl
  4065e1:	std    
  4065e2:	ficom  DWORD PTR [ebp+eax*1-0x6f]
  4065e6:	aam    0x74
  4065e8:	xchg   esp,eax
  4065e9:	and    eax,0xda34daad
  4065ee:	ffree  st(2)
  4065f0:	push   0x6bb7496e
  4065f5:	push   ecx
  4065f6:	cmp    BYTE PTR [edx-0x51],0x35
  4065fa:	push   ebp
  4065fb:	or     esi,esi
  4065fd:	xor    BYTE PTR [esi+0x637f5cb7],bl
  406603:	or     BYTE PTR [ebx+0x6357ded0],0xb2
  40660a:	or     DWORD PTR [ebx+0x6aafd7de],eax
  406610:	mov    ch,0x2
  406612:	div    ebx
  406614:	int3   
  406615:	mov    ecx,0x97f578d2
  40661a:	inc    ebp
  40661b:	faddp  st(2),st
  40661d:	fnsave [ecx-0x54]
  406620:	rcl    DWORD PTR [esi+ebp*2],1
  406623:	sub    edx,DWORD PTR [edi-0x6c0f7761]
  406629:	mov    ebx,0xcb0eaa08
  40662e:	jbe    0x406654
  406630:	push   es
  406631:	jl     0x4065e8
  406633:	pop    eax
  406634:	ss pop ebx
  406636:	sub    BYTE PTR ds:[ecx],ch
  406639:	jmp    0x406643
  40663b:	pop    es
  40663c:	fsub   st,st(7)
  40663e:	jp     0x406628
  406640:	push   0xffffffc7
  406642:	imul   esi
  406644:	mov    cl,0x78
  406646:	mov    edx,0xaa891c29
  40664b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40664c:	mov    al,ds:0xd665e4ed
  406651:	enter  0x4848,0x11
  406655:	test   BYTE PTR [eax+0x79fac0a1],dh
  40665b:	retf   0xea9a
  40665e:	hlt    
  40665f:	sahf   
  406660:	mov    edx,0x63572135
  406665:	pandn  mm6,mm3
  406668:	arpl   si,si
  40666a:	stos   DWORD PTR es:[edi],eax
  40666b:	xor    DWORD PTR ss:[eax+edi*8+0x795e78ad],edx
  406673:	out    dx,al
  406674:	mov    ebp,0xd7d338c8
  406679:	push   esi
  40667a:	leave  
  40667b:	cmp    DWORD PTR [ecx-0x6a8a786c],ecx
  406681:	dec    edx
  406682:	arpl   WORD PTR [ecx+0x66],bx
  406685:	xor    al,0xb9
  406687:	jnp    0x40668f
  406689:	popf   
  40668a:	fwait
  40668b:	push   edi
  40668c:	add    al,0x92
  40668e:	aaa    
  40668f:	stos   DWORD PTR es:[edi],eax
  406690:	pop    ds
  406691:	mov    edx,0xae00ec69
  406696:	mov    cl,0x3d
  406698:	pop    edx
  406699:	xor    ebp,DWORD PTR [ecx-0x4740a45d]
  40669f:	(bad)  
  4066a0:	sbb    BYTE PTR [eax],ah
  4066a2:	sbb    cl,BYTE PTR ds:0x38922844
  4066a8:	inc    ebx
  4066a9:	cli    
  4066aa:	pop    ebp
  4066ab:	retf   0x4346
  4066ae:	in     eax,0x23
  4066b0:	ror    DWORD PTR [edi+eax*4-0x69],cl
  4066b4:	out    dx,eax
  4066b5:	clc    
  4066b6:	int    0xac
  4066b8:	jmp    0x40666a
  4066ba:	rcl    BYTE PTR [eax+esi*4+0x37],1
  4066be:	jb     0x406659
  4066c0:	add    ah,BYTE PTR [ebp+0x1a]
  4066c3:	lds    ecx,FWORD PTR [ebp-0x11b45481]
  4066c9:	xchg   edi,eax
  4066ca:	push   cs
  4066cb:	popf   
  4066cc:	lods   eax,DWORD PTR ds:[esi]
  4066cd:	and    DWORD PTR [edi+0x6],esp
  4066d0:	popf   
  4066d1:	add    dh,BYTE PTR [ebx+esi*8]
  4066d4:	mov    ?,edx
  4066d6:	cld    
  4066d7:	cdq    
  4066d8:	out    dx,al
  4066d9:	or     ch,BYTE PTR [ecx]
  4066db:	jns    0x4066b4
  4066dd:	cli    
  4066de:	adc    al,0x34
  4066e1:	or     DWORD PTR [edx+0x5f],eax
  4066e4:	jbe    0x4066ab
  4066e6:	pop    ss
  4066e7:	jno    0x406723
  4066e9:	in     eax,dx
  4066ea:	popa   
  4066eb:	call   0xd892c142
  4066f0:	sub    BYTE PTR [esi+0x61],cl
  4066f3:	in     eax,dx
  4066f4:	push   esp
  4066f5:	mov    eax,ds:0xc51eb657
  4066fa:	repnz daa 
  4066fc:	push   ecx
  4066fd:	aad    0xad
  4066ff:	dec    edi
  406700:	jne    0x40669b
  406702:	hlt    
  406703:	xchg   BYTE PTR [edi],ch
  406705:	xor    BYTE PTR [edx+0x5b8b0d10],al
  40670b:	fldenv [ebp-0x19488179]
  406711:	aad    0x78
  406713:	mov    edi,0xc3177b9
  406718:	in     eax,0xf2
  40671a:	imul   ecx,DWORD PTR [ebx],0x1c646339
  406720:	jmp    0xe816:0xd2111573
  406727:	xor    edi,DWORD PTR [edi-0x6103499f]
  40672d:	fcom   QWORD PTR [ebx]
  40672f:	call   0xd9c:0x1742a7e7
  406736:	rcl    DWORD PTR [ebx],1
  406738:	call   0x5ca3:0x40f16ea2
  40673f:	sti    
  406740:	not    BYTE PTR [edx+edi*4+0x2de8225c]
  406747:	add    bl,BYTE PTR [ecx-0x62]
  40674a:	ja     0x406775
  40674c:	or     edi,DWORD PTR [eax+ecx*2+0x3d]
  406750:	out    0x51,al
  406752:	push   esp
  406753:	mov    eax,0x1e6691f1
  406758:	adc    ebx,DWORD PTR [ebp-0x4664f72d]
  40675e:	ja     0x4067ce
  406760:	add    al,0x62
  406762:	xchg   ebx,eax
  406763:	sub    eax,0x633e3aeb
  406768:	retf   0x6cec
  40676b:	jae    0x406725
  40676d:	inc    esp
  40676e:	ss es cmp al,0x6b
  406772:	out    dx,al
  406773:	cmc    
  406774:	or     DWORD PTR [ebx],ebp
  406776:	data16 mov ds,WORD PTR [ebx]
  406779:	inc    ecx
  40677a:	lock mov esp,0xa0a429b9
  406780:	inc    edi
  406781:	jno    0x4067cd
  406783:	push   ss
  406784:	fist   WORD PTR [ecx+ecx*4-0x7b8dc646]
  40678b:	jo     0x4067cf
  40678d:	push   ebp
  40678e:	add    al,0x3
  406790:	mov    dl,0xe
  406792:	or     esp,DWORD PTR [eax-0x5f396084]
  406798:	enter  0x88d,0x8c
  40679c:	loop   0x4067c1
  40679e:	jmp    0x4067dc
  4067a0:	push   eax
  4067a1:	xchg   edx,eax
  4067a2:	test   BYTE PTR [esi],bh
  4067a4:	jg     0x406783
  4067a6:	push   ebx
  4067a7:	(bad)  
  4067a8:	mov    ebx,0x34640cbb
  4067ad:	jb     0x4067bd
  4067af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067b0:	stos   DWORD PTR es:[edi],eax
  4067b1:	test   al,0xac
  4067b3:	ss xor al,0xd6
  4067b6:	arpl   WORD PTR [edx-0x63],dx
  4067b9:	xchg   edx,eax
  4067ba:	mov    al,0x57
  4067bc:	jno    0x4067e1
  4067be:	xchg   ebx,eax
  4067bf:	mov    ebp,0xcd50d938
  4067c4:	lods   eax,DWORD PTR ds:[esi]
  4067c5:	fsin   
  4067c7:	mov    eax,0x6f1147e1
  4067cc:	cmp    BYTE PTR [eax],0x6e
  4067cf:	xor    BYTE PTR [edx*4-0x72b69012],cl
  4067d6:	sub    ah,BYTE PTR [ebx]
  4067d8:	xchg   ebp,eax
  4067d9:	ficomp DWORD PTR [edx+0xf]
  4067dc:	dec    edi
  4067dd:	fiadd  WORD PTR ds:0x5748e93f
  4067e3:	jns    0x406821
  4067e5:	cmp    DWORD PTR [ebp-0x5e],ecx
  4067e8:	sbb    BYTE PTR [edi+0x72],dl
  4067eb:	out    0x27,eax
  4067ed:	mov    ds:0x2456b792,eax
  4067f2:	push   edi
  4067f3:	dec    ebx
  4067f4:	mov    cl,BYTE PTR [edi+0x21ab7a3a]
  4067fa:	cmp    al,0x97
  4067fc:	push   ds
  4067fd:	adc    eax,0xdba17d30
  406802:	or     edi,DWORD PTR [ecx+0x7]
  406805:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406806:	push   edi
  406807:	and    al,0xc7
  406809:	jne    0x4067a7
  40680b:	jle    0x406821
  40680d:	fucom  st(1)
  40680f:	cmp    cl,ch
  406811:	(bad)  
  406812:	outs   dx,DWORD PTR ds:[esi]
  406813:	ss pop ss
  406815:	or     BYTE PTR ds:0x30daa99f,dl
  40681b:	ins    DWORD PTR es:[edi],dx
  40681c:	(bad)  
  40681e:	int    0x4f
  406820:	sub    al,BYTE PTR [esi+0x40]
  406823:	arpl   WORD PTR [edx],bx
  406825:	xor    BYTE PTR [esi],ah
  406827:	mov    ebp,0x569503a5
  40682c:	dec    esi
  40682d:	fistp  DWORD PTR [eax+ecx*8-0x44]
  406831:	adc    esi,DWORD PTR [esi*1+0x6e05c579]
  406838:	push   ebx
  406839:	scas   eax,DWORD PTR es:[edi]
  40683a:	dec    edx
  40683b:	dec    esp
  40683c:	add    eax,0x9f9230ae
  406841:	xor    eax,0xd6308c40
  406846:	or     eax,0x491e5fc3
  40684b:	mov    eax,ds:0x7c70ccbd
  406850:	or     eax,0x189e3a3d
  406855:	sbb    bl,ch
  406857:	idiv   DWORD PTR [ecx]
  406859:	into   
  40685a:	jmp    0xea92a5d8
  40685f:	cs call 0xca31:0xcd0cead7
  406867:	ror    BYTE PTR [edx+esi*1],1
  40686a:	cmp    al,BYTE PTR [eax-0x69d257b4]
  406870:	loop   0x4068ad
  406872:	dec    esp
  406873:	adc    edx,DWORD PTR [edx]
  406875:	fs mov esp,0xa46f6514
  40687b:	push   0xffffffea
  40687d:	sets   bl
  406880:	rcl    DWORD PTR [ebp-0x65],0x8b
  406884:	call   0x509:0x4aebf476
  40688b:	sub    cl,BYTE PTR [ecx+0x3e]
  40688e:	cs cwde 
  406890:	mov    cl,0xc1
  406892:	test   al,0x15
  406894:	add    DWORD PTR [eax],0xffffff8e
  406897:	dec    eax
  406898:	rol    esp,0xc1
  40689b:	or     bh,BYTE PTR [eax+0x6bf7297f]
  4068a1:	es inc edi
  4068a3:	fisub  WORD PTR [ebp+0x2]
  4068a6:	(bad)  
  4068a8:	adc    BYTE PTR [ecx-0x7b],bl
  4068ab:	inc    ebx
  4068ac:	dec    ecx
  4068ad:	jl     0x4068a0
  4068af:	xchg   ecx,eax
  4068b0:	out    0x61,eax
  4068b2:	out    dx,al
  4068b3:	data16 das 
  4068b5:	mov    ds:0x679f60a6,eax
  4068ba:	push   ss
  4068bb:	les    edi,FWORD PTR [ebx]
  4068bd:	test   edi,ebp
  4068bf:	cld    
  4068c0:	je     0x4068ed
  4068c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068c3:	int3   
  4068c4:	mov    esp,0x5d5eea07
  4068c9:	popf   
  4068ca:	adc    eax,0xd1f41aac
  4068cf:	mov    bl,0x82
  4068d1:	inc    esp
  4068d2:	shr    dh,1
  4068d4:	mov    bh,0x6
  4068d6:	out    0x1f,al
  4068d8:	test   BYTE PTR [edi+edx*1+0x76bc7837],cl
  4068df:	adc    al,0xba
  4068e1:	daa    
  4068e2:	nop
  4068e3:	inc    edx
  4068e4:	mov    bl,0x98
  4068e6:	push   ds
  4068e7:	xchg   edi,eax
  4068e8:	cmp    eax,0xcb3f2939
  4068ed:	shl    BYTE PTR [ebp-0x374d7186],cl
  4068f3:	pop    eax
  4068f4:	ss jg  0x4068c9
  4068f7:	mov    ecx,0xb9324199
  4068fc:	jmp    0x1d25:0xadbf9c4e
  406903:	lods   eax,DWORD PTR ds:[esi]
  406904:	xlat   BYTE PTR ds:[ebx]
  406905:	mov    esp,0x719a530b
  40690a:	xor    DWORD PTR [eax-0x3ac3670],ecx
  406910:	(bad)  
  406911:	pop    esp
  406912:	and    al,0x31
  406914:	push   edx
  406915:	pop    esi
  406916:	and    eax,0x4c898b52
  40691b:	lods   al,BYTE PTR ds:[esi]
  40691c:	out    0x22,eax
  40691e:	sahf   
  40691f:	xchg   DWORD PTR [ebx+0x2b462c79],esp
  406925:	mov    ds:0xb7784562,al
  40692a:	sbb    esp,ebx
  40692c:	and    esp,DWORD PTR [ebx+0x29]
  40692f:	popf   
  406930:	std    
  406931:	jge    0x40691f
  406933:	fdivp  st(7),st
  406935:	fbld   TBYTE PTR [ebx+0x49]
  406938:	popf   
  406939:	mov    cl,0x26
  40693b:	push   ds
  40693c:	leave  
  40693d:	mov    edi,0x174f603f
  406942:	in     eax,0x9b
  406944:	inc    ecx
  406945:	fisttp DWORD PTR [edi]
  406947:	push   esp
  406948:	xchg   esp,eax
  406949:	jl     0x406901
  40694b:	push   ebp
  40694c:	test   DWORD PTR [edx-0x26],ecx
  40694f:	pop    ebp
  406950:	add    al,BYTE PTR [esi+0x26]
  406953:	nop
  406954:	cmp    ah,bh
  406956:	shl    al,0xda
  406959:	xchg   edi,eax
  40695a:	pushf  
  40695b:	ror    BYTE PTR [eax-0x24faf23d],cl
  406961:	pop    ss
  406962:	adc    al,0x13
  406964:	push   esp
  406965:	inc    esi
  406966:	adc    eax,0x2d1473b7
  40696b:	add    bh,BYTE PTR [edx-0x42]
  40696e:	or     DWORD PTR [esi+0x22683367],esi
  406974:	popa   
  406975:	jno    0x40695f
  406977:	fnsave [ecx-0x2e]
  40697a:	out    0xc3,al
  40697c:	jb     0x406987
  40697e:	and    BYTE PTR [eax],al
  406980:	shl    BYTE PTR [edi+0x17],cl
  406983:	int3   
  406984:	sbb    DWORD PTR [eax],esp
  406986:	push   0x51
  406988:	push   esp
  406989:	push   ds
  40698a:	shl    DWORD PTR [ebx+eiz*4+0x94e63a3],1
  406991:	mov    bh,0xa9
  406993:	xor    eax,0xbb7ebc1c
  406998:	fsubr  DWORD PTR [esi+ebp*1]
  40699b:	repz daa 
  40699d:	sbb    eax,0xfe4a3ac5
  4069a2:	test   al,0xd8
  4069a4:	ins    DWORD PTR es:[edi],dx
  4069a5:	mov    esp,0x19068f61
  4069aa:	das    
  4069ab:	sahf   
  4069ac:	outs   dx,DWORD PTR ds:[esi]
  4069ad:	setp   BYTE PTR [esi]
  4069b0:	xchg   esp,eax
  4069b1:	inc    esp
  4069b2:	or     BYTE PTR [edx+edx*4],ah
  4069b5:	(bad)  
  4069b6:	cmp    eax,0x1bef2970
  4069bb:	and    ah,BYTE PTR [ecx-0x7f]
  4069be:	gs and eax,0x7cffda78
  4069c4:	shl    DWORD PTR [ebx],1
  4069c6:	sbb    eax,0x37b7a24d
  4069cb:	xchg   edx,eax
  4069cc:	sahf   
  4069cd:	mov    ebx,0x9184ae0a
  4069d2:	adc    edi,DWORD PTR [esi+0x3]
  4069d5:	cmp    DWORD PTR [esi],edx
  4069d7:	dec    esp
  4069d8:	stos   DWORD PTR es:[edi],eax
  4069d9:	xchg   esi,eax
  4069da:	inc    edi
  4069db:	pusha  
  4069dc:	cmp    eax,0x1621bee8
  4069e1:	call   0xe55b:0x92b6a1c6
  4069e8:	xor    al,0x7d
  4069ea:	mov    ebx,0xaeb19a04
  4069ef:	mov    bl,dh
  4069f1:	mov    bh,0xb1
  4069f3:	mov    ds:0x2cfa5010,eax
  4069f8:	cld    
  4069f9:	int3   
  4069fa:	shr    ebp,cl
  4069fc:	js     0x4069f7
  4069fe:	aad    0x83
  406a00:	sbb    eax,0xe7e22003
  406a05:	push   ss
  406a06:	cdq    
  406a07:	jo     0x4069ff
  406a09:	mul    DWORD PTR [eax]
  406a0b:	bound  ebx,QWORD PTR [ebx+eiz*4]
  406a0e:	adc    DWORD PTR [esi-0x1d2606e8],ecx
  406a14:	mov    ch,dl
  406a16:	add    eax,0xf464e893
  406a1b:	retf   
  406a1c:	dec    ebx
  406a1d:	add    eax,0x8d7e1b00
  406a22:	sbb    esp,DWORD PTR ss:[ebx+0x5d]
  406a26:	adc    eax,DWORD PTR [ecx+ebp*4+0x73]
  406a2a:	cdq    
  406a2b:	mov    al,0xb7
  406a2d:	rcr    bl,0xde
  406a30:	mov    dh,0x3
  406a32:	stos   BYTE PTR es:[edi],al
  406a33:	or     eax,0x95958cc4
  406a38:	mov    eax,0xd07b467a
  406a3d:	add    BYTE PTR [ecx],cl
  406a3f:	jns    0x406a90
  406a41:	mov    dh,0xfb
  406a43:	adc    ah,BYTE PTR [eax]
  406a45:	pop    ds
  406a46:	out    0xd9,al
  406a48:	xor    ecx,DWORD PTR [esp+ebp*8]
  406a4b:	adc    eax,0xf01ec40c
  406a50:	push   esp
  406a51:	(bad)  [ebp+eax*8-0x19]
  406a55:	add    eax,0x61268871
  406a5a:	ror    edx,0x64
  406a5d:	mov    bh,0xac
  406a5f:	bound  esp,QWORD PTR [eax-0x25d46f0c]
  406a65:	xchg   DWORD PTR [edi-0x4ce6b0d2],eax
  406a6b:	test   ebx,ebx
  406a6d:	adc    al,0x6f
  406a6f:	pop    edi
  406a70:	int3   
  406a71:	sub    al,0x3d
  406a73:	or     eax,0x47742626
  406a78:	call   0x51e92456
  406a7d:	dec    ebp
  406a7e:	loope  0x406a66
  406a80:	push   cs
  406a81:	xor    dl,BYTE PTR [esi-0x3bb6591b]
  406a87:	mov    ds:0x56c2fe00,eax
  406a8c:	into   
  406a8d:	idiv   DWORD PTR [ebp-0x80]
  406a90:	add    al,0x6c
  406a92:	das    
  406a93:	(bad)  
  406a94:	ficom  WORD PTR [ebx]
  406a96:	add    DWORD PTR [esi],edi
  406a98:	aam    0x97
  406a9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a9b:	ins    DWORD PTR es:[edi],dx
  406a9c:	add    al,0xe1
  406a9e:	add    al,0xc
  406aa0:	ficomp DWORD PTR [ebx*4-0x38e0bb12]
  406aa7:	lock mov ebx,0xc8078991
  406aad:	int    0x58
  406aaf:	aaa    
  406ab0:	pop    ebx
  406ab1:	xor    DWORD PTR [ecx-0x48868cfc],edi
  406ab7:	push   ss
  406ab8:	or     edx,DWORD PTR [eax]
  406aba:	push   edi
  406abb:	fs popa 
  406abd:	and    al,0xaa
  406abf:	out    0x3e,al
  406ac1:	loop   0x406b08
  406ac3:	fistp  DWORD PTR [ebx-0x53]
  406ac6:	inc    ebx
  406ac7:	dec    esi
  406ac8:	fistp  QWORD PTR [ebp+0x5e4600e5]
  406ace:	or     al,0xcd
  406ad0:	imul   ebp,DWORD PTR [edx+0x9],0x4f4802c2
  406ad7:	xchg   esp,eax
  406ad8:	inc    ecx
  406ad9:	lods   al,BYTE PTR ds:[esi]
  406ada:	maskmovq mm1,(bad)
  406adb:	test   DWORD PTR [edx+0x70],0xa078bac6
  406ae2:	mov    eax,DWORD PTR [ecx+0x29e07456]
  406ae8:	mov    dh,0xc3
  406aea:	push   ds
  406aeb:	std    
  406aec:	mov    ah,0x1a
  406aee:	hlt    
  406aef:	repnz mov fs,WORD PTR [ecx]
  406af2:	mov    esi,0xec81622f
  406af8:	mov    al,ds:0x986eab9f
  406afd:	scas   al,BYTE PTR es:[edi]
  406afe:	out    0xdb,eax
  406b00:	sti    
  406b01:	inc    esi
  406b02:	out    0xc0,al
  406b04:	jp     0x406a8c
  406b06:	dec    ebx
  406b07:	pop    esi
  406b08:	stc    
  406b09:	cmp    DWORD PTR [esi+esi*2+0x9],ebx
  406b0d:	push   esi
  406b0e:	dec    esi
  406b0f:	(bad)  
  406b10:	retf   
  406b11:	mov    ds:0x2ed4b7ad,eax
  406b16:	out    0x47,al
  406b18:	sub    eax,0xd71baf05
  406b1e:	push   cs
  406b1f:	rcl    DWORD PTR [edi+0x56b1dec3],0x3b
  406b26:	fs cli 
  406b28:	dec    esp
  406b29:	popa   
  406b2a:	enter  0xecb3,0x74
  406b2e:	in     eax,0xd3
  406b30:	int3   
  406b31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b32:	pop    ss
  406b33:	inc    esi
  406b34:	or     al,0xda
  406b36:	fxch   st(5)
  406b38:	(bad)  
  406b3a:	cmp    BYTE PTR [eax+esi*4],al
  406b3d:	inc    edi
  406b3e:	test   BYTE PTR [eax+ebx*2+0x7b945775],ah
  406b45:	jbe    0x406b62
  406b47:	data16 aaa 
  406b49:	stos   DWORD PTR es:[edi],eax
  406b4a:	xchg   esi,eax
  406b4b:	and    ebp,DWORD PTR [esi]
  406b4d:	mov    ecx,0xe0ba2087
  406b52:	xchg   esi,eax
  406b53:	fsubr  DWORD PTR [ecx]
  406b55:	or     BYTE PTR [ecx+0x4e675e9c],ch
  406b5b:	jle    0x406b6b
  406b5d:	mov    cl,0x81
  406b5f:	lods   eax,DWORD PTR ds:[esi]
  406b60:	stos   DWORD PTR es:[edi],eax
  406b61:	inc    eax
  406b62:	call   0x6750:0xeac8c565
  406b69:	sbb    eax,0xc70c09f1
  406b6e:	cdq    
  406b6f:	mov    ecx,0xe1c41c51
  406b74:	jge    0x406b73
  406b76:	mov    BYTE PTR ds:0x1db19cf6,dh
  406b7c:	jmp    0x1436:0x641ae652
  406b83:	imul   edx,esi,0xffffff8a
  406b86:	(bad)  
  406b87:	fisub  DWORD PTR [eax]
  406b89:	test   BYTE PTR [edi-0x62],0x84
  406b8d:	or     ecx,ecx
  406b8f:	mov    ecx,0x2f27ba4c
  406b94:	data16 sbb dh,BYTE PTR [eax+0x1f04d967]
  406b9b:	lea    ecx,[edx+0x1e]
  406b9e:	xchg   ecx,eax
  406b9f:	(bad)  
  406ba0:	int3   
  406ba1:	test   al,0x8
  406ba3:	repnz enter 0xc7e3,0x2a
  406ba8:	add    ch,BYTE PTR [ebp-0x50]
  406bab:	jo     0x406b9f
  406bad:	and    BYTE PTR [edi],bh
  406baf:	adc    dh,dh
  406bb1:	jecxz  0x406c1c
  406bb3:	push   esi
  406bb4:	mov    esp,0xc6e0dc14
  406bb9:	pop    esi
  406bba:	or     al,0x3f
  406bbc:	xchg   esi,eax
  406bbd:	or     al,BYTE PTR [eax]
  406bbf:	mul    al
  406bc1:	daa    
  406bc2:	and    DWORD PTR [esi],esi
  406bc4:	sbb    BYTE PTR [edx-0x394575bd],ah
  406bca:	je     0x406bee
  406bcc:	mov    ecx,0x51abaef8
  406bd1:	cmp    BYTE PTR [eax+0x22],bh
  406bd4:	xor    ch,bh
  406bd6:	ins    BYTE PTR es:[edi],dx
  406bd7:	add    DWORD PTR [esi-0x31],edi
  406bda:	mov    edi,0x4a901be0
  406bdf:	push   esi
  406be0:	aad    0xb2
  406be2:	mov    ebx,0x8adcdfcf
  406be7:	jmp    0x406c41
  406be9:	jne    0x406bd0
  406beb:	xor    BYTE PTR [ecx],cl
  406bed:	mov    WORD PTR [edx-0x37ba9b3b],gs
  406bf3:	jbe    0x406b8b
  406bf5:	sbb    BYTE PTR [esi-0x4b728477],0xc
  406bfc:	fcmovne st,st(0)
  406bfe:	dec    ebp
  406bff:	inc    ebp
  406c00:	jae    0x406bcd
  406c02:	xchg   dl,cl
  406c04:	repnz sub al,0x1c
  406c07:	jns    0x406c04
  406c09:	sub    BYTE PTR ds:0x33976077,bl
  406c0f:	aaa    
  406c10:	into   
  406c11:	bound  edi,QWORD PTR [eax+0x6a77cc10]
  406c17:	repz mov ?,WORD PTR [esi+ebp*1-0x187fe287]
  406c1f:	out    0xbf,al
  406c21:	hlt    
  406c22:	adc    ch,dl
  406c24:	sbb    DWORD PTR [edx+edi*8+0x20a3bcac],0x5bd408b4
  406c2f:	pop    edi
  406c30:	pop    esi
  406c31:	mov    ebp,0x7166f1b7
  406c36:	xor    DWORD PTR [ebp+0x54730426],ecx
  406c3c:	mov    eax,DWORD PTR [eax+0x5e229d1]
  406c42:	loope  0x406c5c
  406c44:	test   DWORD PTR [edx-0x49],ebp
  406c47:	scas   al,BYTE PTR es:[edi]
  406c48:	mov    BYTE PTR [ebx+0x43],ch
  406c4b:	sub    bl,BYTE PTR [ecx]
  406c4d:	dec    esi
  406c4e:	sbb    bl,BYTE PTR [ecx]
  406c50:	(bad)  
  406c51:	pop    eax
  406c52:	sub    ebx,ebx
  406c54:	pop    ss
  406c55:	popa   
  406c56:	or     eax,0x5f517f90
  406c5b:	daa    
  406c5c:	lock sub BYTE PTR [ecx+0x2],ah
  406c60:	adc    ch,BYTE PTR [esi]
  406c62:	push   ebp
  406c63:	movnti DWORD PTR [ebp+ebp*1+0x3416ca17],esi
  406c6b:	cdq    
  406c6c:	mov    ch,0xb4
  406c6e:	xchg   esi,eax
  406c6f:	adc    edi,edx
  406c71:	sbb    BYTE PTR [ebx],0xa2
  406c74:	pop    edx
  406c75:	mov    ebp,ss
  406c77:	sti    
  406c78:	stos   BYTE PTR es:[edi],al
  406c79:	jae    0x406c64
  406c7b:	stos   DWORD PTR es:[edi],eax
  406c7c:	(bad)  
  406c7d:	jmp    0x406c14
  406c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c81:	sar    al,1
  406c83:	fisub  DWORD PTR [ebx-0x357348d2]
  406c89:	mov    al,0x32
  406c8b:	lods   al,BYTE PTR ds:[esi]
  406c8c:	cwde   
  406c8d:	es ja  0x406c31
  406c90:	rcr    DWORD PTR [ebx-0x2ceb75e3],cl
  406c96:	xor    ebx,DWORD PTR [ebx-0x48]
  406c99:	jge    0x406cc7
  406c9b:	outs   dx,DWORD PTR ds:[esi]
  406c9c:	sbb    ah,BYTE PTR [edx+0x7023146a]
  406ca2:	pop    esp
  406ca3:	call   0xf44f:0x2d82c2d9
  406caa:	mov    BYTE PTR [esi-0x29bf3130],0xc2
  406cb1:	je     0x406c72
  406cb3:	and    bl,BYTE PTR [eax+0x2c]
  406cb6:	idiv   dh
  406cb8:	mov    eax,DWORD PTR [ebp+edi*4-0x77dd4363]
  406cbf:	pop    ebx
  406cc0:	je     0x406c80
  406cc2:	ins    BYTE PTR es:[edi],dx
  406cc3:	aas    
  406cc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cc6:	sbb    al,0x7e
  406cc8:	or     BYTE PTR [ebx-0x60c1851c],al
  406cce:	xor    cl,BYTE PTR [edx]
  406cd0:	pop    ds
  406cd1:	mov    dl,0x2e
  406cd3:	and    BYTE PTR [esi+edi*4-0x64],cl
  406cd7:	bound  esi,QWORD PTR [ebx-0x4c94b594]
  406cdd:	push   esi
  406cde:	mov    al,gs:0xe0678fb2
  406ce4:	mov    al,ds:0x2a7d6a2e
  406ce9:	(bad)  
  406cea:	stos   BYTE PTR es:[edi],al
  406ceb:	lods   al,BYTE PTR ds:[esi]
  406cec:	outs   dx,BYTE PTR ds:[esi]
  406ced:	and    BYTE PTR [ecx-0x20],dl
  406cf0:	cmp    al,0xac
  406cf2:	sahf   
  406cf3:	inc    DWORD PTR [ecx-0x12]
  406cf6:	les    esp,FWORD PTR [esi+0x75]
  406cf9:	sar    ah,cl
  406cfb:	adc    al,0xc9
  406cfd:	(bad)  
  406cfe:	retf   
  406cff:	idiv   DWORD PTR [esi+0x3b]
  406d02:	or     al,0x73
  406d04:	adc    BYTE PTR [eax+0x0],bh
  406d07:	sbb    BYTE PTR ds:0x9a2c04f7,dh
  406d0d:	imul   edi,DWORD PTR [esi],0xebac20f1
  406d13:	jl     0x406d17
  406d15:	jg     0x406d82
  406d17:	popf   
  406d18:	inc    ecx
  406d19:	jecxz  0x406cf4
  406d1b:	test   eax,0x773151d1
  406d20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d21:	popf   
  406d22:	lods   al,BYTE PTR ds:[esi]
  406d23:	mov    WORD PTR [edx],gs
  406d25:	das    
  406d26:	test   DWORD PTR [ecx],edx
  406d28:	aaa    
  406d29:	test   ch,bl
  406d2b:	push   esp
  406d2c:	push   eax
  406d2d:	pop    edx
  406d2e:	adc    DWORD PTR [esp+ecx*8],0x11
  406d32:	jge    0x406d62
  406d34:	(bad)  [ebx-0x2f]
  406d37:	scas   eax,DWORD PTR es:[edi]
  406d38:	rol    BYTE PTR [ecx+0x6efc42d],1
  406d3e:	ins    DWORD PTR es:[edi],dx
  406d3f:	and    eax,DWORD PTR [edi]
  406d41:	or     BYTE PTR [ebx],0x3b
  406d44:	retf   
  406d45:	sti    
  406d46:	test   DWORD PTR [eax+0x5f],edi
  406d49:	mov    ecx,ss
  406d4b:	sbb    esi,DWORD PTR [ebx+ebp*2]
  406d4e:	adc    ah,bl
  406d50:	mov    ebp,0x1b04293d
  406d55:	and    DWORD PTR [ebp+0x5cd409b7],ebp
  406d5b:	mov    BYTE PTR [edx+0x79],ch
  406d5e:	aad    0x76
  406d60:	jns    0x406d3d
  406d62:	out    0x38,eax
  406d64:	stos   BYTE PTR es:[edi],al
  406d65:	sbb    eax,0xaabf5bd8
  406d6a:	fidiv  DWORD PTR [esi-0x17]
  406d6d:	cld    
  406d6e:	outs   dx,BYTE PTR ds:[esi]
  406d6f:	push   eax
  406d70:	mov    bh,0xbf
  406d72:	cs mov ah,0xca
  406d75:	adc    eax,0xc5f71b8
  406d7a:	arpl   WORD PTR ds:0xe3e5c362,si
  406d80:	lock or BYTE PTR [ebx-0x6b],bh
  406d84:	ud2    
  406d86:	je     0x406d5c
  406d88:	xchg   esp,esp
  406d8a:	lock ret 
  406d8c:	cwde   
  406d8d:	adc    esp,DWORD PTR [esi]
  406d8f:	push   es
  406d90:	inc    ebp
  406d91:	cwde   
  406d92:	cmp    edx,DWORD PTR [ebx+0x7418fb22]
  406d98:	add    eax,0x7e16294d
  406d9d:	jmp    0x7a5a:0xbcb2f406
  406da4:	popf   
  406da5:	push   es
  406da6:	cmp    al,0xfd
  406da8:	arpl   WORD PTR [esi],bx
  406daa:	aad    0x58
  406dac:	and    al,0x95
  406dae:	mov    ds:0x66f3f56,al
  406db3:	div    ebp
  406db5:	pop    ds
  406db6:	jg     0x406d7a
  406db8:	push   cs
  406db9:	push   0xf7f27146
  406dbe:	mov    eax,0x73444947
  406dc3:	hlt    
  406dc4:	pushf  
  406dc5:	mov    al,0xb
  406dc7:	mov    ebp,0x57d530d5
  406dcc:	ins    BYTE PTR es:[edi],dx
  406dcd:	ret    
  406dce:	pop    ebp
  406dcf:	push   edx
  406dd0:	shl    BYTE PTR [edi-0xd],cl
  406dd3:	out    0xeb,eax
  406dd5:	and    dh,BYTE PTR [eax-0x3f]
  406dd8:	pushf  
  406dd9:	sub    eax,0x5645f4f9
  406dde:	cmp    al,0xa8
  406de0:	lods   eax,DWORD PTR ds:[esi]
  406de1:	je     0x406da1
  406de3:	mov    dl,0xee
  406de5:	xchg   ebx,eax
  406de6:	(bad)  
  406de7:	imul   BYTE PTR [ecx-0x74]
  406dea:	mov    ch,0xca
  406dec:	inc    edi
  406ded:	jne    0x406d73
  406def:	mov    WORD PTR [edi],ss
  406df1:	push   edi
  406df2:	in     eax,0x4a
  406df4:	lock ror DWORD PTR [ebx+0x788115ce],0x29
  406dfc:	int3   
  406dfd:	das    
  406dfe:	std    
  406dff:	nop
  406e00:	retf   
  406e01:	out    0x4b,al
  406e03:	(bad)  
  406e04:	lods   eax,DWORD PTR ds:[esi]
  406e05:	cs popa 
  406e07:	ror    BYTE PTR [edx-0x1a31dd85],cl
  406e0d:	lods   al,BYTE PTR ds:[esi]
  406e0e:	push   ecx
  406e0f:	jle    0x406e05
  406e11:	ja     0x406dab
  406e13:	mov    bh,0x17
  406e15:	(bad)  
  406e16:	lea    ebx,[ecx-0x59]
  406e19:	popf   
  406e1a:	cmp    eax,0xaa039bb7
  406e1f:	sbb    al,BYTE PTR [eax+0x3e]
  406e22:	ins    DWORD PTR es:[edi],dx
  406e23:	fdiv   DWORD PTR [ebx+0x4e]
  406e26:	dec    ecx
  406e27:	js     0x406e17
  406e29:	dec    eax
  406e2a:	mov    ss,WORD PTR [ebp+0x62]
  406e2d:	les    edi,FWORD PTR [esi]
  406e2f:	gs out 0xd7,eax
  406e32:	enter  0x2984,0xce
  406e36:	xor    DWORD PTR [ebx],ecx
  406e38:	lods   al,BYTE PTR ds:[esi]
  406e39:	ss inc eax
  406e3b:	xchg   edi,eax
  406e3c:	lds    ebx,FWORD PTR [esi-0x1dba8ab0]
  406e42:	ret    
  406e43:	inc    ebp
  406e44:	add    edi,edx
  406e46:	outs   dx,DWORD PTR ds:[esi]
  406e47:	mov    esi,0xa9c4bcea
  406e4c:	inc    edi
  406e4d:	adc    eax,0x3bd1f402
  406e52:	xchg   ebx,eax
  406e53:	inc    edx
  406e54:	inc    edi
  406e55:	(bad)  
  406e56:	mov    ebx,0x22268e4
  406e5b:	loope  0x406e24
  406e5d:	cwde   
  406e5e:	outs   dx,DWORD PTR ds:[esi]
  406e5f:	sbb    BYTE PTR [eax-0x70],ah
  406e62:	pop    ecx
  406e63:	imul   ecx,esp,0x8884a9aa
  406e69:	add    al,BYTE PTR [eax]
  406e6b:	ret    
  406e6c:	push   cs
  406e6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e6e:	jp     0x406dfe
  406e70:	daa    
  406e71:	adc    DWORD PTR [edi-0x69259ce2],ebx
  406e77:	repz push eax
  406e79:	std    
  406e7a:	sub    eax,edi
  406e7c:	mov    WORD PTR [ebp+eax*2-0x2f],?
  406e80:	(bad)  
  406e81:	outs   dx,DWORD PTR ds:[esi]
  406e82:	shl    BYTE PTR [edx+0x4b81fa34],0x3
  406e89:	push   0xffffffda
  406e8b:	out    0x89,al
  406e8d:	sub    DWORD PTR [eax+ebx*1],0x5535bab3
  406e94:	push   ebp
  406e95:	dec    edi
  406e96:	mul    BYTE PTR [edx+0x4c5c14]
  406e9c:	(bad)  
  406e9e:	movd   mm2,DWORD PTR [edx]
  406ea1:	sub    ebx,0xd293580e
  406ea7:	adc    dl,al
  406ea9:	jecxz  0x406e4d
  406eab:	push   0x69
  406ead:	retf   0x2d80
  406eb0:	jno    0x406f22
  406eb2:	test   DWORD PTR ds:0x36af9ed2,esp
  406eb8:	xor    BYTE PTR [ecx],al
  406eba:	pop    es
  406ebb:	stc    
  406ebc:	jle    0x406e41
  406ebe:	daa    
  406ebf:	aaa    
  406ec0:	(bad)
  406ec3:	outs   dx,DWORD PTR ds:[esi]
  406ec4:	mov    dh,0x4c
  406ec6:	jmp    0x406f0e
  406ec8:	out    0x25,eax
  406eca:	sub    eax,0x2a873b8
  406ecf:	pop    ebx
  406ed0:	inc    edx
  406ed1:	and    BYTE PTR [edx],bh
  406ed3:	pop    eax
  406ed4:	mov    bh,0xf1
  406ed6:	or     DWORD PTR [eax-0x4f],esi
  406ed9:	mov    ?,WORD PTR [esi+0x6f]
  406edc:	stos   DWORD PTR es:[edi],eax
  406edd:	sub    DWORD PTR [eax-0x9148e36],edx
  406ee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ee4:	pop    ebx
  406ee5:	fcmovnb st,st(1)
  406ee7:	adc    eax,DWORD PTR [edi+0x3e]
  406eea:	fdivr  QWORD PTR [edx-0x72a23cc4]
  406ef0:	mov    ah,0x68
  406ef2:	or     BYTE PTR [esp+eiz*8-0x36f7bc8a],ah
  406ef9:	out    dx,eax
  406efa:	lds    ebp,FWORD PTR ds:0xdc7fbf4e
  406f00:	mov    gs,WORD PTR [esi]
  406f02:	jg     0x406ef7
  406f04:	int3   
  406f05:	fisub  DWORD PTR [edi+0x26]
  406f08:	or     BYTE PTR [edi+0x3e],ch
  406f0b:	arpl   dx,sp
  406f0d:	jge    0x406f31
  406f0f:	add    ch,BYTE PTR [ebp+0x2a5128ba]
  406f15:	sub    ch,dh
  406f17:	cdq    
  406f18:	push   edx
  406f19:	pop    ecx
  406f1a:	call   0x7d26:0xaa93e230
  406f21:	mov    bh,0xea
  406f23:	jge    0x406efa
  406f25:	pop    ecx
  406f26:	push   esi
  406f27:	(bad)  
  406f28:	mov    eax,ds:0xc385ce0a
  406f2d:	xchg   ebx,eax
  406f2e:	add    cl,0x43
  406f31:	data16 fs fs add BYTE PTR fs:[edx-0x7f],bh
  406f38:	aad    0x9
  406f3a:	xor    ebp,DWORD PTR [edi]
  406f3c:	call   0x41d1b009
  406f41:	repnz shl BYTE PTR [esp+esi*4],0x8b
  406f46:	test   al,0xef
  406f48:	cmp    al,BYTE PTR [eax]
  406f4a:	cdq    
  406f4b:	push   ebp
  406f4c:	call   0x84f8:0x3bfe5b56
  406f53:	outs   dx,BYTE PTR ds:[esi]
  406f54:	xchg   ebx,eax
  406f55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f56:	not    edx
  406f58:	cwde   
  406f59:	or     BYTE PTR [edx],dh
  406f5b:	add    BYTE PTR [esi-0x5d],bh
  406f5e:	in     eax,0x35
  406f60:	mov    ah,0x53
  406f62:	cdq    
  406f63:	dec    ebx
  406f64:	push   cs
  406f65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f66:	lods   al,BYTE PTR ds:[esi]
  406f67:	scas   eax,DWORD PTR es:[edi]
  406f68:	rcr    BYTE PTR [esp+ebp*1+0x47de2498],1
  406f6f:	dec    esi
  406f70:	(bad)  
  406f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f73:	push   edx
  406f74:	cwde   
  406f75:	and    edi,edi
  406f77:	pop    ds
  406f78:	sub    DWORD PTR [ebp+0x3b],ebp
  406f7b:	push   edi
  406f7c:	jge    0x406f8c
  406f7e:	xlat   BYTE PTR ds:[ebx]
  406f7f:	mov    ch,0x17
  406f81:	adc    al,0x1
  406f83:	scas   eax,DWORD PTR es:[edi]
  406f84:	call   0x86b77ff1
  406f89:	dec    eax
  406f8a:	add    dh,ah
  406f8c:	adc    esi,edx
  406f8e:	jnp    0x406f71
  406f90:	fld    TBYTE PTR [ebx]
  406f92:	fst    DWORD PTR [ecx]
  406f94:	push   edi
  406f95:	dec    eax
  406f96:	xor    bh,BYTE PTR [edx+edi*8+0x3c29400b]
  406f9d:	sbb    ah,BYTE PTR [edx-0x20d42b4b]
  406fa3:	aam    0x88
  406fa5:	cwde   
  406fa6:	mov    edi,0x4cc142e1
  406fab:	sub    bh,dh
  406fad:	add    eax,0x2c43606e
  406fb2:	pusha  
  406fb3:	sub    dl,dl
  406fb5:	jo     0x407022
  406fb7:	imul   esi,DWORD PTR [ecx],0xf04c136f
  406fbd:	inc    edx
  406fbe:	sti    
  406fbf:	adc    al,0x46
  406fc1:	mov    al,0xc4
  406fc3:	fisttp QWORD PTR [edx]
  406fc5:	leave  
  406fc6:	inc    eax
  406fc7:	cmc    
  406fc8:	push   es
  406fc9:	out    0x79,al
  406fcb:	mov    al,0x67
  406fcd:	add    ebp,DWORD PTR [ebx-0x6e]
  406fd0:	xchg   DWORD PTR [eax+0xd72057d],edx
  406fd6:	or     DWORD PTR [ebp-0x1b9b7fd0],edx
  406fdc:	cmc    
  406fdd:	xor    BYTE PTR [ecx+0x7cb5a7b0],ch
  406fe3:	cmp    ebx,DWORD PTR [ebx]
  406fe5:	push   esp
  406fe6:	ds inc edi
  406fe8:	mov    cl,0xf3
  406fea:	jecxz  0x407012
  406fec:	mov    ebx,0x2977be35
  406ff1:	ror    DWORD PTR [ecx-0x30],0x9b
  406ff5:	in     al,0x36
  406ff7:	enter  0xb3b,0x76
  406ffb:	imul   ebp,DWORD PTR [edi-0x8b40f13],0xa
  407002:	gs push edx
  407004:	arpl   WORD PTR [ebx+ecx*8],di
  407007:	inc    edx
  407008:	out    0x2a,eax
  40700a:	jo     0x406fc6
  40700c:	xchg   edi,eax
  40700d:	mov    DWORD PTR [ebx+0x26a5511a],ecx
  407013:	pop    eax
  407014:	mov    al,ds:0xc4bd8b9b
  407019:	dec    edx
  40701a:	mov    ebp,0x636e6c9f
  40701f:	and    DWORD PTR [eax],ebx
  407021:	ja     0x406fb4
  407023:	jle    0x40700d
  407025:	sub    DWORD PTR [edi+ebx*1-0x3c],edx
  407029:	mov    eax,ds:0x105ed585
  40702e:	out    0x72,al
  407030:	sub    DWORD PTR [esi],0xb124c2f0
  407036:	cli    
  407037:	clc    
  407038:	leave  
  407039:	add    ebx,ecx
  40703b:	cmc    
  40703c:	out    dx,al
  40703d:	xchg   esp,eax
  40703e:	sub    DWORD PTR [edi-0x5e],esi
  407041:	xor    eax,0x17b993a
  407046:	lahf   
  407047:	(bad)  
  407049:	pop    esp
  40704a:	sti    
  40704b:	pop    esp
  40704c:	adc    BYTE PTR [esi+0x3571c899],0x73
  407053:	ret    0xf2ea
  407056:	fs jnp 0x407073
  407059:	xchg   edx,eax
  40705a:	inc    ecx
  40705b:	pop    es
  40705c:	xchg   BYTE PTR [ecx],cl
  40705e:	inc    ecx
  40705f:	js     0x4070c8
  407061:	mov    edx,0xd07a3c13
  407066:	sti    
  407067:	inc    ebp
  407068:	add    dh,dl
  40706a:	aas    
  40706b:	inc    ebp
  40706c:	and    esi,DWORD PTR [edx-0x372c0866]
  407072:	repnz test BYTE PTR ds:0x1fcc1bd6,al
  407079:	adc    DWORD PTR [esi+eax*4-0x458354fe],0xffffff94
  407081:	mov    dh,0x12
  407083:	jp     0x407019
  407085:	fist   DWORD PTR [edx]
  407087:	or     al,0x7e
  407089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40708a:	jbe    0x4070bb
  40708c:	dec    ecx
  40708d:	mov    ds:0x1f3a702c,al
  407092:	lods   al,BYTE PTR ds:[esi]
  407093:	and    ebp,esp
  407095:	mov    ecx,0xa097eaa7
  40709a:	adc    BYTE PTR [ebx-0x670c2e98],dl
  4070a0:	or     BYTE PTR [ebx+eax*4-0x68227103],0x89
  4070a8:	pop    es
  4070a9:	das    
  4070aa:	fcomp  DWORD PTR [esi+ebx*2+0x28925d9f]
  4070b1:	jmp    0xbf55e8fb
  4070b6:	xchg   ecx,eax
  4070b7:	fadd   DWORD PTR [edx+esi*4]
  4070ba:	inc    esp
  4070bb:	jmp    0x40709a
  4070bd:	xor    eax,0x3ceefec6
  4070c2:	mov    ch,0xcd
  4070c4:	cli    
  4070c5:	sub    BYTE PTR [edi+0x65],bh
  4070c8:	or     BYTE PTR [esi+eax*2-0x14e22e3d],ah
  4070cf:	es loop 0x4070b7
  4070d2:	dec    ebx
  4070d3:	test   DWORD PTR ds:0x1d65d502,0x85a705b5
  4070dd:	js     0x40715e
  4070df:	sbb    eax,0xd13c5a19
  4070e4:	or     BYTE PTR cs:[eax-0x55b2f8d0],ah
  4070eb:	leave  
  4070ec:	xor    dl,ch
  4070ee:	test   BYTE PTR cs:[ebx+eax*8-0x39aea559],ah
  4070f6:	in     eax,0xb2
  4070f8:	xchg   BYTE PTR [esi+edi*2],ch
  4070fb:	sub    dh,dl
  4070fd:	test   DWORD PTR [ecx-0x2d],0xbd8f1cd6
  407104:	test   BYTE PTR [eax-0x7cec62f6],ah
  40710a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40710b:	mov    edx,0x33de716
  407110:	cld    
  407111:	pushf  
  407112:	loopne 0x40716e
  407114:	dec    eax
  407115:	dec    edx
  407116:	into   
  407117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407118:	or     bl,BYTE PTR [ebp+0x64b403fb]
  40711e:	mov    bh,0x69
  407120:	xchg   ebp,eax
  407121:	xchg   ecx,eax
  407122:	cli    
  407123:	icebp  
  407124:	popa   
  407125:	push   ss
  407126:	loop   0x407100
  407128:	imul   ebp,DWORD PTR [ecx+0x36],0x6ddeff43
  40712f:	and    al,ch
  407131:	cmp    esi,DWORD PTR ds:0x1ae5e6ce
  407137:	push   ebp
  407138:	jmp    0x4071ab
  40713a:	or     eax,DWORD PTR [edx+eiz*2-0x5ca755a1]
  407141:	repnz shr bl,0x84
  407145:	arpl   WORD PTR [eax+0xd],di
  407148:	ss je  0x4071a0
  40714b:	dec    esp
  40714c:	(bad)  
  40714d:	fiadd  DWORD PTR [ebx+ecx*2+0x33]
  407151:	and    al,0x68
  407153:	jge    0x4071bb
  407155:	sub    ebx,DWORD PTR [eax-0x59f05ba8]
  40715b:	outs   dx,BYTE PTR ds:[esi]
  40715c:	ret    0xfe8c
  40715f:	pop    esi
  407160:	mov    dl,0xf2
  407162:	stos   DWORD PTR es:[edi],eax
  407163:	retf   0x526a
  407166:	mov    cl,bh
  407168:	out    0xd6,eax
  40716a:	scas   al,BYTE PTR es:[edi]
  40716b:	int3   
  40716c:	ds (bad) 
  40716e:	lock lahf 
  407170:	lahf   
  407171:	in     eax,0x38
  407173:	icebp  
  407174:	call   0x522a:0x507db892
  40717b:	pop    ebp
  40717c:	inc    edx
  40717d:	sar    BYTE PTR cs:[ebp-0x518978a],cl
  407184:	jne    0x407115
  407186:	and    DWORD PTR [eax],ebp
  407188:	mov    al,0x6e
  40718a:	outs   dx,DWORD PTR ds:[esi]
  40718b:	jp     0x4071cf
  40718d:	popf   
  40718e:	sub    eax,0x876a3e88
  407193:	and    eax,0x25e6336
  407198:	imul   edi,esi,0xcb3304cd
  40719e:	or     al,0x58
  4071a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071a1:	call   0x97f79005
  4071a6:	daa    
  4071a7:	sub    BYTE PTR [ebp+0x2e1220dd],bh
  4071ad:	jns    0x40718b
  4071af:	repnz xchg ecx,eax
  4071b1:	and    al,0xe6
  4071b3:	xor    eax,0x6423b221
  4071b8:	mov    WORD PTR [esi+0x26],?
  4071bb:	ins    BYTE PTR es:[edi],dx
  4071bc:	cmp    ebp,esp
  4071be:	push   cs
  4071bf:	ret    
  4071c0:	jne    0x407198
  4071c2:	jmp    0x4cdb:0xdc919d4d
  4071c9:	out    dx,eax
  4071ca:	fdivp  st(0),st
  4071cc:	inc    edx
  4071cd:	jmp    0xa106ffd5
  4071d2:	jo     0x407233
  4071d4:	adc    eax,0xaa1a5d6
  4071d9:	fadd   DWORD PTR [eax+0x71]
  4071dc:	add    ch,BYTE PTR [ebx]
  4071de:	outs   dx,DWORD PTR ds:[esi]
  4071df:	lock (bad) 
  4071e1:	dec    ebx
  4071e2:	cli    
  4071e3:	cmp    al,0x31
  4071e5:	pop    esi
  4071e6:	mov    ah,0x9
  4071e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071e9:	mov    bh,0xc7
  4071eb:	pusha  
  4071ec:	mov    esi,0xf32299f0
  4071f1:	inc    DWORD PTR [esp+ebp*2+0x6b]
  4071f5:	cwde   
  4071f6:	ret    0xf635
  4071f9:	pushf  
  4071fa:	mov    bh,ch
  4071fc:	pop    esi
  4071fd:	cdq    
  4071fe:	mov    bh,0x56
  407200:	add    dl,BYTE PTR [edi]
  407202:	inc    ecx
  407203:	push   ds
  407204:	test   BYTE PTR [ebx],bh
  407206:	sub    eax,0x935b96e5
  40720b:	sbb    edi,DWORD PTR ds:0xa0ab7845
  407211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407212:	xchg   ebx,eax
  407213:	jne    0x40719f
  407215:	cwde   
  407216:	fidiv  DWORD PTR [ecx-0x74]
  407219:	jns    0x407213
  40721b:	pusha  
  40721c:	sbb    DWORD PTR [edi+0x4dd57be0],edi
  407222:	jl     0x407231
  407224:	sub    ecx,ecx
  407226:	push   ebx
  407227:	sahf   
  407228:	retf   0xf2a8
  40722b:	and    al,0x1f
  40722d:	inc    edi
  40722e:	jns    0x4071de
  407230:	(bad)  
  407231:	xor    DWORD PTR [eax],edi
  407233:	pop    esi
  407234:	cmp    BYTE PTR [edx+0x37],bh
  407237:	aas    
  407238:	es and al,0xbc
  40723b:	jnp    0x40727a
  40723d:	je     0x4071df
  40723f:	mov    bl,0x78
  407241:	sub    ecx,ebx
  407243:	fcom   QWORD PTR [ebp-0x4eb4d3d0]
  407249:	push   edx
  40724a:	out    dx,eax
  40724b:	les    edx,FWORD PTR ds:0x7f18e2d8
  407251:	popf   
  407252:	adc    BYTE PTR ds:0x84388838,0x8f
  407259:	mov    bl,0xa0
  40725b:	mov    dl,0xfb
  40725d:	cmp    ebp,DWORD PTR [esi]
  40725f:	mov    eax,0x3b6b74ca
  407264:	sbb    ch,BYTE PTR [edx-0x21]
  407267:	and    cl,dl
  407269:	cmp    BYTE PTR [edx-0x5b],0xc
  40726d:	dec    esi
  40726e:	(bad)  
  40726f:	mov    ds:0x7eda695c,al
  407274:	add    bh,BYTE PTR ds:0xc642d866
  40727a:	mov    ah,0xe9
  40727c:	pusha  
  40727d:	fdiv   DWORD PTR [ebx+eiz*1-0x1f778dde]
  407284:	inc    edi
  407285:	repz or eax,DWORD PTR [ebp+0x27]
  407289:	cmc    
  40728a:	push   edx
  40728b:	cmp    al,0xcd
  40728d:	cwde   
  40728e:	scas   al,BYTE PTR es:[edi]
  40728f:	push   0x774f38ab
  407294:	mov    ch,0x9c
  407296:	mov    ebx,0xcd3d126c
  40729b:	cli    
  40729c:	adc    edx,ebx
  40729e:	icebp  
  40729f:	pop    ebp
  4072a0:	lods   eax,DWORD PTR ds:[esi]
  4072a1:	fild   WORD PTR [eax]
  4072a3:	lods   eax,DWORD PTR ds:[esi]
  4072a4:	into   
  4072a5:	xchg   ecx,eax
  4072a6:	arpl   WORD PTR [ecx-0x7f852f52],di
  4072ac:	add    DWORD PTR [ebp-0x6d024722],0xec0a961a
  4072b6:	aaa    
  4072b7:	xor    al,0x64
  4072b9:	test   DWORD PTR [ebx],edi
  4072bb:	maskmovq mm3,(bad)
  4072bc:	neg    DWORD PTR [edx+0x180c8e02]
  4072c2:	mov    bl,0x1b
  4072c4:	sub    eax,0xac58400f
  4072c9:	ret    
  4072ca:	pop    esi
  4072cb:	jbe    0x407325
  4072cd:	inc    ecx
  4072ce:	jns    0x407323
  4072d0:	sbb    edi,DWORD PTR [esp+eiz*4-0x1b]
  4072d4:	jne    0x407348
  4072d6:	(bad)  
  4072d7:	jne    0x407275
  4072d9:	cmp    eax,DWORD PTR [edi]
  4072db:	loope  0x4072ac
  4072dd:	mov    dl,0xa5
  4072df:	test   BYTE PTR [ebx-0x4d],al
  4072e2:	sub    eax,0x56800f31
  4072e7:	mov    eax,ds:0x3a438e51
  4072ec:	mov    ds:0xd5dc63d8,eax
  4072f1:	mov    cl,0x97
  4072f3:	adc    BYTE PTR [ebp+0xfea90d0],al
  4072f9:	sbb    dl,BYTE PTR [eax-0x4e76d612]
  4072ff:	mov    ebp,?
  407301:	dec    ebp
  407302:	imul   edx,DWORD PTR [ecx-0x5d293354],0x53f59eb7
  40730c:	mov    ds:0x7687cc0d,eax
  407311:	test   dl,ch
  407313:	cmp    al,0x72
  407315:	push   esp
  407316:	push   ecx
  407317:	jno    0x4072a8
  407319:	and    eax,0x55eddbca
  40731e:	fadd   DWORD PTR [ebx+0x3f]
  407321:	aas    
  407322:	imul   esi,DWORD PTR [esi-0x4e],0xfffffff3
  407326:	jge    0x4072ef
  407328:	scas   al,BYTE PTR es:[edi]
  407329:	xlat   BYTE PTR ds:[ebx]
  40732a:	lock adc esp,DWORD PTR [esi-0x5a]
  40732e:	mov    cl,0xa8
  407330:	rol    DWORD PTR [ebp+0x7a],1
  407333:	cmp    eax,DWORD PTR [esi]
  407335:	data16 add BYTE PTR [eax-0x12],ch
  407339:	jo     0x40732a
  40733b:	mov    esp,0x540d3dea
  407340:	sbb    BYTE PTR [eax-0x66],0x2d
  407344:	clc    
  407345:	popf   
  407346:	(bad)  
  407347:	in     al,0xd0
  407349:	scas   al,BYTE PTR es:[edi]
  40734a:	add    DWORD PTR [edi+0x452b45cd],esi
  407350:	add    eax,0xbd2af9ee
  407355:	jle    0x40732b
  407357:	mov    ebp,0xd5ab8e53
  40735c:	pop    ss
  40735d:	xchg   esi,eax
  40735e:	adc    DWORD PTR [ebx-0x5d],eax
  407361:	lods   al,BYTE PTR ds:[esi]
  407362:	jnp    0x407372
  407364:	pusha  
  407365:	mov    dl,0x33
  407367:	and    edx,DWORD PTR [eax+eax*1]
  40736a:	pop    ds
  40736b:	jle    0x4073c7
  40736d:	pusha  
  40736e:	mov    al,ds:0x3f1efd66
  407373:	sbb    BYTE PTR [esi+0x49b6e960],bh
  407379:	pop    es
  40737a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40737b:	loope  0x4073e6
  40737d:	int3   
  40737e:	fwait
  40737f:	gs jo  0x4073a3
  407382:	adc    al,0x4d
  407384:	(bad)  [ebp+0x265ab7d5]
  40738a:	push   esi
  40738b:	cmp    DWORD PTR [ecx],0x50
  40738e:	enter  0xfed2,0xf4
  407392:	mov    WORD PTR [edx],?
  407394:	mov    BYTE PTR [ebp-0x1edc7335],0xf3
  40739b:	sbb    al,0x1a
  40739d:	out    dx,eax
  40739e:	(bad)  [ecx]
  4073a0:	jecxz  0x4073b6
  4073a2:	daa    
  4073a3:	out    dx,eax
  4073a4:	push   ebx
  4073a5:	xor    dl,BYTE PTR [ebx+0x585119e4]
  4073ab:	mov    edx,0x7d644bb0
  4073b0:	sbb    BYTE PTR [ebx+0x6ea84bf1],0xba
  4073b7:	mov    dl,0x7a
  4073b9:	cmc    
  4073ba:	mov    edi,DWORD PTR [edx+0x4b6932ba]
  4073c0:	data16 sbb ch,BYTE PTR [eax+0x6d]
  4073c4:	aad    0x7
  4073c6:	cmp    BYTE PTR [eax+eiz*8],cl
  4073c9:	or     BYTE PTR [ebx+0x79ee4788],ch
  4073cf:	pop    ebx
  4073d0:	inc    esi
  4073d1:	mov    eax,ds:0x4768248f
  4073d6:	sti    
  4073d7:	lds    edx,FWORD PTR [eax-0x107a78c2]
  4073dd:	sbb    cl,BYTE PTR [edi]
  4073df:	gs pop ebx
  4073e1:	inc    edx
  4073e2:	ror    DWORD PTR [esi+esi*4-0xa5a944c],1
  4073e9:	out    dx,eax
  4073ea:	sub    ebx,0x37b6eef0
  4073f0:	imul   ah
  4073f2:	std    
  4073f3:	add    BYTE PTR [edi+0x15837329],ch
  4073f9:	inc    edx
  4073fa:	jg     0x407422
  4073fc:	in     eax,0x21
  4073fe:	xchg   ebx,eax
  4073ff:	loopne 0x4073aa
  407401:	mov    cl,dl
  407403:	xchg   ebp,eax
  407404:	mov    ebp,esp
  407406:	es jb  0x4073d7
  407409:	mov    fs,WORD PTR [ecx-0x2f918641]
  40740f:	sub    DWORD PTR [ecx],edi
  407411:	lea    ecx,[edi+0x5779892d]
  407417:	fs leave 
  407419:	dec    ecx
  40741a:	adc    dh,BYTE PTR [eax-0x3d]
  40741d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40741e:	or     eax,0x1f018152
  407423:	mov    eax,ds:0xf0ce8a27
  407428:	mov    eax,ds:0xde170f20
  40742d:	mov    cl,0x55
  407430:	xor    eax,0x94d8d6b5
  407435:	into   
  407436:	xlat   BYTE PTR ds:[ebx]
  407437:	and    DWORD PTR [ebx],ecx
  407439:	push   ecx
  40743a:	cmp    BYTE PTR ds:0x8390b010,0x96
  407441:	(bad)  
  407443:	push   0x2
  407445:	sti    
  407446:	xchg   edi,eax
  407447:	ds fs push esp
  40744a:	mov    edi,0x9d99445f
  40744f:	cmp    al,BYTE PTR [edi+0x35]
  407452:	adc    esp,ebp
  407454:	jecxz  0x407497
  407456:	add    edi,edi
  407458:	imul   eax
  40745a:	pop    ss
  40745b:	stos   BYTE PTR es:[edi],al
  40745c:	(bad)  
  40745d:	lds    ebx,FWORD PTR [esi-0x618d0049]
  407463:	push   0x6d
  407465:	icebp  
  407466:	lds    esi,FWORD PTR [edx-0x69a47a3c]
  40746c:	call   0xdc81:0x40fd8efe
  407473:	repz test DWORD PTR [ebx-0x7c3a3143],ecx
  40747a:	shl    DWORD PTR [ebp+0x3e7ecebe],1
  407480:	(bad)  [esi+ecx*1+0x6ebf7a6]
  407487:	xchg   edx,eax
  407488:	inc    eax
  407489:	fistp  DWORD PTR [eax+0x10]
  40748c:	test   BYTE PTR [edx+0xd],dh
  40748f:	jp     0x407420
  407491:	add    ecx,DWORD PTR [ebx+0x5f]
  407494:	add    eax,0x950c9d39
  407499:	hlt    
  40749a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40749b:	pop    ss
  40749c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40749d:	loopne 0x4074d6
  40749f:	ja     0x40748f
  4074a1:	inc    ebx
  4074a2:	jge    0x40747e
  4074a4:	mov    eax,0xbc2c3d42
  4074a9:	sub    al,0x79
  4074ab:	ret    
  4074ac:	test   eax,0xd65dc0f6
  4074b1:	or     ecx,esp
  4074b3:	les    esi,FWORD PTR [ebp+0x66057e4a]
  4074b9:	jecxz  0x40743c
  4074bb:	scas   al,BYTE PTR es:[edi]
  4074bc:	lods   al,BYTE PTR ds:[esi]
  4074bd:	cwde   
  4074be:	sbb    eax,0x82760405
  4074c3:	repnz push ss
  4074c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074c6:	data16 ja 0x407490
  4074c9:	call   0xbd33:0xa32a
  4074cf:	sbb    cl,cl
  4074d1:	nop
  4074d2:	dec    esp
  4074d3:	(bad)  
  4074d4:	fsubr  QWORD PTR [edi+0x5a]
  4074d7:	fsub   st(1),st
  4074d9:	and    edx,DWORD PTR [edx+ebx*2]
  4074dc:	stc    
  4074dd:	jecxz  0x40750c
  4074df:	jge    0x4074c8
  4074e1:	test   BYTE PTR [edi],bh
  4074e3:	pop    ecx
  4074e4:	lahf   
  4074e5:	xor    dh,dl
  4074e7:	scas   eax,DWORD PTR es:[edi]
  4074e8:	push   esi
  4074e9:	loope  0x4074c1
  4074eb:	push   ss
  4074ec:	dec    ecx
  4074ed:	fmul   QWORD PTR [eax+0x546feeaa]
  4074f3:	outs   dx,BYTE PTR ds:[esi]
  4074f4:	popa   
  4074f5:	jge    0x40755a
  4074f7:	call   DWORD PTR [ebp-0x5e]
  4074fa:	mov    cl,0xcf
  4074fc:	and    DWORD PTR [edx-0x54],esp
  4074ff:	mov    ah,BYTE PTR [ecx+0x3c]
  407502:	out    0x4b,eax
  407504:	out    dx,eax
  407505:	fnstenv [ecx-0x56]
  407508:	jae    0x4074f7
  40750a:	mov    ds:0xff6afe5e,eax
  40750f:	sbb    bh,BYTE PTR [ecx+edx*4+0x3a492621]
  407516:	lea    ebx,[ebx+ebp*8+0x46]
  40751a:	int3   
  40751b:	pusha  
  40751c:	call   FWORD PTR [esp+eax*1-0x13]
  407520:	cs int 0xb4
  407523:	loopne 0x4074ee
  407525:	sar    DWORD PTR [bp+si+0x6ea8],0xba
  40752b:	push   es
  40752c:	jle    0x4074fa
  40752e:	jns    0x407578
  407530:	(bad)  
  407531:	mov    cl,0x58
  407533:	and    BYTE PTR [ecx-0xf],cl
  407536:	xchg   ecx,eax
  407537:	mov    dh,0x33
  407539:	mov    bh,0xfd
  40753b:	imul   esi,DWORD PTR [ebp+0xbda3292],0x2b
  407542:	icebp  
  407543:	xchg   edx,eax
  407544:	stc    
  407545:	mov    esp,0x10703087
  40754a:	in     al,0xf5
  40754c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40754d:	mov    al,ds:0xd702459a
  407552:	in     al,0xc8
  407554:	sub    ebx,DWORD PTR [esi-0x7f]
  407557:	sbb    ch,BYTE PTR [eax+ebx*2]
  40755a:	jnp    0x407542
  40755c:	es and eax,0x19d4caf0
  407562:	rcr    DWORD PTR [ebx],1
  407564:	push   ecx
  407565:	cmp    BYTE PTR [ebx+0x5bc4e773],ah
  40756b:	cmp    eax,0x12b9e5da
  407570:	xchg   edi,eax
  407571:	sbb    al,0x3e
  407573:	push   edi
  407574:	push   ecx
  407575:	call   0x6d06c34
  40757a:	es cdq 
  40757c:	mov    ch,0x28
  40757e:	and    dl,BYTE PTR [esi+0x54]
  407581:	push   ds
  407582:	out    dx,al
  407583:	out    0xc0,al
  407585:	loop   0x40752d
  407587:	enter  0xd74,0x45
  40758b:	repz pop esi
  40758d:	and    ebp,DWORD PTR [ebp-0x1c]
  407590:	sbb    ah,0x1e
  407593:	data16 (bad) 
  407595:	nop
  407596:	neg    BYTE PTR [edx]
  407598:	push   0xb5b95615
  40759d:	xchg   edi,eax
  40759e:	push   cs
  40759f:	pop    esp
  4075a0:	cmovb  esp,DWORD PTR [edi+0x47dcff8c]
  4075a7:	xchg   edx,eax
  4075a8:	ja     0x4075e7
  4075aa:	mov    bh,0xd7
  4075ac:	leave  
  4075ad:	leave  
  4075ae:	cmp    BYTE PTR [eax-0x72],dh
  4075b1:	in     al,dx
  4075b2:	inc    edx
  4075b3:	pop    edi
  4075b4:	sub    esp,DWORD PTR [ebx+0x3cd81a56]
  4075ba:	dec    ebp
  4075bb:	xor    ecx,edx
  4075bd:	outs   dx,DWORD PTR ds:[esi]
  4075be:	sbb    al,0x6b
  4075c0:	pop    esp
  4075c1:	mov    ebx,ebx
  4075c3:	outs   dx,BYTE PTR ds:[esi]
  4075c4:	fidiv  DWORD PTR [ecx]
  4075c6:	pop    ss
  4075c7:	or     ecx,ecx
  4075c9:	dec    esi
  4075ca:	(bad)  
  4075cb:	add    BYTE PTR [esi],al
  4075cd:	inc    ebx
  4075ce:	add    eax,0x3cb6ee22
  4075d3:	xchg   BYTE PTR [ecx+0x4959b56d],ch
  4075d9:	or     eax,0xb934324f
  4075de:	push   ecx
  4075df:	jle    0x4075d5
  4075e1:	ins    BYTE PTR es:[edi],dx
  4075e2:	push   esp
  4075e3:	iret   
  4075e4:	sbb    al,0x76
  4075e6:	popf   
  4075e7:	shl    DWORD PTR [esi-0x6f],0x9b
  4075eb:	aad    0x66
  4075ed:	inc    DWORD PTR [eax+eax*4-0x71]
  4075f1:	sub    dl,al
  4075f3:	sbb    dh,dl
  4075f5:	pop    esp
  4075f6:	mov    DWORD PTR [edx+0x64],ebx
  4075f9:	jmp    0xf8b7928f
  4075fe:	push   es
  4075ff:	push   edi
  407600:	loope  0x4075f4
  407602:	sub    eax,0xc3fb68ed
  407607:	sbb    bh,BYTE PTR [edi+0x20]
  40760a:	jp     0x4075d0
  40760c:	(bad)  
  40760d:	gs inc ecx
  40760f:	mov    al,0x32
  407611:	mov    DWORD PTR [edi-0xadb8403],ebx
  407617:	(bad)  
  407618:	out    dx,eax
  407619:	adc    DWORD PTR [eax],esi
  40761b:	xchg   esp,eax
  40761c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40761d:	fs sbb al,cl
  407620:	cs popf 
  407622:	mov    ecx,DWORD PTR [ebp-0x287db894]
  407628:	adc    cl,al
  40762a:	ja     0x40765e
  40762c:	sub    esp,DWORD PTR [ecx-0x4d]
  40762f:	mov    esi,0x8ce7e9f6
  407634:	adc    al,BYTE PTR [eax-0x57ae765e]
  40763a:	mov    eax,ds:0x5dc9bb17
  40763f:	aam    0x29
  407641:	mov    gs,WORD PTR [edi+0x5af6f2cc]
  407647:	pop    ebx
  407648:	mov    ebx,0x737328ba
  40764d:	mov    eax,edi
  40764f:	imul   edx,DWORD PTR ds:0xfbcc5661,0x443d5488
  407659:	sahf   
  40765a:	(bad)  
  40765b:	push   ecx
  40765c:	aas    
  40765d:	jp     0x40769e
  40765f:	push   edi
  407660:	ss inc ebp
  407662:	in     eax,0x20
  407664:	stos   DWORD PTR es:[edi],eax
  407665:	sub    ah,BYTE PTR [ebx-0x93e2515]
  40766b:	lds    esi,FWORD PTR [edx+0x3c]
  40766e:	pop    ds
  40766f:	scas   al,BYTE PTR es:[edi]
  407670:	les    esp,FWORD PTR ds:0x117682c5
  407676:	retf   0xc153
  407679:	cmp    BYTE PTR [edi+0x44],cl
  40767c:	push   edx
  40767d:	sub    al,0xd2
  40767f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407680:	aas    
  407681:	pop    esp
  407682:	jmp    esi
  407684:	jp     0x4076b1
  407686:	pushf  
  407687:	stos   DWORD PTR es:[edi],eax
  407688:	mov    ds:0x1bef7687,al
  40768d:	push   0x116cae40
  407692:	xor    DWORD PTR [edi+0x2870512],0xbd12a814
  40769c:	sbb    al,0xf1
  40769e:	jle    0x40762b
  4076a0:	xchg   esi,eax
  4076a1:	loopne 0x40768f
  4076a3:	lahf   
  4076a4:	aad    0xe3
  4076a6:	jge    0x40762a
  4076a8:	out    0xfe,eax
  4076aa:	push   ss
  4076ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076ac:	xchg   ebx,eax
  4076ad:	(bad)  
  4076ae:	jle    0x4076dd
  4076b0:	xchg   ecx,eax
  4076b1:	add    bh,bl
  4076b3:	xchg   esp,eax
  4076b4:	leave  
  4076b5:	ret    
  4076b6:	or     al,BYTE PTR [ebp+0x1e]
  4076b9:	into   
  4076ba:	mov    eax,ds:0x430886cd
  4076bf:	dec    edx
  4076c0:	retf   0xd391
  4076c3:	lods   eax,DWORD PTR ds:[esi]
  4076c4:	dec    esp
  4076c5:	cmovge ecx,DWORD PTR ds:0x917be5f
  4076cc:	push   cs
  4076cd:	dec    ebx
  4076ce:	or     edx,0xffffffa7
  4076d1:	test   DWORD PTR [ebx+0x705290dc],esp
  4076d7:	ins    DWORD PTR es:[edi],dx
  4076d8:	pop    ss
  4076d9:	cdq    
  4076da:	add    al,0x4b
  4076dc:	addr16 ret 
  4076de:	adc    bh,bl
  4076e0:	test   edi,edi
  4076e2:	push   ebx
  4076e3:	mov    eax,ds:0x4c603465
  4076e8:	(bad)  
  4076e9:	mov    ebx,0xba6a818f
  4076ee:	xor    DWORD PTR [edx+eiz*2+0x11c24e02],0x1b7337b6
  4076f9:	push   esi
  4076fa:	hlt    
  4076fb:	or     al,0xd1
  4076fd:	and    DWORD PTR [edi+0x3dc4896],esi
  407703:	jge    0x4076a0
  407705:	sbb    eax,0x8a4f9c94
  40770a:	sbb    eax,0x80c1c192
  40770f:	loopne 0x407693
  407711:	stc    
  407712:	mov    bl,0xa2
  407714:	xchg   ebp,eax
  407715:	or     esp,edx
  407717:	and    edi,eax
  407719:	inc    ecx
  40771a:	enter  0x4408,0x51
  40771e:	jge    0x4076a0
  407720:	jns    0x407745
  407722:	retf   0xf6b3
  407725:	ror    eax,1
  407727:	xchg   edi,eax
  407728:	stos   BYTE PTR es:[edi],al
  407729:	add    eax,0x30f3fc1f
  40772e:	mov    ecx,0x37a81a79
  407733:	xlat   BYTE PTR ds:[ebx]
  407734:	or     al,0xd2
  407736:	jbe    0x407737
  407738:	push   ebp
  407739:	(bad)  
  40773b:	sahf   
  40773c:	adc    DWORD PTR [eax],0x39731e81
  407742:	and    esp,esi
  407744:	dec    esi
  407745:	pop    ss
  407746:	xor    cl,BYTE PTR [ecx+0x60249620]
  40774c:	call   0x9dcd:0x679ff10e
  407753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407754:	sub    eax,0xc96c4389
  407759:	cmp    al,BYTE PTR [ecx]
  40775b:	mov    ds:0xf1ca9d22,al
  407760:	leave  
  407761:	or     BYTE PTR [edx+0x21da187d],0x17
  407768:	test   BYTE PTR [eax+0x63b1972e],dh
  40776e:	mov    DWORD PTR [edi],esi
  407770:	iret   
  407771:	imul   ebx,DWORD PTR [ecx-0x43],0x1c
  407775:	mov    dl,0xfc
  407777:	sub    edx,esp
  407779:	mov    cl,0x8c
  40777b:	pop    ss
  40777c:	or     BYTE PTR [eax-0x32870d29],0x9d
  407783:	adc    edx,eax
  407785:	mov    eax,ds:0x908c1b56
  40778a:	ja     0x4077a1
  40778c:	out    0x98,al
  40778e:	mov    ch,0x4c
  407790:	and    DWORD PTR [edi-0x7831c43c],ebx
  407796:	nop
  407797:	dec    edi
  407798:	ror    DWORD PTR [edx+0x1b],0xa3
  40779c:	mov    ch,0xd8
  40779e:	std    
  40779f:	xchg   DWORD PTR [ebx+0x77],ecx
  4077a2:	xchg   ecx,eax
  4077a3:	and    ebx,DWORD PTR [eax-0x4ad2a59b]
  4077a9:	mov    ds:0x996a9ac7,eax
  4077ae:	ret    
  4077af:	sub    al,0x12
  4077b1:	clc    
  4077b2:	cld    
  4077b3:	rcl    DWORD PTR [ecx+0x42],1
  4077b6:	mov    ds:0xda1d3fb8,al
  4077bb:	jnp    0x4077da
  4077bd:	aam    0x4e
  4077bf:	out    0x5e,al
  4077c1:	(bad)  
  4077c2:	jle    0x4077e3
  4077c4:	or     DWORD PTR [ebx],eax
  4077c6:	inc    esi
  4077c7:	cmp    DWORD PTR [ebx+0x1c],eax
  4077ca:	jae    0x4077ac
  4077cc:	and    eax,0xf67b5cbb
  4077d1:	pop    edi
  4077d2:	test   eax,0xa65efae5
  4077d7:	or     ch,bl
  4077d9:	mov    eax,0x819918fa
  4077de:	mov    edi,0x53ca0171
  4077e3:	fcomp  QWORD PTR [eax]
  4077e5:	lock into 
  4077e7:	add    eax,0x31d08b25
  4077ec:	test   BYTE PTR [ebp+eiz*1-0x4b8150cb],ch
  4077f3:	pop    esp
  4077f4:	jo     0x407801
  4077f6:	enter  0xd9ef,0xad
  4077fa:	jle    0x407827
  4077fc:	(bad)  
  4077fd:	push   ebp
  4077fe:	add    BYTE PTR [ebx+0x1e],al
  407801:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407802:	popa   
  407803:	les    edx,FWORD PTR [edx+0x730963f7]
  407809:	mov    ebx,0x5de47f45
  40780e:	fwait
  40780f:	out    dx,eax
  407810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407811:	push   eax
  407812:	hlt    
  407813:	popf   
  407814:	xchg   ecx,eax
  407815:	pop    ds
  407816:	push   ds
  407817:	lods   al,BYTE PTR ds:[esi]
  407818:	xor    ecx,ebx
  40781a:	enter  0xf6d0,0xc5
  40781e:	js     0x40783f
  407820:	div    BYTE PTR [eax+0x77]
  407823:	push   edx
  407824:	sub    edx,eax
  407826:	and    esi,DWORD PTR [ebx]
  407828:	rcl    BYTE PTR ss:[esp+eax*8],0x9d
  40782d:	loop   0x4077fa
  40782f:	pop    edx
  407830:	leave  
  407831:	dec    ebp
  407832:	sub    cl,bl
  407834:	adc    al,0x35
  407836:	(bad)  
  407837:	repz and eax,0x1317c34b
  40783d:	rcl    DWORD PTR [edi],1
  40783f:	lahf   
  407840:	sub    dh,BYTE PTR [edx]
  407842:	pop    ds
  407843:	sub    eax,0x93119118
  407848:	(bad)  
  407849:	repz mov bl,0x48
  40784c:	inc    esi
  40784d:	push   0x16bf99bb
  407852:	es mov bl,0xdd
  407855:	hlt    
  407856:	mov    esp,0x60ed33ef
  40785b:	inc    esi
  40785c:	xchg   edx,eax
  40785d:	repnz retf 
  40785f:	frstor [edi]
  407861:	mov    al,0x4b
  407863:	xor    BYTE PTR [esi-0x67141f82],bh
  407869:	adc    eax,0x9a4620b2
  40786e:	rdmsr  
  407870:	fsub   QWORD PTR [edx-0x6443a423]
  407876:	fldcw  WORD PTR [ecx+esi*2]
  407879:	inc    edi
  40787a:	data16 adc BYTE PTR [eax],0x8d
  40787e:	mov    ds:0x8b57b6a7,al
  407883:	lods   eax,DWORD PTR ds:[esi]
  407884:	xchg   DWORD PTR [eax],ebp
  407886:	(bad)
  40788a:	jno    0x4078b3
  40788c:	js     0x4078ed
  40788e:	rcr    ch,1
  407890:	imul   ecx,DWORD PTR [ecx],0x8f492855
  407896:	ret    
  407897:	hlt    
  407898:	mov    ebx,0xfb92a182
  40789d:	cwde   
  40789e:	jmp    0x4078cf
  4078a0:	xor    bl,BYTE PTR [edi+0x55]
  4078a3:	pop    esi
  4078a4:	push   eax
  4078a5:	lahf   
  4078a6:	(bad)  [esi]
  4078a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078aa:	mov    esp,0xc45209c2
  4078af:	retf   
  4078b0:	loopne 0x40785b
  4078b2:	in     eax,0x8d
  4078b4:	mov    ds:0xd54e27c5,eax
  4078b9:	jne    0x407844
  4078bb:	rol    BYTE PTR [esi],cl
  4078bd:	xchg   BYTE PTR [edx],dl
  4078bf:	rcr    ebx,1
  4078c1:	ss or  esp,ebx
  4078c4:	fld    DWORD PTR ds:0xd213b507
  4078ca:	ret    
  4078cb:	add    eax,0xfaddb907
  4078d0:	pop    edi
  4078d1:	ret    
  4078d2:	aad    0x3
  4078d4:	(bad)  
  4078d5:	jns    0x407921
  4078d7:	xchg   BYTE PTR [ecx+edi*4],dh
  4078da:	jg     0x4078b4
  4078dc:	mov    BYTE PTR [edi+0x6adf2193],bl
  4078e2:	xchg   DWORD PTR ss:[ecx],ebx
  4078e5:	loop   0x40787b
  4078e7:	sub    cl,BYTE PTR [ebx+0x2d]
  4078ea:	stc    
  4078eb:	(bad)  
  4078ec:	jl     0x407905
  4078ee:	int    0x40
  4078f0:	jecxz  0x40795d
  4078f2:	iret   
  4078f3:	pop    ds
  4078f4:	cmp    al,dh
  4078f6:	push   ebx
  4078f7:	xor    al,0xf8
  4078f9:	xor    eax,0x4fae4469
  4078fe:	int3   
  4078ff:	mov    eax,ds:0xa9d9489
  407904:	xor    al,0xc4
  407906:	test   ebp,edi
  407908:	mov    esp,0xbb049a60
  40790d:	fs push cs
  40790f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407910:	jmp    0x55467bf0
  407915:	inc    edi
  407916:	jp     0x407925
  407918:	out    dx,eax
  407919:	(bad)  
  40791a:	jmp    0xfa2eb4a9
  40791f:	cs mov ebp,?
  407922:	test   DWORD PTR [edi+0x4416adda],esp
  407928:	dec    esp
  407929:	mov    ds:0xd7a49cb9,eax
  40792e:	mov    ds:0x92af0527,eax
  407933:	push   ds
  407934:	ret    0x6572
  407937:	mov    edi,0xc80143e2
  40793c:	out    0x4d,al
  40793e:	leave  
  40793f:	jno    0x40794d
  407941:	sub    al,BYTE PTR [edx+edx*1-0x2d53e35d]
  407948:	aad    0x3b
  40794a:	dec    ecx
  40794b:	push   esi
  40794c:	es stc 
  40794e:	in     al,0x89
  407950:	sbb    DWORD PTR [edi],esp
  407952:	push   ebx
  407953:	cld    
  407954:	push   esi
  407955:	int3   
  407956:	or     DWORD PTR [ecx],ebx
  407958:	jge    0x4078fc
  40795a:	ret    0xf3d
  40795d:	mov    ah,0xdc
  40795f:	sub    eax,0x754c618
  407964:	imul   ebx,DWORD PTR [edx*8-0x26c9dfcb],0xfffffff6
  40796c:	jg     0x407906
  40796e:	mov    cl,0x6e
  407970:	inc    esp
  407971:	imul   edx,DWORD PTR [ebp+0x2a603d9c],0xffffff8f
  407978:	jne    0x40794c
  40797a:	jp     0x40798b
  40797c:	fisub  WORD PTR ds:0xfe4db7f0
  407982:	jecxz  0x407941
  407984:	inc    esi
  407985:	or     al,0xda
  407987:	repnz fnstcw WORD PTR [edi]
  40798a:	dec    ecx
  40798b:	dec    esi
  40798c:	adc    eax,0x8bd23982
  407991:	xchg   DWORD PTR [ebp-0x68173599],ebp
  407997:	add    esp,DWORD PTR [ebp-0x72]
  40799a:	add    eax,0xf8328cb
  40799f:	imul   edi,ebp,0xfbd97568
  4079a5:	int3   
  4079a6:	ja     0x4079ee
  4079a8:	sbb    BYTE PTR [edi+0x31],0xb1
  4079ac:	xchg   edx,eax
  4079ad:	stos   BYTE PTR es:[edi],al
  4079ae:	dec    ecx
  4079af:	add    DWORD PTR [edi+0x3f],ebx
  4079b2:	pusha  
  4079b3:	mov    bl,0x52
  4079b5:	ja     0x40793f
  4079b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079b8:	fimul  WORD PTR [esi-0x1c]
  4079bb:	fild   QWORD PTR [edx+0x7ad12143]
  4079c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079c2:	sbb    al,0xe1
  4079c4:	popf   
  4079c5:	jmp    0x744f:0xbe2d75ff
  4079cc:	dec    ebp
  4079cd:	int3   
  4079ce:	jmp    0x4079d8
  4079d0:	das    
  4079d1:	into   
  4079d2:	or     DWORD PTR [edx-0x1cc5a572],ebp
  4079d8:	cmp    DWORD PTR [ebx+eax*8-0x41],eax
  4079dc:	sub    cl,BYTE PTR [ecx]
  4079de:	aaa    
  4079df:	xchg   ebx,eax
  4079e0:	push   cs
  4079e1:	inc    edx
  4079e2:	dec    edx
  4079e3:	out    dx,eax
  4079e4:	rcr    ah,1
  4079e6:	scas   al,BYTE PTR es:[edi]
  4079e7:	adc    al,BYTE PTR [edi]
  4079e9:	out    0xbe,eax
  4079eb:	test   BYTE PTR [ebp-0x7d],0xb0
  4079ef:	es xchg ebp,eax
  4079f1:	sub    eax,0xf5a1b2ab
  4079f6:	lds    esp,FWORD PTR [ebx-0x740bba75]
  4079fc:	dec    ebp
  4079fd:	hlt    
  4079fe:	sub    eax,ecx
  407a00:	mov    DWORD PTR [ebp-0xc],eax
  407a03:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  407a0a:	mov    eax,DWORD PTR [ebp-0x1c]
  407a0d:	mov    ecx,DWORD PTR [ebp-0x1c]
  407a10:	sub    eax,ecx
  407a12:	mov    DWORD PTR [ebp-0x1c],eax
  407a15:	or     DWORD PTR [ebp-0x1c],0xf89c85d9
  407a1c:	mov    eax,DWORD PTR [ebp-0x20]
  407a1f:	mov    ecx,DWORD PTR [ebp-0x20]
  407a22:	sub    eax,ecx
  407a24:	mov    DWORD PTR [ebp-0x20],eax
  407a27:	mov    eax,DWORD PTR [ebp-0x2c]
  407a2a:	mov    ecx,DWORD PTR [ebp-0x20]
  407a2d:	mov    esi,0x7510899
  407a32:	xor    eax,esi
  407a34:	mov    edi,0x3272e0
  407a39:	add    eax,edi
  407a3b:	or     eax,ecx
  407a3d:	mov    DWORD PTR [ebp-0x20],eax
  407a40:	mov    eax,DWORD PTR [ebp-0x4]
  407a43:	mov    ecx,DWORD PTR [ebp-0x4]
  407a46:	jmp    0x409df0
  407a4b:	clc    
  407a4c:	mov    dh,0xeb
  407a4e:	cmp    DWORD PTR [ebx+0x707b9c77],0x7937e350
  407a58:	xchg   DWORD PTR [bp+di-0x5d],esp
  407a5c:	cmp    al,0x7a
  407a5e:	jp     0x407a45
  407a60:	pop    edi
  407a61:	jp     0x407add
  407a63:	(bad)  
  407a64:	adc    cl,ah
  407a66:	cmp    DWORD PTR [ebx+ebx*8+0x55206911],0x9f77dfbc
  407a71:	cmp    al,0xa8
  407a73:	aad    0x59
  407a75:	scas   al,BYTE PTR es:[edi]
  407a76:	xchg   esi,eax
  407a77:	mov    eax,ds
  407a79:	push   es
  407a7a:	in     al,dx
  407a7b:	sti    
  407a7c:	(bad)  
  407a7d:	idiv   esp
  407a7f:	jge    0x407a68
  407a81:	mov    eax,ds:0x52bac068
  407a86:	out    0x50,al
  407a88:	imul   ebp,DWORD PTR [ecx+0x75],0x884f09ca
  407a8f:	inc    eax
  407a90:	mov    bh,ah
  407a92:	aaa    
  407a93:	push   ss
  407a94:	mov    ebp,DWORD PTR [ebx+0x65]
  407a97:	es scas al,BYTE PTR es:[edi]
  407a99:	cmc    
  407a9a:	in     eax,dx
  407a9b:	mov    ah,0x6
  407a9d:	xchg   ebp,eax
  407a9e:	fistp  WORD PTR [ebx]
  407aa0:	jg     0x407a51
  407aa2:	sbb    DWORD PTR [esi],eax
  407aa4:	xchg   edx,eax
  407aa5:	pop    edi
  407aa6:	pop    edx
  407aa7:	dec    ecx
  407aa8:	dec    esp
  407aa9:	push   edi
  407aaa:	shl    DWORD PTR [eax+edi*4+0x6815ab1b],1
  407ab1:	loop   0x407b2e
  407ab3:	imul   DWORD PTR [esi+eax*1-0x3c7fc690]
  407aba:	pop    esp
  407abb:	jmp    0xf3bd:0x67ae0e95
  407ac2:	mov    ebp,0x1461ff8c
  407ac7:	clc    
  407ac8:	pop    esi
  407ac9:	stos   BYTE PTR es:[edi],al
  407aca:	pop    ebp
  407acb:	aad    0x2d
  407acd:	lea    edx,[edi]
  407acf:	jnp    0x407b1c
  407ad1:	imul   edi,DWORD PTR ds:0x37194e8e,0x799de7db
  407adb:	or     DWORD PTR [edx-0xb],ebx
  407ade:	push   esi
  407adf:	dec    eax
  407ae0:	xchg   esp,eax
  407ae1:	inc    edi
  407ae2:	lods   eax,DWORD PTR ds:[esi]
  407ae3:	test   BYTE PTR [eax],0x56
  407ae6:	jb     0x407aeb
  407ae8:	pop    es
  407ae9:	cmc    
  407aea:	scas   al,BYTE PTR es:[edi]
  407aeb:	popf   
  407aec:	int3   
  407aed:	fstp   QWORD PTR [eax]
  407aef:	fild   WORD PTR [esi+0x4bb73b4d]
  407af5:	leave  
  407af6:	std    
  407af7:	push   ds
  407af8:	fwait
  407af9:	xchg   ebx,eax
  407afa:	pop    ecx
  407afb:	ds push ebp
  407afd:	fisttp QWORD PTR [ecx-0x43000bcf]
  407b03:	cmc    
  407b04:	mov    BYTE PTR [eax],dh
  407b06:	mov    ebp,0x5ea60aec
  407b0b:	fisubr WORD PTR [esi+edx*1]
  407b0e:	pop    esi
  407b0f:	or     ebp,DWORD PTR [ebx]
  407b11:	and    eax,DWORD PTR [ebx+0x3cf403fc]
  407b17:	mov    ds:0x28a8aa0b,eax
  407b1c:	popf   
  407b1d:	dec    edi
  407b1e:	push   esi
  407b1f:	mov    edx,0xac8190b6
  407b24:	xchg   ecx,eax
  407b25:	sub    dl,dh
  407b27:	xchg   esi,eax
  407b28:	push   eax
  407b29:	or     esi,DWORD PTR [ebp-0x4f]
  407b2c:	(bad)  
  407b2d:	loopne 0x407adb
  407b2f:	stos   DWORD PTR es:[edi],eax
  407b30:	mov    eax,ds:0x5080f89a
  407b35:	jp     0x407b02
  407b37:	test   al,0xb
  407b39:	(bad)  
  407b3a:	push   ebp
  407b3b:	les    ecx,FWORD PTR [eax]
  407b3d:	icebp  
  407b3e:	sahf   
  407b3f:	int3   
  407b40:	cld    
  407b41:	lock jg 0x407b2b
  407b44:	and    al,0x5a
  407b46:	shl    eax,cl
  407b48:	hlt    
  407b49:	adc    DWORD PTR [edi-0x29],ebx
  407b4c:	push   edi
  407b4d:	adc    edx,0x6bc9b8b2
  407b53:	std    
  407b54:	out    0xb0,al
  407b56:	or     edx,ebx
  407b58:	data16 fbld TBYTE PTR [ecx]
  407b5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b5c:	mov    ebp,0x202e067e
  407b61:	shr    BYTE PTR [ecx+esi*1],cl
  407b64:	lds    ebp,FWORD PTR [esi+0x7f]
  407b67:	or     eax,0x8552cbb3
  407b6c:	or     ebp,DWORD PTR [esi+ebx*4+0x6ce41ca7]
  407b73:	jo     0x407be8
  407b75:	and    eax,0x9f2427f0
  407b7a:	rcr    BYTE PTR [eax+0x16],cl
  407b7d:	aas    
  407b7e:	add    bh,BYTE PTR [esi+0x74846bca]
  407b84:	pop    ecx
  407b85:	int    0x3
  407b87:	aam    0x3f
  407b89:	or     BYTE PTR [ebx+0x73c5d22e],al
  407b8f:	pop    eax
  407b90:	mov    cl,0x90
  407b92:	add    al,0xd5
  407b94:	loope  0x407b23
  407b96:	inc    edi
  407b97:	xor    BYTE PTR [edi-0xc],bh
  407b9a:	icebp  
  407b9b:	in     al,0xba
  407b9d:	sbb    eax,0xd8775de4
  407ba2:	xchg   esp,eax
  407ba3:	add    al,0xf
  407ba5:	repz dec ebx
  407ba7:	push   0xd25b8455
  407bac:	xchg   ecx,eax
  407bad:	cwde   
  407bae:	imul   ebp,DWORD PTR [edx+0x1ebe9eb1],0x9854295e
  407bb8:	in     eax,0x95
  407bba:	repz and eax,ebp
  407bbd:	adc    ebp,edx
  407bbf:	fs pop edi
  407bc1:	jmp    0x3d097970
  407bc6:	popa   
  407bc7:	in     al,dx
  407bc8:	(bad)
  407bcc:	xchg   eax,ebp
  407bce:	add    eax,0xa8b67151
  407bd3:	leave  
  407bd4:	lds    edx,FWORD PTR [eax+eiz*4]
  407bd7:	dec    esi
  407bd8:	or     al,0x89
  407bda:	enter  0xe1c1,0xe4
  407bde:	test   cl,0xca
  407be1:	add    cl,ch
  407be3:	adc    cl,BYTE PTR [edi+0x33dc9641]
  407be9:	mov    al,BYTE PTR [edx-0x578c58fb]
  407bef:	fld    TBYTE PTR [edx]
  407bf1:	mov    ah,0xb5
  407bf3:	imul   edx,DWORD PTR [edx-0x7d],0x30
  407bf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bf8:	das    
  407bf9:	pop    ebp
  407bfa:	pop    edx
  407bfb:	inc    eax
  407bfc:	cmp    DWORD PTR [edx],0xffffffe0
  407bff:	(bad)  
  407c00:	push   ds
  407c01:	sub    dl,dh
  407c03:	nop
  407c04:	pop    edx
  407c05:	inc    ecx
  407c06:	outs   dx,DWORD PTR ds:[esi]
  407c07:	and    BYTE PTR [esi+0x20faaad0],cl
  407c0d:	fcmovu st,st(4)
  407c0f:	push   es
  407c10:	xchg   edx,eax
  407c11:	xor    eax,0x50e9ae77
  407c16:	cs (bad) 
  407c18:	pop    edx
  407c19:	icebp  
  407c1a:	ss mov eax,0xefcbec30
  407c20:	jb     0x407c30
  407c22:	xchg   ebx,eax
  407c23:	addr16 ret 0x5a08
  407c27:	ss out 0x88,al
  407c2a:	icebp  
  407c2b:	in     al,0xb8
  407c2d:	nop
  407c2e:	push   edi
  407c2f:	pop    esi
  407c30:	pop    edi
  407c31:	loop   0x407c55
  407c33:	add    eax,0x3a89e02e
  407c38:	imul   ebx,DWORD PTR [ecx-0x60c5ba0e],0x33
  407c3f:	push   ss
  407c40:	pop    edi
  407c41:	jge    0x407c4c
  407c43:	jge    0x407cbb
  407c45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c46:	mov    al,ds:0x1032b61b
  407c4b:	repz fisub WORD PTR ds:[ecx+ebp*2+0x3]
  407c51:	sub    bh,cl
  407c53:	mov    fs,edx
  407c55:	add    dl,BYTE PTR [edx+0x6d]
  407c58:	fidivr DWORD PTR [esi]
  407c5a:	mov    ch,0xca
  407c5c:	jecxz  0x407c65
  407c5e:	mov    BYTE PTR [esi+0x6a],ch
  407c61:	mov    eax,0x14b5162d
  407c66:	iret   
  407c67:	cmp    al,0xa4
  407c69:	stos   DWORD PTR es:[edi],eax
  407c6a:	rol    DWORD PTR [ecx+esi*4-0x49bc0b6c],cl
  407c71:	and    eax,0x39d4fba5
  407c76:	xchg   esp,eax
  407c77:	xchg   DWORD PTR [esi+0x409ec3f4],edx
  407c7d:	mov    ah,0x67
  407c7f:	xlat   BYTE PTR ds:[ebx]
  407c80:	imul   edx,eax,0x5bbac21
  407c86:	stos   DWORD PTR es:[edi],eax
  407c87:	push   esi
  407c88:	jl     0x407c35
  407c8a:	jle    0x407cc4
  407c8c:	jae    0x407c69
  407c8e:	sub    edx,DWORD PTR [ebx+0x16]
  407c91:	xchg   BYTE PTR [ebx+0x41],bh
  407c94:	cld    
  407c95:	loope  0x407c2d
  407c97:	cmp    bh,bl
  407c99:	jmp    0x99a4:0x171a891
  407ca0:	popf   
  407ca1:	jmp    0x407c2c
  407ca3:	sti    
  407ca4:	push   eax
  407ca5:	jbe    0x407c74
  407ca7:	fnstcw WORD PTR [edx-0x28ba15bf]
  407cad:	dec    edx
  407cae:	rcl    DWORD PTR [ebp+edx*2+0x32afa0a1],1
  407cb5:	int3   
  407cb6:	loopne 0x407cb1
  407cb8:	mov    dh,0x70
  407cba:	(bad)  [ebx+eax*2]
  407cbd:	cmp    bl,BYTE PTR [edx]
  407cbf:	pop    ds
  407cc0:	push   es
  407cc1:	pop    esi
  407cc2:	das    
  407cc3:	fcomp  DWORD PTR [esi+0x8]
  407cc6:	sti    
  407cc7:	mov    edx,DWORD PTR [edx-0x22e3bfc9]
  407ccd:	cmp    bl,BYTE PTR [edi-0x531fbedd]
  407cd3:	js     0x407cfd
  407cd5:	into   
  407cd6:	mov    ds:0xc305fa04,eax
  407cdb:	fcmovb st,st(2)
  407cdd:	call   0xd174:0xd8a6a687
  407ce4:	jp     0x407ced
  407ce6:	inc    eax
  407ce7:	push   esi
  407ce8:	iret   
  407ce9:	push   ds
  407cea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ceb:	jne    0x407c7f
  407ced:	inc    ebp
  407cee:	fbstp  TBYTE PTR [eax+0x25]
  407cf1:	aad    0x9f
  407cf3:	inc    esi
  407cf4:	sbb    esi,DWORD PTR [ebx-0x27]
  407cf7:	ins    DWORD PTR es:[edi],dx
  407cf8:	scas   al,BYTE PTR es:[edi]
  407cf9:	xlat   BYTE PTR ds:[ebx]
  407cfa:	jmp    0xe26baa3d
  407cff:	push   ss
  407d00:	adc    eax,0x40e12561
  407d05:	xchg   DWORD PTR [ecx+0x3f5e28c4],ebx
  407d0b:	mov    bl,0x22
  407d0d:	fwait
  407d0e:	push   cs
  407d0f:	mul    DWORD PTR [edi+edi*2-0x2b]
  407d13:	mov    WORD PTR [eax+esi*4+0x371c28fa],es
  407d1a:	adc    BYTE PTR [eax-0x2],bh
  407d1d:	mov    ebp,0x73d739c6
  407d22:	sub    eax,0x50e328a5
  407d27:	test   DWORD PTR [edx+edx*2+0x45f0ec68],ebx
  407d2e:	mov    al,ds:0x3aeaa248
  407d33:	cs retf 0xdafe
  407d37:	mov    al,ds:0xb16bb9af
  407d3c:	inc    ebx
  407d3d:	gs ins DWORD PTR es:[edi],dx
  407d3f:	xor    al,0xcb
  407d41:	jge    0x407cd0
  407d43:	push   ss
  407d44:	fidiv  DWORD PTR [edx+0x3c612eef]
  407d4a:	jmp    0x1bd888b
  407d4f:	out    0xde,eax
  407d51:	(bad)  
  407d52:	xchg   edi,eax
  407d53:	pop    edi
  407d54:	dec    ecx
  407d55:	jmp    0xa8e4:0x41d2e6d9
  407d5c:	ss or  eax,0xbc0f34df
  407d62:	out    0xdb,eax
  407d64:	and    BYTE PTR [ebp-0x2f],cl
  407d67:	dec    eax
  407d68:	mov    bh,0x51
  407d6a:	outs   dx,BYTE PTR ds:[esi]
  407d6b:	aad    0x2e
  407d6d:	push   eax
  407d6e:	inc    edi
  407d6f:	sub    ah,dh
  407d71:	xchg   ebp,eax
  407d72:	push   DWORD PTR [eax-0x2b]
  407d75:	fcomp  DWORD PTR [ebp+esi*2+0x26]
  407d79:	sub    eax,0x50e58027
  407d7e:	stos   BYTE PTR es:[edi],al
  407d7f:	push   es
  407d80:	fcmovu st,st(5)
  407d82:	push   ebp
  407d83:	jl     0x407d70
  407d85:	std    
  407d86:	daa    
  407d87:	cwde   
  407d88:	fcom   QWORD PTR [esi-0x36956169]
  407d8e:	retf   
  407d8f:	repz mov eax,ds:0x45f5bc47
  407d95:	daa    
  407d96:	into   
  407d97:	cmp    ebx,eax
  407d99:	ficom  DWORD PTR [esi+0x42]
  407d9c:	mov    ebx,0x906006a8
  407da1:	out    dx,al
  407da2:	shr    BYTE PTR [edi],1
  407da4:	xor    al,0xd
  407da6:	mov    ds:0xc7cb96e8,al
  407dab:	sub    ch,ah
  407dad:	add    ebx,DWORD PTR [ecx+ebp*4-0x72aee498]
  407db4:	xchg   esi,eax
  407db5:	push   0x911369a
  407dba:	fs inc esi
  407dbc:	pop    ds
  407dbd:	jns    0x407e0b
  407dbf:	xor    al,BYTE PTR [ebx+0x7134fc64]
  407dc5:	push   ds
  407dc6:	inc    edx
  407dc7:	dec    edx
  407dc8:	sahf   
  407dc9:	rol    BYTE PTR [edx+esi*1+0x52],1
  407dcd:	push   ecx
  407dce:	dec    esp
  407dcf:	scas   eax,DWORD PTR es:[edi]
  407dd0:	sti    
  407dd1:	scas   al,BYTE PTR es:[edi]
  407dd2:	test   al,0xcd
  407dd4:	idiv   BYTE PTR [ecx-0x1c]
  407dd7:	mov    eax,0xe2517bad
  407ddc:	adc    al,0xa9
  407dde:	jecxz  0x407e59
  407de0:	popw   ss
  407de2:	icebp  
  407de3:	pop    ebx
  407de4:	leave  
  407de5:	inc    edi
  407de6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407de7:	ret    
  407de8:	(bad)  
  407de9:	fnstenv [esi-0x25e0741f]
  407def:	cs mov ah,0xf2
  407df2:	loopne 0x407e72
  407df4:	mov    esp,0x5d60246f
  407df9:	dec    edx
  407dfa:	inc    edi
  407dfb:	add    eax,ebp
  407dfd:	rcl    esp,0x2e
  407e00:	cli    
  407e01:	dec    eax
  407e02:	jecxz  0x407e27
  407e04:	fisubr WORD PTR [esi]
  407e06:	jp     0x407e83
  407e08:	mov    ebx,0xae23117
  407e0d:	pop    ecx
  407e0e:	mov    dh,0x1d
  407e10:	fisttp WORD PTR [esi-0x38812589]
  407e16:	pop    esi
  407e17:	mov    al,0x54
  407e19:	or     eax,0x67fa2926
  407e1e:	mul    BYTE PTR [ebp-0x46]
  407e21:	jecxz  0x407e36
  407e23:	pop    ecx
  407e24:	call   0x9e11:0x79f77018
  407e2b:	jecxz  0x407df0
  407e2d:	popf   
  407e2e:	ss popa 
  407e30:	mov    ds:0x102254be,al
  407e35:	fdiv   st(5),st
  407e37:	push   es
  407e38:	sub    DWORD PTR [esi],edi
  407e3a:	pop    eax
  407e3b:	and    eax,0xb0be2f91
  407e40:	inc    edx
  407e41:	fmul   DWORD PTR [eax+eiz*8-0x15]
  407e45:	pop    ecx
  407e46:	mov    esi,0xfd47f9d6
  407e4b:	sub    cl,bh
  407e4d:	call   0xaa9f:0xa33b8042
  407e54:	out    dx,al
  407e55:	inc    esi
  407e56:	stos   BYTE PTR es:[edi],al
  407e57:	lea    ebx,[edi]
  407e59:	out    dx,eax
  407e5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e5b:	js     0x407e4e
  407e5d:	sub    eax,0xb11a78c4
  407e62:	xchg   DWORD PTR ds:0xa6cf803,esi
  407e68:	sbb    esi,edi
  407e6a:	ja     0x407df2
  407e6c:	jg     0x407e57
  407e6e:	lods   eax,DWORD PTR ds:[esi]
  407e6f:	push   ecx
  407e70:	mov    dh,0xf1
  407e72:	shr    DWORD PTR [esi],0x4b
  407e75:	inc    edi
  407e76:	or     dh,0x73
  407e79:	outs   dx,BYTE PTR ds:[esi]
  407e7a:	or     eax,0x4f78c623
  407e7f:	test   al,0xaa
  407e81:	sahf   
  407e82:	retf   
  407e83:	rcl    DWORD PTR [edi+0x7a],cl
  407e86:	cdq    
  407e87:	jns    0x407efd
  407e89:	in     eax,0x99
  407e8b:	outs   dx,BYTE PTR ds:[esi]
  407e8c:	jbe    0x407e37
  407e8e:	jns    0x407f02
  407e90:	jl     0x407e8f
  407e92:	and    ecx,DWORD PTR [edi]
  407e94:	in     al,0x31
  407e96:	lock jecxz 0x407e8f
  407e99:	sub    BYTE PTR [esp+edi*4-0x36],ch
  407e9d:	xchg   esi,eax
  407e9e:	dec    esp
  407e9f:	jle    0x407e35
  407ea1:	xor    al,0xab
  407ea3:	pop    esi
  407ea4:	loope  0x407ebd
  407ea6:	aad    0xb0
  407ea8:	jmp    0xe08c4b6
  407ead:	jg     0x407eab
  407eaf:	mov    dh,0xd9
  407eb1:	adc    bl,al
  407eb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407eb4:	mov    dh,0x5e
  407eb6:	pop    ebp
  407eb7:	popa   
  407eb8:	repz sbb al,BYTE PTR ds:0xc83fb004
  407ebf:	hlt    
  407ec0:	fs in  eax,0x79
  407ec3:	lahf   
  407ec4:	jl     0x407edd
  407ec6:	pop    ebp
  407ec7:	(bad)  
  407ec8:	scas   eax,DWORD PTR es:[edi]
  407ec9:	and    al,0xd6
  407ecb:	cmp    eax,0x3f9aae7c
  407ed0:	xor    edi,edi
  407ed2:	(bad)  
  407ed3:	outs   dx,DWORD PTR ds:[esi]
  407ed4:	aas    
  407ed5:	inc    ebx
  407ed6:	pop    edx
  407ed7:	xor    eax,0x633c1592
  407edc:	mov    cl,0x5b
  407ede:	mov    esi,edx
  407ee0:	add    BYTE PTR [ecx+0x21],cl
  407ee3:	dec    edx
  407ee4:	push   es
  407ee5:	mov    eax,0xeaeeb059
  407eea:	aad    0x4b
  407eec:	daa    
  407eed:	add    BYTE PTR [eax-0xf],dl
  407ef0:	and    eax,0xad174885
  407ef5:	sub    eax,0x79421cda
  407efa:	dec    ebp
  407efb:	mov    ecx,0xd781197b
  407f00:	jne    0x407f4f
  407f02:	in     al,0xf1
  407f04:	das    
  407f05:	or     DWORD PTR [eax+0x10d606cb],0xfa8704c8
  407f0f:	xchg   edx,eax
  407f10:	dec    edi
  407f11:	lock sar BYTE PTR [edi+0x3c01242e],0xb7
  407f19:	adc    ecx,esp
  407f1b:	out    0x5d,eax
  407f1d:	mov    dh,0x37
  407f1f:	je     0x407f92
  407f21:	call   0xa242a0f7
  407f26:	and    esp,edi
  407f28:	inc    edi
  407f29:	or     al,0xf6
  407f2b:	mov    ah,0x89
  407f2d:	repnz inc ecx
  407f2f:	(bad)  
  407f30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f31:	mov    eax,ds:0xbc621919
  407f36:	and    al,0x1d
  407f38:	and    edi,edi
  407f3a:	inc    eax
  407f3b:	mov    dl,BYTE PTR [eax-0x7f]
  407f3e:	retf   0x9c11
  407f41:	rol    BYTE PTR [ecx],0xcd
  407f44:	iret   
  407f45:	sti    
  407f46:	es mov edi,0x2e54417d
  407f4c:	out    0x39,eax
  407f4e:	mov    eax,0x57282346
  407f53:	pop    eax
  407f54:	push   edi
  407f55:	out    0x7a,eax
  407f57:	mul    DWORD PTR [edi+0x59]
  407f5a:	test   DWORD PTR [edi-0x65],0xc90a079
  407f61:	(bad)  
  407f62:	in     al,dx
  407f63:	cmc    
  407f64:	dec    ebx
  407f65:	mov    DWORD PTR [edx],ecx
  407f67:	cs inc edi
  407f69:	mov    dh,0xa1
  407f6b:	pop    esp
  407f6c:	jl     0x407f6c
  407f6e:	pop    ecx
  407f6f:	sbb    DWORD PTR [ebx+0x4e1bc544],esp
  407f75:	or     dl,bh
  407f77:	push   0x34
  407f79:	int    0xc0
  407f7b:	data16 or bh,bh
  407f7e:	xchg   ecx,ebx
  407f80:	cmp    bl,ch
  407f82:	pusha  
  407f83:	push   0xffffffeb
  407f85:	out    0xd1,al
  407f87:	jae    0x407f66
  407f89:	pop    edx
  407f8a:	test   al,0x98
  407f8c:	sbb    esp,ebp
  407f8e:	test   BYTE PTR [ecx-0x1a],bh
  407f91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f92:	pop    ds
  407f93:	test   BYTE PTR [esi],0x60
  407f96:	mov    cl,0xb6
  407f98:	(bad)  
  407f99:	cmp    ebp,DWORD PTR [ebp+0x4c230c24]
  407f9f:	mov    esp,0xd59f5f94
  407fa4:	pop    es
  407fa5:	inc    ecx
  407fa6:	or     al,0xaf
  407fa8:	into   
  407fa9:	xor    eax,0xef0fd999
  407fae:	lods   eax,DWORD PTR ds:[esi]
  407faf:	mov    bh,0xac
  407fb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fb2:	out    dx,al
  407fb3:	sub    DWORD PTR [edx-0x2f61ba8c],ebp
  407fb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fba:	inc    ecx
  407fbb:	loopne 0x40801e
  407fbd:	(bad)  
  407fbe:	sbb    al,0x11
  407fc0:	mov    edx,0x3b210ac9
  407fc5:	dec    esi
  407fc6:	nop
  407fc7:	jno    0x407fe1
  407fc9:	sub    BYTE PTR [ecx-0x6c983747],0x2f
  407fd0:	add    eax,0xbadc45ac
  407fd5:	jmp    0xb129:0xc024a804
  407fdc:	cs mov esi,0x9a54a126
  407fe2:	fs repnz arpl WORD PTR cs:[edi-0x2c],cx
  407fe8:	ds xor bh,0x78
  407fec:	or     dl,BYTE PTR [ecx]
  407fee:	mov    cl,0xfc
  407ff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ff1:	data16 (bad) 
  407ff3:	mov    ax,?
  407ff6:	pop    ebp
  407ff7:	xor    esi,DWORD PTR [esi+0x7a]
  407ffa:	lock repnz mov al,0x20
  407ffe:	add    eax,0xe05f564c
  408003:	popf   
  408004:	enter  0xe892,0x2c
  408008:	pop    esi
  408009:	jno    0x407fca
  40800b:	jmp    0x408078
  40800d:	into   
  40800e:	hlt    
  40800f:	ins    BYTE PTR es:[edi],dx
  408010:	jmp    0x407fcd
  408012:	das    
  408013:	push   esi
  408014:	inc    esp
  408015:	imul   eax,DWORD PTR [esi-0x42],0x5d
  408019:	pop    esi
  40801a:	or     BYTE PTR [ebx],cl
  40801c:	push   ds
  40801d:	call   0xca26:0xd4c31ac6
  408024:	int3   
  408025:	mov    edx,0x5e76cddd
  40802a:	cmp    al,0xa3
  40802c:	in     al,0x59
  40802e:	dec    esi
  40802f:	jns    0x4080a7
  408031:	cld    
  408032:	out    0x8a,eax
  408034:	pop    ebp
  408035:	add    edx,DWORD PTR [ecx+0x72]
  408038:	bound  esi,QWORD PTR [eax+0x24d0ca34]
  40803e:	xchg   esp,eax
  40803f:	jmp    0x407fc1
  408041:	lahf   
  408042:	jmp    0xa77b:0x730087f3
  408049:	shl    DWORD PTR [ebx-0xb],cl
  40804c:	xchg   ecx,eax
  40804d:	stc    
  40804e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40804f:	jle    0x407fe2
  408051:	push   0xffffffaa
  408053:	add    eax,0x40deed4a
  408058:	(bad)  
  408059:	fsubr  DWORD PTR [ebp+ebp*1+0x7c5ed1d1]
  408060:	adc    edx,edi
  408062:	mov    eax,ds:0x5666e46
  408067:	jl     0x4080a9
  408069:	mov    ds:0x3edd6300,eax
  40806e:	sar    DWORD PTR [edi-0x6789cd9a],1
  408074:	shr    BYTE PTR [ebx+edi*1+0x3e44509f],0xe2
  40807c:	ds push 0xffffff84
  40807f:	jl     0x408049
  408081:	idiv   DWORD PTR [esi+0x71568378]
  408087:	imul   DWORD PTR [ecx-0x6b]
  40808a:	das    
  40808b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40808c:	inc    esp
  40808d:	dec    ebp
  40808e:	xchg   BYTE PTR [esi],dh
  408090:	jae    0x4080d5
  408092:	jmp    0xf88c0a7b
  408097:	cwde   
  408098:	(bad)  
  408099:	pop    ds
  40809a:	bound  esi,QWORD PTR [esi-0xbf31ffd]
  4080a0:	enter  0xf0d5,0x58
  4080a4:	lock jg 0x408054
  4080a7:	test   DWORD PTR [eax+0x4074b522],esi
  4080ad:	fwait
  4080ae:	or     al,0x0
  4080b0:	and    eax,DWORD PTR [ebp-0x1e]
  4080b3:	test   eax,0x51ff6971
  4080b8:	loop   0x408083
  4080ba:	fnstsw WORD PTR [ecx+0x1c]
  4080bd:	lds    edi,FWORD PTR [ebp-0x1]
  4080c0:	jmp    0xd89:0x8b6dc86c
  4080c7:	cmp    eax,0x5499efc7
  4080cc:	and    DWORD PTR [edx+eax*4-0x63334f1f],esi
  4080d3:	mov    ds:0x8adb313e,al
  4080d9:	sub    bh,cl
  4080db:	lds    eax,FWORD PTR [edi]
  4080dd:	pop    eax
  4080de:	inc    ebp
  4080df:	gs jne 0x408076
  4080e2:	and    ah,BYTE PTR [edx+esi*4+0x32]
  4080e6:	inc    edi
  4080e7:	push   cs
  4080e8:	push   ecx
  4080e9:	arpl   WORD PTR [edx-0x4732a27],bx
  4080ef:	outs   dx,BYTE PTR ds:[esi]
  4080f0:	jbe    0x40814a
  4080f2:	dec    esi
  4080f3:	adc    cl,BYTE PTR [ebp+eax*4-0x52]
  4080f7:	outs   dx,BYTE PTR ds:[esi]
  4080f8:	sbb    BYTE PTR ds:0xd8a145ba,cl
  4080fe:	lods   eax,DWORD PTR ds:[esi]
  4080ff:	out    dx,al
  408100:	xchg   edx,eax
  408101:	dec    ebx
  408102:	xchg   esi,eax
  408103:	xchg   ecx,eax
  408104:	rcr    edx,0x5e
  408107:	pop    edi
  408108:	pop    eax
  408109:	mov    BYTE PTR [ecx],cl
  40810b:	sar    DWORD PTR [edx],1
  40810d:	cs and DWORD PTR es:[edi-0x6],ebp
  408112:	sub    eax,0x38ef9dca
  408117:	lea    esp,[ebp-0x32144700]
  40811d:	mov    ds:0x3089301a,eax
  408122:	mov    edx,0x99a22032
  408127:	xchg   DWORD PTR [edx],eax
  408129:	mov    edi,0x65e07b6c
  40812e:	ss xchg ebx,eax
  408130:	pop    ss
  408131:	repz xchg edi,eax
  408133:	stos   DWORD PTR es:[edi],eax
  408134:	dec    esp
  408135:	cmp    eax,0x3cd6bfb7
  40813a:	popf   
  40813b:	add    al,0x23
  40813d:	adc    cl,bl
  40813f:	pop    eax
  408140:	test   al,0xb4
  408142:	rcr    BYTE PTR [edi+0xdd6b133],1
  408148:	adc    dl,BYTE PTR [esi-0x28117349]
  40814e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40814f:	xor    al,0x60
  408151:	dec    esi
  408152:	pop    ebp
  408153:	jp     0x40817b
  408155:	scas   eax,DWORD PTR es:[edi]
  408156:	rol    DWORD PTR [edi],cl
  408158:	jp     0x4080eb
  40815a:	retf   
  40815b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40815c:	fxam   
  40815e:	dec    esp
  40815f:	inc    ecx
  408160:	cli    
  408161:	gs out dx,eax
  408163:	inc    ebx
  408164:	jp     0x408174
  408166:	or     DWORD PTR [ebp-0x5c68c009],0xbe48c6de
  408170:	adc    BYTE PTR [eax],al
  408172:	mov    edx,0xe4def60f
  408177:	retf   
  408178:	std    
  408179:	dec    esi
  40817a:	das    
  40817b:	push   edi
  40817c:	push   0x2
  40817e:	je     0x40813b
  408180:	test   DWORD PTR ds:0xcc937153,ebx
  408186:	xchg   ecx,eax
  408187:	xchg   ecx,eax
  408188:	xlat   BYTE PTR ds:[ebx]
  408189:	or     DWORD PTR [ebx],ebx
  40818b:	stos   BYTE PTR es:[edi],al
  40818c:	retf   
  40818d:	and    dl,BYTE PTR [ecx]
  40818f:	pop    esi
  408190:	jnp    0x408188
  408192:	ror    esp,cl
  408194:	lds    edi,FWORD PTR [ebx-0x5]
  408197:	or     ecx,DWORD PTR [edi]
  408199:	add    dl,BYTE PTR [ebp-0x30]
  40819c:	push   cs
  40819d:	xchg   ebx,eax
  40819e:	jge    0x4081d8
  4081a0:	cmc    
  4081a1:	pusha  
  4081a2:	(bad)  
  4081a3:	outs   dx,BYTE PTR ds:[esi]
  4081a4:	adc    DWORD PTR [esi-0x39],edx
  4081a7:	dec    esi
  4081a8:	mov    BYTE PTR [edi-0x1e],al
  4081ab:	cs mov ebx,0xc397ad32
  4081b1:	les    eax,FWORD PTR [ebx-0x52]
  4081b4:	in     al,dx
  4081b5:	jge    0x408197
  4081b7:	cs adc al,0x7a
  4081ba:	inc    ebx
  4081bb:	test   al,0x60
  4081bd:	fist   DWORD PTR [ebp+0x30]
  4081c0:	inc    ebx
  4081c1:	(bad)  
  4081c2:	xor    bl,bl
  4081c4:	xchg   edx,eax
  4081c5:	jne    0x408207
  4081c7:	mov    eax,0x63327254
  4081cc:	or     ch,BYTE PTR [edi-0x7]
  4081cf:	stos   DWORD PTR es:[edi],eax
  4081d0:	lahf   
  4081d1:	or     edx,DWORD PTR [ebx]
  4081d3:	dec    ebp
  4081d4:	cmp    eax,0x6a6ebb88
  4081d9:	pop    es
  4081da:	jne    0x40822d
  4081dc:	pop    edx
  4081dd:	push   esp
  4081de:	mov    ah,0xf9
  4081e0:	stos   BYTE PTR es:[edi],al
  4081e1:	ror    BYTE PTR [eax+0x24],1
  4081e4:	adc    BYTE PTR [edx-0x4dba4f2],bl
  4081ea:	and    DWORD PTR [ebp+0x50],0x97d29522
  4081f1:	ins    DWORD PTR es:[edi],dx
  4081f2:	retf   0x46f
  4081f5:	push   eax
  4081f6:	scas   al,BYTE PTR es:[edi]
  4081f7:	push   ss
  4081f8:	inc    esi
  4081f9:	jl     0x4081e3
  4081fb:	jmp    0x758b:0x2daeed3a
  408202:	push   esi
  408203:	mov    ah,0xc3
  408205:	jnp    0x4081da
  408207:	dec    ebx
  408208:	mov    esi,0x1ba70f2e
  40820d:	pop    es
  40820e:	clc    
  40820f:	cmp    DWORD PTR ds:0x37610c23,ebp
  408215:	and    BYTE PTR cs:[ecx-0x1b6f2c84],0xa3
  40821d:	or     dl,BYTE PTR [esi]
  40821f:	lods   eax,DWORD PTR ds:[esi]
  408220:	enter  0xce0a,0x9
  408224:	mov    al,BYTE PTR gs:[eax-0x3f]
  408228:	xor    al,0xec
  40822a:	sub    DWORD PTR [esi+0x9c7cdd9],ebx
  408230:	sbb    eax,0xcb35418c
  408235:	lahf   
  408236:	push   edx
  408237:	mov    DWORD PTR [edi-0x7c57f979],ecx
  40823d:	pop    esp
  40823e:	mul    DWORD PTR [edi-0x4]
  408241:	adc    DWORD PTR [ebx+0x6ca51bae],edx
  408247:	shr    DWORD PTR [edi+0x46af431c],cl
  40824d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40824e:	jmp    0x2cd:0xe55de5c2
  408255:	jp     0x4081f1
  408257:	sti    
  408258:	xor    eax,0x8eb02a8
  40825d:	pushf  
  40825e:	jecxz  0x40824b
  408260:	cmp    edi,DWORD PTR ds:0xa1fce6c
  408266:	loopne 0x40828b
  408268:	sti    
  408269:	repz int 0xfe
  40826c:	mov    bh,0xe9
  40826e:	fucom  st(3)
  408270:	xlat   BYTE PTR ds:[ebx]
  408271:	outs   dx,BYTE PTR ds:[esi]
  408272:	sbb    eax,DWORD PTR gs:[edi]
  408275:	pop    esp
  408276:	add    dl,BYTE PTR [esi]
  408278:	jl     0x408263
  40827a:	sbb    eax,0x2fc99cb5
  40827f:	and    ch,ah
  408281:	xor    al,0x86
  408283:	std    
  408284:	pop    esi
  408285:	sub    al,0x4f
  408287:	cli    
  408288:	or     eax,0x54c59204
  40828d:	mov    esi,0xd9efc0bc
  408292:	or     dl,BYTE PTR [edx]
  408294:	mov    cl,0xd1
  408296:	jmp    0xb1a40ca0
  40829b:	xlat   BYTE PTR ds:[ebx]
  40829c:	mov    eax,ds:0x97b90b9c
  4082a1:	xor    edx,DWORD PTR [edx]
  4082a3:	sub    BYTE PTR [esi-0x1c],ah
  4082a6:	and    ebp,DWORD PTR [ebx+0x46b0f0b]
  4082ac:	mov    esp,0xc60f1a95
  4082b1:	add    al,0x12
  4082b3:	sub    BYTE PTR ds:0xd37617f6,bh
  4082b9:	ffree  st(5)
  4082bb:	jne    0x4082fc
  4082bd:	aam    0x1
  4082bf:	pop    ds
  4082c0:	test   edi,esp
  4082c2:	ins    DWORD PTR es:[edi],dx
  4082c3:	sbb    al,BYTE PTR [edx-0x64a8c485]
  4082c9:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082cb:	daa    
  4082cc:	daa    
  4082cd:	dec    ebx
  4082ce:	sar    BYTE PTR [ecx-0x48],cl
  4082d1:	push   ebx
  4082d2:	cmp    DWORD PTR [ebp+0x7bb28040],ebp
  4082d8:	cmp    DWORD PTR [eax-0x76],ebx
  4082db:	(bad)  
  4082dd:	icebp  
  4082de:	mov    DWORD PTR [ecx+esi*1-0x3b4568cc],ecx
  4082e5:	cdq    
  4082e6:	or     BYTE PTR [ecx],dl
  4082e8:	addr16 fs push es
  4082eb:	lea    edx,[ebp+0xd73d86]
  4082f1:	push   DWORD PTR [edx-0x2c0b7f7]
  4082f7:	int3   
  4082f8:	adc    ah,dh
  4082fa:	mov    edi,0xfc76c8af
  4082ff:	xchg   edx,eax
  408300:	push   0x1e691972
  408305:	add    DWORD PTR [ecx+0x5df9b4ac],ecx
  40830b:	int3   
  40830c:	xchg   ebp,eax
  40830d:	cmp    al,0x1e
  40830f:	(bad)  
  408310:	push   ebx
  408311:	xor    DWORD PTR [edi-0x4f9f395f],edi
  408317:	xchg   edx,eax
  408318:	add    dl,BYTE PTR [ebx+0x2fb40f88]
  40831e:	into   
  40831f:	clc    
  408320:	xor    BYTE PTR [eax+eax*8+0x63],ah
  408324:	jbe    0x408381
  408326:	jo     0x4082ca
  408328:	cwde   
  408329:	retf   0x4626
  40832c:	inc    ebx
  40832d:	repnz scas al,BYTE PTR es:[edi]
  40832f:	dec    eax
  408330:	outs   dx,BYTE PTR ds:[esi]
  408331:	clc    
  408332:	mov    bl,0x66
  408334:	sti    
  408335:	(bad)  
  408336:	cmp    ebx,DWORD PTR ds:0x5b3beb75
  40833c:	cmc    
  40833d:	sbb    ecx,DWORD PTR [ebx-0x27]
  408340:	js     0x408368
  408342:	pop    ecx
  408343:	cmp    bh,BYTE PTR [esi+ebx*1]
  408346:	add    eax,0x9ec9dbaf
  40834b:	mov    edx,0x59ecb08f
  408350:	mov    bh,0x91
  408352:	jne    0x408397
  408354:	sub    ah,ch
  408356:	outs   dx,BYTE PTR ds:[esi]
  408357:	jmp    0x408365
  408359:	inc    esi
  40835a:	pop    eax
  40835b:	repnz nop
  40835d:	jmp    0x4082f7
  40835f:	(bad)  
  408360:	lock dec BYTE PTR [ebp+0x14]
  408364:	fcmovb st,st(1)
  408366:	sbb    ah,BYTE PTR [eax+0x6d]
  408369:	ds gs call 0xcfc151fe
  408370:	mov    bl,0x89
  408372:	arpl   cx,ax
  408374:	fidiv  DWORD PTR [edx-0x5b6fcae7]
  40837a:	and    BYTE PTR [edx-0xc02bb82],bh
  408380:	push   esp
  408381:	inc    edx
  408382:	jl     0x4083f8
  408384:	or     DWORD PTR [ebx-0x36],edx
  408387:	shl    DWORD PTR [ecx+0x349b3cd2],0x3e
  40838e:	sub    al,0xcb
  408390:	mov    al,0x5
  408392:	pop    esi
  408393:	imul   eax,DWORD PTR [ecx],0x60
  408396:	adc    al,0xd7
  408398:	stos   DWORD PTR es:[edi],eax
  408399:	imul   ebp,DWORD PTR [ebx-0x7dcf040],0x33b15d0
  4083a3:	outs   dx,DWORD PTR ds:[esi]
  4083a4:	and    dh,dh
  4083a6:	sbb    edi,DWORD PTR [esi+0x508c91c0]
  4083ac:	or     dl,BYTE PTR [ecx]
  4083ae:	dec    eax
  4083af:	mov    esi,0x3935082f
  4083b4:	mov    eax,0x35f07078
  4083b9:	sti    
  4083ba:	out    dx,eax
  4083bb:	mov    ch,BYTE PTR [esi+ecx*2+0x66]
  4083bf:	add    edi,edx
  4083c1:	jnp    0x4083a7
  4083c3:	data16 fsubr st,st(2)
  4083c6:	or     bh,bl
  4083c8:	push   ss
  4083c9:	sbb    al,BYTE PTR [ebp-0x61ffe5eb]
  4083cf:	rcl    edi,0x43
  4083d2:	adc    dh,cl
  4083d4:	pop    edx
  4083d5:	push   cs
  4083d6:	add    BYTE PTR [esi+ebp*8+0x5a16edb4],bh
  4083dd:	sahf   
  4083de:	jnp    0x40845a
  4083e0:	das    
  4083e1:	add    eax,0x7054d292
  4083e6:	cld    
  4083e7:	int    0x1b
  4083e9:	pop    esp
  4083ea:	add    BYTE PTR [eax-0x38558a5e],0x2b
  4083f1:	xor    DWORD PTR [esi],ebp
  4083f3:	add    al,0x40
  4083f5:	mov    bh,0x32
  4083f7:	cmp    DWORD PTR [edx-0xcb1e24d],esp
  4083fd:	cli    
  4083fe:	and    ecx,esp
  408400:	sub    BYTE PTR [ecx],bl
  408402:	(bad)  
  408403:	jge    0x4083c0
  408405:	xchg   DWORD PTR [edx+0x2f],eax
  408408:	or     bl,al
  40840a:	push   edi
  40840b:	mov    ds:0x208c08d9,al
  408410:	sbb    eax,0x4080760f
  408415:	adc    cl,dh
  408417:	mov    esi,0x6e9c208f
  40841c:	mov    cl,0xf1
  40841e:	adc    eax,0x3e38fc97
  408423:	pop    esi
  408424:	cmp    dl,dh
  408426:	test   eax,0x94ac1cc6
  40842b:	mov    ch,0xf2
  40842d:	push   edx
  40842e:	cs fdivp st(7),st
  408431:	mov    dl,0xe8
  408433:	add    ebp,DWORD PTR [edx+esi*4]
  408436:	jne    0x4084a6
  408438:	mov    eax,ds:0x264a29bb
  40843d:	and    BYTE PTR [ebx],0x22
  408440:	fidivr WORD PTR [ebx]
  408442:	std    
  408443:	mov    al,ds:0x2c8de468
  408448:	ret    0x466b
  40844b:	cmp    BYTE PTR [edx+eax*4-0x6c70fc39],dh
  408452:	rcl    DWORD PTR [eax],0xb5
  408455:	int    0x9b
  408457:	and    bl,BYTE PTR [ebp-0x1e]
  40845a:	scas   al,BYTE PTR es:[edi]
  40845b:	jno    0x40849a
  40845d:	daa    
  40845e:	or     bl,BYTE PTR [ebx+0x33]
  408461:	adc    DWORD PTR [edi-0x69bbfdf4],eax
  408467:	out    0xc6,al
  408469:	inc    esi
  40846a:	jno    0x40842f
  40846c:	pop    ebp
  40846d:	mov    esp,0x770bedeb
  408472:	push   cs
  408473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408474:	shl    DWORD PTR [edx],0xe
  408477:	and    DWORD PTR [eax+ebx*4-0x51aaa978],ebx
  40847e:	jae    0x408416
  408480:	jg     0x4084f0
  408482:	fwait
  408483:	xlat   BYTE PTR ds:[ebx]
  408484:	stos   DWORD PTR es:[edi],eax
  408485:	popf   
  408486:	out    dx,eax
  408487:	push   ebp
  408488:	fdivrp st(0),st
  40848a:	push   esp
  40848b:	lea    edx,[ebp-0x35277412]
  408491:	jl     0x4084da
  408493:	clc    
  408494:	sub    BYTE PTR [ecx-0x20],ah
  408497:	cld    
  408498:	adc    BYTE PTR [ebx],bl
  40849a:	rcl    DWORD PTR ds:0x7601736a,1
  4084a0:	leave  
  4084a1:	fisub  WORD PTR [esi]
  4084a3:	jl     0x408502
  4084a5:	adc    al,BYTE PTR [ebx+0x36]
  4084a8:	inc    edi
  4084a9:	mov    cl,0x63
  4084ab:	(bad)  
  4084ac:	xchg   esi,eax
  4084ad:	mov    eax,ds:0x6214a0a6
  4084b2:	mov    BYTE PTR [ebp+0x71114be2],0xb2
  4084b9:	mov    al,ds:0x563ada7
  4084be:	shl    ebx,cl
  4084c0:	pop    es
  4084c1:	jne    0x4084fd
  4084c3:	mov    al,ds:0xb930f2d4
  4084c8:	pop    ecx
  4084c9:	das    
  4084ca:	mov    dl,0x80
  4084cc:	push   0x6e1832be
  4084d1:	xchg   DWORD PTR [ebp-0x1bc16e02],esp
  4084d7:	mov    ch,0x4f
  4084d9:	in     al,0x60
  4084db:	jo     0x408551
  4084dd:	xchg   esp,eax
  4084de:	sub    edx,edi
  4084e0:	jbe    0x408491
  4084e2:	aam    0x2
  4084e4:	jl     0x4084b1
  4084e6:	out    0x54,al
  4084e8:	dec    ebx
  4084e9:	mov    ch,0x98
  4084eb:	(bad)  
  4084ec:	jo     0x408542
  4084ee:	jge    0x408529
  4084f0:	xchg   ebx,eax
  4084f2:	sbb    al,0xe
  4084f4:	and    al,0xf7
  4084f6:	test   eax,0x8551508f
  4084fb:	push   ss
  4084fc:	pop    DWORD PTR [edi-0x14]
  4084ff:	gs lock jp 0x4084fa
  408503:	push   0xa9e8f081
  408508:	(bad)  
  408509:	aam    0xf1
  40850b:	cwde   
  40850c:	add    ebp,eax
  40850e:	in     al,0xba
  408510:	xor    BYTE PTR [edi+0x3b],bl
  408513:	data16 jo 0x408548
  408516:	pusha  
  408517:	mov    edx,0x40f6cad0
  40851c:	sahf   
  40851d:	test   al,0x62
  40851f:	and    DWORD PTR [esi-0x73dec751],eax
  408525:	fistp  QWORD PTR [ebx]
  408527:	sbb    dh,BYTE PTR [esi]
  408529:	fs mov ch,0xd7
  40852c:	inc    eax
  40852d:	outs   dx,DWORD PTR ds:[esi]
  40852e:	(bad)  
  40852f:	adc    ch,BYTE PTR gs:[edi]
  408532:	xor    al,0x8b
  408534:	xor    al,0x99
  408536:	dec    esi
  408537:	mov    ecx,0x14d7f603
  40853c:	call   0x261f792e
  408541:	adc    ecx,ebp
  408543:	sub    al,0xf5
  408545:	clc    
  408546:	(bad)  
  408547:	aam    0xfb
  408549:	jge    0x4084e6
  40854b:	int3   
  40854c:	call   ebx
  40854e:	push   esi
  40854f:	sub    al,0xe7
  408551:	and    DWORD PTR [edx],ecx
  408553:	mov    ebx,0xcf6436f7
  408558:	mov    ah,0x5c
  40855a:	int3   
  40855b:	and    edx,eax
  40855d:	repz test al,0xff
  408560:	and    esp,0xffffff89
  408563:	push   eax
  408564:	test   eax,0xd11995d9
  408569:	fsubr  QWORD PTR [esi+0x7c]
  40856c:	push   ss
  40856d:	jae    0x40851a
  40856f:	jmp    0x4085ae
  408571:	retf   0x6775
  408574:	pusha  
  408575:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408576:	cwde   
  408577:	add    ah,BYTE PTR [esi+0x7bffd3d0]
  40857d:	and    DWORD PTR [edx+0x52bfceaf],edx
  408583:	mov    al,0x1a
  408585:	int3   
  408586:	and    al,0xaf
  408588:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408589:	pop    ebx
  40858a:	lock or bh,al
  40858d:	cdq    
  40858e:	sar    DWORD PTR [eax+edi*4+0x6],cl
  408592:	call   0x5f4e99c8
  408597:	sub    ch,0x39
  40859a:	in     eax,dx
  40859b:	scas   al,BYTE PTR es:[edi]
  40859c:	xor    edx,eax
  40859e:	rol    DWORD PTR [ecx+0x6150ab18],0x3
  4085a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085a6:	and    BYTE PTR [esi-0x3c],al
  4085a9:	loope  0x4085f4
  4085ab:	popf   
  4085ac:	mov    edx,eax
  4085ae:	xchg   edi,eax
  4085af:	imul   eax,DWORD PTR [esi+0x44],0x3e
  4085b3:	cmp    al,0x31
  4085b5:	pop    eax
  4085b6:	cmp    BYTE PTR [ebp-0x1f6f70e2],0xe9
  4085bd:	imul   esp,DWORD PTR [ecx],0xce00b7ea
  4085c3:	cwde   
  4085c4:	add    DWORD PTR [edi],esp
  4085c6:	mov    eax,ds:0x2f7d6ca0
  4085cb:	push   esi
  4085cc:	std    
  4085cd:	sahf   
  4085ce:	sub    DWORD PTR [edx+eax*4-0x37],0xdb6a2719
  4085d6:	ror    DWORD PTR [ebp+0x71],0xc5
  4085da:	push   es
  4085db:	sbb    BYTE PTR [ecx-0x7b],cl
  4085de:	js     0x4085b0
  4085e0:	stc    
  4085e1:	push   es
  4085e2:	ficomp DWORD PTR [edi-0x2e3c6b6f]
  4085e8:	add    al,0x8a
  4085ea:	pop    ds
  4085eb:	(bad)  
  4085ec:	out    dx,eax
  4085ed:	mov    esi,0xf16c13cf
  4085f2:	xlat   BYTE PTR gs:[ebx]
  4085f4:	dec    eax
  4085f5:	mov    ds:0xff652fb6,al
  4085fa:	add    eax,0xef87c393
  4085ff:	or     BYTE PTR [edx-0x5131e62c],ch
  408605:	mov    esp,0x45dc8eff
  40860a:	(bad)  
  40860b:	and    eax,0x67b31497
  408610:	push   ecx
  408611:	push   esp
  408612:	cld    
  408613:	mov    WORD PTR [edx*2+0x556126d7],?
  40861a:	sbb    ah,BYTE PTR [edx-0x4199489b]
  408620:	sbb    eax,ebx
  408622:	lods   al,BYTE PTR ds:[esi]
  408623:	test   al,0x7b
  408625:	(bad)  
  408626:	cmp    edx,DWORD PTR [ebp-0x83aef7c]
  40862c:	or     al,0x8b
  40862e:	adc    eax,0xb317cca8
  408633:	add    ch,BYTE PTR ds:0xadf9e2b5
  408639:	(bad)  
  40863a:	shr    DWORD PTR [eax-0x36],cl
  40863d:	add    BYTE PTR [ebp+0x2d831c88],cl
  408643:	loopne 0x408642
  408645:	ror    BYTE PTR [eax+0x4dd84bb4],1
  40864b:	and    cl,al
  40864d:	mov    WORD PTR [edi+0x7c959764],?
  408653:	sar    bh,cl
  408655:	xchg   ebx,eax
  408656:	es hlt 
  408658:	out    0x1,al
  40865a:	test   al,0x96
  40865c:	loope  0x40863d
  40865e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40865f:	aad    0x53
  408661:	fwait
  408662:	mov    al,0x83
  408664:	(bad)  
  408665:	mov    al,0x73
  408667:	enter  0x556,0x15
  40866b:	je     0x408617
  40866d:	cmp    BYTE PTR [edx],cl
  40866f:	in     eax,0xc6
  408671:	add    DWORD PTR ds:0xe99781bd,ecx
  408677:	mov    esi,DWORD PTR [ecx+0x3ce2a00c]
  40867d:	pusha  
  40867e:	ins    DWORD PTR es:[edi],dx
  40867f:	jg     0x4086d1
  408681:	xlat   BYTE PTR ds:[ebx]
  408682:	retf   
  408683:	xchg   ecx,eax
  408684:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408685:	arpl   WORD PTR [edx-0xbf7f66b],si
  40868b:	adc    ch,BYTE PTR [edx]
  40868d:	leave  
  40868e:	daa    
  40868f:	mov    edi,0xf517718e
  408694:	add    eax,DWORD PTR [ecx]
  408696:	mov    ch,0x2a
  408698:	dec    ebx
  408699:	sub    ebp,edi
  40869b:	imul   DWORD PTR [ecx-0x51]
  40869e:	ror    DWORD PTR ds:0xe0aa4005,0x7b
  4086a5:	fcmovnb st,st(2)
  4086a7:	pusha  
  4086a8:	xor    DWORD PTR [eax-0x4b],esi
  4086ab:	outs   dx,BYTE PTR ds:[esi]
  4086ac:	pop    esi
  4086ad:	test   DWORD PTR [ecx],ebp
  4086af:	fisubr DWORD PTR [ebx+esi*2+0x6c01264e]
  4086b6:	std    
  4086b7:	dec    esi
  4086b8:	xlat   BYTE PTR ds:[ebx]
  4086b9:	ret    0x7e19
  4086bc:	sbb    al,0x2f
  4086be:	adc    ecx,DWORD PTR [eax-0x41]
  4086c1:	ja     0x4086e3
  4086c3:	call   0xc4869442
  4086c8:	frstor [esi+0x1]
  4086cb:	sbb    DWORD PTR [ecx+0x76d1f84a],esp
  4086d1:	xchg   edi,eax
  4086d2:	push   es
  4086d3:	pop    eax
  4086d4:	push   es
  4086d5:	stc    
  4086d6:	int3   
  4086d7:	add    eax,0xf6971046
  4086dc:	dec    ebx
  4086dd:	mov    cr2,edi
  4086e0:	jo     0x40875b
  4086e2:	xchg   edi,eax
  4086e3:	cdq    
  4086e4:	push   esi
  4086e5:	xchg   ebp,edx
  4086e7:	cwde   
  4086e8:	cmc    
  4086e9:	jmp    0xc411628b
  4086ee:	imul   ebx,DWORD PTR ds:0xa0ef3d37,0xfffffff8
  4086f5:	call   0xa744550e
  4086fa:	aad    0x57
  4086fc:	das    
  4086fd:	xor    al,0xbe
  4086ff:	sbb    eax,0xbf78e6e1
  408704:	adc    eax,0x7bd5611f
  408709:	sbb    eax,0x953f3c3e
  40870e:	cmc    
  40870f:	scas   eax,DWORD PTR es:[edi]
  408710:	and    DWORD PTR [ecx+esi*2-0x18f06028],edi
  408717:	dec    ecx
  408718:	inc    esi
  408719:	arpl   WORD PTR [eax+0x9],dx
  40871c:	out    dx,al
  40871d:	js     0x4086d6
  40871f:	dec    edx
  408720:	xor    al,0x9
  408722:	dec    ebx
  408723:	pop    es
  408724:	aad    0x92
  408726:	pop    es
  408727:	add    al,0x70
  40872a:	scas   al,BYTE PTR es:[edi]
  40872b:	pop    esp
  40872c:	xlat   BYTE PTR ds:[ebx]
  40872d:	jno    0x4086da
  40872f:	cmc    
  408730:	mov    eax,ds:0x1aa246e7
  408735:	jns    0x40877c
  408737:	cld    
  408738:	cmp    al,0x55
  40873a:	add    DWORD PTR [ebx+0x79],ecx
  40873d:	outs   dx,BYTE PTR ds:[esi]
  40873e:	pop    es
  40873f:	popa   
  408740:	push   ebx
  408741:	sbb    ecx,DWORD PTR [ebx]
  408743:	mov    eax,ds:0x176e2b6
  408748:	jg     0x4086da
  40874a:	ja     0x40873f
  40874c:	xchg   ebx,eax
  40874d:	xor    ah,BYTE PTR [esp+eiz*4+0x7f]
  408751:	xor    ah,dh
  408753:	cli    
  408754:	rcr    DWORD PTR [edx],1
  408756:	and    DWORD PTR [edx],edi
  408758:	mov    ebp,DWORD PTR [edi+0x4]
  40875b:	fdivr  DWORD PTR [edi+esi*1-0x363eb54a]
  408762:	sub    al,0xfb
  408764:	jp     0x408790
  408766:	pop    DWORD PTR [edx]
  408768:	mov    esi,0x91104aa3
  40876d:	mov    dh,0x8c
  40876f:	push   esi
  408770:	jae    0x40879f
  408772:	int    0x8a
  408774:	call   0x848a:0x5712bb7a
  40877b:	iret   
  40877c:	dec    esi
  40877d:	leave  
  40877e:	rcl    DWORD PTR [edx],0x49
  408781:	adc    al,0xa
  408783:	xor    al,0x75
  408785:	daa    
  408786:	in     eax,0xe6
  408788:	or     eax,0x9bc93f95
  40878d:	xchg   esi,eax
  40878e:	ins    BYTE PTR es:[edi],dx
  40878f:	adc    ebp,0xffffffb4
  408792:	jmp    0x3bd2:0xac2f3adc
  408799:	sar    BYTE PTR [edx+0x225339e2],cl
  40879f:	out    0x67,al
  4087a1:	ins    DWORD PTR es:[edi],dx
  4087a2:	ret    
  4087a3:	fstp   QWORD PTR [edx+edi*1]
  4087a6:	jge    0x408823
  4087a8:	call   0xa092fcc7
  4087ad:	inc    eax
  4087ae:	or     al,0x5
  4087b0:	add    BYTE PTR [ecx-0x11344ff3],bl
  4087b6:	jge    0x408826
  4087b8:	call   0x633c:0xfa5d3b49
  4087bf:	icebp  
  4087c0:	call   0xb5d9a3dc
  4087c5:	retf   
  4087c6:	imul   eax,DWORD PTR [edx],0x7f
  4087c9:	dec    esi
  4087ca:	shl    DWORD PTR ds:0x7b4a59c3,0xe7
  4087d1:	retf   
  4087d2:	mov    ah,BYTE PTR [edi]
  4087d4:	out    0x92,al
  4087d6:	stc    
  4087d7:	loop   0x40883c
  4087d9:	jo     0x408805
  4087db:	rcr    DWORD PTR [edx-0x1dce190d],cl
  4087e1:	in     al,0xf0
  4087e3:	addr16 fcomp st(5)
  4087e6:	mov    ch,0xd4
  4087e8:	pop    esi
  4087e9:	and    DWORD PTR ds:0x60121f2a,eax
  4087ef:	dec    edi
  4087f0:	and    eax,0xb24f011f
  4087f5:	scas   eax,DWORD PTR es:[edi]
  4087f6:	jae    0x408778
  4087f8:	sub    BYTE PTR gs:[eax-0x80],0xa8
  4087fd:	popf   
  4087fe:	mov    DWORD PTR [edi+0x58],ecx
  408801:	or     al,0x45
  408803:	stos   BYTE PTR es:[edi],al
  408804:	mov    ecx,0xd052b254
  408809:	mov    bh,0x1e
  40880b:	pop    esp
  40880c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40880d:	dec    edi
  40880e:	mov    edi,0xf1628ef4
  408813:	ret    
  408814:	mov    DWORD PTR [eax+0x77],0xc228db51
  40881b:	xor    eax,0x726977d8
  408820:	jge    0x408883
  408822:	je     0x4087ef
  408824:	hlt    
  408825:	dec    edx
  408826:	fild   WORD PTR [esi+0x46]
  408829:	sahf   
  40882a:	push   0x7b
  40882c:	fild   WORD PTR [ecx-0x446299fd]
  408832:	lods   eax,DWORD PTR ds:[esi]
  408833:	rcl    DWORD PTR [eax+edi*2-0xd9e3eac],1
  40883a:	inc    ebp
  40883b:	push   ss
  40883c:	icebp  
  40883d:	xchg   ebx,eax
  40883e:	in     eax,0x40
  408840:	add    eax,0x54599c12
  408845:	pop    edx
  408846:	sub    bl,BYTE PTR [ecx-0x2]
  408849:	push   edi
  40884a:	jmp    DWORD PTR [edx]
  40884c:	xchg   esp,eax
  40884d:	jb     0x4087fb
  40884f:	and    edi,DWORD PTR [eax]
  408851:	fdivr  QWORD PTR [edi]
  408853:	inc    DWORD PTR [esi+0x5c]
  408856:	add    cl,BYTE PTR [ecx-0x3d]
  408859:	(bad)  
  40885a:	repnz mov bh,0xac
  40885d:	(bad)  
  40885e:	jge    0x40881b
  408860:	aas    
  408861:	xchg   BYTE PTR [ebx],ah
  408863:	and    ebp,DWORD PTR [ebp+0xbef3e29]
  408869:	ins    DWORD PTR es:[edi],dx
  40886a:	jne    0x40880d
  40886c:	loopne 0x4088be
  40886e:	int3   
  40886f:	daa    
  408870:	xchg   DWORD PTR [ecx-0xd],esp
  408873:	jmp    0x996246ed
  408878:	out    dx,eax
  408879:	xchg   edi,eax
  40887a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40887b:	or     dh,BYTE PTR [edi-0x3e]
  40887e:	push   0x4f
  408880:	cwde   
  408881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408882:	stos   BYTE PTR es:[edi],al
  408883:	or     eax,0xc1382a45
  408888:	adc    DWORD PTR ds:0x343702ca,ecx
  40888e:	xor    ch,ah
  408890:	sub    ebp,DWORD PTR [eax-0xbc6b101]
  408896:	stos   BYTE PTR es:[edi],al
  408897:	enter  0x85e1,0x31
  40889b:	fdivrp st(5),st
  40889d:	scas   eax,DWORD PTR es:[edi]
  40889e:	enter  0x3abe,0xbb
  4088a2:	pop    ecx
  4088a3:	mov    ah,0x56
  4088a5:	fdiv   QWORD PTR [ecx+0x1bafa4e4]
  4088ab:	aad    0xf
  4088ad:	into   
  4088ae:	mov    cl,0x22
  4088b0:	mov    WORD PTR [edi+0x3ea98fa2],?
  4088b6:	pop    esp
  4088b7:	add    eax,0x602e6d2a
  4088bc:	jne    0x4088e8
  4088be:	shr    ecx,cl
  4088c0:	ret    0x9f9a
  4088c3:	mov    edi,0xe26ab3ef
  4088c8:	mov    bl,0x36
  4088ca:	outs   dx,BYTE PTR ds:[esi]
  4088cb:	xchg   DWORD PTR [edx],edi
  4088cd:	(bad)  
  4088ce:	pop    edi
  4088cf:	rcl    DWORD PTR [ecx+eiz*4],1
  4088d2:	out    dx,al
  4088d3:	and    BYTE PTR [edi],dl
  4088d5:	mov    cl,0x2f
  4088d7:	jmp    0x4088a9
  4088d9:	jno    0x408894
  4088db:	and    DWORD PTR ds:0xc6423f0c,edi
  4088e1:	or     esp,DWORD PTR [eax-0x2d]
  4088e4:	in     eax,dx
  4088e5:	jle    0x40890f
  4088e7:	mov    WORD PTR [ecx+0x3e3427d8],fs
  4088ed:	sbb    DWORD PTR [eax],0x29e0024e
  4088f3:	outs   dx,DWORD PTR ds:[esi]
  4088f4:	sub    eax,0x92e011ad
  4088f9:	pop    ebx
  4088fa:	std    
  4088fb:	add    eax,0x40565122
  408900:	pusha  
  408901:	pop    ds
  408902:	je     0x408944
  408904:	sti    
  408905:	jecxz  0x4088f7
  408907:	cdq    
  408908:	fld    st(7)
  40890a:	ret    
  40890b:	adc    BYTE PTR [ecx+ebp*2],0x42
  40890f:	es (bad) 
  408911:	aaa    
  408912:	xchg   DWORD PTR [ecx-0x2f],eax
  408915:	scas   al,BYTE PTR es:[edi]
  408916:	jecxz  0x408916
  408918:	adc    BYTE PTR [ecx+0x151d3e],ch
  40891e:	lock xor edi,DWORD PTR [edi+0x15]
  408922:	sbb    DWORD PTR [ebx],eax
  408924:	hlt    
  408925:	in     eax,0x48
  408927:	fsubr  QWORD PTR [edi-0xacf86b]
  40892d:	push   ecx
  40892e:	cs dec ebp
  408930:	and    BYTE PTR [bp+di],bl
  408933:	or     ebx,DWORD PTR ds:0xe38201fd
  408939:	out    dx,eax
  40893a:	fsubrp st(6),st
  40893c:	imul   ebp,DWORD PTR [eax+0x36c28cc3],0xce5ae514
  408946:	arpl   WORD PTR [eax-0x6d],bx
  408949:	loope  0x40899d
  40894b:	jae    0x408956
  40894d:	xor    eax,0x9bdbd01a
  408952:	(bad)  
  408953:	ins    DWORD PTR es:[edi],dx
  408954:	or     eax,0xc307bd98
  408959:	inc    eax
  40895a:	leave  
  40895b:	or     BYTE PTR [edi],ch
  40895d:	add    esp,esp
  40895f:	inc    ecx
  408960:	sub    BYTE PTR [edx],ah
  408962:	stos   BYTE PTR es:[edi],al
  408963:	iret   
  408964:	test   DWORD PTR [ecx-0x5c],0x154ee2b5
  40896b:	imul   ebp,DWORD PTR [eax],0x49
  40896e:	xchg   esp,eax
  40896f:	sub    bh,dh
  408971:	adc    esp,ebx
  408973:	or     al,0x9d
  408975:	dec    BYTE PTR [ecx-0x3809ad47]
  40897b:	js     0x408960
  40897d:	sub    eax,0xc4740617
  408982:	push   ebp
  408983:	ins    BYTE PTR es:[edi],dx
  408984:	and    dh,BYTE PTR [ecx]
  408986:	xchg   DWORD PTR [ebp-0x69ae3503],edi
  40898c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40898d:	out    dx,eax
  40898e:	add    al,0x52
  408990:	es xlat BYTE PTR ds:[ebx]
  408993:	mov    al,0x5a
  408995:	clc    
  408996:	xchg   ebp,eax
  408997:	clc    
  408998:	sub    cl,ch
  40899a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40899b:	adc    ebx,DWORD PTR [ebp+eiz*8+0x66]
  40899f:	repnz retf 
  4089a1:	or     BYTE PTR [ebx],ch
  4089a3:	xchg   edi,eax
  4089a4:	ror    BYTE PTR ds:0xdd1d7f4c,1
  4089aa:	stc    
  4089ab:	imul   bh
  4089ad:	xor    esp,edi
  4089af:	push   ecx
  4089b0:	push   es
  4089b1:	xchg   ebp,eax
  4089b2:	fld    QWORD PTR [esp+edi*2-0x16]
  4089b6:	cmp    DWORD PTR [ebp+0x3e3b3c89],esp
  4089bc:	cmp    al,0x29
  4089be:	xor    bl,BYTE PTR [ecx]
  4089c0:	inc    eax
  4089c1:	shl    BYTE PTR [edi-0x6e],0x8c
  4089c5:	jl     0x408967
  4089c7:	mov    ebx,0xbef4cfc6
  4089cc:	cmp    edi,edi
  4089ce:	or     cl,BYTE PTR [esi+edx*8]
  4089d1:	(bad)  
  4089d2:	shr    BYTE PTR [esi],cl
  4089d4:	scas   al,BYTE PTR es:[edi]
  4089d5:	adc    al,0x9f
  4089d7:	iret   
  4089d8:	mov    esi,0xf78e63fb
  4089dd:	sub    ah,BYTE PTR [ebx-0x1c36f34f]
  4089e3:	or     esp,DWORD PTR [esi]
  4089e5:	cmp    ah,BYTE PTR [ebp+ebx*4+0x39]
  4089e9:	jnp    0x408979
  4089eb:	and    dl,BYTE PTR [bx+si]
  4089ee:	sbb    bl,bl
  4089f0:	mov    esi,0xcce4be7a
  4089f5:	jno    0x4089bb
  4089f7:	rol    DWORD PTR ss:[ebx-0x80],0x82
  4089fc:	sti    
  4089fd:	sub    al,BYTE PTR [edx-0x226d163]
  408a03:	or     BYTE PTR [ebx],0xbd
  408a06:	mov    ebx,0x89f5a46a
  408a0b:	loop   0x408996
  408a0d:	ficomp DWORD PTR [esi]
  408a0f:	inc    edi
  408a10:	xchg   ebx,eax
  408a11:	mov    edi,0x6125deec
  408a16:	dec    esi
  408a17:	cwde   
  408a18:	or     edi,esp
  408a1a:	in     al,0xae
  408a1c:	cwde   
  408a1d:	dec    ebp
  408a1f:	int    0xbf
  408a21:	jb     0x4089cf
  408a23:	xchg   esi,eax
  408a24:	pop    edi
  408a25:	aas    
  408a26:	sbb    al,0x98
  408a28:	jge    0x408aa2
  408a2a:	pop    esi
  408a2b:	shr    BYTE PTR [ebp+0xb18fc28],1
  408a31:	sahf   
  408a32:	xor    ebx,0x504d58cb
  408a38:	sub    DWORD PTR [edx],0xd6326386
  408a3e:	cwde   
  408a3f:	loop   0x408aa8
  408a41:	sbb    DWORD PTR [ebx-0x31],edx
  408a44:	xlat   BYTE PTR ds:[ebx]
  408a45:	cmp    DWORD PTR [ecx+0x34],edx
  408a48:	cld    
  408a49:	call   0x8bd4c532
  408a4e:	jg     0x4089fd
  408a50:	mov    ebp,0x95c1df7a
  408a55:	adc    dl,cl
  408a57:	xchg   edi,eax
  408a58:	dec    esp
  408a59:	and    eax,0x17664be0
  408a5e:	adc    DWORD PTR [ecx-0x4921083f],esp
  408a64:	lahf   
  408a65:	outs   dx,BYTE PTR ds:[esi]
  408a66:	dec    ecx
  408a67:	stos   DWORD PTR es:[edi],eax
  408a68:	dec    esp
  408a69:	shl    DWORD PTR [ebp-0xf],0xa2
  408a6d:	popf   
  408a6e:	fdivr  QWORD PTR [esi]
  408a70:	adc    ch,dh
  408a72:	and    eax,0xa333cb65
  408a77:	mov    al,0x37
  408a79:	cld    
  408a7a:	fwait
  408a7b:	or     edx,ecx
  408a7d:	push   edx
  408a7e:	dec    edx
  408a7f:	gs gs leave 
  408a82:	push   0x45
  408a84:	mov    dl,0x3f
  408a86:	jp     0x408a3c
  408a88:	xchg   ecx,eax
  408a89:	sar    DWORD PTR [ebx-0x3c],0xff
  408a8d:	cmp    eax,eax
  408a8f:	arpl   WORD PTR [edx],bx
  408a91:	pop    ecx
  408a92:	ja     0x408a32
  408a94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a95:	fnstcw WORD PTR [eax+0x7b6fa9d7]
  408a9b:	mov    ebx,0x576c2daf
  408aa0:	mov    ah,0xb0
  408aa2:	jae    0x408b16
  408aa4:	cmp    bl,ah
  408aa6:	sub    eax,ebp
  408aa8:	push   ebp
  408aa9:	rcl    DWORD PTR [esi+0x36],0x77
  408aad:	xchg   BYTE PTR [esi],dh
  408aaf:	jp     0x408ab5
  408ab1:	sbb    ecx,DWORD PTR [edi-0x71]
  408ab4:	ss mov edi,0x25d1935a
  408aba:	gs sahf 
  408abc:	sbb    al,0x12
  408abe:	cmp    ebx,ebp
  408ac0:	mov    edi,0x739de318
  408ac5:	ret    
  408ac6:	adc    eax,0xb8f4b679
  408acb:	mov    dh,0x7f
  408acd:	stos   BYTE PTR es:[edi],al
  408ace:	ins    BYTE PTR es:[edi],dx
  408acf:	sbb    DWORD PTR [eax],esp
  408ad1:	enter  0x26f6,0x15
  408ad5:	adc    ebx,DWORD PTR [ebx]
  408ad7:	stos   DWORD PTR es:[edi],eax
  408ad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ad9:	mov    ds:0xbb4f483c,eax
  408ade:	and    DWORD PTR [eax],0x1d
  408ae1:	mov    al,0x63
  408ae3:	fcos   
  408ae5:	sub    BYTE PTR [edx+0x94063d4],0x78
  408aec:	mov    esi,edx
  408aee:	adc    dl,BYTE PTR [ebx]
  408af0:	jmp    0x408b5c
  408af2:	mov    ch,0x1
  408af4:	loop   0x408b27
  408af6:	mov    bl,0x5d
  408af8:	jmp    0x3cd24400
  408afd:	xor    al,0x21
  408aff:	idiv   DWORD PTR [ecx]
  408b01:	mov    ds:0x5050c6a0,al
  408b06:	xor    al,0xca
  408b08:	aad    0x44
  408b0a:	leave  
  408b0b:	imul   eax,DWORD PTR [ebx-0x6f0b704f],0xffffffc3
  408b12:	sbb    esp,ecx
  408b14:	adc    edx,edi
  408b16:	mov    bl,0x5d
  408b18:	cmp    eax,0xc4c3d15c
  408b1d:	pop    ss
  408b1e:	jg     0x408b98
  408b20:	jle    0x408b3c
  408b22:	jmp    0x408b5f
  408b24:	cdq    
  408b25:	jo     0x408b38
  408b27:	or     al,0x3
  408b29:	xchg   ebx,eax
  408b2a:	push   ds
  408b2b:	test   DWORD PTR [eax-0x5657ba95],esi
  408b31:	xor    ah,BYTE PTR [edi+ecx*4]
  408b34:	cld    
  408b35:	pop    ds
  408b36:	ja     0x408b6c
  408b38:	outs   dx,DWORD PTR ds:[esi]
  408b39:	iret   
  408b3a:	mov    esp,0xd8eac724
  408b3f:	(bad)  
  408b40:	mov    ds:0xf694b9d8,eax
  408b45:	dec    ecx
  408b46:	dec    ecx
  408b47:	lds    ebx,FWORD PTR [ecx-0x59702556]
  408b4d:	jae    0x408b56
  408b4f:	fdivr  DWORD PTR [edi-0x305a0202]
  408b55:	xchg   edi,eax
  408b56:	add    eax,0x671c144a
  408b5b:	mov    ebp,0xd3b597bb
  408b60:	dec    eax
  408b61:	lock push cs
  408b63:	popa   
  408b64:	jge    0x408af9
  408b66:	mov    cl,BYTE PTR [esi-0x73ed2027]
  408b6c:	lods   al,BYTE PTR ds:[esi]
  408b6d:	loop   0x408b19
  408b6f:	push   es
  408b70:	int3   
  408b71:	mov    bh,0x7
  408b73:	fstp   TBYTE PTR [esi]
  408b75:	jne    0x408b23
  408b77:	ret    0x39f1
  408b7a:	mov    ecx,0x41fcb43d
  408b7f:	in     eax,0x29
  408b81:	fwait
  408b82:	shl    DWORD PTR [ebp+0x3b],cl
  408b85:	push   eax
  408b86:	loop   0x408b9c
  408b88:	mov    esp,0x7da9f7f5
  408b8d:	push   cs
  408b8e:	icebp  
  408b8f:	div    edx
  408b91:	mov    eax,ds:0x321fea3f
  408b96:	inc    edi
  408b97:	push   es
  408b98:	fld    DWORD PTR [ebx+0x1de96e55]
  408b9e:	inc    ebp
  408b9f:	mov    ebx,0xe0b82a8a
  408ba4:	mov    ds:0x933f54fc,eax
  408ba9:	daa    
  408baa:	push   0x7ff6a439
  408baf:	fsub   DWORD PTR [esi+ebp*1+0x236d64c3]
  408bb6:	xor    al,0x62
  408bb8:	or     edx,DWORD PTR [eax+0x27cd885a]
  408bbe:	stos   DWORD PTR es:[edi],eax
  408bbf:	jbe    0x408c0f
  408bc1:	dec    esp
  408bc2:	push   eax
  408bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bc4:	push   esi
  408bc5:	test   DWORD PTR [esi+eax*4-0x13],0xd9b3bc0e
  408bcd:	jns    0x408b80
  408bcf:	int    0x98
  408bd1:	jmp    0x4a57:0xc2e1184f
  408bd8:	sub    BYTE PTR [edx-0x71],ch
  408bdb:	aad    0x54
  408bdd:	(bad)  
  408bde:	(bad)  
  408bdf:	and    ecx,ebx
  408be1:	mov    al,0xfe
  408be3:	dec    edx
  408be4:	lods   eax,DWORD PTR ds:[esi]
  408be5:	les    ebp,FWORD PTR [ebx-0x2d]
  408be8:	test   eax,0x2a9c2707
  408bed:	xlat   BYTE PTR ds:[ebx]
  408bee:	shl    DWORD PTR [ecx-0x432a7f8],cl
  408bf4:	shr    BYTE PTR [esp+esi*2-0x420dc28e],0xa6
  408bfc:	push   ds
  408bfd:	sti    
  408bfe:	add    bl,BYTE PTR [ebx+0x24]
  408c01:	arpl   WORD PTR [ecx],di
  408c03:	push   ss
  408c04:	dec    ebx
  408c05:	cmp    BYTE PTR [eax+0x6f],al
  408c08:	fldenv [edx]
  408c0a:	inc    ecx
  408c0b:	aam    0xad
  408c0d:	call   0xf974:0x535073c6
  408c14:	hlt    
  408c15:	sti    
  408c16:	mov    BYTE PTR [ecx-0x43cb0157],ch
  408c1c:	or     BYTE PTR [eax-0x69515f68],bl
  408c22:	cli    
  408c23:	mov    al,0x27
  408c25:	xchg   BYTE PTR [ebx],ah
  408c27:	adc    DWORD PTR [edi+0x253c7502],ebx
  408c2d:	jl     0x408c64
  408c2f:	xchg   edi,eax
  408c30:	or     DWORD PTR [ebx-0x7028e2bc],ebp
  408c36:	xor    eax,edx
  408c38:	pop    esp
  408c39:	or     al,0x44
  408c3b:	mov    ecx,0xad55c8cb
  408c40:	rep es ss ins DWORD PTR es:[edi],dx
  408c44:	mov    al,ds:0x97d74fc0
  408c49:	cmp    eax,0x903ad66b
  408c4f:	sbb    edi,esi
  408c51:	jmp    0xa70a:0x525a41cd
  408c58:	mov    DWORD PTR [ebx+0x3d23df40],esi
  408c5e:	ins    DWORD PTR es:[edi],dx
  408c5f:	push   ebx
  408c60:	js     0x408c78
  408c62:	or     eax,0x1b03a18f
  408c67:	addr16 xchg ebp,eax
  408c69:	jl     0x408cdf
  408c6b:	jne    0x408c00
  408c6d:	sbb    eax,0x88d12bc0
  408c72:	xchg   edi,eax
  408c73:	jg     0x408c9e
  408c75:	imul   ecx,DWORD PTR [esi-0x5d28c291],0x62
  408c7c:	mov    ds:0xe4268f5c,eax
  408c81:	popa   
  408c82:	ins    BYTE PTR es:[edi],dx
  408c83:	aad    0x59
  408c85:	xor    DWORD PTR [eax-0x22552009],eax
  408c8b:	mov    ds:0xbb19513,al
  408c90:	mov    cl,0xb
  408c92:	sti    
  408c93:	in     al,dx
  408c94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c95:	fcmovnu st,st(4)
  408c97:	cdq    
  408c98:	jo     0x408cf7
  408c9a:	aam    0x27
  408c9c:	dec    edi
  408c9d:	dec    esp
  408c9e:	cmp    eax,0x85b9a962
  408ca3:	leave  
  408ca4:	push   ds
  408ca5:	xchg   ebp,eax
  408ca6:	cmp    BYTE PTR [eax],cl
  408ca8:	shr    DWORD PTR [edi+0x3237988e],0x17
  408caf:	out    0x8a,eax
  408cb1:	fldln2 
  408cb3:	dec    ebx
  408cb4:	sbb    BYTE PTR [ebp-0x497c4696],bh
  408cba:	fwait
  408cbb:	xchg   DWORD PTR [esi+eax*8],esi
  408cbe:	lods   al,BYTE PTR ds:[esi]
  408cbf:	or     BYTE PTR [esi+ecx*2],ch
  408cc2:	sub    bh,bl
  408cc4:	jne    0x408cb8
  408cc6:	bnd jbe 0x408d47
  408cc9:	and    BYTE PTR [ecx],al
  408ccb:	lods   al,BYTE PTR ds:[esi]
  408ccc:	cmp    eax,0xb245cfb6
  408cd1:	add    al,0xfb
  408cd3:	xchg   ebx,eax
  408cd4:	shl    DWORD PTR [eax+0x2bd37919],1
  408cda:	cmp    DWORD PTR [esi+0x4f],eax
  408cdd:	(bad)  
  408cde:	xor    ebp,eax
  408ce0:	mov    ds:0x9b53451c,eax
  408ce5:	(bad)  [edi-0x7c6e269d]
  408ceb:	pop    eax
  408cec:	fdiv   QWORD PTR ds:0x721de5f4
  408cf2:	xlat   BYTE PTR ds:[ebx]
  408cf3:	mov    WORD PTR [ebx+0x222df2e8],ds
  408cf9:	dec    edi
  408cfa:	std    
  408cfb:	ja     0x408cbc
  408cfd:	ds cs es mov edx,0x9d6d7e65
  408d05:	and    bl,dh
  408d07:	xchg   esp,eax
  408d08:	or     DWORD PTR [ebx+0x6b042b2a],edx
  408d0e:	sub    eax,DWORD PTR [eax]
  408d10:	pusha  
  408d11:	or     dl,dl
  408d13:	loopne 0x408cd1
  408d15:	lea    ecx,[ebp-0x33]
  408d18:	stc    
  408d19:	xor    BYTE PTR [edi],bl
  408d1b:	sub    al,0x26
  408d1d:	(bad)  
  408d1e:	push   ecx
  408d1f:	out    dx,al
  408d20:	add    cl,BYTE PTR [edi+0x6de05200]
  408d26:	or     bl,0x16
  408d29:	cwde   
  408d2a:	rcl    BYTE PTR ss:[edx+0x65],0x91
  408d2f:	test   al,0xe3
  408d31:	or     DWORD PTR [ebx-0x6682dbc3],edx
  408d37:	sbb    BYTE PTR [edx],dl
  408d39:	jmp    0xbd38f595
  408d3e:	retf   
  408d3f:	push   0x9d721be7
  408d44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d45:	jno    0x408db8
  408d47:	xor    dl,dl
  408d49:	push   0x53
  408d4b:	pushf  
  408d4c:	ins    BYTE PTR es:[edi],dx
  408d4d:	loop   0x408d9b
  408d4f:	bound  ebp,QWORD PTR [esi-0x46]
  408d52:	xor    DWORD PTR [edi+0x2f9f4167],ebp
  408d58:	inc    ebx
  408d59:	xor    DWORD PTR ds:0x62d7ef30,ebp
  408d5f:	repz dec esi
  408d61:	fistp  DWORD PTR [edx-0x4f8ac169]
  408d67:	call   0x9200:0xcce7491a
  408d6e:	jp     0x408dab
  408d70:	mov    ah,0x73
  408d72:	(bad)
  408d77:	iret   
  408d78:	out    dx,eax
  408d79:	and    eax,0x636b2782
  408d7e:	push   ebx
  408d7f:	jp     0x408d4e
  408d81:	mov    edi,0x7c6a3a5e
  408d86:	sub    eax,0xf2792486
  408d8b:	mov    dh,0xff
  408d8d:	pusha  
  408d8e:	add    esi,edi
  408d90:	or     ebp,edx
  408d92:	add    DWORD PTR [ebx+edx*1-0x5fbddd5e],esi
  408d99:	mov    ds:0xfdae23c8,eax
  408d9e:	dec    ebp
  408d9f:	xchg   esi,eax
  408da0:	pop    ecx
  408da1:	repz int 0xa4
  408da4:	out    0xe7,eax
  408da6:	ret    0xc3af
  408da9:	in     eax,dx
  408daa:	push   es
  408dab:	mov    al,0x4a
  408dad:	ficomp DWORD PTR [ebx]
  408daf:	xor    al,0xaf
  408db1:	cwde   
  408db2:	jnp    0x408df5
  408db4:	pusha  
  408db5:	add    ecx,ebp
  408db7:	xchg   DWORD PTR [ecx+edx*2],ebx
  408dba:	stos   BYTE PTR es:[edi],al
  408dbb:	mov    esi,0x8cc4251a
  408dc0:	mul    DWORD PTR [edi-0x37e53b1f]
  408dc6:	and    ebp,DWORD PTR [eax-0x707dd63f]
  408dcc:	sbb    dh,BYTE PTR [ebx+0x3d942255]
  408dd2:	pushf  
  408dd3:	dec    ecx
  408dd4:	cs pusha 
  408dd6:	shl    eax,0xf3
  408dd9:	fld    DWORD PTR [esi]
  408ddb:	call   0xe958eae8
  408de0:	jge    0x408d95
  408de2:	push   esp
  408de3:	jg     0x408d7b
  408de5:	jmp    0x91e39e2d
  408dea:	and    eax,0x63e2950f
  408def:	pusha  
  408df0:	adc    eax,0x16eaaa03
  408df5:	and    bh,cl
  408df7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408df8:	clc    
  408df9:	stos   BYTE PTR es:[edi],al
  408dfa:	fs mov esp,0x694c62c9
  408e00:	add    DWORD PTR [edx+0x1a7082d],ebp
  408e06:	mov    bl,0x28
  408e08:	mov    bh,0x2a
  408e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e0b:	in     eax,dx
  408e0c:	inc    eax
  408e0d:	adc    eax,0x5cfbfb72
  408e12:	aam    0x99
  408e14:	xchg   ebx,eax
  408e15:	imul   ecx,edi,0x7e
  408e18:	mov    edx,0x6ec14d95
  408e1d:	div    BYTE PTR ds:0x22f71d88
  408e23:	mov    bl,0x4c
  408e25:	add    ah,BYTE PTR [eax+0x72eba509]
  408e2b:	aam    0xda
  408e2d:	push   0xbc2db85
  408e32:	bound  edi,QWORD PTR [ecx-0x3f]
  408e35:	les    edx,FWORD PTR [ebp+0x29c916e8]
  408e3b:	ret    0x20e1
  408e3e:	int    0x8c
  408e40:	add    DWORD PTR [ebp-0xa343c58],edx
  408e46:	and    DWORD PTR [esi+0x3e],esi
  408e49:	cs in  eax,0x67
  408e4c:	hlt    
  408e4d:	cmp    BYTE PTR [esi],dl
  408e4f:	mov    esp,ecx
  408e51:	fs push esp
  408e53:	sbb    BYTE PTR [edi+ebp*1],bl
  408e56:	and    BYTE PTR [esi+0x5e8a859c],dl
  408e5c:	xor    al,0xc1
  408e5e:	mov    edi,0x85a68ddf
  408e63:	push   edx
  408e64:	pop    ecx
  408e65:	pop    ds
  408e66:	adc    esp,DWORD PTR [ebp-0x26]
  408e69:	adc    eax,0x53786a77
  408e6e:	dec    esi
  408e6f:	retf   0xffd3
  408e72:	popf   
  408e73:	sbb    ecx,ebp
  408e75:	loopne 0x408eb5
  408e77:	mov    dl,0x67
  408e79:	lahf   
  408e7a:	jo     0x408efa
  408e7c:	jecxz  0x408e5e
  408e7e:	jl     0x408e1b
  408e80:	daa    
  408e81:	sar    BYTE PTR [esi-0x4a9eebcb],0xad
  408e88:	mov    bl,0x2e
  408e8a:	push   cs
  408e8b:	ja     0x408e9d
  408e8d:	and    BYTE PTR fs:[eax+ecx*8],0x76
  408e92:	lds    eax,FWORD PTR [ebx+0x45]
  408e95:	repnz add esi,ecx
  408e98:	or     ebp,DWORD PTR [edi]
  408e9a:	sub    DWORD PTR [edi-0x2],edx
  408e9d:	enter  0x528b,0x9d
  408ea1:	mov    bh,0xbb
  408ea3:	je     0x408e3b
  408ea5:	fldenv ds:0x2361621d
  408eab:	fst    DWORD PTR [eax-0x11]
  408eae:	aad    0xd6
  408eb0:	mov    dh,0xec
  408eb2:	dec    edi
  408eb3:	push   0x56
  408eb5:	xor    dl,BYTE PTR [ebx+edi*1+0xf6876d4]
  408ebc:	xor    ch,BYTE PTR [esi+0x6e08d379]
  408ec2:	and    ebx,DWORD PTR [ebx]
  408ec4:	or     BYTE PTR [ebx+ebx*4],0x16
  408ec8:	xchg   DWORD PTR [esi],ebx
  408eca:	imul   eax,DWORD PTR [edx-0x73],0xfffffff0
  408ece:	data16 jne 0x408e8e
  408ed1:	shl    BYTE PTR [esi+0x40],1
  408ed4:	jae    0x408e5e
  408ed6:	mov    ecx,0x753c8d0
  408edc:	sub    BYTE PTR [ecx],ch
  408ede:	ret    
  408edf:	mov    edx,0x99e3bf75
  408ee4:	xlat   BYTE PTR ds:[ebx]
  408ee5:	lea    edx,[edi-0x4]
  408ee8:	(bad)  
  408ee9:	out    dx,eax
  408eea:	push   ds
  408eeb:	sbb    ah,dl
  408eed:	dec    esp
  408eee:	push   ecx
  408eef:	fld    DWORD PTR [esi-0x58]
  408ef2:	rcl    DWORD PTR [edx],cl
  408ef4:	lock (bad) 
  408ef6:	jnp    0x408ef4
  408ef8:	lods   al,BYTE PTR ds:[esi]
  408ef9:	sub    al,BYTE PTR [edi+0x29]
  408efc:	std    
  408efd:	jle    0x408f1f
  408eff:	(bad)  
  408f00:	fsubr  DWORD PTR [esi-0x2a]
  408f03:	(bad)  
  408f05:	mov    dh,0xe2
  408f07:	std    
  408f08:	mov    esp,0x92304451
  408f0d:	jnp    0x408ed0
  408f0f:	in     eax,dx
  408f10:	inc    eax
  408f11:	sub    eax,0xbed2d2cd
  408f16:	sbb    ebp,edi
  408f18:	cmp    esi,DWORD PTR [ebx+0x6d]
  408f1b:	dec    esi
  408f1c:	and    al,0x90
  408f1e:	pop    esp
  408f1f:	lea    eax,[edx]
  408f21:	dec    eax
  408f22:	jge    0x408f60
  408f24:	pushf  
  408f25:	jle    0x408ee8
  408f27:	jnp    0x408f59
  408f29:	mov    ds:0x4f1d2d74,al
  408f2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f2f:	loop   0x408f36
  408f31:	sbb    DWORD PTR ds:0x409a69f8,edi
  408f37:	rcl    BYTE PTR ds:0xc8df4cbc,cl
  408f3d:	cmp    BYTE PTR [esi-0x37],bh
  408f40:	cmp    al,0x23
  408f42:	ds ss jae 0x408f90
  408f46:	pushf  
  408f47:	and    eax,0xc8a65f0b
  408f4c:	cmp    DWORD PTR [eax+0x72],esi
  408f4f:	fs ss dec esp
  408f52:	mov    WORD PTR [ecx],ss
  408f54:	dec    eax
  408f55:	aaa    
  408f56:	(bad)  
  408f57:	enter  0x9e97,0x6e
  408f5b:	push   ds
  408f5c:	out    dx,eax
  408f5d:	push   esi
  408f5e:	mov    bl,0xf9
  408f60:	sbb    al,0xd9
  408f62:	data16 out 0x94,al
  408f65:	pusha  
  408f66:	jp     0x408f14
  408f68:	ins    BYTE PTR es:[edi],dx
  408f69:	test   al,0xc1
  408f6b:	pop    ss
  408f6c:	sub    al,0xe6
  408f6e:	clc    
  408f6f:	cld    
  408f70:	and    al,0x47
  408f72:	out    0x6f,al
  408f74:	call   0xc482f90b
  408f79:	les    esp,FWORD PTR [edx+0x1484ac59]
  408f7f:	repnz mov edi,DWORD PTR [eax+0x45a513b6]
  408f86:	mov    dh,0x3e
  408f88:	inc    ecx
  408f89:	test   eax,0x40964a9d
  408f8e:	cs push esi
  408f90:	outs   dx,DWORD PTR ds:[esi]
  408f91:	jle    0x408fa3
  408f93:	stos   BYTE PTR es:[edi],al
  408f94:	scas   al,BYTE PTR es:[edi]
  408f95:	jge    0x408f4e
  408f97:	stos   DWORD PTR es:[edi],eax
  408f98:	mov    fs,WORD PTR ds:0xd95bce44
  408f9e:	stos   DWORD PTR es:[edi],eax
  408f9f:	pusha  
  408fa0:	test   al,0xfa
  408fa2:	xchg   esp,eax
  408fa3:	sbb    BYTE PTR [ebx+0x36],bh
  408fa6:	sahf   
  408fa7:	test   DWORD PTR [edx-0x192979dd],eax
  408fad:	retf   0x2260
  408fb0:	add    al,0xc
  408fb2:	xchg   edx,eax
  408fb3:	not    DWORD PTR [edi+edi*2-0x8]
  408fb7:	je     0x408fd3
  408fb9:	sti    
  408fba:	xchg   edi,eax
  408fbb:	shl    bh,cl
  408fbd:	std    
  408fbe:	rol    BYTE PTR [eax+0x79],1
  408fc1:	aam    0xa7
  408fc3:	shl    BYTE PTR [ecx+0x130b7705],1
  408fc9:	lea    esp,[ebx-0x5c]
  408fcc:	mov    bh,0xac
  408fce:	or     ah,BYTE PTR [edi+ebp*8-0x459ef16d]
  408fd5:	repnz xor DWORD PTR [ecx],edi
  408fd8:	sub    ebx,eax
  408fda:	out    dx,al
  408fdb:	popa   
  408fdc:	aaa    
  408fdd:	push   ebx
  408fde:	icebp  
  408fdf:	pop    ds
  408fe0:	loopne 0x408fb7
  408fe2:	jb     0x408fdf
  408fe4:	loop   0x408f82
  408fe6:	jno    0x408fb2
  408fe8:	test   edi,esi
  408fea:	ret    
  408feb:	sti    
  408fec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fed:	add    eax,0x795725f4
  408ff2:	lea    edx,[edi]
  408ff4:	fisub  WORD PTR [edx-0x3d]
  408ff7:	xor    DWORD PTR [esi],ebp
  408ff9:	cmc    
  408ffa:	dec    edx
  408ffb:	cmc    
  408ffc:	(bad)  
  408ffd:	cmp    eax,0x8f06a516
  409002:	popa   
  409003:	(bad)  
  409004:	sub    BYTE PTR [eax],dl
  409006:	xchg   edi,eax
  409007:	mov    bl,0x47
  409009:	inc    esi
  40900a:	sub    DWORD PTR [ecx+0x8],edx
  40900d:	stos   BYTE PTR es:[di],al
  40900f:	mov    bh,0xde
  409011:	fstsw  WORD PTR [ebp-0x63]
  409015:	ds add edi,esi
  409018:	mov    dl,0x13
  40901a:	repz jecxz 0x409042
  40901d:	jno    0x409007
  40901f:	mul    BYTE PTR [ebp-0x45]
  409022:	push   ds
  409023:	mov    eax,0xe77cbc1b
  409028:	push   ebx
  409029:	repz inc ebx
  40902b:	rcr    ebp,cl
  40902d:	cmp    DWORD PTR [eax+0x59],0xc774057b
  409034:	xchg   ebx,eax
  409035:	frstor [ebp+0x4b]
  409038:	sub    edx,esp
  40903a:	jae    0x40905f
  40903c:	adc    al,0x30
  40903e:	fsub   DWORD PTR [edi+0x59]
  409041:	stc    
  409042:	cmc    
  409043:	ss jb  0x40901a
  409046:	pushf  
  409047:	jne    0x40908a
  409049:	rcr    DWORD PTR [edi],1
  40904b:	outs   dx,BYTE PTR ds:[esi]
  40904c:	loopne 0x408fde
  40904e:	out    0x8c,al
  409050:	stc    
  409051:	mov    bh,BYTE PTR [edx]
  409053:	adc    eax,0x1b0a75a1
  409058:	and    bh,BYTE PTR [ebp+0x1fe98035]
  40905e:	mov    ebx,0xa4a67a37
  409063:	(bad)  
  409064:	int    0x6d
  409066:	cmp    eax,0x4ee89b76
  40906b:	jecxz  0x4090a7
  40906d:	jg     0x40907d
  40906f:	clc    
  409070:	ins    BYTE PTR es:[edi],dx
  409071:	pop    ss
  409072:	push   ecx
  409073:	aas    
  409074:	xchg   edx,eax
  409075:	sub    dl,BYTE PTR [edi-0x6f9c90c0]
  40907b:	cwde   
  40907c:	xor    ebx,DWORD PTR [edi-0x60bf3d80]
  409082:	pop    ebp
  409083:	inc    esp
  409084:	sub    bl,dl
  409086:	xor    bl,BYTE PTR [ebx]
  409088:	jg     0x409014
  40908a:	ins    DWORD PTR es:[edi],dx
  40908b:	sahf   
  40908c:	cmc    
  40908d:	and    al,0xb8
  40908f:	sub    ebx,DWORD PTR ds:0x9a3c79f7
  409095:	mov    esi,DWORD PTR [ebx+ecx*8-0x73]
  409099:	stc    
  40909a:	loop   0x40911b
  40909c:	mov    bh,0xbf
  40909e:	int3   
  40909f:	adc    eax,0x43fdaec9
  4090a4:	add    al,ah
  4090a6:	xchg   esp,eax
  4090a7:	retf   0x93df
  4090aa:	fdivr  QWORD PTR [edi+0x38]
  4090ad:	xor    dl,BYTE PTR [edi+0x6d775077]
  4090b3:	or     eax,0x37832c5
  4090b8:	push   edi
  4090b9:	in     eax,0xf3
  4090bb:	or     al,0x2d
  4090bd:	push   esi
  4090be:	loopne 0x409114
  4090c0:	enter  0xdfa1,0xe2
  4090c4:	mov    ecx,eax
  4090c6:	loope  0x4090bb
  4090c8:	cmp    BYTE PTR [ecx-0x5f],ch
  4090cb:	out    dx,eax
  4090cc:	imul   ebx,DWORD PTR [ecx+0x56cba2bc],0xf6f5bb74
  4090d6:	xor    BYTE PTR es:[edx],0x63
  4090da:	sbb    bl,bh
  4090dc:	ret    
  4090dd:	push   esp
  4090de:	or     bh,BYTE PTR [esi+0x27]
  4090e1:	repz hlt 
  4090e3:	stc    
  4090e4:	inc    ebp
  4090e5:	dec    esi
  4090e6:	jmp    0x4090e1
  4090e8:	dec    ebp
  4090e9:	leave  
  4090ea:	mov    bh,0x2e
  4090ec:	adc    eax,DWORD PTR [ebx-0x7]
  4090ef:	mov    ebp,0x27756f2e
  4090f4:	and    DWORD PTR [ecx],edx
  4090f6:	adc    DWORD PTR [ecx],esp
  4090f8:	cmp    eax,DWORD PTR [eax]
  4090fa:	jp     0x409115
  4090fc:	sbb    ecx,esp
  4090fe:	mov    bl,0x3b
  409100:	into   
  409101:	and    eax,0x60a07f86
  409106:	mov    dh,0x6e
  409108:	inc    ebp
  409109:	inc    edi
  40910a:	inc    edx
  40910b:	mov    al,ds:0xb8319935
  409110:	dec    esp
  409111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409112:	pop    edx
  409113:	dec    eax
  409114:	ins    DWORD PTR es:[edi],dx
  409115:	hlt    
  409116:	inc    ecx
  409117:	out    dx,eax
  409118:	ss es scas eax,DWORD PTR es:[edi]
  40911b:	into   
  40911c:	cs fs xchg edi,eax
  40911f:	add    ah,bl
  409121:	sub    eax,0xb28941a5
  409126:	mov    ds:0xccd30572,al
  40912b:	cmp    BYTE PTR [ebx+0x17],ah
  40912e:	pop    esi
  40912f:	mov    bl,0x94
  409131:	mov    ecx,0xc6ae4ed8
  409136:	push   es
  409137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409138:	in     al,dx
  409139:	cmp    al,0x13
  40913b:	test   DWORD PTR [esi-0x524d327],ebx
  409141:	inc    esi
  409142:	std    
  409143:	add    BYTE PTR [edi+eiz*1-0x498d5533],bh
  40914a:	jle    0x4090e2
  40914c:	gs or  eax,0x2dae08cb
  409152:	xchg   edx,eax
  409153:	sbb    dh,BYTE PTR [ebx-0x24bfa5a3]
  409159:	iret   
  40915a:	xchg   ch,bl
  40915c:	mov    ds:0xc9f860c0,eax
  409161:	xchg   ebx,eax
  409162:	mov    ds,WORD PTR [edx-0x76857068]
  409168:	neg    DWORD PTR [esi+0x38]
  40916b:	in     eax,dx
  40916c:	sub    edi,ebp
  40916e:	or     ecx,DWORD PTR [ebx+0x5e]
  409171:	es adc eax,0x6c3a65a2
  409177:	lods   al,BYTE PTR ds:[esi]
  409178:	sub    ebx,ebx
  40917a:	clc    
  40917b:	loop   0x4091b0
  40917d:	xchg   esp,eax
  40917e:	push   eax
  40917f:	dec    ecx
  409180:	data16 cmp al,BYTE PTR [edi-0x47]
  409184:	aam    0xb0
  409186:	stos   BYTE PTR es:[edi],al
  409187:	push   ebp
  409188:	mov    cl,0xdf
  40918a:	jmp    0xfdbc:0x7e0201f1
  409191:	jle    0x409144
  409193:	stc    
  409194:	xlat   BYTE PTR ds:[ebx]
  409195:	xlat   BYTE PTR ds:[ebx]
  409196:	sub    DWORD PTR [ebx],ecx
  409198:	gs ins BYTE PTR es:[edi],dx
  40919a:	mov    al,ds:0xc7d7a6e1
  40919f:	in     al,dx
  4091a0:	addr16 dec eax
  4091a2:	rol    BYTE PTR [edx+0x76e4eb74],0xea
  4091a9:	sahf   
  4091aa:	arpl   WORD PTR [eax+0x7c],cx
  4091ad:	cmp    esp,esi
  4091af:	jecxz  0x409170
  4091b1:	xchg   BYTE PTR [ecx+0x60],ah
  4091b4:	pop    es
  4091b5:	mov    ds:0xc240b27d,al
  4091ba:	into   
  4091bb:	inc    esp
  4091bc:	div    BYTE PTR [ecx+0x40cfc9e1]
  4091c2:	out    0x37,al
  4091c4:	push   ecx
  4091c5:	mov    ebp,0xb9245f13
  4091ca:	xchg   ecx,eax
  4091cb:	mov    DWORD PTR [ecx+0x12],0xe5a15e52
  4091d2:	ins    BYTE PTR es:[edi],dx
  4091d3:	icebp  
  4091d4:	test   DWORD PTR [esi],edi
  4091d6:	pop    ebp
  4091d7:	cmp    al,0x0
  4091d9:	test   al,0x24
  4091db:	adc    al,0x83
  4091dd:	mov    eax,DWORD PTR [esi+0x24f31cf7]
  4091e3:	cmp    eax,0xb34d24c5
  4091e8:	and    eax,0x336bd88c
  4091ed:	or     edx,DWORD PTR [ecx+0x1a]
  4091f0:	mov    edx,0xa751d2bc
  4091f5:	fild   WORD PTR [edi+0x39]
  4091f8:	mov    eax,0x87c7816e
  4091fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091fe:	ja     0x409256
  409200:	or     eax,0xaad7a8bc
  409205:	pop    es
  409206:	push   eax
  409207:	shl    DWORD PTR ds:0xa8603363,1
  40920d:	xchg   edx,eax
  40920e:	sub    dh,BYTE PTR [ecx+0x6c0b73ca]
  409214:	push   0x6437ed8b
  409219:	jmp    0xc1109cea
  40921e:	ss jmp 0x40927d
  409221:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409222:	mov    ds:0x73f53adf,al
  409227:	jle    0x409259
  409229:	add    BYTE PTR [edi+0x1d],bh
  40922c:	lods   al,BYTE PTR ds:[esi]
  40922d:	xchg   esp,eax
  40922e:	lock or ecx,DWORD PTR ds:0xe105093b
  409235:	jo     0x4092a7
  409237:	pop    esp
  409238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409239:	fmul   QWORD PTR [edx-0x3f]
  40923c:	rol    BYTE PTR [eax+0x2dfc143],cl
  409242:	test   al,0xec
  409244:	andps  xmm3,xmm6
  409247:	jb     0x4092a3
  409249:	adc    al,0xbb
  40924b:	mul    BYTE PTR [esi+0x9cf7cf0]
  409251:	ret    0x98c
  409254:	sbb    DWORD PTR [edx+ecx*8+0x1e],eax
  409258:	cwde   
  409259:	aam    0xe1
  40925b:	cmp    eax,esi
  40925d:	fwait
  40925e:	xchg   ecx,eax
  40925f:	cli    
  409260:	pop    ecx
  409261:	xor    ah,BYTE PTR [edi]
  409263:	mov    ch,0x53
  409265:	jnp    0x4092d1
  409267:	loopne 0x4092b9
  409269:	xor    eax,0x88773eff
  40926e:	mov    ecx,0xbdca5859
  409273:	cmp    DWORD PTR [ebp+0x3369abe],esp
  409279:	ret    
  40927a:	daa    
  40927b:	xor    ecx,0xb87d227d
  409281:	setle  BYTE PTR [edi]
  409284:	sbb    ebx,esp
  409286:	jg     0x409291
  409288:	(bad)  
  409289:	pusha  
  40928a:	push   ebp
  40928b:	adc    BYTE PTR [ebp+0x12],dh
  40928e:	mov    ?,WORD PTR [ecx]
  409290:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409291:	pusha  
  409292:	in     eax,0x61
  409294:	call   0x39684d8f
  409299:	cmp    DWORD PTR [esi],ecx
  40929b:	sar    DWORD PTR [ebp+0x1f],cl
  40929e:	mov    eax,0xc9d6c610
  4092a3:	into   
  4092a4:	adc    esp,edi
  4092a6:	and    esp,esp
  4092a8:	jmp    0x57daf9f3
  4092ad:	fistp  DWORD PTR ds:0x5f23e4a1
  4092b3:	mov    ebx,0xe5e38902
  4092b8:	mov    BYTE PTR [edx+0x15],0x70
  4092bc:	out    0x29,al
  4092be:	adc    BYTE PTR [eax-0x633af214],0x60
  4092c5:	sub    BYTE PTR [edx],0x96
  4092c8:	repz and DWORD PTR [esi-0x4ab548df],0x6c
  4092d0:	or     eax,DWORD PTR [ecx]
  4092d2:	mov    al,ds:0x3fb2dd6c
  4092d7:	mov    ds:0x6fcbdbe0,eax
  4092dc:	pop    edx
  4092dd:	fdivr  QWORD PTR [edi+0x29]
  4092e0:	(bad)  
  4092e1:	jmp    0x4c6ba09d
  4092e6:	pop    ebp
  4092e7:	dec    esp
  4092e8:	loop   0x40932f
  4092ea:	pushf  
  4092eb:	xor    BYTE PTR [edx-0x42e4bea0],0x1b
  4092f2:	js     0x4092e6
  4092f4:	call   0x2da7:0xb91d5dd4
  4092fb:	dec    ebp
  4092fc:	lds    ebp,FWORD PTR [edx]
  4092fe:	sbb    bl,ch
  409300:	sbb    dl,BYTE PTR [ecx+0x30e4a4a0]
  409306:	in     eax,0x72
  409308:	xchg   esi,eax
  409309:	jno    0x40933f
  40930b:	scas   al,BYTE PTR es:[edi]
  40930c:	neg    BYTE PTR [edx]
  40930e:	push   esp
  40930f:	aaa    
  409310:	xor    eax,0xfee625b5
  409315:	adc    DWORD PTR [ebp+ebp*8+0x7f],ebx
  409319:	leave  
  40931a:	pop    ebx
  40931b:	cmc    
  40931c:	jge    0x40938b
  40931e:	call   0xe33f:0xb2a3610
  409325:	sub    BYTE PTR [esi],ah
  409327:	pushf  
  409328:	add    dl,dh
  40932a:	pop    ss
  40932b:	mov    eax,0xcccc37e0
  409330:	push   ecx
  409331:	cmp    edi,eax
  409333:	push   edi
  409334:	call   0x3b571df2
  409339:	sbb    cl,bl
  40933b:	(bad)  
  40933c:	seto   BYTE PTR [ebx-0x7ea18670]
  409343:	sub    al,BYTE PTR [eax+0x45]
  409346:	ss scas eax,DWORD PTR es:[edi]
  409348:	push   ebx
  409349:	pop    ss
  40934a:	mov    ebp,DWORD PTR [edx-0x69b354d4]
  409350:	popa   
  409351:	or     BYTE PTR [eax],bl
  409353:	dec    eax
  409354:	scas   eax,DWORD PTR es:[edi]
  409355:	fistp  DWORD PTR ss:[edx-0x40]
  409359:	push   0x3f
  40935b:	add    BYTE PTR [esi],ah
  40935d:	pop    esp
  40935e:	jb     0x409370
  409360:	and    ch,BYTE PTR [ebp+0x7d]
  409363:	test   eax,0xb18d9ade
  409368:	jg     0x40930a
  40936a:	sub    BYTE PTR ds:0x78d65f05,bh
  409370:	and    al,0x94
  409372:	iret   
  409373:	call   0x6ca2:0x9119d48c
  40937a:	aam    0xf3
  40937c:	iret   
  40937d:	pop    ecx
  40937e:	dec    esi
  40937f:	icebp  
  409380:	hlt    
  409381:	sub    cl,cl
  409383:	enter  0x383f,0x29
  409387:	xor    BYTE PTR [ebx+0x5d7df3d3],ch
  40938d:	cwde   
  40938e:	clc    
  40938f:	pop    esi
  409390:	pusha  
  409391:	sbb    ch,BYTE PTR [edx-0x6a]
  409394:	inc    esi
  409395:	xchg   edx,eax
  409396:	int3   
  409397:	sbb    esi,esi
  409399:	pop    ss
  40939a:	xor    bl,BYTE PTR [eax-0x4b]
  40939d:	add    al,0x37
  40939f:	sbb    ch,bl
  4093a1:	in     al,0xe6
  4093a3:	jnp    0x4093e9
  4093a5:	mov    al,ds:0x64984c47
  4093aa:	pop    ebx
  4093ab:	mov    eax,0x5f1fca46
  4093b0:	fimul  WORD PTR [esi+edi*2+0x70c5a1ad]
  4093b7:	inc    edi
  4093b8:	std    
  4093b9:	das    
  4093ba:	sub    DWORD PTR [esi+0x6a065045],ebp
  4093c0:	cdq    
  4093c1:	aam    0xe4
  4093c3:	lods   eax,DWORD PTR ds:[esi]
  4093c4:	popa   
  4093c5:	mov    bl,0xb8
  4093c7:	pop    edx
  4093c8:	push   edi
  4093c9:	adc    eax,0x4c6b50e4
  4093ce:	gs ins DWORD PTR es:[edi],dx
  4093d0:	div    eax
  4093d2:	inc    ebp
  4093d3:	inc    esp
  4093d4:	mov    ecx,0xfdfb8b2
  4093d9:	popf   
  4093da:	shl    DWORD PTR [ebx+0x4079012c],1
  4093e0:	dec    ebp
  4093e1:	jecxz  0x4093f6
  4093e3:	dec    edi
  4093e4:	jo     0x4093da
  4093e6:	fwait
  4093e7:	pop    edi
  4093e8:	mov    ah,0x23
  4093ea:	ds mov cl,0x66
  4093ed:	add    eax,0x6ffa6489
  4093f2:	inc    ebx
  4093f3:	iret   
  4093f4:	mov    dh,0x70
  4093f6:	or     eax,0xd009dfcb
  4093fb:	dec    ebp
  4093fc:	sub    al,0x53
  4093fe:	mov    esp,0x5942b8e3
  409403:	dec    esi
  409404:	test   DWORD PTR [ebp+0x446d7b91],ebp
  40940a:	lock pusha 
  40940c:	mov    esi,0x21ace88c
  409411:	mov    dh,0xf0
  409413:	mov    edi,0xaadc9eff
  409418:	xchg   esp,eax
  409419:	ja     0x409421
  40941b:	ds cld 
  40941d:	mul    BYTE PTR [ebx+0x697378eb]
  409423:	stc    
  409424:	mov    esi,0x6a5dd4ac
  409429:	cmp    al,0x67
  40942b:	imul   edi,DWORD PTR [edx-0x24],0xee061db4
  409432:	jecxz  0x409442
  409434:	ss out dx,al
  409436:	cdq    
  409437:	mov    BYTE PTR [esi+0xb],dh
  40943a:	push   cs
  40943b:	scas   eax,DWORD PTR es:[edi]
  40943c:	fnsave [eax+0x27]
  40943f:	test   BYTE PTR [edx-0x5f],0x5a
  409443:	sahf   
  409444:	ins    BYTE PTR es:[edi],dx
  409445:	ds push edi
  409447:	jno    0x409429
  409449:	push   eax
  40944a:	std    
  40944b:	retf   0xb1be
  40944e:	out    dx,eax
  40944f:	pop    edx
  409450:	mov    DWORD PTR [ebx+0x7c2f4317],ebp
  409456:	push   esp
  409457:	retf   
  409458:	inc    edx
  409459:	cld    
  40945a:	mov    ds:0x3c510bb1,eax
  40945f:	xchg   edx,eax
  409460:	pop    esp
  409461:	fs push ds
  409463:	inc    edi
  409464:	repz mov esp,0xae3d9b4d
  40946a:	(bad)  
  40946c:	retf   0x28fa
  40946f:	inc    esi
  409470:	test   eax,0x697a8443
  409475:	cmp    eax,0x8422f0ec
  40947a:	mov    cl,0x4f
  40947c:	xchg   esp,eax
  40947d:	neg    bl
  40947f:	in     eax,0x6d
  409481:	shl    dh,cl
  409483:	cs ds push es
  409486:	imul   ebx,DWORD PTR [ecx],0xffffff88
  409489:	jg     0x409438
  40948b:	push   ecx
  40948c:	dec    esi
  40948d:	pop    ebx
  40948e:	mov    edi,0x971721f6
  409493:	(bad)  
  409494:	in     eax,0x7
  409496:	mov    ah,0x1f
  409498:	cmp    al,0x25
  40949a:	push   esi
  40949b:	push   0xffffffb4
  40949d:	nop
  40949e:	push   ebp
  40949f:	jecxz  0x4094c0
  4094a1:	pmovmskb edi,mm5
  4094a4:	(bad)  
  4094a5:	mov    bl,0xc6
  4094a7:	(bad)  [edx+0x49517be]
  4094ad:	sar    bh,cl
  4094af:	sub    edi,eax
  4094b1:	(bad)  
  4094b2:	fidiv  DWORD PTR [esi+ebx*8]
  4094b5:	lea    esi,[ecx+0x65]
  4094b8:	call   0xa9a7:0x83f9c27d
  4094bf:	scas   al,BYTE PTR es:[edi]
  4094c0:	popf   
  4094c1:	xchg   ebp,eax
  4094c2:	shr    BYTE PTR [ebx+0x12be797a],1
  4094c8:	aad    0x7a
  4094ca:	repz jo 0x40950b
  4094cd:	out    0x98,eax
  4094cf:	jmp    0x6b547e9
  4094d4:	ror    WORD PTR [esi],0x5b
  4094d8:	sub    BYTE PTR [edx-0x2c],dh
  4094db:	out    0x3c,al
  4094dd:	lods   al,BYTE PTR ds:[esi]
  4094de:	mov    bh,0xeb
  4094e0:	ret    
  4094e1:	dec    ebx
  4094e2:	cmp    DWORD PTR [eax],eax
  4094e4:	jecxz  0x409528
  4094e6:	rcl    DWORD PTR [esi-0x78],0x57
  4094ea:	push   es
  4094eb:	dec    ebx
  4094ec:	std    
  4094ed:	push   esi
  4094ee:	lock loopne 0x409556
  4094f1:	sub    DWORD PTR [edi-0x5f],ebp
  4094f4:	pop    ebp
  4094f5:	xchg   edi,eax
  4094f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094f7:	(bad)  
  4094f8:	and    al,0xb3
  4094fa:	and    eax,0x8928266a
  4094ff:	xor    ah,al
  409501:	xchg   BYTE PTR [ebp+0x17acf198],bh
  409507:	push   0xffffffd4
  409509:	cli    
  40950a:	(bad)  
  40950b:	fld    TBYTE PTR [ebx+eax*2-0x6f]
  40950f:	fisttp WORD PTR ds:0x8e77c63e
  409515:	mov    ah,0x1a
  409517:	iret   
  409518:	push   ebx
  409519:	cs mov edx,0x87c9d884
  40951f:	sbb    al,0x70
  409521:	pushf  
  409522:	retf   0xe69e
  409525:	cmp    DWORD PTR ds:0xc51b,0x3d
  40952b:	xchg   BYTE PTR [eax+0x21],ah
  40952e:	pop    edi
  40952f:	mov    al,0x3a
  409531:	cdq    
  409532:	push   ebp
  409533:	and    ebx,DWORD PTR [edx]
  409535:	repnz push 0x61
  409538:	xor    esp,DWORD PTR [esi]
  40953a:	or     DWORD PTR [esi-0x76a83c50],eax
  409540:	std    
  409541:	je     0x40950f
  409543:	mov    WORD PTR [eax],?
  409545:	sub    cl,BYTE PTR [ecx]
  409547:	push   0xffffffeb
  409549:	(bad)  
  40954a:	aad    0x54
  40954c:	xor    esp,DWORD PTR [edi-0x7b1832a]
  409552:	inc    edi
  409553:	xlat   BYTE PTR ds:[ebx]
  409554:	jno    0x409584
  409556:	mov    al,ds:0xbed9fc72
  40955b:	xchg   BYTE PTR [esi],ah
  40955d:	ja     0x40954e
  40955f:	test   ebx,0x3309ea4
  409565:	push   eax
  409566:	arpl   cx,bp
  409568:	xor    ebp,DWORD PTR cs:[ebx+0x3e]
  40956c:	sub    al,0xbb
  40956e:	loopne 0x409555
  409570:	arpl   WORD PTR [edx-0x3b],di
  409573:	jns    0x409502
  409575:	mov    al,ds:0xf1bcf88d
  40957a:	outs   dx,BYTE PTR ds:[esi]
  40957b:	out    dx,eax
  40957c:	inc    ebp
  40957d:	lahf   
  40957e:	cdq    
  40957f:	mov    esi,0x5ad84bbf
  409584:	add    al,0xab
  409586:	imul   BYTE PTR [eax]
  409588:	imul   ebx,edi,0x63b3735f
  40958e:	cmp    eax,0x6f9d4679
  409593:	mov    esp,0x4e0f64cd
  409598:	popf   
  409599:	dec    esp
  40959a:	mov    ds:0x43313576,eax
  40959f:	nop
  4095a0:	dec    edi
  4095a1:	rcr    DWORD PTR [esi+eax*8-0xb],0xfc
  4095a6:	or     al,0x36
  4095a8:	outs   dx,BYTE PTR ds:[esi]
  4095a9:	in     eax,0xaa
  4095ab:	adc    ecx,edx
  4095ad:	and    esi,ebp
  4095af:	gs sbb al,0xfb
  4095b2:	jne    0x409578
  4095b4:	xchg   esi,eax
  4095b5:	cmp    BYTE PTR [edx],dl
  4095b7:	sub    al,0x5c
  4095b9:	test   BYTE PTR [edx],bl
  4095bb:	shl    esi,0xa9
  4095be:	lds    ecx,FWORD PTR [eax-0x7ecb57db]
  4095c4:	pop    esp
  4095c5:	mov    ecx,eax
  4095c7:	push   0xffffffac
  4095c9:	xchg   BYTE PTR [eax+esi*8-0x362ec6bb],dh
  4095d0:	pop    ebx
  4095d1:	aad    0x4d
  4095d3:	xchg   edx,eax
  4095d4:	jmp    0x4095e7
  4095d6:	push   0x42
  4095d8:	(bad)
  4095db:	mov    edx,0x669d5f56
  4095e0:	lahf   
  4095e1:	lods   eax,DWORD PTR ds:[esi]
  4095e2:	push   0x7e391ded
  4095e7:	das    
  4095e8:	or     bl,al
  4095ea:	push   edx
  4095eb:	xchg   BYTE PTR ds:0x4bdc7bb2,ch
  4095f1:	retf   0x9c90
  4095f4:	aas    
  4095f5:	in     eax,0xf3
  4095f7:	imul   esp,DWORD PTR [ecx],0x39
  4095fa:	in     eax,dx
  4095fb:	jbe    0x40967a
  4095fd:	sub    ch,BYTE PTR [eax-0x46fd4742]
  409603:	js     0x409646
  409605:	cdq    
  409606:	inc    edi
  409607:	jno    0x409645
  409609:	xchg   edi,eax
  40960a:	lods   al,BYTE PTR ds:[esi]
  40960b:	leave  
  40960c:	dec    ebx
  40960d:	xlat   BYTE PTR ds:[ebx]
  40960e:	hlt    
  40960f:	jno    0x4095c6
  409611:	mov    bl,0xdc
  409613:	dec    esp
  409614:	xchg   ebx,eax
  409615:	data16 (bad) 
  409617:	iret   
  409618:	xchg   edi,eax
  409619:	das    
  40961a:	call   0xda7efc8f
  40961f:	cli    
  409620:	push   ebp
  409621:	arpl   WORD PTR [eax+ebp*2-0x37213ec2],ax
  409628:	ja     0x40968c
  40962a:	test   eax,0xcd081f93
  40962f:	rcl    DWORD PTR [ecx-0x2c256105],0xfd
  409636:	inc    edi
  409637:	xor    al,0xae
  409639:	mov    ebx,0xba580708
  40963e:	outs   dx,DWORD PTR ds:[esi]
  40963f:	inc    ecx
  409640:	push   eax
  409641:	fwait
  409642:	xor    BYTE PTR [bx+si-0x74],ch
  409646:	aam    0xe5
  409648:	ror    DWORD PTR [edi+0x36],cl
  40964b:	mov    ds:0xb8c4acfe,al
  409650:	std    
  409651:	and    al,0x68
  409653:	sub    eax,0xbd4cf9e5
  409658:	mov    al,ds:0x3a9275aa
  40965d:	cwde   
  40965e:	ss pop ebx
  409660:	pop    edi
  409661:	jg     0x4096b9
  409663:	cdq    
  409664:	xchg   sp,ax
  409666:	inc    ecx
  409667:	mov    al,ds:0x137e2bf5
  40966c:	dec    esi
  40966d:	inc    edx
  40966e:	out    0xfe,eax
  409670:	jne    0x40964b
  409672:	frstor es:[edi]
  409675:	mov    esp,0x180a187d
  40967a:	add    BYTE PTR [eax-0x30],bl
  40967d:	ret    0xc7b6
  409680:	cld    
  409681:	and    bh,dl
  409683:	js     0x4096ff
  409685:	jne    0x4096e4
  409687:	loope  0x4096a9
  409689:	pop    esi
  40968a:	xor    BYTE PTR [ebp-0x25],0x5a
  40968e:	push   ebp
  40968f:	fimul  DWORD PTR [esi+0x4914749d]
  409695:	out    0xf5,al
  409697:	jmp    0xf862:0x4ae36955
  40969e:	adc    al,0x0
  4096a0:	ret    0x1d3f
  4096a3:	and    BYTE PTR [ecx+eax*2],dl
  4096a6:	and    ebp,ecx
  4096a8:	add    eax,0x2762f5bb
  4096ad:	push   edi
  4096ae:	dec    edx
  4096af:	sbb    BYTE PTR [edx-0x580b9924],ah
  4096b5:	and    al,0x67
  4096b7:	outs   dx,DWORD PTR ds:[esi]
  4096b8:	lock cwde 
  4096ba:	fwait
  4096bb:	fwait
  4096bc:	sbb    al,0x84
  4096be:	xor    al,BYTE PTR [ebx+0x903f4e1]
  4096c4:	and    DWORD PTR [edi+0x13358327],edi
  4096ca:	rcl    ah,1
  4096cc:	aas    
  4096cd:	pop    esp
  4096ce:	out    0x90,al
  4096d0:	or     DWORD PTR [ecx-0xe],ebp
  4096d3:	mov    ds:0xd688b472,al
  4096d8:	fimul  WORD PTR [edx+ecx*4]
  4096db:	nop
  4096dc:	push   cs
  4096dd:	mov    dh,0x6f
  4096df:	push   ecx
  4096e0:	sti    
  4096e1:	xchg   DWORD PTR [esi],ebx
  4096e3:	lahf   
  4096e4:	or     BYTE PTR [ecx+0x35],ah
  4096e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096e8:	out    dx,eax
  4096e9:	mov    ds:0x9f2fceb2,al
  4096ee:	addr16 inc ecx
  4096f0:	jp     0x409676
  4096f2:	and    BYTE PTR [ecx+ebx*8+0x52],al
  4096f6:	pop    ds
  4096f7:	js     0x4096e3
  4096f9:	mov    al,0xb9
  4096fb:	test   DWORD PTR [esp+ebp*8+0x7d],0x33c388eb
  409703:	aad    0x27
  409705:	aas    
  409706:	cwde   
  409707:	sub    bl,BYTE PTR [edx-0x48]
  40970a:	push   ebp
  40970b:	cs sar bl,cl
  40970e:	arpl   WORD PTR [ebx],bx
  409710:	sub    eax,0x27ffe14f
  409715:	(bad)  
  409716:	lahf   
  409717:	mov    al,ah
  409719:	sub    DWORD PTR [ecx+ecx*2-0x27],0xffffffc2
  40971e:	rol    DWORD PTR [ebx-0x74585a68],0xba
  409725:	mov    ds:0x37fd97f5,eax
  40972a:	sti    
  40972b:	pop    esi
  40972c:	push   0x10184973
  409731:	ret    0xb86e
  409734:	leave  
  409735:	(bad)  
  409736:	stos   DWORD PTR es:[edi],eax
  409737:	push   esp
  409738:	inc    ecx
  409739:	pop    es
  40973a:	and    DWORD PTR [ebp-0x2a],esi
  40973d:	test   DWORD PTR [ebx-0x2f94bcb6],eax
  409743:	call   0x7bffabdf
  409748:	add    edx,ebp
  40974a:	inc    edx
  40974b:	lahf   
  40974c:	add    al,0x64
  40974e:	cdq    
  40974f:	mov    bl,0x3b
  409751:	shl    esi,cl
  409753:	adc    eax,ebx
  409755:	mov    eax,ds:0xdd16d925
  40975a:	retf   
  40975b:	out    0xba,eax
  40975d:	iret   
  40975e:	sub    BYTE PTR [eax-0x7f40e848],dl
  409764:	inc    edx
  409765:	sub    esp,DWORD PTR [edx+ebx*4+0x586e8a6f]
  40976c:	mov    edi,0x72c9c1a1
  409771:	shr    DWORD PTR [esi+0x6a],cl
  409774:	pop    edi
  409775:	inc    edi
  409776:	lahf   
  409777:	repnz xchg esi,eax
  409779:	jl     0x40978e
  40977b:	push   ebx
  40977c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40977d:	les    ebx,FWORD PTR [edi+0x610160ee]
  409783:	jecxz  0x409709
  409785:	dec    ebp
  409786:	xchg   esi,eax
  409787:	call   0x608e46a3
  40978c:	sbb    eax,DWORD PTR [ecx-0x77a09a08]
  409792:	adc    eax,0xb07d429a
  409797:	call   0xa299bda6
  40979c:	mov    WORD PTR [esi+0x5a30cce1],es
  4097a2:	dec    ecx
  4097a3:	fwait
  4097a4:	mov    cl,0xc9
  4097a6:	out    dx,eax
  4097a7:	mov    eax,0xe1b9c681
  4097ac:	xchg   esp,eax
  4097ad:	hlt    
  4097ae:	mov    ?,WORD PTR [edx+ebx*8+0x70]
  4097b2:	and    ebp,DWORD PTR [ecx+ebx*1]
  4097b5:	not    cl
  4097b7:	add    cl,BYTE PTR ds:0xabbe3c76
  4097bd:	mov    BYTE PTR cs:[eax+0x59bcac44],dl
  4097c4:	(bad)  
  4097c5:	ds mov edi,0x24ee71a6
  4097cb:	push   cs
  4097cc:	popa   
  4097cd:	fstp   QWORD PTR [edx-0x24f4a0dc]
  4097d3:	outs   dx,BYTE PTR ds:[esi]
  4097d4:	mov    bl,0xb8
  4097d6:	call   0xc353:0x6229a586
  4097dd:	push   cs
  4097de:	mov    ebp,0xd71020e7
  4097e3:	dec    eax
  4097e4:	cli    
  4097e5:	into   
  4097e6:	mov    edi,0x44626a07
  4097eb:	(bad)  
  4097ec:	adc    DWORD PTR [edi+0x1e],edi
  4097ef:	adc    eax,0x144b9319
  4097f4:	scas   al,BYTE PTR es:[edi]
  4097f5:	nop
  4097f6:	inc    edx
  4097f7:	sbb    al,0xc6
  4097f9:	sar    DWORD PTR [eax+ebx*8-0x3c],cl
  4097fd:	pop    eax
  4097fe:	fist   WORD PTR [ebx]
  409800:	pop    esi
  409801:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409802:	imul   ebx,DWORD PTR [ecx-0x21b9b065],0xffffffc8
  409809:	sub    DWORD PTR [eax-0x6b],edi
  40980c:	add    BYTE PTR [ebp+0x46],0x49
  409810:	nop
  409811:	cmp    al,0x7
  409813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409814:	mov    al,ds:0x8cd632c4
  409819:	std    
  40981a:	cs (bad) 
  40981d:	cwde   
  40981e:	(bad)  
  40981f:	xchg   ebx,eax
  409820:	das    
  409821:	in     eax,dx
  409822:	or     DWORD PTR [ecx+0x4b],edx
  409825:	or     eax,0x12534620
  40982a:	aam    0xf3
  40982c:	call   DWORD PTR [edi-0x37b2d60d]
  409832:	xor    dl,BYTE PTR [esi]
  409834:	retf   0xd828
  409837:	fadd   st,st(6)
  409839:	dec    ebp
  40983a:	repnz imul edx,DWORD PTR [eax],0x15029869
  409841:	lahf   
  409842:	test   ebp,esi
  409844:	adc    al,0xba
  409846:	dec    esi
  409847:	mov    eax,ds:0xfdf54bca
  40984c:	jno    0x4098b6
  40984e:	xchg   esp,eax
  40984f:	xchg   ecx,eax
  409850:	push   es
  409851:	sub    DWORD PTR [ebp+ebp*4-0x6682a274],ecx
  409858:	xor    BYTE PTR [eax+ebp*8-0x7d],bh
  40985c:	inc    esi
  40985d:	fucom  st(0)
  40985f:	test   eax,0x222f6d12
  409864:	mov    eax,0xa60dbd6e
  409869:	sbb    dl,bl
  40986b:	neg    BYTE PTR [ebx-0x6c]
  40986e:	ins    DWORD PTR es:[edi],dx
  40986f:	sub    eax,0x177fc6c9
  409874:	pushf  
  409875:	push   esp
  409876:	add    BYTE PTR [esi+ebp*2+0x44c43d0f],ah
  40987d:	bound  edi,QWORD PTR [edx-0x7d]
  409880:	mov    WORD PTR [eax],?
  409882:	ret    
  409883:	lods   eax,DWORD PTR ds:[esi]
  409884:	jg     0x409810
  409886:	adc    eax,0x4b6112b6
  40988b:	adc    BYTE PTR [eax+0x2daa95dd],ch
  409891:	cli    
  409892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409893:	ficom  WORD PTR [edx]
  409895:	or     al,0x2f
  409897:	stos   BYTE PTR es:[edi],al
  409898:	add    bl,dl
  40989a:	hlt    
  40989b:	sti    
  40989c:	adc    cl,BYTE PTR ds:0x71ff36b6
  4098a2:	mov    ebx,0x3c96319d
  4098a7:	pop    ss
  4098a8:	test   eax,0x17289131
  4098ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098ae:	in     al,0x68
  4098b0:	je     0x40992c
  4098b2:	mov    dl,0x8d
  4098b4:	pusha  
  4098b5:	stc    
  4098b6:	fst    QWORD PTR [edi+edx*2-0x7cf42f1f]
  4098bd:	lea    ebp,[edi]
  4098bf:	push   eax
  4098c0:	pop    ds
  4098c1:	dec    ecx
  4098c2:	into   
  4098c3:	xchg   DWORD PTR ds:0xe126b722,edi
  4098c9:	add    dh,bh
  4098cb:	in     eax,0xb1
  4098cd:	les    edx,FWORD PTR [edi]
  4098cf:	jns    0x40990f
  4098d1:	and    eax,0xe2841188
  4098d6:	sub    ah,BYTE PTR ds:0x46f3b7f2
  4098dc:	in     al,dx
  4098dd:	jns    0x40991c
  4098df:	mov    ah,0x4b
  4098e1:	add    eax,0x2f0d7bb3
  4098e6:	mov    BYTE PTR [edx-0x24517981],ah
  4098ec:	int3   
  4098ed:	gs or  eax,0xb398b278
  4098f3:	int    0xc4
  4098f5:	push   edx
  4098f6:	int3   
  4098f7:	inc    esp
  4098f8:	pop    edi
  4098f9:	sub    al,0xf
  4098fb:	sbb    DWORD PTR fs:[ebx+0xc],ecx
  4098ff:	lahf   
  409900:	sub    al,0xf8
  409902:	push   0x36
  409904:	add    DWORD PTR [ebx],esi
  409906:	xchg   esi,eax
  409907:	inc    esi
  409908:	dec    esp
  409909:	dec    ecx
  40990a:	out    0x27,al
  40990c:	cli    
  40990d:	jmp    0x96d39417
  409912:	adc    BYTE PTR [edx],ch
  409914:	aaa    
  409915:	retf   
  409916:	popf   
  409917:	push   0xa29b72ac
  40991c:	loopne 0x409943
  40991e:	mov    esp,0x3b740138
  409923:	(bad)  
  409924:	mov    eax,0x501c301f
  409929:	scas   eax,DWORD PTR es:[edi]
  40992a:	inc    edx
  40992b:	sahf   
  40992c:	fcom   QWORD PTR [ebx]
  40992e:	inc    eax
  40992f:	fldcw  WORD PTR ds:0xd62e344
  409935:	sti    
  409936:	cs out dx,al
  409938:	ins    DWORD PTR es:[edi],dx
  409939:	bound  esp,QWORD PTR [esi-0x770fdc76]
  40993f:	adc    DWORD PTR [eax],0xadcef659
  409945:	xchg   edx,ecx
  409947:	sub    al,0xf8
  409949:	jo     0x409950
  40994b:	jb     0x409919
  40994d:	retf   0xd4d1
  409950:	mov    ebx,DWORD PTR [esp+edi*8+0x603c9baa]
  409957:	std    
  409958:	pop    ss
  409959:	dec    ecx
  40995a:	mov    ebp,0x559e6944
  40995f:	sbb    al,0x8d
  409961:	rcr    DWORD PTR [edi+0xd],1
  409964:	mov    bl,bl
  409966:	mov    gs,WORD PTR gs:[eax-0xe4f187c]
  40996d:	in     al,0xa5
  40996f:	jl     0x4099c2
  409971:	and    DWORD PTR [edi+0x37],edi
  409974:	cmp    DWORD PTR [ebx],edx
  409976:	jl     0x40992a
  409978:	pop    esp
  409979:	dec    esp
  40997a:	shr    DWORD PTR [edi-0x7bceaf2c],1
  409980:	push   cs
  409981:	xor    DWORD PTR [eax+0x29a979f3],ebx
  409987:	stc    
  409988:	xchg   edi,eax
  409989:	bound  ebx,QWORD PTR [eax]
  40998b:	(bad)  [edx]
  40998d:	xor    ch,bl
  40998f:	jnp    0x4099b9
  409991:	cdq    
  409992:	mov    DWORD PTR [edx+0x2d],edx
  409995:	mov    bl,0x37
  409997:	adc    si,cx
  40999a:	es ja  0x409942
  40999d:	push   cs
  40999e:	mov    ebx,0x3e2c1030
  4099a3:	pop    edx
  4099a4:	pop    es
  4099a5:	pusha  
  4099a6:	cld    
  4099a7:	adc    eax,0x88f365ea
  4099ac:	xor    ah,BYTE PTR [ebp-0x25]
  4099af:	enter  0x5976,0xc8
  4099b3:	mov    BYTE PTR [edi],cl
  4099b5:	retf   
  4099b6:	sub    al,0x4e
  4099b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099b9:	inc    ecx
  4099ba:	or     esi,edi
  4099bc:	ds inc esi
  4099be:	mov    ch,0xf4
  4099c0:	mov    esp,0x78d69905
  4099c5:	mov    ebp,DWORD PTR [eax]
  4099c7:	pop    eax
  4099c8:	imul   eax,DWORD PTR [edx],0x4dd4b6e9
  4099ce:	xchg   BYTE PTR [ebx],bh
  4099d0:	(bad)  
  4099d1:	mov    esi,0x2d4ec6f1
  4099d6:	test   DWORD PTR [edi+0x30],ebx
  4099d9:	(bad)  
  4099da:	in     al,dx
  4099db:	(bad)  
  4099dc:	outs   dx,BYTE PTR ds:[esi]
  4099dd:	mov    eax,ds:0xe0131d47
  4099e2:	clc    
  4099e3:	mov    cl,BYTE PTR [eax-0x29510ba4]
  4099e9:	pusha  
  4099ea:	and    al,0x47
  4099ec:	push   0xffffffaf
  4099ee:	out    dx,al
  4099ef:	ja     0x409a37
  4099f1:	mov    gs,esi
  4099f3:	jg     0x409a5f
  4099f5:	push   es
  4099f6:	dec    edi
  4099f7:	cmp    DWORD PTR cs:[esi+0x1461955b],ecx
  4099fe:	jno    0x409a41
  409a00:	jmp    DWORD PTR [edi+0x30]
  409a03:	imul   ah
  409a05:	mov    eax,0x6382380d
  409a0a:	repz cmp edi,edi
  409a0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a0e:	jp     0x4099c7
  409a10:	jo     0x409a3b
  409a12:	add    ah,BYTE PTR [edi]
  409a14:	rcr    DWORD PTR [ecx+0x6c],1
  409a17:	mov    DWORD PTR [ebx-0x66],esi
  409a1a:	xchg   esp,eax
  409a1b:	push   cs
  409a1c:	mov    WORD PTR [eax-0x4a],es
  409a1f:	(bad)
  409a22:	push   ds
  409a23:	pop    edi
  409a24:	jmp    0xcdbb:0x514afc08
  409a2b:	shl    DWORD PTR [ebx+0x25],0xde
  409a2f:	dec    ecx
  409a30:	fld    st(5)
  409a32:	dec    edi
  409a33:	sldt   WORD PTR [esp+eiz*4-0x53fc4bbb]
  409a3b:	jne    0x409a5d
  409a3d:	outs   dx,BYTE PTR ds:[esi]
  409a3e:	xor    dh,BYTE PTR [eax+eax*8+0x5]
  409a42:	jno    0x4099d5
  409a44:	psubw  mm4,QWORD PTR [edx+0xb5c2467]
  409a4b:	test   eax,0x3fdf4532
  409a50:	jmp    0x4099e7
  409a52:	xchg   esi,eax
  409a53:	das    
  409a54:	fistp  WORD PTR [edi-0x57]
  409a57:	jns    0x409acb
  409a59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a5a:	mov    dl,0xfd
  409a5c:	fs aaa 
  409a5e:	pop    edi
  409a5f:	aas    
  409a60:	pop    ecx
  409a61:	out    0x57,al
  409a63:	popa   
  409a64:	cmp    esi,ecx
  409a66:	sbb    esi,DWORD PTR [edx]
  409a68:	lahf   
  409a69:	dec    eax
  409a6a:	ins    BYTE PTR es:[edi],dx
  409a6b:	dec    ecx
  409a6c:	xchg   DWORD PTR [ebp+0x424bd2cc],esi
  409a72:	xchg   esp,eax
  409a73:	popf   
  409a74:	aam    0xf0
  409a76:	sub    eax,0xc3618e11
  409a7b:	std    
  409a7c:	xchg   ebx,eax
  409a7d:	mov    eax,ds:0x6d4e56a5
  409a82:	int3   
  409a83:	pop    ebx
  409a84:	outs   dx,BYTE PTR ds:[esi]
  409a85:	ficom  WORD PTR [ebx+edi*4+0x16]
  409a89:	jge    0x409aeb
  409a8b:	inc    edi
  409a8c:	sbb    ebp,DWORD PTR [eax-0x5b560001]
  409a92:	sub    eax,0x8cad4e70
  409a97:	sar    ch,cl
  409a99:	mov    eax,0x2d0bb422
  409a9e:	add    eax,0xa1fe2942
  409aa3:	cld    
  409aa4:	rcl    BYTE PTR [esp+esi*8+0x3c],cl
  409aa8:	sbb    al,0x64
  409aaa:	pop    ebx
  409aab:	rcr    BYTE PTR [edx-0x24a02015],0xe1
  409ab2:	dec    ebx
  409ab3:	and    BYTE PTR [ebp+0x1a],bl
  409ab6:	fstp   TBYTE PTR ds:0xcbb49a7a
  409abc:	sub    cl,BYTE PTR [ebx]
  409abe:	xor    bl,0xb6
  409ac1:	int3   
  409ac2:	test   al,0x96
  409ac4:	xchg   esp,eax
  409ac5:	xor    bh,0x8a
  409ac8:	popf   
  409ac9:	rcr    DWORD PTR [esi+eiz*8-0x1b9de9f],cl
  409ad0:	jb     0x409b22
  409ad2:	fnstenv [ebx]
  409ad4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ad5:	imul   ecx,DWORD PTR [edx+0x4172c373],0xb9825435
  409adf:	push   esp
  409ae0:	iret   
  409ae1:	cmc    
  409ae2:	adc    eax,0xbe88451c
  409ae7:	test   BYTE PTR [ecx-0x33],ah
  409aea:	pop    ss
  409aeb:	push   esi
  409aec:	cmp    eax,0x1c5c9146
  409af1:	daa    
  409af2:	sub    edx,ebp
  409af4:	aad    0x29
  409af6:	and    al,0xab
  409af8:	and    ebx,DWORD PTR [eax-0x12]
  409afb:	fstp   DWORD PTR [edi]
  409afd:	add    al,0x2f
  409aff:	and    esi,0x20
  409b02:	jl     0x409a9d
  409b04:	mov    ah,0xa1
  409b06:	pop    esp
  409b07:	ja     0x409ac1
  409b09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b0a:	mov    ebp,0x74d9f43
  409b0f:	jmp    0x760daf93
  409b14:	sub    al,0xa6
  409b16:	call   0x5b8a16a8
  409b1b:	cmp    dh,BYTE PTR [esi+0x53535799]
  409b21:	(bad)
  409b24:	(bad)  
  409b25:	xlat   BYTE PTR ds:[ebx]
  409b26:	cwde   
  409b27:	out    dx,eax
  409b28:	rcl    BYTE PTR [ebx+0x12],cl
  409b2b:	int3   
  409b2c:	cmp    esp,ebp
  409b2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b2f:	and    BYTE PTR [esi-0x2e],dh
  409b32:	xchg   ecx,eax
  409b33:	(bad)  
  409b35:	lods   eax,DWORD PTR ds:[esi]
  409b36:	inc    eax
  409b37:	fst    DWORD PTR [eax+edx*4+0x6d]
  409b3b:	or     al,0x56
  409b3d:	aad    0x4c
  409b3f:	ret    
  409b40:	and    bl,BYTE PTR [ebx-0x4278fc7f]
  409b46:	test   BYTE PTR [ecx-0x40],dh
  409b49:	and    ah,BYTE PTR [edx+ecx*8-0xa95078e]
  409b50:	jmp    0x409af1
  409b52:	adc    ebx,DWORD PTR [esi-0x4e]
  409b55:	xor    eax,0x237c903a
  409b5a:	xor    dh,BYTE PTR [edx]
  409b5c:	lahf   
  409b5d:	dec    esp
  409b5e:	ds jne 0x409bdc
  409b61:	imul   esi,DWORD PTR [ebp+0x70],0x5f
  409b65:	scas   eax,DWORD PTR es:[edi]
  409b66:	mov    ecx,0xb0f41623
  409b6b:	jg     0x409b15
  409b6d:	xor    BYTE PTR [ecx-0x1ea7dfcc],al
  409b73:	je     0x409bc4
  409b75:	bound  esp,QWORD PTR [esi+ecx*1+0x7f88d956]
  409b7c:	xchg   esp,eax
  409b7d:	in     al,dx
  409b7e:	ret    
  409b7f:	sub    eax,0x25fae70
  409b84:	add    eax,0xcdd74c2
  409b89:	in     al,dx
  409b8a:	pop    ebp
  409b8b:	mov    eax,ds:0x24174017
  409b90:	in     eax,0x45
  409b92:	add    al,0x84
  409b94:	xor    DWORD PTR [edx-0x65],ebp
  409b97:	popf   
  409b98:	xlat   BYTE PTR ds:[ebx]
  409b99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b9a:	mov    edi,esi
  409b9c:	ret    0x5155
  409b9f:	loop   0x409ba9
  409ba1:	add    eax,0x8616aed1
  409ba6:	(bad)  [edi-0x5c]
  409ba9:	jno    0x409bc4
  409bab:	jae    0x409b45
  409bad:	mov    fs:0x6fee148c,eax
  409bb3:	mov    BYTE PTR [ecx+0x9],dl
  409bb6:	call   0x7d5f:0xdec18274
  409bbd:	mov    ebx,ebx
  409bbf:	xor    eax,0x5688ee84
  409bc4:	imul   ebp,DWORD PTR [ebx+0x2cd6c8e1],0x8dd7d5d3
  409bce:	loopne 0x409bb9
  409bd0:	push   ebp
  409bd1:	lods   eax,DWORD PTR ds:[esi]
  409bd2:	pop    ebx
  409bd3:	mov    ecx,0xa4ab7a33
  409bd8:	call   0xd216:0x3f40efc4
  409bdf:	add    eax,0x3fc07491
  409be4:	enter  0x2169,0xd7
  409be8:	hlt    
  409be9:	cs jo  0x409c26
  409bec:	mov    ebp,0x3d8f33b2
  409bf1:	data16 es jl 0x409c17
  409bf5:	mov    ebx,0x770de37
  409bfa:	pop    edx
  409bfb:	adc    al,0x9a
  409bfd:	and    BYTE PTR [edi+0x7f607669],0x26
  409c04:	std    
  409c05:	xchg   dh,dl
  409c07:	jmp    0x9678b4ef
  409c0c:	mov    ebp,0xdb5d8ed2
  409c11:	cmp    ebp,ecx
  409c13:	fistp  WORD PTR [esp+0x38]
  409c17:	pop    ebx
  409c18:	pop    ebp
  409c19:	int3   
  409c1a:	bound  ebp,QWORD PTR [esi-0x2122b4b1]
  409c20:	and    al,dl
  409c22:	fwait
  409c23:	xchg   ebp,eax
  409c24:	in     eax,dx
  409c25:	inc    edi
  409c26:	mov    ecx,DWORD PTR [edx-0x22]
  409c29:	rol    DWORD PTR [ecx+0x156ba770],1
  409c2f:	arpl   WORD PTR [eax],bx
  409c31:	mov    BYTE PTR [ebp-0x265e9375],cl
  409c37:	adc    al,0x80
  409c39:	adc    DWORD PTR [ecx],esi
  409c3b:	inc    ecx
  409c3c:	je     0x409c05
  409c3e:	and    edx,edx
  409c40:	xlat   BYTE PTR ds:[ebx]
  409c41:	hlt    
  409c42:	cmp    BYTE PTR [edx-0x77],bh
  409c45:	jno    0x409c5c
  409c47:	or     BYTE PTR ds:0xed7993be,ch
  409c4d:	fidiv  WORD PTR [ebx-0x2403f1fb]
  409c53:	les    edi,FWORD PTR [ebx]
  409c55:	imul   esp,edx,0xffffffd5
  409c58:	jge    0x409c4e
  409c5a:	add    ebp,DWORD PTR [ebx+edx*8]
  409c5d:	nop
  409c5e:	push   ebx
  409c5f:	nop
  409c60:	and    al,0xa3
  409c62:	scas   al,BYTE PTR es:[edi]
  409c63:	dec    esp
  409c64:	adc    DWORD PTR [edi-0x45],ebx
  409c67:	aad    0xce
  409c69:	in     al,dx
  409c6a:	xchg   bl,ch
  409c6c:	pop    edi
  409c6d:	sar    dh,cl
  409c6f:	ins    DWORD PTR es:[edi],dx
  409c70:	inc    ebx
  409c71:	ins    DWORD PTR es:[edi],dx
  409c72:	call   0x3910:0x6b13e07
  409c79:	in     al,0xa0
  409c7b:	xlat   BYTE PTR ds:[ebx]
  409c7c:	xor    dh,BYTE PTR [ecx]
  409c7e:	sub    esp,DWORD PTR [edi-0x1648125a]
  409c84:	aad    0x6
  409c86:	jbe    0x409cd7
  409c88:	mov    eax,esi
  409c8a:	or     ecx,esi
  409c8c:	mov    bl,0x87
  409c8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c8f:	xchg   ecx,eax
  409c90:	pop    edx
  409c91:	inc    edi
  409c92:	add    edi,DWORD PTR [esi+0x22]
  409c95:	fcmovnu st,st(1)
  409c97:	bound  ebp,QWORD PTR [esi]
  409c99:	jne    0x409cc8
  409c9b:	pop    edi
  409c9c:	sub    al,0xed
  409c9e:	imul   esp,DWORD PTR [edi+0x73],0x324fcc2d
  409ca5:	test   BYTE PTR [ebp+0x6e01bb7b],cl
  409cab:	jp     0x409c49
  409cad:	repz test al,0xb4
  409cb0:	mov    eax,0x683865b4
  409cb5:	in     al,dx
  409cb6:	repnz stos DWORD PTR es:[edi],eax
  409cb8:	aaa    
  409cb9:	fsub   DWORD PTR [ebx+0x4d]
  409cbc:	adc    eax,0x248ea3c5
  409cc1:	xor    DWORD PTR [eax+0xb],eax
  409cc4:	hlt    
  409cc5:	mov    esi,0xfceb8a4
  409cca:	(bad)  
  409ccb:	dec    edx
  409ccc:	lea    ebp,[ecx-0x21d0a63e]
  409cd2:	xor    al,BYTE PTR [esi-0xf]
  409cd5:	enter  0xe8ae,0xe7
  409cd9:	outs   dx,DWORD PTR ds:[esi]
  409cda:	dec    BYTE PTR [ebx]
  409cdc:	cmp    DWORD PTR [ecx-0x4c4f8033],ecx
  409ce2:	xchg   ebp,eax
  409ce3:	ds cmp ebp,edx
  409ce6:	inc    edi
  409ce7:	dec    esi
  409ce8:	int3   
  409ce9:	out    0xc0,al
  409ceb:	es es iret 
  409cee:	call   0xaeb8:0xac444e6b
  409cf5:	cmp    eax,0x177d5173
  409cfa:	sub    al,0xbf
  409cfc:	scas   eax,DWORD PTR es:[edi]
  409cfd:	data16 xor BYTE PTR [ebp-0x6c],ah
  409d01:	std    
  409d02:	xor    al,0x5e
  409d04:	enter  0x4230,0x6b
  409d08:	les    esi,FWORD PTR [edx-0x60]
  409d0b:	(bad)
  409d0e:	mov    bh,0xd4
  409d10:	jne    0x409cf2
  409d12:	xor    al,0x10
  409d14:	dec    ecx
  409d15:	inc    esp
  409d16:	mov    cl,0x65
  409d18:	cmp    cl,BYTE PTR fs:[esi+eiz*4+0x3e0cd9cc]
  409d20:	bound  ecx,QWORD PTR [ecx]
  409d22:	sar    DWORD PTR [eax+ecx*4-0x6728c46a],1
  409d29:	mov    ecx,0xffdcfa2a
  409d2e:	and    ebx,eax
  409d30:	mov    bl,0xb9
  409d32:	inc    esi
  409d33:	les    edi,FWORD PTR [edi-0x24b080e2]
  409d39:	das    
  409d3a:	out    0x6f,al
  409d3c:	idiv   cl
  409d3e:	cs pop ss
  409d40:	daa    
  409d41:	add    eax,ebp
  409d43:	and    al,0x3
  409d45:	adc    cl,BYTE PTR ds:0x3445832b
  409d4b:	xor    edx,DWORD PTR [edi-0x67]
  409d4e:	test   al,0x67
  409d50:	clc    
  409d51:	or     ebx,DWORD PTR [eax-0x67]
  409d54:	icebp  
  409d55:	push   0xda22bcd8
  409d5a:	xlat   BYTE PTR ds:[ebx]
  409d5b:	sbb    esp,ebx
  409d5d:	fs and ecx,esi
  409d60:	cmp    al,dl
  409d62:	lods   eax,DWORD PTR ds:[esi]
  409d63:	cli    
  409d64:	xchg   ebp,eax
  409d65:	jg     0x409d4a
  409d67:	sbb    al,0xce
  409d69:	(bad)  
  409d6a:	mov    bh,0x69
  409d6c:	jmp    0xd670e331
  409d71:	mov    WORD PTR [eax+0x52],?
  409d74:	add    al,0x85
  409d76:	imul   DWORD PTR [edx+0x52df883a]
  409d7c:	fwait
  409d7d:	adc    ecx,DWORD PTR [edi+0x3951ae30]
  409d83:	xor    eax,DWORD PTR [ebx]
  409d85:	lock mov esi,0xed44cf84
  409d8b:	rol    DWORD PTR [ebp-0x11],cl
  409d8e:	jne    0x409da6
  409d90:	lods   al,BYTE PTR ds:[esi]
  409d91:	into   
  409d92:	data16 hlt 
  409d94:	and    al,0xd0
  409d96:	or     ecx,eax
  409d98:	push   esp
  409d99:	push   edi
  409d9a:	mov    bl,0xdb
  409d9c:	jb     0x409df2
  409d9e:	gs dec esi
  409da0:	adc    eax,0xe443da5b
  409da5:	dec    ebx
  409da6:	push   ebp
  409da7:	push   ds
  409da8:	(bad)  
  409da9:	mov    dl,0x1
  409dab:	jecxz  0x409de2
  409dad:	fld    DWORD PTR [ebx+eiz*4-0x6d]
  409db1:	mov    bh,BYTE PTR [edi]
  409db3:	xor    DWORD PTR [edi-0x45],edx
  409db6:	ror    dh,1
  409db8:	dec    ebp
  409db9:	das    
  409dba:	stos   BYTE PTR es:[edi],al
  409dbb:	inc    esp
  409dbc:	pop    es
  409dbd:	das    
  409dbe:	pop    edi
  409dbf:	scas   eax,DWORD PTR es:[edi]
  409dc0:	enter  0x8007,0x9b
  409dc4:	mov    esi,0x8c1035f3
  409dc9:	jp     0x409dae
  409dcb:	add    ah,BYTE PTR [ecx]
  409dcd:	pop    ss
  409dce:	inc    ebp
  409dcf:	ret    0x283e
  409dd2:	ins    DWORD PTR es:[edi],dx
  409dd3:	aaa    
  409dd4:	push   es
  409dd5:	(bad)
  409dd8:	mov    ecx,DWORD PTR ds:0xee2851ea
  409dde:	cdq    
  409ddf:	shr    BYTE PTR [ecx],cl
  409de1:	fisubr DWORD PTR [esi-0x3d1b7664]
  409de7:	arpl   cx,bx
  409de9:	xlat   BYTE PTR ds:[ebx]
  409dea:	xchg   al,ch
  409dec:	mov    ebp,0x2b220c61
  409df1:	ror    DWORD PTR [ecx+0x4d81fc45],0xfc
  409df8:	mov    esp,0x8bf89c85
  409dfd:	inc    ebp
  409dfe:	hlt    
  409dff:	xor    eax,esi
  409e01:	add    eax,edi
  409e03:	push   eax
  409e04:	mov    eax,DWORD PTR [ebp-0x10]
  409e07:	xor    eax,esi
  409e09:	add    eax,edi
  409e0b:	push   eax
  409e0c:	mov    eax,DWORD PTR [ebp-0x4]
  409e0f:	xor    eax,esi
  409e11:	add    eax,edi
  409e13:	push   eax
  409e14:	lea    eax,[ebp-0x7c]
  409e17:	push   eax
  409e18:	push   DWORD PTR [ebp-0x2c]
  409e1b:	push   DWORD PTR [ebp-0x28]
  409e1e:	call   0x40c8dd
  409e23:	test   eax,eax
  409e25:	je     0x409e53
  409e2b:	lea    eax,[ebp-0x7c]
  409e2e:	push   eax
  409e2f:	mov    eax,DWORD PTR [ebp-0x28]
  409e32:	xor    eax,esi
  409e34:	add    eax,edi
  409e36:	push   eax
  409e37:	mov    eax,DWORD PTR [ebp-0x24]
  409e3a:	add    eax,0xaa
  409e3f:	push   eax
  409e40:	mov    eax,DWORD PTR [ebp-0x24]
  409e43:	mov    eax,DWORD PTR [eax+0x198]
  409e49:	push   DWORD PTR [eax]
  409e4b:	call   0x402992
  409e50:	mov    DWORD PTR [ebp-0x14],eax
  409e53:	lea    eax,[ebp+0x4]
  409e56:	mov    DWORD PTR [ebp-0x30],eax
  409e59:	mov    eax,DWORD PTR [ebp-0x14]
  409e5c:	test   eax,eax
  409e5e:	je     0x409ec6
  409e64:	lea    eax,[ebp-0x8]
  409e67:	mov    DWORD PTR [ebp-0x38],eax
  409e6a:	mov    eax,DWORD PTR [ebp-0x34]
  409e6d:	mov    DWORD PTR [ebp-0x8],eax
  409e70:	mov    eax,DWORD PTR [ebp-0x8]
  409e73:	mov    ecx,DWORD PTR [ebp-0x14]
  409e76:	sub    eax,ecx
  409e78:	mov    DWORD PTR [ebp-0x8],eax
  409e7b:	mov    ecx,DWORD PTR [ebp-0x4]
  409e7e:	xor    ecx,esi
  409e80:	mov    eax,0xffcd8d20
  409e85:	sub    eax,ecx
  409e87:	add    DWORD PTR [ebp-0x8],eax
  409e8a:	mov    eax,DWORD PTR [ebp-0x8]
  409e8d:	mov    ecx,DWORD PTR [ebp-0x14]
  409e90:	mov    DWORD PTR [ecx+0x1],eax
  409e93:	mov    eax,DWORD PTR [ebp-0x14]
  409e96:	push   DWORD PTR [ebp-0x24]
  409e99:	mov    BYTE PTR [eax],0xe9
  409e9c:	mov    eax,ds:0x42e18f
  409ea1:	push   DWORD PTR [eax]
  409ea3:	push   DWORD PTR ds:0x42e3eb
  409ea9:	push   DWORD PTR ds:0x42e197
  409eaf:	push   DWORD PTR ds:0x42e3cb
  409eb5:	push   DWORD PTR ds:0x42e6f3
  409ebb:	push   DWORD PTR [ebp-0x28]
  409ebe:	push   DWORD PTR [ebp-0x2c]
  409ec1:	mov    eax,DWORD PTR [ebp-0x14]
  409ec4:	call   eax
  409ec6:	mov    eax,DWORD PTR [ebp-0x30]
  409ec9:	mov    ecx,DWORD PTR ds:0x42e38f
  409ecf:	add    DWORD PTR [eax],ecx
  409ed1:	pop    edi
  409ed2:	pop    esi
  409ed3:	leave  
  409ed4:	ret    
  409ed5:	push   ebp
  409ed6:	mov    ebp,esp
  409ed8:	sub    esp,0x18
  409edb:	add    edx,DWORD PTR ds:0x42c004
  409ee1:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  409ee8:	xor    DWORD PTR ds:0x42d018,0x529f
  409ef2:	lea    eax,[ebp+0x14]
  409ef5:	sbb    ecx,edx
  409ef7:	mov    DWORD PTR [ebp-0x4],eax
  409efa:	add    DWORD PTR ds:0x429010,edx
  409f00:	push   esi
  409f01:	mov    DWORD PTR ds:0x429000,0x1b
  409f0b:	cmp    DWORD PTR ds:0x429000,0x0
  409f12:	je     0x409f77
  409f18:	cmp    DWORD PTR ds:0x429000,0xb
  409f1f:	jne    0x409f38
  409f25:	push   DWORD PTR [ebp-0x28]
  409f28:	push   0x0
  409f2a:	push   0x42d010
  409f2f:	push   DWORD PTR [ebp-0x1c]
  409f32:	call   DWORD PTR ds:0x42e9af
  409f38:	cmp    DWORD PTR ds:0x429000,0xc
  409f3f:	jne    0x409f54
  409f45:	xor    esi,esi
  409f47:	or     esi,DWORD PTR ds:0x429000
  409f4d:	dec    esi
  409f4e:	mov    DWORD PTR ds:0x429000,esi
  409f54:	mov    esi,DWORD PTR ds:0x429000
  409f5a:	dec    esi
  409f5b:	mov    DWORD PTR ds:0x429000,esi
  409f61:	jmp    0x409f0b
  409f66:	mov    ecx,DWORD PTR ds:0x41ac60
  409f6c:	mov    edx,DWORD PTR ds:0x41ac64
  409f72:	sub    ecx,edx
  409f74:	xor    ecx,DWORD PTR [ecx+edx*1]
  409f77:	mov    esi,0xf89c85b9
  409f7c:	xor    DWORD PTR ds:0x429028,edx
  409f82:	mov    DWORD PTR [ebp-0xc],esi
  409f85:	sub    DWORD PTR ds:0x42a014,edi
  409f8b:	lea    eax,[ebp-0xc]
  409f8e:	movzx  edx,BYTE PTR ds:0x42c014
  409f95:	adc    edx,DWORD PTR ds:0x42a004
  409f9b:	mov    DWORD PTR ds:0x42c014,edx
  409fa1:	mov    DWORD PTR [ebp-0x14],eax
  409fa4:	or     DWORD PTR ds:0x42d010,0xdad
  409fae:	mov    eax,DWORD PTR [ebp-0xc]
  409fb1:	and    DWORD PTR ds:0x429008,0x0
  409fbb:	jmp    0x409fcd
  409fc0:	mov    ecx,DWORD PTR ds:0x429008
  409fc6:	inc    ecx
  409fc7:	mov    DWORD PTR ds:0x429008,ecx
  409fcd:	cmp    DWORD PTR ds:0x429008,0x15
  409fd4:	jae    0x40a012
  409fda:	cmp    DWORD PTR ds:0x429008,0x9
  409fe1:	jne    0x409fed
  409fe7:	call   DWORD PTR ds:0x42e9b3
  409fed:	cmp    DWORD PTR ds:0x429008,0x8
  409ff4:	jne    0x40a007
  409ffa:	mov    ecx,DWORD PTR ds:0x429008
  40a000:	inc    ecx
  40a001:	mov    DWORD PTR ds:0x429008,ecx
  40a007:	jmp    0x409fc0
  40a00c:	sub    DWORD PTR ds:0x42901c,edx
  40a012:	mov    edx,DWORD PTR [ebp-0x14]
  40a015:	and    DWORD PTR ds:0x42b010,0x0
  40a01f:	jmp    0x40a031
  40a024:	mov    ecx,DWORD PTR ds:0x42b010
  40a02a:	inc    ecx
  40a02b:	mov    DWORD PTR ds:0x42b010,ecx
  40a031:	cmp    DWORD PTR ds:0x42b010,0x17
  40a038:	jae    0x40a06e
  40a03e:	cmp    DWORD PTR ds:0x42b010,0x19
  40a045:	jne    0x40a069
  40a04b:	push   DWORD PTR [ebp-0x10]
  40a04e:	push   0x429008
  40a053:	push   0x87b9
  40a058:	push   DWORD PTR [ebp-0x1c]
  40a05b:	push   DWORD PTR [ebp-0x24]
  40a05e:	push   0x8ec6
  40a063:	call   DWORD PTR ds:0x42e9b7
  40a069:	jmp    0x40a024
  40a06e:	mov    ecx,0x7510899
  40a073:	xor    eax,ecx
  40a075:	add    eax,0x3272e0
  40a07a:	mov    DWORD PTR [edx],eax
  40a07c:	mov    eax,ds:0x42e18b
  40a081:	add    DWORD PTR ds:0x429020,ebx
  40a087:	mov    edx,DWORD PTR [ebp-0x4]
  40a08a:	mov    eax,DWORD PTR [eax]
  40a08c:	add    DWORD PTR ds:0x42d010,0x42b008
  40a096:	add    eax,DWORD PTR [edx]
  40a098:	sbb    edx,DWORD PTR ds:0x42c00c
  40a09e:	push   edi
  40a09f:	mov    DWORD PTR [ebp-0x8],eax
  40a0a2:	and    DWORD PTR ds:0x42c014,0x0
  40a0ac:	jmp    0x40a0bf
  40a0b1:	xor    eax,eax
  40a0b3:	add    eax,DWORD PTR ds:0x42c014
  40a0b9:	inc    eax
  40a0ba:	mov    ds:0x42c014,eax
  40a0bf:	cmp    DWORD PTR ds:0x42c014,0x1d
  40a0c6:	jae    0x40a159
  40a0cc:	cmp    DWORD PTR ds:0x42c014,0x8
  40a0d3:	jne    0x40a0df
  40a0d9:	call   DWORD PTR ds:0x42e9bb
  40a0df:	cmp    DWORD PTR ds:0x42c014,0x7
  40a0e6:	jne    0x40a0fa
  40a0ec:	xor    eax,eax
  40a0ee:	xor    eax,DWORD PTR ds:0x42c014
  40a0f4:	inc    eax
  40a0f5:	mov    ds:0x42c014,eax
  40a0fa:	jmp    0x40a0b1
  40a0ff:	and    DWORD PTR ds:0x42d004,0x0
  40a109:	jmp    0x40a11c
  40a10e:	xor    eax,eax
  40a110:	or     eax,DWORD PTR ds:0x42d004
  40a116:	inc    eax
  40a117:	mov    ds:0x42d004,eax
  40a11c:	cmp    DWORD PTR ds:0x42d004,0x1c
  40a123:	jae    0x40a159
  40a129:	cmp    DWORD PTR ds:0x42d004,0x2b
  40a130:	jne    0x40a147
  40a136:	push   DWORD PTR [ebp-0x20]
  40a139:	push   0x429018
  40a13e:	push   DWORD PTR [ebp-0x1c]
  40a141:	call   DWORD PTR ds:0x42e9bf
  40a147:	jmp    0x40a10e
  40a14c:	movzx  edi,BYTE PTR ds:0x42c014
  40a153:	sbb    DWORD PTR ds:0x42a004,edi
  40a159:	mov    edi,DWORD PTR [ebp+0x8]
  40a15c:	adc    edx,edx
  40a15e:	mov    eax,ds:0x42e313
  40a163:	mov    eax,DWORD PTR [eax+0x198]
  40a169:	xor    edi,ecx
  40a16b:	mov    DWORD PTR ds:0x42a008,0x1f
  40a175:	cmp    DWORD PTR ds:0x42a008,0x0
  40a17c:	je     0x40a1b8
  40a182:	cmp    DWORD PTR ds:0x42a008,0x2d
  40a189:	jne    0x40a1a4
  40a18f:	push   0x42e000
  40a194:	push   0x42e139
  40a199:	push   0x400000
  40a19e:	call   DWORD PTR ds:0x42e9c7
  40a1a4:	xor    edx,edx
  40a1a6:	add    edx,DWORD PTR ds:0x42a008
  40a1ac:	dec    edx
  40a1ad:	mov    DWORD PTR ds:0x42a008,edx
  40a1b3:	jmp    0x40a175
  40a1b8:	mov    edx,0x3272e0
  40a1bd:	xor    DWORD PTR ds:0x429010,0x6770
  40a1c7:	add    edi,edx
  40a1c9:	cmp    DWORD PTR [eax],edi
  40a1cb:	mov    DWORD PTR ds:0x42900c,0x1dd7
  40a1d5:	je     0x40a1f6
  40a1db:	mov    DWORD PTR ds:0x429014,0x4354
  40a1e5:	mov    eax,DWORD PTR [eax]
  40a1e7:	mov    DWORD PTR ds:0x42900c,0x7b1e
  40a1f1:	jmp    0x40c789
  40a1f6:	mov    eax,ds:0x42a008
  40a1fb:	mov    eax,DWORD PTR [ebp+0x18]
  40a1fe:	cmp    eax,esi
  40a200:	jne    0x40a224
  40a206:	mov    DWORD PTR ds:0x429010,0x2813
  40a210:	push   0xf89c85b8
  40a215:	mov    DWORD PTR ds:0x429020,0x131a
  40a21f:	jmp    0x40c778
  40a224:	mov    esi,0x74b
  40a229:	mov    esi,DWORD PTR [ebp+0x18]
  40a22c:	mov    eax,0xf89c85bb
  40a231:	cmp    esi,eax
  40a233:	mov    DWORD PTR ds:0x42c010,0x1f83
  40a23d:	jne    0x40c768
  40a243:	add    esi,eax
  40a245:	mov    eax,DWORD PTR [ebp+0x10]
  40a248:	add    esi,0x4b50
  40a24e:	xor    eax,ecx
  40a250:	or     DWORD PTR ds:0x42c01c,edx
  40a256:	add    eax,edx
  40a258:	mov    DWORD PTR [ebp-0x18],eax
  40a25b:	sbb    DWORD PTR ds:0x42d01c,edx
  40a261:	mov    eax,DWORD PTR [ebp+0xc]
  40a264:	add    esi,0x5e8f
  40a26a:	mov    esi,DWORD PTR [ebp-0x8]
  40a26d:	xor    eax,ecx
  40a26f:	mov    DWORD PTR ds:0x42d004,0x61c0
  40a279:	add    eax,edx
  40a27b:	add    DWORD PTR ds:0x42a004,0x42d004
  40a285:	imul   eax,DWORD PTR [esi]
  40a288:	add    DWORD PTR ds:0x42d004,0x19e2
  40a292:	mov    esi,DWORD PTR [ebp+0x8]
  40a295:	xor    esi,ecx
  40a297:	add    esi,edx
  40a299:	cmp    esi,eax
  40a29b:	mov    eax,DWORD PTR [ebp-0x4]
  40a29e:	push   ebx
  40a29f:	je     0x40a2be
  40a2a5:	mov    esi,DWORD PTR [ebp-0x18]
  40a2a8:	add    DWORD PTR [eax],esi
  40a2aa:	mov    eax,DWORD PTR [ebp-0x4]
  40a2ad:	mov    esi,DWORD PTR [ebp+0xc]
  40a2b0:	xor    esi,ecx
  40a2b2:	add    esi,edx
  40a2b4:	imul   esi,DWORD PTR [eax]
  40a2b7:	mov    DWORD PTR [eax],esi
  40a2b9:	jmp    0x40a2c3
  40a2be:	mov    esi,DWORD PTR [ebp+0x14]
  40a2c1:	xor    DWORD PTR [eax],esi
  40a2c3:	mov    eax,DWORD PTR [ebp-0x4]
  40a2c6:	mov    edi,DWORD PTR [ebp+0x10]
  40a2c9:	xor    edi,ecx
  40a2cb:	mov    esi,0xffcd8d20
  40a2d0:	mov    ebx,esi
  40a2d2:	sub    ebx,edi
  40a2d4:	add    DWORD PTR [eax],ebx
  40a2d6:	mov    eax,DWORD PTR [ebp-0x4]
  40a2d9:	mov    edi,DWORD PTR [ebp-0x8]
  40a2dc:	add    edi,DWORD PTR [eax]
  40a2de:	mov    DWORD PTR [ebp-0x8],edi
  40a2e1:	mov    eax,DWORD PTR [ebp+0xc]
  40a2e4:	mov    edi,DWORD PTR [ebp+0xc]
  40a2e7:	xor    edi,ecx
  40a2e9:	jmp    0x40c634
  40a2ee:	neg    ch
  40a2f0:	jns    0x40a2c7
  40a2f2:	xchg   ecx,eax
  40a2f3:	mov    ch,0x76
  40a2f5:	popf   
  40a2f6:	outs   dx,BYTE PTR ds:[esi]
  40a2f7:	mov    ah,0x10
  40a2f9:	inc    esi
  40a2fa:	mov    al,0x4f
  40a2fc:	sub    al,0xd
  40a2fe:	add    BYTE PTR cs:[edx+0x7a],bh
  40a302:	inc    esp
  40a303:	pop    edi
  40a304:	jp     0x40a380
  40a306:	pop    edi
  40a307:	jo     0x40a2a0
  40a309:	dec    ebx
  40a30a:	(bad)  
  40a30b:	ds pop ds
  40a30d:	pop    esp
  40a30e:	mov    BYTE PTR [ebx-0x7d],cl
  40a311:	sub    cl,cl
  40a313:	mov    eax,0x73892489
  40a318:	xchg   esi,eax
  40a319:	lahf   
  40a31a:	adc    al,0x8f
  40a31c:	bound  ecx,QWORD PTR [eax]
  40a31e:	hlt    
  40a31f:	bound  esi,QWORD PTR [eax-0x61]
  40a322:	jne    0x40a302
  40a324:	mov    bl,0xd8
  40a326:	add    edi,esi
  40a328:	xchg   dl,ah
  40a32a:	cmp    esi,ebp
  40a32c:	(bad)  
  40a32d:	mov    bh,0x51
  40a32f:	jmp    0x7d4743e1
  40a334:	shl    ah,cl
  40a336:	jno    0x40a319
  40a338:	std    
  40a339:	jg     0x40a316
  40a33b:	push   ss
  40a33c:	and    eax,0xfcc6783e
  40a341:	rcr    bh,0x7e
  40a344:	pop    esi
  40a345:	outs   dx,BYTE PTR ds:[esi]
  40a346:	cwde   
  40a347:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a348:	bound  edi,QWORD PTR [ebp-0x14]
  40a34b:	lock or DWORD PTR [eax],esi
  40a34e:	addr16 out dx,eax
  40a350:	popa   
  40a351:	xchg   DWORD PTR [ebp-0x16],ebx
  40a354:	push   esi
  40a355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a356:	jp     0x40a333
  40a358:	sub    edi,DWORD PTR [esi]
  40a35a:	test   DWORD PTR [edx+0x4bc99c1c],esp
  40a360:	add    dl,bl
  40a362:	test   al,0x43
  40a364:	xchg   esi,eax
  40a365:	mov    ch,0x48
  40a367:	ds popa 
  40a369:	imul   ebx,DWORD PTR [esi],0x9bf6a027
  40a36f:	js     0x40a2fe
  40a371:	int3   
  40a372:	imul   eax,DWORD PTR [ebp-0x7c],0xffffffab
  40a376:	mov    eax,0x9ba51b4
  40a37b:	jno    0x40a3ec
  40a37d:	xchg   ebp,eax
  40a37e:	pushf  
  40a37f:	aas    
  40a380:	fild   WORD PTR [eax]
  40a382:	(bad)  
  40a383:	mov    ah,0xdb
  40a385:	arpl   WORD PTR [ebx],di
  40a387:	inc    esp
  40a388:	je     0x40a39a
  40a38a:	mov    bl,0x76
  40a38c:	mov    ecx,0x391f7e1c
  40a391:	mov    eax,0x8aef567b
  40a396:	arpl   WORD PTR [ebp-0x539d50dc],di
  40a39c:	mov    edx,0xef7978fd
  40a3a1:	xchg   DWORD PTR [esi],esi
  40a3a3:	lahf   
  40a3a4:	stos   DWORD PTR es:[edi],eax
  40a3a5:	xchg   ebp,eax
  40a3a6:	pop    ebx
  40a3a7:	or     BYTE PTR [ebx-0x5e],ch
  40a3aa:	jbe    0x40a3f9
  40a3ac:	push   es
  40a3ad:	jg     0x40a390
  40a3af:	jmp    0x40a33b
  40a3b1:	call   0xd189b48
  40a3b6:	cmp    eax,0x10e6a7ba
  40a3bb:	pop    ebx
  40a3bc:	jmp    0xdd06:0x245a24e
  40a3c3:	fcomp  DWORD PTR [edi]
  40a3c5:	and    al,0x45
  40a3c7:	or     cl,dl
  40a3c9:	leave  
  40a3ca:	sar    esi,1
  40a3cc:	shr    DWORD PTR [eax+0x2dee1ef7],1
  40a3d2:	jno    0x40a3d7
  40a3d4:	je     0x40a418
  40a3d6:	leave  
  40a3d7:	sbb    BYTE PTR [eax],0xc1
  40a3da:	xor    ecx,edx
  40a3dc:	mov    esp,DWORD PTR [edx+0x78]
  40a3df:	aam    0xb0
  40a3e1:	ja     0x40a450
  40a3e3:	call   0x9f67:0xa77eae14
  40a3ea:	jbe    0x40a39a
  40a3ec:	mov    al,ds:0xf5d0a0f7
  40a3f1:	or     eax,0x129eebfb
  40a3f6:	mov    ebx,0xd3e0c965
  40a3fb:	hlt    
  40a3fc:	and    ch,dl
  40a3fe:	sub    eax,0x711aa9ef
  40a403:	push   es
  40a404:	push   edx
  40a405:	cld    
  40a406:	sbb    DWORD PTR [eax-0x5e],edi
  40a409:	add    al,BYTE PTR [edx]
  40a40b:	adc    al,0xba
  40a40d:	fst    QWORD PTR [eax-0x37]
  40a410:	adc    bh,dl
  40a412:	lds    ebx,FWORD PTR [esi]
  40a414:	(bad)  
  40a415:	lds    ebx,FWORD PTR [edi]
  40a417:	xchg   ebx,eax
  40a418:	dec    esi
  40a419:	mov    edi,0xa43282e3
  40a41e:	(bad)  
  40a420:	scas   eax,DWORD PTR es:[edi]
  40a421:	leave  
  40a422:	sbb    BYTE PTR [ecx-0x64],0x10
  40a426:	outs   dx,BYTE PTR ds:[esi]
  40a427:	xor    dl,BYTE PTR [ecx+edi*1-0x25e05dc5]
  40a42e:	nop
  40a42f:	jno    0x40a46b
  40a431:	(bad)  
  40a432:	jns    0x40a483
  40a434:	dec    eax
  40a435:	popa   
  40a436:	cmc    
  40a437:	in     al,dx
  40a438:	and    ah,BYTE PTR [edx]
  40a43a:	inc    edx
  40a43b:	pop    esp
  40a43c:	push   esp
  40a43d:	int3   
  40a43e:	(bad)  
  40a43f:	out    0x27,al
  40a441:	dec    eax
  40a442:	popf   
  40a443:	fld    QWORD PTR [edi*8-0x668e03c7]
  40a44a:	cmp    edi,edi
  40a44c:	sub    DWORD PTR [ebx+0x5763a5bf],0x28
  40a453:	pop    ecx
  40a454:	sti    
  40a455:	adc    ecx,DWORD PTR [ecx+esi*2]
  40a458:	and    al,0xaf
  40a45a:	mov    cs:0x5d79e778,eax
  40a460:	mov    ch,0x86
  40a462:	pop    edx
  40a463:	or     esi,DWORD PTR [ebx-0x23]
  40a466:	cmp    eax,0x4eea679f
  40a46b:	mov    dl,0xec
  40a46d:	mov    eax,ds:0x3443406f
  40a472:	jae    0x40a4f3
  40a474:	inc    ebx
  40a475:	mov    dh,0x35
  40a477:	les    ebx,FWORD PTR [edi]
  40a479:	loopne 0x40a46c
  40a47b:	and    dl,BYTE PTR [esi]
  40a47d:	outs   dx,BYTE PTR ds:[esi]
  40a47e:	add    dl,BYTE PTR [esi+0x79b43fdd]
  40a484:	sub    ecx,edx
  40a486:	es rcr dh,0x63
  40a48a:	loope  0x40a4b1
  40a48c:	mov    ebp,0xe73e54b
  40a491:	pushf  
  40a492:	lods   al,BYTE PTR ds:[esi]
  40a493:	hlt    
  40a494:	sub    eax,0xe0c6a479
  40a499:	dec    ebx
  40a49a:	dec    eax
  40a49b:	xchg   esi,eax
  40a49c:	jnp    0x40a43b
  40a49e:	sbb    al,0xb2
  40a4a0:	cmp    BYTE PTR [esi+0x25f0b529],0xde
  40a4a7:	and    al,0x96
  40a4a9:	sbb    ch,ch
  40a4ab:	dec    esi
  40a4ac:	in     al,dx
  40a4ad:	loopne 0x40a4a8
  40a4af:	mov    es,WORD PTR [eax-0x33]
  40a4b2:	xchg   edi,eax
  40a4b3:	mov    edx,0xf5e11edd
  40a4b8:	mov    ebp,0xc4273694
  40a4bd:	cmp    BYTE PTR [edi],dl
  40a4bf:	push   ebp
  40a4c0:	(bad)  
  40a4c1:	xlat   BYTE PTR ds:[ebx]
  40a4c2:	add    DWORD PTR [ecx+esi*1+0x77ac2832],esi
  40a4c9:	sbb    ah,BYTE PTR [ebp-0x1a20edf1]
  40a4cf:	adc    edx,DWORD PTR [esi]
  40a4d1:	mov    dl,0x9b
  40a4d3:	add    ebx,esi
  40a4d5:	retf   
  40a4d6:	nop
  40a4d7:	les    ecx,FWORD PTR [ebp-0x2c]
  40a4da:	push   0x9d940fec
  40a4df:	rol    DWORD PTR [edi-0x7bd2c6d4],cl
  40a4e5:	rol    BYTE PTR [ecx-0xb],1
  40a4e8:	dec    edi
  40a4e9:	mov    ebx,0x65967c87
  40a4ee:	addr16 dec esi
  40a4f0:	push   0xb94a14e4
  40a4f5:	mov    ds:0x23966de9,eax
  40a4fa:	sti    
  40a4fb:	dec    edx
  40a4fc:	das    
  40a4fd:	es (bad) 
  40a4ff:	repz xor DWORD PTR [esi+0x5b8a92e6],0xffffffdf
  40a507:	pop    ds
  40a508:	stos   DWORD PTR es:[edi],eax
  40a509:	fstp   QWORD PTR [eax+0x5e6c96d4]
  40a50f:	sub    DWORD PTR [edx],ebx
  40a511:	dec    edx
  40a512:	faddp  st(3),st
  40a514:	int    0x5a
  40a516:	sbb    eax,0x8ffa4f4d
  40a51b:	jb     0x40a50c
  40a51d:	or     edi,DWORD PTR [ecx-0x4a]
  40a520:	data16 mov dl,0xb4
  40a523:	ja     0x40a57b
  40a525:	sbb    DWORD PTR [edx-0x6f466ca8],edx
  40a52b:	pushf  
  40a52c:	in     eax,0xcb
  40a52e:	ret    0x7ce6
  40a531:	mov    ecx,0x6589324d
  40a536:	xchg   edi,eax
  40a537:	repz mov edx,0x6c3de85b
  40a53d:	sbb    eax,0x567299ac
  40a542:	clc    
  40a543:	jmp    0x40a52c
  40a545:	jnp    0x40a4d9
  40a547:	adc    DWORD PTR [esi-0x3a],ebp
  40a54a:	fcomp  QWORD PTR [edi-0x52]
  40a54d:	jbe    0x40a4f8
  40a54f:	mov    al,0xa9
  40a551:	dec    ch
  40a553:	xchg   ebp,eax
  40a554:	mov    ?,WORD PTR [ebx+0x7b]
  40a557:	jne    0x40a59c
  40a559:	nop
  40a55a:	scas   eax,DWORD PTR es:[edi]
  40a55b:	out    dx,al
  40a55c:	aas    
  40a55d:	inc    edi
  40a55e:	inc    edi
  40a55f:	push   ds
  40a560:	into   
  40a561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a562:	sbb    esp,edi
  40a564:	jb     0x40a4e7
  40a566:	or     al,0x91
  40a568:	dec    eax
  40a569:	adc    esi,ebp
  40a56b:	push   ss
  40a56c:	jle    0x40a5d6
  40a56e:	das    
  40a56f:	and    eax,0x655a466
  40a574:	icebp  
  40a575:	js     0x40a518
  40a577:	push   ecx
  40a578:	mov    DWORD PTR [edi+eax*8-0x5755905c],0x113bd22
  40a583:	int3   
  40a584:	xchg   DWORD PTR [eax+0x236ea785],esp
  40a58a:	enter  0x139b,0x70
  40a58e:	(bad)  
  40a58f:	cmp    ebx,ebp
  40a591:	dec    ebx
  40a592:	aam    0xfb
  40a594:	loop   0x40a530
  40a596:	xchg   ebp,eax
  40a597:	clc    
  40a598:	adc    eax,0xd300401d
  40a59d:	aad    0xb2
  40a59f:	retf   
  40a5a0:	pop    ebx
  40a5a1:	push   es
  40a5a2:	sub    BYTE PTR ds:0x690d2ccd,ah
  40a5a8:	bound  ecx,QWORD PTR [ebx+0x29060a4d]
  40a5ae:	idiv   DWORD PTR [edx]
  40a5b0:	ja     0x40a560
  40a5b2:	outs   dx,DWORD PTR ds:[esi]
  40a5b3:	repnz aam 0xd5
  40a5b6:	dec    ecx
  40a5b7:	popf   
  40a5b8:	mov    bh,0xe1
  40a5ba:	push   ds
  40a5bb:	(bad)  
  40a5bc:	fidivr DWORD PTR [ebp+0x4e929b71]
  40a5c2:	or     ebx,eax
  40a5c4:	aas    
  40a5c5:	mov    al,0xb
  40a5c7:	mov    edi,DWORD PTR [ecx]
  40a5c9:	mov    bh,0x60
  40a5cb:	xchg   ebp,eax
  40a5cc:	xchg   edx,eax
  40a5cd:	pop    eax
  40a5ce:	in     eax,dx
  40a5cf:	fnstenv [ecx-0x27]
  40a5d2:	cwde   
  40a5d3:	in     eax,0x7a
  40a5d5:	adc    dl,bh
  40a5d7:	and    cl,dl
  40a5d9:	clc    
  40a5da:	mov    cl,0x1e
  40a5dc:	popf   
  40a5dd:	jno    0x40a61a
  40a5df:	shl    DWORD PTR [eax-0x542f20a],1
  40a5e5:	js     0x40a5e6
  40a5e7:	mov    ah,0xa2
  40a5e9:	imul   esi,DWORD PTR [ebp+0x573ba3],0x34
  40a5f0:	shl    BYTE PTR [eax-0x7e],1
  40a5f3:	mov    ecx,0x5e2e0133
  40a5f8:	dec    DWORD PTR [edi]
  40a5fa:	(bad)  
  40a5fb:	mov    esi,0x2496734
  40a600:	fwait
  40a601:	icebp  
  40a602:	addr16 ds inc ebp
  40a605:	sysexit 
  40a607:	mul    DWORD PTR [edi+0x76439216]
  40a60d:	pushf  
  40a60e:	sar    BYTE PTR [ebp+0x54c96977],1
  40a614:	xor    DWORD PTR [ecx],eax
  40a616:	add    edx,eax
  40a618:	cmp    eax,0xef60027e
  40a61d:	loop   0x40a68e
  40a61f:	mov    DWORD PTR [ebx-0x41ced347],ebx
  40a625:	pop    ss
  40a626:	in     al,dx
  40a627:	hlt    
  40a628:	and    BYTE PTR [esi+0x1f],0x63
  40a62c:	gs enter 0xd48c,0x46
  40a631:	pop    eax
  40a632:	repnz dec ebp
  40a634:	cdq    
  40a635:	xchg   edx,eax
  40a636:	dec    ebx
  40a637:	aad    0x28
  40a639:	push   0x3a
  40a63b:	stos   BYTE PTR es:[edi],al
  40a63c:	mov    eax,ds:0x7d9a5dab
  40a641:	leave  
  40a642:	sub    esi,edi
  40a644:	sbb    BYTE PTR [eax-0x4],dh
  40a647:	add    al,0x68
  40a649:	test   BYTE PTR [edi],0x22
  40a64c:	je     0x40a6c8
  40a64e:	outs   dx,DWORD PTR ds:[esi]
  40a64f:	call   0xabd1:0xc33d6cd3
  40a656:	in     eax,0x99
  40a658:	pushf  
  40a659:	test   ch,dl
  40a65b:	jl     0x40a661
  40a65d:	sub    cl,BYTE PTR [eax]
  40a65f:	lods   al,BYTE PTR ds:[esi]
  40a660:	aas    
  40a661:	pop    es
  40a662:	bound  ecx,QWORD PTR [esi+edx*1]
  40a665:	rcl    DWORD PTR [eax+0x45d0d31b],1
  40a66b:	stc    
  40a66c:	or     DWORD PTR [edx+0x23],esp
  40a66f:	in     al,0x5c
  40a671:	sbb    ebp,DWORD PTR [ecx]
  40a673:	mov    cl,0xbc
  40a675:	lods   al,BYTE PTR ds:[esi]
  40a676:	xor    dl,BYTE PTR [edx+edi*8+0x45]
  40a67a:	mov    ebx,0xa8bdd91
  40a67f:	daa    
  40a680:	mov    ah,0x11
  40a682:	push   cs
  40a683:	push   edx
  40a684:	dec    ecx
  40a685:	mov    esi,?
  40a687:	inc    BYTE PTR [edx-0x56]
  40a68a:	xor    edi,DWORD PTR [edx-0x1e]
  40a68d:	adc    bh,BYTE PTR [edi-0x4c]
  40a690:	mov    WORD PTR [ebx+ecx*2],es
  40a693:	(bad)  
  40a695:	loop   0x40a61b
  40a697:	xchg   edi,eax
  40a698:	adc    eax,0x6e977a56
  40a69d:	ret    0x9497
  40a6a0:	pop    es
  40a6a1:	xor    DWORD PTR [edi-0x50275260],edx
  40a6a7:	cmp    DWORD PTR [ebp+0x335bcf1],edx
  40a6ad:	adc    BYTE PTR [edx+0x49],bh
  40a6b0:	push   0x8
  40a6b2:	or     BYTE PTR [edi],ch
  40a6b4:	pop    edi
  40a6b5:	stos   BYTE PTR es:[edi],al
  40a6b6:	sub    al,0xfc
  40a6b8:	(bad)  
  40a6b9:	pop    ss
  40a6ba:	xchg   esi,eax
  40a6bb:	sbb    ch,0xd6
  40a6be:	pop    ss
  40a6bf:	adc    bh,BYTE PTR [edx]
  40a6c1:	retf   
  40a6c2:	cmc    
  40a6c3:	mov    ebp,0xfb223d54
  40a6c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6c9:	repnz inc ebp
  40a6cb:	cmp    BYTE PTR [edx-0x70],bl
  40a6ce:	dec    esi
  40a6cf:	rol    BYTE PTR [eax+0x43],1
  40a6d2:	outs   dx,BYTE PTR ds:[esi]
  40a6d3:	stos   BYTE PTR es:[edi],al
  40a6d4:	add    DWORD PTR [ecx+0x7127d21d],0x15
  40a6db:	int3   
  40a6dc:	mov    bh,BYTE PTR [ecx-0x1edf2d72]
  40a6e2:	inc    esp
  40a6e3:	jbe    0x40a6a7
  40a6e5:	fpatan 
  40a6e7:	sti    
  40a6e8:	cmp    DWORD PTR [edi+ecx*1-0x79d1c88b],esi
  40a6ef:	fcmove st,st(6)
  40a6f1:	sub    al,0x8
  40a6f3:	mov    DWORD PTR [edi+0xe],edx
  40a6f6:	test   DWORD PTR [eax+0x2],ecx
  40a6f9:	aad    0x55
  40a6fb:	out    dx,al
  40a6fc:	outs   dx,DWORD PTR ds:[esi]
  40a6fd:	out    dx,eax
  40a6fe:	js     0x40a714
  40a700:	fdivrp st(2),st
  40a702:	call   0x7d582aee
  40a707:	call   0x9ca2ce43
  40a70c:	imul   cl
  40a70e:	jns    0x40a6ef
  40a710:	jno    0x40a730
  40a712:	add    DWORD PTR [edi-0x4f],ecx
  40a715:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40a717:	sbb    al,0x56
  40a719:	add    eax,esi
  40a71b:	adc    dl,BYTE PTR [edx+0x5015b32f]
  40a721:	aam    0xc8
  40a723:	jb     0x40a6f3
  40a725:	sbb    ebx,DWORD PTR [esi]
  40a727:	jo     0x40a768
  40a729:	or     ecx,esp
  40a72b:	jae    0x40a6e0
  40a72d:	ds mov cl,0xed
  40a730:	mov    esp,0x8cf7e7e5
  40a735:	test   DWORD PTR [eax+0x5f],ebx
  40a738:	xchg   ecx,eax
  40a739:	push   esi
  40a73a:	cdq    
  40a73b:	sbb    ah,ah
  40a73d:	not    BYTE PTR [eax-0x6b874bd8]
  40a743:	loopne 0x40a7ae
  40a745:	sbb    ebx,ebp
  40a747:	pop    es
  40a748:	jmp    0x8bdc:0x533fd1d4
  40a74f:	push   ecx
  40a750:	xchg   edx,eax
  40a751:	retf   
  40a752:	mov    gs,WORD PTR [eax]
  40a754:	inc    eax
  40a755:	mov    esi,0xc5e1ea85
  40a75a:	jp     0x40a738
  40a75c:	outs   dx,DWORD PTR es:[esi]
  40a75e:	aad    0x55
  40a760:	sti    
  40a761:	outs   dx,BYTE PTR ds:[esi]
  40a762:	icebp  
  40a763:	mov    ah,BYTE PTR [eax+esi*2]
  40a766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a767:	dec    edi
  40a768:	repnz and edx,DWORD PTR [edi-0x1a]
  40a76c:	enter  0x4d96,0x83
  40a770:	sub    eax,0xdfdc5dab
  40a775:	cs jo  0x40a754
  40a778:	sbb    esp,DWORD PTR [edi+0x7b031746]
  40a77e:	rol    BYTE PTR ds:0xe42ea00c,0xf4
  40a785:	stos   DWORD PTR es:[edi],eax
  40a786:	test   eax,0xa80b1293
  40a78b:	jge    0x40a795
  40a78d:	sbb    bh,cl
  40a78f:	pop    edx
  40a790:	push   esp
  40a791:	mul    BYTE PTR [esi+0x33]
  40a794:	jmp    DWORD PTR [edi-0x4c]
  40a797:	iret   
  40a798:	(bad)  
  40a799:	ficomp DWORD PTR [edi-0x54]
  40a79c:	xchg   DWORD PTR [edx+esi*2-0x57eb15b7],ecx
  40a7a3:	ret    
  40a7a4:	aaa    
  40a7a5:	mov    eax,ds:0xafc97474
  40a7aa:	test   ecx,eax
  40a7ac:	call   0xe8d26eb5
  40a7b1:	sub    dl,BYTE PTR [ecx-0x7634bae3]
  40a7b7:	(bad)  
  40a7b8:	inc    esp
  40a7b9:	xor    al,0x9a
  40a7bb:	push   cs
  40a7bc:	out    0xdb,al
  40a7be:	retf   
  40a7bf:	fadd   QWORD PTR [esi+0x10]
  40a7c2:	mov    bl,BYTE PTR [edi-0x11]
  40a7c5:	test   esi,ecx
  40a7c7:	repz add cl,BYTE PTR [eax-0x4e]
  40a7cb:	rcr    BYTE PTR [esi+esi*2+0x5],0x2f
  40a7d0:	adc    ah,BYTE PTR [esi+0x1f]
  40a7d3:	dec    ebx
  40a7d4:	xor    DWORD PTR [edi+0x55],esi
  40a7d7:	je     0x40a767
  40a7d9:	out    dx,eax
  40a7da:	mov    cl,0xcd
  40a7dc:	xor    esp,DWORD PTR [eax]
  40a7de:	leave  
  40a7df:	push   edi
  40a7e0:	(bad)  
  40a7e1:	adc    ah,al
  40a7e3:	xchg   edx,eax
  40a7e4:	push   esp
  40a7e5:	in     eax,0xf1
  40a7e7:	rcl    DWORD PTR [ebp-0x1ade6fa0],cl
  40a7ed:	and    al,0xdf
  40a7ef:	jl     0x40a86a
  40a7f1:	fidiv  DWORD PTR [edi-0x2b]
  40a7f4:	jg     0x40a868
  40a7f6:	pop    esp
  40a7f7:	add    al,0x37
  40a7f9:	in     eax,dx
  40a7fa:	cld    
  40a7fb:	rcl    BYTE PTR [ebp+0x11],1
  40a7fe:	sar    BYTE PTR [eax-0x3c8d775b],cl
  40a804:	out    0xb9,al
  40a806:	dec    ebx
  40a807:	shr    DWORD PTR [ebx],1
  40a809:	(bad)  
  40a80b:	sahf   
  40a80c:	(bad)  [ecx+edx*4]
  40a80f:	adc    eax,0x25f5c63c
  40a814:	inc    esi
  40a815:	jbe    0x40a827
  40a817:	push   ds
  40a818:	icebp  
  40a819:	pop    es
  40a81a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a81b:	rcr    bh,cl
  40a81d:	pop    eax
  40a81e:	neg    DWORD PTR [eax-0x53]
  40a821:	mov    esi,0xe2405db8
  40a826:	sbb    eax,0x2d10c1fe
  40a82b:	pop    ebp
  40a82c:	dec    edi
  40a82d:	ror    DWORD PTR [eax+0x6da5ec13],0x5d
  40a834:	shl    esi,cl
  40a836:	fnstenv [edi+0x2]
  40a839:	mov    dl,BYTE PTR [edx-0x4ae84892]
  40a83f:	aas    
  40a840:	mul    esi
  40a842:	arpl   WORD PTR [edi],cx
  40a844:	out    0x57,al
  40a846:	or     bh,cl
  40a848:	test   DWORD PTR [eax+0x3564c2df],eax
  40a84e:	(bad)  
  40a84f:	cs (bad) 
  40a851:	ror    BYTE PTR [esi],0xae
  40a854:	xlat   BYTE PTR ds:[ebx]
  40a855:	retf   
  40a856:	xchg   esi,eax
  40a857:	sahf   
  40a858:	or     eax,0x455728c8
  40a85d:	mov    dl,0x36
  40a85f:	push   esi
  40a860:	mov    eax,0x9d759e8a
  40a865:	mov    es,WORD PTR cs:[eax+ecx*4+0x78bdbd5f]
  40a86d:	or     ch,BYTE PTR [edx+0x35a0097b]
  40a873:	inc    ebp
  40a874:	xchg   esi,eax
  40a875:	in     al,0x54
  40a877:	lahf   
  40a878:	(bad)  
  40a879:	hlt    
  40a87a:	jns    0x40a818
  40a87c:	jl     0x40a88a
  40a87e:	cmp    eax,0x909bd215
  40a883:	push   0xf5ddaa17
  40a888:	loop   0x40a909
  40a88a:	call   0xcdb34c87
  40a88f:	fwait
  40a890:	inc    edi
  40a891:	in     eax,dx
  40a892:	rcr    bl,1
  40a894:	mov    al,ds:0xae4ec425
  40a899:	repnz test BYTE PTR [edi-0x134cd4d],0x22
  40a8a1:	xor    BYTE PTR [edx],dh
  40a8a3:	rol    al,1
  40a8a5:	repz jmp 0xba03:0x911e611e
  40a8ad:	inc    edi
  40a8ae:	fucomp st(7)
  40a8b0:	cs clc 
  40a8b2:	(bad)  
  40a8b4:	xor    esi,ebx
  40a8b6:	mov    ah,0x89
  40a8b8:	int3   
  40a8b9:	sub    eax,0x2315cd43
  40a8be:	leave  
  40a8bf:	inc    si
  40a8c1:	pushf  
  40a8c2:	rcl    DWORD PTR [ecx-0x28],1
  40a8c5:	pop    ds
  40a8c6:	jge    0x40a862
  40a8c8:	aas    
  40a8c9:	ds dec ebx
  40a8cb:	push   ecx
  40a8cc:	outs   dx,DWORD PTR ds:[esi]
  40a8cd:	push   esi
  40a8ce:	aaa    
  40a8cf:	fst    QWORD PTR [ebx+0x78]
  40a8d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8d3:	ret    0xa944
  40a8d6:	push   eax
  40a8d7:	fdivr  DWORD PTR ds:0xe0bf7d61
  40a8dd:	retf   
  40a8de:	mov    ebx,0xf39f1bac
  40a8e3:	sbb    bl,BYTE PTR [eax+eax*8-0x69]
  40a8e7:	push   es
  40a8e8:	in     al,dx
  40a8e9:	fist   DWORD PTR [ebx-0x3b]
  40a8ec:	and    bh,BYTE PTR [ecx-0x6d]
  40a8ef:	inc    ebx
  40a8f0:	int3   
  40a8f1:	popa   
  40a8f2:	inc    esi
  40a8f3:	shl    ebx,cl
  40a8f5:	pop    ebp
  40a8f6:	addr16 cmc 
  40a8f8:	or     eax,0x6c8888a9
  40a8fd:	pop    eax
  40a8fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8ff:	xor    eax,eax
  40a901:	push   ds
  40a902:	test   al,0xd6
  40a904:	pop    edx
  40a905:	ret    0x979b
  40a908:	push   ebp
  40a909:	icebp  
  40a90a:	imul   esp,DWORD PTR [ebx+esi*8+0x5a879e29],0xb7d3701c
  40a915:	mov    eax,ds:0x8253f15e
  40a91a:	xchg   ebx,eax
  40a91b:	pop    esi
  40a91c:	jmp    0xdc80:0x40650fa1
  40a923:	sbb    DWORD PTR [eax+0x47eac48b],esp
  40a929:	dec    esp
  40a92a:	jp     0x40a902
  40a92c:	xchg   DWORD PTR cs:[esp+ecx*4],eax
  40a930:	sbb    al,0x9e
  40a932:	sbb    ah,ch
  40a934:	and    eax,0xf4641101
  40a939:	mov    eax,0x12a3b214
  40a93e:	jge    0x40a8e6
  40a940:	outs   dx,BYTE PTR ds:[esi]
  40a941:	(bad)  
  40a942:	ret    
  40a943:	cmp    cl,BYTE PTR [edx+0x63d882dc]
  40a949:	icebp  
  40a94a:	xor    DWORD PTR [edx],ecx
  40a94c:	stos   BYTE PTR es:[edi],al
  40a94d:	push   0xe92600de
  40a952:	adc    al,0x75
  40a954:	out    0x90,eax
  40a956:	mov    bp,0xea7b
  40a95a:	pop    ecx
  40a95b:	mov    DWORD PTR [eax+0x4775c3dd],esi
  40a961:	repnz repz sti 
  40a964:	hlt    
  40a965:	repz and BYTE PTR [ecx-0x1bea3d7f],cl
  40a96c:	fwait
  40a96d:	sub    eax,0xc27c7e6f
  40a972:	adc    esi,esi
  40a974:	adc    DWORD PTR [esi-0x29b2d97f],ecx
  40a97a:	enter  0xdce1,0xa4
  40a97e:	push   esp
  40a97f:	nop
  40a980:	inc    esp
  40a981:	popa   
  40a982:	mov    al,ds:0x8410a78
  40a987:	xchg   ecx,eax
  40a988:	jno    0x40a969
  40a98a:	daa    
  40a98b:	adc    al,0x64
  40a98d:	mov    ds:0xd2da91e4,al
  40a992:	fucomp st(0)
  40a994:	pusha  
  40a995:	shl    BYTE PTR [esi+0x164a47cc],cl
  40a99b:	cwde   
  40a99c:	call   0xb566:0x9dcd6660
  40a9a3:	es scas ax,WORD PTR es:[edi]
  40a9a6:	or     ah,BYTE PTR [esi]
  40a9a8:	mov    esp,0xe4c2a0c6
  40a9ad:	cmp    al,0xf4
  40a9af:	sti    
  40a9b0:	cdq    
  40a9b1:	inc    eax
  40a9b2:	inc    esi
  40a9b3:	and    DWORD PTR [ebx],esp
  40a9b5:	clc    
  40a9b6:	test   DWORD PTR [esi],eax
  40a9b8:	xchg   bx,ax
  40a9ba:	pop    edx
  40a9bb:	add    edi,eax
  40a9bd:	push   ds
  40a9be:	repnz aaa 
  40a9c0:	xor    eax,0x50837637
  40a9c5:	popa   
  40a9c6:	sub    ebx,DWORD PTR ds:0xa8b6eb8e
  40a9cc:	shr    BYTE PTR [eax+ebx*4-0x7a],0xb2
  40a9d1:	dec    esi
  40a9d2:	cmp    al,0xa0
  40a9d4:	add    cl,BYTE PTR [ebx+0x79437636]
  40a9da:	jmp    0x41dec12c
  40a9df:	jb     0x40aa11
  40a9e1:	or     esp,0xffffff8d
  40a9e4:	cwde   
  40a9e5:	mov    ebx,0x57b238ff
  40a9ea:	jmp    0x40a9ff
  40a9ec:	scas   eax,DWORD PTR es:[edi]
  40a9ed:	mov    ch,0x1c
  40a9ef:	jp     0x40a9c4
  40a9f1:	sbb    al,0xcf
  40a9f3:	fsub   DWORD PTR [edi-0x1963f1b8]
  40a9f9:	dec    ecx
  40a9fa:	aam    0x69
  40a9fc:	out    dx,al
  40a9fd:	sbb    dh,cl
  40a9ff:	jge    0x40aa27
  40aa01:	sbb    eax,DWORD PTR [ecx+0x759beda]
  40aa07:	add    DWORD PTR [ebx+ecx*8+0x2531cfcd],esp
  40aa0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa0f:	sub    dl,BYTE PTR [eax]
  40aa11:	(bad)  
  40aa12:	mov    BYTE PTR [ecx-0x464ca3f3],0xee
  40aa19:	sub    cl,BYTE PTR [ebx-0x36]
  40aa1c:	mov    ah,0xd1
  40aa1e:	pop    ss
  40aa1f:	data16 jb 0x40a9b2
  40aa22:	adc    ebx,ebp
  40aa24:	shl    BYTE PTR [edi],1
  40aa26:	mov    dl,0x41
  40aa28:	push   esp
  40aa29:	aad    0xcb
  40aa2b:	pop    edx
  40aa2c:	adc    BYTE PTR [esi+0x6a],dh
  40aa2f:	inc    esi
  40aa30:	addr16 dec esi
  40aa32:	ss jmp 0xc2c1:0x3850d901
  40aa3a:	inc    ebx
  40aa3b:	mov    ebx,0xa2474a57
  40aa40:	in     eax,dx
  40aa41:	sbb    DWORD PTR [edi-0x38cc781c],eax
  40aa47:	dec    ebp
  40aa48:	dec    esi
  40aa49:	mov    BYTE PTR [esi],dl
  40aa4b:	test   WORD PTR [ecx+eax*1+0x58],cx
  40aa50:	push   cs
  40aa51:	mov    edx,0x1eddc3ff
  40aa56:	and    dl,BYTE PTR [eax+0x40]
  40aa59:	jle    0x40aa28
  40aa5b:	mov    bl,0x68
  40aa5d:	fmul   QWORD PTR [ebp-0xa]
  40aa60:	bound  ecx,QWORD PTR [edi+0x5c76d9f1]
  40aa66:	add    al,0x0
  40aa68:	sahf   
  40aa69:	xor    BYTE PTR [edi+0x32],0x91
  40aa6d:	cs add ch,bl
  40aa70:	inc    esp
  40aa71:	outs   dx,BYTE PTR ds:[esi]
  40aa72:	std    
  40aa73:	sub    eax,0x4328fa3d
  40aa78:	idiv   al
  40aa7a:	and    eax,0xbeec5b2b
  40aa7f:	pop    ebx
  40aa80:	or     eax,0x83974da0
  40aa85:	or     DWORD PTR [ebx+ecx*1+0x7],ecx
  40aa89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa8a:	call   0xb73c:0x1bb38a46
  40aa91:	mov    ecx,0xe8672b56
  40aa96:	xchg   esp,eax
  40aa97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa98:	(bad)  
  40aa99:	jg     0x40aac2
  40aa9b:	(bad)  
  40aa9c:	or     BYTE PTR ds:0xcfacc2ba,cl
  40aaa2:	sbb    DWORD PTR cs:[ecx],esi
  40aaa5:	mov    ebp,0x4d16d88e
  40aaaa:	xlat   BYTE PTR ds:[ebx]
  40aaab:	cs sbb bh,ch
  40aaae:	xchg   BYTE PTR [esi+0x4800b2d5],cl
  40aab4:	ficomp DWORD PTR [eax]
  40aab6:	mov    BYTE PTR [edi-0x5b],0xea
  40aaba:	xor    al,0xc7
  40aabc:	xchg   ebx,eax
  40aabd:	ret    0xb88c
  40aac0:	xor    bl,bl
  40aac2:	pop    edx
  40aac3:	xor    DWORD PTR [edx-0x42],esi
  40aac6:	push   0x2c4c7e8
  40aacb:	mov    ebx,0x57065667
  40aad0:	mov    cl,0x2e
  40aad2:	mov    al,0x12
  40aad4:	int    0x5a
  40aad6:	mov    al,0x19
  40aad8:	jle    0x40aad8
  40aada:	jno    0x40ab16
  40aadc:	adc    edx,ebp
  40aade:	pop    ss
  40aadf:	or     DWORD PTR [ebp*2-0x650ff509],ecx
  40aae6:	inc    ebx
  40aae7:	fisttp WORD PTR [edx+esi*1+0x795c0777]
  40aaee:	adc    bl,BYTE PTR [edi+0x16]
  40aaf1:	or     ecx,0xffffffa8
  40aaf4:	mov    fs,WORD PTR [edx+0x49]
  40aaf7:	xchg   ebp,eax
  40aaf8:	dec    edx
  40aaf9:	pop    esp
  40aafa:	xchg   esi,eax
  40aafb:	test   eax,0x1f717a10
  40ab00:	ins    DWORD PTR es:[edi],dx
  40ab01:	push   edx
  40ab02:	inc    esp
  40ab03:	mov    ebp,0xc1f9eed7
  40ab08:	inc    ebp
  40ab09:	scas   al,BYTE PTR es:[edi]
  40ab0a:	xlat   BYTE PTR ds:[ebx]
  40ab0b:	nop
  40ab0c:	push   esp
  40ab0d:	retf   0x7c54
  40ab10:	in     eax,0x9a
  40ab12:	lods   al,BYTE PTR ds:[esi]
  40ab13:	repnz imul eax,DWORD PTR [edx+0x371035f],0xd3f9fc59
  40ab1e:	lds    eax,FWORD PTR [ebx+0x47]
  40ab21:	pop    eax
  40ab22:	je     0x40ab0f
  40ab24:	(bad)  
  40ab25:	js     0x40ab37
  40ab27:	cdq    
  40ab28:	mov    es,WORD PTR [esi+esi*2-0x72]
  40ab2c:	add    eax,0xbe6aa3d5
  40ab31:	jo     0x40aaf4
  40ab33:	mov    edi,?
  40ab35:	inc    esi
  40ab36:	dec    esi
  40ab37:	push   ds
  40ab38:	jbe    0x40aaf8
  40ab3a:	std    
  40ab3b:	dec    eax
  40ab3c:	hlt    
  40ab3d:	add    DWORD PTR [ecx],0xa182d43d
  40ab43:	fisubr WORD PTR [ebx-0x60]
  40ab46:	add    BYTE PTR [ebp+0x62],0x42
  40ab4a:	dec    BYTE PTR [ebx+0x8]
  40ab4d:	inc    esi
  40ab4e:	(bad)  
  40ab50:	test   eax,0xff81c56
  40ab55:	lock jno 0x40aafe
  40ab58:	retf   
  40ab59:	and    DWORD PTR [edi],edi
  40ab5b:	aam    0x90
  40ab5d:	loop   0x40aaf3
  40ab5f:	push   esp
  40ab60:	add    edx,ebp
  40ab62:	sti    
  40ab63:	fmul   st(0),st
  40ab65:	iret   
  40ab66:	pop    ds
  40ab67:	outs   dx,DWORD PTR ds:[esi]
  40ab68:	mov    WORD PTR [esi-0x33],?
  40ab6b:	aad    0x3
  40ab6d:	mov    esp,0xc15d01b9
  40ab72:	mov    ds:0x9694d13a,al
  40ab77:	jae    0x40abb8
  40ab79:	pop    ecx
  40ab7a:	stc    
  40ab7b:	jne    0x40abbe
  40ab7d:	dec    esi
  40ab7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab7f:	es dec edi
  40ab81:	jb     0x40abf3
  40ab83:	sbb    al,0x46
  40ab85:	sbb    ah,ah
  40ab87:	and    BYTE PTR [eax],bh
  40ab89:	dec    esp
  40ab8a:	sbb    edi,eax
  40ab8c:	xor    ch,BYTE PTR [edi+0x7e53bdcc]
  40ab92:	sbb    BYTE PTR [esp+edx*8+0x6f],dh
  40ab96:	pop    ebx
  40ab98:	out    0x41,al
  40ab9a:	and    ebp,DWORD PTR [eax-0x56]
  40ab9d:	jle    0x40abc2
  40ab9f:	push   esp
  40aba0:	push   cs
  40aba1:	inc    esp
  40aba2:	mov    ds:0xce518608,eax
  40aba7:	shr    ecx,0xd4
  40abaa:	hlt    
  40abab:	sti    
  40abac:	int3   
  40abad:	jecxz  0x40ab74
  40abaf:	jecxz  0x40ab44
  40abb1:	fild   WORD PTR [edi]
  40abb3:	call   0xaf4a:0xb70c0ca4
  40abba:	push   ebx
  40abbb:	mov    ah,BYTE PTR [ecx]
  40abbd:	jnp    0x40ac3c
  40abbf:	es repnz xor bl,al
  40abc3:	ret    
  40abc4:	int3   
  40abc5:	add    eax,0xec08b36c
  40abca:	and    dh,BYTE PTR [eax-0x4a03bf07]
  40abd0:	ror    ah,0x56
  40abd3:	hlt    
  40abd4:	mov    al,ds:0xb3bddccb
  40abd9:	mov    edx,DWORD PTR [edx-0x7f]
  40abdc:	leave  
  40abdd:	stos   DWORD PTR es:[edi],eax
  40abde:	jbe    0x40ac4e
  40abe0:	and    ebx,edx
  40abe2:	into   
  40abe3:	xlat   BYTE PTR ds:[ebx]
  40abe4:	mov    al,ds:0xfd923d43
  40abe9:	and    ecx,esi
  40abeb:	gs mov dl,0x91
  40abee:	loopne 0x40abac
  40abf0:	nop
  40abf1:	jp     0x40ac14
  40abf3:	pop    ecx
  40abf4:	sbb    al,0x11
  40abf6:	jno    0x40ab97
  40abf8:	mov    ch,0x57
  40abfa:	mov    al,0xa0
  40abfc:	inc    ebp
  40abfd:	je     0x40ab93
  40abff:	inc    ebx
  40ac00:	push   es
  40ac01:	inc    esp
  40ac02:	rol    ecx,cl
  40ac04:	fild   DWORD PTR [ecx]
  40ac06:	retf   0x9cfd
  40ac09:	inc    ecx
  40ac0a:	ins    BYTE PTR es:[edi],dx
  40ac0b:	fstp   QWORD PTR [esi+0x4b]
  40ac0e:	sar    DWORD PTR [eax],1
  40ac10:	jo     0x40ac43
  40ac12:	and    BYTE PTR [esi],0xdd
  40ac15:	mov    ecx,0xcbd6c5a5
  40ac1a:	cmp    eax,esp
  40ac1c:	call   0xfbb74293
  40ac21:	xchg   ecx,eax
  40ac22:	jnp    0x40ac33
  40ac24:	mov    esp,0xa967b8d0
  40ac29:	aad    0x8a
  40ac2b:	rcl    bl,0xda
  40ac2e:	ins    BYTE PTR es:[edi],dx
  40ac2f:	push   ebx
  40ac30:	jecxz  0x40abd6
  40ac32:	xchg   edx,eax
  40ac33:	xor    BYTE PTR [ecx-0x1066d753],al
  40ac39:	stc    
  40ac3a:	sbb    dh,al
  40ac3c:	mov    al,0xdc
  40ac3e:	loop   0x40acbe
  40ac40:	add    eax,0x3349f872
  40ac45:	push   edx
  40ac46:	sub    DWORD PTR [ecx-0x5e1deeb4],esp
  40ac4c:	push   ecx
  40ac4d:	cmp    cl,BYTE PTR [ecx+0x5a]
  40ac50:	inc    edi
  40ac51:	cmp    ch,BYTE PTR [esi+ebx*8]
  40ac54:	mov    DWORD PTR [esp+ebp*4+0x4c31c582],ebp
  40ac5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac5c:	popa   
  40ac5d:	and    BYTE PTR [ebp+0x16452a6],ah
  40ac63:	pop    ss
  40ac64:	inc    ebp
  40ac65:	sub    DWORD PTR ds:0x35e5d496,eax
  40ac6b:	(bad)  
  40ac6c:	out    dx,eax
  40ac6d:	mov    ebp,0x573ef9af
  40ac72:	adc    al,0x98
  40ac74:	xor    ch,BYTE PTR [ecx+edi*2]
  40ac77:	idiv   DWORD PTR [ebx+0x42c8e02a]
  40ac7d:	push   ebx
  40ac7e:	push   ebx
  40ac7f:	jne    0x40ac03
  40ac81:	jp     0x40ac2a
  40ac83:	sub    BYTE PTR [edx-0x6a4657e9],cl
  40ac89:	loopne 0x40acca
  40ac8b:	jg     0x40ac10
  40ac8d:	or     BYTE PTR [ebx],bh
  40ac8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac90:	sbb    bl,BYTE PTR [eax]
  40ac92:	cld    
  40ac93:	dec    edx
  40ac94:	cs retf 0xc686
  40ac98:	fcmove st,st(7)
  40ac9a:	inc    eax
  40ac9b:	enter  0xf3b3,0xc1
  40ac9f:	mov    eax,ds:0x8bdfcd34
  40aca4:	arpl   WORD PTR [edx+0x67],cx
  40aca7:	sub    esi,esp
  40aca9:	nop
  40acaa:	xor    BYTE PTR [ebx+0x210bbfb9],0xf1
  40acb1:	ds out 0x80,al
  40acb4:	jb     0x40acf1
  40acb6:	push   ebx
  40acb7:	or     DWORD PTR [ebx+0x5c75720b],eax
  40acbd:	test   DWORD PTR [edx],edx
  40acbf:	jle    0x40ac83
  40acc1:	lods   al,BYTE PTR ds:[esi]
  40acc2:	mov    edx,0xd32b11b6
  40acc7:	addr16 and bh,bl
  40acca:	add    al,0xb5
  40accc:	bound  ecx,QWORD PTR [eax-0x3d]
  40accf:	dec    ebx
  40acd0:	jnp    0x40aca7
  40acd2:	ins    DWORD PTR es:[edi],dx
  40acd3:	dec    ebx
  40acd4:	mov    ds:0xbcb8df42,al
  40acd9:	popf   
  40acda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acdb:	pop    es
  40acdc:	pop    edi
  40acdd:	xor    BYTE PTR [edx+0x1d],cl
  40ace0:	invd   
  40ace2:	(bad)  
  40ace3:	xlat   BYTE PTR ds:[ebx]
  40ace4:	jbe    0x40acf6
  40ace6:	leave  
  40ace7:	test   ch,0x1d
  40acea:	and    BYTE PTR [esi],0xf5
  40aced:	fcmovnbe st,st(3)
  40acef:	add    al,0x92
  40acf1:	xchg   esp,eax
  40acf2:	mov    ebx,DWORD PTR [eax-0x33]
  40acf5:	jae    0x40ac7c
  40acf7:	retf   0xbf80
  40acfa:	adc    eax,0x459d503a
  40acff:	js     0x40ad00
  40ad01:	push   ss
  40ad02:	adc    al,BYTE PTR [ebx-0x742e42ff]
  40ad08:	vandps xmm5,xmm7,XMMWORD PTR [edx-0x69]
  40ad0e:	sbb    BYTE PTR [edx+0x261b35f5],al
  40ad14:	xor    BYTE PTR [edi-0x75384fa9],cl
  40ad1a:	mov    ebp,DWORD PTR [edi]
  40ad1c:	and    ebx,ecx
  40ad1e:	out    dx,eax
  40ad1f:	inc    esp
  40ad20:	ja     0x40ad3d
  40ad22:	xlat   BYTE PTR ds:[ebx]
  40ad23:	cli    
  40ad24:	in     eax,dx
  40ad25:	mov    DWORD PTR [esi],ebp
  40ad27:	aaa    
  40ad28:	pop    ebp
  40ad29:	cmp    edi,eax
  40ad2b:	lea    edi,[edx+eiz*2-0x5cb02e25]
  40ad32:	push   0x760dfc9b
  40ad37:	dec    edx
  40ad38:	pop    ss
  40ad39:	add    bl,dl
  40ad3b:	fsub   DWORD PTR [edi]
  40ad3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad3e:	xchg   edx,eax
  40ad3f:	sbb    al,0x2c
  40ad41:	adc    bh,al
  40ad43:	pop    eax
  40ad44:	push   ss
  40ad45:	sub    al,0x29
  40ad47:	dec    ebx
  40ad48:	push   eax
  40ad49:	jmp    0x40ad58
  40ad4b:	or     DWORD PTR [eax+0xf],edi
  40ad4e:	data16 sar bh,1
  40ad51:	pop    eax
  40ad52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad53:	mov    al,ds:0x7dab6a72
  40ad58:	popa   
  40ad59:	jbe    0x40ad5b
  40ad5b:	jecxz  0x40add2
  40ad5d:	inc    esi
  40ad5e:	idiv   ch
  40ad60:	sbb    dh,bh
  40ad62:	pop    ebx
  40ad63:	aad    0xfe
  40ad65:	stc    
  40ad66:	icebp  
  40ad67:	sbb    BYTE PTR [ebx+edi*4],bh
  40ad6a:	mov    esp,0xf10fe090
  40ad6f:	push   ds
  40ad70:	data16 (bad) 
  40ad73:	mov    bl,ah
  40ad75:	xchg   ecx,eax
  40ad76:	and    al,0xbe
  40ad79:	mov    ch,0x56
  40ad7b:	push   cs
  40ad7c:	pop    ebx
  40ad7d:	sbb    al,BYTE PTR [edx]
  40ad7f:	rcl    BYTE PTR [esi+0x2bdfe483],cl
  40ad85:	and    DWORD PTR [edx+0x11],0x72
  40ad89:	mov    edi,DWORD PTR ds:0x5d6f8218
  40ad8f:	loopne 0x40ad6a
  40ad91:	outs   dx,BYTE PTR ds:[esi]
  40ad92:	cmp    al,0x9
  40ad94:	mov    WORD PTR [eax+0x6b],?
  40ad97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad98:	test   al,0x91
  40ad9a:	arpl   WORD PTR [ecx-0x3bc7099b],cx
  40ada0:	jl     0x40ad24
  40ada2:	dec    eax
  40ada3:	pop    esi
  40ada4:	push   eax
  40ada5:	sti    
  40ada6:	aas    
  40ada7:	out    0x82,eax
  40ada9:	(bad)  [edi+0x256fc317]
  40adaf:	repz push ebp
  40adb1:	popa   
  40adb2:	fild   DWORD PTR [esi]
  40adb4:	jmp    0x40adc7
  40adb6:	or     eax,0x7ec2a857
  40adbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adbc:	add    eax,0xb17266fc
  40adc1:	or     DWORD PTR [esi],ebx
  40adc3:	pop    esp
  40adc4:	sbb    DWORD PTR [esi],0x8a34d7cd
  40adca:	in     al,0x3a
  40adcc:	jae    0x40ad8f
  40adce:	popa   
  40adcf:	adc    BYTE PTR [eax-0x60ae2133],ch
  40add5:	jns    0x40ad9b
  40add7:	sub    DWORD PTR [edx+0x4d],0x7a
  40addb:	xor    DWORD PTR [eax+0x1b],edx
  40adde:	cdq    
  40addf:	and    al,dh
  40ade1:	sbb    cl,BYTE PTR [ebx-0xd]
  40ade4:	outs   dx,BYTE PTR ds:[esi]
  40ade5:	std    
  40ade6:	cmp    DWORD PTR [esp+eax*8-0x18],edi
  40adea:	rol    esp,cl
  40adec:	inc    ecx
  40aded:	or     al,0xf
  40adef:	fisubr DWORD PTR [ebp+0x64ce205e]
  40adf5:	(bad)  
  40adf6:	xrelease mov BYTE PTR ds:[esi+0x11],bh
  40adfb:	ins    BYTE PTR es:[edi],dx
  40adfc:	je     0x40adfd
  40adfe:	stos   DWORD PTR es:[edi],eax
  40adff:	or     BYTE PTR [esi],ch
  40ae01:	or     bl,BYTE PTR [ecx+0x325b47a9]
  40ae07:	or     al,0x74
  40ae09:	fcomp  DWORD PTR [ebx]
  40ae0b:	mov    bh,0x69
  40ae0d:	jecxz  0x40ae8e
  40ae0f:	(bad)  
  40ae11:	sub    al,0xe2
  40ae13:	inc    edi
  40ae14:	test   BYTE PTR ds:0x1bfa48ee,0xb3
  40ae1b:	repnz add DWORD PTR [edi+edi*1+0x6c],ecx
  40ae20:	pushf  
  40ae21:	xchg   dl,bh
  40ae23:	adc    DWORD PTR [edi+0x35493124],ecx
  40ae29:	repnz xlat BYTE PTR ds:[ebx]
  40ae2b:	cmp    edx,DWORD PTR [ebx+0x27]
  40ae2e:	jmp    0x40ae9d
  40ae30:	mov    ecx,0x16af182f
  40ae35:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40ae37:	or     al,BYTE PTR [edi+0x64]
  40ae3a:	(bad)  
  40ae3b:	or     eax,DWORD PTR [ecx]
  40ae3d:	xor    al,0xd9
  40ae3f:	adc    eax,0x62c4ced8
  40ae44:	or     al,0xd6
  40ae46:	mov    edi,0x10de8bae
  40ae4b:	push   edx
  40ae4c:	arpl   WORD PTR [edx-0x3f],si
  40ae4f:	sub    ch,0xcb
  40ae52:	lahf   
  40ae53:	add    dl,BYTE PTR [ebx+eax*1]
  40ae56:	inc    ebp
  40ae57:	jbe    0x40ae08
  40ae59:	(bad)  
  40ae5a:	aad    0xf7
  40ae5c:	(bad)  
  40ae5d:	push   0x55
  40ae5f:	fdivr  DWORD PTR [edx+0xf]
  40ae62:	in     eax,0x85
  40ae64:	and    bl,BYTE PTR [esp+eiz*4+0x60]
  40ae68:	out    0xf9,al
  40ae6a:	in     eax,dx
  40ae6b:	fwait
  40ae6c:	sbb    al,0x6b
  40ae6e:	je     0x40aedf
  40ae70:	or     eax,0x428cc7b3
  40ae75:	sub    eax,0xe1160c8a
  40ae7a:	mov    bl,0x21
  40ae7c:	rol    DWORD PTR [ecx-0x4],cl
  40ae7f:	sar    DWORD PTR [ebx],1
  40ae81:	xchg   esi,eax
  40ae82:	icebp  
  40ae83:	loopne 0x40ae73
  40ae85:	sbb    al,0x36
  40ae87:	les    edi,FWORD PTR [edx]
  40ae89:	test   DWORD PTR [eax-0x7a7a1be],esi
  40ae8f:	inc    ecx
  40ae90:	ins    BYTE PTR es:[edi],dx
  40ae91:	clc    
  40ae92:	mov    eax,0x86bdfd68
  40ae97:	mov    dh,cl
  40ae99:	ins    BYTE PTR es:[edi],dx
  40ae9a:	dec    esp
  40ae9b:	out    dx,eax
  40ae9c:	xor    al,0xdb
  40ae9e:	mov    dl,0xc2
  40aea0:	sbb    ebx,DWORD PTR [ebp-0x52]
  40aea3:	shl    DWORD PTR [edx],0xc7
  40aea6:	mul    DWORD PTR [eax+0x70e48e82]
  40aeac:	adc    ch,BYTE PTR [edi+ebx*8-0x50a35be4]
  40aeb3:	(bad)  
  40aeb4:	cmp    al,BYTE PTR [ebx]
  40aeb6:	sbb    ebx,DWORD PTR [eax-0x68489ab5]
  40aebc:	loopne 0x40ae4f
  40aebe:	sbb    al,dl
  40aec0:	enter  0x6fc1,0x1f
  40aec4:	push   ss
  40aec5:	push   es
  40aec6:	jle    0x40af1d
  40aec8:	mov    ds:0x9765d41d,al
  40aecd:	(bad)  
  40aece:	fiadd  WORD PTR [edi-0x3f]
  40aed1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aed2:	push   0x4f
  40aed4:	mov    ah,0x3c
  40aed6:	push   es
  40aed7:	mov    edi,0xefeabd27
  40aedc:	pop    esp
  40aedd:	int    0x99
  40aedf:	retf   0xca18
  40aee2:	aas    
  40aee3:	aam    0x12
  40aee5:	and    DWORD PTR gs:[ebx],edi
  40aee8:	ss retf 
  40aeea:	into   
  40aeeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aeec:	popa   
  40aeed:	push   edx
  40aeee:	rcr    dh,cl
  40aef0:	mov    esi,0x601a14fb
  40aef5:	and    eax,0xdd7cb395
  40aefa:	lahf   
  40aefb:	add    DWORD PTR [ecx+edx*8],ebx
  40aefe:	add    DWORD PTR [esp+eiz*8-0x40aaf00f],ebp
  40af05:	aas    
  40af06:	mov    eax,0x83fed860
  40af0b:	aaa    
  40af0c:	mov    esp,0x841e638e
  40af11:	std    
  40af12:	(bad)  
  40af13:	mov    dl,0x61
  40af15:	fisub  WORD PTR [eax+ebp*2]
  40af18:	xchg   esi,eax
  40af19:	test   ecx,edi
  40af1b:	xlat   BYTE PTR ds:[ebx]
  40af1c:	mov    dh,0x7c
  40af1e:	stc    
  40af1f:	push   0x4
  40af21:	dec    edi
  40af22:	lds    eax,FWORD PTR [esi-0x6f2c275e]
  40af28:	xchg   edi,eax
  40af29:	inc    ebp
  40af2a:	(bad)  [esi-0x3055c21b]
  40af30:	sub    esi,DWORD PTR [eax+ebx*4]
  40af33:	(bad)  
  40af34:	and    cl,BYTE PTR [ecx-0x7b]
  40af37:	pop    ebp
  40af38:	je     0x40af6d
  40af3a:	pop    ebx
  40af3b:	sbb    bl,BYTE PTR [ebx+edi*1-0x7cba2bf]
  40af42:	imul   DWORD PTR [edx+0x1a779d67]
  40af48:	push   ebp
  40af49:	sbb    eax,esp
  40af4b:	pop    edi
  40af4c:	fwait
  40af4d:	in     eax,dx
  40af4e:	test   al,0xd7
  40af50:	push   0x60f8eb8b
  40af55:	xchg   ecx,eax
  40af56:	mov    edi,DWORD PTR [edi+eiz*1-0x1da2dbbc]
  40af5d:	repnz stos BYTE PTR es:[edi],al
  40af5f:	sbb    BYTE PTR [edx+0x76],dl
  40af62:	add    edx,edx
  40af64:	clc    
  40af65:	lods   eax,DWORD PTR ds:[esi]
  40af66:	mov    cl,0x18
  40af68:	mov    gs,WORD PTR [esi]
  40af6a:	ins    BYTE PTR es:[edi],dx
  40af6b:	call   0xfde48850
  40af70:	push   esp
  40af71:	fwait
  40af72:	adc    edi,DWORD PTR [ebx+0x5821243a]
  40af78:	es pop ds
  40af7a:	leave  
  40af7b:	xor    eax,0x3963cb74
  40af80:	dec    ebx
  40af81:	je     0x40afa9
  40af83:	gs and eax,0x650f6640
  40af89:	jns    0x40afbd
  40af8b:	xor    DWORD PTR [eax+0x55],ebp
  40af8e:	xchg   edx,eax
  40af8f:	xchg   ebx,eax
  40af90:	mov    al,0x77
  40af92:	push   cs
  40af93:	call   esp
  40af95:	xor    eax,0xb2bfab45
  40af9a:	mov    eax,DWORD PTR [edx]
  40af9c:	xor    dh,BYTE PTR [esi+0x225f6d53]
  40afa2:	add    edx,DWORD PTR [edx+esi*1-0xc]
  40afa6:	mov    esi,0xb90583e7
  40afab:	mov    ds:0x797a0f85,al
  40afb0:	or     DWORD PTR [edx],ebx
  40afb2:	and    ecx,edi
  40afb4:	shr    DWORD PTR [edx+esi*2-0x41],1
  40afb8:	xor    DWORD PTR [ebx+ebp*1-0x17],eax
  40afbc:	mov    ds:0xd26c39ae,eax
  40afc1:	dec    esi
  40afc2:	scas   eax,DWORD PTR es:[edi]
  40afc3:	mov    al,ds:0x8f10949f
  40afc8:	dec    edx
  40afc9:	neg    DWORD PTR [edx-0x80]
  40afcc:	xor    DWORD PTR [ecx+ebx*1],edx
  40afcf:	call   0x67dfadaf
  40afd4:	mov    ebp,DWORD PTR [esi+ebp*2+0x1f]
  40afd8:	ds dec esi
  40afda:	inc    esi
  40afdb:	je     0x40b029
  40afdd:	in     al,dx
  40afde:	fwait
  40afdf:	mul    DWORD PTR [ebp-0x1a]
  40afe2:	inc    edi
  40afe3:	sub    eax,DWORD PTR [edi]
  40afe5:	hlt    
  40afe6:	lods   eax,DWORD PTR ds:[esi]
  40afe7:	fcom   QWORD PTR [esi+0x4a278904]
  40afed:	or     al,0x66
  40afef:	and    DWORD PTR [esi],edi
  40aff1:	std    
  40aff2:	pop    esp
  40aff3:	ins    BYTE PTR es:[edi],dx
  40aff4:	stos   DWORD PTR es:[edi],eax
  40aff5:	dec    ebp
  40aff6:	pop    ss
  40aff7:	push   0x598de98c
  40affc:	mov    eax,ds:0xe353dd7c
  40b001:	lds    esi,FWORD PTR [eax+0x4e20fdac]
  40b007:	cs addr16 (bad) 
  40b00a:	mov    dh,0xb5
  40b00c:	ror    BYTE PTR ds:0xac65a9e6,cl
  40b012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b013:	retf   0xa893
  40b016:	dec    ebx
  40b017:	push   0x6c
  40b019:	xlat   BYTE PTR ds:[ebx]
  40b01a:	jb     0x40b04e
  40b01c:	mov    edi,0x1af91031
  40b021:	inc    ebx
  40b022:	ret    
  40b023:	and    al,0xa7
  40b025:	repz mov edx,0xc7c64ac5
  40b02b:	push   ds
  40b02c:	mov    al,0xe
  40b02e:	ja     0x40b05f
  40b030:	addr16 pop eax
  40b032:	ins    DWORD PTR es:[edi],dx
  40b033:	or     eax,0x387c6203
  40b038:	std    
  40b039:	sbb    eax,0xecc53781
  40b03e:	test   eax,0x7202a959
  40b043:	adc    BYTE PTR [edi],bl
  40b045:	adc    bh,ch
  40b047:	xor    ebp,DWORD PTR [ebx+edx*2-0x770f0bae]
  40b04e:	jecxz  0x40b0a9
  40b050:	inc    edi
  40b051:	stc    
  40b052:	sbb    DWORD PTR [ebx],eax
  40b054:	xor    ch,BYTE PTR [ebx+esi*4-0x4a]
  40b058:	jl     0x40b046
  40b05a:	aad    0xc7
  40b05c:	xchg   DWORD PTR [esi],ebp
  40b05e:	cmp    al,0x1d
  40b060:	sbb    DWORD PTR [edx+ebp*8-0x2d],edi
  40b064:	popa   
  40b065:	fcomp  QWORD PTR [ecx-0x8f5a9da]
  40b06b:	push   edi
  40b06c:	sahf   
  40b06d:	mov    ds:0xe39f223f,al
  40b072:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b073:	sbb    BYTE PTR ds:0x3d77a34a,0x62
  40b07a:	mov    al,ds:0x42a1c3c4
  40b07f:	stos   BYTE PTR es:[edi],al
  40b080:	cmc    
  40b081:	sar    BYTE PTR [ebp-0x2a],1
  40b084:	outs   dx,BYTE PTR ds:[esi]
  40b085:	jge    0x40b022
  40b087:	popf   
  40b088:	sub    DWORD PTR [edx],edx
  40b08a:	mov    bh,0x45
  40b08c:	cmp    eax,DWORD PTR [edi]
  40b08e:	cwde   
  40b08f:	adc    al,bh
  40b091:	cmp    DWORD PTR [esi-0x2e],ebp
  40b094:	cli    
  40b095:	imul   edi,DWORD PTR [edi+ecx*4-0x75],0x35d5f0a6
  40b09d:	and    cl,BYTE PTR [edx]
  40b09f:	push   0xc
  40b0a1:	sahf   
  40b0a2:	mov    edi,0xb7e22af
  40b0a7:	ins    DWORD PTR es:[edi],dx
  40b0a8:	xor    BYTE PTR [edi-0x2],ah
  40b0ab:	inc    esi
  40b0ac:	in     eax,dx
  40b0ad:	iret   
  40b0ae:	sbb    esp,0x22b88468
  40b0b4:	mov    dl,0x8e
  40b0b6:	or     ebx,DWORD PTR [ebx-0x65]
  40b0b9:	mov    dh,0xd8
  40b0bb:	sub    eax,0x30f25a03
  40b0c0:	stos   BYTE PTR es:[edi],al
  40b0c1:	mov    bl,0xd6
  40b0c3:	cmc    
  40b0c4:	fcmovu st,st(1)
  40b0c6:	enter  0x22a8,0x13
  40b0ca:	shl    BYTE PTR [eax-0x25],0xda
  40b0ce:	push   es
  40b0cf:	iret   
  40b0d0:	mov    eax,ds:0xf85c3cc2
  40b0d5:	jg     0x40b069
  40b0d7:	push   0x41944607
  40b0dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0dd:	loop   0x40b0a4
  40b0df:	push   ds
  40b0e0:	or     eax,0x144defe9
  40b0e5:	jbe    0x40b06d
  40b0e7:	add    eax,0x19a5c79d
  40b0ec:	jle    0x40b0e8
  40b0ee:	pop    edi
  40b0ef:	leave  
  40b0f0:	lock or al,0xf8
  40b0f3:	cmp    cl,dh
  40b0f5:	push   ds
  40b0f6:	sbb    edi,eax
  40b0f8:	mov    bh,0x99
  40b0fa:	push   ebp
  40b0fb:	pop    eax
  40b0fc:	mov    ebx,0xf338431a
  40b101:	mov    dl,0xdc
  40b103:	ins    DWORD PTR es:[edi],dx
  40b104:	pop    es
  40b105:	ss aaa 
  40b107:	dec    eax
  40b108:	jns    0x40b172
  40b10a:	xchg   BYTE PTR [edi+edx*1-0x41eeb230],bl
  40b111:	je     0x40b110
  40b113:	data16 jl 0x40b0d8
  40b116:	in     eax,dx
  40b117:	pop    eax
  40b118:	js     0x40b196
  40b11a:	or     DWORD PTR [esi-0x21],esi
  40b11d:	call   0xf5bb33e2
  40b122:	and    esi,DWORD PTR [ebx]
  40b124:	sbb    al,0x34
  40b126:	jge    0x40b190
  40b128:	mov    esp,0x6637cb8d
  40b12d:	pop    esi
  40b12e:	enter  0x4a5f,0xe8
  40b132:	retf   0xc4c0
  40b135:	and    al,0x36
  40b137:	jge    0x40b18a
  40b139:	ins    DWORD PTR es:[edi],dx
  40b13a:	pop    edi
  40b13b:	pop    edi
  40b13c:	dec    eax
  40b13d:	mov    bh,BYTE PTR [edi+0x2c]
  40b140:	outs   dx,DWORD PTR ds:[esi]
  40b141:	jl     0x40b169
  40b143:	or     dh,ah
  40b145:	add    DWORD PTR [edx+0x4c],edx
  40b148:	mov    DWORD PTR [ebp+0x15c1381c],esi
  40b14e:	and    ebx,esp
  40b150:	inc    esp
  40b151:	test   BYTE PTR [eax],al
  40b153:	imul   ebx,DWORD PTR [ecx+0x28],0x5d166c39
  40b15a:	mov    bh,bh
  40b15c:	fwait
  40b15d:	sbb    BYTE PTR [edx+edx*1],dl
  40b160:	jae    0x40b11b
  40b162:	lahf   
  40b163:	mov    al,0xcd
  40b165:	outs   dx,DWORD PTR ds:[esi]
  40b166:	call   0xaae574de
  40b16b:	cmp    DWORD PTR [eax+esi*4-0x2e43a2e7],ebx
  40b172:	loopne 0x40b1d9
  40b174:	mov    ds:0xc5614cb6,al
  40b179:	dec    esp
  40b17a:	scas   eax,DWORD PTR es:[edi]
  40b17b:	test   eax,0xc8558c99
  40b180:	fmul   QWORD PTR [eax+0x7a98f91]
  40b186:	dec    edx
  40b187:	and    bh,BYTE PTR [edx+0x52]
  40b18a:	pop    ss
  40b18b:	fcmovbe st,st(4)
  40b18d:	jge    0x40b146
  40b18f:	pop    esp
  40b190:	out    0x95,eax
  40b192:	stc    
  40b193:	or     ch,BYTE PTR [edx+edx*8]
  40b196:	add    BYTE PTR [edi],al
  40b198:	mov    DWORD PTR [ecx],ecx
  40b19a:	fwait
  40b19b:	push   ss
  40b19c:	inc    ecx
  40b19d:	jnp    0x40b21a
  40b19f:	push   ebx
  40b1a0:	dec    esi
  40b1a1:	sbb    BYTE PTR [ebx],dl
  40b1a3:	or     ebx,DWORD PTR [eax-0x64]
  40b1a6:	popa   
  40b1a7:	xor    DWORD PTR [ebp+0x48],edi
  40b1aa:	jg     0x40b197
  40b1ac:	mov    ds,eax
  40b1ae:	retf   
  40b1af:	add    al,0x9f
  40b1b1:	dec    esp
  40b1b2:	sbb    cl,ah
  40b1b4:	mov    al,ds:0xc3158696
  40b1b9:	jp     0x40b1e5
  40b1bb:	js     0x40b16e
  40b1bd:	mov    bh,0xdf
  40b1bf:	dec    esi
  40b1c0:	pop    es
  40b1c1:	cmp    DWORD PTR [ebx-0x5f],0xa18fd126
  40b1c8:	jg     0x40b1e7
  40b1ca:	cmp    ebx,DWORD PTR [ebp-0x7da9dc5f]
  40b1d0:	or     dh,BYTE PTR [esi]
  40b1d2:	lahf   
  40b1d3:	mov    dl,0xe
  40b1d5:	ds in  al,0x2f
  40b1d8:	pop    ds
  40b1d9:	imul   ebx,DWORD PTR [ebx+0x16952923],0x73
  40b1e0:	xor    al,0xae
  40b1e2:	xor    cl,0x4a
  40b1e5:	test   al,0x49
  40b1e7:	(bad)  
  40b1e8:	in     al,dx
  40b1e9:	ss loop 0x40b18b
  40b1ec:	cdq    
  40b1ed:	jb     0x40b194
  40b1ef:	mov    ebp,DWORD PTR [ecx]
  40b1f1:	into   
  40b1f2:	stos   DWORD PTR es:[edi],eax
  40b1f3:	popf   
  40b1f4:	inc    edx
  40b1f5:	and    dh,ch
  40b1f7:	(bad)  
  40b1f8:	imul   esi,ebx,0x70
  40b1fb:	adc    eax,0xc0c1327b
  40b200:	mov    al,BYTE PTR [esi-0x2a4d6eb4]
  40b206:	inc    edx
  40b207:	mov    ds:0x81bda006,eax
  40b20c:	lds    ecx,FWORD PTR [ebp-0x44467938]
  40b212:	add    ebx,DWORD PTR [esi+0x2039d01e]
  40b218:	fidivr DWORD PTR [ebp+0x3b]
  40b21b:	inc    ecx
  40b21c:	add    eax,0xb27234bf
  40b221:	repz shr BYTE PTR [ebp-0x17332178],cl
  40b228:	rcl    BYTE PTR [esi+0x57114074],1
  40b22e:	int3   
  40b22f:	loopne 0x40b211
  40b231:	cwde   
  40b232:	push   ecx
  40b233:	or     BYTE PTR [eax+0x5],0xa8
  40b237:	int    0xc9
  40b239:	cmp    eax,esp
  40b23b:	mov    ebp,DWORD PTR ds:0xacf54c5c
  40b241:	sahf   
  40b242:	pop    esi
  40b243:	and    DWORD PTR [ebx+eiz*1-0x6eba30c5],esi
  40b24a:	add    dl,BYTE PTR [esp+ebp*2+0x66e158b2]
  40b251:	mov    esp,0x8403eed5
  40b257:	in     al,dx
  40b258:	mov    ecx,0x1392d838
  40b25d:	pusha  
  40b25e:	gs fwait
  40b260:	pop    edx
  40b261:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b262:	lahf   
  40b263:	outs   dx,BYTE PTR ds:[esi]
  40b264:	push   eax
  40b265:	sub    eax,0xb2af9af3
  40b26a:	or     DWORD PTR [ebp-0x333f8466],0x7f
  40b271:	inc    ebx
  40b272:	jne    0x40b251
  40b274:	ins    BYTE PTR es:[edi],dx
  40b275:	xor    eax,0xbe8b4ccf
  40b27a:	lahf   
  40b27b:	or     edx,DWORD PTR [ebx]
  40b27d:	xor    WORD PTR [esi],si
  40b280:	fiadd  WORD PTR [edi-0x34953fa7]
  40b286:	fnstcw WORD PTR [esi-0x777b818a]
  40b28c:	cmp    al,0x7c
  40b28e:	fdiv   DWORD PTR [esi]
  40b290:	push   esp
  40b291:	das    
  40b292:	sub    ebx,DWORD PTR [edi]
  40b294:	push   esi
  40b295:	lock lea ecx,[ecx-0x6f782a53]
  40b29c:	out    0x5e,eax
  40b29e:	pushf  
  40b29f:	inc    ecx
  40b2a0:	jge    0x40b306
  40b2a2:	dec    edi
  40b2a3:	pop    esi
  40b2a4:	jmp    0x878781a3
  40b2a9:	cld    
  40b2aa:	and    bl,BYTE PTR [edi+0x48c64ed5]
  40b2b0:	cmp    al,0x38
  40b2b2:	dec    ebx
  40b2b3:	ds stos DWORD PTR es:[edi],eax
  40b2b5:	in     al,dx
  40b2b6:	add    ebp,DWORD PTR ds:0xcc11d030
  40b2bc:	aaa    
  40b2bd:	cmp    eax,0xf3d8a0ab
  40b2c2:	inc    edi
  40b2c3:	sbb    al,bl
  40b2c5:	(bad)  
  40b2c6:	jnp    0x40b31f
  40b2c8:	ss push ss
  40b2ca:	or     DWORD PTR [edx-0x1db2e532],ecx
  40b2d0:	jl     0xe99c736a
  40b2d6:	adc    ebx,DWORD PTR [esi+eax*4-0x40]
  40b2da:	icebp  
  40b2db:	sbb    al,0x6e
  40b2dd:	sbb    ecx,ebp
  40b2df:	or     bh,ch
  40b2e1:	int    0xf5
  40b2e3:	test   BYTE PTR [edx-0x31112547],ah
  40b2e9:	add    DWORD PTR [eax+0x3b],edi
  40b2ec:	popf   
  40b2ed:	or     ch,BYTE PTR [edi]
  40b2ef:	sbb    DWORD PTR [ebx+ebp*4],ebp
  40b2f2:	mov    edi,0xa739ad2b
  40b2f7:	loop   0x40b2ef
  40b2f9:	repnz popf 
  40b2fb:	jo     0x40b326
  40b2fd:	jmp    0xb6aae770
  40b302:	pop    ecx
  40b303:	jmp    0xd7b202e9
  40b308:	push   eax
  40b309:	xchg   edi,eax
  40b30a:	adc    ebx,0x84c51c6
  40b310:	iret   
  40b311:	scas   al,BYTE PTR es:[edi]
  40b312:	add    cl,BYTE PTR [eax]
  40b314:	xor    BYTE PTR [edi],0xf9
  40b317:	cmp    DWORD PTR ds:[eax-0x50],0x7b84d8df
  40b31f:	inc    edx
  40b320:	or     edx,DWORD PTR [edx]
  40b322:	and    DWORD PTR [edx],0x19
  40b325:	mov    ds:0xb8d217a3,al
  40b32a:	or     BYTE PTR [esi],0x58
  40b32d:	sti    
  40b32e:	ret    0x7981
  40b331:	fcomp  DWORD PTR [ebp+0x4b]
  40b334:	xchg   ebx,eax
  40b335:	les    ecx,FWORD PTR [edi+0x261b4772]
  40b33b:	jns    0x40b2d7
  40b33d:	push   0x1544492d
  40b342:	mov    al,ds:0xa452f5e1
  40b347:	jns    0x40b30f
  40b349:	lea    eax,[edi+esi*1]
  40b34c:	jmp    DWORD PTR [eax+0xf]
  40b34f:	(bad)  
  40b350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b351:	dec    eax
  40b352:	ja     0x40b34a
  40b354:	out    dx,eax
  40b355:	add    BYTE PTR [esi+edi*8+0x419c69d7],0xe1
  40b35d:	jbe    0x40b382
  40b35f:	fdivrp st(1),st
  40b361:	add    dl,BYTE PTR [ebp+0x4b]
  40b364:	in     al,0x4d
  40b366:	adc    eax,0xe8674b7d
  40b36b:	add    DWORD PTR fs:[edx+0x352fd5ee],0x71f07b22
  40b376:	xchg   edx,eax
  40b377:	outs   dx,BYTE PTR ds:[esi]
  40b378:	mov    bh,0x93
  40b37a:	mov    ds:0xee6346cf,eax
  40b37f:	mov    edx,0xa584ac51
  40b384:	in     al,0x73
  40b386:	mov    al,ds:0x2bbb8006
  40b38b:	add    dh,bl
  40b38d:	mov    dh,0xc5
  40b38f:	jbe    0x40b3a1
  40b391:	xor    dl,dh
  40b393:	add    BYTE PTR [edx+0x1c],0x27
  40b397:	jg     0x40b3a3
  40b399:	mov    DWORD PTR [esi-0x48],edx
  40b39c:	add    BYTE PTR [edx-0xabe4784],al
  40b3a2:	ds push ebp
  40b3a4:	rol    DWORD PTR [edi],cl
  40b3a6:	retf   0xf96e
  40b3a9:	inc    esi
  40b3aa:	mov    ds,WORD PTR [eax+0x5a]
  40b3ad:	pop    eax
  40b3ae:	fcmovnu st,st(5)
  40b3b0:	mov    dl,bh
  40b3b2:	push   edx
  40b3b3:	bnd jnp 0x40b3b6
  40b3b6:	pand   mm2,QWORD PTR [ecx]
  40b3b9:	xor    DWORD PTR [edi],0x98b84594
  40b3bf:	es push ss
  40b3c1:	or     eax,0xc5899d9
  40b3c6:	add    al,0x83
  40b3c8:	push   ecx
  40b3c9:	clc    
  40b3ca:	and    eax,0xad8019d1
  40b3cf:	and    dl,dh
  40b3d1:	jae    0x40b3c8
  40b3d3:	fstp   TBYTE PTR [ecx-0x52]
  40b3d6:	pop    ebx
  40b3d7:	test   eax,0x7f7faf04
  40b3dc:	xor    dl,BYTE PTR [edi]
  40b3de:	rol    DWORD PTR [esi],0x87
  40b3e1:	popa   
  40b3e2:	mov    esp,0x6fcbbafe
  40b3e7:	into   
  40b3e8:	into   
  40b3e9:	mov    al,ds:0xb17ca0f4
  40b3ee:	out    0x0,al
  40b3f0:	fadd   QWORD PTR [ebx+0x21]
  40b3f3:	leave  
  40b3f4:	mov    al,0x69
  40b3f6:	dec    eax
  40b3f7:	jb     0x40b410
  40b3f9:	mov    ds:0xeb1b2b14,eax
  40b3fe:	mov    ecx,0xc5dfbb6c
  40b403:	mov    ch,0xe7
  40b405:	jbe    0x40b3f0
  40b407:	xor    eax,0x85944480
  40b40c:	push   ebp
  40b40d:	inc    ax
  40b40f:	aad    0x99
  40b411:	sti    
  40b412:	fidiv  WORD PTR [ebp+0x241e113d]
  40b418:	popf   
  40b419:	in     al,0x7
  40b41b:	jb     0x40b3b4
  40b41d:	sub    al,bh
  40b41f:	inc    eax
  40b420:	pusha  
  40b421:	add    al,ch
  40b423:	xor    ebx,eax
  40b425:	xchg   ecx,eax
  40b426:	push   cs
  40b427:	dec    ebp
  40b428:	aaa    
  40b429:	mov    DWORD PTR [edx-0x6d],eax
  40b42c:	pushf  
  40b42d:	data16 fisttp WORD PTR [ecx+0x72df9ff0]
  40b434:	pop    eax
  40b435:	cld    
  40b436:	push   cs
  40b437:	push   ds
  40b438:	and    BYTE PTR [ebx+0x6e238cb3],0xe2
  40b43f:	jmp    0xbdaa390d
  40b444:	sub    al,0xa0
  40b446:	(bad)  
  40b447:	sub    al,0x81
  40b449:	cmp    ah,dh
  40b44b:	push   es
  40b44c:	jg     0x40b4a4
  40b44e:	fwait
  40b44f:	(bad)  
  40b450:	mov    cl,0xfa
  40b452:	pop    es
  40b453:	mov    eax,0xf4f322c4
  40b458:	sbb    BYTE PTR [ebx+0x127cc5d5],dh
  40b45e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b45f:	lds    eax,FWORD PTR [edi+0x5c]
  40b462:	adc    DWORD PTR [eax],edi
  40b464:	aad    0xdf
  40b466:	xor    dh,dl
  40b468:	arpl   si,bp
  40b46a:	sub    esi,ebx
  40b46c:	or     edx,DWORD PTR [eax+0x6c]
  40b46f:	mov    esi,gs
  40b471:	or     eax,0x843594eb
  40b476:	lock add bh,BYTE PTR [edx+ebx*8-0x30127ecb]
  40b47e:	adc    al,0x54
  40b480:	mov    bh,0x7b
  40b482:	pop    esi
  40b483:	sbb    eax,0x67979d85
  40b488:	sub    BYTE PTR [eax+0x3d],dl
  40b48b:	adc    ah,BYTE PTR [eax+0x3996b81a]
  40b491:	lock cwde 
  40b493:	scas   eax,DWORD PTR es:[edi]
  40b494:	cs mov edi,ebp
  40b497:	pusha  
  40b498:	cmc    
  40b499:	aam    0xea
  40b49b:	test   al,0x12
  40b49d:	(bad)  
  40b49e:	retf   0xced1
  40b4a1:	(bad)  
  40b4a2:	mov    esp,0x596bcf7f
  40b4a7:	fimul  DWORD PTR [ecx-0x60f366f4]
  40b4ad:	int3   
  40b4ae:	push   edx
  40b4af:	neg    BYTE PTR [edx-0x7c53b6a7]
  40b4b5:	fsubr  DWORD PTR [ebx]
  40b4b7:	and    edx,edx
  40b4b9:	aam    0x24
  40b4bb:	rep stos DWORD PTR es:[edi],eax
  40b4bd:	jb     0x40b516
  40b4bf:	stc    
  40b4c0:	or     al,0xfd
  40b4c2:	xor    bh,dh
  40b4c4:	inc    esi
  40b4c5:	sub    DWORD PTR [edi-0x694a0ccf],esi
  40b4cb:	push   cs
  40b4cc:	sbb    al,0x92
  40b4ce:	and    al,0x60
  40b4d0:	(bad)  
  40b4d2:	retf   
  40b4d3:	fistp  WORD PTR [eax+0x44281a90]
  40b4d9:	sar    DWORD PTR [ebp+0x52],cl
  40b4dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4dd:	retf   
  40b4de:	imul   BYTE PTR [edx+ebp*2-0x2c]
  40b4e2:	pop    ecx
  40b4e3:	call   0xd3e803a8
  40b4e8:	aad    0xe3
  40b4ea:	xchg   edx,eax
  40b4eb:	sbb    eax,esp
  40b4ed:	xchg   ebp,eax
  40b4ee:	bound  ecx,QWORD PTR [esi+0x3c]
  40b4f1:	movsx  edx,WORD PTR es:[ebx]
  40b4f5:	add    edx,DWORD PTR ds:0x12fc7366
  40b4fb:	out    0xbc,eax
  40b4fd:	repnz in al,dx
  40b4ff:	lock add DWORD PTR [ebp+edx*4+0x68],0xe4062fc2
  40b508:	std    
  40b509:	ret    
  40b50a:	add    eax,0xf036fed3
  40b50f:	mov    ecx,0x64082f94
  40b515:	aaa    
  40b516:	adc    DWORD PTR ds:0x269070eb,0xffffff94
  40b51d:	je     0x40b4c0
  40b51f:	xchg   edi,eax
  40b520:	cdq    
  40b521:	mov    esi,0xf7abb4dc
  40b526:	int    0x62
  40b528:	(bad)  
  40b529:	enter  0x7bcf,0x14
  40b52d:	sub    eax,0xaedf329b
  40b532:	inc    ebp
  40b533:	mov    ss,WORD PTR [esi-0x2a]
  40b536:	add    BYTE PTR [eax],bh
  40b538:	jbe    0x40b545
  40b53a:	mov    bl,0x87
  40b53c:	in     al,dx
  40b53d:	bound  esp,QWORD PTR [ebx+eax*4-0x522a3bf]
  40b544:	ss xchg esi,eax
  40b546:	sub    al,0x95
  40b548:	dec    edi
  40b549:	pop    ds
  40b54a:	ror    DWORD PTR [eax+edx*1-0x59],cl
  40b54e:	fistp  WORD PTR [ebx+0x26]
  40b551:	mov    ecx,0x5b25a734
  40b556:	jb     0x40b4e7
  40b558:	das    
  40b559:	and    eax,0x816238f3
  40b55e:	int    0x1d
  40b560:	punpcklbw mm6,mm7
  40b563:	xchg   edx,eax
  40b564:	ins    BYTE PTR es:[edi],dx
  40b565:	out    0x8c,eax
  40b567:	pop    ss
  40b568:	pop    edx
  40b569:	jno    0x40b518
  40b56b:	mov    ebx,0x9cfd043c
  40b570:	sbb    dh,BYTE PTR [esi+0x1bbb7c2d]
  40b576:	cmp    al,BYTE PTR [ecx-0x7]
  40b579:	push   esi
  40b57a:	ds add bl,al
  40b57d:	xlat   BYTE PTR ds:[ebx]
  40b57e:	xchg   edi,eax
  40b57f:	inc    ecx
  40b580:	push   ecx
  40b581:	ret    
  40b582:	mov    ch,dl
  40b584:	push   edi
  40b585:	rcr    bl,0x3f
  40b588:	js     0x40b518
  40b58a:	leave  
  40b58b:	mov    edx,0xc7d82c85
  40b590:	fistp  QWORD PTR [edx-0x6289a03f]
  40b596:	lds    ebp,FWORD PTR [esi]
  40b598:	(bad)  
  40b599:	pop    ds
  40b59a:	mov    cl,0x53
  40b59c:	std    
  40b59d:	mov    ecx,0x40339260
  40b5a2:	daa    
  40b5a3:	test   DWORD PTR [edx],ebp
  40b5a5:	mov    al,ds:0x97a99ba6
  40b5aa:	xor    edx,DWORD PTR [edx+0x72]
  40b5ad:	pop    edi
  40b5ae:	(bad)  
  40b5af:	fcomi  st,st(5)
  40b5b1:	add    al,0xb
  40b5b3:	pop    DWORD PTR [edx]
  40b5b5:	cwde   
  40b5b6:	push   ebx
  40b5b7:	push   esi
  40b5b8:	add    BYTE PTR [ebx],bh
  40b5ba:	imul   eax,DWORD PTR [ecx+0x4b1c2703],0x7f
  40b5c1:	icebp  
  40b5c2:	outs   dx,BYTE PTR ds:[esi]
  40b5c3:	dec    eax
  40b5c4:	scas   eax,DWORD PTR es:[edi]
  40b5c5:	push   ebx
  40b5c6:	cmp    ah,BYTE PTR [edi+0x76c9e7]
  40b5cc:	loop   0x40b5b7
  40b5ce:	adc    BYTE PTR [esi-0x19],ch
  40b5d1:	pop    es
  40b5d2:	mov    edi,DWORD PTR [ecx-0x3a]
  40b5d5:	adc    esp,ebx
  40b5d7:	pushf  
  40b5d8:	mov    ds:0x669c20fa,eax
  40b5dd:	jecxz  0x40b646
  40b5df:	jl     0x40b602
  40b5e1:	cdq    
  40b5e2:	inc    edi
  40b5e3:	mov    dl,0xd6
  40b5e5:	std    
  40b5e6:	inc    edx
  40b5e7:	mov    ah,0xc1
  40b5e9:	push   ebp
  40b5ea:	cwde   
  40b5eb:	fadd   st(5),st
  40b5ed:	push   ss
  40b5ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5ef:	and    al,0x34
  40b5f1:	rcr    DWORD PTR [edx-0x550e94ac],cl
  40b5f7:	test   eax,0x6f0cf3e7
  40b5fc:	imul   ebx,ebx,0x1a
  40b5ff:	mov    bl,0x66
  40b601:	test   al,0xc1
  40b603:	and    BYTE PTR [ebx-0x65b95f3b],ch
  40b609:	aam    0x18
  40b60b:	jl     0x40b678
  40b60d:	push   ss
  40b60e:	mov    dl,0x6e
  40b610:	ficom  DWORD PTR [eax+0x68221f71]
  40b616:	fadd   st(6),st
  40b618:	lods   eax,DWORD PTR ds:[esi]
  40b619:	jo     0x40b665
  40b61b:	ret    
  40b61c:	clc    
  40b61d:	out    dx,al
  40b61e:	icebp  
  40b61f:	mov    ebx,DWORD PTR [esi+0x35]
  40b622:	(bad)  
  40b623:	and    dh,BYTE PTR [esi+0x6c2b7c92]
  40b629:	imul   esi,esp,0xfffffff8
  40b62c:	fld    DWORD PTR [edx+0x13]
  40b62f:	in     eax,dx
  40b630:	cdq    
  40b631:	jne    0x40b640
  40b633:	push   0xe02d2933
  40b638:	shl    BYTE PTR [edi+0x60],1
  40b63b:	xor    ecx,DWORD PTR [edx]
  40b63d:	mov    edx,DWORD PTR [ebx+0x743e6aac]
  40b643:	jmp    0x2627:0x9a302ca9
  40b64a:	in     al,0x16
  40b64c:	(bad)
  40b64f:	test   BYTE PTR [eax-0x3e],ch
  40b652:	adc    BYTE PTR [esi-0x5c],bh
  40b655:	fadd   QWORD PTR [edx+0x26]
  40b658:	imul   esi,DWORD PTR [esi],0x6b
  40b65b:	call   0x46c7070c
  40b660:	push   eax
  40b661:	test   BYTE PTR [eax-0x1dce2e85],dl
  40b667:	nop
  40b668:	push   ecx
  40b669:	mov    ebx,0x6063987d
  40b66e:	aaa    
  40b66f:	mov    dh,0xce
  40b671:	jle    0x40b6e0
  40b673:	(bad)  
  40b674:	or     BYTE PTR [edx-0x226f80ff],al
  40b67a:	mov    al,ds:0x12ff8036
  40b67f:	mov    bl,BYTE PTR [eax+0x19581848]
  40b685:	add    eax,0x8aa86748
  40b68a:	cdq    
  40b68b:	sub    BYTE PTR [edi],al
  40b68d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b68e:	cwde   
  40b68f:	cdq    
  40b690:	mov    cl,0x9d
  40b692:	or     eax,edi
  40b694:	sbb    BYTE PTR [edx+0x55],bh
  40b697:	push   0x2b
  40b699:	mov    bh,0xf9
  40b69b:	ret    
  40b69c:	push   ds
  40b69d:	(bad)  
  40b69f:	sub    ebx,DWORD PTR [edi+0x33c8ee35]
  40b6a5:	das    
  40b6a6:	stos   BYTE PTR es:[edi],al
  40b6a7:	mov    ds:0xad35857f,al
  40b6ac:	leave  
  40b6ad:	out    dx,al
  40b6ae:	mov    DWORD PTR [edi-0x71],ecx
  40b6b1:	adc    bh,BYTE PTR ds:0x6bbbe079
  40b6b7:	mov    bh,0xda
  40b6b9:	hlt    
  40b6ba:	inc    esi
  40b6bb:	dec    edi
  40b6bc:	pop    ebx
  40b6bd:	sahf   
  40b6be:	cli    
  40b6bf:	xor    al,0x56
  40b6c1:	fimul  WORD PTR [ebx+0x47]
  40b6c4:	mov    ebp,0x868b702e
  40b6c9:	xchg   BYTE PTR [ecx-0x1],cl
  40b6cc:	or     BYTE PTR [esi+esi*2+0x58],dh
  40b6d0:	inc    edx
  40b6d1:	pop    edx
  40b6d2:	jmp    0x40b696
  40b6d4:	sub    edx,DWORD PTR [edi+0x34]
  40b6d7:	lahf   
  40b6d8:	ret    0x7930
  40b6db:	cmp    eax,0xea30e94f
  40b6e0:	(bad)  
  40b6e2:	dec    ebx
  40b6e3:	test   eax,0xd7e6dd0b
  40b6e8:	mov    edx,0x8354e2dd
  40b6ed:	dec    edi
  40b6ee:	lahf   
  40b6ef:	mov    al,ds:0x20e16073
  40b6f4:	or     bh,BYTE PTR [ecx-0x1cb9e34]
  40b6fa:	push   edx
  40b6fb:	dec    ecx
  40b6fc:	push   es
  40b6fd:	mov    ebp,0xba7d3ffd
  40b702:	and    BYTE PTR [edi-0x34],cl
  40b705:	ja     0x40b697
  40b707:	mov    ah,0x83
  40b709:	push   0xffffffac
  40b70b:	dec    eax
  40b70c:	int    0x6b
  40b70e:	or     BYTE PTR [esi],cl
  40b710:	xchg   ecx,eax
  40b711:	dec    edx
  40b712:	int    0x8e
  40b714:	mov    edi,0x64cb21b7
  40b719:	xlat   BYTE PTR ds:[ebx]
  40b71a:	dec    esp
  40b71b:	jae    0x40b730
  40b71d:	pop    edx
  40b71e:	mov    cs,WORD PTR [ecx+0x22]
  40b721:	mov    ebx,0xce95e577
  40b726:	dec    ebp
  40b727:	mov    bl,0x98
  40b729:	out    0xc,al
  40b72b:	mov    WORD PTR [ecx],gs
  40b72d:	lahf   
  40b72e:	call   0xdee5:0x356c7ddb
  40b735:	sub    BYTE PTR [ecx+ecx*4],0xd6
  40b739:	sbb    eax,0x903c4174
  40b73e:	popf   
  40b73f:	sub    ah,dh
  40b741:	add    BYTE PTR [ebp+0x50312622],ch
  40b747:	sahf   
  40b748:	out    0x36,eax
  40b74a:	arpl   bx,si
  40b74c:	dec    ebp
  40b74d:	stc    
  40b74e:	jo     0x40b70a
  40b750:	mov    WORD PTR [edx+0x24],?
  40b753:	add    BYTE PTR [edx-0x19],ah
  40b756:	sub    al,0xe3
  40b758:	push   ebx
  40b759:	mov    ebx,0xccd441bc
  40b75e:	mov    ch,BYTE PTR [edi]
  40b760:	call   0xfece:0x6d8b595d
  40b767:	out    dx,al
  40b768:	xor    dh,BYTE PTR [edx]
  40b76a:	sub    eax,DWORD PTR [eax+0x63]
  40b76d:	addr16 das 
  40b76f:	ret    
  40b770:	pop    esi
  40b771:	aaa    
  40b772:	je     0x40b6fe
  40b774:	cld    
  40b775:	lds    edi,FWORD PTR [ecx+0x512408ca]
  40b77b:	test   DWORD PTR cs:[esi+0x7d051ec3],esp
  40b782:	pop    es
  40b783:	outs   dx,BYTE PTR ds:[esi]
  40b784:	mov    ch,0xcf
  40b786:	adc    dl,dh
  40b788:	mov    cl,0x8e
  40b78a:	cmp    ecx,DWORD PTR [ebp-0x248e7a8b]
  40b790:	out    dx,eax
  40b791:	mov    BYTE PTR [edx-0x171b1eae],dh
  40b797:	mov    esp,DWORD PTR [ebx+0x38f13312]
  40b79d:	pop    esi
  40b79e:	cli    
  40b79f:	div    DWORD PTR [ebp-0x22]
  40b7a2:	cmc    
  40b7a3:	cmp    ebx,edi
  40b7a5:	inc    ecx
  40b7a6:	push   eax
  40b7a7:	push   eax
  40b7a8:	push   ebp
  40b7a9:	retf   
  40b7aa:	dec    ebp
  40b7ab:	or     BYTE PTR [eax],cl
  40b7ad:	mov    dh,ch
  40b7af:	push   es
  40b7b0:	pop    es
  40b7b1:	imul   esp,DWORD PTR [ecx+0x10a053c2],0x5c
  40b7b8:	mov    al,ds:0x675dd032
  40b7bd:	data16 jns 0x40b74b
  40b7c0:	imul   edi,DWORD PTR [ecx-0xdfced0e],0x54
  40b7c7:	mov    esp,0xb2731217
  40b7cc:	cmp    ah,BYTE PTR [edi]
  40b7ce:	aas    
  40b7cf:	cmp    bl,0xc4
  40b7d2:	jbe    0x40b807
  40b7d4:	jne    0x40b7d0
  40b7d6:	pop    ds
  40b7d7:	sbb    esi,edi
  40b7d9:	lds    esp,FWORD PTR [ebx+0x50a37259]
  40b7df:	nop
  40b7e0:	sub    BYTE PTR [edi+edi*8+0x55],bh
  40b7e4:	punpckldq mm1,mm0
  40b7e7:	add    DWORD PTR [ebp-0xe103dda],esp
  40b7ed:	pusha  
  40b7ee:	inc    ebp
  40b7ef:	gs data16 aaa 
  40b7f2:	sub    BYTE PTR [eax+esi*1+0x64174787],dl
  40b7f9:	adc    eax,0xf4ae283e
  40b7fe:	jl     0x40b855
  40b800:	inc    ecx
  40b801:	in     al,0x37
  40b803:	cwde   
  40b804:	mov    ds:0xf82582b3,eax
  40b809:	or     BYTE PTR [ecx+ebx*4-0x6fddffef],ch
  40b810:	xchg   esp,eax
  40b811:	lds    ebp,FWORD PTR [edx+0x4a]
  40b814:	int3   
  40b815:	push   ebx
  40b816:	push   esi
  40b817:	mov    WORD PTR [ebp-0x53],es
  40b81a:	inc    esp
  40b81b:	inc    esi
  40b81c:	das    
  40b81d:	xchg   edi,eax
  40b81e:	mov    eax,ds:0xf0a9dc1b
  40b823:	dec    eax
  40b824:	not    bh
  40b826:	add    DWORD PTR [ebx],ecx
  40b828:	inc    ebp
  40b829:	das    
  40b82a:	cdq    
  40b82b:	ins    BYTE PTR es:[edi],dx
  40b82c:	int    0x20
  40b82e:	fild   DWORD PTR [eax+eiz*2+0x5277c3b3]
  40b835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b836:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b837:	cmp    al,0xdb
  40b839:	mov    edx,0x4d979d1c
  40b83e:	ret    0x7545
  40b841:	nop
  40b842:	and    eax,0xb1c4f698
  40b847:	dec    edx
  40b848:	rcl    DWORD PTR [esi],1
  40b84a:	adc    al,BYTE PTR [eax+ebx*1-0x76e40b23]
  40b851:	pop    ecx
  40b852:	out    0x70,eax
  40b854:	stos   DWORD PTR es:[edi],eax
  40b855:	adc    DWORD PTR [edi-0x63],edi
  40b858:	jo     0x40b7ee
  40b85a:	call   FWORD PTR [ecx-0x36]
  40b85d:	push   cs
  40b85e:	jp     0x40b8a4
  40b860:	(bad)  
  40b861:	fcom   QWORD PTR [ebx+0x16aaf2ae]
  40b867:	test   al,0x1f
  40b869:	call   0xeee1:0x495736b3
  40b870:	mov    ch,0xb7
  40b872:	stos   BYTE PTR es:[edi],al
  40b873:	lods   al,BYTE PTR ds:[esi]
  40b874:	sbb    eax,0x596bfa68
  40b879:	xlat   BYTE PTR ds:[ebx]
  40b87a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b87b:	cs dec edx
  40b87d:	mov    BYTE PTR [edi-0x6],ah
  40b880:	push   ss
  40b881:	ss pop ebx
  40b883:	js     0x40b8a0
  40b885:	jl     0x40b848
  40b887:	stc    
  40b888:	push   edx
  40b889:	aad    0xde
  40b88b:	push   cs
  40b88c:	clc    
  40b88d:	clc    
  40b88e:	inc    bl
  40b890:	sar    BYTE PTR fs:[edx],1
  40b893:	sub    dl,BYTE PTR [ecx]
  40b895:	or     eax,0x6db26f93
  40b89a:	mov    WORD PTR [edx],es
  40b89c:	mov    bl,0x44
  40b89e:	jmp    0x4daea9f2
  40b8a3:	pop    es
  40b8a4:	int    0xbf
  40b8a6:	xor    BYTE PTR [ebx+0x11945b36],dl
  40b8ac:	and    BYTE PTR [ebp-0x634ec837],dh
  40b8b2:	push   ds
  40b8b3:	push   esi
  40b8b4:	xor    BYTE PTR [ebp+0x5e],0x67
  40b8b8:	xchg   ebp,eax
  40b8b9:	out    0x6d,al
  40b8bb:	scas   al,BYTE PTR es:[edi]
  40b8bc:	and    BYTE PTR [ebp+ebx*4+0xc328186],dl
  40b8c3:	add    dh,BYTE PTR [edx-0x6e20ef6d]
  40b8c9:	mov    edi,0xf9cbb8d4
  40b8ce:	cs bound eax,QWORD PTR es:[ebx+0x3a36a865]
  40b8d6:	inc    edi
  40b8d7:	pop    edi
  40b8d8:	jo     0x40b8e8
  40b8da:	retf   0x52a3
  40b8dd:	out    0xca,eax
  40b8df:	into   
  40b8e0:	dec    esp
  40b8e1:	scas   al,BYTE PTR es:[edi]
  40b8e2:	sub    BYTE PTR [esi+ebx*2-0x2c252e5e],0x39
  40b8ea:	(bad)  
  40b8eb:	ja     0x40b8f1
  40b8ed:	push   ebp
  40b8ee:	sbb    edi,esi
  40b8f0:	and    ebx,DWORD PTR [edx+0x2e17e8f5]
  40b8f6:	and    al,0xc5
  40b8f8:	ret    
  40b8f9:	dec    ebp
  40b8fa:	out    0xad,eax
  40b8fc:	and    bh,ch
  40b8fe:	xchg   ecx,eax
  40b8ff:	loop   0x40b907
  40b901:	ss popf 
  40b903:	xor    ch,0x11
  40b906:	push   edx
  40b907:	inc    esp
  40b908:	and    DWORD PTR [edx],edx
  40b90a:	out    dx,eax
  40b90b:	popa   
  40b90c:	and    DWORD PTR [ecx+0x2bf1155f],esp
  40b912:	inc    ebp
  40b913:	sbb    eax,0xf7240e3c
  40b918:	mov    eax,ds:0x760118f4
  40b91d:	enter  0xac39,0xb4
  40b921:	stos   DWORD PTR es:[edi],eax
  40b922:	call   0x6063:0xc216ba9a
  40b929:	arpl   WORD PTR [edi],si
  40b92b:	repz lds ebx,FWORD PTR [ebx-0x80]
  40b92f:	imul   ebx,DWORD PTR [ebx-0x79],0xfffffffa
  40b933:	fidivr DWORD PTR [edi]
  40b935:	jp     0x40b9a5
  40b937:	jle    0x40b8c6
  40b939:	inc    esp
  40b93a:	jnp    0x40b906
  40b93c:	pop    ss
  40b93d:	dec    edx
  40b93e:	bound  ecx,QWORD PTR [edx]
  40b940:	or     ecx,ebx
  40b942:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b943:	mov    ds:0x4b6499ac,al
  40b948:	test   dh,0x47
  40b94b:	sub    bl,BYTE PTR [ecx+0x1b584d3e]
  40b951:	js     0x40b9b7
  40b953:	adc    al,0x6e
  40b955:	inc    esp
  40b956:	mov    ds:0x86240af6,eax
  40b95b:	mov    edx,cs
  40b95d:	(bad)  
  40b95e:	(bad)  
  40b95f:	out    dx,al
  40b960:	sub    BYTE PTR ds:[esi+0x85d698f],dl
  40b967:	sub    edi,DWORD PTR [ecx]
  40b969:	add    cl,dh
  40b96b:	push   edx
  40b96c:	pop    esi
  40b96d:	inc    ecx
  40b96e:	xor    cl,bl
  40b970:	or     edx,eax
  40b972:	(bad)  
  40b974:	into   
  40b975:	inc    ebx
  40b976:	inc    ebx
  40b977:	out    0x62,al
  40b979:	jno    0x40b9c9
  40b97b:	fs pop ds
  40b97d:	fst    DWORD PTR [edx+0x70493576]
  40b983:	cld    
  40b984:	add    al,0x24
  40b986:	mov    ds:0xd43ccfd9,al
  40b98b:	shl    BYTE PTR [esi],1
  40b98d:	fcomip st,st(7)
  40b98f:	aaa    
  40b990:	out    dx,eax
  40b991:	inc    esi
  40b992:	xchg   ebx,eax
  40b993:	imul   ebp,DWORD PTR [edi-0x4f],0x6e
  40b997:	iret   
  40b998:	fmulp  st(0),st
  40b99a:	dec    ecx
  40b99b:	jge    0x40b9ed
  40b99d:	stos   BYTE PTR es:[edi],al
  40b99e:	add    eax,DWORD PTR [eax]
  40b9a0:	adc    ah,al
  40b9a2:	retf   0xd208
  40b9a5:	fwait
  40b9a6:	mov    bh,0xd4
  40b9a8:	pop    esp
  40b9a9:	cs adc al,0xb4
  40b9ac:	push   es
  40b9ad:	popa   
  40b9ae:	and    ecx,DWORD PTR [esi+ebp*4-0x75]
  40b9b2:	mov    ah,0x9b
  40b9b4:	push   esp
  40b9b5:	test   BYTE PTR [eax-0x201972ee],0x51
  40b9bc:	retf   0xec
  40b9bf:	cmc    
  40b9c0:	daa    
  40b9c1:	xor    esp,esi
  40b9c3:	cmp    BYTE PTR [ebp-0x4eef41f1],bh
  40b9c9:	cmc    
  40b9ca:	adc    ah,BYTE PTR [ebp-0x28]
  40b9cd:	sub    eax,0x837f5ef4
  40b9d2:	stos   DWORD PTR es:[edi],eax
  40b9d3:	pusha  
  40b9d4:	dec    ebx
  40b9d5:	dec    esp
  40b9d6:	enter  0x861f,0xc9
  40b9da:	retf   
  40b9db:	mov    ch,0x9e
  40b9dd:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40b9df:	push   cs
  40b9e0:	loopne 0x40ba12
  40b9e2:	xor    eax,0xe63b26eb
  40b9e7:	bound  ebp,QWORD PTR [eax]
  40b9e9:	loopne 0x40b9ec
  40b9eb:	shl    ecx,1
  40b9ed:	ja     0x40ba04
  40b9ef:	adc    al,0x60
  40b9f1:	(bad)  
  40b9f2:	aaa    
  40b9f3:	pop    es
  40b9f4:	lds    ecx,FWORD PTR [ebx]
  40b9f6:	pop    esi
  40b9f7:	leave  
  40b9f8:	test   DWORD PTR [edx-0x64475ce6],esi
  40b9fe:	ss dec eax
  40ba00:	mov    eax,ds:0x26829195
  40ba05:	enter  0xf8d5,0xbf
  40ba09:	push   ebp
  40ba0a:	pop    ebx
  40ba0b:	fwait
  40ba0c:	mov    ds,WORD PTR [edi+0x28f9e3ad]
  40ba12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba13:	sbb    DWORD PTR [esi+0x3bda427a],esp
  40ba19:	add    DWORD PTR [eax-0x319be8eb],ebx
  40ba1f:	add    eax,0x8eca8566
  40ba24:	inc    edx
  40ba25:	pop    es
  40ba26:	pop    eax
  40ba27:	mov    eax,0x3c71241b
  40ba2c:	mov    ds:0x2b687ec2,eax
  40ba31:	(bad)  [edi+0x42]
  40ba34:	fld    st(1)
  40ba36:	mov    bl,0xc9
  40ba38:	pop    ss
  40ba39:	or     DWORD PTR [edi+0x608b5a35],eax
  40ba3f:	out    0x7c,eax
  40ba41:	push   ss
  40ba42:	mov    edi,0xa5402a3b
  40ba47:	arpl   WORD PTR [edx-0xd],sp
  40ba4a:	jmp    0x243e7aac
  40ba4f:	lahf   
  40ba50:	adc    eax,DWORD PTR [ebx+0x57]
  40ba53:	xlat   BYTE PTR ds:[ebx]
  40ba54:	jne    0x40bab0
  40ba56:	or     eax,DWORD PTR [ebx-0x9a0262a]
  40ba5c:	adc    DWORD PTR [edx],edx
  40ba5e:	cmc    
  40ba5f:	in     eax,0x71
  40ba61:	int    0x90
  40ba63:	loop   0x40ba2b
  40ba65:	ss mov ch,0x5
  40ba68:	push   edi
  40ba69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba6a:	out    dx,eax
  40ba6b:	xchg   esp,eax
  40ba6c:	mov    bl,BYTE PTR [esi]
  40ba6e:	das    
  40ba6f:	and    eax,0xb53bd316
  40ba74:	ficomp WORD PTR [ebx+0x16]
  40ba77:	(bad)  
  40ba78:	loopne 0x40badd
  40ba7a:	pop    es
  40ba7b:	push   ds
  40ba7c:	push   esi
  40ba7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba7e:	jb     0x40baae
  40ba80:	pop    ebx
  40ba81:	or     al,0xa2
  40ba83:	leave  
  40ba84:	imul   edi,esp,0xa09e8998
  40ba8a:	jns    0x40ba66
  40ba8c:	gs ror ebp,cl
  40ba8f:	and    al,0xc2
  40ba91:	aaa    
  40ba92:	int3   
  40ba93:	addr16 sub dh,ah
  40ba96:	mov    edi,0xc80c663d
  40ba9b:	(bad)  
  40ba9c:	mov    ebx,0x71d29382
  40baa1:	ja     0x40ba8b
  40baa3:	faddp  st(1),st
  40baa5:	jle    0x40badd
  40baa7:	mov    cl,0x87
  40baa9:	aas    
  40baaa:	or     esi,esp
  40baac:	push   ebp
  40baad:	(bad)  
  40baae:	stc    
  40baaf:	arpl   WORD PTR [ecx-0x41],si
  40bab2:	dec    edi
  40bab3:	fld    TBYTE PTR [ebx+0x65]
  40bab6:	add    eax,0xc376c1b
  40babb:	int3   
  40babc:	fistp  QWORD PTR [eax+ebx*8]
  40babf:	mov    ch,0x7
  40bac1:	sub    ecx,esp
  40bac3:	cmp    dl,BYTE PTR [esi+0x7d4ccaf5]
  40bac9:	imul   eax,DWORD PTR [ebx+0x17cd343f],0x27
  40bad0:	imul   eax,DWORD PTR [esi],0x6f
  40bad3:	mov    esp,0x954e6cfc
  40bad8:	sbb    ebx,DWORD PTR [esi-0x312f63ba]
  40bade:	sar    BYTE PTR [esi+0x4e],0xfd
  40bae2:	mov    DWORD PTR [edx+eiz*4-0x5d],edx
  40bae6:	popa   
  40bae7:	test   eax,0x4567c01f
  40baec:	sbb    eax,0xce72a3
  40baf1:	div    DWORD PTR [ebx+edx*1]
  40baf4:	ja     0x40babf
  40baf6:	push   eax
  40baf7:	jbe    0x40baee
  40baf9:	jo     0x40bb6d
  40bafb:	retf   
  40bafc:	xor    eax,0xee3fdd30
  40bb01:	mov    cl,0x67
  40bb03:	sub    al,0xcc
  40bb05:	add    BYTE PTR [eax],cl
  40bb07:	test   DWORD PTR [ebx-0x4cb00ac7],edx
  40bb0d:	and    edi,DWORD PTR [esi]
  40bb0f:	in     al,0x62
  40bb11:	mov    ds:0x832a0d47,eax
  40bb16:	jg     0x40bb74
  40bb18:	and    ah,ch
  40bb1a:	arpl   WORD PTR ds:0xd8468b7a,bx
  40bb20:	dec    esi
  40bb21:	fisubr DWORD PTR [ebx-0x56]
  40bb24:	jmp    0xd15f2126
  40bb29:	jl     0x40bb60
  40bb2b:	scas   al,BYTE PTR es:[edi]
  40bb2c:	adc    esp,DWORD PTR [ebp+ecx*2+0x14]
  40bb30:	and    al,0x11
  40bb32:	into   
  40bb33:	sbb    bl,BYTE PTR [edx]
  40bb35:	push   ds
  40bb36:	pop    ds
  40bb37:	push   esp
  40bb38:	aas    
  40bb39:	lahf   
  40bb3a:	adc    eax,0x1cafa7f3
  40bb3f:	push   ecx
  40bb40:	jnp    0x40bb72
  40bb42:	mov    esi,0x24cef863
  40bb48:	xchg   edi,eax
  40bb49:	fucomip st,st(2)
  40bb4b:	push   eax
  40bb4c:	enter  0xd03d,0x16
  40bb50:	scas   al,BYTE PTR es:[edi]
  40bb51:	pop    esp
  40bb52:	stc    
  40bb53:	lock fcom QWORD PTR [edi+0x571926ca]
  40bb5a:	enter  0x9869,0x4a
  40bb5e:	and    eax,0x89a14a1c
  40bb63:	jmp    0x35056a66
  40bb68:	push   esp
  40bb69:	cmp    DWORD PTR ds:0xa225bcbc,eax
  40bb6f:	adc    DWORD PTR [edx-0x61],ebx
  40bb72:	(bad)  
  40bb73:	imul   eax,DWORD PTR [eax+ebp*8-0x5c],0x7826c372
  40bb7b:	fnstcw WORD PTR [ebp-0x64a8b4ad]
  40bb81:	mov    eax,0xf7af4250
  40bb86:	mov    WORD PTR [esi+0x7159c0a5],gs
  40bb8c:	push   esp
  40bb8d:	lods   eax,DWORD PTR ds:[esi]
  40bb8e:	int3   
  40bb8f:	fwait
  40bb90:	in     al,0x16
  40bb92:	dec    esp
  40bb93:	ficom  DWORD PTR [ecx+0x18]
  40bb96:	lea    edi,[ecx-0x3770f4fc]
  40bb9c:	fs dec ebp
  40bb9e:	mov    ebp,0xc5242976
  40bba3:	lods   eax,DWORD PTR ds:[esi]
  40bba4:	mov    ebp,0x4849667
  40bba9:	push   0x595a1bdb
  40bbae:	popf   
  40bbaf:	xchg   ebp,eax
  40bbb0:	and    al,0xb8
  40bbb2:	or     dh,BYTE PTR [ecx+0x5b]
  40bbb5:	les    esp,FWORD PTR [eax]
  40bbb7:	hlt    
  40bbb8:	test   dh,0xc2
  40bbbb:	xor    al,0x3d
  40bbbd:	push   ecx
  40bbbe:	push   ebp
  40bbbf:	inc    ebx
  40bbc0:	int3   
  40bbc1:	daa    
  40bbc2:	sbb    BYTE PTR [ebx-0x5312f945],0xc6
  40bbc9:	test   DWORD PTR [esi+ebx*8+0x27],edi
  40bbcd:	repnz bound edi,QWORD PTR [esi]
  40bbd0:	mov    ebx,0xcd2bee49
  40bbd5:	push   cs
  40bbd6:	int3   
  40bbd7:	jecxz  0x40bb85
  40bbd9:	xor    BYTE PTR [eax-0x67f42764],ch
  40bbdf:	out    dx,eax
  40bbe0:	xchg   edx,eax
  40bbe1:	call   0xa24c7ebf
  40bbe6:	mov    dh,0x1f
  40bbe8:	inc    eax
  40bbe9:	dec    ebx
  40bbea:	pusha  
  40bbeb:	ss adc edi,0x58
  40bbef:	popf   
  40bbf0:	fwait
  40bbf1:	mov    dh,0x68
  40bbf3:	scas   al,BYTE PTR es:[edi]
  40bbf4:	nop    DWORD PTR [ebp-0x6b]
  40bbf8:	repnz or eax,0xa8f8a2e0
  40bbfe:	mov    bh,0xcd
  40bc00:	push   eax
  40bc01:	leave  
  40bc02:	inc    ebx
  40bc03:	cmp    al,0x80
  40bc05:	bound  eax,QWORD PTR [edx]
  40bc07:	xchg   ebx,eax
  40bc08:	mov    eax,ds:0x53ef924e
  40bc0d:	push   0xffffff81
  40bc0f:	push   edi
  40bc10:	fcom   QWORD PTR [edi+eiz*8-0x114ca56d]
  40bc17:	mov    dh,0xb0
  40bc19:	(bad)  
  40bc1a:	push   esi
  40bc1b:	inc    ebx
  40bc1c:	xchg   BYTE PTR [eax-0x56],dh
  40bc1f:	push   ds
  40bc20:	pop    edx
  40bc21:	in     al,dx
  40bc22:	lea    ebp,[ebx]
  40bc24:	call   0x465c9f0e
  40bc29:	push   eax
  40bc2a:	and    edi,DWORD PTR [edi+0x3c]
  40bc2d:	stc    
  40bc2e:	out    dx,eax
  40bc2f:	pop    edx
  40bc30:	in     eax,0xa
  40bc32:	int3   
  40bc33:	inc    edx
  40bc34:	ja     0x40bc28
  40bc36:	fmul   QWORD PTR [ecx-0x3df19576]
  40bc3c:	jns    0x40bcac
  40bc3e:	jecxz  0x40bc66
  40bc40:	aaa    
  40bc41:	pusha  
  40bc42:	jmp    0x5a1a689a
  40bc47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc48:	test   DWORD PTR [ecx-0x6f68a4c6],ecx
  40bc4e:	pop    ebx
  40bc4f:	mov    ebp,0x18dd2714
  40bc54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc55:	mov    bh,0x5
  40bc57:	add    cl,0x9b
  40bc5a:	adc    al,0x60
  40bc5c:	bnd jp 0x40bcc7
  40bc5f:	and    edi,DWORD PTR [esi-0x60]
  40bc62:	in     al,dx
  40bc63:	in     eax,0x2
  40bc65:	push   ecx
  40bc66:	icebp  
  40bc67:	xchg   esp,eax
  40bc68:	cld    
  40bc69:	imul   edi,DWORD PTR [ebx-0x31c673db],0x30
  40bc70:	xchg   esp,eax
  40bc71:	or     eax,0xe12745be
  40bc76:	out    0x91,eax
  40bc78:	int3   
  40bc79:	mov    esi,0xd6e61775
  40bc7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc7f:	xchg   esi,eax
  40bc80:	mov    bl,0x6f
  40bc82:	hlt    
  40bc83:	sbb    BYTE PTR [ebx],bl
  40bc85:	aaa    
  40bc86:	push   es
  40bc87:	arpl   di,ax
  40bc89:	jbe    0x40bc18
  40bc8b:	pop    edi
  40bc8c:	mov    eax,ds:0x46343f64
  40bc91:	test   DWORD PTR ss:[esi-0x37],edi
  40bc95:	dec    edx
  40bc96:	mov    al,ds:0xe5bf791e
  40bc9b:	jo     0x40bd19
  40bc9d:	out    dx,eax
  40bc9e:	test   DWORD PTR [ebx-0x63],esp
  40bca1:	sbb    al,BYTE PTR [ebp+esi*8-0x3768ec74]
  40bca8:	mov    esi,0xa9444f74
  40bcad:	cmp    al,0x46
  40bcaf:	int3   
  40bcb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcb1:	mov    DWORD PTR [ebp-0x3c672f62],eax
  40bcb7:	mov    edi,0x41bf783e
  40bcbc:	sub    esp,edi
  40bcbe:	jmp    0xae211074
  40bcc3:	in     al,0xec
  40bcc5:	pop    ss
  40bcc6:	mov    ecx,0x9d44e68b
  40bccb:	cwde   
  40bccc:	(bad)  
  40bccd:	(bad)  
  40bcce:	out    0xb1,eax
  40bcd0:	add    ebp,DWORD PTR ds:0x62deb488
  40bcd6:	pop    eax
  40bcd7:	lock fwait
  40bcd9:	sahf   
  40bcda:	mov    ch,0x75
  40bcdc:	push   esi
  40bcdd:	mov    esp,0xecfd274
  40bce2:	test   DWORD PTR [esi],0x72f485f7
  40bce8:	push   edx
  40bce9:	jg     0x40bd5a
  40bceb:	mov    DWORD PTR [ebx-0x4bb7dcf8],edi
  40bcf1:	imul   eax,ecx,0x24e926d7
  40bcf7:	or     ch,BYTE PTR [esi]
  40bcf9:	push   es
  40bcfa:	sti    
  40bcfb:	push   ss
  40bcfc:	xchg   ebx,eax
  40bcfd:	aaa    
  40bcfe:	into   
  40bcff:	xchg   edx,eax
  40bd00:	push   esi
  40bd01:	ja     0x40bd1a
  40bd03:	push   esi
  40bd04:	push   0x60
  40bd06:	fdivr  st(5),st
  40bd08:	pop    eax
  40bd09:	imul   ebp,DWORD PTR [ecx-0x38],0x9
  40bd0d:	sub    al,0x22
  40bd0f:	and    BYTE PTR ds:0x30fc28f3,al
  40bd15:	or     al,0xf8
  40bd17:	shl    DWORD PTR [ebp+0x3da6bf1b],0x9f
  40bd1e:	rcr    DWORD PTR [edi-0x23bc90e],0x7e
  40bd25:	pusha  
  40bd26:	jb     0x40bccc
  40bd28:	mov    ecx,0xf472ed6c
  40bd2d:	repz mov esi,0xf24959bf
  40bd33:	and    BYTE PTR [ecx],bh
  40bd35:	cld    
  40bd36:	shl    DWORD PTR [edi+0x77c408b8],0x1b
  40bd3d:	lea    esi,ss:0x772b0953
  40bd44:	stos   BYTE PTR es:[edi],al
  40bd45:	cmp    eax,0xde15ccc
  40bd4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd4b:	frstor [ebx+0x4554c36e]
  40bd51:	dec    esp
  40bd52:	cmovno esp,DWORD PTR [ecx-0x55831bec]
  40bd59:	shl    BYTE PTR [edx+0x34057bf0],0x73
  40bd60:	out    dx,eax
  40bd61:	mov    ah,0xd3
  40bd63:	daa    
  40bd64:	in     al,dx
  40bd65:	xor    cl,BYTE PTR [edi+edx*2+0x73]
  40bd69:	cld    
  40bd6a:	arpl   bx,bx
  40bd6c:	pop    es
  40bd6d:	adc    BYTE PTR [edx-0x35],cl
  40bd70:	mov    bh,0xfc
  40bd72:	call   0x5e08e52f
  40bd77:	daa    
  40bd78:	fsub   DWORD PTR [ecx+edx*8]
  40bd7b:	jne    0x40bdbb
  40bd7d:	aam    0x4e
  40bd7f:	jb     0x40bd3b
  40bd81:	and    BYTE PTR [ebx-0x216679d9],cl
  40bd87:	jae    0x40bd37
  40bd89:	mov    BYTE PTR [eax-0x57ef60ff],dh
  40bd8f:	es dec ebp
  40bd91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd92:	mov    edi,0x3d687116
  40bd97:	mov    ?,WORD PTR [ecx]
  40bd99:	in     eax,dx
  40bd9a:	pop    edx
  40bd9b:	mov    al,ds:0xe3f7aca8
  40bda0:	(bad)  [ebx-0x153e3069]
  40bda6:	int3   
  40bda7:	mov    WORD PTR [ebx],cs
  40bda9:	pop    ds
  40bdaa:	dec    edi
  40bdab:	sbb    BYTE PTR [esi+0x4f],dh
  40bdae:	call   0xe16c1ae8
  40bdb3:	mov    ebx,0x30648751
  40bdb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdb9:	fwait
  40bdba:	jae    0x40bdf1
  40bdbc:	sbb    BYTE PTR [eax+0x23],0x32
  40bdc0:	or     eax,0xede75bda
  40bdc5:	jmp    0xbc08:0x56fe37e4
  40bdcc:	into   
  40bdcd:	mov    edi,0x46c06daf
  40bdd2:	and    al,0x35
  40bdd4:	and    cl,BYTE PTR [eax+edx*8+0x63]
  40bdd8:	retf   
  40bdd9:	mov    ch,0x9b
  40bddb:	jno    0x40bdab
  40bddd:	cmp    al,0xeb
  40bddf:	add    DWORD PTR [esi+eax*8+0x58],0x10
  40bde4:	xchg   edi,eax
  40bde5:	pushf  
  40bde6:	mov    edx,0x5b2cce87
  40bdeb:	xlat   BYTE PTR ds:[ebx]
  40bdec:	daa    
  40bded:	(bad)  
  40bdee:	mov    bl,0x70
  40bdf0:	or     al,0xe2
  40bdf2:	adc    DWORD PTR [ebx+0x3d458a41],esi
  40bdf8:	push   cs
  40bdf9:	rol    BYTE PTR [eax-0x5d],1
  40bdfc:	mov    ds:0x8b0038d7,eax
  40be01:	or     edi,DWORD PTR [edx]
  40be03:	test   BYTE PTR [esi],0x62
  40be06:	add    ah,BYTE PTR [edx+0x1baf6112]
  40be0c:	mul    dl
  40be0e:	cmp    dh,0xaf
  40be11:	mov    ecx,0x50899825
  40be16:	fst    st(1)
  40be18:	mov    ah,0xf
  40be1a:	pop    esp
  40be1b:	jge    0x40be3d
  40be1d:	repz sbb DWORD PTR [eax],esi
  40be20:	pop    es
  40be21:	clc    
  40be22:	cmp    BYTE PTR [eax+esi*8+0x62],ah
  40be26:	dec    ebx
  40be27:	jmp    0x6f99f0b6
  40be2c:	jno    0x40be9e
  40be2e:	push   0xf89663ad
  40be33:	mov    ds:0xfedc7471,al
  40be38:	sub    eax,DWORD PTR [ebx]
  40be3a:	add    al,0x42
  40be3d:	js     0x40be10
  40be3f:	ds retf 
  40be41:	jmp    0x1bf5434a
  40be46:	push   ecx
  40be47:	fisub  DWORD PTR [esi+0x5002e8eb]
  40be4d:	fdiv   QWORD PTR [edx-0xf7fd252]
  40be53:	outs   dx,DWORD PTR ds:[esi]
  40be54:	jg     0x40bdff
  40be56:	mov    dh,0xc3
  40be58:	aas    
  40be59:	inc    esp
  40be5a:	and    dl,bl
  40be5c:	out    0x28,eax
  40be5e:	push   0xffffff83
  40be60:	cmp    eax,0x9069390d
  40be65:	arpl   WORD PTR [edx-0x49ff6dc4],bx
  40be6b:	xchg   ecx,eax
  40be6c:	dec    ebx
  40be6d:	imul   ebx,esp,0x1d98401b
  40be73:	popa   
  40be74:	jbe    0x40bdff
  40be76:	push   esp
  40be77:	aad    0xa5
  40be79:	inc    edi
  40be7a:	leave  
  40be7b:	pop    ebp
  40be7c:	push   eax
  40be7d:	ins    BYTE PTR es:[edi],dx
  40be7e:	jg     0x40bebe
  40be80:	leave  
  40be81:	ret    
  40be82:	adc    BYTE PTR [eax-0x74],0xf4
  40be86:	add    eax,0xbf4a6593
  40be8b:	enter  0x460,0xb5
  40be8f:	cmp    dh,dl
  40be91:	dec    edi
  40be92:	xor    al,0xd
  40be94:	neg    DWORD PTR [edi]
  40be96:	sub    al,0x5b
  40be98:	mov    ds:0xe374c6a1,eax
  40be9d:	lds    ebx,FWORD PTR [ebx]
  40be9f:	dec    ebx
  40bea0:	gs push esi
  40bea2:	xchg   ebx,eax
  40bea3:	out    dx,eax
  40bea4:	lods   eax,DWORD PTR ds:[esi]
  40bea5:	xor    eax,0x238af006
  40beaa:	sbb    DWORD PTR [ecx-0x2c58bde1],esi
  40beb0:	leave  
  40beb1:	sti    
  40beb2:	mov    dl,0x26
  40beb4:	aas    
  40beb5:	mov    bl,0xa3
  40beb7:	stos   BYTE PTR es:[edi],al
  40beb8:	(bad)  
  40beb9:	out    dx,al
  40beba:	jge    0x40bece
  40bebc:	cmp    eax,0xcbcef039
  40bec1:	inc    ecx
  40bec2:	arpl   WORD PTR [esi],bp
  40bec4:	cli    
  40bec5:	js     0x40bf11
  40bec7:	fcom   QWORD PTR [esi+0x51]
  40beca:	pop    edi
  40becb:	stos   BYTE PTR es:[edi],al
  40becc:	es ss pop edx
  40becf:	inc    eax
  40bed0:	cmp    BYTE PTR [ecx+0x686fea15],ah
  40bed6:	aad    0x3c
  40bed8:	xlat   BYTE PTR ds:[ebx]
  40bed9:	fwait
  40beda:	add    BYTE PTR [esi+0x66],ch
  40bedd:	loope  0x40be9c
  40bedf:	(bad)  [eax]
  40bee1:	imul   eax,eax,0x5b29f800
  40bee7:	adc    al,0xb7
  40bee9:	jmp    0x3b2c:0xc4513aea
  40bef0:	jo     0x40bf55
  40bef2:	sbb    esi,edx
  40bef4:	loopne 0x40bf27
  40bef6:	aam    0xae
  40bef8:	out    0x63,al
  40befa:	mov    esp,DWORD PTR [ebx+0x257254a1]
  40bf00:	dec    esi
  40bf01:	push   0x232ac2d1
  40bf06:	cmp    BYTE PTR [esi+0x50e2bb9a],cl
  40bf0c:	mov    ah,0xc3
  40bf0e:	(bad)  
  40bf0f:	fst    DWORD PTR [ecx-0x7]
  40bf12:	xor    al,0x4
  40bf14:	adc    BYTE PTR [ecx],bh
  40bf16:	pop    es
  40bf17:	aam    0x49
  40bf19:	loopne 0x40bec1
  40bf1b:	test   al,0x5c
  40bf1e:	or     eax,0x9c8bddd1
  40bf23:	in     eax,dx
  40bf24:	sahf   
  40bf25:	es mov dh,cl
  40bf28:	jno    0x40bef3
  40bf2a:	jmp    0x40bf23
  40bf2c:	jbe    0x40bf79
  40bf2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf2f:	mov    bl,0x9b
  40bf31:	or     ch,BYTE PTR [eax+0x67]
  40bf34:	out    dx,eax
  40bf35:	sbb    ch,ch
  40bf37:	sbb    ebx,ebp
  40bf39:	lds    eax,FWORD PTR [ecx+ebp*8]
  40bf3c:	leave  
  40bf3d:	xchg   ecx,eax
  40bf3e:	dec    esp
  40bf3f:	mov    eax,0x14c9af77
  40bf44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf45:	jmp    0x7e57a015
  40bf4a:	into   
  40bf4b:	adc    esp,DWORD PTR [edi+0x3c5afea3]
  40bf51:	mov    edi,DWORD PTR [esp+ebp*2+0x37435256]
  40bf58:	mov    BYTE PTR [ecx-0x2ab6d543],dh
  40bf5e:	fld    QWORD PTR [esi+0x77]
  40bf61:	outs   dx,BYTE PTR ds:[esi]
  40bf62:	into   
  40bf63:	fs inc ebp
  40bf65:	add    al,0x33
  40bf67:	stc    
  40bf68:	in     al,0xd6
  40bf6a:	(bad)  
  40bf6b:	adc    ch,dl
  40bf6d:	cmp    eax,0x9bc8c821
  40bf72:	sub    eax,0x6492862e
  40bf77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf78:	mov    db3,ecx
  40bf7b:	jge    0x40bf85
  40bf7d:	mov    ds:0x817780e7,al
  40bf82:	fdiv   DWORD PTR [esi]
  40bf84:	inc    edi
  40bf85:	loope  0x40bff8
  40bf87:	jae    0x40bf7d
  40bf89:	ins    BYTE PTR es:[edi],dx
  40bf8a:	ins    BYTE PTR es:[edi],dx
  40bf8b:	(bad)  
  40bf8c:	int3   
  40bf8d:	and    DWORD PTR [ecx-0x1b],ebp
  40bf90:	push   0x41
  40bf92:	fadd   QWORD PTR [edx]
  40bf94:	sbb    DWORD PTR [ebp+0x45],ebp
  40bf97:	push   ebx
  40bf98:	pop    edi
  40bf99:	lahf   
  40bf9a:	push   cs
  40bf9b:	push   ebp
  40bf9c:	dec    edi
  40bf9d:	dec    esp
  40bf9e:	inc    eax
  40bf9f:	(bad)  
  40bfa0:	mov    DWORD PTR [eax+eiz*4+0x79b5d744],eax
  40bfa7:	push   esi
  40bfa8:	cdq    
  40bfa9:	mov    al,0x2f
  40bfab:	adc    BYTE PTR [edi],0xfc
  40bfae:	addr16 push 0xd7e2668f
  40bfb4:	jns    0x40bf9f
  40bfb6:	or     esi,DWORD PTR [ecx+0x50151700]
  40bfbc:	push   edi
  40bfbd:	(bad)  
  40bfbe:	shr    BYTE PTR [edi+0x0],1
  40bfc1:	mov    ecx,0xd42facca
  40bfc6:	xchg   edx,eax
  40bfc7:	scas   eax,DWORD PTR es:[edi]
  40bfc8:	test   eax,0x8f630684
  40bfcd:	hlt    
  40bfce:	ins    DWORD PTR es:[edi],dx
  40bfcf:	jmp    0xd9ecb407
  40bfd4:	mov    ds:0x88a8cf46,al
  40bfd9:	sub    BYTE PTR [edi],dl
  40bfdb:	lds    ebp,FWORD PTR [edi-0x47d5a4bb]
  40bfe1:	mov    BYTE PTR [esi],bh
  40bfe3:	dec    ebp
  40bfe4:	out    dx,al
  40bfe5:	inc    esi
  40bfe6:	and    BYTE PTR [ecx-0x312927b1],0x16
  40bfed:	js     0x40bfe7
  40bfef:	mov    bl,0x49
  40bff1:	cmp    esp,DWORD PTR [ecx]
  40bff3:	mov    edx,esi
  40bff5:	pop    edx
  40bff6:	jb     0x40bfe7
  40bff8:	dec    ebp
  40bff9:	mov    WORD PTR [ebx+0x75],fs
  40bffc:	pop    ss
  40bffd:	inc    esp
  40bffe:	sti    
  40bfff:	not    DWORD PTR [esi+0x732a98a6]
  40c005:	adc    eax,0xa21043ec
  40c00a:	mov    dl,0xca
  40c00c:	xchg   ebp,eax
  40c00d:	cmp    bl,dh
  40c00f:	dec    ebp
  40c010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c011:	stc    
  40c012:	add    al,0xfb
  40c014:	pop    edx
  40c015:	lods   eax,DWORD PTR ds:[esi]
  40c016:	and    BYTE PTR [edi+0x37],0x35
  40c01a:	ins    BYTE PTR es:[edi],dx
  40c01b:	mov    edi,0x301ee83b
  40c020:	jae    0x40bfaf
  40c022:	pop    esp
  40c023:	jno    0x40c07a
  40c025:	pop    eax
  40c026:	dec    eax
  40c027:	jge    0x40bfbc
  40c029:	pop    ss
  40c02a:	mov    esp,0x439f38a
  40c02f:	icebp  
  40c030:	push   ebx
  40c031:	aaa    
  40c032:	icebp  
  40c033:	and    ah,BYTE PTR [edi+0x60]
  40c036:	outs   dx,BYTE PTR ds:[esi]
  40c037:	mov    ecx,0x30340c8b
  40c03c:	or     BYTE PTR [edx],dl
  40c03e:	add    esp,edx
  40c040:	mov    dl,BYTE PTR [ecx-0x3a37f9c1]
  40c046:	xor    dh,ch
  40c048:	and    bh,BYTE PTR [edi+0x7a]
  40c04b:	lock jns 0x40c03f
  40c04e:	xor    ebx,edx
  40c050:	adc    BYTE PTR [edi],cl
  40c052:	or     cl,dh
  40c054:	mov    ss,WORD PTR [ebx-0x56855248]
  40c05a:	lods   al,BYTE PTR ds:[esi]
  40c05b:	dec    esi
  40c05c:	pusha  
  40c05d:	cwde   
  40c05e:	stos   BYTE PTR es:[edi],al
  40c05f:	mov    bl,0x2d
  40c061:	fisubr WORD PTR [ebx+0x3f]
  40c064:	fdivr  DWORD PTR [eax]
  40c066:	push   ebx
  40c067:	dec    ebx
  40c068:	push   ecx
  40c069:	push   esp
  40c06a:	rcr    BYTE PTR [edi],0xaa
  40c06d:	and    eax,0xad868654
  40c072:	addr16 mov al,0x64
  40c075:	cmp    bh,BYTE PTR [edi+0xc]
  40c078:	jle    0x40c042
  40c07a:	cmp    BYTE PTR [edx],0x4c
  40c07d:	in     eax,dx
  40c07e:	push   ds
  40c07f:	ins    DWORD PTR es:[edi],dx
  40c080:	or     DWORD PTR [eax-0x6789456e],esp
  40c086:	repnz mov dl,0x61
  40c089:	adc    BYTE PTR [esp+eax*8+0xd2bf056],ch
  40c090:	in     eax,0x54
  40c092:	push   cs
  40c093:	fldpi  
  40c095:	sub    al,BYTE PTR [ecx+0x4359f3ce]
  40c09b:	and    ah,cl
  40c09d:	or     bh,BYTE PTR [esi-0x50]
  40c0a0:	adc    ah,ch
  40c0a2:	into   
  40c0a3:	retf   
  40c0a4:	xchg   BYTE PTR [edi-0x1c326e56],dh
  40c0aa:	into   
  40c0ab:	sbb    eax,0xa677ed29
  40c0b0:	sbb    ebp,ecx
  40c0b2:	sub    cl,ch
  40c0b4:	aad    0x46
  40c0b6:	out    dx,al
  40c0b7:	cmp    al,0x5
  40c0b9:	dec    esp
  40c0ba:	scas   eax,DWORD PTR es:[edi]
  40c0bb:	imul   esp,DWORD PTR [eax-0x70],0x52
  40c0bf:	sub    eax,0x4cbb29aa
  40c0c4:	int    0x9b
  40c0c6:	in     al,dx
  40c0c7:	push   ds
  40c0c8:	jp     0x40c147
  40c0ca:	inc    esp
  40c0cb:	js     0x40c13a
  40c0cd:	jl     0x40c066
  40c0cf:	or     eax,0x60c9d135
  40c0d4:	mov    bl,0x70
  40c0d6:	ss in  al,0x7b
  40c0d9:	test   al,0x26
  40c0db:	out    dx,al
  40c0dc:	shr    BYTE PTR [eax+eax*2+0x50c59f3b],1
  40c0e3:	xlat   BYTE PTR ds:[ebx]
  40c0e4:	push   eax
  40c0e5:	pop    ds
  40c0e6:	in     al,dx
  40c0e7:	add    edx,DWORD PTR [edi+0x10]
  40c0ea:	adc    al,0x29
  40c0ec:	mov    dh,0xd6
  40c0ee:	jg     0x40c11c
  40c0f0:	lods   eax,DWORD PTR ds:[si]
  40c0f2:	pop    edi
  40c0f3:	jns    0x40c0b8
  40c0f5:	ror    esp,0xac
  40c0f8:	jne    0x40c093
  40c0fa:	or     DWORD PTR [ebx+ecx*2+0x4f],esp
  40c0fe:	shl    BYTE PTR [esi+edi*8+0x76],1
  40c102:	push   esp
  40c103:	pushf  
  40c104:	cmp    BYTE PTR [ecx],0x67
  40c107:	fiadd  WORD PTR [ebx+0x2f1c12c1]
  40c10d:	sbb    eax,0xfb6bd335
  40c112:	mov    ecx,0x796e7620
  40c117:	jbe    0x40c158
  40c119:	push   ebx
  40c11a:	add    bh,bh
  40c11c:	mov    ah,BYTE PTR [edx*8+0x6958c050]
  40c123:	jnp    0x40c14d
  40c125:	dec    ebx
  40c126:	jbe    0x40c0e2
  40c128:	iret   
  40c129:	shl    DWORD PTR [ebp+0x7d],1
  40c12c:	leave  
  40c12d:	fcmove st,st(3)
  40c12f:	imul   edx,DWORD PTR [ebp+0x577fc8e3],0x4df360b4
  40c139:	push   eax
  40c13a:	lock jg 0x40c193
  40c13d:	sti    
  40c13e:	push   ds
  40c13f:	fs fmulp st(1),st
  40c142:	repz mov edx,0x98411166
  40c148:	xor    ebx,eax
  40c14a:	imul   ebp,DWORD PTR [ebx+0x27],0xd601d33d
  40c151:	mov    WORD PTR [ebx+0x51],ss
  40c154:	stos   BYTE PTR es:[edi],al
  40c155:	jl     0x40c1c4
  40c157:	(bad)  
  40c158:	xchg   edx,eax
  40c159:	clc    
  40c15a:	popa   
  40c15b:	rcl    edx,0x1b
  40c15e:	pop    ss
  40c15f:	std    
  40c160:	xchg   DWORD PTR [ebx],ebp
  40c162:	stos   BYTE PTR es:[edi],al
  40c163:	hlt    
  40c164:	push   0xe7cf4931
  40c169:	fiadd  DWORD PTR [ebx]
  40c16b:	xor    bh,BYTE PTR es:[edi-0x26]
  40c16f:	fnstcw WORD PTR [ebp-0x3d]
  40c172:	inc    DWORD PTR [ecx]
  40c174:	pop    eax
  40c175:	xor    eax,ecx
  40c177:	sub    BYTE PTR [edx+edx*1],cl
  40c17a:	push   edi
  40c17b:	sbb    ah,BYTE PTR [edx]
  40c17d:	aas    
  40c17e:	or     BYTE PTR [edx-0x20],dh
  40c181:	out    0xaf,al
  40c183:	push   es
  40c184:	sahf   
  40c185:	push   ebp
  40c186:	fcomip st,st(2)
  40c188:	sti    
  40c189:	ins    BYTE PTR es:[edi],dx
  40c18a:	pop    ecx
  40c18b:	push   ecx
  40c18c:	fsubr  QWORD PTR [eax]
  40c18e:	les    edi,FWORD PTR ds:0x96ad0579
  40c194:	dec    edx
  40c195:	std    
  40c196:	xchg   al,bl
  40c198:	sti    
  40c199:	jb     0x40c15a
  40c19b:	and    al,ah
  40c19d:	outs   dx,BYTE PTR ds:[esi]
  40c19e:	shr    DWORD PTR [ebp-0x2a],1
  40c1a1:	xchg   esp,eax
  40c1a2:	rol    bh,1
  40c1a4:	push   edi
  40c1a5:	pop    eax
  40c1a6:	xor    al,0x1c
  40c1a8:	fdivr  DWORD PTR [edx+0x7fa7ab03]
  40c1ae:	out    dx,eax
  40c1af:	or     al,0x3c
  40c1b1:	mov    eax,ds:0x2b3c645d
  40c1b6:	sbb    ah,BYTE PTR [esp+ecx*8+0x58]
  40c1ba:	and    DWORD PTR [esi],esi
  40c1bc:	add    eax,DWORD PTR [edi+edx*4+0x502957be]
  40c1c3:	out    dx,eax
  40c1c4:	std    
  40c1c5:	cmp    al,0x26
  40c1c7:	push   cs
  40c1c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1c9:	adc    ecx,DWORD PTR [esi+edx*8+0x5b]
  40c1cd:	inc    esi
  40c1ce:	xor    dl,BYTE PTR [ebp+0x49]
  40c1d1:	cld    
  40c1d2:	inc    esi
  40c1d3:	sub    BYTE PTR [edx-0x71ca58a2],0x8b
  40c1da:	cli    
  40c1db:	mov    edx,eax
  40c1dd:	or     BYTE PTR [ebx],0x9e
  40c1e0:	fiadd  WORD PTR [eax]
  40c1e2:	sbb    eax,0xc8df507c
  40c1e7:	mov    cl,0xef
  40c1e9:	dec    ebp
  40c1ea:	mov    ds:0xfbce711b,al
  40c1ef:	repz (bad) 
  40c1f1:	push   ecx
  40c1f2:	inc    eax
  40c1f3:	cmp    DWORD PTR [edi],esp
  40c1f5:	pop    edx
  40c1f6:	cld    
  40c1f7:	add    eax,0xa3c25dce
  40c1fc:	mov    dl,0x71
  40c1fe:	gs inc esi
  40c200:	or     eax,0xa4ee270e
  40c205:	or     cl,cl
  40c207:	adc    eax,esp
  40c209:	dec    esp
  40c20a:	gs jle 0x40c270
  40c20d:	out    dx,al
  40c20e:	or     al,0x16
  40c210:	push   ecx
  40c211:	shl    BYTE PTR [edx],0x7a
  40c214:	add    eax,0x74316bb0
  40c219:	fdivr  QWORD PTR [esi+0x65]
  40c21c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c21d:	add    ah,bh
  40c21f:	int    0xbd
  40c221:	cmp    BYTE PTR [eax-0xe4c5965],ah
  40c227:	xchg   esi,eax
  40c228:	mov    cs,WORD PTR [edi-0x54dcb75c]
  40c22e:	mov    dh,bl
  40c230:	push   es
  40c231:	outs   dx,DWORD PTR ds:[esi]
  40c232:	pop    edi
  40c233:	jge    0x40c22c
  40c235:	xlat   BYTE PTR ds:[ebx]
  40c236:	adc    al,0x75
  40c238:	ds (bad) 
  40c23a:	push   ds
  40c23b:	cmp    DWORD PTR [edi+0x3c8f4a09],0xffffffbc
  40c242:	stos   BYTE PTR es:[edi],al
  40c243:	add    ch,BYTE PTR [edi+0x676f286]
  40c249:	mov    esi,0x9df5fdb3
  40c24e:	xor    al,0x47
  40c250:	mov    edi,0x55db340a
  40c255:	aaa    
  40c256:	test   eax,0xf8d5562a
  40c25b:	int3   
  40c25c:	iret   
  40c25d:	test   BYTE PTR [ebp+0x4c],cl
  40c260:	xor    edx,DWORD PTR [edx]
  40c262:	bound  edi,QWORD PTR [ebp-0x7c21f525]
  40c268:	das    
  40c269:	mov    bl,0xd7
  40c26b:	aas    
  40c26c:	mov    ds:0xe1818aa2,al
  40c271:	mov    ah,0xfc
  40c273:	mov    ds:0x8ed2c698,eax
  40c278:	mov    ebp,0xfb67a270
  40c27d:	inc    edi
  40c27e:	sti    
  40c27f:	or     ebp,ebp
  40c281:	pop    es
  40c282:	test   DWORD PTR [eax+0xf],edx
  40c285:	fsub   DWORD PTR [eax]
  40c287:	outs   dx,BYTE PTR ds:[esi]
  40c288:	loop   0x40c2b2
  40c28a:	cmp    dh,BYTE PTR [ecx+0x44b90a9]
  40c290:	cmp    DWORD PTR [esp+ebp*8+0x9],esi
  40c294:	iret   
  40c295:	inc    edx
  40c296:	cmp    dl,BYTE PTR [edi-0x593f4194]
  40c29c:	hlt    
  40c29d:	outs   dx,BYTE PTR ds:[esi]
  40c29e:	mov    dh,BYTE PTR [ecx]
  40c2a0:	cmc    
  40c2a1:	mov    edi,0x20993c7d
  40c2a6:	mov    dl,0xb9
  40c2a8:	jbe    0x40c252
  40c2aa:	dec    ebx
  40c2ab:	lds    ebx,FWORD PTR [ebp-0x19]
  40c2ae:	stos   BYTE PTR es:[edi],al
  40c2af:	outs   dx,BYTE PTR ds:[esi]
  40c2b0:	into   
  40c2b1:	push   ecx
  40c2b2:	les    ecx,FWORD PTR [esi+0x1b46fa21]
  40c2b8:	mov    WORD PTR [edi-0x4366d79f],?
  40c2be:	pop    ecx
  40c2bf:	loopne 0x40c253
  40c2c1:	into   
  40c2c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2c3:	mov    dh,0xe1
  40c2c5:	pushf  
  40c2c6:	vsqrtsd xmm4,xmm1,xmm3
  40c2ca:	sti    
  40c2cb:	mov    bh,0x7c
  40c2cd:	call   0x87a9:0x7d24ad87
  40c2d4:	sti    
  40c2d5:	repz sub dh,BYTE PTR [edx+0x30fae015]
  40c2dc:	mov    DWORD PTR [eax-0x42],ebx
  40c2df:	icebp  
  40c2e0:	jecxz  0x40c266
  40c2e2:	in     al,0x52
  40c2e4:	js     0x40c31a
  40c2e6:	mov    ebx,ss
  40c2e8:	stos   BYTE PTR es:[edi],al
  40c2e9:	inc    ebx
  40c2ea:	or     bh,dl
  40c2ec:	sub    eax,DWORD PTR [eax+0x2acdc52f]
  40c2f2:	sub    BYTE PTR [esi+0x4a],bh
  40c2f5:	ja     0x40c290
  40c2f7:	je     0x40c2ea
  40c2f9:	jns    0x40c375
  40c2fb:	dec    esp
  40c2fc:	mov    eax,ds:0x1f028293
  40c301:	mov    ebx,0xb4588347
  40c306:	mov    eax,ds:0x48de99e6
  40c30b:	jle    0x40c332
  40c30d:	int    0x90
  40c30f:	shr    DWORD PTR [edx-0x7fa23f3],1
  40c315:	in     al,dx
  40c316:	mov    fs,WORD PTR [ebx]
  40c318:	ret    0x4229
  40c31b:	div    DWORD PTR [edx+0x557f6578]
  40c321:	jnp    0x40c2ec
  40c323:	add    al,0x58
  40c325:	or     DWORD PTR [ebx-0x63434947],eax
  40c32b:	test   al,0x32
  40c32d:	pop    ecx
  40c32e:	and    al,0x8d
  40c330:	int    0x30
  40c332:	repz mov ds:0x7e6070e0,eax
  40c338:	xchg   esp,eax
  40c339:	push   cs
  40c33a:	cmp    BYTE PTR [esi],cl
  40c33c:	or     esi,DWORD PTR [esp+edx*4]
  40c33f:	daa    
  40c340:	jmp    0xdc394eda
  40c345:	xor    DWORD PTR [ebx-0x14],esp
  40c348:	and    DWORD PTR [edx-0x7b144322],edx
  40c34e:	lahf   
  40c34f:	jecxz  0x40c3a0
  40c351:	pushf  
  40c352:	or     eax,0xb9a24250
  40c357:	mov    eax,ds:0x5f1fc82c
  40c35c:	les    eax,FWORD PTR [edx-0x70c7e2fe]
  40c362:	repnz fidiv DWORD PTR fs:[ebx-0x765b10ca]
  40c36a:	push   ss
  40c36b:	cdq    
  40c36c:	push   esi
  40c36d:	jecxz  0x40c329
  40c36f:	mov    dl,0x92
  40c371:	rol    ecx,cl
  40c373:	outs   dx,BYTE PTR ds:[esi]
  40c374:	mov    BYTE PTR [ebp+0x6f],dl
  40c377:	sub    al,0x5e
  40c379:	rol    esi,1
  40c37b:	dec    edx
  40c37c:	js     0x40c34e
  40c37e:	dec    ebp
  40c37f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c380:	int    0x2e
  40c382:	cmp    al,0xe4
  40c384:	and    edx,DWORD PTR ds:0x5031a3c6
  40c38a:	mov    ebx,0x569b664b
  40c38f:	out    dx,al
  40c390:	fs jae 0x40c3c4
  40c393:	js     0x40c324
  40c395:	cld    
  40c396:	fnstsw WORD PTR ds:0x86a6be5c
  40c39c:	in     eax,dx
  40c39d:	bound  eax,QWORD PTR [ebx+0xb]
  40c3a0:	ins    BYTE PTR es:[edi],dx
  40c3a1:	push   eax
  40c3a2:	ja     0x40c3c3
  40c3a4:	div    DWORD PTR [edi-0x35]
  40c3a7:	ja     0x40c383
  40c3a9:	mov    ah,0xb7
  40c3ab:	jbe    0x40c38e
  40c3ad:	stos   BYTE PTR es:[edi],al
  40c3ae:	iret   
  40c3af:	inc    edx
  40c3b0:	xchg   esi,eax
  40c3b1:	mov    edi,0x79962193
  40c3b6:	fsubrp st(2),st
  40c3b8:	mov    esi,0x421c4d9f
  40c3bd:	aam    0xf3
  40c3bf:	mov    al,ds:0x7dc4576
  40c3c4:	nop
  40c3c5:	lea    ecx,[ecx]
  40c3c7:	and    eax,0xda730e97
  40c3cc:	sbb    BYTE PTR [edi],0x65
  40c3cf:	out    dx,al
  40c3d0:	fnsave [ebp+ecx*4-0x2c34097e]
  40c3d7:	add    edx,DWORD PTR [edi-0x1c42299d]
  40c3dd:	pop    ecx
  40c3de:	test   DWORD PTR [edi+0x48],ecx
  40c3e1:	mov    al,ds:0xc9eb680b
  40c3e6:	or     al,0x3f
  40c3e8:	pop    ss
  40c3e9:	push   ecx
  40c3ea:	es aad 0x1
  40c3ed:	mov    edx,0xe13d6a77
  40c3f2:	or     eax,0x632dc4ba
  40c3f7:	aaa    
  40c3f8:	adc    BYTE PTR [esi-0x30],dh
  40c3fb:	pop    eax
  40c3fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3fd:	stos   DWORD PTR es:[edi],eax
  40c3fe:	hlt    
  40c3ff:	mov    eax,ds:0x45573e6d
  40c404:	jl     0x40c3e9
  40c406:	push   ebp
  40c407:	sbb    al,0x6e
  40c409:	pop    edx
  40c40a:	arpl   WORD PTR [edi],ax
  40c40c:	mov    ch,0x95
  40c40e:	sbb    eax,esp
  40c410:	jg     0x40c415
  40c412:	jecxz  0x40c464
  40c414:	popf   
  40c415:	mov    eax,ds:0x9f2112c6
  40c41a:	and    ebx,DWORD PTR [edi+0x69]
  40c41d:	xor    ch,dl
  40c41f:	shl    DWORD PTR [edi+edi*1],0xc2
  40c423:	dec    edi
  40c424:	into   
  40c425:	push   ss
  40c426:	dec    edi
  40c427:	sbb    DWORD PTR [edi-0x4f],edx
  40c42a:	test   al,0xd3
  40c42d:	test   al,0x61
  40c42f:	jo     0x40c41a
  40c431:	int3   
  40c432:	jl     0x40c413
  40c434:	stc    
  40c435:	or     eax,0x94329db0
  40c43a:	xchg   ebp,eax
  40c43b:	aas    
  40c43c:	push   esi
  40c43d:	out    0x3f,eax
  40c43f:	rol    DWORD PTR [ecx+0x2f],cl
  40c442:	out    dx,eax
  40c443:	stos   DWORD PTR es:[edi],eax
  40c444:	xor    dl,BYTE PTR [esi+0x11]
  40c447:	push   esi
  40c448:	(bad)  
  40c449:	push   edx
  40c44a:	iret   
  40c44b:	mov    bl,0x58
  40c44d:	jns    0x40c401
  40c44f:	test   ax,0x2a2c
  40c453:	pop    ecx
  40c454:	xchg   edx,eax
  40c455:	mov    ch,0x65
  40c457:	jl     0x40c495
  40c459:	ins    DWORD PTR es:[edi],dx
  40c45a:	dec    edi
  40c45b:	xchg   ebp,eax
  40c45c:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40c45e:	out    dx,al
  40c45f:	pop    es
  40c460:	int3   
  40c461:	sbb    cl,cl
  40c463:	retf   
  40c464:	sbb    al,0x36
  40c466:	cmc    
  40c467:	ja     0x40c3fb
  40c469:	sub    eax,0xd6ea717d
  40c46e:	ins    BYTE PTR es:[edi],dx
  40c46f:	pop    esp
  40c470:	out    dx,al
  40c471:	and    al,BYTE PTR [ebp*2+0x32a1714]
  40c478:	and    BYTE PTR [edx+0x7],dh
  40c47b:	jns    0x40c4f9
  40c47d:	sub    al,0xbd
  40c47f:	fiadd  WORD PTR [esi+eax*8+0x7c0d46a8]
  40c486:	cmc    
  40c487:	lods   al,BYTE PTR cs:[esi]
  40c489:	jnp    0x40c4c9
  40c48b:	or     cl,BYTE PTR [ebp+0x7a]
  40c48e:	dec    esi
  40c48f:	push   ebp
  40c490:	push   esp
  40c491:	je     0x40c421
  40c493:	les    ebp,FWORD PTR [ebx]
  40c495:	push   cs
  40c496:	mov    bh,BYTE PTR [eax]
  40c498:	dec    edx
  40c499:	cdq    
  40c49a:	adc    DWORD PTR [eax-0x335020b1],esi
  40c4a0:	mov    al,ds:0xedb840b7
  40c4a5:	jle    0x40c463
  40c4a7:	in     eax,dx
  40c4a8:	rcr    DWORD PTR [edx+0x5e],0x46
  40c4ac:	mov    bh,0xef
  40c4ae:	xlat   BYTE PTR ds:[ebx]
  40c4af:	jo     0x40c431
  40c4b1:	cdq    
  40c4b2:	xchg   esp,eax
  40c4b3:	jb     0x40c4cf
  40c4b5:	cwde   
  40c4b6:	loope  0x40c48b
  40c4b8:	ds xor edx,edx
  40c4bb:	fild   WORD PTR [esi]
  40c4bd:	jbe    0x40c503
  40c4bf:	xor    dh,cl
  40c4c1:	xchg   esi,eax
  40c4c2:	cli    
  40c4c3:	jp     0x40c45e
  40c4c5:	hlt    
  40c4c6:	xor    BYTE PTR [esi-0x3b4131a1],al
  40c4cc:	mov    ebx,0x84acdd1a
  40c4d1:	sub    ah,BYTE PTR [ebp+0x103b9490]
  40c4d7:	fs jno 0x40c49f
  40c4da:	mov    eax,?
  40c4dc:	sbb    DWORD PTR [edx-0x34],ebx
  40c4df:	dec    esp
  40c4e0:	xor    BYTE PTR [edx-0x5807e082],dl
  40c4e6:	out    dx,al
  40c4e7:	pop    ecx
  40c4e8:	xor    dl,dl
  40c4ea:	pop    edx
  40c4eb:	pop    edi
  40c4ec:	inc    edx
  40c4ed:	pushf  
  40c4ee:	or     esp,ebx
  40c4f0:	jge    0x40c48e
  40c4f2:	scas   al,BYTE PTR es:[edi]
  40c4f3:	add    edi,ebx
  40c4f5:	ins    BYTE PTR es:[edi],dx
  40c4f6:	xor    ebx,DWORD PTR [edx-0x49]
  40c4f9:	cs sub eax,0x5706e17a
  40c4ff:	adc    BYTE PTR [esi+0x10cfc4fe],bl
  40c505:	aaa    
  40c506:	sub    eax,0xa5879466
  40c50b:	mov    ah,0x97
  40c50d:	test   al,0x21
  40c50f:	jno    0x40c4c1
  40c511:	cbw    
  40c513:	scas   eax,DWORD PTR es:[edi]
  40c514:	gs std 
  40c516:	sbb    eax,0x70921582
  40c51b:	rol    BYTE PTR [esi+ecx*2-0x26],1
  40c51f:	unpcklps xmm2,XMMWORD PTR [esi+0x60]
  40c523:	sar    BYTE PTR fs:[edi],0xc9
  40c527:	pop    esp
  40c528:	imul   esi,DWORD PTR [ebx-0x2b],0xb5dc5ec
  40c52f:	mov    bl,0xe8
  40c531:	lock stos BYTE PTR es:[edi],al
  40c533:	iret   
  40c534:	mov    dl,0xf3
  40c536:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c537:	in     eax,0x57
  40c539:	les    ebx,FWORD PTR [eax]
  40c53b:	cld    
  40c53c:	jecxz  0x40c55d
  40c53e:	mov    ecx,0x2149a7e4
  40c543:	jns    0x40c585
  40c545:	sub    BYTE PTR [edi-0x1],0x91
  40c549:	outs   dx,DWORD PTR ds:[esi]
  40c54a:	test   al,0x25
  40c54c:	dec    eax
  40c54d:	push   0x6cccf2e4
  40c552:	pop    esi
  40c553:	neg    BYTE PTR [esi]
  40c555:	jge    0x40c5b2
  40c557:	adc    BYTE PTR [ebx],cl
  40c559:	push   edx
  40c55a:	(bad)  
  40c55b:	shl    dh,1
  40c55d:	mov    esp,0xf0bb7025
  40c562:	pop    eax
  40c563:	add    BYTE PTR [eax+0x41],bl
  40c566:	lods   al,BYTE PTR ds:[esi]
  40c567:	scas   al,BYTE PTR es:[edi]
  40c568:	mov    DWORD PTR [edx],ebp
  40c56a:	add    eax,DWORD PTR [ebx-0x44cc1166]
  40c570:	cmp    DWORD PTR [edi+0x5bda23be],esp
  40c576:	test   ebp,0x77e6cd30
  40c57c:	imul   ebx,DWORD PTR [esi+edx*8-0x44b8e688],0xffffff8c
  40c584:	adc    al,0xcb
  40c586:	jnp    0x40c5c7
  40c588:	cmc    
  40c589:	jnp    0x40c5fa
  40c58b:	data16 fwait
  40c58d:	daa    
  40c58e:	pop    ebx
  40c58f:	or     BYTE PTR [edi],dl
  40c591:	xchg   BYTE PTR [edx+0x1978498b],ch
  40c597:	shr    esp,cl
  40c599:	(bad)  
  40c59a:	jnp    0x40c5b3
  40c59c:	repz mov edi,0x4906af65
  40c5a2:	cdq    
  40c5a3:	arpl   WORD PTR [esp+edi*4+0x53bb0f01],bx
  40c5aa:	jb     0x40c55a
  40c5ac:	cs push ecx
  40c5ae:	adc    DWORD PTR [esp+edx*2],0x72
  40c5b2:	add    cl,BYTE PTR [ebx-0x7]
  40c5b5:	xchg   BYTE PTR [edx-0x4ed9904d],dl
  40c5bb:	(bad)  
  40c5bc:	adc    eax,edx
  40c5be:	clc    
  40c5bf:	in     al,0x70
  40c5c1:	pop    ecx
  40c5c2:	add    al,0xc1
  40c5c4:	loopne 0x40c56c
  40c5c6:	stos   BYTE PTR es:[edi],al
  40c5c7:	out    0xdc,al
  40c5c9:	push   ecx
  40c5ca:	inc    edx
  40c5cb:	mov    cs,WORD PTR [eax]
  40c5cd:	mov    ch,0x3e
  40c5cf:	mov    bh,0xee
  40c5d1:	ds ja  0x40c622
  40c5d4:	xchg   al,al
  40c5d6:	cmovno eax,DWORD PTR [esi+0x297ef129]
  40c5dd:	adc    eax,0xaa741378
  40c5e2:	aaa    
  40c5e3:	mov    edi,0x95d33fcb
  40c5e8:	add    al,0x40
  40c5ea:	pop    ebp
  40c5eb:	ret    
  40c5ec:	daa    
  40c5ed:	cmp    esi,0xffffffe5
  40c5f0:	(bad)  
  40c5f1:	jecxz  0x40c57e
  40c5f3:	pop    edx
  40c5f4:	or     DWORD PTR [eax-0x72],0xebc23415
  40c5fb:	xchg   edx,eax
  40c5fc:	shr    edi,1
  40c5fe:	pop    ebp
  40c5ff:	mov    DWORD PTR [eax+0x24aaa765],ecx
  40c605:	lock into 
  40c607:	cmp    bl,0xa6
  40c60a:	xlat   BYTE PTR ds:[ebx]
  40c60b:	or     cl,BYTE PTR [ecx]
  40c60d:	jae    0x40c5c9
  40c60f:	test   DWORD PTR [esi-0x4e072253],0xaca30831
  40c619:	xchg   edx,eax
  40c61a:	cld    
  40c61b:	inc    esp
  40c61c:	inc    edi
  40c61d:	sbb    eax,0x5382843
  40c622:	les    ebx,FWORD PTR [edi]
  40c624:	pushf  
  40c625:	or     ah,BYTE PTR [ecx+0x71]
  40c628:	out    dx,eax
  40c629:	cmp    dh,cl
  40c62b:	pop    esp
  40c62c:	sub    esp,0x5c
  40c62f:	stos   DWORD PTR es:[edi],eax
  40c630:	pusha  
  40c631:	push   ebp
  40c632:	and    al,0xc1
  40c634:	xor    eax,ecx
  40c636:	lea    eax,[eax+edi*1+0x64e5c0]
  40c63d:	mov    edi,DWORD PTR [ebp+0xc]
  40c640:	xor    edi,ecx
  40c642:	add    edi,edx
  40c644:	imul   eax,edi
  40c647:	mov    edi,DWORD PTR [ebp+0xc]
  40c64a:	xor    edi,ecx
  40c64c:	sub    edi,eax
  40c64e:	mov    eax,DWORD PTR [ebp-0x4]
  40c651:	add    edi,edx
  40c653:	cmp    DWORD PTR [eax],edi
  40c655:	mov    eax,DWORD PTR [ebp-0x4]
  40c658:	mov    edi,DWORD PTR [ebp+0x10]
  40c65b:	jg     0x40c66e
  40c661:	xor    edi,ecx
  40c663:	mov    ebx,esi
  40c665:	sub    ebx,edi
  40c667:	add    DWORD PTR [eax],ebx
  40c669:	jmp    0x40c674
  40c66e:	xor    edi,ecx
  40c670:	add    edi,edx
  40c672:	add    DWORD PTR [eax],edi
  40c674:	mov    eax,DWORD PTR [ebp-0x8]
  40c677:	mov    edi,DWORD PTR [ebp-0x10]
  40c67a:	mov    eax,DWORD PTR [eax]
  40c67c:	xor    edi,ecx
  40c67e:	add    edi,0x3272df
  40c684:	not    edi
  40c686:	and    eax,edi
  40c688:	movsx  di,BYTE PTR [eax+0x1]
  40c68d:	mov    ebx,0x3b50
  40c692:	sub    di,bx
  40c695:	mov    ebx,0x8a8c
  40c69a:	xor    di,bx
  40c69d:	mov    ebx,0x4f86
  40c6a2:	cmp    di,bx
  40c6a5:	jne    0x40c6cd
  40c6ab:	movsx  di,BYTE PTR [eax]
  40c6af:	mov    ebx,0x3b50
  40c6b4:	sub    di,bx
  40c6b7:	mov    ebx,0x8a8c
  40c6bc:	xor    di,bx
  40c6bf:	mov    ebx,0x4e71
  40c6c4:	cmp    di,bx
  40c6c7:	je     0x40c6dd
  40c6cd:	mov    edi,DWORD PTR [ebp-0x10]
  40c6d0:	xor    edi,ecx
  40c6d2:	mov    ebx,esi
  40c6d4:	sub    ebx,edi
  40c6d6:	add    eax,ebx
  40c6d8:	jmp    0x40c688
  40c6dd:	mov    esi,DWORD PTR [ebp-0x14]
  40c6e0:	mov    esi,DWORD PTR [esi]
  40c6e2:	mov    edi,DWORD PTR [eax+0x3c]
  40c6e5:	lea    esi,[edi+esi*8+0x78]
  40c6e9:	mov    esi,DWORD PTR [esi+eax*1]
  40c6ec:	mov    DWORD PTR [ebp-0x8],esi
  40c6ef:	mov    esi,DWORD PTR [ebp+0x8]
  40c6f2:	xor    esi,ecx
  40c6f4:	add    esi,edx
  40c6f6:	mov    DWORD PTR [ebp-0x14],esi
  40c6f9:	mov    esi,DWORD PTR [ebp+0x8]
  40c6fc:	mov    edi,DWORD PTR [ebp-0x8]
  40c6ff:	xor    esi,ecx
  40c701:	add    esi,edx
  40c703:	pop    ebx
  40c704:	cmp    edi,esi
  40c706:	jne    0x40c724
  40c70c:	mov    eax,DWORD PTR [ebp+0xc]
  40c70f:	xor    eax,ecx
  40c711:	mov    ecx,DWORD PTR [ebp-0x8]
  40c714:	add    eax,edx
  40c716:	imul   eax,ecx
  40c719:	mov    DWORD PTR [ebp-0x8],eax
  40c71c:	push   DWORD PTR [ebp+0x18]
  40c71f:	jmp    0x40c778
  40c724:	mov    ecx,DWORD PTR [ebp-0x8]
  40c727:	add    ecx,eax
  40c729:	mov    DWORD PTR [ebp-0x14],ecx
  40c72c:	mov    ecx,DWORD PTR [ebp-0x14]
  40c72f:	mov    ecx,DWORD PTR [ecx+0xc]
  40c732:	movsx  cx,BYTE PTR [ecx+eax*1]
  40c737:	mov    edx,0x3b50
  40c73c:	sub    cx,dx
  40c73f:	mov    edx,0x8a8c
  40c744:	xor    cx,dx
  40c747:	mov    edx,0x4e77
  40c74c:	cmp    cx,dx
  40c74f:	jne    0x40c71c
  40c755:	mov    ecx,DWORD PTR ds:0x42e313
  40c75b:	mov    ecx,DWORD PTR [ecx+0x198]
  40c761:	mov    DWORD PTR [ecx],eax
  40c763:	jmp    0x40c789
  40c768:	mov    ecx,DWORD PTR [ebp+0x18]
  40c76b:	cmp    ecx,0xf89c85b8
  40c771:	jne    0x40c789
  40c777:	push   eax
  40c778:	push   DWORD PTR [ebp+0x14]
  40c77b:	push   DWORD PTR [ebp+0x10]
  40c77e:	push   DWORD PTR [ebp+0xc]
  40c781:	push   DWORD PTR [ebp+0x8]
  40c784:	call   0x409ed5
  40c789:	pop    edi
  40c78a:	pop    esi
  40c78b:	leave  
  40c78c:	ret    0x14
  40c78f:	push   ebp
  40c790:	mov    ebp,esp
  40c792:	sub    esp,0xc
  40c795:	push   esi
  40c796:	mov    esi,DWORD PTR ds:0x41ac40
  40c79c:	mov    ecx,DWORD PTR ds:0x41abdd
  40c7a2:	sub    esi,ecx
  40c7a4:	xor    esi,DWORD PTR [esi+ecx*1]
  40c7a7:	mov    esi,0xf89c85b9
  40c7ac:	sub    ecx,edx
  40c7ae:	mov    DWORD PTR [ebp-0x8],esi
  40c7b1:	sub    DWORD PTR ds:0x42b010,edi
  40c7b7:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  40c7be:	and    DWORD PTR ds:0x42901c,0x0
  40c7c8:	mov    edx,DWORD PTR ds:0x42901c
  40c7ce:	inc    edx
  40c7cf:	mov    DWORD PTR ds:0x42901c,edx
  40c7d5:	cmp    DWORD PTR ds:0x42901c,0x24
  40c7dc:	jne    0x40c7ed
  40c7e2:	push   0x42e127
  40c7e7:	call   DWORD PTR ds:0x42e9cb
  40c7ed:	cmp    DWORD PTR ds:0x42901c,0x18
  40c7f4:	jb     0x40c7c8
  40c7fa:	push   edi
  40c7fb:	mov    eax,eax
  40c7fd:	mov    eax,DWORD PTR [ebp-0x4]
  40c800:	mov    edi,DWORD PTR [ebp-0x8]
  40c803:	mov    ecx,0x7510899
  40c808:	xor    eax,ecx
  40c80a:	sub    edx,0x2378
  40c810:	xor    edi,ecx
  40c812:	adc    DWORD PTR ds:0x429020,0x74b2
  40c81c:	mov    edx,0x3272e0
  40c821:	mov    DWORD PTR ds:0x42901c,0x186b
  40c82b:	add    edi,edx
  40c82d:	add    eax,edx
  40c82f:	imul   eax,edi
  40c832:	mov    DWORD PTR ds:0x42b000,edi
  40c838:	mov    edi,DWORD PTR [ebp+0xc]
  40c83b:	cmp    edi,eax
  40c83d:	je     0x40c8c6
  40c843:	mov    DWORD PTR [ebp-0xc],esi
  40c846:	mov    eax,DWORD PTR [ebp-0xc]
  40c849:	sbb    DWORD PTR ds:0x42b008,0x2a28
  40c853:	mov    esi,DWORD PTR [ebp+0xc]
  40c856:	sub    DWORD PTR ds:0x42b010,0xd18
  40c860:	xor    eax,ecx
  40c862:	lea    eax,[eax*8+0x1939778]
  40c869:	add    DWORD PTR ds:0x42c00c,0x2208
  40c873:	mov    eax,DWORD PTR [esi+eax*1]
  40c876:	mov    DWORD PTR [ebp+0xc],eax
  40c879:	not    esi
  40c87b:	mov    eax,DWORD PTR [ebp-0x4]
  40c87e:	mov    esi,DWORD PTR [ebp-0x8]
  40c881:	or     DWORD PTR ds:0x42d008,0x42c01c
  40c88b:	xor    eax,ecx
  40c88d:	xor    esi,ecx
  40c88f:	sbb    DWORD PTR ds:0x42a008,0x42d00c
  40c899:	add    esi,edx
  40c89b:	add    eax,edx
  40c89d:	imul   eax,esi
  40c8a0:	mov    esi,DWORD PTR [ebp+0xc]
  40c8a3:	cmp    esi,eax
  40c8a5:	je     0x40c8c6
  40c8ab:	mov    eax,DWORD PTR [ebp-0x4]
  40c8ae:	xor    eax,ecx
  40c8b0:	mov    ecx,DWORD PTR [ebp+0xc]
  40c8b3:	add    eax,edx
  40c8b5:	imul   eax,ecx
  40c8b8:	add    eax,DWORD PTR [ebp+0x8]
  40c8bb:	mov    DWORD PTR [ebp+0xc],eax
  40c8be:	mov    eax,DWORD PTR [ebp+0xc]
  40c8c1:	jmp    0x40c8d7
  40c8c6:	mov    eax,DWORD PTR [ebp-0x4]
  40c8c9:	mov    esi,DWORD PTR [ebp-0x8]
  40c8cc:	xor    esi,ecx
  40c8ce:	xor    eax,ecx
  40c8d0:	add    esi,edx
  40c8d2:	add    eax,edx
  40c8d4:	imul   eax,esi
  40c8d7:	pop    edi
  40c8d8:	pop    esi
  40c8d9:	leave  
  40c8da:	ret    0x8
  40c8dd:	push   ebp
  40c8de:	mov    ebp,esp
  40c8e0:	push   ecx
  40c8e1:	add    edx,edx
  40c8e3:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  40c8ea:	adc    ecx,eax
  40c8ec:	mov    eax,DWORD PTR [ebp-0x4]
  40c8ef:	mov    edx,DWORD PTR [ebp+0x10]
  40c8f2:	mov    DWORD PTR ds:0x42b000,0x1c
  40c8fc:	cmp    DWORD PTR ds:0x42b000,0x0
  40c903:	je     0x40c957
  40c909:	cmp    DWORD PTR ds:0x42b000,0x8
  40c910:	jne    0x40c921
  40c916:	push   0x42c000
  40c91b:	call   DWORD PTR ds:0x42e9d3
  40c921:	cmp    DWORD PTR ds:0x42b000,0x9
  40c928:	jne    0x40c93b
  40c92e:	mov    ecx,DWORD PTR ds:0x42b000
  40c934:	dec    ecx
  40c935:	mov    DWORD PTR ds:0x42b000,ecx
  40c93b:	mov    ecx,DWORD PTR ds:0x42b000
  40c941:	dec    ecx
  40c942:	mov    DWORD PTR ds:0x42b000,ecx
  40c948:	jmp    0x40c8fc
  40c94d:	and    DWORD PTR ds:0x42c000,0x7708
  40c957:	mov    ecx,0x7510899
  40c95c:	xor    eax,ecx
  40c95e:	xor    DWORD PTR ds:0x42a018,0x429008
  40c968:	add    eax,0x3272e0
  40c96d:	mov    DWORD PTR [edx],eax
  40c96f:	mov    DWORD PTR ds:0x429018,0x10
  40c979:	cmp    DWORD PTR ds:0x429018,0x0
  40c980:	je     0x40c9d0
  40c986:	cmp    DWORD PTR ds:0x429018,0x4
  40c98d:	jne    0x40c9a8
  40c993:	push   0x42b008
  40c998:	push   0x429024
  40c99d:	push   0x42d000
  40c9a2:	call   DWORD PTR ds:0x42e993
  40c9a8:	cmp    DWORD PTR ds:0x429018,0x5
  40c9af:	jne    0x40c9c0
  40c9b5:	mov    eax,ds:0x429018
  40c9ba:	dec    eax
  40c9bb:	mov    ds:0x429018,eax
  40c9c0:	mov    eax,ds:0x429018
  40c9c5:	dec    eax
  40c9c6:	mov    ds:0x429018,eax
  40c9cb:	jmp    0x40c979
  40c9d0:	mov    eax,DWORD PTR [ebp+0xc]
  40c9d3:	xor    eax,ecx
  40c9d5:	push   esi
  40c9d6:	mov    esi,DWORD PTR [ebp+0x10]
  40c9d9:	mov    edx,0x3272e0
  40c9de:	add    eax,edx
  40c9e0:	mov    DWORD PTR [esi+0x4],eax
  40c9e3:	mov    eax,DWORD PTR [ebp+0x14]
  40c9e6:	mov    esi,DWORD PTR [ebp+0x10]
  40c9e9:	mov    DWORD PTR [esi+0x8],eax
  40c9ec:	mov    eax,DWORD PTR [ebp+0x18]
  40c9ef:	mov    esi,DWORD PTR [ebp+0x10]
  40c9f2:	mov    DWORD PTR [esi+0xc],eax
  40c9f5:	mov    eax,DWORD PTR [ebp+0x1c]
  40c9f8:	mov    esi,DWORD PTR [ebp+0x10]
  40c9fb:	mov    DWORD PTR [esi+0x10],eax
  40c9fe:	mov    eax,DWORD PTR [ebp+0x8]
  40ca01:	xor    eax,ecx
  40ca03:	add    eax,edx
  40ca05:	pop    esi
  40ca06:	leave  
  40ca07:	ret    0x18
  40ca0a:	push   ebp
  40ca0b:	mov    ebp,esp
  40ca0d:	sub    esp,0x9c
  40ca13:	mov    ecx,DWORD PTR [ebp+0x8]
  40ca16:	mov    DWORD PTR ds:0x429004,0x1d
  40ca20:	cmp    DWORD PTR ds:0x429004,0x0
  40ca27:	je     0x40cae1
  40ca2d:	cmp    DWORD PTR ds:0x429004,0x2
  40ca34:	jne    0x40ca4b
  40ca3a:	push   DWORD PTR [ebp-0x10]
  40ca3d:	push   DWORD PTR [ebp-0x24]
  40ca40:	push   0x1cdf
  40ca45:	call   DWORD PTR ds:0x42e997
  40ca4b:	cmp    DWORD PTR ds:0x429004,0x3
  40ca52:	jne    0x40ca66
  40ca58:	xor    eax,eax
  40ca5a:	add    eax,DWORD PTR ds:0x429004
  40ca60:	dec    eax
  40ca61:	mov    ds:0x429004,eax
  40ca66:	xor    eax,eax
  40ca68:	add    eax,DWORD PTR ds:0x429004
  40ca6e:	dec    eax
  40ca6f:	mov    ds:0x429004,eax
  40ca74:	jmp    0x40ca20
  40ca79:	and    DWORD PTR ds:0x42b00c,0x0
  40ca83:	mov    eax,ds:0x42b00c
  40ca88:	inc    eax
  40ca89:	mov    ds:0x42b00c,eax
  40ca8e:	cmp    DWORD PTR ds:0x42b00c,0x6
  40ca95:	jne    0x40cabc
  40ca9b:	push   DWORD PTR [ebp-0x28]
  40ca9e:	push   DWORD PTR [ebp-0xc]
  40caa1:	push   0x42b000
  40caa6:	push   DWORD PTR [ebp-0x20]
  40caa9:	push   0x567e
  40caae:	push   0x641c
  40cab3:	push   DWORD PTR [ebp-0x24]
  40cab6:	call   DWORD PTR ds:0x42e99f
  40cabc:	cmp    DWORD PTR ds:0x42b00c,0x5
  40cac3:	jne    0x40cad4
  40cac9:	mov    eax,ds:0x42b00c
  40cace:	inc    eax
  40cacf:	mov    ds:0x42b00c,eax
  40cad4:	cmp    DWORD PTR ds:0x42b00c,0x15
  40cadb:	jb     0x40ca83
  40cae1:	mov    eax,0x8a8c
  40cae6:	xor    ax,WORD PTR [ecx+0x20]
  40caea:	and    DWORD PTR ds:0x42c008,0x0
  40caf4:	jmp    0x40cb08
  40caf9:	xor    ecx,ecx
  40cafb:	or     ecx,DWORD PTR ds:0x42c008
  40cb01:	inc    ecx
  40cb02:	mov    DWORD PTR ds:0x42c008,ecx
  40cb08:	cmp    DWORD PTR ds:0x42c008,0x14
  40cb0f:	jae    0x40cb9f
  40cb15:	cmp    DWORD PTR ds:0x42c008,0x18
  40cb1c:	jne    0x40cb3d
  40cb22:	push   0x42d00c
  40cb27:	push   DWORD PTR [ebp-0x24]
  40cb2a:	push   0x42e0d9
  40cb2f:	push   0x627f
  40cb34:	push   DWORD PTR [ebp-0x1c]
  40cb37:	call   DWORD PTR ds:0x42e9a3
  40cb3d:	jmp    0x40caf9
  40cb42:	mov    DWORD PTR ds:0x42c010,0x15
  40cb4c:	cmp    DWORD PTR ds:0x42c010,0x0
  40cb53:	je     0x40cb9f
  40cb59:	cmp    DWORD PTR ds:0x42c010,0xa
  40cb60:	jne    0x40cb71
  40cb66:	push   0x42a000
  40cb6b:	call   DWORD PTR ds:0x42e9ab
  40cb71:	cmp    DWORD PTR ds:0x42c010,0xb
  40cb78:	jne    0x40cb8d
  40cb7e:	xor    ecx,ecx
  40cb80:	xor    ecx,DWORD PTR ds:0x42c010
  40cb86:	dec    ecx
  40cb87:	mov    DWORD PTR ds:0x42c010,ecx
  40cb8d:	mov    ecx,DWORD PTR ds:0x42c010
  40cb93:	dec    ecx
  40cb94:	mov    DWORD PTR ds:0x42c010,ecx
  40cb9a:	jmp    0x40cb4c
  40cb9f:	mov    ecx,0x3b50
  40cba4:	sub    DWORD PTR ds:0x42900c,0x429000
  40cbae:	add    ax,cx
  40cbb1:	movzx  eax,ax
  40cbb4:	mov    DWORD PTR ds:0x42b000,0x10
  40cbbe:	cmp    DWORD PTR ds:0x42b000,0x0
  40cbc5:	je     0x40cc00
  40cbcb:	cmp    DWORD PTR ds:0x42b000,0x17
  40cbd2:	jne    0x40cbee
  40cbd8:	push   0x898b
  40cbdd:	push   DWORD PTR [ebp-0x10]
  40cbe0:	push   0x429018
  40cbe5:	push   DWORD PTR [ebp-0xc]
  40cbe8:	call   DWORD PTR ds:0x42e9af
  40cbee:	mov    ecx,DWORD PTR ds:0x42b000
  40cbf4:	dec    ecx
  40cbf5:	mov    DWORD PTR ds:0x42b000,ecx
  40cbfb:	jmp    0x40cbbe
  40cc00:	mov    DWORD PTR [ebp-0x10],eax
  40cc03:	movzx  ecx,BYTE PTR ds:0x42d010
  40cc0a:	or     ecx,DWORD PTR ds:0x42a014
  40cc10:	mov    DWORD PTR ds:0x42d010,ecx
  40cc16:	mov    BYTE PTR [ebp-0x1],0x79
  40cc1a:	lea    eax,[ebp-0x1]
  40cc1d:	and    ecx,DWORD PTR ds:0x42b014
  40cc23:	mov    DWORD PTR [ebp-0xc],eax
  40cc26:	xor    DWORD PTR ds:0x42a00c,edx
  40cc2c:	jmp    0x40efb2
  40cc31:	mov    esp,0xfb9ef6c5
  40cc36:	lea    edx,[ebx+ecx*8+0x3e7be512]
  40cc3d:	mov    edx,0xf877d0e4
  40cc42:	in     eax,0x7a
  40cc44:	jp     0x40cc47
  40cc46:	pop    edi
  40cc47:	jp     0x40ccc3
  40cc49:	dec    eax
  40cc4a:	dec    ecx
  40cc4b:	sbb    ecx,DWORD PTR [esi+0x5c]
  40cc4e:	lods   al,BYTE PTR ds:[esi]
  40cc4f:	xlat   BYTE PTR ds:[ebx]
  40cc50:	rcr    bh,1
  40cc52:	out    dx,al
  40cc53:	fwait
  40cc54:	ins    BYTE PTR es:[edi],dx
  40cc55:	jmp    0x40cc12
  40cc57:	xchg   ecx,eax
  40cc58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc59:	dec    esp
  40cc5a:	xchg   edi,eax
  40cc5b:	aad    0xfc
  40cc5d:	add    BYTE PTR [ecx],bh
  40cc5f:	xchg   DWORD PTR [ecx-0x4873a02a],eax
  40cc65:	cs scas al,BYTE PTR es:[edi]
  40cc67:	jae    0x40cc7a
  40cc69:	pop    es
  40cc6a:	mov    WORD PTR [ebx+0x2e],es
  40cc6d:	outs   dx,BYTE PTR ds:[esi]
  40cc6e:	pop    edi
  40cc6f:	jmp    0x84c91e8f
  40cc74:	arpl   WORD PTR [ecx-0x5017601b],si
  40cc7a:	jae    0x40cc68
  40cc7c:	push   ds
  40cc7d:	(bad)  ss:[edi+0x68241dbc]
  40cc84:	(bad)  
  40cc85:	adc    ebx,edi
  40cc87:	push   0xffffff82
  40cc89:	loopne 0x40cca8
  40cc8b:	add    bh,BYTE PTR [ecx-0x6b1909a2]
  40cc91:	bound  ecx,QWORD PTR [eax-0x54]
  40cc94:	push   0x4
  40cc96:	pop    ss
  40cc97:	adc    eax,0xf3154701
  40cc9c:	mov    cs,WORD PTR gs:[ebx+edi*4]
  40cca0:	push   ss
  40cca1:	out    dx,eax
  40cca2:	sbb    eax,0x78d79037
  40cca7:	adc    eax,0xcf50616f
  40ccac:	(bad)  
  40ccad:	xchg   ecx,eax
  40ccae:	push   edx
  40ccaf:	sbb    ecx,DWORD PTR [edx-0x16]
  40ccb2:	arpl   WORD PTR [esi],cx
  40ccb4:	pop    ebx
  40ccb5:	mov    dl,0xf5
  40ccb7:	fsubp  st(4),st
  40ccb9:	pxor   mm2,QWORD PTR [edi+0x2a]
  40ccbd:	in     al,0x72
  40ccbf:	push   edx
  40ccc0:	mov    bh,0x19
  40ccc2:	ds mov ch,0xfc
  40ccc5:	fcmove st,st(2)
  40ccc7:	mov    ebp,0xa8121e95
  40cccc:	and    DWORD PTR [ebp-0x7ae5a481],0x26
  40ccd3:	push   edi
  40ccd4:	push   0x7bb22067
  40ccd9:	mov    ch,0x4a
  40ccdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccdc:	ret    0x8a3d
  40ccdf:	pop    ds
  40cce0:	(bad)  
  40cce1:	cmp    BYTE PTR [edi],dh
  40cce3:	bound  edi,QWORD PTR [esi]
  40cce5:	inc    esp
  40cce6:	mov    ch,0xa0
  40cce8:	push   ebp
  40cce9:	xchg   DWORD PTR [ecx+0x17],eax
  40ccec:	fst    QWORD PTR [ecx+0x74]
  40ccef:	retf   
  40ccf0:	cs jbe 0x40ccba
  40ccf3:	scas   eax,DWORD PTR es:[edi]
  40ccf4:	icebp  
  40ccf5:	int    0xa0
  40ccf7:	mov    edx,0x8597e924
  40ccfc:	mov    WORD PTR [edi+0x45],ss
  40ccff:	addr16 rcl esi,cl
  40cd02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd03:	xchg   ecx,eax
  40cd04:	adc    esp,DWORD PTR [edi]
  40cd06:	push   ss
  40cd07:	pop    edi
  40cd08:	lea    edi,[edx]
  40cd0a:	inc    edi
  40cd0b:	addr16 mov al,ds:0xc89b
  40cd0f:	adc    DWORD PTR [ebx-0x3d6928c6],eax
  40cd15:	sub    eax,0xc6e99477
  40cd1a:	rol    eax,0xbb
  40cd1d:	ror    BYTE PTR [edi+0x40],1
  40cd20:	js     0x40cd76
  40cd22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd23:	loopne 0x40cd0f
  40cd25:	push   es
  40cd26:	xlat   BYTE PTR ds:[ebx]
  40cd27:	sbb    DWORD PTR [eax-0x4],0x5a875f5b
  40cd2e:	gs or  al,0xc2
  40cd31:	lods   eax,DWORD PTR ds:[esi]
  40cd32:	lods   al,BYTE PTR ds:[esi]
  40cd33:	add    al,0x43
  40cd35:	pop    ss
  40cd36:	test   dh,dh
  40cd38:	aad    0xc0
  40cd3a:	jbe    0x40cd88
  40cd3c:	push   edx
  40cd3d:	and    eax,0x89cd3e2c
  40cd42:	add    al,0x1a
  40cd44:	sar    BYTE PTR ds:0xfd8ab6c6,cl
  40cd4a:	shl    DWORD PTR [edi+edx*1+0x6b],1
  40cd4e:	repnz (bad) 
  40cd50:	mov    dl,0xa0
  40cd52:	es clc 
  40cd54:	outs   dx,DWORD PTR ds:[esi]
  40cd55:	iret   
  40cd56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd57:	(bad)  
  40cd58:	mov    dl,0xf9
  40cd5a:	xchg   ebx,eax
  40cd5b:	inc    eax
  40cd5c:	jo     0x40cd9c
  40cd5e:	jnp    0x40cdc0
  40cd60:	lea    eax,[esp+ebp*4+0x3f6ac36e]
  40cd67:	jmp    0x40cdb0
  40cd69:	mov    BYTE PTR [edi-0x7b],0xd0
  40cd6d:	inc    edi
  40cd6e:	and    BYTE PTR [ecx+0x79252277],cl
  40cd74:	jns    0x40cdc7
  40cd76:	jo     0x40cdbd
  40cd78:	push   ss
  40cd79:	rcl    DWORD PTR [esi-0x77],0x14
  40cd7d:	lea    eax,[edx+ebx*1]
  40cd80:	xor    eax,0xd4bf16df
  40cd85:	adc    ah,BYTE PTR ds:0x264736b9
  40cd8b:	iret   
  40cd8c:	jp     0x40cdf6
  40cd8e:	int3   
  40cd8f:	push   0x32
  40cd91:	jle    0x40cd6e
  40cd93:	out    0x49,eax
  40cd95:	and    ah,dh
  40cd97:	cmp    eax,0x37b5350d
  40cd9c:	std    
  40cd9d:	je     0x40cdb1
  40cd9f:	jnp    0x40cda8
  40cda1:	jg     0x40cd5d
  40cda3:	sub    BYTE PTR [esi-0xf5482be],0x5a
  40cdaa:	imul   eax,DWORD PTR [ebx+edi*8+0x6df1a7b],0x6b99b516
  40cdb5:	cmc    
  40cdb6:	jbe    0x40cdf7
  40cdb8:	mov    esi,0xfd401d6d
  40cdbd:	sbb    edx,ebx
  40cdbf:	dec    edi
  40cdc0:	dec    ebp
  40cdc1:	push   0x9
  40cdc3:	push   edx
  40cdc4:	and    al,0x57
  40cdc6:	push   es
  40cdc7:	jp     0x40cd6f
  40cdc9:	mov    ecx,0xf9d29d8
  40cdce:	push   0xffffff91
  40cdd0:	bound  edx,QWORD PTR [esi+0x77]
  40cdd3:	jbe    0x40cd7b
  40cdd5:	sti    
  40cdd6:	cmp    cl,dl
  40cdd8:	mov    dl,0xd3
  40cdda:	xlat   BYTE PTR ds:[ebx]
  40cddb:	add    al,0xc0
  40cddd:	out    0xd8,al
  40cddf:	xchg   ebp,eax
  40cde0:	jl     0x40ce59
  40cde2:	jb     0x40ce4b
  40cde4:	cmp    al,0xa1
  40cde6:	mov    ds:0xf4b84b90,eax
  40cdeb:	jmp    0x40cdb2
  40cded:	repnz inc edx
  40cdef:	xchg   ebx,eax
  40cdf0:	daa    
  40cdf1:	pop    eax
  40cdf2:	pop    edx
  40cdf3:	add    al,BYTE PTR [edi]
  40cdf5:	jae    0x40ce4c
  40cdf7:	stc    
  40cdf8:	nop
  40cdf9:	call   0x3df93a62
  40cdfe:	enter  0x8ed,0x51
  40ce02:	icebp  
  40ce03:	pop    es
  40ce04:	or     al,0xe3
  40ce06:	pop    ss
  40ce07:	out    0x70,eax
  40ce09:	mov    edi,0xb78aede
  40ce0e:	mov    ds:0x4b5627fb,eax
  40ce13:	call   0x510f1d2c
  40ce18:	clc    
  40ce19:	ret    0x6c2c
  40ce1c:	mov    eax,ds:0xc912633e
  40ce21:	sti    
  40ce22:	call   0xfa1b:0x22dfdbb7
  40ce29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce2a:	mov    cl,0x18
  40ce2c:	sbb    ch,bl
  40ce2e:	mov    al,0x68
  40ce30:	out    0x24,al
  40ce32:	test   BYTE PTR [esi+eiz*2-0x5ef11804],dh
  40ce39:	sbb    al,0x14
  40ce3b:	js     0x40ce33
  40ce3d:	retf   
  40ce3e:	ret    
  40ce3f:	inc    esi
  40ce40:	jb     0x40ce70
  40ce42:	out    dx,eax
  40ce43:	bound  edx,QWORD PTR [ebx]
  40ce45:	inc    ebx
  40ce46:	lods   al,BYTE PTR ds:[esi]
  40ce47:	jo     0x40ce78
  40ce49:	dec    edx
  40ce4a:	aaa    
  40ce4b:	cmp    dh,BYTE PTR [ebp-0x60294993]
  40ce51:	stos   BYTE PTR es:[edi],al
  40ce52:	aad    0xae
  40ce54:	or     bh,BYTE PTR [edx+ecx*4]
  40ce57:	cwde   
  40ce58:	stos   BYTE PTR es:[edi],al
  40ce59:	(bad)  
  40ce5a:	popf   
  40ce5b:	mov    ah,BYTE PTR [ecx+0x3d75a88e]
  40ce61:	mov    eax,0x952f0400
  40ce66:	and    bl,0x8a
  40ce69:	icebp  
  40ce6a:	pop    es
  40ce6b:	into   
  40ce6c:	pop    ecx
  40ce6d:	or     al,0x96
  40ce6f:	aam    0xc6
  40ce71:	push   ebx
  40ce72:	rol    esp,cl
  40ce74:	arpl   si,cx
  40ce76:	mov    BYTE PTR [ebp+0x3eea1669],bh
  40ce7c:	push   cs
  40ce7d:	cmp    DWORD PTR [ebx-0x3f8905ba],edi
  40ce83:	push   ecx
  40ce84:	inc    ebp
  40ce85:	arpl   WORD PTR [esi-0x58],ax
  40ce88:	scas   eax,DWORD PTR es:[edi]
  40ce89:	push   edi
  40ce8a:	and    dh,BYTE PTR ds:0x5af711c9
  40ce90:	mov    eax,ds:0xd298e4b4
  40ce95:	sbb    al,0x9d
  40ce97:	cmp    BYTE PTR [esp+edx*1+0x4c],ch
  40ce9b:	retf   0xca11
  40ce9e:	or     ecx,eax
  40cea0:	mov    ecx,0xac77bcf2
  40cea5:	adc    edi,ebp
  40cea7:	cmc    
  40cea8:	sbb    DWORD PTR [edi+ecx*2],esp
  40ceab:	mov    WORD PTR [eax-0x58],gs
  40ceae:	cmc    
  40ceaf:	xchg   esi,ebp
  40ceb1:	pop    bx
  40ceb3:	inc    ebp
  40ceb4:	or     ebp,edi
  40ceb6:	imul   eax,edx,0x3636c26f
  40cebc:	daa    
  40cebd:	jns    0x40ce40
  40cebf:	enter  0x23e2,0x10
  40cec3:	xor    BYTE PTR [esi],0xb4
  40cec6:	dec    ebp
  40cec7:	jnp    0x40cee8
  40cec9:	mov    eax,0x6720763a
  40cece:	sbb    DWORD PTR [ebx+0x51],ebp
  40ced1:	rcl    DWORD PTR [eax-0x50],0x38
  40ced5:	leave  
  40ced6:	and    al,BYTE PTR [esi]
  40ced8:	(bad)  
  40ced9:	and    eax,0xe8605750
  40cede:	rcl    BYTE PTR [ecx+ebp*2-0x647e8604],0xf3
  40cee6:	inc    eax
  40cee7:	push   es
  40cee8:	mov    BYTE PTR ds:0x62ccef54,bh
  40ceee:	xlat   BYTE PTR ds:[ebx]
  40ceef:	rol    BYTE PTR [esi-0x23dd44ed],1
  40cef5:	imul   esi,DWORD PTR [edi-0x1d],0x7ff49a27
  40cefc:	xchg   esp,eax
  40cefd:	mov    ebx,0xc788205e
  40cf02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf03:	popf   
  40cf04:	das    
  40cf05:	push   0x6ce11a5e
  40cf0a:	dec    ecx
  40cf0b:	push   cs
  40cf0c:	repnz xor ebp,DWORD PTR [eax-0xf869fed]
  40cf13:	fadd   st,st(2)
  40cf15:	inc    ebx
  40cf16:	push   ds
  40cf17:	xchg   edx,eax
  40cf18:	sub    esi,ebx
  40cf1a:	or     esi,edx
  40cf1c:	jae    0x40ceaa
  40cf1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf1f:	inc    eax
  40cf20:	test   eax,edi
  40cf22:	push   esi
  40cf23:	mov    ecx,0x8ddf1cd6
  40cf28:	aad    0x43
  40cf2a:	push   ds
  40cf2b:	xchg   edi,eax
  40cf2c:	mov    ah,0xa2
  40cf2e:	jl     0x40cf41
  40cf30:	(bad)  [ebx+0x5e]
  40cf33:	push   cs
  40cf34:	repnz fld QWORD PTR [eax-0x5f0f6810]
  40cf3b:	mov    eax,ds:0x3f461ee1
  40cf40:	inc    edi
  40cf41:	jne    0x40cf03
  40cf43:	jl     0x40cf52
  40cf45:	and    al,0xc6
  40cf47:	jg     0x40cf4b
  40cf49:	(bad)  [edi-0x43b8b02c]
  40cf4f:	sbb    bh,bl
  40cf51:	dec    edi
  40cf52:	jmp    0x7d3885a9
  40cf57:	es push es
  40cf59:	gs out 0x5a,al
  40cf5c:	std    
  40cf5d:	lods   eax,DWORD PTR ds:[esi]
  40cf5e:	sub    esp,edi
  40cf60:	sub    eax,0x24eba6ec
  40cf65:	mov    ds,WORD PTR [eax+0x365a8c8b]
  40cf6b:	mov    ds:0xdc5cca3d,al
  40cf70:	add    al,0x27
  40cf72:	xor    eax,0xfaf089d6
  40cf77:	inc    ebp
  40cf78:	cmp    esp,DWORD PTR ds:0x63a71313
  40cf7e:	xor    BYTE PTR [edx+0x3d],dl
  40cf81:	dec    ecx
  40cf82:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40cf84:	int    0xe8
  40cf86:	jecxz  0x40cfd4
  40cf88:	inc    eax
  40cf89:	adc    BYTE PTR [edi],ch
  40cf8b:	dec    ecx
  40cf8c:	jecxz  0x40cfcc
  40cf8e:	mov    ecx,0x3ab538d7
  40cf93:	mov    ecx,0x2a46cac8
  40cf98:	out    0x36,eax
  40cf9a:	xchg   DWORD PTR [edx+0x79],ebx
  40cf9d:	and    eax,0x77e2150b
  40cfa2:	(bad)  
  40cfa3:	mov    ebx,DWORD PTR [edx-0x16]
  40cfa6:	mov    BYTE PTR [ecx-0x42],dl
  40cfa9:	inc    esi
  40cfaa:	push   0x6
  40cfac:	loop   0x40cfcd
  40cfae:	idiv   BYTE PTR [eax+ecx*4]
  40cfb1:	stos   BYTE PTR es:[edi],al
  40cfb2:	pushf  
  40cfb3:	pop    eax
  40cfb4:	cli    
  40cfb5:	call   FWORD PTR [ebx-0x70]
  40cfb8:	cmp    eax,0x45b54a39
  40cfbd:	int    0xc
  40cfbf:	push   esi
  40cfc0:	and    BYTE PTR [eax-0x51],cl
  40cfc3:	cs xchg ebp,eax
  40cfc5:	rcr    dh,1
  40cfc7:	scas   eax,DWORD PTR es:[edi]
  40cfc8:	lods   al,BYTE PTR ds:[esi]
  40cfc9:	mov    bh,0xe4
  40cfcb:	xor    ebp,esp
  40cfcd:	jecxz  0x40d038
  40cfcf:	in     eax,dx
  40cfd0:	imul   esp,DWORD PTR [edi+0x5a],0x8874e16b
  40cfd7:	fsubr  DWORD PTR [ebp+0x19eb95a0]
  40cfdd:	xor    DWORD PTR [eax+0x1cc5d291],edi
  40cfe3:	(bad)  
  40cfe4:	lods   al,BYTE PTR ds:[esi]
  40cfe5:	jecxz  0x40d03f
  40cfe7:	jp     0x40cfa7
  40cfe9:	sti    
  40cfea:	mov    ds:0x5c1d4e66,eax
  40cfef:	pop    ss
  40cff0:	mov    cl,0xa1
  40cff2:	and    DWORD PTR [ecx],edi
  40cff4:	inc    eax
  40cff5:	pop    ss
  40cff6:	popf   
  40cff7:	std    
  40cff8:	aam    0xdd
  40cffa:	cmp    esi,DWORD PTR [esp+edx*2+0x32]
  40cffe:	or     BYTE PTR [eax-0x72],bl
  40d001:	lods   al,BYTE PTR ds:[esi]
  40d002:	push   edx
  40d003:	mov    cs,WORD PTR [edx]
  40d005:	rol    DWORD PTR [ecx+ebx*1],0xe9
  40d009:	mov    DWORD PTR [edi+0x52],ecx
  40d00c:	fld    TBYTE PTR [ebp-0x5b]
  40d00f:	in     al,dx
  40d010:	mov    ah,0x87
  40d012:	and    al,0x4c
  40d014:	or     eax,DWORD PTR [ebp-0x1c]
  40d017:	pop    eax
  40d018:	sbb    eax,0xd92b95d1
  40d01d:	fmul   st,st(7)
  40d01f:	xchg   ebp,eax
  40d020:	loope  0x40cfe4
  40d022:	jp     0x40cfb2
  40d024:	loop   0x40d003
  40d026:	aaa    
  40d027:	sub    ebx,edx
  40d029:	and    dl,al
  40d02b:	loopne 0x40cfe1
  40d02d:	pop    ds
  40d02e:	loop   0x40cfe4
  40d030:	mov    ds:0xb0b2aca2,eax
  40d035:	ss push es
  40d037:	mov    DWORD PTR [eax-0x65b42662],ecx
  40d03d:	jno    0x40d041
  40d03f:	lods   eax,DWORD PTR ds:[esi]
  40d040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d041:	jmp    0x3a837eba
  40d046:	in     al,0xa8
  40d048:	fist   WORD PTR [eax+0x35ebcd91]
  40d04e:	and    eax,0x32ca85e0
  40d053:	mov    ah,0x2b
  40d055:	(bad)  
  40d056:	jg     0x40d012
  40d058:	xchg   ebp,eax
  40d059:	arpl   WORD PTR [edx-0x51970335],bp
  40d05f:	sub    edi,DWORD PTR [eax-0x11]
  40d062:	adc    dh,BYTE PTR [edx+esi*2]
  40d065:	jne    0x40d033
  40d067:	or     BYTE PTR [edx+0x79],ch
  40d06a:	adc    dh,ch
  40d06c:	xchg   ebp,eax
  40d06d:	je     0x40d02e
  40d06f:	inc    esi
  40d070:	ins    BYTE PTR es:[edi],dx
  40d071:	cmp    BYTE PTR [ebx+0x2c],dl
  40d074:	mov    edx,0x23e91204
  40d079:	in     eax,dx
  40d07a:	xchg   ecx,eax
  40d07b:	sub    BYTE PTR cs:[di+0x6a62],al
  40d081:	or     DWORD PTR [ebx-0x1fc9481a],ebx
  40d087:	mov    dl,0xe7
  40d089:	or     al,0x32
  40d08b:	adc    eax,0x60af8c30
  40d090:	fld    DWORD PTR [ecx]
  40d092:	or     al,0x56
  40d094:	js     0x40d0a4
  40d096:	cmp    eax,0xba594c5d
  40d09b:	retf   
  40d09c:	pop    eax
  40d09d:	les    ebp,FWORD PTR [edx-0x284e1e5a]
  40d0a3:	jne    0x40d0c9
  40d0a5:	iret   
  40d0a6:	iret   
  40d0a7:	mov    dh,0xd5
  40d0a9:	int3   
  40d0aa:	into   
  40d0ab:	push   edx
  40d0ac:	stos   DWORD PTR es:[edi],eax
  40d0ad:	cli    
  40d0ae:	addr16 cmp eax,0xda0bc70c
  40d0b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0b5:	adc    eax,0x8b3ee042
  40d0ba:	(bad)  
  40d0bb:	repz jp 0x40d06b
  40d0be:	or     DWORD PTR [ebp+0x3eeeca1b],ecx
  40d0c4:	mov    ecx,edx
  40d0c6:	xor    ebp,DWORD PTR [edx]
  40d0c8:	imul   DWORD PTR [ebp+0x46]
  40d0cb:	fidivr WORD PTR [esi]
  40d0cd:	test   al,0x7e
  40d0cf:	mov    eax,ds:0xc46b2a4d
  40d0d4:	aaa    
  40d0d5:	inc    ebp
  40d0d6:	paddq  mm6,QWORD PTR [esp+esi*8+0x38]
  40d0db:	xor    BYTE PTR [ebp-0x70],ah
  40d0de:	fstp   TBYTE PTR ds:0xc0e42ecb
  40d0e4:	adc    al,0xdf
  40d0e6:	std    
  40d0e7:	rol    ecx,0xcf
  40d0ea:	out    0x9b,eax
  40d0ec:	sbb    BYTE PTR [eax-0x61],bh
  40d0ef:	scas   eax,DWORD PTR es:[edi]
  40d0f0:	jne    0x40d112
  40d0f2:	(bad)  
  40d0f4:	imul   BYTE PTR ds:0xda5293e8
  40d0fa:	cmp    al,0x91
  40d0fc:	sbb    bh,dh
  40d0fe:	or     eax,0xeb8d9bda
  40d103:	pop    ebp
  40d104:	in     al,0x28
  40d106:	nop
  40d107:	iret   
  40d108:	xor    ch,BYTE PTR [edx]
  40d10a:	cdq    
  40d10b:	sub    al,0xc4
  40d10d:	pop    ss
  40d10e:	clc    
  40d10f:	fdiv   QWORD PTR [ebx+0x7]
  40d112:	stos   BYTE PTR es:[edi],al
  40d113:	ret    0x7f9b
  40d116:	(bad)  
  40d117:	mov    ebx,0x9dd23a82
  40d11c:	mov    ?,WORD PTR ds:0xa07d533a
  40d122:	sbb    eax,0xa438dd30
  40d127:	xchg   esi,eax
  40d128:	bound  esp,QWORD PTR [edi-0x67]
  40d12b:	rol    DWORD PTR [ebx+ebx*4],cl
  40d12e:	call   0x4195490e
  40d133:	call   0xe32d:0x53333ec5
  40d13a:	adc    eax,0x803380e3
  40d13f:	ja     0x40d105
  40d141:	ficomp DWORD PTR [edx]
  40d143:	mov    ebp,0x5f9bd900
  40d148:	or     al,0xbd
  40d14a:	dec    ecx
  40d14b:	retf   0xd767
  40d14e:	movsx  esp,BYTE PTR [esi+0x2d5c419e]
  40d155:	rcl    cl,1
  40d157:	dec    eax
  40d158:	pop    es
  40d159:	out    dx,al
  40d15a:	int    0x8b
  40d15c:	jmp    0x5c7433f0
  40d161:	bound  eax,QWORD PTR [ebp-0x72]
  40d164:	add    dh,BYTE PTR [ecx]
  40d166:	inc    esi
  40d167:	in     al,dx
  40d168:	cmp    DWORD PTR [eax+0xd],ecx
  40d16b:	in     al,0xc
  40d16d:	sti    
  40d16e:	xor    ebx,DWORD PTR [edi]
  40d170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d171:	inc    esi
  40d172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d173:	mov    DWORD PTR [esi-0x73],esi
  40d176:	jbe    0x40d1d4
  40d178:	xchg   edx,eax
  40d179:	adc    DWORD PTR [edi+ebx*4+0x53],ebp
  40d17d:	or     eax,0xbf348adc
  40d182:	pop    esp
  40d183:	and    eax,0x31c2e528
  40d188:	mov    cl,0xbb
  40d18a:	mov    cl,0xd7
  40d18c:	cs push es
  40d18e:	shl    esi,0x4a
  40d191:	ins    BYTE PTR es:[edi],dx
  40d192:	not    BYTE PTR [esi-0x3e]
  40d195:	push   eax
  40d196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d197:	cdq    
  40d198:	push   DWORD PTR [edi]
  40d19a:	bound  ebp,QWORD PTR [edi+ecx*1+0x7d5511cd]
  40d1a1:	(bad)  [ebp+0x53]
  40d1a4:	cld    
  40d1a5:	sub    al,0xf2
  40d1a7:	fcmovnbe st,st(6)
  40d1a9:	mov    ah,0xd7
  40d1ab:	pop    edi
  40d1ac:	or     al,0x16
  40d1ae:	push   edx
  40d1af:	inc    ebx
  40d1b0:	inc    ecx
  40d1b1:	test   DWORD PTR [ecx+0xe7be18a],esi
  40d1b7:	arpl   sp,dx
  40d1b9:	mov    ch,0x1b
  40d1bb:	mov    edx,ss
  40d1bd:	in     al,dx
  40d1be:	or     eax,0xb8cef49e
  40d1c3:	dec    edi
  40d1c4:	jo     0x69467156
  40d1ca:	xchg   DWORD PTR [esi-0x463d50d5],esi
  40d1d0:	inc    edx
  40d1d1:	ds xchg edx,eax
  40d1d3:	sbb    eax,0x16169e7f
  40d1d8:	mov    esp,0x9a02d3e2
  40d1dd:	push   esi
  40d1de:	and    eax,edi
  40d1e0:	inc    ebp
  40d1e1:	cmp    DWORD PTR [edi+eiz*4],esp
  40d1e4:	mov    gs,ebp
  40d1e6:	mov    ah,0xb1
  40d1e8:	daa    
  40d1e9:	cmp    BYTE PTR [edx],bh
  40d1eb:	mov    edx,0x1d8612d9
  40d1f0:	dec    ecx
  40d1f1:	sti    
  40d1f2:	sbb    bl,BYTE PTR ds:0xf9207dc0
  40d1f8:	shl    DWORD PTR [edi],cl
  40d1fa:	loopne 0x40d204
  40d1fc:	sub    BYTE PTR [edx],0xe5
  40d1ff:	xchg   ebp,eax
  40d200:	inc    ebx
  40d201:	pop    es
  40d202:	sub    al,0xd9
  40d204:	inc    edi
  40d205:	test   DWORD PTR [ebp+0x6a1eda00],edi
  40d20b:	fbstp  TBYTE PTR ds:0xe02b56cd
  40d211:	mov    dl,BYTE PTR [edx-0x31]
  40d214:	mov    ch,0x64
  40d216:	mov    ecx,0xaa175680
  40d21b:	inc    esp
  40d21c:	inc    ebx
  40d21d:	sbb    esp,DWORD PTR ds:0x5f1a69e3
  40d223:	sub    eax,0x876dfff7
  40d228:	or     eax,0x50a2be67
  40d22d:	sub    cl,bh
  40d22f:	scas   al,BYTE PTR es:[edi]
  40d230:	add    ch,BYTE PTR [esi+0x38]
  40d233:	adc    BYTE PTR [edi+0xd],0x51
  40d237:	inc    ebp
  40d238:	cmp    ecx,DWORD PTR [esi]
  40d23a:	sub    eax,0xf534c1d1
  40d23f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d240:	(bad)  
  40d241:	jo     0x40d1d7
  40d243:	adc    edx,DWORD PTR [ebx+0x6a]
  40d246:	pop    ecx
  40d247:	call   0xb7159659
  40d24c:	mov    ch,0x70
  40d24e:	ret    
  40d24f:	ja     0x40d2b7
  40d251:	jg     0x40d240
  40d253:	and    ebp,esi
  40d255:	mov    esp,0x7b27211b
  40d25a:	jne    0x40d21c
  40d25c:	aaa    
  40d25d:	cdq    
  40d25e:	cmp    bh,BYTE PTR [eax-0x36]
  40d261:	pop    edi
  40d262:	nop
  40d263:	call   0x9b3e:0x8e54a397
  40d26a:	pop    esi
  40d26b:	push   edi
  40d26c:	xor    eax,0x5fa8e175
  40d271:	cmp    al,0x66
  40d273:	jno    0x40d2a7
  40d275:	mov    dh,0x8f
  40d277:	jp     0x40d252
  40d279:	inc    ebx
  40d27a:	cs adc eax,0x6f3a8bde
  40d280:	jmp    0x1b4da76e
  40d285:	push   esi
  40d286:	dec    edx
  40d287:	retf   0xbbd8
  40d28a:	sub    DWORD PTR [ebx+esi*2],0xffffffec
  40d28e:	mov    eax,ds:0xa3879e94
  40d293:	adc    BYTE PTR [ecx-0x28],bh
  40d296:	imul   esi,DWORD PTR [esi],0xffffffb9
  40d299:	addr16 mov esp,edi
  40d29c:	into   
  40d29d:	lock pop ecx
  40d29f:	sbb    DWORD PTR [edi+0x5e],esi
  40d2a2:	repnz clc 
  40d2a4:	jg     0x40d2c9
  40d2a6:	imul   edi,ebx,0xffffffd3
  40d2a9:	mov    esi,0xed6cd67
  40d2ae:	jno    0x40d28a
  40d2b0:	inc    DWORD PTR [edx+esi*1]
  40d2b3:	dec    edi
  40d2b4:	ds push edi
  40d2b6:	repz push esi
  40d2b8:	add    DWORD PTR [edi+0x48dbad1],esp
  40d2be:	mul    BYTE PTR [edi]
  40d2c0:	inc    DWORD PTR [ebp-0x69d2e098]
  40d2c6:	fisub  DWORD PTR [edi+0x26c7c214]
  40d2cc:	lds    edx,FWORD PTR [eax-0x38708068]
  40d2d2:	add    BYTE PTR [ebp-0x37],bh
  40d2d5:	daa    
  40d2d6:	mov    bl,0xa2
  40d2d8:	out    0x4f,eax
  40d2da:	fdiv   QWORD PTR [ecx-0x2d2628a6]
  40d2e0:	mov    DWORD PTR [edx-0x30f0f26b],ecx
  40d2e6:	inc    esp
  40d2e7:	dec    edi
  40d2e8:	push   esp
  40d2e9:	hlt    
  40d2ea:	cmp    al,0xa
  40d2ec:	and    ebp,ebp
  40d2ee:	add    ah,BYTE PTR [edx-0x2f]
  40d2f1:	mov    bl,BYTE PTR [ecx]
  40d2f3:	int    0x5a
  40d2f5:	mov    eax,0xc00b93a3
  40d2fa:	in     eax,0xee
  40d2fc:	scas   al,BYTE PTR es:[edi]
  40d2fd:	sbb    esi,DWORD PTR [eax]
  40d2ff:	push   edi
  40d300:	xor    DWORD PTR [edx],esi
  40d302:	pusha  
  40d303:	push   ebp
  40d304:	mov    ecx,0x1ea4eb4
  40d309:	or     ch,BYTE PTR [ebp+0x7a]
  40d30c:	imul   ecx,DWORD PTR ds:0x2539bac,0xffffff94
  40d313:	leave  
  40d314:	or     ah,cl
  40d316:	xor    ebx,DWORD PTR [esp+eiz*8+0x7e]
  40d31a:	pop    esp
  40d31b:	(bad)  
  40d31c:	push   edx
  40d31d:	mov    esp,0xb0c3c1ad
  40d322:	pop    edx
  40d323:	cmc    
  40d324:	jbe    0x40d351
  40d326:	stc    
  40d327:	sahf   
  40d328:	pop    esi
  40d329:	xchg   DWORD PTR [esi+esi*1],eax
  40d32c:	(bad)  
  40d32d:	je     0x40d2d0
  40d32f:	push   cs
  40d330:	lods   al,BYTE PTR ds:[esi]
  40d331:	jns    0x40d2e5
  40d333:	scas   al,BYTE PTR es:[edi]
  40d334:	adc    BYTE PTR [edi+0x6],cl
  40d337:	inc    eax
  40d338:	mov    DWORD PTR [ebx+0x25],ecx
  40d33b:	aad    0xf1
  40d33d:	call   0x71607a3c
  40d342:	inc    edi
  40d343:	(bad)  
  40d344:	test   eax,0x259be028
  40d349:	bnd jl 0x40d2fe
  40d34c:	mov    al,ds:0xe22a451b
  40d351:	sti    
  40d352:	ja     0x40d31a
  40d354:	outs   dx,DWORD PTR ds:[esi]
  40d355:	repz and bh,BYTE PTR [ebp-0x77]
  40d359:	pushf  
  40d35a:	fs jmp 0xd760:0xed6fd033
  40d362:	data16 das 
  40d364:	and    al,0x19
  40d366:	jmp    DWORD PTR [eax]
  40d368:	pusha  
  40d369:	add    BYTE PTR [ecx-0x40],bh
  40d36c:	push   es
  40d36d:	addr16 call 0x3517:0x9931d42f
  40d375:	xchg   esi,eax
  40d376:	mov    ah,0x8b
  40d378:	xlat   BYTE PTR ds:[ebx]
  40d379:	lea    ebp,[edx]
  40d37b:	xlat   BYTE PTR ds:[ebx]
  40d37c:	add    al,0x94
  40d37e:	mul    DWORD PTR [edi-0xb778538]
  40d384:	sahf   
  40d385:	arpl   dx,si
  40d387:	out    dx,al
  40d388:	ds sbb eax,0xc7505047
  40d38e:	and    DWORD PTR [eax+0x4dbd51fe],esi
  40d394:	push   cs
  40d395:	pushf  
  40d396:	(bad)  
  40d397:	hlt    
  40d398:	retf   0x2e94
  40d39b:	les    ecx,FWORD PTR [ebx+0x2dc02060]
  40d3a1:	(bad)  
  40d3a2:	les    eax,FWORD PTR [edx+0x55a83cf1]
  40d3a8:	pop    ecx
  40d3a9:	push   ebx
  40d3aa:	loop   0x40d3b6
  40d3ac:	cs sbb al,0xbd
  40d3af:	adc    al,0x73
  40d3b1:	rcr    DWORD PTR [edx+0x4a],0x4d
  40d3b5:	mov    eax,0xb1822219
  40d3ba:	mov    WORD PTR ds:0xe0e1c777,ss
  40d3c0:	jbe    0x40d3dc
  40d3c2:	fcmovb st,st(5)
  40d3c4:	lods   al,BYTE PTR ds:[esi]
  40d3c5:	push   esi
  40d3c6:	pop    ebx
  40d3c7:	or     eax,0xf6d78bdc
  40d3cc:	sub    al,0x93
  40d3ce:	push   esp
  40d3cf:	aad    0x40
  40d3d1:	rcr    DWORD PTR ss:[ebx-0x25d734a7],cl
  40d3d8:	mov    dl,0x64
  40d3da:	(bad)  
  40d3db:	stos   BYTE PTR es:[edi],al
  40d3dc:	sti    
  40d3dd:	adc    esp,ebp
  40d3df:	stc    
  40d3e0:	hlt    
  40d3e1:	fist   WORD PTR [esi]
  40d3e3:	and    dh,BYTE PTR [edx+0x11]
  40d3e6:	dec    ecx
  40d3e7:	int    0x37
  40d3e9:	std    
  40d3ea:	push   eax
  40d3eb:	push   0x3994d17f
  40d3f0:	call   0x24a:0xc45887de
  40d3f7:	jb     0x40d3b1
  40d3f9:	repz and ah,BYTE PTR cs:[eax+0x418507fc]
  40d401:	jmp    0x40d394
  40d403:	adc    DWORD PTR [esp+ebp*4],ebp
  40d406:	dec    esp
  40d407:	in     eax,dx
  40d408:	dec    ebx
  40d409:	in     al,dx
  40d40a:	leave  
  40d40b:	pop    esi
  40d40c:	fsubrp st(6),st
  40d40e:	ins    DWORD PTR es:[edi],dx
  40d40f:	es (bad) 
  40d411:	dec    edx
  40d412:	xchg   esi,eax
  40d413:	push   eax
  40d414:	lods   al,BYTE PTR ds:[esi]
  40d415:	mov    dh,0x1
  40d417:	out    dx,al
  40d418:	imul   edx,edi,0x1f7214d
  40d41e:	scas   al,BYTE PTR es:[edi]
  40d41f:	add    edi,DWORD PTR [edx-0x609a07a9]
  40d425:	cmp    eax,0x9bb10f68
  40d42a:	and    eax,0xfe853c77
  40d42f:	nop
  40d430:	jmp    0x17daa915
  40d435:	mov    ah,0xb9
  40d437:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d438:	and    edi,DWORD PTR [esi+0x4a7e1b]
  40d43e:	jecxz  0x40d49e
  40d440:	mov    esp,0x386e7085
  40d445:	sub    BYTE PTR [ebx+0x65],bl
  40d448:	out    dx,eax
  40d449:	adc    eax,0xec5038a4
  40d44e:	push   ecx
  40d44f:	xor    al,bl
  40d451:	scas   al,BYTE PTR es:[edi]
  40d452:	out    dx,al
  40d453:	(bad)  
  40d454:	push   esi
  40d455:	xor    BYTE PTR [ebx],0x6e
  40d458:	test   eax,0xc6d7a4a9
  40d45d:	push   cs
  40d45e:	push   ss
  40d45f:	shl    BYTE PTR [esi-0x6c26722b],cl
  40d465:	mov    DWORD PTR [ebx-0x5329e9cc],0x202ce280
  40d46f:	mov    al,BYTE PTR [eax+0x61]
  40d472:	mov    DWORD PTR [ecx+0x1e0e2a57],esp
  40d478:	je     0x40d406
  40d47a:	mov    edi,0xe39dae59
  40d47f:	push   0xcca776ba
  40d484:	dec    ecx
  40d485:	icebp  
  40d486:	jns    0x40d4c6
  40d488:	mov    BYTE PTR [eax],bl
  40d48a:	aas    
  40d48b:	sbb    BYTE PTR [ebp-0x26],0xd9
  40d48f:	jae    0x40d439
  40d491:	arpl   WORD PTR [eax+0x14],dx
  40d494:	pop    ebp
  40d495:	jne    0x40d4b5
  40d497:	dec    ebx
  40d499:	in     al,0x38
  40d49b:	retf   0xf44e
  40d49e:	call   0x38aea2c1
  40d4a3:	cdq    
  40d4a4:	leave  
  40d4a5:	(bad)  
  40d4a6:	xlat   BYTE PTR ds:[ebx]
  40d4a7:	mov    ecx,0xfd2da837
  40d4ac:	scas   al,BYTE PTR es:[edi]
  40d4ad:	add    ecx,esi
  40d4af:	es addr16 push ebp
  40d4b2:	add    ecx,DWORD PTR [eax+0x70d1e659]
  40d4b8:	in     al,0x80
  40d4ba:	add    BYTE PTR [eax],0x37
  40d4bd:	sub    eax,0x259f0437
  40d4c2:	cmp    DWORD PTR [edx-0x76],esp
  40d4c5:	cmp    BYTE PTR [esi+0x17],al
  40d4c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4c9:	jge    0x40d465
  40d4cb:	cmp    BYTE PTR [edi-0x2a],0xbb
  40d4cf:	repnz or BYTE PTR [eax],al
  40d4d2:	and    BYTE PTR [ebx+edi*8],0x11
  40d4d6:	sbb    eax,0xa8c8e0a0
  40d4db:	pusha  
  40d4dc:	mov    ch,0x7f
  40d4de:	pop    esi
  40d4df:	out    0xe6,eax
  40d4e1:	rcr    BYTE PTR [eax+0x4750ac62],1
  40d4e7:	push   0x25fe9643
  40d4ec:	adc    BYTE PTR [edx],al
  40d4ee:	push   ss
  40d4ef:	adc    DWORD PTR [ebx-0x44c18925],edx
  40d4f5:	dec    eax
  40d4f6:	xor    BYTE PTR [eax+0x32ab66f9],ah
  40d4fc:	mov    esp,DWORD PTR [ebx-0x15a4d1e7]
  40d502:	aas    
  40d503:	adc    DWORD PTR [edx],edi
  40d505:	popf   
  40d506:	xchg   DWORD PTR [ecx+esi*1-0x16],edx
  40d50a:	sbb    BYTE PTR [edx],dl
  40d50c:	popa   
  40d50d:	ror    bl,1
  40d50f:	outs   dx,DWORD PTR ds:[esi]
  40d510:	pop    es
  40d511:	inc    edi
  40d512:	push   es
  40d513:	lods   al,BYTE PTR ds:[esi]
  40d514:	js     0xcaddc9c7
  40d51a:	outs   dx,BYTE PTR ds:[esi]
  40d51b:	fidivr WORD PTR [ebx]
  40d51d:	jmp    0xbab65ae2
  40d522:	jb     0x40d4ec
  40d524:	mov    ?,WORD PTR [edi-0x175c04b]
  40d52a:	push   0xfffffff2
  40d52c:	push   ebp
  40d52d:	leave  
  40d52e:	adc    eax,ebx
  40d530:	and    edx,DWORD PTR [ebp+0x71]
  40d533:	fbstp  TBYTE PTR [edi-0x222b9310]
  40d539:	arpl   WORD PTR [ecx],dx
  40d53b:	fwait
  40d53c:	jmp    0x40d553
  40d53e:	dec    edi
  40d53f:	inc    esi
  40d540:	jbe    0x40d5a5
  40d542:	in     al,dx
  40d543:	test   BYTE PTR [ebx],0xc9
  40d546:	pop    eax
  40d547:	in     eax,0xe8
  40d549:	add    al,0xf1
  40d54b:	push   0x6b
  40d54d:	mov    ecx,0xb47c84ce
  40d552:	pop    ebx
  40d553:	loopne 0x40d51a
  40d555:	pop    es
  40d556:	ins    BYTE PTR es:[edi],dx
  40d557:	cmp    bl,0xe8
  40d55a:	aaa    
  40d55b:	aam    0xd5
  40d55d:	dec    ebx
  40d55e:	stos   BYTE PTR es:[edi],al
  40d55f:	ds mov bh,0xf9
  40d562:	pop    eax
  40d563:	sar    DWORD PTR [edx-0x27],1
  40d566:	add    DWORD PTR [ebx+0x42],eax
  40d569:	dec    edi
  40d56a:	ss push cs
  40d56c:	sub    ch,al
  40d56e:	fstp   QWORD PTR [eax-0xb1b3027]
  40d574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d575:	(bad)  
  40d576:	or     esi,DWORD PTR [edx-0x74]
  40d579:	lods   eax,DWORD PTR ds:[esi]
  40d57a:	retf   
  40d57b:	inc    esp
  40d57c:	xor    eax,0x7cac71a5
  40d581:	sub    esp,esp
  40d583:	call   0x8420:0x29b1a69a
  40d58a:	and    DWORD PTR [eax],eax
  40d58c:	test   DWORD PTR [ebp+0x3c],ecx
  40d58f:	jg     0x40d60a
  40d591:	(bad)  
  40d592:	jg     0x40d595
  40d594:	imul   ebx,DWORD PTR [ebx],0x8af3211d
  40d59a:	daa    
  40d59b:	xor    DWORD PTR [ebp+0x44cc4d22],eax
  40d5a1:	mov    ecx,0x7e32305e
  40d5a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5a7:	mov    al,ds:0xacb1816d
  40d5ac:	(bad)  
  40d5ad:	xor    BYTE PTR [ecx-0x536a0e94],ah
  40d5b3:	outs   dx,DWORD PTR ds:[esi]
  40d5b4:	dec    edi
  40d5b5:	cwde   
  40d5b6:	pusha  
  40d5b7:	sbb    DWORD PTR [ecx-0x705f03d6],esp
  40d5bd:	ja     0x40d553
  40d5bf:	(bad)  
  40d5c0:	into   
  40d5c1:	dec    ebx
  40d5c2:	shl    DWORD PTR [esi+edi*8+0x2],cl
  40d5c6:	sbb    bl,BYTE PTR [ebx]
  40d5c8:	jbe    0x40d5a2
  40d5ca:	xadd   DWORD PTR [edx],ebp
  40d5cd:	xor    esp,DWORD PTR [esi+0x3c77a555]
  40d5d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5d4:	clc    
  40d5d5:	cmc    
  40d5d6:	or     BYTE PTR [ecx+0x18],ah
  40d5d9:	jbe    0x40d56d
  40d5db:	call   0x1373b0b2
  40d5e0:	pop    es
  40d5e1:	pop    eax
  40d5e2:	sahf   
  40d5e3:	xchg   ebp,eax
  40d5e4:	jle    0x40d5f6
  40d5e6:	inc    edx
  40d5e7:	shl    DWORD PTR [eax+0x4f],0x66
  40d5eb:	push   esi
  40d5ec:	ds pop ds
  40d5ee:	mov    al,ds:0x328ebcba
  40d5f3:	retf   
  40d5f4:	sbb    al,0x10
  40d5f6:	mov    ch,BYTE PTR [ebp+0x5d]
  40d5f9:	or     edi,DWORD PTR [ecx+eax*2+0x20]
  40d5fd:	je     0x40d60b
  40d5ff:	mov    ebp,0xe6c69689
  40d604:	enter  0xb63d,0x95
  40d608:	pop    ecx
  40d609:	test   BYTE PTR [ebx],ch
  40d60b:	xor    al,0x49
  40d60d:	lock aad 0xe9
  40d610:	mov    DWORD PTR [edx+0x1249fbe1],ebx
  40d616:	lahf   
  40d617:	sbb    bl,dl
  40d619:	pop    esp
  40d61a:	and    BYTE PTR [esi+0xf89cb64],dl
  40d620:	sub    al,0x48
  40d622:	cmp    eax,0x7156fe6e
  40d627:	ss aaa 
  40d629:	xor    cl,BYTE PTR [esi-0x37]
  40d62c:	hlt    
  40d62d:	push   esp
  40d62e:	imul   edx,ebx,0xfb009389
  40d634:	sbb    DWORD PTR [ecx+0x30bbe957],0xffffff93
  40d63b:	xchg   esp,eax
  40d63c:	ds pushf 
  40d63e:	dec    esi
  40d63f:	loop   0x40d68f
  40d641:	xor    al,0xe5
  40d643:	pop    ss
  40d644:	popa   
  40d645:	inc    ebx
  40d646:	call   0xb34a:0x7853fe92
  40d64d:	mov    esi,0x5316a4a
  40d652:	dec    edi
  40d653:	ror    BYTE PTR [esi+esi*1+0x61],1
  40d657:	fnstenv [esi-0x3bf8f749]
  40d65d:	in     al,0x89
  40d65f:	xor    bh,dl
  40d661:	cld    
  40d662:	mov    WORD PTR ds:0xb0004fdb,ss
  40d668:	test   al,0x9
  40d66a:	jge    0x40d6d8
  40d66c:	jns    0x40d6b6
  40d66e:	lods   al,BYTE PTR ds:[esi]
  40d66f:	sub    DWORD PTR [ebx-0x772880e6],esp
  40d675:	ins    DWORD PTR es:[edi],dx
  40d676:	dec    ecx
  40d677:	(bad)  
  40d678:	jmp    0xdbde:0x858dec4a
  40d67f:	xchg   esi,eax
  40d680:	mov    ah,0x26
  40d682:	adc    eax,0xa9218520
  40d687:	cdq    
  40d688:	jecxz  0x40d650
  40d68a:	fbstp  TBYTE PTR [ebp+edx*4-0x52]
  40d68e:	mov    bh,0x36
  40d690:	out    dx,al
  40d691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d693:	hlt    
  40d694:	shl    edx,0xf2
  40d697:	mov    ebp,0x65e8a392
  40d69c:	out    0xdf,eax
  40d69e:	dec    edi
  40d69f:	out    0x20,eax
  40d6a1:	cmp    BYTE PTR [ebx+0x7a21ab34],cl
  40d6a7:	test   eax,0xa4ae473c
  40d6ac:	lods   eax,DWORD PTR ds:[esi]
  40d6ad:	jecxz  0x40d71d
  40d6af:	jbe    0x40d699
  40d6b1:	nop
  40d6b2:	scas   al,BYTE PTR es:[edi]
  40d6b3:	mov    dl,0xff
  40d6b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6b6:	mov    esi,edx
  40d6b8:	add    ah,BYTE PTR [ecx+0x2fe99490]
  40d6be:	rcr    DWORD PTR [ecx+0x57],1
  40d6c1:	and    al,0xb
  40d6c3:	sub    dl,BYTE PTR ss:[edx-0x4abca336]
  40d6ca:	je     0x40d697
  40d6cc:	ror    bh,cl
  40d6ce:	adc    al,0x34
  40d6d0:	and    DWORD PTR ds:0x9db8bfd6,0x433324c0
  40d6da:	mov    bl,0x9a
  40d6dc:	stos   DWORD PTR es:[edi],eax
  40d6dd:	push   cs
  40d6de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6df:	sti    
  40d6e0:	test   al,0x4c
  40d6e2:	dec    ebp
  40d6e3:	(bad)  
  40d6e4:	sbb    ebx,edi
  40d6e6:	loopne 0x40d73c
  40d6e8:	out    dx,al
  40d6e9:	and    DWORD PTR [ebp-0x1994e0dd],edi
  40d6ef:	jns    0x40d6cb
  40d6f1:	cmp    bl,BYTE PTR ds:0x9b5f97ac
  40d6f7:	cdq    
  40d6f8:	je     0x40d6f1
  40d6fa:	nop
  40d6fb:	or     ah,BYTE PTR [esi+ebp*1+0x24f0e4c7]
  40d702:	jbe    0x40d744
  40d704:	pop    ebx
  40d705:	sub    eax,0x4cd8e3f0
  40d70a:	sahf   
  40d70b:	imul   edi,DWORD PTR [ebx-0x6a],0x6e
  40d70f:	lahf   
  40d710:	clc    
  40d711:	xchg   ebp,eax
  40d712:	shl    DWORD PTR [esi+0x49],cl
  40d715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d716:	jns    0x40d731
  40d718:	sbb    eax,0x3a2741b4
  40d71d:	ins    BYTE PTR es:[edi],dx
  40d71e:	sub    eax,0xf04f91f3
  40d723:	sub    dl,BYTE PTR [eax+0x2b]
  40d726:	mov    ds:0xfc7c4ae,al
  40d72b:	xor    eax,0x5663193a
  40d730:	and    DWORD PTR [ebp-0x7a],ebp
  40d733:	xchg   edx,eax
  40d734:	mov    BYTE PTR [esi],bl
  40d736:	fcom   QWORD PTR [esi]
  40d738:	out    0x87,eax
  40d73a:	cmp    eax,0x236cbb9b
  40d73f:	fsubrp st(3),st
  40d741:	mov    ss,WORD PTR [eax+0x1c98093f]
  40d747:	jnp    0x40d7b4
  40d749:	xor    dl,BYTE PTR [eax+0x4a32cb23]
  40d74f:	push   es
  40d750:	es popf 
  40d752:	daa    
  40d753:	jae    0x870d8241
  40d759:	or     eax,0x517d4f51
  40d75e:	lea    esp,[edi-0x76]
  40d761:	jg     0x40d723
  40d763:	fs iret 
  40d765:	sahf   
  40d766:	inc    ebp
  40d767:	xor    eax,DWORD PTR [ebp-0x1]
  40d76a:	aad    0x4
  40d76c:	jmp    0xe25d302e
  40d771:	outs   dx,BYTE PTR ds:[esi]
  40d772:	or     BYTE PTR [edx+0x55fe8d8b],cl
  40d778:	jg     0x40d78a
  40d77a:	or     BYTE PTR [ebx+edx*8],bh
  40d77d:	stc    
  40d77e:	sub    eax,0x32f27637
  40d783:	lea    eax,[edx+esi*1+0x7f4dbb83]
  40d78a:	push   ecx
  40d78b:	mov    ecx,0xb8bf87bc
  40d790:	call   0xfaec0999
  40d795:	sahf   
  40d796:	mov    al,0x21
  40d798:	and    al,0x0
  40d79a:	mov    WORD PTR [eax+edx*8-0x2],?
  40d79e:	cld    
  40d79f:	iret   
  40d7a0:	mov    ch,0x17
  40d7a2:	in     eax,dx
  40d7a3:	nop
  40d7a4:	xchg   ebx,eax
  40d7a5:	inc    esi
  40d7a6:	repz clc 
  40d7a8:	sbb    dh,cl
  40d7aa:	jbe    0x8c19ab65
  40d7b0:	cmp    eax,0x9bf11344
  40d7b5:	je     0x40d80a
  40d7b7:	std    
  40d7b8:	fidiv  DWORD PTR [edi]
  40d7ba:	in     eax,0xde
  40d7bc:	ins    BYTE PTR es:[edi],dx
  40d7bd:	xor    cl,BYTE PTR [edi-0x2e4d94c2]
  40d7c3:	mov    BYTE PTR [eax-0x221fdac7],al
  40d7c9:	test   eax,0xfdba8ebf
  40d7ce:	idiv   BYTE PTR [esi+0x235a7f0e]
  40d7d4:	repz jecxz 0x40d79d
  40d7d7:	mov    es,WORD PTR [eax]
  40d7d9:	dec    eax
  40d7da:	loopne 0x40d7e3
  40d7dc:	mov    eax,0x5e793717
  40d7e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7e2:	test   eax,0x713ee1cd
  40d7e7:	sub    esi,edx
  40d7e9:	mov    eax,ds:0x338e2cc8
  40d7ee:	mov    BYTE PTR [esp+esi*1],ah
  40d7f1:	popa   
  40d7f2:	jae    0x40d805
  40d7f4:	popf   
  40d7f5:	call   0x8765f2b3
  40d7fa:	imul   esi,DWORD PTR [esi+0x45a59d7a],0x41
  40d801:	xchg   BYTE PTR [ecx],ch
  40d803:	in     eax,0x30
  40d805:	or     BYTE PTR [edi],0x3b
  40d808:	repz sti 
  40d80a:	sub    ebx,DWORD PTR [ebp-0x37]
  40d80d:	out    0x26,eax
  40d80f:	adc    eax,0x4f81f4f0
  40d814:	sar    esp,1
  40d816:	add    eax,DWORD PTR [ebp+eax*4+0x4bc501f2]
  40d81d:	push   0xd21f4439
  40d822:	push   cs
  40d823:	push   es
  40d824:	popa   
  40d825:	lds    esi,FWORD PTR [ecx]
  40d827:	jp     0x40d7b4
  40d829:	sbb    BYTE PTR [ecx+ebp*1],bh
  40d82c:	scas   eax,DWORD PTR es:[edi]
  40d82d:	shl    cx,cl
  40d830:	cwde   
  40d831:	cmp    edx,DWORD PTR [ebx+0x67]
  40d834:	les    edi,FWORD PTR [edi+0x44383bd]
  40d83a:	and    ebx,edi
  40d83c:	or     eax,0xc7fd7f99
  40d841:	retf   0x432f
  40d844:	enter  0xc88f,0x41
  40d848:	mov    edx,DWORD PTR [eax-0x37cbb8ff]
  40d84e:	fwait
  40d84f:	adc    BYTE PTR [edi+0x78],ah
  40d852:	mov    eax,ds:0xac57e827
  40d857:	iret   
  40d858:	jnp    0x40d808
  40d85a:	xchg   DWORD PTR [ebx],esi
  40d85c:	cmp    ch,BYTE PTR [edi-0x71dd6b50]
  40d862:	icebp  
  40d863:	imul   eax,DWORD PTR [edi+edi*2-0x352bb3be],0x2f
  40d86b:	pop    ecx
  40d86c:	and    bh,BYTE PTR [eax+0x7614a77e]
  40d872:	add    DWORD PTR [eax-0x41],ebx
  40d875:	xor    al,0x31
  40d877:	pusha  
  40d878:	jecxz  0x40d834
  40d87a:	pop    ebx
  40d87b:	mov    edx,0xdded381a
  40d880:	push   DWORD PTR [ecx]
  40d882:	pop    ss
  40d883:	loopne 0x40d860
  40d885:	cmc    
  40d886:	rcl    BYTE PTR [ebp-0x46f978e3],0x66
  40d88d:	xchg   edx,eax
  40d88e:	inc    edi
  40d88f:	pop    edi
  40d890:	add    eax,0x61fdfdac
  40d895:	or     edi,DWORD PTR [eax+ebp*8]
  40d898:	jg     0x40d857
  40d89a:	dec    esi
  40d89b:	jb     0x40d857
  40d89d:	xchg   ebp,eax
  40d89e:	sti    
  40d89f:	leave  
  40d8a0:	mov    ds:0xe8a8e5d3,eax
  40d8a5:	std    
  40d8a6:	or     eax,0x92be53e8
  40d8ab:	sub    al,0x90
  40d8ad:	jmp    0x40d86b
  40d8af:	arpl   WORD PTR [ebx-0x72],bp
  40d8b2:	jp     0x40d8fb
  40d8b4:	mov    ecx,0x94744cea
  40d8b9:	lods   al,BYTE PTR ds:[esi]
  40d8ba:	cld    
  40d8bb:	ret    0x452e
  40d8be:	(bad)  
  40d8c0:	lahf   
  40d8c1:	test   eax,0x282db845
  40d8c6:	je     0x40d901
  40d8c8:	dec    sp
  40d8ca:	fstp   QWORD PTR [ebx+0x5b37140e]
  40d8d0:	mov    ah,0x97
  40d8d2:	je     0x40d907
  40d8d4:	jnp    0x40d90f
  40d8d6:	adc    eax,0x9e247382
  40d8db:	pop    eax
  40d8dc:	fistp  DWORD PTR [edi+0x47f018b8]
  40d8e2:	into   
  40d8e3:	imul   edi,ebx,0xce8fffe8
  40d8e9:	repnz das 
  40d8eb:	mov    ch,0xd6
  40d8ed:	jge    0x40d8af
  40d8ef:	aad    0xe5
  40d8f1:	bound  edx,QWORD PTR [esp+ecx*1-0x52]
  40d8f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8f6:	and    eax,0xcf57c0be
  40d8fb:	cli    
  40d8fc:	inc    esi
  40d8fd:	sub    al,0xeb
  40d8ff:	jb     0x40d8c2
  40d901:	xchg   ebp,eax
  40d902:	imul   eax,DWORD PTR [esi+eiz*4+0x5e26f434],0xffffff86
  40d90a:	and    DWORD PTR [edi+0x7c03027a],esp
  40d910:	xlat   BYTE PTR ds:[ebx]
  40d911:	xchg   DWORD PTR cs:[edx],edx
  40d914:	gs ins DWORD PTR es:[edi],dx
  40d916:	pushf  
  40d917:	ds lahf 
  40d919:	adc    BYTE PTR ds:0x8dbfa86c,dl
  40d91f:	sub    BYTE PTR [ecx],0x77
  40d922:	loopne 0x40d8f0
  40d924:	sub    BYTE PTR [ebp-0x55],dl
  40d927:	inc    esi
  40d928:	push   esi
  40d929:	sub    ebp,edx
  40d92b:	outs   dx,BYTE PTR ds:[esi]
  40d92c:	rcr    cl,cl
  40d92e:	(bad)  
  40d930:	or     eax,0xea7e276c
  40d935:	add    al,0x47
  40d937:	xchg   ecx,eax
  40d938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d939:	adc    esp,DWORD PTR [ebx+0x2b]
  40d93c:	aas    
  40d93d:	lds    eax,FWORD PTR [eax-0x346fccfe]
  40d943:	nop
  40d944:	stos   DWORD PTR es:[edi],eax
  40d945:	out    dx,al
  40d946:	sbb    al,0xfc
  40d948:	out    dx,eax
  40d949:	sar    DWORD PTR [edx+0x43],cl
  40d94c:	aam    0xf5
  40d94e:	add    BYTE PTR [ecx-0x222a027a],ah
  40d954:	arpl   WORD PTR [edx+0x67f159df],bx
  40d95a:	add    al,0x8d
  40d95c:	(bad)  
  40d95d:	pop    esp
  40d95e:	cmp    ecx,edi
  40d960:	cmp    DWORD PTR [esi+edx*2+0x5283628],edi
  40d967:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d968:	dec    eax
  40d969:	iret   
  40d96a:	cmp    ch,BYTE PTR [edx+0x6335380]
  40d970:	and    al,0x1b
  40d972:	cmp    DWORD PTR [ecx+0x72],esi
  40d975:	mov    edi,0x12ae66e0
  40d97a:	adc    ah,BYTE PTR [esi+edx*2-0x6d]
  40d97e:	bsf    esi,DWORD PTR [ecx+edi*1]
  40d982:	jne    0x40d9ba
  40d984:	jo     0x40d9f8
  40d986:	test   DWORD PTR [edi-0x53],0xd7db7b8c
  40d98d:	inc    edi
  40d98e:	inc    esi
  40d98f:	or     eax,0x48e5a1a4
  40d994:	popa   
  40d995:	ja     0x40d9a0
  40d997:	outs   dx,DWORD PTR ds:[esi]
  40d998:	cmp    DWORD PTR [ecx+0x45],edx
  40d99b:	sbb    DWORD PTR [edi-0x13fe8464],ebx
  40d9a1:	pop    esi
  40d9a2:	dec    edi
  40d9a3:	les    ebp,FWORD PTR [ecx+0x4c968767]
  40d9a9:	(bad)  
  40d9aa:	sbb    edx,DWORD PTR [esi+0x61]
  40d9ad:	je     0x40d953
  40d9af:	jne    0x50c2c436
  40d9b5:	adc    al,0x70
  40d9b7:	repnz pop edi
  40d9b9:	pop    ebp
  40d9ba:	jnp    0x40d9b6
  40d9bc:	xor    al,0xe2
  40d9be:	adc    ebx,DWORD PTR ds:0x65d5708d
  40d9c4:	scas   eax,DWORD PTR es:[edi]
  40d9c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9c6:	in     eax,0x19
  40d9c8:	jge    0x40da1e
  40d9ca:	mov    al,0x26
  40d9cc:	jle    0x40d98e
  40d9ce:	mov    al,0x8a
  40d9d0:	call   0x8201e586
  40d9d5:	call   0x22909f36
  40d9da:	sub    eax,0x96cc729e
  40d9df:	sbb    eax,eax
  40d9e1:	sub    eax,0xfed9fa6
  40d9e6:	enter  0x8e67,0x74
  40d9ea:	pop    eax
  40d9eb:	mov    eax,0x1d726bbc
  40d9f0:	and    DWORD PTR [ecx+0x25],ebx
  40d9f3:	fcomp  st(4)
  40d9f5:	pop    ss
  40d9f6:	inc    ebp
  40d9f7:	sub    DWORD PTR [esi+0x63],0xfffffff8
  40d9fb:	pop    es
  40d9fc:	stos   BYTE PTR es:[edi],al
  40d9fd:	mov    bh,0xac
  40d9ff:	test   DWORD PTR [esi+0x60c68e72],eax
  40da05:	add    BYTE PTR [eax],bl
  40da07:	or     eax,0x33a8da6c
  40da0c:	mov    edx,ss
  40da0e:	add    BYTE PTR [eax-0x3f],dl
  40da11:	and    edx,DWORD PTR [edx]
  40da13:	stc    
  40da14:	xchg   ebx,eax
  40da15:	mov    dh,BYTE PTR [eax]
  40da17:	sbb    eax,0x4e5e77d1
  40da1c:	sub    eax,edx
  40da1e:	ins    BYTE PTR es:[edi],dx
  40da1f:	pop    ebp
  40da20:	aas    
  40da21:	xor    dl,cl
  40da23:	mov    ds:0xfc4210b3,eax
  40da28:	pop    ss
  40da29:	mov    eax,DWORD PTR [esi]
  40da2b:	rol    al,0x5f
  40da2e:	aad    0x56
  40da30:	shr    BYTE PTR [ecx-0x67],1
  40da33:	ret    
  40da34:	and    al,0x4a
  40da36:	cdq    
  40da37:	inc    eax
  40da38:	jae    0x40da6c
  40da3a:	mov    eax,ds:0x3cb5e9fd
  40da3f:	xor    eax,0xb17a9568
  40da44:	pop    ds
  40da45:	jne    0x40da76
  40da47:	add    dh,BYTE PTR [edi]
  40da49:	sar    DWORD PTR [esi-0x12],cl
  40da4c:	sbb    BYTE PTR [esi],cl
  40da4e:	repz fiadd WORD PTR [esi+0x46]
  40da52:	cld    
  40da53:	pop    edx
  40da54:	outs   dx,BYTE PTR ds:[esi]
  40da55:	xchg   ebp,eax
  40da56:	xlat   BYTE PTR ds:[ebx]
  40da57:	addr16 sar bl,cl
  40da5a:	jle    0x40d9f2
  40da5c:	xchg   esp,eax
  40da5d:	lods   al,BYTE PTR ds:[esi]
  40da5e:	push   eax
  40da5f:	jno    0x40d9e7
  40da61:	sub    bl,ch
  40da63:	imul   edx,DWORD PTR [edi+esi*4+0x6fb33c1a],0xe15a538d
  40da6e:	dec    ebp
  40da6f:	mov    bh,0x22
  40da71:	push   ss
  40da72:	cwde   
  40da73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da74:	mov    dl,0x1b
  40da76:	popf   
  40da77:	addr16 repz sub cl,al
  40da7b:	or     DWORD PTR [esi+0x5f7f42a2],0x8d109425
  40da85:	xchg   ebp,eax
  40da86:	mov    ah,0x1c
  40da88:	scas   eax,DWORD PTR es:[edi]
  40da89:	cmp    al,0x6a
  40da8b:	inc    eax
  40da8c:	into   
  40da8d:	adc    esi,esi
  40da8f:	popa   
  40da90:	mov    ebx,0x7c8ee94a
  40da95:	das    
  40da96:	cmp    ebp,ebp
  40da98:	aaa    
  40da99:	addr16 mov ecx,0xde11353a
  40da9f:	xor    dh,BYTE PTR [ebx+0x480ef560]
  40daa5:	sbb    al,0x19
  40daa7:	dec    ecx
  40daa8:	sub    BYTE PTR [esi+0x30],bh
  40daab:	out    dx,al
  40daac:	stc    
  40daad:	popf   
  40daae:	mov    ah,0xb6
  40dab0:	mov    ds:0xd2a98aba,al
  40dab5:	jle    0x40dafd
  40dab7:	fldenv [eax-0x44]
  40daba:	push   ebx
  40dabb:	daa    
  40dabc:	push   ebp
  40dabd:	cld    
  40dabe:	adc    cl,BYTE PTR [ebx+0x1d70e4ee]
  40dac4:	cmc    
  40dac5:	mov    ds:0xdda3345d,eax
  40daca:	sub    al,0x38
  40dacc:	(bad)  
  40dace:	cli    
  40dacf:	mov    edi,0x54517231
  40dad4:	in     eax,dx
  40dad5:	mov    bh,0x2f
  40dad7:	and    DWORD PTR [eax+0x1f34eaaa],eax
  40dadd:	lahf   
  40dade:	arpl   sp,dx
  40dae0:	aaa    
  40dae1:	add    ecx,DWORD PTR [ebp-0x7433ee70]
  40dae7:	cmp    BYTE PTR [ecx+eiz*8],0x65
  40daeb:	pop    eax
  40daec:	std    
  40daed:	sbb    edi,DWORD PTR [edi]
  40daef:	sbb    eax,0xd356ec91
  40daf4:	mov    ds:0x80469ba9,eax
  40daf9:	fsubr  QWORD PTR [esi]
  40dafb:	pop    edx
  40dafc:	pop    ebx
  40dafd:	inc    esp
  40dafe:	mov    WORD PTR [edi+0x3af0e878],?
  40db04:	cdq    
  40db05:	cld    
  40db06:	mov    bh,0x25
  40db08:	push   eax
  40db09:	mov    dh,0xa8
  40db0b:	pop    edi
  40db0c:	xlat   BYTE PTR ds:[ebx]
  40db0d:	add    dh,0x16
  40db10:	cwde   
  40db11:	(bad)  
  40db13:	sub    DWORD PTR [edx-0x69],0xffffffe6
  40db17:	xor    BYTE PTR [edi-0xf9c7886],dl
  40db1d:	dec    ecx
  40db1e:	repz (bad) 
  40db20:	mov    dh,0xad
  40db22:	push   ss
  40db23:	xchg   esi,eax
  40db24:	add    bl,0xaa
  40db27:	pop    ecx
  40db28:	jns    0x40dba5
  40db2a:	ja     0x40db7e
  40db2c:	je     0x40dad8
  40db2e:	cmc    
  40db2f:	dec    ebp
  40db30:	(bad)  
  40db31:	or     eax,0xb9a631f7
  40db36:	nop
  40db37:	leave  
  40db38:	in     al,0x6c
  40db3a:	and    ebp,DWORD PTR [esi-0x22]
  40db3d:	and    ebx,DWORD PTR [ecx+edx*2]
  40db40:	xchg   ebx,eax
  40db41:	jns    0x40dbb1
  40db43:	jmp    0x21eb:0x1014cf3c
  40db4a:	jmp    0x40db75
  40db4c:	stos   BYTE PTR es:[edi],al
  40db4d:	or     esp,ebp
  40db4f:	push   esi
  40db50:	sbb    bh,BYTE PTR [edx-0x3f]
  40db53:	jmp    0xc4d7d51
  40db58:	out    dx,al
  40db59:	mov    DWORD PTR [edx],0xf082e40b
  40db5f:	jmp    0xcbf:0x450bc9e6
  40db66:	inc    eax
  40db67:	fcom   DWORD PTR [edi+0x5f193998]
  40db6d:	cmp    esi,DWORD PTR [esi-0x53]
  40db70:	jmp    0x4a2a:0xf95953b7
  40db77:	push   esp
  40db78:	sub    BYTE PTR [ebx-0x3b76edd6],bh
  40db7e:	mov    al,ds:0x450ab14a
  40db83:	jmp    0x40dbb9
  40db85:	pop    edi
  40db86:	(bad)  
  40db87:	xchg   esi,eax
  40db88:	pop    ebp
  40db89:	pop    edx
  40db8a:	cmp    BYTE PTR [eax],0x2f
  40db8d:	mov    dl,0x61
  40db8f:	push   esp
  40db90:	pop    edi
  40db91:	stos   BYTE PTR es:[edi],al
  40db92:	iret   
  40db93:	mov    dl,0xa6
  40db95:	cmp    eax,DWORD PTR [edx+0x228e7f9d]
  40db9b:	xor    al,0x15
  40db9d:	sbb    dh,ch
  40db9f:	and    esi,ebx
  40dba1:	rol    DWORD PTR [ebx+0x3bc633ce],cl
  40dba7:	mov    dl,0xd0
  40dba9:	data16 jl 0x40dc01
  40dbac:	daa    
  40dbad:	in     eax,0x43
  40dbaf:	jb     0x40dc24
  40dbb1:	fsubrp st(7),st
  40dbb3:	ins    BYTE PTR es:[edi],dx
  40dbb4:	into   
  40dbb5:	xchg   DWORD PTR [edx],ebp
  40dbb7:	xchg   esi,eax
  40dbb8:	inc    edi
  40dbb9:	sti    
  40dbba:	loope  0x40dbb5
  40dbbc:	(bad)  
  40dbbd:	adc    bh,al
  40dbbf:	jp     0x40dc02
  40dbc1:	daa    
  40dbc2:	cli    
  40dbc3:	mov    ch,ah
  40dbc5:	adc    al,0x49
  40dbc7:	jmp    0x38ca9259
  40dbcc:	fs sbb eax,0x36388366
  40dbd2:	xor    eax,DWORD PTR [edx+eiz*8]
  40dbd5:	les    ebx,FWORD PTR [edi+0x4656c117]
  40dbdb:	jl     0x40db89
  40dbdd:	call   0xcf2:0x2c895649
  40dbe4:	mov    ebp,0xff6070da
  40dbe9:	loop   0x40dc1d
  40dbeb:	out    dx,eax
  40dbec:	mov    ds:0xabae263d,al
  40dbf1:	xchg   esp,eax
  40dbf2:	cdq    
  40dbf3:	or     eax,0x2ef3f982
  40dbf8:	xor    al,0xb3
  40dbfa:	loope  0x40db95
  40dbfc:	or     dl,dl
  40dbfe:	xchg   edx,eax
  40dbff:	repnz ins DWORD PTR es:[edi],dx
  40dc01:	sub    BYTE PTR [edi+eax*8],cl
  40dc04:	rol    esi,0x21
  40dc07:	sbb    edx,DWORD PTR ds:0x54bbb197
  40dc0d:	daa    
  40dc0e:	or     BYTE PTR [esi],al
  40dc10:	xorps  xmm4,XMMWORD PTR [esi]
  40dc13:	ror    DWORD PTR [edx],cl
  40dc15:	adc    edi,DWORD PTR [ebx+0x7f]
  40dc18:	jl     0x40dc36
  40dc1a:	jge    0x40dc05
  40dc1c:	add    DWORD PTR [edx+0x5789f13d],edi
  40dc22:	test   DWORD PTR [edi+esi*1],0x393f22ac
  40dc29:	jp     0x40dc7c
  40dc2b:	mov    al,0x86
  40dc2d:	mov    ah,0x92
  40dc2f:	inc    esp
  40dc30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc31:	or     ah,bh
  40dc33:	and    al,BYTE PTR [ecx+0x27]
  40dc36:	loopne 0x40dca4
  40dc38:	scas   al,BYTE PTR es:[edi]
  40dc39:	inc    esp
  40dc3a:	jge    0x40dbde
  40dc3c:	jmp    0x40dc35
  40dc3e:	and    cl,bh
  40dc40:	loop   0x40dc26
  40dc42:	xchg   edx,eax
  40dc43:	pop    es
  40dc44:	bound  ecx,QWORD PTR [ebx+0x4b]
  40dc47:	inc    ebp
  40dc48:	imul   esp,esp,0x65
  40dc4b:	and    eax,0x86537495
  40dc50:	sub    DWORD PTR [ecx-0x1b],ebx
  40dc53:	into   
  40dc54:	pop    ecx
  40dc55:	xor    esi,esp
  40dc57:	sbb    al,0xf6
  40dc59:	es xchg ebx,eax
  40dc5b:	mov    cl,0x60
  40dc5d:	mov    bl,0xea
  40dc5f:	fdivr  QWORD PTR fs:[ebx]
  40dc62:	popa   
  40dc63:	add    BYTE PTR [eax],bh
  40dc65:	cmp    DWORD PTR [edx],0xcb71c2c7
  40dc6b:	(bad)  
  40dc6c:	xchg   edi,eax
  40dc6d:	and    edi,DWORD PTR [ebx-0x5e]
  40dc70:	pusha  
  40dc71:	mov    eax,0x10587bb7
  40dc76:	or     edx,DWORD PTR [esi]
  40dc78:	add    esp,esi
  40dc7a:	jge    0x40dc30
  40dc7c:	es push cs
  40dc7e:	and    ah,BYTE PTR [esi]
  40dc80:	push   es
  40dc81:	ins    DWORD PTR es:[edi],dx
  40dc82:	lea    edi,[edi+0x4adc510]
  40dc88:	scas   al,BYTE PTR es:[edi]
  40dc89:	or     al,0x87
  40dc8b:	fnstsw WORD PTR [ecx+0x1b06b2ad]
  40dc91:	sbb    BYTE PTR ds:0xf54e44fc,dh
  40dc97:	xor    ecx,DWORD PTR [edi+0x2e4f75a7]
  40dc9d:	les    ecx,FWORD PTR [esi+ebp*8]
  40dca0:	fyl2xp1 
  40dca2:	cld    
  40dca3:	loope  0x40dc7b
  40dca5:	imul   eax,DWORD PTR [edi-0x4f],0x5f93b424
  40dcac:	int3   
  40dcad:	inc    esi
  40dcae:	out    dx,al
  40dcaf:	(bad)  [edx-0x4454a49b]
  40dcb5:	fdiv   DWORD PTR [eax+0xce3b3e8]
  40dcbb:	mov    dh,0x52
  40dcbd:	mov    ebx,0xd4e4c7b9
  40dcc2:	and    edi,eax
  40dcc4:	out    dx,eax
  40dcc5:	mov    ds:0xe57c13ef,al
  40dcca:	inc    edx
  40dccb:	xor    eax,0x786e3fb4
  40dcd0:	or     BYTE PTR [ecx+0x13],ch
  40dcd3:	inc    edi
  40dcd4:	adc    DWORD PTR [edx-0x7f],0x2df0806
  40dcdb:	xchg   ebx,eax
  40dcdc:	cmp    eax,0x75561652
  40dce1:	push   edi
  40dce2:	or     eax,0x93562b91
  40dce7:	inc    ebp
  40dce8:	sub    DWORD PTR [edx+0x5de3ab9a],ebx
  40dcee:	cmp    al,0xa7
  40dcf0:	adc    eax,0x9e2ad02b
  40dcf5:	sub    DWORD PTR [ecx-0x1d],esi
  40dcf8:	cmp    dl,BYTE PTR [edx-0x6d]
  40dcfb:	in     eax,dx
  40dcfc:	pop    eax
  40dcfd:	clc    
  40dcfe:	push   ds
  40dcff:	test   edi,0x210bf245
  40dd05:	in     eax,dx
  40dd06:	xor    esp,edx
  40dd08:	lods   eax,DWORD PTR ds:[esi]
  40dd09:	cs pop ecx
  40dd0b:	push   edx
  40dd0c:	ss cld 
  40dd0e:	mov    ecx,0x2d515303
  40dd13:	jb     0x40dd75
  40dd15:	inc    edx
  40dd16:	pop    eax
  40dd17:	jb     0x40dcbc
  40dd19:	xor    ch,dl
  40dd1b:	inc    ecx
  40dd1c:	mov    esp,0x2da28f71
  40dd21:	xchg   esi,eax
  40dd22:	addr16 fcmovnbe st,st(4)
  40dd25:	jge    0x40dd89
  40dd27:	xor    eax,0xe0f1ad7c
  40dd2c:	mov    edx,0xd9bcaae7
  40dd31:	or     eax,DWORD PTR [edi-0x1a]
  40dd34:	mov    eax,ds:0xdcd02525
  40dd39:	repnz pop ecx
  40dd3b:	pusha  
  40dd3c:	sub    dh,bh
  40dd3e:	fsubr  DWORD PTR [edx+0x54741bb5]
  40dd44:	(bad)  [ecx-0xb125ed2]
  40dd4a:	xchg   ecx,eax
  40dd4b:	lods   al,BYTE PTR ds:[esi]
  40dd4c:	ins    BYTE PTR es:[edi],dx
  40dd4d:	sub    ah,BYTE PTR [esi]
  40dd4f:	out    0xa6,al
  40dd51:	test   DWORD PTR [edx],edi
  40dd53:	push   0xffffff91
  40dd55:	popf   
  40dd56:	cdq    
  40dd57:	out    0x21,eax
  40dd59:	cld    
  40dd5a:	jecxz  0x40dce4
  40dd5c:	lods   al,BYTE PTR ds:[esi]
  40dd5d:	int3   
  40dd5e:	add    edx,DWORD PTR [ecx]
  40dd60:	mov    BYTE PTR [edi+ebp*1-0x22],bh
  40dd64:	retf   0x91b4
  40dd67:	lds    ebp,FWORD PTR [ebp-0x2d0acdbf]
  40dd6d:	mov    esp,0xae48115d
  40dd72:	xor    ecx,DWORD PTR [esi]
  40dd74:	inc    esp
  40dd75:	xor    al,0x8a
  40dd77:	xchg   DWORD PTR [ebx+0x4c],eax
  40dd7a:	xchg   edi,eax
  40dd7b:	pop    ebx
  40dd7c:	dec    esi
  40dd7d:	push   cs
  40dd7e:	popf   
  40dd7f:	dec    esi
  40dd80:	icebp  
  40dd81:	fwait
  40dd82:	icebp  
  40dd83:	pop    es
  40dd84:	cmc    
  40dd85:	imul   ebx,esi,0xed5bbf45
  40dd8b:	sti    
  40dd8c:	mov    dh,0x1c
  40dd8e:	mov    ds,WORD PTR ds:0x1d536598
  40dd94:	aam    0xbf
  40dd96:	inc    esi
  40dd97:	push   esp
  40dd98:	cld    
  40dd99:	push   eax
  40dd9a:	jle    0x40dd22
  40dd9c:	sub    BYTE PTR [eax-0xf8a2657],bl
  40dda2:	mov    edi,0x558deb98
  40dda7:	xor    eax,0x90191c84
  40ddac:	fild   DWORD PTR [ebx+0xe]
  40ddaf:	inc    esp
  40ddb0:	jae    0x40de2a
  40ddb2:	call   0xa2ce08f
  40ddb7:	mov    esi,0x9d38c004
  40ddbc:	adc    BYTE PTR [edx],al
  40ddbe:	fist   WORD PTR [edx-0x68]
  40ddc1:	shr    DWORD PTR [ebx],1
  40ddc3:	cli    
  40ddc4:	jle    0x40de1f
  40ddc6:	mov    dl,BYTE PTR [esi+0x14]
  40ddc9:	pop    esp
  40ddca:	jecxz  0x40de4a
  40ddcc:	ficom  WORD PTR [esi]
  40ddce:	ret    
  40ddcf:	mov    fs,esi
  40ddd1:	mov    eax,0xa2473bfa
  40ddd6:	ror    BYTE PTR [edi+0x2e],cl
  40ddd9:	push   edi
  40ddda:	push   ss
  40dddb:	sub    dh,ch
  40dddd:	mov    cl,0x6
  40dddf:	inc    esp
  40dde0:	jae    0x40dd84
  40dde2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dde3:	add    ch,BYTE PTR [esi]
  40dde5:	out    dx,al
  40dde6:	outs   dx,BYTE PTR ds:[esi]
  40dde7:	xchg   ecx,eax
  40dde8:	ret    
  40dde9:	in     eax,0xfb
  40ddeb:	push   0x90e9cf67
  40ddf0:	dec    edx
  40ddf1:	dec    ebp
  40ddf2:	push   edi
  40ddf3:	(bad)  
  40ddf4:	mov    ds:0x198b7328,al
  40ddf9:	test   BYTE PTR [ebx-0x3593e548],ch
  40ddff:	int    0x59
  40de01:	repnz aad 0x8c
  40de04:	scas   eax,DWORD PTR es:[edi]
  40de05:	or     edx,DWORD PTR [ecx-0x5be2b117]
  40de0b:	sbb    edx,ecx
  40de0d:	mov    dl,0x14
  40de0f:	xchg   DWORD PTR [ecx-0x5228ddb2],edx
  40de15:	sub    al,BYTE PTR [edx-0x6c]
  40de18:	mov    eax,ds:0x76e616e6
  40de1d:	dec    esi
  40de1e:	pop    edx
  40de1f:	int    0x10
  40de21:	push   ebp
  40de22:	mov    ds:0x7743ada8,al
  40de27:	(bad)  
  40de28:	xchg   ebp,eax
  40de29:	dec    esi
  40de2a:	sub    al,0x2e
  40de2c:	in     al,0x3
  40de2e:	arpl   cx,ax
  40de30:	jnp    0x40de9d
  40de32:	or     bl,0x38
  40de35:	cmc    
  40de36:	dec    eax
  40de37:	pop    ebx
  40de38:	scas   eax,DWORD PTR es:[edi]
  40de39:	add    DWORD PTR [edx],0x77
  40de3c:	popa   
  40de3d:	ficom  WORD PTR [edx+edx*1-0x2a898dc9]
  40de44:	data16 scas al,BYTE PTR es:[edi]
  40de46:	adc    eax,0x75405c47
  40de4b:	add    eax,0x78ac23ab
  40de50:	jl     0x40dddc
  40de52:	jmp    0xbc20:0xcb3a46c6
  40de59:	gs pop es
  40de5b:	pop    es
  40de5c:	inc    ecx
  40de5d:	fisubr WORD PTR [eax]
  40de5f:	xchg   edi,eax
  40de60:	or     edi,DWORD PTR [ecx*4+0x504536e4]
  40de67:	sbb    al,0x48
  40de69:	inc    ebp
  40de6a:	sahf   
  40de6b:	jl     0x40ded5
  40de6d:	xor    DWORD PTR [esi],ecx
  40de6f:	pop    ecx
  40de70:	sti    
  40de71:	ins    BYTE PTR es:[edi],dx
  40de72:	(bad)  
  40de73:	outs   dx,DWORD PTR ds:[esi]
  40de74:	rcl    BYTE PTR [esi+0x3a530039],0xfb
  40de7b:	fs dec ebp
  40de7d:	iret   
  40de7e:	push   cs
  40de7f:	retf   
  40de80:	cdq    
  40de81:	push   edx
  40de82:	jge    0x40dee0
  40de84:	sbb    BYTE PTR [eax-0x78170738],al
  40de8a:	push   edi
  40de8b:	in     eax,0x4c
  40de8d:	push   esi
  40de8e:	ret    0xc63
  40de91:	inc    di
  40de93:	jmp    0x40deac
  40de95:	ror    DWORD PTR [eax],0xe6
  40de98:	push   cs
  40de99:	xor    ebp,ebp
  40de9b:	(bad)  
  40de9d:	jge    0x40de56
  40de9f:	int    0x4b
  40dea1:	das    
  40dea2:	js     0x40de84
  40dea4:	(bad)  
  40dea5:	fmul   QWORD PTR [esp+eiz*8+0x19ab5741]
  40deac:	mov    WORD PTR [edi+0x27c63eda],ds
  40deb2:	sbb    cl,BYTE PTR fs:[ecx+0x4f5de9ba]
  40deb9:	int    0x9d
  40debb:	int    0xdb
  40debd:	sub    cl,dl
  40debf:	call   0x113ce012
  40dec4:	lock imul esp,DWORD PTR [ecx+esi*1],0x51b37605
  40decc:	push   esi
  40decd:	pushf  
  40dece:	gs inc edi
  40ded0:	mov    edx,0x252dca12
  40ded5:	jle    0x40df37
  40ded7:	push   esp
  40ded9:	xchg   DWORD PTR [edi+edi*2],esp
  40dedc:	pop    ebx
  40dedd:	lea    edx,[eax+0x66]
  40dee0:	lock or eax,0xefa99735
  40dee6:	and    BYTE PTR [ebp+0x61a8e883],bl
  40deec:	stos   DWORD PTR es:[edi],eax
  40deed:	outs   dx,BYTE PTR ds:[esi]
  40deee:	jmp    0x6b24:0x614eb0d5
  40def5:	mov    edi,0x195e7085
  40defa:	inc    edi
  40defb:	dec    eax
  40defc:	cli    
  40defd:	hlt    
  40defe:	jl     0x40df38
  40df00:	cmp    DWORD PTR [edx-0x73],esi
  40df03:	xchg   DWORD PTR [esi],ebp
  40df05:	sub    bl,BYTE PTR [esi+0x5c]
  40df08:	sbb    ebp,DWORD PTR [edi]
  40df0a:	push   0x1cce5e3
  40df0f:	cmp    al,0xd3
  40df11:	ss xchg ecx,eax
  40df13:	stos   BYTE PTR es:[edi],al
  40df14:	inc    esi
  40df15:	imul   ecx,DWORD PTR [ebx+esi*8],0x127cddf3
  40df1c:	inc    esp
  40df1d:	push   esp
  40df1e:	sbb    DWORD PTR [edi],eax
  40df20:	sar    DWORD PTR [edx+eiz*4-0x14b99f12],1
  40df27:	and    ebx,DWORD PTR [edi-0x52]
  40df2a:	fadd   DWORD PTR [ebp+edi*8-0x3543b87a]
  40df31:	jae    0x40debe
  40df33:	sub    edi,DWORD PTR [edi]
  40df35:	adc    BYTE PTR [edx-0x5c33ce75],ch
  40df3b:	bnd callw 0xb1e9
  40df40:	mov    al,0xb9
  40df42:	xchg   ebp,eax
  40df43:	test   al,0xfa
  40df45:	push   esp
  40df46:	scas   al,BYTE PTR es:[edi]
  40df47:	xchg   ebp,eax
  40df48:	jae    0x40df29
  40df4a:	out    dx,al
  40df4b:	leave  
  40df4c:	fwait
  40df4d:	(bad)  
  40df4f:	xor    cl,0xdb
  40df52:	std    
  40df53:	dec    edi
  40df54:	frstor [esp+ebp*1]
  40df57:	aad    0x56
  40df59:	pop    eax
  40df5a:	je     0x40df80
  40df5c:	adc    BYTE PTR [ebp+0x37],bl
  40df5f:	lods   eax,DWORD PTR ds:[esi]
  40df60:	lahf   
  40df61:	sub    DWORD PTR [edi-0x4ac3e84f],ebp
  40df67:	pop    eax
  40df68:	call   0x3e21:0x39bbe947
  40df6f:	inc    DWORD PTR [edi+ecx*8]
  40df72:	mov    bh,cl
  40df74:	xchg   esi,eax
  40df75:	push   edi
  40df76:	in     eax,dx
  40df77:	daa    
  40df78:	adc    al,0xea
  40df7a:	mov    esi,0x937b4844
  40df7f:	shl    DWORD PTR gs:[ebx],0x4e
  40df83:	add    eax,0x23c31af8
  40df88:	fild   WORD PTR [edi+0x78495d9a]
  40df8e:	and    DWORD PTR [eax-0x75d496c7],esi
  40df94:	mov    dh,BYTE PTR [edi+ecx*8-0x1f]
  40df98:	mov    edi,0xbd24c2ab
  40df9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df9e:	mov    esi,0x10fad981
  40dfa3:	sti    
  40dfa4:	xor    bl,bl
  40dfa6:	adc    edx,DWORD PTR [esi+0x43]
  40dfa9:	pop    esi
  40dfaa:	in     al,dx
  40dfab:	mov    BYTE PTR [esi-0x4192ee6a],dh
  40dfb1:	pop    ebx
  40dfb2:	outs   dx,BYTE PTR ds:[esi]
  40dfb3:	sbb    DWORD PTR [esi-0x43733293],0x68
  40dfba:	xchg   edi,eax
  40dfbb:	popa   
  40dfbc:	push   esp
  40dfbd:	pop    DWORD PTR [eax-0x379818b0]
  40dfc3:	jnp    0x40e020
  40dfc5:	push   esp
  40dfc6:	jle    0x40e03c
  40dfc8:	jmp    0x7e8b:0xe94a0172
  40dfcf:	xlat   BYTE PTR ds:[ebx]
  40dfd0:	xchg   ebx,eax
  40dfd1:	stos   DWORD PTR es:[edi],eax
  40dfd2:	loopne 0x40df7d
  40dfd4:	lock inc ebx
  40dfd6:	add    BYTE PTR [ecx],bh
  40dfd8:	shl    DWORD PTR [edx+0x4f],0x29
  40dfdc:	dec    ecx
  40dfdd:	xchg   DWORD PTR [edi-0xb],esp
  40dfe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfe1:	push   0x72
  40dfe3:	xor    al,0x48
  40dfe5:	cld    
  40dfe6:	sti    
  40dfe7:	test   al,0xc7
  40dfe9:	popa   
  40dfea:	mov    edx,0xeb82858b
  40dfef:	iret   
  40dff0:	std    
  40dff1:	(bad)  
  40dff3:	push   0x66
  40dff5:	mov    esp,0x1f7e9661
  40dffa:	aas    
  40dffb:	sbb    ebp,DWORD PTR [esp+eiz*4+0x78767785]
  40e002:	jb     0x40e04c
  40e004:	inc    ecx
  40e005:	xor    edx,DWORD PTR [esi]
  40e007:	shr    DWORD PTR [ebx+0x5f],0xf7
  40e00b:	ret    0x98c
  40e00e:	out    0xdc,al
  40e010:	xor    BYTE PTR [ebp+0x20],dl
  40e013:	adc    ch,BYTE PTR [edi+ecx*8+0x1a71bc6c]
  40e01a:	daa    
  40e01b:	dec    ebp
  40e01c:	push   esi
  40e01d:	out    0x3e,eax
  40e01f:	scas   al,BYTE PTR es:[edi]
  40e020:	lock jb 0x40e06c
  40e023:	cmc    
  40e024:	leave  
  40e025:	ins    DWORD PTR es:[edi],dx
  40e026:	and    BYTE PTR [edi+0x1563e5cf],dl
  40e02c:	and    BYTE PTR [edx+0x221b14c5],cl
  40e032:	ror    BYTE PTR [esi],cl
  40e034:	pop    ds
  40e035:	mov    dl,0x6c
  40e037:	mov    dh,bl
  40e039:	hlt    
  40e03a:	cmp    al,0xe6
  40e03c:	adc    ebp,DWORD PTR [eax+0x27]
  40e03f:	push   edi
  40e040:	xor    eax,0xd385be6
  40e045:	jae    0x40e011
  40e047:	cmp    DWORD PTR [ebp-0x23],0x65646778
  40e04e:	pop    ebx
  40e04f:	je     0x40e0b9
  40e051:	nop
  40e052:	sar    BYTE PTR [esi],0xd7
  40e055:	test   BYTE PTR [ebx+0x3307d261],ah
  40e05b:	repz jno 0x40e058
  40e05e:	jo     0x40e025
  40e060:	in     eax,dx
  40e061:	add    al,0xa1
  40e063:	pop    es
  40e064:	cmp    al,BYTE PTR [eax+0x20]
  40e067:	test   al,0x6d
  40e069:	fbld   TBYTE PTR [esi-0x45]
  40e06c:	icebp  
  40e06d:	xchg   ecx,eax
  40e06e:	js     0x40dff7
  40e070:	add    DWORD PTR [ecx],ebp
  40e072:	pop    ebx
  40e073:	xor    ebp,DWORD PTR [edi]
  40e075:	cli    
  40e076:	and    ebp,DWORD PTR [edx-0x32198532]
  40e07c:	inc    ebx
  40e07d:	fidiv  DWORD PTR [edi+0x6]
  40e080:	adc    BYTE PTR [edx+0x16],cl
  40e083:	mov    ecx,0x22120d9f
  40e088:	xchg   bh,bh
  40e08a:	pop    es
  40e08b:	xor    ch,BYTE PTR [eax]
  40e08d:	call   0x3035:0xa830c3b7
  40e094:	(bad)  
  40e096:	ret    0x9246
  40e099:	das    
  40e09a:	inc    edx
  40e09b:	ror    DWORD PTR [edx-0x40947664],0x9a
  40e0a2:	dec    ecx
  40e0a3:	pop    edx
  40e0a4:	sub    al,0x63
  40e0a6:	cmp    bl,BYTE PTR [eax]
  40e0a8:	inc    esp
  40e0a9:	mov    ch,0x57
  40e0ab:	das    
  40e0ac:	cmp    bl,BYTE PTR [edi+0x2597b300]
  40e0b2:	nop
  40e0b3:	int3   
  40e0b4:	xchg   DWORD PTR [edx],esi
  40e0b6:	test   eax,0xc6584cbf
  40e0bb:	mov    bl,0x67
  40e0bd:	lock adc edx,DWORD PTR [eax]
  40e0c0:	fs or  edx,edi
  40e0c3:	inc    edi
  40e0c4:	ficom  WORD PTR [ebp-0x2a]
  40e0c7:	xor    al,0x0
  40e0c9:	add    BYTE PTR [eax+0xaa29083],0x82
  40e0d0:	into   
  40e0d1:	fidivr WORD PTR [ebx]
  40e0d3:	cli    
  40e0d4:	mov    ds:0x637babf4,al
  40e0d9:	sub    eax,0x1df215f0
  40e0de:	(bad)  
  40e0df:	sbb    esp,DWORD PTR [edi+0x77aaee62]
  40e0e5:	(bad)  
  40e0e7:	mov    ds:0xd1acccbe,al
  40e0ec:	sub    al,cl
  40e0ee:	out    0xf8,eax
  40e0f0:	jge    0x40e0a6
  40e0f2:	xor    esp,edx
  40e0f4:	aaa    
  40e0f5:	lar    edx,di
  40e0f8:	fnstenv [ebx-0x5277119f]
  40e0fe:	test   dl,bh
  40e100:	jmp    0xda176c11
  40e105:	or     edx,DWORD PTR [edi]
  40e107:	push   cs
  40e108:	sub    bh,BYTE PTR [esi+0x7d]
  40e10b:	sbb    eax,DWORD PTR [eax]
  40e10d:	and    eax,0x2125e8f9
  40e112:	sahf   
  40e113:	popa   
  40e114:	jecxz  0x40e09a
  40e116:	cdq    
  40e117:	mov    ds:0x3a0eb819,al
  40e11c:	gs aad 0x4f
  40e11f:	jne    0x40e164
  40e121:	adc    al,0xcb
  40e123:	mov    eax,0xc74fdf29
  40e128:	cmp    DWORD PTR fs:[eax+0x69],0xffffffe9
  40e12d:	adc    esp,DWORD PTR [edx+0x32d82d2c]
  40e133:	pslld  mm4,QWORD PTR [esi-0x777690e6]
  40e13a:	mov    al,ds:0xae508d95
  40e13f:	pop    es
  40e140:	cmp    dl,dl
  40e142:	repnz cmp cl,0x64
  40e146:	xchg   ebp,eax
  40e147:	lea    esi,[ebx]
  40e149:	pop    eax
  40e14a:	nop
  40e14b:	sub    eax,0x9539072a
  40e150:	xor    BYTE PTR [esi],dh
  40e152:	clc    
  40e153:	lods   eax,DWORD PTR ds:[esi]
  40e154:	(bad)  
  40e156:	xchg   ecx,eax
  40e157:	or     BYTE PTR [edx-0x152d0f1c],bh
  40e15d:	inc    eax
  40e15e:	add    DWORD PTR [esi+0x42d9ec82],edx
  40e164:	add    dh,BYTE PTR [edi]
  40e166:	fldcw  WORD PTR [eax+0x65]
  40e169:	sbb    BYTE PTR [ecx-0x26],dh
  40e16c:	mov    al,ds:0x83a5ccbe
  40e171:	and    dh,BYTE PTR [ecx-0x32b6fed9]
  40e177:	fisubr WORD PTR [ecx-0x51deeca5]
  40e17d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e17e:	inc    ebp
  40e17f:	lods   eax,DWORD PTR ds:[esi]
  40e180:	fcmovnu st,st(5)
  40e182:	pop    ss
  40e183:	in     eax,dx
  40e184:	jmp    0x528e:0xc12bc0a4
  40e18b:	xchg   ebp,eax
  40e18c:	push   ss
  40e18d:	(bad)  fs:[ebx-0x325d9ae4]
  40e194:	jno    0x40e211
  40e196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e197:	xchg   DWORD PTR [ecx+edx*2],esi
  40e19a:	add    ecx,DWORD PTR [eax]
  40e19c:	inc    edx
  40e19d:	mov    ds:0x84b380d1,al
  40e1a2:	push   esi
  40e1a3:	jbe    0x40e1b3
  40e1a5:	push   gs
  40e1a7:	dec    ecx
  40e1a8:	retf   0x8b86
  40e1ab:	xchg   edx,eax
  40e1ac:	mov    ebp,0x59014727
  40e1b1:	popf   
  40e1b2:	xor    DWORD PTR [esi+0x74],0xffffffde
  40e1b6:	dec    edx
  40e1b7:	pop    ebp
  40e1b8:	inc    edi
  40e1b9:	mov    BYTE PTR [ebp-0x4d],ch
  40e1bc:	xchg   ebp,eax
  40e1bd:	loope  0x40e218
  40e1bf:	into   
  40e1c0:	ret    
  40e1c1:	jmp    0x40e20c
  40e1c3:	xchg   esi,eax
  40e1c4:	inc    ecx
  40e1c5:	dec    ebp
  40e1c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1c7:	mov    cl,0x21
  40e1c9:	not    BYTE PTR [ecx-0x36]
  40e1cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1cd:	or     eax,0xe67721ad
  40e1d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1d3:	outs   dx,BYTE PTR ds:[esi]
  40e1d4:	les    esp,FWORD PTR [ebp+0x6d093c29]
  40e1da:	cmp    bh,BYTE PTR [edx-0x507c40d2]
  40e1e0:	xchg   esp,eax
  40e1e1:	mov    ebp,0x6d116d01
  40e1e6:	sub    eax,0xe2932d70
  40e1eb:	iret   
  40e1ec:	and    eax,0xeb0e9d12
  40e1f1:	pop    eax
  40e1f2:	lds    eax,FWORD PTR [eax-0x3b]
  40e1f5:	mov    bl,0xed
  40e1f7:	add    al,0x66
  40e1f9:	fisttp QWORD PTR [edx-0x4f48d975]
  40e1ff:	fsubr  DWORD PTR [edi+eiz*2-0x3ed2fa19]
  40e206:	dec    ebp
  40e207:	loop   0x40e1bf
  40e209:	cmp    eax,0x9ebf389a
  40e20e:	mov    WORD PTR [ebx],?
  40e210:	outs   dx,DWORD PTR ds:[esi]
  40e211:	adc    ecx,DWORD PTR [ebp-0x425f0352]
  40e217:	jmp    0x7643:0xed71cdf5
  40e21e:	and    DWORD PTR [ebp+0x73],esi
  40e221:	mov    ds:0x935a2783,al
  40e226:	inc    eax
  40e227:	and    al,0xf
  40e229:	(bad)
  40e22c:	jg     0x40e1b7
  40e22e:	ret    0x7d21
  40e231:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40e233:	dec    eax
  40e234:	xor    ebp,DWORD PTR [esi+0x674e4b59]
  40e23a:	adc    al,0xd7
  40e23c:	mov    ds:0x127e853d,al
  40e241:	push   ecx
  40e242:	mov    dl,0xdf
  40e244:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e245:	fwait
  40e246:	or     edi,DWORD PTR [edi+eiz*4]
  40e249:	mov    eax,ds:0x64264348
  40e24e:	dec    esi
  40e24f:	mov    eax,0x2c5339f
  40e254:	push   ds
  40e255:	push   ebp
  40e256:	jmp    0x35821d92
  40e25b:	pop    ds
  40e25c:	outs   dx,BYTE PTR ds:[esi]
  40e25d:	popf   
  40e25e:	std    
  40e25f:	jle    0x40e219
  40e261:	cli    
  40e262:	repnz arpl WORD PTR [edi],bp
  40e265:	out    0x96,al
  40e267:	fild   DWORD PTR [eax+0x4b]
  40e26a:	bound  eax,QWORD PTR [eax-0x61]
  40e26d:	fnstsw WORD PTR [edi+0x0]
  40e270:	sub    eax,0x2684e081
  40e275:	mov    DWORD PTR [ecx-0x4a726ed],esi
  40e27b:	and    eax,0x8094ea18
  40e280:	ja     0x40e29d
  40e282:	mov    al,ds:0x37e338eb
  40e287:	xchg   edi,esi
  40e289:	fisttp QWORD PTR [ebp-0x25d676fd]
  40e28f:	jbe    0x40e283
  40e291:	and    DWORD PTR [ecx-0x494bde0],ebp
  40e297:	mov    ?,WORD PTR [edi+esi*8-0x25]
  40e29b:	test   DWORD PTR [ebp+0x12769602],ecx
  40e2a1:	bound  edx,QWORD PTR [esi-0x5b66ae7]
  40e2a7:	fnstenv [esp+eax*8+0x4647c421]
  40e2ae:	adc    al,0x6
  40e2b0:	mov    esi,0x205829ff
  40e2b5:	mov    bh,0x34
  40e2b7:	pop    esp
  40e2b8:	loop   0x40e32f
  40e2ba:	out    dx,eax
  40e2bb:	ds mov bh,0xe8
  40e2be:	shr    DWORD PTR [ecx+edx*2+0x23],1
  40e2c2:	add    ebp,DWORD PTR [ecx+0x6057f6a7]
  40e2c8:	aad    0x90
  40e2ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2cc:	retf   0x5266
  40e2cf:	sub    bh,ch
  40e2d1:	out    0x1f,eax
  40e2d3:	fcomip st,st(6)
  40e2d5:	pop    edx
  40e2d6:	pop    edi
  40e2d7:	pop    ss
  40e2d8:	ds pusha 
  40e2da:	jg     0x40e330
  40e2dc:	mov    bl,0x7d
  40e2de:	jecxz  0x40e323
  40e2e0:	jo     0x40e31b
  40e2e2:	lahf   
  40e2e3:	mov    ebp,0x1d9128b6
  40e2e9:	in     eax,dx
  40e2ea:	int3   
  40e2eb:	hlt    
  40e2ec:	aas    
  40e2ed:	scas   al,BYTE PTR es:[edi]
  40e2ee:	and    al,0xdb
  40e2f0:	aam    0x92
  40e2f2:	fcmovne st,st(2)
  40e2f4:	mov    dl,0xb3
  40e2f6:	lea    edi,[ecx+0x8082927]
  40e2fc:	repz ret 0xdf47
  40e300:	lods   al,BYTE PTR ds:[esi]
  40e301:	adc    eax,0xad964d13
  40e306:	rcl    BYTE PTR [ecx+0x55],1
  40e309:	jb     0x40e380
  40e30b:	push   eax
  40e30c:	or     BYTE PTR ss:[esi+0x10],al
  40e310:	int    0x12
  40e312:	mov    esi,0x64857d6
  40e317:	rol    BYTE PTR [ebx+ebx*1],1
  40e31a:	dec    bh
  40e31c:	mov    ds:0x1f442368,eax
  40e321:	and    eax,0x4dd1ad71
  40e326:	in     eax,dx
  40e327:	pop    esp
  40e328:	fild   QWORD PTR [edx+0x1c]
  40e32b:	hlt    
  40e32c:	and    al,0x24
  40e32e:	adc    DWORD PTR ds:0xc752a37d,0xffffff9d
  40e335:	loop   0x40e2b9
  40e337:	push   ecx
  40e338:	js     0x40e32c
  40e33a:	fstp   st(7)
  40e33c:	cmp    eax,0xaaa15bbe
  40e341:	mov    al,ds:0xc4b62c96
  40e346:	mov    al,0x71
  40e348:	mov    ebx,DWORD PTR [eax]
  40e34a:	fbld   TBYTE PTR ds:0x8a111429
  40e350:	loope  0x40e39a
  40e352:	aad    0x54
  40e354:	sar    DWORD PTR [edi+0xa],0xdd
  40e358:	loope  0x40e350
  40e35a:	hlt    
  40e35b:	push   esp
  40e35c:	jge    0x40e39a
  40e35e:	xor    BYTE PTR [eax],0x61
  40e361:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e363:	bound  esi,QWORD PTR [edi]
  40e365:	pop    es
  40e366:	retf   
  40e367:	or     eax,0x56d1868d
  40e36c:	inc    eax
  40e36d:	add    eax,0xe006a44c
  40e372:	sbb    BYTE PTR [ebx-0x59353e2e],0x9a
  40e379:	and    cl,cl
  40e37b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e37c:	inc    eax
  40e37d:	or     bh,bh
  40e37f:	pop    ebx
  40e380:	je     0x40e37d
  40e382:	jp     0x40e3ea
  40e384:	cmp    al,0x35
  40e386:	mov    al,ds:0x7d5005ad
  40e38b:	pcmpeqd mm0,QWORD PTR [ebp+0x69e3db44]
  40e392:	sbb    esi,esi
  40e394:	jbe    0x40e35b
  40e396:	call   0x5636:0x380507cb
  40e39d:	fwait
  40e39e:	lahf   
  40e39f:	add    al,BYTE PTR [edi+0x17]
  40e3a2:	jnp    0x40e41b
  40e3a4:	add    BYTE PTR ds:0x8794d08,bh
  40e3aa:	test   ah,bh
  40e3ac:	aad    0x85
  40e3ae:	dec    ebp
  40e3af:	daa    
  40e3b0:	jo     0x40e3d9
  40e3b2:	add    dh,BYTE PTR [ebp+0x50]
  40e3b5:	dec    ecx
  40e3b6:	aas    
  40e3b7:	mov    ebp,0x3df6e31a
  40e3bc:	fsubr  st,st(4)
  40e3be:	push   ecx
  40e3bf:	(bad)  
  40e3c0:	loopne 0x40e429
  40e3c2:	pushf  
  40e3c3:	shr    BYTE PTR [ebx+0x57],0x97
  40e3c7:	push   esi
  40e3c8:	test   BYTE PTR [ecx-0x529b6f4b],0xdc
  40e3cf:	xchg   esi,eax
  40e3d0:	adc    DWORD PTR [ecx+ecx*2],ecx
  40e3d3:	pop    esi
  40e3d4:	inc    edx
  40e3d5:	bound  esi,QWORD PTR [ecx]
  40e3d7:	lods   al,BYTE PTR ds:[esi]
  40e3d8:	clc    
  40e3d9:	es scas eax,DWORD PTR es:[edi]
  40e3db:	fistp  WORD PTR [ebx]
  40e3dd:	xor    edx,DWORD PTR [edi]
  40e3df:	mov    BYTE PTR [ecx+0x5db348e5],ah
  40e3e5:	imul   DWORD PTR [ebx+0x4b7938b1]
  40e3eb:	cmp    DWORD PTR [edx+0x404f105b],edi
  40e3f1:	pop    es
  40e3f2:	xchg   ebp,eax
  40e3f3:	out    dx,eax
  40e3f4:	ds add dl,al
  40e3f7:	inc    edi
  40e3f8:	push   0xffffffb8
  40e3fa:	in     eax,0x8e
  40e3fc:	cld    
  40e3fd:	xchg   edx,eax
  40e3fe:	adc    cl,cl
  40e400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e401:	lea    ecx,[ebx+edx*1]
  40e404:	inc    ebx
  40e405:	ins    BYTE PTR es:[edi],dx
  40e406:	(bad)  
  40e407:	mov    ds:0x6f8bf1f0,al
  40e40c:	sbb    BYTE PTR [esi+ebx*4],0x41
  40e410:	inc    esi
  40e411:	mov    BYTE PTR [ebp+edi*2+0xd],dl
  40e415:	mov    ch,BYTE PTR [ebx]
  40e417:	inc    edi
  40e418:	ror    DWORD PTR ds:0xc053ae97,0x0
  40e41f:	imul   esi,esi,0xffffffd5
  40e422:	sub    eax,0x381c55ab
  40e427:	jl     0x40e49d
  40e429:	imul   esi,DWORD PTR [eax+edi*8-0x70ddd9d9],0x32c736d
  40e434:	jo     0x40e446
  40e436:	rcr    DWORD PTR [ebx],cl
  40e438:	jge    0x40e446
  40e43a:	jg     0x40e4ad
  40e43c:	mov    al,0x71
  40e43e:	cld    
  40e43f:	fild   DWORD PTR [ecx-0x29f899f7]
  40e446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e447:	lahf   
  40e448:	mov    esp,0x5dfa9bc8
  40e44d:	xchg   edi,ecx
  40e44f:	sbb    esp,eax
  40e451:	in     al,0x3d
  40e453:	fwait
  40e454:	stc    
  40e455:	pop    esp
  40e456:	xor    cl,BYTE PTR [ecx-0x23]
  40e459:	jle    0x40e441
  40e45b:	sub    eax,0x4f374893
  40e460:	not    BYTE PTR [edi+0x3b]
  40e463:	test   eax,0x3beae7e6
  40e468:	sub    ch,BYTE PTR [edx+0x31da14e4]
  40e46e:	dec    ebx
  40e46f:	lahf   
  40e470:	das    
  40e471:	push   0x7c27cbb8
  40e476:	dec    esi
  40e477:	pop    ebx
  40e478:	push   ds
  40e479:	mov    dl,0x93
  40e47b:	sub    ebx,DWORD PTR [edi-0x5c]
  40e47e:	out    dx,eax
  40e47f:	stos   BYTE PTR es:[edi],al
  40e480:	call   0xb8c80245
  40e485:	sbb    BYTE PTR [ebx],0xd5
  40e488:	or     eax,0x67970379
  40e48d:	dec    eax
  40e48e:	cmp    al,0x71
  40e490:	ins    BYTE PTR es:[edi],dx
  40e491:	jne    0x40e469
  40e493:	sbb    bh,BYTE PTR [ebx-0x2a]
  40e496:	mov    cl,BYTE PTR [esp+esi*2+0x15487705]
  40e49d:	or     al,0xc7
  40e49f:	mov    ch,0x1e
  40e4a1:	out    dx,al
  40e4a2:	mov    cl,0x74
  40e4a4:	fcom   DWORD PTR [ecx+edi*4-0x1f15ba02]
  40e4ab:	mov    edx,0x48d839b0
  40e4b0:	cmp    BYTE PTR [ecx+eax*1-0x14],0x5e
  40e4b5:	sbb    bh,BYTE PTR [ecx]
  40e4b7:	mov    WORD PTR [edx],ss
  40e4b9:	gs xchg ebx,eax
  40e4bb:	(bad)  
  40e4bc:	mov    dl,BYTE PTR [ecx-0x658970e4]
  40e4c2:	dec    esp
  40e4c3:	stos   BYTE PTR es:[edi],al
  40e4c4:	mov    cl,0x9b
  40e4c6:	sbb    ah,dh
  40e4c8:	repnz mov ch,0xe0
  40e4cb:	setp   BYTE PTR [edx-0x5abe105]
  40e4d2:	jae    0x40e4f2
  40e4d4:	pushf  
  40e4d5:	jnp    0x40e4aa
  40e4d7:	push   cs
  40e4d8:	clc    
  40e4d9:	mov    al,ds:0xa23a54ac
  40e4de:	jp     0x40e48d
  40e4e0:	data16 adc BYTE PTR [edi-0xf],bl
  40e4e4:	lea    ecx,[ebx-0x55393bb5]
  40e4ea:	push   ds
  40e4eb:	xchg   esp,eax
  40e4ec:	jl     0x40e48d
  40e4ee:	test   eax,0xb1afc816
  40e4f3:	pop    edi
  40e4f4:	nop
  40e4f5:	mov    ebp,0x47236086
  40e4fa:	inc    ebp
  40e4fb:	inc    edx
  40e4fc:	inc    ebp
  40e4fd:	adc    eax,0xe95aad44
  40e502:	xor    ebp,DWORD PTR [ebx]
  40e504:	lods   eax,DWORD PTR ds:[esi]
  40e505:	mov    dl,0x93
  40e507:	or     eax,DWORD PTR ds:0x7a40d58c
  40e50d:	pop    ss
  40e50e:	push   ecx
  40e50f:	jno    0x40e505
  40e511:	jp     0x40e556
  40e513:	cmp    ecx,esi
  40e515:	sub    eax,0xf2495f2a
  40e51a:	push   ds
  40e51b:	shr    BYTE PTR [edi-0x3b],1
  40e51e:	xlat   BYTE PTR ds:[ebx]
  40e51f:	jo     0x40e4ba
  40e521:	and    DWORD PTR [eax-0x48],edi
  40e524:	ja     0x40e4de
  40e526:	stc    
  40e527:	ss mov ch,0xa1
  40e52a:	test   DWORD PTR [ebp-0x58],0x48a92d4a
  40e531:	jmp    0x40e556
  40e533:	je     0x40e55e
  40e535:	hlt    
  40e536:	ret    
  40e537:	sbb    al,0xa6
  40e539:	ins    DWORD PTR es:[edi],dx
  40e53a:	jg     0x40e561
  40e53c:	add    ebx,DWORD PTR [eax+0x42d030ac]
  40e542:	xchg   ebp,eax
  40e543:	adc    ebp,DWORD PTR ds:[eax-0x72]
  40e547:	and    al,0xe9
  40e549:	int3   
  40e54a:	test   BYTE PTR ds:0x6ad0cc54,ch
  40e550:	fwait
  40e551:	push   ebx
  40e552:	or     ebx,DWORD PTR [eax]
  40e554:	push   esi
  40e555:	sar    edx,1
  40e557:	xor    eax,0xd694e16f
  40e55c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e55d:	jbe    0x40e534
  40e55f:	and    DWORD PTR [ecx-0x59],ecx
  40e562:	mov    bh,0x7b
  40e564:	cmp    bh,BYTE PTR ds:0xdf494ac0
  40e56a:	xlat   BYTE PTR ds:[ebx]
  40e56b:	sbb    DWORD PTR [eax+0x6fe910da],esi
  40e571:	pop    ebp
  40e572:	fstp   st(5)
  40e574:	sbb    al,0xc4
  40e576:	add    cl,cl
  40e578:	push   ss
  40e579:	add    al,0xa0
  40e57b:	pop    eax
  40e57c:	adc    edi,DWORD PTR [edx+0x26]
  40e57f:	push   es
  40e580:	pop    ebp
  40e581:	dec    ecx
  40e582:	mov    esp,0xedcfa379
  40e587:	mov    dh,0x31
  40e589:	push   es
  40e58a:	repz addr16 mov ch,0xaf
  40e58e:	adc    ecx,ebp
  40e590:	sar    BYTE PTR [eax+0x4b],1
  40e593:	sub    BYTE PTR [esi-0x7dcbc39],0x91
  40e59a:	mov    ds:0x39d77d7f,al
  40e59f:	sti    
  40e5a0:	idiv   DWORD PTR [ecx]
  40e5a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5a3:	cmp    esi,edi
  40e5a5:	mov    bl,0x17
  40e5a7:	dec    ebp
  40e5a8:	fwait
  40e5a9:	bnd jle 0x40e580
  40e5ac:	pop    esp
  40e5ad:	icebp  
  40e5ae:	aas    
  40e5af:	xlat   BYTE PTR ds:[ebx]
  40e5b0:	push   edi
  40e5b1:	jp     0x40e5eb
  40e5b3:	pop    eax
  40e5b4:	sub    bh,bh
  40e5b6:	repnz inc eax
  40e5b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5b9:	pop    esi
  40e5ba:	fdiv   DWORD PTR [edx-0x1055379a]
  40e5c0:	inc    ebx
  40e5c1:	xchg   edx,eax
  40e5c2:	int3   
  40e5c3:	push   ds
  40e5c4:	(bad)  
  40e5c5:	pop    eax
  40e5c6:	int3   
  40e5c7:	fs pop es
  40e5c9:	xchg   edx,eax
  40e5ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5cb:	inc    ebp
  40e5cc:	cmp    al,0x7f
  40e5ce:	dec    ebp
  40e5cf:	ret    
  40e5d0:	mov    ?,WORD PTR [ebx-0x4d5d9a13]
  40e5d6:	scas   eax,DWORD PTR es:[edi]
  40e5d7:	retf   0x634d
  40e5da:	ins    BYTE PTR es:[edi],dx
  40e5db:	stc    
  40e5dc:	sbb    BYTE PTR [eax-0x3c],al
  40e5df:	sbb    ch,BYTE PTR [ecx-0x6c]
  40e5e2:	cmp    eax,0x99180274
  40e5e7:	data16 loop 0x40e645
  40e5ea:	inc    ecx
  40e5eb:	pop    es
  40e5ec:	shl    DWORD PTR [ecx+ebx*2-0x3d],0xac
  40e5f1:	mov    bl,0x6
  40e5f3:	je     0x40e59e
  40e5f5:	inc    ebx
  40e5f6:	clc    
  40e5f7:	(bad)  
  40e5f8:	mov    eax,0x759a7ce9
  40e5fd:	push   0x7a912d99
  40e602:	pop    esi
  40e603:	jnp    0x40e596
  40e605:	mov    eax,ds:0x9fb0b6b6
  40e60a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e60b:	shr    BYTE PTR [ebp+0x312b3156],1
  40e611:	inc    BYTE PTR [esi+0x75]
  40e614:	pushf  
  40e615:	iret   
  40e616:	pop    ebp
  40e617:	outs   dx,BYTE PTR ds:[esi]
  40e618:	adc    bl,BYTE PTR [esi]
  40e61a:	dec    ebx
  40e61b:	les    esp,FWORD PTR [ebp*2-0x48817131]
  40e622:	adc    esp,0x39
  40e625:	stos   BYTE PTR es:[edi],al
  40e626:	in     al,dx
  40e627:	into   
  40e628:	das    
  40e629:	or     edi,DWORD PTR [eax+ebx*4]
  40e62c:	int3   
  40e62d:	fsubr  DWORD PTR [edi-0x565db6aa]
  40e633:	fisttp DWORD PTR [edx+0x7838b1ff]
  40e639:	mov    ah,0xc2
  40e63b:	sbb    al,0xbd
  40e63d:	test   DWORD PTR [ebp-0x2065d83f],eax
  40e643:	cmp    eax,0xee6ce991
  40e648:	push   edx
  40e649:	or     al,0xaa
  40e64b:	std    
  40e64c:	adc    bl,ch
  40e64e:	int    0x35
  40e650:	repz jmp 0x9d00:0x22f079c6
  40e658:	vpunpcklbw xmm1,xmm4,XMMWORD PTR [esi+ebp*4+0x337e6fca]
  40e661:	fst    DWORD PTR [esi-0x25]
  40e664:	shl    DWORD PTR [eax-0x1010d1a1],0x41
  40e66b:	imul   esp,esi,0xffffffae
  40e66e:	pusha  
  40e66f:	pop    ecx
  40e670:	(bad)  
  40e671:	cli    
  40e672:	out    dx,eax
  40e673:	int    0xfb
  40e675:	xor    ax,bp
  40e678:	arpl   WORD PTR [ecx],di
  40e67a:	pop    ss
  40e67b:	stos   BYTE PTR es:[edi],al
  40e67c:	xlat   BYTE PTR ds:[ebx]
  40e67d:	add    BYTE PTR [ecx+0x7a],0x11
  40e681:	inc    esp
  40e682:	clc    
  40e683:	add    BYTE PTR [esp+edi*8-0x1e],0x8a
  40e688:	gs repz mov ch,0x60
  40e68c:	into   
  40e68d:	xchg   BYTE PTR [esi-0x554d3a75],dl
  40e693:	sub    ecx,edx
  40e695:	and    ebx,DWORD PTR [edx]
  40e697:	dec    eax
  40e698:	mov    ds:0x388eba28,eax
  40e69d:	mov    eax,ds:0x5e1f70a9
  40e6a2:	cld    
  40e6a3:	xor    bh,al
  40e6a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6a6:	(bad)  
  40e6a7:	xor    al,0x81
  40e6a9:	js     0x40e6c8
  40e6ab:	repnz ins BYTE PTR es:[edi],dx
  40e6ad:	adc    BYTE PTR [esi-0x7e220dbb],cl
  40e6b3:	outs   dx,DWORD PTR ds:[esi]
  40e6b4:	pop    ebx
  40e6b5:	jl     0x40e6c9
  40e6b7:	dec    esp
  40e6b8:	jmp    0x40e6a2
  40e6ba:	into   
  40e6bb:	adc    DWORD PTR [edi],ebp
  40e6bd:	xor    al,0x45
  40e6bf:	sbb    BYTE PTR [edx],al
  40e6c1:	inc    ebp
  40e6c2:	jbe    0x40e6ae
  40e6c4:	xchg   DWORD PTR [ecx+ebx*4+0x4a],ebx
  40e6c8:	ds ins BYTE PTR es:[edi],dx
  40e6ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6cb:	or     DWORD PTR [esi-0x25],eax
  40e6ce:	jb     0x40e726
  40e6d0:	pop    ss
  40e6d1:	add    eax,0xc7dcec6b
  40e6d6:	cmp    eax,0xf4a03206
  40e6db:	inc    esp
  40e6dc:	loopne 0x40e73d
  40e6de:	push   ds
  40e6df:	adc    al,0xc3
  40e6e1:	inc    esp
  40e6e2:	jnp    0x40e6a1
  40e6e4:	push   esp
  40e6e5:	inc    ecx
  40e6e6:	lea    edi,[eax-0x142ad11f]
  40e6ec:	push   ebx
  40e6ed:	(bad)  
  40e6ee:	fadd   QWORD PTR [ebp-0xec4fd5a]
  40e6f4:	repz stc 
  40e6f6:	push   cs
  40e6f7:	jp     0x40e688
  40e6f9:	enter  0x38ab,0x2e
  40e6fd:	or     BYTE PTR [ecx],ch
  40e6ff:	add    DWORD PTR [ebp+0x58],ecx
  40e702:	clc    
  40e703:	xchg   bl,cl
  40e705:	cmp    eax,0xf9fffdac
  40e70a:	into   
  40e70b:	or     edi,edx
  40e70d:	nop
  40e70e:	jno    0x40e6a9
  40e710:	test   eax,0xad439185
  40e715:	loopne 0x40e782
  40e717:	push   ss
  40e718:	ret    0xaf55
  40e71b:	fisub  DWORD PTR [edi-0x27e201d9]
  40e721:	sahf   
  40e722:	scas   eax,DWORD PTR es:[edi]
  40e723:	loopne 0x40e79c
  40e725:	add    eax,0x41e91c90
  40e72a:	sub    DWORD PTR [eax],ecx
  40e72c:	repnz mov WORD PTR [ecx-0x79],cs
  40e730:	outs   dx,BYTE PTR ds:[esi]
  40e731:	adc    eax,0x934afbbf
  40e736:	das    
  40e737:	mov    WORD PTR [edx-0x21],?
  40e73a:	lods   eax,DWORD PTR ds:[esi]
  40e73b:	push   es
  40e73c:	repnz adc BYTE PTR ss:[ecx],0xcf
  40e741:	xor    DWORD PTR [ebx+0x51],0xffffff90
  40e745:	xchg   ebp,eax
  40e746:	repnz cmc 
  40e748:	in     al,0xeb
  40e74a:	jge    0x40e76f
  40e74c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e74d:	loopne 0x40e747
  40e74f:	ficom  DWORD PTR [esi+0x74460502]
  40e755:	rcl    BYTE PTR [ebp-0x6502c50],1
  40e75b:	loope  0x40e6f0
  40e75d:	and    ecx,edi
  40e75f:	pusha  
  40e760:	xor    bh,BYTE PTR [ebp+0x60]
  40e763:	ret    0xa855
  40e766:	mov    al,0x51
  40e768:	push   edi
  40e769:	cmp    eax,0xc69b4a79
  40e76e:	sbb    ch,0x84
  40e771:	pop    edi
  40e772:	lods   ax,WORD PTR ds:[esi]
  40e774:	adc    esi,DWORD PTR [ecx+0x1e]
  40e777:	xchg   esp,eax
  40e778:	stos   BYTE PTR es:[edi],al
  40e779:	mul    eax
  40e77b:	bound  ebp,QWORD PTR [esi]
  40e77d:	int3   
  40e77e:	and    ch,0x13
  40e781:	pushf  
  40e782:	mov    edx,0x1994d77f
  40e787:	retf   
  40e788:	pop    edx
  40e789:	fdiv   QWORD PTR [esi-0x69]
  40e78c:	and    dl,BYTE PTR ds:0x35c45bfb
  40e792:	sbb    DWORD PTR [edx+ebp*2+0x15ea2f14],ebx
  40e799:	les    ebp,FWORD PTR [ebx-0x5b9a3dad]
  40e79f:	daa    
  40e7a0:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40e7a2:	out    dx,al
  40e7a3:	and    ah,BYTE PTR [esi]
  40e7a5:	jecxz  0x40e7b2
  40e7a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7a8:	xchg   ebp,eax
  40e7a9:	push   0xffffffc0
  40e7ab:	xchg   esi,eax
  40e7ac:	mov    ah,0xb9
  40e7ae:	out    dx,eax
  40e7af:	mov    bh,0xc0
  40e7b1:	add    eax,0xbd81db40
  40e7b6:	mov    DWORD PTR [ecx-0x4d],eax
  40e7b9:	cs pop edx
  40e7bb:	lds    esp,FWORD PTR [ecx+0x71da87df]
  40e7c1:	outs   dx,BYTE PTR ds:[esi]
  40e7c2:	arpl   bp,cx
  40e7c4:	hlt    
  40e7c5:	das    
  40e7c6:	ds pushf 
  40e7c8:	(bad)  
  40e7ca:	push   0x3f
  40e7cc:	xchg   DWORD PTR [eax-0x2428c3f2],ecx
  40e7d2:	dec    edx
  40e7d3:	mov    bh,0xbf
  40e7d5:	ins    DWORD PTR es:[edi],dx
  40e7d6:	cmp    eax,0xf77dd2bf
  40e7db:	mov    ch,0xf9
  40e7dd:	push   ds
  40e7de:	xchg   edx,eax
  40e7df:	pushf  
  40e7e0:	std    
  40e7e1:	lahf   
  40e7e2:	gs sbb ch,0xe9
  40e7e6:	xor    al,BYTE PTR [ebp-0x9]
  40e7e9:	data16 loope 0x40e7c0
  40e7ec:	jne    0x40e7df
  40e7ee:	jnp    0x40e81e
  40e7f0:	xchg   ebp,eax
  40e7f1:	add    cl,BYTE PTR gs:[eax]
  40e7f4:	(bad)  
  40e7f5:	ja     0x40e7c9
  40e7f7:	mov    ds:0x24f6b1de,eax
  40e7fc:	and    al,0xd5
  40e7fe:	lock jns 0x40e7e7
  40e801:	cvtps2pi mm4,QWORD PTR [eax+0x1f63c0a0]
  40e808:	mov    dh,0x5c
  40e80a:	cmp    eax,DWORD PTR [ecx+0x61]
  40e80d:	test   DWORD PTR [ebx-0x6fbf6492],edx
  40e813:	gs xchg ebp,eax
  40e815:	or     eax,DWORD PTR es:[esi]
  40e818:	pop    ebp
  40e819:	xor    DWORD PTR [ebx+0x618d94e9],0x96f10d5f
  40e823:	outs   dx,DWORD PTR ds:[esi]
  40e824:	fs cld 
  40e826:	cwde   
  40e827:	clc    
  40e828:	push   0xffffffa8
  40e82a:	fst    QWORD PTR [eax+0x2733a89e]
  40e830:	mov    ds:0x126fee9a,eax
  40e835:	pop    esp
  40e836:	sub    al,ah
  40e838:	fwait
  40e839:	lods   al,BYTE PTR ds:[esi]
  40e83a:	push   edx
  40e83b:	clc    
  40e83c:	clc    
  40e83d:	push   es
  40e83e:	dec    ebp
  40e83f:	in     eax,dx
  40e840:	ins    BYTE PTR es:[edi],dx
  40e841:	into   
  40e842:	in     eax,0xcd
  40e844:	pop    ss
  40e845:	nop
  40e846:	ss icebp 
  40e848:	add    BYTE PTR [ebx-0x40],dh
  40e84b:	sahf   
  40e84c:	mov    edx,0xc7b15dc5
  40e851:	stos   BYTE PTR es:[edi],al
  40e852:	(bad)  
  40e853:	scas   al,BYTE PTR es:[edi]
  40e854:	out    0xc6,al
  40e856:	pop    esp
  40e857:	test   eax,0x49a152e
  40e85c:	into   
  40e85d:	sub    BYTE PTR [edx+ebx*8+0x5f6a2baa],dh
  40e864:	push   ebp
  40e865:	xchg   ebp,eax
  40e866:	xor    DWORD PTR ds:[esp+ecx*2+0x2b],ecx
  40e86b:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40e86d:	adc    esi,edi
  40e86f:	sub    edi,DWORD PTR ds:0xfcb1b304
  40e875:	and    ch,BYTE PTR [edx+0x52]
  40e878:	dec    ebp
  40e879:	pusha  
  40e87a:	push   cs
  40e87b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e87c:	arpl   WORD PTR [ecx+0x22],dx
  40e87f:	popa   
  40e880:	mov    ch,0x9a
  40e882:	cmp    DWORD PTR [ebp+0x7f0987a9],0xffffffe5
  40e889:	push   cs
  40e88a:	dec    ecx
  40e88b:	ret    
  40e88c:	stos   DWORD PTR es:[edi],eax
  40e88d:	fisubr WORD PTR [esi-0x4ccc713a]
  40e893:	or     eax,0x8fd5da89
  40e898:	in     eax,0x9a
  40e89a:	(bad)  
  40e89b:	jno    0x40e911
  40e89d:	ins    BYTE PTR es:[edi],dx
  40e89e:	clc    
  40e89f:	imul   esp,DWORD PTR [eax-0x44],0x39
  40e8a3:	fs cmp eax,0xb1229c21
  40e8a9:	sbb    ah,BYTE PTR [edi+0x6e87ff3b]
  40e8af:	stos   BYTE PTR es:[edi],al
  40e8b0:	and    ch,BYTE PTR [eax]
  40e8b2:	xor    DWORD PTR [ebx],0x1239eb82
  40e8b8:	call   0xaae3:0xfb726c74
  40e8bf:	mov    bh,0x3b
  40e8c1:	sbb    ch,BYTE PTR [edi+0x38ee64e4]
  40e8c7:	popf   
  40e8c8:	data16 mov WORD PTR [esi+edi*2+0x4832da4e],?
  40e8d0:	and    BYTE PTR [ecx-0x7a6152e3],cl
  40e8d6:	pop    edx
  40e8d7:	retf   0xe58b
  40e8da:	cdq    
  40e8db:	xchg   BYTE PTR [ebp+ecx*4+0x182bf17e],dl
  40e8e2:	mov    dh,0x44
  40e8e4:	bound  ecx,QWORD PTR [edi+0x9c73698]
  40e8ea:	inc    DWORD PTR ds:0xad92d03a
  40e8f0:	inc    ecx
  40e8f1:	outs   dx,DWORD PTR ds:[esi]
  40e8f2:	ja     0x40e960
  40e8f4:	out    0x55,al
  40e8f6:	outs   dx,BYTE PTR ds:[esi]
  40e8f7:	pop    es
  40e8f8:	repnz les ebx,FWORD PTR [edi-0x5b]
  40e8fc:	jg     0x40e92f
  40e8fe:	sub    eax,0x28c916d3
  40e903:	cmp    al,ch
  40e905:	test   eax,0x2dacf7f7
  40e90a:	pop    ecx
  40e90b:	out    0x67,eax
  40e90d:	mov    gs,WORD PTR [ebx+eiz*1-0xd]
  40e911:	xlat   BYTE PTR ds:[ebx]
  40e912:	sub    eax,0xd9084a6d
  40e917:	cmp    bh,BYTE PTR [ecx]
  40e919:	cwde   
  40e91a:	push   ds
  40e91b:	xlat   BYTE PTR ds:[ebx]
  40e91c:	dec    ecx
  40e91d:	addr16 push edx
  40e91f:	or     DWORD PTR [esi+ecx*8-0x148439e4],edi
  40e926:	mov    bl,0x89
  40e928:	imul   ebx,ecx,0x7c
  40e92b:	call   0x8253:0x9ca65612
  40e932:	mov    ebx,0xec0e56dd
  40e937:	nop
  40e938:	mov    ecx,0x5810f456
  40e93d:	and    ebx,edx
  40e93f:	into   
  40e940:	js     0x40e908
  40e942:	repz (bad) 
  40e944:	sub    al,0xe2
  40e946:	xor    ch,bl
  40e948:	mov    dh,0x71
  40e94a:	js     0x40e932
  40e94c:	xchg   edx,eax
  40e94d:	push   eax
  40e94e:	in     al,dx
  40e94f:	jns    0x40e90b
  40e951:	cld    
  40e952:	xor    bh,bl
  40e954:	sbb    eax,0xd5479e94
  40e959:	stos   DWORD PTR es:[edi],eax
  40e95a:	scas   eax,DWORD PTR es:[edi]
  40e95b:	scas   al,BYTE PTR es:[edi]
  40e95c:	fisttp WORD PTR [eax]
  40e95e:	jl     0x40e989
  40e960:	ret    0xcdfb
  40e963:	in     eax,dx
  40e964:	jne    0x40e969
  40e966:	cli    
  40e967:	arpl   WORD PTR [ebx+0x71],si
  40e96a:	cmc    
  40e96b:	nop
  40e96c:	cld    
  40e96d:	enter  0x81a4,0xab
  40e971:	jl     0x40e994
  40e973:	jae    0x40e915
  40e975:	mov    al,0x5d
  40e977:	test   al,0x1e
  40e979:	call   0x329b69be
  40e97e:	xchg   edx,eax
  40e97f:	inc    esp
  40e980:	jb     0x40e922
  40e982:	std    
  40e983:	outs   dx,DWORD PTR ds:[esi]
  40e984:	(bad)  
  40e986:	sub    edx,0xffffffb7
  40e989:	test   al,0x53
  40e98b:	sti    
  40e98c:	push   ebx
  40e98d:	lahf   
  40e98e:	scas   eax,DWORD PTR es:[edi]
  40e98f:	cmp    cl,BYTE PTR [ebp+0x7a9c6c07]
  40e995:	mov    gs,WORD PTR [ebp-0x1b]
  40e998:	push   esp
  40e999:	push   ebx
  40e99a:	or     al,0x32
  40e99c:	jle    0x40ea12
  40e99e:	iret   
  40e99f:	or     eax,0x79101618
  40e9a4:	push   cs
  40e9a5:	push   edi
  40e9a6:	push   cs
  40e9a7:	not    al
  40e9a9:	scas   al,BYTE PTR es:[edi]
  40e9aa:	adc    DWORD PTR [ecx+0x6807c6e0],0xffffffe6
  40e9b1:	test   eax,0x18e83ae0
  40e9b6:	dec    ebx
  40e9b7:	out    dx,al
  40e9b8:	dec    esp
  40e9b9:	pop    ss
  40e9ba:	cmp    BYTE PTR [ecx],ch
  40e9bc:	shr    DWORD PTR [eax+0x2c04b616],cl
  40e9c2:	in     al,0x83
  40e9c4:	leave  
  40e9c5:	pop    edx
  40e9c6:	push   ecx
  40e9c7:	xor    eax,0xfa0c2acf
  40e9cc:	dec    ebp
  40e9cd:	test   BYTE PTR [ebx],al
  40e9cf:	sbb    BYTE PTR [ecx-0x2d],bh
  40e9d2:	xchg   bl,cl
  40e9d4:	xor    dh,BYTE PTR [edx+ebx*1]
  40e9d7:	fsubr  DWORD PTR [ebx+0x6a]
  40e9da:	pop    es
  40e9db:	outs   dx,BYTE PTR ds:[esi]
  40e9dc:	repnz dec edx
  40e9de:	mov    BYTE PTR [edx+edx*4-0x4b],cl
  40e9e2:	dec    esp
  40e9e3:	dec    edx
  40e9e4:	ret    
  40e9e5:	jo     0x40e976
  40e9e7:	stos   BYTE PTR es:[edi],al
  40e9e8:	sbb    eax,edi
  40e9ea:	push   edx
  40e9eb:	inc    edi
  40e9ec:	fidiv  WORD PTR [edi-0x26]
  40e9ef:	dec    ebx
  40e9f0:	xchg   ebx,eax
  40e9f1:	adc    DWORD PTR [esi+0x43650ba7],esp
  40e9f7:	pushf  
  40e9f8:	add    eax,0x81774137
  40e9fd:	lods   al,BYTE PTR ds:[esi]
  40e9fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9ff:	sub    BYTE PTR [eax+0x55],0xdf
  40ea03:	push   0x4856ccc4
  40ea08:	and    ecx,DWORD PTR [eax+ebp*8-0x3282bf68]
  40ea0f:	outs   dx,DWORD PTR ds:[esi]
  40ea10:	and    DWORD PTR [edi+eiz*4-0x5a90486],0x801937bb
  40ea1b:	retf   0x7ae5
  40ea1e:	int    0x5f
  40ea20:	es inc esp
  40ea22:	jmp    DWORD PTR [eax-0x7ce53904]
  40ea28:	test   eax,0xb9f2b8ab
  40ea2d:	retf   0x4cad
  40ea30:	(bad)  
  40ea31:	out    dx,eax
  40ea32:	jp     0x40ea7b
  40ea34:	sub    dl,BYTE PTR [eax-0x3b05e6eb]
  40ea3a:	xchg   ebx,eax
  40ea3b:	pop    eax
  40ea3c:	out    dx,eax
  40ea3d:	jno    0x40ea1d
  40ea3f:	repnz test eax,0x4467cf19
  40ea45:	mov    ecx,0x7fe0d15d
  40ea4a:	sbb    eax,0x52f74a
  40ea4f:	mov    ds,WORD PTR [esi+0x5d]
  40ea52:	icebp  
  40ea53:	loop   0x40eaa3
  40ea55:	retf   0xbb42
  40ea58:	imul   ecx,DWORD PTR [edx+eax*2+0x57c4f715],0xffffffc2
  40ea60:	ret    
  40ea61:	push   ebx
  40ea62:	or     DWORD PTR [ecx+0x6d],ebp
  40ea65:	mov    cl,0xa2
  40ea67:	clc    
  40ea68:	and    BYTE PTR [eax-0x6136146d],0x4a
  40ea6f:	jbe    0x40eae5
  40ea71:	in     eax,dx
  40ea72:	and    BYTE PTR [ebp-0x54],cl
  40ea75:	enter  0x752a,0x5e
  40ea79:	fwait
  40ea7a:	and    al,BYTE PTR [esi]
  40ea7c:	jnp    0x40eab6
  40ea7e:	mov    bh,0x57
  40ea80:	or     DWORD PTR [ebx-0x6d],edx
  40ea83:	or     DWORD PTR [ecx],eax
  40ea85:	stos   BYTE PTR es:[edi],al
  40ea86:	das    
  40ea87:	cmp    al,0x57
  40ea89:	adc    eax,0xc0f5b128
  40ea8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea8f:	add    al,BYTE PTR [edx+0x58fd1887]
  40ea95:	xor    bl,BYTE PTR ds:0x1e53a6b4
  40ea9b:	div    ecx
  40ea9d:	mov    ah,0x16
  40ea9f:	inc    ebp
  40eaa0:	push   es
  40eaa1:	mov    eax,0x4c190cc0
  40eaa6:	dec    esp
  40eaa7:	and    esp,DWORD PTR [edi-0x3]
  40eaaa:	ins    BYTE PTR es:[edi],dx
  40eaab:	sub    al,0x87
  40eaad:	add    edi,DWORD PTR [edx+eax*2]
  40eab0:	cli    
  40eab1:	pop    ecx
  40eab2:	(bad)
  40eab6:	cmp    BYTE PTR [ecx],cl
  40eab8:	lahf   
  40eab9:	or     dl,dh
  40eabb:	gs jle 0x40eaef
  40eabe:	sub    al,0x35
  40eac0:	inc    esi
  40eac1:	and    al,BYTE PTR [edi+eiz*4-0x49]
  40eac5:	dec    ebp
  40eac6:	sar    DWORD PTR [esi+0x6a],cl
  40eac9:	rcr    BYTE PTR [edx+ebx*2+0x401f420e],cl
  40ead0:	jmp    0x40eaa0
  40ead2:	cmp    ebp,edi
  40ead4:	fwait
  40ead5:	(bad)  
  40ead6:	aas    
  40ead7:	outs   dx,DWORD PTR ds:[si]
  40ead9:	jbe    0x40ead1
  40eadb:	add    bh,0x4d
  40eade:	mov    bl,0x6c
  40eae0:	pop    ebx
  40eae1:	(bad)  
  40eae2:	(bad)  [edx+eax*4+0x19a5b062]
  40eae9:	pop    ebp
  40eaea:	repz je 0x40eb32
  40eaed:	(bad)  
  40eaef:	xor    DWORD PTR [edi],0x65f2040b
  40eaf5:	ret    
  40eaf6:	aas    
  40eaf7:	inc    ebx
  40eaf8:	push   edx
  40eaf9:	jl     0x40eaf3
  40eafb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eafc:	loop   0x40eb4a
  40eafe:	inc    edi
  40eaff:	push   ebp
  40eb01:	jo     0x40ea8a
  40eb03:	nop
  40eb04:	fmul   DWORD PTR [edx+0x3c]
  40eb07:	imul   edi,DWORD PTR [esi],0x55
  40eb0a:	and    al,0x67
  40eb0c:	xor    dh,BYTE PTR [ebx+eax*4-0x3eb9b039]
  40eb13:	xor    esp,DWORD PTR [esi]
  40eb15:	add    al,BYTE PTR [ebx+0x29ad1263]
  40eb1b:	xor    eax,0xa291b736
  40eb20:	xlat   BYTE PTR ds:[ebx]
  40eb21:	pop    ebp
  40eb22:	test   bl,al
  40eb24:	hlt    
  40eb25:	mov    ds:0xc234dc4e,al
  40eb2a:	in     al,0x3
  40eb2c:	cmp    BYTE PTR [ebx+0x322d4e9e],bh
  40eb32:	loope  0x40eac9
  40eb34:	repz xchg esp,eax
  40eb36:	(bad)  
  40eb38:	pop    esi
  40eb39:	and    edi,DWORD PTR [edx+eiz*1+0x25485eee]
  40eb40:	loopne 0x40eadc
  40eb42:	push   ebx
  40eb43:	enter  0x73ef,0x9b
  40eb47:	shl    BYTE PTR es:[edi+0x3492027c],1
  40eb4e:	cmp    eax,0x3274a68d
  40eb53:	xor    dl,BYTE PTR [edi]
  40eb55:	and    ch,dh
  40eb57:	icebp  
  40eb58:	test   DWORD PTR [eax-0x223f731e],ebp
  40eb5e:	pop    ebx
  40eb5f:	dec    esp
  40eb60:	cmc    
  40eb61:	sub    eax,0x543cd719
  40eb66:	dec    edi
  40eb67:	add    ecx,DWORD PTR [edx+0x54]
  40eb6a:	and    BYTE PTR [edi-0x7d354285],ah
  40eb70:	test   al,0x4c
  40eb72:	std    
  40eb73:	mov    DWORD PTR [esp+ebx*4+0x51625a43],edx
  40eb7a:	sub    esi,edx
  40eb7c:	dec    edi
  40eb7d:	fld    QWORD PTR [ebx+0x5]
  40eb80:	inc    esi
  40eb81:	in     eax,0xe8
  40eb83:	push   es
  40eb84:	in     eax,dx
  40eb85:	xchg   edi,eax
  40eb86:	inc    eax
  40eb87:	inc    esi
  40eb88:	aas    
  40eb89:	push   ebx
  40eb8a:	sub    BYTE PTR [ecx],al
  40eb8c:	adc    DWORD PTR [eax+0x521226cd],edi
  40eb92:	lahf   
  40eb93:	sub    ecx,ebp
  40eb95:	push   edi
  40eb96:	cmp    dl,BYTE PTR [eax-0x67]
  40eb99:	sbb    BYTE PTR [edi-0x5b],bh
  40eb9c:	shl    dl,1
  40eb9e:	push   0xae984617
  40eba3:	cmp    BYTE PTR [edx],al
  40eba5:	jl     0x40eb39
  40eba7:	pop    ss
  40eba8:	mul    edi
  40ebaa:	inc    edx
  40ebab:	mov    bh,0x20
  40ebad:	xor    dh,dh
  40ebaf:	or     edi,ebp
  40ebb1:	adc    BYTE PTR [ebx+0x76],bl
  40ebb4:	aaa    
  40ebb5:	pop    eax
  40ebb6:	add    eax,0xc7edf4e6
  40ebbb:	xor    DWORD PTR [edi],ecx
  40ebbd:	add    eax,0x303ef25
  40ebc2:	pop    ebx
  40ebc3:	mov    dh,0xb7
  40ebc5:	adc    BYTE PTR [ecx+esi*4+0x195764ee],ah
  40ebcc:	lahf   
  40ebcd:	ret    
  40ebce:	test   BYTE PTR [esi-0x6c],bh
  40ebd1:	sbb    al,BYTE PTR [ebp-0x63]
  40ebd4:	and    ah,BYTE PTR [ecx+0x177a4c7d]
  40ebda:	sub    DWORD PTR [edi+0x6b],0x3b49dcb7
  40ebe1:	scas   al,BYTE PTR es:[edi]
  40ebe2:	call   0x5abf:0x89f24de5
  40ebe9:	mov    ds:0xc68cada2,eax
  40ebee:	fcom   QWORD PTR [edi-0x35]
  40ebf1:	mov    ds:0x48a05c2f,eax
  40ebf6:	mov    ch,0x45
  40ebf8:	jge    0x40ec4a
  40ebfa:	out    dx,eax
  40ebfb:	ret    0xde07
  40ebfe:	mov    al,ds:0x54c97d0b
  40ec03:	sbb    eax,DWORD PTR [ebx-0x47f624a3]
  40ec09:	mov    edi,0x5504de2f
  40ec0e:	mov    esp,0xe36eae05
  40ec13:	mov    ds:0xff8d3d15,al
  40ec18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec19:	repnz pop edx
  40ec1b:	push   edi
  40ec1c:	sbb    DWORD PTR [esi+0x3b5c60b1],0x2e
  40ec23:	pop    es
  40ec24:	imul   DWORD PTR [esp+edx*2-0x7212cc88]
  40ec2b:	cld    
  40ec2c:	cmp    al,BYTE PTR [esi-0x7b]
  40ec2f:	dec    ebp
  40ec30:	xchg   esp,eax
  40ec31:	xchg   ebx,esp
  40ec33:	stos   DWORD PTR es:[edi],eax
  40ec34:	push   0xed1c93eb
  40ec39:	loopne 0x40ebfb
  40ec3b:	push   ecx
  40ec3c:	xchg   BYTE PTR [ecx+0x2c330703],dl
  40ec42:	jp     0x40ebfd
  40ec44:	fucom  st(3)
  40ec46:	and    eax,0xb1eb63b7
  40ec4b:	push   esi
  40ec4c:	test   DWORD PTR [esp+esi*8],eax
  40ec4f:	xlat   BYTE PTR ds:[ebx]
  40ec50:	ins    BYTE PTR es:[edi],dx
  40ec51:	stos   DWORD PTR es:[edi],eax
  40ec52:	sbb    DWORD PTR [eax],0x12a6e23d
  40ec58:	sbb    al,0x92
  40ec5a:	xor    al,0xad
  40ec5c:	cld    
  40ec5d:	mov    dl,0x80
  40ec5f:	jnp    0x40ebed
  40ec61:	mov    ecx,0x9a2eba0f
  40ec66:	inc    esi
  40ec67:	pop    edx
  40ec68:	pushf  
  40ec69:	test   eax,0xf227bbd3
  40ec6e:	mov    ebp,0xf67388dd
  40ec73:	pop    edi
  40ec74:	sub    al,0x44
  40ec76:	push   esp
  40ec77:	add    bl,BYTE PTR [ecx+0x8]
  40ec7a:	xlat   BYTE PTR ds:[ebx]
  40ec7b:	xchg   edx,eax
  40ec7c:	cmp    al,0x48
  40ec7e:	mov    DWORD PTR [esi],edi
  40ec80:	pop    eax
  40ec81:	fist   DWORD PTR [edx-0x20644289]
  40ec87:	arpl   WORD PTR [esi],bp
  40ec89:	stos   DWORD PTR es:[edi],eax
  40ec8a:	in     al,0x2c
  40ec8c:	add    BYTE PTR [eax+0x2e5bbe1b],bh
  40ec92:	and    eax,0xac4b305a
  40ec97:	xor    DWORD PTR [edi],esp
  40ec99:	loope  0x40ec88
  40ec9b:	pop    esi
  40ec9c:	int3   
  40ec9d:	xchg   ebp,eax
  40ec9e:	outs   dx,BYTE PTR ds:[esi]
  40ec9f:	fsubr  DWORD PTR cs:[ecx-0x333ac571]
  40eca6:	out    0x19,eax
  40eca8:	jge    0x40eca7
  40ecaa:	dec    ebx
  40ecab:	xor    BYTE PTR [edx+0x5c4c2e91],ah
  40ecb1:	lds    esi,FWORD PTR [edi+0x5f]
  40ecb4:	stos   BYTE PTR es:[edi],al
  40ecb5:	(bad)
  40ecb9:	clc    
  40ecba:	xchg   edi,eax
  40ecbb:	outs   dx,DWORD PTR ds:[esi]
  40ecbc:	xchg   DWORD PTR [ebp+0x58],eax
  40ecbf:	icebp  
  40ecc0:	mov    ds:0x56802526,eax
  40ecc5:	or     DWORD PTR [edi-0x54d07f83],ecx
  40eccb:	cdq    
  40eccc:	pop    eax
  40eccd:	push   ebp
  40ecce:	cs jp  0x40ed30
  40ecd1:	leave  
  40ecd2:	ror    DWORD PTR [ebx],1
  40ecd4:	jnp    0x40ecca
  40ecd6:	jl     0x40ed12
  40ecd8:	iret   
  40ecd9:	pop    ecx
  40ecda:	(bad)  
  40ecdb:	pop    ebx
  40ecdc:	mov    al,0xef
  40ecde:	fwait
  40ecdf:	repnz mov ch,0x24
  40ece2:	cwde   
  40ece3:	retf   
  40ece4:	xor    dh,0x8f
  40ece7:	cmp    al,BYTE PTR [edi+0x72]
  40ecea:	fcomp  DWORD PTR [esi+ebx*2-0x6027032e]
  40ecf1:	sbb    BYTE PTR [ecx+0x6c],cl
  40ecf4:	mov    ebp,0x6f0abafd
  40ecf9:	inc    ecx
  40ecfa:	lea    edx,[edi-0x7a]
  40ecfd:	jne    0x40ed33
  40ecff:	xchg   esp,eax
  40ed00:	cmp    BYTE PTR [eax],dl
  40ed02:	test   eax,0xa1d72dc8
  40ed07:	mov    esp,0x7f96bf96
  40ed0c:	add    BYTE PTR [ebx],dl
  40ed0e:	inc    ebx
  40ed0f:	mov    ds:0xd9bd5b44,al
  40ed14:	pop    esp
  40ed15:	jbe    0x40ed15
  40ed17:	int    0xed
  40ed19:	mov    bh,0x61
  40ed1b:	xchg   edx,eax
  40ed1c:	lahf   
  40ed1d:	ja     0x40ed5b
  40ed1f:	loope  0x40ed57
  40ed21:	pop    esp
  40ed22:	loop   0x40ecb7
  40ed24:	cmp    dh,BYTE PTR [edx-0x2]
  40ed27:	push   0xffffffde
  40ed29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed2a:	xor    DWORD PTR [eax+eax*4-0x788be96a],ebx
  40ed31:	mov    edx,0x7ac93395
  40ed36:	aas    
  40ed37:	xor    al,0xba
  40ed39:	jle    0x40ed71
  40ed3b:	fldcw  WORD PTR [ebx]
  40ed3d:	loop   0x40edb8
  40ed3f:	jb     0x40edb8
  40ed41:	inc    eax
  40ed42:	inc    ebp
  40ed43:	dec    edi
  40ed44:	mov    dl,0x8b
  40ed46:	dec    eax
  40ed47:	xchg   ebp,eax
  40ed48:	push   ecx
  40ed49:	xchg   esp,eax
  40ed4a:	mov    ds:0xfa78f0f6,eax
  40ed4f:	adc    BYTE PTR [ebp+0x76],dl
  40ed52:	fcomp  DWORD PTR [ebx+ebp*1+0x63279aa7]
  40ed59:	rol    BYTE PTR [ebx],0xef
  40ed5c:	mov    dl,0x34
  40ed5e:	fisttp WORD PTR [eax-0x102447f0]
  40ed64:	xchg   ecx,eax
  40ed65:	push   ecx
  40ed66:	imul   ebx,DWORD PTR [eax+0x3ed39820],0xffffff9d
  40ed6d:	add    dl,BYTE PTR [edx]
  40ed6f:	mov    bl,0xe
  40ed71:	push   cs
  40ed72:	dec    esi
  40ed73:	or     eax,0x41e7c621
  40ed78:	dec    esi
  40ed79:	adc    BYTE PTR ds:0x8683e144,ch
  40ed7f:	add    ebx,DWORD PTR [esi-0xbd39079]
  40ed85:	fs nop
  40ed87:	sbb    eax,0x70eb8ec9
  40ed8c:	adc    DWORD PTR ds:0x7a0247b7,eax
  40ed92:	add    al,0xed
  40ed94:	sbb    ah,BYTE PTR [eax-0x8]
  40ed97:	cld    
  40ed98:	sbb    bh,BYTE PTR [ecx-0x2f45902f]
  40ed9e:	mov    edi,0x72dafcd0
  40eda3:	xchg   esi,eax
  40eda4:	xchg   ebp,eax
  40eda5:	adc    ebx,DWORD PTR [edx-0x380b23d]
  40edab:	add    eax,0xeac8314f
  40edb0:	adc    DWORD PTR [edx-0x353c95bb],0x46969738
  40edba:	push   ds
  40edbb:	sub    eax,0xf7f3ea2e
  40edc0:	jo     0x40edb6
  40edc2:	xchg   ch,ah
  40edc4:	jne    0x40edbb
  40edc6:	cmp    DWORD PTR [edx-0x46afa12e],esp
  40edcc:	xor    esp,DWORD PTR [ebx+edx*2]
  40edcf:	cmp    DWORD PTR [esi+0x39566f8],ebx
  40edd5:	push   ds
  40edd6:	or     esp,DWORD PTR [edi]
  40edd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edd9:	stos   DWORD PTR es:[edi],eax
  40edda:	push   ebp
  40eddb:	sub    BYTE PTR [esi+ecx*4],bh
  40edde:	mov    dh,0xed
  40ede0:	cwde   
  40ede1:	jnp    0x40ed66
  40ede3:	(bad)
  40ede6:	outs   dx,BYTE PTR ds:[esi]
  40ede7:	lods   al,BYTE PTR ds:[esi]
  40ede8:	pop    ss
  40ede9:	shl    BYTE PTR [ebp-0x4bcbaf38],0x7d
  40edf0:	(bad)  
  40edf1:	xor    al,0x5e
  40edf3:	cdq    
  40edf4:	push   eax
  40edf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edf6:	aad    0x73
  40edf8:	pop    eax
  40edf9:	sbb    eax,0x4f0e2bd1
  40edfe:	pushf  
  40edff:	jmp    0x92bb052f
  40ee04:	and    eax,0xc4ad8d2f
  40ee09:	aam    0x19
  40ee0b:	js     0x40edf7
  40ee0d:	test   al,0x99
  40ee0f:	push   esi
  40ee10:	jbe    0x40ee01
  40ee12:	inc    edi
  40ee13:	std    
  40ee14:	pop    ss
  40ee15:	(bad)  
  40ee16:	jns    0x40edfe
  40ee18:	sbb    BYTE PTR [esi+0x5f],ah
  40ee1b:	mov    ebx,0xa3397026
  40ee20:	pop    eax
  40ee21:	rol    BYTE PTR [edx-0x78],0xeb
  40ee25:	sahf   
  40ee26:	xor    DWORD PTR es:[ebx-0x46c998bc],eax
  40ee2d:	jmp    0x40ee5e
  40ee2f:	mov    ecx,0xe0f0b968
  40ee34:	sbb    dl,BYTE PTR [ebp+edi*4+0x74faa80d]
  40ee3b:	pushf  
  40ee3c:	(bad)  
  40ee3d:	addr16 jbe 0x40ee91
  40ee40:	bnd jo 0x40ede9
  40ee43:	adc    eax,0xc956c14
  40ee48:	aaa    
  40ee49:	ins    DWORD PTR es:[edi],dx
  40ee4a:	xchg   dh,cl
  40ee4c:	sub    eax,0x16353120
  40ee51:	push   ds
  40ee52:	fidivr DWORD PTR [ebx-0x659b0a80]
  40ee58:	out    0xdf,eax
  40ee5a:	pop    esp
  40ee5b:	mov    ds:0x6c7b0d31,al
  40ee60:	loop   0x40ee4f
  40ee62:	push   0x21
  40ee64:	retf   
  40ee65:	pushf  
  40ee66:	xchg   ebp,eax
  40ee67:	rol    DWORD PTR cs:[ebp+0x681636dd],cl
  40ee6e:	jge    0x40ee6c
  40ee70:	lahf   
  40ee71:	retf   
  40ee72:	inc    edi
  40ee73:	aam    0xbf
  40ee75:	mov    eax,0x2cf3cd92
  40ee7a:	scas   al,BYTE PTR es:[edi]
  40ee7b:	jg     0x40ee0f
  40ee7d:	pop    esp
  40ee7e:	mov    al,ds:0x16519033
  40ee83:	call   0x785e3709
  40ee88:	mov    WORD PTR [edx+0x43ad3cf9],?
  40ee8e:	fs push ebp
  40ee90:	cld    
  40ee91:	cld    
  40ee92:	fadd   QWORD PTR [ebx]
  40ee95:	sub    ch,ah
  40ee97:	out    dx,eax
  40ee98:	mov    ecx,ss
  40ee9a:	mov    edx,0x30e6462e
  40ee9f:	cmp    ch,BYTE PTR [eax+0x718e68fd]
  40eea5:	stc    
  40eea6:	mov    WORD PTR [ecx],ss
  40eea8:	add    al,0xb2
  40eeaa:	mov    ah,0x58
  40eeac:	pop    DWORD PTR [esi-0x61e8261b]
  40eeb2:	nop
  40eeb3:	sub    DWORD PTR [eax],ecx
  40eeb5:	jne    0x40ee8e
  40eeb7:	push   ecx
  40eeb8:	scas   al,BYTE PTR es:[edi]
  40eeb9:	xchg   BYTE PTR [ecx],cl
  40eebb:	jg     0x40ee60
  40eebd:	xchg   ecx,eax
  40eebe:	ins    BYTE PTR es:[edi],dx
  40eebf:	mov    ebp,0xc5d164d8
  40eec4:	and    eax,0x30dc5ce0
  40eec9:	int    0xa7
  40eecb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eecc:	les    edi,FWORD PTR [edi+0x6f58c18e]
  40eed2:	shr    DWORD PTR [ebp+0x2c],1
  40eed5:	xlat   BYTE PTR ds:[ebx]
  40eed6:	adc    edi,DWORD PTR [edi+0x3d9c7f7d]
  40eedc:	popa   
  40eedd:	std    
  40eede:	mov    bh,0xa9
  40eee0:	mov    ebp,DWORD PTR [ecx-0x1d]
  40eee3:	sub    ah,ah
  40eee5:	jbe    0x40ee7e
  40eee7:	sbb    ecx,DWORD PTR ds:0xdfcff92c
  40eeed:	mov    BYTE PTR [eax],ah
  40eeef:	hlt    
  40eef0:	out    0x3e,al
  40eef2:	ret    0xf7d
  40eef5:	nop
  40eef6:	inc    esp
  40eef7:	aaa    
  40eef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eef9:	shl    BYTE PTR [ebx],1
  40eefb:	mov    dl,0xa
  40eefd:	adc    BYTE PTR [ebp-0x68a0a32b],cl
  40ef03:	dec    ecx
  40ef04:	dec    ecx
  40ef05:	outs   dx,BYTE PTR ds:[esi]
  40ef06:	jb     0x40ef63
  40ef08:	add    al,0x51
  40ef0a:	and    eax,0x80659513
  40ef0f:	bound  edi,QWORD PTR [ebp-0x23]
  40ef12:	adc    BYTE PTR [ebx],bl
  40ef14:	dec    edi
  40ef15:	mov    dl,0x2a
  40ef17:	add    al,0xc6
  40ef19:	retf   0x8d3b
  40ef1c:	mov    bl,0xea
  40ef1e:	aad    0xd1
  40ef20:	push   esi
  40ef21:	out    0xdc,eax
  40ef23:	retf   
  40ef24:	pop    edx
  40ef25:	adc    eax,0xdd0b6c7b
  40ef2a:	mov    ebp,0xc2a27f15
  40ef2f:	add    al,0x2f
  40ef31:	scas   eax,DWORD PTR es:[edi]
  40ef32:	(bad)  
  40ef33:	out    0x39,al
  40ef35:	mov    eax,ds:0xdc97bae1
  40ef3a:	sar    DWORD PTR [eax-0x6dd339c6],1
  40ef40:	pop    esi
  40ef41:	or     esp,eax
  40ef43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef44:	stos   DWORD PTR es:[edi],eax
  40ef45:	out    dx,al
  40ef46:	add    eax,0x3c6d964b
  40ef4b:	dec    edx
  40ef4c:	jns    0x40ef00
  40ef4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef4f:	mov    ecx,0x495bf430
  40ef54:	loope  0x40ef14
  40ef56:	(bad)  
  40ef57:	push   edi
  40ef58:	leave  
  40ef59:	ds cmp eax,0x7c651fa
  40ef5f:	jmp    0x5700:0xe7a36eb7
  40ef66:	push   cs
  40ef67:	push   ebx
  40ef68:	or     al,0x4a
  40ef6a:	das    
  40ef6b:	pop    esi
  40ef6c:	nop
  40ef6d:	mov    edi,0x2b7dd1df
  40ef72:	(bad)
  40ef75:	inc    esp
  40ef76:	or     DWORD PTR [edx+ecx*1+0x43],eax
  40ef7a:	mul    cl
  40ef7c:	pop    ds
  40ef7d:	ret    
  40ef7e:	jbe    0x40efce
  40ef80:	mov    cl,0x0
  40ef82:	addr16 xor ebx,eax
  40ef85:	xchg   BYTE PTR [ecx+0xb],ch
  40ef88:	inc    edi
  40ef89:	xchg   ebp,eax
  40ef8a:	cmp    DWORD PTR [ebx+ecx*2+0x676c1fa0],ecx
  40ef91:	or     eax,DWORD PTR ds:0x7909f749
  40ef97:	fldcw  WORD PTR [ebx-0x5b10acb8]
  40ef9d:	mov    dh,0xb3
  40ef9f:	es test eax,0x84c4ee4c
  40efa5:	fdiv   QWORD PTR [eax]
  40efa7:	arpl   cx,si
  40efa9:	hlt    
  40efaa:	(bad)  
  40efab:	ret    
  40efac:	cmp    DWORD PTR [esi-0x70],eax
  40efaf:	or     BYTE PTR [eax],cl
  40efb1:	mov    al,BYTE PTR es:[ebp-0x1]
  40efb5:	and    DWORD PTR ds:0x429018,0x0
  40efbf:	xor    ecx,ecx
  40efc1:	or     ecx,DWORD PTR ds:0x429018
  40efc7:	inc    ecx
  40efc8:	mov    DWORD PTR ds:0x429018,ecx
  40efce:	cmp    DWORD PTR ds:0x429018,0xa
  40efd5:	jne    0x40efe1
  40efdb:	call   DWORD PTR ds:0x42e9b3
  40efe1:	cmp    DWORD PTR ds:0x429018,0x9
  40efe8:	jne    0x40effb
  40efee:	mov    ecx,DWORD PTR ds:0x429018
  40eff4:	inc    ecx
  40eff5:	mov    DWORD PTR ds:0x429018,ecx
  40effb:	cmp    DWORD PTR ds:0x429018,0x1e
  40f002:	jb     0x40efbf
  40f008:	sub    DWORD PTR ds:0x42c014,ecx
  40f00e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f011:	xor    al,0x73
  40f013:	sub    al,0x9
  40f015:	mov    DWORD PTR ds:0x42b000,0xef4
  40f01f:	mov    BYTE PTR [ecx],al
  40f021:	and    DWORD PTR ds:0x42b01c,0x42a004
  40f02b:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  40f032:	sbb    DWORD PTR ds:0x429024,0xfd3
  40f03c:	push   ebx
  40f03d:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  40f044:	mov    ecx,DWORD PTR [ebp-0x18]
  40f047:	xor    eax,0x6376
  40f04c:	push   esi
  40f04d:	and    DWORD PTR ds:0x42c01c,0x0
  40f057:	jmp    0x40f06a
  40f05c:	xor    eax,eax
  40f05e:	add    eax,DWORD PTR ds:0x42c01c
  40f064:	inc    eax
  40f065:	mov    ds:0x42c01c,eax
  40f06a:	cmp    DWORD PTR ds:0x42c01c,0x16
  40f071:	jae    0x40f0bd
  40f077:	cmp    DWORD PTR ds:0x42c01c,0x4
  40f07e:	jne    0x40f0a0
  40f084:	push   DWORD PTR [ebp-0x24]
  40f087:	push   0x42901c
  40f08c:	push   DWORD PTR [ebp-0x18]
  40f08f:	push   DWORD PTR [ebp-0x14]
  40f092:	push   DWORD PTR [ebp-0x24]
  40f095:	push   0x236f
  40f09a:	call   DWORD PTR ds:0x42e9b7
  40f0a0:	cmp    DWORD PTR ds:0x42c01c,0x3
  40f0a7:	jne    0x40f0b8
  40f0ad:	mov    eax,ds:0x42c01c
  40f0b2:	inc    eax
  40f0b3:	mov    ds:0x42c01c,eax
  40f0b8:	jmp    0x40f05c
  40f0bd:	mov    eax,0x7510899
  40f0c2:	xor    ecx,eax
  40f0c4:	mov    esi,0x3272e0
  40f0c9:	adc    DWORD PTR ds:0x42a014,0x429010
  40f0d3:	push   edi
  40f0d4:	add    ecx,esi
  40f0d6:	jmp    0x40f0fa
  40f0db:	mov    DWORD PTR ds:0x42c014,0x1850
  40f0e5:	mov    dl,BYTE PTR [ebp-0x1]
  40f0e8:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40f0ef:	mov    DWORD PTR ds:0x42a00c,0x213a
  40f0f9:	inc    ecx
  40f0fa:	mov    DWORD PTR ds:0x42b000,0x51ce
  40f104:	cmp    ecx,0x40
  40f107:	jb     0x40f0db
  40f10d:	mov    edx,DWORD PTR [ebp-0x18]
  40f110:	xor    edx,eax
  40f112:	add    edx,esi
  40f114:	mov    DWORD PTR ds:0x42c00c,0x7eb4
  40f11e:	jmp    0x40f1de
  40f123:	sub    DWORD PTR ds:0x42d018,edi
  40f129:	mov    edi,DWORD PTR [ebp+0x8]
  40f12c:	and    DWORD PTR ds:0x42d008,0x0
  40f136:	jmp    0x40f14a
  40f13b:	xor    ecx,ecx
  40f13d:	or     ecx,DWORD PTR ds:0x42d008
  40f143:	inc    ecx
  40f144:	mov    DWORD PTR ds:0x42d008,ecx
  40f14a:	cmp    DWORD PTR ds:0x42d008,0x18
  40f151:	jae    0x40f175
  40f157:	cmp    DWORD PTR ds:0x42d008,0x26
  40f15e:	jne    0x40f16a
  40f164:	call   DWORD PTR ds:0x42e9bb
  40f16a:	jmp    0x40f13b
  40f16f:	xor    DWORD PTR ds:0x42a00c,edx
  40f175:	mov    ecx,0x8a8c
  40f17a:	xor    DWORD PTR ds:0x42a004,0x50dc
  40f184:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f189:	mov    edi,0x3b50
  40f18e:	add    DWORD PTR ds:0x429008,0x42b008
  40f198:	add    cx,di
  40f19b:	xor    DWORD PTR ds:0x429018,0x2fa9
  40f1a5:	movzx  ecx,cx
  40f1a8:	mov    DWORD PTR [ebp-0xc],ecx
  40f1ab:	mov    ecx,DWORD PTR [ebp+0x8]
  40f1ae:	add    DWORD PTR ds:0x42b000,0x4595
  40f1b8:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f1bc:	mov    DWORD PTR ds:0x42c010,0x3cf8
  40f1c6:	xor    ecx,0x8a8c
  40f1cc:	add    ecx,edi
  40f1ce:	mov    edi,0x13c
  40f1d3:	mov    edi,DWORD PTR [ebp-0xc]
  40f1d6:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40f1dd:	inc    edx
  40f1de:	mov    DWORD PTR ds:0x42c008,0x3284
  40f1e8:	mov    ecx,DWORD PTR [ebp-0x10]
  40f1eb:	mov    DWORD PTR ds:0x42d00c,0x2d6d
  40f1f5:	cmp    edx,ecx
  40f1f7:	jne    0x40f123
  40f1fd:	xor    edi,DWORD PTR ds:0x42900c
  40f203:	mov    ecx,DWORD PTR [ebp-0x18]
  40f206:	and    DWORD PTR ds:0x429024,0x0
  40f210:	jmp    0x40f224
  40f215:	xor    edx,edx
  40f217:	or     edx,DWORD PTR ds:0x429024
  40f21d:	inc    edx
  40f21e:	mov    DWORD PTR ds:0x429024,edx
  40f224:	cmp    DWORD PTR ds:0x429024,0x10
  40f22b:	jae    0x40f27a
  40f231:	cmp    DWORD PTR ds:0x429024,0xa
  40f238:	jne    0x40f24f
  40f23e:	push   DWORD PTR [ebp-0x14]
  40f241:	push   0x42b018
  40f246:	push   DWORD PTR [ebp-0x14]
  40f249:	call   DWORD PTR ds:0x42e9bf
  40f24f:	cmp    DWORD PTR ds:0x429024,0x9
  40f256:	jne    0x40f26b
  40f25c:	xor    edx,edx
  40f25e:	xor    edx,DWORD PTR ds:0x429024
  40f264:	inc    edx
  40f265:	mov    DWORD PTR ds:0x429024,edx
  40f26b:	jmp    0x40f215
  40f270:	adc    DWORD PTR ds:0x42d00c,0x5b30
  40f27a:	mov    edx,DWORD PTR [ebp+0x10]
  40f27d:	xor    edi,0x523a
  40f283:	xor    ecx,eax
  40f285:	dec    DWORD PTR ds:0x42b010
  40f28b:	add    ecx,esi
  40f28d:	mov    DWORD PTR [edx],ecx
  40f28f:	sbb    DWORD PTR ds:0x42d004,0x42a008
  40f299:	mov    ecx,DWORD PTR [ebp-0x18]
  40f29c:	inc    edi
  40f29d:	xor    ecx,eax
  40f29f:	mov    edi,DWORD PTR ds:0x42a000
  40f2a5:	xor    DWORD PTR ds:0x42a004,edi
  40f2ab:	add    ecx,esi
  40f2ad:	mov    DWORD PTR ds:0x42d000,0x15
  40f2b7:	cmp    DWORD PTR ds:0x42d000,0x0
  40f2be:	je     0x40f2f6
  40f2c4:	cmp    DWORD PTR ds:0x42d000,0x1a
  40f2cb:	jne    0x40f2e4
  40f2d1:	push   0x42e111
  40f2d6:	push   0x42e0c7
  40f2db:	push   DWORD PTR [ebp-0x20]
  40f2de:	call   DWORD PTR ds:0x42e9c7
  40f2e4:	mov    edi,DWORD PTR ds:0x42d000
  40f2ea:	dec    edi
  40f2eb:	mov    DWORD PTR ds:0x42d000,edi
  40f2f1:	jmp    0x40f2b7
  40f2f6:	mov    DWORD PTR [ebp-0xc],ecx
  40f2f9:	not    edi
  40f2fb:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  40f302:	mov    DWORD PTR [ebp-0x14],0xf89c85a9
  40f309:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  40f310:	and    DWORD PTR ds:0x42b010,ecx
  40f316:	mov    ecx,DWORD PTR [ebp-0x14]
  40f319:	mov    DWORD PTR ds:0x42b018,0x1d
  40f323:	cmp    DWORD PTR ds:0x42b018,0x0
  40f32a:	je     0x40f37c
  40f330:	cmp    DWORD PTR ds:0x42b018,0xc
  40f337:	jne    0x40f348
  40f33d:	push   0x42e0d9
  40f342:	call   DWORD PTR ds:0x42e9cb
  40f348:	cmp    DWORD PTR ds:0x42b018,0xd
  40f34f:	jne    0x40f362
  40f355:	mov    edi,DWORD PTR ds:0x42b018
  40f35b:	dec    edi
  40f35c:	mov    DWORD PTR ds:0x42b018,edi
  40f362:	xor    edi,edi
  40f364:	xor    edi,DWORD PTR ds:0x42b018
  40f36a:	dec    edi
  40f36b:	mov    DWORD PTR ds:0x42b018,edi
  40f371:	jmp    0x40f323
  40f376:	not    DWORD PTR ds:0x42d018
  40f37c:	mov    DWORD PTR [ebp+0x8],ecx
  40f37f:	sub    edi,ecx
  40f381:	mov    ecx,DWORD PTR [ebp+0x8]
  40f384:	and    DWORD PTR ds:0x42a010,0x408f
  40f38e:	xor    ecx,eax
  40f390:	add    ecx,esi
  40f392:	mov    ecx,0x242ebed
  40f397:	not    edi
  40f399:	mov    edi,0xf641bea
  40f39e:	je     0x418714
  40f3a4:	mov    edx,DWORD PTR [ebp+0x8]
  40f3a7:	or     DWORD PTR ds:0x429008,0x3119
  40f3b1:	mov    ebx,DWORD PTR [ebp-0x8]
  40f3b4:	adc    DWORD PTR ds:0x42a018,0x42c014
  40f3be:	xor    edx,eax
  40f3c0:	xor    ebx,eax
  40f3c2:	sub    DWORD PTR ds:0x42c004,0x429010
  40f3cc:	sub    edx,ebx
  40f3ce:	sub    edx,esi
  40f3d0:	xor    edx,eax
  40f3d2:	mov    DWORD PTR [ebp+0x8],edx
  40f3d5:	inc    DWORD PTR ds:0x42b010
  40f3db:	mov    edx,DWORD PTR [ebp+0x8]
  40f3de:	mov    ebx,DWORD PTR [ebp-0x58]
  40f3e1:	add    edx,0x5708f8
  40f3e7:	sub    DWORD PTR ds:0x42c01c,0x72ca
  40f3f1:	imul   edx,ebx
  40f3f4:	xor    DWORD PTR ds:0x429024,edi
  40f3fa:	mov    DWORD PTR [ebp-0x58],edx
  40f3fd:	and    DWORD PTR ds:0x42d004,0x0
  40f407:	mov    ebx,DWORD PTR ds:0x42d004
  40f40d:	inc    ebx
  40f40e:	mov    DWORD PTR ds:0x42d004,ebx
  40f414:	cmp    DWORD PTR ds:0x42d004,0x1e
  40f41b:	jne    0x40f42c
  40f421:	push   0x42a004
  40f426:	call   DWORD PTR ds:0x42e9d3
  40f42c:	cmp    DWORD PTR ds:0x42d004,0x17
  40f433:	jb     0x40f407
  40f439:	mov    edx,DWORD PTR [ebp+0x8]
  40f43c:	mov    ebx,DWORD PTR [ebp-0x54]
  40f43f:	add    edx,0x64f8da
  40f445:	xor    DWORD PTR ds:0x42b004,0x42b000
  40f44f:	or     edx,ebx
  40f451:	adc    DWORD PTR ds:0x42c014,0x3307
  40f45b:	mov    DWORD PTR [ebp-0x54],edx
  40f45e:	add    DWORD PTR ds:0x42d004,0x3241
  40f468:	mov    edx,DWORD PTR [ebp+0x8]
  40f46b:	sub    DWORD PTR ds:0x42900c,0x6cc3
  40f475:	mov    ebx,DWORD PTR [ebp-0x50]
  40f478:	xor    DWORD PTR ds:0x42b014,0x42c01c
  40f482:	add    edx,ecx
  40f484:	adc    DWORD PTR ds:0x42c000,0x429028
  40f48e:	xor    edx,ebx
  40f490:	mov    DWORD PTR [ebp-0x50],edx
  40f493:	and    DWORD PTR ds:0x429018,0x0
  40f49d:	mov    ebx,DWORD PTR ds:0x429018
  40f4a3:	inc    ebx
  40f4a4:	mov    DWORD PTR ds:0x429018,ebx
  40f4aa:	cmp    DWORD PTR ds:0x429018,0x1f
  40f4b1:	jne    0x40f4cc
  40f4b7:	push   0x42c010
  40f4bc:	push   0x42c018
  40f4c1:	push   0x42a008
  40f4c6:	call   DWORD PTR ds:0x42e993
  40f4cc:	cmp    DWORD PTR ds:0x429018,0x1e
  40f4d3:	jb     0x40f49d
  40f4d9:	inc    edx
  40f4da:	mov    edx,DWORD PTR [ebp+0x8]
  40f4dd:	mov    ebx,DWORD PTR [ebp-0x4c]
  40f4e0:	add    DWORD PTR ds:0x42d010,0x42d01c
  40f4ea:	add    edx,edi
  40f4ec:	adc    DWORD PTR ds:0x42d018,0x42b01c
  40f4f6:	and    edx,ebx
  40f4f8:	mov    DWORD PTR [ebp-0x4c],edx
  40f4fb:	or     edx,DWORD PTR ds:0x42b000
  40f501:	mov    edx,DWORD PTR [ebp+0x8]
  40f504:	mov    ebx,DWORD PTR ds:0x42d000
  40f50a:	sub    DWORD PTR ds:0x42a000,ebx
  40f510:	mov    ebx,DWORD PTR [ebp-0x48]
  40f513:	or     DWORD PTR ds:0x42c000,0x42c010
  40f51d:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f524:	mov    DWORD PTR [ebp-0x48],edx
  40f527:	mov    edx,DWORD PTR [ebp+0x8]
  40f52a:	mov    ebx,0xfa5e15e2
  40f52f:	inc    DWORD PTR ds:0x42d018
  40f535:	sub    ebx,edx
  40f537:	movzx  edx,WORD PTR ds:0x42c018
  40f53e:	adc    edx,DWORD PTR ds:0x429028
  40f544:	mov    DWORD PTR ds:0x42c018,edx
  40f54a:	add    ebx,DWORD PTR [ebp-0x44]
  40f54d:	mov    DWORD PTR [ebp-0x44],ebx
  40f550:	and    DWORD PTR ds:0x42b018,0x0
  40f55a:	jmp    0x40f56c
  40f55f:	mov    edx,DWORD PTR ds:0x42b018
  40f565:	inc    edx
  40f566:	mov    DWORD PTR ds:0x42b018,edx
  40f56c:	cmp    DWORD PTR ds:0x42b018,0x19
  40f573:	jae    0x40f616
  40f579:	cmp    DWORD PTR ds:0x42b018,0x6
  40f580:	jne    0x40f594
  40f586:	push   0x0
  40f588:	push   DWORD PTR [ebp-0x10]
  40f58b:	push   DWORD PTR [ebp-0x28]
  40f58e:	call   DWORD PTR ds:0x42e997
  40f594:	cmp    DWORD PTR ds:0x42b018,0x5
  40f59b:	jne    0x40f5ae
  40f5a1:	mov    edx,DWORD PTR ds:0x42b018
  40f5a7:	inc    edx
  40f5a8:	mov    DWORD PTR ds:0x42b018,edx
  40f5ae:	jmp    0x40f55f
  40f5b3:	mov    DWORD PTR ds:0x42b00c,0x18
  40f5bd:	cmp    DWORD PTR ds:0x42b00c,0x0
  40f5c4:	je     0x40f616
  40f5ca:	cmp    DWORD PTR ds:0x42b00c,0x1e
  40f5d1:	jne    0x40f5fa
  40f5d7:	push   0x3551
  40f5dc:	push   DWORD PTR [ebp-0x28]
  40f5df:	push   0x42c000
  40f5e4:	push   DWORD PTR [ebp-0x10]
  40f5e7:	push   0x1896
  40f5ec:	push   0x8105
  40f5f1:	push   DWORD PTR [ebp-0xc]
  40f5f4:	call   DWORD PTR ds:0x42e99f
  40f5fa:	mov    edx,DWORD PTR ds:0x42b00c
  40f600:	dec    edx
  40f601:	mov    DWORD PTR ds:0x42b00c,edx
  40f607:	jmp    0x40f5bd
  40f60c:	add    DWORD PTR ds:0x42d00c,0x25c6
  40f616:	mov    edx,DWORD PTR [ebp+0x8]
  40f619:	adc    DWORD PTR ds:0x42d018,0x42a00c
  40f623:	xor    edx,eax
  40f625:	adc    DWORD PTR ds:0x42b010,0x4589
  40f62f:	add    edx,esi
  40f631:	mov    DWORD PTR ds:0x42d014,0x3f58
  40f63b:	jne    0x40f3a4
  40f641:	jmp    0x418714
  40f646:	adc    edx,edx
  40f648:	mov    edx,DWORD PTR [ebp-0xc]
  40f64b:	sub    edx,esi
  40f64d:	xor    edx,eax
  40f64f:	mov    DWORD PTR [ebp-0x5c],edx
  40f652:	mov    edx,DWORD PTR [ebp-0x10]
  40f655:	mov    ebx,DWORD PTR [ebp-0x8]
  40f658:	xor    edx,eax
  40f65a:	xor    ebx,eax
  40f65c:	sub    edx,ebx
  40f65e:	sub    edx,esi
  40f660:	xor    edx,eax
  40f662:	mov    DWORD PTR [ebp-0x10],edx
  40f665:	mov    edx,DWORD PTR [ebp-0x14]
  40f668:	mov    DWORD PTR [ebp+0x8],edx
  40f66b:	jmp    0x411a66
  40f670:	mov    edx,DWORD PTR [ebp+0x8]
  40f673:	mov    ebx,DWORD PTR [ebp-0x8]
  40f676:	xor    edx,eax
  40f678:	xor    ebx,eax
  40f67a:	sub    edx,ebx
  40f67c:	sub    edx,esi
  40f67e:	xor    edx,eax
  40f680:	mov    DWORD PTR [ebp+0x8],edx
  40f683:	jmp    0x411a09
  40f688:	aaa    
  40f689:	xchg   BYTE PTR [edi-0x3a],cl
  40f68c:	jae    0x40f709
  40f68e:	mov    ebx,0xae43537b
  40f693:	xor    al,0xb9
  40f695:	add    eax,DWORD PTR [edi+0x7aca87e8]
  40f69b:	jp     0x40f69e
  40f69d:	pop    edi
  40f69e:	jp     0x40f71a
  40f6a0:	xor    BYTE PTR [ebp+0xaac2711],dl
  40f6a6:	xor    BYTE PTR [edi+0x35c824f],dh
  40f6ac:	xor    BYTE PTR [ebx+0x65],bl
  40f6af:	icebp  
  40f6b0:	ror    DWORD PTR [esi+0x7861f849],1
  40f6b6:	dec    ebx
  40f6b7:	cmp    al,0xf
  40f6b9:	inc    esp
  40f6ba:	jns    0x40f725
  40f6bc:	push   ebp
  40f6bd:	out    dx,al
  40f6be:	test   DWORD PTR [ecx+0x3c],ebx
  40f6c1:	and    eax,0x2c393617
  40f6c6:	jg     0x40f71b
  40f6c8:	mov    edx,0xff59b739
  40f6cd:	push   edx
  40f6ce:	test   al,0xbd
  40f6d0:	mov    ebx,0xd81a76f9
  40f6d5:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6d7:	fwait
  40f6d8:	jae    0x40f742
  40f6da:	retf   0x666b
  40f6dd:	add    eax,0x8bace532
  40f6e2:	xor    edi,DWORD PTR [edi+0x4]
  40f6e5:	push   esp
  40f6e6:	adc    DWORD PTR [eax-0x31a35586],ebx
  40f6ec:	jg     0x40f763
  40f6ee:	clc    
  40f6ef:	les    edx,FWORD PTR [esi+0x6b]
  40f6f2:	cmp    dh,BYTE PTR [ebp+0xf]
  40f6f5:	lods   eax,DWORD PTR ds:[esi]
  40f6f6:	pop    ebx
  40f6f7:	xchg   edx,eax
  40f6f8:	jmp    0xc2326c00
  40f6fd:	mov    esi,0x5571a513
  40f702:	popf   
  40f703:	jge    0x40f6aa
  40f705:	cmp    BYTE PTR [ecx],dh
  40f707:	(bad)  
  40f709:	xor    edi,edx
  40f70b:	and    edx,DWORD PTR ds:0x8ca0dd58
  40f711:	out    dx,eax
  40f712:	dec    esi
  40f713:	loop   0x40f741
  40f715:	adc    esp,DWORD PTR [esi+0x16]
  40f718:	into   
  40f719:	push   ss
  40f71a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f71b:	jle    0x40f749
  40f71d:	test   DWORD PTR ds:0xa758c0d2,0x9ed25422
  40f727:	(bad)  
  40f728:	outs   dx,DWORD PTR ds:[esi]
  40f729:	pop    esi
  40f72a:	mov    edx,0x63ba8b50
  40f72f:	js     0x40f6c5
  40f731:	or     BYTE PTR [esi-0x32],cl
  40f734:	jge    0x40f6ec
  40f736:	lock jno 0x40f77f
  40f739:	inc    edx
  40f73a:	es in  eax,0x5
  40f73d:	out    dx,eax
  40f73e:	xor    al,0x2d
  40f740:	add    BYTE PTR [esi+ebx*4-0x8995822],bl
  40f747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f748:	add    ah,cl
  40f74a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f74b:	xchg   edi,eax
  40f74c:	or     ebp,ecx
  40f74e:	pop    ss
  40f74f:	ins    DWORD PTR es:[edi],dx
  40f750:	xchg   edi,eax
  40f751:	jmp    DWORD PTR [ebp-0x3b]
  40f754:	leave  
  40f755:	mov    cl,BYTE PTR [ebx]
  40f757:	in     eax,0x58
  40f759:	adc    al,0xed
  40f75b:	test   dh,al
  40f75d:	inc    esi
  40f75e:	xor    DWORD PTR [edi],eax
  40f760:	pop    ecx
  40f761:	fucom  st(0)
  40f763:	in     eax,dx
  40f764:	pop    esi
  40f765:	add    eax,0x463b0c43
  40f76a:	arpl   WORD PTR [ecx],di
  40f76c:	scas   eax,DWORD PTR es:[edi]
  40f76d:	and    BYTE PTR [ebp-0x4f],cl
  40f770:	adc    DWORD PTR [esi],ebx
  40f772:	in     al,0x2e
  40f774:	loope  0x40f7c6
  40f776:	(bad)  [ebx+0x3a]
  40f779:	jns    0x40f781
  40f77b:	jg     0x40f793
  40f77d:	push   ds
  40f77e:	adc    cl,bh
  40f780:	push   0xffffffef
  40f782:	cmp    eax,0x53e355d7
  40f787:	mov    edx,0x7b109029
  40f78c:	pop    es
  40f78d:	add    eax,0x3681d97d
  40f792:	xchg   edx,eax
  40f793:	out    dx,eax
  40f794:	xchg   ebx,eax
  40f795:	stos   DWORD PTR es:[edi],eax
  40f796:	and    al,0xa2
  40f798:	rcl    ebx,0xe3
  40f79b:	mov    ecx,0x2175afa0
  40f7a0:	cmp    BYTE PTR [ebx],0x2d
  40f7a3:	clc    
  40f7a4:	push   cs
  40f7a5:	jne    0x40f73a
  40f7a7:	push   esi
  40f7a8:	cmp    esi,DWORD PTR [edi+0x452ca2b7]
  40f7ae:	xchg   ebx,eax
  40f7af:	pop    edx
  40f7b0:	fs in  eax,0x35
  40f7b3:	or     al,0xc5
  40f7b5:	push   ebx
  40f7b6:	or     BYTE PTR [esi-0x35],dh
  40f7b9:	test   esi,0x12c4a8a1
  40f7bf:	cs mov edx,0x6e156577
  40f7c5:	ja     0x40f747
  40f7c7:	repnz inc ecx
  40f7c9:	sub    BYTE PTR ds:0x4b51933b,bl
  40f7cf:	add    ch,BYTE PTR [ecx]
  40f7d1:	xchg   DWORD PTR [ebp+0x3b],eax
  40f7d4:	enter  0x22a4,0x5e
  40f7d8:	sbb    al,0xd9
  40f7da:	daa    
  40f7db:	xor    BYTE PTR [esi],dh
  40f7dd:	les    eax,FWORD PTR [esi+eiz*2]
  40f7e0:	cli    
  40f7e1:	fcmovnbe st,st(5)
  40f7e3:	mov    bl,0xef
  40f7e5:	mov    ebp,0xc389e9ec
  40f7ea:	xchg   BYTE PTR [ebp+ebx*2-0xa434089],bh
  40f7f1:	imul   esi,ebx,0xd9785e3
  40f7f7:	in     al,0x6b
  40f7f9:	mov    DWORD PTR [edi-0x2c],ecx
  40f7fc:	les    edi,FWORD PTR [edi+0x7050ddf6]
  40f802:	jmp    0x40f829
  40f804:	in     eax,0xce
  40f806:	jne    0x40f7fe
  40f808:	adc    DWORD PTR [eax-0x37],eax
  40f80b:	scas   al,BYTE PTR es:[edi]
  40f80c:	aas    
  40f80d:	daa    
  40f80e:	mov    ds:0x80cf3d59,al
  40f813:	out    dx,al
  40f814:	sub    BYTE PTR [ebp-0x38],0x9
  40f818:	xchg   esp,eax
  40f819:	or     al,0x66
  40f81b:	inc    esp
  40f81c:	sub    al,0xf4
  40f81e:	test   BYTE PTR [esi],al
  40f820:	repnz out 0x12,al
  40f823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f825:	dec    edx
  40f826:	xor    bl,dh
  40f828:	add    al,0x84
  40f82a:	or     esp,edi
  40f82c:	retf   
  40f82d:	mov    WORD PTR [esp+eiz*2-0x5ce8e1db],ds
  40f834:	sti    
  40f835:	push   0xbb4ec360
  40f83a:	add    al,0x1d
  40f83c:	in     eax,dx
  40f83d:	retf   
  40f83e:	dec    esp
  40f83f:	repnz cdq 
  40f841:	or     BYTE PTR [ebp+0x2dfde9c6],0x73
  40f848:	ss lahf 
  40f84a:	in     al,0x94
  40f84c:	xchg   ebp,eax
  40f84d:	and    al,0x5d
  40f84f:	pop    esi
  40f850:	mov    al,0x38
  40f852:	xchg   esi,eax
  40f853:	popf   
  40f854:	jge    0x40f8b4
  40f856:	add    al,0x1f
  40f858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f859:	pushf  
  40f85a:	sub    esi,DWORD PTR [esi+ebx*4-0x3]
  40f85e:	mov    cl,0x44
  40f860:	ror    DWORD PTR [eax+0x6bb34748],cl
  40f866:	stc    
  40f867:	sbb    DWORD PTR [eax-0x7c],ebx
  40f86a:	sti    
  40f86b:	mov    esi,0x7e83de18
  40f870:	daa    
  40f871:	daa    
  40f872:	fld    TBYTE PTR [esi+0x4e24abed]
  40f878:	mov    cl,0xbe
  40f87a:	jns    0x40f8ae
  40f87c:	shl    BYTE PTR [ebp+0x6d],cl
  40f87f:	outs   dx,DWORD PTR ds:[esi]
  40f880:	ins    DWORD PTR es:[edi],dx
  40f881:	cld    
  40f882:	ja     0x40f8d0
  40f884:	or     DWORD PTR [ebx+0x3a531595],0x16
  40f88b:	popf   
  40f88c:	lds    eax,FWORD PTR [esi]
  40f88e:	repz in eax,0xd4
  40f891:	xor    eax,0x35e387bb
  40f896:	nop
  40f897:	sbb    DWORD PTR [ecx+0x24],edx
  40f89a:	loopne 0x40f842
  40f89c:	add    DWORD PTR [ecx+0x16001c9b],edx
  40f8a2:	sbb    ecx,DWORD PTR [esi+0x1]
  40f8a5:	sub    al,ch
  40f8a7:	fbstp  TBYTE PTR [esi+0x7d]
  40f8aa:	dec    esi
  40f8ab:	pushf  
  40f8ac:	mov    cl,0x2c
  40f8ae:	pop    DWORD PTR [esp+ecx*8]
  40f8b1:	adc    BYTE PTR [ecx+eiz*8-0x18b7b44f],al
  40f8b8:	out    dx,al
  40f8b9:	jp     0x40f8cb
  40f8bb:	fst    QWORD PTR [edi+0x514c35e0]
  40f8c1:	adc    BYTE PTR [ebp+esi*1-0x53],ah
  40f8c5:	retf   
  40f8c6:	sub    ecx,DWORD PTR [edi-0x376e1592]
  40f8cc:	sub    ch,BYTE PTR [ebx]
  40f8ce:	mov    WORD PTR [ebx+0x62],?
  40f8d1:	stc    
  40f8d2:	retf   
  40f8d3:	in     al,0x69
  40f8d5:	xchg   BYTE PTR [edx],al
  40f8d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8d8:	outs   dx,DWORD PTR ds:[esi]
  40f8d9:	in     eax,0xf6
  40f8db:	sbb    edi,ebp
  40f8dd:	inc    edi
  40f8de:	push   ecx
  40f8df:	lods   al,BYTE PTR ds:[esi]
  40f8e0:	push   ebp
  40f8e1:	mov    dh,0x7
  40f8e3:	push   0xee8ca4fa
  40f8e8:	inc    eax
  40f8e9:	dec    esp
  40f8ea:	enter  0x6954,0x47
  40f8ee:	jmp    0xd48:0x2eabdefd
  40f8f5:	loope  0x40f92c
  40f8f7:	inc    esp
  40f8f8:	leave  
  40f8f9:	ja     0x40f93f
  40f8fb:	fisttp DWORD PTR [edx]
  40f8fd:	enter  0x9796,0x6b
  40f901:	pop    ebp
  40f902:	sbb    esp,DWORD PTR [esi+0x69]
  40f905:	popf   
  40f906:	pop    ds
  40f907:	ins    DWORD PTR es:[edi],dx
  40f908:	mov    cl,0x32
  40f90a:	dec    esp
  40f90b:	pop    ds
  40f90c:	aas    
  40f90d:	or     BYTE PTR [ebx+0x45],ch
  40f910:	(bad)  
  40f911:	xchg   edx,eax
  40f912:	push   0x42c82f88
  40f917:	sub    eax,0x50093419
  40f91c:	imul   DWORD PTR [ebp+0x53]
  40f91f:	call   0x61c40a54
  40f924:	cdq    
  40f925:	cmp    al,0x2e
  40f927:	mov    ds:0x4e7cb7da,eax
  40f92c:	aaa    
  40f92d:	popa   
  40f92e:	leave  
  40f92f:	cmp    BYTE PTR [ecx],0x1a
  40f932:	scas   al,BYTE PTR es:[edi]
  40f933:	es daa 
  40f935:	loop   0x40f923
  40f937:	mov    DWORD PTR [edx+0x33],ebp
  40f93a:	scas   al,BYTE PTR es:[edi]
  40f93b:	push   ebx
  40f93c:	jmp    0x31c66f4e
  40f941:	dec    ebp
  40f942:	xor    al,0x2b
  40f944:	sti    
  40f945:	call   0x9dbb:0x2fd6ac43
  40f94c:	and    al,0x3e
  40f94e:	push   0x91c7bd46
  40f953:	lea    ecx,[eax]
  40f955:	cmp    BYTE PTR [esi],0xe5
  40f958:	popa   
  40f959:	(bad)  
  40f95b:	xchg   ecx,eax
  40f95c:	cld    
  40f95d:	mov    dh,0x14
  40f95f:	inc    ebx
  40f960:	outs   dx,BYTE PTR ds:[esi]
  40f961:	push   esp
  40f962:	clc    
  40f963:	iret   
  40f964:	sbb    edx,ebx
  40f966:	in     al,dx
  40f967:	pop    ebp
  40f968:	das    
  40f969:	loopne 0x40f94c
  40f96b:	mov    al,0x64
  40f96d:	stos   DWORD PTR es:[edi],eax
  40f96e:	cs iret 
  40f970:	and    al,BYTE PTR [ecx-0x44]
  40f973:	jbe    0x40f955
  40f975:	imul   edi,edi,0x338b2750
  40f97b:	std    
  40f97c:	cmp    DWORD PTR [ecx],esp
  40f97e:	stos   BYTE PTR es:[edi],al
  40f97f:	rcl    DWORD PTR [edi-0x24],0x15
  40f983:	iret   
  40f984:	ins    DWORD PTR es:[edi],dx
  40f985:	ins    BYTE PTR es:[edi],dx
  40f986:	jg     0x40f9d6
  40f988:	hlt    
  40f989:	int    0x6c
  40f98b:	jo     0x40f9c2
  40f98d:	pop    edx
  40f98e:	cld    
  40f98f:	fnsave [edx+0x73]
  40f992:	dec    eax
  40f993:	or     BYTE PTR [edi+0x5b2b2014],dl
  40f999:	scas   al,BYTE PTR es:[edi]
  40f99a:	fbstp  TBYTE PTR [ebx-0x19]
  40f99d:	in     al,dx
  40f99e:	mov    ecx,0xbe81bd78
  40f9a3:	and    DWORD PTR [ebp-0x41471f2d],0x7a
  40f9aa:	cmp    edi,DWORD PTR [edi+0x155f0936]
  40f9b0:	mov    ch,0x5f
  40f9b2:	(bad)  
  40f9b3:	xor    BYTE PTR [esi],ah
  40f9b5:	xchg   esi,eax
  40f9b6:	cmp    eax,DWORD PTR [esi+0x46953d35]
  40f9bc:	fimul  DWORD PTR [ebp-0x26]
  40f9bf:	mov    edi,0x3a39335e
  40f9c4:	hlt    
  40f9c5:	outs   dx,BYTE PTR ds:[esi]
  40f9c6:	pop    edi
  40f9c7:	xchg   DWORD PTR [ebx],esp
  40f9c9:	sar    BYTE PTR ds:0x78434e4a,1
  40f9cf:	mov    ebx,0x74f2500
  40f9d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9d5:	fisubr WORD PTR [ecx-0xc17a2a1]
  40f9db:	fld    DWORD PTR [esi]
  40f9dd:	and    DWORD PTR [ecx+0x3739518f],eax
  40f9e3:	jecxz  0x40fa12
  40f9e5:	pop    esp
  40f9e6:	dec    ecx
  40f9e7:	leave  
  40f9e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9e9:	sbb    al,bh
  40f9eb:	aas    
  40f9ec:	in     al,dx
  40f9ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9ee:	lahf   
  40f9ef:	bt     DWORD PTR [esi+0x6961b6cf],eax
  40f9f6:	jecxz  0x40fa64
  40f9f8:	mov    al,ds:0x31b47a2e
  40f9fd:	dec    esi
  40f9fe:	mov    cl,0x7f
  40fa00:	jmp    0x1166aed6
  40fa05:	out    0xc0,eax
  40fa07:	dec    esp
  40fa08:	out    0xe,eax
  40fa0a:	outs   dx,BYTE PTR ds:[esi]
  40fa0b:	(bad)  
  40fa0d:	mov    ebx,0xff55f1d
  40fa12:	cli    
  40fa13:	imul   esp,DWORD PTR [ecx+esi*8-0x74],0xb
  40fa18:	(bad)  
  40fa1a:	iret   
  40fa1b:	push   cs
  40fa1c:	mov    bl,0x2
  40fa1f:	retf   
  40fa20:	test   BYTE PTR [edx-0x6d],al
  40fa23:	or     esp,DWORD PTR [edi+0x26]
  40fa26:	and    eax,0xbf699d59
  40fa2b:	jl     0x40f9e2
  40fa2d:	sbb    al,0x88
  40fa2f:	cmp    al,al
  40fa31:	jg     0x40fa03
  40fa33:	dec    ecx
  40fa34:	bound  eax,QWORD PTR [eax]
  40fa36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa37:	jb     0x40fa3c
  40fa39:	sar    BYTE PTR [ebx-0x3ab1609f],1
  40fa3f:	xchg   edi,eax
  40fa40:	cli    
  40fa41:	idiv   DWORD PTR [ebx+0x45]
  40fa44:	inc    ebx
  40fa45:	pushf  
  40fa46:	test   eax,esi
  40fa48:	mov    esp,0x1b77fb8
  40fa4d:	xchg   esp,eax
  40fa4e:	xchg   ebx,eax
  40fa4f:	dec    eax
  40fa50:	(bad)  
  40fa51:	fnstenv [edx]
  40fa53:	add    BYTE PTR [esi+0x65],0x80
  40fa57:	pop    ebx
  40fa58:	popfw  
  40fa5a:	adc    eax,0xe770b85b
  40fa5f:	mov    BYTE PTR [ebx-0x4b802df8],cl
  40fa65:	(bad)  
  40fa66:	push   ds
  40fa67:	pop    esi
  40fa68:	push   esi
  40fa69:	push   ebp
  40fa6a:	sub    DWORD PTR [edi-0x78f1253d],eax
  40fa70:	dec    eax
  40fa71:	mov    ds,WORD PTR [esi+0x9061c20]
  40fa77:	adc    al,0x15
  40fa79:	or     edi,ebp
  40fa7b:	mov    edi,0x75bef08f
  40fa80:	jmp    0x886e:0xd592d5f1
  40fa87:	repnz add DWORD PTR [edx],esp
  40fa8a:	jmp    0x5b556ad9
  40fa8f:	pop    ds
  40fa90:	lods   al,BYTE PTR ds:[esi]
  40fa91:	add    ebx,edi
  40fa93:	cmp    dl,ah
  40fa95:	int    0xd5
  40fa97:	outs   dx,DWORD PTR ds:[esi]
  40fa98:	adc    dx,cx
  40fa9b:	pop    ds
  40fa9c:	les    edi,FWORD PTR [edx]
  40fa9e:	adc    DWORD PTR [esi],eax
  40faa0:	mov    cl,0x56
  40faa2:	cdq    
  40faa3:	push   ebx
  40faa4:	nop
  40faa5:	mov    DWORD PTR [ebp-0x11],eax
  40faa8:	push   es
  40faa9:	mov    ds:0xb94f4588,al
  40faae:	(bad)  
  40fab0:	or     dh,bh
  40fab2:	push   cs
  40fab3:	adc    bh,dl
  40fab5:	jmp    0x40faf0
  40fab7:	or     edx,esi
  40fab9:	push   esp
  40faba:	sahf   
  40fabb:	push   ds
  40fabc:	xchg   edx,eax
  40fabd:	mov    BYTE PTR [edx-0x4d],bl
  40fac0:	xor    BYTE PTR [eax+0x57b5dc8b],ch
  40fac6:	pop    ebx
  40fac7:	or     DWORD PTR [esi-0x7d862b15],esi
  40facd:	adc    al,0x25
  40facf:	fs mov edi,0x925d6bca
  40fad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fad6:	mov    ebx,0x7eafb4f5
  40fadb:	sub    eax,edi
  40fadd:	retf   
  40fade:	stos   DWORD PTR es:[edi],eax
  40fadf:	jge    0x40fb25
  40fae1:	mov    ebx,DWORD PTR [ecx+0x76]
  40fae4:	cdq    
  40fae5:	sub    esp,ecx
  40fae7:	dec    ebx
  40fae8:	xor    BYTE PTR [esi+0x696cee69],ch
  40faee:	test   BYTE PTR [esp+esi*1-0x65c4d90c],cl
  40faf5:	(bad)  
  40faf6:	dec    eax
  40faf7:	pop    edx
  40faf8:	int3   
  40faf9:	in     al,dx
  40fafa:	test   BYTE PTR [ecx+ecx*1],bl
  40fafd:	inc    ebp
  40fafe:	mov    al,ds:0x5986eb96
  40fb03:	mov    ebp,0x90b68abb
  40fb08:	mov    edx,0xb8f80135
  40fb0d:	outs   dx,BYTE PTR ds:[esi]
  40fb0e:	imul   eax,edi,0xa0e0f19e
  40fb14:	pop    ebx
  40fb15:	push   ds
  40fb16:	daa    
  40fb17:	scas   al,BYTE PTR es:[edi]
  40fb18:	inc    ecx
  40fb19:	jp     0x40fac6
  40fb1b:	xor    edi,ebx
  40fb1d:	push   ebx
  40fb1e:	lahf   
  40fb1f:	sub    eax,0xa1fb1447
  40fb24:	dec    edi
  40fb25:	jmp    0xf4bbcdf2
  40fb2a:	xchg   edi,eax
  40fb2b:	(bad)  
  40fb2c:	sbb    eax,0xd522c79e
  40fb31:	fidivr DWORD PTR [ebx+0x70]
  40fb34:	loopne 0x40fb98
  40fb36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb37:	jge    0x40fabd
  40fb39:	mov    ch,0xf6
  40fb3b:	sti    
  40fb3c:	fadd   DWORD PTR [ecx+ebp*1+0xf5d1617]
  40fb43:	mov    ebp,ebp
  40fb45:	out    dx,eax
  40fb46:	mov    BYTE PTR [edx-0x3ee409ad],ah
  40fb4c:	xchg   ecx,eax
  40fb4d:	ret    0xabc6
  40fb50:	test   DWORD PTR [ebp*4+0x78e4887c],0xb4048079
  40fb5b:	ret    0x2a28
  40fb5e:	fldcw  WORD PTR [edx]
  40fb60:	(bad)  
  40fb61:	in     eax,dx
  40fb62:	ins    BYTE PTR es:[edi],dx
  40fb63:	fwait
  40fb64:	or     al,0xd5
  40fb66:	fwait
  40fb67:	or     al,BYTE PTR [edi+0x3e0cef3]
  40fb6d:	enter  0x5cce,0x96
  40fb71:	adc    edi,ebp
  40fb73:	xlat   BYTE PTR ds:[ebx]
  40fb74:	shl    esp,1
  40fb76:	loope  0x40fb50
  40fb78:	push   0x6d
  40fb7a:	nop
  40fb7b:	pop    ds
  40fb7c:	sub    al,BYTE PTR [eax+0xc]
  40fb7f:	out    dx,al
  40fb80:	mov    ah,BYTE PTR [eax-0x77]
  40fb83:	mov    dl,0x45
  40fb85:	fmul   DWORD PTR fs:[ebx+ebp*2+0x63162e6d]
  40fb8d:	mov    ds:0xfa489b7,eax
  40fb92:	pop    esp
  40fb93:	mov    bl,0x44
  40fb95:	(bad)  
  40fb96:	xchg   ecx,eax
  40fb97:	lock addr16 fwait
  40fb9a:	inc    esp
  40fb9b:	push   esi
  40fb9c:	add    al,BYTE PTR [eax-0x28]
  40fb9f:	into   
  40fba0:	mov    esi,0xd735a23a
  40fba5:	retf   
  40fba6:	(bad)  
  40fba7:	(bad)  
  40fba8:	gs das 
  40fbaa:	jge    0x40fc0c
  40fbac:	lock adc BYTE PTR [eax+0x38],dl
  40fbb0:	(bad)  
  40fbb1:	lods   eax,DWORD PTR ds:[esi]
  40fbb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbb3:	sbb    DWORD PTR [ecx-0x64],ebp
  40fbb6:	mov    cl,0x94
  40fbb8:	sub    ebp,DWORD PTR [eax-0x67]
  40fbbb:	jns    0x40fc2e
  40fbbd:	add    DWORD PTR [ebx],ebx
  40fbbf:	mov    eax,0xc73a3da2
  40fbc4:	push   edx
  40fbc5:	test   edx,edi
  40fbc7:	out    dx,al
  40fbc8:	sbb    al,0xc8
  40fbca:	push   eax
  40fbcb:	loope  0x40fb54
  40fbcd:	inc    BYTE PTR [eax-0x39bf1e08]
  40fbd3:	adc    al,0x5b
  40fbd5:	mov    eax,0x9ffd5761
  40fbda:	hlt    
  40fbdb:	mov    fs,WORD PTR ss:[esi+esi*2]
  40fbdf:	inc    ebp
  40fbe0:	inc    ecx
  40fbe1:	arpl   WORD PTR ds:0x368a48e3,ax
  40fbe7:	ss mov dh,0x14
  40fbea:	pop    ss
  40fbeb:	push   0x7d
  40fbed:	ret    
  40fbee:	jmp    0x1a0:0xeecbc8fb
  40fbf5:	or     ebp,esp
  40fbf7:	shl    DWORD PTR [esi],cl
  40fbf9:	data16 sbb cl,BYTE PTR [ebx+eax*4]
  40fbfd:	sbb    eax,0x23167b3b
  40fc02:	cmp    bh,BYTE PTR [ebx+edi*1]
  40fc05:	push   ebp
  40fc06:	mov    ecx,0xd5b4f22e
  40fc0b:	inc    esp
  40fc0c:	mov    cl,0x9a
  40fc0e:	jb     0x40fc87
  40fc10:	test   BYTE PTR [eax],cl
  40fc12:	lods   eax,DWORD PTR ds:[esi]
  40fc13:	enter  0xc937,0x80
  40fc17:	or     esp,edx
  40fc19:	dec    esp
  40fc1a:	jg     0x40fc23
  40fc1c:	fimul  DWORD PTR [edi+0x9db8538]
  40fc22:	jp     0x40fc01
  40fc24:	arpl   WORD PTR [edi],cx
  40fc26:	mov    eax,ds:0x882fadf0
  40fc2b:	sub    BYTE PTR [ebp+0x555e5532],bl
  40fc31:	push   ecx
  40fc32:	(bad)  
  40fc33:	jge    0x40fc05
  40fc35:	xchg   ecx,eax
  40fc36:	dec    ecx
  40fc37:	pop    ss
  40fc38:	stc    
  40fc39:	add    al,BYTE PTR [edi-0x50]
  40fc3c:	ds repnz aad 0x98
  40fc40:	cwde   
  40fc41:	adc    DWORD PTR [ebx+eiz*4+0x62],ebp
  40fc45:	loope  0x40fc1b
  40fc47:	cld    
  40fc48:	jmp    0x5541c553
  40fc4d:	and    dl,BYTE PTR [edi]
  40fc4f:	xor    bl,al
  40fc51:	cmp    al,0x74
  40fc53:	test   BYTE PTR [edi+0x65],al
  40fc56:	push   0x9c93dee9
  40fc5b:	dec    edx
  40fc5c:	pop    esp
  40fc5d:	push   edi
  40fc5e:	and    DWORD PTR [eax+0x19ef76e4],edx
  40fc64:	xor    ch,bl
  40fc66:	add    bh,BYTE PTR [edx+0x2b7603e8]
  40fc6c:	mov    dh,0xd8
  40fc6e:	sbb    ecx,DWORD PTR [edx+eiz*1]
  40fc71:	out    0xd2,al
  40fc73:	hlt    
  40fc74:	sbb    BYTE PTR [edx],ch
  40fc76:	ins    DWORD PTR es:[edi],dx
  40fc77:	add    bl,ch
  40fc79:	adc    bh,0xa9
  40fc7c:	imul   edi,DWORD PTR [ebp-0x2d715195],0x4f
  40fc83:	ins    DWORD PTR es:[edi],dx
  40fc84:	mov    ds:0x60107c7b,al
  40fc89:	std    
  40fc8a:	inc    ebx
  40fc8b:	xchg   ebp,eax
  40fc8c:	imul   eax,DWORD PTR [ebp+0x8],0x32
  40fc90:	mov    bl,0x94
  40fc92:	push   edx
  40fc93:	das    
  40fc94:	add    DWORD PTR [edi-0xd],eax
  40fc97:	cmc    
  40fc98:	js     0x40fc84
  40fc9a:	ins    BYTE PTR es:[edi],dx
  40fc9b:	retf   0xb914
  40fc9e:	shr    BYTE PTR [edx+0xf],cl
  40fca1:	(bad)  
  40fca2:	out    0xf8,al
  40fca4:	mov    edx,0xf9df7e28
  40fca9:	xor    DWORD PTR [ecx],ebx
  40fcab:	inc    edi
  40fcac:	pop    edx
  40fcad:	int3   
  40fcae:	jl     0x40fcd0
  40fcb0:	fwait
  40fcb1:	stc    
  40fcb2:	mov    cl,0xad
  40fcb4:	in     eax,dx
  40fcb5:	hlt    
  40fcb6:	ret    0x131f
  40fcb9:	dec    ecx
  40fcba:	pop    esi
  40fcbb:	and    bl,BYTE PTR [edx]
  40fcbd:	pop    edi
  40fcbe:	outs   dx,DWORD PTR ds:[esi]
  40fcbf:	sbb    ch,BYTE PTR [edx-0x36]
  40fcc2:	mov    dl,0xef
  40fcc4:	jnp    0x40fce1
  40fcc6:	or     al,BYTE PTR [edi-0x46bf4463]
  40fccc:	dec    ecx
  40fccd:	pop    esp
  40fcce:	addr16 int3 
  40fcd0:	mov    al,0xed
  40fcd2:	dec    edx
  40fcd3:	and    eax,0xff4d66c
  40fcd8:	push   esp
  40fcd9:	jp     0x40fcf7
  40fcdb:	sbb    dh,dh
  40fcdd:	mov    dl,0xcd
  40fcdf:	add    ebp,DWORD PTR [ebx]
  40fce1:	in     eax,dx
  40fce2:	(bad)  
  40fce4:	mov    al,0x7f
  40fce6:	fwait
  40fce7:	mov    edi,0xef9d7fb5
  40fcec:	(bad)  
  40fced:	adc    BYTE PTR [edi+0x616681cb],bh
  40fcf3:	mov    eax,0x3dc0a661
  40fcf8:	(bad)  
  40fcfa:	push   es
  40fcfb:	rcr    bh,cl
  40fcfd:	mov    bl,0x71
  40fcff:	add    al,0xbc
  40fd01:	jecxz  0x40fcc2
  40fd03:	lahf   
  40fd04:	(bad)  
  40fd05:	cli    
  40fd06:	cmp    bl,ah
  40fd08:	ret    0xfcd
  40fd0b:	int    0x13
  40fd0d:	add    al,BYTE PTR [eax-0xb]
  40fd10:	stos   DWORD PTR es:[edi],eax
  40fd11:	enter  0x4b02,0x9a
  40fd15:	les    edx,FWORD PTR [esi-0x5c]
  40fd18:	in     eax,0xe0
  40fd1a:	nop
  40fd1b:	das    
  40fd1c:	sahf   
  40fd1d:	aam    0x4c
  40fd1f:	lods   eax,DWORD PTR ds:[esi]
  40fd20:	rcr    BYTE PTR [edi-0x528f234f],0x5b
  40fd27:	loop   0x40fda3
  40fd29:	cmp    al,0xda
  40fd2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd2c:	mov    esi,0xcc55b02b
  40fd31:	push   edi
  40fd32:	and    DWORD PTR [edx-0x1bedb63a],0x8eb83943
  40fd3c:	(bad)  
  40fd3d:	(bad)  
  40fd3e:	xor    DWORD PTR [ebp+0x29],edx
  40fd41:	je     0x40fda6
  40fd43:	ins    BYTE PTR es:[edi],dx
  40fd44:	mov    ebp,0xa0720883
  40fd49:	lds    ebp,FWORD PTR [esi-0x3f]
  40fd4c:	out    0xe2,al
  40fd4e:	aad    0x93
  40fd50:	sub    dl,bl
  40fd52:	int    0x70
  40fd54:	dec    ebp
  40fd55:	pop    esi
  40fd56:	sub    bl,BYTE PTR [eax-0x62]
  40fd59:	cwde   
  40fd5a:	fsubrp st(5),st
  40fd5c:	mov    ah,0xfb
  40fd5e:	and    eax,0xb9912637
  40fd63:	push   esi
  40fd64:	popa   
  40fd65:	jns    0x40fd28
  40fd67:	cmp    al,0x2c
  40fd69:	shl    BYTE PTR [edx+0x3150392f],0xb8
  40fd70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd71:	adc    ah,bl
  40fd73:	xor    al,dh
  40fd75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd76:	ins    DWORD PTR es:[edi],dx
  40fd77:	push   ss
  40fd78:	or     DWORD PTR [edi+ecx*8],edx
  40fd7b:	fimul  WORD PTR [ecx]
  40fd7d:	(bad)  
  40fd7e:	sub    al,0x49
  40fd80:	mov    eax,ds:0x13086d45
  40fd85:	xor    al,BYTE PTR [edx+0x3e4b00cd]
  40fd8b:	aaa    
  40fd8c:	jge    0x40fd11
  40fd8e:	adc    BYTE PTR [ebx+0x62],dh
  40fd91:	pop    edx
  40fd92:	dec    ebx
  40fd93:	not    BYTE PTR [esi]
  40fd95:	mov    ebp,0x39c864d9
  40fd9a:	sub    BYTE PTR [ecx+0x7bb47eb1],0x9d
  40fda1:	sub    edi,edi
  40fda3:	xchg   ebp,eax
  40fda4:	scas   al,BYTE PTR es:[edi]
  40fda5:	lds    esi,FWORD PTR ds:0xa27d177e
  40fdab:	cs sub esi,0x1
  40fdaf:	sub    al,0x85
  40fdb1:	hlt    
  40fdb2:	dec    esp
  40fdb3:	retf   
  40fdb4:	je     0x40fe28
  40fdb6:	mov    esi,0x1a7b6a78
  40fdbb:	pop    ebx
  40fdbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdbd:	cmp    eax,0xbe36fe42
  40fdc2:	or     ebx,ecx
  40fdc4:	dec    edx
  40fdc5:	mov    ebx,0x9d9fedce
  40fdca:	in     eax,0x90
  40fdcc:	pop    edi
  40fdcd:	stos   DWORD PTR es:[edi],eax
  40fdce:	cli    
  40fdcf:	retf   0xea4d
  40fdd2:	std    
  40fdd3:	inc    esp
  40fdd4:	pusha  
  40fdd5:	cmp    al,0xca
  40fdd7:	mov    esi,0xc6478bac
  40fddc:	pop    ecx
  40fddd:	dec    edx
  40fdde:	fst    DWORD PTR [ebp-0x7c49d2bc]
  40fde4:	mov    al,0xb9
  40fde6:	mov    ?,WORD PTR [ebp-0x57d830cc]
  40fdec:	je     0x40fe30
  40fdee:	adc    BYTE PTR [esi*4-0x10e56d7e],ah
  40fdf5:	and    ebx,DWORD PTR [edi]
  40fdf7:	dec    ecx
  40fdf8:	ror    DWORD PTR [ebx],0x53
  40fdfb:	inc    esi
  40fdfc:	xchg   cl,ch
  40fdfe:	or     dh,BYTE PTR [esi+0x75]
  40fe01:	sahf   
  40fe02:	popf   
  40fe03:	rol    BYTE PTR [esi+0x2fc2df00],cl
  40fe09:	cmp    ebp,DWORD PTR [eax+0x5b]
  40fe0c:	fs push ss
  40fe0e:	fwait
  40fe0f:	xor    al,0x82
  40fe11:	jg     0x40fe44
  40fe13:	jg     0x40fe09
  40fe15:	pop    ds
  40fe16:	push   cs
  40fe17:	mov    ch,0x54
  40fe19:	jae    0x40fdb1
  40fe1b:	pop    edx
  40fe1c:	add    BYTE PTR [ecx-0x50],ah
  40fe1f:	xchg   ebp,eax
  40fe20:	sbb    bh,ch
  40fe22:	sahf   
  40fe23:	and    BYTE PTR [edi+0x1c],dl
  40fe26:	(bad)
  40fe2a:	popa   
  40fe2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe2d:	push   esp
  40fe2e:	inc    edi
  40fe2f:	mov    cl,0xa2
  40fe31:	das    
  40fe32:	dec    eax
  40fe33:	mov    edx,0x356c7560
  40fe38:	scas   al,BYTE PTR es:[edi]
  40fe39:	mov    ds:0xd44c25e6,eax
  40fe3e:	repz and BYTE PTR [esi+0x27],cl
  40fe42:	outs   dx,DWORD PTR ds:[esi]
  40fe43:	inc    ebp
  40fe44:	lods   eax,DWORD PTR ds:[esi]
  40fe45:	mov    edx,0x72ad7bbe
  40fe4a:	arpl   WORD PTR [ecx-0x7d3bbe7c],bp
  40fe50:	mov    eax,ds:0xbf03f553
  40fe55:	xchg   edi,eax
  40fe56:	ins    DWORD PTR es:[edi],dx
  40fe57:	jae    0x40feb1
  40fe59:	(bad)  
  40fe5a:	and    al,0xc4
  40fe5c:	repnz xlat BYTE PTR ds:[ebx]
  40fe5e:	into   
  40fe5f:	adc    al,0x74
  40fe61:	mov    ds:0x470f1f13,al
  40fe66:	inc    ebx
  40fe67:	mov    eax,ds:0x50d315f5
  40fe6c:	call   0xb7a5:0x9186a6db
  40fe73:	mov    edx,0xd50439e4
  40fe78:	test   ebp,edi
  40fe7a:	shl    DWORD PTR [esi+0x36406293],0x79
  40fe81:	out    0xc4,al
  40fe83:	mov    es:0xd6089533,eax
  40fe89:	fild   QWORD PTR [ecx+edi*2-0x2bc577c0]
  40fe90:	inc    ebx
  40fe91:	fiadd  DWORD PTR [ebp-0x53ca9ee9]
  40fe97:	ret    0x1c76
  40fe9a:	fldcw  WORD PTR [ebp-0x18]
  40fe9d:	sti    
  40fe9e:	inc    edx
  40fe9f:	(bad)  
  40fea0:	jge    0x40fea0
  40fea2:	shl    eax,1
  40fea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fea5:	jns    0x40fee2
  40fea7:	jae    0x40fe2a
  40fea9:	shr    DWORD PTR [edi+ebx*8],1
  40feac:	scas   eax,DWORD PTR es:[edi]
  40fead:	cdq    
  40feae:	ss adc cl,al
  40feb1:	push   edx
  40feb2:	and    al,0xc4
  40feb4:	xchg   ebp,eax
  40feb5:	sbb    al,0x4c
  40feb7:	fs leave 
  40feb9:	jmp    0x70989900
  40febe:	fwait
  40febf:	mov    ds:0x2412fa27,eax
  40fec4:	inc    ebx
  40fec5:	shl    DWORD PTR [esi+0x31],0x1a
  40fec9:	fdiv   QWORD PTR [eax+edi*2-0x21]
  40fecd:	imul   DWORD PTR [ecx-0x54]
  40fed0:	xchg   al,ch
  40fed2:	pop    ecx
  40fed3:	pushf  
  40fed4:	push   ds
  40fed5:	cld    
  40fed6:	jmp    0xf38d0ba9
  40fedb:	pop    eax
  40fedc:	(bad)  
  40fedd:	(bad)  [ebp+0x18]
  40fee0:	ds push ebp
  40fee2:	jae    0x40ff50
  40fee4:	or     cl,dh
  40fee6:	jnp    0x40ff52
  40fee8:	(bad)  
  40fee9:	lods   al,BYTE PTR ds:[esi]
  40feea:	stos   DWORD PTR es:[edi],eax
  40feeb:	dec    eax
  40feec:	inc    ecx
  40feed:	test   eax,0x5d5a61f
  40fef2:	inc    esi
  40fef3:	sbb    bl,BYTE PTR [eax]
  40fef5:	mov    ecx,0xa0e6d410
  40fefa:	aad    0x4f
  40fefc:	enterw 0x24d2,0x9b
  40ff01:	ins    DWORD PTR es:[edi],dx
  40ff02:	mov    BYTE PTR [eax+eax*2-0x4bfb3bd5],bh
  40ff09:	or     DWORD PTR [ecx+0x56],ecx
  40ff0c:	das    
  40ff0d:	enter  0xc124,0xdf
  40ff11:	pop    ds
  40ff12:	xchg   esp,eax
  40ff13:	int    0x8e
  40ff15:	das    
  40ff16:	outs   dx,DWORD PTR ds:[esi]
  40ff17:	test   eax,0xe490823c
  40ff1c:	mov    ah,0x8b
  40ff1e:	shl    BYTE PTR [esi-0x6dcb8b47],0x91
  40ff25:	ins    BYTE PTR es:[edi],dx
  40ff26:	mov    al,0x93
  40ff28:	mov    ah,0xa
  40ff2a:	jne    0x40ff14
  40ff2c:	mov    edx,0x8d8e2f97
  40ff31:	sbb    eax,0x2e308d61
  40ff36:	jge    0x40ff84
  40ff38:	mov    bl,0x5a
  40ff3a:	out    dx,eax
  40ff3b:	out    0x9b,eax
  40ff3d:	push   es
  40ff3e:	push   si
  40ff40:	test   eax,0xf8134929
  40ff45:	sahf   
  40ff46:	pop    ss
  40ff47:	inc    ebp
  40ff48:	in     eax,dx
  40ff49:	js     0x40ff64
  40ff4b:	push   cs
  40ff4c:	(bad)  
  40ff4d:	std    
  40ff4e:	stc    
  40ff4f:	adc    al,0x39
  40ff51:	xchg   BYTE PTR [eax],ah
  40ff53:	xchg   edx,eax
  40ff54:	ret    
  40ff55:	daa    
  40ff56:	sbb    ecx,ebp
  40ff58:	cs in  eax,0xfb
  40ff5b:	or     ecx,esp
  40ff5d:	push   esi
  40ff5e:	xor    bl,ch
  40ff60:	out    dx,al
  40ff61:	cmc    
  40ff62:	cwde   
  40ff63:	in     eax,0x78
  40ff65:	sub    al,0xde
  40ff67:	xchg   ebx,eax
  40ff68:	nop
  40ff69:	hlt    
  40ff6a:	repnz pop DWORD PTR [esi+0x5ee8349f]
  40ff71:	bound  ecx,QWORD PTR [ecx-0x296294e2]
  40ff77:	lds    edi,FWORD PTR [edi+0x37f543dc]
  40ff7d:	js     0x40ffaf
  40ff7f:	je     0x40ff2f
  40ff81:	std    
  40ff82:	sbb    eax,0xd52016df
  40ff87:	das    
  40ff88:	in     al,0xa6
  40ff8a:	hlt    
  40ff8b:	shr    DWORD PTR [eax],1
  40ff8d:	out    0x64,eax
  40ff8f:	push   esi
  40ff90:	repnz mov al,BYTE PTR [ecx]
  40ff93:	mov    ecx,0x30535254
  40ff98:	xor    ah,dl
  40ff9a:	mov    es,eax
  40ff9c:	jecxz  0x40ff7a
  40ff9e:	pop    edx
  40ff9f:	shr    DWORD PTR [edi],cl
  40ffa1:	mov    BYTE PTR [ebp-0x3e9b5749],dh
  40ffa7:	push   es
  40ffa8:	mov    dl,0x63
  40ffaa:	push   edi
  40ffab:	test   al,0x84
  40ffad:	inc    ebx
  40ffae:	jl     0x40ffd1
  40ffb0:	pusha  
  40ffb1:	add    BYTE PTR [eax],cl
  40ffb3:	sbb    al,0x51
  40ffb5:	iret   
  40ffb6:	xor    ch,BYTE PTR [ebx]
  40ffb8:	loopne 0x40ff50
  40ffba:	ror    ebp,0xbb
  40ffbd:	sbb    bh,0x38
  40ffc0:	mov    DWORD PTR [edi],edx
  40ffc2:	lods   al,BYTE PTR ds:[esi]
  40ffc3:	xchg   esp,eax
  40ffc4:	das    
  40ffc5:	dec    ebp
  40ffc6:	or     eax,0x6019ce9
  40ffcb:	and    ax,0xd593
  40ffcf:	sbb    edx,ebx
  40ffd1:	mov    ebx,0xd9f4e2bb
  40ffd6:	sti    
  40ffd7:	adc    edx,edi
  40ffd9:	or     BYTE PTR [edx],bh
  40ffdb:	shr    DWORD PTR [esi+eiz*4+0x2218a77],cl
  40ffe2:	imul   edi,edx,0xffffffff
  40ffe5:	and    al,0xac
  40ffe7:	(bad)  
  40ffe8:	arpl   dx,di
  40ffea:	dec    edx
  40ffeb:	dec    esp
  40ffec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffed:	push   eax
  40ffee:	rol    BYTE PTR [ecx+0x3b89b565],0x88
  40fff5:	xchg   esp,eax
  40fff6:	test   DWORD PTR [ebx-0x56],esi
  40fff9:	rcl    DWORD PTR ds:0x99ade4af,1
  40ffff:	mov    esp,0x9a95f7a
  410004:	mov    eax,0x11bde70
  410009:	dec    eax
  41000a:	je     0x41001f
  41000c:	sub    al,0x6
  41000e:	and    DWORD PTR [eax+0x12ea7dc1],0xf54e61e0
  410018:	jecxz  0x41001f
  41001a:	add    al,0x10
  41001c:	pop    ebp
  41001d:	jp     0x410023
  41001f:	test   BYTE PTR [edi],bh
  410021:	mov    ecx,0xdab80a77
  410026:	iret   
  410027:	imul   esp,DWORD PTR [edi],0xa995d59a
  41002d:	in     eax,dx
  41002e:	sub    DWORD PTR [eax],esi
  410030:	ror    DWORD PTR [ecx],1
  410032:	lds    esp,FWORD PTR [ebx+0x29]
  410035:	cmp    dh,BYTE PTR [ebp+0x29]
  410038:	retf   
  410039:	sub    ebx,0x2c19a65c
  41003f:	popf   
  410040:	push   ss
  410041:	daa    
  410042:	lahf   
  410043:	retf   0xa30a
  410046:	inc    ebx
  410047:	and    edi,edi
  410049:	and    al,0xc4
  41004b:	ret    
  41004c:	addr16 push esp
  41004e:	test   ch,ch
  410050:	adc    eax,0x61ce657
  410055:	call   FWORD PTR [ecx]
  410057:	mov    edx,0x8f58e02f
  41005c:	int3   
  41005d:	pop    es
  41005e:	add    ecx,DWORD PTR [ecx-0x1b255ea3]
  410064:	test   DWORD PTR cs:[ecx-0x63],edx
  410068:	pusha  
  410069:	pop    ebx
  41006a:	mov    ch,BYTE PTR [edi]
  41006c:	scas   eax,DWORD PTR es:[edi]
  41006d:	cs ret 0xc805
  410071:	fadd   DWORD PTR [esi]
  410073:	outs   dx,BYTE PTR ds:[esi]
  410074:	in     al,0xb6
  410076:	mov    cl,0xbf
  410078:	sub    esi,DWORD PTR [ebx]
  41007a:	repz fdiv QWORD PTR ss:[esp+ebp*4-0x5973ada5]
  410083:	push   ds
  410084:	cmc    
  410085:	xchg   ebx,eax
  410086:	shl    DWORD PTR [edi-0xf],1
  410089:	xor    esp,DWORD PTR [ecx]
  41008b:	add    BYTE PTR [edx],al
  41008d:	(bad)  
  41008e:	rcl    ecx,cl
  410090:	mov    al,ds:0xe255a602
  410095:	ins    BYTE PTR es:[edi],dx
  410096:	push   cs
  410097:	gs and edx,ebx
  41009a:	push   0xf9d0d707
  41009f:	sbb    eax,0x2fe90f2
  4100a4:	jl     0x410104
  4100a6:	lea    ecx,[ebp-0x3bf59299]
  4100ac:	sub    al,0xa6
  4100ae:	and    eax,0xde2d4a57
  4100b3:	sub    ebx,DWORD PTR [edi-0x21decd31]
  4100b9:	not    BYTE PTR [esi-0x6ea133e8]
  4100bf:	lahf   
  4100c0:	cmp    BYTE PTR [ecx],dl
  4100c2:	jne    0x4100d7
  4100c4:	jns    0x410130
  4100c6:	mov    esp,0x5d9eab6e
  4100cb:	mov    bl,0x34
  4100cd:	mov    esp,0x6bbc2cf7
  4100d2:	int    0x42
  4100d4:	lds    esi,FWORD PTR [eax-0x5ac156f7]
  4100da:	or     cl,BYTE PTR [esi+0x56f172f3]
  4100e0:	fwait
  4100e1:	mov    esi,0x1a10fd94
  4100e6:	fwait
  4100e7:	pop    DWORD PTR [eax]
  4100e9:	lea    ebp,[eax-0x88d265f]
  4100ef:	push   ds
  4100f0:	fcomp  DWORD PTR [eax+0x1f]
  4100f3:	nop
  4100f4:	sub    BYTE PTR [ebp-0x80],dl
  4100f7:	push   esp
  4100f8:	jg     0x410151
  4100fa:	jmp    0x410148
  4100fc:	sub    BYTE PTR [ebp+0x4341381f],0x68
  410103:	inc    esp
  410104:	sub    eax,0x7ef99618
  410109:	mov    bh,0x9b
  41010b:	add    al,0x8a
  41010d:	ins    DWORD PTR es:[edi],dx
  41010e:	mov    edi,0xe7cbf2a0
  410113:	adc    DWORD PTR [esi-0x58],esi
  410116:	mov    al,0xa4
  410118:	jae    0x410150
  41011a:	(bad)  
  41011b:	cmp    al,0xdc
  41011d:	sub    BYTE PTR [ebp+ecx*8+0x29],dh
  410121:	xchg   ecx,eax
  410122:	cmp    al,0x19
  410124:	adc    al,0xfd
  410126:	adc    DWORD PTR [ebx+edi*8-0x458beed1],esp
  41012d:	out    dx,al
  41012e:	ret    0x5e85
  410131:	jo     0x410181
  410133:	into   
  410134:	mov    cl,dl
  410136:	xor    eax,0x5d039149
  41013b:	in     eax,dx
  41013c:	or     eax,0xbd082617
  410141:	jnp    0x410167
  410143:	push   0x6d3f53f9
  410148:	cs daa 
  41014a:	retf   0x81e7
  41014d:	fisub  WORD PTR ds:0xd35f436
  410153:	mov    ah,0xb9
  410155:	push   eax
  410156:	add    al,0x4b
  410158:	ja     0x4101b1
  41015a:	mov    ch,0x64
  41015c:	push   edx
  41015d:	xor    BYTE PTR [ecx-0x666f9c26],al
  410163:	out    0x32,eax
  410165:	in     eax,0xb1
  410167:	jns    0x410160
  410169:	mov    bh,0x3c
  41016b:	add    eax,esi
  41016d:	sub    bh,BYTE PTR [esi]
  41016f:	xor    al,ah
  410171:	dec    ecx
  410172:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410173:	and    BYTE PTR [edi],dh
  410175:	call   0xf8da:0x357ed8d
  41017c:	enter  0xd488,0x7e
  410180:	iret   
  410181:	or     eax,0x37b94de0
  410186:	sbb    BYTE PTR [ebp-0x17],dl
  410189:	or     BYTE PTR [ecx],ch
  41018b:	and    al,0xe0
  41018d:	jmp    0x4a5c9fbe
  410192:	pusha  
  410193:	xor    eax,0x887b585a
  410198:	sbb    al,0xb0
  41019a:	adc    eax,DWORD PTR [esi+0x36e0d48]
  4101a0:	lahf   
  4101a1:	jns    0x41017e
  4101a3:	xlat   BYTE PTR ds:[ebx]
  4101a4:	es push cs
  4101a6:	hlt    
  4101a7:	inc    ecx
  4101a8:	mov    ds:0x373a1495,al
  4101ad:	dec    ebp
  4101ae:	cmp    al,0x80
  4101b0:	xlat   BYTE PTR ds:[ebx]
  4101b1:	pop    ebp
  4101b2:	mov    ebp,0xa5fa0343
  4101b7:	inc    ecx
  4101b8:	add    bh,bl
  4101ba:	jle    0x4101b3
  4101bc:	pop    esi
  4101bd:	add    edx,esi
  4101bf:	stc    
  4101c0:	mov    cs,ecx
  4101c2:	adc    al,al
  4101c4:	and    BYTE PTR [eax-0x4bbf7ef4],cl
  4101ca:	jl     0x4101a9
  4101cc:	cmp    BYTE PTR [ecx+0x3d],cl
  4101cf:	jb     0x4101d8
  4101d1:	ins    BYTE PTR es:[edi],dx
  4101d2:	div    DWORD PTR [edi]
  4101d4:	mov    eax,0xb487d55
  4101d9:	ins    DWORD PTR es:[edi],dx
  4101da:	mov    dh,0xe2
  4101dc:	sbb    ebx,ecx
  4101de:	dec    esp
  4101df:	(bad)
  4101e4:	hlt    
  4101e5:	adc    BYTE PTR [ecx+0x3],0xc3
  4101e9:	fld    TBYTE PTR [edi+ecx*2+0x78a5720f]
  4101f0:	call   0x9565:0xd3a89031
  4101f7:	inc    eax
  4101f8:	add    esp,DWORD PTR [esi+0x331547c2]
  4101fe:	int    0xc2
  410200:	dec    eax
  410201:	jae    0x4101f5
  410203:	pop    ss
  410204:	and    al,bh
  410206:	cmp    DWORD PTR [esi],ebx
  410208:	and    esp,DWORD PTR [ebp-0x35c6b149]
  41020e:	sub    eax,DWORD PTR [eax+0x49b6d895]
  410214:	inc    eax
  410215:	dec    edx
  410216:	rcr    DWORD PTR [ebp-0x305279a],cl
  41021c:	jg     0x4101ef
  41021e:	repz js 0x41024f
  410221:	ss scas eax,DWORD PTR es:[edi]
  410223:	shl    BYTE PTR [ebx],0x92
  410226:	pop    edi
  410227:	mov    ebx,0xa5874e01
  41022c:	sub    BYTE PTR [ecx],dh
  41022e:	dec    DWORD PTR [ebp-0x554c1c91]
  410234:	into   
  410235:	push   edx
  410236:	inc    ebx
  410237:	pop    esi
  410238:	ja     0x4101d8
  41023a:	adc    BYTE PTR [esi],bh
  41023c:	push   esi
  41023d:	push   ebx
  41023e:	(bad)  
  410240:	mov    cs,WORD PTR [ebx+0xd]
  410243:	xor    ch,cl
  410245:	xchg   esi,eax
  410246:	inc    edx
  410247:	jns    0x410251
  410249:	pop    eax
  41024a:	sub    DWORD PTR [ebp-0x33b5966a],edx
  410250:	dec    edi
  410251:	jns    0x41024a
  410253:	add    ebx,DWORD PTR [ebx]
  410255:	mov    edi,0x54935829
  41025a:	in     eax,dx
  41025b:	lods   eax,DWORD PTR ds:[esi]
  41025c:	and    eax,0xf26d6743
  410261:	push   es
  410262:	mov    ah,0x3b
  410264:	std    
  410265:	dec    esp
  410266:	push   ecx
  410267:	pop    esp
  410268:	xchg   edx,eax
  410269:	mov    ds:0x2321ca9c,eax
  41026e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41026f:	sahf   
  410270:	xchg   ecx,eax
  410271:	and    BYTE PTR [ecx+0x3356105a],ah
  410277:	shl    bh,0xf9
  41027a:	test   BYTE PTR [esi+0x74],cl
  41027d:	push   ds
  41027e:	stc    
  41027f:	inc    esp
  410280:	cmp    bl,bl
  410282:	jl     0x410219
  410284:	stos   BYTE PTR es:[edi],al
  410285:	aad    0x64
  410287:	cmp    al,BYTE PTR [eax+edi*4+0x6a]
  41028b:	data16 and dl,BYTE PTR [edi]
  41028e:	sahf   
  41028f:	shl    BYTE PTR [edi+0x5d],1
  410292:	lods   eax,DWORD PTR ds:[esi]
  410293:	xchg   ecx,eax
  410294:	lock add eax,0xa12ab6b0
  41029a:	xor    DWORD PTR [ebx],ecx
  41029c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41029d:	clc    
  41029e:	test   DWORD PTR [edi],edx
  4102a0:	cld    
  4102a1:	jb     0x41023d
  4102a3:	mov    eax,ds:0x73e2923b
  4102a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102a9:	jno    0x4102a6
  4102ab:	in     eax,dx
  4102ac:	dec    esp
  4102ad:	enter  0xd524,0xca
  4102b1:	push   ecx
  4102b2:	or     esp,esi
  4102b4:	lahf   
  4102b5:	add    eax,0xf5c52a9c
  4102ba:	and    BYTE PTR [eax-0x298f167a],0x32
  4102c1:	sbb    BYTE PTR [ebp+0x655c26f2],0x65
  4102c8:	scas   al,BYTE PTR es:[edi]
  4102c9:	pusha  
  4102ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102cb:	push   es
  4102cc:	gs push ds
  4102ce:	inc    esp
  4102cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102d0:	cmc    
  4102d1:	icebp  
  4102d2:	cwde   
  4102d3:	mov    BYTE PTR [edx-0x51],bl
  4102d6:	ja     0x4102fa
  4102d8:	mov    esp,0x544a66af
  4102dd:	mov    bh,0x4e
  4102df:	outs   dx,DWORD PTR ds:[esi]
  4102e0:	cmp    ch,ah
  4102e2:	push   esi
  4102e3:	mov    dl,0xa0
  4102e5:	and    DWORD PTR [eax-0x1e4ecaf4],ebp
  4102eb:	inc    esi
  4102ec:	test   eax,0x1fce7515
  4102f1:	sti    
  4102f2:	js     0x41033a
  4102f4:	in     eax,dx
  4102f5:	xor    al,dl
  4102f7:	out    0x5f,al
  4102f9:	jb     0x410359
  4102fb:	jns    0x410361
  4102fd:	mov    ah,0x8d
  4102ff:	in     al,0xab
  410301:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410302:	xor    ah,BYTE PTR [ecx+0x23189e9d]
  410308:	push   ecx
  410309:	mov    DWORD PTR [eax-0x76c80b20],ecx
  41030f:	imul   ecx,DWORD PTR [esp+eax*8],0xffffffc9
  410313:	and    eax,ecx
  410315:	cwde   
  410316:	mov    esi,0x54744270
  41031b:	sub    edi,DWORD PTR [ebp+0x3c]
  41031e:	mov    eax,ds:0x9f40b62
  410323:	sbb    eax,0xcbd3b5a3
  410328:	inc    edi
  410329:	mov    DWORD PTR [ebp+0x5e75b026],edx
  41032f:	or     ecx,DWORD PTR [ecx+0x60]
  410332:	mov    DWORD PTR [edx-0x7c],ecx
  410335:	and    eax,0x870ba7bc
  41033a:	and    DWORD PTR [ecx],0x1f866a6d
  410340:	(bad)  
  410341:	lock mov bh,0x34
  410344:	cmp    BYTE PTR [esi],bh
  410346:	test   al,0x8
  410348:	call   0x9769:0xfef1fb8a
  41034f:	push   cs
  410350:	jp     0x410319
  410352:	or     BYTE PTR [edi],cl
  410354:	loopne 0x410305
  410356:	jge    0x41034d
  410358:	lods   eax,DWORD PTR ds:[esi]
  410359:	mov    DWORD PTR [eax+ebx*1-0x2ccc0204],0x2670c263
  410364:	add    BYTE PTR [ebx],al
  410366:	add    al,0xbe
  410368:	and    ecx,esp
  41036a:	jmp    0x410347
  41036c:	scas   eax,DWORD PTR es:[edi]
  41036d:	pop    eax
  41036e:	ret    0xa15
  410371:	sahf   
  410372:	mov    ax,0xe155
  410376:	call   0x894b9272
  41037b:	and    bh,dl
  41037d:	push   ss
  41037e:	jo     0x4103a0
  410380:	ja     0x410393
  410382:	inc    esp
  410383:	stc    
  410384:	mov    DWORD PTR [ebx],esp
  410386:	or     ebx,ecx
  410388:	inc    ecx
  410389:	lds    esi,FWORD PTR [esi+0x66331be]
  41038f:	add    eax,0x56292f53
  410394:	jp     0x410382
  410396:	adc    dl,BYTE PTR [eax]
  410398:	jg     0x410401
  41039a:	xchg   ecx,eax
  41039b:	sahf   
  41039c:	adc    eax,0x751ea4cd
  4103a1:	aad    0x71
  4103a3:	dec    ecx
  4103a4:	add    eax,0xd16e52b7
  4103a9:	cmc    
  4103aa:	mov    ebp,0x418dd8fe
  4103af:	bound  esi,QWORD PTR [ebp-0x1b4eb84c]
  4103b5:	aam    0x32
  4103b7:	or     DWORD PTR [ebx+0x1c],0xd6e65410
  4103be:	ss int3 
  4103c0:	sub    DWORD PTR [eax-0x2edc9259],esi
  4103c6:	or     ah,dl
  4103c8:	js     0x410402
  4103ca:	lea    ecx,[edx+0x67]
  4103cd:	int    0xf5
  4103cf:	fiadd  WORD PTR [esi-0x2d870da7]
  4103d5:	dec    ebp
  4103d6:	jmp    0x176641d8
  4103db:	pop    ds
  4103dc:	jl     0x4103af
  4103de:	mov    dl,0xbd
  4103e0:	mov    ds:0x8343e138,al
  4103e5:	(bad)  
  4103e6:	outs   dx,BYTE PTR ds:[esi]
  4103e7:	pusha  
  4103e8:	pop    es
  4103e9:	mov    esi,0x8a69dc31
  4103ee:	popa   
  4103ef:	push   edx
  4103f0:	bound  edi,QWORD PTR [ebx]
  4103f2:	(bad)  
  4103f3:	out    0x5c,al
  4103f5:	dec    edi
  4103f6:	stos   DWORD PTR es:[edi],eax
  4103f7:	loopne 0x41041d
  4103f9:	add    al,0xea
  4103fb:	cs push es
  4103fd:	cmp    eax,0x12a4ad7
  410402:	outs   dx,BYTE PTR ds:[esi]
  410403:	sub    eax,0xa0552e79
  410408:	das    
  410409:	(bad)  
  41040a:	or     eax,0x41aba6e8
  41040f:	or     DWORD PTR [ebx+0x3ef2bf13],0x49
  410416:	repnz cli 
  410418:	not    DWORD PTR [edi+0x299e347f]
  41041e:	clc    
  41041f:	pop    edi
  410420:	xor    DWORD PTR [ebp-0xa5ad5ab],edx
  410426:	test   BYTE PTR [ebp+ebx*4+0x40],bh
  41042a:	and    eax,0xb1f85748
  41042f:	bound  ebx,QWORD PTR [ecx+edi*1+0x5a]
  410433:	push   cs
  410434:	cmc    
  410435:	xchg   ebp,eax
  410436:	mov    ecx,0xc47b146d
  41043b:	sbb    DWORD PTR [esi-0x20b209db],edx
  410441:	xchg   ecx,eax
  410442:	repnz or eax,0x7ed42cc3
  410448:	inc    ebp
  410449:	adc    eax,ebx
  41044b:	stos   BYTE PTR es:[edi],al
  41044c:	daa    
  41044d:	sub    al,0xd9
  41044f:	sub    bl,cl
  410451:	pop    ecx
  410452:	or     al,0x23
  410454:	dec    edi
  410455:	dec    ebx
  410456:	pop    eax
  410457:	push   edi
  410458:	fistp  WORD PTR [ebx-0x145cc2be]
  41045e:	sbb    BYTE PTR ds:0x34bf37e5,al
  410464:	sti    
  410465:	(bad)  
  410466:	xor    DWORD PTR [eax],ebp
  410468:	stc    
  410469:	arpl   WORD PTR [esp+eax*2+0x118f4774],dx
  410470:	es xor eax,0xcde4bbfc
  410476:	push   ebp
  410477:	hlt    
  410478:	out    dx,al
  410479:	jo     0x4103fc
  41047b:	mov    edx,0x7aabb539
  410480:	lahf   
  410481:	stos   BYTE PTR es:[edi],al
  410482:	xor    al,0x3e
  410484:	inc    ebp
  410485:	dec    ebp
  410486:	mov    DWORD PTR [eax-0x353210cd],esi
  41048c:	mov    ds:0x3dd4d3a7,al
  410491:	popa   
  410492:	imul   ebp
  410494:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410495:	push   eax
  410496:	xlat   BYTE PTR ds:[ebx]
  410497:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410498:	mov    DWORD PTR [ecx+0x2],0x7a0c1818
  41049f:	ror    cl,0x77
  4104a2:	push   eax
  4104a3:	mov    ch,0xf0
  4104a5:	push   eax
  4104a6:	sbb    ch,BYTE PTR [edx-0x4b7dbbfc]
  4104ac:	and    al,0x64
  4104ae:	mov    ebx,edx
  4104b0:	mov    dl,0xf0
  4104b2:	and    DWORD PTR [edi-0x12494661],esi
  4104b8:	mov    eax,ds:0xa3389382
  4104bd:	stos   DWORD PTR es:[edi],eax
  4104be:	shr    DWORD PTR [esi-0x63b4dd98],0xf2
  4104c5:	outs   dx,DWORD PTR ds:[esi]
  4104c6:	(bad)  
  4104c7:	cdq    
  4104c8:	mov    cl,BYTE PTR [edi]
  4104ca:	mov    ebp,0xabd299f9
  4104cf:	mov    edx,0x54b88286
  4104d4:	lea    eax,[esi]
  4104d6:	std    
  4104d7:	cdq    
  4104d8:	shl    BYTE PTR [edi+eiz*2-0x2c],cl
  4104dc:	inc    dx
  4104de:	jmp    0xab6dffbe
  4104e3:	dec    ebp
  4104e4:	push   0xffffffce
  4104e6:	mov    al,0xb5
  4104e8:	xchg   ecx,esp
  4104ea:	dec    edi
  4104eb:	or     dl,BYTE PTR [edx+ebp*8-0x2d]
  4104ef:	cwde   
  4104f0:	sbb    DWORD PTR [eax-0x21],edi
  4104f3:	jae    0x410504
  4104f5:	cmp    al,0x52
  4104f7:	inc    esp
  4104f8:	cmp    ebx,DWORD PTR [ecx]
  4104fa:	jecxz  0x410559
  4104fc:	adc    BYTE PTR [ebx+0x768c91da],0xc7
  410503:	mov    ecx,0x3c63b44a
  410508:	add    esi,DWORD PTR gs:[eax-0x18]
  41050c:	push   esi
  41050d:	gs dec si
  410510:	je     0x410575
  410512:	pushf  
  410513:	or     al,0xa4
  410515:	push   esi
  410516:	mov    dh,0x1
  410518:	jbe    0x4104e3
  41051a:	or     edi,esi
  41051c:	outs   dx,BYTE PTR ds:[esi]
  41051d:	add    al,0xd9
  41051f:	ror    ebp,1
  410521:	call   0x3d22be61
  410526:	mov    edi,0x97d7b662
  41052b:	cmp    DWORD PTR [eax+0x7f],esp
  41052e:	fsub   DWORD PTR ds:0xff492f10
  410534:	packsswb mm2,QWORD PTR [ecx]
  410537:	xchg   esp,eax
  410538:	repnz ins BYTE PTR es:[edi],dx
  41053a:	aaa    
  41053b:	pop    edx
  41053c:	adc    BYTE PTR [ebx-0x199d601f],ch
  410542:	test   BYTE PTR [ebx-0x22],al
  410545:	int3   
  410546:	sub    ch,BYTE PTR [ecx]
  410548:	mov    ecx,0xfb144be5
  41054d:	pop    ds
  41054e:	push   ds
  41054f:	jns    0x41051c
  410551:	sub    esi,edx
  410553:	scas   eax,DWORD PTR es:[edi]
  410554:	push   eax
  410555:	lods   al,BYTE PTR ds:[esi]
  410556:	pop    ecx
  410557:	mov    ds:0xa4be6f2f,al
  41055c:	adc    al,0x9f
  41055e:	bound  ecx,QWORD PTR [edx+0x77487fad]
  410564:	mov    edx,0x5230d6f1
  410569:	mov    dh,BYTE PTR [ecx+ebx*2-0x70e41e90]
  410570:	push   0x4b68ab07
  410575:	pop    edi
  410576:	jmp    0x4105b2
  410578:	loope  0x4105e5
  41057a:	push   esp
  41057b:	loop   0x410580
  41057d:	shr    dh,1
  41057f:	(bad)  
  410580:	adc    DWORD PTR [ebp-0x10],edx
  410583:	shr    ebx,cl
  410585:	xchg   edi,eax
  410586:	mov    ch,0xe3
  410588:	(bad)  
  410589:	fdivrp st(5),st
  41058b:	jae    0x41053b
  41058d:	sub    DWORD PTR [edx-0x13],ebp
  410590:	adc    al,0xc6
  410592:	sbb    BYTE PTR [edx+0x19a209a2],0xa5
  410599:	dec    eax
  41059a:	dec    bp
  41059c:	mov    dl,0x76
  41059e:	pop    ecx
  41059f:	cld    
  4105a0:	or     BYTE PTR [esi+0x3c],0x8e
  4105a4:	xlat   BYTE PTR ds:[ebx]
  4105a5:	jae    0x4105b1
  4105a7:	xchg   BYTE PTR [eax],dh
  4105a9:	add    edx,ecx
  4105ab:	test   BYTE PTR [edx+ebp*2+0x1b6f8dba],ah
  4105b2:	jmp    0xa7175b0c
  4105b7:	xchg   DWORD PTR [ebx],ecx
  4105b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105ba:	jae    0x4105f5
  4105bc:	daa    
  4105bd:	adc    eax,0xdbd20e1f
  4105c2:	dec    esi
  4105c3:	shl    DWORD PTR [edi-0x41],cl
  4105c6:	out    dx,al
  4105c7:	mov    ds:0x8761d4d1,eax
  4105cc:	inc    ebp
  4105cd:	(bad)  
  4105ce:	push   esp
  4105cf:	fisub  WORD PTR [ebx-0x74]
  4105d2:	dec    esp
  4105d3:	mov    esi,esp
  4105d5:	sub    dh,dl
  4105d7:	out    0x7b,al
  4105d9:	fs add eax,0x1c4f02ee
  4105df:	xchg   edx,eax
  4105e0:	dec    ebp
  4105e1:	jmp    0x4105ae
  4105e3:	rcl    edx,0x42
  4105e6:	cld    
  4105e7:	and    eax,0xbd5cacd0
  4105ec:	adc    DWORD PTR [edi-0x36],ecx
  4105ef:	popa   
  4105f0:	xchg   ecx,eax
  4105f1:	or     eax,0xfe7f7db3
  4105f6:	in     eax,dx
  4105f7:	xor    DWORD PTR [esi+0x33a5af69],0x36
  4105fe:	push   edx
  4105ff:	test   DWORD PTR [edx],edi
  410601:	sti    
  410602:	mov    bl,BYTE PTR [ecx+0x28]
  410605:	(bad)  
  410606:	call   0xce1a:0x69822876
  41060d:	adc    DWORD PTR [edi-0x3a],edi
  410610:	cmp    al,0xc1
  410612:	or     eax,DWORD PTR [esi+ebp*1+0x2]
  410616:	mov    bh,0x3b
  410618:	jp     0x410687
  41061a:	ss pushf 
  41061c:	arpl   WORD PTR [ecx-0x74],bp
  41061f:	das    
  410620:	vpcmpeqd xmm2,xmm1,XMMWORD PTR [esi-0x15b30bd7]
  410628:	popa   
  410629:	add    eax,0x93f8675
  41062e:	push   0xce0f768a
  410633:	dec    edx
  410634:	lods   eax,DWORD PTR ds:[esi]
  410635:	and    BYTE PTR [ebx-0x1],bl
  410638:	fstp   TBYTE PTR [edx+esi*8-0x48]
  41063c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41063d:	add    dh,BYTE PTR [eax]
  41063f:	imul   edx,DWORD PTR [edi-0x235c662f],0x31
  410646:	jg     0x41065b
  410648:	sbb    BYTE PTR [esi+0x79],bh
  41064b:	mov    ds:0xb9ea3f44,eax
  410650:	int3   
  410651:	sar    DWORD PTR [eax-0x3e],cl
  410654:	xrelease xchg BYTE PTR [edi+0x6c6cb4fc],dh
  41065b:	adc    al,0xd4
  41065d:	pop    eax
  41065e:	cld    
  41065f:	movlps QWORD PTR [ecx-0x20bb6e0d],xmm6
  410666:	mov    ds:0x3ad88c59,al
  41066b:	inc    edx
  41066c:	pop    ds
  41066d:	mov    bl,0xa3
  41066f:	les    esi,FWORD PTR [eax]
  410671:	and    BYTE PTR [ecx-0x2c],ch
  410674:	test   ecx,esi
  410676:	xlat   BYTE PTR ds:[ebx]
  410677:	push   ds
  410678:	ficomp DWORD PTR [ecx-0x26e91c6e]
  41067e:	aad    0x56
  410680:	mov    esi,0x4e1b38a0
  410685:	pop    esp
  410686:	outs   dx,DWORD PTR ds:[esi]
  410687:	add    eax,0x652eca48
  41068c:	test   ch,ah
  41068e:	mov    DWORD PTR [ebp+0x6858bdd5],ecx
  410694:	mov    ah,0xf4
  410696:	shr    DWORD PTR [ebx+0x46e8bb3d],cl
  41069c:	push   ebx
  41069d:	pop    esi
  41069e:	push   esp
  41069f:	(bad)  
  4106a0:	xlat   BYTE PTR ds:[ebx]
  4106a1:	jg     0x410637
  4106a3:	loope  0x4106eb
  4106a5:	scas   eax,DWORD PTR es:[edi]
  4106a6:	push   cs
  4106a7:	pop    edx
  4106a8:	das    
  4106a9:	das    
  4106aa:	in     al,0x8
  4106ac:	int3   
  4106ad:	mov    ch,0x5c
  4106af:	dec    esi
  4106b0:	(bad)  
  4106b1:	mov    edx,0x3bbea517
  4106b6:	mov    bh,dh
  4106b8:	cs mov esi,0x7f91496f
  4106be:	xlat   BYTE PTR ds:[ebx]
  4106bf:	imul   eax,edi,0xa5ffe5fe
  4106c5:	xchg   esp,eax
  4106c6:	call   0x7e765ac4
  4106cb:	mov    ch,0x9
  4106cd:	sub    al,0xe7
  4106cf:	cmp    al,0x3a
  4106d1:	dec    ebx
  4106d2:	dec    edi
  4106d3:	xor    DWORD PTR [ebp-0x2f57a805],esp
  4106d9:	pop    edi
  4106da:	mov    ds:0x88bf4f2,eax
  4106df:	sbb    ah,BYTE PTR [ecx]
  4106e1:	daa    
  4106e2:	fimul  WORD PTR [eax-0x136f108f]
  4106e8:	push   ecx
  4106e9:	xchg   edx,eax
  4106ea:	add    eax,0x201fc4de
  4106ef:	int    0x84
  4106f1:	imul   edx,edi,0xffffffbb
  4106f4:	aaa    
  4106f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106f6:	sbb    ebx,DWORD PTR [edi+0x79]
  4106f9:	push   esi
  4106fa:	outs   dx,DWORD PTR ds:[esi]
  4106fb:	mov    ebx,0x44acb179
  410700:	mov    ds:0x6be25eff,eax
  410705:	lods   al,BYTE PTR ds:[esi]
  410706:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410707:	push   eax
  410708:	es push eax
  41070a:	jbe    0x4106c5
  41070c:	test   eax,ebp
  41070e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41070f:	jns    0x41071e
  410711:	scas   eax,DWORD PTR es:[edi]
  410712:	mov    bh,0x37
  410714:	jecxz  0x41071d
  410716:	test   al,0x4a
  410718:	popa   
  410719:	mov    bl,0xe3
  41071b:	aam    0x7e
  41071d:	xor    eax,0xfa3547aa
  410722:	cmp    edx,ebx
  410724:	mov    BYTE PTR [ebx-0x1aeb1a06],bh
  41072a:	xchg   edx,eax
  41072b:	adc    DWORD PTR [edx],esp
  41072d:	mov    ds:0xea144951,eax
  410732:	or     DWORD PTR ds:0x791a375b,eax
  410738:	mov    WORD PTR [eax],cs
  41073a:	bound  ebx,QWORD PTR [esi+esi*8]
  41073d:	aas    
  41073e:	fwait
  41073f:	es dec esi
  410741:	inc    edx
  410742:	mov    al,ds:0x9d60881d
  410747:	mov    al,0x49
  410749:	mov    ds:0x67b9eb16,eax
  41074e:	and    al,0x52
  410750:	xor    esp,ebx
  410752:	mov    ds:0xe07b2c6e,eax
  410757:	in     al,dx
  410758:	ja     0x41076b
  41075a:	lock xchg ecx,eax
  41075c:	mov    esi,0x5c6ea1f9
  410761:	pushf  
  410762:	mov    ecx,DWORD PTR [eax+0x3686bac]
  410768:	pusha  
  410769:	cmp    eax,0x847e816a
  41076e:	push   edx
  41076f:	sbb    DWORD PTR [esi],esp
  410771:	in     eax,dx
  410772:	mov    esi,0x5d32c8e0
  410777:	adc    al,BYTE PTR [ebx+esi*4-0x2e28dc6b]
  41077e:	neg    al
  410780:	hlt    
  410781:	mov    ch,0x70
  410783:	fs xchg esi,esp
  410786:	les    esp,FWORD PTR ds:0x71a8ef82
  41078c:	call   0xa893:0x369b12f2
  410793:	outs   dx,DWORD PTR ds:[esi]
  410794:	fs and ch,dh
  410797:	push   eax
  410798:	es jmp 0x41075e
  41079b:	or     cl,dl
  41079d:	xchg   edi,eax
  41079e:	out    dx,eax
  41079f:	dec    ebx
  4107a0:	iret   
  4107a1:	or     BYTE PTR [esi],bh
  4107a3:	lods   al,BYTE PTR ds:[esi]
  4107a4:	lea    ecx,[ecx]
  4107a6:	pop    edi
  4107a7:	pop    ss
  4107a8:	adc    al,0xe1
  4107aa:	xor    cx,ax
  4107ad:	stos   WORD PTR es:[edi],ax
  4107af:	mov    ds:0x81e313bf,al
  4107b4:	(bad)  
  4107b5:	pop    ds
  4107b6:	pop    esi
  4107b7:	inc    edx
  4107b8:	jg     0x4107f1
  4107ba:	or     eax,0x84e9a587
  4107bf:	shr    DWORD PTR [edx+edx*2],cl
  4107c2:	ret    
  4107c3:	int3   
  4107c4:	test   BYTE PTR [eax+0x3be65c3f],ah
  4107ca:	loop   0x410823
  4107cc:	push   ds
  4107cd:	pop    esp
  4107ce:	call   0xe49832b4
  4107d3:	and    al,0xb4
  4107d5:	push   ds
  4107d6:	fsin   
  4107d8:	or     cl,dl
  4107da:	add    bl,BYTE PTR [esi]
  4107dc:	jmp    0xf808:0x285a9c0b
  4107e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107e4:	or     al,0x98
  4107e6:	mov    dl,0x14
  4107e8:	mov    al,0xe3
  4107ea:	cwde   
  4107eb:	jae    0x4107c2
  4107ed:	sub    eax,0x9579c9ac
  4107f2:	test   DWORD PTR [edi],edx
  4107f4:	or     eax,ebx
  4107f6:	or     esp,ebp
  4107f8:	sbb    bl,BYTE PTR [ebx-0x34]
  4107fb:	inc    edx
  4107fc:	out    dx,eax
  4107fd:	add    al,0x36
  4107ff:	dec    edi
  410800:	mov    esi,0x240ac86e
  410805:	mov    ah,0x36
  410807:	stos   DWORD PTR es:[di],eax
  410809:	push   ecx
  41080a:	rcr    esp,1
  41080c:	into   
  41080d:	mov    BYTE PTR [edx],dl
  41080f:	mov    edi,0x56573e3e
  410814:	pop    di
  410816:	xlat   BYTE PTR ds:[ebx]
  410817:	mul    DWORD PTR [ebp-0x7e401125]
  41081d:	test   eax,0x87547311
  410822:	add    edx,DWORD PTR [ecx]
  410824:	inc    ebp
  410825:	jecxz  0x410828
  410827:	xchg   esp,eax
  410828:	push   ss
  410829:	jbe    0x4107be
  41082b:	test   bh,dl
  41082d:	lds    esi,FWORD PTR [ebx]
  41082f:	call   0x2c51:0xa6776314
  410836:	jmp    0x8f61:0x81cd7cee
  41083d:	mov    bp,0x175c
  410841:	(bad)  
  410842:	xchg   edi,eax
  410843:	sub    BYTE PTR [edi],0x79
  410846:	icebp  
  410847:	ds jmp 0xbb100071
  41084d:	sub    al,0xc2
  41084f:	mov    eax,ds:0x7f798282
  410854:	stos   BYTE PTR es:[edi],al
  410855:	sub    BYTE PTR [eax-0x56b0e644],0x2e
  41085c:	sti    
  41085d:	pop    ebp
  41085e:	aam    0x13
  410860:	icebp  
  410861:	cs mov edi,0xf39dfebb
  410867:	sti    
  410868:	push   ecx
  410869:	pushf  
  41086a:	into   
  41086b:	or     DWORD PTR ds:0x35709186,edi
  410871:	jg     0x41082c
  410873:	aad    0x71
  410875:	push   ecx
  410876:	sti    
  410877:	hlt    
  410878:	mov    ah,0x90
  41087a:	inc    edi
  41087b:	push   0x2f6bbdb7
  410880:	or     eax,DWORD PTR [ebx]
  410882:	in     al,dx
  410883:	je     0x41080c
  410885:	sub    eax,0x49601ff5
  41088a:	cmc    
  41088b:	and    BYTE PTR [eax-0x31943db9],ah
  410891:	pop    ds
  410892:	loopne 0x410848
  410894:	arpl   WORD PTR [ecx-0x74],dx
  410897:	push   ds
  410898:	leave  
  410899:	sbb    cl,BYTE PTR [ebx-0x5852f953]
  41089f:	std    
  4108a0:	cs ror ecx,0x9e
  4108a4:	pop    esi
  4108a5:	mov    DWORD PTR [esi+edi*2],esi
  4108a8:	xchg   edx,eax
  4108a9:	xor    DWORD PTR [ebx+0xaed7553],esi
  4108af:	enter  0xffd6,0x66
  4108b3:	cmp    BYTE PTR [edx+0x7f653e97],dl
  4108b9:	pop    ecx
  4108ba:	mov    DWORD PTR [esi+0x72],esi
  4108bd:	popa   
  4108be:	xchg   ebx,ebx
  4108c0:	mov    al,0x3f
  4108c2:	popa   
  4108c3:	outs   dx,BYTE PTR ds:[esi]
  4108c4:	mov    eax,DWORD PTR [edi-0x6c]
  4108c7:	xchg   ebp,eax
  4108c8:	ror    BYTE PTR [ebp+0x4b],1
  4108cb:	inc    ebp
  4108cc:	dec    edx
  4108cd:	dec    edi
  4108ce:	(bad)  
  4108cf:	pop    ebx
  4108d0:	mov    DWORD PTR [edi-0x7d731318],0xcad7b43e
  4108da:	xor    DWORD PTR [ebx+0x2c0695f5],edx
  4108e0:	nop
  4108e1:	test   al,0x79
  4108e3:	fidivr DWORD PTR [eax-0x148d8771]
  4108e9:	or     eax,0xa4eace49
  4108ee:	shr    DWORD PTR [esi],0x19
  4108f1:	rcl    DWORD PTR [esi-0x6],1
  4108f4:	and    al,0xfa
  4108f6:	mov    eax,ds:0xa829a3bd
  4108fb:	push   es
  4108fc:	mov    DWORD PTR [esi-0x56],eax
  4108ff:	xlat   BYTE PTR ds:[ebx]
  410900:	push   cs
  410901:	aaa    
  410902:	or     DWORD PTR [ecx],edi
  410904:	mov    ds:0xade17381,eax
  410909:	(bad)  
  41090b:	pop    ebx
  41090c:	aas    
  41090d:	not    dh
  41090f:	(bad)  
  410910:	sub    eax,0xf45d9727
  410915:	shl    DWORD PTR [edi-0x1955b717],0xc3
  41091c:	int    0x8e
  41091e:	enter  0x8784,0xda
  410922:	out    0x19,eax
  410924:	sbb    dh,dh
  410926:	inc    ecx
  410927:	js     0x410965
  410929:	ins    DWORD PTR es:[edi],dx
  41092a:	retf   
  41092b:	pop    edx
  41092c:	lds    edx,FWORD PTR [edi+0x3d706f0c]
  410932:	xchg   DWORD PTR [ebx+0x78],eax
  410935:	pop    esp
  410936:	ret    0xcf8c
  410939:	hlt    
  41093a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41093b:	int3   
  41093c:	and    dl,BYTE PTR [ebx]
  41093e:	dec    esp
  41093f:	push   cs
  410940:	push   edi
  410941:	push   ecx
  410942:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410943:	dec    esi
  410944:	ds aad 0x54
  410947:	jle    0x410947
  410949:	test   BYTE PTR [eax-0x6],bh
  41094c:	(bad)  
  41094d:	adc    eax,0x9ee2fb5f
  410952:	adc    eax,0x45e97e5f
  410957:	lea    esi,[ecx]
  410959:	pop    es
  41095a:	inc    ecx
  41095b:	ss retf 
  41095d:	sbb    BYTE PTR [edx],0x89
  410960:	icebp  
  410961:	mov    ds:0xe9771927,eax
  410966:	mov    eax,0xe036531e
  41096b:	pop    ecx
  41096c:	or     ah,BYTE PTR [ebp-0x58]
  41096f:	enter  0xdfd5,0xde
  410973:	xor    eax,DWORD PTR [edi]
  410975:	pop    ecx
  410976:	shr    BYTE PTR [esi],1
  410978:	div    DWORD PTR [ecx+0x2c948896]
  41097e:	icebp  
  41097f:	hlt    
  410980:	jne    0x4109d2
  410982:	push   ecx
  410983:	push   ebx
  410984:	(bad)  
  410985:	aad    0x5b
  410987:	mov    al,ds:0xd7c5d336
  41098c:	push   ebp
  41098d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41098e:	repnz cs add al,0x2d
  410992:	sti    
  410993:	xor    ch,ch
  410995:	or     BYTE PTR [ecx],0x5f
  410998:	(bad)  
  410999:	dec    edx
  41099a:	or     al,0x42
  41099c:	inc    eax
  41099d:	ins    BYTE PTR es:[edi],dx
  41099e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41099f:	and    dl,cl
  4109a1:	je     0x4109b8
  4109a3:	sahf   
  4109a4:	xor    al,0x47
  4109a6:	test   al,0x0
  4109a8:	es push 0xeb0a7e52
  4109ae:	int    0xdf
  4109b0:	popf   
  4109b1:	imul   DWORD PTR [eax]
  4109b3:	lods   al,BYTE PTR ds:[esi]
  4109b4:	inc    edi
  4109b5:	sbb    al,0xe0
  4109b7:	xchg   edx,eax
  4109b8:	push   0x45
  4109ba:	push   0xda87c6ae
  4109bf:	cwde   
  4109c0:	out    0x16,eax
  4109c2:	stc    
  4109c3:	call   DWORD PTR [eax*2-0x3e161e3c]
  4109ca:	jl     0x410a45
  4109cc:	pop    eax
  4109cd:	sti    
  4109ce:	xchg   esp,eax
  4109cf:	pop    esp
  4109d0:	dec    ebx
  4109d1:	xchg   ecx,eax
  4109d2:	sub    DWORD PTR [eax+0x5e],ebx
  4109d5:	test   DWORD PTR [edx+edi*2+0x724d8194],edi
  4109dc:	ins    DWORD PTR es:[edi],dx
  4109dd:	or     BYTE PTR [eax+0xc4c98fd],dh
  4109e3:	sbb    BYTE PTR [eax+0x723da7f4],bl
  4109e9:	and    al,0x17
  4109eb:	aad    0x91
  4109ed:	in     eax,dx
  4109ee:	mov    al,0x1b
  4109f0:	sub    DWORD PTR [edi],ecx
  4109f2:	ficom  DWORD PTR [edi+0x7ec15bd8]
  4109f8:	adc    cl,cl
  4109fa:	dec    ebp
  4109fb:	jmp    0x4109a3
  4109fd:	cmp    BYTE PTR [edx+0x1],dh
  410a00:	mov    BYTE PTR [ecx],bh
  410a02:	aad    0xbe
  410a04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a05:	mov    bh,0x27
  410a07:	sbb    BYTE PTR [edi],al
  410a09:	sbb    ecx,DWORD PTR [esi-0x35]
  410a0c:	scas   eax,DWORD PTR es:[edi]
  410a0d:	jg     0x410a8b
  410a0f:	inc    ecx
  410a10:	out    0xcc,al
  410a12:	mov    esp,0xf7fa04d5
  410a17:	pop    ebx
  410a18:	int3   
  410a19:	ja     0x4109a3
  410a1b:	lds    esi,FWORD PTR [esi-0x57]
  410a1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a1f:	sar    cl,1
  410a21:	lods   al,BYTE PTR ds:[esi]
  410a22:	js     0x410a12
  410a24:	mov    ah,0x6b
  410a26:	lahf   
  410a27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a28:	(bad)  
  410a29:	push   edx
  410a2a:	stos   BYTE PTR es:[edi],al
  410a2b:	inc    ebp
  410a2c:	adc    DWORD PTR [eax],esi
  410a2e:	scas   eax,DWORD PTR es:[edi]
  410a2f:	sub    bl,dl
  410a31:	(bad)  
  410a32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a33:	jp     0x410a24
  410a35:	(bad)  
  410a36:	cmc    
  410a37:	and    bl,ah
  410a39:	shl    BYTE PTR [esi-0x944bdeb],cl
  410a3f:	pop    edi
  410a40:	jb     0x410a5d
  410a42:	push   ecx
  410a43:	enter  0x3e38,0xf
  410a47:	add    edx,edi
  410a49:	not    DWORD PTR [ebp+0x5ebe6f9f]
  410a4f:	adc    ebp,0xd1ff0b3d
  410a55:	ror    BYTE PTR [ebx],1
  410a57:	pop    ss
  410a58:	ret    0xa563
  410a5b:	xor    ah,BYTE PTR [eax-0x5fbd4fe9]
  410a61:	dec    edi
  410a62:	sbb    ebp,DWORD PTR [esi+0x444ccf58]
  410a68:	jge    0x410a1e
  410a6a:	popa   
  410a6b:	pushf  
  410a6c:	inc    edx
  410a6d:	ja     0xa2ad9395
  410a73:	cld    
  410a74:	or     eax,0xbdb955c9
  410a79:	adc    BYTE PTR [edi-0x78],cl
  410a7c:	ins    DWORD PTR es:[edi],dx
  410a7d:	sub    al,0x3b
  410a7f:	out    dx,eax
  410a80:	ja     0x410a14
  410a82:	js     0x410a51
  410a84:	dec    edx
  410a85:	mov    ebp,0x486dcddf
  410a8a:	mov    esi,0xa4de0544
  410a8f:	out    0x9d,eax
  410a91:	inc    edx
  410a92:	jnp    0x410a45
  410a94:	mov    esi,0xca817c44
  410a99:	fmul   QWORD PTR [edi]
  410a9b:	sub    al,0x8a
  410a9d:	aaa    
  410a9e:	fstp   st(3)
  410aa0:	or     DWORD PTR [ebx-0x3f],0x65
  410aa4:	ds ss mov cl,0x1
  410aa8:	mov    dl,0x31
  410aaa:	jl     0x410b1d
  410aac:	xor    al,0x83
  410aae:	mov    es,WORD PTR [ecx-0x57]
  410ab1:	ja     0x410a8e
  410ab3:	xchg   sp,ax
  410ab5:	gs xchg ebp,eax
  410ab7:	push   ebx
  410ab8:	push   esi
  410ab9:	or     al,0x6a
  410abb:	pop    ecx
  410abc:	adc    DWORD PTR [ecx],0xffffff90
  410abf:	sahf   
  410ac0:	cli    
  410ac1:	jecxz  0x410b36
  410ac3:	xor    DWORD PTR ds:0x775b6538,ebp
  410ac9:	push   ebp
  410aca:	adc    al,0x42
  410acc:	ret    
  410acd:	mov    edi,0xf681d934
  410ad2:	xlat   BYTE PTR ds:[ebx]
  410ad3:	inc    ebx
  410ad4:	test   BYTE PTR [ecx+0x648daedb],ch
  410ada:	push   ebx
  410adb:	inc    ecx
  410adc:	dec    esi
  410add:	add    eax,0x52ed076d
  410ae2:	adc    al,0x14
  410ae4:	inc    ebp
  410ae5:	lock test BYTE PTR [esi+0x4bc61cb8],bh
  410aec:	push   0xfffffff4
  410aee:	jl     0x410b15
  410af0:	adc    edx,DWORD PTR [eax]
  410af2:	neg    DWORD PTR ds:0x32436cbe
  410af8:	sahf   
  410af9:	jnp    0x410aa4
  410afb:	xchg   edi,eax
  410afc:	ret    
  410afd:	fs sbb eax,0x323b70dc
  410b03:	aas    
  410b04:	lods   eax,DWORD PTR ds:[esi]
  410b05:	out    0x95,eax
  410b07:	(bad)  
  410b09:	and    al,0x76
  410b0b:	in     eax,dx
  410b0c:	scas   eax,DWORD PTR es:[edi]
  410b0d:	aas    
  410b0e:	mov    BYTE PTR [edx+0x19c61daa],dl
  410b14:	sbb    eax,0x6fc4a46c
  410b19:	adc    dl,bl
  410b1b:	adc    cl,BYTE PTR [eax+0x23]
  410b1e:	stos   DWORD PTR es:[edi],eax
  410b1f:	lds    ebx,FWORD PTR [esi+ebp*4+0x601ec6a0]
  410b26:	gs push esp
  410b28:	jae    0x410b7d
  410b2a:	push   ebx
  410b2b:	aaa    
  410b2c:	ins    DWORD PTR es:[edi],dx
  410b2d:	add    al,0x78
  410b2f:	jge    0x410ba4
  410b31:	out    0x16,al
  410b33:	int    0x50
  410b35:	ret    0x189d
  410b38:	or     al,0xb8
  410b3a:	ja     0x410b80
  410b3c:	xor    eax,0x4f382a3
  410b41:	sbb    DWORD PTR [eax+0x29516d3d],edi
  410b47:	shl    BYTE PTR [ebx],cl
  410b49:	or     DWORD PTR [ecx],ebx
  410b4b:	xchg   ebp,eax
  410b4c:	cmp    al,0xe8
  410b4e:	push   eax
  410b4f:	in     eax,0x8d
  410b51:	xor    al,0x75
  410b53:	shr    DWORD PTR [edx-0x47],1
  410b56:	mov    ds:0xdc7f1b9f,eax
  410b5b:	stos   BYTE PTR es:[edi],al
  410b5c:	push   cs
  410b5d:	enter  0xdf7a,0x9e
  410b61:	push   edx
  410b62:	and    ecx,DWORD PTR [edx+0x30]
  410b65:	ror    DWORD PTR [edi+esi*1],0x7d
  410b69:	dec    ebp
  410b6a:	test   al,0xf3
  410b6c:	nop
  410b6d:	jecxz  0x410b48
  410b6f:	cmc    
  410b70:	int    0xc3
  410b72:	neg    ebx
  410b74:	retf   
  410b75:	and    edi,DWORD PTR [esp+ecx*1-0xb509b22]
  410b7c:	or     ebx,DWORD PTR [esi-0x62]
  410b7f:	lock scas eax,DWORD PTR es:[edi]
  410b81:	retf   0xa032
  410b84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b85:	xor    al,0x9c
  410b87:	dec    esi
  410b88:	mov    eax,0x2031907c
  410b8d:	cmp    al,0x1
  410b8f:	into   
  410b90:	mov    eax,ds:0xd43ff202
  410b95:	cs leave 
  410b97:	push   eax
  410b98:	push   ss
  410b99:	sbb    al,0x70
  410b9b:	sub    ebx,esp
  410b9d:	and    ebx,esp
  410b9f:	lods   al,BYTE PTR ds:[esi]
  410ba0:	out    dx,eax
  410ba1:	shl    BYTE PTR [ebp-0x31aafd6f],0xd5
  410ba8:	adc    DWORD PTR ds:0x1289a077,ebx
  410bae:	mov    al,0xb3
  410bb0:	add    edx,esp
  410bb2:	cmp    al,0xca
  410bb4:	shr    BYTE PTR [ebp*1-0x38596bb2],0xaa
  410bbc:	in     al,0xe9
  410bbe:	ins    BYTE PTR es:[edi],dx
  410bbf:	jb     0x410b8f
  410bc1:	rcr    BYTE PTR [ebx],cl
  410bc3:	das    
  410bc4:	and    al,0x62
  410bc6:	out    0xc,eax
  410bc8:	mov    dh,0xd
  410bca:	out    dx,eax
  410bcb:	jns    0x410b8b
  410bcd:	bnd ret 0x2903
  410bd1:	inc    ecx
  410bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bd3:	jo     0x410bcb
  410bd5:	sub    BYTE PTR [edi-0x30],0x79
  410bd9:	cmp    BYTE PTR [esi-0x1529296c],cl
  410bdf:	in     al,dx
  410be0:	add    eax,0x33183d0d
  410be5:	out    dx,eax
  410be6:	push   edi
  410be7:	out    0x1a,ax
  410bea:	xchg   ebx,eax
  410beb:	sub    bh,BYTE PTR [eax-0x409800c2]
  410bf1:	sbb    al,0x11
  410bf3:	or     ch,BYTE PTR ds:0x64bfe74
  410bf9:	inc    edx
  410bfa:	lea    dx,[ebx]
  410bfd:	jmp    FWORD PTR [esi-0x60]
  410c00:	jl     0x410c65
  410c02:	pop    eax
  410c03:	push   ebp
  410c04:	pusha  
  410c05:	iret   
  410c06:	push   esi
  410c07:	xchg   ecx,eax
  410c08:	jl     0x410b91
  410c0a:	jmp    FWORD PTR [edi+0x74e5c5c]
  410c10:	sub    ebp,DWORD PTR ds:0x50528d1e
  410c16:	daa    
  410c17:	ins    BYTE PTR es:[edi],dx
  410c18:	add    esi,ecx
  410c1a:	imul   edi,DWORD PTR [esi-0x34],0xffffffc4
  410c1e:	and    bl,dl
  410c20:	ins    DWORD PTR es:[edi],dx
  410c21:	andnps xmm2,xmm1
  410c24:	ret    
  410c25:	jo     0x410c7f
  410c27:	cli    
  410c28:	scas   al,BYTE PTR es:[edi]
  410c29:	inc    edi
  410c2a:	xor    DWORD PTR [edx],ebx
  410c2c:	xor    eax,0x1d7a2a3d
  410c31:	inc    esp
  410c32:	push   ecx
  410c33:	in     eax,0x4d
  410c35:	pop    ecx
  410c36:	scas   eax,DWORD PTR es:[edi]
  410c37:	outs   dx,BYTE PTR ds:[esi]
  410c38:	add    DWORD PTR [esi+0x78],ecx
  410c3b:	retf   
  410c3c:	jbe    0x410c92
  410c3e:	stos   BYTE PTR es:[edi],al
  410c3f:	ret    0xa68
  410c42:	sahf   
  410c43:	mov    bh,0x84
  410c45:	and    DWORD PTR [edx-0x78bf091c],ebp
  410c4b:	push   0xefaa15df
  410c50:	cmp    DWORD PTR [edi],ebx
  410c52:	cld    
  410c53:	dec    eax
  410c54:	stos   DWORD PTR es:[edi],eax
  410c55:	int3   
  410c56:	(bad)  
  410c58:	shl    BYTE PTR [edx+0xf878213],1
  410c5e:	int    0x7
  410c60:	mov    cl,BYTE PTR [ebx+0x22]
  410c63:	arpl   WORD PTR [ecx],di
  410c65:	mov    ds:0xb19f9de3,al
  410c6a:	cmp    eax,0xba745547
  410c6f:	xlat   BYTE PTR ds:[ebx]
  410c70:	or     al,0x3
  410c72:	add    BYTE PTR [eax],cl
  410c74:	push   ecx
  410c75:	loop   0x410ccb
  410c77:	fwait
  410c78:	repnz add BYTE PTR [ebx-0x80],0xc2
  410c7d:	dec    esi
  410c7e:	xchg   BYTE PTR [ebp-0x52],ch
  410c81:	add    al,0xb9
  410c83:	int    0xf0
  410c85:	in     eax,dx
  410c86:	adc    ecx,0x4f1163f1
  410c8c:	sub    al,0x45
  410c8e:	nop
  410c8f:	stos   BYTE PTR es:[edi],al
  410c90:	xor    DWORD PTR [esi+0x39],edi
  410c93:	sar    DWORD PTR [ecx+0x32],1
  410c96:	pop    ds
  410c97:	jne    0x410cd6
  410c99:	sub    bl,bh
  410c9b:	mov    ebp,0x919380e
  410ca0:	inc    ebx
  410ca1:	push   esi
  410ca2:	js     0x410ca7
  410ca4:	or     BYTE PTR [esi-0x46],al
  410ca7:	fisubr DWORD PTR [eax-0x305ac727]
  410cad:	adc    eax,0xdc805e13
  410cb2:	inc    eax
  410cb3:	push   esi
  410cb4:	push   ecx
  410cb5:	mov    bl,0xec
  410cb7:	into   
  410cb8:	daa    
  410cb9:	leave  
  410cba:	jge    0x410caf
  410cbc:	test   al,0x1b
  410cbe:	mov    al,ds:0xe8581f7e
  410cc3:	ss sub edi,ebp
  410cc6:	jp     0x410d40
  410cc8:	or     al,BYTE PTR [eax+0x45]
  410ccb:	cmc    
  410ccc:	rcl    BYTE PTR [ebx+0x44fa959a],0xbd
  410cd3:	jp     0x410cae
  410cd5:	mov    edx,0xa580c277
  410cda:	loop   0x410ced
  410cdc:	or     al,0x5
  410cde:	pop    ecx
  410cdf:	stos   DWORD PTR es:[edi],eax
  410ce0:	adc    DWORD PTR [eax+edi*2+0x4c],ecx
  410ce4:	cld    
  410ce5:	repnz add esp,ebx
  410ce8:	mov    bh,0x6e
  410cea:	pop    esp
  410ceb:	xchg   ecx,eax
  410cec:	ret    
  410ced:	push   eax
  410cee:	fdiv   DWORD PTR [esi+0x18936339]
  410cf4:	adc    al,0xaa
  410cf6:	jmp    0x410d25
  410cf8:	fistp  WORD PTR [edi-0x7a]
  410cfb:	xor    esp,edi
  410cfd:	or     DWORD PTR [ebx+0x7a],0xc5d24ab9
  410d04:	mov    BYTE PTR cs:[ecx+ebp*2+0x58],dl
  410d09:	mov    dl,0xc5
  410d0b:	fst    QWORD PTR [edi+edx*2-0x78]
  410d0f:	mov    ebp,0x6c776be9
  410d14:	xchg   ebp,eax
  410d15:	xor    ebx,DWORD PTR [ebx-0x41]
  410d18:	leave  
  410d19:	leave  
  410d1a:	imul   esp,eax,0xffffffca
  410d1d:	cmp    al,0xef
  410d1f:	mov    esi,0xfce401e5
  410d24:	jmp    0x410d4f
  410d26:	pop    eax
  410d27:	mov    bh,0xd4
  410d29:	jle    0x410cb9
  410d2b:	mov    edi,0xc9bc9757
  410d30:	jmp    0x568a5b9c
  410d35:	push   ds
  410d36:	lock pop esi
  410d38:	les    ebp,FWORD PTR [edx-0x7f0eef1b]
  410d3e:	push   ebx
  410d3f:	sbb    DWORD PTR [ecx+0x3609f18f],ebp
  410d45:	inc    ebx
  410d46:	push   eax
  410d47:	jo     0x410dad
  410d49:	pushf  
  410d4a:	pushf  
  410d4b:	xor    bl,BYTE PTR [edx]
  410d4d:	mov    dh,0x62
  410d4f:	scas   eax,DWORD PTR es:[edi]
  410d50:	xor    ah,BYTE PTR [ecx+0x22]
  410d53:	mov    esp,0x91d232bc
  410d58:	and    eax,0x724d9fc3
  410d5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d5e:	fnsave [edi-0x1e]
  410d61:	(bad)  
  410d63:	cld    
  410d64:	xchg   al,ah
  410d66:	pop    esi
  410d67:	cli    
  410d68:	arpl   WORD PTR [ebx],dx
  410d6a:	loop   0x410d43
  410d6c:	enter  0x281d,0xf4
  410d70:	imul   edi,DWORD PTR [edx+eiz*4+0x4c],0xffffffd1
  410d75:	loopne 0x410dc1
  410d77:	in     al,0x61
  410d79:	sar    ecx,cl
  410d7b:	outs   dx,BYTE PTR ds:[esi]
  410d7c:	addr16 inc ecx
  410d7e:	sub    dl,BYTE PTR [edx]
  410d80:	retf   0x1b1a
  410d83:	popf   
  410d84:	mov    ds:0x1621bdff,eax
  410d89:	xchg   ecx,eax
  410d8a:	push   0xffffffdb
  410d8c:	mov    ch,0x6a
  410d8e:	hlt    
  410d8f:	jns    0x410d6e
  410d91:	ds pop ebp
  410d93:	test   DWORD PTR [ecx],eax
  410d95:	lds    ebp,FWORD PTR [eax]
  410d97:	sub    DWORD PTR [ecx+0x49],esi
  410d9a:	(bad)  
  410d9b:	mov    ah,0xf5
  410d9d:	sub    BYTE PTR [edi],cl
  410d9f:	mov    esp,0xcaa588d9
  410da4:	(bad)  
  410da6:	mov    cl,0xe4
  410da8:	xchg   ebx,ebp
  410daa:	cmp    edx,ecx
  410dac:	mov    al,0xa8
  410dae:	mov    dl,0xed
  410db0:	xchg   edx,eax
  410db1:	dec    edx
  410db2:	and    DWORD PTR [ebx-0x17],esp
  410db5:	lock scas eax,DWORD PTR es:[edi]
  410db7:	pop    edx
  410db8:	mov    es,WORD PTR [ebx-0x356e7b5a]
  410dbe:	sbb    bh,BYTE PTR [ebx-0x43]
  410dc1:	lods   al,BYTE PTR ds:[esi]
  410dc2:	pop    eax
  410dc3:	pushf  
  410dc4:	jl     0x410e2b
  410dc6:	enter  0xb97,0x70
  410dca:	inc    esp
  410dcb:	mov    bl,0x7d
  410dcd:	or     cl,BYTE PTR [edx+0x46]
  410dd0:	or     DWORD PTR [ebp-0x40],edi
  410dd3:	and    esp,esp
  410dd5:	mov    dl,0x36
  410dd7:	sahf   
  410dd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dd9:	ja     0x410e50
  410ddb:	addr16 (bad) 
  410ddd:	jmp    0x410e40
  410ddf:	pop    ecx
  410de0:	test   al,0xad
  410de2:	xor    eax,0x36d1b03b
  410de7:	jo     0x410db5
  410de9:	push   ds
  410dea:	shr    BYTE PTR [ecx+0x4579a811],0x71
  410df1:	pop    eax
  410df2:	std    
  410df3:	hlt    
  410df4:	test   al,0x9
  410df6:	dec    ebx
  410df7:	outs   dx,DWORD PTR ds:[esi]
  410df8:	push   cs
  410df9:	inc    ebp
  410dfa:	fdivrp st(5),st
  410dfc:	in     eax,dx
  410dfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dfe:	lahf   
  410dff:	adc    dl,BYTE PTR [ecx-0x62]
  410e02:	test   bh,0x65
  410e05:	aaa    
  410e06:	xchg   ebx,eax
  410e07:	mov    fs,edx
  410e09:	push   ss
  410e0a:	pop    ss
  410e0b:	retf   0x1c74
  410e0e:	pop    eax
  410e0f:	jne    0x410e20
  410e11:	sbb    bl,ch
  410e13:	or     ch,BYTE PTR [edx]
  410e15:	retf   
  410e16:	sti    
  410e17:	pusha  
  410e18:	cli    
  410e19:	js     0x410e0e
  410e1b:	adc    edi,DWORD PTR [esi]
  410e1d:	(bad)  
  410e1e:	mul    BYTE PTR [esp+edx*2+0x5e354633]
  410e25:	(bad)  [edi]
  410e27:	fs (bad) 
  410e29:	cld    
  410e2a:	outs   dx,BYTE PTR ds:[esi]
  410e2b:	in     al,dx
  410e2c:	stos   DWORD PTR es:[edi],eax
  410e2d:	pop    esp
  410e2e:	loop   0x410e81
  410e30:	js     0x410e49
  410e32:	jg     0x410e14
  410e34:	(bad)  
  410e35:	in     al,0xc6
  410e37:	dec    edx
  410e38:	iret   
  410e39:	popf   
  410e3a:	hlt    
  410e3b:	ret    0x9e26
  410e3e:	(bad)  
  410e3f:	in     al,0x48
  410e41:	icebp  
  410e42:	jnp    0x410e1a
  410e44:	pop    es
  410e45:	mov    es,WORD PTR [ebx]
  410e47:	idiv   ah
  410e49:	out    0x54,eax
  410e4b:	push   ds
  410e4c:	dec    edx
  410e4d:	mov    ebp,0xf7ac3e29
  410e52:	dec    esi
  410e53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e54:	pop    esi
  410e55:	mov    dh,0xfe
  410e57:	ins    DWORD PTR es:[edi],dx
  410e58:	cli    
  410e59:	pop    esp
  410e5a:	jno    0x410e34
  410e5c:	call   0x49aa35b
  410e61:	xor    ah,ch
  410e63:	jle    0x410e60
  410e65:	pop    esp
  410e66:	sar    DWORD PTR [edi+0x1f80fef0],1
  410e6c:	inc    eax
  410e6d:	add    ecx,DWORD PTR [ebp+0x3c0d4446]
  410e73:	xchg   edx,eax
  410e74:	shl    DWORD PTR [edx+0x59],0x12
  410e78:	push   cs
  410e79:	inc    edx
  410e7a:	scas   eax,DWORD PTR es:[edi]
  410e7b:	test   DWORD PTR [eax],ebp
  410e7d:	xchg   edx,eax
  410e7e:	push   ebp
  410e7f:	adc    edi,DWORD PTR [ebx-0x6c]
  410e82:	or     BYTE PTR [ecx],dh
  410e84:	xor    ebp,DWORD PTR [ebx-0x6517b0c]
  410e8a:	adc    al,0x78
  410e8c:	and    eax,0xe017e2b6
  410e91:	mov    ah,BYTE PTR [ebp+0xe542d8b]
  410e97:	nop
  410e98:	outs   dx,DWORD PTR ds:[esi]
  410e99:	fmul   DWORD PTR [ecx]
  410e9b:	outs   dx,DWORD PTR ds:[esi]
  410e9c:	hlt    
  410e9d:	imul   DWORD PTR [ebx]
  410e9f:	sub    eax,0x352c5bd6
  410ea4:	je     0x410f0b
  410ea6:	aaa    
  410ea7:	add    BYTE PTR [eax],0x4f
  410eaa:	dec    edx
  410eab:	icebp  
  410eac:	xorps  xmm2,XMMWORD PTR [ecx+0x42]
  410eb0:	aad    0x0
  410eb2:	cmp    cl,BYTE PTR [esi+0x73]
  410eb5:	cmp    DWORD PTR [eax+0x1],esi
  410eb8:	push   eax
  410eb9:	jno    0x410ea1
  410ebb:	or     DWORD PTR [ebp+0x36],0x6a8832c3
  410ec2:	mov    edx,0xa5a08792
  410ec7:	mov    ds:0xe1d1eff8,eax
  410ecc:	fisub  WORD PTR [ebp-0x387dc751]
  410ed2:	cmp    al,0xdc
  410ed4:	wbinvd 
  410ed6:	cmp    cl,dh
  410ed8:	cmp    ah,bl
  410eda:	adc    eax,0x76eb5a86
  410edf:	adc    al,0x5
  410ee1:	enter  0x486b,0x40
  410ee5:	or     BYTE PTR [esi+0x59],dl
  410ee8:	loop   0x410eba
  410eea:	pop    ecx
  410eeb:	jne    0x410efb
  410eed:	aas    
  410eee:	in     al,0x28
  410ef0:	aad    0x29
  410ef2:	xor    DWORD PTR [ebx-0x5],esi
  410ef5:	repz sbb ah,BYTE PTR [eax]
  410ef8:	repnz mov dh,0xcb
  410efb:	mov    dl,0xd5
  410efd:	mov    ds:0xd1ebfd41,eax
  410f02:	sbb    DWORD PTR [edx],esi
  410f04:	ret    
  410f05:	jp     0x410ed7
  410f07:	cld    
  410f08:	push   0x5de6bf61
  410f0d:	loope  0x410f32
  410f0f:	or     ch,bh
  410f11:	in     al,0xb2
  410f13:	push   ebx
  410f14:	mov    ecx,0xac408410
  410f19:	mov    ecx,0xfc097727
  410f1e:	xrelease xchg BYTE PTR [ecx+ebp*4-0x184500e6],bh
  410f26:	js     0x410efb
  410f28:	js     0x410f48
  410f2a:	xchg   esp,eax
  410f2b:	cmp    DWORD PTR [eax],ebx
  410f2d:	in     eax,dx
  410f2e:	mov    ebp,0xd198db90
  410f33:	sar    BYTE PTR [eax],cl
  410f35:	fisttp WORD PTR [edi+0x48]
  410f38:	xor    dl,BYTE PTR [edx]
  410f3a:	jmp    0x410ee1
  410f3c:	out    0x41,al
  410f3e:	xchg   edx,eax
  410f3f:	(bad)  
  410f41:	pop    es
  410f42:	adc    al,0x38
  410f44:	jne    0x410f14
  410f46:	jb     0x410edd
  410f48:	lock retf 0x4379
  410f4c:	jmp    0x51255780
  410f51:	jge    0x410f43
  410f53:	dec    ebp
  410f54:	jp     0x410edd
  410f56:	jb     0x410f1d
  410f58:	aaa    
  410f59:	xor    ebp,DWORD PTR [ecx]
  410f5b:	inc    ecx
  410f5c:	jne    0x410fac
  410f5e:	lock xor eax,0xd80d8dbd
  410f64:	in     al,0xe
  410f66:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f68:	aam    0xa9
  410f6a:	cmp    eax,DWORD PTR [esp+ecx*2]
  410f6d:	adc    esi,DWORD PTR [ecx+esi*1+0x45]
  410f71:	xor    ebx,edi
  410f73:	mov    eax,ds:0x64c4d973
  410f78:	(bad)  
  410f79:	pop    esp
  410f7a:	cmp    bl,BYTE PTR [ecx+0xd8e7bc3]
  410f80:	in     eax,0x3f
  410f82:	or     DWORD PTR [eax],0xcd0f4970
  410f88:	mov    bl,0x9f
  410f8a:	and    BYTE PTR [ebp-0x18],bl
  410f8d:	stos   BYTE PTR es:[edi],al
  410f8e:	cmp    eax,0x1aeba6e7
  410f93:	lods   eax,DWORD PTR ds:[esi]
  410f94:	retf   
  410f95:	jb     0x410f67
  410f97:	mov    edx,0x8e7084d2
  410f9c:	not    DWORD PTR ds:0x1cc98272
  410fa2:	or     DWORD PTR [edi-0x6b],eax
  410fa5:	out    dx,al
  410fa6:	and    dh,BYTE PTR [edx-0x68c2790d]
  410fac:	les    edi,FWORD PTR [ebx-0x29]
  410faf:	push   ebx
  410fb0:	dec    edi
  410fb1:	test   BYTE PTR [eax-0x783aab3e],dh
  410fb7:	fist   DWORD PTR [edx-0x63]
  410fba:	fcom   QWORD PTR [ecx+ecx*1]
  410fbd:	push   ebp
  410fbe:	pop    ebx
  410fbf:	pop    es
  410fc0:	ret    
  410fc1:	shl    BYTE PTR [ebx+0x16],1
  410fc4:	pop    esi
  410fc5:	or     cl,BYTE PTR [ebx*4-0x5e87ba78]
  410fcc:	sub    dh,bh
  410fce:	add    edx,edi
  410fd0:	jle    0x410fdb
  410fd2:	and    DWORD PTR [ecx-0x4beae25b],0x7358fe70
  410fdc:	and    esi,DWORD PTR [ebx]
  410fde:	inc    edx
  410fdf:	mov    BYTE PTR [ebx-0x3e],dh
  410fe2:	in     al,dx
  410fe3:	sbb    eax,0xc890ca3e
  410fe8:	jae    0x41104c
  410fea:	add    edi,ecx
  410fec:	mov    ebp,0xa5582e6d
  410ff1:	(bad)  
  410ff3:	sbb    ah,dh
  410ff5:	cwde   
  410ff6:	test   al,0x69
  410ff8:	inc    ebp
  410ff9:	mov    esi,eax
  410ffb:	jmp    0xbc56e53b
  411000:	imul   ecx,DWORD PTR [ebx],0x4276683e
  411006:	icebp  
  411007:	cld    
  411008:	mov    ds:0xbd1cd0f4,eax
  41100d:	push   0xff5bb830
  411012:	outs   dx,BYTE PTR ds:[esi]
  411013:	pop    ss
  411014:	jae    0x410fd2
  411016:	add    dh,dh
  411018:	xchg   DWORD PTR [ecx-0x4d],ebp
  41101b:	pop    es
  41101c:	and    al,0x2c
  41101e:	out    0x3a,eax
  411020:	outs   dx,DWORD PTR ds:[esi]
  411021:	mov    dl,0x3b
  411023:	fisub  DWORD PTR [edi+0x41bf5d42]
  411029:	or     esi,DWORD PTR [esp+eax*8+0x21]
  41102d:	mov    dl,0xd0
  41102f:	aam    0x86
  411031:	cdq    
  411032:	xchg   ebp,eax
  411033:	dec    ebx
  411034:	sbb    al,0x44
  411036:	xchg   ebp,eax
  411037:	clc    
  411038:	into   
  411039:	dec    edi
  41103a:	xchg   edx,eax
  41103b:	jecxz  0x411084
  41103d:	mov    ah,0xb9
  41103f:	fwait
  411040:	dec    edx
  411041:	and    eax,0xa686aac
  411046:	fdiv   QWORD PTR [esi-0x2b]
  411049:	rcl    BYTE PTR ds:0x17934830,cl
  41104f:	cmp    eax,0x50ec399a
  411054:	cdq    
  411055:	jecxz  0x411060
  411057:	cmp    dl,BYTE PTR [ecx-0x2e326b21]
  41105d:	lds    esi,FWORD PTR [ebp+0x2e8bca56]
  411063:	jnp    0x41105b
  411065:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411066:	mov    eax,0xd0320bde
  41106b:	jmp    0x8969:0xfa3216b7
  411072:	in     eax,dx
  411073:	add    al,0xe
  411075:	xor    al,0x6a
  411077:	add    eax,0xa084ea60
  41107c:	outs   dx,DWORD PTR ds:[esi]
  41107d:	ror    DWORD PTR [esi+0xfcfc94b],0xb
  411084:	mov    bh,0x4d
  411086:	mov    dh,0x16
  411088:	(bad)  
  411089:	fidivr WORD PTR [eax+0x75c91f6a]
  41108f:	sbb    eax,0x532199f9
  411094:	jecxz  0x4110b5
  411096:	dec    eax
  411097:	je     0x411092
  411099:	add    al,0xbb
  41109b:	rcl    BYTE PTR [ecx-0x6d],cl
  41109e:	cld    
  41109f:	xchg   ebp,eax
  4110a0:	scas   al,BYTE PTR es:[edi]
  4110a1:	mov    ebp,0x957c6383
  4110a6:	dec    esp
  4110a7:	lock ins DWORD PTR es:[edi],dx
  4110a9:	sub    BYTE PTR [ebx],bh
  4110ab:	jp     0x411096
  4110ad:	adc    DWORD PTR [esi+eiz*8+0x7d],0xc2f8b2ee
  4110b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110b6:	imul   esp,DWORD PTR [edi+0x16],0x85d8a03
  4110bd:	jo     0x41106a
  4110bf:	jge    0x4110d7
  4110c1:	ins    BYTE PTR es:[edi],dx
  4110c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110c3:	pusha  
  4110c4:	push   edi
  4110c5:	push   ebp
  4110c6:	fnstenv [edi+0x2a193bb3]
  4110cc:	push   0x5d
  4110ce:	xchg   ebp,eax
  4110cf:	enter  0x7107,0xf7
  4110d3:	push   esi
  4110d4:	and    al,0x79
  4110d6:	jmp    0x411087
  4110d8:	in     al,0x2a
  4110da:	dec    esp
  4110db:	add    dl,BYTE PTR [ebx+0x61d5c0f5]
  4110e1:	sbb    al,0x21
  4110e3:	inc    ebp
  4110e4:	dec    eax
  4110e5:	dec    ebp
  4110e6:	mov    ds:0xcfee370b,eax
  4110eb:	inc    ebp
  4110ec:	and    DWORD PTR [edi-0x785b79fd],ecx
  4110f2:	mov    ebx,0x1f4e3055
  4110f7:	int    0x58
  4110f9:	cmc    
  4110fa:	adc    bl,BYTE PTR [esi-0x11258e2d]
  411100:	das    
  411101:	cli    
  411102:	mov    dh,0xd4
  411104:	rol    BYTE PTR [ecx+ecx*2],1
  411107:	jnp    0x4110f8
  411109:	cmp    esp,DWORD PTR [ecx-0x11c35efd]
  41110f:	or     dl,dh
  411111:	pop    ecx
  411112:	pop    ebx
  411113:	adc    eax,0xdf3a7529
  411118:	sub    al,0xb9
  41111a:	xchg   DWORD PTR [edi-0x71ac4b9d],ebp
  411120:	inc    ebx
  411121:	mov    al,0x87
  411123:	in     eax,0x1b
  411125:	inc    ebp
  411126:	aad    0xcb
  411128:	in     eax,0xe3
  41112a:	xor    ebx,DWORD PTR [edi+0x4c2b050a]
  411130:	ret    
  411131:	out    0x4c,eax
  411133:	mov    eax,0x5979d5fb
  411138:	lods   al,BYTE PTR ds:[esi]
  411139:	xor    esp,DWORD PTR [ebx+ebx*4-0x44]
  41113d:	faddp  st(0),st
  41113f:	and    DWORD PTR [edi+0x5],eax
  411142:	add    eax,0x7bb20c59
  411147:	test   BYTE PTR [ebx+0x6a],dl
  41114a:	fdivr  QWORD PTR ds:0xdd71c9a5
  411150:	mov    BYTE PTR ss:[ebx+0xfeb2223],dh
  411157:	xchg   esi,eax
  411158:	pop    ss
  411159:	or     DWORD PTR [esi-0x10],eax
  41115c:	sbb    esp,DWORD PTR [edx]
  41115e:	sub    dh,BYTE PTR [ebx-0x27]
  411161:	sbb    DWORD PTR [ebp-0x4f],0xffffffe5
  411165:	cmp    eax,0xfaf6c906
  41116a:	jg     0x4111a2
  41116c:	popa   
  41116d:	daa    
  41116e:	test   BYTE PTR [ecx+eax*1-0x17030836],cl
  411175:	add    BYTE PTR [ebp+0x2025506a],0x88
  41117c:	(bad)  
  41117d:	loopne 0x4111fd
  41117f:	or     BYTE PTR [ebp-0x2a],cl
  411182:	mov    dh,0x57
  411184:	imul   ebp,ebx,0xfffffff9
  411187:	mov    al,ds:0xd062f9a8
  41118c:	adc    esi,ebx
  41118e:	das    
  41118f:	mov    BYTE PTR [eax+ecx*4],cl
  411192:	xor    edx,ebx
  411194:	pop    ss
  411195:	stos   BYTE PTR es:[edi],al
  411196:	test   BYTE PTR [esi+0x646c2943],dl
  41119c:	ins    DWORD PTR es:[edi],dx
  41119d:	lahf   
  41119e:	jae    0x4111f5
  4111a0:	add    ch,BYTE PTR [edi-0x30f09311]
  4111a6:	dec    esi
  4111a7:	mov    ah,al
  4111a9:	lock les edi,FWORD PTR [eax+0x25]
  4111ad:	adc    esp,esi
  4111af:	repz call 0xcf28387f
  4111b5:	cs dec edx
  4111b7:	sub    al,0xd4
  4111b9:	pop    ebx
  4111ba:	stc    
  4111bb:	jbe    0x411183
  4111bd:	jge    0x41114e
  4111bf:	sbb    ecx,edx
  4111c1:	in     eax,dx
  4111c2:	dec    esi
  4111c3:	jbe    0x4111ab
  4111c5:	aad    0x46
  4111c7:	ins    DWORD PTR es:[edi],dx
  4111c8:	enter  0x6d21,0x68
  4111cc:	cli    
  4111cd:	xchg   BYTE PTR [ecx+0x5209d49],dh
  4111d3:	pop    es
  4111d4:	mov    bh,0xf6
  4111d6:	call   0x565de3c7
  4111db:	lods   eax,DWORD PTR ds:[esi]
  4111dc:	inc    edi
  4111dd:	mov    edi,0x895641f1
  4111e2:	jl     0x411193
  4111e4:	fwait
  4111e5:	jecxz  0x4111fb
  4111e7:	ffreep st(5)
  4111e9:	out    0x7a,eax
  4111eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111ec:	push   ss
  4111ed:	sub    esi,ecx
  4111ef:	xlat   BYTE PTR ds:[ebx]
  4111f0:	mov    ch,BYTE PTR [esp+ebp*8+0x303f17ac]
  4111f7:	cwde   
  4111f8:	inc    ebp
  4111f9:	or     eax,0x1d0dc354
  4111fe:	pop    esp
  4111ff:	xor    eax,0xccdfe639
  411204:	mov    dl,0x4a
  411206:	xchg   esp,eax
  411207:	mov    ecx,0x6c591caa
  41120c:	mov    ds:0xe1e6771,eax
  411211:	jb     0x411284
  411213:	or     al,0x7f
  411215:	out    dx,al
  411216:	out    0x1e,al
  411218:	push   es
  411219:	dec    edi
  41121a:	xchg   ebx,eax
  41121b:	sub    BYTE PTR [ebp-0x5],ah
  41121e:	mov    dl,dh
  411220:	xor    edi,edi
  411222:	push   ss
  411223:	ins    BYTE PTR es:[edi],dx
  411224:	push   edx
  411225:	mov    es,WORD PTR [eax]
  411227:	xlat   BYTE PTR ds:[ebx]
  411228:	add    ebp,DWORD PTR [edi+0x9117be0]
  41122e:	int    0x2a
  411230:	sub    al,0xd0
  411232:	push   ebx
  411233:	xor    ebp,DWORD PTR [esi]
  411235:	jb     0x4112ac
  411237:	mov    eax,0x78a83c88
  41123c:	pop    esp
  41123d:	pushf  
  41123e:	mov    dl,cl
  411240:	adc    BYTE PTR [edi-0x45],ah
  411243:	adc    esi,DWORD PTR [esi-0x33]
  411246:	(bad)  
  411247:	frstpm(287 only) 
  411249:	in     eax,dx
  41124a:	mov    ah,0xff
  41124c:	(bad)  
  41124d:	fsubrp st(2),st
  41124f:	sub    al,0xd
  411251:	cld    
  411252:	push   edi
  411253:	push   cs
  411254:	mov    ds:0x862d07db,al
  411259:	jnp    0x4111dc
  41125b:	adc    al,0xc0
  41125d:	loope  0x4112b8
  41125f:	pop    ebx
  411260:	jns    0x41123c
  411262:	xor    ecx,DWORD PTR [eax-0x7c]
  411265:	and    edi,DWORD PTR [eax+0x5e39d687]
  41126b:	inc    edi
  41126c:	fs push ebp
  41126e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41126f:	iret   
  411270:	push   0xffffffab
  411272:	aad    0x29
  411274:	mov    dh,dh
  411276:	rcr    BYTE PTR [edx+0x2],1
  411279:	stos   DWORD PTR es:[edi],eax
  41127a:	retf   0xfc42
  41127d:	cmp    eax,0xd8ab987e
  411282:	lds    eax,FWORD PTR [edi]
  411284:	cmp    eax,0x44908dab
  411289:	jo     0x411235
  41128b:	push   edx
  41128c:	xchg   ebx,eax
  41128d:	push   ss
  41128e:	enter  0x8684,0xda
  411292:	nop
  411293:	jp     0x411241
  411295:	jns    0x411265
  411297:	std    
  411298:	es dec ebp
  41129a:	fnstcw WORD PTR [eax-0x72]
  41129d:	jl     0x411294
  41129f:	ret    0x3c01
  4112a2:	push   0xffffff9a
  4112a4:	mov    edx,cs
  4112a6:	pusha  
  4112a7:	jo     0x4112fa
  4112a9:	mov    DWORD PTR [ebp+0x50],eax
  4112ac:	sbb    al,0xef
  4112ae:	imul   ebx,DWORD PTR [eax],0x991d2a42
  4112b4:	bound  edi,QWORD PTR [ebx+0x564ef568]
  4112ba:	mov    dl,0xc
  4112bc:	cwde   
  4112bd:	lahf   
  4112be:	mov    ?,WORD PTR [ebx+eax*8-0x29]
  4112c2:	rol    esi,1
  4112c4:	add    BYTE PTR [edi-0x7d],dl
  4112c7:	pop    ecx
  4112c8:	lock stos DWORD PTR es:[edi],eax
  4112ca:	push   0x7f727b28
  4112cf:	sbb    al,0xe0
  4112d1:	jb     0x41133f
  4112d3:	mov    cl,0x3c
  4112d5:	adc    eax,0x53d0d4ec
  4112da:	shr    ebx,1
  4112dc:	cmp    ebp,esi
  4112de:	mov    eax,ds:0xdf536176
  4112e3:	or     BYTE PTR [ecx-0x6b],ch
  4112e6:	stc    
  4112e7:	jg     0x411322
  4112e9:	pop    es
  4112ea:	mov    ch,0x39
  4112ec:	jmpw   0xd881
  4112f0:	in     eax,dx
  4112f1:	call   0xa85c2329
  4112f6:	push   0xb04edac5
  4112fb:	call   0x9da5f1ea
  411300:	xchg   esp,eax
  411301:	dec    ecx
  411302:	scas   al,BYTE PTR es:[edi]
  411303:	adc    DWORD PTR [ebp+eiz*2+0x1d],0x27
  411308:	pop    ss
  411309:	cdq    
  41130a:	dec    BYTE PTR [edx+0x34435dc8]
  411310:	push   esp
  411311:	mov    ecx,0xce1c73c9
  411316:	mov    esi,0xfcf2f8a6
  41131b:	iret   
  41131c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41131d:	adc    eax,0xc47abf33
  411322:	in     al,dx
  411323:	jo     0x411329
  411325:	cld    
  411326:	adc    edx,DWORD PTR [ebp+0x4e3db9d8]
  41132c:	or     eax,0xae7f1bde
  411331:	mov    dh,0xc0
  411333:	cwde   
  411334:	pop    esp
  411335:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411336:	pop    ecx
  411337:	xor    BYTE PTR [ecx+0x30],al
  41133a:	inc    edi
  41133b:	jbe    0x4112f3
  41133d:	loopne 0x41135a
  41133f:	or     bh,BYTE PTR [ebp+0x16c2795]
  411345:	pop    ecx
  411346:	sub    al,0xc5
  411348:	mov    al,0xd3
  41134a:	(bad)  
  41134b:	into   
  41134c:	div    BYTE PTR [edi-0x4c]
  41134f:	mov    dh,0x2a
  411351:	fs pusha 
  411353:	adc    BYTE PTR [ebp+eiz*2+0x5f856f0f],dh
  41135a:	out    0x54,eax
  41135c:	fwait
  41135d:	jne    0x4113ce
  41135f:	sbb    eax,0x6ae6fe9e
  411364:	and    DWORD PTR [ebx-0x8aa87b1],ebp
  41136a:	pop    eax
  41136b:	fnstenv [edx]
  41136d:	xchg   edx,eax
  41136e:	sbb    eax,0x54ff1b55
  411373:	mov    bh,0xb3
  411375:	push   eax
  411376:	pop    ebp
  411377:	sti    
  411378:	inc    esi
  411379:	sbb    eax,DWORD PTR [ecx-0x7c4d350c]
  41137f:	xchg   edx,eax
  411380:	shl    BYTE PTR [edx],0x89
  411383:	mov    ah,0x75
  411385:	mov    esp,0xaccd09f7
  41138a:	ins    DWORD PTR es:[edi],dx
  41138b:	mul    BYTE PTR [ecx-0xb657538]
  411391:	das    
  411392:	mov    eax,ds:0xef96a21d
  411397:	mov    ebx,0xacecd251
  41139c:	xchg   DWORD PTR [esi+eax*4],ecx
  41139f:	push   ebx
  4113a0:	sbb    bl,BYTE PTR [eax]
  4113a2:	xor    bl,cl
  4113a4:	fdivr  QWORD PTR [ebx]
  4113a6:	in     eax,dx
  4113a7:	jmp    DWORD PTR [eax]
  4113a9:	pushf  
  4113aa:	mov    DWORD PTR [edx+0x46],esi
  4113ad:	xchg   ecx,eax
  4113ae:	rol    al,cl
  4113b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113b1:	cvtdq2ps xmm2,XMMWORD PTR [ebp+0x14]
  4113b5:	fwait
  4113b6:	gs das 
  4113b8:	daa    
  4113b9:	pop    edx
  4113ba:	mov    gs,WORD PTR [edi-0x20]
  4113bd:	sahf   
  4113be:	dec    eax
  4113bf:	dec    esp
  4113c0:	(bad)  
  4113c1:	lods   eax,DWORD PTR ds:[esi]
  4113c2:	add    al,BYTE PTR [edx-0x40]
  4113c5:	or     dh,BYTE PTR [eax+0x67]
  4113c8:	dec    edi
  4113c9:	sbb    bl,bh
  4113cb:	cld    
  4113cc:	aad    0xd1
  4113ce:	sub    BYTE PTR ds:0x1270b503,bh
  4113d4:	mov    BYTE PTR [ecx+ecx*1-0x5b64eec6],bl
  4113db:	cli    
  4113dc:	jmp    0x3b49:0xebfd6e82
  4113e3:	sbb    al,0x4a
  4113e5:	rcr    DWORD PTR [esi],1
  4113e7:	je     0x41140d
  4113e9:	fdiv   DWORD PTR [ebx-0x4d4d8f67]
  4113ef:	rcr    BYTE PTR [edx-0x333b9a3f],cl
  4113f5:	or     eax,0x743e90f1
  4113fa:	add    BYTE PTR [eax+0x18],dh
  4113fd:	adc    DWORD PTR [eax+edx*8],eax
  411400:	scas   al,BYTE PTR es:[edi]
  411401:	push   cs
  411402:	lds    esi,FWORD PTR [esi]
  411404:	add    DWORD PTR [ecx+eiz*4-0x7e],esp
  411408:	repz gs cmp eax,0x2fad1d22
  41140f:	push   esi
  411410:	or     DWORD PTR [ebp-0x3e7cb93b],esi
  411416:	jnp    0x4113c3
  411418:	out    dx,eax
  411419:	mov    dh,0x56
  41141b:	les    ebp,FWORD PTR [eax]
  41141d:	jmp    0xf32c:0x964f6e49
  411424:	mov    bh,BYTE PTR [ecx]
  411426:	out    0xef,eax
  411428:	push   cs
  411429:	or     edi,0x3cc0ef13
  41142f:	dec    edx
  411430:	sbb    ecx,ebp
  411432:	mov    dl,0xed
  411434:	pop    esp
  411435:	jns    0x411429
  411437:	aad    0xd2
  411439:	mov    edi,fs
  41143b:	stos   DWORD PTR es:[edi],eax
  41143c:	stc    
  41143d:	lods   eax,DWORD PTR ds:[esi]
  41143e:	jmp    DWORD PTR [ecx-0x4f]
  411441:	out    0x52,eax
  411443:	adc    DWORD PTR [ebx+0x168a3d4f],ebx
  411449:	or     bl,BYTE PTR [esi]
  41144b:	cmp    ebp,DWORD PTR [ecx]
  41144d:	xor    edx,DWORD PTR [edx]
  41144f:	test   al,0xf2
  411451:	lahf   
  411452:	pop    ss
  411453:	into   
  411454:	imul   edi,DWORD PTR [edx+0x6cb0a110],0x83d61bf0
  41145e:	cmp    DWORD PTR [ebx-0x7b],esi
  411461:	int3   
  411462:	add    eax,0xe1759c5c
  411467:	outs   dx,DWORD PTR ds:[esi]
  411468:	das    
  411469:	fbstp  TBYTE PTR [ebx]
  41146b:	push   ecx
  41146c:	jne    0x411431
  41146e:	sahf   
  41146f:	in     eax,dx
  411470:	pop    edi
  411471:	retf   0x93f6
  411474:	out    dx,al
  411475:	mov    edx,0x54f38255
  41147a:	jns    0x411401
  41147c:	mov    esi,0xabd89e52
  411481:	jb     0x411440
  411483:	pop    ebp
  411484:	imul   esp,esi,0xfffffff3
  411487:	fsubr  DWORD PTR [edx]
  411489:	xor    ecx,DWORD PTR [ebx+ecx*4]
  41148c:	cmp    ebx,DWORD PTR [edx+0x16]
  41148f:	stc    
  411490:	jnp    0x411424
  411492:	retf   0x6aa7
  411495:	xchg   DWORD PTR [ebp+ebp*1-0x45],ebp
  411499:	sbb    DWORD PTR [ebp+0x7696c903],ebx
  41149f:	aad    0xca
  4114a1:	sub    al,0xe3
  4114a3:	sbb    DWORD PTR [edi-0x57],esi
  4114a6:	stc    
  4114a7:	jmp    0x7219:0xc02aef2a
  4114ae:	xor    eax,0x72bf1ff6
  4114b3:	xchg   DWORD PTR es:[eax+0xde75fa4],edi
  4114ba:	push   ds
  4114bb:	mov    dh,0x4e
  4114bd:	xchg   ebp,eax
  4114be:	and    al,0x5c
  4114c0:	sbb    edx,DWORD PTR [eax-0x6d]
  4114c3:	xor    BYTE PTR [esp+eax*4+0xded9cef],al
  4114ca:	or     bh,0xdd
  4114cd:	pop    ss
  4114ce:	push   esi
  4114cf:	lahf   
  4114d0:	mov    WORD PTR [ebp+0x0],es
  4114d3:	pop    ebx
  4114d4:	add    al,0x7a
  4114d6:	ds ins DWORD PTR es:[edi],dx
  4114d8:	mov    bh,0xeb
  4114da:	mov    bh,0xff
  4114dc:	cld    
  4114dd:	jl     0x4114c9
  4114df:	pop    ecx
  4114e0:	mov    esp,0x2421195a
  4114e5:	pop    ebp
  4114e6:	pop    ds
  4114e7:	cmc    
  4114e8:	cld    
  4114e9:	pop    ss
  4114ea:	mov    cl,0xa6
  4114ec:	mov    dl,0xb6
  4114ee:	or     al,BYTE PTR [esi-0x5a]
  4114f1:	jle    0x411476
  4114f3:	xor    esp,DWORD PTR [eax+0x227dcf7a]
  4114f9:	stc    
  4114fa:	pop    ebp
  4114fb:	pusha  
  4114fc:	bound  edx,QWORD PTR ss:[ebx]
  4114ff:	ins    BYTE PTR es:[edi],dx
  411500:	mov    BYTE PTR [edi+0x62e57e59],ch
  411506:	out    dx,al
  411507:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411508:	adc    DWORD PTR [esi+0x78],edx
  41150b:	test   al,0x22
  41150d:	imul   edi,ebx,0x640eee57
  411513:	and    DWORD PTR [eax-0x244240e1],0xfffffff9
  41151a:	sbb    ebx,esp
  41151c:	mov    al,0xa7
  41151e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41151f:	or     eax,0xbdce0297
  411524:	cmp    DWORD PTR [edi-0x51d85ce1],ebp
  41152a:	jp     0x411502
  41152c:	shl    BYTE PTR [edi-0x676f7123],cl
  411532:	sub    BYTE PTR [esi+0x65ab9099],0x12
  411539:	add    eax,0x46e2b47b
  41153e:	imul   edx,DWORD PTR [ebx-0x45],0x5d
  411542:	lods   eax,DWORD PTR ds:[esi]
  411543:	push   eax
  411544:	xchg   BYTE PTR [esi],cl
  411546:	push   ss
  411547:	mov    ecx,0xa63c2f4c
  41154c:	out    0x0,eax
  41154e:	mov    ah,0x5f
  411550:	xchg   DWORD PTR [edi-0x10140936],ecx
  411556:	push   esi
  411557:	fsubr  QWORD PTR [edi-0x72]
  41155a:	gs dec eax
  41155c:	xchg   edx,edi
  41155e:	add    eax,0xe1ada1e
  411563:	push   ds
  411564:	daa    
  411565:	push   edx
  411566:	pop    edi
  411567:	fst    QWORD PTR [edx]
  411569:	stc    
  41156a:	mov    ebx,cr4
  41156d:	xor    bh,BYTE PTR [ecx+0x15]
  411570:	xor    al,0x63
  411572:	test   BYTE PTR [ecx+0xf],ch
  411575:	mov    eax,ds:0x894f5263
  41157a:	shr    BYTE PTR [esi-0x7a2657b4],1
  411580:	push   edx
  411581:	daa    
  411582:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411583:	rcl    bl,1
  411585:	inc    edx
  411586:	jmp    0x4f58:0x15e62516
  41158d:	cs add eax,0xbe9f5aa8
  411593:	mov    ?,edi
  411595:	stc    
  411596:	in     al,dx
  411597:	adc    al,0x39
  411599:	xor    al,0x98
  41159b:	push   ds
  41159c:	enter  0x1cd3,0x5b
  4115a0:	into   
  4115a1:	pop    eax
  4115a2:	cmp    DWORD PTR [ebx+eiz*4+0x61],ebx
  4115a6:	dec    DWORD PTR [eax+0x31961484]
  4115ac:	mov    dh,0xf9
  4115ae:	xchg   esi,eax
  4115af:	xchg   esi,eax
  4115b0:	fadd   QWORD PTR [eax]
  4115b2:	hlt    
  4115b3:	shl    edx,1
  4115b5:	push   ebx
  4115b6:	js     0x411635
  4115b8:	adc    BYTE PTR [esi],dl
  4115ba:	cdq    
  4115bb:	test   eax,0x26b9f901
  4115c0:	mov    ebx,0x14770bf6
  4115c5:	add    BYTE PTR ds:0x3517e1c8,0x8a
  4115cc:	and    BYTE PTR [edx],bl
  4115ce:	fild   QWORD PTR [ebp-0x29]
  4115d1:	adc    ebp,esi
  4115d3:	adc    al,0x3b
  4115d5:	loopne 0x411653
  4115d7:	fdiv   QWORD PTR [ebx-0x9a879a8]
  4115dd:	retf   
  4115de:	xlat   BYTE PTR ds:[ebx]
  4115df:	loopne 0x41164d
  4115e1:	push   es
  4115e2:	outs   dx,BYTE PTR ds:[esi]
  4115e3:	icebp  
  4115e4:	xor    ebp,DWORD PTR [eax+ebx*4-0x39]
  4115e8:	dec    eax
  4115e9:	out    dx,eax
  4115ea:	cdq    
  4115eb:	jmp    0xe359:0x49f7063c
  4115f2:	pop    edx
  4115f3:	sar    BYTE PTR ds:0xe262b28c,cl
  4115f9:	pop    edx
  4115fa:	popa   
  4115fb:	push   esi
  4115fc:	imul   ecx,DWORD PTR [edx],0x4a
  4115ff:	(bad)  
  411600:	push   ecx
  411601:	add    dh,cl
  411603:	mov    bl,0x87
  411605:	jecxz  0x411658
  411607:	mov    ds:0x4632444b,eax
  41160c:	jle    0x411616
  41160e:	(bad)  
  41160f:	js     0x41164f
  411611:	sub    edi,DWORD PTR [edi]
  411613:	mov    al,0xdd
  411615:	dec    edx
  411616:	loopne 0x4115da
  411618:	dec    edx
  411619:	dec    ebp
  41161a:	xchg   ebx,eax
  41161b:	xor    eax,0x7101cf7e
  411620:	jo     0x41164a
  411622:	iret   
  411623:	jl     0x411646
  411625:	cdq    
  411626:	xor    bh,bl
  411628:	jnp    0x4115c7
  41162a:	call   0xe347:0xa9bc840c
  411631:	pop    eax
  411632:	mov    ?,WORD PTR [ecx+0x7ad19a5a]
  411638:	dec    edi
  411639:	xchg   ebp,eax
  41163a:	(bad)  
  41163b:	adc    al,0xee
  41163d:	add    DWORD PTR [eax+edi*1-0x7b771697],ecx
  411644:	fsubrp st(2),st
  411646:	jo     0x4116c6
  411648:	repz add dl,BYTE PTR [ebp+0x7d]
  41164c:	js     0x41165f
  41164e:	sub    bh,dl
  411650:	mov    ds:0xf1b2ee7b,eax
  411655:	jns    0x4116b5
  411657:	test   eax,0x8d0a65af
  41165c:	xchg   edx,eax
  41165d:	push   eax
  41165e:	mov    edi,0xf33db2b
  411663:	ret    
  411664:	ret    
  411665:	(bad)  
  411666:	fdivrp st(2),st
  411668:	cmp    BYTE PTR [edx],dl
  41166a:	test   DWORD PTR [edx],edx
  41166c:	ja     0x411671
  41166e:	xchg   ecx,eax
  41166f:	cmp    ebp,DWORD PTR [ecx-0x363368ba]
  411675:	push   es
  411676:	mov    dh,0x1c
  411678:	test   ecx,ebp
  41167a:	add    cl,cl
  41167c:	push   0x2f
  41167e:	mov    dl,0x71
  411680:	rol    BYTE PTR [esi-0x2],1
  411683:	(bad)  
  411684:	aam    0xec
  411686:	js     0x411649
  411688:	mov    ch,0x85
  41168a:	dec    esp
  41168b:	shr    DWORD PTR [ebx+edx*2-0x3f],0x56
  411690:	fadd   DWORD PTR [ecx-0x24633647]
  411696:	int3   
  411697:	jp     0x41170b
  411699:	les    esp,FWORD PTR [eax+0x22]
  41169c:	xor    eax,edx
  41169e:	mov    ebp,DWORD PTR [ebx-0x27]
  4116a1:	add    al,0x1d
  4116a3:	sahf   
  4116a4:	fsubr  DWORD PTR [eax+ebx*2+0x7f]
  4116a8:	fistp  DWORD PTR [edi-0x58]
  4116ab:	cwde   
  4116ac:	enter  0x5e41,0x97
  4116b0:	mov    esi,0x71ece230
  4116b5:	push   ebx
  4116b6:	dec    edx
  4116b7:	(bad)  
  4116b8:	adc    BYTE PTR [edi],dl
  4116ba:	jnp    0x411646
  4116bc:	jp     0x4116b7
  4116be:	daa    
  4116bf:	mov    bh,0x73
  4116c1:	in     eax,dx
  4116c2:	stos   DWORD PTR es:[edi],eax
  4116c3:	inc    edx
  4116c4:	repnz lds ecx,FWORD PTR [esi+ebx*1+0x24]
  4116c9:	sub    BYTE PTR [ebp-0x1],bh
  4116cc:	sbb    dl,dh
  4116ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116cf:	mov    ah,0xaf
  4116d1:	adc    al,0x10
  4116d3:	call   0xc994:0xf169d57
  4116da:	push   DWORD PTR [ecx-0x4]
  4116dd:	xchg   BYTE PTR [esi+0x39],bl
  4116e0:	sahf   
  4116e1:	ins    DWORD PTR es:[edi],dx
  4116e2:	ret    0x28db
  4116e5:	sub    al,0xe1
  4116e7:	and    BYTE PTR [edi+0x0],al
  4116ea:	mov    ds:0xa2e5ce98,eax
  4116ef:	mov    ebx,0x96e9345d
  4116f4:	pushf  
  4116f5:	sub    ebx,DWORD PTR [edx]
  4116f7:	cmp    eax,0x37e6a4ac
  4116fc:	sbb    ch,BYTE PTR [ebx+0x27]
  4116ff:	call   0x443f:0x20cc7375
  411706:	jae    0x41168a
  411708:	aad    0xa9
  41170a:	call   0x13120429
  41170f:	addr16 sbb eax,0x359a9de2
  411715:	mov    eax,0xa1954acf
  41171a:	or     al,0x32
  41171c:	in     al,dx
  41171d:	jl     0x411721
  41171f:	mov    ebp,0xeeb5fa6d
  411724:	mov    ch,0x4
  411726:	mov    DWORD PTR [esi+0x13c05b77],esi
  41172c:	lahf   
  41172d:	sbb    DWORD PTR [eax+esi*2-0x151cbcc0],eax
  411734:	aam    0xf2
  411736:	jecxz  0x411748
  411738:	pop    ds
  411739:	ins    DWORD PTR es:[edi],dx
  41173a:	push   esi
  41173b:	add    eax,0x6463d9b4
  411740:	lds    esi,FWORD PTR [eax-0x3d442924]
  411746:	ret    
  411747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411748:	push   ss
  411749:	jge    0x411762
  41174b:	mov    cl,0xe
  41174d:	mov    ebp,0x92602cd8
  411752:	and    BYTE PTR [ecx-0x7f],0x5a
  411756:	outs   dx,BYTE PTR ds:[esi]
  411757:	adc    esi,esp
  411759:	inc    ebp
  41175a:	out    dx,eax
  41175b:	sbb    BYTE PTR [edx],ah
  41175d:	nop
  41175e:	or     BYTE PTR [edi+0xd],bl
  411761:	cmc    
  411762:	mov    bl,0x4f
  411764:	xor    ebp,DWORD PTR [ebx]
  411766:	mov    eax,esi
  411768:	xor    BYTE PTR [edx+0x79],ah
  41176b:	cld    
  41176c:	scas   eax,DWORD PTR es:[edi]
  41176d:	stos   BYTE PTR es:[edi],al
  41176e:	pop    edi
  41176f:	popf   
  411770:	das    
  411771:	test   BYTE PTR [ecx],cl
  411773:	std    
  411774:	jp     0x411797
  411776:	xchg   edi,eax
  411777:	out    dx,al
  411778:	dec    edx
  411779:	mov    dh,0x27
  41177b:	outs   dx,BYTE PTR ds:[esi]
  41177c:	into   
  41177d:	pop    es
  41177e:	push   ebp
  41177f:	and    bh,al
  411781:	and    BYTE PTR [edx+0x41b2a838],ch
  411787:	arpl   WORD PTR [edx-0x4f],di
  41178a:	test   eax,0x31ef61d3
  41178f:	xor    eax,DWORD PTR [edx]
  411791:	or     al,0xe2
  411793:	cwde   
  411794:	cmp    DWORD PTR [edi],ebx
  411796:	lahf   
  411797:	pop    edi
  411798:	push   esp
  411799:	outs   dx,BYTE PTR ds:[esi]
  41179a:	out    0x2b,al
  41179c:	jmp    0x4117ed
  41179e:	or     BYTE PTR [esi-0x78],al
  4117a1:	iret   
  4117a2:	inc    ebp
  4117a3:	mov    esp,0xd82ac450
  4117a8:	shl    DWORD PTR [eax-0x36],cl
  4117ab:	std    
  4117ac:	ss test dh,0x4
  4117b0:	popa   
  4117b1:	cwde   
  4117b2:	jl     0x41181d
  4117b4:	fsub   st(0),st
  4117b6:	push   ds
  4117b7:	pusha  
  4117b8:	call   0xeb85cae8
  4117bd:	mov    al,0x8f
  4117bf:	cwde   
  4117c0:	mov    WORD PTR [eax],?
  4117c2:	lock mov cl,0xc3
  4117c5:	xor    al,0x25
  4117c7:	adc    al,al
  4117c9:	fcmovnb st,st(7)
  4117cb:	aad    0xad
  4117cd:	cwde   
  4117ce:	push   es
  4117cf:	push   0x4e35f211
  4117d4:	popf   
  4117d5:	outs   dx,BYTE PTR ds:[esi]
  4117d6:	push   0x37
  4117d8:	pop    ebx
  4117d9:	inc    esi
  4117da:	rol    DWORD PTR [eax-0x2b88e707],1
  4117e0:	outs   dx,DWORD PTR ds:[esi]
  4117e1:	les    ebp,FWORD PTR [ebx-0xa]
  4117e4:	call   0xc5af8763
  4117e9:	sub    DWORD PTR [ebx+esi*8],edx
  4117ec:	mov    es,WORD PTR [esi]
  4117ee:	mov    dl,0x2d
  4117f0:	ds and edi,eax
  4117f3:	in     eax,dx
  4117f4:	jp     0x4117ab
  4117f6:	cmp    BYTE PTR [esi+eax*8-0x5f921459],bh
  4117fd:	mov    dh,0xb4
  4117ff:	mov    al,ds:0x6633a966
  411804:	iret   
  411805:	xchg   ebx,eax
  411806:	stos   DWORD PTR es:[edi],eax
  411807:	loope  0x4117af
  411809:	mov    ch,BYTE PTR [edi]
  41180b:	or     edx,DWORD PTR [esi+0x7d]
  41180e:	(bad)  
  41180f:	xchg   edx,eax
  411810:	into   
  411811:	stos   DWORD PTR es:[edi],eax
  411812:	cmc    
  411813:	adc    eax,0x9d462551
  411818:	mov    ebp,0x78d7b794
  41181d:	adc    ch,BYTE PTR [edx+0x78708113]
  411823:	ins    DWORD PTR es:[edi],dx
  411824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411825:	sbb    al,ah
  411827:	mov    al,ds:0x6b2656d9
  41182c:	shr    DWORD PTR [eax-0x7c],1
  41182f:	fwait
  411830:	mov    BYTE PTR [edi-0x7d224dd0],cl
  411836:	stos   BYTE PTR es:[edi],al
  411837:	mov    al,ds:0x79680690
  41183c:	call   DWORD PTR [edx-0x53]
  41183f:	mov    ?,WORD PTR [edi+eiz*8+0x1525bbe]
  411846:	cmp    al,dh
  411848:	sbb    DWORD PTR [edx-0x15],eax
  41184b:	loope  0x4118b1
  41184d:	push   0x8dec7ee8
  411852:	push   ss
  411853:	scas   eax,DWORD PTR es:[edi]
  411854:	mov    ch,0xfc
  411856:	fst    DWORD PTR [edx-0xa21a2be]
  41185c:	ss sahf 
  41185e:	test   BYTE PTR [esi-0x66],0x95
  411862:	push   ds
  411863:	in     al,0x9c
  411865:	cmp    eax,0xba94a953
  41186a:	inc    esi
  41186b:	sti    
  41186c:	jns    0x411859
  41186e:	push   0xffffffc3
  411870:	sbb    BYTE PTR [eax+0x49],bl
  411873:	mov    ds:0xb14505a3,al
  411878:	jnp    0x41189f
  41187a:	pop    eax
  41187b:	div    BYTE PTR [ebx-0x41e4f6bb]
  411881:	mov    eax,0xdb33d5e7
  411886:	mov    ecx,0x99960a90
  41188b:	mov    es,WORD PTR [eax-0x13]
  41188e:	and    al,0x7c
  411890:	std    
  411891:	ror    BYTE PTR [edx],0xc5
  411894:	mov    edx,0x7512dff6
  411899:	dec    ecx
  41189a:	(bad)  
  41189b:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41189d:	or     DWORD PTR [edi],0x7f
  4118a0:	in     al,0x56
  4118a2:	fwait
  4118a3:	dec    ecx
  4118a4:	je     0x411857
  4118a6:	or     BYTE PTR [edi+ebx*8],dh
  4118a9:	ficomp DWORD PTR [ebx]
  4118ab:	push   esp
  4118ac:	aas    
  4118ad:	dec    ebx
  4118ae:	push   ebp
  4118af:	outs   dx,BYTE PTR ds:[esi]
  4118b0:	loopne 0x41187d
  4118b2:	jb     0x41190b
  4118b4:	sti    
  4118b5:	ss add al,0x5b
  4118b8:	jno    0x41191e
  4118ba:	aad    0xb4
  4118bc:	lods   al,BYTE PTR ds:[esi]
  4118bd:	aas    
  4118be:	xlat   BYTE PTR ds:[ebx]
  4118bf:	xor    ch,BYTE PTR [esi-0x1a]
  4118c2:	arpl   bp,bx
  4118c4:	mov    ch,0xb1
  4118c6:	cli    
  4118c7:	enter  0xca72,0xd3
  4118cb:	ins    BYTE PTR es:[edi],dx
  4118cc:	add    al,0x5
  4118ce:	out    0x81,eax
  4118d0:	mov    ebx,ecx
  4118d2:	vrsqrtss xmm5,xmm3,DWORD PTR [eax+esi*1]
  4118d7:	inc    ebp
  4118d8:	mov    ch,0x64
  4118da:	sbb    ecx,edx
  4118dc:	je     0x41189d
  4118de:	and    al,0x72
  4118e0:	add    eax,DWORD PTR ds:0x2aa8e69b
  4118e6:	addr16 (bad) 
  4118e8:	cld    
  4118e9:	jl     0x4118bd
  4118eb:	test   al,0xda
  4118ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118ee:	enter  0xd021,0xb1
  4118f2:	xor    al,0xce
  4118f4:	mov    al,0x71
  4118f6:	xchg   edx,eax
  4118f7:	xchg   ebx,eax
  4118f8:	mov    ecx,DWORD PTR [ecx-0x43]
  4118fb:	fist   WORD PTR [edi+0x24539a73]
  411901:	div    bl
  411903:	fwait
  411904:	dec    ebp
  411905:	(bad)
  411909:	pop    ecx
  41190a:	push   es
  41190b:	add    eax,0x2cb8e259
  411910:	not    DWORD PTR [esi-0x3fe55400]
  411916:	es lock jecxz 0x411957
  41191a:	lea    edi,[esi-0x7f48a3ec]
  411920:	into   
  411921:	mov    al,0x28
  411923:	mov    ds,esp
  411925:	jnp    0x411925
  411927:	inc    ebp
  411928:	dec    eax
  411929:	dec    edx
  41192a:	sar    DWORD PTR [esi-0x2d],0xdc
  41192e:	stc    
  41192f:	push   ss
  411930:	xor    BYTE PTR [ebp+0x5f580571],bl
  411936:	jnp    0x4118d3
  411938:	cmp    al,0xf4
  41193a:	pop    ecx
  41193b:	jge    0x4118c2
  41193d:	lock jnp 0x411973
  411940:	xlat   BYTE PTR ds:[ebx]
  411941:	in     al,dx
  411942:	je     0x411921
  411944:	bound  eax,QWORD PTR [edi+0x22]
  411947:	xchg   edi,eax
  411948:	sbb    eax,0x3ebd1540
  41194d:	xchg   ebp,eax
  41194e:	jp     0x411968
  411950:	sub    DWORD PTR [esi-0x53],eax
  411953:	imul   edi,DWORD PTR [ebp-0x4978020d],0xffffffa5
  41195a:	mov    esp,0xb1fe55cd
  41195f:	jge    0x41192c
  411961:	sbb    DWORD PTR [ebp-0x31],0xad3dce7e
  411968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411969:	sahf   
  41196a:	push   ebp
  41196b:	das    
  41196c:	retf   
  41196d:	hlt    
  41196e:	out    0xd8,al
  411970:	xchg   ebx,edx
  411972:	mov    bl,0xfb
  411974:	inc    ecx
  411975:	sti    
  411976:	in     eax,0xcc
  411978:	sub    eax,0xf82163d7
  41197d:	adc    BYTE PTR [ebx-0x33],ch
  411980:	and    BYTE PTR [edx-0x69],bh
  411983:	mov    ds:0xb81bb28a,al
  411988:	mov    esi,DWORD PTR [ecx]
  41198a:	mov    ebx,0xe729951b
  41198f:	ror    DWORD PTR [edi],1
  411991:	stc    
  411992:	into   
  411993:	jp     0x4119bb
  411995:	out    0xcb,eax
  411997:	mov    ah,0xd4
  411999:	mov    dh,0x3a
  41199b:	jb     0x411932
  41199d:	cmp    eax,0xb46898ed
  4119a2:	outs   dx,BYTE PTR ds:[esi]
  4119a3:	fdivr  DWORD PTR [edi]
  4119a5:	mov    ebp,0xce34e0aa
  4119aa:	or     DWORD PTR [esi+0x18cf53d2],0xffffffd2
  4119b1:	rol    DWORD PTR [edx+0x51a37712],1
  4119b7:	mov    eax,ds:0xb148bed3
  4119bc:	fcomip st,st(4)
  4119be:	std    
  4119bf:	les    esp,FWORD PTR [edx]
  4119c1:	xor    DWORD PTR [esi],esi
  4119c3:	cs xchg esi,eax
  4119c5:	loope  0x4119cb
  4119c7:	and    ah,ah
  4119c9:	ss jg  0x411a11
  4119cc:	sub    ah,ah
  4119ce:	scas   eax,DWORD PTR es:[edi]
  4119cf:	ret    0x2444
  4119d2:	mov    ecx,0xbbf6d770
  4119d7:	cvtps2pi mm5,xmm5
  4119da:	aaa    
  4119db:	mov    bh,0x82
  4119de:	aam    0xcd
  4119e0:	push   ss
  4119e1:	sti    
  4119e2:	punpcklbw mm5,mm2
  4119e5:	aam    0xb1
  4119e7:	or     al,0x11
  4119e9:	and    al,0xeb
  4119eb:	xchg   BYTE PTR [ebp-0x17f110a6],al
  4119f1:	jnp    0x41198b
  4119f3:	xor    ebp,eax
  4119f5:	add    al,0xd1
  4119f7:	cmp    DWORD PTR [ebx],esp
  4119f9:	push   esp
  4119fa:	xlat   BYTE PTR ds:[ebx]
  4119fb:	sbb    BYTE PTR [esi+0x37],cl
  4119fe:	xchg   esp,eax
  4119ff:	jnp    0x411a46
  411a01:	repz xor edx,DWORD PTR [ecx]
  411a04:	mov    esp,0x5f2aaf4
  411a09:	mov    edx,DWORD PTR [ebp+0x8]
  411a0c:	mov    ebx,DWORD PTR [ebp-0x58]
  411a0f:	add    edx,0x5708f8
  411a15:	imul   edx,ebx
  411a18:	mov    DWORD PTR [ebp-0x58],edx
  411a1b:	mov    edx,DWORD PTR [ebp+0x8]
  411a1e:	mov    ebx,DWORD PTR [ebp-0x54]
  411a21:	add    edx,0x64f8da
  411a27:	or     edx,ebx
  411a29:	mov    DWORD PTR [ebp-0x54],edx
  411a2c:	mov    edx,DWORD PTR [ebp+0x8]
  411a2f:	mov    ebx,DWORD PTR [ebp-0x50]
  411a32:	add    edx,ecx
  411a34:	xor    edx,ebx
  411a36:	mov    DWORD PTR [ebp-0x50],edx
  411a39:	mov    edx,DWORD PTR [ebp+0x8]
  411a3c:	mov    ebx,DWORD PTR [ebp-0x4c]
  411a3f:	add    edx,edi
  411a41:	and    edx,ebx
  411a43:	mov    DWORD PTR [ebp-0x4c],edx
  411a46:	mov    edx,DWORD PTR [ebp+0x8]
  411a49:	mov    ebx,DWORD PTR [ebp-0x48]
  411a4c:	lea    edx,[ebx+edx*1+0x241fc1f]
  411a53:	mov    DWORD PTR [ebp-0x48],edx
  411a56:	mov    edx,DWORD PTR [ebp+0x8]
  411a59:	mov    ebx,0xfa5e15e2
  411a5e:	sub    ebx,edx
  411a60:	add    ebx,DWORD PTR [ebp-0x44]
  411a63:	mov    DWORD PTR [ebp-0x44],ebx
  411a66:	mov    edx,DWORD PTR [ebp+0x8]
  411a69:	xor    edx,eax
  411a6b:	add    edx,esi
  411a6d:	jne    0x40f670
  411a73:	mov    edx,DWORD PTR [ebp-0xc]
  411a76:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  411a7d:	mov    bl,BYTE PTR [ebp-0x1]
  411a80:	cmp    dl,bl
  411a82:	je     0x413ee6
  411a88:	mov    ecx,DWORD PTR [ebp-0x5c]
  411a8b:	mov    edx,DWORD PTR [ebp-0xc]
  411a8e:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  411a95:	mov    ebx,DWORD PTR [ebp+0xc]
  411a98:	xor    ecx,eax
  411a9a:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e0]
  411aa1:	jne    0x418726
  411aa7:	mov    ecx,DWORD PTR [ebp-0x5c]
  411aaa:	mov    edx,DWORD PTR [ebp+0xc]
  411aad:	xor    ecx,eax
  411aaf:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e0]
  411ab7:	mov    edx,DWORD PTR [ebp-0x18]
  411aba:	xor    edx,eax
  411abc:	add    edx,esi
  411abe:	cmp    ecx,edx
  411ac0:	mov    ecx,DWORD PTR [ebp-0x14]
  411ac3:	mov    DWORD PTR [ebp+0x8],ecx
  411ac6:	mov    ecx,DWORD PTR [ebp+0x8]
  411ac9:	je     0x41abb4
  411acf:	xor    ecx,eax
  411ad1:	add    ecx,esi
  411ad3:	mov    ecx,0x242ebed
  411ad8:	je     0x4162f4
  411ade:	mov    edx,DWORD PTR [ebp+0x8]
  411ae1:	mov    ebx,DWORD PTR [ebp-0x8]
  411ae4:	xor    edx,eax
  411ae6:	xor    ebx,eax
  411ae8:	sub    edx,ebx
  411aea:	sub    edx,esi
  411aec:	xor    edx,eax
  411aee:	mov    DWORD PTR [ebp+0x8],edx
  411af1:	mov    edx,DWORD PTR [ebp+0x8]
  411af4:	mov    ebx,DWORD PTR [ebp-0x58]
  411af7:	add    edx,0x5708f8
  411afd:	imul   edx,ebx
  411b00:	mov    DWORD PTR [ebp-0x58],edx
  411b03:	mov    edx,DWORD PTR [ebp+0x8]
  411b06:	mov    ebx,DWORD PTR [ebp-0x54]
  411b09:	add    edx,0x64f8da
  411b0f:	or     edx,ebx
  411b11:	mov    DWORD PTR [ebp-0x54],edx
  411b14:	mov    edx,DWORD PTR [ebp+0x8]
  411b17:	mov    ebx,DWORD PTR [ebp-0x50]
  411b1a:	add    edx,ecx
  411b1c:	xor    edx,ebx
  411b1e:	mov    DWORD PTR [ebp-0x50],edx
  411b21:	mov    edx,DWORD PTR [ebp+0x8]
  411b24:	mov    ebx,DWORD PTR [ebp-0x4c]
  411b27:	add    edx,edi
  411b29:	and    edx,ebx
  411b2b:	mov    DWORD PTR [ebp-0x4c],edx
  411b2e:	mov    edx,DWORD PTR [ebp+0x8]
  411b31:	mov    ebx,DWORD PTR [ebp-0x48]
  411b34:	lea    edx,[ebx+edx*1+0x241fc1f]
  411b3b:	mov    DWORD PTR [ebp-0x48],edx
  411b3e:	mov    edx,DWORD PTR [ebp+0x8]
  411b41:	mov    ebx,0xfa5e15e2
  411b46:	sub    ebx,edx
  411b48:	add    ebx,DWORD PTR [ebp-0x44]
  411b4b:	mov    DWORD PTR [ebp-0x44],ebx
  411b4e:	mov    edx,DWORD PTR [ebp+0x8]
  411b51:	xor    edx,eax
  411b53:	add    edx,esi
  411b55:	jne    0x411ade
  411b5b:	jmp    0x4162f4
  411b60:	jmp    0x413ee6
  411b65:	out    0x82,al
  411b67:	push   es
  411b68:	and    eax,0x81c5a506
  411b6d:	outs   dx,BYTE PTR ds:[esi]
  411b6e:	fs sub eax,0x5b49a7ed
  411b74:	ds cs scas al,BYTE PTR es:[edi]
  411b77:	jp     0x411bf3
  411b79:	add    DWORD PTR [edi+0x7a],ebx
  411b7c:	jp     0x411b78
  411b7e:	mov    eax,0xbec4a8b2
  411b83:	fadd   st,st(5)
  411b85:	and    eax,esi
  411b87:	cli    
  411b88:	push   cs
  411b89:	push   esp
  411b8a:	scas   eax,DWORD PTR es:[edi]
  411b8b:	retf   0x90f0
  411b8e:	cmc    
  411b8f:	or     eax,0x5cbc1bd9
  411b94:	add    eax,0x9f6da9ce
  411b99:	push   ss
  411b9a:	mov    al,0x73
  411b9c:	fs stc 
  411b9e:	inc    ebx
  411b9f:	fcom   DWORD PTR [esp+esi*2-0x214ff882]
  411ba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ba7:	dec    ebx
  411ba8:	fstp   DWORD PTR [ebp+esi*2-0x44a4e39a]
  411baf:	das    
  411bb0:	push   esi
  411bb1:	ds jb  0x411b95
  411bb4:	pop    esi
  411bb5:	repz add cl,BYTE PTR [ebx+ecx*4-0xe5756b2]
  411bbd:	pop    ss
  411bbe:	and    DWORD PTR [eax-0x564f12a],ebp
  411bc4:	push   0x85c10540
  411bc9:	jbe    0x411bc0
  411bcb:	add    BYTE PTR [ecx+0x77d042c4],0x81
  411bd2:	xchg   esi,eax
  411bd3:	jle    0x411bda
  411bd5:	clc    
  411bd6:	fwait
  411bd7:	jmp    0x8da0c46b
  411bdc:	adc    bl,BYTE PTR [edi]
  411bde:	xchg   ebx,eax
  411bdf:	test   al,0x41
  411be1:	add    BYTE PTR [edi],bh
  411be3:	pop    esp
  411be4:	xchg   BYTE PTR [esi+0x637bf84f],ch
  411bea:	and    DWORD PTR [esi],esp
  411bec:	push   ecx
  411bed:	pop    esp
  411bee:	sahf   
  411bef:	or     bl,0x49
  411bf2:	sub    DWORD PTR [edi+0x8],0x6
  411bf6:	sahf   
  411bf7:	rol    eax,cl
  411bf9:	ins    DWORD PTR es:[edi],dx
  411bfa:	pusha  
  411bfb:	repnz sub al,0x11
  411bfe:	fwait
  411bff:	out    dx,eax
  411c00:	pop    ebp
  411c01:	sub    dh,BYTE PTR [ebp+eiz*2+0x4a]
  411c05:	in     eax,dx
  411c06:	ret    
  411c07:	push   cs
  411c08:	sbb    al,0x5
  411c0a:	aam    0xf3
  411c0c:	jb     0x411bbe
  411c0e:	ret    0x2b9b
  411c11:	inc    ebx
  411c12:	outs   dx,DWORD PTR ds:[esi]
  411c13:	cmp    al,0x6f
  411c15:	test   BYTE PTR [ebp+0x38],dl
  411c18:	mov    ebx,edi
  411c1a:	mov    esi,0x6498ae5f
  411c1f:	ins    BYTE PTR es:[edi],dx
  411c20:	xor    BYTE PTR [eax-0x39],dh
  411c23:	ins    BYTE PTR es:[edi],dx
  411c24:	ins    DWORD PTR es:[edi],dx
  411c25:	jnp    0x411c6f
  411c27:	xor    ebx,DWORD PTR [eax]
  411c29:	xchg   edi,eax
  411c2a:	in     eax,dx
  411c2b:	jg     0x411bd0
  411c2d:	xchg   BYTE PTR [di+0x79],ch
  411c31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c32:	push   ebx
  411c33:	in     eax,dx
  411c34:	and    al,0x5
  411c36:	pusha  
  411c37:	push   0x46
  411c39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c3a:	xchg   ebx,eax
  411c3b:	inc    eax
  411c3c:	inc    esi
  411c3d:	mov    ch,0x26
  411c3f:	push   ebx
  411c40:	mov    ah,0xe5
  411c42:	je     0x411bf7
  411c44:	xchg   dl,bl
  411c46:	mov    dh,BYTE PTR [ebx]
  411c48:	adc    al,0xca
  411c4a:	cli    
  411c4b:	push   0x2
  411c4d:	push   edx
  411c4e:	inc    edi
  411c4f:	into   
  411c50:	xor    al,0x85
  411c52:	xchg   edi,eax
  411c53:	push   edi
  411c54:	out    dx,eax
  411c55:	inc    eax
  411c56:	pop    ds
  411c57:	push   ecx
  411c58:	idiv   BYTE PTR [ebx+eax*8+0x6a8f08f7]
  411c5f:	add    bl,BYTE PTR [esi]
  411c61:	jmp    0x84fbb1b1
  411c66:	fisttp QWORD PTR [ebp+eiz*4+0x3dfe9b24]
  411c6d:	std    
  411c6e:	aam    0x55
  411c70:	xor    DWORD PTR [ecx+0x754261db],0xc7d1bcc0
  411c7a:	add    edx,edx
  411c7c:	mov    BYTE PTR [esi+eax*4-0x3d1ef70f],cl
  411c83:	int3   
  411c84:	xor    BYTE PTR [esp+eiz*8-0x6babe51e],dh
  411c8b:	sbb    eax,esp
  411c8d:	xchg   edx,eax
  411c8e:	mov    dl,0xd9
  411c90:	(bad)  
  411c91:	clc    
  411c92:	mov    cs,WORD PTR [edi]
  411c94:	push   esp
  411c95:	mov    WORD PTR ds:0x372c20de,?
  411c9b:	not    BYTE PTR [esi]
  411c9d:	dec    ebp
  411c9e:	call   0x57be576a
  411ca3:	dec    ecx
  411ca4:	mov    WORD PTR [esi],?
  411ca6:	outs   dx,DWORD PTR ds:[esi]
  411ca7:	popa   
  411ca8:	loop   0x411d10
  411caa:	out    dx,al
  411cab:	test   bl,cl
  411cad:	(bad)  
  411cae:	jbe    0x411c78
  411cb0:	or     DWORD PTR [edx+0x44],eax
  411cb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cb4:	icebp  
  411cb5:	sub    DWORD PTR [eax-0x61],0x7035b1e5
  411cbc:	mov    esp,0x30d31e98
  411cc1:	mov    ebp,0xf43b63e2
  411cc6:	xchg   esp,eax
  411cc7:	loopne 0x411cb1
  411cc9:	inc    edx
  411cca:	lea    ebp,ds:0xca17dafc
  411cd0:	dec    edx
  411cd1:	test   BYTE PTR [ebx+0x1e],dh
  411cd4:	icebp  
  411cd5:	jb     0x411cd2
  411cd7:	int    0xc4
  411cd9:	adc    BYTE PTR [edx+0x1615dfa5],al
  411cdf:	shr    DWORD PTR [edi+0x5e],1
  411ce2:	xchg   BYTE PTR [ecx-0x6b737313],al
  411ce8:	in     al,0xf3
  411cea:	push   ss
  411ceb:	out    0xb1,al
  411ced:	xor    al,0xec
  411cef:	pop    ecx
  411cf0:	push   esi
  411cf1:	xchg   edx,eax
  411cf2:	inc    edx
  411cf3:	cld    
  411cf4:	cmp    esi,DWORD PTR [esi]
  411cf6:	loope  0x411cc2
  411cf8:	cmp    eax,DWORD PTR [edx+esi*4-0x50]
  411cfc:	jge    0x411ce1
  411cfe:	mov    DWORD PTR [edx],0x32899cc
  411d04:	pop    ecx
  411d05:	pop    esi
  411d06:	xor    dl,BYTE PTR [ecx-0xc]
  411d09:	xor    eax,0x900a13ac
  411d0e:	pop    edx
  411d0f:	add    DWORD PTR [ecx+ebx*8-0x59],ebx
  411d13:	push   ebp
  411d14:	push   ebx
  411d15:	push   cs
  411d16:	inc    ebx
  411d17:	ins    BYTE PTR es:[edi],dx
  411d18:	or     cl,BYTE PTR [ebx-0x2fabed06]
  411d1e:	inc    ebp
  411d1f:	dec    ecx
  411d20:	mov    ah,0x92
  411d22:	call   0x7a5:0x79ade1be
  411d29:	imul   ebp,eax,0x55
  411d2c:	adc    BYTE PTR [ebx-0xb1e05bd],0xb2
  411d33:	push   ebp
  411d34:	xchg   BYTE PTR [ebx],al
  411d36:	dec    ecx
  411d37:	add    al,0xcd
  411d39:	and    ebp,DWORD PTR [esi+0x63]
  411d3c:	ret    
  411d3d:	pop    esi
  411d3e:	mov    eax,0xf4e80f0c
  411d43:	lahf   
  411d44:	stos   DWORD PTR es:[edi],eax
  411d45:	(bad)  
  411d46:	sub    ebp,DWORD PTR [edx+0x6e]
  411d49:	sub    ah,dl
  411d4b:	add    al,0x93
  411d4d:	pop    ss
  411d4e:	xor    eax,0x925ab916
  411d53:	sbb    bl,al
  411d55:	pop    edi
  411d56:	pop    edx
  411d57:	out    dx,eax
  411d58:	nop
  411d59:	sahf   
  411d5a:	(bad)  
  411d5b:	jecxz  0x411d14
  411d5d:	loope  0x411d94
  411d5f:	out    0x43,eax
  411d61:	pop    ecx
  411d62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d63:	push   cs
  411d64:	das    
  411d65:	or     eax,0xfa645d39
  411d6a:	inc    esi
  411d6c:	sub    DWORD PTR fs:[ebp+0x6418c0c3],ebx
  411d73:	enter  0x9e75,0xea
  411d77:	pop    ebx
  411d78:	inc    ebp
  411d79:	push   es
  411d7a:	jbe    0x411d29
  411d7c:	add    ecx,DWORD PTR [ecx]
  411d7e:	lock mov al,BYTE PTR [ebp+0x1a]
  411d82:	sahf   
  411d83:	xchg   edx,eax
  411d84:	(bad)  
  411d85:	inc    ecx
  411d86:	rcr    ecx,1
  411d88:	cmp    eax,0x2b3b2855
  411d8d:	sbb    al,0x32
  411d8f:	lds    eax,FWORD PTR [ebp+0x56]
  411d92:	fucom  st(4)
  411d94:	aam    0xa0
  411d96:	(bad)  
  411d97:	adc    cl,bl
  411d99:	clc    
  411d9a:	pop    es
  411d9b:	into   
  411d9c:	sbb    BYTE PTR [ecx+ebp*2+0xf7b809c],al
  411da3:	stos   DWORD PTR es:[edi],eax
  411da4:	xchg   edi,eax
  411da5:	aam    0x88
  411da7:	outs   dx,BYTE PTR ds:[esi]
  411da8:	sub    BYTE PTR [edx+edx*4+0x45b848f9],ah
  411daf:	ficomp WORD PTR [ebp-0x278908ab]
  411db5:	jb     0x411d52
  411db7:	push   ds
  411db8:	or     edi,edx
  411dba:	inc    esi
  411dbb:	mov    dh,0xa1
  411dbd:	jecxz  0x411de9
  411dbf:	xchg   esi,eax
  411dc0:	jmp    0x8e6a:0x3ebac9d4
  411dc7:	xchg   esi,eax
  411dc8:	jmp    0x63f12b94
  411dcd:	cmp    dh,BYTE PTR [ebx]
  411dcf:	and    dl,BYTE PTR [edx-0x60]
  411dd2:	and    BYTE PTR [esi+0x6],0xd0
  411dd6:	push   0xc0b01e73
  411ddb:	(bad)  
  411ddd:	mov    ch,0x3f
  411ddf:	nop
  411de0:	ins    BYTE PTR es:[edi],dx
  411de1:	xchg   esp,eax
  411de2:	jecxz  0x411de1
  411de4:	add    eax,0x44339410
  411de9:	pop    ds
  411dea:	or     DWORD PTR [edi],0x44
  411ded:	(bad)  
  411dee:	jg     0x411de7
  411df0:	test   eax,0x96c7c316
  411df5:	stc    
  411df6:	loop   0x411e2e
  411df8:	mov    cl,0xcc
  411dfa:	inc    edi
  411dfb:	push   0xffffffff
  411dfd:	inc    ebp
  411dfe:	cmp    DWORD PTR [ebx],edi
  411e00:	fild   WORD PTR [edi+0x6b]
  411e03:	jbe    0x411e5e
  411e05:	pop    eax
  411e06:	push   edx
  411e07:	adc    eax,0xe36fc872
  411e0c:	mov    ch,0xda
  411e0e:	shr    bl,cl
  411e10:	mov    bh,0xd4
  411e12:	arpl   si,ax
  411e14:	and    eax,0x7fbd38de
  411e19:	or     eax,0xf94b0cc1
  411e1e:	icebp  
  411e1f:	sub    eax,0x872e54ba
  411e24:	ins    BYTE PTR es:[edi],dx
  411e25:	outs   dx,BYTE PTR ds:[esi]
  411e26:	dec    ebx
  411e27:	ins    BYTE PTR es:[edi],dx
  411e28:	dec    eax
  411e29:	mov    ebp,0x739dc5fa
  411e2e:	add    al,dl
  411e30:	and    al,0x68
  411e32:	enter  0x83fd,0x6a
  411e36:	test   BYTE PTR [ecx+0x53c7e2ec],0x27
  411e3d:	sub    al,0x1a
  411e3f:	imul   ebp,DWORD PTR [esi],0xa18c8b5
  411e45:	jecxz  0x411e56
  411e47:	mov    ebx,eax
  411e49:	idiv   BYTE PTR [ebx-0x1751570b]
  411e4f:	sar    DWORD PTR [esi],1
  411e51:	lahf   
  411e52:	pop    esi
  411e53:	mov    bl,0xe0
  411e55:	mov    esp,0xb6858a0e
  411e5a:	sub    DWORD PTR [esi+0x2550c4f7],esp
  411e60:	fidiv  DWORD PTR [ecx+0x47aa9a27]
  411e66:	fidivr WORD PTR [ecx+0x222fe566]
  411e6c:	jmp    0x8453:0xb2504ed5
  411e73:	cs jg  0x411ee1
  411e76:	lock cdq 
  411e78:	mov    esi,DWORD PTR [edx+0x62]
  411e7b:	adc    eax,0xfe5baf59
  411e80:	test   al,0x67
  411e82:	pop    edi
  411e83:	test   DWORD PTR [esi+edi*4],0x848b085c
  411e8a:	or     al,0x81
  411e8c:	push   0x1ee53f9b
  411e91:	and    al,0xaa
  411e93:	(bad)  [eax-0xe]
  411e96:	fwait
  411e97:	push   0x35
  411e99:	xchg   edi,eax
  411e9a:	cmp    al,0xf2
  411e9c:	rcl    BYTE PTR [edi+0x4a7caa75],0xfe
  411ea3:	arpl   WORD PTR [ecx-0x2],bp
  411ea6:	sbb    edi,DWORD PTR [esi+0x61b10555]
  411eac:	sub    BYTE PTR [ebx+0x11a95d22],bl
  411eb2:	pop    eax
  411eb3:	test   al,0x79
  411eb5:	push   edi
  411eb6:	in     al,dx
  411eb7:	mov    dh,0xa0
  411eb9:	jae    0x411e8c
  411ebb:	pop    ebx
  411ebc:	add    BYTE PTR [edx],dh
  411ebe:	loop   0x411f32
  411ec0:	retf   
  411ec1:	inc    esp
  411ec2:	mov    bh,0x66
  411ec4:	add    bl,BYTE PTR ds:[ecx]
  411ec7:	loopne 0x411e9d
  411ec9:	cdq    
  411eca:	pop    ebp
  411ecb:	retf   0x19a5
  411ece:	test   esp,ecx
  411ed0:	dec    esi
  411ed1:	loope  0x411edd
  411ed3:	cli    
  411ed4:	xor    DWORD PTR [edi],eax
  411ed6:	xor    dh,0x5c
  411ed9:	inc    esp
  411eda:	xor    dh,dl
  411edc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411edd:	lea    esp,[edi-0x63a56bf1]
  411ee3:	mov    ah,0xaa
  411ee5:	pop    ebp
  411ee6:	repz bound ebp,QWORD PTR [edx]
  411ee9:	or     DWORD PTR [ebx+0x4a602ace],esi
  411eef:	jp     0x411f25
  411ef1:	inc    ebp
  411ef2:	data16 hlt 
  411ef4:	ss and al,0xd5
  411ef7:	xchg   esp,eax
  411ef8:	fild   DWORD PTR [edi]
  411efa:	push   esp
  411efb:	sub    dl,BYTE PTR ds:0x4d05aa32
  411f01:	jecxz  0x411f0d
  411f03:	sti    
  411f04:	sbb    al,0xf8
  411f06:	fmul   QWORD PTR [ebx+ecx*1]
  411f09:	lock and bh,BYTE PTR [ebx]
  411f0c:	out    dx,eax
  411f0d:	mov    BYTE PTR [eax-0x26],ah
  411f10:	mov    gs,WORD PTR [eax+ebx*4]
  411f13:	jo     0x411f92
  411f15:	dec    eax
  411f16:	std    
  411f17:	das    
  411f18:	shl    WORD PTR [esi],0x12
  411f1c:	mov    cl,0x0
  411f1e:	loopne 0x411f60
  411f20:	xchg   DWORD PTR [eax],edi
  411f22:	test   eax,0x8ccdca97
  411f27:	(bad)  
  411f28:	cmp    al,0x6
  411f2a:	es inc edi
  411f2c:	dec    eax
  411f2d:	in     eax,0x55
  411f2f:	cwde   
  411f30:	push   es
  411f31:	cld    
  411f32:	add    BYTE PTR [ecx+0x3c],0x55
  411f36:	cmp    DWORD PTR [edi-0x17],eax
  411f39:	addr16 repnz push es
  411f3c:	or     al,0x38
  411f3e:	sub    dh,cl
  411f40:	sbb    ebp,DWORD PTR [ebx-0x6e479c06]
  411f46:	outs   dx,BYTE PTR ds:[esi]
  411f47:	icebp  
  411f48:	dec    ebx
  411f49:	or     DWORD PTR [ebx-0x6f],ecx
  411f4c:	cmp    ch,cl
  411f4e:	mov    bh,0x89
  411f50:	div    DWORD PTR gs:[esi+0x38]
  411f54:	(bad)  
  411f55:	adc    eax,0xe56f33ea
  411f5a:	enter  0x5d93,0x42
  411f5e:	adc    dl,BYTE PTR [eax+0x3c98dcfc]
  411f64:	xor    BYTE PTR [eax+0x3d],bl
  411f67:	cli    
  411f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f69:	daa    
  411f6a:	sti    
  411f6b:	in     eax,dx
  411f6c:	or     BYTE PTR [esi-0x34],bl
  411f6f:	(bad)  
  411f70:	aas    
  411f71:	sbb    ebp,DWORD PTR [ecx+0x59]
  411f74:	inc    eax
  411f75:	dec    esi
  411f76:	cmp    ebp,DWORD PTR [ebx]
  411f78:	adc    eax,0x3e594797
  411f7d:	xor    DWORD PTR [ebp-0x7ed15db],ebx
  411f83:	sbb    ebp,DWORD PTR [edx]
  411f85:	mov    dh,0x1
  411f87:	pop    edx
  411f88:	jmp    0x411fb6
  411f8a:	jae    0x411fd2
  411f8c:	arpl   WORD PTR [eax+ecx*1],bp
  411f8f:	mov    esp,0xa62ec1f6
  411f94:	outs   dx,DWORD PTR ds:[esi]
  411f95:	jnp    0x411f7c
  411f97:	das    
  411f98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f99:	cmp    DWORD PTR [ebp-0x637bd501],edx
  411f9f:	cdq    
  411fa0:	xchg   BYTE PTR [edx],bl
  411fa2:	jb     0x411f59
  411fa4:	mov    bl,0xb6
  411fa6:	add    esp,DWORD PTR ds:0xc2213dd4
  411fac:	sbb    ebx,DWORD PTR [eax]
  411fae:	pushf  
  411faf:	pop    esp
  411fb0:	sbb    al,0xf3
  411fb2:	scas   eax,DWORD PTR es:[edi]
  411fb3:	mov    ebp,0x1ee15cbb
  411fb8:	fcmovne st,st(6)
  411fba:	dec    eax
  411fbb:	mov    ds:0xddab6143,eax
  411fc0:	mov    dl,0x78
  411fc2:	cmp    eax,0x89a50acb
  411fc7:	icebp  
  411fc8:	mov    ds:0xc6b2c4cd,eax
  411fcd:	sbb    al,bl
  411fcf:	shr    DWORD PTR [edi],cl
  411fd1:	inc    esp
  411fd2:	push   eax
  411fd3:	daa    
  411fd4:	and    dl,bh
  411fd6:	sub    bh,ah
  411fd8:	cwde   
  411fd9:	aam    0xef
  411fdb:	aas    
  411fdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fdd:	loop   0x411fc6
  411fdf:	jne    0x411fe3
  411fe1:	stos   BYTE PTR es:[edi],al
  411fe2:	mov    ecx,0x7a695085
  411fe7:	mov    edx,0xac39b768
  411fec:	adc    al,0x19
  411fee:	arpl   WORD PTR [ebp-0x2936d4a5],bp
  411ff4:	clc    
  411ff5:	mov    cl,0xdc
  411ff7:	dec    edi
  411ff8:	jmp    0x3e337247
  411ffd:	in     al,0xe1
  411fff:	js     0x41204e
  412001:	add    al,al
  412003:	or     BYTE PTR [ebx+ebx*4],dh
  412006:	jle    0x412037
  412008:	rcr    BYTE PTR [eax],0x6a
  41200b:	cmc    
  41200c:	(bad)  
  41200d:	arpl   WORD PTR [eax-0x7ff23770],bx
  412013:	mov    edx,0x51702f2f
  412018:	(bad)  
  412019:	adc    DWORD PTR [edx],0x700f00d5
  41201f:	enter  0x7a0b,0xb0
  412023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412024:	adc    edi,DWORD PTR [ebx+0x2c]
  412027:	push   esi
  412028:	xchg   esi,eax
  412029:	(bad)  
  41202a:	fldenv [edx+0x3d]
  41202d:	mov    esi,0xc44777a
  412032:	(bad)  
  412034:	jl     0x412096
  412036:	data16 loopne 0x41201a
  412039:	outs   dx,BYTE PTR ds:[esi]
  41203a:	adc    eax,0x10c00ad9
  41203f:	jmp    0xb17b0fba
  412044:	(bad)  
  412045:	(bad)  
  412047:	jecxz  0x41200b
  412049:	adc    esi,DWORD PTR [edi]
  41204b:	stc    
  41204c:	xchg   bl,cl
  41204e:	jne    0x412056
  412050:	test   edi,0xf781b46e
  412056:	ficom  DWORD PTR [edx+0x157febcd]
  41205c:	inc    ebx
  41205d:	mov    ah,cl
  41205f:	ret    0xc25d
  412062:	adc    al,0x1f
  412064:	mov    ebx,0x30e9cdf5
  412069:	lock inc bh
  41206c:	bound  eax,QWORD PTR [edx+0x1c16ad1e]
  412072:	outs   dx,DWORD PTR ds:[esi]
  412073:	stc    
  412074:	fs push ss
  412076:	or     eax,DWORD PTR [eax]
  412078:	(bad)  
  412079:	retf   0xea14
  41207c:	outs   dx,BYTE PTR ds:[esi]
  41207d:	push   ecx
  41207e:	or     bh,BYTE PTR [eax+0x49]
  412081:	mov    ah,0xdc
  412083:	icebp  
  412084:	aaa    
  412085:	shl    BYTE PTR [ebp+0xc],1
  412088:	mov    cl,0xde
  41208a:	leave  
  41208b:	adc    edi,DWORD PTR [ebp-0x6a]
  41208e:	aas    
  41208f:	cmp    DWORD PTR [edx-0x19181cac],ebx
  412095:	cmp    ebx,DWORD PTR [ebx+ebp*4]
  412098:	fadd   QWORD PTR [edx+0x3]
  41209b:	push   ebx
  41209c:	imul   edi,edx,0x73de20fe
  4120a2:	and    eax,0x1e9c7b53
  4120a7:	pop    ecx
  4120a8:	ds dec esi
  4120aa:	adc    eax,0x3f7add93
  4120af:	jae    0x41203e
  4120b1:	out    dx,eax
  4120b2:	xchg   edi,eax
  4120b3:	cmp    BYTE PTR [ecx-0x7e],0x13
  4120b7:	ret    0xf213
  4120ba:	dec    edx
  4120bb:	ja     0x4120d6
  4120bd:	cmp    al,0x61
  4120bf:	pop    esi
  4120c0:	xchg   ebp,eax
  4120c1:	xchg   edi,eax
  4120c2:	cmp    eax,0x2a2f3980
  4120c7:	mov    ebp,0x1532b9d8
  4120cc:	cmp    DWORD PTR [eax-0x33],0x44f7c405
  4120d3:	mov    al,0x93
  4120d5:	aaa    
  4120d6:	stc    
  4120d7:	(bad)  
  4120d8:	aad    0xc6
  4120da:	xor    ebx,DWORD PTR [esi-0x2e]
  4120dd:	pop    eax
  4120de:	jl     0x41208e
  4120e0:	aam    0x58
  4120e2:	test   BYTE PTR [edx-0x6bc5baeb],dl
  4120e8:	adc    DWORD PTR [edx+ebx*8-0x8],0xf02e0ddd
  4120f0:	out    0x9d,eax
  4120f2:	into   
  4120f3:	stc    
  4120f4:	jle    0x412077
  4120f6:	dec    ecx
  4120f7:	fwait
  4120f8:	cmp    ebx,edx
  4120fa:	dec    edx
  4120fb:	add    DWORD PTR [ebx],0xffffffcb
  4120fe:	xor    al,0xae
  412100:	dec    edx
  412101:	ret    0xc43f
  412104:	adc    dl,BYTE PTR [esi+0x11]
  412107:	dec    eax
  412108:	cwde   
  412109:	icebp  
  41210a:	mov    bh,BYTE PTR [edx+0x9026490]
  412110:	(bad)  
  412111:	jbe    0x412131
  412113:	xor    DWORD PTR [edi-0x40],esi
  412116:	sub    edx,DWORD PTR [edi]
  412118:	mov    al,ds:0xcd250cca
  41211d:	test   BYTE PTR [ebx],0xc4
  412120:	cwde   
  412121:	jl     0x412129
  412123:	stos   DWORD PTR es:[edi],eax
  412124:	std    
  412125:	mov    esp,0x20b258d9
  41212a:	push   ecx
  41212b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41212c:	dec    esi
  41212d:	fcomp  DWORD PTR ss:[edx-0x376bbba]
  412134:	xor    eax,0x3e9b9bd2
  412139:	std    
  41213a:	dec    esi
  41213b:	inc    DWORD PTR [eax-0x335dc4a8]
  412141:	js     0x412119
  412143:	leave  
  412144:	(bad)  
  412145:	into   
  412146:	(bad)  
  412147:	jl     0x4121bd
  412149:	mov    bh,ah
  41214b:	fstp   QWORD PTR [ecx+0x3c674ded]
  412151:	jmp    0xa16d4bed
  412156:	cmp    ecx,DWORD PTR [ecx+0x75]
  412159:	mov    bl,BYTE PTR [esi]
  41215b:	cli    
  41215c:	sbb    bl,BYTE PTR [ecx]
  41215e:	(bad)  
  41215f:	mov    dl,0x56
  412161:	sbb    DWORD PTR [eax+0x931309e],edi
  412167:	leave  
  412168:	xchg   ebp,eax
  412169:	mov    edx,DWORD PTR [ebx-0x367cf9b2]
  41216f:	pop    esp
  412170:	(bad)  
  412172:	sub    DWORD PTR [esp+eax*2-0x71faa0d0],eax
  412179:	nop
  41217a:	fwait
  41217b:	mov    bh,0x56
  41217d:	loopne 0x4121b1
  41217f:	push   es
  412180:	or     edi,DWORD PTR [ebp+0x19]
  412183:	(bad)  
  412184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412185:	or     dh,bl
  412187:	mov    gs,WORD PTR [esi-0x15b3b45]
  41218d:	jg     0x4121b9
  41218f:	pop    fs
  412191:	bound  ebp,QWORD PTR [ebx+0x3fd84c38]
  412197:	pop    es
  412198:	add    BYTE PTR [ebp+0x62],cl
  41219b:	enter  0x5271,0x6b
  41219f:	loope  0x4121f6
  4121a1:	rol    BYTE PTR [ebx-0x2],0x1d
  4121a5:	repz or al,0xc
  4121a8:	aad    0x98
  4121aa:	mov    bl,0xa7
  4121ac:	jae    0x41220f
  4121ae:	push   edx
  4121af:	xchg   edx,eax
  4121b0:	and    al,0x15
  4121b2:	or     al,BYTE PTR [eax]
  4121b4:	rcl    DWORD PTR [ebp+0x37888f3a],0x57
  4121bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121bc:	loopne 0x412175
  4121be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121bf:	test   DWORD PTR [ecx+0x20],ebx
  4121c2:	imul   esp,esi,0x7f
  4121c5:	mul    DWORD PTR [esi-0x5ab8d925]
  4121cb:	into   
  4121cc:	(bad)  [edx]
  4121ce:	ss cld 
  4121d0:	add    DWORD PTR gs:[edx+0x7f],ecx
  4121d4:	or     al,0xe5
  4121d6:	xchg   DWORD PTR [esi-0x7a9c587d],edx
  4121dc:	cmc    
  4121dd:	jo     0x412259
  4121df:	test   esi,0xbb02fd55
  4121e5:	retf   
  4121e6:	dec    eax
  4121e7:	xor    BYTE PTR [esi],cl
  4121e9:	into   
  4121ea:	add    cl,BYTE PTR [esi*8+0x61fd4de]
  4121f1:	mov    BYTE PTR [ecx-0xc],bl
  4121f4:	sti    
  4121f5:	sbb    al,0xdf
  4121f7:	mov    ebx,0xcedeac82
  4121fc:	or     DWORD PTR [ebx],ebp
  4121fe:	call   0x18d09e5c
  412203:	mov    dl,0x35
  412205:	or     bl,ch
  412207:	(bad)  
  412208:	sahf   
  412209:	sahf   
  41220a:	pop    ss
  41220b:	jle    0x41227d
  41220d:	mov    ds:0xb9af3864,al
  412212:	mov    BYTE PTR [ebx+ecx*2],bh
  412215:	sbb    al,0x66
  412217:	(bad)  
  412218:	(bad)  
  412219:	xor    al,0x95
  41221b:	sub    al,dl
  41221d:	nop
  41221e:	jg     0x412299
  412220:	arpl   WORD PTR [ebp+0x52],sp
  412223:	push   cs
  412224:	in     ax,dx
  412226:	fisttp DWORD PTR [edi-0x2e971a68]
  41222d:	test   al,0xf6
  41222f:	sub    edi,0x556a2e68
  412235:	es push ebx
  412237:	in     eax,dx
  412238:	mov    ds,esi
  41223a:	bound  ebp,QWORD PTR [ecx+0x3fffef2a]
  412240:	mov    al,ds:0x96f5cdbb
  412245:	sub    DWORD PTR [edi],esp
  412247:	ficomp DWORD PTR [edx+0x772a577b]
  41224d:	scas   eax,DWORD PTR es:[edi]
  41224e:	data16 or dh,BYTE PTR [edi+0x4c]
  412252:	test   BYTE PTR ds:0xd1be79e4,cl
  412258:	and    bh,BYTE PTR [ebx+0x1d5a20f6]
  41225e:	push   ecx
  41225f:	inc    edx
  412260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412261:	xor    al,BYTE PTR [ecx]
  412263:	ja     0x4122a1
  412265:	xchg   esp,eax
  412266:	sub    eax,DWORD PTR [ebp+edi*1-0x45db3222]
  41226d:	dec    ebx
  41226e:	inc    ah
  412270:	pop    esp
  412271:	sbb    bh,BYTE PTR [edx+0x6f]
  412274:	adc    BYTE PTR [esi+0x5a1d9a04],al
  41227a:	sbb    dh,dl
  41227c:	aas    
  41227d:	mov    DWORD PTR [ebp+0x4067daa8],eax
  412283:	rcl    ebx,cl
  412285:	cmp    BYTE PTR [esi-0x6a],dh
  412288:	jno    0x41220d
  41228a:	stos   BYTE PTR es:[edi],al
  41228b:	inc    edi
  41228c:	mov    eax,0x70895ff9
  412291:	push   0xfbfe5413
  412296:	test   eax,0x1d0a37b7
  41229b:	je     0x4122ba
  41229d:	push   es
  41229e:	fcom   QWORD PTR ds:0xc01b9561
  4122a4:	dec    eax
  4122a5:	xchg   ebp,eax
  4122a6:	loope  0x4122af
  4122a8:	mov    ebp,0xdf4ad37f
  4122ad:	xchg   ecx,eax
  4122ae:	aad    0x14
  4122b0:	adc    eax,0x5e655d76
  4122b5:	stos   DWORD PTR es:[edi],eax
  4122b6:	cs ins DWORD PTR es:[edi],dx
  4122b8:	mov    bl,0xab
  4122ba:	aas    
  4122bb:	jmp    0x9add:0x4776ba8c
  4122c2:	add    BYTE PTR [edi],dh
  4122c4:	fadd   DWORD PTR [eax]
  4122c6:	(bad)
  4122c9:	pop    edx
  4122ca:	xchg   eax,ebx
  4122cc:	xchg   esi,eax
  4122cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122ce:	add    esi,ebx
  4122d0:	cmp    ebx,DWORD PTR ds:0x750f469e
  4122d6:	xchg   ebp,eax
  4122d7:	neg    esi
  4122d9:	test   eax,0x721177ba
  4122de:	js     0x412326
  4122e0:	cdq    
  4122e1:	and    al,0x52
  4122e3:	fisub  WORD PTR [ecx]
  4122e5:	add    DWORD PTR [ebx+eax*1+0x598d232c],edi
  4122ec:	aam    0x2d
  4122ee:	sub    BYTE PTR [edi],bl
  4122f0:	adc    DWORD PTR [ecx+0x5e],ebx
  4122f3:	pop    ecx
  4122f4:	mov    ebp,DWORD PTR [ecx-0x37]
  4122f7:	jbe    0x41236b
  4122f9:	fsubp  st(7),st
  4122fb:	imul   esi,DWORD PTR [eax+0x2b],0x81df5a34
  412302:	or     ecx,DWORD PTR [edi+0x8]
  412305:	xlat   BYTE PTR ds:[ebx]
  412306:	sbb    ebx,DWORD PTR [ebx]
  412308:	push   edx
  412309:	mov    esp,0xc657c833
  41230e:	and    al,0xa6
  412310:	push   ecx
  412311:	ret    
  412312:	scas   al,BYTE PTR es:[edi]
  412313:	stos   BYTE PTR es:[edi],al
  412314:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412315:	daa    
  412316:	sbb    BYTE PTR [ebx],bh
  412318:	fwait
  412319:	and    dh,bh
  41231b:	adc    ebp,DWORD PTR [esi+0x6364831d]
  412321:	aad    0x79
  412323:	je     0x4122cd
  412325:	adc    eax,0x60314f1
  41232a:	xchg   esi,eax
  41232b:	stc    
  41232c:	xchg   esi,eax
  41232d:	cs mov esi,0x91594194
  412333:	mov    ebx,0xa959b39b
  412338:	xchg   esp,eax
  412339:	ds jnp 0x412384
  41233c:	lea    edx,[ebx-0x68]
  41233f:	repnz lods al,BYTE PTR ds:[esi]
  412341:	outs   dx,BYTE PTR ds:[esi]
  412342:	pop    edi
  412343:	fs push ebx
  412345:	(bad)  
  412346:	xor    ah,BYTE PTR [esi-0x6df99c6a]
  41234c:	inc    ebp
  41234d:	sar    BYTE PTR [ebp+0x26],1
  412350:	test   DWORD PTR [edx+0x445fcfb9],edx
  412356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412357:	(bad)
  41235b:	inc    esp
  41235c:	imul   eax,DWORD PTR [ebp+0x74417019],0x943dbf65
  412366:	into   
  412367:	add    BYTE PTR [ebx],dl
  412369:	dec    edx
  41236a:	adc    ebx,DWORD PTR [edi]
  41236c:	enter  0x620a,0x8
  412370:	mov    ebp,0xd7df2c33
  412375:	leave  
  412376:	jno    0x4123ed
  412378:	adc    al,0xde
  41237a:	and    ch,bl
  41237c:	mov    cl,0xe
  41237e:	mov    edx,?
  412380:	xchg   BYTE PTR [ebx+0x22f5a131],bh
  412386:	xor    dh,ah
  412388:	ins    DWORD PTR es:[edi],dx
  412389:	rcr    BYTE PTR [esi+edx*1-0x3893abcd],cl
  412390:	xor    al,0xcf
  412392:	lds    esp,FWORD PTR [ecx+0x131e3608]
  412398:	and    dl,0x63
  41239b:	or     bh,ah
  41239d:	xor    BYTE PTR [ecx],bh
  41239f:	scas   eax,DWORD PTR es:[edi]
  4123a0:	mov    ah,0xa1
  4123a2:	stc    
  4123a3:	mov    ebx,0x6f0782c9
  4123a8:	in     al,0xe
  4123aa:	ret    0x5225
  4123ad:	out    0x83,al
  4123af:	fisttp WORD PTR [edi+0x51bba93d]
  4123b5:	push   cs
  4123b6:	lods   eax,DWORD PTR ds:[esi]
  4123b7:	mov    ch,BYTE PTR [eax+0x6d]
  4123ba:	jmp    0x7238:0x63e459e4
  4123c1:	cmp    eax,0xf2558cc5
  4123c6:	push   esp
  4123c7:	pop    esp
  4123c8:	or     al,0xd9
  4123ca:	sub    ebp,esp
  4123cc:	lock loop 0x412447
  4123cf:	pusha  
  4123d0:	ss aaa 
  4123d2:	push   cs
  4123d3:	xchg   esi,eax
  4123d4:	int    0xaf
  4123d6:	sbb    dl,BYTE PTR ds:0x1279b684
  4123dc:	fsub   DWORD PTR [ebx]
  4123de:	mov    dl,0xe4
  4123e0:	xchg   ebp,eax
  4123e1:	cmp    eax,0xd969c279
  4123e6:	push   0x9aeb1cae
  4123eb:	jl     0x41241c
  4123ed:	adc    dl,BYTE PTR [esi]
  4123ef:	loope  0x4123b5
  4123f1:	retf   
  4123f2:	ins    BYTE PTR es:[edi],dx
  4123f3:	mov    eax,ds:0x974f549a
  4123f8:	mov    BYTE PTR [eax-0x5a],cl
  4123fb:	jb     0x412450
  4123fd:	adc    DWORD PTR [edx+esi*4-0xb],ecx
  412401:	mov    ebp,0xc7a82422
  412406:	in     eax,dx
  412407:	adc    DWORD PTR [edx-0x41],eax
  41240a:	rcl    BYTE PTR [ecx],0xee
  41240d:	dec    esp
  41240e:	mov    eax,0x711a43f4
  412413:	adc    ch,BYTE PTR ds:0xa2830570
  412419:	xchg   esp,ecx
  41241b:	fwait
  41241c:	and    eax,0x87d68bde
  412421:	jp     0x412411
  412423:	cmp    BYTE PTR [ecx+0x61],dl
  412426:	inc    edi
  412427:	data16 or al,0x47
  41242a:	xlat   BYTE PTR ds:[ebx]
  41242b:	inc    esi
  41242c:	dec    edi
  41242d:	jbe    0x412436
  41242f:	rcl    DWORD PTR ds:0x6750d668,0xbe
  412436:	push   0xffffffc4
  412438:	add    ah,BYTE PTR [esi+0x4f]
  41243b:	mov    esi,0xaa18a715
  412440:	stos   BYTE PTR es:[edi],al
  412441:	pop    ebp
  412442:	mov    dh,0xf2
  412444:	imul   edi,ebp,0x57
  412447:	jne    0x412465
  412449:	cmp    edi,esp
  41244b:	pop    eax
  41244c:	rcl    DWORD PTR gs:[edi],0x1b
  412450:	(bad)  
  412451:	mov    ch,0xb2
  412453:	call   0x8f82ab55
  412458:	jb     0x4123da
  41245a:	mov    ds,esp
  41245c:	adc    cl,BYTE PTR [edx+0x53ac7d51]
  412462:	xchg   esi,eax
  412463:	inc    edi
  412464:	xchg   esi,eax
  412465:	push   eax
  412466:	std    
  412467:	pop    ecx
  412468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412469:	jp     0x412480
  41246b:	scas   eax,DWORD PTR es:[edi]
  41246c:	add    DWORD PTR [ebx+ebx*2-0x51df0b0d],esi
  412473:	into   
  412474:	sub    al,BYTE PTR [ebx-0x74c201d8]
  41247a:	push   ebp
  41247b:	cld    
  41247c:	jle    0x412443
  41247e:	aam    0xfa
  412480:	out    dx,al
  412481:	push   0x182b4de8
  412486:	mov    esp,0xa883a307
  41248b:	or     BYTE PTR [ebx-0x1fcaeeca],0xf6
  412492:	jmp    FWORD PTR [edx-0x17fb2b01]
  412498:	mov    edx,0x967c0dd5
  41249d:	clc    
  41249e:	ins    DWORD PTR es:[edi],dx
  41249f:	or     al,0x7
  4124a1:	ret    
  4124a2:	fcmovu st,st(5)
  4124a4:	ret    
  4124a5:	fs jecxz 0x4124e0
  4124a8:	or     BYTE PTR [edi],cl
  4124aa:	aas    
  4124ab:	cmp    DWORD PTR [edx+ebp*8+0x21],ecx
  4124af:	aad    0x55
  4124b1:	and    ch,BYTE PTR [edi]
  4124b3:	push   ss
  4124b4:	test   al,0x57
  4124b6:	out    dx,eax
  4124b7:	aas    
  4124b8:	xor    esp,DWORD PTR [eax-0x2e856fbd]
  4124be:	arpl   WORD PTR [edi],ax
  4124c0:	mov    dl,0x2a
  4124c2:	mov    DWORD PTR [ebp-0x23bec91f],edx
  4124c8:	add    al,al
  4124ca:	mov    bl,0xa4
  4124cc:	jnp    0x412542
  4124ce:	imul   al
  4124d0:	and    DWORD PTR [ecx+0x57],ecx
  4124d3:	fdiv   st,st(2)
  4124d5:	mov    ecx,DWORD PTR [edx+0x2d]
  4124d8:	push   ecx
  4124d9:	push   0xe6ea4fcc
  4124de:	jmp    0x41248c
  4124e0:	xchg   esp,eax
  4124e1:	push   0xa5ff03c2
  4124e6:	xchg   edi,eax
  4124e7:	xchg   ebp,eax
  4124e8:	mov    ebp,0xc14d7c47
  4124ed:	mov    ecx,0x5b69da85
  4124f2:	inc    ebp
  4124f3:	mov    BYTE PTR [esi+ebp*4-0x29],ah
  4124f7:	ret    
  4124f8:	repz push eax
  4124fa:	inc    ebx
  4124fb:	lods   al,BYTE PTR ds:[esi]
  4124fc:	xchg   edi,eax
  4124fd:	jo     0x4124ee
  4124ff:	mov    ebx,0x33a96054
  412504:	and    DWORD PTR [edx-0x60],ecx
  412507:	add    DWORD PTR [ebp-0xf],ebx
  41250a:	fldenv [edx+0x7c]
  41250d:	mov    cl,BYTE PTR [edi]
  41250f:	and    eax,0xdc985655
  412514:	(bad)  
  412515:	fs add ebx,0xcb36e9bb
  41251c:	lock jb 0x4124ab
  41251f:	cmp    al,0x1
  412521:	pop    ecx
  412522:	jle    0x412529
  412524:	jg     0x4124e2
  412526:	xor    DWORD PTR [esi+ebp*8],ecx
  412529:	fist   WORD PTR [edi]
  41252b:	xchg   BYTE PTR [ecx+edx*1],al
  41252e:	cdq    
  41252f:	fisub  WORD PTR [ebp-0x6b]
  412532:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412533:	int    0x5e
  412535:	push   es
  412536:	js     0x412587
  412538:	out    0xba,al
  41253a:	repz sbb ecx,edi
  41253d:	test   al,0x4e
  41253f:	fstp   DWORD PTR [ebx]
  412541:	popa   
  412542:	sub    esi,esi
  412544:	int    0x84
  412546:	jmp    0x4ea2:0xa1fe4e8a
  41254d:	je     0x412582
  41254f:	sbb    edi,edx
  412551:	jns    0x41257d
  412553:	lahf   
  412554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412555:	mov    WORD PTR [edx-0x67],ds
  412558:	retf   
  412559:	in     eax,0xc9
  41255b:	pushf  
  41255c:	retf   
  41255d:	ret    
  41255e:	cmp    dh,BYTE PTR [ecx+ebp*1-0x2d]
  412562:	cmp    ebp,ebp
  412564:	int    0x5e
  412566:	jae    0x412507
  412568:	sbb    BYTE PTR [esi],0xad
  41256b:	repnz ins DWORD PTR es:[edi],dx
  41256d:	ins    DWORD PTR es:[edi],dx
  41256e:	fdivr  QWORD PTR [ecx-0x23]
  412571:	sbb    al,0xb5
  412573:	out    dx,eax
  412574:	sub    BYTE PTR [ebx-0x772d949a],cl
  41257a:	push   esi
  41257b:	lahf   
  41257c:	jmp    0x4125fa
  41257e:	lahf   
  41257f:	push   eax
  412580:	popa   
  412581:	mov    al,BYTE PTR [ebx-0x5d]
  412584:	jb     0x41252d
  412586:	in     eax,dx
  412587:	sahf   
  412588:	hlt    
  412589:	pop    eax
  41258a:	mov    edi,0xbd77515e
  41258f:	jne    0x412514
  412591:	and    ah,dl
  412593:	jge    0x4125f0
  412595:	fild   DWORD PTR [ebx-0x13]
  412598:	retf   
  412599:	in     al,dx
  41259a:	sbb    esi,edx
  41259c:	jmp    0x45ef:0x254d7d4d
  4125a3:	neg    BYTE PTR [ebp+0x10e94f7a]
  4125a9:	mov    bh,0xd8
  4125ab:	push   0xffffff96
  4125ad:	adc    eax,0x758deb60
  4125b2:	xlat   BYTE PTR ds:[ebx]
  4125b3:	fwait
  4125b4:	and    DWORD PTR [ebx+0x7c8605d7],0xffffff80
  4125bb:	mov    al,0x1
  4125bd:	mov    eax,ds:0xfdd3ec01
  4125c2:	and    BYTE PTR [ebx],cl
  4125c4:	test   al,0x85
  4125c6:	call   0xa786:0xd4421f9a
  4125cd:	xchg   edx,eax
  4125ce:	dec    eax
  4125cf:	lock mov BYTE PTR [eax+0x4e],bh
  4125d3:	xchg   ecx,eax
  4125d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125d5:	add    cl,BYTE PTR [eax+esi*8+0x471dcd24]
  4125dc:	xor    DWORD PTR [ecx],0xffffffd7
  4125df:	out    0x83,eax
  4125e1:	mov    ch,0xd4
  4125e3:	ds inc esi
  4125e5:	cwde   
  4125e6:	(bad)  
  4125e7:	popa   
  4125e8:	sub    al,BYTE PTR [edi+edi*4+0x35e0379d]
  4125ef:	push   edi
  4125f0:	push   0x52e602c8
  4125f5:	dec    edx
  4125f6:	pop    ebp
  4125f7:	pop    ebx
  4125f8:	mov    ah,0x60
  4125fa:	daa    
  4125fb:	fdivr  QWORD PTR [ecx]
  4125fd:	push   esi
  4125fe:	inc    edx
  4125ff:	mov    ds:0xc58f91c7,al
  412604:	push   0x48131abd
  412609:	stos   BYTE PTR es:[edi],al
  41260a:	dec    esi
  41260b:	icebp  
  41260c:	idiv   DWORD PTR [ebx+0x13]
  41260f:	cld    
  412610:	test   BYTE PTR [ebx+ebp*4-0x1b4e44f1],dl
  412617:	mov    ?,edi
  412619:	or     DWORD PTR [esi-0x7aff2880],ecx
  41261f:	xchg   BYTE PTR [edi+0xd],ch
  412622:	dec    esi
  412623:	sbb    ecx,DWORD PTR [edx+eiz*1-0x6a5cb0a9]
  41262a:	ins    DWORD PTR es:[edi],dx
  41262b:	test   BYTE PTR [eax],0xb9
  41262e:	or     BYTE PTR [ecx+0xc59b3fd],ah
  412634:	inc    eax
  412635:	xor    eax,0x5ef82070
  41263a:	cwde   
  41263b:	jb     0x412656
  41263d:	call   0xd813:0x7e527e5f
  412644:	mov    fs,eax
  412646:	das    
  412647:	retf   0x2475
  41264a:	es mov ecx,0x1fc7411d
  412650:	ja     0x412648
  412652:	loop   0x4126c9
  412654:	pop    ebp
  412655:	cs and al,0x3a
  412658:	shl    DWORD PTR [esi+0x52d77de1],1
  41265e:	pop    es
  41265f:	(bad)  
  412660:	and    dl,bh
  412662:	xchg   esp,eax
  412663:	std    
  412664:	add    DWORD PTR [edi-0x10],0xffffffb3
  412668:	es icebp 
  41266a:	stos   BYTE PTR es:[edi],al
  41266b:	dec    esp
  41266c:	xor    BYTE PTR [ecx+0x2aa225dc],dl
  412672:	xor    eax,0xff1070bd
  412677:	or     DWORD PTR [ebx],edi
  412679:	and    eax,0x3e5121c
  41267e:	adc    dl,BYTE PTR ds:0xb98f6390
  412684:	daa    
  412685:	or     ebx,eax
  412687:	pop    edx
  412688:	cwde   
  412689:	clc    
  41268a:	(bad)  
  41268c:	mov    cs,WORD PTR [ebp-0x2a]
  41268f:	sbb    DWORD PTR [ebp+0x16274889],0x8849649f
  412699:	pop    edi
  41269a:	das    
  41269b:	lock in al,dx
  41269d:	sub    esi,DWORD PTR [eax+0x42]
  4126a0:	iret   
  4126a1:	mov    ds:0x39e7400,al
  4126a6:	pop    edx
  4126a7:	enter  0x5192,0x7
  4126ab:	add    ch,BYTE PTR [ebx-0x74]
  4126ae:	rcr    eax,1
  4126b0:	popa   
  4126b1:	aaa    
  4126b2:	push   ds
  4126b3:	mov    eax,0x32d4593c
  4126b8:	mov    ebp,0x5732f194
  4126bd:	add    BYTE PTR [edi+0x24],0xd6
  4126c1:	mov    cs,WORD PTR [edi-0x2d]
  4126c4:	fist   WORD PTR [ebx-0xdbca755]
  4126ca:	out    0x19,eax
  4126cc:	xchg   al,ch
  4126ce:	dec    edx
  4126cf:	rcl    DWORD PTR [esi],cl
  4126d1:	jp     0x412680
  4126d3:	sub    bl,BYTE PTR [esi+0x5d2072b6]
  4126d9:	dec    edi
  4126da:	sub    al,0xf2
  4126dc:	dec    esi
  4126dd:	lods   eax,DWORD PTR ds:[esi]
  4126de:	fbstp  TBYTE PTR [ecx+0x19ecad8e]
  4126e4:	jp     0x4126b7
  4126e6:	hlt    
  4126e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126e8:	sbb    al,0x1
  4126ea:	xchg   BYTE PTR [ecx],cl
  4126ec:	inc    edi
  4126ed:	or     DWORD PTR [esi-0x7cff635e],esp
  4126f3:	push   ds
  4126f4:	cmc    
  4126f5:	cli    
  4126f6:	addr16 popa 
  4126f8:	fisttp QWORD PTR [esi-0x5dfe595c]
  4126fe:	outs   dx,DWORD PTR ds:[esi]
  4126ff:	mov    ds:0x746ba015,eax
  412704:	fwait
  412705:	dec    ecx
  412706:	jne    0x4126ce
  412708:	mov    cl,0xbe
  41270a:	stc    
  41270b:	imul   DWORD PTR [ecx+0x160a17e1]
  412711:	xlat   BYTE PTR ds:[ebx]
  412712:	or     eax,edi
  412714:	pusha  
  412715:	push   ebx
  412716:	sub    DWORD PTR es:[edi+0x29c22246],0x6e9ac0a4
  412721:	(bad)  [eax+0x525ab408]
  412727:	arpl   WORD PTR [edx-0x47c89f4a],cx
  41272d:	push   ecx
  41272e:	inc    esi
  41272f:	inc    ebp
  412730:	rcr    BYTE PTR [ebx+0x56],1
  412733:	mov    fs,WORD PTR [ebp-0x779bd06]
  412739:	jg     0x41275c
  41273b:	cmp    DWORD PTR ds:0x50246699,ecx
  412741:	enterw 0x95f9,0x6c
  412746:	in     al,dx
  412747:	mov    esi,cs
  412749:	cmc    
  41274a:	arpl   WORD PTR [ebx],si
  41274c:	aad    0x4b
  41274e:	mov    ah,0x4e
  412750:	or     DWORD PTR [edx+0x1cbc435d],edx
  412756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412757:	js     0x41276a
  412759:	jae    0x41279b
  41275b:	jp     0x4127a6
  41275d:	scas   eax,DWORD PTR es:[edi]
  41275e:	(bad)  
  41275f:	ss daa 
  412761:	cmp    ah,BYTE PTR [edx]
  412763:	pop    esi
  412764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412765:	jge    0x4127d4
  412767:	push   ecx
  412768:	cmp    al,0xc1
  41276a:	shr    BYTE PTR [edi],0x41
  41276d:	std    
  41276e:	stos   BYTE PTR es:[edi],al
  41276f:	test   ch,cl
  412771:	adc    eax,0xf7bffffe
  412776:	adc    ebx,esp
  412778:	sti    
  412779:	or     bh,BYTE PTR [edx-0x687ce879]
  41277f:	mov    esi,0x8f2db48a
  412784:	ret    
  412785:	mov    BYTE PTR ds:0xa635eef8,bl
  41278b:	mov    edi,0xdd309c93
  412790:	dec    edx
  412791:	xchg   BYTE PTR [edx],cl
  412793:	mov    edx,0xdcc27cf9
  412798:	push   ebx
  412799:	xor    eax,0xc7494367
  41279e:	and    ecx,DWORD PTR [ebp+0x31]
  4127a1:	mov    al,ds:0x48f8fdc2
  4127a6:	aas    
  4127a7:	sub    esp,DWORD PTR [esp+edi*1]
  4127aa:	jno    0x412803
  4127ac:	mov    ds:0x1a784ade,eax
  4127b1:	push   ebp
  4127b2:	test   al,0x81
  4127b4:	cmp    DWORD PTR [ebp-0x76],esp
  4127b7:	lods   eax,DWORD PTR ds:[esi]
  4127b8:	push   0xbb01752f
  4127bd:	in     al,0x3
  4127bf:	pop    ebx
  4127c0:	loop   0x41279a
  4127c2:	addr16 dec dh
  4127c5:	cs loopne 0x4127b9
  4127c8:	test   DWORD PTR [ecx+ecx*1],ebp
  4127cb:	add    eax,0x82d22248
  4127d0:	adc    dh,dh
  4127d2:	stos   DWORD PTR es:[edi],eax
  4127d3:	bound  edx,QWORD PTR [edi]
  4127d5:	aad    0xec
  4127d7:	or     eax,0xf9425dd0
  4127dc:	adc    al,0xcc
  4127de:	ja     0x41283e
  4127e0:	test   DWORD PTR [esi-0x43],ebx
  4127e3:	push   eax
  4127e4:	(bad)  
  4127e5:	jns    0x4127c5
  4127e7:	sbb    DWORD PTR [edi],esi
  4127e9:	retf   
  4127ea:	mov    WORD PTR [eax+eiz*4],?
  4127ed:	mov    esi,0xd87aeba5
  4127f2:	stc    
  4127f3:	div    BYTE PTR [eax-0x2f]
  4127f6:	(bad)  
  4127f7:	push   edi
  4127f8:	das    
  4127f9:	mov    cs,WORD PTR ds:0xc29cea37
  4127ff:	pusha  
  412800:	sti    
  412801:	cs iret 
  412803:	(bad)  
  412804:	fisubr WORD PTR [edi+0x40d29dc5]
  41280a:	inc    eax
  41280b:	mov    ch,0xc
  41280d:	rcr    BYTE PTR [edx+0x6b87b14a],cl
  412813:	loop   0x412806
  412815:	add    edx,edx
  412817:	xor    eax,DWORD PTR [ebx]
  412819:	out    0x6d,al
  41281b:	jnp    0x41280b
  41281d:	sub    al,0x37
  41281f:	jns    0x4127a5
  412821:	fmul   DWORD PTR [edi+eiz*1]
  412824:	addr16 inc edx
  412826:	sbb    ecx,DWORD PTR [eax]
  412828:	in     eax,dx
  412829:	cmp    eax,0x44e71ad9
  41282e:	jmp    0x5fec243c
  412833:	or     ah,dh
  412835:	fist   DWORD PTR [ecx]
  412837:	sub    dl,0xb5
  41283a:	jge    0x412866
  41283c:	arpl   WORD PTR [edi],bp
  41283e:	fcomp  st(7)
  412840:	aaa    
  412841:	lods   eax,DWORD PTR ds:[esi]
  412842:	add    BYTE PTR [edx+edx*2+0x17],0x0
  412847:	pusha  
  412848:	sbb    esi,esp
  41284a:	icebp  
  41284b:	sbb    al,0x3f
  41284d:	cdq    
  41284e:	jbe    0x412836
  412850:	inc    edi
  412851:	cmp    eax,0x1cbd298c
  412856:	ret    
  412857:	je     0x41289a
  412859:	neg    BYTE PTR ds:0x2894e4c6
  412860:	sub    al,0xb1
  412862:	mov    esp,DWORD PTR [ebx-0x4d]
  412865:	cs jbe 0x4128b5
  412868:	mov    ss,WORD PTR [edi+ebx*4+0x43c8cb90]
  41286f:	xor    DWORD PTR [ebx-0x4b],esp
  412872:	push   0xffffffa7
  412874:	pop    ebx
  412875:	cld    
  412876:	jae    0x412807
  412878:	jle    0x41280e
  41287a:	add    DWORD PTR [ebx+0x44a699dc],esp
  412880:	cli    
  412881:	arpl   WORD PTR [esi+0x3a678290],cx
  412887:	das    
  412888:	adc    bl,bh
  41288a:	or     al,bl
  41288c:	inc    ebp
  41288d:	out    0x16,al
  41288f:	sub    eax,0xcc6c343a
  412894:	jns    0x412877
  412896:	jbe    0x412901
  412898:	xor    al,0x28
  41289a:	mov    DWORD PTR [edx+0x28],esi
  41289d:	jl     0x412862
  41289f:	(bad)  
  4128a0:	icebp  
  4128a1:	sbb    al,0x75
  4128a3:	push   ss
  4128a4:	ja     0x4128ca
  4128a6:	ror    DWORD PTR [ecx],0x28
  4128a9:	xor    eax,0x1f431b7a
  4128ae:	xchg   DWORD PTR [ebp+0x40],ebp
  4128b1:	push   ecx
  4128b2:	cwde   
  4128b3:	jmp    0x26d54c47
  4128b8:	hlt    
  4128b9:	xor    eax,DWORD PTR ds:0xae473274
  4128bf:	lock inc esi
  4128c2:	lock push eax
  4128c4:	push   edi
  4128c5:	dec    ecx
  4128c6:	pop    eax
  4128c7:	mov    cl,0xdb
  4128c9:	pop    edx
  4128ca:	pop    ds
  4128cb:	repnz xchg ebx,eax
  4128cd:	mov    ds:0x71aba40f,eax
  4128d2:	mov    cl,0xf4
  4128d4:	sub    dh,BYTE PTR [esi-0x428eefb2]
  4128da:	dec    edi
  4128db:	cmp    eax,0x27647001
  4128e0:	sub    al,0x22
  4128e2:	inc    eax
  4128e3:	xlat   BYTE PTR ds:[ebx]
  4128e4:	loop   0x412943
  4128e6:	xchg   edi,eax
  4128e7:	lahf   
  4128e8:	dec    eax
  4128e9:	sub    bh,BYTE PTR [eax]
  4128eb:	jnp    0x4128e1
  4128ed:	mov    WORD PTR [edi+0x1431bad6],cs
  4128f3:	push   cs
  4128f4:	int3   
  4128f5:	mov    ds:0x107ee5e7,eax
  4128fa:	xor    bl,BYTE PTR [edi+eax*2-0x260aa425]
  412901:	cwd    
  412903:	cdq    
  412904:	mov    esp,0x1fad6c40
  412909:	xchg   edx,eax
  41290a:	adc    BYTE PTR [eax],al
  41290c:	lds    ecx,FWORD PTR [ebp-0x1dca2822]
  412912:	inc    edi
  412913:	xor    ebp,DWORD PTR ds:0x46e22672
  412919:	and    eax,0x7d0310f9
  41291e:	cmp    cl,BYTE PTR [edi]
  412920:	pop    esi
  412921:	call   0xdcfc:0x136932f4
  412928:	add    DWORD PTR [eax+ebp*4],0xffffffa0
  41292c:	xchg   esi,eax
  41292d:	sub    DWORD PTR [edi-0x4a],edi
  412930:	stos   DWORD PTR es:[edi],eax
  412931:	xchg   edi,eax
  412932:	xchg   edx,eax
  412933:	jnp    0x41290b
  412935:	int    0xf7
  412937:	rcl    DWORD PTR [ebp+esi*2-0x4f],1
  41293b:	mov    esi,0xd3ea9171
  412940:	add    eax,0x9ac37a1e
  412945:	pop    ds
  412946:	int3   
  412947:	aad    0x6e
  412949:	stos   DWORD PTR es:[edi],eax
  41294a:	sbb    eax,0x40c9f363
  41294f:	push   ecx
  412950:	clc    
  412951:	les    ebx,FWORD PTR [esi-0x28c5dab9]
  412957:	jbe    0x41292d
  412959:	xchg   BYTE PTR [ebx-0x61c1cc1f],ah
  41295f:	cmp    ah,BYTE PTR [edi-0x15]
  412962:	cmp    al,0x7b
  412964:	aaa    
  412965:	jmp    0x43da58b9
  41296a:	popf   
  41296b:	(bad)  [esi+0x301e4bb4]
  412971:	fnstcw WORD PTR [edi+0x3d]
  412974:	sbb    DWORD PTR [esp+eax*4-0x62509438],esp
  41297b:	lahf   
  41297c:	jmp    0x412929
  41297e:	jbe    0x41293a
  412980:	mov    cl,0xa
  412982:	std    
  412983:	pop    ds
  412984:	push   edx
  412985:	inc    ebp
  412986:	pop    ebx
  412987:	mov    bh,0x53
  412989:	push   ds
  41298a:	retf   
  41298b:	pop    eax
  41298c:	(bad)  
  41298d:	push   ebp
  41298e:	and    eax,0xc3c85539
  412993:	jmp    FWORD PTR [edi]
  412995:	xchg   DWORD PTR [edx+0x76],edx
  412998:	in     al,dx
  412999:	mov    eax,0x95060251
  41299e:	sub    BYTE PTR [edi+0x7a],ch
  4129a1:	xchg   ebp,eax
  4129a2:	jge    0x4129aa
  4129a4:	sti    
  4129a5:	sbb    eax,0x67361622
  4129aa:	sub    BYTE PTR [ecx-0x9],0xf3
  4129ae:	sub    eax,0x16eb08de
  4129b3:	in     eax,0x63
  4129b5:	fist   DWORD PTR ds:0xaedcbe79
  4129bb:	xlat   BYTE PTR ds:[ebx]
  4129bc:	mov    bh,0x35
  4129be:	loopne 0x412a34
  4129c0:	jecxz  0x412989
  4129c2:	xchg   ebp,eax
  4129c3:	ret    
  4129c4:	scas   al,BYTE PTR es:[edi]
  4129c5:	ja     0x412a00
  4129c7:	xor    bl,BYTE PTR [edx+ebx*8+0x69]
  4129cb:	sbb    dh,BYTE PTR [ebx]
  4129cd:	xlat   BYTE PTR ds:[ebx]
  4129ce:	or     bl,BYTE PTR [ebp+ecx*4+0x45ae716e]
  4129d5:	and    eax,0x48f4467d
  4129da:	push   ss
  4129db:	dec    edi
  4129dc:	and    cl,0xcb
  4129df:	mov    edi,0xbda1f3f9
  4129e4:	pop    es
  4129e5:	fadd   DWORD PTR [esi+0x3c]
  4129e8:	pop    edi
  4129e9:	xlat   BYTE PTR ds:[ebx]
  4129ea:	fadd   DWORD PTR [edx]
  4129ec:	retf   0x66
  4129ef:	hlt    
  4129f0:	pop    ebp
  4129f1:	jno    0x412a61
  4129f3:	or     DWORD PTR [edx+esi*2],esi
  4129f6:	ret    
  4129f7:	je     0x41298e
  4129f9:	stos   DWORD PTR es:[edi],eax
  4129fa:	jg     0x4129bc
  4129fc:	sub    BYTE PTR [ebp+0x29],dh
  4129ff:	(bad)  
  412a00:	popa   
  412a01:	das    
  412a02:	(bad)  
  412a03:	aad    0x50
  412a05:	xlat   BYTE PTR ds:[ebx]
  412a06:	xchg   ecx,eax
  412a07:	jl     0x4129e2
  412a09:	jbe    0x412a0b
  412a0b:	pop    ebx
  412a0c:	push   edi
  412a0d:	sbb    eax,0x10a61a21
  412a12:	enter  0x61e9,0x74
  412a16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a17:	adc    al,0x7b
  412a19:	sbb    DWORD PTR [ebx],edx
  412a1b:	(bad)  ds:0x417409d6
  412a21:	push   ds
  412a22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a23:	dec    ebx
  412a24:	rcl    BYTE PTR [edx+0x6defae95],cl
  412a2a:	pop    esi
  412a2b:	pop    edi
  412a2c:	jl     0x412a0f
  412a2e:	jmp    0x412a4a
  412a30:	adc    BYTE PTR [edi],bl
  412a32:	test   eax,0xd99a7915
  412a37:	js     0x412a74
  412a39:	test   BYTE PTR [ebp-0xc],ah
  412a3c:	mov    ds:0xae313f9e,al
  412a41:	mov    eax,ds:0xe024c1d4
  412a46:	mov    ds:0xde59ee37,eax
  412a4b:	dec    eax
  412a4c:	cli    
  412a4d:	lfs    ebx,FWORD PTR [eax+0x2882a745]
  412a54:	call   0xd24be94c
  412a59:	sbb    DWORD PTR [eax-0x3cadfc9d],edi
  412a5f:	jo     0x412ab2
  412a61:	pop    edi
  412a62:	cmp    BYTE PTR [ecx],bh
  412a64:	lods   eax,DWORD PTR ds:[esi]
  412a65:	div    BYTE PTR [esi+0x48]
  412a68:	dec    esi
  412a69:	lock mov BYTE PTR ss:[edi+edi*8],al
  412a6e:	push   cs
  412a6f:	jmp    0x83a4:0x419e40a7
  412a76:	jle    0x412ac5
  412a78:	and    dl,bh
  412a7a:	lods   al,BYTE PTR ds:[esi]
  412a7b:	addr16 das 
  412a7d:	mov    bh,BYTE PTR [ecx-0x5]
  412a80:	pop    ebp
  412a81:	lods   al,BYTE PTR ds:[esi]
  412a82:	jge    0x412a36
  412a84:	cmp    al,0xa
  412a86:	or     ebx,DWORD PTR [esi]
  412a88:	jbe    0x412ae4
  412a8a:	inc    ebx
  412a8b:	or     al,dh
  412a8d:	in     eax,0x6
  412a8f:	jne    0x412a1b
  412a91:	cmc    
  412a92:	inc    edx
  412a93:	add    cl,BYTE PTR [ecx-0x16f3da2b]
  412a99:	cmp    al,0x34
  412a9b:	and    bl,BYTE PTR [ecx]
  412a9d:	fisub  WORD PTR [eax+ecx*1]
  412aa0:	add    ebx,DWORD PTR [ebx]
  412aa2:	loop   0x412aac
  412aa4:	inc    ecx
  412aa5:	adc    DWORD PTR [esp+ebx*4],edx
  412aa8:	dec    eax
  412aa9:	push   ds
  412aaa:	jno    0x412aac
  412aac:	cwde   
  412aad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412aae:	mov    esi,0x50e0339b
  412ab3:	imul   edi,DWORD PTR [ecx+0x5eba86ac],0x88be3e88
  412abd:	push   edi
  412abe:	(bad)  
  412abf:	(bad)  [edi+0x66cb05dc]
  412ac5:	mov    es,WORD PTR [edx-0x5c4a316e]
  412acb:	mov    al,0x35
  412acd:	push   ss
  412ace:	shl    BYTE PTR [edi+0x16],1
  412ad1:	pop    esp
  412ad2:	push   ebx
  412ad3:	jae    0x412ad3
  412ad5:	in     al,0x4
  412ad7:	enter  0x342d,0xd1
  412adb:	sbb    eax,0xf5759341
  412ae0:	xor    eax,0x2fad674b
  412ae5:	dec    esp
  412ae6:	mov    bh,BYTE PTR [esi]
  412ae8:	aam    0x84
  412aea:	push   edi
  412aeb:	mov    bl,0x24
  412aed:	pushf  
  412aee:	ror    ah,0x66
  412af1:	cmp    al,0x1c
  412af3:	mov    dl,0x4d
  412af5:	sbb    eax,eax
  412af7:	lods   al,BYTE PTR ds:[esi]
  412af8:	and    ah,bl
  412afa:	outs   dx,BYTE PTR ds:[esi]
  412afb:	inc    edx
  412afc:	and    ah,ah
  412afe:	retf   0x642d
  412b01:	and    BYTE PTR [edx-0xa554850],ch
  412b07:	fcmovbe st,st(6)
  412b09:	lods   al,BYTE PTR ds:[esi]
  412b0a:	ins    BYTE PTR es:[edi],dx
  412b0b:	xchg   edx,eax
  412b0c:	fdiv   DWORD PTR [edx+0x66a65fe]
  412b12:	sub    BYTE PTR [edx-0x613bb0df],cl
  412b18:	scas   al,BYTE PTR es:[edi]
  412b19:	and    bl,BYTE PTR [edi+eiz*1]
  412b1c:	pop    eax
  412b1d:	repnz fmul st(7),st
  412b20:	xlat   BYTE PTR ds:[ebx]
  412b21:	sub    eax,0xfc7bd7e1
  412b26:	cs nop
  412b28:	jno    0x412b73
  412b2a:	int    0x80
  412b2c:	push   edx
  412b2d:	out    dx,eax
  412b2e:	sub    eax,0xc9d48426
  412b33:	icebp  
  412b34:	jno    0x412b2e
  412b36:	push   esp
  412b37:	xor    esi,edx
  412b39:	and    al,0xb8
  412b3b:	sar    dh,0xd
  412b3e:	pop    edx
  412b3f:	repz sbb al,0x18
  412b42:	ja     0x412acb
  412b44:	cld    
  412b45:	fs scas al,BYTE PTR es:[edi]
  412b47:	mov    dl,0xff
  412b49:	jmp    0xfa89:0x34df211f
  412b50:	or     al,0x95
  412b52:	and    eax,0x264db63a
  412b57:	inc    edx
  412b58:	xchg   esp,eax
  412b59:	rcl    BYTE PTR [edx-0x12],1
  412b5c:	loope  0x412b6f
  412b5e:	mov    eax,0x3b29ed84
  412b63:	sar    BYTE PTR [eax+0x6b2b8c3e],0x76
  412b6a:	in     al,dx
  412b6b:	mov    ah,0x2a
  412b6d:	pushf  
  412b6e:	pop    ss
  412b6f:	popf   
  412b70:	imul   ebp,ecx,0x33
  412b73:	out    dx,al
  412b74:	or     al,0xdb
  412b76:	mov    bl,0xaa
  412b78:	sbb    esp,DWORD PTR [edi-0x2]
  412b7b:	push   esp
  412b7c:	push   ebx
  412b7d:	sub    al,0xc0
  412b7f:	push   0x23bcc99b
  412b84:	pushf  
  412b85:	cli    
  412b86:	stc    
  412b87:	jne    0x412b79
  412b89:	mov    BYTE PTR [ebp-0x7f],al
  412b8c:	dec    ebx
  412b8d:	mov    edi,0xfe258d23
  412b92:	dec    ebx
  412b93:	data16 je 0x412bce
  412b96:	or     al,0xdc
  412b98:	loop   0x412bbf
  412b9a:	shr    BYTE PTR [ebx+ebx*2-0x49],0x21
  412b9f:	pop    ebp
  412ba0:	inc    eax
  412ba1:	add    WORD PTR [ebx+0x66],di
  412ba5:	and    esi,DWORD PTR [eax]
  412ba7:	mov    ebp,esp
  412ba9:	loopne 0x412bd5
  412bab:	fsubr  DWORD PTR [ebx+0x2a]
  412bae:	adc    dl,BYTE PTR [bp+0x9]
  412bb2:	int3   
  412bb3:	mov    cl,0x41
  412bb5:	xchg   BYTE PTR [ebp-0x7c20dbd9],cl
  412bbb:	dec    ebp
  412bbc:	dec    esi
  412bbd:	ror    DWORD PTR [ebx+0x0],1
  412bc0:	clc    
  412bc1:	js     0x412b47
  412bc3:	enter  0x615e,0x84
  412bc7:	mov    edx,0x7e1adb6f
  412bcc:	sti    
  412bcd:	adc    BYTE PTR [edx-0xe],0x4a
  412bd1:	jmp    0x412c33
  412bd3:	and    DWORD PTR [ebx-0x5686e4d3],0x1a331801
  412bdd:	mov    bl,0x3
  412bdf:	shl    DWORD PTR [ecx],0x3a
  412be2:	xchg   ebx,eax
  412be3:	out    dx,eax
  412be4:	inc    esp
  412be5:	(bad)  
  412be6:	mov    ebp,0x92aa0835
  412beb:	fmul   QWORD PTR [edi-0x6717f780]
  412bf1:	arpl   WORD PTR [ebp+0x12],di
  412bf4:	inc    ebp
  412bf5:	dec    esp
  412bf6:	scas   eax,DWORD PTR es:[edi]
  412bf7:	fadd   DWORD PTR [ecx]
  412bf9:	xor    eax,ebx
  412bfb:	iret   
  412bfc:	xchg   ebx,eax
  412bfd:	nop
  412bfe:	fs pop ss
  412c00:	pushf  
  412c01:	cli    
  412c02:	popa   
  412c03:	inc    edx
  412c04:	in     al,0xa4
  412c06:	jns    0x412b8d
  412c08:	mov    ch,0x1f
  412c0a:	and    al,0x71
  412c0c:	call   0x11d6f466
  412c11:	not    BYTE PTR [eax]
  412c13:	sub    esp,DWORD PTR [esi-0x47]
  412c16:	out    dx,al
  412c17:	and    al,0xf7
  412c19:	out    dx,al
  412c1a:	xor    DWORD PTR [ebp+0x23],esp
  412c1d:	lock or bh,al
  412c20:	ins    DWORD PTR es:[edi],dx
  412c21:	shr    DWORD PTR [edx],0x78
  412c24:	cmp    BYTE PTR [eax+eiz*8+0x50],0x21
  412c29:	iret   
  412c2a:	pop    edi
  412c2b:	mov    al,ds:0x4d03cbe5
  412c30:	fstp   QWORD PTR [edi]
  412c32:	or     ecx,DWORD PTR [edx-0x86b4836]
  412c38:	cld    
  412c39:	cli    
  412c3a:	call   FWORD PTR [eax]
  412c3c:	(bad)  
  412c3d:	in     al,0x22
  412c3f:	sub    ah,BYTE PTR [ebx]
  412c41:	mov    al,0x0
  412c43:	push   edx
  412c44:	lahf   
  412c45:	xor    BYTE PTR [eax-0x57295089],ch
  412c4b:	xchg   ecx,ecx
  412c4d:	xor    cl,BYTE PTR [edi-0x4b52dc58]
  412c53:	fisub  DWORD PTR [edi]
  412c55:	cmp    ebx,DWORD PTR [esp+eiz*8]
  412c58:	sbb    BYTE PTR [esi],0xc0
  412c5b:	pop    ds
  412c5c:	add    esi,edi
  412c5e:	jo     0x412beb
  412c60:	push   0x73
  412c62:	fcomi  st,st(6)
  412c64:	sbb    DWORD PTR [esi+0x55],0x3953a465
  412c6b:	and    al,0xea
  412c6d:	pushf  
  412c6e:	xor    al,0xd7
  412c70:	stos   DWORD PTR es:[edi],eax
  412c71:	lds    edx,FWORD PTR [eax-0x7e]
  412c74:	outs   dx,BYTE PTR ds:[esi]
  412c75:	jnp    0x412c30
  412c77:	mov    cl,0xdb
  412c79:	pop    ecx
  412c7a:	and    ch,BYTE PTR [ebx+ebp*4-0x7af4eca0]
  412c81:	mov    dh,0x8e
  412c83:	or     al,ah
  412c85:	or     al,0xbd
  412c87:	add    al,0x4d
  412c89:	xchg   ebp,eax
  412c8a:	add    bh,cl
  412c8c:	mov    esp,DWORD PTR [ecx]
  412c8e:	cmp    DWORD PTR ds:0x76a54733,esi
  412c94:	jg     0x412c1c
  412c96:	xchg   esi,eax
  412c97:	sub    BYTE PTR [esi-0x3e],al
  412c9a:	or     DWORD PTR [eax+0x24fcfdce],edi
  412ca0:	sti    
  412ca1:	(bad)  
  412ca2:	(bad)  
  412ca3:	pop    eax
  412ca4:	and    al,0xc2
  412ca6:	sub    esi,eax
  412ca8:	scas   al,BYTE PTR es:[edi]
  412ca9:	push   ebp
  412caa:	push   esp
  412cac:	pop    ds
  412cad:	sahf   
  412cae:	aad    0xb5
  412cb0:	jbe    0x412ccb
  412cb2:	sbb    esp,DWORD PTR [ecx]
  412cb4:	nop
  412cb5:	add    ebx,ecx
  412cb7:	sbb    esp,DWORD PTR [esi+0x27b639c8]
  412cbd:	push   ds
  412cbe:	fcomp  QWORD PTR [ebx+ebx*8-0x47]
  412cc2:	mov    ecx,0xc8ff2fff
  412cc7:	and    DWORD PTR [ebx+0x32],eax
  412cca:	mov    edi,0xb64ca8ab
  412ccf:	pop    ebx
  412cd0:	jecxz  0x412c80
  412cd2:	add    al,0xe9
  412cd4:	rcl    dl,cl
  412cd6:	ins    DWORD PTR es:[edi],dx
  412cd7:	cmp    eax,0x854241ac
  412cdc:	or     DWORD PTR [ecx+0x5dfa3622],esp
  412ce2:	sbb    al,0x5a
  412ce4:	jne    0x412c7a
  412ce6:	into   
  412ce7:	out    0xab,al
  412ce9:	dec    eax
  412cea:	or     al,0x9c
  412cec:	jns    0x412d48
  412cee:	jno    0x412cf0
  412cf0:	aad    0x78
  412cf2:	add    edi,ebp
  412cf4:	pop    ds
  412cf5:	mov    DWORD PTR [eax+0x10beeb67],0x6f701f86
  412cff:	lods   al,BYTE PTR ds:[esi]
  412d00:	mov    ebx,0x1a6c2577
  412d05:	sbb    ebx,DWORD PTR [esi+0x5877bec9]
  412d0b:	sub    BYTE PTR [ebp+0x5e5bb76],0xb0
  412d12:	outs   dx,BYTE PTR ds:[esi]
  412d13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d14:	into   
  412d15:	les    edx,FWORD PTR [edx-0x7218921d]
  412d1b:	retf   0x358f
  412d1e:	jae    0x412d86
  412d20:	or     DWORD PTR [eax-0x4997eb51],0x811b5dfd
  412d2a:	mov    esp,DWORD PTR [edi*2-0x28e4648f]
  412d31:	repnz not al
  412d34:	lock mov al,ds:0x9a96f212
  412d3a:	sbb    al,0x1b
  412d3c:	sar    DWORD PTR [ecx+0x7f608ed5],0x65
  412d43:	stc    
  412d44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d45:	loopne 0x412d43
  412d47:	xor    bh,BYTE PTR [edx]
  412d49:	test   DWORD PTR [ebp-0x68],ebx
  412d4c:	xor    BYTE PTR [esi+0x2f139477],ch
  412d52:	sbb    ecx,DWORD PTR [edx+0x22]
  412d55:	rcl    DWORD PTR [edx+0x610a8f],cl
  412d5b:	outs   dx,BYTE PTR ds:[esi]
  412d5c:	cld    
  412d5d:	push   ebx
  412d5e:	aad    0xe5
  412d60:	mov    BYTE PTR [edi],cl
  412d62:	arpl   WORD PTR [eax+0x31],si
  412d65:	and    BYTE PTR [ebp-0x59],cl
  412d68:	push   eax
  412d69:	mov    ebx,0xcb6d627f
  412d6e:	xor    al,0xc5
  412d70:	aaa    
  412d71:	jmp    0x412d7e
  412d73:	imul   eax,DWORD PTR [edx],0x2b637a60
  412d79:	cdq    
  412d7a:	and    eax,0x22f4add8
  412d7f:	sub    DWORD PTR [ebx+0x2819bde7],ebx
  412d85:	mov    BYTE PTR [edi-0x407ed5d7],dl
  412d8b:	jmp    0xd75a7e2b
  412d90:	pop    eax
  412d91:	out    dx,al
  412d92:	sbb    al,BYTE PTR [ebx-0x3e]
  412d95:	jecxz  0x412d7d
  412d97:	mov    esp,0xafedd7b6
  412d9c:	adc    ch,BYTE PTR [eax+esi*1]
  412d9f:	mov    eax,ds:0x88d95617
  412da4:	ds aaa 
  412da6:	inc    edi
  412da7:	xchg   edx,eax
  412da8:	push   0x1139bcbb
  412dad:	jae    0x412d8b
  412daf:	loope  0x412d91
  412db1:	dec    esi
  412db2:	cdq    
  412db3:	scas   eax,DWORD PTR es:[edi]
  412db4:	or     al,0x31
  412db6:	push   ebx
  412db7:	adc    eax,0x4d1408f0
  412dbc:	adc    BYTE PTR [esi],bh
  412dbe:	pusha  
  412dbf:	sbb    BYTE PTR [ecx+esi*4-0x6e],0x89
  412dc4:	and    dl,cl
  412dc6:	enter  0xa626,0x69
  412dca:	or     DWORD PTR [esi+0x3],esi
  412dcd:	in     eax,0xee
  412dcf:	mov    dh,0xbc
  412dd1:	cmp    eax,0xff58d654
  412dd6:	aam    0xba
  412dd8:	inc    edx
  412dd9:	cmp    ebx,DWORD PTR es:[esi+edi*4-0x34]
  412dde:	adc    al,0x5c
  412de0:	mov    ebp,ebp
  412de2:	and    al,0xc3
  412de4:	push   ss
  412de5:	sub    bh,BYTE PTR [ebx]
  412de7:	hlt    
  412de8:	shl    BYTE PTR [edi],0xe0
  412deb:	add    BYTE PTR [ecx-0x31],ah
  412dee:	mov    ecx,0x21de51a0
  412df3:	add    DWORD PTR [ecx+0x6f],edx
  412df6:	enter  0x81f3,0x7c
  412dfa:	adc    ebx,DWORD PTR [eax]
  412dfc:	out    0xbf,al
  412dfe:	in     al,dx
  412dff:	sub    DWORD PTR [ebp+eiz*8+0x4c],esi
  412e03:	jmp    0x72a38ebe
  412e08:	mov    dl,0xca
  412e0a:	pop    ebx
  412e0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e0c:	(bad)  
  412e0d:	cmp    eax,0x46d392b8
  412e12:	sbb    bl,BYTE PTR [ebx+0x182d16c4]
  412e18:	and    al,0xdc
  412e1a:	or     BYTE PTR cs:[eax],ah
  412e1d:	pop    esp
  412e1e:	bnd jb 0x412df8
  412e21:	lods   al,BYTE PTR ds:[esi]
  412e22:	mov    eax,ss
  412e24:	test   al,0x3d
  412e26:	jmp    0xd88bed27
  412e2b:	and    BYTE PTR [ebp-0x73653c6e],dh
  412e31:	dec    esp
  412e32:	(bad)  
  412e34:	aam    0xc4
  412e36:	jp     0x412e48
  412e38:	mov    BYTE PTR ds:0x1444fd0d,al
  412e3e:	inc    eax
  412e3f:	bts    esi,esi
  412e42:	mov    edi,0x827e02a4
  412e47:	stc    
  412e48:	dec    edi
  412e49:	retf   
  412e4a:	in     al,dx
  412e4b:	loop   0x412e0c
  412e4d:	push   cs
  412e4e:	jb     0x412eb7
  412e50:	sub    edi,edi
  412e52:	mov    dl,BYTE PTR [edi+0x5a58e3e1]
  412e58:	cmp    ah,BYTE PTR [edx]
  412e5a:	loopne 0x412ea2
  412e5c:	inc    edx
  412e5d:	fistp  DWORD PTR [esi+0x32312d4]
  412e63:	inc    BYTE PTR [esi]
  412e65:	cmp    cl,BYTE PTR [edx-0x1b]
  412e68:	aam    0xe7
  412e6a:	or     al,0xa9
  412e6c:	enter  0xe8e0,0x8a
  412e70:	sbb    ch,BYTE PTR [edx+0x3beb83d0]
  412e76:	sbb    al,0x3c
  412e78:	mov    al,0xbb
  412e7a:	xchg   BYTE PTR [ecx-0x72],ch
  412e7d:	mov    ss,WORD PTR [ecx]
  412e7f:	mov    al,ds:0x159551ad
  412e84:	push   edi
  412e85:	imul   ecx,ebp,0x32bb2af3
  412e8b:	sub    esp,ebx
  412e8d:	xor    BYTE PTR [ebp-0x151ee82c],cl
  412e93:	ret    
  412e94:	fisubr DWORD PTR [eax]
  412e96:	mov    WORD PTR [esi],es
  412e98:	fnstsw WORD PTR [ecx+ebp*2-0xc]
  412e9c:	js     0x412ee8
  412e9e:	lds    edi,FWORD PTR ds:0x2c2019fa
  412ea4:	in     al,0x8d
  412ea6:	cmc    
  412ea7:	pop    ebx
  412ea8:	aam    0x5b
  412eaa:	xchg   ebx,eax
  412eab:	ins    DWORD PTR es:[edi],dx
  412eac:	jle    0x412e82
  412eae:	mov    ds:0x8ac29066,eax
  412eb3:	or     edx,edi
  412eb5:	jge    0x412e4f
  412eb7:	bound  ebp,QWORD PTR [ebx+0x70]
  412eba:	sar    BYTE PTR [edi+0x4b391216],0x36
  412ec1:	bound  ebp,QWORD PTR [edx+0x76cfaecd]
  412ec7:	mov    esi,0xe6a1a18d
  412ecc:	sbb    DWORD PTR [esi+0x20],esp
  412ecf:	arpl   WORD PTR [edx+0x3d8b0e6d],dx
  412ed5:	fiadd  DWORD PTR [edi]
  412ed7:	adc    DWORD PTR fs:[ebx-0x57],0x57
  412edc:	out    0xde,eax
  412ede:	js     0x412e90
  412ee0:	or     al,0x9d
  412ee2:	cmp    BYTE PTR [edx+ecx*2+0x65],ch
  412ee6:	rcl    BYTE PTR [eax+eiz*8],1
  412ee9:	adc    cl,dh
  412eeb:	cwde   
  412eec:	push   0x19
  412eee:	cmc    
  412eef:	sbb    edi,ebp
  412ef1:	push   ebx
  412ef2:	test   BYTE PTR [ebx-0x50],al
  412ef5:	mov    ebp,0xa3dfe972
  412efa:	push   0xffffffdd
  412efc:	jmp    0x955d:0x3edbd5a1
  412f03:	mov    esi,0xec252f12
  412f08:	sbb    DWORD PTR [eax+0xe8ccc7d],edi
  412f0e:	xor    al,0xd6
  412f10:	bound  edx,QWORD PTR [edi+0x4e0c1495]
  412f16:	dec    ecx
  412f17:	leave  
  412f18:	bound  esi,QWORD PTR [ecx]
  412f1a:	ins    DWORD PTR es:[edi],dx
  412f1b:	pop    ecx
  412f1c:	das    
  412f1d:	dec    esp
  412f1e:	xchg   ebx,eax
  412f1f:	inc    esi
  412f20:	sbb    esi,ebx
  412f22:	dec    ecx
  412f23:	call   0x8ee97a79
  412f28:	jmp    0x87922e65
  412f2d:	xlat   BYTE PTR ds:[ebx]
  412f2e:	out    dx,eax
  412f2f:	jbe    0x412f39
  412f31:	xor    BYTE PTR [edx+0x3e],dh
  412f34:	ja     0x412ed9
  412f36:	xchg   BYTE PTR [edi-0x50834e4c],bl
  412f3c:	das    
  412f3d:	add    al,0xb1
  412f3f:	pop    ebx
  412f40:	shr    esi,0x70
  412f43:	cdq    
  412f44:	lea    eax,es:[ecx]
  412f47:	scas   eax,DWORD PTR es:[edi]
  412f48:	xor    eax,DWORD PTR [eiz*2+0x138f8fa4]
  412f4f:	icebp  
  412f50:	out    dx,al
  412f51:	scas   al,BYTE PTR es:[edi]
  412f52:	add    al,0xe5
  412f54:	test   BYTE PTR [ecx-0x26],ah
  412f57:	leave  
  412f58:	ins    DWORD PTR es:[edi],dx
  412f59:	rcr    DWORD PTR [ecx-0x204b2fa2],cl
  412f5f:	call   0x5b74:0xadaabcd3
  412f66:	or     bl,BYTE PTR [esp+eax*8+0x1a]
  412f6a:	fcom   QWORD PTR [esi-0x7cb4029]
  412f70:	adc    al,ah
  412f72:	jmp    0x412fab
  412f74:	loope  0x412fde
  412f76:	dec    edi
  412f77:	cs popa 
  412f79:	test   eax,0xcb662bb2
  412f7e:	xchg   edx,eax
  412f7f:	stc    
  412f80:	xchg   ebp,eax
  412f81:	pop    ss
  412f82:	lds    ecx,FWORD PTR [edx+0x3b]
  412f85:	ins    DWORD PTR es:[edi],dx
  412f86:	xchg   DWORD PTR [edi],esp
  412f88:	pop    ebx
  412f89:	pop    esp
  412f8a:	es in  eax,0x87
  412f8d:	or     al,0xd9
  412f8f:	mov    eax,0x243cf35a
  412f94:	xchg   esp,eax
  412f95:	jno    0x412f9c
  412f97:	cmp    eax,0x6165cf74
  412f9c:	sbb    ch,0x80
  412f9f:	mov    WORD PTR [ebx],?
  412fa1:	push   esp
  412fa2:	loope  0x412fce
  412fa4:	fwait
  412fa5:	inc    esi
  412fa6:	xchg   edi,eax
  412fa7:	in     al,dx
  412fa8:	jb     0x412f4f
  412faa:	push   edx
  412fab:	ds mov eax,0xff77f77e
  412fb1:	(bad)  
  412fb2:	jb     0x412fb7
  412fb4:	cmp    al,0x71
  412fb6:	jb     0x413006
  412fb8:	and    cl,BYTE PTR [esi-0x7906dd3e]
  412fbe:	fstp   QWORD PTR ds:0x1e4d0344
  412fc4:	add    eax,0x8552e28c
  412fc9:	pop    edx
  412fca:	cli    
  412fcb:	push   ebp
  412fcc:	push   ecx
  412fcd:	add    BYTE PTR [edx-0x64bd4572],bl
  412fd3:	scas   eax,DWORD PTR es:[edi]
  412fd4:	das    
  412fd5:	sbb    esi,edi
  412fd7:	push   esi
  412fd8:	cmp    DWORD PTR [esi],edi
  412fda:	inc    ebp
  412fdb:	(bad)  
  412fdc:	hlt    
  412fdd:	lods   eax,DWORD PTR ds:[esi]
  412fde:	inc    eax
  412fdf:	mov    ecx,0x50990562
  412fe4:	push   DWORD PTR [ebp-0x6bf9035a]
  412fea:	ds int3 
  412fec:	adc    DWORD PTR [eax-0x70ec4cce],esi
  412ff2:	lods   al,BYTE PTR ds:[esi]
  412ff3:	xchg   edx,eax
  412ff4:	stos   DWORD PTR es:[edi],eax
  412ff5:	inc    esi
  412ff6:	in     eax,0x13
  412ff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ff9:	adc    BYTE PTR [eax+0x399ab4b3],dl
  412fff:	jmp    0xa25:0x471757f1
  413006:	pop    esi
  413007:	cli    
  413008:	pop    ss
  413009:	into   
  41300a:	mov    eax,ds:0x6b8dba44
  41300f:	xor    al,0xcf
  413011:	cs xchg esp,eax
  413013:	imul   ecx,DWORD PTR [edx],0x5ad84a25
  413019:	scas   al,BYTE PTR es:[edi]
  41301a:	adc    ch,dl
  41301c:	hlt    
  41301d:	push   edx
  41301e:	jl     0x413073
  413020:	out    dx,al
  413021:	inc    ebp
  413022:	rol    BYTE PTR [edi+0x4b],cl
  413025:	inc    BYTE PTR [esp+ebp*8-0x1f04b6d5]
  41302c:	fldcw  WORD PTR [ecx+edx*2-0x2065f950]
  413033:	mov    ds:0x7b04b2ee,eax
  413038:	arpl   WORD PTR [ebx+esi*2-0x50],bp
  41303c:	addr16 inc edi
  41303e:	std    
  41303f:	xor    BYTE PTR [edi],ah
  413041:	push   cs
  413042:	inc    ebp
  413043:	add    BYTE PTR [eax+0x78d6d21b],dh
  413049:	add    eax,0xdea7649
  41304e:	mov    ebx,0xa01b3863
  413053:	retf   0xac2d
  413056:	mov    gs,WORD PTR [esi+0x29]
  413059:	jge    0x413046
  41305b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41305c:	xlat   BYTE PTR fs:[ebx]
  41305e:	call   0xa141023a
  413063:	enter  0x367b,0x45
  413067:	retf   
  413068:	lods   al,BYTE PTR ds:[esi]
  413069:	sar    BYTE PTR [ecx-0x43],0x9
  41306d:	outs   dx,BYTE PTR ds:[esi]
  41306e:	mov    ds:0x67af1d2d,eax
  413073:	retf   0x3161
  413076:	cmp    cl,BYTE PTR [ecx-0x3a3f781e]
  41307c:	or     DWORD PTR [eax+0x62],ebp
  41307f:	and    BYTE PTR [edx],dh
  413081:	mov    eax,DWORD PTR [ecx+0x38]
  413084:	jp     0x41305b
  413086:	xchg   BYTE PTR [edx],ah
  413088:	mov    DWORD PTR [eax+0x48],edi
  41308b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41308c:	mov    eax,ds:0x883da364
  413091:	call   0x2523:0xf9f8bf2a
  413098:	mov    eax,ds:0x34ee8d16
  41309d:	xor    al,0xa3
  41309f:	ret    0xa437
  4130a2:	bound  esp,QWORD PTR [ebx-0x39]
  4130a5:	out    dx,eax
  4130a6:	push   0x8bd129fd
  4130ab:	xchg   ebp,eax
  4130ac:	shr    DWORD PTR [ebx+0x5f40658d],1
  4130b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130b3:	xchg   esp,eax
  4130b4:	add    BYTE PTR [di],ah
  4130b7:	ins    DWORD PTR es:[edi],dx
  4130b8:	add    ecx,DWORD PTR [bx]
  4130bb:	add    al,BYTE PTR [ebp+0x42]
  4130be:	enter  0x3ecc,0xd1
  4130c2:	nop
  4130c3:	add    BYTE PTR [edx],bh
  4130c5:	fdiv   QWORD PTR [ecx]
  4130c7:	enter  0xb795,0xc9
  4130cb:	scas   eax,DWORD PTR es:[edi]
  4130cc:	or     al,0xc0
  4130ce:	mov    DWORD PTR [ebx+0x73836f48],ecx
  4130d4:	aad    0x7b
  4130d6:	sub    esp,DWORD PTR [eax-0x5]
  4130d9:	push   edi
  4130da:	pop    ss
  4130db:	or     al,0xb3
  4130dd:	inc    ecx
  4130de:	test   eax,0x4a08da9b
  4130e3:	xor    DWORD PTR [ecx],edx
  4130e5:	pop    sp
  4130e7:	sahf   
  4130e8:	cli    
  4130e9:	add    ah,BYTE PTR [edx+0x52]
  4130ec:	add    al,BYTE PTR [edx]
  4130ee:	jno    0x4130f4
  4130f0:	xor    BYTE PTR [ecx],dh
  4130f2:	rcl    BYTE PTR ds:0x2aec508b,cl
  4130f8:	cs dec ebp
  4130fa:	sub    DWORD PTR ds:[edi+0xf1edde4],ecx
  413101:	mov    al,ds:0xc952c29
  413106:	dec    edx
  413107:	sub    eax,DWORD PTR [ecx+eax*4]
  41310a:	hlt    
  41310b:	mov    esp,0x58789c5d
  413110:	ret    
  413111:	push   0x7a
  413113:	out    0x17,al
  413115:	and    eax,0x455895a
  41311a:	outs   dx,DWORD PTR ds:[esi]
  41311b:	test   al,0xf4
  41311d:	add    eax,0x89dcf372
  413122:	sub    eax,0xd24d3475
  413127:	push   ecx
  413128:	cmp    al,0xad
  41312a:	scas   al,BYTE PTR es:[edi]
  41312b:	fild   QWORD PTR [esi+eax*4]
  41312e:	(bad)  
  41312f:	es mov cl,0x9f
  413132:	dec    ecx
  413133:	stos   DWORD PTR es:[edi],eax
  413134:	push   ds
  413135:	fdivr  QWORD PTR [edi-0x22d1d4eb]
  41313b:	push   ebx
  41313c:	dec    bx
  41313e:	pop    edx
  41313f:	mov    dh,0xd8
  413141:	sub    eax,0xeb94f5fd
  413146:	xor    ebx,DWORD PTR [eax+ebx*4-0x7476b199]
  41314d:	mov    al,ds:0x501043e2
  413152:	pop    esp
  413153:	in     eax,dx
  413154:	jae    0x413180
  413156:	pop    eax
  413157:	fstp   DWORD PTR [eax+esi*4]
  41315a:	add    dh,ah
  41315c:	retf   0x81db
  41315f:	jg     0x413188
  413161:	adc    eax,0xc6a690c
  413166:	fdiv   DWORD PTR [ecx+0xdf031aa]
  41316c:	xchg   DWORD PTR [esi+0x544fd4e0],edi
  413172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413173:	es xchg ecx,eax
  413175:	pushf  
  413176:	jnp    0x41314a
  413178:	test   al,dh
  41317a:	in     eax,0xb1
  41317c:	loop   0x4131ea
  41317e:	(bad)  
  41317f:	call   0x215521a0
  413184:	or     BYTE PTR [esp+eiz*8+0x1d9eb46c],0xee
  41318c:	in     eax,dx
  41318d:	dec    BYTE PTR [ecx+eiz*1]
  413190:	inc    edx
  413191:	xlat   BYTE PTR ds:[ebx]
  413192:	adc    esp,DWORD PTR [esi]
  413194:	cmp    al,ah
  413196:	xchg   esp,eax
  413197:	in     al,dx
  413198:	mov    al,0xc0
  41319a:	lock (bad) [eax+0x68928c9]
  4131a1:	ins    DWORD PTR es:[edi],dx
  4131a2:	xchg   edi,eax
  4131a3:	xor    ebp,DWORD PTR ds:0xe3ccdd63
  4131a9:	fdivr  DWORD PTR [ebx+0x7f]
  4131ac:	jnp    0x4131c6
  4131ae:	fsqrt  
  4131b0:	cmp    BYTE PTR [edx+0x74],bl
  4131b3:	push   esp
  4131b4:	or     bh,dh
  4131b6:	jb     0x4131d6
  4131b8:	xor    eax,0x31569207
  4131bd:	or     eax,ebp
  4131bf:	dec    esp
  4131c0:	addr16 pop ds
  4131c2:	es add eax,0x6b4fb545
  4131c8:	(bad)  
  4131c9:	shr    BYTE PTR [eax],1
  4131cb:	fs stc 
  4131cd:	xor    ebx,DWORD PTR es:0xcadda409
  4131d4:	fdivr  DWORD PTR ds:0x6ccb9296
  4131db:	iret   
  4131dc:	outs   dx,BYTE PTR ds:[esi]
  4131dd:	fcmovu st,st(1)
  4131df:	cs xchg ebx,eax
  4131e1:	inc    ecx
  4131e2:	push   esi
  4131e3:	and    dl,BYTE PTR [edx-0x5c70b9e5]
  4131e9:	xor    eax,0x11fc64a
  4131ee:	es pop eax
  4131f0:	rcl    ebx,0xbe
  4131f3:	mov    ebx,0xe7b701e2
  4131f8:	xor    BYTE PTR [eax+0x420d84b6],ah
  4131fe:	stos   BYTE PTR es:[edi],al
  4131ff:	jnp    0x413239
  413201:	or     al,0xe
  413203:	add    edx,esp
  413205:	push   ebx
  413206:	repz dec edx
  413208:	mov    WORD PTR [ebp-0x34],es
  41320b:	jmp    0xe82df67
  413210:	push   0x2a
  413212:	jle    0x4131cf
  413214:	dec    edx
  413215:	mov    edx,0x616ee19
  41321a:	jg     0x413265
  41321c:	imul   ebp,ebx,0xffffff8a
  41321f:	(bad)  
  413220:	adc    BYTE PTR [edx+0x2f321573],cl
  413226:	inc    ebx
  413227:	mov    eax,ds:0x23695c61
  41322c:	inc    ebp
  41322d:	pop    esp
  41322e:	in     eax,0xa1
  413230:	add    edi,edi
  413232:	xor    dl,BYTE PTR [ecx+0x22588513]
  413238:	(bad)  
  413239:	jo     0x41325e
  41323b:	mov    bl,0x6a
  41323d:	xor    esp,DWORD PTR [ecx]
  41323f:	in     al,0x12
  413241:	jnp    0x4131e1
  413243:	add    BYTE PTR [edi],bl
  413245:	adc    DWORD PTR [ebp+0x913069f],edi
  41324b:	stos   BYTE PTR es:[edi],al
  41324c:	jp     0x4132b0
  41324e:	cmp    BYTE PTR [eax+0x4035aea1],al
  413254:	add    bh,0x88
  413257:	ret    0x305b
  41325a:	mov    eax,DWORD PTR [edi]
  41325c:	xchg   ebx,eax
  41325d:	or     al,0xa8
  41325f:	push   ecx
  413260:	inc    esi
  413261:	into   
  413262:	jbe    0x413225
  413264:	scas   eax,DWORD PTR es:[edi]
  413265:	push   eax
  413266:	cld    
  413267:	stc    
  413268:	xchg   esi,eax
  413269:	(bad)  
  41326b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41326c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41326d:	jmp    0xfe4a:0x65da4673
  413274:	push   0xfffffffa
  413276:	jp     0x4132a4
  413278:	pusha  
  413279:	dec    eax
  41327a:	cmp    esi,DWORD PTR [edi+ebp*8+0x3beced4b]
  413281:	retf   0x2613
  413284:	imul   esp,edi,0xffffff82
  413287:	or     DWORD PTR [edi+0x7b216103],edx
  41328d:	imul   ebx,DWORD PTR [ecx+0x3034ac30],0x8f5b6c38
  413297:	xor    DWORD PTR [ebx+0xc],edi
  41329a:	repnz lods al,BYTE PTR ds:[esi]
  41329c:	bound  edx,QWORD PTR [ecx-0x7ccfbc85]
  4132a2:	test   eax,0xc838d763
  4132a7:	mov    edi,0xc932bbe7
  4132ac:	test   DWORD PTR [ebx+ebp*2-0x20],esi
  4132b0:	loope  0x41324b
  4132b2:	clc    
  4132b3:	xchg   edi,eax
  4132b4:	xchg   ecx,eax
  4132b5:	std    
  4132b6:	ja     0x4132a4
  4132b8:	cmc    
  4132b9:	pop    edx
  4132ba:	clc    
  4132bb:	(bad)  
  4132bd:	sti    
  4132be:	loope  0x413338
  4132c0:	int3   
  4132c1:	imul   edi,DWORD PTR [ebp+0x38e9aa0f],0xffffffae
  4132c8:	fs pop edi
  4132ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132cb:	test   DWORD PTR [ebx-0x1b],esp
  4132ce:	call   0x18fd22a6
  4132d3:	call   0x86f76e42
  4132d8:	or     al,0x66
  4132da:	out    dx,eax
  4132db:	inc    edx
  4132dc:	popa   
  4132dd:	mov    ch,0x1
  4132df:	fadd   QWORD PTR [ecx+ecx*2-0x35]
  4132e3:	ss push ds
  4132e5:	xor    esi,edi
  4132e7:	sub    eax,DWORD PTR [edi+ebx*4-0x5a]
  4132eb:	pop    eax
  4132ec:	arpl   cx,si
  4132ee:	add    dl,BYTE PTR [ecx]
  4132f0:	push   0x6a798f6c
  4132f5:	push   esi
  4132f6:	push   eax
  4132f7:	adc    DWORD PTR [edx-0x5c],edx
  4132fa:	and    al,0xaa
  4132fc:	push   es
  4132fd:	pop    esi
  4132fe:	pop    eax
  4132ff:	xor    esi,DWORD PTR [esi]
  413301:	fadd   st,st(3)
  413303:	adc    dl,BYTE PTR [eiz*4-0x100ab419]
  41330a:	ror    BYTE PTR [edx],1
  41330c:	mov    ch,0x54
  41330e:	lods   al,BYTE PTR ds:[esi]
  41330f:	test   DWORD PTR [edi],esp
  413311:	xor    eax,0xc3dda43f
  413316:	call   0x9b50:0x99557ef7
  41331d:	je     0x4132ac
  41331f:	mov    bh,BYTE PTR [ebp+0x35]
  413322:	cmp    DWORD PTR [edx+0x39097e72],ecx
  413328:	jge    0x41333b
  41332a:	cmc    
  41332b:	push   ecx
  41332c:	out    dx,al
  41332d:	fsub   QWORD PTR [edi-0x5ff29325]
  413333:	pop    ecx
  413334:	imul   DWORD PTR [eax+0x386bf207]
  41333a:	(bad)  
  41333b:	jg     0x413337
  41333d:	arpl   WORD PTR [ecx],sp
  41333f:	into   
  413340:	stos   DWORD PTR es:[edi],eax
  413341:	xlat   BYTE PTR ds:[ebx]
  413342:	mov    DWORD PTR [ebx+0x4a],edi
  413345:	repz sti 
  413347:	push   bx
  413349:	jp     0x41337a
  41334b:	in     al,dx
  41334c:	(bad)  
  41334e:	xlat   BYTE PTR ds:[ebx]
  41334f:	test   al,0xb9
  413351:	gs hlt 
  413353:	push   0xffffffed
  413355:	jmp    0x413393
  413357:	dec    ecx
  413358:	mov    esp,0xab1f11b4
  41335d:	div    DWORD PTR [eax-0x59]
  413360:	shl    BYTE PTR [ebx-0x56115d19],cl
  413366:	jnp    0x413321
  413368:	jns    0x4133df
  41336a:	xchg   esi,eax
  41336b:	pop    ss
  41336c:	sahf   
  41336d:	daa    
  41336e:	and    DWORD PTR [ecx],esi
  413370:	pusha  
  413371:	inc    esi
  413372:	shr    BYTE PTR [ecx-0x3],1
  413375:	(bad)  
  413376:	mov    ds:0x5ef5576f,al
  41337b:	jle    0x4133a2
  41337d:	scas   eax,DWORD PTR es:[edi]
  41337e:	dec    ebp
  41337f:	fcomip st,st(7)
  413381:	cmp    al,0x47
  413383:	je     0x413401
  413385:	or     DWORD PTR [edx-0x5759360f],0x44
  41338c:	rcl    DWORD PTR [edi],cl
  41338e:	add    BYTE PTR [ebx-0x4f8a657c],al
  413394:	dec    edi
  413395:	jge    0x413344
  413397:	jmp    0x4133a3
  413399:	mov    ebx,0xb0051ed6
  41339e:	mov    esi,0x240d4f57
  4133a4:	pop    edx
  4133a5:	mov    dh,bl
  4133a7:	or     DWORD PTR [ebp+0x3fc196b3],ebp
  4133ad:	mov    ah,0xc2
  4133af:	mov    ds:0x1fdd9f98,al
  4133b4:	inc    ecx
  4133b5:	ins    DWORD PTR es:[edi],dx
  4133b6:	ficomp WORD PTR [edi+0x19]
  4133b9:	dec    eax
  4133ba:	or     eax,0x1114d64a
  4133bf:	sbb    cl,al
  4133c1:	sbb    ebp,ebp
  4133c3:	scas   eax,DWORD PTR es:[edi]
  4133c4:	(bad)  
  4133c5:	imul   ebx,ebx,0x52dca85a
  4133cb:	or     al,0x2b
  4133cd:	adc    eax,0x9e0ec030
  4133d2:	(bad)
  4133d6:	jle    0x413403
  4133d8:	mov    edi,0xedea9eca
  4133dd:	xlat   BYTE PTR ds:[ebx]
  4133de:	cli    
  4133df:	pusha  
  4133e0:	jmp    0xd2f6:0x627835ee
  4133e7:	xor    al,0xaf
  4133e9:	sbb    eax,0x859f47bc
  4133ee:	adc    al,0xe5
  4133f0:	jmp    0x41340a
  4133f2:	test   BYTE PTR [ebp+eax*8+0x1f1ac4d0],al
  4133f9:	aaa    
  4133fa:	mov    edi,0xd19fd510
  4133ff:	cdq    
  413400:	popf   
  413401:	les    ecx,FWORD PTR [ebx+0x31]
  413404:	daa    
  413405:	push   cs
  413406:	mov    bl,0x60
  413408:	xor    edx,DWORD PTR [ecx-0x4a]
  41340b:	jge    0x41344d
  41340d:	(bad)  
  41340e:	das    
  41340f:	cmp    DWORD PTR [eax],edi
  413411:	int    0x61
  413413:	adc    DWORD PTR [ecx+0x1a10e678],edi
  413419:	push   esi
  41341a:	and    al,0x65
  41341c:	mov    esp,0xa490827f
  413421:	int    0xf8
  413423:	adc    al,0x8d
  413425:	imul   edi,DWORD PTR [edx+0x40],0x3abd69df
  41342c:	rcr    DWORD PTR [esi-0x18],0xac
  413430:	jle    0x41342c
  413432:	xchg   esp,eax
  413433:	shl    BYTE PTR [ecx],cl
  413435:	pop    edx
  413436:	cwde   
  413437:	test   DWORD PTR [edi-0x7675b66e],esi
  41343d:	rol    eax,cl
  41343f:	aam    0x5
  413441:	push   edx
  413442:	test   BYTE PTR [ecx-0x7325fe63],ah
  413448:	sub    BYTE PTR [esi+0x473a184d],ch
  41344e:	lods   eax,DWORD PTR ds:[esi]
  41344f:	sub    edx,edi
  413451:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413452:	cmp    eax,0x277fb1e2
  413457:	rdmsr  
  413459:	xor    al,0xe
  41345b:	fisub  DWORD PTR [ebp-0x7370c525]
  413461:	adc    bl,BYTE PTR [ebx+0x18dc20c7]
  413467:	dec    eax
  413468:	jecxz  0x413463
  41346a:	mov    DWORD PTR [ebx+0x5211812c],esi
  413470:	pop    edx
  413471:	adc    eax,0xa1dd0448
  413476:	ja     0x413457
  413478:	cdq    
  413479:	adc    BYTE PTR [ebp+eax*8+0x202a98b6],dl
  413480:	test   DWORD PTR [esi-0xccf408a],0xe5b10a62
  41348a:	cmc    
  41348b:	adc    al,0x6
  41348d:	sub    BYTE PTR [ebp+0x3f6d1],ch
  413493:	cli    
  413494:	mov    eax,0xe525919b
  413499:	mov    al,ds:0x2069058f
  41349e:	icebp  
  41349f:	jge    0x413451
  4134a1:	dec    ecx
  4134a2:	mov    eax,ds:0x7c91210c
  4134a7:	inc    ecx
  4134a8:	xor    BYTE PTR [ebp+ebx*8-0x2a8967bd],cl
  4134af:	out    dx,al
  4134b0:	out    0x70,eax
  4134b2:	ret    
  4134b3:	and    DWORD PTR [eax+eax*2+0x12],ebx
  4134b7:	cmp    al,0x68
  4134b9:	push   ds
  4134ba:	jne    0x41352b
  4134bc:	mov    WORD PTR [eax+0x5263889],cs
  4134c2:	push   es
  4134c3:	xor    BYTE PTR [esi-0x5e34ac56],dl
  4134c9:	add    esi,DWORD PTR [edx+0x920c7ce]
  4134cf:	(bad)  
  4134d0:	je     0x41349f
  4134d2:	xchg   ecx,eax
  4134d3:	push   esi
  4134d4:	add    eax,0x4f2c58c7
  4134d9:	cmp    dl,ah
  4134db:	pop    esp
  4134dc:	jb     0x4134a8
  4134de:	mov    ds:0x8a68c82f,eax
  4134e3:	mov    edx,0x1edca752
  4134e8:	sbb    BYTE PTR [edi],dl
  4134ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134eb:	(bad)  
  4134ed:	sub    dl,BYTE PTR [edi+ecx*2+0x60]
  4134f1:	ret    0xbfee
  4134f4:	mov    DWORD PTR [ebx-0x309469e2],0xfec85535
  4134fe:	fdivr  DWORD PTR [ebx+eax*8]
  413501:	outs   dx,BYTE PTR ds:[esi]
  413502:	push   esp
  413504:	mov    esi,0x45b215ba
  413509:	shl    WORD PTR [edx-0x4e],1
  41350d:	adc    eax,0x381afe1b
  413512:	xchg   ecx,eax
  413513:	mov    dl,0x47
  413515:	inc    ebp
  413516:	mov    esi,0x8f073e9f
  41351b:	push   cs
  41351c:	(bad)  
  41351d:	rcr    DWORD PTR [ebx+0x1636a7aa],cl
  413523:	add    DWORD PTR [eax],ebp
  413525:	fcomp  DWORD PTR [edi]
  413527:	xchg   ebx,eax
  413528:	push   esp
  413529:	sub    esp,DWORD PTR [edx]
  41352b:	int3   
  41352c:	jge    0x413578
  41352e:	xchg   edi,eax
  41352f:	mov    cs,WORD PTR [esi-0x14]
  413532:	adc    al,0x6b
  413534:	mov    dh,0x89
  413536:	out    dx,eax
  413537:	add    esp,esp
  413539:	xchg   edx,eax
  41353a:	adc    bl,BYTE PTR ds:[edi+0x62]
  41353e:	mov    ah,0x16
  413540:	push   edi
  413541:	imul   esp,DWORD PTR [ebp+0x48],0xfffffffd
  413545:	xchg   edi,eax
  413546:	je     0x413538
  413548:	pop    ss
  413549:	shrd   DWORD PTR [ebp-0x75e5e9f0],ebx,cl
  413550:	pusha  
  413551:	xor    bh,dl
  413553:	(bad)  
  413554:	xor    esi,DWORD PTR [ecx+0x7cdb0731]
  41355a:	fidivr WORD PTR [edi-0x5b]
  41355d:	jae    0x413582
  41355f:	pop    edx
  413560:	lock outs dx,BYTE PTR ds:[esi]
  413562:	jecxz  0x413509
  413564:	test   BYTE PTR [edx],dh
  413566:	sbb    al,0x18
  413568:	mov    edi,0x1ca9d7ac
  41356d:	(bad)  [esi+0x3540c9cc]
  413573:	jbe    0x41350e
  413575:	or     bl,BYTE PTR [edi-0x675fb575]
  41357b:	idiv   BYTE PTR [eax+0x51d55a3a]
  413581:	add    al,0xc3
  413583:	test   ebp,0x4fa3bf3d
  413589:	sar    DWORD PTR [edx+esi*2-0x58b85edb],1
  413590:	xor    edx,DWORD PTR [edi]
  413592:	jecxz  0x413541
  413594:	lock xchg ebx,eax
  413596:	and    edx,DWORD PTR [edx-0x60]
  413599:	pop    esp
  41359a:	jbe    0x413556
  41359c:	lock daa 
  41359e:	stc    
  41359f:	test   eax,0x59dedc0d
  4135a4:	xchg   edx,eax
  4135a5:	or     BYTE PTR [eax-0x80],dl
  4135a8:	ins    BYTE PTR es:[edi],dx
  4135a9:	pop    edx
  4135aa:	pop    ss
  4135ab:	xlat   BYTE PTR ds:[ebx]
  4135ac:	inc    ebx
  4135ad:	gs inc esp
  4135af:	mov    ch,0xe7
  4135b1:	mov    BYTE PTR [eax-0x7e5099ef],ch
  4135b7:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4135b9:	dec    eax
  4135ba:	retf   0x3d0
  4135bd:	sahf   
  4135be:	or     DWORD PTR [ebx+0x6f],ebx
  4135c1:	adc    al,0x25
  4135c3:	int3   
  4135c4:	imul   esi,ebp,0x25105654
  4135ca:	pushf  
  4135cb:	ret    0xb034
  4135ce:	xor    eax,0x3cecc63a
  4135d3:	adc    esp,DWORD PTR [esi]
  4135d5:	mov    eax,ds:0x15d09162
  4135da:	ret    
  4135db:	stos   DWORD PTR es:[edi],eax
  4135dc:	bound  esp,QWORD PTR [eax+0x1b4bce3d]
  4135e2:	imul   esp,DWORD PTR [ebx+0x3b],0x6b
  4135e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135e7:	jne    0x413630
  4135e9:	pop    esp
  4135ea:	inc    edx
  4135eb:	xchg   eax,eax
  4135ed:	push   0xffffffb3
  4135ef:	cwde   
  4135f0:	dec    esi
  4135f1:	jmp    0x41360c
  4135f3:	outs   dx,BYTE PTR ds:[esi]
  4135f4:	int3   
  4135f5:	(bad)  
  4135f6:	xor    ecx,DWORD PTR [ebp-0x73]
  4135f9:	sbb    BYTE PTR [edx+0x2],ch
  4135fc:	adc    DWORD PTR [edi-0x4856ae22],edi
  413602:	fstp   QWORD PTR [ecx+0x20a3a6f8]
  413608:	sbb    al,0x71
  41360a:	cmp    cl,al
  41360c:	cmp    al,0xb8
  41360e:	cmp    ebp,ecx
  413610:	outs   dx,DWORD PTR ds:[esi]
  413611:	push   esp
  413612:	jb     0x4135ce
  413614:	xchg   ebp,eax
  413615:	js     0x41363d
  413617:	retf   
  413618:	or     al,0x35
  41361a:	out    dx,al
  41361b:	mov    cl,0x52
  41361d:	mov    WORD PTR [esi-0x57077b4d],cs
  413623:	mov    esp,0x8b6dc09e
  413628:	pop    edi
  413629:	xchg   ebp,eax
  41362a:	push   esi
  41362b:	cmc    
  41362c:	rcr    BYTE PTR [ecx+0x4c],cl
  41362f:	cmp    dh,bl
  413631:	jb     0x41368c
  413633:	dec    esp
  413634:	(bad)  [esi+0x3]
  413637:	pop    esp
  413638:	inc    ebp
  413639:	loopne 0x413661
  41363b:	shl    BYTE PTR [ebp-0x5c15af6a],1
  413641:	arpl   WORD PTR [esi+0x39],di
  413644:	lods   al,BYTE PTR ds:[esi]
  413645:	les    edx,FWORD PTR [esi]
  413647:	push   ds
  413648:	ds add eax,esi
  41364b:	loope  0x413635
  41364d:	dec    edi
  41364e:	or     eax,0x84febf23
  413653:	test   al,0x28
  413655:	pop    ds
  413656:	arpl   WORD PTR [esi],si
  413658:	jnp    0x4136ae
  41365a:	jo     0x4136b7
  41365c:	pop    ds
  41365d:	push   edx
  41365e:	bound  eax,QWORD PTR ds:0x2b0a68cb
  413664:	and    ecx,DWORD PTR [esi+0x70e27107]
  41366a:	lods   al,BYTE PTR ds:[esi]
  41366b:	(bad)  
  41366c:	into   
  41366d:	pop    ss
  41366e:	ret    0xf8a2
  413671:	or     eax,0xad7d207a
  413676:	push   ds
  413677:	mov    esi,0x4f363967
  41367c:	jmp    FWORD PTR ds:[eax]
  41367f:	jg     0x413642
  413681:	inc    edi
  413682:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413683:	jnp    0x4136af
  413685:	lds    edi,FWORD PTR [esi]
  413687:	add    dl,BYTE PTR [edx-0x4]
  41368a:	mov    edi,0x4cc72d28
  41368f:	pop    ss
  413690:	and    eax,0xb25c2bf
  413695:	das    
  413696:	push   ebx
  413697:	add    BYTE PTR [eax],0x92
  41369a:	and    ch,BYTE PTR [eax]
  41369c:	dec    esp
  41369d:	mov    ebp,0x65f5d7cf
  4136a2:	je     0x41370e
  4136a4:	sahf   
  4136a5:	imul   edi,DWORD PTR [eax+0x34],0x3f49361a
  4136ac:	mov    DWORD PTR [ecx+0x18617ccf],edi
  4136b2:	ret    0x4016
  4136b5:	mov    ah,0xd2
  4136b7:	repz mov esp,0x5a41023f
  4136bd:	inc    eax
  4136be:	push   edi
  4136bf:	std    
  4136c0:	add    eax,0x1f6e4088
  4136c5:	cmc    
  4136c6:	enter  0x62fd,0x39
  4136ca:	(bad)  
  4136cc:	ret    0xc7bb
  4136cf:	aad    0x59
  4136d1:	mov    al,0x84
  4136d3:	sbb    DWORD PTR [ebp-0x7],esi
  4136d6:	mov    edi,0xf5c099d3
  4136db:	xchg   edi,eax
  4136dc:	test   edx,0xa66fdaa3
  4136e2:	ins    BYTE PTR es:[edi],dx
  4136e3:	inc    ebp
  4136e4:	sbb    ch,BYTE PTR [ecx+0x76a6263b]
  4136ea:	clc    
  4136eb:	add    eax,DWORD PTR [ecx+0x3e760870]
  4136f1:	pop    eax
  4136f2:	fistp  WORD PTR [edi-0x2d]
  4136f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136f6:	ds lahf 
  4136f8:	aad    0xe9
  4136fa:	mov    ?,WORD PTR [ebx]
  4136fc:	inc    ebx
  4136fd:	int3   
  4136fe:	pop    esp
  4136ff:	sub    BYTE PTR ds:0xf45a9488,bh
  413705:	dec    edx
  413706:	int3   
  413707:	and    BYTE PTR [ebx],ah
  413709:	out    dx,eax
  41370a:	scas   eax,DWORD PTR es:[edi]
  41370b:	shl    BYTE PTR [esi+0x6f],1
  41370e:	mov    ds:0xc587e262,eax
  413713:	cmp    eax,0x1d64eb09
  413718:	gs inc esp
  41371a:	ss jns 0x413768
  41371d:	sub    eax,0x6afd0247
  413722:	mov    edx,0x78cf4644
  413727:	jge    0x413789
  413729:	and    al,0x2c
  41372b:	aam    0x5b
  41372d:	mov    cl,0x4c
  41372f:	adc    cl,BYTE PTR [eax-0x657b72a0]
  413735:	cwde   
  413736:	iret   
  413737:	arpl   WORD PTR [ebp-0x161701f5],sp
  41373d:	(bad)  [ebx-0x4bee87f6]
  413743:	dec    ebx
  413744:	mov    esp,0x44df807b
  413749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41374a:	add    cl,BYTE PTR [eax]
  41374c:	in     al,0xf2
  41374e:	fist   DWORD PTR [ebx+0x34f2b842]
  413754:	lods   eax,DWORD PTR ds:[esi]
  413755:	inc    ecx
  413756:	mov    esp,0xb1c54d91
  41375b:	lock ds loopne 0x41375b
  41375f:	mov    ebx,0x5fe03fe5
  413764:	add    dl,bh
  413766:	lahf   
  413767:	inc    esp
  413768:	popa   
  413769:	int3   
  41376a:	stc    
  41376b:	mov    eax,ds:0x9347d052
  413770:	inc    ebp
  413771:	pushf  
  413772:	mov    esp,DWORD PTR [ecx-0x7c08edc9]
  413778:	sbb    dl,BYTE PTR [edi+0x141f9c91]
  41377e:	aaa    
  41377f:	push   ebp
  413780:	push   edi
  413781:	xor    BYTE PTR [edx+0x57],bh
  413784:	mov    DWORD PTR [ebp+0x79],edi
  413787:	es stos BYTE PTR es:[edi],al
  413789:	mov    bh,dh
  41378b:	mov    al,0xeb
  41378d:	(bad)  
  41378e:	loop   0x413774
  413790:	xor    eax,0xd88938f
  413795:	jmp    0x1692:0xc1fd2f96
  41379c:	jne    0x413779
  41379e:	stos   DWORD PTR es:[edi],eax
  41379f:	pop    esi
  4137a0:	nop
  4137a1:	push   0xa2339596
  4137a6:	adc    eax,0xe530ee70
  4137ab:	lea    ebx,[edi]
  4137ad:	shl    ebx,cl
  4137af:	lock aas 
  4137b1:	inc    edi
  4137b2:	push   esp
  4137b3:	call   0xdab754b1
  4137b8:	xchg   ebp,eax
  4137b9:	aad    0x24
  4137bb:	jge    0x413775
  4137bd:	arpl   WORD PTR [eax+0xb],cx
  4137c0:	sbb    al,0x53
  4137c2:	or     DWORD PTR [eax-0x5d],eax
  4137c5:	call   0xc4e62d19
  4137ca:	loope  0x41381b
  4137cc:	inc    eax
  4137cd:	push   0xffffffd4
  4137cf:	inc    ecx
  4137d0:	imul   BYTE PTR [esi+edx*1]
  4137d3:	sbb    al,0x0
  4137d5:	push   edi
  4137d6:	cmp    ah,al
  4137d8:	bound  edi,QWORD PTR [edx+0x11]
  4137db:	inc    ebx
  4137dc:	inc    edx
  4137dd:	dec    edx
  4137de:	pop    edi
  4137df:	sub    eax,0xda866226
  4137e4:	mov    esp,DWORD PTR [eax+0x673ac872]
  4137ea:	pop    ebx
  4137eb:	shr    BYTE PTR [ebp-0x553d9e92],cl
  4137f1:	popf   
  4137f2:	pop    edx
  4137f3:	mov    al,0xc6
  4137f5:	mov    ds:0xe79ad852,al
  4137fa:	pop    esi
  4137fb:	cli    
  4137fc:	imul   ebx,DWORD PTR [esp+ebp*8],0xffffffb4
  413800:	bound  eax,QWORD PTR [edi]
  413802:	sbb    eax,0x94037bc7
  413807:	out    dx,eax
  413808:	and    eax,0x30626ab0
  41380d:	xlat   BYTE PTR ds:[ebx]
  41380e:	aaa    
  41380f:	xor    esp,eax
  413811:	imul   ebp,DWORD PTR [ebp+0x19],0x6
  413815:	mov    al,BYTE PTR [edx+0x2c0bcd2b]
  41381b:	mov    ds:0x88e31d51,al
  413820:	or     DWORD PTR [ebx],eax
  413822:	scas   eax,DWORD PTR es:[edi]
  413823:	jl     0x4137f1
  413825:	pop    edi
  413826:	fild   WORD PTR [edi+0x1e82874b]
  41382c:	les    ecx,FWORD PTR [esi]
  41382e:	scas   al,BYTE PTR es:[edi]
  41382f:	popf   
  413830:	pop    ss
  413831:	data16 dec BYTE PTR [ecx]
  413834:	mov    ebp,0xaf6b129f
  413839:	xor    ecx,esi
  41383b:	mov    al,ds:0xab67a616
  413841:	mov    edi,0x811e2c46
  413846:	and    ch,BYTE PTR [esi]
  413848:	or     BYTE PTR [edx],cl
  41384a:	mov    edi,ebx
  41384c:	rcl    BYTE PTR [ebp-0x7387315d],1
  413852:	fidivr WORD PTR [eax+esi*8-0x56686ac1]
  413859:	sub    edi,ecx
  41385b:	mov    cl,0x84
  41385d:	psrad  mm1,QWORD PTR es:[edx-0x3f1c6ea4]
  413865:	mov    ds:0x12e6d569,eax
  41386a:	inc    DWORD PTR ds:0x85c751a7
  413870:	sbb    eax,0xd989bbdf
  413875:	pop    edx
  413876:	push   cs
  413877:	pop    edx
  413878:	mov    DWORD PTR [esi+0x49],ebp
  41387b:	fwait
  41387c:	jmp    0x53c4b99b
  413881:	inc    edi
  413882:	cwde   
  413883:	xor    edi,0x814eb675
  413889:	inc    eax
  41388a:	dec    ebp
  41388b:	push   0x619e86a6
  413890:	xlat   BYTE PTR ds:[ebx]
  413891:	imul   ecx,DWORD PTR [edi],0x46
  413894:	jl     0x4138af
  413896:	ret    0x8471
  413899:	(bad)  
  41389a:	mov    ebp,0x992a116f
  41389f:	rcr    BYTE PTR [eax-0x1c99f8f2],0x93
  4138a6:	scas   eax,DWORD PTR es:[edi]
  4138a7:	sbb    ebx,ebp
  4138a9:	and    BYTE PTR [eax-0x46],0x7f
  4138ad:	cmp    DWORD PTR ds:0xb7a16a40,edi
  4138b3:	jecxz  0x41385c
  4138b5:	sub    DWORD PTR [esi-0x4b],ebp
  4138b8:	rcl    edx,1
  4138ba:	sbb    BYTE PTR ds:0x1c49b0c6,dh
  4138c0:	rcr    DWORD PTR [edx+ebx*1-0x7b7f523d],1
  4138c7:	retf   0x2a25
  4138ca:	popf   
  4138cb:	stos   BYTE PTR es:[edi],al
  4138cc:	push   0x857b9844
  4138d1:	push   es
  4138d2:	sti    
  4138d3:	mov    cs,WORD PTR [ebx+ecx*8]
  4138d6:	pop    es
  4138d7:	adc    cl,BYTE PTR [edx-0x17]
  4138da:	xor    BYTE PTR [esi-0xe],dl
  4138dd:	hlt    
  4138de:	pop    esp
  4138df:	inc    esi
  4138e0:	or     al,0xd2
  4138e2:	and    ch,BYTE PTR [ebp-0x694203]
  4138e8:	gs retf 
  4138ea:	mov    eax,es
  4138ec:	arpl   WORD PTR [esi+0x5c],bx
  4138ef:	lock lock in eax,dx
  4138f2:	test   BYTE PTR [eax],0x6c
  4138f5:	mov    eax,ds:0xe30bd973
  4138fa:	test   eax,0xf8d2e04e
  4138ff:	addr16 das 
  413901:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413902:	push   esp
  413903:	pushf  
  413904:	xchg   ebp,eax
  413905:	cmp    BYTE PTR [esi-0x39],ch
  413908:	jg     0x413967
  41390a:	cmp    al,0x27
  41390c:	scas   al,BYTE PTR es:[edi]
  41390d:	or     esi,DWORD PTR [ebx+0x7ecfe2f4]
  413913:	mov    ah,0xd7
  413915:	test   esi,edi
  413917:	push   0xd461fc2e
  41391c:	inc    edx
  41391d:	outs   dx,BYTE PTR ds:[esi]
  41391e:	js     0x4138fe
  413920:	mov    ah,0x38
  413922:	dec    ebp
  413923:	sar    DWORD PTR [ebp+eax*2+0x53f5a448],0x96
  41392b:	popf   
  41392c:	imul   ebx,DWORD PTR [esi-0x77dd1be],0x970e6b8e
  413936:	in     al,0x7f
  413938:	or     esi,edi
  41393a:	mov    edx,0xf2bc417d
  41393f:	test   al,0xc8
  413941:	add    ch,ah
  413943:	mov    ebp,0x8e109bf1
  413948:	or     eax,0x622eed43
  41394d:	pop    edi
  41394e:	in     al,0xb9
  413950:	and    esp,esi
  413952:	xor    BYTE PTR [esi+0x17],0x29
  413956:	pushf  
  413957:	rol    DWORD PTR [edx],cl
  413959:	les    ecx,FWORD PTR [esi]
  41395b:	pop    edx
  41395c:	mov    dh,al
  41395e:	push   ebx
  41395f:	and    al,0x8a
  413961:	cmp    BYTE PTR [edi-0x11],dh
  413964:	mov    ch,0xcf
  413966:	jb     0x413962
  413968:	call   0xa401864f
  41396d:	retf   
  41396e:	jns    0x4139ab
  413970:	pop    ebx
  413971:	mov    edx,0x598c20fe
  413976:	xor    esi,DWORD PTR [ebp-0x75]
  413979:	retf   0x4b0
  41397c:	inc    edi
  41397d:	mov    esp,0xe6994659
  413982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413983:	adc    esp,edx
  413985:	dec    ebp
  413986:	in     al,0x3
  413988:	loopne 0x4139d4
  41398a:	mov    esi,0x680d8e1e
  41398f:	pop    eax
  413990:	sub    DWORD PTR [edx+0x588510c8],0xaf10745b
  41399a:	ins    DWORD PTR es:[edi],dx
  41399b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41399c:	enter  0xdce6,0x4b
  4139a0:	add    dh,dh
  4139a2:	sub    al,0xca
  4139a4:	int    0xe0
  4139a6:	jns    0x41394d
  4139a8:	call   0xd7ca:0x63e5bbb4
  4139af:	jmp    0x1b0f8e57
  4139b4:	sbb    BYTE PTR [ebx-0x53b345e6],bh
  4139ba:	sub    bl,BYTE PTR [edx+0x78896725]
  4139c0:	pop    ecx
  4139c1:	xchg   ecx,eax
  4139c2:	fisub  DWORD PTR [eax+0x7bd191df]
  4139c8:	xor    ebp,esp
  4139ca:	adc    BYTE PTR [ecx],ah
  4139cc:	mov    dl,0x70
  4139ce:	ja     0x413a17
  4139d0:	aaa    
  4139d1:	call   0x4d39de4
  4139d6:	aas    
  4139d7:	retf   
  4139d8:	loopne 0x413990
  4139da:	jge    0x413964
  4139dc:	mov    ds,WORD PTR [eax]
  4139de:	(bad)  [edi+0x2cab97be]
  4139e4:	mov    esp,DWORD PTR [edx]
  4139e6:	and    DWORD PTR [ebx+0x26fa6ac1],edx
  4139ec:	es in  eax,dx
  4139ee:	stos   BYTE PTR es:[edi],al
  4139ef:	cmp    DWORD PTR [edx+0x38],ebp
  4139f2:	inc    ebx
  4139f3:	int    0xf3
  4139f5:	repz sbb eax,0x8a08980f
  4139fb:	mov    ds:0x57cbac57,al
  413a00:	lods   eax,DWORD PTR ds:[esi]
  413a01:	xor    DWORD PTR [ecx+0x35152028],ebx
  413a07:	stc    
  413a08:	popf   
  413a09:	mov    esp,eax
  413a0b:	es neg edi
  413a0e:	es leave 
  413a10:	mov    edi,eax
  413a12:	mov    dl,0xf
  413a14:	inc    ecx
  413a15:	jmp    0x3fd3:0x94fb800f
  413a1c:	mov    dh,0xe1
  413a1e:	xchg   ebx,eax
  413a1f:	add    BYTE PTR es:[ebx-0x57],dh
  413a23:	mov    eax,ds:0xf83c40de
  413a28:	iret   
  413a29:	push   ebx
  413a2a:	dec    edx
  413a2b:	push   es
  413a2c:	mov    DWORD PTR [ebx+0x6b],0xd47a7b57
  413a33:	mov    ecx,0x2d8e04a9
  413a38:	fmul   DWORD PTR [edx+esi*4]
  413a3b:	js     0x4139d4
  413a3d:	sub    al,0x17
  413a3f:	mov    ecx,0xe3c08de
  413a44:	xchg   BYTE PTR [edi+0x46],dl
  413a47:	jns    0x413a18
  413a49:	adc    al,0x6d
  413a4b:	aaa    
  413a4c:	(bad)  
  413a4d:	push   ss
  413a4e:	outs   dx,BYTE PTR ds:[esi]
  413a4f:	xlat   BYTE PTR ds:[ebx]
  413a50:	fimul  DWORD PTR [ebp+0x52]
  413a53:	and    BYTE PTR [edx],cl
  413a55:	aad    0x26
  413a57:	stos   BYTE PTR es:[edi],al
  413a58:	call   0x4674:0xebac2e8b
  413a5f:	std    
  413a60:	adc    BYTE PTR [edx],ch
  413a62:	xchg   BYTE PTR [ebp+0x609dc499],al
  413a68:	out    0x28,eax
  413a6a:	mov    WORD PTR [edx+0x1f],ds
  413a6d:	out    dx,eax
  413a6e:	xor    esp,esi
  413a70:	pop    edi
  413a71:	les    esp,FWORD PTR [eax-0x58c3af66]
  413a77:	xor    DWORD PTR es:[ecx-0x737c46ce],edx
  413a7e:	jb     0x413a45
  413a80:	cmp    esi,DWORD PTR [edx+0x6d98b04b]
  413a86:	jmp    0xcadd80ac
  413a8b:	mov    cl,0xb7
  413a8d:	pushf  
  413a8e:	retf   
  413a8f:	pop    edi
  413a90:	ret    
  413a91:	mov    bh,0x90
  413a93:	inc    esp
  413a94:	lods   al,BYTE PTR ds:[esi]
  413a95:	fsubp  st(1),st
  413a97:	lods   eax,DWORD PTR ds:[esi]
  413a98:	and    eax,0x4d495dcc
  413a9d:	cld    
  413a9e:	dec    edx
  413a9f:	or     al,0x85
  413aa1:	push   esp
  413aa2:	add    eax,0x242a9951
  413aa7:	sbb    BYTE PTR [ecx],bh
  413aa9:	imul   BYTE PTR [ebp+0x25]
  413aac:	adc    al,0xc0
  413aae:	scas   al,BYTE PTR es:[edi]
  413aaf:	in     eax,dx
  413ab0:	dec    esp
  413ab1:	sbb    BYTE PTR [esi-0x1b552954],ch
  413ab7:	xor    eax,esi
  413ab9:	mov    ds:0xec97c1f2,eax
  413abe:	aas    
  413abf:	ja     0x413aca
  413ac1:	and    ebp,ebx
  413ac3:	sub    bh,BYTE PTR [ebx*8-0x7dff90b3]
  413aca:	jno    0x413b2f
  413acc:	inc    esp
  413acd:	pop    esp
  413ace:	lods   al,BYTE PTR ds:[esi]
  413acf:	into   
  413ad0:	sub    bl,BYTE PTR [esi-0x58]
  413ad3:	mov    ebp,0x579c0f4d
  413ad8:	add    eax,0xf9fa79d4
  413add:	and    ebx,DWORD PTR [edx]
  413adf:	and    BYTE PTR [ebx-0x21],0xeb
  413ae3:	mov    ch,0xb7
  413ae5:	nop
  413ae6:	loope  0x413a9d
  413ae8:	jno    0x413b4a
  413aea:	int    0x3d
  413aec:	xchg   BYTE PTR [esi-0x2dfdf8b],al
  413af2:	aas    
  413af3:	jecxz  0x413acd
  413af5:	sti    
  413af6:	es ds jmp 0x237d2070
  413afd:	xlat   BYTE PTR ds:[ebx]
  413afe:	repz and edx,DWORD PTR [esi-0x2b]
  413b02:	pop    eax
  413b03:	jp     0x413b1c
  413b05:	scas   eax,DWORD PTR es:[edi]
  413b06:	adc    al,0x88
  413b08:	pop    esi
  413b09:	ret    0xc2c2
  413b0c:	daa    
  413b0d:	fidivr WORD PTR [esp+eiz*8-0x2b4fdf18]
  413b14:	mov    edi,edx
  413b16:	push   edi
  413b17:	enter  0x7516,0x8d
  413b1b:	enter  0xecd7,0xa5
  413b1f:	loop   0x413b44
  413b21:	dec    DWORD PTR [edi]
  413b23:	fnstsw WORD PTR [eax-0x557a41b2]
  413b29:	mov    WORD PTR ds:0x425073f,?
  413b2f:	jno    0x413af0
  413b31:	test   DWORD PTR [ebp-0x7d2c6bab],ebx
  413b37:	in     eax,0xf0
  413b39:	lahf   
  413b3a:	push   eax
  413b3b:	jbe    0x413b99
  413b3d:	or     eax,0xf634b1e9
  413b42:	sbb    BYTE PTR [edx+eax*1+0x46cac8f],dl
  413b49:	(bad)  
  413b4a:	push   esi
  413b4b:	fidivr WORD PTR [edi+0x1f]
  413b4e:	mov    ebx,0xef0ce6bd
  413b53:	push   edx
  413b54:	dec    esp
  413b55:	pop    ebp
  413b56:	mov    dl,0x16
  413b58:	pop    esp
  413b59:	out    0x0,al
  413b5b:	sub    ebp,DWORD PTR [eax]
  413b5d:	adc    eax,0x7422d8f4
  413b62:	pushfw 
  413b64:	mov    ebp,0xaaebbd38
  413b69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b6a:	fsub   DWORD PTR [ebp+0x9]
  413b6d:	pop    edi
  413b6e:	mov    eax,ds:0x2cfc9ade
  413b73:	ss mov ebp,0xaef0c501
  413b79:	push   eax
  413b7a:	lea    esi,[ebx-0x64a4e9f2]
  413b80:	das    
  413b81:	pop    esi
  413b82:	xchg   DWORD PTR [edi],ebx
  413b84:	inc    edi
  413b85:	add    eax,0x8a22971d
  413b8a:	jnp    0x413b12
  413b8c:	aaa    
  413b8d:	mov    esp,0x543b55c3
  413b92:	inc    BYTE PTR ds:[esi-0x6d]
  413b96:	rcr    BYTE PTR [ebx],1
  413b98:	out    0x98,al
  413b9a:	iret   
  413b9b:	jg     0x413b27
  413b9d:	push   edi
  413b9e:	dec    edi
  413b9f:	or     ah,BYTE PTR [ebx+0x7d]
  413ba2:	add    edi,DWORD PTR [ebx+0x72b954ad]
  413ba8:	xchg   esp,esi
  413baa:	or     ch,ch
  413bac:	leave  
  413bad:	add    dh,BYTE PTR [edi-0x74]
  413bb0:	pop    ecx
  413bb1:	mov    dl,0x86
  413bb3:	test   DWORD PTR [ebp+0x37],eax
  413bb6:	push   0x891e31bf
  413bbb:	pusha  
  413bbc:	lock mov ds:0xc210e13b,eax
  413bc2:	push   edi
  413bc3:	fist   WORD PTR [esi]
  413bc5:	or     cl,BYTE PTR [ecx]
  413bc7:	repnz xor ebp,edi
  413bca:	mov    esi,DWORD PTR [ecx+0x33]
  413bcd:	push   ecx
  413bce:	out    dx,al
  413bcf:	test   ah,0xc4
  413bd2:	leave  
  413bd3:	enter  0xca89,0x26
  413bd7:	dec    ebp
  413bd8:	pop    ds
  413bd9:	icebp  
  413bda:	das    
  413bdb:	sbb    al,0x2c
  413bdd:	(bad)  
  413bde:	lods   eax,DWORD PTR ds:[esi]
  413bdf:	jge    0x413c5d
  413be1:	jnp    0x413c4c
  413be3:	loope  0x413bae
  413be5:	xchg   edi,eax
  413be6:	mov    bh,BYTE PTR [ebx]
  413be8:	add    BYTE PTR [edi+edx*4+0x53],0x13
  413bed:	push   0x35
  413bef:	cmc    
  413bf0:	popa   
  413bf1:	imul   edx,DWORD PTR [esi+0x58],0x658d0100
  413bf8:	pop    ds
  413bf9:	shr    BYTE PTR [esi],0x9f
  413bfc:	fimul  DWORD PTR [ebx+0x55bc7c6c]
  413c02:	test   al,0x75
  413c04:	lock sub dh,cl
  413c07:	mov    dh,0x98
  413c09:	lahf   
  413c0a:	mov    al,0x5f
  413c0c:	jnp    0x413c1c
  413c0e:	in     al,dx
  413c0f:	(bad)
  413c13:	idiv   BYTE PTR [edx-0x262bfb29]
  413c19:	or     edi,DWORD PTR [eax+edi*4-0x45c3d2d5]
  413c20:	mov    es,edx
  413c22:	push   ebp
  413c23:	dec    ebp
  413c25:	cld    
  413c26:	pop    ss
  413c27:	ds (bad) 
  413c2b:	pop    es
  413c2c:	out    dx,al
  413c2d:	jmp    0x413c01
  413c2f:	mov    eax,ds:0xcf33203c
  413c34:	mov    esi,0x478ec374
  413c39:	inc    edx
  413c3a:	je     0x413c1f
  413c3c:	jno    0x413c2d
  413c3e:	inc    esi
  413c3f:	aad    0x5f
  413c41:	sbb    DWORD PTR ds:[edx],eax
  413c44:	xchg   edi,eax
  413c45:	mov    dl,0x50
  413c47:	outs   dx,DWORD PTR ds:[esi]
  413c48:	repnz xchg ebp,eax
  413c4a:	mov    eax,ds:0xe6a85252
  413c4f:	cmp    dh,bl
  413c51:	clc    
  413c52:	xchg   eax,eax
  413c54:	fnsave [edi]
  413c56:	loope  0x413be8
  413c58:	dec    esi
  413c59:	mov    bl,0x53
  413c5b:	xchg   DWORD PTR [ecx],edx
  413c5d:	outs   dx,DWORD PTR ds:[esi]
  413c5e:	mov    BYTE PTR [edi+0x24d1f82],cl
  413c64:	loop   0x413c43
  413c66:	out    dx,al
  413c67:	inc    esi
  413c68:	dec    ebx
  413c69:	test   eax,0x3de8266e
  413c6e:	(bad)
  413c71:	lahf   
  413c72:	aad    0x73
  413c74:	push   ss
  413c75:	(bad)  
  413c76:	cmp    al,0x8b
  413c78:	mov    bl,0xbf
  413c7a:	cmp    al,0x92
  413c7c:	aad    0xde
  413c7e:	cmp    al,dl
  413c80:	inc    esi
  413c81:	inc    ebp
  413c82:	scas   al,BYTE PTR es:[edi]
  413c83:	add    eax,DWORD PTR [eax+0x1c]
  413c86:	mov    ebx,0x310a988c
  413c8b:	dec    ebx
  413c8c:	adc    BYTE PTR [edi-0x4b053245],cl
  413c92:	std    
  413c93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c94:	(bad)  
  413c95:	adc    BYTE PTR [ebp-0x22a86c8b],ch
  413c9b:	nop
  413c9c:	xchg   BYTE PTR [ebp-0x4f982ab9],cl
  413ca2:	xchg   ecx,eax
  413ca3:	loope  0x413cea
  413ca5:	cs int3 
  413ca7:	stc    
  413ca8:	fdivr  DWORD PTR [eax-0x6f]
  413cab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cac:	lods   eax,DWORD PTR ds:[esi]
  413cad:	and    al,0x53
  413caf:	push   ebx
  413cb0:	(bad)  
  413cb1:	and    al,0x2f
  413cb3:	fimul  WORD PTR [ecx+0x29e8d633]
  413cb9:	mov    DWORD PTR [esi-0x5c50776b],ebp
  413cbf:	addr16 es loopne 0x413c56
  413cc3:	jl     0x413c99
  413cc5:	xchg   esi,eax
  413cc6:	xor    ch,BYTE PTR [ecx]
  413cc8:	or     ah,BYTE PTR [eax-0x1cf7ab3e]
  413cce:	sbb    BYTE PTR [eax-0x6d0d50f0],ch
  413cd4:	into   
  413cd5:	or     eax,0xfac0e465
  413cda:	rcr    ebx,1
  413cdc:	and    DWORD PTR [edx],eax
  413cde:	nop
  413cdf:	add    al,BYTE PTR [eax+0x42]
  413ce2:	repnz out dx,eax
  413ce4:	clc    
  413ce5:	les    edx,FWORD PTR [eax-0x56f83470]
  413ceb:	cmp    eax,0xc2ae921e
  413cf0:	adc    DWORD PTR [ebp+0x2c],edi
  413cf3:	retf   
  413cf4:	ffreep st(3)
  413cf6:	push   ebp
  413cf7:	push   0x110be386
  413cfc:	adc    bh,0xa4
  413cff:	iretw  
  413d01:	cvtdq2ps xmm2,XMMWORD PTR [ebx]
  413d04:	mov    ds:0x6bb032e3,eax
  413d09:	test   eax,0x5bdcd0de
  413d0e:	and    cl,0x31
  413d11:	dec    ebp
  413d12:	jmp    0x413d44
  413d14:	icebp  
  413d15:	cmc    
  413d16:	and    DWORD PTR [ebx+0x40da4a99],esi
  413d1c:	jo     0x413d76
  413d1e:	cdq    
  413d1f:	cmp    BYTE PTR [ebx-0x29],0x29
  413d23:	es push ebx
  413d25:	cli    
  413d26:	mov    ds:0x4c6028d3,eax
  413d2b:	retf   0x46a1
  413d2e:	sub    BYTE PTR [ebx+0x33],0xed
  413d32:	ja     0x413d77
  413d34:	push   esi
  413d35:	push   es
  413d36:	scas   eax,DWORD PTR es:[edi]
  413d37:	mov    edx,0xa2fe4027
  413d3c:	dec    esp
  413d3d:	jp     0x413d97
  413d3f:	mov    edx,0x2dd1227e
  413d44:	arpl   WORD PTR [ecx+ebx*1+0x4d],bp
  413d48:	mov    ebp,DWORD PTR [eax-0x20a7fe0d]
  413d4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d4f:	sub    al,0xb9
  413d51:	mov    esi,ebx
  413d53:	adc    BYTE PTR [eax-0x5f19877b],bl
  413d59:	aaa    
  413d5a:	jnp    0x413dbc
  413d5c:	dec    esi
  413d5d:	mov    esi,edx
  413d5f:	aad    0x23
  413d61:	not    DWORD PTR [ecx+0x3]
  413d64:	js     0x413d4d
  413d66:	inc    edi
  413d67:	into   
  413d68:	or     eax,0x3d3a1e06
  413d6d:	lds    edi,FWORD PTR [eax+0x1e8743b9]
  413d73:	bound  edi,QWORD PTR [ebx+0x2cf78ef9]
  413d79:	ror    BYTE PTR [edx],1
  413d7b:	enter  0x648a,0x9e
  413d7f:	cld    
  413d80:	in     eax,dx
  413d81:	clc    
  413d82:	ins    DWORD PTR es:[edi],dx
  413d83:	jbe    0x413d73
  413d85:	inc    edi
  413d86:	sbb    eax,0x64641768
  413d8b:	adc    al,0xf2
  413d8d:	pop    ss
  413d8e:	retf   0xc50b
  413d91:	add    edi,DWORD PTR [ebx+0x61c0e6c2]
  413d97:	cmp    BYTE PTR [esi],dl
  413d99:	or     eax,0x5ca60038
  413d9e:	push   0xf8d222d6
  413da3:	sahf   
  413da4:	into   
  413da5:	stos   DWORD PTR es:[edi],eax
  413da6:	xchg   DWORD PTR [edx+0x4ce8df8f],edx
  413dac:	not    BYTE PTR [eax]
  413dae:	mov    edi,0x4577d415
  413db3:	or     DWORD PTR [eax+0x4a19f801],eax
  413db9:	jae    0x413df9
  413dbb:	cmp    ch,ch
  413dbd:	lock out dx,al
  413dbf:	fisttp WORD PTR [ebx+esi*1]
  413dc2:	inc    eax
  413dc3:	dec    ebp
  413dc4:	ficomp DWORD PTR [esi]
  413dc6:	out    0xb3,al
  413dc8:	loope  0x413d7f
  413dca:	jmp    0xd3b01ad0
  413dcf:	xor    ch,BYTE PTR ds:0xd9e8d5a0
  413dd5:	gs scas eax,DWORD PTR es:[edi]
  413dd7:	(bad)  
  413dd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dd9:	and    eax,0x45983050
  413dde:	cmp    esp,edi
  413de0:	outs   dx,DWORD PTR ds:[esi]
  413de1:	loope  0x413db2
  413de3:	pop    ebx
  413de4:	add    al,0x74
  413de6:	cmp    eax,0x183bda57
  413deb:	pop    ecx
  413dec:	xchg   bl,dh
  413dee:	sub    DWORD PTR [edi+0x537e34ca],0x110c98c8
  413df8:	fsub   QWORD PTR [esi]
  413dfa:	aam    0xb5
  413dfc:	mov    WORD PTR [ebx],cs
  413dfe:	add    esi,DWORD PTR [esi+ecx*8+0x20]
  413e02:	lea    ebx,[ebp-0x80]
  413e05:	les    esi,FWORD PTR [edx+0x3b2c9b62]
  413e0b:	imul   eax,DWORD PTR es:[ecx+0x70],0x1533e9b2
  413e13:	xor    eax,0x2424dc04
  413e18:	(bad)
  413e1b:	data16 fsub QWORD PTR [edx+0x26]
  413e1f:	ds dec edx
  413e21:	mov    esp,0x84dc798a
  413e26:	push   ebp
  413e27:	ds clc 
  413e29:	test   eax,0x9536a670
  413e2e:	push   cs
  413e2f:	loope  0x413e83
  413e31:	jmp    0x3bd6:0x55d6b329
  413e38:	aaa    
  413e39:	leave  
  413e3a:	jbe    0x413e11
  413e3c:	popa   
  413e3d:	mov    BYTE PTR [ebp+0x34609498],dh
  413e43:	data16 mov dh,0xf0
  413e46:	mov    esp,0xfa2f7331
  413e4b:	sub    ah,BYTE PTR [ebp-0x1c2bfdb8]
  413e51:	pop    eax
  413e52:	cmp    ebp,DWORD PTR [edi]
  413e54:	xchg   edi,eax
  413e55:	adc    ebp,DWORD PTR [eax]
  413e57:	and    ch,BYTE PTR [edx-0x72064a5e]
  413e5d:	sub    DWORD PTR [esi-0x5d],esi
  413e60:	loop   0x413eab
  413e62:	or     DWORD PTR [eax-0x27],edx
  413e65:	retf   
  413e66:	push   ebp
  413e67:	cmp    DWORD PTR [ebx-0x61],0xffffffef
  413e6b:	cmp    eax,0x11190422
  413e70:	pop    ebx
  413e71:	jae    0x413e8d
  413e73:	mov    esi,0x21c5a7a2
  413e78:	cld    
  413e79:	mov    cl,0x83
  413e7b:	push   0xb373ee49
  413e80:	out    0xd3,al
  413e82:	dec    ebp
  413e83:	xor    edi,DWORD PTR [ebx]
  413e85:	outs   dx,DWORD PTR es:[esi]
  413e87:	inc    esi
  413e88:	cmp    ch,BYTE PTR ds:0x3f93c274
  413e8e:	je     0x413f0e
  413e90:	lods   eax,DWORD PTR ds:[esi]
  413e91:	scas   eax,DWORD PTR es:[edi]
  413e92:	cli    
  413e93:	sbb    DWORD PTR [ebp+0x66acec0a],ebx
  413e99:	repz jmp 0x6ae6e179
  413e9f:	ror    eax,0xd
  413ea2:	(bad)  
  413ea4:	sub    eax,0x9f798281
  413ea9:	push   ss
  413eaa:	dec    ecx
  413eab:	inc    ebp
  413eac:	pop    ebp
  413ead:	dec    ebx
  413eae:	shl    al,cl
  413eb0:	sahf   
  413eb1:	loop   0x413e94
  413eb3:	std    
  413eb4:	add    eax,0xaee3cd76
  413eb9:	xor    al,0x63
  413ebb:	mov    ds:0xda9c857e,eax
  413ec0:	and    esi,DWORD PTR ds:0x3a0bb6a3
  413ec6:	and    eax,0x2d6bc238
  413ecb:	fadd   st(3),st
  413ecd:	sar    DWORD PTR [esi+eiz*1-0x578e51c5],cl
  413ed4:	mov    ebx,0x7687d2fd
  413ed9:	xchg   esi,eax
  413eda:	sub    DWORD PTR [esi-0x4b2706fb],eax
  413ee0:	enter  0xb31f,0xa4
  413ee4:	les    esp,FWORD PTR [ebx]
  413ee6:	mov    edx,DWORD PTR [ebp-0x14]
  413ee9:	mov    DWORD PTR [ebp+0x8],edx
  413eec:	jmp    0x4162e7
  413ef1:	mov    edx,DWORD PTR [ebp+0x8]
  413ef4:	mov    ebx,DWORD PTR [ebp-0x8]
  413ef7:	xor    edx,eax
  413ef9:	xor    ebx,eax
  413efb:	sub    edx,ebx
  413efd:	sub    edx,esi
  413eff:	xor    edx,eax
  413f01:	mov    DWORD PTR [ebp+0x8],edx
  413f04:	mov    edx,DWORD PTR [ebp+0x8]
  413f07:	mov    ebx,DWORD PTR [ebp-0x58]
  413f0a:	add    edx,0x5708f8
  413f10:	imul   edx,ebx
  413f13:	jmp    0x416299
  413f18:	push   eax
  413f19:	pusha  
  413f1a:	clc    
  413f1b:	push   es
  413f1c:	call   0x5435b3a7
  413f21:	add    dh,bh
  413f23:	or     al,al
  413f25:	cmp    ecx,esi
  413f27:	mov    dl,0xb5
  413f29:	jae    0x413fa5
  413f2b:	jp     0x413f2e
  413f2d:	pop    edi
  413f2e:	jp     0x413faa
  413f30:	mov    dh,0x70
  413f32:	push   0xffffff9a
  413f34:	push   ebp
  413f35:	adc    DWORD PTR [edi+0x7a],eax
  413f38:	test   eax,0x9407fd6b
  413f3d:	out    dx,al
  413f3e:	inc    esp
  413f3f:	fistp  QWORD PTR [edi+eax*4-0x5152ff67]
  413f46:	jle    0x413fbf
  413f48:	call   0xef33:0xec954cc2
  413f4f:	je     0x413fbf
  413f51:	jp     0x413ef9
  413f53:	loopne 0x413fbf
  413f55:	aam    0x42
  413f57:	vpunpckhqdq ymm1,ymm1,YMMWORD PTR [eax]
  413f5b:	dec    ebx
  413f5c:	jecxz  0x413f84
  413f5e:	pop    ds
  413f5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f60:	mov    eax,ds
  413f62:	and    dl,cl
  413f64:	mov    dh,0xe9
  413f66:	call   0xedcc:0x159cd358
  413f6d:	jno    0x413fb5
  413f6f:	ds mov ebx,0x18d252fe
  413f75:	and    BYTE PTR [ecx+0x68],al
  413f78:	out    0x3b,eax
  413f7a:	mov    BYTE PTR [esi],bl
  413f7c:	(bad)  [eax-0x4d]
  413f7f:	enter  0x3e9,0x16
  413f83:	pop    ss
  413f84:	daa    
  413f85:	sub    bh,BYTE PTR [ebp+0x4421bd17]
  413f8b:	dec    ebx
  413f8c:	mov    ah,0x7f
  413f8e:	xchg   esi,eax
  413f8f:	or     ebx,DWORD PTR [edi]
  413f91:	xor    al,0x87
  413f93:	adc    eax,0x9979e864
  413f98:	fldcw  WORD PTR [eax-0x1fc3b230]
  413f9e:	inc    eax
  413f9f:	leave  
  413fa0:	arpl   cx,cx
  413fa2:	scas   al,BYTE PTR es:[edi]
  413fa3:	enter  0x646c,0x17
  413fa7:	fadd   st,st(4)
  413fa9:	mov    bl,0xb4
  413fab:	jo     0x413f6d
  413fad:	leave  
  413fae:	cld    
  413faf:	in     al,dx
  413fb0:	repnz pop ss
  413fb2:	sbb    DWORD PTR [edi],ebp
  413fb4:	ds jbe 0x413f8d
  413fb7:	push   ecx
  413fb8:	add    al,0xd5
  413fba:	xchg   esi,eax
  413fbb:	loop   0x413f8d
  413fbd:	pop    eax
  413fbe:	push   edi
  413fbf:	push   ecx
  413fc0:	pop    ecx
  413fc1:	imul   edi,DWORD PTR [ecx+0x53],0xcd24d703
  413fc8:	cmp    DWORD PTR [ebx-0x5c],ecx
  413fcb:	shl    bh,cl
  413fcd:	cs add eax,0xdd70ef7c
  413fd3:	dec    eax
  413fd4:	lahf   
  413fd5:	iret   
  413fd6:	(bad)
  413fda:	xchg   edi,eax
  413fdb:	adc    ebp,DWORD PTR [eax]
  413fdd:	sub    cl,al
  413fdf:	jg     0x413f6e
  413fe1:	int    0xaf
  413fe3:	and    eax,0xe3f021dc
  413fe8:	sbb    DWORD PTR [ebp-0x5f2e6a45],ebp
  413fee:	ja     0x413fb5
  413ff0:	fcmovne st,st(3)
  413ff2:	add    eax,ebx
  413ff4:	js     0x413f7c
  413ff6:	enter  0xcd38,0xfc
  413ffa:	sub    eax,DWORD PTR [esi-0x41]
  413ffd:	dec    edi
  413ffe:	sub    bh,cl
  414000:	jp     0x413fd8
  414002:	aad    0x75
  414004:	fsubrp st(5),st
  414006:	pop    ecx
  414007:	cmp    dl,ah
  414009:	out    0xcc,eax
  41400b:	fnstcw WORD PTR [eax+0xa]
  41400e:	dec    ecx
  41400f:	sbb    ebp,DWORD PTR [ecx+0x35]
  414012:	mul    DWORD PTR ds:0x74ac3657
  414018:	cdq    
  414019:	push   cs
  41401a:	or     ebx,DWORD PTR [ebx-0x6e]
  41401d:	xchg   DWORD PTR ds:0x4b60892d,ecx
  414023:	xor    eax,0x2d6451a0
  414028:	rsqrtps xmm2,XMMWORD PTR [esi+0x746d2487]
  41402f:	call   0x6625:0xd3468118
  414036:	jae    0x413feb
  414038:	push   ds
  414039:	and    DWORD PTR es:[esi+0x7c51a785],ebp
  414040:	outs   dx,BYTE PTR ds:[esi]
  414041:	in     al,dx
  414042:	dec    ebp
  414043:	in     al,dx
  414044:	fadd   QWORD PTR [esi+esi*1+0x200e1f46]
  41404b:	or     esi,DWORD PTR [edx]
  41404d:	xchg   ah,al
  41404f:	jb     0x41401f
  414051:	inc    edx
  414052:	add    al,0xa6
  414054:	adc    DWORD PTR [eax],0x233d10b
  41405a:	push   ds
  41405b:	rol    bl,0x53
  41405e:	jmp    0x68aa:0xbe671e8c
  414065:	ins    BYTE PTR es:[edi],dx
  414066:	ror    DWORD PTR [edi],1
  414068:	xor    ebx,DWORD PTR [ebx-0x5fc2c774]
  41406e:	jns    0x413ffb
  414070:	pop    ebx
  414071:	cmp    eax,0x4ef0b319
  414076:	gs stos BYTE PTR es:[edi],al
  414078:	sub    eax,0x264d22b7
  41407d:	push   esp
  41407e:	mov    bh,0xb5
  414080:	ret    
  414081:	(bad)  
  414082:	fadd   DWORD PTR [eax]
  414084:	push   ds
  414085:	adc    DWORD PTR [ebp-0x706a8043],0xfaf467af
  41408f:	jle    0x41410e
  414091:	fisttp DWORD PTR [esi-0x2]
  414094:	xchg   esp,eax
  414095:	pop    ds
  414096:	bound  esi,QWORD PTR [edx+esi*2-0xc4febf6]
  41409d:	in     eax,0x67
  41409f:	es aam 0x79
  4140a2:	pop    ss
  4140a3:	dec    edx
  4140a4:	fldcw  WORD PTR [ebp-0x4b]
  4140a7:	cli    
  4140a8:	addr16 xchg edx,eax
  4140aa:	mov    esi,0xedd8ff7f
  4140af:	inc    esp
  4140b0:	push   ss
  4140b1:	push   ebp
  4140b2:	scas   al,BYTE PTR es:[edi]
  4140b3:	and    eax,0x167ae61b
  4140b8:	xchg   ebx,eax
  4140b9:	push   es
  4140ba:	pop    ebp
  4140bb:	mov    dh,0x2d
  4140bd:	ds and eax,0x4d5bd328
  4140c3:	icebp  
  4140c4:	pusha  
  4140c5:	das    
  4140c6:	xchg   ebx,eax
  4140c7:	cli    
  4140c8:	sar    esp,cl
  4140ca:	adc    eax,esp
  4140cc:	add    esi,DWORD PTR [edi]
  4140ce:	dec    edx
  4140cf:	ins    DWORD PTR es:[edi],dx
  4140d0:	add    edx,DWORD PTR [edx+0x7e65c03]
  4140d6:	(bad)  
  4140d7:	cmc    
  4140d8:	aam    0x2e
  4140da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140db:	xor    DWORD PTR [eax+0x2ff0a7c1],ecx
  4140e1:	sub    DWORD PTR [edx],ebx
  4140e3:	les    eax,FWORD PTR ds:0x7e16e79c
  4140e9:	add    BYTE PTR [eax+0x3],al
  4140ec:	out    dx,al
  4140ed:	inc    edx
  4140ee:	pop    es
  4140ef:	fwait
  4140f0:	pop    edi
  4140f1:	aam    0xbf
  4140f3:	or     BYTE PTR ds:0x87d7ce69,al
  4140f9:	xor    al,0xb
  4140fb:	or     al,0x43
  4140fd:	inc    esp
  4140fe:	scas   al,BYTE PTR es:[edi]
  4140ff:	xor    dl,BYTE PTR [edi+eax*4+0x67806d8d]
  414106:	out    0xe0,eax
  414108:	mov    ah,0x68
  41410a:	std    
  41410b:	int    0x22
  41410d:	pushw  ss
  41410f:	rcr    BYTE PTR [eax],cl
  414111:	fwait
  414112:	jl     0x414184
  414114:	jns    0x4140da
  414116:	xlat   BYTE PTR ds:[ebx]
  414117:	ret    
  414118:	jb     0x41417a
  41411a:	pop    esp
  41411b:	mov    ch,0x10
  41411d:	out    dx,al
  41411e:	in     eax,dx
  41411f:	iret   
  414120:	mov    esp,0x14c46e10
  414125:	adc    DWORD PTR [edx],ecx
  414127:	rcr    DWORD PTR [esi-0x343d3835],1
  41412d:	cmp    ch,ah
  41412f:	rcl    BYTE PTR [ecx],cl
  414131:	out    0xda,eax
  414133:	mov    al,ds:0x3954969d
  414138:	pop    eax
  414139:	ja     0x4140cb
  41413b:	stos   BYTE PTR es:[edi],al
  41413c:	shl    esp,0x85
  41413f:	cmp    edi,DWORD PTR [ecx]
  414141:	mov    dh,0x75
  414143:	test   BYTE PTR [eax+edi*8],ch
  414146:	and    eax,esp
  414148:	pop    es
  414149:	lea    ebp,ds:0x192406de
  41414f:	pop    edi
  414150:	hlt    
  414151:	jl     0x414103
  414153:	xor    eax,0x1d542d44
  414158:	add    ecx,edx
  41415a:	fimul  DWORD PTR [eax+0x776fa2a5]
  414160:	lods   al,BYTE PTR ds:[esi]
  414161:	scas   eax,DWORD PTR es:[edi]
  414162:	jo     0x414182
  414164:	les    ebp,FWORD PTR [edi+0x5bbaa1c8]
  41416a:	push   edx
  41416b:	cmp    eax,0x2b05305b
  414170:	jp     0x414159
  414172:	call   0x85b6:0xa5b47b7d
  414179:	pop    ss
  41417a:	and    al,0xd7
  41417c:	or     bl,BYTE PTR [ebp+0x36d4e089]
  414182:	mov    ebx,0xbae358de
  414187:	test   al,0xd1
  414189:	jo     0x41419f
  41418b:	iret   
  41418c:	out    0xc8,al
  41418e:	adc    BYTE PTR [esi+0x4],0xee
  414192:	and    dh,0xbf
  414195:	retf   0xf5fa
  414198:	out    dx,al
  414199:	jecxz  0x414148
  41419b:	aam    0x41
  41419d:	fwait
  41419e:	mov    esp,0x1bf29f74
  4141a3:	stos   DWORD PTR es:[edi],eax
  4141a4:	aad    0x36
  4141a6:	je     0x41413c
  4141a8:	xlat   BYTE PTR ds:[ebx]
  4141a9:	adc    BYTE PTR [ebp+eiz*4+0x5c],bh
  4141ad:	retf   0x5c60
  4141b0:	mov    ebx,0xf4596073
  4141b5:	jae    0x4141b9
  4141b7:	dec    edx
  4141b8:	or     al,0xee
  4141ba:	sbb    DWORD PTR [edx],esi
  4141bc:	dec    edi
  4141bd:	dec    esi
  4141be:	mov    ax,0xf0aa
  4141c2:	and    al,0xff
  4141c4:	loope  0x4141d9
  4141c6:	test   al,0xd3
  4141c8:	lods   al,BYTE PTR ds:[esi]
  4141c9:	sbb    bh,BYTE PTR [ebx+0x5d]
  4141cc:	cwde   
  4141cd:	dec    ebx
  4141ce:	push   esi
  4141cf:	mov    ecx,0x5b3ead40
  4141d4:	cdq    
  4141d5:	lods   al,BYTE PTR ds:[esi]
  4141d6:	jmp    0xc2c4:0x75d5a5d6
  4141dd:	dec    esi
  4141de:	mov    edi,0x816e864f
  4141e3:	fwait
  4141e4:	retf   0x5555
  4141e7:	loopne 0x414262
  4141e9:	or     DWORD PTR [edx],ebx
  4141eb:	popf   
  4141ec:	sub    al,bl
  4141ee:	out    dx,al
  4141ef:	loope  0x414245
  4141f1:	inc    eax
  4141f2:	outs   dx,BYTE PTR ds:[esi]
  4141f3:	loopne 0x414186
  4141f5:	xchg   edi,eax
  4141f6:	int3   
  4141f7:	cmp    BYTE PTR [ebp+0x3759abbb],cl
  4141fd:	or     DWORD PTR ds:[esi+0x6d9f08e8],edx
  414204:	mov    ch,0x53
  414206:	and    al,0x7
  414208:	je     0x414279
  41420a:	push   ds
  41420b:	xor    DWORD PTR [ecx+0x39],esp
  41420e:	mov    BYTE PTR [edi-0x262ab2c4],cl
  414214:	jmp    0xa29e441f
  414219:	mov    cl,0xc
  41421b:	outs   dx,DWORD PTR ds:[esi]
  41421c:	cs loop 0x4141b4
  41421f:	pop    edi
  414220:	outs   dx,BYTE PTR ds:[esi]
  414221:	or     esi,DWORD PTR [esi-0x48]
  414224:	sbb    DWORD PTR [ebp+0x6e2f8cda],ecx
  41422a:	add    cl,BYTE PTR [ebx]
  41422c:	add    eax,0x5ac8672d
  414231:	ss pop ecx
  414233:	shl    BYTE PTR [ebp-0x92e09b8],cl
  414239:	ror    cl,0x20
  41423c:	sub    ch,ah
  41423e:	cld    
  41423f:	mov    edi,0x47b9d782
  414244:	jmp    0x414253
  414246:	xchg   ebx,eax
  414247:	ins    BYTE PTR es:[edi],dx
  414248:	pop    ecx
  414249:	adc    DWORD PTR [esp+edi*1-0x5f0583bc],esp
  414250:	xchg   BYTE PTR [eax+0x53],al
  414253:	iret   
  414254:	xor    ah,BYTE PTR [esi+ebp*2+0x18]
  414258:	scas   al,BYTE PTR es:[edi]
  414259:	xlat   BYTE PTR ds:[ebx]
  41425a:	mov    ds:0x912a8b93,eax
  41425f:	inc    ecx
  414260:	mov    dh,0xf
  414262:	xor    BYTE PTR [edi-0x4a],cl
  414265:	mov    ds:0x33f8fb96,eax
  41426a:	mov    ebp,eax
  41426c:	sbb    ebp,esi
  41426e:	pop    esi
  41426f:	sub    ebp,eax
  414271:	pop    ds
  414272:	inc    ebx
  414273:	and    DWORD PTR [ebp+ecx*8+0x79],0xffffffdd
  414278:	popa   
  414279:	push   eax
  41427a:	dec    eax
  41427b:	sar    ebx,1
  41427d:	push   0x9f2db3aa
  414282:	and    BYTE PTR [edi],dh
  414284:	sbb    eax,0xacaac0e9
  414289:	loop   0x4142ce
  41428b:	(bad)  
  41428c:	clc    
  41428d:	lods   eax,DWORD PTR ds:[esi]
  41428e:	aam    0x80
  414290:	xor    ebp,DWORD PTR [ebp+0x4699cf0b]
  414296:	sbb    BYTE PTR [edx-0x535198c0],dl
  41429c:	test   dl,bl
  41429e:	stos   BYTE PTR es:[edi],al
  41429f:	ja     0x4142ff
  4142a1:	xor    al,0x21
  4142a3:	xor    eax,0x967bdb1e
  4142a8:	inc    ebx
  4142a9:	in     al,0x4b
  4142ab:	das    
  4142ac:	test   BYTE PTR [ebp+0x17],0x5c
  4142b0:	push   esp
  4142b1:	ror    DWORD PTR [eax+0x716579cd],1
  4142b7:	and    edi,edx
  4142b9:	fbld   TBYTE PTR [edi]
  4142bb:	jp     0x41424e
  4142bd:	ins    DWORD PTR es:[edi],dx
  4142be:	test   al,ch
  4142c0:	push   esi
  4142c2:	in     al,0x8f
  4142c4:	(bad)  
  4142c5:	push   ebx
  4142c6:	repnz push ebx
  4142c8:	(bad)  
  4142c9:	mov    dl,0x21
  4142cb:	dec    ch
  4142cd:	or     esi,DWORD PTR [eax-0x4b]
  4142d0:	daa    
  4142d1:	ror    edx,0x6a
  4142d4:	(bad)  
  4142d5:	outs   dx,DWORD PTR ds:[esi]
  4142d6:	mov    eax,0xe342c317
  4142db:	es and al,0x50
  4142de:	inc    ebx
  4142df:	push   edx
  4142e0:	push   es
  4142e1:	add    al,0x2d
  4142e3:	sbb    ch,al
  4142e5:	or     DWORD PTR [edx+0x1d44328f],eax
  4142eb:	ins    DWORD PTR es:[edi],dx
  4142ec:	je     0x4142e1
  4142ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142ef:	sahf   
  4142f0:	ins    DWORD PTR es:[edi],dx
  4142f1:	aam    0x45
  4142f3:	sub    BYTE PTR [eax],0x57
  4142f6:	sub    DWORD PTR [eax],ebx
  4142f8:	lods   al,BYTE PTR ds:[esi]
  4142f9:	sub    dh,BYTE PTR [ebx+ebx*1+0x42]
  4142fd:	std    
  4142fe:	or     eax,0x4baaa4ae
  414303:	repz cdq 
  414305:	cmp    ebp,DWORD PTR ds:0x3ed5b5ea
  41430b:	jl     0x41432d
  41430d:	mov    ds:0x5f04c625,eax
  414312:	jne    0x4142f9
  414314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414315:	in     al,dx
  414316:	xor    ah,BYTE PTR [esi]
  414318:	test   eax,0x3098684c
  41431d:	xchg   esp,eax
  41431e:	adc    ebx,DWORD PTR [ebp-0x46e0c02f]
  414324:	xchg   esi,eax
  414325:	pop    ecx
  414326:	test   al,0xc5
  414328:	mov    ecx,0x7910fc6f
  41432d:	clc    
  41432e:	jae    0x4142ef
  414330:	pop    edx
  414331:	add    al,0x80
  414333:	imul   BYTE PTR [ecx-0x32]
  414336:	std    
  414337:	mov    esp,0xc2856d1d
  41433c:	push   edi
  41433e:	mov    edi,0x5768bf9c
  414343:	test   eax,0xa5fa5252
  414348:	inc    edi
  414349:	in     eax,0xad
  41434b:	and    DWORD PTR [ecx],esi
  41434d:	imul   ecx,DWORD PTR ds:0xf54a0fe9,0x6f
  414354:	inc    eax
  414355:	add    eax,0xac5e3cff
  41435a:	push   0x601225fa
  41435f:	into   
  414360:	mov    eax,ds:0x3e4f81c0
  414365:	ins    DWORD PTR es:[edi],dx
  414366:	dec    eax
  414367:	add    dh,bl
  414369:	sbb    eax,0xb32510a6
  41436e:	(bad)  
  41436f:	bound  edi,QWORD PTR [esi]
  414371:	aas    
  414372:	cmp    BYTE PTR [edi+ebp*1+0x2d047344],bh
  414379:	dec    ebp
  41437a:	(bad)  
  41437b:	jle    0x414342
  41437d:	dec    edi
  41437e:	ret    
  41437f:	iret   
  414380:	fwait
  414381:	xor    ecx,ebx
  414383:	es dec edx
  414385:	inc    ecx
  414386:	or     eax,0x71475b0
  41438b:	cmp    BYTE PTR [edx],al
  41438d:	dec    edx
  41438e:	retf   0x37e1
  414391:	and    esi,DWORD PTR [edx]
  414393:	fidivr DWORD PTR [esi+ecx*1-0x47]
  414397:	xchg   edx,eax
  414398:	adc    bl,BYTE PTR ds:0x27a74451
  41439e:	push   ebx
  41439f:	lea    edi,[eax-0x60]
  4143a2:	out    dx,eax
  4143a3:	popf   
  4143a4:	sbb    al,0xca
  4143a6:	mov    al,ds:0xd5f0d90e
  4143ab:	out    dx,eax
  4143ac:	add    cl,0x91
  4143af:	repnz sbb eax,0xac9c7e1d
  4143b5:	enter  0xb0b4,0x82
  4143b9:	xchg   esp,eax
  4143ba:	sub    BYTE PTR [eax],bh
  4143bc:	sbb    dl,dh
  4143be:	cli    
  4143bf:	fs icebp 
  4143c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143c2:	mov    ebx,0xbbed52a2
  4143c7:	fs ins DWORD PTR es:[edi],dx
  4143c9:	or     al,BYTE PTR [edi]
  4143cb:	out    0xa6,eax
  4143cd:	mov    ds:0x6523f362,al
  4143d2:	sbb    BYTE PTR [ebp-0x5b3e2fb0],0xd7
  4143d9:	mov    cl,BYTE PTR [edx+0x57]
  4143dc:	data16 clc 
  4143de:	mov    al,BYTE PTR [eax-0x33]
  4143e1:	(bad)  
  4143e2:	push   edi
  4143e3:	(bad)  
  4143e4:	fsubr  st,st(0)
  4143e6:	rol    BYTE PTR [esi-0x3bc21057],0xa0
  4143ed:	out    dx,al
  4143ee:	mov    eax,0x852f37e2
  4143f3:	imul   ebp,DWORD PTR [esi],0xbff5a41e
  4143f9:	pop    es
  4143fa:	rcr    esp,0xa3
  4143fd:	xor    BYTE PTR [ecx],ch
  4143ff:	pop    ebp
  414400:	imul   edi,ebx,0xfffffffd
  414403:	popa   
  414404:	sub    BYTE PTR [ebp-0x3],ch
  414407:	in     eax,dx
  414408:	jae    0x41443f
  41440a:	push   ebp
  41440b:	cld    
  41440c:	test   DWORD PTR [ebp+0x359903b6],ebx
  414412:	push   es
  414413:	test   eax,0xaf7f9df4
  414418:	adc    al,BYTE PTR [eax+0x60569525]
  41441e:	aam    0xa3
  414420:	rcr    BYTE PTR [eax+ebp*8+0x24],0x6f
  414425:	jl     0x414469
  414427:	add    BYTE PTR [ecx-0x600d9f40],bh
  41442d:	fnstsw WORD PTR [edi+ecx*2-0x23416a4]
  414434:	xor    ebx,edx
  414436:	adc    ebx,DWORD PTR [eax-0x51]
  414439:	mov    al,0xd4
  41443b:	int3   
  41443c:	adc    edx,DWORD PTR [ebx]
  41443e:	pop    esi
  41443f:	push   es
  414440:	sbb    eax,0xf060f3f
  414445:	lods   eax,DWORD PTR ds:[esi]
  414446:	rol    dl,1
  414448:	push   edx
  414449:	sub    DWORD PTR [esp],ecx
  41444c:	dec    edi
  41444d:	jo     0x41440a
  41444f:	stc    
  414450:	pop    ecx
  414451:	loope  0x4144c6
  414453:	pusha  
  414454:	test   DWORD PTR [ecx-0x4],0xb1844ab6
  41445b:	fld    DWORD PTR [ebx]
  41445d:	xor    eax,0x62e09a3c
  414462:	ret    0xf55b
  414465:	mov    ch,0xdf
  414467:	mov    esi,0x4b5ea71d
  41446c:	out    0x56,eax
  41446e:	xchg   DWORD PTR [edi-0x32],esp
  414471:	ret    0x4ad1
  414474:	nop
  414475:	jno    0x41448d
  414477:	or     al,0xd2
  414479:	or     bl,BYTE PTR [edi+0x2e]
  41447c:	jo     0x414488
  41447e:	ret    
  41447f:	cs push ds
  414481:	test   BYTE PTR [esi],ch
  414483:	stc    
  414484:	retf   0xae3d
  414487:	loopne 0x4144d7
  414489:	iret   
  41448a:	test   eax,0xa37a5b43
  41448f:	add    esp,DWORD PTR [ecx+ecx*2-0x18e960d4]
  414496:	add    ah,BYTE PTR [ebx+0x5bd71e27]
  41449c:	fcom   QWORD PTR [ecx-0x24]
  41449f:	iret   
  4144a0:	push   ds
  4144a1:	add    DWORD PTR [edx-0x16],ecx
  4144a4:	sub    DWORD PTR [edi-0x6043c1c1],edi
  4144aa:	scas   eax,DWORD PTR es:[edi]
  4144ab:	add    BYTE PTR [edi-0x5ebe3648],0x25
  4144b2:	jle    0x414491
  4144b4:	fnsave [ecx+0x658676c1]
  4144ba:	imul   BYTE PTR [eax-0x59d5bef6]
  4144c0:	push   esp
  4144c1:	lds    ebp,FWORD PTR [edi+edi*4+0x3e]
  4144c5:	inc    ecx
  4144c6:	inc    edi
  4144c7:	jmp    0x5a8e0a96
  4144cc:	mov    eax,ds:0x12b92b1a
  4144d1:	sbb    eax,0xc0f667d4
  4144d6:	shl    DWORD PTR [edi-0x13c8bdb],cl
  4144dc:	mov    WORD PTR ds:[ecx],?
  4144df:	push   edx
  4144e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144e1:	jmp    0xba58493e
  4144e6:	cld    
  4144e7:	mov    edi,cs
  4144e9:	adc    eax,0xb7b3f2c7
  4144ee:	dec    edi
  4144ef:	sub    DWORD PTR [ebx],0x65
  4144f2:	rcr    ecx,0x30
  4144f5:	sti    
  4144f6:	or     dl,al
  4144f8:	jle    0x414572
  4144fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144fb:	xchg   ebx,eax
  4144fc:	ss jnp 0x41455f
  4144ff:	mov    ebx,edx
  414501:	jne    0x41450a
  414503:	pop    ebp
  414504:	or     ebx,DWORD PTR [eax]
  414506:	pop    edi
  414507:	out    0x34,eax
  414509:	jl     0x41448b
  41450b:	retf   0x7b50
  41450e:	aad    0xb8
  414510:	push   edi
  414511:	aam    0x47
  414513:	push   0xb44994d2
  414518:	adc    esp,esp
  41451a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41451b:	(bad)  
  41451c:	fbstp  TBYTE PTR [ebx]
  41451e:	lea    ecx,[edx-0x31]
  414521:	dec    ebx
  414522:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414523:	sbb    BYTE PTR [eax+0x55],0xb9
  414527:	cwde   
  414528:	jne    0x4144ec
  41452a:	in     eax,0xb1
  41452c:	ins    DWORD PTR es:[edi],dx
  41452d:	inc    ecx
  41452e:	jb     0x41452e
  414530:	ds ins BYTE PTR es:[edi],dx
  414532:	ins    DWORD PTR es:[edi],dx
  414533:	xor    BYTE PTR [esp+esi*4+0x1e],al
  414537:	mov    cl,0x6
  414539:	shl    edi,cl
  41453b:	adc    DWORD PTR [edi+0x128ecf44],edx
  414541:	ss inc edx
  414543:	xchg   esp,eax
  414544:	das    
  414545:	inc    esp
  414546:	sub    ebp,DWORD PTR [edx-0x5ebc3095]
  41454c:	and    DWORD PTR [edx-0x38],eax
  41454f:	jb     0x414515
  414551:	ss stos BYTE PTR es:[edi],al
  414553:	sub    DWORD PTR es:[edi-0x4a9946c4],esp
  41455a:	retf   0xedbd
  41455d:	es mov dx,0x7e3d
  414562:	std    
  414563:	push   0xd5a0f46b
  414568:	cmp    bh,BYTE PTR [ebp+esi*1-0x69]
  41456c:	dec    ecx
  41456d:	dec    edx
  41456e:	xchg   edi,eax
  41456f:	mov    ebp,edx
  414571:	stc    
  414572:	jg     0x41457d
  414574:	cs push edx
  414576:	push   cs
  414577:	mov    ch,0xec
  414579:	cmp    edx,edx
  41457b:	push   ds
  41457c:	pop    esi
  41457d:	(bad)  
  41457e:	leave  
  41457f:	push   es
  414580:	pop    esi
  414581:	mov    esi,0x1bf34553
  414586:	in     al,0x90
  414588:	cmp    al,dh
  41458a:	cmc    
  41458b:	xchg   edi,eax
  41458c:	(bad)  
  41458d:	enter  0xaa84,0xf3
  414591:	mov    edi,0x7fcc9f37
  414596:	scas   al,BYTE PTR es:[edi]
  414597:	int3   
  414598:	pop    ebp
  414599:	cmp    eax,0x9593ecae
  41459e:	sbb    eax,0x996e9a44
  4145a3:	aam    0xf
  4145a5:	in     eax,0x3c
  4145a7:	out    dx,al
  4145a8:	fild   DWORD PTR [edi-0x76]
  4145ab:	push   0x31
  4145ad:	in     eax,0xcc
  4145af:	imul   ebx,DWORD PTR [eax],0xffffffd5
  4145b2:	pushf  
  4145b3:	aam    0xdf
  4145b5:	clc    
  4145b6:	xchg   DWORD PTR [edx-0x17],esp
  4145b9:	and    al,0xae
  4145bb:	xor    ebp,0x21
  4145be:	fnsave [ebp-0x7faa637b]
  4145c4:	sar    edx,1
  4145c6:	xor    BYTE PTR [ebp+0x65f90019],0x5c
  4145cd:	jle    0x414611
  4145cf:	inc    ecx
  4145d0:	sbb    cl,BYTE PTR [ebp+0xc1f461b]
  4145d6:	imul   esp,DWORD PTR [ecx],0x958a8674
  4145dc:	nop
  4145dd:	adc    DWORD PTR [ebx-0x5c2bfd72],edi
  4145e3:	xor    eax,0x664f3dee
  4145e8:	cli    
  4145e9:	mov    eax,0x4b7f4923
  4145ee:	mov    fs,WORD PTR [ebx-0x32]
  4145f1:	push   cs
  4145f2:	mul    DWORD PTR [edx+0x7df7d5b9]
  4145f8:	cmp    al,0xb9
  4145fa:	xchg   edi,eax
  4145fb:	cmp    DWORD PTR [ebp-0x5a],ecx
  4145fe:	mov    ds:0x747adfcc,al
  414603:	inc    eax
  414604:	gs sbb al,0xfc
  414607:	test   eax,0x12b91989
  41460c:	enter  0x9c63,0x4a
  414610:	fcmove st,st(2)
  414612:	fs in  eax,dx
  414614:	rcr    DWORD PTR [ebx+0x758a9c5b],cl
  41461a:	jecxz  0x4145cc
  41461c:	or     eax,0x97ebf2be
  414621:	push   esi
  414622:	ficomp WORD PTR [esi]
  414624:	jecxz  0x4145e5
  414626:	push   esp
  414627:	sub    DWORD PTR [edi],edx
  414629:	jne    0x4146a8
  41462b:	push   ds
  41462c:	xchg   edx,eax
  41462d:	fild   QWORD PTR ds:0x1592387
  414633:	rcl    DWORD PTR [ecx+0x1ca8e996],0x45
  41463a:	int3   
  41463b:	imul   esp,esi,0xffffffbb
  41463e:	dec    eax
  41463f:	out    0xbe,al
  414641:	test   BYTE PTR [edx],ah
  414643:	ret    
  414644:	bswap  edi
  414646:	or     ebp,ecx
  414648:	sub    DWORD PTR [edx+0x34],0xca1318e6
  41464f:	lods   eax,DWORD PTR ds:[esi]
  414650:	fiadd  WORD PTR [ecx]
  414652:	add    BYTE PTR [esi+eiz*1],cl
  414655:	dec    edi
  414656:	mov    ch,0x59
  414658:	(bad)  
  414659:	mov    esp,?
  41465b:	dec    ebx
  41465c:	xchg   esp,eax
  41465d:	pop    ss
  41465e:	arpl   WORD PTR [edx-0x1f],bp
  414661:	inc    esp
  414662:	(bad)  
  414664:	add    al,0x99
  414666:	mov    esi,0x6801cc00
  41466b:	icebp  
  41466c:	and    BYTE PTR [ecx+0x76a25a9b],al
  414672:	clc    
  414673:	ja     0x414693
  414675:	movsx  edx,dh
  414678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414679:	xchg   ecx,eax
  41467a:	ds jge 0x414677
  41467d:	cmp    eax,0x23050936
  414682:	push   0xf4020fe
  414687:	cmc    
  414688:	xor    al,0x39
  41468a:	inc    esi
  41468b:	les    esp,FWORD PTR [ecx-0x32]
  41468e:	hlt    
  41468f:	hlt    
  414690:	cmp    BYTE PTR [esi-0x5c7c27e3],dl
  414696:	xchg   edx,eax
  414697:	mov    ah,0x43
  414699:	add    dh,bh
  41469b:	fsubp  st(3),st
  41469d:	outs   dx,BYTE PTR ds:[esi]
  41469e:	out    dx,al
  41469f:	xor    eax,0x198d4a03
  4146a4:	test   BYTE PTR [edx-0x6d],ah
  4146a7:	mov    al,ds:0xe2545a01
  4146ac:	sti    
  4146ad:	sub    DWORD PTR [eax-0x79fec559],edx
  4146b3:	or     eax,0xe27cc2ae
  4146b8:	enter  0xa2bd,0x16
  4146bc:	jno    0x4146df
  4146be:	hlt    
  4146bf:	out    0xa5,al
  4146c1:	jecxz  0x4146b5
  4146c3:	mov    bl,0x91
  4146c5:	adc    eax,0x25037d6e
  4146ca:	aas    
  4146cb:	fwait
  4146cc:	push   0xd0334b34
  4146d1:	out    0xf6,eax
  4146d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146d4:	outs   dx,DWORD PTR ds:[esi]
  4146d5:	ret    0xd545
  4146d8:	(bad)  
  4146d9:	or     DWORD PTR [esi+0x50],edi
  4146dc:	sbb    eax,0x5a9d56fa
  4146e1:	inc    eax
  4146e2:	in     al,0xbe
  4146e4:	adc    al,0xc8
  4146e6:	daa    
  4146e7:	mov    ss,WORD PTR [edi+0x4b851d16]
  4146ed:	js     0x4146ce
  4146ef:	rol    BYTE PTR [ebp-0x11e81649],cl
  4146f5:	xor    BYTE PTR [edi],bh
  4146f7:	sub    edx,esp
  4146f9:	or     ax,0x72bb
  4146fd:	pusha  
  4146fe:	pop    edx
  4146ff:	pushf  
  414700:	push   esp
  414701:	cwde   
  414702:	in     eax,dx
  414703:	addr16 (bad) 
  414705:	clc    
  414706:	mov    WORD PTR [edi],?
  414708:	fucom  st(0)
  41470a:	adc    eax,0x66bec131
  41470f:	in     al,0xe2
  414711:	shl    DWORD PTR [edx+0x60],cl
  414714:	add    al,0x25
  414716:	in     al,dx
  414717:	into   
  414718:	shl    BYTE PTR [edx-0x18d0fded],0xb4
  41471f:	imul   esp,DWORD PTR gs:[eax+0x58],0xffffffea
  414724:	fidiv  DWORD PTR [ebp+0x5f]
  414727:	lds    ebx,FWORD PTR [eax+0xf]
  41472a:	repz inc edx
  41472c:	cmp    al,0xe8
  41472e:	add    al,0x9
  414730:	add    cl,ah
  414732:	cdq    
  414733:	fs cmp dh,dl
  414736:	test   al,0x4b
  414738:	push   es
  414739:	and    ebp,esp
  41473b:	stos   DWORD PTR es:[edi],eax
  41473c:	out    0x3d,eax
  41473e:	out    0x66,eax
  414740:	nop
  414741:	xor    bh,BYTE PTR [edx-0x37]
  414744:	shl    BYTE PTR [eax+0x3066343],0x9f
  41474b:	loop   0x41478f
  41474d:	push   esp
  41474e:	mov    DWORD PTR [edx+edi*8],edi
  414751:	xchg   esi,eax
  414752:	sti    
  414753:	adc    eax,0xb1138dfe
  414758:	xchg   ecx,eax
  414759:	addr16 jo 0x414736
  41475c:	mov    ds:0x85ec81e0,eax
  414761:	cmp    al,0x9b
  414763:	cdq    
  414764:	in     al,0xe6
  414766:	lods   eax,DWORD PTR ds:[esi]
  414767:	out    0x57,eax
  414769:	jbe    0x4147c3
  41476b:	cmp    DWORD PTR [edx-0x6f],edi
  41476e:	(bad)  [ecx]
  414770:	shl    edi,cl
  414772:	cld    
  414773:	jg     0x4147d4
  414775:	jmp    0x585d:0xc2aff9d5
  41477c:	test   DWORD PTR [eax],0xf1024f85
  414782:	test   al,0x9c
  414784:	int3   
  414785:	xor    eax,0xcca70056
  41478a:	fwait
  41478b:	dec    esi
  41478c:	mov    dl,BYTE PTR [eax+0x7c1af2a4]
  414792:	cld    
  414793:	es je  0x414782
  414796:	inc    ecx
  414797:	popa   
  414798:	pop    ss
  414799:	xchg   edx,eax
  41479a:	sbb    al,0xee
  41479c:	test   DWORD PTR [edi+ecx*4-0x40],ebp
  4147a0:	sbb    BYTE PTR [ecx],ah
  4147a2:	inc    edi
  4147a3:	mov    ch,0xf5
  4147a5:	imul   eax,DWORD PTR [edx-0x5c],0xeca90da
  4147ac:	ins    DWORD PTR es:[edi],dx
  4147ad:	int    0x1e
  4147af:	bound  ebp,QWORD PTR [edx+0x3200c04a]
  4147b5:	fwait
  4147b6:	fwait
  4147b7:	hlt    
  4147b8:	mov    ebp,0xd1f7fad3
  4147bd:	loope  0x41474c
  4147bf:	pop    esi
  4147c0:	push   eax
  4147c1:	mov    ch,0x32
  4147c3:	push   es
  4147c4:	mov    eax,DWORD PTR [eax-0x15f17ce]
  4147ca:	dec    esi
  4147cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147cc:	in     eax,0x9c
  4147ce:	cwde   
  4147cf:	shr    BYTE PTR [edi],1
  4147d1:	lods   al,BYTE PTR ds:[esi]
  4147d2:	sbb    DWORD PTR [ecx],0x5f014fce
  4147d8:	push   es
  4147d9:	retf   0x8ea
  4147dc:	and    al,0x6b
  4147de:	add    DWORD PTR [ebx+0x68b4326e],ecx
  4147e4:	xor    al,BYTE PTR [ecx-0x5b]
  4147e7:	mov    eax,ds:0x10b2dc42
  4147ec:	jnp    0x41479c
  4147ee:	mov    al,ds:0x799a0cb9
  4147f3:	mov    ecx,0x68b82f1
  4147f8:	or     BYTE PTR [eax],ch
  4147fa:	test   BYTE PTR [esi+ebp*4],dh
  4147fd:	les    edx,FWORD PTR [edx+eax*8]
  414800:	and    eax,0x8d0f79f8
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	(bad)  [edi+ecx*2]
  414809:	sbb    al,0x5
  41480b:	sub    DWORD PTR [ecx+ebx*4+0x5feb33bc],ebp
  414812:	pop    ecx
  414813:	lds    edi,FWORD PTR [eax+ebx*8+0x69]
  414817:	inc    esi
  414818:	ficomp DWORD PTR [esp+ebx*4]
  41481b:	sub    al,0xc4
  41481d:	jl     0xfaca9c6f
  414823:	iret   
  414824:	std    
  414825:	inc    esi
  414826:	cs dec ebx
  414828:	repz shl DWORD PTR [esi+0x33c837d5],1
  41482f:	add    BYTE PTR [edx-0xc],cl
  414832:	(bad)  
  414833:	stc    
  414834:	dec    ebp
  414835:	sar    DWORD PTR [ebx-0x17],cl
  414838:	daa    
  414839:	jb     0x41488a
  41483b:	fmul   QWORD PTR [ebx]
  41483d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41483e:	or     ebp,DWORD PTR [esi+0x7e]
  414841:	pusha  
  414842:	mov    edx,0x12480883
  414847:	xchg   DWORD PTR cs:[ebp-0x69],edi
  41484b:	in     al,0x7
  41484d:	cli    
  41484e:	sbb    al,0x4b
  414850:	adc    esp,eax
  414852:	popa   
  414853:	add    cl,ch
  414855:	xchg   edi,eax
  414856:	das    
  414857:	pop    es
  414858:	push   ecx
  414859:	xlat   BYTE PTR ds:[ebx]
  41485a:	ins    BYTE PTR es:[edi],dx
  41485b:	fistp  DWORD PTR [edi]
  41485d:	js     0x414807
  41485f:	mov    ds:0xedd2d602,al
  414864:	bound  edi,QWORD PTR [ebx]
  414866:	push   ds
  414867:	mov    dl,0x89
  414869:	sub    BYTE PTR [ecx],dh
  41486b:	push   es
  41486c:	xor    DWORD PTR [edi-0x36],edx
  41486f:	mov    cl,0x14
  414871:	sub    al,BYTE PTR [eax]
  414873:	dec    DWORD PTR [eax+ecx*8-0x6a49c31e]
  41487a:	pop    ds
  41487b:	sbb    ah,dl
  41487d:	push   ds
  41487e:	pop    ss
  41487f:	arpl   cx,bx
  414881:	lods   al,BYTE PTR ds:[esi]
  414882:	pusha  
  414883:	ins    BYTE PTR es:[edi],dx
  414884:	add    al,0x2
  414886:	push   cs
  414887:	xchg   bx,ax
  414889:	lods   eax,DWORD PTR ds:[esi]
  41488a:	sub    DWORD PTR ds:0x9ff0078d,edx
  414890:	loope  0x4148b0
  414892:	mov    ecx,0x64420c65
  414897:	push   edi
  414898:	inc    ecx
  414899:	(bad)  
  41489a:	inc    ecx
  41489b:	in     al,dx
  41489c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41489d:	cmp    BYTE PTR [edi+eiz*1],bh
  4148a0:	mov    edx,cs
  4148a2:	or     al,dh
  4148a4:	(bad)  
  4148a5:	out    0x8f,al
  4148a7:	xchg   ebx,eax
  4148a8:	mov    dh,0x61
  4148aa:	push   es
  4148ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148ac:	fnsave ds:0x95e7a543
  4148b2:	gs loop 0x41487a
  4148b5:	mov    bl,0xa3
  4148b7:	push   0xf88755c7
  4148bc:	xor    cl,BYTE PTR [eax]
  4148be:	lock lods al,BYTE PTR ds:[esi]
  4148c0:	xchg   DWORD PTR [esi+0x16],esp
  4148c3:	push   ebx
  4148c4:	rcl    BYTE PTR [edx],0x4d
  4148c7:	loop   0x414935
  4148c9:	hlt    
  4148ca:	scas   al,BYTE PTR es:[edi]
  4148cb:	jmp    0x228b:0xf5875fff
  4148d2:	aam    0xe5
  4148d4:	retf   0x7ee8
  4148d7:	pop    edi
  4148d8:	fs sbb al,0x9a
  4148db:	push   ecx
  4148dc:	jp     0x414929
  4148de:	popa   
  4148df:	or     eax,0x2a760a9d
  4148e4:	mov    cl,0xf0
  4148e6:	std    
  4148e7:	mov    dl,0x16
  4148e9:	push   ebx
  4148ea:	inc    edi
  4148eb:	das    
  4148ec:	lea    ecx,[edx]
  4148ee:	xchg   ecx,eax
  4148ef:	inc    ebp
  4148f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148f1:	xor    ah,ah
  4148f3:	or     eax,0x7546c4ac
  4148f8:	jno    0x41492e
  4148fa:	ins    BYTE PTR es:[edi],dx
  4148fb:	mov    al,0x24
  4148fd:	xchg   ecx,eax
  4148fe:	sub    cl,ah
  414900:	xchg   ebp,eax
  414901:	lahf   
  414902:	fbld   TBYTE PTR [ebp+0x40]
  414905:	test   DWORD PTR [edx+ecx*4-0x1e],esp
  414909:	cld    
  41490a:	cli    
  41490b:	ret    
  41490c:	call   0xd8ebd4b4
  414911:	mov    ecx,0x22a88d5
  414916:	daa    
  414917:	leave  
  414918:	jo     0x414939
  41491a:	sbb    BYTE PTR [edi+eax*1-0x4c],dl
  41491e:	push   ds
  41491f:	aas    
  414920:	sub    BYTE PTR [ebx+0x2e12b386],dl
  414926:	mov    esp,0x1e21f228
  41492b:	imul   eax,DWORD PTR [ebx],0xffffffb3
  41492e:	pushf  
  41492f:	cmp    dh,BYTE PTR ds:0x9257e408
  414935:	loopne 0x41499d
  414937:	sbb    ecx,DWORD PTR [ecx+0x25]
  41493a:	aaa    
  41493b:	lock pop esi
  41493d:	sub    eax,0xd6a7dffb
  414942:	mov    edx,DWORD PTR [edi-0x18d87cf7]
  414948:	adc    esi,0x47
  41494b:	call   0x13fc:0x52f5107f
  414952:	adc    DWORD PTR [esi+edi*1],ebp
  414955:	fxch   st(7)
  414957:	jb     0x414935
  414959:	test   bh,bh
  41495b:	int    0x13
  41495d:	(bad)  
  41495e:	sbb    al,0xba
  414960:	sbb    BYTE PTR ds:0xc9b26a22,bl
  414966:	loope  0x41494e
  414968:	add    al,0x25
  41496a:	nop
  41496b:	fsubr  DWORD PTR [edi-0x4e]
  41496e:	mov    ah,0xd0
  414970:	cmp    bl,cl
  414972:	xchg   BYTE PTR [ecx+0x34],ch
  414975:	fldlg2 
  414977:	or     al,0x8b
  414979:	nop
  41497a:	inc    edx
  41497b:	pop    ebx
  41497c:	xchg   ebx,eax
  41497d:	shr    bl,1
  41497f:	push   ebx
  414980:	push   edx
  414981:	fwait
  414982:	xchg   edi,eax
  414983:	pop    eax
  414984:	and    BYTE PTR [esi-0x38],cl
  414987:	into   
  414988:	pop    ecx
  414989:	arpl   di,sp
  41498b:	mov    ds:0x9ab59cae,eax
  414990:	es loop 0x414978
  414993:	pop    ss
  414994:	jnp    0x41494c
  414996:	or     bl,BYTE PTR [ecx+0x3f95a3ee]
  41499c:	out    dx,al
  41499d:	pop    eax
  41499e:	inc    ebx
  41499f:	and    DWORD PTR [eax],0x9bca5b55
  4149a5:	sub    BYTE PTR [ebp+0x2e],bl
  4149a8:	mov    esp,0xc47c62b
  4149ad:	hlt    
  4149ae:	pop    edx
  4149af:	mov    eax,0xdcf2b036
  4149b4:	ror    ecx,cl
  4149b6:	mov    dh,0xea
  4149b8:	popa   
  4149b9:	call   0x27838c5a
  4149be:	adc    esi,0xc6024863
  4149c4:	setb   al
  4149c7:	rcr    dh,0x42
  4149ca:	sub    DWORD PTR [edx-0x59],esp
  4149cd:	cs push ss
  4149cf:	mov    cl,0x2f
  4149d1:	call   0x2e01:0xb159db
  4149d8:	push   esp
  4149d9:	mov    dh,BYTE PTR [ecx-0x5a77fe15]
  4149df:	retf   
  4149e0:	in     al,dx
  4149e1:	test   DWORD PTR [ebp+0x47c6a582],edx
  4149e7:	sbb    BYTE PTR [edi],dh
  4149e9:	push   esi
  4149ea:	adc    al,0xde
  4149ec:	sub    al,0x9c
  4149ee:	fnstcw WORD PTR ds:0x2499f4cf
  4149f4:	cli    
  4149f5:	xchg   esi,eax
  4149f6:	mov    esp,0x34440379
  4149fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149fc:	sbb    ch,BYTE PTR [ebx+0x1e586a71]
  414a02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a03:	pusha  
  414a04:	outs   dx,DWORD PTR ds:[esi]
  414a05:	rol    bh,1
  414a07:	dec    esi
  414a08:	and    ah,BYTE PTR [eax+0x2e2ff9b]
  414a0e:	push   ds
  414a0f:	out    dx,al
  414a10:	jl     0x4149ea
  414a12:	cli    
  414a13:	inc    edi
  414a14:	xchg   esp,eax
  414a15:	js     0x414a00
  414a17:	aam    0x1e
  414a19:	clc    
  414a1a:	jl     0x4149f6
  414a1c:	sub    ebp,0xffffffc9
  414a1f:	int3   
  414a20:	and    esi,DWORD PTR [edi+0xb]
  414a23:	ja     0x4149d8
  414a25:	fcomip st,st(1)
  414a27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a28:	mov    esi,0x596f45e8
  414a2d:	jbe    0x414a5c
  414a2f:	push   es
  414a30:	mov    esi,0x72844ed3
  414a35:	xchg   ecx,eax
  414a36:	inc    ebx
  414a37:	push   es
  414a38:	cs jmp 0xd406:0xdf21ee
  414a40:	xchg   edx,eax
  414a41:	mov    ds:0x5120a578,al
  414a46:	pop    edi
  414a47:	dec    esp
  414a48:	imul   ecx,DWORD PTR [edi-0x42],0x262c26c5
  414a4f:	adc    bh,al
  414a51:	fistp  DWORD PTR [edi+0x32fc4752]
  414a57:	dec    eax
  414a58:	push   0x26
  414a5a:	or     dh,BYTE PTR [eax+0x4a530eaf]
  414a60:	vxorpd ymm5,ymm6,YMMWORD PTR [ebx+0x60d6309e]
  414a68:	mov    ebx,0xbf1e92be
  414a6d:	sub    DWORD PTR [eax-0x1d],esi
  414a70:	dec    ecx
  414a71:	mov    ah,BYTE PTR [edx+edx*1-0x22]
  414a75:	aas    
  414a76:	jle    0x414a92
  414a78:	cmc    
  414a79:	jmp    0x994e1d86
  414a7e:	bound  esp,QWORD PTR [eax]
  414a80:	mov    eax,ds:0x611e75e8
  414a85:	pushf  
  414a86:	xor    eax,0x798b1e5d
  414a8b:	(bad)
  414a8f:	cmp    eax,0x36ac5ffa
  414a94:	pop    edi
  414a95:	dec    edi
  414a96:	add    al,0xd0
  414a98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a99:	test   DWORD PTR [eax],esp
  414a9b:	fnstsw WORD PTR [eax+0x74]
  414a9e:	jge    0x414acf
  414aa0:	inc    esp
  414aa1:	dec    ecx
  414aa2:	sbb    DWORD PTR [ecx+0x6b325f69],eax
  414aa8:	mov    BYTE PTR [ebx],dl
  414aaa:	fcom   DWORD PTR [ecx+0x1d]
  414aad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414aae:	inc    edx
  414aaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ab1:	sbb    eax,DWORD PTR [eax+ebp*1-0x7d]
  414ab5:	loop   0x414a51
  414ab7:	jnp    0x414ae9
  414ab9:	cmp    eax,DWORD PTR [ecx+0x7f]
  414abc:	repz aas 
  414abe:	retf   
  414abf:	push   esi
  414ac0:	mov    edi,0x22580e41
  414ac5:	sbb    DWORD PTR [ebp-0x45],edx
  414ac8:	jg     0x414ae9
  414aca:	fwait
  414acb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414acc:	out    0xd4,eax
  414ace:	fs daa 
  414ad0:	pop    es
  414ad1:	push   ebx
  414ad2:	xchg   dl,bl
  414ad4:	aas    
  414ad5:	icebp  
  414ad6:	mov    bh,0x58
  414ad8:	cmp    cl,dl
  414ada:	inc    ecx
  414adb:	les    ebx,FWORD PTR [ebx]
  414add:	popa   
  414ade:	sbb    ch,BYTE PTR [edx-0x29]
  414ae1:	sub    eax,esp
  414ae3:	clc    
  414ae4:	jl     0x414b56
  414ae6:	or     esp,esi
  414ae8:	add    ch,dh
  414aea:	(bad)  
  414aeb:	fiadd  DWORD PTR [ecx]
  414aed:	cmc    
  414aee:	outs   dx,BYTE PTR ds:[esi]
  414aef:	ficomp WORD PTR [edx]
  414af1:	ror    BYTE PTR [edx],cl
  414af3:	mov    ebp,edx
  414af5:	int    0xb0
  414af7:	test   ebx,ebx
  414af9:	cs paddusw mm2,mm6
  414afd:	pusha  
  414afe:	mov    esp,0xb378fbe0
  414b03:	mov    ebx,0x53afc45e
  414b08:	dec    eax
  414b09:	ror    BYTE PTR [esi+0x697e54e],cl
  414b0f:	pop    ss
  414b10:	xchg   edi,eax
  414b11:	adc    bl,BYTE PTR [ecx-0x15]
  414b14:	add    edx,DWORD PTR [edi-0x71]
  414b17:	shl    esi,cl
  414b19:	mov    bh,0x2e
  414b1b:	ins    BYTE PTR es:[edi],dx
  414b1c:	xchg   edx,eax
  414b1d:	pop    ecx
  414b1e:	push   ebx
  414b1f:	dec    edi
  414b20:	push   ecx
  414b21:	or     bl,BYTE PTR [edx+0xbfc5f3c]
  414b27:	xor    DWORD PTR [esi-0x30b6e67a],eax
  414b2d:	icebp  
  414b2e:	push   ds
  414b2f:	(bad)
  414b32:	lahf   
  414b33:	pusha  
  414b34:	sbb    al,0xea
  414b36:	sbb    esi,ebp
  414b38:	inc    ecx
  414b39:	pop    es
  414b3a:	gs scas al,BYTE PTR es:[edi]
  414b3c:	leave  
  414b3d:	aam    0x68
  414b3f:	mov    edi,0x5dfdc6e7
  414b44:	ss mov ebx,cs
  414b47:	inc    edi
  414b48:	hlt    
  414b49:	cmp    eax,DWORD PTR [eax-0x6611fbf0]
  414b4f:	lods   eax,DWORD PTR ds:[esi]
  414b50:	(bad)  
  414b51:	lods   eax,DWORD PTR ds:[esi]
  414b52:	sbb    DWORD PTR [eax+esi*8+0x6e],0xf10111c7
  414b5a:	out    0x42,al
  414b5c:	add    bh,BYTE PTR [edx]
  414b5e:	fdiv   DWORD PTR [eax-0x25]
  414b61:	lods   eax,DWORD PTR ds:[esi]
  414b62:	pop    eax
  414b63:	mov    bh,0xfe
  414b65:	xchg   ebx,eax
  414b66:	dec    eax
  414b67:	cs clc 
  414b69:	mov    ecx,0x67d657a8
  414b6e:	mov    dh,0xf8
  414b70:	fisttp DWORD PTR [ebp-0x600c8079]
  414b76:	sub    bl,dh
  414b78:	pop    ds
  414b79:	sbb    DWORD PTR [edx-0x495d8da3],esp
  414b7f:	ins    BYTE PTR es:[edi],dx
  414b80:	out    dx,al
  414b81:	jb     0x414b3d
  414b83:	sub    al,0x1b
  414b85:	sub    eax,0x3c180226
  414b8a:	pop    esp
  414b8b:	shl    DWORD PTR [edx+eax*8-0x34],0xda
  414b90:	mov    ebp,DWORD PTR [eax+esi*8]
  414b93:	pop    ds
  414b94:	mov    esi,0x867149f9
  414b99:	inc    eax
  414b9a:	xchg   DWORD PTR [ebp+0x50971aad],eax
  414ba0:	push   ds
  414ba1:	xlat   BYTE PTR ds:[ebx]
  414ba2:	popf   
  414ba3:	sbb    edi,esp
  414ba5:	inc    esp
  414ba6:	daa    
  414ba7:	xchg   edx,eax
  414ba8:	inc    ecx
  414ba9:	iret   
  414baa:	(bad)  
  414bab:	mov    gs,WORD PTR [eax]
  414bad:	jmp    0x414bac
  414baf:	sub    al,0xe
  414bb1:	mov    eax,ds:0xe49aa859
  414bb6:	scas   al,BYTE PTR es:[edi]
  414bb7:	jge    0x414b60
  414bb9:	daa    
  414bba:	fisttp QWORD PTR [edi+0x78]
  414bbd:	in     al,0x8c
  414bbf:	mov    esi,0xcb799412
  414bc4:	pop    ds
  414bc5:	fwait
  414bc6:	in     eax,0x27
  414bc8:	and    DWORD PTR [eax-0x4eb69933],ecx
  414bce:	fimul  DWORD PTR [esi+0x50]
  414bd1:	lahf   
  414bd2:	stos   BYTE PTR es:[edi],al
  414bd3:	fstp   st(5)
  414bd5:	data16 jae 0x414bc1
  414bd8:	pop    ebp
  414bd9:	and    al,0x5f
  414bdb:	dec    ecx
  414bdc:	data16 jb 0x414b7b
  414bdf:	lock jo 0x414c45
  414be2:	mov    al,ds:0x570742d5
  414be7:	daa    
  414be8:	cmp    ebx,DWORD PTR [eax-0x4a]
  414beb:	xchg   esp,eax
  414bec:	out    dx,al
  414bed:	mov    ebx,0x66b1422d
  414bf2:	imul   esi,DWORD PTR [ebp+0x7],0xd4ee008b
  414bf9:	stos   DWORD PTR es:[edi],eax
  414bfa:	push   edx
  414bfb:	adc    BYTE PTR [esi-0x6e26cb5f],cl
  414c01:	out    0x4f,al
  414c03:	xor    bh,BYTE PTR [esi]
  414c05:	xor    eax,0x41a696ac
  414c0a:	mov    dl,0x1c
  414c0c:	scas   eax,DWORD PTR es:[edi]
  414c0d:	pop    esi
  414c0e:	stos   DWORD PTR es:[edi],eax
  414c0f:	ret    0xc663
  414c12:	sub    cl,dl
  414c14:	xchg   edi,eax
  414c15:	iret   
  414c16:	in     eax,0x87
  414c18:	xor    edi,eax
  414c1a:	in     eax,dx
  414c1b:	popa   
  414c1c:	pop    ebp
  414c1d:	mov    al,ds:0x1c35ebe5
  414c22:	cmp    DWORD PTR [edx-0x68fea699],0x1ed3e0ba
  414c2c:	mov    ch,0x7
  414c2e:	and    BYTE PTR [ebx],al
  414c30:	push   0xffffffdc
  414c32:	cmp    edi,DWORD PTR [edi+0x2a01e64]
  414c38:	sub    al,0xc3
  414c3a:	ins    BYTE PTR es:[edi],dx
  414c3b:	(bad)  
  414c3c:	mov    ebp,0xda844791
  414c41:	adc    bl,ch
  414c43:	mov    ah,0x6c
  414c45:	cli    
  414c46:	inc    edi
  414c48:	pop    edx
  414c49:	lods   eax,DWORD PTR ds:[esi]
  414c4a:	sahf   
  414c4b:	dec    eax
  414c4c:	add    BYTE PTR [ecx+ecx*4+0x5ba49877],al
  414c53:	or     DWORD PTR [ebx+edi*2-0x7],ebp
  414c57:	bound  edi,QWORD PTR [ebp-0x64]
  414c5a:	(bad)  
  414c5b:	hlt    
  414c5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c5d:	jno    0x414c7a
  414c5f:	into   
  414c60:	push   ecx
  414c61:	dec    esp
  414c62:	add    esp,DWORD PTR [esp+ebx*4+0x4a554628]
  414c69:	pop    edi
  414c6a:	repz out dx,eax
  414c6c:	aad    0x4b
  414c6e:	(bad)  
  414c6f:	sbb    ebp,ebp
  414c71:	out    dx,eax
  414c72:	test   eax,0xae9ba76e
  414c77:	(bad)  
  414c79:	push   ss
  414c7a:	inc    esp
  414c7b:	inc    ebx
  414c7c:	mov    ebx,0x3251a6c2
  414c81:	outs   dx,BYTE PTR ds:[esi]
  414c82:	pop    ss
  414c83:	mov    cl,0x5f
  414c85:	sti    
  414c86:	jns    0x414ca9
  414c88:	jmp    0x414c47
  414c8a:	ret    0x58bb
  414c8d:	mov    edx,0x6b5321f4
  414c92:	and    al,0x87
  414c94:	mov    bh,0x39
  414c96:	je     0x414d0a
  414c98:	fwait
  414c99:	sub    BYTE PTR [edi],bh
  414c9b:	(bad)  
  414c9c:	jmp    0x414ccf
  414c9e:	int    0x95
  414ca0:	cmp    al,0x6e
  414ca2:	ins    DWORD PTR es:[edi],dx
  414ca3:	(bad)  
  414ca4:	push   esp
  414ca5:	or     ch,ah
  414ca7:	sub    ecx,DWORD PTR [esi+0x30]
  414caa:	cwde   
  414cab:	jo     0x414d14
  414cad:	cmp    esp,esi
  414caf:	pop    es
  414cb0:	movlps QWORD PTR [ecx+0x47],xmm4
  414cb4:	push   ecx
  414cb5:	loop   0x414c8b
  414cb7:	call   0xd3faa272
  414cbc:	sbb    al,0xd9
  414cbe:	leave  
  414cbf:	cmp    BYTE PTR [ecx-0x5e],0xb9
  414cc3:	cmp    ebp,esi
  414cc5:	stc    
  414cc6:	pop    eax
  414cc7:	jp     0x414d43
  414cc9:	nop
  414cca:	mov    edx,ss
  414ccc:	fdiv   st,st(7)
  414cce:	sbb    ch,ch
  414cd0:	imul   edx,DWORD PTR [edi+0x56],0x37
  414cd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cd5:	adc    BYTE PTR [esi],cl
  414cd7:	icebp  
  414cd8:	mov    ecx,0x42761bd9
  414cdd:	addr16 (bad) 
  414cdf:	jmp    0x414d1e
  414ce1:	sub    ebp,eax
  414ce3:	adc    al,0x67
  414ce5:	js     0x414ccc
  414ce7:	aas    
  414ce8:	das    
  414ce9:	mov    ch,0x91
  414ceb:	xchg   edi,eax
  414cec:	mov    ecx,DWORD PTR [esi+0x52]
  414cef:	xchg   edi,eax
  414cf0:	int3   
  414cf1:	ja     0x414d42
  414cf3:	into   
  414cf4:	test   esp,ebp
  414cf6:	sbb    dl,BYTE PTR [eax-0x40]
  414cf9:	into   
  414cfa:	sbb    BYTE PTR [esi+0x36],dh
  414cfd:	rcl    BYTE PTR [ebx+edx*8-0x5],cl
  414d01:	xor    dh,bh
  414d03:	cwde   
  414d04:	loop   0x414d36
  414d06:	mov    dl,0x5c
  414d08:	mov    cl,0x4e
  414d0a:	adc    cl,BYTE PTR ds:0x2ceb2cbc
  414d10:	pop    ebx
  414d11:	imul   al
  414d13:	mov    al,BYTE PTR [ebx]
  414d15:	dec    esi
  414d16:	jno    0x414cf0
  414d18:	xchg   ecx,eax
  414d19:	cmp    cl,dl
  414d1b:	cdq    
  414d1c:	jb     0x414d4e
  414d1e:	pop    edx
  414d1f:	cmp    ebx,DWORD PTR [edi+0x6d]
  414d22:	int3   
  414d23:	out    dx,eax
  414d24:	dec    esi
  414d25:	lahf   
  414d26:	sbb    dl,BYTE PTR [eax-0x600ceb1f]
  414d2c:	addr16 daa 
  414d2e:	mov    edx,0xb72e636f
  414d33:	mov    bh,0xfc
  414d35:	mov    ebp,0xae09391d
  414d3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d3b:	inc    edx
  414d3c:	lods   al,BYTE PTR ds:[esi]
  414d3d:	enter  0x2968,0x93
  414d41:	pop    esi
  414d42:	(bad)  
  414d43:	cli    
  414d44:	xor    DWORD PTR [ecx+0x312c780e],edi
  414d4a:	js     0x414cce
  414d4c:	and    al,0x18
  414d4e:	inc    edi
  414d4f:	add    bh,bl
  414d51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d52:	and    ah,BYTE PTR [ecx+esi*2+0x6a649d8e]
  414d59:	push   ecx
  414d5a:	call   0xfd17c233
  414d5f:	cmp    ebx,0xbfa09c3d
  414d65:	popa   
  414d66:	in     al,0xd4
  414d68:	pop    esi
  414d69:	cdq    
  414d6a:	rcr    BYTE PTR [esi+0xd],cl
  414d6d:	sbb    DWORD PTR [edx-0x68673366],0x52
  414d74:	mov    cs,WORD PTR [eax]
  414d76:	mov    ds:0xb53ae8cf,al
  414d7b:	mov    ds:0x25487d8a,eax
  414d80:	and    BYTE PTR [edx+0x16],al
  414d83:	pop    edx
  414d84:	sub    DWORD PTR [edx],ebx
  414d86:	add    BYTE PTR [ebx-0xa],0x1e
  414d8a:	xor    BYTE PTR [eax+0x148c308e],0xff
  414d91:	cwde   
  414d92:	lahf   
  414d93:	dec    ecx
  414d94:	add    bh,ah
  414d96:	xchg   ebp,eax
  414d97:	inc    esi
  414d98:	vmaxss xmm7,xmm0,DWORD PTR ds:0xf3762d22
  414da0:	das    
  414da1:	jmp    0x414dfe
  414da3:	xchg   esi,eax
  414da4:	jno    0x414de6
  414da6:	xor    bl,cl
  414da8:	xchg   edx,eax
  414da9:	pop    ds
  414daa:	adc    eax,0xb7e41c18
  414daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414db0:	xchg   ebp,eax
  414db1:	test   DWORD PTR [ebx+0x215cd3be],eax
  414db7:	out    0x10,eax
  414db9:	mov    dl,BYTE PTR [ecx-0x2b]
  414dbc:	xchg   edi,eax
  414dbd:	enter  0x17b6,0xd6
  414dc1:	stos   DWORD PTR es:[edi],eax
  414dc2:	adc    DWORD PTR [ebx],ecx
  414dc4:	outs   dx,DWORD PTR ds:[esi]
  414dc5:	imul   ecx,DWORD PTR [ebx-0x6b5180de],0x5f533515
  414dcf:	dec    edx
  414dd0:	fsubp  st(2),st
  414dd2:	add    eax,0x6ef08796
  414dd7:	call   0xde8b:0xe9c58f06
  414dde:	mov    eax,0x21f82b95
  414de3:	(bad)  
  414de4:	int    0x7b
  414de6:	(bad)  
  414de7:	adc    DWORD PTR [ecx+0x3564cb78],esp
  414ded:	stos   BYTE PTR es:[edi],al
  414dee:	scas   eax,DWORD PTR es:[edi]
  414def:	sub    esp,eax
  414df1:	popa   
  414df2:	sub    DWORD PTR gs:[ecx+0x40],ebx
  414df6:	push   ds
  414df7:	and    ebp,edi
  414df9:	enter  0x1597,0x51
  414dfd:	call   0xc980d370
  414e02:	dec    ecx
  414e03:	inc    edi
  414e04:	xchg   esi,eax
  414e05:	das    
  414e06:	add    DWORD PTR [ebx],ecx
  414e08:	mov    bl,0x9d
  414e0a:	inc    ebp
  414e0b:	add    ecx,ebp
  414e0d:	jle    0x414db3
  414e0f:	enter  0xfe37,0x8c
  414e13:	imul   edi,DWORD PTR [esi+edi*8-0x38],0x5d19533a
  414e1b:	push   ebx
  414e1c:	jmp    0x414e91
  414e1e:	test   al,0x38
  414e20:	mov    dh,0x93
  414e22:	scas   eax,DWORD PTR es:[edi]
  414e23:	dec    ecx
  414e24:	popa   
  414e25:	and    al,0x72
  414e27:	or     BYTE PTR [ebp-0x72],0xb1
  414e2b:	shl    DWORD PTR [eax-0xe61dffa],0xc
  414e32:	xlat   BYTE PTR ds:[ebx]
  414e33:	mov    bl,0x82
  414e35:	ss cdq 
  414e37:	sub    edi,DWORD PTR [esi]
  414e39:	repnz inc edi
  414e3b:	mov    bh,0x2a
  414e3d:	test   al,0x33
  414e3f:	push   ss
  414e40:	scas   al,BYTE PTR es:[edi]
  414e41:	mov    cl,0x8d
  414e43:	and    BYTE PTR [ebp+0x58],ch
  414e46:	mov    ch,0x9a
  414e48:	xor    DWORD PTR [esi-0xdf753a6],edx
  414e4e:	lock xor eax,0x84d289fc
  414e54:	dec    edi
  414e55:	or     ebx,DWORD PTR [esp+ebp*4]
  414e58:	inc    eax
  414e59:	mov    DWORD PTR ds:0x2acf9c17,ebx
  414e5f:	sub    ecx,DWORD PTR [ebp-0x77]
  414e62:	enter  0x85ad,0x82
  414e66:	sbb    bl,BYTE PTR [edx+0x7e]
  414e69:	cdq    
  414e6a:	cdq    
  414e6b:	rcl    BYTE PTR [eax-0x1a9e1c7a],0x93
  414e72:	stc    
  414e73:	daa    
  414e74:	and    edx,DWORD PTR [ebp+0xe]
  414e77:	lahf   
  414e78:	les    esp,FWORD PTR [esi+edi*8+0x24]
  414e7c:	pop    ds
  414e7d:	add    BYTE PTR [edi+0x39],ch
  414e80:	pop    edi
  414e81:	iret   
  414e82:	int    0x22
  414e84:	jmp    FWORD PTR [ecx+edi*4+0x710468c6]
  414e8b:	inc    edi
  414e8c:	clc    
  414e8d:	jp     0x414e86
  414e8f:	mov    BYTE PTR [ecx-0x54],bl
  414e92:	or     eax,0x70ab0b46
  414e97:	loopne 0x414ed9
  414e99:	aas    
  414e9a:	inc    esi
  414e9b:	shl    esi,cl
  414e9d:	rol    DWORD PTR [ecx-0x6022e887],cl
  414ea3:	xchg   esp,eax
  414ea4:	mov    eax,0xf95f713b
  414ea9:	test   bl,ah
  414eab:	addr16 loope 0x414e3f
  414eae:	fwait
  414eaf:	xor    al,0x65
  414eb1:	sbb    dh,BYTE PTR [ebp+edi*2-0x70c4e113]
  414eb8:	sti    
  414eb9:	das    
  414eba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ebb:	mov    eax,ds:0x33cef664
  414ec0:	aad    0xd2
  414ec2:	mov    dh,0xef
  414ec4:	pop    ecx
  414ec5:	mov    ds:0x2a23c7d7,al
  414eca:	adc    esi,DWORD PTR [ebp*2+0x19dc4f44]
  414ed1:	xchg   DWORD PTR [ebp+0xc],esi
  414ed4:	dec    ebp
  414ed5:	or     eax,0x836fc968
  414eda:	call   0x8199:0x9f83b0e4
  414ee1:	jg     0x414eab
  414ee3:	sti    
  414ee4:	dec    esi
  414ee5:	mov    bh,0xef
  414ee7:	sub    cl,al
  414ee9:	cmp    ebx,ecx
  414eeb:	mov    ah,0x1a
  414eed:	pop    ecx
  414eee:	dec    esi
  414eef:	pushf  
  414ef0:	imul   esi,eax,0x71
  414ef3:	cmp    esi,DWORD PTR [edi+0x55a1fc8a]
  414ef9:	sbb    BYTE PTR [ecx+0x7e2b6ec],al
  414eff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f00:	icebp  
  414f01:	ror    BYTE PTR [edx+0x44],1
  414f04:	xchg   edx,eax
  414f05:	and    BYTE PTR [edi],ch
  414f07:	add    BYTE PTR [edi+0x54],dh
  414f0a:	push   edx
  414f0b:	(bad)  
  414f0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f0d:	dec    edx
  414f0e:	adc    DWORD PTR [ebx+0x22f631f3],0x55
  414f15:	ins    BYTE PTR es:[edi],dx
  414f16:	xor    ebx,DWORD PTR [esi]
  414f18:	pop    eax
  414f19:	mov    esi,0x5dab818c
  414f1e:	mov    ebx,0xd622a7ec
  414f23:	xor    al,al
  414f25:	push   eax
  414f26:	mov    esp,0x1812ca8a
  414f2b:	call   0x90ed654a
  414f30:	adc    DWORD PTR [ecx-0x5c4c3024],ebx
  414f36:	js     0x414ecc
  414f38:	push   ds
  414f39:	mov    ah,BYTE PTR [eax-0x11]
  414f3c:	scas   al,BYTE PTR es:[edi]
  414f3d:	je     0x414f7b
  414f3f:	xchg   esi,eax
  414f40:	pop    ecx
  414f41:	jl     0x414eff
  414f43:	call   0xad18f65
  414f48:	inc    edx
  414f49:	mov    al,ds:0x36100f77
  414f4e:	pusha  
  414f4f:	sbb    eax,0x35c3ed73
  414f54:	adc    bl,BYTE PTR [ecx-0x6f62e351]
  414f5a:	dec    eax
  414f5b:	jmp    0x6ad545b4
  414f60:	mov    ch,0x79
  414f62:	cmp    BYTE PTR [ebx-0x5c2e34ed],bh
  414f68:	enter  0xdade,0x36
  414f6c:	out    dx,eax
  414f6d:	pop    edx
  414f6e:	js     0x414f06
  414f70:	mov    dl,BYTE PTR [ecx+ebx*2+0x3d]
  414f74:	inc    edx
  414f75:	lods   al,BYTE PTR ds:[esi]
  414f76:	in     al,0x7
  414f78:	pop    esp
  414f79:	push   ebp
  414f7a:	mov    ebx,0xa0859728
  414f7f:	retf   
  414f80:	adc    ch,0x8c
  414f83:	sahf   
  414f84:	rcr    DWORD PTR [edi+0x75],1
  414f87:	leave  
  414f88:	adc    BYTE PTR [ebx-0x6e868022],al
  414f8e:	cmc    
  414f8f:	cmp    esp,DWORD PTR [esi+0x44]
  414f92:	mov    al,0x29
  414f94:	cmc    
  414f95:	(bad)  
  414f96:	sub    al,BYTE PTR ds:0xd358faf4
  414f9c:	leave  
  414f9d:	mov    ebx,0x6564fcb4
  414fa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fa3:	or     bh,BYTE PTR [edx]
  414fa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fa6:	gs not esp
  414fa9:	mov    WORD PTR fs:[ebp+0x190dc7f1],cs
  414fb0:	scas   al,BYTE PTR es:[edi]
  414fb1:	inc    edi
  414fb2:	in     eax,0x88
  414fb4:	adc    bl,BYTE PTR [esi]
  414fb6:	and    eax,0x2d2a8d6c
  414fbb:	test   eax,0x882e4117
  414fc0:	ins    DWORD PTR es:[edi],dx
  414fc1:	mov    bl,0xee
  414fc3:	add    esi,esi
  414fc5:	fcmovnu st,st(1)
  414fc7:	jmp    0x88581159
  414fcc:	or     dh,dh
  414fce:	mov    ebp,0xe19c60d9
  414fd3:	shl    DWORD PTR [ebx],1
  414fd5:	popa   
  414fd6:	retf   
  414fd7:	inc    ecx
  414fd8:	imul   edi,DWORD PTR [ebp-0x29],0x81344e61
  414fdf:	add    eax,0x263204c1
  414fe4:	leave  
  414fe5:	sbb    bl,BYTE PTR gs:[ebp-0x22]
  414fe9:	retf   0x9ac3
  414fec:	scas   al,BYTE PTR es:[edi]
  414fed:	daa    
  414fee:	mov    ah,al
  414ff0:	imul   edi,DWORD PTR [esi],0xd5906839
  414ff6:	cmp    dl,BYTE PTR [esi]
  414ff8:	inc    ebp
  414ff9:	in     al,dx
  414ffa:	(bad)  
  414ffb:	jno    0x415074
  414ffd:	aad    0xd3
  414fff:	pop    ecx
  415000:	mov    eax,ds:0xb4086452
  415005:	popf   
  415006:	bound  eax,QWORD PTR [eax+0x43]
  415009:	inc    esi
  41500a:	or     edi,0x10a9ebad
  415010:	push   ebp
  415011:	js     0x415061
  415013:	mov    ch,cl
  415015:	cli    
  415016:	daa    
  415017:	lods   al,BYTE PTR ds:[esi]
  415018:	xchg   BYTE PTR [ebp+0x9],bl
  41501b:	sub    al,0x66
  41501d:	mov    ebx,0x97875a0a
  415022:	adc    DWORD PTR [eax+0x2b084c91],ebx
  415028:	les    esp,FWORD PTR [esi-0x30]
  41502b:	jb     0x41500b
  41502d:	sub    DWORD PTR ds:0xdf166798,ebp
  415033:	adc    eax,0xf9746ff7
  415038:	dec    edx
  415039:	popf   
  41503a:	pop    es
  41503b:	mov    ch,ch
  41503d:	out    0x4a,eax
  41503f:	adc    esi,0x7a
  415042:	xchg   ebx,eax
  415043:	mov    gs,edx
  415045:	(bad)  
  415046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415047:	ret    
  415048:	sub    BYTE PTR [esi+0x3c694e86],dl
  41504e:	out    dx,al
  41504f:	xchg   esi,eax
  415050:	nop
  415051:	jmp    0xb06154b9
  415056:	push   edi
  415057:	sub    ecx,esp
  415059:	jge    0x415054
  41505b:	enter  0xb007,0xc6
  41505f:	pop    esi
  415060:	hlt    
  415061:	sbb    eax,0x76c1b759
  415066:	(bad)  
  415068:	pop    esp
  415069:	data16 jns 0x41506d
  41506c:	and    eax,DWORD PTR [edi+ebx*4-0x70b249c6]
  415073:	dec    ebp
  415074:	or     al,0x6e
  415076:	mov    ds:0x8d71f2c5,eax
  41507b:	cmp    ch,BYTE PTR [edi-0x68f7d54e]
  415081:	mov    edi,0x798a0baa
  415086:	sub    DWORD PTR [esi+0x88cae74],edx
  41508c:	or     ch,cl
  41508e:	daa    
  41508f:	clc    
  415090:	xor    al,0xb0
  415092:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415093:	and    cl,BYTE PTR [ebx-0x28]
  415096:	retf   
  415097:	adc    DWORD PTR [ecx],edx
  415099:	xchg   edx,eax
  41509a:	fisubr WORD PTR [ebp+0x67c80c37]
  4150a0:	cwde   
  4150a1:	pop    esp
  4150a2:	add    eax,0x942c6a33
  4150a7:	in     al,dx
  4150a8:	mov    gs,ebp
  4150aa:	adc    dl,0xb0
  4150ad:	push   cs
  4150ae:	dec    ebx
  4150af:	mov    al,0x97
  4150b1:	in     eax,0x62
  4150b3:	xchg   BYTE PTR [esi],bl
  4150b5:	push   edi
  4150b6:	xor    DWORD PTR ds:0x659b69a7,edx
  4150bc:	scas   al,BYTE PTR es:[edi]
  4150bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150be:	callw  0xaa78
  4150c2:	add    ebx,ebx
  4150c4:	clc    
  4150c5:	jge    0x4150fe
  4150c7:	(bad)  
  4150c8:	ret    
  4150c9:	push   esp
  4150ca:	push   0x5c2ec1f0
  4150cf:	arpl   WORD PTR [esi-0x2b],si
  4150d2:	hlt    
  4150d3:	sbb    bl,BYTE PTR [edx+0x7179e1db]
  4150d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150da:	xchg   esi,eax
  4150db:	inc    ecx
  4150dc:	xchg   DWORD PTR [ecx-0xa6e6d7a],ecx
  4150e2:	in     al,dx
  4150e3:	sbb    al,0x17
  4150e5:	add    esp,DWORD PTR [ecx]
  4150e7:	cld    
  4150e8:	nop
  4150e9:	in     al,0x71
  4150eb:	addr16 repnz xchg ebp,eax
  4150ee:	pop    edx
  4150ef:	mov    cl,0xf6
  4150f1:	xchg   ebp,eax
  4150f2:	aad    0x86
  4150f4:	sub    al,0x24
  4150f6:	inc    ecx
  4150f7:	dec    ecx
  4150f8:	retf   0x7069
  4150fb:	or     dl,bh
  4150fd:	push   esi
  4150fe:	xor    ebp,DWORD PTR [ecx-0x62]
  415101:	xor    dh,dl
  415103:	xchg   esi,esp
  415105:	call   0x935a:0xc37ff115
  41510c:	repnz add bl,BYTE PTR [edx+0x481256bf]
  415113:	cmp    edi,DWORD PTR [ecx+eiz*4-0x32c49930]
  41511a:	sbb    BYTE PTR [edx+ebp*2],al
  41511d:	je     0x415115
  41511f:	cld    
  415120:	icebp  
  415121:	push   ds
  415122:	and    al,0x9
  415124:	(bad)  
  415125:	lods   eax,DWORD PTR ds:[esi]
  415126:	call   0x138e:0x4b93ff3b
  41512d:	pop    ss
  41512e:	mov    ds:0x570508b7,al
  415133:	inc    eax
  415134:	out    0xed,al
  415136:	stos   DWORD PTR es:[edi],eax
  415137:	dec    eax
  415138:	lods   al,BYTE PTR ds:[esi]
  415139:	shr    DWORD PTR [ebp+eiz*1+0x62],1
  41513d:	dec    edi
  41513e:	mov    DWORD PTR [edx],0x99b38156
  415144:	xor    ebp,DWORD PTR [esp+edi*1]
  415147:	shl    BYTE PTR [ebx],1
  415149:	ror    eax,1
  41514b:	scas   eax,DWORD PTR es:[edi]
  41514c:	adc    bl,bl
  41514e:	dec    edi
  41514f:	sahf   
  415150:	or     ebx,DWORD PTR ds:[ebp-0xf92d081]
  415157:	push   es
  415158:	sub    esi,esi
  41515a:	test   BYTE PTR ss:[esi+eax*1-0x28876d37],dl
  415162:	inc    eax
  415163:	shr    ebx,0x51
  415166:	clc    
  415167:	in     al,dx
  415168:	repnz into 
  41516a:	jne    0x4151da
  41516c:	add    bh,BYTE PTR [edi]
  41516e:	sbb    cl,BYTE PTR [ecx-0x223dc8f8]
  415174:	push   eax
  415175:	fisubr WORD PTR [edx-0x17c723e7]
  41517b:	push   edi
  41517c:	lds    ecx,FWORD PTR [eax]
  41517e:	cdq    
  41517f:	je     0x415129
  415181:	mov    esi,0x87250069
  415186:	mov    ah,0x23
  415188:	adc    eax,0xf1fd5925
  41518d:	popf   
  41518e:	lods   al,BYTE PTR ds:[si]
  415190:	jge    0x41519a
  415192:	mov    eax,ds:0xcdb374ef
  415197:	fs push esp
  415199:	ret    
  41519a:	sub    dh,BYTE PTR [eax+ebp*2]
  41519d:	inc    esi
  41519e:	pop    ecx
  41519f:	adc    ah,BYTE PTR [edx-0x4b31a7c9]
  4151a5:	loop   0x415207
  4151a7:	xchg   esi,eax
  4151a8:	mov    DWORD PTR [esi+0x5e01f0f5],ecx
  4151ae:	inc    edi
  4151af:	(bad)  
  4151b0:	push   esi
  4151b1:	in     eax,dx
  4151b2:	lods   eax,DWORD PTR ds:[esi]
  4151b3:	pop    es
  4151b4:	into   
  4151b5:	sub    edi,ebp
  4151b7:	addr16 repnz fcos 
  4151bb:	jbe    0x415151
  4151bd:	test   eax,0xe0f77e39
  4151c2:	sahf   
  4151c3:	sbb    eax,0xe4937121
  4151c8:	jg     0x41521a
  4151ca:	xor    edi,DWORD PTR [edx-0x58]
  4151cd:	cmp    dh,bh
  4151cf:	jb     0x415192
  4151d1:	stc    
  4151d2:	xor    DWORD PTR [di],ebx
  4151d5:	sbb    al,0x65
  4151d7:	mov    ah,0xef
  4151d9:	pop    edi
  4151da:	shl    dl,1
  4151dc:	in     eax,0xa9
  4151de:	sub    BYTE PTR [ebx+0x47],dh
  4151e1:	pop    ss
  4151e2:	ins    DWORD PTR es:[edi],dx
  4151e3:	push   cs
  4151e4:	sti    
  4151e5:	(bad)  
  4151e6:	das    
  4151e7:	or     BYTE PTR [ebp-0x48],bh
  4151ea:	and    edi,DWORD PTR [ebx+ebp*8]
  4151ed:	push   esi
  4151ee:	fistp  QWORD PTR [edx-0x1]
  4151f1:	cmp    dh,bh
  4151f3:	outs   dx,BYTE PTR ds:[esi]
  4151f4:	inc    ecx
  4151f5:	cmp    esp,edi
  4151f7:	and    BYTE PTR [esi+0x23],0x29
  4151fb:	mov    ds:0xe6dc16c5,al
  415200:	add    eax,0xc17556ae
  415205:	ins    BYTE PTR es:[edi],dx
  415206:	js     0x415233
  415208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415209:	pop    edx
  41520a:	es mov esi,edi
  41520d:	push   ebp
  41520e:	ret    0xd879
  415211:	pop    ecx
  415212:	or     BYTE PTR [edx],bl
  415214:	outs   dx,DWORD PTR ds:[esi]
  415215:	popa   
  415216:	add    ah,bl
  415218:	test   eax,0x4143ac6a
  41521d:	xchg   esp,eax
  41521e:	xor    al,0xf1
  415220:	push   eax
  415221:	ds dec ecx
  415223:	repnz loopne 0x415225
  415226:	popa   
  415227:	mov    esp,0xe723a931
  41522c:	mov    esp,0x266c6ac8
  415231:	scas   al,BYTE PTR es:[edi]
  415232:	ins    BYTE PTR es:[edi],dx
  415233:	inc    ebp
  415234:	jl     0x4151bc
  415236:	lods   al,BYTE PTR ds:[esi]
  415237:	jge    0x41528d
  415239:	pop    ebp
  41523a:	xchg   esp,eax
  41523b:	pusha  
  41523c:	fmul   QWORD PTR [esi-0x6143f7bb]
  415242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415244:	es nop
  415246:	push   ebp
  415247:	mov    esi,0x949bf6c
  41524c:	popa   
  41524d:	in     eax,dx
  41524e:	and    eax,0x6c67f1a3
  415253:	lahf   
  415254:	mov    ?,WORD PTR [edx+0x474d9b44]
  41525a:	out    0xbb,eax
  41525c:	pop    ss
  41525d:	lds    ecx,FWORD PTR [ebp-0x746cc763]
  415263:	and    edi,DWORD PTR [edi+0x23]
  415266:	dec    edi
  415267:	ja     0x41526a
  415269:	fsub   DWORD PTR [eax-0x2a]
  41526c:	pop    ebx
  41526d:	loope  0x4152e3
  41526f:	sub    DWORD PTR [edx],ebp
  415271:	lods   eax,DWORD PTR ds:[esi]
  415272:	lods   al,BYTE PTR ds:[esi]
  415273:	stos   BYTE PTR es:[edi],al
  415274:	lds    ebp,FWORD PTR [ebx-0x78]
  415277:	sbb    eax,0x24c942fd
  41527c:	mov    ecx,0x3711d227
  415281:	stos   BYTE PTR es:[edi],al
  415282:	xor    eax,0x389d1fec
  415287:	repz clc 
  415289:	and    BYTE PTR [edx-0x11d7f262],ch
  41528f:	sar    ebx,cl
  415291:	mov    ds:0x76371338,al
  415296:	adc    BYTE PTR [ebp+0x3c],dl
  415299:	rol    BYTE PTR [esi],cl
  41529b:	jp     0x41523c
  41529d:	xchg   ebp,eax
  41529e:	dec    esi
  41529f:	mov    bh,0x42
  4152a1:	xchg   ecx,eax
  4152a2:	mov    al,ds:0xc74d49ad
  4152a7:	imul   BYTE PTR [eax]
  4152a9:	mov    cl,0x5
  4152ab:	jae    0x4152ae
  4152ad:	mov    dl,0xa4
  4152af:	test   BYTE PTR [ecx+0xb],ch
  4152b2:	inc    ecx
  4152b3:	add    BYTE PTR [edx+0x3f],bl
  4152b6:	jl     0x41530e
  4152b8:	add    ebp,ebx
  4152ba:	fld    st(0)
  4152bc:	or     al,0xe1
  4152be:	shl    BYTE PTR [esi-0x3bda5d73],1
  4152c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152c5:	dec    ecx
  4152c6:	loope  0x4152f9
  4152c8:	mov    eax,ds:0xacc9852d
  4152cd:	clc    
  4152ce:	cwde   
  4152cf:	icebp  
  4152d0:	jmp    0x3b8a:0x203fb422
  4152d7:	or     DWORD PTR ds:0x3b6b2c2c,edi
  4152dd:	and    eax,0x23cfdfa6
  4152e2:	jnp    0x41530a
  4152e4:	out    0x66,eax
  4152e6:	lods   eax,DWORD PTR ds:[esi]
  4152e7:	xchg   ebx,eax
  4152e8:	sub    al,0x99
  4152ea:	jle    0x41533f
  4152ec:	add    BYTE PTR [edi+0x4e],dh
  4152ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152f0:	outs   dx,DWORD PTR ds:[esi]
  4152f1:	lahf   
  4152f2:	jbe    0x415300
  4152f4:	cmp    edx,DWORD PTR [esi+0x148c8adc]
  4152fa:	or     al,0x18
  4152fc:	inc    ebp
  4152fd:	pop    ecx
  4152fe:	cmp    al,0xc4
  415300:	sar    BYTE PTR [edx-0x47],1
  415303:	scas   al,BYTE PTR es:[edi]
  415304:	in     eax,0xd7
  415306:	sbb    BYTE PTR [ebp+0x4d61d6d9],bh
  41530c:	or     dh,ah
  41530e:	jmp    0x41532f
  415310:	add    esi,esi
  415312:	sub    eax,0x8f3e2646
  415318:	lea    ebp,[edi+0x5c]
  41531b:	push   edi
  41531c:	js     0x4152f1
  41531e:	and    bl,BYTE PTR [ebx+0x7d]
  415321:	sti    
  415322:	adc    esi,DWORD PTR [esi+0x72]
  415325:	loope  0x41531f
  415327:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415328:	adc    dx,sp
  41532b:	adc    DWORD PTR [ecx-0x2],0x5ba4c5e2
  415332:	lods   al,BYTE PTR ds:[esi]
  415333:	sub    al,dh
  415335:	shl    BYTE PTR [eax],1
  415337:	xor    ch,BYTE PTR [esp+ebp*2]
  41533a:	adc    ecx,DWORD PTR [ebp+0x2e]
  41533d:	adc    al,0x4
  41533f:	sub    eax,0x5f33460c
  415344:	out    dx,eax
  415345:	out    dx,al
  415346:	stc    
  415347:	ja     0x4152fd
  415349:	inc    esi
  41534a:	adc    WORD PTR fs:[eax],bp
  41534e:	ret    0x1dfe
  415351:	xchg   ebp,eax
  415352:	xor    ch,BYTE PTR [ecx]
  415354:	loope  0x41534f
  415356:	mov    bl,0x6b
  415358:	cmp    edi,DWORD PTR ds:0x36b90a7b
  41535e:	out    0xd,eax
  415360:	jp     0x415301
  415362:	adc    eax,0x1470071d
  415367:	nop
  415368:	pushf  
  415369:	fstp   QWORD PTR [ebx-0x61]
  41536c:	(bad)  [eax-0x67f51138]
  415372:	pop    ebp
  415373:	test   BYTE PTR [ecx],al
  415375:	retf   
  415376:	shr    dh,1
  415378:	push   0xffffffd5
  41537a:	sbb    BYTE PTR [edx+0x7e],ch
  41537d:	test   BYTE PTR [ecx+0x3cf03d31],bh
  415383:	pop    esi
  415384:	pop    ebx
  415385:	mov    ch,0x64
  415387:	enter  0xdf7c,0xa1
  41538b:	pop    eax
  41538c:	and    bh,ah
  41538e:	push   esp
  41538f:	and    cl,ch
  415391:	xor    DWORD PTR [ebp+0x29],edi
  415394:	pop    esp
  415395:	rcr    DWORD PTR [eax],0x41
  415398:	ins    DWORD PTR es:[edi],dx
  415399:	retf   0x470b
  41539c:	xchg   bl,al
  41539e:	gs jp  0x415371
  4153a1:	dec    edi
  4153a2:	call   0x78a6:0x63440e3d
  4153a9:	rol    ah,cl
  4153ab:	sub    eax,0xdeb39170
  4153b0:	jl     0x415422
  4153b2:	or     al,0x1a
  4153b4:	add    eax,0x6714fc95
  4153b9:	mov    ecx,0x80b07bd4
  4153be:	fsubr  DWORD PTR [edi+0x20]
  4153c1:	ds pop es
  4153c3:	sbb    eax,0xbf3ec200
  4153c8:	and    al,0xa4
  4153ca:	out    0x2c,al
  4153cc:	mov    al,BYTE PTR [ebx]
  4153ce:	test   eax,0x34ee83a9
  4153d3:	pop    esp
  4153d4:	dec    edi
  4153d5:	jnp    0x415380
  4153d7:	(bad)  
  4153d9:	in     eax,dx
  4153da:	(bad)  
  4153db:	pushf  
  4153dc:	push   edx
  4153dd:	add    BYTE PTR [ecx-0x4c8dbd1b],bh
  4153e3:	fwait
  4153e4:	loopne 0x4153f1
  4153e6:	lahf   
  4153e7:	frstor [ebp+esi*2+0x41bed5a2]
  4153ee:	push   ecx
  4153ef:	xchg   esi,eax
  4153f0:	ss xchg ebp,eax
  4153f2:	dec    ecx
  4153f3:	sar    BYTE PTR [bp+di],1
  4153f6:	and    eax,0x888df9e8
  4153fb:	or     DWORD PTR [eax-0x6e9d8692],edi
  415401:	xor    cl,bl
  415403:	inc    edi
  415404:	jg     0x4153c7
  415406:	test   al,0xac
  415408:	mov    bh,0xad
  41540a:	push   DWORD PTR [eax+0x2a115e1]
  415410:	mov    cl,0x24
  415412:	mov    ds:0x9badf8ea,eax
  415417:	jae    0x4153ce
  415419:	shr    DWORD PTR [ebp-0x22],cl
  41541c:	or     DWORD PTR ds:0xb46ca2f0,0x44
  415423:	sbb    eax,0xdcafa9c5
  415428:	test   eax,0x28b51b74
  41542d:	aas    
  41542e:	daa    
  41542f:	adc    dl,BYTE PTR [eax]
  415431:	out    0xe2,al
  415433:	adc    al,0x79
  415435:	mov    DWORD PTR [edi],ecx
  415437:	cdq    
  415438:	inc    esi
  415439:	ins    DWORD PTR es:[edi],dx
  41543a:	not    DWORD PTR [edi-0x6f]
  41543d:	loopne 0x41546b
  41543f:	cs test eax,0x2049f781
  415445:	ins    BYTE PTR es:[edi],dx
  415446:	inc    ecx
  415447:	sub    dl,BYTE PTR [ebx+0x10]
  41544a:	call   0x29ef0037
  41544f:	mov    esp,0x4e97320a
  415454:	jno    0x4153ee
  415456:	xchg   BYTE PTR [edx+edx*1+0x7a],dl
  41545a:	retf   0x3754
  41545d:	ins    BYTE PTR es:[edi],dx
  41545e:	ss jecxz 0x4154db
  415461:	cmp    DWORD PTR [edx],ebp
  415463:	pop    ds
  415464:	pop    ecx
  415465:	imul   ebx,DWORD PTR [edx+esi*4],0xec24a52
  41546c:	pop    ebx
  41546d:	xchg   edx,eax
  41546e:	lea    edx,[ecx+0x7a]
  415471:	adc    al,bh
  415473:	xchg   esp,eax
  415474:	xchg   edi,eax
  415475:	rcl    BYTE PTR [eax-0x46d96e71],cl
  41547b:	adc    al,0xaf
  41547d:	scas   eax,DWORD PTR es:[edi]
  41547e:	(bad)  
  41547f:	xor    eax,0x1df26f5b
  415484:	and    BYTE PTR [eax+eiz*8+0x52],ah
  415488:	pop    esi
  415489:	scas   eax,DWORD PTR es:[edi]
  41548a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41548b:	mov    eax,ds:0xfc2799bf
  415490:	ss cmp al,0x6e
  415493:	jl     0x4154b0
  415495:	rep stos DWORD PTR es:[edi],eax
  415497:	sbb    ebx,DWORD PTR [eax]
  415499:	push   ebx
  41549a:	mov    ah,0x3c
  41549c:	sbb    DWORD PTR [edx],0x17
  41549f:	out    dx,eax
  4154a0:	je     0x415449
  4154a2:	(bad)  
  4154a4:	in     al,dx
  4154a5:	xor    BYTE PTR [ecx+0x1],al
  4154a8:	mov    dl,0xf8
  4154aa:	adc    esp,esi
  4154ac:	cwde   
  4154ad:	stos   DWORD PTR es:[edi],eax
  4154ae:	mov    eax,ds:0xb372951d
  4154b3:	mov    eax,ds:0x514cfd3f
  4154b8:	repz cmp esi,ebx
  4154bb:	inc    eax
  4154bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154be:	add    DWORD PTR [edi],0xffffff95
  4154c1:	xor    eax,0x3eb3333c
  4154c6:	ins    DWORD PTR es:[edi],dx
  4154c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154c8:	les    ecx,FWORD PTR [ecx+ebp*2+0x4e]
  4154cc:	cmp    DWORD PTR [esi+0x7ddfb837],eax
  4154d2:	out    dx,al
  4154d3:	stc    
  4154d4:	ss cmp eax,0x53aef392
  4154da:	aas    
  4154db:	shl    BYTE PTR [eax+0x56dfaa2],0x92
  4154e2:	out    0xb0,al
  4154e4:	arpl   ax,dx
  4154e6:	shl    BYTE PTR [edx+0x10b0979c],1
  4154ec:	cmc    
  4154ed:	pop    ecx
  4154ee:	mov    ecx,0x3fefc69b
  4154f3:	(bad)  
  4154f4:	nop
  4154f5:	arpl   WORD PTR es:0x982ba2f0,bp
  4154fc:	dec    esp
  4154fd:	addr16 and eax,edx
  415500:	mov    ebx,0x7ddac059
  415505:	lahf   
  415506:	xor    eax,ebx
  415508:	add    eax,0xe0cb9ef4
  41550d:	add    eax,0x8d90075d
  415512:	dec    ebp
  415513:	xchg   ebp,eax
  415514:	xor    dh,BYTE PTR [ebx+0x28]
  415517:	cmp    dh,BYTE PTR [edx-0x3ccfaf28]
  41551d:	xchg   esi,eax
  41551e:	dec    edx
  41551f:	jge    0x415548
  415521:	(bad)  
  415522:	sbb    BYTE PTR [edi],cl
  415524:	or     ebp,ecx
  415526:	and    eax,0xb2874f00
  41552b:	push   0xeced8c67
  415530:	test   al,0x35
  415532:	push   esi
  415533:	sub    al,0x20
  415535:	sbb    BYTE PTR [ecx+eiz*8+0x1993a1d],dh
  41553c:	out    dx,al
  41553d:	int3   
  41553e:	xor    eax,0x3a1add43
  415543:	mov    edx,0x25128a87
  415548:	es pushf 
  41554a:	ficomp WORD PTR [esi+edi*4]
  41554d:	adc    BYTE PTR [edx-0x4be6a269],ah
  415553:	test   eax,0x4dc503bd
  415558:	push   esp
  415559:	(bad)  
  41555a:	push   esi
  41555b:	or     ecx,DWORD PTR [esi]
  41555d:	popa   
  41555e:	gs enter 0xaef8,0xf
  415563:	cmp    eax,0x6b460ea7
  415568:	imul   esi,DWORD PTR [eax+0x68a28a98],0xffffff8e
  41556f:	stc    
  415570:	xchg   BYTE PTR [ebx+0x15],cl
  415573:	inc    ebp
  415574:	loop   0x4155ac
  415576:	jnp    0x415593
  415578:	jecxz  0x4155ac
  41557a:	aam    0x7c
  41557c:	retf   
  41557d:	jp     0x415562
  41557f:	int    0xdb
  415581:	ffreep st(1)
  415583:	ss add al,0xc1
  415586:	dec    ecx
  415587:	inc    edx
  415588:	mov    ah,0xd0
  41558a:	sub    bl,BYTE PTR [eax-0x4139dc69]
  415590:	dec    ebp
  415591:	adc    al,0xfc
  415593:	test   DWORD PTR [bx],ebx
  415596:	fsub   QWORD PTR ds:[ebp-0x25b1de85]
  41559d:	repz (bad) 
  41559f:	dec    edx
  4155a0:	sub    BYTE PTR [esi+0x16],bl
  4155a3:	adc    ebx,esp
  4155a5:	xchg   edi,eax
  4155a6:	xchg   ebx,eax
  4155a7:	dec    ecx
  4155a8:	aaa    
  4155a9:	adc    BYTE PTR ds:0x66de8dc4,0xa4
  4155b0:	dec    ebx
  4155b1:	je     0x415551
  4155b3:	pusha  
  4155b4:	fcom   DWORD PTR [edi]
  4155b6:	loopne 0x4155ce
  4155b8:	fsubrp st(4),st
  4155ba:	inc    esi
  4155bb:	fadd   QWORD PTR [esi]
  4155bd:	pop    ds
  4155be:	mov    eax,ds:0xae6fd207
  4155c3:	push   ebp
  4155c4:	es pop edx
  4155c6:	gs into 
  4155c8:	mov    DWORD PTR [ebx-0x36aa45ce],esi
  4155ce:	hlt    
  4155cf:	stos   DWORD PTR es:[edi],eax
  4155d0:	gs int 0xa3
  4155d3:	fild   QWORD PTR [ebx+0x732a0dcd]
  4155d9:	mov    DWORD PTR [eax-0x32],esi
  4155dc:	mov    cl,0x97
  4155de:	das    
  4155df:	or     al,0xfb
  4155e1:	bswap  esi
  4155e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155e4:	es push edi
  4155e6:	sbb    BYTE PTR [edi],0x19
  4155e9:	xchg   esp,eax
  4155ea:	das    
  4155eb:	pop    edi
  4155ec:	lods   eax,DWORD PTR ds:[esi]
  4155ed:	jbe    0x415614
  4155ef:	fisubr DWORD PTR [esi]
  4155f1:	mov    bh,0x94
  4155f3:	fld    DWORD PTR [edx+0x37]
  4155f6:	ins    DWORD PTR es:[edi],dx
  4155f7:	jge    0x4155ba
  4155f9:	jb     0x4155a1
  4155fb:	dec    edi
  4155fc:	jmp    0xfc8:0x27dfcece
  415603:	xchg   esi,eax
  415604:	call   0x1c0bc396
  415609:	or     al,0x67
  41560b:	or     al,0xb0
  41560d:	shr    BYTE PTR [edx],cl
  41560f:	adc    dh,BYTE PTR [ebx+0x6d8b42c8]
  415615:	sbb    eax,0x6f0e1812
  41561a:	call   0xd575:0xbd5f24d
  415621:	rcl    dh,1
  415623:	push   ecx
  415624:	cmp    edi,esi
  415626:	mov    eax,ds:0xad9e62e4
  41562b:	sar    BYTE PTR [ebx-0x15],1
  41562e:	into   
  41562f:	mov    ebx,0x4f0f387f
  415634:	mov    al,ds:0xa092deb5
  415639:	add    edi,DWORD PTR [ecx]
  41563b:	and    al,dh
  41563d:	inc    ebx
  41563e:	mov    al,0xdc
  415640:	enter  0x7a12,0x80
  415644:	add    ebx,DWORD PTR [eax-0x72]
  415647:	fimul  DWORD PTR [ebp-0x21]
  41564a:	in     al,0x10
  41564c:	xchg   esp,eax
  41564d:	pop    esi
  41564e:	sbb    al,0xe3
  415650:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415651:	setno  BYTE PTR [ecx]
  415654:	pusha  
  415655:	push   eax
  415656:	neg    DWORD PTR [edi-0x68]
  415659:	repz cmp al,0x46
  41565c:	mov    eax,0x94f8addd
  415661:	xor    edi,DWORD PTR [edx+eax*1]
  415664:	fisttp DWORD PTR [esi+esi*8]
  415667:	fild   DWORD PTR [esi+0x68]
  41566a:	sbb    eax,0xdd85dc2c
  41566f:	lds    esi,FWORD PTR [ecx+0x344af213]
  415675:	xchg   edi,ecx
  415677:	xchg   edi,eax
  415678:	jo     0x4156e6
  41567a:	fmul   st,st(2)
  41567c:	rcr    DWORD PTR [ebp+0x28],0xb4
  415680:	jns    0x415664
  415682:	cs fld st(0)
  415685:	dec    ebx
  415686:	add    eax,0x88105668
  41568b:	cmc    
  41568c:	and    BYTE PTR [ecx],0x0
  41568f:	xor    ecx,esp
  415691:	hlt    
  415692:	mov    edx,0xef5824ee
  415697:	pop    edx
  415698:	adc    eax,0xbcb57f1f
  41569d:	fldenv [edx]
  41569f:	mov    bh,0xd
  4156a1:	push   ebp
  4156a2:	xlat   BYTE PTR ds:[ebx]
  4156a3:	adc    BYTE PTR [esi],bh
  4156a5:	xchg   esi,eax
  4156a6:	push   edx
  4156a7:	jmp    0xc6c1:0xc8b25648
  4156ae:	pop    ss
  4156af:	add    eax,edi
  4156b1:	test   BYTE PTR ds:0x582a2199,0x6d
  4156b8:	mov    ebp,0x1e3119d
  4156bd:	jnp    0x4156ef
  4156bf:	stc    
  4156c0:	sub    eax,DWORD PTR [esi-0x7e782296]
  4156c6:	(bad)  
  4156c7:	lahf   
  4156c8:	push   edx
  4156c9:	pop    ds
  4156ca:	addr16 fwait
  4156cc:	pop    edi
  4156cd:	xchg   esp,eax
  4156ce:	hlt    
  4156cf:	xchg   ebx,eax
  4156d0:	test   DWORD PTR ds:0xa9bbe62c,edx
  4156d6:	xchg   DWORD PTR [eax-0x5c],edi
  4156d9:	jne    0x41573d
  4156db:	jb     0x41574d
  4156dd:	fs add ecx,0x43
  4156e1:	xchg   edi,eax
  4156e2:	out    0xe1,eax
  4156e4:	xor    eax,0xfbd853cd
  4156e9:	or     BYTE PTR [ebx-0x37752de4],0x39
  4156f0:	std    
  4156f1:	cs and al,bl
  4156f4:	fwait
  4156f5:	sub    al,0xc2
  4156f7:	clc    
  4156f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156f9:	sub    bl,BYTE PTR [esp+eax*2+0x2b017fe8]
  415700:	pop    ds
  415701:	sar    DWORD PTR [ebx+0x2614c3e4],cl
  415707:	fs push ecx
  415709:	ss cwde 
  41570b:	outs   dx,DWORD PTR ds:[esi]
  41570c:	pop    ss
  41570d:	mov    fs,ebx
  41570f:	int    0xf6
  415711:	loopne 0x415693
  415713:	pop    eax
  415714:	repnz fldcw WORD PTR [esi]
  415717:	jo     0x415706
  415719:	jns    0x4156e5
  41571b:	jae    0x41577f
  41571d:	mov    ah,0xab
  41571f:	push   ss
  415720:	mov    bh,0xdb
  415722:	ss adc ah,ah
  415725:	gs stos BYTE PTR es:[edi],al
  415727:	sbb    al,0xe1
  415729:	or     BYTE PTR [edx],dl
  41572b:	xor    dl,BYTE PTR [ebp-0x482d3f7a]
  415731:	mov    ecx,0xafcd5ebb
  415736:	pop    ds
  415737:	ins    BYTE PTR es:[edi],dx
  415738:	adc    eax,0xa968493b
  41573d:	or     eax,0x45dab8c4
  415742:	sbb    eax,0x2527ba11
  415747:	popa   
  415748:	jb     0x415750
  41574a:	jne    0x4157aa
  41574c:	out    dx,eax
  41574d:	test   DWORD PTR [eax+0x6e],ebp
  415750:	out    0x99,eax
  415752:	std    
  415753:	aas    
  415754:	aam    0x9d
  415756:	aas    
  415757:	shr    BYTE PTR [ebx-0x1795aab5],1
  41575d:	enter  0xf1fc,0xd2
  415761:	mov    ah,ah
  415763:	jle    0x41578e
  415765:	mov    cl,0xab
  415767:	adc    DWORD PTR [ebx-0x3e],esi
  41576a:	repz fidivr WORD PTR [edi]
  41576d:	in     al,dx
  41576e:	loopne 0x415722
  415770:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415771:	icebp  
  415772:	loope  0x4157a0
  415774:	repz ss sub al,0xf7
  415778:	pop    esi
  415779:	aam    0x1c
  41577b:	and    ecx,DWORD PTR [edx+edi*4-0x2e]
  41577f:	(bad)  
  415780:	bound  ebp,QWORD PTR [ebx]
  415782:	int3   
  415783:	push   eax
  415784:	xchg   BYTE PTR [edx],ch
  415786:	or     al,0x5d
  415788:	jmp    0xdef16957
  41578d:	jbe    0x4157c9
  41578f:	jbe    0x4157ad
  415791:	push   es
  415792:	xor    BYTE PTR ds:0xb4d16e07,ch
  415798:	rol    BYTE PTR [edi+edi*2-0x77],0x66
  41579d:	mov    eax,0x363f68fe
  4157a2:	xor    eax,0xc2d595ac
  4157a7:	test   ebx,0x42d3b945
  4157ad:	sti    
  4157ae:	leave  
  4157af:	sbb    eax,0x6243a629
  4157b4:	or     al,0x51
  4157b6:	(bad)  
  4157b8:	in     al,dx
  4157b9:	push   ds
  4157ba:	inc    ebp
  4157bb:	pop    ecx
  4157bc:	inc    ecx
  4157bd:	pop    esp
  4157be:	xor    dh,BYTE PTR [edi]
  4157c0:	test   DWORD PTR [esi+ebp*2+0x7b8e0b77],ebx
  4157c7:	or     BYTE PTR [edi+0x6113f2a6],ah
  4157cd:	pop    edx
  4157ce:	xchg   edx,eax
  4157cf:	(bad)  
  4157d0:	cld    
  4157d1:	fcom   DWORD PTR [eax-0x2fbcf076]
  4157d7:	fs ds inc esi
  4157da:	mov    cl,0xb6
  4157dc:	inc    ecx
  4157dd:	push   ds
  4157de:	cmp    esp,0xffffff86
  4157e1:	sub    ebx,DWORD PTR [edi]
  4157e3:	inc    edx
  4157e4:	and    DWORD PTR [edx-0x2a7e2e63],edi
  4157ea:	aas    
  4157eb:	mov    ebx,0xf1ae0c1b
  4157f0:	xchg   ebx,eax
  4157f1:	test   al,0xaa
  4157f3:	dec    esi
  4157f4:	(bad)  [esi]
  4157f6:	in     eax,0xea
  4157f8:	pop    esi
  4157f9:	lods   eax,DWORD PTR ds:[esi]
  4157fa:	clc    
  4157fb:	dec    esi
  4157fc:	dec    edx
  4157fd:	jmp    0x41586e
  4157ff:	xchg   esi,eax
  415800:	pop    edi
  415801:	inc    esi
  415802:	push   edi
  415803:	sub    eax,0xddbabd4b
  415808:	push   ds
  415809:	lahf   
  41580a:	mov    ebx,0xc1089fc7
  41580f:	pop    ebp
  415810:	es push ds
  415812:	(bad)  
  415813:	repz out dx,al
  415815:	clc    
  415816:	xor    al,0x4
  415818:	xchg   BYTE PTR fs:0x2c5ffac5,ch
  41581f:	or     eax,0x335b820
  415824:	mov    dl,0x96
  415826:	or     dl,BYTE PTR [ecx]
  415828:	outs   dx,DWORD PTR ds:[esi]
  415829:	and    eax,0xdb464dc
  41582e:	sub    esp,0xffffffc8
  415831:	shl    BYTE PTR [edi+0x41],cl
  415834:	in     al,dx
  415835:	xchg   esp,eax
  415836:	dec    ecx
  415837:	push   ebp
  415838:	mov    ch,0x78
  41583a:	ror    DWORD PTR [edi],cl
  41583c:	adc    eax,0x2473426
  415841:	imul   bp,WORD PTR [ebx+esi*1+0x791f89b3],0x886c
  41584b:	cmp    al,0x1c
  41584d:	jmp    0xbf38:0xe0d83d5b
  415854:	xchg   esi,eax
  415855:	mov    ch,0xa7
  415857:	jmp    0xeefe:0xf1adcbd2
  41585e:	cmp    BYTE PTR [ebp-0x6e],dl
  415861:	xchg   BYTE PTR [ebp-0x2b],dl
  415864:	lods   eax,DWORD PTR ds:[esi]
  415865:	xchg   ecx,eax
  415866:	or     ah,BYTE PTR [ebx+esi*8]
  415869:	jmp    0x417b256b
  41586e:	iret   
  41586f:	adc    esp,DWORD PTR [esi+0x4d]
  415872:	sub    ah,BYTE PTR [ebp+edi*2+0x48342452]
  415879:	push   esi
  41587a:	push   es
  41587b:	xor    DWORD PTR [eax+0x70b7a496],esi
  415881:	adc    eax,0x244a28bc
  415886:	cmp    al,0x1a
  415888:	push   ds
  415889:	add    bl,al
  41588b:	dec    esi
  41588c:	xor    al,0x6a
  41588e:	adc    eax,DWORD PTR [edi-0x7327be56]
  415894:	(bad)  
  415896:	pop    esi
  415897:	adc    ebp,DWORD PTR [edx+0x44]
  41589a:	xor    bl,BYTE PTR [esi+edi*2-0x17]
  41589e:	xchg   esi,eax
  41589f:	int    0x82
  4158a1:	xor    edi,edx
  4158a3:	or     DWORD PTR [edi],0x5e281a95
  4158a9:	mov    edx,0xd289d6b4
  4158ae:	push   0x8be5c73b
  4158b3:	or     al,0xfd
  4158b5:	add    dl,BYTE PTR [esi-0xb]
  4158b8:	leave  
  4158b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158ba:	add    edi,DWORD PTR [ecx]
  4158bc:	lock outs dx,BYTE PTR gs:[esi]
  4158bf:	cld    
  4158c0:	jge    0x415911
  4158c2:	test   al,0xbf
  4158c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158c5:	xor    BYTE PTR [ebx+0x266f6ef4],dh
  4158cb:	addr16 xchg DWORD PTR cs:[bx+0x2b],ebx
  4158d1:	pop    ebx
  4158d2:	test   eax,0xe2ca982e
  4158d7:	jb     0x41588a
  4158d9:	in     al,dx
  4158da:	rcr    BYTE PTR [ebx-0x35a69696],1
  4158e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158e2:	ja     0x415938
  4158e4:	hlt    
  4158e5:	add    BYTE PTR es:[ebx],cl
  4158e8:	add    al,0x5
  4158ea:	dec    esp
  4158eb:	aas    
  4158ec:	and    al,BYTE PTR [esi-0xc]
  4158ef:	and    bh,BYTE PTR [esp+edx*4+0x2313c8]
  4158f6:	xchg   ebx,eax
  4158f7:	xor    eax,eax
  4158f9:	and    ebp,DWORD PTR [ebx-0x3a]
  4158fc:	(bad)  
  4158fd:	aaa    
  4158fe:	mov    esp,0xc4689f25
  415903:	mov    ecx,gs
  415905:	sti    
  415906:	add    edi,DWORD PTR [ebx+ebx*2]
  415909:	xchg   ebp,eax
  41590a:	or     edx,DWORD PTR [ebx-0x1e020d39]
  415910:	jns    0x415927
  415912:	sbb    BYTE PTR [esi-0xe],0x9c
  415916:	sti    
  415917:	pop    ecx
  415918:	xchg   edx,eax
  415919:	cmp    edx,DWORD PTR [ebx-0x7df87f0e]
  41591f:	cli    
  415920:	jno    0x415922
  415922:	cli    
  415923:	dec    DWORD PTR [eax+0x5e]
  415926:	call   0x4cb0c66b
  41592b:	js     0x415916
  41592d:	mov    edx,0x41005ae2
  415932:	jbe    0x4158c0
  415934:	mov    ebx,DWORD PTR [edx+0x1e1fdeaa]
  41593a:	stc    
  41593b:	sub    BYTE PTR [esi],0xef
  41593e:	repz sbb DWORD PTR ds:0xe8ee487e,ebx
  415945:	cmp    cl,BYTE PTR [esi+0x5]
  415948:	push   edi
  415949:	adc    ebp,ecx
  41594b:	mov    al,ds:0xf8cd78d4
  415950:	or     ah,BYTE PTR [edx+0x3cbad735]
  415956:	xor    BYTE PTR [esi-0x3d],dl
  415959:	clc    
  41595a:	mov    eax,0xa414565b
  41595f:	sbb    eax,0xa5e6814f
  415964:	jmp    0xa3b0:0xcdae9a75
  41596b:	ins    BYTE PTR es:[edi],dx
  41596c:	or     ebx,DWORD PTR [edx-0x1c8f17c5]
  415972:	dec    ecx
  415973:	xor    dh,al
  415975:	repnz sub BYTE PTR [edi],bh
  415978:	int    0x38
  41597a:	(bad)  
  41597c:	push   ds
  41597d:	stos   BYTE PTR es:[edi],al
  41597e:	cmp    DWORD PTR [eax+0x27513cf5],edi
  415984:	ja     0x41591c
  415986:	dec    ebp
  415987:	in     eax,0x78
  415989:	imul   eax,DWORD PTR [ecx+0x8ad20c],0x70df700
  415993:	and    al,0x8f
  415995:	mov    cs,WORD PTR [ecx-0x38]
  415998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415999:	repnz push ss
  41599b:	loope  0x4159f1
  41599d:	mov    dl,0xda
  41599f:	aad    0x5
  4159a1:	cli    
  4159a2:	xor    eax,0xdb92e74a
  4159a7:	add    bl,BYTE PTR [esi]
  4159a9:	push   cs
  4159aa:	(bad)  [edi+0x5ff8a2a7]
  4159b0:	push   ds
  4159b1:	fistp  WORD PTR [edx]
  4159b3:	cwde   
  4159b4:	lds    esp,FWORD PTR [edx]
  4159b6:	mov    dh,0x9b
  4159b8:	jp     0x41597c
  4159ba:	push   0xffffffa1
  4159bc:	add    BYTE PTR [edx-0xcc765dd],bl
  4159c2:	pop    ss
  4159c3:	and    dl,bl
  4159c5:	adc    eax,0x76110e68
  4159ca:	xor    bh,cl
  4159cc:	mov    edx,0x8756f2e3
  4159d1:	dec    esi
  4159d2:	lock ror DWORD PTR [ebx-0x3],0x79
  4159d7:	push   esp
  4159d8:	jl     0x415a2a
  4159da:	mov    ds:0xb90cfd02,al
  4159df:	aam    0x2c
  4159e1:	sbb    bl,BYTE PTR [ecx]
  4159e3:	cld    
  4159e4:	ins    DWORD PTR es:[edi],dx
  4159e5:	sbb    eax,0xf5656a85
  4159ea:	cmc    
  4159eb:	shl    DWORD PTR [ecx-0x23e6cbae],cl
  4159f1:	inc    esp
  4159f2:	mov    ds:0x3c2c564f,al
  4159f7:	rcl    DWORD PTR ds:0x81c1ec93,1
  4159fd:	outs   dx,BYTE PTR ds:[esi]
  4159fe:	xor    eax,0x64d60df1
  415a03:	adc    DWORD PTR [esi-0x3a],esi
  415a06:	jle    0x4159de
  415a08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a09:	xchg   ebx,eax
  415a0a:	adc    bh,BYTE PTR [esi]
  415a0c:	pop    ds
  415a0d:	dec    ebp
  415a0e:	in     al,0x42
  415a10:	div    DWORD PTR [ebx]
  415a12:	pop    esp
  415a13:	in     al,0xcb
  415a15:	xchg   ebp,eax
  415a16:	mov    dl,0x96
  415a18:	(bad)  
  415a19:	aad    0xdf
  415a1b:	mov    eax,DWORD PTR [eax]
  415a1d:	in     al,dx
  415a1e:	in     al,0x7
  415a20:	xchg   esi,eax
  415a21:	pop    ebp
  415a22:	and    bl,BYTE PTR [eax+0x14]
  415a25:	test   esi,ecx
  415a27:	add    al,0x96
  415a29:	jmp    0x8125:0xab59f8ba
  415a30:	jns    0x415a5c
  415a32:	daa    
  415a33:	cmp    al,0x11
  415a35:	jecxz  0x415a1a
  415a37:	jmp    0x415a3c
  415a39:	jne    0x4159ce
  415a3b:	outs   dx,DWORD PTR ds:[esi]
  415a3c:	out    0x7b,al
  415a3e:	lea    ebp,[ecx+0x7]
  415a41:	ins    BYTE PTR es:[edi],dx
  415a42:	or     eax,0x8bc08738
  415a47:	in     eax,0xb4
  415a49:	push   ecx
  415a4a:	mov    ebx,0xdee4c311
  415a4f:	fdivr  st,st(0)
  415a51:	xor    esp,esi
  415a53:	fnsave [ebx-0x3600fff9]
  415a59:	fcomp  DWORD PTR [edi+0x76]
  415a5c:	cmp    DWORD PTR [edx],esp
  415a5e:	nop
  415a5f:	aad    0x75
  415a61:	mov    al,ds:0x56a4faf4
  415a66:	pusha  
  415a67:	dec    ebp
  415a68:	test   eax,edx
  415a6a:	pop    ss
  415a6b:	adc    DWORD PTR [edi],0xffffff99
  415a6e:	push   ecx
  415a6f:	test   eax,0x3afe2004
  415a74:	sub    edi,DWORD PTR [eax+0x65569127]
  415a7a:	add    cl,ch
  415a7c:	mov    ds:0x2c14e8ef,eax
  415a81:	mov    cl,0xdf
  415a83:	das    
  415a84:	sub    dl,0xd9
  415a87:	out    dx,eax
  415a88:	push   ecx
  415a89:	loope  0x415a2d
  415a8b:	mov    al,0x13
  415a8d:	imul   BYTE PTR [eax]
  415a8f:	pop    ds
  415a90:	popf   
  415a91:	or     eax,0xda897eb3
  415a96:	fisubr DWORD PTR ds:0x24c17401
  415a9c:	call   0xb7086378
  415aa1:	enter  0xb446,0x95
  415aa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415aa6:	fild   DWORD PTR [ebx]
  415aa8:	repz fldcw WORD PTR [ecx+0x33]
  415aac:	lods   al,BYTE PTR ds:[esi]
  415aad:	imul   esp,ecx,0x58
  415ab0:	inc    ecx
  415ab1:	fst    QWORD PTR [eax-0x16d4ee15]
  415ab7:	daa    
  415ab8:	mov    esp,0x2c85488
  415abd:	inc    ebp
  415abe:	call   0x407a:0x70cc9922
  415ac5:	leave  
  415ac6:	push   ds
  415ac7:	cmc    
  415ac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ac9:	sahf   
  415aca:	shl    BYTE PTR [ebx],cl
  415acc:	dec    BYTE PTR [edi+0x4230d894]
  415ad2:	push   ebx
  415ad3:	loopne 0x415a8c
  415ad5:	jmp    0xa93898dd
  415ada:	ins    BYTE PTR es:[edi],dx
  415adb:	dec    esp
  415adc:	mov    dl,0xf5
  415ade:	xchg   ebp,eax
  415adf:	push   0xffffff99
  415ae1:	sub    DWORD PTR [ecx+0x18937712],edx
  415ae7:	in     al,dx
  415ae8:	pop    ebx
  415ae9:	dec    esi
  415aea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415aeb:	imul   esi,DWORD PTR [esi-0x11],0x3f70cb73
  415af2:	pop    ebx
  415af3:	call   0x26c3c5c8
  415af8:	xor    DWORD PTR [edx-0x5a3c49a],eax
  415afe:	mov    ds:0xd64eda78,eax
  415b03:	(bad)  
  415b04:	push   ds
  415b05:	sbb    esi,DWORD PTR [eax]
  415b07:	popf   
  415b08:	sub    bh,ch
  415b0a:	hlt    
  415b0b:	inc    eax
  415b0c:	clc    
  415b0d:	daa    
  415b0e:	ficomp DWORD PTR [edx+edi*2-0x40625897]
  415b15:	cmp    ecx,DWORD PTR [edi-0x59]
  415b18:	and    DWORD PTR [eax-0xf75cbd2],edi
  415b1e:	or     bl,al
  415b20:	inc    esi
  415b21:	out    0x52,al
  415b23:	mov    WORD PTR [ebx+0x5f],?
  415b26:	dec    ebx
  415b27:	cli    
  415b28:	jbe    0x415b0a
  415b2a:	call   0x2efa7b26
  415b2f:	mov    bh,0xee
  415b31:	jno    0x415b0e
  415b33:	mov    ds:0x86bdec44,al
  415b38:	je     0x415ad6
  415b3a:	mov    ds:0x543edb03,al
  415b3f:	jmp    0x5093a5c
  415b44:	test   al,0x18
  415b46:	jle    0x415b65
  415b48:	shl    BYTE PTR [ecx],0x8d
  415b4b:	push   ebx
  415b4c:	and    eax,0x8977a8
  415b51:	jle    0x415bcc
  415b53:	ret    0x16d4
  415b56:	ins    DWORD PTR es:[edi],dx
  415b57:	aas    
  415b58:	or     ch,BYTE PTR [eax+edi*4-0x68]
  415b5c:	or     DWORD PTR [ebp-0x6e],edi
  415b5f:	jecxz  0x415b77
  415b61:	cmp    al,BYTE PTR [edx]
  415b63:	cdq    
  415b64:	jnp    0x415b56
  415b66:	pop    ds
  415b67:	mov    ah,0x3
  415b69:	in     eax,dx
  415b6a:	or     bl,BYTE PTR [esp+ecx*2+0x33]
  415b6e:	xchg   ebx,eax
  415b6f:	fldenv [ebp+0x278126f4]
  415b75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b76:	pop    ebp
  415b77:	cli    
  415b78:	and    ch,BYTE PTR [ebp+0x1a]
  415b7b:	sub    DWORD PTR [esi+0xd4d9063],esi
  415b81:	pushf  
  415b82:	mov    bh,0x64
  415b84:	rcl    BYTE PTR [eax],cl
  415b86:	into   
  415b87:	cmp    DWORD PTR [edx],0x79bed2cc
  415b8d:	pop    esp
  415b8e:	pop    esp
  415b8f:	loop   0x415c0b
  415b91:	mov    eax,0x3814ff8a
  415b96:	pop    eax
  415b97:	sbb    bl,ah
  415b99:	adc    DWORD PTR [edx+0x1c],ebx
  415b9c:	push   esp
  415b9d:	cld    
  415b9e:	fild   DWORD PTR [edx+0x1a1a40f2]
  415ba4:	lock push edi
  415ba6:	dec    esp
  415ba7:	(bad)  
  415ba8:	cli    
  415ba9:	sub    eax,ebp
  415bab:	and    DWORD PTR [eax+0x59],ebp
  415bae:	outs   dx,BYTE PTR ds:[esi]
  415baf:	dec    esp
  415bb0:	inc    edx
  415bb1:	nop
  415bb2:	data16 sub bl,BYTE PTR [eax]
  415bb5:	cmp    BYTE PTR [eax-0x2c852189],ch
  415bbb:	xchg   esi,eax
  415bbc:	and    esp,DWORD PTR [ecx]
  415bbe:	(bad)  
  415bbf:	mov    ds:0x1648f169,eax
  415bc4:	sbb    dl,bl
  415bc6:	mov    bl,0xd0
  415bc8:	and    dh,cl
  415bca:	ja     0x415b92
  415bcc:	nop
  415bcd:	jno    0x415bb4
  415bcf:	jne    0x415c02
  415bd1:	arpl   WORD PTR [ecx-0x32],si
  415bd4:	loop   0x415b69
  415bd6:	push   ds
  415bd7:	cmp    bh,BYTE PTR [eax+0x5b08f73e]
  415bdd:	jge    0x415c46
  415bdf:	jge    0x415b64
  415be1:	jbe    0x415c3e
  415be3:	out    0x7f,al
  415be5:	jl     0x415bcb
  415be7:	into   
  415be8:	daa    
  415be9:	cmp    BYTE PTR [ebx+0x7e],ah
  415bec:	syscall 
  415bee:	lock or BYTE PTR cs:[edx],al
  415bf2:	gs ja  0x415b81
  415bf5:	fdiv   DWORD PTR [edx]
  415bf7:	or     ebx,DWORD PTR [edx+0x31474b33]
  415bfd:	ja     0x415c0f
  415bff:	and    DWORD PTR [ebp+0x52],edx
  415c02:	jnp    0x415c6b
  415c04:	or     ch,BYTE PTR [ecx-0x1c]
  415c07:	pusha  
  415c08:	pop    ds
  415c09:	nop
  415c0a:	dec    edi
  415c0b:	push   0x3da256ea
  415c10:	inc    ebp
  415c11:	sub    ah,BYTE PTR [edi+0x59ebf8b9]
  415c17:	adc    ch,cl
  415c19:	sbb    bh,ah
  415c1b:	icebp  
  415c1c:	cwde   
  415c1d:	sbb    ecx,DWORD PTR [ecx+0x43]
  415c20:	ret    0x741
  415c23:	inc    esi
  415c24:	test   BYTE PTR [eax-0x4],dh
  415c27:	sbb    dh,BYTE PTR [ecx-0x32ab4d8]
  415c2d:	inc    ebp
  415c2e:	in     eax,0x30
  415c30:	mov    dl,0x59
  415c32:	xchg   edi,eax
  415c33:	lds    edx,FWORD PTR [eax+0x28]
  415c36:	rol    BYTE PTR [esi+ebx*4+0x6f],cl
  415c3a:	jle    0x415cab
  415c3c:	lahf   
  415c3d:	out    0xa7,al
  415c3f:	mov    ah,0xd5
  415c41:	mov    ch,0x1b
  415c43:	fisubr DWORD PTR [esi+eiz*1-0x1e]
  415c47:	mov    cl,0xf2
  415c49:	in     eax,dx
  415c4a:	repnz addr16 pop eax
  415c4d:	sbb    dh,BYTE PTR [edx-0x37ebced8]
  415c53:	ret    0x2999
  415c56:	popa   
  415c57:	cmp    esp,edi
  415c59:	push   ss
  415c5a:	and    eax,0xcc8dfeae
  415c5f:	sbb    al,0x74
  415c61:	cmp    eax,0x3aaf1d55
  415c66:	or     eax,0xc7877a75
  415c6b:	ins    BYTE PTR es:[edi],dx
  415c6c:	(bad)  
  415c6d:	ret    0xc2ad
  415c70:	aaa    
  415c71:	sub    eax,0x49c4aebe
  415c76:	adc    eax,ecx
  415c78:	mov    bh,0xf
  415c7a:	add    esp,edx
  415c7c:	cwde   
  415c7d:	rol    DWORD PTR [ecx-0x65],cl
  415c80:	and    ebp,DWORD PTR [ecx-0x12dbd22b]
  415c86:	inc    esi
  415c87:	pop    eax
  415c88:	sub    eax,0xde1c8b57
  415c8d:	push   es
  415c8e:	mov    ebp,0xcb0e6fd7
  415c93:	fnstcw WORD PTR [ebx]
  415c95:	mov    fs,WORD PTR [eax+eax*2]
  415c98:	xor    BYTE PTR [ebx],ch
  415c9a:	leave  
  415c9b:	or     al,0x67
  415c9d:	pushf  
  415c9e:	and    bl,dl
  415ca0:	adc    BYTE PTR [ebx+0x557111e],dh
  415ca6:	out    0x0,al
  415ca8:	nop
  415ca9:	(bad)  
  415caa:	mov    bl,0x3f
  415cac:	ins    DWORD PTR es:[edi],dx
  415cad:	xchg   DWORD PTR [edi-0x1b],ecx
  415cb0:	test   dl,dl
  415cb2:	mov    edi,0x1fe18417
  415cb7:	std    
  415cb8:	xchg   DWORD PTR [edx+0x77],ebx
  415cbb:	mov    eax,ds:0xc7ca08ac
  415cc0:	out    0x6e,al
  415cc2:	pop    ss
  415cc3:	sbb    edi,DWORD PTR [ebp+0x51]
  415cc6:	mov    cl,0xb1
  415cc8:	add    BYTE PTR [ebx-0x44],bl
  415ccb:	dec    edi
  415ccc:	dec    edi
  415ccd:	lds    edx,FWORD PTR [eax+0x37]
  415cd0:	pop    ebp
  415cd1:	outs   dx,BYTE PTR ds:[esi]
  415cd2:	mov    edi,ecx
  415cd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cd5:	call   0xc9986d96
  415cda:	les    esp,FWORD PTR [edx-0x24643481]
  415ce0:	adc    eax,0xf774cfbe
  415ce5:	repz fistp QWORD PTR [esi]
  415ce8:	jne    0x415d3c
  415cea:	stos   BYTE PTR es:[edi],al
  415ceb:	xchg   ebx,eax
  415cec:	mov    dh,0x70
  415cee:	mov    esp,0xf704d85a
  415cf3:	pop    esi
  415cf4:	fsubr  DWORD PTR [ebp+0x23119179]
  415cfa:	cli    
  415cfb:	dec    esp
  415cfc:	loopne 0x415d6e
  415cfe:	sar    DWORD PTR [ebx-0x61be69c3],0x26
  415d05:	mov    ebp,0xa61beecc
  415d0a:	add    DWORD PTR [eax],edx
  415d0c:	push   esp
  415d0d:	stc    
  415d0e:	xchg   DWORD PTR [ecx],edi
  415d10:	pop    ds
  415d11:	loope  0x415c95
  415d13:	shl    ah,0x1
  415d16:	cmp    BYTE PTR [ebx+ebp*8],0x8f
  415d1a:	daa    
  415d1b:	and    al,0xe9
  415d1d:	mov    DWORD PTR [ecx],esi
  415d1f:	mov    ds:0xbbdf79b1,eax
  415d24:	or     al,0xdc
  415d26:	fisttp QWORD PTR [eax-0x1]
  415d29:	shl    BYTE PTR [ecx+eax*4-0xff8393],1
  415d30:	(bad)  
  415d32:	shl    ch,1
  415d34:	inc    esp
  415d35:	out    dx,eax
  415d36:	dec    edx
  415d37:	repnz sbb ah,BYTE PTR [edx+0x11]
  415d3b:	jo     0x415d81
  415d3d:	jge    0x415d2e
  415d3f:	push   0xfffffff0
  415d41:	(bad)  
  415d42:	xor    al,0xa7
  415d44:	(bad)  
  415d45:	jb     0x415d99
  415d47:	in     al,0xdc
  415d49:	sti    
  415d4a:	push   edi
  415d4b:	dec    edx
  415d4c:	fs mov edx,0x8bdfbe5f
  415d52:	mov    ch,0x46
  415d54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d55:	sbb    BYTE PTR [ecx],ah
  415d57:	or     DWORD PTR [edi-0x6f],0xc8d1040f
  415d5e:	out    0x56,al
  415d60:	(bad)  
  415d61:	int    0x9f
  415d63:	cli    
  415d64:	pop    esi
  415d65:	pop    esi
  415d66:	push   0x10
  415d68:	in     al,0xff
  415d6a:	sub    DWORD PTR [edx+0x55a4f04c],esi
  415d70:	ja     0x415d86
  415d72:	jg     0x415de2
  415d74:	xchg   ebp,eax
  415d75:	mov    WORD PTR [eax],fs
  415d77:	fisttp QWORD PTR ds:0x69e1784d
  415d7d:	mov    ebp,0xa0d0fc69
  415d82:	sub    al,0x3d
  415d84:	fild   WORD PTR [ebx]
  415d86:	mov    ecx,0x7381e48d
  415d8b:	cmp    ecx,DWORD PTR [edi]
  415d8d:	mov    ds:0x327907f,eax
  415d92:	jmp    0x168:0x9a9e04f9
  415d99:	cmp    DWORD PTR [ebx-0x22],edx
  415d9c:	ss out 0x58,al
  415d9f:	fsubp  st(2),st
  415da1:	or     eax,0x904c86e2
  415da6:	inc    ecx
  415da7:	mov    ds:0xd37db81e,al
  415dac:	sbb    eax,DWORD PTR [esi+0x5d294c6f]
  415db2:	scas   al,BYTE PTR es:[edi]
  415db3:	mov    ah,0xbf
  415db5:	inc    esp
  415db6:	(bad)
  415db9:	jp     0x415d7f
  415dbb:	mov    edx,0xc8e9d96a
  415dc0:	mov    edi,0x6fc1b3f0
  415dc5:	cld    
  415dc6:	scas   eax,DWORD PTR es:[edi]
  415dc7:	push   esp
  415dc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dc9:	ja     0x415d5f
  415dcb:	test   BYTE PTR ds:0x53513930,bh
  415dd1:	loop   0x415de7
  415dd3:	loopne 0x415e17
  415dd5:	pop    es
  415dd6:	aas    
  415dd7:	call   0xe063:0xb3c90a90
  415dde:	mov    eax,ds:0xd6d67aec
  415de3:	mov    bh,BYTE PTR [edi+0x7d7d0e7a]
  415de9:	mov    dl,0xf0
  415deb:	aam    0xf1
  415ded:	call   0x27c0:0x1cacb1b4
  415df4:	mov    ds:0x310dd995,al
  415df9:	and    DWORD PTR [edx+0x6b819650],edx
  415dff:	icebp  
  415e00:	fist   WORD PTR [edx-0x1c723c26]
  415e06:	dec    ebp
  415e07:	dec    esi
  415e08:	outs   dx,DWORD PTR ds:[esi]
  415e09:	lds    edx,FWORD PTR [ecx+0x45693564]
  415e0f:	xchg   ecx,eax
  415e10:	sub    al,0xa9
  415e12:	xchg   edx,eax
  415e13:	sbb    edi,ecx
  415e15:	dec    ebx
  415e16:	push   eax
  415e17:	pop    edi
  415e18:	push   ss
  415e19:	cmp    ah,BYTE PTR ds:0xf2e0e8f7
  415e1f:	in     eax,0xae
  415e21:	inc    ch
  415e23:	pop    esp
  415e24:	sub    ebp,ecx
  415e26:	test   eax,0x90dc5f64
  415e2b:	xchg   ecx,eax
  415e2c:	icebp  
  415e2d:	add    bl,BYTE PTR [esi]
  415e2f:	sub    DWORD PTR [eax-0x2d2fc4d0],edi
  415e35:	xchg   edi,eax
  415e36:	pop    ebp
  415e37:	sbb    esi,DWORD PTR [eax-0x4b18e346]
  415e3d:	js     0x415e1c
  415e3f:	dec    edx
  415e40:	je     0x415e13
  415e42:	sub    eax,0x664e92b5
  415e47:	or     ebp,eax
  415e49:	in     eax,dx
  415e4a:	clc    
  415e4b:	aad    0x35
  415e4d:	and    al,0x1
  415e4f:	dec    BYTE PTR [eax-0x50]
  415e52:	scas   al,BYTE PTR es:[edi]
  415e53:	test   al,0xb0
  415e55:	lock xchg ebp,eax
  415e57:	scas   eax,DWORD PTR es:[edi]
  415e58:	inc    ecx
  415e59:	(bad)  
  415e5a:	iret   
  415e5b:	mov    al,ds:0x5f65b2c9
  415e60:	push   ebp
  415e61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e62:	out    0x42,eax
  415e64:	mov    bl,0xb0
  415e66:	sbb    bh,BYTE PTR [esi-0x7d8c0691]
  415e6c:	xchg   esp,eax
  415e6d:	push   edi
  415e6e:	push   cs
  415e6f:	ja     0x415e4b
  415e71:	(bad)  
  415e72:	jne    0x415e92
  415e74:	popa   
  415e75:	push   cs
  415e76:	or     eax,0xa588eb0e
  415e7b:	add    DWORD PTR [esp+edi*4],ebp
  415e7e:	stos   BYTE PTR es:[edi],al
  415e7f:	pop    es
  415e80:	ret    
  415e81:	mov    edi,0xe3f5b463
  415e86:	in     eax,dx
  415e87:	ins    DWORD PTR es:[edi],dx
  415e88:	mov    esi,0xc77fe670
  415e8d:	inc    eax
  415e8e:	and    al,0xb4
  415e90:	(bad)
  415e93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e95:	add    DWORD PTR [ebx+0x6c2f7df5],eax
  415e9b:	dec    eax
  415e9c:	(bad)  [edi]
  415e9e:	(bad)  [edx]
  415ea0:	repnz in al,0xcc
  415ea3:	cdq    
  415ea4:	(bad)  
  415ea5:	pop    ds
  415ea6:	mov    es,WORD PTR [esi-0x49]
  415ea9:	jno    0x415f01
  415eab:	jge    0x415eda
  415ead:	sbb    al,0xb5
  415eaf:	imul   eax,DWORD PTR [esi-0xe51a5ae],0xffffffd1
  415eb6:	jbe    0x415e39
  415eb8:	and    ch,BYTE PTR [ebx-0x1e]
  415ebb:	test   BYTE PTR [edx+0x65],dh
  415ebe:	push   cs
  415ebf:	dec    ebx
  415ec0:	loop   0x415eb7
  415ec2:	dec    ecx
  415ec3:	fwait
  415ec4:	leave  
  415ec5:	inc    ebx
  415ec6:	daa    
  415ec7:	mov    ecx,0xcfc14ce4
  415ecc:	jl     0x415ee0
  415ece:	sar    DWORD PTR [eax-0x65],cl
  415ed1:	sar    DWORD PTR [esi+0x31d5017],cl
  415ed7:	add    BYTE PTR [ebx+0x53bd958],dl
  415edd:	or     eax,0xe9d84724
  415ee2:	xchg   DWORD PTR [ebp+0x75],esi
  415ee5:	cmp    ebp,ebp
  415ee7:	sbb    bh,BYTE PTR [ecx]
  415ee9:	(bad)  
  415eea:	xchg   ebp,eax
  415eeb:	cmp    eax,0x35cfcb18
  415ef0:	push   es
  415ef1:	ret    
  415ef2:	mov    edi,0xc703aa9f
  415ef7:	enter  0x278d,0x28
  415efb:	int3   
  415efc:	mul    cl
  415efe:	add    DWORD PTR es:[ebx+ecx*4],0x22ff869f
  415f06:	xor    ch,BYTE PTR [ebx+ebp*4-0x30]
  415f0a:	dec    edx
  415f0b:	add    ch,BYTE PTR [edi+0x30]
  415f0e:	mov    edx,ebp
  415f10:	in     eax,0x6c
  415f12:	jno    0x415ebe
  415f14:	(bad)
  415f17:	rcl    DWORD PTR [edi],1
  415f19:	into   
  415f1a:	sub    eax,0x92be2a41
  415f1f:	(bad)  
  415f21:	aad    0xd7
  415f23:	pop    ss
  415f24:	pop    esi
  415f25:	aaa    
  415f26:	je     0x415f8f
  415f28:	cmp    al,BYTE PTR [edx-0x28929854]
  415f2e:	inc    eax
  415f2f:	push   cs
  415f30:	jbe    0x415f7f
  415f32:	mov    al,ds:0xb9e2f470
  415f37:	mov    ds,WORD PTR [ebp+esi*4+0x66]
  415f3b:	adc    al,0x1d
  415f3d:	call   0x38d6d0b5
  415f42:	mul    dl
  415f44:	jg     0x415f6e
  415f46:	push   ecx
  415f47:	mov    edx,0xeafc7fb3
  415f4c:	imul   ebp,DWORD PTR [ecx+0x5c7c1bf2],0x61c20dda
  415f56:	or     al,0x30
  415f58:	adc    eax,0x31bbc16b
  415f5d:	add    ch,BYTE PTR [ebx]
  415f5f:	jp     0x415faf
  415f61:	xchg   BYTE PTR [eax+0x65],al
  415f64:	jnp    0x415f7e
  415f66:	mov    al,ds:0xc0af66e2
  415f6b:	mov    DWORD PTR [edi+ebp*4-0x4d],ebx
  415f6f:	int    0x2c
  415f71:	jo     0x415f52
  415f73:	ins    BYTE PTR es:[edi],dx
  415f74:	shl    DWORD PTR [esi-0x40],1
  415f77:	cwde   
  415f78:	or     al,0x94
  415f7a:	pop    es
  415f7b:	loopne 0x415f5b
  415f7d:	cli    
  415f7e:	cmp    BYTE PTR [ebp-0x2b523d60],cl
  415f84:	pushf  
  415f85:	sub    BYTE PTR [edi-0x35d5c972],bl
  415f8b:	scas   eax,DWORD PTR es:[edi]
  415f8c:	es ins BYTE PTR es:[edi],dx
  415f8e:	test   eax,0x72d0a72e
  415f93:	test   DWORD PTR [edi-0x3833cba1],eax
  415f99:	outs   dx,BYTE PTR ds:[esi]
  415f9a:	pop    ebp
  415f9b:	and    DWORD PTR [edi],ebp
  415f9d:	enter  0xbb77,0x53
  415fa1:	mov    ds:0x440bd1ce,eax
  415fa6:	mov    ebx,0x4122bc39
  415fab:	mov    dl,0x6b
  415fad:	test   eax,edx
  415faf:	cdq    
  415fb0:	inc    ecx
  415fb1:	repz loope 0x415f78
  415fb4:	and    eax,0xbfcbc46
  415fb9:	and    al,0xc6
  415fbb:	ror    DWORD PTR [eax],1
  415fbd:	and    BYTE PTR [edx],cl
  415fbf:	xchg   esi,eax
  415fc0:	inc    ebx
  415fc1:	sahf   
  415fc2:	add    eax,0xaf723585
  415fc7:	mov    ch,0xdb
  415fc9:	adc    edx,ebp
  415fcb:	das    
  415fcc:	in     eax,dx
  415fcd:	outs   dx,BYTE PTR ds:[esi]
  415fce:	fs aas 
  415fd0:	das    
  415fd1:	cmp    dl,BYTE PTR ds:0xc7f6da68
  415fd7:	pop    esi
  415fd8:	xchg   edx,eax
  415fd9:	add    eax,0xeb24eff9
  415fde:	push   0x21
  415fe0:	cld    
  415fe1:	or     DWORD PTR [ebp+0x75c32e62],ebp
  415fe7:	mov    al,ds:0x611ca95e
  415fec:	cmp    dh,BYTE PTR [ebx]
  415fee:	sub    cl,BYTE PTR [edi]
  415ff0:	bound  esi,QWORD PTR [ebp-0x4c]
  415ff3:	xchg   edx,eax
  415ff4:	imul   ebx,DWORD PTR [edi],0x72
  415ff7:	call   0x16b8:0xeb79dec6
  415ffe:	or     eax,0x36d7c5e3
  416003:	mov    edi,esi
  416005:	lahf   
  416006:	sub    edi,esi
  416008:	repz xchg esi,eax
  41600a:	dec    ecx
  41600b:	sbb    edx,DWORD PTR [eax*2-0x798af776]
  416012:	sub    BYTE PTR [ebx+ecx*4-0x127dea54],cl
  416019:	mov    bh,0x4c
  41601b:	mov    bl,dl
  41601d:	inc    ebp
  41601e:	adc    dl,BYTE PTR [ebx-0x7]
  416021:	push   0xec091a2c
  416026:	mov    cs,esi
  416028:	xchg   edx,eax
  416029:	fwait
  41602a:	jmp    0x6436:0xa612da07
  416031:	fsubr  QWORD PTR [ebx-0x4d73052f]
  416037:	mov    ah,0x81
  416039:	mov    esp,gs
  41603b:	jmp    0x58b3ec94
  416040:	std    
  416041:	push   es
  416042:	xlat   BYTE PTR ds:[ebx]
  416043:	push   ebx
  416045:	mov    esp,0xd243a288
  41604a:	mov    cl,0xb
  41604c:	addr16 test esp,eax
  41604f:	mov    cl,0x32
  416051:	pop    esi
  416052:	adc    BYTE PTR [eax+0x3c],0x98
  416056:	aaa    
  416057:	xchg   ebx,eax
  416058:	fcmove st,st(4)
  41605a:	adc    eax,0x2347f8ef
  41605f:	push   edi
  416060:	das    
  416061:	call   0x5d296aec
  416066:	(bad)  
  416067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416068:	call   0xaa40:0x44cd1ddf
  41606f:	sub    al,0x73
  416071:	xchg   esi,eax
  416072:	sbb    al,0x45
  416074:	mov    bl,0xb8
  416076:	es jl  0x416026
  416079:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41607b:	out    0x3d,eax
  41607d:	inc    edx
  41607e:	and    eax,0x1ba799ba
  416083:	mov    ah,0x3d
  416085:	jg     0x416010
  416087:	popf   
  416088:	lods   al,BYTE PTR ds:[esi]
  416089:	call   0x40a5a44b
  41608e:	mov    ah,0x26
  416090:	add    al,0xb9
  416092:	ins    DWORD PTR es:[edi],dx
  416093:	jb     0x4160c2
  416095:	cmp    DWORD PTR [eax-0x2b],edx
  416098:	jle    0x41606a
  41609a:	cdq    
  41609b:	ret    0xb6d1
  41609e:	mov    DWORD PTR [edx-0x60eb8c31],edx
  4160a4:	stos   DWORD PTR es:[edi],eax
  4160a5:	push   ebx
  4160a6:	lea    ebx,[ecx]
  4160a8:	add    edx,DWORD PTR [ecx+eax*1]
  4160ab:	cmp    al,0xec
  4160ad:	push   edx
  4160ae:	xor    ebp,DWORD PTR [edi]
  4160b0:	push   0xffffff81
  4160b2:	fs xor al,0xce
  4160b5:	jp     0x4160f6
  4160b7:	hlt    
  4160b8:	es retf 
  4160ba:	sbb    ebp,esi
  4160bc:	adc    edx,ecx
  4160be:	push   cs
  4160bf:	fwait
  4160c0:	addr16 jbe 0x416087
  4160c3:	pop    edx
  4160c4:	fnsave [edi+0x1af69338]
  4160ca:	fild   DWORD PTR [ebp+ebp*4+0x38]
  4160ce:	cmc    
  4160cf:	rcl    BYTE PTR [ecx-0x5b],cl
  4160d2:	(bad)  
  4160d3:	sti    
  4160d4:	fs push edx
  4160d6:	sbb    bl,ah
  4160d8:	imul   edx,DWORD PTR ds:0xbfe22fd5,0xd635e050
  4160e2:	push   ds
  4160e3:	je     0x4160cd
  4160e5:	fwait
  4160e6:	mov    ds:0xf535c903,al
  4160eb:	in     eax,dx
  4160ec:	add    ecx,DWORD PTR [esi+ecx*8]
  4160ef:	push   edi
  4160f0:	pop    esp
  4160f1:	sbb    eax,0x368d5d4a
  4160f6:	pop    ebp
  4160f7:	mov    ds:0xffdda961,al
  4160fc:	inc    ebp
  4160fd:	scas   eax,DWORD PTR es:[edi]
  4160fe:	ins    DWORD PTR es:[edi],dx
  4160ff:	bound  ecx,QWORD PTR [ebx+0x4e313231]
  416105:	mov    cs,WORD PTR [ebp+0x46]
  416108:	sbb    BYTE PTR [esi+0x2ac39025],ah
  41610e:	pop    ds
  41610f:	pop    es
  416110:	js     0x4160f8
  416112:	mov    bl,0x16
  416114:	nop
  416115:	jecxz  0x416134
  416117:	push   eax
  416118:	jle    0x416190
  41611a:	add    BYTE PTR [ebx-0x35],0x5f
  41611e:	dec    esi
  41611f:	(bad)  
  416120:	xor    BYTE PTR [edi],bh
  416122:	pop    ds
  416123:	mov    BYTE PTR [ecx-0x4eee979e],bl
  416129:	sub    ah,dl
  41612b:	rcr    BYTE PTR [edi],cl
  41612d:	sbb    al,0xb5
  41612f:	push   ds
  416130:	shl    DWORD PTR [ebx+0x15],0x6f
  416134:	fdivr  QWORD PTR [ebp+0x52]
  416138:	push   eax
  416139:	loopne 0x4160db
  41613b:	mov    al,0xdf
  41613d:	mov    dl,0xbf
  41613f:	(bad)  [edi]
  416141:	xchg   esi,eax
  416142:	adc    DWORD PTR [edx-0x23c82dc9],ebx
  416148:	push   0xffffffb6
  41614a:	mov    ecx,0xf1815b2a
  41614f:	mov    BYTE PTR [ecx-0xd],al
  416152:	mov    WORD PTR [edi],gs
  416154:	and    al,0x52
  416156:	aam    0x6d
  416158:	dec    edx
  416159:	cmc    
  41615a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41615b:	cli    
  41615c:	into   
  41615d:	sub    DWORD PTR [ebx-0x153e92f7],esi
  416163:	jecxz  0x4160ec
  416165:	adc    ebp,DWORD PTR [ebx-0x7]
  416168:	rcr    DWORD PTR [edx+0x13],1
  41616b:	dec    edx
  41616c:	sub    dl,BYTE PTR [ebp-0x3f]
  41616f:	cmp    al,0x45
  416171:	ins    DWORD PTR es:[edi],dx
  416172:	loope  0x416114
  416174:	(bad)  
  416175:	pop    edx
  416176:	shr    esi,1
  416178:	(bad)  
  41617b:	dec    ecx
  41617c:	and    ebp,ebp
  41617e:	mov    esi,0xcd1d14c2
  416183:	cmp    BYTE PTR [ebx-0x325995cd],cl
  416189:	pop    ecx
  41618a:	jp     0x4161f7
  41618c:	cmp    ebx,DWORD PTR [ebx-0x5b4dc5bf]
  416192:	mov    ds:0xfd2b2418,al
  416197:	outs   dx,BYTE PTR ds:[esi]
  416198:	test   BYTE PTR fs:[ecx+0x29],dh
  41619c:	or     al,0x2d
  41619e:	leave  
  41619f:	(bad)  
  4161a0:	mov    bh,0x9a
  4161a2:	mov    DWORD PTR [edi],edi
  4161a4:	pushf  
  4161a5:	sub    eax,edi
  4161a7:	push   cs
  4161a8:	dec    edx
  4161a9:	jnp    0x4161f4
  4161ab:	xchg   edi,eax
  4161ac:	sub    esp,ecx
  4161ae:	sbb    DWORD PTR [eax],ecx
  4161b0:	or     ah,cl
  4161b2:	push   ebx
  4161b3:	jb     0x4161b7
  4161b5:	repnz mov ds:0xa8ba14af,al
  4161bb:	sbb    esp,esi
  4161bd:	dec    DWORD PTR [ecx]
  4161bf:	fcomp  QWORD PTR [eax+0x44]
  4161c2:	fistp  DWORD PTR [ecx+0x44]
  4161c5:	icebp  
  4161c6:	(bad)  
  4161c8:	jge    0x416235
  4161ca:	pop    esi
  4161cb:	cmp    ah,BYTE PTR [eax-0x4a]
  4161ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161cf:	int3   
  4161d0:	adc    esi,DWORD PTR [edi+0x61]
  4161d3:	test   eax,0xf1f87cc5
  4161d8:	icebp  
  4161d9:	test   BYTE PTR [edi+0x3b88eaef],cl
  4161df:	fsubp  st(1),st
  4161e1:	push   0xffffffe0
  4161e3:	xchg   dh,dh
  4161e5:	inc    eax
  4161e6:	and    edx,DWORD PTR [eax-0x66]
  4161e9:	pop    es
  4161ea:	sub    DWORD PTR [eax],0x4f
  4161ed:	(bad)  
  4161ee:	(bad)  
  4161f0:	jecxz  0x416193
  4161f2:	xchg   ecx,eax
  4161f3:	ss repnz iret 
  4161f6:	mov    esp,0x4f159934
  4161fb:	in     eax,0x33
  4161fd:	and    al,BYTE PTR [ebp+0x7803e7b1]
  416203:	mov    esp,0x757aff19
  416208:	dec    edx
  416209:	mov    bl,0xec
  41620b:	ret    0x1c39
  41620e:	mov    ch,0xe5
  416210:	jl     0x4161bf
  416212:	scas   al,BYTE PTR es:[edi]
  416213:	(bad)  
  416214:	jmp    0x4161f6
  416216:	adc    al,0x2d
  416218:	mov    ebx,0x52490626
  41621d:	add    dl,BYTE PTR [edx-0x210cea5]
  416223:	push   esp
  416224:	sub    al,0x85
  416226:	or     eax,0xfca3be72
  41622b:	std    
  41622c:	js     0x416299
  41622e:	mov    bl,0xf0
  416230:	xor    edx,DWORD PTR [esi-0x6f23e880]
  416236:	es xchg edi,eax
  416238:	mov    esi,0x1ea14bae
  41623d:	adc    al,0x20
  41623f:	aaa    
  416240:	sti    
  416241:	pop    ebp
  416242:	jle    0x4162b4
  416244:	xchg   edi,eax
  416245:	sub    ch,BYTE PTR [ebp+0x78]
  416248:	xor    BYTE PTR [esi],dh
  41624a:	xchg   ebp,eax
  41624b:	push   cs
  41624c:	mov    ebx,0xb80bc4e2
  416251:	mul    edx
  416253:	mov    ebx,0xebc52b1b
  416258:	cli    
  416259:	and    edi,DWORD PTR [edi+ecx*8]
  41625c:	in     eax,0x25
  41625e:	cmp    al,0x5f
  416260:	jge    0x4161e7
  416262:	xchg   ebx,eax
  416263:	cmp    DWORD PTR [ecx-0xf],esp
  416266:	jle    0x416226
  416268:	push   0xffffffa3
  41626a:	push   esi
  41626b:	sahf   
  41626c:	push   ss
  41626d:	ins    DWORD PTR es:[edi],dx
  41626e:	push   eax
  41626f:	inc    ebx
  416270:	mov    eax,ds:0x5b9e4bf9
  416275:	sub    esp,DWORD PTR [edx+0x3526bd29]
  41627b:	and    eax,0xee66e678
  416280:	pop    eax
  416281:	jno    0x41628c
  416283:	pushf  
  416284:	add    al,0x84
  416286:	mov    dl,0x71
  416288:	loopne 0x4162bc
  41628a:	iret   
  41628b:	add    DWORD PTR [edi+ebx*8],ecx
  41628e:	cmp    DWORD PTR [esi],eax
  416290:	push   esi
  416291:	test   eax,0xf45d7bf4
  416296:	repz lock cmp DWORD PTR [ecx+0x558ba855],ecx
  41629e:	or     BYTE PTR [ebx-0x3d7e53a3],cl
  4162a4:	(bad)  
  4162a6:	add    BYTE PTR fs:[ebx],cl
  4162a9:	ror    DWORD PTR [ecx+0x558bac55],cl
  4162af:	or     BYTE PTR [ebx-0x2efc4fa3],cl
  4162b5:	xor    edx,ebx
  4162b7:	mov    DWORD PTR [ebp-0x50],edx
  4162ba:	mov    edx,DWORD PTR [ebp+0x8]
  4162bd:	mov    ebx,DWORD PTR [ebp-0x4c]
  4162c0:	add    edx,edi
  4162c2:	and    edx,ebx
  4162c4:	mov    DWORD PTR [ebp-0x4c],edx
  4162c7:	mov    edx,DWORD PTR [ebp+0x8]
  4162ca:	mov    ebx,DWORD PTR [ebp-0x48]
  4162cd:	lea    edx,[ebx+edx*1+0x241fc1f]
  4162d4:	mov    DWORD PTR [ebp-0x48],edx
  4162d7:	mov    edx,DWORD PTR [ebp+0x8]
  4162da:	mov    ebx,0xfa5e15e2
  4162df:	sub    ebx,edx
  4162e1:	add    ebx,DWORD PTR [ebp-0x44]
  4162e4:	mov    DWORD PTR [ebp-0x44],ebx
  4162e7:	mov    edx,DWORD PTR [ebp+0x8]
  4162ea:	xor    edx,eax
  4162ec:	add    edx,esi
  4162ee:	jne    0x413ef1
  4162f4:	mov    edx,DWORD PTR [ebp-0x14]
  4162f7:	mov    DWORD PTR [ebp+0x8],edx
  4162fa:	jmp    0x41636f
  4162ff:	mov    edx,DWORD PTR [ebp+0x8]
  416302:	mov    ebx,DWORD PTR [ebp-0x8]
  416305:	xor    edx,eax
  416307:	xor    ebx,eax
  416309:	sub    edx,ebx
  41630b:	sub    edx,esi
  41630d:	xor    edx,eax
  41630f:	mov    DWORD PTR [ebp+0x8],edx
  416312:	mov    edx,DWORD PTR [ebp+0x8]
  416315:	mov    ebx,DWORD PTR [ebp-0x58]
  416318:	add    edx,0x5708f8
  41631e:	imul   edx,ebx
  416321:	mov    DWORD PTR [ebp-0x58],edx
  416324:	mov    edx,DWORD PTR [ebp+0x8]
  416327:	mov    ebx,DWORD PTR [ebp-0x54]
  41632a:	add    edx,0x64f8da
  416330:	or     edx,ebx
  416332:	mov    DWORD PTR [ebp-0x54],edx
  416335:	mov    edx,DWORD PTR [ebp+0x8]
  416338:	mov    ebx,DWORD PTR [ebp-0x50]
  41633b:	add    edx,ecx
  41633d:	xor    edx,ebx
  41633f:	mov    DWORD PTR [ebp-0x50],edx
  416342:	mov    edx,DWORD PTR [ebp+0x8]
  416345:	mov    ebx,DWORD PTR [ebp-0x4c]
  416348:	add    edx,edi
  41634a:	and    edx,ebx
  41634c:	mov    DWORD PTR [ebp-0x4c],edx
  41634f:	mov    edx,DWORD PTR [ebp+0x8]
  416352:	mov    ebx,DWORD PTR [ebp-0x48]
  416355:	lea    edx,[ebx+edx*1+0x241fc1f]
  41635c:	mov    DWORD PTR [ebp-0x48],edx
  41635f:	mov    edx,DWORD PTR [ebp+0x8]
  416362:	mov    ebx,0xfa5e15e2
  416367:	sub    ebx,edx
  416369:	add    ebx,DWORD PTR [ebp-0x44]
  41636c:	mov    DWORD PTR [ebp-0x44],ebx
  41636f:	mov    edx,DWORD PTR [ebp+0x8]
  416372:	xor    edx,eax
  416374:	add    edx,esi
  416376:	jne    0x4162ff
  41637c:	mov    edx,DWORD PTR [ebp-0x8]
  41637f:	mov    ebx,DWORD PTR [ebp-0xc]
  416382:	jmp    0x418708
  416387:	nop
  416388:	test   BYTE PTR [ebp-0x643e8c3e],0xf4
  41638f:	add    DWORD PTR [ebp-0x5d],esp
  416392:	out    0x2f,eax
  416394:	ins    BYTE PTR es:[edi],dx
  416395:	lods   al,BYTE PTR ds:[esi]
  416396:	nop
  416397:	pop    esp
  416398:	push   edi
  416399:	jns    0x416415
  41639b:	add    DWORD PTR [edi+0x7a],ebx
  41639e:	jp     0x416388
  4163a0:	jb     0x41635e
  4163a2:	xchg   ebp,eax
  4163a3:	inc    edi
  4163a4:	mov    eax,ds:0xdae6b102
  4163a9:	fst    DWORD PTR [ebx-0x1849ca44]
  4163af:	movnti DWORD PTR [ebx-0x74],esi
  4163b3:	stos   BYTE PTR es:[edi],al
  4163b4:	les    esi,FWORD PTR [eax+0x71]
  4163b7:	out    0x79,eax
  4163b9:	xor    DWORD PTR [ebp-0x6b],esp
  4163bc:	or     eax,0x5a1c9f65
  4163c1:	jmp    0x41643d
  4163c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163c4:	lock xchg ecx,eax
  4163c6:	sar    DWORD PTR [edi-0x3ab03dd2],1
  4163cc:	jmp    0x107b:0x4f0c22d0
  4163d3:	sub    DWORD PTR [edi-0x5fd258bc],edx
  4163d9:	jmp    0xba4a:0xbdb58cf0
  4163e0:	lahf   
  4163e1:	aad    0xf5
  4163e3:	popa   
  4163e4:	adc    cl,dh
  4163e6:	mov    esp,0x7368187e
  4163eb:	add    bl,ch
  4163ed:	push   edi
  4163ee:	mov    ch,0x54
  4163f0:	aaa    
  4163f1:	inc    edi
  4163f2:	(bad)  
  4163f3:	iret   
  4163f4:	mov    dl,0x8a
  4163f6:	xor    ch,BYTE PTR [esi]
  4163f8:	cmovb  edi,DWORD PTR [esi-0x64]
  4163fc:	popa   
  4163fd:	or     BYTE PTR [ebp+0x2a],0x2b
  416401:	add    BYTE PTR [ecx+0x4d],cl
  416404:	dec    ebx
  416405:	mov    bh,0x7c
  416407:	mov    es,WORD PTR [ebx]
  416409:	push   ecx
  41640a:	inc    edx
  41640b:	mov    edi,ebp
  41640d:	adc    ebp,ebx
  41640f:	mov    al,ds:0xb1819716
  416414:	jmp    0x41642a
  416416:	clc    
  416417:	pop    ss
  416418:	mov    bl,0x8c
  41641a:	aas    
  41641b:	test   DWORD PTR ds:0x328d1aed,edx
  416421:	and    al,0x4d
  416423:	(bad)  
  416424:	push   ebx
  416425:	cmp    al,0x9d
  416427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416428:	dec    esp
  416429:	dec    esi
  41642a:	(bad)  
  41642b:	in     eax,dx
  41642c:	outs   dx,BYTE PTR ds:[esi]
  41642d:	inc    edi
  41642e:	aam    0xe6
  416430:	ret    0xc031
  416433:	stos   BYTE PTR es:[edi],al
  416434:	dec    esi
  416435:	mov    ch,0x1c
  416437:	xor    DWORD PTR ds:0x3bb0d330,0xca4737b9
  416441:	push   esp
  416442:	mov    eax,ds:0xe48c6eeb
  416447:	lods   al,BYTE PTR ds:[esi]
  416448:	fld    DWORD PTR [ecx+0x4af9d8f1]
  41644e:	cwde   
  41644f:	cld    
  416450:	(bad)  
  416451:	sbb    BYTE PTR [edx+0x1913b71e],0x6c
  416458:	ret    
  416459:	in     al,dx
  41645a:	xor    dl,dh
  41645c:	mov    edi,0x81c98bd1
  416461:	sub    dl,BYTE PTR [ebx]
  416463:	sbb    al,0xba
  416465:	scas   eax,DWORD PTR es:[edi]
  416466:	mov    esp,DWORD PTR [ecx+0x12d1ae79]
  41646c:	das    
  41646d:	and    al,0x51
  41646f:	popa   
  416470:	cdq    
  416471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416472:	cli    
  416473:	repnz fst DWORD PTR [ebx+ecx*8-0x51]
  416478:	fistp  DWORD PTR [eax+0x17]
  41647b:	cmc    
  41647c:	mov    esp,0x795aa21d
  416481:	stos   DWORD PTR es:[edi],eax
  416482:	or     al,0x9c
  416484:	jno    0x88ee8edc
  41648a:	repnz gs mov bh,0x78
  41648e:	lea    edi,[edx-0x5da4ee93]
  416494:	jg     0x41647e
  416496:	leave  
  416497:	lds    ecx,FWORD PTR [ebx-0x4c]
  41649a:	or     bh,BYTE PTR [eax]
  41649c:	mov    ecx,0x37164bee
  4164a1:	or     DWORD PTR [ecx+0x54320444],esi
  4164a7:	retf   
  4164a8:	xlat   BYTE PTR ds:[ebx]
  4164a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164aa:	jecxz  0x4164bc
  4164ac:	sbb    eax,esp
  4164ae:	aad    0x8d
  4164b0:	jl     0x4164b1
  4164b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164b3:	push   edi
  4164b4:	inc    edi
  4164b5:	mov    BYTE PTR [ecx-0x702feaa3],ah
  4164bb:	adc    al,0x88
  4164bd:	inc    esi
  4164be:	mov    ecx,0x6938b150
  4164c3:	add    DWORD PTR [ebp+0x19],edx
  4164c6:	outs   dx,DWORD PTR ds:[esi]
  4164c7:	sbb    eax,DWORD PTR [edi+0x1ccfae49]
  4164cd:	pcmpgtw mm2,mm6
  4164d0:	pop    ss
  4164d1:	xor    BYTE PTR [edi-0x41],bl
  4164d4:	xchg   ecx,eax
  4164d5:	ja     0x4164b2
  4164d7:	scas   eax,DWORD PTR es:[edi]
  4164d8:	inc    eax
  4164d9:	clc    
  4164da:	lock mov ch,0x17
  4164dd:	rcr    BYTE PTR [edi-0x645a591b],1
  4164e3:	jl     0x416475
  4164e5:	ins    BYTE PTR es:[edi],dx
  4164e6:	dec    ecx
  4164e7:	or     ch,BYTE PTR [ecx]
  4164e9:	ror    ebx,1
  4164eb:	loopne 0x416565
  4164ed:	int3   
  4164ee:	xchg   edi,eax
  4164ef:	gs call 0xf384:0x7cd60a8c
  4164f7:	outs   dx,BYTE PTR ds:[esi]
  4164f8:	mov    ch,0x18
  4164fa:	std    
  4164fb:	fld    DWORD PTR [ecx-0x45f999bc]
  416501:	push   ds
  416502:	or     al,0xb8
  416504:	jl     0x41653b
  416506:	mov    ah,0xb4
  416508:	clc    
  416509:	(bad)  
  41650a:	(bad)  
  41650b:	dec    ecx
  41650c:	repnz addr16 icebp 
  41650f:	xchg   edi,eax
  416510:	push   edi
  416511:	pop    ss
  416512:	enter  0x9b94,0xaa
  416516:	sub    eax,0x387f02ac
  41651b:	xor    edi,DWORD PTR [ecx]
  41651d:	adc    al,0x28
  41651f:	adc    eax,0xc3c3c125
  416524:	mov    ch,0xac
  416526:	(bad)  
  416527:	call   0xec5633a1
  41652c:	pop    edi
  41652d:	or     al,0xc8
  41652f:	lock push edi
  416531:	or     DWORD PTR [ebx],ebp
  416533:	pop    esp
  416534:	push   ebx
  416535:	cmp    esi,DWORD PTR [eax]
  416537:	or     BYTE PTR [ecx+0x56],cl
  41653a:	cmp    eax,0xa3b108a8
  41653f:	lds    ecx,FWORD PTR [edi+esi*2-0x69]
  416543:	stos   DWORD PTR es:[edi],eax
  416544:	jmp    0x9195d641
  416549:	mov    DWORD PTR [edi+esi*4],ebx
  41654c:	xchg   ebp,eax
  41654d:	cdq    
  41654e:	mov    ds:0x670deb86,eax
  416553:	ss jg  0x4165a4
  416556:	xchg   BYTE PTR [ebx],dl
  416558:	mov    al,ds:0x39b95778
  41655d:	cwde   
  41655e:	mov    ecx,cr0
  416561:	cli    
  416562:	cmp    al,0xa5
  416564:	mov    WORD PTR [ebp+esi*8+0x1],fs
  416568:	repnz adc al,0x4d
  41656b:	xor    eax,0x77217aae
  416570:	cmp    DWORD PTR [ebp-0x6d],0x43
  416574:	pop    ds
  416575:	xchg   ebp,ebp
  416577:	add    eax,0x9a373ab3
  41657c:	repnz out 0x81,eax
  41657f:	inc    ebp
  416580:	fadd   st(4),st
  416582:	xlat   BYTE PTR ds:[ebx]
  416583:	clc    
  416584:	dec    edx
  416585:	(bad)  
  416586:	mov    edi,0x808058c
  41658b:	hlt    
  41658c:	jge    0x4165fc
  41658e:	xlat   BYTE PTR ds:[ebx]
  41658f:	(bad)  
  416590:	pop    esi
  416591:	(bad)  
  416592:	or     ecx,DWORD PTR [edx+0x75c2a006]
  416598:	mov    ch,0x3b
  41659a:	outs   dx,DWORD PTR ds:[esi]
  41659b:	fcom   DWORD PTR [ecx-0x6f1d9683]
  4165a1:	sub    edi,ebx
  4165a3:	sbb    DWORD PTR [ebx-0x1a],ebp
  4165a6:	and    eax,0x6b521c5a
  4165ab:	xor    BYTE PTR [ebx],ah
  4165ad:	jne    0x4165bd
  4165af:	scas   eax,DWORD PTR es:[edi]
  4165b0:	call   0x97a4:0xe55e9cd9
  4165b7:	adc    eax,0x6e617206
  4165bc:	cmp    eax,0xce76d1b3
  4165c1:	loope  0x416580
  4165c3:	jle    0x4165e6
  4165c5:	jg     0x416614
  4165c7:	adc    eax,0x5423f64d
  4165cc:	and    eax,0xd0cc2d01
  4165d1:	pop    es
  4165d2:	xchg   esi,eax
  4165d3:	cmc    
  4165d4:	mov    eax,0x96a47c1a
  4165d9:	mov    ebx,0xda7b3615
  4165de:	jmp    0x416584
  4165e0:	push   0x59
  4165e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165e3:	shl    esp,0xe
  4165e6:	iret   
  4165e7:	in     eax,0x6d
  4165e9:	jo     0x416617
  4165eb:	mov    eax,ds:0xe470c4c0
  4165f0:	adc    bl,al
  4165f2:	out    dx,eax
  4165f3:	repnz push es
  4165f5:	cmp    eax,0x4d1e3850
  4165fa:	leave  
  4165fb:	cmp    BYTE PTR [eax],al
  4165fd:	inc    esp
  4165fe:	and    esi,0xcd8f2b57
  416604:	push   cs
  416605:	jge    0x416639
  416607:	aas    
  416608:	dec    ebx
  416609:	fst    DWORD PTR [esi+0x7b04b240]
  41660f:	jbe    0x416639
  416611:	cmp    bh,ah
  416613:	inc    ebp
  416614:	std    
  416615:	repz inc ecx
  416617:	xor    eax,ebx
  416619:	pop    edi
  41661a:	pop    ebp
  41661b:	rcl    BYTE PTR [esi-0x23],1
  41661e:	aam    0xeb
  416620:	add    ebx,esi
  416622:	dec    ecx
  416623:	dec    eax
  416624:	inc    esp
  416625:	popa   
  416626:	jo     0x416643
  416628:	cmp    bl,BYTE PTR [esi]
  41662a:	jnp    0x41663c
  41662c:	dec    eax
  41662d:	popf   
  41662e:	retf   0x2094
  416631:	mov    bl,0xcd
  416633:	xor    eax,0xb9324d36
  416638:	pop    ebp
  416639:	repz cld 
  41663b:	loop   0x41667c
  41663d:	mov    dl,0x84
  41663f:	(bad)  
  416641:	lods   al,BYTE PTR ds:[esi]
  416642:	mov    eax,ds:0x2337b3
  416647:	mov    edi,0xfcd15677
  41664c:	cmp    DWORD PTR [edi+0x1b68b24d],edx
  416652:	jno    0x4166a2
  416654:	stos   BYTE PTR es:[edi],al
  416655:	mov    bh,0x0
  416657:	inc    esp
  416658:	cld    
  416659:	mov    bl,0xb6
  41665b:	test   al,0x26
  41665d:	push   eax
  41665e:	fdiv   QWORD PTR [ebp+0x63]
  416661:	cmp    dh,dl
  416663:	js     0x4166ba
  416665:	cdq    
  416666:	call   0x743a7fc5
  41666b:	js     0x4166a9
  41666d:	jmp    0x41edd153
  416672:	aam    0xb9
  416674:	pusha  
  416675:	pop    edx
  416676:	stos   BYTE PTR es:[edi],al
  416677:	out    0xcb,al
  416679:	loope  0x416650
  41667b:	jl     0x4166ed
  41667d:	push   ebp
  41667e:	dec    ebx
  41667f:	leave  
  416680:	push   es
  416681:	pop    edi
  416682:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416683:	sbb    BYTE PTR [ebp-0x4],dl
  416686:	push   ss
  416687:	cmc    
  416688:	jo     0x416670
  41668a:	rcl    bl,cl
  41668c:	std    
  41668d:	or     esi,DWORD PTR [edx]
  41668f:	xchg   edi,eax
  416690:	add    DWORD PTR [edx+0x38],0xf0f8a34b
  416697:	into   
  416698:	das    
  416699:	jb     0x4166e3
  41669b:	cmp    al,0xf6
  41669d:	in     al,dx
  41669e:	sbb    BYTE PTR [edi+eiz*8],dh
  4166a1:	in     al,dx
  4166a2:	push   es
  4166a3:	sbb    eax,DWORD PTR [ebp+0xb92e050]
  4166a9:	lods   al,BYTE PTR ds:[esi]
  4166aa:	mov    ds:0x5c80e5c0,al
  4166af:	loope  0x416650
  4166b1:	xchg   ebx,eax
  4166b2:	call   0x764e:0xf6038a73
  4166b9:	jmp    0x4166d5
  4166bb:	mov    eax,ds:0x347052fb
  4166c0:	std    
  4166c1:	xchg   edi,eax
  4166c2:	das    
  4166c3:	xchg   edi,eax
  4166c4:	xchg   ebx,eax
  4166c5:	cmp    al,0x31
  4166c7:	je     0x41671f
  4166c9:	mov    dh,0x3e
  4166cb:	std    
  4166cc:	gs (bad) 
  4166ce:	jle    0x416703
  4166d0:	add    bl,bl
  4166d2:	add    DWORD PTR [edx],ecx
  4166d4:	pop    esp
  4166d5:	or     eax,esp
  4166d7:	push   edx
  4166d8:	xor    edx,ebp
  4166da:	mov    ch,0x94
  4166dc:	mov    BYTE PTR [esi-0x75811604],dl
  4166e2:	mov    BYTE PTR [edi],ch
  4166e4:	dec    edi
  4166e5:	aaa    
  4166e6:	and    bh,ch
  4166e8:	fnsave [edi-0x7da8486a]
  4166ee:	mov    ds:0xeafa4a63,al
  4166f3:	and    bh,cl
  4166f5:	fnstsw WORD PTR [ebp-0x4e1c75ff]
  4166fb:	or     eax,0xe5ac3f79
  416700:	dec    edx
  416701:	aaa    
  416702:	gs das 
  416704:	into   
  416705:	mov    DWORD PTR [ecx],eax
  416707:	fld    TBYTE PTR [ebx+0x2ae2f0ad]
  41670d:	lds    ecx,FWORD PTR [esi+ebx*1+0x33e2a33d]
  416714:	hlt    
  416715:	out    dx,al
  416716:	test   eax,0x527baf37
  41671b:	test   BYTE PTR [esi-0x31],0x9e
  41671f:	xchg   edi,eax
  416720:	cmp    edx,esp
  416722:	cmp    ch,al
  416724:	std    
  416725:	dec    ebx
  416726:	xor    bl,BYTE PTR [edx-0x6e0cf1ca]
  41672c:	push   ds
  41672d:	push   esi
  41672e:	mov    ebp,0xca02a2c7
  416733:	xchg   DWORD PTR [esi],edx
  416735:	lea    ebx,fs:[edx+0x2a5a24f4]
  41673c:	sar    BYTE PTR [bp+di+0x65],1
  416740:	lea    eax,[edx+0x65]
  416743:	jno    0x41671a
  416745:	push   ecx
  416746:	addr16 pop esp
  416748:	in     al,dx
  416749:	jmp    0x48e22923
  41674e:	clc    
  41674f:	and    edx,ecx
  416751:	or     bl,cl
  416753:	out    0xec,eax
  416755:	cld    
  416756:	ins    DWORD PTR es:[edi],dx
  416757:	aaa    
  416758:	iret   
  416759:	cwde   
  41675a:	jnp    0x416735
  41675c:	outs   dx,DWORD PTR ds:[esi]
  41675d:	test   al,0x2d
  41675f:	dec    esi
  416760:	adc    DWORD PTR [edx-0x70a7bee6],esp
  416766:	pushf  
  416767:	loope  0x41675e
  416769:	rol    DWORD PTR [eax],cl
  41676b:	xchg   ebx,eax
  41676c:	sbb    al,0x87
  41676e:	sti    
  41676f:	nop
  416770:	in     al,dx
  416771:	arpl   WORD PTR [edx+0x35],si
  416774:	lods   al,BYTE PTR ds:[esi]
  416775:	inc    eax
  416776:	test   eax,0x8b131c92
  41677b:	ret    
  41677c:	sub    BYTE PTR [esi+0x32],al
  41677f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416780:	aam    0x97
  416782:	ret    
  416783:	xchg   esi,eax
  416784:	js     0x416747
  416786:	cmp    eax,0xb36710e7
  41678b:	jp     0x4167a5
  41678d:	fcomip st,st(0)
  41678f:	sar    DWORD PTR [eax+eax*4],0xac
  416793:	pop    ebp
  416794:	adc    eax,0x36a0b15d
  416799:	je     0x4167aa
  41679b:	inc    ebx
  41679c:	cdq    
  41679d:	inc    ebp
  41679e:	out    dx,eax
  41679f:	(bad)  
  4167a1:	stc    
  4167a2:	ins    DWORD PTR es:[edi],dx
  4167a3:	iret   
  4167a4:	mov    ds:0xe2fdeb6e,al
  4167a9:	hlt    
  4167aa:	jnp    0x41679c
  4167ac:	neg    DWORD PTR [ecx-0x5f579de8]
  4167b2:	adc    eax,0x2f4924a9
  4167b7:	cmp    bh,BYTE PTR es:[eax+0x3d]
  4167bb:	stos   BYTE PTR es:[edi],al
  4167bc:	int    0x2b
  4167be:	popa   
  4167bf:	inc    eax
  4167c0:	enter  0xc161,0x36
  4167c4:	xor    DWORD PTR [edx-0xd],esi
  4167c7:	ret    0x9e69
  4167ca:	loope  0x41676b
  4167cc:	cdq    
  4167cd:	push   cs
  4167ce:	out    0xb5,al
  4167d0:	call   0x6c3:0x4f5bdeb7
  4167d7:	cmp    al,0x12
  4167d9:	shl    BYTE PTR [ebx],cl
  4167db:	mov    ch,0xfd
  4167dd:	xchg   ebp,eax
  4167de:	loop   0x41681d
  4167e0:	cwde   
  4167e1:	inc    esi
  4167e2:	ds lahf 
  4167e4:	and    sp,WORD PTR [ebx]
  4167e7:	adc    al,0xba
  4167e9:	adc    dl,BYTE PTR [ebx-0x19]
  4167ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167ed:	and    bh,BYTE PTR [edi-0x2215cae5]
  4167f3:	push   0xb4a45ca7
  4167f8:	xor    al,0xfd
  4167fa:	(bad)  
  4167fc:	adc    edi,DWORD PTR [ebx-0x4677edc9]
  416802:	adc    esp,DWORD PTR [ecx]
  416804:	mov    bh,0x5c
  416806:	lds    ecx,FWORD PTR [edi-0x1c]
  416809:	cmp    bl,bh
  41680b:	cli    
  41680c:	in     eax,dx
  41680d:	(bad)  
  41680e:	cmp    al,0x7
  416810:	jmp    DWORD PTR [esi]
  416812:	sub    BYTE PTR [eax+0x70],0x8b
  416816:	xor    eax,0x5cf72375
  41681b:	mov    dh,0xd3
  41681d:	and    bl,BYTE PTR [edx-0x2c]
  416820:	lods   al,BYTE PTR ds:[esi]
  416821:	jo     0x416843
  416823:	inc    edx
  416824:	ss inc ecx
  416826:	sti    
  416827:	test   eax,ebx
  416829:	sub    al,BYTE PTR [ecx-0x4c1d6204]
  41682f:	xchg   DWORD PTR [edi+eiz*2+0x4c2deb00],esi
  416836:	popf   
  416837:	sbb    al,0xa2
  416839:	dec    edi
  41683a:	inc    edi
  41683b:	push   0x43
  41683d:	aaa    
  41683e:	popf   
  41683f:	repz and dh,dh
  416842:	lock call 0xb41e:0xcbee3024
  41684a:	xor    eax,0x6f53b820
  41684f:	outs   dx,BYTE PTR fs:[esi]
  416851:	jae    0x4168cc
  416853:	sbb    DWORD PTR [esi-0x71f73d52],eax
  416859:	and    al,0xdb
  41685b:	loopne 0x416888
  41685d:	arpl   WORD PTR [ebp+0x78ddf5f4],si
  416863:	pop    esp
  416864:	int3   
  416865:	mov    dl,0x3e
  416867:	in     eax,dx
  416868:	out    0x84,eax
  41686a:	repnz mov bh,0xf7
  41686d:	in     al,dx
  41686e:	add    edx,DWORD PTR [edx-0x6b]
  416871:	pop    ecx
  416872:	in     al,dx
  416873:	mov    es,WORD PTR [esi+0x4c]
  416876:	ins    DWORD PTR es:[edi],dx
  416877:	jbe    0x416846
  416879:	jge    0x41685d
  41687b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41687c:	or     al,0x8e
  41687e:	cmp    DWORD PTR ds:0xe6bd1737,esp
  416884:	push   ss
  416885:	addr16 inc cl
  416888:	mov    edi,0xb9c395ab
  41688d:	jne    0x4168ac
  41688f:	xchg   ebx,eax
  416890:	sbb    DWORD PTR [ebx+0x23],esp
  416893:	and    DWORD PTR [esi+edi*8],ecx
  416896:	and    eax,0x30a71f06
  41689b:	fsubr  st(4),st
  41689d:	cmp    edi,DWORD PTR [eax-0x28]
  4168a0:	shl    BYTE PTR [ebp+esi*8+0x5ff97308],1
  4168a7:	and    al,0xb0
  4168a9:	(bad)  
  4168ab:	xor    esi,0x84be38a4
  4168b1:	cmp    BYTE PTR [esi+eax*1+0x2],cl
  4168b5:	or     eax,DWORD PTR [eax-0x6e5f0d9f]
  4168bb:	mov    ch,dl
  4168bd:	stc    
  4168be:	fiadd  DWORD PTR [esp+eiz*8+0x4a]
  4168c2:	sub    DWORD PTR [ebp+0x4ce10549],esp
  4168c8:	mov    edx,0x33b3c5c6
  4168cd:	es pop ecx
  4168cf:	sbb    al,0x34
  4168d1:	mov    eax,ds:0x270fa13d
  4168d6:	push   ebx
  4168d7:	call   0x28f9:0x4b53ad8f
  4168de:	dec    esp
  4168df:	mov    bl,0xcc
  4168e1:	retf   
  4168e2:	fidiv  DWORD PTR [ecx+0x4]
  4168e5:	mov    eax,ds:0xc85e4396
  4168ea:	pop    ebx
  4168eb:	adc    edi,edx
  4168ed:	ss fmulp st(0),st
  4168f0:	jb     0x4168ee
  4168f2:	mov    ecx,0xc0776520
  4168f7:	in     al,dx
  4168f8:	loope  0x4168ac
  4168fa:	bound  edi,QWORD PTR [edx+0xa0e8fee]
  416900:	sbb    ebx,edx
  416902:	and    al,0x60
  416904:	and    al,cl
  416906:	xchg   ebx,eax
  416907:	stos   BYTE PTR es:[edi],al
  416908:	sub    ebx,DWORD PTR [ebx+0x9]
  41690b:	cld    
  41690c:	dec    esp
  41690d:	stos   DWORD PTR es:[edi],eax
  41690e:	arpl   WORD PTR [ebp+eax*4-0x79756f01],di
  416915:	stc    
  416916:	push   esp
  416917:	mov    edi,0xfd639573
  41691c:	stmxcsr DWORD PTR [ebx]
  41691f:	adc    esi,DWORD PTR [ebx+0x5e9d3cc5]
  416925:	ret    0xbcee
  416928:	das    
  416929:	rcl    dl,cl
  41692b:	cmp    BYTE PTR [ecx],cl
  41692d:	test   BYTE PTR [ebx+0x33ecd025],ah
  416933:	jne    0x416957
  416935:	xor    al,0x43
  416937:	dec    ebp
  416938:	xor    DWORD PTR [edi],ebx
  41693a:	call   0xf4175a20
  41693f:	imul   edx,DWORD PTR [edi],0x6b
  416942:	jbe    0x41693e
  416944:	sub    al,0xca
  416946:	mov    edi,0x316bf9f8
  41694b:	test   DWORD PTR ds:0xc91c6983,esp
  416951:	push   eax
  416952:	xor    al,0x8
  416954:	mov    ah,0xe5
  416956:	fild   DWORD PTR [esi-0x43]
  416959:	in     al,dx
  41695a:	mov    al,BYTE PTR [esi]
  41695c:	cmp    eax,0x87407649
  416961:	dec    ebp
  416962:	test   DWORD PTR [eax+0x5b62ba2c],ebx
  416968:	sub    dl,ch
  41696a:	or     eax,0x7505204
  41696f:	xchg   DWORD PTR [ebp+0x5202c663],ecx
  416975:	dec    eax
  416976:	inc    eax
  416977:	adc    BYTE PTR [eax-0x75],ah
  41697a:	xchg   eax,ebx
  41697c:	adc    al,0x9f
  41697e:	test   esp,ecx
  416980:	jbe    0x416929
  416982:	sub    al,0x3a
  416984:	adc    cl,0x82
  416987:	push   DWORD PTR [esi+0x6ba498db]
  41698d:	xchg   edi,eax
  41698e:	mov    ecx,0x2cd2a4d7
  416993:	fstp   DWORD PTR [ecx]
  416995:	fcomp  st(7)
  416997:	(bad)  
  416998:	fisub  DWORD PTR [ebp-0x35]
  41699b:	fwait
  41699c:	jge    0x416964
  41699e:	data16 mov ds:0xae605a68,al
  4169a4:	shr    DWORD PTR [edx],0x23
  4169a7:	das    
  4169a8:	movsx  ecx,BYTE PTR [ecx]
  4169ab:	ins    DWORD PTR es:[edi],dx
  4169ac:	ins    DWORD PTR es:[edi],dx
  4169ad:	inc    ecx
  4169ae:	xor    DWORD PTR [ebp-0x51],eax
  4169b1:	ds stos BYTE PTR es:[edi],al
  4169b3:	shr    DWORD PTR [edi+0x549275c0],0x27
  4169ba:	lods   eax,DWORD PTR ds:[esi]
  4169bb:	sahf   
  4169bc:	jb     0x4169f0
  4169be:	enter  0xd110,0x34
  4169c2:	xor    esp,DWORD PTR [ebx-0x6b]
  4169c5:	iret   
  4169c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169c7:	cwde   
  4169c8:	test   DWORD PTR [ecx+0x160b5fe1],0x123f8fb6
  4169d2:	addr16 sbb edi,esi
  4169d5:	ja     0x416a00
  4169d7:	xlat   BYTE PTR ds:[ebx]
  4169d8:	jae    0x4169bd
  4169da:	jns    0x4169fd
  4169dc:	jle    0x41699c
  4169de:	mov    eax,ds:0xf94cc3
  4169e3:	push   edx
  4169e4:	neg    eax
  4169e6:	mov    ds:0x13eec50,al
  4169eb:	mov    ds:0x3af0b0ec,eax
  4169f0:	out    0x2e,al
  4169f2:	pop    es
  4169f3:	lock mov esi,0xc7662808
  4169f9:	loopne 0x4169ff
  4169fb:	or     ah,BYTE PTR [esi-0x5a]
  4169fe:	jns    0x416a42
  416a00:	jns    0x4169f2
  416a02:	push   edx
  416a03:	mov    cl,0x21
  416a05:	pop    edx
  416a06:	(bad)  
  416a07:	ja     0x416998
  416a09:	xchg   esp,eax
  416a0a:	mov    ah,0xbd
  416a0c:	stos   DWORD PTR es:[edi],eax
  416a0d:	jg     0x416a5c
  416a0f:	mov    ebp,0xe159a59e
  416a14:	sbb    ah,BYTE PTR [ecx-0x2c]
  416a17:	stc    
  416a18:	xor    bh,BYTE PTR [edi+0x65621686]
  416a1e:	dec    esi
  416a1f:	mov    ch,0x12
  416a21:	dec    edx
  416a22:	ds clc 
  416a24:	sub    dh,BYTE PTR [ebx+eax*4-0x39]
  416a28:	(bad)  
  416a29:	push   ds
  416a2a:	xchg   ecx,eax
  416a2b:	mov    bl,0xa8
  416a2d:	out    0x7,al
  416a2f:	mov    ah,0x1b
  416a31:	into   
  416a32:	repnz inc esi
  416a34:	sbb    BYTE PTR [esp+ebx*4+0x3d],cl
  416a38:	js     0x416a56
  416a3a:	adc    DWORD PTR [esi-0x2cb1e71e],ecx
  416a40:	xchg   ecx,eax
  416a41:	into   
  416a42:	pop    eax
  416a43:	ret    
  416a44:	test   eax,0x4c9c4aeb
  416a49:	inc    ebx
  416a4a:	pop    ecx
  416a4b:	fisubr WORD PTR [ebx-0x58]
  416a4e:	and    al,0x5c
  416a50:	pop    ss
  416a51:	(bad)  
  416a53:	loopne 0x416a68
  416a55:	pop    es
  416a56:	int3   
  416a57:	popf   
  416a58:	or     DWORD PTR [eax+0x40c283bb],0xea2becf9
  416a62:	das    
  416a63:	mov    eax,ds:0x88d095de
  416a68:	pop    edx
  416a69:	push   ebp
  416a6a:	xchg   BYTE PTR [esi-0x5d],dl
  416a6d:	xchg   ecx,eax
  416a6e:	inc    eax
  416a6f:	and    edi,DWORD PTR [ecx]
  416a71:	add    eax,0x3a816e72
  416a76:	test   eax,0x15fe3cda
  416a7b:	test   cl,bh
  416a7d:	adc    BYTE PTR [edx+0x677601fe],ah
  416a83:	test   al,0xf2
  416a85:	mov    edx,0xf7978fc9
  416a8a:	leave  
  416a8b:	lds    edi,FWORD PTR [edi+0x24]
  416a8e:	(bad)  
  416a8f:	and    ecx,ebp
  416a91:	fcomp  QWORD PTR [ebx]
  416a93:	inc    ecx
  416a94:	test   BYTE PTR [esi],dl
  416a96:	imul   ebx,DWORD PTR [ebp-0x58717944],0xbe0ccfc2
  416aa0:	fadd   st(7),st
  416aa2:	xchg   esi,eax
  416aa3:	xchg   edx,eax
  416aa4:	stc    
  416aa5:	(bad)  
  416aa6:	cmc    
  416aa7:	pop    ecx
  416aa8:	outs   dx,BYTE PTR ds:[esi]
  416aa9:	mov    ah,0x29
  416aab:	aad    0x13
  416aad:	call   0x5db2:0x2b16c17
  416ab4:	and    al,0x24
  416ab6:	rol    edx,cl
  416ab8:	mov    ds:0x8a845534,al
  416abd:	jne    0x416a80
  416abf:	mov    dh,0xe6
  416ac1:	sbb    ecx,DWORD PTR [eax]
  416ac3:	sbb    dl,dh
  416ac5:	pop    ebp
  416ac6:	push   0xffffffd6
  416ac8:	add    eax,0x6f6c882d
  416acd:	mov    BYTE PTR [ecx-0x5c],cl
  416ad0:	sub    BYTE PTR [eax+0x13b8975f],cl
  416ad6:	mov    al,ds:0x5d9402ad
  416adb:	adc    dl,BYTE PTR [edx]
  416add:	jg     0x416b2e
  416adf:	sbb    al,0x66
  416ae1:	retf   0xadff
  416ae4:	ss jl  0x416b26
  416ae7:	jecxz  0x416b05
  416ae9:	sar    BYTE PTR [ebx+0x46],1
  416aec:	and    bh,BYTE PTR [eax-0x65]
  416aef:	or     bh,BYTE PTR [esi-0x3a]
  416af2:	std    
  416af3:	cmp    DWORD PTR cs:[eax+eax*4+0x5a],0xffffffb9
  416af9:	jmp    0x416a91
  416afb:	imul   ebx,DWORD PTR [ecx+0x3e],0x7e0b5e87
  416b02:	mov    ecx,0x5cb6bc1f
  416b07:	or     ecx,eax
  416b09:	mov    al,ds:0xb9128b20
  416b0e:	js     0x416b31
  416b10:	aas    
  416b11:	cmp    al,0xd6
  416b13:	jbe    0x416b6a
  416b15:	mov    esp,0x2a1a6ad3
  416b1a:	in     al,0x5c
  416b1c:	dec    edi
  416b1d:	inc    ebx
  416b1e:	mov    ds:0xb9333c33,eax
  416b23:	rcr    BYTE PTR [ebx-0x5ab011bb],0xab
  416b2a:	loope  0x416b11
  416b2c:	rcl    ah,0x71
  416b2f:	mov    ebp,0x5f533d8d
  416b34:	test   DWORD PTR ds:0xded4e23c,ebx
  416b3a:	into   
  416b3b:	nop
  416b3c:	or     DWORD PTR [edx],edi
  416b3e:	out    0x95,eax
  416b40:	movq   mm4,QWORD PTR [edx]
  416b43:	ret    
  416b44:	(bad)  
  416b45:	sar    esi,1
  416b47:	test   eax,0xf5842571
  416b4c:	or     al,0x62
  416b4e:	mov    al,ds:0xe37feeaf
  416b53:	add    BYTE PTR [ebx+0x52],ah
  416b56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b57:	xchg   DWORD PTR ss:[edi],eax
  416b5a:	push   ds
  416b5b:	mov    ?,WORD PTR es:0x6dd471cc
  416b62:	mov    ecx,0x7e29b6eb
  416b67:	add    edx,esi
  416b69:	ja     0x416ba3
  416b6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b6c:	mul    BYTE PTR [edx]
  416b6e:	hlt    
  416b6f:	pop    eax
  416b70:	aas    
  416b71:	sub    BYTE PTR [ebp+0x41],bh
  416b74:	mov    esp,0x3455cac7
  416b79:	aam    0x6b
  416b7b:	jo     0x416bcd
  416b7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b7e:	mov    ch,0x2c
  416b80:	sub    al,dl
  416b82:	sti    
  416b83:	inc    eax
  416b84:	push   eax
  416b85:	out    dx,eax
  416b86:	inc    edi
  416b87:	xchg   ebp,eax
  416b88:	cwde   
  416b89:	xchg   esi,ebx
  416b8b:	pusha  
  416b8c:	adc    eax,0x65d6da
  416b91:	add    bh,BYTE PTR [ebx]
  416b93:	aad    0x51
  416b95:	hlt    
  416b96:	icebp  
  416b97:	arpl   WORD PTR [esi+0x75],cx
  416b9a:	dec    ebp
  416b9b:	push   esp
  416b9c:	scas   eax,DWORD PTR es:[edi]
  416b9d:	inc    ebp
  416b9e:	or     dl,BYTE PTR [ecx-0x79]
  416ba1:	or     edi,edi
  416ba3:	add    BYTE PTR [ebp+0x3ea7b297],0x5d
  416baa:	xchg   edx,eax
  416bab:	stos   DWORD PTR es:[edi],eax
  416bac:	sbb    BYTE PTR [ecx-0x6],bh
  416baf:	mov    edx,ebp
  416bb1:	pushf  
  416bb2:	enter  0x4de4,0x86
  416bb6:	jle    0x416bbd
  416bb8:	mov    cl,0x57
  416bba:	and    esp,DWORD PTR [ecx+0x5]
  416bbd:	int3   
  416bbe:	je     0x416c22
  416bc0:	mov    bl,0xef
  416bc2:	(bad)  
  416bc3:	and    al,0xfb
  416bc5:	call   0xa8e1:0xc3d9b709
  416bcc:	imul   edi,DWORD PTR [edx],0x96dd05ce
  416bd2:	ins    DWORD PTR es:[edi],dx
  416bd3:	out    dx,eax
  416bd4:	fnsave [ebp-0x33]
  416bd7:	(bad)  
  416bd8:	xchg   ecx,eax
  416bd9:	inc    eax
  416bda:	imul   esi,DWORD PTR [edi],0x9e99f464
  416be0:	push   ebx
  416be1:	popf   
  416be2:	and    DWORD PTR [eax+esi*1-0x3e],0xb4913b
  416bea:	out    0xff,al
  416bec:	xor    bl,al
  416bee:	inc    esp
  416bef:	out    dx,al
  416bf0:	shr    DWORD PTR [esi+ebp*8-0x23],0x19
  416bf5:	cli    
  416bf6:	out    dx,al
  416bf7:	jmp    0xbdaf:0xcf2dc174
  416bfe:	sub    al,0x16
  416c00:	mov    DWORD PTR [esi-0x6a],esp
  416c03:	test   al,0x7d
  416c05:	sbb    edx,DWORD PTR [ecx+esi*4+0x51]
  416c09:	push   ebx
  416c0a:	jge    0x416bf8
  416c0c:	jg     0x416bc5
  416c0e:	cmp    al,0xba
  416c10:	cmp    ebp,DWORD PTR [edx+0x6977572d]
  416c16:	rcl    bh,cl
  416c18:	mov    eax,ds:0x9bba806f
  416c1d:	or     eax,0xc112bb25
  416c22:	hlt    
  416c23:	jno    0x416c34
  416c25:	add    al,0x16
  416c27:	pop    edx
  416c28:	cld    
  416c29:	rcr    DWORD PTR [eax-0x1b804558],0x62
  416c30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c31:	adc    ah,BYTE PTR [esi-0x5b]
  416c34:	sbb    al,cl
  416c36:	fdiv   DWORD PTR [ebp-0x7f]
  416c39:	xchg   ebx,eax
  416c3a:	shr    BYTE PTR [ebp-0x4b],0x77
  416c3e:	ja     0x416c7f
  416c40:	mov    eax,0x6a76c677
  416c45:	jb     0x416c20
  416c47:	jns    0x416c6a
  416c49:	fwait
  416c4a:	push   ss
  416c4b:	rcr    BYTE PTR [ecx],cl
  416c4d:	stc    
  416c4e:	dec    ebx
  416c4f:	cmp    al,0x7b
  416c51:	int    0x6f
  416c53:	jl     0x416c2a
  416c55:	scas   eax,DWORD PTR es:[edi]
  416c56:	sub    dh,ah
  416c58:	adc    bl,BYTE PTR [edi]
  416c5a:	mov    dl,0x4d
  416c5c:	aas    
  416c5d:	pop    eax
  416c5e:	sbb    edx,DWORD PTR [ecx]
  416c60:	jecxz  0x416c2d
  416c62:	jmp    0x416ccb
  416c64:	jl     0x416c9c
  416c66:	call   0x65ab:0xe4871548
  416c6d:	outs   dx,DWORD PTR ds:[esi]
  416c6e:	inc    ecx
  416c6f:	pop    eax
  416c70:	mov    ch,0xbf
  416c72:	xor    edi,DWORD PTR [edx+0x50]
  416c75:	outs   dx,BYTE PTR ds:[esi]
  416c76:	hlt    
  416c77:	enter  0x8ae9,0xba
  416c7b:	outs   dx,BYTE PTR ds:[esi]
  416c7c:	sahf   
  416c7d:	rol    esp,0x40
  416c80:	test   cl,bh
  416c82:	faddp  st(5),st
  416c84:	cmp    DWORD PTR [edi],esi
  416c86:	jecxz  0x416c66
  416c88:	shl    DWORD PTR [eax+0x5],0x34
  416c8c:	(bad)  
  416c8e:	jmp    0x416c74
  416c90:	pop    es
  416c91:	mov    es,WORD PTR [ecx-0xe]
  416c94:	sub    al,0xcb
  416c96:	(bad)  
  416c97:	test   al,0xd7
  416c99:	lock mov WORD PTR [ebx+0x40d622c9],fs
  416ca0:	xchg   ebx,eax
  416ca1:	inc    esp
  416ca2:	out    0xa0,al
  416ca4:	push   ebx
  416ca5:	dec    esi
  416ca6:	or     al,dl
  416ca8:	adc    DWORD PTR [edi-0x22],0x25
  416cac:	pop    ss
  416cad:	add    DWORD PTR [edi],edi
  416caf:	das    
  416cb0:	or     DWORD PTR ds:0xbc076598,edi
  416cb6:	scas   eax,DWORD PTR es:[edi]
  416cb7:	fwait
  416cb8:	bound  edi,QWORD PTR [ecx-0x17]
  416cbb:	jl     0x416c90
  416cbd:	jecxz  0x416cb5
  416cbf:	cmp    DWORD PTR [esi],ebp
  416cc1:	test   BYTE PTR [edi+ebp*4+0x22],dl
  416cc5:	icebp  
  416cc6:	retf   0xbfac
  416cc9:	mov    ds:0x7424771d,eax
  416cce:	mov    eax,0x939d5d95
  416cd3:	imul   edi,edx,0xed52e9d2
  416cd9:	cmp    al,0x89
  416cdb:	fstp   DWORD PTR [ebx-0x6f6d9957]
  416ce1:	mov    cl,0x9
  416ce3:	call   0x1db6:0x4b80b546
  416cea:	scas   al,BYTE PTR es:[edi]
  416ceb:	stos   DWORD PTR es:[edi],eax
  416cec:	adc    eax,0x1e117568
  416cf1:	cli    
  416cf2:	mov    cs,ecx
  416cf4:	sbb    al,0x2e
  416cf6:	dec    esp
  416cf7:	imul   DWORD PTR ds:0x16ebd274
  416cfd:	hlt    
  416cfe:	push   eax
  416cff:	inc    esi
  416d00:	(bad)  
  416d02:	sar    BYTE PTR [edx],cl
  416d04:	mov    ecx,0xdb2d1bc4
  416d09:	push   ebp
  416d0a:	xchg   edi,eax
  416d0b:	mov    ds:0x92eab619,eax
  416d10:	(bad)  
  416d11:	sti    
  416d12:	jmp    0x112e58ee
  416d17:	ins    DWORD PTR es:[edi],dx
  416d18:	cmp    BYTE PTR [ebp-0x27e9f2c7],0x90
  416d1f:	imul   esi,DWORD PTR [edx+0x11],0x65
  416d23:	add    eax,0x81ef5c6a
  416d28:	scas   eax,DWORD PTR es:[edi]
  416d29:	movntq QWORD PTR [edi-0xd],mm0
  416d2d:	mov    ecx,0x209f3d2e
  416d32:	cmp    al,0x6c
  416d34:	mov    ds,WORD PTR ss:[ebx+0x6faaaab1]
  416d3b:	nop
  416d3c:	cmp    BYTE PTR [ecx+0x7e],ah
  416d3f:	push   ds
  416d40:	imul   ecx,esi,0x29140f53
  416d46:	cdq    
  416d47:	mov    dl,0xd6
  416d49:	push   0xbd9384d7
  416d4e:	mov    ebp,ds
  416d50:	add    eax,0x5a09ba6
  416d55:	pop    ebp
  416d56:	stos   DWORD PTR es:[edi],eax
  416d57:	iret   
  416d58:	push   0x55
  416d5a:	addr16 cwde 
  416d5c:	and    DWORD PTR [ebx-0x554b893e],edi
  416d62:	in     eax,dx
  416d63:	pop    edx
  416d64:	in     al,dx
  416d65:	xor    eax,0x4d00eb85
  416d6a:	jecxz  0x416de2
  416d6c:	add    ebp,0xffffffc0
  416d6f:	mov    edx,0xeb3b7b54
  416d74:	pop    eax
  416d75:	xchg   BYTE PTR [ecx-0x7],bl
  416d78:	retf   
  416d79:	xchg   DWORD PTR [edx-0x3a],ebx
  416d7c:	mov    ebx,DWORD PTR [edi-0x6c4872c7]
  416d82:	mov    dh,0x65
  416d84:	push   cs
  416d85:	xchg   esi,eax
  416d86:	inc    eax
  416d87:	ret    0xfe25
  416d8a:	pop    eax
  416d8b:	dec    ecx
  416d8c:	mov    ds:0x20c56401,al
  416d91:	and    DWORD PTR [edi+0x7d620163],esp
  416d97:	push   cs
  416d98:	out    dx,al
  416d99:	les    edi,FWORD PTR [esi*4+0x4b499f82]
  416da0:	fst    DWORD PTR [ebx+eax*8-0x4c]
  416da4:	adc    DWORD PTR [edx+0x79],edx
  416da7:	adc    eax,0xa235e9c3
  416dac:	mov    ch,0x36
  416dae:	add    ecx,ecx
  416db0:	add    edi,DWORD PTR [edi+eiz*1-0x2d]
  416db4:	inc    si
  416db6:	mov    ecx,0x35295c
  416dbb:	add    DWORD PTR [edi],edi
  416dbd:	inc    esp
  416dbe:	push   ecx
  416dbf:	or     ch,0x70
  416dc2:	out    0xf2,eax
  416dc4:	in     eax,0xd6
  416dc6:	push   ebx
  416dc7:	and    al,0x7a
  416dc9:	mov    cl,0x4
  416dcb:	or     edx,eax
  416dcd:	ds loope 0x416db5
  416dd0:	icebp  
  416dd1:	sbb    eax,0x79363545
  416dd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dd7:	rcl    BYTE PTR [esi-0x72712533],cl
  416ddd:	xchg   ebp,eax
  416ddf:	xor    BYTE PTR [edx+0x70],cl
  416de2:	daa    
  416de3:	rol    al,0x3b
  416de6:	adc    DWORD PTR [ebp-0x7bb9be44],edi
  416dec:	ja     0x416de4
  416dee:	retf   0x1b03
  416df1:	orps   xmm7,XMMWORD PTR [edi]
  416df4:	jmp    0x416dcd
  416df6:	add    eax,0x91092968
  416dfb:	add    DWORD PTR [ebx-0x6a49800d],esi
  416e01:	test   DWORD PTR [eax-0x61],ebx
  416e04:	lock mov esi,0x4abef4cb
  416e0b:	ret    0x138d
  416e0e:	data16 fsub QWORD PTR [ecx]
  416e11:	mov    al,0x44
  416e13:	inc    ecx
  416e14:	dec    eax
  416e15:	mov    ds:0xa0465728,al
  416e1a:	push   0xa7a77e5c
  416e1f:	es push 0xadf3030f
  416e25:	test   DWORD PTR [esi-0x18],esp
  416e28:	sub    eax,0x2ee9a55a
  416e2d:	xor    eax,0x997370b7
  416e32:	int    0x42
  416e34:	jb     0x416e59
  416e36:	jp     0x416dca
  416e38:	icebp  
  416e39:	(bad)  
  416e3a:	push   esp
  416e3b:	inc    eax
  416e3c:	pop    edx
  416e3d:	mov    esi,0x51c160aa
  416e42:	xchg   ecx,eax
  416e43:	div    DWORD PTR [esi-0x3ed2d1e2]
  416e49:	ds test al,0xa
  416e4c:	xchg   DWORD PTR [eax],esp
  416e4e:	scas   al,BYTE PTR es:[edi]
  416e4f:	or     al,0xe7
  416e51:	mov    ch,0x40
  416e53:	call   0xe0:0xa8f44435
  416e5a:	inc    esp
  416e5b:	pop    edx
  416e5c:	sub    al,0xf9
  416e5e:	pop    edx
  416e5f:	gs pushf 
  416e61:	imul   DWORD PTR [esi+0x11dcd210]
  416e67:	sbb    cl,bh
  416e69:	push   0xffffffdc
  416e6b:	jbe    0x416ded
  416e6d:	jnp    0x416e05
  416e6f:	pop    esp
  416e70:	jmp    0x3ea:0x61f5e4b0
  416e77:	xor    ebp,DWORD PTR [eax]
  416e79:	pusha  
  416e7a:	inc    ecx
  416e7b:	in     al,dx
  416e7c:	xchg   esi,eax
  416e7d:	dec    edi
  416e7e:	stc    
  416e7f:	add    bh,BYTE PTR [eax]
  416e81:	mov    al,0x1a
  416e83:	jns    0x416e48
  416e85:	or     dh,BYTE PTR [ebx+0xf339040]
  416e8b:	pop    ebx
  416e8c:	mul    BYTE PTR ds:0xc86edc0f
  416e92:	je     0x416e88
  416e94:	sahf   
  416e95:	push   esp
  416e96:	ja     0x416e3f
  416e98:	pop    ecx
  416e99:	out    0x93,eax
  416e9b:	inc    edx
  416e9c:	icebp  
  416e9d:	inc    ebx
  416e9e:	test   al,0xd5
  416ea0:	add    al,dh
  416ea2:	test   BYTE PTR ds:0x1bddcbc,bh
  416ea8:	into   
  416ea9:	push   ecx
  416eaa:	mov    BYTE PTR [edi],cl
  416eac:	data16 stc 
  416eae:	call   0xdead7713
  416eb3:	popa   
  416eb4:	fld    TBYTE PTR [edx]
  416eb6:	cli    
  416eb7:	or     al,0xad
  416eb9:	push   ebx
  416eba:	retf   0xf96b
  416ebd:	jge    0x416e83
  416ebf:	jae    0x416e92
  416ec1:	dec    esp
  416ec2:	fnstcw WORD PTR [edi+0x63dbebdd]
  416ec8:	xchg   ecx,eax
  416ec9:	aam    0x72
  416ecb:	add    DWORD PTR ds:0x2c4abedc,edx
  416ed1:	add    DWORD PTR ds:0xb27d1685,esi
  416ed7:	pop    esp
  416ed8:	int3   
  416ed9:	xchg   BYTE PTR [ebp+0x12fa2d83],dl
  416edf:	call   0x54df:0xc1e0f5a7
  416ee6:	int3   
  416ee7:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  416ee9:	je     0x416edf
  416eeb:	or     dh,BYTE PTR [eax-0x1137a6d7]
  416ef1:	daa    
  416ef2:	jg     0x416ea5
  416ef4:	jmp    0x6fb8cae1
  416ef9:	jmp    0x4aef7c96
  416efe:	pop    ebx
  416eff:	xchg   DWORD PTR [ecx+0x363aa70f],esp
  416f05:	pop    edi
  416f06:	sbb    eax,0x72d082bd
  416f0b:	and    DWORD PTR [edx+0xe],edi
  416f0e:	ds ins BYTE PTR es:[edi],dx
  416f10:	aam    0x4e
  416f12:	add    dl,BYTE PTR [ebx-0x48]
  416f15:	mov    ch,0x59
  416f17:	ffreep st(2)
  416f19:	ret    0xdb31
  416f1c:	dec    ecx
  416f1d:	mov    ah,0x57
  416f1f:	fimul  DWORD PTR [eax]
  416f21:	fstp   st(0)
  416f23:	mov    eax,ds:0x927e949f
  416f28:	pop    edx
  416f29:	mov    ch,0x92
  416f2b:	pusha  
  416f2c:	xchg   al,bl
  416f2e:	mov    eax,0xab5a1a2c
  416f33:	or     eax,esp
  416f35:	xor    ah,dh
  416f37:	jmp    0x416f1d
  416f39:	loop   0x416f57
  416f3b:	add    edx,DWORD PTR [ebp+0x7b]
  416f3e:	adc    DWORD PTR [esi],esi
  416f40:	call   0xd19d:0x36f78965
  416f47:	ja     0x416f71
  416f49:	mov    eax,ds:0xec121192
  416f4e:	cmp    ebx,DWORD PTR [ebx+0x40b338bb]
  416f54:	(bad)  
  416f55:	jmp    0xbdd9:0xbf1bbf87
  416f5c:	sub    bl,BYTE PTR [edi+ebp*1]
  416f5f:	cmp    BYTE PTR [ecx-0x68],bh
  416f62:	and    bh,dl
  416f64:	hlt    
  416f65:	jmp    0x416ef9
  416f67:	lahf   
  416f68:	js     0x416f20
  416f6a:	sbb    dh,BYTE PTR [edx]
  416f6c:	mov    cl,0x9e
  416f6e:	sub    al,0xdf
  416f70:	xor    BYTE PTR [edx],0x20
  416f73:	pop    esi
  416f74:	inc    eax
  416f75:	(bad)
  416f78:	sbb    BYTE PTR [esi-0x74c98b54],ch
  416f7e:	mov    BYTE PTR [edi-0x2937b854],cl
  416f84:	mov    esi,0x2e46db6
  416f89:	mov    edi,0x2f2a815
  416f8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f8f:	xchg   ebp,eax
  416f90:	ret    0x6f26
  416f93:	xchg   esp,eax
  416f94:	or     bh,BYTE PTR ds:0xa15f9f43
  416f9a:	retf   
  416f9b:	add    DWORD PTR [eax-0x2c],edi
  416f9e:	or     BYTE PTR [ecx-0x3422c333],ch
  416fa4:	bound  edx,QWORD PTR [edx]
  416fa6:	or     eax,0xa681a4f3
  416fab:	mov    esi,0x765b6430
  416fb0:	iret   
  416fb1:	mov    edi,0x55bad5f5
  416fb6:	repz cld 
  416fb8:	(bad)  
  416fb9:	and    DWORD PTR [esp+eax*2+0x3d041307],esi
  416fc0:	adc    edi,ebx
  416fc2:	jp     0x416f4d
  416fc4:	lea    ebp,[ebx-0x36be6428]
  416fca:	pop    ebp
  416fcb:	sahf   
  416fcc:	mov    cl,0xe6
  416fce:	fsubr  DWORD PTR [esi-0x5d]
  416fd1:	and    ebp,esi
  416fd3:	sbb    dl,dh
  416fd5:	ficom  WORD PTR [ebx]
  416fd7:	inc    esp
  416fd8:	push   ebp
  416fd9:	mov    DWORD PTR [eax+0x1],esi
  416fdc:	dec    eax
  416fdd:	jno    0x416f8e
  416fdf:	ja     0x416fac
  416fe1:	jns    0x417042
  416fe3:	xor    ebp,DWORD PTR [edi+0x4039897e]
  416fe9:	push   esp
  416fea:	retf   
  416feb:	test   BYTE PTR [ebp-0x29],bl
  416fee:	mov    dh,BYTE PTR [ecx-0x71]
  416ff1:	jp     0x417025
  416ff3:	gs push 0x47
  416ff6:	push   0xcdfed23
  416ffb:	pop    esp
  416ffc:	jmp    0xb62f2e72
  417001:	mov    BYTE PTR [edi+edi*4+0x1dba2617],cl
  417008:	mov    es,WORD PTR [ebx]
  41700a:	mov    gs,WORD PTR [esi-0x664cdcf6]
  417010:	aas    
  417011:	shr    BYTE PTR [edi+eiz*4],cl
  417014:	pop    ecx
  417015:	dec    ebp
  417016:	dec    esp
  417017:	cmc    
  417018:	pushf  
  417019:	cli    
  41701a:	aam    0xe6
  41701c:	adc    eax,0x83327219
  417021:	mov    ebx,0xc6268b7f
  417026:	jecxz  0x417092
  417028:	shr    BYTE PTR [edx-0x58feba46],1
  41702e:	cmc    
  41702f:	and    BYTE PTR [edx-0x32cb4709],0x2f
  417036:	sbb    DWORD PTR [ebx+0x2],esp
  417039:	addr16 and al,0xed
  41703c:	out    0xd0,eax
  41703e:	jae    0x416ff5
  417040:	popa   
  417041:	shr    DWORD PTR [ecx-0x3a],cl
  417044:	xor    eax,ebx
  417046:	retf   0xf0f8
  417049:	hlt    
  41704a:	mov    ds:0x82a303ca,eax
  41704f:	inc    ecx
  417050:	bound  edi,QWORD PTR [ebx-0x146f4221]
  417056:	xor    ah,ch
  417058:	xor    eax,0x5a2fae3f
  41705d:	xchg   esi,eax
  41705e:	mov    dh,0xd
  417060:	jle    0x417003
  417062:	jmp    0xbd075c39
  417067:	mov    ds,WORD PTR [edi]
  417069:	adc    eax,0xc405d767
  41706e:	pop    ds
  41706f:	retf   
  417070:	(bad)  
  417071:	and    al,0xad
  417073:	add    DWORD PTR [ecx+0x32],esp
  417076:	daa    
  417077:	mov    dh,0x19
  417079:	int3   
  41707a:	pushf  
  41707b:	femms  
  41707d:	lds    esi,FWORD PTR [edx-0x44]
  417080:	fidiv  WORD PTR [ebx]
  417082:	mov    al,ds:0xc950871f
  417087:	mov    ch,0xd2
  417089:	push   ds
  41708a:	nop
  41708b:	push   edi
  41708c:	adc    BYTE PTR [edx],0x20
  41708f:	pop    esp
  417090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417091:	adc    al,0x9b
  417093:	fidiv  WORD PTR [edx+0x13]
  417096:	dec    ebx
  417097:	push   0xffffff80
  417099:	in     eax,dx
  41709a:	xchg   ebx,eax
  41709b:	lods   eax,DWORD PTR ds:[esi]
  41709c:	fst    QWORD PTR [edi-0x62005ea7]
  4170a2:	sbb    al,0x4a
  4170a4:	mov    cs,WORD PTR fs:[esi]
  4170a7:	aam    0x82
  4170a9:	and    bl,bh
  4170ab:	sbb    BYTE PTR [ebp-0x49],bl
  4170ae:	aam    0x3b
  4170b0:	dec    ecx
  4170b1:	es push esp
  4170b3:	ror    BYTE PTR [ebx],0x73
  4170b6:	xchg   DWORD PTR [eax-0x9],ecx
  4170b9:	cmc    
  4170ba:	arpl   WORD PTR [eax-0x3641b0a5],bp
  4170c0:	pop    ecx
  4170c1:	aaa    
  4170c2:	mov    BYTE PTR [ebx+ebp*1-0x3d],dh
  4170c6:	pusha  
  4170c7:	and    DWORD PTR [eax-0x55291a60],ebx
  4170cd:	push   es
  4170ce:	(bad)  
  4170cf:	cmp    eax,0x9dafaaa6
  4170d4:	es sub al,0xc6
  4170d7:	aam    0x72
  4170d9:	sbb    dh,cl
  4170db:	hlt    
  4170dc:	arpl   WORD PTR [edi+ebp*4+0x78],ax
  4170e0:	cmc    
  4170e1:	xor    al,BYTE PTR [ecx+0x7071eca0]
  4170e7:	pop    edx
  4170e8:	xchg   esp,eax
  4170e9:	ja     0x417107
  4170eb:	cs xor cl,ah
  4170ee:	mov    ebx,0xaa1f820f
  4170f3:	sbb    cl,BYTE PTR [ebp+0x46]
  4170f6:	pop    eax
  4170f7:	outs   dx,BYTE PTR ds:[esi]
  4170f8:	sub    cl,bh
  4170fa:	pop    esp
  4170fb:	push   esi
  4170fc:	jo     0x4170bf
  4170fe:	loopne 0x41710e
  417100:	in     eax,dx
  417101:	(bad)  
  417102:	retf   0xcfa0
  417105:	mov    WORD PTR [edi+0x389681b7],?
  41710b:	ret    0x87b9
  41710e:	mov    esp,0xdda6f9c6
  417113:	pop    ss
  417114:	jge    0x41709a
  417116:	scas   eax,DWORD PTR es:[edi]
  417117:	adc    BYTE PTR [ebx-0x46],0xd5
  41711b:	jecxz  0x417107
  41711d:	daa    
  41711e:	cld    
  41711f:	rcl    ebx,0xe5
  417122:	inc    ebx
  417123:	xor    BYTE PTR [edx+edx*8],0x86
  417127:	fisttp DWORD PTR [ecx]
  417129:	inc    ecx
  41712a:	shl    BYTE PTR [ebp-0x2041c046],cl
  417130:	fsubp  st(2),st
  417132:	sub    eax,DWORD PTR [ecx+edx*8-0xff9f884]
  417139:	ret    0x8877
  41713c:	cmp    al,0x53
  41713e:	aas    
  41713f:	or     DWORD PTR [edi],0xffffffe6
  417142:	xchg   ecx,eax
  417143:	inc    BYTE PTR [ebx]
  417145:	sti    
  417146:	popa   
  417147:	add    DWORD PTR [ecx-0x51],ebx
  41714a:	cmp    ecx,DWORD PTR [eax]
  41714c:	repnz xchg esp,eax
  41714e:	xchg   ecx,eax
  41714f:	ror    BYTE PTR [edx+0x389675c5],0x5a
  417156:	shl    dh,1
  417158:	dec    esi
  417159:	les    edx,FWORD PTR [edi]
  41715b:	push   ecx
  41715c:	adc    ah,BYTE PTR [ecx]
  41715e:	or     ah,BYTE PTR [edi]
  417160:	icebp  
  417161:	xchg   ebx,eax
  417162:	jns    0x4171cf
  417164:	shl    BYTE PTR ds:0x80ca3c14,0x9d
  41716b:	scas   eax,DWORD PTR es:[edi]
  41716c:	jmp    0xce93b42f
  417171:	mov    al,ds:0x131a915c
  417176:	mov    BYTE PTR [ebx+ebp*8-0x6a],al
  41717a:	bound  edi,QWORD PTR [esi+ebx*1-0x21]
  41717e:	jg     0x41714a
  417180:	ins    DWORD PTR es:[edi],dx
  417181:	adc    DWORD PTR [eax-0x48],ecx
  417184:	jbe    0x41713c
  417186:	xchg   ecx,eax
  417187:	shl    ebx,1
  417189:	add    ch,BYTE PTR [ebp-0x42cdf9dc]
  41718f:	pop    ebx
  417190:	mov    bl,0xe5
  417192:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417193:	leave  
  417194:	ficomp DWORD PTR [edx+0x57d1b7e3]
  41719a:	int3   
  41719b:	dec    ecx
  41719c:	xchg   edx,eax
  41719d:	popa   
  41719e:	mov    dl,0x61
  4171a0:	jb     0x4171cf
  4171a2:	fcom   QWORD PTR ds:0x86ef907c
  4171a8:	dec    esp
  4171a9:	mov    al,ds:0x69d3d225
  4171ae:	cdq    
  4171af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171b0:	adc    BYTE PTR [ecx],cl
  4171b2:	sbb    eax,0x849f9067
  4171b7:	and    eax,0xd546b034
  4171bc:	pusha  
  4171bd:	or     BYTE PTR [ecx-0x11c6c1a5],0x39
  4171c4:	js     0x417162
  4171c6:	das    
  4171c7:	fldenv fs:[esi-0x44]
  4171cb:	jne    0x417172
  4171cd:	shr    DWORD PTR ds:0x811b0ba1,0x92
  4171d4:	dec    esp
  4171d5:	cs ret 0xb9b9
  4171d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171da:	jge    0x4171c2
  4171dc:	push   edi
  4171dd:	jno    0x4171a1
  4171df:	push   es
  4171e0:	xchg   ebp,eax
  4171e1:	dec    DWORD PTR [ebx]
  4171e3:	add    eax,0xbee50f69
  4171e8:	push   ebx
  4171e9:	inc    esp
  4171ea:	sahf   
  4171eb:	out    dx,eax
  4171ec:	pop    esi
  4171ed:	test   BYTE PTR [edi+ebx*2-0x19],cl
  4171f1:	test   al,0x53
  4171f3:	int3   
  4171f4:	push   ds
  4171f5:	jge    0x4171d6
  4171f7:	scas   eax,DWORD PTR es:[edi]
  4171f8:	jne    0x417249
  4171fa:	scas   eax,DWORD PTR es:[edi]
  4171fb:	xchg   BYTE PTR [esi-0x1c],ch
  4171fe:	fiadd  DWORD PTR [ecx+edx*1+0x3c972a09]
  417205:	pop    ecx
  417206:	jg     0x417268
  417208:	aad    0x52
  41720a:	jecxz  0x417286
  41720c:	push   edi
  41720d:	or     eax,0x3b2fdc1f
  417212:	repz mov dh,0xe4
  417215:	imul   edx,ebx,0x544f269a
  41721b:	into   
  41721c:	push   ebx
  41721d:	xor    DWORD PTR [edx+edx*4],esi
  417220:	xor    al,0x17
  417222:	sbb    BYTE PTR [edx],bh
  417224:	lods   al,BYTE PTR ds:[esi]
  417225:	sub    eax,ebx
  417227:	jo     0x4171be
  417229:	sbb    bh,BYTE PTR [esp+ebp*4+0x7b]
  41722d:	dec    ax
  41722f:	(bad)  
  417230:	inc    eax
  417231:	xchg   esi,esi
  417233:	bnd jg 0x41726f
  417236:	adc    eax,0xe7350c54
  41723b:	retf   
  41723c:	je     0x417295
  41723e:	pop    esp
  41723f:	sti    
  417240:	push   0x433e7c88
  417245:	test   eax,0x764f3501
  41724a:	rcr    BYTE PTR [esi-0x66e59c9],cl
  417250:	das    
  417251:	push   ds
  417252:	cwde   
  417253:	shl    BYTE PTR [ecx+eax*2-0x4b],1
  417257:	mov    ebp,edi
  417259:	ja     0x417260
  41725b:	add    eax,0x9591f084
  417260:	adc    eax,0x68df83bd
  417265:	cmp    eax,0x49a1016b
  41726a:	js     0x41721a
  41726c:	fwait
  41726d:	loopne 0x41728c
  41726f:	cmp    ebp,DWORD PTR [eax+ecx*8+0x30b3d557]
  417276:	(bad)  
  417277:	(bad)  
  417278:	fidiv  WORD PTR [esi]
  41727a:	pushf  
  41727b:	cdq    
  41727c:	stos   DWORD PTR es:[edi],eax
  41727d:	jo     0x417213
  41727f:	sub    ebp,edi
  417281:	pop    ss
  417282:	push   eax
  417283:	fimul  WORD PTR [ebx]
  417285:	or     BYTE PTR [ebx+ecx*1],cl
  417288:	(bad)  
  41728a:	jg     0x4172ae
  41728c:	out    dx,eax
  41728d:	xchg   esp,eax
  41728e:	push   0xda79c7de
  417293:	xor    BYTE PTR [ebx],bl
  417295:	mov    esi,ebp
  417297:	aam    0x3c
  417299:	cld    
  41729a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41729b:	out    dx,al
  41729c:	adc    DWORD PTR [ecx+eax*8-0x8c0958],edx
  4172a3:	test   BYTE PTR [ebx+0x1],0x36
  4172a7:	out    0x7,ax
  4172aa:	fcom   QWORD PTR [eax-0xe]
  4172ad:	push   DWORD PTR [ebp+0x508ce15a]
  4172b3:	pop    esi
  4172b4:	dec    esi
  4172b5:	out    dx,eax
  4172b6:	out    0x26,al
  4172b8:	push   ebx
  4172b9:	in     al,dx
  4172ba:	push   0xd7b90885
  4172bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172c0:	pusha  
  4172c1:	lds    ecx,FWORD PTR [edi+0x24]
  4172c4:	outs   dx,DWORD PTR ds:[esi]
  4172c5:	fs pushf 
  4172c7:	mov    esp,0xc9a77f2f
  4172cc:	ror    esi,1
  4172ce:	and    ch,al
  4172d0:	test   al,0x11
  4172d2:	in     al,dx
  4172d3:	in     al,dx
  4172d4:	add    dh,BYTE PTR [ecx+0x78]
  4172d7:	stos   BYTE PTR es:[edi],al
  4172d8:	cmp    al,0xc9
  4172da:	mov    ch,0xc8
  4172dc:	jb     0x41727c
  4172de:	int3   
  4172df:	jg     0x417311
  4172e1:	ret    
  4172e2:	pop    edi
  4172e3:	mov    eax,ds:0xabd7c28a
  4172e8:	xor    BYTE PTR [esi-0x48],bl
  4172eb:	es popf 
  4172ed:	loope  0x4172e7
  4172ef:	mov    eax,ds:0x52dd7012
  4172f4:	xchg   esi,eax
  4172f5:	dec    eax
  4172f6:	cwde   
  4172f7:	les    esi,FWORD PTR [edx-0x55756cb8]
  4172fd:	xchg   ecx,eax
  4172fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172ff:	rcr    DWORD PTR [esi+ebp*1+0xc],1
  417303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417304:	add    dh,BYTE PTR [ebx+0x5a0c4a3e]
  41730a:	sbb    ch,BYTE PTR [ecx+ebp*8-0x80]
  41730e:	inc    edi
  41730f:	mov    eax,ds:0x8599d0bf
  417314:	ins    DWORD PTR es:[edi],dx
  417315:	popf   
  417316:	sar    DWORD PTR [esp+eax*1+0x7d],0x6b
  41731b:	repz repnz xchg edx,eax
  41731e:	xchg   edi,eax
  41731f:	in     al,0x45
  417321:	push   0xfffffff7
  417323:	loope  0x417375
  417325:	popf   
  417326:	dec    eax
  417327:	loop   0x4172ba
  417329:	js     0x4172bd
  41732b:	adc    eax,0x706d335e
  417330:	mov    al,ds:0xc0aea8b7
  417335:	push   ecx
  417336:	in     al,0x8
  417338:	retf   
  417339:	data16 (bad) 
  41733b:	mov    ds:0xbca5e2bf,al
  417340:	out    dx,eax
  417341:	arpl   WORD PTR [eax+0x6cbd93f2],sp
  417347:	pop    eax
  417348:	jl     0x4173a0
  41734a:	mov    ds:0x1e5e2827,al
  41734f:	cmp    al,0x5a
  417351:	popf   
  417352:	mov    edi,0x1b588244
  417357:	sub    al,0xb2
  417359:	dec    ebx
  41735a:	xor    al,0x7f
  41735c:	add    al,0x4b
  41735e:	lea    esi,[ecx]
  417360:	cmp    al,0xd5
  417362:	fld    TBYTE PTR [edi+0x2d]
  417365:	xor    al,0x20
  417367:	shr    ah,1
  417369:	xchg   dh,bh
  41736b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41736c:	out    0x25,al
  41736e:	out    0x3a,al
  417370:	nop
  417371:	lea    ebx,[eax]
  417373:	rcr    BYTE PTR [ebx+0x6c],0x76
  417377:	(bad)
  41737a:	cmp    eax,0x326e7afc
  41737f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417380:	sbb    BYTE PTR [edi+edi*1-0x63],ah
  417384:	xchg   ecx,eax
  417385:	jno    0x4173cf
  417387:	nop
  417388:	cmp    eax,0x9b7b8740
  41738d:	jle    0x41731c
  41738f:	fs dec edx
  417391:	push   eax
  417392:	rcr    DWORD PTR [edi],1
  417394:	dec    ebx
  417395:	mov    DWORD PTR [eax-0x3ad20024],ebx
  41739b:	fwait
  41739c:	call   0x4c3dd209
  4173a1:	mov    ah,0xee
  4173a3:	ss pop esp
  4173a5:	and    cl,bh
  4173a7:	ins    BYTE PTR es:[edi],dx
  4173a8:	mov    BYTE PTR [edx-0x5b6e62ac],ch
  4173ae:	(bad)  
  4173af:	adc    cl,BYTE PTR [ecx+esi*8-0x28]
  4173b3:	stos   BYTE PTR es:[edi],al
  4173b4:	dec    edx
  4173b5:	mov    al,ds:0x8932b560
  4173ba:	inc    esp
  4173bb:	and    bh,al
  4173bd:	xor    DWORD PTR [esi+0xbfeb737],edx
  4173c3:	sti    
  4173c4:	mov    al,ds:0x7bdee2ef
  4173c9:	add    BYTE PTR [si],ah
  4173cc:	xor    eax,0x81af63db
  4173d1:	adc    bl,dh
  4173d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173d4:	mov    ebp,0x69a4014b
  4173d9:	cmovg  ebx,ebp
  4173dc:	and    al,0x7f
  4173de:	loopne 0x417374
  4173e0:	inc    eax
  4173e1:	aaa    
  4173e2:	mov    eax,ds:0x9b26e84f
  4173e7:	shl    DWORD PTR [eax+0x6f],1
  4173ea:	mov    edi,0xafcaf9f9
  4173ef:	pop    ecx
  4173f0:	pop    ebp
  4173f2:	cmp    al,0x82
  4173f4:	mov    ds:0x8f151b15,al
  4173f9:	fwait
  4173fa:	xor    esp,DWORD PTR [eax]
  4173fc:	leave  
  4173fd:	dec    edi
  4173fe:	mov    dl,0xc6
  417400:	push   edx
  417401:	xor    dh,BYTE PTR [ecx-0x19]
  417404:	cwde   
  417405:	cmp    ebx,DWORD PTR [eax+0x35]
  417408:	jp     0x4173ae
  41740a:	daa    
  41740b:	dec    esi
  41740c:	mov    dh,0x85
  41740e:	fmul   QWORD PTR [esi+0xfa10062]
  417414:	cmp    al,BYTE PTR [ebp-0x39]
  417417:	sbb    dl,BYTE PTR [edi-0x34]
  41741a:	and    al,0xc4
  41741c:	test   eax,0x3354937c
  417421:	les    esi,FWORD PTR [esi]
  417423:	push   0x59c0fcb1
  417428:	imul   ebp,DWORD PTR [ebp-0x5d092709],0x837c57d8
  417432:	pushf  
  417433:	(bad)  
  417434:	pop    ds
  417435:	jle    0x4173ee
  417437:	inc    ebx
  417438:	fwait
  417439:	popa   
  41743a:	adc    al,0xf1
  41743c:	adc    al,0x8a
  41743e:	and    ah,ah
  417440:	aaa    
  417441:	push   ss
  417442:	aam    0xb3
  417444:	in     eax,0x63
  417446:	sbb    al,0xc2
  417448:	dec    edi
  417449:	and    al,0xc0
  41744b:	jle    0x417493
  41744d:	xchg   esp,eax
  41744e:	lods   al,BYTE PTR ds:[esi]
  41744f:	mov    edx,0x9864c2e9
  417454:	push   cs
  417455:	cmp    eax,0xbc0c8ba9
  41745a:	call   0x5e278faf
  41745f:	(bad)  
  417460:	cmc    
  417461:	sahf   
  417462:	inc    ebx
  417463:	mov    dl,0xd4
  417465:	xchg   esi,eax
  417466:	jb     0x41744a
  417468:	xor    al,0xd1
  41746a:	sbb    eax,0xbeed144d
  41746f:	adc    BYTE PTR [esi+0x1ffcc9fb],cl
  417475:	mov    ah,0xfd
  417477:	sub    DWORD PTR [eax+0x28],0x14
  41747b:	or     ch,dh
  41747d:	fs jmp 0xa622e4f6
  417483:	or     ebp,DWORD PTR [edi+edx*8-0x1a]
  417487:	in     eax,dx
  417488:	call   0xe1098be5
  41748d:	jmp    0xacbe3951
  417492:	adc    DWORD PTR [edi+0x4e1b5c65],ecx
  417498:	(bad)  
  417499:	cmp    cl,BYTE PTR [esi+ebp*1]
  41749c:	prefetch BYTE PTR [ebx]
  41749f:	cli    
  4174a0:	mov    fs,esi
  4174a2:	mov    ?,WORD PTR [edi-0x6c418faf]
  4174a8:	jecxz  0x4174dc
  4174aa:	inc    ebp
  4174ab:	mov    eax,0xc01b7545
  4174b0:	sub    BYTE PTR [ecx+0x14bbc4a0],ah
  4174b6:	xchg   esp,eax
  4174b7:	daa    
  4174b8:	dec    edx
  4174b9:	in     eax,dx
  4174ba:	jbe    0x4174a7
  4174bc:	and    DWORD PTR [eax+ebp*2-0x5c],eax
  4174c0:	jmp    0x18b8965f
  4174c5:	data16 je 0x417514
  4174c8:	push   esp
  4174c9:	mov    dh,0xce
  4174cb:	add    DWORD PTR [esi+0x24551f18],eax
  4174d1:	aam    0x60
  4174d3:	loop   0x417538
  4174d5:	call   0x56f406c4
  4174da:	into   
  4174db:	xor    al,0x8a
  4174dd:	or     bh,dh
  4174df:	in     eax,dx
  4174e0:	aam    0x5b
  4174e2:	jp     0x4174cc
  4174e4:	das    
  4174e5:	adc    eax,0x8ea95007
  4174ea:	ret    0x284d
  4174ed:	sbb    BYTE PTR [eax],cl
  4174ef:	xor    eax,0x67f60a9b
  4174f4:	pop    DWORD PTR [ebp-0x65]
  4174f7:	lods   al,BYTE PTR ds:[esi]
  4174f8:	adc    al,0xf5
  4174fa:	mov    cl,0x8e
  4174fc:	dec    eax
  4174fd:	int3   
  4174fe:	pop    ss
  4174ff:	jo     0x4174e4
  417501:	fidivr DWORD PTR [edx+eiz*8]
  417504:	add    ah,bl
  417506:	xor    eax,0xa224a577
  41750b:	bound  ebp,QWORD PTR [ebp+esi*8+0x183fb742]
  417512:	or     BYTE PTR [edi-0x6c9ac70a],dh
  417518:	xchg   ebx,eax
  417519:	push   cs
  41751a:	cld    
  41751b:	add    eax,0xb558e43b
  417520:	pop    ebx
  417521:	scas   al,BYTE PTR es:[edi]
  417522:	fistp  DWORD PTR [eax+0x7e5c73e7]
  417528:	sbb    BYTE PTR [edi+0x2a211481],ch
  41752e:	and    BYTE PTR [eax],al
  417530:	pop    ebp
  417531:	addr16 inc esp
  417533:	push   cs
  417534:	and    dl,dh
  417536:	add    BYTE PTR [eax-0x43daa864],0xcc
  41753d:	xchg   bh,al
  41753f:	(bad)  
  417540:	mul    BYTE PTR [esi]
  417542:	dec    eax
  417543:	es push cs
  417545:	cmc    
  417546:	fs retf 
  417548:	pop    ss
  417549:	cmp    al,0x81
  41754b:	adc    al,0xd9
  41754d:	idiv   dl
  41754f:	cs in  al,0xc4
  417552:	mov    dh,0xcf
  417554:	jmp    0xf7b76f4a
  417559:	shl    DWORD PTR [ecx-0x74],0x75
  41755d:	push   ebp
  41755e:	xchg   ebp,eax
  41755f:	sub    al,BYTE PTR [ecx+0x7ef829fe]
  417565:	(bad)  
  417566:	jnp    0x4174fc
  417568:	into   
  417569:	loope  0x4174ff
  41756b:	xchg   ebp,eax
  41756c:	dec    DWORD PTR [esi]
  41756e:	and    eax,0xe575574b
  417573:	cmp    al,BYTE PTR [ebx+0x462b131c]
  417579:	xchg   ebx,eax
  41757a:	cmp    al,0x1c
  41757c:	setne  BYTE PTR [eax-0x39]
  417580:	cmp    eax,0x586e22b5
  417585:	call   0xca71:0x4655f190
  41758c:	mov    cl,0xbf
  41758e:	into   
  41758f:	push   ecx
  417590:	shl    BYTE PTR [edx],1
  417592:	dec    ebp
  417593:	mov    ds:0x4b8504a2,eax
  417598:	jo     0x4175b2
  41759a:	aas    
  41759b:	int    0x93
  41759d:	push   esp
  41759e:	mov    bh,0xa9
  4175a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175a1:	mov    ecx,0x68b6381b
  4175a6:	(bad)  
  4175a7:	lods   al,BYTE PTR ds:[esi]
  4175a8:	out    0xd4,eax
  4175aa:	mov    ds:0x6b0343ae,eax
  4175af:	pop    eax
  4175b0:	dec    eax
  4175b1:	cld    
  4175b2:	sbb    ah,BYTE PTR [edx+0x7b]
  4175b5:	adc    al,0xd1
  4175b7:	(bad)  
  4175b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175b9:	sti    
  4175ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175bb:	fisttp WORD PTR [edi]
  4175bd:	mov    ecx,0x2fe3ec88
  4175c2:	jp     0x4175c0
  4175c4:	dec    ebp
  4175c5:	retf   0x87ba
  4175c8:	jns    0x417630
  4175ca:	adc    BYTE PTR [edi+eax*2+0x7d53b5cc],cl
  4175d1:	cdq    
  4175d2:	push   esp
  4175d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175d4:	sub    eax,0x7c47e1fe
  4175d9:	or     ch,dl
  4175db:	fsub   QWORD PTR [ebx]
  4175dd:	cld    
  4175de:	ja     0x417612
  4175e0:	inc    ecx
  4175e1:	sar    BYTE PTR [ebp-0x63d4f6ac],0xa9
  4175e8:	push   es
  4175e9:	out    dx,al
  4175ea:	sbb    al,0xd8
  4175ec:	scas   al,BYTE PTR es:[edi]
  4175ed:	pop    ecx
  4175ee:	icebp  
  4175ef:	pop    es
  4175f0:	add    ebx,edi
  4175f2:	(bad)  
  4175f4:	(bad)  
  4175f5:	fidiv  DWORD PTR [edx+0x6d]
  4175f8:	aaa    
  4175f9:	ss cdq 
  4175fb:	cmp    BYTE PTR ds:0xb69aa916,ch
  417601:	loop   0x41766a
  417603:	lock mov esp,esp
  417606:	or     al,ch
  417608:	mov    dl,dl
  41760a:	je     0x417597
  41760c:	pop    edi
  41760d:	cmp    DWORD PTR [edx],esp
  41760f:	lahf   
  417610:	dec    edx
  417611:	sbb    BYTE PTR ds:0x5d1e21bb,ah
  417617:	(bad)  
  417618:	loop   0x41768e
  41761a:	pop    edi
  41761b:	movntq QWORD PTR [esp+esi*2-0x38f91040],mm2
  417623:	and    al,0x5
  417625:	mov    ds:0x9056b642,al
  41762a:	adc    eax,ebx
  41762c:	xor    ah,BYTE PTR [ecx]
  41762e:	pop    edx
  41762f:	cmp    ah,ah
  417631:	iret   
  417632:	mov    ebp,0xe560cdca
  417637:	hlt    
  417638:	jp     0x41765e
  41763a:	call   0x1e45:0x60319696
  417641:	mov    dh,0x3e
  417643:	(bad)  
  417645:	and    ebp,DWORD PTR [esi-0x727e9bcb]
  41764b:	jne    0x41769c
  41764d:	cli    
  41764e:	add    DWORD PTR [ebp+0x67114326],esp
  417654:	push   edi
  417655:	call   0x4775:0x54527ebb
  41765c:	loopne 0x417650
  41765e:	push   esp
  41765f:	je     0x41767a
  417661:	xor    eax,0x1e244e52
  417666:	ins    DWORD PTR es:[edi],dx
  417667:	mov    dl,0x5e
  417669:	(bad)  
  41766a:	pop    edx
  41766b:	outs   dx,BYTE PTR ds:[esi]
  41766c:	jle    0x4175fd
  41766e:	mov    cl,0x34
  417670:	ficomp WORD PTR [edi+0x75c43277]
  417676:	jg     0x417693
  417678:	xor    ebp,edx
  41767a:	aas    
  41767b:	je     0x4176dd
  41767d:	std    
  41767e:	sub    DWORD PTR [ebx+0x54],eax
  417681:	daa    
  417682:	pop    edi
  417683:	imul   ebp,edx,0xffffff91
  417686:	ds inc ebx
  417688:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417689:	jne    0x4176cc
  41768b:	pushf  
  41768c:	mov    ds:0x470575f3,al
  417691:	bound  esp,QWORD PTR [ecx+0x1744a963]
  417697:	sub    eax,0x3ab4d40c
  41769c:	outs   dx,BYTE PTR ds:[esi]
  41769d:	sub    DWORD PTR [ecx+0x76],esp
  4176a0:	push   cs
  4176a1:	fimul  WORD PTR [ebp+0x5807eba5]
  4176a7:	repz and DWORD PTR [ebx],ebx
  4176aa:	cmp    DWORD PTR [ebx-0x1],esp
  4176ad:	sar    ah,0xa
  4176b0:	imul   esi,DWORD PTR [edi],0x7
  4176b3:	adc    DWORD PTR [edx+0x785905a1],0x11288fb9
  4176bd:	lods   al,BYTE PTR ds:[esi]
  4176be:	repz and DWORD PTR ds:0x45c5c120,edx
  4176c5:	push   0xffffffaa
  4176c7:	xchg   DWORD PTR [edi],ecx
  4176c9:	(bad)  
  4176ca:	sbb    BYTE PTR [esi+0x30],bh
  4176cd:	(bad)  [edi+0x7b]
  4176d0:	xor    al,BYTE PTR [ebx+0x7bc084f5]
  4176d6:	fistp  QWORD PTR [eax+ebx*2-0x18c767e6]
  4176dd:	mov    DWORD PTR [ebp+0x68],edx
  4176e0:	sbb    edi,DWORD PTR [esi+0x52313db2]
  4176e6:	cmp    BYTE PTR [eax+ecx*1+0x2f],dl
  4176ea:	or     al,0xa4
  4176ec:	dec    edi
  4176ed:	sar    DWORD PTR [edi+0x53],cl
  4176f0:	ins    BYTE PTR es:[edi],dx
  4176f1:	jp     0x4176d5
  4176f3:	mov    esp,0x333b825a
  4176f8:	xchg   DWORD PTR [ecx],ebp
  4176fa:	call   DWORD PTR [esi+0x77]
  4176fd:	xor    BYTE PTR [edi+edi*2+0x5ae7fef6],al
  417704:	jge    0x417735
  417706:	push   0x73
  417708:	(bad)  
  417709:	or     eax,0x86426e18
  41770e:	dec    ecx
  41770f:	pop    ds
  417710:	dec    edx
  417711:	push   ds
  417712:	pop    ecx
  417713:	div    BYTE PTR [eax]
  417715:	xchg   ebp,eax
  417716:	cmp    al,0x63
  417718:	mov    al,ds:0x32a8b49d
  41771d:	sub    eax,0x34cf539a
  417722:	xchg   ebx,eax
  417723:	cmp    ebx,DWORD PTR ds:0x5f7c559a
  417729:	adc    esi,DWORD PTR [esi+0x1ff1fb2b]
  41772f:	loop   0x41772a
  417731:	outs   dx,DWORD PTR ds:[esi]
  417732:	lar    ebx,cx
  417735:	jmp    0x227c5734
  41773a:	aad    0x50
  41773c:	out    0x6b,eax
  41773e:	lds    esi,FWORD PTR [ebx-0x70]
  417741:	mov    al,0xcc
  417743:	fsub   DWORD PTR [edx-0x40]
  417746:	leave  
  417747:	fistp  QWORD PTR [edx-0x70]
  41774a:	enter  0xa09f,0x54
  41774e:	fld    DWORD PTR [edi-0x6b7a2024]
  417754:	and    al,BYTE PTR [edi-0x28]
  417757:	mov    DWORD PTR [ebp+0x79998d2a],esi
  41775d:	jge    0x417708
  41775f:	mov    edi,0xce09734b
  417764:	push   ebp
  417765:	(bad)  
  417766:	and    cl,dh
  417768:	adc    dl,BYTE PTR [ebp-0x5e]
  41776b:	cli    
  41776c:	scas   eax,DWORD PTR es:[edi]
  41776d:	push   eax
  41776e:	pop    edi
  41776f:	dec    edx
  417770:	(bad)  
  417772:	jne    0x417796
  417774:	or     BYTE PTR [edx],cl
  417776:	movzx  edi,WORD PTR [ebx+0x52d9e523]
  41777d:	jl     0x417716
  41777f:	loopne 0x417780
  417781:	scas   eax,DWORD PTR es:[edi]
  417782:	add    cl,BYTE PTR [ebx-0x59]
  417785:	or     cl,BYTE PTR [edx-0x6d]
  417788:	cmc    
  417789:	loopne 0x41776f
  41778b:	xbegin 0x61fc1883
  417791:	ffree  st(6)
  417793:	ret    0xf691
  417796:	dec    ecx
  417797:	aad    0x2b
  417799:	mov    edi,0xc2a5b5a
  41779e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41779f:	jo     0x41774a
  4177a1:	mov    al,0x3c
  4177a3:	and    BYTE PTR [eax],dl
  4177a5:	loop   0x41774e
  4177a7:	push   ebp
  4177a8:	sub    DWORD PTR [esi],esp
  4177aa:	rcl    ebx,0xb6
  4177ad:	mov    bl,0x7
  4177af:	cmp    eax,esi
  4177b1:	inc    esi
  4177b2:	jbe    0x417826
  4177b4:	call   0x1efcb85f
  4177b9:	(bad)  
  4177ba:	ds in  al,dx
  4177bc:	aas    
  4177bd:	ret    0x83d
  4177c0:	dec    esp
  4177c1:	popa   
  4177c2:	cmp    BYTE PTR [edx+edx*4+0x7e817633],bl
  4177c9:	pop    ss
  4177ca:	mov    ch,BYTE PTR [esi]
  4177cc:	jp     0x4177d7
  4177ce:	hlt    
  4177cf:	in     al,0x69
  4177d1:	fnstenv fs:[esi+0xf538ec0]
  4177d8:	lods   eax,DWORD PTR ds:[esi]
  4177d9:	out    0xfb,eax
  4177db:	cli    
  4177dc:	push   cs
  4177dd:	loop   0x4177ba
  4177df:	cmp    cl,BYTE PTR [edx+0x73]
  4177e2:	ins    DWORD PTR es:[edi],dx
  4177e3:	repnz cmp al,0x6
  4177e6:	jl     0x41782c
  4177e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177e9:	sbb    BYTE PTR [edi-0xa],dh
  4177ec:	jno    0x4177ce
  4177ee:	sbb    al,0x58
  4177f0:	or     ch,al
  4177f2:	sti    
  4177f3:	cmc    
  4177f4:	sub    esi,DWORD PTR [edx+0x7e]
  4177f7:	dec    DWORD PTR [ebx+0xae923bb]
  4177fd:	ret    0xfcf8
  417800:	test   BYTE PTR [esi-0x7f4b18df],cl
  417806:	ja     0x4177df
  417808:	mov    al,ds:0x924cf90f
  41780d:	mov    dl,al
  41780f:	or     edx,DWORD PTR [edi+0x36]
  417812:	mov    al,ds:0x9639bd9f
  417817:	jecxz  0x4177eb
  417819:	fld    TBYTE PTR [edx]
  41781b:	stos   DWORD PTR es:[edi],eax
  41781c:	and    edi,DWORD PTR [eax]
  41781e:	sub    al,BYTE PTR [edi+0x4fd90ac4]
  417824:	ds xchg DWORD PTR fs:[ebx-0x5c],esi
  417829:	xor    BYTE PTR [esp+ebp*4-0x7a],cl
  41782d:	ins    BYTE PTR es:[edi],dx
  41782e:	ins    DWORD PTR es:[edi],dx
  41782f:	jbe    0x4177c5
  417831:	sbb    eax,0xbc920179
  417836:	stos   DWORD PTR es:[edi],eax
  417837:	clc    
  417838:	fistp  QWORD PTR [eax-0x68]
  41783b:	pop    esp
  41783c:	jecxz  0x4178a8
  41783e:	fiadd  DWORD PTR [edi+0x28]
  417841:	xor    DWORD PTR [eax],ebp
  417843:	js     0x41783b
  417845:	xchg   ebp,eax
  417846:	leave  
  417847:	xor    dl,BYTE PTR [edi-0x71905c7]
  41784d:	in     al,0x63
  41784f:	pushf  
  417850:	sbb    DWORD PTR [edi-0x63],esi
  417853:	inc    ebp
  417854:	and    al,0x61
  417856:	shl    DWORD PTR [ebx],0x2e
  417859:	jge    0x417834
  41785b:	lds    eax,FWORD PTR [ecx-0x7000b5b1]
  417861:	jg     0x417897
  417863:	push   cs
  417864:	lock cmc 
  417866:	enter  0x74c8,0xec
  41786a:	lea    ebp,es:[esi-0x53fd9658]
  417871:	cwde   
  417872:	sbb    ebp,DWORD PTR [edi-0x7eb1d399]
  417878:	xchg   DWORD PTR [ebx],ebx
  41787a:	jmp    0x33c61e7b
  41787f:	ins    BYTE PTR es:[edi],dx
  417880:	and    ah,BYTE PTR [edx-0x49cc3509]
  417886:	xchg   DWORD PTR [edi],edx
  417888:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417889:	add    ebx,DWORD PTR [ebx]
  41788b:	pop    edi
  41788c:	out    dx,al
  41788d:	ret    0xa605
  417890:	cmp    al,0x4d
  417892:	mov    DWORD PTR [ebx],esp
  417894:	std    
  417895:	jno    0x4178dd
  417897:	into   
  417898:	and    al,0xe3
  41789a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41789b:	jbe    0x4178b8
  41789d:	or     al,0x2d
  41789f:	sbb    eax,0x41247d2d
  4178a4:	mov    WORD PTR [edx+0x5f4a5728],ds
  4178aa:	retf   
  4178ab:	(bad)  
  4178ac:	stos   DWORD PTR es:[edi],eax
  4178ad:	jns    0x417907
  4178af:	cld    
  4178b0:	aam    0x71
  4178b2:	or     DWORD PTR [esp+eax*2],esi
  4178b5:	jg     0x4178dd
  4178b7:	adc    edi,0x6f
  4178ba:	hlt    
  4178bb:	sub    eax,0xc7ad443c
  4178c0:	push   edx
  4178c1:	jl     0x417900
  4178c3:	push   edi
  4178c4:	test   DWORD PTR [eax+0x21e509f0],ebp
  4178ca:	jb     0x417925
  4178cc:	and    BYTE PTR [ecx+0x5c],0xac
  4178d0:	xor    al,0x10
  4178d2:	(bad)  
  4178d4:	aam    0x6a
  4178d6:	ret    0xba59
  4178d9:	pop    es
  4178da:	popf   
  4178db:	lea    ebp,[esi]
  4178dd:	push   ds
  4178de:	sar    DWORD PTR [ebx],cl
  4178e0:	adc    al,BYTE PTR [esi-0x11c239bd]
  4178e6:	mov    ebx,DWORD PTR [ebx]
  4178e8:	daa    
  4178e9:	imul   esp,DWORD PTR [ebp+0x395cb193],0x2e
  4178f0:	test   DWORD PTR [edi-0x71204a3a],edx
  4178f6:	sbb    ebp,ebx
  4178f8:	inc    ebp
  4178f9:	cmp    eax,0x9e0df546
  4178fe:	call   0xf2c45abc
  417903:	xchg   ebp,eax
  417904:	xchg   edi,eax
  417905:	mov    dl,al
  417907:	pop    edx
  417908:	adc    eax,0xf93a86ff
  41790d:	xor    DWORD PTR [esi+0x61daf528],ecx
  417913:	xor    DWORD PTR [ebp+esi*8-0x26ee2cf2],0xf6703c1a
  41791e:	ins    BYTE PTR es:[edi],dx
  41791f:	adc    ch,BYTE PTR [edx+0x0]
  417922:	stc    
  417923:	pop    ebx
  417924:	in     al,0x86
  417926:	clc    
  417927:	push   0xffffffbe
  417929:	scas   eax,DWORD PTR es:[edi]
  41792a:	adc    ch,BYTE PTR [ecx]
  41792c:	jmp    0x417996
  41792e:	sbb    ebp,0xf9095ac5
  417934:	stos   DWORD PTR es:[edi],eax
  417935:	les    ecx,FWORD PTR [edi+ebp*4]
  417938:	ficomp DWORD PTR [ecx-0x738f10d3]
  41793e:	in     al,0xdf
  417940:	or     eax,0x284b5e7c
  417945:	in     al,0x89
  417947:	xchg   ecx,eax
  417948:	push   ecx
  417949:	jp     0x417910
  41794b:	aas    
  41794c:	and    DWORD PTR [esi+ebx*1],ecx
  41794f:	xor    esi,DWORD PTR [ebx+0x3d]
  417952:	loop   0x417987
  417954:	sbb    bh,bl
  417956:	jle    0x417983
  417958:	inc    DWORD PTR [edx]
  41795a:	mov    dl,0x56
  41795c:	push   es
  41795d:	ds addr16 push ecx
  417960:	add    eax,0xb66b3f95
  417965:	sub    eax,0x5cd9ea93
  41796a:	or     DWORD PTR [edx+0x49],edi
  41796d:	adc    ebp,esi
  41796f:	inc    edi
  417970:	cdq    
  417971:	and    dl,dh
  417973:	mov    eax,DWORD PTR [ebp-0x4942593d]
  417979:	ror    DWORD PTR [ecx+ebp*8-0x1dbd8ed6],0xce
  417981:	add    eax,DWORD PTR [edx]
  417983:	mov    WORD PTR [edi-0x49],es
  417986:	xlat   BYTE PTR ds:[ebx]
  417987:	adc    BYTE PTR [ebx-0x52],ah
  41798a:	repnz outs dx,DWORD PTR ds:[esi]
  41798c:	js     0x4179ba
  41798e:	in     eax,0x15
  417990:	int3   
  417991:	pop    ebp
  417992:	sbb    DWORD PTR [edi+esi*1+0x2c],ebp
  417996:	out    dx,al
  417997:	pushf  
  417998:	vpunpckhwd ymm0,ymm0,YMMWORD PTR [eax+ebx*8]
  41799d:	fld    st(0)
  41799f:	sub    al,0x47
  4179a1:	pop    eax
  4179a2:	xchg   ecx,eax
  4179a3:	push   esp
  4179a4:	dec    edi
  4179a5:	ja     0x41792d
  4179a7:	sbb    DWORD PTR [esi],edx
  4179a9:	dec    edx
  4179aa:	ins    BYTE PTR es:[edi],dx
  4179ab:	adc    ch,0xf8
  4179ae:	sub    eax,0xb1e6d19a
  4179b3:	pop    ss
  4179b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179b5:	push   0xe61bf4ea
  4179ba:	les    edx,FWORD PTR [ebx]
  4179bc:	loopne 0x4179d0
  4179be:	jmp    0xa64d:0xe7f7e842
  4179c5:	pop    esp
  4179c6:	mov    esi,0x69d5c52f
  4179cb:	pushf  
  4179cc:	fsub   DWORD PTR [edx+0x20]
  4179d0:	xchg   ebp,eax
  4179d1:	dec    edi
  4179d2:	inc    edx
  4179d3:	cwde   
  4179d4:	out    0x8b,al
  4179d6:	and    eax,0xd45ce180
  4179db:	mov    ebx,0xcc35cee7
  4179e0:	mov    ds:0x91604a6f,al
  4179e5:	ss in  al,0x48
  4179e8:	rcr    esp,cl
  4179ea:	stos   BYTE PTR es:[edi],al
  4179eb:	sbb    ebp,DWORD PTR [ebp-0x55a80cea]
  4179f1:	dec    ecx
  4179f2:	fisubr DWORD PTR [esi+0xdb1172e]
  4179f8:	mov    al,ds:0x3b818b80
  4179fd:	mov    esi,0x6a8d1268
  417a02:	adc    eax,0x8a57c54c
  417a07:	inc    eax
  417a08:	xor    eax,0x27f4882b
  417a0d:	sahf   
  417a0e:	pop    ebx
  417a0f:	je     0x417a70
  417a11:	(bad)  
  417a12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a13:	sar    DWORD PTR [eax+0x28],0xad
  417a17:	mov    edi,0xd82136db
  417a1c:	ins    BYTE PTR es:[edi],dx
  417a1d:	mov    edx,0x595ce52f
  417a22:	xchg   ch,dh
  417a24:	adc    eax,0xb12c86c2
  417a29:	pop    es
  417a2a:	aaa    
  417a2b:	in     al,0x95
  417a2d:	int3   
  417a2e:	jno    0x417a16
  417a30:	jmp    0x4179bf
  417a32:	popf   
  417a33:	out    dx,al
  417a34:	jb     0x417a9e
  417a36:	test   edx,esi
  417a38:	pusha  
  417a39:	das    
  417a3a:	dec    eax
  417a3b:	mov    eax,ds:0x98a02a4b
  417a40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a42:	push   edx
  417a43:	and    al,BYTE PTR [ebp-0x8]
  417a46:	lahf   
  417a47:	push   cs
  417a48:	cld    
  417a49:	inc    esi
  417a4a:	imul   edi,edi,0xffffffa2
  417a4d:	cwde   
  417a4e:	(bad)  
  417a4f:	inc    edx
  417a50:	clc    
  417a51:	in     eax,dx
  417a52:	shl    DWORD PTR [edi],cl
  417a54:	pop    eax
  417a55:	fisubr DWORD PTR ds:0x30ca5821
  417a5b:	cmp    esi,esi
  417a5d:	pop    eax
  417a5e:	out    dx,al
  417a5f:	bnd jmp 0x506d91c9
  417a65:	mov    ah,0xab
  417a67:	pop    edi
  417a68:	or     esi,edx
  417a6a:	sahf   
  417a6b:	jl     0x417aba
  417a6d:	inc    edx
  417a6e:	je     0x417a43
  417a70:	jae    0x417a22
  417a72:	clc    
  417a73:	push   0x1b
  417a75:	int    0xdf
  417a77:	mov    cl,0x58
  417a79:	push   ecx
  417a7a:	ds xor eax,0x9a684a7f
  417a80:	stos   WORD PTR es:[edi],ax
  417a82:	and    al,0x74
  417a84:	cmp    ah,BYTE PTR [ecx]
  417a86:	sar    dl,cl
  417a88:	sti    
  417a89:	mov    esi,0x625744c
  417a8e:	(bad)  
  417a8f:	in     al,0x5b
  417a91:	fcomp  st(5)
  417a93:	pop    es
  417a94:	ja     0x417a59
  417a96:	ror    edx,0xec
  417a99:	add    al,0xe7
  417a9b:	mov    edi,0x82b92c78
  417aa0:	jmp    0x1e08:0xeade838a
  417aa7:	inc    edi
  417aa8:	sub    esp,esp
  417aaa:	cmp    ebx,DWORD PTR [edi+0x7dd1fa33]
  417ab0:	ficom  DWORD PTR [eax-0x1871f6b1]
  417ab6:	inc    ebp
  417ab7:	hlt    
  417ab8:	cs stos DWORD PTR es:[edi],eax
  417aba:	(bad)  
  417abb:	xchg   DWORD PTR [ebx],ebx
  417abd:	retf   0x3c85
  417ac0:	mov    ecx,0xaf0b30ef
  417ac5:	ror    DWORD PTR [ebx],0xf9
  417ac8:	add    BYTE PTR [ebx],cl
  417aca:	push   cs
  417acb:	imul   ecx,edi,0xffffffe8
  417ace:	sbb    DWORD PTR [edx+0x4507fb43],0x8db1717
  417ad8:	jno    0x417aa6
  417ada:	sub    ebx,0x15
  417add:	sar    BYTE PTR [ebp+0x7a495335],cl
  417ae3:	push   edx
  417ae4:	repnz push 0xffffffe3
  417ae7:	es xchg edx,eax
  417ae9:	mov    ah,0x49
  417aeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417aec:	xchg   esi,eax
  417aed:	mov    bl,0xc7
  417aef:	xor    al,0x7f
  417af1:	bound  ecx,QWORD PTR [edi]
  417af3:	lods   eax,DWORD PTR ds:[esi]
  417af4:	sub    esp,DWORD PTR [edi]
  417af6:	xor    esi,esp
  417af8:	dec    esi
  417af9:	dec    esp
  417afa:	inc    ecx
  417afb:	adc    edx,DWORD PTR [edi]
  417afd:	xor    bl,BYTE PTR [ebx-0x7308efba]
  417b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b04:	add    al,0x46
  417b06:	inc    ebp
  417b07:	add    eax,0x4a6729f9
  417b0c:	lea    edi,[ecx+0x3c3b20de]
  417b12:	call   FWORD PTR [ebx-0x2a422a97]
  417b18:	mov    esi,0xcd429d77
  417b1d:	jmp    0x48d5:0x91ef437f
  417b24:	dec    edi
  417b25:	bound  edx,QWORD PTR [ebp+0x7df12fae]
  417b2b:	dec    ecx
  417b2c:	fidivr WORD PTR [eax]
  417b2e:	outs   dx,DWORD PTR ds:[esi]
  417b2f:	xor    DWORD PTR [edi],eax
  417b31:	mov    bl,BYTE PTR [eax]
  417b33:	fldenv [edx+edx*4-0x66]
  417b37:	sub    dl,BYTE PTR [edx-0x42845599]
  417b3d:	dec    edx
  417b3e:	add    eax,0x29948d90
  417b43:	sbb    ebp,eax
  417b45:	lds    ebp,FWORD PTR [esi-0x63]
  417b48:	mov    WORD PTR [ecx+0x42a1a515],es
  417b4e:	mul    DWORD PTR [ecx]
  417b50:	cmp    eax,0xd2a7ae7b
  417b55:	cmp    al,0x35
  417b57:	or     DWORD PTR fs:[ecx+edx*8+0x4e],eax
  417b5c:	sub    al,0xe1
  417b5e:	pop    ss
  417b5f:	ja     0x417b80
  417b61:	pusha  
  417b62:	into   
  417b63:	xchg   ebp,eax
  417b64:	mov    edi,0x20a46d33
  417b69:	xor    al,0xa8
  417b6b:	mov    ecx,0xcc6a3215
  417b70:	je     0x417bd9
  417b72:	iret   
  417b73:	sbb    BYTE PTR [ebx-0x71],bh
  417b76:	arpl   WORD PTR [eax+ecx*8+0x42],si
  417b7a:	add    al,0xd1
  417b7c:	je     0x417b2d
  417b7e:	fisub  DWORD PTR [ecx]
  417b80:	pop    ebx
  417b81:	shl    bl,cl
  417b83:	and    eax,0x864c3066
  417b88:	inc    edi
  417b89:	sbb    al,0xc9
  417b8b:	jmp    0x946e:0x3252794
  417b92:	cmc    
  417b93:	out    dx,eax
  417b94:	mov    ch,BYTE PTR [esi+0x5fd7eb19]
  417b9a:	jb     0x417b8c
  417b9c:	add    dh,dl
  417b9e:	lods   al,BYTE PTR ds:[esi]
  417b9f:	xchg   ecx,eax
  417ba0:	add    ch,bl
  417ba2:	outs   dx,BYTE PTR ds:[esi]
  417ba3:	int3   
  417ba4:	(bad)  
  417ba5:	mov    ebx,0x6c73aebb
  417baa:	and    al,0x5
  417bac:	neg    BYTE PTR [edi-0x37]
  417baf:	out    0xf2,al
  417bb1:	mov    al,ds:0x3af729ac
  417bb6:	cmp    edx,DWORD PTR [esi-0x1a2fe368]
  417bbc:	leave  
  417bbd:	call   0xf6ab57f3
  417bc2:	out    0xbf,al
  417bc4:	and    ebx,DWORD PTR [ecx+0x7b]
  417bc7:	loope  0x417b92
  417bc9:	(bad)  
  417bcc:	adc    eax,DWORD PTR [ebx]
  417bce:	(bad)  
  417bcf:	daa    
  417bd0:	dec    esi
  417bd1:	lods   eax,DWORD PTR ds:[esi]
  417bd2:	pop    ebp
  417bd3:	data16 (bad) 
  417bd5:	stc    
  417bd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bd7:	push   edi
  417bd8:	pop    ds
  417bd9:	xchg   esi,eax
  417bda:	jnp    0x417ba3
  417bdc:	mov    edi,0x5d40025c
  417be1:	inc    ebp
  417be2:	xor    edx,DWORD PTR [edx-0x14eee5af]
  417be8:	ins    BYTE PTR es:[edi],dx
  417be9:	lds    ebp,FWORD PTR [eax]
  417beb:	aad    0x44
  417bed:	xchg   BYTE PTR [edi-0x1176f960],dl
  417bf3:	lea    esi,[eax]
  417bf5:	pop    ss
  417bf6:	cmp    dh,al
  417bf8:	jecxz  0x417c39
  417bfa:	mov    bl,0x55
  417bfc:	js     0x417b8e
  417bfe:	pop    esi
  417bff:	dec    ebp
  417c00:	stos   DWORD PTR es:[edi],eax
  417c01:	js     0x417c4a
  417c03:	lods   al,BYTE PTR ds:[esi]
  417c04:	daa    
  417c05:	jns    0x417c57
  417c07:	jle    0x417c6c
  417c09:	ret    
  417c0a:	jns    0x417bbc
  417c0c:	pusha  
  417c0d:	fbstp  TBYTE PTR [edx]
  417c0f:	ins    BYTE PTR es:[edi],dx
  417c10:	jnp    0x417c03
  417c12:	push   0xffffffa3
  417c14:	sbb    WORD PTR [esi-0x20c79a09],sp
  417c1b:	mov    dl,0x3b
  417c1d:	aad    0x11
  417c1f:	out    dx,al
  417c20:	pop    esp
  417c21:	test   eax,0x6412806d
  417c26:	cmp    esi,ecx
  417c28:	and    DWORD PTR [edi+eiz*4],edx
  417c2b:	fild   DWORD PTR [ecx+0x3d241897]
  417c31:	pop    esp
  417c32:	sub    eax,0x5c477b4b
  417c37:	adc    eax,0xaec05c3a
  417c3c:	jmp    DWORD PTR [edi]
  417c3e:	xor    al,0x9f
  417c40:	ret    0xf4aa
  417c43:	push   ds
  417c44:	sbb    eax,0x92ae56ff
  417c49:	popf   
  417c4a:	pop    ebx
  417c4b:	mov    al,0x4c
  417c4d:	leave  
  417c4e:	fldcw  WORD PTR [ebx]
  417c50:	cli    
  417c51:	adc    ebp,ebp
  417c53:	lahf   
  417c54:	call   0xd248:0xa6b28a86
  417c5b:	cmp    ah,dh
  417c5d:	popa   
  417c5e:	inc    ebp
  417c5f:	sub    BYTE PTR [esi+0x19],0x5f
  417c63:	shl    DWORD PTR [esi],cl
  417c65:	or     BYTE PTR [ebx-0x7f],bh
  417c68:	and    bh,BYTE PTR [ebx-0x3b]
  417c6b:	scas   eax,DWORD PTR es:[edi]
  417c6c:	iret   
  417c6d:	mov    ch,0x3f
  417c6f:	mov    ebp,0x49f6cdd6
  417c74:	and    eax,0xbf2cd2c3
  417c79:	mov    ch,0xec
  417c7b:	and    al,0xbd
  417c7d:	js     0x417c6a
  417c7f:	les    eax,FWORD PTR [ebx]
  417c81:	pop    edx
  417c82:	jnp    0x417c54
  417c84:	imul   DWORD PTR [ebp+0x56]
  417c87:	pop    ss
  417c88:	fistp  QWORD PTR [ebp+0x1e]
  417c8b:	fdivr  st,st(0)
  417c8d:	fstp   TBYTE PTR [edx+0x64]
  417c90:	jnp    0x417c7d
  417c92:	push   ecx
  417c93:	outs   dx,BYTE PTR ds:[esi]
  417c94:	(bad)  
  417c96:	test   al,0xc7
  417c98:	dec    edi
  417c99:	nop
  417c9a:	sub    ebp,DWORD PTR [edx*2+0x26387744]
  417ca1:	lock sub esi,DWORD PTR [eax+0x19]
  417ca5:	mov    cl,0x13
  417ca7:	clc    
  417ca8:	push   eax
  417ca9:	gs cmc 
  417cab:	jle    0x417d0a
  417cad:	test   al,0x14
  417caf:	cmovb  esi,ebp
  417cb2:	hlt    
  417cb3:	xchg   ebp,eax
  417cb4:	xor    al,0xba
  417cb6:	jl     0x417c56
  417cb8:	repz or bl,dh
  417cbb:	into   
  417cbc:	xor    edx,DWORD PTR [edi]
  417cbe:	push   0x7c
  417cc0:	xchg   ebp,eax
  417cc1:	inc    ebx
  417cc2:	fisubr WORD PTR [edi-0x63ca1ea0]
  417cc8:	fsub   QWORD PTR [ebp+0x661838b4]
  417cce:	adc    BYTE PTR [eax-0x5c],al
  417cd1:	jns    0x417cf8
  417cd3:	and    BYTE PTR [edi-0x50b4f13a],dl
  417cd9:	xor    ecx,eax
  417cdb:	dec    edx
  417cdc:	neg    DWORD PTR [edi-0x69]
  417cdf:	jmp    0x518060e0
  417ce4:	pop    ds
  417ce5:	inc    edi
  417ce6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ce7:	fadd   st(5),st
  417ce9:	bound  esp,QWORD PTR [edi-0x70]
  417cec:	mov    WORD PTR [esi+ecx*4+0x36ac67cc],ds
  417cf3:	sbb    DWORD PTR [edi-0x2f],eax
  417cf6:	adc    eax,0xce3664bf
  417cfb:	push   0x8b240201
  417d00:	shl    DWORD PTR [ecx-0x492768e9],cl
  417d06:	std    
  417d07:	sbb    ah,BYTE PTR [ebp+0x51]
  417d0a:	mov    ds:0xead19627,al
  417d0f:	push   cs
  417d10:	mov    ah,0x5c
  417d12:	xchg   edx,eax
  417d13:	mov    DWORD PTR [esi+0xc4be3d7],edi
  417d19:	outs   dx,BYTE PTR ds:[esi]
  417d1a:	dec    esp
  417d1b:	sar    DWORD PTR [edx],0x72
  417d1e:	or     ebp,DWORD PTR [ecx-0x221955fe]
  417d24:	jl     0x417d8f
  417d26:	sbb    al,0x4e
  417d28:	fcomp  QWORD PTR [ecx-0x3dcec624]
  417d2e:	lock push edi
  417d30:	mov    bl,0xab
  417d32:	lds    edx,FWORD PTR [ebx]
  417d34:	nop
  417d35:	jb     0x417d30
  417d37:	xchg   esp,eax
  417d38:	test   DWORD PTR [edx-0x2187e050],0xa7d260b8
  417d42:	xor    eax,0x6732d269
  417d47:	pop    es
  417d48:	sub    DWORD PTR [esi*8+0x2ce1059e],eax
  417d4f:	in     al,dx
  417d50:	cmp    edi,DWORD PTR es:[ebx-0xc]
  417d54:	xor    bh,BYTE PTR [ebp+0x39]
  417d57:	pop    edx
  417d58:	inc    eax
  417d59:	stos   BYTE PTR es:[edi],al
  417d5a:	je     0x417d9f
  417d5c:	xor    edx,edx
  417d5e:	push   edx
  417d5f:	xchg   ebp,eax
  417d60:	or     BYTE PTR [ebx],ch
  417d62:	outs   dx,DWORD PTR ds:[esi]
  417d63:	xchg   esp,eax
  417d64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d65:	push   cs
  417d66:	sub    edx,ecx
  417d68:	popa   
  417d69:	cmp    eax,0xdb53ebf4
  417d6e:	pop    edx
  417d6f:	loop   0x417d63
  417d71:	sub    ebx,ebp
  417d73:	shl    DWORD PTR [esp+eax*4],1
  417d76:	mov    edi,0x5016fcaf
  417d7b:	xor    BYTE PTR [edx+0x49],0xdf
  417d7f:	cmp    DWORD PTR [ebx],ecx
  417d81:	inc    edi
  417d82:	xchg   esi,eax
  417d83:	pop    ss
  417d84:	mov    bl,0x90
  417d86:	mov    ah,0xc5
  417d88:	xchg   edi,eax
  417d89:	mov    dl,BYTE PTR [ecx-0x4e0643b2]
  417d8f:	idiv   ebp
  417d91:	dec    esi
  417d92:	mov    esp,0x53e63f64
  417d97:	and    al,0xa7
  417d99:	add    eax,0xabee1db0
  417d9e:	rcl    DWORD PTR [ebx-0x4d],cl
  417da1:	test   al,0xf
  417da3:	xchg   ebx,edx
  417da5:	xor    BYTE PTR [edi*4+0x2ec649cf],ch
  417dac:	mov    ?,ecx
  417dae:	out    dx,eax
  417daf:	inc    edi
  417db0:	mov    eax,0xb0055149
  417db5:	mov    dl,0x1f
  417db7:	sbb    edx,DWORD PTR [esp+ecx*8-0x2e]
  417dbb:	lds    edx,FWORD PTR [edi]
  417dbd:	pushf  
  417dbe:	int    0xff
  417dc0:	push   ebx
  417dc1:	rol    DWORD PTR [esi-0x55],1
  417dc4:	cdq    
  417dc5:	pop    ecx
  417dc6:	cmp    BYTE PTR [ebx],bh
  417dc8:	lods   eax,DWORD PTR ds:[esi]
  417dc9:	leave  
  417dca:	ja     0x417d5b
  417dcc:	stc    
  417dcd:	sti    
  417dce:	gs out 0x6f,eax
  417dd1:	mov    eax,gs
  417dd3:	mov    ds:0x2ba53d22,eax
  417dd8:	sub    bl,BYTE PTR [eax+eiz*4]
  417ddb:	into   
  417ddc:	ss push 0x95695495
  417de2:	sub    BYTE PTR ds:0x63c6e017,al
  417de8:	inc    dl
  417dea:	retf   0x142a
  417ded:	out    dx,al
  417dee:	xchg   esi,eax
  417def:	inc    ebx
  417df0:	outs   dx,DWORD PTR ds:[esi]
  417df1:	std    
  417df2:	mov    cl,0x6d
  417df4:	pop    eax
  417df5:	jbe    0x417d85
  417df7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417df8:	xchg   edi,eax
  417df9:	test   BYTE PTR [ecx-0x6f55b6d4],0x7f
  417e00:	in     al,dx
  417e01:	pop    ds
  417e02:	pop    edi
  417e03:	rol    BYTE PTR [esp+edi*4-0x190b9c3],0x55
  417e0b:	std    
  417e0c:	je     0x417e72
  417e0e:	xchg   edx,eax
  417e0f:	mov    ds:0x13e0e7dc,eax
  417e14:	push   0xfffffffa
  417e16:	inc    eax
  417e17:	and    eax,0x85be4b55
  417e1c:	sbb    BYTE PTR [ecx],0xcc
  417e1f:	enter  0x5970,0x9
  417e23:	cli    
  417e24:	es int3 
  417e26:	stc    
  417e27:	retf   0x348e
  417e2a:	mov    esi,0x7d39fa1e
  417e2f:	fs rcl ebp,0x43
  417e33:	xchg   DWORD PTR [ecx],ecx
  417e35:	(bad)  
  417e36:	repz imul edx,DWORD PTR [edx+0x1f5eab8c],0x21fd97b7
  417e41:	fs jecxz 0x417ea6
  417e44:	vmload 
  417e47:	sub    ebp,DWORD PTR [edi]
  417e49:	pop    esp
  417e4a:	fidivr DWORD PTR [edi]
  417e4c:	ins    BYTE PTR es:[edi],dx
  417e4d:	popa   
  417e4e:	push   0x392a17d2
  417e53:	out    0x88,al
  417e55:	and    dh,BYTE PTR [edx]
  417e57:	jne    0x417e2c
  417e59:	mov    ds:0x3eea523f,al
  417e5e:	dec    eax
  417e5f:	shl    ebx,1
  417e61:	xchg   ebx,eax
  417e62:	or     al,0xb2
  417e64:	inc    ebx
  417e65:	hlt    
  417e66:	fs lock repnz leave 
  417e6a:	out    0x7d,eax
  417e6c:	mov    esp,0x6cf5c555
  417e71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e72:	sbb    cl,BYTE PTR [edx+0x4d]
  417e75:	imul   esp,DWORD PTR [eax+esi*4-0x5cc1c271],0x4c7b47ad
  417e80:	fst    st(7)
  417e82:	adc    eax,0x63d85e28
  417e87:	mov    al,gs:0x77eb6802
  417e8d:	pop    esp
  417e8e:	sbb    eax,0x98e91e08
  417e93:	es sbb al,0x57
  417e96:	dec    ebx
  417e97:	and    al,0xd9
  417e99:	inc    esi
  417e9a:	fwait
  417e9b:	cmp    ebp,DWORD PTR [edi]
  417e9d:	mov    eax,0x5904f9cb
  417ea2:	sbb    eax,0x22bb4c61
  417ea7:	(bad)  [edx]
  417ea9:	ffreep st(6)
  417eab:	retf   
  417eac:	dec    edx
  417ead:	loop   0x417efb
  417eaf:	stos   BYTE PTR es:[edi],al
  417eb0:	inc    ebp
  417eb1:	movntps XMMWORD PTR [eax+0x1da34dad],xmm0
  417eb8:	test   al,0xb8
  417eba:	pop    edx
  417ebb:	(bad)  
  417ebc:	ins    BYTE PTR es:[edi],dx
  417ebd:	loopne 0x417e53
  417ebf:	(bad)  
  417ec0:	imul   eax,DWORD PTR [edi-0x6cdff07d],0xffffffde
  417ec7:	outs   dx,DWORD PTR ds:[esi]
  417ec8:	xlat   BYTE PTR ds:[ebx]
  417ec9:	repz cmps BYTE PTR gs:[esi],BYTE PTR es:[edi]
  417ecc:	inc    edi
  417ecd:	enter  0x7ce6,0xf8
  417ed1:	xchg   DWORD PTR [esi],esp
  417ed3:	push   eax
  417ed4:	xlat   BYTE PTR ds:[ebx]
  417ed5:	(bad)  
  417ed6:	mov    ah,0xe0
  417ed8:	pop    ebp
  417ed9:	jns    0x417f4e
  417edb:	sbb    DWORD PTR [ebx-0x44],0xffffffbc
  417edf:	rcr    al,1
  417ee1:	inc    eax
  417ee2:	adc    DWORD PTR [ebx],eax
  417ee4:	mov    ebx,0x9c958897
  417ee9:	stos   DWORD PTR es:[edi],eax
  417eea:	sbb    ah,BYTE PTR [eax-0x50a1808a]
  417ef0:	pusha  
  417ef1:	mov    ds:0x3e41e974,al
  417ef6:	fs push 0xcd3e4c39
  417efc:	(bad)  
  417efd:	and    al,0xd7
  417eff:	test   eax,0x3d4ff47
  417f04:	arpl   si,di
  417f06:	push   es
  417f07:	push   ebx
  417f08:	dec    ecx
  417f09:	jnp    0x417ebb
  417f0b:	xor    BYTE PTR [ebx-0x2],dh
  417f0e:	push   eax
  417f0f:	out    0xcc,eax
  417f11:	inc    ecx
  417f12:	data16 sti 
  417f14:	lods   eax,DWORD PTR ds:[esi]
  417f15:	in     eax,0xae
  417f17:	xchg   esp,eax
  417f18:	dec    ebp
  417f19:	and    BYTE PTR [edi+0x4d5c8dfb],0xbb
  417f20:	sbb    BYTE PTR [ebx-0x46],ch
  417f23:	ret    
  417f24:	scas   al,BYTE PTR es:[edi]
  417f25:	add    al,0x21
  417f27:	cmp    eax,0xafecd9ef
  417f2c:	inc    edx
  417f2d:	mov    al,0x27
  417f2f:	fisttp DWORD PTR [eax]
  417f31:	cmp    eax,eax
  417f33:	push   ds
  417f34:	pop    edi
  417f35:	mov    gs:0xfbcfc39e,al
  417f3b:	ret    0xa61f
  417f3e:	das    
  417f3f:	div    bl
  417f41:	lds    edx,FWORD PTR [edx]
  417f43:	in     al,dx
  417f44:	imul   esi,DWORD PTR [ebx+0x2f788fc9],0x15
  417f4b:	scas   eax,DWORD PTR es:[edi]
  417f4c:	js     0x417ee3
  417f4e:	lock fstp TBYTE PTR [esi]
  417f51:	cmp    cl,BYTE PTR cs:[esi-0x4e]
  417f55:	test   BYTE PTR [edx-0x49],al
  417f58:	out    0x90,eax
  417f5a:	dec    esp
  417f5b:	cmp    BYTE PTR ds:0xb1aa5453,dh
  417f61:	cs in  al,dx
  417f63:	into   
  417f64:	jno    0x417f40
  417f66:	js     0x417f2e
  417f68:	pop    ebx
  417f69:	push   ecx
  417f6a:	in     al,0x3e
  417f6c:	mov    bh,0x4
  417f6e:	scas   eax,DWORD PTR es:[edi]
  417f6f:	push   ss
  417f70:	push   edx
  417f71:	push   DWORD PTR [ecx+0x258cf236]
  417f77:	pop    edx
  417f78:	addr16 (bad) 
  417f7a:	clc    
  417f7b:	adc    eax,0x64c9db0b
  417f80:	sbb    BYTE PTR [ecx+0x9698e6f],dh
  417f86:	int3   
  417f87:	pop    ebx
  417f88:	js     0x417fd3
  417f8a:	or     DWORD PTR ds:0xa4c55328,esp
  417f90:	inc    esi
  417f91:	dec    ecx
  417f92:	cdq    
  417f93:	cmc    
  417f94:	fs mov ecx,0xcf7ad9e7
  417f9a:	les    eax,FWORD PTR [edi]
  417f9c:	aaa    
  417f9d:	xchg   esi,eax
  417f9e:	jle    0x417f44
  417fa0:	pop    edi
  417fa1:	lds    ebx,FWORD PTR [edi-0x4de4752a]
  417fa7:	ds xor cl,dl
  417faa:	or     eax,0x8d75d22f
  417faf:	mov    dl,0xf8
  417fb1:	shr    DWORD PTR [ebx-0x9274f4a],1
  417fb7:	add    ebx,esp
  417fb9:	fs jne 0x418019
  417fbc:	sub    eax,0xc9bd8f01
  417fc1:	mov    WORD PTR [ebp-0x45a790f7],gs
  417fc7:	dec    esi
  417fc8:	cmp    bh,bh
  417fca:	rcl    DWORD PTR [eax+0x7f4d9a95],cl
  417fd0:	cs pop ecx
  417fd2:	leave  
  417fd3:	popf   
  417fd4:	add    al,0x99
  417fd6:	cld    
  417fd7:	push   0x4c676ea7
  417fdc:	xchg   ebp,eax
  417fdd:	out    dx,al
  417fde:	outs   dx,BYTE PTR ds:[esi]
  417fdf:	xor    dl,ah
  417fe1:	push   esp
  417fe2:	mov    ah,0xb0
  417fe4:	dec    ecx
  417fe5:	xchg   ebp,eax
  417fe6:	pushf  
  417fe7:	adc    eax,0xe989ece2
  417fec:	iret   
  417fed:	inc    eax
  417fee:	jle    0x418042
  417ff0:	sbb    BYTE PTR [ebx-0x5e9127e9],ch
  417ff6:	data16 js 0x417fcf
  417ff9:	jae    0x417fb8
  417ffb:	push   ecx
  417ffc:	sbb    esi,ebx
  417ffe:	jge    0x417f83
  418000:	mov    bh,BYTE PTR [ebx+ebp*2]
  418003:	push   ebp
  418004:	addr16 push esp
  418006:	mov    dl,0xa9
  418008:	cmp    bl,BYTE PTR [esi-0xbce8b4d]
  41800e:	jecxz  0x418031
  418010:	outs   dx,DWORD PTR ds:[esi]
  418011:	loopne 0x418076
  418013:	mov    ecx,cs
  418015:	jg     0x41803c
  418017:	pop    es
  418018:	sahf   
  418019:	dec    edi
  41801a:	out    0x8b,eax
  41801c:	dec    eax
  41801d:	rcl    BYTE PTR [ebp+0x37],cl
  418020:	cmc    
  418021:	aas    
  418022:	pop    es
  418023:	loopne 0x41802a
  418025:	fabs   
  418027:	jbe    0x418051
  418029:	and    di,WORD PTR [edx]
  41802c:	fisttp QWORD PTR [esi+0x1ceb59e5]
  418032:	fcmovu st,st(3)
  418034:	push   esi
  418035:	cli    
  418036:	xchg   ebx,eax
  418037:	cmp    DWORD PTR [edi+0x3802d3c2],ebp
  41803d:	xchg   esp,eax
  41803e:	lea    edi,[eax]
  418040:	loop   0x41802d
  418042:	jl     0x418040
  418044:	fsubr  DWORD PTR [ecx-0x2c]
  418047:	mov    eax,ds:0xac10535
  41804c:	mov    al,ds:0x5fe000dc
  418051:	aam    0x4e
  418053:	pop    esp
  418054:	dec    esp
  418055:	scas   eax,DWORD PTR es:[edi]
  418056:	test   al,0xfb
  418058:	ret    0x6d42
  41805b:	dec    esp
  41805c:	loop   0x418036
  41805e:	push   ecx
  41805f:	rcr    DWORD PTR [ecx+0x33],cl
  418062:	adc    al,0xa6
  418064:	inc    edx
  418065:	fist   WORD PTR [edi-0x52]
  418068:	sub    DWORD PTR [edi-0x39],ebx
  41806b:	adc    edx,DWORD PTR [esi+0x434a723a]
  418071:	mov    al,ds:0x276f80be
  418076:	pop    ecx
  418077:	loope  0x41802a
  418079:	lahf   
  41807a:	mov    eax,ds:0xd355fd04
  41807f:	fwait
  418080:	repnz mov ebp,0x45a41306
  418086:	pop    edx
  418087:	xchg   esi,eax
  418088:	sub    dh,al
  41808a:	ret    0x9475
  41808d:	call   0xccdf:0xe7f897ab
  418094:	adc    BYTE PTR [edi],ch
  418096:	and    BYTE PTR [edx+0x591bbff3],ch
  41809c:	pop    ss
  41809d:	ss push esp
  41809f:	push   0x4d5e04ee
  4180a4:	sub    BYTE PTR [edi-0x52],ch
  4180a7:	jno    0x4180ad
  4180a9:	jnp    0x4180dd
  4180ab:	push   0x6f
  4180ad:	or     BYTE PTR [esi],0xf2
  4180b0:	sub    eax,0xc46be3a8
  4180b5:	jo     0x4180f9
  4180b7:	enter  0xe719,0x1d
  4180bb:	not    DWORD PTR gs:[ebx]
  4180be:	retf   0x1a50
  4180c1:	adc    ah,dl
  4180c3:	jbe    0x41810d
  4180c5:	pop    ds
  4180c6:	clc    
  4180c7:	inc    eax
  4180c8:	and    eax,0x8e9fa13d
  4180cd:	mov    ds:0xd119a989,al
  4180d2:	and    al,0xc
  4180d4:	push   esp
  4180d5:	fld    QWORD PTR [ebx+0x46]
  4180d8:	and    eax,0x2f58c688
  4180dd:	push   0x25
  4180df:	call   0x74ed834e
  4180e4:	fnstcw WORD PTR [esi]
  4180e6:	ins    DWORD PTR es:[edi],dx
  4180e7:	data16 jo 0x41809a
  4180ea:	enter  0x7cfb,0x4
  4180ee:	enter  0x45ff,0x6
  4180f2:	sbb    ch,bh
  4180f4:	xchg   ecx,eax
  4180f5:	adc    cl,BYTE PTR [edi]
  4180f7:	mov    ah,0xd3
  4180f9:	lods   eax,DWORD PTR ds:[esi]
  4180fa:	fsubr  DWORD PTR [edx+0x13]
  4180fd:	gs addr16 push ebp
  418100:	or     dl,ch
  418102:	test   DWORD PTR [esi-0x52],esi
  418105:	adc    DWORD PTR [ebp-0x3224e74a],ebx
  41810b:	repz in eax,dx
  41810d:	shl    DWORD PTR [edi-0x1c],cl
  418110:	fs stos DWORD PTR es:[edi],eax
  418112:	aad    0x62
  418114:	push   edi
  418115:	sti    
  418116:	stc    
  418117:	pop    edi
  418118:	div    BYTE PTR [esi+0x58]
  41811b:	dec    edx
  41811c:	jmp    DWORD PTR [eax+edi*1]
  41811f:	dec    esi
  418120:	scas   al,BYTE PTR es:[edi]
  418121:	stc    
  418122:	jle    0x4180e6
  418124:	cmp    eax,0xd44f7182
  418129:	std    
  41812a:	pop    edx
  41812b:	arpl   WORD PTR [ebx+0x4241369],di
  418131:	out    0x7e,al
  418133:	jmp    0xe8288a7a
  418138:	add    BYTE PTR [ecx-0x120d7b27],al
  41813e:	lds    edx,FWORD PTR [eax]
  418140:	retf   
  418141:	xlat   BYTE PTR ds:[ebx]
  418142:	cmp    edx,ecx
  418144:	cmp    BYTE PTR [ebp-0x79],cl
  418147:	cli    
  418148:	mov    al,0x89
  41814a:	pushf  
  41814b:	jb     0x418116
  41814d:	jl     0x4181ce
  41814f:	test   BYTE PTR [ebx+0x30],ah
  418152:	sbb    esp,eax
  418154:	div    DWORD PTR [eax+edi*1]
  418157:	test   eax,0x9a73513f
  41815c:	mov    BYTE PTR [ebx],ch
  41815e:	das    
  41815f:	sub    DWORD PTR [ebx-0x3a],esi
  418162:	jno    0x418145
  418164:	neg    DWORD PTR [eax-0x9]
  418167:	dec    esp
  418168:	add    bh,BYTE PTR [ecx]
  41816a:	mov    DWORD PTR [esi],0x62f4569f
  418170:	push   eax
  418171:	mov    edx,0x6a6ab633
  418176:	xchg   ecx,eax
  418177:	mov    ds:0xf0909b0c,al
  41817c:	popa   
  41817d:	or     BYTE PTR [edx-0x24],cl
  418180:	push   edx
  418181:	cli    
  418182:	lahf   
  418183:	fwait
  418184:	and    cl,BYTE PTR ds:0x3314d451
  41818a:	ret    
  41818b:	xlat   BYTE PTR ds:[ebx]
  41818c:	(bad)
  418190:	mov    al,ds:0x5dfcc90a
  418195:	mov    eax,0xd2bbc55a
  41819a:	out    dx,al
  41819b:	dec    edx
  41819c:	sub    DWORD PTR [ebp+0x46811246],edx
  4181a2:	jnp    0x418128
  4181a4:	out    dx,eax
  4181a5:	adc    eax,0xe17856c1
  4181aa:	aaa    
  4181ab:	clc    
  4181ac:	aad    0x77
  4181ae:	stc    
  4181af:	push   0x4c
  4181b1:	pop    es
  4181b2:	sbb    eax,0x12e30c0b
  4181b7:	icebp  
  4181b8:	test   al,0x9e
  4181ba:	dec    edx
  4181bb:	mov    dl,0xe7
  4181bd:	sub    BYTE PTR ds:[esi+ebp*8-0x2cbdd1ca],al
  4181c5:	jnp    0x418156
  4181c7:	pop    edi
  4181c8:	mov    esi,0x226bc6db
  4181cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181ce:	repz push es
  4181d0:	retf   
  4181d1:	nop
  4181d2:	stc    
  4181d3:	dec    esi
  4181d4:	pop    eax
  4181d5:	sbb    DWORD PTR [ebx+0x422a5bff],esi
  4181db:	cmp    bh,BYTE PTR [eax-0x22f71f70]
  4181e1:	jmp    0x41819d
  4181e3:	cli    
  4181e4:	(bad)  
  4181e5:	xor    eax,0x5d921734
  4181ea:	frstor [esi]
  4181ec:	ins    BYTE PTR es:[edi],dx
  4181ed:	sbb    ax,0xfb98
  4181f1:	lods   al,BYTE PTR ds:[esi]
  4181f2:	jmp    0x8b82528a
  4181f7:	repnz stos DWORD PTR es:[edi],eax
  4181f9:	or     DWORD PTR [edi-0x6a3bfaa8],eax
  4181ff:	(bad)  
  418200:	cmc    
  418201:	shl    DWORD PTR [ebx+0x1bd532d7],1
  418207:	repz test DWORD PTR [edx+0x6a],ebp
  41820b:	sub    BYTE PTR [esi-0xd5d20c1],ah
  418211:	outs   dx,DWORD PTR ds:[esi]
  418212:	das    
  418213:	inc    esp
  418214:	out    0x40,al
  418216:	push   esi
  418217:	(bad)  
  418218:	fld    TBYTE PTR [edx+0x4070c375]
  41821e:	call   0xb884:0x9030a678
  418225:	out    dx,al
  418226:	adc    BYTE PTR [ebp-0x3e],ah
  418229:	pop    ds
  41822a:	add    eax,0x62f0645d
  41822f:	push   ss
  418230:	out    dx,al
  418231:	enter  0x49e5,0x92
  418235:	(bad)  
  418236:	aaa    
  418237:	xor    al,0x7d
  418239:	(bad)  
  41823a:	and    al,0x51
  41823c:	das    
  41823d:	jb     0x4181da
  41823f:	arpl   WORD PTR [edx],si
  418241:	pop    ecx
  418242:	adc    al,0x8
  418244:	push   ebp
  418245:	aad    0x2c
  418247:	pop    edx
  418248:	out    0xb1,al
  41824a:	mov    eax,ds:0x3c0dee1f
  41824f:	clc    
  418250:	jo     0x418283
  418252:	test   al,0x9c
  418254:	(bad)  
  418256:	push   cs
  418257:	jmp    0x862cc971
  41825c:	jp     0x418284
  41825e:	ror    BYTE PTR [ebp+0x76181f83],1
  418264:	push   ebx
  418265:	push   esp
  418266:	popf   
  418267:	and    DWORD PTR [edi+esi*2],edi
  41826a:	aas    
  41826b:	rol    ebx,0x4
  41826e:	mov    eax,0xc66f1a01
  418273:	test   BYTE PTR [edi],dh
  418275:	test   BYTE PTR [edx+ebx*8-0x49],ah
  418279:	aaa    
  41827a:	das    
  41827b:	daa    
  41827c:	pop    ecx
  41827d:	enter  0xf66c,0xeb
  418281:	push   edx
  418282:	dec    ebx
  418283:	mov    eax,0x4c9889ea
  418288:	sbb    edi,DWORD PTR ds:[esi-0x3cdc98a1]
  41828f:	adc    esp,DWORD PTR [eax+eiz*8]
  418292:	inc    esi
  418293:	pop    ebx
  418294:	or     ebx,DWORD PTR ss:[edx-0x53]
  418298:	inc    ecx
  418299:	les    eax,FWORD PTR [ecx-0x78]
  41829c:	retf   
  41829d:	outs   dx,BYTE PTR ds:[esi]
  41829e:	sbb    al,0x4a
  4182a0:	mov    dh,0xfa
  4182a2:	dec    DWORD PTR [ecx+0x6f92ccd8]
  4182a8:	ja     0x418230
  4182aa:	in     al,dx
  4182ab:	inc    eax
  4182ac:	ds clts 
  4182af:	mov    esp,edx
  4182b1:	loopne 0x4182a1
  4182b3:	push   edi
  4182b4:	add    eax,0xf3592fda
  4182b9:	sub    al,0xb0
  4182bb:	pop    esp
  4182bc:	scas   al,BYTE PTR es:[edi]
  4182bd:	in     eax,0x31
  4182bf:	mov    esi,0xe774608f
  4182c4:	inc    esp
  4182c5:	adc    esi,ebx
  4182c7:	cmp    dh,0xce
  4182ca:	lea    ebp,[ebp+0x42]
  4182cd:	gs in  al,dx
  4182cf:	mov    edi,0x46c5d684
  4182d4:	fnstcw WORD PTR [ecx-0x20]
  4182d7:	push   ebp
  4182d8:	ret    
  4182d9:	inc    ebx
  4182da:	pop    esp
  4182db:	push   ebx
  4182dc:	stos   BYTE PTR es:[edi],al
  4182dd:	push   ecx
  4182de:	imul   edi,DWORD PTR [edx+0x56],0x24
  4182e2:	adc    ch,BYTE PTR [eax]
  4182e4:	inc    edx
  4182e5:	inc    ebx
  4182e6:	(bad)  
  4182e7:	jnp    0x418286
  4182e9:	dec    edi
  4182ea:	inc    esp
  4182eb:	dec    eax
  4182ed:	imul   ebx,edi,0x282c106a
  4182f3:	(bad)  
  4182f4:	mov    ?,WORD PTR [ebp+eax*1+0x26]
  4182f8:	icebp  
  4182f9:	jp     0x41833d
  4182fb:	jmp    FWORD PTR [ecx]
  4182fd:	test   eax,0x9324b27d
  418302:	out    0xf7,al
  418304:	xchg   ebp,eax
  418305:	inc    ebp
  418306:	pop    ebx
  418307:	or     DWORD PTR [eax+0x6d22257c],0xffffff98
  41830e:	sub    BYTE PTR [ecx+0x1b30d816],dh
  418314:	mov    dl,bl
  418316:	mov    al,0x4b
  418318:	out    dx,eax
  418319:	test   eax,0xd86c0edb
  41831e:	clc    
  41831f:	xor    al,0x7d
  418321:	(bad)  
  418322:	xchg   edx,eax
  418323:	ds jmp 0x418394
  418326:	sub    BYTE PTR [ecx+0x2aa87f22],dl
  41832c:	and    BYTE PTR [eax-0x39],0x3d
  418330:	mov    WORD PTR [ecx-0x4a452dda],?
  418336:	outs   dx,DWORD PTR ds:[esi]
  418337:	pop    edx
  418338:	aam    0xab
  41833a:	jmp    0xeca156ca
  41833f:	xor    BYTE PTR [edi-0x7],ah
  418342:	repz (bad) 
  418344:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  418346:	std    
  418347:	adc    edx,DWORD PTR [edx]
  418349:	stos   DWORD PTR es:[edi],eax
  41834a:	pop    edx
  41834b:	pop    edi
  41834c:	cli    
  41834d:	cmp    edx,eax
  41834f:	lea    edx,[eax-0x7b01f8a5]
  418355:	pusha  
  418356:	xor    ecx,DWORD PTR [eax+0x225eb283]
  41835c:	shl    DWORD PTR [ecx+0x40],0x74
  418360:	pop    ebp
  418361:	xor    al,0x38
  418363:	cmp    dh,BYTE PTR ds:0x9727d508
  418369:	ja     0x4182ed
  41836b:	and    eax,0x8e108069
  418370:	xlat   BYTE PTR ds:[ebx]
  418371:	sbb    al,BYTE PTR [eax+esi*4+0x37]
  418375:	and    DWORD PTR [eax-0x28d6338d],edi
  41837b:	stos   DWORD PTR es:[edi],eax
  41837c:	retf   0xa81d
  41837f:	push   eax
  418380:	sbb    ecx,0x45
  418383:	jne    0x4183f5
  418385:	adc    BYTE PTR [edi-0x5fb8e7c8],ch
  41838b:	and    dl,bl
  41838d:	push   cs
  41838e:	nop
  41838f:	lahf   
  418390:	ret    0x9b40
  418393:	cld    
  418394:	arpl   WORD PTR [ebp-0x3311177d],sp
  41839a:	cmp    BYTE PTR [ebp-0x5a],0xb8
  41839e:	es jecxz 0x418354
  4183a1:	dec    BYTE PTR [edi+ebp*8+0x62]
  4183a5:	xor    al,0x3f
  4183a7:	push   esp
  4183a8:	pop    ebx
  4183a9:	test   DWORD PTR [ebx+0x274367a0],esi
  4183af:	sbb    ecx,ebx
  4183b1:	pop    ebp
  4183b2:	cmp    eax,0x450e2217
  4183b7:	ins    DWORD PTR es:[edi],dx
  4183b8:	or     edi,DWORD PTR [ebx-0x5b66e6ba]
  4183be:	ficomp DWORD PTR [ebp+0x53]
  4183c1:	mov    cl,0xe7
  4183c3:	cmp    eax,0xf13ef70b
  4183c8:	mov    ds:0x807292fd,eax
  4183cd:	cwde   
  4183ce:	push   esi
  4183cf:	pop    eax
  4183d0:	pop    ss
  4183d1:	cmp    edx,esi
  4183d3:	add    DWORD PTR [edi],edx
  4183d5:	pop    ss
  4183d6:	push   0x71
  4183d8:	ss xchg esp,eax
  4183da:	ja     0x418443
  4183dc:	or     BYTE PTR [eax-0x3fd48df6],bl
  4183e2:	pop    ds
  4183e3:	or     eax,0xc6a3da0
  4183e8:	push   es
  4183e9:	cmp    DWORD PTR [edx+0x7f2a440a],ecx
  4183ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183f0:	xor    dh,BYTE PTR [esi+eiz*4-0x4c4dbb3c]
  4183f7:	sub    BYTE PTR gs:[edi-0x1d],dl
  4183fb:	mov    ch,0x29
  4183fd:	inc    esi
  4183fe:	pop    edi
  4183ff:	(bad)  
  418400:	test   al,0xf8
  418402:	ret    0xa067
  418405:	sub    bl,cl
  418407:	or     ch,BYTE PTR [ebx+0x2933a601]
  41840d:	in     al,dx
  41840e:	cli    
  41840f:	gs inc ebp
  418411:	aas    
  418412:	adc    al,0x56
  418414:	adc    al,0x4a
  418416:	sbb    ebp,ebx
  418418:	sti    
  418419:	in     eax,0xa6
  41841b:	push   edx
  41841c:	inc    esi
  41841e:	out    0x7b,eax
  418420:	mov    BYTE PTR [esi-0x4e],bh
  418423:	hlt    
  418424:	xchg   edi,eax
  418425:	pop    ecx
  418426:	pop    esi
  418427:	push   0x2062652e
  41842c:	fsub   QWORD PTR [edx-0x49]
  41842f:	rcr    esi,0x99
  418432:	jmp    0x488b:0xdb6d33b
  418439:	test   DWORD PTR gs:[ebp+0x53],esp
  41843d:	xor    eax,0x9f2b93ca
  418442:	mov    al,0xca
  418444:	mov    al,0xf7
  418446:	aam    0xaf
  418448:	sub    al,0x8e
  41844a:	aas    
  41844b:	xor    eax,0x5dff84e6
  418450:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418451:	jl     0x41840b
  418453:	xor    esp,DWORD PTR ds:0x93dea402
  418459:	aas    
  41845a:	popa   
  41845b:	jecxz  0x4183ed
  41845d:	into   
  41845e:	fistp  QWORD PTR [edi+0x251d0360]
  418464:	out    0x2e,eax
  418466:	rcl    BYTE PTR [edi],0xd
  418469:	and    ah,dl
  41846b:	dec    eax
  41846c:	pop    eax
  41846d:	xor    DWORD PTR [edx+ecx*2+0xec497ed],eax
  418474:	shl    DWORD PTR [edx+0x68],1
  418477:	mov    ds:0x2fd5e4f2,eax
  41847c:	in     eax,dx
  41847d:	xor    cl,cl
  41847f:	jo     0x418470
  418481:	jmp    0x593d5239
  418486:	aas    
  418487:	call   0x17dee65b
  41848c:	shr    ebp,1
  41848e:	push   ecx
  41848f:	mov    ch,0x57
  418491:	jmp    0x4184f4
  418493:	mov    ch,0xc0
  418495:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418496:	dec    edi
  418497:	loop   0x4184f5
  418499:	idiv   DWORD PTR [esi]
  41849b:	fwait
  41849c:	dec    edi
  41849d:	je     0x4184d9
  41849f:	scas   eax,DWORD PTR es:[edi]
  4184a0:	add    ecx,0x663fde20
  4184a6:	sub    al,0x62
  4184a8:	inc    ebx
  4184a9:	int3   
  4184aa:	sub    al,0xd7
  4184ac:	pusha  
  4184ad:	mov    edx,0x5891ed08
  4184b2:	push   ss
  4184b3:	nop
  4184b4:	jno    0x41852a
  4184b6:	mov    WORD PTR [eax-0x3ff5d695],?
  4184bc:	ficomp WORD PTR [ecx+eiz*8]
  4184bf:	ins    BYTE PTR es:[edi],dx
  4184c0:	repz repnz dec ebx
  4184c3:	out    0x1c,eax
  4184c5:	sbb    DWORD PTR cs:[ecx],edi
  4184c8:	das    
  4184c9:	mov    DWORD PTR [esi+0x2],esp
  4184cc:	push   cs
  4184cd:	pop    ebx
  4184ce:	cmp    ax,0x2f21
  4184d2:	jge    0x41852c
  4184d4:	xchg   ecx,eax
  4184d5:	aas    
  4184d6:	push   esi
  4184d7:	fsub   st,st(7)
  4184d9:	into   
  4184da:	pop    ds
  4184db:	jmp    0x4184a8
  4184dd:	or     DWORD PTR [ecx],eax
  4184df:	(bad)
  4184e2:	jecxz  0x418500
  4184e4:	push   0xfd359d99
  4184e9:	lds    esp,FWORD PTR [edx+0x2b]
  4184ec:	pusha  
  4184ed:	jmp    0xcb7d24b
  4184f2:	or     esi,edi
  4184f4:	lods   eax,DWORD PTR gs:[esi]
  4184f6:	push   ecx
  4184f7:	(bad)  
  4184f8:	call   0x6e96:0xedd9cbeb
  4184ff:	out    dx,al
  418500:	inc    eax
  418501:	adc    BYTE PTR [ebx-0x408c2021],dl
  418507:	cmp    esp,0xffffff95
  41850a:	push   edi
  41850b:	popf   
  41850c:	lea    edi,[edx]
  41850e:	adc    BYTE PTR [edi-0x69f5784f],ah
  418514:	jb     0x418595
  418516:	outs   dx,BYTE PTR ds:[esi]
  418517:	sbb    edx,DWORD PTR [ebp-0xd]
  41851a:	cwde   
  41851b:	aam    0x50
  41851d:	pop    esp
  41851e:	popa   
  41851f:	cmp    DWORD PTR [edi-0x8dab46a],edx
  418525:	xor    al,0x2c
  418527:	stos   DWORD PTR es:[edi],eax
  418528:	mov    eax,ds:0x54d11f0f
  41852d:	jl     0x41854f
  41852f:	pop    edx
  418530:	xchg   ecx,eax
  418531:	jno    0x41855f
  418533:	cld    
  418534:	jmp    0xd8b6:0x7c42b807
  41853b:	sub    ch,ch
  41853d:	mov    DWORD PTR [ecx+0x7db11b8c],ebx
  418543:	push   cs
  418544:	(bad)  
  418545:	sbb    DWORD PTR [esi+0xa],eax
  418548:	popa   
  418549:	or     eax,0xe24c4b3b
  41854e:	mov    ebp,0xf7153f6c
  418553:	sahf   
  418554:	cs lahf 
  418556:	(bad)  
  418558:	mov    dh,0xec
  41855a:	sub    BYTE PTR [ebp-0x1e],bh
  41855d:	(bad)  
  41855e:	cs mov ah,0xb8
  418561:	js     0x4184f8
  418563:	jg     0x41851c
  418565:	idiv   DWORD PTR [esp+eax*1+0x38]
  418569:	mov    edx,0xa2c0bfad
  41856e:	les    ebp,FWORD PTR [esi+0x1e]
  418571:	gs (bad) 
  418573:	cmp    BYTE PTR [edi+esi*2+0x70b6776c],bh
  41857a:	fs aam 0x6e
  41857d:	mov    cl,0xde
  41857f:	or     eax,0x9303b5c3
  418584:	stc    
  418585:	cmp    BYTE PTR [edi-0x59],cl
  418588:	jnp    0x4185c1
  41858a:	and    BYTE PTR ds:0x54b2549b,0x6
  418591:	adc    ebx,esp
  418593:	xchg   ecx,eax
  418594:	jnp    0x418604
  418596:	xchg   ebp,eax
  418597:	sar    ecx,cl
  418599:	xchg   ebp,eax
  41859a:	in     eax,0x28
  41859c:	icebp  
  41859d:	ror    BYTE PTR [eax-0x6ad1132a],1
  4185a3:	xor    al,0x4c
  4185a5:	rcl    DWORD PTR [esi+0x535692e8],1
  4185ab:	enter  0xe8ca,0x9d
  4185af:	loope  0x4185f1
  4185b1:	xchg   ecx,eax
  4185b2:	mov    ds:0x766e92bf,eax
  4185b7:	cli    
  4185b8:	es call 0xdd8c8ad7
  4185be:	in     al,0xa9
  4185c0:	jb     0x41859e
  4185c2:	cmp    BYTE PTR [ecx-0x20],0x43
  4185c6:	aad    0xc2
  4185c8:	test   eax,0x59a14e09
  4185cd:	fcom   QWORD PTR [ecx]
  4185cf:	rol    DWORD PTR [esp+esi*4+0x34],cl
  4185d3:	dec    ecx
  4185d4:	mov    bl,0x5a
  4185d6:	cmp    DWORD PTR [eax],0xffffffb6
  4185d9:	sub    BYTE PTR [ebp+0x3c],dh
  4185dc:	mov    ah,0xcf
  4185de:	mov    bl,0x27
  4185e0:	sbb    cl,bl
  4185e2:	lods   eax,DWORD PTR ds:[esi]
  4185e3:	inc    esi
  4185e4:	ror    DWORD PTR [esi],0x72
  4185e7:	ins    DWORD PTR es:[edi],dx
  4185e8:	out    0x91,eax
  4185ea:	mov    cl,dl
  4185ec:	sbb    edi,edi
  4185ee:	sahf   
  4185ef:	mov    ds:0x1d450b3b,eax
  4185f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185f5:	pop    esp
  4185f6:	inc    edi
  4185f7:	in     al,dx
  4185f8:	fwait
  4185f9:	jb     0x4185b4
  4185fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185fc:	push   ecx
  4185fd:	(bad)
  418601:	stos   DWORD PTR es:[edi],eax
  418602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418603:	mov    WORD PTR [edx],?
  418605:	dec    ecx
  418606:	jne    0x4185a2
  418608:	stos   BYTE PTR es:[edi],al
  418609:	mov    dl,0x78
  41860b:	(bad)  
  41860d:	fidiv  DWORD PTR [edx-0x9a8b0aa]
  418613:	repz jge 0x418680
  418616:	add    eax,0xee570f42
  41861b:	mov    edi,0x490b831d
  418620:	sub    al,BYTE PTR [esi-0x76]
  418623:	cmp    ch,BYTE PTR [ebp+0x4a]
  418626:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  418628:	inc    ebp
  418629:	ja     0x418624
  41862b:	or     DWORD PTR [eax],edx
  41862d:	pop    ebx
  41862e:	leave  
  41862f:	bound  esp,QWORD PTR [ebx-0x30090763]
  418635:	repnz add BYTE PTR [edx-0x20],bh
  418639:	ins    BYTE PTR es:[edi],dx
  41863a:	aas    
  41863b:	icebp  
  41863c:	mov    esi,0xfa36bc83
  418642:	repz jo 0x41868f
  418645:	push   ecx
  418646:	rcr    DWORD PTR [edi+ebx*4-0x47995dd9],0xaa
  41864e:	push   es
  41864f:	cmc    
  418650:	rcl    BYTE PTR [edi],0x2c
  418653:	or     eax,0x4390904d
  418658:	mov    eax,0x32882fcc
  41865d:	popf   
  41865e:	into   
  41865f:	and    eax,0x294d738e
  418664:	cdq    
  418665:	pop    ebx
  418666:	jge    0x418694
  418668:	or     eax,0xb0f9ab1d
  41866d:	pop    ebp
  41866e:	jo     0x418609
  418670:	jns    0x418654
  418672:	add    eax,0x2e31dafb
  418677:	pop    edx
  418678:	shr    DWORD PTR ds:0x7a2dea38,0xf3
  41867f:	data16 ror BYTE PTR [edx],cl
  418682:	dec    edi
  418683:	ror    esi,1
  418685:	dec    ecx
  418686:	push   ecx
  418687:	add    BYTE PTR [ebx-0x44],bh
  41868a:	pusha  
  41868b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41868c:	inc    esi
  41868d:	mov    eax,ds:0x6bad79e5
  418692:	mov    ds:0x2e09f5b2,al
  418697:	adc    esp,eax
  418699:	jge    0x418711
  41869b:	adc    dh,ch
  41869d:	sub    al,0xf7
  41869f:	sub    eax,0x2af1d17d
  4186a4:	scas   eax,DWORD PTR es:[edi]
  4186a5:	rol    DWORD PTR [edx+0xaf64c3c],0xc9
  4186ac:	dec    edi
  4186ad:	inc    esp
  4186ae:	add    cl,dh
  4186b0:	in     al,dx
  4186b1:	jecxz  0x4186f0
  4186b3:	fld    TBYTE PTR [edx+eax*8-0x10da06ec]
  4186ba:	cmp    al,0x26
  4186bc:	xor    eax,0x435a078f
  4186c1:	or     esp,DWORD PTR [esi-0x237f4622]
  4186c7:	pop    ebp
  4186c8:	retf   0xbc95
  4186cb:	jg     0x41871c
  4186cd:	adc    ecx,DWORD PTR [eax+ebp*4-0xd993453]
  4186d4:	jmp    0x48403fa2
  4186d9:	test   eax,0x7b336e68
  4186de:	sbb    al,0xe4
  4186e0:	lds    ebp,FWORD PTR [edi+edi*1+0x58]
  4186e4:	arpl   WORD PTR [edi+0x57a1d74c],dx
  4186ea:	cmp    eax,0xf50f5efb
  4186ef:	pop    esi
  4186f0:	add    BYTE PTR [ebx+0x6115e21c],ch
  4186f6:	clc    
  4186f7:	outs   dx,DWORD PTR ds:[esi]
  4186f8:	xlat   BYTE PTR ds:[ebx]
  4186f9:	add    al,0x1c
  4186fb:	repz in eax,dx
  4186fd:	adc    bh,BYTE PTR [edx]
  4186ff:	scas   eax,DWORD PTR es:[edi]
  418700:	or     al,0x2
  418702:	scas   al,BYTE PTR es:[edi]
  418703:	retf   
  418704:	clc    
  418705:	mov    eax,0xd0335a27
  41870a:	lea    edx,[edx+ebx*1+0x3272e0]
  418711:	mov    DWORD PTR [ebp-0xc],edx
  418714:	mov    edx,DWORD PTR [ebp-0x10]
  418717:	xor    edx,eax
  418719:	add    edx,esi
  41871b:	jne    0x40f646
  418721:	jmp    0x41abbe
  418726:	mov    ecx,DWORD PTR [ebp-0x14]
  418729:	mov    DWORD PTR [ebp+0x8],ecx
  41872c:	jmp    0x4187a5
  418731:	mov    ecx,DWORD PTR [ebp+0x8]
  418734:	mov    edx,DWORD PTR [ebp-0x8]
  418737:	xor    ecx,eax
  418739:	xor    edx,eax
  41873b:	sub    ecx,edx
  41873d:	sub    ecx,esi
  41873f:	xor    ecx,eax
  418741:	mov    DWORD PTR [ebp+0x8],ecx
  418744:	mov    ecx,DWORD PTR [ebp+0x8]
  418747:	mov    edx,DWORD PTR [ebp-0x58]
  41874a:	add    ecx,0x5708f8
  418750:	imul   ecx,edx
  418753:	mov    DWORD PTR [ebp-0x58],ecx
  418756:	mov    ecx,DWORD PTR [ebp+0x8]
  418759:	mov    edx,DWORD PTR [ebp-0x54]
  41875c:	add    ecx,0x64f8da
  418762:	or     ecx,edx
  418764:	mov    DWORD PTR [ebp-0x54],ecx
  418767:	mov    ecx,DWORD PTR [ebp+0x8]
  41876a:	mov    edx,DWORD PTR [ebp-0x50]
  41876d:	add    ecx,0x242ebed
  418773:	xor    ecx,edx
  418775:	mov    DWORD PTR [ebp-0x50],ecx
  418778:	mov    ecx,DWORD PTR [ebp+0x8]
  41877b:	mov    edx,DWORD PTR [ebp-0x4c]
  41877e:	add    ecx,edi
  418780:	and    ecx,edx
  418782:	mov    DWORD PTR [ebp-0x4c],ecx
  418785:	mov    ecx,DWORD PTR [ebp+0x8]
  418788:	mov    edx,DWORD PTR [ebp-0x48]
  41878b:	lea    ecx,[edx+ecx*1+0x241fc1f]
  418792:	mov    DWORD PTR [ebp-0x48],ecx
  418795:	mov    ecx,DWORD PTR [ebp+0x8]
  418798:	mov    edx,0xfa5e15e2
  41879d:	sub    edx,ecx
  41879f:	add    edx,DWORD PTR [ebp-0x44]
  4187a2:	mov    DWORD PTR [ebp-0x44],edx
  4187a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4187a8:	xor    ecx,eax
  4187aa:	add    ecx,esi
  4187ac:	jne    0x418731
  4187b2:	jmp    0x41abca
  4187b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4187ba:	mov    edx,DWORD PTR [ebp-0x8]
  4187bd:	xor    ecx,eax
  4187bf:	xor    edx,eax
  4187c1:	sub    ecx,edx
  4187c3:	sub    ecx,esi
  4187c5:	xor    ecx,eax
  4187c7:	mov    DWORD PTR [ebp+0x8],ecx
  4187ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4187cd:	mov    edx,DWORD PTR [ebp-0x58]
  4187d0:	jmp    0x41ab56
  4187d5:	sub    eax,0x97a551eb
  4187da:	fwait
  4187db:	lods   eax,DWORD PTR ds:[esi]
  4187dc:	fistp  DWORD PTR [edx]
  4187de:	pop    ecx
  4187df:	imul   DWORD PTR [ecx]
  4187e1:	imul   eax,eax,0xffffffb0
  4187e4:	int    0xeb
  4187e6:	xor    al,0x79
  4187e8:	jp     0x4187eb
  4187ea:	pop    edi
  4187eb:	jp     0x418867
  4187ed:	inc    ecx
  4187ee:	repnz (bad) 
  4187f1:	nop
  4187f2:	sar    DWORD PTR [edi-0x64],cl
  4187f5:	push   edx
  4187f6:	cmp    bl,BYTE PTR [edx+0x4f]
  4187f9:	jp     0x418811
  4187fb:	jno    0x4187a7
  4187fd:	shl    edi,1
  4187ff:	jmp    0xc0e2:0x7e71fd6e
  418806:	push   0xffffff9c
  418808:	jge    0x418802
  41880a:	aam    0x42
  41880c:	xor    BYTE PTR [edi],al
  41880e:	call   0x2a21:0x20cfc83f
  418815:	(bad)  
  418816:	jb     0x4187dc
  418818:	repz scas al,BYTE PTR es:[edi]
  41881a:	dec    ebx
  41881b:	lods   eax,DWORD PTR ds:[esi]
  41881c:	bound  esp,QWORD PTR [ebx]
  41881e:	cli    
  41881f:	push   eax
  418820:	push   ds
  418821:	add    DWORD PTR [ecx+0x566023c2],esi
  418827:	cmp    BYTE PTR [edx],0xb8
  41882a:	outs   dx,DWORD PTR ds:[esi]
  41882b:	es sub eax,0xa11abf0b
  418831:	xchg   esi,eax
  418832:	push   ds
  418833:	mov    DWORD PTR [edx],ecx
  418835:	mov    dh,0x75
  418837:	aas    
  418838:	iret   
  418839:	xchg   esi,eax
  41883a:	xchg   edi,eax
  41883b:	mov    esi,0xe8ab7212
  418840:	cmp    DWORD PTR [eax+0x7db005c3],edi
  418846:	cmp    eax,0x4d63e8a7
  41884b:	dec    ebx
  41884c:	dec    ebx
  41884d:	cli    
  41884e:	js     0x418812
  418850:	and    al,0xa8
  418852:	push   edx
  418853:	scas   al,BYTE PTR es:[edi]
  418854:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418855:	xor    al,0x4c
  418857:	out    dx,eax
  418858:	mov    edi,0x11cf01d9
  41885d:	stos   BYTE PTR es:[edi],al
  41885e:	ret    0xb20c
  418861:	lods   al,BYTE PTR ds:[esi]
  418862:	frstor [ebp+0x574ae0de]
  418868:	and    ebx,DWORD PTR [edx+0x49790aab]
  41886e:	cmp    eax,0x7152c288
  418873:	push   cs
  418874:	cmp    eax,0x7b6d3c56
  418879:	dec    esp
  41887a:	sub    edi,DWORD PTR [eax+0x7]
  41887d:	ja     0x418896
  41887f:	xlat   BYTE PTR ds:[ebx]
  418880:	(bad)  
  418881:	stc    
  418882:	js     0x4188ec
  418884:	pushf  
  418885:	mov    edi,0x75250b70
  41888a:	or     BYTE PTR [ecx-0x39],bl
  41888d:	add    BYTE PTR [esi],dh
  41888f:	aaa    
  418890:	ret    
  418891:	mov    ebx,0xca7165ac
  418896:	loopne 0x4188c7
  418898:	inc    ecx
  418899:	rol    BYTE PTR [ecx+edi*2],cl
  41889c:	int3   
  41889d:	or     bh,al
  41889f:	out    dx,eax
  4188a0:	jge    0x418860
  4188a2:	mov    BYTE PTR [ebx+0x5b],al
  4188a5:	sbb    edi,ebx
  4188a7:	mov    bh,0xe5
  4188a9:	jno    0x4188c1
  4188ab:	dec    esi
  4188ac:	fwait
  4188ad:	clc    
  4188ae:	mov    BYTE PTR [ebx+ecx*8+0x7d],ah
  4188b2:	cmc    
  4188b3:	js     0x418843
  4188b5:	dec    ebp
  4188b6:	push   esp
  4188b7:	fisttp QWORD PTR es:[ebp-0x23]
  4188bb:	or     al,0x12
  4188bd:	mov    bl,0x2e
  4188bf:	mov    dl,BYTE PTR [esi-0x5f]
  4188c2:	adc    DWORD PTR [edx+0x5d692169],edx
  4188c8:	pop    ecx
  4188c9:	inc    ecx
  4188ca:	sti    
  4188cb:	popa   
  4188cc:	adc    eax,0xeda09b8e
  4188d1:	cmp    ebx,0xbd261f07
  4188d7:	push   esi
  4188d8:	stos   DWORD PTR es:[edi],eax
  4188d9:	jecxz  0x4188d5
  4188db:	pop    edi
  4188dc:	outs   dx,DWORD PTR ds:[esi]
  4188dd:	enter  0x496b,0xd9
  4188e1:	shl    BYTE PTR [ebx-0xf58c49a],0xb2
  4188e8:	mov    ecx,0xc9ac5e6e
  4188ed:	scas   eax,DWORD PTR es:[edi]
  4188ee:	sbb    bl,BYTE PTR [esi]
  4188f0:	outs   dx,DWORD PTR ds:[esi]
  4188f1:	mov    BYTE PTR [eax-0x64e1efb1],dh
  4188f7:	stc    
  4188f8:	popf   
  4188f9:	sahf   
  4188fa:	repnz adc ch,al
  4188fd:	add    esp,DWORD PTR [ebx+esi*2+0x33]
  418901:	add    eax,0x968a02ba
  418906:	dec    edx
  418907:	mov    ds,WORD PTR [ebx+0x10]
  41890a:	loop   0x4188a5
  41890c:	fsubr  st(2),st
  41890e:	rcl    edi,0xd5
  418911:	sub    eax,0x55ee069c
  418916:	sbb    eax,DWORD PTR ds:0x8f51998
  41891c:	mov    esp,0xc0bacf11
  418921:	jbe    0x418932
  418923:	retf   0x32fc
  418926:	out    0xff,eax
  418928:	fisub  DWORD PTR [edi-0x79]
  41892b:	bound  esp,QWORD PTR [ebx]
  41892d:	loopne 0x418938
  41892f:	and    al,0xaf
  418931:	push   ebp
  418932:	pop    ds
  418933:	sub    DWORD PTR [edi],eax
  418935:	iret   
  418936:	inc    esp
  418937:	xchg   bh,bh
  418939:	push   0xffffffc0
  41893b:	pop    es
  41893c:	jb     0x4188d6
  41893e:	sahf   
  41893f:	dec    ecx
  418940:	je     0x41896c
  418942:	mov    eax,0x30223ab9
  418947:	repz mov cl,0xeb
  41894a:	stos   DWORD PTR es:[edi],eax
  41894b:	pop    edx
  41894c:	pop    esi
  41894d:	cli    
  41894e:	or     eax,0x18c6f6a1
  418953:	retf   0x9600
  418956:	mov    ch,0xb2
  418958:	mov    ecx,0x39d12fe9
  41895d:	dec    edi
  41895e:	in     al,0x74
  418960:	mov    cl,0xe0
  418962:	jne    0x41892e
  418964:	inc    ecx
  418965:	mov    ah,0xe7
  418967:	xchg   ebp,eax
  418968:	in     al,dx
  418969:	enter  0xa113,0xfe
  41896d:	repz ja 0x4188fd
  418970:	sahf   
  418971:	cmp    eax,0xddd7b372
  418976:	jp     0x418974
  418978:	jns    0x4189ac
  41897a:	hlt    
  41897b:	fsubr  DWORD PTR [esi-0x31]
  41897e:	outs   dx,BYTE PTR ds:[esi]
  41897f:	mov    al,ds:0x1b402722
  418984:	push   cs
  418985:	mov    al,0x34
  418987:	out    0x7e,al
  418989:	mov    eax,ds:0x75f8cf1
  41898e:	test   bl,dl
  418990:	ins    BYTE PTR es:[edi],dx
  418991:	xor    BYTE PTR [ebp+0x4e7d894b],dl
  418997:	ds mov cl,0xd8
  41899a:	les    ebx,FWORD PTR [eiz*8-0x3b45eaeb]
  4189a1:	inc    DWORD PTR [edx]
  4189a3:	or     esi,DWORD PTR [ebp-0x2]
  4189a6:	sahf   
  4189a7:	add    DWORD PTR [eax-0x1f117a18],esi
  4189ad:	jne    0x4189ea
  4189af:	pop    ebp
  4189b0:	mov    al,0xef
  4189b2:	sbb    bh,cl
  4189b4:	gs inc esi
  4189b6:	jns    0x418a16
  4189b8:	stos   DWORD PTR es:[edi],eax
  4189b9:	(bad)  
  4189ba:	mov    cl,0xda
  4189bc:	xchg   ebp,eax
  4189bd:	xlat   BYTE PTR ds:[ebx]
  4189be:	and    DWORD PTR [ebp+ecx*1-0x3d0aba75],esi
  4189c5:	call   0xcc5b:0x7a75da0c
  4189cc:	cdq    
  4189cd:	aaa    
  4189ce:	xchg   ebx,eax
  4189cf:	pop    ds
  4189d0:	ins    BYTE PTR es:[edi],dx
  4189d1:	mov    cl,0x7b
  4189d3:	jns    0x4189f6
  4189d5:	sub    edi,DWORD PTR [edx-0x22]
  4189d8:	push   edx
  4189d9:	jns    0x418a18
  4189db:	mov    dl,0x5e
  4189dd:	in     al,dx
  4189de:	sbb    eax,0x11681014
  4189e3:	sbb    edi,ebx
  4189e5:	data16 hlt 
  4189e7:	jmp    0xa565:0xe28a31a6
  4189ee:	out    dx,eax
  4189ef:	fiadd  DWORD PTR gs:[ebx]
  4189f2:	sub    DWORD PTR [ebp+0x3ade5f6e],edx
  4189f8:	mov    BYTE PTR [ecx-0x1d],ah
  4189fb:	sub    BYTE PTR [edi-0x69ff0e5c],ch
  418a01:	repz scas al,BYTE PTR es:[edi]
  418a03:	xchg   ebp,eax
  418a04:	test   BYTE PTR [ecx+0x4c],ch
  418a07:	bound  esp,QWORD PTR [edi-0x370e07a2]
  418a0d:	inc    esp
  418a0e:	or     al,BYTE PTR [ebp-0x7ca98da2]
  418a14:	push   ebx
  418a15:	lods   al,BYTE PTR ds:[esi]
  418a16:	(bad)  
  418a17:	mov    edi,DWORD PTR [esi]
  418a19:	adc    BYTE PTR [ebx],al
  418a1b:	scas   al,BYTE PTR es:[edi]
  418a1c:	push   cs
  418a1d:	clc    
  418a1e:	fwait
  418a1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a20:	jge    0x4189b2
  418a22:	xor    ecx,DWORD PTR [ebx+0x3dfb0068]
  418a28:	xchg   ebx,eax
  418a29:	ja     0x418a6b
  418a2b:	repnz sub eax,0x850a7f9b
  418a32:	into   
  418a33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a34:	mov    dl,0x9a
  418a36:	ror    BYTE PTR [eax],cl
  418a38:	mov    dl,0xe8
  418a3a:	imul   ebx,DWORD PTR [edx-0x667d5fc6],0x5f74be0a
  418a44:	adc    cl,BYTE PTR [esi-0x30]
  418a47:	mov    al,ds:0x30077330
  418a4c:	pop    ecx
  418a4d:	mov    ch,0x6e
  418a4f:	xchg   BYTE PTR es:[ebp-0x33],bh
  418a53:	pop    ecx
  418a54:	xor    DWORD PTR [ebp+0x5d30ccbc],ecx
  418a5a:	ret    0x4d6e
  418a5d:	adc    al,0x1a
  418a5f:	and    al,0xf1
  418a61:	pop    ss
  418a62:	aas    
  418a63:	rol    ch,cl
  418a65:	mov    BYTE PTR [eax-0x334257dd],bl
  418a6b:	add    BYTE PTR [ecx],bh
  418a6d:	stc    
  418a6e:	clc    
  418a6f:	lahf   
  418a70:	or     ch,ch
  418a72:	lods   eax,DWORD PTR ds:[esi]
  418a73:	movsx  edi,BYTE PTR [ebx]
  418a76:	jb     0x418a07
  418a78:	pop    eax
  418a79:	sbb    DWORD PTR [edi],eax
  418a7b:	mov    ebx,0x5413b4ac
  418a80:	jmp    0xd452:0xdfa3cc61
  418a87:	mov    ch,0x15
  418a89:	mov    BYTE PTR [ebp+0x4f5f51fd],al
  418a8f:	dec    edi
  418a90:	mov    edx,0x1b024be5
  418a95:	push   edx
  418a96:	sbb    al,0xb
  418a98:	mov    edi,0x91c64187
  418a9d:	mov    bh,0x86
  418a9f:	dec    ecx
  418aa0:	mov    esi,0xc531d6b3
  418aa5:	lods   eax,DWORD PTR ds:[esi]
  418aa6:	repz fstp TBYTE PTR [edi-0x7e]
  418aaa:	js     0x418a8b
  418aac:	fsub   QWORD PTR [ecx+edx*2+0x602897b2]
  418ab3:	sub    BYTE PTR [ebx+0x1b],bl
  418ab6:	sub    BYTE PTR [ecx+0x1dc8b0be],dh
  418abc:	inc    esp
  418abd:	jmp    0x418b14
  418abf:	mov    edi,0x40aebe5b
  418ac4:	mov    WORD PTR [edx-0x58fcdb78],ds
  418aca:	mov    dh,0x78
  418acc:	mov    edi,0xa3c793fe
  418ad1:	fcomip st,st(5)
  418ad3:	jle    0x418ad4
  418ad5:	dec    esi
  418ad6:	or     DWORD PTR [ebp+0x3972ccba],esi
  418adc:	adc    bl,BYTE PTR [ebp+0x44]
  418adf:	or     DWORD PTR [ecx+edx*1],eax
  418ae2:	push   ebp
  418ae3:	fidivr WORD PTR [edi+0x68]
  418ae6:	fld    DWORD PTR ds:[ecx-0x5c]
  418aea:	push   ecx
  418aeb:	enter  0x8753,0xb2
  418aef:	in     eax,dx
  418af0:	cmp    bl,ah
  418af2:	js     0x418afb
  418af4:	es int 0xb2
  418af7:	adc    dh,BYTE PTR [eax]
  418af9:	dec    edi
  418afa:	test   BYTE PTR ds:0xd51ad190,cl
  418b00:	daa    
  418b01:	mov    dh,0x74
  418b03:	fsubr  QWORD PTR [ebx-0x4b8747e5]
  418b09:	jne    0x418b41
  418b0b:	xchg   edi,eax
  418b0c:	or     edi,DWORD PTR [ebx]
  418b0e:	pop    esi
  418b0f:	dec    ecx
  418b10:	pop    eax
  418b11:	repz imul DWORD PTR [ecx+ebp*2]
  418b15:	retf   
  418b16:	ret    
  418b17:	jmp    0x65a16b3c
  418b1c:	and    cl,ah
  418b1e:	adc    eax,ecx
  418b20:	push   esi
  418b21:	jae    0x418b32
  418b23:	shr    DWORD PTR [ecx+0x15],0x42
  418b27:	or     DWORD PTR [ebx],eax
  418b29:	cmp    al,BYTE PTR [eax-0x26]
  418b2c:	and    DWORD PTR [ecx-0x15cce35c],esp
  418b32:	test   DWORD PTR [edx-0x5b5dd551],edi
  418b38:	xor    bl,ch
  418b3a:	dec    edi
  418b3b:	and    dl,BYTE PTR [eax]
  418b3d:	push   ds
  418b3e:	arpl   WORD PTR [ebx-0x5909281],cx
  418b44:	inc    esi
  418b45:	push   edx
  418b46:	xchg   edi,eax
  418b47:	mov    ds:0x1a50cc5,eax
  418b4c:	out    0x6c,al
  418b4e:	ja     0x418b48
  418b50:	bound  esp,QWORD PTR [eax-0x2a]
  418b53:	mov    al,0xf8
  418b55:	loop   0x418b30
  418b57:	xchg   DWORD PTR [eax],esi
  418b59:	cld    
  418b5a:	aam    0xba
  418b5c:	and    BYTE PTR [eax],0x7c
  418b5f:	push   edi
  418b60:	aaa    
  418b61:	inc    ecx
  418b62:	push   es
  418b63:	xchg   esp,eax
  418b64:	xor    eax,0xf55ada7d
  418b69:	cmp    BYTE PTR [eax],0xda
  418b6c:	int3   
  418b6d:	aas    
  418b6e:	xchg   esp,eax
  418b6f:	mov    ebx,0x3c17d7ea
  418b74:	aaa    
  418b75:	popa   
  418b76:	xchg   DWORD PTR [eax+0x708e8836],edx
  418b7c:	sub    ebx,esp
  418b7e:	div    esp
  418b80:	push   es
  418b81:	add    al,0xa3
  418b83:	js     0x418b0e
  418b85:	fxch   st(4)
  418b87:	adc    al,0x8c
  418b89:	pop    esp
  418b8a:	mov    al,0x10
  418b8c:	mov    ch,0xca
  418b8e:	and    cl,ah
  418b90:	lds    ebx,FWORD PTR [ecx]
  418b92:	sbb    edi,esp
  418b94:	cld    
  418b95:	pop    eax
  418b96:	xor    cl,BYTE PTR [esi+0x6331790]
  418b9c:	or     DWORD PTR [eax+0x6e3a7fc5],esi
  418ba2:	sar    DWORD PTR [edi],cl
  418ba4:	dec    esi
  418ba5:	(bad)  
  418ba6:	ja     0x418b63
  418ba8:	int3   
  418ba9:	jge    0x418b4d
  418bab:	lods   al,BYTE PTR ds:[esi]
  418bac:	cmp    BYTE PTR [ecx+0x26],0xc9
  418bb0:	sar    bl,cl
  418bb2:	shl    BYTE PTR [edx+0x17],0x4
  418bb6:	cld    
  418bb7:	dec    edx
  418bb8:	push   edx
  418bb9:	xchg   ebp,eax
  418bba:	cmp    al,0xd9
  418bbc:	push   edi
  418bbd:	mov    ecx,0x836a3234
  418bc2:	jle    0x418bfd
  418bc4:	jecxz  0x418c40
  418bc6:	aad    0x40
  418bc8:	mov    ecx,ebp
  418bca:	shr    DWORD PTR [ecx-0x10717bbf],0xc
  418bd1:	clc    
  418bd2:	ins    DWORD PTR es:[edi],dx
  418bd3:	ja     0x418b55
  418bd5:	dec    edx
  418bd6:	adc    eax,0x2c54948b
  418bdb:	pop    edi
  418bdc:	ja     0x418b7f
  418bde:	bound  esp,QWORD PTR [edx]
  418be0:	add    DWORD PTR [eax],eax
  418be2:	ins    WORD PTR es:[edi],dx
  418be4:	in     al,0x90
  418be6:	xchg   ebx,eax
  418be7:	adc    eax,0x7ab36e59
  418bec:	cli    
  418bed:	push   es
  418bee:	mov    dh,0xbf
  418bf0:	push   ebp
  418bf1:	adc    al,0xe4
  418bf3:	or     ebx,DWORD PTR [ecx+0x65c1a5d3]
  418bf9:	dec    edi
  418bfa:	call   DWORD PTR ds:0xbc762699
  418c00:	in     eax,0xb0
  418c02:	lods   al,BYTE PTR ds:[esi]
  418c03:	pusha  
  418c04:	fst    QWORD PTR [edi-0x2b]
  418c07:	jns    0x418c57
  418c09:	push   edx
  418c0a:	lods   al,BYTE PTR ds:[esi]
  418c0b:	jmp    0x418c34
  418c0d:	or     ebp,DWORD PTR [ebx]
  418c0f:	jmp    0xc207:0x8f4e0e77
  418c16:	xchg   ecx,eax
  418c17:	pop    ds
  418c18:	push   eax
  418c19:	fdivp  st(0),st
  418c1b:	inc    ecx
  418c1c:	shl    BYTE PTR [ebx-0x38e73b71],0x93
  418c23:	rcl    ebx,1
  418c25:	icebp  
  418c26:	shl    DWORD PTR [eax-0x40],1
  418c29:	js     0x418c2e
  418c2b:	std    
  418c2c:	jecxz  0x418c7c
  418c2e:	enter  0x5caf,0x16
  418c32:	add    BYTE PTR [esi-0x65],ch
  418c35:	dec    esp
  418c36:	inc    ebx
  418c37:	jnp    0x418c1a
  418c39:	mov    edx,0x3d9b2e3a
  418c3e:	into   
  418c3f:	in     eax,dx
  418c40:	cmp    DWORD PTR [esi],0xb1d2d880
  418c46:	jmp    0x4141:0x17794d42
  418c4d:	les    eax,FWORD PTR [eax+eiz*2]
  418c50:	stc    
  418c51:	xchg   BYTE PTR [ebx+0x3303c453],dl
  418c57:	rol    DWORD PTR ds:0xda46e9ab,0x79
  418c5e:	loop   0x418c00
  418c60:	jmp    0xff8f:0xb05c3f04
  418c67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c68:	xor    BYTE PTR [edx+edi*4],bh
  418c6b:	vpmadcsswd xmm13,xmm4,XMMWORD PTR [ebx],xmm4
  418c71:	std    
  418c72:	add    al,0x76
  418c74:	scas   eax,DWORD PTR es:[edi]
  418c75:	sbb    DWORD PTR [ebx+0x6897804f],ecx
  418c7b:	dec    esp
  418c7c:	adc    esi,DWORD PTR [eax+0x6d]
  418c7f:	(bad)  
  418c80:	and    ah,BYTE PTR [edi]
  418c82:	jns    0x418c51
  418c84:	ss shr ch,cl
  418c87:	enter  0x1542,0xb2
  418c8b:	push   ebx
  418c8c:	dec    esp
  418c8d:	sbb    al,0xba
  418c8f:	jg     0x418c6d
  418c91:	xor    eax,0x2fe89b0b
  418c96:	inc    ebx
  418c97:	push   edx
  418c98:	sbb    eax,DWORD PTR [ecx-0x779ade16]
  418c9e:	jae    0x418cdd
  418ca0:	fbld   TBYTE PTR [esi-0x1e]
  418ca3:	pop    ebp
  418ca4:	ins    DWORD PTR es:[edi],dx
  418ca5:	push   eax
  418ca6:	cmc    
  418ca7:	outs   dx,DWORD PTR ds:[esi]
  418ca8:	sbb    bl,BYTE PTR [esi+0x463f0910]
  418cae:	and    esp,DWORD PTR [edi+0x113c4036]
  418cb4:	cmp    BYTE PTR [ebx+0x7b66bdcc],bh
  418cba:	retf   0x844
  418cbd:	ret    0x6542
  418cc0:	cld    
  418cc1:	jmp    0x16ec:0xdd462f99
  418cc8:	inc    edi
  418cc9:	push   edx
  418cca:	adc    DWORD PTR [esi-0x64205774],edi
  418cd0:	xchg   esi,eax
  418cd1:	das    
  418cd2:	pop    ebp
  418cd3:	inc    edi
  418cd4:	xchg   BYTE PTR [eax-0x62],ch
  418cd7:	mov    ss,WORD PTR [ebx-0x2ce360f8]
  418cdd:	push   ebx
  418cde:	and    al,0xdd
  418ce0:	(bad)  
  418ce1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ce2:	rcr    DWORD PTR [eax],cl
  418ce4:	xchg   esi,eax
  418ce5:	ins    BYTE PTR es:[edi],dx
  418ce6:	leave  
  418ce7:	(bad)  
  418ce9:	mov    dh,BYTE PTR [ebp+0x3bb3f82a]
  418cef:	mov    edx,0x51c1fc5d
  418cf4:	sbb    BYTE PTR [ecx],ah
  418cf6:	out    0x7b,eax
  418cf8:	into   
  418cf9:	repnz add esi,DWORD PTR [edi-0x3f4ed8a1]
  418d00:	fisttp QWORD PTR [ebp-0x7]
  418d03:	dec    esi
  418d04:	xor    DWORD PTR [eax+0x1c],ebp
  418d07:	pop    ebx
  418d08:	stos   BYTE PTR es:[edi],al
  418d09:	adc    BYTE PTR [eax-0x1b289aea],bh
  418d0f:	jbe    0x418cac
  418d11:	cmp    DWORD PTR [edi],esp
  418d13:	inc    ecx
  418d14:	imul   esi,DWORD PTR [esi-0x56],0x4f
  418d18:	and    eax,0x86a682c2
  418d1d:	dec    eax
  418d1e:	xor    dl,bl
  418d20:	iret   
  418d21:	and    BYTE PTR [ecx-0x38],bh
  418d24:	add    bl,BYTE PTR [ebx+0x28]
  418d27:	pop    es
  418d28:	repnz mov bl,0x2c
  418d2b:	dec    esi
  418d2c:	jnp    0x418cfd
  418d2e:	daa    
  418d2f:	stos   DWORD PTR es:[edi],eax
  418d30:	cmp    al,bl
  418d32:	addr16 jne 0x418dae
  418d35:	mov    al,dl
  418d37:	pop    esp
  418d38:	xor    ecx,esp
  418d3a:	daa    
  418d3b:	cmp    al,0x1e
  418d3d:	jns    0x418ce2
  418d3f:	test   BYTE PTR [ebp+0x7c],bl
  418d42:	dec    ecx
  418d43:	jmp    0x9a0c0b1e
  418d48:	pop    esp
  418d49:	cmp    al,0xc8
  418d4b:	sub    ecx,esi
  418d4d:	outs   dx,BYTE PTR ds:[esi]
  418d4e:	xchg   esi,eax
  418d4f:	push   ebp
  418d50:	cmp    DWORD PTR [ebp+0x15c44fd3],edi
  418d56:	retf   
  418d57:	clc    
  418d58:	fisub  WORD PTR [ecx]
  418d5a:	std    
  418d5b:	xchg   ebx,eax
  418d5c:	mov    ah,0x22
  418d5e:	mov    ds:0x8963f6d3,al
  418d63:	add    edi,DWORD PTR [eax+0x5b]
  418d66:	xchg   esp,eax
  418d67:	sbb    esp,DWORD PTR [ebp+0x6c]
  418d6a:	(bad)  
  418d6b:	or     al,al
  418d6d:	fld1   
  418d6f:	call   DWORD PTR [edx]
  418d71:	mov    al,0xaf
  418d73:	jns    0x418d61
  418d75:	jmp    FWORD PTR [eax+0x1838b1a1]
  418d7b:	jae    0x418ddb
  418d7d:	shl    DWORD PTR [edi],0xa3
  418d80:	sti    
  418d81:	sub    bh,BYTE PTR [esp+ebp*8+0x5ba256c3]
  418d88:	repz adc DWORD PTR [ebx+0x2b91dfba],esi
  418d8f:	sub    eax,0x85448946
  418d94:	sbb    ch,BYTE PTR [eax+0xf2237d1]
  418d9a:	(bad)
  418d9f:	test   DWORD PTR [ebp+0x33],eax
  418da2:	lea    edx,[edi]
  418da4:	cmp    al,bh
  418da6:	fwait
  418da7:	lds    esi,FWORD PTR ds:0x98cf4a33
  418dad:	popa   
  418dae:	test   DWORD PTR ds:0xa9c3b8f6,esi
  418db4:	cmovo  esi,DWORD PTR [ecx]
  418db7:	dec    ebx
  418db8:	mov    esi,0x2624a96f
  418dbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dbe:	xlat   BYTE PTR ds:[ebx]
  418dbf:	xor    bl,BYTE PTR [ebx+edi*1+0x61]
  418dc3:	loop   0x418d68
  418dc5:	pop    esi
  418dc6:	lock in eax,dx
  418dc8:	sbb    al,0xb2
  418dca:	(bad)  
  418dcb:	cmp    al,0x6d
  418dcd:	add    DWORD PTR [esi+0x59],esp
  418dd0:	push   edx
  418dd1:	add    eax,DWORD PTR [ebx-0xddcfb90]
  418dd7:	adc    eax,0xe1d6fca
  418ddc:	iret   
  418ddd:	ret    
  418dde:	jb     0x418dde
  418de0:	lea    ebx,[edi+0x7d27fef2]
  418de6:	jle    0x418e34
  418de8:	pushf  
  418de9:	rcr    esp,cl
  418deb:	cwde   
  418dec:	xor    al,0xf1
  418dee:	daa    
  418def:	test   BYTE PTR [ebx],ah
  418df1:	pop    ecx
  418df2:	cmp    DWORD PTR [ebx+0x57],eax
  418df5:	loop   0x418dfb
  418df7:	pop    ebx
  418df8:	sbb    DWORD PTR [edi+0x19],esi
  418dfb:	xor    al,BYTE PTR [edi-0x6]
  418dfe:	jno    0x418e5c
  418e00:	mov    ds:0xe8bbdbb0,al
  418e05:	jmp    0x418e11
  418e07:	mov    dh,0x2c
  418e09:	or     BYTE PTR [eax],al
  418e0b:	dec    ebp
  418e0c:	lahf   
  418e0d:	jle    0x418d90
  418e0f:	pop    edx
  418e10:	fistp  WORD PTR [ecx]
  418e12:	retf   0xcdb4
  418e15:	lods   al,BYTE PTR ds:[esi]
  418e16:	shl    esp,cl
  418e18:	xchg   edi,eax
  418e19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e1b:	jbe    0x418de4
  418e1d:	pop    edx
  418e1e:	and    dl,0xa5
  418e21:	(bad)
  418e25:	and    esi,0xce530294
  418e2b:	inc    ecx
  418e2c:	es cmp edx,esp
  418e2f:	iret   
  418e30:	and    bl,BYTE PTR cs:[ebp+0x6b]
  418e34:	xchg   ecx,eax
  418e35:	adc    BYTE PTR ds:0xf6ec1949,al
  418e3b:	and    ecx,eax
  418e3d:	xchg   ecx,eax
  418e3e:	lds    ecx,FWORD PTR [ebx-0x9]
  418e41:	jecxz  0x418de0
  418e43:	aam    0x58
  418e45:	push   edx
  418e46:	sub    al,0x85
  418e48:	stos   BYTE PTR es:[edi],al
  418e49:	int3   
  418e4a:	cmp    DWORD PTR [ebp+0x10],0x378e2480
  418e51:	add    ebp,ecx
  418e53:	or     ch,BYTE PTR [esi+0x1a]
  418e56:	mov    gs,WORD PTR [ecx+0x4c]
  418e59:	sbb    BYTE PTR [edx-0x637934f3],dl
  418e5f:	jb     0x418e56
  418e61:	xor    ah,bh
  418e63:	xlat   BYTE PTR ds:[ebx]
  418e64:	xchg   edx,eax
  418e65:	mov    DWORD PTR [edx],0x1b3d4aa4
  418e6b:	xchg   edi,eax
  418e6c:	push   eax
  418e6d:	test   BYTE PTR [esi+0x10],cl
  418e70:	ror    esi,cl
  418e72:	mov    eax,0xc49745b8
  418e77:	mov    al,ds:0xd8d5d817
  418e7c:	(bad)  
  418e7d:	add    al,BYTE PTR [esi+0xc]
  418e80:	xor    eax,0xe2f8f6c7
  418e85:	pushfw 
  418e87:	mov    ecx,cs
  418e89:	nop
  418e8a:	jno    0x253a446c
  418e90:	mov    dh,0x6
  418e92:	(bad)  
  418e93:	dec    eax
  418e94:	dec    ebp
  418e95:	outs   dx,DWORD PTR ds:[esi]
  418e96:	pop    esp
  418e97:	push   ebp
  418e98:	call   0x96ac1dce
  418e9d:	add    bh,bh
  418e9f:	adc    BYTE PTR [eax-0x15],dh
  418ea2:	fs inc ebp
  418ea4:	fiadd  WORD PTR [ecx+0x35]
  418ea7:	adc    cl,bh
  418ea9:	add    dh,bl
  418eab:	mov    bh,al
  418ead:	iret   
  418eae:	jnp    0x418ea7
  418eb0:	jne    0x418ef8
  418eb2:	pop    ebx
  418eb3:	hlt    
  418eb4:	retf   0x2d99
  418eb7:	or     dh,BYTE PTR [eax-0x68fea5b7]
  418ebd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ebe:	sbb    ebp,edx
  418ec0:	cmp    BYTE PTR [edi-0x2c52dd6c],0xcd
  418ec7:	rcr    BYTE PTR ds:0xc40f52ff,cl
  418ecd:	xchg   ebx,eax
  418ece:	inc    ebx
  418ecf:	fdivr  st,st(6)
  418ed1:	fld    QWORD PTR [edx]
  418ed3:	ror    DWORD PTR [esi+0x185fcca6],1
  418ed9:	leave  
  418eda:	aam    0xc4
  418edc:	mov    dh,0xf9
  418ede:	xchg   DWORD PTR [ecx-0x2399aed2],esp
  418ee4:	pop    ebx
  418ee5:	test   DWORD PTR [edi+0x7767a75],ecx
  418eeb:	cld    
  418eec:	push   es
  418eed:	lods   eax,DWORD PTR ds:[esi]
  418eee:	stos   DWORD PTR es:[edi],eax
  418eef:	push   esp
  418ef0:	call   0x4bee:0x6571a6f8
  418ef7:	das    
  418ef8:	inc    esi
  418ef9:	cmp    esp,DWORD PTR [edi+edx*2]
  418efc:	add    al,0x63
  418efe:	jns    0x418ea1
  418f00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f01:	push   DWORD PTR [eax-0x2a109b7]
  418f07:	mov    cl,0xb
  418f09:	adc    bh,bl
  418f0b:	jae    0x418f67
  418f0d:	retf   
  418f0e:	lahf   
  418f0f:	push   eax
  418f10:	mov    ds:0xc59a13f,al
  418f15:	popa   
  418f16:	nop
  418f17:	sbb    dl,bl
  418f19:	lds    ebp,FWORD PTR [esi-0x1f57113c]
  418f1f:	rcr    bl,0x6f
  418f22:	cli    
  418f23:	jb     0x418f8e
  418f25:	(bad)  
  418f26:	cmp    edi,DWORD PTR [ecx-0x2215b7ba]
  418f2c:	(bad)  
  418f2e:	inc    si
  418f30:	add    eax,0x4f1ab11a
  418f35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f36:	test   al,0x9b
  418f38:	or     eax,0x314566a
  418f3d:	add    eax,0x998febb8
  418f42:	stc    
  418f43:	xor    ebp,esi
  418f45:	stos   DWORD PTR es:[edi],eax
  418f46:	xor    eax,0x406bcd08
  418f4b:	mov    al,0x41
  418f4d:	jg     0x418f5f
  418f4f:	nop
  418f50:	rcr    BYTE PTR [edx],1
  418f52:	fcomp  st(4)
  418f54:	fmul   DWORD PTR [eax-0x253576ef]
  418f5a:	adc    bh,0xd5
  418f5d:	aas    
  418f5e:	scas   al,BYTE PTR es:[edi]
  418f5f:	jmp    0xb159:0xdf952cd9
  418f66:	(bad)  
  418f67:	or     DWORD PTR cs:[eax-0x4a6a8452],esp
  418f6e:	xor    ah,dl
  418f70:	adc    edi,DWORD PTR [ebx+eiz*1]
  418f73:	and    al,BYTE PTR [ebp-0xb]
  418f76:	test   al,0xc7
  418f78:	mov    ds:0x4fd894db,eax
  418f7d:	sub    dh,BYTE PTR [edi+0x75]
  418f80:	int    0x91
  418f82:	mov    WORD PTR [edi+0x69],ds
  418f85:	dec    esi
  418f86:	outs   dx,DWORD PTR ds:[esi]
  418f87:	int    0x71
  418f89:	add    bh,BYTE PTR fs:[edi]
  418f8c:	adc    esp,DWORD PTR [eax+0x70725549]
  418f92:	jbe    0x418f52
  418f94:	out    0xe0,eax
  418f96:	pop    ss
  418f97:	hlt    
  418f98:	addr16 mov ecx,0x65eab54c
  418f9e:	mov    ds,WORD PTR [ebx+0x76eda442]
  418fa4:	ffreep st(5)
  418fa6:	push   esp
  418fa7:	mov    edi,esi
  418fa9:	mov    bl,0x26
  418fab:	loope  0x418f9e
  418fad:	mov    fs,ecx
  418faf:	jns    0x418f42
  418fb1:	inc    ebp
  418fb2:	xchg   edx,eax
  418fb3:	fwait
  418fb4:	jmp    0xaedbd94d
  418fb9:	mov    BYTE PTR ds:0xf0eaee00,cl
  418fbf:	mov    WORD PTR [esi],?
  418fc1:	fld    QWORD PTR [ebx-0x2b]
  418fc4:	repnz mov ch,0xca
  418fc7:	aaa    
  418fc8:	cld    
  418fc9:	mov    bl,0x75
  418fcb:	mov    bh,0xd9
  418fcd:	aas    
  418fce:	(bad)  
  418fcf:	cs in  eax,dx
  418fd1:	out    dx,eax
  418fd2:	or     ah,ch
  418fd4:	lock cld 
  418fd6:	dec    eax
  418fd7:	sbb    eax,0x2e004036
  418fdc:	mov    esp,DWORD PTR [ecx+0x7809ff77]
  418fe2:	das    
  418fe3:	sub    ecx,DWORD PTR [esi+ebp*1]
  418fe6:	inc    ebx
  418fe7:	adc    DWORD PTR [ecx+0x6ab8100b],ecx
  418fed:	call   0xe6fa55c0
  418ff2:	xchg   BYTE PTR [ebx-0x4e],ch
  418ff5:	mov    ds:0x42c112b2,al
  418ffa:	xchg   edi,eax
  418ffc:	enter  0x11ce,0x91
  419000:	(bad)  
  419001:	ins    BYTE PTR es:[edi],dx
  419002:	or     eax,0x41c61658
  419007:	in     eax,0x6c
  419009:	mov    ds:0xe6a11940,eax
  41900e:	or     al,0x8d
  419010:	out    0x81,eax
  419012:	das    
  419013:	(bad)  
  419014:	(bad)  
  419016:	cdq    
  419017:	dec    edx
  419018:	ja     0x418fd2
  41901a:	rol    BYTE PTR [edx+0x761d6f73],0xed
  419021:	sub    BYTE PTR [ecx+0x22],0x42
  419025:	and    eax,0x33580a45
  41902a:	mov    ecx,0x2904c486
  41902f:	lock sub eax,0x1099a36f
  419035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419036:	xor    edx,ecx
  419038:	repnz mov esp,0xdf542d52
  41903e:	add    al,0x0
  419040:	hlt    
  419041:	pop    esp
  419042:	or     al,0xfc
  419044:	jg     0x419069
  419046:	in     eax,dx
  419047:	lea    edi,[ecx-0x9]
  41904a:	xchg   edx,eax
  41904b:	(bad)  
  41904c:	in     al,0x55
  41904e:	jo     0x419074
  419050:	mov    dl,0x31
  419052:	jmp    0x41902e
  419054:	dec    edi
  419055:	pop    es
  419056:	inc    edx
  419057:	daa    
  419058:	(bad)
  41905b:	test   al,0x92
  41905d:	rcr    DWORD PTR [ebx-0x792d88b2],1
  419063:	mov    dh,0x46
  419065:	ds sti 
  419067:	xor    al,0x75
  419069:	push   es
  41906a:	push   cs
  41906b:	cmc    
  41906c:	add    BYTE PTR [ebx-0x60d2af90],al
  419072:	outs   dx,BYTE PTR ds:[esi]
  419073:	xor    BYTE PTR [edi+0x10],bh
  419076:	test   DWORD PTR [eax+0x6d],eax
  419079:	ds ins BYTE PTR es:[edi],dx
  41907b:	xor    DWORD PTR [edi+0x52d68adc],ecx
  419081:	jb     0x419085
  419083:	adc    bh,BYTE PTR [eax+0x64c65a09]
  419089:	push   edx
  41908a:	(bad)  [ebp+0x7]
  41908d:	mov    eax,0x84da369e
  419092:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419093:	cs cmp eax,0x570548a9
  419099:	mov    dh,0xf3
  41909b:	fild   DWORD PTR [eax]
  41909d:	test   al,0x25
  41909f:	push   ecx
  4190a0:	add    edx,edx
  4190a2:	pop    edx
  4190a3:	cdq    
  4190a4:	jecxz  0x41906a
  4190a6:	cwde   
  4190a7:	mov    ah,0x42
  4190a9:	hlt    
  4190aa:	pusha  
  4190ab:	ins    BYTE PTR es:[edi],dx
  4190ac:	xchg   ebx,eax
  4190ad:	fmul   DWORD PTR [edx-0x3e1c1194]
  4190b3:	xor    eax,0x4549741
  4190b8:	arpl   WORD PTR [esi-0x25],ax
  4190bb:	clc    
  4190bc:	icebp  
  4190bd:	lea    ebp,cs:[ebx]
  4190c0:	sub    edx,ebp
  4190c2:	or     edi,DWORD PTR [eax+0x17]
  4190c5:	mov    ebp,DWORD PTR [eax+0x8]
  4190c8:	aaa    
  4190c9:	rcl    edx,0xe8
  4190cc:	mov    cl,0x8a
  4190cf:	add    ecx,DWORD PTR [ebx]
  4190d1:	test   BYTE PTR [ecx+0x36628588],cl
  4190d7:	mov    WORD PTR es:[edi-0x4d32a461],gs
  4190de:	mov    ah,0x74
  4190e0:	icebp  
  4190e1:	into   
  4190e2:	pop    edi
  4190e3:	sub    ch,BYTE PTR [edx+0x7502f3b7]
  4190e9:	imul   edi,DWORD PTR [edi+0x19],0x5bdbdccc
  4190f0:	mov    ebx,0x4f9aac65
  4190f5:	mov    ds:0x95bcb851,al
  4190fa:	jns    0x4190d1
  4190fc:	mov    edi,ebp
  4190fe:	jo     0x419103
  419100:	ficomp WORD PTR [edx+0x43267efb]
  419106:	and    esi,DWORD PTR ds:0x61c9339d
  41910c:	icebp  
  41910d:	xchg   DWORD PTR [ecx-0x3da0b092],ebx
  419113:	retf   0xd605
  419116:	mov    ebp,0xb3f0ef10
  41911b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41911c:	add    ecx,DWORD PTR [eax+0x64]
  41911f:	aaa    
  419120:	mov    ebx,ebp
  419122:	js     0x4190fd
  419124:	and    ah,bh
  419126:	pop    ebx
  419127:	or     al,bl
  419129:	cmp    edx,ecx
  41912b:	data16 cwd 
  41912e:	test   al,0xca
  419130:	outs   dx,BYTE PTR ds:[esi]
  419131:	mov    eax,ds:0xc7a60a0
  419136:	in     eax,dx
  419137:	or     al,0xc0
  419139:	outs   dx,BYTE PTR ds:[esi]
  41913a:	pop    ds
  41913b:	fld    TBYTE PTR [eax]
  41913d:	pop    eax
  41913e:	push   0xffffffd9
  419140:	addr16 dec ebp
  419142:	xchg   edx,eax
  419143:	gs pop ss
  419145:	adc    dl,BYTE PTR [ecx-0x3b1f6558]
  41914b:	jnp    0x41917a
  41914d:	inc    ebx
  41914e:	loopne 0x4190d8
  419150:	scas   al,BYTE PTR es:[edi]
  419151:	push   ebp
  419152:	imul   eax,DWORD PTR [edi-0x18c6e266],0x8ae354f9
  41915c:	ret    
  41915d:	and    DWORD PTR [ebp+ecx*8+0x47ea2a27],ebx
  419164:	add    al,0x57
  419166:	mov    es,edx
  419168:	and    eax,0x5ce3ee98
  41916d:	push   0xffffffab
  41916f:	retf   
  419170:	test   al,0x4f
  419172:	xor    al,0x46
  419174:	pop    edx
  419175:	xor    DWORD PTR [esi+edi*8],ecx
  419178:	or     BYTE PTR [esi-0x497091f5],bl
  41917e:	ror    BYTE PTR [edi+0x3a],cl
  419181:	inc    edx
  419182:	jge    0x41919e
  419184:	inc    edx
  419185:	scas   al,BYTE PTR es:[edi]
  419186:	and    dl,0x50
  419189:	cmp    esi,edi
  41918b:	les    ebx,FWORD PTR [eax]
  41918d:	inc    edx
  41918e:	repz (bad) 
  419190:	popf   
  419191:	mov    esi,0x5ebba638
  419196:	pop    esi
  419197:	xchg   ebp,eax
  419198:	add    eax,0xb6817c97
  41919d:	xlat   BYTE PTR ds:[ebx]
  41919e:	sbb    ah,BYTE PTR [edi-0x2f]
  4191a1:	xor    DWORD PTR [edi-0x51],ecx
  4191a4:	addr16 jns 0x419138
  4191a7:	mov    esp,0xcbc2cd99
  4191ac:	jmp    0x72b4:0x9a6f0fcb
  4191b3:	mov    dh,0x8a
  4191b5:	mov    ah,0x36
  4191b7:	das    
  4191b8:	ror    DWORD PTR [esi-0x7c1a89bf],1
  4191be:	add    eax,0x7f2dc35c
  4191c3:	mov    edx,0x903ac792
  4191c8:	mov    edx,0xea2c559b
  4191cd:	cwde   
  4191ce:	mov    gs,eax
  4191d0:	xor    cl,BYTE PTR [eax]
  4191d2:	scas   eax,DWORD PTR es:[edi]
  4191d3:	dec    edx
  4191d4:	inc    esi
  4191d5:	ds stos DWORD PTR es:[edi],eax
  4191d7:	mov    edx,0x432f1a37
  4191dc:	in     al,dx
  4191dd:	or     esi,DWORD PTR [eax]
  4191df:	sub    al,0x89
  4191e1:	dec    eax
  4191e2:	fst    st(0)
  4191e4:	jl     0x419229
  4191e6:	outs   dx,DWORD PTR ds:[esi]
  4191e7:	mov    ds:0x4d1f47ea,al
  4191ec:	push   ecx
  4191ed:	stc    
  4191ee:	push   esp
  4191ef:	imul   esp,DWORD PTR [ebx+ebp*2-0x651db96b],0xa63bb8c1
  4191fa:	in     al,dx
  4191fb:	(bad)  [ecx-0x23]
  4191fe:	fmulp  st(5),st
  419200:	xchg   ebx,eax
  419201:	in     al,dx
  419202:	xchg   edx,eax
  419203:	inc    ebx
  419204:	hlt    
  419205:	(bad)  
  419206:	ins    DWORD PTR es:[edi],dx
  419207:	sbb    DWORD PTR ds:0x7657173,0xe35d03c2
  419211:	jmp    0x5b8076cb
  419216:	mov    ch,0x8c
  419218:	jbe    0x4191f8
  41921a:	mov    ah,0xb7
  41921c:	lods   eax,DWORD PTR ds:[esi]
  41921d:	inc    ebp
  41921e:	push   eax
  41921f:	or     esi,DWORD PTR [edx-0x2f]
  419222:	adc    DWORD PTR [ecx+0x19],ebp
  419225:	jbe    0x41928f
  419227:	stc    
  419228:	mov    BYTE PTR [eax-0x43],dh
  41922b:	inc    edx
  41922c:	pop    ecx
  41922d:	and    BYTE PTR [ebx],dl
  41922f:	in     al,0xe0
  419231:	pop    edx
  419232:	out    dx,al
  419233:	sbb    esp,DWORD PTR [eax+0x15]
  419236:	ds pop esi
  419238:	mov    bh,0x73
  41923a:	or     al,BYTE PTR [ecx+0x60827381]
  419240:	call   FWORD PTR [ecx-0xc]
  419243:	ss out 0x8e,al
  419246:	ins    BYTE PTR es:[edi],dx
  419247:	(bad)  
  419248:	mov    ecx,0xf9a82134
  41924d:	stos   BYTE PTR es:[edi],al
  41924e:	push   cs
  41924f:	xchg   ecx,eax
  419250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419251:	jp     0x41920e
  419253:	hlt    
  419254:	and    BYTE PTR fs:[eax+ebp*8+0x19],al
  419259:	sbb    al,0xe7
  41925b:	sub    DWORD PTR [ecx+0x4791ca9e],edi
  419261:	cmp    eax,esi
  419263:	jl     0x41925c
  419265:	pusha  
  419266:	fdivr  DWORD PTR [ebx+ebx*4]
  419269:	jbe    0x41922a
  41926b:	pop    eax
  41926c:	mov    ebx,0xfa52de28
  419271:	xor    bl,BYTE PTR [ebx]
  419273:	push   edi
  419274:	js     0x4192a4
  419276:	sbb    al,0xe
  419278:	jg     0x4192a4
  41927a:	adc    eax,DWORD PTR [edx-0x8ed50e7]
  419280:	push   ebp
  419281:	repz xor dl,BYTE PTR [esi+0x3]
  419285:	imul   eax,DWORD PTR [edx],0xffffffde
  419288:	aam    0x3a
  41928a:	dec    eax
  41928b:	sub    ebx,DWORD PTR [eax-0x5c]
  41928e:	cli    
  41928f:	jecxz  0x4192ed
  419291:	sub    bl,0xf6
  419294:	sbb    BYTE PTR [eax],dl
  419296:	arpl   WORD PTR [edx],sp
  419298:	push   esi
  419299:	adc    DWORD PTR [ebx],edx
  41929b:	push   es
  41929c:	enter  0x7059,0xad
  4192a0:	xor    eax,0xc2370e6e
  4192a5:	dec    esp
  4192a6:	add    DWORD PTR [ebp+0x32],ebx
  4192a9:	jg     0xf05ddadb
  4192af:	lods   eax,DWORD PTR fs:[esi]
  4192b1:	shl    ecx,1
  4192b3:	jae    0x4192a7
  4192b5:	and    BYTE PTR [ecx+0x67],bh
  4192b8:	and    al,0xdd
  4192ba:	icebp  
  4192bb:	outs   dx,BYTE PTR ds:[esi]
  4192bc:	arpl   WORD PTR [eax-0xc],sp
  4192bf:	and    eax,0xa57e60ce
  4192c4:	or     eax,0xa8d1a9f2
  4192c9:	les    esi,FWORD PTR [eax]
  4192cb:	pop    ecx
  4192cc:	sub    al,0x10
  4192ce:	test   eax,0x81ba7edb
  4192d3:	mov    esp,0x4e3c3e92
  4192d8:	repnz mov al,ds:0xa63e09a8
  4192de:	sub    DWORD PTR [ebx+0x4db7d682],0xffffff89
  4192e5:	test   BYTE PTR [edx-0x6c],0x6a
  4192e9:	push   ebp
  4192ea:	inc    esi
  4192eb:	or     al,0xef
  4192ed:	jmp    0x6350:0xf38531cb
  4192f4:	ds cmp al,0x19
  4192f7:	(bad)  
  4192f8:	fild   DWORD PTR ds:0x7607a12e
  4192fe:	mov    ebx,0xf7fc1a16
  419303:	xchg   ecx,eax
  419304:	pop    ebp
  419305:	mov    ebx,0x53083ddb
  41930a:	and    BYTE PTR [edi+0x2],bl
  41930d:	jmp    0xc983dc02
  419312:	mov    ecx,0x69f52439
  419317:	adc    BYTE PTR [eax-0x34],ch
  41931a:	push   cs
  41931b:	mov    ?,edi
  41931d:	push   eax
  41931e:	fs jno 0x4192ca
  419321:	fmul   QWORD PTR [eax]
  419323:	cmp    BYTE PTR [edx],dl
  419325:	pop    es
  419326:	pop    eax
  419327:	fcom   QWORD PTR [eax+0x542fe531]
  41932d:	not    DWORD PTR [eax-0x3f]
  419330:	clc    
  419331:	xchg   edx,eax
  419332:	mov    BYTE PTR [ebp-0x3286756c],ch
  419338:	cmp    BYTE PTR [edx+eax*1-0x57],bh
  41933c:	frstor [edx]
  41933e:	stos   BYTE PTR es:[edi],al
  41933f:	cli    
  419340:	in     eax,0xa7
  419342:	or     eax,0xfd3194b2
  419347:	cli    
  419348:	mov    edi,0x2fae1a5e
  41934d:	cmc    
  41934e:	in     al,dx
  41934f:	push   eax
  419350:	pusha  
  419351:	(bad)  
  419352:	(bad)  [edx-0x3672fbc1]
  419358:	cmp    al,0xd5
  41935a:	aam    0x87
  41935c:	jns    0x41935d
  41935e:	jno    0x4193b5
  419360:	xor    ch,dh
  419362:	and    BYTE PTR [ebx+ecx*8+0x23],ah
  419366:	imul   edx,ebx,0x41
  419369:	push   ebx
  41936a:	pop    ebx
  41936b:	std    
  41936c:	push   DWORD PTR [esi+0x45086e5b]
  419372:	retf   0x68fa
  419375:	pop    edi
  419376:	xor    edi,DWORD PTR [edi+0x71]
  419379:	and    DWORD PTR [edx+0xd],eax
  41937c:	pop    edi
  41937d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41937e:	das    
  41937f:	add    al,0x16
  419381:	add    BYTE PTR [ebp-0x1d],cl
  419384:	jnp    0x41931f
  419386:	inc    BYTE PTR [eax]
  419388:	ds inc edx
  41938a:	shl    BYTE PTR [eax-0x2b],cl
  41938d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41938e:	xor    bl,BYTE PTR [ebx-0x4d49916c]
  419394:	mov    ?,WORD PTR [bx+si+0x33]
  419398:	clc    
  419399:	lock scas eax,DWORD PTR es:[edi]
  41939b:	and    DWORD PTR [edx+0x16],edi
  41939e:	add    ebp,DWORD PTR [ecx+0x4c7568dd]
  4193a4:	and    BYTE PTR [edi+0x16],ch
  4193a7:	popa   
  4193a8:	lock jno 0x4193e8
  4193ab:	imul   edi,edi,0x5a
  4193ae:	retf   0xb006
  4193b1:	shl    DWORD PTR [edi+0x25],1
  4193b4:	in     al,dx
  4193b5:	sub    ah,0x39
  4193b8:	add    al,0xe8
  4193ba:	out    0x69,al
  4193bc:	jbe    0x4193c4
  4193be:	mov    bh,0xb0
  4193c0:	mov    dl,0xa4
  4193c2:	pop    ebx
  4193c3:	call   0xcf44:0x77c287da
  4193ca:	lahf   
  4193cb:	sub    DWORD PTR [ebx+0x1cc7fa72],ebx
  4193d1:	push   ss
  4193d2:	xchg   edi,eax
  4193d3:	cmp    al,0x13
  4193d5:	xor    eax,0x3838c2e9
  4193da:	mov    al,ds:0x3214df26
  4193df:	adc    al,0x29
  4193e1:	add    ebp,edx
  4193e3:	aam    0xe4
  4193e5:	rcl    BYTE PTR [esi-0x2a],cl
  4193e8:	sub    BYTE PTR [eax],al
  4193ea:	lahf   
  4193eb:	aaa    
  4193ec:	test   DWORD PTR [edi+0x18b4e2ff],esi
  4193f2:	fwait
  4193f3:	hlt    
  4193f4:	push   cs
  4193f5:	sahf   
  4193f6:	inc    esp
  4193f7:	mov    edx,0xa8fc6416
  4193fc:	or     eax,0x54ec8494
  419401:	and    BYTE PTR [esi],bl
  419403:	jnp    0x419416
  419405:	sbb    bh,BYTE PTR [ebp+0x298d5eed]
  41940b:	add    al,0xae
  41940d:	lahf   
  41940e:	jb     0x41944d
  419410:	jecxz  0x4193b0
  419412:	arpl   WORD PTR [eax+0x4714c9d1],dx
  419418:	cmc    
  419419:	mov    DWORD PTR [esi],0xad5e1a1
  41941f:	out    0x7,eax
  419421:	add    esi,DWORD PTR [edi+0x2c]
  419424:	adc    edi,DWORD PTR [edi-0x1799b88c]
  41942a:	mov    ds:0x87827721,al
  41942f:	(bad)
  419432:	xor    BYTE PTR [edx],al
  419434:	cmp    ebx,DWORD PTR [eax-0x69]
  419437:	jp     0x4193f5
  419439:	adc    eax,0x86d880d7
  41943e:	and    BYTE PTR [eax],0xa7
  419441:	cmp    bh,BYTE PTR [esi+0x1ec6deb5]
  419447:	or     al,0x4b
  419449:	jns    0x41945a
  41944b:	cmp    BYTE PTR [eax-0x7dafa9f9],cl
  419451:	lock repz in al,0x6c
  419455:	cld    
  419456:	mov    dl,0x8e
  419458:	out    0x47,eax
  41945a:	add    al,0xcc
  41945c:	add    ebx,0x57
  41945f:	(bad)  
  419460:	mov    al,0xd5
  419462:	xchg   BYTE PTR [ebx],dh
  419464:	addr16 mov cl,0x1a
  419467:	mov    eax,ds:0x9b91ca4a
  41946c:	repnz inc edx
  41946e:	xchg   ecx,eax
  41946f:	jbe    0x41943c
  419471:	retf   0x6c9c
  419474:	xchg   edx,eax
  419475:	adc    DWORD PTR [ebx+0x73d78b5b],ebp
  41947b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41947c:	popf   
  41947d:	leave  
  41947e:	and    BYTE PTR [eax],0x11
  419481:	xor    eax,0x4bc146f
  419486:	das    
  419487:	push   esp
  419488:	mov    dl,0x7c
  41948a:	sbb    al,0x1f
  41948c:	and    DWORD PTR [ebp+0x4d3ec462],eax
  419492:	ror    DWORD PTR [esi+esi*1-0x2d],cl
  419496:	mov    eax,ds:0xc4c46410
  41949b:	aam    0x98
  41949d:	jno    0x4194c9
  41949f:	pop    edx
  4194a0:	rcl    DWORD PTR [ecx-0x47d0117d],cl
  4194a6:	and    edi,DWORD PTR [ebx-0x35]
  4194a9:	jmp    0x41949d
  4194ab:	mov    edi,0x22ac3095
  4194b0:	ins    DWORD PTR es:[edi],dx
  4194b1:	jnp    0x14ff9d02
  4194b7:	scas   eax,DWORD PTR es:[edi]
  4194b8:	inc    edi
  4194b9:	xor    esi,DWORD PTR [edi+0x2]
  4194bc:	loop   0x419493
  4194be:	pop    edx
  4194bf:	pop    ss
  4194c0:	inc    esi
  4194c1:	fimul  WORD PTR [ecx+0x7f0a9add]
  4194c7:	sbb    edi,DWORD PTR [edx+0x2]
  4194ca:	sbb    eax,0x23049ff0
  4194cf:	cmc    
  4194d0:	lods   eax,DWORD PTR ds:[esi]
  4194d1:	ins    DWORD PTR es:[edi],dx
  4194d2:	mov    ch,0x61
  4194d4:	fadd   DWORD PTR [edi+0x10b59a93]
  4194da:	stos   BYTE PTR es:[edi],al
  4194db:	inc    ecx
  4194dc:	cs or  al,0x1d
  4194df:	stc    
  4194e0:	test   al,0x61
  4194e2:	push   edi
  4194e3:	arpl   WORD PTR [ebx+0x65b3759],di
  4194e9:	xor    al,0x37
  4194eb:	outs   dx,BYTE PTR ds:[esi]
  4194ec:	or     BYTE PTR [ebp+0xd],bl
  4194ef:	add    edx,ecx
  4194f1:	pushw  cs
  4194f3:	sub    al,0xa9
  4194f5:	in     eax,0x28
  4194f7:	stos   DWORD PTR es:[edi],eax
  4194f8:	in     al,0xff
  4194fa:	js     0x4194d1
  4194fc:	pop    esp
  4194fd:	or     DWORD PTR ds:0x4fdae368,0x5c
  419504:	fnstsw WORD PTR [ebx-0x61a2bd4a]
  41950a:	sahf   
  41950b:	(bad)  
  41950c:	loopne 0x419589
  41950e:	daa    
  41950f:	sti    
  419510:	adc    DWORD PTR [esi-0x1],eax
  419513:	icebp  
  419514:	jns    0x419533
  419516:	sahf   
  419517:	lock jmp 0xf71f48ce
  41951d:	icebp  
  41951e:	or     esi,edi
  419520:	in     al,dx
  419521:	xlat   BYTE PTR ds:[ebx]
  419522:	adc    eax,0xd47cdf91
  419527:	std    
  419528:	leave  
  419529:	sbb    al,0xe6
  41952b:	stc    
  41952c:	push   cs
  41952d:	and    al,0x8a
  41952f:	sub    cl,ch
  419531:	inc    edi
  419532:	mov    eax,0x3acc4634
  419537:	mov    bl,0x1c
  419539:	aad    0xe
  41953b:	jle    0x41951c
  41953d:	inc    sp
  41953f:	fsub   st,st(6)
  419541:	adc    esp,DWORD PTR [edi+0x753259a8]
  419547:	std    
  419548:	cli    
  419549:	dec    esp
  41954a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41954b:	jle    0x41958f
  41954d:	push   edx
  41954e:	cmp    BYTE PTR [ebp-0x2dfce4ef],bl
  419554:	arpl   WORD PTR [esi],bx
  419556:	jbe    0x419563
  419558:	mov    WORD PTR [edx-0x381b00dd],gs
  41955e:	in     al,dx
  41955f:	mov    esp,0x41242758
  419564:	add    bh,BYTE PTR fs:[esi+0x691e0556]
  41956b:	lods   eax,DWORD PTR ss:[esi]
  41956d:	test   DWORD PTR [ecx-0x20],esi
  419570:	data16 data16 sub al,0x79
  419574:	dec    ebp
  419575:	fsub   st,st(5)
  419577:	and    al,0x99
  419579:	out    dx,eax
  41957a:	outs   dx,BYTE PTR ds:[esi]
  41957b:	repnz push ebp
  41957d:	mov    cl,0xef
  41957f:	mov    bh,0xcf
  419581:	or     bh,dl
  419583:	mov    edi,0xe3b04a2e
  419588:	aaa    
  419589:	cli    
  41958a:	ss js  0x419560
  41958d:	mov    ah,0x1b
  41958f:	dec    edi
  419590:	mov    ah,0x98
  419592:	or     DWORD PTR [eax+0x3b],ebx
  419595:	cmp    BYTE PTR [ebp+0x45e5bff0],dh
  41959b:	and    al,BYTE PTR [edi-0x3a127027]
  4195a1:	push   0x78eac34a
  4195a6:	xor    eax,0x47468c13
  4195ab:	cmp    esp,ebp
  4195ad:	idiv   edx
  4195af:	dec    eax
  4195b0:	push   ebp
  4195b1:	or     eax,0x4d6ca91
  4195b6:	test   BYTE PTR [ecx+eiz*4+0x54],0x83
  4195bb:	in     al,dx
  4195bc:	ins    DWORD PTR es:[edi],dx
  4195bd:	push   cs
  4195be:	mov    ebx,edx
  4195c0:	arpl   WORD PTR [edi+0x4],si
  4195c3:	mov    bh,0x52
  4195c5:	ss sbb al,0xf0
  4195c8:	shr    BYTE PTR [ebp+0x17c6f206],0x68
  4195cf:	xor    eax,0x3b962046
  4195d5:	sbb    eax,0x17226791
  4195da:	push   cs
  4195db:	or     BYTE PTR ds:0xb8ba401b,ch
  4195e1:	push   ebx
  4195e2:	xchg   ebx,eax
  4195e3:	leave  
  4195e4:	pop    esi
  4195e5:	push   ds
  4195e6:	sbb    ecx,DWORD PTR [esi]
  4195e8:	js     0x419584
  4195ea:	cmp    esi,DWORD PTR [ebx]
  4195ec:	adc    eax,0xca0b4cb8
  4195f1:	xchg   ebx,eax
  4195f2:	sbb    DWORD PTR [esi-0x5be271d3],esi
  4195f8:	aaa    
  4195f9:	pusha  
  4195fa:	jmp    0x2108ee31
  4195ff:	ror    BYTE PTR [esi+eiz*1-0x4a84a33],cl
  419606:	inc    esi
  419608:	stos   BYTE PTR es:[edi],al
  419609:	xchg   edi,eax
  41960a:	push   esp
  41960b:	pop    edi
  41960c:	jg     0x41965b
  41960e:	shr    DWORD PTR [eax+eax*8-0x45],1
  419612:	aaa    
  419613:	ror    DWORD PTR [ecx],0xe1
  419616:	stos   BYTE PTR es:[edi],al
  419617:	enter  0xa123,0xaf
  41961b:	mov    bh,bh
  41961d:	outs   dx,BYTE PTR ds:[esi]
  41961e:	push   eax
  41961f:	push   esi
  419620:	fwait
  419621:	icebp  
  419622:	xor    al,cl
  419624:	jno    0x41969d
  419626:	retf   
  419627:	ja     0x4195f1
  419629:	add    eax,0x227cd34a
  41962e:	repnz pop esi
  419630:	(bad)  
  419631:	pop    eax
  419632:	cwde   
  419633:	push   ebp
  419634:	rcr    DWORD PTR [ebx],cl
  419636:	jmp    0xefb0:0x19583a10
  41963d:	aaa    
  41963e:	pop    esp
  41963f:	xor    eax,0x18a002f2
  419644:	shl    esi,1
  419646:	daa    
  419647:	sub    eax,0xceedc4d0
  41964c:	std    
  41964d:	pop    ecx
  41964e:	push   0x9161f76c
  419653:	fwait
  419654:	int3   
  419655:	dec    ebx
  419656:	mov    ch,0x92
  419658:	jno    0x4195ef
  41965a:	jns    0x41963d
  41965c:	jno    0x4196db
  41965e:	pushf  
  41965f:	fs mov ah,0xf5
  419662:	call   0xa4a983f2
  419667:	cdq    
  419668:	add    al,0xc2
  41966a:	retf   0x5c38
  41966d:	dec    ecx
  41966e:	push   cs
  41966f:	push   ecx
  419670:	addr16 je 0x4196ce
  419673:	mov    dh,0xeb
  419675:	lock loope 0x4196da
  419678:	es add eax,ebp
  41967b:	cmc    
  41967c:	daa    
  41967d:	aas    
  41967e:	mov    es,esp
  419680:	cmc    
  419681:	arpl   WORD PTR [esi+ebx*2+0x69c0228],ax
  419688:	retf   0xdeea
  41968b:	shl    bh,cl
  41968d:	push   0x5fb8e42
  419692:	dec    edi
  419693:	jmp    0x826419be
  419698:	fcmovu st,st(2)
  41969a:	push   edx
  41969b:	fstp   DWORD PTR [esp+ebp*2]
  41969e:	mov    edi,0xa0246dd3
  4196a3:	cvtpi2ps xmm1,mm1
  4196a6:	retf   
  4196a7:	into   
  4196a8:	fld    TBYTE PTR [eax+ecx*4-0x53d9faad]
  4196af:	push   esp
  4196b0:	xchg   DWORD PTR [ebx],edi
  4196b2:	sub    eax,0x55739b69
  4196b7:	ds xchg esp,eax
  4196b9:	mov    WORD PTR [edi-0x62],?
  4196bc:	sahf   
  4196bd:	push   DWORD PTR [ebx+0x74]
  4196c0:	adc    al,0xa0
  4196c2:	or     cl,BYTE PTR [edx-0x114c5873]
  4196c8:	mov    ch,0x46
  4196ca:	xchg   esi,eax
  4196cb:	jno    0x4196fb
  4196cd:	shl    ah,0x67
  4196d0:	xchg   esp,eax
  4196d1:	or     dh,BYTE PTR [edi+0x5257f112]
  4196d7:	add    bh,dl
  4196d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196da:	inc    ecx
  4196db:	inc    esp
  4196dc:	sub    cl,BYTE PTR [edi+edi*4-0x6f7d0e67]
  4196e3:	sub    BYTE PTR [ecx-0x515cf83f],bl
  4196e9:	xor    eax,0x7685d6ed
  4196ee:	or     BYTE PTR [eax],bl
  4196f0:	fld    QWORD PTR [esi+0x39]
  4196f3:	(bad)  
  4196f5:	rcl    BYTE PTR [esp+edx*8-0x15d00cf7],0x6
  4196fd:	stos   BYTE PTR es:[edi],al
  4196fe:	sub    DWORD PTR [esi+0x5f],0xf77e8820
  419705:	jp     0x4196bc
  419707:	cmp    DWORD PTR [ebp-0x7f],ecx
  41970a:	cdq    
  41970b:	jmp    0x4196df
  41970d:	pop    ss
  41970e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41970f:	popf   
  419710:	pop    ebp
  419711:	mov    BYTE PTR [edx],ah
  419713:	xchg   ebp,eax
  419714:	push   edx
  419715:	dec    ecx
  419716:	or     esi,esp
  419718:	push   es
  419719:	or     al,0x7b
  41971b:	mov    BYTE PTR [edi+0x5da67d7d],ah
  419721:	dec    edi
  419722:	jb     0x41977d
  419724:	and    esp,DWORD PTR [esp+ebp*1]
  419727:	scas   al,BYTE PTR es:[edi]
  419728:	jnp    0x41970a
  41972a:	shr    BYTE PTR [eax+ecx*4],cl
  41972d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41972e:	jmp    0x419791
  419730:	pop    edx
  419731:	ins    BYTE PTR es:[edi],dx
  419732:	jecxz  0x4196e0
  419734:	sub    al,0x47
  419736:	push   esp
  419737:	mov    edi,0x9fd51818
  41973c:	fdivr  DWORD PTR [ebx]
  41973e:	test   DWORD PTR [edi],ebp
  419740:	sbb    DWORD PTR [edi-0x70464e5e],edi
  419746:	in     al,dx
  419747:	in     eax,dx
  419748:	mov    ecx,0x35084f75
  41974d:	push   esp
  41974e:	pusha  
  41974f:	push   0xffffffee
  419751:	loopne 0x419720
  419753:	sbb    eax,0x58c39cc7
  419758:	push   0x66
  41975a:	stos   DWORD PTR es:[edi],eax
  41975b:	pop    edi
  41975c:	push   ebp
  41975d:	sub    BYTE PTR ds:0xa83e1a92,cl
  419763:	fnsave [ecx+0x6b714efb]
  419769:	sub    DWORD PTR [ecx-0x2eccbf15],0xffffffe0
  419770:	adc    al,0x98
  419772:	inc    eax
  419773:	call   FWORD PTR cs:[ebp+0x4]
  419777:	dec    esi
  419778:	xchg   esi,eax
  419779:	mov    ch,0xd
  41977b:	in     eax,dx
  41977c:	sub    eax,DWORD PTR [esi]
  41977e:	aas    
  41977f:	lods   eax,DWORD PTR ds:[esi]
  419780:	push   edx
  419781:	mov    ah,0x93
  419783:	jg     0x419796
  419785:	add    eax,0xd94dd1cb
  41978a:	push   esp
  41978b:	pop    edi
  41978c:	jb     0x419796
  41978e:	hlt    
  41978f:	mov    esp,0x19b30b2e
  419794:	in     eax,0xd1
  419796:	jne    0x419807
  419798:	push   ecx
  419799:	aad    0xf1
  41979b:	adc    BYTE PTR [ecx-0x2c],0x48
  41979f:	popa   
  4197a0:	daa    
  4197a1:	mov    cl,0x2f
  4197a3:	adc    edi,edi
  4197a5:	enter  0x5d77,0x30
  4197a9:	imul   edi,DWORD PTR [ebx+0xcf4ca01],0xf
  4197b0:	xor    DWORD PTR [edx+0x69],esp
  4197b3:	stos   DWORD PTR es:[edi],eax
  4197b4:	div    BYTE PTR [ebp+0x59]
  4197b7:	dec    edi
  4197b8:	xchg   ebx,eax
  4197b9:	hlt    
  4197ba:	xchg   edi,eax
  4197bb:	rcr    edi,0x22
  4197be:	repz inc ecx
  4197c0:	sahf   
  4197c1:	sub    BYTE PTR [edx+eax*8],al
  4197c4:	add    eax,0xc8c87eea
  4197c9:	(bad)  
  4197ca:	jmp    FWORD PTR [ebp+0x1a]
  4197cd:	sti    
  4197ce:	lods   al,BYTE PTR ds:[esi]
  4197cf:	rcl    BYTE PTR [esi],1
  4197d1:	pusha  
  4197d2:	xchg   ebx,eax
  4197d3:	ss popa 
  4197d5:	ret    
  4197d6:	rol    BYTE PTR [edi+eiz*1],cl
  4197d9:	gs adc bl,dl
  4197dc:	pop    esp
  4197dd:	stc    
  4197de:	cli    
  4197df:	syscall 
  4197e1:	push   ecx
  4197e2:	mov    bh,0x13
  4197e4:	pop    ds
  4197e5:	cmp    al,BYTE PTR [edx+edi*2-0x7083cbc5]
  4197ec:	icebp  
  4197ed:	inc    esi
  4197ee:	add    al,0xda
  4197f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197f1:	aas    
  4197f2:	pop    esi
  4197f3:	fld    TBYTE PTR [ecx+esi*4+0x61]
  4197f7:	jl     0x419864
  4197f9:	mov    esp,0x6bcb105b
  4197fe:	out    dx,al
  4197ff:	push   eax
  419800:	push   edi
  419801:	bound  esp,QWORD PTR [esi]
  419803:	and    DWORD PTR [ebx+0x54],edx
  419806:	sub    DWORD PTR [ecx-0x91ccb83],ebx
  41980c:	shr    DWORD PTR [esi+0xf],0xe0
  419810:	mov    ds:0xae63348d,eax
  419815:	inc    edi
  419816:	mov    cl,0xb5
  419818:	fmul   QWORD PTR [edi]
  41981a:	(bad)  [edi+0x4a]
  41981d:	shr    edx,0x8b
  419820:	or     DWORD PTR [ebx+edx*8+0x6f],0xd2ee6b5d
  419828:	inc    esi
  419829:	sbb    BYTE PTR [esi+0x2d739daa],al
  41982f:	lds    ebx,FWORD PTR [ebx]
  419831:	scas   eax,DWORD PTR es:[edi]
  419832:	mov    eax,DWORD PTR [ecx]
  419834:	sti    
  419835:	fimul  WORD PTR [esi+0x5b]
  419838:	xchg   ecx,esp
  41983a:	mov    bl,BYTE PTR [edx+0x426ff098]
  419840:	adc    al,0xb0
  419842:	pop    ds
  419843:	mov    ebx,0x18a10584
  419848:	sbb    BYTE PTR [ebx+esi*1-0x2869f315],al
  41984f:	call   esp
  419851:	mul    DWORD PTR es:[edx+0x7f]
  419855:	pop    ebx
  419856:	gs in  eax,dx
  419858:	shl    BYTE PTR [eax-0x6f50c329],cl
  41985e:	in     eax,0xd1
  419860:	daa    
  419861:	sar    BYTE PTR [edx+0x4d058021],0x5a
  419868:	mov    dl,0x97
  41986a:	aam    0x12
  41986c:	and    dh,BYTE PTR [eax]
  41986e:	lock jns 0x4198a9
  419871:	sti    
  419872:	icebp  
  419873:	dec    edx
  419874:	jmp    0xcd2d:0x9231f057
  41987b:	test   BYTE PTR [esi],bh
  41987d:	jb     0x419863
  41987f:	adc    al,0x9f
  419881:	fs jnp 0x419850
  419884:	(bad)  
  419886:	mov    ds:0x3f10f15b,al
  41988b:	pop    es
  41988c:	add    cl,BYTE PTR ds:0x3563cd44
  419892:	mov    DWORD PTR [edi+0x68],edi
  419895:	sub    al,0x15
  419897:	jl     0x4198d4
  419899:	cmp    eax,0x14c846bc
  41989e:	call   0xa651:0x2e843ace
  4198a5:	dec    edi
  4198a6:	push   ds
  4198a7:	mov    ds:0xdd1ff1cb,eax
  4198ac:	leave  
  4198ad:	pop    edi
  4198ae:	ret    0x82de
  4198b1:	adc    BYTE PTR ds:0x7f9d336f,bl
  4198b7:	cli    
  4198b8:	rol    ecx,0x32
  4198bb:	stc    
  4198bc:	push   es
  4198bd:	mov    ah,0x13
  4198bf:	je     0x419856
  4198c1:	xchg   esp,eax
  4198c2:	ds jle 0x4198dc
  4198c5:	(bad)  
  4198c6:	and    dl,BYTE PTR [edx+0x342656c0]
  4198cc:	js     0x4198de
  4198ce:	imul   edx,DWORD PTR [ebx],0xffffff9e
  4198d1:	bound  ebx,QWORD PTR [esi+0x7ad2e536]
  4198d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198d8:	mov    DWORD PTR [edx+0x5910c6b1],edi
  4198de:	pop    ecx
  4198df:	mov    ebx,0xf9f20069
  4198e4:	or     DWORD PTR [ebp-0x52],0xdfdad3de
  4198eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198ec:	pop    edx
  4198ed:	mov    esi,0x8f37e24e
  4198f2:	shr    DWORD PTR ss:[ebx+0x58],cl
  4198f6:	pushf  
  4198f7:	test   BYTE PTR [eax],bl
  4198f9:	sub    esp,ebx
  4198fb:	daa    
  4198fc:	jecxz  0x41993e
  4198fe:	adc    BYTE PTR [edx+0x63d16c8e],0x60
  419905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419906:	aaa    
  419907:	sub    bl,BYTE PTR [esi+0x5f4f7d69]
  41990d:	inc    edx
  41990e:	scas   al,BYTE PTR es:[edi]
  41990f:	loopne 0x41998a
  419911:	pusha  
  419912:	out    0x65,eax
  419914:	xchg   esi,eax
  419915:	adc    ah,BYTE PTR [edx]
  419917:	aas    
  419918:	pop    esi
  419919:	jne    0x41993b
  41991b:	inc    edi
  41991c:	out    dx,eax
  41991d:	les    esp,FWORD PTR [esi+0x3c2c5cec]
  419923:	xor    esp,edi
  419925:	aas    
  419926:	es xor eax,0xdff5c27e
  41992c:	adc    eax,0x251c2847
  419931:	daa    
  419932:	and    ebp,DWORD PTR [ecx-0xb766622]
  419938:	int3   
  419939:	popf   
  41993a:	or     eax,0x7cc87054
  41993f:	add    eax,0x14ecad5c
  419944:	xor    eax,0xb4042f3e
  419949:	pushf  
  41994a:	cmc    
  41994b:	int    0x84
  41994d:	(bad)
  419952:	dec    esi
  419953:	cli    
  419954:	or     esi,DWORD PTR [ebp+0x7b]
  419957:	retf   0xa9a7
  41995a:	sub    BYTE PTR gs:[ebx+0x1e],dh
  41995e:	cs push edi
  419960:	in     al,dx
  419961:	pop    ss
  419962:	sbb    eax,0xff3cf986
  419967:	push   0x73
  419969:	adc    esi,ebx
  41996b:	push   edi
  41996c:	xor    DWORD PTR [edi+0x5d260fba],0x95ff6260
  419976:	ror    DWORD PTR [edi+edx*2-0x561bc749],1
  41997d:	std    
  41997e:	out    0xa0,al
  419980:	jge    0x4199c8
  419982:	pop    edx
  419983:	shl    BYTE PTR [eax+esi*4],1
  419986:	mov    WORD PTR [esi-0x32],ds
  419989:	jb     0x419981
  41998b:	adc    DWORD PTR [esi+eiz*8],esp
  41998e:	pop    ebp
  41998f:	sbb    al,0x17
  419991:	fist   WORD PTR [esi]
  419993:	dec    eax
  419994:	jmp    0xdeed9313
  419999:	arpl   WORD PTR [esi],si
  41999b:	int3   
  41999c:	adc    DWORD PTR [ecx-0x3b980692],ecx
  4199a2:	jmp    0x93e1:0xa360e6a9
  4199a9:	xor    eax,DWORD PTR [esp+edi*2+0x26]
  4199ad:	scas   eax,DWORD PTR es:[edi]
  4199ae:	mov    ds:0x3d188555,al
  4199b3:	test   eax,0x471a1092
  4199b8:	fsubr  DWORD PTR [ebx+0x56392c16]
  4199be:	test   ebx,0x2d258543
  4199c4:	jnp    0x4199d8
  4199c6:	outs   dx,BYTE PTR ds:[esi]
  4199c7:	xchg   esp,eax
  4199c8:	mov    ah,BYTE PTR [ecx+0x4097b8b]
  4199ce:	xor    edx,edx
  4199d0:	fs inc esp
  4199d2:	jecxz  0x41998d
  4199d4:	stos   BYTE PTR es:[edi],al
  4199d5:	(bad)  
  4199d6:	(bad)  
  4199da:	not    BYTE PTR [ecx-0x328563fc]
  4199e0:	pop    ebp
  4199e1:	mov    BYTE PTR [eax-0x51968109],dh
  4199e7:	xchg   esp,eax
  4199e8:	sbb    eax,0xf298475c
  4199ed:	in     al,0xfb
  4199ef:	push   ss
  4199f0:	pop    edi
  4199f1:	ins    DWORD PTR es:[edi],dx
  4199f2:	mov    al,0x1b
  4199f4:	xor    dl,BYTE PTR [edx]
  4199f6:	sbb    al,0x3a
  4199f8:	mov    eax,0x19476d15
  4199fd:	ins    DWORD PTR es:[edi],dx
  4199fe:	adc    BYTE PTR [edx],0x21
  419a01:	sbb    bl,BYTE PTR [edx+0x26]
  419a04:	push   0x4fe937ab
  419a09:	ja     0x4199f4
  419a0b:	aad    0x32
  419a0d:	das    
  419a0e:	ss cmp bl,al
  419a11:	adc    cl,bl
  419a13:	std    
  419a14:	push   ss
  419a15:	dec    edi
  419a16:	jo     0x419a69
  419a18:	mov    BYTE PTR [ebx+esi*1],al
  419a1b:	sti    
  419a1c:	push   esp
  419a1d:	fs call 0xa3ca:0x1493012b
  419a25:	jae    0x419aa4
  419a27:	sar    esp,1
  419a29:	loope  0x4199fe
  419a2b:	mov    ecx,0xb19ddde9
  419a30:	ret    
  419a31:	mov    edi,0x34c91aa
  419a36:	into   
  419a37:	daa    
  419a38:	jae    0x4199ba
  419a3a:	cmc    
  419a3b:	adc    DWORD PTR [edx-0x63a43d73],ebp
  419a41:	xchg   edi,eax
  419a42:	in     eax,0x94
  419a44:	lock popa 
  419a46:	xchg   edx,eax
  419a47:	mov    ds:0x93dab9b5,al
  419a4c:	cmp    eax,0x5245dad6
  419a51:	fimul  DWORD PTR [ebp+0x2c75693d]
  419a57:	adc    ch,BYTE PTR [edx]
  419a59:	cld    
  419a5a:	sbb    DWORD PTR [edx-0x22],edi
  419a5d:	retf   0x77c
  419a60:	or     al,0x5b
  419a62:	push   ebp
  419a63:	bound  edx,QWORD PTR [edi+edi*8+0x66]
  419a67:	sub    ebp,0xb4c4ca37
  419a6d:	sub    eax,0x8c810934
  419a72:	inc    esp
  419a73:	dec    ebp
  419a74:	jl     0x419ada
  419a76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a77:	mov    WORD PTR [ecx],ds
  419a79:	adc    eax,0xbf0fea0f
  419a7e:	inc    edi
  419a7f:	mov    eax,0xfe839264
  419a84:	fadd   DWORD PTR [ecx+0x18]
  419a87:	sub    esp,esp
  419a89:	inc    ebx
  419a8a:	jge    0x419af9
  419a8c:	jl     0x419a70
  419a8e:	std    
  419a8f:	rcr    DWORD PTR [eax],0xaa
  419a92:	mov    esi,0x21729cd9
  419a97:	add    BYTE PTR [ecx-0x38f05a40],cl
  419a9d:	fdivr  st,st(0)
  419a9f:	pop    esp
  419aa0:	adc    ch,BYTE PTR [ebx-0x4e]
  419aa3:	or     dl,BYTE PTR [ebx-0x5c]
  419aa6:	pop    ds
  419aa7:	fild   DWORD PTR [edi-0x3285d1b1]
  419aad:	(bad)  
  419aae:	repnz (bad) 
  419ab0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ab1:	inc    ecx
  419ab2:	ficom  WORD PTR [eax-0x2]
  419ab5:	or     DWORD PTR [esi+0xf],0xffffffbb
  419ab9:	inc    edx
  419aba:	mov    edx,DWORD PTR [edx+0x3ee087c8]
  419ac0:	pop    esp
  419ac1:	push   ebp
  419ac2:	test   DWORD PTR [esi-0x2d],edi
  419ac5:	mov    esi,0x75ff291a
  419aca:	mov    dl,BYTE PTR [edx-0x1299ecf5]
  419ad0:	test   DWORD PTR [esi+ebx*4-0xa],esi
  419ad4:	push   edx
  419ad5:	fucom  st(3)
  419ad7:	push   ecx
  419ad8:	sbb    eax,0x5a690abb
  419add:	dec    ecx
  419ade:	or     BYTE PTR [eax-0x25b01187],bh
  419ae4:	ss and al,0xcc
  419ae7:	ins    BYTE PTR es:[edi],dx
  419ae8:	adc    al,BYTE PTR [eax+0x4d]
  419aeb:	shl    DWORD PTR [esi+eax*2],0x6e
  419aef:	stos   BYTE PTR es:[edi],al
  419af0:	ins    DWORD PTR es:[edi],dx
  419af1:	xor    eax,0xf006053d
  419af6:	dec    esi
  419af7:	mov    ebx,0x33569c5
  419afc:	add    esp,DWORD PTR [edx-0x7b5c554b]
  419b02:	sahf   
  419b03:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  419b05:	fadd   DWORD PTR [ebx-0x34]
  419b08:	jb     0x419b69
  419b0a:	dec    ebx
  419b0c:	out    0x3,al
  419b0e:	int    0x76
  419b10:	fsubr  st(2),st
  419b12:	fsubr  QWORD PTR [esi-0xbbdb37f]
  419b18:	popf   
  419b19:	mov    bl,0x83
  419b1b:	(bad)  
  419b1c:	in     al,dx
  419b1d:	scas   al,BYTE PTR es:[edi]
  419b1e:	int    0x81
  419b20:	xor    al,0xa1
  419b22:	inc    edi
  419b23:	push   ecx
  419b24:	or     edx,esi
  419b26:	shl    DWORD PTR [eax-0x3d],0x9a
  419b2a:	leave  
  419b2b:	stc    
  419b2c:	add    BYTE PTR [ecx],dl
  419b2e:	cld    
  419b2f:	cmp    DWORD PTR [ecx-0x32],0x43
  419b33:	in     eax,0x63
  419b35:	fidiv  DWORD PTR [ebp+0x67]
  419b38:	cmp    al,dh
  419b3a:	cdq    
  419b3b:	ficomp DWORD PTR [ebx+0x737a756c]
  419b41:	nop
  419b42:	in     eax,dx
  419b43:	jg     0x419afb
  419b45:	add    al,0x4f
  419b47:	xchg   ebp,eax
  419b48:	push   ds
  419b49:	mov    bh,0x8a
  419b4b:	dec    ecx
  419b4c:	sbb    bl,BYTE PTR [ebp-0xd09a93c]
  419b52:	fisub  DWORD PTR [ebx+0x7f]
  419b55:	mov    ch,0x17
  419b57:	add    eax,ebp
  419b59:	lahf   
  419b5a:	jl     0x419b52
  419b5c:	jno    0x419b28
  419b5e:	clc    
  419b5f:	inc    ebp
  419b60:	jno    0x419b5d
  419b62:	sbb    DWORD PTR [bp+di-0x22],ebp
  419b66:	mov    DWORD PTR [eax+0x2ef31cdc],esi
  419b6c:	shl    DWORD PTR [esi+0x7c32f4],0xa3
  419b73:	jecxz  0x419bd6
  419b75:	lods   eax,DWORD PTR ds:[esi]
  419b76:	and    ecx,DWORD PTR [eax-0x62]
  419b79:	outs   dx,DWORD PTR ds:[esi]
  419b7a:	add    BYTE PTR [edi],cl
  419b7c:	aam    0xb8
  419b7e:	aam    0xbd
  419b80:	jno    0x419bb7
  419b82:	sbb    ecx,DWORD PTR [ebp+0x3a]
  419b85:	mov    WORD PTR [ebp-0x21c4e089],fs
  419b8b:	xor    edi,edx
  419b8d:	push   edx
  419b8e:	jp     0x419c0c
  419b90:	push   ecx
  419b91:	jno    0x419b4c
  419b93:	rcl    DWORD PTR [edx+0x23],0xdd
  419b97:	add    edi,0xffffff84
  419b9a:	mov    bh,0x28
  419b9c:	cmp    esi,DWORD PTR [edx]
  419b9e:	pop    edx
  419b9f:	sbb    al,0x4b
  419ba1:	sar    DWORD PTR [ebx-0x5a],1
  419ba4:	and    BYTE PTR [eax],al
  419ba6:	jbe    0x419b72
  419ba8:	xchg   esi,eax
  419ba9:	dec    edx
  419baa:	test   BYTE PTR [edx+ebx*8+0x34],bh
  419bae:	loope  0x419ba8
  419bb0:	mov    esp,DWORD PTR [ebx-0x57]
  419bb3:	add    ch,bh
  419bb5:	test   ebx,eax
  419bb7:	rol    BYTE PTR [ebp+0x7ee7912b],cl
  419bbd:	xor    al,0x25
  419bbf:	adc    eax,DWORD PTR [eax-0x749669fa]
  419bc5:	test   eax,0x7049440b
  419bca:	(bad)  
  419bcb:	into   
  419bcc:	push   ebp
  419bcd:	cs xchg esi,eax
  419bcf:	ins    DWORD PTR es:[edi],dx
  419bd0:	inc    edi
  419bd1:	push   si
  419bd3:	aam    0x43
  419bd5:	or     DWORD PTR [edx+eiz*4],ebx
  419bd8:	sar    BYTE PTR [eax],1
  419bda:	ja     0x419c1b
  419bdc:	jnp    0x419b5f
  419bde:	aaa    
  419bdf:	xor    BYTE PTR [ecx+ebp*8-0x57],ch
  419be3:	hlt    
  419be4:	cld    
  419be5:	in     eax,0x72
  419be7:	pop    ebx
  419be8:	pop    ss
  419be9:	aam    0xd0
  419beb:	psrld  mm1,QWORD PTR [ecx-0x36]
  419bef:	out    dx,eax
  419bf0:	fwait
  419bf1:	push   esi
  419bf2:	icebp  
  419bf3:	icebp  
  419bf4:	mov    eax,ds:0x577a3794
  419bf9:	daa    
  419bfa:	daa    
  419bfb:	aam    0x69
  419bfd:	push   cs
  419bfe:	xor    BYTE PTR [ebx],0x3c
  419c01:	int3   
  419c02:	imul   esp,DWORD PTR [ecx],0x5dc1caae
  419c08:	jae    0x419ba6
  419c0a:	out    dx,eax
  419c0b:	mov    ebp,0xce98b4cc
  419c10:	mov    bl,0xa6
  419c12:	xchg   ah,cl
  419c14:	or     BYTE PTR [edi+ebp*4-0x8],al
  419c18:	call   DWORD PTR [ebx+esi*8]
  419c1b:	mov    edi,0xb2804196
  419c20:	and    eax,0x26d08692
  419c25:	pop    es
  419c26:	xchg   edi,eax
  419c27:	imul   esi,edx,0xffffffb5
  419c2a:	leave  
  419c2b:	xchg   edi,eax
  419c2c:	test   eax,0x3ad066d3
  419c31:	mov    DWORD PTR [ecx],edx
  419c33:	sub    ch,BYTE PTR [ebp-0x26d286f1]
  419c39:	f2xm1  
  419c3b:	xchg   ebx,eax
  419c3c:	cmp    al,0x3d
  419c3e:	or     al,0x66
  419c40:	cmp    eax,0xdcac6115
  419c45:	xor    eax,0x7c3ebf5
  419c4a:	dec    esp
  419c4b:	mov    edx,0xa6dec821
  419c50:	ins    BYTE PTR es:[edi],dx
  419c51:	mov    WORD PTR [ecx+0x68584256],ss
  419c57:	add    dl,cl
  419c59:	pop    edx
  419c5a:	lahf   
  419c5b:	cli    
  419c5c:	sbb    edi,DWORD PTR [ebp-0x3f]
  419c5f:	mov    ah,0xa3
  419c61:	mov    ds:0x85943fe5,al
  419c66:	ja     0x419c00
  419c68:	dec    ecx
  419c69:	nop
  419c6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c6b:	cmp    esi,DWORD PTR [ecx-0x70]
  419c6e:	jle    0x419c23
  419c70:	shl    DWORD PTR [ecx-0x3c],0x50
  419c74:	sbb    ebx,eax
  419c76:	lahf   
  419c77:	jne    0x419c4c
  419c79:	fwait
  419c7a:	pop    ss
  419c7b:	ins    DWORD PTR es:[edi],dx
  419c7c:	hlt    
  419c7d:	xchg   DWORD PTR [eax-0x7a],edx
  419c80:	xchg   BYTE PTR [esi],ch
  419c82:	xor    edi,ebx
  419c84:	cmp    cl,dh
  419c86:	adc    BYTE PTR [esi+eax*4-0x37f93cfc],ah
  419c8d:	fs push ebx
  419c8f:	rcl    BYTE PTR [ecx+0x67],cl
  419c92:	ds xor eax,0x56b39bb7
  419c98:	fadd   DWORD PTR [esi+0x5c407b3]
  419c9e:	push   es
  419c9f:	stc    
  419ca0:	in     eax,dx
  419ca1:	mov    es,ebx
  419ca3:	xchg   BYTE PTR [edi-0x3b],cl
  419ca6:	loopne 0x419cfa
  419ca8:	cdq    
  419ca9:	(bad)  
  419caa:	ss mov al,0x3a
  419cad:	rcl    DWORD PTR [ecx+0x48],1
  419cb0:	in     al,0xd4
  419cb2:	in     al,0x2d
  419cb4:	xor    al,BYTE PTR [ecx+0x14]
  419cb7:	sbb    al,0x3
  419cb9:	popf   
  419cba:	aaa    
  419cbb:	(bad)  
  419cbd:	adc    ah,bh
  419cbf:	sub    BYTE PTR ds:0xc558aad0,al
  419cc5:	or     ebx,ecx
  419cc7:	xchg   edi,eax
  419cc8:	push   cs
  419cc9:	adc    dh,0x8c
  419ccc:	inc    edx
  419ccd:	aaa    
  419cce:	jecxz  0x419c91
  419cd0:	inc    esp
  419cd1:	fldcw  WORD PTR [edi]
  419cd3:	int3   
  419cd4:	mov    bl,0xf2
  419cd6:	sub    edx,DWORD PTR [eax]
  419cd8:	cs fwait
  419cda:	out    0xa,eax
  419cdc:	pop    ds
  419cdd:	inc    ebp
  419cde:	ret    0xf62
  419ce1:	ds stos BYTE PTR es:[edi],al
  419ce3:	or     eax,0x4609f347
  419ce8:	inc    eax
  419ce9:	mov    esp,0xa1005612
  419cee:	addr16 fwait
  419cf0:	ins    DWORD PTR es:[edi],dx
  419cf1:	dec    edx
  419cf2:	idiv   DWORD PTR [eax+0x28]
  419cf5:	jmp    0x419c9e
  419cf7:	sahf   
  419cf8:	jecxz  0x419d14
  419cfa:	add    DWORD PTR [eax],edi
  419cfc:	shr    DWORD PTR [eax-0x103b6bc2],1
  419d02:	mov    ecx,0x9a0964ce
  419d07:	or     eax,DWORD PTR [edx+0x4c]
  419d0a:	call   0xc18dba2c
  419d0f:	shl    DWORD PTR es:[edx],cl
  419d12:	adc    eax,DWORD PTR [edx+0x21]
  419d15:	enter  0xd4b4,0x3
  419d19:	pop    ds
  419d1a:	not    DWORD PTR [esi]
  419d1c:	sub    ch,BYTE PTR [edi+0x5]
  419d1f:	mov    dh,0xe8
  419d21:	mov    esi,0xea7ea8a4
  419d26:	inc    ebx
  419d27:	stc    
  419d28:	xlat   BYTE PTR ds:[ebx]
  419d29:	xchg   BYTE PTR [ebx-0x24],ch
  419d2c:	lods   eax,DWORD PTR ds:[esi]
  419d2d:	jp     0x419d2c
  419d2f:	outs   dx,DWORD PTR ds:[esi]
  419d30:	xor    DWORD PTR [ebx-0x39],eax
  419d33:	mov    ds:0x3bd01f37,eax
  419d38:	mov    eax,0x5c83bc79
  419d3d:	pusha  
  419d3e:	dec    ebp
  419d3f:	pop    ds
  419d40:	sub    BYTE PTR [edi+0x65],cl
  419d43:	fadd   st(4),st
  419d45:	xchg   ebx,eax
  419d46:	push   ecx
  419d47:	in     al,dx
  419d48:	shr    dh,1
  419d4a:	loopne 0x419d5c
  419d4c:	icebp  
  419d4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d4e:	fld    st(1)
  419d50:	aaa    
  419d51:	cdq    
  419d52:	test   BYTE PTR [ebx-0x12],0x5
  419d56:	adc    BYTE PTR ds:0x4e7165fe,0xac
  419d5d:	add    BYTE PTR [edi+0xe46c96d],al
  419d63:	push   eax
  419d64:	call   0x72fa:0x4282b32
  419d6b:	out    0x43,eax
  419d6d:	push   ebp
  419d6e:	clc    
  419d6f:	jae    0x419db4
  419d71:	xchg   ecx,eax
  419d72:	sub    DWORD PTR [eax],edx
  419d74:	jge    0x419d47
  419d76:	mov    bl,BYTE PTR [ecx+ebp*8-0xa]
  419d7a:	pop    ecx
  419d7b:	or     eax,0x6206b3e5
  419d80:	dec    edi
  419d81:	cmp    bh,BYTE PTR [esi+0x1886bf5]
  419d87:	pop    esp
  419d88:	lds    edx,FWORD PTR [esi+0x6a056a8a]
  419d8e:	into   
  419d8f:	gs int 0xfc
  419d92:	or     BYTE PTR [edx+0x7c],al
  419d95:	iret   
  419d96:	vpmacsdqh xmm8,xmm4,xmm6,XMMWORD PTR [ebp+0x4d34d81b]
  419da0:	js     0x419d49
  419da2:	mov    bh,0x45
  419da4:	std    
  419da5:	push   esi
  419da6:	pop    ds
  419da7:	xchg   esi,eax
  419da8:	fldenv [ecx+0x3c]
  419dab:	adc    DWORD PTR gs:[esi+0x5a],ecx
  419daf:	fistp  DWORD PTR [edx+0x4b]
  419db2:	jnp    0x419d5f
  419db4:	jle    0x419d8a
  419db6:	push   edx
  419db7:	mov    ebx,0x4704614c
  419dbc:	sbb    ebp,DWORD PTR [eax]
  419dbe:	push   esi
  419dbf:	lahf   
  419dc0:	shl    DWORD PTR [esi+0x3c],0x62
  419dc4:	xchg   edi,eax
  419dc5:	pop    ebp
  419dc6:	inc    ecx
  419dc7:	xor    ebp,DWORD PTR [ebx-0x2]
  419dca:	out    dx,eax
  419dcb:	mov    bl,0x82
  419dcd:	adc    edi,DWORD PTR [ecx]
  419dcf:	mov    cl,BYTE PTR [esi-0x4a]
  419dd2:	sbb    eax,0x87852199
  419dd7:	sar    BYTE PTR [ebp-0x67],1
  419dda:	hlt    
  419ddb:	xchg   ecx,eax
  419ddc:	push   es
  419ddd:	popa   
  419dde:	or     ah,BYTE PTR [edi]
  419de0:	fldcw  WORD PTR [edx-0x48]
  419de3:	idiv   BYTE PTR [esi]
  419de5:	cmc    
  419de6:	pop    edi
  419de7:	out    0xde,eax
  419de9:	mov    ecx,ecx
  419deb:	stos   BYTE PTR es:[edi],al
  419dec:	test   esi,0xe848c9c4
  419df2:	or     al,0x3c
  419df4:	clc    
  419df5:	sub    ch,BYTE PTR ds:0x130db125
  419dfb:	pop    edx
  419dfc:	lock mov edi,0x6fc0298a
  419e02:	je     0x419e46
  419e04:	pop    esi
  419e05:	xchg   ecx,eax
  419e06:	xor    eax,0x81404c4b
  419e0b:	sub    al,0xb7
  419e0d:	push   ecx
  419e0e:	mov    DWORD PTR [esi-0x7c],ecx
  419e11:	cmp    ebp,edx
  419e13:	push   cs
  419e14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e16:	pop    ecx
  419e17:	fs push esi
  419e19:	std    
  419e1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e1b:	pop    DWORD PTR [ebx-0x16]
  419e1e:	fldcw  WORD PTR [edx+0x40]
  419e21:	xor    ch,ah
  419e23:	jnp    0x419db8
  419e25:	pop    edi
  419e26:	outs   dx,DWORD PTR ds:[esi]
  419e27:	push   0xfffffff1
  419e29:	push   0x9dad0483
  419e2e:	cdq    
  419e2f:	push   esi
  419e30:	lock push esi
  419e32:	dec    esi
  419e33:	adc    cl,BYTE PTR [eax+0xc]
  419e36:	inc    ecx
  419e37:	loop   0x419e7d
  419e39:	push   esi
  419e3a:	dec    esp
  419e3b:	cmp    DWORD PTR fs:[ecx+0x17],0x4b
  419e40:	js     0x419de3
  419e42:	inc    ebp
  419e43:	xchg   ebx,eax
  419e44:	xchg   DWORD PTR [edi+0x5aaf2203],ebx
  419e4a:	jl     0x419e44
  419e4c:	push   0x85e21c9
  419e51:	mov    cl,0xb5
  419e53:	in     al,dx
  419e54:	jmp    0x92b8:0x94f09014
  419e5b:	cmp    BYTE PTR ds:0x4bf83bf3,ah
  419e61:	push   ebx
  419e62:	jmp    0x80e1:0x8fefc83d
  419e69:	loopne 0x419ea1
  419e6b:	xchg   BYTE PTR [ebx],dl
  419e6d:	out    0x64,eax
  419e6f:	mov    al,ch
  419e71:	loop   0x419eb5
  419e73:	fist   DWORD PTR [edi+eax*8+0x1c]
  419e77:	(bad)  
  419e78:	cs sahf 
  419e7a:	xlat   BYTE PTR ds:[ebx]
  419e7b:	lods   al,BYTE PTR ds:[esi]
  419e7c:	jmp    0x419e19
  419e7e:	in     eax,0x65
  419e80:	test   BYTE PTR [esi+0x2cc2dc50],0xa1
  419e87:	cmp    dh,cl
  419e89:	ds (bad) 
  419e8b:	xchg   edi,eax
  419e8c:	jg     0x419e11
  419e8e:	sub    ebx,DWORD PTR [ecx+0x7ba2f998]
  419e94:	out    dx,al
  419e95:	add    DWORD PTR [edi+0x6b],0xbec99bba
  419e9c:	add    BYTE PTR [eax+ecx*4-0x341067ee],ch
  419ea3:	mov    ecx,0xbc4905b2
  419ea8:	mov    BYTE PTR [edi-0x5a],bl
  419eab:	cdq    
  419eac:	pop    ebx
  419ead:	(bad)  
  419eae:	xor    al,0xf3
  419eb0:	std    
  419eb1:	mov    edx,0x78ad9496
  419eb6:	push   esp
  419eb7:	adc    DWORD PTR [esi],ebx
  419eb9:	sbb    al,0xaa
  419ebb:	addr16 add eax,0x765d20db
  419ec1:	mov    ds:0xb62a6739,eax
  419ec6:	popf   
  419ec7:	mov    ds:0xebf0661a,al
  419ecc:	push   ds
  419ecd:	mov    BYTE PTR [esi],ah
  419ecf:	addr16 out 0xd7,al
  419ed2:	xchg   esp,eax
  419ed3:	or     eax,0x73771740
  419ed8:	test   BYTE PTR [eax-0x31],dl
  419edb:	retf   
  419edc:	push   ss
  419edd:	jns    0x419e8e
  419edf:	inc    ebx
  419ee0:	stc    
  419ee1:	pop    ebx
  419ee2:	xor    edx,eax
  419ee4:	and    eax,0xb57939ca
  419ee9:	std    
  419eea:	add    DWORD PTR [ebx],ecx
  419eec:	and    BYTE PTR [esi-0x3ddaa6dd],0xab
  419ef3:	dec    ebx
  419ef4:	mov    dl,0xa8
  419ef6:	inc    esp
  419ef7:	out    dx,al
  419ef8:	pushf  
  419ef9:	sub    esi,DWORD PTR [eax+0x7338ec83]
  419eff:	outs   dx,DWORD PTR ds:[esi]
  419f00:	mov    al,ds:0x8a8f5f24
  419f05:	mov    cl,0xb5
  419f07:	xor    eax,0x995a93fd
  419f0c:	shl    dl,cl
  419f0e:	sub    DWORD PTR [edx],edi
  419f10:	jmp    0x419ec3
  419f12:	mov    ch,0xcb
  419f14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f15:	sub    BYTE PTR [eax+esi*4-0x3],al
  419f19:	and    eax,0xe8629e8
  419f1e:	jmp    0x6df24ca
  419f23:	jno    0x419ed9
  419f25:	pop    edi
  419f26:	dec    ebp
  419f27:	xchg   edi,eax
  419f28:	stos   DWORD PTR es:[edi],eax
  419f29:	push   eax
  419f2a:	or     eax,0x6aa3a245
  419f2f:	mov    DWORD PTR [ebx],ebx
  419f31:	sbb    ah,dh
  419f33:	push   ebp
  419f34:	push   eax
  419f35:	loop   0x419f13
  419f37:	outs   dx,BYTE PTR ds:[esi]
  419f38:	fdiv   QWORD PTR [ebx-0x461ab61b]
  419f3e:	mov    al,0x9d
  419f40:	mov    DWORD PTR [ecx],esi
  419f42:	loopne 0x419f30
  419f44:	push   ebp
  419f45:	cwde   
  419f46:	std    
  419f47:	aad    0x5c
  419f49:	mov    DWORD PTR [ecx],esp
  419f4b:	xor    eax,DWORD PTR [esi]
  419f4d:	out    0x1,eax
  419f4f:	popf   
  419f50:	jmp    0xf28b:0x2bda35ca
  419f57:	mov    edx,eax
  419f59:	in     al,dx
  419f5a:	sbb    bh,BYTE PTR [ecx+0x71]
  419f5d:	(bad)  [eax+0x6c2285b2]
  419f63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f64:	mov    dh,0x7f
  419f66:	fld    DWORD PTR [edi+0x47]
  419f69:	ins    BYTE PTR es:[edi],dx
  419f6a:	mov    cl,0x8
  419f6c:	sbb    DWORD PTR [edx-0xe],eax
  419f6f:	fdivr  DWORD PTR [esi+edx*1-0x61]
  419f73:	inc    esp
  419f74:	(bad)  
  419f75:	stos   BYTE PTR es:[edi],al
  419f76:	ficom  DWORD PTR [ecx+0x2f7216e2]
  419f7c:	div    ebx
  419f7e:	push   ss
  419f7f:	inc    esp
  419f80:	fwait
  419f81:	xchg   ebp,eax
  419f82:	ja     0x419fbe
  419f84:	and    al,BYTE PTR [ebp-0x32]
  419f87:	pop    ebp
  419f88:	xchg   esp,eax
  419f89:	retf   
  419f8a:	cmp    BYTE PTR [eax],bl
  419f8c:	ins    DWORD PTR es:[edi],dx
  419f8d:	rcr    BYTE PTR [edi-0x4c],0x1
  419f91:	sbb    al,0x9e
  419f93:	loope  0x419fd5
  419f95:	inc    edi
  419f96:	push   esp
  419f97:	retf   
  419f98:	cwde   
  419f99:	repnz push ds
  419f9b:	add    BYTE PTR [ecx],ch
  419f9d:	push   esi
  419f9e:	adc    ah,al
  419fa0:	test   eax,0xad9cb391
  419fa5:	mov    ah,0x95
  419fa7:	inc    edi
  419fa8:	push   es
  419fa9:	ja     0x419f8c
  419fab:	pop    ebp
  419fac:	jnp    0x419f3d
  419fae:	push   0x62d35304
  419fb3:	dec    ecx
  419fb4:	cmp    DWORD PTR [ebx],esp
  419fb6:	add    al,0x4f
  419fb8:	mov    al,0xcb
  419fba:	int    0xbf
  419fbc:	mov    bl,0x90
  419fbe:	stos   BYTE PTR es:[edi],al
  419fbf:	addr16 inc edi
  419fc1:	cmp    BYTE PTR [esi+0x79],0x83
  419fc5:	test   BYTE PTR [esi],bh
  419fc7:	jbe    0x419f8c
  419fc9:	dec    edx
  419fca:	pop    ebx
  419fcb:	mov    dh,0x35
  419fcd:	(bad)  
  419fce:	fld    st(1)
  419fd0:	and    eax,0x73c8b9ce
  419fd5:	rol    edi,cl
  419fd7:	addr16 push ss
  419fd9:	loope  0x41a021
  419fdb:	sti    
  419fdc:	push   cs
  419fdd:	ja     0x41a03a
  419fdf:	ins    DWORD PTR es:[edi],dx
  419fe0:	jno    0x419fc9
  419fe2:	lock js 0x419fbd
  419fe5:	jle    0x41a05b
  419fe7:	cdq    
  419fe8:	push   ecx
  419fe9:	adc    BYTE PTR [esi-0x3b275325],bl
  419fef:	pop    ecx
  419ff0:	inc    esp
  419ff1:	jmp    0x702a:0x3a890321
  419ff8:	pop    eax
  419ff9:	arpl   WORD PTR [ebp+0x59],dx
  419ffc:	cli    
  419ffd:	nop
  419ffe:	adc    BYTE PTR [edx],bl
  41a000:	mov    ch,0x1a
  41a002:	cmc    
  41a003:	cmp    al,0x1d
  41a005:	mov    ebx,0x275d33f
  41a00a:	fist   DWORD PTR [edi+0xd8c1cf]
  41a010:	pop    edx
  41a011:	xor    eax,0xc9c11730
  41a016:	sub    BYTE PTR [ebp-0x5e],0xca
  41a01a:	loop   0x419fcd
  41a01c:	(bad)  
  41a01d:	jmp    0x41a030
  41a01f:	int3   
  41a020:	icebp  
  41a021:	mov    cl,0xef
  41a023:	push   esi
  41a024:	pop    ds
  41a025:	push   eax
  41a026:	cwde   
  41a027:	retf   0x33bd
  41a02a:	stos   DWORD PTR es:[edi],eax
  41a02b:	xchg   esp,eax
  41a02c:	xchg   ebp,eax
  41a02d:	in     eax,0x84
  41a02f:	fmul   DWORD PTR [edx-0x7e]
  41a032:	and    BYTE PTR [esi],0xba
  41a035:	arpl   si,cx
  41a037:	nop
  41a038:	jge    0x419fd7
  41a03a:	clc    
  41a03b:	mov    ch,0x74
  41a03d:	bound  eax,QWORD PTR [eax-0x274fde8c]
  41a043:	xchg   edx,eax
  41a044:	in     eax,dx
  41a045:	jb     0x419fc8
  41a047:	dec    edx
  41a048:	dec    esp
  41a049:	push   esp
  41a04a:	(bad)  
  41a04b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a04c:	loope  0x41a043
  41a04e:	lahf   
  41a04f:	xor    esp,DWORD PTR [edi]
  41a051:	sub    dh,BYTE PTR [edi+ecx*1-0x6b6d911b]
  41a058:	(bad)  
  41a059:	dec    edx
  41a05a:	les    edi,FWORD PTR [edi]
  41a05c:	jns    0x41a096
  41a05e:	retf   
  41a05f:	mov    dl,0x1d
  41a061:	ficomp DWORD PTR [eax+0x47]
  41a064:	xor    edi,DWORD PTR [ebp-0xf]
  41a067:	xchg   ebp,eax
  41a068:	lods   al,BYTE PTR ds:[esi]
  41a069:	aam    0x1c
  41a06b:	cmp    bl,BYTE PTR [esi-0x15]
  41a06e:	mov    ebx,DWORD PTR ds:0x619887c2
  41a074:	(bad)  
  41a076:	pop    ebp
  41a077:	cmp    ch,BYTE PTR [eax+0x48]
  41a07a:	cmp    DWORD PTR [ebx],0xffffff91
  41a07d:	adc    DWORD PTR [esi],esp
  41a07f:	mov    BYTE PTR [edi],ah
  41a081:	jl     0x41a0bf
  41a083:	out    0x9b,al
  41a085:	call   0xade2:0x6ea32ab4
  41a08c:	mov    ah,0xdb
  41a08e:	adc    eax,0xd8600fc7
  41a093:	sub    edx,DWORD PTR [edx+0x71]
  41a096:	(bad)
  41a099:	outs   dx,DWORD PTR ds:[esi]
  41a09a:	mov    cl,0x1f
  41a09c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a09d:	jno    0x41a093
  41a09f:	cdq    
  41a0a0:	bnd jo 0x41a0f0
  41a0a3:	push   ss
  41a0a4:	mov    ds:0x2ccd60fa,eax
  41a0a9:	lods   al,BYTE PTR ds:[esi]
  41a0aa:	push   ds
  41a0ab:	mov    ch,BYTE PTR [ecx-0x143ff638]
  41a0b1:	into   
  41a0b2:	fs push ecx
  41a0b4:	shl    cl,1
  41a0b6:	inc    ebp
  41a0b7:	out    0x6f,eax
  41a0b9:	retf   0x3da7
  41a0bc:	daa    
  41a0bd:	daa    
  41a0be:	xor    ebp,DWORD PTR [esi]
  41a0c0:	ja     0x41a04f
  41a0c2:	(bad)  
  41a0c4:	gs scas eax,DWORD PTR es:[edi]
  41a0c6:	push   edi
  41a0c7:	dec    ebp
  41a0c8:	adc    al,0x17
  41a0ca:	(bad)  
  41a0cb:	mov    edi,0x17eef354
  41a0d0:	sbb    al,0xe0
  41a0d2:	xor    BYTE PTR [edx-0x7f],cl
  41a0d5:	stos   BYTE PTR es:[edi],al
  41a0d6:	jmp    0x41a097
  41a0d8:	shr    eax,0x7
  41a0db:	jmp    0xaca4:0x8005cffe
  41a0e2:	mov    eax,0xdc324ed5
  41a0e7:	adc    al,0x87
  41a0e9:	lea    edx,[ecx+0x7f]
  41a0ec:	in     eax,dx
  41a0ed:	adc    DWORD PTR [ecx-0x15],edx
  41a0f0:	jb     0x41a106
  41a0f2:	jae    0x41a096
  41a0f4:	mov    ch,0xeb
  41a0f6:	sbb    dh,al
  41a0f8:	adc    bh,ch
  41a0fa:	xchg   BYTE PTR [edx+0x5b],bl
  41a0fd:	icebp  
  41a0fe:	push   edx
  41a0ff:	and    BYTE PTR [ecx-0x7a8657fd],bl
  41a105:	and    bh,BYTE PTR [edx-0x569779fd]
  41a10b:	fnsave [edx+0x30906150]
  41a111:	push   ebp
  41a112:	mov    ds:0xd03fe9b6,eax
  41a117:	clc    
  41a118:	mul    dl
  41a11a:	mov    edx,0xc0d21622
  41a11f:	xor    bh,BYTE PTR [edx+edi*8+0x2f]
  41a123:	xchg   ecx,eax
  41a124:	(bad)  
  41a125:	dec    esp
  41a126:	in     eax,0x5b
  41a128:	jae    0x421ede6a
  41a12e:	out    dx,eax
  41a12f:	mov    bh,0x98
  41a131:	add    al,0xf7
  41a133:	add    DWORD PTR [eax],eax
  41a135:	xchg   esp,eax
  41a136:	sub    ch,BYTE PTR [eax]
  41a138:	sub    BYTE PTR [edx-0x6e],bh
  41a13b:	in     al,dx
  41a13c:	inc    eax
  41a13d:	cwde   
  41a13e:	pop    ebp
  41a13f:	outs   dx,DWORD PTR ds:[esi]
  41a140:	test   eax,0x1ca5c68f
  41a145:	mov    dl,0xe7
  41a147:	fmul   QWORD PTR [ecx]
  41a149:	push   edi
  41a14a:	xchg   ecx,eax
  41a14b:	cmp    eax,0xc7c02453
  41a150:	mov    ah,0x71
  41a152:	stc    
  41a153:	sub    eax,0x63f35e72
  41a158:	lods   eax,DWORD PTR ds:[esi]
  41a159:	adc    ebx,DWORD PTR [edi-0x4c]
  41a15c:	mov    ds:0xa5189f22,al
  41a161:	adc    DWORD PTR [esi+ecx*1-0x5a],edi
  41a165:	pusha  
  41a166:	mov    ecx,0xf0daf6bf
  41a16b:	retf   
  41a16c:	ds loopne 0x41a125
  41a16f:	push   ss
  41a170:	inc    eax
  41a171:	mov    ebp,0x7e2600db
  41a176:	int3   
  41a177:	sbb    ebp,DWORD PTR [ebp-0x77fb781b]
  41a17d:	adc    BYTE PTR [eax],0x32
  41a180:	dec    ebx
  41a181:	cmp    ebx,DWORD PTR [ecx-0xb]
  41a184:	rcl    DWORD PTR [eax+0x64276fc9],1
  41a18a:	mov    ds,WORD PTR [edi]
  41a18c:	jg     0x41a1f3
  41a18e:	lods   al,BYTE PTR ds:[esi]
  41a18f:	pop    esi
  41a190:	lahf   
  41a191:	fwait
  41a192:	ret    0x1fc0
  41a195:	mov    ds:0xb1c2192,al
  41a19a:	mov    ss,WORD PTR [edx+0x6c]
  41a19d:	jmp    0x20b4:0x3236b365
  41a1a4:	xchg   DWORD PTR [esi-0x59],edi
  41a1a7:	(bad)  
  41a1a8:	fcomp  DWORD PTR [esi]
  41a1aa:	or     BYTE PTR [edi],dl
  41a1ac:	je     0x41a13c
  41a1ae:	xor    eax,0x58a7a0a3
  41a1b3:	mov    ds:0xde849de4,eax
  41a1b8:	add    ebp,DWORD PTR [ebx]
  41a1ba:	and    edi,DWORD PTR ds:0x42924f
  41a1c0:	out    0x27,al
  41a1c2:	sub    al,0x17
  41a1c4:	pushf  
  41a1c5:	dec    ecx
  41a1c6:	inc    ebp
  41a1c7:	leave  
  41a1c8:	jmp    0x66c0:0x3307b1ab
  41a1cf:	and    al,0x67
  41a1d1:	jnp    0x41a202
  41a1d3:	test   DWORD PTR [ebx+0x62],edx
  41a1d6:	jmp    0x41a16f
  41a1d8:	cmp    BYTE PTR [ebx+eiz*8+0x195a7966],bh
  41a1df:	xchg   ecx,eax
  41a1e0:	xchg   ebx,eax
  41a1e1:	xor    eax,0x2c25112e
  41a1e6:	pusha  
  41a1e7:	adc    BYTE PTR [edx-0x16],cl
  41a1ea:	paddb  mm4,mm1
  41a1ed:	imul   esi,DWORD PTR [esi-0x19],0x2401f3b5
  41a1f4:	popf   
  41a1f5:	jb     0x41a1cb
  41a1f7:	add    DWORD PTR [ebx-0x51],ecx
  41a1fa:	dec    esp
  41a1fb:	fldcw  WORD PTR [eax]
  41a1fd:	push   es
  41a1fe:	sbb    al,0xdd
  41a200:	lods   al,BYTE PTR ds:[esi]
  41a201:	adc    al,0x2b
  41a203:	jg     0x41a277
  41a205:	sub    al,0x6e
  41a207:	xchg   eax,edx
  41a209:	or     BYTE PTR [esi],bh
  41a20b:	add    ch,dh
  41a20d:	fisttp DWORD PTR [esi+ebp*8-0x7c9e69ed]
  41a214:	adc    DWORD PTR [ebp-0x1f65374a],edx
  41a21a:	inc    ebp
  41a21b:	sub    al,0x8c
  41a21d:	sub    bl,0x63
  41a220:	fcom   QWORD PTR [ebx+0x378b4461]
  41a226:	xor    eax,0x826f4d42
  41a22b:	gs xchg esi,eax
  41a22d:	push   eax
  41a22e:	fwait
  41a22f:	mov    esp,0x2a9ed6f9
  41a235:	loope  0x41a21d
  41a237:	les    ebp,FWORD PTR [ebp-0x13]
  41a23a:	cmp    edi,DWORD PTR [ecx-0x7e7f7de]
  41a240:	sar    BYTE PTR [esi],cl
  41a242:	aam    0xe6
  41a244:	pop    esp
  41a245:	into   
  41a246:	test   eax,0xdb33df03
  41a24b:	and    ah,BYTE PTR [eax]
  41a24d:	mov    edx,0xa8de2fc7
  41a252:	in     eax,dx
  41a253:	push   0xd96a690
  41a258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a259:	and    BYTE PTR [edi],0xa6
  41a25c:	addr16 test eax,0xa6f76abb
  41a262:	das    
  41a263:	push   ebp
  41a264:	sub    eax,0xcd7f4a25
  41a269:	adc    eax,0x2c099bbd
  41a26e:	xor    DWORD PTR [ecx-0x59],0x6ffa1125
  41a275:	test   eax,0x42d8020a
  41a27a:	cmp    edi,ebx
  41a27c:	inc    esp
  41a27d:	int    0xd9
  41a27f:	cli    
  41a280:	popf   
  41a281:	mov    ds:0x489f38ef,eax
  41a286:	mov    BYTE PTR [ecx+0x43],bl
  41a289:	je     0x41a285
  41a28b:	adc    ah,BYTE PTR [eax+ecx*4+0x69b5cbc9]
  41a292:	popf   
  41a293:	mov    ah,0x4c
  41a295:	ficom  DWORD PTR [eax]
  41a297:	lock out dx,eax
  41a299:	int3   
  41a29a:	imul   esp,DWORD PTR ds:0xa8aef4cf,0xc43df1b6
  41a2a4:	out    0x54,al
  41a2a6:	sub    BYTE PTR [ecx-0x7b],cl
  41a2a9:	or     BYTE PTR [edx+0xb4ecace],0xc4
  41a2b0:	xor    DWORD PTR ds:0xb89da23c,edi
  41a2b6:	fisttp WORD PTR [ebx]
  41a2b8:	push   ss
  41a2b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2ba:	lock shl BYTE PTR [eax-0x4b],cl
  41a2be:	dec    edi
  41a2bf:	push   edx
  41a2c0:	cmp    al,dh
  41a2c2:	loopne 0x41a26b
  41a2c4:	out    0xa7,al
  41a2c6:	sbb    al,0x5
  41a2c8:	lock mov DWORD PTR [esi-0x23],0x6ff21de0
  41a2d0:	into   
  41a2d1:	lock jmp FWORD PTR [ecx+0x4b]
  41a2d5:	mov    ecx,0x8a36c9db
  41a2da:	cmp    ch,BYTE PTR [ecx]
  41a2dc:	pop    ebp
  41a2dd:	jg     0x41a333
  41a2df:	and    cl,cl
  41a2e1:	and    ebx,DWORD PTR [ecx]
  41a2e3:	ret    
  41a2e4:	(bad)  
  41a2e5:	(bad)  
  41a2e6:	aaa    
  41a2e7:	or     eax,DWORD PTR ds:0xbde17081
  41a2ed:	dec    edx
  41a2ee:	xchg   edx,eax
  41a2ef:	and    ah,BYTE PTR [edi-0x1d393945]
  41a2f5:	sub    eax,0xd3da0eb1
  41a2fa:	je     0x41a342
  41a2fc:	out    0x8b,al
  41a2fe:	mov    WORD PTR [edx],ds
  41a300:	clc    
  41a301:	adc    eax,0x3be54151
  41a306:	push   ds
  41a307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a308:	xchg   ebx,eax
  41a309:	es enterw 0x84d1,0x17
  41a30f:	xor    al,0x7a
  41a311:	cmp    DWORD PTR [esi+0xcd5ca18],ebp
  41a317:	sub    al,0xa0
  41a319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a31a:	fld    st(1)
  41a31c:	sbb    al,ch
  41a31e:	pop    eax
  41a31f:	xor    edx,DWORD PTR [ecx-0x525ffd69]
  41a325:	inc    edx
  41a326:	nop
  41a327:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a328:	dec    edi
  41a329:	or     al,0xbc
  41a32b:	repnz push 0xffffffbf
  41a32e:	add    dl,bh
  41a330:	aam    0xd0
  41a332:	add    edi,DWORD PTR [ebp-0x50bdcd7a]
  41a338:	in     eax,0x7
  41a33a:	inc    eax
  41a33b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a33c:	and    cl,BYTE PTR [edi+0x3a]
  41a33f:	jns    0x41a35b
  41a341:	sbb    cl,bh
  41a343:	push   es
  41a344:	cmp    al,BYTE PTR ds:0x9d4c3509
  41a34a:	iret   
  41a34b:	fcomp  st(1)
  41a34d:	icebp  
  41a34e:	addr16 fwait
  41a350:	les    edi,FWORD PTR [eax]
  41a352:	dec    bh
  41a354:	mov    esi,0xf208e0fc
  41a359:	ss jl  0x41a38f
  41a35c:	test   eax,0xa52bb708
  41a361:	mov    eax,0x986d229c
  41a366:	retf   
  41a367:	xor    edi,ebx
  41a369:	mov    ds,WORD PTR [edi+0x42fa50f3]
  41a36f:	fsub   QWORD PTR ds:[esi+0x6b84262a]
  41a376:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a377:	pop    edx
  41a378:	bound  ecx,QWORD PTR [ecx+0x40f4ec6f]
  41a37e:	mov    eax,0xf78deff5
  41a383:	push   ds
  41a384:	loop   0x41a3d0
  41a386:	sahf   
  41a387:	jge    0x41a3ae
  41a389:	push   0x18
  41a38b:	and    DWORD PTR [edx],eax
  41a38d:	inc    esp
  41a38e:	lahf   
  41a38f:	imul   eax,edi,0xffffffb2
  41a392:	mov    al,0xbd
  41a394:	cmp    DWORD PTR [ebx-0x36],ecx
  41a397:	imul   edx,DWORD PTR [edx-0x12cf9aef],0x314ec41c
  41a3a1:	es xchg ebp,eax
  41a3a3:	pop    esi
  41a3a4:	jmp    0xdb168765
  41a3a9:	es xchg ebx,eax
  41a3ab:	mov    ds:0xbc082af2,eax
  41a3b0:	mov    bh,0xf5
  41a3b2:	sbb    edi,0x43696a3c
  41a3b8:	test   BYTE PTR [edi+0x7b],dh
  41a3bb:	pushf  
  41a3bc:	fwait
  41a3bd:	mov    eax,0x78beebf2
  41a3c2:	in     al,0xfb
  41a3c4:	push   ebx
  41a3c5:	fcom   DWORD PTR [ebp-0x41]
  41a3c8:	push   edx
  41a3c9:	into   
  41a3ca:	rcl    BYTE PTR [ebx-0x3e],0x35
  41a3ce:	jmp    0xa2d0:0xef1a005f
  41a3d5:	or     dh,BYTE PTR cs:[edx]
  41a3d8:	cwde   
  41a3d9:	push   esp
  41a3da:	sahf   
  41a3db:	sar    esi,cl
  41a3dd:	test   BYTE PTR [edx+esi*4-0x2d],al
  41a3e1:	inc    esi
  41a3e2:	pop    esp
  41a3e3:	sub    BYTE PTR [ecx-0x7b],ah
  41a3e6:	ss in  al,0x22
  41a3e9:	sbb    ch,al
  41a3eb:	push   ss
  41a3ec:	fisub  DWORD PTR [edx]
  41a3ee:	fld    QWORD PTR ds:0x9fa55934
  41a3f4:	jnp    0x41a460
  41a3f6:	inc    ecx
  41a3f7:	add    cl,bl
  41a3f9:	aas    
  41a3fa:	sub    edi,DWORD PTR [ebp-0x56f488a9]
  41a400:	push   ebx
  41a401:	dec    edi
  41a402:	and    bl,BYTE PTR [ecx]
  41a404:	or     DWORD PTR [ebp-0x46a1fc83],0xe1f8e01a
  41a40e:	ds push es
  41a410:	stc    
  41a411:	ret    0x3338
  41a414:	cmc    
  41a415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a416:	or     al,0xbf
  41a418:	imul   edx,DWORD PTR [eax+0x3c],0xfeebef13
  41a41f:	lock in al,0xc0
  41a422:	inc    eax
  41a423:	les    edi,FWORD PTR [edi+0xb]
  41a426:	outs   dx,DWORD PTR ds:[esi]
  41a427:	adc    ebp,DWORD PTR [eax+0x35b1b6cc]
  41a42d:	aas    
  41a42e:	mov    ecx,0x2e69d6bb
  41a433:	(bad)  
  41a434:	sbb    dl,BYTE PTR [edx+edx*8]
  41a437:	adc    bh,BYTE PTR [ebx]
  41a439:	add    BYTE PTR [eax+ebp*8-0x6e5be384],ah
  41a440:	dec    ebx
  41a441:	(bad)  
  41a443:	pop    es
  41a444:	sub    dh,BYTE PTR [edi+0x19402b50]
  41a44a:	stc    
  41a44b:	xor    eax,0x7e700683
  41a450:	and    ebp,DWORD PTR [eax]
  41a452:	stos   DWORD PTR es:[edi],eax
  41a453:	jb     0x41a4ce
  41a455:	jo     0x41a424
  41a457:	test   al,0x46
  41a459:	(bad)  
  41a45a:	pop    ebx
  41a45b:	inc    ebp
  41a45c:	enter  0x4fca,0xf7
  41a460:	add    eax,0xffffffdd
  41a463:	jg     0x41a4ae
  41a465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a466:	pushf  
  41a467:	cmp    DWORD PTR [ecx+0x8],eax
  41a46a:	jne    0x41a423
  41a46c:	jb     0x41a4dd
  41a46e:	and    BYTE PTR [ecx+0x62],bh
  41a471:	stc    
  41a472:	adc    al,0xff
  41a474:	sbb    BYTE PTR [ecx],al
  41a476:	mov    ch,0xf5
  41a478:	cmp    BYTE PTR [edi],dh
  41a47a:	stc    
  41a47b:	ret    0x119f
  41a47e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a47f:	test   eax,0x7e9d9152
  41a484:	or     BYTE PTR [ecx+0x7a82b676],ch
  41a48a:	jp     0x41a493
  41a48c:	lods   eax,DWORD PTR ds:[esi]
  41a48d:	sbb    ebx,edi
  41a48f:	stos   DWORD PTR es:[edi],eax
  41a490:	fst    DWORD PTR [edx]
  41a492:	punpckldq mm7,DWORD PTR [edx+eax*8]
  41a496:	pusha  
  41a497:	mov    DWORD PTR [eax-0x59],ebx
  41a49a:	rol    BYTE PTR [edi-0x39],0x5d
  41a49e:	mov    ah,0x53
  41a4a0:	and    al,0x40
  41a4a2:	adc    al,0x5c
  41a4a4:	lahf   
  41a4a5:	in     al,dx
  41a4a6:	stc    
  41a4a7:	stc    
  41a4a8:	test   al,0x7c
  41a4aa:	rcl    bl,1
  41a4ac:	out    0x11,ax
  41a4af:	push   eax
  41a4b0:	jne    0x41a45d
  41a4b2:	sub    eax,0xfc74b6da
  41a4b7:	(bad)  
  41a4b8:	in     eax,0x8f
  41a4ba:	popa   
  41a4bb:	stc    
  41a4bc:	push   cs
  41a4bd:	cli    
  41a4be:	mov    al,0xd4
  41a4c0:	rol    BYTE PTR [ebx-0x72],1
  41a4c3:	cmp    esp,DWORD PTR [edx+0x7963d0df]
  41a4c9:	adc    DWORD PTR [ebp+0x46488212],esi
  41a4cf:	adc    BYTE PTR [eax+0x30d8f123],0x2
  41a4d6:	pop    ebp
  41a4d7:	add    DWORD PTR ds:0xc989d5fa,0x7f
  41a4de:	mov    bl,0xee
  41a4e0:	test   al,0x32
  41a4e2:	mov    ds:0x3d2852ed,al
  41a4e7:	out    dx,al
  41a4e8:	push   ss
  41a4e9:	push   ebx
  41a4ea:	pop    edi
  41a4eb:	in     al,dx
  41a4ec:	inc    esp
  41a4ed:	mov    ch,0xf9
  41a4ef:	fdivrp st(5),st
  41a4f1:	jb     0x41a4c5
  41a4f3:	jge    0x41a513
  41a4f5:	push   ds
  41a4f6:	arpl   WORD PTR [esi+0x3],si
  41a4f9:	inc    edi
  41a4fa:	dec    ebx
  41a4fb:	pop    eax
  41a4fc:	out    0xcb,al
  41a4fe:	add    edx,DWORD PTR [bp+di]
  41a501:	pop    ebp
  41a502:	scas   al,BYTE PTR es:[edi]
  41a503:	jl     0x41a56f
  41a505:	or     al,0xf5
  41a507:	dec    esp
  41a508:	push   es
  41a509:	js     0x41a565
  41a50b:	aas    
  41a50c:	adc    BYTE PTR [ebp+0x63d9da20],0xb7
  41a513:	lods   al,BYTE PTR ds:[esi]
  41a514:	mov    dh,0x5d
  41a516:	les    ebp,FWORD PTR [ecx+eiz*1]
  41a519:	lods   al,BYTE PTR ss:[esi]
  41a51b:	outs   dx,DWORD PTR ds:[esi]
  41a51c:	sub    bl,BYTE PTR [esi-0x53]
  41a51f:	cmp    ah,BYTE PTR [ebx+0x5001c0d1]
  41a525:	xor    eax,0xfce5dbd2
  41a52a:	popf   
  41a52b:	dec    edx
  41a52c:	inc    ebp
  41a52d:	adc    esp,DWORD PTR [esi+0x332c43e6]
  41a533:	mov    bl,0x80
  41a535:	(bad)  
  41a536:	mul    al
  41a538:	stos   BYTE PTR es:[edi],al
  41a539:	imul   ecx,DWORD PTR [edi],0x8143f013
  41a53f:	xor    al,0xf5
  41a541:	adc    BYTE PTR [edi+eiz*1-0xc],al
  41a545:	fnstsw WORD PTR [eax+0x65]
  41a548:	dec    edi
  41a549:	test   eax,0x96a083cb
  41a54e:	mul    BYTE PTR [edi]
  41a550:	call   0xab7e:0x2a50180e
  41a557:	rol    BYTE PTR [edx+0xaaafd9b],cl
  41a55d:	stc    
  41a55e:	adc    al,ah
  41a560:	mov    bl,0x7c
  41a562:	repnz sbb al,0xa6
  41a565:	loop   0x41a58d
  41a567:	retf   
  41a568:	call   0xeb6728f6
  41a56d:	sbb    al,0x7
  41a56f:	pusha  
  41a570:	outs   dx,DWORD PTR ds:[esi]
  41a571:	push   ss
  41a572:	mov    ebx,0xf56e61ff
  41a577:	fist   WORD PTR [ebx-0x49]
  41a57a:	sub    DWORD PTR [ebx+esi*2],edi
  41a57d:	jle    0x41a52a
  41a57f:	mov    ecx,0x7a28ae8a
  41a584:	and    DWORD PTR [ecx-0xeea7ce7],0x15
  41a58b:	pop    esi
  41a58c:	js     0x41a5f7
  41a58e:	jmp    0x7e080c32
  41a593:	mov    gs,WORD PTR [bx+di]
  41a596:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a597:	sbb    BYTE PTR [eax],al
  41a599:	pop    ebp
  41a59a:	cmp    esp,esi
  41a59c:	pop    esi
  41a59d:	and    ebx,DWORD PTR [ebp-0x1e8f114b]
  41a5a3:	out    0x60,al
  41a5a5:	ss ret 
  41a5a7:	adc    dl,0x23
  41a5aa:	or     eax,0x32f9d386
  41a5af:	push   es
  41a5b0:	adc    edx,DWORD PTR [esi-0x6192ccc0]
  41a5b6:	in     eax,0xff
  41a5b8:	xor    cl,BYTE PTR [ecx-0x65]
  41a5bb:	test   al,0x9
  41a5bd:	xor    cl,BYTE PTR [edi+0xb]
  41a5c0:	ss push esi
  41a5c2:	aas    
  41a5c3:	retf   0x5105
  41a5c6:	adc    BYTE PTR [eax-0x1c],bl
  41a5c9:	ja     0x41a645
  41a5cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5cc:	imul   DWORD PTR [edi+0x26]
  41a5cf:	ja     0x41a558
  41a5d1:	sar    esp,0x3a
  41a5d4:	adc    al,0x66
  41a5d6:	scas   al,BYTE PTR es:[edi]
  41a5d7:	push   ebp
  41a5d8:	lods   al,BYTE PTR ds:[esi]
  41a5d9:	and    DWORD PTR [edi+edi*4-0x2e1ce51a],esi
  41a5e0:	jnp    0x41a5ea
  41a5e2:	push   esp
  41a5e3:	or     DWORD PTR [ebp-0x70],ebx
  41a5e6:	cdq    
  41a5e7:	jae    0x41a604
  41a5e9:	fiadd  WORD PTR [ebx]
  41a5eb:	fisttp QWORD PTR [eax]
  41a5ed:	les    ebp,FWORD PTR [edx+0x10]
  41a5f0:	pop    ebx
  41a5f1:	sbb    al,0x60
  41a5f3:	daa    
  41a5f4:	cwde   
  41a5f5:	dec    edx
  41a5f6:	sub    DWORD PTR [ebx+0x276b3908],ebp
  41a5fc:	stc    
  41a5fd:	sub    BYTE PTR [ecx],dh
  41a5ff:	imul   ebx,edi,0x6b
  41a602:	adc    DWORD PTR [eax],esp
  41a604:	mov    WORD PTR [edx-0x62b900ba],cs
  41a60a:	push   0xda7e8dfa
  41a60f:	mov    ebp,0x5ace66c9
  41a614:	pop    ds
  41a615:	retf   
  41a616:	mov    BYTE PTR [ebx+0x34],cl
  41a619:	sbb    eax,0xe686eec3
  41a61e:	xchg   ebx,eax
  41a61f:	push   eax
  41a620:	mov    ch,0x39
  41a622:	fiadd  WORD PTR [eax]
  41a624:	inc    eax
  41a625:	sbb    BYTE PTR [ebx],cl
  41a627:	pop    esp
  41a628:	fistp  DWORD PTR [edx+ebx*1+0x6d35cd5e]
  41a62f:	cwde   
  41a630:	sub    al,0x82
  41a632:	loopne 0x41a5fe
  41a634:	retf   
  41a635:	xchg   DWORD PTR [edi],eax
  41a637:	ret    0x49e9
  41a63a:	sti    
  41a63b:	cmc    
  41a63c:	pushf  
  41a63d:	fisubr DWORD PTR [eax-0x5d]
  41a640:	and    DWORD PTR [edi],esp
  41a642:	sub    bp,si
  41a645:	outs   dx,BYTE PTR ds:[esi]
  41a646:	popf   
  41a647:	sub    esi,ecx
  41a649:	(bad)  
  41a64b:	dec    edi
  41a64c:	(bad)  
  41a64d:	in     al,dx
  41a64e:	in     al,0xc9
  41a650:	and    DWORD PTR [eax-0x7d],ebx
  41a653:	ret    
  41a654:	or     BYTE PTR [esi],ah
  41a656:	add    al,0xba
  41a658:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41a65a:	mov    al,ds:0xec27a84a
  41a65f:	xchg   ebx,eax
  41a660:	outs   dx,DWORD PTR ds:[esi]
  41a661:	jne    0x41a637
  41a663:	fld    QWORD PTR [ebx]
  41a665:	jnp    0x41a677
  41a667:	inc    BYTE PTR ds:0x45093e4c
  41a66d:	xchg   ebp,eax
  41a66e:	sbb    ecx,DWORD PTR [edx+0x36]
  41a671:	sbb    al,0x2c
  41a673:	cmp    BYTE PTR [esi],cl
  41a675:	and    esi,DWORD PTR [ecx+0x25]
  41a678:	fwait
  41a679:	or     cl,BYTE PTR [ebx+0x11]
  41a67c:	add    DWORD PTR [ebx+0x47d4166a],ecx
  41a682:	cdq    
  41a683:	cmp    cl,BYTE PTR [ecx-0x9]
  41a686:	push   cs
  41a687:	or     al,0xc6
  41a689:	cs mov ch,0x8
  41a68c:	leave  
  41a68d:	jecxz  0x41a671
  41a68f:	aad    0x5a
  41a691:	pushf  
  41a692:	pop    esi
  41a693:	mov    ebp,esi
  41a695:	sbb    DWORD PTR [esi-0x7bda77ee],edi
  41a69b:	das    
  41a69c:	mov    esi,0x6f3f487
  41a6a1:	test   DWORD PTR [esi-0x57d9b639],ebp
  41a6a7:	repz (bad) 
  41a6a9:	xchg   ebp,eax
  41a6aa:	inc    eax
  41a6ab:	jbe    0x41a690
  41a6ad:	mov    ebx,0x53e554e6
  41a6b2:	push   ecx
  41a6b3:	push   edx
  41a6b4:	nop
  41a6b5:	and    BYTE PTR [ecx],bl
  41a6b7:	iret   
  41a6b8:	ins    BYTE PTR es:[edi],dx
  41a6b9:	push   ecx
  41a6ba:	mov    al,ds:0x3d63354f
  41a6bf:	jl     0x41a69c
  41a6c1:	ins    DWORD PTR es:[edi],dx
  41a6c2:	jae    0x41a6ee
  41a6c4:	xor    eax,0xab84d878
  41a6c9:	mov    bl,0xde
  41a6cb:	push   0xf0fd586f
  41a6d0:	mov    bl,0x8c
  41a6d2:	push   0x72
  41a6d4:	outs   dx,DWORD PTR ds:[esi]
  41a6d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6d6:	sbb    DWORD PTR [eax+0x47c85e93],0x33
  41a6dd:	xor    ebp,DWORD PTR [ecx-0x68be80f8]
  41a6e3:	jl     0x41a6b1
  41a6e5:	cli    
  41a6e6:	and    DWORD PTR [eax-0x30bb47dd],edx
  41a6ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6ed:	cmp    ebx,DWORD PTR [ecx-0x21629d47]
  41a6f3:	stos   DWORD PTR es:[edi],eax
  41a6f4:	xor    bl,BYTE PTR [edi+0x23fe4919]
  41a6fa:	scas   eax,DWORD PTR es:[edi]
  41a6fb:	rol    BYTE PTR [ebx],cl
  41a6fd:	sar    ch,cl
  41a6ff:	js     0x41a742
  41a701:	jb     0x41a69d
  41a703:	pop    ds
  41a704:	leave  
  41a705:	jle    0x41a739
  41a707:	jg     0x41a766
  41a709:	push   eax
  41a70a:	push   ds
  41a70b:	cld    
  41a70c:	sahf   
  41a70d:	mov    edi,0x141d307a
  41a712:	cmp    al,0x8e
  41a714:	ins    BYTE PTR es:[edi],dx
  41a715:	inc    eax
  41a716:	imul   esp,DWORD PTR [eax+0x26],0x1781389d
  41a71d:	shl    DWORD PTR [edi],0x34
  41a720:	inc    esi
  41a721:	mov    al,ds:0xcb45de63
  41a726:	sub    esp,DWORD PTR [esi-0x1b]
  41a729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a72a:	aam    0x32
  41a72c:	push   bp
  41a72e:	push   eax
  41a72f:	dec    esi
  41a730:	outs   dx,DWORD PTR fs:[esi]
  41a732:	in     al,0x22
  41a734:	jns    0x41a792
  41a736:	jmp    0x23558f29
  41a73b:	mov    ds,WORD PTR [eax+eiz*4]
  41a73e:	shl    BYTE PTR [eax],0x6
  41a741:	mov    ebp,0x2c5393e7
  41a746:	sar    DWORD PTR [ecx+0x17590069],0x9e
  41a74d:	mov    dh,0xae
  41a74f:	sub    al,0x9f
  41a751:	(bad)  
  41a752:	imul   ebx,DWORD PTR [ecx],0x6
  41a755:	mov    esp,0xfa9a4d2
  41a75a:	jmp    0x8263cf17
  41a75f:	jle    0x41a791
  41a761:	xor    DWORD PTR [esi+0x9],edi
  41a764:	test   eax,0x91c2c13d
  41a769:	(bad)  
  41a76a:	push   ds
  41a76b:	call   0x30903590
  41a770:	inc    edx
  41a771:	mov    ebp,?
  41a773:	iret   
  41a774:	xchg   esp,eax
  41a775:	inc    esp
  41a776:	iret   
  41a777:	mov    bl,0x4d
  41a779:	aam    0x0
  41a77b:	not    BYTE PTR [esi]
  41a77d:	ret    
  41a77e:	mov    ah,BYTE PTR [ebp+0x14]
  41a781:	rol    BYTE PTR [edi+0x2f],cl
  41a784:	or     al,0x2b
  41a786:	pop    ecx
  41a787:	leave  
  41a788:	add    eax,0x9a82fa34
  41a78d:	mov    al,dl
  41a78f:	dec    edx
  41a790:	adc    DWORD PTR [ebx+eiz*8-0x58],esp
  41a794:	leave  
  41a795:	jo     0x41a7fa
  41a797:	xor    ebx,ebx
  41a799:	mov    dl,0x54
  41a79b:	xor    eax,0x1df3854c
  41a7a0:	or     ah,cl
  41a7a2:	xchg   ebp,eax
  41a7a3:	jg     0x41a79b
  41a7a5:	and    BYTE PTR [ebp-0x5d36d110],ah
  41a7ab:	xor    al,BYTE PTR [ecx-0x7f]
  41a7ae:	fstp   QWORD PTR [ebp-0xf536ffc]
  41a7b4:	sbb    bh,BYTE PTR [edx]
  41a7b6:	push   ss
  41a7b7:	xchg   esi,eax
  41a7b8:	sub    cl,al
  41a7ba:	retf   0x212
  41a7bd:	in     eax,dx
  41a7be:	mov    ch,0xac
  41a7c0:	fcomp  QWORD PTR [edi]
  41a7c2:	(bad)  
  41a7c3:	jge    0x41a838
  41a7c5:	jno    0x41a788
  41a7c7:	sbb    al,0xbf
  41a7c9:	not    DWORD PTR [ecx]
  41a7cb:	xchg   ecx,eax
  41a7cc:	sbb    ebp,edx
  41a7ce:	dec    ebp
  41a7cf:	popf   
  41a7d0:	fs and al,0x90
  41a7d3:	xchg   edx,eax
  41a7d4:	pop    es
  41a7d5:	dec    edi
  41a7d6:	mov    al,ds:0x1b162d86
  41a7db:	xor    edi,DWORD PTR [esi-0x36301ff0]
  41a7e1:	ins    DWORD PTR es:[edi],dx
  41a7e2:	in     eax,dx
  41a7e3:	(bad)  
  41a7e4:	popa   
  41a7e5:	scas   eax,DWORD PTR es:[edi]
  41a7e6:	inc    esi
  41a7e7:	jmp    0x4cd778a2
  41a7ec:	ret    
  41a7ed:	push   edx
  41a7ee:	inc    ebx
  41a7ef:	push   esp
  41a7f0:	jb     0x41a78c
  41a7f2:	ds fwait
  41a7f4:	sub    BYTE PTR [ebx+0x13],0x72
  41a7f8:	or     BYTE PTR [edx-0x3aa46553],al
  41a7fe:	cmp    bh,BYTE PTR [ebp-0x30]
  41a801:	mov    al,0xd6
  41a803:	mov    ds:0x5bc8ab60,eax
  41a808:	push   0x47
  41a80a:	mov    WORD PTR [ebp-0x4c17c738],?
  41a810:	xchg   esi,eax
  41a811:	push   ss
  41a812:	mov    dl,0xe9
  41a814:	jmp    0xa9b6:0x871ac473
  41a81b:	xor    BYTE PTR es:[esi+0x4b],dl
  41a81f:	xor    esi,ebp
  41a821:	(bad)  
  41a822:	dec    esp
  41a823:	or     ebx,ecx
  41a825:	ror    eax,1
  41a827:	sbb    al,0x5b
  41a829:	(bad)  
  41a82a:	jo     0x41a7f5
  41a82c:	sar    DWORD PTR [ecx-0x47],1
  41a82f:	mov    esi,0x55a25647
  41a834:	xchg   DWORD PTR [ecx-0x41],esi
  41a837:	or     DWORD PTR ds:0xfd33bb19,0x6d
  41a83e:	xor    esp,DWORD PTR [ecx-0x762dd519]
  41a844:	in     eax,0xca
  41a846:	fisttp DWORD PTR [eax]
  41a848:	daa    
  41a849:	pop    ebx
  41a84a:	inc    esp
  41a84b:	scas   eax,DWORD PTR es:[edi]
  41a84c:	int3   
  41a84d:	sti    
  41a84e:	pop    esi
  41a84f:	sub    al,0xa2
  41a851:	sbb    al,0x7f
  41a853:	mov    dh,0xf5
  41a855:	out    0xb9,al
  41a857:	push   ebp
  41a858:	pop    ebx
  41a859:	(bad)  
  41a85a:	out    dx,eax
  41a85b:	stos   DWORD PTR es:[edi],eax
  41a85c:	jo     0x41a7e1
  41a85e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a85f:	sbb    al,0x35
  41a861:	idiv   DWORD PTR [ecx]
  41a863:	adc    dl,BYTE PTR [ecx-0x337fc0c5]
  41a869:	sbb    DWORD PTR [edx-0x20],ecx
  41a86c:	pop    edi
  41a86d:	cmp    dh,0xc8
  41a870:	(bad)  
  41a871:	mov    edx,0x804ec675
  41a876:	(bad)  
  41a877:	jge    0x41a84e
  41a879:	adc    ecx,DWORD PTR [ecx]
  41a87b:	sub    dl,al
  41a87d:	sub    cl,BYTE PTR [eax-0x4c1ab31c]
  41a883:	push   ebx
  41a884:	fimul  DWORD PTR [esi-0x21]
  41a887:	mov    ebx,0x44f31904
  41a88c:	xchg   esi,eax
  41a88d:	dec    esp
  41a88e:	inc    esi
  41a88f:	pop    es
  41a890:	out    dx,eax
  41a891:	ror    DWORD PTR [ebx+0x67570d21],1
  41a897:	xor    ecx,edi
  41a899:	mov    edx,0x81329637
  41a89e:	jno    0x41a86e
  41a8a0:	mov    dh,0x5
  41a8a2:	gs push ebx
  41a8a4:	sub    al,0x1d
  41a8a6:	lods   eax,DWORD PTR ds:[esi]
  41a8a7:	mov    ecx,0x1b666448
  41a8ac:	shr    ch,0x68
  41a8af:	fadd   QWORD PTR [ecx]
  41a8b1:	xchg   esi,eax
  41a8b2:	retf   0xa4da
  41a8b5:	cmp    eax,0x5e857628
  41a8ba:	inc    edx
  41a8bb:	cmp    esi,DWORD PTR [ecx+0x3]
  41a8be:	sahf   
  41a8bf:	jge    0x41a913
  41a8c1:	mov    eax,0x8975f066
  41a8c6:	mov    ebx,0x73056124
  41a8cb:	jne    0x41a8b2
  41a8cd:	xchg   ebp,eax
  41a8ce:	cmp    ah,BYTE PTR [eax-0x317b462c]
  41a8d4:	push   edi
  41a8d5:	or     al,BYTE PTR [ebx]
  41a8d7:	mov    ds,edi
  41a8d9:	and    edi,esi
  41a8db:	rcl    BYTE PTR [edi-0x1],cl
  41a8de:	mov    ebp,0x65c375c8
  41a8e3:	and    DWORD PTR [ebx-0x13],0x27
  41a8e7:	mov    BYTE PTR [ebp+edi*4+0x65],al
  41a8eb:	retf   
  41a8ec:	adc    BYTE PTR [eax+0x29],dl
  41a8ef:	mov    ecx,0xbea81f82
  41a8f4:	lea    esi,[ebp+0x11fe7070]
  41a8fa:	mov    ebx,0xf85b5a56
  41a8ff:	mov    ebp,0xf0379b20
  41a904:	in     eax,dx
  41a905:	in     eax,dx
  41a906:	add    DWORD PTR [ebx+0x4],ecx
  41a909:	addr16 out dx,al
  41a90b:	aam    0x49
  41a90d:	or     BYTE PTR [edi],ah
  41a90f:	jle    0x41a8c7
  41a911:	mov    bl,0x97
  41a913:	out    0x25,eax
  41a915:	jno    0x41a906
  41a917:	stos   BYTE PTR es:[edi],al
  41a918:	(bad)  ds:0x44191731
  41a91e:	jae    0x41a95c
  41a920:	stc    
  41a921:	pop    ebx
  41a922:	shr    BYTE PTR [esi-0x41],cl
  41a925:	fwait
  41a926:	push   es
  41a927:	lds    esp,FWORD PTR [ecx+esi*1-0x23713456]
  41a92e:	in     eax,dx
  41a92f:	jne    0x41a9a0
  41a931:	add    ebx,ebx
  41a933:	(bad)  
  41a934:	sub    ebp,DWORD PTR [edx-0x2a81a810]
  41a93a:	push   ebx
  41a93b:	xchg   esi,eax
  41a93c:	(bad)  
  41a93d:	enter  0x8c11,0x3d
  41a941:	stc    
  41a942:	loop   0x41a964
  41a944:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a945:	inc    esi
  41a946:	loopne 0x41a946
  41a948:	mov    bl,0xf3
  41a94a:	addr16 push eax
  41a94c:	push   eax
  41a94d:	ret    
  41a94e:	jecxz  0x41a9ca
  41a950:	xchg   esi,eax
  41a951:	ja     0x41a8d6
  41a953:	lahf   
  41a954:	jne    0x41a8d6
  41a956:	adc    esi,DWORD PTR [eax+0x72]
  41a959:	pushf  
  41a95a:	push   es
  41a95b:	or     esp,edi
  41a95d:	xchg   DWORD PTR [ecx-0x7],ecx
  41a960:	mov    eax,DWORD PTR [eax]
  41a962:	cmc    
  41a963:	mov    es,WORD PTR [esi]
  41a965:	jmp    0x3ec8:0xef711c5
  41a96c:	sti    
  41a96d:	inc    ebp
  41a96e:	ins    BYTE PTR es:[edi],dx
  41a96f:	hlt    
  41a970:	xor    al,0x82
  41a972:	call   0xe9c16dd7
  41a977:	mov    BYTE PTR [ebp-0x2f4af077],bl
  41a97d:	cs scas al,BYTE PTR es:[edi]
  41a97f:	and    DWORD PTR [ebx-0x5],eax
  41a982:	push   es
  41a983:	xchg   ebp,eax
  41a984:	xchg   ebx,eax
  41a985:	es arpl ax,sp
  41a988:	inc    edx
  41a989:	xor    dh,BYTE PTR [ebx]
  41a98b:	(bad)  
  41a98d:	pushf  
  41a98e:	les    esp,FWORD PTR [ebx-0x3c]
  41a991:	jl     0x41a9a6
  41a993:	inc    ebx
  41a994:	cmp    BYTE PTR [ebx+0x48fd6dee],bh
  41a99a:	mov    ch,0x1d
  41a99c:	scas   eax,DWORD PTR es:[edi]
  41a99d:	mov    dl,0xb6
  41a99f:	repz rep lods al,BYTE PTR ds:[esi]
  41a9a2:	push   0xa7a2b1c4
  41a9a7:	ret    0xd2a7
  41a9aa:	icebp  
  41a9ab:	test   DWORD PTR [ebp+0x44],esi
  41a9ae:	ins    DWORD PTR es:[edi],dx
  41a9af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9b0:	and    BYTE PTR [edi+0xa],bh
  41a9b3:	test   DWORD PTR [ebp-0x4ad22fb3],0xc66577a8
  41a9bd:	mov    ch,0x9e
  41a9bf:	subps  xmm3,XMMWORD PTR [ebx-0x49]
  41a9c3:	jnp    0x41aa2b
  41a9c5:	and    eax,0x7b1f32
  41a9ca:	ror    DWORD PTR [ecx-0x13],0xb5
  41a9ce:	ss or  eax,0x15103f52
  41a9d4:	inc    edi
  41a9d5:	jge    0x41aa16
  41a9d7:	aam    0xa6
  41a9d9:	outs   dx,DWORD PTR ds:[esi]
  41a9da:	cli    
  41a9db:	stos   BYTE PTR es:[edi],al
  41a9dc:	hlt    
  41a9dd:	pop    ecx
  41a9de:	mov    dh,0x71
  41a9e0:	dec    ecx
  41a9e1:	sub    al,0x26
  41a9e3:	push   es
  41a9e4:	inc    eax
  41a9e5:	sbb    BYTE PTR [ecx],bh
  41a9e7:	jb     0x41a9eb
  41a9e9:	or     DWORD PTR [esi+ebx*2],edi
  41a9ec:	mov    edx,DWORD PTR [edx]
  41a9ee:	add    al,0x81
  41a9f0:	retf   
  41a9f1:	loop   0x41a9d2
  41a9f3:	fisubr WORD PTR [ecx+0xc144bfc]
  41a9f9:	stc    
  41a9fa:	(bad)  
  41a9fb:	es mov al,0xf5
  41a9fe:	sub    eax,0x100bf910
  41aa03:	shl    BYTE PTR [esi],1
  41aa05:	out    dx,al
  41aa06:	ins    DWORD PTR es:[edi],dx
  41aa07:	ins    DWORD PTR es:[edi],dx
  41aa08:	xor    eax,0x305e80ad
  41aa0d:	mov    ebx,0x18961858
  41aa12:	sub    eax,0xd1947e1
  41aa17:	push   0x1e1c5843
  41aa1c:	ds pusha 
  41aa1e:	jb     0x41aa86
  41aa20:	hlt    
  41aa21:	or     BYTE PTR [ebx],0x2c
  41aa24:	jo     0x41aa13
  41aa26:	das    
  41aa27:	lahf   
  41aa28:	dec    ecx
  41aa29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa2a:	add    ah,0x70
  41aa2d:	clc    
  41aa2e:	inc    edx
  41aa2f:	jno    0x41a9df
  41aa31:	outs   dx,DWORD PTR ds:[esi]
  41aa32:	js     0x41a9e4
  41aa34:	scas   al,BYTE PTR es:[edi]
  41aa35:	cmp    al,0x7
  41aa37:	ror    bh,cl
  41aa39:	jmp    0x41aaa2
  41aa3b:	gs call 0x8fd7:0xe966185
  41aa43:	dec    edi
  41aa44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa45:	or     eax,0x4f628736
  41aa4a:	ss in  al,dx
  41aa4c:	push   cs
  41aa4d:	fidiv  DWORD PTR [edx-0x70d4460f]
  41aa53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa54:	jg     0x41aa6c
  41aa56:	in     eax,0x64
  41aa58:	push   esi
  41aa59:	sbb    edx,eax
  41aa5b:	push   ebp
  41aa5c:	test   al,0xcd
  41aa5e:	pop    edx
  41aa5f:	sti    
  41aa60:	addr16 ja 0x41a9ff
  41aa63:	jl     0x41aae2
  41aa65:	jl     0x41aa64
  41aa67:	push   ebx
  41aa68:	and    DWORD PTR [ebx],eax
  41aa6a:	scas   al,BYTE PTR es:[edi]
  41aa6b:	and    esp,DWORD PTR [edx-0x59c32ddc]
  41aa71:	cdq    
  41aa72:	dec    edx
  41aa73:	lea    ebx,[esi+0x61c0665f]
  41aa79:	out    dx,eax
  41aa7a:	inc    ebp
  41aa7b:	fmul   DWORD PTR [ebx+edi*4-0x7382b47f]
  41aa82:	sub    eax,DWORD PTR [esi-0x13]
  41aa85:	ret    
  41aa86:	dec    ebp
  41aa87:	mov    WORD PTR [edx+0x48],es
  41aa8a:	loope  0x41aa1a
  41aa8c:	adc    al,bl
  41aa8e:	test   al,0x37
  41aa90:	iret   
  41aa91:	inc    esp
  41aa92:	fdivr  QWORD PTR [esi]
  41aa94:	mov    BYTE PTR [ecx],dl
  41aa96:	jnp    0x41aab8
  41aa98:	and    ch,dh
  41aa9a:	xchg   ebx,eax
  41aa9b:	popa   
  41aa9c:	push   cs
  41aa9d:	test   eax,0xe13dc27b
  41aaa2:	xlat   BYTE PTR ds:[ebx]
  41aaa3:	jge    0x41aa4c
  41aaa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aaa6:	dec    edi
  41aaa7:	sahf   
  41aaa8:	mov    eax,ds:0x208f3e1f
  41aaad:	push   ebx
  41aaae:	popa   
  41aaaf:	ds int 0x48
  41aab2:	mov    ebp,0x8a27633
  41aab7:	(bad)  
  41aab8:	fwait
  41aab9:	cld    
  41aaba:	xor    dh,BYTE PTR [ecx+ecx*1+0x104ee912]
  41aac1:	jnp    0x41ab1c
  41aac3:	add    al,0x4e
  41aac5:	cld    
  41aac6:	and    eax,0x652d46f5
  41aacb:	mov    dh,0x92
  41aacd:	xor    al,0x2b
  41aacf:	push   ss
  41aad0:	push   esi
  41aad1:	mov    BYTE PTR [edx+ebp*4],0x40
  41aad5:	jb     0x41aa84
  41aad7:	jge    0x41aa8a
  41aad9:	jle    0x41ab39
  41aadb:	fstp   DWORD PTR [ebp-0x49]
  41aade:	scas   al,BYTE PTR es:[edi]
  41aadf:	and    DWORD PTR [esi-0x25633cb0],0x5e21a33
  41aae9:	push   esp
  41aaea:	in     al,dx
  41aaeb:	repnz xchg ecx,eax
  41aaed:	mov    dl,0x9
  41aaef:	stos   DWORD PTR es:[edi],eax
  41aaf0:	pushf  
  41aaf1:	lds    ebx,FWORD PTR [ecx+0x4b6d0450]
  41aaf7:	iret   
  41aaf8:	pop    esi
  41aaf9:	or     ebp,DWORD PTR [esi+0x749a6864]
  41aaff:	adc    BYTE PTR [esi+ecx*1-0x75],ah
  41ab03:	stos   DWORD PTR es:[edi],eax
  41ab04:	xor    eax,0x62219a7
  41ab09:	jns    0x41ab13
  41ab0b:	frstor es:[esi+0x73d5c713]
  41ab12:	lods   al,BYTE PTR ds:[esi]
  41ab13:	inc    eax
  41ab14:	test   DWORD PTR [edi],esi
  41ab16:	or     BYTE PTR [esi],dh
  41ab18:	mov    edx,0x79e8c7c8
  41ab1d:	out    0xdb,eax
  41ab1f:	in     al,dx
  41ab20:	sbb    ecx,ebx
  41ab22:	js     0x41ab18
  41ab24:	je     0x41ab5e
  41ab26:	cmp    eax,0xa8b8e62
  41ab2b:	mov    ch,0x29
  41ab2d:	cli    
  41ab2e:	adc    eax,0x5cb079ef
  41ab33:	push   ss
  41ab34:	push   0xa709fa77
  41ab39:	push   0x56
  41ab3b:	push   esp
  41ab3c:	add    edx,DWORD PTR [eax-0x77]
  41ab3f:	or     ah,BYTE PTR ds:0x97a96f62
  41ab45:	enter  0x548a,0x75
  41ab49:	sbb    al,0x2f
  41ab4b:	mov    BYTE PTR [edx],cl
  41ab4d:	add    ebp,esp
  41ab4f:	mov    edi,0x3c47ef7a
  41ab54:	jnp    0x41ab0c
  41ab56:	add    ecx,0x5708f8
  41ab5c:	imul   ecx,edx
  41ab5f:	mov    DWORD PTR [ebp-0x58],ecx
  41ab62:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab65:	mov    edx,DWORD PTR [ebp-0x54]
  41ab68:	add    ecx,0x64f8da
  41ab6e:	or     ecx,edx
  41ab70:	mov    DWORD PTR [ebp-0x54],ecx
  41ab73:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab76:	mov    edx,DWORD PTR [ebp-0x50]
  41ab79:	add    ecx,0x242ebed
  41ab7f:	xor    ecx,edx
  41ab81:	mov    DWORD PTR [ebp-0x50],ecx
  41ab84:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab87:	mov    edx,DWORD PTR [ebp-0x4c]
  41ab8a:	add    ecx,edi
  41ab8c:	and    ecx,edx
  41ab8e:	mov    DWORD PTR [ebp-0x4c],ecx
  41ab91:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab94:	mov    edx,DWORD PTR [ebp-0x48]
  41ab97:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41ab9e:	mov    DWORD PTR [ebp-0x48],ecx
  41aba1:	mov    ecx,DWORD PTR [ebp+0x8]
  41aba4:	mov    edx,0xfa5e15e2
  41aba9:	sub    edx,ecx
  41abab:	add    edx,DWORD PTR [ebp-0x44]
  41abae:	mov    DWORD PTR [ebp-0x44],edx
  41abb1:	mov    ecx,DWORD PTR [ebp+0x8]
  41abb4:	xor    ecx,eax
  41abb6:	add    ecx,esi
  41abb8:	jne    0x4187b7
  41abbe:	mov    ecx,DWORD PTR [ebp-0x8]
  41abc1:	xor    ecx,eax
  41abc3:	mov    eax,DWORD PTR [ebp+0x10]
  41abc6:	add    ecx,esi
  41abc8:	mov    DWORD PTR [eax],ecx
  41abca:	pop    edi
  41abcb:	pop    esi
  41abcc:	pop    ebx
  41abcd:	leave  
  41abce:	ret    0xc
  41abd1:	add    BYTE PTR [eax-0x5ffbffbe],ah
  41abd7:	inc    edx
  41abd8:	add    BYTE PTR [eax],cl
  41abda:	mov    al,ds:0xa00c0042
  41abdf:	inc    edx
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    al,ds:0xa0140042
  41abe7:	inc    edx
  41abe8:	add    BYTE PTR [eax],bl
  41abea:	mov    al,ds:0xa01c0042
  41abef:	inc    edx
  41abf0:	add    BYTE PTR [eax],al
  41abf2:	rol    BYTE PTR [edx+0x0],1
  41abf5:	add    al,0xd0
  41abf7:	inc    edx
  41abf8:	add    BYTE PTR [eax],cl
  41abfa:	rol    BYTE PTR [edx+0x0],1
  41abfd:	or     al,0xd0
  41abff:	inc    edx
  41ac00:	add    BYTE PTR [eax],dl
  41ac02:	rol    BYTE PTR [edx+0x0],1
  41ac05:	adc    al,0xd0
  41ac07:	inc    edx
  41ac08:	add    BYTE PTR [eax],bl
  41ac0a:	rol    BYTE PTR [edx+0x0],1
  41ac0d:	sbb    al,0xd0
  41ac0f:	inc    edx
	...
  41ac24:	scas   al,BYTE PTR es:[edi]
  41ac25:	pop    esp
  41ac26:	nop
  41ac27:	dec    ebp
  41ac28:	add    BYTE PTR [eax],al
  41ac2a:	add    BYTE PTR [eax],al
  41ac2c:	add    al,BYTE PTR [eax]
  41ac2e:	add    BYTE PTR [eax],al
  41ac30:	cmp    eax,0xb0000000
  41ac35:	lods   al,BYTE PTR ds:[esi]
  41ac36:	add    DWORD PTR [eax],eax
  41ac38:	mov    al,0xa0
  41ac3a:	add    DWORD PTR [eax],eax
  41ac3c:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41ac42:	inc    edx
  41ac43:	add    BYTE PTR [eax],cl
  41ac45:	nop
  41ac46:	inc    edx
  41ac47:	add    BYTE PTR [eax+edx*4],cl
  41ac4a:	inc    edx
  41ac4b:	add    BYTE PTR [eax],dl
  41ac4d:	nop
  41ac4e:	inc    edx
  41ac4f:	add    BYTE PTR [eax+edx*4],dl
  41ac52:	inc    edx
  41ac53:	add    BYTE PTR [eax],bl
  41ac55:	nop
  41ac56:	inc    edx
  41ac57:	add    BYTE PTR [eax+edx*4],bl
  41ac5a:	inc    edx
  41ac5b:	add    BYTE PTR [eax],ah
  41ac5d:	nop
  41ac5e:	inc    edx
  41ac5f:	add    BYTE PTR [eax+edx*4],ah
  41ac62:	inc    edx
  41ac63:	add    BYTE PTR [eax],ch
  41ac65:	nop
  41ac66:	inc    edx
  41ac67:	add    BYTE PTR [eax],al
  41ac69:	mov    al,0x42
  41ac6b:	add    BYTE PTR [eax+esi*4],al
  41ac6e:	inc    edx
  41ac6f:	add    BYTE PTR [eax],cl
  41ac71:	mov    al,0x42
  41ac73:	add    BYTE PTR [eax+esi*4],cl
  41ac76:	inc    edx
  41ac77:	add    BYTE PTR [eax],dl
  41ac79:	mov    al,0x42
  41ac7b:	add    BYTE PTR [eax+esi*4],dl
  41ac7e:	inc    edx
  41ac7f:	add    BYTE PTR [eax],bl
  41ac81:	mov    al,0x42
  41ac83:	add    BYTE PTR [eax+esi*4],bl
  41ac86:	inc    edx
  41ac87:	add    BYTE PTR [eax],al
  41ac89:	rol    BYTE PTR [edx+0x0],0x4
  41ac8d:	rol    BYTE PTR [edx+0x0],0x8
  41ac91:	rol    BYTE PTR [edx+0x0],0xc
  41ac95:	rol    BYTE PTR [edx+0x0],0x10
  41ac99:	rol    BYTE PTR [edx+0x0],0x14
  41ac9d:	rol    BYTE PTR [edx+0x0],0x18
  41aca1:	rol    BYTE PTR [edx+0x0],0x1c
  41aca5:	rol    BYTE PTR [edx+0x0],0x0
  41aca9:	add    BYTE PTR [eax],al
  41acab:	add    BYTE PTR [eax],al
  41acad:	add    BYTE PTR [eax],al
  41acaf:	add    BYTE PTR [edx+0x53],dl
  41acb2:	inc    esp
  41acb3:	push   ebx
  41acb4:	pop    ds
  41acb5:	inc    esp
  41acb6:	enter  0x27b2,0x65
  41acba:	push   0x41
  41acbc:	test   DWORD PTR [esi+0x30],ecx
  41acbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acc0:	test   BYTE PTR [eax+0x1ce40],al
  41acc6:	add    BYTE PTR [eax],al
  41acc8:	inc    ebx
  41acc9:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41accd:	jb     0x41ad41
  41accf:	outs   dx,BYTE PTR gs:[esi]
  41acd1:	je     0x41ad17
  41acd3:	popa   
  41acd4:	je     0x41ad37
  41acd6:	pop    esp
  41acd7:	dec    ebp
  41acd8:	outs   dx,DWORD PTR ds:[esi]
  41acd9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  41ace1:	ins    BYTE PTR es:[edi],dx
  41ace2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  41ace9:	dec    esi
  41acea:	gs ja  0x41aced
  41aced:	mov    edx,DWORD PTR [ebp-0x14]
  41acf0:	sub    esp,0xe4
  41acf6:	push   ebx
  41acf7:	push   edi
  41acf8:	mov    eax,ebx
  41acfa:	xchg   ecx,eax
  41acfb:	mov    eax,DWORD PTR [ebp+0x8]
  41acfe:	mov    edi,0xf89c85b9
  41ad03:	cmp    eax,edi
  41ad05:	jne    0x41b0a1
  41ad0b:	mov    eax,DWORD PTR [ebp+0xc]
  41ad0e:	cmp    eax,0xf89c85b8
  41ad13:	jne    0x41b0a1
  41ad19:	mov    eax,DWORD PTR [ebp+0x24]
  41ad1c:	mov    DWORD PTR [ebp-0x4],eax
  41ad1f:	mov    BYTE PTR [ebp-0x18],0x3
  41ad23:	mov    BYTE PTR [ebp-0x17],0x1e
  41ad27:	mov    BYTE PTR [ebp-0x16],0x1
  41ad2b:	mov    BYTE PTR [ebp-0x15],0x4f
  41ad2f:	mov    BYTE PTR [ebp-0x14],0x48
  41ad33:	mov    BYTE PTR [ebp-0x13],0x7a
  41ad37:	mov    BYTE PTR [ebp-0x20],0xd
  41ad3b:	mov    BYTE PTR [ebp-0x1f],0xf
  41ad3f:	mov    BYTE PTR [ebp-0x1e],0x1d
  41ad43:	mov    BYTE PTR [ebp-0x1d],0x8
  41ad47:	mov    BYTE PTR [ebp-0x1c],0x4f
  41ad4b:	mov    BYTE PTR [ebp-0x1b],0x48
  41ad4f:	mov    BYTE PTR [ebp-0x1a],0x7a
  41ad53:	mov    BYTE PTR [ebp-0x28],0xf
  41ad57:	mov    BYTE PTR [ebp-0x27],0x2
  41ad5b:	mov    BYTE PTR [ebp-0x26],0x6
  41ad5f:	mov    BYTE PTR [ebp-0x25],0xf3
  41ad63:	mov    BYTE PTR [ebp-0x24],0x19
  41ad67:	mov    BYTE PTR [ebp-0x23],0xa
  41ad6b:	push   esi
  41ad6c:	mov    BYTE PTR [ebp-0x22],0x1
  41ad70:	xor    edx,edx
  41ad72:	mov    BYTE PTR [ebp-0x21],0x7a
  41ad76:	xor    esi,esi
  41ad78:	mov    eax,0xf7
  41ad7d:	lea    ecx,[ebp+esi*1-0x18]
  41ad81:	movzx  ebx,BYTE PTR [ecx]
  41ad84:	xor    ebx,0x73
  41ad87:	add    ebx,eax
  41ad89:	inc    esi
  41ad8a:	mov    BYTE PTR [ecx],bl
  41ad8c:	cmp    esi,0x6
  41ad8f:	jb     0x41ad7d
  41ad91:	xor    esi,esi
  41ad93:	lea    ecx,[ebp+esi*1-0x20]
  41ad97:	movzx  ebx,BYTE PTR [ecx]
  41ad9a:	xor    ebx,0x73
  41ad9d:	add    ebx,eax
  41ad9f:	inc    esi
  41ada0:	mov    BYTE PTR [ecx],bl
  41ada2:	cmp    esi,0x7
  41ada5:	jb     0x41ad93
  41ada7:	xor    esi,esi
  41ada9:	lea    ecx,[ebp+esi*1-0x28]
  41adad:	movzx  ebx,BYTE PTR [ecx]
  41adb0:	xor    ebx,0x73
  41adb3:	add    ebx,eax
  41adb5:	inc    esi
  41adb6:	mov    BYTE PTR [ecx],bl
  41adb8:	cmp    esi,0x8
  41adbb:	jb     0x41ada9
  41adbd:	lea    eax,[ebp-0x2c]
  41adc0:	mov    DWORD PTR [ebp-0x8],eax
  41adc3:	mov    ecx,DWORD PTR [ebp-0x8]
  41adc6:	mov    eax,0x7113fcef
  41adcb:	mov    DWORD PTR [ecx],eax
  41adcd:	mov    ecx,DWORD PTR [ebp-0x2c]
  41add0:	cmp    ecx,eax
  41add2:	jne    0x41adde
  41add4:	mov    DWORD PTR [ebp-0x8],edi
  41add7:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  41adde:	mov    eax,DWORD PTR [ebp-0x4]
  41ade1:	mov    eax,DWORD PTR [eax+0x18c]
  41ade7:	mov    ebx,0x7510899
  41adec:	mov    esi,0x3272e0
  41adf1:	cmp    DWORD PTR [eax],edx
  41adf3:	jne    0x41b03d
  41adf9:	mov    eax,DWORD PTR [ebp-0x4]
  41adfc:	mov    eax,DWORD PTR [eax+0x17c]
  41ae02:	mov    DWORD PTR [eax],edx
  41ae04:	mov    eax,DWORD PTR [ebp-0x4]
  41ae07:	mov    eax,DWORD PTR [eax+0x180]
  41ae0d:	mov    DWORD PTR [eax],edx
  41ae0f:	mov    edi,0x4e3c
  41ae14:	mov    eax,0x4f8f
  41ae19:	mov    WORD PTR [ebp-0x78],ax
  41ae1d:	mov    eax,edi
  41ae1f:	mov    WORD PTR [ebp-0x76],ax
  41ae23:	add    eax,0x43
  41ae26:	mov    WORD PTR [ebp-0x74],ax
  41ae2a:	lea    eax,[edi+0x3]
  41ae2d:	mov    WORD PTR [ebp-0x72],ax
  41ae31:	mov    eax,0x4fac
  41ae36:	mov    WORD PTR [ebp-0x70],ax
  41ae3a:	lea    eax,[edi-0x4]
  41ae3d:	mov    WORD PTR [ebp-0x6e],ax
  41ae41:	add    eax,0x45
  41ae44:	mov    WORD PTR [ebp-0x6c],ax
  41ae48:	lea    eax,[edi-0x2]
  41ae4b:	mov    WORD PTR [ebp-0x6a],ax
  41ae4f:	mov    eax,edi
  41ae51:	mov    WORD PTR [ebp-0x68],ax
  41ae55:	dec    eax
  41ae56:	mov    WORD PTR [ebp-0x66],ax
  41ae5a:	mov    eax,0x99ff
  41ae5f:	mov    WORD PTR [ebp-0x64],ax
  41ae63:	mov    eax,0x8288
  41ae68:	mov    WORD PTR [ebp-0x62],ax
  41ae6c:	mov    eax,0xd78d
  41ae71:	mov    WORD PTR [ebp-0x60],ax
  41ae75:	add    eax,0x1c
  41ae78:	mov    WORD PTR [ebp-0x5e],ax
  41ae7c:	mov    eax,0x27aa
  41ae81:	mov    WORD PTR [ebp-0x5c],ax
  41ae85:	mov    eax,0x47aa
  41ae8a:	mov    WORD PTR [ebp-0x5a],ax
  41ae8e:	lea    eax,[edi-0x3]
  41ae91:	push   0x8
  41ae93:	mov    WORD PTR [ebp-0x58],ax
  41ae97:	mov    DWORD PTR [ebp-0x10],0xf306020f
  41ae9e:	mov    DWORD PTR [ebp-0xc],0x7a010a19
  41aea5:	lea    eax,[ebp-0x10]
  41aea8:	pop    ecx
  41aea9:	mov    dl,BYTE PTR [eax]
  41aeab:	xor    dl,0x73
  41aeae:	sub    dl,0x9
  41aeb1:	mov    BYTE PTR [eax],dl
  41aeb3:	inc    eax
  41aeb4:	dec    ecx
  41aeb5:	jne    0x41aea9
  41aeb7:	lea    eax,[ebp-0x10]
  41aeba:	mov    DWORD PTR [ebp-0xb8],eax
  41aec0:	lea    eax,[ebp-0xbc]
  41aec6:	push   eax
  41aec7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeca:	xor    eax,ebx
  41aecc:	add    eax,esi
  41aece:	push   eax
  41aecf:	mov    eax,DWORD PTR [ebp-0x4]
  41aed2:	add    eax,0x66
  41aed5:	push   eax
  41aed6:	mov    eax,DWORD PTR [ebp-0x4]
  41aed9:	mov    eax,DWORD PTR [eax+0x198]
  41aedf:	mov    DWORD PTR [ebp-0xbc],0x1
  41aee9:	push   DWORD PTR [eax]
  41aeeb:	mov    eax,DWORD PTR [ebp+0x10]
  41aeee:	call   eax
  41aef0:	mov    ecx,DWORD PTR [ebp+0x8]
  41aef3:	xor    ecx,ebx
  41aef5:	add    ecx,esi
  41aef7:	mov    DWORD PTR [ebp-0x8],eax
  41aefa:	cmp    eax,ecx
  41aefc:	jne    0x41af17
  41aefe:	mov    eax,ds:0x33730bee
  41af03:	or     eax,0x22150bef
  41af08:	mov    ds:0x33730bee,eax
  41af0d:	add    eax,0x3372e90f
  41af12:	mov    ds:0x33730bee,eax
  41af17:	mov    ecx,0x4f84
  41af1c:	mov    eax,ecx
  41af1e:	mov    WORD PTR [ebp-0x40],ax
  41af22:	mov    eax,0x4e71
  41af27:	mov    edx,eax
  41af29:	mov    WORD PTR [ebp-0x3e],dx
  41af2d:	lea    edx,[ecx+0x15]
  41af30:	mov    WORD PTR [ebp-0x3c],dx
  41af34:	add    edx,0xfffffff8
  41af37:	mov    WORD PTR [ebp-0x3a],dx
  41af3b:	lea    edx,[ecx+0xf]
  41af3e:	mov    WORD PTR [ebp-0x38],dx
  41af42:	add    edx,0x1b
  41af45:	mov    WORD PTR [ebp-0x36],dx
  41af49:	lea    edx,[ecx+0x21]
  41af4c:	mov    WORD PTR [ebp-0x34],dx
  41af50:	mov    WORD PTR [ebp-0x32],cx
  41af54:	mov    ecx,edi
  41af56:	mov    WORD PTR [ebp-0x30],cx
  41af5a:	lea    ecx,[edx-0x1]
  41af5d:	mov    edx,ecx
  41af5f:	mov    WORD PTR [ebp-0x54],dx
  41af63:	mov    edx,eax
  41af65:	mov    WORD PTR [ebp-0x52],dx
  41af69:	add    edx,0x8
  41af6c:	mov    WORD PTR [ebp-0x50],dx
  41af70:	mov    WORD PTR [ebp-0x4e],ax
  41af74:	add    eax,0x2
  41af77:	mov    WORD PTR [ebp-0x4c],ax
  41af7b:	lea    eax,[ecx-0x16]
  41af7e:	mov    WORD PTR [ebp-0x4a],ax
  41af82:	add    eax,0xfffffff7
  41af85:	mov    WORD PTR [ebp-0x48],ax
  41af89:	mov    WORD PTR [ebp-0x46],cx
  41af8d:	mov    WORD PTR [ebp-0x44],di
  41af91:	mov    eax,DWORD PTR [ebp+0x8]
  41af94:	movzx  ecx,WORD PTR [ebp-0x54]
  41af98:	xor    eax,ebx
  41af9a:	add    eax,esi
  41af9c:	xor    eax,ecx
  41af9e:	mov    WORD PTR [ebp-0x54],ax
  41afa2:	mov    eax,DWORD PTR [ebp+0x8]
  41afa5:	movzx  ecx,WORD PTR [ebp-0x40]
  41afa9:	xor    eax,ebx
  41afab:	add    eax,esi
  41afad:	xor    eax,ecx
  41afaf:	mov    WORD PTR [ebp-0x40],ax
  41afb3:	xor    eax,eax
  41afb5:	mov    WORD PTR [ebp-0xd0],ax
  41afbc:	mov    WORD PTR [ebp-0xe4],ax
  41afc3:	mov    edi,DWORD PTR [ebp+0x24]
  41afc6:	lea    eax,[ebp-0xd0]
  41afcc:	lea    edx,[ebp-0x54]
  41afcf:	mov    DWORD PTR [ebp-0xbc],0x2
  41afd9:	mov    DWORD PTR [ebp-0xb8],eax
  41afdf:	call   0x41d97e
  41afe4:	mov    DWORD PTR [ebp-0xb4],eax
  41afea:	lea    eax,[ebp-0xbc]
  41aff0:	push   eax
  41aff1:	mov    eax,DWORD PTR [ebp+0xc]
  41aff4:	xor    eax,ebx
  41aff6:	add    eax,esi
  41aff8:	push   eax
  41aff9:	lea    eax,[ebp-0x78]
  41affc:	push   eax
  41affd:	push   DWORD PTR [ebp-0x8]
  41b000:	mov    eax,DWORD PTR [ebp+0x10]
  41b003:	call   eax
  41b005:	mov    edi,DWORD PTR [ebp+0x24]
  41b008:	lea    eax,[ebp-0xe4]
  41b00e:	lea    edx,[ebp-0x40]
  41b011:	mov    DWORD PTR [ebp-0xb8],eax
  41b017:	call   0x41d97e
  41b01c:	mov    DWORD PTR [ebp-0xb4],eax
  41b022:	lea    eax,[ebp-0xbc]
  41b028:	push   eax
  41b029:	mov    eax,DWORD PTR [ebp+0xc]
  41b02c:	xor    eax,ebx
  41b02e:	add    eax,esi
  41b030:	push   eax
  41b031:	lea    eax,[ebp-0x78]
  41b034:	push   eax
  41b035:	push   DWORD PTR [ebp-0x8]
  41b038:	mov    eax,DWORD PTR [ebp+0x10]
  41b03b:	call   eax
  41b03d:	mov    eax,DWORD PTR [ebp+0x14]
  41b040:	push   DWORD PTR [ebp-0x4]
  41b043:	push   DWORD PTR [ebp+0x20]
  41b046:	push   DWORD PTR [ebp+0x1c]
  41b049:	push   DWORD PTR [ebp+0x18]
  41b04c:	push   DWORD PTR [ebp+0x10]
  41b04f:	push   DWORD PTR [ebp+0x8]
  41b052:	push   DWORD PTR [ebp+0xc]
  41b055:	call   0x41c1fa
  41b05a:	test   eax,eax
  41b05c:	je     0x41b0a0
  41b05e:	add    DWORD PTR [ebp-0x4],eax
  41b061:	push   DWORD PTR [ebp-0x4]
  41b064:	lea    edi,[ebp+0x4]
  41b067:	call   0x41b490
  41b06c:	mov    eax,DWORD PTR [ebp-0x4]
  41b06f:	mov    eax,DWORD PTR [eax+0x1c8]
  41b075:	mov    eax,DWORD PTR [eax]
  41b077:	xor    eax,ebx
  41b079:	add    eax,esi
  41b07b:	mov    eax,DWORD PTR [ebp-0x4]
  41b07e:	jne    0x41b096
  41b080:	mov    ecx,DWORD PTR [ebp-0x4]
  41b083:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b089:	push   DWORD PTR [ecx]
  41b08b:	mov    eax,DWORD PTR [eax+0x1d8]
  41b091:	call   DWORD PTR [eax+0x28]
  41b094:	jmp    0x41b0a0
  41b096:	mov    eax,DWORD PTR [eax+0x17c]
  41b09c:	mov    eax,DWORD PTR [eax]
  41b09e:	add    DWORD PTR [edi],eax
  41b0a0:	pop    esi
  41b0a1:	pop    edi
  41b0a2:	pop    ebx
  41b0a3:	leave  
  41b0a4:	ret    0x20
  41b0a7:	push   edi
  41b0a8:	push   esi
  41b0a9:	push   ebx
  41b0aa:	push   ebp
  41b0ab:	mov    ebp,esp
  41b0ad:	mov    eax,DWORD PTR [ebp+0x24]
  41b0b0:	add    DWORD PTR [ebp+0x28],eax
  41b0b3:	push   eax
  41b0b4:	cld    
  41b0b5:	mov    esi,DWORD PTR [ebp+0x18]
  41b0b8:	add    DWORD PTR [ebp+0x1c],esi
  41b0bb:	push   esi
  41b0bc:	mov    esi,DWORD PTR [ebp+0x14]
  41b0bf:	lods   eax,DWORD PTR ds:[esi]
  41b0c0:	xchg   edx,eax
  41b0c1:	push   edx
  41b0c2:	mov    cl,BYTE PTR [esi-0x2]
  41b0c5:	or     eax,0xffffffff
  41b0c8:	shl    eax,cl
  41b0ca:	not    eax
  41b0cc:	push   eax
  41b0cd:	mov    cl,dh
  41b0cf:	or     eax,0xffffffff
  41b0d2:	shl    eax,cl
  41b0d4:	not    eax
  41b0d6:	push   eax
  41b0d7:	add    cl,dl
  41b0d9:	mov    edi,esi
  41b0db:	sub    esp,0xc
  41b0de:	sub    eax,eax
  41b0e0:	inc    eax
  41b0e1:	push   eax
  41b0e2:	push   eax
  41b0e3:	push   eax
  41b0e4:	push   eax
  41b0e5:	push   eax
  41b0e6:	push   edi
  41b0e7:	sub    esi,esi
  41b0e9:	push   esi
  41b0ea:	or     ebx,0xffffffff
  41b0ed:	mov    eax,0x300
  41b0f2:	shl    eax,cl
  41b0f4:	lea    ecx,[eax+0x736]
  41b0fa:	mov    eax,0x4000400
  41b0ff:	shr    ecx,1
  41b101:	rep stos DWORD PTR es:[edi],eax
  41b103:	push   0x5
  41b105:	pop    ecx
  41b106:	call   0x41b3f1
  41b10b:	loop   0x41b106
  41b10d:	lea    esi,[esi]
  41b10f:	lea    edi,[edi]
  41b111:	mov    edi,DWORD PTR [ebp-0x4]
  41b114:	mov    eax,DWORD PTR [ebp-0x10]
  41b117:	sub    edi,DWORD PTR [ebp+0x24]
  41b11a:	and    eax,edi
  41b11c:	mov    DWORD PTR [ebp-0x18],eax
  41b11f:	mov    al,0x0
  41b121:	call   0x41b409
  41b126:	jne    0x41b1c1
  41b12c:	mov    cl,BYTE PTR [ebp-0xc]
  41b12f:	and    edi,DWORD PTR [ebp-0x14]
  41b132:	shl    edi,cl
  41b134:	sub    cl,0x8
  41b137:	neg    cl
  41b139:	shr    esi,cl
  41b13b:	pop    eax
  41b13c:	add    edi,esi
  41b13e:	pop    esi
  41b13f:	lea    edi,[edi+edi*2]
  41b142:	shl    edi,0x8
  41b145:	cmp    al,0x7
  41b147:	pop    edx
  41b148:	lea    ecx,[esi+edi*2+0xe6c]
  41b14f:	push   ecx
  41b150:	push   esi
  41b151:	mov    esi,0x100
  41b156:	push   eax
  41b157:	mov    al,0x1
  41b159:	jb     0x41b18f
  41b15b:	mov    edi,DWORD PTR [ebp-0x4]
  41b15e:	sub    edi,DWORD PTR [ebp-0x24]
  41b161:	movzx  edi,BYTE PTR [edi]
  41b164:	mov    ebp,DWORD PTR [ebp-0x34]
  41b167:	shl    edi,1
  41b169:	mov    ecx,esi
  41b16b:	and    esi,edi
  41b16d:	add    ecx,esi
  41b16f:	lea    ebp,[ebp+ecx*2+0x0]
  41b173:	call   0x41b428
  41b178:	mov    ecx,eax
  41b17a:	shr    esi,0x8
  41b17d:	and    ecx,0x1
  41b180:	cmp    esi,ecx
  41b182:	mov    esi,0x100
  41b187:	jne    0x41b197
  41b189:	cmp    eax,esi
  41b18b:	jb     0x41b164
  41b18d:	jmp    0x41b1a3
  41b18f:	mov    ebp,DWORD PTR [ebp-0x34]
  41b192:	call   0x41b428
  41b197:	inc    eax
  41b198:	inc    esi
  41b199:	sub    eax,0x1
  41b19c:	sub    esi,0x1
  41b19f:	cmp    eax,esi
  41b1a1:	jb     0x41b18f
  41b1a3:	pop    edx
  41b1a4:	inc    edx
  41b1a5:	cmp    edx,0x5
  41b1a8:	dec    edx
  41b1a9:	mov    ecx,edx
  41b1ab:	jb     0x41b1bc
  41b1ad:	inc    edx
  41b1ae:	cmp    edx,0xb
  41b1b1:	dec    edx
  41b1b2:	mov    cl,0x4
  41b1b4:	dec    cl
  41b1b6:	jb     0x41b1bc
  41b1b8:	mov    cl,0x7
  41b1ba:	dec    cl
  41b1bc:	sub    edx,ecx
  41b1be:	push   edx
  41b1bf:	jmp    0x41b210
  41b1c1:	mov    al,0xc1
  41b1c3:	dec    al
  41b1c5:	call   0x41b419
  41b1ca:	jne    0x41b1e0
  41b1cc:	pop    eax
  41b1cd:	pop    edi
  41b1ce:	pop    edx
  41b1cf:	pop    ecx
  41b1d0:	pop    edx
  41b1d1:	pop    ecx
  41b1d2:	push   DWORD PTR [esp]
  41b1d5:	push   ecx
  41b1d6:	push   edx
  41b1d7:	mov    edx,0x664
  41b1dc:	mov    cl,0x0
  41b1de:	jmp    0x41b253
  41b1e0:	mov    al,0xcd
  41b1e2:	dec    al
  41b1e4:	call   0x41b419
  41b1e9:	jne    0x41b219
  41b1eb:	mov    al,0xf1
  41b1ed:	dec    al
  41b1ef:	call   0x41b409
  41b1f4:	jne    0x41b249
  41b1f6:	pop    eax
  41b1f7:	cmp    al,0x7
  41b1f9:	mov    al,0x9
  41b1fb:	jb     0x41b1ff
  41b1fd:	mov    al,0xb
  41b1ff:	push   eax
  41b200:	mov    esi,DWORD PTR [ebp-0x4]
  41b203:	sub    esi,DWORD PTR [ebp-0x24]
  41b206:	cmp    esi,DWORD PTR [ebp+0x24]
  41b209:	jb     0x41b3e0
  41b20f:	lods   al,BYTE PTR ds:[esi]
  41b210:	mov    edi,DWORD PTR [ebp-0x4]
  41b213:	stos   BYTE PTR es:[edi],al
  41b214:	jmp    0x41b3a7
  41b219:	mov    al,0xd8
  41b21b:	call   0x41b419
  41b220:	mov    esi,DWORD PTR [ebp-0x28]
  41b223:	je     0x41b240
  41b225:	mov    al,0xe4
  41b227:	call   0x41b419
  41b22c:	mov    esi,DWORD PTR [ebp-0x2c]
  41b22f:	je     0x41b23a
  41b231:	mov    esi,DWORD PTR [ebp-0x30]
  41b234:	mov    ecx,DWORD PTR [ebp-0x2c]
  41b237:	mov    DWORD PTR [ebp-0x30],ecx
  41b23a:	mov    ecx,DWORD PTR [ebp-0x28]
  41b23d:	mov    DWORD PTR [ebp-0x2c],ecx
  41b240:	mov    ecx,DWORD PTR [ebp-0x24]
  41b243:	mov    DWORD PTR [ebp-0x28],ecx
  41b246:	mov    DWORD PTR [ebp-0x24],esi
  41b249:	pop    eax
  41b24a:	pop    edi
  41b24b:	pop    ecx
  41b24c:	mov    edx,0xa68
  41b251:	mov    cl,0x8
  41b253:	add    edx,edi
  41b255:	push   edx
  41b256:	push   edi
  41b257:	cmp    al,0x7
  41b259:	mov    al,cl
  41b25b:	jb     0x41b25f
  41b25d:	add    al,0x3
  41b25f:	push   eax
  41b260:	mov    ebp,DWORD PTR [ebp-0x34]
  41b263:	call   0x41b426
  41b268:	jne    0x41b27e
  41b26a:	mov    eax,DWORD PTR [ebp-0x18]
  41b26d:	mov    edi,DWORD PTR [ebp-0x34]
  41b270:	shl    eax,0x3
  41b273:	sub    ecx,ecx
  41b275:	push   0x8
  41b277:	pop    esi
  41b278:	lea    edi,[edi+eax*2+0x4]
  41b27c:	jmp    0x41b2b3
  41b27e:	mov    ebp,DWORD PTR [ebp-0x34]
  41b281:	add    ebp,0x2
  41b284:	call   0x41b426
  41b289:	jne    0x41b2a3
  41b28b:	mov    eax,DWORD PTR [ebp-0x18]
  41b28e:	mov    edi,DWORD PTR [ebp-0x34]
  41b291:	shl    eax,0x3
  41b294:	push   0x8
  41b296:	pop    ecx
  41b297:	push   0x8
  41b299:	pop    esi
  41b29a:	lea    edi,[edi+eax*2+0x104]
  41b2a1:	jmp    0x41b2b3
  41b2a3:	mov    edi,0x204
  41b2a8:	add    edi,DWORD PTR [ebp-0x34]
  41b2ab:	push   0x10
  41b2ad:	pop    ecx
  41b2ae:	mov    esi,0x100
  41b2b3:	mov    DWORD PTR [ebp-0x1c],ecx
  41b2b6:	sub    eax,eax
  41b2b8:	inc    eax
  41b2b9:	mov    ebp,edi
  41b2bb:	call   0x41b428
  41b2c0:	mov    ecx,eax
  41b2c2:	sub    ecx,esi
  41b2c4:	jb     0x41b2b9
  41b2c6:	add    DWORD PTR [ebp-0x1c],ecx
  41b2c9:	cmp    DWORD PTR [ebp-0x3c],0x4
  41b2cd:	jae    0x41b383
  41b2d3:	add    DWORD PTR [ebp-0x3c],0x7
  41b2d7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b2da:	cmp    ecx,0x4
  41b2dd:	jb     0x41b2e2
  41b2df:	push   0x3
  41b2e1:	pop    ecx
  41b2e2:	mov    edi,DWORD PTR [ebp-0x38]
  41b2e5:	shl    ecx,0x6
  41b2e8:	sub    eax,eax
  41b2ea:	inc    eax
  41b2eb:	push   0x40
  41b2ed:	pop    esi
  41b2ee:	lea    edi,[edi+ecx*2+0x360]
  41b2f5:	mov    ebp,edi
  41b2f7:	call   0x41b428
  41b2fc:	mov    ecx,eax
  41b2fe:	sub    ecx,esi
  41b300:	jb     0x41b2f5
  41b302:	mov    DWORD PTR [ebp-0x18],ecx
  41b305:	mov    DWORD PTR [ebp-0x24],ecx
  41b308:	cmp    ecx,0x4
  41b30b:	jb     0x41b380
  41b30d:	mov    esi,ecx
  41b30f:	and    DWORD PTR [ebp-0x24],0x1
  41b313:	shr    esi,1
  41b315:	or     DWORD PTR [ebp-0x24],0x2
  41b319:	dec    esi
  41b31a:	cmp    ecx,0xe
  41b31d:	jae    0x41b338
  41b31f:	mov    eax,0x2af
  41b324:	sub    eax,ecx
  41b326:	mov    ecx,esi
  41b328:	shl    BYTE PTR [ebp-0x24],cl
  41b32b:	add    eax,DWORD PTR [ebp-0x24]
  41b32e:	shl    eax,1
  41b330:	add    eax,DWORD PTR [ebp-0x38]
  41b333:	mov    DWORD PTR [ebp-0x34],eax
  41b336:	jmp    0x41b365
  41b338:	sub    esi,0x4
  41b33b:	call   0x41b3e5
  41b340:	shr    ebx,1
  41b342:	shl    DWORD PTR [ebp-0x24],1
  41b345:	cmp    DWORD PTR [ebp-0x20],ebx
  41b348:	jb     0x41b350
  41b34a:	inc    DWORD PTR [ebp-0x24]
  41b34d:	sub    DWORD PTR [ebp-0x20],ebx
  41b350:	dec    esi
  41b351:	jne    0x41b33b
  41b353:	mov    eax,0x644
  41b358:	add    eax,DWORD PTR [ebp-0x38]
  41b35b:	mov    DWORD PTR [ebp-0x34],eax
  41b35e:	shl    DWORD PTR [ebp-0x24],0x4
  41b362:	push   0x4
  41b364:	pop    esi
  41b365:	sub    edi,edi
  41b367:	inc    edi
  41b368:	mov    eax,edi
  41b36a:	mov    ebp,DWORD PTR [ebp-0x34]
  41b36d:	call   0x41b428
  41b372:	test   al,0x1
  41b374:	je     0x41b379
  41b376:	or     DWORD PTR [ebp-0x24],edi
  41b379:	shl    edi,1
  41b37b:	dec    esi
  41b37c:	jne    0x41b36a
  41b37e:	jmp    0x41b380
  41b380:	inc    DWORD PTR [ebp-0x24]
  41b383:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b386:	add    ecx,0x2
  41b389:	mov    edi,DWORD PTR [ebp-0x4]
  41b38c:	mov    eax,edi
  41b38e:	sub    eax,DWORD PTR [ebp+0x24]
  41b391:	cmp    DWORD PTR [ebp-0x24],eax
  41b394:	ja     0x41b3e0
  41b396:	mov    esi,edi
  41b398:	sub    esi,DWORD PTR [ebp-0x24]
  41b39b:	mov    edx,DWORD PTR [ebp+0x28]
  41b39e:	lods   al,BYTE PTR ds:[esi]
  41b39f:	stos   BYTE PTR es:[edi],al
  41b3a0:	cmp    edi,edx
  41b3a2:	jae    0x41b3a7
  41b3a4:	dec    ecx
  41b3a5:	jne    0x41b39e
  41b3a7:	mov    DWORD PTR [ebp-0x4],edi
  41b3aa:	movzx  esi,al
  41b3ad:	cmp    edi,DWORD PTR [ebp+0x28]
  41b3b0:	jb     0x41b111
  41b3b6:	call   0x41b3e5
  41b3bb:	sub    eax,eax
  41b3bd:	lea    ebp,[esp+0x3c]
  41b3c1:	mov    edx,DWORD PTR [ebp+0x20]
  41b3c4:	mov    esi,DWORD PTR [ebp-0x8]
  41b3c7:	sub    esi,DWORD PTR [ebp+0x18]
  41b3ca:	mov    DWORD PTR [edx],esi
  41b3cc:	mov    edx,DWORD PTR [ebp+0x2c]
  41b3cf:	mov    edi,DWORD PTR [ebp-0x4]
  41b3d2:	sub    edi,DWORD PTR [ebp+0x24]
  41b3d5:	mov    DWORD PTR [edx],edi
  41b3d7:	leave  
  41b3d8:	pop    ebx
  41b3d9:	pop    esi
  41b3da:	pop    edi
  41b3db:	ret    0x1c
  41b3de:	pop    esi
  41b3df:	pop    eax
  41b3e0:	sub    eax,eax
  41b3e2:	inc    eax
  41b3e3:	jmp    0x41b3bd
  41b3e5:	cmp    ebx,0x1000000
  41b3eb:	jb     0x41b3ee
  41b3ed:	ret    
  41b3ee:	shl    ebx,0x8
  41b3f1:	push   esi
  41b3f2:	mov    esi,DWORD PTR [ebp-0x8]
  41b3f5:	cmp    esi,DWORD PTR [ebp+0x1c]
  41b3f8:	jae    0x41b3de
  41b3fa:	mov    eax,DWORD PTR [ebp-0x20]
  41b3fd:	shl    eax,0x8
  41b400:	lods   al,BYTE PTR ds:[esi]
  41b401:	mov    DWORD PTR [ebp-0x20],eax
  41b404:	mov    DWORD PTR [ebp-0x8],esi
  41b407:	pop    esi
  41b408:	ret    
  41b409:	mov    ecx,DWORD PTR [ebp-0x3c]
  41b40c:	movzx  eax,al
  41b40f:	shl    ecx,0x4
  41b412:	add    eax,DWORD PTR [ebp-0x18]
  41b415:	add    eax,ecx
  41b417:	jmp    0x41b41f
  41b419:	movzx  eax,al
  41b41c:	add    eax,DWORD PTR [ebp-0x3c]
  41b41f:	mov    ebp,DWORD PTR [ebp-0x38]
  41b422:	lea    ebp,[ebp+eax*2+0x0]
  41b426:	sub    eax,eax
  41b428:	lea    ebp,[ebp+eax*2+0x0]
  41b42c:	cmp    ebx,0x1000000
  41b432:	jae    0x41b450
  41b434:	mov    ecx,DWORD PTR [esp+0x38]
  41b438:	shl    DWORD PTR [esp+0x20],0x8
  41b43d:	cmp    ecx,DWORD PTR [esp+0x5c]
  41b441:	jae    0x41b3df
  41b443:	mov    dl,BYTE PTR [ecx]
  41b445:	inc    DWORD PTR [esp+0x38]
  41b449:	shl    ebx,0x8
  41b44c:	mov    BYTE PTR [esp+0x20],dl
  41b450:	mov    ecx,ebx
  41b452:	movzx  edx,WORD PTR [ebp+0x0]
  41b456:	shr    ecx,0xb
  41b459:	imul   ecx,edx
  41b45c:	cmp    DWORD PTR [esp+0x20],ecx
  41b460:	jae    0x41b479
  41b462:	mov    ebx,ecx
  41b464:	mov    ecx,0x800
  41b469:	sub    ecx,edx
  41b46b:	shr    ecx,0x5
  41b46e:	add    WORD PTR [ebp+0x0],cx
  41b472:	add    eax,eax
  41b474:	lea    ebp,[esp+0x40]
  41b478:	ret    
  41b479:	shr    edx,0x5
  41b47c:	sub    DWORD PTR [esp+0x20],ecx
  41b480:	sub    ebx,ecx
  41b482:	sub    WORD PTR [ebp+0x0],dx
  41b486:	add    eax,eax
  41b488:	add    eax,0x1
  41b48b:	lea    ebp,[esp+0x40]
  41b48f:	ret    
  41b490:	push   ebp
  41b491:	mov    ebp,esp
  41b493:	sub    esp,0x104
  41b499:	push   ebx
  41b49a:	push   esi
  41b49b:	push   edi
  41b49c:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41b4aa:	mov    eax,DWORD PTR [ebp+0x8]
  41b4ad:	mov    DWORD PTR [ebp+0x8],eax
  41b4b0:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4b3:	mov    ebx,0x7510899
  41b4b8:	xor    ecx,ebx
  41b4ba:	mov    eax,0x3272e0
  41b4bf:	add    ecx,eax
  41b4c1:	mov    DWORD PTR [ebp-0x28],ecx
  41b4c4:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4c7:	xor    ecx,ebx
  41b4c9:	add    ecx,eax
  41b4cb:	mov    DWORD PTR [ebp-0x40],ecx
  41b4ce:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4d1:	xor    ecx,ebx
  41b4d3:	add    ecx,eax
  41b4d5:	mov    DWORD PTR [ebp-0x3c],ecx
  41b4d8:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4db:	xor    ecx,ebx
  41b4dd:	add    ecx,eax
  41b4df:	mov    DWORD PTR [ebp-0xa0],ecx
  41b4e5:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  41b4ec:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  41b4f3:	mov    DWORD PTR [ebp-0x4c],0xf89c85bd
  41b4fa:	push   0x25
  41b4fc:	pop    ecx
  41b4fd:	mov    DWORD PTR [ebp-0x2c],ecx
  41b500:	mov    DWORD PTR [ebp-0x2c],ecx
  41b503:	push   0x65
  41b505:	pop    ecx
  41b506:	mov    DWORD PTR [ebp-0x2c],ecx
  41b509:	mov    DWORD PTR [ebp-0x2c],ecx
  41b50c:	mov    DWORD PTR [ebp-0x2c],0x4d
  41b513:	mov    DWORD PTR [ebp-0x2c],0x43
  41b51a:	mov    ecx,DWORD PTR [ebp-0x14]
  41b51d:	xor    ecx,ebx
  41b51f:	add    ecx,eax
  41b521:	mov    DWORD PTR [ebp-0x2c],ecx
  41b524:	mov    ecx,DWORD PTR [ebp-0x14]
  41b527:	xor    ecx,ebx
  41b529:	add    ecx,eax
  41b52b:	mov    DWORD PTR [ebp-0x2c],ecx
  41b52e:	mov    DWORD PTR [ebp-0x24],0x257
  41b535:	mov    DWORD PTR [ebp-0x34],0x35
  41b53c:	mov    DWORD PTR [ebp-0x10],0x79
  41b543:	lea    edi,[ebp-0xe4]
  41b549:	lea    esi,[ebp-0x104]
  41b54f:	call   0x41c169
  41b554:	dec    DWORD PTR [ebp-0x10]
  41b557:	jne    0x41b543
  41b559:	dec    DWORD PTR [ebp-0x34]
  41b55c:	jne    0x41b53c
  41b55e:	dec    DWORD PTR [ebp-0x24]
  41b561:	jne    0x41b535
  41b563:	mov    DWORD PTR [ebp-0x24],0x400d
  41b56a:	mov    eax,DWORD PTR [ebp-0x14]
  41b56d:	xor    eax,ebx
  41b56f:	mov    esi,0x3272e0
  41b574:	add    eax,esi
  41b576:	mov    DWORD PTR [ebp-0x8],eax
  41b579:	mov    eax,DWORD PTR [ebp-0x14]
  41b57c:	and    DWORD PTR [ebp-0x94],0x0
  41b583:	xor    eax,ebx
  41b585:	add    eax,esi
  41b587:	mov    DWORD PTR [ebp-0x38],eax
  41b58a:	mov    eax,fs:0x18
  41b590:	mov    DWORD PTR [ebp-0x94],eax
  41b596:	mov    eax,DWORD PTR [eax+0x30]
  41b599:	mov    DWORD PTR [ebp-0x98],eax
  41b59f:	mov    eax,DWORD PTR [eax+0xc]
  41b5a2:	mov    DWORD PTR [ebp-0xc0],eax
  41b5a8:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ab:	lea    ecx,[ebp-0x94]
  41b5b1:	mov    DWORD PTR [eax+0x1a0],ecx
  41b5b7:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ba:	lea    ecx,[ebp-0x98]
  41b5c0:	mov    DWORD PTR [eax+0x1a4],ecx
  41b5c6:	mov    eax,DWORD PTR [ebp+0x8]
  41b5c9:	push   DWORD PTR [ebp+0x8]
  41b5cc:	lea    ecx,[ebp-0xc0]
  41b5d2:	mov    DWORD PTR [eax+0x1a8],ecx
  41b5d8:	call   0x41d94f
  41b5dd:	mov    ecx,DWORD PTR [ebp-0x14]
  41b5e0:	xor    ecx,ebx
  41b5e2:	add    ecx,esi
  41b5e4:	cmp    ecx,eax
  41b5e6:	je     0x41b8c3
  41b5ec:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ef:	mov    eax,DWORD PTR [eax+0x194]
  41b5f5:	mov    ecx,DWORD PTR [eax]
  41b5f7:	mov    eax,DWORD PTR [ebp+0x8]
  41b5fa:	mov    eax,DWORD PTR [eax+0x194]
  41b600:	mov    eax,DWORD PTR [eax]
  41b602:	add    eax,DWORD PTR [ecx+0x3c]
  41b605:	mov    ecx,DWORD PTR [ebp+0x8]
  41b608:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41b60e:	lea    edx,[ebp-0xc4]
  41b614:	push   edx
  41b615:	mov    edx,DWORD PTR [ebp+0x8]
  41b618:	mov    edx,DWORD PTR [edx+0x18c]
  41b61e:	mov    edx,DWORD PTR [edx]
  41b620:	add    edx,DWORD PTR [eax+0x88]
  41b626:	push   0x4
  41b628:	push   DWORD PTR [eax+0x8c]
  41b62e:	push   edx
  41b62f:	call   DWORD PTR [ecx+0x1c]
  41b632:	push   DWORD PTR [ebp+0x8]
  41b635:	mov    edi,DWORD PTR [ebp+0x8]
  41b638:	mov    eax,DWORD PTR [ebp+0x8]
  41b63b:	mov    edx,DWORD PTR [eax+0x1b8]
  41b641:	mov    DWORD PTR [ebp-0x68],0x80e0f06
  41b648:	mov    DWORD PTR [ebp-0x64],0x10a051f
  41b64f:	mov    WORD PTR [ebp-0x60],0x7a39
  41b655:	mov    DWORD PTR [ebp-0x90],0x23f0f21
  41b65f:	mov    DWORD PTR [ebp-0x8c],0x6390819
  41b669:	mov    DWORD PTR [ebp-0x88],0x2419020a
  41b673:	mov    DWORD PTR [ebp-0x84],0x81d050d
  41b67d:	mov    DWORD PTR [ebp-0x80],0x7a391f01
  41b684:	mov    DWORD PTR [ebp-0x7c],0x23f0f21
  41b68b:	mov    DWORD PTR [ebp-0x78],0x6390819
  41b692:	mov    DWORD PTR [ebp-0x74],0x2419020a
  41b699:	mov    DWORD PTR [ebp-0x70],0x81d050d
  41b6a0:	mov    DWORD PTR [ebp-0x6c],0x7a131f01
  41b6a7:	call   0x41d97e
  41b6ac:	push   eax
  41b6ad:	mov    eax,DWORD PTR [ebp+0x8]
  41b6b0:	mov    eax,DWORD PTR [eax+0x1a8]
  41b6b6:	push   DWORD PTR [eax]
  41b6b8:	call   0x41d61f
  41b6bd:	test   eax,eax
  41b6bf:	jne    0x41b711
  41b6c1:	mov    eax,DWORD PTR [ebp+0x8]
  41b6c4:	mov    eax,DWORD PTR [eax+0x1d8]
  41b6ca:	mov    edi,DWORD PTR [ebp+0x8]
  41b6cd:	add    eax,0x4
  41b6d0:	mov    DWORD PTR [ebp-0x20],eax
  41b6d3:	mov    eax,DWORD PTR [ebp+0x8]
  41b6d6:	mov    edx,DWORD PTR [eax+0x1b8]
  41b6dc:	call   0x41d97e
  41b6e1:	push   eax
  41b6e2:	mov    eax,DWORD PTR [ebp-0x20]
  41b6e5:	call   DWORD PTR [eax]
  41b6e7:	test   eax,eax
  41b6e9:	jne    0x41b711
  41b6eb:	mov    eax,DWORD PTR [ebp+0x8]
  41b6ee:	mov    eax,DWORD PTR [eax+0x1d8]
  41b6f4:	mov    edi,DWORD PTR [ebp+0x8]
  41b6f7:	add    eax,0x10
  41b6fa:	mov    DWORD PTR [ebp-0x20],eax
  41b6fd:	mov    eax,DWORD PTR [ebp+0x8]
  41b700:	mov    edx,DWORD PTR [eax+0x1b8]
  41b706:	call   0x41d97e
  41b70b:	push   eax
  41b70c:	mov    eax,DWORD PTR [ebp-0x20]
  41b70f:	call   DWORD PTR [eax]
  41b711:	mov    eax,DWORD PTR [ebp-0x14]
  41b714:	mov    ecx,DWORD PTR [ebp-0x24]
  41b717:	xor    eax,ebx
  41b719:	add    eax,esi
  41b71b:	cmp    eax,ecx
  41b71d:	je     0x41b89c
  41b723:	mov    eax,DWORD PTR [ebp-0x18]
  41b726:	xor    eax,ebx
  41b728:	mov    ecx,0xffcd8d20
  41b72d:	sub    ecx,eax
  41b72f:	add    ecx,DWORD PTR [ebp-0x24]
  41b732:	mov    eax,DWORD PTR [ebp-0x8]
  41b735:	cmp    eax,ecx
  41b737:	ja     0x41b89c
  41b73d:	mov    DWORD PTR [ebp-0x34],0x0
  41b744:	push   DWORD PTR [ebp+0x8]
  41b747:	mov    edi,DWORD PTR [ebp+0x8]
  41b74a:	mov    eax,DWORD PTR [ebp+0x8]
  41b74d:	mov    edx,DWORD PTR [eax+0x1b4]
  41b753:	call   0x41d97e
  41b758:	push   eax
  41b759:	mov    eax,DWORD PTR [ebp+0x8]
  41b75c:	mov    eax,DWORD PTR [eax+0x1a8]
  41b762:	push   DWORD PTR [eax]
  41b764:	call   0x41d61f
  41b769:	mov    ecx,DWORD PTR [ebp+0x8]
  41b76c:	mov    ecx,DWORD PTR [ecx+0x19c]
  41b772:	mov    DWORD PTR [ecx],eax
  41b774:	mov    eax,DWORD PTR [ebp+0x8]
  41b777:	mov    edi,DWORD PTR [eax+0x1d8]
  41b77d:	mov    esi,DWORD PTR [ebp+0x8]
  41b780:	xor    eax,eax
  41b782:	lea    edx,[ebp-0x7c]
  41b785:	call   0x41d9b4
  41b78a:	push   eax
  41b78b:	mov    eax,DWORD PTR [ebp+0x8]
  41b78e:	mov    eax,DWORD PTR [eax+0x19c]
  41b794:	push   DWORD PTR [eax]
  41b796:	call   DWORD PTR [edi+0x8]
  41b799:	mov    DWORD PTR [ebp-0x20],eax
  41b79c:	mov    eax,DWORD PTR [ebp+0x8]
  41b79f:	mov    edi,DWORD PTR [eax+0x1d8]
  41b7a5:	mov    esi,DWORD PTR [ebp+0x8]
  41b7a8:	xor    eax,eax
  41b7aa:	lea    edx,[ebp-0x90]
  41b7b0:	call   0x41d9b4
  41b7b5:	push   eax
  41b7b6:	mov    eax,DWORD PTR [ebp+0x8]
  41b7b9:	mov    eax,DWORD PTR [eax+0x19c]
  41b7bf:	push   DWORD PTR [eax]
  41b7c1:	call   DWORD PTR [edi+0x8]
  41b7c4:	and    DWORD PTR [ebp-0x1c],0x0
  41b7c8:	mov    eax,DWORD PTR [ebp-0x1c]
  41b7cb:	and    eax,0x7
  41b7ce:	add    eax,0x31
  41b7d1:	push   eax
  41b7d2:	call   DWORD PTR [ebp-0x20]
  41b7d5:	test   eax,eax
  41b7d7:	jne    0x41b7de
  41b7d9:	and    DWORD PTR [ebp-0x10],eax
  41b7dc:	jmp    0x41b806
  41b7de:	mov    eax,DWORD PTR [ebp+0x8]
  41b7e1:	mov    edi,DWORD PTR [eax+0x1d8]
  41b7e7:	mov    esi,DWORD PTR [ebp+0x8]
  41b7ea:	xor    eax,eax
  41b7ec:	lea    edx,[ebp-0x68]
  41b7ef:	call   0x41d9b4
  41b7f4:	push   eax
  41b7f5:	mov    eax,DWORD PTR [ebp+0x8]
  41b7f8:	mov    eax,DWORD PTR [eax+0x198]
  41b7fe:	push   DWORD PTR [eax]
  41b800:	call   DWORD PTR [edi+0x8]
  41b803:	mov    DWORD PTR [ebp-0x10],eax
  41b806:	inc    DWORD PTR [ebp-0x1c]
  41b809:	cmp    DWORD PTR [ebp-0x1c],0x10
  41b80d:	jb     0x41b7c8
  41b80f:	mov    eax,DWORD PTR [ebp-0x18]
  41b812:	mov    esi,DWORD PTR [ebp+0x8]
  41b815:	xor    eax,ebx
  41b817:	mov    edi,0x3272e0
  41b81c:	add    eax,edi
  41b81e:	lea    edx,[ebp-0xe4]
  41b824:	call   0x41d9b4
  41b829:	push   eax
  41b82a:	mov    eax,DWORD PTR [ebp-0x14]
  41b82d:	mov    esi,DWORD PTR [ebp+0x8]
  41b830:	xor    eax,ebx
  41b832:	add    eax,edi
  41b834:	lea    edx,[ebp-0x104]
  41b83a:	call   0x41d9b4
  41b83f:	push   eax
  41b840:	call   DWORD PTR [ebp-0x10]
  41b843:	mov    ecx,DWORD PTR [ebp-0x14]
  41b846:	xor    ecx,ebx
  41b848:	add    ecx,edi
  41b84a:	cmp    ecx,eax
  41b84c:	jne    0x41b855
  41b84e:	mov    DWORD PTR [ebp-0x34],0x1
  41b855:	mov    eax,DWORD PTR [ebp-0x18]
  41b858:	mov    ecx,DWORD PTR [ebp-0x8]
  41b85b:	xor    eax,ebx
  41b85d:	lea    eax,[eax+ecx*1+0x3272e0]
  41b864:	mov    DWORD PTR [ebp-0x8],eax
  41b867:	mov    eax,DWORD PTR [ebp-0x34]
  41b86a:	test   eax,eax
  41b86c:	je     0x41b880
  41b86e:	mov    eax,DWORD PTR [ebp-0x18]
  41b871:	mov    ecx,DWORD PTR [ebp-0x38]
  41b874:	xor    eax,ebx
  41b876:	lea    eax,[eax+ecx*1+0x3272e0]
  41b87d:	mov    DWORD PTR [ebp-0x38],eax
  41b880:	mov    eax,DWORD PTR [ebp-0x18]
  41b883:	xor    eax,ebx
  41b885:	mov    ecx,0xffcd8d20
  41b88a:	sub    ecx,eax
  41b88c:	add    ecx,DWORD PTR [ebp-0x24]
  41b88f:	mov    eax,DWORD PTR [ebp-0x8]
  41b892:	cmp    eax,ecx
  41b894:	jbe    0x41b73d
  41b89a:	mov    esi,edi
  41b89c:	mov    eax,DWORD PTR [ebp-0x38]
  41b89f:	mov    ecx,DWORD PTR [ebp-0x8]
  41b8a2:	cmp    ecx,eax
  41b8a4:	jne    0x41b8b7
  41b8a6:	push   DWORD PTR [ebp+0x8]
  41b8a9:	lea    eax,[ebp-0x40]
  41b8ac:	push   eax
  41b8ad:	call   0x41e42c
  41b8b2:	mov    DWORD PTR [ebp-0x28],eax
  41b8b5:	jmp    0x41b8c3
  41b8b7:	mov    eax,DWORD PTR [ebp-0x28]
  41b8ba:	mov    ecx,DWORD PTR [ebp-0x18]
  41b8bd:	xor    ecx,ebx
  41b8bf:	add    ecx,esi
  41b8c1:	xor    DWORD PTR [eax],ecx
  41b8c3:	mov    eax,DWORD PTR [ebp-0x14]
  41b8c6:	mov    ecx,DWORD PTR [ebp-0x28]
  41b8c9:	xor    eax,ebx
  41b8cb:	add    eax,esi
  41b8cd:	cmp    eax,ecx
  41b8cf:	je     0x41c047
  41b8d5:	mov    eax,DWORD PTR [ebp-0x14]
  41b8d8:	mov    ecx,DWORD PTR [ebp-0x40]
  41b8db:	xor    eax,ebx
  41b8dd:	add    eax,esi
  41b8df:	cmp    eax,ecx
  41b8e1:	je     0x41c047
  41b8e7:	mov    eax,DWORD PTR [ebp-0x14]
  41b8ea:	xor    eax,ebx
  41b8ec:	add    eax,esi
  41b8ee:	jmp    0x41b90c
  41b8f0:	mov    edi,DWORD PTR [ebp-0x28]
  41b8f3:	mov    cl,al
  41b8f5:	and    cl,0x1f
  41b8f8:	or     dl,0xff
  41b8fb:	sub    dl,cl
  41b8fd:	add    BYTE PTR [edi+eax*1],dl
  41b900:	mov    ecx,DWORD PTR [ebp-0x18]
  41b903:	xor    ecx,ebx
  41b905:	lea    eax,[eax+ecx*1+0x3272e0]
  41b90c:	mov    ecx,DWORD PTR [ebp-0x40]
  41b90f:	cmp    eax,ecx
  41b911:	jb     0x41b8f0
  41b913:	mov    eax,DWORD PTR [ebp-0x40]
  41b916:	mov    DWORD PTR [ebp-0x24],eax
  41b919:	mov    eax,DWORD PTR [ebp-0x28]
  41b91c:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  41b923:	mov    DWORD PTR [ebp-0xbc],eax
  41b929:	mov    edi,0xf89c85b8
  41b92e:	mov    DWORD PTR [ebp-0x30],edi
  41b931:	mov    eax,DWORD PTR [ebp-0x38]
  41b934:	xor    eax,ebx
  41b936:	add    eax,esi
  41b938:	mov    DWORD PTR [ebp-0xc],eax
  41b93b:	mov    eax,DWORD PTR [ebp-0x38]
  41b93e:	xor    eax,ebx
  41b940:	add    eax,esi
  41b942:	mov    DWORD PTR [ebp-0x8],eax
  41b945:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  41b94c:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  41b953:	mov    eax,DWORD PTR [ebp-0x38]
  41b956:	mov    ecx,DWORD PTR [ebp-0x24]
  41b959:	xor    eax,ebx
  41b95b:	add    eax,esi
  41b95d:	cmp    ecx,eax
  41b95f:	je     0x41bb5e
  41b965:	jmp    0x41bb3a
  41b96a:	mov    ecx,DWORD PTR [ebp-0xc]
  41b96d:	mov    eax,DWORD PTR [ebp-0x24]
  41b970:	sub    eax,ecx
  41b972:	mov    ecx,DWORD PTR [ebp-0x48]
  41b975:	xor    ecx,ebx
  41b977:	add    ecx,esi
  41b979:	xor    edx,edx
  41b97b:	div    ecx
  41b97d:	mov    DWORD PTR [ebp-0x8],eax
  41b980:	mov    eax,DWORD PTR [ebp-0x54]
  41b983:	mov    ecx,DWORD PTR [ebp-0x8]
  41b986:	xor    eax,ebx
  41b988:	add    eax,esi
  41b98a:	cmp    ecx,eax
  41b98c:	jbe    0x41b998
  41b98e:	mov    eax,DWORD PTR [ebp-0x54]
  41b991:	xor    eax,ebx
  41b993:	add    eax,esi
  41b995:	mov    DWORD PTR [ebp-0x8],eax
  41b998:	mov    eax,DWORD PTR [ebp-0x48]
  41b99b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b99e:	xor    eax,ebx
  41b9a0:	add    eax,esi
  41b9a2:	imul   eax,ecx
  41b9a5:	mov    DWORD PTR [ebp-0x8],eax
  41b9a8:	mov    eax,DWORD PTR [ebp-0x38]
  41b9ab:	mov    ecx,DWORD PTR [ebp-0x8]
  41b9ae:	xor    eax,ebx
  41b9b0:	add    eax,esi
  41b9b2:	cmp    ecx,eax
  41b9b4:	je     0x41bb28
  41b9ba:	mov    eax,DWORD PTR [ebp-0x8]
  41b9bd:	mov    DWORD PTR [ebp-0x10],eax
  41b9c0:	mov    eax,DWORD PTR [ebp-0xc]
  41b9c3:	add    eax,DWORD PTR [ebp-0xbc]
  41b9c9:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  41b9d0:	mov    DWORD PTR [ebp-0x34],edi
  41b9d3:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  41b9dd:	mov    DWORD PTR [ebp-0x8],eax
  41b9e0:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  41b9e7:	mov    DWORD PTR [ebp-0x1c],edi
  41b9ea:	mov    eax,DWORD PTR [ebp-0x20]
  41b9ed:	xor    eax,ebx
  41b9ef:	add    eax,esi
  41b9f1:	jmp    0x41bae7
  41b9f6:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  41ba00:	mov    DWORD PTR [ebp-0xb8],0xf89c85ad
  41ba0a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba0d:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba10:	xor    eax,ebx
  41ba12:	add    eax,esi
  41ba14:	imul   eax,ecx
  41ba17:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba1a:	mov    al,BYTE PTR [eax+ecx*1]
  41ba1d:	mov    BYTE PTR [ebp-0x2],al
  41ba20:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba23:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba26:	xor    eax,ebx
  41ba28:	add    eax,esi
  41ba2a:	imul   eax,ecx
  41ba2d:	mov    ecx,DWORD PTR [ebp-0xa8]
  41ba33:	xor    ecx,ebx
  41ba35:	add    eax,ecx
  41ba37:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba3a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41ba42:	mov    ecx,DWORD PTR [ebp-0xb0]
  41ba48:	xor    ecx,ebx
  41ba4a:	lea    eax,[ecx+eax*1+0x3272e0]
  41ba51:	movzx  ecx,BYTE PTR [ebp-0x2]
  41ba55:	xor    ecx,eax
  41ba57:	mov    BYTE PTR [ebp-0x2],cl
  41ba5a:	mov    al,BYTE PTR [ebp-0x2]
  41ba5d:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ba60:	mov    edx,DWORD PTR [ebp-0x44]
  41ba63:	xor    ecx,ebx
  41ba65:	add    ecx,esi
  41ba67:	imul   ecx,edx
  41ba6a:	mov    edx,DWORD PTR [ebp-0x8]
  41ba6d:	mov    BYTE PTR [ecx+edx*1],al
  41ba70:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba73:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba76:	xor    eax,ebx
  41ba78:	add    eax,esi
  41ba7a:	imul   eax,ecx
  41ba7d:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba80:	mov    al,BYTE PTR [eax+ecx*1]
  41ba83:	mov    BYTE PTR [ebp-0x2],al
  41ba86:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba89:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba8c:	xor    eax,ebx
  41ba8e:	add    eax,esi
  41ba90:	imul   eax,ecx
  41ba93:	mov    ecx,DWORD PTR [ebp-0x34]
  41ba96:	xor    ecx,ebx
  41ba98:	add    eax,ecx
  41ba9a:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba9d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41baa5:	mov    ecx,DWORD PTR [ebp-0xb8]
  41baab:	xor    ecx,ebx
  41baad:	lea    eax,[ecx+eax*1+0x3272e0]
  41bab4:	movzx  ecx,BYTE PTR [ebp-0x2]
  41bab8:	xor    ecx,eax
  41baba:	mov    BYTE PTR [ebp-0x2],cl
  41babd:	mov    al,BYTE PTR [ebp-0x2]
  41bac0:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bac3:	mov    edx,DWORD PTR [ebp-0x44]
  41bac6:	xor    ecx,ebx
  41bac8:	add    ecx,esi
  41baca:	imul   ecx,edx
  41bacd:	mov    edx,DWORD PTR [ebp-0x8]
  41bad0:	mov    BYTE PTR [ecx+edx*1],al
  41bad3:	mov    eax,DWORD PTR [ebp-0x2c]
  41bad6:	mov    ecx,DWORD PTR [ebp-0x34]
  41bad9:	xor    eax,ebx
  41badb:	xor    ecx,ebx
  41badd:	add    eax,esi
  41badf:	add    ecx,esi
  41bae1:	imul   eax,ecx
  41bae4:	add    eax,DWORD PTR [ebp-0x44]
  41bae7:	mov    DWORD PTR [ebp-0x44],eax
  41baea:	mov    eax,DWORD PTR [ebp-0x44]
  41baed:	mov    ecx,DWORD PTR [ebp-0x10]
  41baf0:	cmp    ecx,eax
  41baf2:	jb     0x41b9f6
  41baf8:	mov    eax,DWORD PTR [ebp-0x34]
  41bafb:	mov    ecx,DWORD PTR [ebp-0x10]
  41bafe:	xor    eax,ebx
  41bb00:	add    eax,esi
  41bb02:	imul   eax,ecx
  41bb05:	mov    ecx,DWORD PTR [ebp-0x20]
  41bb08:	xor    ecx,ebx
  41bb0a:	add    ecx,esi
  41bb0c:	or     eax,ecx
  41bb0e:	mov    ecx,DWORD PTR [ebp-0x30]
  41bb11:	xor    ecx,ebx
  41bb13:	add    eax,ecx
  41bb15:	mov    ecx,DWORD PTR [ebp-0x30]
  41bb18:	xor    ecx,ebx
  41bb1a:	add    eax,ecx
  41bb1c:	mov    ecx,DWORD PTR [ebp-0xc]
  41bb1f:	lea    eax,[eax+ecx*1+0x64e5c0]
  41bb26:	jmp    0x41bb37
  41bb28:	mov    eax,DWORD PTR [ebp-0x30]
  41bb2b:	mov    ecx,DWORD PTR [ebp-0xc]
  41bb2e:	xor    eax,ebx
  41bb30:	lea    eax,[eax+ecx*1+0x3272e0]
  41bb37:	mov    DWORD PTR [ebp-0xc],eax
  41bb3a:	mov    eax,DWORD PTR [ebp-0x30]
  41bb3d:	xor    eax,ebx
  41bb3f:	mov    ecx,0xffcd8d20
  41bb44:	sub    ecx,eax
  41bb46:	add    ecx,DWORD PTR [ebp-0x24]
  41bb49:	mov    eax,DWORD PTR [ebp-0x30]
  41bb4c:	mov    edx,DWORD PTR [ebp-0xc]
  41bb4f:	xor    eax,ebx
  41bb51:	add    eax,esi
  41bb53:	imul   eax,edx
  41bb56:	cmp    eax,ecx
  41bb58:	jbe    0x41b96a
  41bb5e:	mov    eax,DWORD PTR [ebp-0x14]
  41bb61:	mov    ecx,DWORD PTR [ebp-0x40]
  41bb64:	mov    eax,DWORD PTR [ebp+0x8]
  41bb67:	mov    edx,DWORD PTR [ebp-0x4c]
  41bb6a:	mov    eax,DWORD PTR [eax+0x1d8]
  41bb70:	xor    edx,ebx
  41bb72:	add    edx,esi
  41bb74:	push   edx
  41bb75:	mov    edx,DWORD PTR [ebp-0x3c]
  41bb78:	xor    edx,ebx
  41bb7a:	add    edx,esi
  41bb7c:	push   edx
  41bb7d:	push   ecx
  41bb7e:	mov    DWORD PTR [ebp-0x2c],ecx
  41bb81:	mov    ecx,DWORD PTR [ebp-0x14]
  41bb84:	xor    ecx,ebx
  41bb86:	add    ecx,esi
  41bb88:	push   ecx
  41bb89:	call   DWORD PTR [eax+0x14]
  41bb8c:	mov    edi,eax
  41bb8e:	mov    eax,DWORD PTR [ebp-0x14]
  41bb91:	xor    eax,ebx
  41bb93:	add    eax,esi
  41bb95:	cmp    eax,edi
  41bb97:	je     0x41bbf2
  41bb99:	mov    eax,DWORD PTR [ebp-0x14]
  41bb9c:	jmp    0x41bbbf
  41bb9e:	mov    ecx,DWORD PTR [ebp-0x28]
  41bba1:	xor    eax,ebx
  41bba3:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  41bbaa:	mov    BYTE PTR [eax+edi*1+0x3272e0],cl
  41bbb1:	mov    ecx,DWORD PTR [ebp-0x18]
  41bbb4:	xor    ecx,ebx
  41bbb6:	lea    eax,[ecx+eax*1+0x3272e0]
  41bbbd:	xor    eax,ebx
  41bbbf:	mov    ecx,DWORD PTR [ebp-0x40]
  41bbc2:	sub    ecx,esi
  41bbc4:	xor    ecx,ebx
  41bbc6:	cmp    eax,ecx
  41bbc8:	jne    0x41bb9e
  41bbca:	mov    eax,DWORD PTR [ebp+0x8]
  41bbcd:	mov    ecx,DWORD PTR [ebp-0x50]
  41bbd0:	mov    eax,DWORD PTR [eax+0x1d8]
  41bbd6:	xor    ecx,ebx
  41bbd8:	add    ecx,esi
  41bbda:	push   ecx
  41bbdb:	mov    ecx,DWORD PTR [ebp-0x14]
  41bbde:	xor    ecx,ebx
  41bbe0:	add    ecx,esi
  41bbe2:	push   ecx
  41bbe3:	push   DWORD PTR [ebp-0x28]
  41bbe6:	call   DWORD PTR [eax+0x18]
  41bbe9:	mov    eax,DWORD PTR [ebp-0x2c]
  41bbec:	mov    DWORD PTR [ebp-0x28],edi
  41bbef:	mov    DWORD PTR [ebp-0x40],eax
  41bbf2:	mov    edi,DWORD PTR [ebp-0x28]
  41bbf5:	mov    eax,DWORD PTR [ebp-0x18]
  41bbf8:	mov    ecx,DWORD PTR [ebp-0x14]
  41bbfb:	xor    eax,ebx
  41bbfd:	mov    DWORD PTR [ebp-0x2c],edi
  41bc00:	add    eax,esi
  41bc02:	mov    DWORD PTR [ebp-0x5c],0x39122a12
  41bc09:	mov    DWORD PTR [ebp-0x58],0x27123f12
  41bc10:	jmp    0x41bc44
  41bc12:	xor    ecx,ebx
  41bc14:	mov    dl,BYTE PTR [ebp+ecx*1+0x327284]
  41bc1b:	xor    dl,0x73
  41bc1e:	sub    dl,0x9
  41bc21:	mov    DWORD PTR [ebp-0x3c],ecx
  41bc24:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272e0]
  41bc2c:	movzx  edx,dl
  41bc2f:	cmp    ecx,edx
  41bc31:	jne    0x41bc4e
  41bc33:	mov    ecx,DWORD PTR [ebp-0x18]
  41bc36:	mov    edx,DWORD PTR [ebp-0x3c]
  41bc39:	xor    ecx,ebx
  41bc3b:	lea    ecx,[ecx+edx*1+0x3272e0]
  41bc42:	xor    ecx,ebx
  41bc44:	cmp    ecx,0xf89c85b1
  41bc4a:	jne    0x41bc12
  41bc4c:	jmp    0x41bc55
  41bc4e:	mov    eax,DWORD PTR [ebp-0x14]
  41bc51:	xor    eax,ebx
  41bc53:	add    eax,esi
  41bc55:	mov    ecx,DWORD PTR [ebp-0x14]
  41bc58:	xor    ecx,ebx
  41bc5a:	add    ecx,esi
  41bc5c:	cmp    ecx,eax
  41bc5e:	je     0x41bdd1
  41bc64:	mov    eax,DWORD PTR [edi+0x8]
  41bc67:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41bc6e:	mov    DWORD PTR [ebp-0x3c],0xf89cc316
  41bc75:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  41bc7c:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41bc83:	mov    DWORD PTR [ebp-0x10],eax
  41bc86:	mov    eax,DWORD PTR [ebp+0x8]
  41bc89:	mov    ecx,DWORD PTR [ebp-0x20]
  41bc8c:	xor    ecx,ebx
  41bc8e:	add    ecx,esi
  41bc90:	push   ecx
  41bc91:	mov    ecx,DWORD PTR [ebp-0x48]
  41bc94:	mov    eax,DWORD PTR [eax+0x1d8]
  41bc9a:	xor    ecx,ebx
  41bc9c:	add    ecx,esi
  41bc9e:	push   ecx
  41bc9f:	mov    ecx,DWORD PTR [ebp-0x3c]
  41bca2:	xor    ecx,ebx
  41bca4:	add    ecx,esi
  41bca6:	push   ecx
  41bca7:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcaa:	xor    ecx,ebx
  41bcac:	add    ecx,esi
  41bcae:	push   ecx
  41bcaf:	call   DWORD PTR [eax+0x14]
  41bcb2:	mov    edi,eax
  41bcb4:	mov    eax,DWORD PTR [ebp+0x8]
  41bcb7:	mov    ecx,DWORD PTR [ebp-0x20]
  41bcba:	mov    eax,DWORD PTR [eax+0x1d8]
  41bcc0:	xor    ecx,ebx
  41bcc2:	add    ecx,esi
  41bcc4:	push   ecx
  41bcc5:	mov    ecx,DWORD PTR [ebp-0x48]
  41bcc8:	xor    ecx,ebx
  41bcca:	add    ecx,esi
  41bccc:	push   ecx
  41bccd:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcd0:	push   DWORD PTR [ebp-0x10]
  41bcd3:	xor    ecx,ebx
  41bcd5:	add    ecx,esi
  41bcd7:	push   ecx
  41bcd8:	call   DWORD PTR [eax+0x14]
  41bcdb:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcde:	xor    ecx,ebx
  41bce0:	add    ecx,esi
  41bce2:	mov    DWORD PTR [ebp-0x20],eax
  41bce5:	cmp    ecx,edi
  41bce7:	je     0x41c074
  41bced:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcf0:	xor    ecx,ebx
  41bcf2:	add    ecx,esi
  41bcf4:	cmp    ecx,eax
  41bcf6:	je     0x41c074
  41bcfc:	mov    DWORD PTR [ebp-0x3c],0xf89c85ba
  41bd03:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41bd0a:	mov    ecx,DWORD PTR [ebp-0x3c]
  41bd0d:	xor    cl,0x99
  41bd10:	sub    cl,0x20
  41bd13:	mov    BYTE PTR [edi],cl
  41bd15:	mov    ecx,DWORD PTR [ebp-0xc]
  41bd18:	xor    cl,0x99
  41bd1b:	sub    cl,0x20
  41bd1e:	mov    BYTE PTR [edi+0x1],cl
  41bd21:	mov    ecx,DWORD PTR [ebp-0x4c]
  41bd24:	xor    cl,0x99
  41bd27:	sub    cl,0x20
  41bd2a:	mov    BYTE PTR [edi+0x2],cl
  41bd2d:	and    DWORD PTR [ebp-0xb4],0x0
  41bd34:	and    DWORD PTR [ebp-0xa4],0x0
  41bd3b:	lea    ecx,[ebp-0xa4]
  41bd41:	push   ecx
  41bd42:	push   DWORD PTR [ebp-0x10]
  41bd45:	push   eax
  41bd46:	lea    eax,[ebp-0xb4]
  41bd4c:	push   eax
  41bd4d:	mov    eax,DWORD PTR [ebp-0x2c]
  41bd50:	push   DWORD PTR [eax+0xc]
  41bd53:	mov    eax,DWORD PTR [ebp-0x28]
  41bd56:	add    eax,0x10
  41bd59:	push   eax
  41bd5a:	push   edi
  41bd5b:	call   0x41b0a7
  41bd60:	mov    DWORD PTR [ebp-0x3c],eax
  41bd63:	mov    eax,DWORD PTR [ebp+0x8]
  41bd66:	mov    ecx,DWORD PTR [ebp-0x50]
  41bd69:	mov    eax,DWORD PTR [eax+0x1d8]
  41bd6f:	xor    ecx,ebx
  41bd71:	add    ecx,esi
  41bd73:	push   ecx
  41bd74:	mov    ecx,DWORD PTR [ebp-0xc]
  41bd77:	xor    ecx,ebx
  41bd79:	add    ecx,esi
  41bd7b:	push   ecx
  41bd7c:	push   edi
  41bd7d:	call   DWORD PTR [eax+0x18]
  41bd80:	mov    eax,DWORD PTR [ebp-0x3c]
  41bd83:	add    eax,0xffcd8d20
  41bd88:	xor    eax,ebx
  41bd8a:	cmp    eax,0xf89c85b9
  41bd8f:	mov    eax,DWORD PTR [ebp+0x8]
  41bd92:	mov    eax,DWORD PTR [eax+0x1d8]
  41bd98:	mov    ecx,DWORD PTR [ebp-0x50]
  41bd9b:	jne    0x41bdbe
  41bd9d:	xor    ecx,ebx
  41bd9f:	add    ecx,esi
  41bda1:	push   ecx
  41bda2:	mov    ecx,DWORD PTR [ebp-0xc]
  41bda5:	xor    ecx,ebx
  41bda7:	add    ecx,esi
  41bda9:	push   ecx
  41bdaa:	push   DWORD PTR [ebp-0x28]
  41bdad:	call   DWORD PTR [eax+0x18]
  41bdb0:	mov    eax,DWORD PTR [ebp-0x20]
  41bdb3:	mov    DWORD PTR [ebp-0x28],eax
  41bdb6:	mov    eax,DWORD PTR [ebp-0x10]
  41bdb9:	mov    DWORD PTR [ebp-0x40],eax
  41bdbc:	jmp    0x41bdd1
  41bdbe:	xor    ecx,ebx
  41bdc0:	add    ecx,esi
  41bdc2:	push   ecx
  41bdc3:	mov    ecx,DWORD PTR [ebp-0xc]
  41bdc6:	xor    ecx,ebx
  41bdc8:	add    ecx,esi
  41bdca:	push   ecx
  41bdcb:	push   DWORD PTR [ebp-0x20]
  41bdce:	call   DWORD PTR [eax+0x18]
  41bdd1:	mov    eax,DWORD PTR [ebp-0x40]
  41bdd4:	mov    DWORD PTR [ebp-0x38],eax
  41bdd7:	mov    eax,DWORD PTR [ebp-0x28]
  41bdda:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41bde1:	mov    DWORD PTR [ebp-0x3c],eax
  41bde4:	mov    edi,0xf89c85b8
  41bde9:	mov    DWORD PTR [ebp-0x30],edi
  41bdec:	mov    eax,DWORD PTR [ebp-0x24]
  41bdef:	xor    eax,ebx
  41bdf1:	add    eax,esi
  41bdf3:	mov    DWORD PTR [ebp-0xc],eax
  41bdf6:	mov    eax,DWORD PTR [ebp-0x24]
  41bdf9:	xor    eax,ebx
  41bdfb:	add    eax,esi
  41bdfd:	mov    DWORD PTR [ebp-0x10],eax
  41be00:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  41be07:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  41be0e:	mov    eax,DWORD PTR [ebp-0x24]
  41be11:	mov    ecx,DWORD PTR [ebp-0x38]
  41be14:	xor    eax,ebx
  41be16:	add    eax,esi
  41be18:	cmp    ecx,eax
  41be1a:	je     0x41c010
  41be20:	jmp    0x41bfec
  41be25:	mov    ecx,DWORD PTR [ebp-0xc]
  41be28:	mov    eax,DWORD PTR [ebp-0x38]
  41be2b:	sub    eax,ecx
  41be2d:	mov    ecx,DWORD PTR [ebp-0x48]
  41be30:	xor    ecx,ebx
  41be32:	add    ecx,esi
  41be34:	xor    edx,edx
  41be36:	div    ecx
  41be38:	mov    DWORD PTR [ebp-0x10],eax
  41be3b:	mov    eax,DWORD PTR [ebp-0x20]
  41be3e:	mov    ecx,DWORD PTR [ebp-0x10]
  41be41:	xor    eax,ebx
  41be43:	add    eax,esi
  41be45:	cmp    ecx,eax
  41be47:	jbe    0x41be53
  41be49:	mov    eax,DWORD PTR [ebp-0x20]
  41be4c:	xor    eax,ebx
  41be4e:	add    eax,esi
  41be50:	mov    DWORD PTR [ebp-0x10],eax
  41be53:	mov    eax,DWORD PTR [ebp-0x48]
  41be56:	mov    ecx,DWORD PTR [ebp-0x10]
  41be59:	xor    eax,ebx
  41be5b:	add    eax,esi
  41be5d:	imul   eax,ecx
  41be60:	mov    DWORD PTR [ebp-0x10],eax
  41be63:	mov    eax,DWORD PTR [ebp-0x24]
  41be66:	mov    ecx,DWORD PTR [ebp-0x10]
  41be69:	xor    eax,ebx
  41be6b:	add    eax,esi
  41be6d:	cmp    ecx,eax
  41be6f:	je     0x41bfda
  41be75:	mov    eax,DWORD PTR [ebp-0x10]
  41be78:	mov    DWORD PTR [ebp-0x34],eax
  41be7b:	mov    eax,DWORD PTR [ebp-0xc]
  41be7e:	add    eax,DWORD PTR [ebp-0x3c]
  41be81:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  41be88:	mov    DWORD PTR [ebp-0x10],edi
  41be8b:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41be92:	mov    DWORD PTR [ebp-0x1c],eax
  41be95:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  41be9c:	mov    DWORD PTR [ebp-0x8],edi
  41be9f:	mov    eax,DWORD PTR [ebp-0x54]
  41bea2:	xor    eax,ebx
  41bea4:	add    eax,esi
  41bea6:	jmp    0x41bf99
  41beab:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41beb5:	mov    DWORD PTR [ebp-0x9c],0xf89c85ad
  41bebf:	mov    eax,DWORD PTR [ebp-0x8]
  41bec2:	mov    ecx,DWORD PTR [ebp-0x18]
  41bec5:	xor    eax,ebx
  41bec7:	add    eax,esi
  41bec9:	imul   eax,ecx
  41becc:	mov    ecx,DWORD PTR [ebp-0x1c]
  41becf:	mov    al,BYTE PTR [eax+ecx*1]
  41bed2:	mov    BYTE PTR [ebp-0x1],al
  41bed5:	mov    eax,DWORD PTR [ebp-0x8]
  41bed8:	mov    ecx,DWORD PTR [ebp-0x18]
  41bedb:	xor    eax,ebx
  41bedd:	add    eax,esi
  41bedf:	imul   eax,ecx
  41bee2:	mov    ecx,DWORD PTR [ebp-0x4c]
  41bee5:	xor    ecx,ebx
  41bee7:	add    eax,ecx
  41bee9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41beec:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41bef4:	mov    ecx,DWORD PTR [ebp-0xac]
  41befa:	xor    ecx,ebx
  41befc:	lea    eax,[ecx+eax*1+0x3272e0]
  41bf03:	movzx  ecx,BYTE PTR [ebp-0x1]
  41bf07:	xor    ecx,eax
  41bf09:	mov    BYTE PTR [ebp-0x1],cl
  41bf0c:	mov    al,BYTE PTR [ebp-0x1]
  41bf0f:	mov    ecx,DWORD PTR [ebp-0x8]
  41bf12:	mov    edx,DWORD PTR [ebp-0x18]
  41bf15:	xor    ecx,ebx
  41bf17:	add    ecx,esi
  41bf19:	imul   ecx,edx
  41bf1c:	mov    edx,DWORD PTR [ebp-0x1c]
  41bf1f:	mov    BYTE PTR [ecx+edx*1],al
  41bf22:	mov    eax,DWORD PTR [ebp-0x8]
  41bf25:	mov    ecx,DWORD PTR [ebp-0x18]
  41bf28:	xor    eax,ebx
  41bf2a:	add    eax,esi
  41bf2c:	imul   eax,ecx
  41bf2f:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bf32:	mov    al,BYTE PTR [eax+ecx*1]
  41bf35:	mov    BYTE PTR [ebp-0x1],al
  41bf38:	mov    eax,DWORD PTR [ebp-0x8]
  41bf3b:	mov    ecx,DWORD PTR [ebp-0x18]
  41bf3e:	xor    eax,ebx
  41bf40:	add    eax,esi
  41bf42:	imul   eax,ecx
  41bf45:	mov    ecx,DWORD PTR [ebp-0x10]
  41bf48:	xor    ecx,ebx
  41bf4a:	add    eax,ecx
  41bf4c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bf4f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41bf57:	mov    ecx,DWORD PTR [ebp-0x9c]
  41bf5d:	xor    ecx,ebx
  41bf5f:	lea    eax,[ecx+eax*1+0x3272e0]
  41bf66:	movzx  ecx,BYTE PTR [ebp-0x1]
  41bf6a:	xor    ecx,eax
  41bf6c:	mov    BYTE PTR [ebp-0x1],cl
  41bf6f:	mov    al,BYTE PTR [ebp-0x1]
  41bf72:	mov    ecx,DWORD PTR [ebp-0x8]
  41bf75:	mov    edx,DWORD PTR [ebp-0x18]
  41bf78:	xor    ecx,ebx
  41bf7a:	add    ecx,esi
  41bf7c:	imul   ecx,edx
  41bf7f:	mov    edx,DWORD PTR [ebp-0x1c]
  41bf82:	mov    BYTE PTR [ecx+edx*1],al
  41bf85:	mov    eax,DWORD PTR [ebp-0x2c]
  41bf88:	mov    ecx,DWORD PTR [ebp-0x10]
  41bf8b:	xor    eax,ebx
  41bf8d:	xor    ecx,ebx
  41bf8f:	add    eax,esi
  41bf91:	add    ecx,esi
  41bf93:	imul   eax,ecx
  41bf96:	add    eax,DWORD PTR [ebp-0x18]
  41bf99:	mov    DWORD PTR [ebp-0x18],eax
  41bf9c:	mov    eax,DWORD PTR [ebp-0x18]
  41bf9f:	mov    ecx,DWORD PTR [ebp-0x34]
  41bfa2:	cmp    ecx,eax
  41bfa4:	jb     0x41beab
  41bfaa:	mov    eax,DWORD PTR [ebp-0x10]
  41bfad:	mov    ecx,DWORD PTR [ebp-0x34]
  41bfb0:	xor    eax,ebx
  41bfb2:	add    eax,esi
  41bfb4:	imul   eax,ecx
  41bfb7:	mov    ecx,DWORD PTR [ebp-0x54]
  41bfba:	xor    ecx,ebx
  41bfbc:	add    ecx,esi
  41bfbe:	or     eax,ecx
  41bfc0:	mov    ecx,DWORD PTR [ebp-0x30]
  41bfc3:	xor    ecx,ebx
  41bfc5:	add    eax,ecx
  41bfc7:	mov    ecx,DWORD PTR [ebp-0x30]
  41bfca:	xor    ecx,ebx
  41bfcc:	add    eax,ecx
  41bfce:	mov    ecx,DWORD PTR [ebp-0xc]
  41bfd1:	lea    eax,[eax+ecx*1+0x64e5c0]
  41bfd8:	jmp    0x41bfe9
  41bfda:	mov    eax,DWORD PTR [ebp-0x30]
  41bfdd:	mov    ecx,DWORD PTR [ebp-0xc]
  41bfe0:	xor    eax,ebx
  41bfe2:	lea    eax,[eax+ecx*1+0x3272e0]
  41bfe9:	mov    DWORD PTR [ebp-0xc],eax
  41bfec:	mov    eax,DWORD PTR [ebp-0x30]
  41bfef:	xor    eax,ebx
  41bff1:	mov    ecx,0xffcd8d20
  41bff6:	sub    ecx,eax
  41bff8:	add    ecx,DWORD PTR [ebp-0x38]
  41bffb:	mov    eax,DWORD PTR [ebp-0x30]
  41bffe:	mov    edx,DWORD PTR [ebp-0xc]
  41c001:	xor    eax,ebx
  41c003:	add    eax,esi
  41c005:	imul   eax,edx
  41c008:	cmp    eax,ecx
  41c00a:	jbe    0x41be25
  41c010:	push   DWORD PTR [ebp+0x8]
  41c013:	mov    eax,DWORD PTR [ebp+0x8]
  41c016:	push   DWORD PTR [eax+0x1cc]
  41c01c:	lea    eax,[ebp-0xa0]
  41c022:	push   eax
  41c023:	mov    eax,DWORD PTR [ebp+0x8]
  41c026:	mov    eax,DWORD PTR [eax+0x1c4]
  41c02c:	push   DWORD PTR [eax]
  41c02e:	mov    eax,DWORD PTR [ebp+0x8]
  41c031:	mov    eax,DWORD PTR [eax+0x1c0]
  41c037:	push   DWORD PTR [eax]
  41c039:	push   DWORD PTR [ebp-0x40]
  41c03c:	push   DWORD PTR [ebp-0x28]
  41c03f:	call   0x41cad6
  41c044:	mov    DWORD PTR [ebp-0x3c],eax
  41c047:	mov    eax,DWORD PTR [ebp-0x14]
  41c04a:	mov    ecx,DWORD PTR [ebp-0x28]
  41c04d:	xor    eax,ebx
  41c04f:	add    eax,esi
  41c051:	cmp    eax,ecx
  41c053:	je     0x41c074
  41c055:	mov    eax,DWORD PTR [ebp+0x8]
  41c058:	mov    ecx,DWORD PTR [ebp-0x50]
  41c05b:	mov    eax,DWORD PTR [eax+0x1d8]
  41c061:	xor    ecx,ebx
  41c063:	add    ecx,esi
  41c065:	push   ecx
  41c066:	mov    ecx,DWORD PTR [ebp-0x14]
  41c069:	xor    ecx,ebx
  41c06b:	add    ecx,esi
  41c06d:	push   ecx
  41c06e:	push   DWORD PTR [ebp-0x28]
  41c071:	call   DWORD PTR [eax+0x18]
  41c074:	pop    edi
  41c075:	pop    esi
  41c076:	pop    ebx
  41c077:	leave  
  41c078:	ret    0x4
  41c07b:	push   ebp
  41c07c:	mov    ebp,esp
  41c07e:	push   ecx
  41c07f:	push   ecx
  41c080:	lea    eax,[ebp-0x8]
  41c083:	mov    DWORD PTR [ebp-0x4],eax
  41c086:	push   esi
  41c087:	mov    esi,DWORD PTR [ebp-0x4]
  41c08a:	mov    eax,0xf881ba0f
  41c08f:	mov    DWORD PTR [esi],eax
  41c091:	mov    esi,DWORD PTR [ebp-0x8]
  41c094:	cmp    esi,eax
  41c096:	pop    esi
  41c097:	jne    0x41c0a1
  41c099:	mov    BYTE PTR [ecx+0xa],0x7a
  41c09d:	mov    BYTE PTR [edx+0x8],0x2f
  41c0a1:	mov    BYTE PTR [edx+0xa],0x7a
  41c0a5:	mov    BYTE PTR [ecx+0x2],0x4
  41c0a9:	leave  
  41c0aa:	ret    
  41c0ab:	push   ebp
  41c0ac:	mov    ebp,esp
  41c0ae:	push   ecx
  41c0af:	push   ecx
  41c0b0:	lea    eax,[ebp-0x8]
  41c0b3:	mov    DWORD PTR [ebp-0x4],eax
  41c0b6:	mov    edx,DWORD PTR [ebp-0x4]
  41c0b9:	mov    eax,0xf88b0be3
  41c0be:	mov    DWORD PTR [edx],eax
  41c0c0:	mov    edx,DWORD PTR [ebp-0x8]
  41c0c3:	cmp    edx,eax
  41c0c5:	jne    0x41c0d6
  41c0c7:	mov    eax,DWORD PTR [ebp+0x8]
  41c0ca:	mov    BYTE PTR [ecx+0x9],0xe
  41c0ce:	mov    BYTE PTR [eax+0x7],0x47
  41c0d2:	mov    BYTE PTR [ecx+0x6],0xf
  41c0d6:	mov    BYTE PTR [ecx+0x3],0x1e
  41c0da:	leave  
  41c0db:	ret    0x4
  41c0de:	push   ebp
  41c0df:	mov    ebp,esp
  41c0e1:	push   ecx
  41c0e2:	push   ecx
  41c0e3:	lea    eax,[ebp-0x8]
  41c0e6:	mov    DWORD PTR [ebp-0x4],eax
  41c0e9:	mov    edx,DWORD PTR [ebp-0x4]
  41c0ec:	mov    eax,0x7e0da0f
  41c0f1:	mov    DWORD PTR [edx],eax
  41c0f3:	mov    edx,DWORD PTR [ebp-0x8]
  41c0f6:	cmp    edx,eax
  41c0f8:	jne    0x41c0fe
  41c0fa:	mov    BYTE PTR [ecx+0x7],0x47
  41c0fe:	mov    eax,DWORD PTR [ebp+0x8]
  41c101:	mov    BYTE PTR [ecx+0x1],0x1
  41c105:	mov    BYTE PTR [eax+0x9],0x2e
  41c109:	leave  
  41c10a:	ret    0x4
  41c10d:	push   ebp
  41c10e:	mov    ebp,esp
  41c110:	push   ecx
  41c111:	push   ecx
  41c112:	lea    eax,[ebp-0x8]
  41c115:	mov    DWORD PTR [ebp-0x4],eax
  41c118:	push   esi
  41c119:	mov    esi,DWORD PTR [ebp-0x4]
  41c11c:	mov    eax,0x7060e3e
  41c121:	mov    DWORD PTR [esi],eax
  41c123:	mov    esi,DWORD PTR [ebp-0x8]
  41c126:	cmp    esi,eax
  41c128:	pop    esi
  41c129:	jne    0x41c135
  41c12b:	mov    BYTE PTR [edx+0x4],0xb
  41c12f:	mov    WORD PTR [ecx+0x3],0xb1e
  41c135:	mov    BYTE PTR [edx],0x3f
  41c138:	leave  
  41c139:	ret    
  41c13a:	push   ebp
  41c13b:	mov    ebp,esp
  41c13d:	push   ecx
  41c13e:	push   ecx
  41c13f:	lea    eax,[ebp-0x8]
  41c142:	mov    DWORD PTR [ebp-0x4],eax
  41c145:	mov    edx,DWORD PTR [ebp-0x4]
  41c148:	mov    eax,0xf8870b3f
  41c14d:	mov    DWORD PTR [edx],eax
  41c14f:	mov    edx,DWORD PTR [ebp-0x8]
  41c152:	cmp    edx,eax
  41c154:	jne    0x41c161
  41c156:	mov    eax,DWORD PTR [ebp+0x8]
  41c159:	mov    BYTE PTR [ecx+0x8],0xf
  41c15d:	mov    BYTE PTR [eax+0x1],0x1
  41c161:	mov    BYTE PTR [ecx+0x5],0xf3
  41c165:	leave  
  41c166:	ret    0x4
  41c169:	push   esi
  41c16a:	mov    ecx,edi
  41c16c:	call   0x41c13a
  41c171:	mov    edx,edi
  41c173:	mov    ecx,esi
  41c175:	mov    BYTE PTR [esi],0x1f
  41c178:	call   0x41c10d
  41c17d:	push   esi
  41c17e:	mov    ecx,edi
  41c180:	mov    BYTE PTR [esi+0x5],0xf3
  41c184:	call   0x41c0de
  41c189:	push   esi
  41c18a:	mov    BYTE PTR [esi+0x6],0xf
  41c18e:	call   0x41c0ab
  41c193:	mov    BYTE PTR [esi+0x2],0x4
  41c197:	mov    edx,esi
  41c199:	jmp    0x41c07b
  41c19e:	push   ebp
  41c19f:	mov    ebp,esp
  41c1a1:	push   ecx
  41c1a2:	mov    ecx,DWORD PTR [edx+0x194]
  41c1a8:	push   esi
  41c1a9:	mov    esi,DWORD PTR [ebp+0x8]
  41c1ac:	mov    esi,DWORD PTR [esi]
  41c1ae:	mov    DWORD PTR [ecx],esi
  41c1b0:	mov    ecx,DWORD PTR [edx+0x194]
  41c1b6:	mov    ecx,DWORD PTR [ecx]
  41c1b8:	mov    esi,DWORD PTR [edx+0x190]
  41c1be:	mov    DWORD PTR [esi],ecx
  41c1c0:	mov    eax,DWORD PTR [edx+0x194]
  41c1c6:	mov    ecx,DWORD PTR [eax]
  41c1c8:	mov    ecx,DWORD PTR [ecx+0x3c]
  41c1cb:	add    ecx,DWORD PTR [eax]
  41c1cd:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  41c1d4:	mov    eax,DWORD PTR [ebp-0x4]
  41c1d7:	movzx  ecx,WORD PTR [ecx+0x16]
  41c1db:	xor    eax,0x7510899
  41c1e0:	add    eax,0x3272e0
  41c1e5:	pop    esi
  41c1e6:	test   ecx,eax
  41c1e8:	je     0x41c1f6
  41c1ea:	mov    eax,DWORD PTR [edx+0x1c8]
  41c1f0:	mov    DWORD PTR [eax],0xf89c85b8
  41c1f6:	leave  
  41c1f7:	ret    0x4
  41c1fa:	push   ebp
  41c1fb:	mov    ebp,esp
  41c1fd:	sub    esp,0x70
  41c200:	and    DWORD PTR [ebp-0x20],0x0
  41c204:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  41c20b:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  41c212:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  41c219:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41c220:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  41c227:	mov    eax,DWORD PTR [ebp+0x20]
  41c22a:	mov    eax,DWORD PTR [eax+0x194]
  41c230:	mov    DWORD PTR [ebp-0xc],eax
  41c233:	mov    eax,DWORD PTR [ebp+0x20]
  41c236:	push   ebx
  41c237:	push   esi
  41c238:	mov    esi,DWORD PTR [eax+0x190]
  41c23e:	mov    eax,DWORD PTR [ebp+0x20]
  41c241:	mov    eax,DWORD PTR [eax+0x18c]
  41c247:	mov    DWORD PTR [ebp-0x8],eax
  41c24a:	mov    eax,DWORD PTR [eax]
  41c24c:	push   edi
  41c24d:	mov    DWORD PTR [ebp-0x4],esi
  41c250:	test   eax,eax
  41c252:	jne    0x41c25f
  41c254:	push   DWORD PTR [ebp+0x1c]
  41c257:	mov    edx,DWORD PTR [ebp+0x20]
  41c25a:	call   0x41c19e
  41c25f:	mov    eax,DWORD PTR [esi]
  41c261:	mov    ebx,DWORD PTR [esi]
  41c263:	add    ebx,DWORD PTR [eax+0x3c]
  41c266:	mov    eax,DWORD PTR [ebp+0xc]
  41c269:	mov    ecx,DWORD PTR [ebp-0x8]
  41c26c:	mov    ecx,DWORD PTR [ecx]
  41c26e:	mov    esi,0x7510899
  41c273:	xor    eax,esi
  41c275:	mov    edi,0x3272e0
  41c27a:	add    eax,edi
  41c27c:	cmp    eax,ecx
  41c27e:	jne    0x41c4b6
  41c284:	mov    eax,DWORD PTR [ebp-0xc]
  41c287:	mov    eax,DWORD PTR [eax]
  41c289:	mov    DWORD PTR [ebp-0x10],eax
  41c28c:	mov    eax,DWORD PTR [ebx+0x50]
  41c28f:	mov    DWORD PTR [ebp-0x68],eax
  41c292:	mov    eax,DWORD PTR [ebp-0x18]
  41c295:	xor    eax,esi
  41c297:	add    eax,edi
  41c299:	mov    DWORD PTR [ebp-0x64],eax
  41c29c:	mov    eax,DWORD PTR [ebp-0x14]
  41c29f:	and    DWORD PTR [ebp-0x6c],0x0
  41c2a3:	xor    eax,esi
  41c2a5:	add    eax,edi
  41c2a7:	mov    DWORD PTR [ebp-0x60],eax
  41c2aa:	lea    eax,[ebp-0x70]
  41c2ad:	push   eax
  41c2ae:	mov    eax,DWORD PTR [ebp+0x8]
  41c2b1:	xor    eax,esi
  41c2b3:	add    eax,edi
  41c2b5:	push   eax
  41c2b6:	mov    eax,DWORD PTR [ebp+0x20]
  41c2b9:	add    eax,0xaa
  41c2be:	push   eax
  41c2bf:	mov    eax,DWORD PTR [ebp+0x20]
  41c2c2:	mov    eax,DWORD PTR [eax+0x198]
  41c2c8:	mov    DWORD PTR [ebp-0x70],0x4
  41c2cf:	push   DWORD PTR [eax]
  41c2d1:	mov    eax,DWORD PTR [ebp+0x10]
  41c2d4:	call   eax
  41c2d6:	mov    ecx,DWORD PTR [ebp-0xc]
  41c2d9:	mov    ecx,DWORD PTR [ecx]
  41c2db:	mov    edx,DWORD PTR [ebp-0x8]
  41c2de:	mov    DWORD PTR [ebp-0x6c],eax
  41c2e1:	mov    DWORD PTR [ebp+0x1c],eax
  41c2e4:	mov    DWORD PTR [edx],ecx
  41c2e6:	mov    ecx,DWORD PTR [ebp-0x4]
  41c2e9:	mov    DWORD PTR [ecx],eax
  41c2eb:	mov    eax,DWORD PTR [ebx+0x50]
  41c2ee:	mov    DWORD PTR [ebp-0x68],eax
  41c2f1:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2f4:	xor    eax,esi
  41c2f6:	add    eax,edi
  41c2f8:	mov    DWORD PTR [ebp-0x64],eax
  41c2fb:	lea    eax,[ebp-0x20]
  41c2fe:	mov    DWORD PTR [ebp-0x60],eax
  41c301:	lea    eax,[ebp-0x70]
  41c304:	push   eax
  41c305:	mov    eax,DWORD PTR [ebp+0x8]
  41c308:	xor    eax,esi
  41c30a:	add    eax,edi
  41c30c:	push   eax
  41c30d:	mov    eax,DWORD PTR [ebp+0x20]
  41c310:	add    eax,0xee
  41c315:	push   eax
  41c316:	mov    eax,DWORD PTR [ebp+0x20]
  41c319:	mov    eax,DWORD PTR [eax+0x198]
  41c31f:	mov    DWORD PTR [ebp-0x70],0x4
  41c326:	push   DWORD PTR [eax]
  41c328:	mov    eax,DWORD PTR [ebp+0x10]
  41c32b:	call   eax
  41c32d:	test   eax,eax
  41c32f:	je     0x41c354
  41c331:	and    DWORD PTR [ebp+0xc],0x0
  41c335:	cmp    DWORD PTR [ebx+0x50],0x0
  41c339:	jbe    0x41c354
  41c33b:	mov    eax,DWORD PTR [ebp+0x1c]
  41c33e:	mov    ecx,DWORD PTR [ebp-0x10]
  41c341:	sub    ecx,eax
  41c343:	mov    dl,BYTE PTR [ecx+eax*1]
  41c346:	inc    DWORD PTR [ebp+0xc]
  41c349:	mov    BYTE PTR [eax],dl
  41c34b:	mov    edx,DWORD PTR [ebp+0xc]
  41c34e:	inc    eax
  41c34f:	cmp    edx,DWORD PTR [ebx+0x50]
  41c352:	jb     0x41c343
  41c354:	mov    edx,DWORD PTR [ebp+0x1c]
  41c357:	mov    ecx,DWORD PTR [edx+0x3c]
  41c35a:	add    ecx,edx
  41c35c:	mov    eax,DWORD PTR [ecx+0xa0]
  41c362:	mov    ebx,DWORD PTR [ecx+0x28]
  41c365:	add    eax,edx
  41c367:	sub    edx,DWORD PTR [ebp-0x10]
  41c36a:	add    ebx,DWORD PTR [ebp+0x1c]
  41c36d:	mov    DWORD PTR [ebp+0xc],edx
  41c370:	mov    DWORD PTR [ebp-0x2c],ecx
  41c373:	mov    DWORD PTR [ebp-0x14],ebx
  41c376:	mov    DWORD PTR [ebp-0x8],0x0
  41c37d:	jmp    0x41c3f9
  41c37f:	add    edx,0xfffffff8
  41c382:	shr    edx,1
  41c384:	mov    DWORD PTR [ebp-0x18],edx
  41c387:	je     0x41c3e5
  41c389:	lea    edx,[eax+0x8]
  41c38c:	mov    DWORD PTR [ebp-0x4],edx
  41c38f:	mov    edx,DWORD PTR [ebp-0x18]
  41c392:	mov    DWORD PTR [ebp-0x18],edx
  41c395:	mov    edx,DWORD PTR [ebp-0x4]
  41c398:	movzx  edx,WORD PTR [edx]
  41c39b:	mov    DWORD PTR [ebp-0x24],edx
  41c39e:	and    edx,0xfff
  41c3a4:	mov    DWORD PTR [ebp-0x28],edx
  41c3a7:	mov    edx,DWORD PTR [ebp-0x24]
  41c3aa:	shr    edx,0xc
  41c3ad:	add    edx,0xffcd8d20
  41c3b3:	xor    edx,esi
  41c3b5:	cmp    edx,0xf89c85ba
  41c3bb:	jne    0x41c3dc
  41c3bd:	mov    edx,DWORD PTR [ebp-0x28]
  41c3c0:	add    edx,DWORD PTR [ebp+0x1c]
  41c3c3:	mov    ebx,DWORD PTR [eax]
  41c3c5:	cmp    DWORD PTR [ebx+edx*1],0x0
  41c3c9:	je     0x41c3d9
  41c3cb:	mov    ecx,DWORD PTR [ebp+0xc]
  41c3ce:	add    ecx,DWORD PTR [ebx+edx*1]
  41c3d1:	mov    ebx,DWORD PTR [eax]
  41c3d3:	mov    DWORD PTR [edx+ebx*1],ecx
  41c3d6:	mov    ecx,DWORD PTR [ebp-0x2c]
  41c3d9:	mov    ebx,DWORD PTR [ebp-0x14]
  41c3dc:	add    DWORD PTR [ebp-0x4],0x2
  41c3e0:	dec    DWORD PTR [ebp-0x18]
  41c3e3:	jne    0x41c395
  41c3e5:	mov    edx,DWORD PTR [ebp-0xc]
  41c3e8:	add    DWORD PTR [ebp-0x8],edx
  41c3eb:	mov    edx,DWORD PTR [ebp-0x8]
  41c3ee:	cmp    edx,DWORD PTR [ecx+0xa4]
  41c3f4:	jae    0x41c407
  41c3f6:	add    eax,DWORD PTR [ebp-0xc]
  41c3f9:	mov    edx,DWORD PTR [eax+0x4]
  41c3fc:	mov    DWORD PTR [ebp-0xc],edx
  41c3ff:	test   edx,edx
  41c401:	jne    0x41c37f
  41c407:	mov    eax,DWORD PTR [ebp-0x10]
  41c40a:	mov    DWORD PTR [ebp-0x6c],eax
  41c40d:	mov    DWORD PTR [ebp-0x70],0x4
  41c414:	mov    eax,DWORD PTR [ecx+0x50]
  41c417:	mov    DWORD PTR [ebp-0x68],eax
  41c41a:	mov    eax,DWORD PTR [ebp-0x1c]
  41c41d:	xor    eax,esi
  41c41f:	add    eax,edi
  41c421:	mov    DWORD PTR [ebp-0x64],eax
  41c424:	lea    eax,[ebp-0x20]
  41c427:	mov    DWORD PTR [ebp-0x60],eax
  41c42a:	lea    eax,[ebp-0x70]
  41c42d:	push   eax
  41c42e:	mov    eax,DWORD PTR [ebp+0x8]
  41c431:	xor    eax,esi
  41c433:	add    eax,edi
  41c435:	push   eax
  41c436:	mov    eax,DWORD PTR [ebp+0x20]
  41c439:	add    eax,0xee
  41c43e:	push   eax
  41c43f:	mov    eax,DWORD PTR [ebp+0x20]
  41c442:	mov    eax,DWORD PTR [eax+0x198]
  41c448:	push   DWORD PTR [eax]
  41c44a:	mov    eax,DWORD PTR [ebp+0x10]
  41c44d:	call   eax
  41c44f:	mov    eax,DWORD PTR [ebp+0x20]
  41c452:	mov    eax,DWORD PTR [eax+0x180]
  41c458:	add    eax,DWORD PTR [ebp+0xc]
  41c45b:	mov    ecx,DWORD PTR [ebp+0xc]
  41c45e:	push   DWORD PTR [ebp+0x18]
  41c461:	mov    DWORD PTR [eax],ecx
  41c463:	push   DWORD PTR [ebp+0x14]
  41c466:	push   DWORD PTR [ebp+0x1c]
  41c469:	call   ebx
  41c46b:	mov    ecx,DWORD PTR [ebp+0xc]
  41c46e:	add    ecx,DWORD PTR [ebp+0x20]
  41c471:	lea    eax,[ebp+0x4]
  41c474:	mov    DWORD PTR [ebp+0x20],ecx
  41c477:	mov    ecx,DWORD PTR [ebp+0x20]
  41c47a:	mov    ecx,DWORD PTR [ebp+0x20]
  41c47d:	mov    edx,DWORD PTR [ecx+0x190]
  41c483:	mov    ecx,DWORD PTR [ebp+0x20]
  41c486:	mov    ecx,DWORD PTR [ecx+0x18c]
  41c48c:	mov    esi,DWORD PTR [ecx]
  41c48e:	cmp    DWORD PTR [eax],esi
  41c490:	jb     0x41c4b1
  41c492:	mov    esi,DWORD PTR [edx]
  41c494:	mov    edi,DWORD PTR [edx]
  41c496:	mov    esi,DWORD PTR [esi+0x3c]
  41c499:	lea    esi,[edi+esi*1+0x50]
  41c49d:	mov    edi,DWORD PTR [ecx]
  41c49f:	add    edi,DWORD PTR [esi]
  41c4a1:	cmp    DWORD PTR [eax],edi
  41c4a3:	jae    0x41c4b1
  41c4a5:	mov    esi,DWORD PTR [ecx]
  41c4a7:	mov    ecx,DWORD PTR [eax]
  41c4a9:	mov    edx,DWORD PTR [edx]
  41c4ab:	sub    ecx,esi
  41c4ad:	add    edx,ecx
  41c4af:	mov    DWORD PTR [eax],edx
  41c4b1:	mov    eax,DWORD PTR [ebp+0xc]
  41c4b4:	jmp    0x41c4b8
  41c4b6:	xor    eax,eax
  41c4b8:	pop    edi
  41c4b9:	pop    esi
  41c4ba:	pop    ebx
  41c4bb:	leave  
  41c4bc:	ret    0x1c
  41c4bf:	push   ebp
  41c4c0:	mov    ebp,esp
  41c4c2:	sub    esp,0x1c
  41c4c5:	push   esi
  41c4c6:	mov    esi,eax
  41c4c8:	mov    eax,DWORD PTR [ecx+0x190]
  41c4ce:	cmp    DWORD PTR [eax],0x0
  41c4d1:	je     0x41c5e1
  41c4d7:	test   edx,edx
  41c4d9:	je     0x41c5e1
  41c4df:	test   esi,esi
  41c4e1:	je     0x41c5e1
  41c4e7:	mov    eax,DWORD PTR [esi+0x88]
  41c4ed:	test   eax,eax
  41c4ef:	je     0x41c5dc
  41c4f5:	cmp    DWORD PTR [esi+0x8c],0x10
  41c4fc:	je     0x41c5dc
  41c502:	cmp    DWORD PTR [esi+0x34],edx
  41c505:	je     0x41c5dc
  41c50b:	mov    esi,DWORD PTR [ecx+0x18c]
  41c511:	and    DWORD PTR [ebp-0x10],0x0
  41c515:	mov    ecx,edx
  41c517:	sub    ecx,DWORD PTR [esi]
  41c519:	add    eax,edx
  41c51b:	movzx  edx,WORD PTR [eax+0xc]
  41c51f:	mov    DWORD PTR [ebp-0x1c],ecx
  41c522:	movzx  ecx,WORD PTR [eax+0xe]
  41c526:	add    ecx,edx
  41c528:	je     0x41c5dc
  41c52e:	lea    ecx,[eax+0x14]
  41c531:	push   ebx
  41c532:	mov    DWORD PTR [ebp-0x18],ecx
  41c535:	mov    esi,0x7fffffff
  41c53a:	push   edi
  41c53b:	test   DWORD PTR [ecx],esi
  41c53d:	je     0x41c5be
  41c53f:	mov    edx,DWORD PTR [ecx]
  41c541:	and    DWORD PTR [ebp-0xc],0x0
  41c545:	and    edx,esi
  41c547:	add    edx,eax
  41c549:	movzx  edi,WORD PTR [edx+0xe]
  41c54d:	movzx  ebx,WORD PTR [edx+0xc]
  41c551:	add    edi,ebx
  41c553:	je     0x41c5be
  41c555:	lea    ecx,[edx+0x14]
  41c558:	mov    DWORD PTR [ebp-0x14],ecx
  41c55b:	test   DWORD PTR [ecx],esi
  41c55d:	je     0x41c5a0
  41c55f:	mov    ecx,DWORD PTR [ecx]
  41c561:	and    DWORD PTR [ebp-0x8],0x0
  41c565:	and    ecx,esi
  41c567:	add    ecx,eax
  41c569:	movzx  edi,WORD PTR [ecx+0xe]
  41c56d:	movzx  ebx,WORD PTR [ecx+0xc]
  41c571:	add    edi,ebx
  41c573:	je     0x41c5a0
  41c575:	lea    edi,[ecx+0x14]
  41c578:	mov    DWORD PTR [ebp-0x4],edi
  41c57b:	mov    edi,DWORD PTR [ebp-0x4]
  41c57e:	mov    edi,DWORD PTR [edi]
  41c580:	test   edi,edi
  41c582:	je     0x41c58a
  41c584:	mov    ebx,DWORD PTR [ebp-0x1c]
  41c587:	add    DWORD PTR [edi+eax*1],ebx
  41c58a:	movzx  edi,WORD PTR [ecx+0xe]
  41c58e:	movzx  ebx,WORD PTR [ecx+0xc]
  41c592:	inc    DWORD PTR [ebp-0x8]
  41c595:	add    DWORD PTR [ebp-0x4],0x8
  41c599:	add    edi,ebx
  41c59b:	cmp    DWORD PTR [ebp-0x8],edi
  41c59e:	jb     0x41c57b
  41c5a0:	movzx  edi,WORD PTR [edx+0xe]
  41c5a4:	movzx  ebx,WORD PTR [edx+0xc]
  41c5a8:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5ab:	inc    DWORD PTR [ebp-0xc]
  41c5ae:	add    ecx,0x8
  41c5b1:	add    edi,ebx
  41c5b3:	mov    DWORD PTR [ebp-0x14],ecx
  41c5b6:	cmp    DWORD PTR [ebp-0xc],edi
  41c5b9:	jb     0x41c55b
  41c5bb:	mov    ecx,DWORD PTR [ebp-0x18]
  41c5be:	movzx  edx,WORD PTR [eax+0xe]
  41c5c2:	movzx  edi,WORD PTR [eax+0xc]
  41c5c6:	inc    DWORD PTR [ebp-0x10]
  41c5c9:	add    ecx,0x8
  41c5cc:	add    edx,edi
  41c5ce:	mov    DWORD PTR [ebp-0x18],ecx
  41c5d1:	cmp    DWORD PTR [ebp-0x10],edx
  41c5d4:	jb     0x41c53b
  41c5da:	pop    edi
  41c5db:	pop    ebx
  41c5dc:	xor    eax,eax
  41c5de:	inc    eax
  41c5df:	jmp    0x41c5e3
  41c5e1:	xor    eax,eax
  41c5e3:	pop    esi
  41c5e4:	leave  
  41c5e5:	ret    
  41c5e6:	push   ebp
  41c5e7:	mov    ebp,esp
  41c5e9:	mov    ecx,DWORD PTR [ecx+0x190]
  41c5ef:	mov    eax,DWORD PTR [ebp+0xc]
  41c5f2:	sub    esp,0x10
  41c5f5:	push   ebx
  41c5f6:	xor    ebx,ebx
  41c5f8:	push   esi
  41c5f9:	push   edi
  41c5fa:	cmp    DWORD PTR [ecx],ebx
  41c5fc:	je     0x41c684
  41c602:	cmp    eax,ebx
  41c604:	je     0x41c684
  41c606:	cmp    DWORD PTR [eax+0x78],ebx
  41c609:	jne    0x41c610
  41c60b:	xor    eax,eax
  41c60d:	inc    eax
  41c60e:	jmp    0x41c686
  41c610:	mov    eax,DWORD PTR [eax+0x78]
  41c613:	add    eax,DWORD PTR [ebp+0x8]
  41c616:	mov    ecx,DWORD PTR [eax+0x1c]
  41c619:	mov    edx,DWORD PTR [eax+0x24]
  41c61c:	mov    esi,DWORD PTR [eax+0x14]
  41c61f:	mov    edi,DWORD PTR [eax+0x18]
  41c622:	add    ecx,DWORD PTR [ebp+0x8]
  41c625:	add    edx,DWORD PTR [ebp+0x8]
  41c628:	mov    DWORD PTR [ebp-0x4],esi
  41c62b:	cmp    esi,edi
  41c62d:	ja     0x41c632
  41c62f:	mov    DWORD PTR [ebp-0x4],edi
  41c632:	mov    DWORD PTR [ebp-0x8],ebx
  41c635:	cmp    DWORD PTR [ebp-0x4],ebx
  41c638:	jbe    0x41c60b
  41c63a:	cmp    ebx,DWORD PTR [eax+0x14]
  41c63d:	jae    0x41c645
  41c63f:	movzx  esi,WORD PTR [edx+ebx*2]
  41c643:	jmp    0x41c647
  41c645:	mov    esi,ebx
  41c647:	lea    esi,[ecx+esi*4]
  41c64a:	mov    edi,DWORD PTR [esi]
  41c64c:	test   edi,edi
  41c64e:	je     0x41c679
  41c650:	add    edi,DWORD PTR [ebp+0x8]
  41c653:	mov    DWORD PTR [ebp-0x10],edi
  41c656:	cmp    edi,eax
  41c658:	jbe    0x41c66a
  41c65a:	mov    ebx,DWORD PTR [ebp+0xc]
  41c65d:	mov    ebx,DWORD PTR [ebx+0x7c]
  41c660:	add    ebx,eax
  41c662:	cmp    edi,ebx
  41c664:	jae    0x41c66a
  41c666:	mov    esi,DWORD PTR [esi]
  41c668:	jmp    0x41c672
  41c66a:	sub    edi,DWORD PTR [ebp+0x8]
  41c66d:	mov    DWORD PTR [esi],edi
  41c66f:	mov    esi,DWORD PTR [ebp-0x10]
  41c672:	test   esi,esi
  41c674:	je     0x41c684
  41c676:	mov    ebx,DWORD PTR [ebp-0x8]
  41c679:	inc    ebx
  41c67a:	mov    DWORD PTR [ebp-0x8],ebx
  41c67d:	cmp    ebx,DWORD PTR [ebp-0x4]
  41c680:	jb     0x41c63a
  41c682:	jmp    0x41c60b
  41c684:	xor    eax,eax
  41c686:	pop    edi
  41c687:	pop    esi
  41c688:	pop    ebx
  41c689:	leave  
  41c68a:	ret    0x8
  41c68d:	push   ebp
  41c68e:	mov    ebp,esp
  41c690:	sub    esp,0x2c
  41c693:	mov    edx,0xf89c85b9
  41c698:	mov    DWORD PTR [ebp-0x4],edx
  41c69b:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41c6a2:	mov    eax,DWORD PTR [ebp-0x4]
  41c6a5:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6a8:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6ab:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6b1:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6b4:	push   ebx
  41c6b5:	mov    ebx,DWORD PTR [ebp+0x10]
  41c6b8:	push   esi
  41c6b9:	mov    esi,0x7510899
  41c6be:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41c6c5:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6c8:	mov    ebx,DWORD PTR [ebx+0x190]
  41c6ce:	push   edi
  41c6cf:	mov    edi,0x3272e0
  41c6d4:	xor    ecx,esi
  41c6d6:	xor    eax,esi
  41c6d8:	add    eax,edi
  41c6da:	add    ecx,edi
  41c6dc:	mov    DWORD PTR [ebp-0x18],eax
  41c6df:	cmp    ecx,DWORD PTR [ebx]
  41c6e1:	je     0x41c962
  41c6e7:	mov    ebx,DWORD PTR [ebp-0x4]
  41c6ea:	mov    ecx,DWORD PTR [ebp+0xc]
  41c6ed:	xor    ebx,esi
  41c6ef:	add    ebx,edi
  41c6f1:	cmp    ebx,ecx
  41c6f3:	je     0x41c962
  41c6f9:	mov    ebx,DWORD PTR [ebp-0x4]
  41c6fc:	mov    ecx,DWORD PTR [ecx+0x80]
  41c702:	xor    ebx,esi
  41c704:	add    ebx,edi
  41c706:	cmp    ecx,ebx
  41c708:	je     0x41c95d
  41c70e:	add    ecx,DWORD PTR [ebp+0x8]
  41c711:	mov    DWORD PTR [ebp-0x2c],ecx
  41c714:	mov    ebx,edx
  41c716:	xor    ebx,esi
  41c718:	add    ebx,edi
  41c71a:	mov    DWORD PTR [ebp-0x10],ebx
  41c71d:	mov    ebx,DWORD PTR [ebp-0x10]
  41c720:	cmp    ebx,edx
  41c722:	je     0x41c736
  41c724:	mov    edx,DWORD PTR [ebp-0x10]
  41c727:	mov    ebx,DWORD PTR [ebp-0x4]
  41c72a:	imul   edx,edx,0x14
  41c72d:	xor    ebx,esi
  41c72f:	add    ebx,edi
  41c731:	cmp    DWORD PTR [edx+ecx*1],ebx
  41c734:	jne    0x41c74d
  41c736:	mov    edx,DWORD PTR [ebp-0x10]
  41c739:	mov    ebx,DWORD PTR [ebp-0x4]
  41c73c:	imul   edx,edx,0x14
  41c73f:	xor    ebx,esi
  41c741:	add    ebx,edi
  41c743:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41c747:	je     0x41c94f
  41c74d:	mov    eax,DWORD PTR [ebp-0x4]
  41c750:	mov    ebx,DWORD PTR [ebp-0x4]
  41c753:	mov    eax,DWORD PTR [ebp-0x10]
  41c756:	imul   eax,eax,0x14
  41c759:	add    eax,ecx
  41c75b:	mov    ecx,DWORD PTR [eax+0x10]
  41c75e:	add    ecx,DWORD PTR [ebp+0x8]
  41c761:	xor    ebx,esi
  41c763:	mov    DWORD PTR [ebp-0x1c],ecx
  41c766:	mov    ecx,DWORD PTR [ebp-0x4]
  41c769:	mov    edx,DWORD PTR [ebp-0x4]
  41c76c:	xor    ecx,esi
  41c76e:	add    ecx,edi
  41c770:	xor    edx,esi
  41c772:	mov    DWORD PTR [ebp-0x24],ecx
  41c775:	mov    ecx,DWORD PTR [eax]
  41c777:	add    edx,edi
  41c779:	add    ebx,edi
  41c77b:	cmp    ecx,edx
  41c77d:	je     0x41c785
  41c77f:	add    ecx,DWORD PTR [ebp+0x8]
  41c782:	mov    DWORD PTR [ebp-0x24],ecx
  41c785:	mov    ecx,DWORD PTR [ebp-0x4]
  41c788:	xor    ecx,esi
  41c78a:	add    ecx,DWORD PTR [eax+0xc]
  41c78d:	mov    eax,DWORD PTR [ebp+0x8]
  41c790:	lea    eax,[ecx+eax*1+0x3272e0]
  41c797:	mov    DWORD PTR [ebp+0xc],eax
  41c79a:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  41c7a1:	mov    eax,DWORD PTR [ebp+0x10]
  41c7a4:	push   DWORD PTR [ebp+0xc]
  41c7a7:	mov    eax,DWORD PTR [eax+0x1d8]
  41c7ad:	call   DWORD PTR [eax]
  41c7af:	mov    ecx,DWORD PTR [ebp-0x4]
  41c7b2:	xor    ecx,esi
  41c7b4:	add    ecx,edi
  41c7b6:	mov    DWORD PTR [ebp-0xc],eax
  41c7b9:	cmp    ecx,eax
  41c7bb:	jne    0x41c7cf
  41c7bd:	mov    eax,DWORD PTR [ebp+0x10]
  41c7c0:	push   DWORD PTR [ebp+0xc]
  41c7c3:	mov    eax,DWORD PTR [eax+0x1d8]
  41c7c9:	call   DWORD PTR [eax+0xc]
  41c7cc:	mov    DWORD PTR [ebp-0xc],eax
  41c7cf:	mov    DWORD PTR [ebp-0x20],0x7f661b00
  41c7d6:	mov    DWORD PTR [ebp-0x20],0xf89c9990
  41c7dd:	mov    eax,DWORD PTR [ebp-0x4]
  41c7e0:	xor    eax,esi
  41c7e2:	add    eax,edi
  41c7e4:	cmp    eax,DWORD PTR [ebp-0xc]
  41c7e7:	jne    0x41c80c
  41c7e9:	mov    eax,DWORD PTR [ebp-0x8]
  41c7ec:	mov    ecx,DWORD PTR [ebp-0x20]
  41c7ef:	xor    eax,esi
  41c7f1:	xor    ecx,esi
  41c7f3:	lea    ebx,[ebx+eax*1+0x3272e0]
  41c7fa:	mov    eax,DWORD PTR [ebp+0x10]
  41c7fd:	mov    eax,DWORD PTR [eax+0x1d8]
  41c803:	add    ecx,edi
  41c805:	imul   ecx,ebx
  41c808:	push   ecx
  41c809:	call   DWORD PTR [eax+0x24]
  41c80c:	mov    eax,DWORD PTR [ebp-0x4]
  41c80f:	xor    eax,esi
  41c811:	add    eax,edi
  41c813:	cmp    eax,DWORD PTR [ebp-0xc]
  41c816:	jne    0x41c827
  41c818:	mov    eax,DWORD PTR [ebp-0x28]
  41c81b:	xor    eax,esi
  41c81d:	add    eax,edi
  41c81f:	cmp    ebx,eax
  41c821:	jbe    0x41c7a1
  41c827:	mov    eax,DWORD PTR [ebp-0x4]
  41c82a:	xor    eax,esi
  41c82c:	add    eax,edi
  41c82e:	cmp    eax,DWORD PTR [ebp-0xc]
  41c831:	jne    0x41c84a
  41c833:	mov    eax,DWORD PTR [ebp-0x8]
  41c836:	mov    ecx,DWORD PTR [ebp-0x18]
  41c839:	xor    eax,esi
  41c83b:	lea    eax,[ecx+eax*1+0x3272e0]
  41c842:	mov    DWORD PTR [ebp-0x18],eax
  41c845:	jmp    0x41c939
  41c84a:	mov    DWORD PTR [ebp-0x14],0x1121b01
  41c851:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41c858:	mov    ebx,DWORD PTR [ebp-0x4]
  41c85b:	xor    ebx,esi
  41c85d:	add    ebx,edi
  41c85f:	jmp    0x41c926
  41c864:	mov    eax,DWORD PTR [ebp-0x4]
  41c867:	xor    eax,esi
  41c869:	add    eax,edi
  41c86b:	mov    DWORD PTR [ebp-0x14],eax
  41c86e:	mov    eax,DWORD PTR [ebp-0x4]
  41c871:	xor    eax,esi
  41c873:	add    eax,edi
  41c875:	mov    DWORD PTR [ebp+0xc],eax
  41c878:	mov    ecx,DWORD PTR [ebp-0x4]
  41c87b:	mov    eax,DWORD PTR [ebp-0x24]
  41c87e:	xor    ecx,esi
  41c880:	add    ecx,edi
  41c882:	cmp    ecx,eax
  41c884:	je     0x41c88c
  41c886:	mov    eax,DWORD PTR [eax+ebx*4]
  41c889:	mov    DWORD PTR [ebp-0x14],eax
  41c88c:	mov    eax,DWORD PTR [ebp-0x1c]
  41c88f:	mov    eax,DWORD PTR [eax+ebx*4]
  41c892:	mov    DWORD PTR [ebp+0xc],eax
  41c895:	mov    eax,DWORD PTR [ebp-0x4]
  41c898:	mov    ecx,DWORD PTR [ebp-0x14]
  41c89b:	xor    eax,esi
  41c89d:	add    eax,edi
  41c89f:	cmp    eax,ecx
  41c8a1:	je     0x41c8cc
  41c8a3:	mov    eax,DWORD PTR [ebp-0x4]
  41c8a6:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8a9:	xor    eax,esi
  41c8ab:	add    eax,edi
  41c8ad:	shr    ecx,0x1f
  41c8b0:	cmp    eax,ecx
  41c8b2:	je     0x41c8cc
  41c8b4:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8b7:	mov    eax,DWORD PTR [ebp+0x10]
  41c8ba:	mov    eax,DWORD PTR [eax+0x1d8]
  41c8c0:	movzx  ecx,cx
  41c8c3:	push   ecx
  41c8c4:	push   DWORD PTR [ebp-0xc]
  41c8c7:	call   DWORD PTR [eax+0x8]
  41c8ca:	jmp    0x41c8e5
  41c8cc:	mov    eax,DWORD PTR [ebp+0xc]
  41c8cf:	add    eax,DWORD PTR [ebp+0x8]
  41c8d2:	mov    ecx,DWORD PTR [ebp+0x10]
  41c8d5:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41c8db:	add    eax,0x2
  41c8de:	push   eax
  41c8df:	push   DWORD PTR [ebp-0xc]
  41c8e2:	call   DWORD PTR [ecx+0x8]
  41c8e5:	mov    DWORD PTR [ebp+0xc],eax
  41c8e8:	mov    eax,DWORD PTR [ebp-0x4]
  41c8eb:	mov    ecx,DWORD PTR [ebp+0xc]
  41c8ee:	xor    eax,esi
  41c8f0:	add    eax,edi
  41c8f2:	cmp    eax,ecx
  41c8f4:	mov    eax,DWORD PTR [ebp-0x8]
  41c8f7:	jne    0x41c90a
  41c8f9:	mov    ecx,DWORD PTR [ebp-0x18]
  41c8fc:	xor    eax,esi
  41c8fe:	lea    eax,[ecx+eax*1+0x3272e0]
  41c905:	mov    DWORD PTR [ebp-0x18],eax
  41c908:	jmp    0x41c91a
  41c90a:	mov    ecx,DWORD PTR [ebp+0xc]
  41c90d:	xor    eax,esi
  41c90f:	add    eax,edi
  41c911:	imul   eax,ecx
  41c914:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c917:	mov    DWORD PTR [ecx+ebx*4],eax
  41c91a:	mov    eax,DWORD PTR [ebp-0x8]
  41c91d:	xor    eax,esi
  41c91f:	lea    ebx,[ebx+eax*1+0x3272e0]
  41c926:	mov    eax,DWORD PTR [ebp-0x4]
  41c929:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c92c:	xor    eax,esi
  41c92e:	add    eax,edi
  41c930:	cmp    DWORD PTR [ecx+ebx*4],eax
  41c933:	jne    0x41c864
  41c939:	mov    edx,DWORD PTR [ebp-0x10]
  41c93c:	mov    eax,DWORD PTR [ebp-0x18]
  41c93f:	mov    ecx,DWORD PTR [ebp-0x2c]
  41c942:	sub    edx,0x3272df
  41c948:	xor    edx,esi
  41c94a:	jmp    0x41c714
  41c94f:	mov    ecx,DWORD PTR [ebp-0x4]
  41c952:	xor    ecx,esi
  41c954:	add    ecx,edi
  41c956:	cmp    eax,ecx
  41c958:	mov    eax,DWORD PTR [ebp-0x4]
  41c95b:	jne    0x41c965
  41c95d:	mov    eax,DWORD PTR [ebp-0x8]
  41c960:	jmp    0x41c965
  41c962:	mov    eax,DWORD PTR [ebp-0x4]
  41c965:	xor    eax,esi
  41c967:	add    eax,edi
  41c969:	pop    edi
  41c96a:	pop    esi
  41c96b:	pop    ebx
  41c96c:	leave  
  41c96d:	ret    0xc
  41c970:	push   ebp
  41c971:	mov    ebp,esp
  41c973:	sub    esp,0x28
  41c976:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41c97d:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41c984:	mov    eax,DWORD PTR [ebp+0xc]
  41c987:	mov    DWORD PTR [ebp+0xc],eax
  41c98a:	push   esi
  41c98b:	mov    eax,eax
  41c98d:	mov    eax,DWORD PTR [ebp-0x4]
  41c990:	mov    esi,DWORD PTR [ebp+0x8]
  41c993:	mov    ecx,0x7510899
  41c998:	xor    eax,ecx
  41c99a:	mov    edx,0x3272e0
  41c99f:	add    eax,edx
  41c9a1:	cmp    esi,eax
  41c9a3:	je     0x41caca
  41c9a9:	mov    eax,DWORD PTR [ebp+0x8]
  41c9ac:	mov    esi,DWORD PTR [ebp+0x8]
  41c9af:	add    esi,DWORD PTR [eax+0x3c]
  41c9b2:	push   edi
  41c9b3:	mov    DWORD PTR [ebp+0xc],esi
  41c9b6:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  41c9bd:	mov    eax,DWORD PTR [ebp-0x1c]
  41c9c0:	mov    esi,DWORD PTR [ebp-0x4]
  41c9c3:	mov    edi,DWORD PTR [ebp+0xc]
  41c9c6:	xor    esi,ecx
  41c9c8:	xor    eax,ecx
  41c9ca:	add    esi,edx
  41c9cc:	cmp    DWORD PTR [edi+eax*8+0x1939778],esi
  41c9d3:	je     0x41cac4
  41c9d9:	mov    esi,DWORD PTR [ebp+0xc]
  41c9dc:	mov    eax,DWORD PTR [ebp+0x8]
  41c9df:	add    eax,DWORD PTR [esi+0xa0]
  41c9e5:	mov    esi,DWORD PTR [ebp+0x8]
  41c9e8:	mov    edi,DWORD PTR [ebp+0xc]
  41c9eb:	sub    esi,DWORD PTR [edi+0x34]
  41c9ee:	mov    edi,DWORD PTR [ebp-0x4]
  41c9f1:	xor    edi,ecx
  41c9f3:	add    edi,edx
  41c9f5:	mov    DWORD PTR [ebp-0x24],esi
  41c9f8:	cmp    esi,edi
  41c9fa:	je     0x41cac4
  41ca00:	mov    esi,DWORD PTR [ebp-0x4]
  41ca03:	xor    esi,ecx
  41ca05:	add    esi,edx
  41ca07:	mov    DWORD PTR [ebp-0x8],esi
  41ca0a:	push   ebx
  41ca0b:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41ca12:	jmp    0x41caae
  41ca17:	mov    esi,DWORD PTR [ebp-0x4]
  41ca1a:	xor    esi,ecx
  41ca1c:	lea    edi,[ebx-0x8]
  41ca1f:	add    esi,edx
  41ca21:	shr    edi,1
  41ca23:	cmp    esi,edi
  41ca25:	jae    0x41ca94
  41ca27:	sub    edi,esi
  41ca29:	lea    ebx,[eax+esi*2+0x8]
  41ca2d:	mov    DWORD PTR [ebp-0x18],edi
  41ca30:	movzx  esi,WORD PTR [ebx]
  41ca33:	and    esi,0xfff
  41ca39:	mov    DWORD PTR [ebp-0x14],esi
  41ca3c:	mov    edi,DWORD PTR [ebp-0x14]
  41ca3f:	mov    esi,DWORD PTR [eax]
  41ca41:	sub    esi,edx
  41ca43:	add    edi,esi
  41ca45:	movzx  esi,WORD PTR [ebx]
  41ca48:	shr    esi,0xc
  41ca4b:	xor    edi,ecx
  41ca4d:	mov    DWORD PTR [ebp-0x20],edi
  41ca50:	mov    DWORD PTR [ebp-0x14],esi
  41ca53:	mov    esi,DWORD PTR [ebp-0x20]
  41ca56:	mov    edi,DWORD PTR [ebp+0x8]
  41ca59:	xor    esi,ecx
  41ca5b:	lea    esi,[esi+edi*1+0x3272e0]
  41ca62:	mov    DWORD PTR [ebp-0x20],esi
  41ca65:	mov    esi,DWORD PTR [ebp-0x10]
  41ca68:	mov    edi,DWORD PTR [ebp-0x14]
  41ca6b:	xor    esi,ecx
  41ca6d:	add    esi,edx
  41ca6f:	cmp    edi,esi
  41ca71:	jne    0x41ca89
  41ca73:	mov    esi,DWORD PTR [ebp-0x10]
  41ca76:	mov    edi,DWORD PTR [ebp-0x14]
  41ca79:	xor    esi,ecx
  41ca7b:	add    esi,edx
  41ca7d:	cmp    edi,esi
  41ca7f:	jne    0x41ca89
  41ca81:	mov    esi,DWORD PTR [ebp-0x20]
  41ca84:	mov    edi,DWORD PTR [ebp-0x24]
  41ca87:	add    DWORD PTR [esi],edi
  41ca89:	add    ebx,0x2
  41ca8c:	dec    DWORD PTR [ebp-0x18]
  41ca8f:	jne    0x41ca30
  41ca91:	mov    ebx,DWORD PTR [ebp-0xc]
  41ca94:	add    DWORD PTR [ebp-0x8],ebx
  41ca97:	mov    esi,DWORD PTR [ebp-0x1c]
  41ca9a:	mov    edi,DWORD PTR [ebp-0x8]
  41ca9d:	mov    ebx,DWORD PTR [ebp+0xc]
  41caa0:	xor    esi,ecx
  41caa2:	cmp    edi,DWORD PTR [ebx+esi*8+0x193977c]
  41caa9:	jae    0x41cac3
  41caab:	add    eax,DWORD PTR [ebp-0xc]
  41caae:	mov    esi,DWORD PTR [ebp-0x4]
  41cab1:	mov    ebx,DWORD PTR [eax+0x4]
  41cab4:	xor    esi,ecx
  41cab6:	add    esi,edx
  41cab8:	mov    DWORD PTR [ebp-0xc],ebx
  41cabb:	cmp    ebx,esi
  41cabd:	jne    0x41ca17
  41cac3:	pop    ebx
  41cac4:	mov    eax,DWORD PTR [ebp-0x28]
  41cac7:	pop    edi
  41cac8:	jmp    0x41cacd
  41caca:	mov    eax,DWORD PTR [ebp-0x4]
  41cacd:	xor    eax,ecx
  41cacf:	add    eax,edx
  41cad1:	pop    esi
  41cad2:	leave  
  41cad3:	ret    0x8
  41cad6:	push   ebp
  41cad7:	mov    ebp,esp
  41cad9:	sub    esp,0xcc
  41cadf:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41cae6:	mov    DWORD PTR [ebp-0x24],0xf89c85b8
  41caed:	mov    eax,DWORD PTR [ebp-0x4]
  41caf0:	push   ebx
  41caf1:	push   esi
  41caf2:	mov    esi,0x7510899
  41caf7:	xor    eax,esi
  41caf9:	push   edi
  41cafa:	mov    edi,0x3272e0
  41caff:	add    eax,edi
  41cb01:	mov    DWORD PTR [ebp-0x1c],eax
  41cb04:	mov    eax,DWORD PTR [ebp-0x4]
  41cb07:	xor    eax,esi
  41cb09:	add    eax,edi
  41cb0b:	mov    DWORD PTR [ebp-0x8],eax
  41cb0e:	mov    ebx,DWORD PTR [ebp+0x20]
  41cb11:	mov    eax,DWORD PTR [ebp-0x14]
  41cb14:	mov    ecx,DWORD PTR [ebp-0x14]
  41cb17:	xor    eax,ecx
  41cb19:	mov    DWORD PTR [ebp-0x14],eax
  41cb1c:	add    DWORD PTR [ebp-0x14],0xf89cb5b9
  41cb23:	mov    eax,DWORD PTR [ebp-0xc]
  41cb26:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb29:	xor    eax,ecx
  41cb2b:	mov    DWORD PTR [ebp-0xc],eax
  41cb2e:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  41cb35:	mov    eax,DWORD PTR [ebp-0x10]
  41cb38:	mov    ecx,DWORD PTR [ebp-0x10]
  41cb3b:	xor    eax,ecx
  41cb3d:	mov    DWORD PTR [ebp-0x10],eax
  41cb40:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  41cb47:	mov    eax,DWORD PTR [ebp-0x20]
  41cb4a:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb4d:	xor    eax,ecx
  41cb4f:	mov    DWORD PTR [ebp-0x20],eax
  41cb52:	add    DWORD PTR [ebp-0x20],0xf89f05b9
  41cb59:	mov    eax,0x9471
  41cb5e:	mov    WORD PTR [ebp+0x20],ax
  41cb62:	mov    eax,DWORD PTR [ebp+0x8]
  41cb65:	test   eax,eax
  41cb67:	je     0x41cfc2
  41cb6d:	mov    eax,DWORD PTR [ebp+0xc]
  41cb70:	test   eax,eax
  41cb72:	je     0x41cfc2
  41cb78:	mov    eax,DWORD PTR [ebp+0x18]
  41cb7b:	test   eax,eax
  41cb7d:	je     0x41cfc2
  41cb83:	mov    ax,WORD PTR [ebp+0x20]
  41cb87:	mov    ecx,0x8a8c
  41cb8c:	xor    ax,cx
  41cb8f:	mov    ecx,0x3b50
  41cb94:	add    ax,cx
  41cb97:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb9a:	cmp    WORD PTR [ecx],ax
  41cb9d:	jne    0x41cfc2
  41cba3:	mov    eax,DWORD PTR [ebp-0x4]
  41cba6:	xor    eax,esi
  41cba8:	add    eax,edi
  41cbaa:	mov    DWORD PTR [ebp-0x30],eax
  41cbad:	mov    eax,DWORD PTR [ebp-0x4]
  41cbb0:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbb3:	mov    eax,DWORD PTR [ebp+0x8]
  41cbb6:	add    eax,DWORD PTR [ecx+0x3c]
  41cbb9:	mov    DWORD PTR [ebp+0xc],eax
  41cbbc:	mov    eax,DWORD PTR [eax+0x50]
  41cbbf:	test   eax,eax
  41cbc1:	je     0x41cfc2
  41cbc7:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  41cbce:	mov    eax,DWORD PTR [ebp-0x2c]
  41cbd1:	xor    eax,esi
  41cbd3:	add    eax,edi
  41cbd5:	mov    DWORD PTR [ebp-0x2c],eax
  41cbd8:	mov    eax,DWORD PTR [ebp-0x4]
  41cbdb:	mov    eax,DWORD PTR [ebx+0x190]
  41cbe1:	mov    ecx,DWORD PTR [eax]
  41cbe3:	mov    ecx,DWORD PTR [ecx+0x3c]
  41cbe6:	add    ecx,DWORD PTR [eax]
  41cbe8:	mov    eax,DWORD PTR [ebp-0x4]
  41cbeb:	mov    eax,DWORD PTR [ebx+0x18c]
  41cbf1:	mov    edx,DWORD PTR [eax]
  41cbf3:	mov    DWORD PTR [ebp-0x18],ecx
  41cbf6:	mov    DWORD PTR [ebp+0x20],edx
  41cbf9:	cmp    edx,edx
  41cbfb:	jne    0x41cc2f
  41cbfd:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cc03:	lea    edx,[ebp-0x1c]
  41cc06:	push   edx
  41cc07:	mov    edx,DWORD PTR [ebp-0xc]
  41cc0a:	xor    edx,esi
  41cc0c:	add    edx,edi
  41cc0e:	push   edx
  41cc0f:	push   DWORD PTR [ecx+0x50]
  41cc12:	push   DWORD PTR [ebp+0x20]
  41cc15:	call   DWORD PTR [eax+0x1c]
  41cc18:	mov    eax,DWORD PTR [ebp-0x18]
  41cc1b:	mov    ecx,DWORD PTR [eax+0x54]
  41cc1e:	mov    eax,DWORD PTR [eax+0x50]
  41cc21:	sub    eax,ecx
  41cc23:	add    ecx,DWORD PTR [ebp+0x20]
  41cc26:	push   ecx
  41cc27:	call   0x41d5ae
  41cc2c:	mov    edx,DWORD PTR [ebp+0x20]
  41cc2f:	mov    eax,DWORD PTR [ebx+0x194]
  41cc35:	mov    DWORD PTR [eax],edx
  41cc37:	mov    eax,DWORD PTR [ebp+0xc]
  41cc3a:	push   DWORD PTR [eax+0x54]
  41cc3d:	push   DWORD PTR [ebp+0x8]
  41cc40:	push   edx
  41cc41:	call   0x41d455
  41cc46:	mov    ecx,DWORD PTR [ebp+0x20]
  41cc49:	mov    eax,DWORD PTR [ecx+0x3c]
  41cc4c:	add    eax,ecx
  41cc4e:	movzx  ecx,WORD PTR [eax+0x14]
  41cc52:	lea    ecx,[ecx+eax*1+0x18]
  41cc56:	mov    DWORD PTR [ebp+0x18],ecx
  41cc59:	mov    ecx,DWORD PTR [ebp-0x4]
  41cc5c:	movzx  edx,WORD PTR [eax+0x6]
  41cc60:	xor    ecx,esi
  41cc62:	add    ecx,edi
  41cc64:	mov    DWORD PTR [ebp+0xc],eax
  41cc67:	cmp    edx,ecx
  41cc69:	je     0x41cd16
  41cc6f:	mov    ecx,DWORD PTR [ebp-0x4]
  41cc72:	xor    ecx,esi
  41cc74:	add    ecx,edi
  41cc76:	mov    DWORD PTR [ebp-0x8],ecx
  41cc79:	mov    ecx,DWORD PTR [ebp-0x24]
  41cc7c:	movzx  edx,WORD PTR [eax+0x6]
  41cc80:	xor    ecx,esi
  41cc82:	sub    edx,ecx
  41cc84:	sub    edx,edi
  41cc86:	cmp    DWORD PTR [ebp-0x8],edx
  41cc89:	ja     0x41cd16
  41cc8f:	mov    edx,DWORD PTR [ebp+0x18]
  41cc92:	add    edx,0x8
  41cc95:	mov    DWORD PTR [ebp+0x18],edx
  41cc98:	jmp    0x41cc9d
  41cc9a:	mov    edx,DWORD PTR [ebp+0x18]
  41cc9d:	mov    eax,DWORD PTR [eax+0x38]
  41cca0:	lea    ecx,[eax-0x1]
  41cca3:	mov    DWORD PTR [ebp-0x34],eax
  41cca6:	mov    eax,DWORD PTR [edx]
  41cca8:	test   ecx,eax
  41ccaa:	je     0x41ccb3
  41ccac:	not    ecx
  41ccae:	and    eax,ecx
  41ccb0:	add    eax,DWORD PTR [ebp-0x34]
  41ccb3:	mov    ecx,DWORD PTR [edx+0x4]
  41ccb6:	add    ecx,DWORD PTR [ebp+0x20]
  41ccb9:	push   ecx
  41ccba:	call   0x41d5ae
  41ccbf:	mov    edx,DWORD PTR [ebp-0x4]
  41ccc2:	mov    eax,DWORD PTR [ebp+0x18]
  41ccc5:	mov    ecx,DWORD PTR [eax+0x8]
  41ccc8:	xor    edx,esi
  41ccca:	add    edx,edi
  41cccc:	cmp    ecx,edx
  41ccce:	je     0x41cce7
  41ccd0:	push   ecx
  41ccd1:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccd4:	add    ecx,DWORD PTR [eax+0xc]
  41ccd7:	mov    eax,DWORD PTR [eax+0x4]
  41ccda:	add    eax,DWORD PTR [ebp+0x20]
  41ccdd:	push   ecx
  41ccde:	push   eax
  41ccdf:	call   0x41d455
  41cce4:	mov    eax,DWORD PTR [ebp+0x18]
  41cce7:	mov    ecx,DWORD PTR [ebp-0x24]
  41ccea:	mov    edx,DWORD PTR [ebp-0x8]
  41cced:	add    eax,0x28
  41ccf0:	xor    ecx,esi
  41ccf2:	lea    ecx,[edx+ecx*1+0x3272e0]
  41ccf9:	mov    edx,DWORD PTR [ebp+0xc]
  41ccfc:	mov    DWORD PTR [ebp+0x18],eax
  41ccff:	mov    eax,DWORD PTR [ebp-0x24]
  41cd02:	movzx  edx,WORD PTR [edx+0x6]
  41cd06:	xor    eax,esi
  41cd08:	sub    edx,eax
  41cd0a:	mov    eax,DWORD PTR [ebp+0xc]
  41cd0d:	sub    edx,edi
  41cd0f:	mov    DWORD PTR [ebp-0x8],ecx
  41cd12:	cmp    ecx,edx
  41cd14:	jbe    0x41cc9a
  41cd16:	mov    edx,DWORD PTR [ebx+0x18c]
  41cd1c:	mov    ecx,DWORD PTR [ebp+0x20]
  41cd1f:	cmp    ecx,DWORD PTR [edx]
  41cd21:	jne    0x41cd4a
  41cd23:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cd29:	lea    edx,[ebp-0x1c]
  41cd2c:	push   edx
  41cd2d:	mov    edx,DWORD PTR [ebp-0x10]
  41cd30:	xor    edx,esi
  41cd32:	add    edx,edi
  41cd34:	push   edx
  41cd35:	mov    edx,DWORD PTR [ebp-0x18]
  41cd38:	push   DWORD PTR [edx+0x54]
  41cd3b:	push   ecx
  41cd3c:	call   DWORD PTR [eax+0x1c]
  41cd3f:	test   eax,eax
  41cd41:	je     0x41cfb3
  41cd47:	mov    eax,DWORD PTR [ebp+0xc]
  41cd4a:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41cd50:	mov    ecx,DWORD PTR [ecx]
  41cd52:	xor    ecx,esi
  41cd54:	add    ecx,edi
  41cd56:	je     0x41cede
  41cd5c:	and    DWORD PTR [ebp-0x28],0x0
  41cd60:	and    DWORD PTR [ebp+0x8],0x0
  41cd64:	mov    eax,0xf89c851d
  41cd69:	lea    ecx,[eax-0x8]
  41cd6c:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41cd73:	mov    DWORD PTR [ebp-0x48],0xf89c850d
  41cd7a:	mov    DWORD PTR [ebp-0x44],eax
  41cd7d:	mov    DWORD PTR [ebp-0x40],ecx
  41cd80:	mov    DWORD PTR [ebp-0x3c],ecx
  41cd83:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  41cd8a:	mov    edx,DWORD PTR [ebp+0x8]
  41cd8d:	mov    ecx,0x899
  41cd92:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41cd97:	mov    edx,0x72e0
  41cd9c:	add    cx,dx
  41cd9f:	mov    edx,DWORD PTR [ebp+0x8]
  41cda2:	inc    DWORD PTR [ebp+0x8]
  41cda5:	cmp    DWORD PTR [ebp+0x8],0x6
  41cda9:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41cdb1:	jb     0x41cd8a
  41cdb3:	mov    ecx,0xf89c850b
  41cdb8:	mov    DWORD PTR [ebp-0xa4],eax
  41cdbe:	mov    DWORD PTR [ebp-0x90],eax
  41cdc4:	mov    DWORD PTR [ebp-0x68],eax
  41cdc7:	mov    DWORD PTR [ebp-0x64],eax
  41cdca:	lea    eax,[ecx-0x1]
  41cdcd:	mov    edx,0xf89c85ff
  41cdd2:	mov    DWORD PTR [ebp-0x58],eax
  41cdd5:	mov    DWORD PTR [ebp-0x54],eax
  41cdd8:	mov    DWORD PTR [ebp-0xa8],0xf89c85f5
  41cde2:	mov    DWORD PTR [ebp-0xa0],ecx
  41cde8:	mov    DWORD PTR [ebp-0x9c],edx
  41cdee:	mov    DWORD PTR [ebp-0x98],0xf89c8510
  41cdf8:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41ce02:	mov    DWORD PTR [ebp-0x8c],0xf89c85fc
  41ce0c:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41ce16:	mov    DWORD PTR [ebp-0x84],0xf89c850d
  41ce20:	mov    DWORD PTR [ebp-0x80],ecx
  41ce23:	mov    DWORD PTR [ebp-0x7c],0xf89c8500
  41ce2a:	mov    DWORD PTR [ebp-0x78],edx
  41ce2d:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41ce34:	mov    DWORD PTR [ebp-0x70],ecx
  41ce37:	mov    DWORD PTR [ebp-0x6c],0xf89c85f8
  41ce3e:	mov    DWORD PTR [ebp-0x60],ecx
  41ce41:	mov    DWORD PTR [ebp-0x5c],0xf89c851c
  41ce48:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  41ce4f:	xor    eax,eax
  41ce51:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41ce58:	xor    cl,0x99
  41ce5b:	sub    cl,0x20
  41ce5e:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41ce65:	inc    eax
  41ce66:	cmp    eax,0x17
  41ce69:	jb     0x41ce51
  41ce6b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41ce71:	lea    ecx,[ebp-0xb4]
  41ce77:	push   ecx
  41ce78:	call   DWORD PTR [eax+0x4]
  41ce7b:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41ce81:	lea    edx,[ebp-0xcc]
  41ce87:	push   edx
  41ce88:	push   eax
  41ce89:	call   DWORD PTR [ecx+0x8]
  41ce8c:	lea    ecx,[ebp-0x28]
  41ce8f:	push   ecx
  41ce90:	mov    ecx,DWORD PTR [ebx+0x18c]
  41ce96:	push   DWORD PTR [ecx]
  41ce98:	call   eax
  41ce9a:	mov    eax,DWORD PTR [ebp-0x28]
  41ce9d:	test   eax,eax
  41ce9f:	je     0x41cedb
  41cea1:	mov    DWORD PTR [ebp+0x8],eax
  41cea4:	jmp    0x41ceb0
  41cea6:	mov    eax,DWORD PTR [eax]
  41cea8:	mov    DWORD PTR [ebp-0x28],eax
  41ceab:	cmp    eax,DWORD PTR [ebp+0x8]
  41ceae:	je     0x41cebd
  41ceb0:	mov    edx,DWORD PTR [eax+0x18]
  41ceb3:	mov    ecx,DWORD PTR [ebx+0x18c]
  41ceb9:	cmp    edx,DWORD PTR [ecx]
  41cebb:	jne    0x41cea6
  41cebd:	mov    edx,DWORD PTR [eax+0x18]
  41cec0:	mov    ecx,DWORD PTR [ebx+0x18c]
  41cec6:	cmp    edx,DWORD PTR [ecx]
  41cec8:	jne    0x41cedb
  41ceca:	mov    edx,DWORD PTR [ebp-0x18]
  41cecd:	mov    ecx,DWORD PTR [ebx+0x190]
  41ced3:	mov    edx,DWORD PTR [edx+0x28]
  41ced6:	add    edx,DWORD PTR [ecx]
  41ced8:	mov    DWORD PTR [eax+0x1c],edx
  41cedb:	mov    eax,DWORD PTR [ebp+0xc]
  41cede:	push   ebx
  41cedf:	push   eax
  41cee0:	push   DWORD PTR [ebp+0x20]
  41cee3:	call   0x41c68d
  41cee8:	test   eax,eax
  41ceea:	je     0x41cfb3
  41cef0:	push   DWORD PTR [ebp+0xc]
  41cef3:	mov    ecx,ebx
  41cef5:	push   DWORD PTR [ebp+0x20]
  41cef8:	call   0x41c5e6
  41cefd:	test   eax,eax
  41ceff:	je     0x41cfb3
  41cf05:	mov    eax,DWORD PTR [ebp+0xc]
  41cf08:	mov    edx,DWORD PTR [ebp+0x20]
  41cf0b:	mov    ecx,ebx
  41cf0d:	call   0x41c4bf
  41cf12:	test   eax,eax
  41cf14:	je     0x41cfb3
  41cf1a:	push   ebx
  41cf1b:	push   DWORD PTR [ebp+0x20]
  41cf1e:	call   0x41c970
  41cf23:	test   eax,eax
  41cf25:	je     0x41cfb3
  41cf2b:	mov    eax,DWORD PTR [ebx+0x18c]
  41cf31:	mov    edx,DWORD PTR [ebp+0x20]
  41cf34:	cmp    edx,DWORD PTR [eax]
  41cf36:	jne    0x41cf52
  41cf38:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cf3e:	lea    ecx,[ebp-0x1c]
  41cf41:	push   ecx
  41cf42:	push   DWORD PTR [ebp-0x1c]
  41cf45:	mov    ecx,DWORD PTR [ebp-0x18]
  41cf48:	push   DWORD PTR [ecx+0x54]
  41cf4b:	push   edx
  41cf4c:	call   DWORD PTR [eax+0x1c]
  41cf4f:	mov    edx,DWORD PTR [ebp+0x20]
  41cf52:	mov    eax,DWORD PTR [ebx+0x1c8]
  41cf58:	mov    eax,DWORD PTR [eax]
  41cf5a:	xor    eax,esi
  41cf5c:	add    eax,edi
  41cf5e:	je     0x41cf97
  41cf60:	mov    ecx,DWORD PTR [ebp+0xc]
  41cf63:	mov    eax,DWORD PTR [ecx+0x28]
  41cf66:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  41cf6d:	mov    esi,DWORD PTR [ebp+0x8]
  41cf70:	push   DWORD PTR [ebp+0x14]
  41cf73:	xor    esi,0x899
  41cf79:	push   DWORD PTR [ebp+0x10]
  41cf7c:	add    esi,0x72e0
  41cf82:	or     WORD PTR [ecx+0x16],si
  41cf86:	add    eax,edx
  41cf88:	push   edx
  41cf89:	call   eax
  41cf8b:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b8
  41cf95:	jmp    0x41cfa1
  41cf97:	mov    eax,DWORD PTR [ebp+0xc]
  41cf9a:	mov    eax,DWORD PTR [eax+0x28]
  41cf9d:	add    eax,edx
  41cf9f:	call   eax
  41cfa1:	mov    DWORD PTR [ebp-0x8],eax
  41cfa4:	mov    eax,DWORD PTR [ebp-0x8]
  41cfa7:	mov    ecx,DWORD PTR [ebp+0x1c]
  41cfaa:	mov    DWORD PTR [ecx],eax
  41cfac:	mov    DWORD PTR [ebp-0x30],0x1
  41cfb3:	cmp    DWORD PTR [ebp-0x30],0x0
  41cfb7:	jne    0x41cfbd
  41cfb9:	and    DWORD PTR [ebp+0x20],0x0
  41cfbd:	mov    eax,DWORD PTR [ebp+0x20]
  41cfc0:	jmp    0x41cfc4
  41cfc2:	xor    eax,eax
  41cfc4:	pop    edi
  41cfc5:	pop    esi
  41cfc6:	pop    ebx
  41cfc7:	leave  
  41cfc8:	ret    0x1c
  41cfcb:	push   ebp
  41cfcc:	mov    ebp,esp
  41cfce:	movzx  edx,WORD PTR [ecx+0x6]
  41cfd2:	movzx  eax,WORD PTR [ecx+0x14]
  41cfd6:	push   ebx
  41cfd7:	push   edi
  41cfd8:	xor    edi,edi
  41cfda:	lea    eax,[eax+ecx*1+0x18]
  41cfde:	test   edx,edx
  41cfe0:	je     0x41d001
  41cfe2:	mov    ecx,DWORD PTR [eax+0xc]
  41cfe5:	lea    ebx,[ecx+esi*1]
  41cfe8:	cmp    DWORD PTR [ebp+0x8],ebx
  41cfeb:	jb     0x41cff9
  41cfed:	mov    ebx,DWORD PTR [eax+0x8]
  41cff0:	add    ebx,ecx
  41cff2:	add    ebx,esi
  41cff4:	cmp    DWORD PTR [ebp+0x8],ebx
  41cff7:	jb     0x41d003
  41cff9:	add    eax,0x28
  41cffc:	inc    edi
  41cffd:	cmp    edi,edx
  41cfff:	jb     0x41cfe2
  41d001:	xor    eax,eax
  41d003:	pop    edi
  41d004:	pop    ebx
  41d005:	pop    ebp
  41d006:	ret    0x4
  41d009:	push   ebp
  41d00a:	mov    ebp,esp
  41d00c:	sub    esp,0x34
  41d00f:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41d016:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41d01d:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  41d024:	mov    DWORD PTR [ebp-0x8],0xf89c8518
  41d02b:	mov    DWORD PTR [ebp-0x20],0xf89c85f8
  41d032:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  41d039:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  41d040:	mov    DWORD PTR [ebp-0x10],eax
  41d043:	mov    eax,DWORD PTR [ebp+0x8]
  41d046:	mov    DWORD PTR [ebp-0x14],eax
  41d049:	mov    eax,DWORD PTR [ebp-0xc]
  41d04c:	push   ebx
  41d04d:	mov    ecx,0x7510899
  41d052:	xor    eax,ecx
  41d054:	push   esi
  41d055:	mov    esi,DWORD PTR [ebp-0x10]
  41d058:	mov    edx,0x3272e0
  41d05d:	add    eax,edx
  41d05f:	push   edi
  41d060:	cmp    esi,eax
  41d062:	je     0x41d241
  41d068:	mov    eax,DWORD PTR [ebp-0xc]
  41d06b:	mov    esi,DWORD PTR [ebp-0x14]
  41d06e:	xor    eax,ecx
  41d070:	add    eax,edx
  41d072:	cmp    esi,eax
  41d074:	je     0x41d241
  41d07a:	mov    eax,DWORD PTR [ebp-0xc]
  41d07d:	xor    eax,ecx
  41d07f:	add    eax,edx
  41d081:	mov    DWORD PTR [ebp-0x24],eax
  41d084:	mov    eax,DWORD PTR [ebp-0xc]
  41d087:	xor    eax,ecx
  41d089:	add    eax,edx
  41d08b:	mov    DWORD PTR [ebp-0x28],eax
  41d08e:	mov    edi,DWORD PTR [ebp-0x20]
  41d091:	mov    ebx,DWORD PTR [ebp-0x8]
  41d094:	mov    esi,0x899
  41d099:	xor    edi,esi
  41d09b:	mov    eax,0x72e0
  41d0a0:	xor    ebx,esi
  41d0a2:	add    edi,eax
  41d0a4:	add    ebx,eax
  41d0a6:	sub    ebx,edi
  41d0a8:	mov    WORD PTR [ebp-0x8],bx
  41d0ac:	jmp    0x41d171
  41d0b1:	mov    edi,DWORD PTR [ebp-0xc]
  41d0b4:	mov    bx,WORD PTR [ebp-0x4]
  41d0b8:	xor    edi,esi
  41d0ba:	add    edi,eax
  41d0bc:	cmp    bx,di
  41d0bf:	je     0x41d1b3
  41d0c5:	mov    edi,DWORD PTR [ebp-0xc]
  41d0c8:	mov    ebx,DWORD PTR [ebp+0xc]
  41d0cb:	xor    edi,ecx
  41d0cd:	add    edi,edx
  41d0cf:	cmp    ebx,edi
  41d0d1:	mov    di,WORD PTR [ebp-0x4]
  41d0d5:	mov    bx,WORD PTR [ebp+0x8]
  41d0d9:	je     0x41d144
  41d0db:	cmp    bx,di
  41d0de:	je     0x41d14d
  41d0e0:	mov    edi,DWORD PTR [ebp-0x20]
  41d0e3:	mov    bx,WORD PTR [ebp+0x8]
  41d0e7:	xor    edi,esi
  41d0e9:	add    edi,eax
  41d0eb:	cmp    bx,di
  41d0ee:	jb     0x41d10e
  41d0f0:	mov    edi,DWORD PTR [ebp-0x2c]
  41d0f3:	mov    bx,WORD PTR [ebp+0x8]
  41d0f7:	xor    edi,esi
  41d0f9:	add    edi,eax
  41d0fb:	cmp    bx,di
  41d0fe:	ja     0x41d10e
  41d100:	movzx  edi,WORD PTR [ebp+0x8]
  41d104:	movzx  ebx,WORD PTR [ebp-0x8]
  41d108:	add    edi,ebx
  41d10a:	mov    WORD PTR [ebp+0x8],di
  41d10e:	mov    edi,DWORD PTR [ebp-0x20]
  41d111:	mov    bx,WORD PTR [ebp-0x4]
  41d115:	xor    edi,esi
  41d117:	add    edi,eax
  41d119:	cmp    bx,di
  41d11c:	jb     0x41d13c
  41d11e:	mov    edi,DWORD PTR [ebp-0x2c]
  41d121:	mov    bx,WORD PTR [ebp-0x4]
  41d125:	xor    edi,esi
  41d127:	add    edi,eax
  41d129:	cmp    bx,di
  41d12c:	ja     0x41d13c
  41d12e:	movzx  edi,WORD PTR [ebp-0x4]
  41d132:	movzx  ebx,WORD PTR [ebp-0x8]
  41d136:	add    edi,ebx
  41d138:	mov    WORD PTR [ebp-0x4],di
  41d13c:	mov    di,WORD PTR [ebp-0x4]
  41d140:	mov    bx,WORD PTR [ebp+0x8]
  41d144:	cmp    bx,di
  41d147:	jne    0x41d241
  41d14d:	mov    edi,DWORD PTR [ebp-0x1c]
  41d150:	mov    ebx,DWORD PTR [ebp-0x10]
  41d153:	xor    edi,ecx
  41d155:	lea    edi,[edi+ebx*1+0x3272e0]
  41d15c:	mov    DWORD PTR [ebp-0x10],edi
  41d15f:	mov    edi,DWORD PTR [ebp-0x1c]
  41d162:	mov    ebx,DWORD PTR [ebp-0x14]
  41d165:	xor    edi,ecx
  41d167:	lea    edi,[edi+ebx*1+0x3272e0]
  41d16e:	mov    DWORD PTR [ebp-0x14],edi
  41d171:	mov    edi,DWORD PTR [ebp-0x24]
  41d174:	mov    ebx,DWORD PTR [ebp-0x10]
  41d177:	mov    di,WORD PTR [ebx+edi*2]
  41d17b:	mov    WORD PTR [ebp+0x8],di
  41d17f:	mov    edi,DWORD PTR [ebp-0x28]
  41d182:	mov    ebx,DWORD PTR [ebp-0x14]
  41d185:	mov    di,WORD PTR [ebx+edi*2]
  41d189:	mov    WORD PTR [ebp-0x4],di
  41d18d:	mov    edi,DWORD PTR [ebp-0xc]
  41d190:	mov    bx,WORD PTR [ebp+0x8]
  41d194:	xor    edi,esi
  41d196:	add    edi,eax
  41d198:	cmp    bx,di
  41d19b:	jne    0x41d0b1
  41d1a1:	mov    eax,DWORD PTR [ebp-0x18]
  41d1a4:	mov    esi,DWORD PTR [ebp-0xc]
  41d1a7:	xor    eax,ecx
  41d1a9:	add    eax,edx
  41d1ab:	imul   eax,esi
  41d1ae:	mov    DWORD PTR [ebp-0xc],eax
  41d1b1:	jmp    0x41d1c5
  41d1b3:	mov    eax,DWORD PTR [ebp-0xc]
  41d1b6:	mov    esi,DWORD PTR [ebp-0x18]
  41d1b9:	xor    eax,ecx
  41d1bb:	lea    eax,[eax+esi*1+0x3272e0]
  41d1c2:	mov    DWORD PTR [ebp-0x18],eax
  41d1c5:	mov    eax,DWORD PTR [ebp-0x24]
  41d1c8:	sub    eax,edx
  41d1ca:	xor    eax,ecx
  41d1cc:	mov    DWORD PTR [ebp-0x30],eax
  41d1cf:	mov    eax,DWORD PTR [ebp-0x28]
  41d1d2:	sub    eax,edx
  41d1d4:	xor    eax,ecx
  41d1d6:	mov    DWORD PTR [ebp-0x34],eax
  41d1d9:	mov    eax,DWORD PTR [ebp-0x34]
  41d1dc:	mov    esi,DWORD PTR [ebp-0x1c]
  41d1df:	xor    esi,ecx
  41d1e1:	add    esi,edx
  41d1e3:	xor    eax,ecx
  41d1e5:	add    eax,0x3272e0
  41d1ea:	imul   esi,eax
  41d1ed:	mov    eax,DWORD PTR [ebp-0x14]
  41d1f0:	movzx  eax,WORD PTR [esi+eax*1]
  41d1f4:	mov    esi,DWORD PTR [ebp-0x30]
  41d1f7:	mov    edi,DWORD PTR [ebp-0x1c]
  41d1fa:	xor    esi,ecx
  41d1fc:	add    esi,edx
  41d1fe:	xor    edi,ecx
  41d200:	add    edi,edx
  41d202:	imul   edi,esi
  41d205:	mov    esi,DWORD PTR [ebp-0x10]
  41d208:	movzx  esi,WORD PTR [edi+esi*1]
  41d20c:	sub    eax,edx
  41d20e:	sub    esi,edx
  41d210:	xor    eax,ecx
  41d212:	xor    esi,ecx
  41d214:	cmp    esi,eax
  41d216:	jne    0x41d241
  41d218:	mov    eax,DWORD PTR [ebp-0x30]
  41d21b:	mov    esi,DWORD PTR [ebp-0x1c]
  41d21e:	xor    eax,ecx
  41d220:	add    eax,0x3272e0
  41d225:	xor    esi,ecx
  41d227:	add    esi,edx
  41d229:	imul   esi,eax
  41d22c:	mov    eax,DWORD PTR [ebp-0x10]
  41d22f:	movzx  eax,WORD PTR [esi+eax*1]
  41d233:	mov    esi,DWORD PTR [ebp-0xc]
  41d236:	sub    eax,edx
  41d238:	xor    eax,ecx
  41d23a:	cmp    eax,esi
  41d23c:	mov    eax,DWORD PTR [ebp-0xc]
  41d23f:	je     0x41d244
  41d241:	mov    eax,DWORD PTR [ebp-0x18]
  41d244:	pop    edi
  41d245:	xor    eax,ecx
  41d247:	pop    esi
  41d248:	add    eax,edx
  41d24a:	pop    ebx
  41d24b:	leave  
  41d24c:	ret    0x8
  41d24f:	push   ebp
  41d250:	mov    ebp,esp
  41d252:	push   ecx
  41d253:	mov    cx,WORD PTR [eax]
  41d256:	push   esi
  41d257:	mov    esi,0x3b50
  41d25c:	sub    cx,si
  41d25f:	mov    esi,0x8a8c
  41d264:	xor    cx,si
  41d267:	mov    esi,0x4e3c
  41d26c:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d273:	mov    edx,0xf89c85b9
  41d278:	cmp    cx,si
  41d27b:	je     0x41d2da
  41d27d:	push   ebx
  41d27e:	push   edi
  41d27f:	movzx  ecx,cx
  41d282:	mov    edi,0xffcd8d20
  41d287:	mov    esi,0x7510899
  41d28c:	mov    ebx,0x4f80
  41d291:	cmp    cx,bx
  41d294:	jne    0x41d299
  41d296:	mov    DWORD PTR [ebp-0x4],edx
  41d299:	lea    edx,[edi+0x1]
  41d29c:	xor    edx,esi
  41d29e:	mov    edi,edx
  41d2a0:	xor    edi,esi
  41d2a2:	mov    cx,WORD PTR [eax+edi*2+0x64e5c0]
  41d2aa:	mov    ebx,0x3b50
  41d2af:	sub    cx,bx
  41d2b2:	mov    ebx,0x8a8c
  41d2b7:	xor    cx,bx
  41d2ba:	mov    ebx,0x4e3c
  41d2bf:	cmp    cx,bx
  41d2c2:	jne    0x41d28c
  41d2c4:	mov    ecx,DWORD PTR [ebp-0x4]
  41d2c7:	pop    edi
  41d2c8:	pop    ebx
  41d2c9:	cmp    ecx,0xf89c8586
  41d2cf:	je     0x41d2da
  41d2d1:	xor    ecx,esi
  41d2d3:	lea    eax,[eax+ecx*2+0x64e5c2]
  41d2da:	pop    esi
  41d2db:	leave  
  41d2dc:	ret    
  41d2dd:	push   ebp
  41d2de:	mov    ebp,esp
  41d2e0:	push   ecx
  41d2e1:	push   esi
  41d2e2:	push   edi
  41d2e3:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d2ea:	mov    esi,0xf89c85b9
  41d2ef:	call   0x41d24f
  41d2f4:	mov    edi,eax
  41d2f6:	mov    al,BYTE PTR [edi]
  41d2f8:	add    al,0x9
  41d2fa:	xor    al,0x73
  41d2fc:	cmp    al,0x7a
  41d2fe:	je     0x41d361
  41d300:	mov    eax,edi
  41d302:	mov    edx,0xffcd8d20
  41d307:	mov    ecx,0x7510899
  41d30c:	push   ebx
  41d30d:	mov    ax,WORD PTR [eax]
  41d310:	mov    ebx,0x3b50
  41d315:	sub    ax,bx
  41d318:	mov    ebx,0x8a8c
  41d31d:	xor    ax,bx
  41d320:	mov    ebx,0x4e52
  41d325:	cmp    ax,bx
  41d328:	jne    0x41d32d
  41d32a:	mov    DWORD PTR [ebp-0x4],esi
  41d32d:	lea    esi,[edx+0x1]
  41d330:	xor    esi,ecx
  41d332:	mov    edx,esi
  41d334:	xor    edx,ecx
  41d336:	lea    eax,[edi+edx*2+0x64e5c0]
  41d33d:	mov    bl,BYTE PTR [eax]
  41d33f:	add    bl,0x9
  41d342:	xor    bl,0x73
  41d345:	cmp    bl,0x7a
  41d348:	jne    0x41d30d
  41d34a:	mov    eax,DWORD PTR [ebp-0x4]
  41d34d:	pop    ebx
  41d34e:	cmp    eax,0xf89c8586
  41d353:	je     0x41d361
  41d355:	xor    eax,ecx
  41d357:	xor    ecx,ecx
  41d359:	mov    WORD PTR [edi+eax*2+0x64e5c0],cx
  41d361:	mov    eax,edi
  41d363:	pop    edi
  41d364:	pop    esi
  41d365:	leave  
  41d366:	ret    
  41d367:	push   ebp
  41d368:	mov    ebp,esp
  41d36a:	push   ecx
  41d36b:	push   esi
  41d36c:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d373:	mov    esi,0xf89c85b9
  41d378:	call   0x41d24f
  41d37d:	mov    cx,WORD PTR [eax]
  41d380:	mov    edx,0x3b50
  41d385:	sub    cx,dx
  41d388:	mov    edx,0x8a8c
  41d38d:	xor    cx,dx
  41d390:	mov    edx,0x4e3c
  41d395:	cmp    cx,dx
  41d398:	je     0x41d3f1
  41d39a:	push   ebx
  41d39b:	push   edi
  41d39c:	movzx  ecx,cx
  41d39f:	mov    edx,0xffcd8d20
  41d3a4:	mov    edi,0x7510899
  41d3a9:	mov    ebx,0x4e52
  41d3ae:	cmp    cx,bx
  41d3b1:	jne    0x41d3b6
  41d3b3:	mov    DWORD PTR [ebp-0x4],esi
  41d3b6:	lea    esi,[edx+0x1]
  41d3b9:	xor    esi,edi
  41d3bb:	mov    edx,esi
  41d3bd:	xor    edx,edi
  41d3bf:	mov    cx,WORD PTR [eax+edx*2+0x64e5c0]
  41d3c7:	mov    ebx,0x3b50
  41d3cc:	sub    cx,bx
  41d3cf:	mov    ebx,0x8a8c
  41d3d4:	xor    cx,bx
  41d3d7:	mov    ebx,0x4e3c
  41d3dc:	cmp    cx,bx
  41d3df:	jne    0x41d3a9
  41d3e1:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41d3e8:	pop    edi
  41d3e9:	pop    ebx
  41d3ea:	je     0x41d3f1
  41d3ec:	xor    eax,eax
  41d3ee:	inc    eax
  41d3ef:	jmp    0x41d3f3
  41d3f1:	xor    eax,eax
  41d3f3:	pop    esi
  41d3f4:	leave  
  41d3f5:	ret    
  41d3f6:	push   ebp
  41d3f7:	mov    ebp,esp
  41d3f9:	push   ecx
  41d3fa:	mov    eax,DWORD PTR [ebp+0x8]
  41d3fd:	movzx  ecx,WORD PTR [eax]
  41d400:	push   esi
  41d401:	lea    eax,[ecx-0x3b50]
  41d407:	mov    esi,0x8a8c
  41d40c:	push   edi
  41d40d:	xor    eax,esi
  41d40f:	mov    edi,0x4e3c
  41d414:	mov    DWORD PTR [ebp-0x4],edx
  41d417:	cmp    ax,di
  41d41a:	je     0x41d447
  41d41c:	mov    eax,DWORD PTR [ebp+0x8]
  41d41f:	sub    eax,edx
  41d421:	mov    DWORD PTR [ebp+0x8],eax
  41d424:	jmp    0x41d429
  41d426:	mov    eax,DWORD PTR [ebp+0x8]
  41d429:	mov    WORD PTR [edx],cx
  41d42c:	add    edx,0x2
  41d42f:	movzx  edi,WORD PTR [eax+edx*1]
  41d433:	mov    ecx,edi
  41d435:	add    edi,0xffffc4b0
  41d43b:	xor    edi,esi
  41d43d:	mov    eax,0x4e3c
  41d442:	cmp    di,ax
  41d445:	jne    0x41d426
  41d447:	xor    eax,eax
  41d449:	pop    edi
  41d44a:	mov    WORD PTR [edx],ax
  41d44d:	mov    eax,DWORD PTR [ebp-0x4]
  41d450:	pop    esi
  41d451:	leave  
  41d452:	ret    0x4
  41d455:	push   ebp
  41d456:	mov    ebp,esp
  41d458:	sub    esp,0x18
  41d45b:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41d462:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41d469:	mov    eax,DWORD PTR [ebp-0x14]
  41d46c:	xor    eax,0x7510899
  41d471:	add    eax,0x3272e0
  41d476:	mov    DWORD PTR [ebp-0x8],eax
  41d479:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  41d480:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41d487:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41d48e:	mov    eax,DWORD PTR [ebp-0x14]
  41d491:	xor    eax,0x7510899
  41d496:	mov    ecx,DWORD PTR [ebp-0x8]
  41d499:	lea    eax,[ecx+eax*1+0x3272e0]
  41d4a0:	mov    ecx,DWORD PTR [ebp-0x18]
  41d4a3:	xor    ecx,0x7510899
  41d4a9:	add    ecx,0x3272e0
  41d4af:	mov    edx,DWORD PTR [ebp+0x10]
  41d4b2:	imul   edx,ecx
  41d4b5:	cmp    eax,edx
  41d4b7:	jae    0x41d5aa
  41d4bd:	mov    eax,DWORD PTR [ebp+0x10]
  41d4c0:	mov    ecx,DWORD PTR [ebp-0x8]
  41d4c3:	sub    eax,ecx
  41d4c5:	mov    ecx,DWORD PTR [ebp-0x10]
  41d4c8:	xor    ecx,0x7510899
  41d4ce:	add    ecx,0x3272e0
  41d4d4:	cmp    eax,ecx
  41d4d6:	jbe    0x41d508
  41d4d8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4db:	add    eax,DWORD PTR [ebp-0x8]
  41d4de:	mov    ecx,DWORD PTR [ebp+0xc]
  41d4e1:	add    ecx,DWORD PTR [ebp-0x8]
  41d4e4:	mov    edx,DWORD PTR [ecx]
  41d4e6:	mov    DWORD PTR [eax],edx
  41d4e8:	mov    ecx,DWORD PTR [ecx+0x4]
  41d4eb:	mov    DWORD PTR [eax+0x4],ecx
  41d4ee:	mov    eax,DWORD PTR [ebp-0x10]
  41d4f1:	xor    eax,0x7510899
  41d4f6:	mov    ecx,DWORD PTR [ebp-0x8]
  41d4f9:	lea    eax,[ecx+eax*1+0x3272e0]
  41d500:	mov    DWORD PTR [ebp-0x8],eax
  41d503:	jmp    0x41d5a5
  41d508:	mov    eax,DWORD PTR [ebp+0x10]
  41d50b:	mov    ecx,DWORD PTR [ebp-0x8]
  41d50e:	sub    eax,ecx
  41d510:	mov    ecx,DWORD PTR [ebp-0xc]
  41d513:	xor    ecx,0x7510899
  41d519:	add    ecx,0x3272e0
  41d51f:	cmp    eax,ecx
  41d521:	jbe    0x41d54a
  41d523:	mov    eax,DWORD PTR [ebp+0x8]
  41d526:	add    eax,DWORD PTR [ebp-0x8]
  41d529:	mov    ecx,DWORD PTR [ebp+0xc]
  41d52c:	add    ecx,DWORD PTR [ebp-0x8]
  41d52f:	mov    ecx,DWORD PTR [ecx]
  41d531:	mov    DWORD PTR [eax],ecx
  41d533:	mov    eax,DWORD PTR [ebp-0xc]
  41d536:	xor    eax,0x7510899
  41d53b:	mov    ecx,DWORD PTR [ebp-0x8]
  41d53e:	lea    eax,[ecx+eax*1+0x3272e0]
  41d545:	mov    DWORD PTR [ebp-0x8],eax
  41d548:	jmp    0x41d5a5
  41d54a:	mov    eax,DWORD PTR [ebp+0x10]
  41d54d:	mov    ecx,DWORD PTR [ebp-0x8]
  41d550:	sub    eax,ecx
  41d552:	mov    ecx,DWORD PTR [ebp-0x4]
  41d555:	xor    ecx,0x7510899
  41d55b:	add    ecx,0x3272e0
  41d561:	cmp    eax,ecx
  41d563:	jbe    0x41d58e
  41d565:	mov    eax,DWORD PTR [ebp+0x8]
  41d568:	add    eax,DWORD PTR [ebp-0x8]
  41d56b:	mov    ecx,DWORD PTR [ebp+0xc]
  41d56e:	add    ecx,DWORD PTR [ebp-0x8]
  41d571:	mov    cx,WORD PTR [ecx]
  41d574:	mov    WORD PTR [eax],cx
  41d577:	mov    eax,DWORD PTR [ebp-0x4]
  41d57a:	xor    eax,0x7510899
  41d57f:	mov    ecx,DWORD PTR [ebp-0x8]
  41d582:	lea    eax,[ecx+eax*1+0x3272e0]
  41d589:	mov    DWORD PTR [ebp-0x8],eax
  41d58c:	jmp    0x41d5a5
  41d58e:	mov    eax,DWORD PTR [ebp+0x8]
  41d591:	add    eax,DWORD PTR [ebp-0x8]
  41d594:	mov    ecx,DWORD PTR [ebp+0xc]
  41d597:	add    ecx,DWORD PTR [ebp-0x8]
  41d59a:	mov    cl,BYTE PTR [ecx]
  41d59c:	mov    BYTE PTR [eax],cl
  41d59e:	mov    eax,DWORD PTR [ebp-0x8]
  41d5a1:	inc    eax
  41d5a2:	mov    DWORD PTR [ebp-0x8],eax
  41d5a5:	jmp    0x41d48e
  41d5aa:	leave  
  41d5ab:	ret    0xc
  41d5ae:	push   ebp
  41d5af:	mov    ebp,esp
  41d5b1:	sub    esp,0xc
  41d5b4:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41d5bb:	push   esi
  41d5bc:	mov    esi,eax
  41d5be:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41d5c5:	mov    edx,DWORD PTR [ebp-0x4]
  41d5c8:	mov    eax,0x7510899
  41d5cd:	xor    edx,eax
  41d5cf:	mov    ecx,0x3272e0
  41d5d4:	add    edx,ecx
  41d5d6:	cmp    esi,edx
  41d5d8:	je     0x41d61a
  41d5da:	push   ebx
  41d5db:	push   edi
  41d5dc:	mov    edx,DWORD PTR [ebp-0x8]
  41d5df:	mov    ebx,DWORD PTR [ebp+0x8]
  41d5e2:	xor    edx,eax
  41d5e4:	mov    edi,0xffcd8d20
  41d5e9:	sub    edi,edx
  41d5eb:	add    esi,edi
  41d5ed:	lea    edx,[esi-0x3272e0]
  41d5f3:	xor    edx,eax
  41d5f5:	mov    DWORD PTR [ebp-0xc],edx
  41d5f8:	mov    edx,DWORD PTR [ebp-0x4]
  41d5fb:	mov    edi,DWORD PTR [ebp-0xc]
  41d5fe:	xor    dl,0x99
  41d601:	sub    dl,0x20
  41d604:	xor    edi,eax
  41d606:	mov    BYTE PTR [edi+ebx*1+0x3272e0],dl
  41d60d:	mov    edx,DWORD PTR [ebp-0x4]
  41d610:	xor    edx,eax
  41d612:	add    edx,ecx
  41d614:	cmp    esi,edx
  41d616:	jne    0x41d5dc
  41d618:	pop    edi
  41d619:	pop    ebx
  41d61a:	pop    esi
  41d61b:	leave  
  41d61c:	ret    0x4
  41d61f:	push   ebp
  41d620:	mov    ebp,esp
  41d622:	sub    esp,0x21c
  41d628:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41d62f:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  41d636:	mov    eax,DWORD PTR [ebp+0x10]
  41d639:	mov    eax,DWORD PTR [ebp-0x4]
  41d63c:	mov    ecx,DWORD PTR [ebp+0x8]
  41d63f:	push   esi
  41d640:	push   edi
  41d641:	mov    edi,0x7510899
  41d646:	xor    eax,edi
  41d648:	mov    esi,0x3272e0
  41d64d:	add    eax,esi
  41d64f:	cmp    eax,ecx
  41d651:	mov    eax,DWORD PTR [ebp-0x4]
  41d654:	jne    0x41d65f
  41d656:	xor    eax,edi
  41d658:	add    eax,esi
  41d65a:	jmp    0x41d70b
  41d65f:	mov    ecx,DWORD PTR [ebp+0xc]
  41d662:	xor    eax,edi
  41d664:	add    eax,esi
  41d666:	cmp    eax,ecx
  41d668:	jne    0x41d66f
  41d66a:	mov    eax,DWORD PTR [ebp-0x4]
  41d66d:	jmp    0x41d656
  41d66f:	lea    eax,[ebp-0x21c]
  41d675:	mov    DWORD PTR [ebp-0x8],eax
  41d678:	mov    eax,DWORD PTR [ebp+0xc]
  41d67b:	mov    DWORD PTR [ebp-0x10],eax
  41d67e:	mov    eax,DWORD PTR [ebp-0x4]
  41d681:	xor    eax,edi
  41d683:	add    eax,esi
  41d685:	mov    DWORD PTR [ebp+0x10],eax
  41d688:	mov    eax,DWORD PTR [ebp+0xc]
  41d68b:	push   ebx
  41d68c:	call   0x41d367
  41d691:	mov    ebx,eax
  41d693:	mov    eax,DWORD PTR [ebp+0x8]
  41d696:	mov    eax,DWORD PTR [eax+0x14]
  41d699:	jmp    0x41d6f3
  41d69b:	mov    eax,DWORD PTR [ebp+0xc]
  41d69e:	sub    eax,0x8
  41d6a1:	mov    DWORD PTR [ebp-0xc],eax
  41d6a4:	mov    eax,DWORD PTR [ebp-0xc]
  41d6a7:	mov    eax,DWORD PTR [eax+0x28]
  41d6aa:	call   0x41d24f
  41d6af:	mov    DWORD PTR [ebp+0x10],eax
  41d6b2:	push   DWORD PTR [ebp+0x10]
  41d6b5:	mov    edx,DWORD PTR [ebp-0x8]
  41d6b8:	call   0x41d3f6
  41d6bd:	mov    eax,DWORD PTR [ebp-0x4]
  41d6c0:	xor    eax,edi
  41d6c2:	add    eax,esi
  41d6c4:	cmp    eax,ebx
  41d6c6:	jne    0x41d6d0
  41d6c8:	mov    eax,DWORD PTR [ebp-0x8]
  41d6cb:	call   0x41d2dd
  41d6d0:	mov    eax,DWORD PTR [ebp-0x14]
  41d6d3:	xor    eax,edi
  41d6d5:	add    eax,esi
  41d6d7:	push   eax
  41d6d8:	push   DWORD PTR [ebp-0x10]
  41d6db:	mov    eax,DWORD PTR [ebp-0x8]
  41d6de:	call   0x41d009
  41d6e3:	mov    ecx,DWORD PTR [ebp-0x4]
  41d6e6:	xor    ecx,edi
  41d6e8:	add    ecx,esi
  41d6ea:	cmp    eax,ecx
  41d6ec:	je     0x41d711
  41d6ee:	mov    eax,DWORD PTR [ebp+0xc]
  41d6f1:	mov    eax,DWORD PTR [eax]
  41d6f3:	mov    DWORD PTR [ebp+0xc],eax
  41d6f6:	mov    eax,DWORD PTR [ebp+0x8]
  41d6f9:	mov    ecx,DWORD PTR [ebp+0xc]
  41d6fc:	add    eax,0x14
  41d6ff:	cmp    ecx,eax
  41d701:	jne    0x41d69b
  41d703:	mov    eax,DWORD PTR [ebp-0x4]
  41d706:	xor    eax,edi
  41d708:	add    eax,esi
  41d70a:	pop    ebx
  41d70b:	pop    edi
  41d70c:	pop    esi
  41d70d:	leave  
  41d70e:	ret    0xc
  41d711:	mov    eax,DWORD PTR [ebp-0xc]
  41d714:	mov    eax,DWORD PTR [eax+0x18]
  41d717:	jmp    0x41d70a
  41d719:	push   ebp
  41d71a:	mov    ebp,esp
  41d71c:	mov    eax,DWORD PTR [ebp+0xc]
  41d71f:	sub    esp,0x10
  41d722:	cmp    DWORD PTR [ebp+0x8],0x0
  41d726:	push   ebx
  41d727:	push   esi
  41d728:	push   edi
  41d729:	je     0x41d7de
  41d72f:	test   eax,eax
  41d731:	je     0x41d7de
  41d737:	movzx  eax,WORD PTR [eax+0x20]
  41d73b:	mov    ecx,eax
  41d73d:	mov    DWORD PTR [ebp-0x10],eax
  41d740:	xor    edx,edx
  41d742:	and    DWORD PTR [ebp-0x8],edx
  41d745:	mov    eax,0x8a8c
  41d74a:	xor    ecx,eax
  41d74c:	add    ecx,0x3b50
  41d752:	mov    DWORD PTR [ebp-0xc],ecx
  41d755:	and    DWORD PTR [ebp-0x4],0x0
  41d759:	xor    ecx,ecx
  41d75b:	push   0x78
  41d75d:	pop    edi
  41d75e:	cmp    cx,WORD PTR [ebp-0xc]
  41d762:	jae    0x41d7c8
  41d764:	lea    esi,[edx-0x3b50]
  41d76a:	xor    esi,eax
  41d76c:	movzx  ecx,WORD PTR [ebp-0x4]
  41d770:	mov    ebx,DWORD PTR [ebp+0xc]
  41d773:	lea    ecx,[ebx+ecx*4]
  41d776:	cmp    WORD PTR [ecx+0x2],si
  41d77a:	jne    0x41d7b3
  41d77c:	movzx  ecx,WORD PTR [ecx]
  41d77f:	mov    edi,0x4e3c
  41d784:	cmp    cx,di
  41d787:	jne    0x41d795
  41d789:	mov    ebx,DWORD PTR [ebp+0x8]
  41d78c:	movzx  edi,dx
  41d78f:	cmp    BYTE PTR [edi+ebx*1],0x0
  41d793:	je     0x41d7c2
  41d795:	mov    ebx,DWORD PTR [ebp+0x8]
  41d798:	movzx  edi,dx
  41d79b:	movsx  di,BYTE PTR [edi+ebx*1]
  41d7a0:	mov    ebx,0x3b50
  41d7a5:	sub    di,bx
  41d7a8:	xor    di,ax
  41d7ab:	cmp    cx,di
  41d7ae:	je     0x41d7c2
  41d7b0:	push   0x7a
  41d7b2:	pop    edi
  41d7b3:	inc    DWORD PTR [ebp-0x4]
  41d7b6:	mov    cx,WORD PTR [ebp-0xc]
  41d7ba:	cmp    WORD PTR [ebp-0x4],cx
  41d7be:	jb     0x41d76c
  41d7c0:	jmp    0x41d7c8
  41d7c2:	inc    DWORD PTR [ebp-0x8]
  41d7c5:	push   0x79
  41d7c7:	pop    edi
  41d7c8:	mov    esi,DWORD PTR [ebp+0x8]
  41d7cb:	movzx  ecx,dx
  41d7ce:	cmp    BYTE PTR [ecx+esi*1],0x0
  41d7d2:	je     0x41d7e7
  41d7d4:	inc    edx
  41d7d5:	cmp    edi,0x7a
  41d7d8:	jne    0x41d755
  41d7de:	xor    eax,eax
  41d7e0:	pop    edi
  41d7e1:	pop    esi
  41d7e2:	pop    ebx
  41d7e3:	leave  
  41d7e4:	ret    0x8
  41d7e7:	mov    ecx,DWORD PTR [ebp-0x8]
  41d7ea:	add    ecx,0xffffc4b0
  41d7f0:	xor    cx,ax
  41d7f3:	xor    eax,eax
  41d7f5:	cmp    cx,WORD PTR [ebp-0x10]
  41d7f9:	sete   al
  41d7fc:	jmp    0x41d7e0
  41d7fe:	push   ebp
  41d7ff:	mov    ebp,esp
  41d801:	sub    esp,0x50
  41d804:	push   edi
  41d805:	mov    edi,eax
  41d807:	mov    eax,DWORD PTR [edi+0x1a8]
  41d80d:	cmp    DWORD PTR [eax],0x0
  41d810:	jne    0x41d819
  41d812:	xor    eax,eax
  41d814:	jmp    0x41d94a
  41d819:	push   DWORD PTR [ebp+0x8]
  41d81c:	push   0x2c
  41d81e:	pop    eax
  41d81f:	call   0x41d5ae
  41d824:	mov    edx,DWORD PTR [edi+0x1ac]
  41d82a:	lea    eax,[edi+0x22]
  41d82d:	mov    DWORD PTR [ebp-0x4c],eax
  41d830:	lea    eax,[edi+0x44]
  41d833:	mov    DWORD PTR [ebp-0x48],eax
  41d836:	lea    eax,[edi+0x66]
  41d839:	mov    DWORD PTR [ebp-0x44],eax
  41d83c:	lea    eax,[edi+0x88]
  41d842:	mov    DWORD PTR [ebp-0x40],eax
  41d845:	lea    eax,[edi+0xaa]
  41d84b:	mov    DWORD PTR [ebp-0x3c],eax
  41d84e:	lea    eax,[edi+0xcc]
  41d854:	mov    DWORD PTR [ebp-0x38],eax
  41d857:	lea    eax,[edi+0xee]
  41d85d:	mov    DWORD PTR [ebp-0x34],eax
  41d860:	lea    eax,[edi+0x110]
  41d866:	mov    DWORD PTR [ebp-0x30],eax
  41d869:	lea    eax,[edi+0x132]
  41d86f:	mov    DWORD PTR [ebp-0x2c],eax
  41d872:	lea    eax,[edi+0x154]
  41d878:	push   edi
  41d879:	mov    DWORD PTR [ebp-0x50],edi
  41d87c:	mov    DWORD PTR [ebp-0x28],eax
  41d87f:	call   0x41d97e
  41d884:	push   eax
  41d885:	mov    eax,DWORD PTR [edi+0x1a8]
  41d88b:	push   DWORD PTR [eax]
  41d88d:	call   0x41d61f
  41d892:	mov    DWORD PTR [ebp-0x10],eax
  41d895:	test   eax,eax
  41d897:	je     0x41d94a
  41d89d:	mov    ecx,DWORD PTR [eax+0x3c]
  41d8a0:	push   ebx
  41d8a1:	push   esi
  41d8a2:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41d8a6:	add    esi,eax
  41d8a8:	mov    edi,DWORD PTR [esi+0x24]
  41d8ab:	mov    ecx,DWORD PTR [esi+0x1c]
  41d8ae:	mov    edx,DWORD PTR [esi+0x20]
  41d8b1:	mov    ebx,DWORD PTR [esi+0x18]
  41d8b4:	add    edi,eax
  41d8b6:	mov    DWORD PTR [ebp-0x20],edi
  41d8b9:	mov    edi,DWORD PTR [esi+0x14]
  41d8bc:	add    ecx,eax
  41d8be:	add    edx,eax
  41d8c0:	mov    DWORD PTR [ebp-0xc],ecx
  41d8c3:	mov    DWORD PTR [ebp-0x1c],edx
  41d8c6:	mov    DWORD PTR [ebp-0x8],edi
  41d8c9:	cmp    edi,ebx
  41d8cb:	ja     0x41d8d0
  41d8cd:	mov    DWORD PTR [ebp-0x8],ebx
  41d8d0:	xor    ebx,ebx
  41d8d2:	mov    DWORD PTR [ebp-0x18],ebx
  41d8d5:	cmp    DWORD PTR [ebp-0x8],ebx
  41d8d8:	jbe    0x41d948
  41d8da:	jmp    0x41d8df
  41d8dc:	mov    edx,DWORD PTR [ebp-0x1c]
  41d8df:	mov    edi,DWORD PTR [ebp-0x20]
  41d8e2:	movzx  edi,WORD PTR [edi+ebx*2]
  41d8e6:	cmp    ebx,DWORD PTR [esi+0x18]
  41d8e9:	jae    0x41d948
  41d8eb:	cmp    edi,DWORD PTR [esi+0x14]
  41d8ee:	jae    0x41d948
  41d8f0:	mov    ebx,DWORD PTR [edx+ebx*4]
  41d8f3:	mov    edx,DWORD PTR [ebp+0x8]
  41d8f6:	mov    edi,DWORD PTR [ecx+edi*4]
  41d8f9:	mov    DWORD PTR [ebp-0x4],edx
  41d8fc:	lea    edx,[ebp-0x50]
  41d8ff:	add    ebx,eax
  41d901:	add    edi,eax
  41d903:	sub    edx,DWORD PTR [ebp+0x8]
  41d906:	mov    DWORD PTR [ebp-0x14],0xb
  41d90d:	mov    DWORD PTR [ebp-0x24],edx
  41d910:	mov    edx,DWORD PTR [ebp-0x4]
  41d913:	cmp    DWORD PTR [edx],0x0
  41d916:	jne    0x41d933
  41d918:	mov    eax,DWORD PTR [ebp-0x24]
  41d91b:	push   DWORD PTR [eax+edx*1]
  41d91e:	push   ebx
  41d91f:	call   0x41d719
  41d924:	mov    ecx,DWORD PTR [ebp-0xc]
  41d927:	test   eax,eax
  41d929:	je     0x41d930
  41d92b:	mov    eax,DWORD PTR [ebp-0x4]
  41d92e:	mov    DWORD PTR [eax],edi
  41d930:	mov    eax,DWORD PTR [ebp-0x10]
  41d933:	add    DWORD PTR [ebp-0x4],0x4
  41d937:	dec    DWORD PTR [ebp-0x14]
  41d93a:	jne    0x41d910
  41d93c:	mov    ebx,DWORD PTR [ebp-0x18]
  41d93f:	inc    ebx
  41d940:	mov    DWORD PTR [ebp-0x18],ebx
  41d943:	cmp    ebx,DWORD PTR [ebp-0x8]
  41d946:	jb     0x41d8dc
  41d948:	pop    esi
  41d949:	pop    ebx
  41d94a:	pop    edi
  41d94b:	leave  
  41d94c:	ret    0x4
  41d94f:	push   ebp
  41d950:	mov    ebp,esp
  41d952:	mov    eax,DWORD PTR [ebp+0x8]
  41d955:	push   esi
  41d956:	push   DWORD PTR [eax+0x1d8]
  41d95c:	lea    esi,[eax+0x198]
  41d962:	mov    eax,DWORD PTR [ebp+0x8]
  41d965:	call   0x41d7fe
  41d96a:	mov    ecx,DWORD PTR [esi]
  41d96c:	mov    DWORD PTR [ecx],eax
  41d96e:	mov    eax,DWORD PTR [esi]
  41d970:	xor    ecx,ecx
  41d972:	cmp    DWORD PTR [eax],ecx
  41d974:	pop    esi
  41d975:	setne  cl
  41d978:	mov    eax,ecx
  41d97a:	pop    ebp
  41d97b:	ret    0x4
  41d97e:	mov    ecx,DWORD PTR [edi+0x188]
  41d984:	push   ebx
  41d985:	jmp    0x41d99a
  41d987:	xor    eax,0x8a8c
  41d98c:	add    eax,0x3b50
  41d991:	mov    WORD PTR [ecx],ax
  41d994:	add    ecx,0x2
  41d997:	add    edx,0x2
  41d99a:	movzx  eax,WORD PTR [edx]
  41d99d:	mov    ebx,0x4e3c
  41d9a2:	cmp    ax,bx
  41d9a5:	jne    0x41d987
  41d9a7:	xor    eax,eax
  41d9a9:	mov    WORD PTR [ecx],ax
  41d9ac:	mov    eax,DWORD PTR [edi+0x188]
  41d9b2:	pop    ebx
  41d9b3:	ret    
  41d9b4:	push   edi
  41d9b5:	mov    edi,eax
  41d9b7:	mov    eax,DWORD PTR [esi+0x188]
  41d9bd:	shl    edi,0x6
  41d9c0:	add    eax,edi
  41d9c2:	jmp    0x41d9ce
  41d9c4:	xor    cl,0x73
  41d9c7:	sub    cl,0x9
  41d9ca:	mov    BYTE PTR [eax],cl
  41d9cc:	inc    eax
  41d9cd:	inc    edx
  41d9ce:	mov    cl,BYTE PTR [edx]
  41d9d0:	cmp    cl,0x7a
  41d9d3:	jne    0x41d9c4
  41d9d5:	mov    BYTE PTR [eax],0x0
  41d9d8:	mov    eax,DWORD PTR [esi+0x188]
  41d9de:	add    eax,edi
  41d9e0:	pop    edi
  41d9e1:	ret    
  41d9e2:	push   ebp
  41d9e3:	mov    ebp,esp
  41d9e5:	sub    esp,0x38
  41d9e8:	push   ebx
  41d9e9:	mov    ebx,0xf89c85b9
  41d9ee:	mov    DWORD PTR [ebp-0x4],ebx
  41d9f1:	lea    eax,[ebx-0x1]
  41d9f4:	push   esi
  41d9f5:	mov    DWORD PTR [ebp-0x24],eax
  41d9f8:	mov    ecx,DWORD PTR [ebp-0x4]
  41d9fb:	mov    edx,DWORD PTR [ebp+0x8]
  41d9fe:	mov    esi,0x7510899
  41da03:	push   edi
  41da04:	xor    ecx,esi
  41da06:	mov    edi,0x3272e0
  41da0b:	add    ecx,edi
  41da0d:	cmp    edx,ecx
  41da0f:	je     0x41db7d
  41da15:	mov    ecx,DWORD PTR [ebp-0x4]
  41da18:	mov    edx,DWORD PTR [ebp+0xc]
  41da1b:	xor    ecx,esi
  41da1d:	add    ecx,edi
  41da1f:	cmp    edx,ecx
  41da21:	je     0x41db7d
  41da27:	mov    ecx,DWORD PTR [ebp+0x10]
  41da2a:	mov    DWORD PTR [ebp-0x18],ecx
  41da2d:	mov    ecx,DWORD PTR [ebp+0xc]
  41da30:	mov    DWORD PTR [ebp-0x14],ecx
  41da33:	mov    ecx,DWORD PTR [ebp+0x8]
  41da36:	mov    DWORD PTR [ebp-0x1c],0xf89c8504
  41da3d:	mov    DWORD PTR [ebp-0x20],eax
  41da40:	mov    DWORD PTR [ebp-0x10],ebx
  41da43:	mov    DWORD PTR [ebp+0xc],eax
  41da46:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41da4d:	mov    eax,DWORD PTR [ebp+0xc]
  41da50:	mov    DWORD PTR [ebp-0xc],ecx
  41da53:	xor    eax,esi
  41da55:	mov    ecx,0xffcd8d20
  41da5a:	sub    ecx,eax
  41da5c:	add    ecx,DWORD PTR [ebp-0x14]
  41da5f:	mov    DWORD PTR [ebp+0x8],ecx
  41da62:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  41da69:	jmp    0x41db6d
  41da6e:	mov    eax,DWORD PTR [ebp+0xc]
  41da71:	mov    ecx,DWORD PTR [ebp+0xc]
  41da74:	xor    eax,esi
  41da76:	xor    ecx,esi
  41da78:	lea    ecx,[eax+ecx*1+0x64e5c0]
  41da7f:	mov    eax,DWORD PTR [ebp+0x8]
  41da82:	xor    edx,edx
  41da84:	div    ecx
  41da86:	mov    eax,DWORD PTR [ebp+0x10]
  41da89:	mov    ecx,DWORD PTR [ebp+0xc]
  41da8c:	xor    eax,esi
  41da8e:	xor    ecx,esi
  41da90:	sub    eax,ecx
  41da92:	cmp    edx,eax
  41da94:	jne    0x41db29
  41da9a:	mov    eax,DWORD PTR [ebp+0x8]
  41da9d:	add    eax,DWORD PTR [ebp-0xc]
  41daa0:	mov    dl,BYTE PTR [eax]
  41daa2:	mov    eax,DWORD PTR [ebp-0x10]
  41daa5:	mov    ecx,DWORD PTR [ebp-0x8]
  41daa8:	xor    eax,esi
  41daaa:	xor    ecx,esi
  41daac:	add    eax,edi
  41daae:	add    ecx,edi
  41dab0:	cmp    eax,ecx
  41dab2:	jae    0x41dafa
  41dab4:	lea    ecx,[eax-0x3272e0]
  41daba:	mov    DWORD PTR [ebp-0x4],ecx
  41dabd:	mov    ebx,DWORD PTR [ebp-0x4]
  41dac0:	xor    ebx,esi
  41dac2:	add    ebx,0x7f55d8fb
  41dac8:	lea    ecx,[ebp+eax*4-0x38]
  41dacc:	mov    DWORD PTR [ecx],ebx
  41dace:	mov    ebx,DWORD PTR [ecx]
  41dad0:	cmp    ebx,0x244ecbda
  41dad6:	jbe    0x41dae0
  41dad8:	add    DWORD PTR [ecx],0x405fc1d
  41dade:	jmp    0x41dae6
  41dae0:	add    DWORD PTR [ecx],0xfdaf43e3
  41dae6:	mov    ecx,DWORD PTR [ebp-0x8]
  41dae9:	xor    ecx,esi
  41daeb:	inc    eax
  41daec:	inc    DWORD PTR [ebp-0x4]
  41daef:	add    ecx,edi
  41daf1:	cmp    eax,ecx
  41daf3:	jb     0x41dabd
  41daf5:	mov    ebx,0xf89c85b9
  41dafa:	mov    eax,DWORD PTR [ebp-0x18]
  41dafd:	test   eax,eax
  41daff:	jne    0x41db09
  41db01:	xor    dl,0x73
  41db04:	sub    dl,0x9
  41db07:	jmp    0x41db1f
  41db09:	mov    eax,DWORD PTR [ebp-0x1c]
  41db0c:	xor    al,0x99
  41db0e:	mov    cl,0x20
  41db10:	sub    cl,al
  41db12:	add    dl,cl
  41db14:	mov    ecx,DWORD PTR [ebp-0x20]
  41db17:	xor    cl,0x99
  41db1a:	sub    cl,0x20
  41db1d:	ror    dl,cl
  41db1f:	xor    eax,eax
  41db21:	mov    eax,DWORD PTR [ebp+0x8]
  41db24:	add    eax,DWORD PTR [ebp-0xc]
  41db27:	mov    BYTE PTR [eax],dl
  41db29:	mov    eax,DWORD PTR [ebp+0x8]
  41db2c:	mov    ecx,DWORD PTR [ebp-0x10]
  41db2f:	sub    eax,edi
  41db31:	xor    eax,esi
  41db33:	cmp    eax,ecx
  41db35:	jne    0x41db5b
  41db37:	mov    eax,DWORD PTR [ebp+0x10]
  41db3a:	mov    ecx,DWORD PTR [ebp+0xc]
  41db3d:	xor    eax,esi
  41db3f:	xor    ecx,esi
  41db41:	sub    eax,ecx
  41db43:	sub    eax,edi
  41db45:	xor    eax,esi
  41db47:	mov    DWORD PTR [ebp+0x10],eax
  41db4a:	mov    eax,DWORD PTR [ebp+0xc]
  41db4d:	xor    eax,esi
  41db4f:	mov    ecx,0xffcd8d20
  41db54:	sub    ecx,eax
  41db56:	add    ecx,DWORD PTR [ebp-0x14]
  41db59:	jmp    0x41db6a
  41db5b:	mov    eax,DWORD PTR [ebp+0xc]
  41db5e:	xor    eax,esi
  41db60:	mov    ecx,0xffcd8d20
  41db65:	sub    ecx,eax
  41db67:	add    ecx,DWORD PTR [ebp+0x8]
  41db6a:	mov    DWORD PTR [ebp+0x8],ecx
  41db6d:	mov    eax,DWORD PTR [ebp+0x10]
  41db70:	cmp    eax,ebx
  41db72:	jne    0x41da6e
  41db78:	mov    eax,DWORD PTR [ebp-0x24]
  41db7b:	jmp    0x41db80
  41db7d:	mov    eax,DWORD PTR [ebp-0x4]
  41db80:	xor    eax,esi
  41db82:	add    eax,edi
  41db84:	pop    edi
  41db85:	pop    esi
  41db86:	pop    ebx
  41db87:	leave  
  41db88:	ret    0xc
  41db8b:	push   ebp
  41db8c:	mov    ebp,esp
  41db8e:	sub    esp,0x14
  41db91:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  41db98:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  41db9f:	mov    eax,DWORD PTR [ebx]
  41dba1:	mov    DWORD PTR [ebp-0x8],eax
  41dba4:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  41dbab:	push   esi
  41dbac:	push   edi
  41dbad:	mov    DWORD PTR [ebp-0x14],0xead718d9
  41dbb4:	mov    edi,DWORD PTR [ebp-0x4]
  41dbb7:	mov    ecx,DWORD PTR [ebp-0x10]
  41dbba:	mov    eax,0x7510899
  41dbbf:	xor    edi,eax
  41dbc1:	mov    edx,0x3272e0
  41dbc6:	xor    ecx,eax
  41dbc8:	add    edi,edx
  41dbca:	add    ecx,edx
  41dbcc:	imul   edi,ecx
  41dbcf:	jmp    0x41dc17
  41dbd1:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbd4:	mov    esi,DWORD PTR [ebp-0x4]
  41dbd7:	xor    ecx,eax
  41dbd9:	xor    esi,eax
  41dbdb:	add    ecx,edx
  41dbdd:	add    esi,edx
  41dbdf:	test   esi,ecx
  41dbe1:	mov    esi,DWORD PTR [ebp-0x8]
  41dbe4:	mov    ecx,DWORD PTR [ebp-0x4]
  41dbe7:	je     0x41dbfe
  41dbe9:	xor    ecx,eax
  41dbeb:	xor    esi,eax
  41dbed:	add    ecx,edx
  41dbef:	add    esi,edx
  41dbf1:	shr    esi,cl
  41dbf3:	mov    ecx,DWORD PTR [ebp-0x14]
  41dbf6:	xor    ecx,eax
  41dbf8:	add    ecx,edx
  41dbfa:	xor    esi,ecx
  41dbfc:	jmp    0x41dc08
  41dbfe:	xor    esi,eax
  41dc00:	xor    ecx,eax
  41dc02:	add    esi,edx
  41dc04:	add    ecx,edx
  41dc06:	shr    esi,cl
  41dc08:	mov    DWORD PTR [ebp-0x8],esi
  41dc0b:	mov    ecx,DWORD PTR [ebp-0x4]
  41dc0e:	xor    ecx,eax
  41dc10:	lea    edi,[edi+ecx*1+0x3272e0]
  41dc17:	mov    ecx,DWORD PTR [ebp-0xc]
  41dc1a:	mov    esi,DWORD PTR [ebp-0x4]
  41dc1d:	xor    esi,eax
  41dc1f:	xor    ecx,eax
  41dc21:	sub    ecx,esi
  41dc23:	cmp    edi,ecx
  41dc25:	jbe    0x41dbd1
  41dc27:	mov    eax,DWORD PTR [ebp-0x8]
  41dc2a:	pop    edi
  41dc2b:	mov    DWORD PTR [ebx],eax
  41dc2d:	mov    eax,DWORD PTR [ebp-0x8]
  41dc30:	pop    esi
  41dc31:	leave  
  41dc32:	ret    
  41dc33:	push   ebp
  41dc34:	mov    ebp,esp
  41dc36:	sub    esp,0x420
  41dc3c:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41dc43:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41dc4a:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  41dc51:	push   ebx
  41dc52:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41dc59:	mov    eax,DWORD PTR [ebp-0x14]
  41dc5c:	push   esi
  41dc5d:	mov    esi,0x7510899
  41dc62:	push   edi
  41dc63:	xor    eax,esi
  41dc65:	mov    edi,0x3272e0
  41dc6a:	add    eax,edi
  41dc6c:	mov    DWORD PTR [ebp-0x8],eax
  41dc6f:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  41dc76:	mov    DWORD PTR [ebp-0x4],0xead718d9
  41dc7d:	mov    DWORD PTR [ebp-0x10],0x8
  41dc84:	mov    ecx,ecx
  41dc86:	mov    eax,DWORD PTR [ebp-0xc]
  41dc89:	mov    ecx,DWORD PTR [ebp-0x14]
  41dc8c:	xor    eax,esi
  41dc8e:	xor    ecx,esi
  41dc90:	add    eax,edi
  41dc92:	add    ecx,edi
  41dc94:	imul   eax,ecx
  41dc97:	jmp    0x41dcca
  41dc99:	mov    eax,DWORD PTR [ebp-0x4]
  41dc9c:	sub    eax,edi
  41dc9e:	xor    eax,esi
  41dca0:	mov    DWORD PTR [ebp-0x8],eax
  41dca3:	lea    ebx,[ebp-0x8]
  41dca6:	call   0x41db8b
  41dcab:	mov    DWORD PTR [ebp-0x8],eax
  41dcae:	mov    eax,DWORD PTR [ebp-0x8]
  41dcb1:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcb4:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41dcbb:	mov    eax,DWORD PTR [ebp-0xc]
  41dcbe:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcc1:	xor    eax,esi
  41dcc3:	lea    eax,[eax+ecx*1+0x3272e0]
  41dcca:	mov    DWORD PTR [ebp-0x4],eax
  41dccd:	mov    eax,DWORD PTR [ebp-0x18]
  41dcd0:	mov    ecx,DWORD PTR [ebp-0xc]
  41dcd3:	xor    ecx,esi
  41dcd5:	xor    eax,esi
  41dcd7:	sub    eax,ecx
  41dcd9:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcdc:	cmp    ecx,eax
  41dcde:	jbe    0x41dc99
  41dce0:	mov    eax,DWORD PTR [ebp-0x1c]
  41dce3:	xor    eax,esi
  41dce5:	add    eax,edi
  41dce7:	mov    DWORD PTR [ebp-0x8],eax
  41dcea:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41dcf1:	mov    ebx,ebx
  41dcf3:	jmp    0x41dd56
  41dcf5:	mov    ecx,DWORD PTR [ebp-0x20]
  41dcf8:	mov    eax,DWORD PTR [ebp-0x8]
  41dcfb:	xor    ecx,esi
  41dcfd:	add    ecx,edi
  41dcff:	shr    eax,cl
  41dd01:	mov    DWORD PTR [ebp-0x4],eax
  41dd04:	mov    eax,DWORD PTR [ebp+0x8]
  41dd07:	mov    cl,BYTE PTR [eax]
  41dd09:	mov    BYTE PTR [ebp+0xb],cl
  41dd0c:	mov    cl,BYTE PTR [ebp+0xb]
  41dd0f:	mov    edx,DWORD PTR [ebp-0x8]
  41dd12:	movzx  ecx,cl
  41dd15:	xor    ecx,edx
  41dd17:	mov    DWORD PTR [ebp+0x8],ecx
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x18]
  41dd1d:	mov    edx,DWORD PTR [ebp+0x8]
  41dd20:	xor    ecx,esi
  41dd22:	add    ecx,edi
  41dd24:	and    ecx,edx
  41dd26:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41dd2d:	mov    edx,DWORD PTR [ebp-0x4]
  41dd30:	xor    ecx,edx
  41dd32:	mov    DWORD PTR [ebp-0x8],ecx
  41dd35:	mov    ecx,DWORD PTR [ebp-0xc]
  41dd38:	xor    ecx,esi
  41dd3a:	lea    eax,[eax+ecx*1+0x3272e0]
  41dd41:	mov    DWORD PTR [ebp+0x8],eax
  41dd44:	mov    eax,DWORD PTR [ebp-0xc]
  41dd47:	xor    eax,esi
  41dd49:	mov    ecx,0xffcd8d20
  41dd4e:	sub    ecx,eax
  41dd50:	add    ecx,DWORD PTR [ebp-0x10]
  41dd53:	mov    DWORD PTR [ebp-0x10],ecx
  41dd56:	mov    eax,DWORD PTR [ebp-0x14]
  41dd59:	mov    ecx,DWORD PTR [ebp-0x10]
  41dd5c:	xor    eax,esi
  41dd5e:	add    eax,edi
  41dd60:	cmp    ecx,eax
  41dd62:	jne    0x41dcf5
  41dd64:	mov    eax,DWORD PTR [ebp-0x1c]
  41dd67:	mov    ecx,DWORD PTR [ebp-0x8]
  41dd6a:	xor    eax,esi
  41dd6c:	add    eax,edi
  41dd6e:	pop    edi
  41dd6f:	pop    esi
  41dd70:	xor    eax,ecx
  41dd72:	pop    ebx
  41dd73:	leave  
  41dd74:	ret    0x4
  41dd77:	push   ebp
  41dd78:	mov    ebp,esp
  41dd7a:	mov    eax,DWORD PTR [ebp+0x1c]
  41dd7d:	mov    ecx,DWORD PTR [ebp+0x8]
  41dd80:	mov    edx,DWORD PTR [ebp+0x10]
  41dd83:	mov    eax,DWORD PTR [eax+0x190]
  41dd89:	mov    eax,DWORD PTR [eax]
  41dd8b:	sub    esp,0x64
  41dd8e:	push   ebx
  41dd8f:	push   esi
  41dd90:	push   edi
  41dd91:	mov    edi,0x7510899
  41dd96:	xor    ecx,edi
  41dd98:	mov    ebx,0x3272e0
  41dd9d:	add    ecx,ebx
  41dd9f:	cmp    ecx,edx
  41dda1:	jne    0x41ddb2
  41dda3:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41ddad:	jmp    0x41e2ae
  41ddb2:	mov    ecx,DWORD PTR [ebp+0x8]
  41ddb5:	mov    esi,DWORD PTR [ebp+0x14]
  41ddb8:	mov    edx,DWORD PTR [esi]
  41ddba:	xor    ecx,edi
  41ddbc:	add    ecx,ebx
  41ddbe:	cmp    edx,ecx
  41ddc0:	je     0x41e269
  41ddc6:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ddc9:	mov    DWORD PTR [ebp-0x1c],eax
  41ddcc:	mov    DWORD PTR [ebp+0x1c],ecx
  41ddcf:	mov    ecx,DWORD PTR [ebp+0x18]
  41ddd2:	mov    eax,DWORD PTR [esi]
  41ddd4:	mov    DWORD PTR [ebp-0x20],eax
  41ddd7:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  41ddde:	mov    edx,0xf89c85b8
  41dde3:	mov    DWORD PTR [ebp-0x8],edx
  41dde6:	mov    eax,DWORD PTR [ebp+0x1c]
  41dde9:	mov    DWORD PTR [ebp+0x1c],eax
  41ddec:	mov    eax,DWORD PTR [ebp+0x1c]
  41ddef:	mov    eax,DWORD PTR [eax+0x190]
  41ddf5:	mov    eax,DWORD PTR [eax]
  41ddf7:	mov    DWORD PTR [ebp-0x24],ecx
  41ddfa:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ddfd:	mov    ecx,DWORD PTR [ecx+0x190]
  41de03:	mov    ecx,DWORD PTR [ecx]
  41de05:	add    ecx,DWORD PTR [eax+0x3c]
  41de08:	mov    DWORD PTR [ebp+0x10],ecx
  41de0b:	mov    eax,DWORD PTR [ebp+0x8]
  41de0e:	xor    eax,edi
  41de10:	add    eax,ebx
  41de12:	mov    DWORD PTR [ebp-0x4],eax
  41de15:	mov    eax,DWORD PTR [ebp+0x8]
  41de18:	xor    eax,edi
  41de1a:	add    eax,ebx
  41de1c:	mov    DWORD PTR [ebp+0x18],eax
  41de1f:	mov    eax,DWORD PTR [ebp+0x10]
  41de22:	mov    eax,DWORD PTR [eax+0x50]
  41de25:	sub    eax,0xc
  41de28:	mov    DWORD PTR [ebp-0x28],eax
  41de2b:	mov    eax,DWORD PTR [ebp+0x10]
  41de2e:	mov    eax,DWORD PTR [eax+0x38]
  41de31:	mov    ecx,DWORD PTR [ebp+0x10]
  41de34:	dec    eax
  41de35:	test   DWORD PTR [ecx+0x54],eax
  41de38:	mov    eax,DWORD PTR [ebp+0x10]
  41de3b:	je     0x41de55
  41de3d:	mov    eax,DWORD PTR [eax+0x38]
  41de40:	mov    ecx,DWORD PTR [ebp+0x10]
  41de43:	mov    ecx,DWORD PTR [ecx+0x54]
  41de46:	dec    eax
  41de47:	not    eax
  41de49:	and    ecx,eax
  41de4b:	mov    eax,DWORD PTR [ebp+0x10]
  41de4e:	mov    eax,DWORD PTR [eax+0x38]
  41de51:	add    eax,ecx
  41de53:	jmp    0x41de58
  41de55:	mov    eax,DWORD PTR [eax+0x54]
  41de58:	mov    DWORD PTR [ebp+0x1c],eax
  41de5b:	mov    eax,DWORD PTR [ebp+0x8]
  41de5e:	xor    eax,edi
  41de60:	add    eax,ebx
  41de62:	mov    DWORD PTR [ebp+0x18],eax
  41de65:	mov    eax,DWORD PTR [ebp+0x8]
  41de68:	xor    eax,edi
  41de6a:	add    eax,ebx
  41de6c:	mov    DWORD PTR [ebp+0x18],eax
  41de6f:	mov    eax,DWORD PTR [ebp+0x8]
  41de72:	mov    ecx,DWORD PTR [ebp-0x24]
  41de75:	xor    eax,edi
  41de77:	add    eax,ebx
  41de79:	mov    DWORD PTR [ecx],eax
  41de7b:	mov    DWORD PTR [ebp+0x18],edx
  41de7e:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  41de85:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  41de8c:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  41de93:	mov    eax,DWORD PTR [ebp-0x8]
  41de96:	mov    ecx,DWORD PTR [ebp+0x1c]
  41de99:	xor    eax,edi
  41de9b:	add    eax,ebx
  41de9d:	imul   eax,ecx
  41dea0:	mov    ecx,DWORD PTR [ebp+0x8]
  41dea3:	mov    edx,DWORD PTR [ebp-0x28]
  41dea6:	xor    ecx,edi
  41dea8:	lea    ecx,[ecx+edx*1+0x3272e0]
  41deaf:	cmp    eax,ecx
  41deb1:	jae    0x41e262
  41deb7:	mov    eax,DWORD PTR [ebp+0x8]
  41deba:	xor    eax,edi
  41debc:	add    eax,ebx
  41debe:	mov    DWORD PTR [ebp+0x18],eax
  41dec1:	mov    eax,DWORD PTR [ebp+0x1c]
  41dec4:	add    eax,DWORD PTR [ebp-0x1c]
  41dec7:	mov    DWORD PTR [ebp-0x4],eax
  41deca:	push   DWORD PTR [ebp-0x4]
  41decd:	mov    esi,DWORD PTR [ebp-0x1c]
  41ded0:	mov    ecx,DWORD PTR [ebp+0x10]
  41ded3:	call   0x41cfcb
  41ded8:	mov    DWORD PTR [ebp+0xc],eax
  41dedb:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  41dee2:	mov    eax,DWORD PTR [ebp-0x18]
  41dee5:	xor    eax,edi
  41dee7:	lea    ecx,[ebp-0x40]
  41deea:	add    eax,ebx
  41deec:	push   ecx
  41deed:	call   0x41d5ae
  41def2:	mov    eax,DWORD PTR [ebp+0xc]
  41def5:	test   eax,eax
  41def7:	je     0x41df47
  41def9:	mov    eax,DWORD PTR [ebp-0x18]
  41defc:	xor    eax,edi
  41defe:	add    eax,ebx
  41df00:	push   eax
  41df01:	push   DWORD PTR [ebp+0xc]
  41df04:	lea    eax,[ebp-0x40]
  41df07:	push   eax
  41df08:	call   0x41d455
  41df0d:	mov    eax,DWORD PTR [ebp-0x4]
  41df10:	mov    DWORD PTR [ebp-0x18],eax
  41df13:	mov    eax,DWORD PTR [ebp-0x18]
  41df16:	mov    ecx,DWORD PTR [ebp-0x1c]
  41df19:	sub    eax,ecx
  41df1b:	mov    DWORD PTR [ebp-0x18],eax
  41df1e:	mov    eax,DWORD PTR [ebp+0xc]
  41df21:	mov    ecx,DWORD PTR [ebp+0xc]
  41df24:	mov    eax,DWORD PTR [eax+0x10]
  41df27:	add    eax,DWORD PTR [ecx+0xc]
  41df2a:	mov    ecx,DWORD PTR [ebp-0x18]
  41df2d:	cmp    ecx,eax
  41df2f:	jb     0x41df47
  41df31:	mov    eax,DWORD PTR [ebp+0xc]
  41df34:	mov    eax,DWORD PTR [eax+0xc]
  41df37:	mov    ecx,DWORD PTR [ebp+0xc]
  41df3a:	add    eax,DWORD PTR [ecx+0x8]
  41df3d:	mov    ecx,DWORD PTR [ebp-0x18]
  41df40:	sub    eax,ecx
  41df42:	jmp    0x41e235
  41df47:	push   0xc
  41df49:	push   DWORD PTR [ebp-0x4]
  41df4c:	lea    eax,[ebp-0x4c]
  41df4f:	push   eax
  41df50:	call   0x41d455
  41df55:	mov    eax,0xf89c85b9
  41df5a:	mov    DWORD PTR [ebp-0x2c],eax
  41df5d:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  41df64:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  41df6b:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  41df72:	lea    ecx,[ebp-0x2c]
  41df75:	mov    DWORD PTR [ebp-0xc],ecx
  41df78:	lea    ecx,[ebp-0x30]
  41df7b:	mov    DWORD PTR [ebp-0x10],ecx
  41df7e:	lea    ecx,[ebp-0x34]
  41df81:	mov    DWORD PTR [ebp+0xc],ecx
  41df84:	lea    ecx,[ebp-0x38]
  41df87:	mov    DWORD PTR [ebp-0x14],ecx
  41df8a:	mov    ecx,DWORD PTR [ebp+0x8]
  41df8d:	xor    ecx,edi
  41df8f:	add    ecx,ebx
  41df91:	mov    DWORD PTR [ebp-0x18],ecx
  41df94:	jmp    0x41e190
  41df99:	cmp    eax,0xf89c85bb
  41df9e:	je     0x41e1a2
  41dfa4:	mov    ecx,DWORD PTR [ebp-0x8]
  41dfa7:	xor    ecx,edi
  41dfa9:	mov    esi,eax
  41dfab:	add    ecx,ebx
  41dfad:	mov    DWORD PTR [ebp+0x18],ecx
  41dfb0:	mov    eax,DWORD PTR [ebp-0x18]
  41dfb3:	xor    esi,edi
  41dfb5:	lea    eax,[eax+esi*1+0x3272e0]
  41dfbc:	mov    DWORD PTR [ebp-0x18],eax
  41dfbf:	mov    eax,DWORD PTR [ebp-0x8]
  41dfc2:	mov    ecx,DWORD PTR [ebp-0x18]
  41dfc5:	xor    eax,edi
  41dfc7:	add    eax,ebx
  41dfc9:	cmp    ecx,eax
  41dfcb:	jne    0x41dfe0
  41dfcd:	mov    eax,DWORD PTR [ebp+0x8]
  41dfd0:	xor    eax,edi
  41dfd2:	add    eax,ebx
  41dfd4:	push   eax
  41dfd5:	push   0xc
  41dfd7:	lea    eax,[ebp-0x4c]
  41dfda:	push   eax
  41dfdb:	call   0x41d9e2
  41dfe0:	mov    eax,DWORD PTR [ebp-0xc]
  41dfe3:	mov    eax,DWORD PTR [eax]
  41dfe5:	xor    eax,edi
  41dfe7:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41dfee:	mov    ecx,DWORD PTR [ebp+0x8]
  41dff1:	xor    ecx,edi
  41dff3:	movzx  eax,al
  41dff6:	add    ecx,ebx
  41dff8:	cmp    eax,ecx
  41dffa:	je     0x41e178
  41e000:	mov    eax,DWORD PTR [ebp-0x10]
  41e003:	mov    eax,DWORD PTR [eax]
  41e005:	xor    eax,edi
  41e007:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e00e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e011:	xor    ecx,edi
  41e013:	movzx  eax,al
  41e016:	add    ecx,ebx
  41e018:	cmp    eax,ecx
  41e01a:	je     0x41e178
  41e020:	mov    eax,DWORD PTR [ebp+0xc]
  41e023:	mov    eax,DWORD PTR [eax]
  41e025:	xor    eax,edi
  41e027:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e02e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e031:	xor    ecx,edi
  41e033:	movzx  eax,al
  41e036:	add    ecx,ebx
  41e038:	cmp    eax,ecx
  41e03a:	je     0x41e178
  41e040:	mov    eax,DWORD PTR [ebp-0x14]
  41e043:	mov    eax,DWORD PTR [eax]
  41e045:	xor    eax,edi
  41e047:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e04e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e051:	xor    ecx,edi
  41e053:	movzx  eax,al
  41e056:	add    ecx,ebx
  41e058:	cmp    eax,ecx
  41e05a:	je     0x41e178
  41e060:	mov    eax,DWORD PTR [ebp-0x10]
  41e063:	mov    eax,DWORD PTR [eax]
  41e065:	xor    eax,edi
  41e067:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e06e:	mov    ecx,DWORD PTR [ebp-0xc]
  41e071:	mov    ecx,DWORD PTR [ecx]
  41e073:	xor    ecx,edi
  41e075:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e07c:	xor    al,cl
  41e07e:	mov    ecx,DWORD PTR [ebp+0xc]
  41e081:	mov    ecx,DWORD PTR [ecx]
  41e083:	xor    ecx,edi
  41e085:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e08c:	or     al,cl
  41e08e:	mov    ecx,DWORD PTR [ebp-0xc]
  41e091:	mov    ecx,DWORD PTR [ecx]
  41e093:	xor    ecx,edi
  41e095:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e09c:	cmp    cl,al
  41e09e:	jne    0x41e178
  41e0a4:	mov    eax,DWORD PTR [ebp+0xc]
  41e0a7:	mov    eax,DWORD PTR [eax]
  41e0a9:	xor    eax,edi
  41e0ab:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e0b2:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0b5:	mov    ecx,DWORD PTR [ecx]
  41e0b7:	xor    ecx,edi
  41e0b9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e0c0:	xor    al,cl
  41e0c2:	mov    ecx,DWORD PTR [ebp-0x14]
  41e0c5:	mov    ecx,DWORD PTR [ecx]
  41e0c7:	xor    ecx,edi
  41e0c9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e0d0:	or     al,cl
  41e0d2:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0d5:	mov    ecx,DWORD PTR [ecx]
  41e0d7:	xor    ecx,edi
  41e0d9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e0e0:	cmp    cl,al
  41e0e2:	jne    0x41e178
  41e0e8:	mov    eax,DWORD PTR [ebp-0x14]
  41e0eb:	mov    eax,DWORD PTR [eax]
  41e0ed:	xor    eax,edi
  41e0ef:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e0f6:	mov    ecx,DWORD PTR [ebp+0xc]
  41e0f9:	mov    ecx,DWORD PTR [ecx]
  41e0fb:	xor    ecx,edi
  41e0fd:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e104:	xor    al,cl
  41e106:	mov    ecx,DWORD PTR [ebp-0xc]
  41e109:	mov    ecx,DWORD PTR [ecx]
  41e10b:	xor    ecx,edi
  41e10d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e114:	or     al,cl
  41e116:	mov    ecx,DWORD PTR [ebp+0xc]
  41e119:	mov    ecx,DWORD PTR [ecx]
  41e11b:	xor    ecx,edi
  41e11d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e124:	cmp    cl,al
  41e126:	jne    0x41e178
  41e128:	mov    eax,DWORD PTR [ebp-0x14]
  41e12b:	mov    eax,DWORD PTR [eax]
  41e12d:	xor    eax,edi
  41e12f:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e136:	mov    ecx,DWORD PTR [ebp-0xc]
  41e139:	mov    ecx,DWORD PTR [ecx]
  41e13b:	xor    ecx,edi
  41e13d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e144:	xor    al,cl
  41e146:	mov    ecx,DWORD PTR [ebp-0x10]
  41e149:	mov    ecx,DWORD PTR [ecx]
  41e14b:	xor    ecx,edi
  41e14d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e154:	or     al,cl
  41e156:	mov    ecx,DWORD PTR [ebp-0x14]
  41e159:	mov    ecx,DWORD PTR [ecx]
  41e15b:	xor    ecx,edi
  41e15d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e164:	cmp    cl,al
  41e166:	jne    0x41e178
  41e168:	lea    eax,[ebp-0x4c]
  41e16b:	push   eax
  41e16c:	call   0x41dc33
  41e171:	mov    ecx,DWORD PTR [ebp-0x44]
  41e174:	cmp    eax,ecx
  41e176:	je     0x41e182
  41e178:	mov    eax,DWORD PTR [ebp+0x8]
  41e17b:	xor    eax,edi
  41e17d:	add    eax,ebx
  41e17f:	mov    DWORD PTR [ebp+0x18],eax
  41e182:	mov    eax,DWORD PTR [ebp-0x8]
  41e185:	xor    eax,edi
  41e187:	lea    eax,[eax+esi*1+0x3272e0]
  41e18e:	xor    eax,edi
  41e190:	mov    ecx,DWORD PTR [ebp+0x8]
  41e193:	mov    edx,DWORD PTR [ebp+0x18]
  41e196:	xor    ecx,edi
  41e198:	add    ecx,ebx
  41e19a:	cmp    edx,ecx
  41e19c:	je     0x41df99
  41e1a2:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a5:	mov    ecx,DWORD PTR [ebp+0x18]
  41e1a8:	xor    eax,edi
  41e1aa:	add    eax,ebx
  41e1ac:	cmp    ecx,eax
  41e1ae:	jne    0x41e1c1
  41e1b0:	mov    eax,DWORD PTR [ebp-0x8]
  41e1b3:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e1b6:	xor    eax,edi
  41e1b8:	lea    eax,[eax+ecx*1+0x3272e0]
  41e1bf:	jmp    0x41e238
  41e1c1:	push   0x18
  41e1c3:	push   DWORD PTR [ebp-0x4]
  41e1c6:	lea    eax,[ebp-0x64]
  41e1c9:	push   eax
  41e1ca:	call   0x41d455
  41e1cf:	mov    eax,DWORD PTR [ebp+0x8]
  41e1d2:	mov    ecx,DWORD PTR [ebp-0x18]
  41e1d5:	xor    eax,edi
  41e1d7:	add    eax,ebx
  41e1d9:	cmp    eax,ecx
  41e1db:	je     0x41e1f0
  41e1dd:	mov    eax,DWORD PTR [ebp+0x8]
  41e1e0:	xor    eax,edi
  41e1e2:	add    eax,ebx
  41e1e4:	push   eax
  41e1e5:	push   0x18
  41e1e7:	lea    eax,[ebp-0x64]
  41e1ea:	push   eax
  41e1eb:	call   0x41d9e2
  41e1f0:	mov    eax,DWORD PTR [ebp-0x4]
  41e1f3:	add    eax,0x18
  41e1f6:	mov    DWORD PTR [ebp+0x18],eax
  41e1f9:	push   DWORD PTR [ebp-0x50]
  41e1fc:	push   DWORD PTR [ebp+0x18]
  41e1ff:	mov    eax,DWORD PTR [ebp-0x54]
  41e202:	add    eax,DWORD PTR [ebp-0x20]
  41e205:	push   eax
  41e206:	call   0x41d455
  41e20b:	mov    eax,DWORD PTR [ebp+0x8]
  41e20e:	mov    ecx,DWORD PTR [ebp-0x18]
  41e211:	xor    eax,edi
  41e213:	add    eax,ebx
  41e215:	cmp    eax,ecx
  41e217:	je     0x41e22a
  41e219:	push   0x0
  41e21b:	push   DWORD PTR [ebp-0x50]
  41e21e:	mov    eax,DWORD PTR [ebp-0x54]
  41e221:	add    eax,DWORD PTR [ebp-0x20]
  41e224:	push   eax
  41e225:	call   0x41d9e2
  41e22a:	mov    eax,DWORD PTR [ebp-0x24]
  41e22d:	mov    ecx,DWORD PTR [ebp-0x50]
  41e230:	add    DWORD PTR [eax],ecx
  41e232:	mov    eax,DWORD PTR [ebp-0x50]
  41e235:	add    eax,DWORD PTR [ebp+0x1c]
  41e238:	mov    DWORD PTR [ebp+0x1c],eax
  41e23b:	mov    eax,DWORD PTR [ebp-0x8]
  41e23e:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e241:	xor    eax,edi
  41e243:	add    eax,ebx
  41e245:	imul   eax,ecx
  41e248:	mov    ecx,DWORD PTR [ebp+0x8]
  41e24b:	mov    edx,DWORD PTR [ebp-0x28]
  41e24e:	xor    ecx,edi
  41e250:	lea    ecx,[ecx+edx*1+0x3272e0]
  41e257:	cmp    eax,ecx
  41e259:	jb     0x41deb7
  41e25f:	mov    esi,DWORD PTR [ebp+0x14]
  41e262:	mov    eax,DWORD PTR [ebp-0x20]
  41e265:	mov    DWORD PTR [esi],eax
  41e267:	jmp    0x41e2ae
  41e269:	mov    ecx,DWORD PTR [ebp+0x8]
  41e26c:	mov    edx,DWORD PTR [ebp+0xc]
  41e26f:	xor    ecx,edi
  41e271:	xor    edx,edi
  41e273:	add    ecx,ebx
  41e275:	add    edx,ebx
  41e277:	cmp    ecx,edx
  41e279:	jne    0x41e28d
  41e27b:	mov    eax,ds:0x7f642d1e
  41e280:	imul   eax,eax,0x9f15fcef
  41e286:	mov    ds:0x7f642d1e,eax
  41e28b:	jmp    0x41e2ae
  41e28d:	mov    ecx,DWORD PTR [ebp+0x8]
  41e290:	xor    ecx,edi
  41e292:	add    ecx,ebx
  41e294:	cmp    eax,ecx
  41e296:	je     0x41e2a4
  41e298:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  41e2a2:	jmp    0x41e2ae
  41e2a4:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  41e2ae:	pop    edi
  41e2af:	pop    esi
  41e2b0:	pop    ebx
  41e2b1:	leave  
  41e2b2:	ret    0x18
  41e2b5:	push   ebp
  41e2b6:	mov    ebp,esp
  41e2b8:	and    esp,0xfffffff8
  41e2bb:	mov    eax,DWORD PTR [ebp+0x20]
  41e2be:	sub    esp,0x14
  41e2c1:	push   ebx
  41e2c2:	mov    ebx,DWORD PTR [ebp+0x14]
  41e2c5:	push   esi
  41e2c6:	push   edi
  41e2c7:	cmp    eax,0xf89c85b9
  41e2cc:	jne    0x41e2d8
  41e2ce:	push   0xf89c85b8
  41e2d3:	jmp    0x41e40a
  41e2d8:	mov    eax,DWORD PTR [ebp+0x20]
  41e2db:	cmp    eax,0xf89c85b8
  41e2e0:	jne    0x41e2ec
  41e2e2:	push   0xf89c85bb
  41e2e7:	jmp    0x41e40a
  41e2ec:	mov    eax,DWORD PTR [ebp+0x20]
  41e2ef:	cmp    eax,0xf89c85bb
  41e2f4:	jne    0x41e300
  41e2f6:	push   0xf89c85ba
  41e2fb:	jmp    0x41e40a
  41e300:	mov    eax,DWORD PTR [ebp+0x20]
  41e303:	cmp    eax,0xf89c85ba
  41e308:	jne    0x41e314
  41e30a:	push   0xf89c85bd
  41e30f:	jmp    0x41e40a
  41e314:	mov    ecx,DWORD PTR [ebp+0x20]
  41e317:	mov    eax,0xf89c85be
  41e31c:	cmp    ecx,eax
  41e31e:	jne    0x41e3da
  41e324:	mov    eax,DWORD PTR [ebp+0x10]
  41e327:	mov    DWORD PTR [esp+0xc],eax
  41e32b:	mov    eax,DWORD PTR [ebp+0x18]
  41e32e:	mov    DWORD PTR [esp+0x14],eax
  41e332:	mov    eax,DWORD PTR [ebp+0xc]
  41e335:	mov    DWORD PTR [esp+0x18],eax
  41e339:	mov    eax,DWORD PTR [ebp+0x8]
  41e33c:	mov    DWORD PTR [esp+0x10],eax
  41e340:	mov    eax,DWORD PTR [esp+0x10]
  41e344:	mov    ecx,DWORD PTR [esp+0x14]
  41e348:	mov    edi,0x7510899
  41e34d:	xor    eax,edi
  41e34f:	mov    esi,0x3272e0
  41e354:	add    eax,esi
  41e356:	mov    DWORD PTR [ecx],eax
  41e358:	mov    eax,DWORD PTR [esp+0xc]
  41e35c:	mov    eax,DWORD PTR [eax+0x194]
  41e362:	mov    ecx,DWORD PTR [eax]
  41e364:	mov    eax,DWORD PTR [esp+0xc]
  41e368:	mov    eax,DWORD PTR [eax+0x194]
  41e36e:	mov    eax,DWORD PTR [eax]
  41e370:	add    eax,DWORD PTR [ecx+0x3c]
  41e373:	mov    ecx,DWORD PTR [esp+0xc]
  41e377:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41e37d:	mov    ecx,DWORD PTR [ecx+0x14]
  41e380:	push   0x4
  41e382:	push   0x3000
  41e387:	push   DWORD PTR [eax+0x50]
  41e38a:	push   0x0
  41e38c:	call   ecx
  41e38e:	mov    DWORD PTR [ebx],eax
  41e390:	mov    eax,DWORD PTR [esp+0x10]
  41e394:	push   DWORD PTR [esp+0xc]
  41e398:	xor    eax,edi
  41e39a:	add    eax,esi
  41e39c:	mov    DWORD PTR [esp+0x20],eax
  41e3a0:	lea    eax,[esp+0x20]
  41e3a4:	push   eax
  41e3a5:	push   ebx
  41e3a6:	push   DWORD PTR [esp+0x20]
  41e3aa:	push   DWORD PTR [esp+0x28]
  41e3ae:	push   DWORD PTR [esp+0x24]
  41e3b2:	call   0x41dd77
  41e3b7:	mov    eax,DWORD PTR [esp+0x10]
  41e3bb:	mov    ecx,DWORD PTR [ebx]
  41e3bd:	xor    eax,edi
  41e3bf:	add    eax,esi
  41e3c1:	cmp    ecx,eax
  41e3c3:	je     0x41e421
  41e3c5:	mov    eax,DWORD PTR [esp+0x18]
  41e3c9:	mov    ecx,DWORD PTR [esp+0x14]
  41e3cd:	xor    eax,edi
  41e3cf:	add    eax,esi
  41e3d1:	imul   eax,DWORD PTR [esp+0x1c]
  41e3d6:	mov    DWORD PTR [ecx],eax
  41e3d8:	jmp    0x41e421
  41e3da:	mov    ecx,DWORD PTR [ebp+0x20]
  41e3dd:	cmp    ecx,0xf89c85bd
  41e3e3:	jne    0x41e3ec
  41e3e5:	push   0xf89c85bc
  41e3ea:	jmp    0x41e40a
  41e3ec:	mov    ecx,DWORD PTR [ebp+0x20]
  41e3ef:	cmp    ecx,0xf89c85bc
  41e3f5:	jne    0x41e3fe
  41e3f7:	push   0xf89c85bf
  41e3fc:	jmp    0x41e40a
  41e3fe:	mov    ecx,DWORD PTR [ebp+0x20]
  41e401:	cmp    ecx,0xf89c85bf
  41e407:	jne    0x41e421
  41e409:	push   eax
  41e40a:	push   DWORD PTR [ebp+0x1c]
  41e40d:	push   DWORD PTR [ebp+0x18]
  41e410:	push   ebx
  41e411:	push   DWORD PTR [ebp+0x10]
  41e414:	push   DWORD PTR [ebp+0xc]
  41e417:	push   DWORD PTR [ebp+0x8]
  41e41a:	call   0x41e2b5
  41e41f:	mov    DWORD PTR [ebx],eax
  41e421:	mov    eax,DWORD PTR [ebx]
  41e423:	pop    edi
  41e424:	pop    esi
  41e425:	pop    ebx
  41e426:	mov    esp,ebp
  41e428:	pop    ebp
  41e429:	ret    0x1c
  41e42c:	push   ebp
  41e42d:	mov    ebp,esp
  41e42f:	sub    esp,0xc
  41e432:	mov    eax,0xf89c85b9
  41e437:	mov    DWORD PTR [ebp-0x8],eax
  41e43a:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41e441:	mov    ecx,DWORD PTR [ebp-0x8]
  41e444:	xor    ecx,0x7510899
  41e44a:	add    ecx,0x3272e0
  41e450:	mov    DWORD PTR [ebp-0x4],ecx
  41e453:	mov    ecx,DWORD PTR [ebp+0xc]
  41e456:	push   eax
  41e457:	mov    DWORD PTR [ebp+0xc],ecx
  41e45a:	push   DWORD PTR [ebp+0xc]
  41e45d:	lea    eax,[ebp-0x4]
  41e460:	push   DWORD PTR [ebp+0x8]
  41e463:	push   eax
  41e464:	push   DWORD PTR [ebp+0xc]
  41e467:	push   DWORD PTR [ebp-0xc]
  41e46a:	push   DWORD PTR [ebp-0x8]
  41e46d:	call   0x41e2b5
  41e472:	mov    DWORD PTR [ebp-0x4],eax
  41e475:	mov    eax,DWORD PTR [ebp-0x4]
  41e478:	leave  
  41e479:	ret    0x8
  41e47c:	jg     0x41e432
  41e47e:	jge    0xf741a453
  41e484:	xor    BYTE PTR [ebp-0x6c5c6e92],0xfd
  41e48b:	sti    
  41e48c:	clc    
  41e48d:	popa   
  41e48e:	add    DWORD PTR [eax],eax
  41e490:	xchg   DWORD PTR [edx],eax
  41e492:	add    BYTE PTR [eax],al
  41e494:	mov    ecx,0x9e2a33fd
  41e499:	add    ch,BYTE PTR [esi-0x2230111e]
  41e49f:	rcl    BYTE PTR [esi],0xe8
  41e4a2:	ror    DWORD PTR [esi+0x5b],1
  41e4a5:	rcr    DWORD PTR [edi+0x28],cl
  41e4a8:	lds    esp,FWORD PTR [esp+edi*8-0x3c]
  41e4ac:	dec    ecx
  41e4ad:	sub    DWORD PTR [edx],esi
  41e4af:	mov    cl,0xae
  41e4b1:	push   ebx
  41e4b2:	loope  0x41e4a2
  41e4b4:	imul   eax,ebx,0x86600082
  41e4ba:	cmp    ch,bl
  41e4bc:	mov    ds:0x59413401,al
  41e4c1:	fwait
  41e4c2:	mov    esp,ebx
  41e4c4:	dec    ebp
  41e4c5:	hlt    
  41e4c6:	xchg   ebx,eax
  41e4c7:	stos   DWORD PTR es:[edi],eax
  41e4c8:	adc    dl,BYTE PTR [eax+0x3685155a]
  41e4ce:	push   es
  41e4cf:	scas   eax,DWORD PTR es:[edi]
  41e4d0:	xchg   BYTE PTR [esi],bl
  41e4d2:	pop    esp
  41e4d3:	out    dx,eax
  41e4d4:	lds    esp,FWORD PTR [ecx+ebp*4-0x6e]
  41e4d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4d9:	jmp    0xd5c2847e
  41e4de:	pop    eax
  41e4df:	push   esi
  41e4e0:	pushf  
  41e4e1:	add    DWORD PTR [ecx],esi
  41e4e3:	cmc    
  41e4e4:	inc    ebp
  41e4e5:	es sub eax,0xf9a3aa29
  41e4eb:	jp     0x41e47c
  41e4ed:	mov    esp,0x14f0f51
  41e4f2:	shl    DWORD PTR [ebx+0x6bcdc41f],0x6
  41e4f9:	xchg   BYTE PTR [esi-0x76],bh
  41e4fc:	or     edx,ebp
  41e4fe:	push   edx
  41e4ff:	das    
  41e500:	sub    DWORD PTR [edx+eax*2-0x4f],edx
  41e504:	jo     0x41e501
  41e506:	arpl   WORD PTR [edi],ax
  41e508:	mov    eax,0x7371ee09
  41e50d:	imul   ebx,DWORD PTR [ebx-0x17],0x91ae861
  41e514:	push   edx
  41e515:	xor    ebx,DWORD PTR [edx+0x4f55b29c]
  41e51b:	jnp    0x41e52b
  41e51d:	aad    0x8a
  41e51f:	jnp    0x41e50b
  41e521:	stos   BYTE PTR es:[edi],al
  41e522:	stc    
  41e523:	xor    edi,eax
  41e525:	out    dx,al
  41e526:	mov    bl,0x7e
  41e528:	cli    
  41e529:	ret    0x54b7
  41e52c:	cmp    dl,ch
  41e52e:	push   es
  41e52f:	sbb    edi,DWORD PTR [edi+edx*2+0x5a]
  41e533:	jle    0x41e526
  41e535:	ins    BYTE PTR es:[edi],dx
  41e536:	dec    esp
  41e537:	add    BYTE PTR [esi+0x31],0xb3
  41e53b:	pop    edx
  41e53c:	sub    eax,0x271214af
  41e541:	xor    BYTE PTR [ecx-0x1545161f],bh
  41e547:	fwait
  41e548:	ins    BYTE PTR es:[edi],dx
  41e549:	push   ds
  41e54a:	jecxz  0x41e532
  41e54c:	mov    ecx,0x6b081d73
  41e551:	shr    bh,cl
  41e553:	into   
  41e554:	call   0x2946b8dc
  41e559:	std    
  41e55a:	inc    ebp
  41e55b:	mov    dl,0x8b
  41e55d:	into   
  41e55e:	xlat   BYTE PTR ds:[ebx]
  41e55f:	cmp    al,0xe0
  41e561:	push   edi
  41e562:	aas    
  41e563:	call   0x9df3:0x1227b27
  41e56a:	xchg   ebp,eax
  41e56b:	jns    0x41e596
  41e56d:	(bad)  
  41e56e:	int3   
  41e56f:	addr16 sbb eax,0x8eb1a29e
  41e575:	pop    ds
  41e576:	push   eax
  41e577:	call   0x6c19:0x4edb6404
  41e57e:	mov    ah,0xa5
  41e580:	bound  edx,QWORD PTR [ecx+0xe35cf2c]
  41e586:	pop    ebx
  41e587:	pusha  
  41e588:	mov    ds:0x4e02be44,eax
  41e58d:	fwait
  41e58e:	gs cld 
  41e590:	into   
  41e591:	xchg   ebx,eax
  41e592:	stos   DWORD PTR es:[edi],eax
  41e593:	fstp   DWORD PTR [ebp+0x63]
  41e596:	lock pop edx
  41e598:	jno    0x41e5ac
  41e59a:	stc    
  41e59b:	mov    ds,ebp
  41e59d:	dec    ecx
  41e59e:	les    edi,FWORD PTR [edi+edi*8-0x14e53a3c]
  41e5a5:	(bad)  
  41e5a6:	mov    ds:0x70ce88f8,al
  41e5ab:	shr    al,1
  41e5ad:	push   edx
  41e5ae:	sub    eax,0x2678b845
  41e5b3:	dec    esp
  41e5b4:	sbb    al,0xd8
  41e5b6:	or     al,0x53
  41e5b8:	test   DWORD PTR [ecx-0x7e2bb80f],eax
  41e5be:	jmp    0x4585:0x56c490d
  41e5c5:	xchg   edx,eax
  41e5c6:	push   es
  41e5c7:	inc    ebp
  41e5c8:	repnz lahf 
  41e5ca:	add    DWORD PTR [esi-0x2c],eax
  41e5cd:	scas   al,BYTE PTR es:[edi]
  41e5ce:	inc    esp
  41e5cf:	lea    esi,[edi-0x5ddfabf1]
  41e5d5:	push   0xd910f264
  41e5da:	pop    ds
  41e5db:	adc    al,0xef
  41e5dd:	test   DWORD PTR [ebx],esi
  41e5df:	jne    0x41e5d0
  41e5e1:	imul   ebx,edx,0xffffffe7
  41e5e4:	xchg   edi,eax
  41e5e5:	bound  edi,QWORD PTR [ebp+0x27b52415]
  41e5eb:	cmc    
  41e5ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5ed:	xchg   BYTE PTR [esi-0x55],bh
  41e5f0:	(bad)  
  41e5f1:	lods   eax,DWORD PTR ds:[esi]
  41e5f2:	add    eax,0x8572993e
  41e5f7:	aad    0xf
  41e5f9:	mov    BYTE PTR [esi-0x42],al
  41e5fc:	stos   DWORD PTR es:[edi],eax
  41e5fd:	sbb    al,0x9e
  41e5ff:	push   ebp
  41e600:	rol    BYTE PTR [esi-0x3684106e],cl
  41e606:	cdq    
  41e607:	cmp    esi,DWORD PTR [ebp-0x67]
  41e60a:	(bad)  
  41e60c:	sbb    DWORD PTR [esi],edx
  41e60e:	sub    DWORD PTR [ebp+eax*8+0x30ad613f],ebp
  41e615:	lods   eax,DWORD PTR ds:[esi]
  41e616:	imul   edi,edx,0xc
  41e619:	call   0x7172:0xf465cfb5
  41e620:	cmc    
  41e621:	(bad)  
  41e622:	jbe    0x41e640
  41e624:	aas    
  41e625:	cmp    eax,0x2c9a657a
  41e62a:	adc    al,0x4b
  41e62c:	adc    al,0x36
  41e62e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e62f:	test   DWORD PTR [ebx+0x75],ebp
  41e632:	fsubrp st(4),st
  41e634:	pop    eax
  41e635:	shr    BYTE PTR [ebx+0xe],0x25
  41e639:	dec    esi
  41e63a:	(bad)  
  41e63b:	mov    DWORD PTR [eax+0x109f7c66],edx
  41e641:	mov    cl,0x5a
  41e643:	inc    edx
  41e644:	outs   dx,BYTE PTR ds:[esi]
  41e645:	push   ecx
  41e646:	sar    ah,cl
  41e648:	daa    
  41e649:	in     eax,0x27
  41e64b:	fcmovne st,st(7)
  41e64d:	or     DWORD PTR [ebp-0x61cea8dd],edi
  41e653:	mov    bh,0xae
  41e655:	mov    eax,ds:0x41530a63
  41e65a:	jmp    0x41e695
  41e65c:	mov    ds:0xd9459f1f,al
  41e661:	or     eax,0x97500a11
  41e666:	cmc    
  41e667:	(bad)  
  41e668:	push   ecx
  41e669:	cwde   
  41e66a:	lds    eax,FWORD PTR [ebx-0x8869b32]
  41e670:	add    eax,0x2ba86ff
  41e675:	jns    0x41e682
  41e677:	cld    
  41e678:	lods   al,BYTE PTR ds:[esi]
  41e679:	sub    edi,DWORD PTR [edx-0x7810147b]
  41e67f:	mov    ds:0xf53a0263,al
  41e684:	int3   
  41e685:	not    BYTE PTR [edi+0x26]
  41e688:	je     0x41e6fd
  41e68a:	shl    DWORD PTR [ebp-0x24],1
  41e68d:	je     0x41e65f
  41e68f:	(bad)  
  41e690:	jecxz  0x41e6a5
  41e692:	ja     0x41e64b
  41e694:	int    0x8e
  41e696:	push   edx
  41e697:	push   edx
  41e698:	dec    edx
  41e699:	cwde   
  41e69a:	rcr    BYTE PTR [ebx],cl
  41e69c:	enter  0x5b88,0x74
  41e6a0:	dec    ecx
  41e6a1:	mov    ah,0x8a
  41e6a3:	mov    ds:0xfa6fa5f6,al
  41e6a8:	or     al,0x18
  41e6aa:	test   DWORD PTR [eax],esp
  41e6ac:	xor    DWORD PTR [eax+0x5f],ebp
  41e6af:	fwait
  41e6b0:	jge    0x41e72c
  41e6b2:	sub    ah,BYTE PTR [esi+0x6c7441e6]
  41e6b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6b9:	pop    edi
  41e6ba:	inc    ecx
  41e6bb:	retf   
  41e6bc:	ret    
  41e6bd:	ins    BYTE PTR es:[edi],dx
  41e6be:	fdivp  st(1),st
  41e6c0:	imul   esi,DWORD PTR [ebp+eiz*1-0x14171758],0x77
  41e6c8:	inc    ecx
  41e6c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6ca:	dec    DWORD PTR [ebx-0x4b]
  41e6cd:	out    dx,eax
  41e6ce:	lods   eax,DWORD PTR ds:[esi]
  41e6cf:	inc    ebp
  41e6d0:	inc    ebp
  41e6d1:	xor    esi,DWORD PTR [ecx+0x2b]
  41e6d4:	retf   
  41e6d5:	xchg   esi,eax
  41e6d6:	bnd jno 0x41e73b
  41e6d9:	jns    0x41e6b3
  41e6db:	mov    ah,0x48
  41e6dd:	lods   al,BYTE PTR ds:[esi]
  41e6de:	test   ecx,edx
  41e6e0:	jb     0x41e717
  41e6e2:	jmp    0x41e749
  41e6e4:	xchg   ah,dh
  41e6e6:	jge    0x41e6fe
  41e6e8:	push   ecx
  41e6e9:	mov    edx,0x562f7843
  41e6ee:	test   eax,0x9d7a39b6
  41e6f3:	mov    ebp,0x1f2cbc1
  41e6f8:	push   ebx
  41e6f9:	xor    eax,0xac5cceb1
  41e6fe:	xchg   ebx,eax
  41e6ff:	int    0xd9
  41e701:	int3   
  41e702:	or     al,0xdd
  41e704:	push   eax
  41e705:	pusha  
  41e706:	fmul   st,st(4)
  41e708:	(bad)  
  41e70a:	mov    cl,0xb9
  41e70c:	fwait
  41e70d:	shr    BYTE PTR [ebx],cl
  41e70f:	push   esp
  41e710:	out    dx,al
  41e711:	out    0x11,eax
  41e713:	test   DWORD PTR [esi-0x431c280a],esp
  41e719:	imul   edi,DWORD PTR [esi+0x0],0xfef64c77
  41e720:	(bad)  
  41e721:	(bad)  
  41e722:	jg     0x41e6f1
  41e724:	mov    ah,0x6b
  41e726:	mov    dh,0x14
  41e728:	push   ss
  41e729:	pop    esp
  41e72a:	aad    0x11
  41e72c:	jg     0x41e792
  41e72e:	add    DWORD PTR [eax],eax
  41e730:	xchg   DWORD PTR [edx],eax
  41e732:	add    BYTE PTR [eax],al
  41e734:	mov    edx,0xf8f77b02
  41e739:	adc    eax,DWORD PTR [eax+0x58969a35]
  41e73f:	cmp    BYTE PTR [edi-0x736ed5ed],dh
  41e745:	out    0xe8,al
  41e747:	imul   esi,DWORD PTR [esi+0x6b],0xb7c97080
  41e74e:	sub    al,0xb3
  41e750:	cmp    bh,dl
  41e752:	test   edx,ebx
  41e754:	jge    0x41e78f
  41e756:	fiadd  DWORD PTR [edi]
  41e758:	(bad)  
  41e759:	ins    DWORD PTR es:[edi],dx
  41e75a:	scas   al,BYTE PTR es:[edi]
  41e75b:	mov    esp,0x4594f0f6
  41e760:	les    ebx,FWORD PTR [esi-0x103bc4fc]
  41e766:	inc    edi
  41e767:	enter  0xab4a,0xd1
  41e76b:	pop    edx
  41e76c:	clc    
  41e76d:	adc    al,0x65
  41e76f:	pop    ds
  41e770:	imul   edi,DWORD PTR [ecx-0x2c1f4b2d],0x78
  41e777:	mov    DWORD PTR [eax-0x2a],edx
  41e77a:	in     al,dx
  41e77b:	sahf   
  41e77c:	aam    0x48
  41e77e:	sub    eax,0x3a0c4435
  41e783:	fistp  DWORD PTR [edx+0x1b6007e8]
  41e789:	xor    eax,DWORD PTR [esi+0x529a567b]
  41e78f:	push   cs
  41e790:	fs scas al,BYTE PTR es:[edi]
  41e792:	lahf   
  41e793:	adc    BYTE PTR [edi],bl
  41e795:	imul   esp,esi,0x256701bc
  41e79b:	shl    bl,cl
  41e79d:	popa   
  41e79e:	sbb    DWORD PTR [esi+0x70624c83],edx
  41e7a4:	xor    ecx,DWORD PTR [edi+ecx*8-0x49]
  41e7a8:	adc    dl,BYTE PTR [edi]
  41e7aa:	inc    esi
  41e7ab:	dec    ebx
  41e7ac:	in     eax,0x9f
  41e7ae:	int3   
  41e7af:	test   DWORD PTR [esi],ebx
  41e7b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7b2:	shl    BYTE PTR [eax-0x72],0x7e
  41e7b6:	shr    edx,cl
  41e7b8:	add    ch,0xa9
  41e7bb:	inc    eax
  41e7bc:	stos   DWORD PTR es:[edi],eax
  41e7bd:	mov    eax,ds:0x1b635600
  41e7c2:	jbe    0x41e83b
  41e7c4:	or     al,0x36
  41e7c6:	adc    eax,DWORD PTR [ecx-0x3f]
  41e7c9:	scas   eax,DWORD PTR es:[edi]
  41e7ca:	jne    0x41e75c
  41e7cc:	clc    
  41e7cd:	jo     0x41e762
  41e7cf:	push   esp
  41e7d0:	xor    edx,DWORD PTR [esi+esi*8]
  41e7d3:	mov    eax,0xf4944977
  41e7d8:	ja     0x41e823
  41e7da:	hlt    
  41e7db:	test   BYTE PTR [esi+ebx*8],al
  41e7de:	daa    
  41e7df:	xchg   esp,eax
  41e7e0:	fmulp  st(5),st
  41e7e2:	inc    esi
  41e7e3:	ret    0x538b
  41e7e6:	test   eax,0x26d37edf
  41e7eb:	loopne 0x41e7c7
  41e7ed:	push   eax
  41e7ee:	call   0x40f5:0x5257c8c3
  41e7f5:	or     eax,DWORD PTR ds:0xb98e1120
  41e7fb:	lods   al,BYTE PTR ds:[esi]
  41e7fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7fd:	sar    esp,0xb7
  41e800:	div    DWORD PTR [edx]
  41e802:	retf   0x961b
  41e805:	mov    DWORD PTR [ebx+ecx*8],edi
  41e808:	enter  0x75d9,0x5a
  41e80c:	je     0x41e79d
  41e80e:	out    dx,eax
  41e80f:	popa   
  41e810:	and    BYTE PTR [ecx],bh
  41e812:	xchg   esi,eax
  41e813:	adc    eax,0x1ad82460
  41e818:	arpl   WORD PTR [edx],di
  41e81a:	aam    0xcf
  41e81c:	outs   dx,DWORD PTR ds:[esi]
  41e81d:	loop   0x41e7e7
  41e81f:	jmp    0xbb18:0x3acb64d
  41e826:	ja     0x41e89c
  41e828:	and    al,0xc1
  41e82a:	nop
  41e82b:	icebp  
  41e82c:	test   al,0x5f
  41e82e:	ins    DWORD PTR es:[edi],dx
  41e82f:	loopne 0x41e8ab
  41e831:	shr    BYTE PTR [ebx+ebx*1],cl
  41e834:	jno    0x41e7d7
  41e836:	stos   BYTE PTR es:[edi],al
  41e837:	ffreep st(3)
  41e839:	div    DWORD PTR [edi-0x564d6ad0]
  41e83f:	push   0x88246fe2
  41e844:	ja     0x41e80b
  41e846:	mov    bl,0xc5
  41e848:	xchg   esp,eax
  41e849:	hlt    
  41e84a:	mov    ebx,0x2d175e12
  41e84f:	inc    ebx
  41e850:	mov    fs,WORD PTR [ebp+0x23]
  41e853:	pop    ds
  41e854:	dec    ebp
  41e855:	cmp    ch,BYTE PTR [esi]
  41e857:	dec    ecx
  41e858:	inc    edx
  41e859:	(bad)  
  41e85b:	cmp    ecx,DWORD PTR [esi+0x4a]
  41e85e:	call   0xca9:0x3b35fff5
  41e865:	mov    ds:0x5dd760bd,eax
  41e86a:	jmp    0x41e7f9
  41e86c:	pop    ds
  41e86d:	push   ss
  41e86e:	repnz mov al,0x4c
  41e871:	out    dx,al
  41e872:	scas   eax,DWORD PTR es:[edi]
  41e873:	pop    ecx
  41e874:	xor    al,0xfb
  41e876:	js     0x41e8b0
  41e878:	lea    ebp,[esi+ecx*8+0xdebd982]
  41e87f:	clc    
  41e880:	lds    esp,FWORD PTR [ecx+edi*1]
  41e883:	add    bh,ah
  41e885:	push   ebp
  41e886:	cdq    
  41e887:	xor    esi,DWORD PTR [eax+0x1c5c31da]
  41e88d:	inc    eax
  41e88e:	xlat   BYTE PTR ds:[ebx]
  41e88f:	cmp    esp,ebp
  41e891:	xor    ch,BYTE PTR [ebp-0x2c847d39]
  41e897:	or     cl,dh
  41e899:	std    
  41e89a:	out    dx,al
  41e89b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e89c:	lahf   
  41e89d:	inc    ebp
  41e89e:	popa   
  41e89f:	mov    edx,0x8dab4743
  41e8a4:	sbb    eax,esi
  41e8a6:	dec    eax
  41e8a7:	lods   eax,DWORD PTR ds:[esi]
  41e8a8:	js     0x41e849
  41e8aa:	cli    
  41e8ab:	jmp    0x41e851
  41e8ad:	fld    st(0)
  41e8af:	adc    BYTE PTR [ebx],cl
  41e8b1:	xchg   BYTE PTR ds:0x74a7d54e,ah
  41e8b7:	and    dl,dl
  41e8b9:	sbb    BYTE PTR [ebp-0x15],bh
  41e8bc:	ror    DWORD PTR [edx],cl
  41e8be:	pushf  
  41e8bf:	or     dh,BYTE PTR [eax+0x5b65398]
  41e8c5:	imul   ebp,DWORD PTR [ebp+0x1a25e518],0xffffffd0
  41e8cc:	xchg   esi,eax
  41e8cd:	mov    al,ds:0x147e5318
  41e8d2:	lock mov bl,0x57
  41e8d5:	outs   dx,BYTE PTR ds:[esi]
  41e8d6:	aam    0x82
  41e8d8:	xchg   dl,cl
  41e8da:	mov    esi,0x5fddc07a
  41e8df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8e0:	sub    ch,BYTE PTR [esp+ebp*4+0x37]
  41e8e4:	(bad)  
  41e8e5:	les    esp,FWORD PTR [eax]
  41e8e7:	(bad)  
  41e8e9:	(bad)  
  41e8ea:	and    edi,DWORD PTR [edx-0x62]
  41e8ed:	cs pop ss
  41e8ef:	push   ecx
  41e8f0:	add    al,0x99
  41e8f2:	pop    eax
  41e8f3:	jb     0x41e8b5
  41e8f5:	push   ds
  41e8f6:	pop    ds
  41e8f7:	sub    eax,0x22fc092a
  41e8fc:	mov    al,BYTE PTR [eax-0x72e8f4cf]
  41e902:	mov    bl,0x79
  41e904:	adc    DWORD PTR [ebx+0x4e],ecx
  41e907:	retf   0xf9c8
  41e90a:	stos   BYTE PTR es:[edi],al
  41e90b:	pop    ss
  41e90c:	test   al,0x71
  41e90e:	cmp    eax,0xe66c6489
  41e913:	aam    0xef
  41e915:	or     DWORD PTR [ecx],ecx
  41e917:	jb     0x41e91e
  41e919:	push   ecx
  41e91a:	add    DWORD PTR [edx+0x5a],ebp
  41e91d:	mov    bl,0xc2
  41e91f:	pop    ecx
  41e920:	imul   eax,ebp,0xffffffe8
  41e923:	inc    ebp
  41e924:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e925:	sbb    dl,dh
  41e927:	jno    0x41e90f
  41e929:	add    al,BYTE PTR [edx]
  41e92b:	ror    DWORD PTR [edx-0x1f0162d4],cl
  41e931:	and    esi,DWORD PTR [esp+edi*4]
  41e934:	and    al,0xb0
  41e936:	fld    TBYTE PTR [ebx]
  41e938:	shr    DWORD PTR [edi-0x24],0x7a
  41e93c:	sar    eax,0x5f
  41e93f:	inc    ebx
  41e940:	das    
  41e941:	push   es
  41e942:	gs (bad) 
  41e944:	aaa    
  41e945:	mov    WORD PTR [edx],cs
  41e947:	adc    ebp,DWORD PTR [ecx+ecx*2]
  41e94a:	sub    eax,0x58565f63
  41e94f:	mov    dh,0x12
  41e951:	enter  0x2d84,0x4b
  41e955:	dec    edx
  41e956:	ror    DWORD PTR [edx],cl
  41e958:	mov    edi,?
  41e95a:	in     eax,dx
  41e95b:	sti    
  41e95c:	or     eax,DWORD PTR [esp+ebp*2+0x21]
  41e960:	or     eax,0xce1fce20
  41e965:	mov    fs,WORD PTR [eax]
  41e967:	and    ebx,DWORD PTR [esi-0x2d]
  41e96a:	bound  edx,QWORD PTR [ecx-0x4f]
  41e96d:	mov    bh,0xc1
  41e96f:	add    BYTE PTR [ebp-0x5a],cl
  41e972:	jo     0x41e94b
  41e974:	jae    0x41e966
  41e976:	loopne 0x41e97e
  41e978:	fimul  DWORD PTR [esi-0x1fda95fd]
  41e97e:	ins    BYTE PTR es:[edi],dx
  41e97f:	cld    
  41e980:	shr    DWORD PTR [ebx],1
  41e982:	stos   BYTE PTR es:[edi],al
  41e983:	jge    0x41e930
  41e985:	push   eax
  41e986:	add    dh,BYTE PTR [eax+esi*4+0x32]
  41e98a:	sahf   
  41e98b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e98c:	lahf   
  41e98d:	adc    al,0x97
  41e98f:	test   al,0x4f
  41e991:	cmp    al,0xdf
  41e993:	or     bl,bh
  41e995:	int3   
  41e996:	add    eax,0x40e1ec50
  41e99b:	les    ebp,FWORD PTR [eax-0x213543e1]
  41e9a1:	jne    0x41e931
  41e9a3:	cmp    esp,DWORD PTR [ecx]
  41e9a5:	mov    DWORD PTR [esi+0x2],ebp
  41e9a8:	call   0x3cd7:0x97f13102
  41e9af:	in     al,dx
  41e9b0:	imul   ebx,DWORD PTR [ebp+ebp*8-0x11e7ab62],0xffffff80
  41e9b8:	iret   
  41e9b9:	and    eax,0x1a070061
  41e9be:	mov    DWORD PTR [edx],ebx
  41e9c0:	popf   
  41e9c1:	fwait
  41e9c2:	xchg   edi,eax
  41e9c3:	pop    ds
  41e9c4:	xchg   BYTE PTR [ebx],bl
  41e9c6:	mov    edx,0xc5b7bad0
  41e9cb:	call   0x287:0x16706
  41e9d2:	add    BYTE PTR [eax],al
  41e9d4:	dec    ebx
  41e9d5:	jne    0x41ea4e
  41e9d7:	pop    edi
  41e9d8:	sub    BYTE PTR [edi+0x430490d7],ch
  41e9de:	push   ss
  41e9df:	push   esi
  41e9e0:	inc    ebp
  41e9e1:	repnz (bad) 
  41e9e3:	xor    ebp,DWORD PTR [edi]
  41e9e5:	inc    eax
  41e9e6:	cmp    BYTE PTR [edi],ah
  41e9e8:	pop    ebp
  41e9e9:	jo     0xf5ee9a54
  41e9ef:	fnstsw WORD PTR [ebx+0x3d]
  41e9f2:	sbb    al,0x9d
  41e9f4:	daa    
  41e9f5:	lods   eax,DWORD PTR ds:[esi]
  41e9f6:	popa   
  41e9f7:	mov    esp,0xdfc21eec
  41e9fc:	push   ds
  41e9fd:	stos   BYTE PTR es:[edi],al
  41e9fe:	pop    edi
  41e9ff:	or     al,0x5c
  41ea01:	jge    0x41e9a2
  41ea03:	mov    ah,0x2b
  41ea05:	push   esp
  41ea06:	into   
  41ea07:	push   0xffffffe5
  41ea09:	xchg   edx,eax
  41ea0a:	mov    WORD PTR [ebx+edx*8],fs
  41ea0d:	stc    
  41ea0e:	adc    ah,bh
  41ea10:	mov    dl,0x42
  41ea12:	ror    cl,cl
  41ea14:	scas   al,BYTE PTR es:[edi]
  41ea15:	add    eax,0x7bb38806
  41ea1a:	dec    esi
  41ea1b:	fmul   DWORD PTR [ecx+0x5c63f3db]
  41ea21:	out    0x8b,al
  41ea23:	mov    ebp,0xe73f68d
  41ea28:	or     eax,0xce14e1d6
  41ea2d:	mov    BYTE PTR [ecx],dl
  41ea2f:	gs das 
  41ea31:	xchg   edi,eax
  41ea32:	outs   dx,DWORD PTR ds:[esi]
  41ea33:	cmp    edi,DWORD PTR [ebx+0x56]
  41ea36:	into   
  41ea37:	mov    bh,0x7d
  41ea39:	(bad)  
  41ea3a:	and    BYTE PTR [edx],ch
  41ea3c:	shr    al,0x58
  41ea3f:	sub    dh,BYTE PTR [eax-0x707c3a5b]
  41ea45:	sbb    al,0xd1
  41ea47:	cmp    DWORD PTR [esi-0x9],esi
  41ea4a:	sbb    al,0xf5
  41ea4c:	test   BYTE PTR [ebx],0xb2
  41ea4f:	stc    
  41ea50:	pop    esp
  41ea51:	jne    0x41ea9e
  41ea53:	ret    
  41ea54:	mov    dh,0x5b
  41ea56:	cld    
  41ea57:	mov    cl,ch
  41ea59:	ja     0x41ea8b
  41ea5b:	xlat   BYTE PTR ds:[ebx]
  41ea5c:	(bad)  
  41ea5d:	sti    
  41ea5e:	sbb    eax,0x9127d165
  41ea63:	xor    al,0xb
  41ea65:	mov    al,0xa1
  41ea67:	fist   DWORD PTR [ebp+esi*8-0x5e]
  41ea6b:	mov    dl,BYTE PTR [eax+edx*1+0x35b2e2f4]
  41ea72:	push   0x47
  41ea74:	in     al,dx
  41ea75:	mov    BYTE PTR [edx+0x13],dh
  41ea78:	push   esi
  41ea79:	mov    edx,0x592e537e
  41ea7e:	aam    0xff
  41ea80:	mov    ecx,0xb1c26bd6
  41ea85:	jge    0x41ea8d
  41ea87:	loop   0x41ea15
  41ea89:	mov    ds:0x340aaa4d,al
  41ea8e:	add    bh,bh
  41ea90:	aad    0x4f
  41ea92:	pop    esp
  41ea93:	or     DWORD PTR [esp+edi*8-0x3494ff1d],0xe4847d36
  41ea9e:	arpl   WORD PTR [eax+0x71],si
  41eaa1:	jae    0x41ea2e
  41eaa3:	rol    BYTE PTR [edx],1
  41eaa5:	push   0xdded64a9
  41eaaa:	(bad)  
  41eaab:	mov    ebx,0x3e3d8056
  41eab0:	(bad)
  41eab3:	and    BYTE PTR [edi-0x1439db6f],dh
  41eab9:	mov    edi,0x5d9aa302
  41eabe:	and    DWORD PTR [ebp-0x2e2dc54a],0xffffffdb
  41eac5:	jmp    0xa620:0xe4208450
  41eacc:	dec    edx
  41eacd:	icebp  
  41eace:	or     eax,0x96f64dd9
  41ead3:	xchg   edi,eax
  41ead4:	sub    al,0x16
  41ead6:	out    dx,al
  41ead7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ead8:	fwait
  41ead9:	add    eax,0x748e2271
  41eade:	in     al,0x9d
  41eae0:	push   ss
  41eae1:	dec    edx
  41eae2:	xchg   ebp,eax
  41eae3:	adc    eax,0x33caa6f1
  41eae8:	test   BYTE PTR [ebx],ah
  41eaea:	jmp    0x41eb30
  41eaec:	(bad)  
  41eaed:	adc    bh,BYTE PTR [edi+0x3eddc7f4]
  41eaf3:	call   0xc83a:0x24d18080
  41eafa:	test   BYTE PTR [eax-0x23cb9305],0xac
  41eb01:	fist   WORD PTR [ebx+eax*2+0x0]
  41eb05:	or     bl,0xd1
  41eb08:	inc    edx
  41eb09:	or     BYTE PTR ds:0x5e54f22a,bh
  41eb0f:	paddusb mm0,mm4
  41eb12:	adc    al,0x74
  41eb14:	inc    DWORD PTR [edx]
  41eb16:	add    DWORD PTR [ecx-0x7c],0x234a4bcf
  41eb1d:	lea    esp,[edx+0x67]
  41eb20:	pop    eax
  41eb21:	cdq    
  41eb22:	fwait
  41eb23:	(bad)  
  41eb24:	sbb    eax,0x7a06fc5
  41eb29:	jle    0x41eb67
  41eb2b:	push   0x1
  41eb2d:	adc    dh,BYTE PTR [edx+0x6a84ebb6]
  41eb33:	das    
  41eb34:	pushf  
  41eb35:	aad    0xe2
  41eb37:	xchg   edi,eax
  41eb38:	call   DWORD PTR [ebx]
  41eb3a:	int3   
  41eb3b:	ins    DWORD PTR es:[edi],dx
  41eb3c:	scas   eax,DWORD PTR es:[edi]
  41eb3d:	out    dx,eax
  41eb3e:	xchg   DWORD PTR [ebx+0x5b],edi
  41eb41:	(bad)  
  41eb42:	loopne 0x41eb7e
  41eb44:	addr16 mov dl,0xca
  41eb47:	add    DWORD PTR [eax+0x59b00fb3],edi
  41eb4d:	outs   dx,BYTE PTR ds:[esi]
  41eb4e:	ins    DWORD PTR es:[edi],dx
  41eb4f:	ds movs DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41eb52:	retf   
  41eb53:	jns    0x41eb27
  41eb55:	hlt    
  41eb56:	xor    DWORD PTR [esp+edi*2+0x2bd8eda4],eax
  41eb5d:	(bad)  
  41eb5e:	jg     0x41eafb
  41eb60:	jo     0x41ebd4
  41eb62:	shl    ecx,1
  41eb64:	and    ebx,DWORD PTR [esp+edx*2+0x9]
  41eb68:	pop    edi
  41eb69:	(bad)  
  41eb6a:	clc    
  41eb6b:	xchg   edi,eax
  41eb6c:	not    BYTE PTR [ebx+0x56]
  41eb6f:	inc    eax
  41eb70:	sub    cl,BYTE PTR [ebx-0x4ae7034e]
  41eb76:	mov    edi,0x98f2c779
  41eb7b:	fcom   DWORD PTR [eax-0x4cdc18a5]
  41eb81:	stos   BYTE PTR es:[edi],al
  41eb82:	mov    ?,WORD PTR [ebx+0x55e2cb73]
  41eb88:	mov    bh,0x83
  41eb8a:	stc    
  41eb8b:	jl     0x41ec05
  41eb8d:	imul   ebx,DWORD PTR [edi+0xf064bfa],0x68c60947
  41eb97:	sbb    edx,esi
  41eb99:	mov    bl,0x95
  41eb9b:	adc    cl,BYTE PTR [edx]
  41eb9d:	ret    0x364c
  41eba0:	addr16 or al,0xd3
  41eba3:	inc    ebp
  41eba4:	outs   dx,DWORD PTR ds:[esi]
  41eba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eba6:	xchg   ebp,eax
  41eba7:	je     0x41ebae
  41eba9:	sbb    BYTE PTR [edx+0x2a],dh
  41ebac:	add    bh,BYTE PTR [ebx+0xd]
  41ebaf:	je     0x41ec02
  41ebb1:	dec    edx
  41ebb2:	js     0x41eb44
  41ebb4:	cld    
  41ebb5:	out    0x33,eax
  41ebb7:	push   ebp
  41ebb8:	push   esi
  41ebb9:	xchg   ebp,eax
  41ebba:	mov    esp,0xddc07d64
  41ebbf:	test   BYTE PTR [edx+0x3751c816],dl
  41ebc5:	cmp    dh,bh
  41ebc7:	adc    ecx,DWORD PTR [ebp-0x4a]
  41ebca:	dec    esp
  41ebcb:	mov    ecx,0x8f99c2fb
  41ebd0:	stc    
  41ebd1:	retf   0x9ff2
  41ebd4:	adc    ebx,DWORD PTR [edi+0x8]
  41ebd7:	add    DWORD PTR [ecx],edi
  41ebd9:	pusha  
  41ebda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebdb:	or     al,0x20
  41ebdd:	push   0x1f7ffdc1
  41ebe2:	cdq    
  41ebe3:	and    ecx,DWORD PTR [eax+0x204f4dd9]
  41ebe9:	mov    ds:0xef7a9b42,eax
  41ebee:	push   ss
  41ebef:	clc    
  41ebf0:	xchg   ebp,eax
  41ebf1:	fs inc eax
  41ebf3:	sub    ebp,ebx
  41ebf5:	ror    DWORD PTR [ebp+0x53],1
  41ebf8:	mov    esp,0x1c5f2a85
  41ebfd:	jl     0x41eb8b
  41ebff:	cmp    DWORD PTR [ecx-0x1752b7],0x7a92ea43
  41ec09:	xchg   ecx,eax
  41ec0a:	cmp    eax,DWORD PTR [eax]
  41ec0c:	popa   
  41ec0d:	bound  esi,QWORD PTR [edi+0x67]
  41ec10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec11:	mov    al,ds:0x63a3f52f
  41ec16:	ret    0x2a34
  41ec19:	adc    esp,edx
  41ec1b:	imul   edi,DWORD PTR [ebx-0x4b24c72e],0xffffff9c
  41ec22:	pop    esi
  41ec23:	sub    al,0x95
  41ec25:	add    eax,DWORD PTR [esi-0x77]
  41ec28:	loopne 0x41ec2c
  41ec2a:	sub    eax,DWORD PTR [edi+0x3367c5dd]
  41ec30:	aas    
  41ec31:	out    dx,al
  41ec32:	and    DWORD PTR [eax+0x54],ebp
  41ec35:	sub    al,0xd8
  41ec37:	mov    ch,0x11
  41ec39:	cmp    al,0x63
  41ec3b:	inc    eax
  41ec3c:	lahf   
  41ec3d:	repz fild QWORD PTR [edx-0x1c7adaf9]
  41ec44:	or     al,0x1e
  41ec46:	pop    esi
  41ec47:	xchg   DWORD PTR [edx],esi
  41ec49:	pop    edi
  41ec4a:	inc    ebp
  41ec4b:	cmp    dh,dl
  41ec4d:	fistp  WORD PTR [esi]
  41ec4f:	rcr    BYTE PTR [ebx+0x5637d018],cl
  41ec55:	clc    
  41ec56:	les    eax,FWORD PTR ds:[ebp+0x5e]
  41ec5a:	sub    eax,0xa7041e00
  41ec5f:	(bad)  
  41ec60:	mov    edi,0xf6dd7ee7
  41ec65:	jp     0x41ec30
  41ec67:	push   esi
  41ec68:	hlt    
  41ec69:	cdq    
  41ec6a:	xchg   DWORD PTR [ecx-0x73],eax
  41ec6d:	imul   eax,DWORD PTR [ecx],0x28700
  41ec73:	add    BYTE PTR [ebp-0xa],dl
  41ec76:	shr    DWORD PTR [ebx],1
  41ec78:	iret   
  41ec79:	test   BYTE PTR [ecx+0x441a4d08],bl
  41ec7f:	or     al,0xf4
  41ec81:	dec    edx
  41ec82:	jnp    0x41ec99
  41ec84:	ins    DWORD PTR es:[edi],dx
  41ec85:	scas   eax,DWORD PTR es:[edi]
  41ec86:	dec    eax
  41ec87:	sbb    eax,0x3ec1be2d
  41ec8c:	add    DWORD PTR [edx+0x56],ebp
  41ec8f:	pop    esp
  41ec90:	fmul   QWORD PTR [ebx-0x40e59ef]
  41ec96:	test   eax,0x8aed7f78
  41ec9b:	std    
  41ec9c:	out    dx,al
  41ec9d:	jl     0x41ecf4
  41ec9f:	sbb    DWORD PTR [esi],esi
  41eca1:	(bad)  
  41eca2:	adc    edx,DWORD PTR [esi]
  41eca4:	jb     0x41ecf7
  41eca6:	and    eax,0xc7e1efd8
  41ecab:	sbb    DWORD PTR [ecx],ecx
  41ecad:	test   eax,0x219411bc
  41ecb2:	es test al,0x63
  41ecb5:	test   DWORD PTR [eax],edx
  41ecb7:	mov    cl,0x46
  41ecb9:	pushf  
  41ecba:	jb     0x41ec66
  41ecbc:	or     DWORD PTR [esi-0x290527f],0x34
  41ecc3:	push   ebx
  41ecc4:	adc    BYTE PTR [edx],bh
  41ecc6:	fisubr DWORD PTR [ebx+ebp*1]
  41ecc9:	fst    QWORD PTR [esi-0x28632c0a]
  41eccf:	repz adc ah,al
  41ecd2:	shl    DWORD PTR [ebp-0x15],1
  41ecd5:	out    dx,al
  41ecd6:	cmp    BYTE PTR [ebx+ecx*1],0x7e
  41ecda:	sbb    BYTE PTR [ebp+0x3f095fcf],ch
  41ece0:	out    0xd6,al
  41ece2:	jns    0x41eced
  41ece4:	loope  0x41ed04
  41ece6:	cld    
  41ece7:	xchg   DWORD PTR [esi+0x210f6ce],edi
  41eced:	inc    esp
  41ecee:	sub    esi,DWORD PTR [ebp+0x6654859e]
  41ecf4:	neg    edi
  41ecf6:	xor    DWORD PTR [ecx-0xc],ecx
  41ecf9:	pushf  
  41ecfa:	mov    ch,0x33
  41ecfc:	int    0x9a
  41ecfe:	jecxz  0x41ed06
  41ed00:	sbb    eax,0x1f084710
  41ed05:	int    0x9e
  41ed07:	in     eax,0x5f
  41ed09:	enter  0x945d,0x1d
  41ed0d:	aad    0x1b
  41ed0f:	pop    esi
  41ed10:	xor    eax,0xabf15dd0
  41ed15:	mov    DWORD PTR [eax+0x62],ebp
  41ed18:	xor    al,BYTE PTR [edx-0x663ed05]
  41ed1e:	mov    ebp,0xca67d6b3
  41ed23:	sub    eax,0x1c2f28aa
  41ed28:	hlt    
  41ed29:	ret    
  41ed2a:	popa   
  41ed2b:	lods   al,BYTE PTR ds:[esi]
  41ed2c:	scas   eax,DWORD PTR es:[edi]
  41ed2d:	and    eax,0xca1cadf6
  41ed32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed33:	dec    ecx
  41ed34:	icebp  
  41ed35:	inc    ecx
  41ed36:	jg     0x41ed15
  41ed38:	jge    0x41ed56
  41ed3a:	add    dl,cl
  41ed3c:	cli    
  41ed3d:	shr    esi,1
  41ed3f:	popa   
  41ed40:	int    0x4d
  41ed42:	xchg   esi,eax
  41ed43:	inc    ebp
  41ed44:	imul   ecx,eax,0xc8a2a540
  41ed4a:	loope  0x41edba
  41ed4c:	cmp    al,BYTE PTR [ebp+0x5de2829b]
  41ed52:	jns    0x41ed40
  41ed54:	dec    edx
  41ed55:	mov    esi,0x911ca8bc
  41ed5a:	fiadd  WORD PTR [ecx-0x61]
  41ed5d:	out    dx,eax
  41ed5e:	push   eax
  41ed5f:	add    eax,0xcb5562f6
  41ed64:	cmp    al,0x8e
  41ed66:	pusha  
  41ed67:	in     al,dx
  41ed68:	mov    ebx,0xd2630bdb
  41ed6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed6e:	adc    BYTE PTR [edi],dl
  41ed70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed71:	jbe    0x41edf1
  41ed73:	mov    al,0xa7
  41ed75:	sar    BYTE PTR [eax],0x20
  41ed78:	ja     0x41edc3
  41ed7a:	or     ebx,ebp
  41ed7c:	imul   eax,edx,0x72
  41ed7f:	add    ebp,edi
  41ed81:	mov    al,0x5
  41ed83:	ss inc edi
  41ed85:	scas   al,BYTE PTR es:[edi]
  41ed86:	ds outs dx,BYTE PTR gs:[esi]
  41ed89:	pop    ebx
  41ed8a:	push   ebp
  41ed8b:	push   ss
  41ed8c:	inc    edx
  41ed8d:	lods   eax,DWORD PTR ds:[esi]
  41ed8e:	xlat   BYTE PTR ds:[ebx]
  41ed8f:	addr16 jns 0x41ed86
  41ed92:	mov    bh,0xc7
  41ed94:	jmp    0x4d7d:0x65ece82b
  41ed9b:	xchg   esi,eax
  41ed9c:	mov    cl,0x11
  41ed9e:	popf   
  41ed9f:	js     0x41edb6
  41eda1:	js     0x41ed35
  41eda3:	push   edi
  41eda4:	xor    eax,0x8712ccc6
  41eda9:	das    
  41edaa:	aaa    
  41edab:	jle    0x41edda
  41edad:	cmp    bl,BYTE PTR [eax-0x8]
  41edb0:	div    cl
  41edb2:	and    ch,BYTE PTR [ecx]
  41edb4:	push   ds
  41edb5:	not    DWORD PTR [ecx]
  41edb7:	pop    fs
  41edb9:	cmp    DWORD PTR ss:[edi-0x74],ecx
  41edbd:	mov    al,ds:0x90fc0864
  41edc2:	out    dx,al
  41edc3:	xor    dl,BYTE PTR ds:0xfb723c7b
  41edc9:	(bad)  
  41edca:	jmp    0xfc8e552c
  41edcf:	lds    esp,FWORD PTR [eax+esi*2]
  41edd2:	inc    ebx
  41edd3:	stc    
  41edd4:	add    eax,0xac54c13e
  41edd9:	or     bl,BYTE PTR [ebp+0x2e]
  41eddc:	pop    ebp
  41eddd:	dec    edi
  41edde:	dec    edi
  41eddf:	inc    edx
  41ede0:	test   BYTE PTR [ecx-0x4c],cl
  41ede3:	clc    
  41ede4:	adc    bl,al
  41ede6:	outs   dx,DWORD PTR ds:[esi]
  41ede7:	mov    eax,0x6266ddba
  41edec:	add    ecx,DWORD PTR [esi+0x5d3756b7]
  41edf2:	xor    esp,DWORD PTR [esi]
  41edf4:	in     eax,dx
  41edf5:	aad    0x5e
  41edf7:	jne    0x41eda3
  41edf9:	add    BYTE PTR [esi+0x61],ch
  41edfc:	lds    ecx,FWORD PTR [ecx]
  41edfe:	xor    al,0xc7
  41ee00:	push   eax
  41ee01:	xor    al,0xf1
  41ee03:	je     0x41ee4a
  41ee05:	or     ah,BYTE PTR [edi-0x2e08b851]
  41ee0b:	fiadd  WORD PTR [eax+0x1d5b5680]
  41ee11:	pop    es
  41ee12:	lds    ebx,FWORD PTR [eax+0x3532a152]
  41ee18:	sar    esp,cl
  41ee1a:	shr    ebx,cl
  41ee1c:	loop   0x41edb3
  41ee1e:	arpl   dx,cx
  41ee20:	xchg   BYTE PTR [ebp-0xe3692eb],bl
  41ee26:	enter  0x5f59,0x44
  41ee2a:	pop    ebp
  41ee2b:	cwde   
  41ee2c:	dec    ebp
  41ee2d:	or     al,0xaf
  41ee2f:	dec    edi
  41ee30:	mov    edi,0x8e0ce004
  41ee35:	jp     0x41ee31
  41ee37:	inc    edi
  41ee38:	adc    al,0xa8
  41ee3a:	xchg   ebx,eax
  41ee3b:	cmp    eax,0x68342f24
  41ee40:	pop    esi
  41ee41:	icebp  
  41ee42:	int3   
  41ee43:	mov    ebp,es
  41ee45:	or     eax,0x2e6dbc3
  41ee4a:	out    dx,al
  41ee4b:	fisub  DWORD PTR [edi-0x1ec3854]
  41ee51:	shr    bl,cl
  41ee53:	sahf   
  41ee54:	daa    
  41ee55:	push   ds
  41ee56:	sub    BYTE PTR [ecx+0x5430ea88],bl
  41ee5c:	dec    edi
  41ee5d:	(bad)  
  41ee5e:	and    eax,0x67d00cc6
  41ee63:	mov    eax,0x62d32c23
  41ee68:	pop    edi
  41ee69:	cmp    DWORD PTR [esi-0x7d],esi
  41ee6c:	pushf  
  41ee6d:	xchg   DWORD PTR [esi+edx*4-0x14],ebx
  41ee71:	cmp    eax,0x7017a18e
  41ee76:	aam    0x9f
  41ee78:	(bad)  
  41ee79:	fsub   st(2),st
  41ee7b:	test   BYTE PTR [edx+0x4b],cl
  41ee7e:	cli    
  41ee7f:	daa    
  41ee80:	sbb    bl,cl
  41ee82:	cld    
  41ee83:	(bad)  
  41ee84:	loop   0x41eec6
  41ee86:	add    BYTE PTR [ebp+eax*1+0x1ecc33bc],bl
  41ee8d:	dec    esi
  41ee8e:	(bad)  
  41ee8f:	push   0x1ba294b1
  41ee94:	xor    al,0xc4
  41ee96:	add    al,0x9d
  41ee98:	sub    al,0x3f
  41ee9a:	fs pop ss
  41ee9c:	test   ebx,esi
  41ee9e:	call   0x7633:0xfa69cc49
  41eea5:	das    
  41eea6:	mov    ah,0x17
  41eea8:	pop    ebx
  41eea9:	repnz xchg ecx,eax
  41eeab:	push   edi
  41eeac:	js     0x41ee2e
  41eeae:	mov    ecx,0x19004238
  41eeb3:	popa   
  41eeb4:	jae    0x41ee6c
  41eeb6:	ds scas al,BYTE PTR es:[edi]
  41eeb8:	sub    DWORD PTR [esi+0x74],ebx
  41eebb:	sub    edx,ebx
  41eebd:	jo     0x41eeea
  41eebf:	adc    eax,0x9a19b66d
  41eec4:	arpl   WORD PTR [esi-0x71f91873],si
  41eeca:	mov    ch,0xcc
  41eecc:	jmp    0x41eefb
  41eece:	ror    BYTE PTR [ebx+0x58ebda2f],1
  41eed4:	hlt    
  41eed5:	push   0x74625b15
  41eeda:	mov    ebp,0xef04d505
  41eedf:	ds dec esi
  41eee1:	mov    fs,WORD PTR [ebx+0x6ee960f5]
  41eee7:	xor    ebx,ebp
  41eee9:	fwait
  41eeea:	scas   al,BYTE PTR es:[edi]
  41eeeb:	jmp    0xbfa3db1
  41eef0:	pop    ss
  41eef1:	lea    ebx,[ebx]
  41eef3:	sbb    al,0x6c
  41eef5:	jo     0x41ef5b
  41eef7:	push   edi
  41eef8:	mov    WORD PTR [edx-0x34],ds
  41eefb:	add    BYTE PTR [eax-0x77],bh
  41eefe:	hlt    
  41eeff:	mov    al,0xf5
  41ef01:	std    
  41ef02:	jl     0x41eecd
  41ef04:	dec    edi
  41ef05:	pop    ds
  41ef06:	cmp    DWORD PTR [ebx+0x5f],ebp
  41ef09:	pop    esi
  41ef0a:	pop    edi
  41ef0b:	sbb    edx,DWORD PTR [esp+ebp*2]
  41ef0e:	add    DWORD PTR [eax],eax
  41ef10:	xchg   DWORD PTR [edx],eax
  41ef12:	add    BYTE PTR [eax],al
  41ef14:	sbb    DWORD PTR [ecx-0x3a],0x964d95d9
  41ef1b:	mov    eax,ds:0xcd4c9623
  41ef20:	mov    al,0xcb
  41ef22:	mov    ds:0x49d8ef5e,al
  41ef27:	pop    esp
  41ef28:	pushf  
  41ef29:	push   edi
  41ef2a:	sar    BYTE PTR [ebp+edi*1-0x7d],cl
  41ef2e:	into   
  41ef2f:	push   es
  41ef30:	dec    esi
  41ef31:	shl    edx,1
  41ef33:	rcl    DWORD PTR [eax-0x5fc83bf7],1
  41ef39:	popa   
  41ef3a:	push   ss
  41ef3b:	mov    ds:0x7be6e426,eax
  41ef40:	fs push ds
  41ef42:	sub    edx,ebp
  41ef44:	jno    0x41ef2f
  41ef46:	xchg   BYTE PTR [edi+0x36fc3e87],dh
  41ef4c:	jno    0x41ef5c
  41ef4e:	stos   BYTE PTR es:[edi],al
  41ef4f:	popf   
  41ef50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef51:	iret   
  41ef52:	lds    esp,FWORD PTR [esi+eiz*4+0x1e]
  41ef56:	jp     0x41ef5b
  41ef58:	fimul  DWORD PTR [ebp-0x35]
  41ef5b:	mov    DWORD PTR [edi],edi
  41ef5d:	es mov ss,ecx
  41ef60:	or     bl,ah
  41ef62:	fdiv   DWORD PTR [ebx-0x27]
  41ef65:	cmp    eax,edx
  41ef67:	add    DWORD PTR [esi-0x41bb4ee1],edi
  41ef6d:	mov    eax,ds:0x1fa0b96c
  41ef72:	mov    esp,0x462b4ec8
  41ef77:	or     bh,BYTE PTR [ebx]
  41ef79:	pop    ecx
  41ef7a:	test   BYTE PTR [ebx+0x59],ch
  41ef7d:	aam    0x6d
  41ef7f:	push   eax
  41ef80:	in     al,0xd7
  41ef82:	xchg   ebx,eax
  41ef83:	int3   
  41ef84:	xrelease mov DWORD PTR [esi+ecx*2+0x39],esi
  41ef89:	and    DWORD PTR [edx],edx
  41ef8b:	inc    esp
  41ef8c:	xor    al,BYTE PTR [eax+0x69]
  41ef8f:	dec    ecx
  41ef90:	mov    ebx,0xbb3605cf
  41ef95:	and    esp,DWORD PTR [ebx+0x42308968]
  41ef9b:	lea    esi,[esp+ebx*1]
  41ef9e:	daa    
  41ef9f:	jl     0x41ef4c
  41efa1:	or     DWORD PTR [esi],eax
  41efa3:	inc    edx
  41efa4:	xchg   ecx,eax
  41efa5:	aaa    
  41efa6:	ins    BYTE PTR es:[edi],dx
  41efa7:	stc    
  41efa8:	sub    edi,DWORD PTR [edx+0x23]
  41efab:	jp     0x41efcb
  41efad:	jmp    0xd4a1:0xca4e7e85
  41efb4:	and    BYTE PTR [edi+0x38e61f7a],dh
  41efba:	mov    ds:0x499da589,eax
  41efbf:	(bad)  
  41efc1:	cdq    
  41efc2:	iret   
  41efc3:	jbe    0x41ef84
  41efc5:	jbe    0x41ef87
  41efc7:	fdivr  QWORD PTR [edx+edi*4]
  41efca:	jmp    0xa79a82d8
  41efcf:	lock lods al,BYTE PTR ds:[esi]
  41efd1:	adc    eax,0x10ac15f1
  41efd6:	mov    ch,0x76
  41efd8:	fadd   QWORD PTR [eax]
  41efda:	inc    edx
  41efdb:	xchg   ecx,eax
  41efdc:	in     eax,0x64
  41efde:	je     0x41ef82
  41efe0:	inc    edi
  41efe1:	daa    
  41efe2:	cli    
  41efe3:	fidiv  DWORD PTR [ecx+ecx*2]
  41efe6:	cmp    BYTE PTR [ebp+edi*8+0x54ad0cf3],ah
  41efed:	(bad)  
  41efef:	sbb    al,0xb1
  41eff1:	mov    cl,0xee
  41eff3:	xchg   ebp,eax
  41eff4:	inc    esi
  41eff5:	idiv   DWORD PTR [edi-0x6e0d70d8]
  41effb:	mov    cl,0x57
  41effd:	push   eax
  41effe:	daa    
  41efff:	ss pop ds
  41f001:	inc    esp
  41f002:	test   al,0x36
  41f004:	popa   
  41f005:	dec    edx
  41f006:	sti    
  41f007:	mov    edi,0x293c558c
  41f00c:	jae    0x41efd7
  41f00e:	imul   edx,DWORD PTR [ecx-0x3f],0x1b
  41f012:	pop    esp
  41f013:	cmp    al,BYTE PTR [ecx+0x4e]
  41f016:	or     DWORD PTR [edx+0x5cd293bb],esi
  41f01c:	into   
  41f01d:	int    0x93
  41f01f:	mov    ds:0xf1ad4900,eax
  41f024:	jecxz  0x41f06d
  41f026:	and    ebx,DWORD PTR [ebx+0x69723c5b]
  41f02c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f02d:	or     bl,BYTE PTR [ebp+ebp*2-0x7fba47a4]
  41f034:	aas    
  41f035:	stos   BYTE PTR es:[edi],al
  41f036:	das    
  41f037:	retf   0xe8f7
  41f03a:	mov    al,ds:0x2beafcc
  41f03f:	add    eax,0xfb9c899f
  41f044:	dec    ebp
  41f045:	push   0x4c46b9fe
  41f04a:	jno    0x41f08d
  41f04c:	imul   edi,DWORD PTR [ecx-0x70914562],0xffffffb8
  41f053:	test   eax,0x995291f6
  41f058:	xchg   ebx,eax
  41f059:	(bad)  
  41f05a:	pop    ds
  41f05b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f05c:	retf   
  41f05d:	in     al,dx
  41f05e:	or     ebp,DWORD PTR [eax]
  41f060:	icebp  
  41f061:	repz loope 0x41f00a
  41f064:	mov    cl,0x84
  41f066:	popf   
  41f067:	adc    BYTE PTR [ebx-0x356c69b],bl
  41f06d:	rcl    BYTE PTR ds:0xff5e7db1,cl
  41f073:	xor    bl,BYTE PTR ds:0x524100b1
  41f079:	jne    0x41f0e6
  41f07b:	xor    al,0xed
  41f07d:	fistp  WORD PTR [eax]
  41f07f:	call   0xfb2:0x57f8e677
  41f086:	adc    eax,0xf02e9711
  41f08b:	or     esp,DWORD PTR [ebp+0x33]
  41f08e:	(bad)  
  41f08f:	and    al,0x26
  41f091:	popf   
  41f092:	mov    ah,0xe3
  41f094:	rcl    BYTE PTR [edx-0x13],1
  41f097:	pop    eax
  41f098:	xor    al,0xd5
  41f09a:	jne    0x41f0ff
  41f09c:	neg    BYTE PTR [esp+esi*1]
  41f09f:	xor    dl,BYTE PTR fs:[esp+esi*2]
  41f0a3:	xor    bh,al
  41f0a5:	jge    0x41f0f1
  41f0a7:	mov    dl,0x51
  41f0a9:	adc    BYTE PTR [ecx],0xdf
  41f0ac:	aaa    
  41f0ad:	int3   
  41f0ae:	out    dx,eax
  41f0af:	mov    ch,0xa6
  41f0b1:	imul   edi,DWORD PTR [edi+0x65],0x1
  41f0b5:	test   eax,0xc860aecb
  41f0ba:	pusha  
  41f0bb:	dec    BYTE PTR [edi+0x5f]
  41f0be:	(bad)  
  41f0bf:	inc    eax
  41f0c0:	cdq    
  41f0c1:	enter  0x8b4c,0x17
  41f0c5:	arpl   WORD PTR [ebp+0x44],ax
  41f0c8:	sbb    eax,0x5348cb3b
  41f0cd:	pop    eax
  41f0ce:	retf   0x432c
  41f0d1:	test   BYTE PTR [eax],dh
  41f0d3:	and    DWORD PTR [edi-0x71],eax
  41f0d6:	mov    ch,al
  41f0d8:	stc    
  41f0d9:	jnp    0x41f139
  41f0db:	inc    ecx
  41f0dc:	mov    edi,0xa2f16127
  41f0e1:	(bad)  
  41f0e3:	arpl   WORD PTR [edi],si
  41f0e5:	pusha  
  41f0e6:	in     eax,0x1e
  41f0e8:	xchg   edi,eax
  41f0e9:	jle    0x41f10d
  41f0eb:	mov    cl,0x67
  41f0ed:	jb     0x41f0d8
  41f0ef:	cwde   
  41f0f0:	sahf   
  41f0f1:	ds jne 0x41f10d
  41f0f4:	xor    cl,ah
  41f0f6:	jl     0x41f0ce
  41f0f8:	mov    dh,al
  41f0fa:	and    al,0x44
  41f0fc:	jo     0x41f0b1
  41f0fe:	jo     0x41f0e4
  41f100:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f101:	test   al,0xdf
  41f103:	cmp    esi,DWORD PTR [eax+ecx*8]
  41f106:	cmp    al,0xdb
  41f108:	nop
  41f109:	(bad)  
  41f10a:	hlt    
  41f10b:	js     0x41f08e
  41f10d:	cmp    al,0xb9
  41f10f:	ficomp WORD PTR [ecx+0x5a]
  41f112:	mov    DWORD PTR [edi-0x62],edx
  41f115:	outs   dx,DWORD PTR ds:[esi]
  41f116:	push   ebp
  41f117:	outs   dx,BYTE PTR ds:[esi]
  41f118:	jns    0x41f18f
  41f11a:	sbb    DWORD PTR [ebx],edx
  41f11c:	adc    edx,DWORD PTR [edx+0x66f0520c]
  41f122:	std    
  41f123:	out    dx,eax
  41f124:	lods   eax,DWORD PTR ds:[esi]
  41f125:	test   bl,bh
  41f127:	loop   0x41f110
  41f129:	jmp    0x27f697a3
  41f12e:	or     DWORD PTR [esi],ecx
  41f130:	(bad)  
  41f131:	dec    eax
  41f132:	(bad)  
  41f133:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f134:	xchg   ebx,eax
  41f135:	cld    
  41f136:	jne    0x41f0ce
  41f138:	or     al,0x55
  41f13a:	xchg   ebx,eax
  41f13b:	leave  
  41f13c:	add    DWORD PTR [eax-0x10],edi
  41f13f:	dec    edx
  41f140:	inc    eax
  41f141:	enter  0xd50,0x6a
  41f145:	mov    BYTE PTR [ebx+edx*2],ch
  41f148:	popa   
  41f149:	adc    cl,BYTE PTR [edi+0x6292b9a8]
  41f14f:	adc    al,0xfd
  41f151:	sub    edx,DWORD PTR [eax]
  41f153:	es add al,0x90
  41f156:	or     DWORD PTR [edi+0x28070f58],edi
  41f15c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f15d:	pop    ss
  41f15e:	data16 js 0x41f162
  41f161:	pop    ecx
  41f162:	out    dx,eax
  41f163:	out    0xe9,al
  41f165:	dec    esi
  41f166:	imul   edi,DWORD PTR [esi+0x1e],0xffffffb3
  41f16a:	jmp    0xecb643cd
  41f16f:	push   ebp
  41f170:	inc    eax
  41f171:	les    edx,FWORD PTR [ebp-0x60febc7a]
  41f177:	scas   eax,DWORD PTR es:[edi]
  41f178:	mov    ebx,0x59db31c6
  41f17d:	dec    ebp
  41f17e:	add    BYTE PTR [ebp-0x4a],0x6b
  41f182:	data16 fstp QWORD PTR [ecx+0x66]
  41f186:	mov    al,ds:0xf939c9
  41f18b:	sub    BYTE PTR [ebx],al
  41f18d:	cmp    eax,0x1cf222f7
  41f192:	enter  0x166a,0xef
  41f196:	cmp    eax,0xf9c88446
  41f19b:	add    BYTE PTR [edx+ecx*4-0x49],bl
  41f19f:	imul   esi,edi,0x7f
  41f1a2:	fdivr  QWORD PTR [edi-0x2621f8a7]
  41f1a8:	pop    edi
  41f1a9:	ret    
  41f1aa:	mov    edi,0x16e9bca
  41f1af:	add    BYTE PTR [edi-0x2fffffe],al
  41f1b5:	bound  ebp,QWORD PTR [eax]
  41f1b7:	push   esp
  41f1b8:	clc    
  41f1b9:	mov    bh,0xdc
  41f1bb:	dec    ebp
  41f1bc:	pop    edi
  41f1bd:	add    eax,0x564cbf1
  41f1c2:	add    DWORD PTR [edi],ebx
  41f1c4:	neg    DWORD PTR ds:0xaf4067fc
  41f1ca:	in     al,0x4f
  41f1cc:	mov    bl,cl
  41f1ce:	sub    al,0x62
  41f1d0:	retf   
  41f1d1:	inc    eax
  41f1d2:	sar    ah,cl
  41f1d4:	sbb    DWORD PTR [eax+esi*8],edx
  41f1d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1d8:	jb     0x41f178
  41f1da:	icebp  
  41f1db:	mov    al,0xe8
  41f1dd:	js     0x41f1e3
  41f1df:	sar    DWORD PTR [eax+0x1568bbaa],cl
  41f1e5:	xchg   ecx,eax
  41f1e6:	in     eax,0x76
  41f1e8:	jge    0x41f190
  41f1ea:	mov    edx,0x92c9b2d9
  41f1ef:	or     BYTE PTR [edi-0x1d],0xda
  41f1f3:	xlat   BYTE PTR ds:[ebx]
  41f1f4:	iret   
  41f1f5:	scas   al,BYTE PTR es:[edi]
  41f1f6:	push   ebp
  41f1f7:	mov    esi,gs
  41f1f9:	mov    edi,0x265855fa
  41f1fe:	jo     0x41f260
  41f200:	sbb    bh,BYTE PTR [ebx]
  41f202:	mov    esi,0x394ff044
  41f207:	xchg   edx,eax
  41f208:	int3   
  41f209:	aad    0x12
  41f20b:	scas   eax,DWORD PTR es:[edi]
  41f20c:	out    0x34,eax
  41f20e:	out    dx,eax
  41f20f:	inc    eax
  41f210:	aam    0xbd
  41f212:	in     eax,dx
  41f213:	cld    
  41f214:	inc    ebp
  41f215:	leave  
  41f216:	sub    DWORD PTR [edx+0x34],eax
  41f219:	in     eax,dx
  41f21a:	adc    DWORD PTR [ebp+0x31a3e41],0xffffffb8
  41f221:	(bad)  
  41f222:	mov    eax,0x7d5b3a02
  41f227:	fadd   QWORD PTR [ecx+0x1e6280cc]
  41f22d:	add    eax,0x286d40cc
  41f232:	imul   esi,DWORD PTR [ebp-0x57649d30],0x73
  41f239:	out    dx,eax
  41f23a:	not    al
  41f23c:	pop    ebp
  41f23d:	xchg   edi,eax
  41f23e:	into   
  41f23f:	je     0x41f237
  41f241:	cmp    eax,0x5a20387b
  41f246:	adc    ah,BYTE PTR [esp+esi*4+0x35]
  41f24a:	pop    esp
  41f24b:	call   0x4680:0xb5d794f0
  41f252:	std    
  41f253:	mov    al,0xaf
  41f255:	cdq    
  41f256:	in     eax,0xa4
  41f258:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f259:	cdq    
  41f25a:	les    eax,FWORD PTR ds:0xcd0ae60f
  41f260:	sbb    BYTE PTR [ecx+ebp*2-0x28],dh
  41f264:	idiv   bh
  41f266:	fcmovnu st,st(2)
  41f268:	mov    edx,0xebea9891
  41f26d:	cli    
  41f26e:	lods   eax,DWORD PTR ds:[esi]
  41f26f:	jl     0x41f206
  41f271:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f272:	out    dx,eax
  41f273:	inc    ebx
  41f274:	cdq    
  41f275:	and    al,BYTE PTR [eax]
  41f277:	das    
  41f278:	xchg   cl,dh
  41f27a:	repnz cmp bl,bl
  41f27d:	fnstenv [ebx]
  41f27f:	push   cs
  41f280:	(bad)  [edi-0x4]
  41f283:	fadd   QWORD PTR [ebx+eax*1-0x627851a2]
  41f28a:	stos   BYTE PTR es:[edi],al
  41f28b:	and    eax,0x7e9a9701
  41f290:	xor    DWORD PTR [edx],edx
  41f292:	or     eax,0xf4a78477
  41f297:	aas    
  41f298:	icebp  
  41f299:	push   es
  41f29a:	stc    
  41f29b:	adc    eax,0x2b1164db
  41f2a0:	and    BYTE PTR [ecx+0x2b],dl
  41f2a3:	stc    
  41f2a4:	push   edi
  41f2a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2a6:	ss into 
  41f2a8:	int3   
  41f2a9:	jmp    0xe6c7a964
  41f2ae:	push   cs
  41f2af:	push   edx
  41f2b0:	dec    ebx
  41f2b1:	in     eax,0x30
  41f2b3:	mov    edx,0xd8d86d5d
  41f2b8:	int3   
  41f2b9:	aad    0x61
  41f2bb:	or     esp,edx
  41f2bd:	das    
  41f2be:	sti    
  41f2bf:	mov    edi,0x9ec9c5de
  41f2c4:	loope  0x41f28f
  41f2c6:	push   ss
  41f2c7:	jo     0x41f2be
  41f2c9:	dec    edi
  41f2ca:	xor    al,BYTE PTR [edx]
  41f2cc:	test   BYTE PTR [ecx-0x17],0xb5
  41f2d0:	loop   0x41f299
  41f2d2:	xchg   cl,bh
  41f2d4:	ins    BYTE PTR es:[edi],dx
  41f2d5:	test   eax,0x8b8eb46c
  41f2da:	loop   0x41f343
  41f2dc:	(bad)  
  41f2dd:	sbb    al,0x0
  41f2df:	int3   
  41f2e0:	lds    esi,FWORD PTR [eax+eiz*8+0x18e95483]
  41f2e7:	mov    BYTE PTR [edx],dh
  41f2e9:	jno    0x41f29b
  41f2eb:	jle    0x41f2c8
  41f2ed:	fwait
  41f2ee:	add    DWORD PTR [ecx+0x78d2b6dd],0xfd291f1d
  41f2f8:	jo     0x41f29b
  41f2fa:	pop    eax
  41f2fb:	mov    ah,0x64
  41f2fd:	jne    0x41f29b
  41f2ff:	cmc    
  41f300:	stos   BYTE PTR es:[edi],al
  41f301:	jmp    0x41f2d1
  41f303:	aas    
  41f304:	popf   
  41f305:	shr    DWORD PTR [edx-0x7b05a5c6],0x3c
  41f30c:	inc    ecx
  41f30d:	ss (bad) 
  41f30f:	xchg   edi,eax
  41f310:	jl     0x41f2ed
  41f312:	loopne 0x41f29f
  41f314:	mov    cs,WORD PTR [esi-0x205a186]
  41f31a:	adc    DWORD PTR [ecx+0x374e5829],0x37
  41f321:	sahf   
  41f322:	je     0x41f391
  41f324:	or     DWORD PTR [ebx],0x2
  41f327:	push   esp
  41f328:	sub    al,0xbc
  41f32a:	lods   eax,DWORD PTR ds:[esi]
  41f32b:	rol    edi,0x34
  41f32e:	adc    DWORD PTR ds:0x5ff65b8,eax
  41f334:	cmp    BYTE PTR [ebx-0x4c184b61],ah
  41f33a:	sub    eax,0xdd11d774
  41f33f:	fiadd  DWORD PTR [ecx+0x7a]
  41f342:	and    BYTE PTR [esp+edi*8+0x56eabf77],dh
  41f349:	jne    0x41f343
  41f34b:	gs xor eax,0x161522fd
  41f351:	test   al,0x22
  41f353:	ret    
  41f354:	sbb    edx,DWORD PTR [edi+ecx*1+0x14]
  41f358:	in     al,0x2f
  41f35a:	inc    esi
  41f35b:	repnz retf 0xd72e
  41f35f:	fisttp QWORD PTR [edx]
  41f361:	cs call 0x2b80520b
  41f367:	rcl    dl,0x51
  41f36a:	inc    edi
  41f36b:	mov    ch,bl
  41f36d:	adc    bl,BYTE PTR [edi]
  41f36f:	dec    esi
  41f370:	shr    DWORD PTR [ebx-0x59],0x99
  41f374:	es ds jnp 0x41f367
  41f378:	repnz push edi
  41f37a:	das    
  41f37b:	sbb    esp,DWORD PTR [ecx]
  41f37d:	sub    ch,BYTE PTR [eax]
  41f37f:	mov    al,0x91
  41f381:	aad    0x5f
  41f383:	shr    DWORD PTR [esi],1
  41f385:	stos   BYTE PTR es:[edi],al
  41f386:	xlat   BYTE PTR ds:[ebx]
  41f387:	out    dx,eax
  41f388:	loop   0x41f3f9
  41f38a:	jg     0x41f36d
  41f38c:	and    DWORD PTR [ebx-0x72],edx
  41f38f:	je     0x41f31e
  41f391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f392:	push   esp
  41f393:	push   ebp
  41f394:	inc    edi
  41f395:	mov    cs,WORD PTR [ecx+0x3c73756f]
  41f39b:	mov    esi,DWORD PTR [eax]
  41f39d:	sub    eax,0x2a6e8f1b
  41f3a2:	mov    BYTE PTR [esi-0x5d485bd4],dl
  41f3a8:	mov    edi,0xfb45452f
  41f3ad:	or     BYTE PTR [edx-0x18],dh
  41f3b0:	push   eax
  41f3b1:	mov    al,ds:0x9139e0e
  41f3b6:	xchg   ecx,eax
  41f3b7:	pop    es
  41f3b8:	pop    ecx
  41f3b9:	fwait
  41f3ba:	xor    ah,dl
  41f3bc:	mov    bl,0x6e
  41f3be:	mov    ebp,DWORD PTR [ebp+0x3d6c11b4]
  41f3c4:	fst    QWORD PTR [ebp+0x564d1ad1]
  41f3ca:	jg     0x41f3d0
  41f3cc:	add    BYTE PTR [ecx-0x5fd83004],ah
  41f3d2:	jmp    0x1ef9fd7c
  41f3d7:	add    DWORD PTR [ecx],0x5a5c2c12
  41f3dd:	dec    eax
  41f3de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3df:	push   0x4119bea3
  41f3e4:	jmp    0x41f388
  41f3e6:	and    al,0x4d
  41f3e8:	loopne 0x41f372
  41f3ea:	or     ecx,eax
  41f3ec:	or     al,0x95
  41f3ee:	and    eax,DWORD PTR [edi-0x19f57e82]
  41f3f4:	ret    
  41f3f5:	pop    ecx
  41f3f6:	or     DWORD PTR [ebx+esi*2],edx
  41f3f9:	lods   al,BYTE PTR ds:[esi]
  41f3fa:	sub    eax,DWORD PTR ds:0xa0c83256
  41f400:	cmp    eax,0x89ddd2e3
  41f405:	pminsw mm2,QWORD PTR [edi-0x7c]
  41f409:	dec    ebx
  41f40a:	leave  
  41f40b:	mov    ebp,0x5d3d87b2
  41f410:	xor    al,0x8a
  41f412:	jnp    0x41f41a
  41f414:	test   al,0xf5
  41f416:	in     eax,0xd6
  41f418:	pusha  
  41f419:	lock imul ebp,DWORD PTR [edi],0x24
  41f41d:	repnz idiv BYTE PTR [eax+eax*1+0x681c6ef0]
  41f425:	ins    BYTE PTR es:[edi],dx
  41f426:	aam    0x3d
  41f428:	cmp    BYTE PTR [edx+0x75],cl
  41f42b:	outs   dx,BYTE PTR ds:[esi]
  41f42c:	and    edi,DWORD PTR [edx-0x46]
  41f42f:	scas   al,BYTE PTR es:[edi]
  41f430:	ret    
  41f431:	jbe    0x41f436
  41f433:	cwde   
  41f434:	(bad)  
  41f435:	in     eax,0xfa
  41f437:	ja     0x41f46d
  41f439:	xlat   BYTE PTR ds:[ebx]
  41f43a:	scas   eax,DWORD PTR es:[edi]
  41f43b:	add    BYTE PTR [edi-0x402578e6],ah
  41f441:	(bad)  
  41f443:	jg     0x41f3f1
  41f445:	pop    ss
  41f446:	aad    0x14
  41f448:	push   edi
  41f449:	fnstenv [eax+0x75]
  41f44c:	and    dh,BYTE PTR [ecx+0x1]
  41f44f:	add    BYTE PTR [edi-0x54fffffe],al
  41f455:	cmp    eax,0xefab0c7f
  41f45a:	pop    ebp
  41f45b:	sub    al,0xb8
  41f45d:	pushf  
  41f45e:	data16 in al,dx
  41f460:	int    0xba
  41f462:	xor    DWORD PTR [ebx-0x3c],edx
  41f465:	shr    DWORD PTR [ecx+0x216295a1],cl
  41f46b:	xchg   ebx,ebx
  41f46d:	dec    edi
  41f46e:	fs mov dh,0x6d
  41f471:	stc    
  41f472:	icebp  
  41f473:	sti    
  41f474:	xor    al,0x21
  41f476:	dec    ebp
  41f477:	fistp  QWORD PTR [ebx]
  41f479:	repz cmp edi,esp
  41f47c:	gs inc ebp
  41f47e:	and    al,0xb4
  41f480:	jo     0x41f4e7
  41f482:	push   esi
  41f483:	int3   
  41f484:	out    dx,al
  41f485:	or     ecx,DWORD PTR [esi+0x13]
  41f488:	add    eax,0x299f2ab3
  41f48d:	mov    bh,0xf2
  41f48f:	leave  
  41f490:	jle    0x41f4bc
  41f492:	gs inc edi
  41f494:	inc    ebx
  41f495:	stc    
  41f496:	cmp    DWORD PTR [ecx-0x4ed82ce8],0xffffff82
  41f49d:	xchg   BYTE PTR [ebp+0x32b4b055],bl
  41f4a3:	push   0x55
  41f4a5:	push   es
  41f4a6:	mov    esi,0xfc1197eb
  41f4ab:	jle    0x41f517
  41f4ad:	std    
  41f4ae:	cmp    al,0x68
  41f4b0:	test   BYTE PTR [esi],bl
  41f4b2:	inc    esi
  41f4b3:	add    edx,DWORD PTR [ebp+0x5324f19]
  41f4b9:	ss repnz ror dl,cl
  41f4bd:	outs   dx,BYTE PTR ds:[esi]
  41f4be:	inc    esi
  41f4bf:	ins    BYTE PTR es:[edi],dx
  41f4c0:	out    0xf9,eax
  41f4c2:	jo     0x41f48d
  41f4c4:	and    al,0x9f
  41f4c6:	les    eax,FWORD PTR [ebx+0x529d887e]
  41f4cc:	ficom  WORD PTR [edi-0x6b0812e4]
  41f4d2:	and    eax,0xc0741922
  41f4d7:	mov    ds:0xa4a761e3,al
  41f4dc:	jno    0x41f516
  41f4de:	call   0x582c:0xd4ba9aee
  41f4e5:	dec    esi
  41f4e6:	cmp    ebx,DWORD PTR [ebx-0x1984740a]
  41f4ec:	loope  0x41f4a1
  41f4ee:	lea    ecx,[edx+0x28]
  41f4f1:	in     al,dx
  41f4f2:	stos   DWORD PTR es:[edi],eax
  41f4f3:	dec    edx
  41f4f4:	mov    dh,0xca
  41f4f6:	adc    BYTE PTR [edx+0x19f25cad],al
  41f4fc:	sub    bh,BYTE PTR [eax]
  41f4fe:	mov    ecx,0xb94ffa31
  41f503:	ror    BYTE PTR [edi+0x29337f2b],cl
  41f509:	xor    ah,BYTE PTR [edi+0x21]
  41f50c:	repz dec esi
  41f50e:	pusha  
  41f50f:	(bad)
  41f514:	jb     0x41f560
  41f516:	push   ecx
  41f517:	jns    0x41f4c2
  41f519:	or     bh,BYTE PTR [ebp+0x54]
  41f51c:	add    BYTE PTR [edx],0x2c
  41f51f:	sbb    BYTE PTR [esi],cl
  41f521:	xor    al,0x65
  41f523:	addr16 test eax,0x40691fc3
  41f529:	outs   dx,DWORD PTR ds:[esi]
  41f52a:	push   edi
  41f52b:	inc    esi
  41f52c:	fcomp  st(2)
  41f52e:	xor    al,0x47
  41f530:	lahf   
  41f531:	bound  edi,QWORD PTR [edx]
  41f533:	pop    ecx
  41f534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f535:	cwde   
  41f536:	push   ss
  41f537:	jmp    0x5ba1:0x7964663d
  41f53e:	das    
  41f53f:	adc    cl,BYTE PTR [esi-0x54fc011d]
  41f545:	ret    
  41f546:	clc    
  41f547:	addr16 dec esp
  41f549:	push   esi
  41f54a:	xchg   esp,eax
  41f54b:	jmp    0xe4f2:0x286bf8c7
  41f552:	in     al,0x72
  41f554:	in     al,0xce
  41f556:	dec    edx
  41f557:	cmp    al,BYTE PTR [esi+0x45ac5457]
  41f55d:	inc    ecx
  41f55e:	addr16 mov al,ds:0xffee
  41f562:	out    0x11,al
  41f564:	popa   
  41f565:	or     eax,edx
  41f567:	dec    ebp
  41f568:	out    0x51,eax
  41f56a:	stos   DWORD PTR es:[edi],eax
  41f56b:	xchg   eax,ebp
  41f56d:	xchg   dh,cl
  41f56f:	int3   
  41f570:	push   esp
  41f571:	inc    ebx
  41f572:	mov    ebx,0xe474152a
  41f577:	aad    0x75
  41f579:	dec    edx
  41f57a:	cmp    BYTE PTR es:[eax+0x75],ch
  41f57e:	pop    eax
  41f57f:	pushf  
  41f580:	add    ch,0xdc
  41f583:	in     al,dx
  41f584:	mov    ds:0x288d877,al
  41f589:	jb     0x41f525
  41f58b:	add    BYTE PTR [ebp+0x2861534],0x48
  41f592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f593:	jmp    0x398a:0x32e16b51
  41f59a:	aas    
  41f59b:	or     al,BYTE PTR [edx]
  41f59d:	aaa    
  41f59e:	out    0xa4,al
  41f5a0:	pop    eax
  41f5a1:	push   ss
  41f5a2:	(bad)  
  41f5a3:	retf   
  41f5a4:	imul   esp,DWORD PTR fs:[ebx],0xffffff8b
  41f5a8:	call   0x821eab81
  41f5ad:	lods   al,BYTE PTR ds:[esi]
  41f5ae:	lock sub bh,al
  41f5b1:	jbe    0x41f5ec
  41f5b3:	(bad)  
  41f5b4:	(bad)  
  41f5b5:	cmp    al,0x4c
  41f5b7:	jp     0x41f55b
  41f5b9:	or     BYTE PTR [ecx+0x66],ah
  41f5bc:	in     eax,dx
  41f5bd:	aad    0x3
  41f5bf:	pop    ebx
  41f5c0:	iret   
  41f5c1:	js     0x41f5c1
  41f5c3:	pop    edi
  41f5c4:	fisttp QWORD PTR [edx]
  41f5c6:	mov    eax,ds:0xd7479b4d
  41f5cb:	mov    al,BYTE PTR ds:0xbefbd2a2
  41f5d1:	xor    eax,DWORD PTR [ecx]
  41f5d3:	dec    ebx
  41f5d4:	dec    esp
  41f5d5:	pop    esp
  41f5d6:	loopne 0x41f575
  41f5d8:	out    dx,al
  41f5d9:	jmp    0x41f64d
  41f5db:	out    dx,eax
  41f5dc:	sbb    ebx,eax
  41f5de:	xor    bh,BYTE PTR [edx-0x72e62181]
  41f5e4:	pop    edx
  41f5e5:	xchg   edi,eax
  41f5e6:	xchg   esp,eax
  41f5e7:	sub    eax,0x364a8444
  41f5ec:	jl     0x41f628
  41f5ee:	(bad)  
  41f5f0:	stos   BYTE PTR es:[edi],al
  41f5f1:	jmp    0x41f5f1
  41f5f3:	xchg   ecx,eax
  41f5f4:	dec    ebp
  41f5f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5f6:	ss mov esp,0x710a5c2
  41f5fc:	test   eax,0x390f6b01
  41f601:	jmp    0x74b824b8
  41f606:	cmp    al,0x8f
  41f608:	in     al,0x4f
  41f60a:	dec    esp
  41f60b:	mov    ebx,0x27dc3827
  41f610:	sub    BYTE PTR [edi],dl
  41f612:	pushf  
  41f613:	shr    cl,1
  41f615:	sub    edx,ebp
  41f617:	lahf   
  41f618:	pusha  
  41f619:	ins    DWORD PTR es:[edi],dx
  41f61a:	enter  0xafef,0xb1
  41f61e:	xchg   esi,eax
  41f61f:	pop    es
  41f620:	retf   0xdb7
  41f623:	or     ebx,DWORD PTR [ebx+edx*8+0x6e02917d]
  41f62a:	pop    edx
  41f62b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f62c:	or     DWORD PTR [ebp+0x78],ebx
  41f62f:	jb     0x41f602
  41f631:	ds adc al,0x49
  41f634:	or     eax,0xd24d8294
  41f639:	gs mov ecx,0xe6f92821
  41f63f:	jnp    0x41f691
  41f641:	fsubrp st(2),st
  41f643:	and    bl,BYTE PTR [edi-0x5f]
  41f646:	(bad)  
  41f647:	retf   0x5582
  41f64a:	sub    eax,0xb62dd68c
  41f64f:	dec    esi
  41f650:	pop    ebx
  41f651:	dec    esi
  41f652:	mov    ebx,0x48d9e976
  41f657:	fwait
  41f658:	dec    esi
  41f659:	pop    esi
  41f65a:	aad    0xc2
  41f65c:	cld    
  41f65d:	xor    BYTE PTR [ebx+0x58],ah
  41f660:	mov    bl,0x47
  41f662:	cdq    
  41f663:	out    0x93,eax
  41f665:	cli    
  41f666:	sbb    ah,ch
  41f668:	or     eax,0x5440697b
  41f66d:	cmp    eax,0x8e96515e
  41f672:	pop    edx
  41f673:	sub    ebp,DWORD PTR [ebx+0x2f]
  41f676:	pop    ebx
  41f677:	sub    cl,ah
  41f679:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f67a:	test   al,0xe8
  41f67c:	xlat   BYTE PTR ds:[ebx]
  41f67d:	adc    al,0xeb
  41f67f:	jecxz  0x41f684
  41f681:	dec    eax
  41f682:	ds cli 
  41f684:	cmp    DWORD PTR [ebp-0x2f96ae96],edx
  41f68a:	mov    ebp,esi
  41f68c:	inc    ebp
  41f68d:	retf   0xebaf
  41f690:	sti    
  41f691:	into   
  41f692:	das    
  41f693:	jp     0x41f68e
  41f695:	mov    BYTE PTR [edx-0x2355b31],dl
  41f69b:	or     al,0xd2
  41f69d:	push   ecx
  41f69e:	lods   al,BYTE PTR ds:[esi]
  41f69f:	push   edi
  41f6a0:	dec    edi
  41f6a1:	and    DWORD PTR [ecx-0x6b],edi
  41f6a4:	add    cl,bl
  41f6a6:	in     al,dx
  41f6a7:	xor    esp,DWORD PTR [edx]
  41f6a9:	jnp    0x41f6d1
  41f6ab:	push   esp
  41f6ac:	cmp    DWORD PTR [esi+0x7d],esi
  41f6af:	sub    dl,bh
  41f6b1:	mov    esp,0xaaea7c9f
  41f6b6:	sahf   
  41f6b7:	push   ebp
  41f6b8:	jb     0x41f64c
  41f6ba:	sbb    ecx,ebp
  41f6bc:	mov    edx,0x64ae4705
  41f6c1:	xchg   esi,eax
  41f6c2:	ins    DWORD PTR es:[edi],dx
  41f6c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6c4:	pop    esp
  41f6c5:	mov    eax,ds:0x535685c7
  41f6ca:	add    eax,0xe91f48c7
  41f6cf:	dec    ebp
  41f6d0:	inc    eax
  41f6d1:	(bad)  
  41f6d3:	add    DWORD PTR [ebp+edx*4-0x22],eax
  41f6d7:	mov    dl,0xc6
  41f6d9:	out    0x19,al
  41f6db:	add    BYTE PTR [ebp-0x15b01f1],bl
  41f6e1:	cmc    
  41f6e2:	fistp  QWORD PTR [edi]
  41f6e4:	stc    
  41f6e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6e6:	mov    bl,0x6e
  41f6e8:	sbb    BYTE PTR [edx],al
  41f6ea:	push   eax
  41f6eb:	test   BYTE PTR [ecx-0x78fffe8d],ch
  41f6f1:	add    al,BYTE PTR [eax]
  41f6f3:	add    BYTE PTR [esi+0x4d],ah
  41f6f6:	ss stos BYTE PTR es:[edi],al
  41f6f8:	dec    ebx
  41f6f9:	int    0xf2
  41f6fb:	clc    
  41f6fc:	pop    ebp
  41f6fd:	xor    al,0xad
  41f6ff:	add    BYTE PTR [ecx],0x14
  41f702:	lods   al,BYTE PTR ds:[esi]
  41f703:	in     eax,dx
  41f704:	ret    0xb3e9
  41f707:	sbb    DWORD PTR [esi],ebp
  41f709:	jno    0x41f6ea
  41f70b:	mov    ebx,0x9abad202
  41f710:	xor    BYTE PTR [edx],dh
  41f712:	ret    0xa6f7
  41f715:	adc    BYTE PTR ds:0xf2c5eda7,0x3c
  41f71c:	xchg   ebx,eax
  41f71d:	cmp    cl,bh
  41f71f:	inc    ebp
  41f720:	adc    BYTE PTR [bx+di+0x6c],ch
  41f724:	push   edx
  41f725:	lea    ecx,[ecx+eiz*8]
  41f728:	add    esi,edx
  41f72a:	nop
  41f72b:	hlt    
  41f72c:	out    dx,eax
  41f72d:	cdq    
  41f72e:	cdq    
  41f72f:	inc    eax
  41f730:	mov    ecx,0xb7ae3f0a
  41f735:	(bad)  
  41f736:	repnz cdq 
  41f738:	xchg   ebp,eax
  41f739:	mov    BYTE PTR [edx],dh
  41f73b:	inc    edx
  41f73c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f73d:	cmp    esp,esi
  41f73f:	push   esp
  41f740:	jg     0x41f6d8
  41f742:	pop    edi
  41f743:	push   cs
  41f744:	and    bh,BYTE PTR [ebp+0x3a]
  41f747:	or     al,0xdb
  41f749:	out    0x69,eax
  41f74b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f74c:	jle    0x41f6e3
  41f74e:	add    eax,0x48d1f5df
  41f753:	mov    ds:0x3f099f,eax
  41f758:	(bad)  
  41f759:	adc    eax,0x272b804a
  41f75e:	stos   BYTE PTR es:[edi],al
  41f75f:	mov    bl,0xc3
  41f761:	xor    dh,BYTE PTR [ebx]
  41f763:	inc    ebp
  41f764:	and    ebp,DWORD PTR [eax]
  41f766:	sbb    edx,DWORD PTR [edx]
  41f768:	sti    
  41f769:	lods   eax,DWORD PTR ds:[esi]
  41f76a:	push   esp
  41f76b:	pushf  
  41f76c:	push   0xffffffac
  41f76e:	retf   0xa74c
  41f771:	push   edx
  41f772:	fsubr  DWORD PTR [ebx-0x22b6f411]
  41f778:	inc    eax
  41f779:	jne    0x41f77a
  41f77b:	loop   0x41f7c3
  41f77d:	imul   edx,DWORD PTR [esi-0x1d6412ea],0xffffff80
  41f784:	out    dx,al
  41f785:	sahf   
  41f786:	jl     0x41f7c0
  41f788:	pop    ebx
  41f789:	out    0x5d,al
  41f78b:	(bad)  
  41f78c:	and    ecx,DWORD PTR [edx]
  41f78e:	aad    0x7
  41f790:	cmp    BYTE PTR [ecx+0xf36cb0],0x4a
  41f797:	mov    ch,0xdb
  41f799:	mov    ebp,esi
  41f79b:	dec    esp
  41f79c:	mov    WORD PTR [ebx-0x27],es
  41f79f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7a0:	ins    DWORD PTR es:[edi],dx
  41f7a1:	(bad)  
  41f7a2:	mov    ds:0x30ce124b,eax
  41f7a7:	fwait
  41f7a8:	js     0x41f7e4
  41f7aa:	and    DWORD PTR [edx-0x4e],eax
  41f7ad:	add    BYTE PTR [ebx-0x1324273b],al
  41f7b3:	fstp   TBYTE PTR [esp+eax*8+0xafda392]
  41f7ba:	clc    
  41f7bb:	xor    BYTE PTR [ecx-0x36ae6f16],0x9a
  41f7c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7c3:	loopne 0x41f76a
  41f7c5:	mov    dl,0xc9
  41f7c7:	test   eax,0xa6718cb
  41f7cc:	pop    esi
  41f7cd:	lock mov ds:0xa203856d,eax
  41f7d3:	push   0xffffffe6
  41f7d5:	mov    ecx,0xb814d50e
  41f7da:	push   edx
  41f7db:	jg     0x41f773
  41f7dd:	jmp    0x41f821
  41f7df:	pop    ss
  41f7e0:	fwait
  41f7e1:	push   edi
  41f7e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7e3:	in     eax,0x91
  41f7e5:	and    ch,BYTE PTR [edi+0x7d3ba7b0]
  41f7eb:	mov    ch,0xf
  41f7ed:	pop    edi
  41f7ee:	dec    ecx
  41f7ef:	mov    edx,0xe6037161
  41f7f4:	xor    bl,0xbb
  41f7f7:	xor    eax,0x8916f49f
  41f7fc:	push   0x1ec64e1e
  41f801:	out    0x41,al
  41f803:	pop    es
  41f804:	dec    edi
  41f805:	sub    al,0x2c
  41f807:	jmp    0xe19fd79b
  41f80c:	sbb    al,0x21
  41f80e:	int3   
  41f80f:	inc    ebp
  41f810:	adc    DWORD PTR [eax-0x1a81e8d5],esp
  41f816:	pusha  
  41f817:	fstp   st(7)
  41f819:	push   0x3a
  41f81b:	in     eax,dx
  41f81c:	push   esp
  41f81d:	lods   eax,DWORD PTR ds:[esi]
  41f81e:	mov    ebx,0xef351c39
  41f823:	imul   eax,DWORD PTR ds:0xa6889ccf,0x8
  41f82a:	sbb    eax,0x8ebe4399
  41f82f:	popa   
  41f830:	push   0xbf2b86d8
  41f835:	sbb    al,0xc4
  41f838:	out    dx,al
  41f839:	leave  
  41f83a:	and    eax,0x1b3932f0
  41f83f:	fisttp QWORD PTR [ecx-0x5b]
  41f842:	or     DWORD PTR [edx+0x69579aa0],eax
  41f848:	fwait
  41f849:	mov    ch,0x9b
  41f84b:	loope  0x41f875
  41f84d:	es xor al,0xbc
  41f850:	inc    esi
  41f851:	push   ebp
  41f852:	mov    bl,0x97
  41f854:	fxch   st(4)
  41f856:	pop    edi
  41f857:	ja     0x41f8b3
  41f859:	mov    ebp,0x6afb0f5c
  41f85e:	sub    BYTE PTR [eax+edx*2-0x401f63e4],0x66
  41f866:	sub    eax,0x219da493
  41f86b:	inc    esp
  41f86c:	lea    esi,[ecx-0x66]
  41f86f:	fcmovb st,st(4)
  41f871:	jle    0x41f8ac
  41f873:	mov    cl,0xde
  41f875:	iret   
  41f876:	es mov ebp,0x92cee288
  41f87c:	neg    DWORD PTR [ebx-0x7ea4cff4]
  41f882:	push   esi
  41f883:	mov    edx,0x32cbb1e1
  41f888:	jne    0x41f836
  41f88a:	ins    DWORD PTR es:[edi],dx
  41f88b:	adc    DWORD PTR [edi+eax*1-0xfb38802],ecx
  41f892:	xchg   al,ah
  41f894:	pop    ds
  41f895:	mov    edi,0x31be8db2
  41f89a:	mov    ecx,0x117c87cc
  41f89f:	xchg   edi,eax
  41f8a0:	test   eax,0xd23fe0ab
  41f8a5:	je     0x41f910
  41f8a7:	call   0x4200:0xddc57144
  41f8ae:	inc    ecx
  41f8af:	push   ebp
  41f8b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8b1:	repz pop es
  41f8b3:	cmp    DWORD PTR [edx],0xfa60119b
  41f8b9:	xor    al,0x9f
  41f8bb:	jecxz  0x41f89b
  41f8bd:	push   0xffffff96
  41f8bf:	lahf   
  41f8c0:	test   BYTE PTR [eax-0x24],al
  41f8c3:	scas   al,BYTE PTR es:[edi]
  41f8c4:	pop    edi
  41f8c5:	aas    
  41f8c6:	mov    al,0xfa
  41f8c8:	or     bl,al
  41f8ca:	push   edi
  41f8cb:	packssdw mm7,QWORD PTR [eiz*2+0x682717e7]
  41f8d3:	mov    al,ds:0xba6bd11f
  41f8d8:	ret    0x8902
  41f8db:	inc    eax
  41f8dc:	inc    edi
  41f8dd:	xor    al,0xd1
  41f8df:	outs   dx,BYTE PTR cs:[esi]
  41f8e1:	addr16 retf 0x296d
  41f8e5:	ins    DWORD PTR es:[edi],dx
  41f8e6:	aaa    
  41f8e7:	iret   
  41f8e8:	jo     0x41f8d9
  41f8ea:	(bad)  
  41f8ec:	adc    BYTE PTR [ecx+0x53],ch
  41f8ef:	mov    ah,0xf5
  41f8f1:	out    0x1b,eax
  41f8f3:	push   0x9
  41f8f5:	mov    ah,0x58
  41f8f7:	lock add edi,esi
  41f8fa:	int    0x2f
  41f8fc:	cmp    DWORD PTR [edx-0x6c366e],eax
  41f902:	jae    0x41f970
  41f904:	and    al,0xa8
  41f906:	sub    ecx,DWORD PTR [ebp+0x50589ad9]
  41f90c:	cmp    edx,DWORD PTR [edx+ebx*2-0x70475d41]
  41f913:	push   ebp
  41f914:	xor    DWORD PTR [ebp-0x7d],esi
  41f917:	mov    ds:0x221e29b1,al
  41f91c:	and    edx,DWORD PTR [edi]
  41f91e:	push   esi
  41f91f:	aad    0x4a
  41f921:	push   esi
  41f922:	or     DWORD PTR [ebp+0x19eb4c5f],ebp
  41f928:	(bad)  
  41f92a:	cli    
  41f92b:	jno    0x41f965
  41f92d:	xor    DWORD PTR [ebx-0x792ba0c7],edi
  41f933:	push   cs
  41f934:	mov    ebx,0xdfdd4529
  41f939:	cs clc 
  41f93b:	xor    al,0x38
  41f93d:	xor    al,0x22
  41f93f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f940:	jp     0x41f981
  41f942:	mov    cl,BYTE PTR [eax+ecx*1+0xfd28e10]
  41f949:	cs jae 0x41f93c
  41f94c:	sbb    ebx,ebx
  41f94e:	mov    ah,0xb9
  41f950:	inc    esi
  41f951:	inc    eax
  41f952:	and    dl,BYTE PTR [eax-0x5e]
  41f955:	(bad)  
  41f956:	stos   BYTE PTR es:[edi],al
  41f957:	ds (bad) 
  41f959:	xlat   BYTE PTR ds:[ebx]
  41f95a:	sub    BYTE PTR [edx+0x6a6709b2],dl
  41f960:	dec    esi
  41f961:	jae    0x41f9a4
  41f963:	push   ss
  41f964:	or     esp,edx
  41f966:	into   
  41f967:	inc    ebx
  41f968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f969:	sbb    al,0x30
  41f96b:	pop    ebp
  41f96c:	pop    es
  41f96d:	fs cld 
  41f96f:	push   ebp
  41f970:	sub    eax,0x3a800433
  41f975:	sub    ebx,esi
  41f977:	cmp    al,0xd0
  41f979:	push   ebx
  41f97a:	enter  0x2000,0x16
  41f97e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f97f:	lea    esi,[esi+0x25bf29bf]
  41f985:	lods   eax,DWORD PTR ds:[esi]
  41f986:	and    dl,al
  41f988:	das    
  41f989:	test   eax,0x7630a509
  41f98e:	add    DWORD PTR [eax],eax
  41f990:	xchg   DWORD PTR [edx],eax
  41f992:	add    BYTE PTR [eax],al
  41f994:	sub    edi,0x533969d8
  41f99a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f99b:	fs jno 0x41f9f6
  41f99e:	(bad)  
  41f99f:	and    al,0x71
  41f9a1:	or     eax,0xfcdbadee
  41f9a6:	shl    DWORD PTR [edx],1
  41f9a8:	repz push 0xffffffea
  41f9ab:	int3   
  41f9ac:	std    
  41f9ad:	add    al,0x96
  41f9af:	in     al,0x4a
  41f9b1:	mov    edx,0xcdd44fb1
  41f9b6:	clc    
  41f9b7:	into   
  41f9b8:	cdq    
  41f9b9:	jne    0x41f954
  41f9bb:	jmp    DWORD PTR [edx]
  41f9bd:	mov    dl,0xb9
  41f9bf:	mov    eax,0x48300b78
  41f9c4:	aas    
  41f9c5:	mov    ds:0xddf4ef2a,eax
  41f9ca:	fnstcw WORD PTR [ecx+0x44]
  41f9cd:	mov    edx,0xf245de7a
  41f9d2:	add    eax,0xb080ee83
  41f9d7:	cmp    DWORD PTR [ebx+0x69cee049],edx
  41f9dd:	test   bl,bl
  41f9df:	fild   QWORD PTR [esi+0x3a]
  41f9e2:	push   0xffffffb0
  41f9e4:	(bad)  
  41f9e5:	push   0x2f625288
  41f9ea:	mov    ecx,0xce5818aa
  41f9ef:	std    
  41f9f0:	add    ecx,DWORD PTR [eax-0xedb5ce8]
  41f9f6:	clc    
  41f9f7:	sbb    DWORD PTR [edx],esi
  41f9f9:	xchg   DWORD PTR [eax-0x4f3ecde1],esp
  41f9ff:	mov    ds:0xb6db16c4,eax
  41fa04:	xchg   ecx,eax
  41fa05:	cmp    al,0xd9
  41fa07:	enter  0x8ed8,0xcc
  41fa0b:	add    edi,ecx
  41fa0d:	daa    
  41fa0e:	jae    0x41f997
  41fa10:	sbb    esp,DWORD PTR [edx+0x6fcd79e4]
  41fa16:	cld    
  41fa17:	aas    
  41fa18:	cmp    al,0xb0
  41fa1a:	or     al,0x6a
  41fa1c:	icebp  
  41fa1d:	retf   
  41fa1e:	mov    cl,0x9
  41fa20:	or     BYTE PTR [ebx-0x6d],dh
  41fa23:	cmp    BYTE PTR [ebx+eiz*8+0x2b787e9e],al
  41fa2a:	(bad)  
  41fa2b:	jle    0x41fa06
  41fa2d:	adc    eax,0xa591a672
  41fa32:	call   0xee74:0x9798fdf1
  41fa39:	add    eax,0x5ad4838d
  41fa3e:	les    edx,FWORD PTR [eax]
  41fa40:	pop    ss
  41fa41:	xchg   esp,eax
  41fa42:	mov    eax,ds:0xb714742
  41fa47:	sub    eax,0x3e382cdc
  41fa4c:	loop   0x41fac1
  41fa4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa4f:	out    0x11,al
  41fa51:	std    
  41fa52:	cmp    BYTE PTR [esi+0x72],0xb9
  41fa56:	xchg   ecx,eax
  41fa57:	or     ecx,DWORD PTR [eax]
  41fa59:	loope  0x41fa92
  41fa5b:	inc    esp
  41fa5c:	js     0x41fab1
  41fa5e:	pop    eax
  41fa5f:	jne    0x41fa1a
  41fa61:	xor    BYTE PTR [ebx-0x577d5f0d],ah
  41fa67:	cmc    
  41fa68:	stos   DWORD PTR es:[edi],eax
  41fa69:	inc    edx
  41fa6a:	lahf   
  41fa6b:	(bad)
  41fa6f:	mov    al,ds:0xf0f912d5
  41fa74:	mov    ebx,0x68c2b19c
  41fa79:	out    dx,eax
  41fa7a:	jb     0x41fab2
  41fa7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa7d:	and    edi,DWORD PTR [edx+0x23]
  41fa80:	dec    eax
  41fa81:	push   0x1
  41fa83:	fist   DWORD PTR [ebp+0x7d]
  41fa86:	push   0x47
  41fa88:	push   edi
  41fa89:	jmp    0xb5d91558
  41fa8e:	push   bx
  41fa90:	in     al,dx
  41fa91:	mov    edi,0xd69525c5
  41fa96:	jb     0x41fafd
  41fa98:	ret    0x16fb
  41fa9b:	adc    BYTE PTR [eax+0x15],ch
  41fa9e:	dec    eax
  41fa9f:	push   es
  41faa0:	push   esp
  41faa1:	in     al,0x66
  41faa3:	mov    al,ch
  41faa5:	add    ecx,DWORD PTR [ecx-0x65]
  41faa8:	sbb    esi,0xc1d5c3c9
  41faae:	stos   DWORD PTR es:[edi],eax
  41faaf:	pop    ebp
  41fab0:	clc    
  41fab1:	pop    ss
  41fab2:	rol    BYTE PTR [esi-0x77],1
  41fab5:	out    0x13,eax
  41fab7:	xchg   edx,eax
  41fab8:	mov    ds:0xc2a22c87,al
  41fabd:	push   ds
  41fabe:	jmp    0xbb393e35
  41fac3:	sub    dh,BYTE PTR fs:[edx+ebx*4-0x6d]
  41fac8:	stc    
  41fac9:	scas   al,BYTE PTR es:[edi]
  41faca:	dec    esi
  41facb:	or     ch,ah
  41facd:	cs pop esi
  41facf:	test   eax,0x5ca321e0
  41fad4:	leave  
  41fad5:	jmp    0x1d1e7177
  41fada:	outs   dx,DWORD PTR ds:[esi]
  41fadb:	sahf   
  41fadc:	cli    
  41fadd:	cmp    BYTE PTR [ebp-0x55],ch
  41fae0:	ror    ch,1
  41fae2:	sub    eax,eax
  41fae4:	ins    DWORD PTR es:[edi],dx
  41fae5:	xchg   edx,eax
  41fae6:	call   0xce8f:0xa7a8faf3
  41faed:	xor    edx,DWORD PTR [ebx]
  41faef:	cwde   
  41faf0:	xchg   DWORD PTR [edx+0x5ef92e75],ebx
  41faf6:	call   0x37c4d4f2
  41fafb:	stos   BYTE PTR es:[edi],al
  41fafc:	or     DWORD PTR [edx-0x55ba55a4],0x9ec25825
  41fb06:	sti    
  41fb07:	ficomp DWORD PTR [eax]
  41fb09:	push   0xffffffb3
  41fb0b:	jb     0x41fb6f
  41fb0d:	int3   
  41fb0e:	sbb    eax,0x69a43864
  41fb13:	xchg   BYTE PTR ds:0xf91e8bf5,dh
  41fb19:	push   ss
  41fb1a:	lods   al,BYTE PTR gs:[esi]
  41fb1c:	pop    eax
  41fb1d:	fs mov eax,0x294fe00a
  41fb23:	fmul   QWORD PTR [ebx]
  41fb25:	out    dx,eax
  41fb26:	in     eax,0x6c
  41fb28:	jl     0x41fae7
  41fb2a:	ja     0x41fb16
  41fb2c:	push   ebp
  41fb2d:	dec    ebp
  41fb2e:	mov    eax,ds:0x4e92d8ef
  41fb33:	and    cl,BYTE PTR [ebx-0x2d]
  41fb36:	scas   eax,DWORD PTR es:[edi]
  41fb37:	sub    DWORD PTR [edi-0x736494cd],edx
  41fb3d:	pop    esi
  41fb3e:	lods   eax,DWORD PTR ds:[esi]
  41fb3f:	ja     0x41fb7f
  41fb41:	jp     0x41fb8c
  41fb43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb44:	push   0x72429ce
  41fb49:	xchg   esp,eax
  41fb4a:	jp     0x41fb4d
  41fb4c:	add    al,0x81
  41fb4e:	sub    DWORD PTR [edi+0x5a],ecx
  41fb51:	mov    eax,ds:0x53bae365
  41fb56:	scas   al,BYTE PTR es:[edi]
  41fb57:	cmp    al,0x4a
  41fb59:	pusha  
  41fb5a:	inc    esp
  41fb5b:	test   eax,0x4e0f7f44
  41fb60:	jp     0x41fb4b
  41fb62:	add    dh,BYTE PTR [edx+0x19]
  41fb65:	ret    0x1c02
  41fb68:	daa    
  41fb69:	lahf   
  41fb6a:	xchg   esi,eax
  41fb6b:	adc    bl,0x17
  41fb6e:	rcr    BYTE PTR [ebp-0x48],cl
  41fb71:	sub    ecx,DWORD PTR [ebx]
  41fb73:	inc    esp
  41fb74:	dec    ecx
  41fb75:	outs   dx,DWORD PTR ds:[esi]
  41fb76:	inc    edi
  41fb77:	pop    eax
  41fb78:	in     eax,0x73
  41fb7a:	pop    ds
  41fb7b:	(bad)  
  41fb7c:	lock inc edx
  41fb7e:	cmp    ebx,eax
  41fb80:	js     0x41fbc7
  41fb82:	mov    ah,0x84
  41fb84:	xor    BYTE PTR [edx],cl
  41fb86:	dec    ebp
  41fb87:	adc    ch,bh
  41fb89:	adc    ebx,DWORD PTR [esi+0x7b1bfbd4]
  41fb8f:	jne    0x41fb26
  41fb91:	inc    ecx
  41fb92:	cmp    ebx,DWORD PTR [eax+0x4f]
  41fb95:	xchg   edi,eax
  41fb96:	sahf   
  41fb97:	jmp    0x73ec19e8
  41fb9c:	xor    eax,DWORD PTR [esi]
  41fb9e:	(bad)  
  41fb9f:	out    dx,al
  41fba0:	int    0xcc
  41fba2:	push   ecx
  41fba3:	loope  0x41fbc9
  41fba5:	or     DWORD PTR [ecx-0x42],0xa003d5d8
  41fbac:	sub    BYTE PTR [eax-0x28],dl
  41fbaf:	xor    DWORD PTR [ebx-0x2a4f85ca],0xe
  41fbb6:	scas   al,BYTE PTR es:[edi]
  41fbb7:	int    0x43
  41fbb9:	fsub   st(3),st
  41fbbb:	pop    edx
  41fbbc:	pop    esp
  41fbbd:	adc    ecx,DWORD PTR [edi+0x48]
  41fbc0:	ss xchg ecx,eax
  41fbc2:	mov    eax,0x5613a15f
  41fbc7:	cmp    DWORD PTR [edx-0x74],edx
  41fbca:	pop    eax
  41fbcb:	test   BYTE PTR [edi+0x7a],bl
  41fbce:	loop   0x41fbe9
  41fbd0:	ins    DWORD PTR es:[edi],dx
  41fbd1:	(bad)
  41fbd4:	pop    eax
  41fbd5:	ss xchg esi,eax
  41fbd7:	loope  0x41fc53
  41fbd9:	iret   
  41fbda:	adc    al,0xa1
  41fbdc:	test   BYTE PTR [ebp+edi*2-0x5e],bl
  41fbe0:	fcomp  QWORD PTR [esi+0x1f]
  41fbe3:	pop    ecx
  41fbe4:	add    cl,BYTE PTR [esi-0x1f]
  41fbe7:	and    ebp,ebx
  41fbe9:	mov    al,0x6
  41fbeb:	xor    edi,DWORD PTR [esi+0x62afd1d7]
  41fbf1:	das    
  41fbf2:	sub    ch,BYTE PTR [esi-0x626406a4]
  41fbf8:	adc    DWORD PTR ds:0x2464b10c,ebp
  41fbfe:	xchg   edx,eax
  41fbff:	inc    edx
  41fc00:	scas   eax,DWORD PTR es:[edi]
  41fc01:	pusha  
  41fc02:	rcl    ebx,0xd0
  41fc05:	lock cmp eax,0x40846ba3
  41fc0b:	xlat   BYTE PTR fs:[ebx]
  41fc0d:	pop    eax
  41fc0e:	jnp    0x41fba1
  41fc10:	pop    eax
  41fc11:	xchg   ecx,eax
  41fc12:	mov    bh,0xf4
  41fc14:	xor    DWORD PTR [esi-0x3533abc6],0x33b0004d
  41fc1e:	cmp    ch,BYTE PTR [ecx+0x3bb3a9bb]
  41fc24:	test   DWORD PTR [edi+0x50f00cbe],esi
  41fc2a:	adc    DWORD PTR [edx-0x49],0x78
  41fc2e:	add    DWORD PTR [eax],eax
  41fc30:	xchg   DWORD PTR [edx],eax
  41fc32:	add    BYTE PTR [eax],al
  41fc34:	gs popa 
  41fc36:	dec    edx
  41fc37:	push   eax
  41fc38:	not    DWORD PTR [ebx-0x47]
  41fc3b:	jns    0x41fbef
  41fc3d:	jnp    0x41fc6b
  41fc3f:	mov    esp,0x5e38d1d3
  41fc44:	fdiv   QWORD PTR [ebp+0x2ff754c7]
  41fc4a:	mov    eax,0x235709cd
  41fc4f:	push   ecx
  41fc50:	daa    
  41fc51:	loope  0x41fc85
  41fc53:	cdq    
  41fc54:	ins    BYTE PTR es:[edi],dx
  41fc55:	mov    al,ds:0x59f77f17
  41fc5a:	xchg   edx,eax
  41fc5b:	pop    es
  41fc5c:	bt     ebp,ebp
  41fc5f:	lds    ebx,FWORD PTR [ebp-0x1618262d]
  41fc65:	xor    eax,0x9e4fe92
  41fc6a:	xchg   esp,eax
  41fc6b:	fs and ah,0x5d
  41fc6f:	or     eax,0x982343b3
  41fc74:	push   edi
  41fc75:	xchg   esi,eax
  41fc76:	push   0xffffffa2
  41fc78:	sub    eax,0x64d2e49b
  41fc7d:	push   ebx
  41fc7e:	int    0xc0
  41fc80:	adc    eax,0x8e6fdb80
  41fc85:	ins    BYTE PTR es:[edi],dx
  41fc86:	adc    DWORD PTR [eax],edi
  41fc88:	mov    al,0xd3
  41fc8a:	mov    esi,0xcbcc4859
  41fc8f:	mov    ds:0x4829d7e5,eax
  41fc94:	push   DWORD PTR [ebx]
  41fc96:	push   ds
  41fc97:	nop
  41fc98:	mov    BYTE PTR [bp+0x1c17],al
  41fc9d:	cli    
  41fc9e:	sbb    al,0xcd
  41fca0:	push   esi
  41fca1:	xchg   BYTE PTR [edi-0x6c],al
  41fca4:	cdq    
  41fca5:	and    eax,0x3621ac5
  41fcaa:	inc    ebp
  41fcab:	std    
  41fcac:	ror    BYTE PTR [edx],0xa1
  41fcaf:	pop    ecx
  41fcb0:	je     0x41fcee
  41fcb2:	mov    cl,0x4
  41fcb4:	std    
  41fcb5:	gs repnz pop es
  41fcb8:	inc    edx
  41fcb9:	push   esi
  41fcba:	ins    DWORD PTR es:[edi],dx
  41fcbb:	push   ecx
  41fcbc:	mov    edi,0x7d8ade65
  41fcc1:	push   ss
  41fcc2:	sbb    edx,eax
  41fcc4:	sbb    eax,0xbd4f4f87
  41fcc9:	dec    eax
  41fcca:	or     esp,edi
  41fccc:	jge    0x41fcfe
  41fcce:	adc    DWORD PTR [esi-0x67f6133c],eax
  41fcd4:	mov    ebp,0xb0ec7338
  41fcd9:	sub    esi,DWORD PTR [ecx-0x1d07c000]
  41fcdf:	mov    ?,WORD PTR [ebx]
  41fce1:	pop    ds
  41fce2:	mov    eax,ds:0x635c057e
  41fce7:	and    eax,0x3d62ec9f
  41fcec:	cmp    DWORD PTR gs:[eax+0x724ce4c],ebp
  41fcf3:	xchg   ebp,eax
  41fcf4:	pop    edx
  41fcf5:	inc    eax
  41fcf6:	fisub  DWORD PTR [ebx]
  41fcf8:	in     al,dx
  41fcf9:	gs sbb eax,0x66b0443b
  41fcff:	fldenv [edx]
  41fd01:	push   cs
  41fd02:	clc    
  41fd03:	jne    0x41fcc9
  41fd05:	outs   dx,DWORD PTR ds:[esi]
  41fd06:	mov    al,ds:0xe4a7a377
  41fd0b:	cdq    
  41fd0c:	xchg   DWORD PTR [edi],ebx
  41fd0e:	sbb    esi,eax
  41fd10:	pop    edx
  41fd11:	loop   0x41fd84
  41fd13:	mov    edi,0x38c01c4d
  41fd18:	sbb    DWORD PTR [edx+ecx*1],ecx
  41fd1b:	push   ds
  41fd1c:	add    BYTE PTR [eax+0x4a],bh
  41fd1f:	add    bl,BYTE PTR [ebp+0x77]
  41fd22:	ins    BYTE PTR es:[edi],dx
  41fd23:	cli    
  41fd24:	rcl    DWORD PTR [esi+0x1d],0x90
  41fd28:	jne    0x41fd6b
  41fd2a:	aaa    
  41fd2b:	test   edi,ebx
  41fd2d:	jl     0x41fd26
  41fd2f:	add    BYTE PTR [edi+0x1f3d57d6],dl
  41fd35:	mov    ds:0xad7a351a,eax
  41fd3a:	push   ds
  41fd3b:	fyl2x  
  41fd3d:	sti    
  41fd3e:	inc    ebx
  41fd3f:	sbb    DWORD PTR [esi+0x6ead2e46],edx
  41fd45:	cmp    DWORD PTR [esi],ecx
  41fd47:	icebp  
  41fd48:	jp     0x41fd82
  41fd4a:	(bad)  
  41fd4b:	sub    ecx,DWORD PTR [ebp+0x392ce4bb]
  41fd51:	push   ebp
  41fd52:	nop
  41fd53:	lds    edi,FWORD PTR [edx*8+0xd59b4be]
  41fd5a:	pop    ss
  41fd5b:	mov    edx,0x61a637af
  41fd60:	lock fisub WORD PTR [esi+0x4d]
  41fd64:	aas    
  41fd65:	lods   al,BYTE PTR ds:[esi]
  41fd66:	cmp    al,0xce
  41fd68:	sbb    al,0x3e
  41fd6a:	sub    eax,0x34b8aa01
  41fd6f:	je     0x41fd2e
  41fd71:	out    dx,eax
  41fd72:	sub    dh,BYTE PTR [ecx-0x23]
  41fd75:	push   edi
  41fd76:	(bad)  
  41fd77:	and    eax,0xd7928cec
  41fd7c:	push   ds
  41fd7d:	mov    eax,ds:0xd68f5d4d
  41fd82:	inc    DWORD PTR [ebx]
  41fd84:	call   0xdad6:0x690ea32b
  41fd8b:	sbb    DWORD PTR [edx-0x5d9f2165],0xffffff89
  41fd92:	neg    BYTE PTR [ecx]
  41fd94:	adc    DWORD PTR [eax+0x4932e9f3],ebx
  41fd9a:	loope  0x41fdea
  41fd9c:	mov    ebx,0xbc38f7f3
  41fda1:	call   0x58d4a5bd
  41fda6:	imul   esp,DWORD PTR [ecx-0x80],0x5f
  41fdaa:	das    
  41fdab:	cld    
  41fdac:	xchg   ebx,eax
  41fdad:	test   DWORD PTR [ebp+0x355752f1],esp
  41fdb3:	xor    eax,0xbde77cd3
  41fdb8:	mov    WORD PTR [esi-0x5ab1f5a3],ss
  41fdbe:	inc    esp
  41fdbf:	ins    DWORD PTR es:[edi],dx
  41fdc0:	js     0x41fdfb
  41fdc2:	test   cl,bl
  41fdc4:	inc    ebx
  41fdc5:	mov    bl,0x7c
  41fdc7:	mov    ds:0x879998d2,al
  41fdcc:	call   0x3c5e:0xc98b64a3
  41fdd3:	or     DWORD PTR [esi],ebp
  41fdd5:	loope  0x41fdb6
  41fdd7:	add    eax,edx
  41fdd9:	add    BYTE PTR [ebx],dh
  41fddb:	dec    ebx
  41fddc:	and    al,0x6
  41fdde:	mov    al,ds:0xa7de28ac
  41fde3:	add    BYTE PTR [ebx-0x4641edd1],ah
  41fde9:	jle    0x41fdfd
  41fdeb:	rcr    DWORD PTR [esp+edx*8],1
  41fdee:	daa    
  41fdef:	loop   0x41fdec
  41fdf1:	enter  0x2ba3,0x1a
  41fdf5:	pusha  
  41fdf6:	or     al,0x1b
  41fdf8:	xor    eax,0x261dd4ed
  41fdfd:	pop    edi
  41fdfe:	je     0x41fe3a
  41fe00:	lods   eax,DWORD PTR ds:[esi]
  41fe01:	push   0x9808d8dc
  41fe06:	cmc    
  41fe07:	cmp    ebx,DWORD PTR [ecx+0x6d]
  41fe0a:	or     al,BYTE PTR [ebx+0x3a9ce351]
  41fe10:	inc    esp
  41fe11:	int    0xc9
  41fe13:	sbb    al,0x33
  41fe15:	fstp   DWORD PTR [edx-0x82bfe04]
  41fe1b:	mov    esp,0xd4eddc40
  41fe20:	xor    BYTE PTR [edi+0x2],al
  41fe23:	imul   ebp,DWORD PTR [eax-0xc],0xaad3da5e
  41fe2a:	call   0xddd5:0xb93122d
  41fe31:	dec    eax
  41fe32:	out    dx,eax
  41fe33:	push   ebx
  41fe34:	das    
  41fe35:	mov    dh,0x49
  41fe37:	jbe    0x41fdcd
  41fe39:	push   cs
  41fe3a:	inc    eax
  41fe3b:	cmp    ecx,esp
  41fe3d:	mov    ds:0x7b6bfa81,al
  41fe42:	cwde   
  41fe43:	sbb    BYTE PTR [edx+0x54be0cb9],dl
  41fe49:	xor    edi,edx
  41fe4b:	or     BYTE PTR [edi],bl
  41fe4d:	adc    eax,0xcd03b746
  41fe52:	push   eax
  41fe53:	cdq    
  41fe54:	repnz stc 
  41fe56:	ficom  DWORD PTR [eax-0x18bc400e]
  41fe5c:	pusha  
  41fe5d:	push   esp
  41fe5e:	add    dl,BYTE PTR [ebp-0x1f]
  41fe61:	xchg   esi,eax
  41fe62:	lods   eax,DWORD PTR ds:[esi]
  41fe63:	frstor [edi]
  41fe65:	aaa    
  41fe66:	push   eax
  41fe67:	push   ecx
  41fe68:	adc    dl,0xeb
  41fe6b:	ds das 
  41fe6d:	sbb    ch,BYTE PTR [esi+0x7f]
  41fe70:	fst    QWORD PTR [ebx]
  41fe72:	add    eax,0xf63de3f6
  41fe77:	pop    ebp
  41fe78:	lea    ebp,[edx+0x5aa98e59]
  41fe7e:	cmp    dh,BYTE PTR [ecx-0x7ae6a715]
  41fe84:	push   ss
  41fe85:	jb     0x41ff02
  41fe87:	in     al,0xe2
  41fe89:	jne    0x41fe7c
  41fe8b:	add    eax,0xfeeb0490
  41fe90:	or     esp,DWORD PTR ds:0x3dec9e4d
  41fe96:	jb     0x41fe7b
  41fe98:	daa    
  41fe99:	mov    es,WORD PTR [eax+0x55b42d17]
  41fe9f:	idiv   DWORD PTR [eax-0x7e604c7]
  41fea5:	and    al,0xa8
  41fea7:	add    al,0xf7
  41fea9:	jecxz  0x41fe66
  41feab:	ins    BYTE PTR es:[edi],dx
  41feac:	sub    al,0x17
  41feae:	aas    
  41feaf:	pop    esi
  41feb0:	add    eax,0x90614654
  41feb5:	or     al,0xd6
  41feb7:	xor    DWORD PTR [edx-0xa],ebx
  41feba:	dec    ebp
  41febb:	add    BYTE PTR [ecx-0x6b36a2],ch
  41fec1:	xchg   edi,eax
  41fec2:	std    
  41fec3:	jg     0x41fecf
  41fec5:	in     al,0x99
  41fec7:	pop    ecx
  41fec8:	jnp    0x41fe99
  41feca:	pop    ecx
  41fecb:	xor    bh,BYTE PTR [esi]
  41fecd:	jnp    0x41fed0
  41fecf:	add    BYTE PTR [edi-0x38fffffe],al
  41fed5:	xor    eax,0x8fb6c603
  41feda:	xchg   ebp,eax
  41fedb:	pushf  
  41fedc:	imul   ebp,DWORD PTR cs:[edi],0xe79b6b7f
  41fee3:	daa    
  41fee4:	mov    eax,0x1366256f
  41fee9:	pop    edx
  41feea:	mov    dl,0x76
  41feec:	or     BYTE PTR [ebx+0xc],0x75
  41fef0:	sub    esp,edi
  41fef2:	aam    0x21
  41fef4:	jg     0x41fee3
  41fef6:	cmp    esi,DWORD PTR [eax+edi*8+0xb]
  41fefa:	add    eax,0x3fb47520
  41feff:	mov    bl,0x51
  41ff01:	stos   BYTE PTR es:[edi],al
  41ff02:	or     ecx,DWORD PTR es:[esi-0x5809b9b1]
  41ff09:	adc    ah,BYTE PTR [ebp-0x79cab4b1]
  41ff0f:	add    eax,0x71dc8d50
  41ff14:	(bad)  
  41ff15:	mov    eax,0x2411c016
  41ff1a:	loop   0x41fed6
  41ff1c:	dec    ecx
  41ff1d:	jge    0x41ff24
  41ff1f:	mov    ebx,0xa74265a2
  41ff24:	pop    es
  41ff25:	xchg   ebx,eax
  41ff26:	mov    al,0xfb
  41ff28:	popf   
  41ff29:	fisub  WORD PTR [edx+0x3c4f5a00]
  41ff2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff30:	inc    edx
  41ff31:	pop    edx
  41ff32:	test   DWORD PTR [ecx+0x3657f4fc],edx
  41ff38:	hlt    
  41ff39:	pop    esi
  41ff3a:	and    ecx,edi
  41ff3c:	push   0x31d6a587
  41ff41:	mov    ebx,0xece88e78
  41ff46:	fst    DWORD PTR [ebx+ebp*2]
  41ff49:	mov    ss,WORD PTR [ecx]
  41ff4b:	outs   dx,DWORD PTR ds:[esi]
  41ff4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff4e:	hlt    
  41ff4f:	call   0x7224:0xbb5bf408
  41ff56:	mov    dl,0x70
  41ff58:	inc    esi
  41ff59:	cmp    esi,DWORD PTR [ecx-0x47]
  41ff5c:	test   eax,0x688849e3
  41ff61:	push   ecx
  41ff62:	mov    bl,0x1
  41ff64:	or     al,0xfa
  41ff66:	out    dx,eax
  41ff67:	push   ecx
  41ff68:	push   ds
  41ff69:	rol    DWORD PTR [edx+0x6e2c8f7a],cl
  41ff6f:	jge    0x41ffb0
  41ff71:	push   ebp
  41ff72:	loopne 0x41ffb2
  41ff74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff75:	jnp    0x41ffbf
  41ff77:	out    0xb8,eax
  41ff79:	loopne 0x41ff16
  41ff7b:	fcmovu st,st(0)
  41ff7d:	xchg   ebp,eax
  41ff7e:	sub    BYTE PTR [ecx-0x3bce1917],0x91
  41ff85:	jmp    0xab00:0x29339d4b
  41ff8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff8d:	rcl    BYTE PTR [edx-0x48c03461],1
  41ff93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff94:	jne    0x41ffb4
  41ff96:	push   ss
  41ff97:	sbb    eax,0x974a9a1c
  41ff9c:	rcr    bl,cl
  41ff9e:	push   edx
  41ff9f:	retf   0x287d
  41ffa2:	stos   DWORD PTR es:[edi],eax
  41ffa3:	or     al,0x4a
  41ffa5:	je     0x41ff77
  41ffa7:	xor    al,0x56
  41ffa9:	cdq    
  41ffaa:	xchg   edi,eax
  41ffab:	stos   BYTE PTR es:[edi],al
  41ffac:	repnz lahf 
  41ffae:	out    dx,al
  41ffaf:	into   
  41ffb0:	fnstcw WORD PTR [edx+ebx*2-0x2bd09749]
  41ffb7:	test   edx,0x27683c71
  41ffbd:	das    
  41ffbe:	pop    edx
  41ffbf:	scas   eax,DWORD PTR es:[edi]
  41ffc0:	sbb    esp,eax
  41ffc2:	cmp    cl,ah
  41ffc4:	retf   
  41ffc5:	ss push cs
  41ffc7:	mov    cl,0x9
  41ffc9:	xor    DWORD PTR [esi+0x32],0xfffffff3
  41ffcd:	xchg   DWORD PTR [ebp+0x4d],ecx
  41ffd0:	push   ebx
  41ffd1:	xor    DWORD PTR [ebp-0x3ac3d2a6],edi
  41ffd7:	fisttp QWORD PTR [edi-0x1f]
  41ffda:	repz hlt 
  41ffdc:	pop    esi
  41ffdd:	mov    ecx,0x3a0af9d0
  41ffe2:	rep lods eax,DWORD PTR ds:[esi]
  41ffe4:	and    al,0xdb
  41ffe6:	aad    0xf8
  41ffe8:	stos   BYTE PTR es:[edi],al
  41ffe9:	(bad)
  41ffec:	sti    
  41ffed:	imul   ebp,DWORD PTR [ecx],0x63
  41fff0:	and    BYTE PTR [esi-0x10],ch
  41fff3:	xor    edi,esp
  41fff5:	adc    al,0x4c
  41fff7:	xor    BYTE PTR [ecx+0x12],cl
  41fffa:	add    DWORD PTR [ecx+0x2f],ebx
  41fffd:	jne    0x420073
  41ffff:	add    esi,DWORD PTR [ebx+edx*1]
  420002:	push   ds
  420003:	test   al,0x2b
  420005:	jmp    0x48bebdf2
  42000a:	outs   dx,DWORD PTR ds:[esi]
  42000b:	mov    edi,fs
  42000d:	cwde   
  42000e:	inc    ebp
  42000f:	or     DWORD PTR [edx+0x59eadf06],esp
  420015:	adc    dh,BYTE PTR ds:0x8be5be65
  42001b:	inc    ebp
  42001c:	ror    BYTE PTR [edx+0x49],0x1e
  420020:	mov    ebp,DWORD PTR [edx+0x22]
  420023:	fdivr  DWORD PTR [ebx+0x5f]
  420026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420027:	cmovne ebp,DWORD PTR [ecx+ecx*4]
  42002b:	dec    esp
  42002c:	imul   eax,DWORD PTR [ebx+ebp*8-0x44],0x42113aac
  420034:	add    al,ch
  420036:	jecxz  0x420028
  420038:	add    eax,0xcc1e53e2
  42003d:	loop   0x420060
  42003f:	push   0x8108ecf6
  420044:	push   esi
  420045:	ds mov cl,0x4f
  420048:	jae    0x42001a
  42004a:	dec    esp
  42004b:	popf   
  42004c:	aam    0xef
  42004e:	mov    ebp,0xab4216b4
  420053:	xchg   BYTE PTR [esi+esi*2-0x77],cl
  420057:	adc    BYTE PTR [ecx],ch
  420059:	push   esi
  42005a:	mov    ecx,0x345a2c3c
  42005f:	push   0x33
  420061:	or     cl,BYTE PTR [ebx-0x72f5a487]
  420067:	clc    
  420068:	xchg   ecx,eax
  420069:	dec    edi
  42006a:	pop    ss
  42006b:	and    bh,BYTE PTR es:[ebp+eiz*4+0x5f]
  420070:	jae    0x42001c
  420072:	jmp    0x4200c8
  420074:	pop    esp
  420075:	jbe    0x4200ad
  420077:	xor    DWORD PTR [eax+ebx*8+0x3d791158],ebx
  42007e:	mov    bh,0x4a
  420080:	hlt    
  420081:	jo     0x4200f5
  420083:	pop    ecx
  420084:	retf   
  420085:	xor    dh,BYTE PTR [edx+0x1b]
  420088:	fnstsw WORD PTR [eax+0x2dd4b694]
  42008e:	xchg   edi,eax
  42008f:	imul   esp,DWORD PTR [ecx],0xda113378
  420095:	lahf   
  420096:	cmp    edi,DWORD PTR [eax-0x3a1fe973]
  42009c:	mov    WORD PTR [ecx+0x7929b706],fs
  4200a2:	xor    BYTE PTR [esi+eiz*8+0x22],al
  4200a6:	adc    al,0xf8
  4200a8:	add    DWORD PTR ds:0xeecb13,0x0
  4200af:	stos   DWORD PTR es:[edi],eax
  4200b0:	pop    eax
  4200b1:	xchg   ecx,eax
  4200b2:	xor    ch,cl
  4200b4:	and    al,0xaa
  4200b6:	pushf  
  4200b7:	lods   eax,DWORD PTR ds:[esi]
  4200b8:	xlat   BYTE PTR ds:[ebx]
  4200b9:	jb     0x42010b
  4200bb:	ins    DWORD PTR es:[edi],dx
  4200bc:	sub    DWORD PTR [edi+esi*1+0xe],eax
  4200c0:	mov    ?,WORD PTR [ebp-0x77]
  4200c3:	shl    BYTE PTR [eax+ebx*2],1
  4200c6:	cmp    bl,dh
  4200c8:	push   cs
  4200c9:	xor    DWORD PTR cs:[esi+0x5c],eax
  4200cd:	dec    eax
  4200ce:	das    
  4200cf:	inc    eax
  4200d0:	mov    ecx,ecx
  4200d2:	aaa    
  4200d3:	retf   
  4200d4:	inc    edi
  4200d5:	cld    
  4200d6:	lods   al,BYTE PTR ds:[esi]
  4200d7:	xor    dl,al
  4200d9:	ret    
  4200da:	sub    eax,0x49ea6cea
  4200df:	mov    bl,0x5c
  4200e1:	mov    eax,0xd6df5ac3
  4200e6:	fdivr  DWORD PTR [edx]
  4200e8:	pop    esp
  4200e9:	mov    cl,0x51
  4200eb:	pop    es
  4200ec:	mov    ecx,0xff21b6f3
  4200f1:	ins    DWORD PTR es:[edi],dx
  4200f2:	inc    BYTE PTR [edx]
  4200f4:	ss pop esp
  4200f6:	cs mov dh,0xbc
  4200f9:	ins    DWORD PTR es:[edi],dx
  4200fa:	in     eax,dx
  4200fb:	pop    edx
  4200fc:	sbb    eax,0x178727d5
  420101:	xchg   esi,eax
  420102:	inc    edx
  420103:	lods   eax,DWORD PTR ds:[esi]
  420104:	pop    edi
  420105:	into   
  420106:	mov    BYTE PTR [edx-0xc09646c],bl
  42010c:	pop    es
  42010d:	shr    DWORD PTR [edx-0x50432fb9],cl
  420113:	(bad)  
  420116:	and    al,0xd3
  420118:	inc    ebp
  420119:	mov    al,ds:0xb5a6194
  42011e:	ins    DWORD PTR es:[edi],dx
  42011f:	push   ebp
  420120:	stos   BYTE PTR es:[edi],al
  420121:	jae    0x4200e0
  420123:	xor    eax,0x398d55d5
  420128:	call   0x2578efab
  42012d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42012e:	mov    ebp,0xa702c80c
  420133:	fprem  
  420135:	mov    esp,0x882cf3ac
  42013a:	or     cl,BYTE PTR [esi+0x3ee320ea]
  420140:	xor    DWORD PTR [edx],esp
  420142:	pop    edi
  420143:	out    dx,eax
  420144:	and    al,0x79
  420146:	les    ecx,FWORD PTR [esi+0x3e]
  420149:	push   esi
  42014a:	push   ecx
  42014b:	fstp   QWORD PTR [edi+ebp*2]
  42014e:	inc    ebx
  42014f:	jmp    0x420185
  420151:	arpl   WORD PTR [ebp+0xb],dx
  420154:	lahf   
  420155:	mov    ds:0x1b1212b0,al
  42015a:	push   edx
  42015b:	add    BYTE PTR [ebx+0x7d7539cf],bh
  420161:	idiv   edi
  420163:	iret   
  420164:	std    
  420165:	mov    ecx,DWORD PTR [esi+0x3477e20f]
  42016b:	jg     0x420132
  42016d:	jge    0x420170
  42016f:	add    BYTE PTR [edi-0x6fffffe],al
  420175:	and    eax,DWORD PTR [ebp+0x46d6e5b2]
  42017b:	es loopne 0x4201b4
  42017e:	sbb    eax,0x386fbcc8
  420183:	add    DWORD PTR [eax],edi
  420185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420186:	(bad)  
  420187:	sub    eax,DWORD PTR [edi]
  420189:	retf   
  42018a:	and    DWORD PTR [edi],edx
  42018c:	ss or  eax,0xa0cfdddd
  420192:	xchg   DWORD PTR [bx+0x63],edi
  420196:	jb     0x4201ba
  420198:	sub    bh,BYTE PTR [esi-0x78]
  42019b:	(bad)  
  42019c:	jle    0x4201d0
  42019e:	fidiv  DWORD PTR [esi+edx*2-0x44095742]
  4201a5:	xchg   BYTE PTR [edi+0x16e31ec8],ch
  4201ab:	ja     0x4201c1
  4201ad:	mov    esp,0xea851877
  4201b2:	scas   al,BYTE PTR es:[edi]
  4201b3:	jno    0x42016e
  4201b5:	mov    gs,WORD PTR fs:[ebx-0x2d]
  4201b9:	mov    dl,0xc6
  4201bb:	mov    esi,0x6d81aab2
  4201c0:	sahf   
  4201c1:	call   0xa21376dd
  4201c6:	in     eax,0x83
  4201c8:	adc    eax,0x48d71f46
  4201cd:	imul   eax,DWORD PTR [ecx+ecx*1],0xffffffd2
  4201d1:	add    al,BYTE PTR [edx+0x36e0ddd3]
  4201d7:	into   
  4201d8:	mov    ah,0xfc
  4201da:	rcl    BYTE PTR [ebx+0x5a5c2da8],0xc2
  4201e1:	hlt    
  4201e2:	fmul   DWORD PTR [edx-0x40]
  4201e5:	and    al,0xc0
  4201e7:	rcl    BYTE PTR [ecx],cl
  4201e9:	jns    0x420255
  4201eb:	clc    
  4201ec:	int    0xaf
  4201ee:	pop    esp
  4201ef:	or     BYTE PTR [ebp-0x4e02ef8b],cl
  4201f5:	(bad)  
  4201f6:	fwait
  4201f7:	mov    BYTE PTR [ebp+0x38],cl
  4201fa:	inc    edx
  4201fb:	pop    ecx
  4201fc:	cs sub al,0x48
  4201ff:	push   esp
  420200:	sar    BYTE PTR [eax+0x9735d2],1
  420206:	sub    esi,DWORD PTR [ecx]
  420208:	rcr    BYTE PTR [edi],0xf3
  42020b:	sbb    DWORD PTR [ebp+0x3c2351e0],esi
  420211:	adc    eax,0x9bdda6cb
  420216:	push   ebp
  420217:	int3   
  420218:	mov    WORD PTR [edi-0x8],es
  42021b:	xor    BYTE PTR [edi-0x95be4e2],dh
  420221:	dec    edx
  420222:	(bad)  
  420223:	jns    0x420253
  420225:	pushf  
  420226:	in     eax,0xce
  420228:	sbb    al,0x1a
  42022a:	repz mov dl,0xd5
  42022d:	jno    0x42020d
  42022f:	mov    eax,ds:0x18a5c7ab
  420234:	xor    al,0xd3
  420236:	mov    ecx,0xdc8b9db2
  42023b:	scas   eax,DWORD PTR es:[edi]
  42023c:	int3   
  42023d:	mov    eax,DWORD PTR [ebx]
  42023f:	inc    ebx
  420240:	fs inc esi
  420242:	clc    
  420243:	xor    al,0x1a
  420245:	dec    esp
  420246:	popa   
  420247:	sub    al,0xc6
  420249:	push   edx
  42024a:	mov    eax,ds:0xae0973e9
  42024f:	test   al,0x7b
  420251:	sub    dh,BYTE PTR [ebp-0x2]
  420254:	iret   
  420255:	jmpw   0xda4e
  420259:	out    dx,eax
  42025a:	push   0x4d044202
  42025f:	ret    
  420260:	out    0x55,eax
  420262:	mov    eax,0xc1dc171f
  420267:	xor    BYTE PTR [edi+0x1d],dh
  42026a:	inc    ebx
  42026b:	lods   eax,DWORD PTR ds:[esi]
  42026c:	inc    eax
  42026d:	sub    eax,0x66d97c03
  420272:	xlat   BYTE PTR ds:[ebx]
  420273:	push   esp
  420274:	test   al,0x1e
  420276:	jecxz  0x4202a4
  420278:	mov    esp,0xf0b4383d
  42027d:	mov    edx,0x80f5b493
  420282:	push   es
  420283:	into   
  420284:	cwde   
  420285:	dec    edx
  420286:	stc    
  420287:	push   0xa3cbbeae
  42028c:	pop    edx
  42028d:	sbb    BYTE PTR [esi],dl
  42028f:	repz int 0x32
  420292:	cmp    bh,BYTE PTR [edi-0x6ac6bdba]
  420298:	xchg   DWORD PTR [esi-0x4538ed68],ebp
  42029e:	push   ebx
  42029f:	jle    0x420252
  4202a1:	les    ebx,FWORD PTR [esi-0x6a842d55]
  4202a7:	xlat   BYTE PTR ds:[ebx]
  4202a8:	sbb    ecx,ebp
  4202aa:	rol    DWORD PTR [eax-0x676f6862],0x1a
  4202b1:	or     BYTE PTR [ebx+0xd],dh
  4202b4:	out    0x3b,eax
  4202b6:	mov    dh,0x20
  4202b8:	or     cl,BYTE PTR [eax-0x24336518]
  4202be:	push   ebx
  4202bf:	xor    bl,cl
  4202c1:	mov    edx,0xfba72b10
  4202c6:	ret    0x6f01
  4202c9:	pop    edx
  4202ca:	adc    DWORD PTR [edi+ebx*8+0x6008ce5c],esp
  4202d1:	clc    
  4202d2:	and    ch,BYTE PTR [ebx-0x1bff5c40]
  4202d8:	(bad)  
  4202d9:	fisttp DWORD PTR [eax-0x11e18110]
  4202df:	das    
  4202e0:	pop    ecx
  4202e1:	mov    esi,0x905a3c2b
  4202e6:	loop   0x42026b
  4202e8:	shr    BYTE PTR [ebx+esi*8],cl
  4202eb:	or     al,0x4f
  4202ed:	repnz adc DWORD PTR fs:[edx],0x54
  4202f2:	fs into 
  4202f4:	sahf   
  4202f5:	ins    DWORD PTR es:[edi],dx
  4202f6:	outs   dx,DWORD PTR ds:[esi]
  4202f7:	adc    BYTE PTR [ecx-0x61],dl
  4202fa:	cld    
  4202fb:	retf   0xd97e
  4202fe:	push   edx
  4202ff:	not    DWORD PTR [edx-0x1e77aabe]
  420305:	xchg   ebx,eax
  420306:	jmp    0x5da4030c
  42030b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42030c:	add    DWORD PTR [ecx],edi
  42030e:	xchg   ebx,eax
  42030f:	push   ss
  420310:	aaa    
  420311:	adc    BYTE PTR [ebx+0x2],ch
  420314:	and    ch,BYTE PTR [ecx]
  420316:	jle    0x420369
  420318:	xchg   edx,esp
  42031a:	and    al,0x44
  42031c:	(bad)  
  42031d:	dec    ebx
  42031e:	enter  0xe210,0x75
  420322:	loop   0x42032f
  420324:	cmp    DWORD PTR [eax-0x780f06a3],0xffffff87
  42032b:	dec    edi
  42032c:	mov    al,0xf7
  42032e:	xor    eax,0xb938a49c
  420333:	loope  0x4203a9
  420335:	das    
  420336:	inc    esi
  420337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420338:	jle    0x4202cb
  42033a:	or     al,0xaa
  42033c:	mov    bh,0xa1
  42033e:	mov    ds:0x15adc644,eax
  420343:	mov    al,BYTE PTR ss:[esi]
  420346:	jo     0x42038c
  420348:	mov    WORD PTR [edx+0x66],ds
  42034b:	out    dx,eax
  42034c:	ror    BYTE PTR [ecx+esi*1+0x6cf6e94],0x97
  420354:	xor    DWORD PTR [esi+esi*4+0x242dfca3],0xffffffcc
  42035c:	add    BYTE PTR [ebp+0x5d3bde80],dh
  420362:	push   eax
  420363:	aaa    
  420364:	inc    esi
  420365:	(bad)  
  420366:	call   0xb706:0x67ca2aa5
  42036d:	sub    edx,DWORD PTR [edi+eax*1-0x5c]
  420371:	ins    DWORD PTR es:[edi],dx
  420372:	fist   WORD PTR [eax+0x43077fe3]
  420378:	pop    ebp
  420379:	fcom   DWORD PTR [esi-0x659bf302]
  42037f:	retf   0x99df
  420382:	inc    ebx
  420383:	(bad)  
  420384:	into   
  420385:	aas    
  420386:	imul   edi,DWORD PTR [edi-0x692d1c57],0x9fd8c459
  420390:	gs stc 
  420392:	scas   al,BYTE PTR es:[edi]
  420393:	jb     0x42032a
  420395:	mov    eax,0x9b3900cc
  42039a:	pop    edi
  42039b:	xor    al,0x76
  42039d:	dec    dh
  42039f:	xchg   esi,eax
  4203a0:	mov    ecx,0xf595332d
  4203a5:	out    0x1b,eax
  4203a7:	xadd   BYTE PTR [ebp-0x66],ah
  4203ab:	dec    ebx
  4203ac:	sub    esi,esp
  4203ae:	inc    esp
  4203af:	(bad)  
  4203b0:	aaa    
  4203b1:	fwait
  4203b2:	repnz rol dh,cl
  4203b5:	out    0x32,eax
  4203b7:	repz shr BYTE PTR [eax-0x24],cl
  4203bb:	inc    edi
  4203bc:	jnp    0x420414
  4203be:	gs pop edx
  4203c0:	dec    edx
  4203c1:	cmp    ch,BYTE PTR [esi-0x5e]
  4203c4:	or     DWORD PTR [ebx-0xc],ebx
  4203c7:	push   0x16c7f48a
  4203cc:	aam    0xcf
  4203ce:	clc    
  4203cf:	push   dx
  4203d1:	call   0xdf:0xaffeb567
  4203d8:	shl    DWORD PTR [edx+0x3b],cl
  4203db:	inc    esp
  4203dc:	xchg   ebp,eax
  4203dd:	fmul   st,st(7)
  4203df:	push   edx
  4203e0:	xchg   ebp,eax
  4203e1:	push   cs
  4203e2:	sbb    ebp,DWORD PTR [esi+0x2144422d]
  4203e8:	dec    ecx
  4203e9:	mov    esp,0xef2c8128
  4203ee:	cmp    BYTE PTR [edi],0x52
  4203f1:	stos   BYTE PTR es:[edi],al
  4203f2:	cmc    
  4203f3:	pop    ds
  4203f4:	int    0x52
  4203f6:	jg     0x420401
  4203f8:	aad    0xba
  4203fa:	mov    DWORD PTR [eax],0x2d9dc2ee
  420400:	mov    ebp,0x3fc3fe7f
  420405:	out    dx,eax
  420406:	mov    edi,0x3a46b637
  42040b:	dec    ebx
  42040c:	dec    esp
  42040d:	add    BYTE PTR [ecx],0x0
  420410:	xchg   DWORD PTR [edx],eax
  420412:	add    BYTE PTR [eax],al
  420414:	or     eax,0xda1d028c
  420419:	jnp    0x420472
  42041b:	pusha  
  42041c:	test   eax,0xa5430599
  420421:	ror    ah,0xe7
  420424:	xor    al,0xe4
  420426:	mov    ds:0x81f465e6,eax
  42042b:	loope  0x4203c0
  42042d:	pop    ecx
  42042e:	xor    DWORD PTR [ecx],esp
  420430:	xchg   ecx,eax
  420431:	es call 0xee8bf558
  420437:	jns    0x42041e
  420439:	push   0x10693344
  42043e:	xchg   ebx,eax
  42043f:	nop
  420440:	mov    eax,DWORD PTR [eax]
  420442:	dec    ebp
  420443:	jne    0x420438
  420445:	shl    BYTE PTR [edx],cl
  420447:	in     eax,dx
  420448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420449:	xchg   esp,eax
  42044a:	and    ecx,ebx
  42044c:	push   ecx
  42044d:	aam    0x77
  42044f:	lahf   
  420450:	ja     0x4203f7
  420452:	sub    BYTE PTR [ecx+0x7c],ah
  420455:	scas   eax,DWORD PTR es:[edi]
  420456:	xchg   ecx,eax
  420457:	or     DWORD PTR [ebx],ecx
  420459:	xor    bh,BYTE PTR [eax]
  42045b:	addr16 call 0x913c:0xab1880e0
  420463:	js     0x420434
  420465:	sbb    al,0x37
  420467:	jb     0x42043f
  420469:	mov    ss:0x45140e4c,eax
  42046f:	cmc    
  420470:	adc    edx,DWORD PTR [esi+eiz*2+0x64]
  420474:	pop    edx
  420475:	pop    ebp
  420476:	cdq    
  420477:	jg     0x4204b5
  420479:	stos   BYTE PTR es:[edi],al
  42047a:	dec    esp
  42047b:	jns    0x42048d
  42047d:	add    ecx,DWORD PTR [edx+0x10a1a383]
  420483:	mov    al,0x88
  420485:	popf   
  420486:	jmp    DWORD PTR [ecx]
  420488:	xchg   ecx,eax
  420489:	jecxz  0x4204e1
  42048b:	fist   WORD PTR [edx]
  42048d:	data16 mov fs,WORD PTR [eax-0x4c5f9c62]
  420494:	sub    bh,ah
  420496:	lock dec edx
  420498:	mov    ds:0x548e925b,al
  42049d:	cmc    
  42049e:	out    0x40,eax
  4204a0:	ja     0x42049a
  4204a2:	das    
  4204a3:	inc    ebp
  4204a4:	in     al,0xdb
  4204a6:	sbb    edi,DWORD PTR [edi+0x52d2ee46]
  4204ac:	push   ss
  4204ad:	pop    ebp
  4204ae:	cdq    
  4204af:	ins    DWORD PTR es:[edi],dx
  4204b0:	mov    bl,0xf4
  4204b2:	or     DWORD PTR [ecx],edi
  4204b4:	push   ecx
  4204b5:	inc    esi
  4204b6:	test   eax,0x5f41442e
  4204bb:	out    dx,eax
  4204bc:	fldln2 
  4204be:	hlt    
  4204bf:	int3   
  4204c0:	shl    BYTE PTR [eax-0x11],0xd2
  4204c4:	popa   
  4204c5:	push   ds
  4204c6:	fimul  WORD PTR ds:0x37f2eeb5
  4204cc:	push   esi
  4204cd:	hlt    
  4204ce:	jno    0x420468
  4204d0:	ins    BYTE PTR es:[edi],dx
  4204d1:	data16 sub bh,BYTE PTR [ebx-0x2f]
  4204d5:	ror    dh,1
  4204d7:	sbb    eax,DWORD PTR [ecx]
  4204d9:	cmp    ecx,ebp
  4204db:	popa   
  4204dc:	cld    
  4204dd:	sbb    al,0x93
  4204df:	xchg   BYTE PTR [ecx-0x28],ah
  4204e2:	out    0xdc,al
  4204e4:	daa    
  4204e5:	mov    bh,BYTE PTR [ecx+0x5c]
  4204e8:	mov    bh,0x5e
  4204ea:	sbb    esp,eax
  4204ec:	test   BYTE PTR [eax+eax*2-0x10],al
  4204f0:	xor    esp,DWORD PTR [eax+0x75ee2413]
  4204f6:	cmp    eax,0xfd279db1
  4204fb:	fstp   QWORD PTR [ecx]
  4204fd:	js     0x420504
  4204ff:	je     0x4204ec
  420501:	jge    0x42049a
  420503:	and    edi,DWORD PTR [ebp+0x114f16ad]
  420509:	lods   al,BYTE PTR ds:[esi]
  42050a:	fidiv  WORD PTR [eax+edx*2-0x5f423f69]
  420511:	add    eax,0x9db0368e
  420516:	pop    edi
  420517:	pop    edx
  420518:	xor    ah,BYTE PTR [ebx+0x24f8a435]
  42051e:	stos   BYTE PTR es:[edi],al
  42051f:	pusha  
  420520:	pop    eax
  420521:	push   0x77d332f1
  420526:	or     ecx,DWORD PTR [ebp+0xf988949]
  42052c:	pop    ebp
  42052d:	fist   WORD PTR [ebx]
  42052f:	retf   0x9d7f
  420532:	mov    dl,0x75
  420534:	push   es
  420535:	sub    al,0xd2
  420537:	or     eax,0x1bf831aa
  42053c:	lahf   
  42053d:	lea    eax,[eax-0x10]
  420540:	pop    esi
  420541:	xchg   BYTE PTR [ebx+0xa],bl
  420544:	mov    eax,0x371b9482
  420549:	or     edx,DWORD PTR [eax-0x60]
  42054c:	mov    ah,0x63
  42054e:	and    DWORD PTR [ebx+0x1e601430],esp
  420554:	dec    ebp
  420555:	fwait
  420556:	push   esi
  420557:	push   es
  420558:	jno    0x4204e4
  42055a:	mov    dh,0x50
  42055c:	shl    DWORD PTR [ebx-0x63],0xe1
  420560:	cmp    ebp,ecx
  420562:	sub    eax,0xdeebda6f
  420567:	push   esp
  420568:	jl     0x42052b
  42056a:	lods   eax,DWORD PTR ds:[esi]
  42056b:	in     al,0x38
  42056d:	inc    esp
  42056e:	add    ebx,DWORD PTR [ecx-0x766c3c82]
  420574:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420575:	fwait
  420576:	mov    edi,0xb1c79bb3
  42057b:	jle    0x4205a3
  42057d:	loop   0x420535
  42057f:	xor    dl,al
  420581:	xchg   BYTE PTR [eax],cl
  420583:	mov    esi,0xd3a65f3a
  420588:	inc    edi
  420589:	outs   dx,DWORD PTR ds:[esi]
  42058a:	mov    cl,0x15
  42058c:	mov    al,0x28
  42058e:	or     ah,BYTE PTR [ebp+0xe]
  420591:	arpl   WORD PTR [edi],si
  420593:	pushf  
  420594:	imul   ebp,DWORD PTR [edi+ecx*2+0x5c],0x33752c8b
  42059c:	(bad)  gs:[edi-0x3ff71c6d]
  4205a3:	cwde   
  4205a4:	mov    edi,0x744179a1
  4205a9:	push   ds
  4205aa:	fs mov edi,0xc824cc31
  4205b0:	cmp    ch,BYTE PTR [esi-0x14]
  4205b3:	out    dx,al
  4205b4:	dec    ecx
  4205b5:	jo     0x4205c3
  4205b7:	and    al,0x6b
  4205b9:	(bad)  
  4205ba:	xchg   ecx,eax
  4205bb:	stc    
  4205bc:	and    eax,0x7969559f
  4205c1:	fisubr DWORD PTR [ebp+eax*4-0x5b]
  4205c5:	popa   
  4205c6:	push   edx
  4205c7:	mov    ebp,0xee4c0489
  4205cc:	mov    bh,0x8e
  4205ce:	ds push edi
  4205d1:	ret    
  4205d2:	or     bl,bl
  4205d4:	jno    0x4205a9
  4205d6:	nop
  4205d7:	or     dl,bh
  4205d9:	lea    esp,[ecx]
  4205db:	jbe    0x42064b
  4205dd:	call   0xa063:0xe5f05f79
  4205e4:	inc    ecx
  4205e5:	xchg   esp,eax
  4205e6:	add    esp,0x2f02eebd
  4205ec:	stc    
  4205ed:	jp     0x4205a1
  4205ef:	xor    eax,0xcc44e4ab
  4205f4:	(bad)  
  4205f5:	xor    eax,0x71551455
  4205fa:	loopne 0x420651
  4205fc:	in     al,0x9e
  4205fe:	(bad)  
  420600:	mov    dh,0x9b
  420602:	mov    eax,0xf4e46ec0
  420607:	or     ch,bh
  420609:	sahf   
  42060a:	out    0x29,eax
  42060c:	ins    DWORD PTR es:[edi],dx
  42060d:	cdq    
  42060e:	xor    BYTE PTR [eax],dh
  420610:	test   eax,0x2d69e590
  420615:	push   0xffffffea
  420617:	sub    dl,BYTE PTR [ecx]
  420619:	inc    ecx
  42061a:	mov    ebp,0xcaafcefd
  42061f:	into   
  420620:	loope  0x420693
  420622:	pushf  
  420623:	into   
  420624:	pslld  mm5,QWORD PTR [ebx+0x320aa80f]
  42062b:	ja     0x4205c3
  42062d:	mov    edi,0x4db190c9
  420632:	retf   0x67c3
  420635:	mov    ch,0x32
  420637:	push   esi
  420638:	xor    BYTE PTR [eax+0x1caacac4],bh
  42063e:	or     DWORD PTR fs:[ecx+0xcf6f915],edx
  420645:	fisubr DWORD PTR [eax-0xe59d2b6]
  42064b:	stc    
  42064c:	pop    eax
  42064d:	rol    DWORD PTR [ebx-0x21],cl
  420650:	xor    BYTE PTR [edi-0x64],al
  420653:	fdivr  DWORD PTR [eax+0x56]
  420656:	lds    ebx,FWORD PTR [ebx-0x2d9c5c1e]
  42065c:	sti    
  42065d:	in     al,0x6f
  42065f:	jp     0x420691
  420661:	push   eax
  420662:	mov    ah,0xfa
  420664:	std    
  420665:	jg     0x65477ef2
  42066b:	adc    eax,0xac3a586a
  420670:	sub    esi,0xffffffe8
  420673:	rcr    BYTE PTR [edx+ecx*2+0x6d],cl
  420677:	xchg   edi,eax
  420678:	push   es
  420679:	jnp    0x420624
  42067b:	push   ecx
  42067c:	push   0x58
  42067e:	push   ebp
  42067f:	xchg   ecx,eax
  420680:	sub    ebx,DWORD PTR [ebp+0x3f]
  420683:	sub    ch,ch
  420685:	gs xor bl,dl
  420688:	and    eax,esp
  42068a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42068b:	adc    al,0x53
  42068d:	sub    BYTE PTR [esi+eax*2+0x76],bh
  420691:	xchg   esp,eax
  420692:	pop    esp
  420693:	push   cs
  420694:	mov    bh,0xfb
  420696:	pop    ebx
  420697:	sub    DWORD PTR [edx+0x6c],ebp
  42069a:	les    eax,FWORD PTR [eax]
  42069c:	push   ebx
  42069d:	(bad)  
  42069e:	(bad)  
  42069f:	push   esi
  4206a0:	(bad)  
  4206a1:	jle    0x42069e
  4206a3:	xlat   BYTE PTR ds:[ebx]
  4206a4:	outs   dx,DWORD PTR ds:[esi]
  4206a5:	mov    ah,0x77
  4206a7:	call   0x82d3:0x6646f405
  4206ae:	add    DWORD PTR [eax],eax
  4206b0:	xchg   DWORD PTR [edx],eax
  4206b2:	add    BYTE PTR [eax],al
  4206b4:	test   eax,0x234e3ad4
  4206b9:	and    BYTE PTR [ecx-0x32],al
  4206bc:	outs   dx,BYTE PTR ds:[esi]
  4206bd:	pop    es
  4206be:	into   
  4206bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206c0:	repz xor ebp,DWORD PTR [ecx]
  4206c3:	ficomp WORD PTR [ecx+0x7e940b5b]
  4206c9:	lock sub eax,0xb61460e5
  4206cf:	pop    ds
  4206d0:	add    al,0x92
  4206d2:	les    eax,FWORD PTR [ebp+0xc]
  4206d5:	out    0x31,al
  4206d7:	lahf   
  4206d8:	cmp    ebx,DWORD PTR [edi+ebp*8+0x7e7fcb6a]
  4206df:	push   ebp
  4206e0:	cli    
  4206e1:	xchg   BYTE PTR [ebx],al
  4206e3:	rcl    DWORD PTR [ebx-0x3c],cl
  4206e6:	loopne 0x42066e
  4206e8:	mov    bl,BYTE PTR [edi]
  4206ea:	push   ss
  4206eb:	add    ebx,DWORD PTR [ebx+0x74]
  4206ee:	adc    eax,0x110de418
  4206f3:	popf   
  4206f4:	xor    eax,0x8f1aafd0
  4206f9:	gs or  eax,0x9cac2f73
  4206ff:	sub    ch,BYTE PTR [ecx+edx*1+0x78]
  420703:	fwait
  420704:	ret    0x7438
  420707:	lds    esi,FWORD PTR ds:0xbd90f349
  42070d:	cmp    eax,0xf1fb06a2
  420712:	pop    ds
  420713:	and    eax,0xc6614adb
  420718:	dec    esi
  420719:	xlat   BYTE PTR ds:[ebx]
  42071a:	fld    QWORD PTR [esi]
  42071c:	sar    BYTE PTR [esi-0x71f4ad54],cl
  420722:	retf   
  420723:	es out 0x7d,al
  420726:	jnp    0x420748
  420728:	clc    
  420729:	lahf   
  42072a:	cmc    
  42072b:	add    ecx,DWORD PTR [edi]
  42072d:	push   ds
  42072e:	or     DWORD PTR [ebp+0x1c],edx
  420731:	out    dx,eax
  420732:	add    edx,esp
  420734:	jnp    0x42078c
  420736:	repz imul ebp,DWORD PTR [eax-0x44fc5a41],0xffffffc7
  42073e:	xchg   edx,eax
  42073f:	std    
  420740:	jmp    0x4746cf24
  420745:	jo     0x4206f8
  420747:	fst    QWORD PTR [eax+0x24]
  42074a:	and    BYTE PTR [ebx-0x20c340e],ah
  420750:	adc    al,0x41
  420752:	push   0x7dcb5270
  420757:	iret   
  420758:	jecxz  0x4206eb
  42075a:	dec    edi
  42075b:	aad    0xaa
  42075d:	in     al,0x4d
  42075f:	inc    esp
  420760:	xchg   ecx,eax
  420761:	fisubr WORD PTR ds:0xa8b07e56
  420767:	dec    edx
  420768:	pop    ss
  420769:	fwait
  42076a:	inc    edi
  42076b:	(bad)  
  42076c:	xchg   esi,eax
  42076d:	inc    esp
  42076e:	add    al,0xc4
  420770:	pop    eax
  420771:	push   0x23c94b94
  420776:	mov    esp,0xc9bee675
  42077b:	sbb    esp,edx
  42077d:	loop   0x4207cb
  42077f:	outs   dx,BYTE PTR ds:[esi]
  420780:	or     eax,0xce609864
  420785:	call   0xeb7b:0xe0516106
  42078c:	retf   0x77ce
  42078f:	mov    bl,0xa9
  420791:	jb     0x42071b
  420793:	ja     0x4207fa
  420795:	push   0x7f
  420797:	imul   eax,DWORD PTR [edi-0x4f],0xfffffff2
  42079b:	mov    bh,0x4e
  42079d:	lods   eax,DWORD PTR ds:[esi]
  42079e:	push   ds
  42079f:	jmp    0x4207c4
  4207a1:	xlat   BYTE PTR ds:[ebx]
  4207a2:	push   eax
  4207a3:	cli    
  4207a4:	add    eax,0x607f7d7f
  4207a9:	loope  0x42076e
  4207ab:	jmp    0xe234:0x3a71d514
  4207b2:	cld    
  4207b3:	shr    BYTE PTR [ecx-0x4afd3d83],1
  4207b9:	mov    ebx,0x54cec58
  4207be:	cmp    bh,BYTE PTR [edi-0x409ea368]
  4207c4:	(bad)  
  4207c5:	or     ecx,DWORD PTR [edi+0x13eeba7d]
  4207cb:	enter  0x92c,0xd7
  4207cf:	call   0x42cf:0x58ca95f0
  4207d6:	ret    
  4207d7:	xchg   BYTE PTR [ecx-0x3e],bl
  4207da:	push   esp
  4207db:	inc    edx
  4207dc:	imul   DWORD PTR [edx-0x53]
  4207df:	shl    BYTE PTR [esi],cl
  4207e1:	adc    al,0x6b
  4207e3:	arpl   bp,bx
  4207e5:	shl    DWORD PTR [eax+esi*2+0x40],cl
  4207e9:	push   ecx
  4207ea:	dec    edi
  4207eb:	or     ch,BYTE PTR ds:[ecx+0x56]
  4207ef:	inc    eax
  4207f0:	pop    ds
  4207f1:	sbb    al,BYTE PTR [ecx-0x7273c460]
  4207f7:	ficomp DWORD PTR [esi-0x1a]
  4207fa:	xor    esp,DWORD PTR [edi-0x6d22f0fb]
  420800:	xchg   ebx,eax
  420801:	inc    edi
  420802:	clc    
  420803:	test   eax,0x5b524ccc
  420808:	sbb    al,BYTE PTR [esp+eiz*2-0x61cbdef4]
  42080f:	aaa    
  420810:	nop
  420811:	hlt    
  420812:	xchg   ebp,eax
  420813:	inc    ebp
  420814:	scas   al,BYTE PTR es:[edi]
  420815:	jmp    0x4207a6
  420817:	or     DWORD PTR [ecx+0x45e005b6],ebp
  42081d:	ret    
  42081e:	jg     0x4207ec
  420820:	shr    DWORD PTR [edx],cl
  420822:	push   0xab91e177
  420827:	ins    BYTE PTR es:[edi],dx
  420828:	dec    eax
  420829:	push   ss
  42082a:	add    dx,sp
  42082d:	xchg   esp,eax
  42082e:	sub    ch,BYTE PTR [esi]
  420830:	sar    BYTE PTR [ebp-0xd],1
  420833:	imul   ecx,eax,0xfaa1af13
  420839:	and    ch,BYTE PTR [eax+0x41a3dfbf]
  42083f:	mov    ds,ebp
  420841:	adc    ecx,DWORD PTR [esi-0x6f6a5a2f]
  420847:	mov    dh,0x11
  420849:	dec    ebx
  42084a:	mov    BYTE PTR [ebp-0x8],bh
  42084d:	test   eax,0x5977e5f7
  420852:	or     DWORD PTR [ebp-0x798609ac],edx
  420858:	(bad)  
  420859:	lods   eax,DWORD PTR ds:[si]
  42085b:	adc    dl,BYTE PTR [eax]
  42085d:	sahf   
  42085e:	mov    edi,0xd9fbeb8c
  420863:	dec    esp
  420864:	and    DWORD PTR [ecx+esi*2+0x44],edx
  420868:	and    al,0x97
  42086a:	pop    es
  42086b:	jge    0x42080b
  42086d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42086e:	inc    edi
  42086f:	dec    esi
  420870:	inc    ecx
  420871:	push   ds
  420872:	jbe    0x420893
  420874:	cld    
  420875:	xchg   bx,ax
  420877:	stos   DWORD PTR es:[edi],eax
  420878:	xchg   edx,eax
  420879:	pushf  
  42087a:	rcr    ch,1
  42087c:	std    
  42087d:	iret   
  42087e:	and    esi,DWORD PTR [ecx+ebx*2+0x741ddc49]
  420885:	xlat   BYTE PTR ds:[ebx]
  420886:	dec    ebx
  420887:	add    al,0xf4
  420889:	aas    
  42088a:	push   ebp
  42088b:	pop    es
  42088c:	mov    edx,0x29052b83
  420891:	or     edx,DWORD PTR [ebx]
  420893:	shl    BYTE PTR [ebx+0x53ba7993],1
  420899:	leave  
  42089a:	cli    
  42089b:	loopne 0x4208d6
  42089d:	cmp    BYTE PTR [edx],al
  42089f:	dec    eax
  4208a0:	add    BYTE PTR [ebx],cl
  4208a2:	push   ss
  4208a3:	cwde   
  4208a4:	pop    eax
  4208a5:	cs ss retf 0x34bb
  4208aa:	ds pop edx
  4208ac:	dec    eax
  4208ad:	mov    BYTE PTR [edi+eiz*8],dl
  4208b0:	mov    bl,0x8d
  4208b2:	mov    edx,0xdbb898f7
  4208b7:	mov    ds,esp
  4208b9:	les    ecx,FWORD PTR [ebx+0x6a]
  4208bc:	and    ch,BYTE PTR [edx+0x753f6681]
  4208c2:	mov    dl,0x74
  4208c4:	clc    
  4208c5:	enter  0xd124,0xcf
  4208c9:	cvttps2pi mm0,xmm3
  4208cc:	in     al,dx
  4208cd:	adc    esi,DWORD PTR [edx-0x51d0661b]
  4208d3:	rcpps  xmm7,XMMWORD PTR [eax-0x67]
  4208d7:	mov    ?,esp
  4208d9:	inc    esp
  4208da:	test   BYTE PTR ds:0x7be8a2f4,dh
  4208e0:	sbb    esi,0xffffffcf
  4208e3:	mov    ecx,0x3f680807
  4208e8:	cmp    DWORD PTR [ebx+0x1a],esp
  4208eb:	stc    
  4208ec:	mov    dh,BYTE PTR [ebx]
  4208ee:	sbb    dh,al
  4208f0:	mov    esi,0x13f9dca4
  4208f5:	jns    0x420964
  4208f7:	mov    ah,0xd6
  4208fa:	push   ebx
  4208fb:	cmp    al,0xf
  4208fd:	mov    al,ds:0x7fd94584
  420902:	jnp    0x42089e
  420904:	fdivr  st,st(4)
  420906:	inc    edx
  420907:	adc    al,0x27
  420909:	shl    DWORD PTR [ebx-0x1b064e23],0xfb
  420910:	sbb    bl,BYTE PTR [ecx-0x510956cb]
  420916:	mov    edi,0x2ab69527
  42091b:	xchg   esi,eax
  42091c:	push   eax
  42091d:	xor    ebp,DWORD PTR [ecx+0x21]
  420920:	int    0xad
  420922:	mov    WORD PTR [ebx+ecx*8-0x2f],fs
  420926:	and    al,0x3e
  420928:	xor    dh,BYTE PTR [ebx+0xe]
  42092b:	pop    ss
  42092c:	sub    DWORD PTR [edx-0x21987d34],eax
  420932:	pop    es
  420933:	jne    0x4208d0
  420935:	out    0xd4,eax
  420937:	ja     0x42096d
  420939:	xor    edi,DWORD PTR [ebp+0x80e1100]
  42093f:	jmp    0x26af:0xfff3ee1f
  420946:	add    al,0xcf
  420948:	data16 lahf 
  42094a:	sub    edi,DWORD PTR [eax]
  42094c:	pop    edx
  42094d:	test   DWORD PTR [ecx],eax
  42094f:	add    BYTE PTR [edi+0x34000002],al
  420955:	dec    ecx
  420956:	test   eax,0xd5b1e1ae
  42095b:	inc    ebx
  42095c:	sahf   
  42095d:	pop    edi
  42095e:	xor    dh,BYTE PTR [ecx-0x15f1c00c]
  420964:	shl    DWORD PTR [ecx+0x14],1
  420967:	push   ss
  420968:	aas    
  420969:	xchg   edx,eax
  42096a:	loopne 0x420971
  42096c:	mov    eax,ds:0xe93b5ccd
  420971:	out    dx,al
  420972:	dec    edx
  420973:	lahf   
  420974:	(bad)  
  420975:	push   DWORD PTR [ebp-0xc]
  420978:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420979:	ins    BYTE PTR es:[edi],dx
  42097a:	in     al,0x2f
  42097c:	fsubr  QWORD PTR [ebx]
  42097e:	sub    esi,0xfffffffe
  420981:	pop    edi
  420982:	inc    DWORD PTR [esi+0x1d3b400d]
  420988:	pop    es
  420989:	imul   edi,edi,0xffffffbb
  42098c:	add    BYTE PTR [esi-0x5c],0xb0
  420990:	xchg   ebp,eax
  420991:	dec    esi
  420992:	aaa    
  420993:	push   ebp
  420994:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420995:	jnp    0x4209bd
  420997:	fcmovu st,st(2)
  420999:	pop    eax
  42099a:	scas   eax,DWORD PTR es:[edi]
  42099b:	(bad)  
  42099c:	cmp    BYTE PTR [ebp-0x7f],al
  42099f:	inc    ebp
  4209a0:	or     ebx,0xffffffe0
  4209a3:	xchg   esp,eax
  4209a4:	outs   dx,DWORD PTR ds:[esi]
  4209a5:	push   ecx
  4209a6:	arpl   WORD PTR [edx+0x1570a389],dx
  4209ac:	adc    BYTE PTR [ecx-0x5849854c],al
  4209b2:	xlat   BYTE PTR ds:[ebx]
  4209b3:	fld    TBYTE PTR fs:[eax]
  4209b6:	push   ebx
  4209b7:	gs hlt 
  4209b9:	div    DWORD PTR [eax+0x3e]
  4209bc:	jne    0x4209f4
  4209be:	adc    dh,BYTE PTR [ecx]
  4209c0:	out    dx,al
  4209c1:	(bad)  
  4209c2:	jl     0x42097f
  4209c4:	clc    
  4209c5:	mov    ds:0x9982756e,eax
  4209ca:	in     al,0xb7
  4209cc:	loope  0x4209c4
  4209ce:	and    bl,cl
  4209d0:	stc    
  4209d1:	mov    dl,0x63
  4209d3:	jbe    0x4209a7
  4209d5:	out    dx,al
  4209d6:	jbe    0x50ea53e7
  4209dc:	imul   edx,DWORD PTR [bx+di+0x1522],0x3d9c5a9e
  4209e5:	jmp    0xcd22badb
  4209ea:	popa   
  4209eb:	add    BYTE PTR [ecx],bl
  4209ed:	out    dx,al
  4209ee:	cmp    ecx,DWORD PTR [ecx+0x1c]
  4209f1:	mov    edx,0x5b9b53e4
  4209f6:	retf   
  4209f7:	inc    ebp
  4209f8:	or     ebx,DWORD PTR ds:0x388a3741
  4209fe:	out    dx,eax
  4209ff:	(bad)  [eax-0x41]
  420a02:	popf   
  420a03:	sahf   
  420a04:	cmp    DWORD PTR [esi+0x71],ebx
  420a07:	jmp    0x3426:0x16c919f2
  420a0e:	aad    0xc6
  420a10:	push   0x43
  420a12:	dec    ecx
  420a13:	cmc    
  420a14:	scas   eax,DWORD PTR es:[edi]
  420a15:	aaa    
  420a16:	sub    al,0xf2
  420a18:	sar    BYTE PTR [ebp+eax*8-0x33],cl
  420a1c:	push   esp
  420a1d:	not    DWORD PTR [edi-0x173c8330]
  420a23:	cwde   
  420a24:	fld    st(4)
  420a26:	fwait
  420a27:	dec    esi
  420a28:	mov    gs,WORD PTR [ecx+0x3f]
  420a2b:	xor    edx,DWORD PTR [ebp-0x76]
  420a2e:	mov    bh,0x5
  420a30:	push   0xc48701f9
  420a35:	stc    
  420a36:	ja     0x420a20
  420a38:	(bad)  
  420a39:	dec    ebx
  420a3a:	add    ah,BYTE PTR [esi+ebp*8]
  420a3d:	push   eax
  420a3e:	push   edx
  420a3f:	inc    edi
  420a40:	add    BYTE PTR [esi],0xe7
  420a43:	mov    ebx,0x7dcabb4e
  420a48:	je     0x420abf
  420a4a:	aad    0xce
  420a4c:	push   es
  420a4d:	mov    esp,0x3978f3ea
  420a52:	jne    0x420ac3
  420a54:	shr    DWORD PTR [edi+0x3ed40f3e],1
  420a5a:	xchg   esi,eax
  420a5b:	mov    bl,0x2e
  420a5d:	push   esp
  420a5e:	inc    edi
  420a5f:	data16 callw 0xd82
  420a64:	sub    ah,bh
  420a66:	sub    esi,ebx
  420a68:	dec    esp
  420a69:	mov    bh,0x2
  420a6b:	scas   al,BYTE PTR es:[edi]
  420a6c:	fidiv  WORD PTR ds:0xbc9de498
  420a72:	lahf   
  420a73:	and    eax,0x328a7308
  420a78:	mov    eax,ds:0xc4e020e9
  420a7d:	or     al,0x1
  420a7f:	cdq    
  420a80:	dec    edi
  420a81:	xlat   BYTE PTR ds:[ebx]
  420a82:	shr    DWORD PTR ds:0x2e911e22,1
  420a88:	jae    0x420a18
  420a8a:	dec    esp
  420a8b:	and    dh,BYTE PTR [edx-0x5da32cf2]
  420a91:	pop    eax
  420a92:	xlat   BYTE PTR ds:[ebx]
  420a93:	loope  0x420b02
  420a95:	dec    ebx
  420a96:	call   0x6c3a:0xbd8984b0
  420a9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a9e:	push   cs
  420a9f:	dec    esp
  420aa0:	sbb    BYTE PTR [esi+0xd0b66af],cl
  420aa6:	pushw  ss
  420aa8:	(bad)  
  420aa9:	and    eax,0xb4828bfa
  420aae:	cmp    DWORD PTR [ecx],edx
  420ab0:	push   ebx
  420ab1:	daa    
  420ab2:	adc    esi,DWORD PTR [ecx+0x3b]
  420ab5:	or     eax,0x7c7303e5
  420aba:	imul   eax,DWORD PTR [edx],0xffffffbd
  420abd:	cmp    cl,BYTE PTR [ecx+0x2c]
  420ac0:	dec    ebp
  420ac1:	xchg   edx,eax
  420ac2:	inc    esp
  420ac3:	rcr    al,1
  420ac5:	inc    esp
  420ac6:	aaa    
  420ac7:	div    BYTE PTR [esi+0x1dcf620a]
  420acd:	dec    eax
  420ace:	push   ecx
  420acf:	jg     0x420b00
  420ad1:	stc    
  420ad2:	xor    DWORD PTR [edx+0x7d],0x63
  420ad6:	out    0xd3,al
  420ad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ad9:	es mov esp,esp
  420adc:	mov    al,0xff
  420ade:	sbb    ebx,DWORD PTR [edx]
  420ae0:	sub    eax,0xb351c350
  420ae5:	outs   dx,BYTE PTR ds:[esi]
  420ae6:	add    BYTE PTR [ebp-0x10],0x81
  420aea:	pop    ds
  420aeb:	or     eax,DWORD PTR [eax+0x60]
  420aee:	and    al,0x12
  420af0:	mov    ebp,0x916dc12a
  420af5:	sti    
  420af6:	pop    eax
  420af7:	sbb    bh,al
  420af9:	cs ins BYTE PTR es:[edi],dx
  420afb:	dec    ebx
  420afc:	scas   eax,DWORD PTR es:[edi]
  420afd:	xor    DWORD PTR [edi],0x66ef97a3
  420b03:	in     al,dx
  420b04:	div    DWORD PTR [esi]
  420b06:	xchg   ebx,eax
  420b07:	mov    dh,0xc1
  420b09:	push   edi
  420b0a:	stc    
  420b0b:	inc    edx
  420b0c:	lock dec ebp
  420b0e:	cmp    DWORD PTR [esi+0x78],ecx
  420b11:	mov    bh,ah
  420b13:	pop    ds
  420b14:	pop    ebx
  420b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b16:	ret    
  420b17:	fld    QWORD PTR [esi+eax*4-0x39887d75]
  420b1e:	inc    BYTE PTR [edx]
  420b20:	sbb    DWORD PTR [eax-0x7e],esi
  420b23:	lea    ebp,[esi+0x6d53ffce]
  420b29:	xor    ch,BYTE PTR [esi+0x55]
  420b2c:	fsub   QWORD PTR [eax-0x4c36b203]
  420b32:	adc    BYTE PTR [edx-0x6f2e7d4b],al
  420b38:	popa   
  420b39:	sbb    bl,cl
  420b3b:	dec    eax
  420b3c:	xchg   ebx,eax
  420b3d:	xchg   ecx,eax
  420b3e:	sub    BYTE PTR [ebx+0x2f3e640f],0xbf
  420b45:	out    0x93,eax
  420b47:	mov    esi,ebx
  420b49:	ret    
  420b4a:	or     BYTE PTR [esi],al
  420b4c:	mov    ah,0xf5
  420b4e:	xlat   BYTE PTR ds:[ebx]
  420b4f:	(bad)  
  420b50:	xchg   ebx,eax
  420b51:	fucomi st,st(3)
  420b53:	aam    0xb1
  420b55:	add    ecx,eax
  420b57:	mov    al,0xa6
  420b59:	mov    cl,0xbf
  420b5b:	mov    dh,0x5
  420b5d:	mov    edi,0x2f514474
  420b62:	sub    eax,0x24eb6520
  420b67:	pop    esp
  420b68:	mov    fs,WORD PTR [ecx-0x11]
  420b6b:	or     bl,BYTE PTR [edi+0x19ac0a80]
  420b71:	jae    0x420b74
  420b73:	ret    
  420b74:	pop    ds
  420b75:	xor    ecx,DWORD PTR [ebx+0x1d]
  420b78:	push   0xfffffff3
  420b7a:	pop    esi
  420b7b:	nop
  420b7c:	mov    al,0xf0
  420b7e:	pop    edi
  420b7f:	cmp    eax,0x9250b1c8
  420b84:	pop    ebx
  420b85:	adc    DWORD PTR [eax+0x33589fde],edx
  420b8b:	mov    ebx,0xb8e8f154
  420b90:	mov    eax,DWORD PTR [edi+0x2d]
  420b93:	je     0x420be0
  420b95:	retf   0x1cc4
  420b98:	(bad)  
  420b99:	cmp    cl,BYTE PTR [ecx+ebx*2]
  420b9c:	cmp    ah,BYTE PTR [esi+0x40]
  420b9f:	jle    0x420b88
  420ba1:	adc    dl,0x24
  420ba4:	jnp    0x420b54
  420ba6:	push   esp
  420ba7:	or     eax,0xf894028f
  420bac:	mov    esi,0x96233a1e
  420bb1:	add    al,BYTE PTR [ebx+0x42]
  420bb4:	mov    bh,BYTE PTR [edi]
  420bb6:	les    esi,FWORD PTR [edi-0x194d78f2]
  420bbc:	fisubr DWORD PTR [eiz*2+0x657d7d34]
  420bc3:	sbb    DWORD PTR [edi-0x3e],esp
  420bc6:	push   esp
  420bc7:	or     BYTE PTR [ebx+0x12bc8486],0x34
  420bce:	ja     0x420bec
  420bd0:	in     eax,dx
  420bd1:	mov    ds:0x969748f9,eax
  420bd6:	or     eax,0xd7f26f8c
  420bdb:	add    cl,cl
  420bdd:	xchg   esi,eax
  420bde:	ins    DWORD PTR es:[edi],dx
  420bdf:	mov    dh,0x7f
  420be1:	(bad)  
  420be2:	(bad)  
  420be4:	aam    0xd9
  420be6:	inc    ebx
  420be7:	fadd   DWORD PTR [ecx-0x5d]
  420bea:	add    esp,edi
  420bec:	loope  0x420b75
  420bee:	add    DWORD PTR [eax],eax
  420bf0:	xchg   DWORD PTR [edx],eax
  420bf2:	add    BYTE PTR [eax],al
  420bf4:	retf   0xb03c
  420bf7:	mov    al,ds:0x48df6413
  420bfc:	int3   
  420bfd:	push   eax
  420bfe:	sti    
  420bff:	or     bl,BYTE PTR [ecx+0x9]
  420c02:	jnp    0x420baf
  420c04:	int    0x53
  420c06:	lea    edx,[ecx+0x10415cf0]
  420c0c:	push   0x6a
  420c0e:	sbb    bh,bh
  420c10:	cmp    cl,ch
  420c12:	fwait
  420c13:	mov    ?,WORD PTR [esi-0x62]
  420c16:	mov    ebx,0xb89fe509
  420c1b:	sub    cl,BYTE PTR [esi]
  420c1d:	imul   esp,DWORD PTR [ecx+0x3a],0x79
  420c21:	push   ebx
  420c22:	js     0x420c76
  420c24:	es and eax,0xb8a82e27
  420c2a:	jmp    0x420c0e
  420c2c:	inc    esi
  420c2d:	add    ebx,DWORD PTR ds:0xcd8abe64
  420c33:	sbb    BYTE PTR [ebp-0x1c],al
  420c36:	sbb    DWORD PTR [edi+0x1],edi
  420c39:	or     al,0xa1
  420c3b:	xor    ebp,DWORD PTR [eax-0x29ef3a60]
  420c41:	fucomi st,st(2)
  420c43:	mov    edi,0xc8d31453
  420c48:	dec    esi
  420c49:	or     al,0xcd
  420c4b:	jecxz  0x420c8d
  420c4d:	in     eax,dx
  420c4e:	cmp    al,0x68
  420c50:	inc    esp
  420c51:	xor    al,0x35
  420c53:	out    0xc7,al
  420c55:	pop    esp
  420c56:	mov    bl,0x88
  420c58:	(bad)  
  420c59:	fistp  QWORD PTR [esi]
  420c5b:	repz fistp DWORD PTR [edi*4+0x74d4559d]
  420c63:	cmp    DWORD PTR [esi+0x4c6cc9e9],eax
  420c69:	xchg   edx,eax
  420c6a:	data16 mov cl,0x1f
  420c6d:	bound  ebx,QWORD PTR [ecx+0x7a]
  420c70:	clc    
  420c71:	pusha  
  420c72:	push   ebx
  420c73:	xchg   ebp,eax
  420c74:	add    eax,0xdc1356ba
  420c79:	adc    al,0xeb
  420c7b:	dec    DWORD PTR [ebx-0x55]
  420c7e:	push   edi
  420c7f:	xchg   edi,eax
  420c80:	es adc eax,0x6f344a31
  420c86:	jge    0x420ccf
  420c88:	push   eax
  420c89:	idiv   esi
  420c8b:	inc    ecx
  420c8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c8d:	jecxz  0x420c3f
  420c8f:	(bad)  
  420c90:	xor    DWORD PTR [esi],ebx
  420c92:	mov    al,0x37
  420c94:	fs xor eax,0x3599a038
  420c9a:	sub    al,0x40
  420c9c:	scas   al,BYTE PTR es:[edi]
  420c9d:	push   ebx
  420c9e:	cmc    
  420c9f:	and    BYTE PTR [edx+ecx*8],ah
  420ca2:	pop    esp
  420ca3:	cmp    eax,0x398c405c
  420ca8:	int    0x73
  420caa:	xor    eax,0x3597a857
  420caf:	push   ebx
  420cb0:	inc    edi
  420cb1:	jle    0x420c99
  420cb3:	and    esp,ebp
  420cb5:	dec    ebx
  420cb6:	jns    0x420c4f
  420cb8:	dec    esp
  420cb9:	cdq    
  420cba:	pop    ebx
  420cbb:	ficom  WORD PTR [edx+0x41b61c2a]
  420cc1:	pop    esi
  420cc2:	pop    ecx
  420cc3:	adc    DWORD PTR [edx+0x7a2d0e1],edx
  420cc9:	push   ecx
  420cca:	pop    ebp
  420ccb:	jmp    0x59532394
  420cd0:	retf   0x9f17
  420cd3:	repnz sbb eax,0x4628c385
  420cd9:	call   0xa02:0x30243431
  420ce0:	pop    edx
  420ce1:	push   ds
  420ce2:	mov    dl,0x5b
  420ce4:	xchg   DWORD PTR [ebx],ecx
  420ce6:	lods   al,BYTE PTR ds:[esi]
  420ce7:	xor    esi,ebp
  420ce9:	aaa    
  420cea:	jmp    0x6597:0xee034911
  420cf1:	mov    ds:0x87127aea,eax
  420cf6:	mov    ebp,0xcf19e663
  420cfb:	js     0x420d72
  420cfd:	mov    WORD PTR [ecx+eax*4-0x5c],?
  420d01:	in     al,0xf7
  420d03:	mov    ds:0xd132a26,al
  420d08:	aas    
  420d09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d0a:	out    dx,al
  420d0b:	push   ds
  420d0c:	(bad)  
  420d0d:	adc    dh,BYTE PTR [ecx-0xa]
  420d10:	test   al,0x3f
  420d12:	jmp    0xa699:0xace3420e
  420d19:	mov    ch,0xa8
  420d1b:	push   ss
  420d1c:	or     eax,0xf6c23244
  420d21:	and    al,0x25
  420d23:	inc    ebx
  420d24:	pop    eax
  420d25:	dec    esi
  420d26:	daa    
  420d27:	push   0xffffffa9
  420d29:	cmp    ecx,esi
  420d2b:	popf   
  420d2c:	adc    eax,ebx
  420d2e:	cmp    eax,0xbf648c82
  420d33:	and    eax,0xd997528a
  420d38:	push   ebp
  420d39:	je     0x420d18
  420d3b:	lock xchg edi,eax
  420d3d:	and    DWORD PTR [edi+edx*2+0x1e],0x4327597f
  420d45:	jnp    0x420d95
  420d47:	test   ecx,0xb9ea5c78
  420d4d:	or     dh,bh
  420d4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d50:	mov    ah,0x78
  420d52:	mov    ?,WORD PTR [ecx]
  420d54:	mov    ah,0xb9
  420d56:	shl    DWORD PTR [edx],1
  420d58:	inc    esp
  420d59:	out    0xe7,al
  420d5b:	int    0x71
  420d5d:	aas    
  420d5e:	adc    BYTE PTR [eax],cl
  420d60:	adc    dh,bl
  420d62:	fs scas eax,DWORD PTR es:[edi]
  420d64:	mov    ebp,0x451465d
  420d69:	dec    eax
  420d6a:	jb     0x420d65
  420d6c:	push   esp
  420d6d:	sahf   
  420d6e:	push   ss
  420d6f:	sbb    eax,0x6091e5c2
  420d74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d75:	or     bh,dl
  420d77:	scas   eax,DWORD PTR es:[edi]
  420d78:	sbb    DWORD PTR [eax+0x4],ebx
  420d7b:	hlt    
  420d7c:	aad    0xe2
  420d7e:	adc    esp,DWORD PTR [esi]
  420d80:	aaa    
  420d81:	sbb    eax,0x6b2768f1
  420d86:	int    0xd1
  420d88:	jmp    0x420d3f
  420d8a:	mov    ah,0xa1
  420d8c:	push   esp
  420d8d:	add    edi,edx
  420d8f:	out    dx,al
  420d90:	sub    esi,DWORD PTR [ebx+0x56]
  420d93:	jl     0x420d41
  420d95:	mov    bl,0xc4
  420d97:	popa   
  420d98:	push   ds
  420d99:	pop    ebx
  420d9a:	mov    cs,WORD PTR [ecx+0x44e8feb6]
  420da0:	sbb    ecx,DWORD PTR [edi+ebp*8+0x219458f9]
  420da7:	pop    ss
  420da8:	and    edi,ebp
  420daa:	jp     0x420d54
  420dac:	xchg   bp,dx
  420daf:	sub    eax,0x47af16c8
  420db4:	add    cl,BYTE PTR [ebp-0x5e]
  420db7:	loopne 0x420dd6
  420db9:	call   0x7417:0x60d6bb90
  420dc0:	or     al,0xa7
  420dc2:	jmp    0x420e02
  420dc4:	push   es
  420dc5:	fist   WORD PTR [esi]
  420dc7:	push   edi
  420dc8:	and    al,0xb4
  420dca:	pusha  
  420dcb:	pop    ebp
  420dcc:	push   eax
  420dcd:	loop   0x420d5b
  420dcf:	push   cs
  420dd0:	nop
  420dd1:	mov    dh,0x4e
  420dd3:	jbe    0x420e4b
  420dd5:	mov    edx,0xf0653133
  420dda:	fwait
  420ddb:	cmp    eax,0x15fd0aa3
  420de0:	xchg   esi,eax
  420de1:	out    dx,eax
  420de2:	icebp  
  420de3:	mov    dl,0xee
  420de5:	scas   al,BYTE PTR es:[di]
  420de7:	push   esp
  420de8:	add    ch,bl
  420dea:	pop    edx
  420deb:	cli    
  420dec:	ja     0x420e4e
  420dee:	es push eax
  420df0:	pop    edi
  420df1:	mov    al,ds:0xd1ff1e20
  420df6:	jb     0x420e5e
  420df8:	das    
  420df9:	repnz mov ebp,0x4271fe6a
  420dff:	adc    BYTE PTR [eax+0x7b],0x4a
  420e03:	ins    DWORD PTR es:[edi],dx
  420e04:	sub    al,0xc8
  420e06:	sbb    BYTE PTR [ebp+0x74],cl
  420e09:	xchg   dh,ch
  420e0b:	ret    0xccd8
  420e0e:	and    BYTE PTR [esi+0x754c5d99],0xaa
  420e15:	scas   eax,DWORD PTR es:[edi]
  420e16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e17:	push   edi
  420e18:	xchg   esp,eax
  420e19:	lock fbstp TBYTE PTR ds:0xfb4d493b
  420e20:	pop    ecx
  420e21:	test   al,0x49
  420e23:	jno    0x420e5f
  420e25:	mov    BYTE PTR [esi+edi*2-0x69131bdf],ch
  420e2c:	mov    edi,0x15b6528c
  420e31:	inc    esp
  420e32:	push   eax
  420e33:	push   ds
  420e34:	mov    BYTE PTR [eax],dh
  420e36:	xor    esi,DWORD PTR [esp+esi*4+0x6b]
  420e3a:	xor    DWORD PTR [edx+0x11125339],edx
  420e40:	or     eax,0x28a835c0
  420e45:	pop    ds
  420e46:	adc    BYTE PTR [edi-0x57],dh
  420e49:	add    al,dh
  420e4b:	jnp    0x420e86
  420e4d:	outs   dx,BYTE PTR ds:[esi]
  420e4e:	js     0x420e5c
  420e50:	jmp    FWORD PTR [edi-0x7c]
  420e53:	dec    ebx
  420e54:	mov    esp,0x3b84d372
  420e59:	test   BYTE PTR [ebp+0x7dae65f5],al
  420e5f:	jbe    0x420e61
  420e61:	sbb    DWORD PTR [edi-0x3e],0x13b63ad5
  420e68:	push   ecx
  420e69:	scas   eax,DWORD PTR es:[edi]
  420e6a:	popf   
  420e6b:	push   eax
  420e6c:	mov    al,0x34
  420e6e:	test   al,0x80
  420e70:	sub    eax,0x9a7606f2
  420e75:	mov    ecx,0x2eeae951
  420e7a:	out    0x0,eax
  420e7c:	dec    eax
  420e7d:	out    dx,eax
  420e7e:	ja     0x420eeb
  420e80:	idiv   ebx
  420e82:	pop    esp
  420e83:	out    dx,eax
  420e84:	dec    esp
  420e85:	mul    BYTE PTR [esi-0x7d]
  420e88:	push   0x682fdcfa
  420e8d:	mov    al,BYTE PTR [ecx]
  420e8f:	add    BYTE PTR [edi-0x36fffffe],al
  420e95:	adc    esp,esi
  420e97:	mov    dh,0x1d
  420e99:	xor    al,0xdf
  420e9b:	xor    BYTE PTR [edx+0x7515feec],dh
  420ea1:	xor    al,BYTE PTR [ebx+0x47357af6]
  420ea7:	jne    0x420e78
  420ea9:	sbb    al,0x94
  420eab:	shl    DWORD PTR [edi],0x30
  420eae:	fisttp DWORD PTR [edi+0x366a17f]
  420eb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420eb5:	mov    ds:0x887a3aa0,eax
  420eba:	imul   esp,DWORD PTR [eax-0x24],0xffffffc5
  420ebe:	test   eax,0x2f3d4580
  420ec3:	dec    esp
  420ec4:	cmp    dl,BYTE PTR [ecx+eiz*8+0x6]
  420ec8:	retf   
  420ec9:	mov    BYTE PTR [eax-0x1f],bh
  420ecc:	test   al,0x3f
  420ece:	in     al,0x32
  420ed0:	inc    eax
  420ed1:	push   ss
  420ed2:	inc    ebx
  420ed3:	dec    esi
  420ed4:	xor    BYTE PTR [edx+0x4788002d],0xe8
  420edb:	mov    DWORD PTR [eax-0x20],esp
  420ede:	push   ebp
  420edf:	(bad)
  420ee2:	mov    ch,0x3e
  420ee4:	cmp    BYTE PTR [ecx-0x46a25346],0x5f
  420eeb:	jmp    0x79db:0xd253f49c
  420ef2:	cli    
  420ef3:	jne    0x420e96
  420ef5:	mov    eax,ds:0xefb2b632
  420efa:	imul   esp,DWORD PTR [esi-0x188e30f9],0x66
  420f01:	inc    ebp
  420f02:	test   eax,0xe0307303
  420f07:	nop
  420f08:	call   0xcaf1:0x25055985
  420f0f:	and    DWORD PTR [edi],ebp
  420f11:	loop   0x420f44
  420f13:	dec    ebx
  420f14:	dec    ebp
  420f15:	pop    ebx
  420f16:	jmp    0x9ad:0x7d3cf8e2
  420f1d:	repnz push eax
  420f1f:	pop    es
  420f20:	fmul   QWORD PTR [ebp+0x7f06260e]
  420f26:	lahf   
  420f27:	bound  eax,QWORD PTR [eax]
  420f29:	mov    esi,es
  420f2b:	jne    0x420f51
  420f2d:	(bad)  
  420f2e:	sub    al,0xcc
  420f30:	or     edi,DWORD PTR [ebp+0x10]
  420f33:	rol    ch,0xaf
  420f36:	fsubr  DWORD PTR [esi+0x53]
  420f39:	cmp    BYTE PTR [ebp-0x6f],ch
  420f3c:	sar    DWORD PTR [ecx+edx*2+0x1e],0x17
  420f41:	mov    ch,0x9e
  420f43:	mul    BYTE PTR [esi+0x79]
  420f46:	cmp    edi,DWORD PTR [edx]
  420f48:	mov    WORD PTR [ebx+0x60],ds
  420f4b:	mov    dh,0x76
  420f4d:	icebp  
  420f4e:	pop    edx
  420f4f:	and    eax,0x9dc8d6e5
  420f54:	aad    0xe5
  420f56:	jmp    0xf24690a0
  420f5b:	dec    ebp
  420f5c:	push   ss
  420f5d:	je     0x420f84
  420f5f:	mov    ds:0xa8bb715,eax
  420f64:	in     al,0x86
  420f66:	xor    BYTE PTR [edi],al
  420f68:	cs mov eax,0x37f23b6b
  420f6e:	pop    edi
  420f6f:	out    dx,eax
  420f70:	xor    DWORD PTR [ebx+esi*2],esp
  420f73:	push   0x1b4bbd52
  420f78:	pop    esp
  420f79:	nop
  420f7a:	(bad)
  420f7e:	aas    
  420f7f:	icebp  
  420f80:	adc    ebx,ebx
  420f82:	test   DWORD PTR [edi+ebp*1+0x5543775b],0xeeee3383
  420f8d:	and    bh,bl
  420f8f:	jg     0x420ff9
  420f91:	mov    edx,0x2b2a34bb
  420f96:	es jecxz 0x42100d
  420f99:	nop
  420f9a:	xor    eax,0x2bca7860
  420f9f:	xlat   BYTE PTR ds:[ebx]
  420fa0:	dec    esp
  420fa1:	outs   dx,DWORD PTR ds:[esi]
  420fa2:	sub    eax,0xf58ae64a
  420fa7:	pop    eax
  420fa8:	adc    BYTE PTR [ecx+eax*8-0x1b],dl
  420fac:	out    dx,al
  420fad:	mov    BYTE PTR [edi+0x17],dl
  420fb0:	push   edx
  420fb1:	lods   eax,DWORD PTR ds:[esi]
  420fb2:	mov    ebp,0x31f7d865
  420fb7:	push   0x4c18c25e
  420fbc:	jbe    0x42102a
  420fbe:	into   
  420fbf:	mov    dh,0x23
  420fc1:	hlt    
  420fc2:	push   ss
  420fc3:	xchg   ebp,eax
  420fc4:	fcos   
  420fc6:	and    dh,al
  420fc8:	mov    DWORD PTR [edx],0xee5176dc
  420fce:	xchg   esi,eax
  420fcf:	and    eax,0x71baca36
  420fd4:	imul   edx,DWORD PTR [edi-0x7c],0x617edaa7
  420fdb:	xchg   esp,eax
  420fdc:	sar    DWORD PTR [edx],0x3c
  420fdf:	mov    al,ds:0xbf82bb85
  420fe4:	dec    ebp
  420fe5:	in     al,0xbd
  420fe7:	je     0x421055
  420fe9:	call   0xf0d8:0xe8f03421
  420ff0:	adc    al,BYTE PTR [eax-0x794262ba]
  420ff6:	sub    BYTE PTR [edx-0x5ef415d7],0x10
  420ffd:	repz fdivp st(3),st
  421000:	lods   al,BYTE PTR ds:[esi]
  421001:	push   0x6b
  421003:	fsub   QWORD PTR [esi]
  421005:	pop    esp
  421006:	cmp    DWORD PTR [edx+0x7a4909ef],ebx
  42100c:	test   BYTE PTR [ecx],al
  42100e:	mov    ebx,DWORD PTR [ecx]
  421010:	in     al,0x6e
  421012:	adc    eax,edi
  421014:	xor    eax,0xcef362c5
  421019:	pop    ecx
  42101a:	fsub   QWORD PTR [esi+0x23]
  42101d:	ja     0x421026
  42101f:	push   ss
  421020:	or     al,0x42
  421022:	es aas 
  421024:	push   edi
  421025:	jns    0x421008
  421027:	fwait
  421028:	in     eax,dx
  421029:	sbb    al,0x2
  42102b:	fs sub al,0x83
  42102e:	push   ecx
  42102f:	sub    eax,0x766d5ac5
  421034:	jl     0x421052
  421036:	sub    bl,bh
  421038:	sub    cl,cl
  42103a:	and    cl,bl
  42103c:	pop    edx
  42103d:	jno    0x421086
  42103f:	xchg   DWORD PTR [ebp+0x25],esp
  421042:	mov    dh,0x7c
  421044:	cmp    eax,0x4b97c3c4
  421049:	(bad)  
  42104a:	sub    eax,eax
  42104c:	call   0xec721c4e
  421051:	into   
  421052:	fcomp  DWORD PTR [edi]
  421054:	and    DWORD PTR [ebp+0x2d],edx
  421057:	pop    eax
  421058:	mov    edi,0xb9496809
  42105d:	xchg   esi,eax
  42105e:	fidivr WORD PTR [ecx]
  421060:	sub    DWORD PTR [ecx-0x32],esp
  421063:	in     eax,0xc3
  421065:	mov    ds:0x3e2f2f64,al
  42106a:	xchg   esi,eax
  42106b:	ins    DWORD PTR es:[edi],dx
  42106c:	shl    DWORD PTR ds:0xfa4194d4,0x26
  421073:	(bad)  
  421074:	in     al,0xb7
  421076:	ret    
  421077:	push   edi
  421078:	inc    esp
  421079:	pop    edi
  42107a:	mov    esi,0xa86c4f20
  42107f:	push   esi
  421080:	test   BYTE PTR [ecx],dl
  421082:	mov    ebp,0x75557fd9
  421087:	mov    DWORD PTR [esi+0x116ad718],eax
  42108d:	xor    eax,0x29df8f8
  421092:	push   eax
  421093:	call   0x8cd40d87
  421098:	mov    ds:0xe3417b42,al
  42109d:	mov    al,ds:0xb5c5477f
  4210a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210a3:	icebp  
  4210a4:	mov    al,ds:0x230d3c0b
  4210a9:	loop   0x421090
  4210ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210ac:	pop    ebp
  4210ad:	mov    esi,0xf9c0282c
  4210b2:	jbe    0x4210a2
  4210b4:	(bad)  
  4210b5:	push   ecx
  4210b6:	pop    ds
  4210b7:	cmp    DWORD PTR [edi+ebp*4],edi
  4210ba:	outs   dx,BYTE PTR ds:[esi]
  4210bb:	div    ebx
  4210bd:	pop    esp
  4210be:	mov    edi,0x59a3aeee
  4210c3:	pop    es
  4210c4:	nop
  4210c5:	push   edi
  4210c6:	repz mov WORD PTR [eax+0x5e],gs
  4210ca:	add    BYTE PTR [esi-0x381f559c],ch
  4210d0:	(bad)  
  4210d2:	inc    edx
  4210d3:	js     0x421113
  4210d5:	ficom  DWORD PTR [eax+0x41]
  4210d8:	xchg   DWORD PTR [edi+0x63],esp
  4210db:	push   edx
  4210dc:	(bad)  
  4210dd:	clc    
  4210de:	js     0x4210bd
  4210e0:	stos   BYTE PTR es:[edi],al
  4210e1:	jnp    0x4210fd
  4210e3:	mov    bh,0x18
  4210e5:	cmp    DWORD PTR [eax-0x59b3cbbf],edi
  4210eb:	pushf  
  4210ec:	mov    edx,0x5befa3b9
  4210f1:	jae    0x4210a9
  4210f3:	outs   dx,DWORD PTR ds:[esi]
  4210f4:	xor    DWORD PTR [edi+0x43],0x9b29c1af
  4210fb:	clc    
  4210fc:	pop    esp
  4210fd:	push   edi
  4210fe:	xchg   edi,eax
  4210ff:	in     eax,dx
  421100:	sub    eax,DWORD PTR [eax-0x56]
  421103:	mov    ch,0xe7
  421105:	ds jmp 0x421105
  421108:	std    
  421109:	mov    edx,0x15b44c48
  42110e:	xchg   esp,eax
  42110f:	or     al,dl
  421111:	push   ebx
  421112:	pop    ebx
  421113:	stos   DWORD PTR es:[edi],eax
  421114:	inc    ecx
  421115:	call   FWORD PTR [esi]
  421117:	arpl   bp,si
  421119:	je     0x4210a3
  42111b:	add    BYTE PTR [eax+0x5be35ae3],dh
  421121:	sti    
  421122:	mov    ecx,0x72415ff3
  421127:	test   DWORD PTR [esi+0x5e],edx
  42112a:	call   0x8700:0x18cef81
  421131:	add    al,BYTE PTR [eax]
  421133:	add    BYTE PTR [esi],dl
  421135:	leave  
  421136:	cmc    
  421137:	int3   
  421138:	jmp    0x7d63610
  42113d:	(bad)
  421141:	cdq    
  421142:	cmp    bl,bh
  421144:	scas   al,BYTE PTR es:[edi]
  421145:	push   0xffffff9f
  421147:	es fdivrp st(4),st
  42114a:	fdivr  st,st(6)
  42114c:	pop    eax
  42114d:	sbb    BYTE PTR [ebx-0x49b2d03b],al
  421153:	jl     0x4210db
  421155:	mov    ch,0x53
  421157:	outs   dx,BYTE PTR ds:[esi]
  421158:	mov    bl,0x3d
  42115a:	mov    esp,ecx
  42115c:	(bad)  
  42115d:	mov    edx,0x2dfc02dc
  421162:	or     esi,0x7f9905b2
  421168:	inc    ecx
  421169:	adc    DWORD PTR [ecx],ebp
  42116b:	pop    ecx
  42116c:	icebp  
  42116d:	jl     0x42116d
  42116f:	cdq    
  421170:	dec    ebx
  421171:	xor    eax,0xb2e53ddf
  421176:	arpl   WORD PTR [esi+ecx*4],cx
  421179:	bound  ebp,QWORD PTR [edi-0x227c6ea9]
  42117f:	xchg   edx,esp
  421181:	shr    DWORD PTR [edx+ecx*4-0x53],cl
  421185:	cmp    cl,0xf2
  421188:	pop    eax
  421189:	cmp    al,ah
  42118b:	dec    ebx
  42118c:	mov    dh,dh
  42118e:	sbb    bl,ah
  421190:	(bad)  [eax-0x50]
  421193:	xchg   esi,eax
  421194:	mov    esp,0xaf207b35
  421199:	jge    0x421156
  42119b:	jbe    0x4211b8
  42119d:	jle    0x4211bc
  42119f:	pop    ecx
  4211a0:	jmp    0x42120d
  4211a2:	pop    esp
  4211a3:	mov    bl,0xf8
  4211a5:	inc    ebx
  4211a6:	xchg   edx,eax
  4211a7:	es stos BYTE PTR es:[edi],al
  4211a9:	jp     0x42118c
  4211ab:	fstp   DWORD PTR [esi+ecx*4-0x2cb7734f]
  4211b2:	sbb    al,0x21
  4211b4:	or     al,0x74
  4211b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211b7:	popf   
  4211b8:	fsubr  QWORD PTR [edx]
  4211ba:	stc    
  4211bb:	imul   esi,DWORD PTR [edx],0xffffffab
  4211be:	or     bl,ah
  4211c0:	adc    edi,DWORD PTR [edx+0x37ec3f87]
  4211c6:	add    eax,0xffc63970
  4211cb:	fcom   st(3)
  4211cd:	pop    ss
  4211ce:	push   es
  4211cf:	scas   al,BYTE PTR es:[edi]
  4211d0:	push   eax
  4211d1:	call   0xf989:0x83082a2
  4211d8:	inc    edx
  4211d9:	xor    DWORD PTR [esi],ebp
  4211db:	or     BYTE PTR [eax],bh
  4211dd:	pconfig 
  4211e0:	stos   BYTE PTR es:[edi],al
  4211e1:	push   esi
  4211e2:	bound  eax,QWORD PTR [esi+esi*1]
  4211e5:	in     al,dx
  4211e6:	mov    DWORD PTR [edi],edx
  4211e8:	xor    cl,dh
  4211ea:	inc    esi
  4211eb:	push   cs
  4211ec:	xchg   ebx,eax
  4211ed:	stos   BYTE PTR es:[edi],al
  4211ee:	icebp  
  4211ef:	out    dx,eax
  4211f0:	dec    edx
  4211f1:	sbb    dh,BYTE PTR [ecx+0x35]
  4211f4:	add    al,0xb0
  4211f6:	and    DWORD PTR [ebx-0x6aa59528],ecx
  4211fc:	iret   
  4211fd:	rol    DWORD PTR ds:0xba6db8cd,cl
  421203:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421204:	(bad)
  421208:	xchg   ebx,eax
  421209:	imul   edx,DWORD PTR [ebp+0xa],0xffffff98
  42120d:	sub    edi,DWORD PTR [edi+eiz*1-0x225ff97]
  421214:	mov    ch,0x9d
  421216:	xchg   esi,eax
  421217:	mov    DWORD PTR [esi-0x4c],ebp
  42121a:	push   cs
  42121b:	adc    al,0xa2
  42121d:	icebp  
  42121e:	fbld   TBYTE PTR [esp+ebp*1+0x620e19d2]
  421225:	or     ah,BYTE PTR [ebx]
  421227:	xor    eax,0x1988f08f
  42122c:	mov    eax,ds:0xcb6253e3
  421231:	xor    ebx,edi
  421233:	sub    eax,0xfdcde465
  421238:	aas    
  421239:	sub    DWORD PTR [eax],esp
  42123b:	pop    esi
  42123c:	pop    esi
  42123d:	sbb    dl,bl
  42123f:	inc    edi
  421240:	loop   0x42127c
  421242:	mov    ch,0x4a
  421244:	fsubr  DWORD PTR [ebx+0x38]
  421247:	fst    DWORD PTR [eax]
  421249:	jbe    0x4212bd
  42124b:	jecxz  0x421216
  42124d:	jbe    0x421206
  42124f:	push   edx
  421250:	test   DWORD PTR [edi+0x5d],ecx
  421253:	jmp    0x2df6876a
  421258:	fnstenv [ecx+0x36]
  42125b:	enter  0x24a1,0x8e
  42125f:	mov    ds:0x6efe2a0c,eax
  421264:	js     0x4212e3
  421266:	xchg   edi,eax
  421267:	mov    eax,0x96d91904
  42126c:	mov    esp,0xe2a0f44b
  421271:	std    
  421272:	sbb    edx,DWORD PTR [ebx+0x233a4478]
  421278:	mov    esi,0xa47666cd
  42127d:	mov    bh,0x1a
  42127f:	fbld   TBYTE PTR [eax+eiz*2+0x4d]
  421283:	or     BYTE PTR [edi+esi*8],dh
  421286:	mov    esi,0x176ec716
  42128b:	jns    0x421297
  42128d:	je     0x421286
  42128f:	add    edi,DWORD PTR [eax-0x52cdafc6]
  421295:	push   esp
  421296:	xchg   ecx,eax
  421297:	and    al,0xe6
  421299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42129a:	and    BYTE PTR [edx-0x778169fd],bl
  4212a0:	sbb    eax,0x9083b365
  4212a5:	fsubr  DWORD PTR [edi+0x9b7f574]
  4212ab:	cs mov ah,0xed
  4212ae:	push   cs
  4212af:	mov    dh,0x7a
  4212b1:	ja     0x4212d9
  4212b3:	jns    0x421329
  4212b5:	mov    ds:0x9aab705a,eax
  4212ba:	cmp    cl,BYTE PTR [edi]
  4212bc:	mov    esp,0x7b20d250
  4212c1:	dec    edi
  4212c2:	jmp    FWORD PTR [esi+0x4e]
  4212c5:	push   0xfffffffc
  4212c7:	(bad)  
  4212c8:	jnp    0x4212d9
  4212ca:	pop    ds
  4212cb:	pop    ss
  4212cc:	ficom  DWORD PTR [eax]
  4212ce:	imul   edi,DWORD PTR [ecx],0xbd3d6f80
  4212d4:	aam    0x71
  4212d6:	dec    edi
  4212d7:	mov    bh,0xfc
  4212d9:	mov    bl,0x4d
  4212db:	ficomp WORD PTR [eax+0x3ba287c7]
  4212e1:	cmp    ebp,0xffffffcb
  4212e4:	push   edx
  4212e5:	xchg   edx,eax
  4212e6:	cmp    bh,ah
  4212e8:	push   edi
  4212e9:	pop    ds
  4212ea:	mov    esp,0x315718c0
  4212ef:	arpl   WORD PTR ds:0xe93cd328,si
  4212f5:	retf   
  4212f6:	push   esp
  4212f7:	sbb    edi,DWORD PTR [edi+0x40242a83]
  4212fd:	into   
  4212fe:	and    esp,DWORD PTR [ebp-0x36639cbb]
  421304:	dec    ebx
  421305:	pop    ecx
  421306:	int3   
  421307:	mov    edx,0x61429cdd
  42130c:	or     BYTE PTR [edx+0x49785759],ah
  421312:	or     ecx,ecx
  421314:	sub    eax,0x47adc150
  421319:	(bad)  
  42131a:	mov    edx,edi
  42131c:	loope  0x4212fc
  42131e:	jle    0x421333
  421320:	jmp    0x885b:0xe94d6f09
  421327:	sub    BYTE PTR [esi],bh
  421329:	out    0xdb,eax
  42132b:	pushf  
  42132c:	out    0x94,eax
  42132e:	push   cs
  42132f:	push   0x63
  421331:	ss mov ch,0xb7
  421334:	popf   
  421335:	sub    al,0xd0
  421337:	in     al,0xfd
  421339:	test   DWORD PTR [edi+0x44],ebx
  42133c:	cmp    eax,0xc184ef8f
  421341:	sub    esp,ebp
  421343:	jmp    0x42139c
  421345:	mov    edi,0xd3ec198
  42134a:	test   ah,bh
  42134c:	mov    al,0xc8
  42134e:	das    
  42134f:	pop    esp
  421350:	adc    al,0xec
  421352:	push   DWORD PTR [ecx]
  421354:	(bad)  
  421355:	push   esp
  421356:	imul   edx,esi,0xffffffb1
  421359:	aas    
  42135a:	add    DWORD PTR [esi+0x31],esi
  42135d:	add    ah,BYTE PTR [ebp+0x27]
  421360:	dec    ebx
  421361:	imul   ebx,DWORD PTR [edx+edi*8-0x42],0x5
  421366:	mov    eax,0x866871ed
  42136b:	int3   
  42136c:	mov    al,0x30
  42136e:	push   ebp
  42136f:	sbb    ah,BYTE PTR [edi-0x475f1553]
  421375:	test   BYTE PTR [ebp+eiz*2-0x5c],0xda
  42137a:	repnz div BYTE PTR [edi+edi*1+0x2c306e7a]
  421382:	lds    edi,FWORD PTR [edx-0x28]
  421385:	or     BYTE PTR [ecx],bl
  421387:	push   es
  421388:	adc    BYTE PTR [edx-0x3e],dh
  42138b:	xchg   ebx,eax
  42138c:	xor    al,0x6a
  42138e:	jno    0x42137a
  421390:	sbb    bh,BYTE PTR [esi]
  421392:	mov    al,0xb3
  421394:	(bad)  
  421395:	xchg   ecx,eax
  421396:	jge    0x4213a4
  421398:	leave  
  421399:	adc    bl,BYTE PTR [ebp-0x17a6a7ef]
  42139f:	push   DWORD PTR [ebx+esi*1+0x33]
  4213a3:	adc    BYTE PTR [edi-0xae302ff],dh
  4213a9:	mov    edi,0x2dd99dd2
  4213ae:	mov    eax,0x186989b5
  4213b3:	jae    0x421396
  4213b5:	aad    0x67
  4213b7:	pushf  
  4213b8:	jb     0x42134a
  4213ba:	outs   dx,DWORD PTR ds:[esi]
  4213bb:	add    BYTE PTR ds:0xbf06168e,dh
  4213c1:	sahf   
  4213c2:	xor    eax,0xa0e807bf
  4213c7:	mov    edx,0x6c9091d3
  4213cc:	jbe    0x42135d
  4213ce:	add    DWORD PTR [eax],eax
  4213d0:	xchg   DWORD PTR [edx],eax
  4213d2:	add    BYTE PTR [eax],al
  4213d4:	ret    0xb7f9
  4213d7:	xchg   esp,eax
  4213d8:	rcr    DWORD PTR [edx],cl
  4213da:	add    esp,edx
  4213dc:	cdq    
  4213dd:	test   DWORD PTR [esi],ecx
  4213df:	pop    ds
  4213e0:	push   edx
  4213e1:	into   
  4213e2:	retf   0x5d15
  4213e5:	xor    al,0x1e
  4213e7:	mov    al,0x43
  4213e9:	and    eax,0xc9a57d9f
  4213ee:	push   esi
  4213ef:	loope  0x4213fb
  4213f1:	shr    bh,1
  4213f3:	repnz mul DWORD PTR [edx-0x57]
  4213f7:	fsub   st,st(0)
  4213f9:	xchg   BYTE PTR [edi],cl
  4213fb:	mov    eax,0x2c488462
  421400:	lds    esi,FWORD PTR [edi+0x52]
  421403:	dec    esp
  421404:	sub    ecx,ebp
  421406:	xchg   esi,eax
  421407:	sar    esi,1
  421409:	inc    ecx
  42140a:	leave  
  42140b:	fstp   DWORD PTR [ebx+0x681261b2]
  421411:	pushf  
  421412:	xchg   BYTE PTR [ebx+0x3f],al
  421415:	jnp    0x421450
  421417:	inc    eax
  421418:	mov    ebp,0x7898a9ff
  42141d:	sub    eax,0xb3edd1c7
  421422:	jg     0x4213d3
  421424:	(bad)  
  421425:	cld    
  421426:	mov    ch,0x3a
  421428:	jmp    0x9fc5:0x46d580fa
  42142f:	push   esp
  421430:	in     eax,dx
  421431:	ins    BYTE PTR es:[edi],dx
  421432:	mov    edx,0x326427e1
  421437:	pop    ebp
  421438:	shl    DWORD PTR [edx-0x60],1
  42143b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42143c:	das    
  42143d:	sti    
  42143e:	mov    edx,0x376d4bac
  421443:	retf   0x614d
  421446:	xor    bl,dh
  421448:	int3   
  421449:	add    DWORD PTR [ebx],eax
  42144b:	loop   0x42145c
  42144d:	sub    al,0xe2
  42144f:	pusha  
  421450:	adc    eax,0xbe8df520
  421455:	sub    ebx,esi
  421457:	jnp    0x42148d
  421459:	dec    esi
  42145a:	ins    BYTE PTR es:[edi],dx
  42145b:	in     al,0x7c
  42145d:	pusha  
  42145e:	adc    al,0x63
  421460:	lahf   
  421461:	mov    ch,0x81
  421463:	inc    esi
  421464:	xor    al,0x1a
  421466:	mov    ebp,0xc3393565
  42146b:	jne    0x42146c
  42146d:	les    ecx,FWORD PTR [ecx+edi*2]
  421470:	setge  BYTE PTR [eax+0x34]
  421474:	pop    ds
  421475:	cli    
  421476:	sub    DWORD PTR [esi+0x6cae55ba],edx
  42147c:	(bad)  
  42147d:	cmp    eax,0xd92fae93
  421482:	pop    esp
  421483:	dec    ecx
  421484:	mov    DWORD PTR [edi+0x32],edi
  421487:	stos   BYTE PTR es:[edi],al
  421488:	cld    
  421489:	pop    ecx
  42148a:	dec    esp
  42148b:	and    ebp,ecx
  42148d:	rol    DWORD PTR [ebx+ecx*4-0x1821acff],0xf1
  421495:	mov    dh,0xa8
  421497:	add    al,0xc0
  421499:	icebp  
  42149a:	or     al,0x3
  42149c:	aaa    
  42149d:	mov    ebx,0x5c9bcf6d
  4214a2:	pushf  
  4214a3:	mov    ebx,0xd04505d8
  4214a8:	clc    
  4214a9:	(bad)  
  4214aa:	lds    edi,FWORD PTR [ecx]
  4214ac:	xchg   BYTE PTR [edx+ebx*2-0x7f],ch
  4214b0:	pusha  
  4214b1:	nop
  4214b2:	stos   BYTE PTR es:[edi],al
  4214b3:	inc    edi
  4214b4:	fs pop esp
  4214b6:	out    dx,eax
  4214b7:	dec    edx
  4214b8:	popfw  
  4214ba:	xchg   ebx,eax
  4214bb:	adc    edx,DWORD PTR ds:0xf2d0a477
  4214c1:	jl     0x421472
  4214c3:	imul   eax,DWORD PTR [edx+0x6d248e3e],0xefd8afb5
  4214cd:	out    dx,al
  4214ce:	popf   
  4214cf:	ja     0x42146d
  4214d1:	adc    BYTE PTR [eax],ch
  4214d3:	mov    ds:0xdc3a5507,al
  4214d8:	sti    
  4214d9:	jno    0x4214f3
  4214db:	cmp    al,0xc
  4214dd:	add    edi,0xdcc2cc3e
  4214e3:	jne    0x421523
  4214e5:	ja     0x421469
  4214e7:	aam    0xba
  4214e9:	and    esi,esp
  4214eb:	in     al,dx
  4214ec:	xchg   ebx,eax
  4214ed:	push   esp
  4214ee:	xor    DWORD PTR [esi],eax
  4214f0:	pop    esi
  4214f1:	or     cl,BYTE PTR [eax-0x278bcd1a]
  4214f7:	jg     0x42147e
  4214f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214fa:	cli    
  4214fb:	jp     0x4214fd
  4214fd:	or     al,0x86
  4214ff:	mov    ecx,0x7532fcc5
  421504:	push   es
  421505:	daa    
  421506:	mov    fs,eax
  421508:	fcmovbe st,st(1)
  42150a:	mov    esi,ebx
  42150c:	jmp    0x421588
  42150e:	mov    esp,0x5ff89798
  421513:	xchg   ebx,eax
  421514:	pop    es
  421515:	cmp    cl,BYTE PTR [esi-0x4fd51949]
  42151b:	pop    esi
  42151c:	or     DWORD PTR [ecx+0x63],ebx
  42151f:	sub    dl,bl
  421521:	jo     0x42153e
  421523:	or     eax,0x4fbca33c
  421528:	xor    ebp,DWORD PTR [edi+0x54]
  42152b:	mul    DWORD PTR [esi]
  42152d:	or     BYTE PTR [ebp-0x33ddef3b],cl
  421533:	adc    esi,DWORD PTR [eax+0x71]
  421536:	bound  edi,QWORD PTR [ebx+ebx*4+0x36]
  42153a:	add    al,0x8f
  42153c:	push   ss
  42153d:	outs   dx,BYTE PTR ds:[esi]
  42153e:	aam    0x7c
  421540:	fmul   DWORD PTR ds:0x5d5c6d67
  421546:	jo     0x4215a0
  421548:	das    
  421549:	mov    ds:0x3a136616,al
  42154e:	adc    BYTE PTR [ebp+0x57d9e986],0x81
  421555:	dec    edi
  421556:	loope  0x4214f4
  421558:	and    ch,BYTE PTR [edx]
  42155a:	push   esp
  42155b:	lods   eax,DWORD PTR ds:[esi]
  42155c:	mov    esi,0x83baa129
  421561:	mov    ah,0x1a
  421563:	xchg   ebp,eax
  421564:	sbb    BYTE PTR [ecx+0x5d],ah
  421567:	mov    ecx,0xe723353a
  42156c:	sub    eax,0xaa12bc72
  421571:	sbb    BYTE PTR [esi],dl
  421573:	xor    eax,0x58c19d81
  421578:	arpl   WORD PTR [ecx],dx
  42157a:	xchg   ebp,eax
  42157b:	ins    BYTE PTR es:[edi],dx
  42157c:	xor    eax,0xbe5c38b1
  421581:	nop
  421582:	cmc    
  421583:	enter  0x6164,0x7d
  421587:	jnp    0x421522
  421589:	aam    0xa3
  42158b:	daa    
  42158c:	fwait
  42158d:	cmp    eax,0xe5179e57
  421592:	mov    bl,0xb7
  421594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421595:	fwait
  421596:	xor    esp,DWORD PTR [ebp+ebx*8+0x16]
  42159a:	lahf   
  42159b:	je     0x421567
  42159d:	jne    0x42153b
  42159f:	or     esi,DWORD PTR [ecx]
  4215a1:	test   BYTE PTR [ebx-0xed0d2ec],ch
  4215a7:	sub    BYTE PTR [ebx],dl
  4215a9:	aam    0xc0
  4215ab:	sbb    esp,DWORD PTR [edi-0x20ba9325]
  4215b1:	mov    bh,0xae
  4215b3:	xchg   edx,eax
  4215b4:	sub    dh,BYTE PTR [ebx]
  4215b6:	not    BYTE PTR [ebx+0x26]
  4215b9:	jo     0x421601
  4215bb:	in     eax,0x7
  4215bd:	(bad)  
  4215be:	aas    
  4215bf:	out    dx,al
  4215c0:	and    al,0x66
  4215c2:	xchg   ebp,eax
  4215c3:	mov    edx,0x2d865666
  4215c8:	ins    DWORD PTR es:[edi],dx
  4215c9:	shl    esi,1
  4215cb:	mov    ebp,0xbf9ebd9a
  4215d0:	mov    es,WORD PTR [ebx-0x66]
  4215d3:	dec    edx
  4215d4:	out    0xf1,eax
  4215d6:	mov    bl,dl
  4215d8:	dec    esi
  4215d9:	lods   eax,DWORD PTR ds:[esi]
  4215da:	ret    
  4215db:	cli    
  4215dc:	lea    ecx,[ebp-0x7b]
  4215df:	test   BYTE PTR [ebx],0x93
  4215e2:	mov    ch,0xc0
  4215e4:	int3   
  4215e5:	jo     0x421656
  4215e7:	jmp    0xaa7feb1d
  4215ec:	test   BYTE PTR [esi],dl
  4215ee:	outs   dx,BYTE PTR ds:[esi]
  4215ef:	cwde   
  4215f0:	push   ecx
  4215f1:	push   edi
  4215f2:	cli    
  4215f3:	jo     0x4215db
  4215f5:	xor    bh,ah
  4215f7:	pushf  
  4215f8:	mov    eax,ds:0x5877009
  4215fd:	xchg   ebp,eax
  4215fe:	mov    ebp,0x1acdcab1
  421603:	lea    edx,[esi+ebp*1+0x7912bf37]
  42160a:	loope  0x42162d
  42160c:	inc    ecx
  42160d:	inc    eax
  42160e:	or     al,0x36
  421610:	sbb    bh,BYTE PTR [ecx+0x5e]
  421613:	cmc    
  421614:	scas   eax,DWORD PTR es:[edi]
  421615:	test   BYTE PTR [edx+0x4b],cl
  421618:	dec    edi
  421619:	int3   
  42161a:	in     al,0xa9
  42161c:	lahf   
  42161d:	imul   edi,DWORD PTR [edx-0x4a9fae48],0xffffff90
  421624:	scas   al,BYTE PTR es:[edi]
  421625:	push   ebx
  421626:	mov    WORD PTR [esi+ebp*1+0x8],?
  42162a:	fcom   DWORD PTR [edi+ecx*2-0x45]
  42162e:	test   eax,0x66543556
  421633:	dec    esp
  421634:	icebp  
  421635:	push   edi
  421636:	shr    BYTE PTR [eax],cl
  421638:	sbb    dl,bh
  42163a:	jno    0x42162f
  42163c:	aad    0x5
  42163e:	scas   eax,DWORD PTR es:[edi]
  42163f:	adc    eax,0x633a9033
  421644:	pop    ecx
  421645:	in     al,0x26
  421647:	or     edx,DWORD PTR [edx-0x72f2f47f]
  42164d:	jg     0x4216b5
  42164f:	mov    eax,ds:0x16c2c371
  421654:	fcomip st,st(0)
  421656:	inc    edi
  421657:	push   cs
  421658:	jl     0x42165e
  42165a:	mov    ebx,0xedfdf900
  42165f:	mov    cl,0xed
  421661:	mov    cl,0xfd
  421663:	std    
  421664:	pop    ds
  421665:	xor    dl,0xed
  421668:	fiadd  DWORD PTR es:0x191fd39
  42166f:	add    BYTE PTR [edi-0x61fffffe],al
  421675:	ret    0xb04f
  421678:	gs scas eax,DWORD PTR es:[edi]
  42167a:	call   0x2548:0xfb31c838
  421681:	(bad)  
  421682:	das    
  421683:	div    ecx
  421685:	or     bh,BYTE PTR ds:0xa634c0c3
  42168b:	xchg   esi,eax
  42168c:	add    DWORD PTR ds:0xbb91970a,ebp
  421692:	jne    0x4216fe
  421694:	dec    ecx
  421695:	sbb    ebp,esp
  421697:	ins    DWORD PTR es:[edi],dx
  421698:	popf   
  421699:	jge    0x421671
  42169b:	xchg   DWORD PTR [eax+0x68fe5436],ecx
  4216a1:	sbb    al,0xfe
  4216a3:	arpl   cx,di
  4216a5:	jge    0x421632
  4216a7:	jns    0x4216b0
  4216a9:	xchg   ecx,eax
  4216aa:	inc    edi
  4216ab:	adc    DWORD PTR [ebx],ebp
  4216ad:	jmp    0x2194:0x5591969b
  4216b4:	and    bl,BYTE PTR [ebx+0x520d9d9b]
  4216ba:	xchg   ebp,eax
  4216bb:	and    ah,dh
  4216bd:	(bad)  
  4216be:	idiv   ebp
  4216c0:	inc    ebx
  4216c1:	dec    esi
  4216c2:	mov    eax,es:0xebfb9c81
  4216c8:	mov    BYTE PTR [edi],cl
  4216ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216cb:	xor    eax,0xda58f4ca
  4216d0:	fnstsw WORD PTR [edx-0x51]
  4216d3:	xchg   esp,eax
  4216d4:	ret    0x62b7
  4216d7:	outs   dx,BYTE PTR ds:[esi]
  4216d8:	sub    eax,DWORD PTR [esi+0x6f]
  4216db:	mov    WORD PTR [ecx],cs
  4216dd:	or     DWORD PTR ds:0xb53b646d,eax
  4216e3:	(bad)  
  4216e4:	mov    esi,0x7d1d7f83
  4216e9:	ss leave 
  4216eb:	xor    DWORD PTR [ebp+ebp*2+0x52],ebp
  4216ef:	adc    dl,BYTE PTR cs:[edi+0x3f427bbd]
  4216f6:	out    0x80,eax
  4216f8:	inc    edx
  4216f9:	pop    ds
  4216fa:	call   0xdecc2e5c
  4216ff:	jle    0x42172a
  421701:	out    dx,eax
  421702:	jle    0x421718
  421704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421705:	icebp  
  421706:	jp     0x421693
  421708:	(bad)  
  421709:	call   0xbab3ddef
  42170e:	adc    cl,BYTE PTR [edi-0x7e]
  421711:	mov    ?,esp
  421713:	outs   dx,BYTE PTR ds:[esi]
  421714:	cs mov edi,0x47e335ee
  42171a:	nop
  42171b:	inc    ecx
  42171c:	sbb    al,0x9d
  42171e:	imul   esi,esp,0xffffffc5
  421721:	push   edx
  421722:	jmp    0x4216b3
  421724:	xchg   ebx,eax
  421725:	les    ebp,FWORD PTR [ebp-0x11f8cf11]
  42172b:	inc    ebp
  42172c:	leave  
  42172d:	dec    eax
  42172e:	and    eax,0x36301a45
  421733:	popf   
  421734:	in     eax,dx
  421735:	(bad)  
  421736:	mov    esi,0x8cbf29e6
  42173b:	push   es
  42173c:	jb     0x4216e6
  42173e:	jnp    0x4217b5
  421740:	and    al,0x3b
  421742:	adc    al,0x91
  421744:	ss mov esi,0x29908432
  42174a:	popf   
  42174b:	mov    cl,bl
  42174d:	inc    edi
  42174e:	sbb    eax,0xa7453cf
  421753:	xor    al,0xaa
  421755:	sbb    eax,0x4e683331
  42175a:	sbb    BYTE PTR ds:0x852db8d9,cl
  421760:	ficomp WORD PTR [edx]
  421762:	push   eax
  421763:	cmp    al,0xf7
  421765:	xchg   esp,eax
  421766:	lods   eax,DWORD PTR ds:[esi]
  421767:	loope  0x4217b5
  421769:	fwait
  42176a:	and    ebx,DWORD PTR [ebp+eiz*8+0x19]
  42176e:	scas   eax,DWORD PTR es:[edi]
  42176f:	enter  0x796c,0xf5
  421773:	js     0x4217bb
  421775:	pop    ebp
  421776:	adc    eax,0xfd26a2f6
  42177b:	and    al,0x30
  42177d:	push   ss
  42177e:	cs mov ecx,0xf4461603
  421784:	or     ebp,ebx
  421786:	push   cs
  421787:	bound  ebx,QWORD PTR [edx+0x4784ff56]
  42178d:	stc    
  42178e:	sbb    DWORD PTR [ecx+0x47],esi
  421791:	repnz lock popa 
  421794:	cld    
  421795:	adc    ecx,DWORD PTR [edi+0x45c696c]
  42179b:	xor    DWORD PTR [esi],edi
  42179d:	rcr    ebx,0x9b
  4217a0:	push   ds
  4217a1:	(bad)  
  4217a2:	cld    
  4217a3:	fcom   QWORD PTR [edi-0x6e]
  4217a6:	ins    DWORD PTR es:[edi],dx
  4217a7:	sub    BYTE PTR [ecx+0x1d],0xb8
  4217ab:	loop   0x421821
  4217ad:	out    dx,al
  4217ae:	ss fsub st,st(7)
  4217b1:	repnz (bad) [edi-0x6e]
  4217b5:	das    
  4217b6:	push   es
  4217b7:	out    0xc3,eax
  4217b9:	cmp    al,0x96
  4217bb:	mov    ah,0x86
  4217bd:	adc    dl,0xc8
  4217c0:	pop    ebx
  4217c1:	jmp    0x5767:0x75747e1b
  4217c8:	dec    eax
  4217c9:	adc    ch,BYTE PTR [edx]
  4217cb:	pop    ebp
  4217cc:	mov    edx,0x37a3fa66
  4217d1:	push   eax
  4217d2:	jnp    0x4217b2
  4217d4:	or     eax,0x67d6482e
  4217d9:	pop    ebp
  4217da:	inc    ebx
  4217db:	xchg   edx,eax
  4217dc:	sti    
  4217dd:	jge    0x42180a
  4217df:	inc    esp
  4217e0:	(bad)  
  4217e1:	xchg   ebx,eax
  4217e2:	cdq    
  4217e3:	adc    DWORD PTR [esi+0x11],eax
  4217e6:	cmp    eax,0x2b17ce9
  4217eb:	leave  
  4217ec:	xor    eax,0xb04e0f43
  4217f1:	repnz and bh,al
  4217f4:	ja     0x42186e
  4217f6:	lahf   
  4217f7:	leave  
  4217f8:	xchg   esi,esi
  4217fa:	push   0xdbded9ea
  4217ff:	push   ebp
  421800:	pop    es
  421801:	sbb    al,0x3a
  421803:	pop    ecx
  421804:	sbb    eax,DWORD PTR [eax+esi*1]
  421807:	mov    edx,0xb52eefd5
  42180c:	out    dx,al
  42180d:	sar    dl,1
  42180f:	(bad)  
  421810:	les    esi,FWORD PTR [ebx-0x29ac0c05]
  421816:	dec    ecx
  421817:	fwait
  421818:	xor    BYTE PTR [ebp-0x31],al
  42181b:	ret    
  42181c:	xor    al,0x20
  42181e:	jle    0x42182c
  421820:	fld    TBYTE PTR [ecx+0xe200277]
  421826:	jmp    0xa3369dd7
  42182b:	jp     0x4217c3
  42182d:	sahf   
  42182e:	iret   
  42182f:	test   eax,0xd6858348
  421834:	xchg   ebp,eax
  421835:	jl     0x4218b0
  421837:	fldenv [eax-0x67]
  42183a:	and    al,0xc6
  42183c:	and    DWORD PTR [ebx+0xc34c655],0x7c616ddb
  421846:	mov    ah,0xdf
  421848:	fdivr  QWORD PTR [ebp-0x7b420100]
  42184e:	call   0x8e3bb290
  421853:	adc    edi,DWORD PTR [ebp-0x11c33d33]
  421859:	mov    WORD PTR [ebp-0x5e],?
  42185c:	and    DWORD PTR [ebx+0x20],0x69
  421860:	ss daa 
  421862:	aad    0x40
  421864:	add    edx,DWORD PTR [ebp+0x2b54e2a9]
  42186a:	arpl   bx,dx
  42186c:	push   esi
  42186d:	inc    edx
  42186e:	loopne 0x4218a0
  421870:	(bad)  
  421871:	call   eax
  421873:	xchg   BYTE PTR [ebx-0x29affe66],cl
  421879:	mov    eax,0xe311ea2
  42187e:	dec    ecx
  42187f:	daa    
  421880:	push   eax
  421881:	dec    BYTE PTR [edx]
  421883:	arpl   WORD PTR [esi],ax
  421885:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421886:	lea    ecx,[edx+edi*2-0x6]
  42188a:	inc    esi
  42188b:	xchg   BYTE PTR [esi],dl
  42188d:	xchg   edx,eax
  42188e:	fs (bad) 
  421890:	in     eax,dx
  421891:	push   eax
  421892:	xchg   ebp,eax
  421893:	adc    esp,DWORD PTR [edx-0x80]
  421896:	cmp    eax,DWORD PTR [edx+ecx*8+0x667d5aea]
  42189d:	repnz les ebx,FWORD PTR [edi+esi*8]
  4218a1:	mov    dl,0xd5
  4218a3:	sbb    ch,bl
  4218a5:	leave  
  4218a6:	in     eax,dx
  4218a7:	and    al,BYTE PTR [ebx+0x3e5b9dd5]
  4218ad:	lods   al,BYTE PTR ds:[esi]
  4218ae:	xchg   bx,ax
  4218b0:	pop    esi
  4218b1:	and    cl,BYTE PTR [eax+esi*2-0x7d]
  4218b5:	sbb    ebx,DWORD PTR [esi+0xe722d15]
  4218bb:	dec    esi
  4218bc:	cdq    
  4218bd:	xor    DWORD PTR [ebp-0x58],ecx
  4218c0:	and    esp,0x3d
  4218c3:	jge    0x421920
  4218c5:	mov    eax,0x73b90ea7
  4218ca:	outs   dx,DWORD PTR ds:[esi]
  4218cb:	add    edi,DWORD PTR [esi]
  4218cd:	cmp    DWORD PTR [ecx],edx
  4218cf:	cli    
  4218d0:	xchg   edx,eax
  4218d1:	mov    dl,0xfe
  4218d3:	mov    ebp,0x5088f5df
  4218d8:	sbb    BYTE PTR [ecx],bl
  4218da:	mov    WORD PTR [eax+0x706facef],gs
  4218e0:	int    0xfd
  4218e2:	clc    
  4218e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218e4:	(bad)  
  4218e5:	sti    
  4218e6:	ins    BYTE PTR es:[edi],dx
  4218e7:	sahf   
  4218e8:	ins    DWORD PTR es:[edi],dx
  4218e9:	push   0xfffffff8
  4218eb:	xor    al,al
  4218ed:	sbb    eax,0x82c3e7a8
  4218f2:	mov    ah,0xaf
  4218f4:	xchg   DWORD PTR [esi],ebx
  4218f6:	inc    eax
  4218f7:	cli    
  4218f8:	pop    eax
  4218f9:	test   al,0xe2
  4218fb:	add    dl,dh
  4218fd:	rol    BYTE PTR ds:0xf6d53751,0xe3
  421904:	out    dx,al
  421905:	sub    ebp,esp
  421907:	cvtps2pd xmm6,QWORD PTR [esi]
  42190a:	inc    esp
  42190b:	mov    al,0x84
  42190d:	xchg   esp,eax
  42190e:	add    DWORD PTR [eax],eax
  421910:	xchg   DWORD PTR [edx],eax
  421912:	add    BYTE PTR [eax],al
  421914:	imul   esi,DWORD PTR [eax+0x17b72470],0x4b9243ef
  42191e:	rol    DWORD PTR [ecx+0x37],1
  421921:	xor    al,0x6e
  421923:	or     DWORD PTR [eax],0xa656c0b4
  421929:	dec    ecx
  42192a:	jmp    0x6c4b6663
  42192f:	xchg   edi,eax
  421930:	in     eax,0xe6
  421932:	inc    eax
  421933:	shl    BYTE PTR ds:0xd6cb7e27,0x20
  42193a:	xor    al,0xe9
  42193c:	ret    0x3149
  42193f:	pop    ebp
  421940:	adc    DWORD PTR [ebp-0x76],eax
  421943:	push   edx
  421944:	jle    0x421992
  421946:	popa   
  421947:	push   0x5f
  421949:	out    dx,eax
  42194a:	call   0x3264eaa4
  42194f:	ja     0x421915
  421951:	dec    ebx
  421952:	dec    edx
  421953:	iret   
  421954:	mov    ds:0x110ae59,eax
  421959:	lods   ax,WORD PTR ss:[esi]
  42195c:	ss dec esi
  42195e:	pop    esi
  42195f:	sub    BYTE PTR [eax],dh
  421961:	dec    edi
  421962:	pop    ebp
  421963:	xchg   esi,eax
  421964:	push   ds
  421965:	adc    DWORD PTR [esi+0x5d],0xffffff82
  421969:	mov    bh,0x31
  42196b:	sti    
  42196c:	in     al,dx
  42196d:	ss stos BYTE PTR es:[edi],al
  42196f:	fadd   DWORD PTR [edi-0x2c6d7945]
  421975:	retf   
  421976:	and    ebp,DWORD PTR fs:[edx+eiz*4-0x43625639]
  42197e:	je     0x42198e
  421980:	in     al,dx
  421981:	push   edi
  421982:	pop    eax
  421983:	mov    edi,0x60352b0e
  421988:	lds    eax,FWORD PTR [edx+0x29]
  42198b:	push   0x8
  42198d:	sub    al,0xef
  42198f:	rcr    al,1
  421991:	xor    BYTE PTR [eax+ebx*2-0x14],0x66
  421996:	fstp   TBYTE PTR [edx-0x48]
  421999:	mov    bl,BYTE PTR [ebp-0x788b04d5]
  42199f:	int3   
  4219a0:	ror    DWORD PTR [edx+0x4f0b1d1b],0x81
  4219a7:	mov    cl,0x8d
  4219a9:	cmp    BYTE PTR [edx+ebx*2-0x368b6a4b],bh
  4219b0:	sub    cl,cl
  4219b2:	mov    dl,0xc2
  4219b4:	lock fwait
  4219b6:	iret   
  4219b7:	loope  0x42195e
  4219b9:	dec    esp
  4219ba:	cwde   
  4219bb:	aas    
  4219bc:	and    ah,BYTE PTR [ebx+ecx*8]
  4219bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219c0:	sub    eax,0x4d1f84cd
  4219c5:	dec    esp
  4219c6:	sbb    eax,0x7f28818
  4219cb:	ins    DWORD PTR es:[edi],dx
  4219cc:	fcomp  st(0)
  4219ce:	or     dl,bl
  4219d0:	and    DWORD PTR [ebx],edx
  4219d2:	leave  
  4219d3:	mov    DWORD PTR [ebp+0x7b],0x4c191317
  4219da:	cmp    ah,BYTE PTR [ebx]
  4219dc:	adc    al,0x99
  4219de:	mov    ch,0x26
  4219e0:	adc    al,0xf9
  4219e2:	fimul  DWORD PTR [edi]
  4219e4:	or     al,0x56
  4219e6:	rcl    ecx,1
  4219e8:	pop    ebp
  4219e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219ea:	jg     0x421a31
  4219ec:	pop    es
  4219ed:	gs ja  0x421983
  4219f0:	or     al,0x3e
  4219f2:	sahf   
  4219f3:	mov    esi,0x47366af0
  4219f8:	sub    ebx,DWORD PTR [ebx-0x14c1c97c]
  4219fe:	pop    esp
  4219ff:	push   ss
  421a00:	pusha  
  421a01:	jp     0x4219b9
  421a03:	jmp    0x3710:0x98b36051
  421a0a:	push   ss
  421a0b:	push   0xaef4753b
  421a10:	popa   
  421a11:	inc    eax
  421a12:	sbb    al,0x9e
  421a14:	out    0x63,eax
  421a16:	xchg   edi,eax
  421a17:	lods   al,BYTE PTR ds:[esi]
  421a18:	(bad)  
  421a19:	js     0x4219dc
  421a1b:	xor    dl,bl
  421a1d:	std    
  421a1e:	mov    cl,0x59
  421a20:	xor    dl,BYTE PTR [edi]
  421a22:	f2xm1  
  421a24:	mov    DWORD PTR [ebx+ebx*4+0x1412a7a9],edx
  421a2b:	shl    DWORD PTR [eax+eax*4],cl
  421a2e:	mov    ah,0x28
  421a30:	in     eax,0x49
  421a32:	cli    
  421a33:	fld    TBYTE PTR [ecx+0x41]
  421a36:	xor    DWORD PTR [edi],0x59e817ff
  421a3c:	dec    ebp
  421a3d:	jge    0x4219ee
  421a3f:	outs   dx,BYTE PTR ds:[esi]
  421a40:	sub    DWORD PTR [edx+0x1a],ebp
  421a43:	lods   eax,DWORD PTR ds:[esi]
  421a44:	cdq    
  421a45:	in     al,dx
  421a46:	xchg   ecx,esi
  421a48:	stc    
  421a49:	hlt    
  421a4a:	push   0x61f1a9f1
  421a4f:	or     al,0x37
  421a51:	js     0x421a7d
  421a53:	iret   
  421a54:	in     eax,0xd5
  421a56:	mov    fs,WORD PTR [ecx-0x27]
  421a59:	sti    
  421a5a:	adc    ebx,DWORD PTR [esi]
  421a5c:	mov    cl,0xe6
  421a5e:	test   eax,0x704d97aa
  421a63:	or     cl,BYTE PTR [ecx+0x6e]
  421a66:	xor    al,0xbb
  421a68:	sub    esi,DWORD PTR [eax-0x75]
  421a6b:	inc    edx
  421a6c:	fild   DWORD PTR [ebp+0x453ec8dd]
  421a72:	cld    
  421a73:	xor    DWORD PTR [edi+ebp*1-0x4459d9ee],edx
  421a7a:	cld    
  421a7b:	pop    ds
  421a7c:	call   0x7a19:0x74d5eb80
  421a83:	aas    
  421a84:	xlat   BYTE PTR ds:[ebx]
  421a85:	cmp    bl,BYTE PTR [edx]
  421a87:	push   ss
  421a88:	neg    BYTE PTR [edx]
  421a8a:	push   ebx
  421a8b:	adc    dl,BYTE PTR [edi+0x29b9cc32]
  421a91:	add    esi,DWORD PTR [ebx-0x4a689e69]
  421a97:	test   DWORD PTR [ebp+0x5f3f8ebb],eax
  421a9d:	push   esi
  421a9e:	lods   eax,DWORD PTR ds:[esi]
  421a9f:	neg    BYTE PTR [eax+0x261be552]
  421aa5:	mov    edi,0xa1bd975a
  421aaa:	fmulp  st(6),st
  421aac:	cmp    BYTE PTR [ecx-0x3fa66cee],bh
  421ab2:	sub    al,0xd2
  421ab4:	je     0x421a4e
  421ab6:	imul   edi,DWORD PTR [ebp+0x62],0xfffffffc
  421aba:	dec    ecx
  421abb:	sbb    BYTE PTR [ecx+eax*8+0x48],dh
  421abf:	rol    DWORD PTR [ebp-0x5d],0x54
  421ac3:	xor    BYTE PTR [eax-0x7],dl
  421ac6:	push   ebp
  421ac7:	out    0x1a,al
  421ac9:	mov    ds:0x5e05657b,eax
  421ace:	in     al,dx
  421acf:	cs je  0x421a60
  421ad2:	jge    0x421ae6
  421ad4:	sti    
  421ad5:	(bad)
  421ad9:	sti    
  421ada:	jg     0x421adf
  421adc:	cs hlt 
  421ade:	mov    bh,BYTE PTR [ebx-0x9]
  421ae1:	neg    DWORD PTR [ebp+0x4ebe77d0]
  421ae7:	inc    eax
  421ae8:	pop    ss
  421ae9:	dec    edi
  421aea:	mov    eax,ds:0xc1b8dab6
  421aef:	ja     0x421a93
  421af1:	adc    dh,BYTE PTR [eax]
  421af3:	pop    es
  421af4:	mov    cl,0x19
  421af6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421af7:	out    0xba,eax
  421af9:	mov    dh,0x80
  421afb:	dec    ebx
  421afc:	loopne 0x421b44
  421afe:	jno    0x421af5
  421b00:	inc    ebx
  421b01:	add    bl,BYTE PTR [ecx]
  421b03:	dec    edx
  421b04:	fst    QWORD PTR [ecx-0x6192f747]
  421b0a:	adc    al,0xe7
  421b0c:	adc    ah,BYTE PTR [edx]
  421b0e:	cmp    bh,dl
  421b10:	add    edx,DWORD PTR [esi+0xd]
  421b13:	popa   
  421b14:	mov    bl,0xf3
  421b16:	std    
  421b17:	mov    ebp,0xc6ae7aed
  421b1c:	aaa    
  421b1d:	xchg   edi,eax
  421b1e:	jp     0x421abd
  421b20:	mov    esp,DWORD PTR [ebx-0x3d]
  421b23:	mov    al,0xd0
  421b25:	and    eax,0x63a5dfa0
  421b2a:	xchg   ecx,eax
  421b2b:	sbb    edx,DWORD PTR [ecx]
  421b2d:	or     eax,0xeecec2e5
  421b32:	mov    BYTE PTR [ecx-0x3b3f1fbc],ch
  421b38:	mov    cl,0x40
  421b3a:	inc    ebx
  421b3b:	jbe    0x421b59
  421b3d:	aas    
  421b3e:	stos   BYTE PTR es:[edi],al
  421b3f:	xchg   eax,esi
  421b41:	ins    BYTE PTR es:[edi],dx
  421b42:	add    al,0x18
  421b44:	dec    esp
  421b45:	loop   0x421aec
  421b47:	sti    
  421b48:	repz shl BYTE PTR [edi+0x60],cl
  421b4c:	sub    al,0x35
  421b4e:	jle    0x421b2a
  421b50:	nop
  421b51:	and    BYTE PTR [edx+0x54],cl
  421b54:	gs jo  0x421bd4
  421b57:	das    
  421b58:	lea    esi,[edx]
  421b5a:	mov    dl,0xd6
  421b5c:	scas   eax,DWORD PTR es:[edi]
  421b5d:	inc    esp
  421b5e:	push   eax
  421b5f:	aam    0x1f
  421b61:	add    DWORD PTR [eax-0x6c],ebx
  421b64:	cwde   
  421b65:	cwde   
  421b66:	inc    ebx
  421b67:	aam    0x2
  421b69:	xchg   di,ax
  421b6b:	adc    ebp,DWORD PTR [ecx]
  421b6d:	jnp    0x421b6a
  421b6f:	fdivp  st(4),st
  421b71:	pushf  
  421b72:	xor    dl,BYTE PTR [esi+0x5030568c]
  421b78:	ret    0xed00
  421b7b:	sub    al,BYTE PTR [ebp+0x3e]
  421b7e:	(bad)  
  421b7f:	pop    edi
  421b80:	lea    edi,ds:0x5a0e9eaf
  421b86:	jecxz  0x421b38
  421b88:	icebp  
  421b89:	outs   dx,BYTE PTR ds:[esi]
  421b8a:	xor    DWORD PTR ds:0xafd58246,0xffffffba
  421b91:	mov    esi,0xeccbe32
  421b96:	retf   0xb7b1
  421b99:	addps  xmm0,XMMWORD PTR [eax]
  421b9c:	inc    ebx
  421b9d:	inc    ecx
  421b9e:	popa   
  421b9f:	data16 arpl WORD PTR [esi+0x47],sp
  421ba3:	rcr    DWORD PTR gs:[edi+0x16],cl
  421ba7:	xor    BYTE PTR [ecx],cl
  421ba9:	out    0x81,eax
  421bab:	jmp    0x287:0x1970b
  421bb2:	add    BYTE PTR [eax],al
  421bb4:	or     DWORD PTR [ebp+0x7f],0xffffffff
  421bb8:	gs out 0xb2,al
  421bbb:	dec    ebx
  421bbc:	mov    bh,0xe5
  421bbe:	inc    edx
  421bbf:	sub    ebx,DWORD PTR ds:[edx]
  421bc2:	std    
  421bc3:	in     al,0x11
  421bc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bc6:	test   DWORD PTR [eax-0x56],ebx
  421bc9:	jl     0x421b86
  421bcb:	xchg   esi,eax
  421bcc:	pop    ecx
  421bcd:	aad    0xaf
  421bcf:	out    dx,eax
  421bd0:	adc    ebp,DWORD PTR [eax]
  421bd2:	stc    
  421bd3:	cmc    
  421bd4:	iret   
  421bd5:	call   0x3be6c897
  421bda:	jne    0x421b5d
  421bdc:	add    al,0x6b
  421bde:	push   esi
  421bdf:	push   eax
  421be0:	push   esp
  421be1:	(bad)  
  421be2:	out    dx,eax
  421be3:	push   ss
  421be4:	mov    eax,ds:0x61b10912
  421be9:	inc    edi
  421bea:	mov    ah,0x1f
  421bec:	sbb    eax,0x94401bf1
  421bf1:	xor    DWORD PTR [esi+eax*4-0x73a6d16],edi
  421bf8:	in     eax,dx
  421bf9:	out    dx,al
  421bfa:	mov    eax,cs:0xf944f8a2
  421c00:	adc    dl,bl
  421c02:	cdq    
  421c03:	or     eax,0xc68f3184
  421c08:	mov    bh,0xd8
  421c0a:	(bad)  
  421c0c:	and    eax,0x3667bbd3
  421c11:	and    dl,dh
  421c13:	in     eax,0x3d
  421c15:	(bad)  
  421c17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c18:	ror    BYTE PTR [ebx+eiz*8-0x123a9183],cl
  421c1f:	or     edi,DWORD PTR [ebx+0x1b953065]
  421c25:	cmovne ebx,DWORD PTR [ebx+esi*8-0x26]
  421c2a:	mov    ebx,0x4be4bf2e
  421c2f:	cmp    BYTE PTR [edi+0xc96b478],0x26
  421c36:	jmp    0x421c7a
  421c38:	sbb    si,sp
  421c3b:	sub    cl,ah
  421c3d:	mov    ecx,0xd4ca14b6
  421c42:	inc    edx
  421c43:	and    DWORD PTR es:[ecx],edi
  421c46:	sbb    esi,edi
  421c48:	jae    0x421c93
  421c4a:	idiv   BYTE PTR [edx+0x4ae24205]
  421c50:	and    al,0x93
  421c52:	mov    DWORD PTR [ebx-0x14],esi
  421c55:	repnz fisttp QWORD PTR [ebp+0x71]
  421c59:	call   0xb2d7a1a8
  421c5e:	test   DWORD PTR [eax+0x68de356b],edx
  421c64:	rol    BYTE PTR [ebx+ebp*2+0x2e],1
  421c68:	mov    edi,0x74302df2
  421c6d:	cmp    esi,DWORD PTR [eax+ebp*8+0x53]
  421c71:	sub    edi,DWORD PTR [ebx+0x5b5543dd]
  421c77:	xlat   BYTE PTR ds:[ebx]
  421c78:	pop    ecx
  421c79:	pop    eax
  421c7a:	sbb    al,0x32
  421c7c:	aas    
  421c7d:	aas    
  421c7e:	imul   edx,DWORD PTR [ebp-0x24cbff60],0xa13f0647
  421c88:	push   0x60
  421c8a:	out    0x48,al
  421c8c:	int    0x4e
  421c8e:	or     eax,0x489c18d6
  421c93:	ret    0x6adb
  421c96:	jg     0x421d0a
  421c98:	mov    ebx,0x521d927
  421c9d:	and    BYTE PTR [ebp-0x6ef8ee4f],0xf1
  421ca4:	mov    edx,0xf8491603
  421ca9:	jo     0x421c87
  421cab:	cmp    eax,0x40e490e6
  421cb0:	inc    ecx
  421cb1:	mov    eax,0x5f4f062
  421cb6:	add    DWORD PTR [edi-0x1a],edx
  421cb9:	fidiv  WORD PTR [ebx+0x193dac10]
  421cbf:	ds dec esi
  421cc1:	xor    eax,0x55e82a56
  421cc6:	je     0x421cc6
  421cc8:	pop    es
  421cc9:	fst    QWORD PTR [ecx+0x61]
  421ccc:	lea    ebx,[esi-0x4e]
  421ccf:	mov    al,0xea
  421cd1:	or     DWORD PTR [edx],edi
  421cd3:	int3   
  421cd4:	cmp    eax,0x1a7276a4
  421cd9:	add    eax,0x19ef14e5
  421cde:	jb     0x421c83
  421ce0:	sub    bl,0xe7
  421ce3:	js     0x421d3f
  421ce5:	(bad)  
  421ce6:	adc    eax,0xb2fca0d
  421ceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cec:	scas   al,BYTE PTR es:[edi]
  421ced:	xor    DWORD PTR [ebp+0x35],edi
  421cf0:	retf   0xdb05
  421cf3:	mov    ds:0xbdba1617,eax
  421cf8:	adc    BYTE PTR [ecx+0x37],bh
  421cfb:	mov    esi,0x9bd45b09
  421d00:	mov    edx,DWORD PTR [eax]
  421d02:	stos   DWORD PTR es:[edi],eax
  421d03:	xor    al,bl
  421d05:	ret    
  421d06:	xlat   BYTE PTR ds:[ebx]
  421d07:	mov    dl,0x47
  421d09:	in     eax,0xc7
  421d0b:	data16 or al,0xb4
  421d0e:	cmp    BYTE PTR [ecx],bh
  421d10:	dec    edi
  421d11:	leave  
  421d12:	push   ss
  421d13:	pop    ebx
  421d14:	into   
  421d15:	shr    BYTE PTR [ebp-0x32872aa0],cl
  421d1b:	ret    
  421d1c:	adc    DWORD PTR [eax+0x73],0x47
  421d20:	jb     0x421d81
  421d22:	sub    BYTE PTR ds:0x2369c88e,0x74
  421d29:	std    
  421d2a:	cmp    BYTE PTR [eax],cl
  421d2c:	mov    eax,0xfc8d4f56
  421d31:	adc    al,0x55
  421d33:	pop    ecx
  421d34:	mov    ah,0xc
  421d36:	clc    
  421d37:	dec    ebx
  421d38:	ja     0x421d80
  421d3a:	into   
  421d3b:	test   DWORD PTR [ecx+esi*2+0x6926cf3b],ebp
  421d42:	mov    esp,0x7a736dad
  421d47:	dec    ebx
  421d48:	jecxz  0x421d21
  421d4a:	int    0x16
  421d4c:	push   0x3e281ccc
  421d51:	push   0x53
  421d53:	gs add cl,bl
  421d56:	inc    ebp
  421d57:	mov    edx,0x2343b6a7
  421d5c:	mov    DWORD PTR [edi],edx
  421d5e:	pop    ebp
  421d5f:	outs   dx,DWORD PTR ds:[esi]
  421d60:	jg     0x421d4d
  421d62:	jb     0x421d35
  421d64:	into   
  421d65:	fidiv  DWORD PTR [edx-0x5b203de0]
  421d6b:	aaa    
  421d6c:	in     eax,dx
  421d6d:	into   
  421d6e:	fs clc 
  421d70:	sahf   
  421d71:	xor    eax,0x2baa26d0
  421d76:	cwde   
  421d77:	dec    edx
  421d78:	jns    0x421d3e
  421d7a:	sbb    al,0xcf
  421d7c:	jg     0x421d4b
  421d7e:	jne    0x421dc6
  421d80:	int3   
  421d81:	add    esi,0xfffffffa
  421d84:	dec    edx
  421d85:	popa   
  421d86:	not    BYTE PTR [edi+0x18]
  421d89:	pop    ds
  421d8a:	in     eax,0xb
  421d8c:	rcl    bl,0x7f
  421d8f:	xchg   esp,eax
  421d90:	test   BYTE PTR [edi],bh
  421d92:	sbb    dl,dl
  421d94:	pusha  
  421d95:	js     0x421dc5
  421d97:	jns    0x421d81
  421d99:	push   esi
  421d9a:	and    eax,0xfcd63dd8
  421d9f:	stos   DWORD PTR es:[edi],eax
  421da0:	mov    al,al
  421da2:	adc    DWORD PTR [esp+edi*8],esp
  421da5:	mov    edi,0xa16c10bb
  421daa:	cmc    
  421dab:	inc    eax
  421dac:	push   0xe34391a
  421db1:	stc    
  421db2:	jp     0x421d67
  421db4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421db5:	adc    al,0x1
  421db7:	push   0xffffff9e
  421db9:	inc    ebx
  421dba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dbb:	mov    ebp,ebx
  421dbd:	sub    eax,eax
  421dbf:	adc    BYTE PTR [edx],ah
  421dc1:	daa    
  421dc2:	fnstenv [ebp-0x11]
  421dc5:	xchg   ebp,eax
  421dc6:	mov    ds:0xa4d8e1db,al
  421dcb:	add    esp,DWORD PTR [eax-0x58]
  421dce:	mov    ds:0xb1bcf995,eax
  421dd3:	fild   DWORD PTR [edx]
  421dd5:	pushf  
  421dd6:	add    DWORD PTR [edi],ebp
  421dd8:	sti    
  421dd9:	xchg   esp,eax
  421dda:	sub    eax,0x8940548d
  421ddf:	push   ebx
  421de0:	sub    esp,DWORD PTR [ebx]
  421de2:	xchg   ebx,eax
  421de3:	or     ecx,edi
  421de5:	loop   0x421de6
  421de7:	ror    al,1
  421de9:	fstp   DWORD PTR ds:0xde765a11
  421def:	pop    ss
  421df0:	test   edx,0x54ea99db
  421df6:	(bad)  
  421df7:	add    ebx,DWORD PTR [eax-0xb]
  421dfa:	xlat   BYTE PTR ds:[ebx]
  421dfb:	jmp    DWORD PTR [eax+0x513ea4e3]
  421e01:	punpcklbw mm4,DWORD PTR [ecx-0x18aa8a07]
  421e08:	inc    ebx
  421e09:	add    al,dh
  421e0b:	mov    ds:0x30604812,eax
  421e10:	into   
  421e11:	(bad)  
  421e12:	mov    ebp,0x18c92527
  421e17:	popa   
  421e18:	add    DWORD PTR [ecx+0x32ff8150],ebx
  421e1e:	pop    edi
  421e1f:	push   esi
  421e20:	sub    ebx,DWORD PTR [ebp-0x75]
  421e23:	div    DWORD PTR [edi+0x5f]
  421e26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e27:	dec    edx
  421e28:	xor    ebx,DWORD PTR [edx+0x485d10a1]
  421e2e:	and    eax,0x85a9ef2a
  421e33:	inc    esp
  421e34:	(bad)  
  421e35:	loope  0x421e5b
  421e37:	arpl   WORD PTR [ecx-0x10],ax
  421e3a:	cmp    BYTE PTR [eax],al
  421e3c:	mov    ebp,edx
  421e3e:	rcr    DWORD PTR [ebx],cl
  421e40:	repz cmp ecx,ebx
  421e43:	cli    
  421e44:	in     al,dx
  421e45:	jg     0x421e7e
  421e47:	loopne 0x421e31
  421e49:	out    dx,eax
  421e4a:	xchg   edi,eax
  421e4b:	or     DWORD PTR [edx-0x78fffe67],edx
  421e51:	add    al,BYTE PTR [eax]
  421e53:	add    BYTE PTR [edi+eax*1],dh
  421e56:	cwde   
  421e57:	jbe    0x421e2c
  421e59:	mov    bl,0xc8
  421e5b:	cmova  ebx,eax
  421e5e:	pop    es
  421e5f:	adc    eax,0x25dc1906
  421e64:	cdq    
  421e65:	or     eax,0x931d22f3
  421e6a:	jb     0x421e08
  421e6c:	sti    
  421e6d:	stos   DWORD PTR es:[edi],eax
  421e6e:	fwait
  421e6f:	fs pop eax
  421e71:	jmp    0x84a3542d
  421e76:	xchg   edi,eax
  421e77:	add    al,0xf6
  421e79:	hlt    
  421e7a:	pop    ecx
  421e7b:	mov    bl,0x62
  421e7d:	sub    ecx,DWORD PTR [esi]
  421e7f:	xor    eax,0xc29f770b
  421e84:	cmc    
  421e85:	(bad)  
  421e86:	popf   
  421e87:	ins    DWORD PTR es:[edi],dx
  421e88:	mov    eax,0xeb0d8d1d
  421e8d:	xchg   di,ax
  421e8f:	jge    0x421e97
  421e91:	int3   
  421e92:	mov    bl,0x71
  421e94:	jl     0x421e64
  421e96:	out    dx,al
  421e97:	and    eax,0x6b2fb5b0
  421e9c:	adc    al,0x56
  421e9e:	push   ebp
  421e9f:	(bad)  
  421ea0:	out    0x3c,al
  421ea2:	jecxz  0x421ec5
  421ea4:	cld    
  421ea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ea7:	ret    0xc0de
  421eaa:	inc    ecx
  421eab:	std    
  421eac:	xchg   ebp,eax
  421ead:	mov    ch,BYTE PTR [ecx-0x4c]
  421eb0:	push   ds
  421eb1:	movhps QWORD PTR [ecx-0x26e87ed2],xmm7
  421eb8:	outs   dx,DWORD PTR ds:[esi]
  421eb9:	jnp    0x421eb0
  421ebb:	loop   0x421f14
  421ebd:	and    al,0x73
  421ebf:	xchg   ebx,eax
  421ec0:	jnp    0x421f30
  421ec2:	scas   al,BYTE PTR es:[edi]
  421ec3:	cwde   
  421ec4:	add    ah,BYTE PTR [esp+ebx*2-0x305da08d]
  421ecb:	iret   
  421ecc:	dec    esp
  421ecd:	pop    ecx
  421ece:	es pop edi
  421ed0:	mov    cl,0x16
  421ed2:	and    esi,DWORD PTR [esi+0x3854c9bf]
  421ed8:	push   ebx
  421ed9:	dec    edx
  421eda:	xor    ebp,ebx
  421edc:	fadd   QWORD PTR [edx+ebx*2+0x10b023]
  421ee3:	ret    0xe217
  421ee6:	add    BYTE PTR [ecx+ecx*1-0x4f],dl
  421eea:	cmp    DWORD PTR [ecx+eiz*8-0x6723b547],0xed2f1a5d
  421ef5:	jg     0x421f1a
  421ef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ef8:	add    al,0xe3
  421efa:	mov    edi,0x8b75aad1
  421eff:	inc    ecx
  421f00:	in     eax,dx
  421f01:	cmp    al,0xd8
  421f03:	(bad)  
  421f04:	rcl    BYTE PTR [ecx-0x26babafa],cl
  421f0a:	mov    dl,0x80
  421f0c:	mov    esp,0x72c3209a
  421f11:	mov    eax,ds:0x9e6a49e3
  421f16:	cli    
  421f17:	pop    ds
  421f18:	mov    al,ds:0xd59a60af
  421f1d:	iret   
  421f1e:	or     esp,ebx
  421f20:	stos   BYTE PTR es:[edi],al
  421f21:	aaa    
  421f22:	sub    eax,0x7f611f52
  421f27:	aad    0xcc
  421f29:	xchg   edx,eax
  421f2a:	repnz mov esp,fs
  421f2d:	push   eax
  421f2e:	dec    ecx
  421f2f:	jge    0x421f84
  421f31:	xchg   edx,eax
  421f32:	jo     0x421eb8
  421f34:	xchg   BYTE PTR [ebx+0x60],ch
  421f37:	cmc    
  421f38:	aas    
  421f39:	pop    ds
  421f3a:	jno    0x421f71
  421f3c:	std    
  421f3d:	push   es
  421f3e:	ds jno 0x421f6d
  421f41:	test   DWORD PTR [ebp+0x37],0x42dc7fa0
  421f48:	stos   DWORD PTR es:[edi],eax
  421f49:	les    eax,FWORD PTR [ebx-0x283b8d62]
  421f4f:	pop    eax
  421f50:	mov    dh,BYTE PTR [ecx+edx*2]
  421f53:	sub    DWORD PTR [eax-0x70],edx
  421f56:	or     eax,0x9beae12f
  421f5b:	cmp    al,0xa0
  421f5d:	aaa    
  421f5e:	and    eax,0xfd9a6428
  421f63:	leave  
  421f64:	aad    0x81
  421f66:	adc    edi,DWORD PTR [esi-0x30]
  421f69:	mov    cl,0xb
  421f6b:	dec    edx
  421f6c:	mov    DWORD PTR [ebx+ecx*2-0x75],esi
  421f70:	(bad)  
  421f71:	jno    0x421f6c
  421f73:	sub    ebx,esp
  421f75:	es pop eax
  421f77:	mov    ecx,DWORD PTR [edi]
  421f79:	push   ecx
  421f7a:	(bad)  
  421f7b:	lods   eax,DWORD PTR ds:[esi]
  421f7c:	rcr    BYTE PTR [ebp-0x6a],0xde
  421f80:	dec    ebp
  421f81:	lock inc edi
  421f83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f84:	push   esp
  421f85:	inc    ebx
  421f86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f87:	xor    esp,DWORD PTR [edx]
  421f89:	xchg   ebp,eax
  421f8a:	pop    eax
  421f8b:	imul   edi,DWORD PTR [eax],0x5e
  421f8e:	fistp  DWORD PTR [edi+eax*2]
  421f91:	sahf   
  421f92:	out    0xb6,eax
  421f94:	xchg   BYTE PTR [edi+0x5e],bl
  421f97:	stos   DWORD PTR es:[edi],eax
  421f98:	lea    esi,[eax-0x5c]
  421f9b:	mov    eax,ds:0xbcf9269e
  421fa0:	dec    eax
  421fa1:	mov    eax,0xea0ca5b6
  421fa6:	adc    dh,ah
  421fa8:	sbb    ebx,DWORD PTR [eax]
  421faa:	mov    bh,0xad
  421fac:	push   ecx
  421fad:	push   esi
  421fae:	add    al,0x9d
  421fb0:	out    dx,al
  421fb1:	mov    eax,0xa345723e
  421fb6:	inc    ecx
  421fb7:	in     eax,0x4b
  421fb9:	out    0xe6,al
  421fbb:	push   esp
  421fbc:	ja     0x421fd6
  421fbe:	mov    al,ds:0x2b9bfe40
  421fc3:	mov    al,ds:0x9f8de179
  421fc8:	adc    edx,DWORD PTR [ebx+0x3b]
  421fcb:	jae    0x422034
  421fcd:	dec    eax
  421fce:	cmp    DWORD PTR [eax],0x60
  421fd1:	add    ebx,ecx
  421fd3:	jbe    0x422041
  421fd5:	lods   al,BYTE PTR ds:[esi]
  421fd6:	faddp  st(0),st
  421fd8:	jp     0x421fd4
  421fda:	mov    BYTE PTR [edx+0x30f30b00],bh
  421fe0:	leave  
  421fe1:	sbb    cl,BYTE PTR [esi+0x74fd654e]
  421fe7:	and    al,0x13
  421fe9:	(bad)  
  421fea:	xor    ebp,DWORD PTR [ecx+0x3fe22551]
  421ff0:	(bad)  
  421ff1:	pop    ds
  421ff2:	ins    DWORD PTR es:[edi],dx
  421ff3:	inc    edx
  421ff4:	ins    BYTE PTR es:[edi],dx
  421ff5:	mov    ch,0x2
  421ff7:	cld    
  421ff8:	xor    ebx,DWORD PTR [edi-0x9954288]
  421ffe:	popa   
  421fff:	add    eax,0xeb26f21
  422004:	inc    ecx
  422005:	aad    0x50
  422007:	mov    ah,0xc0
  422009:	cli    
  42200a:	sbb    dh,bh
  42200c:	cmp    edi,esp
  42200e:	push   ecx
  42200f:	add    dl,BYTE PTR [eax]
  422011:	jno    0x422086
  422013:	lods   al,BYTE PTR ds:[esi]
  422014:	xchg   ebx,eax
  422015:	push   0xffffffc2
  422017:	pop    ebp
  422018:	ret    
  422019:	jbe    0x421fdf
  42201b:	fld    DWORD PTR ds:0xc1fd66d1
  422021:	sbb    esp,DWORD PTR [edx+0x75]
  422024:	xor    al,0xc3
  422026:	in     al,dx
  422027:	inc    DWORD PTR [eax]
  422029:	push   es
  42202a:	std    
  42202b:	nop
  42202c:	retf   0xcacb
  42202f:	mov    ch,0x7c
  422031:	adc    cl,BYTE PTR [eax+0x13]
  422034:	cmp    al,0x0
  422036:	sbb    ecx,DWORD PTR [ecx]
  422038:	neg    DWORD PTR [esi+0x71881e3]
  42203e:	push   edi
  42203f:	das    
  422040:	std    
  422041:	pop    ebp
  422042:	mov    BYTE PTR [ebx],al
  422044:	ja     0x42203a
  422046:	int3   
  422047:	pop    ds
  422048:	pop    ss
  422049:	xchg   edi,eax
  42204a:	push   0xffffffe3
  42204c:	xor    dh,0x65
  42204f:	outs   dx,DWORD PTR ds:[esi]
  422050:	add    al,0x55
  422052:	mov    eax,0x23c284e5
  422057:	mov    edx,0x421492c
  42205c:	cmc    
  42205d:	or     BYTE PTR [ecx],0x85
  422060:	jle    0x42202b
  422062:	mov    ds:0x9e29945c,eax
  422067:	stos   DWORD PTR es:[edi],eax
  422068:	inc    edi
  422069:	lods   eax,DWORD PTR fs:[esi]
  42206b:	sbb    bl,BYTE PTR [esi]
  42206d:	dec    edi
  42206e:	repnz mov dl,0x53
  422071:	sbb    esi,DWORD PTR [ecx+0x3c5536f3]
  422077:	popa   
  422078:	ins    DWORD PTR es:[edi],dx
  422079:	sahf   
  42207a:	outs   dx,BYTE PTR ds:[esi]
  42207b:	adc    ebp,ebx
  42207d:	cmp    esi,ebx
  42207f:	xchg   BYTE PTR [esi+0x44],cl
  422082:	push   eax
  422083:	lds    edx,FWORD PTR [ebx*2-0x5d7f0878]
  42208a:	fs aas 
  42208c:	lahf   
  42208d:	in     al,dx
  42208e:	call   FWORD PTR [edi-0x27202c15]
  422094:	ret    0x6a03
  422097:	add    esp,ecx
  422099:	dec    ebx
  42209a:	out    0xcd,eax
  42209c:	jmp    0xa2b9:0x1328f055
  4220a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220a4:	jl     0x4220d1
  4220a6:	enter  0xdd9,0xaa
  4220aa:	cmp    cl,ch
  4220ac:	sbb    dl,BYTE PTR [ebp-0x45]
  4220af:	test   BYTE PTR [edi],bh
  4220b1:	fst    DWORD PTR [ebp+0x1bdf477b]
  4220b7:	das    
  4220b8:	pop    es
  4220b9:	sub    bl,cl
  4220bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220bc:	je     0x42210d
  4220be:	mov    DWORD PTR [eax],edx
  4220c0:	mov    edi,0x9e849ccb
  4220c5:	add    bl,cl
  4220c7:	pusha  
  4220c8:	aam    0x60
  4220ca:	inc    esi
  4220cb:	xor    al,0x2b
  4220cd:	push   0xb50978e3
  4220d2:	mov    dl,0x55
  4220d4:	dec    esp
  4220d5:	mov    bl,BYTE PTR [esi+0x68082447]
  4220db:	add    dl,dl
  4220dd:	and    dl,BYTE PTR [esi-0x21410966]
  4220e3:	push   0x52
  4220e5:	push   ds
  4220e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220e7:	and    dh,BYTE PTR [ebx+0x9]
  4220ea:	stos   BYTE PTR es:[edi],al
  4220eb:	ret    0x9c19
  4220ee:	add    DWORD PTR [eax],eax
  4220f0:	xchg   DWORD PTR [edx],eax
  4220f2:	add    BYTE PTR [eax],al
  4220f4:	cli    
  4220f5:	mov    cr6,edx
  4220f8:	cmp    eax,0xf18d447e
  4220fd:	jbe    0x42214a
  4220ff:	test   eax,0xd7f980f9
  422104:	pusha  
  422105:	into   
  422106:	dec    esp
  422107:	xchg   esi,eax
  422108:	inc    edi
  422109:	xor    eax,DWORD PTR [ebp-0x5e]
  42210c:	outs   dx,DWORD PTR ds:[esi]
  42210d:	or     al,0x11
  42210f:	addr16 jg 0x4220f5
  422112:	inc    esp
  422113:	cmp    bl,BYTE PTR [ebp+0x2e]
  422116:	ins    DWORD PTR es:[edi],dx
  422117:	or     al,0x88
  422119:	outs   dx,BYTE PTR ds:[esi]
  42211a:	out    0xe5,eax
  42211c:	outs   dx,BYTE PTR ds:[esi]
  42211d:	mov    WORD PTR [ecx],cs
  42211f:	xchg   ebx,eax
  422120:	(bad)  
  422121:	repnz pop eax
  422123:	div    BYTE PTR [ebx]
  422125:	repz add al,0x31
  422128:	mov    cl,0x62
  42212a:	xlat   BYTE PTR ds:[ebx]
  42212b:	mov    esi,0xf2c5ae83
  422130:	jle    0x42219a
  422132:	adc    al,0xf9
  422134:	jecxz  0x4221ad
  422136:	or     BYTE PTR cs:0x65d5cab8,cl
  42213d:	push   ecx
  42213e:	scas   al,BYTE PTR es:[edi]
  42213f:	adc    BYTE PTR [edi],cl
  422141:	jns    0x4220d2
  422143:	cmp    ah,BYTE PTR [eax]
  422145:	mov    ?,ecx
  422147:	lea    ebp,[ebx]
  422149:	sbb    ecx,DWORD PTR [ebx+ebx*1]
  42214c:	pop    edi
  42214d:	adc    BYTE PTR [esi-0x233d9b88],0x8b
  422154:	rol    WORD PTR [eax-0x16],cl
  422158:	in     eax,dx
  422159:	dec    eax
  42215a:	inc    ebx
  42215b:	xchg   edx,eax
  42215c:	test   DWORD PTR [edx+0xbf79e6a],edx
  422162:	imul   BYTE PTR [eax]
  422164:	xchg   edx,eax
  422165:	in     eax,0x92
  422167:	cld    
  422168:	xchg   ebp,eax
  422169:	sub    ecx,DWORD PTR [ecx+ebp*2-0x5c]
  42216d:	jecxz  0x422109
  42216f:	push   esi
  422170:	jbe    0x42215f
  422172:	icebp  
  422173:	fst    QWORD PTR [eax]
  422175:	add    edx,eax
  422177:	mov    bh,BYTE PTR ds:0x3c79faa9
  42217d:	push   ecx
  42217e:	jne    0x422184
  422180:	leave  
  422181:	ficom  WORD PTR [ebp-0x214d2650]
  422187:	loope  0x42215d
  422189:	fild   WORD PTR [edx]
  42218b:	dec    ebp
  42218c:	jmp    0x42213e
  42218e:	stos   DWORD PTR es:[edi],eax
  42218f:	mov    ds:0x696723ca,al
  422194:	inc    edi
  422195:	int3   
  422196:	retf   
  422197:	out    dx,al
  422198:	std    
  422199:	cmp    al,0xa7
  42219b:	pop    ebx
  42219c:	xchg   edi,eax
  42219d:	inc    esp
  42219e:	mov    dh,0x31
  4221a0:	test   eax,0x9e77c68b
  4221a5:	lods   eax,DWORD PTR ds:[esi]
  4221a6:	and    BYTE PTR [ebp-0x11],bl
  4221a9:	jo     0x4221db
  4221ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221ac:	inc    eax
  4221ad:	mov    ecx,0x9bdd5d4d
  4221b2:	cmp    cx,WORD PTR [ebp-0x49]
  4221b6:	xchg   ebp,eax
  4221b7:	fwait
  4221b8:	jecxz  0x422187
  4221ba:	cmp    ebx,0xe980235d
  4221c0:	sub    DWORD PTR [edi-0x1],eax
  4221c3:	or     ebx,ebx
  4221c5:	out    dx,eax
  4221c6:	jmp    0xd252714f
  4221cb:	mov    ah,0xbf
  4221cd:	mov    ah,0x19
  4221cf:	iret   
  4221d0:	fild   DWORD PTR [esi]
  4221d2:	outs   dx,BYTE PTR ds:[esi]
  4221d3:	out    0x1,al
  4221d5:	push   esi
  4221d6:	lock mov eax,DWORD PTR ss:[ebx+ebp*1+0x71]
  4221dc:	cwde   
  4221dd:	pop    eax
  4221de:	imul   DWORD PTR [eax+0x538bdd6a]
  4221e4:	ja     0x422220
  4221e6:	cli    
  4221e7:	fwait
  4221e8:	push   ebx
  4221e9:	int    0xf4
  4221eb:	mov    edx,0x4b457b1c
  4221f0:	addr16 je 0x42217a
  4221f3:	cmp    cl,BYTE PTR [ebp+ecx*8+0x74a4a2]
  4221fa:	push   cs
  4221fb:	jmp    0x4221dc
  4221fd:	(bad)  
  4221fe:	stc    
  4221ff:	adc    ebx,DWORD PTR [edx]
  422201:	push   ebp
  422202:	(bad)  
  422204:	test   eax,0xa99f49c1
  422209:	sub    ch,bl
  42220b:	mov    bl,0x21
  42220d:	iret   
  42220e:	jecxz  0x422199
  422210:	pop    DWORD PTR [edx-0x7827aaa8]
  422216:	or     BYTE PTR [edi-0x78a223c8],al
  42221c:	pop    esi
  42221d:	repnz daa 
  42221f:	cmc    
  422220:	popa   
  422221:	dec    ecx
  422222:	clc    
  422223:	jno    0x4221c4
  422225:	retf   0x45e0
  422228:	stc    
  422229:	ja     0x42229f
  42222b:	js     0x4221cd
  42222d:	sub    ah,ah
  42222f:	data16 das 
  422231:	pop    ebx
  422232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422233:	repnz shl DWORD PTR [ebx+edx*1-0x64],cl
  422238:	fisttp WORD PTR [edx-0x48]
  42223b:	and    edi,DWORD PTR [ebp+0x1c8cd83]
  422241:	test   al,0xf9
  422243:	fwait
  422244:	xchg   esp,eax
  422245:	jl     0x422238
  422247:	out    0xa0,al
  422249:	xchg   BYTE PTR [ecx+0x7d],bl
  42224c:	out    dx,eax
  42224d:	and    esp,ecx
  42224f:	aas    
  422250:	mov    edi,0x1224d3cf
  422255:	mov    edi,0x41e2481e
  42225a:	hlt    
  42225b:	add    BYTE PTR [edx+0x3a],dl
  42225e:	std    
  42225f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422260:	or     al,0x79
  422262:	fist   WORD PTR [ebp+0x23]
  422265:	mov    eax,ds:0x5656456d
  42226a:	cdq    
  42226b:	mov    BYTE PTR [eax-0x6052977f],cl
  422271:	aam    0x5b
  422273:	xor    esi,DWORD PTR [edi+0x49fc20ad]
  422279:	test   BYTE PTR [edi-0x3cf0939a],ah
  42227f:	jmp    0xa4ce:0xfa27c410
  422286:	jb     0x42222d
  422288:	repnz lock lahf 
  42228b:	cwde   
  42228c:	push   es
  42228d:	or     ah,BYTE PTR [edx-0x2adecbe2]
  422293:	not    BYTE PTR [ebp+0x2e]
  422296:	dec    esp
  422297:	inc    ecx
  422298:	xor    BYTE PTR [ebx-0x58],0x33
  42229c:	outs   dx,DWORD PTR ds:[esi]
  42229d:	sbb    DWORD PTR [edi],esi
  42229f:	leave  
  4222a0:	mov    DWORD PTR [ecx+eax*1],eax
  4222a3:	push   ss
  4222a4:	into   
  4222a5:	addr16 sub dl,cl
  4222a8:	icebp  
  4222a9:	adc    dh,BYTE PTR [ebp+0x36ab1225]
  4222af:	mov    WORD PTR [esp+eiz*2-0x80],es
  4222b3:	popa   
  4222b4:	das    
  4222b5:	xchg   edx,esp
  4222b7:	out    0xc2,al
  4222b9:	loop   0x4222eb
  4222bb:	push   ebx
  4222bc:	and    eax,0x9330de3c
  4222c1:	stos   BYTE PTR es:[edi],al
  4222c2:	dec    edx
  4222c3:	pop    eax
  4222c4:	std    
  4222c5:	mov    eax,0xd0fe7c7f
  4222ca:	or     al,0x8d
  4222cc:	stc    
  4222cd:	jmp    DWORD PTR ds:0x53dc2100
  4222d3:	or     al,0xc3
  4222d5:	jmp    0xb4bb:0xf0131d3
  4222dc:	mov    esi,0x8d4300b1
  4222e1:	pusha  
  4222e2:	cmp    ecx,DWORD PTR [edi]
  4222e4:	into   
  4222e5:	imul   edi,DWORD PTR [esp-0x56e98d2c],0xffffff8a
  4222ed:	jmp    0x422334
  4222ef:	add    ecx,DWORD PTR [eax+0x1ea77666]
  4222f5:	or     al,0x1d
  4222f7:	dec    esi
  4222f8:	mov    edx,0x1f87ea2b
  4222fd:	repz mov bh,0x57
  422300:	add    ah,al
  422302:	jp     0x422379
  422304:	mov    bh,BYTE PTR [ecx]
  422306:	shl    BYTE PTR [esi+0x66a41b69],0x85
  42230d:	mov    cl,0x0
  42230f:	push   ecx
  422310:	sub    ebx,esp
  422312:	aad    0x14
  422314:	jle    0x422378
  422316:	fdiv   DWORD PTR [ecx-0x49d510d2]
  42231c:	in     al,0x32
  42231e:	in     eax,dx
  42231f:	iret   
  422320:	clc    
  422321:	inc    edi
  422322:	xchg   esp,eax
  422323:	enter  0x4d68,0x67
  422327:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422328:	lds    ecx,FWORD PTR [edx-0x4384fd44]
  42232e:	cwde   
  42232f:	repnz jmp 0x4104:0xf80da15b
  422337:	push   ebp
  422338:	mov    ds:0x89018591,eax
  42233d:	test   al,0xff
  42233f:	pop    ebx
  422340:	nop
  422341:	and    cl,BYTE PTR [eax+0x43e55a25]
  422347:	(bad)  
  422348:	rol    DWORD PTR [edx*2+0x1f2f4ffd],cl
  42234f:	jnp    0x42237e
  422351:	push   edi
  422352:	xor    esi,DWORD PTR [esi-0x5a]
  422355:	sbb    al,0x57
  422357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422358:	pop    ecx
  422359:	pop    esi
  42235a:	adc    eax,0x57f2f821
  42235f:	pop    esp
  422360:	push   ecx
  422361:	mov    dh,BYTE PTR [edx+edx*8-0x2864c631]
  422368:	fidivr WORD PTR [esi]
  42236a:	cmc    
  42236b:	sbb    dh,bh
  42236d:	cmp    eax,0x19aa3be6
  422372:	jb     0x42232d
  422374:	clc    
  422375:	(bad)
  422379:	xchg   ebp,eax
  42237a:	fadd   DWORD PTR [eax]
  42237c:	fnstsw WORD PTR [edi+ecx*4]
  42237f:	mov    esp,0x7dffbfef
  422384:	add    al,BYTE PTR [ebp+0x63928dc1]
  42238a:	ret    0xa0d7
  42238d:	sahf   
  42238e:	add    DWORD PTR [eax],eax
  422390:	xchg   DWORD PTR [edx],eax
  422392:	add    BYTE PTR [eax],al
  422394:	in     eax,0x2e
  422396:	mov    bl,0x8d
  422398:	sbb    bl,BYTE PTR [eax]
  42239a:	out    0xf8,al
  42239c:	pop    edi
  42239d:	jg     0x4223ae
  42239f:	imul   ecx,eax,0x4f
  4223a2:	stos   BYTE PTR es:[edi],al
  4223a3:	xor    edx,DWORD PTR [ecx+0x14791217]
  4223a9:	daa    
  4223aa:	outs   dx,DWORD PTR ds:[esi]
  4223ab:	fcmovb st,st(4)
  4223ad:	(bad)  
  4223ae:	adc    BYTE PTR gs:[ebp+0x57],bl
  4223b2:	out    dx,al
  4223b3:	mov    bl,0x12
  4223b5:	mov    bl,0xc4
  4223b7:	addr16 jbe 0x42237a
  4223ba:	pop    ds
  4223bb:	mov    dh,0xe1
  4223bd:	sbb    ebp,ebp
  4223bf:	loope  0x4223d6
  4223c1:	mov    eax,ds:0x544ecdfe
  4223c6:	push   ecx
  4223c7:	pop    esp
  4223c8:	sahf   
  4223c9:	cmp    DWORD PTR [esi],ebp
  4223cb:	loopne 0x422417
  4223cd:	jne    0x4223a2
  4223cf:	cmp    esp,edi
  4223d1:	test   cl,0x1b
  4223d4:	inc    BYTE PTR [esi]
  4223d6:	jae    0x422385
  4223d8:	cmp    al,bl
  4223da:	or     dh,BYTE PTR [ebx-0x6e]
  4223dd:	jecxz  0x422396
  4223df:	sub    BYTE PTR [ebp+0x7d],bh
  4223e2:	out    0x7b,eax
  4223e4:	test   eax,0xec59b3e2
  4223e9:	cmp    DWORD PTR [edx-0x2de0aaff],esp
  4223ef:	sub    al,0x9e
  4223f1:	iret   
  4223f2:	ss sbb eax,0xcd752952
  4223f8:	sub    al,0x4
  4223fa:	inc    eax
  4223fb:	jmp    0xdd431640
  422400:	jmp    0x8b0703a6
  422405:	or     DWORD PTR [ebx+0x2f1d86b1],edi
  42240b:	mov    al,ds:0x79e555d6
  422410:	mov    ds,WORD PTR [ebx]
  422412:	adc    al,0x0
  422414:	pop    ss
  422415:	sub    ah,BYTE PTR [edi+0x1d907d65]
  42241b:	sbb    DWORD PTR [eax],esp
  42241d:	mov    edi,0x3078fa28
  422422:	and    eax,0xf90db704
  422427:	lods   al,BYTE PTR ds:[esi]
  422428:	push   edi
  422429:	out    0x4f,eax
  42242b:	(bad)  
  42242c:	int3   
  42242d:	pop    ss
  42242e:	out    0x3c,eax
  422430:	ja     0x4223f2
  422432:	sahf   
  422433:	add    al,0x80
  422435:	leave  
  422436:	cmp    al,0x44
  422438:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422439:	imul   ebx,ebx,0x5dcb5253
  42243f:	popf   
  422440:	neg    BYTE PTR [ebx-0x2b]
  422443:	(bad)  
  422444:	mov    esi,0x568427d7
  422449:	std    
  42244a:	jne    0x4223e3
  42244c:	mov    ebp,0xca762774
  422451:	gs inc edx
  422453:	xchg   esp,eax
  422454:	xchg   ecx,eax
  422455:	xor    BYTE PTR [edi-0x737d5917],cl
  42245b:	xor    DWORD PTR [edi+ebx*1-0x640e5144],edi
  422462:	jg     0x42246e
  422464:	xor    BYTE PTR [edx-0x1580520b],ch
  42246a:	fs clc 
  42246c:	xchg   ecx,eax
  42246d:	cwde   
  42246e:	loop   0x4224e4
  422470:	sub    dh,0x11
  422473:	push   ebp
  422474:	sub    esi,eax
  422476:	sub    al,0xfe
  422478:	call   0xd2068be8
  42247d:	mov    bh,0xd6
  42247f:	dec    ecx
  422480:	nop
  422481:	or     al,0x60
  422483:	sbb    BYTE PTR ds:0x33f20c44,dl
  422489:	call   0xd3da:0xb723b435
  422490:	leave  
  422491:	add    eax,0x6d577aee
  422496:	fcom   QWORD PTR [esi-0x574bedb1]
  42249d:	mov    esi,DWORD PTR [ecx+0x450017fe]
  4224a3:	stos   BYTE PTR es:[edi],al
  4224a4:	sbb    DWORD PTR [ebx+edx*2-0x2f],ecx
  4224a8:	pop    edi
  4224a9:	add    ebp,DWORD PTR [edx+0x51e08004]
  4224af:	jbe    0x422526
  4224b1:	stc    
  4224b2:	sbb    eax,0x48a338ab
  4224b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224b8:	sub    DWORD PTR [ebx-0x4f8537c6],ecx
  4224be:	cdq    
  4224bf:	jmp    0x422475
  4224c1:	or     eax,0x864281e6
  4224c6:	pop    esi
  4224c7:	add    ecx,esp
  4224c9:	xchg   BYTE PTR fs:[esi+0x15],al
  4224cd:	xor    DWORD PTR [ebx-0x73],eax
  4224d0:	xchg   ebp,eax
  4224d1:	int3   
  4224d2:	jo     0x4224db
  4224d4:	in     al,dx
  4224d5:	shl    bl,0xa9
  4224d8:	hlt    
  4224d9:	dec    eax
  4224da:	xor    BYTE PTR [eax],dl
  4224dc:	addr16 jmp 0x4224b6
  4224df:	fimul  WORD PTR [ebp-0x79a57d94]
  4224e5:	mov    al,0xbd
  4224e7:	xor    al,0x7e
  4224e9:	imul   ebx,DWORD PTR [edx-0x19],0x27
  4224ed:	lock div cl
  4224f0:	hlt    
  4224f1:	adc    al,0xee
  4224f3:	out    0xcb,eax
  4224f5:	add    cl,BYTE PTR [ecx-0x78a6d584]
  4224fb:	repnz mov tr4,ebp
  4224ff:	pop    es
  422500:	stos   DWORD PTR es:[edi],eax
  422501:	or     al,0x30
  422503:	push   ds
  422504:	mov    dl,0xbe
  422506:	xor    al,0x83
  422508:	fsub   DWORD PTR [ebx-0x28]
  42250b:	std    
  42250c:	div    DWORD PTR [edx*1+0x35491efa]
  422513:	pushf  
  422514:	xor    al,0x3e
  422516:	add    eax,0xd83f77d2
  42251b:	xor    al,0x3e
  42251d:	jne    0x422582
  42251f:	jb     0x4224aa
  422521:	out    dx,eax
  422522:	cld    
  422523:	and    al,0x42
  422525:	adc    bh,BYTE PTR [ebx+0x69]
  422528:	aaa    
  422529:	jae    0x422512
  42252b:	pop    ebx
  42252c:	ds xchg ebx,eax
  42252e:	mov    eax,0x4076f4bf
  422533:	das    
  422534:	imul   ebp,DWORD PTR [edi+0x53],0x53a3bd1c
  42253b:	jecxz  0x42250f
  42253d:	loopne 0x4224e1
  42253f:	mov    esi,0xf860cd8a
  422544:	std    
  422545:	jge    0x422548
  422547:	jne    0x422592
  422549:	leave  
  42254a:	jcxz   0x42258e
  42254d:	call   0xb1cb:0x198908cc
  422554:	cld    
  422555:	sbb    dl,BYTE PTR [edi]
  422557:	lds    eax,FWORD PTR [ecx+0x4]
  42255a:	pop    ds
  42255b:	adc    ebp,DWORD PTR [ebp+0x60]
  42255e:	mov    ch,0xfb
  422560:	outs   dx,BYTE PTR ds:[esi]
  422561:	(bad)  
  422562:	mov    al,0x40
  422564:	mov    al,ds:0x799e1572
  422569:	jmp    0x422587
  42256b:	cli    
  42256c:	aas    
  42256d:	test   DWORD PTR [ecx],edi
  42256f:	in     al,dx
  422570:	inc    esi
  422571:	and    edi,DWORD PTR [eax+0x1c]
  422574:	push   ss
  422575:	mov    edx,0xa4aa275f
  42257a:	call   0x3a48:0x8e39c839
  422581:	mov    fs,WORD PTR [esi-0x6a]
  422584:	ins    BYTE PTR es:[edi],dx
  422585:	repz cmp ch,bl
  422588:	cwde   
  422589:	xchg   ebx,eax
  42258a:	xor    BYTE PTR [edi],dl
  42258c:	add    DWORD PTR [esi+0x7b],ecx
  42258f:	lods   eax,DWORD PTR ds:[esi]
  422590:	dec    ebp
  422591:	les    edi,FWORD PTR [esi+0x34]
  422594:	cmc    
  422595:	sub    eax,0xd7889a00
  42259a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42259b:	jp     0x42251e
  42259d:	iret   
  42259e:	xor    eax,0x1edd0f02
  4225a3:	mov    DWORD PTR [esi-0x15],ebp
  4225a6:	pushf  
  4225a7:	setge  BYTE PTR [eax-0x28]
  4225ab:	sub    al,0x16
  4225ad:	in     al,0xc3
  4225af:	jecxz  0x422606
  4225b1:	mov    ?,WORD PTR ds:0x854f96f
  4225b7:	and    BYTE PTR [esi+0x22],dl
  4225ba:	mov    ebp,0xff7187ee
  4225bf:	sbb    DWORD PTR [esi+0x2cb952ac],ecx
  4225c5:	in     eax,0x7c
  4225c7:	push   0x906cfb16
  4225cc:	mov    ecx,DWORD PTR [esi]
  4225ce:	mov    DWORD PTR [ebx-0x35],eax
  4225d1:	hlt    
  4225d2:	adc    eax,0x7438a630
  4225d7:	(bad)  
  4225d8:	mov    cl,0x75
  4225da:	test   ch,al
  4225dc:	inc    esp
  4225dd:	mov    ecx,0xc18fb730
  4225e2:	mov    cl,0x37
  4225e4:	gs xchg edx,eax
  4225e6:	in     al,0xd9
  4225e8:	gs mov ebp,esp
  4225eb:	jae    0x4225c3
  4225ed:	cmp    al,0x7c
  4225ef:	fild   QWORD PTR [edx*2-0x65c64b86]
  4225f6:	dec    ebx
  4225f7:	iret   
  4225f8:	ja     0x422583
  4225fa:	xchg   BYTE PTR [edi+0x73],ah
  4225fd:	jmp    0x422591
  4225ff:	push   0x58
  422601:	or     eax,0x3b9268d0
  422606:	or     DWORD PTR [eax-0x105c1cd1],0xffffffbe
  42260d:	dec    esi
  42260e:	xor    DWORD PTR [esi+0x37],edi
  422611:	and    edi,DWORD PTR [edi+0x32edb9f7]
  422617:	add    BYTE PTR [ebp-0x49ff3fbc],al
  42261d:	fistp  WORD PTR [ebx-0x40b904fe]
  422623:	push   eax
  422625:	and    eax,0x5a4e255e
  42262a:	jg     0x422670
  42262c:	daa    
  42262d:	mov    eax,ds:0x2870001
  422632:	add    BYTE PTR [eax],al
  422634:	mov    edx,0xdcd0a7bd
  422639:	test   BYTE PTR [ebx+0x38d6f23d],dl
  42263f:	push   ebx
  422640:	icebp  
  422641:	adc    DWORD PTR [ecx-0x8900b53],esi
  422647:	rcl    ecx,cl
  422649:	test   BYTE PTR [edi+0x2e19edea],0xbb
  422650:	pop    ds
  422651:	imul   eax,DWORD PTR [edi+0x1b],0xcf35140c
  422658:	jg     0x4225f3
  42265a:	inc    esi
  42265b:	mov    ecx,0x8aa5c6f8
  422660:	mov    gs:0x47fa1f10,al
  422666:	sti    
  422667:	test   eax,0x4802caa4
  42266d:	into   
  42266e:	inc    esi
  42266f:	dec    ebx
  422670:	daa    
  422671:	jno    0x42264b
  422673:	push   0x78650997
  422678:	scas   al,BYTE PTR es:[edi]
  422679:	adc    BYTE PTR [ebx],ch
  42267b:	(bad)
  42267e:	pop    eax
  42267f:	push   esi
  422680:	lds    edx,FWORD PTR [ebx]
  422682:	add    DWORD PTR [edi+0x39],esi
  422685:	mov    edi,cs
  422687:	shl    cl,cl
  422689:	in     eax,0x31
  42268b:	shl    al,cl
  42268d:	sbb    esp,DWORD PTR [edi-0xf2535b0]
  422693:	and    DWORD PTR [ecx+0x12d2e408],edi
  422699:	pusha  
  42269a:	push   eax
  42269b:	push   ebx
  42269c:	push   ecx
  42269d:	mov    ah,BYTE PTR [eax+eax*1-0x5961384b]
  4226a4:	stc    
  4226a5:	bound  ebx,QWORD PTR [edx]
  4226a7:	sbb    ebp,esi
  4226a9:	pusha  
  4226aa:	lds    ecx,FWORD PTR ds:[ebx-0x32]
  4226ae:	mov    esp,0xfca839a3
  4226b3:	lds    ebx,FWORD PTR [esi]
  4226b5:	imul   eax,DWORD PTR [ecx-0x1fd9651d],0x4196f43f
  4226bf:	ins    DWORD PTR es:[edi],dx
  4226c0:	cmp    DWORD PTR [edi+0x7cfa3cc3],ebx
  4226c6:	pop    edi
  4226c7:	test   al,0xd8
  4226c9:	jno    0x422660
  4226cb:	cld    
  4226cc:	or     al,0x1b
  4226ce:	and    BYTE PTR [ebx+0x620b4e55],0x13
  4226d5:	lds    ebx,FWORD PTR ds:0x4e6ae4bf
  4226db:	inc    ebp
  4226dc:	mov    cl,0x2c
  4226de:	jl     0x422744
  4226e0:	outs   dx,BYTE PTR ds:[esi]
  4226e1:	dec    edx
  4226e2:	jecxz  0x4226c6
  4226e4:	cmp    cl,bh
  4226e6:	(bad)
  4226e9:	or     al,0xf
  4226eb:	rol    DWORD PTR [ebx+ebx*4],1
  4226ee:	in     al,dx
  4226ef:	fcomi  st,st(4)
  4226f1:	sub    eax,0xf097c5cd
  4226f6:	mov    ds:0x873b2d05,eax
  4226fb:	inc    esi
  4226fc:	jle    0x422680
  4226fe:	pop    esp
  4226ff:	out    dx,eax
  422700:	ins    BYTE PTR es:[edi],dx
  422701:	imul   ebx,edi,0x7829ef95
  422707:	or     BYTE PTR [esi-0x740b2884],dh
  42270d:	lea    ebx,[ebx+ebx*8-0x7d4eb9a0]
  422714:	cmp    eax,0x2a4fff4a
  422719:	fmul   DWORD PTR [ebx+0x74]
  42271c:	or     edi,DWORD PTR [edx]
  42271e:	pop    ecx
  42271f:	or     BYTE PTR [ebx-0x4d],al
  422722:	push   0xc
  422724:	stos   DWORD PTR es:[edi],eax
  422725:	icebp  
  422726:	data16 jle 0x422731
  422729:	and    BYTE PTR [edx-0xbcc0695],0xe
  422730:	shr    BYTE PTR cs:[ebp-0x4d],0xfd
  422735:	cmp    DWORD PTR [ecx-0x4a],ecx
  422738:	call   DWORD PTR [ebx+0x22]
  42273b:	inc    ebx
  42273c:	pop    esi
  42273d:	xchg   ebx,eax
  42273e:	xchg   BYTE PTR [ebx-0x5e2468b2],ch
  422744:	pop    esp
  422745:	imul   ecx,edx,0x20
  422748:	out    dx,al
  422749:	lahf   
  42274a:	lds    edx,FWORD PTR [ebx-0x6c]
  42274d:	or     DWORD PTR [esi+edx*8],ecx
  422750:	(bad)  
  422751:	cmc    
  422752:	ja     0x42270d
  422754:	jb     0x42276f
  422756:	cmp    al,0x88
  422758:	jp     0x4227ad
  42275a:	sub    BYTE PTR [esi],dh
  42275c:	(bad)  
  42275d:	mov    ebp,0x797606a0
  422762:	mov    ebx,0xab896e97
  422767:	dec    esp
  422768:	outs   dx,DWORD PTR ds:[esi]
  422769:	inc    ebx
  42276a:	jne    0x4226fe
  42276c:	sub    edi,DWORD PTR [ecx-0x50fec918]
  422772:	mov    eax,ds:0x48731bc1
  422777:	push   ss
  422778:	popf   
  422779:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42277a:	xor    eax,0x690bae8e
  42277f:	arpl   WORD PTR [ecx+esi*8-0x9c496c2],ax
  422786:	sbb    BYTE PTR [edx],dh
  422788:	(bad)  
  422789:	ss ret 
  42278b:	inc    edx
  42278c:	in     al,dx
  42278d:	aaa    
  42278e:	pushf  
  42278f:	push   ss
  422790:	sub    eax,0xa5ffbc78
  422795:	mov    bl,0x1
  422797:	popf   
  422798:	push   0xffffffa9
  42279a:	ss popa 
  42279c:	cmp    BYTE PTR [ebp-0x5a],0x40
  4227a0:	lods   al,BYTE PTR ds:[esi]
  4227a1:	xchg   BYTE PTR [esi+0x55e6eea5],ah
  4227a7:	out    0xa7,eax
  4227a9:	out    0xf3,eax
  4227ab:	pop    esp
  4227ac:	prefetch (bad)
  4227ad:	or     eax,0x5d8de0f1
  4227b2:	fistp  DWORD PTR ds:0xefc8e320
  4227b8:	sbb    esp,DWORD PTR [ebp+edi*2-0x6140526d]
  4227bf:	unpcklps xmm7,XMMWORD PTR [ebx]
  4227c2:	fnstenv [ecx]
  4227c4:	or     DWORD PTR [esi+0x342c0c95],edx
  4227ca:	loope  0x422846
  4227cc:	pop    ss
  4227cd:	in     eax,dx
  4227ce:	xor    dl,BYTE PTR [ebx+0x3ee26729]
  4227d4:	fwait
  4227d5:	outs   dx,BYTE PTR ds:[esi]
  4227d6:	adc    ch,BYTE PTR [eax-0x2c]
  4227d9:	mov    DWORD PTR [ecx+eiz*2-0x6cf1ad65],ebx
  4227e0:	pop    eax
  4227e1:	aad    0xbd
  4227e3:	test   al,0x71
  4227e5:	lods   eax,DWORD PTR ds:[esi]
  4227e6:	js     0x4227a1
  4227e8:	or     bh,BYTE PTR [ebx+eax*1+0x2]
  4227ec:	mov    WORD PTR [edi+0x6],ss
  4227ef:	arpl   WORD PTR [ebp+0x4c],di
  4227f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227f3:	xor    eax,0x1dc4dd14
  4227f8:	mov    ebx,0x3e86cc65
  4227fd:	sti    
  4227fe:	outs   dx,DWORD PTR es:[esi]
  422800:	call   0x4a8d:0xaf57ceaa
  422807:	add    al,0xd7
  422809:	iret   
  42280a:	ja     0x4227ab
  42280c:	mov    eax,0x3db7d18f
  422811:	lahf   
  422812:	mov    bl,0xf2
  422814:	sbb    al,0x90
  422816:	in     al,0xe4
  422818:	int    0xd
  42281a:	cmp    al,0x2e
  42281c:	scas   al,BYTE PTR es:[edi]
  42281d:	xchg   ebx,eax
  42281e:	daa    
  42281f:	sbb    al,0x50
  422821:	jmp    FWORD PTR [edi-0x20]
  422824:	add    ebp,DWORD PTR [eax]
  422826:	sbb    ebp,DWORD PTR [edi+0x1f]
  422829:	push   0x814aa8ca
  42282e:	xor    al,0xf7
  422830:	aad    0x5c
  422832:	clc    
  422833:	or     al,0x7d
  422835:	add    cl,ah
  422837:	cmp    BYTE PTR [edi],dl
  422839:	adc    eax,0xdeea2f74
  42283e:	ss (bad) 
  422840:	loopne 0x422862
  422842:	pop    edx
  422843:	cld    
  422844:	and    DWORD PTR [ebx],edi
  422846:	call   0x6b70152c
  42284b:	inc    ebx
  42284c:	repnz hlt 
  42284e:	mov    ss,WORD PTR [edx+ecx*2+0xba7f107]
  422855:	fmul   DWORD PTR [edx-0x72bc006d]
  42285b:	add    al,0xdd
  42285d:	jbe    0x422839
  42285f:	add    esp,DWORD PTR [edx+0x51]
  422862:	(bad)  
  422863:	inc    edi
  422864:	xchg   esp,eax
  422865:	es or  eax,0x8ebc6422
  42286b:	jle    0x4227fb
  42286d:	sub    al,BYTE PTR fs:[ebx-0x22]
  422871:	js     0x422807
  422873:	dec    esp
  422874:	test   BYTE PTR [edi-0x22a79393],cl
  42287a:	mov    edx,edi
  42287c:	aaa    
  42287d:	push   ebp
  42287e:	xlat   BYTE PTR cs:[ebx]
  422880:	xor    bl,BYTE PTR [edx]
  422882:	(bad)  
  422883:	in     eax,0xd3
  422885:	loope  0x4228c8
  422887:	aaa    
  422888:	inc    esp
  422889:	and    BYTE PTR [edi+0x4165fbcf],dl
  42288f:	ins    BYTE PTR es:[edi],dx
  422890:	and    al,0x84
  422892:	(bad)  
  422893:	retf   
  422894:	mov    ebx,0x5901f602
  422899:	ds test eax,0xcba3d3fa
  42289f:	cdq    
  4228a0:	xchg   ecx,eax
  4228a1:	shl    BYTE PTR fs:[edx+ebp*1-0x4c],cl
  4228a6:	mov    eax,ds:0xe30e329d
  4228ab:	fs mov bh,0xc
  4228ae:	sub    edi,DWORD PTR [eax-0x71]
  4228b1:	mov    ebp,DWORD PTR [ebx+0x2aba8e0a]
  4228b7:	xor    al,0x97
  4228b9:	cwde   
  4228ba:	outs   dx,BYTE PTR ds:[esi]
  4228bb:	add    al,bh
  4228bd:	mov    ah,0x7f
  4228bf:	cmp    eax,0xf5faff7f
  4228c4:	jle    0x4228c8
  4228c6:	xor    eax,DWORD PTR [esi-0xe]
  4228c9:	and    bh,BYTE PTR [ebp+0x1a3ae90]
  4228cf:	add    BYTE PTR [edi+0x36000002],al
  4228d5:	aam    0xba
  4228d7:	arpl   WORD PTR [ebp+0x20f359ad],dx
  4228dd:	adc    al,0xeb
  4228df:	mov    ebp,0x5c9fd312
  4228e4:	sbb    al,0xf
  4228e6:	dec    eax
  4228e7:	std    
  4228e8:	sti    
  4228e9:	jle    0x422877
  4228eb:	mov    dh,0x84
  4228ed:	jne    0x422929
  4228ef:	xchg   esp,eax
  4228f0:	mov    edx,0x7cd31da0
  4228f5:	pop    edi
  4228f6:	cs popa 
  4228f8:	retf   
  4228f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228fa:	mov    esp,DWORD PTR [ecx+0x59]
  4228fd:	jmp    0x42297e
  4228ff:	xchg   edi,eax
  422900:	mov    eax,ds:0x8a8be581
  422905:	popf   
  422906:	and    edi,ebx
  422908:	inc    esp
  422909:	add    bl,BYTE PTR [eax+0x29c9e3f5]
  42290f:	dec    eax
  422910:	xor    BYTE PTR [ecx+0x72],cl
  422913:	inc    ebp
  422914:	inc    edx
  422915:	je     0x42290f
  422917:	cmp    edx,DWORD PTR [ebp+0x33]
  42291a:	or     ebx,DWORD PTR [ecx+0x42]
  42291d:	jg     0x4228ab
  42291f:	test   ecx,ebp
  422921:	dec    edi
  422922:	dec    eax
  422923:	xlat   BYTE PTR ds:[ebx]
  422924:	call   0x6e5cc575
  422929:	div    DWORD PTR [esi+edi*4]
  42292c:	aad    0xd6
  42292e:	inc    esp
  42292f:	in     eax,dx
  422930:	sub    BYTE PTR [eax+ebx*1+0x1b],dh
  422934:	out    0xf0,eax
  422936:	push   cs
  422937:	ins    BYTE PTR es:[edi],dx
  422938:	adc    eax,0xa44a579c
  42293d:	jns    0x4228f4
  42293f:	pop    eax
  422940:	imul   DWORD PTR [eax]
  422942:	jge    0x422933
  422944:	in     al,dx
  422945:	inc    esp
  422946:	or     ecx,DWORD PTR [edi+0x34]
  422949:	mov    dh,0x9d
  42294b:	test   dh,0xbc
  42294e:	ins    DWORD PTR es:[edi],dx
  42294f:	or     al,0xec
  422951:	add    eax,DWORD PTR [ebx-0x75ea55bd]
  422957:	jne    0x422923
  422959:	mov    edi,0x7d5d8194
  42295e:	in     al,dx
  42295f:	lock fwait
  422961:	mov    eax,ds:0xe0a364f7
  422966:	dec    ebp
  422967:	out    0x43,eax
  422969:	push   ebx
  42296a:	int3   
  42296b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42296c:	fild   WORD PTR [esi-0x435815e1]
  422972:	sti    
  422973:	xchg   ecx,eax
  422974:	test   DWORD PTR [ecx-0x53],esp
  422977:	sbb    al,0x49
  422979:	add    DWORD PTR [esi+0x15],ebx
  42297c:	jnp    0x422971
  42297e:	sbb    BYTE PTR [ebx-0x7c],ah
  422981:	sub    DWORD PTR [eax],ebp
  422983:	stc    
  422984:	push   ecx
  422985:	push   edx
  422986:	or     bh,BYTE PTR [eax-0x439c3891]
  42298c:	jecxz  0x4229ff
  42298e:	cmp    ecx,DWORD PTR ds:0xff7cdd60
  422994:	jns    0x4229be
  422996:	jmp    0x422980
  422998:	sub    eax,0xc5f47ec4
  42299d:	add    eax,0x7b2f5c0d
  4229a2:	xchg   esp,edi
  4229a4:	jae    0x422961
  4229a6:	pop    edi
  4229a7:	push   ebp
  4229a8:	retf   0x2524
  4229ab:	mov    BYTE PTR [eax+edx*1-0x38df868c],dh
  4229b2:	adc    DWORD PTR [edi],0x47
  4229b5:	adc    eax,esp
  4229b7:	arpl   WORD PTR [esp+ecx*2],sp
  4229ba:	cdq    
  4229bb:	sbb    DWORD PTR [edi-0x46],ebp
  4229be:	mov    dh,0xd4
  4229c0:	jmp    0xb068d6e5
  4229c5:	rcr    BYTE PTR [eax+0x5d7660d1],0xcf
  4229cc:	sub    esi,ecx
  4229ce:	aas    
  4229cf:	int3   
  4229d0:	cdq    
  4229d1:	scas   eax,DWORD PTR es:[edi]
  4229d2:	push   ebx
  4229d3:	call   0x56376d1e
  4229d8:	stos   BYTE PTR es:[edi],al
  4229d9:	xchg   ebp,eax
  4229da:	mov    BYTE PTR [esp+esi*4-0x5d1ec8d7],dl
  4229e1:	jge    0x422993
  4229e3:	and    bl,BYTE PTR [ebp+0x65029570]
  4229e9:	jmp    0xe4ec8148
  4229ee:	(bad)  
  4229ef:	fdivr  DWORD PTR [esi-0x25]
  4229f2:	jmp    0x128a8671
  4229f7:	jne    0x422a13
  4229f9:	gs cli 
  4229fb:	fstp   TBYTE PTR [edi-0x6246ad55]
  422a01:	mov    ebx,0x415c7fd4
  422a06:	pop    ecx
  422a07:	mov    ds,WORD PTR [esi+ebp*2]
  422a0a:	jns    0x422a2d
  422a0c:	test   eax,0x1e8a8604
  422a11:	sub    bh,bl
  422a13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a14:	dec    edi
  422a15:	mov    edi,ss
  422a17:	out    0x79,eax
  422a19:	add    eax,0xe258c4ac
  422a1e:	inc    eax
  422a1f:	(bad)  
  422a20:	in     al,0x1b
  422a22:	ret    
  422a23:	dec    ecx
  422a24:	mov    cl,cl
  422a26:	jp     0x422a6d
  422a28:	push   es
  422a29:	mov    edx,0x8330068f
  422a2e:	inc    esi
  422a2f:	jmp    0x7547417c
  422a34:	shl    BYTE PTR [edx-0x1f4b60ba],1
  422a3a:	xor    DWORD PTR [esi+edi*2+0x6e24bae4],0xca98c4cc
  422a45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a46:	jns    0x4229fc
  422a48:	jbe    0x422a46
  422a4a:	and    al,0x56
  422a4c:	pop    edi
  422a4d:	das    
  422a4e:	jle    0x422a8d
  422a50:	add    eax,0x46c60a78
  422a55:	pusha  
  422a56:	mov    ds:0x86bf28ab,eax
  422a5b:	push   edi
  422a5c:	sbb    esp,DWORD PTR [ebp-0x16]
  422a5f:	push   esp
  422a60:	lea    ebp,[eax-0x45002064]
  422a66:	ja     0x422a98
  422a68:	je     0x422a45
  422a6a:	adc    ax,WORD PTR [eax-0x553a6568]
  422a71:	xchg   edx,eax
  422a72:	mov    ds:0x6a4b9c7e,eax
  422a77:	mov    WORD PTR [ecx+ebx*8+0x83529b8],es
  422a7e:	ins    BYTE PTR es:[edi],dx
  422a7f:	mov    al,ds:0x20b213cb
  422a84:	cmp    eax,esi
  422a86:	(bad)  
  422a87:	arpl   WORD PTR [ebp+0x37],sp
  422a8a:	test   esi,edx
  422a8c:	mov    ch,0x95
  422a8e:	fld    QWORD PTR [edi]
  422a90:	pop    ds
  422a91:	dec    esp
  422a92:	inc    ecx
  422a93:	inc    ecx
  422a94:	and    DWORD PTR [esi-0x2e6295e4],esp
  422a9a:	push   esi
  422a9b:	push   esp
  422a9c:	ret    
  422a9d:	dec    esi
  422a9e:	adc    bh,0xd
  422aa1:	sbb    DWORD PTR [edx+0x13],edx
  422aa4:	pop    ecx
  422aa5:	cld    
  422aa6:	jb     0x422af8
  422aa8:	into   
  422aa9:	mov    ds:0xad9513da,al
  422aae:	or     edi,DWORD PTR [edi+edi*1+0xc]
  422ab2:	xchg   ebp,eax
  422ab3:	ret    0xbe7d
  422ab6:	xor    DWORD PTR [edi],esp
  422ab8:	adc    dl,0xf7
  422abb:	(bad)  
  422abc:	fdiv   DWORD PTR [esi]
  422abe:	popa   
  422abf:	push   ecx
  422ac0:	inc    ecx
  422ac1:	(bad)  
  422ac2:	xor    bl,BYTE PTR [esi]
  422ac4:	sbb    eax,DWORD PTR [ecx-0x50]
  422ac7:	push   eax
  422ac8:	cwde   
  422ac9:	xchg   ebx,eax
  422aca:	cli    
  422acb:	mov    ds:0x964b513,eax
  422ad0:	jno    0x422afd
  422ad2:	jnp    0x422abe
  422ad4:	mov    BYTE PTR [ebp+edx*4+0x8ea1d34],ah
  422adb:	push   0xffffffb2
  422add:	adc    BYTE PTR [ebx+ebp*1-0x660bc850],bl
  422ae4:	out    0x22,al
  422ae6:	fisubr WORD PTR [ecx+ebp*2]
  422ae9:	jg     0x422b40
  422aeb:	xor    BYTE PTR [eax-0x5c],dh
  422aee:	imul   esp,DWORD PTR [ebx+0xb3abf35],0x95454654
  422af8:	mov    esi,0x158179be
  422afd:	and    ah,bh
  422aff:	mov    al,ds:0xa9904000
  422b04:	inc    ecx
  422b05:	and    eax,0x426c197
  422b0a:	repz mov al,dh
  422b0d:	mov    fs,WORD PTR [eax+0x2d4a3cc0]
  422b13:	fs cwde 
  422b15:	sbb    ebx,edx
  422b17:	retf   0x460
  422b1a:	dec    ebx
  422b1b:	pop    ss
  422b1c:	daa    
  422b1d:	xor    bl,BYTE PTR [eax+esi*4-0x4f6db2f8]
  422b24:	xor    al,0x7d
  422b26:	jne    0x422b87
  422b28:	add    al,0x19
  422b2a:	mov    bh,0x11
  422b2c:	and    eax,DWORD PTR [eax]
  422b2e:	push   eax
  422b2f:	mov    al,0xf
  422b31:	xchg   ebx,ecx
  422b33:	test   DWORD PTR [ebx+0x46],edi
  422b36:	shr    BYTE PTR [ecx+esi*8+0x11],0xb1
  422b3b:	mov    esp,0xb29ccb7c
  422b40:	shl    BYTE PTR [edx],1
  422b42:	mov    eax,0x877acdf8
  422b47:	call   0xe2c2003d
  422b4c:	mov    eax,0xfc30e4f3
  422b51:	cld    
  422b52:	mov    ebx,0x459d996
  422b57:	add    ebx,DWORD PTR [eax]
  422b59:	icebp  
  422b5a:	xchg   edi,eax
  422b5b:	add    BYTE PTR [ecx],bh
  422b5d:	sbb    al,0x89
  422b5f:	out    0xad,eax
  422b61:	idiv   DWORD PTR [edi-0x22]
  422b64:	mov    DWORD PTR [edx+0x79],ebp
  422b67:	sub    DWORD PTR [ecx-0x6c],0xa63535dc
  422b6e:	add    DWORD PTR [eax],eax
  422b70:	xchg   DWORD PTR [edx],eax
  422b72:	add    BYTE PTR [eax],al
  422b74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b75:	ficomp WORD PTR [ebx-0x517158d]
  422b7b:	lock popa 
  422b7d:	dec    ebx
  422b7e:	sub    edx,0xed3ea994
  422b84:	xchg   BYTE PTR [esi+0x4d],bh
  422b87:	sub    ebp,edx
  422b89:	in     al,dx
  422b8a:	int    0x9b
  422b8c:	jmp    0x422b63
  422b8e:	xchg   esi,eax
  422b8f:	add    bl,BYTE PTR [edi]
  422b91:	xchg   ebp,eax
  422b92:	cwde   
  422b93:	xor    DWORD PTR [ebx+ecx*8],edi
  422b96:	and    DWORD PTR [ebp-0x4c],0x42
  422b9a:	or     eax,0x60fad248
  422b9f:	jno    0x422b2a
  422ba1:	mov    eax,0x4cbcb657
  422ba6:	idiv   BYTE PTR [esi]
  422ba8:	leave  
  422ba9:	xchg   cl,al
  422bab:	jae    0x422b85
  422bad:	add    edi,DWORD PTR [ebp-0x27f59f0f]
  422bb3:	test   BYTE PTR [eax],0x8d
  422bb6:	int    0x83
  422bb8:	retf   
  422bb9:	lds    eax,FWORD PTR [edx]
  422bbb:	xor    al,0x67
  422bbd:	test   BYTE PTR [ebp-0xae87b28],ah
  422bc3:	add    eax,DWORD PTR [edx]
  422bc5:	mov    eax,ds:0x3228c6a1
  422bca:	cmp    edi,DWORD PTR [edx+0x3]
  422bcd:	out    dx,eax
  422bce:	inc    ecx
  422bcf:	or     esi,DWORD PTR [eax]
  422bd1:	stc    
  422bd2:	inc    ebp
  422bd3:	repnz xchg esp,eax
  422bd5:	push   DWORD PTR [edi]
  422bd7:	stos   DWORD PTR es:[edi],eax
  422bd8:	(bad)  
  422bda:	outs   dx,BYTE PTR ds:[esi]
  422bdb:	inc    ebp
  422bdc:	ja     0x422b6b
  422bde:	(bad)  
  422bdf:	sub    eax,0x92cca4e
  422be4:	outs   dx,BYTE PTR ds:[esi]
  422be5:	push   ebp
  422be6:	test   al,0xc3
  422be8:	pop    esi
  422be9:	gs xchg ebx,eax
  422beb:	jg     0x422c09
  422bed:	or     eax,0xe27e82e7
  422bf2:	pop    edi
  422bf3:	les    ebp,FWORD PTR [ecx]
  422bf5:	retf   0x6ef1
  422bf8:	std    
  422bf9:	push   edi
  422bfa:	fsubrp st(0),st
  422bfc:	push   es
  422bfd:	jmp    0x9e0f:0xba0fd030
  422c04:	mov    ds:0xfdd9c7d6,eax
  422c09:	sar    BYTE PTR [ebx],1
  422c0b:	in     al,0x79
  422c0d:	stos   BYTE PTR es:[edi],al
  422c0e:	inc    ebx
  422c0f:	out    dx,eax
  422c10:	fldcw  WORD PTR [ebx]
  422c12:	cmp    ecx,ebx
  422c14:	sbb    eax,0xe7291b32
  422c19:	pop    ds
  422c1a:	mov    esp,0x8e6e2ba5
  422c1f:	fs leave 
  422c21:	ficomp WORD PTR [esi+0x7a492461]
  422c27:	out    dx,al
  422c28:	aam    0x64
  422c2a:	(bad)  
  422c2b:	pushw  ds
  422c2d:	dec    eax
  422c2e:	mov    al,0x53
  422c30:	loop   0x422c0f
  422c32:	inc    esi
  422c33:	jno    0x422c18
  422c35:	xor    eax,0x8c6217e4
  422c3a:	xor    dl,BYTE PTR [edx+0x3c]
  422c3d:	add    edi,esp
  422c3f:	imul   ebx,DWORD PTR [esi+eiz*2-0x5775464c],0xc234025
  422c4a:	adc    al,0x3a
  422c4c:	pushf  
  422c4d:	mov    dh,ah
  422c4f:	aaa    
  422c50:	mov    WORD PTR ds:0x62499c00,?
  422c56:	gs jae 0x422ca3
  422c59:	xchg   ebp,eax
  422c5a:	pop    esi
  422c5b:	and    al,ch
  422c5d:	mov    edx,0x6fe8a653
  422c62:	call   0xd922:0x7cf42248
  422c69:	jne    0x422ce4
  422c6b:	int    0x28
  422c6d:	std    
  422c6e:	xchg   edx,eax
  422c6f:	push   ss
  422c70:	rcr    BYTE PTR [ebp+0x49],cl
  422c73:	jmp    0xb6e73b85
  422c78:	into   
  422c79:	dec    edx
  422c7a:	mov    DWORD PTR [edx-0x76],eax
  422c7d:	jns    0x422cd9
  422c7f:	mov    dh,0x19
  422c81:	adc    BYTE PTR [edx+edx*1+0x4974ba8e],0x29
  422c89:	pop    es
  422c8a:	gs mov edx,0xa05c6485
  422c90:	and    edx,DWORD PTR [ebx-0x1e54c570]
  422c96:	jge    0x422cbd
  422c98:	sub    eax,0x25d8026
  422c9d:	psubusw mm7,QWORD PTR [edx-0x6f54adf2]
  422ca4:	inc    esp
  422ca5:	jae    0x422cc0
  422ca7:	pop    edi
  422ca8:	inc    ebx
  422ca9:	jge    0x422cc9
  422cab:	das    
  422cac:	fwait
  422cad:	and    edi,DWORD PTR [di-0x29]
  422cb1:	mov    edi,0xaf02b757
  422cb6:	pop    ebp
  422cb7:	and    al,0xf2
  422cb9:	xor    eax,0x90d0682f
  422cbe:	pop    ebp
  422cbf:	jbe    0x422caf
  422cc1:	cmp    ah,BYTE PTR es:[eax]
  422cc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cc5:	add    eax,0xa672d4f3
  422cca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ccb:	(bad)  
  422ccc:	repz lock lock sub eax,edi
  422cd1:	in     eax,dx
  422cd2:	sub    DWORD PTR [edi-0x328f2631],ebp
  422cd8:	shrd   edx,edi,0x51
  422cdc:	(bad)  
  422cdd:	sub    al,BYTE PTR [esi]
  422cdf:	mov    edi,0xa47eefe7
  422ce4:	pop    ecx
  422ce5:	call   0xadee:0x92c797af
  422cec:	dec    edx
  422ced:	rol    BYTE PTR [ecx],0xc7
  422cf0:	jl     0x422cec
  422cf2:	(bad)  
  422cf3:	call   DWORD PTR [edx+0x19]
  422cf6:	dec    ecx
  422cf7:	stos   BYTE PTR es:[edi],al
  422cf8:	jbe    0x422d32
  422cfa:	pop    edx
  422cfb:	aaa    
  422cfc:	add    bh,BYTE PTR [eax]
  422cfe:	popf   
  422cff:	test   BYTE PTR [eax+0x16],al
  422d02:	loope  0x422cb7
  422d04:	hlt    
  422d05:	mov    al,0xb7
  422d07:	aas    
  422d08:	je     0x422d4b
  422d0a:	sti    
  422d0b:	pop    eax
  422d0c:	ins    BYTE PTR es:[edi],dx
  422d0d:	int    0x3d
  422d0f:	jbe    0x422cf2
  422d11:	mov    bh,0x8
  422d13:	mov    al,0x55
  422d15:	test   DWORD PTR [edi-0x37],eax
  422d18:	lods   eax,DWORD PTR ds:[esi]
  422d19:	and    eax,0xd9bdeaee
  422d1e:	mov    dh,0x63
  422d20:	ss cmc 
  422d22:	repnz bound ebx,QWORD PTR [edi-0x6d]
  422d26:	in     al,dx
  422d27:	cdq    
  422d28:	add    edi,DWORD PTR [edx]
  422d2a:	mov    esp,0xcf4cbaf0
  422d2f:	mov    ch,BYTE PTR [eax-0x36]
  422d32:	inc    esi
  422d33:	nop
  422d34:	mov    cl,0x6b
  422d36:	adc    bh,cl
  422d38:	cmp    ch,0xc2
  422d3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d3c:	loope  0x422db9
  422d3e:	jge    0x422d67
  422d40:	sub    cl,BYTE PTR [ebx+edx*8]
  422d43:	adc    bl,ah
  422d45:	data16 sti 
  422d47:	ja     0x422d5a
  422d49:	xor    eax,0x76635cd6
  422d4e:	add    DWORD PTR [eax-0x28],edi
  422d51:	es dec esp
  422d53:	mov    ah,0xc4
  422d55:	lods   eax,DWORD PTR ds:[esi]
  422d56:	stos   DWORD PTR es:[edi],eax
  422d57:	or     dl,al
  422d59:	push   0x3e
  422d5b:	inc    esi
  422d5c:	and    DWORD PTR [edi+ecx*2],ecx
  422d5f:	and    DWORD PTR [edi+ecx*2+0x48],ebp
  422d63:	jmp    0x422d42
  422d65:	pop    ecx
  422d66:	fcmovbe st,st(2)
  422d68:	and    BYTE PTR [ecx-0x6b],cl
  422d6b:	jmp    0x6734ba26
  422d70:	fs std 
  422d72:	(bad)  
  422d73:	stos   DWORD PTR es:[edi],eax
  422d74:	jle    0x422cfd
  422d76:	out    dx,eax
  422d77:	repz fnstsw WORD PTR [eax]
  422d7a:	sbb    dh,dl
  422d7c:	pushf  
  422d7d:	ins    DWORD PTR es:[edi],dx
  422d7e:	cdq    
  422d7f:	in     eax,0xff
  422d81:	jae    0x422d59
  422d83:	(bad)  
  422d84:	adc    eax,0x80437f1a
  422d89:	inc    edx
  422d8a:	(bad)  
  422d8b:	push   edx
  422d8c:	cmp    esi,DWORD PTR [ebx]
  422d8e:	daa    
  422d8f:	lea    esp,[edx-0xd3615b]
  422d95:	mov    esp,0x30645ddf
  422d9a:	push   ds
  422d9b:	jns    0x422dee
  422d9d:	mov    cl,0xc2
  422d9f:	pop    edx
  422da0:	pushf  
  422da1:	inc    ebx
  422da2:	ficomp DWORD PTR [ebx+0x2a8623ed]
  422da8:	(bad)  
  422da9:	ror    esi,cl
  422dab:	push   0xc644f991
  422db0:	(bad)  
  422db1:	cmp    BYTE PTR [esi],ch
  422db3:	xchg   edx,eax
  422db4:	iret   
  422db5:	loopne 0x422dd9
  422db7:	sbb    DWORD PTR [ecx],esp
  422db9:	popf   
  422dba:	sub    eax,0xc88975a4
  422dbf:	pop    eax
  422dc0:	pop    es
  422dc1:	mov    DWORD PTR [eax-0x2d9bc772],esp
  422dc7:	scas   al,BYTE PTR es:[edi]
  422dc8:	adc    ebp,DWORD PTR [esi-0x37d76a59]
  422dce:	scas   eax,DWORD PTR es:[edi]
  422dcf:	hlt    
  422dd0:	mov    WORD PTR [edi+0x78],ds
  422dd3:	pop    es
  422dd4:	mov    al,0x57
  422dd6:	shr    ah,0xe
  422dd9:	xor    al,0x35
  422ddb:	imul   esi,ebx,0x85b89fcb
  422de1:	ror    DWORD PTR [ebx],1
  422de3:	sbb    al,0x12
  422de5:	jp     0x422e43
  422de7:	xchg   ecx,eax
  422de8:	mov    WORD PTR [esi-0x3008fdb6],?
  422dee:	(bad)  
  422df0:	sti    
  422df1:	cli    
  422df2:	shr    DWORD PTR ds:[eax],cl
  422df5:	mov    ds:0x861f4b66,eax
  422dfa:	sub    eax,DWORD PTR [eax]
  422dfc:	gs mov ah,0x18
  422dff:	fcompp 
  422e01:	(bad)  
  422e02:	out    0xbf,eax
  422e04:	gs mov ah,0x46
  422e07:	neg    BYTE PTR [eax+0x40]
  422e0a:	mov    esp,0x1a8bce6
  422e0f:	add    BYTE PTR [edi+0x3f000002],al
  422e15:	adc    DWORD PTR [ebx+esi*1+0x5a39f280],eax
  422e1c:	cmp    eax,0xfd39cd8d
  422e21:	fstp   DWORD PTR [esi+esi*1]
  422e24:	imul   eax,DWORD PTR fs:[ebp-0x46],0x56
  422e29:	sub    BYTE PTR [esi+0x49],dh
  422e2c:	cs mov ebx,0x4ca373e0
  422e32:	call   0xcbd1c977
  422e37:	cdq    
  422e38:	xor    DWORD PTR [eax-0x70],0xde7f050
  422e3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e40:	mov    ebp,0xce35289f
  422e45:	adc    BYTE PTR [edi+0x53f9ad44],al
  422e4b:	outs   dx,DWORD PTR ds:[esi]
  422e4c:	gs enter 0x9c54,0xe1
  422e51:	ror    BYTE PTR [ebx],1
  422e53:	add    BYTE PTR [edi+0x5d],ah
  422e56:	mov    edx,0xe1cbb3fd
  422e5b:	mov    esp,0x730c18e6
  422e60:	cmp    DWORD PTR [ebx],esp
  422e62:	sub    bh,BYTE PTR [ebx]
  422e64:	adc    al,0x74
  422e66:	mov    eax,ss
  422e68:	pusha  
  422e69:	inc    ecx
  422e6a:	jnp    0x422e90
  422e6c:	push   esi
  422e6d:	add    DWORD PTR [eax],edx
  422e6f:	cmp    BYTE PTR [ebp-0x6e],0x62
  422e73:	rcr    DWORD PTR [ecx+0x31],1
  422e76:	ds cmp al,0xcc
  422e79:	pusha  
  422e7a:	or     ebx,DWORD PTR [eax+0x2a]
  422e7d:	test   al,0xb2
  422e7f:	sbb    eax,DWORD PTR [ecx+0x74826769]
  422e85:	cld    
  422e86:	dec    esi
  422e87:	pusha  
  422e88:	dec    esi
  422e89:	and    BYTE PTR [esi-0x13],ah
  422e8c:	mov    dh,0xff
  422e8e:	push   edx
  422e8f:	cld    
  422e90:	int    0x1d
  422e92:	imul   edi,DWORD PTR [edx],0xffffffea
  422e95:	cdq    
  422e96:	fld    QWORD PTR [ebp-0x27d4be61]
  422e9c:	sub    al,BYTE PTR [edx-0x4a]
  422e9f:	int    0x1f
  422ea1:	dec    esp
  422ea2:	mov    dh,0xc7
  422ea4:	jbe    0x422f03
  422ea6:	dec    eax
  422ea7:	mov    al,0x1d
  422ea9:	rcl    DWORD PTR [edx-0x58b814bb],cl
  422eaf:	(bad)  
  422eb0:	dec    eax
  422eb1:	or     dl,bl
  422eb3:	int3   
  422eb4:	ins    DWORD PTR es:[edi],dx
  422eb5:	xor    eax,0x130629c2
  422eba:	inc    edi
  422ebb:	int3   
  422ebc:	add    dh,cl
  422ebe:	jne    0x422f04
  422ec0:	(bad)  
  422ec1:	loope  0x422e71
  422ec3:	(bad)  
  422ec4:	push   ebp
  422ec5:	and    edx,DWORD PTR [ebx]
  422ec7:	inc    di
  422ec9:	out    dx,al
  422eca:	hlt    
  422ecb:	mov    dh,0x8a
  422ecd:	cs cmp eax,0x8a69e600
  422ed3:	repz out dx,al
  422ed5:	enter  0x2554,0xb8
  422ed9:	ror    BYTE PTR [ebx-0x6e45505],1
  422edf:	mov    ch,0xd0
  422ee1:	pop    ebx
  422ee2:	push   es
  422ee3:	and    al,0x2f
  422ee5:	into   
  422ee6:	inc    eax
  422ee7:	in     eax,dx
  422ee8:	inc    eax
  422ee9:	jmp    0x422e9b
  422eeb:	push   es
  422eec:	scas   eax,DWORD PTR es:[edi]
  422eed:	fcomi  st,st(4)
  422eef:	add    al,0xb9
  422ef1:	in     eax,0x78
  422ef3:	ret    
  422ef4:	lock stc 
  422ef6:	lds    ebx,FWORD PTR [esi]
  422ef8:	idiv   BYTE PTR [edx+ebp*2]
  422efb:	push   ds
  422efc:	inc    esp
  422efd:	push   ebx
  422efe:	adc    al,0xe2
  422f00:	jb     0x422f5c
  422f02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f03:	ret    
  422f04:	inc    esi
  422f05:	add    esp,DWORD PTR ds:0x187c8023
  422f0b:	test   eax,0xc74a3847
  422f10:	pop    edi
  422f11:	or     esi,DWORD PTR [esi+0x2c]
  422f14:	sbb    edx,DWORD PTR [eax+0x6e95ef5e]
  422f1a:	push   edi
  422f1b:	jbe    0x422f8d
  422f1d:	popa   
  422f1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f1f:	je     0x422f00
  422f21:	or     DWORD PTR [eax+0x33],eax
  422f24:	sub    edx,ebx
  422f26:	vmread DWORD PTR [esi+edi*1+0x74e41bc5],esp
  422f2e:	aam    0xba
  422f30:	and    edi,DWORD PTR [edi]
  422f32:	lods   eax,DWORD PTR ds:[esi]
  422f33:	or     al,BYTE PTR [esi]
  422f35:	call   0xd50ab245
  422f3a:	mov    eax,0x7a8eead4
  422f3f:	jnp    0x422f15
  422f41:	xchg   esp,eax
  422f42:	jbe    0x422f0c
  422f44:	push   edi
  422f45:	push   esp
  422f46:	mov    ecx,0xec56a048
  422f4b:	xor    eax,0xd047a5f5
  422f50:	mov    ebx,DWORD PTR [esi]
  422f52:	jmp    0x422f3e
  422f54:	jne    0x422ed8
  422f56:	nop
  422f57:	pop    es
  422f58:	jae    0x422f7f
  422f5a:	push   esi
  422f5b:	dec    BYTE PTR [ebx-0x13]
  422f5e:	inc    esp
  422f5f:	push   ebp
  422f60:	inc    edi
  422f61:	sub    eax,0x7359d02
  422f66:	xchg   esp,eax
  422f67:	add    ebx,DWORD PTR [eax-0x76]
  422f6a:	mov    eax,ds:0x937acdf7
  422f6f:	ins    DWORD PTR es:[edi],dx
  422f70:	mov    BYTE PTR [ecx-0x60],dl
  422f73:	fidivr DWORD PTR [edx]
  422f75:	sahf   
  422f76:	es addr16 ds xchg ebx,eax
  422f7a:	lds    ebp,FWORD PTR [esi-0x1ed069b6]
  422f80:	outs   dx,DWORD PTR ds:[esi]
  422f81:	pop    ebp
  422f82:	push   edx
  422f83:	add    ebx,DWORD PTR [edx]
  422f85:	enter  0xd3b7,0x2a
  422f89:	jle    0x422fab
  422f8b:	add    eax,0x199f2d27
  422f90:	jmp    0x96546e6f
  422f95:	cwde   
  422f96:	test   eax,0xa1a9a391
  422f9b:	sahf   
  422f9c:	aaa    
  422f9d:	rcl    DWORD PTR [ecx],cl
  422f9f:	push   ss
  422fa0:	xor    ecx,DWORD PTR [ebx+0x74]
  422fa3:	inc    eax
  422fa4:	out    dx,eax
  422fa5:	aam    0x50
  422fa7:	dec    esi
  422fa8:	mov    ecx,0xe2002f61
  422fad:	push   ss
  422fae:	or     al,0x6c
  422fb0:	std    
  422fb1:	pop    ss
  422fb2:	stc    
  422fb3:	sbb    DWORD PTR [esi],esi
  422fb5:	and    cl,0xac
  422fb8:	test   al,0xab
  422fba:	sbb    ebp,ecx
  422fbc:	fwait
  422fbd:	cs add al,0x60
  422fc0:	add    BYTE PTR [eax-0x53],bh
  422fc3:	mov    cl,0x37
  422fc5:	mov    al,0x9d
  422fc7:	dec    esi
  422fc8:	push   ebp
  422fc9:	jns    0x422faf
  422fcb:	jle    0x423010
  422fcd:	loopne 0x42300e
  422fcf:	dec    edi
  422fd0:	push   0xffffffce
  422fd2:	addr16 test eax,0x62603ff3
  422fd8:	(bad)
  422fdc:	mov    cl,0x24
  422fde:	das    
  422fdf:	xlat   BYTE PTR ds:[ebx]
  422fe0:	pop    ecx
  422fe1:	call   FWORD PTR [edi]
  422fe3:	sub    BYTE PTR [edi+ebx*8-0x15d8ccf5],dl
  422fea:	pop    edx
  422feb:	push   ebp
  422fec:	mov    bl,0x13
  422fee:	dec    esp
  422fef:	cmc    
  422ff0:	popa   
  422ff1:	out    dx,eax
  422ff2:	push   0x624574d
  422ff7:	xchg   ebx,eax
  422ff8:	fucomp st(0)
  422ffa:	cmp    DWORD PTR [ebx-0x64f3ff85],edi
  423000:	test   BYTE PTR [edi],bl
  423002:	xor    BYTE PTR [edi],al
  423004:	jmp    0x5ca2a4cb
  423009:	psraw  mm2,mm2
  42300c:	and    ch,cl
  42300e:	jge    0x423068
  423010:	shl    BYTE PTR [edi+ebp*1],cl
  423013:	dec    esp
  423014:	aaa    
  423015:	fidiv  DWORD PTR [esi+0x4a]
  423018:	into   
  423019:	push   esi
  42301a:	ins    DWORD PTR es:[edi],dx
  42301b:	mov    dh,0x3c
  42301d:	xor    ah,0x7f
  423020:	lea    ecx,[eax]
  423022:	add    esp,ebp
  423024:	(bad)  
  423025:	push   ss
  423026:	adc    al,0xde
  423028:	sbb    ebp,DWORD PTR [ebp+eax*4-0x54bfb71e]
  42302f:	sub    eax,0x62037e3a
  423034:	aam    0xcd
  423036:	(bad)  [esi+esi*8+0x6388cc49]
  42303d:	xchg   DWORD PTR [ebx],edi
  42303f:	jle    0x42309a
  423041:	fs ins DWORD PTR es:[edi],dx
  423043:	xor    DWORD PTR [ebp+0x31c7a0ed],0xaad3956b
  42304d:	pop    ss
  42304e:	mov    bl,0x18
  423050:	int    0xc3
  423052:	pop    edx
  423053:	cs leave 
  423055:	rol    DWORD PTR [eax+0x27],1
  423058:	int    0xe8
  42305a:	xor    BYTE PTR [esi+0x2646b566],0x77
  423061:	stc    
  423062:	aam    0xad
  423064:	push   ss
  423065:	sub    al,0xb1
  423067:	mov    al,ds:0xd8159112
  42306c:	fcmovbe st,st(3)
  42306e:	add    DWORD PTR [edi-0x55],0x77b64124
  423075:	in     al,dx
  423076:	mov    bh,0xbe
  423078:	jns    0x423016
  42307a:	xchg   ebx,eax
  42307b:	rcl    edi,0x65
  42307e:	jbe    0x4230c9
  423080:	push   es
  423081:	jge    0x423033
  423083:	jmp    0x423044
  423085:	jno    0x42306a
  423087:	jo     0x423023
  423089:	add    eax,0xfdfc1718
  42308e:	imul   ebx,DWORD PTR [esp+edi*1],0x2d
  423092:	ins    DWORD PTR es:[edi],dx
  423093:	dec    edi
  423094:	in     eax,0xdd
  423096:	stc    
  423097:	stc    
  423098:	push   edx
  423099:	jno    0x42307e
  42309b:	add    BYTE PTR [edx],dl
  42309d:	fsub   DWORD PTR [ebx+0x72]
  4230a0:	jmp    0x42309d
  4230a2:	adc    edi,eax
  4230a4:	sub    edi,DWORD PTR [ebx+0x430788f7]
  4230aa:	sahf   
  4230ab:	call   0x287:0x1ab43
  4230b2:	add    BYTE PTR [eax],al
  4230b4:	push   ss
  4230b5:	xor    edx,0x6ae36c4f
  4230bb:	mov    BYTE PTR [esp+ebp*2-0x71],ah
  4230bf:	and    DWORD PTR [ebp+ecx*8-0x4],ebx
  4230c3:	sub    eax,0x8f74b4dd
  4230c8:	or     ecx,DWORD PTR [esi+0x3e]
  4230cb:	and    DWORD PTR [bx+di],edi
  4230ce:	pop    esi
  4230cf:	mov    ch,BYTE PTR [ebx]
  4230d1:	test   edx,ebp
  4230d3:	in     al,dx
  4230d4:	push   ds
  4230d5:	pop    ebp
  4230d6:	and    ebx,esp
  4230d8:	loop   0x4230c5
  4230da:	cwde   
  4230db:	sar    al,0x41
  4230de:	pop    ds
  4230df:	repz pushf 
  4230e1:	mov    ebp,0x27a81459
  4230e6:	pop    esp
  4230e7:	push   es
  4230e8:	dec    ebp
  4230e9:	dec    ebx
  4230ea:	xor    eax,eax
  4230ec:	sahf   
  4230ed:	adc    BYTE PTR [edx-0x503ab069],0xdf
  4230f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230f5:	arpl   WORD PTR [ecx+0x931cf63],sp
  4230fb:	sbb    al,0xa
  4230fd:	(bad)  
  4230fe:	jns    0x4230c2
  423100:	xor    al,0x30
  423102:	jne    0x4230df
  423104:	nop
  423105:	sar    DWORD PTR [eax],cl
  423107:	cs xor al,0xc5
  42310a:	jbe    0x423188
  42310c:	push   0x5
  42310e:	push   cs
  42310f:	repnz hlt 
  423111:	cld    
  423112:	imul   eax,DWORD PTR [ecx],0x74
  423115:	inc    ebx
  423116:	xchg   esp,eax
  423117:	and    eax,0x861bd4df
  42311c:	mov    bh,0x71
  42311e:	ficom  WORD PTR [ebx]
  423120:	xor    BYTE PTR [ecx],0x7b
  423123:	mov    WORD PTR [eax-0x20227d09],fs
  423129:	or     bh,bh
  42312b:	xchg   edx,eax
  42312c:	jmp    0x4230dc
  42312e:	out    dx,al
  42312f:	inc    esi
  423130:	movaps xmm5,XMMWORD PTR [ebp-0x6e]
  423134:	lods   eax,DWORD PTR ds:[esi]
  423135:	pop    ecx
  423136:	sub    bh,BYTE PTR ds:0x16119477
  42313c:	dec    esi
  42313d:	cmp    BYTE PTR [esi+0x606bed93],dh
  423143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423144:	xor    al,0xb7
  423146:	pop    edi
  423147:	and    cl,BYTE PTR [eax+0x7b]
  42314a:	dec    esi
  42314b:	mov    dl,0xbd
  42314d:	add    eax,0xe2d1ded9
  423152:	mov    al,ds:0xde09b383
  423157:	popf   
  423158:	repz bound ebp,QWORD PTR [edx-0x6]
  42315c:	aaa    
  42315d:	mov    ch,0x52
  42315f:	ds data16 std 
  423162:	and    bl,BYTE PTR [edi]
  423164:	les    ecx,FWORD PTR [edi]
  423166:	jo     0x423154
  423168:	mov    edi,0xb8de9514
  42316d:	add    DWORD PTR [ebx+0x77],0x7ccb086a
  423174:	cmp    eax,DWORD PTR [ebp-0x588d7073]
  42317a:	es dec eax
  42317c:	and    DWORD PTR [ecx-0x4d],ebp
  42317f:	popa   
  423180:	push   es
  423181:	sar    BYTE PTR [edx+0x179371ca],cl
  423187:	repnz shl bh,1
  42318a:	lods   al,BYTE PTR ds:[esi]
  42318b:	(bad)  
  42318c:	sub    cl,ch
  42318e:	mov    dl,0x97
  423190:	cmp    al,BYTE PTR [edx-0x710131ad]
  423196:	sub    DWORD PTR [edx],edx
  423198:	add    al,0x70
  42319a:	mov    bl,0x30
  42319c:	inc    esp
  42319d:	mov    esi,ebx
  42319f:	fsub   DWORD PTR [eax-0x7a]
  4231a2:	dec    eax
  4231a3:	xchg   ebp,eax
  4231a4:	sub    bl,BYTE PTR [eax]
  4231a6:	mov    gs,WORD PTR [edi+0x59f4242c]
  4231ac:	xchg   ecx,eax
  4231ad:	bsf    ebp,DWORD PTR [edx-0x36]
  4231b1:	loop   0x4231ef
  4231b3:	xor    ebp,DWORD PTR [ebx-0x775b250]
  4231b9:	and    bl,BYTE PTR [ebx]
  4231bb:	push   eax
  4231bc:	mov    ch,0x64
  4231be:	out    dx,eax
  4231bf:	xor    edx,esi
  4231c1:	lds    edx,FWORD PTR [eax-0x1e]
  4231c4:	mov    edi,DWORD PTR [ebx+0x2e76cba2]
  4231ca:	sahf   
  4231cb:	imul   ebp,edi,0x99bb748f
  4231d1:	inc    ecx
  4231d2:	(bad)  [edi+0x72]
  4231d5:	clc    
  4231d6:	outs   dx,DWORD PTR ds:[esi]
  4231d7:	add    edi,esi
  4231d9:	bound  edi,QWORD PTR [ebp+0x62]
  4231dc:	pop    es
  4231dd:	je     0x42324e
  4231df:	out    0xf5,al
  4231e1:	push   cs
  4231e2:	mov    ds:0x75245e75,al
  4231e7:	in     al,0x7
  4231e9:	adc    al,al
  4231eb:	popf   
  4231ec:	push   bx
  4231ee:	pushf  
  4231ef:	leave  
  4231f0:	adc    ebx,DWORD PTR [edx+ebp*1-0x58aba2bf]
  4231f7:	mov    bh,0xe3
  4231f9:	mov    BYTE PTR [esi-0x13],bh
  4231fc:	(bad)  
  4231fe:	js     0x423252
  423200:	push   es
  423201:	xchg   ebx,esp
  423203:	jmp    0x89e615c0
  423208:	inc    ebp
  423209:	mul    BYTE PTR [eax]
  42320b:	mov    dl,0x77
  42320d:	int    0x2c
  42320f:	pop    ebx
  423210:	mov    cl,0x73
  423212:	pop    esp
  423213:	mov    esi,0x8be79a8e
  423218:	push   cs
  423219:	push   esp
  42321a:	adc    eax,0xcf762df
  42321f:	dec    edi
  423220:	xor    ecx,DWORD PTR [ebp+0x56]
  423223:	xor    cl,dh
  423225:	test   al,0xab
  423227:	mov    dh,0x20
  423229:	xor    bl,al
  42322b:	sub    ch,dh
  42322d:	sub    al,0x0
  42322f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423230:	add    dh,bh
  423232:	fstp   st(1)
  423234:	mov    ebx,0x276ce1c1
  423239:	out    0x61,al
  42323b:	jle    0x4231bf
  42323d:	or     cl,BYTE PTR [edx+0x61]
  423240:	mov    al,0x60
  423242:	pop    es
  423243:	lods   al,BYTE PTR ds:[esi]
  423244:	xor    DWORD PTR [eax-0x28f59705],ebp
  42324a:	sbb    ah,0x5e
  42324d:	(bad)  
  42324f:	pop    ss
  423250:	test   BYTE PTR [ecx-0xd],0xb5
  423254:	js     0x423242
  423256:	arpl   WORD PTR ds:0xee4bc235,cx
  42325c:	add    eax,0xba9548e7
  423261:	std    
  423262:	mov    eax,ds:0x3790297a
  423267:	mov    bh,0x38
  423269:	mov    al,0x7f
  42326b:	ja     0x4232b9
  42326d:	popa   
  42326e:	add    BYTE PTR [ebp+0x4317b9bb],0x9d
  423275:	jae    0x4231fd
  423277:	out    0x85,eax
  423279:	out    dx,al
  42327a:	and    ch,BYTE PTR [eax]
  42327c:	add    ebp,edi
  42327e:	das    
  42327f:	ret    
  423280:	or     DWORD PTR [edi+0x7b],0x6b87aa9a
  423287:	dec    edx
  423288:	dec    edi
  423289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42328a:	mov    al,0xd
  42328c:	mov    eax,ds:0xb90c33cf
  423291:	sub    edi,eax
  423293:	ret    
  423294:	retf   
  423295:	inc    edi
  423296:	and    DWORD PTR [ecx+0x35],edx
  423299:	rcl    DWORD PTR [ebx-0x56],cl
  42329c:	mov    fs,WORD PTR [edx+0x481f3c03]
  4232a2:	inc    edi
  4232a3:	cwde   
  4232a4:	push   ecx
  4232a5:	xchg   edx,eax
  4232a6:	sub    cl,dl
  4232a8:	inc    edx
  4232a9:	jp     0x42327c
  4232ab:	mov    cl,0xe6
  4232ad:	sub    ah,BYTE PTR [eax+edx*8-0x1a3840a6]
  4232b4:	mov    eax,ds:0x34f7f417
  4232b9:	pop    ebp
  4232ba:	cmp    eax,0x15cd4a8d
  4232bf:	sbb    eax,0xe9e000a5
  4232c4:	not    BYTE PTR [eax]
  4232c6:	call   0x9cc:0x639a0e2b
  4232cd:	push   ds
  4232ce:	data16 icebp 
  4232d0:	sbb    al,0xc9
  4232d2:	scas   eax,DWORD PTR es:[edi]
  4232d3:	add    al,0xac
  4232d5:	mov    ds:0xa28c39cc,al
  4232da:	test   DWORD PTR [ebp-0x7eb3604c],0x2e126366
  4232e4:	dec    ebp
  4232e5:	sub    dl,BYTE PTR [edx+0x63]
  4232e8:	push   eax
  4232e9:	stos   DWORD PTR es:[edi],eax
  4232ea:	mov    al,0x38
  4232ec:	mov    bh,0x31
  4232ee:	shl    ch,0x96
  4232f1:	lea    ebp,[ebx+ebp*4-0xc]
  4232f5:	mov    cl,BYTE PTR [ecx+0x7d5beb77]
  4232fb:	jecxz  0x4232a5
  4232fd:	pop    edx
  4232fe:	jl     0x42333c
  423300:	mov    ebx,0xd47c5b83
  423305:	pop    ebp
  423306:	out    0xd9,al
  423308:	shl    BYTE PTR [ebx+ecx*8-0x77],cl
  42330c:	pop    ds
  42330d:	das    
  42330e:	dec    ebp
  42330f:	loop   0x423348
  423311:	loopne 0x423329
  423313:	add    DWORD PTR [eax-0x69],ebp
  423316:	stc    
  423317:	ins    DWORD PTR es:[edi],dx
  423318:	stos   DWORD PTR es:[edi],eax
  423319:	pop    edx
  42331a:	pushf  
  42331b:	jnp    0x423371
  42331d:	jae    0x42338b
  42331f:	ja     0x423332
  423321:	pop    edi
  423322:	mov    edx,0x9f8adae8
  423327:	sbb    ch,BYTE PTR [eax]
  423329:	mov    al,0x13
  42332b:	jmp    0xa0b2:0xfa7fbb97
  423332:	push   ss
  423333:	fs data16 cld 
  423336:	jle    0x423336
  423338:	repz data16 je 0x42333c
  42333c:	push   cs
  42333d:	and    BYTE PTR [eax-0x404051c1],cl
  423343:	xor    DWORD PTR [ebx+0x779289bd],edx
  423349:	pop    ebp
  42334a:	iret   
  42334b:	loop   0x423317
  42334d:	lods   eax,DWORD PTR ds:[esi]
  42334e:	add    DWORD PTR [eax],eax
  423350:	xchg   DWORD PTR [edx],eax
  423352:	add    BYTE PTR [eax],al
  423354:	jb     0x42332f
  423356:	lods   al,BYTE PTR ds:[esi]
  423357:	jae    0x42335d
  423359:	push   es
  42335a:	or     al,0x4
  42335c:	sbb    ecx,DWORD PTR ss:[ebp-0x61686a0f]
  423363:	fimul  DWORD PTR [esp+ecx*8-0xf5f3507]
  42336a:	push   ss
  42336b:	add    DWORD PTR [esi+0x73a8c682],esp
  423371:	gs mov eax,0xd670d571
  423377:	mov    ds:0xc12f8001,al
  42337c:	std    
  42337d:	cdq    
  42337e:	ins    DWORD PTR es:[edi],dx
  42337f:	inc    eax
  423380:	arpl   bp,sp
  423382:	inc    esi
  423383:	dec    edi
  423384:	jecxz  0x4233d2
  423386:	mov    eax,0x1be6483b
  42338b:	mov    BYTE PTR [edi],dl
  42338d:	xchg   DWORD PTR [esi+ebp*2-0x4423b7a4],ebx
  423394:	inc    edx
  423395:	addr16 xchg ebp,eax
  423397:	push   0x363766cb
  42339c:	xor    DWORD PTR [ecx],edx
  42339e:	adc    DWORD PTR [edi],ebp
  4233a0:	sbb    edx,DWORD PTR [ecx+eax*8]
  4233a3:	add    ah,0xff
  4233a6:	ins    BYTE PTR es:[edi],dx
  4233a7:	mov    esp,esi
  4233a9:	jmp    0xfac2:0x7fbeb136
  4233b0:	pop    edx
  4233b1:	xor    BYTE PTR [edi-0x3],ah
  4233b4:	sub    DWORD PTR [edi-0x441c169f],0x6e9b1c50
  4233be:	(bad)  
  4233bf:	cmp    DWORD PTR [esi+0x2e],eax
  4233c2:	cli    
  4233c3:	aam    0x27
  4233c5:	jb     0x423435
  4233c7:	popf   
  4233c8:	or     al,0xbb
  4233ca:	mov    edi,0x7a5d9c5
  4233cf:	cmp    BYTE PTR ds:0x3ed72dac,cl
  4233d5:	dec    eax
  4233d6:	clc    
  4233d7:	imul   esi,esp,0x4e464326
  4233dd:	je     0x423406
  4233df:	outs   dx,BYTE PTR ds:[esi]
  4233e0:	sub    eax,0xff2cf135
  4233e5:	or     eax,0x1d4fb896
  4233ea:	mov    edi,0x46d7527
  4233ef:	push   cs
  4233f0:	sub    DWORD PTR ds:0xc3e65c9e,esi
  4233f6:	rcl    DWORD PTR [ecx],cl
  4233f8:	sar    DWORD PTR [ebx],cl
  4233fa:	les    ebp,FWORD PTR [ecx+0x2b]
  4233fd:	jmp    0x27f:0x22ba9355
  423404:	mov    bl,0x12
  423406:	imul   edi,DWORD PTR [ebx+0x4a],0x5af57254
  42340d:	test   al,0x3e
  42340f:	data16 daa 
  423411:	js     0x423400
  423413:	xchg   DWORD PTR [edx],esi
  423415:	sub    bl,BYTE PTR [edi]
  423417:	pop    eax
  423418:	sbb    DWORD PTR [ecx],ebx
  42341a:	xlat   BYTE PTR ds:[ebx]
  42341b:	pop    ecx
  42341c:	outs   dx,DWORD PTR ds:[esi]
  42341d:	jns    0x423427
  42341f:	inc    eax
  423420:	(bad)  
  423421:	mov    eax,ds:0x484c20ab
  423426:	mov    al,ds:0x7ff03ede
  42342b:	in     eax,0xc1
  42342d:	mov    DWORD PTR [ebp+0xe],ebp
  423430:	dec    ax
  423432:	call   0xec23:0x8515d456
  423439:	shl    esi,cl
  42343b:	cmp    al,0x8e
  42343e:	test   BYTE PTR [edx-0x11],bl
  423441:	test   dh,cl
  423443:	sub    ecx,edi
  423445:	mov    edx,0x4a3f6e7d
  42344a:	test   eax,0x4c046cae
  42344f:	scas   al,BYTE PTR es:[edi]
  423450:	imul   esp,DWORD PTR [edi],0xc8c14031
  423456:	in     al,0x87
  423458:	sahf   
  423459:	or     eax,0xa701d9e3
  42345e:	sbb    al,0xf4
  423460:	stc    
  423461:	mov    bh,0x1e
  423463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423464:	dec    edx
  423465:	pop    ss
  423466:	inc    edx
  423467:	jg     0x4234ae
  423469:	test   al,0x2e
  42346b:	(bad)  
  42346c:	cmp    eax,0xa131469b
  423471:	jns    0x42346a
  423473:	lods   al,BYTE PTR ds:[esi]
  423474:	stos   BYTE PTR es:[edi],al
  423475:	aas    
  423476:	jmp    0x423426
  423478:	(bad)  
  423479:	pop    esp
  42347a:	aam    0x88
  42347c:	in     al,dx
  42347d:	in     eax,dx
  42347e:	xchg   edi,eax
  42347f:	inc    edi
  423480:	mov    ebp,0x517a2153
  423485:	pop    ds
  423486:	aaa    
  423487:	ins    DWORD PTR es:[edi],dx
  423488:	push   ds
  423489:	fdivr  DWORD PTR [ebx-0x68b3624b]
  42348f:	inc    ebx
  423490:	ret    0x4b97
  423493:	popa   
  423494:	adc    BYTE PTR [ebx-0x47],al
  423497:	mov    esp,0xf6fb2a6d
  42349c:	pop    ebx
  42349d:	sti    
  42349e:	gs jns 0x423498
  4234a1:	mov    DWORD PTR [edi+0x2e3aaef3],esi
  4234a7:	std    
  4234a8:	dec    ecx
  4234a9:	stc    
  4234aa:	lock add al,ch
  4234ad:	dec    DWORD PTR [edx+0x162ea57]
  4234b3:	fsub   st(7),st
  4234b5:	mov    eax,0x25dc8673
  4234ba:	add    DWORD PTR [ebx-0x2974712a],esp
  4234c0:	sub    BYTE PTR [eax-0xa7fc6e2],dl
  4234c6:	ffreep st(4)
  4234c8:	iret   
  4234c9:	push   ss
  4234ca:	push   esp
  4234cb:	or     BYTE PTR [eax],dl
  4234cd:	cdq    
  4234ce:	jle    0x4234b1
  4234d0:	mov    ?,WORD PTR [esi-0x46]
  4234d3:	inc    edi
  4234d4:	or     eax,0xed1872d2
  4234d9:	inc    eax
  4234da:	icebp  
  4234db:	fldcw  WORD PTR [ebx-0x7e51ff38]
  4234e1:	add    eax,0x1d36b1f1
  4234e6:	inc    edi
  4234e7:	jmp    0xead86882
  4234ec:	mov    dh,0xf9
  4234ee:	and    bh,ah
  4234f0:	sar    DWORD PTR [ecx],0x63
  4234f3:	imul   edi,DWORD PTR ds:0x29ecabc1,0x31
  4234fa:	out    0xe5,eax
  4234fc:	pop    ecx
  4234fd:	loopne 0x4234a3
  4234ff:	ror    BYTE PTR [esi+0xd],0x69
  423503:	fwait
  423504:	mov    WORD PTR ss:[esi-0x14ff9c26],cs
  42350b:	push   0xffffffb8
  42350d:	jl     0x42348f
  42350f:	cmc    
  423510:	sbb    eax,0x748495b8
  423515:	fisub  WORD PTR fs:[edi-0x759e12c8]
  42351c:	push   ebx
  42351d:	jns    0x42351a
  42351f:	mov    esi,0xa52a8e98
  423524:	loop   0x4234d5
  423526:	jne    0x423514
  423528:	(bad)  
  423529:	jnp    0x423566
  42352b:	xor    ah,0xbb
  42352e:	xchg   al,dh
  423530:	cwde   
  423531:	out    dx,eax
  423532:	push   esi
  423533:	pop    ebp
  423534:	fs scas eax,DWORD PTR es:[edi]
  423536:	cmp    DWORD PTR [esi-0x54],0x38
  42353a:	mov    al,ds:0xc1a70c2f
  42353f:	add    cl,BYTE PTR [edi-0x416c9f7f]
  423545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423546:	stc    
  423547:	rol    BYTE PTR [eax-0x51],1
  42354a:	xchg   edi,eax
  42354b:	in     al,dx
  42354c:	jmp    0x5dcbc60
  423551:	push   esi
  423552:	repnz pop ebx
  423554:	mov    al,ds:0x318856a3
  423559:	pop    eax
  42355a:	pop    ebp
  42355b:	push   esp
  42355c:	daa    
  42355d:	xchg   esp,eax
  42355e:	pushf  
  42355f:	jns    0x4235ce
  423561:	add    eax,0x65f92e4e
  423566:	cdq    
  423567:	ds mov ebp,0x119eb77
  42356d:	sbb    eax,0xfb4d344a
  423572:	ds imul edx,esi,0x9c1b6142
  423579:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42357a:	aam    0x6f
  42357c:	ins    DWORD PTR es:[edi],dx
  42357d:	mov    edx,0x78abf74
  423582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423583:	das    
  423584:	gs pop eax
  423586:	das    
  423587:	and    al,0xd4
  423589:	call   0x980a8afc
  42358e:	sub    DWORD PTR ds:0x9c9cc54b,ebx
  423594:	inc    esp
  423595:	std    
  423596:	test   BYTE PTR [ebx+esi*4],dl
  423599:	arpl   WORD PTR [eax+0xd],si
  42359c:	adc    bh,BYTE PTR [edi-0x483374d7]
  4235a2:	das    
  4235a3:	push   edi
  4235a4:	xor    ecx,DWORD PTR [ebx]
  4235a6:	dec    ebx
  4235a7:	add    ebx,0x45b9d53d
  4235ad:	mov    ecx,0x88036a16
  4235b2:	(bad)  
  4235b3:	push   cs
  4235b4:	popa   
  4235b5:	sub    al,0x52
  4235b7:	mov    al,0xd6
  4235b9:	cmp    BYTE PTR [ecx+0x6b],dh
  4235bc:	jle    0x4235f1
  4235be:	add    bh,dh
  4235c0:	push   ebp
  4235c1:	scas   eax,DWORD PTR es:[edi]
  4235c2:	aaa    
  4235c3:	sub    bl,dh
  4235c5:	aaa    
  4235c6:	sub    dl,ah
  4235c8:	ds call 0x856bae6f
  4235ce:	leave  
  4235cf:	retf   
  4235d0:	ds stos DWORD PTR es:[edi],eax
  4235d2:	ins    DWORD PTR es:[edi],dx
  4235d3:	outs   dx,BYTE PTR ds:[esi]
  4235d4:	iret   
  4235d5:	inc    esi
  4235d6:	shl    DWORD PTR [esi],cl
  4235d8:	push   cs
  4235d9:	push   ebx
  4235da:	and    eax,0x63bf5c00
  4235df:	push   eax
  4235e0:	jecxz  0x4235be
  4235e2:	jg     0x4235a3
  4235e4:	popa   
  4235e5:	hlt    
  4235e6:	mov    esi,0xe689c51d
  4235eb:	(bad)  
  4235ec:	push   ecx
  4235ed:	mov    al,0x1
  4235ef:	add    BYTE PTR [edi-0x1dfffffe],al
  4235f5:	lock and DWORD PTR [eax+0x45223ce3],esp
  4235fc:	mov    al,ds:0x214a0ab
  423601:	ror    edx,cl
  423603:	scas   eax,DWORD PTR es:[edi]
  423604:	or     DWORD PTR [ebp-0x16be7f3c],edi
  42360a:	aam    0x8a
  42360c:	out    0x55,eax
  42360e:	movq   mm7,mm7
  423611:	adc    ah,BYTE PTR [eax+0xe]
  423614:	fstp   TBYTE PTR [edi-0x31547c65]
  42361a:	or     ebp,DWORD PTR [edx+0x49]
  42361d:	in     eax,dx
  42361e:	cmc    
  42361f:	jl     0x423689
  423621:	adc    bl,cl
  423623:	cmp    BYTE PTR [eax+eiz*2],bh
  423626:	aam    0x20
  423628:	pop    eax
  423629:	mov    edi,0x307dd328
  42362e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42362f:	ficomp WORD PTR ds:0xdde60324
  423635:	test   DWORD PTR [eax-0x71b93f73],0x7e7fa6de
  42363f:	fsubr  DWORD PTR [edi+0x54139da8]
  423645:	mov    al,0xb2
  423647:	xchg   esp,eax
  423648:	cwde   
  423649:	push   0x7715ce72
  42364e:	sbb    BYTE PTR [edi+esi*1],dh
  423651:	(bad)  
  423652:	bswap  ebx
  423654:	cmp    bl,ch
  423656:	nop
  423657:	push   eax
  423658:	fwait
  423659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42365a:	fnsave [edi+0x4]
  42365d:	aaa    
  42365e:	fs xchg edi,eax
  423660:	dec    ecx
  423661:	mov    esi,0xd9e575f
  423666:	inc    esp
  423667:	dec    esp
  423668:	hlt    
  423669:	cmc    
  42366a:	in     al,0x9
  42366c:	push   esi
  42366d:	mov    eax,ds:0xb99d882b
  423672:	adc    dh,BYTE PTR [esi-0x2cecf121]
  423678:	jmp    0xd69622c7
  42367d:	mov    ds:0xdc50f56e,al
  423682:	sbb    eax,0x9f78de48
  423687:	jns    0x4236d8
  423689:	ds int 0xf
  42368c:	dec    esi
  42368d:	fcmovnb st,st(5)
  42368f:	and    eax,DWORD PTR [edx*1-0x406cf84f]
  423696:	fldcw  WORD PTR [edx-0x7f0fce26]
  42369c:	fidivr DWORD PTR [ecx]
  42369e:	xor    DWORD PTR [esi-0x5c],ecx
  4236a1:	xor    BYTE PTR [edx],0x93
  4236a4:	inc    eax
  4236a5:	mov    edi,0xc3395c3a
  4236aa:	sahf   
  4236ab:	lds    eax,FWORD PTR gs:[edi]
  4236ae:	cld    
  4236af:	outs   dx,DWORD PTR ds:[esi]
  4236b0:	jge    0x4236c2
  4236b2:	mov    edx,0x77f1f920
  4236b7:	iret   
  4236b8:	(bad)  
  4236b9:	rcr    DWORD PTR [esp+edi*4],cl
  4236bc:	sbb    al,0x84
  4236be:	cmc    
  4236bf:	sub    BYTE PTR [edx+0x1c2d340e],bh
  4236c5:	pop    eax
  4236c6:	mov    esi,0x29c30e47
  4236cb:	xchg   BYTE PTR [eax-0x2f315468],dh
  4236d1:	xor    ah,bl
  4236d3:	stc    
  4236d4:	popa   
  4236d5:	push   ecx
  4236d6:	jmp    0x423755
  4236d8:	pop    esi
  4236d9:	neg    ecx
  4236db:	bound  edi,QWORD PTR [ecx+0x4b08a3aa]
  4236e1:	fsub   DWORD PTR [ebp-0x75]
  4236e4:	add    al,0xe4
  4236e6:	fldenv [ebp-0x64db6fe6]
  4236ec:	push   edx
  4236ed:	ss mov dh,0x1a
  4236f0:	outs   dx,DWORD PTR ds:[esi]
  4236f1:	xor    DWORD PTR [ecx+ebx*2-0x1f6b94c7],esp
  4236f8:	shr    esi,cl
  4236fa:	mov    bl,0x70
  4236fc:	push   eax
  4236fd:	inc    ecx
  4236fe:	xor    DWORD PTR [edx-0x4],edi
  423701:	(bad)  
  423702:	fs add al,0x9a
  423705:	mov    ah,0x1f
  423707:	push   ds
  423708:	add    al,0x1
  42370a:	into   
  42370b:	xchg   BYTE PTR [edi+ecx*2],al
  42370e:	push   esp
  42370f:	lods   eax,DWORD PTR ds:[esi]
  423710:	test   BYTE PTR [esi-0x48],bh
  423713:	and    ah,bh
  423715:	sub    bh,bl
  423717:	and    ebp,eax
  423719:	sbb    DWORD PTR [ebp-0x672038b4],edx
  42371f:	adc    eax,0x71fbf700
  423724:	dec    esp
  423725:	mov    ah,0x9
  423727:	ss fsubr st,st(3)
  42372a:	sub    esp,DWORD PTR [eax+0x49f291e2]
  423730:	jmp    0x423757
  423732:	jne    0x423758
  423734:	retf   
  423735:	sub    dl,bh
  423737:	retf   
  423738:	cmc    
  423739:	call   0xee92581c
  42373e:	je     0x4a30b2f7
  423744:	xor    eax,DWORD PTR [ebp+eiz*4-0x127afca0]
  42374b:	ret    
  42374c:	outs   dx,BYTE PTR ds:[esi]
  42374d:	mov    es,WORD PTR [edi]
  42374f:	jae    0x42376a
  423751:	inc    ebp
  423752:	mov    ch,0x29
  423754:	push   edi
  423755:	mov    ds:0x4ea0cc8f,al
  42375a:	ret    
  42375b:	mov    cl,0x9b
  42375d:	nop
  42375e:	sbb    dh,BYTE PTR [edi+0x1c]
  423761:	mov    eax,0xee44e7b3
  423766:	out    0xce,al
  423768:	cmp    eax,0xde70248b
  42376d:	mov    ebp,0x66029073
  423772:	push   ecx
  423773:	enter  0x39b8,0x77
  423777:	lods   eax,DWORD PTR ds:[esi]
  423778:	rol    BYTE PTR [ecx],1
  42377a:	dec    ebp
  42377b:	mov    edx,0x16a3bcfb
  423780:	push   ebp
  423781:	cmp    al,0x52
  423783:	inc    ebx
  423784:	je     0x4237e5
  423786:	mov    eax,ds:0xc5c96547
  42378b:	mov    eax,0xedb11526
  423790:	sar    DWORD PTR [ebp-0x29],1
  423793:	out    0xc7,al
  423795:	jge    0x423796
  423797:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423798:	clc    
  423799:	push   ebx
  42379a:	aam    0x92
  42379c:	push   0x2cae8c7f
  4237a1:	cld    
  4237a2:	in     al,dx
  4237a3:	(bad)  
  4237a4:	cmp    al,0x21
  4237a6:	test   al,0x73
  4237a8:	pop    ss
  4237a9:	call   0x8593cc3a
  4237ae:	or     eax,0xf64d8d91
  4237b3:	mov    fs,WORD PTR [esi+0x363ee3ae]
  4237b9:	(bad)  
  4237ba:	jle    0x423788
  4237bc:	out    0x8d,al
  4237be:	jae    0x42382c
  4237c0:	rcr    BYTE PTR [edi-0x5b897873],1
  4237c6:	fstp   DWORD PTR [edi+0x5bfcae54]
  4237cc:	jnp    0x423805
  4237ce:	xchg   ecx,eax
  4237cf:	mov    ebx,0xd8357fe9
  4237d4:	mov    ecx,0xd8c2bbcd
  4237d9:	mov    ch,0xd8
  4237db:	sbb    ebx,eax
  4237dd:	mov    eax,ds:0xcfce3770
  4237e2:	push   esi
  4237e3:	fidiv  WORD PTR [esi]
  4237e5:	push   edi
  4237e6:	mov    ch,0xc
  4237e8:	fwait
  4237e9:	mov    eax,ds:0x6f139793
  4237ee:	std    
  4237ef:	push   ss
  4237f0:	sbb    BYTE PTR [ebx+ecx*2-0x59],al
  4237f4:	shr    BYTE PTR [edi],0x7e
  4237f7:	xor    edi,DWORD PTR ds:0x369bc6c8
  4237fd:	test   al,0xea
  4237ff:	repz sub al,BYTE PTR [esi+eiz*2-0x7c512d30]
  423807:	add    DWORD PTR [edx-0x17133147],ebx
  42380d:	add    DWORD PTR [esi+0x1c],ebp
  423810:	jno    0x423818
  423812:	adc    al,0x98
  423814:	mov    WORD PTR [esi+0x3b],ds
  423817:	popa   
  423818:	and    DWORD PTR [ebx],0xffffffff
  42381b:	inc    ecx
  42381c:	xchg   edi,eax
  42381d:	ret    
  42381e:	sti    
  42381f:	out    dx,al
  423820:	cld    
  423821:	mov    edx,0xfc5b70d8
  423826:	stos   DWORD PTR es:[edi],eax
  423827:	adc    esp,0xfffffff8
  42382a:	and    al,0x7
  42382c:	mov    eax,ds:0xa5e890de
  423831:	mov    WORD PTR [edx+0x4b40adc],ds
  423837:	test   esi,ebx
  423839:	inc    ecx
  42383a:	inc    ebp
  42383b:	and    al,0x82
  42383d:	mov    dh,BYTE PTR [edx-0x4d342d17]
  423843:	leave  
  423844:	fmul   QWORD PTR [ecx-0x27]
  423847:	add    ebx,DWORD PTR [ebx-0x1d7c2ac5]
  42384d:	dec    ebx
  42384e:	mov    eax,DWORD PTR [edi]
  423850:	pushw  0xffb3
  423853:	and    ebx,ebx
  423855:	jno    0x423859
  423857:	and    ebp,DWORD PTR [edx+0x3b]
  42385a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42385b:	dec    edx
  42385c:	popf   
  42385d:	neg    BYTE PTR [edi+0x64]
  423860:	push   edi
  423861:	cdq    
  423862:	inc    esp
  423863:	(bad)  
  423864:	hlt    
  423865:	inc    ecx
  423866:	adc    eax,0xbdce4163
  42386b:	fist   WORD PTR [ebp-0x3f]
  42386e:	dec    eax
  42386f:	test   ah,al
  423871:	mov    ebx,0x48e09f1d
  423876:	sub    cl,BYTE PTR [edx+0x47]
  423879:	cmp    BYTE PTR [eax+eax*1],dh
  42387c:	inc    ebx
  42387d:	push   ebp
  42387e:	pusha  
  42387f:	(bad)  
  423880:	jbe    0x423841
  423882:	out    dx,eax
  423883:	fnstsw WORD PTR [edx+0x134356c3]
  423889:	adc    al,0x43
  42388b:	jmp    0x43eb68
  423890:	xchg   DWORD PTR [edx],eax
  423892:	add    BYTE PTR [eax],al
  423894:	jbe    0x4238c8
  423896:	mov    esi,0x1e131cd8
  42389b:	sbb    DWORD PTR [eax+0xdca7591],esp
  4238a1:	jnp    0x42382f
  4238a3:	mov    al,0xe9
  4238a5:	fistp  QWORD PTR [ebx+eax*8+0x78d1da59]
  4238ac:	push   cs
  4238ad:	jbe    0x423856
  4238af:	jle    0x4238ea
  4238b1:	rcr    BYTE PTR [edi-0x3e],cl
  4238b4:	jne    0x4238a1
  4238b6:	inc    esi
  4238b7:	pop    ecx
  4238b8:	es fs mov cl,0xc4
  4238bc:	ins    DWORD PTR es:[edi],dx
  4238bd:	ss cmc 
  4238bf:	sbb    esp,edx
  4238c1:	lds    ebx,FWORD PTR es:[ecx-0x1524cae]
  4238c8:	pop    es
  4238c9:	jg     0x42390e
  4238cb:	call   0x1acf:0x6fa7a024
  4238d2:	mov    esp,0x94fdaf36
  4238d7:	and    BYTE PTR [esp+eiz*8+0xcdf0c13],ch
  4238de:	outs   dx,DWORD PTR ds:[esi]
  4238df:	mov    BYTE PTR [edx],dl
  4238e1:	fcmove st,st(6)
  4238e3:	and    al,0xc3
  4238e5:	dec    BYTE PTR [ecx+0x67]
  4238e8:	sbb    al,0x1
  4238ea:	call   0x1951:0xada99620
  4238f1:	call   0xfa31:0x35738bf6
  4238f8:	mov    ebp,0x7a31df97
  4238fd:	in     eax,0x30
  4238ff:	push   edi
  423900:	mov    edi,0xcad23b26
  423905:	adc    al,0xd3
  423907:	xor    BYTE PTR [edx+0x39d03392],bh
  42390d:	mov    BYTE PTR [ecx-0x49205997],bl
  423913:	inc    ecx
  423914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423915:	fistp  WORD PTR [ebx+0x23]
  423918:	sub    eax,edi
  42391a:	mov    edx,0x2eb726f0
  42391f:	add    eax,0x639fee4c
  423924:	icebp  
  423925:	lock hlt 
  423927:	add    eax,0x8f4d12de
  42392c:	cmp    al,0x2c
  42392e:	add    ebp,esi
  423930:	ins    DWORD PTR es:[edi],dx
  423931:	and    BYTE PTR [edi+0x4a],bh
  423934:	or     eax,0xfaaccce2
  423939:	pop    ds
  42393a:	xchg   esi,eax
  42393b:	pop    eax
  42393c:	cmc    
  42393d:	sbb    DWORD PTR [ecx+0x2f],esp
  423940:	adc    dl,BYTE PTR [edx+0x49c087e5]
  423946:	add    DWORD PTR [ebx],edi
  423948:	add    ecx,DWORD PTR [ecx]
  42394a:	and    al,BYTE PTR [ebx-0x13]
  42394d:	push   0xffffffb4
  42394f:	adc    ebp,ebp
  423951:	pop    esp
  423952:	test   BYTE PTR [edx+0x38],cl
  423955:	test   eax,0x9671d64d
  42395a:	dec    ebp
  42395b:	fsub   st,st(6)
  42395d:	dec    ebp
  42395e:	mov    ebp,0x71159e34
  423963:	or     ebx,DWORD PTR [edi]
  423965:	je     0x4239c9
  423967:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423968:	adc    DWORD PTR [esi],ebx
  42396a:	bound  ebx,QWORD PTR [edi+0x8e98657]
  423970:	div    DWORD PTR [ebp-0x63]
  423973:	or     esp,DWORD PTR [ecx+0x7fbf2d4f]
  423979:	push   esi
  42397a:	and    DWORD PTR [edi-0x1f],edi
  42397d:	(bad)  
  42397e:	mov    ds,WORD PTR [eax+ebx*8]
  423981:	int    0xe4
  423983:	ja     0x42391b
  423985:	mov    ebp,0x8a22fa50
  42398a:	cs push es
  42398c:	ret    
  42398d:	in     al,0x3b
  42398f:	test   eax,0x3f0083a3
  423994:	dec    eax
  423995:	cmp    ch,ch
  423997:	mov    BYTE PTR [esi],cl
  423999:	fsubr  QWORD PTR [eax-0x50257c1a]
  42399f:	mov    bl,0x7f
  4239a1:	adc    dl,BYTE PTR [edi+0x428e0315]
  4239a7:	loop   0x42399b
  4239a9:	cmp    edi,DWORD PTR [ecx+0x34]
  4239ac:	fs inc ecx
  4239ae:	shr    BYTE PTR [edx],cl
  4239b0:	std    
  4239b1:	(bad)  
  4239b2:	mov    eax,0xdf9b0c55
  4239b7:	push   ecx
  4239b8:	inc    ebp
  4239b9:	stos   BYTE PTR es:[edi],al
  4239ba:	sub    dh,dl
  4239bc:	or     eax,0x864e4286
  4239c1:	cmc    
  4239c2:	iret   
  4239c3:	addr16 std 
  4239c5:	ins    BYTE PTR es:[edi],dx
  4239c6:	loopne 0x4239ce
  4239c8:	ja     0x42397c
  4239ca:	int3   
  4239cb:	cld    
  4239cc:	dec    edx
  4239cd:	mov    cl,0xf6
  4239cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239d0:	sub    bl,BYTE PTR [ecx]
  4239d2:	cmp    al,0xec
  4239d4:	or     BYTE PTR [edx+0x4b223458],cl
  4239da:	xchg   edx,eax
  4239db:	sbb    BYTE PTR [edx-0x4e172481],bh
  4239e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239e2:	xchg   edi,eax
  4239e3:	repz pop ebx
  4239e5:	push   0xb0837175
  4239ea:	test   BYTE PTR [eax-0x276a0109],bl
  4239f0:	mov    edx,0xbf0c2d83
  4239f5:	mov    ecx,0x1e5c1d39
  4239fa:	fistp  WORD PTR [ebx]
  4239fc:	push   ebp
  4239fd:	push   es
  4239fe:	hlt    
  4239ff:	pop    ebp
  423a00:	xor    dh,al
  423a02:	inc    ebp
  423a03:	push   ebp
  423a04:	mov    dh,0xa9
  423a06:	adc    ah,0xb3
  423a09:	fdiv   st,st(7)
  423a0b:	mov    esp,0xc7bbfde3
  423a10:	hlt    
  423a11:	inc    edi
  423a12:	jmp    DWORD PTR [esi+0x77]
  423a15:	lds    esp,FWORD PTR ds:[ebx+eax*8-0x702b813]
  423a1d:	ds loop 0x423a8a
  423a20:	dec    ebp
  423a21:	jp     0x423a88
  423a23:	fs loop 0x4239e6
  423a26:	fwait
  423a27:	dec    edi
  423a28:	adc    BYTE PTR [esi],0x85
  423a2b:	adc    al,0x44
  423a2d:	fwait
  423a2e:	dec    edi
  423a2f:	shr    BYTE PTR [esi],cl
  423a31:	push   eax
  423a32:	popf   
  423a33:	clc    
  423a34:	je     0x4239fd
  423a36:	pop    es
  423a37:	es mov dh,0xf9
  423a3a:	clc    
  423a3b:	shl    BYTE PTR [ecx+0x3f],cl
  423a3e:	xchg   esp,eax
  423a3f:	in     al,dx
  423a40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a41:	cld    
  423a42:	retf   
  423a43:	ret    0x92f1
  423a46:	cmp    al,0x77
  423a48:	addr16 dec edx
  423a4a:	enter  0xc6aa,0x31
  423a4e:	mov    BYTE PTR [esi],dh
  423a50:	mov    edx,0x61655bd2
  423a55:	inc    ecx
  423a56:	dec    ebp
  423a57:	sbb    dh,BYTE PTR [esp+ebx*4]
  423a5a:	xchg   edi,eax
  423a5b:	xchg   ebx,eax
  423a5c:	xchg   bh,al
  423a5e:	enter  0xce29,0xda
  423a62:	inc    ecx
  423a63:	or     al,0xd8
  423a65:	mov    cs,WORD PTR [edx+ebx*1+0x21cf6e1f]
  423a6c:	cld    
  423a6d:	xchg   ebp,eax
  423a6e:	xor    bh,BYTE PTR [edi+eax*2+0x48]
  423a72:	cld    
  423a73:	hlt    
  423a74:	dec    esi
  423a75:	jne    0x423a6c
  423a77:	jb     0x423a69
  423a79:	ret    
  423a7a:	push   es
  423a7b:	mov    ds:0xadcf0f6e,al
  423a80:	ret    
  423a81:	push   0x57
  423a83:	mov    al,ds:0x4494179a
  423a88:	jecxz  0x423ad2
  423a8a:	pop    edx
  423a8b:	xchg   ebp,ebp
  423a8d:	out    dx,eax
  423a8e:	daa    
  423a8f:	mov    ds:0xfaa937f0,al
  423a94:	arpl   WORD PTR [edx+0x47],bx
  423a97:	retf   
  423a98:	loop   0x423a43
  423a9a:	pop    esp
  423a9b:	cdq    
  423a9c:	adc    dl,ch
  423a9e:	cmp    ch,BYTE PTR [edi+0x17]
  423aa1:	in     al,0xae
  423aa3:	out    dx,al
  423aa4:	pop    edx
  423aa5:	popa   
  423aa6:	xor    edi,DWORD PTR [ebx-0x3e140d25]
  423aac:	and    cl,BYTE PTR ds:0x4546979c
  423ab2:	dec    ebp
  423ab3:	(bad)  
  423ab4:	out    dx,al
  423ab5:	jmp    0x677a:0x761ad330
  423abc:	ret    0x33b0
  423abf:	shl    ah,1
  423ac1:	add    BYTE PTR [ebx+0x8],dl
  423ac4:	add    eax,DWORD PTR [eax+ebx*1+0x11]
  423ac8:	xchg   ebx,eax
  423ac9:	pop    edx
  423aca:	(bad)  [ecx]
  423acc:	cmp    DWORD PTR [edi],ebp
  423ace:	sar    BYTE PTR [edx-0x64],0x98
  423ad2:	add    DWORD PTR [edi+esi*8],0x4e
  423ad6:	add    al,0x77
  423ad8:	mov    esp,0xb88eacdc
  423add:	or     dh,0x33
  423ae0:	(bad)  
  423ae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ae2:	add    DWORD PTR [eax-0x76558f55],0xffffffee
  423ae9:	in     eax,0xf
  423aeb:	cmc    
  423aec:	in     eax,dx
  423aed:	loope  0x423aab
  423aef:	rcl    esp,0x65
  423af2:	mov    bh,0xb1
  423af4:	pop    edx
  423af5:	dec    edx
  423af6:	in     eax,dx
  423af7:	add    ah,bl
  423af9:	mov    esi,0x1b697cbf
  423afe:	xchg   BYTE PTR [eax+0x57],dh
  423b01:	inc    edi
  423b02:	(bad)  [ecx-0x39]
  423b05:	inc    esi
  423b06:	add    DWORD PTR [esi+0x5c],edi
  423b09:	adc    BYTE PTR [esi+0x1565f2d],0x4f
  423b10:	pop    ss
  423b11:	add    dl,ah
  423b13:	or     eax,0xaa30b15b
  423b18:	pop    ebp
  423b19:	dec    esp
  423b1a:	outs   dx,BYTE PTR ds:[esi]
  423b1b:	add    BYTE PTR [edi+0x2d],dl
  423b1e:	pop    es
  423b1f:	call   0x55de:0xeddfba7f
  423b26:	inc    ecx
  423b27:	adc    al,0xbc
  423b29:	repz xchg edi,eax
  423b2b:	fstp   QWORD PTR [edi-0x4b]
  423b2e:	add    DWORD PTR [eax],eax
  423b30:	xchg   DWORD PTR [edx],eax
  423b32:	add    BYTE PTR [eax],al
  423b34:	repnz out dx,al
  423b36:	cdq    
  423b37:	outs   dx,BYTE PTR ds:[esi]
  423b38:	xor    al,0x67
  423b3a:	xchg   DWORD PTR [eax-0x3eecddb4],edi
  423b40:	sub    al,0x5b
  423b42:	int    0xeb
  423b44:	add    edi,edx
  423b46:	std    
  423b47:	test   ch,dh
  423b49:	and    dl,BYTE PTR [esi+ebp*1+0xb871464]
  423b50:	sbb    eax,0x201a6e6e
  423b55:	arpl   WORD PTR [ebx+0x4916a1d2],di
  423b5b:	nop
  423b5c:	inc    eax
  423b5d:	popa   
  423b5e:	retf   
  423b5f:	adc    al,BYTE PTR [eax]
  423b61:	or     esp,DWORD PTR [edi]
  423b63:	fild   WORD PTR [ebx-0x5f]
  423b66:	out    dx,eax
  423b67:	rcr    DWORD PTR [esp+ebp*2-0x39],cl
  423b6b:	test   BYTE PTR [edx-0x7dd7d0f5],ah
  423b71:	enter  0x1dc9,0xce
  423b75:	jb     0x423bf2
  423b77:	cmp    DWORD PTR [eax-0x61],edi
  423b7a:	cmp    edi,esp
  423b7c:	lods   al,BYTE PTR ds:[esi]
  423b7d:	ror    ecx,cl
  423b7f:	repnz push ebx
  423b81:	cmp    al,0x97
  423b83:	(bad)  
  423b84:	push   0x57e84e2b
  423b89:	xchg   esi,eax
  423b8a:	dec    edx
  423b8b:	cmc    
  423b8c:	hlt    
  423b8d:	add    BYTE PTR [eax],0x3e
  423b90:	outs   dx,BYTE PTR ds:[esi]
  423b91:	rcl    DWORD PTR [ebx],cl
  423b93:	je     0x423b46
  423b95:	pop    edi
  423b96:	sub    eax,DWORD PTR [ebx+ebp*8]
  423b99:	push   ebx
  423b9a:	fadd   DWORD PTR [edx+0x50]
  423b9d:	adc    DWORD PTR [ebp+esi*8-0x35],ebp
  423ba1:	bound  ebx,QWORD PTR [edi-0x428294f1]
  423ba7:	mov    ds:0x344beb59,al
  423bac:	sbb    al,0xc1
  423bae:	(bad)  [ebp-0x42]
  423bb1:	xor    eax,0x6e2063fb
  423bb6:	in     al,dx
  423bb7:	inc    edi
  423bb8:	mov    eax,ds:0x402db73
  423bbd:	pop    ecx
  423bbe:	add    DWORD PTR [ecx],esi
  423bc0:	popa   
  423bc1:	jp     0x423bd7
  423bc3:	mov    dh,0xd0
  423bc5:	addr16 loopne 0x423b59
  423bc8:	cmc    
  423bc9:	jmp    0x423bbd
  423bcb:	sub    bh,bh
  423bcd:	sbb    eax,0xd69ef3ff
  423bd2:	mov    dl,0x50
  423bd4:	ror    DWORD PTR [ebp+0x6c],0xec
  423bd8:	adc    BYTE PTR [esi-0x6a],ch
  423bdb:	retf   0x8213
  423bde:	xlat   BYTE PTR ds:[ebx]
  423bdf:	dec    ecx
  423be0:	mov    ds:0x946fa5b3,al
  423be5:	call   FWORD PTR [ecx+0x6f22ba97]
  423beb:	scas   al,BYTE PTR es:[edi]
  423bec:	loopne 0x423bcc
  423bee:	mov    ch,bh
  423bf0:	call   0xe86cbc6b
  423bf5:	sub    dh,bh
  423bf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bf8:	add    BYTE PTR [ecx-0x2a],ch
  423bfb:	push   esp
  423bfc:	xchg   esp,eax
  423bfd:	loop   0x423c5e
  423bff:	arpl   dx,ax
  423c01:	in     al,0x94
  423c03:	mov    bh,0x37
  423c05:	pop    es
  423c06:	add    esi,DWORD PTR [esi+eax*8]
  423c09:	xchg   edx,eax
  423c0a:	mov    dh,0x85
  423c0c:	xchg   esp,eax
  423c0d:	test   DWORD PTR [esi+esi*2-0x30bb613a],edx
  423c14:	adc    eax,0x4cfb9015
  423c19:	dec    edi
  423c1a:	(bad)  
  423c1b:	and    al,0x74
  423c1d:	data16 scas al,BYTE PTR es:[edi]
  423c1f:	pop    edx
  423c20:	inc    ebp
  423c21:	test   BYTE PTR [eax+0x12830b9b],dl
  423c27:	push   ds
  423c28:	call   0x4e5cbcf6
  423c2d:	sbb    esi,edi
  423c2f:	(bad)  
  423c30:	popa   
  423c31:	sbb    eax,0xe7f53ccd
  423c36:	push   edi
  423c37:	sar    DWORD PTR gs:[ecx],0xe1
  423c3b:	mov    ds:0x457b5c69,eax
  423c40:	pop    esp
  423c41:	jecxz  0x423cae
  423c43:	xchg   ebx,eax
  423c44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c45:	rol    BYTE PTR [eax],cl
  423c47:	shr    bh,cl
  423c49:	pushf  
  423c4a:	rcl    DWORD PTR [eax+0x1c],cl
  423c4d:	xchg   edx,eax
  423c4e:	std    
  423c4f:	jmp    0x423bfd
  423c51:	cmp    eax,0x7cb6bdd5
  423c56:	mov    dh,ch
  423c58:	xchg   esp,eax
  423c59:	gs push ss
  423c5b:	stos   DWORD PTR es:[edi],eax
  423c5c:	add    esi,eax
  423c5e:	mov    ebx,0x175ab76e
  423c63:	adc    BYTE PTR [ebp+0x41],cl
  423c66:	jle    0x423c6d
  423c68:	pop    edi
  423c69:	fucomi st,st(0)
  423c6b:	mov    eax,eax
  423c6d:	inc    ecx
  423c6e:	xchg   ebp,eax
  423c6f:	jle    0x423c59
  423c71:	cs inc BYTE PTR ss:[ecx]
  423c75:	ret    
  423c76:	mov    esp,0x3b0ff558
  423c7b:	hlt    
  423c7c:	stc    
  423c7d:	xchg   edi,eax
  423c7e:	lods   al,BYTE PTR ds:[esi]
  423c7f:	and    BYTE PTR [ebx-0x1c],dh
  423c82:	out    dx,al
  423c83:	xchg   edx,eax
  423c84:	scas   al,BYTE PTR es:[edi]
  423c85:	cld    
  423c86:	jbe    0x423c11
  423c88:	fimul  WORD PTR [esi+0x57]
  423c8b:	repnz cmp al,0x28
  423c8e:	ds pop edi
  423c90:	imul   esp,DWORD PTR [edi+0x4f],0xffffffa6
  423c94:	jmp    0x423c3b
  423c96:	clc    
  423c97:	jae    0x423cb1
  423c99:	jo     0x423c6a
  423c9b:	jnp    0x423cc8
  423c9d:	mov    ecx,0xd95baca1
  423ca2:	push   ebx
  423ca3:	inc    edi
  423ca4:	test   eax,0xa4f305f1
  423ca9:	pusha  
  423caa:	add    ebp,DWORD PTR [esi+edx*8+0x23e871cf]
  423cb1:	cmc    
  423cb2:	call   0xbe9e:0x54f8b8e3
  423cb9:	test   al,0x3f
  423cbb:	sti    
  423cbc:	fmul   QWORD PTR [eax+0x52]
  423cbf:	stos   BYTE PTR es:[edi],al
  423cc0:	aaa    
  423cc1:	enter  0x80c2,0x94
  423cc5:	imul   esi,ecx,0xd2736b7f
  423ccb:	cmp    ch,0x25
  423cce:	pop    ebx
  423ccf:	push   0x3a259709
  423cd4:	dec    esi
  423cd5:	loope  0x423cb9
  423cd7:	inc    edx
  423cd8:	ror    DWORD PTR [edx+eax*4+0x75],cl
  423cdc:	repnz inc edx
  423cde:	out    dx,al
  423cdf:	loop   0x423d42
  423ce1:	xor    edi,DWORD PTR [edi+edx*4-0x4de27dfe]
  423ce8:	mov    esi,0x21b95d11
  423ced:	fiadd  WORD PTR [edi-0xdb1261c]
  423cf3:	cmp    dh,BYTE PTR [ebx-0x49]
  423cf6:	add    esp,DWORD PTR [esi-0x60]
  423cf9:	enter  0x6958,0x34
  423cfd:	xor    DWORD PTR [ebx-0x329d37cf],esp
  423d03:	stos   BYTE PTR es:[edi],al
  423d04:	shl    BYTE PTR [edi-0x47f067fe],1
  423d0a:	pop    ebx
  423d0b:	aad    0x5
  423d0d:	scas   eax,DWORD PTR es:[edi]
  423d0e:	push   cs
  423d0f:	push   cs
  423d10:	or     BYTE PTR [esi-0x25],bh
  423d13:	dec    edx
  423d14:	and    DWORD PTR ds:0xc6fffed2,eax
  423d1a:	ret    0xd098
  423d1d:	hlt    
  423d1e:	test   DWORD PTR [edx-0x263a46e],esi
  423d24:	retf   
  423d25:	neg    ch
  423d27:	das    
  423d28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d29:	mov    ebp,0x93ad9e46
  423d2e:	sub    al,0x23
  423d30:	mov    dl,0xda
  423d32:	add    ebx,edi
  423d34:	in     al,0xe5
  423d36:	je     0x423cf1
  423d38:	mov    edi,0x582928ea
  423d3d:	aas    
  423d3e:	jnp    0x423d3f
  423d40:	or     DWORD PTR [ecx-0x6acc82d7],esp
  423d46:	(bad)  
  423d47:	outs   dx,BYTE PTR ds:[esi]
  423d48:	jmp    0x24b8687d
  423d4d:	push   edi
  423d4e:	mov    ch,0xe4
  423d50:	inc    esi
  423d51:	jno    0x423dcc
  423d53:	loope  0x423d51
  423d55:	push   esp
  423d56:	mov    DWORD PTR [esi-0x76],ecx
  423d59:	add    eax,0xf502bc7b
  423d5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d5f:	xor    eax,0x7c79e5e5
  423d64:	ds jns 0x423daa
  423d67:	inc    eax
  423d68:	in     eax,dx
  423d69:	cli    
  423d6a:	and    cl,BYTE PTR ds:0x22b14be8
  423d70:	xchg   ebp,eax
  423d71:	inc    ebx
  423d72:	cwde   
  423d73:	mov    edx,0x68de656d
  423d78:	xor    eax,DWORD PTR [ebp+0x78cc2bdc]
  423d7e:	and    bl,ah
  423d80:	scas   al,BYTE PTR es:[edi]
  423d81:	sub    al,0xf5
  423d83:	or     ch,BYTE PTR [edi+0x30]
  423d86:	int3   
  423d87:	adc    ch,BYTE PTR [ecx+0x3027f15b]
  423d8d:	adc    BYTE PTR [ecx-0x22],dh
  423d90:	js     0x423e11
  423d92:	repz arpl WORD PTR ds:0x8ef3fc77,bx
  423d99:	fcom   QWORD PTR [esi]
  423d9b:	xchg   edx,eax
  423d9c:	fiadd  DWORD PTR [edi]
  423d9e:	adc    al,0x7
  423da0:	aam    0x3d
  423da2:	idiv   DWORD PTR [edx]
  423da4:	mov    esi,0x113644a9
  423da9:	pop    ebp
  423daa:	push   ss
  423dab:	cmovne ebx,DWORD PTR [edx-0x73db198a]
  423db2:	add    DWORD PTR [edi],0xc9f30235
  423db8:	in     eax,0xcb
  423dba:	add    BYTE PTR cs:[edx+ebp*1+0x2b],ch
  423dbf:	outs   dx,DWORD PTR es:[esi]
  423dc1:	daa    
  423dc2:	ins    DWORD PTR es:[edi],dx
  423dc3:	push   0xfffffff2
  423dc5:	push   esp
  423dc6:	stos   DWORD PTR es:[edi],eax
  423dc7:	adc    esi,edx
  423dc9:	push   0xffffffe3
  423dcb:	jb     0x423db3
  423dcd:	mov    bh,0x1
  423dcf:	add    BYTE PTR [edi+0x77000002],al
  423dd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423dd6:	fist   WORD PTR [edx+ebx*8]
  423dd9:	and    eax,0x6b86f3e
  423dde:	mov    ebx,ecx
  423de0:	adc    ch,BYTE PTR [edi-0x5de1950f]
  423de6:	push   ds
  423de7:	sbb    DWORD PTR [ebx-0x5d],0x3463cecf
  423dee:	(bad)  
  423def:	jae    0x423dce
  423df1:	aas    
  423df2:	cmp    DWORD PTR [esi],ebx
  423df4:	retf   0xc0af
  423df7:	mov    ah,0x36
  423df9:	sbb    al,0x50
  423dfb:	mov    esi,0x1a49024c
  423e00:	test   dh,ch
  423e02:	sar    BYTE PTR [esi],1
  423e04:	dec    edi
  423e05:	jl     0x423e5f
  423e07:	test   eax,0xb58b6705
  423e0c:	in     al,dx
  423e0d:	shr    DWORD PTR [ecx],1
  423e0f:	xor    dh,dh
  423e11:	in     eax,dx
  423e12:	fxch   st(5)
  423e14:	sbb    eax,0x8af573aa
  423e19:	clc    
  423e1a:	sub    bh,ch
  423e1c:	pop    edx
  423e1d:	pop    ebp
  423e1e:	test   dl,cl
  423e20:	lods   eax,DWORD PTR ds:[esi]
  423e21:	sbb    eax,DWORD PTR [edi]
  423e23:	ds leave 
  423e25:	mov    ds:0x1178e01a,al
  423e2a:	xchg   ebx,eax
  423e2b:	shl    DWORD PTR [ebp+ecx*8-0x25],0xa8
  423e30:	or     al,ah
  423e32:	dec    esi
  423e33:	ins    DWORD PTR es:[edi],dx
  423e34:	jmp    0x423dcf
  423e36:	mov    ds:0xbd1423db,eax
  423e3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e3c:	ror    BYTE PTR [edx+ecx*8+0x45abd3ac],1
  423e43:	add    bh,BYTE PTR [ecx]
  423e45:	jno    0x423ea0
  423e47:	nop
  423e48:	in     eax,0xb3
  423e4a:	ret    0x3acc
  423e4d:	pop    esp
  423e4e:	js     0x423e97
  423e50:	mov    eax,es:0xcdd15af9
  423e56:	test   eax,0xe544a21b
  423e5b:	clc    
  423e5c:	cmp    al,0x34
  423e5e:	or     ebp,ebx
  423e60:	adc    eax,0x6191284f
  423e65:	push   es
  423e66:	aas    
  423e67:	mov    ebp,0xc6e33374
  423e6c:	dec    edi
  423e6d:	ficom  WORD PTR [edx]
  423e6f:	test   BYTE PTR ds:0x18b7cee5,ah
  423e75:	adc    ch,ch
  423e77:	sub    esp,DWORD PTR [ebx+eiz*1+0x2ac1c34e]
  423e7e:	mov    ds:0xff2dd61,eax
  423e83:	mov    bh,0x2e
  423e85:	dec    eax
  423e86:	dec    eax
  423e87:	or     al,0xc2
  423e89:	ins    DWORD PTR es:[edi],dx
  423e8a:	pop    ebp
  423e8b:	cmp    ecx,DWORD PTR [ebp+0x61]
  423e8e:	dec    edi
  423e8f:	sar    edx,cl
  423e91:	(bad)  
  423e92:	add    bh,ch
  423e94:	sar    BYTE PTR [eax+0x1e],0x21
  423e98:	xchg   DWORD PTR [edi+0x48ab6717],esp
  423e9e:	mov    ecx,0x68b8e06d
  423ea3:	jl     0x423ebc
  423ea5:	je     0x423f14
  423ea7:	mov    eax,0x3e096de5
  423eac:	retf   
  423ead:	push   eax
  423eae:	jno    0x423f25
  423eb0:	sahf   
  423eb1:	popf   
  423eb2:	pop    edi
  423eb3:	sbb    ah,BYTE PTR [ecx-0x3994f7ef]
  423eb9:	add    BYTE PTR [ecx],dl
  423ebb:	rol    DWORD PTR [ecx+0x475ea954],0x17
  423ec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ec3:	xchg   ebx,eax
  423ec4:	mov    BYTE PTR [esi+0x12],al
  423ec7:	or     ebp,DWORD PTR [esi-0x1d62c277]
  423ecd:	js     0x423f4b
  423ecf:	loop   0x423f45
  423ed1:	inc    esi
  423ed2:	mov    ds:0xb3df5f3e,al
  423ed7:	mov    ebx,0xa6fbefcd
  423edc:	lock cmp ecx,DWORD PTR [eax-0x32]
  423ee0:	add    BYTE PTR [ebp+ebx*8-0x32],0xa4
  423ee5:	ret    
  423ee6:	int3   
  423ee7:	scas   al,BYTE PTR es:[edi]
  423ee8:	retf   0x25c3
  423eeb:	mov    ebx,0xf8971337
  423ef0:	mov    ah,0xc0
  423ef2:	cwde   
  423ef3:	push   es
  423ef4:	in     al,dx
  423ef5:	cmp    al,0x82
  423ef7:	or     BYTE PTR [edi],0x6d
  423efa:	nop
  423efb:	(bad)  
  423efd:	enter  0x54be,0x32
  423f01:	xor    al,0xe0
  423f03:	fs jl  0x423ee1
  423f06:	aas    
  423f07:	mov    bl,0x6b
  423f09:	hlt    
  423f0a:	cld    
  423f0b:	sahf   
  423f0c:	mov    eax,0x75ab1a2c
  423f11:	in     al,0xc1
  423f13:	or     BYTE PTR [ebx],ah
  423f15:	and    dh,BYTE PTR [edi]
  423f17:	sbb    DWORD PTR [esi-0x4951dd71],eax
  423f1d:	sbb    al,BYTE PTR [ecx+0x73]
  423f20:	enter  0x115a,0x40
  423f24:	call   0x47a:0x2dbfd3c
  423f2b:	dec    esp
  423f2c:	cmp    eax,0x89f065c9
  423f31:	and    ebp,DWORD PTR ds:0xd8d4fe0a
  423f37:	cmp    DWORD PTR [edi-0x31],ebx
  423f3a:	add    al,0x50
  423f3c:	or     ebp,DWORD PTR [esi]
  423f3e:	mov    dl,0xac
  423f40:	mov    DWORD PTR [esi+0x47],ecx
  423f43:	dec    ebp
  423f44:	lahf   
  423f45:	inc    esp
  423f46:	mov    edx,0x8b2d23e2
  423f4b:	ins    BYTE PTR es:[edi],dx
  423f4c:	mov    ch,0x15
  423f4e:	icebp  
  423f4f:	pop    eax
  423f50:	mov    ch,0x5
  423f52:	pop    edi
  423f53:	inc    edx
  423f54:	mov    esi,0xf8fca2e2
  423f59:	mov    esi,0x5ffe6021
  423f5e:	loop   0x423f0c
  423f60:	pop    esp
  423f61:	cli    
  423f62:	cmp    al,0xbf
  423f64:	sbb    BYTE PTR [ecx+0xafd2aca],cl
  423f6a:	jo     0x423fc3
  423f6c:	jp     0x423f56
  423f6e:	add    BYTE PTR [edi-0x40],ah
  423f71:	mov    ecx,0xf1812cd3
  423f76:	mov    eax,0x2e508f0a
  423f7b:	cld    
  423f7c:	adc    bl,cl
  423f7e:	pop    esp
  423f7f:	fmul   QWORD PTR [esi]
  423f81:	add    cl,BYTE PTR [ecx-0x45]
  423f84:	sub    eax,0x4ad5924a
  423f89:	jns    0x423f28
  423f8b:	mov    esi,0x2614f897
  423f90:	ret    
  423f91:	imul   ebx,DWORD PTR [ebx+0x6108616b],0x68
  423f98:	retf   
  423f99:	inc    ebp
  423f9a:	sub    eax,0x86e0d046
  423f9f:	sbb    eax,0xb9ca6f6
  423fa4:	mov    ah,0x75
  423fa6:	xor    BYTE PTR ds:0x8070436c,bh
  423fac:	sub    BYTE PTR [edx-0x48a067ef],cl
  423fb2:	sbb    BYTE PTR [edi],0x6a
  423fb5:	int    0xd9
  423fb7:	gs scas al,BYTE PTR es:[edi]
  423fb9:	mov    esp,0xf7f736aa
  423fbe:	(bad)  
  423fbf:	rol    BYTE PTR [ebx-0x13],cl
  423fc2:	mov    dl,ah
  423fc4:	ds jne 0x423f9b
  423fc7:	mov    ch,0x33
  423fc9:	mov    WORD PTR [ebp-0x19cca04a],?
  423fcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fd0:	out    0xab,eax
  423fd2:	jmp    0xa554:0x59edf5b4
  423fd9:	pop    eax
  423fda:	lds    esi,FWORD PTR [eax+0x1e769698]
  423fe0:	popf   
  423fe1:	adc    DWORD PTR [eax-0x762a673a],esp
  423fe7:	aam    0x7b
  423fe9:	test   DWORD PTR [eax+0x11],0xae2e6010
  423ff0:	mov    esi,0x9a421034
  423ff5:	arpl   WORD PTR [eax+0x35],di
  423ff8:	hlt    
  423ff9:	call   0xc03dbd65
  423ffe:	int3   
  423fff:	retf   
  424000:	cmp    ch,bh
  424002:	dec    ebp
  424003:	icebp  
  424004:	cmp    eax,0x9758fab2
  424009:	je     0x423fc6
  42400b:	idiv   DWORD PTR [ebx+0x5]
  42400e:	sub    al,0x55
  424010:	sar    DWORD PTR [esi],0x44
  424013:	(bad)
  424016:	or     esp,DWORD PTR [ebx-0x58]
  424019:	jbe    0x423fe4
  42401b:	lods   eax,DWORD PTR ds:[esi]
  42401c:	out    0xbe,al
  42401e:	mov    ebp,0x19600d3c
  424023:	daa    
  424024:	js     0x423fcf
  424026:	gs pop esi
  424028:	mov    ds:0x4dc464d2,al
  42402d:	and    ebp,esi
  42402f:	bnd jb 0x424033
  424032:	test   DWORD PTR [eax-0x6f],esp
  424035:	mov    ebx,0x7a352ada
  42403a:	or     edx,DWORD PTR [edx-0x48a41ae8]
  424040:	pushw  cs
  424042:	pop    esi
  424043:	retf   0x6b9a
  424046:	or     bl,BYTE PTR [ebp+0x1269ca76]
  42404c:	enter  0xddbf,0x55
  424050:	jle    0x42401c
  424052:	mov    al,ds:0x47f47f13
  424057:	sub    esi,DWORD PTR [ebx+edi*8]
  42405a:	inc    BYTE PTR [eax]
  42405c:	inc    ebx
  42405d:	lea    ebx,[edi]
  42405f:	and    bh,bl
  424061:	mov    dl,0x7f
  424063:	out    dx,eax
  424064:	add    BYTE PTR [ebx-0xa3fd8f0],dl
  42406a:	xor    al,0xf9
  42406c:	ins    DWORD PTR es:[edi],dx
  42406d:	mov    edx,0x2870001
  424072:	add    BYTE PTR [eax],al
  424074:	outs   dx,DWORD PTR ds:[esi]
  424075:	rcl    DWORD PTR [ebp-0x595e3f4c],0xd3
  42407c:	fimul  DWORD PTR [ebp+0x52]
  42407f:	dec    esi
  424080:	add    BYTE PTR es:[edx],ah
  424083:	retf   
  424084:	retf   0xd2bd
  424087:	or     eax,0x806f7832
  42408c:	call   0xfc61c6c5
  424091:	mov    dl,0x3c
  424093:	enter  0x2653,0x1f
  424097:	fnstcw WORD PTR [esi+0x487b7f9f]
  42409d:	add    ebx,0xffffffd4
  4240a0:	sahf   
  4240a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240a2:	inc    esp
  4240a3:	mov    ecx,0x8a1723ff
  4240a8:	adc    dl,BYTE PTR [edx]
  4240aa:	mov    ds:0x18a0e426,eax
  4240af:	les    ebx,FWORD PTR ds:[eax+0x6d]
  4240b3:	pop    es
  4240b4:	(bad)  
  4240b5:	loope  0x424054
  4240b7:	inc    ebx
  4240b8:	mov    edx,0x7fd2a7a3
  4240bd:	aas    
  4240be:	sub    DWORD PTR [ecx],esi
  4240c0:	dec    eax
  4240c1:	cmp    DWORD PTR [ecx+0x4b],esp
  4240c4:	or     eax,0x6bae8e4d
  4240c9:	int3   
  4240ca:	shl    BYTE PTR [ecx],1
  4240cc:	outs   dx,DWORD PTR ds:[esi]
  4240cd:	sbb    DWORD PTR [ebp-0x4b],esi
  4240d0:	aam    0x95
  4240d2:	or     ecx,ecx
  4240d4:	ret    0x7d30
  4240d7:	fmul   QWORD PTR [ebx-0x77]
  4240da:	inc    ebx
  4240db:	pop    eax
  4240dc:	or     dl,bl
  4240de:	mov    dl,BYTE PTR [esi+0x3d]
  4240e1:	imul   esp,edx,0x7d5ac05e
  4240e7:	sub    eax,0xc9cae986
  4240ec:	inc    ecx
  4240ed:	das    
  4240ee:	sbb    al,bh
  4240f0:	out    0x41,al
  4240f2:	cmp    BYTE PTR [ebx-0x10],0xc8
  4240f6:	xor    ecx,DWORD PTR [edi]
  4240f8:	inc    esi
  4240f9:	dec    esp
  4240fa:	sub    dl,dh
  4240fc:	inc    eax
  4240fd:	jbe    0x42412b
  4240ff:	push   esp
  424100:	and    al,0x60
  424102:	mov    esi,0x87c6de6f
  424107:	loopne 0x4240b0
  424109:	aad    0x7a
  42410b:	cmc    
  42410c:	adc    eax,0x93045c76
  424111:	jle    0x42410a
  424113:	sub    BYTE PTR [esi],bh
  424115:	in     eax,dx
  424116:	xchg   ecx,eax
  424117:	xor    DWORD PTR [esi],esp
  424119:	mov    eax,ds:0x4fbb42a7
  42411e:	inc    edi
  42411f:	iret   
  424120:	mov    cl,0x9c
  424122:	cmc    
  424123:	mov    ebx,0x373cb4ca
  424128:	not    DWORD PTR [eax+0x32a15ad9]
  42412e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42412f:	mov    al,0xf6
  424131:	jl     0x4240ce
  424133:	retf   
  424134:	mov    esp,0x2eba1aab
  424139:	pop    esp
  42413a:	mov    bl,0x3
  42413c:	adc    ah,ch
  42413e:	leave  
  42413f:	fwait
  424140:	call   0x39b0:0xcf32df18
  424147:	dec    esp
  424148:	ror    DWORD PTR [eax+0x68b1edc0],1
  42414e:	(bad)  
  42414f:	sub    DWORD PTR [ebx],esp
  424151:	(bad)  
  424152:	out    0xb3,al
  424154:	sub    bh,BYTE PTR [esi+eax*4]
  424157:	pop    ss
  424158:	js     0x4241a5
  42415a:	(bad)  [ebp+0x36d5b54c]
  424160:	popf   
  424161:	mov    eax,ds:0xbbcd85aa
  424166:	imul   edx,DWORD PTR [edi+0x3000111e],0xffffffaa
  42416d:	pop    ebp
  42416e:	fwait
  42416f:	inc    eax
  424170:	jp     0x4241ba
  424172:	(bad)  
  424173:	ins    DWORD PTR es:[edi],dx
  424174:	push   esi
  424175:	cmp    al,0xba
  424177:	loope  0x4241e7
  424179:	xlat   BYTE PTR ds:[ebx]
  42417a:	in     eax,0x3b
  42417c:	cmp    dh,BYTE PTR [ecx+0x2afdbc83]
  424182:	sbb    DWORD PTR [esi+ebp*1+0x61],esp
  424186:	mov    ecx,0xe8c33c68
  42418b:	out    0xd9,eax
  42418d:	mov    al,0xee
  42418f:	dec    ebx
  424190:	(bad)  
  424191:	jmp    0x4393:0x403774fe
  424198:	sahf   
  424199:	bound  esp,QWORD PTR [edi]
  42419b:	mov    edi,0xb6e42fdb
  4241a0:	sbb    al,0x96
  4241a2:	test   al,0x39
  4241a4:	push   DWORD PTR cs:[ecx-0x7d]
  4241a8:	or     dl,bh
  4241aa:	mov    esp,0x975341d9
  4241af:	in     al,0x7e
  4241b1:	mov    WORD PTR [ebx+0x3a],ss
  4241b4:	mov    ah,0x84
  4241b6:	mov    esi,0x3004124f
  4241bb:	out    dx,eax
  4241bc:	les    edi,FWORD PTR [edi+0x623354a0]
  4241c2:	pop    ecx
  4241c3:	jle    0x424192
  4241c5:	mov    edx,0x17db2ce4
  4241ca:	std    
  4241cb:	iret   
  4241cc:	jg     0x424192
  4241ce:	out    dx,eax
  4241cf:	test   DWORD PTR [eax+0x15],0x7d2463eb
  4241d6:	push   edx
  4241d7:	jl     0x424202
  4241d9:	mov    dh,0xfb
  4241db:	or     ebp,DWORD PTR [ebp+0x4]
  4241de:	cdq    
  4241df:	(bad)  
  4241e1:	repz add esp,DWORD PTR [esi-0xf2e173]
  4241e8:	jbe    0x424240
  4241ea:	xchg   ecx,eax
  4241eb:	cdq    
  4241ec:	jne    0x4241a5
  4241ee:	sbb    eax,0x13a4314b
  4241f3:	pop    ss
  4241f4:	xor    al,0xd8
  4241f6:	pop    esp
  4241f7:	push   es
  4241f8:	pop    esp
  4241f9:	cdq    
  4241fa:	stos   BYTE PTR es:[edi],al
  4241fb:	push   ss
  4241fc:	(bad)  
  4241fe:	(bad)  
  4241ff:	daa    
  424200:	jge    0x42420c
  424202:	imul   esi,DWORD PTR [esi-0x4c603cf5],0xffffffc3
  424209:	dec    eax
  42420a:	sub    eax,0x71a38709
  42420f:	stc    
  424210:	mov    ch,bh
  424212:	cmp    al,0x36
  424214:	adc    ch,BYTE PTR [ebp+0x6e]
  424217:	cld    
  424218:	inc    esp
  424219:	cmp    DWORD PTR [eax+0x4951d506],edi
  42421f:	outs   dx,BYTE PTR ds:[esi]
  424220:	mov    ecx,0x1feec0fb
  424225:	and    al,0xca
  424227:	test   al,0x6b
  424229:	neg    eax
  42422b:	hlt    
  42422c:	imul   esp,DWORD PTR [esi+edx*1],0xa4dad9d0
  424233:	and    BYTE PTR ds:0xdcafba99,cl
  424239:	sbb    esi,ecx
  42423b:	retf   
  42423c:	adc    BYTE PTR [ebp+0x3a],0xdf
  424240:	lods   eax,DWORD PTR ds:[esi]
  424241:	loopne 0x42422b
  424243:	sbb    al,0x42
  424245:	mov    dl,0xf3
  424247:	jl     0x4473a2f0
  42424d:	ret    
  42424e:	imul   esi,DWORD PTR [eax+0x454e7eb4],0xffffffa7
  424255:	and    DWORD PTR [ebx+0x754a244c],edi
  42425b:	dec    eax
  42425c:	push   ds
  42425d:	imul   esi,DWORD PTR [edi],0xffffffce
  424260:	cmp    al,0x28
  424262:	xor    BYTE PTR [ecx-0x350476e0],cl
  424268:	push   eax
  424269:	or     al,0x4a
  42426b:	(bad)  
  42426c:	pop    edi
  42426d:	push   eax
  42426e:	ins    BYTE PTR es:[edi],dx
  42426f:	(bad)  
  424270:	mov    bl,0xfa
  424272:	sub    eax,0x26be023a
  424277:	dec    ecx
  424278:	xor    al,0x68
  42427a:	loop   0x4242a5
  42427c:	leave  
  42427d:	mov    al,ds:0xbc637823
  424282:	jns    0x4242c3
  424284:	sti    
  424285:	sbb    eax,0x7e5e5f0f
  42428a:	mov    eax,0x2f649121
  42428f:	jmp    0x959e:0xbbc0c87d
  424296:	mov    bh,0xf7
  424298:	adc    esi,DWORD PTR [esi-0x5cf2c9e7]
  42429e:	mov    DWORD PTR [esi],ebx
  4242a0:	mov    DWORD PTR [eax],ecx
  4242a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242a3:	(bad)  
  4242a5:	xchg   esp,eax
  4242a6:	or     al,0xb5
  4242a8:	ret    0xc504
  4242ab:	repnz mov eax,ds:0xa9dcedac
  4242b1:	outs   dx,DWORD PTR ds:[esi]
  4242b2:	or     eax,0xc53e21ca
  4242b7:	push   ss
  4242b8:	dec    ebx
  4242b9:	jp     0x4242b4
  4242bb:	ds and al,0xce
  4242be:	pop    eax
  4242bf:	pusha  
  4242c0:	sub    al,0x8f
  4242c2:	pop    edi
  4242c3:	ja     0x42425a
  4242c5:	lods   eax,DWORD PTR ds:[esi]
  4242c6:	adc    BYTE PTR [edi-0x720ddf36],bh
  4242cc:	and    BYTE PTR [eax+0x432bbce],ch
  4242d2:	xchg   edx,eax
  4242d3:	xor    edx,DWORD PTR [esi+0x5e535a16]
  4242d9:	repz inc ebp
  4242db:	in     al,0x44
  4242dd:	lahf   
  4242de:	int    0xe8
  4242e0:	push   ecx
  4242e1:	enter  0xde9,0xec
  4242e5:	jnp    0x4242ad
  4242e7:	sahf   
  4242e8:	and    eax,0x7899a768
  4242ed:	push   esi
  4242ee:	lods   eax,DWORD PTR ds:[esi]
  4242ef:	mov    edi,0x785615ec
  4242f4:	mov    cl,BYTE PTR [ecx]
  4242f6:	ja     0x4242b1
  4242f8:	mov    ds:0xf4002477,eax
  4242fd:	cmp    DWORD PTR [edx-0x2002081],edx
  424303:	mov    ebx,0xc0721507
  424308:	pop    esp
  424309:	clc    
  42430a:	mov    ch,0x8b
  42430c:	hlt    
  42430d:	mov    esp,0x2870001
  424312:	add    BYTE PTR [eax],al
  424314:	cmp    dl,BYTE PTR [ebp+0x16d54776]
  42431a:	lock ins DWORD PTR es:[edi],dx
  42431c:	adc    bh,BYTE PTR ds:0x5dc514ac
  424322:	loopne 0x424362
  424324:	push   ds
  424325:	mov    ds:0x7d8ac496,al
  42432a:	pushf  
  42432b:	adc    cl,BYTE PTR [eax+0x6]
  42432e:	and    DWORD PTR gs:[esp+ebp*2+0x1315a686],edi
  424336:	sbb    esp,DWORD PTR [edi+0x1f]
  424339:	loopne 0x424367
  42433b:	outs   dx,DWORD PTR ds:[esi]
  42433c:	cmp    BYTE PTR [esi],bl
  42433e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42433f:	push   cs
  424340:	cs pusha 
  424342:	mov    dh,0x85
  424344:	mov    cl,0x3
  424346:	outs   dx,DWORD PTR ds:[esi]
  424347:	clc    
  424348:	shl    DWORD PTR [edx-0x245004e5],cl
  42434e:	jb     0x4243c7
  424350:	popf   
  424351:	or     BYTE PTR [esi-0x57],dh
  424354:	jle    0x42434a
  424356:	scas   eax,DWORD PTR es:[edi]
  424357:	inc    esi
  424358:	xchg   esp,eax
  424359:	add    bh,cl
  42435b:	inc    edx
  42435c:	addr16 push ebp
  42435e:	adc    eax,0x8e0814db
  424363:	and    al,BYTE PTR [edi+eiz*4]
  424366:	out    0xce,al
  424368:	dec    esp
  424369:	imul   ebx,DWORD PTR [edx+0x35bceb43],0x7842f74d
  424373:	outs   dx,DWORD PTR ds:[esi]
  424374:	repz adc ebx,ecx
  424377:	sti    
  424378:	imul   eax,ebp,0x8607392e
  42437e:	mov    ebx,0xbc56e4df
  424383:	mov    bl,BYTE PTR [esi]
  424385:	mov    esi,0x15a2ac80
  42438a:	loope  0x424369
  42438c:	xor    al,BYTE PTR [edx+edi*1+0x2f7026a8]
  424393:	pop    ds
  424394:	push   ds
  424395:	pop    es
  424396:	jno    0x424349
  424398:	(bad)  [esi+0x9]
  42439b:	jb     0x4243c6
  42439d:	pusha  
  42439e:	pop    edx
  42439f:	xchg   esp,eax
  4243a0:	pop    esp
  4243a1:	jecxz  0x424348
  4243a3:	popa   
  4243a4:	xor    eax,0xca82b024
  4243a9:	adc    dl,BYTE PTR [eax]
  4243ab:	xor    eax,0x73462a13
  4243b0:	iret   
  4243b1:	and    ebx,esi
  4243b3:	inc    esi
  4243b4:	push   0x8f2f8c71
  4243b9:	add    al,0x2c
  4243bb:	loop   0x4243d3
  4243bd:	out    dx,eax
  4243be:	loope  0x4243cd
  4243c0:	test   al,0xa7
  4243c2:	sbb    BYTE PTR [ebx+0xd42e1b7],dl
  4243c8:	out    dx,al
  4243c9:	mov    edx,0xf34da573
  4243ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243cf:	retf   
  4243d0:	das    
  4243d1:	out    dx,al
  4243d2:	iret   
  4243d3:	popa   
  4243d4:	inc    eax
  4243d5:	mov    esp,0x61c1449d
  4243da:	iret   
  4243db:	and    al,0x72
  4243dd:	out    dx,al
  4243de:	pop    ebx
  4243df:	push   0xffffffc7
  4243e1:	push   ss
  4243e2:	dec    ebp
  4243e3:	push   eax
  4243e4:	mov    eax,ds:0x17f48a5
  4243e9:	data16 adc al,0xa4
  4243ec:	and    al,0xfe
  4243ee:	xchg   BYTE PTR [edx+0x27317848],dl
  4243f4:	fisubr DWORD PTR [ebx-0x5eb6eab3]
  4243fa:	push   esi
  4243fb:	and    eax,0x605bf096
  424400:	sub    esi,DWORD PTR [ebx]
  424402:	push   esi
  424403:	popf   
  424404:	sbb    dh,ch
  424406:	fstp   st(3)
  424408:	dec    ebp
  424409:	loopne 0x424445
  42440b:	dec    esp
  42440c:	pop    es
  42440d:	inc    esp
  42440e:	add    DWORD PTR [edx-0x2],eax
  424411:	fucomip st,st(4)
  424413:	fisttp QWORD PTR [edi-0x747ef21e]
  424419:	pop    esp
  42441a:	jnp    0x4243fd
  42441c:	dec    ebx
  42441d:	pop    esp
  42441e:	leave  
  42441f:	mov    ebx,0x5d96e102
  424424:	xlat   BYTE PTR ds:[ebx]
  424425:	push   edx
  424426:	dec    eax
  424427:	xchg   esp,eax
  424428:	call   0x161ed507
  42442d:	inc    ecx
  42442e:	imul   ecx,DWORD PTR [eax+edi*2+0x2293120e],0xdebbb48b
  424439:	jo     0x4244ae
  42443b:	xor    eax,0x25aee238
  424440:	jmp    FWORD PTR [edx]
  424442:	(bad)  [edx]
  424444:	pusha  
  424445:	xor    al,0x35
  424447:	popa   
  424448:	out    0x60,al
  42444a:	sahf   
  42444b:	fsubr  DWORD PTR [ebp+eax*8-0x3f]
  42444f:	sub    ch,BYTE PTR [ebp+0x64]
  424452:	inc    ebp
  424453:	cmp    DWORD PTR [ebp-0x7028b414],esp
  424459:	call   0x607625b9
  42445e:	addr16 aas 
  424460:	mov    al,BYTE PTR [ecx-0x4eb7242f]
  424466:	pop    ecx
  424467:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424468:	adc    ch,0x38
  42446b:	(bad)  
  42446c:	pop    ds
  42446d:	adc    eax,0x2a32a6fd
  424472:	sahf   
  424473:	mov    al,ds:0x920606a4
  424478:	push   ecx
  424479:	data16 mov ch,0x52
  42447c:	or     ah,BYTE PTR [ebp+0x6ad8c4bc]
  424482:	lds    edi,FWORD PTR [edi]
  424484:	cwde   
  424485:	pop    edx
  424486:	test   eax,0x1f549fb
  42448b:	mov    edx,0x8d4fc631
  424490:	inc    esi
  424491:	push   ds
  424492:	sti    
  424493:	(bad)  
  424494:	stc    
  424495:	lahf   
  424496:	test   eax,0xbe9ed37c
  42449b:	cs pop ecx
  42449d:	je     0x42444d
  42449f:	popa   
  4244a0:	xchg   ebp,eax
  4244a1:	or     eax,0x74943761
  4244a6:	ficom  WORD PTR [ebx]
  4244a8:	sti    
  4244a9:	inc    edi
  4244aa:	adc    BYTE PTR [edx+0x193eeee1],ch
  4244b0:	addr16 mov al,ds:0xff58
  4244b4:	push   eax
  4244b5:	push   esp
  4244b6:	aam    0xe4
  4244b8:	xor    eax,ecx
  4244ba:	sahf   
  4244bb:	es ds icebp 
  4244be:	(bad)  
  4244c0:	lods   al,BYTE PTR ds:[esi]
  4244c1:	sbb    DWORD PTR [ebx-0x24c25adf],ebx
  4244c7:	inc    esp
  4244c8:	retf   0xc2be
  4244cb:	dec    esi
  4244cc:	ret    0xce0
  4244cf:	(bad)  
  4244d0:	aad    0xa9
  4244d2:	fst    DWORD PTR [edi-0x58dfdb05]
  4244d8:	arpl   WORD PTR [edi+0x75],dx
  4244db:	pop    es
  4244dc:	fistp  DWORD PTR [ecx+0x12103b96]
  4244e2:	loopne 0x424528
  4244e4:	cmp    DWORD PTR [edx-0x360111f2],esp
  4244ea:	adc    edx,DWORD PTR [eax]
  4244ec:	aaa    
  4244ed:	sbb    eax,0xf96815bc
  4244f2:	mov    cl,0xc3
  4244f4:	pop    edx
  4244f5:	push   cs
  4244f6:	cdq    
  4244f7:	rcl    DWORD PTR ds:0xf9425775,0x56
  4244fe:	mov    ebp,0x337eb058
  424503:	int    0x91
  424505:	pushf  
  424506:	std    
  424507:	xor    bh,BYTE PTR [esi]
  424509:	jo     0x424527
  42450b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42450c:	cmp    edi,DWORD PTR [eax+0x5d]
  42450f:	retf   0x5801
  424512:	pop    eax
  424513:	pop    es
  424514:	mov    BYTE PTR [edi+0x45],0xa5
  424518:	xor    cl,ah
  42451a:	and    esi,DWORD PTR [esi+0x61]
  42451d:	xor    cl,ah
  42451f:	pusha  
  424520:	jb     0x424549
  424522:	push   eax
  424523:	js     0x4244c6
  424525:	fiadd  DWORD PTR [ebx]
  424527:	outs   dx,BYTE PTR ds:[esi]
  424528:	fisubr WORD PTR [eax+ebp*2+0x7b80d974]
  42452f:	mov    esp,0xe4e5a6ed
  424534:	mov    al,ds:0x4f5f2c33
  424539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42453a:	or     eax,0x2b29dd12
  42453f:	inc    ebp
  424540:	xor    eax,0xcc9ae3f2
  424545:	loopne 0x4245b4
  424547:	pop    eax
  424548:	les    ebp,FWORD PTR [esi+0x9]
  42454b:	adc    bh,BYTE PTR [ecx]
  42454d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42454e:	leave  
  42454f:	xchg   esp,eax
  424550:	mov    ds:0xcf511778,al
  424555:	es dec ecx
  424557:	popf   
  424558:	bound  ecx,QWORD PTR [esi+0x2f]
  42455b:	clc    
  42455c:	into   
  42455d:	dec    eax
  42455e:	in     al,0xa2
  424560:	loop   0x424501
  424562:	lods   eax,DWORD PTR ds:[esi]
  424563:	leave  
  424564:	pusha  
  424565:	fcom   DWORD PTR [esp+eax*2+0x1c]
  424569:	outs   dx,BYTE PTR ds:[esi]
  42456a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42456b:	iret   
  42456c:	xor    ch,bl
  42456e:	pop    ebp
  42456f:	mov    cl,0x48
  424571:	retf   
  424572:	ret    0xd5bd
  424575:	inc    ecx
  424576:	xor    dh,BYTE PTR [edi+0x39]
  424579:	loop   0x4245f3
  42457b:	into   
  42457c:	jecxz  0x42452b
  42457e:	les    ebx,FWORD PTR [esi*2-0x6fb9c1fa]
  424585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424586:	test   BYTE PTR [esi+0x3c3eb38e],0xe1
  42458d:	add    al,0xe3
  42458f:	into   
  424590:	push   esp
  424591:	xor    BYTE PTR cs:[eax+0x7beaadda],dh
  424598:	sbb    eax,0x5400e081
  42459d:	ds and al,0x19
  4245a0:	outs   dx,BYTE PTR ds:[esi]
  4245a1:	sbb    edi,DWORD PTR [ebp+0x7f]
  4245a4:	(bad)  
  4245a5:	mov    eax,0x125acfc0
  4245aa:	fucomi st,st(6)
  4245ac:	jnp    0x42456d
  4245ae:	add    DWORD PTR [eax],eax
  4245b0:	xchg   DWORD PTR [edx],eax
  4245b2:	add    BYTE PTR [eax],al
  4245b4:	and    eax,0xb9bed029
  4245b9:	aas    
  4245ba:	xor    edi,DWORD PTR [ebx+0x3d]
  4245bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245be:	dec    esi
  4245bf:	lock mov edx,0x162de30
  4245c5:	mov    ebx,0x2ef6e003
  4245ca:	jne    0x4245e7
  4245cc:	xor    al,0xbb
  4245ce:	or     BYTE PTR [edx],ah
  4245d0:	jo     0x424593
  4245d2:	pop    ss
  4245d3:	lds    edi,FWORD PTR [esi]
  4245d5:	inc    ecx
  4245d6:	(bad)  
  4245d7:	stc    
  4245d8:	loopne 0x42462e
  4245da:	xchg   WORD PTR ss:[ebx],cx
  4245de:	loopne 0x424599
  4245e0:	inc    esp
  4245e1:	jg     0x424620
  4245e3:	or     esi,DWORD PTR [edx-0x43]
  4245e6:	or     dl,cl
  4245e8:	ror    DWORD PTR [ecx],cl
  4245ea:	lea    edi,[eax]
  4245ec:	adc    edx,DWORD PTR [esi+0x3e1475e3]
  4245f2:	or     eax,0xaec1d64f
  4245f7:	std    
  4245f8:	iret   
  4245f9:	rcr    DWORD PTR [eax],0x61
  4245fc:	adc    al,0xd2
  4245fe:	xchg   ebp,eax
  4245ff:	adc    al,BYTE PTR [edx-0x11]
  424602:	jecxz  0x4245ac
  424604:	cli    
  424605:	mov    dh,0x95
  424607:	or     eax,0x4c16517
  42460c:	inc    edi
  42460d:	cmp    eax,0xee30e20a
  424612:	ins    DWORD PTR es:[edi],dx
  424613:	(bad)  [eax-0x6db1a71d]
  424619:	push   0x7b52e720
  42461e:	fdivp  st(1),st
  424620:	pop    ebx
  424621:	push   0x5b4913ce
  424626:	mov    ds:0xa32b12d6,eax
  42462b:	loope  0x424652
  42462d:	adc    bh,dh
  42462f:	add    BYTE PTR es:0xe6c20ce1,dl
  424636:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424637:	push   es
  424638:	pushf  
  424639:	push   ebp
  42463a:	cmp    BYTE PTR ds:0x440db88f,0xb7
  424641:	sbb    bh,cl
  424643:	add    bl,BYTE PTR [ebx-0x55]
  424646:	lock retf 0x745
  42464a:	int    0x4
  42464c:	lahf   
  42464d:	dec    ebx
  42464e:	and    dh,cl
  424650:	cmp    al,0x56
  424652:	xlat   BYTE PTR ds:[ebx]
  424653:	mov    DWORD PTR [edx],ebp
  424655:	rcr    BYTE PTR [ebx+0x5b],cl
  424658:	and    ebp,DWORD PTR [edx-0x3b]
  42465b:	add    eax,0x36f6ee0c
  424660:	dec    ebp
  424661:	(bad)  [esi+0x354e515a]
  424667:	loope  0x424688
  424669:	rol    BYTE PTR [ebp-0xace8d76],1
  42466f:	int3   
  424670:	or     eax,DWORD PTR [ebx+0x2b]
  424673:	cmp    edx,DWORD PTR [edi]
  424675:	xchg   BYTE PTR [edx],ah
  424677:	sub    BYTE PTR [edx+0x5a52aff6],bh
  42467d:	cmp    al,0x69
  42467f:	in     al,dx
  424680:	jmp    0xf0e93557
  424685:	cld    
  424686:	cli    
  424687:	and    eax,0xdc62eb77
  42468c:	shl    DWORD PTR [esi],0x75
  42468f:	std    
  424690:	mov    fs,WORD PTR [eax]
  424692:	push   ds
  424693:	cs popa 
  424695:	loopne 0x4246cf
  424697:	(bad)  
  424698:	adc    eax,0x7aacc9a3
  42469d:	ds jl  0x424670
  4246a0:	xchg   ebp,eax
  4246a1:	sbb    DWORD PTR [esi-0x6dfadfbe],esp
  4246a7:	jb     0x424704
  4246a9:	test   al,0x83
  4246ab:	lahf   
  4246ac:	dec    esp
  4246ad:	xchg   ebp,eax
  4246ae:	mov    al,0xfa
  4246b0:	aas    
  4246b1:	into   
  4246b2:	stos   DWORD PTR es:[edi],eax
  4246b3:	into   
  4246b4:	test   BYTE PTR [eax+0x4f],bh
  4246b7:	sub    DWORD PTR [ebp-0x3],ecx
  4246ba:	jmp    0xfa29:0x1e9c640
  4246c1:	js     0x42473e
  4246c3:	inc    ebx
  4246c4:	lds    esi,FWORD PTR [ecx+0x1404f6fa]
  4246ca:	jbe    0x424738
  4246cc:	scas   eax,DWORD PTR es:[edi]
  4246cd:	push   esi
  4246ce:	jae    0x4246bb
  4246d0:	push   edx
  4246d1:	jb     0x4246b4
  4246d3:	sub    eax,DWORD PTR [edi]
  4246d5:	sub    al,0x23
  4246d7:	add    eax,DWORD PTR [esi]
  4246d9:	and    edi,edi
  4246db:	(bad)  
  4246dc:	(bad)  
  4246de:	cmp    eax,0xbb4c452d
  4246e3:	mov    ecx,0x3cf39de4
  4246e8:	push   esp
  4246e9:	ins    DWORD PTR es:[edi],dx
  4246ea:	dec    edx
  4246eb:	hlt    
  4246ec:	inc    esi
  4246ed:	je     0x4246c6
  4246ef:	jle    0x4246e8
  4246f1:	lahf   
  4246f2:	jo     0x4246a0
  4246f4:	cwde   
  4246f5:	enter  0x5cf9,0x8e
  4246f9:	push   edi
  4246fa:	or     al,0xc8
  4246fc:	inc    edx
  4246fd:	jns    0x4246c3
  4246ff:	push   ds
  424700:	pop    ebx
  424701:	mov    edx,0x21b25fd5
  424706:	push   ebp
  424707:	jae    0x424703
  424709:	cli    
  42470a:	loope  0x4246cf
  42470c:	dec    edi
  42470d:	(bad)  
  424710:	dec    ecx
  424711:	je     0x4246b0
  424713:	popa   
  424714:	add    al,bl
  424716:	xor    eax,0x1622a825
  42471b:	xor    eax,0xaedb1802
  424720:	in     al,0x41
  424722:	ror    BYTE PTR [eax-0x710b3119],cl
  424728:	sbb    ecx,DWORD PTR [ebx+ebp*1-0x12]
  42472c:	cmp    DWORD PTR [ebp+0x49],edx
  42472f:	or     eax,0xedd4ddb4
  424734:	inc    esi
  424735:	std    
  424736:	xor    eax,0x4f9fd3a0
  42473b:	xor    eax,0x2a959cb0
  424740:	pop    eax
  424741:	push   ebx
  424742:	push   edx
  424743:	push   0x33
  424745:	mov    bh,0xf8
  424747:	mov    DWORD PTR [edi+eax*2-0x56],0x926ffac5
  42474f:	adc    edi,DWORD PTR ds:0x1aada3be
  424755:	mov    al,0xb3
  424757:	xor    dl,BYTE PTR [edx]
  424759:	popf   
  42475a:	(bad)  
  42475b:	repnz ds mov esi,0xe71124d2
  424762:	(bad)  
  424763:	cld    
  424764:	sub    bl,bh
  424766:	es aas 
  424768:	or     bh,BYTE PTR [eax]
  42476a:	ja     0x424768
  42476c:	sub    DWORD PTR [esi-0x3e],0xade8147d
  424773:	and    al,0xec
  424775:	xchg   ebp,eax
  424776:	mov    al,ds:0xa48acdad
  42477b:	mov    DWORD PTR [esi],ebx
  42477d:	and    esi,edi
  42477f:	jns    0x424772
  424781:	retf   
  424782:	mov    al,0x51
  424784:	mov    cl,bh
  424786:	or     BYTE PTR ss:[ecx],0x8b
  42478a:	mov    bl,0xcf
  42478c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42478d:	inc    edi
  42478e:	call   0xd8a7:0xc57f4f7
  424795:	out    dx,al
  424796:	add    ah,BYTE PTR [ebx]
  424798:	int    0x27
  42479a:	xor    al,0x4d
  42479c:	add    esi,esi
  42479e:	lahf   
  42479f:	pop    esp
  4247a0:	mov    eax,ds:0xc39d9058
  4247a5:	mov    ebp,0x733f7af1
  4247aa:	cmp    eax,0xcee0470f
  4247af:	or     dl,bl
  4247b1:	(bad)  
  4247b2:	pop    esi
  4247b3:	mov    WORD PTR [ebx+eax*8+0x21],fs
  4247b7:	adc    al,0x8e
  4247b9:	clc    
  4247ba:	scas   eax,DWORD PTR es:[edi]
  4247bb:	test   bh,ah
  4247bd:	js     0x4247b6
  4247bf:	pop    esp
  4247c0:	inc    edi
  4247c1:	pop    ds
  4247c2:	cli    
  4247c3:	pushf  
  4247c4:	mov    ecx,0x4654ed24
  4247c9:	xchg   esp,eax
  4247ca:	fstp   TBYTE PTR [edi+esi*2+0x40415ea4]
  4247d1:	fcomi  st,st(1)
  4247d3:	loopne 0x42483d
  4247d5:	ficom  DWORD PTR ds:0x473aaf6b
  4247db:	inc    ebp
  4247dc:	icebp  
  4247dd:	(bad)  
  4247de:	in     eax,dx
  4247df:	mov    ch,0x72
  4247e1:	call   0xa63f4077
  4247e6:	into   
  4247e7:	(bad)  
  4247e8:	xchg   esi,eax
  4247e9:	popa   
  4247ea:	ror    DWORD PTR [ebp+0x22012acf],1
  4247f0:	mov    dl,0x7b
  4247f2:	out    0x57,al
  4247f4:	mov    bh,0xb2
  4247f6:	mov    cl,0x24
  4247f8:	mov    DWORD PTR [edi],ebp
  4247fa:	pop    esp
  4247fb:	jnp    0x424876
  4247fd:	lea    ecx,[esi+0x1c]
  424800:	sbb    dh,al
  424802:	cs inc eax
  424804:	and    esp,edi
  424806:	aas    
  424807:	jmp    0x424852
  424809:	dec    ebx
  42480a:	lahf   
  42480b:	jne    0x4247b7
  42480d:	sub    al,0xf3
  42480f:	mov    cl,0xd6
  424811:	sbb    al,0x9d
  424813:	and    BYTE PTR [ecx+0x73],0x74
  424817:	xor    BYTE PTR [ecx+edi*2],cl
  42481a:	and    al,0x24
  42481c:	dec    edx
  42481d:	(bad)  
  42481e:	mov    ch,0x5c
  424820:	pop    esi
  424821:	ret    
  424822:	jmp    FWORD PTR [ebx+0x2a]
  424825:	fidiv  WORD PTR [eax]
  424827:	out    dx,al
  424828:	lods   al,BYTE PTR ds:[esi]
  424829:	pop    edi
  42482a:	lods   eax,DWORD PTR ds:[esi]
  42482b:	push   cs
  42482c:	xlat   BYTE PTR ds:[ebx]
  42482d:	and    dl,0xe9
  424830:	imul   edi,DWORD PTR [edi],0xffffffb2
  424833:	dec    edx
  424834:	daa    
  424835:	jns    0x4248b1
  424837:	add    eax,0x83e296
  42483c:	mov    esi,0x74ef74ea
  424841:	(bad)  
  424842:	mov    edi,0x98b349fb
  424847:	xor    dh,BYTE PTR [edi]
  424849:	mov    dh,0xe
  42484b:	xchg   ebp,eax
  42484c:	add    al,dl
  42484e:	add    DWORD PTR [eax],eax
  424850:	xchg   DWORD PTR [edx],eax
  424852:	add    BYTE PTR [eax],al
  424854:	or     eax,DWORD PTR [ecx]
  424856:	mov    al,ds:0x27c0bc23
  42485b:	(bad)  
  42485c:	std    
  42485d:	es sti 
  42485f:	mov    ds:0x4f6433c1,al
  424864:	jns    0x42488e
  424866:	jb     0x4247f4
  424868:	div    BYTE PTR [ebx-0x554ead0a]
  42486e:	idiv   esp
  424870:	jne    0x42480a
  424872:	loopne 0x424804
  424874:	xchg   ebp,eax
  424875:	stos   BYTE PTR es:[edi],al
  424876:	mov    dl,0xcc
  424878:	xor    esp,DWORD PTR [eax+0x83211a3]
  42487e:	sti    
  42487f:	mov    ebx,DWORD PTR [ebx+edi*2]
  424882:	mov    esp,0xe0970ee1
  424887:	or     DWORD PTR [eax],ebp
  424889:	xchg   DWORD PTR [edi-0x14],ebp
  42488c:	mov    ds:0xed1c0ff6,eax
  424891:	cmp    esp,DWORD PTR [edx]
  424893:	jg     0x4248e5
  424895:	addr16 ret 
  424897:	mov    edx,0x7c800ca2
  42489c:	or     esp,DWORD PTR [esi-0x502837a9]
  4248a2:	or     ch,BYTE PTR [eax+0x1b]
  4248a5:	jb     0x424899
  4248a7:	jmp    0x70337ce1
  4248ac:	sub    ah,BYTE PTR [esi+0x45]
  4248af:	ss jecxz 0x424869
  4248b2:	nop
  4248b3:	test   DWORD PTR [ecx+eiz*4],esi
  4248b6:	inc    eax
  4248b7:	sahf   
  4248b8:	sub    eax,0x2bde870
  4248bd:	das    
  4248be:	mov    al,ds:0x1624a5d
  4248c3:	mov    eax,ds:0x5c7ac9a9
  4248c8:	jno    0x424855
  4248ca:	popf   
  4248cb:	rcr    edi,0xf7
  4248ce:	pop    ss
  4248cf:	stos   BYTE PTR es:[edi],al
  4248d0:	and    eax,0xa39d47e5
  4248d5:	sbb    esi,ecx
  4248d7:	mov    al,0x4e
  4248d9:	test   BYTE PTR [edi+ebp*1-0x4c64441c],ch
  4248e0:	shr    BYTE PTR [ebx-0x58],cl
  4248e3:	mov    ss,eax
  4248e5:	outs   dx,BYTE PTR ds:[esi]
  4248e6:	inc    esp
  4248e7:	mov    al,BYTE PTR [ebp-0x2]
  4248ea:	lahf   
  4248eb:	xchg   BYTE PTR [edx],ch
  4248ed:	cdq    
  4248ee:	mov    al,ds:0xd67a9c75
  4248f3:	lods   al,BYTE PTR ds:[esi]
  4248f4:	cli    
  4248f5:	pcmpgtd mm3,QWORD PTR [esi-0x130464be]
  4248fc:	loope  0x424904
  4248fe:	mov    bh,0xdf
  424900:	dec    ebx
  424901:	ret    0xef62
  424904:	push   ss
  424905:	sbb    ecx,DWORD PTR [edi]
  424907:	xchg   ecx,eax
  424908:	pop    edi
  424909:	(bad)  
  42490a:	cli    
  42490b:	cdq    
  42490c:	and    esi,DWORD PTR [edi+0x2d]
  42490f:	leave  
  424910:	xchg   ebp,eax
  424911:	pop    es
  424912:	dec    ebp
  424913:	into   
  424914:	mov    ch,BYTE PTR [ebp-0x381f5d93]
  42491a:	fst    DWORD PTR [eax+0x7af2b501]
  424920:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424921:	jb     0x424934
  424923:	adc    al,0xc4
  424925:	(bad)  
  424926:	fsub   DWORD PTR [ebp+0x3f]
  424929:	sub    al,0x88
  42492b:	mov    ah,0x93
  42492d:	jae    0x4248e8
  42492f:	push   ebx
  424930:	aam    0x3c
  424932:	dec    eax
  424933:	pop    edx
  424934:	(bad)  [esi-0xf]
  424937:	arpl   WORD PTR [eax],sp
  424939:	jp     0x4249a3
  42493b:	cmp    al,BYTE PTR [ebp+0x5cdfc24f]
  424941:	sub    eax,0x9f15bf69
  424946:	in     eax,0xb0
  424948:	dec    esp
  424949:	and    BYTE PTR [esi],ah
  42494b:	or     eax,0xc28255f7
  424950:	dec    eax
  424951:	test   eax,0x3e1dbda5
  424956:	pop    ss
  424957:	shr    BYTE PTR ds:0x86f2a99e,0x9d
  42495e:	imul   DWORD PTR [ecx+0x2]
  424961:	xchg   BYTE PTR [esi-0x7c911ef2],dl
  424967:	or     eax,0x30aadc4b
  42496c:	retf   
  42496d:	(bad)  [edi+0x15]
  424970:	lods   al,BYTE PTR ds:[esi]
  424971:	push   ebx
  424972:	xchg   ebp,eax
  424973:	dec    ecx
  424974:	jns    0x42495b
  424976:	int    0x62
  424978:	xchg   esp,eax
  424979:	mov    ebp,0x33c76120
  42497e:	and    esi,DWORD PTR [edi-0x1f46e512]
  424984:	sti    
  424985:	mov    ds:0x29e52874,eax
  42498a:	push   es
  42498b:	mov    esp,0x7bc588d
  424990:	xchg   esp,eax
  424991:	jl     0x4249d1
  424993:	(bad)  
  424995:	sub    bl,BYTE PTR [eax]
  424997:	sahf   
  424998:	sar    DWORD PTR [ebx],1
  42499a:	xchg   ebp,eax
  42499b:	daa    
  42499c:	mov    ds:0xfaba650e,al
  4249a1:	pop    edi
  4249a2:	hlt    
  4249a3:	xor    esp,DWORD PTR [edi+esi*8]
  4249a6:	iret   
  4249a7:	out    dx,eax
  4249a8:	mov    edi,esp
  4249aa:	push   cs
  4249ab:	dec    eax
  4249ac:	jo     0x424984
  4249ae:	in     eax,dx
  4249af:	add    DWORD PTR [si],ebx
  4249b2:	sub    ah,BYTE PTR [eax-0xb3ec69b]
  4249b8:	pop    ebp
  4249b9:	imul   ah
  4249bb:	sub    al,0x8f
  4249bd:	lds    ebx,FWORD PTR [esi-0x4e]
  4249c0:	cld    
  4249c1:	xabort 0xdb
  4249c4:	inc    edx
  4249c5:	int    0x63
  4249c7:	xchg   esp,eax
  4249c8:	les    esp,FWORD PTR [ebx+0x5]
  4249cb:	and    ch,BYTE PTR [esi-0x733c8ad1]
  4249d1:	xor    ah,0x56
  4249d4:	push   es
  4249d5:	pop    esi
  4249d6:	add    eax,0xa558be9e
  4249db:	(bad)  
  4249dc:	jnp    0x4249cd
  4249de:	pop    ds
  4249df:	aad    0xfb
  4249e1:	push   eax
  4249e2:	mov    ebx,0xa55aaded
  4249e7:	aaa    
  4249e8:	popa   
  4249e9:	in     al,dx
  4249ea:	cli    
  4249eb:	sub    eax,0x19cc8dd0
  4249f0:	adc    cl,BYTE PTR [edi+eiz*2-0x4c]
  4249f4:	aad    0xa4
  4249f6:	and    DWORD PTR [eax],esp
  4249f8:	pop    eax
  4249f9:	loopne 0x424999
  4249fb:	js     0x424a0f
  4249fd:	push   ebp
  4249fe:	nop
  4249ff:	jns    0x424a1f
  424a01:	adc    BYTE PTR [edx],bl
  424a03:	(bad)  
  424a04:	in     al,dx
  424a05:	jbe    0x4249e7
  424a07:	xor    ebx,DWORD PTR [ebx]
  424a09:	loope  0x4249ac
  424a0b:	sbb    al,0xfc
  424a0d:	adc    dh,BYTE PTR [esp+ecx*4+0xd9f79af]
  424a14:	mov    cl,0xf6
  424a16:	sar    ah,cl
  424a18:	cdq    
  424a19:	in     al,0x34
  424a1b:	push   ebx
  424a1c:	sti    
  424a1d:	fadd   QWORD PTR ds:0x6f3e657d
  424a23:	mov    ds:0xdd177efd,al
  424a28:	icebp  
  424a29:	rcr    DWORD PTR [ebp+eax*1+0x6],cl
  424a2d:	xor    ecx,DWORD PTR [edi-0x22]
  424a30:	and    dh,BYTE PTR [ecx+0x7e488bf7]
  424a36:	int3   
  424a37:	push   ss
  424a38:	inc    ebx
  424a39:	add    dl,BYTE PTR [eax-0x23e6dd91]
  424a3f:	pop    ebx
  424a40:	jmp    0x424a0d
  424a42:	cmp    BYTE PTR [esi+0x55],ah
  424a45:	das    
  424a46:	ins    BYTE PTR es:[edi],dx
  424a47:	cmp    DWORD PTR [eax-0x1e445013],eax
  424a4d:	outs   dx,BYTE PTR ds:[esi]
  424a4e:	push   cs
  424a4f:	xor    eax,0xe9b9d406
  424a54:	dec    esi
  424a55:	mov    al,0x3d
  424a57:	mov    bl,0x23
  424a59:	inc    esp
  424a5a:	mov    bl,0xad
  424a5c:	pushf  
  424a5d:	push   ss
  424a5e:	sbb    al,0x3e
  424a60:	or     BYTE PTR [ebx+eax*4+0x12e2785d],ah
  424a67:	out    dx,al
  424a68:	std    
  424a69:	lods   eax,DWORD PTR ds:[esi]
  424a6a:	das    
  424a6b:	or     dh,BYTE PTR [ebp-0x7e0e38b]
  424a71:	sahf   
  424a72:	push   0x37
  424a74:	xchg   BYTE PTR ds:0x36605cec,ch
  424a7a:	push   ds
  424a7b:	mov    ecx,0x6db7d95b
  424a80:	jbe    0x424a6a
  424a82:	pop    edx
  424a83:	jae    0x424a59
  424a85:	fidiv  WORD PTR [ecx+0x5ea4b647]
  424a8b:	inc    ebp
  424a8c:	iret   
  424a8d:	mov    ebp,DWORD PTR [ebx+eax*1]
  424a90:	pop    edi
  424a91:	(bad)  
  424a92:	into   
  424a93:	pop    ecx
  424a94:	lods   al,BYTE PTR ds:[esi]
  424a95:	mov    ecx,ebp
  424a97:	je     0x424b0c
  424a99:	inc    DWORD PTR [eax]
  424a9b:	mov    es,WORD PTR [ebx+edx*2+0x71]
  424a9f:	pop    eax
  424aa0:	xor    ch,bh
  424aa2:	inc    eax
  424aa3:	pop    es
  424aa4:	and    ebx,DWORD PTR ds:0xbe514b9a
  424aaa:	call   0x7838:0xc6966071
  424ab1:	cs sub eax,0xc670855a
  424ab7:	mov    eax,ds:0x1fa4dcdb
  424abc:	popf   
  424abd:	xor    BYTE PTR [eax],ah
  424abf:	xchg   esi,eax
  424ac0:	mov    ebx,0x62068253
  424ac5:	lea    ebp,[esi+0x1f0396e5]
  424acb:	imul   esp,DWORD PTR [ecx-0x22],0xffffff88
  424acf:	jae    0x424ae2
  424ad1:	pop    edx
  424ad2:	mov    ch,0xa3
  424ad4:	jle    0x424aa4
  424ad6:	daa    
  424ad7:	into   
  424ad8:	inc    esp
  424ad9:	aas    
  424ada:	mov    al,0x0
  424adc:	dec    ebx
  424add:	inc    ebp
  424ade:	mov    edx,0x5fffbeee
  424ae3:	in     eax,0x54
  424ae5:	stos   BYTE PTR es:[edi],al
  424ae6:	clc    
  424ae7:	adc    DWORD PTR ds:0x89940d50,ebx
  424aed:	les    eax,FWORD PTR [ecx]
  424aef:	add    BYTE PTR [edi+0x5e000002],al
  424af5:	iret   
  424af6:	xchg   dh,dh
  424af8:	pop    ecx
  424af9:	(bad)  
  424afa:	iret   
  424afb:	push   ecx
  424afc:	fdiv   DWORD PTR [esi]
  424afe:	mov    dl,0xf2
  424b00:	mov    ah,0xd3
  424b02:	adc    BYTE PTR [eax-0x566b8716],ah
  424b08:	xchg   ebx,eax
  424b09:	pop    ebp
  424b0a:	push   0x64
  424b0c:	jl     0x424ad2
  424b0e:	int    0x72
  424b10:	aad    0x10
  424b12:	sahf   
  424b13:	(bad)  
  424b14:	in     eax,dx
  424b15:	inc    ecx
  424b16:	aam    0xf1
  424b18:	mov    BYTE PTR [edx],ah
  424b1a:	jb     0x424b8f
  424b1c:	xlat   BYTE PTR ds:[ebx]
  424b1d:	mov    ebx,DWORD PTR [esi]
  424b1f:	pop    ss
  424b20:	popf   
  424b21:	mov    esi,0xce4c4b6f
  424b26:	jg     0x424ba0
  424b28:	(bad)  
  424b29:	add    eax,ebx
  424b2b:	mov    eax,DWORD PTR [ecx-0x3e]
  424b2e:	not    BYTE PTR [ebp-0x6ea47f7e]
  424b34:	push   esi
  424b35:	cmp    eax,DWORD PTR [ecx-0x46cb9aae]
  424b3b:	and    cl,BYTE PTR [ebp+eax*4-0x50]
  424b3f:	jmp    0x532cebbc
  424b44:	xchg   DWORD PTR [eax+0x7fb1b962],esi
  424b4a:	inc    edx
  424b4b:	xor    ebp,edx
  424b4d:	mov    esp,0xddc8d7ea
  424b52:	ror    BYTE PTR [edi+0x77e5f76b],cl
  424b58:	in     eax,dx
  424b59:	fisubr DWORD PTR [eax]
  424b5b:	in     eax,0x1b
  424b5d:	call   0x6ca75241
  424b62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b64:	test   BYTE PTR [ebx+0x560ec4f4],bl
  424b6a:	and    DWORD PTR [ebp+0x1dc83cb],0x672fcaa0
  424b74:	fnstcw WORD PTR [ecx]
  424b76:	push   0x65
  424b78:	adc    DWORD PTR [eax-0x3031eb10],ecx
  424b7e:	imul   ecx,DWORD PTR [eax],0x7e
  424b81:	call   0xe08d:0x51b5ae37
  424b88:	cli    
  424b89:	les    ebx,FWORD PTR [edx+0x3d8e9ad8]
  424b8f:	xchg   DWORD PTR [eax],ebp
  424b91:	arpl   bx,di
  424b93:	xchg   ebx,eax
  424b94:	adc    eax,0x8b8579cd
  424b99:	mov    cl,0x6c
  424b9b:	push   ss
  424b9c:	cdq    
  424b9d:	loopne 0x424bac
  424b9f:	push   ecx
  424ba0:	jae    0x424b34
  424ba2:	inc    DWORD PTR [eax+0x537e3824]
  424ba8:	int    0x96
  424baa:	xchg   ecx,eax
  424bab:	shl    BYTE PTR [edx-0x48],cl
  424bae:	enter  0xf203,0xbb
  424bb2:	inc    ebp
  424bb3:	dec    esp
  424bb4:	leave  
  424bb5:	sbb    BYTE PTR [ebp-0x5cd280cf],dh
  424bbb:	mov    esi,0x688c7d0b
  424bc0:	gs inc esp
  424bc2:	push   ss
  424bc3:	inc    ecx
  424bc4:	iret   
  424bc5:	in     al,dx
  424bc6:	cwde   
  424bc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424bc8:	adc    BYTE PTR [ebp-0x6c],al
  424bcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424bcc:	xor    al,0x7a
  424bce:	sub    esi,DWORD PTR [edx-0x104518f0]
  424bd4:	ins    DWORD PTR es:[edi],dx
  424bd5:	xchg   ecx,eax
  424bd6:	jmp    DWORD PTR [eax+edx*4+0x3c]
  424bda:	repz je 0x424c4f
  424bdd:	es dec edx
  424bdf:	daa    
  424be0:	test   al,0x86
  424be2:	pop    ds
  424be3:	sbb    BYTE PTR [esi],bh
  424be5:	out    0xf9,al
  424be7:	mov    ch,0x2e
  424be9:	xor    cl,bl
  424beb:	mov    al,0xca
  424bed:	in     eax,dx
  424bee:	add    ebp,0xd0a2a0ac
  424bf4:	push   edi
  424bf5:	dec    esi
  424bf6:	add    edx,DWORD PTR [edi-0x6b1fc4b5]
  424bfc:	mov    bh,0x9a
  424bfe:	xchg   esp,eax
  424bff:	dec    ebx
  424c00:	scas   eax,DWORD PTR es:[edi]
  424c01:	in     al,dx
  424c02:	lock pop edx
  424c04:	sub    DWORD PTR [eax],0xffffff83
  424c07:	mov    bl,0x55
  424c09:	out    0x10,al
  424c0b:	fdivr  QWORD PTR [ecx-0x50c43e38]
  424c11:	jmp    0x87ef:0xc2277588
  424c18:	inc    edi
  424c19:	mov    esp,0x6342e5d
  424c1e:	repnz push eax
  424c20:	ret    0x9fcd
  424c23:	test   DWORD PTR [eax+ebp*4],ebx
  424c26:	test   DWORD PTR [ebx+0x29],ebp
  424c29:	dec    eax
  424c2a:	adc    al,BYTE PTR [ebp+esi*8-0x3d5208e9]
  424c31:	fld    st(4)
  424c33:	rol    esi,cl
  424c35:	or     esi,DWORD PTR [ecx-0x2298b2d5]
  424c3b:	bound  ecx,QWORD PTR [esi]
  424c3d:	test   eax,0x6ba8cb7a
  424c42:	sub    BYTE PTR [esi],ch
  424c44:	stos   BYTE PTR es:[edi],al
  424c45:	out    dx,al
  424c46:	hlt    
  424c47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c48:	xor    eax,0x9f7e8321
  424c4d:	and    DWORD PTR ds:0x7fe70564,0xffffffe7
  424c54:	ret    0xa602
  424c57:	dec    ebx
  424c58:	and    BYTE PTR [esi+0x793bf935],dh
  424c5e:	push   esp
  424c5f:	gs call 0xd2a5e0e2
  424c65:	mov    cl,0x84
  424c67:	mov    cl,0xec
  424c69:	es xchg ecx,eax
  424c6b:	leave  
  424c6c:	xchg   BYTE PTR [ebp-0x65],bl
  424c6f:	sbb    ebx,ebx
  424c71:	popf   
  424c72:	pop    es
  424c73:	or     eax,0xd6dd1540
  424c78:	mov    bh,0xc5
  424c7a:	jmp    0x424ccf
  424c7c:	fwait
  424c7d:	dec    ebp
  424c7e:	sub    DWORD PTR [esi+0x8],eax
  424c81:	sar    edx,0xa2
  424c84:	pop    es
  424c85:	xor    BYTE PTR [ebx],0xb0
  424c88:	hlt    
  424c89:	push   edx
  424c8a:	inc    esi
  424c8b:	add    al,0x87
  424c8d:	mov    al,ds:0x9094fc2a
  424c92:	js     0x424c49
  424c94:	add    eax,0x8192b5a0
  424c99:	call   0x6748:0xfa5958f1
  424ca0:	pushf  
  424ca1:	mov    esp,DWORD PTR [edi+ebx*2-0x46dc3d48]
  424ca8:	sub    eax,0xabd0749f
  424cad:	and    DWORD PTR [ebp+0x3023cdf8],edx
  424cb3:	cdq    
  424cb4:	push   es
  424cb5:	inc    esi
  424cb6:	(bad)  
  424cb7:	and    al,0xae
  424cb9:	sbb    BYTE PTR [edi-0x1d3620e4],ah
  424cbf:	mov    DWORD PTR [ecx+edx*1-0x7848abf7],ebx
  424cc6:	test   ax,0xc403
  424cca:	mov    ah,0x2b
  424ccc:	sub    BYTE PTR ds:0x862a46a1,cl
  424cd2:	lods   al,BYTE PTR ds:[esi]
  424cd3:	inc    ecx
  424cd4:	popf   
  424cd5:	mov    esp,DWORD PTR [esi+ebp*1+0x13]
  424cd9:	(bad)  
  424cda:	pop    edx
  424cdb:	leave  
  424cdc:	in     al,0x2a
  424cde:	lahf   
  424cdf:	popa   
  424ce0:	sbb    al,0x82
  424ce2:	aas    
  424ce3:	jg     0x424d1f
  424ce5:	jae    0x424d51
  424ce7:	sbb    eax,DWORD PTR cs:[esi+0x4f]
  424ceb:	in     al,dx
  424cec:	jmp    0x7323425
  424cf1:	repnz mov ah,0x40
  424cf4:	ins    BYTE PTR es:[edi],dx
  424cf5:	mov    esi,0xe3ee0e35
  424cfa:	jl     0x424d38
  424cfc:	pusha  
  424cfd:	test   BYTE PTR [esi+0x401ed45f],al
  424d03:	cld    
  424d04:	xlat   BYTE PTR ds:[ebx]
  424d05:	and    al,0xaa
  424d07:	out    0x67,eax
  424d09:	jmp    0x424d39
  424d0b:	mov    es,WORD PTR [ecx]
  424d0d:	shl    DWORD PTR [edx-0x40dffc13],0xb0
  424d14:	jbe    0x424cf6
  424d16:	sbb    al,0xe7
  424d18:	jmp    0x424d34
  424d1a:	add    al,0xf7
  424d1c:	bswap  edi
  424d1e:	and    eax,0xd29abf0f
  424d23:	xor    dl,0x3c
  424d26:	aas    
  424d27:	pop    ebx
  424d28:	and    edx,eax
  424d2a:	mov    eax,0xb61dd5f4
  424d2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d30:	cs jg  0x424ccd
  424d33:	test   eax,0xbab6b174
  424d38:	daa    
  424d39:	out    0xa1,eax
  424d3b:	scas   eax,DWORD PTR es:[edi]
  424d3c:	lahf   
  424d3d:	leave  
  424d3e:	dec    esi
  424d3f:	(bad)  
  424d40:	ja     0x424cea
  424d42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d43:	jmp    0x1d9b:0x974aab7f
  424d4a:	aas    
  424d4b:	fnstcw WORD PTR [edi]
  424d4d:	add    BYTE PTR [esi-0x6d339d1e],0xde
  424d54:	and    ebx,DWORD PTR [esi]
  424d56:	fdivr  QWORD PTR [ebp+0x47]
  424d59:	dec    edx
  424d5a:	or     al,0x6d
  424d5c:	jne    0x424d87
  424d5e:	les    ebx,FWORD PTR [ebp-0x6c]
  424d61:	int3   
  424d62:	rcl    BYTE PTR [esi-0x61],0x33
  424d66:	aaa    
  424d67:	cdq    
  424d68:	jle    0x424d9c
  424d6a:	adc    DWORD PTR [eax],edx
  424d6c:	pop    eax
  424d6d:	xchg   edx,eax
  424d6e:	jmp    0xea29:0x75bab3c9
  424d75:	pusha  
  424d76:	sub    ebx,DWORD PTR [ebx+0x5fb945]
  424d7c:	stos   BYTE PTR es:[edi],al
  424d7d:	jo     0x424d5f
  424d7f:	dec    ecx
  424d80:	cli    
  424d81:	fldcw  WORD PTR [ebx-0x35bf70d]
  424d87:	loopne 0x424d66
  424d89:	sub    eax,0xc710b086
  424d8e:	add    DWORD PTR [eax],eax
  424d90:	xchg   DWORD PTR [edx],eax
  424d92:	add    BYTE PTR [eax],al
  424d94:	out    dx,al
  424d95:	je     0x424dfb
  424d97:	inc    esp
  424d98:	icebp  
  424d99:	inc    esi
  424d9a:	scas   eax,DWORD PTR es:[edi]
  424d9b:	int    0xe7
  424d9d:	push   0xffffff84
  424d9f:	mov    edx,0xd87bdd86
  424da4:	and    BYTE PTR [ebx+0x17],dl
  424da7:	sbb    BYTE PTR [eax],ah
  424da9:	or     esp,DWORD PTR [eax]
  424dab:	pusha  
  424dac:	inc    eax
  424dad:	shl    BYTE PTR [ebp-0x17220ed],0xb8
  424db4:	jae    0x424e23
  424db6:	cdq    
  424db7:	loope  0x424dc0
  424db9:	ret    
  424dba:	xlat   BYTE PTR ds:[ebx]
  424dbb:	mov    ebp,0xc74e1194
  424dc0:	push   ecx
  424dc1:	cmp    al,0x74
  424dc3:	popa   
  424dc4:	retf   0xcb86
  424dc7:	es mov ch,0x4b
  424dca:	jbe    0x424d85
  424dcc:	addr16 push ebx
  424dce:	adc    bh,BYTE PTR [ecx+0x23]
  424dd1:	cmp    eax,DWORD PTR [edi-0x7b4dbf4e]
  424dd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424dd8:	mov    ch,0x4c
  424dda:	cwde   
  424ddb:	scas   eax,DWORD PTR es:[edi]
  424ddc:	and    BYTE PTR [edx+0x1b],bh
  424ddf:	fnstenv [edi+0x34]
  424de2:	or     al,0xa5
  424de4:	add    edi,DWORD PTR [ecx-0x38]
  424de7:	lods   al,BYTE PTR ds:[esi]
  424de8:	jmp    0xd2df:0xf7ad75dc
  424def:	shl    BYTE PTR [edx],0x8
  424df2:	stc    
  424df3:	xor    eax,0xf54a0bf0
  424df8:	inc    edx
  424df9:	mov    al,0xaa
  424dfb:	mov    cl,0x1a
  424dfd:	adc    al,0xc
  424dff:	dec    esi
  424e00:	(bad)  
  424e01:	jmp    FWORD PTR [esi+0x13f92b57]
  424e07:	fdivr  st,st(3)
  424e09:	xchg   esp,eax
  424e0a:	cmp    BYTE PTR [edx-0x6f],bl
  424e0d:	in     eax,dx
  424e0e:	shr    bh,1
  424e10:	mov    ebp,0x377d7c77
  424e15:	push   cs
  424e16:	int    0xa0
  424e18:	outs   dx,BYTE PTR ds:[esi]
  424e19:	sahf   
  424e1a:	ins    BYTE PTR es:[edi],dx
  424e1b:	out    dx,al
  424e1c:	jne    0x424e8a
  424e1e:	fdivrp st(4),st
  424e20:	lea    ebx,[eax-0xc]
  424e23:	rcl    BYTE PTR [ecx],cl
  424e25:	scas   al,BYTE PTR es:[edi]
  424e26:	inc    edx
  424e27:	jge    0x424e62
  424e29:	int    0x54
  424e2b:	inc    esi
  424e2c:	out    0xcb,eax
  424e2e:	xchg   DWORD PTR [ecx],esp
  424e30:	ins    DWORD PTR es:[edi],dx
  424e31:	push   edx
  424e32:	(bad)  
  424e33:	sbb    eax,0x4c4337e1
  424e38:	test   eax,0x23d084fc
  424e3d:	pusha  
  424e3e:	in     al,dx
  424e3f:	cmp    ebp,DWORD PTR [edi]
  424e41:	push   edx
  424e42:	jecxz  0x424e18
  424e44:	adc    al,0xdf
  424e46:	mov    ch,0x43
  424e48:	aaa    
  424e49:	jmp    0x424e68
  424e4b:	and    eax,DWORD PTR [ebx-0x8]
  424e4e:	and    eax,esp
  424e50:	sbb    BYTE PTR [ebx-0x65],dh
  424e53:	stos   DWORD PTR es:[edi],eax
  424e54:	pop    ss
  424e55:	lds    edi,FWORD PTR [ebp-0x2e0e6938]
  424e5b:	dec    esi
  424e5c:	and    dh,BYTE PTR [ebp+0x7b]
  424e5f:	aam    0x5f
  424e61:	fld    DWORD PTR [ebx]
  424e63:	push   cs
  424e64:	(bad)  
  424e65:	xlat   BYTE PTR ds:[ebx]
  424e66:	fwait
  424e67:	sub    DWORD PTR [eax+0x7],0xffffff8e
  424e6b:	div    BYTE PTR [edi]
  424e6d:	inc    ebp
  424e6e:	pop    ss
  424e6f:	rcl    cl,1
  424e71:	jle    0x424e0d
  424e73:	mov    edx,0x8436b8cc
  424e78:	push   es
  424e79:	jbe    0x424e45
  424e7b:	test   DWORD PTR [ecx],0x3d775095
  424e81:	xchg   edx,eax
  424e82:	xor    DWORD PTR [ebp-0x37ed88fc],0x5512dd4a
  424e8c:	sar    BYTE PTR [ebp-0x5f8b53cc],cl
  424e92:	ss jmp 0x424eb2
  424e95:	fmul   DWORD PTR [ebx-0x33]
  424e98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e99:	or     esp,edi
  424e9b:	outs   dx,DWORD PTR ds:[esi]
  424e9c:	das    
  424e9d:	(bad)  
  424e9e:	cmp    ebx,DWORD PTR [ecx-0x2be77298]
  424ea4:	jg     0x424e59
  424ea6:	xchg   edi,eax
  424ea7:	imul   ebp,DWORD PTR [ecx+0x5cb4e754],0xffffffe7
  424eae:	inc    ebp
  424eaf:	ins    DWORD PTR es:[edi],dx
  424eb0:	push   edx
  424eb1:	jmp    0x3d04:0xd7389466
  424eb8:	ror    BYTE PTR [edi+0x25],cl
  424ebb:	sar    BYTE PTR [edx+0x4dd62a21],1
  424ec1:	add    ebx,DWORD PTR [ecx]
  424ec3:	mov    dh,0xf7
  424ec5:	mov    ecx,0x2afa5ad1
  424eca:	adc    eax,0xb2fcfb58
  424ecf:	test   al,0x41
  424ed1:	mov    ?,ebp
  424ed3:	leave  
  424ed4:	add    eax,0xad7fe5bf
  424ed9:	ret    
  424eda:	or     WORD PTR [eax-0x7f],0x0
  424edf:	pop    ss
  424ee0:	cmp    edi,DWORD PTR [esi+0x77]
  424ee3:	xor    al,cl
  424ee5:	pop    es
  424ee6:	xor    BYTE PTR [edx-0x6c527ac9],dl
  424eec:	cmp    al,0x14
  424eee:	aam    0x79
  424ef0:	mov    edx,0xef647cc5
  424ef5:	add    eax,DWORD PTR [edx]
  424ef7:	mov    ebp,cs
  424ef9:	mov    ah,0x98
  424efb:	pusha  
  424efc:	pop    es
  424efd:	add    DWORD PTR [ebx+eiz*4-0x59131a10],edi
  424f04:	jae    0x424f19
  424f06:	stos   BYTE PTR es:[edi],al
  424f07:	mov    edx,0xed8edac2
  424f0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f0d:	outs   dx,DWORD PTR ds:[esi]
  424f0e:	mov    dl,0x76
  424f10:	cli    
  424f11:	and    DWORD PTR [ebp+0x31594c46],esp
  424f17:	xor    eax,0x3bb63a91
  424f1c:	test   BYTE PTR [ebx-0x26f38d9c],ch
  424f22:	sar    DWORD PTR [ecx-0x466c8543],1
  424f28:	xor    ecx,DWORD PTR [eax-0x294572a3]
  424f2e:	push   gs
  424f30:	sbb    DWORD PTR [ebp+0x384865d4],edi
  424f36:	sbb    dh,BYTE PTR [esi-0x60]
  424f39:	inc    eax
  424f3a:	xchg   edi,eax
  424f3b:	lods   eax,DWORD PTR ds:[esi]
  424f3c:	sbb    al,0x92
  424f3e:	dec    esp
  424f3f:	imul   esi,edx,0x1923b70c
  424f45:	pop    es
  424f46:	popa   
  424f47:	call   0xeea4f916
  424f4c:	aaa    
  424f4d:	xor    BYTE PTR [eax-0x7468ca28],al
  424f53:	adc    DWORD PTR [edx+0xb42752f],ecx
  424f59:	add    BYTE PTR [ebx-0x47],0x3
  424f5d:	out    0x24,eax
  424f5f:	int    0x40
  424f61:	mov    ebx,DWORD PTR [edx+ebx*8-0x3ed213f4]
  424f68:	jmp    0x7b24:0x2cfed7b4
  424f6f:	mov    ecx,0x6ebfc697
  424f74:	pop    es
  424f75:	cmp    dh,BYTE PTR [eax+0x10ecf731]
  424f7b:	sahf   
  424f7c:	stc    
  424f7d:	jnp    0x424f51
  424f7f:	push   ebp
  424f80:	pop    edx
  424f81:	pop    edx
  424f82:	loopne 0x424f47
  424f84:	fwait
  424f85:	mov    bh,0xbb
  424f87:	fwait
  424f88:	add    al,0xa3
  424f8a:	mov    esp,0x3ee1831b
  424f8f:	lea    esp,[ebx-0x75]
  424f92:	jg     0x424fa8
  424f94:	out    dx,eax
  424f95:	xor    edi,DWORD PTR [edx-0x514a34f7]
  424f9b:	push   ebx
  424f9c:	sub    ebx,DWORD PTR [ebx+edx*2+0x6a9fa200]
  424fa3:	cwde   
  424fa4:	scas   eax,DWORD PTR es:[edi]
  424fa5:	xchg   edi,eax
  424fa6:	inc    edx
  424fa7:	inc    esp
  424fa8:	sub    BYTE PTR [ecx],dl
  424faa:	stc    
  424fab:	fnsetpm(287 only) 
  424fad:	lock imul esi,DWORD PTR [eax+0x3777394b],0x9e39e12b
  424fb8:	add    esi,edx
  424fba:	test   WORD PTR [edx+0x31c3c286],0x6667
  424fc3:	iret   
  424fc4:	push   DWORD PTR [edi+ebp*8-0x2f]
  424fc8:	cmp    al,0xfd
  424fca:	popf   
  424fcb:	shl    BYTE PTR [ebp+0x140458f5],0xc1
  424fd2:	test   DWORD PTR [esi],edx
  424fd4:	sbb    al,0x8f
  424fd6:	sub    esp,ecx
  424fd8:	jle    0x42500f
  424fda:	cmp    bh,BYTE PTR [ecx-0x2bd79979]
  424fe0:	jl     0x424ff4
  424fe2:	nop
  424fe3:	dec    ebx
  424fe4:	ja     0x424ff3
  424fe6:	mov    ebp,0x736a93ad
  424feb:	xchg   esi,eax
  424fec:	stc    
  424fed:	inc    esi
  424fee:	cmp    DWORD PTR [ebx+0x62],0x1a
  424ff2:	sub    dl,BYTE PTR [edx+0x70fd109f]
  424ff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ff9:	mov    ecx,0xedd66d7b
  424ffe:	dec    eax
  424fff:	cdq    
  425000:	mov    BYTE PTR [edi+0x104afc94],bh
  425006:	lea    ecx,[esi]
  425008:	(bad)  
  425009:	mov    ebx,0x4c3ed237
  42500e:	outs   dx,BYTE PTR ds:[esi]
  42500f:	mov    dl,0xa9
  425011:	lds    ecx,FWORD PTR [ebx]
  425013:	add    bl,BYTE PTR [esi+0x77119cec]
  425019:	(bad)  
  42501a:	ja     0x42501c
  42501c:	dec    edx
  42501d:	xchg   DWORD PTR [edx+0x4c],edx
  425020:	(bad)  
  425022:	pop    esi
  425023:	xchg   eax,esp
  425025:	js     0x424fa8
  425027:	mov    ebx,0x2feacb4a
  42502c:	xchg   edi,eax
  42502d:	leave  
  42502e:	add    DWORD PTR [eax],eax
  425030:	xchg   DWORD PTR [edx],eax
  425032:	add    BYTE PTR [eax],al
  425034:	dec    esp
  425035:	add    eax,0x84012824
  42503a:	cld    
  42503b:	sbb    eax,DWORD PTR [ebx-0x52]
  42503e:	mov    dl,0x5d
  425040:	xor    eax,0x78140f1
  425045:	sub    al,0x7d
  425047:	addr16 xor eax,0x4ef4a33c
  42504d:	scas   al,BYTE PTR es:[edi]
  42504e:	push   ecx
  42504f:	dec    edi
  425050:	iret   
  425051:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425052:	xchg   edx,eax
  425053:	cmp    al,0x9c
  425055:	ds clc 
  425057:	cli    
  425058:	test   BYTE PTR [eax-0x6b],dh
  42505b:	iret   
  42505c:	(bad)  [eax+ecx*8-0x108623cd]
  425063:	in     al,0x1e
  425065:	in     eax,dx
  425066:	inc    esi
  425067:	or     BYTE PTR [edx-0x8],0xca
  42506b:	and    al,0x6d
  42506d:	mov    esp,DWORD PTR [ebp+0x29]
  425070:	sti    
  425071:	or     eax,0xeea47b0f
  425076:	adc    DWORD PTR [eax-0x6],0x91baaf08
  42507d:	jno    0x425090
  42507f:	add    bl,ah
  425081:	pop    eax
  425082:	(bad)  
  425083:	shr    BYTE PTR [eax+0x62],1
  425086:	cs pop ebp
  425088:	(bad)  
  425089:	loopne 0x425100
  42508b:	push   esp
  42508c:	and    al,dl
  42508e:	daa    
  42508f:	in     al,0x63
  425091:	out    dx,al
  425092:	xor    ebp,DWORD PTR [esi+0x31]
  425095:	cs and cl,bh
  425098:	mov    dl,0xab
  42509a:	or     al,0xe0
  42509c:	lock (bad) 
  42509f:	jb     0x425023
  4250a1:	inc    esi
  4250a2:	(bad)  
  4250a4:	jl     0x64339727
  4250aa:	dec    ebx
  4250ab:	shl    cl,1
  4250ad:	(bad)  
  4250af:	adc    al,0x4c
  4250b1:	inc    esp
  4250b2:	sar    DWORD PTR [esp+edi*8],cl
  4250b5:	das    
  4250b6:	xchg   esp,eax
  4250b7:	push   es
  4250b8:	jae    0x425062
  4250ba:	or     ebx,edi
  4250bc:	jnp    0x42510e
  4250be:	or     al,0xbf
  4250c0:	dec    esi
  4250c1:	dec    BYTE PTR [ebp-0x48]
  4250c4:	fxch   st(2)
  4250c6:	sub    esp,DWORD PTR [ebp-0x5da8e858]
  4250cc:	xor    eax,0xa0c36296
  4250d1:	daa    
  4250d2:	push   ebp
  4250d3:	sbb    ch,BYTE PTR [eax]
  4250d5:	call   0x20fae97a
  4250da:	add    esi,DWORD PTR [ebp+ebx*4+0x36]
  4250de:	scas   eax,DWORD PTR es:[edi]
  4250df:	xlat   BYTE PTR ds:[ebx]
  4250e0:	push   cs
  4250e1:	(bad)  
  4250e2:	pusha  
  4250e3:	(bad)  
  4250e4:	scas   eax,DWORD PTR es:[edi]
  4250e5:	pop    ds
  4250e6:	or     BYTE PTR [ecx-0x7e8bc7f8],ah
  4250ec:	or     DWORD PTR [edx],ecx
  4250ee:	pop    ebp
  4250ef:	aas    
  4250f0:	pop    edi
  4250f1:	push   es
  4250f2:	fistp  DWORD PTR [edi+0x5a]
  4250f5:	add    DWORD PTR [ecx],ebx
  4250f7:	sar    DWORD PTR ss:[ebp-0x3c54aa0d],0x29
  4250ff:	xchg   edi,eax
  425101:	scas   al,BYTE PTR es:[edi]
  425102:	push   edi
  425103:	jae    0x425105
  425105:	stos   BYTE PTR es:[edi],al
  425106:	dec    eax
  425107:	sub    eax,0xf8e9371
  42510c:	dec    esp
  42510d:	push   edx
  42510e:	sub    DWORD PTR gs:[eax+ebx*8-0x78],ecx
  425113:	popf   
  425114:	xchg   edi,eax
  425115:	fisttp DWORD PTR [ebx-0x50]
  425118:	data16 xor al,0xc2
  42511b:	sub    bl,BYTE PTR [ebx-0x6f]
  42511e:	inc    ebx
  42511f:	(bad)  
  425121:	pop    edx
  425122:	push   es
  425123:	ffreep st(0)
  425125:	nop
  425126:	stos   DWORD PTR es:[edi],eax
  425127:	or     BYTE PTR ds:0x7c6e7837,al
  42512d:	jne    0x42518c
  42512f:	inc    esp
  425130:	and    ebx,0xfffffff8
  425133:	fst    QWORD PTR [edx-0x77]
  425136:	arpl   WORD PTR [edx-0x4a],ax
  425139:	sub    bl,bh
  42513b:	scas   eax,DWORD PTR es:[edi]
  42513c:	push   edi
  42513d:	test   BYTE PTR [eax-0x7ba5fa67],al
  425143:	mov    esp,0x8920ddd2
  425148:	mov    BYTE PTR [esi+0x71fb1120],ah
  42514e:	push   es
  42514f:	mov    cl,0xb4
  425151:	loopne 0x42513a
  425153:	mov    eax,ds:0xa20a19e3
  425158:	or     BYTE PTR [edi-0x4b],bh
  42515b:	icebp  
  42515c:	test   BYTE PTR [ebx+0x3d],0xd2
  425160:	ffree  st(4)
  425162:	add    bh,BYTE PTR [esp+ebx*1+0x14113f37]
  425169:	add    esi,ebp
  42516b:	mov    al,0x28
  42516d:	(bad)  [edx+0x44]
  425170:	mov    edx,0x825fe8e8
  425175:	pop    es
  425176:	push   cs
  425177:	and    dh,BYTE PTR [esi-0x2a7ef52d]
  42517d:	adc    dh,BYTE PTR [esi+0x79a6c28]
  425183:	dec    edx
  425184:	scas   al,BYTE PTR es:[edi]
  425185:	cmp    DWORD PTR [edx+0x6cd0294b],0x7a
  42518c:	xchg   ebp,eax
  42518d:	fild   DWORD PTR [edi-0x77]
  425190:	clc    
  425191:	mov    eax,0xa6d85816
  425196:	jbe    0x425178
  425198:	ds pop esp
  42519a:	hlt    
  42519b:	iret   
  42519c:	(bad)
  42519f:	mov    esp,0x87f5adb9
  4251a4:	sahf   
  4251a5:	pop    eax
  4251a6:	retf   0xce73
  4251a9:	xchg   ebp,eax
  4251aa:	mov    ebx,ss
  4251ac:	sti    
  4251ad:	js     0x425172
  4251af:	clc    
  4251b0:	sti    
  4251b1:	outs   dx,BYTE PTR ds:[esi]
  4251b2:	jb     0x4251e7
  4251b4:	mov    eax,ds:0xfe0b5d14
  4251b9:	jp     0x4251f1
  4251bb:	in     al,0x59
  4251bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251be:	or     eax,0x83470233
  4251c3:	shl    BYTE PTR [ecx],0x4c
  4251c6:	dec    edx
  4251c7:	mov    BYTE PTR [esi],dh
  4251c9:	inc    esi
  4251ca:	cmc    
  4251cb:	push   ebx
  4251cc:	xchg   BYTE PTR [ebx+0x783b5b59],bl
  4251d2:	push   esi
  4251d3:	repnz mul BYTE PTR [ebx]
  4251d6:	pop    edi
  4251d7:	push   ss
  4251d8:	test   BYTE PTR [edx+ecx*4-0x55],ah
  4251dc:	mov    eax,0xef2565d9
  4251e1:	ror    BYTE PTR [ebp+0x2d],cl
  4251e4:	dec    esp
  4251e5:	sbb    BYTE PTR [esp+ecx*4],ch
  4251e8:	or     esp,DWORD PTR [eax+0x4bd61752]
  4251ee:	mov    ebx,0x1e8c1428
  4251f3:	push   ss
  4251f4:	fs mov bh,0x4c
  4251f7:	fcmove st,st(4)
  4251f9:	jecxz  0x425196
  4251fb:	jbe    0x425224
  4251fd:	in     al,0xad
  4251ff:	shr    DWORD PTR [ebx],0x36
  425202:	stos   BYTE PTR es:[edi],al
  425203:	mov    DWORD PTR [esi-0x32b1d3b0],esp
  425209:	pop    ecx
  42520a:	mov    dh,bl
  42520c:	ins    BYTE PTR es:[edi],dx
  42520d:	inc    ebx
  42520e:	mov    cl,0x1d
  425210:	aas    
  425211:	and    edx,ecx
  425213:	pop    ebx
  425214:	xchg   ecx,eax
  425215:	repz and al,0x35
  425218:	pop    edx
  425219:	gs dec eax
  42521b:	pop    es
  42521c:	ins    DWORD PTR es:[edi],dx
  42521d:	or     DWORD PTR [eax],ebx
  42521f:	clc    
  425220:	mov    ds:0xbe62d945,eax
  425225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425226:	adc    eax,0x3f355653
  42522b:	js     0x425220
  42522d:	nop
  42522e:	adc    BYTE PTR [ebp+0x64],al
  425231:	and    eax,esi
  425233:	lods   eax,DWORD PTR ds:[esi]
  425234:	in     al,dx
  425235:	int3   
  425236:	add    BYTE PTR cs:[ecx-0x3f],ah
  42523a:	pop    esi
  42523b:	cmp    eax,0x741c621d
  425240:	xor    ecx,DWORD PTR [ecx+esi*1+0x78]
  425244:	out    0xdf,eax
  425246:	pop    esp
  425247:	daa    
  425248:	cld    
  425249:	je     0x425297
  42524b:	xchg   ecx,eax
  42524c:	push   0x4a
  42524e:	xchg   ebx,eax
  42524f:	mov    al,0x48
  425251:	int3   
  425252:	retf   0x5a4c
  425255:	mov    ecx,0xd709a59d
  42525a:	into   
  42525b:	jmp    0x93d8e8d1
  425260:	test   ebx,ebx
  425262:	jae    0x42521c
  425264:	out    dx,eax
  425265:	shr    DWORD PTR [ebp+ecx*4-0x76],cl
  425269:	push   esi
  42526a:	pop    es
  42526b:	out    0x1b,eax
  42526d:	mov    al,ds:0x48ca11e4
  425273:	push   ecx
  425274:	mov    ebx,0xb1cd90c1
  425279:	lds    ecx,FWORD PTR [edx]
  42527b:	add    eax,0xdbdf1432
  425280:	cdq    
  425281:	mov    eax,0x8cf64a68
  425286:	push   0x18
  425288:	dec    esi
  425289:	clc    
  42528a:	retf   0x4998
  42528d:	adc    dl,BYTE PTR [edi-0x2cdc0aa4]
  425293:	mov    esp,0xcae56800
  425298:	arpl   WORD PTR [ebp-0x1c],bx
  42529b:	mov    al,ds:0x65c8e04e
  4252a0:	push   0xd3a11a8
  4252a5:	xchg   esi,eax
  4252a6:	pop    es
  4252a7:	xlat   BYTE PTR ds:[ebx]
  4252a8:	mov    edi,0x9708c314
  4252ad:	repz push edi
  4252af:	aas    
  4252b0:	rol    cl,cl
  4252b2:	call   0x9d50:0xf29e3555
  4252b9:	mov    edi,DWORD PTR [eax+eax*1+0x397c920a]
  4252c0:	cld    
  4252c1:	dec    DWORD PTR [edi-0x4d]
  4252c4:	in     al,dx
  4252c5:	jo     0x42527e
  4252c7:	(bad)  
  4252c8:	leave  
  4252c9:	push   ebp
  4252ca:	mov    dh,0xcf
  4252cc:	push   ds
  4252cd:	int3   
  4252ce:	add    DWORD PTR [eax],eax
  4252d0:	xchg   DWORD PTR [edx],eax
  4252d2:	add    BYTE PTR [eax],al
  4252d4:	daa    
  4252d5:	addr16 xchg ah,bl
  4252d8:	lds    ecx,FWORD PTR [edi+0x7c]
  4252db:	lea    ebp,[esi+0x739c4397]
  4252e1:	arpl   WORD PTR [ecx],si
  4252e3:	inc    edi
  4252e4:	jmp    0x4252de
  4252e6:	mov    dl,0x63
  4252e8:	clc    
  4252e9:	push   ss
  4252ea:	xchg   ebx,eax
  4252eb:	inc    eax
  4252ec:	lods   al,BYTE PTR ds:[esi]
  4252ed:	jmp    0x425302
  4252ef:	cwde   
  4252f0:	(bad)  
  4252f1:	pusha  
  4252f2:	lods   eax,DWORD PTR ds:[esi]
  4252f3:	loopne 0x425368
  4252f5:	mov    edi,DWORD PTR ds:0x43701ab9
  4252fb:	shl    DWORD PTR [ebp+esi*8+0x73],cl
  4252ff:	mov    bl,0xba
  425301:	adc    bh,dh
  425303:	fcmovnb st,st(7)
  425305:	add    eax,edi
  425307:	mov    al,0xb1
  425309:	retf   0x1895
  42530c:	jbe    0x4252de
  42530e:	sahf   
  42530f:	mov    ds:0x2e2eba7,eax
  425314:	fistp  QWORD PTR [ebp-0x1b]
  425317:	push   ss
  425318:	push   esi
  425319:	out    0x25,al
  42531b:	adc    bl,BYTE PTR [edi]
  42531d:	push   0xb3251c9b
  425322:	dec    eax
  425323:	dec    edi
  425324:	arpl   bp,bx
  425326:	ret    0xa47a
  425329:	and    al,0xb4
  42532b:	ficom  WORD PTR [eax+0x2fa40479]
  425331:	stos   BYTE PTR es:[edi],al
  425332:	not    BYTE PTR [edx+0x64d5827f]
  425338:	or     dl,dl
  42533a:	cmp    esp,esi
  42533c:	and    eax,0xe1dd24cb
  425341:	repz iret 
  425343:	xor    BYTE PTR [ecx+0x1c],bh
  425346:	jmp    0x42532e
  425348:	stc    
  425349:	push   ecx
  42534a:	repnz sub ch,BYTE PTR [ebx-0x3171ec67]
  425351:	mov    BYTE PTR [eax+edi*8],ah
  425354:	jo     0x425362
  425356:	lock aam 0xbf
  425359:	push   ecx
  42535a:	(bad)  
  42535c:	setge  BYTE PTR [edx-0x7bad701a]
  425363:	xchg   DWORD PTR [ebx],esp
  425365:	shl    DWORD PTR [ecx],0x85
  425368:	adc    ebp,DWORD PTR [edx+ecx*1-0x20]
  42536c:	(bad)  
  42536d:	shl    BYTE PTR [ebx+esi*2-0x671c0826],cl
  425374:	sar    DWORD PTR [ecx],cl
  425376:	mov    eax,ds:0x52647d8e
  42537b:	leave  
  42537c:	cdq    
  42537d:	jae    0x42539e
  42537f:	inc    ecx
  425380:	mov    al,0x99
  425382:	mov    eax,ds:0x256510a8
  425387:	push   0x7ecfc2b8
  42538c:	xor    eax,0xd72ec014
  425391:	rcl    BYTE PTR [esp+ebx*2+0x5d77140d],0x7e
  425399:	int    0xed
  42539b:	mov    ebp,DWORD PTR [eax]
  42539d:	scas   eax,DWORD PTR es:[edi]
  42539e:	dec    edi
  42539f:	lock or eax,esi
  4253a2:	bound  edx,QWORD PTR [edx]
  4253a4:	sbb    eax,0xa9946cf0
  4253a9:	repnz push es
  4253ab:	popf   
  4253ac:	sub    ah,BYTE PTR [ebp+eax*8+0x22]
  4253b0:	inc    edx
  4253b1:	lods   eax,DWORD PTR gs:[esi]
  4253b3:	inc    ecx
  4253b4:	gs pop ds
  4253b6:	outs   dx,BYTE PTR ds:[esi]
  4253b7:	pusha  
  4253b8:	mov    eax,ds:0x3c4d71af
  4253bd:	fwait
  4253be:	aaa    
  4253bf:	ds test ch,dl
  4253c2:	sbb    ebp,esi
  4253c4:	mov    ecx,0xbcbf4ad8
  4253c9:	pop    edx
  4253ca:	or     al,0x8c
  4253cc:	dec    BYTE PTR [ecx-0x1f753999]
  4253d2:	in     al,0xd0
  4253d4:	mov    ecx,0xa9d1b8b8
  4253d9:	or     BYTE PTR [esi],0x3f
  4253dc:	sahf   
  4253dd:	sub    edi,DWORD PTR [edx-0x79]
  4253e0:	(bad)
  4253e3:	aam    0xf1
  4253e5:	and    BYTE PTR [ebp+0x47],ah
  4253e8:	xchg   ecx,eax
  4253e9:	rcr    DWORD PTR [ebx],cl
  4253eb:	rol    DWORD PTR [edi+0x5b],0x8f
  4253ef:	and    bl,BYTE PTR [ebp-0xa]
  4253f2:	fst    QWORD PTR [ebx+0x67]
  4253f5:	adc    al,0xd8
  4253f7:	adc    al,0xdf
  4253f9:	sub    ebx,ebx
  4253fb:	sahf   
  4253fc:	jo     0x4253cc
  4253fe:	or     bl,BYTE PTR [edx-0x36]
  425401:	cmc    
  425402:	adc    al,0x4e
  425404:	mov    al,0x4a
  425406:	fisttp DWORD PTR [ebx+0x78]
  425409:	stos   DWORD PTR es:[edi],eax
  42540a:	jne    0x42540d
  42540c:	retf   0x7e02
  42540f:	adc    eax,DWORD PTR [ecx-0x68d8b6b8]
  425415:	cmp    ah,BYTE PTR [ebp+0x12]
  425418:	ss in  al,0xf2
  42541b:	mov    edi,0xa65c4e07
  425420:	jmp    0x5548c37a
  425425:	fbstp  TBYTE PTR [esi]
  425427:	adc    eax,0x3fa5f3a1
  42542c:	aam    0x9e
  42542e:	(bad)  
  42542f:	jo     0x4253e1
  425431:	sar    BYTE PTR ds:0x2264dace,cl
  425437:	mov    ds:0xe0f80847,eax
  42543c:	or     ebx,edx
  42543e:	jbe    0x4253e1
  425440:	jmp    0x4254ad
  425442:	xlat   BYTE PTR ds:[ebx]
  425443:	and    cl,BYTE PTR [eax]
  425445:	lea    esp,[esi+eax*1]
  425448:	push   cs
  425449:	mov    ds:0x686938d7,al
  42544e:	mov    ds:0x271d1638,eax
  425453:	les    eax,FWORD PTR [esi+0x30a5bd6f]
  425459:	push   esi
  42545a:	push   ds
  42545b:	test   al,0xc
  42545d:	(bad)  
  42545e:	rcr    bh,cl
  425460:	lea    ebp,[eax+edi*4+0x8]
  425464:	mov    ch,0xd9
  425466:	push   0x21
  425468:	mov    ch,0x44
  42546a:	fcom   QWORD PTR [ebp+0x15]
  42546d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42546e:	push   cs
  42546f:	dec    ebp
  425470:	outs   dx,DWORD PTR ds:[esi]
  425471:	gs dec edx
  425473:	in     al,0xdc
  425475:	pop    edx
  425476:	add    eax,DWORD PTR ss:[eax-0x187c9694]
  42547d:	and    eax,0xb9f61a11
  425482:	mov    ecx,0xd3108a51
  425487:	or     eax,0x124b0b8b
  42548c:	xchg   esi,eax
  42548d:	xor    al,BYTE PTR [eax-0x4551a3aa]
  425493:	enter  0x7516,0xeb
  425497:	mov    ecx,0x1e96f58e
  42549d:	or     dl,ah
  42549f:	out    dx,eax
  4254a0:	sub    BYTE PTR [ecx],bl
  4254a2:	fwait
  4254a3:	das    
  4254a4:	or     al,BYTE PTR [ebp-0x7a]
  4254a7:	xor    al,0xe6
  4254a9:	jmp    0x4254c6
  4254ab:	mov    dl,0x5f
  4254ad:	cmp    dh,ah
  4254af:	aas    
  4254b0:	dec    edx
  4254b1:	shr    DWORD PTR [edi-0x51],0xd2
  4254b5:	xchg   ebx,eax
  4254b6:	dec    ebp
  4254b7:	retf   0xcfe2
  4254ba:	mov    dl,0x35
  4254bc:	fdiv   QWORD PTR [ebx-0x3]
  4254bf:	scas   eax,DWORD PTR es:[edi]
  4254c0:	test   al,0x3a
  4254c2:	imul   ebx,DWORD PTR [ecx+edx*2+0xc],0x4b
  4254c7:	sahf   
  4254c8:	rol    BYTE PTR [ebx*1+0x758f1bfb],1
  4254cf:	adc    BYTE PTR [esi+0x5f2be8e0],al
  4254d5:	push   edx
  4254d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254d7:	cwde   
  4254d8:	sub    esp,DWORD PTR [edi+0x33]
  4254db:	sbb    eax,DWORD PTR ds:0x8ff80787
  4254e1:	out    dx,eax
  4254e2:	mov    ds:0x2bb0c2f0,al
  4254e7:	pop    ebx
  4254e8:	lods   eax,DWORD PTR ds:[esi]
  4254e9:	sahf   
  4254ea:	call   0x7546:0x47ac2973
  4254f1:	xor    eax,ebp
  4254f3:	push   es
  4254f4:	jp     0x425494
  4254f6:	push   DWORD PTR [edx+0x50]
  4254f9:	cmp    ebx,DWORD PTR [eax-0x2f]
  4254fc:	fwait
  4254fd:	lahf   
  4254fe:	mov    bl,0x8c
  425500:	leave  
  425501:	mov    ecx,0x686002ec
  425506:	xchg   esi,eax
  425507:	aam    0x72
  425509:	test   al,0xef
  42550b:	out    0xb8,al
  42550d:	mov    BYTE PTR [ebx-0x15],ch
  425510:	inc    eax
  425511:	call   0x2250:0x89b57e1d
  425518:	push   edi
  425519:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42551a:	cmp    DWORD PTR [ebp+0x59],edx
  42551d:	retf   0xe626
  425520:	mov    eax,0x232e6f0f
  425525:	push   edx
  425526:	sar    DWORD PTR ds:0x9b8621b9,cl
  42552c:	cdq    
  42552d:	shl    BYTE PTR [ecx-0x2dc07647],0x2c
  425534:	cld    
  425535:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425536:	xor    bl,al
  425538:	popa   
  425539:	xchg   BYTE PTR [esi+0x7b],ch
  42553c:	adc    DWORD PTR [ecx-0xd],ebx
  42553f:	mov    edi,0x17186142
  425544:	sbb    BYTE PTR [eax-0x54],0xe9
  425548:	stc    
  425549:	dec    esp
  42554a:	test   al,0x86
  42554c:	outs   dx,DWORD PTR ds:[esi]
  42554d:	jo     0x425525
  42554f:	xchg   esi,eax
  425550:	dec    edi
  425551:	ins    BYTE PTR es:[edi],dx
  425552:	and    DWORD PTR [ecx],ecx
  425554:	push   0xffffffe3
  425556:	test   ebp,eax
  425558:	and    bl,BYTE PTR [ebp+0x21c30088]
  42555e:	ror    DWORD PTR [eax-0xd],1
  425561:	clc    
  425562:	fld    TBYTE PTR [ebx+0x202892a0]
  425568:	out    dx,eax
  425569:	test   DWORD PTR [ebx],esp
  42556b:	pop    es
  42556c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42556d:	into   
  42556e:	add    DWORD PTR [eax],eax
  425570:	xchg   DWORD PTR [edx],eax
  425572:	add    BYTE PTR [eax],al
  425574:	fs test cl,cl
  425577:	loop   0x4255f7
  425579:	cmp    edi,ebx
  42557b:	inc    ecx
  42557c:	xchg   BYTE PTR [esi],cl
  42557e:	out    0x34,al
  425580:	pop    ebx
  425581:	xor    DWORD PTR [edi-0x4a0d846b],esp
  425587:	mov    edi,0x58ac850e
  42558c:	jg     0x425564
  42558e:	jae    0x425520
  425590:	aad    0x7b
  425592:	dec    ebx
  425593:	fimul  WORD PTR [ebp-0x126adab6]
  425599:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  42559b:	jmp    0x803afd82
  4255a0:	dec    eax
  4255a1:	mov    BYTE PTR [ecx-0x56663b0d],0xba
  4255a8:	dec    esp
  4255a9:	cmp    eax,0xd242070f
  4255ae:	push   ebp
  4255af:	cs ds jb 0x42561c
  4255b3:	retf   
  4255b4:	jmp    0xea031301
  4255b9:	mov    ds:0x653b1824,eax
  4255be:	inc    ecx
  4255bf:	in     al,0x3f
  4255c1:	cmp    BYTE PTR [esi+0x3006f59],cl
  4255c7:	es push 0xffffffed
  4255ca:	test   BYTE PTR [ebx-0x5c],dl
  4255cd:	push   ebp
  4255ce:	mov    ds:0x706ef2a6,eax
  4255d3:	imul   esp,DWORD PTR [ecx+0x57],0x42ebd349
  4255da:	mov    ebx,0xe94979cc
  4255df:	adc    eax,0xe9b7273b
  4255e4:	add    eax,0x7c515e7
  4255e9:	pop    ebx
  4255ea:	shl    ebx,0x87
  4255ed:	jmp    0x425655
  4255ef:	xchg   edx,eax
  4255f0:	and    dl,BYTE PTR [eax-0x18]
  4255f3:	lea    eax,[esi+0x9f589c9]
  4255f9:	scas   al,BYTE PTR es:[edi]
  4255fa:	arpl   WORD PTR ss:[ecx+0x3a],si
  4255fe:	xor    BYTE PTR [esp+0x7713a05e],cl
  425605:	divps  xmm3,XMMWORD PTR [ebp-0x7c54d4a1]
  42560c:	pop    ss
  42560d:	sub    ah,bl
  42560f:	popf   
  425610:	push   ds
  425611:	rcl    BYTE PTR [ebp+0x36],cl
  425614:	add    ch,BYTE PTR [esi-0x79]
  425617:	adc    DWORD PTR [ebp-0x25],edx
  42561a:	jbe    0x4255e5
  42561c:	jle    0xf4ec7499
  425622:	bswap  edi
  425624:	push   es
  425625:	sub    ecx,DWORD PTR [edx]
  425627:	lea    ebp,[esi+0x5d24623d]
  42562d:	ror    DWORD PTR [edi-0x5c730ee1],1
  425633:	lock call 0x115:0x1288c8c7
  42563b:	bound  ecx,QWORD PTR [esi]
  42563d:	test   DWORD PTR [eax+0x98cde],ebx
  425643:	sub    BYTE PTR [ecx+eiz*8+0x276cd9f5],bl
  42564a:	dec    ecx
  42564b:	mov    al,ds:0x7bd1c2c5
  425650:	test   DWORD PTR [edx+0x5d72250a],esi
  425656:	dec    ebx
  425657:	test   eax,0xb7e6fd6d
  42565c:	lahf   
  42565d:	ds leave 
  42565f:	sub    ebx,esp
  425661:	xchg   DWORD PTR [eax-0x57],ebp
  425664:	mov    cs:0x3163771d,eax
  42566a:	mov    ecx,fs
  42566c:	dec    ebx
  42566d:	push   esi
  42566e:	mov    ebx,0x4a904b63
  425673:	mov    bh,0xd4
  425675:	stc    
  425676:	jle    0x4256e3
  425678:	push   0xffffffca
  42567a:	push   ebp
  42567b:	hlt    
  42567c:	rol    BYTE PTR [esi],1
  42567e:	xor    BYTE PTR [ebx],ah
  425680:	setno  al
  425683:	mov    eax,0x998d22f9
  425688:	dec    ebx
  425689:	dec    ecx
  42568a:	mov    ds:0xc0b4b3b5,eax
  42568f:	jb     0x4256d9
  425691:	mov    bl,0xd0
  425693:	enter  0xfab9,0x2e
  425697:	cwde   
  425698:	mov    al,ds:0xf3e1a179
  42569d:	add    edx,DWORD PTR [edx-0x343a53fb]
  4256a3:	adc    al,0x30
  4256a5:	cmc    
  4256a6:	cld    
  4256a7:	rcr    esp,0x84
  4256aa:	call   0xdddd5a00
  4256af:	jae    0x42565c
  4256b1:	xchg   DWORD PTR ds:0xcc1a20ea,eax
  4256b7:	inc    esp
  4256b8:	jae    0x425678
  4256ba:	sbb    BYTE PTR [edi+0x76],ch
  4256bd:	sbb    BYTE PTR [edx],al
  4256bf:	dec    edx
  4256c0:	iret   
  4256c1:	xor    cl,BYTE PTR [esp+ebx*1-0x65d28067]
  4256c8:	icebp  
  4256c9:	inc    edi
  4256ca:	fcmovnbe st,st(2)
  4256cc:	ficom  WORD PTR [edi+eax*2+0x2e]
  4256d0:	mov    ebx,0x991daaa
  4256d5:	pop    esi
  4256d6:	(bad)  
  4256d7:	mov    ecx,0xa6b72acb
  4256dc:	dec    BYTE PTR [ebx-0x76]
  4256df:	repnz mov ebp,0xd802b836
  4256e5:	pop    eax
  4256e6:	xor    DWORD PTR ds:0xd5f571ff,0x3d
  4256ed:	xor    dl,0x40
  4256f0:	in     eax,0x87
  4256f2:	(bad)
  4256f5:	rcr    esp,0xf6
  4256f8:	xchg   ebp,eax
  4256f9:	ja     0x425754
  4256fb:	xor    ch,BYTE PTR [edi]
  4256fd:	test   eax,0xb5adb531
  425702:	ja     0x42575d
  425704:	mov    eax,0xdecb3da7
  425709:	xor    BYTE PTR ds:0xa2467f5f,ah
  42570f:	cdq    
  425710:	rol    BYTE PTR [ecx],cl
  425712:	fidiv  WORD PTR [ebx]
  425714:	cmp    esp,edi
  425716:	rcr    BYTE PTR [ebx+0x5],0xd
  42571a:	sar    DWORD PTR [ebx],1
  42571c:	xlat   BYTE PTR ds:[ebx]
  42571d:	cmp    al,0x99
  42571f:	in     eax,0xae
  425721:	dec    ebp
  425722:	push   cs
  425723:	(bad)  
  425724:	(bad)  
  425726:	or     ch,BYTE PTR [ebx]
  425728:	jo     0x3a9e1398
  42572e:	sbb    BYTE PTR [eax-0x588c4322],0x7d
  425735:	xor    al,BYTE PTR [ebp-0x65]
  425738:	dec    ebp
  425739:	jno    0x425795
  42573b:	dec    eax
  42573c:	out    dx,eax
  42573d:	rol    BYTE PTR [ebx+0x28b2ab51],cl
  425743:	in     eax,0x4f
  425745:	pushf  
  425746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425747:	jecxz  0x42575c
  425749:	inc    ebp
  42574a:	jmp    FWORD PTR [ebp-0x5]
  42574d:	sahf   
  42574e:	mov    gs,WORD PTR [edi+esi*8]
  425751:	and    cl,bl
  425753:	int3   
  425754:	stos   BYTE PTR es:[edi],al
  425755:	fwait
  425756:	mov    edi,0x31d6e3e8
  42575b:	pop    edi
  42575c:	stc    
  42575d:	jmp    0x285b2683
  425762:	add    DWORD PTR [ebx],ecx
  425764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425765:	jnp    0x42576e
  425767:	xor    dl,BYTE PTR [esi+edx*8-0x73]
  42576b:	dec    esi
  42576c:	sbb    bh,BYTE PTR [eax-0x1807832b]
  425772:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425774:	xchg   ebx,eax
  425775:	scas   eax,DWORD PTR es:[edi]
  425776:	(bad)  
  425777:	mov    ecx,0x317da4bc
  42577c:	mov    BYTE PTR [esp+ebp*1+0x71],ah
  425780:	push   ebp
  425781:	cmp    BYTE PTR [ecx-0x36087bd5],ah
  425787:	jnp    0x4257ee
  425789:	pop    edi
  42578a:	jp     0x425783
  42578c:	mov    ebp,0x6d685b9
  425791:	push   esi
  425792:	sub    ch,ch
  425794:	pushf  
  425795:	sqrtps xmm2,XMMWORD PTR [ebx-0xf414f01]
  42579c:	nop
  42579d:	or     dl,0xe1
  4257a0:	cdq    
  4257a1:	and    ebx,DWORD PTR [edi-0x62c96eb3]
  4257a7:	mov    esp,DWORD PTR [esi-0x41]
  4257aa:	push   eax
  4257ab:	mov    ebx,0x1c8c8376
  4257b0:	jmp    0x692b25d4
  4257b5:	inc    ebp
  4257b6:	xchg   ebx,eax
  4257b7:	scas   al,BYTE PTR es:[edi]
  4257b8:	outs   dx,DWORD PTR ds:[esi]
  4257b9:	sar    DWORD PTR [esp+esi*1-0x2f],0xb2
  4257be:	mov    bl,0xa8
  4257c0:	fdiv   QWORD PTR [ebx]
  4257c2:	sub    ch,dl
  4257c4:	jge    0x42578e
  4257c6:	adc    al,0xa2
  4257c8:	mov    ?,WORD PTR [edx-0x63]
  4257cb:	sub    dl,bl
  4257cd:	cmp    eax,0x64c4f8a7
  4257d2:	or     al,0xf3
  4257d4:	cmp    DWORD PTR [esp+ebp*4],esi
  4257d7:	dec    eax
  4257d8:	ss enter 0xaf5e,0xe1
  4257dd:	cmp    edx,esi
  4257df:	xor    DWORD PTR [eax],eax
  4257e1:	mov    esp,0xf65e7c7d
  4257e6:	sbb    al,0x50
  4257e8:	xchg   esp,eax
  4257e9:	call   0x5f58:0x4f94259c
  4257f0:	push   edx
  4257f1:	(bad)  [edi-0x45]
  4257f4:	fs fld st(7)
  4257f7:	jmp    0xec0cbd
  4257fc:	call   0x9eff:0xefe9ef59
  425803:	jnp    0x425848
  425805:	pop    ebp
  425806:	pop    esp
  425807:	mov    cl,0xcb
  425809:	mov    ebp,0xd12c4dd9
  42580e:	add    DWORD PTR [eax],eax
  425810:	xchg   DWORD PTR [edx],eax
  425812:	add    BYTE PTR [eax],al
  425814:	or     ebx,0x45
  425817:	test   al,0xd5
  425819:	jbe    0x425876
  42581b:	stos   BYTE PTR es:[edi],al
  42581c:	gs cmp bh,dh
  42581f:	out    dx,al
  425820:	sbb    DWORD PTR [ecx-0x1f164cc1],edx
  425826:	inc    eax
  425827:	xchg   esi,eax
  425828:	lock popf 
  42582a:	dec    edx
  42582b:	not    ebp
  42582d:	cdq    
  42582e:	cs pop ebp
  425830:	cmp    eax,0x3d39d7f9
  425835:	loop   0x425826
  425837:	dec    ebx
  425838:	adc    DWORD PTR [ebx],eax
  42583a:	test   BYTE PTR [edi-0x4f],ch
  42583d:	mul    DWORD PTR [esi-0x40]
  425840:	mov    ecx,0x5cb6eadc
  425845:	push   0x14281704
  42584a:	push   eax
  42584b:	xchg   edx,eax
  42584c:	cli    
  42584d:	hlt    
  42584e:	cmp    esi,DWORD PTR [eax+0x275f7916]
  425854:	rcl    DWORD PTR [ecx-0x21d71959],cl
  42585a:	out    0xe6,al
  42585c:	jmp    0x431c:0x6f534d1a
  425863:	aaa    
  425864:	or     ebp,DWORD PTR [ebp+0x23657142]
  42586a:	data16 jp 0x425871
  42586d:	fwait
  42586e:	cmp    DWORD PTR [esi-0x7b4ccd1b],0xedfd94b3
  425878:	lock sub BYTE PTR [ebx+edi*8-0x46],ch
  42587d:	stos   BYTE PTR es:[edi],al
  42587e:	jecxz  0x4258cb
  425880:	sub    DWORD PTR [edi-0x57],esi
  425883:	add    bl,BYTE PTR [edi]
  425885:	sbb    DWORD PTR [eax+eax*8-0x5f4b7177],0x5d
  42588d:	push   edi
  42588e:	or     ecx,eax
  425890:	push   esi
  425891:	pop    esi
  425892:	jb     0x42586f
  425894:	mov    WORD PTR [ebp-0x7631c0f7],ds
  42589a:	pop    ecx
  42589b:	mov    cl,0xe1
  42589d:	in     eax,dx
  42589e:	fcmovnbe st,st(5)
  4258a0:	inc    edx
  4258a1:	fsubr  QWORD PTR [ecx]
  4258a3:	pushf  
  4258a4:	jmp    0x425834
  4258a6:	xchg   esi,edi
  4258a8:	cmp    al,0xa2
  4258aa:	sbb    BYTE PTR [ecx+0x55a78f3f],dl
  4258b0:	push   edx
  4258b1:	hlt    
  4258b2:	inc    edi
  4258b3:	sub    ch,BYTE PTR [esi+0x49788ddb]
  4258b9:	lock adc ebx,DWORD PTR [eax]
  4258bc:	in     al,dx
  4258bd:	in     eax,dx
  4258be:	sub    BYTE PTR [esi-0x634abd6c],ch
  4258c4:	mov    esi,0x9c5c6115
  4258c9:	inc    eax
  4258ca:	mov    ebx,0x886fc7ac
  4258cf:	lods   eax,DWORD PTR ss:[esi]
  4258d1:	sbb    DWORD PTR [eax-0x38],edi
  4258d4:	fcomp  st(0)
  4258d6:	and    dl,0xf2
  4258d9:	das    
  4258da:	sahf   
  4258db:	jge    0x4258b5
  4258dd:	fcmovb st,st(5)
  4258df:	and    ebp,DWORD PTR [ebp-0x3b6b31b8]
  4258e5:	lock pop esi
  4258e7:	dec    eax
  4258e8:	mov    esp,0x4eed7131
  4258ed:	(bad)  
  4258ee:	jb     0x4258d7
  4258f0:	imul   BYTE PTR [ebp-0x80]
  4258f3:	mov    edi,0x7c6fc77
  4258f8:	pop    esp
  4258f9:	int3   
  4258fa:	scas   eax,DWORD PTR es:[edi]
  4258fb:	data16 in al,0x2c
  4258fe:	mov    ds,WORD PTR [esi]
  425900:	mov    eax,0x9f3f61f6
  425905:	pop    edi
  425906:	shl    DWORD PTR [ebp-0x4389d47b],cl
  42590c:	les    ebx,FWORD PTR [ebx]
  42590e:	(bad)  
  425910:	dec    ecx
  425911:	jge    0x4258ba
  425913:	test   al,0xd2
  425915:	fmulp  st(4),st
  425917:	mov    bh,0xae
  425919:	mov    ebp,0x28c352a0
  42591e:	xlat   BYTE PTR ds:[ebx]
  42591f:	stos   DWORD PTR es:[edi],eax
  425920:	sbb    al,0x88
  425922:	push   0xa2423ed5
  425927:	sahf   
  425928:	int    0x61
  42592a:	fstp   DWORD PTR [ebx]
  42592c:	shl    BYTE PTR ds:[ebp-0x53e59b95],0x7c
  425934:	bound  edi,QWORD PTR [ebx+edi*4]
  425937:	test   al,0x54
  425939:	ss xchg cl,bh
  42593c:	mov    edi,DWORD PTR [esi]
  42593e:	dec    eax
  42593f:	imul   esp,DWORD PTR [ebp+0x24],0xa0ef6a35
  425946:	rcr    edi,1
  425948:	mov    ebx,0x3843cf33
  42594d:	xlat   BYTE PTR ds:[ebx]
  42594e:	cmp    al,0xf0
  425950:	adc    eax,0x8dc29d08
  425955:	or     DWORD PTR [ecx],ecx
  425957:	jns    0x4259cd
  425959:	adc    edx,DWORD PTR [ecx]
  42595b:	jmp    0x5788:0x9ed130c
  425962:	push   0x1b5d7f6d
  425967:	add    BYTE PTR [esi+0x2a6b9135],dh
  42596d:	push   edx
  42596e:	popa   
  42596f:	sbb    ch,BYTE PTR [ecx+ebx*8]
  425972:	test   al,0x35
  425974:	not    DWORD PTR [ebp-0x2997b7e2]
  42597a:	test   DWORD PTR [edi],eax
  42597c:	outs   dx,BYTE PTR ds:[esi]
  42597d:	xchg   ebp,eax
  42597e:	mov    cl,0xca
  425980:	dec    ebx
  425981:	sbb    dh,BYTE PTR [eax]
  425983:	fsub   QWORD PTR [ebp+0x5d]
  425986:	xchg   edi,eax
  425987:	push   eax
  425988:	into   
  425989:	jmp    DWORD PTR [esi+0x13]
  42598c:	dec    ebx
  42598d:	jno    0x4259bd
  42598f:	inc    ebx
  425990:	sbb    BYTE PTR [ecx+0x13],dh
  425993:	jg     0x42595c
  425995:	sub    al,0xcf
  425998:	popa   
  425999:	cmp    eax,0x4a9fa436
  42599e:	shrd   DWORD PTR [ecx+eiz*8+0x2b],ebx,0xa8
  4259a4:	jb     0x425a13
  4259a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259a7:	retf   
  4259a8:	adc    ecx,DWORD PTR [edi+edx*1+0x1f762e02]
  4259af:	cmp    eax,0xf0b034fe
  4259b4:	ss adc edi,esi
  4259b7:	mov    ds:0x8d92f3f1,al
  4259bc:	fidivr WORD PTR [edi-0x35cb20d7]
  4259c2:	int    0x4
  4259c4:	xor    eax,0xb0fefab0
  4259c9:	stos   BYTE PTR es:[edi],al
  4259ca:	mov    ebp,DWORD PTR [esi-0x293f543e]
  4259d0:	les    eax,FWORD PTR [esi+0xb]
  4259d3:	pop    esi
  4259d4:	jne    0x42595d
  4259d6:	xchg   bh,dh
  4259d8:	shl    BYTE PTR [ebx],0xd
  4259db:	mov    ebx,0x53975788
  4259e0:	jns    0x425a29
  4259e2:	ins    DWORD PTR es:[edi],dx
  4259e3:	mov    eax,ds:0x6d6abac4
  4259e8:	sti    
  4259e9:	jl     0x4259f6
  4259eb:	mov    DWORD PTR [ecx+0x502eb9c4],edi
  4259f1:	cmc    
  4259f2:	dec    eax
  4259f3:	add    eax,0x6b90193f
  4259f8:	call   0x5608117f
  4259fd:	aad    0x1f
  4259ff:	push   0xffffffaa
  425a01:	in     al,dx
  425a02:	aas    
  425a03:	(bad)  
  425a04:	and    al,BYTE PTR [esp+ecx*2-0x50524956]
  425a0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a0c:	fstp   TBYTE PTR [ebp+0x1f]
  425a0f:	arpl   di,sp
  425a11:	add    BYTE PTR [edx-0x8],0x38
  425a15:	sub    BYTE PTR [ebx-0x36],al
  425a18:	cmp    eax,0x1d3fc5db
  425a1d:	inc    ebx
  425a1e:	dec    ebp
  425a1f:	addr16 and esi,ecx
  425a22:	pushf  
  425a23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a24:	mov    ebx,0x577bb6a9
  425a29:	mov    al,0x90
  425a2b:	adc    DWORD PTR [edx+0x13],edi
  425a2e:	lods   eax,DWORD PTR ds:[esi]
  425a2f:	add    dh,BYTE PTR [edx+0x1bcd9925]
  425a35:	dec    edx
  425a36:	add    BYTE PTR [ebx],bh
  425a38:	das    
  425a39:	sbb    esp,esi
  425a3b:	add    ecx,ecx
  425a3d:	xor    dl,0x4d
  425a40:	test   BYTE PTR [ecx+0x369e9457],bl
  425a46:	test   DWORD PTR [ebp+0x7f4eceaa],ebx
  425a4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a4d:	and    eax,0x7d73b17f
  425a52:	sub    al,BYTE PTR [ebx+eiz*2]
  425a55:	cmp    al,0x83
  425a57:	jbe    0x425a24
  425a59:	daa    
  425a5a:	sbb    eax,edx
  425a5c:	mov    bh,BYTE PTR [edi]
  425a5e:	sub    al,0xb1
  425a60:	pop    es
  425a61:	sbb    bl,BYTE PTR [ebx+0x6b]
  425a64:	dec    ecx
  425a65:	pop    es
  425a66:	push   cs
  425a67:	add    eax,0x5589f182
  425a6c:	jge    0x425a5d
  425a6e:	ins    DWORD PTR es:[edi],dx
  425a6f:	popa   
  425a70:	xchg   esp,eax
  425a71:	rcl    BYTE PTR [ebp+0x4a6e2890],0x22
  425a78:	ins    DWORD PTR es:[edi],dx
  425a79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a7a:	xor    eax,0xdbdfaf53
  425a7f:	xor    ch,BYTE PTR [ebx]
  425a81:	dec    ecx
  425a82:	lahf   
  425a83:	push   edi
  425a84:	and    BYTE PTR [ecx+0x1e],0xe1
  425a88:	nop
  425a89:	cmp    DWORD PTR [esi-0x776777e2],0x185a395
  425a93:	push   ecx
  425a94:	xlat   BYTE PTR ds:[ebx]
  425a95:	rcl    BYTE PTR [esi-0x69],1
  425a98:	and    eax,0x8d00d648
  425a9d:	rol    BYTE PTR [edi],0x37
  425aa0:	dec    edi
  425aa1:	idiv   DWORD PTR [ebp+0x532a00fa]
  425aa7:	fld    QWORD PTR [edi]
  425aa9:	ror    ebx,0x21
  425aac:	mov    bl,0xd3
  425aae:	add    DWORD PTR [eax],eax
  425ab0:	xchg   DWORD PTR [edx],eax
  425ab2:	add    BYTE PTR [eax],al
  425ab4:	pop    esi
  425ab5:	inc    esp
  425ab6:	mov    WORD PTR [eax],?
  425ab8:	ror    BYTE PTR [esi],cl
  425aba:	cwde   
  425abb:	dec    eax
  425abc:	arpl   WORD PTR [ebx],si
  425abe:	pusha  
  425abf:	je     0x425aff
  425ac1:	mov    al,0x3b
  425ac3:	div    DWORD PTR [ecx+0x27]
  425ac6:	div    edx
  425ac8:	(bad)  
  425ac9:	int    0x3c
  425acb:	out    0x8,al
  425acd:	push   esi
  425ace:	jbe    0x425aba
  425ad0:	cmp    BYTE PTR [edx+0xa],ch
  425ad3:	lea    ecx,[eax]
  425ad5:	popa   
  425ad6:	add    BYTE PTR [eax-0x5f56856b],cl
  425adc:	daa    
  425add:	jmp    0x425a8b
  425adf:	sar    BYTE PTR [ebp+esi*2-0x1],1
  425ae3:	js     0x425b2f
  425ae5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ae6:	enter  0x7b9,0xff
  425aea:	pop    ebp
  425aeb:	mov    DWORD PTR [edx-0x57],ebp
  425aee:	push   es
  425aef:	repnz (bad) 
  425af1:	iret   
  425af2:	ret    
  425af3:	jno    0x425b73
  425af5:	push   0xffffff91
  425af7:	aas    
  425af8:	rcr    ch,1
  425afa:	pop    es
  425afb:	imul   esp,edi,0x85c3a076
  425b01:	or     esi,0xfffffffd
  425b04:	out    dx,al
  425b05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b06:	pop    esi
  425b07:	outs   dx,BYTE PTR ds:[esi]
  425b08:	inc    esp
  425b09:	inc    edi
  425b0a:	pushf  
  425b0b:	out    0xba,al
  425b0d:	icebp  
  425b0e:	int3   
  425b0f:	pop    edi
  425b10:	int3   
  425b11:	daa    
  425b12:	ins    DWORD PTR es:[edi],dx
  425b13:	adc    BYTE PTR [edx-0x5],0x68
  425b17:	inc    eax
  425b18:	mul    BYTE PTR [ecx]
  425b1a:	xchg   edx,eax
  425b1b:	hlt    
  425b1c:	std    
  425b1d:	sbb    dl,ah
  425b1f:	dec    edx
  425b20:	pop    eax
  425b21:	dec    bh
  425b23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b24:	jp     0x425b54
  425b26:	mov    ecx,0x9c6794d7
  425b2b:	jmp    0x425b23
  425b2d:	push   ecx
  425b2e:	xchg   ax,ax
  425b30:	inc    edx
  425b31:	sub    DWORD PTR [edi-0x8],edi
  425b34:	jae    0x425b13
  425b36:	push   ss
  425b37:	jg     0x425b8a
  425b39:	jno    0x425ba9
  425b3b:	(bad)  
  425b3c:	test   eax,0x24a20546
  425b41:	mov    ds:0x94e09502,al
  425b46:	retf   
  425b47:	sbb    DWORD PTR [ecx+0x7888dc12],esi
  425b4d:	dec    ecx
  425b4e:	outs   dx,DWORD PTR ds:[esi]
  425b4f:	and    al,BYTE PTR [ecx-0x4c7f85a8]
  425b55:	test   BYTE PTR ds:0x1436d8c8,ah
  425b5b:	cld    
  425b5c:	xchg   ebp,eax
  425b5d:	push   ds
  425b5e:	inc    ebp
  425b5f:	xchg   ebp,eax
  425b60:	or     eax,0xc975f1a6
  425b65:	test   BYTE PTR [esi+0x8],dl
  425b68:	mov    ebp,0x6891c21e
  425b6d:	loopne 0x425b4f
  425b6f:	mov    ebp,0x189735e2
  425b74:	fisubr DWORD PTR [ebx+0x4e]
  425b77:	cmp    eax,0x59a613d4
  425b7c:	adc    eax,0xed9a1500
  425b81:	dec    esi
  425b82:	lds    esp,FWORD PTR [edx+edi*8]
  425b85:	add    BYTE PTR ds:0xd63e895,dl
  425b8b:	or     eax,DWORD PTR [edi]
  425b8d:	or     esi,0x4ecf59c2
  425b93:	sbb    ebx,DWORD PTR [edx+0x5d92ecc]
  425b99:	mov    esi,0xc962b342
  425b9e:	pop    esp
  425b9f:	cdq    
  425ba0:	cmp    eax,DWORD PTR [edi-0x40]
  425ba3:	jge    0x425b78
  425ba5:	cs jmp 0xfaac7dd9
  425bab:	rcl    BYTE PTR [ebx-0x1d7a9e67],cl
  425bb1:	sub    eax,0x88eb7375
  425bb6:	(bad)  
  425bb7:	clc    
  425bb8:	std    
  425bb9:	sbb    ebp,DWORD PTR [esi+eiz*2]
  425bbc:	in     al,0xdc
  425bbe:	int3   
  425bbf:	inc    edi
  425bc0:	jae    0x425b80
  425bc2:	gs push cs
  425bc4:	ds lock ret 
  425bc7:	cmc    
  425bc8:	(bad)  
  425bc9:	out    0x5e,eax
  425bcb:	loope  0x425bf3
  425bcd:	stos   DWORD PTR es:[edi],eax
  425bce:	dec    eax
  425bcf:	jle    0x425bd6
  425bd1:	mov    WORD PTR [edi],fs
  425bd3:	ja     0x425b93
  425bd5:	in     eax,0x5c
  425bd7:	sub    al,0x6f
  425bd9:	mov    edx,0x65f01a3e
  425bde:	xchg   esi,eax
  425bdf:	hlt    
  425be0:	ins    DWORD PTR es:[edi],dx
  425be1:	fmul   QWORD PTR [edx+0x199f625c]
  425be7:	or     cl,BYTE PTR [ecx]
  425be9:	sub    esi,DWORD PTR [esp+edx*4-0x79687bc1]
  425bf0:	sbb    eax,0xa265034b
  425bf5:	pop    ds
  425bf6:	cmp    al,0x1a
  425bf8:	sub    ah,BYTE PTR [edi]
  425bfa:	sub    ebx,DWORD PTR [ebp-0xd]
  425bfd:	adc    al,bl
  425bff:	outs   dx,BYTE PTR ds:[esi]
  425c00:	std    
  425c01:	adc    BYTE PTR [ebp+0x6b],bl
  425c04:	out    dx,eax
  425c05:	xor    al,0xc7
  425c07:	mov    esi,0xc6ed30d8
  425c0c:	mov    dl,BYTE PTR [edx+0x422e2ca0]
  425c12:	sar    BYTE PTR [ebx+eax*1+0x3e],1
  425c16:	pop    ebp
  425c17:	cmp    BYTE PTR [eax+0x57858cd5],bh
  425c1d:	mul    BYTE PTR [ecx-0x7d]
  425c20:	inc    edx
  425c21:	fisub  DWORD PTR [ebp+0x5444f27f]
  425c27:	inc    ebx
  425c28:	sub    edi,DWORD PTR [ebp+0x4a4cc5aa]
  425c2e:	push   cs
  425c2f:	jb     0x425bdd
  425c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c32:	pop    es
  425c33:	retf   0x7add
  425c36:	ins    BYTE PTR es:[edi],dx
  425c37:	pop    ecx
  425c38:	(bad)  
  425c39:	les    ebx,FWORD PTR [ecx+0x4]
  425c3c:	(bad)  
  425c3d:	jecxz  0x425ca0
  425c3f:	out    dx,eax
  425c40:	mov    ds:0x41eb498d,eax
  425c45:	enter  0x8524,0xf1
  425c49:	pop    es
  425c4a:	mov    ebp,0xec08d358
  425c4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c50:	or     eax,0xd8ce9de5
  425c55:	dec    ebx
  425c56:	dec    esp
  425c57:	push   cs
  425c58:	pop    esi
  425c59:	mov    cl,0x7
  425c5b:	pop    edi
  425c5c:	cdq    
  425c5d:	ins    BYTE PTR es:[edi],dx
  425c5e:	loope  0x425be1
  425c60:	icebp  
  425c61:	jnp    0x425c88
  425c63:	outs   dx,DWORD PTR ds:[esi]
  425c64:	or     esp,DWORD PTR [eax-0x52915884]
  425c6a:	test   BYTE PTR [esi+ebx*2+0x69a2ee3f],bl
  425c71:	rcr    DWORD PTR [ecx],0xa2
  425c74:	stos   BYTE PTR es:[edi],al
  425c75:	in     al,0xd9
  425c77:	cdq    
  425c78:	mov    esi,0x6d795f0c
  425c7d:	inc    esp
  425c7e:	gs push 0xffffff81
  425c81:	sbb    esi,DWORD PTR es:[esi+0x14]
  425c85:	div    BYTE PTR [edx+0x21]
  425c88:	adc    bh,BYTE PTR [ecx]
  425c8a:	icebp  
  425c8b:	sbb    al,0x8b
  425c8d:	dec    ebp
  425c8e:	out    dx,al
  425c8f:	sbb    BYTE PTR [eax+eiz*1+0x52],ch
  425c93:	dec    esi
  425c94:	bound  eax,QWORD PTR [ebp-0x6d]
  425c97:	fisttp QWORD PTR [esi-0x59]
  425c9a:	mov    bl,0x7
  425c9c:	pop    ebx
  425c9d:	cld    
  425c9e:	push   ss
  425c9f:	lds    ebx,FWORD PTR [ebx+0x61]
  425ca2:	dec    esi
  425ca3:	dec    edx
  425ca4:	gs add dl,dl
  425ca7:	rcr    DWORD PTR [ebx+0x35],cl
  425caa:	stos   BYTE PTR es:[edi],al
  425cab:	push   edx
  425cac:	xchg   esp,eax
  425cad:	iret   
  425cae:	rep stos BYTE PTR es:[edi],al
  425cb0:	iret   
  425cb1:	cli    
  425cb2:	retf   0x3faf
  425cb5:	jne    0x425d12
  425cb7:	std    
  425cb8:	mov    ebx,0x3416e918
  425cbd:	sub    BYTE PTR [edx-0x1c],cl
  425cc0:	and    eax,0xcbbd3683
  425cc5:	mov    eax,ds:0xecd02839
  425cca:	lds    esp,FWORD PTR [ebx]
  425ccc:	jbe    0x425d35
  425cce:	jmp    0x9e359734
  425cd3:	dec    edx
  425cd4:	xor    ebp,DWORD PTR [edx+0x12c5d220]
  425cda:	inc    esi
  425cdb:	pop    edx
  425cdc:	jmp    0x6cf0:0x3925192e
  425ce3:	xchg   esi,eax
  425ce4:	inc    ecx
  425ce5:	and    al,0x18
  425ce7:	mul    DWORD PTR [ebx-0x5a]
  425cea:	cmp    eax,0xb9bd1670
  425cef:	cdq    
  425cf0:	js     0x425ca0
  425cf2:	adc    al,0x8a
  425cf4:	es sti 
  425cf6:	repz out dx,eax
  425cf8:	(bad)  
  425cfa:	repnz mov eax,ds:0xa66c8a4e
  425d00:	push   ebx
  425d01:	jns    0x425c9c
  425d03:	pop    esi
  425d04:	jno    0x425d21
  425d06:	shr    DWORD PTR [edi-0x25abb622],cl
  425d0c:	sub    bl,bh
  425d0e:	jno    0x425cf1
  425d10:	add    dh,BYTE PTR [esi]
  425d12:	jmp    0x87b4e1c7
  425d17:	pop    ebx
  425d18:	ss sbb ecx,ebp
  425d1b:	iret   
  425d1c:	pop    esp
  425d1d:	pop    edi
  425d1e:	fs dec ebp
  425d20:	ins    DWORD PTR es:[edi],dx
  425d21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d22:	dec    edi
  425d23:	xchg   esp,eax
  425d24:	ret    
  425d25:	mov    ds:0x8ffef2cb,al
  425d2a:	and    BYTE PTR ds:0x88e248c4,dl
  425d30:	(bad)  
  425d31:	sub    BYTE PTR [ebx],al
  425d33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d34:	hlt    
  425d35:	popf   
  425d36:	popa   
  425d37:	stos   DWORD PTR es:[edi],eax
  425d38:	mov    esi,0xb00055ec
  425d3d:	mov    ch,al
  425d3f:	cmp    edx,0x62bbf9e3
  425d45:	and    BYTE PTR [ecx+ebx*4],ah
  425d48:	das    
  425d49:	pushf  
  425d4a:	arpl   WORD PTR [edi+0x3a],cx
  425d4d:	(bad)  
  425d4e:	add    DWORD PTR [eax],eax
  425d50:	xchg   DWORD PTR [edx],eax
  425d52:	add    BYTE PTR [eax],al
  425d54:	imul   ebp,DWORD PTR [ebx-0x59],0xffffffd1
  425d58:	daa    
  425d59:	mov    dh,0x4
  425d5b:	push   edi
  425d5c:	test   edx,ebp
  425d5e:	and    bh,ch
  425d60:	(bad)  
  425d61:	in     al,dx
  425d62:	xchg   ecx,eax
  425d63:	int3   
  425d64:	mov    bh,0x31
  425d66:	(bad)  
  425d67:	lahf   
  425d68:	rol    DWORD PTR [edi+0x6b9cdfb6],0x29
  425d6f:	mov    cl,0x66
  425d71:	pop    es
  425d72:	ja     0x425df3
  425d74:	cmp    al,BYTE PTR [ecx]
  425d76:	pusha  
  425d77:	add    DWORD PTR ds:0xf8f1d4a1,eax
  425d7d:	mov    edx,0x4440b6cc
  425d82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d83:	sahf   
  425d84:	(bad)  
  425d85:	sti    
  425d86:	sbb    esp,DWORD PTR [esi+0x5098e411]
  425d8c:	xor    edi,DWORD PTR [edx]
  425d8e:	call   0x415e:0xaaaa0c85
  425d95:	mov    fs,WORD PTR [ebx-0x4b251f6d]
  425d9b:	in     eax,dx
  425d9c:	push   esi
  425d9d:	loope  0x425dbd
  425d9f:	icebp  
  425da0:	cmp    dl,BYTE PTR [eax+0x6d48b9a3]
  425da6:	add    eax,0xe5edfb68
  425dab:	gs out 0x31,al
  425dae:	mov    eax,0x6296ec9c
  425db3:	clc    
  425db4:	std    
  425db5:	loope  0x425d48
  425db7:	out    0x1d,eax
  425db9:	xor    al,0x26
  425dbb:	aaa    
  425dbc:	call   0x17d7:0x96e80284
  425dc3:	inc    eax
  425dc4:	and    DWORD PTR [edx-0x17],edi
  425dc7:	shl    DWORD PTR ds:0x70d01fb3,0xaf
  425dce:	das    
  425dcf:	in     al,0x1
  425dd1:	cmp    BYTE PTR [ecx],ah
  425dd3:	imul   ecx,DWORD PTR [ebx+0x255598fc],0xfffffff2
  425dda:	mov    eax,0xf7ae5028
  425ddf:	out    dx,al
  425de0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425de1:	pop    esp
  425de2:	xchg   edx,eax
  425de3:	cmp    eax,0xbabf497c
  425de8:	jl     0x425e20
  425dea:	pop    edi
  425deb:	add    eax,0x4f793b99
  425df0:	dec    edx
  425df1:	lahf   
  425df2:	mov    edx,0x32b4beef
  425df7:	pop    esp
  425df8:	retf   0x1423
  425dfb:	lss    ebx,FWORD PTR [edi]
  425dfe:	dec    ecx
  425dff:	ret    
  425e00:	mov    edi,0x9a9aa86d
  425e05:	sbb    eax,0xcc69a6cc
  425e0a:	bound  ebp,QWORD PTR [edx]
  425e0c:	jno    0x425df0
  425e0e:	lods   eax,DWORD PTR ds:[esi]
  425e0f:	mov    fs,esi
  425e11:	call   0xf610:0xad418a54
  425e18:	jae    0x425e4f
  425e1a:	fs pusha 
  425e1c:	pop    eax
  425e1d:	fstp   TBYTE PTR [edx]
  425e1f:	mov    eax,DWORD PTR [eax]
  425e21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e22:	and    ecx,DWORD PTR [ecx+0x56]
  425e25:	fwait
  425e26:	xchg   ecx,eax
  425e27:	and    ebx,DWORD PTR [ecx]
  425e29:	sti    
  425e2a:	push   ss
  425e2b:	int    0x72
  425e2d:	mov    dh,0xd6
  425e2f:	and    eax,edi
  425e31:	adc    BYTE PTR [ecx],al
  425e33:	das    
  425e34:	test   esp,edi
  425e36:	sub    bl,BYTE PTR [ebx+0x5c3e595e]
  425e3c:	mov    eax,ds:0x181a11a7
  425e41:	cdq    
  425e42:	mov    eax,0xba17b358
  425e47:	shr    DWORD PTR [edx+0x61],0x31
  425e4b:	mov    esp,?
  425e4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e4e:	sbb    eax,0x49d79523
  425e53:	ds dec esp
  425e55:	push   esi
  425e56:	retf   0xb893
  425e59:	mov    ch,0x16
  425e5b:	push   ebx
  425e5c:	cmp    eax,0x4f2e28b0
  425e61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e62:	scas   al,BYTE PTR es:[edi]
  425e63:	call   0xe96:0x42d94612
  425e6a:	xchg   DWORD PTR [edx+ebx*8-0x6a],ebp
  425e6e:	cwde   
  425e6f:	lods   al,BYTE PTR ds:[esi]
  425e70:	(bad)  
  425e71:	add    esp,ebx
  425e73:	sbb    al,0xb2
  425e75:	shr    BYTE PTR [ebp-0x1e37cf05],cl
  425e7b:	push   ebx
  425e7c:	xchg   ebx,eax
  425e7d:	mov    fs:0xd304dbd2,al
  425e83:	pop    esi
  425e84:	jg     0x425e57
  425e86:	xchg   edi,eax
  425e87:	jae    0x425e62
  425e89:	imul   edi,DWORD PTR es:[ebx],0xf810a67f
  425e90:	sar    BYTE PTR [esi+0x77318f6f],cl
  425e96:	jecxz  0x425ee1
  425e98:	ret    0x48cb
  425e9b:	mov    ah,0x6a
  425e9d:	fcmove st,st(5)
  425e9f:	das    
  425ea0:	test   DWORD PTR [edx-0x9],edx
  425ea3:	into   
  425ea4:	sub    BYTE PTR [edx+ebp*2],0xa6
  425ea8:	fwait
  425ea9:	adc    edi,0x64
  425eac:	mov    al,ds:0xde11c493
  425eb1:	cmc    
  425eb2:	(bad)  
  425eb3:	cwde   
  425eb4:	jae    0x425ed8
  425eb6:	pop    edx
  425eb7:	sub    eax,0xd633aa6c
  425ebc:	fs and al,0x74
  425ebf:	and    al,0xd1
  425ec1:	neg    DWORD PTR [ebp+edx*8+0x8]
  425ec5:	mov    ds:0xbd76a969,al
  425eca:	mov    fs,WORD PTR [edi-0x343f9cee]
  425ed0:	pop    ecx
  425ed1:	inc    edx
  425ed2:	adc    edi,ecx
  425ed4:	sub    DWORD PTR [esi+0x74239893],ebp
  425eda:	retf   0x594
  425edd:	(bad)  
  425edf:	sbb    eax,0xa142bb6b
  425ee4:	test   al,0x2d
  425ee6:	rol    DWORD PTR [ebx-0x2cfb0c0d],cl
  425eec:	mov    cl,0xa3
  425eee:	adc    edx,DWORD PTR [eax+0x67]
  425ef1:	sub    ecx,DWORD PTR [ecx+0xc]
  425ef4:	mov    al,0xab
  425ef6:	jnp    0x425eff
  425ef8:	imul   esi,DWORD PTR [edi+0x92f1869],0xffffffed
  425eff:	jecxz  0x425f2f
  425f01:	jecxz  0x425eca
  425f03:	fwait
  425f04:	and    eax,0x64d052e2
  425f09:	mov    ebp,0xdfbbd7b9
  425f0e:	idiv   DWORD PTR [ecx-0x42]
  425f11:	cwde   
  425f12:	add    ebx,DWORD PTR [eax+0x3dcd291c]
  425f18:	add    BYTE PTR [edi],bh
  425f1a:	jp     0x425f41
  425f1c:	push   0xffffff83
  425f1e:	dec    esp
  425f1f:	out    dx,eax
  425f20:	xlat   BYTE PTR ds:[ebx]
  425f21:	out    dx,eax
  425f22:	add    BYTE PTR [esi+0x7b3c467b],dh
  425f28:	pusha  
  425f29:	add    cl,bh
  425f2b:	(bad)  
  425f2d:	pop    ebx
  425f2e:	cs loopne 0x425f61
  425f31:	mov    al,0x75
  425f33:	nop
  425f34:	dec    ecx
  425f35:	push   eax
  425f36:	or     esi,esp
  425f38:	popa   
  425f39:	sbb    eax,0x1e8291ba
  425f3e:	cmp    eax,0x2f9ab88c
  425f43:	loopne 0x425f70
  425f45:	or     eax,0x9637b962
  425f4a:	addr16 dec ecx
  425f4c:	push   ecx
  425f4d:	sti    
  425f4e:	loop   0x425f9c
  425f50:	clc    
  425f51:	rcr    DWORD PTR [edx+0x6ef46380],1
  425f57:	push   ds
  425f58:	adc    dh,BYTE PTR [edi+ebx*8-0x5e]
  425f5c:	in     eax,dx
  425f5d:	adc    eax,ecx
  425f5f:	outs   dx,BYTE PTR ds:[esi]
  425f60:	push   cs
  425f61:	sbb    eax,0xb16a9097
  425f66:	and    dh,0x66
  425f69:	push   cs
  425f6a:	and    bh,BYTE PTR [edi]
  425f6c:	daa    
  425f6d:	pop    esi
  425f6e:	pop    esp
  425f6f:	in     al,dx
  425f70:	xor    DWORD PTR [eax-0x3c6ec30],edi
  425f76:	sbb    BYTE PTR [eax],al
  425f78:	stos   DWORD PTR es:[edi],eax
  425f79:	dec    ebx
  425f7a:	mov    ebp,0x50f8c063
  425f7f:	hlt    
  425f80:	xchg   ebx,eax
  425f81:	popa   
  425f82:	or     BYTE PTR [ebx],ch
  425f84:	adc    al,0xb6
  425f86:	jl     0x425f3d
  425f88:	(bad)  
  425f89:	cmp    BYTE PTR [ebp-0x7326062a],bh
  425f8f:	or     dh,BYTE PTR [edi]
  425f91:	or     ecx,DWORD PTR [esp+ebx*4+0x2c]
  425f95:	shl    bh,cl
  425f97:	adc    BYTE PTR [ecx+0x38],ah
  425f9a:	xchg   ebx,eax
  425f9b:	leave  
  425f9c:	into   
  425f9d:	mov    ch,0x7
  425f9f:	es pop edi
  425fa1:	xchg   ebx,eax
  425fa2:	or     eax,esi
  425fa4:	pop    ss
  425fa5:	in     eax,0xee
  425fa7:	and    al,0x58
  425fa9:	aam    0x34
  425fab:	cdq    
  425fac:	in     al,0xec
  425fae:	and    DWORD PTR [edx],esi
  425fb0:	xchg   esp,eax
  425fb1:	dec    ebp
  425fb2:	rcr    cl,0x1d
  425fb5:	cmc    
  425fb6:	js     0x42602d
  425fb8:	fild   QWORD PTR [ebx-0x6b9154b5]
  425fbe:	leave  
  425fbf:	mov    eax,0xb40c22db
  425fc4:	jo     0x425f54
  425fc6:	retf   0xaeb
  425fc9:	(bad)
  425fcc:	xlat   BYTE PTR ds:[ebx]
  425fcd:	in     al,dx
  425fce:	mov    esi,0xf321af45
  425fd3:	pop    es
  425fd4:	std    
  425fd5:	dec    esp
  425fd6:	inc    edi
  425fd7:	mov    ebp,0x4052a5
  425fdc:	mov    cl,BYTE PTR [esp+eax*8-0x61253926]
  425fe3:	fsubr  st(7),st
  425fe5:	sub    DWORD PTR [ecx],0xffffff8c
  425fe8:	mov    edi,0xc1cea211
  425fed:	fadd   DWORD PTR [ecx]
  425fef:	add    BYTE PTR [edi-0x4afffffe],al
  425ff5:	mov    ch,0xd4
  425ff7:	fdivr  st(0),st
  425ff9:	rol    DWORD PTR [ecx],cl
  425ffb:	rcl    DWORD PTR [ebp+0x9],0x5a
  425fff:	aad    0x57
  426001:	sbb    dh,dh
  426003:	jle    0x42606b
  426005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426006:	pop    ebx
  426007:	and    DWORD PTR [ecx+0x14982b8d],edx
  42600d:	push   edi
  42600e:	sub    ah,ch
  426010:	cld    
  426011:	retf   
  426012:	mov    ds:0xbbff1297,al
  426017:	push   ebp
  426018:	push   cs
  426019:	push   esp
  42601a:	stc    
  42601b:	sbb    DWORD PTR [edx-0x6],0x8ab73d45
  426022:	mov    al,ds:0x4ae35f08
  426027:	adc    DWORD PTR [ebx+0x175c8624],ebp
  42602d:	mov    ebx,edi
  42602f:	push   ebx
  426030:	jae    0x425fb3
  426032:	add    eax,0x5966f6d8
  426037:	ret    
  426038:	mov    ds:0x37e8f927,eax
  42603d:	mov    ah,0x6a
  42603f:	inc    ecx
  426040:	jbe    0x426087
  426042:	fist   DWORD PTR [eax+0x65acd6b3]
  426048:	dec    ebx
  426049:	add    BYTE PTR [ecx-0x3e1bbd0],dh
  42604f:	in     al,0x39
  426051:	rol    BYTE PTR [ebx+eiz*1+0x841f2a2],0x38
  426059:	outs   dx,BYTE PTR ds:[esi]
  42605a:	inc    ecx
  42605b:	adc    ebx,esp
  42605d:	fld    TBYTE PTR [eax-0x1cb29153]
  426063:	push   edi
  426064:	adc    eax,0xb255df36
  426069:	xlat   BYTE PTR ds:[ebx]
  42606a:	adc    DWORD PTR [edi+0x50],0xffffffc0
  42606e:	repnz xor ch,ah
  426071:	mov    si,0xd7e0
  426075:	call   0x17c27e6c
  42607a:	and    ecx,esi
  42607c:	dec    edi
  42607d:	in     eax,0x16
  42607f:	out    0x4a,eax
  426081:	test   eax,0xe55ab26d
  426086:	das    
  426087:	mov    ecx,0x48fb6d70
  42608c:	into   
  42608d:	aas    
  42608e:	inc    edx
  42608f:	xchg   ebx,eax
  426090:	jns    0x42606e
  426092:	aad    0x49
  426094:	and    al,0x37
  426096:	pop    ebx
  426097:	dec    eax
  426098:	add    al,0x33
  42609a:	inc    ecx
  42609b:	fcomp  DWORD PTR [ebx-0x2e]
  42609e:	nop    edi
  4260a1:	push   ebx
  4260a2:	test   eax,0x4e23671
  4260a7:	rcl    ebx,0x93
  4260aa:	cmp    eax,eax
  4260ac:	mov    bl,0x14
  4260ae:	mov    BYTE PTR [ebp+esi*1-0x3d2f5c87],bl
  4260b5:	rcl    DWORD PTR [edi+0x1d],cl
  4260b8:	outs   dx,BYTE PTR ds:[esi]
  4260b9:	es pop es
  4260bb:	(bad)  
  4260bc:	mov    esp,0x3c9e189
  4260c1:	stos   BYTE PTR es:[edi],al
  4260c2:	jbe    0x426066
  4260c4:	and    eax,DWORD PTR [eax]
  4260c6:	adc    eax,DWORD PTR [esi+0x3604d99d]
  4260cc:	inc    eax
  4260cd:	test   eax,0x34ac8964
  4260d2:	fsubr  DWORD PTR ds:0xa2d91b99
  4260d8:	sbb    DWORD PTR [ebx+0x37],esp
  4260db:	inc    esp
  4260dc:	and    ch,BYTE PTR [edx]
  4260de:	fcomp  DWORD PTR [ecx+0x6213b374]
  4260e4:	mov    ds:0xa11fca17,al
  4260e9:	ins    BYTE PTR es:[edi],dx
  4260ea:	das    
  4260eb:	out    0xb8,al
  4260ed:	pop    esp
  4260ee:	retf   
  4260ef:	pop    ecx
  4260f0:	push   ecx
  4260f1:	pop    esi
  4260f2:	out    0x9,al
  4260f4:	mov    al,0x75
  4260f6:	mov    fs,WORD PTR [edi+ecx*2]
  4260f9:	mov    edi,0x117b9e3f
  4260fe:	outs   dx,DWORD PTR ds:[esi]
  4260ff:	aas    
  426100:	sbb    esp,DWORD PTR [ecx]
  426102:	push   edx
  426103:	cmp    al,0x30
  426105:	add    dh,ah
  426107:	popf   
  426108:	int3   
  426109:	hlt    
  42610a:	add    al,ch
  42610c:	inc    esi
  42610d:	push   es
  42610e:	not    BYTE PTR [ebx-0x75]
  426111:	psubb  mm0,mm2
  426114:	mov    esi,0xda549504
  426119:	mov    dh,0xb7
  42611b:	icebp  
  42611c:	mov    dh,0x6c
  42611e:	pop    ecx
  42611f:	cmp    dl,BYTE PTR [eax]
  426121:	jns    0x4260f2
  426123:	mov    esi,0x87bb2710
  426128:	pusha  
  426129:	inc    ecx
  42612a:	imul   bx,si,0xa3d1
  42612f:	mov    bh,0x6d
  426131:	cs lock test eax,0xe95790fd
  426138:	xor    al,0x8b
  42613a:	jno    0x426131
  42613c:	popf   
  42613d:	or     eax,DWORD PTR ds:0xab7c23c6
  426143:	pusha  
  426144:	idiv   BYTE PTR [esi-0x1e423565]
  42614a:	add    ah,ah
  42614c:	xlat   BYTE PTR ds:[ebx]
  42614d:	pop    ss
  42614e:	push   edx
  42614f:	sbb    ebp,DWORD PTR [edx-0x67]
  426152:	cmc    
  426153:	movzx  ecx,WORD PTR [ecx+0x14]
  426157:	mov    esi,0x434f2ec5
  42615c:	sbb    esi,DWORD PTR [ebp+0x4a]
  42615f:	loope  0x426181
  426161:	inc    ebx
  426162:	iret   
  426163:	je     0x42610c
  426165:	iret   
  426166:	jmp    0xf5abbacd
  42616b:	cmc    
  42616c:	cmp    dh,BYTE PTR [ebx]
  42616e:	push   0xd9f6ccd3
  426173:	lods   eax,DWORD PTR ds:[esi]
  426174:	xor    al,0x88
  426176:	xrelease mov BYTE PTR ds:0xc1dad2dc,bl
  42617d:	cli    
  42617e:	mov    ah,BYTE PTR [ebx-0x11]
  426181:	test   DWORD PTR [edi-0x4d],edx
  426184:	add    BYTE PTR [ecx-0x5b179155],ah
  42618a:	xchg   DWORD PTR [ebx+0x564aaf87],esp
  426190:	and    eax,0x606fe9db
  426195:	mov    es:0x54b39120,eax
  42619b:	push   edi
  42619c:	push   0x1162d029
  4261a1:	pusha  
  4261a2:	jge    0x4261fe
  4261a4:	aaa    
  4261a5:	les    edi,FWORD PTR [eax+ecx*4-0x4c]
  4261a9:	push   es
  4261aa:	dec    ebx
  4261ab:	je     0x426200
  4261ad:	js     0x42620d
  4261af:	and    BYTE PTR [ebx],cl
  4261b1:	iret   
  4261b2:	mov    eax,0xe78a1a41
  4261b7:	dec    eax
  4261b8:	shr    DWORD PTR [ebx],1
  4261ba:	add    al,0xb4
  4261bc:	inc    ecx
  4261bd:	ficom  DWORD PTR fs:[eax+0x7c]
  4261c1:	mov    esp,0x7f700dd3
  4261c6:	dec    ebx
  4261c7:	pop    es
  4261c8:	or     al,0xb4
  4261ca:	mov    esi,0x58ab4ae2
  4261cf:	or     al,0xb3
  4261d1:	mov    edx,0xa2d2a6
  4261d6:	xor    al,BYTE PTR [ebx-0x1]
  4261d9:	xor    al,0x36
  4261db:	aas    
  4261dc:	jb     0x42617b
  4261de:	pop    esp
  4261df:	cdq    
  4261e0:	(bad)  
  4261e1:	gs addr16 xchg edx,eax
  4261e4:	inc    esi
  4261e5:	dec    esi
  4261e6:	or     al,0x7b
  4261e8:	outs   dx,BYTE PTR ds:[esi]
  4261e9:	cmc    
  4261ea:	ja     0x42623a
  4261ec:	nop
  4261ed:	xchg   ebp,eax
  4261ee:	jge    0x42620c
  4261f0:	xchg   esp,eax
  4261f1:	push   edi
  4261f2:	not    DWORD PTR [edx+0xf265147]
  4261f8:	or     eax,0xbfc0d830
  4261fd:	adc    BYTE PTR ds:0x60af6007,bh
  426203:	(bad)  
  426204:	data16 jge 0x4261c0
  426207:	jnp    0x42622b
  426209:	sti    
  42620a:	or     al,0xe1
  42620c:	cwde   
  42620d:	push   eax
  42620e:	mov    dl,0xc5
  426210:	cmp    eax,0x699af359
  426215:	lods   al,BYTE PTR ds:[esi]
  426216:	dec    ebp
  426217:	(bad)  
  426219:	mov    ds:0x75a326ab,al
  42621e:	or     eax,0x613151ed
  426223:	out    dx,al
  426224:	ins    DWORD PTR es:[edi],dx
  426225:	inc    ebx
  426226:	pusha  
  426227:	sub    ebp,DWORD PTR [ecx+eax*1-0x63]
  42622b:	ins    BYTE PTR es:[edi],dx
  42622c:	mov    bl,0xab
  42622e:	mov    bl,0x7f
  426230:	fisubr WORD PTR [ebx+0x5b]
  426233:	adc    bh,ah
  426235:	div    DWORD PTR [edi-0x20aa52b9]
  42623b:	test   eax,0xd52b24d0
  426240:	lds    edx,FWORD PTR [ebx-0x13632fe6]
  426246:	adc    DWORD PTR [ecx-0x35],eax
  426249:	jns    0x42621f
  42624b:	jecxz  0x42629e
  42624d:	nop
  42624e:	mov    al,0x8
  426250:	mov    esi,0xc0ead433
  426255:	inc    ebx
  426256:	das    
  426257:	mov    BYTE PTR [edx+ebp*2+0x442084a4],bh
  42625e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42625f:	xchg   sp,ax
  426261:	out    0x3b,al
  426263:	mov    fs,WORD PTR [edi-0x25]
  426266:	cld    
  426267:	cmc    
  426268:	sahf   
  426269:	mov    ebx,DWORD PTR [edx]
  42626b:	(bad)  
  42626c:	(bad)  [edi-0x4ce2bd79]
  426272:	pop    ebp
  426273:	add    eax,0xdf021902
  426278:	push   0x40008eee
  42627d:	stos   BYTE PTR es:[edi],al
  42627e:	pop    edx
  42627f:	sbb    bh,dl
  426281:	cli    
  426282:	inc    eax
  426283:	cli    
  426284:	outs   dx,BYTE PTR ds:[esi]
  426285:	jmp    0xc438:0xdabe400
  42628c:	dec    eax
  42628d:	fild   DWORD PTR [ecx]
  42628f:	add    BYTE PTR [edi+0x11000002],al
  426295:	jle    0x426298
  426297:	add    eax,DWORD PTR [eax-0x5b8ae682]
  42629d:	outs   dx,BYTE PTR ds:[esi]
  42629e:	out    dx,eax
  42629f:	std    
  4262a0:	idiv   DWORD PTR [ecx+0x26]
  4262a3:	add    BYTE PTR [edx+0x23],dl
  4262a6:	lds    esi,FWORD PTR [ebx]
  4262a8:	in     eax,0x3e
  4262aa:	(bad)  
  4262ab:	aas    
  4262ac:	ja     0x4262e3
  4262ae:	fldcw  WORD PTR [esi-0x74]
  4262b1:	or     eax,DWORD PTR [esi+0x1751ab69]
  4262b7:	pop    es
  4262b8:	sbb    al,0x5a
  4262ba:	stc    
  4262bb:	and    DWORD PTR [eax],ebx
  4262bd:	loopne 0x42629f
  4262bf:	push   ecx
  4262c0:	repnz mov ch,0x7c
  4262c3:	ret    
  4262c4:	mov    ds:0x4822bc3b,eax
  4262c9:	sub    BYTE PTR [ebp+0x2f746867],ch
  4262cf:	retf   
  4262d0:	dec    esp
  4262d1:	in     al,dx
  4262d2:	iret   
  4262d3:	neg    al
  4262d5:	es push edx
  4262d7:	repnz ss not cl
  4262db:	and    dl,ah
  4262dd:	shl    BYTE PTR [esi],0x4a
  4262e0:	sbb    ebp,DWORD PTR [edx]
  4262e2:	(bad)  
  4262e3:	mov    DWORD PTR ds:0x5a337dd3,0xa75550d5
  4262ed:	hlt    
  4262ee:	jae    0x4262e2
  4262f0:	add    eax,0x4ef92e81
  4262f5:	inc    ecx
  4262f6:	xchg   edx,eax
  4262f7:	push   ebx
  4262f8:	sbb    cl,BYTE PTR [ebp-0x1b2f9e46]
  4262fe:	jecxz  0x426339
  426300:	inc    esi
  426301:	mov    ?,WORD PTR [ebx+eiz*1]
  426304:	mov    DWORD PTR [edi+0x13ff18cf],esi
  42630a:	int3   
  42630b:	int    0x22
  42630d:	sbb    BYTE PTR [ebx+ebx*4],dl
  426310:	sub    ebp,DWORD PTR [esi+0x49]
  426313:	or     al,0xc7
  426315:	cdq    
  426316:	add    ebx,DWORD PTR [esi+0x1f]
  426319:	sbb    eax,0x13bceae2
  42631e:	mov    al,BYTE PTR [esi]
  426320:	stos   BYTE PTR es:[edi],al
  426321:	dec    edi
  426322:	push   0x9268d5cd
  426327:	call   0xfcf299ba
  42632c:	sbb    al,0xab
  42632e:	jge    0x4262c3
  426330:	je     0x4262c0
  426332:	jg     0x426310
  426334:	dec    esi
  426335:	pop    ebx
  426336:	cmp    DWORD PTR [ebx-0x19d6f2f1],edx
  42633c:	add    BYTE PTR [ecx],bh
  42633e:	test   DWORD PTR [eax-0x4f64f71],ebp
  426344:	adc    ebx,DWORD PTR [ebx]
  426346:	inc    esi
  426347:	or     bh,dl
  426349:	lock call 0x9dfe84e9
  42634f:	inc    edi
  426350:	or     al,0x1b
  426352:	dec    ebx
  426353:	xor    DWORD PTR [edi],esp
  426355:	rcl    edi,0x1f
  426358:	int    0x40
  42635a:	sbb    cl,0xfd
  42635d:	mov    al,0xaf
  42635f:	adc    eax,0xe6d0d238
  426364:	dec    esi
  426365:	mov    edx,0x568a9ca
  42636b:	retf   
  42636c:	nop
  42636d:	inc    eax
  42636e:	mov    ebx,0xa8938a27
  426373:	dec    eax
  426374:	aam    0x19
  426376:	xchg   esi,eax
  426377:	mov    ebp,0xf81d9eba
  42637c:	sbb    BYTE PTR [ebx+edi*4],0xb3
  426380:	mov    ecx,0xf934f77
  426385:	nop
  426386:	rol    BYTE PTR [edi],0x46
  426389:	push   0x2c4e15d6
  42638e:	mov    gs,WORD PTR [edx]
  426390:	lods   eax,DWORD PTR ds:[esi]
  426391:	and    DWORD PTR [ebp-0x20f1fd9],ecx
  426397:	xchg   ebp,eax
  426398:	dec    edx
  426399:	xchg   ebp,eax
  42639a:	fs mov ebx,0x182877a9
  4263a0:	sbb    eax,0x3a190b03
  4263a5:	add    eax,0xa5b7608c
  4263aa:	xchg   esp,eax
  4263ab:	imul   ebx,DWORD PTR [esi+0x7f],0xb431e11d
  4263b2:	push   eax
  4263b3:	xchg   ebx,eax
  4263b4:	mov    WORD PTR [edx-0x56118de],fs
  4263ba:	and    BYTE PTR [esi],bl
  4263bc:	scas   al,BYTE PTR es:[edi]
  4263bd:	xchg   ebp,eax
  4263be:	cmp    eax,0xd90f4708
  4263c3:	pushf  
  4263c4:	idiv   ebp
  4263c6:	daa    
  4263c7:	inc    ecx
  4263c8:	cwde   
  4263c9:	and    ebp,DWORD PTR [ecx-0x36]
  4263cc:	add    al,0x27
  4263ce:	lods   eax,DWORD PTR ds:[esi]
  4263cf:	push   edx
  4263d0:	fwait
  4263d1:	sar    BYTE PTR [edx-0x2b],0x80
  4263d5:	fbstp  TBYTE PTR [eax+eiz*4+0xc]
  4263d9:	test   al,0xc6
  4263db:	into   
  4263dc:	fcmovnu st,st(0)
  4263de:	(bad)  
  4263df:	fstp   TBYTE PTR [eax-0x203ca37a]
  4263e5:	pop    edi
  4263e6:	repz and eax,0x334fc0d1
  4263ec:	mov    ah,0x9e
  4263ee:	mov    DWORD PTR [eax-0x6355dd4a],esi
  4263f4:	bound  ecx,QWORD PTR ds:0x426d22d4
  4263fa:	cmp    al,0xd9
  4263fc:	inc    ebx
  4263fd:	mov    DWORD PTR [esi+0x5d],ebx
  426400:	xchg   ebp,eax
  426401:	xchg   edx,eax
  426402:	xor    al,0x50
  426404:	and    dh,dl
  426406:	jp     0x4263db
  426408:	cmpxchg BYTE PTR [ecx-0x17b44afb],al
  42640f:	pop    edi
  426410:	ds dec esi
  426412:	xchg   ebp,eax
  426413:	aad    0x8f
  426415:	xchg   edi,eax
  426416:	jne    0x4263d8
  426418:	inc    esi
  426419:	add    BYTE PTR [ecx-0x76],bl
  42641c:	(bad)  
  42641d:	loope  0x42646e
  42641f:	(bad)  
  426420:	or     eax,0xf3eea059
  426425:	sub    al,0x95
  426427:	lds    ecx,FWORD PTR [edx-0x1b7e4172]
  42642d:	stos   BYTE PTR es:[edi],al
  42642e:	lahf   
  42642f:	dec    edx
  426430:	adc    al,0xab
  426432:	and    DWORD PTR [edx-0x8468f3e],0xffffff98
  426439:	inc    ebp
  42643a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42643b:	fucomi st,st(0)
  42643d:	dec    esp
  42643e:	mov    eax,ds:0x5fd1d886
  426443:	lods   al,BYTE PTR ds:[esi]
  426444:	ins    BYTE PTR es:[edi],dx
  426445:	mov    ds:0x1cbb5069,eax
  42644a:	xor    DWORD PTR [eax+0x195a116d],ebx
  426450:	cld    
  426451:	shl    DWORD PTR [ecx],0x75
  426454:	jmp    0x644572ec
  426459:	(bad)  
  42645a:	or     cl,dl
  42645c:	icebp  
  42645d:	push   esi
  42645e:	cmp    DWORD PTR [edi-0x682d75d7],edi
  426464:	cmp    DWORD PTR [ebx-0x1e7b792c],esi
  42646a:	fmul   QWORD PTR [esi-0x3]
  42646d:	leave  
  42646e:	in     al,dx
  42646f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426470:	fisttp QWORD PTR [edi]
  426472:	jmp    0x57c7:0x94c39d1a
  426479:	push   cs
  42647a:	add    bh,al
  42647c:	inc    edx
  42647d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42647e:	popa   
  42647f:	cwde   
  426480:	and    bh,ch
  426482:	sub    BYTE PTR [ecx],ch
  426484:	inc    edi
  426485:	jp     0x426409
  426487:	dec    esi
  426488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426489:	std    
  42648a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42648b:	sbb    al,0xee
  42648d:	ret    
  42648e:	leave  
  42648f:	mov    edx,0x4d5817a
  426494:	in     eax,dx
  426495:	cs xchg esi,eax
  426497:	dec    ebp
  426498:	retf   0x8d
  42649b:	stos   BYTE PTR es:[edi],al
  42649c:	sbb    ecx,edx
  42649e:	and    BYTE PTR fs:[eax+eax*2],ah
  4264a2:	jmp    0x42647b
  4264a4:	xor    BYTE PTR [ebp+0x40d0b456],0x3
  4264ab:	push   ebx
  4264ac:	ror    DWORD PTR [ecx-0x6c52e7c9],0x3f
  4264b3:	pop    esi
  4264b4:	ret    
  4264b5:	sbb    eax,0x3163f2a4
  4264ba:	push   ebp
  4264bb:	add    BYTE PTR [edi+0x7996d3c7],cl
  4264c1:	retf   
  4264c2:	in     al,dx
  4264c3:	or     bh,al
  4264c5:	mov    al,ds:0x3d89380e
  4264ca:	add    edi,esi
  4264cc:	pmaxub mm6,QWORD PTR ds:0x19e5d1a7
  4264d3:	mov    esi,0xa5c7f822
  4264d8:	inc    eax
  4264d9:	dec    edi
  4264da:	imul   ebp,DWORD PTR [edi-0xa],0x34
  4264de:	jg     0x42649b
  4264e0:	pushf  
  4264e1:	out    0x35,eax
  4264e3:	push   ds
  4264e4:	sub    edi,0x737f9425
  4264ea:	hlt    
  4264eb:	popf   
  4264ec:	pop    ds
  4264ed:	add    cl,al
  4264ef:	add    DWORD PTR [esi+0x1394fc2b],0xffffff87
  4264f6:	out    0x9e,eax
  4264f8:	or     BYTE PTR [ebx],ah
  4264fa:	fcom   QWORD PTR [esi]
  4264fc:	call   0xf4:0x785d3c8c
  426503:	ret    
  426504:	fwait
  426505:	loope  0x426513
  426507:	push   edi
  426508:	pushf  
  426509:	xchg   ebx,eax
  42650a:	js     0x4264ae
  42650c:	dec    edi
  42650d:	repnz sub cl,BYTE PTR [edx-0x56e05606]
  426514:	jno    0x426514
  426516:	mov    esp,0x67d08e41
  42651b:	add    BYTE PTR [esi-0x28ab281c],dh
  426521:	ja     0x4264da
  426523:	out    0xf3,al
  426525:	ss icebp 
  426527:	mov    esp,0x892d88dd
  42652c:	iret   
  42652d:	fld    QWORD PTR [ecx]
  42652f:	add    BYTE PTR [edi+0x4d000002],al
  426535:	fistp  QWORD PTR [esi]
  426537:	test   eax,0x657b3d65
  42653c:	mov    bl,ah
  42653e:	cmp    DWORD PTR [edi+0x41eb3759],ebx
  426544:	lahf   
  426545:	inc    eax
  426546:	lahf   
  426547:	sbb    al,BYTE PTR [esi]
  426549:	loope  0x426564
  42654b:	int3   
  42654c:	fistp  DWORD PTR [eax+0x28]
  42654f:	lods   al,BYTE PTR ds:[esi]
  426550:	push   ds
  426551:	ss scas al,BYTE PTR es:[edi]
  426553:	add    bh,BYTE PTR [edx+0x5aff0a16]
  426559:	mov    esi,0x14442852
  42655e:	pop    eax
  42655f:	push   es
  426560:	adc    ebp,ebp
  426562:	mov    esp,DWORD PTR [edx+0x1e]
  426565:	in     al,dx
  426566:	push   esi
  426567:	pop    ecx
  426568:	add    eax,0x294857e0
  42656d:	repz int3 
  42656f:	gs or  dl,ch
  426572:	lods   eax,DWORD PTR ds:[esi]
  426573:	mov    cl,0x6
  426575:	mov    dh,0xa8
  426577:	sbb    cl,BYTE PTR [ebx]
  426579:	adc    al,0x8e
  42657b:	jg     0x426545
  42657d:	pop    edi
  42657e:	dec    esp
  42657f:	push   ss
  426580:	jb     0x426601
  426582:	jnp    0x4265f3
  426584:	push   0xb8bd5512
  426589:	ins    DWORD PTR es:[edi],dx
  42658a:	lods   al,BYTE PTR ds:[esi]
  42658b:	cs iret 
  42658d:	jns    0x426535
  42658f:	cmp    al,0xb9
  426591:	add    BYTE PTR [ecx-0x2b],dl
  426594:	mov    BYTE PTR [edi+0x3c],bl
  426597:	xchg   bl,bl
  426599:	addr16 in eax,0xe7
  42659c:	jecxz  0x4265e8
  42659e:	inc    esi
  42659f:	mov    DWORD PTR [edi+0x29],0x8210a006
  4265a6:	or     bl,ch
  4265a8:	pop    ebp
  4265a9:	fdivr  QWORD PTR [esi-0x471d358f]
  4265af:	jmp    0x812b:0x35fed387
  4265b6:	data16 jne 0x42659b
  4265b9:	jo     0x4265a1
  4265bb:	arpl   di,ax
  4265bd:	shr    BYTE PTR ds:0x7a91a716,1
  4265c3:	add    BYTE PTR ds:0xc115a206,al
  4265c9:	inc    esp
  4265ca:	cmp    DWORD PTR [ebx+ebp*2],esp
  4265cd:	in     eax,0x66
  4265cf:	es jo  0x4265ac
  4265d2:	sub    ah,BYTE PTR [esp+eax*4]
  4265d5:	aam    0xfb
  4265d7:	popa   
  4265d8:	jae    0x42659e
  4265da:	retf   
  4265db:	nop
  4265dc:	dec    esi
  4265dd:	(bad)  
  4265de:	(bad)  
  4265e1:	lods   eax,DWORD PTR ds:[esi]
  4265e2:	sub    al,0x1a
  4265e4:	stos   DWORD PTR es:[edi],eax
  4265e5:	fdiv   st,st(7)
  4265e7:	lods   al,BYTE PTR ds:[esi]
  4265e8:	add    al,0x1a
  4265ea:	push   ebp
  4265eb:	popa   
  4265ec:	daa    
  4265ed:	mov    eax,0xddf9a7a5
  4265f2:	mov    ecx,0xe67b9e5
  4265f7:	sub    ecx,DWORD PTR ds:0x27f6ff18
  4265fd:	arpl   WORD PTR [eax-0x56],si
  426600:	or     eax,0x8aa82e2a
  426605:	pop    ss
  426606:	lds    esi,FWORD PTR [edx-0x2a]
  426609:	out    0xf4,eax
  42660b:	sub    ch,0x29
  42660e:	imul   esp,DWORD PTR [eax+0x4f],0xc586c26f
  426615:	mov    esi,0x57fcdc9d
  42661a:	inc    esi
  42661b:	js     0x42668f
  42661d:	jle    0x42668a
  42661f:	adc    edi,DWORD PTR [ecx]
  426621:	sub    al,0xcb
  426623:	loope  0x426635
  426625:	cmp    al,0x1e
  426627:	gs (bad) 
  426629:	xlat   BYTE PTR ds:[ebx]
  42662a:	mov    dh,0xa7
  42662c:	add    eax,0x903bff2d
  426631:	stos   DWORD PTR es:[edi],eax
  426632:	mov    bh,0x27
  426634:	mov    esp,0xd665aef8
  426639:	pop    ebx
  42663a:	call   DWORD PTR [esi-0x46c1188e]
  426640:	add    ax,WORD PTR [edx-0x51cff28b]
  426647:	repz (bad) 
  426649:	loop   0x426681
  42664b:	push   ebx
  42664c:	mov    edx,0x79deabc9
  426651:	dec    eax
  426652:	leave  
  426653:	imul   edi,esi,0xffffffd3
  426656:	and    BYTE PTR [ecx-0x60dc95c9],bh
  42665c:	sbb    al,0x9e
  42665e:	enter  0xcb3a,0x3d
  426662:	pop    ss
  426663:	xchg   dl,bl
  426665:	mov    dh,0x3e
  426667:	and    BYTE PTR [ecx+0x70],dl
  42666a:	and    DWORD PTR [ebx],edx
  42666c:	xor    al,BYTE PTR [esp+eax*1]
  42666f:	dec    ebp
  426670:	push   ecx
  426671:	(bad)  [edi+esi*8]
  426674:	mov    dh,0x5c
  426676:	push   esi
  426677:	pop    edx
  426678:	adc    ebp,DWORD PTR [ecx+eax*4+0x67]
  42667c:	loopne 0x42668f
  42667e:	mov    ecx,0x57e35bb2
  426683:	sbb    al,0x9b
  426685:	or     dh,BYTE PTR ds:0x77eb1415
  42668b:	je     0x42667a
  42668d:	cli    
  42668e:	hlt    
  42668f:	cmp    eax,DWORD PTR [ecx]
  426691:	jns    0x42662a
  426693:	int3   
  426694:	jl     0x4266f3
  426696:	ficomp DWORD PTR [ecx+0x32191b87]
  42669c:	mov    edx,0x848a4bd8
  4266a1:	repnz dec esi
  4266a3:	xchg   edx,eax
  4266a4:	xor    ebx,DWORD PTR es:[ebx-0x5ab8ceab]
  4266ab:	sbb    bl,ch
  4266ad:	inc    esi
  4266ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266af:	scas   al,BYTE PTR es:[edi]
  4266b0:	sbb    DWORD PTR [eax-0x459ffae9],ebp
  4266b6:	mov    eax,0xad63870f
  4266bb:	cmp    ch,BYTE PTR [bp-0x1d4a]
  4266c0:	outs   dx,DWORD PTR ds:[esi]
  4266c1:	or     eax,0x3ed3abf0
  4266c6:	sahf   
  4266c7:	call   0x126d:0xb1d337ef
  4266ce:	xchg   edi,eax
  4266cf:	inc    edx
  4266d0:	mov    ch,0x4c
  4266d2:	xchg   esi,eax
  4266d3:	shl    ecx,0xc
  4266d6:	(bad)  
  4266d8:	adc    al,0x55
  4266da:	arpl   WORD PTR [esi+0x71],cx
  4266dd:	fwait
  4266de:	aaa    
  4266df:	js     0x42668a
  4266e1:	mov    ch,0x6a
  4266e3:	cmp    bl,BYTE PTR fs:[edi]
  4266e6:	bound  ebp,QWORD PTR [ecx+0x5db963b8]
  4266ec:	fwait
  4266ed:	jecxz  0x4266bc
  4266ef:	std    
  4266f0:	dec    edx
  4266f1:	sub    BYTE PTR [eiz*2-0x115df61c],bh
  4266f8:	call   0x1c49bd04
  4266fd:	inc    ebp
  4266fe:	fs push es
  426700:	and    al,0x7b
  426702:	dec    ebp
  426703:	psadbw mm1,QWORD PTR [esi-0x12]
  426707:	jmp    0x3fb08a21
  42670c:	not    DWORD PTR ds:0x986606a8
  426712:	mov    dh,BYTE PTR [ebx]
  426714:	loope  0x4266ab
  426716:	mov    ebp,0x9d87ed13
  42671b:	jo     0x42676f
  42671d:	icebp  
  42671e:	mov    ?,WORD PTR [ebp-0x49d7076d]
  426724:	lds    esp,FWORD PTR [ecx]
  426726:	or     eax,0xffa56703
  42672b:	int    0xb
  42672d:	loopne 0x42672a
  42672f:	(bad)  
  426730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426731:	jne    0x4266fa
  426733:	out    0x3a,al
  426735:	aad    0x9
  426737:	clc    
  426738:	mov    bh,0x10
  42673a:	jle    0x42676b
  42673c:	or     al,dh
  42673e:	jnp    0x4267ba
  426740:	outs   dx,DWORD PTR ds:[esi]
  426741:	retf   0x2d27
  426744:	mov    ebp,0xe4217d81
  426749:	imul   edx,DWORD PTR [ebx+eax*1+0x3e],0x1be8764f
  426751:	mov    ch,0x3
  426753:	inc    esp
  426754:	lods   al,BYTE PTR ds:[esi]
  426755:	cmc    
  426756:	and    BYTE PTR fs:[ebx+0x14c28e17],cl
  42675d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42675e:	mov    al,0x5f
  426760:	test   al,0x6b
  426762:	fwait
  426763:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426764:	jae    0x42671f
  426766:	adc    eax,0xdec008c8
  42676b:	fwait
  42676c:	jb     0x426780
  42676e:	ficom  WORD PTR [edi+0x20c28a8]
  426774:	sbb    eax,0x3134e157
  42677a:	dec    edi
  42677b:	rcl    BYTE PTR [edx],1
  42677d:	cmp    esi,DWORD PTR [esi-0x2af29d48]
  426783:	push   ebx
  426784:	or     ecx,DWORD PTR ds:0x3e301966
  42678a:	ficom  WORD PTR [ecx+0x7e]
  42678d:	cmp    dh,ch
  42678f:	call   0x7998:0x211b79e2
  426796:	adc    al,0x1e
  426798:	add    edx,eax
  42679a:	xchg   edx,eax
  42679b:	jno    0x42673e
  42679d:	xchg   esi,eax
  42679e:	cmp    edx,DWORD PTR [ebx-0x43]
  4267a1:	stc    
  4267a2:	xlat   BYTE PTR ds:[ebx]
  4267a3:	loop   0x4267be
  4267a5:	aad    0xcd
  4267a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267a8:	jl     0x4267e7
  4267aa:	pop    ebp
  4267ab:	daa    
  4267ac:	sbb    bl,BYTE PTR [ecx]
  4267ae:	sar    DWORD PTR [esp+eiz*4+0x3b7a4133],cl
  4267b5:	(bad)  
  4267b6:	mov    eax,ds:0x103098fa
  4267bb:	add    dl,bh
  4267bd:	rcl    DWORD PTR ds:0xfac73d07,cl
  4267c3:	push   DWORD PTR ds:0xe01c7bfe
  4267c9:	adc    ch,BYTE PTR [ebx-0x28]
  4267cc:	push   esi
  4267cd:	loopne 0x4267d0
  4267cf:	add    BYTE PTR [edi+0x6e000002],al
  4267d5:	xchg   esi,eax
  4267d6:	mov    dl,0xdc
  4267d8:	imul   edi,DWORD PTR [eax],0xffffffa4
  4267db:	inc    edi
  4267dc:	mov    al,0xbd
  4267de:	add    edi,esp
  4267e0:	jne    0x426842
  4267e2:	fist   WORD PTR [esi]
  4267e4:	dec    edi
  4267e5:	fistp  DWORD PTR [edx+0x15]
  4267e8:	nop
  4267e9:	cwde   
  4267ea:	sti    
  4267eb:	pop    ebx
  4267ec:	aas    
  4267ed:	jmp    0x41511d7b
  4267f2:	fiadd  WORD PTR [esi+ebx*1]
  4267f5:	lahf   
  4267f6:	cmp    DWORD PTR [eax-0x25],ebx
  4267f9:	imul   edi,DWORD PTR [esi-0x59],0x39
  4267fd:	ror    DWORD PTR [ebx],0xe6
  426800:	mov    esp,0xf0b7c27c
  426805:	xor    DWORD PTR [esi],edi
  426807:	cmovbe eax,DWORD PTR [esi]
  42680a:	mov    DWORD PTR [edi],esp
  42680c:	jo     0x426808
  42680e:	in     al,dx
  42680f:	sub    eax,0xef6547e5
  426814:	mov    esp,es
  426816:	icebp  
  426817:	push   edi
  426818:	ds push ss
  42681a:	adc    eax,0x2b2577c1
  42681f:	or     DWORD PTR [edx-0x783afe88],edx
  426825:	add    al,0x9d
  426827:	mov    dh,BYTE PTR [edx]
  426829:	pop    ebp
  42682a:	and    ecx,ecx
  42682c:	test   eax,0x57dead79
  426831:	dec    esi
  426832:	fmul   QWORD PTR [ebx+ebx*1]
  426835:	fldenv ss:[edx-0x27]
  426839:	lahf   
  42683a:	ds sub al,0x85
  42683d:	lea    ebp,[ebx]
  42683f:	pop    edi
  426840:	mov    ebx,0x6e94a93c
  426845:	adc    bh,0xfa
  426848:	xchg   esi,eax
  426849:	arpl   WORD PTR [edx+0x5d76055d],bx
  42684f:	shl    DWORD PTR [esi-0x54],cl
  426852:	outs   dx,DWORD PTR ds:[esi]
  426853:	loopne 0x426817
  426855:	pop    es
  426856:	inc    edi
  426857:	outs   dx,DWORD PTR ds:[esi]
  426858:	lods   al,BYTE PTR ds:[esi]
  426859:	mov    al,0x2b
  42685b:	add    al,0x53
  42685d:	xor    bh,BYTE PTR [ebp-0x6e6ff1fe]
  426863:	sub    eax,0x1963703b
  426868:	stc    
  426869:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42686a:	sahf   
  42686b:	cmc    
  42686c:	popa   
  42686d:	in     al,0x2d
  42686f:	std    
  426870:	sub    BYTE PTR [edx],bl
  426872:	mov    esp,0x1002b673
  426877:	lahf   
  426878:	scas   eax,DWORD PTR es:[edi]
  426879:	mov    edx,0x8ac90b28
  42687e:	inc    ebx
  42687f:	add    eax,0xa0ffe344
  426884:	mov    bh,0xd9
  426886:	lahf   
  426887:	adc    DWORD PTR [esp+ebp*1],esi
  42688a:	sbb    BYTE PTR [eax],ah
  42688c:	push   ss
  42688d:	xchg   ecx,eax
  42688e:	int    0x75
  426890:	mov    eax,ds:0x353dd09c
  426895:	jno    0x4268a3
  426897:	inc    edi
  426898:	cs leave 
  42689a:	call   0xebc2:0x499df2cd
  4268a1:	mov    al,ds:0xe97da43d
  4268a6:	scas   eax,DWORD PTR es:[edi]
  4268a7:	imul   edx,ebx,0xdca63a6b
  4268ad:	mov    edi,0xec709957
  4268b2:	adc    eax,0xf1054e23
  4268b7:	dec    edi
  4268b8:	mov    ds:0x9c49d794,eax
  4268bd:	xor    bh,bh
  4268bf:	sar    BYTE PTR [eax+edx*8],cl
  4268c2:	scas   al,BYTE PTR es:[edi]
  4268c3:	xor    al,0x41
  4268c5:	outs   dx,DWORD PTR ds:[esi]
  4268c6:	sahf   
  4268c7:	ret    0xbe0c
  4268ca:	cmp    al,0x3e
  4268cc:	inc    esi
  4268cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268ce:	sbb    DWORD PTR [edi+esi*2],ebp
  4268d1:	add    al,0xa0
  4268d3:	dec    ebp
  4268d4:	sub    BYTE PTR [eax+0x4d01d8be],bl
  4268da:	cmp    al,ah
  4268dc:	fmul   DWORD PTR [edx]
  4268de:	ja     0x42689b
  4268e0:	pop    ecx
  4268e1:	in     al,0x2f
  4268e3:	jge    0x426955
  4268e5:	ss xchg ecx,eax
  4268e7:	stos   DWORD PTR es:[edi],eax
  4268e8:	stos   DWORD PTR es:[edi],eax
  4268e9:	cwde   
  4268ea:	mov    dh,0x43
  4268ec:	xlat   BYTE PTR ds:[ebx]
  4268ed:	mov    esi,0x50f01414
  4268f2:	adc    al,0x50
  4268f4:	jle    0x42695c
  4268f6:	inc    esp
  4268f7:	stos   DWORD PTR es:[edi],eax
  4268f8:	mov    eax,0x342de89b
  4268fd:	add    ah,BYTE PTR [ebp+0x22]
  426900:	push   edi
  426901:	jl     0x4268fc
  426903:	ins    DWORD PTR es:[edi],dx
  426904:	das    
  426905:	jmp    0x85c3:0xd14c834c
  42690c:	push   ds
  42690d:	wbinvd 
  42690f:	test   eax,0xffc2156c
  426914:	int3   
  426915:	adc    DWORD PTR [ecx],eax
  426917:	cli    
  426918:	ret    
  426919:	sar    ch,0x4e
  42691c:	inc    esp
  42691d:	push   edi
  42691e:	inc    esp
  42691f:	mov    dh,0x72
  426921:	cli    
  426922:	mov    ecx,0x4af23290
  426927:	pop    esp
  426928:	and    ch,BYTE PTR [ebx]
  42692a:	xor    eax,0xe862ff69
  42692f:	pop    ds
  426930:	jl     0x4268bb
  426932:	push   ds
  426933:	mov    bl,0xfd
  426935:	(bad)  
  426936:	pusha  
  426937:	cwde   
  426938:	(bad)  
  426939:	adc    esp,eax
  42693b:	cmc    
  42693c:	pop    ss
  42693d:	adc    ch,ah
  42693f:	int    0xd0
  426941:	test   al,0x74
  426943:	out    0x3e,eax
  426945:	jmp    FWORD PTR [edx]
  426947:	adc    cl,BYTE PTR [edx+ebx*2+0x43df477b]
  42694e:	fwait
  42694f:	cdq    
  426950:	js     0x4268e7
  426952:	sar    DWORD PTR [edx],1
  426954:	inc    esi
  426955:	daa    
  426956:	xor    DWORD PTR [ebx],0xeb656845
  42695c:	jne    0x4269db
  42695e:	jns    0x426952
  426960:	push   ebp
  426961:	(bad)  
  426962:	cmp    eax,0x3994664d
  426967:	sbb    DWORD PTR [ebx],0xffffffd6
  42696a:	dec    edx
  42696b:	call   0xafa8:0xe29bfb24
  426972:	stos   BYTE PTR es:[edi],al
  426973:	dec    ecx
  426974:	sbb    edx,DWORD PTR [ebx-0x2de8f447]
  42697a:	cmp    al,0x4e
  42697c:	cld    
  42697d:	das    
  42697e:	adc    DWORD PTR [ecx],edi
  426980:	call   0x4a6b2d77
  426985:	shr    edx,1
  426987:	sbb    ch,BYTE PTR [ebp-0x166e15e6]
  42698d:	cmp    eax,0x892f9d89
  426992:	xor    ebp,edx
  426994:	adc    BYTE PTR [edx+0x75],al
  426997:	mov    al,ds:0x93a2d42f
  42699c:	sub    esi,DWORD PTR [esi+0x3a]
  42699f:	lea    eax,[ebp-0x30]
  4269a2:	clc    
  4269a3:	outs   dx,BYTE PTR ds:[esi]
  4269a4:	es inc ebx
  4269a6:	int3   
  4269a7:	adc    BYTE PTR [ebp-0x6c],ah
  4269aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269ab:	adc    eax,0x2e32c21b
  4269b0:	sub    al,0x71
  4269b2:	into   
  4269b3:	ret    
  4269b4:	pop    ss
  4269b5:	xchg   edx,eax
  4269b6:	ret    0xaa14
  4269b9:	aam    0x96
  4269bb:	aas    
  4269bc:	xor    eax,0xb5638fa3
  4269c1:	cld    
  4269c2:	mov    ebx,edi
  4269c4:	imul   edi
  4269c6:	pusha  
  4269c7:	or     BYTE PTR ds:0x5d2a424a,al
  4269cd:	and    al,0x39
  4269cf:	(bad)  
  4269d0:	daa    
  4269d1:	inc    eax
  4269d2:	sbb    DWORD PTR gs:[ebp-0x59ee4462],edx
  4269d9:	xor    ecx,DWORD PTR [ebp+0x54584d43]
  4269df:	and    al,0x2b
  4269e1:	xchg   ebx,eax
  4269e2:	sbb    esp,DWORD PTR [ebx]
  4269e4:	push   cs
  4269e5:	cmp    esp,DWORD PTR [edi]
  4269e7:	mov    DWORD PTR [eax+0x48],edi
  4269ea:	pop    esp
  4269eb:	or     BYTE PTR [eax],ah
  4269ed:	jne    0x4269a3
  4269ef:	or     esp,DWORD PTR [ebp-0x5610a7d8]
  4269f5:	pop    ebp
  4269f6:	test   DWORD PTR [ecx-0x71],ebp
  4269f9:	pusha  
  4269fa:	scas   al,BYTE PTR es:[edi]
  4269fb:	jp     0x426981
  4269fd:	sbb    eax,0xc63de9f6
  426a02:	mov    bl,0x7d
  426a04:	lds    esi,FWORD PTR [esi+eax*8]
  426a07:	rol    BYTE PTR [edx+0x18],1
  426a0a:	sbb    BYTE PTR [eax+edx*2-0x487cc8a4],0x9b
  426a12:	mov    eax,ds:0x1b1cc32
  426a17:	fwait
  426a18:	push   ecx
  426a19:	adc    ch,BYTE PTR [ecx+0x66]
  426a1c:	mov    al,ds:0x14d8544f
  426a21:	out    dx,al
  426a22:	jmp    0xdf13:0x3922a732
  426a29:	aas    
  426a2a:	add    DWORD PTR [ecx],ebp
  426a2c:	push   ecx
  426a2d:	lahf   
  426a2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a2f:	lahf   
  426a30:	and    ebp,ebp
  426a32:	aad    0x4e
  426a34:	add    BYTE PTR [edx-0x9d49aa5],bl
  426a3a:	jno    0x426a8e
  426a3c:	sbb    dl,dl
  426a3e:	sbb    ebp,DWORD PTR [edx]
  426a40:	or     edi,DWORD PTR [edi-0x73]
  426a43:	inc    edi
  426a44:	stc    
  426a45:	dec    BYTE PTR [ecx-0x73]
  426a48:	jb     0x4269d9
  426a4a:	call   0xc28f59ea
  426a4f:	lods   al,BYTE PTR ds:[esi]
  426a50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a51:	lds    edi,FWORD PTR [esi-0x23]
  426a54:	sub    DWORD PTR [eax+0x2f],ecx
  426a57:	sti    
  426a58:	rcr    DWORD PTR [eax+0x25],cl
  426a5b:	add    bh,cl
  426a5d:	neg    BYTE PTR [ebp-0x308442b0]
  426a63:	(bad)  
  426a64:	out    dx,eax
  426a65:	lods   al,BYTE PTR ds:[esi]
  426a66:	(bad)  
  426a67:	push   ss
  426a68:	jbe    0x4269f9
  426a6a:	je     0x426ae7
  426a6c:	fucom  st(2)
  426a6e:	add    DWORD PTR [eax],eax
  426a70:	xchg   DWORD PTR [edx],eax
  426a72:	add    BYTE PTR [eax],al
  426a74:	jecxz  0x426a0c
  426a76:	aaa    
  426a77:	hlt    
  426a78:	faddp  st(2),st
  426a7a:	or     BYTE PTR [ecx+eiz*1+0x32],0xe4
  426a7f:	adc    DWORD PTR [esi],0xfffffff7
  426a82:	ror    BYTE PTR [edi+0x40],cl
  426a85:	dec    eax
  426a86:	pop    ecx
  426a87:	cld    
  426a88:	sub    al,0xba
  426a8a:	aam    0x43
  426a8c:	aam    0x37
  426a8e:	sbb    al,0xe3
  426a90:	or     al,0xb1
  426a92:	push   ss
  426a93:	sbb    eax,0xdf634a28
  426a98:	mov    DWORD PTR [esi+0x3b],esp
  426a9b:	push   0xffffffd7
  426a9d:	push   cs
  426a9e:	jmp    0x7453:0x832f8054
  426aa5:	loopne 0x426aa4
  426aa7:	sub    al,al
  426aa9:	daa    
  426aaa:	jb     0x426a2d
  426aac:	cmp    esi,esi
  426aae:	cdq    
  426aaf:	sbb    BYTE PTR [edx+0x72],ch
  426ab2:	in     eax,dx
  426ab3:	(bad)  
  426ab4:	sbb    esi,esi
  426ab6:	std    
  426ab7:	mov    eax,0x2b41ff76
  426abc:	mov    edi,0xf1c7ca1b
  426ac1:	(bad)  
  426ac2:	enter  0xfac6,0x7
  426ac6:	xor    eax,0x7fea2216
  426acb:	push   ebx
  426acc:	ja     0x426ac5
  426ace:	dec    edi
  426acf:	sub    al,0x52
  426ad1:	pop    esi
  426ad2:	cli    
  426ad3:	fs inc eax
  426ad5:	fist   WORD PTR [ebx+0x2ca1b81d]
  426adb:	xor    BYTE PTR [edx+0x77],0x73
  426adf:	(bad)  
  426ae0:	retf   
  426ae1:	mov    cl,cl
  426ae3:	inc    ebx
  426ae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ae5:	sub    eax,0x6f978454
  426aea:	loop   0x426af9
  426aec:	cmp    DWORD PTR [edx-0x1c808dd6],esp
  426af2:	cmp    DWORD PTR [ecx+0x43a17b6],0xffffff91
  426af9:	test   ah,0xb2
  426afc:	inc    edx
  426afd:	adc    eax,0xb8239b4d
  426b02:	icebp  
  426b03:	dec    edx
  426b04:	mov    dh,0xb1
  426b06:	xor    ecx,DWORD PTR [esi]
  426b08:	mov    ebp,0xdd95a7e
  426b0d:	xor    BYTE PTR [edx+0x2d],bl
  426b10:	mov    al,ds:0x5e44f5b2
  426b15:	dec    ebp
  426b16:	xor    DWORD PTR [eax+0x2bf2b581],eax
  426b1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b1d:	in     al,0x84
  426b1f:	dec    edx
  426b20:	ror    ebp,0x5e
  426b23:	les    eax,FWORD PTR [ecx-0x2bb62ce3]
  426b29:	xlat   BYTE PTR ds:[ebx]
  426b2a:	mov    ah,0xad
  426b2c:	shr    DWORD PTR [edi+0x4e4b9390],1
  426b32:	mov    bl,0xe3
  426b34:	inc    esi
  426b35:	add    ecx,DWORD PTR [edi-0x5808caf2]
  426b3b:	xchg   ebx,eax
  426b3c:	jp     0x426afb
  426b3e:	dec    ebx
  426b3f:	out    0xad,eax
  426b41:	stos   BYTE PTR es:[edi],al
  426b42:	pop    eax
  426b43:	fwait
  426b44:	mov    ds:0xe4f6d8b3,eax
  426b49:	inc    ebp
  426b4a:	mov    eax,ds:0x7dd452f2
  426b4f:	neg    BYTE PTR [eax+ecx*2]
  426b52:	sub    dh,cl
  426b54:	inc    esp
  426b55:	mov    dh,0x3
  426b57:	fld    DWORD PTR [ecx]
  426b59:	popa   
  426b5a:	dec    BYTE PTR [ebx]
  426b5c:	xor    esp,DWORD PTR [edx+esi*8-0x29]
  426b60:	inc    edx
  426b61:	scas   al,BYTE PTR es:[edi]
  426b62:	adc    BYTE PTR [ebx],bh
  426b64:	dec    ecx
  426b65:	jp     0x426aed
  426b67:	xor    ebx,DWORD PTR [esi-0x56739dd2]
  426b6d:	test   BYTE PTR [edi+ebx*2+0x54c7ccf6],bl
  426b74:	xor    dl,0x85
  426b77:	inc    ecx
  426b78:	(bad)  
  426b79:	fmul   DWORD PTR [eax-0x207707e1]
  426b7f:	xor    bl,BYTE PTR [ebp+0x4c2170df]
  426b85:	mov    edi,0x1a9cb082
  426b8a:	cmp    DWORD PTR [esi+0x2ff97f32],0x5ada6617
  426b94:	xchg   esi,eax
  426b95:	inc    esp
  426b96:	pop    es
  426b97:	popa   
  426b98:	push   es
  426b99:	add    ebx,DWORD PTR [eax]
  426b9b:	(bad)  
  426b9d:	sar    DWORD PTR ds:0x627c6dea,0x93
  426ba4:	shr    BYTE PTR [ebx+esi*8-0x2cc4c328],cl
  426bab:	fucom  st(6)
  426bad:	xor    DWORD PTR [edi-0x1572f8dc],ecx
  426bb3:	clc    
  426bb4:	test   eax,0x2ca84a84
  426bb9:	dec    edi
  426bba:	sub    al,0xd
  426bbc:	and    al,0xc
  426bbe:	xor    eax,0x3961c763
  426bc3:	test   DWORD PTR [eax-0x27],esp
  426bc6:	mov    ds:0x269e1c31,al
  426bcb:	jbe    0x426baf
  426bcd:	cmp    dh,BYTE PTR [eax-0x43]
  426bd0:	adc    bh,cl
  426bd2:	in     al,0xed
  426bd4:	jmp    0x2a8e8756
  426bd9:	and    DWORD PTR [bp+di-0x774e],eax
  426bde:	shl    al,0x10
  426be1:	inc    esi
  426be2:	adc    ch,BYTE PTR [ecx+0x68]
  426be5:	inc    esp
  426be6:	int    0x69
  426be8:	(bad)  
  426be9:	push   ds
  426bea:	mov    cl,0xc9
  426bec:	fdiv   QWORD PTR [esp-0x5f]
  426bf0:	mov    al,0x7c
  426bf2:	jge    0x426bb8
  426bf4:	pop    es
  426bf5:	scas   al,BYTE PTR es:[edi]
  426bf6:	or     DWORD PTR [eax],edi
  426bf8:	cli    
  426bf9:	call   0xe54298be
  426bfe:	xchg   esi,eax
  426bff:	dec    eax
  426c00:	xlat   BYTE PTR ds:[ebx]
  426c01:	mov    ebx,0xdc1dc6c6
  426c06:	(bad)  
  426c07:	adc    dl,ch
  426c09:	and    eax,0x397ea665
  426c0e:	lods   eax,DWORD PTR ds:[esi]
  426c0f:	bound  eax,QWORD PTR [edi]
  426c11:	div    DWORD PTR [ecx]
  426c13:	pop    ecx
  426c14:	popa   
  426c15:	sar    BYTE PTR [ebx],1
  426c17:	daa    
  426c18:	ds in  al,dx
  426c1a:	or     ebx,DWORD PTR [ebp+0x6f1a37ad]
  426c20:	pop    edi
  426c21:	mov    eax,0xb5544dfb
  426c26:	adc    eax,DWORD PTR [edx+0x2]
  426c29:	jl     0x426c06
  426c2b:	mov    ds:0x55b1c2d5,eax
  426c30:	iret   
  426c31:	loopne 0x426c73
  426c33:	rol    BYTE PTR [edi],cl
  426c35:	ret    
  426c36:	push   eax
  426c37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c38:	xor    al,0x6d
  426c3a:	push   ds
  426c3b:	pop    esp
  426c3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c3d:	sbb    ebp,edx
  426c3f:	jns    0x426c02
  426c41:	push   edx
  426c42:	cmp    BYTE PTR ds:0x4281c4d5,bh
  426c48:	scas   eax,DWORD PTR es:[edi]
  426c49:	jle    0x426c36
  426c4b:	or     eax,0x74ba4d8f
  426c50:	cmc    
  426c51:	aas    
  426c52:	xor    bh,BYTE PTR ds:0x1a9092ae
  426c58:	xchg   edi,eax
  426c59:	xchg   BYTE PTR [ebp-0x6b],cl
  426c5c:	pop    ecx
  426c5d:	and    eax,0x435f2b45
  426c62:	adc    esp,DWORD PTR [ebp+0x5f]
  426c65:	stos   DWORD PTR es:[edi],eax
  426c66:	xchg   ebp,eax
  426c67:	mov    esi,0xa12b6672
  426c6c:	adc    BYTE PTR [esi+0x65cb0e1],bh
  426c72:	xor    eax,DWORD PTR [eax+0x72]
  426c75:	mov    ds:0xe7428b13,eax
  426c7a:	das    
  426c7b:	xor    ebp,DWORD PTR [ebp+edx*8+0x6ee05a71]
  426c82:	test   dl,ah
  426c84:	daa    
  426c85:	and    al,0xc8
  426c87:	add    DWORD PTR [eax+esi*1-0x7511d57b],esi
  426c8e:	and    DWORD PTR [ebx+eax*2+0x2e8f862b],ebx
  426c95:	adc    BYTE PTR [ebp+0x12],dh
  426c98:	inc    ebx
  426c99:	std    
  426c9a:	fidivr DWORD PTR ds:0x174c3206
  426ca0:	and    DWORD PTR [ecx+eax*1+0x7d929387],eax
  426ca7:	in     eax,dx
  426ca8:	mov    ah,0x2a
  426caa:	mov    edx,0x41bf744
  426caf:	idiv   DWORD PTR [edi+ebx*4]
  426cb2:	pop    esi
  426cb3:	mov    esp,0xf5624a68
  426cb8:	mov    ss,WORD PTR [ebp+0x73]
  426cbb:	or     eax,DWORD PTR [edx-0x10fe5db4]
  426cc1:	cmp    ebx,0x760c46d6
  426cc7:	ds imul ebx,eax,0x1b593a13
  426cce:	or     eax,0x41bebc50
  426cd3:	xchg   esi,eax
  426cd4:	gs mov ebx,0x759ec8be
  426cda:	push   es
  426cdb:	test   BYTE PTR [esi-0x4c],dh
  426cde:	out    0x87,al
  426ce0:	push   eax
  426ce1:	shl    DWORD PTR ds:0x5dd455c2,cl
  426ce7:	js     0x426d40
  426ce9:	xchg   ecx,eax
  426cea:	sub    BYTE PTR [eax-0xaff6f0f],ch
  426cf0:	outs   dx,BYTE PTR ds:[esi]
  426cf1:	(bad)  
  426cf3:	dec    ebx
  426cf4:	lock or al,0xf9
  426cf7:	inc    edi
  426cf8:	iret   
  426cf9:	push   ds
  426cfa:	popf   
  426cfb:	add    BYTE PTR [eax+0x23],ch
  426cfe:	sub    eax,0x7b1e6f1e
  426d03:	ja     0x426ce3
  426d05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d06:	ss mov al,0xa8
  426d09:	gs nop
  426d0b:	xchg   esp,eax
  426d0c:	fs in  eax,0x1
  426d0f:	add    BYTE PTR [edi-0x11fffffe],al
  426d15:	in     eax,0xab
  426d17:	ds pop esi
  426d19:	xor    al,0xcf
  426d1b:	icebp  
  426d1c:	pop    DWORD PTR [esi-0x6e263cac]
  426d22:	outs   dx,BYTE PTR ds:[esi]
  426d23:	pop    eax
  426d24:	enter  0x7871,0xf
  426d28:	add    al,0xf7
  426d2a:	arpl   si,dx
  426d2c:	sbb    eax,0x7cc10d28
  426d31:	loop   0x426d8f
  426d33:	pop    ecx
  426d34:	cmp    DWORD PTR [esi],0x87a712b2
  426d3a:	gs jmp 0x33d9:0xacb83756
  426d42:	aaa    
  426d43:	popa   
  426d44:	jnp    0x426d40
  426d46:	xchg   edx,eax
  426d47:	pop    esi
  426d48:	addr16 inc ebp
  426d4a:	dec    ebp
  426d4b:	lods   al,BYTE PTR ds:[esi]
  426d4c:	cmp    DWORD PTR ss:[esi+0x34793527],ecx
  426d53:	add    eax,0xc8a836c8
  426d58:	dec    eax
  426d59:	mov    cl,0xd4
  426d5b:	test   DWORD PTR [ebx-0x2],ecx
  426d5e:	inc    esp
  426d5f:	sbb    BYTE PTR [eax],ch
  426d61:	test   BYTE PTR ds:0x218028ce,dh
  426d67:	push   ebx
  426d68:	push   0xdfcf86cc
  426d6d:	xlat   BYTE PTR ds:[ebx]
  426d6e:	or     al,0x57
  426d70:	push   eax
  426d71:	loope  0x426cf7
  426d73:	aas    
  426d74:	xchg   edi,eax
  426d75:	pop    es
  426d76:	mov    dl,BYTE PTR [esi+0x28ae638f]
  426d7c:	out    0x20,al
  426d7e:	mul    DWORD PTR [ebx-0x566cc46b]
  426d84:	pop    es
  426d85:	dec    ebx
  426d86:	cdq    
  426d87:	std    
  426d88:	xor    al,0xfa
  426d8a:	push   cs
  426d8b:	adc    dl,BYTE PTR [edi+0xf18d825]
  426d91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d92:	jb     0x426d56
  426d94:	sbb    edx,DWORD PTR [edi+0x5fb48f44]
  426d9a:	inc    esp
  426d9b:	dec    ecx
  426d9c:	das    
  426d9d:	mov    al,0xbf
  426d9f:	pop    ecx
  426da0:	gs addr16 push ecx
  426da3:	jbe    0x426d56
  426da5:	or     BYTE PTR [ebx+ebp*8],bh
  426da8:	cmp    DWORD PTR [esi-0x66c6605b],0x74
  426daf:	rcl    BYTE PTR [eax+edi*4+0x7de224bc],1
  426db6:	data16 js 0x426e1f
  426db9:	sbb    BYTE PTR [ecx+0x7e],ch
  426dbc:	jno    0x426d6c
  426dbe:	fadd   QWORD PTR [eax]
  426dc0:	dec    ebp
  426dc1:	aas    
  426dc2:	mov    ebx,0x888d8849
  426dc7:	fidivr WORD PTR [edi]
  426dc9:	les    eax,FWORD PTR [ebx]
  426dcb:	cdq    
  426dcc:	(bad)  
  426dcd:	mov    ecx,0x6957bee8
  426dd2:	fisub  WORD PTR [esi]
  426dd4:	sub    al,0xc1
  426dd6:	outs   dx,BYTE PTR ds:[esi]
  426dd7:	and    al,0x6d
  426dd9:	push   edx
  426dda:	fwait
  426ddb:	ret    
  426ddc:	pop    eax
  426ddd:	push   edx
  426dde:	call   0xb43ca786
  426de3:	std    
  426de4:	xor    edx,DWORD PTR [edi-0x32f53401]
  426dea:	test   DWORD PTR [ecx],ecx
  426dec:	std    
  426ded:	aad    0x9
  426def:	mov    esp,0x272f33cf
  426df4:	add    al,0x6d
  426df6:	add    ecx,0xffffffa8
  426df9:	pop    edi
  426dfa:	jmp    0x3f6befe9
  426dff:	clc    
  426e00:	and    al,0x45
  426e02:	addr16 mov al,ds:0x6d6d
  426e07:	dec    eax
  426e08:	lds    edx,FWORD PTR [edi-0x58e9620f]
  426e0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e0f:	sbb    eax,DWORD PTR [edx-0x22625010]
  426e15:	pop    eax
  426e16:	adc    edi,esp
  426e18:	cmp    al,0x1a
  426e1a:	mov    ebp,0xd9897d8f
  426e1f:	add    eax,0x6e899f14
  426e24:	popf   
  426e25:	dec    ebp
  426e26:	ds (bad) 
  426e29:	call   0xcb3603b3
  426e2e:	xor    cl,BYTE PTR [edi+0x4a6cc17d]
  426e34:	mov    ah,0x73
  426e36:	into   
  426e37:	mov    bl,BYTE PTR [ecx+0x48]
  426e3a:	xchg   esp,eax
  426e3b:	or     esp,DWORD PTR [eax-0x26516275]
  426e41:	je     0x426e0a
  426e43:	sub    esp,0xffffffa8
  426e46:	loop   0x426e25
  426e48:	sub    DWORD PTR [esi+ebx*1-0x7fefa1],esp
  426e4f:	mov    bl,0xe0
  426e51:	lock stos DWORD PTR es:[edi],eax
  426e53:	jae    0x426de4
  426e55:	aad    0xa5
  426e57:	add    dh,dl
  426e59:	pop    ecx
  426e5a:	(bad)  
  426e5b:	sar    BYTE PTR [esi+eiz*8],cl
  426e5e:	jp     0x426df7
  426e60:	fdiv   DWORD PTR [edx+0x6328d366]
  426e66:	div    edi
  426e68:	jle    0x426e33
  426e6a:	or     BYTE PTR [edx],bh
  426e6c:	push   0x65c8ff06
  426e71:	jg     0x426e52
  426e73:	lahf   
  426e74:	xlat   BYTE PTR ds:[ebx]
  426e75:	dec    ebx
  426e76:	mov    bl,ch
  426e78:	in     al,0x17
  426e7a:	add    edx,DWORD PTR [ebx+esi*4]
  426e7d:	fld    TBYTE PTR [edx-0x5e]
  426e80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e81:	es cli 
  426e83:	rcl    BYTE PTR ds:0x207280c6,0x58
  426e8a:	ror    BYTE PTR [ebp+0x3699a14d],cl
  426e90:	mov    cl,0xe8
  426e92:	jp     0x426eee
  426e94:	or     BYTE PTR [ebp+0xc],ah
  426e97:	hlt    
  426e98:	nop
  426e99:	gs in  eax,0x8e
  426e9c:	mov    ebx,0x83dd6ddb
  426ea1:	mov    cl,0xbb
  426ea3:	dec    ebp
  426ea4:	test   BYTE PTR [eax-0x49],bl
  426ea7:	sub    BYTE PTR [ebx],dh
  426ea9:	imul   esi
  426eab:	icebp  
  426eac:	ds aaa 
  426eae:	xchg   edi,eax
  426eaf:	test   al,0xb8
  426eb1:	lahf   
  426eb2:	outs   dx,DWORD PTR ds:[esi]
  426eb3:	in     eax,dx
  426eb4:	xor    DWORD PTR [ebx+0x615c6e3f],edx
  426eba:	test   eax,0xd2c36ef2
  426ebf:	(bad)  
  426ec0:	push   edx
  426ec1:	fisub  DWORD PTR [ecx+0x5d]
  426ec4:	ror    DWORD PTR [edx+0x59],cl
  426ec7:	fmul   QWORD PTR [edx-0x29c4c2ec]
  426ecd:	test   DWORD PTR [ebp-0x71351484],ecx
  426ed3:	iret   
  426ed4:	lahf   
  426ed5:	or     esp,DWORD PTR [edx+0x6d]
  426ed8:	popa   
  426ed9:	mov    ds:0xc22d82b9,eax
  426ede:	popf   
  426edf:	add    ah,BYTE PTR [ebx+0x57]
  426ee2:	fs mov ah,0xe9
  426ee5:	gs and bl,BYTE PTR ds:[ecx-0x16]
  426eea:	pushf  
  426eeb:	sbb    ch,BYTE PTR [eax-0x1db17d79]
  426ef1:	jnp    0x426f2b
  426ef3:	dec    ebx
  426ef4:	cld    
  426ef5:	dec    edx
  426ef6:	xor    al,0xe7
  426ef8:	repnz jecxz 0x426f11
  426efb:	test   edi,edi
  426efd:	cli    
  426efe:	push   eax
  426eff:	repnz dec esp
  426f01:	addr16 out dx,al
  426f03:	mov    eax,0x2478d131
  426f08:	xchg   ebp,eax
  426f09:	jmp    0x426f19
  426f0b:	in     al,dx
  426f0c:	inc    ebp
  426f0d:	loope  0x426f3d
  426f0f:	ret    
  426f10:	xor    eax,0x9ea8699f
  426f15:	repz sbb esp,DWORD PTR [eax]
  426f18:	jg     0x426ee3
  426f1a:	ror    ah,cl
  426f1c:	jno    0x426ece
  426f1e:	fs daa 
  426f20:	cli    
  426f21:	stos   BYTE PTR es:[edi],al
  426f22:	jnp    0x426f60
  426f24:	repnz push ds
  426f26:	adc    DWORD PTR [ebx+0x14],0x2c
  426f2a:	fsubr  DWORD PTR [edi+0x4acebe2c]
  426f30:	aam    0x87
  426f32:	rcl    ecx,1
  426f34:	call   FWORD PTR [edi-0x69]
  426f37:	jne    0x426f5a
  426f39:	jmp    0x2bf6:0x6178c1c0
  426f40:	out    0x1a,eax
  426f42:	int    0xe9
  426f44:	imul   ecx,DWORD PTR [esi-0x4a],0x4e
  426f48:	in     al,0xca
  426f4a:	test   BYTE PTR [eax],cl
  426f4c:	out    0x64,al
  426f4e:	mov    al,0xcc
  426f50:	inc    eax
  426f51:	lods   eax,DWORD PTR ds:[esi]
  426f52:	and    BYTE PTR [eax+0x7d],cl
  426f55:	pop    ecx
  426f56:	ins    BYTE PTR es:[edi],dx
  426f57:	xchg   esp,eax
  426f58:	mov    bl,0x43
  426f5a:	jge    0x426f98
  426f5c:	push   ss
  426f5d:	out    0xab,al
  426f5f:	push   es
  426f60:	loope  0x426fde
  426f62:	(bad)  
  426f63:	pop    edx
  426f64:	jns    0x426f78
  426f66:	shr    DWORD PTR [eax],cl
  426f68:	xchg   edx,eax
  426f69:	xor    al,BYTE PTR [edx]
  426f6b:	or     eax,0x2795785
  426f70:	sub    BYTE PTR [edi-0x43d2a682],al
  426f76:	sub    al,0xc6
  426f78:	pop    eax
  426f79:	inc    esi
  426f7a:	(bad)  
  426f7c:	push   ds
  426f7d:	pop    ds
  426f7e:	fdivr  st(5),st
  426f80:	jp     0x426f73
  426f82:	xor    al,0xf5
  426f84:	dec    eax
  426f85:	fs aad 0x4b
  426f88:	aas    
  426f89:	cmp    al,0x8d
  426f8b:	pop    ss
  426f8c:	(bad)
  426f8f:	jne    0x426f13
  426f91:	pop    ebx
  426f92:	das    
  426f93:	int3   
  426f94:	retf   0x6044
  426f97:	imul   DWORD PTR [edx]
  426f99:	push   esi
  426f9a:	sbb    DWORD PTR [eax],eax
  426f9c:	cdq    
  426f9d:	enter  0x9ff8,0xf9
  426fa1:	mov    edi,0xdf92ceff
  426fa6:	push   ds
  426fa7:	outs   dx,BYTE PTR ds:[esi]
  426fa8:	addr16 addr16 inc ebx
  426fab:	pop    ebp
  426fac:	jmp    0x426f95
  426fae:	add    DWORD PTR [eax],eax
  426fb0:	xchg   DWORD PTR [edx],eax
  426fb2:	add    BYTE PTR [eax],al
  426fb4:	cmp    ah,BYTE PTR [ecx]
  426fb6:	jle    0x426fa7
  426fb8:	mov    eax,ds:0xe03a6b28
  426fbd:	xchg   ecx,eax
  426fbe:	sbb    bl,BYTE PTR [edi-0x5e]
  426fc1:	(bad)  
  426fc2:	in     eax,dx
  426fc3:	adc    DWORD PTR [ecx-0x7d],ebp
  426fc6:	lods   eax,DWORD PTR ds:[esi]
  426fc7:	pop    edi
  426fc8:	push   cs
  426fc9:	movups xmm5,XMMWORD PTR [edx]
  426fcc:	inc    ecx
  426fcd:	push   eax
  426fce:	mov    bl,BYTE PTR [edi+edx*2]
  426fd1:	pop    ebx
  426fd2:	mov    DWORD PTR [edx+edx*2+0x4a6468b],ebx
  426fd9:	mov    ch,0xff
  426fdb:	call   0xcaf89fbd
  426fe0:	lds    eax,FWORD PTR [eax]
  426fe2:	fadd   st(1),st
  426fe4:	inc    ecx
  426fe5:	and    al,0x72
  426fe7:	or     eax,0x97f4cb29
  426fec:	xor    ch,BYTE PTR [ecx-0x4a9a5e96]
  426ff2:	aad    0x96
  426ff4:	imul   ebp
  426ff6:	aas    
  426ff7:	mov    ds:0x711ad58b,eax
  426ffc:	pusha  
  426ffd:	push   esi
  426ffe:	test   al,0xe8
  427000:	idiv   BYTE PTR [eax-0x40bb426]
  427006:	rcr    DWORD PTR [ebp+esi*1-0x7afd17ed],1
  42700d:	and    BYTE PTR [esi-0x1194b78b],dl
  427013:	add    BYTE PTR [ecx+0x7d78f293],al
  427019:	pop    es
  42701a:	cmp    cl,BYTE PTR [edx+0x16]
  42701d:	adc    dh,0x69
  427020:	enter  0xa960,0xa6
  427024:	add    BYTE PTR [ecx],cl
  427026:	lahf   
  427027:	popf   
  427028:	add    BYTE PTR [ecx+0x20d179a8],bl
  42702e:	adc    eax,0xf098793d
  427033:	mov    esp,0x857956a2
  427038:	or     eax,0x33c6c8e2
  42703d:	dec    ebp
  42703e:	sub    esi,edi
  427040:	mov    eax,ds:0x102f05a3
  427045:	push   ebx
  427046:	mov    edi,0x5c9fd302
  42704b:	retf   
  42704c:	hlt    
  42704d:	adc    DWORD PTR [esi],esi
  42704f:	mov    eax,0xc25a4a0f
  427054:	mov    dh,0x2b
  427056:	jnp    0x427085
  427058:	cdq    
  427059:	pop    eax
  42705a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42705b:	(bad)  
  42705c:	cmc    
  42705d:	int    0xe5
  42705f:	mov    ebx,0xbc764b7
  427064:	fiadd  WORD PTR [esi+0x16]
  427067:	aaa    
  427068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427069:	jnp    0x42702f
  42706b:	xchg   ecx,eax
  42706c:	sub    bh,BYTE PTR [ebx]
  42706e:	fs aam 0xa8
  427071:	dec    edi
  427072:	push   es
  427073:	dec    edi
  427074:	cld    
  427075:	and    dh,bh
  427077:	clc    
  427078:	push   ebp
  427079:	pop    ebp
  42707a:	sub    esi,edi
  42707c:	or     BYTE PTR [esi+0x1e],dh
  42707f:	jp     0x4270d2
  427081:	xchg   esp,eax
  427082:	lods   eax,DWORD PTR ds:[esi]
  427083:	adc    DWORD PTR [edx+0x30],ecx
  427086:	shl    DWORD PTR [ecx+0x41172d96],0x77
  42708d:	push   ds
  42708e:	mov    ah,0xaa
  427090:	and    bh,BYTE PTR [ebp-0x39]
  427093:	cmc    
  427094:	xor    eax,DWORD PTR [esi+0x7e]
  427097:	xchg   ecx,eax
  427098:	addr16 push edi
  42709a:	out    0xaf,eax
  42709c:	stos   DWORD PTR es:[edi],eax
  42709d:	xor    al,0xe6
  42709f:	out    0x26,al
  4270a1:	mul    DWORD PTR [ebx-0x1b49a7f2]
  4270a7:	lock mov eax,ds:0x38c05eac
  4270ad:	js     0x427053
  4270af:	jecxz  0x4270a5
  4270b1:	mov    eax,edi
  4270b3:	mov    ds:0x515aa11b,al
  4270b8:	lock call 0x8fd00b26
  4270be:	ins    DWORD PTR es:[edi],dx
  4270bf:	push   ebp
  4270c0:	fmulp  st(1),st
  4270c2:	inc    ebp
  4270c3:	sbb    bl,bl
  4270c5:	inc    edx
  4270c6:	jp     0x4270cb
  4270c8:	push   0x345f4e00
  4270cd:	sahf   
  4270ce:	mov    al,ds:0x3225220b
  4270d3:	and    al,0x6e
  4270d5:	fwait
  4270d6:	add    eax,0xd91c1a06
  4270db:	jns    0x4270ed
  4270dd:	das    
  4270de:	out    dx,eax
  4270df:	pop    edi
  4270e0:	fmul   QWORD PTR [edi]
  4270e2:	test   BYTE PTR [edi+0x69e97b18],0x9
  4270e9:	mov    WORD PTR [ebx],fs
  4270eb:	arpl   WORD PTR [ecx+0x167f222e],cx
  4270f1:	stc    
  4270f2:	shr    BYTE PTR [ebp-0x60],0x64
  4270f6:	sub    al,0x3f
  4270f8:	cdq    
  4270f9:	dec    esp
  4270fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4270fb:	mov    bh,0x5e
  4270fd:	loopne 0x427162
  4270ff:	into   
  427100:	sahf   
  427101:	xchg   edx,eax
  427102:	or     cl,ah
  427104:	and    al,0xc2
  427106:	fidiv  DWORD PTR [esi]
  427108:	sbb    eax,0xf232d8bb
  42710d:	cli    
  42710e:	mov    esp,0xbf0b9e6d
  427113:	push   esi
  427114:	jg     0x4270b7
  427116:	enter  0xdcac,0x22
  42711a:	aad    0xd5
  42711c:	repnz dec ebp
  42711e:	ret    
  42711f:	mov    DWORD PTR [ebp-0x48],eax
  427122:	cmp    BYTE PTR [eax-0x5216e8c8],0xee
  427129:	adc    al,0x68
  42712b:	xchg   edi,eax
  42712c:	sbb    al,0xaa
  42712e:	arpl   WORD PTR [esi],cx
  427130:	les    ebp,FWORD PTR [ebx-0x7a3ea085]
  427136:	mov    BYTE PTR [ebp+0x18],ch
  427139:	cmc    
  42713a:	data16 add al,BYTE PTR [edx+0x4ee3348e]
  427141:	arpl   WORD PTR [eax],sp
  427143:	jb     0x4271af
  427145:	shr    ch,1
  427147:	aad    0xe1
  427149:	pushf  
  42714a:	jns    0x427150
  42714c:	fnstsw WORD PTR [edi]
  42714e:	popf   
  42714f:	sahf   
  427150:	sahf   
  427151:	in     al,0xd3
  427153:	icebp  
  427154:	xchg   esi,eax
  427155:	popf   
  427156:	(bad)  
  427157:	dec    ecx
  427158:	imul   edi,esi,0x70836346
  42715e:	unpckhps xmm4,XMMWORD PTR [eax+eiz*2-0x22]
  427163:	jb     0x4271d1
  427165:	rol    DWORD PTR [ecx],cl
  427167:	mov    al,0xee
  427169:	or     DWORD PTR [eax-0x27fc795e],ecx
  42716f:	pop    edx
  427170:	and    esp,DWORD PTR [ecx+esi*1]
  427173:	sbb    eax,0x19306c4
  427178:	or     DWORD PTR [ecx],ebx
  42717a:	loopne 0x42713b
  42717c:	sti    
  42717d:	mov    eax,ds:0xd2d1904
  427182:	jb     0x42710c
  427184:	sahf   
  427185:	or     BYTE PTR [ebx-0x4b],bl
  427188:	xor    eax,0xf923d0b7
  42718d:	mov    eax,ds:0x7af5fba7
  427192:	sbb    ch,cl
  427194:	cdq    
  427195:	(bad)  
  427197:	dec    esi
  427198:	mov    ch,0x7c
  42719a:	arpl   WORD PTR [edx],cx
  42719c:	fdivr  DWORD PTR [eax+0x36]
  42719f:	sub    DWORD PTR [ebp+0x60f4b328],eax
  4271a5:	push   DWORD PTR [ebp+0x54]
  4271a8:	fiadd  DWORD PTR [ebp-0x52]
  4271ab:	fwait
  4271ac:	add    BYTE PTR [ebp+0x795bd661],0x65
  4271b3:	dec    ecx
  4271b4:	rcr    BYTE PTR [esi+0x23af8eb2],1
  4271ba:	pop    ebx
  4271bb:	clc    
  4271bc:	pop    ss
  4271bd:	push   edi
  4271be:	(bad)  
  4271bf:	popa   
  4271c0:	jne    0x427146
  4271c2:	sbb    al,0x1f
  4271c4:	fstp   QWORD PTR [esi+0x53730abb]
  4271ca:	mov    al,ds:0x3aeaf0b2
  4271cf:	pop    ebx
  4271d0:	cmc    
  4271d1:	jno    0x427250
  4271d3:	icebp  
  4271d4:	and    ecx,ebx
  4271d6:	mov    al,0x18
  4271d8:	sbb    dh,BYTE PTR [edi]
  4271da:	mov    WORD PTR [ebx-0x4c],ss
  4271dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4271de:	add    dh,BYTE PTR [esp+ecx*2-0x2]
  4271e2:	aad    0xd8
  4271e4:	rcr    BYTE PTR [eax+eax*2+0x14],0xd0
  4271e9:	or     BYTE PTR [eax-0x1f],cl
  4271ec:	fld    DWORD PTR [eax-0x4d16830b]
  4271f3:	add    bh,bh
  4271f5:	idiv   BYTE PTR [edx]
  4271f7:	inc    ecx
  4271f8:	jmp    0xae1aa8ee
  4271fd:	cli    
  4271fe:	(bad)  
  4271ff:	cli    
  427200:	cmp    BYTE PTR [esi+0x28],dh
  427203:	add    cl,cl
  427205:	sbb    dh,BYTE PTR [ebp-0x38]
  427208:	(bad)
  42720b:	push   ds
  42720c:	rcl    ecx,0x5a
  42720f:	cmp    eax,0xd21f304
  427214:	push   ss
  427215:	(bad)  
  427216:	mov    ch,0xcc
  427218:	addr16 xchg esi,eax
  42721a:	mov    edx,0xdfef67ee
  42721f:	jb     0x4271dd
  427221:	mov    WORD PTR [ecx+ebx*2-0x3d957ec9],cs
  427228:	and    BYTE PTR [eax-0x3d],dh
  42722b:	ins    DWORD PTR es:[edi],dx
  42722c:	cmc    
  42722d:	call   0xcd94cdf1
  427232:	push   ecx
  427233:	jbe    0x427232
  427235:	lods   al,BYTE PTR ds:[esi]
  427236:	call   0x7900:0x726ac449
  42723d:	or     ah,BYTE PTR [ebp+0x18]
  427240:	ja     0x4272c1
  427242:	jge    0x4272af
  427244:	int3   
  427245:	outs   dx,BYTE PTR ds:[esi]
  427246:	xchg   esi,esi
  427248:	(bad)  
  42724a:	add    BYTE PTR [ecx+0x1ea72],dl
  427250:	xchg   DWORD PTR [edx],eax
  427252:	add    BYTE PTR [eax],al
  427254:	das    
  427255:	ins    BYTE PTR es:[edi],dx
  427256:	ficomp WORD PTR [esi+0x39]
  427259:	xor    esi,DWORD PTR [esi+0x556c5c4e]
  42725f:	fld    TBYTE PTR [eax]
  427261:	xchg   ebx,eax
  427262:	test   eax,0xcbb464d0
  427267:	mov    ds:0x93e32567,eax
  42726c:	(bad)  
  42726d:	mov    dl,0x6d
  42726f:	gs js  0x427265
  427272:	shl    BYTE PTR [esi],1
  427274:	and    DWORD PTR [ebp+0x12f5ac77],ecx
  42727a:	mov    ecx,0xe197c664
  42727f:	cli    
  427280:	cmc    
  427281:	add    esi,DWORD PTR [eax+0x6fb5cfad]
  427287:	cdq    
  427288:	retf   0xc13f
  42728b:	jmp    0x4b40:0xcf13fe4d
  427292:	and    DWORD PTR [ecx],0x8a4ab6c2
  427298:	jmp    0x4272aa
  42729a:	dec    esi
  42729b:	dec    ecx
  42729c:	xlat   BYTE PTR ds:[ebx]
  42729d:	stos   BYTE PTR es:[edi],al
  42729e:	(bad)  
  42729f:	mov    ah,0x2a
  4272a1:	lock (bad) 
  4272a4:	ret    
  4272a5:	inc    ecx
  4272a6:	jmp    0xf89a:0xde25c6a7
  4272ad:	leave  
  4272ae:	sbb    dh,BYTE PTR [edi]
  4272b0:	std    
  4272b1:	in     al,dx
  4272b2:	jge    0x427257
  4272b4:	fs dec edx
  4272b6:	std    
  4272b7:	fnstcw WORD PTR [esi+0x42]
  4272ba:	aam    0x3f
  4272bc:	pop    edi
  4272bd:	inc    ebp
  4272be:	inc    ecx
  4272bf:	ss jmp 0x48eb:0x8e571d4b
  4272c7:	push   esi
  4272c8:	repnz call 0xb9ae:0x26dfdb4a
  4272d0:	push   ss
  4272d1:	xor    al,0xe
  4272d3:	xchg   BYTE PTR [edi+0x2ed7935a],bl
  4272d9:	addr16 pop ds
  4272db:	fld    TBYTE PTR [edi+0xb26f6f4]
  4272e1:	iret   
  4272e2:	retf   0x60f
  4272e5:	pop    ds
  4272e6:	mov    ebx,DWORD PTR gs:[edi-0x5c]
  4272ea:	ror    BYTE PTR [esi],cl
  4272ec:	push   esi
  4272ed:	mov    DWORD PTR [eax-0x54b24fe5],ecx
  4272f3:	cdq    
  4272f4:	or     al,0x78
  4272f6:	je     0x427320
  4272f8:	sbb    edx,edx
  4272fa:	jl     0x427292
  4272fc:	xor    dl,dl
  4272fe:	into   
  4272ff:	mov    eax,0xa55837f2
  427304:	dec    esp
  427305:	push   0x214643c0
  42730a:	add    DWORD PTR [esi+0xe],edx
  42730d:	hlt    
  42730e:	jae    0x4272d7
  427310:	gs cmc 
  427312:	cli    
  427313:	arpl   WORD PTR [ecx],dx
  427315:	in     al,dx
  427316:	lock addr16 cmp bh,bl
  42731a:	imul   ecx,DWORD PTR [ecx-0x8ace5e7],0x4
  427321:	pop    ebp
  427322:	fiadd  DWORD PTR ds:0xd446477b
  427328:	in     al,dx
  427329:	xor    ebx,DWORD PTR [eax-0x64]
  42732c:	jb     0x427375
  42732e:	mov    ch,0xed
  427330:	icebp  
  427331:	inc    ebx
  427332:	cmp    BYTE PTR [esi-0x1d179976],al
  427338:	xor    ebp,ecx
  42733a:	hlt    
  42733b:	ja     0x4272d0
  42733d:	pop    eax
  42733e:	mov    WORD PTR [eax],ss
  427340:	loopne 0x42733a
  427342:	xor    al,bl
  427344:	scas   eax,DWORD PTR es:[edi]
  427345:	call   0x3c91:0x76194224
  42734c:	stos   DWORD PTR es:[edi],eax
  42734d:	fdiv   DWORD PTR [esp+ebx*1]
  427350:	mov    bh,0x31
  427352:	pop    ebp
  427353:	rol    ebp,0x5c
  427356:	xchg   edi,eax
  427357:	sub    bl,BYTE PTR ds:0x48adf0e5
  42735d:	xchg   ecx,eax
  42735e:	and    bl,0x7e
  427361:	call   0x91a92a72
  427366:	es dec eax
  427368:	popf   
  427369:	and    eax,0xf37a93fc
  42736e:	push   edx
  42736f:	pop    ecx
  427370:	push   ss
  427371:	mov    eax,ds:0x8e1e773a
  427376:	push   eax
  427377:	je     0x427341
  427379:	dec    edx
  42737a:	xchg   ebp,eax
  42737b:	aam    0x19
  42737d:	lock les edx,FWORD PTR [edi-0x148ec54a]
  427384:	js     0x4273ef
  427386:	sbb    BYTE PTR [ebp+0x17],0xe2
  42738a:	mov    WORD PTR [ecx-0x5714b0a3],?
  427390:	or     edx,edi
  427392:	test   DWORD PTR [eax-0x24596c3a],eax
  427398:	dec    ebp
  427399:	cs pop ecx
  42739b:	sbb    DWORD PTR [ecx],edi
  42739d:	ret    0x9ffd
  4273a0:	outs   dx,DWORD PTR ds:[esi]
  4273a1:	retf   
  4273a2:	not    BYTE PTR [esi]
  4273a4:	pusha  
  4273a5:	cdq    
  4273a6:	inc    ebp
  4273a7:	test   DWORD PTR [edi-0x54],ecx
  4273aa:	inc    edi
  4273ab:	loope  0x42736f
  4273ad:	(bad)  
  4273ae:	xchg   esi,eax
  4273af:	pop    edi
  4273b0:	call   0x5492:0xcc4fb7ed
  4273b7:	aas    
  4273b8:	mov    cl,0xcf
  4273ba:	mov    cl,0x39
  4273bc:	pop    es
  4273bd:	inc    esi
  4273be:	aaa    
  4273bf:	xchg   ecx,eax
  4273c0:	adc    BYTE PTR [edi],dh
  4273c2:	mov    WORD PTR ds:[ecx],ds
  4273c5:	cmp    eax,0x2ad935a8
  4273ca:	inc    ebp
  4273cb:	cmc    
  4273cc:	mov    eax,0x6c9ed95d
  4273d1:	inc    esi
  4273d2:	jecxz  0x427363
  4273d4:	mov    ss,ebp
  4273d6:	fs mov dh,0x4f
  4273d9:	ja     0x4273af
  4273db:	jb     0x4273d8
  4273dd:	or     edx,DWORD PTR [ecx+0x19]
  4273e0:	test   al,0x91
  4273e2:	mov    al,0x1a
  4273e4:	lahf   
  4273e5:	dec    esi
  4273e6:	pop    ebx
  4273e7:	add    eax,0x19ddd0eb
  4273ec:	inc    edx
  4273ed:	xchg   edi,eax
  4273ee:	retf   0xab07
  4273f1:	sbb    DWORD PTR [ecx+0x5db4697],edx
  4273f7:	daa    
  4273f8:	pop    esi
  4273f9:	dec    ecx
  4273fa:	push   edi
  4273fb:	mov    ss:0x2152f85f,eax
  427401:	ficomp WORD PTR [esi+edi*2]
  427404:	pusha  
  427405:	gs or  BYTE PTR ds:[ecx-0x3f],dl
  42740a:	mov    WORD PTR [edi+0x34],?
  42740d:	adc    edx,DWORD PTR [ecx]
  42740f:	shl    BYTE PTR [edx+0x5ef8b513],1
  427415:	xor    al,0xe9
  427417:	cdq    
  427418:	sbb    esp,DWORD PTR [ebx+eax*1-0x7f]
  42741c:	adc    BYTE PTR [ecx-0x7b],dh
  42741f:	sub    al,BYTE PTR ds:0x4ff37550
  427425:	stos   DWORD PTR es:[edi],eax
  427426:	sbb    bh,BYTE PTR [edi+0x3deb65d]
  42742c:	lahf   
  42742d:	jg     0x4273df
  42742f:	ins    BYTE PTR es:[edi],dx
  427430:	inc    esi
  427431:	sbb    al,0x63
  427433:	xor    eax,0x42ecfd1c
  427438:	pop    eax
  427439:	xor    eax,esi
  42743b:	jmp    0x7f275d9
  427440:	int3   
  427441:	and    ah,ah
  427443:	mov    ds:0x45f144bf,al
  427448:	xor    al,0xbb
  42744a:	sbb    eax,0x318ce233
  42744f:	sti    
  427450:	add    BYTE PTR [esi],bh
  427452:	jg     0x4274c5
  427454:	out    dx,eax
  427455:	xchg   edx,eax
  427456:	or     eax,DWORD PTR [ebp+0x11]
  427459:	jae    0x427481
  42745b:	mov    esp,DWORD PTR [eax]
  42745d:	and    al,bl
  42745f:	aad    0x90
  427461:	ins    DWORD PTR es:[edi],dx
  427462:	add    eax,0xaff82e04
  427467:	sub    ch,BYTE PTR [eax]
  427469:	and    dh,ch
  42746b:	lea    esp,[ebx-0x21009d44]
  427471:	jnp    0x427428
  427473:	add    al,0x2c
  427475:	cmp    bh,BYTE PTR [eax+0x3b]
  427478:	test   bh,bh
  42747a:	mov    bh,0x7d
  42747c:	lea    sp,[esp+eiz*2-0x106652da]
  427484:	stos   BYTE PTR es:[edi],al
  427485:	ja     0x42746a
  427487:	push   esi
  427488:	data16 stc 
  42748a:	outs   dx,DWORD PTR ds:[esi]
  42748b:	pop    ecx
  42748c:	adc    al,0xb7
  42748e:	cmp    bh,BYTE PTR ds:0x7bcc5ad3
  427494:	test   BYTE PTR [esi+0x786f95d2],cl
  42749a:	or     BYTE PTR [esi+0x7b04a241],0x35
  4274a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4274a2:	add    dh,BYTE PTR [edx-0x72]
  4274a5:	adc    al,0xbd
  4274a7:	inc    ecx
  4274a8:	aad    0xa3
  4274aa:	add    ecx,DWORD PTR [edx-0x1e]
  4274ad:	dec    esp
  4274ae:	hlt    
  4274af:	int    0xef
  4274b1:	test   BYTE PTR [ecx],ah
  4274b3:	push   ebp
  4274b4:	xor    eax,0x9ec39b7a
  4274b9:	shl    bh,0x81
  4274bc:	les    eax,FWORD PTR [ecx+0x1edc6b6d]
  4274c2:	pop    esp
  4274c3:	arpl   WORD PTR [ecx],sp
  4274c5:	push   eax
  4274c6:	nop
  4274c7:	imul   ebp,esp,0xbba423a3
  4274cd:	xor    dl,BYTE PTR [esp+ecx*8+0x7d]
  4274d1:	pop    ss
  4274d2:	shl    BYTE PTR [ebp-0x4e4ebca9],cl
  4274d8:	add    edi,DWORD PTR [esi+0x35900a8]
  4274de:	rol    DWORD PTR [ebx+ebx*8-0x3a],0xdd
  4274e3:	pop    ds
  4274e4:	sub    ebp,DWORD PTR [esi+0x1d3d3eba]
  4274ea:	add    eax,0x1ecf94c
  4274ef:	add    BYTE PTR [edi-0x7ffffffe],al
  4274f5:	sub    eax,0xf38669b4
  4274fa:	mov    bh,BYTE PTR [eax]
  4274fc:	leave  
  4274fd:	adc    eax,0x49d40b44
  427502:	xor    ebx,0x75945833
  427508:	fcomi  st,st(6)
  42750a:	pop    eax
  42750b:	pop    ecx
  42750c:	add    al,BYTE PTR [ebx+esi*4]
  42750f:	ror    BYTE PTR [ecx+0x6cd34386],1
  427515:	aad    0xcd
  427517:	add    ebx,DWORD PTR [eax+0x76]
  42751a:	ins    BYTE PTR es:[edi],dx
  42751b:	pop    ecx
  42751c:	pop    ebp
  42751d:	lods   al,BYTE PTR ds:[esi]
  42751e:	push   esi
  42751f:	inc    ebx
  427520:	jecxz  0x4274b9
  427522:	and    BYTE PTR [ecx-0x548286c4],bl
  427528:	je     0x427511
  42752a:	mov    BYTE PTR [esi],al
  42752c:	cmp    eax,0x59128a98
  427531:	mov    edx,DWORD PTR [ecx]
  427533:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427534:	iret   
  427535:	sti    
  427536:	mov    WORD PTR [eax+0x1e],es
  427539:	aad    0x9d
  42753b:	mov    dl,0xc1
  42753d:	sar    BYTE PTR [edi-0x62],1
  427540:	mov    ds:0x76a3f5b9,al
  427545:	jae    0x42757c
  427547:	mov    ebp,0xe7975da8
  42754c:	imul   ebp,DWORD PTR es:[eax+0x2b1bb3b3],0x6b
  427554:	mov    al,ds:0x9e6f0917
  427559:	clc    
  42755a:	xlat   BYTE PTR ss:[ebx]
  42755c:	pushf  
  42755d:	es int 0xda
  427560:	inc    esi
  427561:	xchg   edx,eax
  427562:	jnp    0x4275e1
  427564:	mov    WORD PTR [edx-0x46d19a43],?
  42756a:	pop    edx
  42756b:	sahf   
  42756c:	and    BYTE PTR [eax-0x71e11927],0x31
  427573:	add    eax,0x84fba980
  427578:	fmul   DWORD PTR [ebp-0x52e4c819]
  42757e:	xchg   esi,eax
  42757f:	sub    BYTE PTR [eax],0xd4
  427582:	mov    ds:0x4762d08e,al
  427587:	das    
  427588:	(bad)  
  427589:	mov    cl,0xa1
  42758b:	(bad)  
  42758c:	bound  edi,QWORD PTR [ecx+ebp*2+0x7b]
  427590:	cmp    bl,bh
  427592:	imul   edi,DWORD PTR [ebp+0x7e],0xffffffa1
  427596:	pop    eax
  427597:	iret   
  427598:	repz std 
  42759a:	jp     0x427529
  42759c:	add    BYTE PTR [edx+ebp*4+0x537f32af],0x12
  4275a4:	inc    eax
  4275a5:	and    bh,0x4d
  4275a8:	fwait
  4275a9:	out    dx,eax
  4275aa:	mov    esp,0x145aaef
  4275af:	lea    esi,[edx+0x5fac5f94]
  4275b5:	jne    0x4275ed
  4275b7:	dec    esp
  4275b8:	add    dh,BYTE PTR [edi]
  4275ba:	push   ds
  4275bb:	pop    es
  4275bc:	cdq    
  4275bd:	add    BYTE PTR [ebp+edi*2+0x523bb809],0x1c
  4275c5:	pop    ecx
  4275c6:	call   0x6329b9cd
  4275cb:	mov    al,0x29
  4275cd:	loope  0x4275c8
  4275cf:	and    al,0x82
  4275d1:	mov    dl,0xe5
  4275d3:	pop    eax
  4275d4:	inc    eax
  4275d5:	outs   dx,BYTE PTR ds:[esi]
  4275d6:	dec    esi
  4275d7:	inc    eax
  4275d8:	add    cl,BYTE PTR [ebp+0x53d45ec7]
  4275de:	dec    edi
  4275df:	aaa    
  4275e0:	mov    esi,0x55a06406
  4275e5:	loop   0x427583
  4275e7:	sar    DWORD PTR [eax-0x36],cl
  4275ea:	in     eax,dx
  4275eb:	sbb    BYTE PTR [eax-0x4],0x2
  4275ef:	je     0x4275ba
  4275f1:	inc    ecx
  4275f2:	and    eax,0x1b5d3efc
  4275f7:	pop    ebx
  4275f8:	or     al,0x1e
  4275fa:	mov    dh,0xdd
  4275fc:	sbb    ebx,DWORD PTR [eax+0x29]
  4275ff:	mov    BYTE PTR [ebx],dh
  427601:	jmp    FWORD PTR [eax+ebx*1]
  427604:	or     al,0x3f
  427606:	repz fadd DWORD PTR [esi]
  427609:	xor    eax,0xb247e1e1
  42760e:	(bad)  
  42760f:	xor    DWORD PTR [eax+0x1c],edi
  427612:	mov    edi,0xdafa7cd1
  427617:	fcom   DWORD PTR [edx+0x7e]
  42761a:	adc    cl,BYTE PTR ds:0x63ea48a5
  427620:	jns    0x42766d
  427622:	xchg   esp,eax
  427623:	fisubr DWORD PTR [ebp-0x9c760e6]
  427629:	inc    esi
  42762a:	jge    0x4275f6
  42762c:	add    al,cl
  42762e:	inc    eax
  42762f:	aaa    
  427630:	ror    DWORD PTR [esi],1
  427632:	cwde   
  427633:	mov    dh,0xec
  427635:	mov    WORD PTR [eax+0x4bd8b978],es
  42763b:	dec    edi
  42763c:	lea    esi,[esi-0x609ba2d0]
  427642:	aam    0x0
  427644:	jl     0x427631
  427646:	out    0x8f,eax
  427648:	xor    esi,DWORD PTR [eax-0x30]
  42764b:	xor    ebx,esi
  42764d:	mov    esi,0x3499298
  427652:	js     0x427634
  427654:	in     eax,dx
  427655:	jl     0x427653
  427657:	outs   dx,DWORD PTR ds:[esi]
  427658:	mov    esi,?
  42765a:	sub    DWORD PTR [ecx+0x4347fed9],ecx
  427660:	xchg   DWORD PTR [ebx+0x241249fe],eax
  427666:	test   BYTE PTR [ebx+0x78],bh
  427669:	dec    ebp
  42766a:	push   es
  42766b:	xchg   DWORD PTR [ecx],edx
  42766d:	mov    eax,ds
  42766f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427670:	neg    edi
  427672:	xchg   edi,eax
  427673:	dec    ebx
  427674:	in     eax,dx
  427675:	cmp    eax,edx
  427677:	into   
  427678:	push   cs
  427679:	pusha  
  42767a:	sbb    esp,esi
  42767c:	xor    DWORD PTR [edi+0x6b28f65],0xd695454a
  427686:	sbb    dh,BYTE PTR [ecx-0x18ae248a]
  42768c:	mov    eax,ds:0x78a4255a
  427691:	jl     0x4276ee
  427693:	mov    eax,ds:0x9e04c1bd
  427698:	cdq    
  427699:	icebp  
  42769a:	hlt    
  42769b:	inc    ebx
  42769c:	lds    eax,FWORD PTR [edx+ecx*4]
  42769f:	out    0x8b,eax
  4276a1:	or     al,0xef
  4276a3:	rol    edx,1
  4276a5:	jmp    0x26e6f07f
  4276aa:	not    DWORD PTR [edx+eiz*8+0x57]
  4276ae:	and    eax,0xd85ebe4d
  4276b3:	jno    0x427684
  4276b5:	bound  ecx,QWORD PTR [eax]
  4276b7:	xchg   ebx,eax
  4276b8:	stos   BYTE PTR es:[edi],al
  4276b9:	xchg   DWORD PTR [eax+esi*8],esp
  4276bc:	push   esi
  4276bd:	cwde   
  4276be:	(bad)  
  4276bf:	inc    ebp
  4276c1:	scas   al,BYTE PTR es:[edi]
  4276c2:	mov    al,0xb3
  4276c4:	cld    
  4276c5:	emms   
  4276c7:	cmp    BYTE PTR [edx-0x11179be3],cl
  4276cd:	pop    edx
  4276ce:	stos   DWORD PTR es:[edi],eax
  4276cf:	pop    ss
  4276d0:	mov    eax,0x315415ca
  4276d5:	mov    esp,0x6a5200b
  4276da:	ret    0x8ea1
  4276dd:	inc    edi
  4276de:	dec    ecx
  4276df:	sahf   
  4276e0:	xchg   edx,eax
  4276e1:	aad    0x2f
  4276e3:	cmp    al,0x88
  4276e5:	mov    eax,ds:0x79e97b3e
  4276ea:	mov    cl,0x60
  4276ec:	shr    ah,0x68
  4276ef:	push   edx
  4276f0:	lock cmp BYTE PTR [eax+edi*8-0x60],dl
  4276f5:	ds jnp 0x4276da
  4276f8:	add    eax,0xebe1365f
  4276fd:	mov    ebx,0xf9580dbb
  427702:	mov    ebp,0xb46eee02
  427707:	out    dx,eax
  427708:	je     0x427754
  42770a:	into   
  42770b:	fadd   DWORD PTR [esi-0x28e6d657]
  427711:	cmp    eax,ebp
  427713:	jns    0x4276b5
  427715:	call   0xdce0:0x2df3699a
  42771c:	jns    0x4276ce
  42771e:	ficomp DWORD PTR [ebp-0x34]
  427721:	mov    dl,BYTE PTR [edx]
  427723:	in     eax,0xfb
  427725:	xchg   esp,eax
  427726:	out    0xc5,eax
  427728:	je     0x427707
  42772a:	rcl    BYTE PTR [esp+eax*4],1
  42772d:	adc    eax,0x27e560ff
  427732:	pop    ecx
  427733:	lods   al,BYTE PTR ds:[esi]
  427734:	sub    bh,BYTE PTR [esi+0x2113ed00]
  42773a:	fwait
  42773b:	mov    eax,0x25dc569e
  427740:	inc    ecx
  427741:	out    dx,eax
  427742:	mov    WORD PTR [eax+0x3a82e57b],cs
  427748:	cmc    
  427749:	lahf   
  42774a:	adc    BYTE PTR [ebx],0x4e
  42774d:	pop    ebx
  42774e:	shl    BYTE PTR [edi],0x91
  427751:	xchg   edi,eax
  427752:	xor    ebp,eax
  427754:	lea    eax,[edi-0x36]
  427757:	xchg   ebx,ebx
  427759:	jb     0x427786
  42775b:	cmp    al,0xc0
  42775d:	pop    ds
  42775e:	or     DWORD PTR [edi+esi*2+0x5c],0xfffffff5
  427763:	xchg   edx,eax
  427764:	arpl   bx,di
  427766:	mov    ss,WORD PTR [edx+0x36]
  427769:	stc    
  42776a:	inc    ebx
  42776b:	push   eax
  42776c:	and    al,0x79
  42776e:	ja     0x427741
  427770:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427771:	add    eax,0x10f0ee35
  427776:	sbb    al,0x74
  427778:	mov    BYTE PTR [esi+eax*1],bl
  42777b:	add    BYTE PTR [ebx],bl
  42777d:	daa    
  42777e:	pushf  
  42777f:	cli    
  427780:	mov    esp,0x2ae77ffb
  427785:	scas   al,BYTE PTR es:[edi]
  427786:	aad    0xf
  427788:	lods   eax,DWORD PTR ds:[esi]
  427789:	sub    edx,DWORD PTR [ecx+0x1ef802b]
  42778f:	add    BYTE PTR [edi+0x2e000002],al
  427795:	jns    0x4277bf
  427797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427798:	ret    0xf094
  42779b:	add    BYTE PTR [edx+0x79],0x54
  42779f:	call   0xc951:0x1a64dd3c
  4277a6:	mov    cs:0x9f62b61e,al
  4277ac:	(bad)  
  4277ad:	mov    ch,0x47
  4277af:	pop    ss
  4277b0:	pop    esp
  4277b1:	popf   
  4277b2:	nop
  4277b3:	mov    ecx,0x2e94dfd
  4277b8:	sbb    al,0x69
  4277ba:	mov    al,0x41
  4277bc:	ficom  WORD PTR [edi]
  4277be:	dec    ebp
  4277bf:	mov    dl,0xf1
  4277c1:	loope  0x42774c
  4277c3:	pop    ebp
  4277c4:	inc    esi
  4277c5:	xor    DWORD PTR [edi-0xa444505],eax
  4277cb:	in     eax,0x35
  4277cd:	jns    0x42784e
  4277cf:	push   0x270336d2
  4277d4:	jns    0x4277ae
  4277d6:	mov    WORD PTR [ecx-0x3a28b03],gs
  4277dc:	and    bh,al
  4277de:	push   0xffffffa4
  4277e0:	nop
  4277e1:	pop    es
  4277e2:	mov    dh,cl
  4277e4:	xchg   ecx,eax
  4277e5:	loope  0x4277ee
  4277e7:	inc    edi
  4277e8:	call   0xb5a48d7
  4277ed:	repz sub eax,0x8c57252e
  4277f3:	add    ebp,DWORD PTR [esi+eiz*4-0x2c40c0e5]
  4277fa:	push   es
  4277fb:	cmc    
  4277fc:	push   cs
  4277fd:	inc    eax
  4277fe:	inc    ebp
  4277ff:	jmp    0xaeeed30d
  427804:	jmp    DWORD PTR [edx-0x73]
  427807:	stc    
  427808:	push   esp
  427809:	out    dx,al
  42780a:	sti    
  42780b:	pop    ebp
  42780c:	add    al,0x46
  42780e:	aaa    
  42780f:	pop    edi
  427810:	fdivr  QWORD PTR [ebx-0x28]
  427813:	push   edx
  427814:	and    al,0xd9
  427816:	push   ebx
  427817:	pop    eax
  427818:	inc    ebp
  427819:	xchg   esi,eax
  42781a:	jb     0x427816
  42781c:	int    0xf8
  42781e:	xor    cl,ch
  427820:	push   0x9b7b079a
  427825:	sbb    esi,ebp
  427827:	inc    ebp
  427828:	or     al,0x59
  42782a:	push   0x50
  42782c:	xchg   ebp,eax
  42782d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42782e:	mov    ch,0x1f
  427830:	lods   al,BYTE PTR ds:[esi]
  427831:	adc    BYTE PTR [esp+edi*8-0x73d1ba7a],dl
  427838:	jns    0x4278a3
  42783a:	jae    0x427896
  42783c:	push   esi
  42783d:	scas   eax,DWORD PTR es:[edi]
  42783e:	push   ebx
  42783f:	out    dx,eax
  427840:	xchg   ebx,eax
  427841:	jecxz  0x427859
  427843:	je     0x4277ec
  427845:	inc    edi
  427846:	mov    al,0x11
  427848:	adc    al,0xb9
  42784a:	outs   dx,DWORD PTR ds:[esi]
  42784b:	dec    BYTE PTR ss:[edi-0x529b4abf]
  427852:	jnp    0x427899
  427854:	or     al,ah
  427856:	jg     0x4278cb
  427858:	nop
  427859:	in     al,0xb7
  42785b:	js     0x4278c6
  42785d:	gs push 0xfffffff4
  427860:	mov    ch,0x25
  427862:	repnz mov esi,0xc61ef1f
  427868:	sub    dl,BYTE PTR [eax]
  42786a:	jne    0x42787c
  42786c:	jmp    0x7b3e:0x1c4a0278
  427873:	cmp    ecx,DWORD PTR [edi+0x71]
  427876:	call   FWORD PTR [eax-0xc]
  427879:	pop    edi
  42787a:	(bad)  [ebx-0x65f5f8ec]
  427880:	js     0x42786f
  427882:	aad    0x40
  427884:	mov    ch,0x73
  427886:	fdivr  st,st(4)
  427888:	pop    eax
  427889:	in     eax,dx
  42788a:	inc    ecx
  42788b:	inc    esp
  42788c:	and    eax,0xb97d673
  427891:	and    bl,BYTE PTR ds:0x2a789ef1
  427897:	in     al,dx
  427898:	cwde   
  427899:	jno    0x427862
  42789b:	ret    
  42789c:	pop    ds
  42789d:	add    DWORD PTR [ecx-0x5b],eax
  4278a0:	sbb    DWORD PTR [ecx+0x1b],esp
  4278a3:	test   DWORD PTR [ebx],edx
  4278a5:	pop    eax
  4278a6:	add    dl,BYTE PTR [edi-0x5b]
  4278a9:	(bad)  
  4278aa:	or     DWORD PTR [eax-0x51],esp
  4278ad:	pop    ss
  4278ae:	push   esp
  4278af:	or     BYTE PTR [esi-0x7cd08672],dl
  4278b5:	sar    DWORD PTR [ebp+0x7],cl
  4278b8:	bound  esi,QWORD PTR [esp+eiz*8+0x4c1ab6d]
  4278bf:	ins    DWORD PTR es:[edi],dx
  4278c0:	outs   dx,DWORD PTR ds:[esi]
  4278c1:	pop    ecx
  4278c2:	jne    0x427859
  4278c4:	cs aas 
  4278c6:	mov    eax,ds:0xcdb42ace
  4278cb:	mov    DWORD PTR [ecx+0x3588bb8e],ecx
  4278d1:	xor    BYTE PTR [eax-0x5a],dl
  4278d4:	cmp    eax,0xdd76a8a1
  4278d9:	cmp    eax,0xa83b0240
  4278de:	cs xchg ebx,eax
  4278e0:	add    DWORD PTR [esi+esi*1-0x70],edx
  4278e4:	popa   
  4278e5:	xchg   edx,eax
  4278e6:	mov    esp,0x10eae0e0
  4278eb:	push   cs
  4278ec:	mov    WORD PTR [edi+0x3ea7ac95],ss
  4278f2:	mov    ds:0x7205744b,al
  4278f7:	leave  
  4278f8:	sub    eax,0x77e1f635
  4278fd:	add    BYTE PTR [eax-0x5c812f3c],cl
  427903:	jo     0x42792d
  427905:	clc    
  427906:	push   ds
  427907:	and    ch,cl
  427909:	repnz repz mov edi,0x3708f5f8
  427910:	xchg   esp,eax
  427911:	imul   ebx,ebp,0xffffff8b
  427914:	out    0xf5,al
  427916:	fstp   st(3)
  427918:	adc    eax,0xc36bbfc
  42791d:	in     al,0x30
  42791f:	xor    eax,0xfb58e981
  427924:	cmp    BYTE PTR [edi-0x62],0xb7
  427928:	mov    cl,0xcd
  42792a:	push   ebp
  42792b:	inc    ebp
  42792c:	add    edx,ebx
  42792e:	adc    al,0x33
  427930:	push   esi
  427931:	sub    eax,0x5dae3440
  427936:	or     DWORD PTR [edx+0x108fb5f4],ebp
  42793c:	aam    0xd9
  42793e:	or     eax,0x8122bf9a
  427943:	sub    BYTE PTR [esi+0x521b8008],ah
  427949:	sbb    esp,DWORD PTR [ecx+ebp*8+0x291215c7]
  427950:	test   al,0x77
  427952:	btr    esp,ebx
  427955:	retf   
  427956:	pop    ds
  427957:	je     0x427956
  427959:	mov    ah,0x46
  42795b:	mov    al,bl
  42795d:	lock fild WORD PTR [edi]
  427960:	cld    
  427961:	mov    eax,ds:0x770fcdee
  427966:	(bad)  
  427967:	je     0x427940
  427969:	ret    0xfac2
  42796c:	mov    cl,0xe6
  42796e:	js     0x42796d
  427970:	or     eax,0xd1de59f6
  427975:	dec    edx
  427976:	push   edx
  427977:	pop    ebx
  427978:	inc    eax
  427979:	sub    eax,0xc7d72e5c
  42797e:	mov    cl,0xd7
  427980:	sub    DWORD PTR [ecx+edi*1-0x4b],0x2d377a36
  427988:	adc    ecx,DWORD PTR [edi+esi*1]
  42798b:	mov    ecx,0x6be7e258
  427990:	or     eax,0xaac7aa23
  427995:	test   eax,0x3f08e926
  42799a:	leave  
  42799b:	ins    BYTE PTR es:[edi],dx
  42799c:	or     bl,dh
  42799e:	xor    dl,BYTE PTR [edi+0x38656ca8]
  4279a4:	call   0xc6448898
  4279a9:	dec    ebp
  4279aa:	xchg   esp,eax
  4279ab:	loopne 0x427a2b
  4279ad:	push   edi
  4279ae:	aas    
  4279af:	sub    ebp,DWORD PTR [edx+0x75fe62a7]
  4279b5:	bound  eax,QWORD PTR [ebx]
  4279b7:	das    
  4279b8:	ficomp WORD PTR [ecx-0x54e41b78]
  4279be:	mov    bh,0xa9
  4279c0:	jg     0x4279d2
  4279c2:	xchg   esi,eax
  4279c3:	test   al,0xb
  4279c5:	jbe    0x427970
  4279c7:	pop    edx
  4279c8:	jg     0x427973
  4279ca:	inc    edi
  4279cb:	cmp    dh,BYTE PTR ds:0x5fee53db
  4279d1:	mov    al,0x51
  4279d3:	push   ebx
  4279d4:	fisttp QWORD PTR [edi-0x15]
  4279d7:	pop    eax
  4279d8:	sub    DWORD PTR [eax],eax
  4279da:	push   ebp
  4279db:	fisttp QWORD PTR [edx]
  4279dd:	push   ebp
  4279de:	out    dx,al
  4279df:	jecxz  0x427a13
  4279e1:	jmp    0x4279e9
  4279e3:	sub    dh,BYTE PTR [ebp+0x1e1f0d8c]
  4279e9:	pop    es
  4279ea:	cmc    
  4279eb:	mov    bh,0xc
  4279ed:	aaa    
  4279ee:	mov    ah,0x75
  4279f0:	cdq    
  4279f1:	add    al,0x74
  4279f3:	int3   
  4279f4:	not    BYTE PTR [ecx-0x45]
  4279f7:	lahf   
  4279f8:	scas   al,BYTE PTR es:[edi]
  4279f9:	mov    bp,0x9902
  4279fd:	push   ecx
  4279fe:	sub    BYTE PTR cs:[ebx+0x50],bl
  427a02:	out    0x92,al
  427a04:	push   eax
  427a05:	ret    0xc051
  427a08:	mov    esi,0x26f7f9d8
  427a0d:	fcompp 
  427a0f:	pop    ds
  427a10:	imul   ebx,esp,0x43
  427a13:	pop    es
  427a14:	int    0x51
  427a16:	mov    DWORD PTR ds:0x4e19e9,0xf822449a
  427a20:	(bad)  
  427a21:	(bad)  
  427a22:	fisub  DWORD PTR [esi+0x62]
  427a25:	mov    eax,0xbe2f7475
  427a2a:	das    
  427a2b:	pop    ebx
  427a2c:	pop    es
  427a2d:	repnz add DWORD PTR [eax],eax
  427a30:	xchg   DWORD PTR [edx],eax
  427a32:	add    BYTE PTR [eax],al
  427a34:	mov    eax,0xda37aadb
  427a39:	push   esi
  427a3a:	stc    
  427a3b:	push   ebx
  427a3c:	jo     0x427a44
  427a3e:	stos   BYTE PTR es:[edi],al
  427a3f:	aas    
  427a40:	or     eax,0x35ceed62
  427a45:	cs jae 0x4279f3
  427a48:	cmp    BYTE PTR [edx],dl
  427a4a:	push   0xd1f8dba8
  427a4f:	les    ebx,FWORD PTR [ebx+0x3a]
  427a52:	sub    al,0x4
  427a54:	dec    ebp
  427a55:	lahf   
  427a56:	mov    eax,0x1edb0e56
  427a5b:	mov    bl,BYTE PTR [ebp-0x1093ec75]
  427a61:	xor    eax,0x85aa7b7f
  427a66:	ds and eax,0x84ffcc01
  427a6c:	jbe    0x427ab7
  427a6e:	fsub   DWORD PTR ss:[ecx]
  427a71:	jle    0x427a34
  427a73:	cli    
  427a74:	or     esp,DWORD PTR [edi-0x6acb017f]
  427a7a:	cmp    DWORD PTR [edx-0x6fe2f9bd],eax
  427a80:	inc    ebx
  427a81:	scas   eax,DWORD PTR es:[edi]
  427a82:	iret   
  427a83:	sub    al,0x1e
  427a85:	test   eax,0x20a373ba
  427a8a:	xchg   ebx,eax
  427a8b:	add    eax,0xa3fbcbe7
  427a90:	mov    al,0x5d
  427a92:	imul   ebx,DWORD PTR [eax+0x2f],0x6a
  427a96:	mov    eax,0xec2b79a8
  427a9b:	es stos BYTE PTR es:[edi],al
  427a9d:	sbb    edi,edx
  427a9f:	outs   dx,DWORD PTR ds:[esi]
  427aa0:	pop    edx
  427aa1:	int    0x58
  427aa3:	pop    es
  427aa4:	add    al,0x9e
  427aa6:	jge    0x427adb
  427aa8:	hlt    
  427aa9:	push   ecx
  427aaa:	adc    ebx,DWORD PTR [edx]
  427aac:	or     eax,0xb09f707b
  427ab1:	add    al,0x29
  427ab3:	jle    0x427a47
  427ab5:	sub    BYTE PTR [edx+0x78],bh
  427ab8:	sar    DWORD PTR [eax-0x17bbe99a],1
  427abe:	test   eax,0xb1e8bd21
  427ac3:	mov    ecx,0x11c90e45
  427ac8:	fnsave [ecx-0x2b]
  427acb:	add    eax,0xf37eb698
  427ad0:	xor    al,0xf1
  427ad2:	dec    ebx
  427ad3:	mov    edi,0xcdb571be
  427ad8:	test   al,0xb7
  427ada:	and    al,BYTE PTR ds:0xafb17332
  427ae0:	cmp    al,0x4c
  427ae2:	push   cs
  427ae3:	sbb    esp,DWORD PTR [edi+eax*1+0x70851f47]
  427aea:	pop    ebx
  427aeb:	jo     0x427b2c
  427aed:	mov    bh,0x40
  427aef:	ror    BYTE PTR [ebp*2+0x3f79d83c],0x96
  427af7:	mov    ebp,0x2958494d
  427afc:	stc    
  427afd:	cmp    al,0x76
  427aff:	push   eax
  427b00:	outs   dx,DWORD PTR ds:[esi]
  427b01:	jmp    0xb815f4c
  427b06:	mov    esp,0x46fa7984
  427b0b:	push   esi
  427b0c:	ret    
  427b0d:	(bad)  [esi+0x177f0f4b]
  427b13:	stos   BYTE PTR es:[edi],al
  427b14:	ins    BYTE PTR es:[edi],dx
  427b15:	add    ebp,ecx
  427b17:	or     edi,DWORD PTR [edx+0x776a6b9e]
  427b1d:	sbb    DWORD PTR [ebx-0x424beb3f],edx
  427b23:	int3   
  427b24:	add    eax,DWORD PTR [esi+0x402b3972]
  427b2a:	sub    eax,DWORD PTR [edi]
  427b2c:	mov    gs,WORD PTR [eax]
  427b2e:	fild   QWORD PTR [esi+0x11]
  427b31:	cmp    eax,0x5e5f929a
  427b36:	jmp    0x427b8b
  427b38:	and    BYTE PTR [ecx],bh
  427b3a:	cmp    cl,BYTE PTR [ecx]
  427b3c:	mov    ebx,0x1fc38e95
  427b41:	mov    ebx,0xb1a70c2f
  427b46:	jns    0x427b8c
  427b48:	dec    ecx
  427b49:	js     0x427add
  427b4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b4c:	iret   
  427b4d:	cmp    al,0x9a
  427b4f:	popa   
  427b50:	pop    edi
  427b51:	inc    esi
  427b52:	mov    BYTE PTR [edi+0x40],bh
  427b55:	push   0xffffffb9
  427b57:	aas    
  427b58:	nop
  427b59:	adc    BYTE PTR [eax-0x2a],al
  427b5c:	adc    edx,DWORD PTR [edi-0x21ccdb6a]
  427b62:	push   edi
  427b63:	fucomip st,st(6)
  427b65:	adc    eax,0x46bd57cd
  427b6a:	mov    al,0xac
  427b6c:	and    al,0xb0
  427b6e:	jg     0x427b51
  427b70:	mov    cl,0x25
  427b72:	gs push esp
  427b74:	push   edi
  427b75:	xchg   BYTE PTR [edi+0x2c],cl
  427b78:	jae    0x427afe
  427b7a:	(bad)  
  427b7b:	and    ebx,DWORD PTR [edx]
  427b7d:	test   eax,0xa3117f8e
  427b82:	sti    
  427b83:	add    dl,BYTE PTR [ebp+0x76]
  427b86:	jae    0x427be5
  427b88:	cmp    ch,BYTE PTR [edx+eax*4-0x5b]
  427b8c:	cmp    cl,BYTE PTR [ebx]
  427b8e:	fs icebp 
  427b90:	pop    edi
  427b91:	arpl   di,si
  427b93:	or     al,0xd2
  427b95:	and    ch,BYTE PTR [esi+0x3]
  427b98:	mov    ebx,0xb2c7588c
  427b9d:	lods   al,BYTE PTR ds:[esi]
  427b9e:	stc    
  427b9f:	jg     0x427bef
  427ba1:	jmp    0xa1a9e125
  427ba6:	aad    0x49
  427ba8:	pushf  
  427ba9:	fist   DWORD PTR [ebx+0x2972884e]
  427baf:	mov    al,BYTE PTR [edi]
  427bb1:	aam    0xf3
  427bb3:	retf   
  427bb4:	arpl   dx,dx
  427bb6:	div    DWORD PTR [eax+0x4114368b]
  427bbc:	dec    esi
  427bbd:	xor    cl,ch
  427bbf:	sub    DWORD PTR [esp+ecx*8+0x37bb636],esi
  427bc6:	and    BYTE PTR [eax+0x39],ch
  427bc9:	pop    esi
  427bca:	inc    ebp
  427bcb:	(bad)  
  427bcc:	ins    DWORD PTR es:[edi],dx
  427bcd:	loope  0x427ba9
  427bcf:	xchg   ebp,eax
  427bd0:	retf   
  427bd1:	sub    BYTE PTR [edx],al
  427bd3:	dec    edx
  427bd4:	clc    
  427bd5:	push   edx
  427bd6:	pop    ss
  427bd7:	inc    edx
  427bd8:	pop    ss
  427bd9:	dec    edx
  427bda:	test   eax,0x3258756e
  427bdf:	inc    DWORD PTR [eax+0x3d]
  427be2:	mov    ch,0xfc
  427be4:	mov    ds:0x72bbf0bf,eax
  427be9:	sbb    BYTE PTR [edx],bh
  427beb:	xor    esi,DWORD PTR [ebx]
  427bed:	test   BYTE PTR [eax+0x11],al
  427bf0:	leave  
  427bf1:	adc    BYTE PTR [eax+0x20],0x9f
  427bf5:	out    0x49,eax
  427bf7:	xchg   ebx,eax
  427bf8:	mov    al,0x61
  427bfa:	jge    0x427c23
  427bfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427bfd:	fidivr WORD PTR [ecx-0x1]
  427c00:	sbb    DWORD PTR [eax],ebx
  427c02:	adc    esp,DWORD PTR [eax]
  427c04:	dec    esi
  427c05:	pusha  
  427c06:	and    eax,0xc8625138
  427c0b:	lds    esi,FWORD PTR [edi]
  427c0d:	add    ah,BYTE PTR [ebx+0x6ae18f4f]
  427c13:	(bad)  [eax]
  427c15:	pop    ds
  427c16:	icebp  
  427c17:	jg     0x427bc5
  427c19:	ret    
  427c1a:	cdq    
  427c1b:	push   ss
  427c1c:	sbb    ebp,DWORD PTR ds:[eax]
  427c1f:	sbb    DWORD PTR [eax+0x5ac84106],eax
  427c25:	sub    BYTE PTR [eax],cl
  427c27:	loopne 0x427c02
  427c29:	leave  
  427c2a:	in     eax,dx
  427c2b:	push   0x2fef77d4
  427c30:	jp     0x427bdb
  427c32:	loop   0x427c59
  427c34:	mov    sp,0x895b
  427c38:	mov    edi,0xa4b75940
  427c3d:	cmp    al,0xed
  427c3f:	push   ebp
  427c40:	mov    BYTE PTR [esi+esi*4+0x1c],0x25
  427c45:	dec    esi
  427c46:	imul   ebp,DWORD PTR ds:0xacf92598,0x22
  427c4d:	push   esi
  427c4e:	xor    bh,dl
  427c50:	inc    ebp
  427c51:	ins    DWORD PTR es:[edi],dx
  427c52:	cmc    
  427c53:	cs dec ebp
  427c55:	call   0x6a0a:0x9e7e0af1
  427c5c:	sub    cl,BYTE PTR [esi]
  427c5e:	sbb    DWORD PTR [edx-0x134e424],ecx
  427c64:	neg    ebp
  427c66:	and    edx,ebp
  427c68:	cmc    
  427c69:	jae    0x427c4d
  427c6b:	arpl   WORD PTR [edi+0x48],di
  427c6e:	std    
  427c6f:	push   es
  427c70:	adc    DWORD PTR [ebx-0x4ec66fa9],esi
  427c76:	shl    DWORD PTR [ecx-0x2e],0xce
  427c7a:	mov    bh,0xbb
  427c7c:	push   ebp
  427c7d:	add    esi,edi
  427c7f:	and    BYTE PTR [eax],bh
  427c81:	(bad)  
  427c82:	(bad)  
  427c83:	sbb    eax,0x25a48173
  427c88:	jns    0x427c8a
  427c8a:	mov    cl,0xd0
  427c8c:	int3   
  427c8d:	or     edx,DWORD PTR [edx+0x89f015c]
  427c93:	mov    bl,0x9a
  427c95:	push   edi
  427c96:	mov    fs,edx
  427c98:	or     edx,DWORD PTR [ecx+eax*8]
  427c9b:	aas    
  427c9c:	jns    0x427c4a
  427c9e:	push   ecx
  427c9f:	popa   
  427ca0:	clc    
  427ca1:	mov    DWORD PTR [edi],esp
  427ca3:	pushf  
  427ca4:	icebp  
  427ca5:	(bad)
  427ca8:	sti    
  427ca9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427caa:	xchg   esi,eax
  427cab:	imul   ebx,DWORD PTR [eax],0xffffffb2
  427cae:	and    al,0xa7
  427cb0:	add    eax,0xca9231c2
  427cb5:	pop    ebx
  427cb6:	pop    ebp
  427cb7:	sbb    eax,0x44177
  427cbc:	nop
  427cbd:	stos   DWORD PTR es:[edi],eax
  427cbe:	es ret 
  427cc0:	aas    
  427cc1:	iret   
  427cc2:	cmc    
  427cc3:	sti    
  427cc4:	pushf  
  427cc5:	ds loop 0x427cb4
  427cc8:	push   ds
  427cc9:	lods   al,BYTE PTR ds:[esi]
  427cca:	aas    
  427ccb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ccc:	mov    ?,esp
  427cce:	add    DWORD PTR [eax],eax
  427cd0:	xchg   DWORD PTR [edx],eax
  427cd2:	add    BYTE PTR [eax],al
  427cd4:	adc    DWORD PTR [ebx],edx
  427cd6:	call   0x3fe4:0xc98fb0cf
  427cdd:	cmp    edi,DWORD PTR [ebx+edi*4]
  427ce0:	add    DWORD PTR [edi-0x4c],esi
  427ce3:	mov    BYTE PTR [edx+0x1a2f4c4],bh
  427ce9:	retf   0xafc6
  427cec:	repnz inc esp
  427cee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427cef:	pusha  
  427cf0:	into   
  427cf1:	(bad)  
  427cf2:	and    BYTE PTR [edx+edx*2-0x52],cl
  427cf6:	dec    esi
  427cf7:	adc    al,0xde
  427cf9:	sbb    DWORD PTR [ebp-0x31be1bac],ebx
  427cff:	xor    eax,0x857ef953
  427d04:	mov    ds:0x799a4d21,eax
  427d09:	ds fwait
  427d0b:	mov    esp,0x16354c89
  427d10:	fcmovnbe st,st(1)
  427d12:	(bad)  
  427d13:	push   cs
  427d14:	inc    ecx
  427d15:	jne    0x427d86
  427d17:	mov    BYTE PTR [edi+ebp*8],ah
  427d1a:	(bad)
  427d1d:	jge    0x427cb9
  427d1f:	add    dh,dl
  427d21:	mov    ds:0xfc47dd84,eax
  427d26:	scas   eax,DWORD PTR es:[edi]
  427d27:	mov    esp,0x1ccfda86
  427d2c:	in     al,0xdc
  427d2e:	cmp    DWORD PTR ds:0xc1fe3780,ebx
  427d34:	in     eax,dx
  427d35:	mov    esi,0x59e6c5ef
  427d3a:	scas   eax,DWORD PTR es:[edi]
  427d3b:	jecxz  0x427d42
  427d3d:	adc    dh,BYTE PTR [esi-0x29]
  427d40:	jge    0x427cd2
  427d42:	push   ecx
  427d43:	dec    ebp
  427d44:	out    dx,al
  427d45:	lods   eax,DWORD PTR ds:[esi]
  427d46:	mov    edi,0xfa35fe08
  427d4b:	adc    BYTE PTR [edi+0x78],0x73
  427d4f:	jge    0x427d85
  427d51:	ds fdivrp st(1),st
  427d54:	mov    ebx,0x37e60ff0
  427d59:	add    ebp,ebp
  427d5b:	mov    esp,0x6ca2b81b
  427d60:	in     al,0x1
  427d62:	pop    eax
  427d63:	test   DWORD PTR [ebp-0x3f],ecx
  427d66:	dec    esp
  427d67:	ret    
  427d68:	sahf   
  427d69:	cmp    eax,0xe1d503e0
  427d6e:	cs gs leave 
  427d71:	mov    al,ds:0x9596a0b9
  427d76:	jno    0x427d12
  427d78:	dec    ebp
  427d79:	sbb    al,0x4d
  427d7b:	push   es
  427d7c:	popf   
  427d7d:	fs or  cl,dh
  427d80:	sub    esi,edi
  427d82:	mov    al,0x6e
  427d84:	out    0xd0,al
  427d86:	aaa    
  427d87:	nop
  427d88:	mov    al,ds:0xdefb50ef
  427d8d:	retf   0xb142
  427d90:	or     eax,DWORD PTR ds:0xaee32517
  427d96:	imul   edx,DWORD PTR [ecx],0xffffffc3
  427d99:	cmp    ebx,eax
  427d9b:	sahf   
  427d9c:	adc    BYTE PTR [edi-0x36],cl
  427d9f:	cmp    DWORD PTR [ebp*2-0x52dee48c],0xa205f6bd
  427daa:	addr16 (bad) 
  427dac:	(bad)  
  427dad:	pop    eax
  427dae:	iret   
  427daf:	test   eax,0xa0a82c9d
  427db4:	dec    esp
  427db5:	data16 clc 
  427db7:	push   0x6cd27c5c
  427dbc:	sahf   
  427dbd:	jl     0x427dfa
  427dbf:	or     al,0xb8
  427dc1:	sbb    edx,DWORD PTR [ecx]
  427dc3:	push   ebp
  427dc4:	pop    eax
  427dc5:	gs test ebp,ebp
  427dc8:	shl    dh,1
  427dca:	je     0x427e40
  427dcc:	pop    ds
  427dcd:	call   0xa4e1:0x729a2422
  427dd4:	push   esi
  427dd5:	cwde   
  427dd6:	ins    BYTE PTR es:[edi],dx
  427dd7:	mov    cl,0x35
  427dd9:	(bad)  
  427dda:	push   0x5a897468
  427ddf:	dec    edx
  427de0:	xchg   edx,eax
  427de1:	adc    edi,DWORD PTR [eax+0x3a]
  427de4:	cmp    eax,0x653ef5e5
  427de9:	xor    eax,0x34a90aa5
  427dee:	mov    esp,0xabd2fd38
  427df3:	les    ebp,FWORD PTR [edi]
  427df5:	and    eax,0x15ad5004
  427dfa:	dec    edx
  427dfb:	mov    dh,0xf7
  427dfd:	xchg   esi,eax
  427dfe:	fisttp QWORD PTR [eax-0x1b]
  427e01:	mov    BYTE PTR [edx+ebx*2+0x3e],dh
  427e05:	inc    edi
  427e06:	xchg   BYTE PTR [edi+0x83ae4e6],al
  427e0c:	jle    0x427e48
  427e0e:	push   ss
  427e0f:	xchg   DWORD PTR [ebp+0x2e8af1fd],ebx
  427e15:	inc    esi
  427e16:	xor    BYTE PTR [eax-0x58],dh
  427e19:	rcr    DWORD PTR [ebx],0xca
  427e1c:	mov    edx,0xdd90788a
  427e21:	ss sahf 
  427e23:	sbb    eax,ebx
  427e25:	xchg   esp,eax
  427e26:	mov    al,ds:0x5eace33
  427e2b:	mov    ebx,0xc159bec6
  427e30:	lea    edx,[edi]
  427e32:	repnz or dl,BYTE PTR [eax+0x565c19e8]
  427e39:	fwait
  427e3a:	scas   eax,DWORD PTR es:[edi]
  427e3b:	jle    0x427dce
  427e3d:	xor    al,0xb8
  427e3f:	cli    
  427e40:	mov    dh,bl
  427e42:	stos   BYTE PTR es:[edi],al
  427e43:	lock mov WORD PTR [eax+0x23],es
  427e47:	ss into 
  427e49:	inc    ebp
  427e4a:	sub    ebx,DWORD PTR [edi-0x3b45909e]
  427e50:	sbb    eax,0x721d2ead
  427e55:	push   eax
  427e56:	lock mov eax,0x73c5bee9
  427e5c:	call   ebx
  427e5e:	(bad)  
  427e5f:	and    DWORD PTR [ebx],edx
  427e61:	jge    0x427eca
  427e63:	mov    ecx,0x25d0ae30
  427e68:	xor    dh,ah
  427e6a:	retf   
  427e6b:	mov    eax,0x784f77dd
  427e70:	dec    ebp
  427e71:	test   al,0x1f
  427e73:	into   
  427e74:	push   ecx
  427e75:	xor    bl,BYTE PTR [ebx-0x68730a9a]
  427e7b:	out    0x48,al
  427e7d:	mov    ds:0xf9be1833,eax
  427e82:	pushf  
  427e83:	or     ebx,ebp
  427e85:	sti    
  427e86:	adc    al,0x61
  427e88:	pop    edx
  427e89:	scas   al,BYTE PTR es:[edi]
  427e8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e8b:	les    ebx,FWORD PTR [ecx+edx*4]
  427e8e:	cmc    
  427e8f:	jle    0x427e94
  427e91:	ss out 0x6a,eax
  427e94:	es (bad) 
  427e96:	neg    BYTE PTR [ebp+edx*4+0x3a19b388]
  427e9d:	adc    al,0xbb
  427e9f:	clc    
  427ea0:	inc    ebp
  427ea1:	add    ebx,DWORD PTR [ebx]
  427ea3:	pop    ebp
  427ea4:	jb     0x427eb4
  427ea6:	cs pusha 
  427ea8:	mov    esi,0xc08b0003
  427ead:	mov    eax,0x5aa2441d
  427eb2:	or     eax,0x34d9f72d
  427eb7:	call   0x84b0:0x35f34f6b
  427ebe:	xchg   BYTE PTR [esi+0x52a01ffb],ah
  427ec4:	adc    BYTE PTR [ebp+0xfa1997e],ch
  427eca:	sbb    al,0x86
  427ecc:	cli    
  427ecd:	inc    ebp
  427ece:	cld    
  427ecf:	xchg   ebp,eax
  427ed0:	xlat   BYTE PTR ds:[ebx]
  427ed1:	jae    0x427eab
  427ed3:	stos   DWORD PTR es:[edi],eax
  427ed4:	ja     0x427f19
  427ed6:	fdivr  QWORD PTR [edx-0x48]
  427ed9:	mov    edi,0xcac568fb
  427ede:	ret    
  427edf:	pop    eax
  427ee0:	add    cl,BYTE PTR [edi+0x76aaef52]
  427ee6:	shl    dh,cl
  427ee8:	or     DWORD PTR [esi+0x6005b444],ebx
  427eee:	jno    0x427efb
  427ef0:	cdq    
  427ef1:	aad    0xe8
  427ef3:	mov    bl,0x28
  427ef5:	cwde   
  427ef6:	call   0xaa569082
  427efb:	mov    al,0x1c
  427efd:	out    dx,al
  427efe:	jne    0x427ec5
  427f00:	outs   dx,BYTE PTR ds:[esi]
  427f01:	jno    0x427f58
  427f03:	sub    al,0x2e
  427f05:	je     0x427e91
  427f07:	mov    ebx,0x8bbef482
  427f0c:	adc    BYTE PTR ds:0x6c58997e,0x7f
  427f13:	ror    bh,cl
  427f15:	push   eax
  427f16:	(bad)  
  427f17:	push   ss
  427f18:	out    0x64,al
  427f1a:	mov    al,0xe6
  427f1c:	and    ecx,DWORD PTR [esi-0x44d7791f]
  427f22:	adc    ebp,ebp
  427f24:	push   es
  427f25:	shl    BYTE PTR [edx],1
  427f27:	inc    esp
  427f28:	push   edi
  427f29:	scas   al,BYTE PTR es:[edi]
  427f2a:	sbb    al,0x1a
  427f2c:	jp     0x427ef3
  427f2e:	neg    BYTE PTR [ebp-0x20]
  427f31:	adc    eax,0x9993d666
  427f36:	jo     0x427f43
  427f38:	sub    al,0xa
  427f3a:	push   esp
  427f3b:	call   0xe25e:0x62ecd916
  427f42:	enter  0x3adc,0x24
  427f46:	cmp    cl,dl
  427f48:	and    BYTE PTR [ecx-0xc836541],bl
  427f4e:	xchg   esi,eax
  427f4f:	xchg   ebx,eax
  427f50:	adc    DWORD PTR [esi],esp
  427f52:	sub    al,0x80
  427f54:	dec    esi
  427f55:	adc    BYTE PTR [edx+0x69436800],bh
  427f5b:	add    ch,bh
  427f5d:	cmp    DWORD PTR ds:0xfd1cf514,esi
  427f63:	stc    
  427f64:	int    0xea
  427f66:	xor    al,al
  427f68:	(bad)  
  427f69:	mov    dl,0x66
  427f6b:	int    0x15
  427f6d:	test   DWORD PTR [ecx],0x28100
  427f73:	add    BYTE PTR [edi],al
  427f75:	ror    BYTE PTR [eax],0x6a
  427f78:	std    
  427f79:	out    dx,al
  427f7a:	adc    eax,0x23530615
  427f7f:	cmp    BYTE PTR [esi],0xc2
  427f82:	push   0xffffff93
  427f84:	pushw  cs
  427f86:	adc    ch,BYTE PTR [ebp+0x77a890d5]
  427f8c:	ja     0x428001
  427f8e:	into   
  427f8f:	cmp    eax,ebp
  427f91:	pop    ss
  427f92:	push   ss
  427f93:	or     BYTE PTR [edx-0x4d743ef3],0x6c
  427f9a:	cmp    DWORD PTR [ecx+0x9d03f45],0x8310ecc3
  427fa4:	imul   eax,edi,0xffffff87
  427fa7:	pop    edi
  427fa8:	or     BYTE PTR [ecx+0xec84606],bl
  427fae:	sbb    BYTE PTR [esi-0x1aafa54d],al
  427fb4:	cmp    DWORD PTR [edi+ecx*8-0x7e],0xffffff93
  427fb9:	mov    eax,0x65a91e61
  427fbe:	and    eax,0xf7c2da3
  427fc3:	sbb    DWORD PTR [edx+0x78c2ca63],eax
  427fc9:	fadd   QWORD PTR [eax+edx*4]
  427fcc:	loope  0x427f6b
  427fce:	ins    DWORD PTR es:[edi],dx
  427fcf:	into   
  427fd0:	mov    ebp,tr5
  427fd3:	test   bh,al
  427fd5:	iret   
  427fd6:	nop
  427fd7:	mov    esi,0x22297982
  427fdc:	int    0x6f
  427fde:	push   ecx
  427fdf:	in     ax,dx
  427fe1:	stc    
  427fe2:	jg     0x427fee
  427fe4:	push   0x67080c94
  427fe9:	add    al,0x60
  427feb:	hlt    
  427fec:	mov    dh,0x2
  427fee:	mov    ah,0xa6
  427ff0:	lods   eax,DWORD PTR ds:[esi]
  427ff1:	clc    
  427ff2:	repnz rcl BYTE PTR [ecx+0x25],1
  427ff6:	je     0x428029
  427ff8:	shl    BYTE PTR [edx+0x35d52413],0xcc
  427fff:	inc    esp
  428000:	xlat   BYTE PTR ds:[ebx]
  428001:	fucom  st(5)
  428003:	loop   0x428043
  428005:	scas   eax,DWORD PTR es:[edi]
  428006:	push   eax
  428007:	mov    dh,0x30
  428009:	jge    0x427fe1
  42800b:	or     ch,dh
  42800d:	xlat   BYTE PTR ds:[ebx]
  42800e:	push   ds
  42800f:	int    0xb2
  428011:	and    edx,DWORD PTR [ebx-0x587ed17f]
  428017:	adc    BYTE PTR [ebx-0x2d3bfc29],cl
  42801d:	mov    eax,0x9264f189
  428022:	in     eax,dx
  428023:	cmp    BYTE PTR [edi-0xe8f656f],cl
  428029:	aas    
  42802a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42802b:	cwde   
  42802c:	ud0    edx,DWORD PTR [esi]
  42802f:	(bad)  
  428030:	sub    ecx,DWORD PTR [ecx-0xb]
  428033:	push   DWORD PTR ds:0x507e5bf3
  428039:	inc    ebx
  42803a:	and    DWORD PTR [eax],ebp
  42803c:	mov    ebx,0xa377a059
  428041:	lods   al,BYTE PTR es:[esi]
  428043:	jmp    0x8732:0x1f94b21
  42804a:	rcr    ebx,0x30
  42804d:	sti    
  42804e:	pop    eax
  42804f:	pushf  
  428050:	adc    al,0x5
  428052:	fs xchg edx,eax
  428054:	cmp    al,0x52
  428056:	lea    ebx,[ebx-0x66]
  428059:	imul   esp,DWORD PTR [esi+0xcc3afc3],0x2afea8c4
  428063:	mov    dh,0xe9
  428065:	popf   
  428066:	stc    
  428067:	xchg   ecx,eax
  428068:	adc    esp,ebx
  42806a:	xor    BYTE PTR [ecx+0x3b],dl
  42806d:	and    bh,ch
  42806f:	sub    ax,0x235b
  428073:	xchg   esi,eax
  428074:	jle    0x428026
  428076:	xlat   BYTE PTR ds:[ebx]
  428077:	mov    ebx,edx
  428079:	(bad)  
  42807a:	stc    
  42807b:	sbb    BYTE PTR [edx-0x2910e713],ah
  428081:	dec    edx
  428082:	push   ebp
  428083:	push   0x6730b8a1
  428088:	daa    
  428089:	ja     0x4280b7
  42808b:	arpl   WORD PTR [esi+edi*8],sp
  42808e:	mov    edi,0x4d1462a0
  428093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428094:	int    0x60
  428096:	lahf   
  428097:	dec    esp
  428098:	mov    ecx,0x8f8e325e
  42809d:	rcr    DWORD PTR [ecx+0xabf2e3d],cl
  4280a3:	ins    DWORD PTR es:[edi],dx
  4280a4:	stos   BYTE PTR es:[edi],al
  4280a5:	mov    cl,BYTE PTR [esi-0x3bb92d08]
  4280ab:	or     eax,0x4b
  4280ae:	popf   
  4280af:	cmp    ecx,DWORD PTR [ebp-0x70531364]
  4280b5:	clc    
  4280b6:	aam    0x2
  4280b8:	pop    eax
  4280b9:	test   ebx,edx
  4280bb:	cmp    dl,dh
  4280bd:	les    esi,FWORD PTR [esi+0x27298bd]
  4280c3:	inc    ebx
  4280c4:	mov    al,ds:0x65b7df77
  4280c9:	mov    ch,0x27
  4280cb:	jmp    0xa4d2:0xd558e221
  4280d2:	xchg   ebp,eax
  4280d3:	jae    0x428097
  4280d5:	mov    eax,0x876ec0b0
  4280da:	test   DWORD PTR [eax-0x1089d331],esp
  4280e0:	xchg   esp,eax
  4280e1:	lahf   
  4280e2:	jmp    0x30c6:0x4e81e01e
  4280e9:	dec    edx
  4280ea:	jmp    0xf77c4b4a
  4280ef:	ficom  DWORD PTR [esi+0x27e469bf]
  4280f5:	inc    esi
  4280f6:	or     al,BYTE PTR [ebx-0x231f0945]
  4280fc:	mov    ah,0x6f
  4280fe:	cmc    
  4280ff:	pop    DWORD PTR [eax-0x6e]
  428102:	mov    ds:0x5373a19a,al
  428107:	out    dx,al
  428108:	out    0x7a,al
  42810a:	mov    bl,0x14
  42810c:	mov    eax,DWORD PTR [eax]
  42810e:	jns    0x42812b
  428110:	mov    ds:0x32067c4a,eax
  428115:	js     0x42812b
  428117:	mov    al,ds:0x48ece713
  42811c:	scas   al,BYTE PTR es:[edi]
  42811d:	and    eax,0xf1b0cb5c
  428122:	imul   edi,DWORD PTR [esi],0x16
  428125:	xor    al,bl
  428127:	jle    0x42817d
  428129:	jle    0x42816e
  42812b:	ins    BYTE PTR es:[edi],dx
  42812c:	ret    0x998e
  42812f:	jmp    0x9347:0xa5d84a12
  428136:	add    eax,0x634c955b
  42813b:	call   0x9a644fc0
  428140:	mov    eax,ds:0x723f40ef
  428145:	iret   
  428146:	icebp  
  428147:	sub    al,0x39
  428149:	dec    edi
  42814a:	sbb    BYTE PTR ds:0xcfdd216b,0x6d
  428151:	in     al,0xeb
  428153:	xor    edx,DWORD PTR [ecx+edi*4-0x6e226531]
  42815a:	dec    esp
  42815b:	fistp  QWORD PTR [ecx-0x5d]
  42815e:	std    
  42815f:	pushf  
  428160:	aaa    
  428161:	mov    edx,0x93d78dca
  428166:	mov    al,0x34
  428168:	enter  0x2a1a,0x6c
  42816c:	sbb    al,0x3a
  42816e:	lock fs mov esp,0x279d864d
  428175:	fnstcw WORD PTR [ecx+0x13]
  428178:	repz dec eax
  42817a:	ins    BYTE PTR es:[edi],dx
  42817b:	pop    edx
  42817c:	mov    ds:0xf466f582,eax
  428181:	jecxz  0x42815b
  428183:	sbb    dh,al
  428185:	dec    eax
  428186:	and    eax,0x5e08d4a8
  42818b:	fwait
  42818c:	call   0xb0e9:0xf97e2c86
  428193:	xor    BYTE PTR [eax+ebp*8+0x28],dh
  428197:	push   edx
  428198:	ror    DWORD PTR [eax-0x19a964dc],1
  42819e:	mov    BYTE PTR [edi],0xd9
  4281a1:	or     BYTE PTR [ecx],dl
  4281a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281a4:	mov    dh,0x44
  4281a6:	jne    0x4281b1
  4281a8:	int    0xac
  4281aa:	add    DWORD PTR [ebx+0x2f],esi
  4281ad:	xor    ecx,edx
  4281af:	mov    bh,0xf9
  4281b1:	scas   al,BYTE PTR es:[edi]
  4281b2:	adc    edx,0x74
  4281b5:	jg     0x42813f
  4281b7:	pop    eax
  4281b8:	mov    bl,0xd8
  4281ba:	pushf  
  4281bb:	jmp    0xf089:0x4bc51df0
  4281c2:	imul   ebp,DWORD PTR [ebx+0x25],0x41
  4281c6:	fdiv   QWORD PTR [eax+0x6a]
  4281c9:	retf   
  4281ca:	div    BYTE PTR [bx+di+0x3f6]
  4281cf:	or     ebp,edi
  4281d1:	or     al,0x1e
  4281d3:	sub    BYTE PTR cs:[ebx-0x315c4868],0x7c
  4281db:	loope  0x42824b
  4281dd:	pop    ebp
  4281de:	xor    al,0x55
  4281e0:	fisttp QWORD PTR [ecx-0x29]
  4281e3:	jnp    0x42819f
  4281e5:	add    eax,0x74a4abff
  4281ea:	test   eax,0xf6e62731
  4281ef:	mov    bh,0x6d
  4281f1:	sub    dl,BYTE PTR [esi+eax*1]
  4281f4:	jo     0x4281f6
  4281f6:	add    BYTE PTR [eax],al
  4281f8:	add    BYTE PTR [eax],al
	...
